sbb
add
add
int3
fst
jl
jecxz
cmc
fwait
in
jbe
jmp
jge
fs
aam
into
repz
cmp
aad
test
sbb
push
push
inc
in
das
push
jbe
or
lea
paddb
or
pinsrw
jmp
daa
repnz
and
add
std
mov
aad
aas
dec
sti
xchg
fdivr
adc
repz
xchg
icebp
sub
push
leave
jecxz
ins
push
cmp
test
inc
aas
xor
inc
sub
xchg
or
xchg
shl
sub
cmc
dec
adc
outs
into
jecxz
inc
push
xchg
les
push
mov
inc
cmp
mov
shr
call
jno
retf
cld
push
lea
and
jnp
or
inc
push
sbb
arpl
xchg
push
dec
add
sbb
ins
or
jmp
jbe
push
pop
lea
pop
sbb
and
inc
pop
clc
ins
repnz
int
movs
xchg
jl
aam
hlt
or
and
add
sbb
fisttp
nop
ja
ror
mov
ds
mov
into
jge
retf
int3
and
pushf
or
push
inc
jno
das
fisubr
out
fild
add
cmp
and
mov
push
jns
mov
pop
push
xlat
scas
mov
mov
jnp
or
xchg
adc
pop
shl
mov
(bad)
fnsave
adc
mov
scas
dec
in
xor
push
imul
xchg
fdivr
test
xchg
fdiv
aas
and
inc
dec
lahf
mov
leave
pop
mov
enter
arpl
popa
cmp
arpl
stc
jno
jecxz
mov
das
loopne
pop
cli
xchg
mov
or
sub
loop
sub
cmp
push
fcmovnb
stos
jmp
xchg
mov
es
xlat
retf
add
cmp
inc
popa
lods
fst
jg
push
in
mov
call
ins
and
add
in
jb
hlt
outs
push
add
retf
call
push
sbb
test
shl
test
daa
scas
mov
jnp
inc
sbb
mov
xor
aad
mov
hlt
mov
pusha
imul
sub
sahf
das
shr
add
dec
jmp
push
mov
sahf
test
xor
mov
cmps
in
stos
jmp
neg
pop
xchg
cld
and
sti
fwait
bound
xor
sub
(bad)
loopne
dec
in
sbb
repz
fidivr
and
xchg
or
icebp
pop
in
fwait
popf
in
pmuludq
ds
cdq
inc
cmp
retf
sbb
xor
pop
pop
jmp
fild
jmp
sbb
pop
loopne
mov
mov
ins
out
arpl
xor
jbe
rol
clc
sub
cli
in
mov
push
mov
data16
xchg
rol
adc
xchg
adc
cmps
ins
add
or
mov
rcl
not
inc
add
fcomp
jmp
jns
adc
jbe
sub
pop
jmp
ins
loopne
mov
aaa
xor
(bad)
clc
arpl
std
data16
fmul
adc
xchg
mov
jno
adc
or
jbe
jmp
repz
(bad)
fisttp
out
or
xchg
pop
cli
adc
sahf
pop
pop
xor
ins
jge
pop
call
popa
xor
fsub
xchg
dec
mov
shl
(bad)
ficom
sub
push
adc
(bad)
cdq
pop
xchg
jnp
test
sub
xchg
loop
(bad)
scas
xor
pop
push
or
add
cmc
fstp
xchg
pop
jo
push
cmp
(bad)
dec
dec
pusha
repnz
cdq
and
add
cmp
push
inc
and
clc
jge
add
mov
shl
jns
jne
icebp
fs
aam
loope
cs
xor
fmul
adc
mov
mov
and
(bad)
int3
pop
ds
pop
dec
adc
adc
js
mov
fild
sbb
lods
jmp
(bad)
sbb
lea
push
sub
cmps
or
pushf
or
hlt
scas
and
bound
popa
mov
add
cmc
push
adc
popa
movs
mov
movs
js
jmp
test
pop
out
jb
(bad)
ins
xor
int
fs
push
outs
jae
pushf
inc
mov
pop
sub
sbb
push
and
xor
into
ja
xchg
mov
mov
jne
inc
or
int3
mov
icebp
mov
dec
cmp
xchg
mov
jbe
and
ret
loop
xchg
xor
repnz
retf
repz
jns
dec
bound
mov
dec
mov
aam
stos
xor
sbb
xor
shl
inc
and
add
xchg
push
outs
or
mov
(bad)
jmp
or
sub
popa
jb
and
inc
push
jmp
add
or
sub
nop
scas
jne
cmovnp
mov
stos
fsub
pop
loopne
pop
jb
sub
scas
ja
test
sbb
jg
dec
xor
mov
loopne
scas
and
sbb
jmp
outs
xchg
cmp
and
cmp
mov
clc
adc
or
pop
add
inc
sub
sbb
aaa
aaa
inc
ja
adc
or
mov
(bad)
xchg
mov
xchg
mov
addr16
cs
mul
and
mov
in
xchg
xor
movs
jmp
sbb
push
mov
jl
push
repnz
pusha
sub
adc
inc
outs
sub
jae
inc
clc
bound
das
std
in
mov
int3
pop
ficomp
fld
test
push
scas
ret
add
dec
in
cmp
jg
imul
sbb
clc
jmp
outs
inc
push
sbb
add
dec
retf
pop
or
fild
mov
inc
scas
adc
inc
push
std
mov
test
mov
dec
rol
pop
mov
push
aas
mov
push
cmp
sti
push
push
adc
cmp
das
sbb
jle
in
(bad)
dec
ret
cmps
add
imul
xlat
(bad)
push
stos
xchg
mov
push
out
dec
jns
mov
sar
div
mov
xchg
jge
pop
stos
in
lds
sti
or
scas
mov
icebp
data16
inc
lock
not
adc
push
push
test
mov
dec
add
pop
pop
and
xor
dec
or
mov
je
ins
mov
or
inc
adc
mov
mov
pop
stos
jnp
test
aaa
xor
shl
xchg
pop
(bad)
das
jnp
and
(bad)
in
repnz
add
int3
pop
cmps
cli
jl
sub
adc
push
cs
pop
mov
dec
out
hlt
xor
xchg
lock
mov
dec
fst
int3
mov
dec
call
and
sub
mov
imul
imul
movs
mov
out
pop
shl
fadd
fisub
ja
xchg
adc
xor
or
push
cmp
jmp
sbb
mov
(bad)
nop
leave
push
mov
mov
sbb
das
inc
mov
inc
inc
and
mov
inc
pop
nop
inc
xchg
ja
mov
stc
mov
(bad)
pop
fisub
scas
pop
or
mov
add
or
dec
sti
mov
lock
dec
inc
add
lods
shl
ss
test
pop
jo
jb
aaa
ins
repz
mov
fs
adc
dec
jge
outs
ficomp
mov
cdq
rol
outs
or
pop
pop
xlat
or
adc
dec
sbb
popf
xchg
stc
cmc
pop
loope
inc
call
imul
sub
or
adc
sbb
sbb
xchg
test
and
bnd
jp
mov
and
xchg
aad
popf
ret
addr16
fadd
and
leave
pop
(bad)
cs
out
mov
dec
stos
cmp
mov
mov
xchg
rcr
add
fdiv
addr16
loopne
cli
mov
cmp
nop
dec
shl
add
(bad)
shr
push
cmps
add
pop
inc
mov
ins
cwde
adc
xor
xchg
jmp
mov
call
mov
mov
outs
and
das
mov
or
push
lea
fs
push
popf
loope
pop
cmps
stos
sub
call
mov
sub
(bad)
pop
test
dec
or
popf
aaa
adc
cwde
inc
jns
mov
xchg
push
inc
ds
add
sbb
xchg
repz
loopne
mov
mov
sti
sub
dec
scas
rol
mov
push
out
xor
jns
setbe
dec
in
adc
push
lock
fadd
sbb
pushf
and
bound
sti
pop
fcos
imul
sub
icebp
sbb
nop
daa
loope
lds
adc
in
mov
sub
push
adc
push
data16
sub
test
inc
push
or
inc
ret
inc
mov
int
inc
test
jmp
std
jo
push
lods
cmc
lods
sub
add
or
call
mov
push
mov
cmp
or
loope
sar
mov
gs
mov
mov
cld
je
(bad)
sti
(bad)
ja
fisubr
adc
test
mov
pop
xchg
je
xchg
fcomi
jb
mov
rcr
adc
inc
das
add
xor
loope
inc
xor
outs
into
mov
mov
or
push
add
jns
in
leave
and
daa
xor
in
fmul
dec
movs
mov
pop
js
jne
or
jmp
cmps
jge
fdiv
imul
test
movs
mov
inc
or
pop
les
mov
or
call
(bad)
fisttp
les
mov
mov
cmp
mov
xchg
ret
mov
mov
cmps
cmps
loope
ja
cmps
rcr
inc
mov
dec
jns
idiv
dec
jmp
pop
sar
jmp
sbb
scas
popw
or
mov
pop
push
push
aam
je
ins
mul
mov
(bad)
xchg
adc
jae
mov
fbld
dec
ret
stos
xor
or
and
test
bound
ja
in
xor
dec
in
xchg
push
xchg
in
inc
cmp
jg
js
fdivr
js
push
dec
push
cmp
xchg
scas
ins
faddp
das
shl
cld
push
loopne
xchg
outs
xor
mov
sub
cmp
push
ins
sti
pop
(bad)
daa
pop
retf
and
icebp
or
outs
sti
pusha
aas
sub
mov
sbb
lock
test
xlat
xchg
nop
dec
pushf
or
arpl
cmps
pop
dec
ret
mov
icebp
mov
inc
add
xor
pop
hlt
loope
leave
sbb
test
jmp
xchg
imul
stos
test
adc
inc
inc
adc
out
pop
(bad)
data16
sub
sar
xlat
or
loopne
mov
pop
mov
cmps
(bad)
outs
jge
add
lods
fwait
mov
lods
adc
xor
je
enter
xor
ficom
add
inc
shr
lds
jo
out
dec
mov
test
and
shr
sahf
out
es
test
in
test
xor
out
sub
ins
mov
cli
imul
lods
pushf
ret
mov
imul
pop
sar
mov
icebp
and
pop
push
mov
push
rol
lods
sar
sbb
mov
inc
jb
mul
adc
push
movs
in
sbb
mov
icebp
mov
inc
sbb
inc
cmp
stc
cmp
gs
sar
test
cmps
adc
rcr
rcl
mov
push
scas
sub
jae
int3
(bad)
lods
pushf
xchg
mov
sub
push
repz
sbb
jns
pop
in
scas
fwait
cdq
xchg
in
ret
xchg
rcpps
fst
inc
ret
sub
ret
outs
fisttp
dec
popf
fs
daa
popa
pop
jne
jecxz
or
and
pop
and
les
(bad)
aas
push
mov
add
(bad)
ja
nop
in
ror
sub
ja
inc
fstp
add
ja
call
int
outs
rcr
push
imul
jo
jo
ds
in
sbb
adc
mov
pop
repz
nop
sbb
sub
inc
retf
std
cmp
xor
imul
sbb
ins
dec
inc
mov
mov
adc
in
or
adc
inc
arpl
push
xor
xchg
xor
outs
sbb
mov
push
outs
sbb
mov
jge
push
imul
push
test
outs
enter
les
ror
inc
daa
jo
or
xor
rcl
and
mov
add
jnp
loopne
cmp
icebp
fwait
add
jno
and
scas
ror
stos
mov
idiv
fild
and
aaa
into
fstp
retw
fidivr
pop
fidiv
sub
mov
xchg
xchg
or
out
xchg
dec
mov
xchg
jle
in
jg
fstp
popf
pop
rcl
xchg
fcom
or
or
popf
(bad)
pop
cmp
shr
pop
xchg
cmp
cmp
lds
aad
add
mov
call
stc
das
add
fs
dec
ja
fadd
add
int
not
(bad)
mov
pop
jne
dec
mov
out
cmps
rcr
call
scas
cmp
fiadd
pop
mov
or
lds
stc
adc
xor
sbb
sub
dec
dec
out
call
adc
retf
rol
adc
(bad)
cmps
idiv
int3
sbb
jg
cmp
cmp
into
mov
push
lahf
push
dec
sbb
xor
jmp
xchg
mov
bound
outs
(bad)
cmp
in
or
push
dec
fs
sub
fistp
mov
pop
movs
in
pand
test
in
push
(bad)
mov
xchg
repz
dec
xchg
xchg
mov
mov
shr
or
icebp
mov
add
ror
xchg
popa
pop
mov
and
ja
or
inc
dec
xchg
movs
enter
xor
(bad)
mov
jns
(bad)
mov
aaa
dec
dec
dec
jne
inc
add
call
cmp
cmps
push
js
adc
sahf
dec
popf
jle
inc
shr
mov
push
sbb
mov
daa
pop
fistp
inc
clc
jmp
out
add
sahf
mov
outs
test
loopne
cmp
push
dec
dec
shr
es
xchg
jl
dec
xor
mov
adc
lods
and
xchg
inc
xchg
sbb
push
sbb
rcl
jb
pop
adc
sbb
jle
or
aam
lock
retf
mov
lds
ja
and
push
xchg
or
or
es
mov
dec
shl
push
and
iret
jecxz
sbb
dec
mov
push
inc
dec
pop
pop
(bad)
pop
jns
ja
ret
or
cmp
push
jge
or
cmps
js
sbb
inc
pop
stos
das
movs
ss
fmul
(bad)
aam
sti
cmp
mov
inc
and
mov
xchg
out
xchg
call
fiadd
loop
fdivr
cmp
cdq
retf
fadd
repnz
nop
loopne
adc
adc
jge
dec
mov
xchg
ret
test
ret
out
push
arpl
and
xor
out
sbb
pop
lahf
jnp
bound
out
push
mov
int
push
retf
xor
jne
(bad)
sub
out
mov
push
stos
xchg
sbb
lods
bound
shl
jmp
and
mov
or
xchg
clc
dec
dec
(bad)
test
jnp
lds
popf
dec
jmp
push
lods
adc
fst
inc
fs
cmps
lods
add
jbe
or
jge
fild
dec
cmp
and
icebp
sub
add
sub
jae
xchg
pop
sbb
sbb
iret
dec
retf
(bad)
aam
sub
ret
lock
sub
pop
aas
loope
call
and
pop
ror
pop
clc
shl
lahf
dec
aam
es
and
addr16
leave
mov
bound
lock
jg
or
mov
or
pop
xchg
fnstcw
dec
fs
hlt
jne
xchg
jle
fmul
jae
mov
ror
enter
push
shr
out
mov
lock
popf
xchg
cmp
push
mov
stos
inc
ss
fdiv
fnstsw
cmp
or
mov
(bad)
adc
pusha
int3
inc
sub
retf
sbb
pminub
mov
pop
jbe
lods
sahf
popa
fistp
jno
hlt
vpsubusw
test
add
ins
adc
mov
push
xchg
push
je
jge
dec
add
sub
clc
mov
cmp
inc
dec
int
or
sahf
cmp
ror
not
sub
or
shr
jmp
xchg
leave
and
xchg
(bad)
enter
(bad)
(bad)
aas
clc
shl
movq
mov
idiv
pop
inc
push
lea
xchg
or
mov
sahf
and
idiv
call
mov
mov
mov
mov
mov
and
in
imul
mov
jmp
sbb
arpl
stos
popf
idiv
cmps
cmp
(bad)
out
stc
sbb
cld
mov
cmp
dec
push
inc
mov
jns
push
or
int
lds
mov
retf
inc
stos
push
pop
in
call
mov
enter
(bad)
lods
cli
dec
inc
fistp
bound
xor
ror
sbb
out
fiadd
add
xchg
cmps
or
adc
push
adc
out
mov
enter
xchg
mov
ja
lock
iret
retf
dec
xchg
mov
xor
popf
adc
xchg
loope
dec
lds
aaa
mov
stc
jbe
xchg
fstp
(bad)
xchg
mov
add
pop
leave
xor
out
(bad)
mov
cmp
sub
sbb
fwait
add
pop
and
xchg
cmp
das
mov
jbe
mov
hlt
xor
add
push
cmc
in
mov
mov
into
sub
lock
inc
icebp
mov
jns
push
movd
movs
in
popf
jo
xor
jecxz
cmp
jns
pop
repz
sbb
push
cmp
inc
dec
repnz
sub
mov
add
vcvtdq2ps
movs
inc
enter
jp
add
int3
or
aaa
mov
sub
sbb
out
loopne
mov
push
jno
movs
jl
xor
ja
lahf
add
adc
and
lods
mov
outs
imul
sub
cdq
sub
cwde
pop
add
sti
int
repz
jne
mov
cmp
xlat
and
and
jp
mov
inc
adc
inc
sbb
xor
dec
xor
push
xor
cli
cmps
sub
lahf
or
cmp
mov
pop
lods
les
dec
dec
xor
outs
leave
push
hlt
mov
in
inc
sahf
adc
mul
jp
mov
or
mov
lea
mov
push
mov
stc
jnp
outs
addr16
mov
leave
jl
repnz
or
lds
jg
jmp
inc
adc
ins
sti
sub
test
jmp
mov
cwde
jle
lahf
xor
cmp
jb
add
jo
div
add
stos
mov
inc
pop
pop
scas
out
imul
push
in
push
or
add
pop
pop
or
loop
mov
out
sti
mov
xchg
xor
pop
aam
movs
cld
das
pop
mov
push
sbb
xchg
mov
(bad)
loope
pop
cmp
xor
pop
mov
add
xchg
xchg
out
fwait
call
xchg
int3
in
jle
inc
inc
test
push
xor
cmp
xor
mov
pop
aad
hlt
cmp
xor
jge
fcomp
mov
in
xchg
inc
loopne
std
adc
sub
leave
jae
movs
lds
adc
pop
fmul
(bad)
dec
and
sar
sbb
cmp
(bad)
mov
in
aam
and
div
or
jp
mov
neg
mov
add
dec
psubsw
xor
add
nop
push
ds
repnz
das
inc
or
add
mov
sbb
jge
repz
add
jo
mov
jp
clc
sub
shr
jle
jne
stos
sti
dec
ins
ds
xchg
push
ja
sub
aam
icebp
adc
je
lds
jnp
or
add
sbb
std
mov
jns
fadd
ja
xor
loope
xchg
jmp
ret
aad
je
hlt
hlt
mov
jmp
push
cmp
xlat
ja
push
fs
or
(bad)
movs
jle
add
push
pop
(bad)
ficomp
ror
xchg
mov
jp
(bad)
mov
cmps
out
stos
mov
pop
dec
in
(bad)
xchg
mov
fwait
adc
adc
mov
mov
loopne
jns
jge
sbb
cmp
test
inc
leave
jg
sbb
jge
lods
repz
add
inc
or
lods
test
mov
int
fiadd
xlat
cmp
aaa
std
sbb
shl
ins
rcl
jl
loope
add
repnz
and
in
push
inc
pop
das
imul
imul
xchg
push
mov
push
cmp
repz
and
dec
mov
or
push
dec
mov
(bad)
xchg
iret
mov
imul
jmp
mov
xchg
(bad)
fidivr
lock
xchg
mov
enter
cmp
inc
ins
inc
ins
cmp
add
outs
pop
(bad)
int3
pop
and
movs
imul
ins
sbb
jbe
mov
jp
in
sbb
das
and
shl
jne
bound
and
iret
mov
jb
stos
or
dec
arpl
jle
stc
in
pusha
cmps
shr
jmp
lods
(bad)
inc
out
test
mov
icebp
(bad)
xor
aas
adc
pop
daa
int
(bad)
jp
not
adc
sub
add
cs
and
loope
out
xor
movs
cld
jbe
clc
mov
test
mov
cwde
cs
aam
popf
and
dec
loop
fisttp
jbe
inc
fimul
inc
mov
add
test
in
cmp
call
stos
or
inc
mov
ret
dec
jg
push
and
and
add
xor
inc
mov
add
xor
sahf
pop
stos
fmul
mov
jmp
adc
fmul
enter
fistp
popf
push
nop
pop
inc
lods
and
bound
test
enter
sbb
std
pop
mov
int3
std
dec
cli
js
cdq
rol
(bad)
add
add
aad
inc
and
outs
cmp
aaa
sbb
xchg
cli
mov
or
sub
dec
sub
movs
dec
add
pop
and
ret
sbb
lea
addr16
inc
aaa
inc
mov
pop
mov
jmp
sahf
addr16
mov
pop
enter
in
fsubr
cmps
imul
mov
pop
mov
test
mov
push
and
mov
lds
fldcw
iret
mov
je
lock
js
inc
jg
in
das
pop
jge
pop
les
cld
call
nop
ins
in
mov
adc
sub
aad
imul
fnstsw
stos
ja
fdiv
dec
mov
dec
jle
retf
inc
retf
sub
(bad)
add
dec
cwde
inc
fimul
xor
mov
sti
repnz
jmp
and
sbb
cmp
call
mov
popa
sbb
fld
loope
xchg
fwait
loopne
call
sub
add
call
push
mov
mov
pop
adc
and
lock
addr16
movs
pop
mov
popf
xchg
cmp
icebp
mov
jne
xchg
xor
mov
imul
mov
mov
adc
cmp
in
imul
xor
(bad)
mov
(bad)
ds
xchg
call
jb
ins
xchg
lods
int
(bad)
rcr
daa
xchg
push
pop
daa
repnz
xor
pop
inc
arpl
out
stos
fnsave
sub
xor
mov
fadd
mov
out
call
inc
aas
lods
shl
ret
jne
gs
pushf
pop
(bad)
sbb
lods
loopne
cld
stos
gs
outs
xchg
cmp
inc
push
call
loopne
in
xor
mov
hlt
rcr
cmps
fdivr
or
pop
add
jl
mov
xchg
jmp
xchg
dec
push
das
add
iret
fstp
cwde
cmp
mov
sub
pop
call
push
stos
jno
ss
jmp
add
jmp
push
aas
outs
mov
add
mov
pusha
(bad)
fdivrp
inc
cmc
loope
ins
jmp
out
dec
test
adc
mov
and
cmps
ins
mov
call
push
dec
pop
inc
popa
in
jbe
out
in
pop
mov
mov
or
lods
jb
mov
cmp
pop
popf
jmp
hlt
das
je
in
or
ds
inc
fisub
sbb
push
and
xor
dec
push
sub
ins
pop
imul
lea
ja
push
or
cmp
xor
add
fidiv
iret
jno
iret
std
div
xchg
icebp
add
cmp
jnp
(bad)
jl
dec
test
jmp
loopne
mov
lahf
pop
or
sti
fwait
sub
rcr
mov
arpl
aas
jae
cmp
pop
jmp
sbb
inc
ins
addr16
mov
mov
imul
into
adc
bound
lods
jge
jle
or
jbe
scas
(bad)
cmps
enter
push
iret
sahf
pop
lods
xor
inc
cmps
lods
cmp
push
mov
mov
icebp
cmp
icebp
add
xchg
push
push
repz
ret
add
push
and
mov
mov
xor
imul
mov
add
xchg
mov
(bad)
xor
into
xchg
dec
mov
icebp
add
shr
pop
or
sahf
test
out
stc
pop
(bad)
jae
into
mov
mov
jnp
lods
lahf
mov
fnstsw
sti
push
arpl
and
scas
cmps
retf
std
out
mov
and
ror
sbb
jns
call
inc
xchg
xor
xchg
mov
pop
mov
repnz
xor
int3
xor
xor
out
das
das
ja
clc
push
jmp
xchg
xchg
or
into
idiv
xor
aad
lds
mov
sbb
add
sub
outs
sar
xchg
inc
adc
pop
xchg
fadd
pusha
and
mov
inc
lahf
pop
shl
xor
pop
fdiv
mov
dec
test
push
test
ret
cs
sub
or
push
mov
nop
les
xlat
jnp
or
mov
call
mov
(bad)
lods
xchg
fiadd
pop
and
pusha
pop
fst
inc
or
sub
mov
lods
movs
nop
stc
inc
mov
pushf
retf
xor
aaa
fcompp
adc
jp
xor
arpl
call
pop
jmp
test
dec
es
push
ja
aad
es
jbe
sub
xchg
outs
(bad)
mov
mov
xchg
inc
inc
adc
(bad)
out
fisub
sti
mov
jl
inc
jae
cmp
ret
adc
imul
mul
test
fst
das
xchg
adc
and
mov
cwde
mov
into
aam
inc
rcr
mov
push
jbe
xchg
jmp
sahf
in
cmp
(bad)
repnz
out
push
daa
cli
mov
(bad)
mov
mov
mov
adc
jbe
(bad)
mov
mov
or
xchg
pop
fstp
sar
jle
nop
aam
push
out
repnz
(bad)
out
sbb
cmps
pop
in
mov
outs
repnz
mov
push
nop
test
call
mov
push
test
cld
add
test
mov
cdq
fmulp
or
push
ins
and
mov
lods
loope
sub
sbb
mov
mov
mov
cmp
movq
test
add
movs
adc
or
gs
lds
mov
imul
movs
ss
mov
loopne
or
push
fcomp
imul
mov
xchg
stc
jle
into
adc
(bad)
cmp
aaa
mov
or
cmp
xor
sub
mov
in
mov
jecxz
fmul
sbb
movs
dec
inc
mov
jle
xchg
rol
mov
add
push
cmps
mov
adc
inc
mov
xchg
shr
into
shl
les
shl
cmp
jecxz
pop
(bad)
mov
pop
fs
push
mov
and
sbb
imul
inc
loopne
rcr
cmps
sbb
push
daa
fisubr
sbb
in
or
fcompp
inc
or
pop
and
aaa
pusha
mov
mov
lahf
xchg
fwait
inc
inc
jp
xor
pop
movs
inc
lahf
xor
and
outs
sub
dec
inc
dec
pop
pop
out
cdq
push
hlt
enter
mov
icebp
cdq
mov
jecxz
loope
mov
pop
mov
jmp
xor
(bad)
in
jl
and
sub
sbb
(bad)
ja
jle
push
inc
push
sub
mov
shl
imul
(bad)
(bad)
out
or
(bad)
adc
das
pop
(bad)
jmp
push
or
pop
pop
inc
sbb
mov
and
fs
repz
xor
cmps
mov
(bad)
loop
cdq
mov
mov
xchg
outs
aaa
dec
ss
push
cmp
mov
fisttp
mov
pmaxsw
out
and
jge
xchg
(bad)
(bad)
push
fdiv
les
or
xchg
stc
stc
xchg
push
inc
in
add
test
pop
add
pushf
out
repnz
inc
jge
ror
mov
iret
xor
nop
icebp
jg
sbb
(bad)
cmp
dec
ret
or
push
cmps
push
xlat
inc
mov
mov
jp
dec
jbe
cmp
sbb
xchg
repnz
adc
dec
(bad)
retf
cmp
mov
dec
or
mov
js
xor
cmp
mov
test
mov
add
mov
add
sub
in
int3
xor
jmp
cmc
xchg
push
add
mov
int
aaa
xchg
dec
mov
cmp
xchg
or
jmp
jb
mov
fwait
jecxz
ret
mov
icebp
ror
sbb
jmp
jg
jne
mov
sbb
pop
jns
jbe
out
sbb
adc
push
es
or
inc
jg
int
or
movs
push
fst
add
jge
xlat
call
and
xchg
cmc
fild
push
inc
inc
(bad)
jl
hlt
fs
ror
fisub
repnz
mov
fsub
js
jnp
inc
dec
scas
in
sbb
retf
pop
push
jmp
jg
cwde
mov
mov
sbb
in
stos
es
push
mov
and
(bad)
dec
retf
cmp
sub
mov
pushf
push
sbb
pushf
xchg
xor
sub
and
mov
(bad)
push
shr
cwde
test
inc
mov
scas
xor
add
es
retf
fimul
push
jp
or
das
ret
add
call
pop
xor
fxch
inc
mov
jl
loop
daa
mov
in
xchg
aas
in
sub
in
cmp
mov
in
push
adc
push
scas
lods
lods
cli
pop
or
pop
ss
inc
or
or
adc
aaa
jmp
lods
(bad)
and
(bad)
loope
adc
inc
pop
fld
xchg
push
fsubr
or
stos
scas
mov
out
xor
jl
inc
cmp
push
push
jl
ret
xchg
retf
sub
and
cmp
bnd
sbb
adc
inc
ins
lods
fdiv
mov
sbb
rol
jge
out
add
cmp
or
aas
aam
and
push
mov
cmp
ss
dec
loopne
inc
loop
cmp
clc
repnz
retf
jbe
mov
clc
inc
ss
clc
mov
mov
clc
outs
jmp
inc
or
in
pop
lea
rcr
ja
sub
or
fst
and
push
inc
add
push
bound
mov
mov
ja
ret
popa
adc
cmps
imul
add
bound
jns
cwde
xor
bound
jmp
cmp
test
fdivr
adc
into
popf
or
adc
mov
jmp
or
pop
ja
test
cmp
cwde
mov
(bad)
in
cwde
mov
ja
retf
cmp
sahf
and
jl
dec
dec
xor
sub
push
push
jg
mov
push
pop
lods
sub
or
retf
test
push
call
stc
jb
sbb
add
popa
pop
mov
lods
aam
pop
sbb
mov
repnz
rcr
fstp
push
mov
or
aam
retf
in
(bad)
out
test
jmp
call
call
arpl
(bad)
xor
fisttp
push
cmp
ret
cmp
shl
pop
imul
fnsave
dec
pop
cmc
mov
mov
das
(bad)
mov
cwde
push
js
repnz
call
rol
mov
push
adc
pop
cmps
movs
pushf
xchg
xchg
ins
mov
xor
in
xor
inc
sbb
or
push
sbb
adc
mov
jns
xchg
in
fist
cmps
xor
daa
push
push
dec
cs
lea
jne
fnstcw
pop
cmp
jb
(bad)
mov
push
push
add
loop
cmp
add
sar
mov
and
sub
push
push
nop
fisttp
test
cli
mov
mov
cdq
repnz
clc
loope
cmp
mov
jle
mov
fcmove
(bad)
cmp
cmp
gs
inc
adc
dec
xlat
jecxz
fs
xchg
in
sbb
mov
test
out
inc
cld
add
in
mov
pop
push
repz
dec
mov
ficomp
cmp
rcr
jg
add
fnstcw
fiadd
iret
or
cs
sbb
add
pop
jge
sbb
mov
mov
(bad)
push
or
inc
push
pop
fwait
cmp
and
mov
xchg
rcl
pushf
push
lahf
cmc
inc
call
lods
push
push
into
mov
lods
imul
jno
inc
lock
mov
pop
add
es
push
mov
in
and
jb
jmp
mov
inc
lahf
cmps
adc
mov
and
sub
ds
gs
pusha
add
dec
add
cmp
sti
test
adc
xor
cmp
dec
jne
addr16
mov
pusha
adc
mov
cmp
test
add
dec
jnp
or
xor
pop
jl
leave
cld
dec
dec
add
stos
adc
int
fimul
fiadd
ja
shr
jge
data16
repz
cmp
mov
dec
push
mov
out
scas
loopne
inc
test
inc
or
movs
(bad)
sti
jecxz
add
mov
call
and
sub
inc
mov
cmp
fsubrp
inc
(bad)
push
push
lods
jae
std
mov
retf
sahf
fisubr
xor
pop
add
adc
movs
jb
dec
mov
int
es
aad
cmp
loope
jns
xchg
jo
inc
push
cmp
xor
dec
retf
push
fs
dec
pop
inc
rol
lds
jne
cmp
xchg
mul
cmp
pop
add
jg
push
xor
push
mov
or
not
add
leave
jecxz
scas
stos
scas
inc
clc
pop
mov
in
push
mov
mov
push
ja
jge
outs
aam
xlat
jmp
stos
in
xor
and
adc
and
rcr
imul
sub
sbb
mov
sub
mov
ss
dec
mov
add
ret
pop
pop
mov
cmp
mov
push
dec
dec
push
shl
aam
xchg
aad
std
or
dec
ja
sub
outs
cmps
ja
shl
inc
add
sbb
dec
pop
jnp
push
or
mov
iret
jl
jl
pop
cmp
loopne
jp
jp
loop
mov
out
pop
aaa
popa
or
jp
pop
xchg
inc
lods
push
or
xor
ja
mov
retf
push
or
add
sbb
pop
pop
int
sahf
mov
(bad)
mov
inc
xor
sahf
outs
fadd
pop
pop
fdiv
pop
lahf
cdq
jbe
dec
in
enter
adc
sbb
xchg
cmp
pop
lods
dec
idiv
mov
stc
sub
pop
repnz
or
cmp
pop
fwait
sub
not
push
push
in
ins
repz
sbb
sbb
sahf
pop
loope
sbb
mov
dec
xor
data16
call
xor
mov
adc
shl
adc
inc
jg
leave
xchg
sbb
popa
mov
out
mov
daa
mov
dec
push
cmp
scas
fisttp
daa
outs
(bad)
add
push
sub
mov
jge
mul
sbb
loop
in
jb
idiv
nop
fwait
mov
sub
shl
mov
mov
std
pop
mov
cmp
scas
sbb
(bad)
cli
shl
fsubp
xchg
push
cmp
std
pop
xor
bound
int
mov
test
pusha
loopne
pop
retf
add
pop
sbb
mov
inc
xor
ss
jns
mov
aam
imul
ret
lods
(bad)
mov
fidiv
lods
int3
call
xor
dec
and
mov
jae
es
xchg
jecxz
pusha
sahf
(bad)
sbb
xchg
mov
dec
sbb
inc
lds
icebp
int3
(bad)
in
lock
or
jmp
retf
xor
mov
pop
mov
and
std
test
movups
ds
jp
rol
mov
fimul
(bad)
test
push
stos
lock
mov
or
test
ja
cld
add
aas
jmp
cmp
test
out
xchg
jne
inc
cmp
test
pushf
stos
and
cmp
test
sub
in
retf
jle
xor
mov
sti
fcomip
leave
loopne
dec
xor
sti
into
and
pop
ins
push
mov
pop
xor
cmovle
movs
lea
push
xlat
or
shr
cmps
pusha
je
push
add
clc
outs
jb
and
ficom
ds
bound
dec
call
popf
sub
adc
add
dec
or
fdivr
sar
and
fwait
and
sbb
(bad)
loopne
test
neg
mov
and
mov
pop
cmp
or
repnz
shl
mov
fnclex
shr
ins
adc
stc
retf
jno
sub
movs
jl
xor
arpl
xchg
stos
mov
mov
into
xchg
imul
ja
push
test
js
pop
icebp
leave
xchg
je
leave
outs
and
mov
inc
mov
je
xor
cmp
push
lahf
mov
mov
mov
mov
mov
hlt
fisubr
aaa
cmp
repnz
int
ret
pop
mov
cmc
cmps
inc
add
fnstcw
loop
out
ret
adc
or
std
test
push
es
addr16
cmp
pusha
pop
les
adc
xchg
mov
or
dec
jge
mov
push
mov
(bad)
push
mov
sbb
push
or
add
in
cmp
xor
imul
(bad)
imul
sub
xchg
fsubrp
xchg
in
sahf
mov
xchg
leave
adc
jae
sahf
jmp
rol
mov
fsubr
cmp
mov
jmp
rol
cmps
les
jmp
adc
xchg
das
dec
out
push
out
jae
jg
lahf
add
ins
inc
jae
push
movs
and
jb
push
pop
sub
sti
mov
inc
xlat
mov
mov
pop
xchg
fs
push
ins
push
adc
lds
popf
ret
or
loop
mov
shl
int3
repnz
jbe
inc
and
loope
mov
sbb
in
cmc
pop
nop
mov
loop
je
scas
dec
jno
sub
add
stos
jo
popa
xor
test
xor
ins
in
or
fst
outs
pop
jne
mov
(bad)
rcr
adc
mov
test
or
stos
sbb
or
gs
xchg
fimul
repz
xor
sbb
movs
scas
imul
aam
cmps
jge
lock
mov
sbb
fisubr
xchg
pop
cmp
add
sbb
int
jg
sub
sahf
retf
(bad)
xlat
mov
and
pcmpeqw
mov
cmp
fnstcw
push
mov
scas
add
scas
test
lock
mov
addr16
and
inc
(bad)
inc
pop
mov
push
mov
xchg
ficom
(bad)
dec
mov
(bad)
out
cmp
pop
fild
mov
xor
inc
inc
sub
mov
sub
inc
mov
cmp
in
push
adc
aaa
sti
cwde
dec
cmps
and
outs
movs
jp
adc
clc
data16
jnp
fadd
cld
movs
mov
hlt
xor
push
iret
push
iret
cmp
adc
or
fld
stos
xchg
cmps
inc
cli
inc
lock
adc
sbb
lods
inc
imul
test
cld
out
mov
dec
push
lock
push
(bad)
std
ret
pop
mov
and
jl
or
or
dec
inc
(bad)
shl
dec
aam
sbb
ss
and
in
fwait
lods
(bad)
cmp
pop
inc
sbb
inc
jo
aaa
or
xchg
mov
sbb
fisubr
lea
push
cdq
test
dec
push
fcomip
jecxz
dec
xchg
sbb
sbb
adc
outs
and
push
clc
jo
(bad)
fsubr
fmul
add
pop
repnz
popa
pop
ror
mov
jl
jae
mov
lds
mov
fcmovu
and
and
mov
fdivr
aam
lahf
or
mov
pop
jb
pop
fdivr
jo
cmp
cmp
in
stos
(bad)
in
sub
aad
(bad)
into
push
inc
and
(bad)
adc
rcr
jne
adc
inc
mov
(bad)
lods
push
sub
dec
jg
aaa
addr16
(bad)
xchg
ds
pop
xor
fnsave
in
dec
setge
stos
out
fisubr
jp
adc
and
add
and
out
pop
inc
ins
(bad)
out
jg
imul
pushf
int
mov
shr
sbb
fmul
mov
sub
push
xor
shl
pop
xor
fcmovne
and
inc
inc
mov
xor
jae
jmp
stos
sbb
cld
mov
icebp
fwait
cmp
push
inc
das
cld
and
jmp
xor
leave
xchg
jns
adc
loopne
je
sbb
xor
aad
inc
lock
add
lock
xchg
fwait
retf
cdq
adc
lahf
imul
jp
movs
mov
jae
inc
cmc
fimul
add
cli
sbb
pop
push
data16
imul
xlat
add
push
sbb
adc
ret
sbb
cmp
mov
frstpm(287
cmp
fst
pop
test
xchg
mov
jmp
sbb
fwait
sar
pop
mov
adc
add
call
mov
fbstp
jo
jge
mov
jo
xchg
sub
pusha
scas
je
push
mov
push
cs
pop
xlat
mov
push
loop
jne
and
mov
pop
(bad)
std
pop
jne
sbb
cmp
lods
fidiv
lea
mov
cmp
lds
es
iret
les
sub
adc
xor
call
enter
cmp
inc
cwde
xchg
xchg
inc
ret
add
jl
dec
std
sbb
xor
out
sbb
jne
sti
push
jmp
mov
adc
xchg
(bad)
mov
pusha
xor
fwait
popa
call
sahf
mov
dec
push
xchg
outs
inc
clc
or
enter
fsubr
mov
xchg
je
popf
dec
xchg
sbb
xlat
cld
call
jmp
enter
lock
scas
fdivr
lds
cmp
scas
shl
pop
dec
dec
push
push
adc
cdq
push
inc
shl
xor
or
and
sbb
mov
cwde
jnp
jne
ds
push
and
and
loope
pusha
sub
pop
dec
dec
scas
repz
jnp
ins
pushf
dec
push
or
cs
(bad)
(bad)
in
fnstenv
nop
mov
mov
fs
push
mov
push
add
cld
out
imul
mov
xor
lahf
mov
scas
lock
int3
mov
adc
mov
leave
sbb
sub
pop
jg
iret
(bad)
fdivr
mov
mov
mov
xchg
xchg
outs
aaa
nop
not
push
and
cmp
retf
dec
and
jo
add
test
cmp
les
sub
std
lds
call
dec
(bad)
cli
cmc
lock
test
test
mov
xlat
jne
mov
pop
dec
(bad)
mov
sub
loopne
mov
cmp
pop
rcl
cmp
aas
jle
mov
adc
mov
and
loopne
cld
mov
mov
nop
cmp
cmp
ss
shl
cmps
popf
mov
cmp
push
jge
xor
adc
out
pop
mov
cmp
inc
in
movs
xchg
(bad)
sar
add
clc
mov
out
aam
pop
inc
fild
(bad)
aas
cmps
in
loopne
push
adc
lds
xor
lds
in
pop
lea
shr
movs
sub
mov
lods
jmp
ficomp
cld
and
xchg
dec
scas
daa
pop
jae
add
ins
leave
xchg
in
jno
pop
or
movs
or
jg
sub
mov
aam
loop
mov
adc
mov
dec
neg
xchg
xlat
mov
arpl
(bad)
mov
or
sub
lock
ror
add
cmp
clc
or
fdivr
(bad)
gs
call
pop
or
push
mov
push
sub
mov
adc
dec
repz
inc
ficomp
shl
inc
lds
imul
rcl
in
mul
mov
xchg
(bad)
cmc
push
aas
loopne
inc
rcr
push
mov
repz
add
btr
in
(bad)
xchg
ret
adc
adc
xchg
out
mov
shr
and
pop
test
dec
cmp
iret
ins
mov
inc
push
arpl
in
mov
dec
enter
(bad)
mov
gs
sbb
mov
add
jecxz
in
xor
shr
shl
push
lods
ins
mov
dec
ret
mov
and
cmps
fwait
add
cmp
mov
jae
cmps
popw
pusha
sbb
inc
movs
add
fistp
xor
cld
cmp
mov
js
imul
jmp
xor
outs
adc
fincstp
mov
daa
push
add
add
movs
push
cli
test
dec
sti
nop
jecxz
jno
inc
mov
adc
fidivr
(bad)
jne
fldcw
(bad)
fcmovnu
ret
dec
stc
out
and
mov
(bad)
and
cli
test
cmp
fisttp
xchg
push
fcomip
xchg
ret
inc
dec
imul
retf
xchg
jmp
(bad)
pop
pop
loopne
in
mov
mov
js
jbe
jge
aam
or
sub
in
adc
push
out
inc
clc
or
pop
ret
inc
dec
and
aad
sub
popf
ret
imul
outs
jp
add
mov
mov
xor
test
pop
aam
cld
jb
xchg
cmp
sbb
ret
dec
div
cmp
mov
sub
jecxz
retf
icebp
test
dec
test
rcl
rcl
daa
xor
add
ins
lods
aaa
(bad)
inc
mov
xchg
dec
popa
adc
sbb
pop
dec
add
mov
cs
sbb
rol
inc
and
mov
mov
xchg
sub
inc
mov
es
mov
(bad)
not
hlt
jb
ret
test
adc
push
scas
pop
mov
lahf
es
imul
shr
sub
shr
sub
imul
cwde
and
lahf
stos
push
cmp
and
adc
stos
(bad)
mov
xlat
shl
cdq
mov
inc
(bad)
int
out
arpl
cmp
cmp
fild
or
xchg
mov
scas
sbb
inc
or
pusha
jp
mov
cdq
push
movs
or
add
mov
or
dec
cdq
jae
adc
pop
fidivr
inc
jp
push
xor
mov
push
stos
loopne
mov
or
or
(bad)
mov
xchg
fisubr
aam
lods
std
cmp
lods
or
cmp
das
inc
pop
data16
fsubr
les
out
jb
dec
data16
out
frstor
dec
ds
clc
add
inc
dec
fidivr
jecxz
inc
pop
int3
xchg
test
pop
cmp
hlt
mov
idiv
lods
cmps
add
sar
out
or
leave
pop
pop
loope
jmp
add
inc
mov
cmps
xchg
sbb
pop
stos
fsub
or
pop
jae
or
mov
mov
adc
push
adc
mov
loope
push
test
add
jbe
adc
pop
push
cld
dec
jb
sbb
sub
cmp
mov
pop
cmp
xor
in
pop
sbb
stc
push
sbb
bound
or
mov
test
das
ret
push
aad
sbb
rcr
sub
add
cmps
(bad)
cmps
mov
arpl
into
or
nop
add
cwde
jo
jae
xor
lahf
enter
xchg
das
inc
mov
mov
mov
push
not
ret
in
mov
sbb
iret
pop
jne
mov
test
push
xchg
mov
test
retf
xlat
out
or
dec
pop
xchg
imul
mov
push
mov
(bad)
lea
out
fimul
mov
pop
ins
es
loope
mov
mov
push
jle
mov
cmovp
push
fsubr
test
cmp
inc
je
mov
loope
push
fst
inc
mul
adc
mov
xor
add
mov
jnp
rcr
popf
cli
cmp
adc
jle
in
push
aaa
inc
out
dec
add
mov
sbb
out
idiv
popf
and
rcl
in
jmp
mov
push
or
cli
(bad)
std
adc
aas
pushf
inc
lea
dec
fbstp
dec
bound
lahf
test
pop
rcl
mov
or
stos
sbb
addr16
sub
mov
inc
lods
fwait
add
jno
movs
fs
aas
mov
movs
jg
sbb
rcr
fsub
out
cmp
pop
in
(bad)
inc
and
popf
(bad)
push
ds
push
bound
jge
pop
push
clc
scas
cmp
ror
add
(bad)
lods
aaa
test
pop
lahf
mov
mov
and
cmps
mov
fisubr
imul
(bad)
pushf
sbb
and
inc
dec
call
sub
xor
jmp
push
mov
repz
in
xchg
cmp
repz
adc
mov
test
push
adc
add
cmp
push
dec
sahf
test
popa
popf
dec
pop
enter
les
shl
push
inc
pop
xor
push
fcom
sub
mov
cmp
cmp
setne
sahf
cmp
imul
test
jl
and
data16
stos
jle
inc
aad
enter
adc
scas
repnz
(bad)
jmp
sbb
mov
stc
mov
pop
xor
inc
xor
fild
dec
xor
or
lods
mov
mov
aam
mov
lds
push
mov
pop
adc
push
imul
das
cwde
pop
aas
xchg
test
dec
adc
mov
pop
push
pop
dec
out
push
int
pushf
jecxz
or
mov
mov
lock
pop
lock
hlt
mov
pushf
loop
in
xor
lods
(bad)
cmp
add
scas
push
lahf
inc
cmps
gs
jnp
jne
mov
outs
inc
add
sub
enter
icebp
add
or
pop
scas
add
bsr
gs
out
leave
dec
aam
popa
cmp
stc
arpl
jb
add
stos
test
xlat
mov
fistp
cmps
jge
or
push
bound
lods
jns
(bad)
jns
mov
cmp
adc
test
aas
add
inc
mov
out
popa
mov
cmp
adc
addr16
adc
test
or
lock
outs
mov
lods
jecxz
inc
jno
retf
test
jb
jae
aad
sub
ret
mov
xchg
dec
jns
lods
call
jo
push
mov
xchg
or
dec
cmp
and
imul
xor
mov
sbb
aaa
cdq
mov
repnz
pop
sti
add
mov
mov
rcr
mov
mov
pop
mov
push
xchg
jno
mov
mov
xor
int3
sbb
das
cmps
cli
dec
hlt
mov
fadd
aam
and
dec
loope
jae
into
(bad)
xchg
cmc
xchg
mov
fnstenv
popa
test
and
mov
mov
pushf
popf
fwait
sub
pop
(bad)
cwde
in
cmp
out
sbb
jne
pop
xor
pop
cmp
loope
out
mov
mov
cld
test
pop
lods
jno
rol
bound
fist
dec
aaa
mov
xchg
mov
(bad)
pusha
dec
lds
push
jl
test
nop
mov
or
fs
shr
(bad)
dec
out
(bad)
mov
lods
into
cmc
or
jmp
xor
jle
iret
pop
or
aas
push
mov
push
clc
xor
xchg
xor
jle
push
inc
push
sbb
retf
mov
xlat
cmp
fnstenv
jmp
repz
fst
xchg
int
call
popa
cmp
mov
xor
dec
test
cmp
fidiv
rol
or
test
fsubr
sbb
cs
mov
ds
cdq
dec
aam
in
idiv
mov
(bad)
and
and
push
fs
mov
mov
sub
lods
sub
adc
loop
aad
stos
iret
in
or
das
adc
or
add
aas
cmc
loop
mov
aam
ja
mov
ds
xor
pop
mov
scas
mov
mov
push
aam
das
cmp
popf
bound
inc
sti
imul
sub
test
push
mov
scas
imul
pop
mov
sbb
shl
add
popf
loopne
(bad)
cmps
and
retf
fbstp
in
lods
inc
adc
ret
gs
mov
fwait
push
out
cdq
pop
sti
adc
ficom
and
lock
lods
ror
mov
push
outs
leave
aad
mov
fimul
sbb
jno
das
ss
and
jb
iret
es
xor
in
gs
mov
dec
nop
xor
data16
ja
lea
sbb
jnp
sub
aas
test
leave
outs
fs
dec
jp
into
cmp
cwde
push
cld
and
lds
xor
(bad)
sub
pusha
cli
cmp
sub
inc
sbb
(bad)
mov
or
shl
fidiv
sbb
fdivr
jp
aas
scas
outs
adc
fs
bound
fimul
mov
in
out
sub
sti
rcr
lods
or
mov
aad
mov
xor
fild
add
dec
push
pop
pop
pop
xchg
iret
sbb
arpl
push
mov
in
mov
add
(bad)
lock
(bad)
jl
cdq
out
std
push
cmp
pop
sbb
push
cs
mov
and
in
push
nop
enter
loop
lea
push
loop
add
mov
mov
shl
into
jmp
(bad)
dec
xchg
sub
push
cmp
add
sub
xchg
js
retf
mov
push
adc
stos
gs
xchg
push
scas
xchg
test
out
popa
fistp
mov
nop
(bad)
push
scas
pop
ret
inc
mov
in
xor
sahf
idiv
aaa
jmp
mov
out
inc
sub
test
and
sbb
cmp
ror
mov
inc
mov
std
and
pop
ds
sub
sub
call
pop
movs
lods
add
sbb
pushf
int
aas
xchg
jl
adc
adc
inc
fisub
pop
adc
add
jg
mov
mov
lods
jno
mov
xchg
push
fnstenv
or
sar
repz
cli
ror
and
retw
(bad)
mov
xor
cwde
and
fild
imul
and
pop
mov
clc
and
jae
in
mov
inc
add
nop
xor
xor
and
xchg
popf
ss
cmp
xchg
adc
mov
mov
jns
sbb
mov
jne
push
hlt
and
push
dec
fs
jbe
lea
xor
(bad)
fisttp
mov
aam
pop
rcl
test
dec
or
mov
pop
jae
sbb
cli
sbb
out
fdivr
jnp
jge
add
es
xchg
jne
adc
xchg
fsubr
mov
sub
clc
(bad)
pop
dec
xor
mov
mov
jnp
xchg
retf
xor
mov
push
pusha
fsubr
stc
xchg
or
aam
jns
cmp
xor
sbb
cmps
je
pusha
xor
in
imul
jge
test
call
or
xchg
pop
mov
jae
add
test
lock
jmp
mov
ss
cli
cmps
loopne
adc
and
jns
(bad)
iret
xchg
fcmovnu
and
hlt
rcr
fs
or
das
shl
pop
out
or
sub
cmc
pop
adc
out
jg
push
sbb
arpl
int
out
mov
add
fsub
push
or
(bad)
cmp
jns
jae
das
icebp
dec
add
add
cmp
sbb
mov
mov
lds
out
jnp
popa
(bad)
cmp
pop
iret
sbb
inc
cmc
cmp
mov
xchg
lds
rcl
inc
or
dec
(bad)
fsubp
push
stos
lods
ret
mov
mov
add
scas
xor
pop
ret
cld
fwait
mov
cwde
push
jmp
cli
cmp
and
js
push
nop
ror
inc
jmp
jle
cdq
rcr
inc
retf
adc
or
ret
jmp
jne
repnz
imul
adc
add
stos
xor
inc
mov
fdivr
inc
sahf
add
dec
cld
mov
cmp
dec
sub
adc
je
ror
cmp
inc
stos
movs
dec
xlat
lods
lods
add
inc
xchg
sbb
and
pop
sub
icebp
add
adc
xor
push
mov
mov
call
xor
test
jae
mov
and
xlat
dec
dec
mov
rcl
jecxz
jmp
leave
pop
loope
lds
cli
mov
inc
mov
mov
sar
fsubr
and
dec
lea
ss
sti
ins
add
xchg
in
mov
in
fs
ss
xor
in
mov
cdq
and
shl
add
jae
popa
call
iret
jne
pop
loope
rcr
sub
cmp
jle
pop
xchg
retf
nop
in
rol
jno
mov
icebp
cwde
add
hlt
out
xlat
mov
mov
int3
(bad)
int
inc
imul
ins
out
pop
dec
push
in
nop
sti
loopne
add
push
leave
loopne
xchg
sub
and
jge
cmp
push
mov
xchg
iret
mov
dec
leave
pop
test
dec
mov
ja
leave
fiadd
imul
jp
pop
add
ins
sti
jle
cwde
push
arpl
or
aam
cmp
imul
mov
or
xchg
leave
cmps
retf
arpl
mov
pusha
leave
sbb
xor
add
jmp
out
push
fs
adc
mov
je
inc
test
rcl
movs
cmp
push
xchg
cmp
xor
fild
mov
(bad)
jbe
call
fisub
ins
xor
iret
mov
push
cmp
jle
cmps
imul
popf
repnz
fcmovnu
mov
pop
and
cmp
inc
push
call
cld
mov
cmps
mov
jo
mov
pop
cmp
aam
fidiv
(bad)
fmul
mov
mov
loope
repnz
clc
pop
jmp
iretw
push
jl
hlt
dec
in
cdq
stos
fwait
hlt
fidivr
fstp
cmp
(bad)
dec
jmp
rcl
push
and
pop
xor
inc
jb
test
pop
jecxz
xchg
outs
fs
fild
cld
push
sub
xchg
fcom
jbe
cmp
mov
out
mov
xchg
sbb
dec
stos
js
test
dec
add
push
stc
push
repnz
mov
adc
(bad)
fstp
sbb
lds
mov
jns
bnd
ins
or
inc
fld
push
dec
(bad)
into
fadd
test
les
cmp
aas
test
xchg
cmp
cmp
je
push
add
icebp
and
inc
jbe
ror
fcom
ss
aad
pop
pusha
(bad)
aaa
lahf
(bad)
adc
outs
mov
sbb
dec
cmp
imul
lds
dec
mov
ss
repz
and
stc
int3
sbb
mov
xchg
adc
inc
in
movs
(bad)
and
xchg
pop
jmp
pop
xor
movs
gs
mov
jne
xor
lods
adc
shl
mov
jl
stos
fcom
popa
adc
shr
fcmovnu
xchg
mov
or
mov
hlt
int3
xchg
in
adc
mov
inc
shl
outs
nop
sar
inc
scas
xor
push
mov
add
dec
push
sub
xchg
sbb
dec
and
div
sbb
repz
push
push
ins
push
inc
(bad)
movs
dec
add
out
xchg
into
and
cmp
mov
mov
movs
das
cdq
(bad)
ins
in
inc
inc
cmps
ss
fdivp
inc
jge
pushf
pop
xor
cwde
and
xchg
mov
xor
arpl
xor
push
xchg
cmp
cmps
jmp
leave
dec
popf
popa
and
addr16
add
xchg
lock
in
mov
in
(bad)
mov
lea
aad
and
and
mov
lock
mov
pop
popa
mov
sub
pop
shl
xor
sbb
(bad)
jo
das
sbb
into
cmps
leave
mov
xor
cs
sti
shr
test
add
sub
xchg
popa
ds
xor
add
or
mov
add
loop
mov
adc
push
mov
cdq
pop
ins
repz
jle
push
add
jp
ins
sahf
jecxz
dec
shr
xchg
adc
iret
cmps
cwde
adc
jns
imul
clc
adc
mov
xchg
mov
in
ins
sbb
pushf
scas
shr
cld
xor
jo
and
aad
push
aam
scas
enter
data16
lods
xchg
xchg
adc
mov
and
mov
or
sbb
leave
(bad)
ins
out
lahf
je
test
mov
and
cmps
(bad)
pop
retf
dec
not
push
rcr
or
cmps
push
xchg
pushf
rcr
arpl
lds
aad
lahf
outs
repz
mov
jnp
bswap
js
inc
outs
adc
xchg
xor
in
jmp
pop
cld
jp
xor
sbb
dec
cmp
mov
leave
sbb
sub
jge
push
cs
shl
int
dec
or
sub
jl
dec
inc
pop
jno
sub
das
or
fimul
xchg
adc
cdq
inc
leave
test
lock
push
push
test
stc
hlt
repnz
mov
push
mov
scas
rol
data16
and
rol
pusha
popa
adc
sub
(bad)
mov
pop
imul
aaa
pusha
add
(bad)
pop
xor
xchg
push
pop
fstp
div
sub
xor
mov
sti
adc
sbb
(bad)
call
lock
cmp
daa
dec
or
test
inc
or
ret
in
in
mov
mov
mov
xchg
add
inc
and
or
sti
adc
pop
jg
data16
ja
fsub
adc
out
minps
cmp
gs
sbb
mov
nop
cld
add
inc
xchg
cmp
test
jmp
test
loope
into
call
mov
stos
sbb
stos
out
mov
lea
repz
or
loop
pop
imul
xor
dec
mov
lea
push
sub
in
imul
mov
loopne
out
jbe
xchg
bound
in
jmp
xor
mov
pop
add
jo
jbe
mov
xchg
and
aaa
mov
fnstcw
or
adc
out
out
ret
unpcklps
mov
inc
inc
add
inc
in
ror
cmp
cs
dec
adc
mov
pushf
imul
icebp
dec
daa
xchg
pushf
int3
(bad)
pop
out
and
gs
shl
and
jmp
pusha
inc
test
cmps
cmc
ins
xchg
jg
call
sbb
jno
sti
push
mov
not
in
fs
ins
or
lods
xchg
jge
sbb
retf
pop
and
xor
xchg
repz
push
imul
xchg
ret
pop
sahf
push
cmc
push
popa
mov
cmp
lds
out
outs
call
mov
mov
fnsave
sbb
mov
pop
leave
cwde
std
adc
inc
icebp
hlt
xor
mov
adc
inc
call
dec
or
or
fsub
pop
inc
jne
add
cmp
out
xchg
dec
enter
aaa
and
mov
jecxz
dec
sub
mov
(bad)
sub
push
cmp
(bad)
(bad)
(bad)
out
popa
mov
push
stc
mov
jle
js
and
push
rcr
sub
adc
shl
pop
push
inc
rol
(bad)
div
sub
cs
xchg
dec
sbb
je
jecxz
cmp
lods
mov
out
xchg
test
test
(bad)
fwait
cld
xor
imul
cmp
xchg
neg
push
push
adc
inc
jmp
daa
add
in
in
cmp
shl
jno
out
inc
lahf
xor
push
cmps
cmps
sub
(bad)
enter
aad
movs
add
cmps
mov
add
test
loopne
fld
or
out
push
cwde
or
jl
int3
pop
pop
jbe
or
xchg
mov
jmp
rol
add
enter
test
mov
adc
adc
cmc
out
push
arpl
repz
pop
mov
in
fucomi
out
pop
cmp
jp
fst
shr
add
shl
test
and
and
fsub
dec
mov
pusha
cmp
rcr
imul
push
pop
xchg
stos
pop
and
je
jl
outs
daa
int3
jae
(bad)
jae
movs
push
inc
sub
stos
fld
arpl
xchg
or
mov
in
xor
mov
icebp
pop
fcomp
jge
into
adc
mov
arpl
cmps
jno
retf
inc
movs
jge
int3
dec
push
cmps
inc
js
add
xchg
dec
aas
pusha
pop
stc
sub
outs
sub
push
cld
lock
add
add
(bad)
sub
ss
inc
jp
scas
sub
adc
xor
cmps
sbb
push
mov
dec
pop
jo
add
dec
fstp
fcmovu
xor
ins
mov
cmp
jp
fisttp
inc
addr16
ins
popa
adc
enter
adc
ret
and
xchg
std
adc
inc
out
stc
and
xchg
or
pop
in
sub
das
jecxz
and
in
data16
mov
sbb
mov
xchg
pop
imul
and
pop
scas
lock
push
das
jo
rcl
(bad)
cmp
test
dec
ret
sub
mov
shl
test
mov
xchg
sbb
sar
push
icebp
push
inc
leave
in
xor
add
enter
jae
stos
test
xor
add
mov
rep
test
push
lahf
fld
inc
scas
or
enter
sub
jle
iret
pop
mov
outs
aam
inc
pusha
icebp
stos
repnz
mov
cwde
popf
popf
popa
and
mov
stos
movs
mov
xchg
push
mov
cdq
data16
pop
test
mov
jne
pop
cmc
cwde
sub
mov
cs
ins
pop
inc
repz
(bad)
cmp
mov
xchg
int
das
loopne
shl
dec
add
int
inc
ror
daa
jne
movs
jge
jae
pop
sbb
push
fisubr
push
out
cli
dec
mov
das
stc
xchg
jnp
and
movs
stc
push
mov
adc
mov
mov
sar
sub
pop
or
aas
retf
and
pop
mov
push
cmps
in
mov
dec
repnz
fistp
pop
and
dec
xchg
cmp
mov
pop
in
call
pop
inc
lods
test
dec
outs
inc
add
cmp
or
pop
or
or
xlat
cmp
int3
sbb
jle
sbb
das
mov
dec
stc
test
xor
and
pop
mov
data16
jge
pop
jg
ja
ds
and
jns
dec
push
jmp
clc
retf
jmp
shl
inc
js
pop
ja
xor
fnstsw
lods
fidivr
aam
fisub
push
pop
xor
repnz
sub
cli
or
jg
mov
xor
sti
not
out
call
icebp
stos
mov
sbb
aas
rcl
mov
(bad)
push
or
inc
cwde
(bad)
xlat
scas
enter
scas
or
ret
std
mov
retf
ja
xor
push
jb
bound
adc
jns
in
sbb
dec
movs
inc
lods
lock
cld
retf
leave
or
popf
in
and
mov
jp
imul
int3
std
inc
sbb
nop
(bad)
aam
xor
fisubr
test
iret
call
pop
loope
dec
nop
inc
mov
mov
fnstenv
popa
and
cmp
repnz
int3
inc
leave
loopne
sbb
out
out
in
enter
push
lods
push
cmps
bound
jns
fst
adc
inc
popa
inc
aad
test
ss
call
retf
adc
dec
mov
ss
fcomp
cwde
mov
or
(bad)
inc
gs
sbb
mov
(bad)
shl
dec
mov
inc
xchg
(bad)
imul
loopne
js
or
dec
adc
dec
rol
into
addr16
out
shl
jo
addps
pcmpgtd
in
cmc
retf
push
idiv
mov
xchg
rcr
mov
push
ins
jae
xor
sahf
outs
nop
call
xchg
(bad)
pop
jg
fs
mov
or
fs
int
sahf
ficom
or
hlt
add
(bad)
aas
sub
(bad)
mov
scas
jmp
mov
(bad)
adc
sahf
in
iret
nop
mov
inc
jo
xor
aas
xor
jmp
push
add
mov
inc
xor
into
lahf
out
mov
enter
das
das
std
sti
lahf
cmps
pop
pop
shl
or
push
adc
inc
pop
cmp
ins
test
sub
xor
add
sbb
cdq
add
xor
and
test
jmp
ins
retf
add
neg
push
jg
out
mov
jns
lea
push
sub
push
mov
(bad)
aam
adc
sub
add
mov
repz
popa
add
mov
jmp
dec
and
push
push
cdq
stc
mov
int
mov
cli
add
std
or
jo
dec
mov
imul
into
rcr
jb
cli
es
cmp
pop
add
call
inc
(bad)
cmc
and
(bad)
test
in
mov
mov
scas
fidiv
std
cmps
pop
push
(bad)
rcr
loop
fimul
movs
push
jb
or
adc
mov
pop
mov
rol
ja
sub
dec
and
xchg
inc
test
fidivr
push
sub
pusha
outs
ins
pop
cdq
jp
out
cmp
inc
mov
mov
push
push
or
call
mov
cmps
test
das
jecxz
imul
loopne
push
in
mov
stc
(bad)
imul
dec
inc
pop
pop
je
dec
jne
xchg
or
dec
cmp
leave
cmp
sbb
fsubrp
xlat
lea
mov
scas
or
pop
movs
sub
rcr
mov
les
es
dec
retf
das
(bad)
and
mov
jns
lods
dec
adc
and
mov
fstp
mov
pop
aad
cmps
daa
xchg
dec
adc
shl
into
stos
add
add
xor
sbb
retf
inc
inc
and
popf
js
push
mul
xchg
ret
inc
and
lods
mov
dec
jecxz
iret
cmps
pop
mov
jle
xor
jo
jns
or
xchg
mov
inc
pop
or
retf
add
mov
cmp
lods
jge
outs
ss
les
dec
mov
jl
ret
test
dec
out
ja
shr
add
retf
sbb
pop
jbe
scas
imul
cmps
cs
in
push
mov
sbb
aaa
mov
inc
sub
and
cmps
mov
lea
fisubr
iret
out
jb
add
out
mov
pop
(bad)
outs
repz
out
push
jle
stc
sub
cmp
test
inc
pusha
clc
jns
mov
pop
lods
arpl
sbb
int3
call
dec
inc
push
push
es
iret
(bad)
ficom
fistp
scas
les
cmc
das
mov
pop
fild
outs
sub
mov
stos
ins
mov
iret
iret
or
aad
dec
push
push
data16
in
retf
or
out
jns
xlat
inc
ins
jno
ds
and
repz
(bad)
mov
repnz
mov
aaa
sub
in
push
(bad)
jb
sbb
xchg
pushf
fist
bound
or
xor
push
cwde
and
mov
test
jg
loope
xchg
push
mov
in
retf
pop
inc
push
fmul
cs
xlat
repz
xor
adc
fidiv
retf
aad
arpl
push
std
fwait
push
sar
mov
shr
stc
aaa
pop
enter
fs
dec
std
mov
out
arpl
mov
les
sub
push
(bad)
xchg
sub
pop
rcr
stos
mov
(bad)
mov
test
add
ds
out
shl
neg
push
xor
add
jne
pop
popa
into
in
add
inc
and
ret
inc
inc
int3
adc
pushf
bound
pop
mov
and
pop
and
cmps
pushf
clc
push
adc
pop
jbe
aas
les
xchg
jp
in
push
mov
ror
stos
or
pop
pusha
push
dec
or
fcom
and
sbb
mov
jecxz
aam
mov
cwde
cmp
retf
jmp
push
pusha
into
jne
loopne
daa
call
and
imul
ror
enter
ins
retf
sti
cwde
(bad)
mov
push
sbb
mov
xlat
rcr
imul
hlt
mov
mov
jmp
ins
cli
pop
lods
dec
arpl
mov
sti
mov
aaa
shr
mov
jb
call
inc
mul
dec
xchg
es
sub
daa
test
mov
adc
lea
stos
(bad)
sub
mov
in
jge
inc
dec
sar
inc
fadd
imul
retf
cmp
shr
sub
fidivr
es
and
ret
test
mov
push
fs
inc
xchg
std
pop
dec
pop
jle
mov
sar
mov
shl
shl
fstp
mov
das
sub
dec
or
pop
and
ja
jmp
hlt
mov
lds
stc
bound
aad
cmp
cmps
xchg
(bad)
mov
dec
test
or
cdq
stos
xchg
dec
push
add
repnz
scas
pop
(bad)
adc
inc
popf
test
stc
psraw
add
sbb
and
pop
jg
and
push
sti
ins
push
xor
mov
cmp
xchg
adc
jbe
sbb
outs
pop
push
and
loopne
sub
int
shl
mov
mov
pop
lahf
sbb
in
(bad)
std
loop
imul
cmp
retf
out
jns
jns
pusha
mov
pop
shr
pop
xchg
bound
enter
cmps
outs
lock
and
mov
js
lock
cmp
out
dec
pop
sub
xchg
mov
mov
sbb
(bad)
nop
pop
mov
mov
adc
aam
mov
jg
and
and
das
aaa
dec
sub
sub
add
adc
jge
retf
mov
test
cmp
loopne
inc
mov
and
adc
ffreep
inc
sub
fcmovb
push
xor
enter
shl
mov
arpl
in
mov
and
cs
std
add
stos
adc
stos
push
shr
adc
call
stc
cdq
xor
adc
pop
mov
jg
stc
std
jae
out
test
jg
adc
pusha
fild
(bad)
sbb
cmp
sub
mov
and
pushf
in
retf
push
ret
or
push
mov
mov
xor
xor
inc
aam
and
jmp
and
push
mov
adc
daa
sub
push
add
push
push
sti
(bad)
aas
shl
out
out
mov
xlat
xchg
push
pop
jno
mov
std
xlat
cmps
mov
aam
mov
mov
fcmovnb
call
mov
push
nop
pop
lock
fwait
stos
inc
popa
sbb
out
bound
ficom
push
jns
(bad)
fadd
lods
test
repz
mov
cmp
mov
xor
inc
in
ficom
arpl
lock
xor
mov
stc
cmps
mov
push
push
call
and
sbb
stos
ret
and
mov
xchg
adc
stc
cwde
mov
out
inc
dec
call
in
cmps
fnstenv
mov
test
xlat
or
or
cmps
push
movs
dec
dec
(bad)
mov
arpl
add
rcl
cmps
hlt
outs
dec
clc
or
push
es
stos
out
dec
je
sti
or
mov
std
push
inc
xchg
push
cmps
daa
xchg
repz
test
adc
(bad)
push
jae
inc
sbb
dec
sub
mov
and
jns
div
fsubr
dec
outs
inc
pop
xor
cmp
mov
cmps
retf
retf
mov
sub
ds
in
push
lods
call
push
lods
mov
ret
popf
adc
or
in
xlat
mov
add
jmp
inc
xchg
retf
sub
mov
popa
dec
repz
cmp
push
ja
into
imul
call
xchg
adc
into
xor
xchg
movs
inc
repnz
cmps
call
(bad)
(bad)
call
xlat
mov
and
nop
mov
jmp
cmp
outs
jmp
sti
cmps
jmp
jo
and
(bad)
bound
add
cmp
mov
aaa
inc
out
ins
gs
push
test
ret
jp
(bad)
repz
cli
or
pop
fld
cs
lea
push
aas
call
daa
mov
lds
or
aad
push
xchg
mov
and
ja
add
add
push
mov
fisttp
jg
pushf
or
sub
(bad)
cs
jmp
movs
adc
rol
out
aad
jg
push
test
lods
stos
jne
int3
es
push
stc
int3
into
and
fdivp
push
mov
inc
push
jnp
retf
into
shl
test
inc
out
push
sar
stc
rol
cdq
sub
or
push
mov
dec
(bad)
in
arpl
stos
sub
inc
sahf
movs
push
sub
fistp
mov
cmp
sub
scas
inc
inc
and
stc
fwait
mov
cmc
dec
adc
pop
jle
push
cmp
sbb
out
cmps
xor
rol
clc
mov
stc
test
mov
mov
sbb
or
stc
ret
mov
(bad)
in
les
adc
lock
sbb
pushf
imul
cmp
lock
push
cmp
sbb
(bad)
in
mov
push
xchg
sbb
cdq
push
stc
mov
add
jo
imul
jle
pop
or
movs
outs
jno
daa
xor
sahf
sar
int
cdq
ss
cli
jecxz
(bad)
movs
mov
imul
out
test
int
xor
jae
pop
pop
cmp
inc
pop
cmps
or
xchg
sbb
dec
icebp
repz
or
aam
xor
pop
cmp
or
aaa
mov
sub
jmp
jbe
pop
mov
xchg
sahf
jl
xchg
ret
push
jmp
outs
imul
and
loop
stc
mov
stc
ins
sub
mov
lds
mov
mov
cmp
xchg
popf
cmp
int
and
in
ret
push
mov
jnp
or
jg
xchg
inc
push
popa
sub
sar
jne
pop
mov
dec
sub
cmp
push
in
into
repz
aaa
je
bswap
popf
test
dec
jle
pusha
xchg
cmp
jb
shl
add
jg
rcl
adc
jge
cmp
xchg
xor
mov
jecxz
icebp
mov
add
inc
and
mov
jne
data16
and
cmp
adc
sar
mov
in
and
je
push
retf
mov
(bad)
nop
ins
out
cdq
cmp
jb
push
stos
out
add
(bad)
xchg
in
inc
sbb
or
popf
or
mov
fstp
mov
pop
jmp
sar
test
push
mov
stos
jmp
fcmove
fwait
ret
es
mov
inc
xchg
mov
mov
mov
icebp
loope
inc
sbb
jnp
inc
addr16
mov
push
jns
and
ret
push
test
iret
xor
sbb
pop
std
pop
and
adc
sub
sub
bound
(bad)
scas
jg
xchg
and
dec
aad
inc
xchg
push
ja
hlt
(bad)
xor
jo
cmp
fcomp
mov
dec
mov
pushf
jae
loop
inc
mov
and
lods
xchg
mov
mov
mov
push
out
outs
aas
cmp
jnp
xchg
stos
push
cmp
daa
sbb
push
clc
mov
fwait
outs
aad
mov
cmc
mov
inc
ja
cmps
lahf
cld
ins
test
ins
dec
adc
ror
dec
test
cmps
or
jmp
cmp
jle
stos
xchg
mov
sbb
call
mov
divps
out
mov
pop
aaa
jmp
aam
cmp
add
movs
jge
fistp
jno
out
lods
pop
cmp
imul
pop
icebp
ss
mov
xlat
pop
mov
dec
mov
pop
jne
(bad)
jl
std
pop
xor
stos
add
ror
rcl
stc
fst
xor
pusha
mov
add
jno
cld
aad
(bad)
lods
aas
mov
jne
sub
retf
mov
into
stos
cli
sub
jns
jne
mov
bound
adc
test
hlt
push
(bad)
cwde
std
enter
lock
sub
adc
ret
sbb
pop
fimul
ins
inc
leave
mov
out
rol
inc
daa
ja
jbe
inc
xchg
push
imul
xchg
mov
rcl
in
sub
retf
retf
jo
fdivr
add
pop
cmp
or
adc
pop
fstp
push
sti
xor
sbb
outs
pop
call
or
les
(bad)
cmc
ins
push
or
pushf
push
(bad)
arpl
cmp
call
daa
or
iret
jmp
mov
inc
loope
addr16
iret
int3
std
imul
or
rcl
in
xchg
push
dec
mov
(bad)
xlat
sub
xor
and
pop
sbb
cmp
lock
cmp
stos
sub
mov
sbb
sub
shl
call
jle
pop
sub
jo
loop
fs
pop
mov
pop
out
inc
popa
lea
or
xchg
jg
pop
pop
jmp
xchg
sub
sbb
movs
adc
sub
sub
jne
sbb
and
push
inc
adc
out
mov
mov
(bad)
sbb
lods
sub
mov
das
nop
aas
jg
jnp
cs
and
push
mov
xchg
mov
mov
lahf
mov
hlt
xchg
pop
jmp
dec
adc
mov
xchg
lahf
bswap
or
xchg
ja
inc
jmp
mov
cld
imul
dec
aad
inc
adc
lea
jnp
sbb
enter
or
pop
(bad)
fcomip
adc
js
test
pop
add
out
lahf
xor
das
jne
(bad)
aaa
sub
xchg
push
sahf
xor
loopne
test
movs
pusha
(bad)
sbb
repnz
inc
adc
cmp
out
ins
push
push
sbb
das
scas
out
out
mov
pop
mov
push
fwait
movd
xor
dec
(bad)
mov
nop
cmp
fist
and
shr
mov
arpl
loope
leave
pop
jg
loop
adc
mov
sbb
cmps
out
sub
push
cmp
addr16
retf
xchg
imul
cwde
cli
jae
xor
retf
dec
cmps
jbe
xor
addr16
loope
aas
push
xor
push
cld
pop
xchg
push
shr
das
or
repz
call
test
xor
test
adc
inc
or
jle
mov
push
loopne
xor
sub
mov
bswap
cmp
push
into
jp
das
in
cmp
or
xchg
je
outs
pop
(bad)
retf
mov
xchg
adc
push
and
pop
sbb
rol
and
mov
jmp
test
outs
add
inc
inc
in
adc
and
loopne
mov
lds
in
jecxz
dec
fcomp
mov
outs
(bad)
or
and
xor
mov
popf
mov
xchg
add
xchg
dec
add
retf
test
out
jmp
js
sub
and
mov
jge
clc
add
or
inc
adc
mov
imul
jecxz
or
dec
push
inc
inc
xchg
test
jae
xchg
inc
jp
inc
(bad)
push
xchg
adc
ss
cmp
mov
push
dec
or
lahf
mov
and
mov
push
mov
adc
pop
adc
repnz
xor
sub
dec
or
cwde
call
ja
add
add
(bad)
sar
ins
push
rcr
mov
pop
dec
hlt
jl
jb
dec
hlt
inc
xor
jno
(bad)
sbb
movs
inc
adc
and
mov
sbb
imul
dec
scas
pop
or
ins
jb
mov
and
test
les
int
pop
aaa
dec
(bad)
xor
mov
pop
sbb
dec
cmp
cmc
sbb
ja
mov
(bad)
jne
mov
jge
jmp
cmc
or
mov
push
cmp
sti
mov
add
push
dec
inc
ins
mov
jmp
(bad)
(bad)
inc
xor
test
(bad)
call
mov
pop
in
cmp
pop
retf
mov
ja
inc
cmc
sti
and
addr16
nop
mov
xchg
outs
(bad)
fimul
inc
mov
pop
lods
cmp
xor
mov
sbb
jno
out
ror
xchg
das
stos
cmp
test
retf
sub
sbb
cmp
adc
retf
and
cli
jle
sub
cwde
xchg
pop
cld
add
hlt
and
pop
cld
jne
movs
mov
(bad)
test
dec
adc
xor
adc
adc
pop
lock
xor
sahf
and
vpmacssdqh
mov
lock
stos
test
mov
(bad)
es
sbb
loope
sbb
jnp
pop
and
popa
cmp
sub
stos
mov
jo
inc
shl
mov
(bad)
mov
lds
xchg
out
jle
aam
sub
push
iret
and
jae
fild
call
xlat
cld
pop
mov
mov
clc
sbb
(bad)
stc
pop
or
loopne
sub
in
(bad)
bound
cmps
int
cmps
jmp
in
mov
adc
lds
lock
xchg
xchg
mov
push
dec
inc
push
mov
push
mov
mov
loope
xor
mov
and
inc
adc
lods
(bad)
xchg
mov
pop
add
daa
inc
add
or
pop
dec
mov
pop
retf
xchg
mov
pop
mov
ffreep
sbb
inc
gs
jl
inc
(bad)
scas
cmp
adc
adc
repnz
shr
ret
mov
loope
xlat
push
jg
jmp
and
repnz
test
cmp
nop
sahf
(bad)
aaa
adc
(bad)
sbb
and
push
inc
(bad)
fiadd
lods
mov
enter
sub
cmp
or
adc
jbe
shr
mov
js
jmp
inc
pop
icebp
mov
xchg
fsubr
pop
mov
jmp
pusha
sub
fsubr
movs
loopne
retf
sub
cli
jae
xchg
or
(bad)
mov
mov
cwde
mul
lock
fisttp
out
jno
fdivr
je
aas
je
mov
jp
lds
stc
mov
stos
pusha
frndint
ds
inc
xlat
fiadd
xlat
outs
or
fdiv
leave
push
sub
mov
and
adc
push
sbb
stc
mov
popf
lds
cmps
push
add
push
popf
sbb
cs
jge
dec
add
ins
aad
es
arpl
add
jno
add
mov
or
or
xchg
xor
fmulp
mov
sets
jbe
lods
cmp
push
and
js
add
mov
xchg
mov
jo
mov
(bad)
xlat
scas
pop
sbb
lds
stos
xor
imul
cmp
jae
cmp
ror
ja
dec
push
cli
adc
leave
sbb
or
out
add
inc
sbb
xor
sub
add
ins
cmps
inc
enter
repnz
pop
repz
jno
aam
sub
out
push
dec
mov
add
daa
jmp
outs
cwde
fsub
xor
rol
ss
pop
ret
jp
loope
jecxz
mov
mov
or
pushf
pop
aaa
sub
mov
or
ds
out
test
cmps
out
push
jle
push
in
or
inc
fadd
fldcw
not
cmps
retf
sub
pushf
mov
inc
outs
in
cmps
icebp
lods
iret
inc
inc
shl
mov
adc
jo
fwait
mov
sub
mov
push
mov
push
out
scas
ret
enter
(bad)
call
add
popf
dec
pop
pop
jg
mov
lea
sub
loopne
sub
pop
jb
xor
cs
xor
sbb
jge
mov
imul
shr
jne
push
stos
cdq
jmp
xchg
in
out
pop
mov
mov
dec
push
dec
or
mov
pop
or
jecxz
mov
xor
push
test
sub
push
and
arpl
adc
in
rol
(bad)
inc
or
fistp
mov
sub
outs
(bad)
push
push
sti
pop
jo
les
retf
inc
pop
les
xchg
mov
sub
push
cmp
shl
push
push
mov
loop
ror
jp
daa
jle
pop
test
cmp
add
outs
or
pop
sbb
call
pop
sub
cmps
outs
mov
mov
out
test
mov
sub
adc
loope
mov
dec
mov
fnstenv
jmp
mov
(bad)
mov
mov
jne
mov
push
fisttp
in
pushf
mov
fisub
sub
fwait
retf
inc
out
add
jmp
div
test
mov
xchg
inc
scas
imul
jmp
xchg
mov
sahf
cdq
ins
add
sbb
out
pop
and
push
and
ficomp
jno
and
ins
mov
adc
int
gs
es
add
inc
in
cmp
mov
dec
ret
dec
pop
mov
xor
mov
addr16
or
fnstenv
mov
cmp
or
stos
fist
sti
into
jle
(bad)
mov
or
and
xchg
in
ficomp
dec
fnstenv
add
or
not
push
cwde
mov
imul
cli
push
jb
out
mov
shl
es
mov
(bad)
sahf
or
sbb
jp
jno
sub
addr16
push
jmp
xchg
pusha
aas
std
lock
outs
push
jmp
and
cmps
push
lds
daa
popa
mov
jb
gs
fcomp
sub
(bad)
xor
sbb
test
jge
int3
push
or
cmp
mov
jns
jne
xchg
retf
cmp
int
dec
xchg
mov
lods
mov
cwde
cmp
int
mov
enter
jg
add
xor
movsx
jge
ds
mov
pop
sbb
add
jl
pop
xor
jle
jle
fld
retf
dec
lahf
in
cmp
popa
loope
hlt
pop
mov
xor
add
push
mov
xchg
xor
mov
cvtps2pi
call
test
ss
imul
pop
loop
dec
shl
js
inc
mov
xchg
ins
or
xchg
xor
les
imul
lahf
xor
push
pop
mov
and
mov
ins
push
pop
add
rcl
outs
jo
call
push
(bad)
ja
sbb
popf
xchg
jne
dec
add
rcl
pop
cdq
cdq
or
xchg
sub
push
add
or
pushf
adc
mov
mov
adc
aaa
inc
fstp
test
mov
(bad)
add
sbb
and
and
fimul
sub
ficom
sub
repz
scas
and
call
and
mov
scas
call
sbb
mov
adc
and
out
pop
enter
sub
push
fsubr
lods
cmp
ror
aas
inc
pusha
imul
mov
mov
dec
enter
adc
sbb
xchg
(bad)
sbb
das
and
mov
xchg
(bad)
repnz
bound
pop
not
pop
je
xor
shl
add
push
push
xor
sub
cmp
mov
fadd
inc
das
movs
adc
sbb
sbb
pop
push
jae
shr
(bad)
jp
mov
shl
sub
lods
clc
mov
test
mov
pop
xchg
adc
dec
mov
mov
aaa
xor
mov
mov
data16
mov
aas
bound
inc
pop
add
cmp
add
mov
push
jmp
sbb
shl
xor
mov
push
bound
xchg
scas
cli
fs
iret
mov
xchg
dec
jns
scas
retf
call
jns
mov
xchg
sahf
sub
push
dec
adc
mov
inc
xor
pop
pop
add
hlt
cmp
dec
or
push
mov
gs
push
es
test
adc
retf
inc
jp
jecxz
arpl
scas
shl
mov
out
daa
rcl
push
fisubr
xor
and
(bad)
mov
adc
aas
xchg
sub
fstp
push
jmp
sbb
inc
leave
arpl
sbb
lahf
test
pushf
and
push
cmps
jmp
rol
in
pop
xchg
repnz
out
dec
dec
pop
or
sbb
cmps
add
into
push
dec
movs
call
sub
call
pop
and
mov
inc
je
sub
dec
mov
xchg
xchg
sbb
cmp
cmp
loope
xchg
outs
loope
add
inc
ficom
jns
idiv
jecxz
adc
mov
bnd
mov
ss
add
inc
int3
aaa
cmp
and
daa
jg
sbb
(bad)
push
in
adc
xor
jbe
into
inc
loope
push
es
call
jp
mov
neg
ja
add
cmp
push
xlat
sbb
sbb
ds
inc
xor
cmps
sbb
adc
bound
xchg
cmps
xchg
jo
jne
jecxz
xchg
xor
dec
in
pop
jmp
(bad)
popa
js
jnp
inc
jle
cmps
add
es
pop
mov
(bad)
call
test
clc
pop
and
inc
cld
pop
or
scas
fld
or
xor
inc
sub
push
in
test
inc
shl
lock
push
mov
mov
cli
dec
push
push
mov
loopne
pop
dec
bound
loopne
repz
es
cmc
or
mov
jle
mov
sub
pop
out
jae
xor
add
lock
jnp
adc
fidivr
scas
dec
jb
(bad)
adc
jg
ret
cmps
xchg
inc
mov
mov
out
xchg
in
fbstp
jp
mov
daa
mov
or
fdivr
fwait
push
xlat
jne
cmp
aam
or
shr
mov
lds
pop
stos
ins
sub
(bad)
stc
mov
mov
rcl
sbb
cwde
cwde
cmp
retf
int3
es
sub
mov
cwde
jp
mov
add
cmp
addr16
xchg
outs
popf
lods
or
jp
xchg
and
sub
push
push
lea
dec
push
jmp
jg
push
pusha
stos
adc
ja
jnp
and
cli
test
jg
(bad)
out
sbb
dec
mov
outs
xchg
fsubr
test
push
push
jae
mov
push
test
mov
xor
ja
add
mov
xchg
ins
xchg
mov
scas
aas
in
out
fwait
int3
push
and
loopne
and
pop
adc
scas
rcl
inc
dec
add
pushf
xchg
sbb
fsub
mov
dec
sbb
jl
mov
cmc
lods
test
test
and
es
xchg
lock
out
adc
ins
hlt
fild
fcom
hlt
mov
fimul
adc
dec
imul
sahf
push
fsub
repz
loopne
aaa
xchg
icebp
cld
inc
or
jg
nop
cdq
repnz
jo
cmp
xchg
int3
mov
mov
or
cmc
(bad)
icebp
jmp
xor
aas
in
hlt
dec
xchg
cmps
int3
jae
ins
mov
pop
fnstenv
loopne
js
jmp
push
pop
sbb
mov
cmc
push
outs
mov
lahf
or
enter
sub
jb
out
aam
mov
inc
push
xor
cmp
and
sub
imul
inc
into
(bad)
fisttp
dec
sub
cdq
jno
aam
mov
scas
sar
adc
lods
pop
imul
lahf
ins
ins
retf
retf
adc
push
and
rcl
xlat
cmp
xor
(bad)
xlat
ins
sahf
(bad)
push
in
test
mov
setne
stos
xor
fwait
inc
ficom
aam
outs
popa
dec
jge
fwait
mov
xor
sbb
dec
stos
and
fwait
rol
fdivr
mov
nop
rcr
xchg
push
test
mov
and
sbb
and
adc
and
ins
(bad)
push
dec
and
cs
mov
out
sbb
dec
daa
and
imul
jns
cdq
fwait
lahf
add
pop
and
mov
shl
jmp
push
(bad)
add
xchg
ins
ficom
add
mov
jmp
mov
sbb
adc
or
and
adc
ss
sbb
test
push
cmp
and
in
in
test
mov
inc
xlat
aas
pop
adc
cmps
jns
sar
xchg
cli
jo
push
leave
mov
sub
lds
push
xlat
or
in
out
bound
sar
mov
clc
cmp
sbb
dec
scas
int
int3
mov
sub
and
inc
popa
out
scas
jo
jo
ss
(bad)
hlt
add
mov
dec
inc
sbb
xor
pusha
cmp
pop
mov
lock
pop
jle
repz
mov
sbb
xor
imul
add
daa
daa
ja
loope
dec
(bad)
mov
jmp
outs
retf
add
xor
addr16
movs
das
repz
adc
jl
gs
stc
dec
inc
push
out
movs
xchg
sub
in
movs
sub
cmps
fsubr
jl
jb
in
call
mov
imul
scas
in
inc
jae
pop
ins
mov
sub
imul
mov
dec
sbb
pop
je
xor
fadd
adc
es
dec
sbb
cmps
sbb
mov
mov
xor
call
das
outs
xchg
ja
sar
imul
mov
mov
push
xchg
sub
sbb
aas
jb
imul
push
push
test
xchg
push
mov
sub
add
or
loop
xchg
push
adc
sti
inc
adc
cmp
aad
fcomp
repz
mov
jno
xor
xchg
inc
dec
inc
imul
xlat
cmp
pop
loopne
xchg
fst
lods
sbb
aam
cmp
inc
cs
jecxz
inc
mov
arpl
fld
test
pop
(bad)
aam
lds
into
out
mov
mov
(bad)
jno
sub
enter
cmp
add
fisub
xchg
test
push
pop
adc
xor
bound
cmp
cmc
scas
mov
es
test
leave
pop
xchg
pop
jl
mov
adc
clc
push
xchg
aad
cmp
push
enter
daa
fdiv
push
je
repz
sbb
sti
xlat
cmp
add
pop
mov
pop
retf
xchg
not
sti
(bad)
cmps
das
loope
fisubr
lea
mov
ja
inc
jg
and
test
add
push
push
fs
jns
push
dec
pop
add
jne
(bad)
fnstcw
jp
movs
xor
idiv
mov
fnsave
rcr
(bad)
rcr
xor
xchg
loope
and
jge
add
xchg
mov
ret
sahf
in
jae
cmp
in
div
or
adc
xchg
or
pop
mov
pop
inc
in
div
movs
mov
xchg
neg
push
ins
mov
pop
xor
add
fldenv
fsubrp
jmp
xchg
mov
push
pop
mov
push
inc
adc
xchg
mov
push
mov
mov
mov
aam
xchg
add
sbb
sbb
les
stos
jmp
rol
xchg
enter
cmp
sbb
les
or
call
aas
cmps
push
std
into
leave
push
stc
leave
cmc
push
fld
sub
cmps
in
xchg
stc
mov
jb
in
xor
sbb
shld
imul
lods
gs
test
sahf
cmp
jge
ret
xchg
pop
pop
cli
les
push
aas
add
inc
sbb
dec
xchg
repz
sub
stc
sbb
lea
inc
or
mov
rcr
fld
repnz
mov
push
cs
jae
mov
mov
ins
mov
mov
or
inc
cmp
arpl
push
js
cmp
rol
push
xor
mov
cmp
pop
rsm
pop
pop
cmp
sbb
imul
jg
lods
pop
pop
cli
mov
mov
xchg
mov
lods
mov
fsubr
cmp
(bad)
repnz
and
ss
jns
and
or
add
inc
or
and
lahf
jmp
cmp
out
(bad)
and
add
mov
out
rol
add
push
stos
jle
dec
mov
test
adc
scas
adc
call
imul
les
cmps
cmp
mov
sbb
xchg
dec
ret
stc
pop
xchg
(bad)
xchg
cdq
xor
cmp
(bad)
out
cs
int
lds
aad
jg
cs
clc
dec
or
stc
jne
jecxz
or
inc
cmp
or
fist
nop
adc
(bad)
and
jbe
fsub
jno
outs
scas
and
dec
fild
mov
sar
mov
xor
ja
mov
lods
ds
and
or
call
mov
mov
inc
aam
add
adc
push
jmp
pushf
fidivr
cmp
sub
lahf
call
(bad)
clc
jno
ret
cmp
push
neg
adc
pop
sbb
stos
fdivr
xchg
dec
mov
add
fs
add
fs
jmp
mov
cmp
loope
cwde
aas
inc
mov
repnz
xor
mov
(bad)
ret
imul
xor
sahf
jmp
dec
in
enter
add
mov
adc
sub
push
call
sbb
jmp
ror
dec
pop
addr16
adc
retf
daa
es
icebp
inc
mov
(bad)
push
fcmovbe
inc
inc
jmp
shl
(bad)
fsubr
(bad)
rol
sbb
cs
jb
ror
adc
in
mov
pop
and
mov
or
jle
loopne
push
adc
dec
or
xchg
add
ins
stos
sbb
frstor
xor
inc
js
pop
inc
xchg
fnstcw
sub
(bad)
in
test
push
iret
sbb
in
lea
pop
(bad)
mov
push
mov
ret
cmc
xchg
mov
mov
mov
mov
jns
es
sbb
cvtpi2ps
inc
mov
cmps
lea
je
mov
mov
inc
and
inc
and
ja
adc
cmp
mov
xor
mov
inc
cmp
jae
cmps
shufps
pop
(bad)
sbb
jae
xlat
jb
inc
jle
add
imul
stos
inc
pushf
inc
xor
imul
int
mov
(bad)
(bad)
sub
dec
repz
fisubr
inc
sbb
cmp
gs
dec
jo
inc
or
mov
fwait
js
ja
cmc
mov
mov
pop
inc
push
into
out
cmp
jecxz
cmp
add
stc
repz
jbe
pop
mov
lods
cmc
ret
mov
int3
xchg
dec
or
ins
push
or
aam
lea
imul
xchg
fs
mov
sbb
push
out
inc
jno
add
ss
(bad)
cmp
int3
jmp
jns
sbb
dec
inc
gs
leave
or
mov
or
shl
pop
jb
cli
inc
out
test
out
mov
and
in
xor
in
lock
mov
ins
mov
inc
push
and
out
mov
stos
jmp
(bad)
test
out
pusha
loope
sbb
dec
jbe
fcmovbe
dec
cli
sub
or
mov
js
stos
fwait
sbb
cmp
lds
retf
cmp
jecxz
fist
cmp
std
cmp
fild
mov
dec
clc
popa
jp
push
adc
cmps
imul
push
sub
mov
call
mov
inc
stc
push
pop
daa
jo
into
sub
bound
mov
push
adc
pop
in
leave
mov
mov
(bad)
loopne
mov
dec
imul
mov
inc
add
adc
and
ds
ins
push
dec
add
std
out
rol
and
cmp
inc
cmps
sbb
or
dec
fisub
jg
pop
and
jmp
cld
sahf
pop
mov
or
pop
retf
add
mov
fld
mov
pop
aam
pop
mov
mov
jns
(bad)
(bad)
and
jl
imul
daa
in
cdq
xor
add
je
cld
mov
aaa
mov
aas
retf
mov
cmp
add
dec
adc
in
jmp
cmp
int
es
sub
scas
int
cmp
pusha
add
and
push
pusha
or
retf
xlat
mov
lock
lods
idiv
push
stos
sub
scas
mov
dec
in
das
dec
jp
aam
add
xor
cmp
lods
dec
or
test
movs
sub
stc
xchg
and
adc
cmp
jne
shl
ss
sbb
sbb
sbb
out
pop
cli
push
int3
jp
or
mov
sub
xchg
dec
and
jl
fnstcw
push
retf
pop
arpl
adc
xchg
cmp
ins
xchg
mov
fwait
dec
and
mov
cmp
idiv
jae
fcomp
leave
jp
mov
jl
pop
call
fldenv
xchg
xor
ins
cs
and
pop
mov
lea
push
outs
jns
pop
lods
rcl
int
lea
call
inc
jle
inc
mov
xor
cmp
mov
loopne
js
retf
pop
push
or
jae
mov
adc
mov
mov
xchg
pcmpeqw
dec
sub
retw
icebp
and
add
and
lods
outs
add
cmps
leave
mov
and
icebp
hlt
dec
inc
sbb
in
xor
sbb
neg
pop
pop
add
scas
dec
add
dec
loopne
aam
out
movs
mov
jbe
push
stos
shl
cwde
add
pop
inc
repz
add
(bad)
retf
sub
push
ins
test
test
or
sub
aas
mov
sti
(bad)
enter
mov
mov
daa
leave
mov
adc
fidiv
add
ja
pop
es
sub
scas
enter
mov
imul
fcomip
inc
dec
mov
cwde
and
mov
jmp
(bad)
dec
and
jbe
mov
xchg
arpl
add
stc
mov
xlat
xor
dec
(bad)
pop
mov
cmp
movs
push
sbb
aas
jbe
and
mov
mov
add
push
jecxz
in
out
adc
sahf
out
pusha
je
push
hlt
jno
(bad)
pop
sub
cwde
xchg
hlt
pop
outs
sahf
cld
jns
ins
(bad)
cmp
inc
mov
rol
movs
into
stos
inc
sub
lods
cs
test
jnp
jno
add
jle
xchg
pop
xchg
loope
out
aas
lods
xlat
sub
leave
rcr
push
mov
popf
ret
imul
(bad)
jl
cli
jecxz
les
pop
add
les
fdivr
mov
(bad)
bound
ret
div
sahf
cli
xchg
leave
cmp
mov
push
mov
lods
aad
lds
mov
cwde
mov
pop
mov
inc
sub
rcl
in
cs
push
popf
pop
mov
mov
pop
das
mov
test
std
pop
cmps
pop
mov
and
jp
cmps
das
pushaw
add
push
adc
add
loopne
mov
call
(bad)
fcom
enter
pop
xor
mov
push
clc
lea
mov
jp
mov
or
dec
adc
lods
and
dec
mov
push
or
xor
fdivr
mov
repz
(bad)
sub
pop
scas
fcomp
outs
jg
test
sub
adc
out
sti
rcr
jae
jmp
enter
xor
arpl
shl
fld
jnp
adc
stos
mov
adc
push
mov
fs
xor
push
test
cli
push
dec
adc
adc
rcl
mov
stos
cld
adc
test
enter
in
cmp
movs
pushf
adc
das
js
sub
and
fsubr
jne
jmp
add
out
jmp
stos
jae
lods
movs
dec
dec
icebp
out
out
fs
gs
or
mov
inc
loope
iret
pushf
movs
sbb
stos
or
inc
and
add
ss
call
push
mov
or
stos
pop
aad
loop
sti
pop
mov
sbb
(bad)
hlt
or
les
push
xchg
or
pop
pop
aam
push
jbe
cmp
and
(bad)
sub
or
sub
ficom
es
mov
mov
out
cli
dec
sti
xchg
mov
mov
mov
in
sbb
jnp
sub
lea
mov
(bad)
jl
std
mov
push
mov
js
push
jo
sbb
jbe
out
jnp
inc
dec
icebp
aaa
sub
test
sbb
lods
stc
sub
xor
sub
mov
pop
loopne
lds
or
data16
into
add
pop
pop
bound
pop
leave
inc
inc
jl
jle
(bad)
jmp
std
and
mov
or
xchg
cmps
call
test
dec
movs
fmul
dec
inc
sar
aam
mov
retf
aad
nop
sbb
mov
ins
inc
pop
jno
ror
add
test
in
cmp
stc
mov
sbb
fistp
pop
js
mov
mov
cwde
and
add
cmps
(bad)
out
mov
jle
mov
xchg
ror
rcr
lds
mov
pop
xchg
in
inc
add
cmp
jne
cmps
mov
ror
cmc
rcl
cmp
jae
inc
inc
fsub
push
mov
fldz
stos
inc
dec
fmul
sbb
pop
addr16
mov
xchg
cdq
xor
pop
and
mov
clc
xchg
pop
cmp
push
enter
and
(bad)
cmp
inc
add
das
xchg
jge
pop
gs
and
cld
cmp
div
push
repnz
jnp
movs
out
mov
sub
cmc
dec
dec
leave
daa
je
sbb
in
out
popa
cwde
lock
pop
jbe
or
push
gs
shr
mov
arpl
pop
retf
mov
shr
les
not
dec
movs
(bad)
imul
cs
xor
cwde
sahf
and
xchg
sahf
push
in
cmp
sub
mov
pop
in
and
adc
inc
push
outs
add
rcl
xor
pusha
mov
xchg
and
mov
dec
sbb
xor
add
pop
ret
inc
add
cld
in
xchg
dec
jno
xor
int
les
jns
jge
jg
inc
sub
cli
xchg
mov
leave
out
pop
mov
mov
push
sbb
sbb
scas
add
bound
inc
adc
mov
call
sbb
add
stos
and
movs
push
mov
mov
inc
mov
in
fsub
ins
addr16
or
mov
mov
cmp
cmps
mov
(bad)
jae
adc
test
xor
sbb
leave
lea
adc
xor
push
mov
into
adc
(bad)
in
cmp
fcom
mov
in
add
jns
xchg
jns
add
sti
ficom
hlt
push
push
mov
sbb
iret
je
test
pop
shl
or
mov
jecxz
mov
out
push
daa
jae
cs
out
sbb
add
mov
repz
pop
inc
inc
dec
sub
dec
inc
in
mov
pop
sti
loop
add
jp
fs
pop
cmps
inc
jge
mov
or
sbb
repz
rcr
dec
fs
into
nop
pusha
pop
retf
pop
loope
call
sbb
push
push
xchg
mov
aas
mov
aaa
dec
pop
lods
push
xor
sbb
pop
fs
pop
retf
rcl
xor
jno
pop
mov
movs
retf
jmp
xor
shl
lods
cmp
arpl
shr
jns
cmp
sub
(bad)
jne
xor
add
mov
ficomp
dec
or
lods
sbb
jb
mov
dec
pop
mov
imul
pop
dec
outs
cmp
cmps
dec
pop
push
jb
(bad)
jg
out
repnz
nop
fs
xlat
gs
aad
or
pop
inc
mov
ins
and
xchg
lahf
sbb
ins
xor
jbe
sub
ror
push
push
stos
test
sub
mov
leave
mov
aaa
add
repnz
sub
fxch
dec
add
jb
jl
mov
jp
mov
mov
movs
add
neg
repz
xor
jno
cmp
sub
mov
mov
loop
mov
fxtract
cmps
aas
mov
not
out
sar
mov
stos
dec
icebp
dec
iret
mov
(bad)
jne
sbb
mov
xchg
(bad)
and
pop
xchg
out
pop
call
mov
jnp
inc
pop
cdq
or
fisttp
dec
(bad)
mov
sub
ds
jmp
scas
test
push
xor
lods
loopne
add
scas
jns
test
stos
pop
bnd
or
and
into
xchg
je
pop
sahf
xchg
push
mov
xchg
fucomi
push
(bad)
pop
movs
out
out
ret
xchg
hlt
gs
(bad)
xchg
pop
fistp
in
in
in
inc
mov
mov
inc
imul
sub
sub
mov
cmp
sahf
mov
or
adc
sahf
and
cmps
mov
jne
push
sbb
cwde
gs
inc
enter
fld1
pusha
adc
lods
sbb
ret
aam
and
rcr
push
ja
dec
pop
jno
rol
mov
add
jmp
dec
(bad)
pop
bound
mov
out
push
mov
jno
cmp
push
out
and
adc
cwde
xlat
add
cmp
jae
dec
js
dec
adc
xchg
int3
movs
out
retf
push
mov
into
outs
(bad)
or
or
shl
dec
imul
enter
inc
fcom
test
(bad)
in
rol
ficom
sbb
inc
sub
(bad)
hlt
in
pop
das
pop
es
aam
and
xor
adc
das
jne
lahf
(bad)
retf
dec
gs
mov
push
jle
stos
or
pusha
fldcw
xchg
cmp
mov
das
xchg
(bad)
les
js
pushf
and
popa
shl
(bad)
(bad)
xor
stos
pop
push
int
sub
and
mov
rcr
sbb
rcl
fistp
dec
into
cmp
or
in
das
pop
push
leave
aam
pop
mov
xor
mov
sbb
xor
je
sbb
and
jg
xor
push
xor
ins
xchg
pop
or
outs
xchg
inc
ficom
stos
or
lock
pushf
push
add
add
and
sub
sahf
shl
mov
ds
test
mov
adc
addr16
mov
test
push
jb
fs
popf
cmp
push
pop
(bad)
and
(bad)
loopne
jmp
stc
es
nop
push
cwde
pop
nop
inc
movs
imul
test
aas
sbb
js
fucomip
adc
mov
mov
lock
jg
mov
cli
jge
mov
fidiv
add
xchg
push
xor
sbb
(bad)
pushf
sbb
pop
ins
mov
aas
mov
or
hlt
mov
(bad)
stc
dec
lahf
xor
add
pop
adc
loopne
push
shr
movs
movs
jnp
fiadd
inc
arpl
mov
jbe
scas
ficom
mov
fmul
or
hlt
mov
fbld
mov
sub
jbe
push
pop
pop
aam
cwde
push
pop
mov
jle
into
cmp
ss
test
dec
lea
inc
dec
and
inc
add
sub
sbb
jmp
mov
push
mov
jnp
fild
fisubr
loopne
retf
call
stos
mov
cwde
es
adc
xchg
outs
push
jo
dec
adc
in
pop
sub
call
sahf
jbe
aad
push
sbb
stos
or
add
mul
in
xor
mov
out
leave
inc
addr16
cmp
outs
(bad)
js
xor
mov
push
loopne
aad
mov
hlt
dec
adc
nop
push
or
xchg
in
popf
fld
outs
out
pushf
in
and
(bad)
leave
loope
sbb
jo
mov
in
cmp
dec
xor
and
retf
or
sub
leave
fcomp
pushf
lods
ins
dec
outs
push
mov
leave
and
loope
mov
dec
lods
and
dec
shr
jmp
leave
pop
mov
mov
jle
jne
scas
popa
shl
arpl
sub
jmp
dec
jl
icebp
pop
imul
jecxz
pop
cld
mov
hlt
test
aam
sub
push
adc
cmp
or
(bad)
mov
sub
jae
fbld
shl
imul
xchg
xchg
test
clc
shl
rcr
(bad)
sti
or
mov
pop
movs
mov
mov
sbb
(bad)
mov
mov
mov
pop
mov
xchg
xchg
and
mov
dec
in
xor
ror
xchg
pop
jnp
jle
push
lahf
stc
fiadd
inc
or
popf
test
pop
shl
cdq
cld
cmp
ret
arpl
xlat
(bad)
in
sub
iret
xchg
imul
push
cmp
into
lods
in
xchg
repnz
jmp
outs
and
mov
or
and
cld
sbb
mov
daa
pop
pop
inc
pop
add
je
jmp
leave
add
dec
dec
xor
je
jmp
sbb
xlat
lahf
inc
test
imul
fcmove
add
test
ja
push
jecxz
sbb
loopne
arpl
jo
imul
addr16
nop
lods
push
mov
(bad)
pop
je
mov
mov
test
sbb
mov
aam
push
repnz
enter
add
or
xchg
adc
in
imul
jo
jno
dec
sbb
push
ret
mov
loope
fisttp
(bad)
push
repz
ss
call
sahf
in
fs
mov
daa
cmps
daa
das
mov
(bad)
mov
mov
stc
retf
jle
mov
mov
not
inc
ds
ret
out
add
mov
into
ja
jno
mov
adc
or
mov
lods
cmps
push
retf
inc
retf
xchg
or
fadd
sbb
mov
adc
mov
mov
(bad)
enter
jne
jns
lods
mov
xor
(bad)
cmp
inc
cmc
mov
mov
dec
sub
pop
(bad)
mov
lods
and
leave
mov
mov
out
sub
aam
out
pop
retf
es
push
pop
mov
imul
jbe
out
jb
jo
pop
mov
cmps
fist
pop
pusha
clc
sbb
sbb
inc
pushf
scas
enter
in
stos
ret
mov
adc
push
cs
nop
and
lds
popa
mov
or
push
mov
stos
pop
repz
mov
aas
cmp
pop
adc
mov
cmp
mov
and
rol
loop
cmp
aam
rol
push
jge
mov
jecxz
gs
push
cld
fisub
dec
shl
lea
jg
shr
pop
jno
adc
movs
repz
mov
(bad)
ins
jne
pop
cmc
cdq
sbb
ins
fst
das
aam
jp
gs
add
cld
loope
mov
stos
push
int3
add
cmp
aaa
sub
mov
cmps
push
mov
push
ret
scas
jnp
cs
mov
mov
mov
add
cmp
sti
hlt
(bad)
add
jmp
mov
retf
arpl
and
ja
ret
inc
xor
pop
mov
mov
dec
jns
mov
jmp
jl
sahf
cmp
fs
pop
or
jnp
jecxz
mov
cmps
mov
jno
(bad)
scas
mov
and
loopne
in
rcl
add
inc
adc
inc
sub
rol
xor
dec
sub
jb
push
lods
jmp
loope
sub
xor
jmp
popa
push
sbb
cmp
arpl
push
(bad)
cmp
leave
sar
out
in
mov
mov
les
xor
sbb
fadd
mov
iret
inc
cmp
cmc
and
packsswb
retf
sahf
or
add
xchg
and
daa
and
add
cmps
shr
mov
cli
jbe
cld
sbb
shl
repnz
sbb
(bad)
jns
ss
and
pop
jecxz
xor
outs
pop
xchg
outs
in
scas
xchg
ficom
pop
jns
sbb
mov
enter
mov
xor
adc
sbb
sbb
bnd
mov
fcmovbe
fwait
jne
jae
aad
add
pop
jmp
fnstenv
adc
ret
mov
les
f2xm1
xchg
cdq
mov
lock
in
or
pusha
arpl
shl
ins
and
cld
push
int
daa
or
jne
aaa
pushf
inc
pop
jno
xchg
mov
push
cmp
jl
out
stos
out
pop
add
pop
or
dec
call
xor
pop
xor
test
les
test
dec
das
xchg
xchg
pop
clc
jl
call
inc
xchg
xchg
shl
push
jb
mov
sub
dec
mov
(bad)
loope
shl
vmovdqu
ja
inc
fild
push
popa
out
sbb
sbb
adc
test
dec
movs
movs
push
sub
mov
add
add
mov
scas
push
dec
xor
les
push
cmp
and
lahf
int3
mov
xor
or
sub
jge
(bad)
mov
std
jg
pushf
pop
fadd
inc
int3
sbb
icebp
and
cld
inc
and
jne
pop
imul
sub
xchg
daa
dec
cdq
sub
fwait
imul
dec
ficomp
mov
int
dec
push
scas
inc
cs
fnstenv
inc
mov
sbb
inc
imul
mov
cld
cwde
call
or
and
(bad)
push
sbb
sub
lock
push
cmc
test
adc
jo
mov
mov
mov
xor
xchg
inc
mov
into
je
add
pop
ss
sub
arpl
dec
sbb
and
adc
pop
jne
mov
mov
hlt
inc
pop
test
add
shl
sub
sbb
or
ficomp
dec
cmps
push
ins
push
push
jae
add
or
or
xor
mov
outs
dec
dec
lods
ds
ror
pop
ret
mov
arpl
popa
xchg
mov
jecxz
repnz
mov
cmp
inc
mul
push
cwde
test
bswap
or
pop
scas
int
loope
movs
inc
popa
inc
sbb
push
out
adc
sub
cld
add
stc
xor
ss
(bad)
fdiv
loop
aam
jmp
out
call
(bad)
sub
add
aad
daa
dec
inc
and
repz
leave
or
dec
adc
rcl
lock
int
xchg
jbe
xor
pop
movs
push
xlat
jae
inc
push
in
fcomp
inc
scas
inc
push
dec
enter
sbb
mov
pop
dec
cwde
sub
sahf
mov
sub
lock
jle
jmp
push
fld
mov
rcl
xor
daa
sub
fwait
sbb
ja
or
xor
je
jl
xor
pop
mul
pop
scas
cli
mov
cmp
add
cmp
jle
or
dec
lea
in
pushf
pop
sub
mov
cmp
cmp
pop
retf
push
dec
push
mov
in
adc
xchg
xor
and
inc
and
imul
(bad)
(bad)
jae
(bad)
addr16
in
sti
inc
(bad)
inc
and
cmps
adc
je
mov
mov
ins
les
scas
daa
(bad)
xchg
cdq
mov
pusha
daa
aam
lock
jle
pop
stc
or
lahf
mov
loopne
push
jp
add
iret
xlat
or
(bad)
push
xchg
imul
ja
pop
sbb
sbb
loopne
das
loopne
movs
cmp
and
fiadd
jae
inc
mov
push
sahf
es
les
test
mov
cmc
(bad)
pop
inc
pop
ret
inc
cmp
shl
arpl
dec
out
dec
enter
jg
movs
sar
mov
adc
fnstenv
push
push
add
inc
(bad)
pop
inc
addr16
push
mov
dec
cmps
xchg
iret
(bad)
mov
ins
xchg
xor
mov
movs
cmp
jne
les
les
pusha
retf
pop
cmps
jp
mov
jno
fisttp
(bad)
fld1
dec
pop
dec
(bad)
fbld
pop
nop
mov
ret
ins
pop
and
das
ds
adc
test
dec
aaa
out
std
mov
ret
sbb
jmp
sbb
(bad)
dec
lock
cmc
pop
call
fidiv
test
pop
add
mov
icebp
jnp
jmp
mov
retf
jno
pop
stc
mov
retf
movs
or
je
call
push
in
(bad)
mov
xlat
xchg
xchg
ficomp
mov
add
cmps
cs
push
bound
mov
push
es
inc
xchg
mov
and
pop
lods
inc
push
sub
cmp
mov
add
xor
pop
cmps
xor
add
adc
xor
pop
movs
dec
lds
pop
lea
aaa
xchg
cwde
outs
inc
clc
sbb
call
icebp
xchg
(bad)
into
and
add
dec
mov
shl
jbe
repnz
adc
sub
mov
mov
fst
sub
add
fst
cmp
test
or
and
mov
and
ss
pushf
jno
inc
adc
xchg
jg
repz
push
dec
push
dec
jle
(bad)
cmp
call
sub
push
push
sbb
mov
(bad)
cdq
ins
xor
mov
sti
ins
scas
scas
test
add
gs
jmp
and
into
pop
dec
cmp
adc
call
push
jmp
sub
shl
push
dec
pop
in
aam
das
shl
shr
mov
push
add
sar
outs
and
mov
or
stos
hlt
mov
add
push
out
fs
jae
add
js
dec
in
loopne
lods
fucom
(bad)
sub
mov
out
in
mov
test
xor
jbe
jge
cld
push
stc
adc
sbb
and
xchg
in
iret
dec
(bad)
shl
(bad)
or
jmp
mov
mov
push
jns
xchg
mov
pop
jae
or
cmps
cwde
adc
call
fstp
nop
and
dec
mov
xor
daa
shl
push
(bad)
(bad)
cmc
pushf
or
fisubr
mov
jl
jae
dec
xlat
mov
pop
hlt
and
aas
div
and
sbb
int
pop
adc
ret
push
adc
fist
fcomp
stos
xor
dec
ss
ins
or
pop
push
xchg
imul
xor
adc
cmp
cli
pop
or
add
mov
cli
push
mov
movs
mov
nop
imul
outs
aaa
dec
push
pop
push
pop
pop
cmp
add
xor
xor
fstp
xor
not
inc
fdiv
into
ins
mov
leave
pop
mov
inc
xchg
repz
add
cli
cld
imul
cmp
push
iret
jb
outs
icebp
pop
enter
xor
xlat
inc
inc
cmp
add
retf
xchg
jmp
fcomp
nop
imul
sar
jle
xchg
mov
mov
jge
stos
sar
jbe
xor
outs
call
js
shl
ror
aad
mov
sub
pop
sub
lods
pushf
push
fiadd
push
mov
dec
push
(bad)
mov
or
jl
jae
lds
mov
and
std
and
inc
in
mov
and
ss
sbb
sbb
pop
lds
loop
mov
out
arpl
out
out
or
or
inc
inc
push
mov
test
in
(bad)
fsubr
mov
or
in
xchg
(bad)
popa
in
mov
mov
xor
ja
cmps
sbb
cld
call
fs
(bad)
jmp
popf
sar
cmp
jb
aad
(bad)
shr
push
push
popa
pushf
sbb
in
inc
int
aaa
sar
sbb
inc
popa
outs
inc
div
nop
pop
xchg
movs
mov
in
inc
cli
ror
mov
cmps
pop
mov
shl
jmp
inc
push
pop
test
fst
jecxz
pop
ja
lods
sbb
mov
retf
cwde
scas
test
mov
ficom
and
mov
popf
xor
fldz
into
je
cld
xchg
push
imul
in
inc
pop
cmp
jo
stos
daa
xchg
inc
or
sub
add
jns
adc
aam
bound
inc
xchg
rol
sub
enter
aas
cmp
fs
sbb
push
fucom
cmp
adc
add
sar
and
add
cmp
pop
push
repnz
inc
sub
add
inc
daa
sbb
ror
adc
addr16
cs
pushf
pop
imul
mov
pop
jp
dec
loope
lea
xor
sub
push
xor
push
popa
fs
stos
test
push
fs
movs
repz
std
lods
push
adc
mov
inc
sbb
in
add
ins
dec
call
cwde
jle
cdq
cwde
push
jo
or
lahf
cmp
sub
pop
out
outs
mov
add
mov
push
cld
cmps
ins
call
xchg
sbb
sub
scas
aam
inc
dec
sub
out
test
push
pop
call
sahf
jo
neg
(bad)
mov
js
push
fwait
scas
arpl
repnz
out
or
jle
and
out
add
xor
fprem1
repnz
sbb
cmp
(bad)
mov
adc
ins
mov
dec
push
push
(bad)
xchg
in
inc
lods
lahf
lods
inc
das
sub
pop
enter
sub
dec
rcl
stos
mov
pop
fwait
push
push
mov
stos
int3
call
add
jnp
mov
mov
cmp
pop
fs
sub
dec
mov
xlat
and
inc
in
xchg
xchg
add
push
into
popa
jmp
stc
ret
mov
lock
(bad)
in
xchg
shr
add
push
pop
push
les
sub
push
pop
imul
test
jmp
les
das
outs
jl
repz
std
not
push
test
ffree
and
inc
add
dec
dec
push
sbb
sbb
sti
das
jne
shl
cmp
pop
pop
push
xchg
jae
arpl
js
or
xchg
pop
in
rol
xchg
jb
fstcw
mov
push
and
and
cmps
into
sbb
jne
scas
sub
xchg
int3
jae
xlat
xchg
dec
fs
inc
shl
pop
pop
icebp
or
jae
mov
jecxz
dec
movs
and
pop
dec
dec
pop
(bad)
in
jg
(bad)
es
dec
movs
mov
sub
into
xlat
out
(bad)
stc
lock
into
and
mov
retf
pop
jns
mov
mov
rol
aam
mov
icebp
mov
add
inc
inc
test
xor
dec
cmp
mov
test
inc
cmp
xchg
sbb
xor
pop
mov
pusha
pop
xchg
push
or
push
push
cmps
dec
or
cwde
sub
jp
or
lods
sbb
and
dec
ret
push
adc
lods
inc
mov
fsubr
adc
shl
ins
loop
mov
and
mov
stos
pop
mov
stos
mov
cmp
js
dec
pop
test
sbb
ja
mov
add
jne
mov
stc
nop
or
scas
dec
(bad)
push
xor
fdiv
and
stc
sub
mov
ins
fdiv
add
ins
mov
mov
jmp
sti
xor
call
and
xor
(bad)
lds
cmp
mov
mov
push
popf
jp
cmp
mov
jnp
shl
test
xor
push
xchg
add
jnp
sti
loopne
pop
loopne
or
(bad)
or
lock
xlat
and
fidivr
and
mov
cmps
pusha
xchg
repnz
pop
outs
jns
mov
imul
retf
inc
rcl
push
lahf
rcr
push
lock
test
mov
jp
mov
repnz
add
test
pop
xchg
ds
fcom
hlt
sbb
jmp
dec
mov
das
fadd
cmp
sbb
lods
inc
mov
or
pushf
push
xchg
inc
(bad)
dec
cmp
scas
mov
pop
dec
adc
mov
push
or
leave
idiv
dec
pop
pop
mov
jle
mov
sbb
push
push
jle
mov
lds
jne
sbb
mov
mov
lds
mov
in
lods
inc
push
das
xor
lahf
addr16
out
inc
mov
inc
int3
sahf
inc
clc
loopne
loope
ds
jb
push
clc
xor
dec
mov
cmp
(bad)
imul
mov
arpl
cmp
jae
lock
std
push
xchg
jbe
call
push
lock
xor
es
(bad)
cmp
push
inc
and
pushf
imul
cs
rcl
mov
xchg
arpl
cwde
adc
(bad)
pop
sub
call
call
cmps
call
imul
sub
rol
in
add
arpl
cmp
stc
idiv
push
dec
adc
in
(bad)
push
dec
addr16
(bad)
lock
adc
ret
or
retf
push
mov
add
aad
mov
jp
sub
sbb
jg
lea
lods
stos
test
jmp
xchg
push
aas
cmp
mov
popa
sbb
xor
push
shl
arpl
mov
xchg
pop
loop
mov
pop
ins
pop
mov
cmp
js
pop
ja
push
mov
hlt
je
js
sub
mov
call
fnstenv
fidivr
lods
or
fnstenv
jle
jge
mov
add
cli
xor
jbe
adc
inc
imul
lea
not
sbb
cmp
inc
add
inc
ucomiss
xor
pop
in
add
xor
and
jmp
mov
loop
iret
jae
lods
repnz
sub
and
pop
shr
and
out
xor
mov
sbb
jge
div
test
or
push
sbb
test
scas
sbb
les
in
cmps
popa
push
push
mov
ins
cmp
xor
(bad)
jmp
dec
(bad)
and
clc
xchg
sub
push
xchg
xchg
and
cmp
inc
mov
das
outs
pop
sbb
icebp
push
sbb
cld
mov
xchg
adc
leave
jne
adc
cld
fiadd
aaa
lds
rol
(bad)
prefetch
jmp
jecxz
sub
push
fstp
enter
in
mov
mov
inc
xchg
push
ins
fidiv
sub
arpl
mov
(bad)
sti
xchg
inc
cmc
mov
lods
ret
psraw
adc
cmps
sbb
mov
out
repz
fs
inc
pop
inc
mov
pop
inc
mov
mov
leave
push
xor
cmp
(bad)
popf
cld
jae
sti
aas
popa
inc
pop
in
outs
(bad)
sbb
sub
shl
cld
lea
sbb
clc
leave
xchg
or
scas
jbe
fist
pop
mov
cs
int
shl
mov
test
jmp
mov
cdq
pop
fistp
mov
div
mov
inc
pop
mov
(bad)
icebp
sahf
inc
dec
shl
mov
gs
rol
repz
push
jbe
mov
cld
stos
push
inc
mov
jb
xchg
add
cmps
jbe
and
pop
pop
xor
and
dec
out
jl
add
mov
rcl
fist
movs
mov
push
ins
pop
outs
cmp
xor
cmp
cmp
test
clc
(bad)
mov
pop
cdq
mov
stc
repnz
xor
xor
int
sbb
inc
lahf
xor
cmp
inc
arpl
popa
jge
mov
push
push
push
inc
daa
sub
or
aam
mov
dec
jl
inc
adc
mov
imul
pop
int3
fdivr
ins
dec
inc
outs
inc
and
out
dec
mov
adc
xchg
in
scas
sbb
jae
adc
addr16
push
jge
inc
clc
xor
dec
mov
inc
sub
outs
add
jle
push
sub
mov
cmps
or
dec
arpl
iret
mov
rcl
jne
mov
xor
je
ins
das
(bad)
test
push
(bad)
and
cmp
lds
ss
pop
or
lods
in
mov
pop
jne
add
(bad)
sbb
and
and
jbe
xor
sbb
pop
mov
xor
dec
mov
xor
add
rol
iret
add
cmc
js
add
sub
or
fmul
je
(bad)
ficom
repz
dec
sub
add
mov
mov
adc
test
and
xlat
iret
adc
(bad)
push
and
popf
adc
daa
push
adc
push
in
jmp
sbb
adc
into
mul
mov
add
in
in
popf
and
xchg
inc
cmp
pop
xor
(bad)
loopne
xor
xor
cmp
pop
xchg
mov
cmp
push
ret
mov
mov
and
cld
stc
ret
or
sub
and
and
retf
xor
adc
and
sbb
out
push
push
push
push
arpl
mov
add
pop
hlt
lea
cmp
scas
mov
mov
fs
data16
mov
scas
idiv
add
sar
pop
mov
mov
ins
push
mov
sbb
sbb
lea
sbb
adc
mov
dec
dec
mov
mov
xor
ss
sbb
xchg
jp
or
das
les
xchg
loope
or
les
fisub
add
push
leave
sub
daa
add
shl
sub
inc
mov
push
and
jge
push
int
(bad)
jge
imul
inc
mov
cs
or
shr
jbe
pop
sub
inc
pop
pop
cmp
sbb
pop
fmul
mov
mov
xchg
scas
push
mov
out
jno
into
or
mov
xor
scas
sbb
cli
lods
fwait
out
mov
xchg
or
or
pushf
mov
int3
shl
dec
sub
pop
shr
cwde
push
push
mov
pop
leave
mov
dec
mov
popf
fs
add
movs
int3
stos
jecxz
and
test
imul
inc
je
xchg
(bad)
cmp
mov
pop
sbb
sub
xchg
sub
or
or
mov
push
stos
pop
push
or
movs
push
fwait
cmp
iret
mov
jle
ja
cmp
xlat
push
add
iret
arpl
test
clc
loopne
lea
jae
or
adc
dec
repz
(bad)
addr16
mov
ds
push
(bad)
int3
dec
jnp
and
add
and
xlat
push
xchg
repnz
sahf
add
not
adc
shl
mov
xor
clc
sahf
ins
int
scas
call
add
nop
jns
push
cmp
sub
popa
icebp
or
mov
and
(bad)
bnd
mov
cmps
dec
sbb
and
jo
fld
popa
add
mov
push
lahf
adc
mov
dec
lahf
push
jo
lods
push
push
mov
lock
push
or
es
sub
pop
iret
pop
std
into
(bad)
jle
ss
ror
mov
mov
test
cmp
ret
sar
lods
xchg
pusha
scas
loopne
adc
push
mov
stc
out
pop
scas
and
fcomp
mov
arpl
imul
fs
or
xchg
mov
ja
(bad)
xchg
aas
ins
xchg
mov
pop
pop
mov
xchg
pop
jns
call
jmp
inc
fidiv
dec
cmps
cmp
jno
cmp
movs
pop
sbb
mov
imul
mov
sbb
jg
data16
or
ret
push
mov
aad
in
or
sbb
fsub
fldcw
cmps
ret
cmps
dec
ret
in
int3
xchg
iret
out
mov
adc
popa
and
mov
movs
cmp
shr
mov
icebp
mov
dec
sbb
mov
fwait
call
pop
dec
jl
lods
shr
pop
jle
pop
sbb
ror
xor
sahf
sub
out
add
sub
inc
add
mov
loop
out
out
shr
add
icebp
ror
cmp
jmp
or
xchg
fsub
pop
mov
dec
ret
int
xor
adc
sahf
ror
sbb
jp
das
cmp
cmp
mov
out
outs
xor
aam
pop
ins
mov
or
jae
mov
or
out
pop
leave
push
outs
cmp
gs
stc
cmp
xlat
jns
inc
cs
cmp
sub
shr
iret
and
inc
mov
mov
mov
push
jae
sub
inc
sbb
sub
fabs
pusha
add
mov
and
loope
fnstcw
arpl
aam
loop
mov
mov
movs
jmp
dec
sbb
shl
jae
cs
movs
shr
loop
jns
enter
add
cld
sub
inc
jmp
(bad)
mov
push
iret
mov
sub
dec
lods
pop
cmp
add
in
adc
dec
ja
lfs
push
jnp
or
mov
std
jns
inc
mov
pop
sbb
add
sbb
dec
les
add
jp
aam
xchg
aaa
and
das
hlt
mov
lods
cs
xchg
xchg
jo
inc
clc
dec
pop
test
fisttp
mov
xor
xchg
dec
adc
or
addr16
outs
jnp
int3
aad
rcl
cmc
loopne
or
pop
dec
add
out
fcmovu
(bad)
xchg
aam
std
sub
push
and
push
clc
push
stos
call
outs
mov
push
xchg
cmp
add
ja
(bad)
retf
test
sub
stc
add
not
xor
arpl
test
and
sub
in
or
mov
and
push
pop
lds
ds
stc
jmp
sub
xor
add
jge
fcmovne
push
adc
stc
inc
xor
out
cmp
mov
mov
mov
push
pusha
xor
xchg
push
add
inc
cmps
add
dec
dec
mov
sbb
inc
sti
nop
xor
ret
and
mov
adc
sub
cmp
out
lods
push
xchg
test
sub
addr16
or
call
hlt
push
and
jl
cmp
repnz
shr
add
loope
movs
pop
dec
dec
pop
aas
dec
je
xor
mov
pop
stos
lahf
cmp
stos
push
push
imul
shl
sbb
mov
fisubr
popf
std
js
bnd
and
mov
inc
and
in
xor
inc
(bad)
out
dec
adc
into
hlt
add
push
jg
pop
mov
mov
dec
arpl
leave
pop
loope
repnz
retf
jecxz
hlt
mov
(bad)
or
sub
fmul
xchg
popa
jle
mov
(bad)
mov
mov
sahf
mov
sbb
sub
mov
arpl
daa
xchg
or
cmp
movs
mov
push
ins
aam
fcom
idiv
clc
mov
into
rol
xchg
jae
ficom
mov
(bad)
push
imul
arpl
ffreep
mov
mov
rol
test
movs
in
push
mov
mov
popa
add
mov
jg
push
inc
test
push
add
pusha
mov
sub
movs
(bad)
xor
imul
inc
pop
sbb
ret
jne
xor
mov
add
mov
jnp
stos
inc
gs
js
aam
cmp
dec
lea
xlat
xchg
es
adc
xor
jmp
sbb
sbb
mov
mov
sub
sar
sbb
xchg
jecxz
popa
mov
or
fcomip
int
fldenv
ret
fucomp
fstp
xchg
lahf
lahf
cmp
(bad)
jbe
inc
(bad)
and
outs
data16
push
lahf
add
lds
push
cs
(bad)
int
jb
jp
(bad)
inc
jge
cld
cmp
je
cs
retf
fsubr
lods
pop
out
dec
pop
mov
add
imul
jl
mov
out
in
mov
dec
cmp
rcr
jbe
add
cmps
in
lds
and
mov
xor
js
pop
ins
retf
cmp
or
inc
retf
out
mov
hlt
out
aam
daa
scas
push
fldenv
repz
mov
aam
fxch
inc
cmp
test
sbb
sahf
mov
(bad)
hlt
pop
div
dec
jno
jmp
sub
xor
mov
mov
dec
and
add
ja
pop
pop
(bad)
aad
xchg
sub
push
lahf
(bad)
adc
or
pop
dec
jl
(bad)
mov
or
fistp
jb
push
stos
xlat
dec
dec
inc
or
jmp
out
cmc
popa
mov
stos
stc
push
loope
dec
and
mov
mov
std
out
xor
fdiv
jo
mov
movaps
retf
add
movs
stc
mov
jb
inc
loop
pop
pop
div
jne
mov
mov
(bad)
scas
movs
adc
or
inc
push
loop
repz
loope
push
inc
gs
push
cli
jge
dec
shr
in
inc
mov
sbb
mov
aam
test
imul
mov
and
repnz
mov
rol
fsubr
ret
loope
fisttp
ror
cmc
shl
xchg
mov
sbb
icebp
adc
mov
(bad)
scas
(bad)
mov
pop
pop
and
sahf
push
or
aad
shr
dec
data16
test
jmp
jmp
dec
or
adc
mov
mov
jg
mov
sar
in
fmul
mov
mov
repz
icebp
cmp
ins
sub
dec
out
jg
test
sbb
mov
das
dec
mov
fs
test
add
ja
pop
mov
mov
rcl
popa
xchg
out
mov
xor
push
clc
dec
leave
out
cmps
sbb
push
inc
(bad)
push
mov
mov
mov
xlat
rcl
cmp
inc
jmp
pushf
addr16
xor
arpl
int
retf
add
fucomp
jmp
data16
loope
pop
push
xchg
sub
and
pusha
js
xchg
(bad)
sub
xchg
int
ret
mov
mov
cmc
push
mov
retf
cmp
dec
imul
pop
fdiv
in
sub
pop
lods
push
(bad)
call
aaa
and
or
mov
lea
(bad)
jecxz
pop
mov
cmp
neg
stos
nop
lds
xor
scas
push
cmp
xor
outs
push
and
jl
leave
(bad)
ja
imul
jb
push
ins
cmp
mov
pusha
dec
xor
mov
push
loope
mov
lahf
jge
cmp
mov
jns
xchg
sahf
popf
mov
xchg
data16
cmps
jge
loopne
cli
das
pop
mov
mov
into
or
adc
mov
into
mov
ins
loopne
inc
call
daa
xor
rcl
mov
adc
push
ins
and
cmp
aam
or
jne
loop
jmp
pop
icebp
mov
inc
inc
xchg
sbb
dec
mov
xchg
rol
loop
mov
fdivr
bound
lahf
mov
pop
ds
icebp
and
jnp
out
adc
cld
fdivrp
fldenv
cmps
aas
gs
mov
inc
mov
or
and
(bad)
sti
cmp
cmp
jne
jmp
lahf
sbb
cmp
push
sti
and
push
jecxz
xchg
fwait
pop
mov
mov
dec
les
adc
add
and
and
dec
and
dec
push
lds
mov
cmp
leave
push
mov
ret
sub
rol
fstp
lods
or
or
test
mov
or
xor
in
int
push
mov
jle
test
push
ins
fldenv
retf
and
push
jecxz
sbb
mov
inc
aam
xor
das
add
sub
dec
rol
pop
push
test
fsubr
cmp
inc
jnp
mov
mov
xchg
stc
(bad)
lock
mov
and
dec
js
idiv
ja
mov
in
push
add
ins
mov
psadbw
cwde
mov
pop
xchg
pop
xor
call
jmp
adc
jmp
add
inc
in
sub
xchg
data16
cmp
adc
push
loop
addr16
sub
xor
mov
stos
cdq
mov
dec
jecxz
jno
push
rcl
pop
pop
cwde
in
sti
xor
or
idiv
call
cmp
outs
ja
test
lods
pop
mov
icebp
mov
imul
lea
adc
ret
out
push
mov
mov
jmp
fs
push
dec
push
pop
mov
adc
dec
xlat
out
or
out
repnz
ins
mov
jno
aad
(bad)
in
dec
pop
mov
push
dec
stos
xor
xchg
retf
dec
arpl
test
jle
dec
not
inc
ins
push
push
call
or
sbb
mov
out
jg
sbb
cmp
and
aam
xchg
jb
fst
(bad)
push
fimul
rcr
pop
retf
and
pop
out
out
lock
cmp
adc
cmp
lds
cmp
adc
(bad)
movs
mov
sbb
int
daa
mov
mov
or
add
loope
fstp
push
adc
mov
xor
adc
aam
mov
hlt
xor
add
inc
in
cmc
(bad)
lahf
mov
in
xchg
mov
arpl
call
jne
ret
je
retf
call
jp
enter
int3
dec
scas
arpl
adc
xor
daa
xor
fisubr
pop
xor
cmp
hlt
push
xchg
fcomp
and
xor
mov
xor
int
mov
push
clc
and
dec
sti
push
mov
and
icebp
push
pop
dec
adc
(bad)
in
popf
sbb
in
sub
stc
sar
push
push
xchg
std
ss
push
inc
cdq
dec
mov
or
jae
or
arpl
loopne
jae
ds
cli
retf
ja
push
add
adc
shr
cwde
jmp
je
(bad)
pop
sub
sub
(bad)
outs
es
adc
push
jbe
inc
fst
sbb
mov
fs
add
pop
int3
push
les
and
jb
aas
mov
xor
retf
sub
pushf
and
jmp
stc
movs
loope
stos
jge
mov
les
movs
jo
cmp
mov
fstp
xor
add
sbb
ins
jb
add
adc
mov
sti
jns
aam
push
addr16
sbb
fadd
add
addr16
jbe
lahf
fsubr
pop
and
inc
in
fiadd
jecxz
std
mov
ds
(bad)
in
xchg
jnp
jns
test
mov
and
dec
and
sub
std
nop
cmps
inc
mov
in
sbb
inc
ja
cdq
xchg
repz
add
cld
imul
mov
(bad)
mov
mov
daa
mov
xchg
pop
sub
pop
adc
sbb
enter
xlat
ror
pop
test
mov
dec
xchg
push
ss
in
jae
push
add
lea
rcl
and
jne
dec
adc
fidiv
sbb
xchg
xor
call
cmps
xchg
xchg
fisubr
ins
neg
dec
cmc
loope
mul
dec
pop
repz
mov
call
in
sahf
fnstcw
ins
pop
jg
jecxz
xor
mov
sbb
mov
xchg
retf
jge
pop
out
lahf
inc
xchg
jle
leave
push
xchg
xor
push
or
dec
pop
xchg
add
xor
mov
inc
inc
lahf
cmps
xchg
inc
jmp
sub
push
das
mov
or
test
xor
cli
dec
les
(bad)
out
jmp
jmp
and
jp
mov
jl
mov
sub
push
jg
mov
bswap
stos
jl
out
ja
mov
push
dec
pop
mov
je
push
pop
outs
loope
cwde
cdq
xchg
inc
pop
call
fsub
jp
xchg
xor
pop
pop
xor
fisttp
pusha
leave
test
ins
sbb
aad
sbb
jecxz
fnstcw
test
mov
leave
mov
std
push
retf
std
or
jle
imul
rol
inc
test
or
jae
test
cmps
pop
or
and
pop
or
adc
or
rcr
aaa
push
repnz
fiadd
loope
jne
outs
pop
pop
rcl
and
jo
dec
bound
or
rol
sbb
mul
imul
add
and
stc
mov
out
icebp
aas
loopne
or
mov
fst
fisubr
in
(bad)
cwde
fistp
mov
jmp
inc
jo
add
mov
(bad)
sbb
movs
mov
mov
sub
(bad)
sbb
dec
nop
pop
bound
fs
inc
xchg
call
push
push
add
nop
loope
lahf
sbb
mov
push
mov
es
dec
lock
pushf
inc
adc
shl
imul
pop
dec
inc
jnp
jmp
loope
gs
fwait
and
pop
outs
pop
mov
stos
repz
push
pop
or
jecxz
mov
imul
push
movs
sbb
shr
fs
cli
jne
jno
cmp
out
push
hlt
mov
or
add
mov
outs
stos
int
cmp
pusha
ret
mov
cmp
mov
xchg
pop
in
fstp
dec
inc
push
pop
scas
and
mov
add
xchg
push
xchg
add
stos
mov
push
std
test
and
sbb
adc
divps
test
jmp
inc
jo
ror
xchg
inc
sahf
dec
dec
or
sbb
sahf
movs
scas
mov
fdiv
pop
pusha
cmp
jp
add
and
cld
push
test
xchg
loopne
pop
mov
int3
mov
pop
jp
int
and
repnz
pop
mov
push
or
cs
repz
xor
out
test
mov
mov
adc
cmc
and
push
pop
push
sub
sahf
jmp
nop
mov
mov
dec
leave
xlat
retf
xchg
iret
pop
movs
loop
rcr
repnz
mul
jp
int
mov
cwde
mov
outs
js
gs
add
test
clc
out
popa
retf
les
pusha
data16
jnp
cmp
mov
pop
mov
cmp
push
mov
sbb
or
push
mov
aas
addr16
jle
(bad)
ficomp
int
fimul
add
mov
scas
jno
(bad)
add
retf
imul
xchg
mov
in
repnz
pop
inc
js
lds
and
mov
ins
fcmove
jo
add
aad
inc
jne
shr
call
pop
or
xchg
dec
sub
add
lds
add
inc
stc
push
mov
jecxz
jns
pop
outs
mov
fwait
xchg
mov
(bad)
pop
in
mov
mov
push
(bad)
cld
cmp
addr16
jbe
pusha
in
sahf
imul
mov
jmp
movs
lea
(bad)
leave
pushf
fld
sahf
cmp
xchg
lods
xlat
ftst
popf
repz
adc
popf
(bad)
(bad)
call
and
adc
xor
movs
mov
mov
xor
lds
cmp
mov
outs
repnz
neg
mov
fild
sub
jmp
dec
cs
and
out
ja
push
or
xor
(bad)
mov
ficom
leave
out
inc
test
and
adc
or
call
fld
inc
lsl
mov
rcl
xor
cmps
cwde
inc
fwait
repnz
retf
jmp
and
add
pushf
push
sbb
int
dec
adc
mov
mov
repz
lds
pop
xor
rol
gs
aad
cld
cmp
repz
in
sub
pop
(bad)
es
inc
retf
inc
dec
loopne
add
cmc
ins
dec
push
ret
jae
cld
out
adc
adc
and
mov
in
(bad)
pop
add
popa
ret
add
push
shld
cdq
lods
adc
mov
cmp
xor
fbld
int3
(bad)
repnz
test
xchg
shr
aaa
push
xor
sti
jae
test
cmps
icebp
retf
cdq
fwait
push
mov
lea
pop
fs
cvtps2pi
dec
cmp
xor
pop
sub
(bad)
mov
outs
sbb
or
mov
push
dec
iret
call
sub
adc
pop
div
add
inc
jecxz
cmp
sti
(bad)
test
shl
mov
out
popa
fdivr
sahf
adc
(bad)
into
mov
mov
cmp
inc
stos
test
push
pop
inc
std
push
push
ja
call
fwait
or
jge
sar
shr
in
scas
lahf
ss
aad
call
retf
clc
(bad)
sub
mov
or
fs
mov
push
or
test
ror
and
jae
add
ds
xchg
mov
outs
xchg
ficomp
scas
stc
stc
mov
movs
push
mov
inc
mov
(bad)
repnz
cld
test
dec
pop
stos
adc
pop
call
sar
mov
retf
imul
fwait
div
xchg
pop
(bad)
mov
repnz
push
sub
fld
sbb
mov
adc
sub
xchg
xchg
push
ja
shl
movs
inc
or
dec
or
inc
fs
stos
les
pop
test
dec
pop
cmps
add
(bad)
lea
movs
push
into
je
jnp
enter
dec
loop
push
jns
lahf
cmps
inc
pop
jp
jl
inc
outs
push
shl
xor
xor
aaa
push
sub
call
shl
sbb
jae
pusha
dec
add
and
lods
out
sbb
add
push
mov
cmp
cli
les
aaa
dec
mov
je
out
popf
mov
and
ja
jg
jge
add
or
repnz
daa
ja
sub
push
(bad)
(bad)
push
push
mov
aad
adc
fdivp
arpl
push
je
loop
cwde
mov
in
mov
push
scas
adc
xor
bound
and
xchg
pop
jns
out
lods
push
std
inc
and
pop
cli
fsubr
pop
inc
sbb
add
mov
adc
stos
call
jg
adc
cmps
mov
in
fmul
(bad)
cwde
push
pushw
daa
(bad)
mov
call
push
add
sti
or
pop
inc
in
fidiv
in
push
push
pop
sbb
mov
xor
pop
inc
xlat
and
das
shl
mov
adc
cdq
movs
add
or
and
lock
xchg
xor
movs
retf
mov
aas
inc
mov
das
mov
adc
ins
jg
sbb
xchg
sbb
popa
ror
sbb
aam
adc
and
idiv
push
mov
add
sub
push
stc
xor
popf
rcl
cld
aad
and
(bad)
adc
aas
or
nop
push
jecxz
scas
add
jl
mov
or
into
mov
xor
test
arpl
jmp
jmp
mov
inc
xchg
jns
mov
and
jl
lods
pop
mov
jecxz
sub
pop
in
outs
ud2
fnsave
sub
das
cmps
pop
test
mov
jno
or
js
outs
aaa
jle
sbb
imul
mov
adc
dec
scas
mov
sub
stos
fimul
sahf
pop
sti
add
(bad)
dec
imul
sbb
inc
rcr
mov
add
jl
out
mov
pop
xor
xor
aas
inc
pop
xor
mov
adc
pop
loopne
mov
bound
xchg
dec
pop
ja
dec
rcl
loope
pop
inc
rcl
or
adc
outs
imul
xor
lahf
das
ins
jb
inc
ror
(bad)
jo
lds
dec
jnp
cmp
adc
imul
xchg
lods
in
adc
mov
mov
bound
mov
and
out
ss
inc
dec
call
imul
jl
push
sub
out
int3
jl
fadd
mov
out
sbb
push
pop
xor
mov
scas
out
sub
cmp
retf
in
das
add
inc
lahf
push
xchg
push
movs
pop
mov
mov
call
add
mov
push
cs
rcl
ret
enter
pop
jo
mov
call
cs
mov
jno
inc
push
sub
out
mov
fiadd
sti
mov
jmp
add
mov
sub
cmp
mov
pop
xor
xor
adc
jae
xor
or
retf
jg
pushf
or
push
jg
sub
push
retf
push
enter
cmp
lds
lods
sbb
bound
scas
and
ss
out
jne
in
cdq
cmp
shl
out
pop
jmp
pop
retf
cmc
popa
push
sbb
sub
fisub
or
xor
jne
fs
cli
dec
cwde
std
xchg
xor
add
push
in
xchg
and
int
imul
stos
pushf
call
je
out
add
xchg
cmc
pop
push
mov
push
push
and
sub
jb
sbb
sub
pop
xor
fiadd
call
add
imul
xor
popf
pop
mov
mov
or
shl
jae
jmp
gs
sbb
ja
push
inc
lahf
mov
mov
inc
mov
movs
mov
and
cs
push
outs
mov
cmp
jp
jae
clc
xchg
test
and
mov
and
add
and
jmp
clc
bound
dec
push
mov
fild
inc
inc
arpl
jmp
sbb
or
jns
jge
push
imul
fidiv
mov
xlat
mov
and
xchg
adc
(bad)
cmp
push
mov
pusha
pop
add
retf
cdq
and
out
sub
mov
lods
sub
and
stc
repnz
scas
add
cli
ficom
mov
or
call
push
std
int
pop
js
call
push
cld
and
or
push
or
les
int3
xchg
adc
adc
fimul
mov
fwait
pop
addr16
scas
adc
loop
or
loope
mov
xchg
scas
and
mov
mov
or
aad
xor
cmps
cmp
cdq
in
pop
rcl
mov
jecxz
shr
mov
lock
and
std
pop
out
into
inc
mov
xor
jo
and
fnstenv
pushf
aaa
xchg
neg
mov
sub
fadd
jbe
sbb
xchg
(bad)
daa
out
aad
jecxz
mov
mov
(bad)
sbb
pop
mov
test
mov
pop
aam
stc
bound
cmp
mov
int
aaa
cmp
jbe
fsubr
cdq
imul
mov
out
push
test
pop
psubsw
fs
stc
out
(bad)
or
cmp
cmp
push
jg
cli
jle
and
or
je
jecxz
cmp
leave
sahf
or
cld
jb
mov
(bad)
sbb
iret
jmp
xchg
sub
out
cmp
lods
call
dec
lods
test
cmp
nop
xlat
push
xchg
ja
out
cmp
retf
inc
pop
mov
jae
adc
mov
cmp
dec
or
ins
mul
ds
sbb
das
jl
or
push
or
je
xchg
enter
pop
mov
loope
inc
xor
mov
(bad)
jae
mov
movs
(bad)
cmps
call
je
sbb
lea
or
nop
pop
dec
dec
cmps
or
scas
mov
adc
(bad)
or
inc
test
out
xchg
cmp
loopne
out
(bad)
add
clc
loopne
into
cmp
imul
addr16
fsubr
ds
dec
fs
add
in
add
push
test
dec
sar
jle
out
xor
enter
inc
cwde
out
les
pusha
das
jge
into
int3
dec
das
inc
sahf
dec
push
in
inc
cmp
pushf
pop
into
jecxz
dec
je
sbb
ret
push
sbb
iret
and
sub
scas
popf
pusha
out
jo
push
sub
mov
mov
push
pop
mov
push
iret
pop
pop
sbb
and
clc
ins
or
fsubr
test
pop
(bad)
cmp
xchg
inc
inc
pop
mov
(bad)
hlt
in
push
inc
mov
xchg
jb
dec
ret
pop
repnz
pop
movs
mov
xor
cmp
cwde
add
movs
cmc
cmps
cmp
cld
es
add
test
aas
xchg
and
mov
xor
pusha
push
scas
xchg
and
scas
dec
mov
mov
into
push
out
jmp
aam
pop
stc
mov
or
movs
dec
mov
hlt
fist
jmp
es
imul
add
ror
xor
shl
push
stc
jge
movs
cmp
test
das
and
inc
movs
mov
cmps
add
xor
stos
xchg
mov
cs
pop
sub
xchg
sbb
adc
mov
test
cmp
mov
(bad)
loopne
dec
jb
inc
pop
cmp
out
jnp
and
int3
shl
inc
(bad)
push
in
xchg
movs
mov
xchg
mov
or
cld
dec
cmp
xchg
jmp
jl
and
call
and
pop
fisub
arpl
add
jmp
and
scas
ret
add
pushf
xchg
inc
fs
push
cmp
cmp
pusha
aas
cmps
imul
mov
sub
adc
add
adc
and
cmp
sub
xchg
leave
(bad)
loopne
aam
icebp
sub
sub
adc
add
mov
add
pop
sbb
and
sti
ins
xor
lea
aam
adc
popa
and
(bad)
xchg
mov
push
xchg
push
push
imul
mov
cli
mov
xor
lahf
popa
fild
mov
dec
mov
fild
jnp
dec
xchg
popf
mov
sub
push
adc
js
xlat
inc
jmp
pop
pop
jne
and
ret
or
js
sti
test
ins
mov
mov
jb
or
adc
fucom
sbb
pusha
or
in
xchg
cld
aas
(bad)
out
pop
pop
jl
lods
add
lods
sbb
add
adc
test
mov
inc
push
movs
cmps
push
sbb
jne
xchg
pusha
cwde
xchg
and
fistp
aam
es
sti
rep
pop
cmc
xchg
data16
sbb
cdq
cli
xor
test
enter
ins
jno
ss
out
mov
xor
push
popa
dec
xchg
sub
mov
pusha
sub
adc
mov
in
add
stos
arpl
in
xchg
movs
dec
push
inc
mov
push
int3
xchg
xchg
xor
and
scas
mov
and
arpl
add
dec
adc
cwde
ds
outs
out
sub
pop
(bad)
fdivr
ins
xchg
push
dec
cmps
outs
shl
inc
push
inc
jle
repz
dec
cli
push
fiadd
hlt
nop
je
es
arpl
xchg
and
dec
fs
or
imul
int
imul
mov
pop
imul
push
aam
mov
icebp
fsub
sti
arpl
jnp
dec
(bad)
inc
xchg
out
xor
dec
leave
call
cmp
popa
jmp
call
int3
pop
push
rol
inc
out
mov
int
push
mov
pop
call
mov
fstp
bound
repz
cmc
push
das
push
dec
int
push
jns
out
data16
les
push
movs
xchg
sub
mov
outs
mov
mov
push
lea
cmp
in
lea
jne
cmps
sub
cmp
cmp
sbb
inc
mov
pop
or
sbb
lds
ret
xlat
test
shl
and
icebp
inc
pop
or
ins
or
mov
shl
ret
xchg
(bad)
adc
(bad)
test
add
(bad)
fsub
lock
inc
sbb
sub
jne
(bad)
sub
jae
jbe
test
rcl
cmps
mov
movs
fcomp
pop
fld
das
and
pop
add
shl
jge
mov
out
mov
add
xchg
cmc
cmc
in
hlt
sbb
into
test
dec
clc
xchg
adc
mov
movs
cmp
icebp
and
sub
fnstenv
xchg
mov
fadd
adc
or
cs
movs
mov
test
and
outs
je
test
inc
mov
and
pop
xchg
inc
stos
push
ret
sbb
retf
div
fstp
popa
cmp
inc
xor
mov
inc
add
cs
icebp
aad
xchg
lods
dec
push
fdecstp
adc
add
aam
xor
out
sub
es
pop
loopne
adc
and
cmp
sub
out
pushf
call
ss
sbb
aam
or
arpl
inc
push
jo
xor
stc
add
and
and
mov
jp
pusha
dec
icebp
mov
push
mov
in
retf
movs
jb
add
jmp
js
mov
inc
mov
out
lds
jno
bnd
icebp
retf
mov
scas
test
pop
int
loop
sti
call
dec
out
or
push
pop
mov
aam
jno
jno
jmp
dec
cmp
add
mov
push
xor
aam
dec
pop
and
xchg
aas
aam
retf
nop
(bad)
sbb
out
mov
mov
in
xor
or
cmp
fwait
jle
dec
gs
std
ins
and
add
sub
loop
lock
(bad)
ror
mov
lods
in
pop
shl
clc
sbb
fcomp
adc
sbb
push
xor
adc
mov
movs
ret
lock
cmp
dec
ss
adc
movs
into
adc
mov
call
and
adc
loop
popf
jl
les
jle
in
push
mov
stc
cmp
pop
fidiv
movaps
dec
dec
pop
retf
dec
jle
js
bound
out
xchg
jne
mov
cmp
jbe
repnz
pop
fmul
inc
getsec
pop
lea
cwde
sbb
repz
popa
push
mov
or
or
push
xor
pop
jbe
mov
mov
xor
mov
mov
xchg
or
fwait
xor
leave
retf
jb
sbb
(bad)
cli
test
xlat
pop
loope
retf
sbb
movs
rcl
push
mov
scas
mov
mov
aaa
dec
movs
cld
aas
std
movs
jnp
jecxz
dec
and
inc
xchg
mov
and
and
push
sbb
cmp
and
and
fs
mov
jnp
lds
in
pusha
xor
imul
mov
sub
loop
or
mov
je
idiv
jb
jbe
arpl
lock
fxam
popa
mov
call
inc
sbb
gs
jbe
test
in
retf
dec
mov
jmp
cli
mov
jne
mov
sbb
out
cmp
xchg
shl
int
inc
gs
add
pop
pop
and
inc
jbe
out
mov
fnsave
mov
aaa
inc
ja
sbb
movs
push
jnp
sar
and
jp
pop
jmp
mov
inc
mov
(bad)
mov
pusha
jae
mov
add
push
sahf
cli
mul
icebp
jnp
ja
test
or
in
daa
pop
cmp
and
repnz
mov
nop
popa
dec
mov
and
pusha
repnz
fld
sbb
(bad)
scas
iret
test
mov
xchg
retf
(bad)
movs
jl
dec
adc
cli
pusha
xlat
xor
xor
mov
scas
cmc
xor
add
jae
xor
fcomp
xlat
add
je
pop
sbb
adc
mov
sbb
dec
sbb
xchg
cmps
cli
sahf
loope
iret
xchg
xor
popf
aad
and
push
icebp
out
div
rcl
pushf
jae
or
dec
ins
nop
clc
cld
add
jge
jmp
repnz
adc
nop
ret
cmps
aam
xor
nop
(bad)
xchg
push
loopne
mov
cmp
mov
and
icebp
outs
stos
add
(bad)
psrad
cmp
push
mul
mov
out
icebp
xor
cmp
add
enter
cmc
xor
mov
dec
ss
fs
out
cmp
fdiv
out
push
or
iret
aad
jle
cmps
fst
scas
cmp
push
jae
xor
daa
jno
pusha
in
mov
adc
scas
not
aas
test
nop
ins
jge
(bad)
test
mov
xchg
mov
cmp
push
ins
dec
cli
push
test
pop
loop
mov
lea
push
pop
cli
sbb
jbe
arpl
xchg
jmp
(bad)
or
lock
in
lock
ss
or
ret
xchg
sub
data16
cmps
out
mov
clc
adc
stos
out
sar
aaa
out
xor
push
test
scas
mov
push
inc
adc
xchg
sahf
xchg
push
dec
cmps
dec
cmps
xchg
cmps
inc
stos
movsx
call
adc
jnp
push
or
ins
mov
add
or
shl
pop
(bad)
jmp
sub
popf
jbe
sub
gs
pop
or
jmp
dec
jmp
fimul
out
pop
xor
sub
(bad)
jle
mov
enter
int3
data16
sbb
test
mov
push
mov
shr
test
popf
movs
das
js
enter
pop
addr16
nop
cmp
mov
xchg
int
das
sar
mov
and
aam
adc
mov
cmp
xor
sub
pop
or
sahf
sbb
or
dec
ja
mov
test
das
(bad)
mov
cmps
into
mov
pop
popa
xor
shr
pop
or
enter
shr
xor
ret
push
call
fisubr
push
xor
cwde
mov
mov
jns
fwait
cmc
sub
fld
xchg
clc
vandps
push
mov
aad
xor
popa
cmc
std
xchg
xor
pop
add
dec
ret
retf
inc
pop
ins
ins
mov
imul
outs
xchg
and
mov
int
(bad)
adc
adc
mov
lea
lea
inc
pop
dec
mov
mov
cmp
sub
inc
es
lds
xlat
lock
retf
sub
xchg
ins
dec
jne
shl
jo
test
div
add
dec
jle
sbb
inc
mov
js
ss
pusha
or
lds
pushf
out
jnp
(bad)
jg
jp
inc
xchg
shl
jae
ficom
push
push
sub
push
cmps
sub
fwait
pop
xchg
push
adc
pop
std
and
imul
retf
punpcklwd
push
sbb
lods
inc
add
jmp
hlt
push
sub
sub
pop
das
xor
inc
push
push
and
(bad)
jb
(bad)
cld
pop
sbb
or
pop
das
adc
stc
push
sub
lock
outs
fdiv
xor
push
out
int
jb
(bad)
fwait
rcl
or
xchg
push
repnz
js
add
daa
jp
jmp
inc
or
push
xchg
jnp
mov
xchg
jns
fldcw
push
jmp
ja
mov
fstp
mov
mov
loop
aam
sbb
mov
fild
xlat
lock
mov
stos
push
cmp
mov
or
inc
jae
dec
mov
jg
push
mov
push
or
in
mov
pop
hlt
stc
mov
cmp
test
shr
lahf
aam
or
js
fadd
dec
or
dec
push
xchg
jmp
cmp
sahf
call
jle
loop
cld
adc
mov
rcl
mov
div
ds
or
out
dec
sub
lods
push
lods
xchg
pusha
fisubr
sub
ds
dec
xchg
aam
jle
shl
int3
dec
push
and
jg
push
imul
jle
push
and
adc
mov
and
mov
mov
scas
ins
shl
test
inc
sar
shl
mov
pop
les
pop
mov
inc
cmp
inc
fs
adc
jge
jb
mov
test
add
(bad)
cmps
stc
ror
lahf
mov
fadd
inc
jo
add
inc
dec
xor
dec
cmp
xor
adc
pop
inc
mov
(bad)
(bad)
ja
test
rcr
gs
in
xor
inc
popa
lea
ror
mov
pop
jmp
xor
loope
mov
lods
push
fiadd
adc
fsubrp
cmp
cwde
fbld
je
mov
mov
test
mov
or
dec
jecxz
mov
repz
call
aaa
pushf
sub
pop
pop
sub
push
in
xchg
mov
dec
add
mov
stos
cld
mov
lods
lods
sub
jmp
jnp
stos
adc
or
xor
out
push
(bad)
call
pop
push
retf
add
(bad)
(bad)
xor
mov
lahf
mov
sub
push
lods
(bad)
cld
pop
mov
int
and
daa
pop
inc
dec
xchg
mov
scas
push
stc
retf
cmp
sahf
mov
xchg
xchg
jbe
xor
pop
pop
ret
pop
adc
aas
ins
jbe
inc
icebp
mov
add
ss
cdq
in
loop
and
cmp
sub
adc
cmp
cmps
frstor
sbb
xor
xchg
adc
mov
shl
fwait
xor
lahf
adc
imul
add
aad
push
lea
mov
jl
mov
(bad)
push
add
fnstenv
(bad)
sar
adc
push
pop
cwde
sbb
lahf
or
out
loopne
jg
dec
sbb
mov
inc
mov
adc
int3
fstp
xchg
mov
fild
cmps
mov
popa
or
sub
mov
adc
arpl
sar
stc
adc
(bad)
xchg
adc
jle
pop
jl
lock
dec
mov
out
pop
shr
pop
mov
push
dec
sub
les
sti
je
stos
sub
scas
mov
sub
js
push
mov
xchg
pop
mov
scas
add
xor
mov
cmp
mov
mov
inc
xor
xor
retf
xchg
adc
xor
adc
clc
inc
sbb
dec
dec
shl
jmp
or
mov
push
pop
cdq
cwde
movs
cwde
push
mov
cmp
out
es
sbb
sub
xchg
leave
xlat
lds
lds
or
mov
adc
movs
cld
cmp
jo
addr16
dec
jns
pushf
sbb
clc
pop
xor
ret
and
test
dec
movs
icebp
loope
jae
cli
fbld
sar
sub
jg
inc
lea
dec
js
movs
fcom
push
pop
leave
(bad)
push
hlt
and
stc
and
arpl
dec
xchg
test
inc
adc
out
add
cmp
pop
push
aad
pminsw
arpl
aad
add
into
and
pusha
out
cli
into
sub
loope
inc
inc
sub
aas
xor
jge
daa
jb
ror
xchg
test
aaa
mov
sbb
inc
data16
mov
fiadd
xor
adc
fwait
imul
adc
xchg
mov
fs
dec
adc
fs
jne
sbb
repz
jno
jo
sub
in
fidiv
dec
xchg
cmc
add
popf
inc
pop
(bad)
jge
pop
or
add
cmp
jo
rcl
je
imul
cmps
pop
cmps
ror
jo
(bad)
adc
cdq
pinsrw
outs
addr16
inc
jle
dec
or
mov
cmps
adc
push
arpl
xor
inc
push
daa
push
adc
cs
movs
pop
lods
repnz
aad
jmp
jns
sbb
sub
lods
xor
inc
xor
jmp
ror
jge
push
mov
inc
fbstp
enter
dec
and
jnp
mov
sub
pop
loopne
ins
mov
scas
dec
movs
lds
pop
pop
lods
dec
jmp
push
adc
cwde
jno
xlat
dec
addr16
jnp
sbb
or
test
repz
mov
mov
aam
in
fmul
movs
mov
aaa
xchg
daa
cmps
jae
mov
xor
dec
mov
in
add
les
fadd
adc
das
sahf
addr16
mov
push
inc
mov
aad
add
fisub
scas
push
cmc
ret
(bad)
sub
and
stc
jge
add
ja
push
imul
adc
push
push
ficom
sub
push
xchg
xor
aam
xchg
lods
cmp
out
push
lds
or
ror
pop
adc
mov
mov
inc
or
pop
inc
jo
mov
sbb
adc
cdq
mov
jne
cmps
add
jo
ror
je
stc
bound
xchg
xor
and
xchg
jmp
pop
pop
dec
ret
cmp
jp
cmc
mov
hlt
xchg
add
inc
dec
inc
popf
dec
(bad)
sbb
xor
icebp
cli
retf
or
out
mov
push
and
test
into
push
data16
adc
or
jg
mov
lock
xor
adc
pop
scas
add
inc
dec
mov
dec
mov
or
lahf
pop
xchg
jge
xor
mov
cmps
dec
jp
inc
pushf
sbb
jns
push
mov
scas
or
rcr
out
int3
in
xor
leave
imul
test
ror
lds
dec
xchg
mov
mov
int
dec
jbe
and
push
test
dec
dec
xchg
jg
into
xor
movs
pop
push
cmp
ss
pop
lds
movs
adc
pushf
pusha
shl
out
xchg
movs
test
or
sub
pop
daa
repnz
inc
mov
les
adc
js
jae
aaa
lea
and
and
push
sub
jmp
mov
fst
mov
push
cli
ror
mov
fbstp
sbb
mov
outs
cmp
add
ins
leave
mov
fcmovnb
dec
sti
inc
mov
ss
or
mov
jmp
addr16
add
cmp
mov
sti
mov
ins
jge
xlat
and
dec
hlt
lods
and
pop
les
nop
movs
or
iret
push
xchg
hlt
(bad)
imul
pop
jae
nop
xor
scas
scas
mov
cld
shl
aad
les
dec
test
sub
and
loope
sbb
int
jge
in
or
jmp
dec
mov
mov
push
push
cmp
mov
inc
arpl
out
sbb
repz
loop
loop
mov
pop
push
stos
jmp
stos
xchg
test
adc
sbb
sbb
stos
and
stc
rol
dec
bnd
sub
xor
xor
gs
adc
ret
test
mov
in
lock
je
lock
xor
out
es
mul
adc
mov
sahf
mov
fmul
mov
push
xchg
bound
adc
std
add
mov
adc
xor
mov
arpl
in
out
test
adc
or
jno
xor
lock
pop
je
jle
push
pop
push
mov
sbb
std
sub
clc
mov
ror
mov
jmp
mov
or
(bad)
push
inc
add
das
sub
loope
push
push
inc
or
popa
scas
sub
shl
jmp
push
pop
daa
test
call
imul
and
push
or
in
hlt
das
and
cmp
pop
pop
cmp
scas
lods
mov
cmp
add
push
scas
retf
mov
rcr
cwde
retf
in
inc
jmp
pop
jg
sahf
mov
shl
mov
mov
(bad)
xchg
(bad)
lock
cmp
push
sub
mov
mov
xchg
mov
mov
loopne
mov
cld
dec
mov
pop
pop
stos
push
mov
arpl
ret
cmp
jmp
add
arpl
cmp
mov
(bad)
vandpd
xchg
loope
aad
mov
adc
neg
and
ds
lock
dec
fadd
mov
or
jmp
dec
stos
gs
xor
test
popa
inc
repnz
inc
jl
add
ret
je
sub
cmp
sbb
in
xchg
(bad)
mov
pop
adc
or
loope
lock
xor
push
(bad)
xsaves
dec
sub
repz
scas
xchg
lods
in
xor
xchg
int
pop
or
sar
dec
pushf
pop
xor
xchg
push
ja
or
mov
sar
jb
push
jbe
out
mov
lock
mov
int
gs
mov
and
in
mov
mov
jb
inc
enter
jae
iret
aad
hlt
and
xlat
nop
bswap
aaa
(bad)
jle
or
lods
pop
mov
dec
ss
adc
call
sub
imul
add
std
shl
cmp
test
mov
mov
(bad)
jmp
test
ror
aas
ss
ret
fisubr
or
mov
mov
mov
pop
arpl
mov
ins
inc
cmc
retf
sbb
or
stos
pop
loopne
mov
mov
dec
inc
clc
sbb
rcr
ror
cmp
out
iret
in
lea
jl
inc
sbb
cmp
shl
and
mov
jl
fs
sbb
dec
(bad)
push
aas
jne
stos
ins
push
sub
pop
mov
push
js
cmp
xchg
pushf
xchg
mov
imul
xor
sub
(bad)
sti
ins
daa
ins
(bad)
fdivr
xchg
jecxz
mov
call
fisubr
(bad)
dec
or
mov
call
fwait
mov
cmp
cmps
push
pop
sub
imul
push
repz
bound
test
inc
cdq
repnz
dec
mov
mov
daa
cmp
je
add
popa
cmp
mov
mov
mov
pop
inc
pop
add
ja
test
stc
inc
(bad)
jp
int3
fcmovnb
enter
in
sub
sub
fwait
or
dec
mov
ror
push
pop
mov
lods
inc
stos
nop
js
inc
sub
rol
mov
inc
xor
mov
addr16
and
pop
fwait
dec
inc
ins
inc
jnp
bound
push
aas
sbb
sub
test
test
mov
xchg
sub
push
push
loop
mov
inc
jb
out
mov
mov
lods
test
adc
in
inc
rol
rcr
and
int3
jg
xlat
inc
in
xchg
rol
pushf
loopne
sbb
mov
cmps
push
cmp
mov
into
out
cmp
mov
mov
movs
imul
push
aad
aas
adc
retf
lods
mov
push
adc
shl
fidiv
sub
scas
(bad)
sub
mov
aaa
int
xchg
mov
movs
addr16
les
sbb
xchg
popa
pusha
push
sahf
scas
cmp
cmps
pushf
push
push
ficom
movs
mov
lods
shl
push
out
mov
rcl
adc
idiv
test
mov
xchg
call
outs
xor
fld
push
movs
and
(bad)
(bad)
xchg
xor
das
and
adc
ret
jge
mov
jge
into
shl
push
push
fist
ins
add
xor
jb
jns
test
inc
jb
mov
adc
ds
lea
popf
adc
pop
xchg
push
movs
stc
ret
aad
mov
scas
mov
pop
std
fdiv
retf
xchg
push
(bad)
cmp
dec
xor
std
ret
and
cmp
jae
fsubr
or
and
pop
jmp
fsub
xchg
sar
es
mov
lahf
mov
ficom
dec
fadd
inc
mov
imul
test
add
fsub
jnp
dec
sub
fld
mov
pushf
leave
cmps
fiadd
stc
mov
in
out
sahf
loopne
cmp
outs
xchg
cli
push
dec
add
sbb
add
sbb
sar
mov
rcr
push
retf
mov
add
in
ja
out
pop
mov
fistp
cmp
lods
jbe
xor
jbe
pop
sbb
or
outs
lahf
loope
mov
cwde
push
mov
inc
mov
mov
sbb
jg
jle
movs
pop
cld
xchg
pop
mov
call
mov
push
xor
sbb
xor
mov
or
jne
ds
loopne
pop
adc
adc
and
popf
add
dec
retf
xchg
and
mov
aaa
arpl
ja
dec
addr16
mov
test
das
jb
test
cs
pop
fnstsw
cmp
adc
mov
rcl
sub
rcr
inc
(bad)
imul
mov
inc
pushf
test
mov
push
jne
inc
test
nop
dec
cmp
mov
sbb
cdq
fisub
dec
pop
les
imul
push
leave
out
pop
sar
adc
fnstsw
sahf
(bad)
icebp
or
pop
bound
and
inc
cld
pop
int
cmp
mov
arpl
cmp
xchg
dec
out
cmp
dec
jl
icebp
fs
sahf
adc
test
mov
xor
ror
inc
scas
fwait
jge
jno
push
pop
ror
xchg
outs
xor
icebp
sbb
ja
(bad)
in
imul
xor
lahf
dec
xor
call
jno
or
popa
jnp
ds
daa
fwait
and
js
out
push
sub
outs
adc
aaa
je
jns
mov
or
(bad)
daa
xchg
dec
inc
clc
(bad)
out
jns
jg
pop
jle
xchg
mov
call
and
imul
fst
push
or
imul
sub
ins
sbb
add
gs
popf
sbb
add
mov
cld
hlt
pop
dec
imul
or
sbb
cmp
daa
inc
stos
and
push
push
sahf
jg
dec
add
movs
jae
cmp
jmp
test
dec
idiv
xor
fimul
xchg
pop
in
mov
out
push
and
stos
or
leave
add
and
outs
in
std
sbb
lds
pop
jno
cmc
call
pop
or
mov
(bad)
push
js
mov
fcmovnbe
pop
loop
sbb
jmp
es
outs
jle
into
(bad)
in
nop
xchg
std
cmp
dec
fsubrp
shr
mov
and
daa
cmp
in
mov
jmp
movs
inc
sbb
xchg
adc
xchg
cmovns
fld
les
fwait
adc
xchg
xchg
ss
outs
and
pop
jmp
(bad)
test
aam
test
test
out
shr
aam
mov
jne
adc
xor
push
ja
mov
mov
aaa
test
xor
fs
int
jmp
mov
(bad)
dec
retf
xchg
and
dec
jb
fidiv
cmp
and
test
sahf
mov
add
sbb
mov
std
adc
sar
dec
xor
mov
(bad)
xor
cmp
mov
mov
into
dec
xchg
test
mov
movs
cmp
dec
retf
test
xor
dec
retf
jg
jp
gs
dec
sti
ficomp
retf
mov
adc
mov
fist
and
inc
add
mov
ror
ja
xor
push
jp
cwde
mov
cmp
ins
push
cwde
aam
lock
pop
icebp
xchg
push
xlat
data16
add
dec
jp
aam
mov
(bad)
(bad)
mov
sub
mov
pop
mov
jbe
cwde
and
jno
fsubr
retf
int
or
test
(bad)
fcomi
icebp
dec
loopne
das
in
xchg
mov
in
xchg
xchg
dec
pop
stos
les
fcomp
jbe
aad
test
adc
inc
mov
addr16
mov
inc
push
stc
aad
ja
sub
dec
pop
cdq
mov
arpl
aad
test
fbld
cmp
or
in
push
mov
xor
es
mov
daa
mov
scas
sbb
mov
lds
into
adc
sub
xchg
xchg
push
push
lods
loope
inc
sti
arpl
adc
idiv
mov
push
jne
jno
lock
add
fs
cwde
mov
mov
aam
push
jbe
lods
lds
sbb
in
xor
sti
jo
cmp
jecxz
dec
xchg
pop
push
clc
add
lahf
cld
push
jb
addr16
aam
push
mov
jg
cmp
movzx
xchg
cld
imul
pop
cmp
sbb
add
and
xor
push
icebp
push
cmps
daa
scas
mov
pop
jns
push
in
push
cwde
retf
jbe
stc
xor
sub
pop
pop
cld
ficom
add
xor
shl
mov
fs
sti
and
inc
add
loop
xchg
xchg
ret
jle
mov
fimul
cmp
mov
or
mov
movs
out
in
pop
xor
into
jo
nop
mov
mov
(bad)
jge
pushf
lds
sbb
cwde
pop
xchg
movs
pop
shl
in
loop
test
and
jae
test
xchg
adc
xor
xor
stc
push
adc
outs
call
pusha
xchg
out
ds
push
sti
xor
sbb
cld
jecxz
pop
sahf
shl
jnp
sbb
mov
daa
shl
sti
add
jg
(bad)
out
pushf
out
xor
int3
jns
fisub
loopne
inc
adc
inc
cmp
sub
les
or
outs
repz
push
xor
mov
cs
xchg
xlat
mov
lds
push
cli
dec
push
mov
mov
sub
in
imul
sahf
cmp
push
xchg
fsin
jcxz
inc
es
js
fdivr
icebp
mov
mov
xchg
xor
rcl
lods
sub
enter
xchg
or
jmp
repnz
fcmovbe
fisttp
xor
mov
rcl
xchg
lods
in
scas
jae
fldcw
pusha
mov
ret
(bad)
mov
icebp
cmps
movs
ins
push
cld
xchg
jno
gs
es
jp
repz
scas
in
mov
xor
in
stc
loopne
fwait
cli
jne
jecxz
lds
fcom
repz
fistp
lock
or
adc
pop
shr
fmul
jns
xchg
jge
inc
adc
mov
es
xor
(bad)
in
(bad)
shl
sti
pop
mov
mov
fist
ins
pop
imul
(bad)
das
push
xor
mov
fdiv
aas
clc
or
dec
cwde
push
mov
lods
ret
in
cmp
sub
pop
cmp
jmp
frstor
push
int
hlt
enter
inc
push
iret
cmp
and
jnp
(bad)
enter
fst
aas
mov
mov
bound
jmp
pusha
sbb
add
js
js
and
in
int3
in
retf
pop
out
xor
lea
or
loope
dec
mov
cmp
jae
nop
fisub
adc
js
mov
jle
imul
jns
xchg
es
sbb
gs
fs
not
in
popf
xor
cmps
xchg
mov
leave
xchg
imul
or
push
adc
mov
and
and
add
or
ins
cwde
popa
adc
add
sbb
mov
add
inc
clc
or
(bad)
xor
push
xchg
jbe
mov
fnstsw
bound
int
cdq
jnp
lea
mov
jb
or
cdq
adc
mov
push
mov
in
push
out
lods
pop
sbb
pushf
popf
test
push
mov
dec
add
or
add
imul
adc
push
dec
adc
sti
ss
lds
lods
lock
adc
dec
inc
test
mov
popa
not
les
mov
push
fwait
loope
lahf
cmp
outs
lea
dec
push
mov
jecxz
xchg
in
fmul
movs
lahf
sub
enter
mov
mov
addr16
jmp
int3
test
push
xor
mov
idiv
out
dec
je
inc
xor
jl
fld
pop
push
pop
jg
fs
nop
xchg
pop
lods
scas
fdiv
xlat
mov
jno
ins
loopne
jle
jae
dec
pushf
push
mov
cmps
sub
sub
mov
sbb
xchg
add
mov
das
stos
xor
pop
xchg
addr16
push
(bad)
ss
sub
cwde
adc
nop
fsubp
jmp
dec
loop
retf
jo
adc
(bad)
movs
cwde
pop
in
mov
add
outs
add
jmp
push
aaa
dec
stc
mov
or
aaa
sbb
xor
shr
adc
test
scas
add
lds
jmp
adc
fild
inc
test
mov
or
inc
vpmacssdd
fst
leave
and
(bad)
adc
or
push
mov
mov
enter
or
ret
jg
pop
adc
mov
push
daa
(bad)
fsub
sbb
outs
enter
lock
pushf
sbb
loopne
xor
call
and
xor
fcomp
loop
rol
ins
into
inc
dec
xor
clc
xchg
cmp
pusha
xchg
fimul
inc
sbb
inc
mov
enter
bound
mov
jmp
cmps
push
add
add
cdq
out
pop
xor
gs
push
cmc
sub
or
sub
imul
fild
sbb
jp
or
mov
lods
fwait
pop
pop
sbb
sub
rcr
call
and
jns
mov
xor
xchg
or
cmc
sbb
push
cmp
js
mov
fadd
sar
fwait
sbb
jp
int3
outs
retf
(bad)
pop
loop
dec
fimul
sbb
out
sub
loope
lock
imul
call
mov
dec
stos
lock
std
mov
jno
xlat
loopne
jge
and
mov
loopne
(bad)
pop
xchg
aad
out
jo
xchg
pop
mov
adc
jg
cmp
pusha
test
mov
push
pop
jecxz
mov
lea
ds
shl
push
out
rsm
les
mov
or
sub
dec
and
push
fcomp
mov
sbb
pop
or
in
pop
add
int3
push
mov
nop
dec
push
dec
addr16
scas
sbb
xchg
or
or
inc
and
nop
cs
push
adc
out
sub
lds
mov
mov
inc
(bad)
fiadd
lods
dec
dec
dec
and
imul
pop
ror
mov
lds
xchg
arpl
mov
ds
and
sub
es
mov
push
dec
shl
xchg
stc
inc
xchg
push
or
lods
sbb
popa
jno
enter
jmp
push
pusha
pusha
(bad)
ja
imul
out
pop
dec
in
cld
clc
lahf
fcomp
add
or
ss
mov
mov
fadd
(bad)
jmp
add
push
and
mov
gs
push
xor
fmul
cld
xchg
mov
lods
outs
les
inc
push
call
push
hlt
lea
clc
repnz
fucomip
inc
inc
mov
or
push
sub
test
aas
add
dec
sbb
lahf
sbb
cmp
xchg
push
xchg
popa
inc
addr16
dec
(bad)
xchg
jns
lds
mov
sbb
jle
in
outs
imul
outs
in
(bad)
(bad)
fcom
and
call
aam
(bad)
ins
push
pop
or
inc
out
or
out
or
imul
or
out
dec
je
loope
mov
push
rcr
sub
enter
in
les
push
pop
push
je
sub
jmp
jp
push
cmps
es
movs
retf
mov
leave
fistp
xchg
call
fcomp
dec
push
jp
and
dec
sub
xlat
(bad)
cmc
stos
inc
xlat
sbb
push
jnp
rcl
xor
dec
fiadd
xchg
pushf
inc
push
fs
inc
xchg
xor
rcr
push
lea
push
sahf
fld
jnp
inc
xlat
sbb
sbb
or
fwait
push
and
sub
xchg
fist
sar
cdq
and
adc
ror
sub
(bad)
daa
pop
imul
test
sbb
push
jmp
xor
cli
inc
out
adc
jmp
adc
retf
xchg
fwait
push
lock
cmp
jg
adc
aad
jmp
sahf
add
xchg
add
mov
mov
mov
sub
(bad)
jb
mov
dec
lock
xor
iret
sub
xchg
fistp
add
mov
mov
xchg
add
mov
mov
lahf
mov
pop
or
rcl
fwait
inc
rcl
arpl
mov
sbb
js
adc
loope
mov
aad
loopne
pop
iret
(bad)
bound
jb
pop
shr
lds
push
ins
sar
jb
shr
and
leave
mov
and
jns
push
hlt
fldcw
dec
adc
div
hlt
jae
jge
cmp
pop
fidiv
mov
sub
jge
add
pop
lds
popa
or
xor
xchg
retf
js
movs
sub
cmp
test
lahf
xor
sub
push
stos
push
in
imul
(bad)
jl
sub
jbe
cmps
xchg
int3
mov
stc
adc
les
mov
inc
sbb
sbb
push
pop
adc
outs
adc
jle
cld
add
in
and
mov
or
fcmovu
das
loope
int3
or
mov
fwait
jo
push
test
pop
mov
cld
loope
cmp
and
push
ror
in
(bad)
xchg
shr
scas
test
adc
mov
aaa
aas
dec
mov
lds
adc
test
and
mov
sbb
mov
aam
or
xchg
mov
or
loopne
push
dec
xchg
dec
jb
cmp
aam
sub
sbb
mov
pop
dec
and
xchg
inc
xchg
inc
lahf
adc
std
sbb
mov
test
pusha
sub
scas
scas
mov
add
aam
jmp
and
mov
cmps
jo
repz
and
inc
int3
hlt
cmp
and
in
adc
das
out
daa
dec
mov
jo
pop
aad
stc
push
(bad)
or
inc
push
push
ins
popf
xchg
mov
fwait
arpl
cmps
jmp
mov
in
ret
cmp
dec
aas
inc
aaa
pop
(bad)
lods
mov
fldenv
fisttp
fadd
sahf
cs
xor
xchg
jecxz
retf
push
mov
mov
scas
push
(bad)
adc
jae
cmp
vmaxps
xchg
or
push
add
add
inc
cmp
clc
sahf
ss
sbb
sbb
jbe
push
adc
lea
popf
(bad)
xchg
pop
fsub
fs
push
dec
popf
add
inc
adc
mov
adc
or
add
xchg
es
xchg
dec
inc
mov
test
das
stc
pusha
pop
or
adc
jae
xchg
mov
add
pop
or
test
(bad)
push
in
test
and
mov
cld
and
ror
inc
std
xor
int3
pop
push
sub
jbe
xor
es
loopne
out
out
pop
mov
pusha
sub
xchg
daa
push
mov
push
mov
and
adc
lods
push
out
mov
lods
add
pop
adc
fisttp
dec
sahf
cs
and
cmps
out
es
das
mov
pushf
xchg
rcl
repz
lahf
xchg
inc
pushw
push
enter
(bad)
sub
mov
rcl
and
and
loope
enter
stos
add
xchg
adc
out
push
cmps
ds
dec
push
push
pop
aas
pop
inc
inc
dec
xor
sti
sub
cmps
jecxz
pop
repz
cmp
push
pusha
imul
xchg
mov
push
or
in
jp
sub
outs
je
(bad)
lods
jecxz
aaa
sbb
cmc
jb
push
fist
sub
sub
and
adc
fmul
push
xchg
outs
ss
and
jmp
das
test
xor
int3
or
arpl
fwait
mov
jne
outs
call
aas
mov
movs
aam
dec
and
sbb
sbb
div
pusha
xchg
inc
shl
imul
xchg
iret
fild
inc
mov
cmps
lahf
xchg
js
call
add
pusha
push
pop
loope
out
adc
xor
lea
adc
sub
sbb
fnstcw
jns
ds
mov
jmp
or
aas
xor
stos
fiadd
(bad)
les
mov
add
or
xor
cld
inc
stos
aas
xlat
cmc
jns
(bad)
das
mov
mov
int3
std
cli
sbb
stc
adc
mov
test
push
int
jb
enter
xchg
test
test
inc
adc
into
push
pushf
jecxz
dec
pushf
or
ins
jns
mov
jmp
(bad)
push
in
and
or
mov
sbb
push
sahf
or
test
jmp
daa
and
aad
jns
fldenv
popa
mov
aam
in
pop
aam
ins
xchg
add
stc
sbb
mov
adc
adc
xor
jp
ret
test
icebp
add
cld
call
popa
mov
pop
jne
cli
aam
loope
mov
rcr
imul
push
jns
push
push
lock
push
or
pop
xor
and
mov
aas
dec
dec
jmp
push
stc
sub
out
test
xchg
push
pop
add
xchg
cmp
ja
iret
push
out
adc
stos
jne
push
outs
cmp
sub
adc
mov
loop
push
dec
dec
pop
retf
xor
outs
dec
adc
popa
cli
call
adc
aas
cmp
and
lods
jae
jns
data16
retf
cmp
fisub
push
rcr
stos
pushf
inc
push
sbb
jbe
or
icebp
or
dec
push
(bad)
fbld
xlat
xchg
scas
fmul
fsubrp
loop
jne
sub
xor
cmp
test
arpl
sbb
jecxz
pop
cli
inc
pop
nop
push
jae
xchg
cmp
addr16
dec
ds
and
mov
movs
xchg
ret
dec
outs
xchg
loope
mov
sub
test
sbb
mov
sar
and
add
xchg
jmp
call
and
out
jp
fdiv
in
sbb
mov
xor
sbb
popa
add
aad
je
test
jmp
mov
stos
mov
pusha
inc
dec
lods
dec
mov
jle
lods
adc
mov
ins
push
cmps
pop
pop
mov
pop
(bad)
push
dec
jns
imul
(bad)
or
push
jmp
push
inc
sbb
push
cli
xchg
xor
rcr
dec
movs
mov
js
dec
and
adc
pop
mov
retf
stos
xchg
add
push
dec
scas
mov
lods
adc
aam
ret
push
dec
cli
inc
and
or
out
loop
inc
imul
add
xlat
repz
adc
dec
das
repnz
imul
mov
lea
jg
cmp
jb
ds
jns
cmp
mov
push
jg
sbb
add
jbe
mov
cld
add
add
dec
cmp
pop
pop
(bad)
cwde
adc
fwait
(bad)
stos
mov
mov
xchg
ror
enter
sbb
fstp
push
out
cmps
mov
loop
inc
loope
fistp
jno
or
in
mov
clc
xor
sub
pop
pusha
stos
sub
adc
ins
popa
jnp
xchg
and
push
jae
add
push
adc
inc
sub
popa
fcomip
into
jbe
adc
cmp
adc
pop
mov
lods
pop
jae
imul
adc
push
or
mov
push
test
xchg
xchg
daa
or
test
pop
jl
and
psllw
addr16
retf
call
mov
les
stos
popf
movs
cmp
add
push
frstor
pop
adc
aad
leave
xchg
(bad)
fs
rol
xor
xchg
fwait
mov
pop
mov
inc
add
jl
imul
rcr
adc
mov
ds
ss
retf
or
inc
jmp
and
sbb
hlt
repnz
cld
gs
mov
inc
mov
jp
jmp
(bad)
cmp
fist
not
sbb
mov
lea
push
cmp
out
dec
push
cmc
shl
add
loop
jp
fidiv
adc
(bad)
fyl2xp1
sbb
icebp
mov
jg
call
adc
out
pop
xchg
cmp
mov
xor
adc
sub
pusha
(bad)
sub
aaa
jle
pop
add
pop
adc
and
or
outs
push
mov
jl
stc
pusha
and
arpl
nop
pusha
xchg
pop
sub
ja
mov
push
mov
mov
das
cmps
out
xchg
sub
enter
pop
cmps
adc
cwde
out
sub
adc
(bad)
cli
out
sbb
in
cdq
in
cmps
add
lock
test
gs
xlat
(bad)
hlt
jae
or
jmp
xor
stos
jmp
loop
imul
add
dec
lds
pop
sbb
sbb
ror
icebp
xlat
xor
or
outs
add
xchg
lods
mov
add
sub
fnsave
cmp
dec
and
ins
ret
jb
hlt
imul
outs
daa
pop
jle
adc
and
sar
adc
push
out
and
sub
ss
test
dec
push
popf
in
adc
and
mov
lods
mov
retf
aam
xor
cld
jbe
mov
jmp
movs
sbb
dec
inc
pop
(bad)
xor
lahf
ds
mov
int
or
sub
lods
push
shl
pushf
adc
dec
dec
fcomp
and
xchg
jmp
outs
scas
sbb
xchg
or
sub
retf
aam
xchg
xchg
sbb
in
fdivr
outs
lods
cmp
movs
jnp
mov
mov
test
clc
ja
rcl
test
xchg
pop
test
inc
popa
cmps
mov
mov
dec
call
sbb
mov
mov
push
and
cmp
xor
call
sub
pop
push
stc
sbb
jae
ds
add
add
mov
jecxz
test
dec
fmul
xor
inc
fwait
shr
jge
imul
inc
sbb
(bad)
mov
fnstsw
jle
repz
loop
mov
dec
mov
out
pop
(bad)
arpl
xchg
mov
mov
cmp
pop
pop
mov
cmp
cmp
mov
arpl
push
ja
loopne
push
pop
scas
fs
inc
je
dec
(bad)
or
jae
mov
jmp
aaa
pop
mov
cld
aam
pop
lods
mov
fadd
xor
push
loope
aad
movs
inc
and
sti
mov
xor
adc
and
jecxz
add
mov
out
std
out
shr
clc
cli
rcr
loop
pushf
stos
sbb
shl
pop
imul
xor
and
mov
push
enter
fmul
aaa
cmp
xor
push
pusha
out
mov
ret
in
in
push
cmp
mov
sbb
or
retf
icebp
pop
aam
retf
mov
retf
(bad)
pop
les
sub
cmp
lock
xor
hlt
inc
sbb
or
lea
xchg
xor
mov
mov
inc
das
pop
sub
pop
cmps
pop
cwde
(bad)
sbb
adc
and
adc
jmp
xchg
push
out
jg
push
and
and
sub
rep
scas
pop
mov
shr
mov
das
mov
pop
cld
xchg
dec
out
rol
jge
mov
add
fild
and
and
jnp
pop
fnstcw
repz
int3
dec
out
fistp
jp
add
mov
sbb
mov
mov
pop
fs
data16
mul
mov
adc
inc
sub
push
in
shl
out
hlt
gs
and
lahf
mov
jns
dec
or
les
push
in
jns
jmp
inc
pop
add
dec
movs
ret
pop
inc
and
push
dec
fnstenv
push
xchg
add
nop
je
inc
aad
inc
pop
mov
out
lea
mov
jae
bswap
sbb
out
sub
mov
xor
push
mov
test
fdiv
call
adc
jle
fist
test
pop
test
rcl
fisubr
or
pop
call
sbb
out
mov
dec
(bad)
push
pop
or
ret
hlt
popa
add
call
bound
inc
mov
sub
push
test
cs
sub
jp
mov
and
fwait
lods
push
outs
(bad)
push
xchg
jmp
jae
xor
enter
pop
rcr
and
push
lods
push
mov
cli
call
xchg
pop
mov
out
cld
out
inc
xchg
aaa
push
in
inc
fild
or
cmp
pop
into
test
clc
sbb
aaa
in
ret
dec
inc
push
inc
cwde
data16
jne
inc
jmp
outs
pop
repnz
aam
or
jb
mov
jae
sub
xchg
adc
sub
sbb
fstp
fwait
mov
dec
push
xchg
adc
cmp
xchg
lods
mov
je
mov
int3
call
sbb
dec
in
push
js
out
fld
lea
push
int
jmp
int3
shr
jp
xchg
sbb
loop
ins
aam
in
sub
test
or
nop
cmp
add
or
add
loopne
pop
scas
or
jno
inc
sar
enter
mov
dec
push
xlat
inc
fmul
retf
pop
cmp
sbb
shl
ss
xor
pusha
mov
xchg
push
or
fdiv
bound
rsqrtps
pop
mov
add
int3
sub
(bad)
inc
lds
int
cli
fisttp
jbe
int
inc
retf
push
mov
mov
sbb
movs
retf
pop
inc
cmp
in
popf
xor
(bad)
in
jmp
(bad)
pusha
adc
mov
ins
push
jecxz
dec
cmp
pop
sub
sub
pop
sti
shr
jb
add
sahf
push
jl
dec
aad
ja
sub
mov
xchg
rol
push
fnsave
sahf
xchg
icebp
push
sub
repnz
test
pop
ror
call
add
shl
int3
cli
das
sti
sub
sahf
jne
cld
jl
fidiv
pop
mov
and
inc
enter
enter
int3
or
lea
imul
fbstp
arpl
(bad)
sub
in
sbb
call
pop
push
pop
jl
xor
or
lods
pushf
es
mov
or
jbe
into
push
jae
test
xor
pop
mov
mov
aas
dec
mov
adc
arpl
jge
mov
jae
adc
inc
loop
push
ror
adc
push
push
mov
or
add
nop
cmp
imul
adc
loop
fld
cld
rcr
test
inc
or
add
adc
xchg
push
mov
inc
adc
xchg
popa
retf
stos
cmp
int
in
xchg
push
push
and
test
js
test
mov
mov
fnsave
ins
xchg
comiss
pusha
push
fld
pop
ins
test
fcmovb
cmp
cmp
mov
push
or
mov
in
mov
xchg
cdq
inc
dec
ss
xlat
outs
aad
add
clc
outs
sbb
into
mov
mov
inc
mov
sbb
in
mov
out
adc
jb
imul
mov
enter
or
adc
mov
scas
call
cdq
xchg
aaa
out
jb
mov
fwait
jae
sub
mov
int
scas
cld
mov
into
and
sbb
inc
rcr
test
xchg
es
mov
push
pop
add
test
pop
test
ror
adc
hlt
sub
xchg
mov
cs
or
popa
mov
pop
iret
pop
inc
lods
mov
imul
mov
test
inc
inc
add
(bad)
sub
data16
jae
ins
sub
push
jmp
clc
sub
push
mov
sub
mov
pmuludq
mov
jle
(bad)
add
and
xor
ret
iretw
xor
push
pop
or
inc
loope
pop
sub
sar
push
aam
aad
jg
out
cmp
cli
sar
in
arpl
dec
xor
popf
pop
add
in
push
xor
cli
out
scas
xor
inc
cdq
sahf
xor
test
inc
and
lahf
add
push
and
cli
into
jge
jne
shr
fdiv
jg
pop
gs
adc
jg
iret
xchg
jbe
lahf
mov
sub
dec
pop
out
fs
cmc
repz
addr16
inc
jecxz
in
jle
pusha
pop
jmp
jge
pop
test
repnz
push
movs
imul
xchg
adc
mov
jbe
stos
ret
imul
ror
(bad)
jp
cmps
mov
add
sbb
cli
loopne
jno
mov
aas
loope
jno
push
adc
or
rol
pusha
imul
and
(bad)
fbld
sub
mov
add
push
mov
rol
fcomip
or
not
mov
xor
cmp
out
loop
or
test
sbb
push
jg
outs
inc
inc
das
imul
das
xchg
icebp
(bad)
icebp
mov
and
xor
ja
call
dec
js
arpl
repnz
lods
xchg
dec
adc
ja
into
push
inc
sbb
fisttp
nop
(bad)
scas
dec
dec
pop
pop
fiadd
dec
pop
mov
pop
sbb
je
enter
loopne
(bad)
xor
cdq
outs
fidivr
movs
sub
stos
jns
js
aas
xor
mov
mov
xor
shl
inc
fiadd
movs
lea
and
dec
fs
or
(bad)
lock
ins
xchg
sar
pop
or
mov
mov
lds
xchg
in
fbld
xor
popa
ja
xchg
pop
xchg
lahf
jbe
xlat
xlat
dec
push
leave
jp
leave
jle
in
(bad)
loope
inc
test
inc
jo
sbb
mov
test
adc
mov
jl
lahf
outs
xor
xchg
movs
xchg
ja
pop
adc
xchg
and
xlat
xchg
pusha
pop
call
sti
dec
jg
call
xor
inc
jnp
arpl
iret
in
jns
mov
xor
jb
push
xchg
fsubr
jge
pop
test
mov
imul
adc
adc
vminpd
push
lea
lods
rcr
in
int
push
sub
retf
out
add
jnp
or
push
xlat
outs
and
jne
and
pop
pushf
pusha
add
add
hlt
and
push
inc
xchg
sar
jle
enter
lods
pop
dec
fsub
stos
popf
jns
nop
cwde
cmp
daa
sub
push
ror
fidiv
je
nop
out
and
test
stc
nop
rol
sub
push
cmp
loope
sub
fst
fucomip
fld
pop
and
leave
sbb
push
xchg
mov
pop
lock
jge
mov
fisttp
test
jbe
pop
add
fcomp
mov
ins
pop
jmp
xchg
dec
out
loop
jmp
sbb
cs
mov
jbe
sbb
xor
or
mov
pause
not
jl
pop
sti
repnz
jmp
jmp
sbb
mov
sbb
pop
popf
sbb
sbb
bound
mov
(bad)
aas
pop
cdq
je
add
adc
mov
xchg
mov
jmp
in
dec
popa
inc
sub
push
jl
fs
sbb
scas
std
mov
jl
and
cmps
jbe
shr
push
jnp
sbb
sub
jnp
cmp
jg
faddp
cmp
and
mov
call
in
int
les
mov
scas
fild
call
mov
inc
sahf
sub
mov
pop
out
stos
enter
aad
inc
dec
cmp
push
aad
add
imul
pop
mov
idiv
cmp
imul
in
shl
nop
xor
cmp
xor
jmp
mul
adc
mov
popa
nop
jmp
dec
pop
push
cmp
inc
stos
and
shl
cmp
test
mov
mov
loopne
xchg
idiv
mov
fsubr
pop
jmp
mov
outs
adc
push
mov
movs
cwde
aaa
sar
dec
jl
call
and
ds
xchg
jmp
mov
cs
(bad)
pushf
imul
add
push
push
hlt
or
and
imul
mov
out
aam
mov
arpl
cwde
call
jns
xchg
les
cs
push
test
jge
xor
int
(bad)
iret
mov
pop
or
popa
mov
stos
jo
jae
jno
cdq
loopne
shl
xor
jbe
or
inc
xchg
cmp
mov
jmp
sub
mov
xor
loop
fwait
ret
sub
lods
outs
stc
jge
fidivr
ret
inc
inc
pop
inc
fsubr
sbb
sbb
xchg
rol
test
inc
out
les
or
cmps
xlat
add
pop
jecxz
call
or
fidiv
outs
and
push
stos
nop
add
or
cwde
mov
shr
outs
cld
test
cmp
adc
xchg
push
inc
sub
mov
jl
push
fist
sbb
pop
cs
inc
mov
push
or
mov
jne
jae
call
adc
mov
sbb
in
popf
adc
jmp
mov
xlat
pop
jp
cmp
fisttp
cdq
in
cmp
fs
xchg
mov
imul
inc
cld
cmp
test
inc
xor
(bad)
fwait
cmp
out
inc
mov
shl
mov
dec
mov
xor
xor
add
ins
ss
loop
sahf
loopne
in
inc
pop
adc
in
test
(bad)
lods
addr16
cs
ss
mov
out
add
sub
sbb
add
cmp
and
jno
movs
mov
mov
int
test
inc
mov
loopne
adc
pusha
in
and
sub
(bad)
fdiv
clc
loope
(bad)
fist
xlat
pop
shl
movs
mov
fidivr
jmp
dec
call
sbb
jp
movs
lods
push
mov
pop
cmp
imul
div
ins
popf
inc
xor
inc
cmc
push
cmc
pop
cmp
push
fst
enter
jle
cmp
dec
adc
dec
mov
mov
mov
xor
xlat
mov
je
(bad)
mov
aaa
add
sub
xor
sar
iret
inc
push
pushf
xor
add
dec
xor
sbb
dec
repz
js
push
cmps
adc
mov
hlt
and
add
(bad)
or
imul
cld
es
shl
cli
or
xchg
dec
and
cmp
jl
adc
ror
repnz
in
repnz
aaa
(bad)
fwait
add
push
and
xchg
cmp
pop
mov
mov
xchg
xchg
jo
push
scas
fdivr
cmp
sbb
fndisi(8087
leave
pushf
pop
jns
clc
les
xor
leave
mov
xor
cld
jp
jp
jb
xlat
sbb
aas
push
fwait
add
cwde
pop
pop
and
lea
stos
loop
push
or
rcr
push
clc
and
or
lods
dec
clc
daa
pop
adc
nop
cmp
inc
sub
dec
push
dec
sbb
test
in
jbe
pop
test
loop
push
inc
mov
movs
int
mov
movs
pop
pop
cli
inc
sti
retf
frstor
in
sar
mov
push
(bad)
stos
ja
pop
les
lahf
dec
aad
jmp
sbb
mov
je
icebp
push
arpl
sub
add
idiv
pop
pop
inc
dec
mov
mov
sbb
add
and
loope
mov
add
(bad)
mov
lods
cmp
jmp
enter
call
test
js
stos
shr
cmp
cwde
jmp
pop
or
retf
add
fdiv
lock
aam
repz
push
sbb
cmps
das
je
adc
data16
and
pop
jb
loop
test
pop
or
stos
in
ja
push
pop
ret
or
ins
cmp
mov
sbb
lock
mov
xchg
add
std
jg
or
mov
ds
cmps
call
jbe
jg
sbb
mov
and
adc
pusha
mov
mov
sub
(bad)
xor
xchg
neg
ss
iret
xor
mov
push
cmp
fwait
xor
add
das
fisttp
add
test
mov
add
mov
sbb
and
mov
adc
jle
lds
cli
jge
rcl
mov
mov
scas
jns
(bad)
jg
mov
int
pop
push
lahf
mov
cmp
dec
adc
fs
jb
cli
jne
out
sahf
jl
mov
add
cmc
repnz
popf
rcr
and
es
mov
add
push
xchg
fidivr
(bad)
xchg
cs
xor
or
(bad)
outs
ficom
jecxz
inc
movs
neg
or
fnsave
cmps
ds
and
outs
push
adc
stos
jbe
(bad)
mov
stc
jl
test
fsub
jb
adc
inc
adc
ja
shr
in
push
movs
mov
xor
int3
cmp
repz
cmp
pop
adc
dec
shr
or
adc
in
out
dec
inc
js
shl
mov
cld
in
sub
cld
aam
sub
or
mov
xchg
int
out
out
sbb
xchg
cmps
dec
adc
push
adc
mov
jb
out
xor
sbb
dec
dec
cwde
cmp
cld
iret
psubusw
pop
out
mov
cmc
add
dec
cmp
push
shr
mov
repnz
add
xchg
pop
out
push
repz
(bad)
not
sbb
sar
cmp
sbb
push
push
push
test
movs
shl
push
or
pop
xchg
mov
(bad)
lahf
fmul
mov
xor
cs
pop
pop
xlat
inc
idiv
xor
test
or
je
mov
shr
or
xor
sub
mov
mov
inc
into
and
push
retf
push
inc
cs
cli
adc
and
fist
push
inc
daa
push
mov
lods
mov
cmp
add
mov
mov
test
sub
jl
mov
out
int3
fsubr
test
inc
mov
jo
cmps
sbb
cmp
mov
inc
fisttp
cs
xchg
ret
retf
mov
out
jg
lods
ret
sub
(bad)
push
dec
push
jne
mov
dec
or
or
inc
cmc
popa
out
jl
std
pop
or
inc
lea
xor
out
cmp
lock
fucomip
mov
scas
jnp
dec
sbb
(bad)
(bad)
xor
ret
mov
arpl
mov
add
jbe
inc
test
add
mov
retf
and
inc
sbb
adc
mov
into
jnp
inc
xchg
mov
dec
cmp
es
mov
dec
or
mov
and
jnp
xchg
enter
sti
xor
sbb
rol
pop
adc
cmp
stc
mov
shl
shl
mov
(bad)
aaa
push
jle
sub
leave
mov
(bad)
dec
sti
test
mov
stos
and
sar
mov
sub
add
outs
ret
ds
dec
test
xchg
lods
fwait
mov
addr16
sbb
add
jbe
and
push
push
mov
ret
inc
sub
sub
xchg
(bad)
pop
aaa
movs
inc
sbb
xor
es
mov
stos
(bad)
jl
leave
in
test
out
sub
loopne
push
add
out
xor
lahf
and
xchg
fst
or
test
pop
dec
leave
xor
xor
adc
dec
xor
or
fsubrp
inc
mov
jmp
inc
fsub
jle
(bad)
iret
pop
push
shl
dec
mov
cli
xchg
cmc
inc
sahf
popa
push
inc
xchg
adc
je
cmps
cmp
jb
adc
add
add
fiadd
mov
mov
fs
xor
pop
mov
fwait
pop
ss
call
pop
mov
stos
xor
iret
and
jl
call
imul
jle
out
call
xchg
arpl
add
dec
movs
pop
inc
(bad)
push
fsubr
sbb
(bad)
mov
dec
adc
cld
cld
mov
pop
jbe
xchg
sub
bound
std
sbb
out
out
push
sbb
sub
loopne
call
xchg
mov
addr16
cmp
dec
imul
test
cdq
leave
xor
imul
popa
loop
xor
xor
push
test
jmp
jp
lock
cmps
dec
retf
xor
dec
push
pushf
jecxz
mov
gs
cmp
shl
lods
jmp
xchg
xchg
pop
emms
xlat
xchg
into
scas
mov
cmp
cdq
ret
mov
sbb
enter
jb
mov
cmc
jge
fldcw
std
pop
mov
aaa
adc
mov
jmp
shr
sub
dec
stos
dec
daa
std
(bad)
jecxz
movs
sbb
ror
mov
dec
jmp
outs
cmp
and
or
ja
jle
pop
push
lea
rol
mov
loop
clc
push
adc
int3
shl
adc
and
stos
pop
mov
jmp
dec
dec
jb
push
pop
adc
inc
aaa
std
jae
loop
movs
xchg
movs
push
scas
jg
mov
cmp
clc
pop
pop
pop
inc
es
push
sahf
xor
push
cwde
sub
(bad)
out
inc
add
retf
in
xchg
mov
stos
int
popf
stc
mov
into
(bad)
xchg
mov
add
inc
fdiv
ja
loope
stos
lds
xor
inc
mov
dec
out
(bad)
retf
pop
pop
repnz
adc
inc
iret
in
fidiv
loop
ja
pop
sub
ja
(bad)
out
mov
pop
mov
xor
add
test
lock
int
shr
mov
jle
aas
pop
nop
cmp
inc
mov
and
popa
iret
mov
ja
or
xor
dec
pop
daa
imul
and
mov
sub
movs
(bad)
aam
sti
mov
push
mov
mov
outs
adc
adc
mov
mov
xchg
int3
pushf
mov
sbb
and
ret
cmp
scas
out
xor
les
pop
inc
rcl
in
in
fwait
pop
dec
mov
aas
aas
mov
adc
mov
mov
or
jo
ror
lahf
jbe
inc
fiadd
mov
push
fwait
scas
pop
dec
or
arpl
and
nop
push
lods
adc
jno
add
popf
repz
aam
jno
mov
das
std
outs
pop
retf
pop
enter
cdq
push
movs
out
imul
sbb
mov
pop
mov
push
es
ret
ins
(bad)
pop
pusha
push
ror
jle
xor
add
ror
push
pusha
cmp
aas
stos
sahf
sbb
push
or
xchg
pop
lods
add
cdq
jmp
jp
out
fcmovnu
rcl
or
jmp
loope
ficomp
cdq
push
in
adc
mov
mov
(bad)
stc
div
or
adc
aaa
jae
std
mov
cmp
ss
add
dec
adc
xlat
mov
scas
inc
or
(bad)
jne
fist
icebp
dec
leave
push
inc
daa
outs
or
cmp
xchg
pop
fwait
mov
xor
fs
cs
scas
or
xor
cdq
mov
jnp
fcmovbe
sub
xchg
mov
int3
sub
scas
stos
jmp
out
add
or
pop
fmul
add
scas
cmp
pop
les
inc
push
ins
pop
inc
ds
imul
mov
xchg
stc
js
and
test
aam
mov
and
sbb
jbe
mov
stc
movs
mul
retf
and
in
jno
push
mov
pop
jns
push
inc
ret
out
or
xchg
xor
lods
add
mov
(bad)
test
xchg
in
jmp
sbb
adc
jne
icebp
or
ja
push
or
mov
stc
mov
or
(bad)
cdq
add
sub
jae
inc
xchg
adc
fadd
retf
push
and
or
arpl
mov
or
inc
enter
(bad)
mov
in
add
imul
aas
jmp
pop
add
daa
mov
sar
in
xchg
inc
mov
stos
sub
sub
retf
pop
bound
pop
add
add
in
das
xor
jge
mov
ss
popf
add
inc
sub
iret
cmp
popa
or
fs
cld
inc
add
mov
jmp
pushf
mov
and
pusha
lahf
(bad)
mov
sub
xchg
mov
call
imul
inc
pop
mov
cli
(bad)
mov
cmc
mov
in
sub
or
ins
jno
pop
out
xchg
mov
jns
mov
pop
xor
aaa
xor
(bad)
adc
gs
ret
fsub
pop
pop
arpl
pusha
imul
or
pop
jle
mov
pop
dec
inc
mul
mov
arpl
mov
sahf
adc
mov
(bad)
leave
lock
loopne
push
cmp
aas
adc
xor
sbb
mov
sbb
hlt
adc
adc
pop
xor
xor
fprem1
and
sub
mov
cs
mov
leave
xchg
push
or
leave
ror
inc
inc
jg
and
enter
push
cdq
mov
mov
cmp
out
jp
pushf
sub
movs
push
aaa
fld1
inc
out
popf
mov
mov
shr
ja
ins
cdq
cmc
daa
dec
dec
xchg
sub
ret
fldcw
adc
fld
cmps
out
and
sub
addr16
fimul
rcl
ds
test
mov
ffree
sub
sti
jmp
mov
leave
test
(bad)
mov
or
jp
cmps
mov
pop
mov
jb
xor
push
jns
mov
bound
mov
inc
add
(bad)
ss
mov
aas
mov
fdiv
add
lds
jbe
and
xchg
das
mov
test
mov
push
inc
je
ret
(bad)
cmp
sbb
imul
shr
neg
aaa
fsubr
or
xchg
mov
pop
int
in
jns
jg
or
loop
ss
xor
mov
das
push
dec
test
mov
mov
add
or
jmp
pop
loop
std
or
xchg
jmp
push
daa
dec
lahf
cmp
inc
stos
adc
xchg
mov
cwde
test
adc
push
jg
shr
push
mov
in
xchg
fcom
aaa
dec
movs
jo
adc
mov
aam
je
bound
pop
popf
call
sub
push
imul
leave
hlt
adc
lsl
(bad)
lds
outs
aam
repnz
inc
xlat
shr
dec
push
ds
pop
sbb
xlat
frndint
cmp
add
jge
mov
cs
js
push
mov
xchg
sar
popa
test
jmp
xor
inc
sbb
aaa
dec
adc
push
pop
pushf
and
ins
mov
sub
mov
push
sbb
fincstp
mov
mov
add
jl
inc
cmps
pop
mov
push
lods
push
outs
data16
fstp
pop
cmp
(bad)
test
cmp
fcmovbe
push
and
lahf
xor
push
cdq
sbb
inc
cdq
test
dec
sti
sar
dec
jg
jmp
jbe
stos
add
jno
bound
xlat
jl
inc
aad
imul
in
pushf
inc
mov
cmc
imul
call
leave
lock
jg
adc
sub
mov
mov
pop
mov
pop
or
jmp
test
aad
jmp
inc
dec
mov
add
adc
sbb
inc
pop
inc
pop
push
mov
push
jne
jecxz
stos
fisub
arpl
fwait
rol
ins
xor
dec
out
repz
pop
push
adc
retf
dec
ror
movntps
xchg
aam
in
lds
push
or
dec
imul
jmp
mov
inc
int3
inc
pop
xchg
ds
outs
mov
into
pop
inc
in
pop
mov
jne
fdiv
cmp
neg
(bad)
retf
shr
sub
xor
lock
xchg
(bad)
call
xchg
mov
push
cmps
push
int
fs
mov
add
dec
inc
jge
out
add
jmp
call
pop
pop
cmp
into
sub
mov
adc
inc
or
inc
(bad)
loope
loopne
adc
dec
pop
ret
and
jae
std
pop
stos
iret
(bad)
fcomp
mov
aas
sub
mov
jp
imul
arpl
test
call
jp
stc
int
jecxz
and
ins
aam
in
int3
outs
and
cmps
aad
or
mov
xchg
cdq
mov
mov
mov
cli
push
aam
dec
lods
call
icebp
rol
jo
push
pushf
inc
pusha
mov
adc
jg
mov
(bad)
rol
xor
add
cwde
(bad)
push
hlt
(bad)
(bad)
shl
inc
inc
sub
retf
cmp
xchg
mov
rol
mov
aaa
fistp
iret
ss
fcom
ins
ret
push
pop
jmp
mov
mov
adc
inc
outs
pop
leave
push
and
fdivr
das
pop
or
mov
lea
and
sub
mov
ins
icebp
nop
mov
lds
push
fstp
push
call
js
in
in
lea
cmp
lock
adc
shl
fwait
pop
movs
fwait
loope
lods
sub
xchg
mov
int
scas
sbb
enter
fstp
test
sbb
dec
mov
ins
cmc
bound
mov
sbb
and
lahf
jns
and
clc
test
sahf
fidivr
inc
dec
scas
mov
jbe
and
push
fsubr
jb
and
dec
mov
dec
loopne
outs
inc
cmp
and
pop
fimul
fwait
dec
jmp
jle
jbe
fstp
cld
mov
mov
(bad)
push
pop
lods
(bad)
pop
fidiv
stos
pusha
xor
lock
mov
mov
mov
out
pop
out
mov
sbb
xor
scas
sbb
(bad)
enter
mov
sbb
inc
pop
mov
dec
leave
ins
cmc
xchg
jg
test
out
dec
xor
loop
mov
dec
dec
scas
sbb
loopne
aam
std
call
mov
fs
and
dec
sub
cmp
pop
test
pop
cmc
add
pop
(bad)
mov
pop
das
pop
xchg
and
push
adc
cmps
jo
dec
push
data16
jns
or
js
jmp
jae
mov
fxch
pop
mov
ja
add
dec
jge
jecxz
inc
(bad)
push
mov
into
lds
cmps
hlt
mov
dec
out
test
ja
mov
adc
(bad)
mov
arpl
aaa
nop
ret
cld
(bad)
xor
loop
xchg
sahf
not
add
lea
popa
pop
js
pop
enter
(bad)
or
imul
jne
test
jbe
mov
(bad)
lods
int3
add
sbb
cmp
and
dec
dec
nop
cmp
iret
stc
add
ins
mov
fnstsw
out
xchg
pop
xor
sbb
inc
iret
rcl
xchg
jl
in
push
push
enter
frstor
les
rol
and
cmps
mov
dec
push
mov
lods
test
inc
fdivp
jo
xor
out
and
sub
dec
jecxz
cmp
pop
jns
inc
data16
mov
aad
push
imul
add
jne
xor
dec
xchg
test
repnz
sbb
xchg
pop
mov
movs
test
cmp
xor
sub
out
adc
fld
mov
cwde
test
push
xor
(bad)
mov
lock
sub
pop
sbb
lock
clc
add
arpl
push
pop
(bad)
fsub
cwde
stos
iret
xlat
sti
add
lods
add
cmp
js
or
push
stos
fst
sbb
pop
push
xchg
mov
lods
ror
fidivr
outs
jbe
mov
xchg
sti
enter
jne
dec
call
mov
test
xchg
xchg
lea
js
mov
add
and
addr16
jmp
imul
pop
ret
cli
pop
inc
adc
mov
pop
mov
mov
lock
mov
ret
mov
inc
push
scas
push
sub
loope
mov
and
dec
pop
xchg
adc
in
in
jmp
adc
loop
cmp
test
shl
or
mov
fstp
mov
mov
aas
mov
js
popa
lds
xchg
dec
retf
cmc
xchg
imul
and
mov
aad
ret
dec
leave
jne
outs
aam
popf
and
inc
cld
in
cmp
in
or
adc
xor
int3
pop
cmp
fsub
test
out
aad
cmps
cdq
ret
jge
and
jmp
sbb
retf
cmc
popf
sbb
sbb
or
pop
jns
sbb
adc
clc
scas
adc
or
in
push
xchg
add
sbb
push
adc
pop
sbb
pop
cwde
xchg
movs
jmp
jmp
mov
int3
(bad)
xor
fldcw
and
test
data16
sub
mov
loope
ins
(bad)
mov
dec
mov
lods
xlat
pop
add
outs
add
dec
xchg
jmp
and
mov
cmp
aaa
sub
push
pop
arpl
lea
dec
jnp
push
outs
(bad)
das
mov
pop
cmp
sbb
(bad)
mov
push
loope
loopne
popa
stc
inc
mov
add
cwde
in
cmp
dec
xchg
and
jmp
rcr
std
xor
outs
jbe
push
out
sub
inc
or
cmp
mov
cld
jnp
js
fcom
cmps
adc
pop
scas
xchg
fwait
mov
out
push
or
je
sub
leave
add
leave
or
fisub
jbe
xchg
pop
or
mov
lock
sub
mov
dec
jno
loop
xchg
xchg
fnsave
push
lods
dec
setae
inc
sub
add
pop
mov
lea
loope
call
jmp
pop
dec
sub
rol
sub
and
cwde
in
int
push
xchg
in
xor
add
in
xlat
xor
mov
adc
stos
inc
not
pushf
or
mov
movs
push
fidivr
cmp
outs
xor
xchg
inc
popa
dec
in
cmps
stos
xchg
sub
mov
inc
xchg
dec
and
ror
sbb
lahf
xchg
cmps
inc
call
jo
cmc
mov
pop
mov
push
out
sbb
jle
mov
inc
inc
loopne
inc
iret
addr16
fs
movs
xchg
xor
(bad)
dec
cwde
call
lods
jns
pop
(bad)
pop
sub
scas
mov
outs
pushf
inc
out
or
jne
retf
xor
jp
cld
dec
or
or
add
je
in
or
lahf
xor
mov
rcl
or
xchg
push
cmp
lea
mov
ret
movs
out
call
sub
in
outs
ret
xor
dec
mov
cmp
dec
cdq
push
and
adc
ror
fs
call
xor
jo
jle
mov
inc
jae
fldenv
fcom
cmps
mov
add
push
stos
cmp
cmp
out
push
mov
pop
call
hlt
or
fidivr
idiv
jp
fwait
jmp
push
or
in
sbb
cmp
mov
mov
push
sbb
sbb
or
test
popf
and
inc
mov
or
ror
sbb
cwde
add
repz
inc
or
lock
mov
repnz
jne
loop
push
pop
cmp
ss
mov
or
out
test
mov
pop
out
sbb
pop
lds
popa
gs
retf
push
mov
jge
jg
jne
cdq
mov
inc
mov
jne
clc
fxch
fcom
rol
xchg
fidivr
dec
enter
mov
sbb
enter
test
test
dec
sub
ins
or
mov
pushf
sub
push
(bad)
mov
cmc
int3
inc
or
jg
ja
cmp
loop
mov
adc
pushf
xchg
in
xor
adc
adc
xchg
jmp
es
pop
je
xchg
xor
sbb
pusha
bnd
jge
lods
sub
jl
pop
(bad)
mov
cwde
add
xor
and
pop
and
inc
loop
ss
lock
fwait
sahf
mov
pop
lea
adc
xchg
aam
hlt
push
daa
or
loopne
jae
and
or
icebp
xchg
push
mov
adc
nop
fistp
adc
aam
pop
pop
add
xor
lahf
retf
jne
in
xchg
jne
js
adc
(bad)
jnp
mov
in
and
je
fnstenv
addr16
pop
sbb
ja
lahf
rcr
push
(bad)
clc
add
mov
out
sub
push
mov
jo
mov
cld
in
int3
sahf
icebp
mov
push
mov
cmps
jnp
cmp
add
mov
imul
fbstp
mov
or
aaa
mov
adc
jmp
xchg
and
popa
sbb
sbb
jb
and
mov
dec
dec
sub
test
retf
and
minps
fmul
add
mov
test
xchg
dec
iret
sub
jl
adc
psllw
or
iret
add
pop
push
lods
ror
mov
fidiv
lea
mov
pop
lods
jge
ret
push
xor
pop
in
dec
outs
fwait
dec
jge
nop
fcom
inc
or
dec
into
enter
aam
sbb
sub
sar
je
enter
cs
sbb
and
adc
stos
or
repnz
scas
scas
or
icebp
xor
cwde
push
out
push
daa
mov
or
shr
push
mov
inc
in
pushf
sbb
pushf
push
fld
jns
fwait
lods
jmp
push
scas
mov
mov
stc
sbb
jmp
push
cmp
shr
jl
dec
pop
imul
inc
lea
inc
sub
jb
or
fild
daa
jns
int
push
movs
sbb
(bad)
(bad)
outs
and
in
enter
js
aam
xor
dec
and
push
sub
and
xchg
mov
mov
ror
out
xchg
jmp
and
push
aaa
out
inc
repz
fiadd
push
jl
into
xchg
call
adc
sub
jno
mov
ror
lsl
(bad)
repz
out
push
push
sub
xchg
data16
cmp
sub
cmp
in
jp
xchg
push
dec
cmc
pop
in
rcr
jmp
push
mov
repz
test
ror
ja
pop
cwde
call
cwde
scas
xchg
mov
or
pusha
xlat
sub
or
test
imul
mov
fs
stos
cmp
pop
pop
mov
fldcw
in
cmps
or
sar
iret
(bad)
push
push
cmp
mov
test
pop
js
add
cwde
push
stos
or
xor
dec
push
jo
mov
int
pop
pop
add
(bad)
daa
pushf
fwait
jnp
bound
dec
rcr
cmp
xor
mov
stos
(bad)
adc
adc
mov
aas
xor
sbb
cmp
or
sub
aam
pushf
xor
fsub
fst
repnz
xor
cmp
xor
cli
jecxz
dec
fisttp
adc
out
inc
mov
and
in
jns
or
shr
sub
imul
outs
sbb
xor
or
sbb
leave
mov
lods
dec
and
sbb
xor
mov
ins
loop
and
adc
inc
stos
mov
add
xor
adc
jmp
inc
sub
jmp
adc
out
fcomp
fwait
dec
icebp
cmc
adc
add
sbb
add
retf
push
jp
idiv
enter
daa
add
mov
adc
push
pop
pusha
fstp
sub
fimul
cmp
xor
inc
mov
or
xchg
jl
inc
or
push
cmp
fcmovnbe
dec
dec
push
jne
inc
lahf
aad
fsubr
ret
lods
inc
or
imul
call
sub
scas
fsubr
push
xchg
dec
add
xor
mov
mov
pop
xchg
mov
push
mov
imul
inc
xor
xchg
pop
jecxz
push
cdq
adc
fcmovu
into
movs
cdq
dec
aas
mov
ins
mov
movs
sub
in
test
xchg
shl
pop
jg
push
cmps
lods
repnz
(bad)
mov
dec
js
or
test
push
clc
sbb
aaa
popf
sti
inc
aad
sti
inc
frstor
sbb
es
inc
inc
sub
mov
arpl
jecxz
inc
inc
sub
pop
or
and
aas
ja
push
fwait
push
out
and
sub
xor
mov
cli
jne
xor
mov
inc
(bad)
dec
(bad)
sub
clc
inc
sbb
jmp
inc
add
icebp
dec
test
dec
repz
popa
imul
cmp
jns
push
imul
push
inc
inc
inc
aas
jo
cmp
(bad)
cmps
pop
retf
gs
addr16
mov
cmp
mov
mov
inc
push
pop
push
mov
dec
aad
fild
fs
fcomp
retf
push
mov
sub
xchg
pop
push
out
fwait
repnz
clc
dec
xor
lea
jmp
rol
pop
jmp
mov
jg
or
xor
loope
xor
rcr
and
scas
pop
(bad)
sub
popf
call
je
test
in
arpl
xchg
mov
or
addr16
inc
aaa
mov
fwait
outs
cmp
outs
or
in
mov
sub
movs
pop
jb
inc
mov
retf
fwait
inc
rcl
das
ss
dec
jg
fisttp
cmp
mov
outs
push
xchg
mov
js
mov
mov
mov
jbe
idiv
mov
xor
(bad)
stc
xor
es
pusha
push
cmp
xchg
dec
ds
pop
dec
or
pop
add
scas
sbb
gs
xor
push
inc
sub
lea
ja
mov
retf
inc
test
xor
cmp
jnp
cmp
pop
push
retf
sub
repz
into
push
(bad)
aas
inc
dec
imul
mov
int3
adc
cmp
es
mov
leave
dec
icebp
into
mov
sub
clc
dec
nop
loop
jmp
sar
pop
inc
push
loopne
(bad)
mov
repnz
cmc
push
xlat
es
cmps
stos
fild
mov
pop
sub
adc
add
cmps
dec
push
rcl
pusha
pop
ret
or
cmc
fld
adc
and
jecxz
int3
push
jae
adc
push
push
arpl
mov
sub
lock
jns
cmp
fcmovne
(bad)
push
enter
stc
ret
imul
sbb
pop
xchg
cwde
repz
int3
cmp
pop
xchg
pushf
imul
enter
ss
sbb
xor
ret
inc
mov
cmp
gs
push
cld
ficom
test
popa
loope
push
cmc
arpl
jb
or
sub
pop
retf
iret
imul
jle
loope
jl
mov
xchg
add
enter
inc
cmp
and
gs
inc
outs
sbb
fwait
scas
out
cmp
das
inc
dec
jecxz
dec
int3
mov
lods
adc
sub
dec
pusha
shl
mov
push
stos
mov
pop
(bad)
xor
mov
out
xchg
sbb
out
add
add
frstor
aad
or
xchg
test
adc
mov
and
inc
ret
jmp
movs
push
fs
lods
iret
aaa
mov
push
shr
imul
xor
lahf
mov
cmp
outs
dec
cdq
cmp
iret
in
jl
mov
data16
lods
in
pop
jge
cmp
add
imul
adc
test
push
sahf
aam
pop
out
fstp
or
mov
in
add
lods
aad
mov
out
aad
push
hlt
in
adc
cwde
dec
xchg
sub
inc
mov
popf
jecxz
shl
fld
in
jnp
sbb
and
sti
xchg
cmp
in
aas
mov
(bad)
fimul
loope
ja
popf
mov
inc
loop
mov
leave
fadd
ficom
add
sub
(bad)
sti
mov
xchg
xchg
sub
mov
cmp
loop
push
sar
je
sbb
mov
out
xchg
in
inc
mov
push
inc
scas
dec
shr
fnstsw
aad
inc
or
push
add
jae
mov
pop
ret
mov
xor
iret
xor
mov
stos
jle
inc
jmp
cmp
daa
(bad)
push
xchg
adc
(bad)
mov
xchg
jb
pop
rol
jbe
call
mov
push
(bad)
bound
and
mov
sbb
xor
and
imul
jl
mov
in
and
arpl
and
rcl
lahf
into
(bad)
and
lahf
imul
mov
mov
imul
daa
and
pop
mov
xor
rcl
ins
sbb
xchg
gs
dec
aaa
es
setge
enter
cmp
mov
inc
test
mov
cmp
push
test
and
les
retf
ds
add
outs
and
mov
test
sbb
pop
mov
cs
inc
out
mov
jbe
shr
jge
retf
jnp
mov
cs
adc
fdiv
mov
jmp
ins
and
jle
xchg
xchg
gs
loopne
mov
mov
push
xchg
hlt
jmp
xchg
or
jno
imul
xchg
add
mov
retf
fcomip
mov
mov
popf
lds
enterw
and
jnp
jg
jne
xchg
mov
mov
mov
jecxz
shl
cmp
mov
pop
xchg
jge
(bad)
inc
in
push
jae
cmp
mov
fwait
out
lock
nop
imul
das
xchg
inc
inc
aad
aas
xor
ins
cmps
lock
xchg
inc
iret
push
call
push
inc
and
mov
sbb
dec
add
mov
push
mov
inc
sbb
(bad)
push
ds
sar
mov
xor
jae
inc
loopne
add
adc
sbb
(bad)
sub
das
out
ror
outs
hlt
add
inc
hlt
add
add
das
sub
cs
mov
fsub
jb
push
lahf
push
outs
fsub
sbb
ja
outs
out
outs
sbb
ins
hlt
sbb
aas
scas
mov
xchg
dec
mov
jmp
adc
clc
jge
sub
jmp
scas
cdq
or
pushf
adc
dec
rol
push
mov
mov
shr
dec
dec
mov
clc
test
xchg
sahf
xor
xchg
or
xchg
stos
cmp
(bad)
loopne
xchg
pop
mov
sbb
scas
xor
rcr
dec
mov
ja
push
xor
push
lahf
inc
out
je
push
mov
popa
mov
inc
and
and
inc
int
pop
test
daa
mov
mov
inc
xchg
inc
jl
xchg
pusha
movs
sti
xor
movs
xchg
add
(bad)
retf
mov
xor
cmps
xchg
or
loop
xchg
adc
pop
cmps
iret
mov
test
fadd
pop
add
sti
repnz
push
mov
add
outs
mov
xchg
pop
nop
inc
xchg
hlt
jmp
out
xchg
dec
and
sbb
sbb
ret
(bad)
arpl
cs
pop
sub
repz
mov
sub
cmp
pop
jae
in
mov
pop
mov
cmp
pop
in
inc
fwait
jmp
int
mov
enter
or
pushf
(bad)
(bad)
(bad)
xlat
mov
push
sahf
out
push
outs
adc
lea
ss
mov
enter
mov
add
mov
call
icebp
(bad)
call
jp
sub
cld
es
push
and
jns
stos
outs
adc
ds
arpl
adc
fdivrp
mov
pop
neg
test
fsubr
sub
rcl
inc
fstp
ror
jecxz
and
pop
push
pop
lods
jle
scas
aam
(bad)
fnsave
aam
xchg
ja
in
cmps
daa
test
xchg
xor
pop
bound
mov
jecxz
fs
int
xor
cs
mov
test
mov
dec
mov
arpl
xchg
xchg
(bad)
nop
add
sub
mov
out
sub
xchg
imul
push
mov
imul
adc
out
and
out
add
cwde
or
push
pop
imul
out
mov
int
jnp
pop
mov
inc
mov
ja
int3
adc
pop
add
mov
cdq
mov
stos
fdivr
in
inc
retf
leave
sbb
sbb
mov
inc
data16
xor
push
mov
inc
aas
mov
add
mov
mov
mov
xchg
adc
mov
in
aaa
mov
cmp
sub
adc
pop
and
dec
add
jge
outs
sar
sbb
out
add
scas
sbb
lock
push
dec
mov
retf
pop
movs
xor
daa
mov
scas
jge
cmp
(bad)
jmp
je
retf
inc
xchg
movs
ficom
push
sub
pop
pop
and
out
and
pop
pop
add
outs
out
pop
dec
(bad)
call
and
sub
dec
int
pop
clc
test
enter
jne
les
fsubr
add
std
push
cwde
cmp
jb
pop
aaa
outs
fnstcw
sub
jo
scas
popa
sub
stc
xlat
jnp
add
xlat
stos
lock
dec
inc
add
rcl
popf
pop
out
(bad)
(bad)
mov
leave
add
xchg
inc
cmp
or
retf
shl
lods
call
pop
jne
or
std
aad
dec
imul
and
popa
push
cmp
push
dec
adc
and
test
call
jle
(bad)
fdivr
repz
jmp
mov
stos
pop
xchg
out
mov
sbb
mov
dec
test
aad
push
mov
stc
add
fstp
push
je
xchg
fmul
js
mov
jbe
mov
cmp
push
clc
sub
movs
mov
mov
jl
ins
adc
mov
js
dec
jl
push
out
(bad)
aaa
jecxz
xchg
xor
mov
xor
loope
dec
dec
aas
shl
test
xor
fld
xchg
xor
out
clc
aad
inc
and
ins
pop
jp
ret
loopne
mov
test
xchg
and
cmps
movs
fiadd
add
jp
push
sbb
mov
sub
iret
xor
ror
and
push
fild
int3
add
bound
popa
mov
push
int
xchg
(bad)
(bad)
scas
push
rol
and
mov
push
loop
out
psadbw
cmp
add
or
arpl
mov
cmp
fcmovb
jecxz
repz
mov
or
xlat
fisubr
enter
xor
test
mov
arpl
repz
movs
jmp
cmp
pop
push
xchg
sub
push
dec
xchg
xchg
xchg
cmp
mov
popf
pop
rcr
lods
cli
mov
pop
mov
pop
and
dec
dec
mov
out
jo
in
enter
push
test
test
in
in
ins
popf
mov
dec
imul
test
sti
push
mov
in
pop
rcr
nop
dec
fld
pop
fs
push
add
nop
xchg
jns
das
sbb
jns
das
lods
int
lock
or
fninit
gs
lods
ds
mov
int
cld
xchg
lods
lahf
ds
outs
cmp
xor
jmp
das
sub
jne
xchg
gs
nop
pop
xchg
adc
mov
idiv
outs
mov
xor
rcl
jl
rcr
cld
ins
jo
sub
repz
push
push
or
mov
movs
sbb
xor
scas
cmp
stc
test
in
sub
jge
test
popf
in
fistp
mov
cli
xchg
retf
push
sti
pop
cmps
cmp
bswap
add
pop
jne
gs
sahf
xchg
xchg
add
dec
rcl
inc
mov
or
pop
pop
mov
outs
xor
jo
add
or
das
mov
loope
push
add
mov
(bad)
scas
push
jns
jne
movs
ins
dec
stos
adc
adc
cs
aas
aaa
jge
ja
sub
lods
cmp
fisubr
in
sbb
test
sahf
inc
push
sar
jmp
jg
xor
aaa
das
call
fistp
lods
outs
xchg
out
dec
imul
mov
daa
stos
(bad)
sbb
jno
pushf
js
lea
mov
(bad)
jmp
aad
sbb
and
or
aad
mov
cmps
cmc
push
xchg
xor
push
push
lods
and
movs
and
arpl
sbb
mov
retfw
fadd
loopne
mov
jl
lahf
xor
xchg
sar
xchg
test
in
movs
add
xor
xchg
scas
adc
loopne
fbstp
mov
mov
cmp
(bad)
mov
sti
pop
daa
popf
movs
call
or
push
test
(bad)
test
popa
sbb
out
aas
pop
shl
mov
call
sub
sub
int
mov
adc
int3
imul
xchg
mov
loope
mov
enter
pop
xor
leave
mov
cmp
sub
xchg
(bad)
pop
daa
std
dec
jmp
adc
mov
mov
inc
sbb
cmp
fstp
inc
push
mov
int
xor
arpl
mul
pop
dec
pop
and
or
push
cmps
retf
popa
inc
mov
or
je
push
mov
ficomp
sahf
lock
imul
icebp
setg
xchg
mov
ret
scas
movs
mov
fdivr
pop
stc
jl
and
gs
movs
dec
and
pop
scas
add
jge
fwait
lock
repz
jbe
push
xor
jb
sbb
sbb
or
adc
daa
xchg
adc
xchg
sub
les
ins
sbb
dec
xchg
ins
call
mov
lods
test
adc
movs
jmp
adc
or
mov
repz
xor
push
ds
mov
xlat
test
leave
rcr
mov
mov
push
es
add
in
in
das
sets
add
out
xor
sub
shl
xchg
out
push
push
cmps
jp
push
add
nop
xor
mov
push
int3
mov
mov
rcl
and
mov
mov
js
xor
test
mov
mov
adc
add
xor
into
mov
push
cwde
jns
lds
rcr
outs
ins
std
inc
aaa
dec
jmp
dec
mov
push
pop
mov
pop
pop
sar
mov
push
adc
pop
bnd
push
jns
ja
mov
(bad)
cmc
dec
inc
sbb
jge
pop
(bad)
xchg
test
mov
pop
je
int3
dec
lods
mov
xor
add
pushf
mov
mov
ds
aas
xchg
push
and
(bad)
pusha
out
or
addr16
ret
add
(bad)
jmp
rol
lds
push
sbb
pop
(bad)
xchg
and
(bad)
mov
fwait
jae
or
inc
fisubr
fyl2x
sbb
mov
repz
sbb
pop
rcl
adc
xchg
and
push
pop
add
mov
mov
xchg
add
test
sub
jp
mov
pop
push
jmp
repnz
mov
out
mov
iret
fsubrp
pop
ins
sbb
ds
mov
mov
lods
lahf
jns
add
mov
xchg
imul
or
in
cmp
sbb
mov
mov
or
loope
or
jb
fcomp
adc
ficom
jb
pop
mov
nop
mov
push
push
in
shl
adc
mov
in
adc
mov
dec
xchg
sbb
aas
ficom
cwde
daa
or
cmp
jecxz
jmp
imul
sbb
push
xlat
jmp
lock
inc
dec
cmp
jb
add
jl
adc
jmp
jb
jp
or
stos
mov
inc
xchg
aaa
xchg
mov
mov
loope
xor
call
gs
aaa
sub
lock
or
xchg
jg
xchg
cli
xchg
push
sub
sub
mov
add
mov
inc
dec
nop
jmp
aaa
mov
scas
cli
pop
push
jle
sub
pop
in
aad
retf
nop
popf
inc
ror
mov
in
inc
cmp
hlt
xchg
in
jo
in
or
push
pop
sub
clc
push
xchg
adc
test
js
pop
or
ja
call
test
out
xchg
mov
je
xchg
daa
icebp
cli
push
push
shl
adc
fwait
cmp
add
(bad)
jae
popa
clc
dec
int3
mov
adc
aam
test
xchg
xchg
scas
inc
cdq
lods
or
movs
and
mov
mov
(bad)
pop
pop
int
nop
in
and
sbb
mov
imul
mov
test
icebp
xchg
xchg
(bad)
mov
cmovle
cmp
das
fwait
ror
add
loop
lock
jne
stos
sbb
adc
mov
jbe
out
or
jmp
loopne
sub
cld
shl
ficom
mov
adc
sar
adc
mov
hlt
pop
nop
fnstenv
mov
jge
cmp
bound
retf
repz
mov
sbb
mov
cmp
push
neg
xchg
xchg
cmp
repz
sbb
jle
xcrypt-ecb
cmps
dec
loop
or
retf
in
add
stc
mov
sub
shl
lock
les
fwait
push
and
movs
push
adc
or
sbb
push
xchg
(bad)
out
js
mov
popa
cmc
push
and
xchg
jg
xor
sub
jmp
ror
mov
cmp
int
(bad)
pushf
shl
rcl
mov
add
ret
scas
retf
or
ret
xchg
enter
or
mov
ds
jae
pop
std
pop
mov
xchg
adc
fisttp
faddp
pop
std
daa
mov
jae
retf
(bad)
or
mov
imul
(bad)
or
jl
dec
loope
daa
sbb
or
sub
imul
outs
push
jb
xchg
add
ja
or
xor
xor
neg
cmp
sub
sbb
sub
mul
sub
mov
iret
js
dec
jo
inc
lds
push
xor
ror
cmc
(bad)
push
rcl
mov
inc
mov
call
inc
(bad)
mov
sub
in
xchg
and
div
dec
ds
stc
clc
je
addr16
retf
lahf
dec
in
xchg
mov
sahf
popf
pop
idiv
sub
pop
out
sbb
in
adc
xor
call
add
xchg
xchg
adc
lock
mov
dec
das
cmp
adc
inc
ja
in
adc
out
fucompp
(bad)
(bad)
in
xchg
jecxz
sar
nop
mov
jo
ret
jne
jg
and
xor
pop
out
retf
xor
xor
ins
xor
or
popa
mov
jmp
js
cmp
pop
movs
loopne
les
movs
sub
retf
dec
jns
add
mov
sbb
loope
ds
aas
sar
inc
adc
ret
sahf
jne
ins
mov
je
dec
int3
xlat
mov
aas
and
(bad)
lods
jmp
mov
push
sub
cwde
pop
pop
mov
arpl
push
rcr
mov
pusha
in
xchg
jmp
(bad)
sbb
out
cmp
sub
sub
cmps
pop
mov
mov
test
fist
lea
mov
sub
sbb
arpl
mov
sti
or
pop
sbb
pop
sahf
xor
iret
ins
dec
cmps
xor
fs
mov
lock
pop
mov
outs
sbb
push
in
push
lds
mov
xor
retf
jo
add
int
inc
add
rol
or
loop
cld
mov
pop
inc
repz
push
repnz
mov
sub
les
or
rcl
pop
fdivr
jle
pushf
cdq
add
cmp
adc
popa
pop
jg
push
mov
and
adc
lahf
or
push
mov
bound
or
xlat
(bad)
in
inc
sub
cmp
sbb
adc
push
lahf
adc
xor
fcomp
jmp
dec
mov
(bad)
xchg
das
and
jg
(bad)
jb
jmp
mov
dec
mov
iret
data16
shl
in
pop
lock
shl
mov
fisttp
push
adc
xchg
add
outs
or
xchg
push
cmp
imul
mov
es
cmp
xchg
mov
push
loope
pop
(bad)
pop
shl
mov
mov
mov
adc
add
retf
inc
sub
popf
sub
mov
iret
or
loopne
adc
enter
dec
fist
stos
sbb
cmc
inc
cmp
mov
mov
imul
dec
cmps
sub
or
sbb
ss
scas
ins
cmp
(bad)
out
and
xchg
std
or
add
stos
mov
sub
in
cmc
push
aas
push
push
xor
cmp
inc
pop
sbb
mov
dec
fdivr
(bad)
xor
inc
jl
gs
in
mov
cmp
mov
or
jmp
mov
jns
leave
lock
add
and
xchg
push
mov
jnp
push
ds
jbe
fwait
(bad)
pop
push
or
es
push
or
inc
sub
adc
movs
mov
add
aas
add
mov
inc
mov
add
hlt
inc
outs
(bad)
adc
xlat
call
sbb
dec
and
jp
aas
iret
fsub
loopne
aad
mov
pop
dec
xchg
xor
out
(bad)
sub
movs
add
jmp
int
cmps
adc
inc
stos
pop
call
pop
cmp
cmp
scas
cwde
enter
xor
jge
jl
clc
jg
inc
(bad)
lock
mov
add
push
and
cmp
mov
test
in
sub
inc
cs
jbe
jmp
es
and
sub
leave
ins
xor
fist
out
adc
pop
(bad)
in
push
cld
jae
mov
sbb
jno
loop
jne
push
push
not
addr16
shr
pop
jmp
mov
xchg
and
nop
xor
mov
fwait
xchg
div
cdq
inc
sbb
retf
neg
fsubrp
(bad)
std
jne
mov
(bad)
mov
lock
(bad)
int3
push
nop
inc
pusha
sub
std
call
mov
aam
pop
adc
dec
call
test
lods
loopne
adc
or
push
mov
inc
dec
bnd
test
cdq
call
retf
mov
pop
mov
adc
mov
jg
push
or
cmp
jl
xlat
call
rol
mov
push
pop
push
and
mov
mov
mov
jmp
ret
fdiv
shr
adc
das
shr
daa
add
mov
test
sub
mov
imul
mov
sbb
sbb
std
jb
jmp
fdivrp
add
mov
out
sti
std
pop
inc
xchg
pusha
scas
ret
xchg
jg
imul
cli
loope
inc
sub
add
sbb
cmovge
mov
aad
aam
repz
(bad)
pop
test
ins
mov
(bad)
enter
sbb
scas
dec
sub
pop
int3
push
pop
and
loope
mov
cmp
je
loope
rcr
aad
retf
ja
daa
scas
sar
pop
hlt
sbb
das
jno
xor
out
dec
or
int
jno
lahf
nop
outs
xchg
dec
mov
pop
fwait
ss
mov
xchg
addr16
or
iret
imul
xchg
push
and
fimul
(bad)
mov
leave
imul
addr16
cmps
cld
or
aaa
push
cmove
xor
and
sbb
or
mov
inc
pop
mov
sub
xchg
adc
xchg
cmp
ret
mov
mov
dec
loop
jg
xor
mov
addr16
loop
add
dec
push
inc
cmp
leave
push
dec
iret
sub
int3
cmps
fwait
mov
jo
pop
jne
adc
dec
in
mov
sub
retf
jl
stos
aaa
add
in
jne
aaa
xor
pop
js
dec
lods
push
adc
pop
mov
cmp
mov
dec
sbb
neg
test
test
outs
jle
test
jp
pop
and
sub
aas
xor
and
inc
inc
imul
es
sub
push
push
inc
pop
pop
pop
dec
psrlw
je
dec
test
inc
xchg
cdq
mov
aad
ret
idiv
sti
jle
jle
ss
aas
jecxz
sbb
add
pop
mov
stos
mov
dec
retf
rcr
in
or
inc
pop
inc
(bad)
sub
sar
add
mov
push
fnstsw
dec
mov
push
inc
pusha
ret
sub
dec
and
xchg
pop
xchg
push
mov
loopne
push
cs
mov
loope
hlt
cmp
cld
js
in
std
adc
addr16
push
cmps
xchg
outs
pop
mov
dec
popa
jle
arpl
cmp
xchg
adc
mov
dec
lahf
outs
mov
inc
mov
sub
xchg
pop
and
shl
popa
mov
leave
mov
xchg
fs
push
mov
push
das
xor
loop
and
int
dec
sbb
mov
and
fs
fistp
jl
mov
outs
iret
into
(bad)
mov
aad
push
fisubr
jge
je
out
dec
mov
pop
or
dec
aas
mov
std
int
and
icebp
push
scas
pop
push
loop
add
cmps
fist
lods
or
sahf
push
repz
push
test
daa
add
or
mov
push
bound
dec
loopne
and
imul
movs
adc
add
push
jmp
iret
dec
sbb
adc
mov
scas
inc
test
hlt
mov
adc
aas
sar
mov
xchg
arpl
daa
inc
in
xchg
jl
pop
outs
imul
mov
out
and
push
ins
or
push
dec
jp
das
sbb
push
loop
lock
(bad)
jge
push
pop
xor
and
call
jmp
popa
in
cmp
jge
cdq
inc
(bad)
out
push
xlat
dec
ret
aas
imul
jp
fdiv
pop
hlt
xchg
mov
push
ds
shl
outs
inc
xor
push
xchg
xchg
es
jge
scas
sbb
arpl
movs
sub
(bad)
xor
sub
fs
inc
in
call
daa
xor
ror
imul
xor
inc
retf
outs
pop
pop
bswap
mov
lock
xchg
cmp
cmp
jo
les
mov
fst
dec
inc
cdq
pop
scas
mov
xor
inc
mov
aaa
(bad)
stc
inc
rcr
adc
mov
xchg
push
shl
mov
inc
mov
leave
std
jmp
fwait
gs
lods
das
iret
jb
adc
push
in
movs
hlt
and
ins
mov
or
(bad)
mov
jle
pusha
shr
cmp
and
jge
xchg
(bad)
sbb
inc
ror
mov
sub
fld
jne
fisub
adc
hlt
ficom
cmps
call
sub
imul
cmp
int3
xor
sub
dec
rcl
adc
retf
sub
sub
dec
bound
or
push
popa
aad
jo
adc
cdq
out
xchg
test
cmp
push
stc
mov
jmp
fwait
sar
pop
retf
out
mov
xor
into
test
adc
pop
sbb
js
cmp
mov
(bad)
loop
or
jno
les
xor
inc
push
test
and
cld
xor
int3
fsqrt
pop
jmp
in
push
daa
jbe
cs
mov
lock
jo
out
ja
icebp
cmp
jp
es
xlat
inc
(bad)
shl
mov
ror
mov
fld
(bad)
ss
lods
jb
xchg
push
add
es
rcr
xor
xchg
cmp
add
dec
aam
mov
push
mov
call
mov
and
cwde
cmp
fsub
mov
jo
add
int3
leave
es
loope
bnd
iret
mov
xchg
sub
outs
dec
add
cld
stos
jno
arpl
imul
iret
jl
loope
sahf
out
cmp
test
in
pop
dec
(bad)
scas
clc
cmp
popa
sub
into
pop
jne
adc
cmp
lods
cmp
adc
xchg
mov
inc
ins
jo
ret
cmc
leave
and
add
fwait
lods
cmp
out
sub
fcomip
pop
test
out
arpl
loope
cmp
fstp
or
fisub
jno
les
fsub
fldenv
mov
shl
pop
pop
bswap
imul
aas
fstp
adc
jbe
jg
jl
mov
test
cmp
in
pop
je
dec
pop
cmp
xlat
adc
mov
sbb
lea
repnz
and
push
jnp
inc
test
int
dec
into
and
jo
(bad)
(bad)
ins
cmp
add
lahf
adc
dec
jge
aam
pop
jmp
cmps
ret
scas
lds
sbb
in
out
inc
push
jmp
ret
mov
repnz
sub
retf
bound
mov
fdiv
sub
xor
cwde
mov
nop
es
les
shl
and
aad
adc
mov
leave
pop
call
mov
xchg
sbb
adc
ror
ins
pop
call
retf
lock
inc
pusha
int3
adc
in
scas
icebp
bound
or
sti
aas
movs
pusha
inc
mov
and
out
fst
mov
ret
sub
sbb
jno
jecxz
or
fsub
in
add
sbb
ins
push
es
add
pop
cwde
add
popa
push
bound
xor
inc
cwde
cmp
push
push
pop
sbb
fisubr
inc
gs
test
(bad)
mov
dec
pushf
call
mov
mov
lahf
pop
or
dec
jb
sbb
adc
movs
(bad)
pop
loop
sbb
pop
adc
sbb
push
cmc
jo
push
jl
cld
mov
add
xchg
rcl
das
loope
fmulp
jecxz
xchg
bound
push
ss
iret
in
int
add
and
xlat
setns
xchg
rcr
cmp
jns
mov
mov
mov
push
lds
gs
cwde
sbb
out
test
xchg
ror
and
sub
cli
daa
retf
push
mov
in
cmp
fnsave
nop
lea
aam
inc
jecxz
popa
mov
pop
inc
(bad)
adc
ret
adc
scas
mov
add
adc
pop
outs
sbb
inc
adc
pop
sbb
cli
imul
popa
fwait
imul
adc
xchg
and
fxch
(bad)
repz
retf
mov
mov
mov
test
enter
jmp
std
ins
int3
jne
idiv
out
dec
cmps
icebp
sbb
sub
arpl
ret
lea
push
xor
mul
and
nop
out
xlat
dec
or
fucom
shl
(bad)
fldcw
dec
les
mov
sub
mov
out
data16
sub
sbb
fstp
and
adc
mov
ins
pop
aad
sbb
cmp
rcr
out
int3
out
adc
cmp
jmp
push
jb
xchg
pop
test
addr16
xor
adc
into
mov
mov
dec
pop
cmp
xchg
and
xlat
add
push
xor
mov
inc
(bad)
clc
add
push
clc
lds
push
cmp
jno
sub
(bad)
(bad)
jecxz
repz
mov
fstp
sub
adc
pop
movs
dec
mov
mov
pushf
push
inc
sub
in
mov
gs
xchg
in
sub
clc
adc
fs
lahf
push
sub
cmp
int
fst
jno
rcl
inc
popa
sub
cmp
call
outs
push
(bad)
rol
pop
in
into
shl
inc
loope
sub
movs
or
sahf
call
xchg
or
jo
mov
leave
sbb
dec
push
lods
adc
mov
(bad)
cwde
fisubr
(bad)
(bad)
mov
fcom
push
lods
sahf
jno
sbb
and
sbb
xchg
call
nop
pop
push
mov
cmp
loopne
push
mov
or
adc
inc
mov
dec
sub
int
pop
jle
ret
pop
clc
outs
fs
xchg
std
pop
cmp
jns
inc
mov
inc
mov
leave
mov
test
mov
dec
push
bts
mov
sbb
popf
data16
(bad)
xor
sub
mov
mov
lods
pop
movs
adc
movs
in
pop
ret
nop
ins
adc
cmp
and
adc
int
adc
cmp
pop
or
dec
sbb
into
sbb
repz
fs
cmp
es
jne
push
cdq
xor
push
scas
movs
push
jbe
movs
les
sub
jb
and
inc
fcom
jecxz
(bad)
aaa
inc
imul
sub
mov
inc
adc
and
repz
les
(bad)
sbb
stos
xchg
imul
add
ret
inc
jp
out
pop
xlat
loope
mov
into
jecxz
ins
in
pop
push
xor
aad
fcomp
imul
inc
or
jne
pop
jmp
dec
stos
push
or
dec
xchg
leave
push
fmul
mov
and
repnz
dec
cmp
push
mov
aaa
lock
mov
xor
lds
mov
add
pop
or
call
inc
aas
test
cmp
test
imul
xor
add
mov
imul
pop
mov
or
sub
sub
aam
sub
outs
loope
outs
in
dec
test
aam
cdq
nop
push
(bad)
sahf
pop
sbb
and
popf
sub
mov
hlt
es
pusha
arpl
enter
(bad)
cld
mov
mul
imul
mov
xor
adc
pushf
rcr
xchg
add
pop
pop
or
add
inc
pop
popf
mov
in
retf
das
sbb
sub
cli
mov
mov
(bad)
lahf
ror
mov
mov
lea
sbb
shr
test
xlat
sbb
sti
xchg
mov
mov
shr
xchg
push
cmps
sbb
dec
icebp
lods
scas
mov
test
dec
jnp
jnp
sbb
or
and
dec
in
adc
inc
push
jno
bound
jns
aad
jo
xlat
inc
inc
mov
jecxz
jle
loopne
pop
daa
repnz
or
mov
or
fild
sbb
pop
sub
sub
sbb
xchg
push
mov
popa
(bad)
push
add
sbb
imul
pop
dec
(bad)
push
cmc
js
mov
jp
cmc
cwde
push
cdq
fist
ds
lock
mov
push
lds
lahf
(bad)
mov
cli
push
in
rcl
jne
repz
push
loop
xchg
jo
push
mov
jns
test
out
cmps
push
xchg
cmp
pop
mov
jns
ret
mov
out
lahf
cmp
shl
icebp
jno
cmps
mov
jmp
ds
or
cdq
loope
popa
xchg
mov
int
xor
pop
inc
arpl
push
sbb
jns
push
sbb
mov
xor
mov
jecxz
std
xchg
add
test
mov
mov
rcl
sub
ret
imul
icebp
inc
sub
aas
ja
xchg
xor
mov
cld
test
sub
scas
(bad)
xchg
dec
jae
jmp
adc
mov
sub
sub
push
and
push
imul
mov
sub
int3
inc
in
xchg
or
mov
mov
push
inc
call
std
(bad)
inc
in
pop
sub
sbb
mov
nop
stos
sahf
sbb
mov
adc
sbb
inc
pushf
pop
enter
mov
cld
fwait
sbb
movs
nop
pop
jmp
dec
das
adc
jne
inc
movs
sbb
inc
in
inc
call
imul
sub
mul
sub
cmp
js
cmp
xor
mov
inc
dec
jg
iret
lods
push
loopne
xor
outs
cmp
pop
dec
push
add
and
pop
inc
(bad)
and
pop
push
jp
xchg
xchg
iret
add
push
repnz
test
imul
ins
push
mov
fdecstp
add
iret
imul
cmp
xlat
or
or
imul
jmp
jnp
pop
scas
dec
add
loop
ja
sbb
dec
ficomp
ins
inc
add
or
mov
adc
or
stc
in
push
xchg
mov
jmp
sahf
mov
push
ror
aaa
scas
lods
dec
int3
or
or
arpl
xor
arpl
repnz
jns
add
inc
lods
popf
(bad)
loopne
xchg
inc
mov
dec
lods
in
fist
or
(bad)
sbb
outs
xchg
stos
push
sar
mov
mov
sub
mov
int3
stos
mov
sub
popf
cwde
xor
cdq
adc
xchg
mov
repnz
pop
push
inc
shl
jnp
jg
mov
(bad)
repz
fcmovnu
cmp
mov
and
cmp
fnstcw
mov
dec
(bad)
in
jmp
shl
aaa
jno
dec
fs
jl
sub
push
jae
xchg
pusha
sub
sbb
pop
jl
sar
mov
es
repnz
(bad)
jae
fdiv
add
mov
iret
popa
inc
fwait
or
xor
mov
sti
and
ins
lahf
shr
cwde
lods
lods
add
mov
or
dec
add
jnp
push
lods
jmp
test
push
or
jns
sub
xor
push
test
out
cdq
repz
cwde
cmp
jno
push
inc
gs
add
imul
call
jnp
cs
mov
movs
popf
jge
dec
jmp
pop
fdiv
out
call
pop
mov
dec
cli
mov
in
push
fisub
in
stos
retf
fwait
out
mov
mov
je
aad
bound
xor
mov
inc
mov
inc
adc
test
xor
nop
push
adc
dec
mov
aam
jae
cmps
cmc
push
shr
rcr
loopne
test
adc
sub
push
lahf
sub
mov
daa
fwait
inc
push
add
int3
test
jbe
outs
cdq
jle
pop
xchg
iret
(bad)
lahf
repnz
popa
cmp
rcr
mov
lock
shl
loopne
push
(bad)
es
lods
sub
fyl2x
jbe
jae
mov
stos
loope
push
shl
retf
(bad)
sbb
pop
cmp
fwait
sub
pushf
mov
mov
stc
ds
pushf
ins
lods
xor
pop
mov
and
mov
sub
cmp
das
int3
std
xor
cmp
adc
sbb
sub
outs
imul
jo
rol
pop
data16
fprem
pushf
mov
xchg
test
pop
mov
sub
(bad)
and
pop
xchg
stc
ins
icebp
aad
xor
and
loopne
daa
sbb
and
and
pop
movs
push
sti
(bad)
cmp
cs
outs
es
cmp
out
jge
push
call
sbb
sbb
inc
inc
xchg
sub
sbb
out
(bad)
fwait
pop
repz
inc
or
jmp
jle
inc
mov
mov
aaa
ins
xor
inc
push
add
rcr
addr16
in
js
mov
inc
sbb
(bad)
data16
aad
(bad)
scas
movs
adc
dec
lods
js
mov
repnz
dec
mov
jmp
and
xchg
ficomp
es
sahf
imul
aaa
shl
or
xor
jo
(bad)
call
call
daa
pop
xor
pop
mov
scas
sbb
dec
call
stos
rcl
(bad)
cmp
scas
sbb
imul
inc
mov
pushf
ss
push
test
pop
icebp
cmp
add
pop
xor
push
loopne
sbb
mov
adc
(bad)
dec
dec
outs
xor
mov
jmp
ds
sub
pop
icebp
xlat
sub
test
and
add
adc
(bad)
xor
sub
popa
out
cld
test
pop
int3
pop
sub
das
in
stos
mov
lds
xor
test
ja
push
inc
cmps
sub
in
and
sub
gs
xchg
fsubp
js
or
call
inc
dec
and
jmp
(bad)
aam
std
(bad)
shl
add
jbe
lahf
mov
repz
xchg
mov
fs
lods
sbb
test
dec
adc
fnstsw
dec
push
test
cmp
pop
add
shl
test
cld
out
mov
movs
mul
mov
inc
popf
inc
jecxz
loop
aaa
dec
cmp
ins
or
mov
das
into
adc
dec
pop
ja
mov
repz
mov
dec
sbb
push
fld
pop
xlat
and
ja
jge
inc
dec
push
inc
fiadd
or
inc
lahf
mov
mov
addr16
pop
sub
das
pop
and
lahf
cli
add
push
ret
push
mov
movs
add
jmp
cmps
add
fld
in
mov
pop
jno
out
xor
cmps
inc
sub
push
or
loop
jecxz
mov
xor
lahf
jecxz
popa
loop
xchg
shl
xor
in
mov
shl
and
push
nop
repz
repnz
es
cwde
push
mov
in
cmp
mov
pusha
and
(bad)
mov
mov
jecxz
fcomp
fwait
clc
fimul
mov
add
xchg
pop
mov
jne
cmp
lahf
jle
das
or
rol
xor
(bad)
int3
fimul
sbb
ror
stos
push
aaa
cmp
add
cmc
mov
cld
pop
mov
(bad)
fisttp
sahf
je
test
push
and
lods
xor
out
lock
xchg
or
pop
jmp
inc
movs
mov
stos
inc
cmp
ss
scas
xchg
imul
in
loope
es
shl
or
es
dec
pop
icebp
lds
mov
mov
pop
scas
inc
sub
retf
inc
sahf
hlt
test
mov
mov
dec
imul
mov
loop
inc
fdivr
call
pop
mov
into
jns
sbb
add
test
jns
fimul
lea
pop
(bad)
pop
popf
inc
or
loope
jmp
stos
movs
pop
inc
dec
fisttp
sub
push
sub
add
ror
jge
dec
cmps
adc
xor
inc
xchg
and
dec
lods
inc
dec
and
adc
and
and
xor
pop
dec
outs
sub
xor
add
jmp
hlt
neg
fiadd
not
cwde
sub
add
mov
ret
sbb
sub
ins
(bad)
cmp
add
je
sub
adc
test
(bad)
fldl2e
cwde
sub
scas
loop
jge
stos
push
mov
into
adc
sub
repz
test
retf
int3
shr
outs
xor
out
sub
adc
jg
loope
xchg
push
mov
pop
enter
inc
(bad)
outs
cmc
fdivp
mov
jbe
xchg
jmp
shr
(bad)
push
push
adc
mov
push
ror
enter
dec
pop
mov
adc
cmp
pop
jle
stos
xor
jmp
std
pop
sub
(bad)
call
bound
into
adc
rol
imul
inc
in
sub
push
sahf
stos
hlt
je
(bad)
ins
dec
and
ins
cmp
adc
inc
(bad)
repnz
repz
dec
and
lea
mov
xchg
cmps
test
movs
pop
lock
or
pop
ds
inc
idiv
daa
outs
or
outs
adc
cmp
adc
push
stos
and
imul
std
ret
pop
or
es
ins
inc
pop
(bad)
loopne
imul
cmp
mov
jg
pop
dec
fcomp
lds
pop
aaa
shl
sbb
cmc
in
and
adc
push
outs
cmp
cwde
sbb
xchg
pop
mov
cmp
lds
adc
or
xor
mov
in
inc
ret
pop
adc
js
adc
jle
ficom
xchg
adc
dec
sbb
outs
or
fmulp
aas
ja
cmp
add
xlat
xor
imul
inc
mov
test
pop
mov
into
jge
jg
js
mov
mov
dec
sub
xchg
stos
mov
in
sbb
mov
pop
int3
shl
test
inc
pop
sbb
mov
das
jmp
and
push
stos
jecxz
sti
mov
aaa
and
mov
cmp
mov
mov
xchg
add
icebp
sbb
div
inc
in
push
xlat
cmp
or
outs
push
jmp
sbb
mov
adc
jl
mov
cmp
in
ins
popa
sbb
inc
cmp
fbld
xlat
call
xlat
(bad)
jne
pop
and
(bad)
push
call
lahf
xchg
push
sub
jns
push
mov
sub
and
adc
jns
dec
fsub
pop
outs
inc
lahf
rcl
(bad)
adc
mov
mov
xchg
push
push
(bad)
enter
out
ss
xchg
mov
sbb
into
ret
mov
test
xor
fisubr
sub
cmps
cmp
arpl
xchg
xor
ins
(bad)
xor
stos
out
cmp
and
xchg
jns
scas
aas
pop
(bad)
arpl
out
inc
inc
out
push
fwait
aam
cwde
push
push
pop
das
add
xor
js
sub
shl
scas
jae
inc
jle
sbb
push
(bad)
xor
cld
sub
sub
dec
jmp
daa
nop
xor
into
and
push
jmp
fs
xchg
push
sbb
and
out
aad
and
les
(bad)
push
push
iret
(bad)
push
cld
(bad)
enter
mov
mov
dec
arpl
add
add
jo
inc
lods
fwait
lock
mov
movs
mov
sub
mov
addr16
push
sub
shl
fwait
mov
test
or
push
es
xchg
xchg
inc
xchg
pop
iret
inc
int3
xchg
adc
(bad)
int3
ss
jae
xchg
sbb
adc
cdq
xor
call
push
inc
or
xchg
cwde
sbb
call
mov
(bad)
jl
jecxz
aam
push
jno
ins
jno
and
fs
aas
inc
fnstenv
sbb
jecxz
sub
inc
mov
in
mov
mov
adc
(bad)
shr
mov
aas
dec
xchg
mov
pop
jl
xchg
dec
mov
int3
jno
popa
xor
mov
loop
jl
push
mov
xor
add
das
mov
movs
xor
icebp
push
repnz
push
(bad)
movs
sahf
sub
out
dec
stc
cmp
adc
xor
lea
and
scas
sub
nop
jae
rcr
into
lea
mov
jbe
vmwrite
push
jmp
and
push
in
add
in
bound
or
xchg
push
xchg
adc
les
les
stos
mov
outs
jbe
stc
cmp
lock
jae
xchg
dec
xor
shl
sbb
jecxz
rol
popf
cmp
call
inc
ss
pop
repnz
std
inc
stos
aaa
int
scas
in
cmp
cmp
inc
mov
imul
movs
and
and
sbb
iret
sbb
pop
jl
jecxz
fsubp
fwait
mov
adc
fisubr
or
or
ja
(bad)
cli
inc
(bad)
jo
mul
iret
adc
aam
cmps
jmp
movsx
mov
sub
cwd
mov
mov
jp
out
je
jo
dec
(bad)
das
sbb
fxch
lea
shl
dec
mov
xor
outs
or
sbb
pop
or
(bad)
cmc
add
test
and
dec
iret
imul
cmps
cmp
and
dec
shl
cld
mov
loope
out
ret
dec
inc
(bad)
jae
enter
ret
inc
outs
and
mov
xlat
lds
ins
mov
push
push
mov
and
jno
aas
or
adc
xchg
inc
push
int3
cli
pop
mov
sbb
sar
jl
in
sbb
adc
xor
mov
push
jg
jl
and
mov
xchg
xchg
fild
cli
or
stc
cwde
pop
in
xchg
movs
icebp
xchg
or
mov
cmps
sbb
sub
jmp
in
adc
mov
fs
cld
adc
ja
js
inc
cmp
shr
add
jl
push
(bad)
ja
jae
mov
(bad)
imul
and
adc
aam
add
or
jno
(bad)
sub
adc
sub
sub
sub
aaa
mov
mov
sbb
jmp
mov
sbb
push
loopne
mov
loope
test
xor
(bad)
pop
jp
aas
sub
dec
mov
xor
scas
adc
inc
movs
aad
iret
shl
jp
push
scas
jle
je
push
jbe
call
xchg
and
dec
sub
pop
sbb
repnz
mov
inc
adc
shl
leave
mov
call
call
pmovmskb
enter
xchg
pusha
push
and
sbb
int
shl
sub
jnp
ins
add
jnp
pop
push
pop
sub
into
ins
jge
add
cmc
call
or
cli
inc
dec
dec
sti
inc
(bad)
mov
pop
push
add
mov
and
push
cmp
imul
xor
jb
cmp
mov
imul
mov
int3
in
push
adc
in
scas
movs
inc
cmps
pop
jecxz
jecxz
add
mov
xchg
xchg
push
aas
shl
jnp
pop
jg
out
aas
movs
dec
aam
repz
fcmovb
xchg
in
sub
es
ins
out
jecxz
retf
cmps
iret
adc
inc
pop
pop
jo
push
bound
add
pmaxub
or
pushf
mov
iret
movs
fwait
ss
ret
push
or
arpl
ja
inc
fs
outs
fsub
imul
mov
dec
outs
jmp
lods
icebp
mov
mov
jbe
cdq
out
jnp
mov
fadd
mov
mov
arpl
outs
mov
sbb
sub
push
sub
popf
xor
scas
cmps
lods
jmp
test
scas
add
cmp
add
out
(bad)
cdq
test
ins
dec
mov
bound
or
ret
into
cmp
dec
(bad)
mov
daa
sub
mov
call
leave
add
ja
lds
add
sbb
nop
in
adc
xchg
cdq
inc
mov
cmps
fadd
in
add
icebp
push
cs
imul
xchg
jns
out
sub
mov
enter
sar
int
(bad)
les
pushf
mov
push
add
and
add
setae
mov
fcom
inc
dec
xchg
sub
lods
push
jb
mov
cmpxchg8b
test
dec
or
(bad)
stc
cmp
sbb
xlat
xor
and
sub
pop
ins
pop
(bad)
repnz
sub
cs
outs
add
arpl
inc
repnz
das
xor
mov
dec
add
out
sub
jge
ret
aad
xchg
mov
(bad)
mov
ficomp
sub
lock
outs
dec
fs
mov
jae
out
std
ins
add
jno
daa
ss
(bad)
and
mov
popf
(bad)
jmp
add
aad
in
cmc
sub
fstp
xor
rcr
push
pushf
mov
mov
mov
push
(bad)
ror
dec
jbe
sub
fwait
(bad)
mov
div
mov
pop
mov
and
or
mov
ret
sub
sub
out
or
lea
repz
cmp
dec
arpl
jmp
cmp
xlat
dec
aam
mov
push
shl
jno
and
ret
jns
push
push
int3
(bad)
int
cld
test
leave
mov
dec
mov
jmp
jmp
inc
jbe
push
push
call
push
call
mov
and
movs
adc
stc
imul
int3
out
inc
mov
cmp
and
int3
ret
mov
jmp
mov
inc
arpl
in
mov
push
jbe
ss
sar
sbb
push
adc
sbb
hlt
pop
push
lods
out
mov
ret
outs
sar
and
mov
inc
or
push
add
mov
adc
ds
sbb
jae
xlat
dec
or
jno
mov
jae
stc
daa
adc
mov
sub
ins
es
pop
out
call
out
pop
psadbw
push
mov
retf
imul
imul
inc
daa
dec
rcl
mov
cdq
std
lea
mov
out
movs
adc
fs
xchg
outs
out
stos
test
push
add
shl
sbb
loop
ret
dec
mov
loop
cmp
adc
arpl
mov
lods
cmp
sar
test
sbb
test
sbb
push
int
iret
(bad)
mov
fdivr
and
add
sar
ins
jae
jle
inc
fstp
outs
popf
xchg
(bad)
loope
cmp
aas
in
xchg
mov
mov
cmps
int
je
push
and
in
imul
xor
stos
pop
inc
(bad)
rcl
fcom
push
jmp
lds
dec
arpl
repnz
ds
addr16
push
pop
test
icebp
pop
mov
ins
push
pop
sub
lods
adc
pushf
mov
and
imul
ss
sti
cmp
inc
in
jno
loop
(bad)
adc
xor
mov
or
pop
loope
jno
mov
dec
in
dec
mov
test
sub
xor
jae
into
push
enter
dec
cmp
adc
out
jmp
jp
js
cmp
aaa
daa
mov
out
ret
or
cmp
les
test
scas
mov
mov
push
in
mov
stos
sbb
jne
or
jge
push
imul
mov
pop
ret
dec
jmp
mov
jl
pop
xor
push
nop
bound
retf
dec
sti
pop
push
cdq
mov
add
ds
jl
cmps
mov
bswap
daa
ds
push
pushf
in
outs
inc
pusha
ja
scas
(bad)
push
pop
pop
es
cmc
test
xchg
retf
stc
pop
inc
mov
cmp
mov
dec
into
push
mov
mov
test
inc
call
rol
inc
jp
popf
mov
lds
mov
cwde
jp
add
lock
push
dec
mov
dec
cmp
int3
cmp
nop
adc
sub
out
push
ds
push
add
pop
dec
sbb
sbb
(bad)
ja
adc
push
and
(bad)
out
dec
sub
daa
es
and
cmp
test
int3
cdq
test
jmp
mov
fcmovbe
std
movs
push
mov
shl
out
push
ret
jg
jb
cmp
movs
lock
adc
cmps
or
sub
cmp
add
bound
nop
fsubr
add
into
add
stos
test
cld
mov
cmps
add
fs
rol
dec
shr
retf
daa
loop
(bad)
dec
lods
inc
loope
jno
sbb
sub
push
test
mov
push
mov
jge
lahf
inc
jb
or
adc
adc
out
cmp
mov
sub
or
xlat
pushf
xchg
push
ins
and
int
add
mov
ins
inc
cwde
sub
(bad)
fcom
hlt
pusha
scas
int3
or
(bad)
neg
inc
adc
inc
loopne
inc
rcl
sub
fst
fs
clc
pusha
and
sub
cli
cmp
push
jns
je
sar
add
xor
jmp
shl
sar
push
jae
sub
ffree
cmp
jecxz
push
mov
enter
sbb
mov
jg
scas
les
repz
xor
jb
cwde
lock
fcmovb
or
pop
cmps
in
retf
jns
and
shl
xor
stos
out
sbb
or
xchg
hlt
in
jo
sub
mov
js
sbb
push
(bad)
(bad)
inc
or
jmp
cmps
adc
aas
mov
aad
sub
into
and
ror
mov
out
sahf
das
(bad)
cdq
out
adc
retf
push
ins
push
add
inc
sahf
popa
inc
ds
mov
mov
dec
cmp
cmp
pushf
daa
pusha
out
out
and
hlt
shl
cmp
sub
outs
out
mov
mov
ror
sub
test
push
jmp
pop
inc
pusha
(bad)
mov
or
or
xchg
or
sub
cmps
or
movntps
jge
dec
mov
mov
or
mov
and
mov
sbb
pushf
jae
popa
sbb
inc
lock
lds
pushf
sahf
and
xchg
out
inc
out
ins
bound
jg
xor
inc
and
adc
jl
inc
push
retf
clc
stc
sbb
push
ins
stc
mov
or
clc
div
jb
cmp
mov
lahf
(bad)
(bad)
mov
call
xor
jg
jge
fadd
sub
cmp
icebp
mov
in
mov
loope
out
fst
fst
pop
test
push
mov
xor
push
mov
mov
outs
jp
loop
inc
mov
bound
imul
test
cld
call
ret
js
or
sbb
aas
cs
or
or
mov
dec
repz
mov
xchg
jecxz
cld
std
cmp
cli
in
movs
cmps
int
jnp
out
jmp
int3
fs
jns
hlt
fst
addr16
cwde
mov
pop
mov
das
xchg
fs
fcomp
dec
fild
cmp
xchg
dec
pop
add
(bad)
lock
repnz
inc
dec
sbb
cdq
neg
scas
pop
icebp
dec
dec
fs
mov
popf
repnz
push
or
(bad)
jge
aaa
rcr
loopne
cs
addr16
cld
jae
inc
dec
out
repnz
aam
sbb
xlat
sbb
push
or
les
push
cdq
mov
aas
add
rcr
sub
test
and
push
retf
mov
rcl
pavgw
popa
aas
push
test
repz
xor
bound
inc
repz
or
dec
ja
jb
dec
aad
mov
popf
ret
dec
int
add
lds
push
test
fiadd
adc
dec
test
shr
scas
cmp
mov
add
gs
push
mov
dec
cdq
jno
mov
mov
fs
sub
sbb
pop
or
push
mov
es
bound
dec
pop
dec
popf
add
and
cwde
dec
push
lods
(bad)
(bad)
jp
(bad)
call
popf
add
scas
cld
in
nop
loop
imul
sub
cmp
std
sbb
mov
fs
cdq
in
bound
cmp
mov
leave
bnd
jecxz
pop
xor
jbe
jbe
pusha
fwait
jp
pop
mov
xor
and
adc
fwait
dec
retf
xor
ror
push
cs
call
mov
jle
pop
mov
sub
or
into
popf
pusha
int3
stc
(bad)
jmp
into
lods
mov
push
(bad)
xor
dec
aas
div
popa
add
shl
mov
cs
test
(bad)
in
adc
aas
popa
mov
(bad)
(bad)
idiv
or
inc
scas
lods
pop
mov
mov
sar
pop
sar
outs
xchg
sub
jmp
retf
std
dec
sub
(bad)
hlt
push
xchg
sub
or
push
sahf
mov
add
jp
jb
dec
loop
in
mov
push
imul
push
dec
or
(bad)
cdq
fscale
and
xor
fbstp
mov
mov
dec
jnp
inc
stos
mov
test
xor
sub
and
jmp
pop
pop
cmps
ficomp
in
add
jmp
add
xlat
pop
pop
sbb
or
sub
ret
outs
mov
jecxz
fdiv
add
xchg
ins
pop
outs
mov
aaa
mov
mov
ins
shr
adc
jno
inc
sbb
push
xor
and
addr16
inc
repz
mov
mov
xor
scas
add
cmp
sbb
stos
pop
cmp
mov
jbe
dec
leave
gs
popf
pop
(bad)
cdq
jo
sub
inc
mov
jns
jmp
lock
dec
enter
pop
pop
mov
jbe
or
call
adc
icebp
std
and
xor
not
push
loop
add
add
cld
scas
push
dec
cmc
pop
pop
ins
out
xchg
cmp
lahf
cmp
jno
inc
nop
jle
xor
mov
repz
in
mov
push
fwait
stos
mov
pop
mov
mov
dec
adc
(bad)
and
cmp
outs
lods
mov
add
loop
pop
addr16
or
out
cmps
sub
les
loopne
fmul
inc
add
(bad)
mov
mov
sbb
mov
sub
xchg
dec
xor
add
mov
repnz
mov
cmp
dec
push
pop
xchg
xchg
add
inc
std
and
fist
push
and
fist
xor
test
pop
call
mov
cdq
jo
cld
std
out
and
jmp
dec
xor
out
dec
pop
cmp
and
and
fsubr
push
movs
call
cmps
aad
xor
push
xchg
pusha
out
movs
or
data16
cmp
retf
pop
(bad)
je
(bad)
add
out
mov
out
adc
iret
fs
add
in
mov
pop
test
push
in
popf
idiv
mov
fild
imul
popf
pop
fild
mov
push
nop
lods
adc
repz
adc
arpl
adc
stos
popf
imul
imul
sti
call
stos
stc
xchg
dec
dec
or
cmp
aas
stos
sbb
ficom
das
ror
aad
aad
test
popf
sub
ins
mov
sub
jne
jo
mov
xor
dec
test
(bad)
es
repz
in
shl
pop
dec
mov
jecxz
loop
inc
ins
jns
pusha
mov
mov
sbb
xor
leave
push
jge
or
outs
(bad)
outs
loop
jge
adc
jne
xlat
sub
sbb
and
sahf
add
icebp
imul
jnp
in
fistp
cmp
sbb
mov
push
cmps
pop
xor
add
pushf
add
jle
idiv
into
cmp
pop
repz
iret
pusha
fucomp
add
scas
addr16
and
mov
jo
cmc
cmp
push
div
push
xor
pop
(bad)
dec
aas
cld
lock
sar
aad
addr16
cmp
xor
jnp
in
jecxz
push
mov
fadd
inc
mov
cs
pop
(bad)
mov
sub
ins
loopne
jle
cli
clc
data16
arpl
ins
into
es
fist
dec
test
xor
dec
imul
add
xchg
pop
mov
stos
scas
mov
je
in
sub
dec
les
push
mov
pop
fld
or
adc
mov
shr
jmp
fwait
mov
mov
xor
jg
lock
sub
jge
jmp
ficom
call
adc
sbb
inc
sbb
les
aam
cli
imul
push
lods
inc
xchg
mov
repnz
lock
mov
fdivr
xor
test
add
ins
mov
mov
test
pop
pop
jecxz
pop
fild
add
push
loop
loope
(bad)
or
jg
imul
dec
dec
xchg
out
xor
(bad)
xchg
int3
ins
cmc
jge
mov
xchg
pusha
sbb
cmps
adc
sahf
dec
js
mov
inc
mov
add
inc
jg
dec
xor
sbb
ins
jnp
hlt
adc
push
hlt
jns
add
out
pop
inc
nop
mov
in
mov
(bad)
rol
inc
enter
neg
ja
mov
xchg
js
icebp
dec
cmp
outs
jp
aam
or
jae
or
push
fnstsw
pavgb
jnp
push
retf
aam
xchg
jmp
lods
add
aad
cmp
es
mov
icebp
jnp
or
push
jmp
ins
inc
or
ss
sahf
mov
scas
dec
sub
fld
(bad)
push
mov
adc
or
mov
(bad)
aaa
mov
das
and
mov
out
and
lahf
xor
div
xchg
adc
ds
mov
in
pop
push
jne
mov
jo
call
jmp
call
ds
and
inc
and
loopne
shl
add
push
mov
xchg
cmps
stos
xor
out
push
pop
repnz
repnz
or
jge
adc
xchg
or
inc
repnz
dec
pop
cmp
aaa
adc
mov
dec
inc
shr
das
xchg
push
out
xchg
(bad)
mov
cmp
jbe
jp
pop
inc
std
and
paddd
jge
cli
xor
or
dec
aas
xchg
in
pop
ret
mov
mov
add
in
shl
dec
push
inc
xchg
jo
stos
add
mov
adc
mov
dec
add
xchg
jo
xchg
xchg
dec
lds
cmp
retf
mov
or
pushf
idiv
xor
or
hlt
int3
push
mov
ins
aad
lock
cmps
dec
push
sub
push
aaa
jmp
fild
push
push
pop
xchg
push
fwait
jle
jb
sbb
nop
pop
repz
call
mov
xchg
xlat
push
arpl
jb
test
mov
data16
xor
lock
test
pop
pop
dec
ret
inc
das
and
outs
(bad)
idiv
pop
stos
aas
nop
mov
add
cmp
loop
cld
fisubr
cmp
popa
sub
cmp
or
push
in
dec
sbb
mov
(bad)
cmp
jo
mov
mov
add
jl
das
clc
jecxz
cli
inc
push
daa
sbb
jg
and
mov
cmc
push
aam
cmps
jmp
fisub
scas
dec
sub
push
jmp
stos
add
fisub
inc
push
ins
aas
leave
les
mov
leave
les
sub
cmps
sub
xor
(bad)
jecxz
push
pop
xchg
xchg
adc
pushf
xor
lahf
movs
sub
std
pop
out
pop
ja
cmps
js
mov
xchg
icebp
jo
into
fwait
push
(bad)
inc
jae
add
mov
adc
clc
(bad)
xchg
xchg
cli
loope
jno
adc
fnstsw
cli
test
mov
fiadd
cmp
lods
aad
push
in
lahf
stos
retf
out
cmp
sub
adc
push
into
loop
movs
ja
sar
rcr
cdq
lods
jo
mov
sbb
pop
icebp
mov
mov
aaa
xor
loopne
(bad)
jns
mov
pop
gs
xor
add
mov
inc
push
aaa
push
pop
shl
test
loop
pop
cmp
push
and
cmp
(bad)
dec
xor
mov
call
dec
xor
and
or
mov
inc
out
push
jbe
lods
mov
call
mov
mov
mov
out
dec
ret
repnz
bound
repz
js
aad
pop
mov
not
in
or
dec
and
adc
mov
scas
popf
gs
dec
fnstenv
not
cmp
clc
cmp
push
out
add
adc
xor
sbb
shr
jns
je
je
adc
sub
fbld
cwde
lds
movs
xor
out
fnsave
test
stos
loopne
add
fadd
jb
repnz
(bad)
popa
nop
dec
leave
ss
test
div
popf
jmp
lods
scas
mov
mov
and
cmp
call
xlat
mov
cmp
jl
push
in
test
sahf
call
and
add
push
pop
inc
cmp
cwde
repnz
in
pop
push
sbb
rcl
aad
lods
or
pop
pusha
pusha
nop
mov
dec
fs
jae
imul
fidiv
and
imul
dec
adc
movs
jns
mov
xchg
imul
lock
mov
xchg
mov
pop
ret
and
cs
sbb
js
loop
jb
add
sahf
or
push
into
mov
addr16
cmp
mov
xchg
outs
pop
les
and
enter
stos
inc
adc
in
dec
jp
std
fistp
mov
dec
mov
xchg
and
xchg
cmp
fidiv
iret
callw
pop
adc
and
inc
addr16
je
dec
xlat
mov
pop
push
and
add
ror
call
movs
es
push
daa
sbb
mov
add
sub
pop
fild
iret
xor
ins
(bad)
inc
pushf
jnp
test
sub
movs
xor
push
ss
mov
es
push
sub
jge
and
call
call
jns
fstp
sti
add
or
loop
jno
jecxz
sbb
fmulp
cli
mov
std
pop
fs
cs
or
adc
(bad)
ret
push
je
ror
jno
imul
pop
inc
jbe
push
mov
in
out
mov
out
inc
dec
mov
call
and
sbb
test
pop
or
out
je
pushf
push
pushf
cdq
pop
movs
mov
mov
and
xlat
add
cld
and
push
add
and
movs
xchg
or
jae
ds
in
ins
dec
and
push
loop
or
pop
scas
(bad)
fist
nop
dec
push
lahf
cmp
and
mov
adc
mov
sar
pop
fwait
adc
push
imul
fnstcw
test
or
sub
jnp
sti
xchg
adc
inc
stos
mov
or
mov
jnp
in
in
enter
adc
dec
mov
jb
sub
sar
jmp
pop
lods
inc
sbb
jb
mov
popa
jge
sub
cmp
das
out
sub
mov
repz
test
aad
mov
push
test
lods
add
hlt
xchg
push
das
push
inc
leave
dec
test
or
mov
movs
test
repz
dec
pushf
das
shl
mov
xchg
rcr
loopne
jle
std
loop
retf
cmp
or
pop
adc
sbb
jge
add
pusha
jl
mov
cmps
repz
pop
in
cli
test
lods
jmp
ja
inc
daa
mov
call
adc
in
sub
outs
arpl
or
loopne
outs
inc
movs
sub
scas
mov
xchg
retf
mov
xor
out
jecxz
inc
and
push
xor
int
adc
ins
fwait
mov
das
mov
lods
fs
iret
lds
into
pop
sbb
in
inc
inc
nop
xchg
or
or
push
and
dec
call
mov
pop
ficom
xchg
test
or
lods
pop
(bad)
(bad)
sbb
test
xchg
imul
retf
or
sar
fstp
sub
xor
shl
mov
sbb
cld
add
xchg
retf
or
js
jecxz
adc
ins
sar
sub
fwait
jbe
mov
push
jmp
bound
shl
das
adc
call
jge
push
pop
lods
ret
jle
and
cmp
call
int3
into
or
sti
or
mov
mov
push
cmp
sar
push
push
and
pop
sti
fld
dec
adc
sub
cs
cmps
fadd
aaa
sub
pop
mov
xchg
cmp
push
es
cmc
mov
cmp
test
gs
xor
mov
inc
cmp
dec
mov
and
cmp
outs
je
adc
int3
xchg
and
mov
retf
cmp
cmovle
ins
js
xchg
imul
jmp
ret
cmp
cdq
dec
sbb
jge
xchg
ret
mov
repz
push
add
mov
pop
shl
lds
mov
retf
aaa
adc
or
fidiv
out
clc
adc
clc
outs
jp
jne
and
dec
pop
rol
sar
(bad)
jno
ins
or
(bad)
and
push
int
pop
pop
jne
cdq
mov
cwde
das
je
mov
setae
cmp
sub
cs
test
int3
push
pop
lock
push
ret
mov
pop
popa
lock
inc
loop
mov
imul
lods
xchg
leave
cmps
pop
out
cmps
jno
fild
mov
add
ins
mov
inc
dec
mov
push
aam
popa
movs
fcmovnbe
test
shr
mov
push
xlat
adc
mov
xor
sti
(bad)
and
fdivr
iret
cld
retf
aad
xor
and
cli
int
mov
add
sub
sti
jno
xchg
cmp
mov
dec
pop
in
push
fs
fcomp
cmps
loopne
shl
rcl
xor
test
aad
inc
fdivr
outs
and
imul
loopne
jg
pop
xor
push
inc
stos
je
sbb
dec
inc
jb
xchg
pop
out
mov
lahf
loop
pushf
pop
das
fcmovnb
cmp
lods
xchg
(bad)
je
setp
add
inc
std
jl
add
stos
loop
dec
ret
sti
lods
push
in
xor
in
jg
ss
adc
shl
xlat
scas
cli
clc
into
sub
call
fist
cmps
pcmpgtb
jne
or
mov
adc
std
jl
repz
push
loope
jb
retf
fsub
call
and
stos
dec
neg
sub
sbb
bound
test
pop
mov
xchg
xlat
lahf
scas
mov
add
pop
mov
add
or
pushf
mov
jne
push
mov
call
adc
arpl
loopne
in
cdq
aaa
lds
ror
dec
mov
les
jge
mov
xchg
mul
or
loop
dec
test
inc
mov
push
out
sbb
lds
aas
sub
or
ja
or
and
xchg
out
int
cmp
mov
mov
jge
in
lods
nop
ss
inc
loop
pop
js
mov
loope
test
pop
int
and
xor
(bad)
fcmove
test
frstor
xor
mov
adc
cld
cmp
xchg
retf
call
shl
movs
inc
xchg
add
jecxz
inc
xlat
dec
(bad)
sub
mov
or
jnp
imul
sbb
push
dec
fist
cmp
adc
fistp
xor
or
stos
mov
mov
int3
or
jae
fiadd
cmps
pop
xchg
inc
(bad)
jae
xchg
sbb
call
and
stos
js
sub
int
sbb
fwait
outs
sbb
push
cmps
jecxz
pop
xchg
divps
fild
jle
pop
mov
add
push
xor
dec
or
(bad)
mov
inc
and
data16
jg
ja
daa
cmp
cmp
inc
dec
(bad)
push
cmp
js
(bad)
dec
mov
add
jg
or
jnp
icebp
sbb
or
mov
test
dec
ja
fistp
(bad)
mov
xchg
sbb
cli
imul
lahf
bound
dec
sbb
cmp
xor
fs
mov
push
sub
dec
mul
aaa
loopne
std
mov
neg
push
das
pop
pop
mov
iret
fisttp
daa
adc
mov
ret
nop
imul
inc
xor
out
ins
inc
mov
fcmovbe
push
into
mov
mov
out
lods
aaa
push
or
pop
adc
xor
ret
es
(bad)
not
mov
push
jge
or
ds
test
mov
inc
sbb
fcomp
push
mov
pop
sub
pop
test
fidivr
xchg
push
pusha
jbe
inc
cwde
fld
out
js
ffree
push
out
retf
ss
pop
fst
hlt
pop
(bad)
jmp
xlat
pop
(bad)
clc
movs
adc
and
push
or
mov
ins
das
xchg
pusha
mov
cmp
pop
mov
fbld
xchg
mov
jmp
js
add
push
std
or
or
hlt
pop
hlt
mov
and
test
mov
retf
jns
loopne
mov
movs
aad
xor
inc
jmp
and
ins
push
ins
ret
push
(bad)
mov
(bad)
mov
inc
dec
cmp
in
aas
sub
test
shl
mov
out
sub
mov
mov
test
xchg
and
mov
xchg
jb
das
push
push
sub
sbb
hlt
push
mov
call
int3
fldenv
(bad)
pop
xchg
mov
pop
mov
(bad)
pusha
mov
jmp
sub
scas
push
or
add
xchg
je
adc
jg
mov
sub
adc
icebp
pop
cmp
or
jp
int
stos
rol
ret
aas
aas
out
inc
add
das
mov
mov
movs
xor
push
lods
sub
xor
lahf
xchg
fadd
push
and
lock
arpl
sub
loopne
sete
push
sbb
gs
repz
xchg
aaa
bound
add
ret
int
sub
out
xchg
xchg
sub
lds
sub
jb
retf
(bad)
dec
or
mov
shr
pushw
cmps
or
mov
add
mov
lds
push
sub
adc
iret
pop
repz
aam
or
fiadd
dec
push
mov
xchg
mov
inc
sbb
lods
mov
push
std
cs
pusha
stos
mov
xchg
retf
out
cmp
jns
push
sbb
imul
jmp
sbb
cmps
mov
xor
xor
loop
push
xor
inc
enter
sub
mov
xor
cmc
in
sbb
push
stos
xchg
mov
sbb
movs
and
fistp
inc
jne
repnz
mov
inc
sbb
call
jg
jo
push
or
jg
dec
(bad)
mov
adc
push
pop
push
arpl
pusha
mov
xlat
xlat
mov
inc
mov
mov
mov
aas
imul
retf
std
in
test
jb
inc
cdq
push
int3
jbe
and
sahf
cdq
pop
lea
and
adc
xor
movs
(bad)
push
sti
test
jle
xor
leave
in
inc
(bad)
mov
inc
push
sbb
adc
mov
or
pop
mov
jmp
pop
inc
jle
pop
movs
xchg
cmc
retf
stos
add
dec
movs
(bad)
test
pop
sub
mov
arpl
mov
lds
dec
dec
rcr
sbb
mov
leave
lahf
sub
popf
ret
test
loope
xor
push
dec
call
icebp
mov
inc
dec
mov
mov
mov
popf
ret
mov
xor
adc
xchg
lods
out
dec
adc
imul
outs
fs
inc
mov
mov
push
lods
shl
pop
fnstenv
inc
jbe
(bad)
xchg
fisttp
(bad)
cwde
cdq
nop
sbb
inc
iret
mov
mov
(bad)
js
push
movs
test
hlt
mov
leave
je
repnz
inc
int3
nop
pushf
out
repnz
aas
sub
inc
mov
or
jle
push
and
dec
xchg
adc
jns
dec
dec
fist
sub
lds
neg
gs
mov
in
cwde
pushf
out
add
pop
scas
cmp
and
jmp
pop
mov
sbb
jmp
sti
nop
mov
movs
inc
addr16
int3
loop
bound
push
inc
(bad)
into
mov
imul
sub
ja
mov
mov
les
es
in
sub
mov
add
xor
jmp
jle
(bad)
call
loopne
inc
xchg
into
xor
movs
dec
(bad)
leave
adc
lea
enter
data16
sbb
(bad)
into
dec
xor
enter
(bad)
push
mov
xchg
pop
dec
mov
add
cmp
loop
push
sub
in
fnstcw
inc
ss
pop
sbb
sbb
in
inc
imul
js
int3
fpatan
mov
mov
adc
imul
lahf
jle
add
push
xchg
push
fbstp
and
cdq
aas
mov
popa
ins
ret
jp
push
sbb
es
sbb
jo
xor
xchg
inc
mov
add
stos
mov
je
or
and
bound
push
pop
mov
popf
xor
adc
xor
cmp
xchg
xor
test
inc
pop
xchg
xchg
daa
pusha
sbb
outs
bound
scas
pop
outs
add
sub
jbe
dec
adc
leave
not
inc
and
test
loop
sbb
or
stos
jmp
jg
push
inc
jp
xchg
and
out
sar
or
add
sub
add
jnp
push
test
dec
pop
push
inc
rcr
xchg
dec
cli
or
or
call
inc
test
ja
lods
jle
push
das
inc
call
and
xor
dec
and
mov
lahf
sbb
sbb
mov
sti
sbb
push
adc
mov
xor
add
mov
inc
rcl
cmps
mov
push
fmul
(bad)
test
jnp
xchg
push
xor
and
retf
cmp
popa
inc
and
jle
add
cmp
xchg
adc
imul
fs
sub
popf
jb
data16
adc
cwde
cwde
(bad)
lahf
mov
test
xor
add
hlt
inc
inc
cmps
shr
addr16
(bad)
adc
lods
mov
ror
(bad)
repnz
mov
pop
and
sahf
sbb
pop
dec
lods
xlat
jb
add
mov
into
(bad)
xor
jo
repnz
cmc
mov
sbb
imul
(bad)
add
scas
(bad)
fstp
fsubr
popf
dec
adc
cs
cwde
jge
imul
shl
add
mov
dec
add
int
sbb
xor
mov
mov
mov
add
push
mov
xor
lahf
stc
dec
cdq
cwde
mov
test
cdq
adc
cmps
sbb
adc
ds
ret
aad
xor
jae
repz
mov
mov
mov
adc
or
push
xor
adc
jno
movzx
outs
scas
lods
dec
out
and
pushf
outs
aam
jl
cmps
movs
scas
or
out
xor
jecxz
jo
sti
rol
inc
cmp
or
fstp
rcr
imul
pop
daa
jmp
push
rep
mov
movs
mov
sbb
das
pop
leave
xor
rol
call
push
fcomp
sub
das
iret
fucomi
out
call
mov
ret
fs
or
loope
enter
pushw
lea
pop
outs
push
adc
lods
xchg
ror
dec
xor
add
or
das
xchg
jle
(bad)
in
jl
mov
jns
jge
push
stos
sub
inc
cmps
jecxz
arpl
in
or
rol
xchg
daa
fild
retf
pop
div
movs
mov
retf
data16
retf
clc
dec
mov
(bad)
adc
jmp
ss
(bad)
outs
dec
and
test
lds
pop
stos
jp
xchg
ins
movs
and
mov
mov
or
ror
movmskps
bound
and
shl
movs
imul
push
jp
xchg
lock
cdq
(bad)
jbe
add
or
xor
sub
pcmpeqb
xor
pusha
(bad)
push
dec
mov
mov
mov
pop
jge
loop
and
fs
sti
jl
add
retf
push
stc
sti
dec
jnp
mov
(bad)
(bad)
fimul
push
lock
sub
loopne
or
cmp
dec
push
sub
mov
xchg
mov
xor
add
cmp
jnp
scas
ins
inc
leave
mov
dec
imul
jp
push
mov
repnz
scas
adc
setg
je
rol
fstp
das
or
and
and
test
xor
mov
sbb
sbb
xor
and
cmp
clc
je
add
dec
shl
test
hlt
mov
push
push
fisubr
xchg
sbb
pop
and
das
loope
xchg
dec
mov
mov
aad
test
xlat
scas
sahf
jo
pop
sub
enter
ret
bound
mov
sti
push
cmp
adc
(bad)
aam
repz
test
cmp
push
and
shr
(bad)
sahf
jbe
test
add
push
pop
outs
rcr
fistp
mov
popa
push
xrelease
jg
pop
pop
js
in
add
cmp
(bad)
icebp
or
cwde
mov
mov
fldenv
mov
jge
stos
mov
ret
cmp
jmp
(bad)
sbb
loop
or
mov
rcr
in
das
push
sbb
(bad)
cmp
das
imul
add
xchg
les
lock
jmp
cmp
nop
fsubr
and
and
test
mov
sub
xor
and
and
add
or
inc
cmp
aad
sub
xor
or
cmps
mov
xlat
push
jnp
sbb
aam
jmp
fwait
into
lods
dec
out
pusha
or
jo
mov
movs
add
sti
es
push
(bad)
fmul
cmp
nop
arpl
inc
push
call
adc
xor
jne
loopne
ret
iret
add
call
pop
xchg
adc
mov
loope
sbb
mov
nop
lods
pop
push
std
out
in
mov
clc
int
mov
mov
ret
mov
ds
dec
daa
push
lods
into
dec
jp
sbb
shl
and
shr
adc
ds
mov
das
std
les
hlt
or
dec
and
outs
cmp
data16
stc
adc
movs
fisub
popa
add
repz
jmp
and
jle
mov
adc
das
jb
mul
dec
xchg
mov
push
into
sbb
outs
ret
mov
test
mov
dec
sar
cmp
retf
arpl
sub
sub
pop
and
call
add
out
lock
sbb
xchg
sti
inc
jge
std
push
add
mov
aaa
mov
fidivr
add
test
dec
cmp
dec
xor
push
inc
adc
add
je
ins
dec
shl
mov
rcr
dec
movs
daa
shl
push
ins
sar
fmul
mov
cmps
pop
or
aad
jnp
push
(bad)
(bad)
(bad)
cmp
xchg
loopne
sbb
imul
push
xor
mov
mov
jnp
sub
(bad)
loope
push
mov
test
pop
xchg
loop
daa
inc
mov
xchg
adc
mov
jo
fld
fwait
jo
int
mov
lock
cmp
outs
mov
push
sbb
adc
add
stos
add
fdivr
mov
add
rol
xor
and
(bad)
fist
imul
movs
mov
jl
mov
push
loopne
(bad)
int3
lea
icebp
push
push
mov
pushf
xor
or
je
inc
pop
sti
icebp
push
add
stos
movs
jl
in
or
repnz
push
out
sub
fimul
xchg
div
(bad)
call
call
pop
(bad)
or
cmps
xor
mov
sbb
fcom
mov
push
cmps
(bad)
retf
lods
pop
fnstsw
outs
push
imul
jmp
add
cmp
fbld
and
mov
push
mov
xor
pushf
mov
add
es
in
aaa
xlat
or
lock
int3
sub
inc
mov
es
and
ins
fiadd
out
aam
out
int
call
mov
add
adc
jne
je
jno
push
xchg
or
mov
es
jo
out
(bad)
addr16
push
into
sub
cwde
sbb
or
mov
xchg
lea
xchg
sbb
bound
mov
xor
inc
into
std
iret
xor
dec
stos
inc
xchg
mov
movq
and
in
pop
mov
cdq
ins
adc
ror
xchg
or
jne
mov
or
stc
mov
jl
inc
mov
adc
sbb
les
jecxz
cmc
jb
mov
pop
dec
mov
sbb
int3
or
stos
jno
pop
xor
lds
and
ret
out
icebp
imul
jo
adc
(bad)
adc
push
pop
mov
fcom
outs
dec
in
add
ret
call
fsub
data16
test
arpl
pop
rcl
adc
xchg
(bad)
fild
sub
push
mov
stc
fldcw
cdq
lods
fnstsw
dec
push
xor
cwde
or
fmul
mov
mov
sub
ret
in
xor
test
adc
outs
fwait
ja
out
jns
inc
cmp
jp
dec
scas
or
and
rcl
aam
add
pushf
cmp
das
mov
pushf
test
add
enter
lock
pop
sbb
aad
push
fs
push
mov
std
imul
cmps
fadd
xor
in
jecxz
xchg
cmp
adc
lock
and
sahf
xor
out
jg
adc
in
inc
jns
cmp
aam
push
push
inc
pop
adc
sbb
adc
push
jmp
lock
and
jl
das
inc
inc
pushf
fwait
je
mov
jmp
in
out
xchg
or
pop
jo
ins
inc
ret
xchg
mov
in
scas
mov
shl
xlat
sbb
mov
adc
push
xor
leave
pusha
or
(bad)
dec
xchg
pushf
jo
call
jae
shr
imul
xor
adc
or
sbb
mov
jns
sub
sub
ins
or
jp
in
mov
xchg
mov
fcomp
sbb
mov
(bad)
jp
inc
fs
sub
fcomp
rol
xchg
in
sbb
in
xchg
push
cmp
scas
push
repz
daa
and
lock
fsub
sbb
sbb
rcl
pop
pushf
cmp
ss
ror
cmps
sbb
push
mov
cmp
ins
shl
xor
mov
jge
data16
jle
sbb
cmp
retf
retf
or
sub
xchg
inc
cmp
arpl
adc
cmps
or
aaa
jne
adc
jbe
mov
pop
adc
add
push
scas
jp
pop
ins
dec
in
push
imul
repz
add
hlt
cli
adc
bound
sub
mov
add
pop
stos
or
and
mov
jns
lods
dec
jp
fs
hlt
mov
hlt
xor
push
inc
jl
jb
and
mov
or
ja
push
sbb
sbb
ins
inc
sbb
cmps
mov
scas
ins
jle
fisub
call
repnz
xchg
and
pop
les
sbb
pop
mov
fistp
shl
inc
ror
xor
mov
cmp
rcr
imul
inc
or
sbb
or
or
inc
mov
sbb
push
arpl
or
sbb
mov
and
lods
jg
and
(bad)
pop
sub
scas
xchg
add
in
sahf
fst
repz
adc
rol
mov
mov
adc
aas
add
fild
bound
scas
xchg
movs
cdq
into
std
adc
scas
(bad)
in
xlat
mov
test
adc
dec
sbb
int
pushf
pop
loop
popa
mov
dec
aam
cwd
jo
leave
push
push
inc
mov
adc
or
call
loopne
dec
jne
imul
mov
and
or
in
fisubr
(bad)
pop
call
in
out
sub
adc
push
movs
push
dec
push
mov
mov
and
mov
or
aaa
pop
outs
cmp
js
inc
pop
int3
mov
pusha
xor
daa
movs
mov
adc
or
ficom
popa
xchg
mov
xchg
(bad)
or
sub
push
das
mov
dec
shl
jle
jecxz
cmp
inc
xor
jnp
jl
pop
sti
add
inc
mov
push
xchg
sub
xor
sub
adc
mov
jnp
or
popa
hlt
out
fst
pop
cmp
test
stos
sbb
int3
xchg
test
lds
imul
mov
movs
push
daa
push
sbb
add
sbb
sar
imul
pop
mov
mov
fld
jbe
sahf
sbb
mov
cmp
pushf
pop
lods
xchg
add
call
call
jge
into
sbb
arpl
imul
ret
fnstenv
adc
inc
jmp
dec
mov
pop
or
call
fst
dec
inc
and
push
mov
(bad)
sub
sti
push
lock
out
stos
jnp
sbb
xchg
sbb
or
mov
sbb
cmp
adc
dec
mov
pop
fistp
sub
add
xor
cld
int
ffree
push
or
fsubr
xchg
or
fsub
add
or
push
(bad)
mov
lock
ret
in
and
jo
and
popa
jmp
inc
je
or
mov
sub
int
adc
jl
pusha
xchg
aas
jp
loop
mov
sub
mov
push
mov
jmp
sbb
push
adc
xchg
sbb
mov
push
inc
jecxz
xchg
retf
sbb
arpl
cwde
inc
retf
call
cmp
mov
addr16
sbb
mov
movs
sub
mov
outs
or
mov
lds
in
cmp
ret
ffreep
sahf
leave
je
mov
push
and
call
sub
cld
loop
leave
cmp
das
sub
sub
shl
mov
lods
pop
cmp
mov
scas
pop
(bad)
cmps
ins
xchg
(bad)
sti
lea
out
int
push
daa
pusha
jmp
jbe
jge
xor
dec
and
es
imul
add
shr
adc
lahf
(bad)
or
out
xchg
cli
push
inc
sbb
sub
mov
pop
bound
dec
jmp
movs
or
xor
leave
fwait
pusha
jae
cwde
sub
and
inc
repnz
movs
js
push
adc
push
cs
push
push
dec
stos
xchg
ins
lea
hlt
or
fistp
mov
in
rcl
shl
xor
shl
xchg
inc
int
shl
or
loopne
pop
or
inc
dec
jo
mov
mov
add
xor
xchg
mov
mov
std
imul
pop
stc
test
imul
call
(bad)
fsubr
pop
or
jmp
fucom
push
inc
jne
and
retf
xchg
lea
xlat
add
aaa
jne
in
xchg
xor
jle
sbb
dec
push
jnp
sub
shr
sub
mov
pushf
sbb
(bad)
xor
pop
sub
cli
call
xor
loopne
sbb
loope
xchg
xor
jmp
jne
iret
jmp
mov
adc
jl
or
scas
dec
(bad)
hlt
pushf
mov
pop
pop
pop
ss
adc
add
pop
jmp
adc
jl
pop
xchg
jmp
ins
mov
call
xchg
or
aam
aam
idiv
gs
mov
pop
push
mov
mov
mov
ret
xchg
adc
add
mov
xchg
mov
popa
leave
and
jge
imul
imul
out
jl
aaa
xchg
jmp
pusha
sbb
jmp
push
out
jp
test
xor
rol
xor
mov
outs
pop
jbe
std
cs
mov
je
add
outs
xchg
out
clc
shl
pop
test
sbb
adc
push
sbb
dec
mov
push
xor
add
jne
dec
mov
sub
in
mov
mov
jae
adc
mov
push
fldenv
mov
fxch
stc
xor
push
jo
cmp
aaa
imul
jns
sti
mov
mov
add
mov
call
aam
push
adc
scas
adc
std
ss
ret
cmps
rcl
jecxz
inc
jb
cmp
jg
bound
jae
cmps
inc
add
mov
jae
dec
ret
dec
jno
and
xchg
jno
fldenv
sub
enter
add
das
(bad)
cs
adc
repz
mov
and
hlt
xchg
psubw
push
xchg
arpl
push
adc
jp
ucomiss
enter
ins
adc
and
pop
mov
out
pop
fcmovnu
and
dec
in
mov
inc
mov
icebp
repz
scas
dec
pop
sahf
inc
mov
icebp
pop
ins
sub
push
int
stc
or
cmc
jae
nop
or
(bad)
ins
ss
pop
mov
loop
push
mov
js
seta
movs
es
repz
call
mov
scas
xchg
and
push
pop
mov
ret
sub
iret
shl
(bad)
stc
lock
fadd
bound
sub
mov
sar
(bad)
in
cmp
dec
movs
add
cmp
mov
sti
ficom
mov
not
fndisi(8087
in
push
sahf
addr16
shl
leave
stos
push
xchg
xchg
mov
adc
and
inc
es
rol
jbe
out
test
xchg
adc
ret
inc
retf
and
pusha
and
aaa
xor
inc
(bad)
popa
outs
mov
(bad)
loope
push
pusha
outs
mov
scas
hlt
fnstsw
mov
ins
push
call
sti
xlat
xor
add
loop
cmp
pushf
popa
(bad)
jg
adc
adc
enter
out
push
fdiv
ret
and
jae
jecxz
cmps
sbb
inc
rcr
dec
fisttp
xlat
or
lods
imul
cld
test
pop
repnz
inc
fwait
adc
mov
scas
push
add
out
sti
cmp
pop
(bad)
stc
cdq
daa
cmp
je
sub
loopne
dec
in
push
xor
test
inc
xchg
xchg
shl
xchg
pusha
inc
adc
(bad)
or
in
pop
sub
cld
sub
call
test
mov
loope
clc
mov
pop
push
and
clc
in
shr
or
cmp
aaa
out
cmp
and
mov
mov
mov
add
mov
push
or
jl
(bad)
push
pop
push
fst
mov
jbe
fist
shl
loope
mov
imul
or
cmp
jmp
xor
add
pop
push
add
sbb
inc
aam
inc
mov
jmp
arpl
xlat
xor
or
cmps
js
mov
mov
mov
repnz
pop
pop
sub
fbld
push
sbb
pop
and
cld
pushf
or
inc
mov
sub
call
xchg
mov
hlt
sbb
je
jge
iret
lods
dec
dec
out
push
stos
dec
xlat
xor
js
leave
popa
adc
test
cld
push
sub
jo
push
mov
dec
and
ins
push
(bad)
popa
scas
dec
pop
push
das
mov
fist
std
rcl
test
mov
jne
jl
addr16
xlat
mov
sub
ror
shr
cmps
pop
(bad)
adc
ins
scas
cmps
cmp
jp
sub
or
add
and
sub
pop
inc
(bad)
sub
xchg
xor
fwait
call
out
(bad)
outs
push
mov
test
push
ret
jge
push
push
xchg
loop
jle
xchg
pop
push
sub
pop
gs
adc
inc
int
ins
push
pop
das
xchg
into
sbb
cld
aaa
out
loope
data16
test
bound
(bad)
cmp
out
scas
dec
cmp
cmp
call
(bad)
or
out
adc
test
in
dec
mov
out
in
pushf
popa
pop
cwde
cmp
inc
(bad)
cmp
cmp
or
jne
add
sub
popa
in
call
jbe
inc
mov
lods
das
arpl
jmp
js
mov
shl
sbb
xchg
sbb
sbb
or
dec
ds
movs
or
loope
fs
call
add
out
xchg
or
int
jp
in
xchg
mov
fmul
jne
daa
hlt
shr
mov
std
cmp
cmp
mov
xchg
sub
xor
or
and
and
pop
jb
mov
jmp
mov
jo
ja
lea
popa
xor
xor
cmp
fcmovbe
xchg
or
cld
js
out
stos
mov
js
inc
inc
lahf
xchg
cs
dec
push
in
pop
jne
jge
mov
inc
out
test
movs
neg
xchg
xchg
pop
(bad)
or
retf
mov
lods
mov
inc
dec
push
jg
(bad)
xchg
movs
sub
xor
adc
(bad)
mov
lea
sub
(bad)
xchg
icebp
imul
fnsave
mov
inc
dec
sub
fimul
pop
inc
mov
mov
clc
jg
jl
sbb
inc
mov
dec
lods
out
add
test
pop
fstp
add
sub
outs
data16
pop
iret
sub
mov
sub
mov
jge
sbb
xchg
or
out
fst
sar
jle
hlt
daa
mov
aad
test
es
loopne
sbb
cmc
lahf
enter
aas
mov
jne
sbb
sbb
dec
dec
mov
cmovge
add
mov
lods
scas
jle
imul
mov
(bad)
shl
in
ja
call
sub
mov
add
ror
jo
into
clc
ret
or
xor
mov
int
lods
sub
shr
mov
imul
inc
add
test
mov
(bad)
pop
mov
mov
jp
jne
js
inc
fild
call
push
adc
push
push
sbb
add
and
jne
fcmove
outs
fsubp
or
int3
mov
inc
add
sub
mov
into
sbb
outs
ins
and
addr16
mov
adc
sbb
sahf
adc
pop
jno
sub
xchg
es
cwde
addr16
in
repz
out
push
cmp
sub
pusha
push
int3
adc
movs
dec
sahf
dec
mov
sbb
sub
dec
sti
aam
jbe
inc
sar
(bad)
das
hlt
pmulhuw
jns
pop
add
adc
push
sbb
jle
pop
xchg
add
or
mov
stos
and
add
loopne
cld
call
clc
jmp
or
sub
cmps
jnp
jno
push
out
mov
mov
push
and
sbb
sti
inc
mov
or
or
scas
mov
jmp
fwait
or
cs
push
outs
add
push
cmp
fimul
or
cmp
aad
jle
or
pop
pop
shl
mov
mov
adc
xor
cmp
jbe
repnz
test
mov
dec
jecxz
or
pop
(bad)
xchg
fistp
pop
mov
and
repz
stos
mov
sar
xlat
test
into
stos
movs
sbb
stos
pop
xchg
cwde
nop
(bad)
hlt
les
dec
mov
sbb
dec
(bad)
push
(bad)
jg
js
mov
adc
sub
je
dec
mov
cld
jmp
cld
mov
popf
xchg
repnz
mov
loop
mov
div
mov
in
mov
scas
popf
cmc
sub
sbb
jno
jno
ss
pop
les
inc
clc
mov
or
(bad)
(bad)
jo
add
pop
jge
and
les
stos
jnp
pop
or
jno
dec
sbb
fisub
sti
cmps
scas
mov
sti
sbb
popf
fwait
add
mov
mov
mov
fldenv
scas
mov
push
fwait
push
mov
cmp
mov
aaa
jnp
mov
and
or
pop
xchg
adc
call
dec
xor
dec
inc
sub
jnp
cmp
sti
retf
mov
push
xchg
jns
push
sbb
jb
mov
outs
out
pusha
sub
movs
scas
out
sbb
ja
scas
mov
push
shl
mov
mov
rcl
adc
dec
pop
push
jno
push
int
xchg
add
test
dec
in
imul
pop
cmps
push
mov
push
mov
adc
sar
fist
push
add
repnz
out
mov
fmul
stos
xor
fadd
pop
adc
mov
not
iret
push
mov
imul
push
cmc
mov
test
retf
outs
fdivr
clc
test
and
outs
adc
cld
sti
mov
dec
mov
test
ret
sbb
out
cmp
jecxz
mov
xchg
adc
xor
xor
or
and
test
ss
les
mov
jge
jle
sub
cwde
ja
inc
mov
sbb
lods
xchg
mov
inc
push
pusha
adc
and
xor
sub
mov
push
movs
mov
mov
pop
mov
in
and
sub
sbb
pop
gs
lea
add
cmp
es
sub
(bad)
gs
pop
or
xchg
push
xchg
das
push
pop
pusha
ss
cmps
push
in
xchg
jl
fild
add
adc
(bad)
pop
xchg
mov
fisttp
std
popf
adc
cmp
cwde
movs
rol
test
(bad)
xchg
ins
mov
xchg
xor
sbb
xchg
jl
dec
fisub
mov
movs
and
mov
mov
inc
mov
ret
std
cmc
push
(bad)
jns
cs
jo
cmp
sbb
mov
test
stos
popf
sub
sub
addr16
pusha
dec
lods
push
repnz
inc
(bad)
pop
mov
push
pop
mov
outs
mov
push
cmps
fbstp
sbb
jle
test
add
aad
in
imul
pop
movs
mov
and
mov
dec
call
xchg
add
repz
sub
movs
pop
mov
lods
pop
outs
mov
add
iret
add
jecxz
push
and
(bad)
loope
inc
jmp
pop
dec
outs
idiv
add
pop
mov
pushf
es
aam
stos
movs
inc
pop
ficom
mov
jb
jl
sbb
sub
aam
and
mov
push
fstp
xchg
dec
or
mov
inc
dec
nop
sub
data16
pop
test
in
add
cmp
push
cmp
sbb
es
in
push
(bad)
xchg
xlat
mov
stos
shr
pop
xchg
arpl
pop
(bad)
mov
imul
cmc
push
mov
jnp
cmp
and
daa
movs
mov
add
cld
ins
xchg
hlt
mov
sbb
dec
jmp
cmp
sbb
sbb
test
push
lock
lods
test
cld
into
or
popf
jle
inc
fcmovnb
aad
icebp
xor
rcl
bound
jb
rcl
cld
sub
sahf
dec
aas
bound
ins
and
ja
jo
fmul
cmps
adc
jae
ret
ss
mov
pop
call
xor
dec
rcr
dec
push
mov
popf
push
cwde
nop
cmp
dec
js
bound
mov
dec
neg
pop
xchg
adc
retf
fcmovbe
and
jo
cmp
adc
pop
daa
jl
push
in
push
imul
mov
inc
xor
lock
mov
je
or
les
inc
(bad)
vcomiss
mov
inc
bound
add
(bad)
pop
lods
lahf
outs
mov
(bad)
mov
pop
(bad)
test
retf
(bad)
mov
jb
or
out
mov
and
jbe
in
movs
les
mov
xrelease
repnz
jle
lods
sar
fidiv
in
xchg
in
mov
push
inc
add
cmp
push
push
cmps
aad
pop
dec
dec
je
jnp
(bad)
std
enter
sub
mov
push
adc
lds
lds
loopne
fwait
add
pop
sub
sub
call
xor
or
loope
push
jo
in
enter
pop
adc
loopne
repz
xor
sub
inc
mov
mov
jl
mov
jbe
movs
mov
inc
inc
dec
sar
ins
xor
in
in
in
cmps
inc
push
push
adc
js
jb
fdivr
jmp
sub
int3
pop
dec
push
jne
ins
adc
push
xchg
cmp
rol
hlt
ds
(bad)
or
pop
clc
fisubr
dec
repnz
inc
fisttp
mov
dec
sbb
(bad)
cld
sbb
adc
int
movs
imul
or
out
pop
mov
adc
inc
adc
enter
int3
mov
jbe
fisttp
xor
fadd
dec
adc
fmulp
sbb
sbb
jge
cwde
or
out
int
movs
js
outs
push
outs
je
cmc
dec
daa
pmulhuw
or
leave
push
sahf
mov
xchg
xor
int3
ds
mov
aas
out
mov
daa
fstp
jle
shl
push
dec
and
vminss
pop
pusha
add
or
sahf
cwde
adc
retf
test
pop
outs
jne
loopne
daa
jnp
cs
mov
add
(bad)
iret
push
cdq
out
adc
dec
and
mov
lods
inc
enter
div
dec
add
dec
push
adc
shl
inc
into
jl
inc
jmp
fisttp
div
cmp
cs
cmp
dec
push
scas
dec
mov
test
(bad)
mov
pushf
prefetcht1
data16
ss
jle
cwde
sar
sti
pop
dec
sbb
add
stos
adc
shl
sbb
jmp
ins
sbb
sbb
or
adc
xchg
scas
xor
pop
mov
sbb
inc
call
push
popa
sbb
cli
and
adc
arpl
sar
loope
pop
adc
fwait
in
push
ins
xor
pusha
out
cmp
adc
stos
cmp
fnstsw
enter
fistp
add
add
dec
shl
add
in
ret
ins
mov
dec
fwait
mov
mov
nop
ja
(bad)
jnp
push
jmp
mov
nop
fild
sar
pop
into
xchg
or
sbb
fucomi
push
or
fist
sbb
call
cmp
and
pusha
(bad)
cdq
xchg
inc
in
pop
cmps
lahf
mov
shl
leave
mov
and
mov
(bad)
adc
retf
push
pop
fdiv
jmp
lods
mov
fiadd
fcmove
pop
sub
aad
arpl
jbe
dec
clc
xchg
or
rol
retf
cs
push
rol
xchg
dec
retf
ror
fst
inc
sub
mov
shl
cmp
popf
pusha
lods
inc
sahf
inc
(bad)
popf
out
loope
push
jnp
js
pop
sar
in
sub
dec
mov
or
cs
xor
pusha
(bad)
popa
add
dec
inc
cmp
and
call
(bad)
loopne
jge
and
data16
sbb
aad
add
and
lds
or
sbb
mov
jae
retf
mov
outs
adc
bound
movs
pop
shl
jle
fsubr
xchg
mov
(bad)
xchg
stc
out
add
inc
push
test
inc
cmp
mov
ss
daa
push
lods
cld
xchg
aad
in
cwde
stc
jp
ja
stos
and
leave
cmc
pop
and
sbb
mov
xchg
test
shl
in
sti
arpl
retf
test
cwde
out
pop
jne
add
or
mov
pop
mov
mov
adc
imul
jl
loope
cmps
imul
mov
loop
gs
and
inc
clc
(bad)
mov
out
fsub
xchg
fs
push
lock
dec
xlat
jnp
adc
dec
dec
xor
inc
push
jge
(bad)
cmp
xor
out
(bad)
push
fimul
push
fcom
jns
scas
jmp
(bad)
xchg
pop
cmp
pop
cdq
sbb
mov
mov
xor
push
popf
sub
(bad)
ficomp
jecxz
(bad)
rcr
lea
push
or
jge
mov
inc
mov
mov
mov
leave
cli
xchg
inc
popf
jb
xor
xor
popf
int
ins
cmp
popa
or
jle
pop
popf
retf
shr
push
test
outs
jmp
adc
lds
movs
adc
ror
out
popa
mov
cmp
jae
sbb
aaa
aaa
(bad)
mov
daa
push
xchg
(bad)
(bad)
dec
repnz
sti
daa
fucomp
or
jo
stos
mov
das
es
and
jmp
aam
or
in
jnp
shr
retf
xor
aas
pop
cmp
arpl
mov
dec
sbb
cmp
dec
or
pop
pop
pop
dec
(bad)
cmp
jle
sub
jge
aad
sbb
(bad)
mov
shr
mov
cmp
push
dec
mov
div
push
fsubr
jbe
pop
sbb
fbstp
dec
outs
(bad)
jnp
or
or
fs
ror
sub
stc
sub
mov
sub
jo
daa
ins
and
sub
adc
cmp
pop
fisttp
jo
mov
mov
loop
jmp
jae
pop
mov
xlat
pop
mov
inc
or
retf
jmp
popf
mul
clc
dec
and
(bad)
jbe
ss
cmp
mov
add
pop
in
fisttp
adc
xchg
fld
xlat
sbb
sbb
sti
test
adc
dec
mov
pop
movs
cmp
xchg
lock
inc
mov
mov
lea
ja
(bad)
repz
mov
call
adc
xor
inc
loopne
jns
inc
repz
lahf
adc
icebp
les
mov
cmp
cmps
dec
bound
sub
hlt
mov
jg
popa
lahf
dec
xchg
jae
and
pop
aad
fdivr
and
mov
int3
retf
pop
mov
adc
adc
ficomp
test
dec
sbb
inc
mov
mov
addr16
inc
add
inc
xor
clc
jne
pop
js
cdq
pop
in
ss
jmp
or
mov
pop
pop
mov
popf
call
xchg
sahf
pop
aam
fadd
rol
pop
in
jmp
into
push
sub
into
jno
aad
mov
ja
fsub
not
sahf
jle
rol
loopne
enter
aad
sti
fidiv
pushf
and
xchg
enter
mov
dec
jne
mov
fbld
xchg
inc
jecxz
xchg
xchg
inc
inc
inc
push
stc
cmp
mov
pop
(bad)
mov
sar
fisub
inc
ds
out
int3
fucomip
into
ins
dec
mov
daa
or
mov
adc
ret
ins
inc
(bad)
out
rcl
test
or
hlt
mov
mov
push
mov
sbb
xchg
(bad)
xchg
cwde
or
mov
dec
sahf
xlat
mov
dec
adc
retf
push
cmp
cmps
leave
xor
into
lea
cmp
cmp
call
gs
sbb
ds
in
xchg
xlat
fsubr
add
out
in
cmps
xchg
outs
movs
xor
sub
in
fistp
inc
lock
cmps
std
pop
daa
test
out
add
jmp
add
xchg
push
mov
xchg
shl
add
pusha
repz
push
cmc
sub
nop
xchg
fmul
xchg
call
retf
jecxz
pop
mov
xchg
push
sbb
pop
fnstsw
movzx
inc
lock
push
dec
int
frstor
stos
xchg
out
inc
push
mov
push
xor
and
or
fiadd
sub
xor
pop
xchg
xor
call
lds
xlat
fdivr
sub
outs
adc
sub
ds
sbb
ins
pop
lock
sar
jl
xchg
hlt
and
push
add
es
sahf
jbe
jge
daa
ror
movs
icebp
push
mov
lds
enter
fstp
xor
(bad)
dec
pop
add
mov
mov
jae
es
cmp
inc
dec
ss
and
push
sub
or
into
int
lock
dec
sub
or
dec
clc
stc
popa
push
and
sub
mov
loop
or
in
loop
push
sub
push
cmp
test
push
cli
bound
mov
cmp
add
iret
xor
shl
in
inc
mov
imul
fimul
lea
dec
(bad)
fcom
fs
retf
out
and
add
repnz
int3
mov
outs
inc
stos
jno
jle
xchg
rol
or
adc
sahf
ins
out
xor
js
push
push
popa
cmp
movs
dec
mov
pop
stos
cmps
jne
xchg
repz
gs
test
jmp
gs
xchg
shr
pop
push
(bad)
leave
test
xlat
push
out
ficom
int
sti
rcr
mov
ficom
push
xchg
repnz
ffree
loope
xchg
jge
mov
shr
mov
leave
sbb
push
inc
push
dec
fs
adc
into
mov
mov
or
mov
mov
fld
add
adc
stc
ins
xchg
or
dec
mov
mov
mov
repnz
pop
lock
mov
mov
inc
clc
pop
repnz
js
(bad)
xlat
xchg
aaa
jge
outs
xchg
mov
(bad)
fidiv
stos
int3
mov
jecxz
nop
ins
mov
fs
fistp
js
push
inc
mov
ret
jmp
pop
fmul
data16
cs
imul
inc
or
sti
mov
dec
paddd
repnz
dec
and
adc
(bad)
jo
sbb
cmc
mov
cli
xchg
add
sbb
jnp
(bad)
cmc
and
popf
fnstenv
push
jmp
and
rcl
movq
hlt
les
and
cmp
push
xchg
sbb
push
adc
lods
xor
inc
int
mov
jb
and
push
retf
push
popf
or
sbb
ret
rcl
ret
inc
mov
scas
pusha
sbb
test
fistp
mov
leave
dec
test
sar
or
imul
sti
outs
sbb
ret
mov
sub
ds
add
test
add
xlat
or
cdq
mov
sub
test
xchg
repnz
fimul
push
add
pop
bnd
push
fsub
out
mov
jmp
pusha
rol
pop
push
or
in
dec
and
push
inc
inc
or
lock
xor
sahf
push
pop
push
pusha
push
movs
imul
and
lods
jp
jge
jns
mov
sub
daa
addr16
(bad)
and
pusha
int3
dec
dec
dec
fdiv
leave
inc
xchg
(bad)
(bad)
js
cmp
mov
leave
stc
(bad)
jnp
sub
fld
mov
test
mov
push
imul
jno
inc
inc
dec
xor
push
cmp
leave
repz
cmp
dec
cs
(bad)
outs
arpl
mov
pop
jmp
aas
aad
and
xchg
sbb
xchg
xchg
push
jnp
and
cmc
sbb
cli
repnz
mul
or
imul
sar
push
in
mov
mov
(bad)
pop
dec
std
loope
inc
pop
sub
pop
pop
push
mov
xor
std
push
jmp
loop
and
icebp
sub
jl
pushf
pusha
in
jbe
xchg
iret
sub
dec
int3
cli
cmp
ret
sbb
mov
call
mov
ror
add
add
xchg
mov
and
and
dec
jns
rol
push
cmp
or
idiv
in
mov
adc
mov
das
inc
inc
mov
popf
retf
sub
push
ins
aam
scas
jge
mov
test
and
mov
mov
or
ins
lods
or
retf
(bad)
fidiv
sub
lea
adc
stc
mov
xchg
std
push
es
loope
cmp
inc
pop
adc
ficomp
push
fsub
jns
out
dec
mov
jns
xchg
dec
fwait
in
sbb
add
mov
les
icebp
stos
shl
xor
add
daa
jecxz
xchg
fisub
sbb
ins
and
xchg
xor
(bad)
or
mov
lods
cmp
fcom
fld
in
ja
jno
cli
aam
sbb
stos
(bad)
fnstcw
push
adc
(bad)
shl
adc
in
jno
jle
(bad)
jmp
cwde
call
sahf
mov
push
icebp
pop
mov
fimul
lods
cwde
ins
pop
mov
jo
inc
cwde
movs
push
cmc
xchg
test
xlat
adc
push
inc
sbb
daa
sub
sub
mov
push
mov
and
scas
sbb
std
sub
mov
(bad)
mul
adc
sbb
test
inc
dec
out
shl
(bad)
js
or
sbb
int
mov
cdq
inc
scas
mov
(bad)
pop
add
call
push
cmp
sub
sti
inc
ret
push
and
shl
jecxz
mov
mov
xchg
int3
and
jge
movq
add
sub
adc
clc
jmp
pop
pop
sub
stos
stos
daa
aaa
inc
push
repz
xchg
ret
call
or
inc
mov
pusha
and
int3
xor
addr16
scas
and
cmp
xchg
xchg
dec
fs
pop
lods
test
cmps
xor
mov
js
pop
pusha
mov
lods
dec
jmp
push
icebp
sti
out
mov
rcr
icebp
fidivr
(bad)
mov
stos
xchg
ins
sbb
cmc
mov
(bad)
sub
(bad)
nop
and
leave
ret
imul
xchg
retf
int
fs
js
pop
fsubr
push
aad
imul
pop
imul
cmp
pop
push
pop
mov
mov
retf
push
fdivr
and
mov
mov
fsub
test
cmp
into
popa
inc
jno
adc
mov
retf
lds
jns
mov
push
je
inc
lods
stos
dec
xor
add
stos
xchg
adc
fcomp
shl
adc
push
xor
push
cmp
out
and
xchg
adc
and
loope
ss
int
mov
aad
jae
inc
sbb
dec
stos
and
dec
les
mov
mov
cmp
add
mov
ror
shl
and
jp
(bad)
cmp
ret
cmps
call
lods
test
adc
jl
movs
mov
jge
mov
mov
sub
retf
mov
movs
repz
xor
jno
xchg
and
mov
push
ss
sub
repnz
cmp
xchg
push
sbb
adc
or
push
push
leave
mov
dec
out
xchg
scas
mov
jmp
adc
imul
push
hlt
ins
cmp
test
add
xor
cmp
pop
push
mov
mov
xor
and
mov
jg
mov
stos
mov
je
mov
mov
inc
pop
movs
icebp
cmps
sbb
mov
and
shl
jecxz
fcom
push
and
aaa
fistp
test
aas
das
ret
sbb
xor
push
fild
arpl
mov
lds
cmps
adc
lea
or
cmp
les
and
loopne
and
in
clc
mov
scas
mov
into
fs
scas
and
scas
das
adc
out
rcr
pop
mov
cmp
dec
dec
jmp
(bad)
(bad)
add
pop
xor
jmp
das
mov
clc
in
clc
shl
pop
adc
jle
mov
mov
call
outs
mov
pop
mov
daa
in
popf
sub
imul
ret
shl
dec
xor
mov
aas
fild
mov
repnz
outs
popa
or
pop
inc
mov
loop
cdq
popf
(bad)
inc
adc
jnp
lock
pop
mov
inc
add
mov
cld
fidivr
rcl
fs
push
cli
mov
push
mov
add
ja
daa
xchg
mov
sahf
and
icebp
clc
les
retf
in
adc
sar
jecxz
xor
stc
stos
mov
cwde
pop
fadd
in
dec
je
sub
jb
cs
sbb
(bad)
lods
add
sub
iret
enter
fistp
mov
dec
push
adc
sub
sbb
sub
cmp
push
sbb
in
data16
sub
das
sbb
xchg
sub
int
jbe
sub
out
sub
xor
xchg
xchg
int3
inc
sbb
test
dec
fmul
mov
xor
icebp
xchg
mov
fld
stc
outs
aad
fcom
mov
sub
inc
js
shr
jmp
sbb
(bad)
in
aad
mov
dec
mov
mov
inc
lds
pushf
mov
xchg
jl
test
xor
and
xchg
in
dec
jne
add
jl
out
test
push
cmp
mov
repnz
popf
cmp
(bad)
dec
and
jmp
loope
inc
call
xor
inc
imul
xchg
shl
push
pushf
sub
push
jae
gs
xchg
ret
rol
ret
dec
call
adc
jecxz
sub
stc
fsubr
dec
int3
cmp
loope
mov
push
sub
inc
jne
and
jno
(bad)
jno
aad
add
mov
inc
xchg
cmp
inc
mov
bound
cmp
ret
out
pop
icebp
(bad)
pop
mov
lock
cmp
cmp
std
xor
repz
adc
(bad)
push
add
xchg
xor
sti
mov
or
outs
jl
repz
loope
test
xchg
(bad)
aad
pop
mul
lea
mov
jmp
loopne
mov
xor
lea
test
movs
fxtract
jns
lds
and
aam
lahf
fs
rol
or
je
popa
mov
mov
ja
fist
(bad)
sub
xchg
push
jecxz
pop
enter
jo
inc
sub
push
outs
test
sbb
lea
mov
ret
pop
je
adc
out
das
mov
je
ja
mov
fwait
mov
ret
or
inc
dec
or
mov
jae
fs
cmp
xor
dec
inc
mov
jmp
fsubr
es
push
test
daa
ss
inc
shl
cmp
xchg
mov
adc
cs
(bad)
mov
adc
and
mov
retf
fs
pop
adc
sbb
fldz
mov
and
sub
push
sub
ja
ins
sbb
lea
std
je
gs
push
in
addr16
das
pusha
hlt
sti
and
jle
scas
stc
xchg
adc
bound
out
je
mov
pop
aaa
pop
call
mov
xor
push
in
xchg
es
jae
movs
mov
adc
ds
rol
mov
ja
(bad)
adc
inc
out
pop
sbb
in
push
repnz
ret
xchg
int
inc
fcom
add
inc
icebp
imul
(bad)
sti
xchg
pop
lahf
mov
sbb
push
repz
adc
mov
jo
jmp
popa
dec
jg
lods
loope
jl
push
mov
lods
dec
dec
lock
gs
bound
data16
lahf
push
cli
mov
pop
test
call
ins
fcmovnu
in
repnz
movs
outs
fsubr
push
mov
mov
in
cld
sbb
call
adc
sbb
mov
mov
mov
aam
out
sub
inc
cdq
icebp
inc
or
fiadd
mov
nop
es
cmp
mov
hlt
adc
aam
(bad)
outs
nop
mov
inc
mov
sub
hlt
cmps
fild
adc
dec
jnp
retf
jns
addr16
sub
test
push
cs
sahf
push
mov
sub
mov
in
xchg
je
inc
adc
js
fisubr
in
stos
retf
daa
jbe
inc
ins
sar
inc
cmps
mov
stos
(bad)
mov
xor
ins
fs
jns
sti
add
retf
lock
sub
(bad)
ss
fldenv
jb
outs
cdq
jb
mov
idiv
xor
movs
stc
xor
mov
or
fnstenv
mov
popf
(bad)
gs
daa
fild
(bad)
jg
(bad)
sbb
cdq
mov
adc
and
mov
cmp
ja
or
nop
pop
outs
xchg
cdq
(bad)
lock
or
inc
int
mov
dec
cmp
push
int3
xchg
leave
loope
fst
movs
lods
(bad)
jb
ins
mov
outs
inc
pop
cs
inc
mov
sbb
sbb
or
jb
jle
pop
add
ins
stc
push
xor
or
stc
dec
repz
mov
int
inc
dec
xrelease
jecxz
pop
jno
out
call
inc
es
cmp
dec
outs
bound
xchg
test
jo
xchg
sbb
rol
lock
add
sub
sbb
or
loopne
xchg
add
adc
shr
mov
dec
fisubr
enter
sbb
daa
clc
mov
rol
mov
arpl
jmp
dec
jmp
(bad)
dec
ins
or
js
(bad)
pop
aaa
cmps
adc
std
or
fdivr
jp
les
adc
scas
nop
loope
fchs
pop
dec
shl
push
aaa
test
sbb
test
mov
mov
js
lods
mov
lea
hlt
adc
sub
mov
pop
sahf
out
mov
sbb
cmp
inc
rcr
bound
movs
out
cmps
setb
sub
add
and
test
pop
in
push
ins
repnz
inc
jp
es
fild
out
cld
adc
dec
sahf
popf
pop
fbstp
xchg
fsubr
add
cmps
fs
mov
fnstcw
xchg
adc
sub
pop
and
ds
mov
dec
lahf
xchg
std
add
test
fisubr
adc
xor
movs
(bad)
cmps
sbb
inc
push
fmul
jmp
add
(bad)
fidivr
xor
out
inc
in
mov
lea
and
add
(bad)
sbb
dec
or
jns
ins
xor
test
daa
cmp
sbb
and
fidiv
test
jmp
mov
cmp
scas
and
ins
push
inc
ror
jns
push
retf
xchg
ins
ror
into
(bad)
push
loopne
push
test
int
in
inc
ins
enter
jnp
addr16
mov
(bad)
out
fwait
cmc
cmp
cmp
data16
and
inc
sti
jne
lods
xor
in
inc
out
les
fist
xchg
loopne
pop
call
mov
mov
cmp
ret
bound
mov
adc
lock
cld
pop
out
data16
ds
outs
xor
jg
mov
pop
hlt
add
mov
sub
cmp
jno
movs
xchg
mov
cmp
sbb
mov
mov
cmp
push
and
and
sub
bound
mov
add
gs
das
out
std
push
adc
stos
mov
iret
jo
je
pop
mov
mov
jbe
out
xor
iret
pop
retf
es
aad
ss
mov
ss
and
dec
ins
popa
inc
mov
xlat
add
xchg
and
ins
fnstenv
(bad)
cmp
retf
mov
adc
movs
and
cmp
push
loope
dec
mov
xor
add
iret
stc
sbb
test
lds
retf
aam
loop
xchg
es
xlat
lea
jbe
ret
mul
dec
xchg
or
adc
cmp
lds
repz
rcl
and
stos
mov
aad
movs
mov
dec
sub
fwait
stos
std
popf
sar
sti
mov
cwde
mov
cmps
or
jmp
jp
fs
hlt
mov
fwait
cdq
lds
xor
ror
inc
imul
xchg
dec
popf
mov
clc
in
fidiv
popa
mov
jo
das
xor
jo
call
pop
inc
xchg
push
push
nop
push
cmps
addr16
fldln2
and
js
mov
inc
call
inc
loop
xlat
int
xor
addr16
pusha
inc
cmps
and
jnp
jns
(bad)
fs
dec
imul
dec
idiv
pop
and
sbb
push
imul
xchg
xlat
and
stos
mov
add
dec
stc
jp
sbb
aas
ins
mov
add
xchg
cmp
popf
in
jnp
sar
cmp
jp
inc
or
jp
in
ds
or
mov
cmp
std
and
xchg
dec
iret
pextrw
ins
lods
sbb
cwde
jmp
mov
jno
imul
fnstenv
or
mov
xchg
cmp
stc
pop
out
fadd
cli
mov
adc
mov
pop
sahf
push
push
cs
sar
add
fild
loopne
xchg
inc
sub
sub
dec
jo
mov
jmp
sahf
pop
repnz
int3
cmc
loop
jmp
movs
mov
adc
cli
(bad)
out
cmps
leave
(bad)
stos
xor
jl
push
pop
adc
and
adc
(bad)
daa
push
sub
xchg
(bad)
cmp
mov
jo
mov
lea
mov
inc
loop
sub
pop
test
das
push
rol
xchg
in
pop
sahf
mov
and
std
icebp
cld
push
cwde
sahf
push
es
mov
push
inc
cld
pop
je
cmp
xor
sbb
jle
dec
shr
mov
rcr
add
jge
inc
int3
test
leave
push
cmp
in
adc
sub
sub
jbe
xor
pop
mov
out
shl
cmps
mov
jmp
push
xor
fsubr
add
jp
inc
call
shl
dec
dec
cli
das
dec
cmc
je
and
adc
add
aaa
out
jne
ins
in
or
jne
adc
dec
(bad)
xor
loop
inc
(bad)
or
les
and
cmp
cmc
xchg
mov
pop
ficom
jb
inc
jle
ja
add
xchg
sbb
jnp
mov
jo
ins
jmp
in
test
pop
std
call
rol
imul
sbb
adc
or
pop
cmp
gs
jne
mov
jge
push
mov
shr
mov
pop
jnp
(bad)
xor
sub
and
fsubr
sub
xchg
sti
push
lea
fild
in
fadd
pop
ds
fild
pushf
sbb
in
jmp
bnd
cdq
sbb
imul
sub
lods
mov
or
or
xor
inc
loopne
test
aas
push
retf
dec
aas
dec
call
inc
iret
add
out
outs
inc
inc
imul
inc
(bad)
sbb
pop
mov
scas
loope
call
int
jbe
into
cmp
ins
lods
ins
push
scas
xor
es
call
cmp
pop
cmp
cmp
scas
fadd
rcr
inc
sbb
test
movs
xchg
imul
aaa
mov
jbe
stos
aad
mov
pushf
or
or
call
or
leave
out
mov
jg
scas
dec
mov
mov
push
push
xor
aas
mov
lahf
pop
push
cmp
sar
mov
ja
mov
sub
sub
and
aam
pop
shl
dec
add
pushf
sbb
pushf
adc
or
sub
arpl
jbe
xor
loop
iret
ja
inc
sti
bound
pop
mov
jmp
jle
adc
dec
in
mov
dec
cli
fnstsw
jg
cmps
xchg
test
mov
cmp
movs
das
clc
add
shl
mov
sub
adc
sub
inc
dec
rcl
leave
mov
ror
cmp
and
xlat
xor
sahf
out
sar
repz
loop
inc
add
xor
jnp
inc
popf
test
xlat
movs
mov
sbb
jecxz
sbb
clc
xchg
mov
or
sahf
xor
outs
mov
addr16
add
or
cmp
pop
lahf
xchg
sub
imul
imul
stos
mov
aad
cmps
clc
mov
or
xor
dec
inc
mov
test
movs
bound
in
dec
sbb
sub
push
inc
dec
ror
push
push
sub
adc
xchg
out
int3
cwde
in
cmp
dec
(bad)
es
and
repnz
mov
pusha
cwde
fcom
inc
mov
mov
shr
arpl
std
push
push
call
fdivr
inc
adc
cmps
adc
push
jo
out
sbb
xchg
cmps
(bad)
mov
les
xchg
sub
adc
cmp
cmp
out
push
push
(bad)
fadd
call
iret
cmc
cdq
fldcw
icebp
ja
cs
clc
cmc
inc
mov
push
sub
movs
xor
xchg
push
imul
cwde
out
ja
xchg
fsubr
mov
xor
adc
inc
sbb
jg
inc
aaa
pop
stos
or
inc
inc
loope
mov
adc
sub
cmp
sbb
inc
jae
out
mov
jns
imul
fdiv
push
mov
(bad)
shr
leave
mov
pushf
push
mov
sub
sbb
mov
inc
out
aaa
add
cmc
test
add
push
lods
in
retf
arpl
dec
push
outs
rcr
xchg
daa
push
sub
xor
(bad)
in
cli
es
(bad)
call
enter
cli
inc
mov
jns
call
xor
dec
inc
xchg
and
xor
mov
pop
rol
into
push
std
outs
push
mov
daa
popf
sub
add
not
sub
mov
and
retf
and
enter
enter
mov
push
movs
fwait
jecxz
test
mov
sbb
adc
es
sbb
lock
xor
scas
fidivr
jmp
cmp
stos
stos
adc
pop
test
aam
stos
ss
mov
lods
jmp
push
enter
call
and
cmp
push
sar
dec
sub
loopne
pushw
ins
sub
adc
call
jns
inc
mov
jo
das
es
loope
mov
xor
pop
call
xor
xchg
mov
ja
mul
je
mov
les
lods
pop
nop
push
mov
xor
adc
sahf
retf
adc
push
xor
shr
dec
xchg
aam
les
gs
adc
movs
push
inc
push
mov
push
jmp
push
popf
xchg
int3
and
mov
sar
mov
sti
inc
cmc
jmp
hlt
in
int3
inc
repnz
pop
mov
addr16
fisttp
sub
jae
inc
scas
mov
ret
add
les
add
mov
dec
sub
dec
dec
je
loopne
fcmove
adc
movs
nop
push
fidiv
mov
icebp
out
mov
or
push
std
ret
mov
dec
and
fwait
daa
jmp
je
cmp
cmp
out
cld
stos
mov
dec
shl
iret
jnp
pop
adc
cdq
mov
pop
loope
xchg
cmp
vpaddsw
xor
dec
mov
jmp
(bad)
(bad)
jge
xchg
inc
inc
movs
mov
mov
(bad)
rol
loop
(bad)
pushf
cwde
mov
jg
cmp
repnz
(bad)
inc
inc
dec
pop
sub
out
push
iret
rcl
push
rcl
nop
adc
ror
pop
das
int3
arpl
add
movs
test
pop
and
sub
clc
pusha
dec
mov
mov
loop
lgdtd
in
das
aas
and
iret
inc
idiv
jns
mov
pop
and
int3
and
(bad)
pop
push
sub
js
sub
gs
xor
mov
lods
inc
adc
add
test
lods
and
cmp
xlat
pop
add
enter
mov
add
jnp
scas
cmp
or
repz
mov
sbb
test
jmp
push
sub
fadd
inc
and
jl
(bad)
mov
cmp
inc
lods
pop
mov
icebp
enter
lahf
ss
inc
retf
not
inc
mov
add
std
mov
mov
jne
and
scas
or
ret
push
add
sbb
aam
pop
mov
imul
adc
pop
sub
xor
xchg
jge
inc
xchg
mov
push
xor
aaa
pop
fsubp
cmp
and
push
loope
pop
dec
retf
jp
stos
fidiv
test
(bad)
call
les
or
sub
jnp
(bad)
clc
(bad)
push
mov
enter
cmp
xchg
test
jmp
jg
mov
add
push
sub
test
in
into
fiadd
sbb
add
and
mov
jno
mov
daa
mov
xchg
nop
(bad)
inc
xlat
ss
add
mov
xor
movs
inc
js
aaa
repz
inc
sub
mov
push
mov
retf
cli
dec
pusha
int
mov
movs
int
push
push
sbb
adc
les
dec
sub
clc
cmps
out
outs
into
mov
mov
xor
movs
in
mov
lahf
pop
lea
xchg
xchg
sahf
daa
inc
mov
nop
push
jno
jl
add
xchg
push
mov
retf
mul
leave
jecxz
mov
xchg
mov
pop
fmul
mov
add
inc
pop
test
push
jle
std
lods
xor
add
shr
fbld
leave
mov
ret
ret
mov
repnz
ins
xchg
rcr
test
es
repnz
cs
mov
adc
cmp
mov
ins
jmp
hlt
push
xabort
push
dec
pop
sbb
fistp
or
in
stc
mov
mov
sub
leave
imul
outs
cmp
push
mov
sbb
loopne
xchg
and
call
into
mov
and
aas
ret
loopne
sbb
int
out
stos
es
mov
fsub
jmp
fistp
sbb
cld
jecxz
cmps
or
es
inc
and
xchg
fisubr
stos
xor
out
inc
scas
add
push
aam
inc
dec
xlat
push
nop
fdiv
int3
test
push
xor
data16
sbb
pop
call
ror
pop
sub
mov
mov
ret
pop
enter
mov
fadd
xchg
dec
push
jmp
mov
mov
(bad)
jmp
cmp
xchg
movs
adc
mov
jo
add
aaa
or
add
inc
sbb
popa
cmp
adc
xor
popa
cs
gs
ins
push
aas
not
push
jns
movs
add
rcr
mov
jno
xchg
not
xchg
push
cs
(bad)
rol
fsub
jns
jb
ret
and
push
test
call
xchg
daa
stos
jge
adc
ins
xor
jbe
iret
lahf
push
mov
push
pop
mov
dec
push
outs
rep
xor
lea
movs
lods
fnstcw
lock
call
rol
jbe
and
adc
loope
mov
push
mov
je
mov
pop
push
into
push
lea
fldenv
pushf
mov
sbb
movs
rol
pop
xor
sbb
cmp
adc
stos
jb
cmp
sbb
jp
loope
int3
sub
or
shr
repz
sub
cmp
mov
dec
pusha
imul
xchg
mov
push
popa
in
imul
out
nop
test
call
jl
sbb
loop
mov
int3
pushf
xchg
in
mov
sub
add
pusha
pop
in
stc
call
mov
ret
ins
xor
retf
adc
ret
fisttp
in
jne
loopne
pop
mov
or
in
jne
cmp
jnp
push
lods
jnp
daa
mov
mov
mov
test
popf
adc
jecxz
sahf
fmul
sbb
jmp
dec
das
push
hlt
inc
fwait
jecxz
outs
arpl
stc
jmp
jg
or
sahf
loop
stos
rcr
adc
inc
fadd
js
dec
stc
sbb
xor
bound
call
pushf
or
mov
ret
mov
or
out
xchg
sbb
mov
mov
mov
es
mov
adc
stc
cld
imul
neg
mov
retf
enter
add
mov
add
ja
addr16
dec
cmps
sbb
push
push
jg
dec
xor
add
mov
inc
xchg
xchg
push
dec
es
mov
out
adc
repnz
mov
cdq
mov
add
push
pusha
and
pop
arpl
mov
and
fcomp
sub
and
loope
(bad)
fldenv
imul
push
imul
mov
fucomp
jae
pop
jmp
jp
jns
adc
(bad)
ds
inc
adc
mov
repnz
sub
jnp
sub
push
push
push
xchg
gs
fs
fsubr
das
mov
lods
mov
out
shl
sub
push
cmp
mov
mov
movs
push
movs
mov
mov
add
stos
ss
and
repnz
cmp
scas
or
and
out
or
mov
inc
mov
xchg
stos
push
dec
in
add
inc
jb
into
xor
outs
mov
jmp
fiadd
jl
add
rol
xor
pop
and
fst
push
push
outs
jecxz
fstp
addr16
mov
push
das
fadd
mov
outs
mov
cdq
neg
mov
xchg
xchg
in
cmps
push
sub
mov
stos
push
retf
jno
or
std
xor
adc
dec
enter
or
mov
xlat
pop
cmp
mov
sti
mov
arpl
call
mov
shl
adc
sub
cmp
rcl
aaa
jne
mov
add
(bad)
out
or
cdq
in
cmps
aam
loope
test
(bad)
lock
xchg
push
cmps
xchg
sbb
jmp
int3
push
or
xchg
lea
cmp
(bad)
ret
shr
mov
test
lods
mov
add
mov
out
mov
jge
leave
ja
dec
mov
push
mov
pop
bound
dec
(bad)
xor
rcr
lods
int
add
inc
movs
push
icebp
mov
inc
test
push
scas
cs
dec
imul
mov
xchg
sub
push
mov
or
ins
pop
loop
mov
jnp
and
fwait
sbb
cs
dec
cmp
icebp
out
jecxz
jl
sub
jnp
sbb
xor
xlat
push
pop
sub
test
ds
imul
jae
outs
ror
xor
adc
fs
push
xor
inc
xchg
stos
push
pop
(bad)
xor
or
jge
repnz
enter
pop
inc
pushf
add
lea
ret
lods
sti
in
sahf
pop
push
in
mov
int3
mov
adc
mov
adc
sbb
and
bound
push
daa
jmp
dec
into
call
sbb
je
sub
int3
push
add
(bad)
dec
scas
test
movs
mov
dec
push
push
push
mov
sub
sbb
lods
stos
add
int
aas
imul
clc
pop
movs
xchg
(bad)
mov
push
test
in
jnp
mov
data16
std
sbb
mov
sub
or
push
add
cmps
inc
nop
sbb
jns
retf
inc
mov
sbb
sub
or
dec
xchg
(bad)
es
mov
(bad)
push
rcl
shl
aas
push
test
mov
pop
icebp
cmp
adc
xchg
pusha
scas
inc
mov
pop
cmp
xor
(bad)
repnz
cmp
mov
push
adc
test
and
xor
and
test
dec
sbb
in
push
jmp
cmps
inc
lds
ins
jecxz
stos
inc
aaa
xor
ja
push
jo
pop
add
jbe
xchg
loope
xor
push
or
outs
jecxz
imul
dec
add
arpl
push
pop
xor
dec
dec
cmp
(bad)
call
hlt
out
xlat
dec
aam
pop
inc
in
xchg
mov
xor
jmp
dec
ss
mov
cmps
adc
mov
clc
lea
push
jge
dec
dec
push
(bad)
add
out
sar
dec
mov
mov
pop
mov
xchg
ja
aas
movs
(bad)
push
sbb
outs
fldcw
pushf
(bad)
mov
loopne
les
xchg
push
cmc
lahf
or
inc
mov
mov
and
or
cmps
adc
xchg
xchg
sub
pusha
xchg
jb
sub
loope
jbe
sbb
stos
pop
pop
push
mov
in
(bad)
movs
xchg
loope
cdq
and
inc
iret
or
push
dec
xlat
sbb
popf
cmc
xor
in
push
fistp
int
into
icebp
mov
sub
xor
mov
mov
inc
sahf
addr16
icebp
(bad)
rol
pop
mov
mov
hlt
aam
jne
ror
pop
(bad)
xchg
(bad)
rcr
sbb
jmp
mov
lahf
(bad)
sahf
sub
fwait
dec
adc
aas
pop
fmul
adc
cmp
push
in
(bad)
inc
mov
lahf
pop
push
popa
mov
pop
aam
or
xchg
arpl
xchg
and
pop
fwait
sbb
sbb
jmp
popa
(bad)
sbb
push
aad
fdivrp
jmp
mov
fisttp
leave
xchg
and
call
cmp
push
jns
mov
pushf
mov
and
pushf
ins
cwde
add
div
ret
rol
xchg
jle
dec
test
fistp
dec
adc
mov
sub
mov
mov
fidiv
sar
jmp
popf
std
mov
pop
cmc
(bad)
mov
es
add
loopne
gs
outs
stc
xchg
stos
mov
pop
lds
shl
sahf
jecxz
movs
aad
rcl
je
xchg
bound
loope
ficom
sbb
push
mov
adc
push
sbb
cmps
fdiv
cmps
push
mov
jns
dec
ret
dec
es
les
(bad)
cmps
addr16
and
xor
and
jbe
jecxz
repnz
jmp
add
inc
push
rep
lods
mov
inc
dec
xchg
repnz
icebp
stc
ja
jae
das
das
xor
and
mov
in
jo
inc
inc
mov
loope
rcr
popa
inc
dec
mov
inc
fs
mov
repz
sub
add
xlat
fld
jo
xor
in
cld
stos
inc
jbe
repnz
cmp
(bad)
std
push
sub
cwde
nop
dec
push
out
leave
fsubr
dec
pop
(bad)
sti
dec
adc
add
lds
and
xor
inc
pop
add
pop
jl
jecxz
(bad)
jg
jle
iret
cli
sub
idiv
fsub
xor
pushf
std
rol
push
mov
sub
add
stos
xchg
bound
pop
mov
and
mov
repnz
in
cmp
enter
xchg
in
sbb
(bad)
sar
cmp
dec
xor
rol
or
pop
outs
add
rol
adc
or
in
rcl
cmp
push
cld
xchg
scas
mov
jmp
mov
push
inc
xor
or
mov
push
mov
pop
xor
cmps
retf
aas
jns
xor
mov
push
icebp
in
push
retf
inc
das
lods
cmp
outs
iret
leave
xchg
mov
and
adc
sub
mov
pop
fsubp
push
or
sub
xor
xor
push
enter
pop
inc
mov
mov
or
aad
adc
mov
add
sbb
inc
arpl
pop
outs
repz
addr16
nop
mov
fst
push
mov
push
not
sbb
aad
add
arpl
add
push
jg
aaa
adc
push
(bad)
push
ret
mov
sbb
inc
pop
rcl
iret
bound
push
retf
mov
popa
push
sub
adc
push
sub
ins
jl
mov
push
push
jp
je
int
ins
jae
jns
mov
push
fcmovbe
xor
mov
fucomi
adc
and
std
push
retf
jmp
dec
iret
xchg
pop
cmc
das
jle
mov
xchg
xor
les
aas
dec
xor
push
sar
mov
and
sbb
shr
das
add
and
jle
xchg
pop
ds
loope
mov
and
iret
pusha
pop
jp
hlt
add
test
inc
in
mov
iret
pop
int
lea
lock
push
fdiv
inc
jle
inc
adc
jge
gs
lock
xchg
mov
imul
idiv
aad
call
ret
pop
jle
mov
jecxz
cmps
not
mov
adc
cmc
mov
test
adc
mov
xchg
mov
or
mov
push
jge
push
ja
xchg
push
imul
pop
inc
xor
(bad)
sub
sub
sub
aam
mov
imul
mul
sbb
push
push
mov
cs
fimul
out
dec
ret
test
inc
inc
sub
or
icebp
in
cmp
sbb
adc
outs
int
mov
inc
and
mov
cmp
or
adc
mov
sub
sbb
pop
fisub
xor
imul
jns
rcl
out
inc
xor
pop
pop
loop
sub
cdq
rcr
sub
or
rol
xlat
inc
dec
cmc
sub
mov
mov
jg
mov
fstp
push
dec
vcvtss2sd
pop
cwde
xchg
mov
ss
adc
stos
(bad)
loopne
adc
xor
xor
test
stos
adc
cmp
push
pop
lock
pushf
cmp
repz
imul
jae
mov
sti
push
add
jne
iret
xchg
inc
out
inc
into
sahf
retf
out
dec
jns
jp
ins
rol
jae
pop
call
push
dec
daa
das
out
dec
ds
scas
xchg
mov
mov
jmp
fs
and
movs
pop
xchg
jns
aaa
sub
and
call
mov
jmp
enter
popf
scas
pop
out
lods
test
into
dec
sbb
pushf
sbb
xchg
test
icebp
outs
outs
pop
jmp
ret
pushf
jge
inc
push
xchg
out
inc
add
push
aaa
inc
(bad)
int3
xor
(bad)
jle
dec
repnz
pop
cmps
cmc
mov
cmp
mov
xor
xlat
loope
jge
mov
fldenv
out
mov
push
aad
lea
movs
adc
outs
adc
fs
inc
xor
loop
adc
pushf
mov
cmp
jle
adc
sar
fadd
pop
or
push
xor
mov
mov
dec
aas
sti
jmp
and
xchg
scas
xchg
fdivr
outs
inc
fdivp
dec
push
mov
lods
mov
sbb
adc
div
cli
jb
out
fdiv
pop
cmc
in
add
sbb
test
js
icebp
jg
xor
int3
fld
outs
das
test
lahf
mov
rol
dec
pop
mov
mov
jno
dec
sub
sbb
test
leave
clc
xchg
inc
stc
nop
xchg
popa
push
cdq
cmc
dec
cs
aaa
mov
int
and
dec
jl
fbld
mov
or
in
popf
mov
sti
cmp
or
out
xlat
and
and
ret
cmp
leave
cmc
icebp
fisttp
pop
cmova
in
pop
mov
cmp
pop
adc
push
inc
pop
adc
xlat
adc
jo
jae
jne
or
js
les
sar
aad
add
xchg
inc
inc
cmps
ret
icebp
push
dec
inc
sbb
jbe
cmps
sub
push
jnp
mov
fstp
inc
fnsave
sbb
cli
sti
or
rol
or
inc
fsub
retf
xchg
mov
(bad)
jae
lock
ins
jnp
rol
inc
adc
fldenv
aad
dec
mov
aad
jno
lods
jecxz
cmp
sub
pop
test
xlat
jno
pop
adc
xor
dec
outs
xor
out
(bad)
sub
ror
cmp
ins
push
and
add
dec
push
repz
iret
adc
mov
int3
dec
lock
sub
jbe
push
sub
xchg
and
cmp
adc
sub
xor
sbb
pop
outs
in
jno
retf
rol
ja
push
jmp
cmp
and
jns
aam
rcr
bnd
and
cmp
imul
call
clc
ds
clc
retf
stc
mov
mov
pusha
fcomp
mov
fs
xchg
jmp
xchg
dec
inc
fidiv
xor
jmp
sti
pop
jno
dec
mov
scas
ja
jnp
jmp
sbb
rcl
xchg
(bad)
ins
jo
fs
jae
mov
mov
addr16
ins
mov
push
rcr
mov
jbe
xor
and
jne
jmp
xchg
mov
scas
shr
push
(bad)
retf
jl
cmps
add
out
or
or
out
add
repnz
rcl
sub
es
inc
scas
push
cmp
out
pmaddwd
push
iret
jmp
pop
je
loope
sub
push
daa
jo
nop
retf
rol
cmp
and
pushw
pop
mov
sub
lods
and
rcr
data16
lods
jae
in
ss
mov
pop
mov
sbb
jno
nop
xchg
sub
mov
int3
jmp
popa
mov
in
retf
mov
and
enter
push
(bad)
and
test
movs
mov
mov
jecxz
inc
and
ins
push
sub
jno
pop
ss
push
push
test
rcr
jg
int
xlat
fbstp
add
ins
fild
icebp
add
movs
add
or
mov
cmp
mov
sbb
mov
push
jmp
sbb
mov
sub
ss
aam
cdq
imul
int
sub
or
jecxz
ins
mov
sbb
push
push
sbb
out
xchg
dec
int3
daa
inc
mov
or
jmp
imul
dec
(bad)
int
mov
rol
aad
xor
push
scas
xlat
rol
jg
pushf
xor
jnp
push
adc
lds
sbb
mov
adc
out
inc
in
sub
mov
sub
popf
gs
repnz
popa
pop
cdq
je
out
xor
or
cmp
mul
push
adc
(bad)
aaa
sar
cmp
fisttp
inc
mov
outs
jl
imul
lahf
test
xchg
scas
ja
aad
mov
fcomi
add
jns
jo
mov
icebp
in
nop
(bad)
pushf
das
jl
jle
adc
adc
mov
gs
rcr
dec
cli
ror
sbb
daa
repnz
mov
mov
add
icebp
xchg
shl
popf
sub
add
stos
dec
or
call
stos
adc
outs
jge
outs
icebp
std
add
(bad)
jo
cld
jae
enter
addr16
mov
dec
push
mov
cld
pop
jecxz
mov
in
mov
imul
cdq
cmp
stos
imul
aam
popf
aam
repnz
retf
sub
mov
pop
mov
mov
mov
gs
mov
xor
cmp
jbe
out
jns
jmp
mov
std
sahf
inc
add
lods
inc
mov
pop
into
js
xchg
push
xchg
xchg
pop
je
sbb
dec
out
mov
daa
stc
fcomp
cmp
cs
xchg
pop
dec
ror
popf
or
dec
shl
sub
push
push
pusha
mov
push
inc
pop
cs
pop
outs
push
add
mov
fldcw
leave
ins
mov
arpl
push
jnp
pop
pop
or
arpl
add
xchg
lds
(bad)
mov
dec
dec
adc
dec
cmp
xor
xor
retf
push
(bad)
mul
test
jg
push
mov
sub
sub
or
retf
ret
ins
mov
stos
ror
sbb
sub
push
paddusb
pop
adc
std
fsubr
fnstcw
or
les
inc
jp
dec
xor
adc
adc
xor
inc
xchg
out
imul
cs
mov
adc
inc
xchg
repz
nop
loopne
jmp
mov
es
sbb
push
inc
dec
push
sub
mov
cmps
mov
pop
sub
les
mov
mov
lods
mov
dec
hlt
scas
ins
imul
xchg
sub
push
inc
add
dec
ja
les
push
and
paddsb
aad
out
test
fsub
pop
fnstenv
shl
not
arpl
call
stc
and
mov
add
lahf
mov
rol
imul
shl
cmp
cs
lods
movs
dec
ret
mov
mov
sbb
mov
jg
nop
clc
adc
sub
sub
ja
les
stos
(bad)
call
dec
mov
inc
es
mov
push
inc
xchg
mov
frstor
clc
xchg
(bad)
mov
mov
aaa
das
or
(bad)
cdq
fs
out
pop
mov
lock
sbb
icebp
xchg
popf
ret
imul
pop
movs
xor
add
sub
lods
imul
jecxz
inc
jne
xchg
jb
jno
call
cmp
dec
xor
inc
retf
add
push
dec
add
dec
push
lsl
fs
dec
or
cmp
mov
iret
loop
(bad)
mov
pop
pop
sbb
int3
xchg
int3
bound
popa
mov
in
enter
not
icebp
and
in
inc
out
out
(bad)
push
call
inc
mov
cmp
aad
and
mov
push
or
inc
stc
call
into
mov
outs
cmc
dec
fdiv
lahf
popf
sub
inc
xchg
(bad)
test
push
mov
dec
pop
in
aam
aad
ret
mov
xor
adc
sub
lds
inc
inc
addr16
or
test
clc
or
add
push
pop
cli
sub
jno
sub
xor
add
jge
mov
bound
push
imul
dec
pop
cli
xchg
sub
movs
imul
setl
xor
mov
and
scas
mov
dec
jl
add
or
clc
jl
gs
mov
aad
inc
pop
or
out
mov
aam
inc
inc
in
jecxz
add
fsubr
rcr
iret
inc
adc
push
movs
jno
rcl
sub
popf
jg
and
fdiv
gs
mov
sbb
dec
jbe
cmp
cmc
push
and
rol
sahf
int3
and
cs
sti
(bad)
idiv
lods
lea
aas
xchg
or
lds
mov
fs
pop
std
pusha
fst
out
fsubr
pop
jl
pop
push
xchg
cmp
cmp
leave
xor
call
xor
das
outs
jb
inc
dec
lds
not
adc
push
imul
push
adc
jge
mov
adc
inc
jmp
mov
call
jne
mov
inc
fwait
lea
or
sub
jmp
xchg
loopne
fistp
gs
mov
xlat
lods
stos
scas
xchg
add
pop
jb
movs
and
xor
pusha
mov
shr
xchg
push
call
into
leave
jp
ins
adc
daa
adc
push
(bad)
mov
js
test
push
push
gs
lahf
xor
and
sub
sbb
pusha
inc
lock
lods
cmp
inc
cs
xchg
jmp
movs
cli
cmp
data16
cmp
sbb
dec
popa
gs
test
fst
pop
adc
mov
push
xchg
int3
fadd
out
mov
add
sahf
inc
clc
invd
out
sub
sub
sti
ret
retf
pop
push
outs
push
fistp
push
cmps
jnp
mov
shl
std
pusha
xchg
lahf
in
xor
sub
cli
mov
sar
inc
add
lahf
inc
or
aas
in
repz
das
jl
adc
xor
push
pusha
add
aas
jo
out
xor
lods
mov
mov
jg
push
mov
sbb
jge
jno
dec
inc
add
xor
rol
cmp
aas
cmc
(bad)
jl
icebp
(bad)
mov
pop
retf
call
mov
cmp
cmp
mov
mov
test
call
fst
cmp
jo
scas
push
pop
cmp
dec
push
aas
xor
popa
ins
cwde
lds
mov
sub
mov
retf
sub
jmp
es
addr16
jbe
xchg
cmps
int
mov
leave
mov
out
jl
dec
inc
imul
sar
std
imul
xlat
pop
(bad)
mov
pop
mov
fist
push
cmp
retf
cs
mov
mov
outs
fcom
add
ror
das
cs
(bad)
aam
fwait
(bad)
mov
push
add
cmp
or
adc
ins
jb
rol
gs
push
cwde
lahf
dec
pop
mov
inc
sub
xchg
mov
(bad)
test
dec
bound
mov
cdq
shr
jecxz
xor
jecxz
pop
sar
out
mov
mov
test
repnz
push
mov
std
dec
dec
mov
jle
pop
mov
mov
inc
sbb
xchg
les
push
jne
push
test
imul
xchg
or
icebp
(bad)
jmp
mov
aad
pop
inc
sub
push
imul
fnstenv
fsubr
inc
pop
aad
dec
add
repnz
inc
movs
jnp
push
cs
mov
inc
rol
pop
mov
cmp
ds
inc
push
mov
adc
adc
lahf
arpl
out
adc
push
into
sub
lods
jmp
popa
stc
pusha
mov
jae
fcmovnu
rcr
mov
test
orps
aaa
ret
pop
lods
mov
out
push
out
(bad)
lods
js
clc
jno
jg
out
jae
fisub
loopne
and
push
mov
pop
ja
daa
mov
stc
mov
out
int3
cmp
or
(bad)
jns
in
xchg
mov
retf
int3
and
stos
cmps
fmul
fisttp
cmps
push
xor
div
call
pushf
dec
popa
xchg
cmp
aaa
fnstsw
outs
pushf
outs
push
xchg
xor
(bad)
mov
dec
sub
add
in
sbb
mov
push
xchg
inc
aas
inc
in
arpl
jge
adc
xchg
test
pop
xor
cs
pop
shr
shl
jl
mov
mov
fistp
mov
push
xchg
retf
add
sbb
jmp
mov
shl
(bad)
hlt
mov
rcl
arpl
ss
ficom
mov
es
mov
sar
sbb
jmp
(bad)
jmp
mov
mov
neg
shr
mov
lods
shl
or
pushf
fild
dec
js
jmp
add
ja
push
shl
loopne
sar
ret
rol
adc
ss
pushf
or
cmp
cmps
into
push
push
ss
sbb
adc
test
jae
out
add
fisttp
in
adc
ficom
into
cs
inc
repz
pop
out
pop
test
jl
(bad)
ins
mov
aas
fsub
mov
jl
mov
(bad)
sub
aam
pop
js
add
mov
push
mov
(bad)
sub
cmp
ja
mov
pop
push
gs
iret
inc
in
icebp
jo
mov
pop
xchg
sub
and
(bad)
test
in
mov
stos
cmp
aad
inc
adc
mov
and
mov
retf
mov
stc
pusha
scas
sti
inc
jmp
loope
in
aad
pop
xchg
inc
mov
sub
mov
inc
adc
pop
push
sbb
mov
aas
in
movd
shr
loop
mov
xchg
stos
pop
ret
pop
push
aam
inc
popa
mov
js
popa
leave
sbb
push
mov
xchg
xor
cmp
adc
das
ds
jge
(bad)
jmp
mov
data16
mov
xlat
std
add
test
call
(bad)
and
popf
retf
outs
ins
ss
fs
scas
sbb
mov
pop
mov
or
add
pop
out
test
fwait
push
lods
lds
cld
jmp
in
lds
mov
(bad)
loopne
pop
cli
rol
rcl
mov
inc
in
mov
fmul
inc
jbe
push
pop
lds
clc
cmps
dec
jno
(bad)
fcom
(bad)
push
cmps
sbb
mov
ret
mov
out
ds
loope
inc
std
imul
fndisi(8087
(bad)
fwait
xchg
xchg
or
shr
jp
retf
inc
pop
push
add
stos
jle
cwde
cmp
ins
(bad)
pop
jne
js
cli
jbe
aas
jmp
mov
sbb
test
ret
xchg
inc
outs
add
xchg
push
push
pop
out
call
aas
mov
pop
mul
lds
mov
or
pop
or
push
in
in
test
inc
cmp
cwde
dec
or
in
cmp
cdq
dec
ror
mov
aad
sub
ja
fbld
sub
ret
adc
jae
jl
mov
jle
popf
fist
(bad)
push
jo
retf
cmps
mov
imul
jmp
add
popa
call
out
popf
and
fxch
dec
mov
cmps
popf
enter
or
scas
sbb
inc
lods
adc
hlt
mov
adc
les
push
stos
in
dec
add
loopne
mov
cmp
mov
(bad)
fild
mov
(bad)
rcl
movs
inc
sub
or
pop
(bad)
stc
mov
push
pushf
std
jl
(bad)
(bad)
out
xchg
out
leave
jne
dec
push
pop
loop
jae
push
outs
clc
hlt
xchg
adc
inc
call
pop
cli
inc
jecxz
test
dec
cmp
and
add
dec
inc
enter
pop
sub
scas
xor
out
retf
adc
jge
xchg
jno
cmps
push
pop
les
stos
and
jmp
fistp
mov
xchg
imul
or
retf
fnstcw
push
aaa
xchg
stos
movs
int
xchg
repz
push
ror
xchg
adc
popf
jne
leave
xchg
xlat
xchg
call
sti
mov
jl
mov
ins
sub
pushf
mov
mov
push
add
dec
inc
mov
imul
push
dec
aas
(bad)
xor
push
test
adc
xor
pop
out
fimul
lea
test
fucomi
push
fld
xchg
sbb
sbb
mov
scas
ins
push
retf
pop
mov
packssdw
cld
sub
imul
pop
pusha
(bad)
mov
dec
dec
cmp
neg
or
loopne
fisubr
pop
daa
setge
call
fwait
test
ss
es
scas
mov
popf
push
and
std
mov
jle
push
add
add
in
hlt
movs
mov
outs
pop
cmp
sub
in
xchg
sbb
(bad)
mov
retf
cmp
jle
ins
dec
(bad)
jmp
and
adc
sub
mov
sub
and
cmps
enter
int
jp
adc
and
fimul
inc
add
fnsave
cmp
lahf
int
inc
fxch
jmp
ja
mov
jae
imul
cmps
dec
fisub
xchg
(bad)
lods
push
mov
jae
(bad)
je
push
mov
popa
fmul
pop
sub
mov
movs
adc
(bad)
imul
adc
xchg
ins
or
or
fcom
push
adc
jbe
scas
xchg
mov
push
hlt
test
inc
and
mov
call
sbb
push
push
shl
gs
mov
xor
cwde
lods
aaa
jl
imul
fwait
pop
in
shr
mov
cmp
mov
aad
not
push
ret
sub
loope
sbb
dec
xor
outs
dec
stos
arpl
cmp
stos
aad
(bad)
addr16
retf
nop
jmp
cmp
or
ret
add
sbb
jnp
hlt
rcl
sbb
push
int
cmps
fwait
scas
jg
add
jmp
repz
jns
jle
test
sub
iret
daa
shl
push
leave
rol
inc
std
mov
adc
jle
ins
cmc
add
cmps
dec
std
ret
adc
add
sbb
int
std
push
lods
adc
aad
jle
push
mov
fs
dec
sub
mov
and
popa
cmp
jecxz
daa
add
sub
jbe
jae
dec
xchg
cmps
xchg
inc
inc
lds
pop
hlt
cmovno
shl
ror
fdivr
jae
push
daa
js
js
cmc
push
pop
adc
dec
les
mov
mov
lea
enter
adc
and
jnp
mov
jno
sub
or
test
add
ret
jb
jno
fild
int
mov
xor
sbb
xchg
sub
sahf
cmp
pop
pop
imul
lock
mov
xchg
shr
and
push
mov
std
(bad)
mov
mov
xor
lods
jg
dec
mov
xchg
mov
jge
pushf
inc
gs
jno
fs
sbb
or
div
or
fidivr
arpl
out
sbb
or
retf
mov
pop
xor
xchg
mov
jg
sub
xor
inc
add
in
sub
push
pop
iret
loop
mov
push
aaa
xchg
je
sbb
adc
out
mov
ss
xchg
sub
sub
leave
and
shr
aaa
test
mov
cdq
retf
xchg
out
enter
daa
lds
sbb
cmp
mov
cmp
pop
dec
jecxz
lods
push
jmp
pop
rcl
add
ss
rcr
or
faddp
fsubp
and
mov
or
sub
fs
and
out
lock
out
adc
xchg
les
retf
cdq
adc
enter
nop
add
lock
inc
pushf
mov
ror
mov
mov
ret
push
xor
ds
or
aam
push
add
ror
jb
arpl
jge
sub
and
lock
push
mov
mov
adc
and
xor
xchg
fs
je
loopne
daa
dec
or
inc
or
fdiv
add
pop
bound
sub
cmc
ret
adc
cwde
repnz
mov
adc
(bad)
loop
mov
pop
add
popa
xor
rol
push
jle
add
xchg
xlat
fidivr
xchg
jmp
add
inc
dec
mov
(bad)
cmp
push
ror
fs
xchg
xor
daa
addr16
mov
jno
leave
dec
push
sti
sbb
repz
xor
sbb
(bad)
fdivrp
sbb
jecxz
aad
xor
mov
jae
or
fwait
shr
xchg
mov
mov
inc
inc
inc
and
movs
std
scas
pop
jmp
call
xchg
adc
lods
ds
sub
scas
hlt
lds
imul
dec
stc
std
add
jge
inc
imul
fbld
xchg
sbb
cld
arpl
mov
dec
xchg
cmc
js
das
adc
adc
xchg
sbb
inc
xchg
mov
loope
mov
fcomp
mov
sahf
xchg
sub
fild
pushf
mov
(bad)
sbb
jnp
jg
cmp
pushf
ret
retf
inc
xchg
in
bound
and
test
add
mov
xchg
sub
popa
cmp
arpl
(bad)
dec
jle
add
bound
or
lahf
xlat
adc
cmps
and
push
scas
mov
pop
push
test
pop
rcr
push
rol
xor
inc
mov
(bad)
xchg
jecxz
sbb
cmps
jns
rol
(bad)
add
in
inc
mov
addr16
mov
adc
sti
dec
sbb
out
jmp
test
icebp
jae
sbb
ja
std
shl
adc
push
push
pop
cs
cmps
xchg
int3
jmp
xchg
pop
xchg
hlt
and
sub
loope
sbb
aaa
in
out
clc
mov
push
stos
ins
cmps
mov
rol
sbb
and
sub
jecxz
mov
push
jmp
pushf
mov
push
sbb
sti
cmp
inc
lock
js
je
bound
fisubr
lahf
fsubr
and
shl
push
and
lock
inc
sbb
adc
sbb
scas
loope
mov
sahf
push
or
xchg
(bad)
xor
imul
pop
iret
cmp
xchg
or
arpl
(bad)
imul
jno
xor
jo
daa
sub
outs
jmp
dec
ins
pop
push
mov
adc
jmp
jne
push
sbb
repz
out
push
scas
adc
cmp
popf
ins
pushf
pusha
jmp
add
and
push
subps
mov
jne
cmc
out
mov
add
ret
pop
mov
mov
sub
imul
hlt
fcmovbe
add
cmp
push
fnstcw
dec
mov
cwde
push
adc
dec
mov
ins
and
cmp
sbb
aad
mov
dec
call
sbb
andnps
popa
adc
aaa
dec
out
cwde
mov
call
imul
retf
cmc
dec
xor
ret
cmps
inc
test
and
mov
call
cmp
adc
push
mov
sbb
sahf
pushf
out
cmp
sub
mov
test
(bad)
aas
push
movs
sub
jge
cld
lods
and
(bad)
pop
ss
pop
push
fsubrp
pusha
inc
(bad)
ss
jbe
repnz
movs
rol
ror
and
cmps
mov
mov
xchg
mov
jmp
or
aam
xchg
sbb
sar
pop
push
test
add
mov
inc
in
cmp
mov
jno
adc
cmp
lahf
dec
pop
mov
fadd
mov
xchg
push
mov
sti
mov
leave
loope
dec
jae
xor
fist
dec
retf
pop
(bad)
repz
loopne
pop
lds
mov
fisub
fstp
mov
aas
mov
and
jno
pushf
cmps
pop
fnstenv
cmp
scas
jno
int
addr16
push
out
xchg
retf
push
adc
add
xchg
fs
sbb
pop
inc
outs
retf
xor
cmp
retf
mov
mov
jb
fsub
xchg
xchg
xchg
mov
adc
xchg
inc
mov
jge
or
cli
jo
and
push
mov
dec
jbe
into
xchg
inc
stos
mov
out
cmp
lock
add
add
rol
inc
popf
std
inc
sub
das
push
jmp
mov
jg
pushf
push
hlt
pop
adc
daa
cld
popf
popf
cmps
cmps
adc
adc
and
mov
cmp
(bad)
clc
mov
dec
mov
jbe
xor
sub
pop
sar
imul
gs
fbld
ret
jns
jb
fdivr
xchg
mov
outs
mov
mov
jl
xchg
dec
fsub
sub
dec
fist
out
popf
retf
in
(bad)
jo
int
(bad)
and
jne
cli
inc
jbe
loope
xor
push
lods
call
add
adc
cli
iret
movs
push
leave
es
fistp
jp
jnp
ins
in
add
mov
loop
mov
dec
and
rcpps
and
cmc
inc
jno
lods
test
jecxz
js
imul
sti
pop
inc
dec
outs
js
mov
cwde
cmp
push
push
xor
and
mov
das
hlt
in
mov
add
xchg
cmp
push
add
in
jge
in
data16
push
mov
sahf
nop
inc
push
pop
dec
cmovs
lods
idiv
movs
call
push
push
jecxz
adc
pop
in
sub
stc
jnp
cmps
jae
sahf
jg
and
sti
fild
shl
xchg
mov
pop
sbb
add
xor
pop
xlat
nop
and
in
das
mov
bound
enter
stos
adc
adc
lods
(bad)
movs
sub
mov
nop
xchg
mov
ds
stos
retf
in
inc
loopne
adc
mov
hlt
out
cmp
mov
pop
push
adc
jb
mov
inc
pop
lahf
xchg
lock
push
neg
call
pop
adc
xchg
fstp
xor
adc
dec
pop
pop
push
gs
mov
cmc
cmp
sbb
outs
pop
mov
inc
retf
add
imul
es
in
mov
ds
out
mov
mov
out
pop
mov
loopne
mov
jg
stc
adc
mov
ja
and
push
out
lock
in
dec
pusha
call
int3
imul
xchg
leave
add
test
popa
or
pop
outs
leave
fnsave
aas
mov
gs
pop
jl
popa
inc
push
call
sbb
inc
rcr
mov
push
add
(bad)
add
sbb
mov
inc
xor
shr
(bad)
cmp
dec
dec
cmp
push
sti
movs
call
out
bound
adc
adc
sbb
push
retf
sub
cwde
mov
xchg
xchg
jle
sub
dec
int3
mov
(bad)
jmp
scas
mov
xchg
imul
pushf
mov
lea
and
sub
repnz
or
popf
(bad)
test
jno
test
push
stos
movs
cmc
push
dec
mov
cmp
sbb
mov
inc
sahf
pop
sbb
shl
test
mov
adc
jmp
mov
out
ins
icebp
aas
(bad)
xor
mov
loopne
addr16
sub
dec
cli
pop
fstp
jno
or
xchg
sub
cmp
stos
dec
mov
lods
aam
or
sbb
pop
xor
sub
inc
gs
or
es
test
jns
enter
mov
pop
repnz
lods
pop
ja
mov
cmp
xchg
cmps
leave
push
dec
inc
add
mov
ret
test
and
loope
jl
mov
xor
cs
adc
iret
retf
xor
call
imul
cmp
in
jne
rcr
repz
test
shl
cmc
call
dec
adc
and
daa
(bad)
ror
rcr
dec
or
push
icebp
cli
xchg
mov
arpl
or
jne
cmp
pop
cmp
(bad)
jl
imul
mov
pop
pop
or
retf
xlat
cwde
fisubr
scas
call
or
aaa
push
sbb
push
int
clc
(bad)
popa
pusha
bnd
xor
call
div
cmc
adc
dec
mov
inc
xchg
lds
or
stos
mov
fwait
push
retf
retf
scas
xchg
or
cmp
and
adc
add
cmc
sar
jp
add
lock
and
mov
mov
mov
(bad)
rcl
sub
(bad)
add
xchg
sbb
not
rcr
cmp
out
xchg
(bad)
cli
xchg
(bad)
fsub
out
xlat
mov
cdq
and
and
cmc
add
clc
sbb
fst
scas
ja
mov
jns
mov
mov
sbb
pop
mov
mov
dec
into
inc
movs
dec
inc
push
imul
xlat
dec
and
adc
pop
and
and
into
dec
sub
mov
jl
es
cmps
add
daa
outs
scas
push
ret
in
ins
inc
test
xchg
in
mov
inc
fisttp
out
cmp
mov
mov
and
loope
mov
mov
dec
jae
sar
addr16
lock
ret
outs
movs
xchg
cwde
out
lahf
xchg
pop
push
jl
in
cmp
cmp
aaa
mov
mov
jp
and
cld
dec
and
mov
push
pop
sbb
or
mov
mov
xor
popf
push
sbb
inc
aam
jnp
mov
push
mov
xchg
cld
mov
aaa
sahf
aaa
gs
sahf
lods
nop
push
and
stc
call
sub
add
mov
fdiv
cli
rcl
jne
scas
pop
scas
hlt
or
ins
leave
jno
mov
jecxz
adc
aam
sub
repz
and
pushf
xchg
into
jmp
push
xor
ficom
jl
xor
and
leave
dec
stos
jmp
fwait
or
mul
push
ins
cmp
in
pop
jne
ins
scas
sub
xchg
or
dec
iret
push
push
mov
push
sar
int
mov
cwde
std
push
clc
jb
(bad)
arpl
ss
(bad)
jge
push
mov
xlat
lds
dec
lods
imul
mov
jmp
pop
(bad)
ss
sub
dec
mov
inc
inc
mov
loop
push
pop
mov
pop
scas
test
stos
push
ins
adc
sbb
dec
(bad)
jmp
sete
stos
dec
pop
fild
xor
jl
xor
sbb
inc
call
pop
xlat
cmp
ins
xchg
xchg
add
jle
mov
inc
movs
jmp
dec
out
adc
xchg
jbe
dec
pushf
xchg
stos
ficom
pop
push
mov
xchg
sbb
pop
xchg
mov
inc
and
and
imul
test
cmc
pop
and
stos
xchg
pushf
sub
int3
add
mov
xchg
daa
jno
scas
es
pop
int3
sbb
sahf
scas
inc
fsub
stos
je
sahf
adc
mov
iret
sub
push
push
js
leave
stos
outs
std
push
aaa
movs
sub
loop
adc
push
mov
jb
fidivr
sbb
sub
iret
xor
in
pop
pop
adc
dec
or
xchg
dec
aaa
sahf
out
xchg
mov
popa
pop
xchg
mov
test
mov
fs
out
adc
cmc
xchg
inc
adc
idiv
inc
outs
mov
aam
in
rcr
mov
mov
and
(bad)
fwait
and
dec
mov
icebp
shl
pop
jne
add
mov
dec
dec
dec
dec
lods
inc
movs
or
icebp
mov
sub
or
mov
dec
sub
push
icebp
ds
sbb
mov
jecxz
gs
bound
sar
test
and
loopne
dec
lds
cld
movs
jnp
push
adc
gs
rcl
js
jecxz
cmps
cmp
and
and
and
sub
jnp
iret
fistp
mov
js
ja
fidiv
jmp
mov
lahf
dec
push
out
inc
pop
add
retf
xchg
push
cmp
adc
and
call
mov
mov
sbb
adc
pop
std
mov
jb
adc
fistp
data16
aas
inc
arpl
inc
fiadd
add
call
cmc
paddd
sub
push
sub
jo
xchg
jle
mov
xchg
les
inc
jns
or
sahf
(bad)
(bad)
jo
hlt
adc
cmps
dec
jb
ss
xor
rol
outs
add
push
and
adc
or
movs
fistp
pop
out
mov
sbb
int
adc
jns
call
mov
cmp
add
push
dec
dec
dec
mov
and
es
sbb
inc
lahf
es
sbb
out
cmps
out
movs
dec
xor
xor
jno
fs
cmc
(bad)
dec
push
jle
rcl
div
mov
cdq
cwde
xor
jmp
xchg
jmp
mul
add
or
sub
jecxz
xchg
fisttp
or
lds
pop
sahf
dec
jmp
pop
mov
cmp
pushf
mov
xchg
imul
jb
out
pop
add
clc
fisttp
sbb
jo
mov
cwde
cmp
cmp
mov
cmp
mov
xlat
push
imul
jmp
mov
sub
in
mov
push
pop
(bad)
jns
jbe
shr
mov
out
xor
ins
pusha
adc
int3
jl
fisub
stos
xor
and
aas
mov
fidiv
add
adc
sub
pop
rol
sub
loopne
pop
xchg
test
or
lock
mov
xlat
push
sahf
and
or
dec
(bad)
test
outs
xchg
int3
daa
ins
sti
xchg
in
mov
ror
mov
leave
jno
(bad)
sub
push
(bad)
dec
push
mov
xchg
div
iret
mov
or
std
fisubr
fisub
xchg
dec
dec
pop
sbb
xchg
(bad)
ins
scas
mov
sub
and
dec
popf
xchg
fnop
or
(bad)
sub
xor
jno
shl
push
cmp
push
and
(bad)
cmp
lds
sti
jns
in
and
mul
adc
dec
pusha
mov
inc
mov
mov
push
push
(bad)
ror
into
mov
ss
push
stos
push
push
sti
dec
jbe
ja
xor
fadd
inc
adc
cmp
push
pop
out
cmc
xchg
jp
loopne
cmps
shl
and
bswap
outs
call
jae
repnz
add
mov
and
inc
shr
ss
mov
inc
repnz
ror
dec
xor
adc
ins
dec
gs
pop
out
push
pop
mov
mov
jl
push
dec
inc
test
outs
cld
cdq
movs
(bad)
jecxz
push
jns
cli
mov
loop
dec
ss
pop
cs
pop
movs
cmp
mov
cmp
xchg
mov
sahf
mov
int
dec
pop
jb
lahf
sub
popf
fld
test
jmp
push
push
and
sbb
cmp
push
mov
ins
sbb
jo
les
(bad)
push
cmp
int
retf
inc
jbe
xor
sbb
push
cmps
xor
mov
xor
sbb
inc
and
es
lods
or
std
inc
popa
arpl
out
test
aaa
stos
mov
jne
hlt
cmp
dec
cli
add
sub
pop
idiv
or
sahf
outs
mov
jg
xchg
sub
fwait
mov
int
cwde
sub
mov
lds
les
jecxz
sbb
fptan
scas
test
jp
(bad)
cmps
mov
jg
test
cli
push
push
popf
stos
mov
pop
sbb
mov
int3
adc
test
xlat
xlat
rol
dec
xor
add
fs
lock
adc
xchg
adc
sbb
and
push
dec
js
mov
mov
push
icebp
xchg
push
ret
ins
inc
xchg
inc
xchg
fwait
leave
outs
sbb
out
xor
sub
in
in
bound
(bad)
stos
(bad)
ror
xchg
out
mov
dec
outs
ret
ror
gs
stos
leave
loope
pop
das
(bad)
xchg
jmp
gs
rcr
in
dec
xchg
or
sbb
add
cli
enter
(bad)
mov
xchg
dec
mov
xor
mov
push
popw
pushf
sbb
retf
and
sub
add
mov
mov
cmp
(bad)
and
out
(bad)
and
sbb
dec
xor
xlat
xor
push
lods
ret
mov
pop
jb
sti
mov
cmp
je
mov
mov
adc
sbb
sti
ds
pop
push
mov
cs
out
mov
cmps
jae
pop
mov
jp
sbb
xor
or
add
inc
xlat
out
xchg
or
jnp
sbb
bound
es
out
imul
xchg
xor
es
lahf
fs
dec
or
retf
push
mov
or
jnp
pop
inc
jns
imul
mov
xchg
in
cmps
xor
dec
stc
xchg
and
neg
sbb
outs
pop
inc
ror
xchg
test
lods
or
xchg
xor
cdq
dec
or
sub
inc
jl
ins
pop
push
ror
rol
stos
push
inc
popf
repnz
xchg
nop
sbb
lods
aad
call
adc
sahf
sbb
sub
rcl
pop
pusha
push
push
call
scas
jg
mov
dec
cmps
addr16
jno
pop
xchg
ja
or
push
aam
leave
sub
xor
mov
pop
fidiv
inc
aam
add
xor
cmps
ja
pop
addr16
test
pusha
stos
fild
xchg
loope
mov
xchg
(bad)
stos
mov
inc
lea
(bad)
std
mov
mov
cwde
and
aaa
sub
mov
dec
popa
inc
pop
xchg
sub
retf
repnz
push
(bad)
sar
push
mov
sti
fwait
test
stc
pop
shr
fcom
js
adc
dec
sbb
xor
add
ins
aas
(bad)
ret
into
sbb
pop
into
and
pusha
sub
(bad)
fist
jb
je
mov
js
jl
pop
push
imul
mov
not
adc
xor
lock
cwde
ins
add
pop
fbstp
jmp
pop
add
in
sub
dec
inc
fdiv
mov
mov
inc
ds
popf
sub
fistp
pop
jnp
gs
je
div
pushf
bound
enter
sahf
fild
scas
mov
jmp
aas
out
hlt
cmp
ret
sbb
(bad)
adc
cdq
popf
sub
mov
mov
(bad)
mov
xchg
cmps
xchg
(bad)
mov
push
push
mov
std
push
adc
rcl
out
imul
jecxz
test
xor
sbb
cld
sti
mov
fst
test
xor
lods
xchg
imul
mov
ins
pop
int
pop
lahf
xchg
sbb
mov
xchg
sub
push
xchg
shr
jno
fs
jp
cmp
ret
call
add
push
xor
sub
lock
popf
xor
loopne
cmp
fsub
cmps
mov
mov
sahf
mov
clc
xor
movs
(bad)
mov
(bad)
jmp
xor
mov
test
xlat
xor
fidivr
lds
and
arpl
xchg
rcl
jae
and
sub
dec
mov
mov
and
sbb
jno
repz
gs
not
push
cmc
fwait
push
shl
mov
stos
mov
xchg
sbb
mov
sbb
pop
sbb
sar
or
(bad)
cmp
test
je
inc
test
ja
mov
lahf
call
fdiv
adc
inc
or
stos
lods
in
fistp
ret
cli
aam
movs
jmp
dec
mov
in
mov
push
fidiv
retf
inc
push
jae
push
cmp
dec
out
mov
imul
jg
mov
outs
sbb
rcl
xor
sub
stos
and
rol
mov
stos
mov
loope
mov
cmp
(bad)
mov
lods
cdq
push
enter
sbb
mov
enter
in
test
scas
jmp
xor
xchg
adc
aad
addr16
test
out
lock
jl
jmp
sub
ficomp
jecxz
and
ins
mov
jge
push
or
cmp
xchg
add
out
adc
ret
mov
js
mov
int
xchg
test
daa
stos
out
and
lods
xor
jle
xchg
add
outs
sbb
das
popa
loopne
nop
xor
cli
aam
sub
push
shl
div
mov
fucom
adc
in
aad
fwait
cli
xchg
mov
push
fldln2
and
fsubr
stos
or
pop
adc
xor
pop
add
adc
push
cli
imul
mov
sub
aaa
jle
push
jno
test
xchg
pop
sbb
mov
pop
sub
call
aam
or
or
ffreep
cmp
sbb
pop
push
cs
jg
jns
mov
dec
test
loope
push
sub
in
ret
xchg
cmp
adc
retf
lods
xchg
jbe
dec
xchg
das
(bad)
xchg
sbb
mov
jge
xor
pop
sub
int
push
mov
pop
int3
mov
jmp
loop
bound
into
sbb
jmp
sub
adc
mov
push
imul
adc
pop
(bad)
lahf
jbe
add
dec
rol
adc
call
inc
ja
test
jge
aaa
adc
pop
mov
and
rcr
cld
sub
pop
mov
mov
(bad)
pop
std
sub
add
or
sbb
enter
inc
sbb
cmp
dec
retf
mov
and
sbb
jae
sbb
punpckldq
lods
xchg
jns
sub
pop
jp
jb
push
jo
mov
mov
sbb
test
mov
inc
outs
pop
loope
test
jp
cmps
mov
imul
cs
ds
lahf
pop
mov
add
mov
jp
dec
cli
dec
add
popa
push
fadd
nop
pop
mov
sub
dec
outs
ins
xor
aad
ss
ins
sbb
push
arpl
mul
in
add
ror
sar
es
into
add
cmps
daa
xchg
add
cdq
add
push
add
mov
jo
cmp
or
sub
inc
imul
lds
inc
hlt
or
pop
out
ss
adc
movs
mov
pop
adc
inc
sub
inc
lds
nop
pop
xlat
arpl
scas
sbb
arpl
loop
jae
out
and
mov
lds
push
mov
or
xor
dec
mov
xchg
ins
imul
dec
nop
mov
movs
fs
ja
stc
jle
jg
iret
mov
outs
loope
xchg
and
fidiv
mov
fcomp
adc
xchg
cmps
(bad)
js
jl
xchg
fcmove
mov
dec
pop
sahf
into
jae
sub
adc
inc
stos
aaa
sahf
adc
mov
add
es
outs
in
loopne
cmp
aam
jb
sbb
in
mov
push
xor
(bad)
out
imul
push
mov
cmp
or
imul
lods
xchg
pop
pop
es
jecxz
cmp
addr16
push
loope
jp
cmp
xor
xchg
in
dec
add
das
or
ss
mov
or
mov
adc
lea
inc
xor
add
cli
jecxz
xchg
pop
arpl
mov
push
add
dec
pop
icebp
out
ins
in
mov
scas
shl
xlat
adc
sub
fst
add
dec
popf
es
sbb
test
or
xor
cmc
jae
and
not
dec
and
jmp
stc
sub
mov
cmp
sbb
sub
inc
xor
dec
aas
loop
cmc
aaa
leavew
popa
sbb
jns
into
mov
lds
cdq
xor
xchg
push
jecxz
clc
lock
mov
sub
es
mov
jb
jp
imul
iret
(bad)
jmp
mov
lea
add
push
sub
xor
lds
pop
jp
arpl
xlat
les
mov
pop
aad
or
and
out
pop
stc
mov
pop
sub
inc
in
cmp
jae
pop
cdq
inc
rcl
mov
dec
sar
out
sub
jl
mov
add
or
push
in
stos
sub
adc
test
inc
loopne
push
imul
pop
loop
mov
int
imul
jle
cs
inc
dec
in
dec
scas
mov
pop
xchg
adc
jne
inc
arpl
push
enter
xchg
xchg
clc
xchg
dec
or
shl
adc
aam
pusha
xor
sbb
inc
sar
mov
lods
pop
dec
icebp
mov
loop
aaa
mov
xor
popf
cmp
aad
mov
xchg
xchg
pop
pop
add
cmc
pushw
and
outs
inc
call
retf
and
test
pop
jecxz
imul
xor
sub
cwde
push
in
out
(bad)
ficomp
out
mov
shr
inc
cmp
adc
loopne
mov
cmp
sub
xor
(bad)
ins
(bad)
and
pushf
out
xadd
xor
(bad)
add
pop
mov
ss
sar
dec
inc
sub
dec
sub
mov
leave
icebp
sub
aas
pusha
fptan
ins
push
mov
fwait
lods
imul
out
mov
adc
std
mov
inc
inc
fstp
test
in
jns
cmps
es
popa
inc
sbb
jge
adc
pushf
adc
sub
pushf
out
test
dec
and
outs
sub
push
loop
imul
ins
adc
sub
inc
push
mov
xor
fdivr
dec
and
sbb
arpl
daa
add
loopne
cwde
or
xor
mov
mov
dec
mov
sub
dec
sbb
call
mov
mov
sub
and
ror
test
loop
push
pop
sub
sbb
or
dec
ror
sbb
ficom
xchg
and
mov
cmp
aam
fst
xor
xor
test
leave
mov
out
rcl
in
ret
jb
bound
in
nop
ret
out
fs
push
jno
dec
neg
leave
ret
cs
and
mov
sub
dec
mov
hlt
jle
addr16
dec
pop
mov
adc
les
dec
out
sbb
or
mov
mov
fld
mov
xchg
adc
outs
adc
imul
inc
sahf
jmp
jbe
cmp
lock
dec
pushf
jno
xchg
inc
mov
xor
sub
test
(bad)
in
iret
and
jns
inc
jmp
and
pusha
push
lods
cmp
dec
jmp
dec
pusha
mov
cmp
jnp
jne
mov
addr16
out
or
movs
inc
js
jge
adc
inc
shr
mov
(bad)
mov
jg
out
dec
sub
test
repz
jge
or
push
mov
dec
adc
mov
inc
mov
out
mov
mov
cmp
jge
add
leave
retf
std
idiv
hlt
push
adc
jle
jp
jbe
sub
mov
pop
leave
adc
inc
add
push
cdq
xchg
jae
cs
arpl
and
mov
cdq
sahf
inc
sub
(bad)
mov
adc
inc
sbb
stos
test
outs
stos
xor
das
dec
and
loope
imul
sar
iret
cmps
js
je
sub
add
std
pop
and
adc
mov
aam
or
xchg
pop
pop
test
int3
div
call
fisttp
sub
sub
sbb
(bad)
(bad)
or
leave
repz
hlt
call
retf
mov
sbb
jns
aad
mov
(bad)
(bad)
add
push
test
pop
mov
sbb
xor
cs
add
mov
clc
dec
xchg
cmc
lds
dec
xchg
mov
and
rcl
or
les
add
sahf
mov
xchg
rol
pop
mov
and
je
out
sbb
push
ins
inc
cmp
pop
ins
popf
or
jg
aad
dec
dec
inc
pop
lahf
int
jl
push
sub
sub
push
pop
push
out
xor
and
(bad)
bound
stc
adc
add
lds
mov
ss
arpl
add
imul
mov
cmc
mov
xchg
xchg
jecxz
xor
jno
(bad)
pop
ja
push
cwde
and
dec
inc
cmp
dec
mov
mov
fcomp
bound
xchg
ss
mov
mov
pop
sub
inc
repz
pop
sub
sahf
xor
sbb
lea
and
fwait
or
sub
xor
sub
dec
fild
add
lahf
push
inc
sub
jmp
in
fsubr
mov
stos
xchg
cmp
sbb
sbb
inc
fmul
jp
dec
mov
std
jecxz
cmps
imul
scas
js
adc
mov
dec
push
(bad)
jl
int
test
(bad)
push
sub
(bad)
fld
mov
push
pop
push
arpl
sub
cli
ins
cli
into
ror
adc
loop
(bad)
xlat
xchg
div
jns
in
fadd
and
jb
push
add
sbb
ss
jo
jl
ffreep
mov
push
(bad)
and
cmp
rol
mov
rol
lahf
add
enter
fidiv
xor
mov
jmp
loope
xchg
bnd
clc
mov
xchg
push
out
xchg
repz
xchg
sub
dec
sub
data16
sbb
pop
fcmovnb
ror
add
jg
inc
and
loop
mov
dec
stc
pop
jp
clc
mov
mov
clc
jecxz
in
fnstenv
daa
mov
js
out
xor
mov
and
add
popf
js
jb
inc
shl
sub
cmp
mov
cmp
test
mov
sbb
out
int
imul
sub
jns
not
push
dec
jmp
add
lods
test
mov
sbb
imul
mov
pop
mov
pushf
mov
scas
add
ds
mov
jbe
mov
mov
js
nop
add
push
inc
mov
xchg
dec
push
mov
nop
movs
sub
inc
inc
adc
jp
nop
cmp
pop
mov
pop
fisubr
cmps
jae
ret
xor
out
and
cmp
and
imul
paddusb
mov
stc
cmps
push
out
lock
sub
xchg
enter
xor
bound
popf
sbb
shl
adc
cmp
inc
inc
pop
jmp
retf
int
(bad)
and
loopne
xlat
jne
inc
aad
push
mov
and
sahf
nop
mul
mov
jg
sub
in
xor
mov
add
dec
retf
gs
dec
jbe
jl
mov
sbb
bsf
in
adc
jmp
sub
or
pop
xchg
mov
inc
loop
mov
or
out
jecxz
icebp
outs
outs
stos
mov
mov
pop
int
mov
or
mov
sbb
loop
adc
xor
aad
fild
std
mov
lds
cmp
cs
adc
push
cmp
mov
movs
fsub
repz
cmp
popa
sub
mov
inc
pop
inc
dec
jecxz
inc
xchg
call
scas
mov
xor
push
mov
aaa
jae
sub
adc
jbe
dec
into
test
(bad)
xchg
rcl
push
movs
sbb
inc
ficom
mov
fiadd
cmps
shr
das
dec
pop
mov
sub
pop
cmps
xor
das
inc
pop
in
sbb
stc
fcmove
inc
jmp
or
inc
and
hlt
stos
xchg
rcl
dec
jne
inc
in
cmp
inc
xchg
mov
inc
pop
cmp
mov
cdq
jae
mov
movs
or
push
xor
mov
ror
iret
fnstsw
push
cmps
jle
into
jg
xor
jnp
mov
sbb
cmp
call
mov
jo
pop
xlat
jg
mov
cli
cmp
popa
jns
cmp
(bad)
in
sbb
leave
dec
mov
lock
cmps
mov
or
lock
(bad)
pop
xchg
pop
mov
sysret
pop
fld
rcl
movs
add
gs
mov
sub
and
std
leave
call
es
push
fimul
dec
and
cmp
les
dec
ja
sahf
ja
loopne
ret
push
jl
jae
in
sub
or
loope
hlt
fisttp
fisubr
je
addr16
mov
data16
scas
xchg
fadd
or
dec
adc
shr
add
push
push
out
jmp
cmps
cli
xchg
add
imul
out
xchg
rcl
cmp
mov
fwait
xchg
dec
icebp
fwait
or
int3
dec
(bad)
in
cld
and
(bad)
in
lahf
(bad)
test
adc
inc
inc
leave
pop
mov
add
int
dec
out
test
nop
sub
xchg
sbb
sbb
sbb
bound
mov
mov
adc
add
add
mov
stos
loope
push
sti
cwde
xchg
and
je
mov
push
std
movs
push
scas
(bad)
jb
cmp
mov
ss
fisttp
and
dec
ins
aaa
jp
dec
jp
and
dec
mov
dec
mov
jl
jmp
pop
ficom
fdivrp
jecxz
js
mov
mov
ins
adc
sti
or
popa
lds
cmp
cmp
and
sub
adc
mov
sub
not
mov
mov
push
xchg
xchg
daa
pushf
sub
sub
imul
popf
sbb
and
cmp
xlat
or
fidiv
dec
add
add
out
mov
adc
dec
xchg
aad
(bad)
(bad)
push
pop
sub
test
repnz
je
pop
xor
cmp
mov
sti
adc
arpl
adc
jmp
mov
xor
repnz
mov
and
adc
rcl
(bad)
or
in
jmp
imul
ss
mov
jae
fisttp
push
push
ins
xor
xor
lea
nop
dec
loope
hlt
data16
stc
sbb
jge
pop
(bad)
clc
pop
or
dec
adc
mov
mov
aaa
sbb
inc
xchg
aaa
ins
inc
and
mov
adc
push
out
mov
push
mov
xlat
test
dec
imul
enter
sub
retf
xchg
pop
fld
pop
jb
gs
call
cmps
test
add
lock
mov
ret
hlt
retf
and
fistp
(bad)
mov
mov
and
iret
add
loope
mul
pop
xor
movs
adc
jo
push
push
mov
sub
sti
mov
inc
lods
and
iret
and
mov
sub
jg
push
dec
(bad)
xlat
xor
cmp
pusha
mov
shl
cmc
push
mov
addr16
jmp
cmovno
dec
stos
push
bound
pop
push
cmps
mov
mov
jns
inc
cmps
push
cdq
pop
into
jae
xchg
in
call
(bad)
shl
inc
cli
out
mov
xchg
mov
fisttp
mov
scas
push
movs
mov
adc
shl
ins
xor
retf
cs
adc
jns
or
adc
sub
(bad)
xor
xlat
pop
jecxz
jmp
fsubr
aaa
jnp
out
mov
gs
push
sar
gs
std
sub
mov
or
lahf
fdivr
sub
push
cmp
cmps
inc
out
mov
push
pop
mov
(bad)
dec
mov
xchg
or
sub
push
dec
cmps
cmps
imul
call
dec
fbstp
bound
pop
xor
cmps
adc
scas
xchg
aad
sahf
pop
adc
mov
push
pop
cmps
xchg
dec
xchg
ja
aad
pop
pop
xchg
adc
sub
sahf
retf
add
cmp
jp
push
pusha
mov
fidiv
fidivr
and
add
fnstenv
jp
or
cmp
jo
out
sti
sub
je
fdiv
pop
imul
xchg
jbe
dec
arpl
stos
and
test
cmp
clc
inc
arpl
cld
imul
mov
(bad)
call
add
sbb
test
add
jae
push
or
mov
ficom
dec
mov
les
cmp
jmp
mov
jp
dec
ficomp
pop
cmp
dec
(bad)
mov
in
mov
imul
sub
test
fldenv
sbb
sbb
sbb
add
hlt
adc
mov
nop
(bad)
jmp
cs
rol
mov
mov
sub
bound
(bad)
jns
add
push
je
imul
not
jbe
cmp
mov
fstp
outs
cmp
das
jecxz
das
sbb
fcomp
je
out
adc
sub
ins
jbe
pusha
cmp
push
test
repz
es
jbe
inc
fxch
dec
pushf
sbb
mov
xor
loop
or
xor
push
xchg
xor
out
pop
lods
or
shr
inc
call
jp
jne
bound
fistp
lahf
aaa
dec
lock
mov
mov
lock
xchg
dec
rcl
div
shl
sar
in
jmp
shr
retf
pop
pop
sbb
or
mov
mov
daa
xchg
sbb
and
dec
(bad)
mov
and
sbb
cli
call
add
mov
push
jnp
mov
bound
aaa
std
retf
outs
hlt
(bad)
loop
mov
adc
pop
and
test
jp
stc
add
lock
mov
dec
mov
out
and
out
test
(bad)
pop
xchg
inc
pop
lds
ins
mov
mov
addr16
push
xor
mov
rcr
addr16
push
or
sbb
ins
call
mov
mov
das
(bad)
lea
jo
mov
jbe
pushw
outs
pusha
les
les
jb
daa
out
lods
push
pop
lahf
jmp
stc
pop
test
add
out
and
mov
icebp
or
xor
pop
jo
jge
and
push
cmp
or
mov
mov
jg
or
std
jg
mov
mov
stos
xchg
inc
movs
les
mov
push
lahf
xor
cmc
lods
push
ins
inc
(bad)
js
ins
pop
add
scas
(bad)
cli
push
jns
cld
frstor
(bad)
popf
jge
jbe
push
push
adc
iret
repz
sahf
hlt
sbb
or
stos
cs
sbb
mov
aas
daa
popa
adc
gs
cmc
push
je
jo
jge
ret
mov
js
adc
jo
jmp
dec
sar
int3
push
call
jo
push
xchg
cdq
ret
call
jge
jmp
cmovb
mov
hlt
stos
or
jmp
mov
cmp
cmps
jecxz
outs
pop
aas
into
jmp
fwait
mov
pop
popf
or
pop
std
jbe
retf
pop
pop
js
stos
test
dec
push
into
dec
aas
push
fbld
xor
lock
shl
imul
fiadd
test
jo
aam
or
inc
mov
cmp
nop
out
or
enter
ins
sub
sbb
clc
and
cs
pop
in
lds
test
test
movs
xchg
out
mov
ret
mov
xor
mov
daa
add
shr
push
in
out
mov
fmul
in
cwde
ja
dec
and
sbb
movs
xor
add
cmp
inc
sbb
pop
fidiv
mov
jne
out
(bad)
push
jp
ja
mov
ss
xor
loop
xor
xchg
aas
clc
ret
mov
sub
inc
sub
adc
jge
imul
leave
leave
lods
in
fwait
dec
(bad)
ss
sub
fmul
mov
(bad)
and
push
stos
movs
aam
fs
(bad)
loopne
sbb
push
sub
fwait
mov
or
lahf
jge
sub
jmp
xor
dec
inc
mov
stos
push
jbe
aas
inc
(bad)
pushf
out
push
jl
sub
les
sbb
pop
inc
mov
dec
out
stos
jb
dec
jae
or
inc
fwait
lods
cld
sbb
cmp
mov
pop
repnz
loop
cmp
daa
sbb
jo
or
in
movs
ret
dec
sbb
pop
repnz
pushf
add
adc
jns
js
pop
jns
dec
pop
mov
inc
loope
mov
lahf
jmp
mov
(bad)
es
adc
lea
aaa
es
idiv
pop
mov
mov
neg
sub
mov
or
adc
mov
xchg
pop
xchg
mov
mov
aam
sub
jle
cmps
xor
add
js
ror
dec
xlat
mov
out
enter
mov
lods
fcomp
pop
add
mov
or
hlt
mov
fiadd
in
loopne
add
push
fist
ja
push
ins
inc
sbb
sbb
adc
mov
inc
pop
xchg
mov
push
jns
adc
add
out
out
icebp
xchg
pop
and
push
cdq
inc
leave
movs
js
adc
loope
in
les
int3
xor
sahf
arpl
pop
mov
je
dec
xchg
push
cmp
lds
mov
jns
xor
xor
add
and
pushf
repnz
in
fidiv
and
sub
add
adc
dec
adc
ja
sub
cmp
push
pop
xchg
mov
pop
cmp
(bad)
xchg
dec
or
ja
or
imul
mov
jae
dec
push
adc
push
or
inc
jle
cmp
dec
enter
dec
inc
es
xor
popa
retf
jno
jl
fadd
mul
push
in
jge
int
add
adc
mov
lods
or
cdq
lds
leave
lods
jg
cmc
push
out
pop
pop
pop
xchg
mov
pop
int
and
push
pop
hlt
mov
mov
in
movs
xchg
add
test
iret
icebp
add
xor
das
or
sbb
xchg
jmp
int
mov
inc
not
jne
xor
ficom
mov
adc
xor
loopne
addr16
imul
(bad)
pop
cmp
pop
xchg
and
aam
cdq
push
ds
fdivr
cmp
dec
sbb
cmp
jnp
int3
std
push
addr16
add
xchg
or
mov
loop
lods
clc
ficom
mov
arpl
cmp
in
aad
sahf
lds
movs
hlt
mov
stc
dec
out
adc
enter
add
call
rcr
enter
mov
shl
cmp
jne
ins
mov
inc
push
scas
ins
pop
call
pop
adc
loop
(bad)
or
jmp
mov
mov
mov
add
push
mov
pop
jbe
lods
shl
pop
adc
inc
sbb
scas
xchg
jnp
add
mov
dec
rol
imul
mov
sbb
jmp
lods
jb
push
gs
mul
mov
iret
jmp
sub
push
addr16
repz
sub
icebp
or
inc
mov
(bad)
(bad)
(bad)
fdiv
jge
(bad)
aas
sub
loopne
aas
addr16
push
push
pop
and
mov
mov
js
stc
jb
iret
cmp
cmp
cmps
and
xchg
inc
in
push
add
in
inc
outs
xchg
dec
xchg
repnz
push
call
push
xor
pop
rol
lods
pop
and
pop
mov
and
in
or
dec
pop
cmp
neg
mov
lods
or
loop
out
neg
inc
cli
addr16
inc
lock
inc
add
dec
cmps
inc
test
ja
sbb
cmps
loope
test
sar
retf
inc
adc
cmp
mov
lods
mov
pop
fwait
mov
xor
lods
push
mov
ds
jo
mov
rcl
data16
push
xchg
cld
dec
xlat
fistp
jae
cmps
(bad)
sub
sub
and
xchg
loop
fs
cwde
adc
mov
iret
neg
jb
adc
sbb
fisubr
mov
cdq
xchg
sub
test
shl
pushf
retf
push
enter
aaa
push
mov
sub
mov
push
sub
les
xor
adc
outs
and
xchg
xor
mov
aas
cwde
sti
xor
pop
test
sbb
jbe
ds
stos
xor
jb
movs
jno
cld
call
daa
in
mov
cmp
xchg
lods
mov
dec
sub
in
(bad)
pusha
and
mov
int
repnz
jns
xor
inc
xor
fcom
in
fcomp
sti
push
push
iret
ret
clc
cmp
pop
stos
xchg
inc
out
(bad)
repnz
mov
inc
pop
test
setbe
cmc
(bad)
xchg
fstp
sbb
mov
adc
test
xchg
ss
paddd
dec
fmul
lahf
je
in
pslld
dec
leave
ficom
sbb
mov
xor
clc
es
ins
adc
cmps
inc
nop
lods
sbb
(bad)
pop
adc
out
lock
jb
dec
lds
retf
add
jle
out
sub
call
inc
cmps
in
fwait
in
xor
sub
(bad)
mov
push
je
mov
sbb
fucomip
(bad)
and
mov
pop
or
sti
inc
pop
or
inc
jg
mov
js
push
and
pop
xlat
sbb
call
jo
or
mov
pop
pop
es
push
and
adc
(bad)
xor
enter
pop
dec
lods
push
sub
jo
popa
mov
pop
jmp
neg
jle
(bad)
in
sub
fcom
lahf
test
lods
scas
call
inc
sbb
jmp
xor
cmp
loopne
push
cmp
xchg
iret
retf
xchg
in
fnsave
push
aad
mov
mov
adc
aad
es
cld
push
(bad)
daa
sub
mov
inc
jg
pop
jl
dec
std
dec
inc
cmp
mov
or
jmp
in
fistp
nop
mov
sub
addr16
pop
mov
hlt
scas
(bad)
in
js
sahf
call
push
sar
test
add
bound
mov
adc
xchg
movs
push
mov
xchg
inc
push
cmp
pop
jl
inc
movs
cmp
clc
adc
add
nop
push
jl
xor
std
in
mov
(bad)
ins
jmp
jae
adc
add
push
xchg
test
data16
xor
xor
sahf
out
ja
add
outs
sub
popa
cli
popa
add
(bad)
xchg
ret
or
ret
and
repz
jp
push
pop
mov
cdq
test
pop
inc
mov
mov
hlt
in
pusha
leave
fiadd
mov
xchg
leave
inc
adc
cmp
xchg
pop
mov
xchg
jmp
add
sbb
or
or
or
icebp
out
pop
sub
stos
jne
je
fcomp
inc
push
std
daa
pop
sub
mov
pop
fcomp
add
or
call
inc
dec
mov
ffreep
mov
inc
fldenv
jb
repnz
repz
push
lods
add
xchg
std
mov
mov
mov
or
out
mov
stos
and
aam
ds
add
mov
xor
or
(bad)
outs
jbe
add
xchg
or
das
jns
jae
cdq
add
xchg
ins
cmp
pop
das
xlat
ins
xor
and
mov
rcl
loope
and
jno
test
dec
jle
dec
ins
pop
pushw
test
lea
or
jo
std
outs
clc
or
fs
pop
loop
and
jge
adc
ds
mov
add
xor
xchg
add
add
movs
cmps
and
xchg
(bad)
sahf
push
pop
adc
ret
hlt
pop
xor
lock
mov
(bad)
out
aaa
jecxz
into
xor
xlat
xchg
xor
cs
xchg
mov
retf
shr
adc
push
inc
sub
mov
repz
(bad)
xchg
aaa
and
inc
loopne
xor
xchg
adc
mov
push
mov
adc
movs
popf
jp
inc
dec
mov
aaa
jbe
retf
mov
in
lea
jae
inc
mov
or
ins
mov
adc
int
idiv
pushf
ret
push
mov
aam
dec
dec
mov
xchg
dec
and
mov
mov
(bad)
mov
popf
dec
mov
out
adc
inc
loope
xchg
cmp
cmp
pop
ins
add
or
lods
fdiv
and
call
ds
push
jmp
jl
pushf
ja
jg
(bad)
rcl
adc
mov
push
rol
jae
xchg
jp
push
add
sbb
dec
pop
dec
and
(bad)
es
retf
dec
sub
pop
pop
pop
push
pushf
fbld
(bad)
inc
cmp
push
dec
cmp
in
inc
stos
and
add
mov
hlt
iret
retf
in
dec
call
ins
sbb
dec
shl
cmps
jmp
shl
neg
aaa
nop
mov
and
cmps
enter
pop
add
cdq
inc
and
movs
lods
jmp
aas
mov
lock
scas
add
sar
or
ret
push
in
xor
rcl
pop
xor
jecxz
stos
fdivr
add
cmps
idiv
jne
dec
sub
jmp
call
cmps
dec
pusha
jns
xor
xor
fsin
mov
mov
mov
cmps
cmp
jecxz
mov
cmc
rol
mov
das
sbb
cmp
movs
xchg
and
cmp
inc
jns
rcl
pop
sub
xchg
add
push
xor
pop
add
jecxz
lds
mov
push
test
add
lahf
xchg
popa
mov
in
and
js
repz
lods
push
add
in
mov
add
in
sub
cld
and
rol
daa
and
imul
pop
push
push
into
pop
imul
jg
jp
xchg
add
mov
and
mov
outs
add
adc
frstor
inc
aaa
adc
cmp
mov
inc
or
pop
(bad)
scas
pop
mov
sbb
icebp
push
sbb
call
jb
dec
imul
and
push
loope
jne
ja
add
mov
and
inc
scas
stos
mov
mov
adc
gs
push
xor
jae
retf
sar
mov
sahf
push
mov
out
call
gs
ins
sar
xchg
and
ds
mov
mov
aaa
add
push
sahf
push
cmp
jecxz
fld
cli
mov
lods
or
mov
jg
ss
cld
and
dec
jae
outs
mov
push
mov
loopne
repnz
and
and
push
sbb
mov
xchg
and
mov
je
inc
popa
test
pop
test
or
test
jns
jmp
outs
mov
ds
dec
bound
pusha
dec
sahf
fwait
push
or
fucom
adc
popf
(bad)
mov
cld
mov
cld
dec
in
stos
mov
sbb
fsubrp
shl
js
mov
mov
push
(bad)
movs
sbb
xor
(bad)
iret
lahf
sbb
retf
loope
jl
lods
xchg
ja
fdiv
push
adc
les
cmps
aas
repz
repnz
int3
xor
mov
inc
mov
ret
dec
jmp
call
enter
dec
mov
sbb
mov
push
retf
mov
rcl
lods
fs
cmp
iret
rcr
movs
cmp
xchg
repz
and
xor
outs
enter
pop
mov
add
and
or
jae
daa
add
jmp
test
mov
mov
cmp
fsubr
movs
jae
dec
adc
mov
and
xchg
sbb
xchg
pop
gs
and
sbb
hlt
inc
sbb
mov
mov
je
in
mov
movs
popf
cmp
inc
xor
(bad)
cld
das
or
xor
add
xchg
sar
cs
ret
xchg
mov
data16
rcr
stos
jne
dec
pop
jno
mov
inc
mov
cmp
out
js
ficom
cmp
mov
xor
sbb
arpl
jge
cmp
cmp
sub
jge
pop
sub
xchg
lods
out
cmp
adc
test
aam
std
or
pop
fistp
sbb
pop
jle
loop
cmp
aam
fcmovnbe
cdq
dec
ret
cmp
push
mov
imul
jne
push
mov
rol
mov
sub
pusha
loop
popf
in
jnp
xor
xchg
mov
pop
add
call
(bad)
ret
fs
stos
pop
mov
dec
xor
ss
and
xor
popa
push
movaps
adc
bound
das
xchg
jmp
xchg
push
pop
femms
js
sub
jb
popf
sbb
mov
int
cmp
enter
pop
jne
ficomp
add
mov
sbb
xchg
sub
out
imul
retf
hlt
adc
dec
and
les
stc
xor
pop
jle
sbb
push
dec
fwait
cmp
xor
and
fbld
pop
dec
popa
retf
mov
fst
jmp
inc
inc
movzx
mov
push
std
add
outs
dec
bound
xchg
and
icebp
mov
rcr
xor
dec
nop
xor
aad
stos
add
int
inc
in
leave
rol
push
add
cmc
adc
stos
adc
call
adc
cmp
(bad)
and
pop
fldenv
out
add
call
cmp
or
ror
jmp
or
mov
shl
call
cmp
shl
mov
sub
test
loopne
shl
cdq
push
inc
push
push
ins
xchg
push
push
jo
jns
loopne
inc
cmp
out
xor
mov
or
shl
mov
mov
or
jbe
push
mov
add
xchg
lds
dec
movs
mov
sbb
cs
mov
pop
ret
imul
xor
adc
shl
dec
push
dec
test
in
push
ins
jne
(bad)
pop
sbb
mov
daa
ror
xor
pop
movs
fwait
rol
hlt
xchg
adc
cld
(bad)
dec
ss
push
jle
and
loopne
jmp
cmp
imul
cmp
push
mov
xor
outs
or
clc
sub
jp
push
jecxz
jmp
mov
mov
jp
mov
outs
adc
jl
inc
test
dec
add
dec
popf
sbb
xchg
out
popf
ins
out
ror
mov
add
inc
aaa
inc
pop
out
lds
pop
inc
pop
cmps
push
add
lea
mov
test
bound
nop
(bad)
test
ins
scas
adc
std
sbb
and
lea
and
lods
push
cs
pop
cld
pop
dec
js
and
(bad)
mov
mov
cmp
ficomp
cli
dec
scas
mov
dec
and
push
std
inc
mov
inc
cmp
pop
add
(bad)
cmp
jb
mov
out
daa
xor
divps
or
inc
inc
adc
jmp
pop
pop
adc
xchg
xchg
cwde
aaa
cmc
mov
xor
dec
xchg
fcomp
push
(bad)
iret
sub
push
jb
mov
sub
push
ret
lock
aam
loop
mov
xor
test
add
lea
sbb
jbe
xchg
out
push
pop
inc
inc
pushw
mov
fsubr
imul
mov
pop
cwde
shr
pop
sbb
xlat
inc
sbb
sub
cmps
cwde
or
(bad)
repnz
mov
pop
jp
out
jno
rcl
and
adc
(bad)
repnz
test
sub
add
in
push
aaa
adc
sahf
mov
sar
cld
cmps
loopne
push
lahf
mov
push
xchg
pop
push
and
xor
mov
gs
js
dec
pushf
in
push
mov
and
jns
add
jle
pop
pop
push
iret
sub
or
cs
push
or
fbstp
mov
leave
pop
mov
pusha
aad
push
sbb
and
out
mov
das
adc
add
js
icebp
push
pop
add
test
xor
push
xchg
mov
dec
inc
movs
ret
sub
pop
cmp
dec
cmps
retf
sbb
xchg
(bad)
adc
shl
cs
adc
jg
dec
mov
es
pop
loopne
(bad)
pop
push
idiv
shufps
stc
fisttp
xchg
push
xlat
pushf
dec
jnp
jno
bound
dec
les
cli
xchg
jecxz
test
stos
mov
fucom
out
mov
inc
jne
push
in
movs
dec
imul
je
or
test
mov
cmc
scas
xchg
xor
addr16
test
xlat
data16
jl
jmp
daa
stc
xchg
jmp
nop
sub
iret
add
mov
retf
inc
outs
cmps
cwde
jmp
mov
xor
sahf
(bad)
aad
repnz
and
(bad)
pop
dec
xor
cs
add
call
inc
test
sub
out
dec
test
xor
jle
cwde
neg
stc
out
(bad)
pop
xor
in
sti
imul
sti
iret
test
js
inc
f2xm1
pop
mov
fsubp
lea
adc
mov
push
lds
lea
rcr
(bad)
ds
xor
leave
sub
test
adc
cld
es
sub
xchg
dec
jmp
mov
add
fcom
out
out
xor
or
dec
add
in
mov
(bad)
jnp
lahf
sub
pushf
call
test
push
pusha
jge
and
push
fs
into
ja
dec
inc
out
leave
ins
stos
lods
mov
or
mov
test
pop
push
push
mov
rol
cmp
dec
retf
jne
push
cld
fidivr
repnz
cmps
loopne
test
out
mov
cmp
ror
adc
fnclex
imul
adc
sbb
jae
ret
test
in
punpcklwd
aaa
and
movs
adc
ins
enter
sbb
bound
lock
push
or
mov
mov
cs
mov
scas
mov
aam
adc
pop
inc
stos
add
or
stos
push
mov
fdivp
loop
xchg
sub
jne
jle
adc
mov
into
or
data16
scas
sub
call
sbb
mov
aas
leave
call
cdq
mov
dec
cli
jp
lods
add
aaa
mov
retf
scas
loopne
mov
sbb
lahf
mov
pop
iret
fistp
je
enter
movs
scas
mov
aaa
cmp
inc
daa
jbe
int
out
int3
daa
mov
int3
arpl
ficomp
push
add
or
pop
adc
xchg
pop
cld
int
mov
outs
rcl
sub
mov
imul
dec
dec
in
xchg
das
rol
push
xlat
das
mov
mov
dec
jge
pop
sbb
inc
xchg
out
jp
mul
cwde
jmp
imul
fcomp
cmp
(bad)
stc
jle
les
inc
sub
(bad)
jmp
mov
mov
retf
gs
hlt
xor
jb
(bad)
lea
pop
repnz
fld
(bad)
(bad)
mov
lock
jnp
mov
mov
shr
popa
repz
daa
jno
das
out
call
cmp
fld
sbb
mov
jns
stc
push
adc
or
cmp
sbb
xor
mov
(bad)
cmp
push
mov
leave
add
xor
inc
and
hlt
aad
jecxz
(bad)
jne
je
pop
push
(bad)
in
cmp
pop
pop
add
stos
je
inc
pop
pushf
mov
mov
dec
fst
or
movs
daa
xor
fucom
je
leave
lock
(bad)
jmp
push
jle
ret
and
push
iret
xor
xchg
shr
inc
pop
into
pushw
sub
push
sub
mov
ror
test
jmp
sbb
or
sbb
adc
sub
imul
mov
mov
inc
mov
stc
mov
cmp
inc
sub
ror
mov
leave
jno
dec
or
fdiv
int
scas
(bad)
jg
inc
inc
and
mov
xor
add
jb
cmc
mov
push
movs
out
clc
jb
retf
jmp
pop
ror
push
mov
ins
mov
add
rcl
mov
inc
ror
sbb
sbb
sbb
xlat
ds
dec
lock
xchg
lds
xchg
push
sub
ja
pop
int
test
jmp
neg
inc
clc
movs
mov
and
addr16
(bad)
icebp
imul
imul
outs
out
adc
into
jno
jg
pop
mov
popf
in
adc
popf
mov
jb
pop
lahf
adc
cmp
push
mov
std
fisub
movs
test
or
in
mov
push
fisubr
or
cld
sub
jnp
jge
jo
scas
cs
xchg
push
gs
sub
and
jno
into
not
jb
retf
and
dec
data16
xchg
sbb
cmps
cwde
sbb
adc
mov
mov
mov
cmc
xchg
out
rcl
adc
loopne
jnp
aam
(bad)
das
js
je
sbb
pop
rcl
jb
cs
inc
sub
imul
xchg
xchg
mov
xlat
cmp
call
and
cmp
mov
mov
push
das
inc
mov
pushf
cmp
inc
mov
arpl
mov
scas
sbb
sub
pop
and
mov
mov
lahf
dec
lds
inc
xor
adc
mov
rcr
(bad)
fimul
jecxz
(bad)
or
std
dec
fist
mov
xchg
fsubr
popa
les
jne
mov
mov
sub
push
inc
push
sbb
movs
jne
pop
mov
xor
retf
sbb
add
loop
sub
push
sub
aad
iret
daa
jbe
or
mov
xor
into
retf
xor
mov
lds
sub
bound
pop
jg
xor
imul
ret
(bad)
push
movs
(bad)
pop
jecxz
and
push
xchg
mov
inc
ins
fadd
out
fstp
sbb
or
icebp
push
(bad)
shr
lock
cmp
inc
cdq
scas
mov
scas
ret
xchg
leave
(bad)
push
jo
ror
mov
in
xor
sub
and
lock
mov
shr
lods
xchg
(bad)
pushf
and
jbe
es
shl
mov
jne
jle
arpl
lods
mov
or
push
(bad)
in
adc
jne
adc
pop
rcl
xor
sbb
repnz
(bad)
mov
jg
adc
not
aas
sbb
ret
dec
sub
jbe
push
leave
push
xor
fsub
push
rcl
pop
jg
jbe
mov
push
dec
xlat
aaa
in
or
dec
cli
hlt
xchg
ret
ret
xchg
test
or
push
into
not
or
adc
adc
retf
mov
sbb
sbb
imul
mov
and
test
pop
in
cmps
das
aad
cli
mov
inc
push
push
xchg
pop
icebp
sub
push
mov
fidivr
in
addr16
xor
mov
and
sbb
xchg
lods
ja
add
call
cmps
stos
repnz
dec
xor
pusha
sbb
aad
fwait
mov
jl
mov
mov
push
pop
push
movs
inc
jg
cmps
cmp
call
test
loope
xchg
fwait
mov
pop
out
retf
inc
cs
push
sub
aam
adc
sub
or
and
and
add
sub
mov
inc
xchg
mov
stc
cmp
mov
outs
cmc
nop
push
je
stos
push
test
cmps
nop
pop
mov
cmp
push
mov
mov
xchg
mov
pop
inc
outs
rol
retf
inc
aaa
and
adc
add
ds
ds
stos
xchg
clc
inc
and
mov
aas
fsubrp
push
dec
out
mov
mov
push
inc
sbb
rol
pop
sbb
sbb
mov
nop
test
out
aaa
push
ficomp
sahf
(bad)
mov
push
test
stos
sub
(bad)
data16
push
adc
pushf
push
push
mov
outs
scas
mov
stos
cmp
mov
mov
mov
cmps
sub
pop
imul
dec
cmps
and
add
or
xchg
sub
cmp
in
jmp
sbb
or
pusha
dec
mov
lea
lahf
mov
leave
inc
ret
jo
jecxz
stos
lods
dec
add
popf
dec
ret
cmp
push
dec
lea
jno
pusha
arpl
push
inc
mov
loop
(bad)
mov
adc
cs
mov
inc
loope
mov
out
mov
xor
cmp
xor
mov
scas
adc
pop
loopne
sub
fstp
mov
dec
icebp
mov
shl
mov
inc
and
shl
jne
sbb
outs
mov
dec
pop
xchg
test
push
xor
jmp
enter
dec
js
and
pushf
rol
imul
push
pop
lds
iret
fild
cli
clc
adc
xor
iret
and
aas
mov
mov
hlt
adc
inc
scas
lods
sbb
rcpps
test
stos
push
push
sub
and
div
(bad)
fidiv
mov
imul
jle
ror
rol
mov
(bad)
cwde
dec
mov
data16
and
dec
(bad)
fld
cdq
into
push
cmp
jp
popf
mov
les
push
shl
cmps
mov
out
jns
sub
xor
(bad)
mov
test
xor
iret
inc
sub
repz
ins
sbb
push
or
jnp
in
mov
xchg
ficomp
xchg
arpl
mov
ds
mov
arpl
jne
push
mov
cmps
cld
add
hlt
jo
dec
dec
cmp
sub
xchg
retf
sub
mov
ja
sub
loop
pop
int3
in
cdq
stc
movs
cmp
pusha
sbb
sahf
mov
adc
xchg
inc
rcr
popf
scas
std
cmps
je
iret
xor
adc
cmp
gs
mov
push
addr16
das
lds
adc
sbb
inc
mov
inc
xor
cwde
loopne
cmp
retf
dec
inc
mov
mov
inc
call
adc
pop
mov
loop
dec
pop
frstor
or
push
dec
jecxz
fucomp
scas
lds
xchg
push
(bad)
fucomip
xchg
mov
sub
js
outs
mov
aad
fmul
mov
jne
and
aad
mov
mov
cmp
sbb
int
and
dec
int3
fwait
iretw
xchg
push
jmp
loopne
pop
cmc
and
jne
mov
jno
arpl
test
add
mov
mov
adc
outs
test
jns
rol
mov
mov
or
adc
pop
pop
xor
call
jecxz
(bad)
stos
push
rol
add
xchg
gs
push
adc
ss
ss
cmovp
xchg
mov
mov
scas
cmp
cmps
popf
adc
inc
clc
outs
rol
pushf
popf
and
xchg
jle
(bad)
into
push
sub
aas
cmp
xor
pop
pop
fcmovnu
pop
push
pop
jg
cmp
mov
inc
mov
xor
xor
js
out
add
shl
dec
jbe
push
shl
sbb
cmp
jno
test
scas
in
xchg
push
cli
inc
sub
jmp
or
stc
adc
xchg
mov
outs
xchg
loopne
xchg
or
cli
add
jmp
and
icebp
or
xchg
test
mov
dec
dec
or
movs
or
sub
call
hlt
loopne
sbb
pushf
sbb
cmps
mul
aam
test
jmp
nop
push
adc
ss
inc
ins
jno
cmps
push
dec
test
sub
or
stos
mov
jno
cmps
sbb
push
mov
mov
lds
xchg
push
inc
outs
cmps
fsub
adc
das
ficom
and
hlt
cmps
inc
jge
lahf
stos
inc
fs
lods
loopne
scas
scas
rcr
retf
stc
ret
sbb
inc
lods
icebp
int
cwde
xchg
sti
ret
cld
fnclex
movs
daa
xor
fs
inc
loop
gs
pop
mov
xor
push
mov
mov
popf
push
sbb
inc
pop
lds
sub
push
shl
jnp
retf
ins
and
push
sub
mov
sbb
stos
and
cmps
outs
mov
cmps
add
outs
inc
sub
mov
xor
loop
enter
pusha
cli
xchg
call
and
xor
dec
scas
jnp
fcmovnb
inc
add
repnz
add
imul
into
sbb
cmp
arpl
add
lods
ds
int
sub
in
dec
lods
mov
daa
inc
stos
aad
test
sahf
lahf
call
stos
pop
pop
into
xchg
sbb
movs
lds
sub
sbb
icebp
dec
xchg
mov
ds
movs
int
cmps
mov
cmp
cmc
movs
dec
retf
push
pop
push
adc
gs
cdq
mov
in
xchg
pop
jmp
push
mov
stos
into
loop
xor
fcom
jmp
xchg
jo
je
enter
loope
push
xor
xor
dec
pop
mov
inc
loopne
or
pop
cmp
sbb
xchg
ja
jb
mov
inc
adc
mov
jbe
ret
leave
sar
ins
sbb
dec
loop
pop
pop
push
push
mov
mov
test
inc
sub
js
movs
add
movs
or
cmp
or
add
(bad)
pop
jl
mov
sbb
fs
clc
dec
and
fdivr
scas
push
push
test
jmp
div
pop
inc
js
outs
dec
aam
std
push
cmp
add
ins
add
int
push
test
ins
push
inc
scas
inc
cdq
mov
push
pop
pushw
pushf
lock
push
fcomp
dec
pop
test
aaa
icebp
std
icebp
push
cmp
mov
and
clc
std
mov
add
or
xchg
xchg
dec
pop
leave
pop
xor
cmp
cmp
int3
shl
mov
scas
cmc
xor
loope
int
call
popa
dec
jb
retf
nop
and
jg
(bad)
cmp
mov
aad
xchg
cs
in
mov
out
mov
(bad)
jns
add
out
pop
imul
xor
pop
data16
mov
xor
aaa
cmp
fwait
gs
add
ficom
adc
into
xchg
xchg
iret
add
adc
hlt
aam
sub
adc
push
scas
cmp
fldenv
addr16
inc
out
push
je
test
xlat
sbb
leave
ss
retf
xor
xor
jecxz
dec
in
jp
add
xor
mov
pinsrw
xchg
enter
outs
stc
gs
and
dec
pop
and
popf
inc
repnz
inc
inc
aaa
jecxz
xchg
pop
or
mov
sbb
(bad)
pop
and
test
pop
je
repnz
leave
mov
fld
int
clc
and
mov
adc
sub
push
xor
jno
cmp
fs
arpl
popa
cmp
leave
sti
ja
sti
dec
hlt
dec
push
inc
xor
std
inc
dec
ds
or
ret
ret
or
sub
mov
mul
add
ret
stos
(bad)
retf
ins
into
iret
mov
outs
xchg
inc
test
and
rep
push
mov
ret
iret
out
mov
or
aad
gs
sbb
inc
out
push
pop
mov
ror
xor
into
shl
push
mov
rol
jbe
loopne
sub
cs
imul
cmp
mov
jle
sub
loope
repz
(bad)
vandps
mov
xor
iret
mov
xchg
pop
xchg
and
not
sbb
out
xor
and
lea
adc
mov
test
repz
(bad)
sbb
pop
and
mov
out
stos
pushf
out
sbb
arpl
mov
movs
mul
sub
jns
mov
shl
cld
jl
dec
clc
mov
shl
mov
sti
test
mov
call
push
aam
and
dec
dec
(bad)
loopne
and
(bad)
sbb
sbb
iret
ss
sub
push
cld
sub
inc
ja
mov
push
sub
ror
sub
je
dec
icebp
ds
sbb
icebp
push
xor
sbb
(bad)
mov
push
or
jne
ds
fst
(bad)
pop
ficom
xlat
rol
out
mov
lods
add
in
sub
cld
mov
inc
sbb
jmp
mov
jne
lods
daa
push
add
jns
mov
push
cmp
mov
and
xchg
push
push
lds
mov
sub
js
ja
int3
lahf
mov
cmc
jl
push
fidivr
daa
imul
ja
inc
jmp
shr
retf
inc
pushf
fcmovnu
mov
jb
pop
mov
in
outs
adc
jecxz
push
mov
jbe
lds
rol
int3
add
ds
mov
cmps
in
push
nop
mov
dec
cmp
popf
fcomi
cld
popa
bound
jno
sub
fdivr
mov
xor
ret
int
gs
push
mov
shr
loopne
lahf
sub
into
push
sbb
sti
(bad)
cs
xor
and
nop
cmps
fidivr
repnz
jl
hlt
out
xchg
in
out
inc
dec
mov
mov
dec
xchg
dec
div
shr
pop
into
sub
enter
ret
sbb
or
data16
mov
daa
dec
xchg
cmp
or
in
jg
mov
aad
dec
clc
pop
cmp
xchg
mov
rcl
or
push
mov
add
jp
sbb
scas
adc
mov
xor
mov
jp
test
outs
ins
pop
lds
mov
neg
xchg
add
cli
gs
fldcw
lahf
dec
mov
(bad)
scas
adc
cmp
call
mov
iret
xchg
(bad)
adc
cmp
jmp
stos
sar
cmp
iret
push
add
add
jne
xchg
mov
pop
jae
int
rcl
imul
mov
jb
rol
jnp
into
call
movs
mov
inc
gs
movs
mov
sbb
jo
enter
ret
mov
(bad)
or
dec
pusha
outs
fisttp
inc
dec
out
shr
test
(bad)
jecxz
jp
enter
popf
rol
(bad)
scas
xchg
jo
mov
lods
jae
inc
mov
pop
mov
fbstp
adc
adc
push
push
mov
out
ret
pusha
or
add
mov
call
push
pop
cmp
cs
mov
ins
pushf
push
sbb
(bad)
xchg
pop
jnp
push
pop
push
stos
and
or
ret
std
pushf
sub
sar
pop
and
(bad)
hlt
jecxz
loop
gs
and
and
imul
aas
cmps
lds
or
or
jg
adc
ret
je
out
fs
cwde
inc
into
lock
ret
xor
xchg
popf
gs
xchg
cmp
push
sbb
adc
or
and
fnstsw
cwde
or
dec
outs
jge
into
mov
dec
jmp
popa
js
add
stos
jno
xor
fsubrp
loop
jg
call
and
cmp
movs
pop
clc
(bad)
sbb
out
jle
cld
push
retf
shl
adc
rcl
push
pop
or
jnp
rol
mov
repnz
pop
out
in
rcr
mov
dec
cli
mov
xlat
(bad)
(bad)
jae
mov
cmp
int3
xor
(bad)
outs
mov
push
out
sbb
outs
jo
adc
mov
cs
xor
data16
je
add
inc
jne
pop
mov
push
sub
add
test
or
and
mov
fnstenv
cmc
repnz
xor
push
mov
dec
dec
pop
push
and
sbb
fs
outs
ret
or
mov
jb
jno
dec
xchg
fldenv
mov
bound
stos
or
rcr
fs
pop
js
xchg
bound
arpl
sub
ret
mov
push
arpl
out
ror
and
fldenv
xchg
outs
ret
dec
sbb
xor
cmps
add
mov
rol
das
xchg
jmp
outs
in
ss
pop
xchg
cli
cmp
dec
push
jle
jbe
mov
nop
jo
scas
mov
mov
out
sub
mov
or
lods
(bad)
arpl
shl
cmp
xchg
je
dec
cwde
int3
sbb
aas
push
pop
cmp
cmp
(bad)
and
out
leave
jl
idiv
xchg
xchg
sahf
dec
push
jp
pop
push
stc
arpl
(bad)
imul
mov
nop
jle
fild
(bad)
mov
lods
rcr
aad
leave
retf
push
(bad)
push
xchg
add
inc
or
movs
pop
es
je
sub
movs
add
cmps
or
repz
mov
dec
scas
push
pushf
js
outs
cmp
mov
fst
std
dec
fisttp
add
sub
cmps
push
movs
or
cmp
jp
adc
add
jmp
pushf
jmp
lods
(bad)
mov
aad
inc
mov
jbe
pop
clc
(bad)
gs
push
pop
mov
fild
mov
movs
inc
adc
sbb
jmp
mov
push
cmc
out
mov
pop
mov
cmp
or
pop
xor
pop
call
js
xchg
dec
in
adc
mov
shr
xchg
adc
ss
movs
test
and
pushf
shl
sbb
mov
add
lea
jae
(bad)
hlt
loopne
mov
(bad)
out
fistp
dec
aad
movs
aad
cmp
daa
test
sub
bound
fstp
adc
pop
add
mov
or
pop
push
addr16
imul
jge
mov
out
repnz
je
xor
sahf
adc
cmp
push
push
in
mov
sub
cmp
push
dec
mov
(bad)
(bad)
lock
pop
in
push
fadd
scas
sub
aam
sbb
arpl
inc
fst
into
into
add
push
cmp
pop
xchg
sub
stos
sub
loope
mov
jae
jno
mov
jo
cmc
xor
fnstsw
pop
inc
adc
movs
aam
xchg
push
mov
and
fld
stos
mov
mov
xor
addr16
aas
xchg
pop
add
adc
xchg
pop
and
cmps
cmc
popf
cmps
or
push
xchg
mov
pop
ror
jne
loop
ret
and
push
dec
mov
cmp
bound
sti
xchg
mov
dec
cmps
scas
jb
pop
cld
sub
jo
adc
lock
les
cmp
cmp
jmp
(bad)
repnz
xor
push
shl
ss
and
cwde
les
cmp
cld
mov
jb
cmp
dec
or
cmps
or
xchg
mov
mov
xchg
inc
rcl
mov
mov
jno
sub
lahf
xchg
dec
sbb
das
dec
mov
pop
loopne
out
cmp
pop
push
je
ja
fmul
(bad)
arpl
mov
and
adc
fisub
das
pop
cdq
aad
sbb
push
or
out
imul
mov
add
stos
xor
cmc
jl
data16
or
mov
mov
mov
push
cmc
inc
xor
loopne
xor
push
sbb
test
jmp
test
jl
inc
pushf
mov
xor
ja
in
sbb
mov
mov
or
ja
popa
lock
cmps
call
ds
jg
lods
jns
aas
(bad)
div
lods
cmps
push
sbb
jl
sar
in
inc
pop
loop
repz
cld
pop
ja
jne
fs
scas
pop
cmp
mov
test
jo
xchg
push
arpl
dec
fsub
lea
pushf
inc
sbb
out
xor
push
pop
jp
and
dec
(bad)
out
gs
and
sbb
mov
jmp
jnp
sbb
cmp
ret
es
outs
das
pop
retw
cmp
pop
(bad)
retf
mov
fild
mov
cmp
cmp
add
push
arpl
mul
jns
xchg
lods
movs
push
movs
and
adc
push
fstp
pop
fisub
fidiv
or
imul
xchg
nop
cmp
outs
and
push
push
pop
jbe
fsubr
inc
enter
cld
dec
(bad)
mov
dec
pop
stc
and
js
mov
push
xor
pop
jb
pop
stc
and
sub
cmc
mov
push
nop
cmp
cmp
stos
loop
sbb
mov
sbb
aam
int
outs
mov
mov
mov
jmp
push
outs
ins
jp
imul
ficomp
and
push
adc
retf
dec
and
test
cmc
inc
inc
js
in
ficomp
cld
loop
xchg
sbb
mov
(bad)
aaa
(bad)
cmc
mov
mov
and
or
jp
cmp
jge
sub
mov
jns
pop
scas
loopne
mov
add
pop
inc
push
and
pushf
cmc
pop
dec
out
test
add
stos
inc
pop
bound
mov
push
fnstsw
jecxz
sbb
test
ins
ficomp
mov
and
addr16
jmp
fld
lahf
imul
sub
dec
jmp
das
mov
jmp
push
pop
mov
call
push
mov
xchg
jl
or
sub
add
pushf
sbb
jae
hlt
mov
repnz
retf
dec
or
leave
in
adc
jp
push
stos
mov
icebp
pop
pop
lock
movnti
fcomi
popa
push
xor
mov
cmp
sti
xchg
(bad)
xchg
push
scas
mov
cmp
xchg
ds
sub
add
mov
test
xchg
push
inc
shr
fcom
std
leave
add
and
loop
into
sub
icebp
rcl
or
arpl
int
daa
fisttp
mov
sub
leave
sbb
jg
out
mov
adc
cmp
pop
jmp
inc
dec
jno
push
imul
jae
dec
mov
sbb
mov
inc
add
mov
and
adc
in
or
in
imul
push
cmp
aas
ss
push
ins
inc
pop
out
sahf
cmps
xor
cmc
and
dec
mov
jmp
jne
mov
jg
scas
add
jle
push
add
inc
outs
add
dec
repnz
sbb
(bad)
xor
or
inc
adc
xchg
inc
js
adc
fild
pop
mov
mov
push
jno
adc
test
mov
sahf
cmp
and
clc
add
and
xor
int
repz
in
daa
mov
xor
gs
call
fdiv
shr
mov
and
adc
mov
or
mov
mov
cmp
add
push
pop
nop
sbb
inc
data16
mov
in
dec
fld
fist
loope
cmp
mov
add
pop
arpl
mov
mov
mov
hlt
aas
es
f2xm1
jp
ficom
dec
leave
sub
popf
cmp
arpl
fsubr
mov
xor
repz
lods
jbe
int3
ds
fucom
mov
mov
jp
scas
sbb
js
cmp
popa
fcomp
popa
add
rcl
ret
stc
jmp
enter
pop
pop
call
int
dec
(bad)
into
xchg
movs
and
arpl
and
sbb
push
jecxz
inc
sub
(bad)
leave
inc
fldcw
or
(bad)
fdivp
jle
out
dec
mov
sbb
pop
pop
sahf
mov
(bad)
mov
xlat
outs
loopne
sti
ror
iret
data16
cmc
test
mov
push
push
mov
pop
or
repz
xchg
aaa
or
xor
aad
pop
xchg
mov
xor
je
xor
jnp
popa
sub
and
out
cs
jb
ret
popf
sub
movs
call
sbb
mov
inc
push
fiadd
sub
stos
fs
mov
gs
xchg
call
sbb
sub
pop
jb
and
fdivr
sub
aas
stc
(bad)
lea
cmp
mov
lahf
mov
jmp
enter
(bad)
pop
stc
add
ja
mov
xchg
inc
add
xchg
add
push
test
cld
dec
cmp
inc
ror
ret
hlt
int
xchg
ds
push
pop
cld
int
and
cmps
push
fiadd
pop
pop
mov
sub
cmp
mov
jg
push
in
mov
xor
inc
ins
cld
mov
adc
push
add
mov
movs
xchg
mov
inc
sub
(bad)
push
ficomp
xchg
dec
mov
popf
sar
pop
and
repnz
pop
cmp
fsub
cmp
jnp
lock
in
inc
jle
ins
push
cmc
div
dec
inc
or
sbb
(bad)
ins
push
jmp
in
imul
xchg
lods
fs
pop
(bad)
enter
out
push
hlt
stos
imul
dec
pop
into
push
in
adc
sub
inc
sub
add
pop
das
test
dec
add
cmc
dec
mov
adc
add
mov
in
cwde
or
retf
(bad)
cdq
jo
in
loopne
stos
into
mov
add
or
retfw
fs
cmps
xchg
iret
pushf
pop
lods
imul
imul
cs
int
adc
jb
cld
icebp
ss
pop
fst
sbb
ret
daa
add
shl
sub
aaa
mov
sbb
cmp
jo
sub
lods
bound
mov
and
pop
nop
das
or
fadd
jae
mov
mov
icebp
call
dec
fsubr
push
fisttp
mov
inc
es
pop
or
sub
push
bound
adc
push
jl
jecxz
inc
loopne
jl
shl
jecxz
push
rcr
shl
jo
push
push
ds
cmps
xor
jecxz
mov
(bad)
scas
movs
inc
cli
out
push
stos
ficom
push
(bad)
jns
and
mov
adc
aam
dec
dec
pushf
test
pop
in
sbb
fstp
pop
es
or
adc
cmp
adc
push
fsubr
pop
mov
ja
xor
pop
popa
sbb
add
movs
adc
daa
mov
adc
adc
test
or
add
or
or
jno
mov
scas
pop
fnstenv
nop
lods
jle
add
stc
scas
jns
cmc
lods
ss
mov
in
loopne
add
nop
push
ins
inc
(bad)
or
fcomp
repz
cld
push
pop
icebp
icebp
addr16
xchg
add
leave
mov
sar
punpcklbw
(bad)
adc
xchg
vcvtsi2sd
sub
jno
outs
neg
sbb
ins
test
xchg
je
xlat
jle
dec
arpl
xchg
push
mov
adc
and
dec
cmp
popf
jl
aaa
pandn
fisub
and
pop
dec
out
mov
sar
mov
pop
inc
or
es
dec
sub
push
stos
dec
xchg
mov
sbb
inc
pusha
xchg
push
sbb
push
ins
inc
arpl
pop
jge
adc
hlt
jl
pusha
inc
sbb
repnz
xor
adc
inc
repnz
mov
sub
fisttp
mov
aas
pop
cs
(bad)
or
pop
sub
int3
jo
dec
(bad)
imul
xor
mov
adc
les
push
inc
or
inc
push
cdq
mov
xor
jnp
jecxz
retf
jg
movs
jg
ja
mov
xor
and
mov
or
adc
jge
ret
sbb
jo
mov
stos
add
mov
mov
pop
mov
test
popa
xor
xchg
scas
jle
sbb
adc
ror
cmp
inc
pop
fnstsw
nop
shl
cs
popa
clc
ja
or
pop
test
cdq
out
push
fs
sbb
xchg
int
dec
cmp
cmp
les
repnz
dec
icebp
lea
adc
nop
and
mov
xor
daa
in
dec
jge
retf
je
test
mov
adc
ja
movnti
pop
out
mov
inc
pop
mov
or
sar
adc
add
adc
ja
pop
in
fwait
sbb
adc
fsubr
outs
arpl
mov
(bad)
jl
retf
test
adc
fdiv
mov
cs
cmp
or
sbb
inc
mov
in
inc
mov
imul
pop
sbb
in
jmp
cmps
inc
xor
dec
das
push
std
dec
add
mov
loopne
xchg
(bad)
inc
xlat
sub
push
sbb
sub
shl
outs
or
cmp
pop
and
push
dec
add
pop
data16
or
gs
mov
test
leave
jmp
in
sub
push
xor
xchg
cmp
dec
stos
push
xor
dec
jbe
je
ja
jp
or
cmp
mov
add
mov
out
adc
xchg
out
loope
movs
dec
imul
xchg
sbb
je
mov
in
push
cs
push
mov
je
cwde
(bad)
cmp
or
retf
xor
mov
data16
jmp
cli
mov
or
cmc
(bad)
es
rcl
dec
cs
retf
(bad)
fsincos
jl
xchg
dec
cs
xor
pop
dec
fcmovbe
sbb
jno
cs
or
xlat
mov
dec
fimul
push
(bad)
(bad)
nop
pop
fstp
out
(bad)
push
push
mov
cmp
sub
mov
cwde
adc
gs
in
sub
call
mov
xchg
or
fwait
cld
dec
ss
leave
pop
ja
mov
pop
into
push
iret
lock
mov
addr16
adc
je
or
pop
cwde
in
push
les
push
mov
test
pusha
retf
in
xor
ja
pop
dec
out
and
sahf
call
push
push
or
aaa
jb
pusha
pop
into
rcl
cmp
mov
adc
call
sub
test
sbb
xchg
mov
test
enter
or
mov
jb
call
inc
jecxz
pop
(bad)
(bad)
int3
out
arpl
test
add
iret
or
aad
xor
pop
popf
xchg
dec
stos
adc
inc
loopne
repz
lahf
addr16
aas
stc
xchg
or
pushf
add
call
je
das
sbb
mov
int
cmps
push
or
jnp
pop
fs
mov
mov
fst
dec
cmps
fs
inc
xchg
test
lds
xchg
adc
sbb
jl
jg
popa
add
cli
cwde
sub
sub
cld
rcr
cdq
jl
or
mov
fwait
sete
(bad)
ficom
or
push
dec
push
ja
mov
xchg
cmp
(bad)
add
sbb
sar
dec
sbb
and
and
mov
(bad)
loope
cdq
cmps
jg
pop
fwait
out
sub
shl
sbb
xlat
push
cmps
or
popa
loopne
mov
ds
stos
out
movs
sub
jmp
gs
imul
cmc
push
adc
pusha
in
popa
fisttp
pop
sbb
retf
cld
push
dec
aaa
pop
and
sub
or
xchg
jno
daa
pop
fist
sbb
add
push
sbb
lods
sub
aad
sub
dec
outs
sub
cmps
mov
jno
mov
xor
loopne
add
add
sbb
loopne
and
cmc
hlt
out
sub
int3
and
gs
inc
enter
push
pop
xchg
mov
stos
pop
imul
mov
xor
out
dec
jmp
hlt
push
icebp
int3
push
dec
je
inc
xchg
(bad)
mov
dec
dec
stos
dec
inc
mov
jbe
aam
cmps
outs
cmp
int
inc
push
pop
sbb
mov
mov
jo
and
call
xor
inc
xchg
stc
pusha
sbb
jmp
mov
std
rcl
xchg
mov
push
add
inc
aam
out
sbb
or
xor
test
das
test
pop
xor
ficomp
ja
(bad)
xlat
or
popf
aas
xchg
dec
shl
fld
cmps
add
sbb
inc
fnstcw
xor
jmp
add
pusha
push
dec
(bad)
and
dec
mov
imul
cwde
shr
sub
xchg
inc
jmp
mov
es
cmps
hlt
addr16
out
in
jno
sub
js
xchg
adc
loopne
rol
enter
jae
int3
pushf
jbe
clc
add
scas
je
mov
and
(bad)
add
in
mov
xor
sti
adc
fs
pop
mov
adc
rcl
jmp
xor
cmp
lahf
stos
push
clc
bound
mov
sbb
hlt
fdivr
xchg
hlt
push
sbb
jne
das
cmp
scas
adc
inc
add
stos
(bad)
sti
repnz
add
jecxz
lods
sti
iret
mov
pop
xchg
jl
mov
and
xor
pop
fcmovu
jmp
lock
ss
in
push
and
push
dec
adc
dec
daa
shl
pop
mov
in
(bad)
movs
movs
mov
in
sbb
inc
(bad)
stc
popf
imul
cdq
aaa
sahf
add
inc
and
mov
and
and
les
ror
push
fadd
neg
mov
leave
aas
fidiv
test
aas
adc
and
jle
cld
fwait
retf
lds
sbb
jl
xor
sbb
jno
sub
(bad)
stc
lock
xlat
mov
and
inc
pop
push
and
add
int3
shl
pop
pop
mov
and
mov
pop
xchg
dec
mov
in
push
call
add
adc
mov
gs
and
ins
std
loop
mov
push
push
dec
test
sub
push
mov
dec
je
inc
inc
pop
nop
pop
(bad)
neg
pusha
xchg
(bad)
pop
nop
inc
mov
jo
or
in
xchg
int
test
rol
jmp
jb
jmp
mov
or
pusha
push
or
rcr
pop
mov
push
pop
shl
test
in
push
mov
es
pusha
sub
add
mov
fdiv
(bad)
adc
out
hlt
sbb
sub
fld
popa
add
dec
cmp
inc
mov
push
out
outs
mov
xchg
mov
js
mov
scas
sbb
jne
cmc
cmp
xor
sahf
adc
jnp
nop
in
aas
sub
lahf
sbb
aas
cmps
rol
mov
adc
xor
and
or
aad
loop
movs
fistp
push
add
inc
retf
fisub
inc
pop
mov
pop
test
(bad)
push
shl
adc
xlat
mov
ds
dec
dec
or
das
or
jbe
inc
inc
aam
pop
xchg
retf
mov
shl
repnz
cdq
rcr
sub
jb
leave
dec
sbb
in
test
ss
idiv
dec
jmp
(bad)
(bad)
retf
(bad)
out
push
cmp
(bad)
pusha
mov
push
imul
cmp
xchg
xchg
or
fimul
std
pop
test
sub
and
hlt
cwde
retf
int3
pop
adc
xlat
popa
pop
test
push
mov
(bad)
test
dec
fistp
xchg
mov
and
xor
pop
add
jp
jl
sub
mov
xchg
xor
pop
scas
int
push
(bad)
ds
sbb
outs
out
lock
iret
mov
push
sbb
movs
rcr
out
loop
icebp
arpl
lods
loopne
pop
pop
push
cdq
lods
std
mov
popf
test
mov
add
dec
xor
adc
sbb
sti
(bad)
outs
jl
sahf
sub
adc
adc
out
jmp
xlat
push
jae
retf
push
lahf
leave
dec
fcom
inc
fild
movs
push
(bad)
out
std
iret
cmp
out
inc
sub
jns
das
je
das
sbb
jecxz
push
push
mul
xchg
xchg
scas
jge
jge
fmul
mov
jo
stc
in
out
ret
outs
pop
ins
cmc
loope
xor
mov
test
data16
push
mov
mov
push
enter
mov
je
and
lahf
mov
ret
sahf
enter
mov
mov
enter
sahf
loopne
dec
cmp
mov
fidivr
js
jecxz
sub
outs
pop
jae
enter
xchg
xor
test
outs
jle
(bad)
jns
(bad)
jnp
and
add
lods
and
or
fiadd
pop
dec
adc
in
jbe
xor
jnp
cmp
pop
into
pop
lods
cmps
aam
inc
cli
sti
mov
retf
add
add
(bad)
lds
jp
pop
cld
out
xchg
sbb
xchg
sub
test
or
mov
loopne
add
push
inc
in
mov
cmps
imul
mov
movs
mov
dec
inc
xchg
sub
jae
jb
xor
adc
pop
retf
sub
cmp
cs
int
inc
fsub
jbe
repnz
jp
test
cmps
and
mov
hlt
pop
fwait
loopne
scas
xor
pop
inc
inc
sub
mov
cmp
mov
outs
inc
pop
loop
or
icebp
int
call
or
xor
jno
mov
dec
inc
push
or
xchg
pop
ins
lock
dec
xor
sub
add
call
clc
rcl
outs
dec
out
cmc
aam
xor
(bad)
or
cmp
(bad)
mov
rcl
(bad)
mov
outs
es
push
pushf
inc
sub
xor
push
enter
xor
out
retf
ret
cmp
sar
movs
(bad)
xchg
mov
mov
mov
jns
and
jo
test
mov
add
repz
add
loop
mov
aam
mov
les
in
out
out
mov
jno
popf
dec
mov
out
cmp
outs
pop
sbb
inc
mov
adc
shl
repnz
pop
mov
jae
sub
fnstenv
dec
fidivr
jge
fbld
jno
inc
push
adc
cmp
(bad)
sbb
call
out
push
push
sbb
fwait
stos
int3
dec
xchg
xchg
sbb
add
cmp
cmp
inc
lahf
jmp
imul
jnp
sub
sahf
jmp
leave
jae
push
push
ret
xor
xchg
fcmovbe
jge
jo
xor
imul
(bad)
jae
test
and
(bad)
jecxz
and
in
aam
ret
clc
pop
cmps
lahf
push
cs
les
push
mov
jecxz
adc
lock
into
sub
aaa
sti
xor
jmp
out
loop
xchg
cmps
mov
add
cmp
js
jecxz
push
pop
mov
lahf
mov
adc
push
je
jae
fidivr
test
pop
test
xchg
repz
mov
ret
mov
sbb
push
dec
sub
push
push
imul
pop
mov
push
jnp
loopne
not
lods
xchg
jne
xor
mov
jp
jmp
cmps
push
cdq
inc
xchg
ror
nop
xlat
mov
jl
rol
shl
add
out
fidivr
mov
push
icebp
pop
jmp
push
popa
pop
std
jns
dec
cmp
call
call
adc
mov
add
jle
dec
or
lds
adc
std
jno
jae
dec
test
jmp
jb
jne
repnz
ret
call
or
imul
push
test
sar
shr
ret
mov
dec
dec
hlt
jae
rol
in
out
into
and
mov
or
sub
xchg
adc
leave
stos
sahf
rol
std
sbb
neg
enter
jnp
pop
cmp
or
sub
pop
mov
fbstp
inc
add
cmp
dec
aas
test
jae
dec
jnp
mov
pop
lods
fs
jle
pop
test
rol
pop
mov
inc
cmp
or
fnstsw
scas
sbb
jge
sub
test
cld
adc
stos
cmp
adc
stos
loope
popa
sbb
xor
sti
hlt
popf
hlt
mov
daa
and
cli
add
inc
lods
fwait
dec
popa
cmova
xchg
scas
hlt
std
inc
sub
mov
lahf
js
or
push
mov
loop
shr
mov
cmps
xor
sahf
mov
mov
xchg
test
rol
cmp
jo
fadd
pop
xlat
push
mov
ins
sahf
cwde
or
mov
mov
jb
pop
mov
call
mov
add
cmp
jmp
sub
push
sbb
jne
inc
adc
mov
sti
mov
adc
mov
ja
inc
lahf
push
sub
xor
and
push
jnp
call
inc
jbe
in
cmp
cmc
pop
ret
cmp
aad
hlt
sti
cs
jecxz
sub
or
xor
mov
jns
adc
mov
mov
loope
mov
cli
mov
out
in
cmps
jns
ret
sub
xchg
fstp
pop
dec
rcl
pushf
jmp
das
(bad)
in
test
std
out
mov
int
mov
xchg
ja
mov
in
adc
(bad)
lock
mov
jmp
sub
out
add
cmp
or
mov
mov
dec
add
adc
mov
sub
sbb
inc
mov
push
cmc
pop
push
inc
or
jmp
shl
mov
repz
aad
inc
sub
or
stos
xchg
stos
outs
aas
sbb
xchg
ins
jle
sub
rol
stos
mov
cmp
cmp
inc
mov
pop
jnp
sbb
or
jmp
push
loopne
mov
pusha
pop
sub
stos
push
mov
out
cmp
push
ror
xor
xchg
repnz
dec
imul
jae
sbb
push
inc
mov
pop
cmp
and
jp
sub
adc
neg
imul
xchg
xchg
jae
ret
sub
jmp
xor
popa
jo
add
jno
mov
lahf
aas
(bad)
ficomp
xchg
add
inc
sub
mov
add
cmps
jecxz
push
cmp
xchg
retf
loopne
iret
lahf
jmp
mov
fisub
mov
jo
sbb
pop
arpl
retf
lock
adc
sbb
pushf
push
mov
sub
mov
adc
loopne
gs
enter
mov
push
popf
adc
pop
loop
adc
sbb
cmc
mov
js
sub
pop
xchg
pop
ds
pop
xor
std
mov
xor
jns
inc
adc
inc
sub
fdiv
aaa
dec
mov
push
arpl
pop
sti
lds
fdivp
in
cmps
xrelease
mov
jne
clc
repnz
mov
xor
fcom
in
lods
fistp
jae
or
(bad)
mov
es
push
inc
subps
rol
add
ins
xor
sbb
in
fs
or
dec
mov
(bad)
inc
xchg
inc
(bad)
and
call
jecxz
mov
out
std
dec
or
pusha
adc
sub
xlat
(bad)
mov
lods
call
sbb
fsub
adc
or
cdq
ror
mov
push
int
out
xadd
nop
ret
pop
push
aam
ins
jno
sub
jno
movs
adc
mov
xor
movsx
jo
xchg
dec
out
shl
mov
mov
xor
fsub
inc
xchg
mov
pop
adc
xchg
enter
and
xchg
inc
jno
cmp
xchg
xchg
sahf
repz
imul
cmp
cmp
mov
call
dec
cli
inc
inc
addr16
jo
sbb
jle
xchg
sub
jnp
add
push
xchg
test
ficom
mov
ret
loope
jp
sub
mov
jge
pop
pop
fmul
or
push
mov
and
cmp
mov
add
or
cmp
fiadd
int
cmp
or
ja
xchg
adc
cmps
jbe
push
(bad)
icebp
xlat
mov
and
not
jno
ins
add
sahf
sti
retf
inc
mov
test
mov
pop
test
cmp
or
cmp
sar
sub
test
imul
mov
jo
(bad)
push
sbb
and
jae
retf
dec
xchg
push
sbb
addr16
cli
repnz
pop
jne
xchg
sub
push
push
pop
lods
xchg
dec
jl
cmp
sub
sub
(bad)
inc
jbe
into
popa
pop
test
xchg
add
shr
fdivr
int
push
fldcw
or
gs
mov
mov
push
shl
loop
mov
xlat
sti
mov
dec
test
lea
cmp
push
stos
outs
movs
into
jmp
es
xor
es
mov
(bad)
cmp
neg
jle
push
js
or
nop
lods
jge
cmp
xlat
(bad)
pushf
lea
jnp
cmp
push
ret
dec
inc
out
mov
jp
jae
das
out
rcl
jo
jmp
sbb
imul
pushf
inc
faddp
adc
pop
xor
das
mov
(bad)
push
mov
movs
mov
cmp
dec
lods
xchg
movs
fistp
(bad)
arpl
xchg
jecxz
mov
or
call
inc
mov
jns
stos
dec
xchg
dec
popf
test
cwde
pop
jp
jo
stc
add
outs
sub
dec
jae
jg
(bad)
out
sbb
fwait
pop
jne
int
enter
aas
inc
js
sbb
adc
idiv
lds
xor
xor
dec
push
mov
mov
and
push
mov
and
inc
add
fmulp
dec
mov
shl
repnz
jbe
les
mov
in
or
mov
retf
mov
pop
jl
xchg
cs
test
mov
mov
jle
in
movs
sbb
jno
lods
mov
jne
push
stos
or
retf
cdq
push
daa
sub
hlt
inc
dec
mov
cwde
fwait
dec
xor
shr
xchg
mov
inc
lods
je
mov
push
mov
cmp
out
mov
movs
or
pop
fnstenv
mov
popa
repnz
arpl
repz
cmp
dec
lahf
stos
cld
test
stos
hlt
push
pop
stos
inc
mov
lahf
lahf
and
mov
mov
jmp
pop
ret
lods
pop
stos
out
rol
iret
sahf
mov
pushf
push
dec
(bad)
outs
xor
scas
int3
(bad)
xchg
not
or
imul
fldenv
or
rol
das
mov
mov
mov
ror
xor
das
(bad)
retf
int3
mov
add
sahf
xchg
cmc
inc
push
out
popa
dec
push
in
dec
mov
jl
daa
cmp
add
fldcw
ret
mov
sub
mov
retf
icebp
pop
pop
xchg
imul
out
imul
adc
in
ins
aam
retf
xor
pusha
mov
or
inc
retf
in
pop
jle
loope
jp
mov
xor
mov
cmps
icebp
xchg
push
pop
loope
adc
loop
inc
mov
adc
jb
sbb
or
popa
cmc
leave
daa
push
pop
rcr
(bad)
pusha
pop
popa
std
pop
or
and
test
in
aas
adc
mov
aaa
popa
test
dec
mov
cmp
push
inc
xor
mov
fsub
out
mov
outs
retf
cmp
int3
repz
stos
push
cmp
cmp
adc
stos
mov
sub
inc
pop
mov
sub
mov
adc
push
jae
sbb
in
out
stc
scas
mov
sti
or
or
(bad)
adc
xchg
adc
mov
cwde
outs
int3
adc
rcr
inc
pop
out
mov
mov
push
pop
or
sub
scas
arpl
out
push
imul
push
stc
nop
pop
sub
out
ss
pop
inc
jmp
sub
fcomp
int
int3
xchg
loope
fist
inc
call
dec
push
mov
fwait
ins
mov
leave
in
clc
pop
sub
data16
test
xchg
and
push
push
call
lock
or
xchg
and
cli
mov
dec
cmp
test
pop
push
mov
add
das
mov
jg
sbb
jns
xchg
push
bound
cmp
xchg
pop
add
ffree
ins
and
ins
in
stos
mov
ret
cs
and
mov
shr
jmp
sar
dec
(bad)
sbb
cmps
int3
pop
jbe
sub
push
mov
scas
dec
jae
(bad)
push
mov
inc
mov
or
xchg
fsub
sub
xor
outs
or
(bad)
cmp
sbb
mov
adc
dec
sub
daa
mov
lods
add
pop
fwait
adc
mov
push
adc
mov
xchg
aaa
push
push
retf
mov
cmc
nop
adc
ffreep
sar
or
hlt
and
mov
cdq
(bad)
scas
outs
push
outs
sub
sbb
mov
enter
sub
and
(bad)
call
push
scas
pop
and
enter
mov
retf
push
cmp
leave
lods
add
in
jo
dec
mov
rcl
jns
stc
xchg
mov
and
outs
clc
adc
mov
fisttp
xchg
add
test
fisubr
cwde
add
cmp
nop
push
popa
sub
stc
adc
lea
fs
fdivr
push
xchg
imul
mov
shl
mov
pushf
dec
cmp
es
ret
sbb
mov
push
pop
mov
lods
shl
shl
and
xor
mov
jne
int3
xor
or
dec
cmps
xchg
xchg
xor
add
icebp
push
cmps
scas
fiadd
add
pushf
enter
cdq
push
ror
inc
xlat
iret
jns
inc
xor
push
sar
hlt
pop
xor
stos
loop
add
mov
leave
jmp
xlat
jne
ror
sbb
sbb
mov
pop
es
fcomp
or
les
cmp
cmp
pop
add
mov
sub
sub
gs
xchg
imul
hlt
sbb
(bad)
mov
adc
or
push
mov
ins
push
push
push
movs
dec
pusha
mov
mov
(bad)
ins
xor
dec
jmp
pop
add
shl
mov
mov
cld
cmc
in
popa
cmp
into
les
fdivr
fwait
leave
cmps
cmp
in
push
mov
shr
movs
or
test
pop
cs
sbb
pusha
outs
push
(bad)
(bad)
xchg
pop
jmp
test
lock
lahf
gs
lods
nop
and
mov
scas
sub
imul
ins
xchg
pop
ins
fs
or
arpl
(bad)
fcom
ret
in
mov
outs
pop
stc
push
xchg
cmp
mov
movs
imul
out
call
ret
pop
ud1
jl
xchg
rcr
push
sub
jnp
cmp
repz
pusha
cmp
or
pop
ss
and
mov
lahf
sbb
xor
cmps
(bad)
jae
xlat
mov
lea
adc
jmp
es
ret
mov
or
mov
repz
push
stos
cmps
(bad)
shl
and
or
inc
xor
cmps
sbb
push
scas
push
jb
cld
or
or
push
lahf
jno
jo
ficomp
data16
pop
xchg
sbb
jno
adc
leave
icebp
cwde
ja
or
mov
mov
sub
add
shr
xchg
pushf
out
or
sbb
dec
addr16
fsub
les
and
popa
sbb
sti
adc
xor
cmp
ss
(bad)
leave
add
inc
cmp
rol
rcl
std
test
aam
iret
push
int3
mov
pop
xlat
dec
or
(bad)
nop
mov
stos
aaa
ret
std
lods
sub
xchg
frstor
popf
loopne
bound
test
push
pop
rol
mov
add
xor
adc
xlat
jl
ror
cmp
es
clc
pop
cmps
stos
xor
jmp
or
sub
push
mov
aam
out
xor
mov
ficomp
mov
mov
mov
fwait
jp
fidiv
cmps
div
dec
jbe
mov
jl
and
pop
popa
lahf
xlat
pop
out
or
enter
mov
ins
inc
stc
(bad)
add
sbb
sbb
fidivr
int
jbe
pop
add
in
cmp
dec
out
lds
mov
cwde
mov
cmp
cdq
mov
pop
mov
sbb
sbb
mov
mov
mov
sahf
rcr
push
cmp
xor
sbb
loope
call
mov
mov
in
mov
ret
popf
es
and
mov
push
inc
fstp
jle
jg
cmps
ins
push
sub
xchg
retf
mov
jns
nop
popa
je
push
add
pop
out
cwde
dec
fstp
and
push
pop
jb
mov
ins
push
xlat
mov
mov
in
xchg
and
xor
dec
jge
mov
cmp
mov
pop
push
icebp
fild
inc
clc
sub
mov
leave
stc
out
push
mov
adc
into
scas
mov
and
data16
movs
cwde
outs
xchg
cmp
test
or
es
sbb
or
cs
out
mov
(bad)
xor
pop
inc
mov
or
push
hlt
dec
data16
jae
movs
or
sub
sub
out
pop
bswap
imul
in
mov
add
call
fst
add
ret
sar
outs
mov
sbb
data16
fcmovnb
dec
jb
xchg
or
mov
mov
dec
je
icebp
sbb
lahf
sub
scas
xlat
push
xchg
inc
int
cmps
jge
fld1
push
outs
out
loopne
adc
int3
loop
and
inc
ins
inc
cmp
pushf
loope
stos
mov
int
inc
cmps
mov
add
(bad)
into
aad
lods
jl
in
push
aad
jns
jne
lods
jnp
aam
sub
jge
mov
ins
or
and
and
or
shr
and
inc
mov
scas
movs
adc
add
xor
and
lods
cmp
mov
mov
int3
add
push
cmp
ins
xor
adc
neg
add
dec
jnp
pop
clc
cmp
pop
cld
leave
mov
add
and
sub
retf
xlat
jp
or
fwait
aad
movs
add
sub
loop
xor
adc
push
ins
mov
fwait
mov
dec
cmp
jne
ret
mov
or
mov
dec
jnp
(bad)
ds
mov
mov
(bad)
int
lds
fucom
fst
nop
jg
fsubr
inc
xor
ins
je
xlat
inc
pusha
shl
ja
pop
mov
sub
inc
adc
dec
dec
jp
fdivr
pop
cmp
xor
adc
xchg
fadd
jne
loopne
sub
jb
pusha
jbe
jmp
add
jle
aaa
fld
fs
push
es
fidiv
or
push
xor
ins
in
and
dec
cmp
xlat
and
into
sub
pop
inc
(bad)
jno
inc
push
add
loopne
xchg
fwait
sti
sahf
mov
adc
or
call
les
(bad)
rcr
(bad)
lods
mov
ror
icebp
fild
(bad)
(bad)
scas
pop
sub
(bad)
jbe
inc
inc
dec
imul
les
cdq
bound
jecxz
in
inc
mov
popa
loope
pop
or
nop
fsubr
int
in
dec
pop
(bad)
cs
ss
call
mov
xchg
nop
(bad)
stos
mov
fld
int
out
xor
js
std
jecxz
in
rcr
jns
dec
cs
jnp
cdq
mov
popa
repnz
add
mov
shl
sub
mov
adc
lock
leave
retf
loop
push
fs
retf
push
sub
push
(bad)
mov
mov
aad
ficomp
(bad)
or
cdq
push
nop
dec
call
cmp
stos
movs
sar
mov
inc
hlt
push
je
nop
(bad)
(bad)
test
mul
push
dec
mov
mov
js
xchg
pop
lgs
imul
ss
jmp
xor
paddq
mov
repnz
push
loope
xchg
mov
(bad)
aas
dec
and
test
scas
out
ficom
out
cmp
cmp
push
or
sbb
addr16
movs
bound
sub
cwde
loope
pop
inc
idiv
and
outs
pop
movs
xor
pop
xlat
sti
inc
retf
jecxz
mov
data16
retf
nop
jle
xchg
(bad)
cmp
cmp
in
into
jo
cwde
mov
sub
(bad)
fimul
xchg
xor
test
inc
pop
inc
cwde
sbb
outs
daa
xchg
addr16
mov
call
sti
add
movs
mov
fwait
icebp
ds
les
xchg
or
cwde
mov
es
jae
xchg
adc
jne
dec
test
fmul
div
enter
shl
mov
cmp
sbb
sbb
mov
or
mov
mov
mov
push
sub
fmul
pop
jne
enter
outs
or
outs
mov
test
jmp
xor
icebp
xor
mov
ins
out
adc
push
das
sub
sar
fndisi(8087
sub
arpl
add
mov
add
xor
fwait
iret
mov
xlat
and
add
inc
jb
mov
push
jecxz
(bad)
dec
sti
lock
dec
add
lahf
pop
outs
mov
mov
adc
gs
aaa
mov
add
lods
jle
cmp
cdq
sbb
imul
and
pop
push
retf
scas
mov
out
mul
adc
mov
lahf
push
or
daa
mov
dec
imul
retf
stos
fisub
outs
lock
(bad)
clc
or
sub
repz
pop
or
(bad)
mov
iret
or
add
sbb
jno
fidivr
into
out
xor
das
stc
rol
leave
sub
mov
push
addr16
mov
and
rcr
js
add
cli
fsubp
sbb
xor
bound
pop
mov
sbb
xchg
xor
shl
movs
dec
repnz
pop
stos
int3
mov
mov
(bad)
test
jno
push
sub
xchg
adc
cmps
(bad)
jnp
push
xor
(bad)
add
adc
or
mov
xchg
mov
mov
inc
addr16
iret
xchg
imul
(bad)
jle
push
mov
or
inc
test
ror
nop
cmovs
cmp
lods
push
xchg
lock
pushf
hlt
xchg
fwait
pop
push
mov
xchg
xor
sbb
mov
sub
test
arpl
cmp
es
test
jo
and
(bad)
(bad)
in
sub
mov
test
lods
pop
imul
sbb
lock
rcr
ins
std
mov
sbb
pop
inc
stos
push
and
jg
jno
imul
pop
or
cmp
jbe
lock
dec
cmp
retf
mov
sbb
hlt
test
pop
and
or
jg
mov
out
sub
pop
add
fisubr
cmp
test
daa
in
xchg
mov
mov
sub
xchg
retf
(bad)
ss
not
mov
jbe
fscale
cmc
push
retf
pop
movs
adc
mov
mov
aad
fnstsw
sar
addr16
xor
out
ret
scas
add
cli
rol
clc
jno
pop
xor
stc
fdiv
mov
icebp
push
sbb
xchg
shl
mov
sbb
cs
pop
pop
jb
aaa
mov
mov
cmps
push
test
mov
xlat
(bad)
and
sbb
aad
shr
fsubrp
dec
ss
ftst
outs
out
arpl
jle
inc
aam
(bad)
cmps
xor
inc
stos
pusha
inc
and
pop
dec
cmps
ss
in
pop
cmp
adc
push
mov
imul
retf
mov
pusha
shl
mov
jl
dec
mov
sub
(bad)
retf
ret
mov
das
call
call
ja
mov
mov
lods
lsl
cmp
fwait
add
pop
xor
and
mov
push
(bad)
or
mov
jno
neg
jmp
(bad)
cmp
mov
inc
cli
mov
cmp
sub
adc
repnz
frstor
ret
or
or
ja
ins
in
test
cmc
push
div
dec
mov
cmc
pop
jb
out
popa
cmp
fcom
movs
xor
shl
mov
cwde
lock
jmp
add
or
ret
dec
je
inc
cmc
jl
loopne
int
or
cs
ror
ret
addr16
mov
dec
push
or
inc
cwde
int3
mov
lds
pop
cwde
inc
jecxz
xchg
imul
mov
cwde
xlat
(bad)
stc
(bad)
mov
outs
test
cli
mov
imul
jp
inc
loopne
xor
jno
in
xchg
jbe
xor
adc
xor
stos
jbe
pminsw
push
addr16
(bad)
xor
mov
std
arpl
xchg
mov
push
xor
mov
xchg
and
in
popf
dec
mov
mov
or
add
pop
ins
js
int3
cmp
aam
leave
aad
inc
cmc
sub
jbe
bnd
mov
inc
mov
mov
scas
mov
dec
mov
pop
mov
and
arpl
ror
adc
sub
mov
cli
dec
fs
xor
jg
lea
jmp
mov
int3
aam
mov
xchg
loop
in
sub
sbb
shr
jmp
cld
xchg
sahf
popf
fadd
inc
push
adc
icebp
movs
call
or
sub
jg
fidiv
mov
mov
ficom
mov
add
mov
out
inc
das
mov
bound
pop
adc
push
cmp
je
scas
out
add
jno
push
movs
loopne
int3
push
jb
jnp
dec
in
fdivr
xchg
js
jge
cwde
mov
jo
cdq
sbb
cmps
cwde
jae
jp
mov
repz
or
mov
dec
cs
fild
jecxz
cmp
daa
mov
pop
out
pop
cmp
lods
in
mov
dec
sbb
adc
add
movs
and
lds
movs
push
repnz
lea
getsec
frstor
fadd
rol
jns
xor
mov
pop
push
xor
mov
hlt
cli
mov
mov
outs
jecxz
les
adc
imul
repz
cdq
mov
shr
ficomp
and
jo
bound
cs
pushf
test
aaa
mov
xchg
out
ret
repnz
retf
xor
nop
adc
cld
xchg
cld
bound
xor
popa
pop
fwait
xor
sub
adc
adc
sub
repnz
ss
lds
mov
out
ret
mov
xor
(bad)
cli
push
pushfw
mov
pop
jb
lods
ss
stos
ss
jg
dec
repnz
mov
sbb
(bad)
shl
sbb
push
dec
test
jo
(bad)
enter
std
ret
xchg
je
outs
push
std
scas
push
mov
outs
or
fwait
push
ja
clc
xor
int3
popa
pop
ret
cmp
pop
sbb
mov
rcl
leave
shr
loop
ja
jmp
call
popa
bound
mov
cld
fwait
mov
lds
xchg
or
push
adc
pop
push
push
loopne
es
cmp
sub
ficom
adc
das
adc
push
pop
lods
or
pop
cwde
mov
scas
mov
test
mov
sbb
jge
cmp
xchg
lock
dec
fisubr
xor
or
pop
into
call
adc
sbb
push
stc
cmp
ja
daa
neg
pop
sar
jb
cmp
mov
add
push
push
jmp
mov
xor
inc
push
xchg
nop
and
mov
bound
push
jbe
sahf
xchg
sti
pop
shl
fneni(8087
mov
pusha
test
sar
push
xlat
aad
mov
mov
enter
stos
push
call
enter
shl
or
mov
fisubr
mov
or
jecxz
cmps
and
sub
mov
cli
int
pop
fwait
dec
xchg
cld
sti
call
or
cmp
inc
add
imul
je
mul
stc
aam
sub
(bad)
push
jno
shl
mov
dec
pop
jmp
xor
mov
les
cmp
push
and
dec
push
leave
jl
add
mov
pusha
aas
inc
mov
in
mov
pop
daa
fld
pusha
adc
xchg
mov
cmps
inc
mov
xchg
into
pop
cmc
or
or
aaa
es
jmp
cwde
aas
push
jp
data16
pop
xor
cmp
cmp
push
fistp
and
stc
jmp
scas
neg
(bad)
jns
pusha
dec
stos
sbb
aas
add
sub
fild
jecxz
mov
add
in
in
mov
add
imul
mov
mov
mov
push
pop
dec
clc
(bad)
cmp
iret
xchg
mov
mov
mov
and
inc
mov
pop
addr16
sub
cmc
cmp
add
and
lods
retf
in
xchg
pop
das
sbb
mov
inc
xor
xchg
into
jne
lods
outs
xor
popa
and
push
dec
jp
stc
movs
mov
push
mov
cmp
call
adc
out
fsub
jmp
push
mov
dec
imul
mov
jp
and
cmc
cmc
add
test
mov
cli
jno
int
loopne
fst
les
sub
cmp
xor
mov
aad
icebp
ja
jae
add
push
pop
add
aaa
mov
mov
dec
inc
lds
inc
(bad)
mul
add
ins
(bad)
mov
xchg
movaps
lods
out
cmp
cmp
popa
mov
pop
sti
pop
adc
pop
sahf
std
enter
leave
popa
movs
inc
mov
jecxz
dec
push
cmp
sbb
cwde
mov
push
leave
cmp
ss
pop
jmp
popf
pusha
scas
cld
pop
or
mov
sahf
test
mov
pop
add
or
add
ret
xchg
mov
mov
jne
cdq
call
cmp
and
mov
cwde
adc
adc
dec
es
or
sahf
push
and
add
cmc
dec
sbb
sbb
and
bound
mov
loop
sub
arpl
imul
cmp
ror
fcmovne
in
repz
mov
scas
pop
cmp
test
pop
xlat
int3
xor
inc
inc
stc
inc
mov
sub
dec
out
pop
dec
mov
mov
loop
xlat
xlat
push
pop
bound
mov
test
retf
and
adc
mov
cmp
add
les
dec
or
dec
sar
es
out
scas
lock
je
xor
pop
adc
test
sbb
pop
pop
cmp
je
mov
test
jnp
or
adc
push
je
mov
mov
cli
mov
(bad)
jnp
xlat
jb
dec
adc
rcl
cmps
cld
mov
aaa
pop
mov
cmp
imul
fs
jp
sbb
movs
jns
fdivr
pusha
push
es
pop
pop
aam
loope
adc
imul
test
pop
out
sbb
gs
sbb
imul
xor
mov
cmp
or
fwait
mov
popa
les
or
dec
fiadd
fwait
inc
xchg
imul
out
out
cdq
jne
addr16
ins
inc
jne
push
mul
adc
jecxz
adc
mov
pop
jne
addr16
cmp
mov
aas
mov
xor
nop
or
pop
sbb
dec
sahf
leave
bound
lahf
and
js
sub
sub
popa
jbe
stos
pop
mov
cli
ins
cmp
pop
dec
add
in
std
mov
std
mov
ja
int
scas
xor
cmps
adc
imul
pop
shl
xchg
add
sub
idiv
(bad)
fiadd
jmp
(bad)
js
pop
hlt
add
xchg
and
mov
mov
push
jmp
cmp
ret
outs
pushf
mov
clc
ror
outs
and
jmp
in
dec
xlat
cld
xchg
push
dec
jmp
fmul
jp
cmp
adc
ror
pop
jb
xchg
sbb
int3
sub
(bad)
mov
mov
icebp
lahf
fwait
sub
mov
push
xor
aas
mov
out
inc
adc
adc
fwait
cld
or
cmp
and
data16
add
and
out
inc
data16
adc
xchg
and
fnsave
pop
nop
shl
popa
lods
in
adc
mov
maskmovq
imul
add
pop
cmp
push
iret
inc
jo
inc
into
sti
fnstcw
lock
test
cmp
pop
clc
or
or
mov
aam
adc
arpl
outs
lods
push
rol
psrld
icebp
jb
(bad)
mov
out
ret
mov
stos
jp
add
mov
scas
jae
push
sub
fwait
mov
and
or
cmp
jl
xchg
loop
cli
imul
nop
int3
test
sahf
mov
dec
test
(bad)
and
dec
scas
or
sbb
cs
out
ret
sbb
stos
ss
sar
or
sub
push
pop
sub
(bad)
nop
loope
cmp
mov
(bad)
andps
mov
xchg
push
cmp
rol
and
repnz
cmp
mov
dec
jnp
cmp
xchg
push
sbb
neg
and
inc
xchg
retf
sub
(bad)
mov
add
or
scas
push
repnz
mov
(bad)
jp
sbb
xchg
push
dec
cmp
pop
and
jae
call
jae
fsubr
dec
cmp
mov
call
out
lahf
xor
or
js
popa
out
into
lahf
inc
mov
dec
je
sub
ins
pop
sbb
and
sbb
mov
xchg
scas
push
stos
ja
mov
push
leave
scas
add
xchg
(bad)
popa
movs
inc
add
mov
xchg
push
jg
ret
jl
dec
cmp
into
cwde
imul
icebp
push
out
aas
xor
es
cli
int3
cmps
dec
and
retf
mov
pop
lods
xor
jg
cmps
gs
out
or
loope
movs
adc
rol
leave
cdq
pop
sub
jnp
fdiv
call
fcom
fisubr
xor
sub
mov
fdiv
mov
test
jae
cli
(bad)
mov
pop
mov
push
adc
(bad)
jmp
sub
nop
and
stos
mov
pop
cmps
fwait
inc
outs
cwde
adc
push
cmp
adc
popf
cld
jo
ss
xor
mov
mov
lods
neg
sbb
xor
cmp
mov
jne
jecxz
push
inc
xchg
and
dec
mov
dec
xchg
mov
dec
dec
stc
test
push
sub
mov
sbb
jmp
mov
add
xor
lea
arpl
cmc
repnz
(bad)
xchg
fisttp
div
pushf
pop
xor
ds
inc
and
daa
push
sbb
cmp
add
dec
ficomp
inc
lods
clc
fwait
or
fisttp
xor
retf
pop
xlat
cmc
dec
stos
sub
aas
shl
sub
ret
lea
inc
push
jp
push
retf
popf
(bad)
lahf
adc
jnp
pop
or
outs
cld
xchg
mov
adc
adc
dec
out
cmp
rcl
outs
pop
dec
mov
and
fisubr
push
call
mov
inc
cmp
xor
test
pop
jle
pushf
jae
enter
add
sbb
faddp
jg
dec
shr
xor
jl
shl
fistp
sbb
jl
mov
lods
mov
dec
bound
stos
and
adc
adc
es
jno
fwait
xor
and
xchg
xor
into
sbb
lods
mov
in
retf
(bad)
jae
pusha
js
outs
and
sub
test
into
imul
jne
jl
sub
adc
lods
loope
cmp
sbb
dec
addr16
dec
int3
inc
cmp
sbb
in
adc
repnz
adc
stc
pop
inc
mov
pop
stc
enter
pusha
outs
test
push
xlat
loopne
(bad)
jle
fld
aas
cmp
xchg
into
dec
or
sbb
repz
in
scas
loopne
ins
mov
cmp
add
inc
push
loop
into
std
in
out
retf
repnz
jmp
pop
pop
dec
fistp
fsub
outs
mov
or
sbb
pop
lods
enter
cwde
sahf
aad
fiadd
cmp
(bad)
mov
ss
ror
push
cmp
sub
nop
arpl
xlat
mov
scas
jecxz
add
push
dec
sub
pusha
mov
sbb
and
test
aaa
stos
out
dec
stos
sbb
xchg
imul
mov
gs
mov
xor
mov
aad
and
das
lahf
cmps
pop
inc
mov
pop
mov
inc
fisub
mov
xor
mov
inc
xchg
push
sub
pop
imul
out
jnp
pop
(bad)
sub
lock
bound
xchg
cmp
retf
xor
mov
mov
nop
sub
pop
(bad)
sub
push
mov
dec
cwde
jmp
fyl2x
cmp
ror
pop
fs
pusha
into
mov
clc
fwait
inc
movs
pop
and
scas
pop
out
ins
dec
adc
or
or
xor
or
sub
adc
jl
and
fmul
ret
jmp
call
cmps
dec
push
push
xlat
pop
retf
xchg
nop
test
add
or
imul
sahf
cmc
cmp
in
sbb
retf
mov
cmps
xlat
jbe
(bad)
lock
sub
ins
mov
add
xchg
cmp
jmp
pop
retf
dec
and
inc
inc
cwde
or
xor
fsub
push
xchg
push
push
xchg
pop
test
retf
sar
dec
mov
push
or
mov
arpl
in
es
pop
clc
dec
mov
dec
fcomip
push
das
mov
in
cmp
mov
(bad)
push
mov
hlt
sbb
popf
push
mov
ret
popa
pop
add
lea
fsubp
test
lahf
add
mov
push
push
sbb
int
ds
js
sub
pop
lea
dec
dec
aad
les
mov
and
mov
lods
pop
stc
test
int
jl
dec
cwde
or
mov
ds
and
mov
sub
adc
inc
push
jbe
fdivr
int3
fucom
dec
test
fild
mov
mov
sbb
add
popa
dec
cmp
dec
or
loop
sub
sub
xor
outs
cmp
pop
and
cld
sub
mov
loop
or
dec
inc
fdiv
dec
or
in
les
mov
push
into
mov
fiadd
(bad)
rol
ins
ds
aam
rol
loop
xor
sub
ficom
mov
or
cmp
mov
mov
xlat
ret
call
push
ret
in
dec
cwde
or
pop
ror
ins
jg
test
out
cs
cmp
aas
push
xchg
cwde
mov
jns
jno
lea
loope
jmp
data16
ja
pop
sub
fs
sub
stos
jge
mov
out
icebp
js
call
cmp
leave
loope
das
in
and
xor
inc
inc
stos
stc
pusha
sbb
mov
adc
or
mov
sbb
pop
repz
movs
or
mov
or
pop
add
dec
cmp
pop
mov
std
mov
or
stos
call
jns
arpl
xlat
test
sbb
xor
mov
add
ja
std
jno
push
mov
inc
or
retf
out
xchg
jecxz
inc
lea
xlat
loope
sub
xor
xchg
mov
test
jno
lahf
icebp
and
add
out
push
pop
xchg
out
xchg
rol
xor
mov
xchg
or
hlt
stos
jo
sti
push
push
cmps
dec
pop
jg
lahf
out
stc
jge
add
iret
test
stc
test
test
push
je
cmp
or
test
imul
mov
jle
and
loop
push
fisub
dec
clc
dec
xchg
inc
and
cwde
xlat
xchg
inc
mov
xchg
and
movs
cwde
pop
in
or
sub
popf
mov
jo
push
jae
std
pop
jge
test
mov
or
adc
push
aaa
jns
movs
out
xor
sbb
aad
mov
(bad)
jno
adc
mov
dec
xchg
imul
push
push
xchg
xchg
je
or
das
icebp
rcl
out
test
mov
jle
cmp
rol
jp
in
aam
popf
ficomp
sub
sbb
pushf
xchg
les
push
repnz
lahf
jmp
test
xchg
mov
dec
cmp
cmp
sti
cli
test
imul
retf
mov
jo
aaa
ins
mov
icebp
push
icebp
sub
(bad)
pop
xchg
add
outs
sub
xchg
sbb
sbb
sub
mov
and
xor
stc
jle
fsubr
add
cmp
fbstp
sub
popa
sub
stos
add
mov
jns
adc
jmp
int
push
leave
rep
data16
ds
test
jmp
in
inc
cli
and
rcr
pop
test
sub
iret
pop
push
push
pop
push
cmp
or
mov
push
repz
push
xor
das
aam
gs
jnp
mov
clc
pop
dec
stos
inc
and
in
outs
call
dec
dec
cmps
cmp
add
test
cmp
test
sbb
out
stc
or
or
cld
or
inc
clc
adc
shl
(bad)
fstp
popa
sbb
jnp
lods
test
or
shl
add
or
lods
mov
lods
jne
mul
retf
fidivr
add
cmp
repnz
dec
fmul
ficomp
lods
ret
out
or
repnz
pop
dec
adc
push
mov
into
jo
cld
or
(bad)
jge
pop
frstor
xchg
pop
mov
push
mov
out
mov
movs
icebp
sbb
lock
mov
dec
ja
dec
ret
sbb
enter
fs
push
xor
jl
pop
es
add
lds
ins
lods
xlat
aas
sbb
xor
push
icebp
(bad)
push
jnp
jo
out
push
dec
cmps
cli
ss
pop
or
hlt
xlat
test
inc
das
fbld
daa
xchg
inc
pop
fwait
sub
cmp
neg
jb
xor
jle
mov
cmc
mov
out
mov
sbb
xchg
leave
cmp
mov
sti
or
dec
mov
lds
cmp
xchg
fsubr
fwait
dec
push
mov
mov
xchg
inc
push
push
sbb
pop
mov
dec
sar
pop
sub
mov
outs
mov
xor
xchg
(bad)
jmp
(bad)
cli
inc
jmp
fnstsw
sub
sbb
add
lock
rcr
aam
xlat
scas
call
mov
aad
(bad)
loopne
loope
mov
test
pop
add
ret
pop
loope
xchg
mov
lods
xor
fsubp
repz
mov
scas
sbb
jnp
into
rcl
push
push
cmp
jecxz
and
ss
jne
jb
int
push
mov
and
out
int3
jp
pop
inc
out
fistp
fisubr
xchg
imul
lods
imul
cwde
ja
std
hlt
and
leave
add
push
cmp
pop
lahf
retw
clc
into
mov
shr
stos
mov
inc
dec
mov
(bad)
movs
aaa
cmp
sub
mov
hlt
repnz
push
xor
mov
into
outs
xchg
ins
mov
push
mov
mov
sbb
(bad)
and
and
dec
xor
mov
imul
in
sbb
movs
(bad)
mov
xor
scas
push
add
in
daa
mov
mov
mov
inc
sub
inc
das
add
(bad)
jmp
(bad)
xlat
call
xchg
mov
xchg
inc
ss
pop
xchg
std
pop
fnsave
in
xchg
sbb
cs
cs
cdq
inc
mov
in
test
sti
and
ja
xchg
push
imul
out
add
jge
lea
ret
enter
dec
xor
cmp
movs
and
shr
and
pop
xor
test
retf
xchg
xchg
push
fdivr
je
out
pop
mov
dec
sar
scas
jb
add
addr16
xchg
push
into
xor
xchg
int
mov
sar
fadd
mov
dec
inc
mov
lods
lahf
jmp
adc
aaa
push
test
pushf
adc
call
sub
test
loope
jle
jecxz
xor
fbld
sbb
push
lds
retf
add
pop
sub
rcl
jp
out
and
push
data16
sub
loope
ins
jae
out
pushf
hlt
dec
jno
mov
jmp
out
lea
sar
test
gs
cmc
push
dec
dec
fsub
js
test
mov
daa
imul
fdiv
jb
jo
test
sahf
xor
cld
xchg
inc
xchg
ror
outs
int
pop
pop
push
repz
lock
sti
je
ja
cld
adc
loop
xchg
scas
add
sbb
or
mov
push
sbb
cmps
rcl
inc
mov
pusha
adc
adc
pop
daa
mov
or
daa
mov
adc
ins
pop
jnp
xor
cmp
push
push
dec
xchg
mov
xlat
push
mov
adc
mov
or
jbe
pop
xor
lea
mov
data16
mov
push
sbb
sub
mov
xchg
cmp
xchg
adc
jecxz
test
inc
fwait
scas
addr16
pop
aas
jmp
xchg
xor
and
shl
jne
mov
imul
loope
pop
fimul
xor
push
xor
cmps
imul
push
hlt
push
xlat
bound
or
mov
imul
shl
pop
aas
add
rcl
call
mov
fidiv
in
xchg
das
es
fdiv
pop
lods
pop
in
fimul
ss
fwait
xchg
fst
push
test
cmp
rol
jb
sti
adc
xlat
jne
cmp
pop
clc
lods
out
lahf
test
das
adc
test
jbe
cmovs
ret
arpl
fisub
or
mov
ret
inc
xchg
cmps
mov
pushf
int3
movs
mov
lea
lahf
repz
push
mov
inc
(bad)
leave
sahf
jmp
cmp
jo
jg
mov
pop
aam
aas
pop
inc
sbb
xor
add
or
aas
clc
jo
ror
adc
jle
or
xchg
push
shl
inc
call
fisttp
sbb
push
sub
cmp
shl
into
cmp
pop
xchg
mov
xlat
cmp
and
pop
cdq
fdivr
mov
pusha
push
pop
pop
mov
dec
pop
push
sbb
pop
ins
fiadd
xor
rcl
test
adc
add
fwait
test
outs
pop
pop
jg
out
les
cmp
ins
or
test
add
outs
mov
dec
mov
xor
xchg
lods
xchg
xchg
or
icebp
mov
cmp
das
cmp
js
and
sti
inc
test
jmp
in
adc
std
and
mov
add
fisttp
and
cmps
call
adc
sbb
and
mov
adc
jnp
inc
stos
sub
cs
ins
dec
movs
inc
push
fnstenv
and
clc
sti
call
gs
cmp
add
adc
xchg
adc
xor
jle
bound
pusha
shr
imul
ss
jmp
and
xchg
or
ins
pop
fiadd
inc
rcr
sub
fisub
mov
out
add
and
mov
test
push
add
aaa
dec
mov
push
js
mov
mov
popf
add
dec
and
dec
push
dec
rcr
fs
adc
adc
sbb
ret
cmp
add
sti
aad
add
mov
or
xor
fwait
bound
in
add
and
fsub
enter
adc
push
fcom
ret
mov
call
mov
sub
dec
add
jecxz
mov
into
arpl
xchg
test
ins
jle
sub
cmp
sbb
frstor
sar
xor
lahf
ins
out
stc
mov
rol
push
and
stos
lds
lods
mov
addr16
jno
rol
sbb
test
sbb
inc
fs
jns
cmps
dec
repnz
lock
add
inc
lahf
jns
dec
into
mul
dec
int
xchg
mov
inc
(bad)
mov
xchg
arpl
pop
sub
sahf
shr
dec
cmp
dec
xor
sub
fmul
sbb
push
or
ins
icebp
mov
mov
inc
pop
fadd
fs
lods
or
sub
mov
in
sub
add
jecxz
lds
xor
scas
jl
cld
sub
xchg
lahf
push
or
or
inc
xchg
xlat
push
aaa
jmp
cmps
and
(bad)
test
ins
jbe
in
mov
shl
enter
push
hlt
aad
sub
mov
mov
xchg
xchg
movs
imul
xor
sub
inc
dec
xchg
aam
popa
dec
popf
aaa
sub
jg
cmc
ins
shr
add
cmp
add
cmp
fisttp
je
shl
and
(bad)
sub
add
inc
fwait
hlt
cmps
xor
mov
jp
or
dec
ins
sbb
scas
movs
imul
stos
sar
std
iret
xor
icebp
jmpw
scas
fiadd
add
data16
push
inc
shr
loop
aad
mov
gs
daa
dec
jmp
or
xchg
mov
(bad)
xchg
shr
push
gs
xchg
cli
or
push
or
push
mov
jmp
mov
cmp
retf
jb
sar
mov
mov
pop
sub
aaa
jb
loope
cmp
or
scas
pop
je
jns
pop
gs
mov
xchg
lods
out
retf
sub
fcomp
mov
out
enterw
xchg
(bad)
lahf
xchg
out
cld
rcl
jecxz
xor
and
es
mov
retf
adc
and
inc
ja
jp
mov
sbb
rol
add
sbb
cmp
dec
arpl
mov
pop
ret
movs
daa
mov
stc
retf
cs
jle
loop
jbe
stc
out
shl
in
xor
aaa
jg
mov
xchg
mov
pop
ret
cld
adc
repnz
cwde
fcomp
mov
int3
int3
push
leave
out
fistp
mov
cmc
ret
push
imul
out
scas
mov
(bad)
fild
pop
neg
packsswb
push
rcl
or
add
jns
pop
shl
in
loop
sahf
sub
push
push
int3
mov
ins
mov
ins
and
dec
(bad)
out
or
jns
outs
int
ja
jno
mov
dec
(bad)
cmps
aaa
stc
sbb
or
fimul
addr16
inc
mov
mov
ja
cmp
or
or
je
(bad)
cmp
xchg
fs
out
addr16
or
and
sbb
add
push
sub
dec
jb
cwde
mov
std
jne
add
mov
int3
ret
enter
loop
rol
inc
aas
test
ror
push
daa
je
sbb
mov
jns
adc
mov
cmp
std
fnsave
xchg
push
mov
iret
dec
or
xchg
loopne
sub
stc
inc
dec
imul
xchg
pop
pxor
adc
jmp
or
stc
shl
xor
fisttp
cdq
inc
sub
shl
cs
xor
fistp
repz
fs
jo
sti
das
test
rcl
stos
jmp
cmc
jb
ret
mul
sub
and
push
add
push
pop
out
iret
(bad)
stos
jno
add
push
sbb
jnp
pop
test
nop
push
movs
inc
movs
bound
push
mov
mov
call
test
push
les
divps
fsubr
lea
mov
mov
and
stos
xchg
call
add
fldln2
pushf
xchg
imul
sahf
push
jl
pusha
inc
jge
push
lds
ja
xchg
fiadd
adc
rcl
dec
and
xor
hlt
out
div
outs
xor
test
cmps
push
stos
popa
cwde
leave
add
movs
dec
sbb
add
sub
dec
adc
and
icebp
push
xchg
sub
in
fidiv
jae
neg
fs
sahf
inc
sbb
int3
mov
cmps
ss
inc
xlat
cli
js
mov
push
xor
adc
call
fdiv
retf
outs
and
sar
mov
out
repnz
mov
mov
or
(bad)
into
dec
adc
sbb
addr16
mov
loopne
mov
sub
sbb
pminsw
xchg
stos
mov
and
inc
pop
adc
lods
and
jns
cli
xor
pop
inc
push
pop
icebp
(bad)
and
pusha
xchg
pop
mov
aaa
(bad)
scas
iret
out
jno
add
pop
mov
loop
mov
hlt
pop
cld
into
shl
mov
xchg
fiadd
je
dec
ins
lods
mov
inc
dec
xchg
and
(bad)
pop
pop
in
xor
push
push
add
inc
jge
ret
enter
pop
mov
mov
pop
test
sti
push
out
inc
pcmpgtb
xor
and
shl
xchg
jp
(bad)
pusha
cwde
inc
(bad)
shl
xchg
mov
ds
inc
mov
inc
mov
gs
dec
cmps
fs
inc
sub
dec
loopne
cmps
adc
mov
jo
div
enter
not
sbb
loopne
adc
cmps
jb
and
cmp
jb
iret
test
cmp
cmps
mov
dec
add
adc
dec
xor
inc
fiadd
adc
jg
dec
and
sub
sbb
(bad)
push
dec
jge
adc
in
mov
mov
adc
fsubr
sbb
aam
fld
imul
xor
cmps
lds
push
push
lahf
pop
push
mov
bound
xchg
xor
fiadd
jp
bound
mul
out
dec
adc
ins
cmps
rol
xchg
cmp
into
loopne
pop
sub
mov
outs
mov
cmp
add
pop
into
test
inc
cmp
pop
xor
dec
xchg
push
mov
sub
out
dec
add
movs
mov
lock
fwait
in
adc
call
ins
sbb
jg
in
add
sahf
cmp
cs
dec
adc
and
js
cmp
(bad)
std
ja
lds
repnz
imul
cs
in
cmp
nop
pop
push
cmp
lods
shl
pop
inc
or
jp
or
cmp
push
dec
cdq
cmp
inc
push
jecxz
dec
stc
lahf
mov
inc
push
lods
cli
jle
stc
mov
add
ds
out
dec
inc
or
call
add
push
dec
outs
sti
push
bound
pop
cmp
pop
sub
sbb
ret
mov
mov
pop
and
jecxz
xor
sub
int3
xor
scas
aam
jle
mov
push
push
jmp
cmp
push
xchg
sub
mov
pop
sub
not
or
mov
ins
(bad)
jmp
fiadd
push
cmc
or
jle
push
mov
hlt
arpl
push
and
lea
arpl
cmp
popf
(bad)
sti
data16
inc
out
and
ins
ss
push
pushf
push
ficomp
xchg
pop
sbb
inc
cmp
and
inc
add
pop
mov
test
(bad)
dec
and
in
sahf
inc
retf
call
cli
dec
test
adc
and
mov
push
(bad)
neg
sti
jae
jo
retf
test
(bad)
mov
sahf
pop
out
pop
repnz
loope
pop
call
test
test
mov
jnp
adc
pusha
dec
inc
cmp
repnz
jb
and
mov
cmps
nop
iret
stos
add
imul
add
mov
push
aaa
ins
mov
add
jnp
fcom
rol
jg
lods
xchg
pop
aas
mov
retf
pop
jne
pop
scas
int3
and
push
call
inc
das
xor
push
push
mov
push
push
inc
mov
and
or
in
or
mov
sub
lahf
adc
in
mov
jg
es
cmp
cs
jmp
pop
xor
imul
test
and
ss
cmp
inc
popf
inc
arpl
mov
add
push
xchg
imul
leavew
push
aad
push
sub
daa
(bad)
jmp
jp
nop
ja
pop
push
inc
outs
sti
mov
lds
adc
out
or
cmc
stos
loopne
and
xor
pop
call
pop
jl
jae
rcl
mov
mov
sbb
inc
inc
adc
sbb
bound
push
aad
leave
cmp
mov
mov
stos
sbb
sub
jle
xchg
mov
int3
cs
mov
cmp
test
stos
or
jae
cmc
jb
fistp
jmp
ds
(bad)
ds
arpl
rcr
lods
pop
mov
mov
push
ficom
inc
int3
cli
in
add
mov
retf
out
sbb
adc
pusha
mov
stos
push
adc
cmps
push
cmc
out
js
lock
and
ror
mov
push
ret
stos
int
test
aaa
lods
xor
aam
jno
std
cmp
pop
nop
ds
push
ret
ret
mov
clc
sub
fwait
das
repnz
mov
cmps
loopne
jb
ins
jnp
fldenv
jge
scas
adc
pop
jno
lods
add
jp
mov
pushf
xchg
sub
retf
mov
aaa
(bad)
aas
push
push
and
shl
ror
adc
(bad)
pop
std
test
jg
or
idiv
(bad)
sub
pop
pop
sub
jbe
dec
mov
les
pop
mov
enter
pop
push
dec
jmp
adc
movs
js
test
push
or
xor
pop
ret
(bad)
mov
das
mov
ss
mov
out
imul
mov
scas
dec
add
fiadd
jnp
call
push
lock
jp
lea
jae
scas
adc
pop
stos
(bad)
fsub
push
nop
xchg
jmp
ficomp
addr16
jmp
shl
pop
shr
popa
or
call
daa
sub
fidiv
push
mov
push
cs
mov
jns
and
sub
cmp
xor
jbe
sets
imul
stos
repnz
ins
aam
inc
imul
xlat
ja
mul
or
sub
rol
repnz
mov
jecxz
adc
push
jo
je
enter
push
dec
mov
or
cmovne
cdq
pop
in
and
sub
iret
rcr
scas
add
mov
dec
xchg
dec
(bad)
in
add
xor
push
xchg
mov
mov
jmp
lods
pop
mov
mov
scas
dec
sbb
inc
(bad)
ins
ja
mov
stc
cmp
sub
push
cmps
icebp
jnp
jp
mov
add
cmp
das
xchg
cmp
(bad)
pop
mov
mov
jne
xchg
out
mov
adc
cmps
jmp
sub
cmps
xor
pmullw
sub
push
lods
ror
fcomip
les
sbb
popf
fcmovu
cdq
sbb
mov
rcr
adc
das
cdq
or
push
ficom
push
fwait
push
ins
hlt
std
out
nop
fsub
jae
adc
inc
pushf
push
fistp
loope
mov
call
(bad)
push
(bad)
xchg
push
or
fs
into
add
cli
call
push
or
addr16
pusha
enter
(bad)
jne
ins
push
outs
jno
push
call
in
aam
xor
jmp
xor
in
shl
bound
out
(bad)
fimul
push
pushf
(bad)
out
mov
cmp
lea
rcl
sbb
sahf
mov
mov
add
xor
daa
es
scas
repz
and
leave
ds
xchg
lock
jge
dec
test
jmp
and
push
scas
mov
aad
xchg
cli
icebp
add
imul
imul
jb
xchg
movs
adc
mov
jmp
or
dec
iret
fbld
repz
retf
add
xor
inc
ficomp
jmp
in
int3
data16
mov
test
fs
ds
push
xchg
lahf
fstp
div
dec
repnz
push
lods
dec
mov
sbb
mov
ja
push
test
add
test
jns
ror
imul
inc
cmc
mov
or
bound
xchg
add
fstp
stos
pop
xchg
inc
arpl
stos
aam
sti
mov
data16
in
pop
cld
shr
das
inc
jno
and
xor
jb
xor
dec
fnsave
push
mov
pop
loop
dec
jle
jl
loopne
mov
fs
add
pop
adc
mov
outs
push
mov
pop
dec
call
adc
jp
sub
xor
mov
jp
jmp
ss
push
retf
push
pop
loope
inc
jle
mov
cdq
push
pop
popa
or
ror
mov
xor
push
es
aas
xor
into
sub
sbb
jns
add
ins
dec
aam
or
in
push
(bad)
cs
mov
inc
xchg
add
push
xor
mov
mov
adc
dec
mov
data16
xor
add
jle
das
xchg
lea
in
mov
test
out
imul
js
shr
inc
ins
in
std
dec
pop
jle
(bad)
pop
rcr
inc
int
adc
xchg
in
mov
lock
jnp
push
mov
cmp
popf
pop
idiv
cld
add
leave
mov
jnp
push
lea
jp
pop
pop
push
pop
jae
and
retf
pop
dec
pop
mov
aaa
std
sbb
in
push
add
out
jle
cmp
jne
mov
dec
retf
ds
dec
push
inc
push
adc
jle
push
popa
aas
jmp
hlt
mov
push
inc
sub
xchg
popa
jns
ins
dec
mov
fld
in
push
ficom
or
xchg
sti
(bad)
repz
les
mov
push
push
sahf
inc
jecxz
fisub
ja
outs
xlat
loope
cmp
add
dec
cmps
leave
and
adc
mov
push
pop
inc
cmp
imul
inc
dec
popf
in
mov
pop
imul
inc
push
(bad)
mov
jmp
and
popa
cmp
ins
push
movs
mov
mov
pop
xor
icebp
repz
lods
jmp
push
test
shl
sbb
push
pop
arpl
push
shl
ret
mov
movs
cmp
jb
idiv
in
lock
dec
push
dec
ja
(bad)
push
inc
(bad)
jmp
add
xchg
movs
xchg
inc
push
sbb
loop
icebp
inc
in
test
mov
pop
or
cli
jp
and
je
imul
dec
fld
test
out
ins
es
mov
dec
cmc
sub
push
push
or
add
add
lds
and
retf
test
in
stos
push
mul
fs
mov
shl
imul
mov
std
push
mov
mov
jnp
mov
enter
or
lods
je
xchg
fucomi
movs
add
outs
fsubr
clc
mov
rol
pushf
mov
test
scas
arpl
mov
out
jle
into
pcmpeqw
into
or
(bad)
dec
jge
adc
and
fmul
movs
xor
and
and
std
in
and
or
inc
mov
test
mov
push
fisubr
add
push
xchg
jl
sub
call
sub
xchg
mov
sub
mov
(bad)
sub
int3
mov
aaa
adc
aam
sub
loope
aad
push
add
mov
movs
jne
and
push
js
in
cmp
add
(bad)
repz
(bad)
mov
ss
push
push
adc
xchg
cdq
ror
cdq
mov
add
sbb
adc
add
cmps
jmp
xor
std
rcr
cs
mov
movs
and
mov
push
adc
repz
clc
mov
dec
add
sahf
pop
(bad)
sbb
(bad)
or
xor
xchg
xor
inc
sub
jo
cwde
pushf
pop
stos
dec
test
arpl
into
into
mov
ds
lods
mov
sahf
movs
inc
retf
repnz
sub
sbb
pop
jmp
pushf
mov
pop
arpl
or
xchg
xor
or
inc
into
dec
pop
and
jbe
dec
push
mov
clc
int3
stos
(bad)
stc
ins
inc
js
adc
or
test
fwait
into
pop
bound
(bad)
mov
fdiv
fcom
or
ja
popa
push
jmp
cli
dec
ret
jecxz
aad
out
mov
out
sub
dec
mov
cli
jo
fnstcw
nop
scas
add
jne
xchg
xor
movs
test
loope
out
das
cmps
rol
sbb
sub
or
push
inc
fwait
pop
fdiv
push
cli
pop
cs
out
xchg
and
pop
loop
stos
sahf
in
push
cmp
int3
mov
leave
(bad)
and
or
xchg
xchg
dec
mov
out
inc
arpl
push
adc
aad
xchg
iret
call
jmp
into
sbb
dec
(bad)
push
test
call
es
or
shl
sub
js
int3
aas
adc
xor
mov
mov
in
mov
cmp
call
popf
out
stos
cli
jge
aas
add
xor
out
mov
mov
cli
jnp
test
jne
cmp
outs
jl
mov
jne
mov
out
gs
aaa
jo
jo
push
and
add
pop
mov
mov
pop
mov
movs
enter
sbb
lock
scas
xchg
and
icebp
imul
jo
xchg
add
pand
mov
es
cmp
xor
dec
xor
cmp
mov
adc
inc
aaa
sbb
push
push
outs
out
push
add
retf
jg
push
and
ror
jne
mov
fldcw
sbb
fstp
fld
aam
dec
sbb
imul
xchg
xchg
xchg
popa
sbb
add
sbb
cld
push
mov
out
pop
aas
sub
idiv
imul
imul
or
fs
adc
stos
adc
bound
push
push
cwde
scas
push
pop
cdq
cs
push
mov
mov
retf
cwde
xchg
ss
(bad)
mov
jg
cmps
push
mov
and
jp
xor
add
test
ror
int
adc
add
xor
or
jmp
push
packsswb
xchg
mov
jl
xlat
mov
cmp
jp
mov
cmp
data16
mov
xchg
out
mov
mov
(bad)
int
mov
mov
add
or
(bad)
mov
es
dec
ret
lods
out
ret
mov
nop
inc
xchg
test
daa
mov
xchg
ins
ss
sbb
lock
pop
jle
fisttp
dec
dec
pop
cwde
pop
daa
pop
xor
pop
or
inc
ficom
add
adc
pop
popf
fld
(bad)
add
imul
jns
cmc
mov
in
xchg
fs
cli
stc
cmps
into
pop
mov
xor
mov
mov
clc
stos
adc
xchg
adc
lods
stos
mov
mov
int3
push
loopne
xor
xchg
icebp
dec
mov
js
shld
loop
aas
pop
pop
loopne
mov
xchg
pop
out
imul
(bad)
in
add
cdq
das
dec
popa
int
xchg
retf
jecxz
rcl
mov
js
and
imul
shl
pop
mov
cmps
sbb
dec
fldenv
jbe
or
repnz
out
sbb
ret
stos
sub
cmp
sahf
sbb
std
sub
das
lds
cwde
stos
and
adc
add
xchg
and
xchg
fdiv
icebp
mov
jb
adc
sbb
sub
(bad)
sbb
mov
sar
(bad)
daa
add
mov
cmp
and
shl
pop
dec
mov
popa
add
lods
xor
popf
mov
or
adc
fnsave
adc
cmc
stos
mov
imul
pop
and
sub
jge
idiv
add
aad
or
sar
mov
dec
or
call
xor
jns
popf
adc
mov
mov
or
pop
sbb
push
xor
dec
ret
out
aam
sub
inc
(bad)
daa
movs
loope
or
sahf
cli
scas
pop
sub
and
inc
or
je
jnp
jecxz
push
dec
dec
in
imul
xor
mov
mov
jl
xor
pop
rcl
out
mov
cmps
jno
and
lds
fisttp
mov
clc
retf
out
lods
inc
mov
mov
loopne
int
sbb
iret
aad
scas
push
cmp
test
out
shl
xor
and
js
xchg
sub
lods
xchg
pusha
fnstcw
xchg
ds
mov
jmp
je
pop
(bad)
dec
pop
cli
or
pop
push
test
je
out
ins
xchg
inc
sub
sbb
and
xchg
adc
dec
mov
add
jbe
test
inc
xchg
pop
cmp
xor
or
adc
xor
push
mov
fisttp
sbb
stos
xchg
fdivr
add
jns
push
repz
test
cdq
inc
aad
shl
ret
scas
mov
push
(bad)
push
add
and
jle
inc
enter
dec
lds
pop
out
dec
stc
imul
dec
out
out
add
inc
cs
aam
cmp
mov
xor
push
dec
test
jae
es
std
jmp
add
cmp
sub
cmps
push
sar
mov
sbb
xchg
pop
xor
popf
lds
loopne
inc
shr
scas
jl
adc
xor
jle
neg
scas
mov
es
fistp
jmp
aam
mov
add
inc
fnstsw
jbe
out
and
dec
dec
movlhps
xor
popa
pop
dec
out
push
imul
xchg
lods
cmp
xchg
cmps
out
jmp
xlat
nop
dec
or
sub
inc
cmc
jl
test
sbb
jecxz
jnp
sub
fdiv
adc
or
loop
shl
add
push
jp
sbb
add
add
aad
mov
push
call
js
sbb
push
in
inc
stos
addr16
fsubr
test
pop
add
push
xchg
add
inc
jmp
sbb
or
jns
mov
mov
cdq
xchg
sti
dec
imul
push
scas
cmps
adc
test
add
cmps
fidiv
enter
es
cmp
mov
test
mov
or
mov
adc
loop
movs
jge
xchg
ret
xor
sahf
jbe
mov
daa
call
sbb
iret
jno
xchg
adc
pop
loop
sbb
inc
add
push
ret
std
scas
cmp
push
xor
fcom
jge
frstor
mov
stos
mov
sbb
add
xor
mov
jne
inc
cmps
dec
mov
neg
leave
cmps
stos
not
leave
sbb
push
dec
add
call
or
xor
shr
mov
aas
out
bound
(bad)
mov
mov
repnz
dec
mov
dec
xlat
(bad)
xchg
ficom
bound
cmp
xchg
mov
movs
(bad)
psllq
mov
test
pop
cmc
pop
jle
add
push
nop
mov
test
ror
cmp
pusha
push
sub
push
mov
icebp
jns
pop
jp
jmp
sbb
gs
xor
ins
sbb
add
mov
(bad)
cld
ret
mov
cmp
xchg
lahf
add
xor
pop
mov
jl
dec
mov
push
cmp
xlat
dec
std
xchg
xchg
out
jb
push
lds
xor
push
push
fild
ds
push
xchg
cs
ins
mov
or
jg
inc
xor
mov
xchg
xchg
pop
mov
cdq
scas
cmp
sub
sub
bnd
adc
xchg
xor
stc
dec
and
mov
clc
not
adc
in
je
js
mov
lock
xchg
sub
inc
push
cmps
fdivr
mov
ds
or
and
fisubr
arpl
xor
xor
cmc
adc
loopne
jmp
cdq
call
leave
stos
aas
dec
dec
mov
pusha
xchg
push
sbb
inc
popa
sbb
add
or
ror
lahf
inc
sahf
div
push
mov
xchg
jmp
dec
push
ins
popa
sbb
xchg
and
shl
(bad)
pop
(bad)
push
mov
repz
xchg
cli
mov
push
(bad)
or
sti
aam
repz
in
shr
mov
in
pop
sti
inc
mov
fst
imul
inc
loopne
loope
mov
leave
(bad)
adc
out
les
xchg
shl
sbb
movntq
sub
out
jp
adc
test
and
repnz
push
inc
jecxz
inc
je
ins
bound
mov
sub
or
mov
add
scas
xchg
cmp
(bad)
push
repz
dec
push
add
jge
popa
or
push
jae
test
into
mov
out
sahf
xchg
jl
movs
fst
loopne
rol
mov
bound
cwde
idiv
lds
lahf
sar
xor
in
push
cmp
inc
xchg
pop
add
ins
mov
das
aas
jp
dec
test
cmp
fnstcw
push
inc
(bad)
xor
xchg
push
sbb
add
and
dec
jo
ds
and
mov
(bad)
imul
out
mov
pop
lock
lea
mov
ret
dec
and
movs
das
mov
out
out
je
inc
inc
not
mov
call
add
pop
aaa
or
loope
pushf
or
mov
gs
(bad)
xchg
push
es
rol
test
and
cld
mov
stos
bound
call
mov
jecxz
cli
retf
dec
test
mov
loop
retf
not
push
rcr
adc
cmps
inc
inc
aad
cmps
xchg
push
ficomp
and
fld
sub
aaa
cmp
or
or
adc
test
int3
popa
inc
or
les
fisub
inc
dec
test
inc
add
stos
shl
cmp
sahf
mov
test
dec
xor
mov
imul
(bad)
shl
stc
or
pushf
iret
(bad)
cmps
adc
icebp
jo
jns
pop
pop
mov
inc
mov
daa
mov
sbb
adc
mov
test
lsl
add
(bad)
cs
dec
push
stos
pop
jmp
push
rcl
pop
sub
mov
in
ficom
movs
adc
hlt
cmp
mov
vandpd
clc
mov
adc
and
xor
out
test
and
data16
loope
(bad)
in
je
cmp
out
xchg
jmp
sbb
jne
ins
fcmovnb
dec
dec
mov
sbb
iret
sar
shr
sbb
nop
test
clc
sub
sbb
pop
imul
retf
push
popa
mov
adc
inc
mov
and
sub
scas
dec
lods
gs
sub
fist
mov
loope
jbe
jno
ja
out
in
clc
mov
test
ficom
imul
mov
push
cmp
add
sub
push
and
ret
outs
pop
cli
dec
jnp
adc
lds
inc
cmp
adc
push
aad
sahf
mov
cdq
loope
inc
loopne
jecxz
mov
ret
push
jns
unpckhps
fadd
add
mov
call
sahf
jg
js
popa
cwde
sbb
pop
and
retf
jo
es
lods
and
and
div
lahf
sahf
retf
cmp
lea
or
jl
movs
and
mov
cmp
push
cmp
fisub
sub
mov
pop
mov
jge
jbe
jb
sbb
ficomp
pop
dec
mov
add
aam
das
repz
in
in
icebp
pop
inc
mov
jmp
sub
adc
mov
push
cmp
push
mov
addr16
xor
sti
add
sub
gs
addr16
icebp
mov
xchg
js
cmp
clc
call
arpl
in
inc
neg
xchg
ins
out
jecxz
fs
pop
jle
push
loope
cmp
and
data16
div
scas
int
aas
ss
jb
mov
mov
fs
xlat
add
cmps
test
xchg
cmps
ss
nop
mov
out
add
enter
rcl
pop
jge
xor
ins
stc
dec
mov
outs
mov
push
cwde
aam
or
sbb
cs
sub
pusha
mov
mov
dec
leave
mov
jmp
sar
push
pop
ss
pop
(bad)
pop
imul
mov
mov
stos
jb
jecxz
lock
test
out
call
out
jmp
add
mov
div
ins
repz
or
and
dec
lods
jo
pop
push
cmp
and
mov
mov
cli
scas
inc
in
cmp
push
fsubrp
outs
push
leave
in
cmp
cmc
jp
aad
or
call
mov
inc
xchg
or
sti
ds
xchg
inc
jmp
jne
adc
dec
fcmovu
cdq
push
push
cmc
scas
jecxz
lds
dec
fidiv
sbb
int3
lock
jmp
cld
jnp
(bad)
xor
pop
test
dec
popf
mov
and
sar
pop
pop
jecxz
xchg
add
lds
pushf
sbb
inc
jmp
jne
aad
mov
enter
push
sbb
ret
xlat
sub
fbld
fs
sbb
sub
movs
sbb
push
retf
or
mov
iret
cld
and
jnp
or
inc
or
push
mov
jp
jbe
pop
test
mov
ficomp
loopne
(bad)
pop
mov
cmovnp
jae
sub
nop
xor
fild
es
lock
mov
xchg
clc
mov
fnsave
dec
xor
cmp
arpl
pop
jmp
jnp
pop
retf
sahf
out
pushf
das
icebp
stos
push
push
outs
aad
mov
adc
xchg
cli
push
and
dec
jmp
sbb
sub
adc
xor
fdiv
(bad)
ds
call
sub
(bad)
cdq
std
inc
imul
out
movs
shl
out
adc
shl
nop
fsub
sub
scas
jnp
adc
scas
push
xor
sbb
gs
cmp
push
or
or
jo
mov
test
imul
add
sub
xchg
cs
dec
fnstenv
lock
sub
sub
push
(bad)
repnz
push
popa
push
cmp
dec
xor
fsub
add
mov
sbb
(bad)
add
jbe
aas
add
xor
daa
clc
adc
in
dec
pop
scas
retf
jnp
clc
and
jle
jp
pop
add
sar
xchg
pop
pop
in
or
jne
shl
and
or
adc
in
sbb
adc
cdq
bound
sub
pop
mov
loopne
and
and
push
scas
cld
stc
cmc
cmps
mov
jg
arpl
pop
xor
push
into
imul
out
cmp
enter
xchg
dec
pushf
lods
icebp
out
pop
cmp
retf
addr16
js
dec
cmc
js
jae
pop
fisttp
dec
push
pop
call
sub
or
mov
or
fwait
jmp
in
dec
rcr
in
fild
xchg
push
fdiv
(bad)
stos
fmul
sub
add
add
pop
mov
loopne
shl
mov
inc
push
jecxz
xor
leave
(bad)
(bad)
out
(bad)
pop
xor
mov
mov
jb
shl
adc
mov
sar
ficomp
(bad)
out
mov
ins
call
inc
dec
sub
es
inc
mov
(bad)
mov
and
cld
fwait
repnz
xchg
adc
int
sar
pop
and
pop
shl
sbb
retf
adc
gs
movntps
mov
mov
stos
outs
add
rcl
lods
pop
(bad)
pop
aam
out
in
mov
or
in
imul
xchg
cmps
cwde
popf
dec
jno
clc
aam
sti
mov
and
je
add
out
mov
pushf
xor
fs
icebp
add
mov
add
clc
xchg
ja
inc
outs
jae
stos
adc
cmps
push
inc
ror
mov
cdq
jle
xchg
xchg
cmp
sbb
and
or
cs
adc
pop
sub
jge
dec
and
add
rcr
mov
mov
idiv
sub
aad
jmp
retf
leave
sar
aam
cdq
clc
adc
jp
xchg
cmps
add
jp
retf
mov
lahf
jecxz
fcomp
das
sub
jmp
adc
and
lods
fsub
in
popf
push
nop
dec
aas
xchg
xchg
inc
cmp
(bad)
adc
hlt
xchg
stos
fild
movs
mov
xchg
or
push
and
mov
add
ins
mov
into
(bad)
in
mov
cwde
test
xor
into
repnz
test
mov
dec
mov
test
inc
xchg
inc
outs
xor
mov
xor
add
mov
and
movs
lods
pop
pmaddwd
xchg
push
cwde
bound
cmc
ret
cwde
pop
cwde
and
int
dec
sti
xlat
add
fs
fnstcw
shr
or
adc
rcr
stc
xchg
gs
cld
jp
ins
cmp
inc
and
mov
xchg
cmps
jecxz
sbb
mov
inc
addr16
adc
in
daa
add
data16
dec
out
and
rol
scas
jnp
add
ret
or
push
ins
dec
cmovb
es
ret
or
push
add
or
xor
inc
test
xchg
or
inc
or
std
mov
ret
(bad)
mov
pop
(bad)
jge
in
scas
(bad)
xor
mov
push
in
adc
and
cmp
(bad)
adc
sub
sahf
mov
push
pop
mov
cwde
ret
mov
push
and
dec
mov
stc
fld
fldln2
imul
cmp
aas
adc
test
fdiv
mov
cs
lods
push
pop
push
push
lods
sti
inc
arpl
xor
bound
or
lahf
sbb
add
lods
or
xchg
in
pop
jns
es
(bad)
pop
ret
inc
outs
test
(bad)
std
fidiv
lea
add
addr16
dec
aas
retf
sbb
iret
pop
cmp
mov
cmp
push
lahf
fiadd
jb
xchg
icebp
sub
iret
loopne
jnp
push
nop
dec
jmp
sub
push
xchg
pop
les
or
cs
inc
mov
push
bound
imul
ret
jmp
jbe
mov
sbb
and
(bad)
popa
ins
out
ja
xchg
cmp
dec
xor
mov
xlat
push
and
sub
lock
add
jns
iret
sub
push
xor
popa
jge
cld
popf
sub
in
pop
add
jb
cdq
test
and
cmc
inc
call
xchg
mov
sbb
push
jnp
mov
rcr
(bad)
inc
mov
or
loope
(bad)
mov
(bad)
and
push
sbb
xor
mov
je
fstp
mov
cmp
js
das
push
fnstenv
push
dec
dec
(bad)
or
sub
ss
mov
outs
scas
sar
pop
jmp
jbe
xchg
xchg
fdivr
pop
(bad)
dec
(bad)
xchg
add
lock
xchg
int
js
loopne
mov
inc
pop
shl
scas
or
int3
and
cwde
scas
iret
jge
mov
sub
pop
movs
leave
dec
(bad)
or
inc
pusha
pop
hlt
pop
data16
stc
outs
div
shl
mov
daa
add
mov
sti
imul
xchg
sar
call
xor
shl
or
test
mov
mov
cmps
call
ret
sbb
or
xchg
in
scas
jle
xchg
jo
cs
mov
cbw
adc
pusha
jmp
jg
sti
fcomp
cld
call
ss
test
pop
or
loopne
pop
push
in
rcr
pop
cmc
ins
(bad)
imul
pop
(bad)
in
push
jmp
cmps
and
mov
and
sbb
push
sbb
loope
test
pop
addr16
test
(bad)
ror
mov
jbe
xchg
cmp
scas
sbb
pop
jb
ret
pop
fsin
rol
xchg
jbe
enter
adc
add
xor
cld
punpckhwd
xlat
xor
and
or
push
icebp
pop
leave
sbb
adc
mov
adc
jg
pop
mov
cmp
frstor
leave
sbb
popf
or
cli
in
in
push
movaps
mov
and
sbb
pop
sbb
cmp
dec
push
out
xchg
movs
es
lea
add
sbb
(bad)
cld
imul
daa
in
test
rcr
push
(bad)
pusha
shl
jge
movs
push
fdivr
ret
je
leave
push
iret
idiv
xadd
sbb
mov
mov
mov
cdq
pop
fwait
std
xchg
jbe
and
add
imul
push
das
push
dec
ret
or
shl
(bad)
aad
cmp
mov
lods
push
and
sub
mov
sub
xchg
xchg
in
push
out
jnp
mov
and
add
xchg
mov
pop
add
and
sbb
cmps
std
xor
loop
sub
pop
mov
add
mov
lds
rcr
jns
sti
enter
xor
xchg
popa
fisub
adc
cmp
jle
out
out
sub
mov
mov
or
shl
mov
sub
test
pop
sub
enter
das
xor
jbe
repnz
mov
sti
mov
pop
xor
in
iret
cmp
inc
arpl
mov
icebp
or
add
call
pop
dec
sub
(bad)
mov
pop
out
or
mov
out
ret
cld
cmp
scas
fbld
pop
mov
les
aas
retf
sbb
push
pop
push
fidivr
shl
add
in
repnz
sbb
xchg
xor
xchg
lock
mov
pop
sbb
xor
add
int
out
nop
(bad)
ds
xchg
xor
push
mov
test
push
pop
jo
dec
int
mov
push
nop
test
aam
lds
xor
test
push
cmc
pop
mov
fsub
fisttp
into
inc
loopne
mov
pop
shl
sub
jo
stos
dec
and
xchg
pop
jbe
jp
sub
push
(bad)
(bad)
push
daa
jbe
jle
jl
jmp
mov
mov
outs
fimul
aad
or
pop
mov
out
adc
out
pop
hlt
into
xchg
and
sub
loope
jp
xor
and
std
inc
(bad)
(bad)
pushf
push
pop
pop
xor
add
sbb
cmp
mov
daa
(bad)
mov
clc
xor
mov
or
sub
test
(bad)
lea
push
cld
retf
ins
cdq
test
movs
jmp
mov
dec
adc
push
ins
push
aad
or
or
(bad)
push
mov
(bad)
mov
sar
xchg
retf
ds
mov
push
sbb
ret
enter
int3
push
push
imul
ret
xchg
sbb
mov
jne
jmp
sbb
fidiv
out
and
sub
fdivr
out
imul
mov
pushf
inc
enter
dec
xchg
aas
in
or
mov
dec
daa
sahf
add
in
pop
jg
jnp
rcr
test
xor
jb
xor
mov
shl
add
sar
mov
mov
push
fisub
sti
sti
or
cdq
mov
sub
cmp
and
push
loopne
call
arpl
sub
jne
jge
jecxz
xchg
dec
mov
idiv
xchg
and
mov
sbb
pop
xchg
dec
inc
cmc
bound
movs
and
xchg
or
aaa
rol
mov
in
mov
add
mov
nop
inc
mov
fisubr
imul
movs
aad
shl
in
rcr
lds
xchg
cmp
inc
pop
sbb
mov
add
sahf
mov
adc
std
push
xchg
loop
inc
cld
lods
cdq
(bad)
cmp
(bad)
cwde
jbe
lods
pop
iret
call
out
iret
retf
adc
sub
add
lds
jg
push
ins
jp
in
jne
push
pop
fwait
mov
fstp
je
inc
mov
dec
pop
popa
xchg
(bad)
rcl
fisub
jge
push
mov
sbb
inc
inc
inc
pusha
hlt
mov
bound
sti
xlat
xchg
pop
loopne
movs
adc
inc
scas
nop
dec
xor
in
sti
jne
push
iret
icebp
adc
mov
inc
movs
aaa
xor
jbe
mov
sar
sti
imul
lahf
fisttp
jno
fadd
js
ins
rol
ins
cs
in
cli
dec
mov
and
adc
aas
jbe
fimul
es
pusha
or
in
dec
sub
xchg
icebp
jp
xchg
mov
bound
xor
dec
shl
cmps
gs
fisttp
dec
mov
mov
into
sbb
mov
aas
into
cmp
lds
adc
push
jno
inc
push
xchg
add
push
mov
hlt
or
mov
stc
push
jle
clc
addr16
out
xchg
inc
xchg
dec
sub
movs
out
lea
cmp
xchg
dec
and
jbe
push
ss
sbb
fistp
push
mov
hlt
stos
daa
(bad)
scas
sbb
shl
sar
lahf
call
adc
retf
ds
mov
push
mov
ja
ror
in
sbb
push
jnp
add
imul
je
mov
jecxz
dec
popa
cmps
das
(bad)
std
dec
sahf
pop
cmp
mov
jne
dec
and
in
and
sbb
xchg
ficomp
lock
or
sbb
inc
sbb
call
xchg
scas
sbb
pop
ja
inc
inc
mov
jmp
cmp
inc
test
pop
fcom
rcl
xlat
iret
aam
mov
adc
int3
inc
jae
jae
lods
xchg
push
and
test
ja
cmp
xchg
pop
movs
mov
call
and
shl
and
jnp
xor
adc
adc
mov
in
sub
mov
and
sub
ss
xlat
jecxz
xchg
jg
sub
movs
fnstenv
cli
or
pusha
push
cdq
jge
jns
mov
stc
jb
fistp
fnstcw
jmp
jecxz
sbb
stos
lfs
mov
xlat
xor
mov
cmp
mov
aad
add
call
pop
sahf
and
inc
stos
cmps
cmp
inc
out
jg
sbb
xchg
paddb
mov
test
push
adc
mov
outs
add
inc
enter
mov
daa
clc
cmp
rol
xchg
in
and
mov
adc
jmp
push
aas
pop
and
lods
add
mov
push
ins
pop
pop
inc
not
imul
inc
mov
add
rcr
mov
push
push
xchg
lock
repnz
sbb
add
inc
mov
sub
xor
ins
xchg
ss
mov
cld
fst
sub
pop
jl
mov
push
inc
jle
mov
aam
iret
pop
(bad)
ins
js
repz
bound
popf
pop
cld
sub
into
push
mov
mov
cmps
jae
mov
mov
stos
lods
xchg
movlhps
mov
(bad)
jbe
dec
pop
xor
int
fidivr
xchg
or
rcl
out
lea
ror
pop
les
inc
fistp
and
test
fcomip
bound
push
and
stos
lds
daa
inc
(bad)
xor
jg
es
test
or
xchg
cmp
sub
ss
jg
push
pop
inc
cmp
cmc
sub
in
jns
sub
jmp
fcom
push
cli
jb
jb
stc
fisubr
xchg
sbb
cmps
call
inc
mov
aas
mov
mov
jmp
mov
cmp
and
fist
mov
sti
and
pop
aam
test
push
loopne
adc
(bad)
push
in
push
movs
adc
mov
xchg
in
push
(bad)
xor
test
jb
mov
aas
pop
sbb
jge
push
jp
aaa
repnz
fnstcw
retf
or
sar
jns
cmp
inc
cmp
push
mov
inc
retf
dec
and
cmp
fild
push
push
add
and
jo
mov
pop
mov
push
cmp
jns
cwde
repnz
inc
dec
push
sbb
jno
push
imul
cmps
mov
cli
in
fwait
stc
jbe
jmp
call
push
jne
repz
mov
jb
adc
retf
test
mov
jns
xor
mov
xchg
mov
cmp
add
add
inc
popf
jno
sti
push
sar
mov
in
int
or
es
jnp
test
pop
jmp
xor
jmp
push
mov
retf
add
push
sub
lock
xor
imul
mov
jo
mov
iret
ret
mov
out
xchg
repnz
sbb
mov
loopne
inc
mov
mov
out
out
js
popa
dec
icebp
scas
pushf
add
dec
mov
mov
xor
jmp
ins
movs
into
cmp
nop
inc
lds
repnz
(bad)
jnp
in
shl
das
mov
test
mov
in
imul
mov
aaa
scas
or
add
or
(bad)
sub
cwde
mov
mov
(bad)
and
mov
in
pop
sbb
ror
add
fwait
pop
and
leave
(bad)
out
call
nop
sbb
dec
into
loope
mov
dec
ret
je
and
(bad)
(bad)
and
push
imul
xchg
add
ret
ficom
cwde
aad
push
dec
jmp
mov
adc
mov
dec
push
cmp
cmc
add
fs
sbb
into
retf
mul
dec
outs
sbb
rol
xor
add
adc
arpl
in
inc
mov
out
jl
dec
in
jmp
retf
cmps
add
xor
pop
dec
fs
dec
loopne
leave
fwait
pop
aaa
dec
mov
mov
cld
clc
pop
imul
pusha
ret
loope
jno
sub
and
je
jl
popf
and
mov
rol
enter
mov
lea
scas
xchg
add
jnp
popa
cli
cli
sbb
mov
in
and
clc
loope
pop
pop
jne
out
dec
sbb
xchg
mov
sub
into
inc
xchg
add
adc
adc
cld
push
jmp
icebp
cmps
jge
sti
outs
outs
sbb
cli
sbb
fcmovu
dec
iret
inc
call
add
mov
mov
daa
out
in
lods
(bad)
dec
movs
mov
push
and
nop
sbb
cmp
(bad)
cwde
cmp
in
and
push
pop
pop
push
pop
cmp
xchg
adc
dec
aam
jns
loope
xor
cmp
leave
mov
sub
(bad)
imul
jno
xor
xchg
sbb
pop
rol
pop
xchg
sbb
lsl
and
aas
into
xchg
je
pop
into
es
mov
add
push
fstp
jmp
addr16
add
adc
cmp
push
(bad)
ins
add
mov
enter
mov
sbb
push
xor
mov
popa
sub
jge
push
mov
inc
mov
mov
add
out
jo
js
clc
jne
pop
add
pop
pcmpeqd
jno
add
xchg
push
mov
lods
xor
push
retf
pop
adc
push
pop
(bad)
repz
cmps
cmps
ret
xor
(bad)
jmp
jo
sahf
jo
cmp
inc
mov
cwde
inc
jmp
sub
or
loopne
sbb
test
popf
mov
dec
nop
mov
adc
push
ja
(bad)
or
inc
adc
cld
mov
xor
(bad)
mov
adc
jns
xchg
cmps
fwait
mov
push
mov
loop
dec
ret
aaa
jecxz
mov
(bad)
(bad)
push
add
mov
jmp
inc
ins
push
push
and
int3
xor
xchg
jecxz
fmulp
push
into
cmp
(bad)
mov
aad
xchg
xor
sbb
mov
enter
outs
push
cwde
cmp
cmp
js
push
xor
mov
mov
pop
mov
out
pop
imul
jnp
and
mov
leave
mov
xchg
mov
in
xchg
or
dec
cmp
mov
fisubr
cld
adc
mov
xor
(bad)
es
jns
repz
lods
add
inc
and
sahf
xor
mov
test
daa
stos
fnstenv
cmc
es
daa
pop
push
xor
jg
sbb
push
sbb
mov
stos
dec
test
dec
mov
popf
add
popf
mov
mov
jns
scas
popf
imul
and
mov
call
shl
aam
loope
iret
shl
or
sub
rcl
pop
in
push
ret
fmul
mov
mov
dec
mov
out
cmp
xchg
out
cmps
or
jge
sti
mov
shl
pop
mov
xchg
pop
xchg
push
retf
jbe
pop
(bad)
in
add
loope
into
retf
xchg
fadd
stos
(bad)
push
mov
sub
ret
push
jmp
das
pop
dec
fidiv
in
xchg
xor
mov
fs
fimul
push
(bad)
jmp
mov
mov
mov
mov
outs
and
popa
cmp
push
jecxz
mov
push
dec
aad
and
jp
mov
pop
in
out
jecxz
push
ins
sbb
push
push
and
lea
cmps
jo
mov
mov
push
nop
or
sub
fimul
xor
dec
mov
mov
test
or
scas
out
inc
or
into
neg
iret
(bad)
ins
shl
or
mov
sub
sbb
or
fadd
inc
js
outs
loopne
call
pop
xchg
int3
mov
add
inc
mov
jbe
inc
mov
in
xor
cmp
jmp
dec
sbb
adc
jb
lock
xchg
test
mov
in
or
and
sub
mov
je
add
push
in
cmps
or
cmps
pop
shl
out
cmp
mov
inc
cmp
shl
pusha
ja
mov
add
in
imul
(bad)
scas
adc
mov
out
fadd
inc
jge
dec
and
fs
sub
loopne
jp
sub
add
loope
cmp
xchg
cmps
ror
rcl
fs
inc
shl
mov
adc
cwde
push
cmp
icebp
loop
or
(bad)
sbb
push
cmp
imul
push
or
push
out
cmp
mul
test
fxch
cmps
sub
aad
or
jl
mov
in
mov
hlt
and
add
mov
std
stos
and
cmps
je
mov
es
mov
jns
cmp
nop
push
mov
fs
cmp
test
jnp
jnp
and
mov
and
push
mov
fcomp
add
sbb
aad
shl
or
dec
pop
iret
mov
rcr
call
push
mov
in
in
fisttp
mov
push
sub
(bad)
movs
aas
adc
cmp
(bad)
clc
mov
mov
xchg
int
arpl
jae
xchg
sbb
(bad)
stos
jmp
dec
sbb
fwait
xchg
mov
mov
inc
gs
or
ss
inc
sti
mov
adc
mov
enter
jbe
sbb
and
data16
add
dec
cmp
xor
nop
and
xlat
push
or
push
lahf
mov
clc
add
retf
mov
adc
dec
out
xchg
adc
ja
aam
xchg
hlt
cs
xor
nop
push
jmp
lock
repz
sub
data16
jle
gs
pop
mov
add
and
movs
xchg
fild
push
loope
sbb
(bad)
cwde
xchg
ret
xchg
jnp
arpl
idiv
add
sbb
leave
bound
imul
aad
test
mov
cli
xor
mov
cmc
test
jne
dec
pop
ja
cs
or
mov
and
jecxz
pop
jmp
inc
xor
(bad)
and
ficom
pop
xlat
adc
push
dec
inc
cmp
cmps
pop
clc
sbb
clc
lea
cmp
dec
out
mov
cmp
mov
inc
jecxz
push
out
xor
arpl
sbb
call
fwait
in
xchg
aam
je
mov
pop
jp
rol
push
adc
pop
xor
dec
push
call
dec
retf
push
dec
mov
jp
out
add
add
cmc
cmp
paddusw
retf
int
clc
arpl
bound
fisttp
call
cwde
neg
icebp
ficomp
xor
das
jnp
jmp
inc
mov
popa
and
mov
jbe
mul
repnz
daa
ss
cmps
jae
fld
xlat
out
(bad)
(bad)
or
test
pop
fwait
dec
jmp
push
or
loope
mov
(bad)
mov
and
mov
bound
enter
cld
sbb
adc
sub
ds
fidivr
xor
add
jl
std
jne
in
(bad)
mov
popa
sahf
add
mov
addr16
or
stc
aas
add
xor
mov
daa
adc
bound
out
inc
jmp
sub
sbb
data16
xchg
rcr
test
and
inc
test
mov
popa
repnz
(bad)
js
mov
push
or
daa
(bad)
shl
jbe
xchg
ja
test
dec
jl
mov
add
js
sbb
mov
sahf
mov
pop
jns
sbb
mov
jge
sub
sub
pop
cdq
jecxz
dec
pop
push
sbb
daa
stc
sti
ins
cmp
pop
mov
(bad)
ins
aad
out
cmp
out
nop
popa
add
adc
fsub
clc
test
aad
loop
cmp
inc
es
lods
push
add
inc
mov
cdq
sbb
cmp
ja
mov
test
or
dec
loopne
cli
fcom
xchg
(bad)
jle
push
pop
scas
jns
and
or
or
mov
loope
fdivr
in
(bad)
out
or
call
not
shl
inc
pusha
test
retf
rol
dec
js
and
aad
bound
ins
push
push
sbb
xchg
shl
arpl
inc
add
or
scas
dec
sahf
dec
into
cmovge
pusha
in
iret
shr
dec
mov
mov
or
daa
clc
mov
sub
scas
cmp
jg
mov
jge
or
pop
pop
mov
nop
(bad)
cmp
in
pop
les
cmp
retf
sbb
aad
cmp
mov
daa
xor
add
outs
adc
pop
fwait
out
loopne
stos
jp
xchg
fdiv
cmc
adc
leave
out
out
daa
add
sbb
sti
lock
imul
push
adc
(bad)
sbb
dec
mov
jge
push
sti
data16
jmp
pop
(bad)
cmp
ja
lods
jne
test
movs
mov
adc
push
ficomp
lods
fcomp
lahf
cmc
sub
aad
loopne
iret
add
sub
outs
xchg
ret
ins
(bad)
jbe
jl
sbb
jg
les
ins
pop
mov
repz
scas
mov
jg
adc
push
stc
scas
ja
inc
clc
js
push
dec
aaa
icebp
popa
xchg
imul
mov
lahf
jmp
inc
repnz
cdq
adc
aas
mov
into
cli
jp
mov
inc
sub
mov
inc
jbe
(bad)
out
ror
bound
or
data16
jb
or
outs
pop
paddb
lock
or
sub
ds
popf
sbb
test
mov
xchg
or
sbb
bound
js
ds
in
inc
push
cmp
cli
sbb
test
movs
cli
out
push
mov
or
shl
mov
xor
mov
(bad)
sub
push
xchg
hlt
jmp
js
neg
imul
jmp
pop
xor
and
dec
xor
aam
lea
dec
and
jmp
(bad)
int
std
std
push
outs
in
jge
jmp
jbe
adc
sbb
fsubr
mov
das
and
jne
shl
mov
xlat
pcmpeqw
gs
or
cmps
add
ja
stos
stc
lahf
scas
pop
int
pop
cmps
dec
pop
enter
mov
imul
jg
inc
or
js
inc
into
ror
xor
fist
aad
imul
fldenv
jge
fld
daa
xor
add
or
sti
push
xchg
std
sbb
ja
mov
(bad)
push
mov
mov
call
jb
adc
pop
faddp
mov
shl
adc
ins
les
repnz
nop
fcomi
data16
test
push
sub
pushf
push
add
mov
adc
ret
call
test
xchg
mov
shl
xchg
clc
jmp
in
mov
cmc
mov
pop
or
mov
ds
popf
pusha
cmp
push
xor
mov
push
cmc
xor
ss
out
data16
ffree
xor
fsub
xchg
in
xchg
cmp
sbb
jno
(bad)
cmp
xor
or
lock
adc
cwde
(bad)
pop
mov
test
pushw
sbb
iret
mov
pop
mov
outs
fld
jge
mov
xchg
fxch
ret
shl
pushf
das
jo
cwde
fidiv
stos
dec
add
out
inc
sbb
adc
add
data16
pushf
(bad)
xor
add
jmp
js
add
xchg
dec
inc
dec
inc
inc
cmps
cdq
in
inc
leave
jecxz
int3
mov
cmp
sbb
in
in
sub
push
aaa
ds
fisubr
xor
xchg
fwait
out
mov
xchg
cld
xchg
mov
push
hlt
xchg
cmp
movs
pop
xor
jmp
loopne
in
push
cdq
push
test
and
out
movs
(bad)
add
aad
mov
int3
jno
push
lods
cdq
add
cmps
jge
or
jmp
push
int
outs
mov
pop
mov
sbb
aas
adc
leave
add
loopne
pop
pop
and
dec
dec
and
scas
sbb
and
(bad)
sbb
lods
popf
xchg
xchg
mov
in
adc
mov
pop
inc
ins
(bad)
mov
jns
(bad)
sub
int
cmc
dec
sbb
cmp
mov
aas
sbb
cdq
jge
mov
iret
cdq
sbb
sbb
test
inc
ins
out
(bad)
mov
xchg
adc
xor
cwde
push
or
push
sbb
and
in
cld
inc
xor
xor
jp
adc
push
or
cli
(bad)
jmp
loopne
xchg
in
fadd
adc
sahf
pop
aam
jbe
adc
rcr
mov
sub
jl
mov
cmp
xchg
mov
inc
adc
sbb
adc
inc
lods
add
je
xor
xchg
fwait
lock
(bad)
fmulp
pop
dec
out
push
xlat
or
xchg
loop
mov
loop
je
into
repz
mov
pop
xchg
aas
inc
jns
stc
in
pushf
test
retf
imul
jbe
add
lea
mov
rcl
sub
xor
sahf
(bad)
(bad)
sahf
inc
test
sbb
daa
pushf
mov
pop
(bad)
inc
sub
adc
cwde
push
or
retf
jns
jle
adc
adc
scas
xchg
ja
test
xchg
mov
jmp
and
pop
in
mov
out
mov
mov
mov
sub
(bad)
xor
std
jbe
mov
out
outs
sahf
sub
adc
sbb
xchg
out
dec
push
shl
xchg
leave
(bad)
push
jmp
pop
nop
loope
int
ret
sub
or
jmp
popf
sbb
lahf
or
mov
cdq
sub
sbb
mov
mov
lods
out
xlat
pop
push
push
fisttp
(bad)
aam
ins
movs
movs
mov
shl
mov
push
mov
ins
cmps
mov
in
cmp
jbe
stos
int3
in
xlat
add
mov
jae
(bad)
and
add
pop
push
icebp
aaa
cmp
les
inc
int
cmp
jne
jle
cmp
pop
push
je
jbe
call
out
jmp
loope
aaa
xchg
inc
jmp
mov
sub
retf
gs
or
add
adc
loope
xor
test
int3
and
sbb
fisubr
fcmovb
mov
push
mov
aad
(bad)
jp
lock
add
aas
adc
or
outs
ror
xchg
adc
pop
dec
and
(bad)
retf
not
xchg
(bad)
loopne
adc
mov
daa
arpl
or
lea
pop
sbb
push
fmul
adc
cli
xor
mov
sti
loop
rcl
pop
movs
int3
enter
cmp
arpl
cmp
int3
daa
push
popa
sbb
call
mov
xchg
inc
xchg
imul
or
div
or
mov
pop
xor
cmp
out
enter
ins
dec
fcomp
in
sub
sub
cmp
cli
icebp
push
jne
xor
fchs
push
(bad)
out
jnp
aam
sub
jge
pop
retf
out
xchg
(bad)
jmp
cmps
(bad)
cmp
loope
mov
aad
adc
out
jp
call
or
jno
cmp
sti
data16
mov
aad
xor
xchg
adc
mov
or
mov
cmp
and
mov
xchg
xor
xor
and
cmp
call
stc
xchg
pushf
mov
xchg
fidivr
out
mov
mov
scas
scas
xlat
push
and
int3
xchg
push
jne
imul
and
les
ins
push
out
in
inc
fcmovu
sahf
or
(bad)
repz
in
pop
pop
gs
sbb
xchg
or
pop
lods
fs
sub
ror
or
test
test
dec
scas
out
imul
pop
inc
pop
cs
fisttp
ror
bound
nop
movs
fdiv
dec
mov
dec
mov
neg
sub
push
in
leave
or
into
pop
repz
cmp
or
or
ret
pushf
dec
sub
inc
loop
test
out
jns
inc
mov
fldcw
loope
out
hlt
retf
mov
das
fidivr
mov
mov
test
inc
fsubr
repz
ins
ds
rcl
stos
jecxz
mov
xor
(bad)
sti
adc
in
xor
test
adc
lea
xchg
mov
ret
mov
icebp
or
push
sub
sahf
popf
dec
je
add
and
ficom
pop
fisub
xchg
ins
les
mov
neg
pop
pop
clc
sub
add
push
pop
popf
or
aas
and
nop
clc
sti
enter
pop
mov
pop
rol
ds
repnz
cmp
jno
jg
stc
cmp
adc
gs
pop
arpl
mov
jmp
mov
mov
in
sbb
cmp
fsubr
mov
rol
icebp
ins
mov
sbb
repnz
pop
sahf
repz
fisttp
xchg
sbb
mov
sahf
movs
fisub
shr
test
mov
pop
clc
push
mov
pop
mov
retf
cmp
mov
xchg
out
test
push
dec
rcr
xchg
stos
es
xor
mov
arpl
es
out
inc
pop
je
out
mov
adc
pop
pop
out
retf
mov
mov
mov
cld
lea
mov
js
jbe
ja
mov
lock
xchg
cmp
and
ins
mov
jmp
cwde
lods
mov
xchg
and
cmp
mov
mov
jmp
push
retf
mov
cmp
stos
leave
pop
mul
or
jecxz
push
sub
daa
jo
scas
lea
dec
pop
jo
cmp
jp
add
mov
ret
sbb
add
lods
pop
mov
add
ins
cmp
sub
and
movs
movs
cmp
add
aam
jo
lods
adc
sahf
push
sub
call
adc
and
adc
add
aas
pop
mov
cmp
add
mov
in
repnz
mov
dec
das
addr16
and
xchg
fst
push
and
xor
sub
adc
cmp
add
ds
in
dec
pop
cmp
hlt
jp
mov
jecxz
jp
cwde
cli
pop
mov
mov
rcr
lods
retf
sbb
jmp
inc
sub
or
cs
mov
int
xor
(bad)
push
and
inc
stos
xor
jae
jns
push
adc
xchg
xlat
inc
popa
push
imul
into
push
mov
mov
push
lods
add
test
test
repz
dec
sbb
test
push
add
pop
pusha
idiv
sti
aas
push
dec
mov
mov
add
sbb
(bad)
cmp
inc
or
cmps
mov
add
xor
inc
mov
dec
ficom
icebp
xchg
add
or
loop
mov
fmul
addr16
je
gs
pop
pop
mov
iret
push
fadd
add
add
mov
xchg
mov
jbe
sti
stc
adc
mov
jns
bnd
shr
sbb
test
inc
adc
and
xor
mov
and
jl
and
sbb
mov
jecxz
jne
(bad)
mov
pop
jmp
ds
cmps
sub
ins
jle
push
aam
xchg
or
sub
jbe
imul
sub
add
dec
test
outs
dec
mov
xchg
das
outs
sub
jae
mov
enter
sub
ret
gs
pusha
rol
clc
jo
shl
mov
mov
outs
fidivr
std
gs
(bad)
xlat
dec
mov
add
jle
sub
jo
callw
pop
pop
adc
mov
fidivr
mov
popf
sbb
mov
cs
mov
jle
imul
or
jae
ds
enter
aad
pop
sahf
pop
add
mov
jl
aas
sbb
out
cvtps2pd
jmp
movs
pop
adc
in
push
fstp
mov
lock
clc
in
adc
imul
mov
cwde
mov
push
ins
pop
inc
add
test
cmps
popf
fisttp
mov
sub
or
(bad)
test
aas
xchg
dec
rcl
mov
mov
adc
adc
fnstcw
xchg
xchg
std
bound
jne
adc
std
add
push
repz
outs
(bad)
jne
mov
mov
jmp
adc
fs
xchg
call
(bad)
mov
data16
jbe
pushw
sbb
mov
add
imul
mov
xchg
(bad)
jb
movs
pop
fdiv
mov
outs
pop
sysenter
cmp
cmp
cmps
icebp
dec
fcomp
mov
jecxz
xor
cs
dec
scas
push
pop
fidivr
in
xchg
mov
repnz
lahf
sahf
add
jnp
xlat
jecxz
push
retf
fs
ficom
xchg
and
xlat
popf
test
fstp
(bad)
lock
test
and
push
mov
cmp
jecxz
or
mov
(bad)
xor
outs
jg
int
and
sub
jmp
es
pop
repnz
movs
or
gs
dec
mov
mov
call
stc
or
arpl
test
xchg
shl
int
xor
mov
sahf
std
inc
or
push
xlat
inc
pushf
rcl
mov
sub
test
pop
in
fld
xor
aas
add
inc
add
push
xor
fldenv
mov
cmove
aas
mov
aad
movs
dec
xor
lds
jb
stc
sub
dec
add
jg
sub
sbb
sub
push
pop
add
popf
jb
mov
cdq
mov
jb
cs
push
mov
sbb
repz
jge
pop
cdq
lahf
fsubr
mov
lods
mov
outs
jo
ss
cmp
jae
and
mov
xchg
aam
adc
adc
pop
call
loop
jle
(bad)
int3
arpl
sub
imul
aam
cmp
scas
cmp
(bad)
xor
cld
frstor
ror
xchg
mov
shl
add
or
in
inc
(bad)
mov
scas
dec
xlat
mov
push
cld
sub
in
cs
ds
xor
mov
out
adc
jge
test
sub
inc
scas
(bad)
add
pop
sti
adc
jle
(bad)
xlat
clc
mov
clc
cmp
fnop
(bad)
xor
(bad)
ret
pop
dec
mov
pop
mov
dec
and
rcl
loope
inc
in
mov
and
sahf
or
cmps
or
pop
jne
stos
pop
test
fadd
mov
inc
test
inc
sbb
adc
aad
or
ins
popf
cmps
imul
test
xor
inc
sub
stos
imul
mov
lds
retf
cmp
pusha
cwde
cdq
mov
sbb
sbb
xchg
sub
mov
xor
les
pop
sub
mov
mov
mov
aam
fidiv
xlat
les
ds
dec
cli
inc
push
xor
adc
mov
add
cmp
inc
inc
sti
pop
and
or
je
lea
add
in
sbb
in
adc
out
add
push
mov
loope
pop
mov
mov
retf
xlat
xchg
push
ins
scas
test
sahf
inc
das
jle
xor
lods
dec
das
push
arpl
xor
aaa
(bad)
sub
(bad)
pop
inc
jb
or
lods
and
(bad)
push
dec
in
dec
(bad)
jp
and
leave
jge
in
adc
ret
jbe
out
sub
mov
lods
je
cmc
add
imul
iret
aaa
adc
pusha
hlt
sub
pop
fcom
out
std
int3
pop
lods
out
or
push
push
sar
stos
sbb
fisubr
loopne
aam
fcmovu
jle
mov
stc
in
mov
adc
sub
mov
jne
push
div
push
sub
pop
xchg
repz
mov
dec
cmps
outs
dec
call
jle
test
inc
cmp
jns
adc
jl
xor
sbb
icebp
mov
std
out
out
inc
fwait
add
adc
lods
scas
into
pop
mov
scas
jae
push
outs
scas
cmp
add
movs
mov
jl
rol
retf
into
out
cmp
inc
pop
leave
repnz
mov
lock
or
add
xchg
fsubrp
jae
dec
in
addr16
and
test
out
out
test
add
lods
xchg
or
pop
dec
lahf
icebp
or
and
adc
out
pushf
sub
jl
xchg
pop
cli
mov
jb
or
enter
pop
rol
or
or
out
mov
xchg
add
js
and
pop
lods
xchg
test
dec
stc
dec
outs
mov
fist
or
pop
icebp
in
xor
inc
lods
jg
pop
mov
adc
push
jbe
bound
loop
stos
sbb
cmp
push
push
popa
sub
mov
adc
mov
es
lods
kandnw
retf
dec
pop
lahf
int3
cmp
or
retf
(bad)
cmps
xchg
sbb
jg
lahf
scas
neg
sbb
sub
inc
adc
cmps
dec
jnp
pop
sahf
hlt
arpl
sti
cmp
imul
out
jge
jmp
arpl
xchg
sub
out
push
jns
sbb
ret
in
xor
push
cmp
retf
in
add
cmp
ror
js
pop
add
fwait
shl
rcl
lds
mov
pop
lods
daa
cmp
lods
sbb
or
or
or
in
sbb
adc
push
or
lock
and
mov
neg
or
mov
cld
xlat
je
ss
mov
(bad)
sub
jp
arpl
into
sub
ja
cmp
cwde
repnz
jl
fisttp
test
mov
inc
ja
jne
idiv
sahf
fwait
je
cld
add
add
das
jo
pop
scas
stc
push
nop
jle
sub
test
mov
pop
inc
push
enter
add
call
push
test
add
lahf
inc
push
icebp
jp
out
pop
mov
dec
icebp
popf
sbb
xor
adc
dec
fs
jg
stos
add
pop
sub
mov
icebp
ins
addr16
xor
dec
jecxz
sbb
sbb
sub
sub
adc
fisub
push
aad
mov
test
cmp
fwait
popa
sar
(bad)
cmc
jae
leave
dec
inc
pop
sub
sar
fdivp
and
or
xchg
into
lds
jecxz
dec
dec
mov
(bad)
neg
cmp
mov
outs
fwait
adc
dec
push
mov
(bad)
mov
repnz
and
mov
fwait
dec
pop
add
mov
in
out
adc
inc
xchg
pop
aad
push
dec
xor
in
sbb
lock
inc
push
sbb
sti
push
and
sub
mov
mov
out
mov
pusha
shl
ja
inc
rol
cwde
push
pushf
cli
xlat
aam
loope
mov
adc
sbb
mov
ds
mov
or
js
ins
lahf
arpl
movs
(bad)
mov
into
xchg
cs
arpl
push
mov
mov
mov
xchg
cmp
aad
frstor
cmc
adc
enter
test
and
jl
cdq
jb
fldcw
addr16
imul
or
adc
xchg
std
jno
cwde
ja
shr
dec
add
ds
shl
out
div
push
adc
test
mov
icebp
mov
sub
xor
push
cmp
dec
inc
push
jo
std
adc
adc
les
sbb
mov
mov
and
and
scas
or
call
mov
push
jecxz
(bad)
scas
mov
dec
jmp
mov
sbb
mov
aaa
jmp
(bad)
mov
aas
mov
push
clc
inc
aas
lods
sub
adc
xchg
jg
dec
movs
mov
jo
xor
dec
jp
xchg
shl
jp
in
jecxz
mov
cmps
adc
pop
fld
ret
inc
pop
and
fist
pusha
ret
sbb
pop
cmp
mov
fld
dec
movs
movs
jne
pop
push
xchg
shl
cmp
lods
fistp
retf
(bad)
mov
mov
push
mov
inc
mov
push
mov
pushf
iret
scas
add
das
rcr
popf
inc
sti
add
add
pop
xor
cld
cwde
std
sahf
in
scas
in
mov
ror
mov
fwait
shr
out
loopne
and
cmp
push
cmp
outs
or
jg
mov
outs
pop
stos
fisttp
jmp
enter
add
cld
cs
push
test
pop
add
sub
push
pushf
retf
outs
test
aam
inc
dec
dec
scas
in
stos
into
outs
icebp
dec
fsubr
push
ficom
xor
je
add
dec
dec
sub
xchg
cld
and
sar
add
add
les
push
dec
sbb
enter
sub
clc
xor
hlt
adc
mov
lahf
out
pop
push
adc
xchg
sti
sbb
inc
and
clc
push
pop
es
or
sbb
cmps
stc
cwde
ss
pop
stos
xor
lods
stos
cmp
pop
cmp
adc
nop
add
adc
cli
mov
or
gs
jbe
out
cli
ds
jns
pop
xchg
adc
cmp
fsubr
std
neg
int
dec
xor
jb
fadd
pop
add
retf
outs
movs
and
pusha
fdivr
shl
jo
push
push
(bad)
sbb
sar
enter
ret
in
xchg
iret
loopne
or
pop
sub
push
cwde
(bad)
ret
loopne
or
call
xor
jl
push
inc
sar
xchg
lea
in
cmp
jnp
imul
leave
iret
or
test
mov
mov
xchg
cmp
out
cld
stos
push
lahf
ror
in
inc
xchg
in
outs
xor
js
aas
sbb
dec
push
pop
sbb
ins
(bad)
stos
nop
add
mov
xchg
push
and
inc
shl
xor
pop
adc
gs
dec
mov
mov
das
scas
outs
cld
mov
stos
out
dec
(bad)
cdq
xchg
mov
adc
(bad)
aam
pop
push
add
ja
test
xchg
pop
(bad)
and
rol
into
mov
lods
mov
mov
aas
ss
loopne
leave
nop
fld
outs
cmc
fwait
jmp
jge
adc
dec
add
cmp
mov
gs
mov
fisttp
mov
mov
mov
jbe
and
fcmovbe
aam
cmp
shl
inc
jmp
(bad)
or
jns
sub
cmp
push
pop
adc
sbb
xor
dec
jo
cli
pop
mov
mov
jp
dec
loop
mov
mov
jmp
push
(bad)
stos
mov
in
push
sbb
jp
jle
xor
retf
dec
adc
push
and
jmp
fisttp
mov
(bad)
mov
out
rol
mov
xor
sbb
or
not
dec
push
mov
and
and
xchg
cdq
nop
push
int
push
push
fwait
inc
inc
push
(bad)
and
ss
add
pop
xor
mov
aad
jbe
movs
pop
dec
in
and
inc
pop
inc
push
adc
cmps
imul
ss
pop
adc
or
adc
jg
in
cmps
push
pop
xchg
push
mov
out
clc
mov
adc
cdq
xor
xor
sub
mov
mov
adc
lock
cmps
sbb
jnp
dec
icebp
cmp
xchg
add
ror
repz
xchg
frstor
mov
or
mov
fistp
jle
lock
jl
mov
pop
daa
xchg
ins
pop
mov
call
adc
jg
add
xor
(bad)
cld
adc
and
pop
ret
rcr
mov
sub
fbld
cmp
ins
xor
cld
outs
jl
daa
dec
sbb
xchg
dec
pushf
mov
xchg
jne
add
xlat
push
in
adc
add
(bad)
imul
cdq
repnz
aas
int
sub
sbb
pusha
add
push
ja
jp
pop
das
jge
inc
in
not
inc
mov
sub
or
inc
ins
xchg
lock
add
(bad)
(bad)
in
inc
mov
ds
rol
int3
sub
pop
inc
and
mov
inc
and
xlat
js
js
xchg
(bad)
jns
loope
call
je
sti
sahf
fcomp
fdiv
fld
retf
jb
data16
jae
popf
mov
push
fwait
out
inc
mov
jecxz
push
in
sub
lds
addr16
pop
mov
dec
and
push
add
mov
cdq
test
mov
jle
(bad)
adc
pop
fwait
lds
fidivr
mov
xor
cmp
outs
ja
sar
mov
in
arpl
leave
fs
jnp
add
xor
sub
pop
idiv
stos
cmps
lock
jns
call
push
aaa
xchg
dec
mov
sub
fstp
clc
push
sti
sub
fild
dec
jecxz
aad
adc
outs
test
and
mov
sbb
into
adc
dec
retf
mov
sub
int
mov
add
stos
jmp
stos
pop
test
mov
in
fisttp
js
pop
lods
hlt
sub
pop
lahf
sub
(bad)
scas
xchg
mov
dec
into
in
ds
jge
cmp
lods
push
fdivr
mov
xor
push
ficom
in
and
mov
out
pop
xor
jns
pop
and
sbb
mov
test
cmp
sbb
xor
push
and
ja
jno
pop
es
cld
out
loopne
mov
(bad)
fld
and
xchg
test
fdivr
push
cmps
mov
addr16
lock
dec
into
and
push
or
movs
add
(bad)
fmul
add
sbb
jmp
xor
jg
push
and
pop
mov
imul
dec
shl
push
aas
pop
jb
jne
iret
jp
dec
aaa
mov
inc
aaa
jecxz
imul
popa
ins
mov
retf
outs
sub
daa
sbb
xor
scas
xchg
sub
mov
ja
ins
icebp
cld
and
push
push
inc
ins
daa
clc
jp
bound
push
mov
push
hlt
sbb
mov
cmps
les
xor
xchg
add
movs
mov
xor
sbb
loopne
push
retf
ds
pop
or
add
pop
mov
in
dec
push
inc
gs
xor
addr16
int
clc
push
add
xor
xchg
sbb
pop
push
je
call
mov
lock
or
pop
inc
mov
(bad)
fnstenv
and
jae
cmp
mov
adc
ins
mov
mov
dec
imul
pop
mov
add
xor
mov
popa
cs
hlt
jg
leave
mov
fdiv
test
add
imul
jno
cwde
mov
jge
rcl
repnz
jbe
dec
dec
shl
out
adc
rcr
arpl
xor
jbe
cs
mov
jmp
sahf
into
cdq
ss
je
rol
rcl
in
shl
xor
cli
fs
leave
push
inc
es
xchg
std
ret
cmp
pop
int3
stos
mov
loopne
mov
mov
cli
and
xor
fs
and
jg
xor
sbb
imul
test
mov
pushf
data16
fnstsw
xchg
lods
mov
test
mov
sahf
sub
mov
inc
add
add
xchg
mov
push
rcr
nop
sub
pop
(bad)
(bad)
mov
mov
out
lods
jae
(bad)
cld
jno
xchg
pop
in
jmp
retf
jmp
movs
in
jo
fisub
ja
xchg
aaa
mov
push
mov
pop
adc
jmp
jg
pop
and
call
call
cmps
fs
dec
aas
daa
(bad)
not
mov
(bad)
jp
inc
cwde
in
jmp
lds
clc
pop
cmps
cmp
xor
popf
ret
dec
out
hlt
and
mov
mov
mov
jmp
rol
fs
stos
(bad)
pop
mov
pop
into
xchg
nop
xchg
sbb
or
pop
rcr
cwde
fs
test
add
mov
int
in
aam
(bad)
call
stos
push
(bad)
cli
inc
(bad)
sbb
enter
xor
sbb
pop
mov
adc
mov
xor
cmp
mov
enter
and
cmp
add
pop
into
es
dec
pop
push
and
mov
in
jb
ins
adc
mov
xchg
lods
push
fistp
xchg
jo
or
mov
cmp
inc
stos
xchg
mov
jle
pop
(bad)
in
fnsave
mov
inc
pushf
and
repnz
dec
das
push
mov
xor
sbb
loope
inc
cld
or
add
adc
mov
push
enter
(bad)
icebp
lds
scas
ret
mov
dec
add
xor
(bad)
mov
pop
lea
pop
mov
cs
bound
dec
ins
add
mov
dec
out
push
add
sahf
(bad)
out
popa
arpl
adc
(bad)
loopne
data16
cmp
push
movs
pop
fild
and
sbb
mov
into
or
mov
out
aas
enter
jno
call
push
and
dec
stos
icebp
repnz
hlt
pop
push
or
imul
and
mov
stos
xor
call
inc
movs
and
stos
pop
pop
add
imul
fwait
lock
xchg
(bad)
mov
adc
shl
ds
mov
out
out
mov
lea
or
aas
pop
div
sub
test
mov
popa
(bad)
push
iret
pop
inc
mov
popf
push
cdq
scas
xchg
jne
jmp
daa
push
sar
in
add
mov
mov
ss
repz
cmp
jge
jmp
clc
xchg
lds
in
sbb
les
or
div
jl
jge
aas
mov
mov
xor
out
pusha
mov
lock
and
ins
vpxor
rol
fsub
lods
not
jns
jle
rol
fwait
out
icebp
shl
sti
push
cdq
mov
jl
jne
repnz
repnz
(bad)
(bad)
pop
stos
add
loopne
out
xor
int
call
push
mov
pop
cmp
push
cdq
sbb
popf
imul
loop
add
jmp
(bad)
xchg
outs
fcomip
movs
sub
dec
push
loopne
movs
aaa
and
push
test
call
call
and
xchg
and
lea
fist
(bad)
fiadd
ss
nop
inc
pop
mov
sbb
outs
and
mov
ret
adc
repz
loopne
int3
push
jmp
jno
clc
jl
sub
call
adc
jle
xchg
out
mov
aaa
into
push
cmp
mov
cmp
add
add
or
mov
pop
dec
loopne
aad
ds
test
sub
outs
imul
lock
jbe
cmp
arpl
dec
shr
add
push
xchg
mov
ins
xchg
sub
dec
in
adc
mov
test
je
(bad)
mov
ins
stos
xchg
push
neg
cld
dec
sbb
das
das
sub
fcmovb
jg
in
adc
enter
inc
ja
shl
out
jne
ret
jmp
shl
xchg
retf
in
lea
mov
imul
int3
cs
jp
cmp
mov
cmp
(bad)
mov
data16
push
aaa
add
or
jae
or
dec
gs
gs
jmp
mov
out
mov
jae
into
rol
add
adc
xor
mov
sub
push
cmps
aam
js
pop
cwde
pop
scas
mov
pop
add
(bad)
xchg
xor
or
enter
das
pushf
mov
pop
xchg
cwde
xchg
add
mov
stc
ret
lahf
mov
xchg
mov
imul
add
sub
fcom
sub
repnz
call
(bad)
mov
inc
popa
mov
pop
fist
ja
mov
pop
aas
pushf
jp
cdq
xor
pop
(bad)
je
xlat
add
mov
mov
movs
sti
aas
fistp
(bad)
sbb
mov
idiv
xchg
mov
(bad)
pop
xchg
sbb
cmp
in
and
sti
add
pusha
sbb
xor
mov
or
adc
adc
faddp
inc
mov
mov
int3
ins
push
inc
or
and
(bad)
call
mov
jmp
dec
mov
and
call
mov
or
sbb
out
add
ins
and
mov
arpl
cmp
and
clc
(bad)
(bad)
data16
push
mov
add
fsub
lock
mov
lea
xchg
and
push
inc
or
mov
xor
mov
sti
adc
inc
push
jg
fwait
int3
jg
pop
retf
lock
xchg
imul
sahf
push
retf
(bad)
xchg
xor
xchg
scas
or
inc
push
scas
dec
or
jae
xchg
adc
addr16
movs
mov
cmp
out
mov
ins
add
xor
sar
push
shr
push
push
jae
pop
adc
push
mov
or
push
sbb
cmc
(bad)
adc
jmp
xor
xchg
mov
pushf
cmp
cmp
(bad)
retf
nop
mov
push
fiadd
in
sub
xor
jle
loop
test
fwait
jl
mov
mov
dec
sub
mov
jo
dec
pop
xchg
js
loopne
xor
xor
cmp
outs
loop
mov
xchg
mov
int
out
jb
pop
mov
mov
loop
pop
les
push
jge
jecxz
mov
jmp
test
push
pop
jp
push
xchg
(bad)
pop
movd
test
popf
xchg
(bad)
jmp
and
cwde
xchg
aam
add
outs
pop
sbb
movs
sbb
add
int
ins
nop
js
dec
bound
loope
cmc
mov
mov
mov
cmp
mov
dec
je
xchg
ja
xchg
ja
push
pusha
add
out
push
cld
add
sub
jg
fnstcw
fld
(bad)
mov
aaa
push
sti
pop
pop
mov
add
push
adc
jmp
retf
add
pop
xchg
shl
test
aad
jne
xor
jle
sub
mov
sbb
mov
bound
fwait
aaa
add
push
xor
mov
pop
hlt
data16
mov
cdq
adc
lea
aas
std
push
inc
xor
push
ins
(bad)
xchg
stos
outs
mov
inc
popf
add
xor
mov
push
xor
loop
addr16
fimul
cmp
jb
shl
sub
adc
arpl
xor
lahf
cmp
je
cmp
jle
adc
rcr
adc
push
or
adc
adc
ret
or
ret
ret
aas
(bad)
ins
frstor
test
mov
(bad)
mov
gs
jno
fcmovbe
mov
je
adc
sbb
data16
cmp
mov
xor
shr
sahf
test
addr16
and
dec
cmp
ins
and
fisubr
jecxz
xlat
and
xor
jle
pop
sub
pop
ror
xchg
aam
cwde
push
cmp
js
pop
shr
scas
test
rcr
js
ficomp
shl
cwde
mov
xchg
pop
dec
lahf
mov
mov
sub
ins
cdq
xchg
ins
dec
inc
xchg
lea
repz
lds
push
pop
das
cmp
in
dec
mul
data16
adc
push
jo
cdq
or
retf
scas
mov
xlat
int3
lock
popa
jle
mov
pop
into
bsr
div
std
xor
jmp
std
pmullw
cwde
adc
push
xor
and
xchg
ds
ins
popf
jecxz
mov
arpl
test
cmp
outs
jne
and
(bad)
retf
mov
jp
sti
hlt
mov
push
push
call
std
push
mov
inc
cmps
xchg
mov
clc
iret
dec
push
push
mov
lea
mov
sbb
mov
int3
jg
cmp
out
or
pop
inc
xchg
mov
loope
push
stos
xor
ins
mov
bound
out
push
dec
mov
add
fist
push
mov
fs
xchg
iret
dec
jg
mov
into
call
xchg
mov
aas
xchg
pop
adc
ss
out
stos
inc
sub
xchg
xchg
enter
pop
jmp
(bad)
retf
sbb
sub
jmp
xchg
xchg
mov
retf
inc
push
xchg
mov
sbb
lods
mov
lock
inc
inc
out
jns
fidiv
dec
push
dec
mov
(bad)
imul
mov
imul
dec
cmc
jo
popf
cmp
jecxz
popf
ret
pop
stc
call
add
imul
inc
and
rol
mov
retf
retf
rcl
pushf
mov
(bad)
and
into
mov
scas
out
add
inc
pop
and
imul
les
cwde
jmp
(bad)
dec
cdq
add
sti
mov
xor
add
mov
inc
jb
(bad)
cdq
fwait
mov
or
cmp
pushf
cmps
push
push
adc
adc
push
pop
push
or
pop
and
push
lods
(bad)
push
repz
loopne
xor
(bad)
pop
cmp
add
test
clc
imul
inc
addr16
nop
and
jg
jmp
aad
cmp
dec
aaa
jnp
aas
add
mov
dec
sub
retf
cmps
mov
and
adc
and
es
jo
and
je
mov
repnz
imul
int
mov
pop
in
sti
xor
ss
sub
or
mov
ins
sti
or
jg
mov
lods
enter
mov
and
lock
inc
pop
sbb
push
push
add
ror
dec
jmp
or
aas
push
xchg
loope
(bad)
mov
mov
and
jns
sbb
jmp
mov
adc
movs
or
cmp
into
push
int
popa
pop
js
fwait
iret
adc
aaa
out
pop
pop
mov
adc
push
loopne
test
jmp
mov
sbb
sub
add
push
inc
add
adc
push
les
int3
dec
nop
rcl
pop
aaa
jo
repnz
rcl
jb
inc
cli
or
in
xor
add
sub
ins
out
ja
xor
aam
and
or
cmc
sub
cwde
lods
out
mov
repz
mov
cmp
push
adc
inc
je
xchg
xchg
test
(bad)
pop
sahf
xlat
add
or
fs
xor
loope
cli
mov
fwait
aas
xchg
fcmovnbe
imul
jns
aad
xchg
int
addr16
mov
loop
mov
scas
cld
js
jmp
(bad)
mov
out
push
add
leave
sti
or
test
cmp
ficomp
and
fsubr
push
out
mov
mov
push
or
jp
outs
inc
xchg
jecxz
pusha
dec
push
push
(bad)
int3
in
fstp
add
sub
leave
xor
xor
or
mov
stos
fmul
movs
inc
fucomip
cmp
std
push
adc
popf
adc
push
cld
xor
imul
lock
jmp
dec
mov
sub
fmul
loopne
xchg
mov
pop
mov
sbb
out
sbb
bound
outs
lahf
movs
mov
stos
popa
xlat
mov
cmc
repnz
es
gs
cld
sar
cdq
gs
fstp
xor
scas
jns
pop
or
xchg
aam
mov
mov
xchg
jle
shl
inc
fcom
inc
inc
retf
mov
push
xor
rol
call
push
push
(bad)
push
mov
mov
movs
adc
push
scas
jecxz
fsubr
or
xchg
xor
movs
retf
sbb
and
jae
loope
gs
aas
das
vxorpd
scas
xchg
push
stos
ss
cdq
add
scas
cmc
jmp
cmps
data16
daa
(bad)
or
mov
popa
mov
aaa
(bad)
cmps
and
xor
bound
cdq
cmps
icebp
in
clc
sub
rol
push
mov
fidivr
pop
xchg
movs
(bad)
mov
jl
mov
jnp
int
push
aam
pop
xor
sar
loope
movs
fucomi
sbb
icebp
loope
or
sub
(bad)
dec
and
mov
cmp
jmp
or
movs
test
push
out
data16
dec
loopne
(bad)
shl
fnstcw
enter
cmp
je
jmp
dec
mov
xor
adc
nop
test
dec
aam
sahf
std
call
icebp
pop
or
sub
iret
inc
outs
dec
and
sbb
mov
jg
int
cmp
std
sahf
ret
or
xchg
loop
add
dec
dec
lea
mov
sub
test
xchg
dec
test
cmps
mov
inc
cmp
pop
mov
rcr
mov
cmp
push
neg
cmp
push
fisub
lock
or
rcl
sub
bound
cmc
adc
sbb
inc
in
push
daa
mov
cmp
pop
call
fbstp
xlat
lea
push
icebp
inc
sahf
test
jbe
cmp
shl
xchg
rcl
jb
sar
push
jp
inc
jmp
daa
jb
push
mov
test
fidiv
stos
outs
pop
adc
addr16
push
es
out
jg
cli
mov
and
dec
and
mov
push
enter
cs
aas
fs
imul
cdq
jecxz
fs
add
pop
and
cmp
jg
stc
sub
ins
pop
add
xor
sahf
(bad)
jno
cdq
jnp
or
shl
jp
xor
cdq
push
mov
mov
mov
ins
mov
dec
and
nop
dec
mov
mov
push
adc
stc
mov
pop
cli
mov
out
out
call
dec
sar
jb
mov
lea
cmp
mov
pop
imul
cmps
inc
dec
xor
push
aad
sar
repnz
push
cmps
movs
out
call
lahf
sbb
xchg
jmp
in
popf
pop
paddusb
icebp
jno
mov
mov
sbb
pop
rcr
mov
arpl
repnz
out
mov
mov
mov
lods
nop
(bad)
jle
cdq
push
adc
fisttp
push
pop
in
and
jle
mov
ss
sbb
mov
dec
loope
add
rol
jmp
adc
and
add
jmp
rcl
cdq
leave
cld
push
pop
push
lods
pop
arpl
rcl
push
shl
jne
jl
rcl
jbe
xor
out
jo
rcl
mov
stc
ins
fwait
(bad)
iret
test
pop
outs
sub
pop
inc
sub
add
scas
sbb
push
arpl
pop
lds
pop
add
xor
jns
daa
mov
arpl
(bad)
adc
div
dec
test
and
push
sbb
sbb
je
push
pop
mov
mov
es
cmp
inc
mov
push
mov
jno
sub
pop
lahf
xchg
fld
sub
(bad)
jmp
test
addr16
jne
pop
movs
pop
xchg
and
cld
int
inc
imul
jo
sahf
adc
mov
sub
pop
ror
jae
lahf
cmp
movs
adc
retf
imul
faddp
outs
push
mov
outs
or
push
iret
sbb
jnp
arpl
sub
sub
popf
loope
mov
test
rcl
cmp
xchg
push
fimul
(bad)
pop
cmps
inc
mul
js
loope
mov
add
loopne
push
mov
sub
push
mov
mov
cmc
xchg
scas
fimul
rol
scas
fdivr
xchg
movs
mov
ror
ss
call
xor
daa
sbb
cmp
aaa
jnp
cmp
sub
loopne
push
jae
adc
retf
push
xchg
mov
leave
mov
enter
in
in
and
test
dec
cld
mov
dec
sbb
mov
sbb
inc
aad
xor
test
shr
adc
cli
(bad)
jg
lock
adc
jge
inc
push
ficomp
aam
out
mov
mov
sub
pop
rcr
popa
sbb
sbb
int3
push
adc
jne
add
retf
(bad)
stc
(bad)
cld
add
xor
shr
enter
stc
xchg
std
pop
int3
loope
stos
xchg
test
fisttp
mov
dec
(bad)
jnp
jle
stc
je
sbb
xchg
shl
jmp
jmp
je
out
pusha
jg
push
lea
mov
sbb
sahf
jp
jnp
arpl
and
sbb
inc
ins
xchg
dec
dec
xchg
cmp
sbb
jge
call
add
dec
sub
lock
push
mov
pop
arpl
xchg
movs
stos
jne
add
xor
std
icebp
xchg
xor
sbb
and
jae
mov
int
jmp
jbe
jo
push
enter
inc
jne
aaa
sub
fldenv
enter
xor
inc
lods
xchg
mov
mov
bound
pop
cmps
add
xor
mov
mov
ja
xchg
inc
push
fsubr
rcl
adc
iret
ins
dec
jmp
fst
cmp
nop
cmps
cdq
jb
(bad)
imul
jecxz
add
push
mov
repnz
mov
push
and
out
jbe
xor
stos
js
mov
push
data16
mov
jmp
popf
mov
and
int3
dec
jge
jmp
sub
inc
and
sub
mov
mov
jno
out
sub
movs
stc
xchg
mov
mov
or
mov
or
in
loop
mov
into
(bad)
push
push
addr16
pop
pop
sub
add
call
inc
dec
rcl
aaa
(bad)
or
jnp
inc
fcomi
dec
imul
lock
fidiv
add
pop
leave
mov
push
nop
jp
clc
iret
mov
mov
out
in
mov
pop
clc
ins
jbe
adc
xchg
aad
repz
scas
mov
adc
xchg
sub
(bad)
mov
cmp
mov
mov
cmc
and
push
jno
sbb
fild
fstp
daa
ret
(bad)
out
jne
pop
out
shl
repz
inc
popa
scas
jle
stos
cli
(bad)
mov
cmp
mov
fstp
fcmovu
in
hlt
clc
jp
aad
xchg
xor
test
and
sub
or
fdiv
dec
fcom
push
out
stc
dec
dec
in
pushf
shl
lds
xor
int3
inc
cdq
call
inc
push
pop
jl
in
daa
out
cdq
repnz
pop
cmp
cmc
mov
js
mov
or
mov
mov
scas
and
daa
shr
pop
shl
jae
ins
in
cmc
hlt
cmp
and
rcr
sahf
lock
jecxz
sub
xor
mov
lds
mov
repz
das
and
cmps
daa
xlat
outs
cld
dec
sbb
mov
inc
mov
js
dec
pop
mov
mov
pop
loop
push
ror
adc
ds
pop
jno
dec
mov
mov
dec
(bad)
cmc
jecxz
jge
cmp
test
popf
test
dec
movs
je
jb
sbb
retf
imul
mov
dec
jne
pop
pop
mov
fs
mov
in
mov
mov
icebp
add
mov
ins
and
fldcw
pop
sar
push
in
mov
test
popa
div
mov
idiv
mov
out
out
mov
out
enter
in
jle
push
dec
adc
mov
test
sti
imul
lds
inc
stc
pop
mov
scas
mov
mov
or
jl
push
cmp
repnz
retf
adc
in
adc
xor
retf
fisttp
xchg
sar
jmp
in
mov
out
xor
inc
mov
cmp
aas
rcr
pop
mov
gs
sbb
mov
sbb
or
jno
inc
movs
fcomp
jns
(bad)
xor
xchg
pop
push
add
mov
sbb
fxch
pushf
ss
push
addr16
jno
add
fst
shl
call
dec
sbb
push
mov
cmp
sahf
test
test
sub
mov
mov
stos
mov
(bad)
cmp
and
sar
add
aam
aas
sar
movs
clc
sub
out
repz
dec
mov
jmp
aas
aam
scas
out
sahf
stc
in
mov
das
xor
and
dec
inc
test
xchg
out
jle
push
es
adc
mov
mov
mov
ret
or
adc
or
outs
movs
out
adc
out
ret
(bad)
enter
mov
shl
mov
fdivr
cli
jns
pusha
int3
xor
pop
push
pop
push
dec
inc
iret
dec
mov
pop
ins
pop
movs
jmp
push
inc
cld
call
in
sar
test
inc
data16
in
mov
mov
in
dec
bound
fsubr
pusha
out
push
cdq
xor
in
xchg
sar
mov
int3
mov
jns
pop
aad
ret
cmp
pop
xor
pop
repnz
xor
rcr
aam
jl
fadd
jo
adc
cmp
mov
push
jmp
vunpckhpd
pop
push
mov
inc
dec
emms
movs
cmc
popa
jmp
and
pop
(bad)
std
push
xchg
loopne
cmps
sbb
retf
mov
ins
add
cmp
imul
push
cli
ins
dec
add
jmp
xchg
pop
push
xor
clc
dec
mov
iret
idiv
dec
cld
mov
out
aaa
xor
fsubr
inc
inc
iret
sti
cmc
xor
ror
xor
mov
sub
and
es
dec
aam
nop
cld
(bad)
cmp
fstp
fistp
js
outs
daa
imul
test
inc
mov
repz
and
xchg
mov
test
cmp
mov
ret
sahf
inc
enter
inc
aas
in
xor
out
es
imul
cmp
repnz
addr16
movs
inc
or
mov
ja
xchg
adc
pop
jns
inc
in
dec
dec
arpl
add
mov
cmp
mov
js
pushf
ss
xor
mov
add
dec
xor
daa
dec
pop
sti
ja
lods
xchg
pop
push
push
push
pusha
cmp
test
jns
(bad)
mov
ficomp
js
push
addr16
cs
push
rol
test
movs
aad
sbb
jp
(bad)
(bad)
jns
dec
fwait
cdq
repz
dec
sbb
mov
jae
mov
out
add
dec
ds
mov
jbe
dec
cmp
mov
cmps
sub
pop
in
xor
daa
inc
in
or
sbb
mov
and
(bad)
cmp
fsubr
test
adc
jp
mov
mov
pop
and
or
rol
push
jno
push
adc
fsub
mov
mov
lea
xor
aas
inc
dec
dec
jbe
xor
mov
dec
inc
push
sub
or
inc
dec
(bad)
push
rol
sub
icebp
call
xchg
jbe
adc
add
xor
mov
push
or
fwait
cmps
les
inc
jmp
jle
aad
mov
bound
push
gs
sub
mov
pop
xchg
sub
mov
xchg
shl
nop
adc
pop
mov
push
out
inc
out
jno
inc
stos
jno
idiv
rcr
std
push
xor
jmp
sbb
push
inc
bnd
pushf
ins
clc
std
adc
jno
add
sub
mov
cmp
dec
test
mov
shl
int3
mov
pop
xor
and
popf
lea
mov
mov
mov
sar
inc
iret
bound
pop
sbb
cmp
or
jns
lock
inc
and
add
dec
fs
or
lds
retf
push
mov
adc
test
push
pop
pop
outs
shl
pop
outs
add
lahf
add
add
mov
jns
int3
xchg
sbb
data16
stos
in
xchg
push
idiv
test
xchg
call
cmp
mov
dec
sbb
call
call
(bad)
and
in
mov
inc
repnz
ret
and
or
gs
retf
sti
xchg
xor
jecxz
jecxz
mov
aam
rcl
retf
ins
aam
and
mov
dec
cmp
cli
scas
and
and
and
mov
xor
mov
push
inc
fiadd
call
mov
rol
fdiv
adc
jp
addr16
mov
mov
test
mov
lahf
test
frstor
or
push
dec
imul
in
sbb
call
cmp
cs
shl
imul
dec
and
cmp
xor
jmp
and
pcmpeqd
push
xchg
outs
lods
and
or
jo
mov
push
xchg
jnp
cmc
or
test
push
adc
dec
daa
aad
in
rcl
mov
cmp
and
icebp
xchg
fs
repnz
aam
mov
ret
jp
pop
stos
cmp
adc
cmp
push
sti
add
fmul
dec
test
adc
jbe
push
adc
jp
sahf
fldenv
mov
cmp
xchg
cmps
mov
ror
call
jl
dec
pop
popf
popf
fs
repz
and
sub
xchg
retf
cs
mov
adc
xchg
js
xor
ja
push
movs
(bad)
xor
add
pushf
mov
or
mov
xor
add
push
adc
cdq
mov
mov
pop
pop
xor
aad
pop
ret
or
sti
idiv
scas
test
loope
inc
iret
xor
dec
bound
ret
mov
ss
ins
stos
fidiv
dec
scas
push
cmp
pop
outs
in
fild
pop
jae
cli
pop
hlt
adc
push
cmp
repz
mov
and
cs
cmps
xor
adc
bound
jo
adc
mov
clc
adc
ret
sbb
pushf
aam
imul
xlat
sbb
int
outs
jl
outs
ficomp
jno
jns
mov
shl
mov
movs
adc
lods
aas
push
xchg
xchg
pop
sbb
in
jnp
adc
xor
mov
aad
cwde
outs
cmp
cmp
iret
inc
scas
mov
fs
js
add
jl
hlt
mov
hlt
add
std
retf
jbe
adc
dec
lea
jl
in
cs
leave
ret
mov
push
stc
pop
xlat
push
cmp
push
mov
out
dec
push
xor
inc
fcomp
lds
jmp
or
jg
retf
xor
push
pop
push
lea
int3
idiv
xor
xchg
sub
leave
ja
push
popa
sub
loopne
push
jo
xlat
movs
dec
imul
js
xor
cmc
jg
dec
stos
jp
cmc
test
mov
int3
push
mov
(bad)
jns
stos
jne
aas
sbb
arpl
jl
int3
push
retf
cmps
shr
or
xlat
sahf
fidiv
repz
addr16
imul
loope
dec
sar
in
dec
in
aas
lahf
xchg
sbb
pop
dec
xchg
out
push
cmp
xchg
aam
jle
sar
daa
jmp
xor
cmp
movs
push
aaa
mov
out
mov
jo
and
(bad)
fcom
push
data16
sub
pushf
inc
push
mov
jae
aam
out
sbb
rol
mov
mov
sbb
sahf
mov
loop
cmp
fcomp
mov
pop
xor
and
call
mov
icebp
scas
jns
int3
test
fstp
xchg
and
cwde
aas
nop
loop
dec
test
push
or
cmps
xchg
mov
xchg
mov
int
xchg
adc
stos
scas
(bad)
sti
push
into
inc
sahf
sub
jae
js
sub
add
fs
ja
movs
dec
das
add
jnp
scas
mov
call
xor
mov
outs
xor
pop
int3
xlat
les
dec
(bad)
xchg
cmp
inc
inc
cli
lods
add
mov
and
hlt
mov
xor
mov
and
cli
dec
or
adc
(bad)
lods
pop
push
mov
xchg
mov
xchg
pop
test
clc
mov
in
dec
xchg
and
xchg
dec
mov
mov
jl
and
sub
mov
mov
dec
enter
jo
cmps
jbe
xchg
outs
(bad)
adc
xchg
push
cmp
inc
jbe
inc
jne
fcmovnbe
xor
aaa
push
adc
pop
into
inc
ret
mov
xor
mov
js
sbb
pop
(bad)
fst
sbb
das
daa
and
bound
adc
push
fucomip
lods
sub
or
into
test
js
dec
xor
arpl
adc
loopne
xchg
lds
jmp
rcl
mov
pop
(bad)
add
xchg
fidiv
cmc
dec
sbb
ins
sahf
jg
sub
sub
cmc
xchg
and
adc
cli
jmp
pusha
sahf
loop
jno
sbb
mov
popf
(bad)
xlat
push
data16
inc
stos
push
fistp
jp
push
repnz
push
scas
cmp
pusha
push
sbb
imul
mov
mov
or
stos
push
jns
inc
or
in
inc
cmps
push
sub
xchg
dec
add
pop
mov
test
fld
sti
and
movs
and
or
pop
in
clc
mov
mov
arpl
ds
sti
sbb
aad
add
push
outs
push
sti
add
pushf
jmp
jmp
pop
mov
sub
mov
jge
and
idiv
sub
imul
outs
pop
add
sbb
or
mov
mov
ret
cwde
fcmovb
push
not
ins
sub
mov
jle
and
imul
and
add
fadd
cli
add
fbstp
std
test
lds
pop
cmp
hlt
adc
cmp
mov
mov
add
das
add
pop
scas
loope
mov
rol
(bad)
out
fcom
xchg
jns
in
cmps
rcr
movs
pusha
out
es
jno
fcmovb
and
scas
popf
aad
lods
cld
inc
mov
jl
fsub
fsubr
pop
mov
fwait
repnz
into
pop
cmps
lock
retf
inc
push
adc
enter
ja
enter
mov
out
sub
es
stos
push
inc
cmps
sbb
xchg
or
shr
fwait
cmp
dec
sti
sahf
hlt
or
inc
or
rcr
mov
retf
inc
loope
mov
cmps
adc
int
and
jae
push
jo
shl
fidivr
add
inc
loopne
sbb
fiadd
dec
or
rol
pcmpeqw
in
and
lds
es
(bad)
cmp
xor
xchg
dec
lock
ror
dec
xor
(bad)
mov
or
bndldx
es
fadd
cmp
and
mov
ins
test
not
dec
push
and
xor
jl
pop
or
mov
jmp
out
sub
cmp
dec
sahf
pop
sub
add
pop
push
ret
call
mov
aaa
je
jg
stos
lea
pop
xchg
sahf
sahf
mov
aas
lds
rcl
fimul
fnstenv
ja
lods
ins
jmp
jl
and
data16
pop
cdq
sahf
fwait
call
pushf
jmp
(bad)
popf
inc
pop
pop
(bad)
mov
out
sbb
jne
mov
cmp
xor
mov
mov
adc
and
cld
stc
jmpw
rcr
and
or
bound
mov
pop
ds
ins
clc
fld
fnsave
in
test
cmp
mov
xor
bound
rol
xchg
pop
aam
mov
sbb
xor
xchg
jle
adc
jo
fwait
xor
ins
test
add
ds
retf
push
or
cmp
sbb
adc
or
hlt
lods
sbb
mov
stos
ins
call
inc
jo
out
mov
les
mov
bnd
fiadd
lahf
push
in
push
push
int3
push
pop
cmp
ja
test
sbb
imul
pop
(bad)
inc
push
retf
sub
popf
call
xchg
lock
test
fistp
shl
pop
sub
or
jle
jb
sar
pop
jbe
fldcw
cmp
ja
ret
and
add
cld
test
cmps
push
cmps
pop
mov
sbb
mov
inc
pop
mov
and
je
popf
pop
test
push
cmps
outs
ss
xor
into
clc
sar
sbb
sub
inc
dec
mov
mov
xchg
mov
out
push
sub
jae
inc
es
mov
dec
cs
jb
imul
pusha
nop
jno
xor
mov
inc
mov
sbb
clc
jmp
xchg
adc
ret
pop
adc
jl
repz
cdq
leave
mov
dec
and
xchg
(bad)
xchg
inc
cmp
aaa
pop
(bad)
fbstp
rol
ret
push
into
mul
cmp
stc
adc
aaa
cmp
gs
mov
in
call
and
in
mov
jns
sbb
test
cmp
mov
call
mov
pop
push
ud1
sub
mov
sub
fstp
shl
outs
jl
ret
(bad)
xor
xor
ret
xor
inc
dec
stos
test
inc
cmp
ret
and
daa
popa
mov
pusha
ficom
xchg
push
pop
retf
mov
shl
cwde
xchg
pop
cmp
out
and
pushf
int3
enter
loopne
jg
push
in
nop
dec
or
jmp
rsm
mov
inc
xor
pop
mov
out
or
jp
div
mov
cs
out
pop
fs
mov
mov
mov
jmp
in
addr16
cmc
add
retf
jno
add
sbb
jmp
add
sar
add
cmc
jle
sbb
pop
lods
mov
ret
add
enter
ret
stc
sbb
push
out
into
popf
(bad)
dec
inc
pop
ss
lds
jp
pop
push
into
pop
jmp
jmp
aam
fstp
rdmsr
and
je
mov
retf
cs
cli
aas
jns
push
adc
ror
fld
enter
mov
sbb
mov
mov
pop
inc
or
retf
mov
mov
jo
bound
xchg
push
stos
das
popf
and
jecxz
stos
(bad)
sub
push
scas
push
mov
scas
sbb
jle
rol
xchg
ds
add
inc
cmp
int3
out
or
inc
xor
cs
(bad)
xlat
(bad)
jg
stos
pop
sbb
pop
movs
xor
push
fidivr
push
or
fsubr
shl
fimul
test
jo
outs
(bad)
dec
mov
cwde
adc
popf
jnp
out
ficom
inc
int3
pop
mov
nop
mov
mov
dec
push
scas
cs
cmc
pop
mov
push
fisubr
cdq
adc
fwait
and
mov
xchg
imul
loopne
cmp
push
xchg
shl
mov
mov
(bad)
rcr
add
cmp
rol
mov
xor
bound
mov
fnstcw
cmovns
stc
aam
pop
jb
or
inc
pop
mov
dec
dec
pop
mov
pop
xchg
lahf
bswap
movs
xor
call
ds
jmp
aaa
(bad)
int
and
idiv
clc
jae
mov
shr
and
jbe
arpl
stos
cmp
repnz
mov
xor
mov
push
cmp
lods
xor
or
xor
(bad)
mov
push
aas
enter
push
pop
jnp
sbb
cld
bound
(bad)
sti
xchg
retf
adc
cmp
mov
push
sub
pop
test
and
leave
mov
sti
adc
xchg
add
lds
fisttp
push
jp
xchg
(bad)
sbb
in
and
ds
mov
push
enter
(bad)
inc
xor
push
dec
pop
sbb
xor
xchg
pop
sbb
fs
push
rol
pop
retf
ss
mov
lods
push
mov
aas
jl
(bad)
out
add
stos
pop
retf
xor
call
int3
mov
ret
jmp
mov
mov
retf
add
sub
jbe
push
repz
fild
dec
sbb
cld
adc
in
bound
leave
push
call
rol
ret
pushf
add
(bad)
mov
int
in
xor
mov
lea
test
stos
mov
jo
test
pop
jns
or
loope
add
dec
shl
mov
fld
les
mov
shl
cmp
(bad)
fwait
scas
aaa
aas
cmp
fcom
lea
xor
push
in
das
xchg
sub
ror
hlt
shr
int
xchg
(bad)
imul
pusha
test
pop
inc
mov
aad
adc
andnps
add
mov
test
ins
ror
and
push
cmp
setbe
adc
or
xchg
hlt
adc
xor
hlt
xchg
or
or
pushf
cmp
inc
data16
mov
stos
jno
loop
adc
mov
(bad)
lahf
jne
sub
dec
mov
mov
ror
aad
mov
dec
xlat
lahf
xor
fnstenv
sbb
cwde
sub
sbb
cmp
test
inc
ret
out
and
cmp
adc
or
sar
mov
fsubr
test
cmps
mov
xchg
pop
loopne
xchg
xchg
aaa
jno
xchg
xor
test
mov
sbb
sar
fimul
test
lock
iret
mov
sbb
enter
retf
pop
nop
pop
jae
aam
mov
dec
mov
or
(bad)
out
mov
mov
aas
and
cmp
repz
xchg
popa
outs
retf
xor
stos
shl
mov
out
(bad)
mov
test
inc
jns
mov
sbb
mov
stc
pop
mov
xor
pop
in
mov
cmps
pop
call
pop
mov
mov
lods
xchg
ficomp
and
pusha
dec
adc
dec
xor
xor
retf
in
dec
mov
aad
hlt
push
into
mov
fxch
dec
(bad)
cld
sub
lock
lods
push
movs
jmp
jnp
pop
in
das
test
or
and
repz
fwait
sahf
push
imul
xchg
pop
sbb
fldcw
cmps
mov
push
aas
push
ss
fistp
pop
push
(bad)
lock
mov
pushf
gs
xchg
in
dec
mov
cdq
push
icebp
xchg
mov
mov
xchg
sahf
imul
in
push
scas
jmp
icebp
mov
in
jo
inc
les
dec
mov
pop
dec
jne
test
aad
rcr
cmps
(bad)
mov
aaa
pop
xchg
aad
and
jl
shl
cld
xlat
cmp
mov
inc
daa
sub
push
adc
xchg
movs
xchg
rcr
dec
add
sbb
es
jg
inc
mov
pop
fwait
pop
int3
ins
(bad)
fnstcw
adc
mov
mov
jne
push
inc
sub
je
shl
pop
daa
xchg
es
pop
mov
push
imul
mov
(bad)
mov
pop
inc
xchg
push
mov
aaa
pop
in
sti
scas
inc
and
adc
mov
outs
sbb
jb
test
sbb
mov
out
jns
cmps
mov
imul
je
pop
inc
ins
mov
scas
test
ins
retf
stos
mov
push
loop
in
fs
lds
aam
into
sub
jns
cmps
pop
xchg
pop
shl
xchg
inc
push
ja
add
pop
xchg
jns
dec
jns
jno
mov
sbb
sub
push
mov
jge
call
mov
sti
call
popa
sub
fucomp
push
xchg
fisub
enter
in
pop
xchg
clc
repz
mov
in
dec
test
in
mov
mov
ins
sub
pop
dec
loope
add
ja
pusha
sub
adc
jmp
mov
clc
fmul
mov
movs
nop
repz
mov
stos
ss
fsubr
add
hlt
fstp
cmp
sbb
and
(bad)
jge
push
popa
ficomp
inc
jge
loope
push
daa
lds
jmp
out
xchg
adc
loope
inc
push
mov
and
xor
xchg
aas
adc
call
mov
jecxz
cmp
popa
xchg
in
ins
and
gs
add
inc
lock
cmp
loopne
jo
sub
shr
arpl
lock
mov
xchg
jns
dec
fisub
imul
(bad)
sub
pop
icebp
cmp
add
nop
jg
sbb
adc
or
cwde
out
fsubr
xchg
mov
js
add
cli
aas
mov
push
sar
pusha
or
jb
lahf
das
add
cmps
xchg
scas
repnz
mov
mov
into
test
lahf
out
add
addr16
imul
test
mov
cs
xchg
sar
pop
adc
adc
pop
sub
loope
pop
push
xor
sahf
sahf
pop
cld
inc
and
add
xchg
or
pop
imul
loopne
mov
push
pop
mov
fstp
push
idiv
loop
mov
test
pop
lock
into
sub
enter
push
test
pop
dec
xchg
xor
lea
mov
and
pop
test
mov
pop
fstp
iret
adc
movs
mov
jl
xchg
xchg
push
aaa
loop
out
sub
xchg
ds
mov
aam
shl
sbb
shr
fs
cmp
hlt
popf
enter
sub
jl
and
xchg
adc
(bad)
and
sbb
lods
lock
fdiv
xchg
and
xor
pop
gs
mov
xchg
stc
hlt
add
movs
lea
cmp
aas
arpl
inc
sbb
mov
daa
pop
push
jl
bound
mov
mov
scas
fist
sub
inc
push
adc
jmp
push
and
mov
add
sub
aam
mov
cmps
xchg
dec
xchg
dec
adc
(bad)
fsub
and
in
imul
cld
ds
jo
pusha
jo
xchg
inc
aaa
adc
inc
mov
ret
or
xchg
add
mov
adc
scas
gs
add
arpl
push
mov
and
and
cmp
lock
adc
xor
cwde
dec
xor
cs
test
imul
xor
push
sub
arpl
mov
mov
out
test
sti
das
scas
pusha
cmp
mov
mov
sbb
mov
popa
sbb
pop
add
push
dec
(bad)
jl
in
jns
(bad)
lods
jmp
mov
gs
jmp
fsubp
pusha
fidivr
out
int3
mov
mov
xor
mov
in
stc
fnsave
ins
js
cmp
lock
enter
mov
inc
xchg
jae
sbb
inc
inc
mov
movs
or
xchg
xchg
fld
inc
stos
lahf
in
xchg
lea
xlat
js
cdq
mov
lock
lods
test
pop
dec
inc
(bad)
ins
jge
jns
cdq
push
imul
not
jmp
sbb
inc
(bad)
cs
test
rol
push
aas
fwait
xchg
jae
in
cwde
repz
lock
sub
shl
inc
ins
and
sub
outs
jmp
lds
dec
xor
rol
pop
lods
outs
and
scas
rcr
or
les
mov
xor
rol
jmp
aas
stc
(bad)
xor
shr
ret
shr
jp
push
push
das
gs
outs
aad
lock
mov
inc
mov
je
sbb
cmps
mov
mov
mov
adc
mov
cmp
test
jmp
cmp
repnz
cmps
cmp
mov
and
jnp
xchg
(bad)
iret
mov
mov
sbb
out
test
cmp
cmp
sbb
int
lds
jmp
ja
imul
cvttps2pi
lock
int
cld
retf
mov
pusha
pop
sbb
jo
lds
mov
dec
leave
clc
pop
add
cmps
add
pop
pop
sar
pop
xchg
cdq
ins
mov
dec
sbb
lock
mov
inc
adc
and
loop
call
inc
sbb
and
loop
inc
mov
adc
ret
jmp
jo
outs
push
movs
or
loopne
add
ins
and
push
in
adc
js
dec
add
sub
jmp
or
dec
mov
mov
ret
mov
fiadd
or
fmul
cmp
adc
bnd
sub
push
cdq
and
sbb
cli
pop
cmovns
cld
inc
mov
adc
gs
out
fdiv
leave
std
add
in
sbb
mov
fisttp
repz
loopne
icebp
adc
ss
aas
aaa
imul
inc
pop
or
icebp
ins
loop
or
add
nop
jo
mov
push
out
stos
(bad)
mov
mov
test
xchg
pop
adc
mov
push
hlt
stos
(bad)
cmova
mov
and
add
dec
dec
mov
push
movs
out
xor
movs
xor
(bad)
fild
test
inc
push
ins
cmp
outs
iret
inc
(bad)
lahf
mov
popa
out
add
out
or
mov
jb
out
mov
dec
mov
push
fild
out
movs
jne
in
sub
(bad)
into
aas
mov
in
xor
movs
mov
jns
std
mov
gs
aam
(bad)
mov
fcmovbe
xor
test
ss
mov
(bad)
sbb
jmp
cmps
into
mov
add
(bad)
sub
cld
outs
jae
jae
shr
mov
xor
mov
adc
fstp
mov
in
sub
jmp
mov
test
int
ds
pop
fs
xchg
adc
push
arpl
dec
adc
jg
cmps
div
lock
jmp
rcr
cmp
mov
xor
add
mov
xor
and
es
dec
adc
pop
inc
ss
inc
(bad)
movs
into
ret
or
ja
xor
mov
sbb
pop
mov
call
shr
ins
in
sub
sub
mov
enter
loope
movs
xor
xchg
fcomp
mov
test
jle
push
xchg
rcl
scas
pop
xor
call
ficomp
ja
sub
adc
das
test
fisttp
sub
push
fsub
dec
sbb
in
repnz
jmp
jge
mov
lahf
xor
add
jmp
stc
mov
sub
xor
(bad)
jecxz
mov
mov
lods
fadd
pop
sar
pop
icebp
mov
inc
push
fnstcw
fdiv
mov
mov
cmc
jle
fadd
fdiv
xchg
outs
mov
jb
and
lods
mov
xchg
out
or
aam
inc
push
call
mov
call
mov
adc
mov
pushf
push
das
sub
retf
loop
add
sub
jecxz
pop
add
aad
sbb
nop
cmp
into
dec
shr
aaa
inc
jmp
(bad)
xrelease
adc
adc
loope
adc
push
cdq
pusha
inc
(bad)
push
mov
or
dec
neg
jbe
xor
in
clc
sub
imul
cmovs
xor
imul
push
jo
out
xor
sbb
ss
lahf
in
pop
(bad)
cmc
sbb
ds
and
add
sub
jae
push
in
add
add
(bad)
dec
cmp
mov
adc
(bad)
cmc
dec
cwde
movs
test
push
popa
mov
loopne
leave
cs
add
ret
dec
sbb
hlt
push
ret
mov
cmp
add
push
imul
ret
push
cmp
pop
out
out
sahf
mov
fistp
pop
xchg
aam
pop
push
lock
jmp
popa
add
enter
adc
jmp
arpl
inc
jo
or
sbb
lea
loope
jge
or
add
inc
sbb
add
and
and
xchg
std
inc
shl
and
xor
or
sub
xchg
push
jb
mov
adc
add
pop
mov
mov
mov
call
popf
frstor
pushf
adc
inc
ror
pop
(bad)
mov
std
xor
dec
push
pop
add
test
lahf
movs
dec
sub
push
sbb
fdivr
test
(bad)
lock
xchg
sti
dec
rol
stc
pop
fwait
outs
jno
sub
idiv
ja
das
scas
push
test
inc
jle
xor
cmp
mov
pop
jae
fisubr
or
push
mov
fmul
ja
push
xchg
pop
jo
repz
(bad)
xor
scas
sub
(bad)
mov
jae
inc
and
(bad)
add
movs
(bad)
cdq
inc
fist
movs
adc
fldenv
test
push
push
in
pop
ds
and
mov
(bad)
and
xor
(bad)
jmp
inc
test
nop
ret
pop
sub
in
data16
fxch
lock
push
clc
xor
xor
bound
pusha
loop
icebp
movs
(bad)
fwait
repnz
sub
imul
mov
jns
dec
repz
adc
ins
xor
(bad)
inc
pop
adc
inc
add
add
sub
pop
mov
bound
rol
push
outs
mov
push
mov
ins
cmp
bound
sar
mov
sub
jmp
mov
stos
mov
jne
lds
movs
jp
push
push
cmps
push
adc
pop
or
push
fist
inc
ret
movs
xchg
sub
das
jle
sub
adc
pop
lock
xchg
or
jle
dec
pushf
jae
and
jmp
shr
pop
icebp
das
aam
push
ret
loope
call
xchg
je
adc
cdq
cmp
js
scas
jle
pop
retf
xor
mov
sub
test
xlat
jbe
xchg
outs
mov
add
xchg
dec
adc
inc
xchg
xchg
lea
mov
ret
movs
mov
or
retf
loope
and
pop
(bad)
mov
setle
push
xor
mov
dec
push
neg
imul
xchg
test
xchg
and
jo
cs
retf
out
mov
pop
xchg
jno
cmp
mov
inc
fisttp
movs
adc
mov
inc
sub
push
mov
fisttp
and
test
xor
js
pop
xchg
mov
mov
mov
addr16
push
retf
add
or
sbb
(bad)
(bad)
fist
xor
cmp
dec
dec
sub
lahf
jno
(bad)
lock
or
int
inc
or
out
nop
cmps
or
(bad)
icebp
dec
push
stc
or
xchg
sub
cdq
xor
mul
sbb
pop
(bad)
mov
daa
sub
packuswb
inc
(bad)
inc
mov
into
jp
test
push
push
pop
ins
pushf
mov
dec
jne
add
(bad)
jg
sbb
daa
call
int3
popf
mov
mov
or
sbb
aad
mov
dec
call
(bad)
xor
popf
out
xchg
or
and
loope
push
clc
dec
cmp
xchg
out
mov
jo
pusha
sbb
sbb
dec
dec
pusha
pop
mov
dec
(bad)
cdq
movs
push
popf
ja
and
test
or
pop
xor
adc
mov
xchg
daa
idiv
test
dec
mov
jae
xor
or
sub
lds
mov
cmps
pop
rcl
loop
lds
lods
stos
xor
test
popf
pop
sub
push
fst
xlat
push
mov
sbb
jb
inc
fnstsw
inc
jbe
mov
in
jle
in
ror
jmp
mov
and
mov
xor
or
inc
ds
pop
loope
and
popf
jbe
test
lods
rol
sar
xchg
jg
mov
push
ds
cmp
or
test
fisttp
dec
dec
adc
fild
add
rcr
leave
lock
(bad)
arpl
fwait
int
adc
ds
lods
mov
mov
fld
xor
unpcklps
addr16
outs
movs
pop
aad
cli
scas
push
mov
loopne
mov
(bad)
fnstsw
cmp
mov
xor
jle
pop
xchg
iret
jns
dec
call
xchg
ins
pop
imul
xor
arpl
mov
imul
fcom
mov
jbe
inc
sbb
test
add
jne
jmp
sub
(bad)
dec
lods
jbe
or
dec
gs
xor
sub
sbb
xchg
push
outs
jno
js
ins
and
ins
mov
xor
xor
hlt
cmp
ret
sar
xchg
movs
sahf
cmps
and
(bad)
xchg
dec
mov
xor
icebp
jle
pop
aam
mov
pusha
jmp
pop
add
icebp
lock
aam
in
fsub
and
cmp
fscale
test
xchg
(bad)
mov
gs
mov
jns
xchg
ins
jbe
call
mov
or
out
nop
fwait
jmp
cmp
add
rcr
jno
pusha
and
mov
xor
xchg
cdq
jp
test
ret
nop
push
icebp
add
inc
out
jno
jecxz
cld
cs
sahf
mov
push
jno
lock
sub
cmp
xchg
lea
fst
cmp
dec
scas
iret
adc
sub
aad
imul
mov
sbb
push
jp
rep
pop
sub
or
gs
inc
push
and
mov
in
out
mov
(bad)
push
movs
mov
(bad)
jmp
inc
inc
pop
in
icebp
push
sub
out
fcom
sub
sbb
popf
push
pop
push
mov
(bad)
rcl
dec
sub
add
pop
shr
ja
or
icebp
js
out
mov
sbb
push
and
sahf
call
pop
cmps
add
mov
and
dec
mul
push
imul
add
sbb
mov
cmp
dec
pop
or
das
out
arpl
out
cdq
push
push
cwde
push
sbb
push
stos
mov
xchg
jmp
div
leave
ins
jmp
div
gs
bswap
or
aas
push
cli
cmps
je
(bad)
movs
ficom
add
rcr
call
popf
popa
hlt
mov
pop
gs
and
cmp
mov
adc
mov
daa
and
pop
xchg
jmp
sbb
push
call
mov
mov
inc
and
mov
jnp
das
repnz
ror
fstp
retf
sbb
shl
(bad)
cmp
mov
mov
mov
pop
cmps
mov
aad
sub
sbb
sahf
sub
pop
dec
add
cmps
call
jl
or
xchg
clc
out
or
xchg
out
sti
test
mov
and
xchg
dec
lea
and
or
xor
sbb
push
and
cld
pop
xchg
in
jmp
pop
and
pop
movs
push
cmp
sar
dec
ins
daa
test
nop
icebp
sbb
pop
fs
mov
shr
(bad)
in
imul
jl
pusha
(bad)
(bad)
aaa
(bad)
js
sbb
lahf
pop
nop
(bad)
or
js
mov
adc
movs
jp
and
rcr
inc
mov
(bad)
jp
inc
push
mov
mov
loope
aas
test
and
fisubr
stos
add
arpl
xchg
lods
outs
inc
out
mov
jmp
inc
mov
test
xor
mov
sbb
mov
xlat
adc
add
int
and
mov
inc
mov
es
xor
mov
jecxz
ss
pop
add
addr16
or
xor
shl
inc
xchg
movs
or
and
mov
xchg
mov
lods
push
fdivp
in
gs
aas
or
push
sub
imul
and
sub
fistp
in
ins
pop
ret
leave
fs
ss
xchg
jmp
inc
pop
(bad)
push
int
xor
fcmovbe
xor
lods
push
aas
push
xchg
inc
fadd
retf
cmp
out
mov
mov
cmps
mov
out
xor
cmp
mov
sahf
out
pushf
dec
sub
loop
inc
aam
mov
push
icebp
sub
adc
mov
push
(bad)
add
sbb
shl
or
repnz
into
mov
(bad)
repnz
mov
and
addr16
push
das
jle
imul
sbb
sub
(bad)
mov
call
sbb
shl
mov
cmp
in
inc
retf
jmp
jmp
test
nop
in
xor
inc
imul
dec
add
(bad)
pop
stc
inc
mov
mov
rol
(bad)
mov
dec
jl
fidiv
loop
mov
mov
ins
inc
or
jns
jl
and
or
les
adc
xor
out
add
stos
or
cwde
add
nop
pop
(bad)
xor
xor
mov
sbb
and
sub
jmp
test
outs
stc
and
ds
push
push
sahf
clc
add
call
lahf
sbb
or
add
div
adc
lods
rcr
(bad)
jb
stos
imul
sbb
in
jae
mov
pop
stc
pop
pop
dec
pop
pop
call
sub
aaa
movs
loope
push
out
call
sub
push
xchg
out
jle
dec
fdivr
or
add
ss
mov
inc
cdq
mov
pop
in
jge
mov
int
jb
push
xchg
aad
push
or
bnd
out
mov
sbb
pop
scas
cmp
cmps
add
and
das
mov
or
push
sahf
pop
mov
sub
jnp
es
ret
test
sbb
popa
push
lock
out
(bad)
rcr
xor
popf
enter
ret
loope
sbb
into
rcr
shl
rcr
(bad)
out
in
xchg
nop
ins
movs
fmul
mov
neg
(bad)
push
jp
mov
cmps
sbb
xchg
push
dec
mov
ficom
push
mov
mov
popf
jo
aaa
les
sbb
add
lahf
sbb
inc
sub
jb
jmp
test
and
sti
fild
cmp
ret
int3
imul
mov
push
lods
addr16
adc
xchg
mov
xchg
jne
sub
mov
das
sbb
sub
xchg
test
mov
shl
sbb
in
mov
loop
push
mov
push
sub
mov
mov
mov
stc
dec
das
psrlw
jns
rol
mov
push
mov
add
cmps
aaa
outs
dec
lahf
sbb
fwait
repz
lea
lods
rcl
nop
jg
xchg
cmp
retf
dec
mov
jl
push
push
xchg
mov
test
out
cmp
adc
loope
push
pop
mov
popf
bound
out
push
cmp
test
sar
push
leave
outs
fisttp
call
imul
cs
xchg
retf
cmp
(bad)
jl
and
mov
outs
xchg
(bad)
(bad)
rcr
jno
mov
xor
fmul
das
push
fbstp
sub
mov
jbe
test
and
movs
adc
jb
adc
fistp
add
lock
rol
sub
aaa
ds
jmp
mov
test
iret
rcr
imul
mov
jb
xchg
pushf
(bad)
loopne
or
and
dec
mov
daa
add
shl
bnd
xor
mov
jne
lahf
clc
mov
sub
enter
imul
data16
adc
inc
test
sbb
xchg
pop
pop
xor
push
fs
xor
nop
jnp
(bad)
pushf
rcr
repz
sbb
retf
and
and
lods
aas
out
cs
jge
or
mov
jp
or
cli
pushf
je
jb
pop
les
sub
xchg
dec
retf
aas
repnz
mov
dec
sbb
or
js
or
sub
stos
add
xor
sub
push
ins
mov
push
das
push
in
pop
dec
call
and
push
or
nop
add
cs
fstp
test
push
pop
std
int3
cmp
mov
xchg
push
sahf
xor
jmp
pop
jp
or
mov
jg
ja
jl
xchg
xchg
inc
fsubr
stos
jae
xchg
mov
cwde
mov
call
mov
lahf
call
cwde
call
mov
cld
fdiv
push
mov
cwde
add
mov
inc
jl
pop
(bad)
sti
mov
fsub
icebp
xchg
out
jmp
push
lods
es
test
(bad)
hlt
mov
push
adc
pop
rol
push
aam
xor
sub
adc
fxam
mov
or
mov
jnp
out
pop
arpl
cs
cmp
add
push
mov
inc
xor
push
jnp
rcr
dec
pop
dec
aam
pop
int3
scas
out
pushf
int
leave
or
or
cmp
cld
nop
imul
lea
xchg
jbe
push
loopne
imul
repz
adc
sbb
jns
push
sub
adc
jne
jmp
mov
mov
jns
gs
sbb
add
sbb
and
fdivr
fcmovnu
adc
pop
lock
lods
and
jnp
dec
inc
mov
xchg
sti
sti
in
mov
div
push
mov
push
fild
ret
xor
fistp
cld
int
call
cmp
jne
lahf
sbb
mov
push
adc
jbe
bound
pop
cmp
sbb
in
pop
retf
cmp
push
or
mov
adc
pop
inc
lock
dec
sub
ds
xchg
jb
lods
in
inc
jle
pusha
pop
inc
outs
js
cmp
hlt
loop
aas
fisubr
popa
push
pop
mov
pop
(bad)
pushf
sbb
nop
test
dec
pushf
popa
mov
lods
or
mov
fld
sub
arpl
push
cmp
es
popf
mov
aaa
mov
int3
add
pop
mov
push
repnz
sub
push
push
push
imul
bound
hlt
add
addr16
fs
mov
int3
jg
call
scas
dec
aam
ss
addr16
cdq
xchg
xor
call
or
popa
xchg
xor
gs
sub
imul
lods
xor
pushf
test
mov
int
(bad)
push
inc
fld
stos
push
xchg
out
pusha
test
fwait
mov
inc
ss
mov
fdiv
imul
and
dec
ja
mov
pop
lahf
pop
out
push
push
xor
(bad)
repnz
jmp
sbb
mov
xor
and
rcl
std
push
jp
push
sub
stos
dec
lds
fdivrp
or
cmps
sub
popa
shr
daa
jl
pop
mov
into
mul
mov
and
into
jo
mov
cli
xlat
and
fimul
fldln2
mov
mov
dec
pop
push
cmp
or
imul
fisubr
sbb
dec
leave
xchg
fnstsw
pusha
cmp
sbb
xor
push
mov
mov
pusha
(bad)
pop
pop
push
cmc
dec
loopne
ret
loop
jge
pop
scas
fdivrp
xchg
jp
inc
push
add
retf
xlat
pop
mov
clc
cmps
into
clc
leave
rcl
mov
shl
aad
aas
xchg
rol
adc
aad
(bad)
movs
sbb
pop
mov
cmp
add
retf
icebp
jnp
push
push
pop
daa
sub
lea
lods
loope
sahf
xchg
hlt
es
jnp
pusha
int
push
fsub
lods
push
fstp
jae
sub
mov
add
loop
mov
push
cmps
jae
js
push
nop
(bad)
rcl
ins
dec
call
outs
sub
nop
repnz
daa
inc
shl
pop
mov
ret
add
aas
fsubr
imul
(bad)
sub
(bad)
dec
pop
mov
lahf
bswap
or
push
fmul
or
bound
lea
jne
hlt
scas
jo
xchg
mov
out
sub
int3
sub
int
and
mov
bound
mov
cld
inc
ins
loopne
sbb
xchg
pop
lock
(bad)
jmp
ror
mov
in
mov
mov
fdiv
jo
scas
adc
push
jbe
retf
xchg
inc
sub
hlt
sbb
lock
loopne
push
add
fistp
cdq
xchg
push
loop
stos
dec
xchg
test
sub
cmps
mov
daa
movs
push
inc
mov
and
push
addr16
stos
cmp
mov
jmp
jno
pushf
inc
add
scas
ja
cmp
jo
and
xchg
loop
aam
xor
fild
out
cwde
mov
mov
pushf
das
fidiv
loop
mov
fcom
push
int
lahf
stc
call
jmp
or
dec
in
ret
test
adc
xor
sahf
pop
and
out
outs
cmp
jmp
les
and
inc
lock
sti
cld
fsub
ficom
jbe
inc
xchg
jbe
sub
jmp
cmps
retf
scas
push
mov
xchg
xlat
repnz
or
push
push
sbb
test
pop
push
push
push
cmp
mov
gs
faddp
in
pop
pop
mov
sbb
jnp
int3
out
or
icebp
movs
cmp
test
pop
cmp
psllw
and
pop
and
push
mov
mov
mov
mov
push
xchg
mov
test
add
fisttp
not
lods
push
push
jnp
ins
add
adc
pop
int3
aam
push
push
cli
mov
pop
mov
mov
retf
into
sti
addr16
pop
xlat
(bad)
mov
mov
jl
and
push
mov
xchg
sub
retf
int3
adc
adc
das
pop
xchg
(bad)
lock
stos
dec
cmc
add
imul
jno
ror
gs
jb
sub
push
fsubr
sti
sub
rdmsr
xchg
ins
imul
jne
cmp
add
and
cmp
mov
cli
outs
cdq
adc
jmp
cli
pop
rcl
dec
jge
aam
add
retf
test
adc
mov
ror
(bad)
fidivr
les
jno
lea
pushf
inc
jle
inc
bound
ror
and
and
movs
push
and
sbb
ins
inc
loop
test
call
mov
fs
xchg
fisubr
dec
cdq
in
popa
daa
aas
sahf
or
xor
gs
cli
adc
call
inc
daa
xor
sbb
out
sub
add
add
xchg
pop
cdq
movs
repz
mov
dec
fistp
pop
imul
ret
mov
mov
jnp
icebp
(bad)
cmp
adc
or
sub
ffreep
jb
rol
jb
sub
sar
sub
fdivr
dec
(bad)
fstp
scas
cld
ss
in
out
clc
mov
jnp
(bad)
mov
int
jmp
push
jbe
out
(bad)
mov
adc
or
xchg
sar
jge
shr
fisttp
or
dec
inc
xchg
test
push
or
bound
test
retf
in
(bad)
sbb
adc
sbb
jno
sub
push
rcl
xchg
pop
jno
(bad)
not
xchg
sub
les
fcom
jo
lods
bound
mov
inc
push
jns
stc
scas
jg
and
and
rcl
jns
mov
(bad)
or
or
pop
aas
loopne
jle
mov
fisttp
clc
leave
mov
mov
arpl
sbb
add
fadd
mov
ins
imul
jg
cmps
cmp
daa
sub
jge
outs
fcomip
sbb
add
jno
sub
imul
cmp
das
cmc
sub
out
cli
mov
jmp
mov
push
xor
cmp
inc
scas
(bad)
pop
jge
aas
xor
jmp
inc
cdq
sbb
or
xor
test
push
and
pop
cwde
scas
jbe
outs
mov
sbb
mov
mov
rol
xor
mov
fwait
pop
nop
(bad)
xchg
sbb
sub
cld
mov
pop
sub
(bad)
std
in
in
out
in
mov
and
and
jecxz
adc
inc
push
mov
js
add
leave
mov
fwait
out
sub
cmp
stos
sub
cmps
rcl
int
mov
loope
shl
aas
gs
add
xchg
cdq
add
mov
or
gs
jmp
sti
(bad)
cli
dec
cld
sub
adc
scas
ins
fisttp
lock
jb
shl
loope
mov
mov
inc
inc
daa
xor
or
ss
pop
in
fs
mov
rcr
iret
mov
cmp
mov
ss
fist
dec
mov
push
icebp
lds
pop
mov
dec
pop
push
lods
out
add
outs
cdq
nop
mov
jae
pop
and
(bad)
adc
outs
(bad)
mov
xchg
int3
sub
shl
pop
push
pop
jnp
mov
addr16
jmp
cmp
leave
push
or
push
sbb
cmps
sbb
sub
adc
lock
cdq
inc
ss
(bad)
lock
dec
(bad)
or
xchg
mov
and
fist
mov
out
adc
sub
clc
gs
test
addr16
(bad)
xor
dec
and
outs
lock
stc
js
or
jb
inc
ret
mov
jle
xor
cmp
jo
enter
inc
pop
popf
xlat
adc
mov
js
cmp
pop
out
inc
loop
jl
adc
fist
pop
push
sahf
imul
xor
xor
leave
and
pop
lahf
fnstcw
cmps
or
cmp
cli
mov
das
test
sbb
(bad)
lds
vmovntps
sbb
(bad)
mov
scas
loop
sbb
dec
push
outs
push
mov
icebp
lds
jmp
mov
das
mov
push
pop
jo
aaa
fadd
call
adc
in
fdiv
ret
push
pop
sub
sub
xor
push
push
popf
mov
lods
lods
inc
ins
and
rcl
(bad)
jno
call
pshufw
cmp
pop
or
and
xor
adc
rol
adc
pop
sahf
add
inc
xlat
fadd
push
dec
mov
dec
retf
inc
jge
sahf
push
adc
add
call
(bad)
(bad)
shl
lahf
adc
cli
or
adc
leave
rol
xchg
test
cwde
xchg
enter
xor
ror
xor
mov
and
int
sub
add
rcl
jmp
call
sar
or
sub
cmc
arpl
fdiv
out
push
or
shl
pop
push
popa
int
push
aas
cmc
sbb
and
mov
jp
ss
mov
int3
jns
and
lods
and
arpl
mov
sbb
arpl
call
js
push
lods
and
push
pop
cmc
out
pop
mov
inc
cmp
pop
fwait
ins
es
scas
sbb
mov
shr
jmp
rol
call
out
jecxz
into
fldenv
arpl
cli
sub
xchg
aas
add
in
test
mov
xor
sbb
jmp
gs
std
pop
sbb
outs
cmp
jle
rol
mov
daa
mov
aaa
(bad)
mov
pop
out
stc
inc
test
inc
imul
imul
pop
inc
(bad)
jmp
in
jle
jl
xlat
mov
je
inc
jl
pop
shl
popa
stos
pop
xchg
dec
mov
scas
stos
(bad)
int3
mov
mov
aas
push
mov
pop
loop
pushf
dec
jp
ficom
cmp
repz
imul
inc
xchg
sub
aaa
loopne
sti
loope
cmp
adc
cmps
ret
sbb
adc
jo
imul
inc
or
outs
fwait
stos
pop
(bad)
or
pop
inc
clc
sub
push
push
aas
jmp
inc
aad
cwde
pop
sbb
fs
(bad)
lea
icebp
mov
movs
sar
cmps
or
in
jns
leave
cmp
lea
pop
fcom
addr16
test
popa
(bad)
hlt
inc
jmp
jmp
mov
mov
aas
inc
xor
push
jmp
dec
mov
arpl
fs
inc
icebp
enter
mov
xchg
adc
aaa
mov
das
sub
push
adc
jl
cdq
cwde
imul
cmps
out
bound
mov
inc
ja
mov
push
xor
fst
push
or
adc
call
notrack
mov
retf
inc
push
sub
xchg
xor
in
daa
(bad)
repnz
leave
or
ficomp
dec
repnz
bound
shl
xor
mov
pop
sar
mov
xchg
out
or
rcl
push
or
test
xchg
adc
scas
retf
push
inc
push
cmp
xchg
ja
jno
inc
mov
add
mov
repz
ds
cmps
test
mov
jecxz
dec
jmp
call
cdq
aad
ins
push
div
jo
xchg
push
aam
sbb
test
ret
pop
retf
cmp
xchg
mov
out
dec
jnp
and
mov
and
xchg
cmp
xchg
pop
pop
push
pop
jle
loop
push
nop
dec
push
leave
int3
sbb
lods
adc
inc
xor
lods
push
sahf
or
fdiv
lds
pop
lock
mov
or
ja
lods
adc
(bad)
mov
sbb
mov
mov
pop
inc
sbb
xlat
aad
dec
xor
inc
mov
dec
xlat
iret
pop
mov
lods
aad
pop
sbb
iret
inc
arpl
ret
cmps
fidiv
inc
jmp
fcos
out
dec
retf
dec
pop
pop
pushf
mov
inc
nop
jmp
sbb
das
mov
ins
or
mov
cmps
cmps
fnstcw
out
fsub
js
mov
es
mov
cmp
jle
test
inc
xchg
imul
pusha
add
sbb
jmp
cdq
mov
lods
not
or
mov
jecxz
dec
adc
leave
xchg
mov
mov
in
or
js
pop
push
scas
and
jge
or
pop
jnp
add
cmp
retf
jmp
inc
sti
mov
into
dec
aas
pusha
push
push
inc
cmp
dec
(bad)
enter
mov
mov
xlat
pop
mov
inc
repnz
xor
push
cmps
cwde
ret
pop
xchg
cld
xchg
cmp
mov
stos
cmp
mov
shl
gs
movs
mov
rcl
add
pop
xor
or
retf
iret
(bad)
inc
fisubr
(bad)
sub
test
mov
push
xchg
in
and
inc
(bad)
jne
mov
jmp
sti
and
shl
mov
fisttp
in
add
dec
jmp
adc
add
js
xor
iret
jecxz
retf
test
ss
dec
sbb
mov
adc
mov
push
nop
mov
test
xchg
(bad)
sti
adc
or
mov
bound
gs
test
mov
sbb
sti
gs
out
mov
mov
test
mov
in
jl
sbb
stos
adc
or
cmp
xor
ins
gs
test
dec
fs
dec
dec
jmp
jl
add
mov
iret
(bad)
sbb
sub
retf
cmp
ficom
lods
xchg
std
jo
loop
ret
cwde
push
xchg
add
mov
sub
ja
js
ret
push
fsubr
push
mov
clc
cmp
mov
push
std
rcl
push
shl
cmps
je
ficomp
mov
xchg
stos
xor
xchg
add
fstp
xor
cmps
retf
mov
cmp
rcl
dec
inc
xor
xchg
and
adc
gs
jnp
shr
or
shl
lods
jne
jae
ins
inc
ret
add
jae
cwde
outs
mov
test
mov
out
in
jbe
jo
cmp
(bad)
and
in
push
sub
stc
rcl
sti
mov
inc
dec
retf
rcl
movs
xor
(bad)
shr
adc
pushw
lock
push
outs
inc
out
fisub
lock
jl
iret
dec
aam
cwde
xor
adc
pop
pop
dec
xor
xchg
mov
mov
mov
sbb
rcl
enter
arpl
or
sbb
pop
xchg
push
fwait
je
repnz
jmp
dec
dec
(bad)
fst
lock
push
xor
cmp
push
jl
push
loop
fisubr
jecxz
fdiv
jo
adc
(bad)
leave
inc
gs
or
and
push
dec
lock
loop
sbb
jb
xor
and
popf
addr16
(bad)
adc
push
retf
scas
call
xor
xor
lds
aam
out
aaa
mov
lods
es
xor
sahf
pushf
mov
(bad)
fsubr
xor
fidiv
mov
push
adc
mov
or
cmps
jb
cs
(bad)
cmp
add
je
lods
mov
stos
jge
lahf
je
icebp
pop
int3
xchg
das
mov
into
cld
pushf
pop
outs
out
sbb
pop
pop
add
cli
dec
jg
arpl
sbb
jb
mov
xchg
dec
iret
lods
leave
mov
push
xchg
ret
jg
push
push
stos
or
popf
out
mov
outs
ror
and
pop
leave
jno
jmp
and
cmp
mov
jbe
test
jmp
je
pop
mov
out
mov
ret
js
jl
xor
push
ds
je
mov
and
iret
sti
cmc
lods
in
adc
(bad)
mov
adc
cmc
xor
sbb
mov
xor
(bad)
sti
je
test
icebp
push
or
push
cmp
aad
or
stos
imul
mov
mov
clc
push
in
cmp
out
and
sbb
adc
add
js
nop
push
fsubrp
es
lock
fwait
mov
xchg
inc
imul
sub
repnz
fwait
add
adc
ffreep
mov
sub
jecxz
fmul
jle
xor
pop
adc
aas
mov
lea
xor
add
pop
ret
dec
or
cli
ss
jnp
jns
mov
xor
mov
mov
xor
shr
sub
in
leave
push
test
pushf
cmp
xchg
shr
neg
xchg
les
jp
pop
pop
lds
mov
jmp
stc
pop
ins
xlat
sub
pop
jmp
xchg
jne
ins
call
mov
scas
xor
aam
cli
push
mov
outs
and
push
fs
sub
loop
retf
mov
cmps
mov
sub
sahf
in
mov
push
mov
xor
popf
in
mov
psubw
shl
hlt
xchg
cmc
or
ficomp
cs
add
sbb
in
jbe
adc
pextrw
add
sbb
push
and
hlt
cmc
(bad)
push
adc
pop
sub
mov
(bad)
mov
mov
xor
sub
rol
mov
xlat
ss
int3
mov
adc
push
out
jle
aas
popa
inc
std
xchg
retf
loopne
mov
cmp
and
outs
ins
or
ins
(bad)
or
in
xchg
mov
jmp
add
xchg
data16
in
cmps
push
push
inc
adc
lahf
xchg
sbb
add
push
pusha
int
push
scas
ss
loope
data16
std
ret
adc
push
iret
mov
add
test
sbb
out
sub
test
adc
ret
lea
push
or
sub
fdiv
push
pop
add
aam
out
mov
push
aad
rcr
mov
push
(bad)
stos
ins
imul
pop
add
imul
push
scas
mov
repz
int
inc
cmp
jle
push
adc
pop
mov
xor
mov
sbb
xchg
push
push
push
jmp
pop
push
pop
bound
mov
xchg
adc
(bad)
enter
mov
retf
pushf
sub
or
pop
xor
sub
push
fwait
outs
pop
xchg
outs
mov
movs
mov
mov
adc
jmp
dec
(bad)
fcomp
mov
xchg
test
sti
iret
cmp
pop
xchg
outs
retf
lods
fistp
xlat
out
aad
add
bound
jmp
mov
or
push
stos
xchg
xor
adc
jge
inc
jge
mov
in
in
and
ret
ret
xchg
pushf
or
jne
ficomp
sbb
test
fs
cmps
das
fld
pop
aas
mov
mov
mov
cmp
xchg
mov
nop
leave
xlat
shl
aaa
icebp
xlat
test
mov
xchg
std
imul
pop
mov
xchg
cmp
test
push
lods
popa
sahf
dec
xor
gs
(bad)
xor
adc
pop
pop
pusha
aaa
cmc
int
xchg
stc
fdiv
mov
mov
or
inc
addr16
xor
pop
sahf
mov
and
aam
xchg
pop
dec
mov
ins
fidivr
fisttp
(bad)
popf
nop
test
sub
(bad)
std
add
inc
dec
pop
and
mov
je
retf
in
cmp
(bad)
lds
push
sbb
scas
int
xor
ret
jbe
push
cld
mov
cmp
out
retf
clc
mov
loopne
cmps
dec
xchg
sahf
fcomp
scas
or
loop
out
pop
fdiv
(bad)
mov
ds
sti
sbb
dec
add
test
popa
push
mov
lock
inc
mov
aad
add
loope
and
outs
aam
pop
data16
in
lock
sbb
mov
pop
inc
add
push
jp
and
in
lea
cld
in
pop
fsubr
sbb
popf
int
jp
xchg
mov
dec
mov
cwde
push
jle
or
(bad)
scas
mov
adc
push
mov
gs
lods
cmps
loop
bnd
adc
lahf
adc
push
mov
fcmovbe
mov
test
cmps
jns
and
loopne
dec
ja
xchg
data16
xchg
cmp
mov
(bad)
push
scas
(bad)
into
xchg
iret
test
dec
adc
xchg
inc
addr16
mov
stc
out
mov
(bad)
mov
rcl
cmp
dec
jbe
mov
jnp
test
mov
lock
fild
test
fsub
stc
test
push
daa
pop
add
(bad)
retf
fdiv
cmps
fisttp
add
pushf
std
fs
dec
or
or
retf
sub
jl
pop
(bad)
jns
in
data16
aam
not
jo
test
ret
aaa
cmp
clc
(bad)
repz
adc
js
add
xor
jg
test
fiadd
push
jmp
xlat
xor
inc
push
jmp
mov
and
adc
clc
pusha
mov
or
mov
repz
push
pop
jae
dec
mov
xchg
xchg
or
dec
mov
stos
lock
push
pop
(bad)
ss
je
or
sbb
fsubr
mov
xchg
cmp
jmp
sub
and
mov
ins
rcl
es
arpl
pushf
div
outs
outs
pop
test
jne
add
push
ins
mov
mov
inc
cmps
or
cmps
outs
push
adc
push
out
(bad)
pop
push
and
mov
into
shl
je
mov
sub
ds
xor
push
dec
retf
ins
mov
sub
push
ss
push
and
jl
sbb
pop
popf
imul
add
mov
(bad)
fstp
ja
sbb
stos
aas
(bad)
lods
iret
xor
or
les
push
test
mov
adc
mov
out
cmp
jnp
sbb
adc
inc
and
xlat
inc
ret
sbb
fst
jo
sbb
xchg
gs
das
(bad)
mov
sbb
or
pop
movs
adc
jb
jns
into
jno
mov
das
ins
mov
push
sbb
enter
cmp
scas
sub
xor
mov
es
sbb
retf
mov
mov
jo
add
xor
push
aam
xchg
cmp
cmp
lods
dec
ins
sub
(bad)
in
js
pop
outs
(bad)
out
or
loope
fscale
adc
leave
out
mov
jmp
and
cld
sbb
imul
mov
scas
xchg
xor
loopne
addr16
std
div
ja
dec
add
xchg
shl
(bad)
lea
das
pop
test
fidivr
stc
ret
aas
jmp
and
sahf
jnp
daa
fcomp
xchg
stc
test
xchg
adc
push
stos
sbb
inc
xor
std
xchg
sbb
hlt
(bad)
les
mov
mov
mov
push
pop
inc
sbb
icebp
add
rcr
stos
enter
popa
jecxz
add
inc
and
aas
cs
call
aaa
or
call
sub
rol
pushf
cmp
jnp
loope
lods
dec
pop
ja
mov
ffree
push
jne
lods
test
cli
arpl
xchg
jae
sub
aad
pop
aas
push
or
push
push
push
xchg
(bad)
jo
fyl2xp1
jmp
cs
inc
(bad)
scas
scas
push
in
mov
xor
shr
stos
sub
js
push
lods
je
out
push
mov
pop
outs
or
into
clc
(bad)
inc
or
xor
mov
ret
inc
xor
fcmovb
or
mov
mov
xor
pop
sbb
cmp
push
and
mov
pop
lds
jne
jo
push
popa
test
or
xor
cmps
cmp
shr
inc
dec
mov
fbld
dec
jo
jne
xchg
dec
call
dec
mov
and
dec
scas
out
fcomp
fmul
stos
adc
mov
push
jne
(bad)
push
movs
arpl
rcl
jo
sbb
in
jns
push
(bad)
push
scas
ret
mov
imul
sub
pop
add
sahf
add
cld
js
mov
cmp
fild
mov
dec
mov
cmp
shl
cmp
cmp
xchg
push
pop
push
xor
mov
dec
jecxz
adc
mov
test
add
dec
pop
repz
dec
stos
rep
movs
popf
cmp
jmp
push
shl
data16
js
pop
aad
lahf
push
adc
jno
outs
shl
ss
lahf
movs
outs
push
fild
(bad)
cld
push
sub
bound
ins
mov
mov
fcmove
out
scas
push
mov
fistp
fst
mov
pop
xor
push
mov
lods
(bad)
pop
or
retf
shl
aas
add
xchg
fbstp
mul
jg
push
pop
inc
test
inc
push
xchg
fld
cmp
or
jge
sbb
jbe
sbb
push
sub
or
jmp
push
enter
stos
aas
ss
mov
(bad)
jmp
push
jmp
dec
adc
jg
jmp
jne
fwait
ins
pop
into
lock
lock
pushf
icebp
lods
cmp
call
mov
sahf
mov
outs
cmp
or
loop
mov
rcl
fsub
popf
dec
pusha
addr16
sbb
pop
outs
into
shl
cmp
fdiv
ins
adc
xchg
mov
xchg
or
in
pusha
xor
mov
retf
pop
retf
ins
int3
push
pusha
pop
mov
fwait
push
push
pusha
cmp
or
je
gs
lahf
repnz
jo
mov
push
inc
inc
mov
sbb
test
jae
dec
loopne
jbe
mov
push
xor
or
or
pop
add
icebp
test
mov
jge
mov
jmp
sub
or
test
addr16
ficomp
mov
sbb
mov
xor
dec
je
mov
add
movs
jl
push
xlat
pop
out
mov
xor
xor
pop
sub
cs
add
xchg
mov
adc
dec
cmps
dec
jecxz
rep
or
mov
aad
push
xchg
(bad)
or
mov
cmps
(bad)
in
adc
mov
fmul
dec
jnp
ret
adc
mov
xchg
in
inc
adc
mov
jmp
clc
shl
dec
fst
gs
sbb
ret
ins
cmps
lahf
mov
iret
jg
fisttp
(bad)
jmp
xor
xor
es
mov
out
xlat
and
outs
pop
jge
mov
(bad)
sti
jae
lods
mov
jmp
sbb
pop
mov
mov
push
cwde
xchg
test
popf
movs
cli
mov
ins
rcl
gs
jne
xor
push
in
pop
out
and
mov
mov
es
inc
out
ja
outs
(bad)
dec
jmp
cmp
xor
(bad)
lahf
fwait
and
mov
out
add
add
aad
xchg
retf
das
icebp
fld
loope
pop
xchg
cmp
push
mov
mov
sbb
xor
les
dec
adc
pop
(bad)
fild
mov
sbb
sbb
dec
fadd
addr16
mov
call
popa
aad
dec
jecxz
das
push
out
gs
cmc
jecxz
aam
pop
pop
pop
dec
inc
test
sbb
ja
shr
cmp
dec
pop
cdq
das
lea
rcr
daa
scas
mov
xchg
in
or
add
push
mov
inc
nop
into
ret
mov
rcl
scas
stos
cmp
repnz
loope
into
adc
das
adc
mov
stos
and
arpl
ret
mov
test
and
(bad)
(bad)
scas
addr16
repnz
(bad)
into
xchg
cmp
dec
imul
fwait
ret
clc
xor
inc
adc
pop
sub
or
rol
aas
xchg
xor
shl
rcl
sbb
arpl
push
cmc
in
test
jl
std
das
push
movs
dec
jo
(bad)
aam
leave
xchg
gs
ficomp
imul
int3
pop
lds
add
imul
jne
cmp
adc
retf
fucomi
push
or
imul
and
fsubr
xchg
push
fild
dec
cs
jb
sti
jl
pusha
xor
cld
daa
(bad)
dec
push
loop
mov
mov
clc
push
and
adc
adc
mov
scas
stos
add
push
addr16
shl
ins
arpl
xchg
aad
cld
xchg
adc
fwait
cmc
and
xor
push
inc
mov
scas
gs
cs
pop
xor
jbe
cmp
ss
dec
push
mov
xlat
movs
ss
or
jge
dec
or
push
mov
cld
call
test
fst
std
movs
fild
sub
mov
fistp
(bad)
push
addr16
and
cdq
pop
mov
scas
into
push
ror
fmulp
loope
xor
pop
ja
adc
mov
into
xchg
push
xlat
inc
or
adc
cmp
mov
sbb
loop
mov
imul
aad
jp
add
in
sbb
js
jp
add
inc
ja
loope
scas
adc
rol
bound
pop
push
sahf
outs
outs
cmps
pusha
and
adc
jle
push
popa
cld
dec
test
fxch
xlat
cmp
push
rcr
jae
test
mov
call
aam
lock
fwait
push
ins
(bad)
mov
or
fdiv
(bad)
pop
mov
call
data16
data16
adc
xchg
jnp
sub
jne
xor
pop
cmp
lock
pushf
stos
dec
nop
jmp
adc
xchg
xor
push
mov
(bad)
outs
inc
nop
fnstsw
pop
inc
adc
rol
jmp
jae
sub
inc
xchg
je
loopne
sahf
add
cmp
sahf
fild
dec
int
lahf
push
enter
sti
jne
cmp
out
in
push
inc
push
es
cld
lea
add
les
cmp
xchg
mov
leave
jle
test
nop
pop
xor
int3
aad
dec
ret
inc
pop
sub
pop
inc
jo
(bad)
fcomp
out
adc
xchg
or
cmp
mov
xor
dec
cwde
fst
stos
push
ror
cmp
fdiv
retf
rol
in
call
push
bound
cmp
cmp
or
xchg
mov
pop
movs
cmp
loop
cmp
hlt
outs
test
mov
(bad)
popa
repz
xchg
movs
mov
pop
sbb
push
pop
ror
pop
push
push
fsubr
mov
push
push
and
mov
xchg
xchg
inc
popa
add
adc
fisub
retf
cmps
sub
mov
jb
stos
xor
loopne
aaa
bound
or
ds
aad
adc
xlat
aad
mov
sti
fidiv
(bad)
push
stos
(bad)
aad
inc
fidiv
jp
xor
adc
jp
addr16
push
int
(bad)
out
enter
out
sub
push
dec
dec
imul
fcomp
or
js
mov
add
dec
lods
sub
inc
call
dec
nop
ret
jbe
cwde
cmp
xor
jmp
add
inc
push
int
call
xchg
adc
aaa
xor
mov
ret
mov
shl
test
jp
pushf
fs
and
loopne
test
or
jl
mov
ss
adc
aas
out
(bad)
pop
ss
xchg
mov
inc
sbb
call
icebp
lahf
mov
jmp
stc
pop
mov
fdecstp
je
hlt
das
jmp
jmp
inc
pop
xor
or
mov
cmp
cdq
pop
mov
mov
xchg
cwde
sti
add
cmp
xchg
jl
fsubr
cmc
jo
ds
mov
sbb
sbb
data16
retf
inc
mov
or
add
mov
fldenv
mov
push
sub
test
fnsave
imul
lods
int
inc
aas
gs
cld
add
aad
and
sub
ds
test
push
cmp
pushf
push
rcr
mov
repz
addr16
and
sub
loopne
inc
test
push
mov
push
push
int
cmp
mov
test
test
dec
jnp
out
mov
jecxz
push
sub
pop
dec
call
je
cmp
fadd
out
pop
pmaxsw
out
mov
adc
fild
cld
mov
sbb
mov
cmps
cld
add
push
lods
in
mov
cmp
pushf
or
scas
mov
dec
xor
or
dec
daa
and
(bad)
arpl
stc
(bad)
in
xor
nop
idiv
jnp
rcl
call
push
and
lds
into
gs
sbb
call
cwde
sar
add
xchg
xchg
fisubr
pushf
fisttp
or
mov
mov
sub
enter
sbb
dec
mov
(bad)
adc
or
jle
inc
jmp
call
cdq
std
dec
lods
jecxz
fwait
and
inc
fdiv
mov
fstp
je
ss
cdq
jmp
or
pop
xlat
dec
ss
and
jl
pop
jg
retf
lock
mov
mov
and
cwde
adc
fcmovb
bound
and
dec
outs
fs
adc
and
mov
cmp
aas
jp
sub
jmp
mov
mov
pop
jbe
dec
push
push
(bad)
mov
repnz
outs
jmp
sahf
ficom
es
movs
(bad)
lock
and
mov
fisttp
add
lea
xchg
xchg
bound
sbb
push
adc
(bad)
ror
mov
pop
cmp
add
pop
hlt
pop
iret
fild
xor
sub
or
jbe
enter
dec
xor
inc
leave
mov
shl
sub
jo
(bad)
mov
pop
mov
loop
inc
popf
mov
mov
cmps
shl
aas
xchg
movs
or
mov
ss
and
retf
push
loope
lds
inc
adc
in
rcr
pop
int3
pop
leave
jno
jne
push
pop
jl
xchg
pop
cmc
iret
sub
faddp
or
adc
mov
popf
mov
inc
sub
xchg
pop
add
sbb
fwait
and
cdq
scas
shl
lods
mov
adc
outs
dec
std
dec
jb
stos
loope
sbb
loopne
dec
fbld
mov
test
test
shl
jg
cwde
fistp
(bad)
loop
dec
push
jl
jge
bswap
adc
mov
mov
inc
mov
movs
sub
push
lods
repnz
les
test
jns
sub
(bad)
imul
mov
retf
xor
jmp
inc
ret
push
cs
mov
or
icebp
add
hlt
jbe
and
stos
neg
clc
push
arpl
(bad)
sbb
loope
dec
test
dec
mov
out
nop
cmp
sbb
jmp
jno
mov
call
iret
retf
push
je
and
dec
nop
cs
in
shr
(bad)
retf
call
aad
xor
sub
(bad)
jge
retf
jno
ds
dec
push
inc
and
xchg
jle
inc
ins
(bad)
js
adc
add
fisub
retf
in
aam
xchg
mov
adc
out
fisttp
push
xor
push
sahf
icebp
das
and
(bad)
xor
rcl
xor
xchg
add
rcl
movs
sub
mov
sub
xor
gs
mov
mov
mov
pop
popa
cmp
lods
ret
in
sti
rcl
or
aad
sub
sub
cwde
cmp
sbb
or
enter
and
cmp
and
inc
enter
mov
pushf
in
add
cmp
inc
int3
mov
xchg
mov
ret
cld
pop
cwde
jb
ret
inc
pop
sbb
cmp
and
xor
cwde
cmp
xchg
inc
lea
pop
cdq
pop
js
inc
mov
add
mov
repz
sub
movs
pop
or
cwde
push
add
aas
mov
xchg
xor
and
mov
or
jmp
repz
fidiv
test
push
and
das
ret
(bad)
dec
icebp
push
or
stc
cmp
addr16
mov
push
xchg
pop
in
iret
push
mov
dec
cmp
push
test
xor
cli
jo
jle
int
sysenter
sbb
push
sub
outs
mov
mov
sub
mov
mov
xchg
xor
pop
test
pop
sbb
scas
cmc
out
popa
cmps
repnz
xlat
cmps
fnstsw
jmp
mov
cmp
mov
fcos
sti
xchg
jne
push
or
and
xor
fnstsw
lods
mov
push
xor
cmp
movs
jmp
sbb
sti
push
rcl
sbb
inc
or
int
cdq
push
daa
dec
(bad)
push
mov
shl
pop
sub
sbb
sub
les
retf
movs
ss
addr16
mov
jecxz
adc
push
xchg
xor
lds
loopne
mov
xor
outs
jbe
outs
(bad)
loop
test
shl
in
or
dec
mov
mov
xchg
neg
data16
test
je
ins
jmp
push
jno
in
iret
jmp
test
fbstp
das
adc
sub
adc
or
loopne
and
mov
push
out
mov
inc
sub
cmp
cmp
push
js
xor
jl
inc
or
sbb
shl
add
jno
cmp
push
scas
arpl
jge
add
dec
xchg
sbb
push
scas
div
fwait
jb
mov
dec
dec
scas
sub
icebp
ror
ror
movs
cwde
xchg
pop
cs
sbb
mov
icebp
pop
cmp
shl
jl
pop
fistp
mov
push
neg
push
pop
sahf
sbb
xor
movs
pusha
mov
imul
(bad)
retf
and
test
fdiv
push
std
sti
push
call
outs
test
cmp
icebp
scas
pop
push
nop
and
add
dec
mov
cmp
mov
in
out
sub
cmp
mov
stos
xor
sub
test
inc
lahf
cdq
(bad)
(bad)
cmps
in
movs
mov
adc
inc
movs
push
jb
pop
and
hlt
out
mov
mov
push
popa
xchg
cmps
add
jae
rol
sar
jg
mov
xchg
outs
neg
mov
std
or
bound
mov
mov
outs
fdiv
fisubr
pop
int
jmp
cmps
fisub
xor
adc
icebp
mov
pop
minps
mov
cwde
retf
gs
mov
xchg
and
ds
mov
xchg
test
inc
pusha
adc
xchg
push
add
jnp
jbe
and
enter
daa
ror
xlat
xchg
fidiv
packssdw
call
mov
push
jge
call
mov
lock
mov
dec
aaa
scas
cmp
mov
das
mov
dec
loope
mov
addr16
jae
mov
mov
mov
add
push
sbb
pop
dec
test
jno
push
or
xor
jb
test
push
jle
sbb
pop
or
test
push
in
(bad)
cmp
pop
xlat
xor
adc
aaa
pop
gs
jb
stc
test
cdq
and
jnp
push
inc
in
ds
nop
lock
mul
mov
push
push
jbe
(bad)
cmp
jns
sbb
repz
aam
xchg
inc
sahf
mov
pop
outs
loopne
or
pop
es
ja
pop
dec
push
cmps
push
xchg
fdivr
add
lahf
test
ins
fild
xor
fwait
sub
inc
add
enter
ficomp
adc
cmp
aas
retf
add
sub
adc
adc
xlat
aad
dec
push
inc
or
lock
or
(bad)
iret
dec
shr
mov
cmps
loope
clc
movaps
jo
jae
scas
fisttp
je
mov
cmp
jl
test
push
arpl
daa
or
xor
xchg
mov
stos
xor
mov
xchg
fwait
jnp
mov
ret
loop
faddp
jns
pop
push
retf
push
ret
dec
icebp
xchg
neg
mov
outs
movs
les
adc
fstp
mov
add
mov
pop
sbb
fs
mov
inc
xchg
sti
sub
inc
mov
fcomi
adc
adc
mov
xlat
sub
popa
jbe
jns
xor
add
push
xchg
add
pop
sbb
fcomi
cmp
adc
imul
pop
outs
sbb
adc
push
mov
out
aam
mov
push
fisttp
pop
xlat
call
les
jbe
or
(bad)
dec
cs
es
cmp
mov
mov
ins
lds
fisttp
mov
hlt
fwait
xchg
pop
out
add
mov
inc
or
(bad)
xor
ins
xchg
and
xchg
inc
repz
arpl
pop
mov
pushf
stc
sbb
dec
ins
or
push
(bad)
xchg
jae
loopne
xor
fwait
pop
mov
sbb
dec
in
into
mov
mov
test
and
in
jmp
pop
lahf
and
test
mov
sub
cs
shl
pop
jbe
mov
ins
xor
adc
ficomp
test
xchg
gs
add
mov
or
fidivr
call
lock
add
cmp
sbb
xchg
sbb
dec
fstp
xor
clc
call
fistp
mov
sbb
fcomi
ins
cmps
adc
cmp
add
cli
push
imul
loopne
pop
test
cli
pop
sbb
cld
sbb
in
fdiv
pushf
cmps
arpl
cwde
mov
and
les
cmp
cs
cs
aaa
aas
sti
fist
out
out
pushf
std
pop
mov
or
shl
pop
push
cmp
or
mov
loope
clc
mov
or
mov
pop
movs
jle
cld
mov
int3
mov
xlat
leave
and
xchg
aaa
sub
push
out
jg
fisttp
inc
and
xlat
scas
inc
stos
cmc
xor
int3
ja
mov
adc
ins
mov
jp
aas
test
and
inc
retf
pop
out
push
and
jbe
dec
aam
adc
cmp
aad
and
fs
add
outs
jne
ins
mov
shl
out
pop
pop
outs
sbb
push
mov
cmp
xchg
mov
adc
sahf
into
nop
int
jl
arpl
jle
cmp
call
mov
retf
pop
pop
inc
add
mov
stc
sub
push
dec
cmps
cmp
or
jmp
shl
or
adc
movs
jmp
xor
mov
dec
or
fcomi
fstp
call
ret
xchg
lods
sti
lock
ds
ss
shl
cmp
mov
(bad)
fsubr
push
shl
inc
test
je
es
lods
inc
bound
cmps
ss
push
not
and
mov
push
push
call
mov
mov
add
cs
mov
sub
pusha
pop
gs
xor
in
imul
adc
xchg
retf
fs
xor
sbb
xchg
sub
shr
xor
and
popaw
inc
xcrypt-cbc
cmps
rol
pop
outs
dec
stos
cmp
je
inc
mov
js
or
xlat
dec
pop
jo
mov
ins
mov
mov
fdivrp
(bad)
lds
push
and
fstp
popf
out
ja
fdivr
push
je
add
jp
cmc
int3
mov
(bad)
in
xchg
jmp
out
aaa
retf
ss
movs
call
ds
push
push
test
and
mov
inc
xchg
cmp
lds
(bad)
lock
fidivr
imul
pop
push
push
adc
jb
aam
sbb
push
adc
mov
and
in
js
jb
imul
inc
xchg
mov
sub
into
(bad)
std
out
in
sbb
jmp
adc
inc
push
aad
loope
aaa
pop
pop
push
and
(bad)
(bad)
add
loop
ss
push
std
and
fist
es
lods
xchg
stc
in
retf
xchg
and
mov
(bad)
imul
aaa
popf
sub
jmp
add
imul
out
call
(bad)
cmp
arpl
mov
fwait
jle
inc
adc
retf
and
adc
test
bound
dec
loopne
and
mov
scas
lods
dec
adc
pop
or
mov
mov
lods
test
xchg
mov
push
push
popf
lds
cwde
jbe
popa
dec
lock
out
or
inc
sbb
mov
mov
pop
jmp
jmp
pop
adc
outs
xchg
lods
jecxz
int3
jno
inc
or
adc
cmp
pushf
jne
dec
cli
adc
out
loop
jmp
call
add
ds
ja
loop
sub
lods
or
pop
stc
(bad)
mov
mov
push
movs
sbb
scas
lds
mov
outs
pop
es
add
pusha
movs
es
jae
int
or
movs
mov
call
add
or
xlat
repnz
sub
cwde
stos
xchg
add
loopne
aaa
and
and
push
jecxz
xchg
dec
outs
jge
loop
jns
and
push
xchg
fdiv
out
inc
cmp
xor
xchg
fdivrp
(bad)
je
out
inc
cdq
shl
inc
xlat
add
shl
pop
xchg
retf
imul
jp
int3
pop
test
ja
fild
sbb
aam
in
aam
jp
stc
jne
daa
outs
fstp
lock
fadd
add
bsr
movs
push
add
ins
mov
js
cmps
xor
out
adc
mov
mov
jle
or
cld
jae
jge
sub
mov
dec
mov
mov
add
push
mov
xchg
and
das
shl
pop
pop
scas
mov
idiv
fiadd
in
jb
jmp
movs
adc
xor
scas
mov
out
sahf
lock
sbb
repnz
jp
jg
mov
sbb
popf
imul
enter
sar
lahf
fidivr
dec
iret
test
mov
dec
mov
in
jecxz
jmp
test
jl
in
pushf
or
mov
inc
push
add
sub
push
jns
loopne
xchg
imul
popf
xchg
mov
lods
fwait
int
imul
push
cwde
and
mov
xchg
mov
add
xchg
pushf
pop
inc
push
sbb
lods
aam
aas
mov
mov
mov
cmc
or
sti
in
mov
xor
or
rcr
push
popf
repnz
inc
repnz
inc
int
nop
ds
or
push
je
push
xor
data16
xor
sub
out
or
push
out
mov
mov
cmp
jns
dec
sbb
inc
mov
fadd
(bad)
mov
push
mov
pop
cmovae
mov
xor
and
ja
into
mov
pop
imul
cmc
rcl
bound
push
data16
out
sub
push
neg
sbb
xchg
pusha
dec
fstp
add
cs
lods
scas
lods
or
cmc
loopne
push
sbb
repnz
dec
loop
lds
stos
dec
mov
and
jl
mov
sti
jnp
int
jg
jo
cdq
gs
xor
pop
xchg
lea
xchg
mov
fsubr
cmp
je
pop
xlat
dec
push
js
mov
ds
dec
ins
or
pop
jmp
dec
or
movs
inc
jb
jne
ja
xchg
xchg
mov
and
mov
jo
stos
stos
and
sbb
cmp
std
inc
xor
sbb
inc
jae
fcomp
sbb
push
pop
mov
mov
sbb
push
mov
stc
pop
cwde
or
scas
shl
ja
rcr
ror
adc
and
or
or
cli
add
cmp
fistp
and
jb
push
cmps
push
xor
daa
jge
or
sbb
ja
dec
int
jbe
int3
aas
mov
pop
xchg
xlat
push
sahf
test
sbb
ficomp
std
shl
cmp
push
(bad)
(bad)
(bad)
in
fild
(bad)
mov
mov
push
int3
dec
cmp
cwde
mov
mov
jb
mov
jp
frstor
outs
loop
add
in
lods
hlt
add
inc
adc
ficom
inc
mov
cmp
test
jmp
pop
xlat
sbb
and
js
pop
mov
and
call
ffreep
jne
sbb
xor
pop
push
inc
push
sub
inc
xchg
dec
cmp
repz
sub
fstp
shl
xchg
pop
(bad)
iret
mov
(bad)
pop
xchg
adc
inc
dec
mov
adc
into
xor
dec
sbb
stos
cld
mov
fisttp
add
add
push
mov
mov
or
loop
addr16
sahf
popf
sahf
scas
push
in
jns
xchg
xchg
rol
xor
in
in
pushw
mov
test
jg
inc
dec
sti
(bad)
mov
dec
ror
aam
(bad)
add
mov
lea
stos
(bad)
aaa
call
pop
mov
fwait
aad
(bad)
mov
xchg
icebp
jb
xor
shl
shr
xchg
ins
in
pop
imul
stos
mov
xchg
sahf
sbb
or
push
in
iret
movs
fcomp
int3
push
ss
or
retf
xchg
fisttp
inc
mov
xchg
sbb
repnz
stos
in
call
push
cdq
xchg
in
push
adc
pop
(bad)
in
in
or
(bad)
pop
retf
enter
data16
jge
enter
cld
mov
jmp
adc
sbb
add
mov
mov
movhps
inc
sbb
mov
cmps
lea
xchg
out
clc
push
mov
cmp
cli
lock
jp
sub
cmp
inc
push
outs
mov
sub
rcr
mov
sub
xor
iret
dec
push
mov
out
retf
mov
mov
out
pusha
pop
inc
jno
jno
icebp
hlt
ds
push
pushf
dec
mov
adc
shl
(bad)
cmp
stos
movs
fnstsw
int
idiv
(bad)
sti
mov
ds
sub
repnz
mov
pop
inc
outs
stos
dec
out
cmp
jbe
xrelease
pop
fadd
jbe
mov
call
lods
xor
int3
cmp
popa
div
inc
nop
push
test
int
aad
adc
and
xchg
rcl
jo
in
pop
push
retf
(bad)
pop
mov
cwde
aaa
lea
mov
jmp
outs
jge
push
inc
cmp
cmp
mov
outs
push
add
clc
(bad)
pop
(bad)
fstp
lahf
add
and
xor
and
push
dec
shr
fadd
adc
mov
pop
xor
lds
dec
add
fidivr
scas
or
fidivr
sbb
sub
gs
or
jns
mov
cmp
push
ror
jmp
adc
add
out
sub
outs
dec
dec
les
adc
cmp
mov
jle
loop
adc
scas
and
inc
jg
jge
imul
adc
out
aaa
stos
ins
and
xor
sub
fmul
jae
add
and
and
jmp
mov
mov
mov
pop
mov
or
jae
mov
cli
fwait
test
into
fiadd
outs
jb
mov
jns
xlat
dec
xor
mov
stos
fiadd
jmp
ss
push
out
neg
push
cmps
fadd
retf
(bad)
jg
xor
add
dec
xchg
fmul
push
lods
and
gs
cmps
jmp
clc
loopne
mov
pop
cwde
in
call
ret
sbb
daa
(bad)
daa
jecxz
mov
or
cwde
xor
mov
jl
cmp
lods
jne
xor
push
in
pop
in
into
pop
dec
arpl
push
xchg
sbb
aaa
push
outs
(bad)
outs
std
add
sub
pop
lea
mov
push
scas
push
(bad)
imul
xor
rcr
xor
add
fstp
sub
arpl
add
xchg
out
fstp
sti
(bad)
pop
fsub
outs
jecxz
aaa
push
popf
and
mov
retf
pop
std
or
inc
loope
pushf
cmc
(bad)
xlat
xchg
jl
cmp
push
inc
fcom
sahf
sbb
xchg
daa
bswap
mov
mov
cs
sahf
test
daa
xchg
sub
dec
inc
pop
out
dec
out
cwde
add
fisub
lock
test
jp
mov
ins
into
dec
sar
mov
add
neg
dec
in
in
nop
movups
sub
push
imul
jns
lock
in
xchg
clc
ins
mov
mov
dec
mov
pop
jp
cwde
cs
and
and
adc
bound
int
adc
stos
fsubrp
(bad)
popf
jne
jb
loop
pop
mov
mov
push
mov
movs
scas
lods
or
pop
push
(bad)
jge
push
sub
xor
shl
mov
fild
std
loopne
movs
jnp
mov
scas
dec
sbb
mov
stc
mov
adc
sbb
cwde
mov
inc
mov
adc
inc
or
test
in
scas
mov
mov
fdivr
mov
shr
add
std
aaa
shl
sub
jno
mov
inc
push
and
pop
arpl
xchg
xchg
dec
push
xor
cmp
inc
cdq
mov
ret
in
and
cmp
test
fcomp
dec
xchg
in
pop
sar
xor
in
sub
movs
fwait
rcr
out
stos
(bad)
dec
or
inc
dec
cmc
loope
sahf
push
loopne
je
xlat
ins
(bad)
cli
sti
mov
mov
xlat
inc
jp
jl
stos
test
xlat
pop
add
retf
xor
in
mov
sti
(bad)
xchg
icebp
cmc
daa
xchg
aaa
aaa
mov
pop
push
mov
movs
fucomp
mov
popa
aaa
cmps
imul
adc
test
pop
add
hlt
and
shl
mov
cmc
popf
push
push
mov
adc
scas
or
or
repz
mov
lahf
xchg
ins
rcl
dec
xchg
cmp
mov
bndstx
cmc
jge
int
xor
sahf
push
dec
push
inc
mov
sbb
lock
out
mov
call
mov
scas
(bad)
xchg
imul
mov
test
shr
not
cmp
(bad)
stc
mov
push
call
or
sbb
dec
fs
in
aas
pop
mov
loop
cdq
push
mov
add
dec
icebp
stos
pusha
mov
movs
div
xchg
sahf
add
retf
mov
fsub
pushf
mov
add
adc
mov
mov
mov
and
imul
test
dec
sbb
pop
shr
sub
xor
sub
xchg
aas
je
push
adc
fcmovu
fidivr
aas
cmc
mov
adc
xor
in
(bad)
jecxz
daa
mov
rcl
jnp
xor
inc
neg
(bad)
repz
mov
(bad)
out
jne
retf
imul
or
out
xor
sar
test
stos
push
enter
mov
sti
mov
retf
das
mov
inc
test
push
cmp
push
ins
pop
rcl
adc
pop
ret
push
add
inc
inc
lahf
mov
fist
dec
mov
retf
push
push
out
outs
xor
je
in
jo
les
jp
(bad)
dec
in
repz
icebp
hlt
push
cmp
js
push
je
iret
add
lock
jo
jecxz
fstp
cmp
icebp
push
push
scas
inc
stc
jl
jecxz
adc
jbe
sub
in
nop
lods
cs
cli
pop
add
dec
sbb
cdq
cmps
call
adc
clc
stos
or
repz
inc
push
push
mov
scas
mov
mov
jne
ds
xchg
xor
inc
sbb
sbb
push
add
cmp
mov
jl
jle
sbb
and
xchg
inc
inc
cli
lds
repz
sti
pop
jge
ret
ror
shl
sub
xor
xor
aaa
jle
mov
xor
ss
leave
sub
cmps
sbb
jge
ret
sub
or
inc
sti
adc
in
pop
dec
xchg
mov
add
mov
mov
mov
cmp
(bad)
mov
stos
(bad)
cmp
pop
jmp
mov
add
frstor
and
and
add
fwait
xor
mov
adc
pop
inc
jns
ds
jecxz
mov
adc
retf
fimul
sub
add
(bad)
repnz
pop
repz
cmp
(bad)
xchg
xor
dec
dec
and
cmps
push
popf
mov
add
mov
in
adc
jg
inc
push
mov
addr16
sti
jmp
cmc
stos
cmp
(bad)
into
mov
stos
xor
cmp
ret
dec
mov
jmp
adc
js
push
mov
aaa
mov
es
movs
push
and
push
aad
retf
mov
mov
pop
sub
and
mov
or
jge
ins
xchg
jb
bound
loop
push
test
add
je
into
pushf
(bad)
int3
lds
adc
aas
arpl
mov
test
inc
push
inc
movs
fmul
das
dec
retf
mov
outs
mov
aaa
int
inc
or
dec
cmps
inc
fisttp
add
ret
out
add
out
ds
push
repz
ins
fistp
loope
and
mov
mov
rcl
xchg
cmp
daa
in
jecxz
pop
push
or
popa
adc
mov
cli
mov
dec
idiv
test
call
test
pushf
sti
sub
aas
jp
ins
or
lahf
(bad)
adc
dec
or
(bad)
fisubr
mov
not
mov
outs
sbb
movs
lods
mov
pop
dec
js
out
ja
daa
inc
cmp
dec
idiv
mov
sub
and
leave
dec
in
sbb
mov
dec
sbb
jle
cmp
aad
fadd
mov
fisttp
pushf
adc
shr
sbb
out
push
fisubr
xchg
test
(bad)
data16
mov
sbb
or
push
adc
push
arpl
lock
xor
gs
repz
mov
lea
aad
jge
push
adc
es
push
pop
out
sahf
aam
jmp
mov
out
fwait
xor
sub
push
arpl
pop
mov
or
pushf
add
dec
in
imul
mov
mov
retf
sub
int3
jmp
mov
popf
and
mov
das
mov
mov
stos
or
or
ror
xlat
mov
out
cmp
(bad)
or
ja
pop
sbb
jl
cmp
jns
xor
inc
mov
adc
call
sbb
jno
cmp
sub
mov
fwait
int
imul
out
popf
arpl
mov
and
pop
push
cmp
xor
(bad)
jmp
fst
cmp
jns
xor
in
pop
cmp
sub
push
mov
pop
scas
add
ss
stos
xchg
stos
in
aaa
fadd
adc
fdiv
push
sub
mov
xchg
das
jmp
jo
out
aas
dec
inc
movs
push
xchg
mov
sub
ss
ret
fmul
jp
lods
in
pop
pushf
adc
aaa
sbb
fwait
stos
ds
ret
add
outs
pop
sbb
out
out
aas
in
pop
xor
ret
cmp
sub
cld
inc
lock
cmp
xor
mov
int3
mov
pop
loopne
cmp
ins
into
sbb
push
sbb
mov
stos
inc
sub
in
dec
test
mov
ficomp
adc
arpl
sub
sbb
xchg
add
cmp
and
pop
inc
sar
cmp
mov
(bad)
and
mov
xchg
xchg
mov
jge
pop
dec
test
rcl
mov
pop
int3
mov
hlt
inc
mov
cmp
jg
into
xlat
adc
cmps
inc
pusha
or
jl
inc
xchg
stos
jbe
push
pop
push
sbb
push
jae
push
adc
(bad)
or
rcr
xchg
adc
mov
cld
ret
fisubr
dec
sub
(bad)
in
(bad)
arpl
std
stos
push
sub
out
xor
xor
iret
aas
jne
fisub
sbb
fs
sub
sbb
aaa
movntq
aam
sub
pop
div
sub
outs
dec
pop
repnz
cld
add
popf
scas
sub
cmp
gs
stos
xor
cli
movs
mov
lds
inc
fcomp
dec
adc
out
cmp
xchg
mov
into
or
mov
mov
(bad)
xor
xor
js
sti
mov
sub
iret
push
mov
add
lea
dec
sbb
inc
or
sub
mov
lock
xchg
call
test
mov
lea
(bad)
out
fld
xor
scas
fucomip
dec
sub
int3
push
idiv
add
clc
es
setle
fmul
daa
push
shr
fsubr
lock
fisttp
mov
jle
ret
gs
push
enter
or
imul
cmp
xchg
fpatan
pop
jp
mov
and
and
imul
add
mov
mov
lahf
jb
ins
mov
icebp
push
mov
repnz
mov
mov
repz
jecxz
fidivr
(bad)
cmp
les
add
fisub
sbb
cmp
nop
and
mov
or
jo
cmps
rcr
retf
jbe
enter
jbe
dec
(bad)
adc
mov
lds
(bad)
pusha
inc
stc
sti
mov
inc
sbb
dec
and
(bad)
adc
cs
rcr
dec
pop
gs
(bad)
xchg
mov
aad
mov
mov
mov
(bad)
je
mov
jg
jno
mov
(bad)
cli
push
add
pusha
popf
les
pop
push
cmp
test
xor
test
adc
fisttp
pop
hlt
ins
jecxz
and
lea
loope
nop
adc
mov
mov
test
and
repz
sbb
icebp
lods
xor
add
sub
and
jge
cmp
mov
sub
adc
(bad)
xor
jo
cmp
and
pop
pusha
out
(bad)
cmp
out
rol
inc
push
out
jno
jae
mov
sub
outs
pop
shl
sahf
in
xchg
add
leave
out
ret
mov
sbb
das
or
or
add
mov
bound
mov
jmp
rcr
addr16
push
aas
lods
add
cmp
push
and
(bad)
cmc
fnsave
adc
data16
or
test
rcl
pop
jge
and
sahf
add
cmc
sub
(bad)
add
push
mov
bound
aam
call
cmp
dec
call
push
mov
cmp
inc
test
rcl
imul
pop
jns
test
es
xlat
call
add
mov
cmp
loop
push
xor
mov
retf
and
cmps
jae
imul
sub
xchg
mov
movs
push
cmps
out
retf
popa
int3
lea
fcomi
ror
repz
sub
mov
idiv
or
sub
jmp
adc
pop
cmp
sar
ins
xchg
(bad)
push
enter
arpl
mov
mov
mov
imul
cmc
sub
push
das
push
cmp
fstp
std
stos
(bad)
xchg
inc
xor
sbb
repnz
inc
and
in
mov
and
push
dec
pop
ret
stos
loop
and
fwait
lods
dec
lods
loop
cwde
mov
inc
push
cmps
cmp
sub
xchg
ficomp
sbb
inc
pop
cmp
test
mov
pop
movs
and
push
dec
dec
out
leave
test
mov
(bad)
jno
dec
pusha
repz
sub
jl
or
jmp
rcr
inc
xchg
push
mov
loopne
int
push
pusha
repz
and
mov
popf
add
push
cs
jl
shl
adc
mov
fadd
jo
int3
or
xor
repz
aaa
es
inc
pop
test
jg
rcr
retf
adc
pop
sti
pop
(bad)
jbe
mov
push
test
pop
and
add
jo
shl
mov
repz
inc
or
(bad)
imul
inc
or
repz
add
jecxz
lods
aas
cli
mov
sbb
mov
xor
out
popf
test
cmp
pop
mov
sbb
adc
sti
outs
lea
stos
adc
enter
daa
cli
sub
lods
or
idiv
in
jae
pop
aad
xor
cmp
pop
clc
in
mov
dec
sbb
cmc
inc
inc
sbb
and
xor
repnz
mov
movs
mov
ds
or
dec
in
test
nop
outs
pop
xchg
push
mov
int
stc
xchg
ins
arpl
fsubr
shl
adc
retf
or
sar
jle
add
push
jne
jl
mov
and
jl
or
jmp
mov
in
pop
push
or
mov
sbb
pop
cmps
jmp
jo
push
in
or
movs
sahf
jb
push
or
fisubr
and
push
cwde
push
inc
pop
inc
sbb
enter
xor
xor
aad
fcom
xchg
inc
pop
push
leave
push
pop
and
(bad)
cmp
lock
pop
mov
rcr
mov
mov
inc
shr
cmp
or
int3
call
xchg
clc
xor
lods
fisttp
lods
inc
push
aad
scas
sbb
xor
pop
sbb
xchg
jne
daa
dec
xor
mov
mov
in
xchg
imul
ja
mov
push
pop
fsubr
popf
arpl
(bad)
fiadd
inc
mov
cdq
mov
inc
dec
cld
int
imul
push
(bad)
jg
in
and
lahf
bound
add
sbb
jns
mov
xor
outs
xchg
movs
mov
inc
sar
xchg
pop
pop
std
hlt
dec
cmp
lods
pxor
fcom
xchg
(bad)
inc
jge
fadd
jo
jbe
popf
dec
clc
loop
sub
mov
cdq
pop
or
lds
lods
xor
pop
jbe
jge
jno
pop
jnp
shr
movs
xor
loope
mov
pop
(bad)
nop
rcr
stos
jno
ja
outs
popf
fiadd
ror
lds
xor
dec
cmp
add
sub
popa
test
call
lea
adc
stos
mov
mov
ficomp
xor
mov
xchg
test
inc
push
sti
push
jecxz
inc
inc
dec
dec
ret
es
add
fnstsw
arpl
test
sub
hlt
pusha
and
in
jl
xchg
sub
mov
pop
or
shl
ret
mov
cdq
dec
or
mov
sti
add
jle
dec
xchg
mov
arpl
add
fcom
mov
test
pop
cmp
jns
push
bound
mov
cmp
jp
iret
dec
push
sbb
rol
test
sbb
out
test
pop
clc
mov
scas
test
pcmpeqw
loop
adc
fst
jno
jecxz
lahf
mov
pop
inc
outs
xlat
fst
mov
mov
nop
aaa
jmp
sbb
pop
dec
mov
sahf
jb
stc
scas
call
sub
stos
pop
mov
dec
push
jl
or
jns
fadd
xchg
arpl
add
dec
mov
mov
xchg
dec
out
test
cmps
int
int3
unpckhps
lods
mov
fwait
clc
or
ret
pop
pusha
jno
in
xor
inc
mov
aad
inc
cmp
in
pop
adc
dec
(bad)
fimul
push
iret
dec
test
adc
jecxz
enter
lahf
test
icebp
outs
daa
or
(bad)
(bad)
out
push
in
pop
dec
mov
lods
loop
adc
into
int3
js
pusha
pop
push
xchg
cmps
setp
mov
cmps
test
cmc
cmp
xchg
xchg
mov
adc
push
or
fld1
clc
sbb
xchg
sbb
out
adc
mov
mov
push
popf
adc
lock
push
xchg
mov
sbb
fild
mov
das
inc
xor
cmp
lea
loop
cmp
scas
mov
aas
sub
adc
mov
mov
addr16
mov
into
(bad)
ja
sahf
add
shr
(bad)
jbe
push
pop
mov
sbb
sub
scas
aam
fild
cmp
cs
cmp
movs
out
popa
xor
sbb
fist
ror
(bad)
push
dec
jae
ins
xor
sti
imul
add
xor
outs
cli
cli
cvtps2pi
popf
popf
rol
out
loop
das
lea
sbb
jecxz
and
test
sub
xchg
jnp
jnp
dec
(bad)
pusha
xadd
jl
std
fcompp
rcr
adc
retf
sub
sub
and
dec
(bad)
mov
in
stos
lock
ja
push
and
jne
inc
jnp
gs
add
jbe
push
ret
cwde
cmc
mov
dec
xchg
jo
or
adc
jp
out
pop
push
std
rcr
sbb
sbb
sub
fnstsw
ins
or
cmp
stos
push
or
adc
adc
jge
gs
xor
mov
sub
push
xchg
fimul
sub
push
into
fs
xor
dec
cmps
pushf
das
test
bound
das
xor
mov
cwde
jne
xor
rcr
mov
sub
fdivr
adc
adc
sahf
and
jns
sbb
movs
aad
mov
cmc
dec
pop
push
sub
or
ret
adc
lds
xchg
rol
inc
or
fstp
or
mov
jecxz
push
retf
or
xor
test
add
adc
jns
ins
xor
jg
scas
cmp
add
fwait
cmp
fwait
ret
pop
in
mov
scas
add
adc
gs
data16
(bad)
test
mov
lahf
sbb
inc
rcr
adc
xchg
popa
and
iret
pop
dec
rcr
lods
or
jne
xchg
and
clc
or
(bad)
out
sahf
mov
mov
inc
sbb
jnp
and
cdq
popf
(bad)
dec
or
jbe
dec
movs
out
xchg
mov
push
mov
jmp
sti
pop
cmps
push
pop
in
push
push
push
push
(bad)
cmp
xor
xlat
xchg
cmc
sub
(bad)
call
adc
jno
or
and
inc
cmps
mov
mov
dec
in
(bad)
vmwrite
jns
add
mov
inc
add
sbb
loopne
shr
out
inc
sbb
push
daa
fld
jne
jmp
jnp
inc
repz
test
sub
(bad)
in
and
add
jge
in
call
inc
mov
add
jb
mov
pop
call
imul
xchg
repnz
in
add
dec
ins
mul
mov
jmp
int3
sahf
xor
(bad)
fimul
and
stc
mov
sahf
imul
fdivr
push
and
mov
sub
pop
and
jnp
repz
hlt
mov
hlt
retf
sub
jnp
or
pop
push
test
push
clc
scas
and
(bad)
loopne
sbb
std
push
mov
das
xor
mov
dec
pop
out
jns
xor
sub
add
sti
add
jle
adc
sub
int3
mov
mov
es
dec
pop
push
dec
pop
mov
pop
cmp
push
xchg
mov
test
push
rcr
mov
icebp
cmps
cmp
sti
es
lea
cs
pop
sub
mov
jno
lods
(bad)
xor
dec
repnz
cdq
xchg
cmps
fwait
cs
add
sbb
cwde
push
in
jo
push
rcl
sbb
std
ret
lahf
icebp
dec
pop
popa
call
shr
mov
es
sub
bnd
stc
stos
or
sbb
hlt
test
pop
and
sub
rol
dec
push
test
add
cld
les
pop
add
inc
daa
arpl
je
out
pusha
sub
inc
add
mov
pop
clc
fiadd
stos
mov
inc
sub
adc
cmc
or
inc
or
sbb
jnp
arpl
sbb
mov
adc
(bad)
mov
jb
push
stos
cmps
fs
inc
fsubr
shr
sub
push
movs
outs
adc
cmps
(bad)
dec
adc
imul
inc
push
jns
bound
aam
icebp
and
movs
mov
int3
pop
xor
add
and
push
call
push
dec
ins
jge
ja
inc
add
mov
ficomp
or
mov
adc
sahf
mov
sbb
sub
dec
push
fldl2t
xor
loope
push
icebp
cmp
xchg
in
stos
stos
mov
dec
adc
xor
fnstenv
pop
lods
cmps
push
pop
dec
xor
and
xchg
dec
inc
(bad)
test
mov
and
add
xlat
je
cmps
bound
clc
cmp
sar
jecxz
mov
or
jae
push
lds
loopne
icebp
(bad)
pop
int3
in
xlat
fisub
xchg
out
inc
pop
enter
enter
fidiv
jno
xor
test
fcomp
or
sbb
stos
dec
mov
scas
inc
pop
jnp
sub
pop
cmp
data16
test
cmps
inc
movs
scas
xlat
(bad)
je
xor
loop
jge
(bad)
aad
(bad)
pop
and
add
icebp
sub
mov
leave
jno
mov
hlt
pop
push
iret
lds
icebp
sbb
out
sbb
mov
dec
xchg
ja
cdq
out
jne
iret
jb
mov
jnp
sahf
xchg
cli
xor
aam
enter
pop
sub
pop
mov
adc
cld
(bad)
lods
xchg
ficomp
nop
mov
or
lods
pusha
arpl
sub
xor
inc
pop
sub
fwait
mov
and
lock
add
push
sub
(bad)
(bad)
das
mov
(bad)
mov
call
ja
jp
fwait
xor
sub
into
mov
sbb
sbb
dec
in
jo
adc
ds
and
lods
xchg
out
fild
mov
sbb
add
push
mov
daa
push
cmps
lea
jp
int
(bad)
sub
fisubr
repnz
sub
enter
pop
push
mov
push
std
outs
mov
mov
push
aam
movs
sub
pop
test
cdq
sub
ficom
push
in
imul
or
pop
ins
ja
je
pop
fisttp
mov
es
outs
mov
xor
jb
arpl
mov
dec
push
mov
inc
xor
cmp
push
cmp
pop
(bad)
(bad)
sub
push
pop
fild
scas
mov
push
bound
sbb
mov
retf
mov
jne
dec
popa
inc
dec
adc
dec
pop
add
mov
mov
xchg
sbb
or
daa
stos
lahf
jmp
pop
inc
jge
and
dec
push
xchg
sahf
sub
mov
loop
mov
test
push
jmp
out
jl
test
retf
xchg
ins
xchg
sar
mov
dec
fwait
inc
mov
cmp
movs
fisub
popf
repz
pop
pop
sub
push
int
sar
neg
jmp
nop
out
(bad)
(bad)
pop
adc
and
loop
mov
rcl
cs
out
outs
bound
inc
jle
or
les
iret
repnz
sbb
jb
ins
xor
scas
rcl
push
adc
sar
fwait
in
adc
xor
push
add
fs
or
add
xchg
pop
mov
cmp
xor
retf
mov
dec
into
jb
sbb
xchg
test
mov
xor
lods
aaa
imul
xlat
jl
call
mov
pop
pop
mov
jp
shl
push
cmp
push
adc
loop
sub
push
or
test
in
mov
and
adc
dec
out
add
int
dec
add
mov
lods
rol
mov
pop
je
push
mov
sub
aam
jae
add
imul
maskmovq
test
jae
push
push
mov
push
leave
inc
lds
(bad)
fiadd
retf
and
sahf
rcr
cwde
sub
ins
inc
repz
jbe
into
jns
jg
pop
adc
sbb
adc
cmp
mov
xor
shl
and
loop
stos
cli
leave
inc
pop
leave
xor
pop
mov
int
cmp
aam
jmp
push
stc
jae
add
xchg
push
pop
push
sbb
pop
lds
movs
cli
mov
push
or
push
loop
je
aam
mov
fmul
jb
xor
imul
push
out
xor
cmc
xchg
cmp
jge
test
adc
cld
scas
ss
hlt
push
retf
cmps
test
int3
dec
(bad)
and
cmp
add
cmovno
sbb
or
jns
inc
es
aas
mov
xlat
cmp
or
dec
cmc
xchg
xchg
xor
adc
mov
sbb
fnstcw
jnp
outs
xor
sub
test
cwde
jns
xor
pop
(bad)
not
shl
repnz
push
movs
ret
adc
or
mov
fnsave
fidiv
(bad)
fsub
pop
adc
jp
and
adc
jns
push
test
hlt
repnz
mov
xchg
pop
movs
test
xor
fisub
test
shl
aaa
mov
inc
add
xor
stos
rol
push
sbb
xchg
out
outs
sub
push
add
pop
cmp
inc
pop
sub
xor
enter
lock
icebp
mov
fdivr
mov
aas
xor
and
inc
mov
push
xor
and
dec
push
or
inc
mov
(bad)
aam
sbb
js
test
xlat
cmps
out
or
xchg
mov
pop
sub
mov
cmp
retf
stos
in
(bad)
ins
les
clc
mov
jmp
pop
sub
xchg
test
add
cmp
add
test
xor
xchg
mov
lods
mov
out
pop
mov
test
pop
shl
or
in
lods
or
dec
in
push
fidivr
call
in
mov
mov
dec
aam
adc
xchg
push
test
lahf
clc
or
aaa
(bad)
clc
push
mov
push
out
and
int3
add
push
or
imul
pop
sbb
neg
popf
(bad)
imul
clc
loopne
push
(bad)
cmp
movs
jmp
pop
in
in
sahf
outs
ror
scas
lock
js
in
in
push
fimul
cdq
in
fidiv
sar
push
mov
and
mov
cmp
mov
jmp
ficomp
mov
xchg
inc
inc
mov
int3
shl
mov
and
xlat
arpl
cmc
call
dec
jnp
ret
outs
(bad)
lods
(bad)
sti
popf
adc
sub
outs
cmp
in
cmp
inc
mov
mov
retf
xchg
lahf
lods
add
mov
mov
loop
out
les
aaa
sti
cmp
inc
sar
imul
mov
dec
pop
shufps
or
jge
mov
xchg
mov
adc
pop
sub
cmp
push
sar
xor
inc
dec
lea
push
pushw
pop
jno
push
adc
shl
nop
outs
test
adc
cmps
xchg
pop
pop
aaa
bound
pop
cmp
jg
push
adc
fldenv
push
inc
cmp
push
add
iret
push
adc
cmps
test
int
mov
call
dec
(bad)
dec
sahf
ja
mov
addr16
push
push
push
mov
jo
cs
push
popa
sbb
mul
inc
or
add
sbb
mov
jp
idiv
xor
in
ud1
pop
cmp
sbb
in
sti
call
or
xchg
mov
xchg
sub
lock
outs
pop
int
fild
sub
sub
das
not
sahf
int3
mov
cmp
shr
loop
dec
cmps
mov
hlt
pop
test
idiv
aaa
push
mov
add
sbb
push
dec
aam
bound
(bad)
in
xor
jnp
or
gs
aam
into
retf
pop
test
cs
sub
dec
loope
imul
cwde
repnz
pop
jl
mov
and
cmp
pop
scas
mov
push
sub
mov
test
(bad)
in
or
jo
mov
adc
shl
mov
cmps
add
aad
and
dec
jnp
jg
cmc
je
xchg
jmp
inc
adc
dec
jmp
dec
int3
std
sub
sbb
(bad)
int
pop
ds
cmp
imul
shl
mov
add
cmp
fwait
movs
jo
int3
xchg
test
or
or
jmp
dec
mov
mov
sub
pop
iret
push
sub
or
idiv
or
popf
pop
mov
pop
jmp
inc
addr16
or
sahf
pop
push
mov
les
and
add
dec
ds
or
out
mov
les
in
cli
nop
jge
in
pop
dec
out
cmp
clc
hlt
mov
xor
pusha
mov
arpl
das
nop
fadd
or
lock
dec
and
mov
fild
jae
mov
or
mov
mov
xor
dec
mov
out
jl
inc
(bad)
loope
or
xor
lahf
sub
fidiv
out
out
(bad)
push
and
nop
and
mov
jae
div
xchg
sbb
xor
loope
mov
push
cld
sbb
repnz
fsubr
sti
leave
sar
add
sbb
out
add
mov
mov
sbb
pop
mov
stc
jns
jmp
push
xchg
jge
int3
or
and
xor
inc
stos
sub
adc
pop
sub
leave
out
mov
xchg
std
imul
cdq
ss
sbb
idiv
dec
pop
fwait
inc
test
aad
test
xor
push
pop
push
dec
mov
aaa
cmp
sete
dec
into
out
scas
retf
aam
(bad)
sbb
lahf
addr16
jae
sub
dec
out
stos
pop
pop
fwait
or
mov
mov
or
cs
dec
jns
cs
add
fsub
loop
nop
inc
mov
sbb
pop
popf
mov
out
jns
imul
xchg
mov
scas
lea
std
mov
imul
mov
cmp
ror
pop
mov
xor
ret
retf
jne
pop
ret
repz
xor
sub
ins
inc
add
aam
mov
repnz
cmp
ja
pop
inc
call
jbe
sub
inc
stc
cmc
pop
push
pop
popf
fwait
lods
dec
ret
(bad)
out
js
xchg
xor
ds
fdivr
cmp
push
inc
stos
sub
dec
xor
movs
xchg
cmp
xor
rcr
nop
push
xchg
(bad)
cmc
mov
pop
cmps
shr
dec
sti
add
jmp
leave
xlat
stc
adc
mov
repnz
adc
mov
or
test
movs
fs
popf
jae
mov
popa
daa
mov
mov
retf
in
push
push
mov
xchg
pop
or
stc
cdq
add
xor
pop
in
retf
mov
loop
js
test
mov
xlat
push
enter
jne
jae
mov
jmp
mov
data16
mov
out
mov
dec
xor
mov
xchg
mov
and
cmp
jl
xor
cdq
mov
repnz
mov
aas
not
stos
pusha
sub
and
mov
ins
mov
cmc
mov
xor
shl
fist
sub
in
xor
pop
sbb
mov
aad
rol
fs
retf
jb
imul
movs
push
inc
or
inc
xchg
mov
retf
and
or
int3
xlat
mov
cmps
pop
add
xor
jnp
push
xor
jo
mov
pop
xor
add
mov
dec
out
test
sar
sahf
sar
popf
jae
push
sub
jp
leave
out
xchg
icebp
mov
pusha
gs
sub
push
rol
cmps
mov
test
fnstsw
dec
or
call
ss
fistp
loopne
pop
and
arpl
or
mov
mov
cdq
loope
push
jae
bsf
dec
ds
sbb
adc
mov
sub
rol
movs
add
pusha
push
dec
push
mov
pop
dec
adc
(bad)
jl
mov
stos
scas
push
or
(bad)
into
cmp
mov
out
test
adc
sbb
adc
out
xlat
or
pop
je
jmp
and
push
(bad)
shl
mov
js
in
ret
call
xor
push
adc
and
add
out
mov
loope
ret
bound
je
mov
xchg
mov
aam
movs
ret
sahf
ja
bound
rcr
mov
aam
jg
xor
pop
xlat
call
(bad)
mov
test
dec
and
not
sbb
mov
push
pop
pop
mov
loop
and
ins
fwait
xchg
or
sbb
fcom
pop
ficomp
iret
sub
cld
pushf
in
push
or
mov
add
or
fs
jmp
call
ja
loope
aam
sahf
add
(bad)
aad
push
fnstenv
add
sub
cmp
popf
jne
shl
add
jmp
mov
mov
loopne
jb
rol
xchg
mov
mov
mov
add
mov
or
sbb
loopne
xor
repnz
lods
or
mov
out
clc
int3
fnstcw
jne
lods
dec
xlat
mov
out
cwde
xchg
(bad)
push
sub
cmp
js
push
fistp
sub
cs
push
xchg
adc
lods
fucomp
es
jno
xchg
out
mov
(bad)
mov
ins
mov
dec
dec
jg
and
test
jae
xchg
nop
leave
sub
cmp
sbb
mov
sar
mov
loopne
sub
mov
or
xor
movs
xchg
jae
movs
jecxz
mov
ins
add
sar
and
mov
mov
fsubr
push
xchg
push
xor
jle
or
mov
aam
cmp
sub
scas
or
js
outs
jne
xor
shr
cmp
pop
sahf
(bad)
iret
and
shl
xlat
stc
rcl
mov
xor
and
movs
in
lock
push
mov
jecxz
bound
inc
sbb
jmp
push
pop
pop
push
push
popf
cmp
lock
ror
jmp
jp
sbb
lds
lahf
aad
dec
jb
push
pop
out
push
inc
gs
push
push
lods
loope
test
lds
xlat
test
js
in
xchg
fcomp
mov
inc
lods
mov
movs
mov
loope
les
or
sub
mov
adc
popf
cli
cdq
cmp
jne
inc
push
jg
sub
add
add
or
sbb
movs
nop
pusha
jbe
lea
xchg
popa
out
test
mov
adc
pop
xlat
fnstcw
jnp
adc
adc
jge
mov
idiv
pop
leave
add
inc
dec
bound
cmc
stc
lea
mov
in
cmp
inc
push
xchg
ins
or
push
(bad)
mov
mov
mov
clc
fdiv
and
imul
jnp
pop
inc
or
inc
fild
outs
sub
jmp
dec
test
imul
cmp
js
mov
mov
xchg
addr16
jp
mov
push
mov
mov
loopne
push
test
push
fnstenv
mov
movs
mov
call
sub
push
js
xor
and
leave
retf
inc
inc
or
mov
scas
in
arpl
enter
pop
and
jmp
jge
outs
cli
icebp
lods
dec
movs
and
mov
jmp
lahf
and
jp
jo
lods
jmp
xor
leave
add
(bad)
fidivr
or
inc
mov
outs
popa
and
push
sub
and
jmp
dec
xlat
lock
iret
sbb
(bad)
pushf
push
outs
ja
mov
mov
fwait
aad
cmp
lods
xchg
jb
add
mov
popa
fdiv
bswap
add
pusha
fmul
neg
hlt
sub
aas
mov
jns
mov
mov
jecxz
sub
lea
gs
(bad)
sbb
mov
push
inc
and
lds
lahf
scas
dec
xchg
mov
cmps
pop
ins
jmp
jmp
mov
scas
fld
pop
sub
sub
mov
jo
(bad)
loop
adc
xchg
aaa
xor
mov
mov
fmul
dec
ret
out
int
(bad)
pusha
popf
iret
(bad)
push
loopne
dec
popf
nop
pop
shl
(bad)
out
fucom
jmp
lds
jecxz
jmp
sub
pushf
bswap
push
rcl
rcr
dec
push
dec
sar
or
test
shl
retf
sti
gs
ins
iret
xor
movs
arpl
push
pop
fldenv
int3
add
adc
xchg
pushf
cmps
sub
(bad)
mov
pop
cli
sar
mov
jl
sahf
mov
repnz
adc
(bad)
cmps
inc
mov
in
jge
scas
cwde
and
cmp
push
xor
inc
inc
adc
sbb
or
fucomp
pusha
push
retf
jmp
data16
add
lahf
add
fwait
dec
repnz
repz
fild
lods
lahf
sar
out
dec
loop
fcomp
add
fldcw
call
and
or
fnsave
push
add
jmp
dec
jg
rcl
push
inc
jmp
gs
xchg
imul
xchg
stc
mov
mov
or
pop
outs
cmp
push
iret
mov
mov
stos
cli
xchg
push
jns
mov
mov
popa
and
jmp
mov
(bad)
push
neg
push
adc
xor
pop
iret
push
fistp
mov
xchg
sbb
stc
not
dec
ins
mov
(bad)
ficomp
mov
jmp
std
clc
mov
mov
(bad)
retf
lods
imul
mov
fisttp
scas
ret
pop
dec
sbb
call
mov
mov
ret
jno
js
mov
xchg
pop
ret
cmovb
sbb
aas
dec
int
loope
xor
idiv
adc
repnz
push
ins
mov
sti
pushf
xchg
dec
xor
jno
mov
dec
test
or
xchg
sbb
inc
lods
out
jns
xor
into
xor
xchg
icebp
enter
daa
lds
ins
sub
movs
pop
xor
outs
ins
pop
out
loope
or
xor
test
inc
(bad)
aaa
ror
lea
ins
(bad)
retf
test
mov
mov
scas
aad
mov
cdq
add
hlt
iret
js
push
cld
lds
adc
dec
mov
(bad)
and
fcomp
add
and
fistp
ss
and
adc
add
fld
mov
mov
es
mov
stos
mov
je
js
inc
mov
push
xchg
or
xchg
test
adc
adc
fs
call
(bad)
iret
sbb
and
add
movs
xlat
pop
sub
xor
stos
(bad)
(bad)
jmp
mov
inc
jbe
ror
adc
dec
stc
pop
xor
cmp
inc
(bad)
push
ror
fisttp
cld
scas
or
pop
shr
aaa
xor
in
enter
cmp
pop
shl
aaa
pop
mov
xchg
adc
jb
bswap
and
inc
daa
pop
lods
mov
cmc
test
jge
cmp
cmp
sub
cdq
pop
das
jge
je
cmps
cmp
popa
push
(bad)
ficomp
jne
das
clc
lahf
fdivp
out
imul
js
jmp
xchg
xchg
dec
loop
inc
ror
loopne
scas
mov
add
iret
sti
aam
dec
rcl
mov
xor
aad
sub
add
mov
call
push
outs
inc
mov
jb
icebp
shl
out
mov
jmp
stos
test
popa
loope
sub
or
or
cmp
shl
call
(bad)
jmp
mov
sub
jae
jg
gs
call
mov
addr16
adc
or
stos
mov
xor
repz
ret
mov
retf
dec
mov
ins
movs
pop
add
push
dec
cmp
(bad)
xchg
ret
pop
mov
movs
das
pop
daa
test
pop
adc
xor
mov
mov
cmp
pop
xchg
or
mov
scas
jbe
fcos
cdq
pop
dec
mov
xchg
retf
or
sbb
or
xchg
or
jmp
(bad)
sbb
scas
lods
xor
cld
imul
dec
xchg
imul
(bad)
xor
scas
lahf
dec
jmp
cmp
push
add
mov
ds
emms
push
cmp
test
jge
loope
push
inc
push
rol
cli
jmp
jbe
lds
push
sub
xchg
js
sbb
lds
mov
or
mov
sub
jnp
cmp
(bad)
pop
loop
popf
popa
or
adc
sub
push
ja
add
shl
icebp
into
call
mov
xchg
enter
test
movs
adc
push
leave
rcl
ret
jl
cwde
out
pop
mov
cld
fnstsw
imul
sbb
stos
leave
mov
pop
adc
xor
xchg
std
popf
pop
xchg
pop
sar
mov
test
pop
repz
lea
jle
fwait
addr16
xchg
fs
cmc
mov
arpl
jecxz
xchg
das
or
out
(bad)
ins
sahf
js
or
sbb
imul
inc
xor
(bad)
mov
dec
and
jmp
test
jno
cli
xchg
sbb
or
sub
push
sbb
and
xchg
jns
addr16
push
pop
jae
add
aaa
jbe
neg
pop
and
clc
icebp
mov
adc
jmp
push
pusha
jns
xor
mov
aaa
enter
lods
xor
std
jl
or
stc
xor
mov
(bad)
dec
jmp
(bad)
ins
aaa
or
gs
call
jbe
je
sbb
test
out
jae
xlat
aaa
or
dec
arpl
pop
push
loope
pop
mov
fwait
and
fs
jmp
sbb
xor
sahf
(bad)
mov
cli
aas
aad
ret
int3
or
and
daa
adc
into
jne
ins
repnz
in
or
push
inc
push
mov
dec
(bad)
xlat
fdivrp
xchg
scas
jbe
mov
inc
jae
dec
scas
lods
xlat
jnp
out
nop
mov
push
out
int3
inc
data16
gs
pop
adc
(bad)
stos
mov
xchg
outs
aam
sbb
dec
call
pop
ror
and
aas
gs
mov
dec
pusha
mov
int
fld
add
mov
imul
dec
nop
cmp
(bad)
lock
inc
(bad)
cmp
cwde
dec
adc
pop
pop
scas
aad
pushf
ins
push
movs
shr
imul
sub
leave
scas
add
add
nop
inc
rcr
popf
jle
push
mov
popa
xlat
ds
inc
xor
sbb
arpl
sub
ds
adc
and
pop
push
adc
mov
mov
inc
shl
mov
cwde
popa
dec
xchg
xchg
inc
push
imul
jp
mov
iret
aas
push
lods
aad
out
fst
pop
rol
mov
jbe
adc
ds
sbb
popf
jmp
jns
and
mov
cmps
jo
adc
push
cmp
jge
loope
(bad)
stos
xchg
mov
ins
rol
iret
xor
and
fist
stc
mov
mov
(bad)
div
unpcklps
call
imul
aaa
mov
xchg
pop
dec
jl
jae
push
and
test
btc
pop
dec
fs
xlat
in
ror
fdiv
jae
or
mov
jecxz
mov
cwde
retf
lahf
xchg
adc
arpl
or
xchg
jo
sbb
jbe
add
push
sbb
mov
mov
mov
mov
rol
and
sbb
xchg
ja
xchg
mov
hlt
outs
loop
xchg
dec
loope
les
inc
push
jbe
aas
ds
push
sbb
in
jbe
mov
rol
inc
xchg
into
and
int
jne
dec
(bad)
nop
fild
mov
iret
inc
jmp
xchg
movs
test
lods
imul
sbb
clc
and
fist
inc
push
out
sub
pop
mov
inc
(bad)
xchg
mov
dec
adc
inc
jle
add
popf
dec
sub
not
pop
movs
pop
leave
push
mov
mov
jl
(bad)
repz
call
aad
sub
or
jle
add
data16
in
outs
cmc
mov
retf
and
xchg
fcomp
xchg
dec
daa
cmp
mul
(bad)
xor
jg
mov
aas
xchg
dec
in
xchg
jecxz
push
xor
dec
call
cmp
dec
fld
pop
push
mov
div
lods
(bad)
adc
jl
inc
test
retf
fsub
and
in
pop
call
shl
jg
imul
cmp
sub
xor
dec
dec
nop
fldenv
out
lods
imul
ja
push
mov
outs
lock
or
sub
adc
icebp
dec
outs
es
xor
push
and
dec
adc
aad
jno
mov
xor
shl
outs
add
or
scas
sbb
mov
js
fdivr
test
and
push
scas
pop
pop
pop
dec
imul
mov
sar
aad
sti
jp
xchg
in
jbe
aaa
shl
dec
fwait
ret
adc
retf
stos
fst
cwde
out
(bad)
repz
mov
fcomip
jg
es
ret
xor
hlt
lods
test
xchg
sbb
jl
jle
out
fnstcw
inc
sub
call
pop
(bad)
xor
(bad)
ja
sub
xor
popa
ds
cld
push
ins
sub
mov
sar
pop
jne
(bad)
idiv
ret
mov
xchg
(bad)
push
int
sbb
sub
popf
in
jecxz
dec
out
add
je
rol
push
out
sbb
mov
xchg
cmps
adc
(bad)
or
mov
sub
push
fcom
notrack
jmp
xchg
sbb
adc
fucomp
fbld
or
sbb
sbb
stos
mul
sbb
jmp
dec
inc
sti
and
pop
pushf
mov
aam
push
or
push
pop
fistp
popf
mov
aas
ins
xor
adc
pop
inc
pop
add
mov
sub
adc
sti
pop
ja
fwait
arpl
sahf
mov
push
mov
mov
shl
outs
jo
inc
popa
adc
pop
mov
out
test
cmps
sub
cmc
ret
pusha
mov
jmp
sub
inc
arpl
mul
and
fs
rol
or
pop
mov
inc
addr16
shr
cmp
lock
cli
movs
mov
mov
mov
adc
leave
cmp
dec
inc
or
js
dec
jae
mov
scas
mov
and
scas
repz
push
sbb
cmps
jnp
pop
mov
adc
jnp
out
popa
mov
jno
stc
jae
fisttp
jmp
and
fdivrp
adc
jns
(bad)
xor
sbb
add
and
ja
cld
sahf
jle
cwde
in
cwde
add
daa
cld
sub
repnz
jl
fld
(bad)
mov
cmp
dec
aam
mov
push
repz
int
inc
mov
dec
in
pop
adc
arpl
add
movs
lods
int
mov
xchg
sbb
jae
jmp
cmp
(bad)
jecxz
sbb
lods
sub
add
fcmove
pop
(bad)
dec
clc
inc
rol
mov
mov
wrmsr
loopne
shl
test
sbb
add
xlat
addr16
jle
mov
test
xor
mov
or
or
and
les
outs
sti
push
aad
adc
out
pop
rcl
push
(bad)
xchg
fcom
mov
pusha
xchg
(bad)
sub
aad
ror
outs
into
shl
add
inc
pop
shl
push
cmp
jns
and
push
push
test
movs
test
outs
lea
or
(bad)
cdq
pop
xor
fsub
rcl
bound
or
and
pop
mov
addr16
in
pop
jne
fild
jb
enter
jno
in
or
(bad)
fadd
jmp
es
jmp
popf
dec
fcom
popa
jg
mov
sub
test
in
hlt
out
hlt
sar
push
clc
popa
pop
mov
cmp
ins
xlat
cdq
fcmovne
mov
lods
loop
(bad)
push
addr16
ja
jb
adc
pop
inc
lock
jbe
push
sbb
pusha
daa
scas
inc
mov
js
cli
stos
aad
scas
mov
adc
ret
sbb
push
call
fsubr
mov
or
pushf
mov
mov
enter
xor
in
outs
push
mov
and
xchg
xchg
loop
jle
adc
inc
xchg
xchg
mov
sbb
pcmpeqd
out
xchg
mov
stc
ret
sbb
in
mov
mov
mov
jns
xchg
into
out
in
jo
jbe
(bad)
ins
push
adc
cmp
sbb
push
mov
cmps
in
or
push
mov
nop
in
data16
sub
mov
cmps
jp
add
jle
mov
(bad)
adc
mov
nop
iret
mov
jge
les
mov
inc
(bad)
(bad)
in
jmp
hlt
pushf
xchg
sahf
pop
xchg
sbb
push
fiadd
mov
xor
fnstsw
xlat
mov
in
inc
ins
xchg
addr16
dec
xchg
push
push
mov
or
dec
cmc
cmc
inc
daa
xchg
mov
mov
arpl
(bad)
aas
popa
add
xchg
out
sbb
into
push
jno
sub
xchg
sub
mov
jno
inc
pop
mov
cmp
in
sub
outs
mov
ror
loope
pop
inc
sbb
mov
dec
pop
pop
sub
cmp
aaa
add
mov
fnstcw
int
mov
fwait
jl
sub
dec
stc
out
mov
mov
fwait
call
jge
aas
and
cli
aaa
ffreep
sahf
mov
in
adc
xchg
mov
movs
sbb
(bad)
outs
sub
mov
sbb
nop
and
imul
jg
test
xor
fstp
adc
xchg
imul
dec
push
and
es
sbb
in
ror
sub
push
scas
bound
pop
lea
mov
lea
imul
leave
addr16
jecxz
push
call
adc
stos
push
xor
xlat
ins
ins
push
xchg
loope
pop
daa
fcom
dec
jecxz
dec
int
pop
cmp
pop
movs
ja
add
int
fwait
xchg
jne
xchg
sbb
enter
dec
call
xchg
sbb
sbb
adc
clc
mov
mov
mov
jecxz
jnp
call
test
int
(bad)
dec
gs
push
fstp
pop
les
fld
cwde
cmp
mov
mov
inc
jnp
add
in
loop
ss
(bad)
ficom
retf
retf
inc
sbb
and
push
add
fnstcw
xchg
xor
enter
lock
cmc
aam
popf
ja
or
mov
inc
into
sub
out
cli
adc
dec
stos
or
fld
in
loop
and
and
bound
pop
stc
add
sub
retf
jecxz
sbb
fisttp
les
test
lods
or
add
rcr
sbb
add
sbb
push
fisub
in
mov
scas
pop
push
mov
xor
add
mov
or
push
xor
outs
dec
xchg
cmp
ss
jb
repnz
jmp
in
xlat
add
jno
icebp
loop
jae
push
cld
imul
inc
rcl
push
push
adc
pop
out
sub
adc
sbb
push
retf
jp
fisub
(bad)
pop
mov
loope
test
or
or
jb
repnz
push
outs
xchg
push
cmps
mov
jo
pop
push
add
mov
push
push
(bad)
jbe
fcmovu
cli
mov
pop
les
(bad)
lahf
mov
loope
cmp
retf
aam
mov
scas
mov
icebp
pop
dec
stos
push
jns
stos
fdiv
repz
sbb
cwde
fstp
js
xchg
lods
xor
mov
mov
lods
in
mov
and
inc
push
pop
cmp
data16
mov
inc
xchg
ins
fscale
aam
jg
je
or
(bad)
mov
xchg
stos
jnp
inc
repz
pop
fwait
lock
leave
or
xchg
nop
(bad)
xor
inc
and
xor
movs
push
lahf
(bad)
repnz
cwde
xchg
dec
mov
into
jae
fndisi(8087
xchg
in
rol
xchg
dec
test
adc
adc
jo
pop
mov
xor
mov
les
cmp
icebp
mov
shr
xchg
fnstenv
call
pop
inc
or
lahf
into
push
out
inc
neg
mov
retf
jne
or
adc
cmp
aaa
mov
stos
pop
out
cmp
mov
shr
movs
push
clc
mov
and
dec
and
bound
icebp
jge
js
cmp
out
inc
lods
pusha
xchg
test
es
arpl
aam
pop
dec
mov
outs
inc
in
rcl
pop
mov
arpl
push
lahf
push
stos
adc
cmp
mov
(bad)
mov
xor
mov
(bad)
fidivr
mov
sub
adc
retf
and
push
and
rol
loopne
test
and
mov
call
xor
and
cs
xchg
rcr
shl
shl
push
inc
mov
inc
into
inc
ret
int3
xchg
rol
mov
and
out
pop
xchg
popa
loope
inc
pop
cmps
out
dec
push
test
ja
shl
and
out
es
ret
nop
ins
dec
scas
punpcklbw
popa
pop
jp
call
retf
int
adc
and
mov
outs
mov
push
mov
cmp
pop
mov
icebp
jns
mov
adc
daa
int
bound
xchg
ss
sub
ret
loop
sub
push
push
sbb
add
jae
jl
sub
pop
mov
pop
mov
jno
mov
push
sbb
lds
lock
mov
jge
in
sub
mov
or
nop
and
mov
std
pop
sti
fs
aam
je
aam
(bad)
adc
push
pop
rcr
jno
arpl
les
leave
ds
xor
xor
retf
pop
int3
mov
sbb
adc
xchg
cmc
xchg
add
nop
sub
loopne
ret
add
(bad)
ret
cmps
stos
cs
dec
call
ror
cmp
stc
aam
dec
fcomi
(bad)
stos
dec
dec
rcr
adc
add
mov
xor
and
or
jp
push
xchg
adc
test
cli
rol
sub
mov
std
xor
add
test
enter
out
cld
mov
int
mov
and
cmp
hlt
cmp
movs
mov
(bad)
fidivr
out
repnz
pop
dec
fimul
js
call
stos
or
imul
cmp
or
xor
into
inc
push
adc
lahf
xor
aad
aaa
mov
popa
mov
push
gs
fmul
repnz
in
ss
cli
ja
out
dec
fld
jns
js
add
mov
push
mov
int3
or
mov
in
push
sub
add
xlat
and
rcl
push
out
pop
sub
scas
cmp
ret
xor
sbb
aaa
inc
mov
inc
adc
in
test
jle
inc
fsub
or
popa
movs
mov
fs
push
mov
mov
aas
(bad)
pop
js
adc
fisttp
or
in
jnp
jecxz
jno
jecxz
popf
push
add
mov
inc
(bad)
dec
xor
xchg
(bad)
cmp
mov
outs
retf
mov
ds
push
call
shl
dec
xchg
scas
je
or
stos
adc
out
mov
arpl
mov
shr
inc
fmul
cmp
imul
pop
dec
les
or
mov
movs
mov
inc
jb
xchg
scas
xor
cmp
repz
mov
add
pop
adc
aas
add
loop
cmp
nop
cmps
mov
in
dec
cmp
mov
inc
add
clc
jle
push
inc
mov
ret
pop
inc
aas
and
or
bound
mov
loope
xchg
ror
push
push
shl
jecxz
arpl
popa
fisub
jbe
loopne
push
cmp
daa
fs
dec
push
add
clc
adc
daa
cdq
sar
mov
outs
int
add
sbb
and
sahf
pop
pop
movs
enter
push
mov
mov
(bad)
out
mul
mov
push
jl
or
mul
loop
cmp
dec
into
dec
(bad)
sar
rcl
ficom
mov
pop
sub
push
jno
and
or
scas
ret
pop
pop
adc
adc
push
inc
sbb
(bad)
push
aas
inc
retf
jge
xchg
test
rcl
sub
das
cmps
pushf
mov
pop
pop
das
std
into
dec
test
out
je
jmp
imul
rcr
xor
cmp
mov
add
sub
fwait
pop
and
xchg
rcr
test
(bad)
js
aas
xor
mov
mov
sbb
fmul
sbb
dec
dec
inc
nop
(bad)
lods
push
(bad)
mov
cli
push
dec
bound
pop
push
xchg
clc
jae
jmp
rcl
xor
stos
or
(bad)
es
inc
addr16
in
and
aad
pop
imul
cmp
fwait
lods
in
pop
int
cmp
adc
stos
dec
xor
push
lock
cmps
push
mov
mov
mov
and
push
aas
or
cli
jge
dec
rol
stc
data16
into
sbb
adc
xor
shr
xor
add
or
and
mov
inc
jmp
adc
jno
mov
stos
xor
data16
sbb
pusha
icebp
mov
(bad)
add
add
jg
push
xchg
sub
outs
xor
mov
nop
jmp
mov
xchg
inc
das
hlt
inc
pop
sbb
or
mov
(bad)
es
xchg
out
adc
pop
and
call
hlt
fimul
not
push
pop
jne
repz
and
cmp
std
cdq
pop
ja
adc
enter
out
mov
xchg
push
xchg
scas
cmps
into
and
cmp
mov
inc
push
call
rcr
test
xor
jmp
sar
xchg
popa
xchg
repz
xor
and
sar
pop
mov
mov
sahf
pop
in
cdq
inc
xchg
je
ja
mov
shl
push
push
les
inc
xchg
sub
mov
fild
pop
push
(bad)
out
push
adc
jl
scas
loop
test
cmp
push
mov
inc
and
mov
(bad)
rol
test
ss
ss
mov
jb
inc
nop
pop
jmp
mov
popf
fwait
cwd
adc
scas
ja
mov
ins
movs
mov
shl
jg
cmp
mov
push
mov
outs
sahf
xor
lods
inc
jo
jge
pop
mov
dec
sub
push
(bad)
xchg
dec
xchg
push
fild
shr
gs
retf
cmc
pop
lods
pop
outs
and
sub
adc
test
aad
(bad)
jl
sbb
sub
(bad)
xchg
pop
lahf
xchg
cmp
adc
and
jne
cmp
sbb
clc
lahf
sub
pop
jl
mov
in
adc
rcr
adc
xor
mov
jecxz
call
cmp
adc
mov
and
dec
cdq
cmp
cdq
sub
fnstcw
dec
fadd
mov
fsave
pop
out
fwait
addr16
js
pop
cmp
fwait
into
xor
or
fistp
cdq
ret
fstsw
aaa
stc
mov
outs
ret
ins
pushf
enter
pop
test
fs
mov
enter
pop
imul
neg
adc
add
mov
ja
jae
inc
add
in
xchg
fs
loop
add
or
xchg
ins
js
jmp
into
(bad)
jmp
add
add
cmps
inc
or
pop
test
mov
pop
jge
jg
or
out
xchg
addr16
mov
mov
mov
add
jmp
dec
pop
push
sar
ret
wbinvd
or
or
leave
leave
sub
mul
int
arpl
cs
cld
mov
cwde
cmp
mov
ds
push
test
mov
inc
push
rcl
xor
loopne
sbb
out
fcomp
sahf
imul
jg
dec
cwde
xor
sbb
ja
test
loope
mov
pop
sbb
inc
jnp
cmp
ins
sbb
mov
movs
pop
lods
aam
dec
sub
imul
mov
sbb
pop
pop
sahf
adc
pushf
cdq
jle
xchg
xor
retf
sub
lods
fld
push
(bad)
in
out
shl
int
cmp
adc
iret
icebp
fldenv
loope
jne
int
dec
mov
push
ins
inc
cmp
push
in
ja
leave
js
sbb
or
scas
inc
cld
ins
int3
dec
mov
dec
jnp
xchg
dec
mov
les
test
xchg
out
jo
rcr
ret
sbb
xor
push
and
lods
cwde
adc
call
cmovns
rcr
jge
and
sub
cmc
jg
jp
loopne
daa
lock
jle
in
fcom
inc
shl
jno
adc
xor
mov
(bad)
jp
jb
les
cmp
or
xor
xor
sub
add
fcomp
sbb
in
mov
dec
icebp
jle
pop
lahf
xchg
xor
fist
enter
outs
inc
dec
push
into
jmp
(bad)
repz
lds
sub
push
or
outs
dec
mov
pop
push
hlt
mov
pushf
mov
xor
cmps
stos
dec
iret
cwde
shr
cmp
pop
(bad)
mov
jge
mov
dec
loop
xor
cmp
rcr
xchg
(bad)
aas
popa
int
(bad)
jmp
movs
adc
dec
lahf
fistp
repz
lods
or
inc
outs
cdq
or
mov
adc
xchg
fiadd
int
rcl
jp
test
adc
mov
mov
inc
mov
iret
aaa
adc
mov
mov
sahf
mov
xor
pop
pop
das
test
fldenv
ret
fisttp
pop
pop
add
cdq
xor
out
mov
mov
mov
sub
mov
cli
inc
adc
dec
stos
jmp
stos
add
fwait
lea
add
mov
lds
jecxz
adc
jns
in
cwde
or
adc
pushf
ss
jmp
cmp
daa
push
inc
cmpps
dec
cmp
push
icebp
pcmpeqb
retf
xchg
cmp
add
mov
add
pushf
adc
ret
sbb
push
adc
sti
jb
cmc
cmp
push
iret
or
lods
mov
dec
pop
out
sbb
mov
jle
sub
dec
jmp
faddp
retf
xor
loopne
push
cmps
sub
out
jb
iret
jge
cmps
jo
sbb
add
shl
retf
mov
mov
adc
pop
in
xchg
sbb
lea
loopne
inc
mov
inc
stos
add
xor
popf
mov
inc
dec
mov
mov
iret
adc
xchg
push
gs
jge
dec
nop
xchg
mov
jl
add
pop
mov
sbb
dec
adc
shl
sub
jp
dec
mov
or
aas
cld
adc
push
mov
cmp
sub
out
scas
jnp
mov
(bad)
xor
push
shr
fs
fcmovnu
jp
stc
cmc
mov
mov
mov
cmp
leave
adc
push
pop
loop
mov
iret
push
mov
pushf
jns
lds
call
inc
test
mov
pop
mov
mov
sbb
pop
in
pop
push
sub
in
dec
push
movs
inc
pop
cmps
xchg
fcmove
pop
adc
xchg
jo
jb
dec
mov
jmp
push
jecxz
xor
inc
les
aaa
and
pop
or
int3
push
push
sbb
pop
aas
mov
adc
dec
call
mov
inc
cmps
data16
xchg
sqrtps
pop
imul
push
loop
lods
in
inc
pop
and
cmp
cdq
cmp
dec
retf
pop
xor
nop
push
push
les
adc
imul
cwde
fisttp
xor
and
js
xchg
cdq
scas
adc
test
fs
xchg
inc
repz
jno
mov
rcr
test
std
aaa
mov
nop
aam
movs
inc
in
ret
push
test
js
mov
push
scas
xchg
and
push
sbb
inc
or
cmp
mov
sub
aam
ss
cli
leave
call
inc
mov
xor
movs
adc
inc
stc
in
aas
and
xor
add
movs
sbb
imul
mov
sub
test
cwde
sub
(bad)
adc
xchg
cdq
aas
inc
cmp
lods
cdq
jnp
(bad)
push
movs
add
mov
add
hlt
jo
mov
dec
xor
stos
mov
jle
sbb
sbb
adc
sub
scas
shr
pop
push
out
pop
pusha
dec
(bad)
test
jns
mov
pop
dec
mov
lahf
fcomi
add
div
dec
or
es
sbb
pop
loope
imul
mov
loopne
mov
fbld
fnstsw
pop
mov
clc
idiv
xlat
clc
cmps
leave
movs
mov
shl
adc
cmps
mov
out
dec
int3
pop
pop
movs
cld
in
cmps
inc
stos
cli
call
mul
nop
mov
xchg
cmp
push
mov
jb
add
aam
comiss
xor
in
inc
data16
je
mov
cs
aad
je
dec
xor
dec
push
xchg
sar
adc
fdivp
xor
pop
or
sbb
cmp
adc
hlt
das
push
add
fld
add
mov
aad
sti
inc
inc
add
stos
out
push
rcr
and
xor
cmps
dec
scas
cs
pop
add
push
dec
sbb
mov
shl
call
daa
or
cmp
pop
mov
xor
iret
(bad)
(bad)
mov
cmps
mov
fstp
ss
fwait
or
mov
jns
dec
out
sub
inc
mov
and
verw
ins
sbb
retf
sahf
sub
(bad)
das
mov
mov
xchg
cmc
pop
(bad)
rol
dec
cs
sub
sub
jecxz
lds
sub
test
mov
jl
mov
das
mov
out
sbb
dec
mov
inc
cmp
pop
aad
nop
xchg
jg
sub
and
xor
pusha
sbb
push
stos
bound
ficom
in
aad
sub
jmp
cmps
or
ss
cmps
push
pop
cli
aad
jmp
dec
pop
inc
inc
dec
dec
dec
cmp
mov
mov
or
popa
aam
mov
sti
daa
add
push
pop
fidiv
xor
je
addr16
shl
inc
push
cmp
xor
xchg
or
cmp
dec
std
jg
push
aas
add
push
pusha
or
ror
push
push
lods
jae
dec
(bad)
icebp
lahf
imul
jl
scas
mov
jne
pavgb
xchg
movs
mov
mov
or
and
lds
dec
into
bound
ja
inc
arpl
xchg
xchg
mov
aas
jae
out
ja
or
xchg
mov
cmp
mov
xor
pop
pop
shl
mov
or
push
dec
test
bound
in
imul
lds
xor
jmp
xchg
mov
(bad)
out
je
mov
mov
popf
xchg
fld
es
and
std
movs
rcr
mov
adc
pop
mov
std
out
stos
inc
pop
xor
(bad)
cwde
sub
(bad)
or
int3
adc
push
push
fbld
mov
mov
aaa
mov
pushf
xor
(bad)
pop
cmp
inc
idiv
sub
push
xchg
adc
mov
aaa
es
in
fild
add
add
sbb
adc
rcl
(bad)
(bad)
inc
jo
scas
mov
retf
test
mov
mov
aam
jbe
add
in
clc
jno
icebp
call
jo
pop
push
neg
mov
in
cmp
jno
adc
test
clc
xchg
push
rol
jl
add
mov
mov
fdiv
fchs
dec
sbb
cs
add
leave
add
jmp
imul
mov
dec
int3
lea
sar
fwait
sbb
mov
push
shr
xchg
jmp
loopne
dec
les
mov
sbb
outs
adc
push
(bad)
imul
xchg
lock
sbb
repnz
in
adc
arpl
aam
out
loopne
aaa
pop
cmps
fistp
fmul
inc
xchg
mov
arpl
xor
adc
rol
das
hlt
adc
jmp
iret
cbw
pop
push
lock
and
mov
sahf
jg
cmc
jle
jb
cmp
xchg
in
cli
dec
lea
jb
jmp
ins
sbb
outs
arpl
stos
pop
iret
sub
sbb
add
sbb
jle
pop
push
(bad)
sub
ja
cmp
mov
add
or
xchg
xlat
shl
fistp
fcmovb
test
cwde
xor
push
ret
mov
mov
add
sub
adc
inc
mov
in
aam
aaa
mov
xchg
jnp
sub
xchg
add
(bad)
aas
bound
mov
and
dec
rcl
inc
shr
mov
cld
outs
retf
dec
xor
stos
add
ins
xchg
popa
cmp
mov
xchg
(bad)
bound
dec
xchg
dec
adc
xchg
ret
cmps
cwde
or
mov
cmp
sub
enter
out
out
cmp
pushf
ins
outs
shl
xor
mov
pop
pop
cmp
cdq
das
push
mov
bound
sbb
pushf
sub
cmps
inc
ror
jno
mov
iret
repz
pop
shr
sahf
pop
es
xor
sbb
jbe
cmc
and
pop
jnp
xchg
out
idiv
dec
addr16
add
enter
data16
test
xor
icebp
rol
xchg
xchg
mov
push
jmp
cmp
aas
pop
mov
stos
sbb
xor
push
and
or
jb
jecxz
add
enter
dec
nop
mov
cmc
adc
jae
cmp
in
mov
lahf
(bad)
movs
pusha
dec
jno
lahf
adc
dec
jecxz
push
arpl
retf
inc
ins
vrsqrtss
dec
lods
jl
gs
mov
sbb
sub
inc
aam
cmps
cld
dec
jb
mov
push
(bad)
int3
jo
xor
mov
cmp
inc
or
mov
fcomp
fimul
pusha
aas
mov
mov
push
leave
dec
dec
adc
ss
mov
ins
fistp
pop
xchg
sbb
push
jnp
pop
add
(bad)
jle
sar
pop
leave
cdq
bound
and
cwde
adc
pop
sbb
add
sub
cmp
neg
inc
sub
push
add
mov
hlt
mov
mov
mov
bound
out
inc
out
das
push
and
outs
jnp
pop
in
sub
aad
dec
and
call
cs
popa
inc
(bad)
inc
jmp
push
imul
call
jmp
test
js
mov
jno
(bad)
nop
cs
pop
jle
mov
push
dec
inc
cmc
gs
xchg
push
add
push
push
mov
jmp
clc
out
adc
jmp
enter
call
xchg
fst
xlat
daa
out
ret
push
stos
or
inc
xor
scas
data16
xor
mov
xchg
or
pop
add
sbb
inc
pop
dec
test
nop
retf
pop
mov
int3
lods
mov
(bad)
(bad)
pop
inc
fild
pushf
lds
repz
ja
or
sub
call
aaa
dec
push
cmc
pop
ss
(bad)
ins
xlat
imul
dec
or
sbb
xchg
(bad)
xor
lds
pop
pop
pop
aas
mov
inc
jnp
jmp
in
xchg
in
fcomp
icebp
sti
mov
xor
mov
add
loope
test
lods
out
outs
mov
daa
out
dec
pop
cmps
sub
fs
and
xor
push
std
sbb
pop
jne
mov
sub
hlt
cmps
xor
jne
sbb
out
ja
or
ret
(bad)
mov
xlat
mov
in
pop
adc
cmp
or
enter
and
call
cmc
xor
mov
mov
mov
je
imul
cmp
pop
leave
mov
das
shr
(bad)
or
and
test
jp
and
xchg
mov
inc
lock
fs
mov
mov
mov
cmp
fldcw
adc
mov
lods
cld
cwde
push
mov
adc
das
jp
jae
(bad)
jecxz
mov
cmovae
sbb
adc
stos
mov
xor
gs
adc
and
mov
jg
cmp
in
push
xor
push
retf
inc
repnz
push
jo
cdq
xchg
add
xchg
shl
(bad)
out
add
(bad)
cmps
cmp
leave
jb
jge
xor
cmp
and
pop
adc
dec
fisttp
mov
mov
adc
inc
in
pop
enter
and
addr16
inc
inc
jmp
in
rcl
xor
push
mov
retf
loopne
aad
inc
jne
and
loop
das
into
push
outs
mov
jbe
mov
pop
ror
dec
jge
mov
stos
sub
xchg
dec
fimul
fld
sbb
jecxz
clc
imul
jg
fst
js
or
mov
push
jl
adc
mov
mov
dec
xchg
jmp
fcom
xchg
ins
mov
mul
lods
cs
mov
sbb
(bad)
xor
jmp
out
dec
nop
stos
sbb
loop
scas
ins
push
mov
cmc
or
pop
mov
aas
scas
rol
sub
int
scas
inc
fcmovb
xor
pop
adc
lahf
and
mov
inc
or
ja
add
aam
mov
in
(bad)
retf
pop
pop
lds
xor
div
cld
rol
inc
imul
cmp
jb
outs
mov
shr
mov
cmps
ds
shl
int
cmp
ficomp
mov
push
cmp
xchg
ins
cwde
fdiv
sti
cwde
dec
dec
jmp
dec
push
mov
loopne
mov
clc
and
adc
mov
jmp
mov
iret
movs
add
mov
dec
jmp
pop
mov
mov
scas
test
inc
mov
pop
and
out
rcl
fmul
enter
(bad)
cli
pop
das
pop
repz
(bad)
hlt
adc
repnz
adc
push
push
pop
test
push
into
xchg
imul
pop
stos
scas
leave
mov
retf
cmp
push
pop
xor
add
shr
bound
ret
dec
cmp
sbb
mov
pop
pop
mov
dec
pop
push
nop
push
sub
cli
ins
mov
out
xor
or
sti
scas
fidivr
ficomp
mov
cwde
dec
or
loopne
add
add
stos
pop
dec
aas
jle
clc
dec
pop
scas
pop
jb
push
(bad)
outs
pop
loope
mov
int
jb
leave
iret
jo
and
inc
or
out
fbld
iret
test
pop
lods
inc
mov
arpl
fld
ins
mov
pop
add
cli
push
ins
mov
push
sbb
(bad)
fwait
cli
lahf
push
add
sbb
push
push
pop
cdq
fldcw
ins
sbb
fmulp
mov
and
out
cwde
mov
daa
mov
cmc
inc
or
repnz
mov
mov
mov
add
shl
push
jg
push
dec
xlat
pop
mov
add
and
out
aad
aad
aaa
or
cmps
xor
(bad)
sbb
iret
int3
push
adc
jbe
dec
xor
loop
sti
adc
mov
outs
out
cmp
sbb
cdq
and
push
sub
mov
and
pop
pusha
imul
add
jecxz
jecxz
pop
leave
adc
inc
aam
jo
xchg
call
push
xor
add
in
ds
retf
mov
cmp
sub
sub
les
sub
sub
mov
dec
cmp
xchg
add
mov
out
adc
imul
inc
leave
test
idiv
std
fwait
rcr
das
cdq
stos
pop
repnz
jge
outs
ja
xchg
adc
pop
inc
jmp
cmp
rcr
adc
dec
cwde
mov
movs
mov
fmul
sbb
inc
iret
sti
push
scas
ins
clc
retf
push
adc
jnp
es
add
push
jo
add
push
sbb
xor
cmps
imul
dec
xchg
cli
enter
jae
mov
push
or
inc
ins
dec
imul
fsub
sahf
and
jne
in
out
sbb
mov
xchg
in
iret
jno
(bad)
movs
scas
repnz
inc
jb
enter
sub
cdq
in
cmp
popa
pop
dec
push
outs
sbb
pop
mov
call
cmps
add
inc
gs
ins
dec
popf
mov
outs
div
mov
push
or
imul
push
sub
dec
ins
inc
mov
mov
sub
mov
adc
cmp
repz
xchg
rol
leave
inc
mov
or
inc
or
jmp
loopne
fisubr
mov
push
jl
out
push
ficom
pop
mov
lock
bound
lahf
or
sbb
pop
fistp
out
add
adc
adc
dec
mov
cmp
adc
lods
dec
jecxz
sub
(bad)
hlt
adc
jno
retf
lods
dec
xchg
loopne
sti
das
xor
cmp
fsubr
or
(bad)
clc
gs
cmp
ds
int3
(bad)
shr
and
xor
xchg
pushf
sub
and
inc
sub
inc
je
jecxz
hlt
adc
dec
add
fs
jmp
(bad)
mov
xor
fwait
inc
push
into
cmp
xlat
bnd
mov
(bad)
adc
jmp
jo
into
mov
sbb
xlat
(bad)
lahf
retf
or
jne
leave
adc
call
fwait
lock
fdivr
and
jmp
or
(bad)
ds
movs
xor
pop
aam
js
mov
scas
iret
ret
jnp
test
das
xchg
xchg
adc
push
enter
in
imul
pop
shr
ret
aad
int
mov
jmp
cmc
dec
and
sub
popa
test
hlt
in
mov
mov
movs
push
dec
in
loopne
int3
loop
ret
push
jns
das
in
sub
jmp
mov
jmp
adc
pop
gs
jmp
mov
pop
iret
add
rcr
jno
jge
adc
xlat
clc
pop
add
lods
cmp
clc
inc
sbb
xchg
adc
test
ja
mov
(bad)
je
sub
or
pop
mov
ror
sbb
enter
dec
test
stos
or
popa
or
or
and
es
lock
fsubr
mov
dec
lods
icebp
test
inc
fwait
adc
iret
popf
sahf
popa
aas
cmp
(bad)
outs
rcr
cmp
aas
jae
mov
iret
mov
es
gs
inc
or
call
push
push
daa
add
pop
test
movs
xchg
sub
sar
ds
ds
in
rcl
aas
out
retf
dec
sbb
data16
dec
push
jg
fcmovnbe
push
repz
mov
fisubr
inc
adc
into
push
and
(bad)
cmp
mov
idiv
je
mov
mov
dec
mov
loopne
pop
mov
sub
pop
rol
jg
cmc
or
aaa
mov
mov
mov
icebp
xor
cmp
out
ret
mov
jl
dec
out
dec
pmulhw
or
pop
out
lods
pop
jl
cmps
push
jmp
sub
xor
popf
test
std
jne
mov
adc
cmp
inc
adc
or
and
mov
push
addr16
sbb
add
cmp
xchg
hlt
push
lea
in
xor
imul
in
mov
daa
lods
fwait
hlt
or
aas
call
pop
mov
fist
xor
xor
dec
pop
int
jno
out
sub
sti
retf
bnd
ins
inc
in
movs
jge
cwde
in
jp
iret
ss
xor
nop
call
sbb
je
pushf
inc
je
sahf
outs
or
pop
sbb
push
push
das
dec
lea
in
cmp
push
sub
test
mov
mov
xor
out
dec
push
xor
mov
xor
xor
xor
out
retf
jge
(bad)
cdq
pop
outs
(bad)
xchg
out
movs
adc
call
push
arpl
xor
cmp
das
push
pop
mov
std
es
repnz
inc
push
mov
ficomp
jae
rol
sub
xor
xchg
jg
lea
retf
sar
aaa
sti
or
imul
sub
push
push
in
ins
movs
cmp
sar
add
push
adc
test
cwde
es
enter
push
jb
lds
cmp
jp
push
lahf
cmp
jp
inc
or
iret
popf
mov
(bad)
cdq
(bad)
hlt
les
mov
faddp
dec
fist
dec
jne
mov
mov
sbb
rol
mov
ret
bound
rdtsc
dec
inc
mov
test
repnz
jb
iret
xchg
cld
cwde
add
cmp
and
jg
cmps
dec
retf
cdq
mov
ds
retf
hlt
pop
test
jge
xchg
icebp
and
mov
in
mov
aas
mov
in
xlat
cmp
add
outs
(bad)
outs
xlat
mov
or
mov
dec
rol
jmp
mov
aaa
mov
pusha
adc
pop
int
sbb
mov
pop
mov
je
push
xor
aam
or
loopne
dec
xlat
bound
or
push
push
nop
int
rol
pop
jg
add
pop
or
xchg
mov
fs
ins
adc
aam
push
(bad)
outs
pop
mov
lods
nop
sbb
xor
pop
mov
push
or
aas
in
push
lahf
jae
and
pop
xchg
out
sbb
les
mov
cmp
addr16
loopne
lods
or
mov
xchg
out
into
int
jl
or
jp
pusha
mov
sbb
mov
add
inc
or
movs
add
stos
dec
aaa
mov
dec
ins
dec
out
lahf
mov
pop
jg
sti
xchg
test
sub
or
cmps
test
push
xchg
jmp
push
push
mov
mov
jecxz
ds
dec
and
hlt
hlt
movs
jecxz
fwait
mov
repnz
inc
dec
call
movs
jge
ror
cdq
jmp
mov
and
pushf
ret
and
xor
inc
mov
pop
mov
addr16
lock
sbb
and
and
retf
call
(bad)
pusha
mov
xchg
and
and
(bad)
pop
dec
mov
xor
pop
call
cmp
test
xor
movs
(bad)
xor
pop
lds
push
std
rep
xchg
in
sbb
jg
inc
rcl
add
test
mov
gs
in
sti
loope
mov
jmp
mov
(bad)
outs
out
jp
inc
cmp
add
sub
jmp
mov
jmp
dec
cmp
div
retf
lods
shr
cmc
rol
xor
arpl
mov
mov
lea
pop
not
cdq
dec
pop
jo
xchg
stos
loope
ja
mov
cmp
xchg
ja
cmp
scas
ds
push
mov
and
int3
mov
xchg
call
mov
aad
ds
stos
and
dec
cmps
push
cmp
mov
addr16
popf
imul
std
mov
xor
(bad)
push
push
retf
cmp
and
std
cdq
test
call
push
dec
push
mov
loop
or
out
sub
js
(bad)
sbb
enter
jl
jmp
(bad)
push
mov
xchg
sar
fmul
jae
dec
cmp
pop
sbb
in
fcmovbe
std
sub
sbb
pop
push
es
and
mov
daa
xchg
retf
push
pop
push
xchg
pop
lahf
mov
mov
push
jae
add
hlt
xor
loope
jmp
out
mov
pop
push
or
xor
xchg
or
lock
adc
add
sbb
fwait
les
xchg
inc
stos
pop
(bad)
and
mov
lods
nop
mov
outs
cmc
sbb
jbe
(bad)
(bad)
and
scas
jl
stos
and
xchg
ret
sbb
ja
or
xchg
cmp
push
loopne
shr
call
add
and
jmp
mov
push
mov
rcl
sub
xchg
jns
adc
scas
icebp
sub
fist
mov
test
xchg
cdq
sbb
imul
and
rcl
std
ret
call
(bad)
imul
mov
mov
inc
ins
movs
add
int
xchg
dec
lock
dec
shl
loope
jno
jne
stos
into
ja
in
nop
aam
shl
inc
sbb
mov
out
jp
stos
ins
sahf
jne
push
bt
lods
js
inc
aam
sub
mov
fcomp
jne
jae
push
jbe
mov
ret
sahf
or
(bad)
cmp
das
add
repz
(bad)
pop
mov
shl
in
stos
sahf
ds
adc
jge
mov
stos
and
inc
into
ins
inc
jle
into
add
dec
aad
in
push
ret
xchg
movs
int
shl
loope
repz
js
test
stos
mov
sbb
es
pop
test
mov
push
cmp
dec
outs
call
pop
enter
push
cmp
ins
call
in
xchg
inc
rcr
and
dec
sub
inc
or
add
dec
scas
dec
pusha
xor
inc
cmps
jns
jne
mov
movs
push
adc
scas
push
xor
pop
adc
add
call
push
xor
jns
and
dec
test
repnz
(bad)
and
sar
fisub
sub
je
add
mov
popa
sub
adc
sub
rcl
fbstp
call
aas
enter
inc
std
push
push
retf
sti
(bad)
je
jae
out
rcl
aam
push
dec
xor
inc
xor
pop
(bad)
xchg
mov
jno
loop
lahf
int3
aaa
jae
cwde
pop
je
push
mov
ja
push
xchg
mov
add
or
dec
or
xor
scas
mov
loopne
dec
jo
movs
add
jnp
push
iret
(bad)
fs
test
(bad)
out
adc
mov
retf
mov
in
pop
xchg
adc
test
rol
adc
neg
icebp
dec
mov
cmp
and
inc
sahf
into
inc
and
cdq
jnp
rcr
add
xor
push
repz
mov
xor
repz
sahf
mov
add
sbb
sbb
and
sub
xchg
movs
xor
inc
lahf
mov
ret
aaa
arpl
cmc
jo
add
mov
mov
jne
jecxz
cdq
shl
and
mov
dec
mov
out
adc
push
cmp
cwde
inc
loop
push
inc
mov
call
inc
pop
(bad)
or
cmp
inc
lock
mov
adc
add
sub
movs
repz
(bad)
mov
ret
aam
sub
jecxz
and
sub
popa
(bad)
pop
push
enter
fldenv
jge
push
pop
or
mov
jo
lds
sbb
fdiv
or
jae
cdq
cmp
enter
iret
pop
xchg
out
dec
lock
add
dec
hlt
adc
dec
mov
movs
scas
cli
or
mov
aas
sbb
outs
inc
into
retf
fst
cmp
mov
das
mov
arpl
inc
test
and
retf
mov
pop
lods
lods
pop
loope
and
xchg
and
adc
mov
sbb
cmp
xchg
xor
lods
test
leave
jbe
xchg
je
int3
pop
mov
mov
inc
call
idiv
jmp
icebp
retf
shr
pop
xchg
hlt
and
int
retf
in
pop
cmc
or
mov
inc
mov
xchg
(bad)
push
mov
pop
and
add
push
cmp
daa
adc
inc
in
sbb
hlt
jge
outs
inc
rol
jmp
push
mov
sub
aad
mov
jns
sub
adc
dec
mov
dec
ins
inc
jb
ins
shl
ret
and
inc
cmp
or
or
cmp
jp
ins
pop
std
mov
stc
mov
ins
jmp
(bad)
jmp
sbb
dec
jns
jmp
and
push
mov
les
dec
call
sahf
xchg
fdiv
ror
and
ret
call
call
cdq
loop
cmp
lods
adc
lea
push
sub
shl
je
push
dec
mov
out
mov
mov
call
stos
jmp
cwde
movs
sub
adc
jle
sub
xchg
dec
retf
cmps
fwait
mov
mov
add
mov
pop
jno
add
jae
push
mov
sbb
mov
push
std
sub
inc
or
(bad)
clc
cmp
sti
mov
push
mov
xor
call
add
mov
jge
rol
xor
jo
lahf
push
jl
xchg
pop
dec
test
cwde
mov
xchg
jge
ja
pop
je
fs
dec
cmp
mov
pushf
xchg
popa
mov
and
pop
jmp
ror
pop
cli
iret
xor
clc
xor
pusha
xor
jmp
int
loopne
popf
test
push
dec
sahf
push
add
push
xlat
and
mov
mov
loop
dec
sbb
ror
and
out
mov
lods
mov
hlt
xor
in
xor
(bad)
sub
jg
mov
das
retf
adc
push
pop
mov
lock
rcl
(bad)
enter
mov
mov
(bad)
js
sbb
loopne
add
xchg
add
(bad)
clc
out
xchg
or
dec
fdiv
pusha
mov
jmp
in
jmp
sub
push
repnz
stc
mov
idiv
pushf
pop
xor
pop
inc
fadd
xor
mov
in
mov
and
aaa
push
mov
mov
push
push
pop
les
call
sub
mov
int
ins
xor
xchg
in
push
imul
popa
data16
inc
cli
fistp
xor
fcomp
jae
icebp
aaa
pop
mov
loopne
fdiv
sti
dec
pop
stc
or
sub
ror
fisubr
dec
sub
mov
add
push
jmp
out
daa
into
pushf
or
fiadd
mov
inc
push
mov
push
hlt
adc
cmp
(bad)
cmp
std
pop
(bad)
sub
aaa
popf
xchg
cmp
imul
xchg
retf
xchg
dec
adc
inc
cmp
cmp
ins
outs
rcl
in
mov
push
(bad)
cmp
dec
xchg
imul
lea
nop
shl
pop
pop
nop
data16
mov
imul
xor
mov
je
aas
inc
fld
bound
mov
lock
mov
sti
sub
fs
sbb
adc
inc
sbb
ds
ret
add
imul
inc
jno
into
dec
shr
and
retf
(bad)
xor
jae
sub
js
add
(bad)
or
mov
(bad)
loope
jg
cmps
mov
dec
push
movs
mov
and
adc
fsub
loop
mov
cmps
call
and
jns
(bad)
scas
sub
and
pushw
jge
mov
cs
stos
add
add
and
jb
pop
stos
cmp
iret
in
clc
ds
shl
adc
or
int
add
call
or
out
push
icebp
int
retf
pop
dec
ja
mov
in
pop
cmp
or
jns
js
pop
sub
frstor
ins
stos
lahf
lods
xchg
inc
mov
test
sbb
aaa
mov
aas
clc
repz
cld
addr16
repz
push
lock
fucompp
gs
push
cmps
loope
dec
mov
ins
xor
aam
cmp
fwait
push
push
mov
test
loop
add
(bad)
retf
mov
out
dec
jmp
fldenv
movs
out
cmp
mov
push
dec
loopne
sbb
fcomi
push
iret
jb
loop
cmp
jns
test
jns
lds
sahf
push
into
jmp
or
pop
xor
cld
sbb
mov
push
jmp
mov
or
aaa
retf
outs
ins
rcr
shr
inc
ins
mov
adc
push
cmp
mov
sbb
sbb
cwde
push
jno
jnp
stc
imul
pop
dec
mov
repz
int
ret
mov
cmp
jmp
pop
pop
and
sub
inc
pop
fistp
sahf
addr16
mov
mov
or
jbe
cmp
test
mov
les
aaa
aas
pop
aaa
mov
sti
scas
jne
lea
mov
mov
sub
leave
cmp
(bad)
scas
movs
cmp
xlat
add
mov
arpl
or
jns
sahf
ja
or
cmp
sbb
daa
inc
(bad)
push
or
fdivr
mov
je
pop
ret
(bad)
mov
sub
call
push
add
xor
stc
pop
repnz
jl
mov
(bad)
hlt
push
cmc
rcl
cmp
push
mov
push
or
pop
repnz
sbb
mov
loop
jae
xor
stos
push
sbb
fstp
xchg
cmps
push
test
out
jmp
and
call
jl
cld
push
outs
adc
ss
in
add
in
(bad)
mov
or
leave
aam
sub
push
cmps
rep
jle
dec
push
mov
loop
mov
mov
mov
push
imul
sbb
mov
movs
jae
mov
pop
mov
inc
push
mov
mov
add
ret
cmp
and
rcl
rcl
sub
mov
sbb
outs
jne
mov
test
jno
or
pop
push
sbb
pop
(bad)
aas
ds
aas
leave
jp
aam
adc
icebp
stos
loopne
adc
popf
shr
pop
scas
out
xchg
shl
loop
push
std
dec
stos
inc
sub
in
(bad)
pop
fbld
pop
fisttp
pop
or
das
loope
jnp
or
icebp
ins
dec
in
cmps
in
pop
jo
or
popf
jo
adc
pop
retf
mov
lds
pop
sbb
jnp
and
repz
movs
adc
in
hlt
in
jmp
mov
xchg
movs
adc
fisub
sbb
xchg
and
pop
test
lods
adc
rep
add
ds
repnz
cmovl
add
enter
(bad)
fld
gs
es
dec
jo
push
sbb
jno
stos
pop
sub
(bad)
jne
inc
shr
loop
cs
mov
pop
enter
mov
pop
je
mov
jbe
pop
inc
xchg
jmp
cmps
loop
fwait
xor
sbb
or
adc
xlat
in
call
leave
mov
gs
repz
cli
dec
inc
mov
mov
aad
sub
test
cld
jb
cmp
mov
xchg
jns
dec
cmps
or
add
fbstp
mov
sahf
fs
sbb
push
(bad)
jmp
xchg
adc
out
call
shl
shl
and
aas
jb
mov
add
mov
sub
fist
mov
in
into
mov
es
cmp
adc
ins
aad
lods
adc
hlt
loopne
ror
je
cdq
xchg
mov
lock
scas
cmp
sti
add
mov
cmp
add
inc
adc
jb
test
xor
jae
fsub
jne
popa
dec
call
inc
mov
cmp
jno
cmp
aaa
(bad)
sti
mov
push
sub
fbstp
mov
mov
ficomp
sahf
jbe
int
fbld
loop
dec
mov
xchg
iret
dec
add
adc
cmp
jae
enter
mov
mov
and
imul
stos
add
int
ror
inc
test
jmp
rol
icebp
test
ins
push
cs
sbb
aam
(bad)
out
push
or
dec
cmp
mov
cmps
sbb
popa
adc
mov
and
xor
jg
aam
xchg
adc
aad
arpl
mov
(bad)
mov
pushf
int3
mov
push
ss
sub
fs
sti
and
lods
jbe
inc
jb
lods
xor
dec
mov
int
les
mov
mov
repnz
fs
cdq
inc
dec
pop
jae
lea
mov
xchg
idiv
retf
fbld
jle
pop
(bad)
pcmpgtw
mov
and
and
jge
and
push
cmp
data16
and
jbe
and
add
mov
test
mov
enter
dec
aad
je
mov
pop
jbe
out
cmc
aad
mov
mov
sbb
in
jbe
and
mov
scas
cmp
cmc
xchg
and
aas
cmp
lds
scas
xchg
xchg
jo
mov
lea
jns
lds
dec
xlat
dec
xchg
mov
sbb
mov
xchg
loopne
mov
jae
push
and
push
mov
pop
lahf
jge
cmps
repz
loopne
imul
mov
(bad)
pop
jp
aad
cs
mov
or
inc
mov
out
test
lahf
retf
test
cmp
push
inc
dec
xor
inc
or
dec
pushf
cmp
(bad)
lods
pop
or
pop
add
mov
test
(bad)
ficomp
(bad)
out
inc
mov
inc
stos
add
inc
popa
and
(bad)
mov
fidiv
inc
xchg
push
loope
adc
out
sub
enter
inc
(bad)
sar
movs
push
push
fst
movs
mov
out
pusha
movs
add
xor
jge
mov
movs
scas
ins
jmp
loop
call
pushf
aas
mov
pop
aas
xor
jns
inc
(bad)
fmul
arpl
adc
in
push
arpl
push
jmp
fld
push
inc
inc
jne
xor
imul
mov
and
sbb
aad
cmp
test
ins
mov
(bad)
sub
sahf
hlt
inc
xchg
ja
sub
add
ja
xchg
jnp
test
shr
xchg
jns
xchg
cdq
call
or
fst
clc
stos
pop
in
push
out
xchg
dec
xor
push
clc
mov
inc
(bad)
into
push
mov
dec
in
mov
sub
push
pop
xor
outs
pusha
mov
mov
and
jae
shl
mov
movs
and
pop
cli
sbb
ins
aaa
jmp
cmps
dec
inc
inc
popf
ins
in
pushf
pop
jmp
push
sub
xor
aas
das
(bad)
(bad)
cmps
inc
clc
push
mov
mov
mov
out
into
sub
loopne
dec
xchg
push
push
sti
loop
pop
jnp
retf
gs
arpl
mov
push
cwde
or
add
outs
sub
sub
(bad)
mov
add
shl
or
xor
adc
mov
sbb
enter
or
sbb
scas
and
push
cmp
mov
push
push
cs
(bad)
push
xchg
les
lods
loop
arpl
loop
bound
mov
and
imul
push
loope
pop
dec
ins
inc
xchg
(bad)
ficomp
jbe
adc
or
fdiv
push
sub
out
pushf
call
lea
mov
lahf
popf
xchg
inc
daa
aam
addr16
mov
push
mov
sub
fld
sub
ins
and
jne
addr16
dec
pop
aaa
or
lea
rcl
setle
ins
movups
xchg
dec
rcr
sub
or
sti
jne
ss
jo
lds
std
xor
jle
dec
mov
xor
push
mov
xchg
(bad)
out
push
mov
mov
and
sbb
out
lods
inc
sar
adc
cmp
aam
(bad)
pushf
pop
(bad)
fstp
pop
(bad)
loopne
inc
(bad)
int3
inc
hlt
cld
ins
fistp
adc
push
cwde
push
fcmovnu
sbb
xchg
or
sbb
int3
je
scas
shl
push
pop
cli
mov
int
pop
jbe
mov
push
cld
(bad)
arpl
mov
sahf
rol
xor
push
mov
clc
dec
inc
(bad)
push
mov
and
ss
or
test
mov
pop
jnp
push
sbb
daa
jns
retf
and
movs
fnstenv
adc
pop
int3
jbe
sbb
pop
jae
lds
sti
jno
jp
iret
arpl
jnp
and
mov
adc
cdq
and
pop
pop
imul
into
dec
or
lds
sub
fsubr
xlat
mov
push
movs
imul
jbe
scas
xchg
popf
sub
push
inc
nop
xchg
(bad)
(bad)
(bad)
xchg
and
aad
in
and
and
lea
(bad)
xlat
fcomp
inc
push
dec
(bad)
jno
ret
lods
xor
adc
or
mov
fnstcw
daa
repz
lods
add
pop
or
ror
into
inc
out
(bad)
retf
repz
cmc
cmc
push
retf
push
clc
xor
mov
jae
jmp
or
sbb
jg
cwde
js
mov
mov
xchg
mov
repz
push
mov
mov
pop
cmp
cld
fucompp
ins
iret
push
int
xor
and
in
pop
call
push
push
les
adc
push
loop
das
es
(bad)
cmp
out
call
lods
out
sar
xor
hlt
inc
sbb
mov
ins
push
cmp
cld
jo
(bad)
sub
inc
inc
icebp
xchg
test
cmps
xchg
pop
(bad)
(bad)
(bad)
call
and
ds
fisttp
cmp
dec
out
movs
out
mov
scas
xor
inc
xchg
sub
test
inc
jl
cmp
arpl
stc
xchg
(bad)
mov
jl
adc
inc
jae
cdq
cmp
addr16
retf
add
les
add
push
into
outs
xor
push
repz
(bad)
push
inc
fbstp
mov
idiv
dec
add
or
jo
pop
les
sbb
std
jp
retf
add
inc
repnz
cmps
cmp
mov
jae
shr
jb
and
(bad)
stos
popa
pop
push
push
pop
pop
cmp
xchg
add
add
lods
arpl
out
out
dec
cld
fsub
dec
xlat
leave
jp
cs
add
fst
iret
pop
inc
into
scas
iret
loop
sub
cs
jg
popa
add
and
ret
push
add
push
mov
mov
add
int
sar
mov
cmc
loope
xor
jbe
sub
push
inc
mov
lahf
xchg
jmp
inc
ins
sub
(bad)
adc
inc
cmc
or
push
lods
xchg
dec
scas
cdq
and
fs
(bad)
xchg
repz
shl
push
fld
ss
cmp
push
cwde
jecxz
stos
fcmovne
add
xor
sub
jmp
sbb
dec
sub
data16
mov
test
or
(bad)
aas
push
cmp
ins
ja
jae
int3
or
xor
add
add
shl
mov
loopne
ret
aaa
mov
add
add
call
ss
inc
iret
xchg
dec
jmp
push
cmps
mov
pop
pop
fwait
inc
inc
dec
fdiv
push
pop
ret
call
loopne
cmps
ins
xchg
sahf
retf
mov
stc
pop
mov
xor
into
xchg
sahf
call
fimul
out
popa
or
js
sbb
jecxz
cdq
ror
cmps
push
arpl
mov
jl
cli
lea
lock
jne
cmp
sub
fimul
retf
scas
adc
sbb
rol
stc
shr
jle
or
out
les
aam
pop
mov
fdivr
sbb
aad
inc
sbb
push
arpl
test
adc
adc
dec
repz
outs
scas
add
jb
and
call
enter
adc
stos
rcl
dec
adc
cmps
sub
gs
in
arpl
dec
icebp
mov
inc
mov
out
je
in
stos
std
dec
fs
iret
pop
test
sbb
mov
repnz
cdq
jp
loope
mov
push
repz
(bad)
ficom
stc
and
pop
fwait
shl
arpl
fcomp
mov
stc
faddp
push
push
xor
mov
loop
ret
pop
adc
mov
add
mov
retf
and
jbe
shr
(bad)
(bad)
push
pop
cmp
aad
push
push
inc
mov
or
sub
into
shl
cs
jnp
adc
daa
call
test
or
mov
cdq
je
pop
shl
pushf
gs
sbb
(bad)
fnsave
pop
leave
out
sub
inc
push
test
outs
dec
add
(bad)
mov
fst
inc
fld
sbb
fs
repnz
pop
repz
mov
adc
test
xchg
(bad)
dec
add
and
les
es
int3
inc
(bad)
retf
repz
mov
int3
xchg
sub
js
push
inc
inc
movs
lahf
cwde
sub
mov
and
push
jg
icebp
dec
aad
push
cld
jge
scas
dec
jle
adc
xor
mov
adc
mov
mov
jecxz
lahf
jo
sbb
cmps
dec
cld
ja
pusha
stos
mov
xor
rol
push
std
xchg
test
mov
cs
inc
sub
fidiv
mov
mov
inc
add
mov
pushf
lea
(bad)
in
stos
ror
ss
int3
lods
dec
mov
mov
push
mov
adc
mov
mov
call
mov
jg
repz
mov
mov
jbe
in
bound
(bad)
xor
call
fstp
xchg
sbb
mov
or
cwde
sbb
int
or
je
and
xchg
outs
mov
mov
push
in
call
pushf
jecxz
xor
pop
inc
mov
je
mov
add
sub
mov
inc
out
fbstp
cmp
stc
add
out
cmp
fisub
in
pop
gs
cwde
ins
pop
lods
gs
sbb
mov
sub
inc
mov
mov
and
push
call
sub
and
pop
xchg
pop
aaa
sbb
push
push
adc
(bad)
je
mov
stos
not
push
pop
add
mov
dec
hlt
sub
outs
frstor
out
inc
outs
not
mov
ror
push
xor
xchg
loopne
daa
sbb
mov
xchg
ins
push
ins
inc
or
test
call
jg
fwait
out
into
icebp
xchg
mov
(bad)
mov
test
mov
cwde
sbb
dec
fisub
std
and
aaa
out
add
imul
lea
stos
rol
cmp
add
ins
ret
stc
adc
in
cmp
dec
pushf
(bad)
cmps
mov
cmp
mov
and
dec
inc
pop
fcom
add
cmp
inc
cdq
sar
push
loope
sbb
mov
push
and
pushf
stc
ret
or
mov
cmp
loope
cmp
sbb
fwait
xor
push
push
inc
cmp
cmp
inc
dec
sbb
fdiv
lods
inc
out
fild
dec
fmul
bound
leave
ds
sar
test
aas
inc
ror
xchg
mov
xchg
pushf
cmp
cmp
mov
or
outs
cmp
test
mov
xor
gs
arpl
clc
cmp
jo
setle
push
cmc
cmps
fistp
mov
inc
hlt
jmp
inc
xlat
call
in
call
sub
aam
aam
sti
test
mov
xchg
(bad)
cmp
fwait
(bad)
cmps
dec
je
out
cmp
jae
fadd
test
inc
push
cmc
sti
test
pop
stc
ds
or
mov
pop
or
xchg
movs
fidiv
mov
xlat
stos
adc
imul
inc
ja
inc
mov
lds
(bad)
pop
(bad)
mov
cmp
cld
loope
mov
lds
jbe
sti
std
mov
movs
loopne
mov
jecxz
lea
jle
jg
or
xor
iret
sbb
dec
pop
cmp
jg
add
fdivp
pop
out
adc
inc
stc
outs
mov
fistp
dec
cmp
addr16
cld
ficomp
and
aaa
mov
or
pop
scas
lods
in
or
add
jecxz
jne
stos
retf
push
sub
repz
aad
mov
jg
jo
sub
xchg
lods
imul
retf
mov
out
popf
jp
stos
popf
adc
int
cmc
mov
stos
adc
nop
lock
popa
xchg
xor
sbb
mov
(bad)
outs
jae
mov
inc
retf
add
repz
mov
test
or
stos
adc
(bad)
and
pop
iret
stc
and
loope
or
cmp
imul
js
lods
test
imul
(bad)
adc
xchg
int
repnz
jle
mov
inc
push
pop
dec
mov
cmp
mov
xchg
dec
sub
leave
enter
fs
nop
loope
mov
fdivp
mov
icebp
fstp
sti
mov
stos
mov
fbstp
pop
ins
ja
add
ins
mov
add
dec
mov
nop
jge
aas
ret
adc
in
jae
aad
mov
or
movs
xchg
lds
push
outs
pop
fidiv
pop
neg
mov
or
xchg
shl
aaa
and
shr
inc
sbb
enter
lea
ret
addr16
stos
push
test
mov
push
dec
dec
xchg
ret
pop
icebp
mov
add
jg
out
movs
inc
popw
xchg
cmps
sbb
mov
je
mov
jno
add
pop
xor
fcom
push
in
pop
lock
inc
in
loop
js
cdq
jne
lods
mov
mov
cmp
call
cwde
repnz
jbe
or
adc
mov
add
aas
sbb
adc
mov
sub
adc
cmp
das
pop
mov
and
xchg
aas
sbb
jmp
ret
movs
aaa
mov
push
and
ficom
sbb
movs
add
dec
cld
and
inc
rcr
shl
ror
push
mov
enter
jo
inc
mov
scas
mov
(bad)
(bad)
call
out
int
sub
jb
sub
les
into
imul
and
mov
add
cmp
push
add
dec
cmp
rol
inc
out
dec
jb
add
jmp
adc
cmp
test
push
in
dec
and
mov
sub
call
pusha
sbb
sbb
sbb
jmp
mov
ins
retf
or
cmc
loope
or
int
sbb
mov
xor
mov
repnz
sbb
ret
push
lds
jmp
sbb
xchg
inc
push
pop
(bad)
mov
retf
ds
add
arpl
sub
lds
out
jmp
mov
sbb
in
leave
mov
lea
not
(bad)
and
fxch
pop
xor
ror
adc
loop
cmp
icebp
or
sub
xor
nop
out
int3
int
fcomp
aam
frstor
jbe
aaa
or
pop
cwde
cmp
mov
sbb
push
aam
dec
mov
ds
mov
inc
mov
jmp
cmp
dec
sar
clc
(bad)
pushf
leave
push
or
into
or
into
ret
in
lea
dec
cmp
mov
mov
cmp
pop
(bad)
cwde
push
ja
jmp
add
adc
test
inc
out
push
fidivr
(bad)
(bad)
in
mov
fild
inc
(bad)
es
xor
call
fisttp
pusha
test
push
ss
xor
mov
jae
enter
lea
dec
dec
cmp
jnp
pushf
push
xchg
adc
jo
cs
or
fs
push
hlt
je
adc
popa
push
push
(bad)
icebp
icebp
push
xor
clc
add
mov
pop
sub
clc
xchg
mov
mov
mul
xchg
jno
cmp
jbe
adc
repz
ss
jmp
jnp
jo
xchg
cmp
dec
shr
call
enter
pop
mov
mov
shl
sub
mov
inc
out
fdiv
jno
push
and
sub
hlt
jecxz
xchg
or
nop
test
mov
or
sbb
jg
cli
mov
jmp
inc
in
fdivr
js
mov
jbe
and
adc
mov
jnp
shl
es
adc
dec
adc
push
inc
movs
test
es
cmp
dec
lahf
pop
mov
fs
xchg
adc
dec
mov
scas
es
mov
test
clc
cwde
push
xchg
pop
push
daa
sub
mov
out
mov
in
dec
mov
adc
xchg
je
pop
push
test
fidivr
add
inc
xor
jns
pop
lds
mov
inc
stc
scas
loopne
sub
and
leave
ja
pop
in
popa
cmps
pop
and
jp
sti
leave
sub
mov
in
mov
or
cmovl
add
adc
or
jns
xor
xchg
pop
pop
mov
in
pushf
xchg
sub
bound
ret
sahf
and
fsubr
arpl
xchg
fs
mov
bound
sti
(bad)
cwde
and
stos
(bad)
mov
mov
mov
ja
daa
pop
xor
arpl
fwait
popa
mov
gs
lea
add
imul
or
xor
adc
sub
xor
(bad)
cs
inc
adc
std
xchg
(bad)
jle
or
shl
lods
aad
sub
xor
jmp
sub
xchg
mov
xchg
or
mov
pop
xor
jae
jecxz
fisub
pop
mov
push
jb
pop
stc
lods
mov
stos
add
ds
mov
push
mov
jb
(bad)
pop
pop
or
cmp
push
mov
xchg
xchg
aaa
aaa
cld
xor
mov
adc
scas
inc
pop
xchg
daa
cmp
ja
inc
(bad)
out
cmc
es
hlt
test
xchg
inc
(bad)
mov
hlt
xchg
pop
pop
mov
cmp
cmc
into
and
mov
retf
loop
fdivr
and
outs
adc
lods
sbb
stc
cld
sbb
mov
cmps
fmul
push
les
mov
jo
inc
cli
cmps
cmp
jmp
cmp
repz
and
(bad)
test
mov
scas
dec
aam
sti
ret
(bad)
mov
cmp
inc
enter
movs
dec
in
xchg
jle
sti
pushf
jge
jp
enter
xchg
xchg
jmp
inc
es
(bad)
mov
mov
pop
pop
rcl
jle
cwde
cli
stos
js
rol
xor
jb
push
jmp
mov
mov
inc
fidivr
add
push
mov
iret
pop
clc
mov
retf
imul
enter
xor
icebp
das
sub
les
jmp
mov
jne
(bad)
jmp
(bad)
push
cmp
jnp
dec
add
pusha
arpl
lods
fdiv
cdq
int3
mov
pushf
adc
daa
lock
loopne
xchg
call
mov
jne
clc
jmp
add
or
out
movs
(bad)
mov
repnz
(bad)
mov
addr16
sub
jmp
inc
push
pop
stos
or
lea
je
ror
pop
mov
out
retf
sub
fisub
fidiv
shr
call
push
dec
imul
push
or
cmc
or
mov
pop
pop
cmp
mov
pop
jg
mov
hlt
cli
(bad)
outs
imul
stos
rol
mov
jo
push
pop
xor
jl
fcmovnb
cmove
push
shl
inc
jp
dec
call
mov
repz
push
jle
xlat
adc
push
and
icebp
or
sbb
rol
add
inc
sub
vpmacssww
pop
clc
dec
xor
inc
pop
mov
stos
jns
dec
add
jp
cwde
xchg
xor
pop
add
push
mov
push
ret
push
outs
stc
cmp
push
jae
push
(bad)
xlat
mov
inc
pop
vcmpss
cmp
mov
loop
ja
fidivr
mov
pop
inc
sbb
xchg
scas
jp
popf
in
cli
xor
aaa
inc
sub
mov
repz
dec
push
xchg
pushf
pop
xchg
das
call
movntq
fidiv
out
idiv
scas
jmp
rcl
stos
in
inc
push
in
test
sub
adc
mov
les
add
cmps
iret
jecxz
ss
ss
clc
adc
pop
lea
sbb
pop
stos
fcomp
push
in
push
repnz
ffreep
daa
adc
enter
xlat
enter
lea
js
retf
pop
or
hlt
clc
mov
test
adc
cmp
jo
iret
push
xchg
js
int3
inc
iret
mov
sbb
cmp
mov
jb
out
mov
add
jnp
ror
jmp
stos
xchg
outs
into
mul
aad
fimul
into
mov
or
add
dec
cwde
pop
dec
adc
jmp
mov
mov
push
inc
lahf
push
jb
cwde
outs
test
mov
inc
(bad)
cs
pop
iret
das
shl
in
sti
and
popa
fstp
and
adc
cmps
add
(bad)
mov
inc
js
and
sar
lds
push
mov
jmp
js
neg
jl
push
fnstenv
cmp
cli
loope
outs
test
aas
pop
pusha
addr16
sahf
nop
(bad)
or
and
ds
mov
jl
test
or
pushf
scas
pusha
push
pop
repz
leave
imul
(bad)
ret
call
mov
pusha
mov
lock
add
mov
popa
ret
cmp
(bad)
call
ss
daa
and
jne
mov
out
ror
les
imul
mov
push
imul
inc
sub
push
mov
fild
(bad)
xchg
adc
adc
imul
leave
cdq
sbb
mov
add
shl
inc
lahf
imul
jecxz
stos
(bad)
jl
xchg
fstp
outs
pop
movs
lahf
dec
addr16
je
out
cmp
jne
movs
aad
ret
jmp
retf
sbb
aam
xchg
push
and
push
(bad)
out
in
mov
in
inc
xlat
push
push
jmp
add
shl
mul
lea
fsubrp
cmp
cwde
add
mov
or
std
dec
mov
xchg
mov
or
(bad)
lods
jo
push
lock
sbb
std
or
and
mov
shl
icebp
xchg
out
sbb
mov
sbb
push
xor
sub
add
inc
ds
dec
mov
ins
pop
mul
adc
stos
push
aaa
add
sub
mov
dec
mov
adc
and
add
and
push
mov
add
lock
fstp
or
xchg
pop
jecxz
stos
pop
xchg
inc
test
pop
fstp
(bad)
int
sti
push
out
es
je
adc
hlt
mov
cwde
mov
pop
and
jl
xlat
sbb
outs
mov
cli
jmp
mov
test
push
fdivr
movs
loop
mov
div
sub
xchg
lea
shl
iret
mov
adc
imul
or
xor
sub
ret
mov
cs
adc
push
dec
jno
jno
xchg
xchg
xchg
ja
idiv
xlat
push
fiadd
int
xchg
inc
(bad)
inc
mov
(bad)
out
lock
call
(bad)
mov
icebp
shl
test
aad
cwde
and
push
pop
pop
in
push
scas
rep
jl
sbb
xchg
pop
(bad)
fwait
popa
cmps
xor
cmp
scas
push
mov
retf
shl
movs
sahf
push
fsubp
pop
test
outs
and
adc
imul
enter
mov
dec
dec
mov
adc
(bad)
daa
fnstenv
neg
iret
test
inc
sahf
pop
cwde
pushf
sbb
adc
stos
push
push
adc
jmp
add
mov
lock
xor
mov
pop
mov
cld
jge
mov
outs
jg
popf
sub
sti
push
cli
out
xchg
jnp
inc
xchg
std
adc
retf
aas
ror
mov
mov
out
mov
mov
popa
sti
dec
hlt
fcmovu
sub
push
retf
add
cdq
sbb
nop
push
xchg
cmps
mov
int
stos
test
inc
scas
push
shl
add
scas
pusha
mov
jo
cmp
lods
lds
out
cmp
cmps
inc
xchg
push
sbb
arpl
push
push
add
xchg
addr16
cli
pop
adc
jnp
xor
pop
mov
push
aam
cli
or
pop
(bad)
es
test
and
scas
xchg
or
jnp
mov
data16
cli
mov
je
and
mov
push
jbe
add
lock
sbb
sbb
fstp
mov
int
dec
sub
fidiv
iret
stc
xchg
cdq
in
add
sub
sub
(bad)
movs
(bad)
fcmovnbe
cmps
fldenv
fld
xor
or
or
mov
mov
mov
and
pop
mov
in
call
mov
xchg
xchg
popf
sbb
mov
aas
rol
test
push
jne
cdq
adc
movs
mov
inc
and
xor
nop
das
aaa
add
je
jo
ins
test
mov
adc
and
outs
push
int
mov
dec
std
jns
scas
pop
pop
adc
das
jecxz
adc
cwde
int
inc
rol
xchg
adc
repnz
add
xchg
addr16
in
outs
lods
je
ret
pop
in
ins
dec
retf
pushf
add
cmp
pop
ret
shl
xor
mov
ret
and
pop
addr16
outs
and
ret
adc
jl
push
mov
dec
jl
add
cmp
sti
stos
inc
sbb
lahf
enter
pop
or
aaa
xchg
and
mov
dec
sub
mov
xchg
xchg
sbb
inc
(bad)
out
ja
int3
push
and
xchg
sub
pop
jge
lahf
mov
leave
xchg
test
cmp
and
cmp
fwait
or
mov
mov
lds
enter
imul
xchg
sbb
or
mov
ja
adc
jmp
inc
xchg
dec
cs
icebp
push
mov
(bad)
in
or
ins
jg
and
lock
xchg
shl
cmp
mov
mov
loope
xor
pop
mov
(bad)
pop
int3
movs
shr
mov
push
mov
cmp
int3
push
push
and
mov
movs
scas
pop
(bad)
hlt
add
enter
sbb
gs
push
fs
movs
fcom
dec
sti
push
push
repz
ins
loop
jmp
popf
push
cmp
or
je
inc
aam
test
sub
dec
test
jbe
mov
and
push
mov
lods
jecxz
into
cli
sub
out
addr16
or
popa
das
pushf
loope
mov
repz
call
sbb
aam
jnp
mov
pop
xchg
inc
sub
cmp
mov
pop
nop
lea
mov
dec
push
(bad)
cli
xchg
dec
and
es
inc
jl
popf
adc
cmp
xor
inc
aam
lods
inc
push
aam
call
fld
(bad)
push
fisub
enter
add
jg
in
fisubr
retf
xor
push
or
inc
dec
add
test
jle
imul
mov
and
dec
sub
pusha
pop
pop
sbb
mul
jne
(bad)
pop
push
std
jbe
daa
dec
push
mov
xchg
inc
sub
ja
xor
add
(bad)
inc
in
rcl
cld
dec
cmp
test
mov
sbb
mul
jp
sbb
xor
sbb
dec
into
add
shl
enter
push
test
jp
pop
ror
mov
xchg
mov
test
out
cmps
or
repz
cdq
loope
xchg
js
jge
fwait
call
push
xlat
clc
out
jmp
dec
sbb
sub
xchg
dec
add
inc
inc
mov
xchg
or
(bad)
sbb
jmp
add
mov
mov
mov
icebp
into
mov
pop
inc
popa
dec
int
mov
mov
mov
xchg
mov
call
stc
add
jo
fiadd
mov
(bad)
xchg
fsub
hlt
pusha
fimul
cld
adc
scas
mov
sbb
stos
mov
cmp
scas
or
shl
mov
mov
add
hlt
mov
les
or
scas
dec
js
xchg
push
fcomp
pop
popf
adc
mov
das
or
fs
icebp
lahf
inc
jge
push
icebp
cmp
sub
retf
outs
call
cwde
lea
and
retf
mov
and
dec
in
mov
xchg
cmps
mov
or
fmul
cmp
js
xchg
ins
test
xor
aaa
test
or
inc
fwait
js
pushf
cs
and
popf
in
xor
sbb
inc
adc
and
mov
movs
cs
mov
scas
ins
sar
cwde
add
lea
mov
aam
fistp
ins
pop
xchg
push
leave
or
mov
push
cmp
pop
sbb
mov
or
es
scas
movs
sbb
lods
mov
mov
ret
jmp
xor
jp
into
jmp
lds
sti
jge
adc
sahf
xchg
jmp
xor
push
xchg
xchg
mov
or
(bad)
pop
movs
jmp
call
cs
sub
not
setge
aas
inc
pop
inc
xchg
rcr
dec
push
xchg
dec
(bad)
std
and
and
je
cmp
jbe
movs
or
jmp
pop
adc
mov
adc
out
es
cld
add
js
lds
inc
pop
pop
bound
dec
sti
test
(bad)
cld
push
retf
inc
ja
ins
xor
xor
dec
leave
jl
imul
stc
(bad)
cmp
daa
xor
int3
gs
xor
leave
and
cmp
fsubrp
in
pop
(bad)
scas
mov
dec
adc
inc
rcl
jmp
dec
fisttp
es
dec
cmp
pop
xor
bound
test
rcl
std
lock
cmc
or
les
inc
xor
dec
mov
hlt
mov
fsub
out
pop
adc
adc
xor
jecxz
test
sub
(bad)
daa
ficomp
aad
mov
loop
clc
mov
mov
movs
jne
or
cmp
pop
fsubr
dec
jns
jmp
in
fdivr
adc
mov
fbstp
repnz
push
cs
dec
mov
out
movs
push
lods
push
add
sbb
invd
mov
out
adc
mov
jne
mov
daa
fisttp
push
add
daa
dec
push
test
fmul
leave
and
or
pop
iret
push
loop
mov
push
std
aad
mov
mov
mov
jl
int3
push
cmp
pop
test
jecxz
pop
xor
cmps
loop
and
jp
mov
(bad)
fistp
dec
jb
mov
push
sbb
jbe
lock
cmp
cwde
mov
jmp
rcl
cmp
adc
out
push
scas
fsubr
in
mov
inc
or
sbb
jg
aaa
out
sub
pop
in
not
ins
in
cs
lea
test
mov
inc
in
inc
jmp
mov
mov
not
jo
(bad)
pop
adc
data16
xchg
push
jg
in
dec
retf
lock
and
ja
adc
(bad)
cs
dec
and
ret
jp
mov
mov
jmp
mov
inc
leave
dec
inc
pop
sub
or
pop
mov
or
or
ja
fwait
daa
sbb
mov
xchg
(bad)
pop
ins
in
pop
or
mov
movs
icebp
jle
pop
fwait
push
dec
out
iret
xchg
mov
cli
daa
mov
(bad)
sbb
movhps
outs
test
fcmovne
js
in
pop
(bad)
adc
ja
pop
cmp
ficom
sub
inc
xor
aam
lods
pop
push
outs
retf
popf
cs
cdq
retf
and
pop
jae
call
add
clc
jae
jbe
ins
mov
fs
(bad)
dec
lds
daa
inc
cmp
jmp
(bad)
add
pop
repz
dec
data16
add
movups
inc
inc
jmp
mov
jb
xchg
call
movs
popf
stos
push
shr
outs
inc
or
(bad)
or
in
xchg
jmp
(bad)
outs
dec
pop
dec
retf
push
mov
repnz
xchg
push
(bad)
jecxz
test
scas
hlt
jmp
nop
jbe
mov
cmp
adc
mov
fild
cdq
dec
popf
pop
mov
jb
pusha
push
ret
mov
sbb
mov
push
pop
cs
in
fucomp
pop
stc
mov
test
cmp
sub
mov
sub
jg
and
xchg
adc
inc
bound
lahf
fcmovne
xor
pop
fist
xor
loop
jmp
sub
icebp
aam
jnp
cmps
dec
test
cld
inc
dec
rol
dec
mov
test
in
pop
adc
or
and
adc
shr
addr16
cmp
scas
retf
or
pop
or
xchg
int
pusha
add
lods
arpl
adc
lods
jmp
aad
iret
inc
jg
test
mov
lods
sbb
jl
in
cmp
ror
add
mov
aad
adc
(bad)
scas
sub
shr
scas
adc
dec
adc
adc
inc
jg
mov
adc
retf
jmp
imul
push
pop
add
sbb
test
dec
shl
lea
push
inc
push
scas
test
cld
xor
dec
mov
fstp
jns
les
mov
xor
mov
iret
mov
call
les
or
(bad)
xor
jmp
sub
xor
(bad)
mov
std
mov
cmp
jecxz
push
sar
mov
cli
mov
in
rcr
mov
push
lahf
movs
xor
mov
mov
loope
xor
xor
out
lods
pop
int
jns
addr16
pusha
into
mov
xor
scas
mov
mov
adc
add
repnz
sbb
sub
cmp
pop
jp
jle
sub
jmp
xchg
jg
cmp
xor
ret
sar
push
lock
lahf
mov
and
clc
ins
(bad)
cld
out
gs
push
cmp
adc
dec
pop
cmp
pop
inc
mov
sti
mov
dec
inc
adc
pop
shr
call
rcr
xchg
mov
jmp
push
inc
rcr
dec
mov
push
imul
mov
js
or
test
pop
iret
test
dec
add
mov
or
(bad)
or
scas
jne
scas
jl
jns
sti
push
imul
shl
pop
jg
jbe
xchg
add
mov
sub
pop
cmpxchg
add
xchg
push
sbb
les
xchg
ret
les
cmps
pop
cdq
cwde
mov
mov
ja
xor
inc
cld
jo
das
out
outs
fisubr
fs
cs
pop
mov
sbb
xchg
inc
ins
out
ss
repnz
xor
movs
pop
xchg
mov
adc
ror
cmp
in
xor
rcr
sub
mov
sbb
xchg
jo
mov
das
add
fild
cmp
push
mov
push
outs
sub
pop
adc
pop
(bad)
pop
and
icebp
cmps
aam
adc
in
jae
aaa
pop
mov
js
sti
xor
shl
bound
fcom
dec
das
data16
aaa
sbb
call
fbld
dec
xor
and
mov
in
cmps
repz
call
cmp
aas
cmp
int3
mov
mov
(bad)
iret
push
(bad)
jmp
adc
add
fist
ds
sub
je
sub
xor
hlt
jl
push
mov
popf
imul
arpl
out
pmaxub
iret
inc
ret
fst
clc
pop
dec
adc
repnz
fst
clc
and
push
(bad)
sub
mov
jge
mov
pop
je
mov
sbb
jg
das
mov
aad
cli
ja
push
imul
lock
clc
mov
ror
adc
mov
push
pop
neg
(bad)
rol
pop
test
and
int
mov
cmp
and
les
fcom
ficomp
ins
push
mov
sub
pusha
movs
dec
shr
popa
and
or
push
xchg
push
xchg
and
pop
sbb
out
xor
and
jo
push
cmp
xor
and
sbb
cli
into
hlt
(bad)
(bad)
cmp
or
jb
pushf
mov
xor
cwde
(bad)
mov
retf
jle
xchg
into
imul
mov
dec
jae
dec
add
retf
mov
sbb
dec
xor
add
or
sbb
pushf
xchg
rcr
jle
xchg
loope
sahf
enter
lock
pop
rol
pop
lahf
inc
mov
dec
test
mov
cmp
les
jbe
(bad)
ja
repnz
popa
retf
adc
push
mov
fbstp
popa
mov
add
call
test
add
sub
call
scas
in
mov
enter
in
dec
cmps
sbb
or
pop
icebp
jmp
mov
mov
aaa
add
popf
rcr
jnp
jmp
adc
cwde
jnp
mov
mov
mov
pop
nop
cmp
jo
nop
jecxz
jle
arpl
xor
sub
cwde
mov
push
and
dec
sub
sub
out
pop
jp
(bad)
mov
out
stc
sbb
xlat
std
retf
outs
pop
in
(bad)
ds
inc
repz
sub
jle
adc
outs
jp
jmp
fsub
loopne
loopne
call
add
mov
pushf
neg
fimul
or
pop
fwait
int
sar
cli
bound
mov
inc
push
in
mov
pop
dec
jne
mov
cs
loop
push
mov
lods
lods
inc
je
mov
inc
ss
mov
shl
mov
pop
bound
dec
(bad)
xlat
mov
xchg
cmps
ja
xchg
push
mov
and
mov
sbb
xchg
ds
daa
and
(bad)
(bad)
xor
fs
test
test
xchg
cdq
adc
xchg
scas
or
movs
int
jne
ins
pop
nop
push
ins
cdq
popa
pop
cmp
std
sub
adc
jne
xchg
aaa
or
jmp
retf
nop
mov
fsubr
lds
jne
cmc
sub
or
arpl
mov
jmp
fidiv
mov
icebp
sub
repz
add
in
gs
xchg
push
xor
push
pop
(bad)
jl
stos
dec
mov
xchg
jae
imul
xchg
test
cs
push
or
mov
popa
daa
inc
push
ret
fimul
test
xor
pop
mov
aad
hlt
enter
fild
xchg
imul
sub
aas
xchg
xor
inc
fld
inc
jo
mov
adc
arpl
int
cmp
je
inc
fisub
(bad)
mov
les
in
xor
ds
or
int3
clc
scas
test
imul
adc
adc
mov
(bad)
xchg
cld
rcl
xchg
dec
xchg
jo
pop
loop
sar
lock
dec
push
call
shl
mov
std
push
stc
and
leave
sub
sbb
mov
cld
cmp
xchg
sub
add
xor
jae
scas
enter
(bad)
xor
test
jle
jns
and
xor
int
sbb
fucomp
push
mov
push
pop
repz
bound
popa
xchg
mov
inc
loope
xchg
sahf
aas
(bad)
mov
aaa
cmp
pop
or
bound
dec
rcr
pushf
xchg
loope
push
sub
loopne
neg
sbb
xchg
iret
and
sahf
adc
imul
add
pop
lock
cmp
aam
mov
rol
pusha
std
mov
fldl2t
ja
and
lahf
inc
and
push
jmp
out
popa
pop
iret
clc
mov
test
add
sbb
(bad)
add
(bad)
jbe
(bad)
mov
xchg
mov
sub
sar
inc
clc
das
sub
(bad)
lahf
cmc
add
pop
inc
mov
dec
push
lods
outs
loope
xor
shl
lock
mov
aas
stos
call
xchg
mov
and
ss
or
mov
mov
into
jp
push
bound
sub
fs
call
adc
loope
cmps
adc
xlat
dec
stos
into
inc
xchg
jnp
jno
loop
fmul
fcmovbe
inc
popf
inc
icebp
xor
jl
push
fcmovbe
jmp
push
out
jmp
jg
retf
popa
add
pop
or
jb
xor
sbb
lahf
enter
pop
add
jg
pop
(bad)
neg
and
mov
dec
out
gs
xor
jmp
push
pop
in
mov
sub
push
jbe
pushf
xchg
sbb
pop
cmp
push
xor
aas
inc
ss
(bad)
push
das
les
jge
out
fsub
sub
inc
stos
out
aaa
sub
pop
cmps
inc
xchg
sbb
mov
xor
retf
jecxz
xchg
mov
fild
sti
ror
stos
arpl
loope
lds
and
pop
mov
jbe
(bad)
lahf
(bad)
call
in
(bad)
fdiv
cmps
mov
cmp
outs
xchg
addr16
add
fdivr
push
das
psubusb
outs
xchg
jmp
jns
fdivr
jge
or
(bad)
mov
xor
retf
daa
or
inc
mov
jmp
and
shl
popf
je
xlat
enter
adc
add
in
fwait
jl
ret
imul
cmp
rcl
lahf
aad
xor
cmp
jle
push
xor
mov
inc
xor
fcom
rol
aaa
bound
and
test
lods
xor
mov
add
xchg
mov
out
jb
shr
scas
loopne
jg
mov
push
add
lds
pop
jmp
lods
lahf
shl
es
cli
add
cmp
add
sub
mov
test
xor
stos
pop
fnstcw
xor
mov
mov
scas
rcr
sbb
sub
mov
test
in
push
(bad)
and
mov
sbb
data16
mov
cli
add
mov
ja
sub
fs
inc
push
push
addr16
add
bnd
addr16
fsubr
mov
fisubr
push
movs
test
(bad)
repnz
xor
je
stos
retf
sub
addr16
cmp
xchg
ret
dec
adc
les
ss
or
push
mov
in
mov
pop
mov
out
cmp
clc
push
out
sbb
inc
xor
ret
test
jmp
jo
mov
psubsb
popf
retf
test
dec
sbb
les
cmc
lods
adc
hlt
pop
scas
or
cmp
inc
dec
sub
xchg
pop
sub
sub
mov
arpl
cmps
pop
retf
add
sub
mov
(bad)
in
or
scas
outs
mov
mov
daa
dec
add
sbb
xchg
adc
in
fisubr
fstp
cmp
xor
jns
icebp
cmc
xchg
push
xchg
daa
dec
jns
lock
arpl
test
mov
fdivr
push
jno
jnp
scas
mov
xlat
mov
mov
and
push
sbb
jbe
jo
cmovs
pop
gs
popf
test
sti
dec
fisttp
adc
test
test
test
mov
xchg
jne
mov
add
dec
das
es
loop
inc
scas
jmp
mov
scas
outs
or
mov
fisubr
and
xchg
stc
cmp
pop
pop
cmps
add
add
pop
jg
mov
scas
xchg
neg
pusha
xchg
lock
fst
test
mul
shl
sbb
bound
aad
sub
mov
add
not
xchg
jl
rol
dec
arpl
(bad)
or
and
pop
pop
or
inc
and
ror
js
xchg
pushf
lds
push
inc
push
jns
(bad)
and
(bad)
jae
mov
xchg
int3
ds
jmp
pushf
jne
mov
retf
pop
or
int
adc
aas
add
sbb
sahf
cmc
or
jge
push
jg
push
jmp
lods
jmp
mov
pop
mov
and
ins
push
adc
lods
ret
push
ss
inc
cmp
mov
test
and
pop
stos
mov
mov
ret
retf
or
scas
xchg
push
cmps
ja
pop
xor
popf
push
pop
(bad)
in
adc
(bad)
push
test
dec
(bad)
cmps
mov
jo
xor
shr
add
jp
sbb
mov
xchg
ss
and
jns
cmps
gs
ins
add
cmps
sub
ins
add
in
stos
mov
adc
fimul
fcmovnb
sub
outs
mov
retf
add
mov
ds
mov
inc
lods
push
js
mov
cmp
or
mov
sbb
xor
nop
ret
(bad)
(bad)
xchg
mov
mov
cmp
mov
cwde
mov
mov
ins
xor
test
add
cdq
aad
retf
lock
ds
aas
lea
push
test
push
dec
cwde
fild
fwait
and
outs
repz
and
lea
dec
aaa
movs
jmp
int
sub
fld
pop
fstp
pop
fadd
xchg
fnstsw
leave
pop
mov
ror
pop
repz
stc
sahf
jp
xchg
pushf
jecxz
dec
aam
inc
xchg
popa
loope
pop
adc
dec
je
or
mov
mov
or
ja
cmp
test
enter
in
std
movntq
call
icebp
or
adc
jne
arpl
mov
test
bound
mov
push
mov
bound
(bad)
jecxz
and
cli
sub
inc
mov
pop
xor
test
cmp
sub
mov
dec
cmps
shr
in
data16
xlat
mov
jb
imul
or
and
cmps
movs
and
sub
ss
add
fsubr
out
mov
cmp
mov
aad
in
push
les
test
pushf
dec
adc
jmp
sbb
adc
mov
ins
in
movs
inc
fistp
fsub
scas
cmp
push
dec
add
sqrtps
xchg
out
in
mov
sub
jns
or
or
sbb
and
movs
cmp
ss
mov
add
push
dec
neg
or
daa
test
mov
movs
dec
jmp
(bad)
or
mov
ret
mov
and
in
in
cli
div
loope
mov
xlat
(bad)
outs
push
sbb
dec
inc
pop
test
xchg
push
(bad)
sahf
add
fist
lea
fst
cld
fcom
movs
add
mov
inc
neg
push
pop
jecxz
outs
push
call
jns
push
lahf
sub
fs
dec
sub
loopne
ins
inc
mov
jecxz
in
pop
mov
sti
test
movs
push
test
mov
aaa
inc
xchg
cli
or
sbb
hlt
mov
adc
es
dec
loope
fld
popa
or
mov
inc
jge
aad
lahf
lahf
jns
and
mov
jne
mov
add
popf
out
out
inc
call
loope
xchg
cmps
rol
inc
fs
push
std
icebp
lods
in
cmp
mov
mov
adc
in
xor
push
fcomp
jmp
out
jmp
inc
mov
mov
pop
les
push
push
or
xchg
and
inc
imul
and
lods
add
mov
fldcw
stos
stc
or
inc
lock
repz
or
data16
pop
jl
rol
jp
jnp
pop
gs
(bad)
call
movs
out
inc
jbe
ret
clc
mov
mov
xchg
jecxz
rcl
mov
adc
or
adc
and
iret
mov
pop
dec
and
out
daa
xchg
sbb
pop
jle
push
or
daa
xlat
and
not
cmp
nop
jae
and
sub
shl
scas
dec
push
fld
xlat
pop
push
enter
sub
sub
sbb
jo
mov
push
loopne
loop
popa
imul
rcl
and
fisttp
pop
cmc
add
sbb
dec
lea
mov
lods
jbe
in
stos
push
fbstp
push
mov
inc
jnp
push
add
add
xchg
jp
mov
pop
push
mov
pop
dec
push
jp
inc
lock
push
xchg
cmp
out
in
retf
jmp
sub
fucomp
mul
mov
leave
daa
mov
pusha
and
cmp
nop
fimul
in
icebp
pop
out
hlt
ins
pushf
adc
or
cmp
pop
test
(bad)
add
adc
xor
or
mov
add
les
push
sub
stc
out
xchg
leave
dec
dec
and
pop
adc
imul
mov
sbb
mov
cdq
push
push
pop
aas
(bad)
into
sbb
ret
ja
call
pusha
cmps
das
in
fist
(bad)
cld
pop
loopne
daa
ins
pop
cmps
jmp
ret
pop
mov
push
pop
jae
fcomi
out
in
sbb
popa
jecxz
mov
nop
aaa
mov
adc
popa
push
xchg
(bad)
outs
xlat
mov
push
cld
arpl
cmp
or
dec
jp
push
js
inc
loop
mov
jmp
sub
xor
pop
dec
mov
ret
xlat
fisubr
sub
mov
lods
(bad)
ror
aad
retf
sub
iret
xchg
jle
test
add
fisttp
mov
jmp
(bad)
jnp
jb
mov
adc
sub
mov
sti
xor
fdiv
je
dec
push
rcr
xchg
out
fs
cmps
aam
das
sub
push
ja
stc
addr16
shl
addr16
push
stos
arpl
jbe
retf
test
std
sbb
je
loope
cs
pop
push
cmp
aad
mov
aas
mov
jecxz
scas
stos
movs
fdivr
out
cmovs
out
mov
test
mov
xchg
push
fimul
jns
popa
lods
call
push
(bad)
jge
aas
pop
cld
push
(bad)
in
mov
inc
add
pop
dec
bnd
xlat
stos
test
fadd
inc
lods
cmp
aad
leave
or
adc
and
jp
call
dec
or
push
neg
sub
sbb
pop
cmps
hlt
sti
or
call
(bad)
pop
xor
push
bound
sub
hlt
rcl
aam
ins
mov
sub
scas
pop
jb
jecxz
mov
push
push
pop
jmp
and
mov
dec
out
stos
pushf
mov
test
sbb
ja
(bad)
ror
pop
dec
lahf
cmp
cdq
pop
xor
xchg
sbb
jmp
in
xor
and
inc
icebp
imul
add
ss
test
inc
(bad)
adc
call
push
inc
inc
stos
iret
sbb
sbb
dec
add
stos
dec
aam
data16
call
push
mov
mov
cmps
je
sub
pop
lahf
dec
pop
pop
mov
imul
pop
dec
sbb
and
inc
jg
daa
fisub
add
sub
mov
cld
retf
out
sub
mov
addr16
pop
sbb
pop
retf
add
pop
or
outs
mov
and
pop
mov
push
movs
stc
in
pop
xchg
push
xchg
sub
movs
in
xchg
out
daa
popa
mov
and
push
fs
shl
sub
aas
push
loop
movs
sub
cmp
bnd
push
dec
jle
cli
fs
imul
or
adc
imul
enter
inc
cmp
cmp
sahf
sbb
dec
push
leave
inc
xchg
add
or
jb
adc
jae
repnz
and
jl
enter
and
es
or
adc
push
sahf
and
pop
jl
jmp
push
dec
mov
push
enter
jns
cmp
add
and
inc
jns
outs
clc
adc
ret
rcr
lds
mov
sar
push
ins
iret
inc
cmp
inc
cld
fisub
xchg
cmps
and
je
xor
mov
call
retf
xchg
leave
int3
sub
xchg
mov
add
adc
test
movs
into
add
pusha
pop
ret
shr
lock
dec
(bad)
push
push
cmps
imul
cmps
fcomp
ins
and
or
repz
xchg
dec
sbb
repnz
dec
cmps
and
shl
rcl
mov
push
dec
pop
pop
ud1
stc
sbb
sahf
dec
push
rcr
sub
dec
scas
retf
sbb
jl
adc
and
cmp
out
sahf
mov
push
in
dec
stc
std
xlat
outs
sub
inc
inc
xchg
(bad)
in
jmp
jecxz
dec
(bad)
loope
shl
jae
bound
outs
or
adc
or
mov
lahf
ret
push
add
inc
push
js
mov
and
cmps
sbb
repnz
inc
xchg
xchg
jns
dec
or
dec
inc
leave
bound
and
(bad)
retf
hlt
and
mov
addr16
sbb
call
inc
xchg
cmp
(bad)
mov
jmp
lds
jle
cmc
jge
cmp
js
mov
sti
(bad)
test
iret
mov
mov
add
daa
cmp
mov
jae
popf
ds
push
or
or
nop
cmp
xor
retf
xchg
cli
(bad)
ds
dec
push
inc
cmp
out
mov
nop
sub
mov
outs
jne
sahf
call
dec
xor
aaa
add
dec
imul
sbb
das
push
pop
bound
sbb
(bad)
inc
fsubr
adc
adc
mov
imul
inc
sub
sub
test
inc
aad
scas
cmps
daa
inc
xchg
stc
adc
cdq
push
movs
emms
dec
mov
repz
mov
shl
and
clc
mov
push
(bad)
neg
adc
bswap
mov
in
push
hlt
or
add
push
movs
out
mov
icebp
jmp
fild
and
adc
xchg
dec
mov
arpl
inc
push
xor
xor
cli
outs
jns
pusha
cmp
sub
mov
sahf
pextrw
lods
mov
movs
lods
popf
inc
mov
out
dec
adc
cmp
inc
cmps
cwde
jb
pop
shl
add
push
mov
call
das
fmul
inc
popa
xchg
ror
add
push
adc
into
jmp
out
jmp
push
aaa
sbb
or
outs
jne
mov
mov
(bad)
push
cdq
les
push
stc
xlat
jbe
inc
jne
outs
or
push
dec
cmps
inc
sub
hlt
mov
pop
int
stos
dec
mov
sub
jmp
pop
hlt
jge
addr16
jae
hlt
push
adc
push
xor
mov
mov
inc
dec
hlt
add
leavew
ja
push
(bad)
mov
xor
call
push
popf
(bad)
mov
mov
and
js
adc
imul
stc
stc
pop
in
rcl
pop
sbb
and
mov
add
adc
xor
test
icebp
cld
xchg
dec
mov
mov
mov
and
scas
push
clc
cmps
test
dec
cmp
inc
cld
sti
inc
ret
fwait
imul
mov
mov
sub
(bad)
and
dec
xchg
xor
and
cli
push
dec
retf
sti
test
(bad)
fist
pop
mov
int
in
push
(bad)
or
xor
(bad)
mov
(bad)
test
and
mov
int3
in
out
js
or
cld
gs
(bad)
jp
movs
cmp
mov
pushf
dec
or
arpl
add
lods
mov
jnp
dec
push
xor
fnstenv
imul
bound
repz
pop
or
push
ss
stos
mov
add
or
push
stos
jmp
je
sti
add
mov
xchg
ret
cmp
inc
cdq
push
cmp
push
dec
sar
jl
adc
call
out
and
in
int
cmp
ror
xchg
jmp
pop
push
daa
pop
imul
cmps
pop
xor
xor
cmp
popf
test
pop
je
(bad)
cs
les
mov
ret
int
in
imul
loopne
cmc
or
jns
shl
add
imul
ss
in
sbb
xor
cmp
sbb
cmp
hlt
lods
xor
call
test
aad
loop
sbb
stos
cmp
out
adc
retf
jno
inc
cmp
dec
retf
mov
cmp
xor
sbb
fnstenv
mov
ss
add
push
repz
add
or
mov
inc
mov
adc
sbb
ds
or
fwait
nop
sub
es
fwait
xchg
push
sub
fbstp
mov
repz
je
or
pop
or
cmp
push
sub
mov
or
imul
lea
in
cs
xor
lea
out
stos
cmp
jg
(bad)
cwde
xchg
hlt
sbb
cmp
or
xchg
lea
jecxz
cmc
hlt
jns
xor
cld
pop
(bad)
pop
mov
push
mov
cmps
retf
pop
mov
rcl
out
jmp
jae
dec
jb
and
data16
mov
mov
rol
(bad)
xlat
xlat
push
and
lods
or
adc
les
ret
jmp
sbb
adc
xchg
adc
mov
sub
or
enter
xchg
test
xchg
stos
xchg
mov
and
int3
and
inc
pushf
dec
jg
clc
out
xor
test
jb
cmps
xchg
mov
jmp
cmps
jb
mov
xor
xchg
mov
and
icebp
stos
add
pusha
icebp
cmp
sub
pop
popa
ds
in
inc
cs
test
mov
push
js
adc
outs
ret
imul
mov
xchg
inc
sub
cwde
inc
stos
xchg
dec
xor
push
lahf
pop
ins
dec
xchg
add
pop
dec
xor
shr
sub
outs
sahf
sbb
dec
xor
adc
mov
aad
cmp
dec
lods
test
imul
shr
push
inc
jbe
adc
push
das
mov
pop
inc
inc
scas
xchg
arpl
lock
dec
(bad)
push
mov
(bad)
js
cmps
ss
mov
jg
fsubr
mov
dec
inc
stos
imul
dec
mov
fld
xchg
and
mov
add
or
pop
loope
mov
icebp
add
les
fisttp
pop
push
nop
ins
pusha
popa
es
loop
(bad)
cmp
mov
jne
mov
out
fdivp
aad
sahf
shl
mov
xchg
fadd
xchg
retf
mov
fild
(bad)
cli
dec
xchg
retf
movs
xchg
es
(bad)
js
mov
sub
pop
hlt
add
ret
fs
xor
ds
loope
sbb
cmp
cmp
int
mov
sti
jmp
clc
xlat
cmps
pop
xchg
jb
pop
and
sbb
mov
retf
arpl
or
jo
aaa
push
mov
call
add
pavgw
pop
loopne
mov
and
add
in
int3
test
jno
test
fsub
mov
or
push
cmc
xlat
adc
sub
push
or
or
mov
or
or
jo
push
or
repz
test
int3
xor
mov
push
inc
and
mov
ror
and
pop
pop
(bad)
push
lahf
in
mov
call
or
scas
cmp
cmp
dec
push
add
cmp
xchg
ja
lahf
adc
xchg
jle
int
mov
inc
push
xlat
jne
adc
dec
pop
xor
jb
movs
maxps
jmp
in
pusha
ds
mov
in
fbstp
sbb
add
in
dec
cmp
mov
ins
sbb
cmp
mov
mov
retf
jmp
in
cmp
fist
pop
or
mov
loopne
daa
icebp
and
pop
pop
repz
jp
leave
lods
mov
sbb
stos
data16
and
cwde
test
ret
fwait
push
push
and
jnp
jbe
mov
xchg
add
lahf
push
repz
(bad)
test
inc
in
sub
sbb
xor
fsubr
ins
xor
push
repz
hlt
adc
jbe
adc
stos
ror
xchg
pop
out
call
leave
stc
xor
and
cmp
push
stc
shl
out
nop
pusha
je
sub
cmp
sahf
add
rcl
mov
pop
jle
mov
test
outs
mov
arpl
loopne
and
dec
mov
(bad)
imul
xor
pop
pminsw
mov
mov
xchg
int3
loopne
and
sbb
mov
ret
pop
pop
je
aaa
mov
in
fcomp
(bad)
sti
inc
movs
cmps
or
sub
mov
pusha
xor
xor
or
fidivr
shr
psllq
mov
test
pop
inc
mov
mov
sbb
dec
push
push
movs
cmp
mov
inc
or
mov
fst
cmp
sbb
inc
mov
pop
mov
add
mov
test
and
scas
fisttp
or
scas
outs
movs
fcomp
or
sub
pop
mov
mov
mov
ret
sub
loopne
leave
mov
pop
fdivr
lods
xchg
push
or
mov
sbb
movs
dec
data16
into
inc
cli
push
and
sbb
ins
hlt
test
dec
outs
movs
and
adc
call
cmp
push
lods
out
jbe
cmc
mov
and
jle
cmovbe
loope
scas
into
sbb
and
clc
mov
dec
jecxz
add
aam
loop
lods
push
push
rol
ja
into
icebp
(bad)
dec
sub
cmps
test
repnz
idiv
das
pop
or
in
call
retf
loop
mov
(bad)
daa
xchg
shl
sbb
inc
fdiv
pushf
jbe
test
sbb
mov
add
pop
rol
xor
jns
aad
adc
xor
adc
or
jnp
int
dec
cmps
inc
pop
fistp
xor
mov
test
cmp
adc
cmp
stc
add
nop
mov
sub
call
stos
pop
xchg
add
pop
cli
(bad)
iret
jae
scas
add
mov
adc
or
nop
popa
ror
or
int
jae
jge
jno
les
xor
rcl
out
fiadd
mov
pop
push
imul
lds
fdivr
fnstenv
xor
add
pop
rcr
mov
int3
xlat
fsub
dec
ds
mov
repnz
cmp
int
push
ja
aam
cld
retf
js
sahf
mov
sahf
call
(bad)
fsubr
add
(bad)
int3
into
mov
push
ja
xchg
pushf
test
cmc
enter
scas
out
fwait
in
dec
sub
sahf
lods
mov
jo
scas
outs
jno
sbb
arpl
jno
jmp
loopne
in
outs
mov
mov
(bad)
rcl
adc
loope
adc
outs
inc
inc
lea
and
arpl
fstp
jnp
push
xchg
xchg
(bad)
cmc
dec
clc
jae
ins
sbb
in
xchg
or
mov
das
stc
sbb
push
cmp
ror
ror
cmp
dec
aam
sar
lahf
inc
call
jno
mov
pusha
(bad)
lods
cmp
test
xlat
int
or
fsub
repz
pop
mov
add
jg
not
inc
jmp
icebp
sbb
lds
int3
push
ret
xor
mov
xchg
or
retf
add
cmps
dec
add
cmp
and
ins
cld
inc
add
xchg
xchg
mov
pop
jl
fst
aas
fist
mov
div
cwde
stos
xor
cmps
xor
retf
pop
cmp
call
inc
ficom
push
xor
dec
iret
daa
fidivr
jno
sbb
mov
xchg
int
into
out
mov
or
sub
in
jl
mov
pop
out
inc
or
fisttp
mov
mov
jae
inc
(bad)
aaa
cld
test
test
iret
or
jae
dec
mul
pop
stc
mov
and
mov
push
repz
mov
loop
sub
push
rcr
rcr
cmp
(bad)
xor
pop
xor
and
hlt
cmp
xchg
push
int3
cmps
nop
je
push
loope
mov
aaa
pop
cwde
jo
xchg
out
xchg
popf
sbb
sub
mov
shl
mov
xchg
fsubr
mov
pop
cmp
sub
pop
test
adc
jl
cmp
sbb
mov
xor
(bad)
dec
cmp
cdq
jle
jns
dec
push
and
adc
mov
mov
push
and
mov
inc
loop
(bad)
mov
lahf
cmp
or
adc
mov
outs
add
mov
arpl
ja
int3
push
sub
sbb
jle
pop
cmc
clc
mov
outs
(bad)
cwde
mov
loopne
and
cs
push
push
nop
sbb
xchg
sub
jecxz
lods
mov
inc
mov
in
sub
sbb
adc
mov
lods
lds
inc
jl
sub
loopne
into
xor
in
cli
inc
jne
(bad)
pop
add
sbb
in
mov
and
jnp
dec
aaa
adc
lods
out
jmp
pop
cmp
xchg
pop
push
xchg
xchg
clc
(bad)
mov
shr
loopne
inc
sar
mov
in
jle
or
sti
mov
bound
pop
dec
in
(bad)
imul
jae
ins
or
push
sbb
mov
fidivr
xacquire
cs
addr16
pop
ds
push
fwait
sar
push
xor
sub
xchg
pop
push
ins
inc
outs
stos
test
popf
fbstp
xchg
scas
cmc
mov
loope
test
retf
scas
fidiv
repz
inc
cmp
or
xor
loop
mov
jns
sub
cli
add
push
fidiv
push
repz
ja
inc
idiv
sbb
mov
cli
adc
call
stos
mov
sub
add
add
cmp
jmp
push
das
cdq
popa
sub
mov
into
mov
or
in
movs
cmps
pop
inc
push
push
pushf
inc
out
lock
scas
ins
call
retf
repz
cmc
nop
mov
movs
das
cli
sub
clc
jge
das
mov
inc
into
pop
and
cmp
adc
pop
mov
sbb
pop
sbb
xchg
jne
movs
push
push
xchg
jae
out
jl
imul
mov
xor
xor
fs
inc
cmp
js
in
mov
sbb
mov
push
jp
cmps
enter
mov
push
out
jnp
movs
mov
dec
add
cmp
and
and
xlat
or
mov
push
fwait
push
mov
xchg
mov
push
test
(bad)
retf
(bad)
cmp
scas
movs
fldenv
inc
jg
in
sub
je
repz
loope
std
call
dec
xlat
xor
call
xor
push
sub
imul
fst
jbe
mov
div
cmp
dec
adc
inc
mov
xchg
dec
adc
cli
sub
push
and
loop
stos
xchg
mov
icebp
loop
clc
jmp
mov
(bad)
lods
adc
sbb
loopne
clc
inc
int3
mov
jmp
enter
ret
sub
or
out
imul
scas
mov
outs
xor
mov
xchg
mov
push
mov
arpl
mul
jl
mov
in
das
(bad)
ficomp
pop
xor
stc
dec
stc
push
cwde
popa
jge
mov
data16
lock
sbb
pushf
test
aas
push
pop
add
in
cmp
cmps
sahf
aad
and
stc
fldenv
fld
pop
jno
ret
pusha
push
(bad)
jo
stos
popf
add
aad
adc
shl
add
cmp
jbe
fdivp
outs
xor
outs
fnstenv
cmp
jge
js
dec
rcl
inc
loop
(bad)
jecxz
mov
lock
push
ret
movs
or
and
ss
adc
ins
and
cmp
retf
test
xchg
fwait
nop
push
xlat
push
dec
in
fwait
outs
sub
lods
test
lods
retf
mov
pop
fist
mov
push
popa
fbstp
adc
cmp
test
mov
inc
xchg
stos
fs
mov
push
mov
(bad)
cmp
pop
mov
(bad)
int3
lods
enter
test
dec
mov
jno
adc
mov
jno
jge
fs
sbb
fidivr
retf
lahf
out
ins
jecxz
push
add
sbb
jmp
jge
int
into
add
sbb
or
pop
or
dec
ss
push
aam
loop
popf
dec
add
aam
fisttp
pop
inc
sub
lea
jge
adc
ja
bound
and
mov
sub
inc
ins
sub
pop
test
jo
out
inc
cmps
ins
push
jmp
nop
add
sbb
add
push
mov
fcom
outs
leave
cmp
lods
jge
pop
or
xchg
scas
int
mov
cmp
js
fcmovbe
int
xlat
idiv
inc
rcl
dec
xchg
cmp
les
jne
xor
inc
js
nop
cmps
push
enter
dec
pop
(bad)
adc
data16
out
mov
scas
jl
sbb
addr16
adc
add
ins
iret
(bad)
mov
aad
add
aaa
xchg
repz
ja
dec
push
in
inc
xlat
outs
push
cmp
xor
clc
xlat
cs
imul
inc
and
fld
ret
in
inc
cli
add
std
shl
push
ds
mov
daa
imul
in
(bad)
call
ror
nop
stos
dec
ja
mov
xchg
mov
or
sbb
dec
ror
xlat
(bad)
stc
mul
xchg
fwait
(bad)
adc
fs
out
popf
into
mov
jne
inc
xchg
test
jae
(bad)
xchg
mov
sbb
mov
inc
mov
jo
leave
inc
adc
test
add
and
jns
movs
push
cmc
push
or
(bad)
in
scas
dec
iret
pop
jbe
or
jmp
mov
sbb
jmp
lods
xor
in
push
stc
push
hlt
gs
loopne
(bad)
mov
test
imul
in
lahf
movs
shr
scas
cmp
daa
and
mov
cmps
test
cmp
js
xchg
sub
mov
pop
xchg
pop
je
fld
pop
dec
pop
xchg
dec
mov
pop
mov
push
dec
fiadd
call
add
xor
mov
clc
std
and
dec
clc
std
jbe
jo
aaa
sbb
jne
xchg
mov
(bad)
int
arpl
jg
inc
sti
(bad)
loop
and
std
adc
data16
ds
and
ins
jmp
cmps
mov
cmp
(bad)
loop
mov
stc
mov
sar
rcl
xor
adc
sbb
pop
(bad)
fs
or
(bad)
cli
adc
adc
fstp
jg
popf
jg
in
push
fisubr
shl
movs
dec
push
cmp
pop
push
imul
arpl
out
rol
push
adc
inc
rol
sbb
cmp
sbb
sbb
nop
fadd
sbb
fcomip
mov
push
retf
out
ins
adc
push
jbe
sbb
in
mov
add
mov
lods
or
fist
fisttp
ins
out
enter
or
adc
pushf
dec
mov
in
fcmovnbe
mov
ror
pop
adc
inc
xor
ret
sub
mov
aad
fild
clc
scas
ret
cld
call
sub
icebp
nop
call
cdq
cmc
in
sbb
mov
and
nop
stc
add
fbld
inc
xor
test
add
rol
pop
or
jno
push
fsub
xchg
mov
and
mov
scas
mov
inc
into
xchg
mov
sub
fld
mov
or
cmp
or
in
sbb
mov
pop
pop
cmp
push
shr
inc
jae
push
inc
mov
out
ins
adc
movs
daa
xlat
inc
add
gs
pop
push
jp
push
cmc
das
jl
test
pop
sar
add
cmp
mov
adc
repnz
call
xchg
inc
push
lds
push
int3
cld
jecxz
adc
into
in
dec
cli
cmp
(bad)
imul
sti
xchg
dec
loop
ins
push
mov
and
and
or
popa
fdivr
sub
repnz
mov
scas
sar
pop
mov
in
or
retf
int
test
push
pop
or
inc
sub
dec
aad
les
retf
neg
mov
cmp
ret
push
daa
sbb
jmp
sbb
push
cmps
xor
xchg
int3
dec
and
ds
add
xor
stos
inc
push
popf
sar
mov
mov
(bad)
enter
push
pop
fwait
jecxz
jbe
loopne
test
into
lock
(bad)
xchg
dec
fdiv
mov
jecxz
adc
mov
fld
mov
xor
sahf
adc
repnz
jmp
push
adc
popf
int
ss
icebp
retf
cmps
sar
inc
and
sahf
xchg
xlat
call
or
retf
cmps
xchg
test
fadd
loop
rol
scas
pop
xor
and
nop
ror
cld
cdq
neg
sbb
leave
or
cmc
dec
ficom
jbe
loopne
cwde
push
int
jge
jecxz
mov
sti
int
ror
stos
lods
(bad)
(bad)
in
test
mov
jns
jg
jle
cmps
dec
mov
clc
push
gs
out
mov
arpl
fild
aaa
in
mov
cmp
or
movs
fidivr
out
push
scas
and
adc
dec
retf
cli
adc
add
mov
jp
push
or
push
dec
(bad)
icebp
dec
mov
test
or
(bad)
and
mov
cdq
xchg
mov
mov
and
push
xor
aad
dec
jle
mov
push
mov
lahf
cli
(bad)
int3
cmp
icebp
jns
loopne
std
imul
mov
shl
sbb
pop
cdq
mov
push
hlt
cli
ficomp
call
dec
nop
inc
leave
je
cmp
scas
xor
jge
mov
not
or
mov
cli
inc
or
repz
popf
jle
out
mul
int
sbb
clc
jbe
mov
repnz
hlt
iret
add
ds
jno
mov
outs
or
fdiv
sub
sub
inc
(bad)
mov
int
mov
out
inc
xor
mov
cs
fld
xor
mov
in
mov
adc
stos
cmps
sbb
xor
inc
idiv
cs
leave
enter
and
mov
aaa
dec
sub
sbb
cmps
ret
out
xchg
dec
scas
add
in
loopne
inc
ror
fwait
xchg
clc
push
pop
(bad)
push
into
mov
fistp
xchg
dec
in
mov
psrld
mov
cdq
inc
and
fisttp
int3
mov
test
xchg
xor
mov
and
push
movs
cmp
loop
sub
pop
xor
mov
or
pop
(bad)
xor
loope
(bad)
xor
pop
inc
bound
push
dec
popa
sbb
add
pop
and
mov
mov
inc
adc
adc
dec
imul
(bad)
imul
mov
test
or
shl
fs
mov
or
push
ret
xchg
xor
cmp
mov
je
movs
imul
pop
xor
int
idiv
shl
(bad)
cli
and
out
adc
xor
test
scas
lahf
and
jns
xor
pop
mov
test
lods
mov
xor
cmp
out
mul
mov
out
stos
dec
adc
mov
jp
pop
outs
adc
or
adc
loope
in
test
jae
jo
js
test
rol
icebp
aaa
retf
call
lods
push
xor
test
or
cmp
cmp
dec
push
lea
ret
push
adc
les
addr16
sbb
xchg
lock
inc
xchg
inc
fdivr
jne
inc
xor
int3
add
lods
push
jno
mov
xor
stc
dec
xchg
pop
xchg
idiv
repnz
jl
sub
jne
cmp
add
xchg
mov
(bad)
lock
push
cmp
add
push
fcomp
jl
sub
stos
sti
dec
inc
(bad)
sahf
je
cmps
jo
aad
cld
repnz
outs
inc
xchg
inc
push
inc
mov
addr16
ins
ins
imul
sbb
inc
push
cwde
fwait
out
sti
scas
xchg
mov
data16
ret
stos
xor
repnz
call
(bad)
test
push
mov
ds
out
dec
adc
stc
pop
sbb
mov
inc
mov
cdq
xchg
fstp
xchg
or
outs
push
jo
ja
aam
sub
ja
adc
(bad)
repnz
push
add
sbb
xchg
repz
lahf
xchg
shr
or
and
or
mov
hlt
hlt
jp
aaa
cmp
(bad)
fiadd
ins
cmp
dec
add
aam
cdq
repz
aaa
dec
outs
jne
aam
dec
popa
imul
push
cmp
jo
xchg
xchg
dec
add
or
les
in
and
out
stc
add
jae
(bad)
ja
mov
in
stos
lsl
(bad)
ja
or
int
(bad)
es
mov
rcr
out
ret
retf
mov
add
and
jae
sub
cmp
js
test
aas
dec
jo
inc
hlt
cmp
sbb
mov
fs
cmp
pop
out
pop
xchg
out
(bad)
not
pop
dec
or
(bad)
into
sti
in
add
ins
jmp
test
int3
mov
mov
cmp
mov
cmp
icebp
jno
inc
pop
sbb
lds
pop
add
outs
sub
retf
call
add
stc
sub
rcr
fidiv
jns
pop
test
push
(bad)
and
in
jnp
stos
fsubr
mov
out
lahf
dec
test
cmps
(bad)
adc
sub
xor
or
push
popf
xchg
(bad)
mov
aad
loope
arpl
sub
repz
popf
shl
(bad)
inc
mov
in
sub
lahf
sar
mov
ins
in
dec
iret
into
pop
mov
xor
cmp
or
fucom
push
push
push
nop
imul
dec
pop
shl
or
hlt
cwde
div
jmp
enter
adc
shl
pusha
stos
dec
push
pop
jo
int3
inc
in
mov
xor
or
retf
or
mov
jb
loope
pop
dec
jae
ffreep
jl
in
adc
and
scas
sahf
mov
mov
test
adc
jae
leave
mov
or
ja
inc
(bad)
call
fisttp
test
leave
pop
icebp
jmp
out
jl
add
mov
aad
je
fistp
pushf
or
fisttp
push
out
mov
out
adc
daa
int
jg
inc
adc
xchg
rol
test
div
enter
in
(bad)
jge
push
xor
hlt
add
cli
cmp
shl
dec
lock
xor
fwait
xchg
repz
loopne
mov
in
xor
or
or
call
cmp
and
js
or
mov
push
inc
(bad)
fnstcw
imul
push
jl
pop
sti
imul
ror
shl
rcr
jne
ja
pop
xchg
add
ret
dec
daa
jl
adc
aaa
popa
sbb
jno
test
jne
mov
iret
mov
cmp
inc
mov
push
jmp
ror
fucomp
add
jnp
and
sbb
and
cwde
pop
push
aam
pop
xor
imul
xchg
sbb
push
ds
adc
shr
hlt
mov
hlt
sbb
push
fsubp
daa
ror
shl
outs
ret
lea
shr
loope
stos
mov
into
sub
or
stos
pop
push
inc
sahf
sub
sti
aas
dec
std
repnz
cmc
cmp
imul
sbb
scas
test
repnz
out
fwait
aam
outs
mov
jo
mov
(bad)
xor
or
lahf
in
pop
outs
test
mov
fild
stos
jg
jo
pop
fwait
mov
jge
push
or
rcl
cmc
out
jns
sub
inc
in
cmp
data16
inc
push
pushf
xchg
sti
fs
inc
loopne
push
mov
pop
mov
outs
xor
xchg
mov
gs
fsubr
xchg
push
mov
pop
pop
add
xchg
shl
mov
sar
push
inc
cmp
push
popa
scas
das
fwait
daa
or
pop
popa
fwait
data16
stos
xor
dec
pushf
call
mov
popa
pop
mov
cdq
gs
pop
call
push
inc
fs
js
lods
or
div
push
dec
repz
pop
xchg
dec
mov
or
cmps
cs
mov
ret
aaa
hlt
data16
jp
jae
ror
jns
aaa
or
jp
loopne
pop
inc
rcl
fld
or
push
test
pusha
sub
mov
leave
xor
in
sbb
add
inc
mov
stc
ds
mov
add
test
pop
mov
hlt
and
or
dec
inc
cld
lods
push
addr16
xor
mov
mov
dec
in
adc
aad
and
in
mov
ds
sbb
mov
pop
rcl
dec
sub
xor
ja
cli
in
mov
mov
xor
jo
cs
(bad)
pop
adc
xchg
out
std
enter
xor
push
xchg
xchg
call
movs
push
ror
or
imul
push
aad
inc
mov
pop
fnsave
mov
push
cld
jbe
sar
jnp
sbb
dec
or
adc
lock
inc
in
fcom
inc
sbb
or
popa
ss
sub
and
(bad)
lahf
pop
xor
cli
mov
dec
xor
jne
cmp
mov
push
retf
mov
push
dec
ret
loopne
pop
add
xchg
(bad)
test
or
inc
mov
iret
add
int
inc
shl
push
es
jl
cs
cmp
jl
jb
sub
dec
mov
fdiv
jg
mov
sbb
lods
xchg
push
inc
shr
add
jle
lds
or
jp
push
ja
mov
mov
jno
shr
sub
mov
adc
or
pop
nop
inc
loopne
dec
xchg
daa
out
inc
mov
add
mov
paddsb
stos
jmp
dec
in
jnp
adc
mov
lock
sub
xchg
add
retf
pop
iret
call
add
xchg
sahf
cmps
pusha
fisub
loop
(bad)
xor
ret
lods
inc
(bad)
stc
pop
icebp
iret
sbb
xor
dec
mov
cli
or
cmp
sbb
xchg
call
fld
jo
pop
push
fidivr
iret
pop
cwde
(bad)
sub
add
addr16
sbb
dec
dec
out
inc
mov
cdq
mov
cli
or
jle
mov
cmp
jnp
pop
imul
lock
dec
fistp
jbe
sub
push
aaa
mov
(bad)
jbe
sbb
mov
xor
adc
xchg
jp
jnp
lea
(bad)
jle
mov
pop
repz
inc
mov
sbb
mov
and
ins
shl
push
push
cmp
jg
cdq
sbb
push
or
stc
call
imul
stos
push
mov
or
sbb
pop
sub
movs
pop
sti
shl
xchg
xor
jne
stos
add
rcl
retf
dec
popf
retf
fdivr
sbb
call
xchg
cli
test
retf
pop
movs
push
ins
mov
inc
xor
test
movs
adc
shl
sub
test
popa
xchg
lock
cmps
sub
adc
es
cli
mov
and
addr16
stos
ins
ins
or
in
xchg
mov
mov
lds
cwde
aad
mov
dec
(bad)
and
xor
mov
mov
test
push
cmps
cdq
push
xlat
cmp
lea
sbb
in
ficomp
jae
add
stc
cmp
cmp
jmp
xlat
mov
adc
adc
lock
and
outs
and
daa
cmc
jno
adc
(bad)
sbb
add
arpl
call
and
xchg
retf
add
add
dec
in
ret
mov
xchg
pop
cmc
push
pop
jmp
(bad)
test
arpl
clc
jl
(bad)
mov
jp
pop
xchg
frstor
icebp
enter
loope
xor
test
jmp
loopne
pop
leave
test
leave
movs
mov
(bad)
and
dec
cld
fld
jb
adc
std
cmp
je
sub
adc
jg
inc
dec
ret
call
outs
fcmovnbe
mov
inc
adc
push
pop
nop
inc
jl
clc
fsubr
jb
mov
into
and
xor
jns
movs
addr16
pop
out
mov
jl
jp
dec
mov
mov
cli
push
outs
pop
pop
xor
test
jne
or
into
jnp
sub
mov
loop
loope
clc
fdivr
lods
shl
imul
jg
push
dec
pop
dec
ror
sub
mov
popa
fidivr
scas
xor
dec
cld
test
rcr
nop
ins
cmp
cmp
jnp
and
test
hlt
repz
hlt
cmp
mov
aad
repz
pop
sub
jge
(bad)
call
pop
mov
retf
dec
mov
mov
pop
adc
je
fnstcw
repnz
js
sub
mov
sbb
inc
jno
jnp
cdq
sbb
jl
iret
int3
mov
cmps
or
popa
xor
test
sar
les
mov
adc
in
and
stc
xor
lea
xor
cs
cmp
push
sub
in
dec
push
aas
inc
lods
dec
cmc
dec
or
ja
add
mov
cs
jmp
aaa
pushf
inc
out
pushf
jmp
pop
call
sbb
mov
pushf
in
mov
stos
mov
cmc
push
in
out
sub
cmp
push
pop
adc
mov
sahf
rcr
adc
sahf
mov
push
pop
add
pop
leave
jo
and
retf
push
jle
mov
retf
sbb
xchg
cmp
push
mov
pop
ins
push
dec
inc
test
int
hlt
loop
test
call
add
ja
and
jl
mov
pop
(bad)
addr16
bound
pusha
rol
xchg
cmp
lock
test
sbb
inc
jge
inc
pushf
sub
popa
fnstcw
add
push
mov
(bad)
sti
fldcw
ss
xchg
xchg
out
xchg
sub
mov
adc
push
jns
ins
paddsw
sub
dec
cmp
xchg
mov
in
cdq
mov
in
and
jns
push
mov
or
mov
out
loop
xchg
jg
test
cmp
ret
retf
int3
push
out
sub
mov
push
data16
setae
and
pop
sbb
mov
push
push
(bad)
pop
jae
or
xor
mov
dec
push
xchg
jne
in
or
loope
mov
mov
test
pop
push
seta
sub
shl
loopne
or
add
in
push
lea
or
retf
mov
mov
shr
and
cld
push
ins
out
pop
sub
xchg
cmp
inc
sahf
ror
push
sbb
cmps
cmc
mov
add
jmp
mov
push
data16
stos
out
push
nop
pop
sbb
push
aas
loopne
and
pushf
sbb
mov
out
pop
rol
fwait
mov
stos
cmp
and
cmp
push
aad
sub
mov
cmp
mov
cmps
ret
shr
push
into
stc
xchg
lea
sti
hlt
loop
adc
mov
sbb
cmc
scas
shl
cmp
stos
adc
lahf
and
hlt
mov
push
in
repnz
imul
neg
fwait
adc
jne
cmp
jno
cmc
cld
xchg
jae
cli
call
push
ret
xchg
mov
jmp
lahf
xor
test
mov
push
dec
clc
(bad)
aam
mov
cmp
mov
xchg
pop
shl
jge
xor
inc
es
ins
push
into
sub
add
nop
in
mov
jp
test
xor
pop
popf
rcl
dec
mov
jle
jle
lea
stos
jle
iret
inc
lahf
shl
test
leave
jge
pop
arpl
cmp
idiv
push
add
(bad)
pop
mov
outs
cwde
xchg
cli
mul
mov
sub
mov
push
mov
mov
add
xchg
sbb
xchg
adc
pop
ins
iret
fidiv
jo
mov
and
cmp
ds
jne
fstp
jmp
jmp
mov
es
scas
cmp
ds
mov
jnp
ja
push
fucomp
call
mov
int3
adc
(bad)
lahf
out
cmps
stos
cwde
adc
and
jmp
leave
mov
pushf
neg
scas
shr
xor
jmp
mov
mov
xor
sbb
push
push
pusha
fnstenv
cmp
in
sub
adc
test
(bad)
cmp
out
pop
fsubrp
in
out
push
fdivp
jp
sbb
fnstenv
pop
hlt
fdiv
je
imul
xor
lahf
jecxz
(bad)
(bad)
(bad)
pop
loope
cmp
sbb
mov
xor
jge
jmp
pop
sbb
or
mov
mov
or
xor
dec
leave
inc
das
add
push
sbb
pop
lods
clc
sub
xchg
aas
mov
jns
lock
jl
lea
xor
in
lahf
jmp
jle
jae
jnp
sub
scas
shl
add
cmp
mov
dec
gs
scas
sbb
add
outs
sti
not
push
cwde
jne
mov
add
dec
add
pop
int3
mov
push
in
sbb
in
xchg
dec
outs
fadd
and
jp
jbe
(bad)
repz
scas
push
inc
mov
inc
mov
xchg
jmp
or
movq
fld
xchg
or
dec
xchg
pop
xor
sub
in
mov
call
dec
aas
xchg
imul
sbb
outs
sub
push
clc
aam
ja
inc
xchg
or
cmp
cld
mov
sub
jge
or
mov
mov
jbe
sbb
add
sbb
test
sbb
ret
ins
popf
or
mov
mov
es
xchg
ret
jecxz
mov
push
push
int3
ss
repnz
mov
sub
inc
stos
push
fdiv
out
mov
scas
rcr
push
jae
cmp
out
add
jecxz
rcl
jg
(bad)
ja
out
mov
in
test
cmp
lods
stc
dec
(bad)
(bad)
xor
jmp
pop
hlt
outs
pop
lods
iret
ret
fldenv
and
sub
cmp
outs
iret
push
jmp
imul
pusha
ins
push
dec
adc
mov
push
and
ret
cmps
loopne
jae
jmp
inc
xor
mov
stos
sbb
(bad)
enter
cmp
push
inc
addr16
push
scas
call
and
mov
push
cs
inc
lea
or
jnp
cwde
loope
mov
xor
jnp
sti
(bad)
fmul
ins
dec
adc
jl
retf
add
das
out
jns
(bad)
lock
outs
and
jo
stos
add
mov
data16
stc
loop
loop
add
aas
imul
scas
jne
or
xor
dec
add
(bad)
push
add
mov
lods
nop
and
stos
loope
fidivr
add
fiadd
test
movs
jmp
mov
cmp
xchg
std
mov
scas
sub
sbb
lahf
fld
ds
cdq
loopne
add
movs
mov
icebp
sbb
mov
push
add
or
pop
mov
mov
jge
lahf
xor
idiv
das
sar
pop
or
add
dec
mov
call
fisubr
mov
out
push
test
mov
loope
inc
(bad)
fiadd
cmp
mov
imul
fstp
inc
mov
loope
mov
repnz
mov
jmp
xchg
mov
enter
sti
jmp
cmc
fisub
iret
stc
inc
sbb
mov
inc
xchg
fdivr
test
jno
mov
fs
lds
mov
cmps
pop
pop
push
fldcw
stos
inc
movs
mov
mov
test
push
(bad)
pop
pushf
adc
int3
cmp
sbb
or
adc
loopne
push
dec
std
movs
into
jle
dec
icebp
lods
leave
and
ins
inc
cmps
xchg
and
sahf
popa
cmp
mov
inc
nop
dec
nop
pop
loopne
and
fidivr
fwait
scas
adc
dec
test
sbb
mov
outs
int3
stos
fbld
sub
lods
lea
mov
test
jge
push
jp
mov
call
jbe
repnz
pusha
stos
(bad)
test
push
popa
jmp
lahf
ins
das
dec
iret
or
fstp
mov
mov
(bad)
pop
call
pusha
add
les
in
int3
out
push
push
mov
jne
push
cmc
push
mov
add
xchg
cmp
or
sbb
gs
add
mov
mov
shl
add
mov
not
sub
dec
les
xchg
imul
xchg
loope
and
adc
outs
cli
mov
dec
pop
xchg
push
out
les
xor
add
cs
fnstcw
in
sbb
in
push
fst
add
jbe
adc
stos
push
mov
mov
iret
mov
sub
sbb
mov
jbe
and
ins
and
xor
lds
test
mov
push
mov
scas
sub
inc
jnp
push
mov
test
(bad)
in
ss
inc
lods
enter
sub
aaa
adc
and
mov
add
lds
add
xor
push
inc
call
mov
inc
call
sbb
sbb
popa
movs
push
push
and
cmps
inc
in
cmps
popf
(bad)
jl
dec
sbb
pop
retf
(bad)
jmp
ss
je
or
adc
and
sbb
pop
in
push
mov
and
xor
push
cmc
or
inc
mov
push
in
cmps
pop
nop
jle
add
mov
and
stos
pop
clc
add
pop
add
mov
inc
(bad)
lds
ss
aaa
push
(bad)
gs
pop
fld
ins
pop
das
or
dec
fst
and
mov
nop
adc
adc
shl
mov
sub
dec
sub
test
xor
pusha
fiadd
mov
fwait
adc
sub
mov
das
pop
imul
sbb
cdq
add
cmp
mov
inc
inc
fwait
push
mov
std
jbe
scas
hlt
ret
stc
inc
fdivr
or
xor
add
fst
xchg
push
leave
imul
sbb
sahf
daa
stos
ins
push
xchg
fsub
sub
dec
xchg
push
xor
out
fmul
(bad)
sahf
das
enter
mov
stos
cmp
std
repz
cmps
lea
xor
je
pusha
jl
push
aaa
clc
hlt
stc
pop
imul
pop
cmc
test
popf
dec
ins
out
push
pushf
test
push
movs
ins
scas
pusha
adc
cmps
cli
fdivr
lds
cmp
movups
daa
rcl
mov
mov
pop
pop
inc
repz
pop
data16
adc
sbb
xchg
sbb
hlt
mov
sbb
(bad)
pop
mov
mov
ficomp
stos
(bad)
pop
gs
mov
mov
xchg
movs
nop
idiv
je
inc
ret
mov
lods
iret
adc
inc
cwde
sbb
mov
dec
imul
add
mov
movs
mov
out
imul
sub
(bad)
mov
or
xchg
mov
rol
pop
xchg
ret
icebp
sub
dec
pop
dec
ss
hlt
add
(bad)
int
ins
xor
cmp
retf
aaa
popf
jmp
outs
out
xor
imul
repz
in
jbe
mov
push
shl
pop
sub
sbb
adc
fmul
or
jns
pop
dec
xor
dec
adc
adc
mov
pop
jg
push
adc
add
mov
dec
(bad)
and
ja
jnp
push
or
xchg
mov
cmps
movs
mov
jecxz
dec
xchg
retf
popf
das
test
xor
add
push
inc
fsub
mov
imul
lds
out
push
movq
sub
cmp
xchg
hlt
mov
les
lods
mov
aaa
pop
inc
dec
mov
outs
mov
je
push
xor
vmread
mov
or
mov
lahf
pop
in
bnd
loop
mov
xchg
es
sbb
(bad)
dec
scas
or
adc
pushf
and
jg
pop
mov
out
jle
mov
idiv
jle
stc
mov
add
push
je
(bad)
(bad)
jnp
aas
sub
push
mov
pop
mov
mov
sub
arpl
or
retf
dec
inc
jl
mov
jns
cmc
fsubr
cwde
jbe
and
sub
sahf
mov
and
ret
sub
or
hlt
push
cli
adc
das
or
call
cwde
push
sbb
stos
scas
jle
out
outs
cmps
or
jo
cmp
(bad)
lock
cmps
jmp
sub
jmp
mov
popa
cld
cmc
push
pop
jns
popf
xor
(bad)
cmp
xor
ret
hlt
xchg
div
jns
xor
push
mov
xchg
clc
inc
(bad)
inc
mov
(bad)
das
mov
sub
fadd
fs
cmp
jno
outs
mov
dec
mov
jo
pop
and
aam
mov
pop
loope
sbb
and
cld
xor
gs
mov
je
mov
inc
movlps
mov
cmp
mov
cmp
bound
retf
xor
mov
fcmovb
jle
stos
retf
ss
push
inc
jo
mov
pop
push
std
jge
imul
dec
inc
cmp
(bad)
mov
cmp
int3
ds
ja
cmp
mov
add
sbb
aam
xchg
adc
leave
or
call
nop
add
push
cmp
aaa
fdivr
les
sti
(bad)
cmps
dec
nop
inc
inc
xor
and
inc
(bad)
add
mov
xor
mov
jb
pop
hlt
je
jmp
fild
mov
sahf
xor
or
mov
test
inc
pop
test
cmp
mov
xor
(bad)
mov
dec
or
mov
xor
pop
mov
test
dec
ins
repz
xchg
bound
fstp
test
retf
mov
lds
push
mov
sbb
dec
and
shl
loope
jge
mov
xchg
and
jmp
imul
scas
xchg
or
push
push
mov
mov
int3
sbb
sbb
or
jle
xlat
retf
popa
hlt
dec
add
xchg
pop
sbb
jns
fdiv
push
repz
push
mov
jne
sbb
push
rcl
xchg
dec
xor
and
popf
ficom
and
adc
icebp
hlt
dec
adc
add
push
inc
xor
dec
(bad)
dec
add
xchg
mov
cmp
fldenv
sub
leave
sti
pop
test
jp
mov
out
int3
icebp
pop
std
sub
mov
lods
dec
stos
ins
jmp
in
xchg
or
in
mov
enter
in
pusha
cs
dec
ss
loop
xlat
jge
mov
mov
test
sub
jns
add
test
repnz
popaw
mov
push
std
or
dec
sbb
dec
jmp
mov
test
jp
cmp
jg
(bad)
jmp
shl
sub
xchg
dec
adc
jmp
dec
retf
dec
sar
jle
sub
mov
xchg
sbb
or
xor
or
in
dec
sub
mov
push
and
mov
ins
sub
pop
cmp
daa
mov
lock
sbb
xchg
fscale
push
mov
add
pop
popa
je
sub
hlt
cmps
fwait
scas
cmc
mov
call
mov
or
adc
js
push
addr16
push
jg
ret
retf
inc
call
and
pop
xor
sbb
fisubr
push
xor
mov
xchg
inc
pop
pusha
popa
inc
(bad)
rcl
add
in
xor
(bad)
xchg
(bad)
xchg
outs
sti
sub
adc
leave
icebp
(bad)
sub
out
add
jns
jl
or
adc
inc
pushf
es
(bad)
cmp
sbb
push
sbb
push
jl
inc
pop
inc
mov
xlat
add
adc
jp
adc
inc
rol
adc
dec
mov
or
or
out
xchg
xchg
shl
xor
dec
sub
or
inc
xchg
mov
inc
jmp
int
push
out
test
push
sub
retf
pop
mov
xchg
in
out
push
stc
sbb
mov
inc
retf
call
sub
nop
mov
pusha
out
mov
xlat
sub
ret
icebp
jo
lods
(bad)
xchg
sub
push
lods
and
pop
jecxz
(bad)
fisubr
mov
and
jmp
lods
test
xor
ficomp
xor
je
cmp
xchg
mov
fisttp
mov
adc
retf
jge
fild
sbb
cmp
aas
mov
xor
(bad)
imul
test
add
mov
adc
fdiv
pop
scas
push
xor
pop
mov
(bad)
inc
sti
fist
mov
adc
(bad)
ins
mov
sbb
jge
jp
jmp
movs
loop
div
loopne
leave
sub
xchg
outs
dec
es
fldcw
loope
adc
sbb
outs
cs
jae
xchg
sub
cwde
or
in
jb
loop
xor
cmc
sub
or
gs
push
ja
cmc
lock
fdiv
lods
cmp
outs
(bad)
lock
jne
push
dec
xor
in
ins
inc
jb
cmps
pop
mov
mov
mov
fwait
jmp
scas
into
es
pop
js
add
add
enter
icebp
mov
mov
repz
jl
xchg
test
or
addr16
(bad)
(bad)
addr16
jae
pop
loope
fild
push
and
pop
mov
call
scas
xchg
out
xchg
movs
mov
call
and
and
pushf
stos
dec
jb
imul
jmp
in
sub
cmp
pop
jae
repz
hlt
sbb
popa
pop
or
and
cmp
adc
(bad)
cmc
(bad)
adc
loope
jns
jae
or
call
mov
lods
pop
jmp
shl
lods
mov
inc
(bad)
inc
push
or
jge
call
mov
pop
cmp
inc
add
ins
mov
int3
mov
fcomip
inc
cli
icebp
push
sub
mov
adc
jg
inc
or
sbb
jb
push
and
imul
and
fwait
sub
fwait
or
in
retf
addr16
clc
repz
movs
xchg
mov
fnsave
mov
push
jmp
call
pushfw
(bad)
push
adc
add
into
sbb
iret
out
mov
nop
outs
push
sbb
dec
cwde
adc
push
jae
jg
xor
adc
jb
ud2
ja
je
mov
data16
dec
(bad)
push
addr16
mov
ficom
stos
bound
xor
push
aam
mov
mov
pop
ror
sbb
push
or
fisttp
jno
inc
sbb
sub
hlt
or
int
popf
cwde
mov
hlt
ss
out
mov
pop
ret
sbb
pop
pushf
jno
popf
pop
xchg
scas
(bad)
fdivr
retf
(bad)
mov
cdq
(bad)
and
xor
push
xchg
fidiv
cmp
or
rol
mov
imul
xchg
je
lods
outs
cld
psrad
(bad)
ja
pop
loop
add
lds
(bad)
pop
test
jae
xchg
and
xchg
jl
rcr
cmps
sbb
lds
dec
aas
cmps
pop
mov
pop
add
dec
repz
neg
cdq
cli
(bad)
in
and
jg
mov
mov
mov
movs
xor
sbb
pop
xor
int3
cld
outs
cmp
pop
fsub
rol
loope
xor
addr16
jl
and
or
xchg
mov
cmc
sub
sbb
jge
loopne
cs
outs
bound
jo
xchg
jae
or
mov
sar
mov
inc
xor
loope
fbld
mov
lahf
shr
push
(bad)
int
xor
ja
jp
retf
and
packuswb
sbb
ret
mov
call
shl
pop
retf
mov
out
jae
lods
jnp
aaa
pop
pop
push
loope
inc
xor
dec
dec
jo
ja
popa
or
pop
mov
or
das
(bad)
jne
pop
sub
push
add
neg
jne
pop
pushf
addr16
cli
xchg
sbb
(bad)
sub
movs
jb
lea
dec
inc
xchg
fistp
mov
je
cmp
outs
sbb
push
mov
repnz
jmp
add
inc
jle
xchg
jnp
and
dec
mov
sub
mov
pop
pop
repnz
jns
xchg
lods
and
push
cdq
mov
test
add
push
sub
in
push
add
loop
(bad)
out
leave
je
adc
pusha
mov
mov
mov
xor
inc
push
popf
fld
rcl
out
mov
sahf
adc
jge
pop
int
cdq
adc
or
nop
dec
lahf
jmp
cmp
sbb
int3
retf
sub
and
and
jmp
lds
lods
xchg
dec
ret
push
mov
jmp
movs
ror
enter
cli
mov
(bad)
xor
cmp
out
cdq
sbb
sbb
pop
adc
retf
popa
dec
sti
(bad)
jne
rcr
mov
repnz
xor
shr
adc
(bad)
mov
dec
sar
inc
popf
pop
mov
mov
add
inc
cmp
jae
ja
(bad)
aad
ss
xor
mov
fild
aam
mov
inc
or
sub
jae
pusha
mov
cmps
sti
add
jmp
dec
xor
add
xchg
cmp
data16
xchg
and
push
xlat
addr16
pop
push
ds
inc
pushf
cmp
loop
xor
aam
clc
push
and
ret
lods
(bad)
aam
fiadd
jbe
fiadd
mov
cmp
mov
test
add
mov
xchg
les
shl
push
and
jnp
loop
fstp
dec
jbe
sub
jo
imul
ret
push
test
xor
mov
add
imul
sub
sbb
enter
jns
sahf
pusha
shr
jne
stos
cmp
cmp
xor
mov
and
sbb
in
mov
xchg
cmps
cmp
pusha
adc
or
js
aad
or
xchg
std
xchg
inc
mov
ret
mov
outs
mov
mov
pusha
ins
dec
adc
in
ror
xor
jmp
xchg
jns
lods
je
stos
push
sbb
push
imul
loopne
pushf
fmul
cs
out
fnstcw
pop
shl
aam
clc
adc
add
and
dec
xchg
push
or
mov
cli
fcmovbe
scas
fist
push
idiv
sub
ficomp
jg
xor
addr16
sbb
xchg
mov
lods
int
adc
into
cmps
frstor
stc
cmp
mov
inc
shl
push
mov
and
push
sbb
in
and
stc
jl
xchg
xor
cmp
jno
xchg
pop
dec
gs
pop
xor
jg
mov
ss
dec
bound
pop
mov
adc
pop
frstor
js
pop
inc
popw
loop
mov
inc
loopne
inc
aaa
out
fsubrp
inc
cmp
test
ror
leave
jne
xor
scas
pop
mov
out
movs
jae
ss
cmps
lock
fcmove
retf
cmp
mov
hlt
scas
iret
retf
in
dec
hlt
add
add
iret
adc
popa
fsub
dec
dec
loop
out
dec
mov
mov
aad
mov
push
mov
loop
cmps
add
push
out
cmp
lods
hlt
cmps
mov
xchg
jae
aam
and
shr
cmp
and
nop
shl
jg
cmp
sbb
sbb
cmc
and
mov
mov
mov
mov
inc
cli
and
sub
push
mov
aam
pop
pop
xor
test
lahf
or
xchg
push
gs
mov
mov
xchg
cmps
ror
jmp
fadd
fs
mov
and
imul
repz
fisub
cmps
js
movs
aas
push
scas
cmc
dec
jns
stc
rcl
mov
sbb
outs
push
leave
push
out
stos
and
je
out
mov
gs
icebp
sti
jle
cmp
addr16
movs
jg
push
not
adc
sbb
fdiv
cmp
les
ins
sahf
push
(bad)
cwde
daa
jmp
scas
mov
cmp
mov
adc
push
mov
(bad)
(bad)
inc
(bad)
(bad)
pop
fcmovu
sbb
mov
ror
dec
in
cmps
push
xor
retf
icebp
cld
cmp
stos
ins
imul
cmp
xor
dec
push
jo
outs
enter
enter
imul
adc
sub
fnstenv
sbb
xchg
das
(bad)
jnp
(bad)
leave
sub
pop
mov
mov
xchg
loop
test
adc
sub
jno
jmp
mov
pusha
pusha
fiadd
xor
lock
cwde
les
js
and
idiv
dec
stos
mov
cmp
mov
rcl
mov
ins
clc
xchg
shr
loop
imul
es
(bad)
fldlg2
inc
das
ins
push
das
sub
mov
add
ss
xor
frstor
cmp
adc
mov
push
shr
jbe
lock
clc
xchg
mov
cwde
mov
push
sub
xor
and
push
add
or
mov
cmps
nop
mov
jl
in
mov
pusha
lea
jo
mov
push
add
xchg
or
popf
cli
popf
or
inc
retf
push
jmp
fsub
retf
mov
pop
sub
xlat
xor
cdq
push
inc
xor
loopne
pop
call
jns
xchg
mov
dec
cmc
push
lock
sbb
inc
fdivr
inc
ror
aas
jp
iret
mov
jg
nop
rol
call
or
test
add
je
and
(bad)
aad
add
dec
(bad)
popf
ret
fdivr
dec
idiv
repz
and
cmp
and
call
xlat
lahf
rcl
enter
fcmovu
push
inc
lods
dec
addr16
sbb
mov
lea
cmp
cmp
xor
sub
cmc
pop
cdq
jecxz
loopne
xchg
mov
xlat
push
in
or
mov
xor
jge
push
stos
push
xor
aas
xchg
mov
jno
xor
cdq
xchg
xchg
push
lock
dec
push
in
sbb
lods
sbb
in
lahf
hlt
mov
jecxz
nop
jmp
out
cld
fs
and
stos
xchg
fild
dec
mov
sar
add
pop
scas
xor
scas
mov
(bad)
cmps
mov
out
lods
or
(bad)
int
lods
pop
addr16
xchg
jnp
imul
push
jp
dec
push
mov
or
jmp
push
sbb
repz
inc
(bad)
dec
add
ret
hlt
addr16
movs
outs
loopne
add
(bad)
in
out
jbe
int
loope
sbb
inc
xor
dec
pop
sub
pop
lds
xchg
jns
into
cli
jno
(bad)
out
pushf
push
pop
es
pop
lods
mov
jl
mov
xchg
retf
add
cmp
adc
mov
fistp
mov
add
int
lock
pop
cmp
shl
sub
(bad)
pop
mov
cmps
nop
pop
loop
dec
jmp
sub
fisubr
jg
sub
retf
sbb
stos
(bad)
scas
xchg
lods
sub
cmp
fdiv
bound
jle
or
jmp
or
ds
jne
push
enter
mov
pop
add
test
cmps
pop
(bad)
adc
xchg
popf
les
lahf
add
add
call
sbb
or
ss
mov
ins
xor
std
push
inc
out
mov
int3
div
pushf
out
mov
cmp
push
lahf
add
ss
mov
jo
dec
mov
sub
xor
retf
xor
dec
data16
push
jo
popa
cwde
outs
cmp
mov
dec
loop
mov
dec
push
mov
addr16
mov
jbe
in
dec
leave
push
or
mov
push
fistp
sub
jp
enter
enter
icebp
xchg
jmp
movs
mov
push
push
jo
jle
xchg
jbe
mov
clc
mov
adc
and
or
adc
adc
je
scas
dec
xchg
shl
sar
mov
sbb
int3
rep
cdq
xor
mov
imul
mov
and
sbb
retf
nop
dec
clc
das
pop
movs
ins
idiv
sub
fisttp
and
nop
adc
repz
aam
inc
jb
sar
icebp
adc
and
or
mov
mov
mov
dec
out
push
mov
xor
pop
mov
inc
fst
std
call
adc
adc
or
das
inc
shl
in
push
in
sbb
xor
sbb
fstp
loop
xchg
fadd
sub
loop
cmp
out
ds
fistp
js
sub
pop
pop
inc
cli
mov
sub
cli
sbb
sbb
repnz
pop
loope
sti
xor
les
xlat
jne
jmp
lock
rol
mov
outs
inc
loope
cs
les
(bad)
inc
(bad)
xor
jle
and
mov
dec
push
cmp
jg
xor
jmp
(bad)
or
je
lea
pop
push
leave
mov
js
rol
mov
cmp
pop
mov
data16
imul
sbb
push
and
cmp
sub
in
std
out
mov
dec
div
dec
(bad)
fsubr
pop
xchg
out
sbb
(bad)
cli
xchg
pop
push
sbb
or
xchg
std
cmp
cmp
fnstcw
push
mov
and
aam
in
test
cdq
test
imul
enter
cdq
test
or
mov
mov
loopne
add
ret
pop
push
jno
cwde
mov
nop
jb
xor
aaa
lods
test
mov
inc
cmp
adc
movs
aaa
shl
stc
in
adc
loop
sub
dec
push
add
imul
popf
imul
cmp
imul
inc
xor
pop
scas
mov
mov
mov
inc
sub
popf
sti
or
push
sahf
jg
adc
cmp
cmp
das
fild
in
jge
add
push
iret
int
daa
xor
out
adc
sub
in
pop
mov
aam
lds
mov
or
aad
icebp
dec
dec
push
sbb
jecxz
(bad)
jle
out
or
jmp
aam
rcl
cwde
int3
mov
mov
bound
into
cmp
push
pusha
sub
jns
jge
enter
cmps
leave
sbb
(bad)
(bad)
popf
jno
into
mov
inc
repnz
scas
add
xchg
into
mov
lock
sub
loope
cwde
mov
push
cs
leave
adc
movs
xor
loope
and
push
push
je
add
xor
cmps
adc
lods
into
cmp
jo
dec
sbb
std
sbb
mov
mov
mov
or
data16
mov
sub
cmps
mov
cmp
jmp
js
adc
mov
mov
nop
fldenv
and
punpckldq
repz
mov
xchg
movhps
fdivr
dec
(bad)
fwait
adc
mov
pop
inc
imul
mov
ins
adc
xchg
lock
fdivr
addr16
dec
and
xchg
mov
cs
inc
inc
jl
push
push
push
pop
jne
idiv
ja
push
inc
xchg
sbb
inc
xchg
and
inc
jecxz
(bad)
int
jne
jne
or
cmp
jb
fsub
push
popa
add
cdq
fdiv
add
push
jae
loopne
mov
ror
lds
add
cmc
shl
fimul
in
gs
mov
(bad)
push
push
in
fadd
push
xor
dec
or
rcr
(bad)
jge
outs
inc
cmp
bound
out
scas
call
cmps
rcl
mov
loop
enter
test
in
adc
pop
and
cwde
sti
daa
inc
mov
mov
adc
leave
xlat
repz
mov
in
retf
jns
loope
nop
shl
mov
ror
in
ret
mov
fwait
lea
movs
in
test
popa
jmp
xor
and
mov
hlt
and
xor
or
jge
pop
pop
mov
push
mov
scas
mov
outs
push
xchg
cmp
fs
(bad)
fadd
gs
scas
or
in
mov
(bad)
call
cmp
movs
gs
xor
xchg
mov
sbb
out
fild
push
mov
mov
in
mov
js
push
sub
ficom
sti
mov
mov
sub
jbe
lea
nop
in
mov
push
dec
mov
jnp
jno
sbb
fisttp
(bad)
into
sbb
mov
retf
cld
sub
call
dec
add
cmp
jae
sub
xchg
push
icebp
ret
mov
stos
idiv
and
jge
pop
outs
push
loopne
mov
add
sub
call
xchg
or
xor
les
neg
mov
or
loopne
pop
pop
add
and
sub
mov
or
shr
ret
cmp
sub
sahf
cmp
daa
jae
push
lahf
xor
pushf
leave
xchg
dec
int
add
jbe
test
xchg
add
into
int3
rol
loope
mov
or
dec
cmp
call
clc
ins
mov
jp
xchg
and
jnp
outs
retf
lea
sub
mov
imul
in
mov
cmp
push
shl
dec
sbb
xchg
push
push
ret
pop
scas
fldenv
test
sub
stos
jmp
jmp
pop
imul
in
repnz
push
inc
add
sti
jp
or
into
jg
xlat
sub
pop
push
nop
clc
lds
cmps
es
pusha
mov
lds
cmps
xchg
cmps
push
test
pop
mov
mov
xchg
mov
adc
and
call
mulps
adc
ins
mov
repz
and
ret
cmp
jb
push
enter
pop
imul
sti
dec
jo
or
fdivr
popf
mov
jb
fld
push
shl
dec
mov
stos
sbb
daa
jg
pop
jg
and
fnstenv
imul
adc
fidiv
cwde
push
lods
test
repz
cmp
call
aam
or
pop
lea
in
push
ja
lods
and
neg
outs
pop
rcr
adc
loopne
retf
pushf
and
or
shl
pop
mov
mov
sbb
popa
push
push
jg
std
jmp
rol
and
mov
push
pop
cli
ret
es
jae
cmps
mov
inc
push
push
fist
rcr
retf
sbb
jle
or
sbb
rcl
stc
movs
mov
cdq
pop
dec
sbb
mov
leave
inc
inc
fld
das
in
mov
ds
jns
fincstp
mov
stos
adc
push
shr
and
rcr
test
movs
push
repz
(bad)
mov
popf
rol
push
daa
jmp
mov
jmp
int
les
shl
and
sbb
fcomi
jnp
rcl
mov
and
out
mov
add
ficom
arpl
clc
mov
cmp
scas
cmp
call
(bad)
and
adc
hlt
sbb
xchg
pop
ja
xchg
xchg
std
ret
hlt
mov
jmp
push
pop
mov
jo
mov
stos
stos
mov
js
inc
push
fbstp
inc
inc
not
jne
lds
movs
jbe
jle
xchg
movs
jno
dec
sub
movs
xchg
enter
pop
jg
or
and
ret
mov
xchg
mov
fsub
ins
push
les
lock
cs
or
out
stc
sub
fmul
push
sbb
je
and
adc
cdq
push
pop
mov
cs
or
ret
xchg
xchg
mov
xlat
cmps
int
pop
repz
jmp
retf
sahf
mov
dec
lods
scas
sbb
ins
mov
or
inc
rcl
xor
pop
sub
lods
fnstcw
lock
outs
les
mov
push
push
pop
ret
bound
retf
dec
test
fimul
cs
ret
pop
mov
and
les
add
inc
add
mov
sbb
(bad)
lfs
aad
lahf
xor
fsin
mov
cmp
in
pusha
and
sub
push
(bad)
sub
xor
mov
movs
(bad)
test
mov
push
push
fcmovb
ret
jne
xchg
mov
imul
popa
(bad)
sub
loopne
xchg
pop
ffree
adc
inc
add
mov
push
test
adc
movs
jecxz
or
mov
xchg
lods
imul
dec
mov
xchg
xchg
sub
adc
cmc
cmp
sub
pusha
adc
push
repnz
pop
bound
jne
mov
js
xor
rcr
inc
and
mov
mov
(bad)
cwde
jns
mov
lods
frstor
inc
outs
cmp
cmp
test
push
repz
sbb
inc
in
sar
mov
adc
lods
call
or
cmp
cmps
push
mov
test
repnz
xchg
pop
adc
hlt
push
fsub
mov
pushf
xor
mov
addr16
mov
xchg
lods
mov
int
jp
mov
in
retf
push
fcomip
push
xchg
cmps
ftst
dec
retf
neg
inc
scas
lea
xchg
pop
push
hlt
std
mov
or
dec
jae
pushf
icebp
call
cs
xchg
sbb
sbb
or
jg
scas
int
mov
pop
mov
pop
inc
pop
jle
sbb
sub
jno
inc
jno
sub
adc
int3
adc
jge
aaa
xor
or
dec
fbstp
stos
mov
(bad)
mov
stos
mov
jge
cmps
pop
dec
lods
ss
push
or
outs
mov
ror
xchg
call
jmp
pop
xor
or
rcl
pop
mov
repz
sbb
adc
test
aam
int3
enter
adc
sbb
out
cmp
out
mov
repz
cmp
or
mov
and
jo
je
push
push
shr
add
hlt
mov
mov
xchg
jge
push
arpl
mov
xchg
cmp
mov
dec
out
lahf
cmp
inc
fwait
xor
icebp
sub
jno
mov
or
xlat
sbb
sahf
sub
push
pop
or
movs
pop
cmps
xchg
inc
pop
xchg
div
stc
mov
std
inc
es
cwde
aas
xchg
retf
mov
add
je
dec
adc
pop
fwait
retf
enter
mov
mov
fsubr
repz
sub
shl
dec
in
mov
int3
test
pop
fisttp
push
or
push
pop
cmc
iret
imul
fs
xor
mov
and
scas
pop
test
das
(bad)
pop
outs
repz
shl
movs
cmp
pushf
fwait
hlt
jbe
cmp
test
cs
jmp
sahf
loope
sar
pusha
daa
cmp
loope
shl
mov
mov
add
test
in
adc
bound
push
or
sar
push
xchg
push
cmp
adc
jnp
sub
repnz
int3
aas
xor
js
(bad)
cs
fcom
data16
(bad)
movs
lds
push
scas
sar
mov
and
sti
sub
dec
outs
out
dec
es
pop
adc
scas
or
pushf
loopne
xor
mov
jb
in
inc
aam
das
pop
xor
adc
mov
lahf
or
cmp
imul
adc
stos
inc
ins
fld
repz
and
stc
outs
lock
sbb
aas
mov
jb
cmp
pop
xchg
add
popf
stos
xor
push
jno
fwait
ror
outs
mov
mov
jne
pop
cmps
push
mov
je
imul
dec
retf
out
sbb
or
push
adc
or
adc
(bad)
pop
xor
jo
mov
xchg
pop
push
(bad)
scas
xchg
sub
pusha
and
mov
lock
in
fs
movs
pop
mov
pop
stos
addr16
aad
cmp
mov
inc
cmp
lds
cmps
xchg
push
xor
dec
in
jnp
fwait
adc
jae
jl
dec
dec
pop
xor
mov
out
(bad)
stos
imul
je
sub
lods
or
xchg
xor
jge
sbb
jecxz
mov
clc
sbb
pop
hlt
int
pop
xor
xor
and
nop
inc
mov
pop
mov
mov
add
aad
popa
push
stc
mov
fsub
and
arpl
outs
xchg
lea
test
inc
loop
pop
in
sbb
int
pushf
mov
(bad)
mov
cmp
mov
or
mov
push
pop
arpl
xlat
cld
lds
mov
inc
dec
stos
inc
push
xor
fbstp
mov
or
sbb
sbb
mov
arpl
dec
movs
jmp
xor
dec
dec
lea
mov
sub
pop
jae
xchg
loopne
movs
sub
dec
mov
push
lods
imul
cmps
je
aam
pop
jne
cmps
ret
in
push
inc
rcl
inc
mov
cmp
jmp
cmps
scas
push
sti
xchg
jl
mov
cmc
inc
push
ja
xchg
ja
fnsave
sbb
(bad)
sub
mov
mov
mov
jae
mov
sub
ficom
sbb
popa
and
mov
xchg
or
pop
in
push
sub
mov
fsub
or
popa
adc
sar
push
aam
daa
push
(bad)
fs
sbb
pop
inc
add
sbb
and
jg
and
data16
imul
jecxz
sbb
out
div
xor
mov
arpl
adc
stc
and
js
inc
mov
and
or
cld
inc
mov
cmp
or
cvtdq2ps
pushf
lock
loop
movs
ins
jb
dec
xchg
dec
pop
(bad)
ret
imul
push
dec
pop
jne
cld
adc
leave
cmp
inc
adc
lods
scas
movs
adc
hlt
inc
(bad)
jmp
ror
ds
out
not
call
pop
push
xchg
es
mov
mov
lahf
push
dec
adc
call
push
dec
add
cs
rol
cs
clc
mov
jbe
js
adc
mov
ret
scas
in
sub
(bad)
out
mov
or
xchg
enter
sub
js
mov
loop
outs
cmp
mov
xor
sub
cmps
cmp
add
dec
pop
push
iret
scas
or
lea
lock
test
inc
xchg
test
fucomip
push
cs
ficomp
test
lods
test
mov
dec
fldz
fisubr
xor
jo
xchg
imul
pushf
jge
sub
aas
mov
jge
iret
push
ins
inc
fst
inc
jb
into
xchg
mov
push
sbb
aas
inc
jmp
mov
fistp
fs
sbb
mov
inc
lods
mov
loop
jmp
shr
or
lods
scas
jae
xor
or
ds
xchg
or
pop
aas
(bad)
addr16
movs
in
xchg
fcom
out
add
ror
or
shr
test
sbb
adc
into
dec
data16
std
test
stos
pop
leave
mov
lods
mov
ss
pop
hlt
es
xor
test
scas
fst
sbb
ja
ficomp
or
mov
(bad)
cmp
or
fnstsw
sbb
and
jg
add
mov
(bad)
cmp
aaa
loope
or
xor
dec
jmp
repnz
dec
imul
sbb
cwde
inc
adc
cmps
jae
addr16
pushf
xor
aam
dec
xchg
and
cwde
jp
loop
mul
cmp
cmp
lea
hlt
dec
xor
push
cmps
cmps
xor
mov
lea
hlt
mov
dec
adc
mov
xor
jmp
aad
aaa
jmp
sub
inc
dec
jb
lods
or
jbe
dec
ins
jbe
scas
call
push
pop
stc
xchg
movs
sub
imul
mov
or
cmp
in
lock
inc
pop
iret
add
out
mov
mov
loopne
mov
pop
fisubr
imul
mov
sbb
out
outs
imul
loop
jnp
ins
data16
and
fidivr
mov
outs
test
arpl
retf
jno
cmps
aad
xor
add
push
and
fmul
pop
ret
mov
rcl
dec
mov
nop
and
rol
push
clc
scas
(bad)
jg
add
push
stos
or
dec
cmp
sbb
mov
rcr
shr
inc
xchg
mov
stc
dec
retf
jb
(bad)
adc
les
or
shl
inc
sbb
jbe
fiadd
dec
lahf
retf
leave
shl
scas
sbb
imul
mov
mov
inc
and
mov
and
xchg
sub
ror
xchg
je
add
push
inc
gs
test
and
cmpxchg
pop
xlat
addr16
xor
scas
and
call
clc
shl
out
add
jge
cmp
or
sbb
pop
stos
loope
sbb
imul
jg
push
rcr
ror
inc
outs
icebp
or
cld
mov
and
aad
xchg
push
add
mov
jo
adc
stc
mov
jb
jbe
jae
cmp
pop
mov
mov
in
xchg
into
sub
or
std
out
call
clc
ins
ficom
pop
jns
mov
pop
cli
js
hlt
jns
out
js
rol
aas
xchg
fdiv
out
test
std
lea
push
ds
mov
(bad)
mov
xchg
ins
cli
mov
(bad)
fsub
nop
in
retf
mov
nop
clc
int
arpl
mov
xchg
leave
dec
xor
call
cwde
pop
dec
adc
add
fdivr
rol
add
in
pop
test
mov
mov
rcr
push
jp
pop
mov
movs
hlt
xchg
cmp
das
or
sbb
add
jmp
ja
cld
popf
das
cs
(bad)
int
gs
mov
inc
push
fxch
sbb
sub
fdiv
adc
in
pushf
mov
mov
mov
cli
jle
xor
and
adc
rol
mov
out
dec
cdq
mov
mov
out
push
jp
push
ja
cmp
lds
(bad)
and
mov
pop
icebp
in
mov
push
mov
sub
mov
mov
pop
dec
mov
dec
hlt
int
aam
mov
push
pusha
inc
(bad)
fld
xchg
(bad)
lds
jp
inc
jp
add
shl
push
imul
pop
fcomp
inc
xchg
mov
xchg
stos
or
test
add
fisubr
clc
movsx
fiadd
js
push
jmp
(bad)
sbb
xchg
(bad)
fiadd
pop
jp
lahf
(bad)
jl
pop
aam
mov
pop
fist
rol
aas
loop
test
sub
mov
jo
and
loop
xchg
dec
stc
or
push
in
mov
dec
int
xor
jo
or
xchg
stc
or
and
lock
pop
mov
rcl
enter
and
or
dec
in
xchg
bound
xchg
imul
fdivr
jecxz
jnp
and
call
jbe
loop
ror
mov
push
inc
jno
inc
inc
test
mov
cwde
stos
add
outs
shrd
pusha
jno
pusha
das
push
inc
icebp
mov
fs
popa
sbb
xor
add
push
(bad)
pop
fsubr
sub
shr
rcl
sub
stos
and
(bad)
lods
shr
fadd
pop
xchg
push
(bad)
pop
and
and
out
add
aas
sbb
or
hlt
xchg
xor
xchg
cmps
ins
leave
jno
out
icebp
sub
pop
mov
rcr
f2xm1
ss
cmps
pusha
in
dec
dec
xchg
out
mov
xchg
es
pop
ror
adc
leave
cld
mov
mov
cld
sahf
lods
jmp
aas
test
mov
mov
and
leave
or
repz
cmp
repnz
adc
jmp
adc
or
sub
in
cli
jns
xor
and
push
in
adc
mul
test
hlt
test
mov
in
(bad)
dec
loope
jnp
fadd
fadd
inc
pop
int3
cmc
push
push
dec
jo
add
imul
loopne
mov
icebp
fmul
jae
aad
loopne
push
xchg
push
fnstsw
dec
cdq
push
dec
jns
ja
rcr
sar
retf
jnp
stos
xchg
or
pop
pop
jmp
cmp
push
adc
jno
push
shl
sar
into
xor
dec
push
xlat
xchg
cmp
sqrtps
mov
gs
adc
add
leave
mov
mov
sub
dec
dec
xlat
xchg
js
cmp
bound
retf
adc
pop
mov
xchg
dec
addr16
pop
je
jle
out
xor
in
adc
add
mov
jb
push
aam
sub
mov
into
imul
sbb
sbb
push
pop
xor
fiadd
push
mov
push
outs
int
dec
push
mov
dec
push
es
jns
cli
jb
ins
pusha
sub
in
int
int3
ins
cmp
rcl
xchg
pop
jo
sub
or
pop
lods
xchg
cs
mov
jg
shr
jno
scas
icebp
jno
imul
inc
scas
mov
inc
pop
dec
push
push
push
cmp
sub
daa
pushf
inc
ret
inc
cli
stos
cmp
into
mov
mov
cli
mov
icebp
xor
fidivr
xchg
scas
xchg
cli
jmp
cmp
mov
push
dec
out
cld
dec
loopne
mov
mov
sbb
cdq
icebp
out
pop
jge
xchg
inc
bound
push
cmps
mov
fcmovnb
les
lods
sub
or
stos
jmp
xor
inc
mov
adc
sub
ins
ja
sbb
in
gs
mov
neg
adc
outs
ja
fcmovnbe
mov
push
stc
push
adc
mov
dec
jbe
call
xlat
sbb
cmps
xchg
sbb
fnstcw
cmp
dec
aam
push
inc
arpl
xchg
mov
cmps
mov
outs
xchg
adc
ins
jmp
jle
lahf
mov
or
inc
dec
sbb
inc
jae
sbb
push
sbb
mov
sahf
adc
mov
gs
push
rcl
ds
mov
jns
and
mov
adc
xor
jg
into
adc
add
pop
cmps
inc
push
adc
movs
iret
mov
repnz
call
xchg
jnp
retf
push
in
sahf
mov
ja
sti
push
ss
iret
cmp
jns
call
shl
pop
lods
sahf
jo
iret
ins
jmp
arpl
dec
mov
test
dec
inc
scas
pushf
aas
pop
mov
or
mov
cmp
jbe
(bad)
push
xchg
nop
mov
fsub
ficom
test
dec
mov
inc
mov
push
cmpxchg
inc
push
pop
and
xlat
int3
pushf
test
aad
sub
mov
in
or
sub
mov
inc
pop
or
cmps
lods
dec
aas
sub
pop
cmp
outs
pop
add
xchg
nop
mov
mov
aas
retf
push
in
popa
into
cmp
iret
std
jb
mov
adc
pop
clc
ficomp
fst
mov
repz
mov
shr
das
pop
cmp
add
iret
lahf
(bad)
cld
mov
jb
or
jp
push
mov
sub
inc
add
(bad)
lock
or
ret
outs
inc
mov
push
nop
jns
pop
add
les
dec
call
call
ret
cmp
xchg
movs
dec
cld
imul
daa
in
jo
fistp
repz
xchg
jb
movs
jb
jbe
add
int3
push
sub
pusha
push
mov
mov
adc
pop
movaps
out
jae
call
popa
mov
xchg
push
(bad)
adc
nop
std
enter
jge
dec
jbe
cmps
lds
xor
icebp
xchg
cwde
loop
mov
mov
mov
add
data16
mov
leave
mov
mov
loopne
aas
jbe
jl
stos
mov
imul
(bad)
sbb
mov
fbld
mov
inc
pop
adc
dec
out
movs
jo
dec
xchg
movs
pusha
inc
(bad)
cmp
retf
mov
mov
xchg
cwde
(bad)
stos
ss
shl
not
fsub
test
push
or
sbb
mov
jmp
or
aaa
and
jg
or
movs
loope
stc
ins
(bad)
jae
lock
lods
bound
pop
sbb
jg
sbb
xlat
ficomp
xchg
adc
add
sub
inc
xchg
cld
imul
jmp
(bad)
jo
jmp
pop
cli
aas
ret
fbstp
hlt
push
mov
(bad)
gs
push
mov
fdiv
push
ja
add
(bad)
mov
lahf
jg
frstor
in
cmps
stc
mov
fisubr
jnp
icebp
adc
jg
xchg
push
xor
fild
xor
jl
xor
rcl
frstor
ficomp
outs
out
add
sbb
dec
sbb
lea
mov
pop
jbe
js
repz
aaa
pop
cmc
out
(bad)
jmp
imul
arpl
(bad)
jp
lds
fimul
arpl
inc
(bad)
and
outs
icebp
fs
call
or
or
or
dec
pop
repnz
xchg
sbb
jge
loop
jns
sti
leave
xchg
movs
inc
cmp
in
ret
or
add
or
dec
fs
call
adc
push
stos
cdq
inc
out
and
pop
jmp
ret
push
or
cmp
mov
hlt
pusha
jns
cwde
xor
in
(bad)
and
pop
imul
jle
pop
inc
add
push
adc
stos
adc
in
push
clc
call
pop
inc
aad
cmp
sub
lods
dec
jl
iret
mov
test
mov
jge
pop
push
aad
outs
xchg
in
in
out
stos
fild
inc
lgs
cmc
xor
jp
pop
ins
cdq
in
aaa
jae
and
out
inc
xor
or
test
cwde
xchg
add
pushf
dec
ja
mov
imul
in
adc
cmc
aas
mov
retf
cli
pop
cwde
movs
add
fcom
das
aad
cdq
sub
fdiv
dec
mov
gs
fsubp
mov
jnp
mov
ins
dec
mov
ins
movs
call
sub
outs
clc
mov
inc
fs
std
arpl
sbb
lods
pinsrw
fiadd
mul
shl
or
mov
daa
gs
xchg
mov
sub
js
(bad)
xor
dec
ja
push
icebp
or
pop
mov
jecxz
ret
in
dec
mov
cmp
or
nop
inc
sub
out
lock
iret
addr16
cmp
dec
jno
or
cmp
xchg
sahf
jo
mov
lock
add
rcr
add
ins
push
das
push
int3
inc
dec
mov
mov
cmp
bswap
pushf
(bad)
sbb
inc
iret
add
mov
add
inc
mov
sub
lods
call
and
inc
ret
loope
imul
push
mov
adc
arpl
iret
sbb
and
cli
mov
lods
and
push
and
pop
movs
jne
stc
inc
push
shl
jge
xchg
add
dec
jl
sub
jecxz
xchg
icebp
in
ret
mov
data16
lea
gs
cdq
mov
push
aas
sub
mov
shl
test
adc
pop
aas
xlat
sub
push
(bad)
lds
test
and
iret
sbb
ret
rcr
(bad)
das
mov
clc
ins
imul
ins
adc
pop
out
shr
stos
mov
out
std
mov
repnz
dec
mov
cmps
mov
push
jns
loop
pusha
test
bound
std
mov
add
cmp
popf
(bad)
outs
cmp
or
inc
paddusb
(bad)
arpl
sub
je
mov
jno
and
aaa
and
scas
add
mov
std
add
add
ret
nop
sub
out
fwait
ja
fist
dec
fimul
retf
imul
sbb
jle
test
push
fwait
bound
xchg
push
cmp
enter
dec
(bad)
cmp
ins
cmp
sbb
or
xor
ret
jg
push
outs
int
hlt
cwde
fwait
mov
jl
mov
out
iret
sub
pop
gs
imul
cdq
adc
inc
fisttp
or
mov
imul
addr16
adc
ret
out
push
les
mov
mov
(bad)
adc
cdq
cmp
sub
sbb
inc
leave
xchg
stos
mov
add
cwde
fwait
adc
cmp
xor
sub
mov
leave
call
mov
cmp
push
inc
dec
mov
mov
xor
neg
sti
xchg
aam
gs
jle
and
mov
xchg
jns
pop
adc
and
ret
loop
rcl
rol
outs
jmp
xor
adc
jmp
push
pop
sahf
xor
pop
fnstenv
add
daa
ds
dec
ins
mov
sahf
inc
imul
daa
in
int3
push
xor
sti
aaa
mov
and
sbb
and
xor
adc
stos
or
ret
fucomp
and
addr16
pop
or
dec
and
mov
mov
cli
pop
inc
jbe
out
and
mov
jmp
cld
mov
sbb
push
mov
jmp
pop
push
dec
fs
fcmovbe
outs
fwait
xor
xor
leave
adc
sbb
mov
jp
or
cmp
in
push
cwde
loope
fidivr
movs
cwde
outs
shr
jns
dec
dec
nop
mov
or
add
or
das
mov
cwde
push
int
add
rcl
int3
push
rol
mov
out
int
pop
ret
fisub
push
in
mov
test
push
jmp
mov
and
ret
jne
cmp
push
add
push
bound
test
add
mov
and
imul
jge
pop
mov
pop
lea
push
dec
repz
int3
cmp
jbe
in
test
ds
ins
push
or
adc
pop
and
sbb
mov
stos
dec
add
jmp
loope
stos
sbb
adc
not
push
mov
imul
or
push
pop
mov
xchg
pop
cdq
sbb
aas
mov
mov
cmc
lea
lock
(bad)
std
inc
inc
inc
sbb
xor
inc
cmp
adc
cmc
aaa
test
leave
or
jne
or
dec
std
(bad)
and
jp
sub
ins
mov
sub
clc
inc
adc
mov
jae
cmp
je
dec
shl
cs
call
lods
mov
and
push
call
cmps
mov
dec
xor
nop
fstp
add
sbb
pop
mov
cmps
sub
jae
dec
jb
fist
push
xchg
mov
sbb
in
adc
xchg
cs
jns
fisub
std
loopne
sti
jecxz
push
movs
push
or
imul
push
mov
loop
xchg
ror
push
mov
sbb
mov
cmps
jge
and
mov
adc
int3
adc
sub
mov
fucomi
pop
inc
loop
xor
xchg
or
outs
push
and
shr
pop
pop
mov
mov
xchg
sbb
in
imul
pop
retf
mov
cs
aaa
je
fsub
cli
cmc
mov
pop
push
cwde
mov
inc
mov
inc
outs
xor
sub
inc
xchg
cmp
fs
ja
(bad)
ds
mov
enter
cmp
cmc
stos
xor
adc
scas
pop
enter
push
fwait
(bad)
out
mov
mov
enter
add
inc
outs
les
mov
mov
ret
or
mov
jmp
mov
sbb
scas
add
mov
cmc
mov
aad
(bad)
ja
cmp
dec
adc
mov
lods
jle
lods
std
mov
sbb
aaa
dec
sbb
lds
test
ret
mov
stos
jnp
add
pop
leave
add
pushf
or
cmp
outs
jg
pop
cmp
or
jle
xchg
and
add
(bad)
xchg
popa
adc
stos
aad
xor
ins
in
sbb
dec
or
jecxz
lock
mov
add
lock
cld
icebp
pop
(bad)
mov
mov
bound
mov
adc
mov
outs
repz
test
cmp
repz
(bad)
jecxz
ror
out
sbb
jmp
pop
ins
push
leave
and
mov
cmp
and
or
push
sub
nop
push
mov
and
fisub
out
sub
loop
adc
fstp
mov
jo
jae
popa
mov
stos
(bad)
fadd
movnti
call
mov
pop
jmp
ins
dec
push
sbb
pop
add
fwait
inc
or
cmp
jmp
rcl
jae
xchg
and
mov
push
sahf
leave
sbb
xor
mov
fst
fistp
out
jb
mov
mov
and
xor
out
push
test
mov
test
ret
pop
(bad)
out
cli
popf
inc
dec
xchg
outs
ror
shl
xchg
dec
add
cmp
pop
aam
cmp
sub
push
int3
jle
in
mov
push
or
xchg
or
push
cmps
hlt
cmp
xchg
xor
xor
jnp
jae
xor
addr16
xor
jp
jmp
or
dec
and
cmc
inc
add
loop
popf
movs
mov
ja
outs
enter
push
callw
lahf
out
icebp
iret
lahf
fbstp
shl
adc
lahf
dec
repz
das
mov
add
aaa
dec
mov
mov
fyl2x
sbb
outs
imul
cmp
bound
sub
in
sbb
push
ficomp
xchg
pushf
sub
(bad)
mov
clc
adc
inc
mov
pusha
jp
jae
lods
push
adc
iret
mov
jmp
xchg
bnd
test
mov
cmp
leave
adc
sbb
fwait
jl
out
mov
test
xchg
ficomp
xchg
idiv
or
(bad)
test
clc
pop
js
(bad)
push
xchg
stos
les
xor
mov
inc
jg
sahf
xchg
cmp
fild
and
add
stc
mov
mov
jb
push
jo
sub
or
cmp
shr
dec
sub
mov
jns
pop
sbb
test
or
mov
retf
jmp
push
mov
mov
jnp
mov
les
mov
popf
not
loopne
lea
adc
fistp
sub
dec
inc
and
push
out
callw
sub
sbb
push
push
mov
xchg
es
ret
xchg
enter
test
clc
fnsave
jle
push
push
push
adc
push
shl
out
jecxz
jg
shl
mov
call
repz
(bad)
clc
call
mov
jmp
or
ins
xor
dec
jns
xor
lods
pop
(bad)
loopne
inc
xor
mov
(bad)
xchg
or
xlat
add
push
(bad)
in
push
pusha
aam
sub
xchg
data16
xchg
mov
sub
inc
pop
push
or
retf
les
cmp
mov
xchg
dec
popa
(bad)
pop
adc
adc
or
dec
out
jnp
in
mov
push
popf
bound
sbb
mov
xlat
jle
cmp
and
add
or
mov
iretw
cmp
ret
in
pop
inc
fnstcw
(bad)
in
or
mov
add
and
in
neg
cli
loop
in
dec
inc
ja
xchg
push
xor
cmp
mov
or
rcr
fist
repz
mov
xor
into
mov
mov
xor
icebp
das
jno
test
jmp
or
push
push
inc
test
dec
cld
aaa
mov
inc
ins
lock
movs
retf
xor
mov
lahf
add
push
jl
dec
push
movs
sbb
sub
sub
cmp
pop
sahf
inc
cmp
mov
sbb
(bad)
cs
ds
pusha
imul
jle
stc
add
mov
enter
in
les
ret
ins
pushf
fisub
outs
mov
clc
aam
xor
mov
out
cmp
mov
pop
mov
xor
pop
bound
nop
mov
inc
shl
out
ds
mov
or
int
cmp
lock
pop
les
loopne
lock
std
es
pop
imul
and
xchg
xchg
loope
(bad)
fwait
imul
(bad)
jl
out
fisubr
push
mov
ret
push
dec
fisubr
call
shl
inc
imul
and
pop
sti
or
dec
mov
xlat
mov
mov
int
in
outs
sbb
lahf
jl
rol
and
cwde
jle
xor
fild
retf
je
xor
mov
jg
outs
mov
mul
pop
mov
dec
pop
stos
xor
sbb
icebp
mov
mov
or
scas
adc
inc
nop
inc
push
outs
jb
mov
setb
(bad)
cs
or
xchg
fyl2xp1
bound
test
jmp
loopne
mov
lods
jbe
sahf
sub
xlat
xchg
sub
and
xor
and
push
adc
mov
xchg
add
push
mov
mov
ret
shl
inc
sbb
cmp
loopne
fld
mov
gs
ret
push
call
ins
aam
dec
mov
loope
add
sub
push
adc
push
movs
mov
es
jecxz
dec
xor
adc
xor
and
das
outs
in
fwait
test
push
jbe
bound
div
mov
movs
pop
lea
and
dec
cmps
iret
js
dec
aaa
shl
scas
and
cmp
add
inc
ins
popa
fwait
outs
push
and
sub
add
mov
or
retf
cwde
fiadd
lea
jge
loope
add
shl
jnp
fwait
xor
jo
mov
xlat
sahf
jecxz
dec
shl
je
div
jle
cmps
or
xor
popf
mov
test
aas
arpl
mov
add
in
div
dec
mov
sub
shl
and
mov
and
test
(bad)
pop
mov
add
or
push
out
add
js
jle
dec
out
and
int
cwde
dec
and
lds
ficom
mov
or
movd
mov
push
mov
outs
mov
lahf
out
daa
xchg
xor
clc
addr16
out
shl
test
jmp
sbb
push
sub
mov
stos
mov
add
push
xor
(bad)
pop
push
adc
xor
xchg
call
add
or
icebp
adc
in
cdq
dec
xor
int3
push
jb
stos
leave
loop
xor
cmp
xchg
ds
push
mov
cs
or
pop
pop
aad
popf
cmc
jle
cmovne
jecxz
es
jb
mov
sub
loop
and
dec
push
(bad)
call
icebp
xchg
pop
cmp
pusha
cmp
ret
adc
pop
sbb
lods
cmp
jecxz
pop
sahf
sti
int
sbb
jb
and
pop
sub
vrsqrtps
sar
repnz
mov
movs
add
add
lahf
sub
stos
push
push
movs
pushf
push
mov
or
jo
scas
push
xor
or
mov
fimul
lea
fstp
iret
adc
adc
pop
cli
pop
sahf
cmp
movs
inc
repnz
dec
fimul
add
daa
ror
pop
aaa
xchg
mov
stos
dec
pop
sbb
mov
cs
(bad)
cmps
mov
jae
mov
inc
cli
sub
xlat
cmps
jp
add
xor
xchg
pop
push
aas
or
and
call
fild
xchg
leave
sbb
loopne
in
shr
sbb
call
or
push
lds
sar
jecxz
out
jl
movs
iret
lahf
cmp
xor
or
scas
sbb
xchg
jg
xchg
sbb
test
int
(bad)
sbb
cwde
cs
mov
add
xor
adc
shr
mov
and
sbb
ficomp
mov
sbb
lds
pushf
sub
cmc
sub
adc
or
test
fsubr
je
cwde
bound
mov
clc
xchg
mov
nop
stos
mov
loop
pushf
pop
fistp
aaa
xor
sbb
les
jmp
pop
and
je
mov
fwait
push
out
ret
xor
fistp
daa
dec
mov
sub
test
adc
cmp
fs
aas
mov
or
cmp
lds
lea
xor
sbb
jbe
xchg
add
mov
repz
pop
pop
sub
loope
jb
xchg
xchg
shl
pushf
sub
hlt
push
(bad)
push
xchg
lods
mov
add
jl
sbb
xchg
add
and
and
cmp
jb
xor
xchg
aas
data16
dec
sub
leave
adc
mov
sub
sahf
inc
jmp
mov
dec
add
and
pop
xchg
fsubr
add
ins
mov
lea
ror
cmp
push
test
fwait
mov
inc
(bad)
cmps
fisttp
cmp
mov
sub
cld
cmc
dec
cmp
cmps
push
pop
in
inc
mov
dec
xor
add
sbb
jecxz
sub
xchg
xchg
out
mov
cmp
popf
push
xlat
movs
sbb
cmp
xor
add
or
sbb
jbe
adc
rcr
sub
ins
xchg
pop
into
push
inc
sub
ds
add
mov
push
dec
cmp
movntq
out
cdq
dec
fcmovu
jnp
adc
jb
mov
or
hlt
sub
xchg
ss
xor
(bad)
ss
rcl
xor
jmp
jnp
(bad)
push
mov
std
adc
aad
add
jge
iret
and
test
enter
xchg
leave
inc
aad
dec
adc
clc
arpl
fdiv
popa
popa
pop
dec
in
add
aad
dec
aas
sahf
jns
and
jbe
pop
es
push
pop
gs
add
clc
orps
adc
xchg
hlt
fwait
gs
pop
cmp
fsubr
mov
jl
fisubr
addr16
inc
xchg
fst
repnz
not
cmps
xchg
das
(bad)
sbb
push
sub
or
stc
fsub
mov
iret
lds
sar
pop
sahf
mov
pop
add
mov
pop
call
rcr
cmp
pop
into
sar
cs
cmps
jo
push
inc
pop
sub
js
lahf
pop
inc
mul
adc
cmp
dec
neg
pop
mov
xchg
in
add
cmps
js
jp
xchg
sub
adc
jo
xchg
mov
retf
call
or
push
scas
bound
out
mov
jno
inc
or
jnp
adc
jp
jl
mov
aaa
fs
jnp
push
jl
call
cs
cmp
cmp
pop
add
fst
dec
shl
mov
clc
mov
dec
dec
loope
fistp
xor
inc
sbb
mov
ja
mul
shl
je
sbb
lock
mov
xor
jle
(bad)
sub
mov
cmp
aas
mov
je
dec
jl
jnp
retf
gs
je
push
shr
ja
dec
dec
inc
ins
repz
(bad)
sub
cmp
mov
lds
jp
xor
cmp
ins
pop
xchg
or
fbld
adc
or
xchg
(bad)
adc
mov
sbb
jbe
sbb
adc
push
das
(bad)
push
daa
loopne
jmp
dec
inc
mov
popa
adc
rcr
je
mov
(bad)
shl
or
std
xor
std
jns
fild
jne
(bad)
pop
lds
cmp
dec
je
aam
or
out
imul
push
xor
jg
ficomp
ret
in
mov
mov
fdiv
call
pop
fiadd
in
je
jge
cs
push
aaa
xor
push
add
test
xor
and
ret
xchg
movs
mov
dec
idiv
dec
(bad)
stos
movs
stos
test
daa
cmp
into
mov
xchg
(bad)
mov
or
(bad)
out
repz
pop
mov
push
push
neg
rcl
shl
icebp
imul
cli
pop
cs
jg
mov
sub
jl
cmc
test
or
pop
fisubr
pop
and
in
adc
scas
imul
mov
adc
cmp
mov
and
leave
shr
leave
sar
adc
addr16
mov
dec
xchg
or
jl
push
pop
fsubr
movs
cdq
jbe
dec
and
mov
xchg
cmp
movs
add
imul
fsub
jg
rol
jo
stos
mov
jbe
push
mov
sub
pop
add
loop
fnstcw
xchg
das
(bad)
adc
int
cli
jbe
cmps
lods
arpl
xor
retf
mov
sub
pop
shr
aam
cdq
inc
imul
movs
jl
inc
jnp
jg
jmp
or
jmp
rcl
cld
dec
mov
loopne
sbb
retf
popa
cmp
rcr
popf
mov
retf
rep
sbb
add
std
jge
hlt
fiadd
and
inc
xlat
loop
pusha
test
pop
adc
mov
xchg
(bad)
ins
pop
cmp
or
mov
ret
xchg
and
pushf
xlat
or
test
cmp
mov
xchg
adc
push
pop
mov
(bad)
and
mov
mov
(bad)
sbb
in
cdq
std
ins
cwde
mov
fstp
fwait
mov
ins
adc
inc
loopne
ja
inc
aad
xchg
cmps
out
pop
dec
test
xchg
into
sub
push
add
and
das
mov
(bad)
and
lods
cmp
inc
enter
add
jne
jmp
xor
outs
inc
lock
inc
push
cmp
mov
xchg
pusha
jb
dec
je
mov
dec
ss
lahf
dec
push
sbb
pushf
sbb
push
xor
push
push
lods
xor
das
aas
cmp
sahf
fwait
cli
arpl
leave
cwde
out
aas
je
push
cmc
and
pop
sbb
jbe
lds
dec
je
or
call
push
inc
add
(bad)
aas
fwait
add
adc
cmps
retf
leave
popf
and
aam
pop
and
sub
inc
addr16
ret
int
std
sub
(bad)
fild
jnp
mov
aas
mov
sub
mov
mov
in
stos
aam
jmp
mov
lods
xlat
jmp
int
sbb
pop
mov
fdiv
jge
cpuid
mov
stos
xchg
cmps
and
stc
sbb
sub
and
lods
and
add
inc
pusha
cmp
fs
test
xchg
pop
aaa
and
pop
xchg
adc
add
loope
in
lds
retf
in
fcompp
xor
fld
sar
adc
mov
xlat
scas
arpl
sbb
fiadd
sub
cmp
fdivr
xor
and
cmc
cdq
scas
push
xchg
mov
scas
movs
arpl
push
call
test
pop
(bad)
shl
mov
mov
xlat
nop
inc
loop
icebp
mov
pop
pop
loop
leave
nop
lahf
xor
sub
sbb
leave
mov
jl
xlat
fnstsw
cmp
xor
(bad)
cdq
test
jmp
pop
bound
add
xchg
pop
sbb
loope
ret
shr
pop
icebp
shl
int
call
pop
test
adc
mov
sub
mov
push
pop
xor
adc
outs
idiv
xor
es
pop
add
inc
xor
sub
test
mov
scas
sub
dec
popf
out
xchg
test
ins
xor
inc
and
ret
dec
lahf
add
rcl
and
lods
stos
xchg
popf
cmc
imul
jg
mov
and
addr16
iret
repnz
or
js
test
cmps
imul
and
out
cmp
movs
push
out
out
xlat
dec
dec
ficomp
nop
test
lahf
adc
xchg
out
fs
xchg
bound
jmp
push
sbb
(bad)
jnp
(bad)
or
sti
dec
ror
icebp
dec
ret
mov
inc
xchg
mov
and
xor
and
clc
inc
cmp
(bad)
fbld
stos
adc
jge
sub
inc
sahf
jae
es
xchg
jecxz
xchg
lods
mov
sub
mov
addr16
int
mov
push
js
mov
outs
xor
mov
leave
icebp
push
pop
push
aad
dec
hlt
sbb
sbb
push
jae
(bad)
or
popa
adc
lock
add
out
je
cmp
xor
loopne
push
jmp
nop
out
jno
call
retf
fnstenv
jbe
(bad)
scas
xchg
leave
out
xchg
xchg
and
les
scas
mov
sub
(bad)
sti
xor
int3
dec
loopne
xchg
shl
es
scas
xchg
int3
js
icebp
jb
push
push
aas
xchg
and
sub
sbb
inc
adc
mov
inc
es
ja
mov
or
dec
push
add
mov
jmp
(bad)
call
xchg
add
jecxz
adc
add
inc
cmp
dec
and
jecxz
in
push
shr
std
std
nop
sub
enter
lods
addr16
loopne
xor
inc
jmp
push
xlat
jo
lock
xchg
inc
out
inc
sbb
(bad)
or
ror
pop
fimul
jns
mov
retf
stc
icebp
ret
pushf
add
inc
push
push
push
adc
xor
dec
mov
and
loop
xchg
enter
and
shr
cmp
xchg
les
cmp
mov
pop
push
mov
cwde
hlt
push
sbb
push
xchg
add
cdq
xor
pop
(bad)
and
xchg
inc
sbb
jne
add
jae
xchg
imul
out
add
in
adc
fdiv
sub
rol
xor
retf
mov
push
inc
fnstenv
dec
cmps
and
pop
aaa
mov
mov
xor
aas
add
add
dec
aaa
mov
jmp
mov
and
adc
cli
cs
ins
mov
inc
inc
push
scas
xor
test
frstor
adc
jnp
xchg
shl
jmp
es
sub
cmp
lds
inc
ret
stos
shr
fst
adc
cmp
dec
or
call
aaa
mov
cmp
pop
mov
cwde
cmc
imul
cmps
std
fadd
ficom
sbb
dec
lods
fidivr
push
dec
dec
cmp
pop
dec
push
mov
into
cmp
xor
push
je
mov
cli
pusha
movs
or
(bad)
xchg
mov
repnz
mov
mov
dec
test
imul
mov
or
mov
addr16
cmp
sub
or
cmps
lock
js
mov
pop
fldcw
mov
xor
stc
test
xor
sub
cmp
jl
pop
ins
std
xchg
arpl
inc
mov
sbb
xlat
inc
pushf
movs
clc
sbb
push
mov
stos
mov
mov
gs
sub
cmp
cmp
jle
test
daa
vcvttsd2si
scas
mov
mov
mov
jne
out
not
pushf
jno
jo
montmul
cmps
(bad)
xchg
pop
and
lods
mov
stos
vpandn
aad
sub
enter
aaa
nop
mov
inc
imul
sub
popf
and
sub
jmp
dec
clc
cmp
cmp
in
xchg
test
cmp
push
push
mov
sbb
jmp
and
lahf
pop
outs
shr
pop
xor
call
sub
dec
push
cmp
es
retf
xchg
sbb
xchg
lea
pop
lock
mov
cdq
push
in
mov
mov
sub
shl
mov
mov
adc
inc
std
stos
aas
jbe
(bad)
push
mov
pop
mov
out
fst
out
mov
pushf
adc
sub
fisubr
(bad)
push
xor
cmp
and
ret
mov
mov
aas
pop
sub
test
(bad)
out
xor
rcl
stos
sub
sbb
xor
jge
push
pop
fcmovne
pop
cmps
std
loope
push
rol
pop
or
pop
popa
retf
lds
lahf
mov
adc
cmps
jns
jl
call
or
call
fdiv
adc
push
jmp
outs
repz
and
cmp
out
outs
and
out
addr16
bound
pop
xchg
int3
test
in
jbe
pop
fs
and
or
cdq
push
dec
cmp
dec
in
mov
xchg
inc
mov
sub
mov
scas
xor
sub
loop
push
out
into
test
adc
xchg
aas
mov
and
sub
pop
das
test
sub
arpl
bound
ins
add
fidiv
xchg
ins
pop
nop
aas
xor
loope
imul
in
dec
adc
lods
out
cmp
leave
mov
xchg
and
inc
icebp
xor
cli
sub
cmc
adc
pop
lods
mov
fadd
je
call
lahf
cmp
fimul
mov
out
xchg
jno
adc
(bad)
mov
cmp
jge
sbb
xor
ja
jg
jbe
nop
fcom
dec
push
pop
aad
jl
xchg
stos
(bad)
mov
adc
ret
jp
pop
sbb
mov
inc
(bad)
and
aam
repnz
imul
les
hlt
mov
mov
push
out
pop
push
or
ret
inc
jp
rcr
sub
(bad)
cs
jecxz
rcr
movs
push
mov
fisubr
stos
pop
std
out
xor
cmp
popa
or
dec
mov
or
nop
push
jecxz
scas
cmp
jns
xchg
ds
push
pop
cmps
daa
xchg
test
mov
hlt
pushf
pop
fcomi
push
push
xchg
(bad)
popa
aad
jnp
sub
ins
test
mov
cmp
sahf
lods
xor
and
imul
jne
jg
cld
pop
lock
cmp
push
xor
dec
out
push
icebp
cmp
clc
cmp
mov
sub
mov
inc
retf
cmps
push
jp
jb
sahf
(bad)
push
fs
push
add
stos
jl
jno
enter
dec
xchg
dec
cmp
xchg
and
enter
push
push
jae
inc
sub
leave
lds
hlt
dec
or
and
or
xchg
les
jecxz
retf
add
repz
add
push
scas
inc
or
movs
jmp
mov
in
jmp
and
add
fsub
fisubr
or
add
cmp
outs
xor
or
xchg
(bad)
pop
xchg
sbb
xor
scas
jne
mov
push
jae
mov
iret
mov
jnp
loop
inc
inc
stos
ins
xor
mov
push
adc
mov
nop
sbb
scas
adc
aad
or
clc
les
sbb
icebp
test
xor
int
push
cmp
cvtdq2ps
ss
xchg
gs
push
cld
imul
sub
sbb
fmul
mov
mov
add
inc
popa
(bad)
mov
dec
pushf
fistp
jmp
or
adc
pop
int
pop
in
(bad)
int3
dec
mov
fnstenv
xchg
aam
jmp
dec
dec
shld
pop
sbb
pop
xchg
cli
into
dec
sbb
add
dec
pop
imul
mov
cdq
inc
mov
xchg
sbb
pop
cmps
dec
outs
mov
mov
adc
xchg
dec
xor
into
scas
out
mov
and
jnp
icebp
or
das
and
dec
cmp
xor
jecxz
and
mov
popf
mov
adc
dec
xor
adc
pop
cwde
mov
jne
retf
jns
stos
out
call
dec
mov
and
dec
fisttp
fidiv
popa
push
movs
pop
mov
out
rcr
pushf
jp
es
daa
popa
out
mov
xchg
jnp
lahf
push
int3
out
dec
or
aad
lock
cmc
cmp
mov
jmp
inc
xchg
pushf
fwait
sub
(bad)
and
push
xlat
pop
mov
mov
cmps
cs
cs
cli
mov
adc
stos
sub
adc
faddp
lea
cli
inc
pop
mov
popw
ja
inc
or
cmc
mov
mov
je
(bad)
mov
ret
dec
aaa
dec
pusha
imul
jb
frstor
jmp
movs
dec
xor
mov
inc
mov
popf
xor
sub
out
clc
jecxz
aam
cmp
xor
dec
add
jae
pusha
cmp
sub
mov
shl
pop
cmp
mov
das
sbb
aam
sbb
cwde
mov
mov
and
jb
rol
xchg
jmp
jecxz
xchg
pop
icebp
mov
push
lods
mov
and
cmp
mov
add
ret
push
sub
push
test
fmul
cwde
mov
add
in
ror
sbb
push
jmp
mov
push
or
int
inc
repnz
stos
or
lea
mov
scas
mov
jne
outs
jle
out
jae
xor
and
sub
fcmovnb
jg
inc
adc
ja
inc
loopne
mov
push
aas
or
sbb
scas
mov
mov
sahf
ins
add
dec
xchg
mov
repnz
xor
and
jb
jo
sbb
and
cld
mov
adc
ffree
xchg
ss
clc
xchg
adc
test
cmps
lock
cwde
cdq
call
dec
xor
mov
into
leave
pop
push
retf
popf
cmc
loop
fwait
push
pushf
in
call
frstor
aad
dec
or
call
les
jmp
lock
xlat
in
sub
sbb
dec
mov
sbb
mov
sbb
out
(bad)
pop
dec
xor
je
mov
add
jmp
icebp
jle
and
in
dec
and
cmovbe
jbe
hlt
dec
lods
cmp
out
int3
shl
(bad)
xchg
mov
das
pop
imul
fisttp
push
(bad)
fnsave
rcl
aas
clc
cwde
sbb
pop
js
out
inc
dec
jo
fisubr
dec
jl
and
lea
shr
xchg
dec
loopne
jne
hlt
std
sbb
xchg
dec
mov
inc
adc
(bad)
dec
cld
or
cwde
cmps
adc
ja
push
mov
jnp
cs
push
mov
pop
xchg
push
mov
xchg
test
mov
add
push
call
fdivr
mov
pop
or
arpl
push
cmc
stos
push
stc
in
xchg
imul
cmps
pop
jg
es
xor
adc
and
pop
pop
jg
in
pop
add
push
ins
int
sub
xlat
mov
push
mov
push
push
sub
push
push
pop
mov
sub
push
cmp
add
pushf
xchg
jl
or
push
jmp
pop
jle
or
add
aas
popa
nop
ins
xor
fnsetpm(287
lods
dec
adc
inc
pop
jl
jg
push
fstp
cmp
aas
push
mov
popa
push
xchg
sub
jns
shl
ja
mov
pop
aaa
pop
xchg
ret
add
repz
cmc
mov
cmp
lods
ja
cli
pop
jle
fdiv
ja
out
or
stos
arpl
es
mov
cmc
clc
add
sahf
push
pop
or
cmp
pop
mov
mov
shl
pushf
jmp
jno
rcl
sahf
adc
jnp
and
cmp
ret
sbb
stos
push
inc
xchg
jae
outs
mov
sbb
test
push
and
dec
xor
int
or
mov
xlat
xor
movs
mov
push
jmp
add
popa
xor
jmp
xchg
jns
outs
in
sti
fs
ret
rcl
pop
pop
aam
or
jecxz
ins
in
cld
add
adc
nop
mov
and
sub
pop
push
or
sti
ja
ret
mov
mov
ficom
rol
and
cli
call
mov
std
clc
and
adc
jmp
daa
leave
and
add
inc
jae
mov
fst
dec
bnd
cs
mov
ins
adc
add
jmp
jns
retf
fiadd
mov
jl
add
fcomp
loop
adc
loop
movs
sti
fimul
ror
pop
add
pushf
lock
ja
pop
aad
ss
in
fstp
stos
pop
mov
adc
(bad)
loop
push
ror
mov
rol
ins
xchg
push
sahf
imul
fwait
jl
fadd
inc
in
dec
rcr
inc
sahf
nop
adc
sbb
cdq
mov
mov
loop
sub
and
and
adc
jns
ds
ret
rcr
loopne
fstp
jge
iret
mov
int3
mov
adc
mov
adc
adc
and
inc
jge
ja
mul
fsubrp
nop
rcr
imul
mov
mov
aaa
jl
cmp
aas
lods
mov
push
lds
cmp
pop
rcr
loopne
adc
clc
sub
mov
std
retf
add
sub
mov
jge
sbb
repz
mov
adc
fcomp
ja
leave
cmp
push
hlt
mov
arpl
xchg
mov
pop
pop
adc
mov
pop
nop
push
xor
add
arpl
test
and
in
push
das
cmp
aad
je
inc
push
fsubr
aam
pop
hlt
and
pop
add
xor
lea
retf
sbb
jae
sub
sti
(bad)
stc
aaa
push
push
xor
mov
push
sahf
into
daa
jno
adc
ror
sar
imul
dec
(bad)
xchg
scas
scas
jno
rol
mov
sti
push
or
cli
jge
retf
sbb
push
inc
bound
ja
lods
mov
xor
xor
or
les
stc
adc
ss
data16
popa
push
jbe
xlat
mov
inc
call
in
cmp
add
sbb
dec
lea
or
or
pop
sahf
and
xchg
mov
dec
loopne
daa
out
pop
add
cwde
gs
push
xchg
adc
add
rcr
je
aam
(bad)
sbb
(bad)
jne
xchg
mov
outs
dec
(bad)
xchg
fnstsw
jne
sub
pop
js
shl
sub
sub
call
fnstcw
cmps
cdq
and
arpl
adc
mov
test
jle
test
test
sbb
es
adc
jno
imul
arpl
push
inc
ja
call
outs
and
aas
jmp
inc
mov
xchg
mov
push
(bad)
xor
call
dec
fldenv
jb
mov
pop
mov
data16
inc
and
rcl
(bad)
int3
push
pop
dec
mov
xchg
and
xlat
adc
dec
mov
xor
push
call
into
adc
adc
bound
adc
lods
lods
inc
inc
ror
outs
pop
inc
inc
sub
xchg
xchg
es
ins
lahf
les
fidiv
sub
pusha
xor
pop
bound
pop
cdq
pop
les
or
xchg
adc
mov
lock
iret
add
push
stc
call
push
in
jmp
jp
test
retf
fst
xchg
sub
pop
sbb
or
inc
jnp
mov
xor
and
or
sub
cdq
xor
cld
pause
sbb
dec
adc
inc
inc
push
icebp
xchg
jl
and
xor
or
fnsave
mov
ins
add
loop
push
pop
sub
das
repz
loope
or
stc
mov
dec
lds
push
xchg
loope
and
fsubrp
jle
mov
clc
out
popf
pop
sub
add
and
in
xchg
or
clc
je
jmp
jle
push
inc
jmp
shl
xlat
icebp
dec
jp
inc
ficomp
or
jg
xchg
loope
cmps
dec
sub
pop
and
mov
leave
push
outs
mov
popa
int
loop
sub
jo
cli
sub
push
shr
stos
and
pop
loop
xchg
pop
int
mov
ja
mov
out
pop
int
fisub
sub
jmp
dec
stos
stos
sti
xor
adc
cmp
fwait
loope
rol
xor
xor
nop
ficom
shl
mov
xor
lods
fsubp
sbb
in
dec
cmp
or
stos
movs
adc
mov
imul
clc
lahf
adc
enter
inc
lds
mov
mov
aad
pop
xor
mov
sbb
iret
dec
or
sub
imul
xor
mul
inc
jp
jne
or
xchg
arpl
inc
dec
rcr
loope
xchg
sub
sub
out
out
int
mov
jge
push
mov
mov
in
and
jl
xor
add
cld
pop
mov
test
imul
or
xchg
mov
es
xor
adc
pusha
push
inc
rol
int
test
sbb
mov
stos
fld
pop
sbb
mov
test
mov
loopne
xchg
push
imul
or
push
test
es
jle
(bad)
rol
(bad)
out
push
dec
xor
arpl
test
push
push
jne
jmp
fistp
lock
dec
enter
fist
mov
je
push
in
ins
push
clc
jg
aas
imul
mov
out
bound
in
shl
(bad)
and
add
adc
jl
sidtd
sub
test
mov
rcl
pop
xlat
out
pushf
stos
leave
jg
and
sbb
std
cmp
stc
and
or
ficomp
add
outs
dec
add
(bad)
mov
mov
mov
jle
pop
jno
pop
sar
clc
jb
je
mov
retf
inc
inc
scas
out
mov
sub
int
mov
pop
sub
les
sbb
jb
xor
ffreep
cdq
sahf
mov
push
js
mov
xchg
out
movs
mov
sbb
and
jp
int
out
aaa
inc
and
ds
xor
mov
imul
or
pop
cwde
push
mov
mov
xchg
stos
mov
jb
imul
jae
cs
sub
inc
lds
mov
ret
jl
das
fld
sub
sub
(bad)
leave
iret
retf
mov
pop
jbe
pushf
mov
or
jp
jecxz
shr
jne
mov
xor
enter
movs
xor
out
mov
gs
fisttp
mov
push
or
dec
movs
aad
out
imul
mov
pop
out
jl
push
mov
push
sbb
xlat
lods
pushf
or
push
pop
adc
or
mov
dec
stos
xchg
inc
out
sub
retf
repz
lods
std
out
and
add
inc
sbb
in
sub
xchg
scas
iret
retf
adc
lods
int3
into
int
mov
jl
jnp
adc
out
nop
test
cmp
movs
sbb
ja
mov
aad
mov
cmp
sub
mov
xchg
sub
mov
loop
cmp
retf
fdiv
ror
fcom
mov
jb
call
inc
stos
mov
push
or
pop
jle
jmp
aad
in
imul
mov
pop
ins
daa
or
pop
add
loopne
ja
sub
scas
lea
leave
push
xchg
stos
and
cli
loopne
ficomp
push
idiv
rol
jp
sub
xor
pop
jmp
std
ret
cmp
mov
fbld
test
add
cmp
lea
outs
fcomip
(bad)
xchg
es
jae
call
dec
fistp
sti
imul
cmp
mov
push
adc
fcom
retf
pop
mov
push
dec
cld
xchg
pop
cdq
popa
jmp
sub
jne
mov
or
mov
adc
xchg
xor
dec
inc
pushf
ds
mov
xor
pop
psrlq
loope
aaa
and
lds
push
shr
ins
dec
int3
adc
ret
mov
pop
leave
into
xor
push
dec
sbb
adc
inc
xlat
jae
ds
sub
or
(bad)
shl
mov
xchg
cli
into
push
mov
addr16
and
or
and
lods
loope
sar
pop
push
jno
xchg
outs
sbb
pop
or
xor
xor
sti
adc
xchg
cwde
xchg
retf
mov
add
xor
clc
jg
xchg
adc
or
into
mov
push
out
pop
mov
mov
fld
les
push
and
stos
out
xchg
cmp
lahf
les
out
stc
lahf
mov
aam
or
loope
mov
add
pop
sbb
add
popa
dec
push
shl
out
xlat
rcl
(bad)
jnp
idiv
mov
add
push
movs
xchg
jmp
lods
fsub
mov
pusha
(bad)
and
js
aas
cmc
mov
cmp
mov
cmp
es
imul
push
test
sbb
lds
movs
lods
int3
cmp
ficom
dec
xchg
xor
or
and
fidiv
push
adc
cdq
aaa
xchg
imul
xchg
aam
inc
pop
sar
(bad)
cs
sti
jo
retf
sbb
mov
xchg
cmp
ins
(bad)
ins
stos
push
mov
ja
and
fsub
mov
jae
add
clc
sbb
push
pop
inc
cwde
sti
add
dec
call
stos
fs
or
aam
lock
test
dec
repz
cmp
retw
mov
cmc
cmp
je
into
cmps
and
jne
inc
(bad)
sbb
popf
cmp
mov
cli
and
jbe
sub
xchg
scas
inc
xchg
sub
mov
rcl
jmp
or
adc
int
cli
retf
(bad)
div
mov
dec
jbe
mov
jmp
push
shl
aaa
lods
xchg
pop
into
fwait
nop
cwde
sbb
pop
int3
mov
sub
pop
call
(bad)
lock
ins
xchg
aad
dec
dec
cmp
(bad)
mov
addr16
jb
icebp
rcl
std
loope
cmp
jb
jno
cld
enter
(bad)
hlt
pop
adc
dec
repnz
adc
mov
cs
mov
cld
inc
adc
int3
js
leave
mov
stos
bound
es
pop
adc
adc
adc
adc
sbb
and
ficom
call
jp
repz
sub
clc
movs
retf
adc
jge
jp
clc
scas
xor
stos
cmp
inc
scas
nop
xor
xor
mov
push
add
push
push
dec
xchg
mov
pop
add
mov
pop
mov
arpl
daa
xor
rcl
inc
je
ret
jb
xor
adc
ins
push
mov
enter
inc
test
add
mov
sti
je
xchg
xor
cmps
jg
and
scas
jmp
inc
pop
xchg
pop
sbb
in
stc
stos
call
sbb
pop
rcr
jge
(bad)
pop
cwde
add
adc
pop
push
mov
pop
fld
aas
cwde
mov
cmps
dec
aam
mov
cmp
jg
or
mov
add
(bad)
sahf
or
stc
or
jae
cwde
inc
out
icebp
jno
cmp
retf
repz
call
xor
les
adc
mov
test
cmps
aas
mov
ja
idiv
or
inc
out
ds
push
or
fild
fistp
sbb
cdq
arpl
mov
pushw
jo
mov
bound
or
jnp
xchg
dec
bound
cli
sub
retf
sub
dec
icebp
cmp
push
imul
jne
movzx
cmp
xor
dec
aas
and
out
jae
loope
mov
cld
xchg
fbstp
push
dec
rcl
xchg
push
cmc
adc
cmp
xchg
push
inc
inc
sub
ret
fadd
lds
sahf
push
ror
sbb
lods
sahf
test
push
mov
dec
or
sbb
call
rcl
pop
sub
test
mov
adc
(bad)
fisttp
dec
and
mov
fimul
push
xor
daa
inc
dec
lea
mov
fnstsw
and
sti
cld
push
sbb
xchg
or
mov
jmp
inc
lea
fist
das
shl
rcl
mov
inc
out
jg
sub
lds
adc
in
rcl
mov
mov
jp
shr
fidiv
imul
cmp
add
call
cwde
inc
mov
les
aaa
hlt
dec
add
push
or
mov
in
imul
push
adc
jbe
enter
lods
cwde
sub
sbb
adc
adc
ja
mov
and
out
fs
pop
xor
and
fidiv
mov
(bad)
jo
cmp
pop
mov
inc
and
leave
hlt
iret
stos
mov
pop
out
hlt
pop
jae
fwait
ss
test
and
shr
xchg
or
mov
sar
mov
pop
pop
sbb
adc
rcl
out
repz
inc
adc
pop
dec
js
jbe
push
mov
or
(bad)
dec
add
jl
lods
push
pop
push
mov
xchg
add
mov
push
jmp
pop
mov
push
push
xor
test
aaa
test
sub
bound
test
pop
sbb
inc
adc
add
push
fist
leave
jae
cmp
je
(bad)
fbld
cli
imul
add
fsubr
mov
lods
sub
sub
xor
imul
fsub
jb
mov
ret
mov
cmps
mov
stos
xor
mov
cmp
pop
sub
jns
gs
adc
jbe
dec
xor
outs
popa
fist
push
or
mov
push
sbb
mov
mov
ret
pop
ror
mov
push
into
dec
adc
and
cmps
push
lds
mov
inc
mov
adc
jmp
out
rcr
aas
sbb
int
aas
add
pop
jno
cmp
fisttp
push
cdq
sbb
xlat
mov
fs
sub
push
aad
cmp
stc
adc
xchg
test
and
sbb
adc
mov
inc
outs
inc
push
leave
mov
mov
mov
test
out
enter
add
or
push
jle
jp
xchg
shl
xchg
test
pop
rcr
pusha
jno
clc
out
rcl
xor
inc
inc
je
int3
xchg
or
lea
aaa
test
fst
(bad)
in
inc
sub
dec
mov
jmp
adc
std
and
sbb
sub
dec
mov
dec
or
div
out
lds
cmp
sbb
xchg
or
lock
mov
fbstp
sti
stos
xchg
ror
add
cmp
adc
out
lods
(bad)
popf
mul
sbb
ret
ficomp
push
xchg
cmp
arpl
leave
inc
add
(bad)
imul
jae
daa
pusha
not
mov
test
inc
add
push
cmp
daa
int
pop
mov
(bad)
rcl
pop
sub
clc
pop
cmps
xlat
sbb
push
pusha
xor
mov
jae
pop
mov
inc
sti
je
push
out
xchg
test
cdq
mov
inc
pop
(bad)
xchg
push
fwait
and
std
or
mov
xchg
leave
pushf
xor
sbb
les
push
cmp
jnp
and
je
push
mov
daa
push
das
push
cli
sbb
or
jp
ret
arpl
mov
(bad)
mov
test
jmp
sete
xchg
xchg
push
fwait
jo
das
pop
pushf
pushf
loop
and
neg
xor
imul
and
and
sub
jecxz
mov
mov
fstp
dec
xor
mov
sbb
cmp
lods
pop
mov
cmps
and
sub
inc
mov
inc
cmp
xchg
call
pop
sub
(bad)
clc
sub
mov
pop
rol
pop
cmp
sbb
and
add
aas
add
inc
data16
test
das
and
sar
int
(bad)
out
mov
dec
nop
iret
(bad)
and
nop
pop
imul
fst
xor
popf
mov
inc
inc
call
add
lds
leave
cmp
xchg
in
cmps
sub
inc
(bad)
std
jecxz
add
sbb
mov
xchg
mov
pop
sub
dec
inc
outs
(bad)
push
inc
sbb
add
fild
adc
or
mov
add
push
cmc
ret
std
and
inc
stos
pop
jae
fcomi
xchg
les
hlt
pop
movs
add
add
sbb
std
jnp
cs
pop
and
sub
fistp
pusha
out
sbb
ins
je
sub
or
icebp
mov
push
out
aas
fcom
aaa
sub
xor
add
mov
pop
push
push
pop
inc
mov
lds
(bad)
daa
fdiv
mov
out
(bad)
imul
addr16
push
add
int
sar
repnz
hlt
or
dec
call
retf
adc
scas
outs
aaa
xchg
cmps
mov
and
fst
jmp
push
sub
bound
hlt
xchg
sahf
test
dec
push
repz
int
or
in
inc
dec
and
push
pop
ds
sahf
pop
ret
lahf
shl
or
mov
in
inc
cmp
int3
data16
jmp
jl
idiv
sbb
adc
push
pop
inc
pop
nop
in
outs
fs
adc
pop
mov
push
jne
out
cmps
ds
jno
jge
jl
aam
ins
jbe
scas
mov
pushf
stos
idiv
int
cmps
and
shr
push
test
fsub
jno
and
xor
scas
xor
mov
int
leave
jle
pop
js
cmp
add
push
dec
(bad)
mov
adc
sbb
lahf
mov
push
cmps
fwait
scas
(bad)
int
aam
arpl
fidiv
mov
hlt
out
pop
push
jmp
lock
mov
es
das
and
push
ins
mov
movs
or
jecxz
sbb
scas
jb
jle
pop
and
add
es
mov
cmp
mov
aas
cmp
adc
or
das
out
dec
push
sbb
sub
pop
jmp
(bad)
xor
sti
mov
call
adc
push
mov
aam
sahf
daa
and
pop
and
gs
scas
and
mov
imul
sbb
inc
sub
fidivr
dec
inc
mov
sahf
retf
scas
movs
test
mov
ds
push
add
aas
in
adc
(bad)
mov
or
or
out
lahf
sub
cld
pop
push
add
push
out
aam
add
inc
lods
aad
in
cli
fcmovnu
cmp
ja
movs
cld
cdq
or
mov
push
xor
xchg
inc
fwait
movd
cwde
pop
or
sub
das
push
inc
cmp
out
push
add
(bad)
sti
dec
loop
dec
test
dec
xor
xchg
jl
outs
cmp
dec
(bad)
jmp
data16
add
or
push
rcl
fld
adc
imul
in
shl
sbb
int3
mov
push
push
mov
add
test
je
das
fnstcw
pop
and
test
stos
cmps
adc
popa
mov
mov
(bad)
xlat
and
or
mov
push
rol
dec
xor
popf
fist
or
push
in
pushf
cmp
test
xor
cdq
mov
and
jne
retw
sub
jmp
inc
(bad)
pop
(bad)
int
addr16
ins
sbb
lods
stos
push
movs
out
nop
(bad)
call
mov
arpl
mov
xchg
xor
add
and
pop
in
mov
outs
sub
sbb
loop
push
repnz
mov
test
jge
add
ja
retf
not
dec
vphaddbq
jnp
sub
push
test
int
fxam
sbb
jl
neg
xchg
in
fdiv
jg
(bad)
rcl
icebp
xchg
mov
xchg
sbb
and
pop
fsub
ss
mov
daa
(bad)
push
mov
gs
in
adc
sub
aam
xchg
movs
daa
pop
and
dec
rol
mov
aam
inc
xor
(bad)
xchg
outs
jecxz
jmp
ds
pop
jb
mov
js
mov
mov
sub
fidivr
stos
xchg
sbb
test
fsubr
nop
mov
int
jmp
add
ins
cmps
push
or
adc
jp
outs
push
mov
or
je
dec
jmp
enter
adc
mov
dec
sub
jbe
jnp
dec
imul
cmp
mov
scas
ja
gs
dec
lods
sbb
arpl
ret
cmps
jg
mov
mov
jae
enter
mov
test
cmp
in
pop
js
hlt
int3
xchg
addr16
mov
xchg
sahf
or
jnp
dec
cld
add
gs
dec
jmp
sub
xor
inc
adc
cmp
inc
mov
xchg
jp
lock
cwde
imul
imul
xchg
imul
nop
push
mov
cmp
and
sbb
inc
and
rcr
xor
dec
repnz
xor
and
stc
js
jle
and
push
not
jp
in
(bad)
fist
sub
mov
pusha
mov
call
retf
fwait
pop
fild
bound
cmp
sbb
inc
adc
fucomip
(bad)
sub
jg
cmp
adc
pop
imul
mov
sti
lock
xchg
rcr
sub
xchg
and
shl
repnz
loope
(bad)
adc
inc
xor
retf
xor
stos
iret
sbb
pop
(bad)
jbe
test
sbb
scas
dec
jns
in
out
enter
mov
test
in
add
inc
nop
fcomip
dec
sti
gs
jg
mov
lea
xchg
es
sbb
cmp
cmps
ret
icebp
sub
les
test
outs
loop
rcr
lods
inc
cmp
add
loope
pop
and
shr
add
dec
into
std
das
mov
loope
adc
push
je
ror
mov
retf
xchg
sub
sahf
sbb
lahf
sub
icebp
lahf
adc
mov
pop
adc
xchg
sub
aas
mov
sti
ins
mov
nop
repnz
sbb
mov
stos
gs
neg
sub
mov
inc
ss
mov
xor
loopne
aad
mov
mov
daa
stos
push
xchg
in
stos
add
les
aaa
test
jns
data16
or
cwde
jp
popa
aaa
iret
aad
repz
call
or
mov
sbb
fwait
mov
outs
sahf
popa
dec
dec
and
(bad)
call
js
pop
jg
je
push
ins
xchg
arpl
vmaxss
cmp
pop
in
xlat
xor
inc
stos
sbb
stc
mov
pop
jmp
mov
xor
jno
sbb
inc
loope
(bad)
pop
push
ret
mov
or
dec
mov
or
inc
pop
mov
jp
pop
add
in
retf
call
lea
bound
cmps
jmp
jge
pop
imul
sar
iret
mov
or
push
iret
jg
jo
mov
rcr
dec
fwait
cmps
lahf
dec
aas
mov
xchg
inc
pop
hlt
aas
std
lahf
mov
sahf
imul
xor
adc
mov
ds
inc
mov
(bad)
es
mov
ror
jmp
pop
in
xor
mov
out
or
loop
cmps
mov
mov
sub
movs
sahf
adc
ins
push
int3
and
push
sub
mov
jnp
xor
mov
inc
and
stos
sar
cli
ins
pop
push
cmp
mov
arpl
mov
cmps
and
jle
xchg
in
dec
fldenv
pop
jb
into
fwait
scas
inc
sar
popa
data16
stos
dec
pop
daa
std
in
jg
mov
mov
shl
add
dec
dec
xor
retf
mov
jno
test
hlt
cdq
pop
mov
adc
ss
sub
jo
pop
xlat
fidivr
dec
push
dec
xor
retf
add
fcom
neg
shl
outs
and
inc
mov
jo
inc
imul
les
movs
fisttp
inc
inc
in
sub
in
addr16
ret
sbb
fstp
mov
jmp
push
hlt
mov
ds
fadd
and
and
sub
pop
retf
push
int
mov
in
js
mov
push
inc
cmps
add
outs
mov
mov
popf
leave
ja
test
movs
scas
push
lea
inc
jmp
and
push
or
add
push
rcl
cmp
mov
retf
jg
pop
mov
pop
xchg
xchg
jge
dec
fcom
pop
scas
mov
xor
cmc
mov
in
jle
pushf
idiv
movs
ds
xor
adc
inc
inc
popa
dec
daa
mov
inc
test
test
fstp
ds
xor
jne
or
lods
xchg
xor
hlt
hlt
sar
or
fimul
adc
inc
inc
mov
sahf
ja
cmp
iret
inc
sub
adc
movs
sub
div
pop
mov
daa
dec
adc
shl
push
shl
push
popf
push
cmp
cwde
mov
or
push
jp
and
addr16
jmp
rsqrtps
and
push
movs
push
mov
xchg
push
add
add
xchg
jb
xchg
fstp
push
xchg
push
mov
int3
mov
and
mov
mov
mov
and
ret
mov
mov
push
jp
pop
aad
cs
es
pop
pop
jecxz
push
sub
mov
fadd
mov
jmp
js
call
push
push
xor
mov
cwde
jp
mov
movs
ret
add
add
popa
adc
jb
pop
sbb
sbb
shl
dec
outs
fndisi(8087
sahf
loop
(bad)
pop
imul
jno
sbb
add
popf
fist
and
ins
cs
icebp
js
icebp
inc
cmps
inc
out
jmp
push
cmps
add
dec
jecxz
mov
ret
shl
sbb
xchg
cmp
stos
jmp
imul
fidivr
std
adc
fsubp
ret
mov
lea
jecxz
fcomp
adc
mov
shl
inc
cmps
movs
std
and
or
jecxz
sbb
fnsave
out
shl
sahf
in
sbb
div
inc
cmp
cli
mov
cmp
dec
rol
xchg
mov
cmps
cmp
xchg
dec
inc
nop
imul
push
fcmovb
lock
ret
call
jne
rcr
call
int3
(bad)
pushf
ins
push
nop
jns
cmp
test
rol
sub
pop
call
push
aam
or
dec
pop
retf
mov
push
imul
fild
stc
push
xor
push
xchg
ss
cdq
pop
data16
jle
les
inc
push
cmp
pop
std
mov
out
dec
(bad)
mov
imul
pop
fs
push
push
loopne
pop
pushf
cld
ror
inc
xchg
fs
xchg
push
mov
std
and
out
lahf
shl
push
add
xchg
aam
dec
test
add
jl
jmp
ja
sub
pop
cmps
cmp
pop
jbe
cs
lods
sbb
xchg
loop
dec
js
inc
stos
xchg
movs
jb
ret
xor
retf
loop
(bad)
jns
retf
inc
mov
add
cs
test
loope
and
pop
add
test
cs
in
js
mov
clc
ret
sub
pop
jl
retf
or
call
gs
pop
cmp
jmp
sbb
(bad)
cmp
into
das
jmp
xor
mov
aaa
and
inc
out
inc
lods
sub
sbb
aas
sar
sub
out
mov
jne
icebp
fmul
enter
xor
fld
jg
jmp
sahf
xor
xor
pushf
ss
stos
mov
stos
in
(bad)
pop
outs
cmp
stos
push
in
xchg
int3
pop
push
push
out
out
cmp
pop
xchg
sub
xor
(bad)
div
stos
hlt
popa
pop
lock
aas
and
adc
movs
lock
mov
xchg
sar
in
inc
in
fbld
(bad)
arpl
inc
(bad)
push
test
popa
das
mov
call
dec
int
xlat
frstor
cmps
xchg
out
fs
push
adc
pop
cs
retf
dec
sub
add
jge
add
xchg
fisub
(bad)
test
jne
mov
adc
add
imul
sub
mov
aad
sbb
test
dec
(bad)
push
aam
xchg
out
sbb
mov
outs
inc
rol
mov
iret
or
push
stos
aaa
sbb
sub
or
cmp
jmp
inc
bound
xchg
movs
enter
xchg
test
mov
mov
movs
fbld
mov
mov
js
mov
adc
push
stos
into
mov
cld
sahf
mov
adc
pop
or
pop
nop
cmp
rcl
xlat
inc
pop
ficomp
push
jge
scas
jmp
bound
inc
nop
xchg
xchg
sub
push
dec
(bad)
imul
js
sub
lods
in
call
mov
xor
jecxz
enter
mov
sub
movs
mov
push
xchg
sbb
jge
or
lods
sub
arpl
and
in
mov
outs
pop
inc
es
push
scas
xchg
(bad)
sbb
(bad)
mov
aam
push
xchg
mov
dec
jbe
pop
xor
call
rcl
push
inc
in
shl
fistp
and
inc
and
movs
out
mov
push
fsubr
pop
inc
dec
rcr
call
push
loope
cli
sub
int3
pop
(bad)
jne
pop
xchg
in
cwde
adc
lods
pop
retf
psubusb
out
add
mov
aad
jbe
sbb
inc
vmwrite
push
lock
or
mov
sub
xor
adc
je
and
cmc
sub
aas
jle
sbb
mov
sub
cmc
mov
and
out
call
nop
out
ins
test
mov
push
pop
inc
movd
jae
test
dec
add
hlt
test
repz
sti
mov
adc
adc
ss
cmp
pop
sub
push
stc
sbb
sar
pop
pop
jnp
jne
popa
xlat
pusha
jecxz
das
mov
ins
pop
pop
xor
fidiv
xor
fsub
dec
sub
cs
jno
mov
rcr
imul
hlt
arpl
es
pop
jno
adc
xchg
mov
or
aas
jbe
mov
into
xchg
mov
stc
(bad)
fidiv
mov
jnp
and
stos
scas
pop
mov
(bad)
out
add
inc
call
popf
test
pop
push
sbb
cmp
pop
sbb
lea
pop
mov
and
jns
pop
hlt
inc
mov
or
outs
jbe
xor
into
out
sar
test
xchg
es
sub
cmp
retf
std
mov
or
cmps
ror
push
ins
je
jb
xchg
lods
mov
mov
adc
jp
enter
push
jae
push
sar
sbb
adc
jl
jmp
retf
xor
inc
mul
arpl
mov
fdivr
aad
fldcw
pop
(bad)
clc
sbb
imul
mov
rcl
dec
cmps
ja
jp
mov
in
test
lock
pusha
cmp
jns
aaa
push
or
or
xchg
test
cmp
pop
sti
pop
xchg
push
adc
call
pop
and
clc
mov
or
pop
inc
jmp
repz
xor
add
jmp
lock
push
test
and
out
or
js
pop
lods
bound
ins
cdq
pop
push
sub
sbb
mov
mov
nop
pop
jmp
pop
lock
xchg
mov
and
xor
push
xchg
pop
in
dec
inc
dec
in
and
pop
iret
fadd
inc
cli
repnz
das
loope
sar
mov
ja
lods
fld
jg
ret
pop
jno
dec
or
dec
es
popa
mov
mov
sahf
popa
dec
rcr
adc
inc
mov
(bad)
fld
cmp
fstp
loope
sub
add
push
mov
lea
mov
repnz
lods
pop
popf
cs
mov
in
mov
cli
cmps
stos
into
ror
loope
aas
hlt
aam
add
daa
pop
repz
inc
es
(bad)
cli
sahf
sub
(bad)
pop
fst
or
jae
inc
stos
setge
in
or
movaps
jbe
push
jl
push
(bad)
xlat
stos
and
(bad)
mov
aas
aas
and
pop
pop
mov
mov
cmp
mov
rcr
push
xor
jle
fs
clc
jp
xor
(bad)
mov
loope
sti
(bad)
mov
inc
sub
push
dec
mov
cdq
adc
sbb
imul
jp
mov
shr
gs
add
push
int3
in
enter
sbb
mov
aad
(bad)
mov
sar
add
jnp
pop
retf
pop
mov
lock
cmp
stos
(bad)
xchg
lods
or
test
and
test
mov
test
adc
cli
nop
enter
lods
mov
iret
jo
(bad)
pushf
sbb
mov
adc
sbb
es
es
cmp
in
mul
cwde
iret
or
pop
mov
mov
outs
xchg
call
dec
mov
xchg
inc
imul
stos
movs
(bad)
std
aaa
rcl
or
cmp
arpl
xor
or
pushw
xchg
mov
pop
pop
mov
jmp
imul
xor
xor
dec
mov
sti
js
and
dec
jmp
push
ss
push
cmp
repz
jmp
jmp
jg
or
ds
(bad)
xlat
nop
xchg
or
push
push
jge
mov
dec
fisub
loop
add
sbb
int3
or
in
xor
daa
je
ret
push
stos
adc
pop
fiadd
hlt
retf
paddusb
sbb
(bad)
jae
pusha
jl
push
add
push
pushf
neg
sub
nop
fcomp
repnz
out
jbe
add
lds
sbb
popf
pop
imul
ss
movs
fldenv
test
push
or
inc
enter
mov
xchg
adc
or
div
xlat
pop
sub
push
mul
aam
sbb
fdiv
mov
ss
bound
mov
shl
popa
cmp
scas
fist
jmp
mov
add
mov
sub
je
dec
push
test
sub
mov
data16
dec
mov
div
loopne
inc
out
sti
dec
adc
pop
ins
es
cmp
(bad)
fstp
cmp
push
push
pop
fidiv
into
(bad)
lock
test
stc
inc
sub
add
lods
mov
sub
pop
mov
in
enter
add
push
les
or
mov
cdq
(bad)
retf
out
dec
mov
repnz
cvtdq2ps
jne
mov
imul
fdivp
cli
fs
dec
adc
out
fs
sbb
mul
shr
add
cli
shl
test
inc
push
cmp
xor
movs
clc
retf
sar
icebp
ins
xchg
and
xlat
neg
(bad)
and
jp
mov
or
fwait
stos
push
pop
fimul
pop
push
scas
retf
fadd
sub
cmp
shl
xchg
aaa
sbb
outs
cmp
repnz
jnp
lods
inc
stos
mov
aad
fstp
ds
pop
mov
sub
fmul
sbb
dec
push
sub
inc
out
fiadd
push
sbb
sub
mov
xor
mov
add
xor
or
mov
data16
adc
pop
popf
jns
jl
dec
xchg
pop
jno
ret
jmp
ror
mov
pop
movs
mov
dec
scas
(bad)
or
jno
rcl
xor
repnz
push
pop
stos
pop
push
push
sub
and
push
bswap
push
cmp
clts
add
inc
xlat
iret
cld
push
push
cld
push
mov
pop
xor
xchg
xchg
xchg
mov
pop
jge
stos
pop
fcmovu
dec
sti
xchg
fbstp
mov
push
mov
inc
stc
iret
sub
jo
sub
sub
push
push
retf
int
nop
xor
gs
sbb
js
in
ds
aam
scas
ror
ror
and
pop
dec
(bad)
(bad)
and
cmp
mov
adc
or
mov
pop
outs
ja
jle
scas
jb
mov
push
ja
mov
ret
sbb
sub
pop
popa
xor
shl
adc
scas
sti
mov
fistp
scas
xchg
das
movs
lods
and
mov
cwde
jnp
retf
fs
ins
shl
adc
cmps
inc
pusha
sbb
mov
fist
inc
cmp
es
call
mov
fistp
pop
or
jb
sub
lods
mov
jmp
shl
and
test
add
into
xchg
inc
repz
test
into
jnp
xor
or
hlt
inc
mov
push
mov
lock
mov
add
dec
retf
icebp
or
jnp
jnp
jb
push
pusha
jns
push
push
jp
cmps
cmps
pop
pop
out
fldcw
ja
repz
mov
jno
push
test
jbe
repz
ins
mov
enter
jnp
mov
call
(bad)
jmp
dec
pop
popa
xor
call
xor
ror
mov
push
imul
pop
and
ins
gs
test
cmps
jae
or
mov
test
fsubp
xor
adc
add
xchg
in
(bad)
pusha
scas
xor
inc
dec
popa
retf
jle
retf
scas
stc
or
cmp
test
aaa
mov
xor
pop
xor
add
cmps
daa
test
or
addr16
(bad)
mov
jp
pusha
adc
in
jmp
sub
sbb
stc
es
ficom
add
mov
inc
add
xor
fistp
jge
or
scas
add
enter
xor
mov
lahf
and
(bad)
sahf
adc
test
movs
sti
and
ja
fbstp
movs
je
aam
mov
mov
pop
sub
fstp
and
mov
mov
outs
pop
adc
into
lahf
mov
movs
sbb
push
mov
xchg
stos
xor
shl
or
dec
not
push
in
scas
pop
or
mov
fs
in
out
(bad)
mov
loope
test
imul
add
(bad)
fwait
jne
xchg
xchg
jp
test
dec
add
mov
push
xlat
leave
icebp
or
inc
adc
add
out
sub
dec
mov
loope
sbb
push
mov
out
add
das
xor
gs
mov
pusha
cmp
sbb
and
test
xchg
setle
add
repnz
xchg
add
dec
imul
or
xor
jmp
xlat
inc
dec
or
out
push
in
ficomp
mov
div
dec
clc
scas
inc
ror
scas
out
iret
(bad)
dec
imul
push
test
fcomi
icebp
scas
ret
shl
sub
ss
loopne
cmp
or
les
fwait
and
hlt
adc
push
aad
fwait
pop
ss
in
xor
add
xchg
fwait
sub
scas
sbb
pop
(bad)
mov
cmp
pop
lea
xchg
out
add
clc
(bad)
loope
push
pop
or
mov
shr
arpl
lea
or
movs
and
push
int3
imul
xor
data16
jne
ficom
jb
test
stc
stc
mov
jns
inc
enter
shl
int
xor
sub
int
mov
xchg
mov
inc
push
cs
fcmovnu
mov
adc
adc
in
cmp
xchg
inc
sar
jbe
imul
adc
push
movs
pop
inc
test
or
cmps
mov
cmp
repnz
gs
ins
xchg
pop
pop
loope
xchg
(bad)
cdq
pop
ja
stos
mov
inc
inc
pop
cdq
inc
in
stos
ficomp
mov
xchg
add
cld
mov
idiv
lock
ins
sub
xchg
push
push
movs
jle
jge
bound
adc
sahf
push
int3
ror
sar
hlt
mov
dec
rcl
xchg
lea
inc
loopne
rol
inc
cmc
ror
daa
push
movs
imul
out
sar
jle
xchg
mov
cmp
cld
push
jle
mov
hlt
jmp
pop
sbb
aaa
iret
pop
dec
add
jl
pop
mov
xchg
mov
shl
push
sub
call
push
mov
adc
sbb
popf
and
inc
jb
dec
xchg
outs
pushf
sub
fnsave
inc
scas
push
push
mov
call
pop
retf
dec
xor
push
dec
icebp
out
int
(bad)
sbb
push
adc
leave
xchg
sbb
ss
ret
jmp
daa
dec
xor
les
retf
dec
enter
push
ret
push
fdiv
call
sbb
mov
xchg
into
pop
inc
or
lea
retf
outs
xchg
adc
ss
iret
inc
ret
imul
xchg
xor
sbb
loope
stc
ret
cwde
xor
and
or
cdq
test
sub
mov
jecxz
push
jbe
repnz
scas
std
push
loop
sbb
cmp
std
push
mov
outs
neg
xor
pop
sub
retf
pop
ror
push
icebp
or
(bad)
aam
mov
mov
push
inc
cmp
sbb
push
inc
and
mov
in
leave
jp
mov
push
(bad)
sahf
mov
int3
retf
fdivr
fist
(bad)
push
out
mov
(bad)
adc
jo
movs
shl
stc
adc
push
arpl
and
dec
jp
(bad)
adc
ds
call
sub
xor
fidivr
inc
js
pop
and
movs
loopne
add
xchg
adc
int3
ss
ins
inc
aaa
pushf
mov
loopne
mov
ror
gs
mov
sbb
push
retf
jae
dec
sub
js
test
mov
js
sbb
sub
or
pop
addr16
jmp
aas
dec
jbe
out
dec
fadd
sub
movs
fcmovu
ins
outs
ins
leave
sub
xchg
sub
call
sahf
push
daa
ins
cmp
test
add
push
enter
pushf
mov
push
aas
add
xchg
sbb
push
into
out
fdiv
jl
jmp
stos
adc
add
xlat
add
push
ins
fnsave
pusha
mov
sti
xor
pop
retf
push
xchg
add
mov
lds
xor
inc
jmp
inc
rcl
push
jle
aam
gs
push
cld
shl
and
(bad)
vpsrad
sbb
pop
cdq
dec
mov
and
scas
jb
cmps
mov
push
in
adc
ror
push
push
cmps
mov
sahf
jo
adc
fs
in
or
jnp
xchg
cmps
clc
push
(bad)
mov
jmp
push
ins
add
or
mov
ss
retf
test
jmp
adc
or
sbb
or
pop
inc
xor
and
dec
je
int
(bad)
int3
es
repnz
mov
mov
push
sbb
in
push
cld
(bad)
jae
or
pop
xor
push
popf
setg
(bad)
push
xor
dec
adc
movs
jmp
js
inc
repz
pop
push
mov
bswap
les
or
xor
cmp
iret
into
or
mov
in
fnstcw
mov
ins
aad
out
jmp
pop
pop
pop
sub
push
stc
in
out
jge
mov
loopne
mov
(bad)
cmp
aaa
and
pop
cld
pusha
fwait
arpl
add
leave
push
call
pushf
xor
aad
dec
dec
nop
add
pop
push
sbb
test
push
in
lock
push
fild
cwde
jl
or
imul
pop
jne
arpl
jbe
dec
push
xor
or
in
stos
ret
in
loop
mov
mov
aam
(bad)
cld
push
ret
jmp
popf
into
sub
fistp
jle
in
retf
push
or
scas
(bad)
mov
ret
out
ret
into
pop
jge
fidiv
(bad)
sti
cmp
dec
adc
sbb
mov
aam
or
mov
jb
jp
(bad)
aaa
repz
push
pop
dec
movs
sbb
pop
out
push
pushf
lock
lods
dec
jnp
inc
rol
mov
adc
cmps
mov
push
cwde
mov
push
imul
or
or
in
cli
aam
xchg
push
cmc
cmp
(bad)
jns
div
push
jno
sti
aam
adc
lods
dec
and
pop
and
adc
in
pushf
stos
pop
mov
clc
sub
fdivr
or
adc
loopne
imul
cmps
mov
cmp
das
repnz
push
mov
(bad)
rcl
jbe
iret
sub
jle
mov
mov
js
frstor
pop
push
rcr
out
rcl
cld
pop
and
jge
adc
ds
in
jp
adc
mov
add
ins
fwait
retf
call
ror
sbb
nop
ret
scas
dec
out
inc
mov
cmp
test
das
ret
stos
in
fbld
in
xor
fcomp
jb
lds
pop
jbe
loop
push
ins
loop
mov
mov
fwait
nop
nop
lock
and
pop
adc
dec
sar
dec
add
into
push
hlt
inc
repz
mov
ja
ret
shr
jo
ins
(bad)
loop
lahf
vorpd
mov
inc
test
mov
cld
push
aaa
movs
out
popf
xchg
clc
js
sub
test
push
dec
jnp
cs
pop
fadd
dec
pusha
mov
icebp
daa
push
shr
dec
je
mov
pop
imul
and
mov
xor
sub
xchg
jne
frndint
cmp
inc
xor
push
call
or
mov
int
pop
push
fucomp
push
sbb
ret
pusha
popa
jmp
jp
push
push
into
in
jmp
fwait
jbe
lea
loop
into
xor
lods
xor
jl
jge
jmp
outs
dec
push
icebp
fwait
nop
adc
std
jno
fwait
jge
lea
loope
and
add
in
cld
add
mov
mov
dec
inc
pop
lahf
sbb
cmp
fisttp
sbb
sti
sub
enter
lock
sub
jle
nop
pushf
add
mov
outs
adc
and
call
add
loope
or
add
clc
mov
xchg
mov
adc
dec
imul
dec
mov
aad
jmp
lds
xor
shl
mov
mov
das
jb
push
rcr
and
sub
addr16
mov
daa
cmp
mul
sbb
add
pusha
sub
dec
jbe
shl
fnstenv
push
leave
es
pop
xor
test
ins
sbb
xchg
xor
add
aas
mov
shr
xchg
ret
push
(bad)
(bad)
in
sar
mov
sub
test
pop
mov
jb
repz
dec
inc
sub
call
in
jo
xchg
lss
cmp
cwde
push
dec
inc
repz
aam
mov
ror
aad
movs
adc
ins
mov
sahf
inc
cmc
aad
mov
add
inc
xchg
pop
sub
pop
adc
ret
js
mov
dec
gs
push
fldcw
nop
ss
and
pop
dec
jecxz
push
or
into
ja
mov
shr
pusha
cs
(bad)
popf
clc
dec
jmp
sub
into
and
cmp
sar
sbb
mov
xchg
(bad)
mov
cli
or
cld
mov
push
add
inc
lea
(bad)
pop
outs
inc
xor
jo
retf
adc
xor
mov
and
push
test
mov
pop
cmps
out
pop
mov
fcomp
aas
ret
sub
pop
jp
popf
add
jle
rcl
mov
call
shl
push
ror
fadd
inc
cmp
(bad)
(bad)
cmps
pop
in
sub
dec
sbb
std
xchg
jno
mov
xchg
inc
jns
cmp
mov
iret
cmp
xor
sub
dec
and
fld
out
cmp
repnz
xchg
mov
push
into
stc
adc
ins
xlat
fnstenv
jmp
test
sub
push
cmp
cwde
jo
repnz
inc
fsub
sub
push
arpl
stc
repz
lock
pop
sbb
inc
call
jne
inc
adc
xchg
lea
pop
mov
pop
or
test
out
shr
and
loope
retf
adc
sbb
jo
fcom
ja
mov
shr
push
ins
jae
int
int
xchg
push
inc
xor
cs
cmc
push
add
pop
mov
bound
rcr
mov
mov
mov
cld
and
push
(bad)
pop
imul
jno
ret
dec
fsubr
loop
mov
push
dec
sub
fwait
out
popf
cld
jg
rol
mov
and
mov
mov
mov
and
test
(bad)
test
mov
lahf
loopne
push
data16
pop
std
or
dec
shl
loop
dec
mov
adc
mov
test
pop
sbb
jle
cmp
xchg
pop
jecxz
mov
(bad)
mov
imul
mov
or
(bad)
dec
ins
lahf
push
cmp
loope
push
test
in
shr
or
xor
dec
sub
js
shl
mov
inc
out
xor
pop
sub
in
adc
rol
mov
mov
nop
fld
pushf
pusha
ja
sub
sbb
shl
mov
mov
dec
sub
xchg
pushf
pop
jmp
push
cmp
sub
xchg
pop
fdivp
inc
iret
inc
leave
sbb
imul
shl
aam
cmp
jb
repz
inc
(bad)
adc
arpl
and
push
jb
xchg
sahf
aad
out
repnz
call
mov
sbb
imul
popa
pop
lea
(bad)
push
dec
out
push
ins
call
mov
das
mov
ins
nop
pop
mov
push
aas
jl
test
mov
sbb
inc
mov
stc
fwait
pop
test
leave
inc
push
ror
and
clc
and
pop
jg
mov
push
or
iret
leave
xor
nop
pusha
dec
hlt
inc
popa
jno
dec
arpl
lea
shl
jbe
add
lock
stos
iret
mov
(bad)
xor
popf
repnz
inc
push
or
add
movs
sbb
cmp
jne
xor
push
(bad)
lods
or
push
mov
or
ror
jbe
stc
xor
icebp
test
mov
ret
mov
dec
loope
(bad)
int3
push
outs
test
sbb
jle
sbb
test
or
fadd
out
sub
nop
mov
xor
ja
cmp
xor
dec
pop
stc
call
(bad)
int
mov
sar
(bad)
jecxz
jecxz
enter
lds
xchg
mov
outs
fwait
outs
sar
lahf
je
neg
je
loop
outs
inc
add
xor
xchg
xor
aad
xchg
mov
fwait
or
push
jge
push
pop
xlat
(bad)
lods
bound
fst
(bad)
ficom
test
call
inc
pop
data16
dec
bound
hlt
push
and
das
sub
mov
icebp
out
mov
pop
pop
ins
cmp
lods
sbb
sbb
ret
sbb
inc
aam
cmp
pop
jno
adc
jb
adc
leave
js
sub
sub
jge
loopne
cdq
mov
push
test
xor
cmp
ret
lods
push
sub
jle
pop
xchg
mov
mov
fcomp
and
push
mov
mov
xchg
push
add
mov
je
rol
push
add
add
test
jecxz
arpl
sub
inc
shl
adc
outs
jl
lods
xor
(bad)
mov
push
xchg
out
retf
ins
outs
push
xor
ja
xor
push
das
es
jmp
aad
cs
inc
cmp
adc
dec
bound
pop
xor
and
loope
(bad)
xchg
sar
push
leave
xchg
pop
or
inc
or
cmc
add
sub
mov
cmps
inc
sbb
lahf
mov
enter
mov
sbb
aad
rcr
sub
mov
outs
in
dec
dec
mov
push
jge
pop
xor
or
mov
imul
cmp
mov
movs
cwde
add
mov
loope
or
retf
pop
mov
mov
addr16
or
pusha
sbb
not
jbe
fwait
(bad)
shl
cmps
pusha
sub
fcomp
loope
or
xor
add
adc
jmp
cmp
push
jnp
mov
xor
fild
arpl
mov
inc
lock
call
stos
jns
xor
test
movs
bound
pop
icebp
fist
gs
ret
cvttps2pi
sbb
mov
push
dec
or
cmps
push
jmp
add
shl
(bad)
iret
gs
xor
aaa
loopne
inc
mov
mov
shl
xor
cmp
and
push
cli
ds
fld
pop
inc
cmp
jp
or
stos
enter
push
out
inc
and
sbb
test
sar
retf
or
mov
pop
adc
aam
les
retf
sbb
out
fcomp
sti
sbb
cmp
mov
fsubr
jo
and
mov
sub
in
leave
xor
lahf
sub
cmp
fstp
mov
loopne
or
paddsw
pop
xor
inc
and
cmp
mov
cmps
mov
in
(bad)
stos
mov
xchg
add
popf
repnz
gs
or
push
add
mov
dec
cwde
dec
das
jmp
sbb
sbb
das
cmp
jp
icebp
pop
inc
jne
fiadd
xlat
sub
cmps
pop
je
leave
pop
popf
jl
lock
loop
loopne
test
enter
movs
mov
mov
xchg
sbb
add
sub
push
pop
mov
jbe
cmp
lock
inc
lds
add
inc
icebp
fimul
and
lea
pop
mov
jle
sub
int3
icebp
cmp
rcl
test
sar
call
aas
repnz
ret
in
and
div
pop
dec
push
sub
nop
or
jns
test
sub
scas
pop
push
in
ins
lds
test
xchg
shl
mov
push
(bad)
or
test
out
(bad)
nop
fwait
lods
out
in
lods
cmp
cmp
mov
mov
pop
loop
lahf
ret
imul
in
sub
ret
inc
pop
mov
cmp
xor
outs
das
cwde
mov
sub
(bad)
push
mov
dec
loop
xlat
sbb
cmc
pop
or
sbb
(bad)
mov
in
mov
sbb
dec
jns
repz
pop
aad
lods
dec
sbb
(bad)
mov
lahf
sbb
cdq
cmp
fild
mov
lahf
sbb
cld
call
dec
push
nop
(bad)
fist
pop
repnz
out
bound
xor
xor
or
bound
sti
mov
fadd
sub
out
call
xchg
sbb
push
jbe
dec
shr
shl
js
jle
dec
pop
sti
mov
sbb
lea
cs
mov
mov
fwait
mov
jecxz
ja
xchg
jge
mov
xchg
add
ret
push
jnp
sbb
xor
repz
int
adc
lds
dec
jae
int3
cwde
sub
cmp
xchg
adc
es
fnsave
std
in
adc
les
jbe
clc
les
jg
add
in
fwait
adc
push
bound
leave
jns
sbb
shl
mov
jl
shr
shl
call
xlat
aam
shr
test
xchg
(bad)
scas
push
mov
repz
in
add
jmp
cmp
xchg
fwait
mov
lods
int
lea
dec
ds
shr
add
push
jge
or
mov
push
or
fcom
jge
xor
mov
or
dec
mov
jb
lods
xchg
iret
(bad)
cld
scas
inc
lods
sbb
push
(bad)
pop
fld
in
pop
or
imul
dec
das
mov
sti
push
jge
hlt
jg
out
xchg
and
or
xor
and
add
pop
add
es
mov
mov
dec
xor
and
ret
es
inc
add
mov
mov
xchg
jbe
ror
push
shr
(bad)
stc
ins
pop
mov
ror
bound
and
dec
cmp
inc
sbb
jecxz
sahf
ret
add
or
xor
aas
(bad)
push
inc
stc
add
(bad)
cli
out
repnz
mov
fiadd
mov
or
or
fdivr
stos
(bad)
cwde
aas
imul
mov
nop
(bad)
sub
fiadd
shl
or
addr16
nop
mov
repz
and
xchg
loope
ret
jge
out
and
xchg
dec
push
jge
mov
movs
xlat
ficomp
inc
jo
or
imul
fisub
inc
mov
dec
mov
int3
aas
stc
sbb
sbb
jmp
mov
jmp
jne
ss
jb
inc
xchg
out
dec
cmp
test
cmp
mov
push
inc
movs
out
add
xlat
stc
imul
push
fcmovne
jmp
cmps
inc
jmp
or
(bad)
or
addr16
mov
(bad)
dec
aam
cmps
add
jb
mov
cwde
ja
sbb
outs
xchg
adc
sbb
je
inc
add
sbb
dec
scas
ja
xlat
xor
retf
ins
das
xor
bound
cmp
test
add
inc
pop
fdiv
les
ret
retf
test
rcl
mov
lods
movs
into
inc
std
xchg
repnz
jnp
or
mov
es
xchg
jl
retf
pop
xchg
aaa
and
test
push
test
js
out
pop
stc
mov
and
mov
in
popf
das
sbb
cmps
pusha
jae
call
xchg
cli
sub
inc
cld
xor
or
call
lahf
icebp
cdq
pop
mov
in
std
call
jl
in
mul
ret
push
dec
jnp
in
int3
pop
cmps
int
outs
cmc
jbe
mov
dec
ror
stos
mov
mov
add
xlat
(bad)
lds
popf
mov
mov
mov
mov
pop
xlat
out
fcmovnbe
sbb
sbb
and
mov
sbb
test
imul
fwait
daa
lahf
je
pop
enter
mov
cmp
or
enter
sub
pop
or
loop
or
sub
(bad)
fldenv
(bad)
adc
xchg
mov
in
sub
sti
lods
push
inc
cld
jp
inc
jmp
fsubrp
pop
pop
pop
pushf
xchg
push
adc
jno
in
stc
pop
mov
sbb
push
pusha
(bad)
stc
pop
sbb
shl
jae
sub
repz
fs
in
mov
sti
push
pop
and
neg
je
mov
loope
daa
repz
jo
iret
pop
sub
jp
or
scas
mov
fs
mov
outs
ficomp
fisubr
cwde
or
dec
cmp
dec
test
push
fwait
mov
push
xchg
jbe
sbb
lods
scas
bnd
pop
mov
cwde
stc
xor
xchg
rcl
mov
pushf
mov
das
(bad)
in
push
lods
out
push
adc
ss
out
dec
nop
inc
leave
adc
loopne
jl
push
leave
int
lock
dec
or
lds
add
les
int
iret
push
shl
adc
loopne
gs
and
fs
and
and
outs
mov
xchg
sbb
pop
push
push
mov
cli
adc
inc
stc
add
inc
(bad)
cdq
arpl
pop
jle
push
or
push
mov
push
outs
xchg
push
jp
adc
loopne
mov
push
xchg
pop
(bad)
cmp
(bad)
sahf
ficomp
or
int
(bad)
fsubr
pusha
fs
xor
sbb
into
push
push
adc
enter
adc
daa
or
adc
or
pop
clc
aad
pusha
mov
loop
sbb
and
ret
mov
add
(bad)
out
or
outs
clc
vpaddusb
push
call
lea
adc
and
outs
push
inc
push
adc
push
cmp
addr16
repz
mov
add
dec
fwait
arpl
pop
adc
daa
dec
in
jecxz
je
fnsave
jge
(bad)
in
inc
imul
jne
pushf
xor
(bad)
out
aaa
mov
xor
jns
test
jg
jmp
clc
inc
lods
xor
or
shr
cmp
inc
and
ins
in
aad
and
fs
push
jmp
sub
and
xchg
cmp
fucom
movs
sub
imul
xchg
in
retf
in
mov
enter
cmp
xor
add
push
push
dec
(bad)
jo
div
aaa
dec
mov
scas
xchg
and
push
pop
cmp
test
lock
add
push
stos
mov
dec
xlat
stos
addr16
ret
jbe
shr
mov
dec
cmp
nop
aad
enter
xor
jle
xchg
sbb
call
mov
mov
jo
dec
adc
jns
fcom
jle
mov
ja
pop
or
push
daa
js
std
add
jp
push
inc
into
mov
xor
loopne
pop
icebp
pop
in
ja
fsubr
xchg
ins
mov
xchg
ins
mov
scas
(bad)
cld
repz
outs
in
cmovns
mov
jmp
and
lods
cmp
stos
gs
xor
dec
das
loope
xchg
movs
mov
xchg
(bad)
dec
ins
mov
push
lods
test
add
and
push
(bad)
mov
pop
xchg
mov
cmp
loopne
pop
adc
jmp
xor
in
xor
inc
std
xor
(bad)
test
xor
frstor
test
and
pushf
push
scas
pop
or
mov
sbb
xor
dec
imul
jmp
enter
xchg
xchg
add
or
or
mov
mov
and
fs
rcl
or
(bad)
repz
imul
inc
add
jmp
outs
inc
jmp
adc
mov
pop
push
es
mov
add
cmps
test
mov
test
popa
stc
(bad)
aam
es
and
(bad)
push
mov
dec
inc
dec
add
bound
and
sahf
stos
mov
mov
dec
test
add
loope
push
fld
inc
leave
cwde
movs
out
out
dec
mov
mov
jns
rcr
dec
addr16
adc
ret
xchg
pusha
mov
sub
imul
repnz
sub
retf
(bad)
cld
push
in
adc
cli
cwde
xor
or
sbb
retf
add
pop
xor
repnz
in
pop
jmp
add
cmp
iret
push
je
push
clc
dec
cld
aam
sub
mov
fs
ins
dec
shl
sub
xchg
inc
add
add
adc
imul
jae
sbb
jp
rol
pop
mov
pop
js
jp
pushf
movs
jns
xchg
jbe
out
and
popf
inc
push
fmul
add
fisttp
or
(bad)
jecxz
dec
loop
pushf
in
or
inc
jp
cmp
sahf
jnp
jb
xchg
hlt
xor
cmp
mov
cmps
fwait
xor
retf
sub
rcr
stc
jbe
or
xacquire
pop
push
daa
ds
jle
in
hlt
out
jp
jmp
shr
mov
adc
das
fwait
cmp
cmp
aam
or
cli
cmp
fnsave
dec
pop
jne
clc
xor
dec
aad
pop
mov
fs
pop
sub
ret
jae
loope
xchg
push
sub
mov
fwait
and
fwait
push
push
ins
into
sub
aaa
aam
and
or
and
movd
mov
add
(bad)
dec
push
popf
inc
pop
enter
in
call
sbb
jg
mov
out
add
data16
(bad)
dec
push
push
cwde
mov
xor
adc
outs
jno
ins
or
xchg
fcomp
or
shl
dec
ja
jae
jg
imul
xchg
adc
lods
pop
dec
mov
inc
or
scas
push
sbb
push
dec
mov
pop
dec
in
mov
sbb
(bad)
daa
xchg
cmp
or
inc
popa
mov
repnz
pop
xchg
mov
mov
mov
jo
lahf
call
shl
jb
(bad)
mov
mov
dec
sbb
pop
push
mov
fs
arpl
jle
movs
pop
retf
xchg
rcr
maskmovq
not
repnz
hlt
or
icebp
sub
cmp
mov
imul
scas
mov
push
cdq
sub
xor
xor
cwde
inc
cwde
xchg
jl
cwde
rol
test
sub
or
loop
cmp
test
xor
mov
jg
ficom
jns
cmp
aas
mov
mov
mov
lods
jo
call
cmp
sbb
adc
clc
push
into
mov
mov
mov
cwde
xor
bound
pop
out
outs
sti
lds
in
ret
xchg
iret
(bad)
(bad)
mov
sbb
jecxz
or
std
pop
adc
popf
or
jnp
jecxz
adc
pop
mov
xor
dec
dec
movs
ficomp
and
aaa
adc
mov
adc
lea
ret
pop
mov
jae
fcmovbe
stos
aas
ds
cdq
and
mov
mov
dec
sub
adc
push
mov
adc
inc
out
cmps
rcr
outs
mov
retf
hlt
sub
push
fs
add
xchg
and
push
(bad)
ficom
cs
popf
not
push
push
and
out
xchg
adc
xchg
push
xor
mov
pop
add
xchg
fsub
xchg
lods
aaa
iret
jno
pop
stos
push
mov
mov
inc
vpmacsdql
inc
push
pop
mov
or
mov
lea
sub
add
gs
sbb
mov
inc
mov
pop
in
in
out
pop
out
jmp
loop
outs
cld
leave
popa
xchg
mov
repz
or
adc
sbb
pop
or
retf
jmp
mov
gs
xchg
xor
add
ret
movs
adc
shr
pop
add
jge
pop
jns
fdiv
fabs
push
int3
mov
pop
pop
lahf
cmp
xchg
mov
pop
or
jae
mov
add
cmp
and
cmp
inc
fucomp
jmp
sbb
jae
je
jge
xor
retf
push
xlat
shl
jmp
jnp
fsubr
je
out
ins
cmp
das
xor
fcomp
xchg
test
pop
xor
(bad)
jns
not
gs
xchg
mov
in
xor
sar
call
call
out
push
pop
dec
xor
fwait
pop
jge
inc
cmp
or
mov
shl
lahf
sbb
xlat
jnp
jbe
sub
fwait
push
ret
ret
ror
shl
out
movs
loopne
adc
ja
ret
mov
imul
stos
inc
test
jb
mov
mov
scas
fsubp
sub
fsubp
in
pop
cmp
mov
or
pop
or
dec
mov
sbb
push
(bad)
sub
sub
and
into
(bad)
fcmovb
loope
dec
pop
sbb
jl
ja
jne
aam
dec
xchg
inc
lods
fdivr
xor
push
lock
in
fbld
or
cmps
cld
push
out
pop
out
mov
sub
(bad)
sbb
and
jnp
push
pop
add
stc
shl
cmp
fs
mov
test
leave
int
sbb
sbb
(bad)
jmp
push
mov
xor
clc
cwde
imul
into
adc
aam
push
fs
inc
pop
dec
pop
inc
je
lea
mov
push
sbb
retf
out
push
xlat
lds
sbb
jb
and
aas
pop
jns
mov
fs
imul
mov
retf
pop
cmp
adc
xchg
movs
outs
pop
xchg
pusha
or
cmp
in
adc
js
cmps
sbb
std
and
pop
xchg
sub
pushf
or
add
sub
jns
std
push
mov
jle
fdivr
sbb
clc
pusha
or
lahf
push
aad
loopne
dec
add
imul
mov
cmp
pop
pop
ret
repnz
hlt
mov
mov
dec
cld
or
or
gs
cmp
sbb
sar
cmp
jl
out
pop
and
mov
ror
and
adc
push
cmps
sub
lods
xchg
sub
fisub
lds
xor
add
pop
loope
or
sub
push
push
and
ins
mov
mov
loopne
retf
into
movs
into
add
cmp
mov
lock
leave
fisub
fild
lods
mov
pop
or
ins
ja
std
ins
sub
scas
sbb
jle
test
push
dec
gs
cmp
pushf
ins
lods
mov
mov
int3
xor
jae
ds
sub
push
in
icebp
outs
mov
xor
call
jmp
xor
xchg
rcr
push
ror
mov
cmp
imul
aaa
icebp
popa
mov
mov
out
fadd
inc
stos
fisubr
loop
xor
cmp
(bad)
xchg
(bad)
mov
outs
inc
jle
or
dec
fisub
dec
mov
aam
dec
mov
loope
sahf
sbb
xchg
aas
pop
popf
das
ja
push
stc
sbb
mov
mov
aam
cmp
repz
and
dec
icebp
and
xchg
jo
mov
loopne
and
or
and
jne
mov
jge
push
repnz
sbb
and
shr
cmp
cmp
clc
cmps
neg
std
jno
mov
and
ret
jns
(bad)
inc
repz
ret
sub
sbb
loope
push
mov
daa
(bad)
fpatan
retf
loope
(bad)
aaa
aas
ja
mov
xchg
lahf
in
aam
test
inc
and
jnp
xor
mov
inc
xor
xchg
lahf
or
popa
push
jg
les
cs
mov
xchg
mov
fmul
test
rcl
xor
rol
jns
aaa
push
pop
xor
loopne
dec
mov
pop
movs
lahf
or
inc
pop
aam
inc
mov
sahf
outs
ret
cwde
pmaxub
sbb
xor
movs
xor
xlat
fs
test
mov
aam
add
mov
jnp
shr
retf
push
sbb
je
push
fs
in
icebp
hlt
imul
pop
pusha
sub
xor
push
daa
and
jp
clc
in
sbb
mov
in
push
cmps
xor
jne
fcmovnbe
inc
es
cmp
out
ret
jno
movs
jns
adc
sub
in
lock
ins
xchg
fwait
in
ds
sahf
mov
xchg
xchg
jbe
test
xchg
or
pop
aaa
clc
ret
scas
in
(bad)
pop
adc
jmp
lock
iret
call
jb
sbb
arpl
ror
sar
ror
(bad)
scas
sbb
ret
sub
mov
lds
fs
ds
push
lock
xchg
lods
sub
fwait
xor
ins
call
sub
aaa
std
pop
add
sub
xchg
out
add
test
xchg
sub
jmp
push
sub
stos
sub
dec
les
jmp
pop
jnp
cmp
popa
dec
jno
pushf
xchg
shr
cli
jl
push
or
push
sub
jnp
sbb
adc
shl
ins
dec
hlt
add
adc
jb
push
xor
xor
jmp
mov
mov
fs
mov
lds
in
pusha
shr
mov
lahf
les
stos
mov
popa
lds
push
popa
xchg
arpl
fstp
push
rcl
sub
dec
ins
sub
inc
test
cmps
jle
in
add
or
dec
stos
sub
or
jmp
ins
mov
jmp
fld
les
push
jl
loopne
sbb
sbb
mov
js
rcl
pop
jnp
cmp
fmul
mov
mov
cs
pop
cli
jmp
sbb
int3
ja
fnsave
or
push
adc
cmp
adc
les
movs
xchg
(bad)
(bad)
cwde
push
iret
dec
jge
cmp
enter
ror
push
xchg
add
dec
xchg
ins
(bad)
call
pop
jbe
scas
rol
jecxz
fwait
jecxz
pushf
arpl
xor
stc
pop
cwde
cmps
push
sbb
pop
icebp
jg
imul
xor
xchg
addr16
add
mov
jo
mov
add
retf
movs
icebp
mov
pop
xor
int3
fadd
test
outs
and
xchg
and
xlat
aam
scas
out
jno
lea
xchg
inc
xor
jns
push
jae
xor
mov
loope
and
adc
xor
sbb
test
lock
test
rcr
lock
dec
push
pop
add
pushf
and
jo
push
jno
mov
mov
or
outs
cmc
sbb
ret
cdq
sub
add
shr
lods
cs
adc
std
idiv
je
adc
and
xlat
loope
mov
pop
cdq
push
or
cli
out
mov
inc
imul
std
and
adc
lock
and
fwait
xchg
lods
push
stos
sub
jno
inc
dec
push
add
je
inc
cs
jmp
cmp
pop
cmps
add
sub
fcmovnbe
fisubr
fsub
mov
out
lods
push
mov
repz
popa
jmp
fsubrp
mov
dec
xchg
cld
mov
outs
in
sub
aaa
mov
out
ja
aam
mov
out
sub
lahf
mov
or
mov
sub
repz
int3
in
aam
xor
sub
(bad)
mov
lds
cdq
out
mov
sbb
and
or
pop
es
shr
sbb
adc
(bad)
jge
lea
sub
xchg
call
add
clc
out
sbb
pop
and
int
lea
adc
inc
mov
sub
cmp
inc
or
aam
js
dec
push
test
mov
sub
push
int3
aam
add
mov
repnz
aad
sbb
cmp
push
call
aas
mov
lock
lahf
lea
pop
retf
cmp
std
addr16
xchg
in
leave
fucomip
jns
into
or
ror
xchg
shr
mov
pop
clc
mov
sub
jns
repz
jle
cmp
nop
mov
sub
cwde
je
inc
test
or
xor
or
hlt
rol
js
mov
fcmovnu
or
shl
(bad)
dec
test
ret
pop
xor
ror
jno
loopne
xchg
call
and
mov
and
push
sar
dec
or
and
mov
jns
retf
sbb
pop
test
adc
inc
std
mov
push
stos
xor
das
jp
lock
cmp
enter
sbb
pop
pop
cmp
sbb
push
push
mov
idiv
pop
out
jnp
mov
mov
loope
xchg
sbb
lods
mov
sahf
bound
fnstenv
fiadd
pop
in
pop
jp
test
std
mov
dec
ds
(bad)
sti
or
jp
je
and
ss
call
lahf
lods
mov
jo
cmp
in
faddp
icebp
pop
push
adc
dec
fs
jmp
(bad)
push
ds
in
lods
mov
in
jp
ja
sbb
das
ffreep
jae
adc
mov
and
add
adc
fdivr
push
jno
stos
sub
cmps
int3
fadd
(bad)
xchg
out
xchg
inc
cmp
(bad)
and
dec
or
adc
fimul
movs
mov
add
movs
fcom
fucomip
outs
popf
ret
sub
sub
push
test
xchg
leave
test
(bad)
les
push
jne
arpl
ds
jne
test
mov
or
cmps
cld
adc
nop
push
or
dec
inc
jne
and
add
inc
cmp
xor
retf
jle
adc
push
jnp
call
mov
inc
fnstsw
cmp
hlt
pop
aas
mov
fwait
adc
mov
fisub
push
js
jecxz
push
sahf
jg
mov
pop
(bad)
jae
mov
movs
pop
lahf
xor
loopne
(bad)
pop
xchg
inc
out
test
rep
out
enter
inc
mov
push
fcomp
pop
adc
or
rcl
jmp
ss
sbb
cmp
and
clc
inc
jg
and
add
mov
pop
icebp
rcl
xor
dec
xor
jae
or
aas
xor
arpl
add
clc
movs
out
pop
mov
(bad)
pop
inc
mov
add
cli
sbb
sub
dec
dec
or
rol
push
sbb
nop
jmp
inc
out
mov
jmp
pop
xchg
jb
inc
inc
jns
dec
dec
and
sbb
inc
out
(bad)
mov
lea
cmc
and
xchg
or
cmc
fdivr
pop
cwde
inc
add
push
push
and
jmp
data16
ja
xor
hlt
stc
or
pop
mov
pop
clc
movs
mov
cli
int3
mov
and
pop
xchg
ret
dec
in
fiadd
icebp
ja
test
hlt
sti
repnz
add
xor
sub
jbe
repnz
jnp
xor
es
fisttp
test
adc
sub
pop
inc
sub
jmp
and
adc
add
cmp
mov
vmovups
push
daa
cmp
outs
(bad)
adc
dec
ret
stc
(bad)
repz
dec
sti
in
fwait
shr
push
push
push
push
data16
or
clc
enter
push
xor
jnp
aas
loope
push
mov
lods
cmp
nop
sub
lds
enter
adc
sub
cli
sahf
sub
(bad)
data16
pop
ins
and
test
mov
(bad)
inc
xor
shr
mov
or
imul
(bad)
mov
cmp
movs
ins
push
push
sub
sub
cs
lods
movs
lock
xor
xchg
or
adc
repnz
imul
stc
cs
test
icebp
test
test
jg
(bad)
out
fwait
(bad)
add
mov
movs
sub
push
xchg
fistp
or
adc
or
cmc
fld
adc
jmp
fcmovbe
cli
iret
in
jae
pop
lods
(bad)
sub
mov
adc
xchg
cmp
and
mov
jge
lds
xchg
xor
int3
adc
inc
lea
lahf
bound
aas
sub
xchg
addr16
mov
sub
pop
mov
push
int
imul
js
dec
xor
sub
out
das
mov
mov
mov
fstp
fmul
call
mov
mov
cmp
lahf
push
out
scas
xchg
cli
cs
cdq
outs
std
jb
cmc
pop
or
aad
and
mov
jge
xor
imul
ss
js
and
mov
xchg
sbb
xor
in
dec
and
fs
pop
cmc
push
push
icebp
shl
(bad)
mov
mov
imul
sbb
pop
sbb
mov
mov
scas
(bad)
test
pushf
out
loope
mov
test
pop
(bad)
imul
cmp
mul
jl
scas
imul
pushf
stc
mov
xchg
popf
out
xor
adc
in
loopne
fsubr
je
mov
rcr
enter
and
mov
xchg
fdiv
les
adc
dec
jecxz
stc
cdq
cmp
cli
or
(bad)
inc
repnz
fs
cld
mov
outs
inc
and
cli
sub
xchg
adc
push
inc
cli
push
out
add
cmc
inc
daa
adc
ins
dec
jo
mov
xchg
sar
pop
xchg
(bad)
mov
nop
xor
dec
call
out
mov
push
xor
dec
lahf
jbe
sbb
out
adc
push
xor
and
jmp
push
fwait
xchg
xor
pop
les
sbb
fstp
in
je
jbe
xor
or
cwde
push
imul
add
cmp
(bad)
ins
xchg
inc
xchg
xor
push
call
pop
(bad)
mov
shl
(bad)
std
stos
call
xchg
jo
push
jnp
jns
jle
test
(bad)
and
push
inc
int3
sub
shl
in
call
dec
jae
or
nop
cmp
mov
pushf
enter
shl
int3
ja
ins
jecxz
mov
add
hlt
mov
test
mov
jns
lahf
mov
iret
and
dec
jno
mov
imul
xor
shl
ror
stos
lds
mov
inc
sub
(bad)
jmp
inc
mov
icebp
ins
dec
or
sub
out
(bad)
mov
add
imul
mov
pop
fwait
dec
out
push
dec
mov
scas
arpl
outs
idiv
lock
les
push
or
or
inc
pop
out
dec
mov
xor
data16
dec
aas
dec
adc
not
daa
pop
mov
adc
aad
dec
or
popf
mov
dec
pusha
add
clc
xlat
mov
sbb
push
adc
lods
sbb
xchg
pusha
es
sbb
inc
sbb
out
in
mov
popf
push
(bad)
pop
in
cmps
jns
out
push
xchg
xchg
push
div
xor
xor
ret
leave
xor
push
jg
retf
mov
mov
call
mov
jl
add
and
rcr
sbb
add
xchg
popf
pop
jmp
and
sbb
in
jg
iret
in
loop
and
sub
dec
push
cmps
and
fdivr
ja
out
mov
je
retf
mov
std
sti
or
and
mov
(bad)
or
pmulhuw
add
icebp
movs
cmp
mov
pop
mov
ss
push
sar
ret
push
ja
push
adc
(bad)
rcl
jp
adc
retf
or
ror
add
inc
outs
rol
(bad)
fucomip
jecxz
inc
dec
fild
enter
pop
bsf
leave
jmp
pop
jmp
adc
repnz
jne
inc
test
pop
cmp
lods
inc
mov
js
pusha
les
test
adc
sbb
fild
cwde
lods
(bad)
in
and
pop
xchg
je
jae
in
das
mov
pop
xor
loope
int
dec
sbb
sbb
cwde
ja
test
es
push
jb
out
(bad)
ss
xor
clc
imul
test
push
(bad)
aas
mov
inc
add
or
hlt
shl
xor
inc
sbb
clc
test
sub
jno
mov
or
jp
mov
gs
pop
sbb
pop
call
enter
xchg
jmp
fiadd
repnz
pop
movs
mov
enter
pushf
xchg
pop
jg
sub
test
push
xor
dec
sbb
mov
fbld
jae
jno
bound
adc
pop
dec
mov
mov
inc
out
into
clc
cmp
aad
test
jl
pop
and
inc
inc
ja
aaa
test
(bad)
out
dec
dec
(bad)
mov
jnp
cwde
or
test
je
in
inc
nop
xchg
sbb
call
sub
mov
out
push
sub
push
xor
and
push
pop
mov
push
mov
ja
cmps
nop
xor
test
div
cld
sub
jmp
push
cmp
dec
es
icebp
mov
xlat
adc
mov
lea
sub
aad
and
jmp
in
mov
and
hlt
dec
jae
adc
mov
ffreep
loop
into
in
fimul
mov
pusha
ins
xor
mov
in
inc
scas
div
retf
jmp
jmp
push
lea
scas
mov
push
out
add
stos
push
in
jge
cmp
push
xlat
les
lock
sbb
cli
cmp
mov
jbe
inc
rep
cmp
out
jmp
out
scas
lods
xchg
and
dec
in
adc
cld
rcr
mov
mov
add
das
inc
and
aad
out
cmp
loope
(bad)
pop
jp
mov
les
sbb
retf
imul
jb
enter
and
sbb
dec
push
mov
loopne
lods
xor
in
test
sub
clc
out
mov
and
test
sahf
xor
dec
add
ds
stos
add
scas
aam
cdq
jb
push
cs
in
push
jg
mov
and
imul
ds
sbb
iret
stos
xlat
cmp
pop
mov
in
or
cmp
sbb
fisub
push
cmp
xchg
shr
add
fcomp
pop
pop
outs
xchg
pop
add
or
xchg
mov
inc
scas
xor
mov
out
jg
lock
mov
add
in
xor
ret
in
mov
data16
lahf
pop
bound
je
push
stc
iret
inc
ficomp
neg
sar
mov
and
mov
xor
movs
pusha
rcl
lea
lock
adc
mov
movs
inc
ret
adc
add
(bad)
pop
in
push
jo
retf
push
mov
stos
pop
pop
inc
jae
mov
xlat
cdq
inc
jp
and
push
jo
call
dec
and
loopne
hlt
div
test
pop
sbb
into
lds
sub
push
fisubr
dec
inc
(bad)
jle
mov
into
(bad)
dec
movs
repnz
add
add
or
mov
xchg
cmp
cmp
and
(bad)
in
div
xor
jl
pop
jmp
ss
out
ins
mov
cmp
or
mov
dec
adc
rcl
sbb
add
sbb
lods
mov
ins
mov
cwde
in
inc
jb
in
daa
push
jge
call
jbe
aad
ss
jecxz
imul
out
jmp
fldcw
inc
cs
cmp
movs
or
in
out
jmp
cdq
int
(bad)
enter
adc
add
push
mov
xchg
xor
mov
or
ins
dec
clc
xor
stc
(bad)
mov
sar
mov
cld
cs
retf
jno
mov
mul
movs
sub
cmps
xchg
mov
mov
hlt
inc
fs
loopne
push
mov
aad
dec
leave
js
adc
mov
nop
jl
add
aas
mov
and
inc
arpl
jg
pop
outs
rcl
sbb
lods
pop
je
adc
pop
out
pusha
jne
scas
call
daa
push
cmp
mov
stos
shrd
inc
cmp
in
cmps
add
jne
js
mov
cmp
test
test
daa
movs
pop
in
sbb
jmp
lahf
xchg
push
push
js
sbb
xlat
out
lods
mov
jp
cmp
jns
mov
push
mov
rcl
inc
mov
pop
repz
and
add
push
cmp
sti
and
add
and
and
inc
cmp
rcr
mov
jno
mov
cmc
ret
mov
or
(bad)
movs
shl
cmp
xor
aaa
das
nop
std
arpl
bswap
pop
ja
lahf
imul
out
fld
les
dec
adc
sbb
add
cmps
retf
or
in
inc
inc
sub
imul
dec
pop
pop
push
or
jmp
ja
jno
call
fs
mov
adc
mov
push
dec
movs
rcl
inc
aas
and
dec
push
fild
add
test
jo
cdq
jno
jge
mov
sub
cli
(bad)
xchg
inc
fiadd
das
jb
imul
repnz
cmp
mov
jns
retf
cld
cmps
jmp
push
sub
jge
mov
repz
loop
out
xor
mov
push
xchg
adc
lods
push
push
out
dec
daa
icebp
gs
sbb
xor
ss
lock
(bad)
clc
arpl
addr16
mov
add
xchg
adc
and
in
scas
je
out
mov
mov
sub
aam
fwait
sbb
pop
ret
jge
ror
push
mov
lea
ins
ror
pusha
adc
push
and
sub
or
cmp
sbb
pop
call
das
js
test
stc
movs
cmp
ror
enter
add
imul
repnz
push
int
out
jge
jb
popa
cmp
adc
inc
int
adc
pop
repz
xchg
mov
daa
jo
test
mov
lahf
jne
in
test
(bad)
in
push
retf
cmp
pop
sbb
retf
xchg
loopne
out
dec
imul
les
mov
fdiv
xchg
(bad)
lods
dec
jno
add
add
fwait
lahf
jp
scas
dec
pushf
aaa
mov
repz
lods
nop
adc
lahf
push
add
sbb
aas
mov
fldenv
stc
add
neg
rcl
push
push
mov
lods
or
mov
outs
mov
mov
jmp
mov
inc
imul
test
dec
jno
adc
ins
push
mov
or
aaa
call
xchg
xor
xchg
fwait
test
sub
stc
push
xchg
mov
sub
and
aas
es
mov
xchg
aas
push
int3
pop
inc
movs
jnp
iret
sub
mov
es
inc
jl
into
popa
dec
test
xchg
dec
pop
mov
or
inc
je
popf
movs
dec
test
mov
mov
mov
clc
push
test
sub
jno
push
cmp
dec
mov
test
fiadd
xchg
mov
retf
dec
(bad)
adc
push
imul
jbe
(bad)
xor
push
add
xor
pop
mov
fadd
inc
sub
nop
cld
popf
xor
fidivr
jae
mov
call
mov
ret
xchg
xchg
cwde
jns
repnz
lods
mov
scas
arpl
rcr
push
movs
gs
popa
aas
cmp
out
jns
sbb
xlat
std
out
jl
mul
push
cmp
xor
cmp
sub
pushf
call
out
test
daa
mov
movs
jle
data16
and
mov
mov
and
cmp
jae
pop
jg
in
xchg
push
shl
sub
call
jl
mov
inc
pop
icebp
test
pushf
push
push
out
rcl
stos
dec
jmp
fcomip
loope
loopne
pop
mov
xchg
push
dec
popf
ins
pop
push
mov
dec
cmp
or
out
sbb
addr16
dec
or
cmp
scas
mov
int3
jle
pop
xchg
inc
jns
push
sbb
scas
or
mov
call
pop
push
jl
cmps
jo
mov
push
cdq
adc
mov
pop
push
sbb
(bad)
mov
scas
cmp
pushf
push
adc
inc
mov
jp
cmp
mov
(bad)
push
mul
pop
call
movs
inc
je
gs
mov
sbb
push
mov
fldenv
out
scas
add
jnp
dec
call
movs
ror
xchg
add
jnp
pop
out
inc
sub
pop
ins
dec
xor
movs
sbb
and
cmc
sti
(bad)
jle
addr16
loopne
jp
rcr
pop
cmp
es
ins
movs
ftst
scas
pop
sub
xchg
fdiv
sub
xchg
inc
cmove
jg
mov
fstp
lahf
sub
stc
mov
inc
out
aaa
out
or
adc
(bad)
push
jnp
xlat
loope
push
bound
in
pop
add
xor
in
push
xor
xor
mov
jne
bound
dec
ret
add
add
addr16
enter
and
pop
jmp
jmp
retf
cdq
fsubr
fs
cmp
std
xchg
jl
or
add
sub
push
movs
scas
push
mov
jnp
cmp
(bad)
int
push
stos
sbb
add
fstp
adc
xor
shr
cdq
pop
test
sbb
aam
stos
mov
cmp
fdivrp
in
cmp
xchg
and
jb
iret
imul
sbb
js
pop
xchg
jae
test
fsub
sti
jnp
mov
mov
sub
imul
jns
cmp
ffreep
call
mov
out
push
mov
xor
daa
mov
out
fsub
dec
cwde
sti
sub
jbe
int
xor
aaa
mov
pop
repz
xchg
imul
rcl
(bad)
jns
push
loope
push
ss
(bad)
adc
retf
xor
popa
data16
dec
jns
pcmpeqb
ss
cwde
push
daa
(bad)
outs
mov
ds
pop
dec
sub
inc
push
sbb
dec
inc
frstor
arpl
ss
push
mov
dec
stc
cli
cmp
xor
sbb
push
jbe
xlat
call
xchg
not
xchg
outs
mov
adc
inc
or
inc
leave
xor
cmps
fst
cmp
es
pop
mov
pusha
inc
jno
mov
and
les
loope
push
and
fs
adc
or
mov
outs
mov
mov
push
push
push
or
sahf
pop
add
dec
iret
jg
daa
pop
ficom
sahf
xchg
add
fsubp
and
int3
push
mov
cli
adc
mov
jle
fcom
or
fwait
jp
popf
sbb
ins
pop
das
mov
(bad)
and
outs
sub
dec
inc
and
or
push
sbb
adc
xchg
mov
adc
(bad)
inc
mov
and
addr16
mov
pop
and
add
aaa
cmps
lahf
cwde
in
loope
add
fld
aaa
(bad)
push
mov
nop
outs
push
mov
daa
sub
add
cs
rol
hlt
movs
rol
adc
push
mov
jne
and
cmp
icebp
arpl
enter
or
cmp
movs
scas
mov
jge
xchg
sbb
sbb
push
out
adc
sar
pop
rol
sbb
in
sbb
mov
sbb
loope
ja
dec
lock
xchg
retf
mov
xchg
adc
mov
push
in
push
out
sub
fwait
mov
xchg
inc
xchg
fcom
xchg
sbb
and
mov
movs
addr16
pop
rcl
test
add
nop
cmp
mov
gs
std
or
sub
clc
jnp
loop
mov
shr
or
mov
or
test
inc
cmp
call
cs
add
mov
test
fcom
add
jbe
stos
fadd
(bad)
clc
push
shr
or
xor
push
mov
aam
nop
or
fnstcw
cmp
xchg
push
(bad)
cmp
adc
icebp
out
xor
cwde
mov
mov
in
out
in
mov
mov
adc
push
jbe
and
xor
(bad)
and
fwait
mov
popf
out
dec
pop
jns
int3
push
add
addr16
ins
aaa
fld
sub
sbb
int3
dec
imul
adc
je
fcomip
test
mov
test
gs
jns
retf
imul
push
mov
stc
push
mov
or
xor
setae
aas
mov
xchg
jnp
ds
inc
nop
cmps
retf
shl
arpl
(bad)
cdq
jmp
cld
push
pop
pop
shr
dec
cld
mov
push
push
rol
or
fmul
and
pop
fnstenv
les
clc
es
fs
dec
add
xor
fwait
stos
ret
ret
loopne
or
cmps
jns
(bad)
push
xlat
sbb
es
retf
jg
test
push
jns
sar
pop
mov
test
pusha
pop
mov
pop
xor
jl
mov
inc
xchg
mov
pop
neg
movs
sbb
(bad)
cmp
repnz
jne
in
push
push
mov
(bad)
es
rcr
cld
fsubr
leave
push
inc
xchg
dec
cs
int
test
fsubr
mov
out
lock
pop
dec
jmp
es
fnsave
add
loope
cmp
cmp
arpl
jbe
or
js
call
push
and
push
stc
cmp
(bad)
jecxz
mov
lock
les
inc
mov
mov
pop
ja
and
add
rcr
ds
shl
std
jge
cmp
mov
jp
adc
push
aad
xor
adc
mov
aas
js
xchg
ret
push
stc
movs
mov
cwde
(bad)
mov
(bad)
sahf
icebp
mov
loope
ret
out
out
push
in
adc
in
daa
call
and
mov
stos
into
dec
pop
xchg
int
dec
inc
inc
push
dec
(bad)
cmps
bound
idiv
popa
repnz
data16
das
mov
xchg
pop
xchg
sub
add
lea
lds
cld
fstp
jne
push
mov
(bad)
jo
add
cmps
pop
mov
adc
sub
push
das
jmp
mov
mov
dec
and
icebp
sar
or
jno
loope
adc
and
cmp
xor
push
in
sub
neg
or
daa
push
mov
mov
fidivr
dec
xchg
aam
cmp
cld
adc
dec
or
dec
jle
jnp
xor
cmp
in
or
xor
outs
pusha
or
daa
push
fwait
clc
addr16
jmp
cmp
std
pushf
mov
les
fst
pop
icebp
xor
arpl
mov
inc
pop
sbb
in
pop
lea
ins
(bad)
xchg
cli
fimul
jnp
and
fdivr
jo
gs
and
push
cmp
out
fist
and
enter
push
mov
int3
pop
(bad)
jmp
cmp
mov
outs
test
sub
bound
(bad)
mov
mov
mov
mov
fs
cmps
jg
add
daa
out
push
test
adc
sti
jg
aad
js
loopne
dec
or
popf
outs
cmps
cmps
adc
push
dec
jle
mov
adc
es
dec
lock
and
je
repnz
mov
stos
mov
mov
sbb
xchg
sahf
aad
dec
and
pop
lods
popa
sub
lahf
add
inc
fidiv
cmps
sub
cdq
aad
xlat
mov
inc
sbb
inc
outs
stos
jl
mov
int3
fbld
mov
fwait
outs
retf
int
popf
or
dec
hlt
cmp
aad
sub
adc
jg
int3
(bad)
lods
jo
fsubp
(bad)
mov
push
add
movs
cmps
icebp
data16
lea
cmp
aam
loopne
ins
push
sub
in
and
push
inc
inc
cmp
mov
push
les
or
adc
and
lods
xchg
shl
(bad)
outs
mov
es
movs
lea
adc
or
or
gs
lds
add
and
retf
sub
add
outs
(bad)
cld
pop
sub
ds
add
jle
outs
les
test
fild
inc
aad
test
(bad)
std
mov
push
mov
dec
adc
push
mov
or
dec
cli
add
dec
jo
jl
adc
sub
cmc
mov
aas
mov
daa
cs
and
jns
push
adc
idiv
pushf
push
sub
popf
add
arpl
mov
pop
adc
fs
adc
cmp
cmp
les
push
pop
lods
icebp
fdivrp
test
xor
in
js
push
cld
add
sub
(bad)
aas
mov
xor
pusha
loope
sbb
pop
inc
pop
mov
les
test
retf
fdivr
jmp
scas
enter
aas
jmp
sbb
xchg
add
fidiv
scas
rcr
mov
add
inc
je
dec
mov
(bad)
mov
fdivr
pop
mov
mov
into
pop
pop
xchg
es
sub
xchg
adc
mov
pop
or
repz
je
and
retf
xchg
pop
mov
push
cs
sti
mov
call
jns
push
lods
out
mov
xor
retf
sub
mov
cmp
or
mov
movs
test
test
and
dec
lods
sub
sub
mov
sbb
add
pop
(bad)
xor
shl
sbb
add
cmps
aaa
jo
mov
hlt
fs
xchg
clc
pusha
adc
jmp
std
jo
jecxz
je
mov
sub
sbb
cli
mov
lahf
xor
mov
cli
outs
ins
nop
js
inc
sub
or
jns
cmp
inc
not
mov
push
sbb
pop
bound
call
test
in
scas
aas
test
and
(bad)
sbb
int
retf
and
stos
jno
(bad)
cmp
xchg
cmps
mov
or
push
outs
lahf
cmc
cmp
jns
mov
movs
mov
in
and
jecxz
fistp
jl
ret
int
sbb
mov
or
cmp
sub
rol
sub
fnstcw
(bad)
sahf
icebp
adc
add
dec
xor
xor
out
adc
sub
push
fmul
adc
and
stc
and
icebp
fiadd
cmp
xchg
enter
sub
add
fisttp
fcom
mov
cmp
int3
inc
test
mov
mov
sbb
iret
mov
dec
or
fwait
sbb
push
mov
fadd
(bad)
pextrw
test
mov
sub
xchg
test
mov
stos
cmp
inc
add
sub
sbb
daa
inc
imul
add
xchg
jo
xchg
sahf
cmp
into
mov
(bad)
jno
xor
adc
cmp
pop
or
call
pop
mov
sti
test
add
aad
test
add
les
sar
lahf
pushf
shl
ja
retf
jno
push
mov
dec
add
or
cmp
mov
dec
push
retf
or
ds
in
xchg
shr
mov
leave
cs
call
adc
aaa
ret
popf
scas
mov
popa
mov
mov
test
(bad)
adc
pop
mov
mov
jb
dec
pop
mov
xchg
sahf
ss
pop
mul
push
iret
inc
push
pop
jmp
ss
call
cdq
add
inc
xchg
aas
outs
xor
ret
in
dec
sahf
out
out
inc
adc
jmp
push
jge
rol
dec
xor
pop
jne
adc
xchg
dec
mov
or
dec
das
loopne
test
adc
mov
mov
scas
jp
in
xchg
(bad)
mov
adc
pop
call
ins
ja
cmp
data16
cmc
mov
mov
lods
mov
and
mov
rcr
dec
loop
cmp
retf
(bad)
jmp
push
fld
pop
movs
lea
adc
retf
pop
inc
out
or
adc
push
retf
cs
xor
adc
out
inc
out
add
lods
scas
mov
(bad)
aad
lahf
sti
in
mov
xor
lods
or
js
ja
pop
push
xchg
mov
xchg
cmp
sahf
xor
int
ins
retf
sub
adc
jo
add
xor
push
movs
out
arpl
mov
sub
retf
scas
aas
cmp
sbb
sar
loopne
cmp
fist
add
mov
pop
scas
(bad)
dec
repnz
fmul
jns
xor
not
inc
out
cmp
int3
mov
mov
push
outs
test
test
add
test
fistp
aam
inc
imul
push
(bad)
into
out
js
add
or
mov
mov
xchg
daa
outs
retf
frstor
push
push
mov
and
repnz
dec
lahf
mov
call
cmps
jp
mov
inc
outs
sub
js
out
sbb
fwait
inc
jecxz
xor
push
sub
pop
jmp
loope
pop
sub
pop
adc
cdq
cs
jl
fdiv
mov
scas
and
sub
popf
bound
jo
stos
imul
sbb
ss
sti
adc
lahf
fiadd
cdq
jl
mov
pusha
stc
inc
mov
int3
into
shr
sub
push
add
xchg
add
call
xchg
ja
inc
push
jl
mov
mov
add
fdivr
add
pop
mov
or
dec
lahf
daa
loope
je
ret
int
inc
ficomp
xor
jbe
push
fsubr
in
cmp
ffree
jb
jbe
add
push
xor
and
pop
movs
xchg
sub
push
leave
jae
push
cmps
cwde
pop
iret
or
jle
bound
push
push
repnz
sbb
mov
lahf
fadd
aad
pop
and
lds
aaa
ins
arpl
leave
mov
out
pop
push
int
push
push
pop
shl
enter
mov
stos
mov
pop
jmp
pop
popf
mov
xlat
mov
call
xlat
(bad)
in
psrld
inc
xchg
xchg
jbe
iret
push
inc
mov
pop
jle
xor
mov
in
mov
in
pop
adc
or
mov
lea
adc
or
jb
daa
test
mov
xor
jge
test
xchg
ror
shl
jnp
push
(bad)
mov
out
inc
lods
inc
xor
icebp
rcr
mov
aaa
sub
dec
xor
sub
cmp
leave
outs
sbb
(bad)
repz
mov
js
cmps
mov
sbb
inc
adc
pushf
ret
loop
sqrtps
sbb
lds
(bad)
leave
jns
and
popf
or
comiss
jnp
sahf
shl
xor
xor
cwde
xor
pop
nop
(bad)
pusha
jl
adc
mov
ja
xchg
xor
mov
cs
sbb
cmc
icebp
in
(bad)
popa
rcl
sbb
sbb
mov
lock
test
in
sub
adc
ds
in
push
cmp
mov
rol
push
cdq
jmp
es
out
lahf
addr16
aad
outs
jl
sbb
std
in
imul
adc
inc
jo
std
push
call
jmp
outs
enter
jo
mov
mov
hlt
xor
adc
sub
cmp
sub
sti
dec
jp
sbb
and
push
repnz
out
mov
jbe
ins
mov
lods
dec
stos
jge
mov
or
add
xor
cmps
ins
sbb
in
pop
jecxz
xchg
jl
cmps
mov
ja
rol
mov
int3
lock
mov
inc
xlat
out
loop
repnz
repnz
pop
jb
js
mov
mov
fld
sbb
bound
inc
and
xlat
sbb
jae
mov
enter
sub
push
jnp
mov
jns
push
rcl
inc
inc
adc
cmp
and
repz
sbb
retf
mov
enter
int3
je
xlat
mov
and
jge
inc
cmp
pop
imul
(bad)
sub
shl
loop
fmul
xchg
inc
cmps
add
pop
fidiv
lods
mov
xor
dec
test
adc
stc
cwde
lods
or
xor
sbb
jg
cmp
push
push
xchg
push
aad
stc
xchg
sub
push
add
fbld
cwde
adc
mov
sub
mov
xchg
xchg
inc
jno
out
jns
pop
inc
or
sub
rcl
or
mov
in
sub
push
mov
push
daa
stc
sub
cmp
idiv
rcr
mov
ja
fwait
mov
xchg
or
cmp
retf
adc
dec
aas
test
call
out
aad
in
push
sub
jmp
push
out
cs
sbb
ret
lds
aaa
scas
fisub
xor
pop
xor
mov
jge
dec
dec
xchg
push
in
or
mov
(bad)
lods
sub
cwde
dec
lods
xchg
jmp
cmp
sbb
out
lahf
ffree
ins
call
mov
popf
rol
push
(bad)
fstp
or
hlt
or
mov
or
in
call
or
aaa
cld
xor
push
pop
sub
movs
nop
pop
sahf
das
jb
sub
rol
cmp
or
jmp
inc
fist
arpl
aad
dec
pop
bound
in
cmps
pop
cmps
out
inc
data16
aaa
int
inc
xor
adc
mov
jle
out
(bad)
lds
call
xor
pop
int3
push
cmp
out
mov
rcr
jp
lods
enter
inc
pushf
mov
inc
hlt
cwde
cwde
iret
std
lods
xor
test
inc
(bad)
icebp
test
lahf
mov
cld
adc
into
add
mov
bound
mov
add
pop
lea
jmp
dec
les
push
pop
cmp
test
loopne
leave
lock
or
push
inc
inc
pop
jb
dec
pop
push
jmp
in
push
ret
fsub
pop
push
jg
repnz
xchg
inc
repz
xlat
rcl
ins
add
scas
cli
es
pop
add
clc
and
loopne
enter
lock
xor
fiadd
sar
cmp
ret
call
call
cmc
ret
fnstsw
jne
sbb
outs
(bad)
iret
ins
les
lock
into
(bad)
mov
mov
mov
cmp
or
mov
and
aaa
lahf
mov
(bad)
aaa
or
das
xchg
scas
adc
popa
add
jmp
pop
pop
fcom
mov
clc
xor
push
sti
jmp
push
mov
pop
jp
adc
sbb
data16
lahf
xor
test
in
xchg
fdivr
or
(bad)
sub
int
xchg
sub
xor
or
fcmovbe
pop
mov
mov
jbe
ret
mov
dec
adc
mov
out
or
inc
mov
loope
cmp
push
arpl
dec
sbb
ret
test
es
gs
xor
aad
and
mov
ret
fpatan
xchg
mov
sub
push
mov
cmp
popa
fldenv
mov
mov
lahf
mov
or
cmc
shl
jecxz
(bad)
mov
outs
fwait
or
adc
cmp
push
or
inc
les
adc
sub
dec
jmp
cmc
jl
mov
shl
mov
and
into
sub
cmp
jne
mov
ss
mov
or
push
outs
loope
sbb
retf
int
xor
mov
clc
test
(bad)
add
push
gs
rol
arpl
imul
outs
add
out
inc
in
clc
push
test
pop
cwde
or
and
adc
pop
gs
xor
inc
push
jae
add
sub
jo
pop
pop
add
mov
xor
jle
and
test
ins
cmp
adc
outs
daa
imul
pusha
mov
shl
in
xor
xor
add
adc
es
sub
mov
and
pop
loop
dec
mov
bnd
lock
aas
pop
push
mov
mov
xchg
lods
mov
iret
cmps
dec
add
or
mov
stos
sub
mov
loopne
jg
aas
inc
jmp
or
daa
pop
push
aas
ja
mov
cmps
inc
mov
add
fnstcw
fsubr
dec
xchg
cwde
push
scas
mov
pushf
xchg
shl
inc
(bad)
pop
or
mov
ret
leave
js
rcl
lea
test
mov
std
(bad)
rcl
cmps
sub
mov
pop
add
jle
(bad)
retf
fiadd
fcomip
inc
pop
dec
sbb
mov
cld
into
repnz
(bad)
repz
cmps
mov
das
push
push
repnz
daa
jmp
jae
in
pop
xchg
push
mov
out
xor
addr16
jg
inc
stc
add
aam
std
cld
cmp
mov
or
jno
aaa
add
and
out
test
jecxz
sahf
mov
pop
sub
xlat
icebp
ss
push
iret
lahf
inc
scas
(bad)
shr
add
(bad)
stc
jbe
or
dec
xchg
mov
mov
jp
add
aam
jnp
hlt
(bad)
xor
xchg
dec
mov
les
jmp
aam
lea
cld
gs
jg
int
jmp
xchg
arpl
shl
dec
or
or
pop
add
xor
adc
sti
pop
pop
fisubr
jbe
mov
call
sbb
xor
xor
outs
out
bound
xor
aas
ins
inc
imul
push
mov
fild
mov
xor
xchg
xchg
out
inc
jne
cmp
pushf
dec
(bad)
repnz
pop
sub
dec
xor
sub
daa
in
icebp
adc
lahf
xor
ds
push
jnp
ds
outs
and
retf
loopne
enter
shl
outs
push
clflush
mov
(bad)
scas
cmp
xchg
jge
xor
test
mov
fcomp
or
movs
mov
in
ret
jp
pop
xor
mov
adc
cmc
lock
lds
(bad)
jne
add
retf
dec
imul
pop
out
loope
cmp
popf
jns
repz
in
stc
jnp
and
pop
sub
cdq
mov
mov
mov
leave
dec
cmp
inc
leave
(bad)
scas
sahf
dec
pushf
nop
push
pop
mov
adc
inc
mov
popf
xor
sti
sub
mov
sub
into
rcr
clc
in
mov
addr16
mov
cld
ins
test
repz
and
xchg
popf
dec
adc
inc
dec
ins
or
jno
xor
jecxz
sub
ficom
mov
std
mov
inc
cld
and
xor
xor
pushf
mov
add
fistp
sahf
jge
cmp
xor
(bad)
mov
inc
retf
dec
cmp
or
addr16
ds
fst
lods
outs
pop
repnz
rcl
sbb
mov
adc
xor
sbb
push
aam
mov
enterw
in
push
mov
loop
add
inc
xchg
mov
xlat
int
ins
or
adc
jne
inc
xchg
sbb
mov
pop
mov
mov
dec
and
xchg
repz
hlt
dec
dec
sti
add
xchg
push
enter
push
jmp
pop
mov
fsub
cmp
jp
pop
push
in
cmp
or
or
mov
jle
shr
lea
sbb
out
cmp
jle
or
push
aad
in
inc
pusha
arpl
into
inc
cmp
test
iret
mov
loop
sbb
cmp
(bad)
mov
lahf
mov
cmp
call
mov
push
jl
add
fadd
loopne
jne
popf
ficomp
push
push
sbb
mov
jb
cwde
arpl
sub
adc
add
add
push
loop
xor
add
or
or
inc
bound
mov
or
dec
jnp
movs
lock
scas
mov
mov
test
scas
ret
push
adc
pop
lock
(bad)
sar
mov
sti
nop
push
pop
popf
inc
ficomp
sub
call
cmp
jp
push
dec
lods
xchg
rcl
pop
push
cs
push
mov
fidivr
mov
pop
mov
xchg
cli
mov
mov
stos
xchg
aas
dec
sbb
pop
stc
rcr
ins
lods
addr16
repz
mov
ret
clc
mov
inc
xor
sbb
jb
fdiv
cmp
aad
or
xchg
mov
mov
sub
pop
lahf
jns
jns
ror
xchg
loopne
or
ds
inc
call
add
adc
mov
sub
pop
in
das
cmp
scas
retf
retfw
das
push
fnstenv
in
dec
in
and
arpl
mov
add
je
pushf
dec
out
and
adc
lds
jmp
out
fsubr
out
or
std
fld
das
mov
dec
pop
pop
test
les
push
sysexit
ret
cmp
out
or
div
sub
jp
xor
movs
outs
cmps
sub
jae
clc
leave
mov
cmp
test
adc
cmp
fnstcw
inc
pop
shl
dec
mov
jmp
cmp
mov
cmp
xlat
sti
fs
out
push
dec
(bad)
sbb
lods
xchg
and
mov
ret
fwait
pop
or
xchg
data16
cld
jge
je
rol
cmc
aaa
(bad)
loope
test
inc
push
pushf
jno
nop
push
lahf
les
repnz
dec
sbb
pop
pop
arpl
pusha
iret
pop
mov
mov
xor
stos
int3
loope
adc
aas
(bad)
iret
mov
or
inc
addr16
fidiv
nop
sub
xor
js
test
or
rol
into
repnz
or
fbld
cmp
leave
scas
or
xor
hlt
loope
and
cld
dec
cmp
mov
cli
dec
nop
mov
and
cmp
mov
das
sar
sbb
push
mov
mov
retf
daa
cli
and
iret
dec
stos
test
xor
loope
(bad)
dec
push
inc
sbb
int
out
sti
sbb
adc
jno
aam
inc
mov
dec
sub
jbe
retf
int
dec
popa
and
mov
test
pushf
ins
pop
cli
stos
jno
lahf
ss
fild
or
mov
mov
(bad)
ret
outs
push
out
(bad)
jb
cld
pop
bound
cmp
push
inc
dec
(bad)
xor
mov
fnstsw
adc
mov
into
out
pop
lods
jp
xchg
cmp
sbb
push
test
rcl
pop
lods
mov
add
nop
ror
cmps
xchg
pop
jnp
dec
call
das
xor
xor
push
mov
inc
sbb
rol
cmps
adc
sub
mov
dec
mov
push
push
pop
test
fdivr
push
sahf
xor
(bad)
dec
cmp
sbb
into
xor
xor
int3
sbb
out
cmp
das
mov
xchg
mov
jmp
push
mov
test
(bad)
mov
imul
dec
pop
dec
pop
loope
rcl
fdiv
in
pop
repnz
repz
or
sahf
daa
cmps
dec
or
xor
test
(bad)
xchg
inc
jno
push
out
add
outs
jns
push
xor
push
mov
add
in
pop
pop
dec
dec
pop
and
add
repz
mov
pop
mov
lods
sbb
sti
(bad)
fimul
ret
jno
sub
stc
jnp
or
gs
fs
fsubp
test
movs
mov
xchg
movaps
test
mov
xor
icebp
xor
inc
das
std
mov
aam
je
sub
fcom
mov
mov
push
movs
push
mov
jae
sub
inc
repnz
cld
push
push
cmps
scas
xchg
jp
jno
aas
inc
aam
jno
cmp
pop
sbb
imul
add
stos
cdq
sbb
pop
mov
inc
stos
pop
xchg
mov
cwde
aaa
push
sahf
cmps
or
daa
pop
or
mov
add
fwait
test
and
pop
mov
in
mov
xor
shl
lock
cmp
adc
outs
xchg
and
icebp
std
pop
in
pusha
lds
(bad)
into
mov
push
adc
sub
xchg
rol
jns
add
xchg
cmp
or
and
pop
sub
push
mov
cmps
cmp
jl
inc
std
mov
sub
cmc
dec
fmul
mov
ds
cmp
inc
inc
cld
ja
sub
fistp
lahf
cmc
call
xchg
adc
jo
fistp
hlt
fistp
pop
lods
mov
idiv
xor
cmp
test
xchg
das
iret
push
js
push
xor
into
xchg
add
call
in
rcr
dec
rol
xor
in
inc
jp
call
mov
jl
cmp
popa
push
inc
hlt
jnp
aam
cmps
into
pop
rcr
adc
cdq
test
pusha
push
idiv
aam
mov
inc
dec
sub
cmp
sbb
inc
(bad)
addr16
push
push
out
mov
inc
int3
cmp
jo
(bad)
and
(bad)
pop
pop
shl
rcl
xlat
push
jg
inc
dec
xor
xchg
adc
cmp
and
js
xchg
pop
arpl
and
cmp
popf
out
jae
aad
mov
mov
cmp
sub
xor
mov
mov
pop
push
or
xor
push
push
push
sub
ins
jbe
push
call
add
ffree
out
shl
fcmovu
hlt
imul
push
jno
clc
push
or
add
mov
aaa
in
push
jnp
pop
cmp
xchg
enter
mov
sbb
cld
pop
xor
pop
cmc
xor
out
dec
mov
js
(bad)
adc
and
mov
popa
(bad)
test
and
jecxz
xor
test
ins
fs
lock
fisubr
mov
jae
mov
les
aaa
cmp
xchg
loope
sbb
aas
and
cld
adc
aam
sub
pushf
xlat
mov
xchg
loopne
daa
stos
push
sub
cmps
loop
out
mov
or
jp
push
int3
mov
mov
and
sti
adc
ret
and
sub
jge
sti
xchg
fwait
xor
push
adc
mov
pop
xchg
scas
js
jnp
cmp
mov
mov
sbb
pop
fisttp
out
stos
inc
(bad)
loopne
ins
inc
xchg
or
sbb
cmps
into
mov
jp
loop
push
or
std
clc
mov
mov
aas
ret
mov
ja
pop
mov
repnz
mov
xchg
imul
sbb
mov
add
and
aad
fcomip
in
xchg
sub
sbb
std
jg
scas
cmp
sbb
jle
jl
xchg
ins
mov
cmp
xchg
mov
push
cmps
cdq
xor
push
xor
push
or
pop
cmp
imul
(bad)
pop
push
xchg
cwde
lods
sub
cmp
push
(bad)
adc
sub
mov
aad
outs
retf
mov
and
push
rcr
xchg
cwde
push
mov
mov
icebp
push
repnz
daa
enter
push
mov
push
inc
dec
repnz
mov
daa
call
mov
lock
shr
test
add
dec
push
jg
jmp
call
je
fisubr
dec
loop
les
test
je
pusha
shl
jne
adc
push
daa
das
aam
dec
fistp
or
data16
lahf
xor
mov
retf
jne
lods
test
shld
pop
push
sar
xchg
jmp
xchg
dec
inc
stc
scas
es
pop
retf
jb
add
clc
int3
mov
into
sub
pushf
and
outs
xchg
adc
ins
sub
xor
push
stos
add
cmp
adc
push
ds
outs
mov
pop
sbb
enter
sub
mov
xchg
and
pop
(bad)
xchg
das
gs
(bad)
inc
jg
inc
mov
ror
and
pop
in
pop
cmp
fist
retf
fld
sub
aas
call
ds
sbb
mov
arpl
xor
jae
jecxz
xor
mov
add
test
das
and
mov
rcl
sbb
dec
daa
or
das
fstp
xchg
jge
push
enter
sub
xor
cmp
cwde
mov
and
outs
lods
jne
(bad)
leave
repz
scas
pop
out
movs
addr16
push
mov
lea
xor
test
mov
sub
hlt
not
xchg
(bad)
ins
jge
out
xchg
cli
xlat
mov
jb
add
or
and
lods
inc
sbb
loop
pop
fidiv
xor
xchg
leave
mov
push
hlt
in
je
aad
imul
jmp
sbb
cmps
mov
push
(bad)
dec
mov
mov
push
mov
and
adc
pop
daa
aad
stos
lods
jl
lfs
pop
stc
adc
rcr
stos
xchg
ret
xor
in
mov
mov
rcl
cmc
push
(bad)
dec
jns
jp
loopne
mov
mov
inc
or
sub
retf
fild
out
dec
(bad)
loope
jmp
cs
out
mov
ret
cmp
fimul
movs
ror
inc
int
frstor
les
or
lods
xor
sbb
dec
or
call
out
fdiv
mov
rcl
mov
mov
adc
adc
into
(bad)
jo
mov
xor
add
dec
pushf
sub
jbe
cmp
xor
dec
xchg
xchg
push
pushf
xor
or
movs
popa
xor
xchg
jnp
aad
dec
jne
ret
fistp
xchg
in
(bad)
js
ja
mov
mov
inc
fld
dec
add
fidivr
pop
shl
adc
lods
cmps
pop
or
pop
mov
inc
inc
movs
jp
lds
(bad)
iret
pusha
call
mov
jb
mov
in
inc
hlt
pop
daa
mov
push
into
pusha
ds
ins
inc
xchg
cld
inc
mov
lods
scas
(bad)
in
mov
or
fwait
jl
aaa
xor
dec
push
adc
mov
sbb
enter
js
jle
(bad)
or
lock
sar
jp
repnz
dec
sub
jae
retf
aas
call
push
sub
or
gs
add
mov
repz
inc
movsd
fadd
hlt
inc
mov
call
loopne
ret
push
inc
xchg
dec
adc
test
push
mov
fld
sbb
mov
adc
(bad)
sbb
popf
or
add
jb
pop
jne
mov
add
pushf
jnp
test
xchg
mov
adc
dec
mov
or
ins
xor
lock
int
xor
hlt
jp
push
outs
ror
jbe
mov
(bad)
and
imul
ds
mov
daa
test
sub
and
xchg
bound
in
xchg
call
mov
adc
push
xor
int3
ins
adc
mov
push
(bad)
das
pop
dec
idiv
cdq
pop
in
jb
mov
fcmovbe
mov
cs
adc
outs
adc
test
sahf
add
cmp
mov
sahf
adc
inc
movs
(bad)
jno
js
idiv
sub
pushf
dec
mov
lds
std
outs
inc
mov
sbb
xor
mov
(bad)
xchg
test
cmps
push
cmp
xchg
(bad)
(bad)
pop
or
cdq
es
mov
mov
or
push
push
out
push
adc
inc
mov
imul
test
xchg
shl
dec
cmp
inc
test
mov
sub
adc
mul
not
cdq
jno
test
scas
scas
or
fsubr
mov
cmp
retf
cld
paddsb
sbb
js
xchg
or
jo
pop
dec
jb
call
mov
test
cs
(bad)
(bad)
xchg
out
mov
pop
add
xchg
pop
sbb
dec
push
sar
popf
sub
ins
cli
inc
mov
jp
repz
adc
xchg
xor
mov
adc
and
dec
adc
(bad)
mov
dec
sbb
test
mov
cmp
jb
dec
sub
je
repz
pop
not
push
pop
sar
push
jg
aaa
retf
stos
and
movs
stos
add
cdq
dec
js
gs
dec
push
mov
mov
cmc
push
stos
jne
xor
(bad)
lds
rdmsr
lea
gs
sar
(bad)
mov
jle
push
mov
xor
pop
(bad)
std
retf
unpcklps
mov
pop
xor
repnz
push
mov
sar
jnp
pop
js
(bad)
sub
jne
xchg
adc
jecxz
cwde
dec
jbe
mov
cdq
or
mov
sub
call
push
push
xor
pushf
or
dec
pop
cmp
inc
mov
or
jns
in
xor
cmp
jnp
addr16
push
(bad)
pop
fwait
cmp
adc
jno
hlt
out
push
aaa
daa
hlt
jge
xchg
pop
xor
loopne
cld
cmp
pop
test
push
rcl
les
jnp
xchg
push
xlat
and
ret
cld
sbb
std
sbb
les
jb
fsubr
jae
mov
mov
add
lea
mov
push
cmc
nop
lods
adc
or
ret
inc
sbb
push
ss
mov
push
repnz
add
pop
shl
fiadd
je
mov
fld
test
xchg
dec
pop
jp
inc
lahf
ficomp
xor
daa
jne
cmp
aad
addr16
sbb
jo
inc
sbb
fcmovnb
fst
repnz
dec
cmp
outs
push
adc
xor
ins
or
mov
icebp
jbe
mov
mov
mov
test
jp
mov
lock
mov
addr16
cmp
jnp
scas
jl
pushf
(bad)
cwde
and
mov
cmps
mov
jg
xor
jb
js
push
jp
push
sbb
nop
jge
out
adc
popf
out
cmps
xchg
or
pop
sbb
jg
test
inc
mov
push
dec
jmp
xchg
mov
stc
icebp
dec
popf
jae
test
inc
jae
scas
jmp
aas
sub
pop
jae
xor
bound
gs
(bad)
(bad)
mov
xor
loopne
pop
fidivr
daa
(bad)
cli
cmps
mov
pop
fld
mov
ret
and
ss
lods
mov
call
movs
adc
mov
xor
fcmovbe
ret
and
pop
stc
aas
jae
push
int3
test
inc
xchg
mov
repnz
test
test
adc
or
inc
jp
mov
xchg
dec
xor
add
adc
bound
add
lods
jbe
pop
mov
push
pop
jg
and
mov
pop
ds
xor
(bad)
leave
(bad)
and
xor
jmp
jmp
jb
scas
ds
mov
jmp
jg
sub
and
fsub
stc
lods
sbb
daa
cmp
das
or
jle
mov
push
cmps
add
sbb
rol
adc
ins
jmp
xchg
fsubr
bound
and
mov
repnz
xchg
mov
ficomp
movs
xchg
pop
xor
cmps
mov
jg
sub
ins
dec
dec
outs
or
imul
lock
sbb
popa
test
sbb
and
sub
int
addr16
xchg
and
fcom
cs
dec
mov
jbe
fsub
xor
xlat
ja
dec
int
jne
lahf
fimul
jmp
movs
movs
sahf
cmp
adc
call
rcr
inc
adc
frstor
xchg
cmps
xor
addr16
in
pusha
mov
ret
sbb
scas
int
out
inc
aad
inc
loopne
cmp
inc
or
scas
popf
push
cmps
xor
inc
sub
sub
sbb
daa
cdq
std
push
hlt
retf
fadd
das
xchg
mov
inc
in
jo
inc
das
adc
sbb
push
pop
xor
jecxz
dec
pusha
xor
sub
xchg
xchg
enter
aad
jg
scas
repz
sub
ins
lock
gs
push
jp
jecxz
int3
pusha
inc
ret
cdq
jmp
cmp
mov
or
jmp
pop
xchg
loope
and
cmps
xchg
cmp
dec
jge
xor
jmp
mov
(bad)
cs
scas
in
or
xchg
ins
es
and
aas
xlat
pop
push
loope
or
mov
shl
lea
into
push
inc
sbb
mov
xor
ror
cmps
call
into
mov
lods
daa
or
bound
inc
cs
pop
cmps
push
mov
ds
cmps
dec
nop
outs
das
mov
mov
repz
jo
pop
in
push
(bad)
pop
lea
leave
nop
adc
pop
cmp
retf
imul
loopne
adc
sub
pop
and
aam
push
pop
and
add
mov
das
adc
rol
pop
stos
inc
jl
ffree
jno
or
jae
pop
dec
jbe
sub
sbb
push
sbb
and
dec
(bad)
sub
sbb
cld
retf
and
mov
mov
jns
push
inc
and
sub
adc
jmp
push
or
cmp
mov
lea
xlat
(bad)
jbe
xlat
inc
inc
push
ret
clc
scas
movs
sub
addr16
loopne
fadd
mov
(bad)
mov
jo
push
adc
test
xchg
test
xchg
das
scas
inc
loopne
dec
and
hlt
pop
inc
xor
rol
sahf
push
pusha
idiv
xchg
jae
clc
setb
dec
pop
shl
mov
adc
mov
push
ins
(bad)
into
pop
inc
adc
fbstp
xchg
sahf
push
push
sub
pop
jmp
xor
jne
push
dec
pop
cmp
fisubr
call
ins
mov
retf
das
(bad)
mov
sub
repz
jmp
mov
xor
sbb
cmp
popf
(bad)
cmp
push
pop
adc
aas
mov
mov
adc
add
ins
arpl
or
and
call
icebp
pop
in
sar
push
pop
imul
rcl
inc
mov
inc
loop
mov
dec
call
or
in
bound
mov
xor
es
test
inc
push
aaa
movs
mov
fsubr
sti
mov
mov
inc
ds
mov
dec
inc
adc
jle
adc
aam
aaa
and
rol
imul
xor
pop
cmps
hlt
mov
sbb
ret
retf
out
xchg
mov
mov
mov
nop
push
sub
ds
pop
xchg
pusha
mov
rcr
xlat
ins
or
nop
dec
sbb
nop
inc
ror
in
nop
sub
aaa
inc
(bad)
push
retf
call
cwde
pop
xchg
add
or
ja
dec
and
mov
fsubr
sbb
out
xor
iret
sbb
and
sbb
(bad)
mov
inc
(bad)
xchg
sub
rol
out
cmps
dec
std
xchg
cwde
or
aad
cli
sub
sub
fnstcw
cmps
imul
mov
fistp
inc
push
dec
dec
retf
in
das
fs
pop
mov
imul
sub
out
xor
pop
jp
sahf
cld
cmp
xchg
adc
adc
cld
in
xor
in
mov
int
loopne
pop
stos
aaa
or
jmp
xchg
aaa
shr
aad
addr16
jmp
repnz
cs
lods
xchg
int3
push
fisub
inc
(bad)
mov
cmc
jmp
test
scas
imul
mov
fs
cmps
cwde
mov
cld
cmp
dec
adc
and
add
sbb
(bad)
add
mov
inc
jp
mov
imul
cmps
daa
(bad)
or
call
fimul
test
mov
and
sub
sbb
pop
scas
sub
data16
sub
imul
mov
cmp
push
and
fincstp
test
stos
mov
mov
sub
or
les
inc
mov
sbb
sbb
lods
jns
dec
movs
and
pop
rcl
inc
outs
or
loope
sbb
jae
enter
fs
jecxz
js
mov
cmp
inc
cdq
add
jmp
xchg
cmp
sti
pop
dec
xor
mov
lods
jl
pop
repnz
mov
push
add
push
mov
mov
sbb
test
scas
cli
jae
sbb
inc
cmps
dec
cmp
ret
push
mov
jbe
das
aad
in
pop
xchg
sar
dec
jb
push
cs
(bad)
inc
sbb
stc
and
aas
mov
into
ins
fst
cmp
pop
dec
imul
fild
mov
sub
jp
cmps
in
retf
arpl
adc
inc
fidivr
and
inc
sub
cwde
mov
cmps
adc
out
sub
daa
cmc
dec
aam
enter
ret
mov
ret
push
bnd
jae
inc
or
cmps
pop
cmp
sbb
push
fwait
leave
nop
adc
sub
inc
pop
adc
sar
arpl
push
xor
dec
gs
sub
pusha
mov
and
(bad)
pop
sub
xchg
stc
inc
xor
xor
out
sbb
or
add
in
test
add
ror
pusha
and
push
mov
clc
mov
idiv
push
mov
fcomp
gs
or
cmp
pop
pop
push
xchg
fstp
cmp
sub
int
lds
or
pop
jmp
test
ret
lods
fs
pop
(bad)
ds
ret
jg
out
xchg
(bad)
les
das
xor
cmps
mov
inc
xor
loop
jmp
xor
xor
out
lods
loop
mov
or
jbe
adc
fwait
mov
add
xchg
or
mov
jmp
addr16
mov
push
sub
xchg
add
sbb
jo
add
xor
aaa
fmulp
pop
inc
stos
pop
pop
cmp
(bad)
sbb
adc
xchg
sbb
mov
stc
sub
pop
adc
inc
ror
dec
mov
push
add
xor
jo
in
pop
mov
adc
push
int3
mov
jo
dec
sub
mov
mov
xchg
fsub
adc
jge
lahf
xchg
pop
cmp
in
mov
scas
hlt
sar
xor
ja
scas
cmp
dec
jno
adc
jge
loop
lds
mov
sub
mov
jnp
test
push
sbb
popa
cmc
cld
imul
(bad)
jmp
xchg
sub
dec
shr
(bad)
sub
cmp
js
mov
sbb
es
push
sar
xchg
push
xchg
push
dec
mov
cwde
lahf
pop
jbe
mov
aaa
shl
fidivr
je
into
(bad)
jne
sbb
call
mov
cmp
jne
adc
pop
mov
and
mov
inc
mov
sub
scas
jmp
ja
aam
cli
pop
jl
icebp
mov
jnp
cmp
ds
inc
add
pusha
bound
dec
rcr
xor
in
jecxz
inc
bound
retf
sub
jae
repnz
mov
pusha
pop
fisttp
inc
sar
xor
mov
jp
mov
adc
lods
retf
(bad)
mov
push
fidivr
inc
imul
int
add
call
scas
movs
jp
mov
fs
jp
push
and
jae
inc
xchg
cmp
jmp
jmp
(bad)
cmp
jb
mov
aas
push
mov
dec
test
dec
mov
jmp
(bad)
idiv
jne
ficomp
inc
shr
pop
jp
arpl
das
mov
dec
in
fs
jo
stos
jle
pop
pop
ror
cmp
xlat
jmp
pusha
push
outs
push
mov
mov
sub
xchg
in
or
dec
(bad)
clc
hlt
mov
push
rcr
daa
inc
fisttp
jl
stos
pop
aas
xor
in
pop
mov
jmp
cmp
xchg
outs
sbb
cmc
pop
sbb
test
sub
imul
sbb
cs
ja
inc
dec
jo
fs
sub
sub
inc
pop
cdq
mov
mov
ins
add
iret
xchg
xchg
mov
sar
xor
adc
mov
xchg
sub
lods
inc
sbb
push
(bad)
cmps
jbe
mov
aaa
ss
or
mov
push
stos
inc
push
push
lea
xchg
jns
mov
arpl
xor
ins
and
and
push
mov
adc
movlps
shr
sahf
xlat
dec
cwde
push
mov
cs
cmp
in
pop
xchg
jns
mov
fist
ins
pop
es
sar
mov
pop
int3
loopne
fimul
mov
cmc
xchg
js
(bad)
pop
repnz
movs
cwde
xchg
dec
sub
xor
and
outs
and
add
aas
push
jmp
jnp
fidiv
push
xor
or
mul
xchg
je
jb
in
sub
add
enter
pop
int
lods
adc
mov
jmp
cdq
sub
add
jp
(bad)
ss
mov
pop
pop
push
popa
nop
sub
mov
dec
jb
aad
cwde
xchg
jo
ja
cmp
mov
push
xlat
ret
repnz
xchg
(bad)
sbb
ret
ss
push
jg
test
lahf
cmp
lea
pop
or
or
cmp
add
mov
add
and
pop
push
lahf
hlt
out
pusha
arpl
clc
scas
xor
mov
les
cmp
add
clc
aas
hlt
mov
xor
inc
in
outs
fbstp
pop
mov
cmp
clc
adc
es
sub
pop
dec
xchg
ins
dec
sbb
je
dec
lods
and
iret
aam
(bad)
mov
shl
xor
jbe
aam
mov
addr16
adc
xor
add
pop
je
mov
dec
add
adc
inc
mov
and
out
cmp
or
jnp
adc
ja
unpckhps
fld
sbb
leave
test
(bad)
adc
sbb
fdivr
push
ss
jmp
xlat
jl
aam
add
cmp
adc
ror
scas
push
mov
mov
mov
fld
scas
cmp
mov
pop
nop
std
(bad)
les
add
int
ins
fcmovnu
fs
(bad)
retf
xor
loope
lds
inc
enter
mov
div
or
push
jne
stos
std
mov
or
loop
jl
(bad)
js
push
sub
push
(bad)
and
fbld
rcl
xchg
xchg
mov
mov
mov
fmul
mov
out
mov
sbb
add
and
pop
xor
in
outs
push
push
shl
dec
sub
lahf
jecxz
mov
adc
cmp
push
jae
jmp
in
cmp
push
in
jbe
push
out
jl
jmp
lahf
int3
inc
lods
pop
outs
add
mov
push
mov
xlat
push
out
add
pop
push
inc
add
mov
push
stos
out
jecxz
jne
jmp
or
scas
mov
sbb
jns
lahf
and
inc
or
stos
fidiv
mov
adc
and
in
ret
call
add
mov
jmp
or
mov
dec
push
popa
dec
int3
mov
imul
nop
inc
aaa
xor
ins
mov
sbb
fcmove
jmp
push
push
call
xlat
sahf
out
dec
push
loop
mov
stc
sbb
mov
dec
lds
xchg
stos
sbb
jnp
cdq
call
xchg
xchg
and
and
pop
jae
mov
pop
jnp
xchg
mov
mov
ror
cmp
or
and
icebp
jae
aad
rcr
aad
hlt
adc
mov
dec
scas
fs
ror
mov
fnsave
mov
adc
out
ror
sub
or
into
lods
test
jmp
(bad)
ins
dec
sbb
inc
dec
cdq
sti
cmp
out
ret
jmp
xchg
es
cmps
fsubr
or
stc
jge
cmps
cld
retf
imul
push
xchg
jp
xchg
xchg
mov
pop
loop
inc
mov
mov
xchg
sub
sbb
les
adc
add
sub
fwait
pop
jb
inc
rol
mov
adc
retf
int
fimul
out
iret
iret
pushf
jp
(bad)
call
add
movs
neg
jge
inc
pop
pop
rcr
test
push
inc
inc
mov
mov
xor
stc
cmp
inc
mov
cmc
mov
adc
inc
pop
lock
push
fwait
mov
xchg
mov
stos
retf
xor
stos
mov
inc
and
xchg
mov
imul
movs
int
popa
xlat
ds
iret
jae
or
mov
mov
adc
xor
or
jle
fsub
std
mov
xchg
adc
retf
mov
sbb
mov
cdq
pop
lods
pop
adc
call
mov
cmps
cmc
jl
xchg
pop
cmc
mov
es
bnd
imul
and
dec
shl
jle
jp
(bad)
adc
xlat
dec
das
ins
movs
dec
(bad)
mov
mov
mov
adc
rol
in
mov
lahf
push
cld
dec
cmps
leave
adc
fwait
lods
sbb
out
sbb
jne
inc
jmp
in
(bad)
out
ja
cli
pop
loopne
push
mov
jl
std
inc
jae
sbb
movs
jbe
scas
jns
ins
dec
sub
out
outs
les
sub
in
ins
aam
jecxz
cmp
or
int
call
jle
pop
jg
sbb
push
pop
push
pop
test
out
pop
mov
and
pop
add
movs
cmp
sbb
mov
pop
rol
cs
pop
adc
addr16
call
fs
xor
pop
adc
pop
les
jae
call
mov
inc
ja
mov
mov
inc
add
mov
push
cmp
gs
out
outs
pop
or
or
in
ficomp
lods
add
test
push
imul
fstp
ds
xor
push
inc
in
dec
cmps
and
xchg
and
fldcw
outs
sub
xchg
pushf
pushf
dec
shl
push
pop
xor
fnstenv
ror
mov
mov
ins
pop
sbb
pop
sub
cs
std
pop
push
sub
pop
dec
push
dec
xor
shl
leave
je
and
mov
movs
jp
into
lahf
fistp
xchg
popf
repz
repz
mov
sbb
imul
ret
pop
jmp
outs
mov
dec
mov
and
rcr
jno
jns
push
dec
xchg
js
outs
and
mov
movs
out
sub
test
push
sar
(bad)
jecxz
mov
sub
pop
test
pop
test
test
out
pop
xchg
test
jne
mov
ret
mov
icebp
inc
cmp
jmp
aam
jg
xlat
les
lods
push
push
sub
sbb
push
cdq
cmp
jl
xor
mov
pop
mov
scas
dec
xor
aaa
xchg
jo
das
stc
lods
cmp
iret
cld
lahf
mov
gs
xchg
mov
gs
in
ficomp
mov
push
inc
int3
retf
fldcw
xchg
mov
fs
xor
dec
jmp
movs
push
(bad)
adc
sub
xchg
and
or
dec
and
movs
pop
test
stos
jle
iret
mov
mov
adc
fmul
je
inc
mov
and
xor
pop
jae
clc
out
mov
mov
and
fwait
inc
sbb
push
push
sub
sub
mov
test
les
rol
stos
enter
mov
scas
and
xchg
(bad)
ins
in
and
add
cmps
dec
rcl
aas
adc
fcomp
cli
test
or
jl
push
xor
ss
xor
push
xchg
out
and
adc
fistp
sahf
mov
xchg
js
mov
sub
push
xlat
jbe
retf
retf
addr16
jecxz
adc
jbe
and
inc
sti
pop
into
mov
fst
popf
push
xor
lods
imul
arpl
jmp
sub
or
mov
adc
add
pop
inc
add
es
xor
sbb
mov
mov
hlt
cmps
leave
push
(bad)
xor
call
push
repnz
mov
call
in
fadd
jle
out
sub
scas
fimul
pop
jns
imul
push
sbb
pop
daa
test
xor
hlt
xchg
call
ret
push
ins
in
cmc
popf
in
add
xor
add
sahf
xchg
xor
dec
in
jle
pop
sete
inc
adc
xchg
pop
sub
add
add
out
adc
push
dec
inc
xor
jo
add
mul
mov
fcmovne
es
sbb
mov
lock
add
pop
lods
aaa
cmp
dec
fld
loopne
mov
xor
add
sqrtps
sbb
mov
das
sbb
inc
xor
inc
add
rcr
mov
xchg
and
sbb
mov
ficom
sbb
or
inc
js
dec
cmp
inc
je
inc
pop
popf
aaa
inc
cli
mov
pusha
jmp
inc
movs
mov
callw
aam
sub
sub
sbb
nop
inc
mov
aaa
jmp
jmp
(bad)
sbb
sub
dec
(bad)
cdq
xchg
arpl
adc
pop
sub
cwde
pushf
out
shl
sub
sar
pop
pop
test
xchg
stc
mov
xor
xor
mov
in
loop
sub
in
jp
ins
lea
les
fdiv
in
or
movs
sbb
mov
mov
pop
pop
dec
dec
lahf
cmp
fwait
jle
xchg
loop
dec
and
hlt
or
sbb
push
out
xchg
sub
sub
sub
sub
mov
sub
mov
dec
dec
mov
ret
inc
cmp
xor
sub
mov
or
inc
push
popa
or
les
(bad)
(bad)
mov
xlat
sub
aam
cwde
pop
sbb
mov
ins
xchg
pop
fsubr
out
push
mul
leave
(bad)
sub
outs
adc
leave
xchg
(bad)
test
sbb
inc
daa
lods
sub
cmp
enter
mov
jae
dec
mov
inc
mov
jo
sbb
mov
xchg
call
cmp
pop
mov
and
or
aaa
clc
test
mov
ds
pusha
or
(bad)
shl
sahf
push
pop
cdq
sbb
pop
and
out
dec
jp
ja
add
push
and
into
test
xor
jge
xor
or
fistp
or
mov
sbb
sbb
repnz
(bad)
mov
mov
rcr
cs
fadd
fld
ret
pop
adc
sbb
in
movs
pop
neg
arpl
shl
fisttp
mov
int
aad
jo
ds
aas
jmp
jmp
pushf
mov
rcr
push
mov
inc
inc
scas
add
jg
lods
dec
out
dec
aad
push
inc
mov
jle
ret
mov
push
sub
adc
icebp
xchg
xor
jl
xchg
call
lahf
adc
pushf
ss
or
xchg
in
js
(bad)
dec
and
push
and
int3
outs
psubusw
and
cld
in
mov
or
leave
jb
jno
xor
pop
sub
add
pop
(bad)
sti
jb
mov
and
or
jbe
inc
sub
mov
jnp
push
pop
add
jmp
push
mov
push
cwde
jge
pop
push
mov
xor
adc
outs
arpl
adc
mov
push
test
and
popa
push
pop
add
mov
adc
mov
add
cmp
loop
cwde
fimul
sub
sub
fild
pop
adc
(bad)
lahf
xor
xchg
sub
and
jns
mov
adc
arpl
push
popa
nop
les
ret
push
jle
scas
push
call
push
neg
xor
(bad)
mov
popf
test
adc
adc
lods
into
out
pop
(bad)
adc
lods
pop
sub
data16
in
mov
js
ss
mov
cli
push
cmp
fwait
mov
pushf
add
push
outs
pop
hlt
lea
test
data16
and
xchg
xor
mov
mov
sub
mov
retf
outs
in
mov
lods
mov
jnp
mov
push
sub
cmps
and
loope
dec
enter
xchg
not
stos
into
cld
(bad)
sub
call
loope
fadd
mov
jb
adc
outs
mov
mov
jns
daa
out
pop
sbb
loope
mov
pop
sub
push
jle
nop
inc
repnz
dec
retf
cmp
jp
das
jl
aaa
mov
(bad)
rol
mov
ret
imul
add
fdiv
mov
fs
jmp
mov
test
mov
xchg
ja
dec
mov
mov
in
xchg
fcomp
xor
test
pop
push
jnp
mov
xchg
nop
out
movs
ret
fs
add
mov
enter
xchg
add
fisubr
enter
inc
pop
std
out
aam
call
dec
or
js
out
push
aaa
fcmove
add
sbb
test
dec
scas
xchg
cli
mov
push
es
xlat
int3
mov
mov
jns
pop
(bad)
push
xlat
cmp
jne
cmp
(bad)
and
outs
xchg
mov
lock
pop
lods
out
adc
inc
adc
shl
pop
adc
in
inc
call
pop
or
jg
sahf
xor
jge
js
sub
in
fdivr
stos
out
or
cmc
call
dec
mov
fidiv
out
sub
cs
lahf
push
cwde
jb
sub
jns
addr16
or
inc
xor
xor
jl
(bad)
ja
js
pcmpeqb
mov
push
mov
retf
enter
scas
int3
jg
mov
out
sub
cs
enter
int
add
std
pusha
cmp
cmp
(bad)
sbb
imul
and
nop
bound
dec
jge
xchg
loop
es
scas
sub
mov
in
sub
and
sar
div
ins
out
inc
fcmovb
and
lds
scas
or
cmp
repnz
add
cmp
xchg
cs
mov
cmp
addr16
xchg
int3
loop
sahf
sub
adc
and
call
test
jecxz
aas
xor
pop
mov
test
or
and
cmp
rol
lods
movs
xor
dec
mov
inc
dec
jne
xor
adc
mov
jns
inc
cdq
dec
cld
movs
js
jge
mov
mov
rcr
cmp
je
fucom
dec
(bad)
jge
bound
push
retf
dec
out
sahf
push
sub
and
or
jns
(bad)
sbb
stos
push
rcr
test
stos
lods
es
push
jnp
sbb
add
mov
ins
or
pop
fdiv
and
(bad)
dec
dec
scas
pop
aad
xor
cmp
inc
gs
push
dec
jo
shl
add
push
js
icebp
sbb
mov
mov
adc
xor
sbb
adc
addr16
jne
mov
or
mov
jo
scas
and
pop
pop
call
loopne
call
pop
inc
mov
mov
dec
fmul
or
ss
pop
jp
push
and
loop
ret
pop
add
and
ja
(bad)
lods
out
adc
aaa
outs
jne
cdq
aam
jge
nop
cmp
(bad)
out
lahf
pop
push
les
test
or
or
rcr
inc
fwait
cmp
lahf
fadd
fadd
mov
cld
xchg
int
stos
jl
sbb
hlt
ins
cmovo
sub
push
pop
cli
(bad)
xchg
xor
push
cmps
shl
jl
ja
shl
adc
mov
scas
sub
or
call
mov
stos
xor
jecxz
and
push
repnz
cmp
ins
out
jmp
jae
aas
aaa
sbb
xlat
inc
or
xor
pop
idiv
xchg
fdivr
jne
mov
outs
pop
sub
jp
adc
sub
sbb
mov
and
push
jle
jmp
mov
push
aad
(bad)
outs
mov
cs
cmc
adc
sbb
cmp
jmp
pop
and
ss
adc
sub
mov
and
push
mov
jne
movs
fbld
repz
or
icebp
cmp
pop
cmp
rol
xchg
dec
cmp
repnz
shl
aad
mov
outs
xchg
mov
cdq
or
jmp
cwde
(bad)
xchg
(bad)
out
push
cmc
mov
movs
adc
fisubr
jne
mov
and
jmp
daa
stc
sbb
and
push
cmps
xchg
or
aaa
pop
mov
jne
inc
ret
lea
call
cmc
xchg
f2xm1
mov
les
dec
cmp
lods
inc
rcr
adc
mov
pop
retfw
xchg
and
test
mov
dec
jmp
sbb
aam
(bad)
sahf
test
mov
push
mov
dec
shl
in
pop
js
in
test
rol
pop
imul
aas
and
inc
push
and
(bad)
push
or
outs
lds
lea
movs
popf
test
and
scas
jge
dec
rcl
pop
sbb
mov
pcmpeqb
adc
adc
push
xchg
jle
fbstp
push
rcl
add
xlat
shl
mov
sahf
and
into
mov
add
cmp
fmul
and
ss
mov
or
cmps
cmp
retf
ficom
cmp
mov
stos
sbb
fistp
jmp
jmp
push
je
and
cld
daa
mov
cwde
outs
jno
xchg
dec
xchg
clc
stc
mov
sbb
enter
jns
popa
or
in
cmp
cmp
jo
fwait
cmp
pusha
cdq
in
retf
ret
imul
cmp
cld
mov
or
jbe
int
pop
cld
mov
add
inc
call
jo
ret
(bad)
data16
mov
sub
dec
xor
add
fbld
mov
xchg
push
ss
mov
push
loop
retf
inc
out
cmp
mov
loop
or
ret
xor
imul
pop
sub
xchg
jecxz
push
clc
daa
cs
xchg
adc
jno
pop
jno
pop
jmpw
push
jg
adc
(bad)
mov
cli
(bad)
(bad)
and
xor
and
jle
rcl
sub
add
fdiv
cmp
and
je
push
fist
dec
push
cli
and
in
sar
mov
pop
lods
test
inc
fldcw
sub
rcr
jl
jo
cld
push
jns
pop
push
test
aad
mov
jb
cmp
xor
mov
inc
pop
loope
cmp
popa
out
and
out
pop
pop
xchg
pushf
mov
jle
fiadd
outs
xlat
inc
or
push
inc
dec
xchg
pop
subps
sub
dec
vmwrite
mov
mov
add
popa
ins
push
cmp
fcomip
push
icebp
jns
mov
mov
aad
sbb
mov
mov
xchg
fimul
outs
add
stc
adc
push
add
ins
sbb
rcl
mov
lods
mov
or
cmp
mov
push
mov
mov
adc
pop
ins
imul
pusha
rol
xor
scas
cmp
nop
sub
scas
inc
pop
pop
std
nop
int
sbb
jmp
push
scas
xchg
iret
sub
cdq
sbb
sbb
std
jle
sub
inc
mov
mov
jge
hlt
movs
or
cmp
sbb
dec
loope
call
dec
mov
dec
out
xchg
pusha
sar
das
mov
cmps
fidiv
mov
add
or
xor
mov
scas
not
(bad)
fnsave
xlat
jmp
xchg
sub
mov
loope
mov
add
cmps
cmp
jg
sub
adc
test
dec
retf
sbb
xor
inc
push
bound
jg
outs
push
fisttp
mov
xchg
push
mov
jl
icebp
out
cwde
sbb
shr
lds
xor
sahf
push
add
shr
int
lods
and
and
aas
cmp
fsubr
out
jb
push
cmps
push
pusha
add
stos
lods
popf
cmp
sbb
ins
mov
jge
cld
lahf
and
mov
adc
inc
ror
dec
leave
fs
push
out
dec
cmc
xor
xchg
inc
add
mov
gs
jno
call
(bad)
call
add
outs
jno
push
jns
(bad)
sub
adc
shl
loopne
mov
daa
lods
push
movs
ss
in
shl
ss
int3
pop
mov
sti
in
lods
sub
je
pop
sub
mov
inc
mov
nop
loop
(bad)
bound
and
aaa
js
gs
push
mov
push
inc
and
je
xchg
jle
imul
jbe
jne
sub
mov
loope
fdivr
mov
jmp
cmps
test
mov
aad
push
mov
push
je
and
stos
fcmovne
les
lea
sbb
ficom
cmp
pop
out
shr
pushf
into
sbb
xchg
mov
cmps
push
mov
rcl
imul
jecxz
sbb
ja
xchg
(bad)
out
jnp
mov
test
ins
out
stos
pusha
outs
jnp
int
xchg
xchg
mov
and
and
or
(bad)
mov
sbb
xor
add
and
mov
std
inc
push
fcomi
outs
ins
push
adc
in
mov
inc
fs
xor
pop
out
xchg
scas
push
mov
ins
iret
lahf
imul
cmc
sbb
inc
xchg
outs
xchg
push
cmp
nop
in
inc
mov
mov
inc
jae
int3
dec
pop
repz
adc
clc
inc
call
repnz
mov
pop
sti
dec
ud0
mov
jmp
ds
add
cmp
push
push
mov
shl
xchg
add
add
lahf
pop
inc
pop
cmp
cli
or
out
out
push
fld
inc
inc
sti
jb
pop
jnp
retf
(bad)
lock
dec
mov
mov
jns
hlt
movs
xchg
dec
popw
sbb
hlt
call
mov
stc
test
movs
sub
jecxz
fiadd
xor
jno
dec
ja
cld
cmp
mov
shl
inc
xor
sub
popf
add
enter
bound
out
(bad)
repz
jecxz
(bad)
dec
push
or
push
xor
xor
cmps
enter
imul
pop
int
out
add
pop
push
std
sbb
js
jo
sub
scas
mov
mov
pandn
mov
xor
mov
push
jge
addr16
gs
push
pop
mov
imul
push
test
arpl
pop
sbb
sbb
ds
add
in
jae
ja
stos
retf
pop
mov
inc
sbb
in
(bad)
loopne
xlat
in
and
data16
std
cmc
pop
sbb
iret
sar
stc
add
cmp
imul
loop
cmp
fwait
xchg
test
cmp
add
fs
nop
mov
fnsave
popf
xor
sbb
das
frstor
sar
fdiv
and
jae
push
gs
push
sub
icebp
inc
dec
(bad)
call
popf
pop
jne
loopne
movs
js
test
and
dec
or
push
test
call
(bad)
ins
daa
aas
stos
into
bound
sqrtps
mov
fistp
xor
in
sahf
into
push
gs
fs
cdq
pshufw
out
jae
and
lock
jno
fs
cmp
jnp
pop
jbe
xchg
(bad)
cmps
icebp
dec
test
mov
(bad)
(bad)
jae
mov
test
push
xchg
sub
inc
inc
je
sbb
mov
bound
outs
or
adc
xchg
out
ins
push
mov
mov
loope
mov
sub
lods
stos
ja
push
(bad)
sub
cmp
iret
add
idiv
add
enter
fs
jecxz
xor
jns
in
fst
and
pusha
jg
jbe
add
fsub
pop
fidivr
sahf
test
ds
fucom
jp
into
std
test
jbe
ror
mov
or
jl
xchg
addr16
add
xchg
add
dec
(bad)
or
daa
push
adc
mov
sahf
xchg
push
mov
add
xor
jg
mov
data16
rcl
push
mov
cdq
test
test
popa
mov
ficom
pusha
pop
xchg
pusha
inc
jmp
and
fldcw
add
(bad)
in
popa
call
loopne
ror
mov
or
iret
sbb
in
and
jns
or
test
shl
sti
out
stos
inc
pop
mov
xor
sbb
add
rcl
enter
enter
dec
addr16
jne
dec
int3
mov
adc
cld
mov
xchg
les
jmp
jp
cmp
les
jmp
mov
pop
xor
aas
dec
pop
sub
fs
ins
lods
cwde
mov
xchg
sbb
mov
rcr
daa
cmp
add
jg
in
pop
stos
int3
call
and
inc
push
sbb
std
push
inc
adc
shl
adc
imul
jno
mov
lea
ret
inc
movs
clc
rcl
adc
adc
test
cmp
lods
arpl
and
test
or
fwait
pcmpgtd
push
sub
jae
cs
cmp
push
cld
jnp
push
ds
sbb
push
mov
mov
xor
repz
repnz
icebp
xor
imul
lea
mov
inc
mov
mov
pop
sbb
and
mov
mov
cwde
add
and
out
sbb
cmc
stc
xchg
jbe
xor
xor
cdq
int3
out
lahf
xor
jnp
jne
or
int3
movs
int3
xlat
mov
(bad)
loope
stos
mov
idiv
jge
sub
mov
and
pop
in
popa
sti
mov
lahf
push
sub
loope
push
je
cwde
adc
mov
xchg
pop
cwde
sbb
cmp
mov
jno
test
adc
xchg
xchg
repnz
popf
or
mov
hlt
push
push
cs
fld
or
lds
sub
inc
xchg
push
pop
ret
clc
mov
jbe
mov
xchg
mov
xchg
dec
jb
aas
movs
adc
repz
pop
xor
jle
cwde
shl
push
fwait
ja
mov
int
jge
lods
jg
add
(bad)
mov
xchg
call
retf
mov
lods
xor
mov
fst
stos
inc
dec
test
les
push
data16
loope
repz
lock
push
jle
in
stos
jo
mov
pop
scas
dec
push
bswap
add
mov
pop
xchg
xchg
xor
out
dec
in
cmp
cmp
mov
mov
aaa
mov
imul
jmp
ins
lea
lods
sbb
adc
movs
mov
mov
add
(bad)
hlt
inc
or
or
adc
ins
sub
pop
dec
mov
daa
jns
jne
loop
std
inc
lds
popa
mov
xchg
int
jge
mov
jmp
cmps
aam
les
or
in
xor
ss
push
jl
and
popa
cdq
into
fldenv
or
cmps
ds
sbb
not
jg
out
rcr
mov
jmp
jo
cdq
imul
mov
jge
add
fwait
movs
jmp
mov
dec
sbb
retf
sub
into
mov
pop
xor
dec
mov
push
lahf
dec
jecxz
mov
aas
rol
cmovg
rcl
push
lock
jl
inc
rol
imul
sbb
sar
rcl
fdiv
xor
shl
mov
and
cmp
stos
adc
das
daa
test
mov
mov
(bad)
scas
in
add
fild
ffreep
mov
aam
movs
pop
(bad)
jb
mov
push
jmp
mov
xchg
sar
jp
xchg
in
jns
cdq
push
cbw
ins
pop
push
int
xor
imul
dec
out
fild
pop
xchg
mov
cmps
mov
js
jp
adc
push
xchg
sbb
(bad)
jmp
sar
loopne
or
(bad)
les
(bad)
xchg
stos
sbb
(bad)
push
or
out
pop
test
mov
xchg
fwait
jmp
add
xchg
pop
nop
jb
add
je
or
retf
iret
fwait
stc
ret
ins
lock
and
cmps
adc
or
retf
lahf
into
sbb
dec
rcr
ss
imul
fisttp
push
jmp
pusha
shl
in
mov
sbb
xchg
adc
mov
dec
outs
sbb
inc
rcr
adc
inc
push
push
xchg
mov
je
in
pop
sbb
ss
or
popa
and
and
out
jge
repnz
xor
test
retf
mov
arpl
xchg
push
mov
dec
jg
(bad)
jp
in
mov
push
sbb
sub
mov
inc
outs
xor
dec
js
inc
das
mov
mov
int
loop
add
cmps
out
pop
add
push
ja
shl
lahf
fwait
sahf
(bad)
mov
sub
mov
xor
cmp
dec
je
fwait
sbb
scas
sbb
pop
sbb
mov
cld
inc
xchg
iret
push
imul
enter
adc
loope
int
outs
fstp
jg
xchg
lods
aam
imul
(bad)
xor
jecxz
cli
push
and
(bad)
dec
fcmovnbe
sub
pop
cmp
xor
cmc
xchg
out
push
sti
popa
inc
mov
test
push
push
dec
dec
hlt
imul
lock
nop
pop
rcr
jmp
pop
sbb
and
(bad)
pop
sub
xor
inc
and
imul
(bad)
aad
or
mov
xor
bound
hlt
int
pop
sbb
pop
sub
push
xchg
sbb
lods
mov
je
cmp
push
sahf
xor
outs
call
pop
enter
xor
es
js
daa
ret
mov
(bad)
lods
mov
jge
repnz
mov
scas
movs
pop
fst
xor
inc
(bad)
mov
mov
mov
xchg
outs
inc
jo
test
stc
movs
and
sbb
loopne
xor
jg
shl
cmp
pop
iret
jns
xchg
pop
les
xor
je
jmp
inc
fiadd
pop
ror
loop
mov
mov
dec
fild
inc
(bad)
aaa
nop
out
dec
loop
add
sbb
sti
and
loop
xchg
int
scas
or
sub
adc
mov
rol
jl
ficomp
(bad)
cs
cmp
(bad)
cmps
sbb
jge
sbb
sahf
shl
mov
jp
pop
icebp
xchg
retf
adc
dec
push
imul
push
mov
inc
xor
and
pop
movs
or
mov
push
jle
sar
adc
int3
js
test
xchg
sub
popf
mov
pusha
mov
sub
fs
adc
fild
into
repz
mov
test
push
sahf
imul
xchg
and
fcmovne
sub
jge
mov
jo
mov
dec
shr
ss
mov
adc
sub
in
sar
popa
lock
lods
mul
fcmovnb
stos
push
jns
sub
sahf
sbb
aad
mov
and
xchg
call
or
xchg
test
xor
mov
jmp
xchg
sti
jo
mov
ja
jbe
jmp
arpl
pop
jb
jne
fst
jl
ret
repnz
arpl
push
inc
out
cmc
xor
xor
and
nop
std
cmps
adc
in
adc
cmp
mov
or
mov
mov
pop
mov
ss
test
push
das
pop
out
stos
retf
repnz
dec
mov
pop
add
shr
rol
jmp
add
xchg
(bad)
dec
xor
(bad)
shr
ret
in
loope
cmps
iret
sbb
mov
sub
inc
mov
mov
(bad)
in
adc
inc
out
ret
cmp
imul
hlt
loop
hlt
xor
out
arpl
lds
fadd
adc
out
popa
sub
adc
inc
sti
dec
fcom
nop
xor
inc
out
into
jno
cmps
scas
xor
jae
jno
enter
jp
xchg
xlat
call
fdivr
out
add
ins
gs
sahf
mul
jmp
or
clc
es
fwait
add
int
stos
or
ja
or
(bad)
aad
mov
iret
inc
(bad)
mov
sbb
dec
dec
loope
faddp
adc
cmc
dec
mov
add
mov
fdivr
inc
inc
add
out
or
in
sub
addr16
lds
lea
xchg
(bad)
arpl
pop
push
pop
cmp
or
sub
xchg
add
popf
mov
jb
cmc
not
jo
sub
and
mov
mov
aad
mov
mov
sub
mov
push
xchg
clc
fldcw
pop
ja
mov
cdq
jne
cs
push
dec
inc
adc
mov
fisttp
xchg
xchg
inc
ret
scas
mov
fcom
jp
fcmovu
fstp
(bad)
lds
inc
push
fbld
cmc
pop
xchg
into
push
cmps
sbb
jecxz
sti
es
int
mov
cmps
mov
xchg
(bad)
adc
psllq
mov
sub
loope
aaa
sbb
daa
jbe
inc
imul
pushf
sbb
cmps
call
repnz
mov
adc
lods
cmp
in
lods
scas
adc
pop
and
ret
jbe
push
xor
mov
pop
add
jle
jp
(bad)
loope
jbe
jmp
add
add
push
inc
inc
sub
sub
push
xor
pushf
fnstcw
imul
sub
out
pop
sub
dec
sar
adc
mov
(bad)
cmps
shl
mov
or
xchg
mov
imul
loope
mov
call
cmp
lock
push
call
push
pop
add
sub
int
call
shl
fwait
xchg
pop
adc
xchg
jno
(bad)
mov
inc
mov
jecxz
ror
movs
(bad)
jae
sahf
cmp
inc
inc
dec
dec
cmps
popa
jg
jae
pusha
xor
push
aad
push
mov
(bad)
cld
push
outs
mov
or
push
sahf
push
cmp
xor
call
and
cmc
les
cvtps2pi
jne
pop
xor
leave
leave
sar
mov
scas
mov
je
and
lock
addr16
scas
outs
jnp
add
bound
repz
sbb
xchg
les
xchg
xor
cld
lods
dec
dec
sbb
adc
sub
push
dec
mov
dec
dec
fst
dec
and
inc
loopne
adc
sub
fbld
jecxz
cs
xchg
or
jae
iret
sbb
data16
add
stos
and
dec
test
xchg
xchg
dec
icebp
popf
lods
mov
ret
dec
xor
call
mov
jnp
div
scas
je
sti
mov
out
mov
stos
sahf
mov
push
data16
xchg
dec
xchg
data16
jmp
fsubr
loop
xchg
add
arpl
jp
sahf
bound
fidiv
sti
loop
mov
dec
push
ds
out
dec
mov
add
dec
pop
mov
xor
loopne
imul
ret
or
popa
test
js
pop
ds
(bad)
inc
or
or
inc
jg
dec
std
mov
mov
lods
xchg
push
mov
sub
xchg
push
inc
xchg
jge
and
sti
dec
jno
test
adc
xor
push
aas
(bad)
pop
rcr
jl
fbstp
push
adc
jl
and
mov
mov
pop
pop
mov
jo
int
jb
cmp
inc
push
sbb
mov
mov
in
jne
inc
cmp
aad
in
in
jb
ss
dec
in
sahf
xlat
bound
xchg
stos
in
jp
fsubr
in
or
ret
push
aad
jmp
xor
in
test
dec
call
ins
mov
ss
inc
pop
aas
hlt
push
jne
data16
pop
add
cmp
hlt
cmp
mov
arpl
jns
pop
fst
mov
les
ror
mov
not
push
jg
and
cli
push
inc
mov
xor
dec
cs
inc
in
call
mov
les
mov
xor
xchg
int
inc
mov
sub
icebp
add
pop
ror
in
sbb
pop
mov
mov
data16
and
(bad)
rcr
cwde
mov
jmp
jecxz
sub
cmp
adc
adc
(bad)
mov
fsub
in
(bad)
aam
iret
les
push
loopne
and
outs
mov
mov
loope
scas
mov
iret
jo
xchg
in
lods
cmps
fsub
inc
pushf
cmp
in
pop
jge
mul
stos
int3
fimul
jmp
push
(bad)
jg
fcmovu
adc
ficom
cwde
mov
lock
fwait
push
or
pop
popf
or
jne
repnz
movs
push
lock
jno
push
out
sub
repz
in
dec
bound
retf
mov
out
push
jmp
sbb
daa
or
stos
xchg
cmc
in
pop
fdiv
leave
dec
retf
iret
mov
imul
lahf
xchg
div
inc
dec
adc
push
xchg
and
shl
ins
daa
dec
pop
sub
mov
xchg
mov
xchg
jl
gs
dec
jle
push
(bad)
imul
cmps
cmp
dec
jns
mov
xchg
adc
and
cs
(bad)
sbb
inc
lods
in
adc
xchg
sbb
jns
push
test
or
arpl
sbb
jmp
jo
jle
push
dec
sar
mov
imul
mov
pop
cmc
pushf
paddw
mov
fs
sahf
sub
lods
mov
sub
mov
movs
rcr
enter
sbb
stc
and
xchg
cmp
jbe
jle
call
imul
fdivr
mov
movs
mov
aas
and
jl
push
mov
mov
dec
mov
stc
sbb
ins
inc
fisubr
push
mov
das
cmp
dec
sbb
outs
adc
jb
out
aas
out
sbb
sti
xchg
xchg
ja
aaa
pusha
cli
aaa
or
mov
loope
ins
dec
sahf
cmp
jbe
jg
frstor
pushf
sub
jg
mov
push
pusha
data16
and
pop
(bad)
fs
xor
push
add
retf
out
or
xchg
mov
out
out
mov
popf
mov
inc
sbb
pop
out
push
jno
cmc
rcr
sub
movs
aam
sub
push
aas
mov
push
push
test
ss
cmp
dec
pop
jne
mov
mov
cdq
fwait
add
sbb
dec
stos
test
imul
call
jmp
call
(bad)
stc
and
loope
and
scas
movs
pop
outs
push
popa
adc
and
mov
cli
mov
sar
std
mov
cwde
hlt
mov
xchg
gs
inc
ret
pop
dec
and
movs
mov
jl
xchg
test
jmp
ds
xchg
xor
icebp
ficom
jge
mov
movs
mov
push
push
addr16
add
daa
pop
dec
int3
sub
shr
outs
sti
idiv
aad
outs
mov
pop
mov
mov
dec
lds
dec
add
rcr
mov
add
cmp
jge
add
jne
aad
out
out
dec
fimul
push
pop
inc
jle
mov
retf
dec
dec
fstp
or
out
dec
inc
popa
sub
jl
retf
(bad)
jbe
into
cmp
fstp
cmps
imul
ret
dec
mov
adc
pusha
pushf
cmp
outs
ficomp
xchg
in
loope
jno
call
scas
or
xchg
into
jge
mov
push
mov
mov
fwait
mov
stc
xchg
and
fimul
mov
push
mov
xor
imul
out
dec
xchg
shr
test
call
je
mov
fcom
xor
jmp
mov
in
clc
xor
sbb
jno
sahf
mov
sub
xor
fsubr
and
mov
xor
enter
sbb
stos
dec
adc
outs
xchg
inc
push
cmps
inc
sti
push
stc
cmp
jle
in
adc
mov
sub
mov
out
sbb
xor
dec
dec
sub
mov
idiv
div
or
cmp
in
mov
lahf
cmp
clc
push
repnz
adc
pop
fistp
mov
(bad)
sbb
inc
add
out
adc
cmps
xor
(bad)
addr16
jecxz
inc
push
inc
mov
cmps
fprem1
shl
sub
xchg
push
sbb
retf
mov
aaa
ret
pop
cmps
daa
mov
aas
mov
mov
dec
pop
popf
cmp
loope
push
mov
leave
ss
sbb
jno
dec
jecxz
or
lods
sahf
fidivr
push
push
sahf
sbb
fs
xchg
hlt
loopne
sbb
out
mov
(bad)
(bad)
into
dec
adc
mov
cmp
dec
scas
outs
pop
out
mov
(bad)
sbb
mov
out
xchg
nop
mov
sbb
jecxz
sub
push
xor
(bad)
sbb
das
xor
fwait
movs
jge
sub
jns
xlat
ficom
fdivrp
das
xchg
addr16
jmp
add
sub
sbb
enter
push
std
sbb
xchg
add
rcl
jge
mov
std
xchg
adc
adc
jp
cmps
inc
shl
adc
lods
retf
call
push
cli
rep
xor
fwait
ret
cli
iret
sar
stos
sub
xchg
out
loopne
test
push
push
pop
cmps
sbb
into
cli
cli
call
ins
add
mov
out
push
aad
icebp
lahf
xchg
ror
ret
and
imul
inc
mov
not
jns
loope
cmp
sub
mov
or
sahf
or
sti
jnp
test
(bad)
inc
out
test
and
jl
imul
mov
scas
test
mov
inc
jae
cmp
xor
stos
inc
xchg
push
mov
push
ja
clc
outs
stos
sub
in
jno
push
inc
inc
xchg
enter
(bad)
aad
scas
mov
mov
jne
cmp
fidivr
lea
sbb
inc
lods
jbe
(bad)
push
adc
mov
push
pop
sbb
fxch
icebp
xchg
sub
mov
or
hlt
mov
mov
repz
aad
imul
fstp
dec
movs
jne
mov
fwait
and
push
push
xchg
pop
outs
mov
jne
add
or
pop
lahf
xchg
out
sti
sub
dec
dec
lods
pop
pop
adc
add
adc
xchg
and
fsub
xlat
push
repnz
js
stos
test
sbb
cmp
hlt
dec
fnstcw
jl
sub
cld
sbb
or
pop
add
pop
cmp
fld
adc
movs
sbb
ds
mov
adc
lahf
(bad)
pop
fcos
aad
nop
pop
pop
outs
add
clc
imul
xlat
and
inc
out
add
(bad)
in
cmp
dec
cmps
jno
and
push
pop
push
push
jle
stos
jle
sbb
push
xchg
(bad)
sti
into
loope
retf
jmp
fcmove
and
fwait
add
cmp
out
stos
inc
jg
(bad)
das
xchg
dec
out
sti
ret
loopne
movs
movs
sar
test
push
sbb
test
push
sbb
sub
(bad)
pop
mov
test
xchg
cli
call
ds
(bad)
xor
cld
std
movs
dec
push
cwde
or
loopne
mov
ret
mov
mov
ret
ds
push
jns
jbe
sub
push
adc
shr
fldcw
sar
cwde
jp
xchg
add
outs
mov
inc
ds
mov
retf
mov
lods
inc
add
dec
jg
ja
mov
push
popa
aas
hlt
and
js
lahf
xor
jns
ficom
mov
idiv
add
push
mov
sar
jmp
daa
jns
(bad)
imul
pop
out
cld
cli
xchg
fwait
mov
xor
xor
ret
cmp
xor
jl
xchg
xor
push
gs
mov
cmp
xchg
imul
test
pushf
xor
pop
adc
scas
mov
add
pop
sub
nop
mov
scas
icebp
out
xchg
inc
fld
mov
cmp
sub
xor
aaa
jbe
jbe
retf
lea
shl
push
push
add
mov
push
sub
outs
js
mov
mov
or
and
jne
push
lds
cld
jae
cwde
jb
inc
mov
(bad)
out
and
push
cld
xor
xor
pop
add
ins
daa
cdq
aas
inc
pop
push
arpl
out
dec
sbb
inc
push
inc
aaa
or
push
inc
aad
xchg
jae
add
sbb
out
fisubr
sub
add
std
rcr
test
push
cld
sub
xor
nop
pop
dec
mov
sbb
lock
das
jb
icebp
inc
jecxz
loop
pop
inc
jmp
hlt
test
outs
jmp
(bad)
jp
push
fcmovnbe
xchg
or
cmps
loopne
loop
idiv
sub
push
outs
pop
pop
lahf
push
push
inc
sub
jmp
dec
test
adc
pop
jae
push
and
mov
das
sbb
lods
inc
adc
push
xor
repnz
ins
mov
stos
xor
cmp
cmps
and
pop
add
adc
pushf
adc
pusha
loope
xor
mov
icebp
pop
icebp
mov
sub
pop
test
mov
test
mov
sbb
int3
into
test
and
adc
mov
sar
out
push
pop
pop
push
test
mov
push
jl
adc
mov
(bad)
or
xlat
push
mov
fs
xor
cld
inc
xchg
aad
pop
iret
xor
pop
cwde
xchg
adc
sti
mov
xor
mov
hlt
lds
push
push
cmc
lea
popf
jno
mov
dec
sub
lds
cdq
and
pop
sub
idiv
xor
clc
jb
in
push
jg
mov
and
or
or
pop
or
mov
mov
movs
cwde
jne
mov
outs
stc
pop
push
cvttps2pi
leave
loope
xchg
das
rol
or
repz
xor
xor
sahf
xchg
cmp
pushf
inc
and
retf
cmp
ins
data16
mov
xor
xchg
clc
adc
xchg
sub
or
cmp
aam
fucomi
(bad)
shr
sub
mov
sbb
(bad)
lock
push
push
loop
mov
div
not
mov
sub
mov
outs
push
test
je
sbb
aas
movs
lods
fidivr
out
adc
aad
test
ret
push
fmulp
dec
(bad)
xor
and
xlat
sbb
je
add
inc
jle
mov
inc
repnz
xchg
pop
xor
repz
pusha
movs
sbb
sub
adc
pop
push
fisttp
mov
cs
fnstenv
(bad)
jp
pop
fnstsw
out
sub
pop
pop
inc
jecxz
inc
xchg
iret
loop
mov
retf
inc
mov
sti
rcr
xchg
stc
test
ficom
int
cmp
cmc
mov
loope
aam
dec
mov
fld
inc
popa
imul
outs
mov
fisubr
jbe
cmp
jle
cdq
push
dec
jnp
mov
pop
pop
push
adc
cli
jl
inc
pop
xor
mov
mov
jb
ins
pop
jg
dec
or
ins
or
jae
cli
xchg
stos
add
dec
test
and
or
pop
jb
popa
fimul
push
gs
xor
and
jns
adc
pusha
cdq
add
pop
jno
pop
int
mov
test
enter
sub
fsubr
stc
sar
pop
call
sub
jg
loopne
push
fild
sub
push
push
jl
sbb
ja
mov
sub
aam
jp
seta
div
dec
lods
and
sar
pop
enter
push
mov
lea
stos
stos
cmp
iret
test
and
out
mov
jb
mov
jmp
std
xor
test
xchg
pop
test
imul
inc
adc
popf
fs
sbb
leave
gs
push
fwait
lahf
div
and
or
sti
test
test
jecxz
mov
pop
jle
jmp
mov
xchg
xchg
(bad)
(bad)
mov
test
retf
mov
in
mov
aam
or
jg
je
and
les
repz
mov
pusha
sar
ret
adc
dec
dec
lods
icebp
push
pop
sub
pop
sbb
leave
nop
mov
sahf
xchg
arpl
call
dec
jb
inc
into
loopne
ja
dec
inc
jg
lods
inc
ins
xlat
pop
cdq
popf
loopne
pop
shrd
and
pop
std
fcom
int
pop
arpl
sbb
mov
cs
mov
inc
mov
jnp
movs
adc
xchg
xor
pop
pop
mov
jl
sub
repz
adc
pop
fwait
sub
add
mov
xor
xor
and
push
aad
pop
add
cld
call
jnp
inc
data16
lea
dec
jecxz
sti
adc
nop
ss
mov
mov
out
mov
ins
outs
ficom
add
into
rcl
(bad)
retf
mov
mov
lea
pusha
das
and
sar
sbb
fiadd
test
sbb
jnp
pop
pop
mov
mov
push
xor
cld
mov
call
add
jmp
dec
add
(bad)
jne
repz
in
mov
push
xor
pusha
test
xchg
push
scas
daa
scas
xor
icebp
and
jecxz
dec
std
js
push
retf
and
cld
into
inc
outs
pop
iret
jecxz
dec
int3
mov
pop
(bad)
mov
imul
and
inc
sti
cmp
push
push
xor
ror
retf
push
pop
and
(bad)
mov
jne
mov
bound
sub
clc
into
dec
push
stos
xchg
rcr
adc
cmp
pop
adc
pop
retf
lahf
test
je
push
or
repz
mov
into
test
fistp
pop
cmp
out
out
xchg
(bad)
les
js
mov
cmc
stos
inc
sub
mov
and
sub
push
pop
pop
neg
mov
cmc
adc
add
test
pop
mov
mov
mov
pop
cmp
xor
xor
or
int
cmps
loope
push
push
inc
push
test
jmp
cwde
movs
add
lock
in
adc
adc
rcl
pushf
mov
pop
jmp
add
sbb
inc
pusha
aad
in
xor
dec
mov
aad
cmc
sub
cmps
lods
push
or
bound
push
jl
je
loope
push
pushf
sbb
pop
and
and
mov
(bad)
inc
outs
push
lods
outs
enter
mov
out
mov
sbb
adc
loop
xor
mov
adc
mov
dec
mov
arpl
movs
fdiv
xor
push
or
in
mov
(bad)
(bad)
mov
mov
cdq
leave
pushf
mov
and
scas
lods
cdq
xor
push
push
cld
add
cmp
outs
mov
(bad)
xor
xchg
xor
or
add
cli
pop
cmp
repnz
sti
push
dec
js
fcmove
lods
xor
or
movs
mov
jno
sbb
clc
cmp
mov
sub
mov
aam
mov
sub
fisttp
pop
dec
sub
dec
outs
ins
scas
bound
pop
add
clc
mov
data16
pop
rcl
xchg
repz
leave
(bad)
loopne
call
mov
push
or
cmc
push
out
pop
cmp
int
pop
pop
jns
push
lahf
dec
outs
xchg
arpl
sbb
push
(bad)
aam
push
and
mov
mov
pop
je
push
dec
mov
fstp
cmp
retf
lahf
push
test
push
or
and
sbb
mov
sti
daa
aam
push
cmp
pushf
sbb
cli
inc
push
pop
es
jecxz
loope
ss
adc
jle
or
cmps
mov
pop
fisubr
mov
or
scas
mov
rcl
pop
js
xor
(bad)
pop
pop
push
je
stc
ins
nop
cmp
inc
jle
mov
pushf
iret
dec
fdiv
call
lea
sti
cdq
in
out
and
imul
inc
ficom
loopne
pop
pop
cmps
ror
lods
fstp
dec
ds
pop
dec
(bad)
fwait
shr
(bad)
shl
mov
(bad)
stos
repnz
ins
pminsw
loop
pop
sub
push
xor
stc
jge
xor
test
in
pushf
loope
mov
(bad)
call
cmp
jmp
jecxz
sbb
cwde
fidivr
rcl
data16
(bad)
push
fwait
cmc
popa
imul
sub
mov
cli
mov
cdq
add
out
xchg
lahf
adc
jmp
ror
scas
cmp
xchg
adc
or
scas
nop
shr
add
sub
dec
fwait
jecxz
pusha
inc
xchg
ja
inc
call
lds
push
dec
mov
jmp
arpl
sbb
clc
gs
sub
out
and
mov
in
jmp
mov
mov
aaa
enter
xchg
ficomp
pop
ds
xor
xor
or
sbb
xor
ror
mov
sbb
xchg
popf
cmps
or
and
call
sbb
xor
arpl
not
pop
sbb
xor
adc
cld
mov
lahf
ins
nop
adc
ret
(bad)
inc
jmp
inc
daa
hlt
xchg
and
jmp
icebp
inc
or
jo
enter
fisttp
mov
outs
cmc
and
cmp
push
mov
xchg
rcl
loope
leave
adc
adc
dec
pop
mov
(bad)
fst
icebp
call
test
mov
push
rcl
lds
sub
pop
fldcw
fdivr
ret
or
call
pop
ret
mov
xchg
(bad)
sub
je
or
mov
mov
repz
dec
or
cs
inc
inc
mov
shl
xor
xchg
es
dec
cmps
inc
lock
xor
cmp
dec
lods
sbb
xchg
jae
adc
jmp
and
dec
push
ror
adc
into
inc
xchg
imul
dec
mov
in
push
outs
sub
ss
in
das
sbb
xor
enter
cwde
and
mov
mov
repz
or
sub
cmp
ret
or
cmp
mov
(bad)
iret
push
mov
mov
jno
xchg
outs
aas
jne
sub
mov
mov
ss
xor
lock
jo
scas
addr16
and
dec
push
mov
je
repz
and
fisub
ins
lds
fild
mov
pop
or
(bad)
inc
les
out
dec
and
push
pop
mov
push
fstp
sar
cmp
test
call
test
movntq
hlt
imul
add
sub
loop
outs
push
data16
sub
addr16
sbb
fsubr
repz
popa
fdiv
(bad)
arpl
out
cdq
jns
inc
jnp
sub
(bad)
loopne
xchg
ds
mov
mov
jmp
and
cmp
pop
push
adc
inc
mov
enter
cmp
int
(bad)
push
xlat
push
mov
fdiv
sub
mov
ret
fmul
mov
enter
add
mov
adc
cmp
xchg
sub
mov
fld
cs
gs
mov
sbb
(bad)
mov
pop
pop
inc
mov
pop
jb
repz
xchg
sbb
in
ins
movs
jmp
sbb
daa
scas
jle
or
push
jge
fisttp
jmp
jo
push
aad
sub
jae
push
ins
cmp
sbb
pop
sbb
jbe
iret
push
loop
push
addr16
pusha
xchg
cld
(bad)
cmp
xchg
cld
lock
xchg
xchg
jnp
data16
sbb
xchg
and
jno
outs
cmps
sub
aaa
push
xor
cmp
ds
lock
jnp
imul
cmp
idiv
addr16
xchg
retf
sub
jno
sti
and
shl
cli
add
jae
mov
jne
or
and
jl
pop
retf
xchg
sbb
(bad)
iret
dec
jle
aad
sbb
ins
ficom
outs
ins
xor
movlps
retf
mov
lea
out
std
pusha
jnp
dec
pop
push
mov
ret
push
cs
jb
cmp
hlt
lea
xchg
lds
call
call
jmp
cmp
addr16
jp
add
jmp
sub
adc
jmp
xor
call
enter
hlt
push
(bad)
in
xchg
mov
mov
loope
pop
jecxz
pop
addr16
push
mov
lea
fsubr
arpl
pusha
ja
out
xor
fsub
int3
sub
sbb
adc
xor
cmp
popf
pop
jns
xor
adc
test
popa
cli
icebp
and
and
and
inc
daa
arpl
add
pop
jae
xchg
mov
outs
inc
cmc
or
or
and
or
inc
outs
push
or
mov
xor
jbe
loopne
leave
test
adc
jl
push
mov
mov
rol
pop
mov
cmp
test
or
out
or
pop
fcomp
jle
je
mov
loop
test
jmp
scas
mov
mov
fild
dec
clc
push
inc
lds
inc
jmp
imul
repz
push
xchg
xor
(bad)
xchg
inc
dec
fild
cld
jne
and
push
in
push
mov
(bad)
pop
test
inc
cdq
dec
(bad)
dec
jb
and
xchg
iret
stos
xchg
jg
outs
popf
(bad)
adc
pop
pop
sbb
mov
or
sbb
outs
mov
test
loop
mov
cli
mov
les
aas
out
dec
sub
cli
dec
rol
mov
jmp
dec
pop
ds
jecxz
push
pop
xchg
scas
je
out
and
leave
(bad)
and
and
mov
icebp
sahf
xchg
enter
xor
addr16
push
rep
mul
or
cmp
pop
jmp
jb
cmc
fcom
test
inc
cmp
xor
and
aaa
pop
inc
jp
sahf
ds
sub
sub
sub
lahf
xor
xchg
sbb
movs
dec
mov
in
ja
rcr
add
jnp
inc
scas
loope
lds
sub
push
jne
mov
and
test
mul
pop
adc
mov
rcl
push
test
ins
jge
xor
xchg
push
fild
aam
aas
fnstcw
das
cwde
mov
jae
or
nop
pop
adc
pop
ja
adc
stos
sbb
clc
lods
jge
mov
push
aad
jecxz
jnp
mov
jae
or
out
into
pop
and
xor
pop
pop
ds
push
mov
sub
ja
test
adc
ds
sbb
mov
pop
retf
or
dec
push
sbb
jp
call
fst
call
dec
daa
xor
inc
inc
mov
(bad)
out
dec
out
mul
sbb
dec
sbb
push
jnp
jns
fisubr
fdiv
(bad)
xchg
xchg
push
int
(bad)
das
push
ja
pop
xchg
add
imul
add
ins
xchg
stc
xlat
sbb
xor
jne
pop
sti
(bad)
data16
cmps
add
xchg
jmp
mov
sub
cmp
fst
mov
dec
pushf
dec
mov
sub
pop
adc
int
sbb
addr16
xlat
cmp
stos
pop
xor
sub
mov
xchg
mov
enter
inc
xor
jno
icebp
scas
xchg
or
vpextrw
hlt
clc
ja
dec
aaa
sub
bound
or
inc
cmp
je
mov
in
(bad)
data16
fwait
sub
and
inc
jne
push
jb
dec
aad
mov
mov
loope
or
push
leave
(bad)
out
sahf
fsubr
push
test
dec
dec
and
ror
in
sbb
jmp
pop
pusha
xor
mov
scas
retf
ret
in
test
jle
cmc
cmp
fistp
fwait
outs
sub
xor
fwait
repnz
repz
cmp
xchg
out
in
push
cmps
into
cmp
or
(bad)
shl
mov
(bad)
shr
adc
sahf
leave
push
aad
rcr
adc
in
bound
inc
jns
or
loop
sub
mov
jno
test
push
cmc
jbe
fwait
jp
jmp
fistp
loope
in
pop
inc
into
push
jb
into
mov
or
in
div
mov
ret
jmp
inc
retf
cmc
mov
or
test
mov
ja
jge
jne
ss
shl
out
pop
clc
or
ja
aam
sub
and
in
cmp
mov
inc
mov
(bad)
dec
sbb
push
cmp
jmp
jle
mov
push
xlat
test
jecxz
adc
xor
loop
pop
jge
outs
add
daa
sbb
imul
movs
fchs
imul
fucom
sbb
mov
es
bound
les
and
pop
xchg
ja
outs
xchg
lods
sar
ret
xor
pop
gs
fisub
adc
into
stc
inc
stos
sti
(bad)
retf
and
loope
ja
xchg
adc
jge
or
sbb
push
enter
icebp
xor
ret
in
and
out
outs
xchg
jb
jno
sahf
and
loopne
push
ds
lahf
pop
adc
fldlg2
cmp
push
xchg
js
dec
ret
into
in
push
add
or
push
add
jg
not
pusha
leave
inc
ret
rol
out
jmp
add
push
lods
add
fsub
je
arpl
dec
or
jae
call
imul
cmp
mov
retf
sbb
ror
int
or
cmp
sub
mov
dec
sub
js
push
mov
dec
mov
sbb
outs
sub
sti
mov
xor
imul
jmp
and
xlat
xchg
aas
(bad)
mov
mov
shr
fisttp
jp
add
(bad)
pop
rcl
dec
sar
add
sbb
imul
pushf
xor
xchg
mov
sahf
(bad)
(bad)
mov
mov
scas
cmp
jae
enter
adc
xchg
xor
xchg
mov
mov
call
pop
bswap
xchg
and
xchg
daa
leave
repnz
sub
adc
inc
dec
mov
fistp
lock
(bad)
xchg
ins
call
mov
jb
popa
pop
lea
xor
fstp
and
js
jb
jecxz
pop
loope
aaa
clc
dec
idiv
shl
mov
imul
jnp
adc
in
dec
sbb
mov
jp
retf
rcr
sub
xchg
leave
xor
or
cld
cmps
icebp
xor
and
rol
xlat
adc
dec
and
mov
jmp
(bad)
cmp
in
out
adc
mov
and
sti
sub
cwde
fcmove
or
push
test
les
sbb
cmc
adc
mov
mov
mov
push
sbb
enter
daa
add
adc
retf
jne
jmp
fdivrp
xchg
ret
aad
sub
mov
dec
stos
adc
sahf
lods
jmp
and
sub
ins
inc
inc
icebp
sar
inc
repz
inc
sbb
cmp
pop
ss
adc
outs
cwde
mov
jbe
pusha
dec
(bad)
int
mov
shl
into
outs
and
push
repz
adc
iret
adc
xchg
mov
mov
cmp
jb
jno
dec
cld
cmps
sbb
dec
mov
cmc
add
push
mov
mov
push
lock
hlt
mov
aaa
mov
sahf
pusha
aaa
rol
in
mov
sub
ja
stos
sbb
loope
loop
inc
mov
adc
aad
jb
cld
fs
mov
shl
adc
ror
stc
and
push
cmp
cmps
sbb
mov
rol
in
and
jp
in
sbb
rol
jb
or
in
xchg
sbb
inc
aad
sub
cmp
push
movs
sbb
les
fs
out
mov
pop
xlat
and
dec
push
cmp
sub
adc
xchg
test
add
shr
sbb
retf
stos
fnsave
xor
inc
ins
mov
xor
cmp
mov
add
pusha
(bad)
mov
in
xchg
ins
je
add
test
fwait
in
cmp
xchg
mov
lahf
xchg
es
sbb
mov
pushf
leave
fild
mov
loope
mov
mov
xor
cmp
fiadd
jg
clc
mov
inc
dec
(bad)
adc
push
scas
ins
fisubr
mov
dec
sbb
add
cmc
mov
jmp
dec
lock
int
jno
jno
pop
shl
pop
stos
or
sub
loopne
sbb
fwait
mov
sbb
pop
xchg
inc
fiadd
mov
cmp
div
cld
cmp
jno
xor
imul
int
lahf
or
movs
mul
adc
mov
inc
lds
imul
loopne
pop
mov
scas
inc
inc
pop
fisttp
cmp
mov
fcomp
lahf
cld
int3
das
push
mov
or
xor
dec
sbb
nop
pop
jne
or
fisubr
or
dec
bound
(bad)
lods
mov
mov
xor
mov
imul
outs
ins
sbb
(bad)
int
shl
test
add
xchg
mov
rcr
push
jmp
mov
js
adc
push
je
icebp
add
mov
js
call
mov
xchg
sbb
mov
or
ret
in
sbb
sbb
fcomi
shl
dec
fsub
or
mov
daa
sbb
mov
ins
or
in
mov
jg
(bad)
fcomp
xchg
mov
sbb
popa
lahf
sub
loope
push
inc
fcomp
icebp
jmp
arpl
test
pop
clc
xchg
mov
mov
mov
cli
sub
xor
rol
mov
inc
xor
and
fld
add
pop
xchg
out
fyl2xp1
repnz
cmps
jno
bound
sub
mov
es
cwde
lods
inc
popa
test
cmps
leave
jecxz
fiadd
xchg
pop
ret
test
scas
scas
xor
sbb
xor
add
enter
xor
or
push
jg
jb
retf
jp
(bad)
sbb
pop
mov
int
loope
sub
cli
cmp
ficomp
adc
dec
int
sub
int3
pop
inc
sbb
(bad)
adc
outs
test
addr16
scas
inc
sub
xchg
cli
leave
mov
fs
xor
push
pushf
push
mov
clc
jne
lods
xlat
outs
xor
jno
mov
aam
and
clc
and
jecxz
push
loopne
(bad)
xchg
cwde
int
outs
out
pop
bound
push
sbb
add
mov
sub
repz
(bad)
push
test
sbb
xchg
(bad)
jg
mov
mov
mov
or
pop
cmps
mov
inc
fcomp
inc
pop
add
xlat
dec
jp
mov
add
xor
aas
or
mov
xor
add
pusha
jbe
mov
jge
imul
mov
sbb
popa
fidivr
aad
je
or
pop
sti
push
push
in
lods
jge
add
inc
inc
and
xchg
push
pushf
jge
jne
fdivp
mov
dec
test
pop
mov
dec
sub
pusha
out
aas
adc
dec
sub
in
shr
cmp
stc
div
in
fcmovb
shr
mov
cli
cmp
mov
imul
push
sbb
push
mov
or
jp
pop
push
shl
inc
pop
cmp
sbb
cmp
sub
in
mov
pop
cwde
fs
(bad)
test
pop
stc
mov
and
sti
in
mov
clc
mov
jne
sbb
ja
fnstcw
xor
(bad)
push
xchg
loop
add
mov
test
push
inc
imul
push
movs
mov
jl
xor
sar
sbb
sti
retf
adc
xchg
sub
out
test
push
ficom
pop
lahf
xor
cli
mov
mov
sub
popa
addr16
test
lock
outs
push
add
shl
(bad)
mov
mov
add
sar
gs
cmp
jb
(bad)
pop
or
jle
sbb
(bad)
stos
mov
lea
xchg
int
pusha
mov
mov
xchg
aam
sbb
mov
outs
xchg
cmp
pop
xchg
mov
cwde
add
sbb
data16
out
fsubp
pop
push
daa
sbb
mov
jg
fistp
cld
cmp
retf
push
cwde
cmp
imul
lods
je
aad
pop
lea
mov
rcl
fs
push
(bad)
mov
mov
mov
scas
mov
mov
xor
sub
xor
or
mov
test
retf
sbb
call
ja
jg
inc
inc
xor
mov
test
and
ret
push
jae
cmp
mov
mov
xor
je
jl
and
or
mov
gs
jo
adc
cwde
int
mov
mov
out
and
(bad)
icebp
jne
sub
gs
xchg
sbb
xchg
pop
sbb
out
pop
mov
rcl
jle
repz
push
sbb
in
movs
or
add
push
mov
js
xchg
push
aad
xor
icebp
sbb
ret
mov
inc
xor
pop
cmp
scas
imul
hlt
fidivr
jae
or
call
mov
(bad)
mov
test
mov
sub
xchg
fstp
rol
frstor
adc
repz
retf
mov
call
lea
nop
mov
add
into
push
ds
ss
push
js
mov
cs
popa
jns
xor
dec
loop
dec
rcr
enter
ja
push
ds
cmp
arpl
xor
mov
mov
shl
movs
push
cmp
shr
shr
sti
mov
dec
jge
jl
jecxz
sub
mov
sahf
push
adc
nop
xchg
js
cmp
ins
addr16
jp
lods
xchg
dec
jge
rcl
inc
fucom
and
xor
retf
mov
pop
jo
out
or
or
les
jnp
sahf
jb
ror
mov
shl
mov
call
sub
or
clc
jb
xor
repnz
out
adc
loope
addr16
int
imul
mov
and
lods
jo
(bad)
pop
jnp
sub
mov
std
add
cmp
jno
xor
ret
sbb
jns
pop
lahf
cs
sub
repz
(bad)
rol
aas
mov
lods
cmp
js
mov
cli
mov
test
fistp
jne
ret
adc
pop
inc
dec
add
inc
and
xor
cmp
adc
jno
xchg
and
mov
jne
fnstsw
jle
shr
std
push
and
out
sub
add
mov
inc
dec
popa
call
and
ret
sub
std
jl
(bad)
pop
push
or
push
xor
add
in
std
loope
rcr
mov
inc
cmps
shl
cmp
stc
add
iret
sub
cmp
je
aam
hlt
xchg
ret
push
fsub
dec
inc
hlt
or
data16
dec
add
(bad)
sbb
(bad)
push
adc
or
clc
dec
outs
or
adc
dec
xchg
pop
test
xchg
hlt
add
sub
(bad)
sub
jge
enter
shl
ret
cs
mov
push
push
(bad)
pop
xchg
cmc
mov
hlt
adc
jmp
inc
hlt
mov
lea
mov
cli
xchg
push
loopne
ror
mov
cmp
push
sbb
push
adc
inc
sub
cdq
leave
ins
sbb
outs
cli
xor
mov
pmuludq
hlt
pop
fidivr
mov
lea
or
(bad)
mov
jae
je
lahf
(bad)
sub
imul
je
adc
or
xchg
(bad)
adc
loop
inc
nop
rol
out
out
call
mov
pop
dec
cmp
sbb
fistp
pop
mov
jmp
test
inc
jmp
xchg
mov
aam
fwait
aam
jle
ss
aas
xchg
xchg
mov
pop
hlt
add
push
xchg
dec
mov
mov
mov
xchg
mov
test
js
adc
cmps
rcl
lods
mov
inc
and
loopne
inc
in
push
jp
inc
pop
mov
and
test
mov
scas
test
or
aas
mov
mov
pop
add
cs
mov
test
ins
cmps
or
test
push
inc
cs
fnsave
femms
sub
push
mov
jo
int3
jge
scas
and
push
mov
jns
daa
push
retf
push
cwde
cmp
mov
push
pop
inc
lahf
repz
pop
dec
int
jg
repz
inc
scas
sbb
add
aaa
les
mov
xchg
retf
cs
mov
scas
fstp
enter
pop
pushf
mov
mov
mov
or
xor
mov
call
les
imul
lock
jmp
movs
jbe
adc
fisttp
popa
inc
cmp
sub
mov
cmp
jnp
hlt
sub
cdq
sbb
cwde
mov
add
(bad)
imul
xor
mov
mov
mov
push
(bad)
clc
cmp
fadd
push
or
push
int
pusha
jbe
xor
xchg
adc
inc
int
inc
icebp
lahf
xor
dec
and
and
or
sbb
(bad)
repz
pop
pushf
pop
out
movs
hlt
cmp
test
push
xchg
mov
xor
sub
push
cwde
adc
mov
dec
and
and
inc
ret
push
retf
push
cmp
cmp
mov
and
adc
jb
dec
dec
and
inc
pop
lds
mov
mov
pusha
arpl
or
push
adc
cmp
les
add
aaa
dec
push
and
sub
or
fdivr
test
popa
fiadd
mov
repz
retf
dec
jle
xor
xor
push
dec
sbb
fwait
in
cmp
jo
xor
into
push
retf
ds
mov
push
scas
xor
add
out
mov
and
aad
dec
popa
and
inc
ja
(bad)
outs
mov
imul
js
clc
sbb
jb
fsub
push
mov
js
mov
push
inc
fs
mov
add
lods
test
add
mov
loopne
clc
xor
jae
std
arpl
mov
mov
(bad)
pop
fiadd
and
cmp
mov
aam
int3
sbb
outs
mov
pop
mov
mov
lods
movs
xor
call
inc
jbe
add
pushf
sbb
inc
shr
mov
sbb
popf
pop
fstp
mov
pop
rcr
push
dec
mov
and
xchg
jecxz
mov
inc
xchg
retf
cmp
xlat
pop
mov
adc
sbb
jmp
and
mov
xor
cmp
push
sub
out
daa
xchg
mov
ficomp
or
ss
test
jmp
xor
mov
xor
lods
lods
fidiv
sbb
inc
add
in
stos
ins
aaa
sbb
mov
movs
daa
xor
arpl
gs
mov
test
mov
frstor
scas
outs
jmp
or
shl
outs
in
jle
cmps
add
mov
scas
jge
or
addr16
arpl
pslld
adc
and
adc
pop
fwait
arpl
lock
imul
(bad)
out
adc
cmp
(bad)
sub
rcl
repz
(bad)
shl
pop
nop
xchg
(bad)
fs
adc
sub
and
outs
pop
inc
xlat
adc
aam
add
out
cmc
xchg
mov
mov
daa
sti
jb
inc
or
adc
adc
push
mov
jmp
xchg
mov
mov
jmp
add
and
in
push
imul
mov
popf
sahf
dec
lahf
cmp
fisubr
(bad)
mov
xor
sbb
lods
sub
xor
arpl
inc
fadd
repnz
cwde
mov
dec
add
push
cmc
cmp
lock
aaa
int3
pop
cld
pop
(bad)
in
push
jb
xchg
(bad)
pop
inc
inc
dec
xchg
adc
and
(bad)
pop
mov
mov
in
fild
jg
sub
shl
ins
(bad)
jmp
aad
xchg
adc
sbb
mov
mov
dec
fstp
call
cmp
bound
inc
dec
dec
inc
jnp
pop
call
in
cmps
pushf
aas
sbb
jp
xchg
push
rcl
loopne
cwde
mov
push
loope
sahf
xor
cmp
gs
(bad)
bound
inc
push
xor
jb
mov
out
mov
sub
dec
aas
mov
mov
js
enter
add
imul
xlat
cmps
popa
ret
sub
leave
inc
jg
jmp
fwait
and
mov
mov
(bad)
jg
js
test
and
mov
pop
out
mov
xchg
dec
xor
js
add
and
(bad)
loopne
(bad)
es
sbb
inc
rcr
mov
xchg
push
fidivr
rcr
pop
clc
mov
add
or
xchg
stos
push
not
mov
fsubr
pop
cmp
xchg
push
push
fidivr
xchg
jp
xor
lods
bound
push
gs
cmp
cli
xor
ret
stos
mov
mov
and
cmp
mov
mov
mov
cli
or
dec
add
add
mov
test
mov
sar
cmps
xlat
mov
mov
inc
mov
jae
pop
pop
cmp
or
jle
ficomp
ret
xchg
mov
mov
inc
and
stos
mov
xchg
or
xchg
ror
and
mov
push
pop
push
fisttp
adc
aad
and
enter
pop
adc
retf
mov
dec
loopne
stos
mov
test
sahf
lea
rol
push
and
and
ret
jg
fcom
and
and
jg
xor
inc
or
ret
pop
ret
fldcw
dec
data16
ds
add
xlat
pop
xlat
mov
or
scas
xlat
and
mov
jmp
daa
xor
aam
adc
mov
lea
int3
(bad)
cld
or
es
popf
push
in
cmp
mov
popf
adc
push
mov
popf
ret
pop
icebp
fisttp
lods
cmp
cmp
clc
mov
cmps
nop
mov
loope
arpl
add
out
xchg
aaa
ret
jb
pop
rcl
sbb
(bad)
mov
sub
jb
jae
jb
cli
add
mov
pop
popa
sub
aam
in
ror
push
xor
stc
inc
adc
cdq
bnd
cmps
into
ret
cwde
(bad)
aam
sahf
and
pop
inc
enter
mov
or
into
fnstcw
and
in
jle
mov
leave
clc
or
or
inc
xchg
sub
cmp
xchg
inc
jle
(bad)
fstp
sub
iret
aad
movs
push
ins
into
call
nop
push
push
cwde
repz
je
sbb
push
xchg
inc
pop
mov
lds
sbb
cmp
pop
enter
sbb
data16
mov
mov
in
ss
mov
mov
retf
mov
ret
sbb
mov
hlt
loop
mov
inc
stc
cmp
add
pop
mov
push
in
hlt
jl
or
add
cs
mov
push
movs
push
loope
add
leave
sti
sbb
lahf
xchg
jg
mov
xor
js
out
loop
rcr
je
and
nop
jo
(bad)
retf
dec
adc
in
xchg
jmp
dec
repz
push
mov
mov
pushf
ret
das
sub
or
stos
add
test
shl
xchg
test
jo
stc
pop
ror
lds
sbb
jnp
fmul
js
lds
(bad)
shl
mov
lods
jge
push
ret
out
ins
mov
dec
sub
in
pop
call
sbb
jo
lea
arpl
jnp
je
xor
jg
inc
mov
stc
sbb
push
test
loopne
xor
xchg
call
cmp
dec
adc
ins
mov
mov
test
lahf
sbb
jl
mov
cld
in
push
or
retf
cs
xchg
dec
mov
push
pushf
xor
lods
xor
mov
jne
enter
outs
(bad)
mov
push
push
add
adc
and
push
xor
rcr
sub
push
test
rol
fcomp
dec
cmp
sbb
daa
xchg
add
and
das
xor
xchg
and
fmul
xor
stos
add
test
in
jp
push
out
jae
or
loope
jae
or
in
mov
into
mov
pushf
jmp
mov
jne
fcom
mov
lods
fs
add
mov
mov
fcomp
sub
add
test
jnp
mov
and
xor
mov
mov
xchg
fcomp
data16
in
jo
mov
fcmovnbe
lods
adc
xor
and
xor
mov
push
dec
stos
je
rcr
or
xlat
mov
sub
xchg
loop
(bad)
iret
aaa
retf
adc
and
sub
push
mov
cmps
xor
icebp
rcr
inc
jne
xchg
add
sbb
mov
xlat
loop
pop
inc
pop
lds
jns
mov
in
jle
rcl
aam
pop
add
scas
out
lods
xchg
add
add
sbb
jmp
rol
mov
sbb
cmp
call
inc
mov
test
test
icebp
push
add
js
imul
out
out
and
xchg
jnp
hlt
imul
xchg
inc
mov
add
scas
mov
sbb
xchg
and
loop
jne
push
mov
sahf
xchg
mov
sub
xor
loopne
dec
dec
clc
add
pop
xchg
push
pop
mov
jmp
sar
jmp
or
pop
and
adc
add
popa
test
jo
cmp
dec
jne
sbb
push
or
push
out
popa
add
out
fcomi
stos
(bad)
xchg
push
jne
jg
ja
push
(bad)
shl
dec
(bad)
repnz
mov
mov
ja
call
sub
xor
scas
jnp
sahf
imul
mov
gs
jmp
rol
jecxz
jmp
push
inc
dec
ja
int
sub
test
lods
xchg
imul
xchg
and
fbstp
sub
xchg
jmp
scas
nop
lea
push
lods
and
push
scas
dec
in
daa
jne
cli
mov
ins
(bad)
call
jle
test
fwait
hlt
mov
push
loope
dec
clc
and
cwde
test
retf
pop
scas
xlat
adc
test
or
xor
pop
aas
out
push
xor
in
rcr
jp
push
add
push
dec
adc
sub
pop
cmps
int
popa
or
sub
or
cmp
loopne
jg
das
je
movs
and
xchg
push
fidiv
mov
fcomp
(bad)
mov
sub
xchg
mov
fwait
xchg
out
sbb
lock
dec
jl
in
mov
shl
push
sbb
push
fst
sbb
jl
mov
jne
int
pop
sbb
ss
push
ja
push
push
dec
fcom
mov
jl
(bad)
pop
xchg
nop
mov
add
or
out
iret
mov
ins
call
and
cs
shl
ins
in
adc
cmp
sub
or
xlat
mov
pop
lea
movs
push
cmp
cli
inc
cli
mov
mov
xchg
or
xor
and
jmp
popf
dec
mov
jae
mov
fsub
jmp
mov
mov
(bad)
sbb
xor
leave
stc
sti
iret
in
mov
adc
std
add
jmp
push
sub
stc
mov
inc
adc
mov
in
vprotw
jg
dec
inc
out
mov
loope
push
sbb
and
inc
sub
pop
lea
mov
push
(bad)
mov
clc
add
jl
or
xchg
mov
xlat
xchg
es
sbb
cmps
push
or
dec
sahf
mov
pop
jl
das
mov
stc
jle
adc
adc
outs
dec
das
shl
inc
fucomp
mov
sbb
jno
dec
rcl
call
icebp
call
test
idiv
arpl
jle
pop
sbb
adc
inc
dec
inc
jae
lods
inc
sahf
dec
icebp
push
mov
or
shr
(bad)
movs
int3
pop
dec
in
call
popa
icebp
sub
adc
sbb
fdivr
adc
cli
retf
aas
mov
pop
outs
bound
sbb
(bad)
and
or
adc
sub
sub
push
jnp
add
sub
mov
sbb
outs
xchg
or
pop
outs
cmc
retf
mov
loope
mov
test
cwde
ret
pop
jne
jge
mov
sbb
inc
adc
mov
retf
sbb
in
enter
xchg
and
(bad)
xchg
fs
rcl
push
cmp
jno
xchg
dec
push
aaa
inc
lds
mov
pop
pop
fst
adc
pop
ins
loop
mov
in
addr16
into
icebp
out
mov
nop
push
mov
(bad)
jmp
leave
pop
loope
pop
jmp
arpl
aas
pop
repz
inc
dec
pop
mov
sar
pop
leave
daa
clc
test
fcomp
mov
jge
inc
push
mov
fwait
test
mov
jns
ins
or
les
xor
xchg
push
xchg
retf
ds
xor
stos
aaa
mov
(bad)
inc
add
and
mov
inc
mov
sub
jle
jge
ficom
ins
cmps
(bad)
fwait
not
rcr
int
xor
push
shl
and
and
iret
xchg
sub
sub
shl
daa
out
cdq
inc
jne
lahf
dec
add
outs
test
jns
lea
sbb
scas
jmp
mov
pop
std
pop
jmp
adc
je
jp
js
pop
sar
mov
add
dec
addr16
sub
jg
add
sti
sub
add
fisubr
xchg
xor
lods
jne
mov
loope
rol
(bad)
loopne
movs
mov
movs
push
aam
scas
shr
div
or
shl
lahf
(bad)
ins
push
or
pavgw
add
jb
sti
jmp
jnp
pop
jne
call
imul
push
adc
xor
call
scas
xchg
ja
pop
pop
lahf
add
iret
test
cmps
mov
cdq
(bad)
mov
leave
mov
xchg
and
pop
popa
mov
jge
jl
push
retf
addr16
cmp
sbb
jo
mov
int
mov
mov
mov
inc
xor
jae
retf
push
or
jno
les
xlat
xchg
frstor
fwait
movs
fist
jb
mov
jecxz
cmp
out
gs
imul
or
test
bound
inc
jmp
fs
xrelease
pop
inc
push
xor
jns
(bad)
jno
push
dec
out
(bad)
inc
dec
mov
sbb
xor
mov
sahf
bndmov
in
ret
pushf
xor
and
push
adc
aad
inc
or
jge
mov
gs
ins
ffree
and
xchg
add
add
xchg
(bad)
sub
fldenv
and
push
jo
cmp
inc
mov
fcmovb
pop
sub
cdq
pop
xor
jno
push
sbb
mov
out
ss
xor
pop
ins
ror
jp
add
xchg
xlat
in
push
(bad)
sti
mov
ret
or
data16
dec
adc
or
xchg
xchg
adc
jg
jmp
pop
call
ja
leavew
pushf
popf
dec
aad
or
xchg
add
pop
lods
xchg
pop
pop
pop
mov
mov
mov
jmp
mov
rol
mov
xor
sar
sub
imul
sub
out
add
mov
adc
xor
adc
popa
dec
dec
loopne
pop
nop
in
mov
jmp
ret
sbb
les
sub
dec
pop
sub
xchg
fild
dec
shl
dec
bt
and
int
std
dec
pop
jecxz
jl
add
dec
ficomp
pop
pop
(bad)
or
mov
iret
mov
lods
cmp
pop
and
mov
or
jae
pusha
in
mov
sbb
inc
inc
nop
sub
jo
outs
cmp
pop
pusha
pop
add
jge
mov
or
inc
dec
push
adc
xor
repz
cmp
mov
out
in
je
or
xchg
bound
addr16
test
pop
sbb
adc
jmp
fbld
cmc
jb
pop
jo
imul
(bad)
cmps
dec
xor
stos
rcr
mov
xor
dec
dec
pop
fdivr
mov
add
dec
ret
sbb
or
xchg
pop
fdivr
push
adc
pop
or
repnz
fadd
inc
les
xchg
sub
sbb
pop
mov
xor
fidiv
sub
sub
push
pop
rol
dec
mov
xor
add
enter
dec
pushw
scas
add
and
out
(bad)
call
aam
pushf
sub
cdq
cmps
xor
xor
mov
dec
lods
inc
mov
push
lods
mov
mov
pop
rcl
int3
fwait
leave
xchg
outs
mov
and
into
xchg
mov
sbb
loope
jp
sub
dec
and
or
push
fist
pop
aaa
cmp
mov
in
fs
xor
in
jge
cmp
test
shl
enter
stos
ds
pop
arpl
mov
xor
pop
jmp
lea
jp
fadd
fbld
mov
(bad)
lds
ins
neg
cmp
(bad)
mov
jnp
clc
shl
sbb
mov
add
xchg
(bad)
test
stc
inc
(bad)
jmp
xor
fcomp
pop
in
or
rcr
dec
test
mov
cs
mov
movs
sar
adc
mov
jmp
jae
call
cli
pop
lock
adc
sahf
fs
popf
scas
out
ins
outs
sub
inc
adc
add
sbb
adc
cmc
dec
scas
or
mov
xlat
cmp
retf
sub
cmc
fmul
jge
cmps
add
fs
rcl
mov
mov
test
cwde
mov
stos
shl
ins
cli
jnp
loope
out
iret
rcl
test
xchg
das
mov
daa
mov
je
xor
mov
or
jp
mov
daa
jmp
clc
sbb
fsubr
add
outs
fst
mov
adc
pop
jbe
fwait
cmp
stos
cdq
cmp
lods
inc
sub
lahf
fwait
add
pop
scas
jp
rcl
lahf
(bad)
(bad)
cmp
xor
add
push
cld
es
leave
rcr
cmp
dec
sar
mov
(bad)
adc
pop
adc
aaa
pushf
icebp
stos
mov
jmp
inc
inc
mov
jbe
add
xor
out
sti
mov
iret
imul
mov
das
or
retf
xchg
lea
and
pusha
mov
add
adc
mov
inc
adc
enter
scas
jge
mov
mov
and
pop
push
pop
and
stos
mov
leave
xlat
mov
jle
stos
(bad)
lods
jb
cmps
out
test
xor
data16
enter
add
movs
jae
jno
mov
jbe
les
mov
retf
scas
and
mov
movs
lods
imul
sahf
xchg
test
xlat
pop
jge
cmp
mov
and
js
inc
xor
inc
fnstenv
aas
sti
mov
fsub
scas
mov
fcom
xchg
xchg
outs
ins
mov
les
rcl
mov
ja
mov
dec
jb
lea
jo
add
stos
jmp
pop
retf
push
leave
paddd
jns
jl
mul
rcr
stc
push
mov
leave
icebp
leave
jmp
add
imul
fidiv
jmp
sub
sbb
out
ja
pop
xor
(bad)
jns
mov
push
ins
add
out
(bad)
inc
or
pop
push
sbb
xchg
add
inc
rcr
mov
push
add
aas
sbb
retf
mov
gs
mov
and
and
test
jle
lods
push
push
push
pop
fcmove
xor
cmps
lock
dec
sqrtps
scas
xchg
pop
mov
(bad)
stc
ds
ret
outs
or
jmp
sahf
inc
dec
inc
scas
sub
sahf
push
in
rcr
adc
neg
pop
es
push
aaa
or
or
jb
pop
pop
into
fstp
push
pop
pusha
pop
or
dec
pop
shl
xchg
mov
fiadd
sbb
iret
jbe
jne
outs
in
or
push
addr16
jg
ret
aas
pop
fbld
jns
jl
sbb
mov
push
in
mov
xor
cmp
xchg
mov
and
scas
outs
scas
aaa
push
retf
add
jne
nop
cmp
cmp
lock
ret
enter
popa
in
cmps
popf
je
sbb
inc
adc
inc
pushf
cs
sbb
mov
(bad)
mov
jl
push
(bad)
in
jo
jp
outs
jb
leave
addr16
mov
lds
xor
jge
xor
push
add
les
push
and
(bad)
jmp
hlt
scas
mov
fwait
ins
jns
adc
push
or
ds
bound
dec
ja
mov
mov
mov
loop
mov
stos
mov
xchg
dec
lea
pusha
test
ret
xchg
aam
sub
xchg
cli
gs
cmp
int
xchg
std
dec
lds
bound
or
(bad)
or
loopne
mov
aam
xor
fidiv
or
mov
div
jmp
push
arpl
xlat
out
and
scas
dec
fimul
sbb
js
fcomp
les
mov
icebp
xchg
or
ins
inc
icebp
pop
sahf
or
jl
mov
add
adc
fidiv
or
clc
jae
dec
jno
fcomp
add
js
jp
repnz
aas
mul
jne
lods
jle
adc
dec
jecxz
rcr
xchg
xchg
cs
adc
adc
ins
cmp
ss
xor
movs
fstp
push
int3
in
(bad)
movs
dec
xchg
test
inc
call
inc
loope
jo
jo
pop
sbb
stos
cmp
jns
std
jns
jecxz
sub
es
adc
cs
sahf
(bad)
fnstsw
(bad)
cmp
test
ins
sub
xchg
test
pop
cdq
div
das
xchg
mov
aam
jo
mov
dec
inc
scas
xchg
(bad)
sbb
or
mov
clc
mov
push
mov
add
loope
push
mov
loop
jmp
pop
je
loop
call
sub
and
mov
add
dec
call
pop
mov
mov
sub
movs
and
sub
call
popf
mov
push
mov
mov
in
mov
mov
mov
mov
mov
lds
jle
xor
cli
dec
mov
movs
cmps
clc
into
fwait
mov
das
lods
shl
push
fst
adc
fsubr
imul
jns
cmps
cmp
das
imul
pop
sub
lods
mov
mov
push
fucomp
fbld
outs
repz
loop
cwde
lahf
(bad)
retf
add
push
inc
neg
jae
and
out
mov
pop
jl
cmp
cli
sub
cld
sub
xchg
jne
sahf
ja
push
jae
pushf
pop
cs
cmp
test
out
js
ss
out
test
inc
sbb
scas
popa
inc
out
aaa
stos
jg
xchg
jno
dec
jge
jecxz
mov
dec
mov
fwait
cmp
xchg
jmp
stc
mov
js
cmp
out
rcr
clc
adc
pusha
mov
or
cmp
int
push
adc
cmp
or
call
pop
mov
jecxz
dec
push
add
loop
fstp
adc
xor
xchg
jl
add
pusha
xchg
cmp
dec
ja
push
add
xchg
jne
loope
inc
mov
fild
mov
jmp
into
mov
imul
jge
cmp
pop
push
xchg
sbb
rcr
jae
ss
ins
pusha
into
aad
pop
js
adc
xchg
repnz
inc
mov
int
mov
mov
test
sub
add
movs
sub
fisubr
and
add
call
push
mov
in
in
stos
cmp
xor
or
cld
out
loop
sbb
cmp
aad
sahf
outs
(bad)
shr
push
cmp
out
xor
iret
push
inc
aas
mov
push
scas
(bad)
out
pop
lods
adc
imul
xor
mov
pop
in
les
add
das
popa
bound
mov
sub
cmps
cmp
jae
mov
es
fldenv
pop
pop
adc
push
sbb
in
sbb
mov
dec
xor
xchg
xchg
das
fisubr
adc
aaa
xlat
sti
mov
dec
imul
xlat
enter
(bad)
and
in
ror
xchg
clc
jecxz
jo
sbb
cmp
cld
fs
data16
add
mov
add
scas
push
or
sbb
js
mov
dec
lahf
sbb
xor
jl
cmp
push
(bad)
sub
mov
frstor
not
movs
int3
popa
and
aam
mov
mov
jae
xchg
sar
mov
call
fsubr
(bad)
ins
jmp
xchg
sub
jmp
fdiv
inc
loopne
outs
mov
aad
imul
lods
fnsave
fdiv
loope
cmc
push
sbb
and
xchg
fist
jge
add
xchg
div
imul
add
xor
and
popa
pop
add
stos
sbb
push
pop
jmp
mov
aas
mov
out
adc
lock
adc
popf
int
add
jecxz
cmps
xor
add
add
inc
ret
mov
pop
mov
jo
dec
mov
out
lods
fsubrp
sub
mov
in
popa
add
adc
dec
jecxz
call
xor
xchg
mov
push
pop
and
add
fistp
inc
pop
xchg
sbb
adc
add
add
cmp
mov
repnz
icebp
in
mov
push
sti
loop
test
lds
sub
pop
dec
aaa
iret
push
xchg
(bad)
mov
out
test
inc
xor
arpl
in
aaa
push
in
cdq
iret
xor
mov
mov
neg
fwait
test
js
(bad)
sbb
xchg
bnd
xchg
pop
pop
add
out
retf
adc
inc
dec
leave
fs
adc
movs
xchg
sar
pop
push
imul
sbb
dec
aad
sbb
mov
inc
dec
in
inc
or
cmp
loopne
(bad)
adc
in
push
into
pop
not
repnz
out
xchg
sbb
jns
imul
xchg
hlt
aam
and
sti
iret
jno
mov
inc
ror
add
fcomp
xlat
pop
sub
loope
aam
popa
sub
fsub
call
sub
sub
movs
cmc
xor
js
out
test
mov
in
lock
(bad)
outs
fimul
mov
fst
sti
mov
xor
imul
mov
push
and
mov
data16
xchg
cmps
push
in
sub
test
dec
in
jl
cs
iret
mov
dec
xchg
inc
arpl
lahf
retf
mov
movs
sbb
daa
xor
jl
and
sub
and
mov
cld
pop
sbb
popa
inc
clc
aad
push
or
dec
in
jmp
pop
pusha
retf
out
sbb
adc
cmc
clc
inc
hlt
add
cld
cs
loopne
mov
xchg
das
rcl
ret
scas
jmp
sbb
dec
xor
imul
push
call
xchg
mov
ret
xor
pop
add
neg
cmps
aaa
fistp
movs
(bad)
cmp
shr
or
and
xor
add
mov
call
mov
in
cmps
loop
ret
and
popf
add
mov
not
push
je
scas
pushf
mov
fiadd
push
push
jl
sti
lock
xchg
push
shl
mov
jno
inc
add
lahf
xchg
xchg
and
cmp
push
shl
sub
fdiv
adc
adc
jg
les
jmp
movs
mov
pop
scas
xor
ds
ret
xchg
out
aam
pop
pop
into
shl
and
pop
inc
fild
adc
adc
xchg
cmp
pop
cmp
pop
and
iret
setne
cmp
loop
mov
ins
xor
sub
mov
xchg
(bad)
cmp
loop
daa
fwait
adc
xchg
mov
test
shl
je
int
aam
add
inc
mov
rep
fisubr
mov
gs
adc
cdq
test
or
imul
xchg
test
add
lock
cmp
aam
mov
call
call
gs
pushf
enter
(bad)
mov
xchg
retf
hlt
push
aad
and
add
repnz
add
out
sbb
xor
test
lods
leave
adc
xor
push
stos
inc
nop
inc
pop
popa
retf
sbb
int
sbb
neg
mov
or
pop
mov
pop
sbb
rol
jno
pop
add
(bad)
iret
aam
aaa
stos
pop
mov
sub
adc
sbb
and
mov
inc
and
xchg
shl
sbb
jg
or
sub
aam
pop
test
mov
(bad)
loopne
and
pop
sti
cmp
hlt
dec
xor
push
inc
add
pop
popa
push
add
push
shr
call
popf
jmp
push
sbb
sbb
aaa
aas
cld
fldcw
ss
fild
mov
mov
fiadd
iret
repz
add
das
aad
test
add
cmp
hlt
pop
repnz
xchg
jmp
std
ret
add
jno
cwde
jg
and
or
cmps
std
xlat
jl
xchg
popf
data16
lahf
pop
stos
xor
outs
mov
sbb
out
ret
std
bound
mov
out
add
pop
jo
call
push
std
aaa
mov
push
je
xor
enter
cpuid
aam
stos
xor
gs
jne
jp
sahf
xor
inc
in
push
xor
pop
sub
mov
aas
outs
push
lock
dec
and
mov
mov
xor
outs
cmp
xor
into
fs
sbb
int
jbe
mov
sub
xor
popa
mov
cli
push
clc
push
or
xor
lahf
mov
enter
dec
dec
sbb
je
dec
bound
sbb
or
cmp
and
hlt
jmp
cmps
call
xchg
xchg
add
dec
shl
(bad)
jl
push
sbb
sar
jns
pop
xor
and
jne
jl
pop
inc
push
ss
stos
push
pop
sar
pop
test
jmp
inc
popa
mov
jo
ja
mov
lods
mov
mov
xor
int3
inc
ficom
sbb
pop
or
jmp
aad
add
out
push
cmps
test
push
stos
pop
mov
mov
dec
out
retf
bound
inc
xor
das
cwde
movs
inc
cli
xor
pop
or
mov
mov
movs
xchg
cli
sbb
xchg
dec
dec
call
aaa
inc
ret
adc
stos
xor
mov
mov
lock
ins
adc
lahf
mov
jno
fs
and
repnz
repz
inc
retf
loope
push
out
push
fdivr
data16
sub
mov
push
xor
inc
js
in
in
mov
inc
and
fld
mov
lea
retf
clc
clc
adc
xchg
clc
and
out
jle
pop
mov
sbb
mov
scas
in
pop
cwde
sub
and
cmp
inc
sbb
mov
mov
inc
pusha
mov
fmul
adc
mov
sub
iret
sub
dec
sahf
test
xchg
sub
shl
sub
in
jns
push
repnz
sbb
(bad)
pop
xor
fild
inc
stc
(bad)
push
xchg
push
jbe
push
inc
mov
add
rcr
inc
xchg
push
lods
into
adc
sub
push
cmp
jnp
jae
mov
in
in
inc
xor
aas
out
test
dec
rol
cmp
jg
cmp
xchg
je
cmp
push
mov
mov
outs
jo
stos
and
out
call
test
and
pop
mov
adc
test
add
cdq
push
xlat
push
adc
loopne
cdq
sar
out
(bad)
shr
mov
ss
mov
mov
pop
sbb
hlt
push
cs
push
gs
xchg
fwait
mov
mov
mov
arpl
xor
push
mov
jmp
mov
xchg
int3
adc
(bad)
test
call
enter
sbb
and
into
cmps
dec
xchg
mov
mov
pop
dec
mov
xchg
inc
pop
adc
in
xor
dec
push
push
lea
add
pop
mov
hlt
ja
inc
cmp
dec
imul
and
inc
and
fnstcw
loope
jmp
xor
jp
jge
mov
(bad)
out
add
mov
sub
pop
inc
repnz
dec
bnd
int3
push
outs
leave
scas
cli
mov
push
cwde
pop
mov
fstp
jmp
divps
jl
cmc
add
mov
push
sub
imul
stc
and
scas
xchg
push
mov
fwait
jp
stos
mov
jno
ins
add
nop
fistp
inc
in
sti
retf
sbb
xor
xchg
(bad)
sub
jns
out
int
inc
std
adc
inc
mov
dec
and
dec
ror
xlat
enter
xchg
fld
jle
inc
pop
push
cmp
mov
jnp
cmp
xchg
pop
fild
jmp
iret
mov
dec
jmp
push
jns
add
jmp
cmp
movs
xor
cmp
dec
jae
in
push
and
mov
mov
xor
push
jecxz
lods
mov
iret
xchg
add
cwde
xchg
mov
lock
repnz
call
es
mov
stc
scas
pop
(bad)
xchg
add
dec
jo
popa
push
(bad)
mov
ficomp
or
ss
setno
pop
or
sbb
lea
sahf
pop
jge
adc
jge
xchg
pop
pop
xor
push
and
lds
ins
test
aaa
outs
aam
xchg
inc
xor
mov
cmp
in
paddq
int
cdq
jecxz
add
popf
sbb
sub
movs
sbb
mov
imul
pop
fld
jmp
retf
test
aad
pop
repz
nop
mov
cmc
and
cmc
push
les
xchg
mov
in
mov
xchg
cwde
jns
daa
mov
dec
pop
cwde
xor
aam
nop
aad
in
lock
fisttp
adc
push
mov
repnz
add
aaa
inc
xchg
xchg
push
cli
movs
stos
gs
mul
jb
inc
sub
cwde
es
sub
js
cwde
fiadd
dec
addr16
xchg
rcr
jle
je
fistp
in
xor
add
int3
movs
ds
pop
aad
hlt
add
sub
mov
cmp
sub
adc
mov
mov
(bad)
stos
lahf
(bad)
imul
xor
in
adc
inc
nop
movs
pop
sbb
in
add
lods
mov
push
test
in
hlt
stos
pop
(bad)
and
pop
cmps
fwait
(bad)
das
jo
sbb
fdiv
loop
add
add
outs
cli
adc
sbb
sbb
push
xchg
mov
fs
call
pop
xchg
loop
(bad)
fbld
pop
pop
lods
jmp
sahf
push
sar
nop
push
sbb
and
mov
scas
aaa
popf
push
(bad)
cmp
(bad)
nop
(bad)
xchg
nop
dec
push
sti
stc
or
in
push
mov
push
cmp
test
mov
sti
adc
jbe
adc
mov
enter
jp
xchg
push
loopne
repz
push
outs
enter
sub
imul
outs
cld
stos
add
or
xchg
int3
bound
adc
and
arpl
(bad)
mov
cmp
xchg
xchg
dec
xchg
(bad)
scas
mov
or
lds
mov
mul
icebp
test
mov
outs
xchg
movs
loop
outs
fimul
scas
leave
xor
jae
xor
cwde
or
out
sbb
sub
daa
fsubr
jge
stos
mov
loopne
pop
aas
gs
sbb
xor
gs
add
xchg
dec
mov
shr
scas
or
mov
inc
shr
(bad)
nop
dec
dec
das
inc
ret
or
(bad)
aad
add
push
or
int3
ja
movs
pop
outs
sbb
mov
das
lock
xchg
cmp
cmp
jge
push
cmp
shl
dec
pushf
adc
movs
mov
pop
mov
lods
icebp
pop
add
jmp
add
inc
jbe
adc
fistp
int3
cmp
sar
inc
pop
dec
xchg
push
jge
or
mov
idiv
ds
pop
adc
cld
scas
stos
or
push
fiadd
aad
push
in
mov
(bad)
jl
mov
ret
out
jae
adc
xchg
icebp
jmp
bound
dec
cwde
or
fs
js
cs
jp
push
jl
mov
int3
cmps
mov
call
test
xlat
pop
fsubr
adc
add
(bad)
hlt
sub
inc
aaa
push
bound
bnd
dec
xchg
add
hlt
fldcw
aam
sbb
stos
in
push
xor
out
jge
pushf
jo
movs
push
leave
imul
mov
mov
jne
(bad)
mov
sbb
xor
fimul
(bad)
and
adc
fadd
clc
ds
test
fisub
sub
mov
add
lds
je
xchg
jmp
mov
adc
push
mov
push
inc
gs
shr
retf
xchg
mov
adc
xchg
inc
push
ds
stc
pop
lds
xchg
cmp
inc
mov
and
mov
adc
xchg
pop
rep
ficomp
mov
addr16
movs
test
xchg
push
loop
and
out
dec
push
cwde
daa
pop
scas
mov
stos
movs
mov
xchg
ins
cmp
dec
leave
ins
rcl
jne
fincstp
jl
inc
ins
sbb
push
adc
push
stc
mov
stos
ds
jg
(bad)
loop
es
sbb
pop
dec
vorps
test
pop
das
xor
pop
add
std
adc
xchg
jp
mov
sub
out
in
jp
xchg
leave
in
test
sti
es
jmp
stos
shl
dec
out
lods
xchg
push
mov
cmp
sbb
mov
(bad)
xlat
adc
or
pop
pop
repz
fstp
mov
or
xor
fwait
inc
mov
aam
mov
(bad)
jb
cmc
mov
sbb
cmp
dec
adc
xchg
shl
add
in
and
adc
pmaddwd
(bad)
(bad)
mov
push
lahf
sub
lds
dec
aaa
adc
or
mov
push
lock
mov
mov
mov
sbb
retf
dec
jmp
pop
imul
mov
lods
push
dec
sbb
xor
(bad)
mov
xor
or
movs
test
mov
clc
fiadd
test
fild
sub
cwde
loopne
cld
stos
fidiv
scas
lds
xor
scas
popf
inc
or
push
mov
and
sahf
pop
lods
jg
jecxz
neg
mov
or
popa
int3
jnp
dec
lsl
jns
sbb
push
data16
mov
inc
mov
retf
inc
xchg
lahf
int3
sub
hlt
icebp
gs
and
inc
and
push
fld
dec
call
mov
add
scas
retf
fstp
cmc
bound
or
aam
xlat
xchg
pop
and
mov
into
fcom
int3
push
jo
les
fstp
sbb
cli
and
addr16
sti
mov
cmp
mov
or
lock
mov
call
popf
xor
jecxz
loop
(bad)
xchg
inc
xchg
push
push
jge
mov
push
xchg
xchg
jg
fldenv
lahf
loope
out
dec
inc
cmps
dec
pop
ror
repz
xchg
test
fmul
rcl
movs
cmps
outs
int3
mov
pop
mov
fnstsw
int3
pop
pop
lahf
out
cdq
xchg
sar
mov
in
fimul
mov
dec
pusha
sar
fcom
inc
jmp
cdq
lods
xchg
clc
mov
sbb
cpuid
push
repnz
push
int3
ret
stos
popf
xor
push
out
movs
das
jmp
std
adc
call
add
movs
cmp
cli
sub
test
leave
scas
out
fcom
cmp
adc
add
pusha
push
push
dec
hlt
adc
sub
ds
cmps
cld
fistp
jmp
jae
in
push
xor
pop
and
movs
xor
push
pop
jno
lds
jge
inc
test
inc
iret
and
push
icebp
pshufw
jecxz
inc
sbb
mov
and
pusha
add
jae
sub
mov
call
scas
lods
std
(bad)
push
outs
dec
cmp
not
pusha
jmp
cmp
pop
fldcw
retf
jb
mov
cld
jle
dec
sub
leave
jb
add
(bad)
repnz
adc
scas
jge
xor
popa
pop
pop
mov
nop
push
les
mov
jno
add
pop
das
cld
fcom
inc
int3
ins
mov
or
in
jge
add
mov
or
sub
loopne
push
mov
stc
cs
add
or
(bad)
mov
enter
arpl
dec
aam
jnp
imul
cli
push
fidivr
into
js
add
push
loope
xchg
jbe
pop
fistp
sbb
mov
sub
nop
push
call
xlat
into
mov
ret
mov
cwde
inc
ds
or
pop
or
push
stc
dec
xchg
jge
inc
ins
mov
and
outs
push
jne
mov
cdq
push
mov
pop
cmps
lods
je
in
add
xchg
xor
mov
mov
shl
add
int
fmulp
sbb
jbe
fwait
dec
pop
fs
sub
and
daa
test
cmp
pop
mov
mov
mov
push
xchg
or
cld
xchg
inc
loope
jno
mov
test
rdpmc
les
retf
sahf
repnz
mov
xor
int
push
jmp
xchg
test
pop
icebp
xchg
mov
mov
cmps
xchg
cs
mov
(bad)
add
mov
inc
in
cmp
fimul
call
(bad)
lods
xor
mov
popa
fidivr
pop
cmps
cmp
rcr
dec
das
shl
jg
in
inc
add
mov
adc
dec
pop
sub
jl
xor
xchg
ins
fsub
ret
arpl
(bad)
loopne
jg
mov
retf
rcr
cmp
pop
jle
clc
xor
sub
mov
xchg
or
mov
push
test
ja
dec
mov
mov
bound
mov
jns
or
bound
loop
fcom
inc
popa
add
mov
cld
cmp
mov
ror
xor
and
icebp
aam
xor
dec
test
jmp
and
pop
test
add
jmp
sub
add
inc
ds
jmp
mov
lods
sbb
ret
mov
dec
pop
inc
iret
mov
mov
rol
ins
jl
xchg
(bad)
fstp
push
cmp
imul
push
(bad)
std
mov
mov
jg
jmp
xor
(bad)
gs
and
add
jb
jle
push
push
cld
pop
icebp
sti
out
repz
adc
fwait
repz
mov
mov
scas
xor
add
ss
pusha
push
ret
fsubp
and
cs
xchg
(bad)
xchg
jns
and
or
dec
push
pusha
adc
xchg
enter
inc
(bad)
jne
rcr
or
sbb
mov
daa
outs
(bad)
push
jecxz
mov
dec
pop
retf
xchg
xchg
out
or
cmp
lods
cmp
bound
jmp
ds
int
add
lahf
jbe
mov
lds
jmp
mov
aam
iret
stos
pop
arpl
mov
int3
loope
call
xchg
cmps
and
nop
xor
push
mov
sub
test
jns
lods
(bad)
xchg
jbe
jecxz
inc
xchg
js
call
sbb
stos
or
mov
mov
adc
or
cmp
aas
jecxz
popf
arpl
add
and
adc
cwde
loope
jo
adc
jmp
pop
jae
or
cmc
adc
nop
pop
sbb
scas
pop
pop
sub
pop
mov
fidivr
sti
into
loopne
stc
loopne
loop
aam
popf
push
out
std
cs
lahf
push
fldenv
fstp
mov
inc
cmp
repnz
and
jecxz
shr
push
push
gs
pop
bound
jae
ret
hlt
sbb
sub
fist
(bad)
jle
push
mov
cmp
cmps
push
jbe
jns
outs
call
sub
xchg
and
out
inc
arpl
pop
xchg
fisttp
out
sbb
push
ret
jmp
mov
lods
fwait
dec
add
in
push
ds
out
sub
movs
outs
xchg
mov
xor
test
push
jae
rol
mov
(bad)
xchg
sbb
pop
xlat
or
imul
and
push
or
mov
mov
sbb
xlat
iret
mov
sbb
add
sub
cmp
nop
xchg
mov
add
fs
or
(bad)
xchg
dec
xor
xor
in
(bad)
and
lahf
ja
mov
popf
mov
pop
and
add
pop
sbb
pop
pop
xchg
and
xchg
push
mov
test
out
movs
sbb
fsub
loop
repnz
cdq
out
leave
mov
lea
popf
cmp
ret
inc
sbb
sub
pop
sub
xor
xor
repnz
enter
mov
repnz
push
ret
loope
in
(bad)
dec
dec
push
jns
test
push
clc
ret
and
dec
cmc
add
call
outs
push
pop
repz
ss
dec
mov
pop
shl
push
adc
ins
push
push
icebp
jns
lds
ficom
outs
jp
fisttp
dec
dec
jecxz
retf
mov
xchg
int
mov
sar
nop
push
mov
sbb
rcr
jle
cli
xchg
mov
mov
scas
sub
addr16
loop
jne
jl
lds
retf
fs
sbb
pop
xchg
call
sub
adc
enter
lds
int
lods
cmp
push
xchg
mov
ret
(bad)
out
adc
jmp
sbb
and
inc
out
loopne
cmp
addr16
out
cmp
cmp
call
jns
adc
mov
add
pop
jp
push
xor
std
scas
xchg
test
test
dec
push
test
xchg
test
cld
ret
aas
test
or
jecxz
(bad)
cdq
cwde
stos
inc
cmp
dec
cmps
or
fst
test
dec
sbb
leave
pop
cmp
retf
aam
or
inc
cmp
mov
out
sbb
lahf
mov
test
and
(bad)
or
addr16
popf
push
shr
cmps
push
pop
test
fdivr
std
inc
into
(bad)
mov
aam
leave
test
jmp
(bad)
test
xor
pop
mov
inc
mov
ja
jl
fsub
pop
cmp
imul
inc
sbb
xor
add
cdq
ret
lahf
mov
cdq
sub
jg
sbb
mov
imul
cmp
outs
idiv
and
jbe
ficom
jmp
push
mov
shl
jp
mov
gs
push
inc
je
ja
(bad)
dec
lock
sbb
aaa
mul
xor
lds
fsubr
int3
dec
jb
(bad)
mov
push
add
movs
jge
inc
cmp
mov
rcl
and
das
fucomi
(bad)
out
test
mov
cwde
xchg
jns
imul
sub
loop
test
stc
je
ja
dec
dec
mov
jb
dec
jmp
gs
cld
stc
jbe
adc
hlt
aad
imul
dec
or
push
aas
or
pop
arpl
aad
push
or
xor
pop
xor
or
popa
retf
dec
dec
pop
adc
std
mov
lods
pop
dec
push
mov
int
jo
jo
shr
jmp
mov
mov
mov
dec
ins
repnz
data16
pop
push
add
cmps
fbstp
aam
jns
mov
(bad)
push
and
sub
or
aam
fstp
popf
push
add
pop
cli
outs
or
adc
mov
cmps
mov
add
shr
loopne
xlat
xor
push
mov
xor
out
cdq
cwde
repnz
sub
out
jecxz
or
imul
jno
mov
push
(bad)
mov
push
xchg
push
mov
push
call
clc
add
js
out
inc
inc
out
pop
mov
nop
and
adc
jb
push
jp
outs
add
or
out
fcom
icebp
stc
dec
mov
cwde
lock
rcl
push
nop
pop
dec
cmps
lock
ins
enter
xor
ror
popf
mov
xchg
and
lea
out
clc
pusha
loope
in
sub
lds
enter
movs
sbb
xor
cmc
sub
rcr
imul
xor
xor
out
mov
ins
in
dec
pop
jmp
dec
push
mov
cs
loopne
pop
mov
shl
sub
je
aam
cmp
jge
loop
(bad)
enter
(bad)
iret
mov
in
pop
jmp
cmp
int
adc
movs
jb
shl
sbb
(bad)
push
mov
aaa
in
or
icebp
retf
mov
push
and
or
lds
pop
mov
pop
cmp
push
cdq
lock
xchg
mov
jo
pop
(bad)
mov
mov
sub
mov
(bad)
jecxz
imul
movs
retf
mov
scas
lock
mov
(bad)
sahf
in
dec
(bad)
push
jnp
mov
jmp
add
leave
repz
push
inc
rcl
push
test
lea
retf
sti
xor
push
cmps
add
lods
js
mov
push
mov
sub
mov
cmp
aad
jno
retf
xchg
mov
shr
mov
imul
sbb
push
dec
sar
aam
(bad)
xor
push
out
fstp
jl
dec
test
lods
fdivr
inc
ss
(bad)
dec
adc
push
jg
icebp
pop
sar
call
imul
inc
in
mov
nop
lods
xor
ds
mov
pushf
jo
xchg
sbb
ret
pusha
xor
jne
call
adc
xor
imul
sbb
xor
mov
push
xor
jge
adc
sahf
lods
lea
jmp
sbb
ret
xor
aaa
xor
popa
ins
inc
repnz
mov
out
jge
sbb
add
or
cmp
pop
xchg
rcr
jnp
dec
shr
mov
or
adc
mov
outs
and
or
pop
push
cmp
dec
sbb
add
cmps
rcl
pop
mov
push
test
shr
loop
xor
in
test
jns
cmps
mul
jno
jle
ja
ins
jle
nop
dec
adc
fadd
push
push
mov
mov
aas
in
mov
adc
(bad)
cmps
test
add
test
int
dec
add
nop
clc
cmc
jmp
add
mov
and
cli
mov
fiadd
arpl
add
mov
jg
fcomi
jle
repz
xchg
pop
dec
dec
or
sbb
mov
cwde
mov
adc
pop
xchg
fs
mov
jmp
scas
mov
aas
jle
imul
(bad)
cmp
mov
mov
(bad)
cmc
jno
cli
xor
jmp
loop
mov
mov
xor
rol
outs
and
sbb
std
adc
cmps
(bad)
imul
pop
jge
add
push
jns
xor
mov
mov
mov
sub
dec
xor
xor
adc
pop
or
pop
das
push
or
rol
stos
mov
retf
xor
inc
popa
inc
xchg
or
mov
mov
addr16
jmp
inc
nop
adc
push
sub
mov
mov
dec
retf
test
and
dec
pop
or
(bad)
fld
inc
outs
and
rcl
fstp
mov
ficomp
push
imul
jecxz
fmul
out
loop
jnp
mov
daa
mov
xchg
jl
icebp
pop
xchg
push
xchg
cmp
rcr
imul
sbb
mov
aas
inc
push
in
xor
sub
iret
mov
mov
cli
dec
adc
in
sbb
xor
test
mov
xchg
call
dec
and
sub
or
(bad)
call
imul
js
out
jp
mov
push
je
leave
sbb
push
push
pop
loop
jge
repz
mov
mov
sub
inc
sbb
pop
sub
ret
dec
cmp
mov
sti
pause
push
jbe
je
dec
adc
mov
jle
shr
and
mov
adc
jl
idiv
add
sbb
push
inc
mov
cld
imul
pop
call
mov
addr16
enter
call
sub
dec
lock
mov
or
cs
enter
popa
sub
dec
aad
mov
sbb
fmul
mov
sbb
jp
sub
leave
add
shl
dec
mov
fs
fwait
cld
das
jne
add
fs
pop
jg
(bad)
je
arpl
sub
xchg
sbb
call
(bad)
cld
jge
dec
pop
je
ss
inc
jg
pop
mov
pop
inc
xor
adc
inc
in
popf
aas
cmps
popf
xchg
test
shl
shl
(bad)
shl
retfw
in
add
push
scas
fdivp
pop
cli
into
(bad)
push
mov
adc
push
xor
(bad)
xchg
loope
xchg
cmp
call
sub
xor
jb
dec
in
pop
xor
fidivr
or
mov
iret
das
mov
add
add
pop
out
sub
inc
scas
imul
jp
dec
aaa
or
xor
lahf
out
aaa
ret
in
int
mov
arpl
and
pop
jns
push
dec
jo
xchg
inc
mov
sub
inc
cmp
add
xchg
ror
sar
mov
aad
mov
mov
mov
inc
or
jecxz
lahf
cmp
or
sbb
(bad)
cmp
adc
jge
dec
mov
xlat
push
daa
imul
popa
jle
test
adc
xor
push
xchg
or
push
imul
rol
(bad)
pop
pop
ret
enter
adc
fbstp
fsubrp
icebp
out
sub
fwait
ins
sahf
jecxz
nop
test
add
xchg
mov
xchg
shl
jbe
(bad)
and
ins
test
xor
lahf
xchg
ins
(bad)
xor
xchg
pushf
(bad)
dec
daa
fld
bound
xchg
push
in
mov
xchg
aam
cmps
sbb
adc
cmp
stc
cmp
dec
xchg
mul
jmp
iret
gs
fwait
imul
cs
nop
mov
in
inc
and
inc
push
ins
pop
jnp
repz
lods
dec
pop
aam
shl
int3
js
scas
xlat
les
xchg
stos
lods
jmp
push
cwde
jne
mov
inc
das
sub
loope
jp
imul
pop
icebp
xchg
xor
push
test
cs
jg
fs
xchg
xlat
or
mov
sahf
sub
mov
repz
mov
jmp
dec
cmp
add
fsub
cdq
push
clc
cdq
and
dec
bound
jnp
sbb
data16
(bad)
in
push
stc
push
mov
cmp
push
pop
out
adc
jb
mov
xlat
js
int
sub
jp
inc
jbe
jl
int
xor
sub
mov
mov
lea
(bad)
adc
ret
in
or
mov
sbb
ds
sar
mov
aad
xor
ror
cld
(bad)
shl
or
popa
dec
fistp
sub
test
push
inc
sbb
repz
in
jmp
add
mov
dec
sar
fistp
ins
rcr
cmp
xor
retf
jg
(bad)
adc
(bad)
fisttp
mov
push
jae
std
mov
aas
mov
cmp
(bad)
je
in
pop
int
in
or
clc
(bad)
push
push
ret
mov
mov
call
in
fist
pusha
and
addr16
jns
sub
xor
icebp
movs
icebp
jns
call
or
mov
and
sahf
sub
mov
mov
retf
add
sbb
dec
sub
lods
add
add
js
cmps
ins
push
cmps
pusha
pop
pop
rcr
je
or
mov
or
hlt
arpl
(bad)
movs
xor
or
xchg
push
jp
cmc
push
or
addr16
jge
mov
xor
bound
ins
jo
scas
or
mov
cmp
or
into
das
ja
popf
xchg
push
cmp
add
pushf
pop
call
push
cwde
mov
cmps
xchg
push
inc
cmps
cmc
icebp
cmp
out
retf
mov
push
cmc
mov
jae
loop
lea
xchg
add
(bad)
and
inc
xchg
mov
push
sbb
pop
aam
pop
inc
xor
pushf
push
into
sti
repz
mov
sub
ret
cmp
leave
inc
adc
stos
cmp
aam
daa
in
push
daa
std
mov
fcomip
sbb
push
sub
(bad)
stos
pcmpgtd
mov
jl
int3
ins
mov
sub
mov
test
dec
xchg
call
and
mov
je
cli
jnp
cmps
lods
adc
adc
loopne
mul
xor
dec
fs
add
pop
inc
add
(bad)
cmp
retf
rcl
xlat
and
stos
stc
popa
(bad)
out
jp
xor
mul
mov
into
pop
loopne
push
add
test
cdq
mov
test
in
add
cmp
cwde
cmp
push
pusha
dec
sbb
int3
into
pop
ror
jnp
movs
aam
add
jae
call
inc
pop
xlat
push
mov
sbb
imul
loope
js
sbb
push
jecxz
gs
or
sbb
push
div
ins
inc
mov
xchg
jmp
jecxz
push
jnp
sub
stos
dec
les
int
xor
je
xor
pop
iret
fdivr
hlt
xchg
sahf
int3
lea
shr
fistp
dec
add
push
push
rcl
and
jmp
addr16
mov
cs
cmp
add
push
cwde
int
cmps
cmp
jg
inc
xchg
jb
jno
push
daa
leave
fimul
push
movs
xor
adc
mov
ins
pop
int
dec
daa
ret
loop
ja
mov
sub
push
sar
scas
enter
mov
mov
xor
scas
scas
in
mov
xchg
repz
push
push
cmp
ins
sub
inc
xlat
inc
xchg
lock
fsub
xor
stos
imul
sbb
into
push
fs
adc
aaa
cmp
xor
sub
sahf
(bad)
and
jno
jmp
adc
rol
or
stos
pop
mov
loop
fs
fdivr
repnz
push
xor
and
adc
mov
mov
popa
push
xor
loop
xchg
adc
sahf
mov
pop
ins
aas
dec
fwait
call
imul
push
add
mov
jmp
dec
int3
aam
cmp
mov
das
mov
loope
adc
jo
push
cli
jp
pop
or
cli
int
push
sub
sbb
cmp
retf
hlt
and
and
push
mov
mov
pop
fstp
(bad)
mov
int
ficomp
retf
xor
jo
mov
mov
imul
aas
jne
nop
pop
pop
sbb
daa
popf
add
jp
push
int3
ja
dec
mov
xor
mov
xor
mov
js
loopne
ret
xor
inc
pop
mov
cmps
xchg
mov
mov
xor
(bad)
mov
pop
mov
xor
and
test
jecxz
pop
mov
sbb
cmp
(bad)
jns
mov
xchg
add
in
add
jno
inc
ret
mov
mov
push
jae
sbb
and
test
test
cmp
lods
inc
fmul
or
fist
or
sbb
cmp
repnz
mov
test
cmp
fidiv
ja
aad
xor
shl
sbb
pop
ja
(bad)
jae
jnp
inc
xchg
sbb
jno
stos
jp
push
imul
mov
xchg
aas
gs
test
mov
mov
and
jl
es
in
sub
xor
push
pop
cs
or
(bad)
sbb
and
jb
jmp
outs
mov
out
(bad)
call
push
retf
enter
fs
sub
jecxz
ds
push
mov
aaa
jg
dec
stos
sub
dec
out
inc
jne
dec
sbb
inc
out
and
inc
cdq
add
xchg
mov
xchg
xor
iret
sub
mov
xchg
into
sbb
bound
mov
inc
push
dec
jb
movs
cwde
push
pop
cmps
add
sbb
adc
ja
inc
xchg
aaa
sbb
mov
int
mov
xchg
pop
sbb
lods
jg
gs
mov
or
jg
scas
jge
cmc
or
and
jb
inc
(bad)
inc
xchg
fisttp
push
fstp
mov
and
dec
jmp
push
sub
stos
mov
cmc
sahf
iret
cmps
stos
cdq
dec
mov
out
push
add
push
hlt
xchg
ret
adc
push
mov
mov
mov
test
inc
cmp
mov
das
out
jecxz
cmovs
arpl
ret
popa
sub
retf
and
popf
es
fwait
xchg
cmp
sub
xor
icebp
mov
mov
dec
gs
add
imul
dec
mov
mov
cmp
fstp
call
(bad)
call
sub
jo
inc
in
xlat
fcmovnu
jbe
out
adc
lahf
jae
or
lds
out
fsubr
fmul
leave
mov
scas
scas
movs
push
jae
cmp
je
push
sbb
cs
cmp
dec
test
clc
cwde
shl
mov
in
push
shl
xchg
int3
mov
test
and
fidivr
sbb
movs
(bad)
js
dec
popf
cmp
aad
call
lock
push
mov
int3
mov
(bad)
jmp
ins
adc
inc
push
stos
ss
loopne
(bad)
xchg
add
das
mul
jbe
aaa
xor
pop
sbb
bound
cmps
mov
jecxz
ror
or
push
adc
jecxz
push
cmp
push
mov
push
shl
mov
or
arpl
jo
retf
icebp
mov
inc
mov
jg
addr16
jb
push
lods
test
dec
ins
shl
jmp
inc
cmc
(bad)
clc
aam
xchg
enter
mov
inc
ins
jmp
test
jb
fnsave
add
mov
or
mov
shl
lock
ja
and
out
pop
pop
mov
adc
nop
arpl
mov
cs
fidivr
mov
adc
cmp
scas
clc
popa
dec
jno
dec
jbe
push
rol
jl
ret
pop
pop
pop
add
mov
dec
xchg
ret
sub
push
push
sub
mov
or
daa
test
div
ins
lahf
retf
cdq
and
out
sbb
fs
xchg
inc
add
push
dec
add
arpl
sbb
je
inc
xchg
pop
push
pop
sub
or
adc
and
or
into
push
cld
sti
push
mov
cdq
or
inc
xor
push
jnp
add
loopne
sbb
xor
inc
push
and
out
mov
inc
mov
inc
mov
cmp
dec
sub
and
popf
fsub
aad
scas
rol
or
ror
lea
sub
and
in
dec
add
jge
dec
and
aas
je
push
mov
shl
outs
sbb
pop
push
pop
hlt
pusha
(bad)
mov
icebp
add
mov
fstp
jmp
shr
popa
pop
int3
popf
jmp
pop
sbb
dec
cmp
dec
sub
mov
enter
jbe
movs
jl
mov
push
jns
and
(bad)
hlt
push
int
jp
dec
inc
in
xor
lahf
sbb
jo
clc
ret
sub
movs
out
add
inc
retf
popa
mov
test
aam
mov
stc
jecxz
mov
mov
inc
jg
outs
sbb
in
xchg
movs
add
scas
sbb
and
stos
call
into
sbb
les
gs
cli
outs
retf
test
int
das
push
shl
out
fist
push
mov
mov
hlt
mov
into
fidiv
cmp
dec
cld
mov
jecxz
mov
std
fmul
cmps
rol
je
scas
mov
aad
mov
jecxz
or
std
adc
jl
es
sbb
into
sub
test
ins
sbb
pop
pop
fcom
or
mov
mov
mov
and
add
not
mov
mov
dec
dec
and
iret
adc
fcomp
xchg
mov
outs
dec
ins
mov
xor
mov
or
call
xchg
shl
hlt
fld
xchg
mov
jmp
in
(bad)
(bad)
shrd
cld
jbe
dec
ins
push
in
cmp
popa
ja
mov
pop
das
and
push
xchg
mov
in
(bad)
or
enter
dec
ss
pop
add
sub
test
mov
jmp
mov
xchg
push
jnp
jecxz
add
mov
mov
jge
adc
cmp
sbb
jb
add
xchg
icebp
mov
inc
ficomp
inc
inc
popf
inc
inc
cs
lods
inc
jp
hlt
test
push
retf
mov
out
and
idiv
leave
ins
mov
(bad)
sub
les
mov
jmp
inc
ja
adc
inc
sbb
push
shr
mov
mov
sub
sahf
mov
jae
arpl
(bad)
cs
(bad)
outs
jbe
mov
das
pop
cmp
cmps
outs
adc
aam
repnz
icebp
push
leave
imul
fucomip
and
ins
push
cmp
int3
fdivr
push
sbb
push
fsubr
cdq
cdq
push
ins
jo
sbb
out
sub
fcmovb
mov
cmc
mov
pop
xlat
(bad)
xchg
mov
add
inc
retf
cmps
dec
jo
call
adc
xchg
push
xor
pop
push
jnp
jl
imul
or
sbb
sub
push
cmp
xor
jp
xor
sti
cmps
cld
xchg
mov
retf
sbb
addr16
jp
int3
xchg
push
(bad)
and
sbb
lods
xchg
cmp
mov
pop
or
pop
jl
into
push
enter
pop
jns
out
test
xor
xchg
fwait
lods
movs
fisubr
out
jno
(bad)
add
aas
jl
fld
data16
or
aaa
push
push
(bad)
sbb
(bad)
fwait
out
pop
and
or
mov
dec
push
xchg
sbb
mov
icebp
inc
(bad)
(bad)
ins
div
sub
popa
add
mov
and
(bad)
retf
ss
jnp
mov
aas
dec
out
gs
cld
adc
sbb
dec
fs
mov
ret
jnp
sub
fldcw
add
jae
jno
cld
push
movs
ret
sbb
xchg
mov
call
mov
dec
and
repnz
(bad)
xchg
xchg
pop
jnp
inc
sti
mov
loope
in
fisttp
dec
cld
std
or
arpl
fdivr
pop
pusha
loopne
out
addr16
cld
adc
cmc
push
sub
outs
mov
cmps
fsubr
imul
push
dec
(bad)
pushf
movs
fdivrp
inc
adc
movs
xchg
cmp
add
and
imul
sar
dec
add
fisttp
in
mov
retf
movs
mov
imul
shl
aas
push
pop
push
xor
or
sub
or
out
mov
cmp
jge
outs
(bad)
push
mov
and
lods
es
pop
pusha
sbb
loopne
sub
cmp
jno
test
(bad)
jb
inc
in
fsqrt
ret
dec
sbb
je
adc
aaa
and
dec
adc
mov
cmp
dec
retf
push
int
or
xor
or
(bad)
dec
xchg
(bad)
loop
lock
ss
mov
or
jmp
leave
ins
ror
mov
jno
add
fldenv
mov
adc
dec
jo
xchg
fisttp
and
mov
jmp
xchg
inc
pop
int3
sub
pop
lock
mov
frstor
mov
push
js
loop
cld
jbe
xor
sbb
retf
or
dec
lds
xor
push
mov
sub
xor
jle
dec
jmp
xchg
mov
call
mov
in
shl
std
cdq
bound
daa
jns
cli
xlat
stos
call
stc
jns
js
sub
dec
mov
cmp
sub
daa
adc
popa
loope
pop
gs
dec
dec
inc
xchg
xor
mov
inc
mov
mov
xor
cmps
imul
or
sbb
dec
jg
out
or
clc
sbb
rol
sbb
push
lock
add
dec
ret
rcr
ins
push
les
push
sub
ret
push
sub
sub
les
sub
lods
xchg
call
lods
fwait
pop
xor
ja
adc
fbld
push
mov
in
inc
jno
jmp
push
cld
adc
(bad)
cmp
pop
inc
push
cmp
sbb
mov
dec
pop
cmc
inc
fbstp
sub
push
pop
xor
inc
jg
mov
lods
fst
dec
xor
xor
pop
je
jmp
or
jb
mov
(bad)
rol
call
shr
fldenv
push
es
jp
cmp
add
push
jne
mov
(bad)
cs
xchg
loope
cmp
push
repz
les
loope
add
xchg
cdq
enter
dec
dec
or
push
adc
lahf
call
fisttp
mov
push
xor
mov
loopne
adc
popa
mov
in
in
mov
or
and
stos
repz
adc
sbb
bnd
mov
(bad)
and
je
mov
inc
gs
addr16
sub
push
fistp
loopne
jg
sub
dec
jno
push
pop
inc
jnp
cmp
not
add
pop
js
xor
mov
(bad)
sbb
dec
jmp
or
test
jmp
das
push
jle
ins
mov
add
inc
mov
mov
and
mov
dec
gs
pop
cmp
aas
mov
push
(bad)
call
rol
fadd
aas
fisttp
mov
jle
ja
(bad)
retf
outs
fstp
das
mov
sub
dec
aaa
das
mov
add
sahf
loope
dec
mov
xchg
mov
cmp
cmps
dec
xor
inc
(bad)
jns
xchg
or
or
pushf
mov
jl
jl
xchg
jne
fcmovu
cdq
sbb
jo
loope
test
add
enter
mov
clc
movzx
jp
or
push
out
pop
(bad)
ins
xchg
xchg
cmc
(bad)
push
xchg
jb
arpl
stc
sbb
cmps
add
inc
cmp
js
out
imul
and
clc
daa
inc
test
inc
add
xor
leave
push
pop
out
cld
in
mov
mov
std
mov
shl
sbb
sahf
and
pop
cmc
std
aaa
test
mov
xchg
add
(bad)
adc
inc
out
out
mov
adc
retf
push
in
call
scas
daa
in
and
sbb
or
push
std
dec
fistp
scas
xor
enter
imul
stos
push
or
pop
sub
dec
outs
pop
add
jb
adc
lods
gs
stc
iret
pshufw
cmp
arpl
jmp
and
(bad)
fs
out
pop
daa
mov
imul
push
pop
or
test
pop
mov
std
ins
pop
data16
adc
pusha
or
sub
shl
push
lods
cmps
(bad)
fcmovnbe
and
cmp
aas
sub
enter
stos
jmp
and
inc
push
loopne
xchg
scas
in
adc
fimul
cld
jp
dec
cmc
dec
call
pop
mov
shl
xor
in
pop
cmp
or
and
pop
das
stc
pop
lahf
stc
add
enter
leave
pop
dec
dec
cmp
jl
jmp
sub
push
ja
ret
adc
pop
mov
stos
mov
daa
rcr
call
add
cmp
or
in
sub
push
sbb
fist
fdivp
mov
mov
stos
ret
cmp
js
mov
shl
cmp
stos
adc
xlat
mov
daa
push
hlt
popa
test
daa
add
clc
(bad)
sbb
jmp
jnp
cmps
jbe
push
daa
cmp
fs
into
cmc
jnp
push
push
mov
cwde
xor
es
shl
inc
adc
mov
(bad)
push
cmp
pop
je
jns
dec
inc
sti
shl
fs
lea
or
jne
fwait
jl
pop
mov
cmp
lock
mov
fdivr
scas
inc
cwde
jne
push
jge
and
push
jnp
loop
jmp
ret
rcl
and
xor
into
sub
inc
je
(bad)
jge
in
cs
mov
jge
data16
inc
shl
(bad)
les
push
stos
and
sub
test
pop
loope
lea
iret
out
and
and
xor
mov
cmp
jle
sub
mov
mov
cld
jbe
stc
pop
or
enter
lods
mov
cs
xchg
inc
(bad)
cmps
hlt
sbb
push
fcom
es
mov
sti
jp
mov
ins
push
sbb
sub
push
mov
or
js
mov
push
ja
(bad)
jl
loop
or
sub
and
(bad)
outs
sub
cdq
jns
or
or
xor
bound
jmp
and
daa
in
cmp
fadd
sbb
or
mov
add
adc
mov
mov
cmp
or
pop
sar
dec
dec
das
mov
(bad)
xchg
sar
sbb
cli
pop
mov
pop
outs
cdq
(bad)
inc
out
out
cmps
or
outs
mov
stos
and
sub
and
add
ins
scas
adc
cmp
jmp
dec
(bad)
imul
sub
and
xchg
je
aad
add
sub
pop
ss
xchg
shr
sbb
ret
push
hlt
(bad)
not
sbb
jp
mov
sub
(bad)
movsx
test
std
xor
rcr
pop
(bad)
lods
mov
xlat
push
cmp
rcl
cmp
sbb
push
das
ret
sub
xchg
add
cmps
in
mov
cdq
cs
cld
das
std
jmp
push
scas
jg
mov
(bad)
push
inc
add
lods
into
pop
inc
repz
jae
leave
es
leave
shr
or
rcr
cmp
cwde
das
pushf
add
neg
push
sbb
and
fistp
pop
sti
mov
addr16
sbb
jg
icebp
test
inc
data16
jne
aaa
xor
lds
or
out
push
pop
add
adc
scas
and
nop
sahf
and
test
pop
loope
lds
pop
jmp
dec
cmp
js
jle
loopne
jg
cmp
mov
push
mov
jmp
mov
fisttp
test
fimul
cs
fmulp
retf
ds
leave
and
push
mov
jns
xchg
rcl
jle
rcr
jle
pop
sub
sub
(bad)
mov
push
jl
mov
mov
mov
popf
rol
in
mov
movs
mul
mov
call
sbb
daa
xchg
xor
pop
lds
cmp
pushf
aas
loop
dec
push
jmp
mov
aad
add
call
dec
inc
bound
fnstsw
fs
scas
inc
pop
ins
jle
xor
dec
and
test
sub
in
adc
pop
cdq
cld
jnp
and
sub
lods
mov
cwde
stos
in
arpl
sbb
cmp
cld
sbb
mov
sub
pop
jp
hlt
ror
(bad)
adc
push
repz
idiv
ss
ret
or
loope
lock
popw
jmp
jmp
and
jg
stos
sahf
ret
in
dec
rcl
push
dec
jg
clc
cmp
fist
ret
rcr
and
stos
inc
xchg
push
dec
iret
push
popa
jge
and
jp
push
loop
icebp
and
sahf
xor
inc
popf
adc
jecxz
loope
jne
adc
sbb
mov
mov
out
sub
in
xor
adc
or
xchg
push
(bad)
or
push
dec
and
pop
dec
les
sbb
jmp
das
adc
xchg
mov
jmp
int3
je
pop
imul
test
lea
call
add
mov
repnz
std
scas
sbb
jg
test
mov
add
stos
cmp
stc
int3
lods
cmp
aas
fwait
xchg
sar
popa
pop
adc
mov
inc
loop
pop
fidiv
or
mov
nop
jae
xchg
adc
dec
data16
xchg
xchg
add
and
out
mov
and
shr
movs
and
sub
jbe
push
jp
xchg
and
cwde
mov
neg
cmp
ret
pusha
fwait
push
ror
(bad)
push
imul
pop
inc
mov
mov
fs
daa
lds
add
in
cmp
mov
popf
mov
div
add
jmp
mov
cmp
sub
das
xor
stos
xor
add
gs
shl
shr
mov
lea
push
pop
mov
xor
out
scas
inc
test
test
and
push
cmp
retf
loopne
pop
rol
and
out
cld
mov
gs
test
sbb
lsl
and
push
test
xor
loope
stc
mov
(bad)
call
shl
cmp
scas
sbb
cmps
repz
mov
(bad)
icebp
je
inc
and
fst
bound
cmps
push
fmul
pushf
mov
sbb
cmp
pop
aam
sbb
test
movs
std
shl
mov
push
sbb
or
pop
mov
add
add
ficom
mov
inc
(bad)
loopne
out
int3
(bad)
xlat
jp
sbb
arpl
test
in
xor
fisubr
outs
out
in
push
xchg
mov
aad
or
xor
dec
and
gs
test
movs
sahf
or
pop
or
push
cmps
shl
mov
xchg
cmps
inc
popf
mov
push
sbb
jecxz
push
pop
(bad)
out
gs
mov
icebp
jp
push
test
mov
adc
mov
and
call
ret
and
inc
inc
js
popa
push
pop
aaa
arpl
xchg
mov
mov
inc
jmp
xchg
add
aas
adc
js
dec
mov
cli
adc
ret
mov
scas
sub
pop
mov
cmp
lods
sbb
pop
pop
test
out
cld
mov
repnz
sbb
sub
adc
fxch
or
loope
dec
out
popa
popf
and
dec
xor
loopne
retf
mov
jp
mov
sbb
sbb
dec
mov
and
jne
sub
xchg
xchg
pop
push
call
inc
dec
mov
cs
dec
mov
lods
push
xor
shl
in
add
mov
jecxz
xor
or
or
fadd
cmps
lods
fs
jp
push
cmp
rcl
cmps
xor
cmp
ins
fwait
pop
mul
add
fs
mov
out
stc
retf
mov
jmp
lds
dec
inc
mov
movs
jmp
repnz
pop
stos
push
mov
jo
les
ret
arpl
xchg
mov
pop
sbb
and
and
pop
cmc
in
loope
push
out
mov
xchg
pop
bound
sar
mov
aaa
dec
test
jbe
int
add
mov
xor
add
inc
repnz
jmp
xchg
xchg
outs
push
jb
adc
hlt
mov
mov
or
cmps
in
stc
cmp
mov
xchg
xor
pop
sbb
jns
and
push
pop
pop
jp
in
in
jb
lods
out
add
adc
push
lock
test
stos
pop
nop
ss
fimul
mov
iret
cmp
or
pushf
rol
aam
sti
lea
xchg
push
mov
ins
fwait
cmps
push
in
jmp
inc
mov
leave
sbb
xchg
mov
out
or
xor
arpl
xchg
lods
out
xchg
pop
call
jno
add
xchg
sub
push
sub
ror
enter
ja
jle
fsubr
sbb
call
xchg
lahf
jmp
mov
or
scas
dec
xor
push
test
sub
mov
or
push
and
mov
pop
lock
stos
iret
or
dec
nop
scas
rcr
rcr
jo
(bad)
dec
(bad)
sbb
es
nop
sti
retf
mov
jecxz
mov
stos
jmp
inc
cmp
mov
adc
and
movs
jno
lods
in
sub
dec
sbb
xor
call
(bad)
sbb
mov
mov
inc
in
xchg
xchg
test
out
sub
jg
xor
xor
sbb
fs
shr
retf
xchg
arpl
push
xor
push
dec
stc
push
das
sbb
loope
(bad)
mov
std
sbb
or
inc
daa
fidivr
and
sub
lea
sbb
cmps
sbb
leave
sbb
shr
cmp
repnz
or
or
lahf
adc
mov
jmp
cmc
jae
sbb
loop
and
push
cmp
arpl
push
and
pop
in
pop
jp
or
arpl
(bad)
cmc
daa
push
les
inc
pop
leave
sub
jns
out
add
adc
not
lods
pop
sbb
add
cmc
sti
shl
lds
pop
neg
xchg
xor
mov
sbb
mov
imul
cmp
add
dec
int
in
xor
push
popa
fistp
gs
pusha
cmp
push
mov
push
xchg
jnp
add
xlat
cmp
movs
loope
lea
sbb
(bad)
loop
loope
out
(bad)
(bad)
loope
jb
retf
xchg
pop
ds
jmp
jmp
xchg
push
jnp
inc
mov
inc
fcomi
js
ret
aad
out
ins
mov
or
mov
ss
aad
push
rcl
ins
inc
fs
ja
jo
shr
or
sbb
sti
and
ja
sub
and
movs
push
sub
add
jnp
addr16
repnz
or
out
mov
call
ror
jp
rcl
lahf
push
mov
mov
call
mov
lock
xchg
mov
dec
movs
int3
xor
inc
test
sbb
mov
shl
add
ja
inc
(bad)
dec
sar
mov
mov
or
inc
hlt
out
sub
sub
mov
stc
(bad)
cs
cmps
cld
jge
adc
ss
jns
jmp
mov
adc
push
push
and
mov
fstp
push
xchg
mov
cmp
ins
or
pusha
(bad)
je
cmp
mov
fmul
jbe
addr16
and
sti
fwait
xchg
addr16
pop
xor
inc
sahf
leave
sbb
cwde
pop
mov
mov
cmp
es
and
xchg
mov
stos
out
out
xchg
nop
test
adc
push
lea
mov
inc
leave
shl
mov
push
js
dec
pop
sahf
pop
adc
xor
shr
mov
sub
sbb
lahf
scas
xor
lods
bound
add
data16
loopne
fdiv
jne
fldenv
stos
push
mov
mov
xor
inc
pop
int3
sub
shrd
aas
fist
dec
cmc
je
sbb
mov
mov
dec
mov
call
sub
cli
outs
js
push
lock
jecxz
je
xor
mov
push
pushf
cmp
loope
add
leave
xor
add
lods
ja
and
inc
fwait
scas
inc
fbstp
idiv
add
or
cmp
sbb
push
(bad)
loope
mov
cmp
sub
lea
popf
pop
idiv
ja
mul
jne
add
cmp
mov
ins
movs
lods
inc
clc
and
(bad)
addr16
xchg
leave
jae
pop
pop
xor
mov
pop
es
les
test
in
and
and
lds
push
mov
hlt
pop
pop
jmp
dec
ror
sub
cld
ss
and
mov
mov
cmp
mov
dec
cwde
scas
inc
mov
aas
push
mov
push
popa
mov
es
aas
jnp
retf
gs
pushf
test
sbb
leave
xor
scas
ja
ret
repz
xor
cwde
fdivr
cmps
leave
and
ds
sub
outs
(bad)
inc
jp
inc
ss
or
rol
sub
pop
xchg
cmp
mov
imul
and
mov
or
js
xchg
in
retf
mov
iret
pop
jae
cld
mov
imul
cmps
std
push
mov
loop
sbb
imul
push
bound
loope
inc
in
test
out
in
inc
mov
es
pop
jno
inc
lods
lock
daa
mov
or
fisubr
jp
cmc
fild
aaa
in
clc
fldcw
lods
in
ins
(bad)
mov
or
mov
jmp
inc
ins
xchg
pop
cdq
sbb
inc
loopne
sub
in
enter
out
iret
outs
mov
out
aaa
lods
pusha
iret
push
mov
imul
mov
push
(bad)
js
mov
sbb
add
jle
jnp
mov
movs
jge
adc
pop
ja
pop
jbe
pop
nop
xchg
cli
adc
arpl
lock
retf
dec
in
push
add
enter
inc
ins
mov
test
clc
loope
sub
mov
sbb
outs
movs
pop
fcomp
test
xchg
enter
lods
push
call
(bad)
xor
sbb
mov
cmp
cwde
sbb
inc
in
lds
add
jmp
pushf
push
mov
(bad)
fidivr
push
jp
cli
dec
mov
and
fist
aam
sub
cmc
adc
add
cwde
repz
sub
ins
outs
mov
aaa
mov
jno
push
lods
test
adc
(bad)
jecxz
xchg
int
fld
mov
sbb
add
jne
mov
add
cmps
add
fisttp
sbb
inc
sub
sbb
mov
jo
push
cdq
xor
dec
jo
add
xchg
push
in
push
idiv
pop
mov
movs
and
cs
push
cmp
inc
outs
call
les
cs
push
xchg
js
aam
sbb
cmp
xor
inc
jmp
andps
sub
int3
rol
mov
dec
fdivr
sbb
mov
lods
movs
inc
sub
pop
out
cs
and
repnz
jne
push
shl
xor
in
sub
sti
xchg
pusha
sub
pop
cmc
fsub
mov
test
xchg
ja
jge
test
inc
(bad)
clc
pushf
push
mov
fwait
leave
jl
cld
sete
mov
aaa
push
gs
je
or
ds
sbb
test
rcr
aam
popa
fsubp
push
je
outs
jno
dec
inc
xchg
xchg
leave
pop
jne
aas
sub
shl
fst
mov
mov
push
adc
push
mov
sub
or
or
imul
xor
push
outs
jmp
add
add
sub
mov
or
loop
pop
cmp
xchg
rcr
sbb
sub
les
fwait
retf
out
jae
mov
mov
fdiv
cdq
stos
(bad)
leave
pop
loope
pop
adc
mov
loop
mov
outs
fs
mov
jno
xchg
lods
jp
jne
leave
or
mov
and
jne
out
in
cmp
xchg
xchg
push
mov
jecxz
mov
pop
add
adc
(bad)
cmp
cs
mov
jecxz
sub
inc
in
stc
mov
inc
int
push
sub
xor
sub
cwde
sbb
hlt
(bad)
arpl
cmc
push
in
test
pop
enter
fdiv
xor
dec
inc
or
fisttp
cmc
mov
lods
adc
sbb
push
nop
mov
add
mov
bound
test
xor
adc
mov
outs
xor
inc
cmp
xor
pushf
enter
jmp
repz
or
jg
adc
sbb
adc
in
sub
aas
mov
ins
sbb
aas
mov
pop
add
dec
shl
setle
cld
sub
xchg
adc
add
pop
cmp
adc
jmp
cwde
les
push
in
sahf
push
adc
mov
sar
out
xchg
or
fwait
mov
out
pusha
(bad)
test
or
jno
imul
sub
cdq
sbb
mov
imul
aaa
sahf
inc
xlat
scas
out
das
sub
xchg
mov
mov
sub
lock
inc
lods
xor
inc
bound
xchg
mov
clc
sbb
lods
dec
aaa
(bad)
or
into
pushf
not
adc
sub
daa
sub
(bad)
sbb
dec
and
push
ins
xor
jno
into
push
ja
in
sti
mov
stos
das
mov
inc
fcmovne
dec
sub
push
lahf
test
sbb
pop
fninit
sbb
ds
pop
popf
lsl
lods
inc
fidivr
dec
sahf
sbb
pop
ss
sub
fs
rcr
jp
push
sbb
mov
(bad)
std
sbb
fmul
pusha
mov
adc
jbe
mov
shr
fs
rcl
movs
mov
fisub
mov
iret
and
adc
sahf
cmp
pop
(bad)
pop
mov
mov
and
inc
or
sbb
hlt
scas
scas
stos
mov
bound
jmp
and
and
jl
std
xor
push
xor
repnz
ja
lods
in
xchg
div
dec
imul
cmps
call
seta
sbb
sbb
jge
test
popf
into
ins
push
or
sub
mov
scas
xchg
dec
rcl
or
fcmovnbe
fcmovnbe
repnz
fadd
xchg
jecxz
inc
mov
xchg
fiadd
fnstenv
stos
mov
sub
dec
xor
mov
and
mov
inc
cmps
and
jl
fwait
arpl
jmp
jmp
ror
out
add
leave
dec
inc
(bad)
mov
jecxz
add
rcr
js
inc
push
cld
pop
and
popf
and
pop
mov
fisttp
sbb
sub
(bad)
cmp
mov
mov
push
push
sbb
pop
out
pop
inc
ret
pop
lds
invd
mov
or
hlt
stos
stos
push
dec
mov
es
in
mov
shl
add
loop
fild
inc
pop
rol
mov
aaa
aam
inc
adc
jle
(bad)
push
sub
cmps
fwait
stos
aad
cld
shl
mov
mov
outs
leave
fxch
mov
stc
sbb
mov
adc
xor
cmp
mov
jmp
pop
fnstenv
sub
fwait
or
je
jp
and
push
mov
jno
and
xchg
dec
pop
enter
xchg
xor
repz
not
jae
sar
jmp
scas
data16
xor
add
pop
pop
mov
retf
dec
cmps
cli
sub
cli
imul
xor
mov
arpl
push
dec
xchg
aam
dec
mov
(bad)
jge
and
je
cs
adc
jbe
mov
jb
sub
pusha
add
jp
push
cmc
mov
nop
inc
xchg
les
push
(bad)
cdq
xchg
jp
xchg
retf
and
repz
or
cmps
(bad)
or
fs
(bad)
imul
push
adc
push
inc
dec
pop
call
or
rcr
adc
jns
test
xchg
icebp
icebp
mov
cmps
pushf
ins
cmp
jbe
retf
push
inc
hlt
ds
push
rol
in
sub
mov
in
jns
mov
inc
in
repz
stc
call
imul
cli
cmp
xchg
push
sbb
cwde
adc
bound
mov
pop
add
fiadd
and
movs
cmp
cmp
pop
pop
push
push
ret
call
mov
push
cmp
mov
fdivr
or
jae
stos
call
in
outs
xchg
xchg
push
mov
scas
mov
shl
mov
pusha
pop
aaa
jno
xor
gs
mov
(bad)
adc
ja
push
push
mov
mov
sahf
inc
movs
jmp
inc
js
retf
inc
push
pop
sub
int3
jg
std
mov
xchg
sub
cmc
ficom
xor
adc
addr16
ds
jl
xor
retf
inc
mov
out
push
jmp
outs
mov
fs
xor
mov
push
(bad)
xchg
push
sbb
cdq
sbb
(bad)
lock
dec
shl
push
div
pop
scas
mov
mov
mov
cmp
push
sbb
xchg
out
mov
div
mov
out
push
push
xor
inc
mov
nop
jl
jmp
inc
popa
push
stos
dec
sub
lods
das
jae
add
xor
jns
fisttp
gs
mov
and
stos
inc
outs
add
out
pop
jne
stos
(bad)
int
fcom
jl
jle
xchg
xchg
inc
push
repz
test
arpl
das
pop
das
push
mov
cmp
ins
shr
cmp
jg
arpl
inc
outs
pop
fnstsw
mov
ds
fimul
dec
adc
pop
out
imul
daa
aad
test
push
push
mov
cld
out
lods
xchg
add
jl
ds
call
jmp
cmp
mov
hlt
fmulp
test
sbb
fldenv
jo
push
outs
xchg
(bad)
jo
add
lock
xchg
adc
dec
dec
cmps
cwde
dec
data16
mov
cmps
add
lock
je
xor
xor
sahf
into
sbb
adc
inc
mov
pop
scas
pop
sub
dec
icebp
daa
repnz
xor
shr
pop
pop
fwait
cmp
dec
enter
jno
jbe
adc
push
sub
repz
xor
dec
push
mov
jge
aaa
and
jmp
add
sub
adc
shl
xchg
retf
inc
cmps
out
fsubr
int
dec
sar
fnstsw
mov
push
push
or
pusha
shl
dec
(bad)
inc
in
pushf
inc
mov
pushf
pop
sbb
inc
xchg
jg
lods
adc
fld
movs
fadd
jl
pop
jno
pop
pusha
sub
test
jnp
shl
ins
imul
cmp
or
cmp
push
cs
lock
pop
imul
mov
adc
sub
iret
ret
mov
mov
rol
clc
or
or
jle
xchg
inc
ss
fisttp
push
jns
jg
shr
(bad)
out
(bad)
js
fdiv
cmps
ret
and
pop
cs
ficom
es
retf
sub
sub
or
pop
cld
test
iret
fcmovu
mul
(bad)
psllq
std
mov
adc
mov
call
ja
cmp
mov
sbb
into
mov
repnz
adc
sbb
imul
imul
adc
push
jp
loop
out
or
add
jmp
push
inc
adc
xchg
inc
rcl
xchg
imul
pop
test
fucomip
pop
enter
lods
fwait
adc
push
mov
test
add
sub
xchg
shl
cdq
sub
in
dec
dec
or
jmp
pop
aam
retf
dec
or
movs
(bad)
mov
dec
mov
push
cmp
push
jb
pop
jb
mov
inc
pop
pop
test
xchg
push
or
push
sbb
pusha
bound
pop
int3
lea
ss
add
push
clc
xchg
out
xchg
or
les
js
sub
push
in
in
push
xchg
mov
inc
(bad)
jmp
dec
mul
std
sbb
fwait
jle
aad
mov
push
xchg
mov
mov
or
push
adc
ins
mov
mov
sub
pushf
nop
inc
pop
push
mov
es
outs
inc
addr16
jo
dec
js
add
clc
scas
fnstsw
je
xchg
addr16
and
mov
lock
jg
jne
add
push
ja
sbb
test
mov
mov
mov
lods
scas
mov
test
or
aam
jmp
xchg
or
sahf
xchg
inc
mov
sbb
xor
in
ret
shr
push
mov
lea
cld
ret
pop
jno
cld
sbb
xchg
je
xchg
cmc
lods
dec
mov
cmps
pop
ins
push
stc
xor
xchg
or
cmp
dec
leave
mov
(bad)
popf
mov
cwde
xor
int
sbb
call
sti
fcom
inc
push
inc
adc
daa
cmc
bound
inc
mov
add
push
outs
loop
mov
stos
cwde
call
jns
mov
push
jmp
cmps
mov
gs
in
dec
jno
push
arpl
inc
fwait
adc
mov
ret
add
mov
fwait
inc
js
cs
xchg
das
pop
push
int
pop
mov
ror
in
ja
xor
ins
fsub
sbb
stos
mov
and
push
mov
xor
je
sbb
scas
inc
pop
ror
pop
scas
(bad)
shl
shl
xchg
mov
sar
dec
mov
aas
scas
int3
add
retf
arpl
add
test
add
fstp
lea
in
cdq
fsub
jo
mov
imul
(bad)
clc
inc
jne
and
retf
xchg
mov
jecxz
or
mov
je
ins
fild
retf
enter
nop
in
and
stc
addps
mov
es
mov
sub
jmp
je
push
cmp
push
mov
adc
pop
mov
inc
add
sub
jmp
jmp
dec
jmp
and
aaa
fidiv
(bad)
pop
cs
and
push
or
add
shl
pop
imul
ds
sbb
sub
adc
jae
cmc
mov
adc
and
mov
hlt
fistp
pop
cmp
aam
rcl
stc
or
sbb
int3
push
(bad)
xlat
fdivr
pop
and
sub
sub
push
add
xchg
cs
daa
push
fdiv
pop
loop
push
or
pusha
push
arpl
xchg
mov
add
mov
lock
arpl
pusha
out
jo
jg
inc
daa
out
fcomp
or
inc
retf
cmp
inc
or
shr
jmp
(bad)
(bad)
lea
stc
mov
and
iret
sub
jge
xchg
stc
mov
jb
aam
push
pop
fist
aad
sahf
dec
mov
adc
shl
dec
xchg
pop
retf
xchg
xor
add
fdiv
and
jo
neg
mov
inc
jle
jp
add
fdiv
out
es
and
mov
ret
data16
cwde
mov
stos
mov
test
jne
cmp
cs
fiadd
pop
rcl
or
pop
jge
fsubr
mov
sar
pop
int
stos
adc
mov
gs
push
loop
in
inc
push
aam
xor
fs
imul
call
imul
loop
dec
push
mov
inc
es
pop
mov
nop
push
adc
cmps
(bad)
xlat
jmp
mov
mov
(bad)
cli
lahf
dec
dec
into
push
das
aam
jecxz
fiadd
jle
add
fwait
retf
sbb
mov
mov
sub
mov
dec
shl
pmovmskb
jge
xchg
or
in
mov
push
mov
pop
aaa
jp
jbe
loopne
pop
add
repnz
xchg
imul
movs
ret
inc
test
cmp
adc
adc
xor
or
jmp
clc
push
fcomp
push
push
sub
into
xor
ja
mov
sbb
jnp
int3
xor
mov
jle
cmp
loope
sbb
movs
push
das
pop
push
cld
cmc
enter
movs
ss
enter
pushf
pusha
inc
out
cwde
push
push
call
stos
mov
or
stc
lock
dec
push
or
sbb
mov
cmp
in
test
push
cwde
inc
scas
lahf
out
(bad)
dec
dec
(bad)
pop
cmp
xchg
rcr
sub
mov
mov
ja
popf
in
lods
sahf
dec
dec
in
mov
sbb
sbb
mov
shl
adc
xchg
ins
xlat
pop
clc
adc
ss
mov
mov
shl
movs
sub
jno
retf
push
out
inc
dec
retf
shl
mov
outs
cdq
cmc
ins
fwait
push
inc
cli
mov
pop
pop
and
sbb
mov
es
sbb
fstp
push
stc
psubq
or
shl
ja
sbb
sbb
mov
std
je
jae
xlat
add
push
movs
cmp
movs
cmp
jmp
mov
dec
inc
test
hlt
jmp
push
add
sbb
add
loop
push
xchg
adc
mov
push
pop
nop
sbb
or
push
sbb
imul
adc
js
jo
pusha
(bad)
rcr
cmp
xchg
inc
pop
push
jg
repnz
adc
xchg
stos
outs
test
sbb
js
dec
jmp
push
lahf
sbb
xlat
pop
push
xor
pop
mov
in
mov
repnz
sti
fld
stc
cwde
push
nop
inc
ins
mov
out
aad
popf
and
cmp
push
(bad)
fist
in
xor
mov
cld
dec
pop
cmps
dec
loopne
popf
stc
(bad)
pop
call
addr16
mov
xchg
popf
adc
xchg
push
bound
xchg
cdq
iret
pop
(bad)
xchg
jno
aaa
das
(bad)
jmp
call
adc
clc
jl
imul
and
push
pop
pop
mov
inc
push
outs
xor
ret
pushf
rol
(bad)
dec
fild
sti
int3
stos
push
and
fwait
movs
js
add
jl
pusha
stos
adc
in
fcmovbe
fld
mov
and
or
pop
fiadd
xor
imul
inc
popf
xor
and
xchg
(bad)
fnstsw
pop
test
inc
shl
pop
test
push
mov
pop
pop
aad
ins
xchg
mov
mov
mov
lods
xor
lahf
jp
add
push
jne
dec
sbb
mov
clc
and
cmp
adc
mov
lods
(bad)
fsub
fcomp
push
(bad)
push
sub
imul
(bad)
(bad)
(bad)
push
sub
pop
clc
cmp
ins
pop
push
mov
std
push
fwait
xor
in
(bad)
mov
jg
jp
pop
daa
gs
jp
int3
xchg
jecxz
xchg
mov
repz
sub
in
xchg
(bad)
or
shl
shr
aad
add
test
or
fidivr
xchg
ficomp
retfw
enter
outs
nop
push
cmps
jecxz
movs
and
sbb
and
les
repz
xchg
loope
ret
outs
sahf
int3
jne
jl
mov
sub
fldcw
jbe
into
repz
jmp
fld
push
ret
shl
push
xor
leave
mov
imul
int
(bad)
xchg
mov
or
jecxz
addr16
xchg
dec
loop
jmp
js
mov
test
mov
sub
data16
leave
jge
xor
scas
movs
pop
fimul
inc
add
adc
push
push
mov
fucomp
cli
ins
(bad)
(bad)
imul
(bad)
lea
loopne
fwait
not
sub
movs
call
mov
(bad)
push
int
scas
daa
mov
cmps
or
sbb
inc
mov
mov
xor
pop
dec
lods
imul
imul
mov
loope
and
(bad)
ja
sahf
mov
jno
sahf
mul
dec
mov
cmp
popa
adc
(bad)
dec
scas
add
rcr
cmp
and
(bad)
sbb
lods
mov
mov
ficomp
lock
inc
aaa
je
mov
mov
pusha
stos
shl
jge
mov
cmp
idiv
xor
inc
mov
fstp
rcl
(bad)
fadd
or
fdivr
add
iret
retf
inc
mov
lock
sbb
push
cmps
(bad)
call
pmuludq
push
xchg
fiadd
jecxz
pop
and
pop
pop
ja
mov
push
and
xchg
gs
xchg
mov
mov
adc
dec
enter
xor
mov
jno
or
rcr
add
mov
(bad)
jnp
mov
xchg
xchg
cmp
fiadd
sti
pop
sub
xchg
dec
xor
mov
dec
jle
add
imul
mov
and
dec
and
pop
ret
fs
adc
push
cmc
and
add
cmp
pop
inc
jmp
xchg
rcl
xchg
je
pop
xchg
or
ret
ret
das
mov
sub
imul
push
adc
enter
adc
out
in
dec
cld
mov
imul
and
shr
xlat
jge
adc
fnsave
(bad)
out
jl
mov
jae
and
dec
fmul
int
mov
rcr
mov
out
loop
and
sub
cwde
aaa
dec
ficom
imul
jnp
xchg
xor
jae
xlat
fucom
xor
jbe
repnz
sub
mov
pushf
pop
pop
cmp
mov
ss
retf
fidiv
popf
test
out
in
mov
adc
sub
pop
dec
dec
sub
jb
test
xchg
mov
outs
in
and
scas
das
(bad)
pop
mul
fdivr
xlat
push
leave
jp
mov
inc
cmp
cmp
inc
and
(bad)
pop
(bad)
mov
push
loopne
add
dec
xchg
shr
xor
popa
xlat
call
out
jb
arpl
cmp
in
std
xor
sub
jmp
das
sub
movs
pop
and
movs
mov
stos
jae
loope
sti
test
or
mov
or
movs
into
mov
add
(bad)
add
js
pusha
je
sub
mov
jmp
add
gs
imul
pop
push
mov
sahf
fwait
sbb
loope
xchg
dec
or
cwde
xchg
ret
repz
mov
or
pop
sub
push
mov
and
int
in
call
scas
sub
inc
bound
call
adc
sub
scas
lahf
bound
test
push
sub
add
sub
dec
dec
cs
cmc
je
dec
nop
push
fsub
cmp
mov
sub
jecxz
test
in
jno
adc
sbb
sar
sbb
pop
aam
lds
xor
jb
push
adc
or
fidiv
and
stos
pop
push
lock
mov
dec
fsubr
cmp
fsub
mul
lahf
cmc
jmp
es
ret
cmp
sar
sub
jbe
aad
shl
je
inc
sub
jbe
pop
sub
jle
mov
loop
adc
clc
in
ins
push
mov
loopne
adc
mov
(bad)
mov
jmp
aam
hlt
xchg
cmp
xlat
(bad)
pop
cmp
or
call
adc
adc
cmps
cdq
out
add
mov
jns
int3
sub
adc
loopne
enter
iret
cs
and
sub
mov
ins
pusha
jmp
mov
pop
cmp
xchg
xchg
call
ror
sub
fwait
cmps
xor
daa
stc
js
mov
sbb
cmc
call
or
outs
xor
out
inc
es
bound
xor
dec
scas
in
fnstcw
jns
mov
cmp
jle
inc
xchg
xor
xlat
push
adc
scas
(bad)
mov
mov
inc
lahf
inc
call
jns
fidiv
shl
inc
ficomp
js
and
in
pop
dec
mov
jmp
xor
cmp
push
test
imul
lock
push
shl
call
mov
dec
loope
mov
fiadd
inc
or
(bad)
fiadd
dec
outs
(bad)
icebp
pop
jl
fldcw
mov
fisttp
repnz
mov
dec
inc
sbb
xchg
fidivr
jle
sbb
pop
pushf
inc
test
test
push
xchg
xchg
sub
and
xchg
jge
ret
add
not
sar
lds
push
dec
aaa
aas
xor
push
pop
pop
mov
jl
push
pop
(bad)
(bad)
call
adc
imul
push
inc
loopne
outs
inc
es
(bad)
inc
inc
xor
rcl
mov
test
ret
or
movs
in
iret
test
jns
inc
lods
loopne
shl
push
in
inc
xor
inc
sbb
mov
sti
jmpw
mov
adc
test
xchg
pop
cmp
push
imul
pop
(bad)
mov
(bad)
jg
call
cmp
rol
inc
cmps
pop
stc
into
cs
push
das
scas
(bad)
mov
js
xchg
inc
repnz
mov
cmp
xchg
pop
ret
adc
cmp
not
das
mov
scas
jne
xchg
add
inc
jbe
xchg
je
push
sbb
jmp
iret
xchg
cmp
push
jg
jecxz
lock
mov
cmps
push
movs
pop
sbb
xor
popa
in
jle
test
cmp
outs
lahf
lds
ins
aaa
dec
pushf
fprem1
shr
and
movs
adc
mov
pop
add
xor
push
lds
dec
sbb
pop
std
sub
cli
xor
rol
mov
jo
sbb
ss
aaa
fist
les
adc
jb
lahf
or
jnp
mov
xchg
pop
movs
mov
cmps
dec
sub
cmp
adc
dec
mov
inc
faddp
(bad)
mov
pop
cmp
daa
mov
fs
jbe
cmp
mov
sti
cdq
fwait
add
push
outs
das
sbb
call
(bad)
add
test
mov
pop
or
jl
icebp
data16
cs
jbe
inc
lock
enter
pop
add
adc
adc
pop
mov
stc
scas
add
sub
lea
fnstsw
gs
or
or
fdivr
adc
in
mov
retf
pop
xor
inc
cmps
push
add
jmp
cmp
mov
test
jl
or
fbld
std
jns
sbb
test
fmul
cld
lds
adc
or
cli
fstp
mov
sub
inc
push
mov
push
pop
cmc
out
arpl
or
dec
add
fimul
and
adc
jns
or
mov
rcr
or
aam
mov
adc
enter
add
push
sub
in
jp
cmp
fnsave
mov
stos
cmp
and
push
ins
mov
inc
cdq
adc
mov
ja
bound
loopne
push
fidivr
mov
fs
xchg
sub
js
call
mov
in
aam
xchg
mov
sbb
adc
dec
mov
or
and
aas
movaps
dec
leave
out
out
sahf
jae
addr16
xor
push
xchg
xchg
loopne
arpl
scas
enter
mov
outs
cmp
pop
xchg
aam
add
mov
and
jne
arpl
ror
sbb
dec
add
or
fwait
push
xchg
(bad)
repz
les
adc
ja
cmp
sub
push
stos
fcomp
push
add
mov
adc
pop
test
or
push
(bad)
mov
adc
loopne
aam
(bad)
and
or
call
cld
loop
jno
or
cmps
in
fisub
jae
shr
jg
xchg
mov
mov
cmp
fnsave
mov
cwde
ror
int
sbb
jb
xacquire
in
inc
jo
ins
add
stos
in
jmp
pop
clc
inc
inc
imul
jmp
test
call
pop
lods
sbb
ss
lahf
clc
pop
jmp
sub
lock
xor
sub
jns
mov
mov
jae
bound
jg
in
mov
stos
push
lea
push
sahf
cs
mov
in
rol
jp
mov
xchg
out
and
dec
clc
sbb
mov
add
ret
ret
mov
and
mov
inc
fwait
or
fidiv
fisubr
popa
push
fiadd
xchg
lock
(bad)
lahf
push
and
sar
xchg
push
stc
daa
hlt
outs
push
fstp
rol
mov
test
cmp
jo
mov
or
sbb
ror
mov
in
loop
push
rcr
mov
imul
or
cmc
jmp
sub
arpl
pop
ja
xor
xchg
je
inc
in
and
mov
push
fild
(bad)
aam
adc
in
push
lods
jbe
sbb
in
and
sub
fst
push
add
cmc
aaa
rcr
test
test
xor
push
jg
je
jecxz
mov
ret
add
or
and
ins
(bad)
aad
iret
es
jmp
mov
sub
test
loop
adc
lods
stos
xor
jns
pushf
xor
enter
fild
ret
pop
popa
cmc
test
xor
xor
mov
loopne
out
ficomp
adc
add
push
and
and
xor
jmp
in
xor
push
movs
call
sbb
dec
pop
push
push
movs
pop
pop
and
pusha
dec
jmp
cli
ins
and
pop
test
dec
das
ds
inc
sub
fld
test
jg
cdq
int
xor
pop
hlt
mov
jne
hlt
pushf
data16
popf
xchg
cmp
das
div
out
retf
call
ret
test
sbb
xchg
mov
adc
test
test
aam
adc
or
mov
sbb
jno
fcom
and
and
fisttp
inc
push
outs
cmps
arpl
loopne
jl
(bad)
xchg
adc
aaa
inc
ret
neg
sahf
jnp
lods
dec
adc
adc
stos
fs
dec
sub
adc
pop
push
daa
mov
add
movs
call
xor
xchg
cli
fld
lods
pop
mov
cmp
inc
jmp
fisubr
ins
push
jle
loope
jp
das
lea
out
push
cwde
mov
jnp
dec
test
call
mov
add
icebp
pop
xor
mov
xor
out
fild
inc
fs
pop
int3
mov
nop
fsin
mov
xchg
mov
movs
pop
cmc
or
lds
jns
mov
pushf
iret
mov
adc
mov
mov
pop
sbb
jne
outs
mov
addr16
jp
imul
icebp
push
push
(bad)
push
test
test
pop
add
inc
arpl
addr16
mov
mov
mov
js
ror
shl
inc
xchg
or
cmp
outs
addr16
ja
lahf
xor
mov
dec
mov
xlat
neg
es
jno
and
mov
pop
and
(bad)
idiv
pop
mov
fstp
mov
ffree
in
js
mov
rcl
xor
out
push
adc
sub
pop
lods
scas
pop
mov
or
add
sbb
and
fnsave
ret
fnstenv
push
push
les
lods
call
cwde
mov
femms
imul
(bad)
leave
pop
jge
mov
loopne
cwde
jg
pop
push
ret
rcl
test
mov
mov
daa
pop
sar
sub
jge
adc
mov
clc
fbstp
retf
out
sub
jl
xlat
sti
xchg
sahf
sub
ficomp
loope
jmp
or
mov
mov
sub
xor
xor
out
mov
adc
sbb
loopne
push
push
enter
lods
pusha
out
cs
es
xchg
int
cmp
jno
xor
or
adc
test
mov
faddp
fwait
cmp
mov
mov
and
pop
jge
(bad)
out
outs
pop
xchg
jo
xchg
push
sbb
sbb
shr
adc
cmp
inc
cmp
aam
dec
dec
imul
call
leave
push
dec
je
out
mov
loop
xor
add
sub
xor
mov
fild
test
jmp
mov
adc
xchg
sbb
icebp
lock
sbb
sbb
xchg
std
ficom
ror
out
sbb
and
jp
or
call
cmp
bound
fcomp
xchg
out
jno
sbb
jne
jmp
xor
shl
inc
push
out
je
cmp
add
movs
jl
int3
enter
pop
dec
and
jno
pop
sar
movs
xor
std
out
cmps
fincstp
sub
ins
and
or
and
jle
fsub
outs
shl
jle
das
mov
or
inc
(bad)
data16
in
addr16
inc
addr16
mov
adc
sahf
mov
test
jmp
outs
jl
mov
fiadd
xchg
clc
rol
inc
lock
jb
add
out
fdiv
inc
mov
sbb
fisttp
dec
dec
adc
xchg
jae
dec
jg
add
scas
and
jb
adc
pop
mov
scas
pop
pop
(bad)
or
adc
dec
sub
call
ret
pop
ret
add
jns
sti
cmp
test
(bad)
mov
ss
lock
or
icebp
xor
jbe
shl
and
int
jmp
(bad)
mov
pop
into
sub
sahf
cmps
ficom
in
add
loop
dec
jae
mov
inc
and
or
vpshaw
xchg
and
sub
sbb
pop
jno
jne
enter
push
cmps
jl
fnstcw
div
pusha
int
movs
xor
shl
adc
mov
nop
fistp
xor
movs
test
ins
leave
data16
rcl
fild
push
repz
jp
xchg
aad
jmp
ins
mov
aad
inc
add
ja
push
loop
inc
pusha
dec
push
je
ja
rcr
repnz
icebp
or
je
test
dec
sub
ret
in
or
xchg
inc
sbb
aas
mov
jge
scas
or
push
jo
jp
movs
(bad)
cmp
sub
xlat
shl
xchg
pushf
pop
test
mov
aaa
inc
pop
cdq
inc
push
and
xchg
adc
push
cmp
push
mov
imul
idiv
call
test
neg
shl
and
push
dec
push
sbb
jmp
jl
adc
repz
adc
sub
push
ret
cmc
push
dec
lods
call
vpaddw
loopne
sub
inc
sbb
xor
jl
sbb
sub
test
(bad)
sbb
out
out
mov
mov
jne
mov
jnp
dec
jne
rcl
push
popa
push
jnp
dec
push
sbb
sbb
inc
sub
(bad)
sub
ret
inc
add
mov
scas
xlat
jno
jge
sbb
in
es
dec
test
add
cmp
jo
inc
ret
sub
sub
rcr
imul
lds
or
push
pusha
sbb
and
xor
mov
ins
mov
shr
mov
inc
sti
dec
jle
fisttp
xchg
push
or
fadd
push
in
loope
fwait
mov
loop
xchg
mov
ins
add
call
test
and
inc
cmps
inc
adc
and
test
push
jle
(bad)
dec
or
hlt
ffreep
xchg
mov
lea
mov
(bad)
adc
jle
xor
sub
xor
ror
push
push
(bad)
cld
les
xchg
sub
xchg
xchg
and
sbb
call
push
pop
pushf
ss
fsubr
inc
std
sbb
scas
xchg
sbb
cmp
(bad)
mul
mov
loop
bound
inc
shl
imul
jp
outs
dec
add
pop
mov
xchg
sub
movs
not
cdq
push
mov
arpl
mov
inc
ja
inc
jnp
inc
jmp
fmul
push
pop
in
in
adc
lock
inc
push
std
mov
cwde
(bad)
std
dec
sub
hlt
or
fnstenv
out
sti
cmp
repz
lahf
pop
sbb
es
int
inc
ja
js
xor
stos
stc
pop
push
cmps
push
pop
movs
dec
fst
mov
xchg
shl
ds
cdq
adc
in
sbb
aad
in
dec
or
test
xchg
and
add
call
xchg
jmp
inc
cmp
cdq
dec
jge
(bad)
pop
cmp
push
shl
adc
cmp
stos
mov
jp
sahf
in
xor
add
pop
sub
stc
push
xchg
xor
jns
or
xor
mov
mov
fst
mov
xor
pusha
mov
dec
pop
inc
or
xchg
fstp
ins
popa
cmps
mov
cwde
mov
sahf
clc
lods
scas
mov
or
pop
rol
and
into
stc
retf
sbb
adc
lahf
jne
sbb
adc
or
xchg
loope
pop
adc
jnp
cmps
gs
out
pop
inc
adc
push
mov
mov
jl
dec
sbb
and
retf
xchg
mov
xchg
jp
xchg
lahf
mov
call
sbb
bound
mov
repnz
sbb
int3
adc
add
(bad)
lds
and
(bad)
ror
(bad)
and
cli
jbe
cmp
popf
inc
stc
ret
sbb
push
aam
clc
jg
scas
pop
(bad)
stos
bswap
dec
cmp
mov
adc
(bad)
xchg
aad
mov
mov
sbb
xchg
ss
aad
or
xchg
int3
mov
in
daa
test
mov
jecxz
sbb
xor
xchg
jmp
mov
mov
fprem
stos
into
cwde
imul
jge
sbb
pop
js
xor
jno
dec
leave
fldcw
je
mov
aas
std
lds
push
sbb
cli
pop
mov
fdivrp
fisttp
jle
movs
mov
dec
adc
add
sahf
fisub
pop
jp
sbb
mov
out
callw
push
jmp
mov
push
jb
stos
pop
xor
or
cmp
jle
retf
pusha
and
add
sub
cdq
sub
or
xchg
pushf
pop
sub
frstor
movs
ret
aad
or
sub
xor
pop
inc
mov
xchg
jecxz
popa
inc
mov
mov
or
jnp
retf
(bad)
out
mov
inc
xor
sub
pusha
movs
cs
dec
adc
xor
sbb
out
test
jmp
mov
dec
mov
fnstenv
jmp
loopne
fcom
jns
cmp
sbb
add
cwde
stc
jb
adc
test
jl
xor
inc
mov
xchg
bound
rcr
mov
or
sbb
(bad)
fsubr
inc
cwde
cmp
fsubr
xchg
mov
push
and
push
pusha
(bad)
or
icebp
cmps
xchg
push
addr16
ja
sub
out
das
(bad)
(bad)
and
sub
mov
cmp
pop
dec
adc
scas
jle
jmp
in
and
jns
lahf
dec
gs
push
jmp
ret
and
in
sub
in
sbb
mov
cmc
and
pop
mov
(bad)
cdq
jbe
ins
icebp
push
xor
call
lods
data16
loopne
cmp
push
xchg
push
out
ror
loopne
add
push
pop
stos
push
inc
jmp
mov
aad
cld
sub
cdq
popf
ins
rcr
lea
or
inc
in
ja
and
hlt
movs
xchg
mov
pop
jns
push
das
jp
pop
popf
out
push
xor
fs
(bad)
in
sub
sub
cmc
add
sbb
clc
shr
mov
fbld
js
or
mov
scas
leave
iret
cs
data16
sbb
shr
jbe
sbb
xchg
xor
fnstenv
push
jns
rol
scas
jmp
int3
push
out
jno
outs
call
sti
std
es
stc
rcl
icebp
jmp
pop
or
cmps
fld
not
add
mov
dec
xchg
sub
adc
mov
test
jae
xchg
pushf
out
das
pop
inc
ret
dec
mov
cmp
nop
test
pop
imul
and
and
mov
loopne
jo
add
mov
jecxz
idiv
sti
and
aas
adc
adc
xchg
mov
icebp
add
dec
cdq
movs
adc
dec
cmp
cmp
mov
arpl
ins
jmp
ret
jb
ja
push
xor
cmp
lahf
or
mov
add
dec
(bad)
ds
sub
sub
pop
sti
adc
cmp
lahf
push
out
cmovg
pop
jg
leave
ja
pop
mov
cmps
cmps
push
movs
in
xchg
cmps
fnstenv
mov
hlt
xchg
les
sahf
out
pop
call
mov
lods
test
punpckhwd
add
sub
push
fs
mov
xchg
mov
dec
test
addr16
adc
loop
jmp
sar
fwait
(bad)
and
aad
in
lahf
loop
mov
mov
ins
stos
push
cmp
xchg
shr
inc
out
jmp
jp
(bad)
call
mov
cdq
xor
arpl
(bad)
xlat
fwait
push
sub
inc
test
or
jmp
out
dec
mov
xor
mov
push
js
(bad)
push
push
mov
icebp
mov
lea
push
jns
stos
repnz
mov
sub
jnp
aam
in
cmp
fisub
dec
mov
mov
add
push
sbb
lock
mov
mov
test
or
mov
cmps
xor
sti
jg
pop
mov
mov
sub
(bad)
push
js
mov
das
xor
push
cs
push
shr
jae
retf
inc
or
fstp
mov
xor
jmp
dec
movs
daa
or
jmp
mov
mov
cmp
push
push
(bad)
daa
lea
icebp
cli
cmps
ds
stos
or
push
jmp
in
xchg
out
fs
rcr
cmp
(bad)
aad
leave
cs
loopne
and
daa
xchg
cli
cmc
sbb
xor
outs
stos
ret
(bad)
fst
sub
popf
cmp
ret
data16
sbb
jne
jne
seto
xchg
xchg
enter
or
cs
adc
cs
sbb
pop
mov
scas
je
push
loopne
add
sbb
fidiv
fs
retf
mov
(bad)
ja
mov
lods
outs
scas
jnp
sub
sub
mov
repz
and
mov
das
dec
(bad)
iret
cmp
rcr
jae
push
loop
pop
mov
sbb
add
lock
mov
outs
icebp
stc
orps
mov
add
pop
orps
mov
dec
cs
adc
mov
sub
js
add
mov
mov
fucomi
fild
into
and
jmp
(bad)
sub
std
test
bound
xor
sbb
repnz
or
hlt
cmc
mov
push
jbe
push
xor
int
mov
loopne
js
sub
pop
mov
les
add
sbb
pop
stc
jge
and
mov
and
jg
sbb
lds
daa
mov
or
adc
mov
lds
arpl
mov
sti
shr
hlt
ror
pop
cmc
sbb
or
push
mov
cmp
push
fisttp
or
adc
(bad)
outs
adc
jmp
movs
lea
pop
inc
jb
push
cli
stc
aaa
mov
add
cmp
lock
cmp
imul
enter
shl
sub
fisubr
xlat
loopne
repnz
jmp
pop
(bad)
ja
sahf
clc
xchg
icebp
jb
bound
or
imul
mov
cmp
inc
fnstsw
pop
xchg
cli
enter
add
es
jo
cs
fdiv
les
loope
cmp
xlat
(bad)
das
lock
jge
shl
mov
repz
jg
aaa
(bad)
mov
push
cmp
imul
sub
push
mov
and
mov
iret
or
adc
inc
jno
sti
cld
adc
or
mov
pop
cdq
out
fidiv
(bad)
cmp
sbb
adc
cmp
ja
retf
test
sbb
das
pop
cs
nop
xor
and
mov
test
pushf
ins
inc
mov
cmc
loopne
xchg
or
test
mov
cld
fisubr
mov
jne
lds
cld
test
mov
out
sbb
jmp
pop
shl
pop
jp
add
cld
xor
cld
mov
fidiv
cmp
inc
movs
clc
ficomp
in
clc
mov
jb
enter
ss
test
push
in
mov
dec
rcr
test
dec
mov
sbb
aas
sbb
and
mov
xchg
es
call
cli
sbb
mov
ins
pop
repnz
or
xchg
add
fs
out
inc
cmp
out
sub
cmc
adc
pop
out
or
nop
(bad)
pop
enter
lea
aam
jmp
push
outs
xchg
dec
enter
mov
pop
loop
mov
mov
cwde
loope
push
cld
iret
nop
push
bound
xchg
lea
sbb
dec
jmp
std
pop
pop
pop
or
ss
cmps
adc
xchg
cmp
inc
dec
push
xor
mov
sub
add
cs
adc
xor
mov
fadd
out
sub
scas
in
lock
pop
es
xchg
movs
adc
pop
ds
sbb
dec
mov
mov
out
and
retf
pop
call
and
xor
iret
push
jge
mov
int
nop
aam
sar
inc
adc
lea
and
mov
adc
mov
sbb
jecxz
mov
sub
pop
arpl
leave
rol
lods
cdq
add
imul
nop
adc
daa
stos
fimul
addr16
jns
out
push
xchg
repz
inc
push
mov
(bad)
cli
mov
shl
or
xlat
cdq
popa
mov
mov
movs
arpl
mov
loop
fisubr
xchg
adc
ret
aam
icebp
add
std
std
pushf
loope
cmp
(bad)
ds
loopne
rol
and
data16
inc
pop
(bad)
lods
inc
out
icebp
add
je
(bad)
out
imul
jl
push
int
cmp
arpl
push
mov
sub
clc
mov
mov
cmp
(bad)
pushf
inc
and
(bad)
cmp
test
in
mov
mov
in
repz
cwde
xor
call
mov
je
inc
xlat
pop
mov
fs
cld
and
int3
push
call
mov
aam
dec
sti
mov
jmp
dec
jmp
icebp
cmp
fist
mov
pusha
mov
xchg
pop
cmp
mov
js
dec
fwait
sub
xlat
dec
and
jp
mov
inc
hlt
imul
push
xor
xlat
fbld
pop
pop
adc
nop
jae
shr
jmp
and
pushf
mov
test
pop
or
mov
inc
jae
lahf
imul
jb
xchg
pushf
xor
jbe
mov
arpl
cmps
loopne
or
inc
push
mov
xchg
and
add
mov
cdq
fldcw
enter
xchg
mov
push
das
cmc
and
ror
add
out
sbb
call
fsubr
ret
sahf
dec
cmp
mov
mov
lahf
cwde
popf
retf
add
push
or
and
(bad)
iret
xor
dec
stc
xchg
mov
leave
mov
adc
ins
je
sbb
push
inc
xor
movs
xor
sar
mov
test
pop
adc
daa
pop
jmp
push
fs
and
sbb
aam
or
push
and
test
jo
data16
adc
stc
mov
fsub
not
mov
pop
aaa
pop
jo
dec
cmc
fidivr
mov
and
mov
(bad)
xor
add
sbb
ins
jae
push
adc
sar
sub
test
adc
cmc
xor
mov
ret
retf
cld
sub
cmps
imul
iret
pop
cmps
js
in
and
mov
inc
inc
jg
jmp
pop
add
push
gs
jae
cs
aam
shr
cmps
imul
popf
adc
fs
jge
and
loope
cmc
cmp
mov
in
and
pop
dec
inc
adc
dec
xchg
or
(bad)
into
call
mov
retf
dec
lds
imul
loop
push
hlt
mov
adc
pop
mov
ins
or
pop
ja
retf
nop
popa
cmp
xchg
fcomp
stos
mov
add
test
dec
push
or
add
mov
aaa
mov
or
sub
add
push
inc
mov
push
or
cmps
int3
bound
aas
jbe
cmps
add
cmps
lods
data16
mov
jecxz
je
retf
push
int3
adc
data16
fbld
jns
push
push
jmp
dec
cmps
mov
inc
repz
gs
(bad)
retf
js
aam
repnz
ret
pop
clc
imul
jo
fprem
pop
inc
movzx
pop
or
or
(bad)
xor
ss
lods
jns
stos
les
mov
fwait
cmps
movs
cmc
(bad)
dec
push
mov
je
movs
test
call
popa
pop
and
fwait
shl
cmp
shr
xlat
dec
popf
ins
out
sub
je
sbb
xlat
outs
pop
dec
xor
push
mov
cmp
dec
jb
adc
leave
mov
dec
daa
fisubr
dec
jmp
xor
and
inc
ins
and
out
test
inc
out
or
dec
icebp
clc
mov
xchg
ins
jmp
mov
lds
lea
std
inc
sar
out
daa
loope
xor
retf
adc
out
ins
cmp
sub
pop
jbe
pop
dec
cli
push
imul
pop
int
xor
inc
adc
enter
pop
outs
popf
inc
mov
aas
sbb
(bad)
enter
in
fbld
lds
sub
pop
into
push
mov
xchg
sub
jp
add
int
inc
outs
sbb
mov
cs
mov
adc
fst
test
jecxz
movs
nop
sar
xlat
xchg
jns
push
cmp
xor
mov
mov
mov
push
xchg
push
xor
shl
lods
and
mov
push
dec
inc
cmp
stos
fdiv
lock
pop
leave
ret
out
pop
out
xchg
push
cmp
sbb
push
pop
imul
call
inc
repnz
movs
add
jle
popf
fcmovne
test
and
cwde
shl
dec
jl
xor
jno
jl
dec
sub
out
sbb
imul
cwde
daa
jb
cwde
out
inc
dec
sahf
sbb
dec
push
int3
sar
bound
inc
repnz
sbb
scas
push
fldlg2
call
jge
xlat
push
cmps
push
in
mov
bsf
sub
push
push
cmp
jbe
aad
sbb
and
out
sbb
aam
call
movs
push
outs
adc
dec
jb
jg
nop
pop
or
cmc
jmp
retf
call
call
jno
cwde
out
pop
imul
movs
test
aaa
pop
jl
mov
push
ja
in
imul
out
sub
adc
and
fmul
test
mov
lds
rcr
movs
cli
and
mov
sub
xchg
mov
adc
pop
or
icebp
adc
mov
loope
mov
jno
in
xor
mov
jg
rol
xor
mov
sub
inc
pusha
out
leave
dec
push
cld
lock
lea
push
inc
aas
(bad)
data16
add
out
pushf
loopne
ins
mov
add
retf
push
sbb
mov
stos
(bad)
rcr
cld
in
in
and
int3
add
pushf
cdq
call
adc
jp
addr16
or
js
jg
inc
sbb
repz
xchg
sub
js
and
cmp
jno
aam
pop
shr
rcl
inc
jecxz
arpl
mov
jnp
leave
sahf
pushf
inc
scas
into
mov
push
loopne
xchg
push
pop
and
ret
mov
cdq
cli
sar
mov
push
test
in
push
mov
pop
int3
stos
mov
ins
pop
mov
sbb
rcl
gs
adc
or
ja
cwde
cmp
adc
jbe
or
lods
data16
cs
ds
sbb
out
das
in
test
int
shr
stc
adc
xchg
les
fdivr
ror
nop
add
out
test
pop
into
sbb
popa
jbe
out
scas
pop
sub
and
shl
inc
aad
idiv
push
pop
lahf
jg
std
call
sub
repz
loopne
into
nop
jnp
out
aas
rol
pop
fstp
xor
cld
ss
fldenv
in
xchg
stos
test
fisub
nop
push
(bad)
xchg
mov
pushf
mov
xchg
jb
add
xor
sahf
adc
das
pop
mov
cdq
aam
(bad)
stos
sbb
mov
in
hlt
push
jp
xchg
adc
pop
popa
push
sti
pop
dec
dec
sbb
aas
and
call
popf
xor
in
out
leave
and
jp
leave
cmp
icebp
test
mov
pop
loop
push
loopne
cmp
enter
pop
or
or
ret
outs
adc
or
pop
mov
pop
jg
pop
add
mov
add
mov
test
push
mov
sub
pop
push
xchg
test
push
adc
aad
mov
cmp
or
dec
movs
pop
mov
test
cli
repnz
call
std
fwait
push
enter
jmp
add
cli
out
mov
mov
pop
je
mov
jecxz
call
(bad)
cmc
lock
ret
sahf
sbb
rcl
mov
clc
out
push
add
push
std
mov
aaa
ret
(bad)
jne
or
hlt
jg
adc
into
mov
inc
mov
(bad)
scas
ins
lods
dec
fcmovnb
jg
aam
xchg
shl
push
cmps
not
dec
add
nop
int3
retf
mov
jns
lods
mov
outs
jle
sub
sbb
nop
add
xchg
push
mov
gs
or
cmps
adc
cdq
jo
pop
fldcw
xor
or
mov
xchg
mov
mov
aad
dec
mov
pop
mov
cmp
fld
nop
jmp
loopne
lahf
mov
jl
ss
lds
sub
popa
mov
pushf
ins
add
mov
outs
pop
push
imul
or
adc
cmp
sbb
add
leave
in
xor
int3
cmps
xor
lahf
dec
push
sbb
adc
in
add
dec
iret
jae
push
xchg
imul
push
or
shl
or
adc
out
and
bound
je
inc
ror
dec
int3
adc
add
sub
push
mov
icebp
and
mov
mov
mov
cmp
inc
sub
enter
in
lahf
mov
fcomp
jmp
pushf
sti
fisub
loope
retf
adc
xor
(bad)
enter
pop
jmp
dec
push
pop
adc
sbb
sbb
xchg
dec
mov
push
ds
jmp
xor
cmp
sub
(bad)
adc
pop
and
cld
call
in
push
jge
popf
jge
test
ror
mov
jb
sbb
std
test
jmp
out
fwait
jl
sub
movs
test
iret
cmp
mov
repz
(bad)
sbb
test
mov
pop
movs
fst
pop
sti
push
sbb
ds
and
jl
hlt
sahf
das
cmp
fs
(bad)
jb
stc
fs
xor
outs
xchg
fst
out
movs
sahf
add
xor
jmp
xor
add
or
ror
rcl
pop
pop
int3
loopne
cmps
enter
pop
fst
pop
jmp
jmp
and
and
das
fdiv
out
mov
sub
cmc
gs
mov
sub
pop
or
lods
sub
aaa
aad
pop
(bad)
pushf
mov
dec
faddp
scas
push
xchg
adc
(bad)
(bad)
inc
jg
test
aad
aam
mov
jo
add
fs
mov
jb
and
cmc
xor
retf
dec
mov
aaa
cmp
mov
stos
and
fstp
(bad)
cld
jge
sar
pop
dec
xchg
cmps
ss
mov
cwde
lahf
loopne
lock
out
adc
jl
in
in
mov
in
inc
aam
or
push
loopne
mov
adc
inc
or
and
frstpm(287
das
adc
mov
push
(bad)
fwait
and
push
jl
lods
jl
push
and
sub
daa
mov
in
cs
xor
int
test
mov
dec
fld
mov
xchg
sub
sub
push
popa
test
cs
cmc
or
xchg
jmp
cmp
loopne
and
dec
fldcw
xor
jb
push
push
pop
push
(bad)
clc
xchg
jb
pop
stos
std
sahf
xor
or
in
inc
outs
jle
stos
out
adc
int
out
sbb
and
xlat
sub
fs
cmps
sub
(bad)
fcmovnb
hlt
cmp
push
add
test
lahf
jmp
imul
dec
scas
mov
jge
out
add
mov
xlat
iret
cdq
arpl
jg
xchg
mov
test
pop
(bad)
jb
mov
fsub
ins
sub
xchg
les
sbb
pop
packsswb
(bad)
outs
shl
(bad)
mov
aam
pop
loop
add
iret
xor
es
rcl
mov
loope
stos
fnstsw
mov
push
(bad)
xor
xchg
gs
sub
scas
ins
add
xchg
jb
cmps
lahf
mov
fcom
or
dec
add
jle
(bad)
and
sbb
repz
fisubr
ror
popf
add
outs
aaa
pop
xchg
sbb
ss
dec
jl
repz
xor
xchg
inc
out
jmp
jl
xor
idiv
hlt
ja
repnz
mov
jge
adc
leave
pop
mov
inc
je
jp
(bad)
or
outs
test
xor
loope
jmp
movs
push
jmp
cmp
cli
sbb
adc
shl
mov
dec
rcl
aam
dec
add
ins
icebp
push
mov
ret
adc
das
xor
mov
daa
xchg
adc
mov
inc
pinsrw
mov
sbb
das
inc
repz
in
inc
ja
push
xchg
dec
mov
adc
dec
scas
call
sahf
xor
jg
push
sahf
test
movs
js
xor
popa
lods
out
inc
scas
xor
push
jecxz
xor
xor
shl
movs
jb
loop
aam
mov
cwde
ret
rcl
pmullw
inc
or
cmp
jecxz
xchg
or
mov
pop
repnz
sar
movs
movs
retf
fist
xchg
adc
fwait
rcr
in
gs
sbb
jl
mov
add
xor
test
gs
add
je
xor
and
repz
cs
sbb
mov
movs
dec
mov
aam
sbb
add
movs
xchg
jecxz
add
sbb
sar
jp
add
add
aas
sbb
cmc
push
cld
je
les
and
xchg
cmp
jecxz
sub
stos
scas
xor
xlat
dec
aaa
push
jnp
fwait
shl
push
adc
leave
pop
inc
call
sub
lock
(bad)
adc
test
sub
pop
dec
add
push
lahf
mov
loop
push
mov
jno
cmps
lock
add
sub
(bad)
stc
std
in
shl
fbstp
mov
into
cmp
xor
cmps
xchg
or
pop
mov
xor
jbe
(bad)
mov
and
inc
movs
fidiv
jnp
outs
jge
into
cmp
mov
(bad)
sub
retf
das
nop
cmps
fnstsw
push
push
mov
daa
fld
daa
stc
cmp
jae
rcr
mov
je
dec
scas
inc
mov
xor
jo
repz
loope
xlat
into
adc
mov
xor
lock
or
mov
jg
mov
pop
dec
pop
int3
(bad)
in
test
data16
xchg
dec
pop
xor
pop
shl
adc
fnsave
(bad)
rcl
movs
xchg
test
clc
xchg
add
mov
nop
add
rcl
cmps
lea
push
xor
iret
lock
pop
popf
adc
imul
xchg
inc
iret
dec
mov
add
sbb
imul
sub
mov
mov
ret
fstp
xchg
mov
pop
xchg
mov
mov
adc
sub
dec
mov
mov
dec
push
mov
sbb
push
mov
sbb
(bad)
ss
add
shr
mov
stos
pop
xor
or
lds
mov
js
stos
loopne
ret
stc
ins
(bad)
retf
bound
inc
pop
mov
les
mov
mov
push
pop
aaa
pushf
pusha
or
ret
jns
fs
or
or
jns
loopne
push
pop
add
dec
xlat
out
aaa
xor
add
rcr
add
into
cmp
test
adc
adc
and
adc
dec
out
call
stos
dec
loop
add
jecxz
sbb
mov
inc
mov
sbb
jb
xchg
(bad)
push
inc
mov
adc
mov
or
sbb
xchg
enter
xchg
pushf
(bad)
test
cmp
ds
jmp
mov
fnstsw
aas
pop
pop
jns
sti
push
mov
imul
dec
retf
jae
mov
daa
jo
idiv
jb
std
mov
push
mov
adc
pop
push
dec
or
and
xchg
enter
clc
shl
sqrtps
adc
adc
jle
aad
lds
(bad)
mov
xor
aas
ret
ins
push
aaa
jl
mov
sbb
mov
cdq
jge
lods
outs
addr16
cli
imul
dec
jmp
mov
mov
movs
mov
stc
cmp
ror
arpl
fimul
jp
xchg
pop
(bad)
pop
mov
sbb
adc
pop
aad
push
push
dec
popf
mov
popf
add
pop
or
sbb
pop
add
daa
iret
rcl
xor
scas
mov
pop
sbb
jge
adc
int
test
inc
scas
lock
push
mov
jne
ins
push
inc
add
dec
inc
mov
fmul
xor
cwde
popf
(bad)
mov
nop
xor
pushf
cmps
mov
in
mov
aas
fmul
xlat
cwde
arpl
push
push
sub
xchg
(bad)
sbb
add
sub
fcmove
pop
imul
jno
(bad)
cmp
outs
sub
in
push
sub
xor
jg
data16
(bad)
imul
cmp
or
shl
rcl
pop
add
mov
fwait
jg
or
mov
push
jg
push
mov
outs
(bad)
jg
cmp
mov
inc
lahf
mov
inc
cmp
and
mov
or
lahf
fstp
dec
push
std
retf
sub
aas
int3
and
or
repz
or
and
sbb
cmps
inc
mov
push
(bad)
not
in
mov
ins
and
or
or
in
movs
xor
add
retf
sub
xchg
sub
xor
add
jmp
(bad)
aaa
xor
and
add
(bad)
sub
test
aam
mov
cli
in
cmp
out
(bad)
icebp
repz
mov
jg
(bad)
fwait
push
es
loope
fimul
cmps
les
test
repz
mov
xor
xchg
sbb
adc
pop
push
sub
loop
lods
inc
outs
cmp
aam
xchg
sub
push
mov
jg
frstor
fcmovbe
dec
xchg
mov
(bad)
leave
jmp
push
std
movs
mov
xchg
push
mov
ds
int3
test
inc
lahf
das
inc
jge
mov
cmc
mov
push
or
rcl
jno
fisubr
sbb
in
pop
jg
push
test
retf
retf
jbe
shl
imul
cmp
cmp
loopne
adc
movs
and
mov
pop
ss
cmc
mov
xor
adc
sub
adc
scas
loope
mov
push
ds
cmp
fcom
dec
out
cmps
fcomp
lods
xor
xor
push
dec
dec
mov
mov
loope
int
dec
add
sbb
pop
mov
dec
or
fdivr
stos
out
scas
pop
pop
cs
pop
pop
mov
hlt
mov
cmp
jle
mov
or
pop
bound
xlat
sub
mov
(bad)
mov
push
scas
cmp
std
stos
inc
lds
scas
movs
(bad)
ins
mov
jb
lods
jo
push
mov
push
pop
sub
xor
mov
cmps
sub
sub
out
lock
mov
bnd
xor
sbb
adc
(bad)
loope
mov
(bad)
push
leave
scas
into
add
add
sbb
jp
xor
shr
ins
xchg
inc
stos
ss
inc
mov
xor
jne
and
call
sahf
push
fs
cmp
ret
dec
sub
dec
jl
sahf
jp
jecxz
mov
in
in
test
push
ins
repnz
mov
mov
sti
shl
adc
xchg
lea
cmp
xchg
hlt
jae
xor
xchg
outs
pop
out
jne
cmp
lahf
scas
popa
mov
test
or
inc
cmp
sub
sub
dec
mov
popf
(bad)
cld
lods
fs
out
scas
in
pop
xchg
pop
mov
push
sbb
js
xchg
adc
jns
leave
xchg
sub
nop
inc
mov
pop
cmp
push
leave
sub
mov
push
push
movs
inc
popa
pop
and
jbe
shl
ss
jp
ja
pop
aad
pop
xor
or
sub
push
add
adc
push
jo
or
or
adc
jno
call
outs
icebp
mov
sar
inc
es
push
mov
adc
push
inc
into
cmp
enter
nop
jnp
(bad)
sub
sub
inc
or
sbb
scas
dec
xor
test
mov
xchg
imul
or
sub
push
xor
mov
mov
rcr
dec
cmp
movs
sbb
cmp
movs
xor
scas
(bad)
fisttp
and
xchg
in
cld
or
xor
xchg
inc
scas
ds
out
sub
gs
cmp
push
mov
jb
out
pushf
adc
ins
mov
shl
push
inc
inc
jb
mov
xchg
sub
dec
ror
or
mov
enter
leave
pop
jmp
scas
fwait
jecxz
js
dec
dec
adc
in
cmp
in
mov
retf
lea
cmp
lods
and
lsl
xchg
jns
cmp
cmp
pop
cmp
aam
jge
call
ins
add
je
lods
cld
add
imul
push
sub
and
je
pop
enter
jns
bound
dec
sub
mov
adc
lods
inc
inc
inc
xchg
cwde
push
test
push
mov
and
xchg
xchg
mov
xchg
rol
fsub
test
ins
lods
mov
or
cmp
clc
mov
push
loope
xor
retf
fdiv
add
fnsetpm(287
jp
dec
mov
std
xlat
fsubp
es
retf
nop
inc
imul
add
into
jae
sbb
sar
adc
adc
shl
pushf
ret
test
and
jno
movs
mov
cmp
xchg
arpl
sbb
pop
adc
repnz
adc
sti
aad
cld
inc
out
push
sbb
mov
jle
xor
push
imul
sbb
dec
cmp
push
dec
sbb
in
pusha
jne
mov
or
test
or
in
icebp
rol
(bad)
pushf
push
inc
xor
mov
mov
rol
jmp
cmc
repnz
push
test
call
movs
xor
mov
jge
cs
ins
and
jmp
xor
shl
xor
pushf
xor
je
movs
idiv
in
mov
scas
add
pop
xchg
xor
fnsave
and
ret
and
cwde
inc
fwait
pop
sub
sbb
mov
xor
xlat
push
mov
vandps
sbb
(bad)
popw
rol
mov
(bad)
mov
loope
mov
sbb
sti
aaa
cli
sbb
es
jle
mov
mov
mov
nop
lods
and
xchg
in
xchg
mov
and
nop
cs
icebp
movs
sub
jg
les
adc
dec
push
imul
sbb
dec
out
inc
popa
push
mov
dec
jmp
sbb
idiv
push
mov
cmps
push
test
jb
test
in
push
ret
fimul
xlat
popf
(bad)
into
fld
xchg
sbb
and
ret
nop
inc
addr16
and
and
dec
sbb
shr
fild
adc
es
sub
cmp
pop
adc
pop
dec
add
ja
sbb
bound
iret
mov
xchg
sub
push
inc
fistp
imul
nop
frstor
repz
mov
test
pop
out
(bad)
xor
(bad)
jae
adc
xor
jae
fchs
push
mov
cmps
cmps
pop
pop
movs
cmp
sar
dec
dec
fcom
pop
dec
scas
mov
jp
retf
shl
retf
pop
push
or
push
mov
inc
(bad)
scas
dec
push
push
js
add
pop
(bad)
mov
push
leave
inc
add
sub
fidivr
fnsave
inc
push
add
xchg
ja
push
xor
mov
xchg
sub
pop
sub
cld
push
rcr
inc
push
cmp
cmps
stos
pop
dec
jecxz
fadd
(bad)
ins
mov
fs
daa
dec
sub
push
cmps
scas
mov
sbb
and
sbb
push
loop
mov
sti
mov
repz
popa
push
pop
adc
and
loopne
addr16
cmps
cmp
daa
mov
or
pop
out
(bad)
cmp
or
cmp
jl
add
push
cdq
inc
movs
mov
ret
jb
cmp
repnz
icebp
xor
jno
ret
jl
and
inc
cmp
rcl
pushf
xchg
test
add
cmps
inc
push
jge
repz
and
pop
imul
loope
pusha
push
jmp
lock
mov
mov
mov
jl
movs
or
jle
dec
cmp
scas
retf
mov
popf
aad
rcl
in
push
out
pusha
int
dec
jle
mov
scas
xchg
cmp
fsub
fstp
pusha
arpl
icebp
inc
mov
dec
scas
inc
push
stos
push
sbb
je
push
int3
mov
and
and
xor
mov
add
movs
in
add
mov
jb
es
pop
pop
inc
jmp
pop
ins
adc
jnp
cmp
and
je
xchg
push
push
xchg
lahf
jo
pop
cld
and
int
jno
add
hlt
mov
pop
mov
out
push
mov
mov
sbb
out
into
arpl
addr16
movzx
cld
mov
pop
loop
gs
pop
jo
push
clc
fidiv
push
mov
(bad)
out
ds
test
and
add
jecxz
pop
test
aam
(bad)
sub
add
inc
fsubr
xor
adc
push
dec
gs
cmp
jge
cmp
lds
cmp
out
test
in
adc
and
xchg
push
add
push
mov
pop
pop
jmp
nop
loopne
push
aad
add
retf
cwde
mov
aas
into
cmp
mul
outs
jnp
jae
mov
inc
and
lods
sub
push
test
jp
(bad)
push
cmp
and
(bad)
into
push
ja
mov
jg
dec
mov
ins
pusha
inc
out
sbb
bound
mov
push
das
fdivr
inc
or
jecxz
mov
mov
jmp
repz
pop
xor
and
gs
movs
push
icebp
jmp
add
sbb
push
inc
aad
ficomp
movs
sbb
mov
repnz
sbb
mov
sub
rcr
test
outs
mov
add
sub
cmp
ror
inc
adc
(bad)
cwde
mov
xlat
sub
mov
sbb
shl
mov
shl
pop
pop
and
es
jb
out
sbb
cmp
in
jge
pop
push
iret
pop
jne
or
mov
es
js
ds
inc
jl
fisttp
jnp
push
jmp
mov
and
pop
adc
sbb
and
enter
rcl
sub
nop
mov
aaa
add
daa
out
cs
cpuid
or
aam
pop
fcom
inc
adc
out
xor
movs
or
pop
or
cmps
aam
aaa
mov
pop
test
std
retf
xor
les
in
and
jno
sbb
sti
jl
push
aam
lahf
les
adc
int
iret
out
add
mov
mov
aam
jbe
ds
mov
or
js
out
jmp
xor
inc
gs
push
in
dec
aas
(bad)
and
scas
sub
ins
(bad)
mov
xor
mov
inc
pop
jle
mov
lahf
loopne
jle
call
stc
in
mov
lods
data16
push
cmp
iret
adc
xchg
jnp
xlat
bound
mov
add
into
mov
sar
sahf
jg
je
sub
(bad)
dec
fsubr
sub
jp
aas
outs
mov
ins
jmp
ja
stos
mov
jae
ror
pop
fstp
push
dec
push
push
imul
mov
rol
sbb
test
jne
mov
jg
jb
lods
aad
sbb
arpl
xchg
mov
push
popa
dec
xchg
popa
xchg
xor
je
inc
fldcw
push
push
xor
aas
scas
xor
xchg
test
xchg
mov
jl
dec
inc
add
jge
push
or
mov
ins
in
stos
cmc
adc
push
repnz
xchg
test
dec
mov
or
stos
mov
mov
arpl
mov
mov
cmps
pop
rcl
outs
mov
int
fsubp
xor
dec
push
xor
mov
jno
inc
xor
sub
stos
xor
xchg
clc
int3
xchg
retf
popf
mov
adc
sbb
out
jno
gs
in
push
adc
dec
sub
ja
dec
xor
fild
call
aam
retf
mov
call
daa
sbb
xor
jnp
in
add
push
jno
lahf
inc
push
les
movs
pop
pop
shr
mov
mov
cli
in
dec
jmp
xchg
ins
and
push
cld
sbb
xchg
imul
mov
clc
int3
ret
repnz
fcmove
jge
sahf
sub
rcr
mov
sbb
frstor
cmps
sbb
mov
push
cs
mov
pop
imul
sbb
stos
fwait
jl
shr
xor
sub
mov
push
xor
sbb
btc
or
inc
ret
add
mov
aas
mov
popa
jle
sub
sub
pop
ds
lods
pop
mov
xchg
pushf
ins
smsw
and
not
aas
stos
mov
jle
mov
fcmove
inc
cmps
stc
jle
xchg
push
push
cmc
jle
ss
(bad)
mov
dec
and
pop
lock
mov
push
and
mov
xchg
enter
out
xchg
pop
adc
jo
jmp
adc
lods
sar
dec
std
(bad)
sub
sbb
ins
stos
and
rol
sub
outs
addr16
je
loopne
or
jmp
sbb
out
mov
es
dec
mov
cmp
push
sub
shl
call
mov
push
daa
leave
add
cmp
push
mov
add
loop
test
mov
shl
adc
jl
or
imul
sti
pop
mov
jmp
(bad)
inc
push
mul
pop
inc
mov
mov
push
inc
(bad)
cmp
pusha
pop
and
adc
push
ds
or
sbb
push
push
dec
cdq
stc
daa
cmps
arpl
sbb
test
std
jae
jmp
and
retf
and
mov
and
xchg
mov
push
pop
pop
ss
adc
ret
ret
adc
inc
dec
mov
cmp
aad
xchg
in
push
sub
jge
fs
push
mov
out
sub
push
rcl
scas
loope
cmps
mov
jp
imul
xchg
adc
and
xor
pop
adc
pop
adc
fsubr
mov
inc
je
jmp
adc
arpl
aam
sti
inc
mov
sbb
jecxz
fwait
test
mov
inc
ret
pop
movs
nop
jp
push
or
daa
sbb
pusha
aam
pop
add
in
mov
jnp
movs
fadd
xor
out
rcr
fmul
outs
test
jmp
fwait
add
push
mov
stos
inc
xor
lahf
jp
rcl
cmp
out
daa
jnp
cmps
loope
mov
xchg
cmp
clc
or
mov
int3
sbb
mov
stc
jecxz
dec
xchg
inc
jne
inc
cmp
and
push
inc
xchg
ror
adc
fist
fs
dec
mov
or
imul
aaa
or
rcr
cmps
sbb
dec
pop
mov
add
mov
xor
inc
and
dec
push
jle
addr16
fwait
lods
jae
or
fnstcw
or
jg
push
cmp
mov
gs
movs
(bad)
pushf
ja
mov
sub
sahf
mov
push
jmp
xchg
or
mov
retf
(bad)
xor
dec
retf
push
mov
pusha
sbb
jg
iret
ja
stc
jns
ret
push
xchg
popa
dec
xor
mov
sti
xchg
or
movs
or
in
and
mov
(bad)
jbe
inc
jnp
jnp
cmp
push
outs
jne
aad
pushf
enter
outs
sar
xchg
jmp
xchg
or
outs
jbe
xchg
hlt
xchg
push
mov
mov
lds
pop
push
popf
ds
xchg
cmp
(bad)
fld
rcl
xchg
dec
push
mov
in
or
cmp
or
aad
xchg
iret
fdivr
sbb
add
push
and
add
mov
push
jne
jno
pop
inc
sub
pop
dec
adc
mov
jns
mov
fstp
shl
fwait
test
jo
lods
mov
mov
sub
ins
mov
bnd
xlat
jmp
mov
arpl
sbb
mov
test
mov
ins
mov
xchg
imul
imul
cli
mov
xor
mov
sbb
xchg
pop
in
push
iret
mov
aam
ins
popa
xchg
or
adc
repnz
or
cdq
push
or
pop
pop
xchg
scas
inc
xor
cmps
push
jae
(bad)
sbb
cmp
gs
test
cmps
mov
fsubr
call
out
sub
mov
mov
sub
xchg
outs
add
pop
xchg
inc
jl
mov
pcmpeqw
ret
xor
mov
jmp
sub
invd
and
lods
mov
in
push
sbb
(bad)
mul
mov
xchg
test
mov
clts
loopne
dec
outs
sub
ret
fstp
pop
cs
dec
jmp
mov
add
popa
jnp
out
mov
push
sbb
(bad)
pop
ret
retf
ficom
out
mov
jmp
retf
xchg
clc
(bad)
cmp
dec
cmp
popa
mov
xchg
call
xor
sbb
pop
xchg
and
jno
dec
mov
xor
popa
cmps
jne
sar
enter
push
dec
fistp
or
pop
jp
push
aaa
(bad)
(bad)
aaa
imul
shl
jmp
fcom
jo
mov
sub
rcl
add
adc
adc
mov
xchg
push
sub
idiv
pop
cld
mov
jl
int3
add
adc
cli
cmp
test
mov
scas
adc
rol
pop
repnz
cdq
cmp
jmp
in
adc
std
push
aad
ror
popf
cmp
add
xchg
push
mov
xor
add
dec
pop
into
sub
div
mov
bound
int3
(bad)
adc
lock
cvtps2pi
mov
movs
mov
xor
outs
push
jns
adc
in
pop
int
sub
mov
rol
dec
sbb
sbb
test
adc
out
jl
inc
adc
dec
mov
test
fcomp
out
sbb
jbe
push
dec
(bad)
aad
xlat
jns
jp
sti
pop
fstp
bnd
popf
sbb
in
or
jmp
and
fsub
lds
cmp
aam
ret
dec
out
adc
add
fs
push
out
lods
inc
and
hlt
out
push
jl
push
fisub
das
pop
inc
xchg
mov
call
pop
mov
sub
imul
xchg
mov
or
xchg
pop
shl
rcr
add
xchg
adc
out
mov
out
mov
mov
xor
pop
or
jne
dec
jae
xor
add
in
xchg
add
shl
cmps
(bad)
xor
iret
dec
push
push
xchg
fsubr
imul
and
les
iret
dec
or
cli
xor
pop
dec
jb
sub
sub
jno
sub
jno
cs
enter
sbb
ss
dec
imul
jecxz
mov
mov
mov
sete
scas
ss
cmp
(bad)
aaa
ss
pop
out
in
adc
push
mov
mov
gs
pusha
enter
loopne
jl
in
jae
add
neg
mov
idiv
pop
sbb
sub
lods
in
xchg
push
mov
xchg
into
rol
inc
xchg
imul
mov
ja
inc
add
or
rcl
pop
pushf
jb
jg
daa
(bad)
movs
dec
(bad)
cli
and
arpl
je
shl
add
int3
stos
jno
movs
and
push
pop
(bad)
std
cmp
gs
sbb
out
and
in
cmc
nop
mov
or
frstor
jmp
pop
and
sub
aad
sub
jecxz
stos
and
in
xor
pop
fyl2xp1
mov
cmp
sahf
cmp
mov
push
es
add
sbb
popa
or
loopne
push
lods
call
or
mov
outs
cmp
and
jmp
mov
xlat
inc
fistp
iret
jle
xchg
push
push
les
pop
mov
mov
scas
pop
(bad)
stos
mov
popa
dec
mov
in
stos
inc
adc
nop
add
xchg
fs
mov
push
shr
sahf
rcl
cli
div
popa
sbb
test
pop
push
inc
in
imul
enter
dec
das
je
mov
mov
stc
loope
add
cmp
ret
dec
dec
dec
push
out
push
fst
movs
xor
stos
lods
mov
in
sub
jo
and
push
push
mov
add
fiadd
sbb
mov
and
or
aam
jne
mov
mov
popf
inc
or
aas
adc
ja
aam
add
scas
and
aam
arpl
push
test
mov
mov
movs
hlt
cmc
sbb
inc
or
mov
and
loope
push
mov
retf
cmp
mov
stc
rol
xchg
pop
daa
int
sbb
movs
cld
into
je
inc
inc
jb
ss
xor
lock
stc
jae
cmp
scas
push
sbb
aaa
cmp
fs
jle
idiv
addr16
mov
pop
mov
pusha
or
cmp
jmp
sbb
or
(bad)
fstp
mov
lock
sahf
sar
inc
fmul
adc
(bad)
sbb
les
out
jg
out
in
and
cmc
test
enter
sub
xchg
mov
push
nop
rcl
cmp
ja
sub
push
mov
inc
pop
add
dec
cli
aad
aam
popa
sbb
ss
das
xchg
jge
imul
arpl
inc
je
or
adc
mov
dec
fs
adc
popa
ja
xchg
mov
int3
and
fisub
and
pop
mov
push
mov
inc
test
pop
push
fisubr
int3
or
addr16
sub
scas
mov
lahf
arpl
sbb
cmp
and
add
ret
imul
mov
fwait
dec
inc
cmc
jle
inc
xor
or
adc
xchg
jl
ins
sbb
out
mov
lods
mov
mov
outs
inc
retf
xor
rol
sbb
jecxz
adc
jne
or
cmp
cmc
jb
inc
cmp
xchg
mov
xor
and
xchg
jecxz
pop
and
jp
ror
std
pop
daa
sub
add
add
add
mov
xchg
call
sbb
stos
aas
mov
or
daa
fcom
lods
dec
out
mov
inc
mov
inc
and
ins
xor
and
or
test
xchg
fcomp
jmp
icebp
inc
ins
push
popa
jbe
cmp
push
js
mov
cmp
pop
pop
mov
jge
xchg
clc
mov
and
and
gs
ds
cld
ficomp
sti
or
cmp
pop
movs
mov
or
jecxz
stos
jbe
dec
cdq
shl
call
dec
pop
add
movs
sbb
xor
and
dec
retf
imul
int3
adc
adc
push
add
lds
push
and
mov
punpckhwd
inc
mov
test
inc
fs
jmp
lods
retf
jb
into
add
and
cs
fld
jmp
sub
jmp
jnp
cmp
dec
dec
mov
je
add
mov
or
jbe
sub
stos
loop
and
mov
sub
push
sbb
ret
xchg
out
cmp
jge
repnz
into
push
mov
sub
fdivr
ins
pop
xchg
test
add
fwait
(bad)
lock
arpl
lods
hlt
retf
fsubr
jge
adc
inc
xor
lea
sar
daa
je
mov
outs
jo
fs
fstp
ins
mov
or
sar
fnstcw
pop
jb
bound
das
aaa
push
fwait
jae
or
retf
aam
mov
or
sbb
jne
(bad)
sub
push
and
pop
dec
pop
cmp
xchg
sub
xchg
adc
scas
aam
xchg
pop
mov
addr16
fwait
out
xor
mov
and
clc
pop
shl
mov
xrelease
add
jp
iret
repnz
(bad)
sahf
aas
jecxz
mov
dec
fnstsw
ret
xor
mov
imul
test
sbb
popa
(bad)
jo
jecxz
or
add
ret
xlat
test
hlt
xor
movaps
mov
jecxz
dec
mov
in
dec
cmps
lods
cmp
mov
cld
rcr
popf
out
popf
nop
outs
push
int
ret
add
daa
push
iret
scas
rol
sub
cmp
dec
ds
(bad)
gs
jecxz
dec
enter
or
pop
cdq
push
call
jae
das
cmp
pushf
shl
rcr
rol
mov
movs
mov
cli
mov
adc
mov
and
out
aas
mov
lahf
addr16
jle
shr
mov
push
clc
cdq
jmp
cld
ds
adc
cmp
xchg
push
push
js
retf
push
mov
sub
dec
add
loopne
and
mov
pop
jle
in
jne
xchg
jne
das
hlt
or
push
or
leave
push
inc
cdq
in
aas
rcr
jg
sbb
loop
pop
fmul
push
xchg
push
sub
mov
lods
aas
cmp
xchg
or
out
leave
test
pop
psrld
fmul
dec
inc
cmps
jb
mov
add
js
jno
imul
and
(bad)
mov
mov
les
mov
cmp
loope
pop
dec
dec
xchg
mov
mov
sub
mov
js
cmp
inc
mov
inc
cmp
xor
mov
push
lahf
mov
fisttp
adc
adc
in
pusha
leave
or
xchg
sbb
push
adc
nop
dec
dec
jl
adc
lods
std
and
into
add
push
push
call
clc
pop
jg
cmp
out
fsub
scas
or
adc
push
mov
test
inc
ds
and
mov
scas
rol
push
mov
xchg
cld
sahf
add
adc
push
add
clc
fmul
adc
and
dec
adc
call
mov
dec
dec
call
push
and
mov
fldenv
setg
cmp
pop
push
fxch
sub
out
cmp
and
xchg
pop
call
or
scas
das
xchg
push
pop
call
jl
mov
mov
push
xchg
and
mul
jle
mov
cmp
or
xor
pop
(bad)
dec
in
(bad)
out
sbb
mov
dec
dec
pusha
or
movs
xchg
bound
cmps
sub
add
icebp
addr16
push
push
aam
sar
shr
or
ret
idiv
mov
stos
mov
pop
cmps
adc
es
in
and
popa
mov
in
lock
jae
cld
or
inc
iret
xchg
inc
mov
ss
add
fld
add
sbb
movs
mov
popf
xchg
(bad)
fistp
cwde
aam
jge
mov
pop
aad
mov
call
mov
mov
dec
inc
pop
icebp
js
das
addr16
cmp
test
push
and
int3
fdiv
popa
std
das
pop
lods
mov
and
hlt
(bad)
add
dec
push
je
nop
and
jno
mov
add
mov
jp
jmp
(bad)
cmp
call
rol
neg
movs
add
fisubr
xor
js
(bad)
popa
(bad)
retf
jg
xchg
dec
or
lods
and
sub
(bad)
jmp
popa
pushf
fistp
sub
test
and
repnz
icebp
add
ficomp
cwde
and
int
mov
addr16
std
mov
mov
test
sqrtps
jb
pop
ja
scas
fnstenv
data16
cmp
ja
loop
iret
gs
(bad)
int
fild
js
mov
mov
js
xor
idiv
add
xchg
jl
hlt
mov
inc
js
xor
rol
ret
retf
dec
xlat
inc
mov
leave
call
lahf
add
(bad)
in
mov
(bad)
jge
mov
ss
ja
shl
and
test
adc
dec
or
pop
cmps
mov
lahf
adc
jo
pusha
daa
mov
(bad)
loope
sahf
mov
or
mul
ffreep
pop
mov
nop
rol
and
adc
ins
pcmpgtb
popf
in
and
jg
fisubr
aad
sbb
(bad)
icebp
shl
pusha
mov
push
and
jg
cli
je
xor
jns
(bad)
repz
and
dec
ret
je
out
hlt
dec
stc
ja
adc
adc
rcl
xchg
cmp
clc
add
or
sub
fcom
rol
xlat
inc
xchg
jnp
cld
iret
arpl
push
cmps
dec
retf
sub
icebp
loope
sbb
test
int3
aas
outs
imul
mov
dec
xor
adc
daa
aam
mov
shl
das
xor
(bad)
pop
fwait
push
ficomp
bound
gs
sub
jbe
lea
add
call
not
imul
push
scas
fsub
fdivp
rep
popf
scas
mov
enter
xchg
cwde
stc
cld
popa
fwait
push
or
in
pop
or
or
dec
in
sub
std
movs
bound
cmp
test
jae
jno
bnd
push
jl
(bad)
or
or
ins
(bad)
fdivr
scas
test
lods
sahf
push
inc
rol
mov
mov
int3
inc
inc
fdiv
aad
pop
cli
loope
fwait
out
sub
mov
scas
or
sbb
bound
fs
inc
inc
mov
xlat
jbe
test
pop
jl
adc
mov
pop
lea
or
push
mov
stc
mov
movs
call
aaa
xchg
pop
add
mov
sub
call
pop
fldenv
test
fimul
mov
push
std
loope
int
push
adc
test
das
and
js
cmp
mov
xchg
jp
jge
jge
push
sub
iret
or
mov
scas
ror
std
nop
mov
ins
shr
ins
mov
daa
addr16
xchg
shl
std
or
(bad)
xor
int
and
mov
pop
stos
jmp
pusha
mov
or
addr16
xchg
test
inc
mov
jge
add
call
dec
enter
mov
or
movs
pusha
push
js
xor
outs
mov
mov
inc
mov
rcl
cmp
jmp
jecxz
retf
sbb
inc
dec
or
lds
push
jnp
adc
pop
mov
js
(bad)
rol
dec
mov
push
outs
div
push
jae
pop
movs
movs
sub
ins
(bad)
outs
sti
dec
repnz
xchg
mul
mov
das
xchg
mov
jl
sbb
push
pop
je
pushf
cmc
aaa
mov
push
mov
cmp
pop
sahf
push
(bad)
lea
or
jno
enter
mov
mov
xchg
loop
addr16
jge
push
mov
mov
imul
inc
pushf
cwde
jmp
call
pop
xor
(bad)
jmp
fwait
mov
fsubr
cmc
mov
ja
mov
mov
and
xchg
mov
push
test
daa
push
mov
adc
jne
loop
sti
in
mov
lahf
pop
loope
imul
jge
sbb
push
in
std
rol
sub
mov
adc
in
jns
xor
mov
pop
pop
ins
test
inc
mov
jne
outs
xchg
xchg
stos
cdq
nop
push
mov
push
outs
xchg
mov
mov
push
adc
push
sub
adc
or
adc
xor
inc
push
(bad)
cli
jae
inc
aad
call
sbb
cli
in
adc
repz
imul
push
pop
dec
addr16
pop
mov
pop
out
sbb
ins
and
test
inc
cmp
jmp
pop
mov
ret
xor
dec
and
das
mov
push
ja
dec
arpl
cld
xchg
fnstsw
scas
popf
sub
jl
cld
pop
or
and
ret
aam
scas
(bad)
mov
mov
mov
jmp
jno
xor
push
cdq
inc
mov
xor
not
mov
sbb
mov
push
jbe
fldcw
out
bound
lea
dec
cwde
enter
je
jns
ficomp
call
jmp
pushf
pop
pop
inc
jo
aad
and
jb
fisubr
mov
jl
ins
jns
cwde
jl
adc
inc
fimul
pop
addr16
int3
jns
and
(bad)
adc
pushf
dec
pop
mov
daa
xchg
enter
mov
cmp
fptan
js
push
pop
(bad)
mov
xchg
push
xlat
pushf
aaa
xchg
mov
sbb
or
xor
icebp
or
adc
out
jge
gs
popa
jnp
clc
(bad)
in
arpl
push
jo
fistp
fdivr
mov
dec
idiv
pop
jp
push
int3
nop
ins
iret
int
ret
dec
add
jecxz
push
adc
popf
js
jne
mov
js
aad
or
mov
add
std
fdivr
jbe
xor
ret
sub
mov
lock
pop
inc
sbb
ss
sbb
out
out
scas
sti
ds
push
loop
test
out
fimul
push
jns
ja
sub
add
scas
add
mov
iret
mov
xor
jns
mov
retf
jmp
pop
scas
xchg
leave
cmpps
pop
mov
jl
xlat
jl
jae
aaa
and
out
std
fstp
mov
mov
das
push
push
in
in
stos
pop
push
stos
pop
xor
es
and
push
jmp
test
xchg
cmps
jmp
stos
xchg
cmp
ror
sbb
(bad)
fimul
push
mov
ins
mov
adc
mov
movs
out
imul
bound
push
inc
ja
and
adc
xlat
jmp
loopne
cli
dec
xchg
data16
rol
retf
out
(bad)
inc
xor
aam
stos
retf
pop
pop
mov
std
mov
mov
test
cmp
jno
mov
call
mov
mov
xor
pusha
pop
sti
into
scas
push
or
and
and
cmp
add
rcl
sbb
and
jnp
pop
mov
imul
stc
mov
mov
push
ss
cmps
pop
inc
sub
push
mov
and
dec
out
pop
inc
test
shl
retf
inc
mov
bnd
aas
mov
dec
sub
add
mov
adc
jp
jge
fidiv
ss
scas
or
xchg
repz
xor
xchg
xor
or
push
scas
jecxz
or
retf
jle
iretw
call
pop
jbe
dec
jecxz
fld
pushf
int
or
leave
mov
push
rcr
jmp
lods
loope
nop
push
adc
cmps
(bad)
pusha
dec
inc
mov
adc
rcl
gs
jb
xchg
dec
aad
jge
repz
cs
popf
add
cmp
xchg
fcomp
(bad)
sbb
call
(bad)
push
inc
mov
sbb
popf
jns
stos
inc
inc
fsub
jo
clc
aam
std
jg
pop
in
dec
adc
sub
int
xchg
movs
bound
sub
dec
faddp
pop
mov
sub
popf
and
lahf
aam
movs
ret
pop
xchg
gs
rol
sbb
(bad)
(bad)
sbb
js
or
and
push
inc
adc
push
jbe
cmp
int3
push
sbb
inc
(bad)
rcl
ins
push
adc
fmul
(bad)
rcr
gs
and
dec
sub
jb
and
jl
addr16
out
xchg
xor
pop
push
(bad)
icebp
lds
and
xchg
pop
dec
in
sbb
sbb
push
xor
add
and
das
sbb
addr16
jnp
push
dec
and
cmp
jg
lds
xchg
ss
loope
fldcw
aaa
sti
mov
icebp
mov
xlat
sbb
pop
mov
retf
cmp
xor
movs
arpl
ss
lods
xchg
jne
xlat
rcl
jno
ror
ins
jp
or
adc
neg
pop
ror
pop
jg
pop
and
aam
arpl
inc
(bad)
outs
mov
pop
clc
mov
mov
mov
push
xchg
mov
clc
cmps
push
mov
xor
inc
pusha
or
xchg
xchg
sbb
test
cmp
ins
cmp
push
ja
das
inc
mov
in
mov
cmp
adc
ins
cwde
cmp
fstp
and
das
inc
iret
add
push
xchg
stos
inc
jae
sub
sub
dec
dec
ins
xor
mov
or
dec
adc
xchg
pop
mov
mov
(bad)
cmp
cmp
inc
sbb
adc
jmp
inc
push
pop
pop
push
inc
fdiv
mov
fistp
jle
daa
jmp
loop
mov
int3
or
or
test
pop
xor
jb
sbb
frstor
(bad)
icebp
das
popf
daa
out
outs
pop
xchg
in
out
imul
lods
sub
dec
sub
mov
fldcw
in
push
ds
or
pop
mov
sbb
lods
sbb
pop
aas
pop
jp
push
or
std
test
mov
loopne
dec
push
cmp
and
cmps
inc
jno
cmp
data16
mov
das
pop
imul
jns
sbb
stos
push
push
jl
sahf
mov
mov
das
or
jne
fst
add
repz
push
mov
adc
mov
mov
sbb
imul
xchg
cmp
shr
pop
rcr
mov
pop
pop
sbb
scas
cmps
das
test
jne
pop
xor
test
stc
lods
loope
mov
in
iret
enter
sub
inc
add
sbb
fisttp
push
fucomp
jno
mov
jno
outs
lods
fist
mov
xchg
call
mov
push
sub
pop
xchg
ds
push
sti
mov
cmps
imul
stos
dec
shl
sub
push
adc
inc
jmp
pop
stos
sahf
jp
inc
lods
cmp
add
mov
lods
push
rcr
in
in
jmp
stos
outs
cmp
into
movs
or
nop
sub
sahf
mov
mov
or
sar
dec
icebp
mov
inc
sub
mov
inc
xchg
pop
(bad)
xor
out
push
jb
cdq
(bad)
call
add
cmp
add
out
jmp
pop
je
ret
push
jg
movs
or
push
jne
mov
mov
dec
pushf
and
lahf
mov
pop
mov
sahf
jbe
pop
div
or
mov
imul
mov
nop
ret
push
jecxz
loopne
rcr
push
dec
and
inc
gs
shr
int3
adc
mov
ss
add
adc
push
retf
dec
idiv
or
leave
mov
jo
mov
pop
add
aas
leave
sub
test
xor
popa
xchg
inc
jmp
inc
loope
and
xchg
xor
sbb
ja
sar
daa
jno
sub
scas
loope
div
cli
jnp
sbb
retf
stc
dec
repnz
loope
inc
dec
aam
push
or
shl
test
push
fidiv
jne
(bad)
lock
cld
fabs
dec
shl
cmps
lods
mov
push
lds
push
aas
mov
lods
enter
jg
stos
cmp
mov
cld
or
cs
add
jecxz
fldenv
test
int
jnp
pop
fild
cdq
mov
xchg
fucomip
adc
pop
xor
jmp
and
daa
in
std
je
add
lods
les
sub
lea
mov
sub
xchg
call
mov
jmp
cmp
mov
xchg
mov
push
xor
jae
out
xchg
xchg
rol
add
js
fmul
push
mov
and
cmp
xchg
push
jae
retf
outs
shr
adc
sbb
lock
sbb
das
jae
lods
cmps
xor
retf
leave
jb
or
outs
mov
jmp
imul
lahf
add
call
addr16
sub
mov
jae
scas
adc
adc
sub
push
stc
inc
loop
push
cmp
hlt
inc
pusha
cdq
mov
sub
scas
add
loopne
loop
sahf
inc
push
rcl
cmp
pop
jmp
sbb
mov
mov
mov
add
push
fidivr
pop
jl
bound
cmp
mov
int3
fisubr
retf
cmc
adc
push
and
ror
inc
loope
mov
js
mov
mov
pusha
dec
in
or
or
cli
mov
inc
mov
scas
cwde
xor
aad
hlt
mov
or
repz
sbb
cmp
jne
sbb
push
das
mov
fimul
cmp
jae
adc
ret
and
cli
cmp
ins
or
adc
xchg
int
xor
jno
inc
fdivr
push
hlt
stc
mov
(bad)
sub
in
jns
push
xchg
lods
lea
xor
jae
xor
aaa
xchg
lods
mov
lds
mov
cmp
mov
movs
sub
ds
sbb
jg
int3
mov
or
xor
loopne
push
push
mov
mov
iret
(bad)
mov
mov
pop
mov
push
inc
mov
dec
retf
push
xchg
adc
clc
sbb
mov
add
and
xchg
mov
cmp
movs
(bad)
jno
gs
aas
(bad)
inc
xchg
adc
popa
lea
repz
dec
addr16
push
xor
clc
push
sub
jmp
add
sub
mov
sub
es
xor
test
test
cs
jge
daa
fld
jge
stc
rcl
pop
mov
nop
call
push
inc
aas
loope
leave
pusha
dec
je
shl
pop
jl
mov
push
popf
cmps
sbb
add
pushf
xor
les
adc
aad
arpl
or
xchg
mov
or
(bad)
in
scas
pop
popf
test
enter
or
mov
dec
dec
adc
inc
cmc
mov
xchg
aas
jmp
outs
and
lds
dec
jge
cwde
add
mov
int3
mov
lahf
jg
dec
sub
(bad)
(bad)
pop
mov
sbb
stos
mov
mov
mov
sbb
inc
mov
push
ret
aaa
push
test
push
ret
or
scas
xchg
fsub
sbb
movs
sbb
fisubr
pop
xchg
cmps
sbb
sahf
rcr
int3
nop
push
cmps
xor
cmc
pop
cwde
aam
adc
fild
icebp
push
cmps
mov
adc
sub
int3
sbb
cdq
dec
xlat
out
and
jne
xor
fs
adc
jb
dec
xor
dec
add
enter
adc
in
pop
in
mov
daa
cmp
call
jle
lods
dec
xchg
shl
stos
movs
mov
mov
fcmove
mov
and
xchg
adc
cmp
test
fidivr
xor
mov
pop
mov
push
dec
sbb
gs
shld
lea
dec
push
loope
cmp
and
fidivr
arpl
cmp
mov
mov
or
xlat
test
fidiv
mov
ins
inc
xchg
jle
cmps
mov
pushf
jmp
dec
rcr
out
dec
vpmullw
inc
jg
repz
mov
pop
test
mov
xchg
xchg
mov
push
and
xor
mov
jle
je
enter
push
xor
scas
sahf
jp
cli
fldenv
leave
imul
xchg
sub
scas
shl
scas
add
fwait
call
push
sbb
or
or
push
in
sbb
lock
xor
jmp
cmp
aaa
enter
enter
jmp
jp
jno
push
or
daa
xchg
ret
jmp
shl
sub
and
jl
push
xor
inc
xchg
jo
cmp
shl
push
hlt
jle
cmp
pop
bound
cmps
ret
lahf
pop
stc
repz
fisub
es
sahf
sub
popf
icebp
dec
test
dec
push
push
lock
test
xchg
movs
jb
imul
aam
out
xchg
addr16
loop
mov
and
test
jno
imul
cs
(bad)
out
fidivr
sub
fidiv
and
jo
jo
push
mov
out
mov
ret
shl
in
or
pusha
inc
pop
pusha
jmp
js
or
push
sub
xor
cmp
fwait
xor
cs
cwde
xchg
pop
sbb
leave
or
popf
push
mov
daa
int
push
adc
sub
pslld
bound
mov
and
repnz
push
aad
in
cld
cmp
sub
mov
iret
jb
jne
xchg
inc
mov
adc
psrlw
das
adc
or
or
stos
mov
xor
cmps
dec
int3
cld
daa
jbe
test
ret
in
adc
sub
cs
call
mov
adc
pop
xor
neg
sub
cmp
cli
movs
xchg
pop
xchg
je
mov
xchg
mov
push
sbb
sub
icebp
bound
out
jb
or
test
add
iret
retf
(bad)
fstp
sub
aaa
jmp
push
mov
xor
or
int3
test
xor
mov
xchg
mov
fs
fmul
and
jo
scas
sub
inc
cmps
mov
test
into
dec
test
push
cli
add
adc
es
jl
push
push
or
test
enter
xchg
jmp
mov
retf
inc
mov
jno
and
mov
sub
push
adc
cmp
popf
out
cmps
aad
je
out
jno
mov
and
adc
add
lea
ins
push
cwde
add
outs
into
lods
mov
fcomp
pusha
cld
xchg
sbb
dec
and
test
dec
mov
je
hlt
dec
cmc
cmp
(bad)
dec
nop
push
xchg
loope
scas
jns
cmp
retf
xlat
sbb
adc
xor
test
jnp
mov
xchg
jl
or
(bad)
inc
cli
pop
and
lea
je
aad
shr
pop
mov
mov
shr
adc
jne
add
push
js
add
iret
and
dec
bound
loop
adc
xor
sbb
(bad)
pop
sbb
adc
sub
inc
jbe
cmp
and
mov
and
fs
xchg
out
mov
push
or
out
ret
or
fdivp
mov
mov
sub
mov
mov
or
sub
cmp
maxps
xchg
sbb
outs
das
shl
fadd
xchg
fwait
test
push
cld
ss
inc
sub
neg
push
movs
imul
gs
bound
inc
ins
test
xor
push
jae
sbb
inc
lods
jo
cmp
dec
mov
je
mov
mov
jmp
jg
movs
mov
push
in
or
push
xlat
and
dec
mov
call
push
aam
and
mov
loopne
shl
movs
(bad)
mov
jo
ret
popf
ret
add
adc
cmp
jecxz
mov
ss
and
(bad)
jle
fsub
popf
mov
sbb
lods
xor
sub
and
sbb
jecxz
popf
data16
mov
cwde
icebp
movups
or
repz
add
push
push
jno
mov
dec
sub
inc
(bad)
adc
cmp
imul
bound
enter
push
ss
ss
daa
gs
xrstor
dec
dec
clc
popa
ss
jmp
int
or
mov
mov
lahf
xchg
scas
add
fsub
xchg
push
xor
xchg
jmp
sbb
ret
aam
and
add
into
pop
adc
mov
mov
and
mov
rol
retf
push
add
loopne
(bad)
ror
call
mov
push
out
int
mov
xchg
push
sub
daa
test
mov
push
push
(bad)
mov
push
or
lock
cmp
xchg
and
int
push
cs
xor
jle
push
movs
add
mov
and
jb
sub
inc
mov
loope
(bad)
sbb
adc
ret
cmps
push
ss
add
dec
addr16
(bad)
std
outs
mov
or
(bad)
jl
retf
jle
sub
sub
mov
icebp
cmc
mov
bound
jge
adc
in
arpl
jmp
add
jge
cmp
in
fsub
test
mov
(bad)
adc
cmp
pop
stos
sbb
cwde
gs
mov
xor
add
mov
clc
dec
gs
fld
add
shl
xor
sbb
enter
arpl
pop
(bad)
mov
inc
adc
mov
stos
jecxz
xlat
adc
fnsave
pushf
hlt
mov
popf
add
test
or
das
inc
jno
sbb
sub
mov
adc
into
inc
and
out
shr
leave
push
cmc
pushf
and
mov
mov
fmul
xor
dec
mov
ja
mov
cld
sub
retf
retf
dec
xchg
xchg
jne
sub
pushf
sbb
adc
jns
call
xor
pop
fsubr
ds
cmp
fcomp
fmul
bndstx
int3
scas
mov
adc
pop
mov
xor
arpl
push
dec
es
(bad)
std
xor
neg
push
stc
cwde
out
inc
fist
call
pop
adc
pop
mov
dec
fisttp
mov
inc
push
nop
mov
movs
mov
adc
mov
xchg
xor
lods
cmps
inc
popf
add
cmp
daa
mov
mov
call
adc
mov
mov
push
cmp
mov
in
pop
not
mov
push
xor
fst
ins
sbb
add
test
adc
fs
push
stos
and
or
ins
cmp
mov
outs
xchg
stos
(bad)
push
push
inc
jne
inc
pop
jmp
jp
sbb
jbe
mov
bnd
push
pop
mov
aam
lods
sbb
jmp
push
clc
jnp
ds
cmp
rcl
sub
fldcw
mov
pop
fs
stos
dec
dec
cmovae
in
cmp
push
in
in
fsubr
lods
mov
xor
sub
pop
outs
mov
aad
ins
add
fsubr
pop
mov
add
loopne
push
jmp
or
cmp
inc
sbb
xor
xor
int
imul
repz
fistp
popa
int3
popf
(bad)
dec
jp
callw
in
sub
test
push
mov
addr16
loop
(bad)
lea
dec
or
aas
mov
inc
stc
outs
into
jns
sbb
dec
and
sar
sub
popf
out
cmps
mov
in
test
and
pop
sub
sub
ret
push
aaa
fs
lods
inc
rol
dec
stc
xor
jo
inc
call
arpl
(bad)
mov
loopne
add
fiadd
push
mov
cmp
ret
pop
dec
jne
mov
and
sbb
push
loope
or
mov
aad
pmulhuw
js
test
rcl
es
and
add
ret
pop
cmp
jnp
ret
inc
ret
rcr
cmp
mov
ret
aam
stc
and
jl
cmp
ret
shl
in
stos
cmp
add
adc
sbb
nop
cld
sub
imul
dec
dec
cmp
out
and
inc
addr16
aaa
aam
pop
loopne
mov
mov
sahf
jle
pusha
mov
sbb
sub
outs
push
push
add
and
dec
loopne
lea
mov
std
int3
push
and
or
jbe
pop
imul
jmp
ins
jp
cmp
add
into
cmp
xor
fdivr
retf
add
sbb
add
gs
loop
js
mov
ret
inc
adc
pop
mov
sub
stos
popf
loopne
xchg
retf
je
jge
mov
mov
outs
xor
daa
fbstp
out
ins
add
popa
xchg
inc
lahf
pop
push
mov
pop
push
mov
xlat
js
pop
repz
outs
cmp
jnp
sbb
dec
xchg
xor
cmp
das
adc
mov
jmp
ins
jne
cmp
dec
fwait
or
push
repz
rol
inc
sbb
xchg
mov
aaa
add
dec
push
out
mov
dec
mov
dec
jne
pop
test
xchg
mov
xchg
adc
xchg
cwde
sar
mov
aam
jnp
adc
jae
fsub
loope
mov
sbb
and
add
jo
int3
fadd
lock
dec
out
mov
in
mov
stos
mov
push
sbb
addr16
in
and
js
sub
outs
lea
fwait
inc
xor
lea
mov
inc
jns
jno
inc
inc
retf
loop
stos
(bad)
push
and
jne
sub
jecxz
outs
and
inc
lods
mov
iret
je
sbb
push
pop
repz
xlat
pop
sbb
loopne
icebp
stc
pop
je
sbb
adc
in
inc
cmp
push
xchg
fist
xor
inc
into
add
cmps
pop
push
fbld
push
jp
in
adc
cwde
into
jmp
cmp
lea
and
push
mov
and
sbb
inc
inc
xchg
icebp
xor
(bad)
cmp
test
outs
sbb
pop
jge
mov
sti
repz
push
xor
jo
shl
push
lods
pop
call
pop
jl
movs
cmp
lock
push
shl
pop
cmp
movs
xor
mov
in
in
sub
jnp
retf
movs
repz
jnp
sysexit
nop
les
or
xor
ffreep
mov
int3
jb
fwait
adc
push
nop
sbb
call
mov
dec
jne
xor
jl
mov
add
mov
or
and
and
call
mov
sub
cmps
sub
daa
cmp
fisub
push
cmps
(bad)
cdq
mov
mov
mov
in
push
movs
or
cmc
push
mov
rcr
dec
adc
push
scas
gs
shr
test
div
not
dec
aas
push
pop
mov
sub
jmp
outs
mov
fisubr
jp
xlat
xchg
pop
xor
lods
daa
and
push
jbe
and
push
into
inc
inc
adc
mov
imul
enterw
sbb
pop
ror
retf
or
sahf
rol
hlt
xor
lock
push
bsr
sbb
sar
xchg
stos
pusha
push
mov
mov
psubsw
push
scas
les
push
xchg
mov
loop
scas
ins
sbb
push
sbb
int
xor
sub
shl
cmp
add
(bad)
adc
and
stos
outs
pop
icebp
sbb
xchg
push
retf
pop
cmp
(bad)
sbb
not
pop
mov
in
xor
jmp
scas
test
aas
or
int
fstp
sbb
ror
fnstsw
dec
lock
movs
xchg
jp
(bad)
pushf
mov
bound
fisttp
push
add
aaa
fsub
nop
mov
xchg
sub
dec
xchg
xor
mov
or
pop
test
bound
in
xor
jno
mov
mov
sar
imul
mov
pop
push
mov
xchg
cmp
mov
(bad)
popa
or
sub
push
in
jge
cmc
and
jno
enter
(bad)
outs
xchg
leave
test
push
pop
ror
sub
and
cwde
mov
inc
xchg
jmp
mov
test
test
movs
fwait
inc
iret
movs
mov
enter
add
aam
fwait
stos
cmp
lods
pop
pop
test
adc
mov
in
jne
sbb
(bad)
ret
loope
cld
imul
rcl
daa
loopne
push
mov
sub
or
and
pop
and
sbb
and
pop
sub
ins
fdiv
sti
adc
sahf
test
and
mov
sbb
sbb
lods
mov
loope
out
dec
xor
push
loope
cmp
aas
or
xor
xor
jle
cmp
push
jne
imul
push
loope
cmp
dec
xchg
in
imul
mov
mov
popf
or
hlt
push
jo
mov
daa
jb
arpl
pop
mov
mov
adc
dec
fucom
stos
sbb
mov
push
outs
(bad)
or
inc
inc
add
inc
enter
inc
(bad)
faddp
mov
pop
mov
ins
repnz
dec
mov
jo
ror
pop
add
icebp
jns
jb
push
jmp
add
push
xchg
retf
icebp
imul
mov
aaa
movs
fwait
adc
or
out
pop
ret
inc
jl
xor
adc
add
inc
cmc
imul
sbb
sub
mov
jbe
dec
jno
push
adc
iret
jo
int3
pop
sub
inc
mov
in
stos
or
scas
sbb
cld
inc
rcl
cmp
fbld
jnp
in
out
lea
mov
push
retf
xor
pop
in
retf
jns
jle
push
out
data16
fwait
pushf
sbb
adc
fdivr
add
ja
push
mov
inc
dec
js
push
xchg
call
mov
mov
adc
mov
adc
mov
and
movs
ret
shl
out
stos
jo
jne
mov
pop
mov
ja
sar
cmp
jle
mov
xor
popf
(bad)
jnp
add
pop
cmp
aad
cld
pop
(bad)
jb
adc
loop
xor
stc
fs
pop
and
stc
sub
jmp
(bad)
clc
int3
jae
cmps
inc
mov
add
push
repnz
dec
xchg
cmp
pop
pushf
popf
popf
test
(bad)
repnz
inc
iret
jle
push
dec
int3
stc
test
dec
jbe
sbb
aas
(bad)
mov
lock
imul
fistp
jmp
dec
ret
sahf
ja
mov
aam
or
retf
icebp
mov
pop
fcom
cli
fldcw
es
push
fcomi
jb
xor
scas
jmp
mov
ss
cmp
fld
fsubp
push
fisttp
fs
or
xor
cdq
mov
xchg
sub
jno
lock
xor
push
xchg
mov
in
addr16
jnp
cmps
jmp
cmp
add
out
and
aad
out
sub
rcl
lahf
xchg
mov
hlt
cmp
and
lds
outs
aaa
sub
jecxz
mov
out
dec
adc
inc
mov
dec
sbb
movs
dec
mov
jmp
push
rcr
shl
out
mov
js
jns
dec
scas
fdivr
or
into
mov
pop
ret
in
call
stos
and
adc
xchg
ins
pop
imul
add
test
cmps
sbb
mov
sub
pop
jo
cli
das
inc
mov
mov
mov
call
mov
loop
retf
inc
outs
pop
int3
jns
cwde
mov
push
shr
cmps
shr
in
push
jl
xchg
test
test
test
jnp
adc
pop
pop
ja
hlt
test
popa
repz
or
(bad)
daa
jp
lea
dec
popf
inc
add
adc
adc
inc
les
mov
add
stos
xchg
pusha
in
jbe
and
add
not
test
mov
inc
jle
arpl
pop
repz
sub
pop
ja
or
mov
mov
arpl
mov
enter
push
sar
ins
loop
scas
outs
ss
and
(bad)
imul
pusha
or
ds
and
xchg
sbb
dec
retf
xor
jmp
cmp
xlat
loopne
aad
aam
sbb
sbb
(bad)
ins
push
xchg
add
xchg
or
pop
leave
fidivr
loope
retf
ja
adc
loope
xchg
fist
push
and
dec
sub
std
jne
pop
(bad)
cmc
jno
ret
lar
pop
jp
and
sub
xchg
leave
adc
rcr
push
jle
push
out
loopne
loopne
int
jno
clc
fdivr
push
cdq
and
test
call
dec
in
adc
adc
xchg
int3
out
xor
jnp
or
ret
in
aas
pop
aam
xchg
scas
or
test
pop
inc
rcl
daa
pop
pop
stc
or
ins
inc
jl
cdq
dec
mov
out
jae
jae
or
mov
popa
xchg
mov
mov
add
jns
ins
lods
dec
xor
(bad)
jmp
fwait
bound
jp
call
fsub
inc
mov
push
adc
dec
(bad)
into
sbb
in
lock
(bad)
mov
inc
jns
dec
mov
outs
out
arpl
dec
aas
xchg
xchg
dec
inc
mov
dec
inc
or
mov
popa
dec
shr
xchg
and
xor
mov
lods
and
int3
mov
pop
jg
aad
mov
jb
popa
xchg
pusha
repnz
mov
dec
push
fld
fwait
les
and
out
fidivr
sbb
sub
hlt
out
xor
sub
pop
pop
add
jae
cmp
ja
and
sub
dec
xor
jmp
cmps
std
int3
jl
pushf
xor
jne
mov
jg
imul
fwait
jno
(bad)
push
mov
cmp
fnstsw
repnz
aad
cmp
scas
stos
pop
mov
pop
xor
adc
add
push
cmp
adc
adc
imul
and
cmp
dec
sar
xchg
and
cld
mov
or
aas
call
lods
ror
repz
popf
push
sbb
repnz
repz
clc
jecxz
jns
jmp
sub
imul
mov
cmps
mov
sub
jg
(bad)
jmp
mov
imul
mov
scas
xor
xchg
xor
sub
add
stos
lds
inc
lds
jns
gs
stc
mov
data16
hlt
mov
mov
std
fisttp
mov
and
jbe
movs
jno
add
push
fsub
jne
jns
sbb
xor
xor
mov
mov
sbb
in
pop
movs
xchg
outs
dec
outs
mov
or
adc
mov
xor
pop
les
xchg
sub
sbb
out
data16
arpl
inc
ins
push
adc
mov
and
(bad)
ds
xchg
stos
imul
mov
add
mov
push
inc
sub
lock
pop
retf
mov
shl
cwde
not
sub
jmp
sbb
cmp
sti
mov
out
(bad)
xlat
inc
push
shr
je
cld
xor
icebp
cmp
or
imul
hlt
jmp
dec
cdq
mov
pop
(bad)
cmc
jp
pop
xchg
xlat
das
scas
jmp
sbb
mov
sub
movs
out
and
push
jb
imul
test
das
sub
aas
mov
outs
daa
dec
ja
in
hlt
jne
mov
cmps
cmc
dec
xor
aaa
or
inc
into
or
mov
or
jbe
or
iret
popf
adc
inc
dec
cwde
test
dec
adc
cli
xchg
repz
loope
mov
xchg
pushf
mov
sbb
cvttps2pi
sub
and
and
outs
and
sbb
enter
push
sub
jae
pop
sub
jne
dec
call
jo
mov
stc
stos
push
aam
push
xchg
cwde
neg
pop
add
int
icebp
addr16
aaa
cwde
mov
push
ret
lods
and
cmp
cmp
aam
pop
icebp
movs
repz
loopne
lock
pop
inc
es
fucomp
(bad)
shl
xor
int3
stos
sub
xor
sub
push
mov
jmp
mov
adc
push
pop
out
shl
xor
movs
xchg
pusha
pop
movs
js
rcl
mov
mov
int
add
ins
xchg
cmp
adc
pop
movs
xchg
(bad)
cmp
pop
inc
add
repnz
enter
frstor
retf
xchg
and
pop
cmp
mov
inc
xchg
cmp
ins
add
aam
cs
dec
into
aam
adc
cs
stc
push
or
out
test
mov
push
ror
mov
mov
popa
push
cmp
dec
or
jle
loop
xchg
hlt
lea
xchg
cmps
xchg
pop
scas
jp
imul
(bad)
addr16
int
jo
ret
adc
addr16
mov
fidivr
call
jmp
iret
xchg
jp
aad
pop
cmp
(bad)
sbb
bound
jnp
ds
xchg
clc
mov
inc
ins
test
pusha
mul
pop
call
dec
adc
pop
pop
in
ja
pop
fsubrp
sar
gs
ds
or
xchg
sbb
jp
mov
daa
imul
(bad)
dec
mov
mul
cmp
retf
enter
popa
adc
(bad)
shl
imul
lahf
mov
fucomp
and
sub
mov
adc
jp
add
mov
sub
and
mov
call
jno
inc
jo
pop
int3
(bad)
sbb
inc
pop
out
or
or
xchg
fcmove
sub
xor
fdivr
bound
loope
movs
imul
jae
aaa
(bad)
pushf
fild
inc
cwde
adc
pop
inc
fsub
popa
test
xchg
push
sub
ret
ins
mov
push
push
scas
shr
push
fucomi
sbb
adc
rol
loop
dec
mov
cld
imul
fist
jne
test
mov
cmc
mov
xchg
pop
jge
push
arpl
push
call
ss
cmp
cmc
mov
aaa
or
xchg
sub
inc
jne
gs
add
daa
push
es
lods
mov
push
push
(bad)
les
fwait
jg
call
iret
sub
nop
into
rcl
pop
scas
das
adc
xchg
sbb
add
js
xchg
adc
push
ficom
jg
push
test
jle
and
les
jecxz
jbe
xor
dec
xchg
outs
jmp
daa
and
add
push
push
mov
mov
xor
cmp
enter
repnz
mov
and
fsub
enter
in
xor
aad
(bad)
and
and
xchg
je
iret
scas
mov
and
pop
mov
aas
cmp
adc
loope
jge
in
or
jne
lea
sbb
shr
add
xchg
js
aaa
popa
dec
and
jp
lods
ins
inc
push
movd
das
sub
retf
mov
push
movs
xchg
ficomp
inc
sar
jmp
out
das
popf
fdivr
pop
adc
std
pop
fwait
out
mov
dec
int3
inc
bound
pop
xchg
in
mov
add
dec
or
es
sbb
dec
frstor
mov
mov
adc
das
sub
bound
arpl
daa
sbb
adc
movs
aas
out
xchg
fild
add
out
arpl
dec
retf
pop
into
int
(bad)
leave
mov
(bad)
inc
iret
inc
adc
mov
mov
pop
cmp
mov
in
test
pop
cmp
mov
(bad)
lahf
stos
in
adc
lock
mov
push
push
stos
inc
mov
dec
je
sub
lea
sub
sbb
mov
mov
and
add
pushf
xchg
pop
rol
out
xor
popf
les
nop
jno
jnp
push
jmp
mov
pop
add
add
retf
fcom
scas
jle
inc
inc
out
lahf
call
popa
test
push
mov
scas
mov
mov
data16
(bad)
enter
pop
mov
rol
or
push
shl
jp
sahf
xchg
imul
jge
or
cmp
pop
inc
mov
std
ss
outs
pop
mov
cmp
(bad)
add
jmp
sbb
inc
and
call
adc
and
aam
lea
out
mov
or
mov
(bad)
xor
xor
pusha
add
xchg
push
add
ret
ds
cmp
jl
pop
or
cld
out
and
dec
xchg
mov
mov
rcr
(bad)
push
fldlg2
arpl
xchg
sbb
popf
out
adc
sub
scas
hlt
adc
or
ficom
push
mov
dec
retf
fimul
xchg
sbb
add
add
add
inc
xchg
sbb
add
push
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
pop
