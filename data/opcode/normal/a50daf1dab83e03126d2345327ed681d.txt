ds
adc
lods
adc
dec
push
data16
pcmpgtd
pop
pcmpgtd
mov
data16
adc
add
data16
data16
pop
mov
add
loop
data16
adc
push
pcmpgtd
(bad)
or
mov
pop
pcmpgtd
push
data16
add
mov
data16
adc
jg
data16
pop
jne
data16
mov
or
sbb
imul
sbb
data16
mov
pcmpgtd
dec
push
data16
add
inc
add
inc
add
and
data16
pcmpgtd
inc
add
push
pcmpgtd
jg
out
lea
push
add
data16
sbb
sbb
push
data16
add
add
xchg
or
data16
add
adc
mov
push
add
dec
add
stos
adc
sbb
sbb
or
data16
add
stos
adc
sbb
data16
int3
push
data16
or
mov
data16
push
or
data16
push
pminsw
and
cmp
or
data16
pusha
or
adc
mov
data16
push
data16
or
data16
pop
push
frstorw
push
retfw
dec
push
data16
push
shl
mov
retw
data16
ret
lock
adc
fld
data16
push
add
add
data16
data16
push
data16
dec
add
push
pcmpgtd
pcmpgtd
fiadd
data16
dec
xchg
xchg
data16
adc
xchg
adc
data16
mov
add
push
adc
lea
data16
adc
dec
add
lea
sub
data16
pcmpgtd
movs
push
data16
int3
push
or
adc
data16
adc
cmps
pcmpgtd
adc
mov
data16
push
data16
push
or
pcmpgtd
dec
add
push
add
enter
add
add
add
add
xchg
or
dec
add
adc
pusha
adc
pop
add
add
dec
add
add
addr16
add
dec
add
dec
add
dec
add
dec
add
imul
xor
imul
ins
dec
add
dec
add
dec
add
dec
add
outs
dec
add
outs
dec
add
add
dec
add
dec
add
dec
add
jo
add
jno
add
dec
add
dec
add
add
dec
add
je
add
je
add
je
add
je
add
jne
add
dec
add
jne
add
jne
add
dec
add
dec
add
dec
add
ja
add
dec
add
dec
add
dec
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jp
add
jnp
add
jnp
add
jge
add
add
jge
add
jle
add
dec
add
or
or
or
or
inc
or
dec
or
or
or
or
or
test
jl
dec
add
test
mov
xchg
adc
dec
add
dec
add
xchg
out
xchg
lock
lock
inc
add
add
add
add
add
lock
add
add
add
mov
add
add
mov
add
add
dec
add
add
add
add
add
add
mov
add
mov
add
add
xor
or
fst
add
in
dec
add
xchg
dec
add
add
add
xchg
dec
add
add
add
or
mov
dec
add
add
add
dec
add
add
add
add
add
dec
add
dec
add
add
add
add
jg
dec
add
dec
add
add
add
add
movs
mov
dec
add
add
add
add
jnp
dec
add
fisttp
add
loope
add
add
add
loope
add
add
add
dec
add
dec
add
dec
add
add
add
in
add
out
add
add
add
dec
add
add
add
out
add
jmp
add
xor
dec
add
add
add
add
add
out
dec
add
add
add
out
dec
add
out
dec
add
add
add
dec
add
stc
dec
add
add
add
stc
dec
add
add
add
stc
dec
add
add
add
dec
add
add
add
sti
dec
add
sti
dec
add
add
add
sti
dec
add
std
dec
add
add
add
std
dec
add
dec
add
add
ins
dec
add
add
add
add
or
dec
add
add
add
add
push
add
add
add
add
add
(bad)
add
add
add
add
add
push
add
add
add
pop
add
add
dec
add
dec
add
inc
dec
inc
add
loope
add
lock
add
add
add
adc
add
add
pop
adc
add
adc
add
mov
dec
add
push
dec
add
add
add
push
dec
add
sbb
add
add
outs
sbb
add
add
mov
dec
add
sbb
add
add
stos
sbb
add
add
add
mov
sbb
add
inc
push
inc
add
add
add
sbb
add
sbb
add
sbb
add
dec
add
dec
add
dec
add
sbb
add
add
add
push
add
add
add
add
and
les
dec
add
add
add
dec
add
cs
add
dec
add
das
dec
add
add
add
das
dec
add
add
add
dec
add
ds
add
add
inc
add
add
add
add
inc
inc
dec
add
inc
dec
add
add
add
add
add
add
add
add
add
add
sub
add
dec
dec
add
add
add
add
add
dec
dec
add
dec
dec
add
add
add
add
je
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
push
add
add
add
sub
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
dec
add
push
dec
add
push
dec
add
add
add
dec
add
pop
dec
add
add
add
pop
dec
add
add
cmp
add
add
or
add
add
add
dec
add
add
add
add
add
or
xlat
imul
fild
add
imul
add
add
imul
add
add
add
add
add
pusha
jo
add
add
adc
add
add
add
xchg
ror
add
add
add
add
jbe
add
add
add
jbe
add
xchg
add
add
rol
add
inc
add
add
add
dec
add
add
dec
add
jns
add
jp
add
dec
add
dec
add
jle
add
jg
add
or
ret
or
or
or
test
sbb
add
test
sbb
add
test
sub
dec
add
add
add
add
rol
add
add
add
add
inc
add
add
add
cmp
add
add
loopne
inc
add
jo
add
jne
add
mov
add
add
int3
mov
add
mov
add
add
add
add
mov
add
mov
pop
add
add
xchg
dec
add
dec
add
xchg
dec
add
xchg
dec
add
add
add
xchg
dec
add
cwde
dec
add
add
add
cwde
dec
add
add
add
or
add
add
add
inc
add
mov
add
dec
mov
or
or
add
add
dec
add
movs
dec
add
add
add
dec
add
cmps
dec
add
add
add
dec
add
add
inc
add
add
add
stos
dec
add
add
add
stos
dec
add
lods
dec
add
add
add
lods
dec
add
add
add
add
add
scas
dec
add
add
add
add
pop
mov
add
dec
add
mov
add
mov
add
add
dec
add
add
add
dec
add
mov
add
lock
or
in
mov
add
hlt
mov
or
or
dec
add
add
add
ror
add
add
add
add
dec
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
retf
dec
xchg
mov
iret
mov
add
add
add
add
jg
add
outs
addr16
outs
xor
jbe
dec
xor
or
inc
cdq
inc
cmp
scas
mov
dec
mov
and
mov
jns
dec
lods
xor
or
stos
add
xchg
retf
add
add
add
ins
xor
or
add
add
inc
add
(bad)
(bad)
(bad)
jmp
ins
xor
add
add
add
push
sldt
add
add
int
add
inc
add
inc
cdq
add
add
or
push
push
push
popa
outs
gs
xor
dec
add
gs
push
push
popa
outs
gs
add
js
rcl
xor
fild
syscall
add
popa
add
add
add
add
add
add
add
add
add
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
inc
retf
add
add
add
ins
ins
popa
outs
xor
add
adc
dec
outs
ins
imul
and
outs
je
add
add
add
add
add
add
pop
pop
sbb
and
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
inc
add
sub
sub
inc
leave
push
add
add
ins
ins
popa
outs
xor
add
adc
push
gs
outs
jb
outs
and
arpl
jbe
add
add
add
add
add
sub
pop
pop
sbb
and
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
inc
add
sub
sub
inc
jne
add
add
popa
xor
and
add
pop
add
add
or
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
add
cmp
pop
add
ins
add
jb
add
popa
add
add
add
add
add
push
add
add
add
sbb
popa
xor
sbb
add
add
add
add
add
add
je
add
add
add
loopne
loopne
add
add
add
pop
add
add
add
or
and
and
xor
inc
xor
add
add
je
add
add
add
loopne
loopne
add
add
add
adc
add
add
add
pop
add
add
xor
inc
add
add
add
je
add
add
add
loopne
loopne
add
add
add
pop
inc
add
add
add
add
add
and
add
add
add
je
add
add
add
or
add
add
and
xor
inc
and
add
add
js
xor
add
add
mov
add
add
and
xor
inc
mov
add
push
add
popa
xor
and
pop
adc
pop
add
add
or
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
imul
jb
add
popa
add
add
add
add
push
add
add
push
add
outs
add
data16
add
jb
popa
add
imul
add
push
add
popa
xor
outs
imul
add
add
and
add
add
or
push
push
push
popa
outs
gs
xor
dec
add
gs
push
push
popa
outs
gs
add
js
push
add
add
sub
popa
add
add
add
add
sub
add
add
sldt
add
adc
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
data16
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
inc
ficomp
add
add
ins
ins
popa
outs
xor
add
or
push
inc
push
push
push
dec
push
inc
add
add
add
add
add
add
pop
pop
sbb
sbb
mov
add
popa
outs
jae
push
gs
data16
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
inc
add
sub
sub
inc
loope
add
add
ins
ins
popa
outs
xor
add
or
inc
outs
outs
data16
popa
add
add
add
loopne
add
sldt
pop
sbb
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
add
ins
je
add
dec
inc
cmp
popa
mov
cmps
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
or
or
or
or
or
or
or
or
or
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
and
and
and
and
and
and
and
and
and
daa
daa
daa
sub
sub
sub
sub
sub
sub
sub
sub
sub
das
das
das
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
aas
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
popa
popa
popa
bound
arpl
fs
imul
imul
ins
ins
ins
ins
outs
outs
outs
outs
outs
outs
jo
jo
jno
jb
jb
jae
je
je
jne
jbe
jbe
ja
js
js
jns
jp
jp
jnp
jl
jl
jge
jle
jle
jg
add
add
test
xchg
mov
mov
mov
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cwde
cwde
cdq
cdq
cdq
call
pushf
pushf
popf
popf
popf
sahf
sahf
sahf
lahf
lahf
lahf
mov
mov
mov
movs
movs
movs
cmps
cmps
cmps
cmps
cmps
cmps
test
test
test
stos
stos
stos
lods
lods
lods
lods
lods
lods
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
rol
ret
ret
ret
(bad)
(bad)
(bad)
(bad)
mov
mov
leave
leave
leave
retf
retf
retf
retf
int3
int3
int3
int
int
into
into
iret
iret
iret
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
aad
(bad)
(bad)
(bad)
xlat
xlat
xlat
fcomp
fcomp
(bad)
fcmovu
fcmovu
fcmovnu
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
loopne
loopne
loope
loop
loop
jecxz
in
in
in
out
out
out
call
jmp
jmp
in
in
in
in
in
in
out
out
out
out
out
out
lock
icebp
icebp
repnz
hlt
hlt
cmc
cmc
cmc
div
div
div
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
or
add
fwait
shr
hlt
xchg
dec
pop
mov
or
sbb
ins
xlat
mov
jecxz
out
pop
mov
xlat
mov
sbb
jb
mov
shl
cmp
mov
cmp
scas
sub
mov
loop
jne
xchg
cmps
xor
or
into
pushf
mov
jecxz
mov
jbe
arpl
xchg
cmp
pop
dec
mov
cmp
pop
sbb
in
fiadd
loop
outs
xchg
mov
sar
jbe
pop
mov
iret
mov
fsub
inc
or
add
dec
pop
pop
outs
pop
or
push
xchg
or
test
ins
mov
rcr
sbb
retf
mov
sub
mov
push
js
sbb
nop
cmp
pushf
xchg
xchg
jo
into
pop
outs
pop
jnp
dec
fidiv
xchg
shl
pushf
push
jo
repz
(bad)
fcmovu
pop
sbb
dec
push
jb
sbb
jbe
inc
outs
jecxz
sbb
outs
cmp
pop
xchg
ss
inc
xchg
gs
lds
jns
ss
shl
inc
mov
movs
sbb
xchg
inc
ficom
xor
rcl
int
shr
or
dec
inc
pop
jge
popa
xor
jno
and
aam
add
iret
cmp
fsubr
movs
mov
cmp
test
into
ins
out
jae
addr16
xchg
loopne
jae
inc
pop
inc
dec
loope
loope
aaa
lea
jecxz
jbe
nop
push
fbstp
retf
hlt
xchg
mov
push
push
mov
je
mov
and
in
inc
dec
imul
sbb
dec
rcl
jg
mov
mov
cmps
add
dec
cmp
loopne
mov
sub
push
xor
cmps
aam
clc
in
cmp
lea
sahf
fsub
fnsave
(bad)
jno
xchg
mov
mov
pop
or
movs
test
and
push
movs
retf
int3
inc
lea
test
or
int
adc
test
lods
xchg
addr16
mov
cmp
or
popf
mov
aaa
test
sbb
xor
jo
push
nop
xchg
xchg
adc
outs
(bad)
sbb
jb
and
int
push
loopne
add
push
xchg
bound
loope
(bad)
dec
jno
fcomp
out
add
dec
cmp
xchg
xchg
adc
cmp
mov
cmp
jg
fs
push
not
push
scas
add
pushf
push
mov
jne
pushf
adc
shl
adc
xor
push
sub
jae
xor
ins
pop
push
xchg
test
inc
and
out
not
dec
cs
xchg
and
push
push
xchg
add
leave
xchg
xor
or
xor
inc
movs
out
fcmovu
jns
fwait
push
into
retf
xchg
call
outs
cmp
push
push
lods
xor
and
jns
xlat
clc
addr16
js
test
jle
pop
ror
xor
dec
mov
cld
popa
pop
call
or
pop
dec
xor
and
jmp
xchg
call
jns
pop
ss
xor
ss
inc
xchg
xchg
retf
adc
push
dec
mov
loope
cmc
inc
sbb
pop
mov
cmp
addr16
fidivr
retf
fisttp
xor
mov
adc
test
jp
or
mov
fist
xor
or
adc
outs
fadd
sub
mov
push
outs
js
sbb
retf
mov
push
jno
pop
push
fs
ficom
lods
or
adc
call
xchg
pop
std
push
and
ror
pop
je
iret
pop
inc
jg
mov
mov
mov
scas
mov
lods
xchg
out
xchg
arpl
xchg
adc
lods
fidivr
into
add
(bad)
mov
out
ret
sbb
pop
rcl
dec
cmp
dec
(bad)
aad
pushf
xor
ss
inc
pop
dec
arpl
mov
les
jae
or
dec
xchg
nop
adc
mov
or
add
nop
pop
or
pop
mov
mov
(bad)
mov
mov
inc
xor
aad
test
adc
into
add
xchg
xchg
add
(bad)
dec
jo
gs
imul
outs
inc
addr16
xchg
adc
push
xchg
pop
mov
adc
adc
xchg
and
addr16
ins
jg
lock
or
daa
jns
push
or
inc
jmp
jne
pop
xchg
retf
mov
lds
jb
inc
mov
ret
push
cmp
and
ss
aaa
lea
sub
adc
inc
aam
xchg
lahf
jle
stos
sahf
inc
cs
pop
inc
pushf
cmp
cmp
mov
inc
scas
jae
les
icebp
sbb
imul
mov
loope
cmps
xor
or
mov
or
and
stos
sub
fld
xor
jns
into
sub
daa
loop
rol
stos
sbb
xchg
les
call
je
arpl
push
lea
dec
or
cmps
xchg
add
xor
adc
(bad)
jae
rcr
sbb
adc
in
and
test
push
sbb
ret
mov
mov
je
sbb
rcr
adc
mov
push
xor
int3
sub
mov
dec
pop
pop
rol
mov
(bad)
push
jne
nop
sub
mov
cmps
stc
mov
call
dec
push
push
sub
enter
jmp
or
lds
popa
dec
data16
loop
adc
or
or
pop
mov
mov
jnp
aad
aaa
xor
test
cs
and
enter
jle
cmp
cmp
push
rol
and
std
and
cmp
or
int
push
fisttp
sub
mov
xchg
jg
sbb
sub
xor
out
and
mov
push
popa
aad
pop
stc
sub
or
push
fbld
and
int3
xor
or
add
cmp
jne
mov
xchg
fld
aaa
imul
xlat
mov
push
fnstenv
in
jo
jmp
mov
cmp
mov
pop
fist
mov
push
pop
arpl
test
adc
jmp
dec
call
cdq
fwait
dec
lods
lods
rcl
test
adc
or
adc
loope
rcr
sub
sub
ror
cdq
iret
loope
and
lods
push
popa
mov
sub
inc
mov
adc
jno
fs
or
stos
ffree
call
outs
mov
in
cmp
(bad)
(bad)
dec
push
ret
les
and
adc
lea
jmp
shl
sub
test
fcomp
adc
pop
sar
mov
cmp
stos
popa
dec
shl
lods
outs
in
dec
jo
pop
dec
test
stos
outs
xchg
sub
jne
push
mov
jge
mov
ret
out
jns
and
jno
dec
pop
cmp
cli
dec
adc
mov
adc
and
aaa
icebp
xor
ins
dec
sub
inc
inc
sbb
sbb
mov
push
inc
dec
mov
cmp
adc
aad
aas
xor
sub
push
mov
dec
out
cvttps2pi
jl
pop
sbb
jle
jmp
pushf
dec
dec
mov
call
fidiv
test
mov
mov
sahf
cwde
adc
dec
(bad)
aaa
je
mov
into
in
bound
sar
mov
fs
in
sub
cmp
ss
or
out
cmp
shl
ins
stc
jmp
cmps
fiadd
dec
fdiv
cs
and
pop
scas
fucomp
movs
inc
stos
les
xchg
daa
cmp
inc
mov
or
je
mov
test
mov
popa
es
and
(bad)
sbb
ficomp
mov
mov
or
fsubr
adc
call
sbb
xchg
fwait
push
xor
call
fisub
push
sub
push
fsub
cmp
pop
cmps
xor
inc
arpl
and
repz
adc
mov
enter
jo
into
inc
or
mov
xor
cmp
push
call
ds
push
push
sti
ror
nop
cmp
psrad
inc
popa
sub
push
pop
push
adc
bound
xchg
xor
jne
addr16
cmc
add
sub
push
push
mov
(bad)
push
sub
cmp
in
mov
xor
sbb
in
dec
mov
fsub
das
add
pushf
push
adc
dec
dec
add
adc
inc
sbb
cmp
in
jge
pop
repz
into
xor
xchg
dec
out
xor
push
jge
mov
in
js
call
inc
add
and
pop
inc
jb
adc
and
pop
cmps
dec
(bad)
jg
push
push
push
loope
xlat
loop
fsub
jbe
pop
cmp
dec
ins
push
inc
cld
add
and
push
repnz
icebp
sub
push
xor
jb
push
push
mov
mov
jl
or
xor
cwde
mov
mov
mov
std
push
adc
push
jg
daa
js
rcr
(bad)
es
xor
dec
fwait
add
mov
add
fisub
cli
gs
test
cmp
inc
mov
push
iret
test
hlt
xor
dec
aam
and
xor
bound
pop
int
jnp
push
pop
in
out
lods
enter
push
rcr
sub
or
mov
or
push
push
test
add
dec
ret
sub
add
and
cmp
adc
je
xchg
clc
adc
jmp
daa
lea
(bad)
push
and
addr16
push
and
jle
ret
hlt
adc
mov
sub
push
sbb
push
inc
sbb
xor
push
jne
(bad)
(bad)
push
and
lock
mov
jl
jne
mov
xlat
xchg
das
sbb
pop
in
cmc
push
mov
xchg
inc
sbb
push
inc
fidiv
jns
daa
mov
pop
cmps
ror
jae
out
push
jge
mov
xor
mov
sub
or
and
xor
ret
ss
mov
pop
ror
and
popa
push
pushf
mov
or
iret
bound
and
das
cmps
adc
mov
rol
xchg
adc
repnz
ins
pop
cdq
outs
scas
add
inc
fcom
dec
mov
xchg
sbb
sbb
loop
pop
jae
and
inc
fbstp
cmp
add
pop
xchg
xor
nop
adc
adc
in
push
and
cmp
jb
shl
call
mov
add
pushf
adc
leave
push
xor
popf
cs
lods
mov
cmp
mov
adc
sub
lahf
dec
test
and
test
or
sub
ret
inc
inc
add
js
xchg
shl
pop
adc
call
fwait
or
stos
ret
push
pop
test
inc
fcom
je
sti
rol
and
ins
push
je
fnstenv
and
icebp
lea
adc
outs
(bad)
cmp
pop
adc
js
adc
test
push
and
shl
inc
cmp
(bad)
push
aaa
adc
stc
dec
fsub
push
push
or
pushw
mov
push
mov
sbb
leave
adc
(bad)
push
jmp
push
(bad)
mov
and
imul
addr16
adc
xor
loopne
xchg
shl
daa
arpl
add
daa
rcr
inc
mov
push
ja
inc
daa
enter
jb
xchg
add
mov
push
add
mov
mov
mov
jo
jmp
cmp
push
inc
mov
call
push
pop
pop
das
xchg
mov
(bad)
xor
adc
clc
mov
xchg
inc
sbb
adc
xor
shl
push
pop
shl
les
pop
lods
jmp
xchg
dec
es
sti
xchg
dec
mov
jo
mov
in
sbb
adc
or
cmp
aad
aad
push
in
and
adc
xlat
adc
or
adc
icebp
or
mov
adc
pop
push
push
mov
adc
mov
push
cli
pop
js
jmp
jl
jo
sahf
es
xor
dec
xchg
sbb
and
icebp
pop
(bad)
mov
push
test
adc
sbb
test
push
jnp
xor
outs
xor
push
fs
push
sub
mov
ffree
cmp
test
xchg
test
aas
xchg
sub
retf
push
adc
dec
es
addr16
sub
adc
rcl
push
nop
stos
pushf
nop
aaa
fs
adc
movs
and
dec
xor
or
or
cmps
pop
xor
push
xchg
adc
adc
adc
jb
fstp
mov
jg
add
and
movs
pop
cmp
test
jnp
add
mov
lods
mov
push
dec
mov
repnz
je
mov
add
jb
sub
jno
aad
inc
mov
int
cmp
dec
daa
add
cmp
test
jmp
xor
mov
mov
or
nop
cmp
push
loope
adc
fadd
push
xor
movs
mov
xchg
mov
xchg
jl
push
ins
js
and
test
jno
outs
xchg
push
rol
outs
xchg
jb
bt
mov
loop
dec
shl
mov
push
movs
xor
jmp
xor
and
push
push
cmp
sbb
push
pop
cmps
add
fdiv
fs
loop
jmp
jmp
xor
jp
(bad)
cwde
push
call
(bad)
mov
pop
push
and
xor
(bad)
mov
inc
enter
shl
adc
adc
push
(bad)
push
and
sbb
adc
sbb
retf
imul
movs
test
mov
pusha
mov
or
sub
loop
inc
sbb
gs
mov
cs
scas
xchg
push
mov
mov
pop
loop
in
push
addr16
sbb
mov
pop
lahf
and
gs
add
inc
pop
mov
jae
and
mov
jo
test
sbb
push
inc
jecxz
nop
(bad)
adc
shl
and
out
outs
inc
pop
dec
sbb
in
pop
ja
mov
push
imul
leave
add
sub
adc
fwait
sub
shl
movs
pop
dec
mov
xchg
or
xor
adc
push
pop
loop
and
inc
dec
out
cmp
mov
mov
jno
inc
bound
rol
or
fld
sbb
scas
xor
mov
mov
pop
sbb
daa
and
mov
jmp
sub
sbb
inc
dec
push
mov
in
pop
call
repz
and
push
xchg
sbb
ins
stos
xor
addr16
cmp
jecxz
das
loop
pop
fist
clc
and
push
push
mov
sub
xchg
inc
loopne
or
sub
mov
imul
sahf
inc
mov
imul
out
cdq
(bad)
stos
call
iret
sub
push
and
sub
or
xchg
jbe
dec
and
rcl
and
xlat
loopne
imul
xor
std
push
call
and
inc
pop
(bad)
nop
mov
movs
rcr
dec
lock
mov
outs
mov
rcl
jb
xchg
sbb
jo
test
inc
mov
js
repnz
adc
push
loop
mov
mov
push
jl
repnz
test
loopne
or
inc
retf
and
xor
lock
jns
adc
xor
adc
loope
pop
jmp
mov
mov
rol
push
ja
inc
and
mov
adc
xchg
ins
mov
and
cmp
pop
xor
call
imul
aad
jb
out
cld
push
ret
adc
fnstenv
lock
iret
fsub
mov
or
xchg
push
mov
mov
adc
and
xchg
jae
mov
fwait
mov
lods
fbld
push
lods
push
bound
je
push
jge
out
or
push
and
jne
inc
cmp
fild
lock
adc
aam
or
(bad)
js
das
push
cli
or
popa
xor
mov
push
mov
add
push
sub
fidiv
cmp
push
inc
sub
mov
dec
mov
lds
adc
fcom
push
push
mov
cdq
movs
mov
xchg
adc
cwde
pop
pusha
es
and
cld
mov
add
fsub
sbb
adc
dec
xlat
inc
xor
mov
push
stos
inc
sbb
adc
and
aad
sub
xchg
into
push
push
mov
and
pushf
adc
and
dec
aaa
xor
aam
sub
test
popa
jge
jle
jecxz
add
sbb
mov
pop
scas
xchg
adc
cmp
pop
mov
push
inc
loope
sub
movs
inc
xor
adc
shl
inc
ret
inc
loop
stc
sbb
inc
adc
frstor
or
aaa
jb
inc
cmp
in
inc
fild
mov
es
ja
bound
xor
jge
jge
pop
xchg
fidiv
xor
dec
mov
cmp
push
or
and
xor
test
cmp
push
and
movs
inc
ret
adc
push
inc
mov
mov
sub
loope
ja
into
xor
shl
cmp
shr
push
int3
adc
xor
cwde
jb
dec
xchg
push
stc
push
ficomp
adc
push
push
in
int3
pop
push
jo
push
sbb
or
mov
hlt
xlat
ins
(bad)
jo
sbb
icebp
sub
fcmovnb
mov
push
fiadd
sub
or
mov
inc
xchg
pop
pop
bnd
rcl
push
xchg
mov
jg
xchg
jno
add
fcom
mov
mov
and
cmp
cmp
dec
rcl
jae
and
not
fs
ins
mov
stos
mov
popf
(bad)
jb
dec
popa
push
mov
xchg
fisub
or
mov
bound
inc
dec
movs
out
out
repz
sub
movs
dec
data16
pop
clc
aam
fsubr
adc
(bad)
jo
inc
cs
adc
pop
inc
lea
adc
popa
and
and
adc
mov
pop
andps
and
add
push
jge
xlat
push
nop
adc
dec
leave
nop
ins
and
int
push
aad
les
xchg
fbld
cmp
and
out
lea
imul
pop
mov
fnstenv
sbb
mov
ins
sbb
sbb
cs
movs
sbb
xor
call
jno
mov
ffree
mov
mov
pop
retf
xchg
xor
xchg
xor
aaa
outs
cmp
fdivr
and
push
fwait
ss
fistp
fdivr
(bad)
out
xchg
or
push
retf
xchg
repz
addr16
gs
in
fidiv
movs
fwait
out
(bad)
je
mov
lea
pushf
(bad)
outs
fdiv
pushf
inc
movs
jae
outs
cmp
ins
aad
mov
xor
jge
mov
outs
inc
mov
sbb
xor
iret
mov
cmp
ss
fadd
mov
shl
inc
into
sbb
lods
dec
push
(bad)
in
inc
ins
fidiv
inc
scas
fdiv
sub
dec
push
mov
cmp
scas
fidivr
div
xchg
dec
mov
mov
mov
push
pop
pop
xchg
ds
retf
mov
or
ror
cmp
cdq
(bad)
mov
in
sbb
rcl
cwde
call
ret
mov
sbb
mov
test
lods
adc
cmps
sbb
sahf
mov
repz
or
xchg
jmp
pop
mov
call
mov
sub
lods
ins
les
stos
stos
sbb
iret
sbb
jle
push
test
es
push
cmp
cwd
movs
test
add
and
jno
retf
gs
mov
mov
loopne
shl
mov
xchg
call
ds
es
ss
scas
dec
cwde
test
cmps
cmps
sahf
push
repnz
mov
xor
push
jmp
add
jbe
(bad)
cmp
stos
cmps
fwait
pop
leave
and
and
test
imul
call
or
cmps
sbb
pop
inc
push
mov
adc
sbb
jmp
sahf
dec
push
fwait
adc
sub
mov
ror
cld
push
ret
lods
xor
cmp
xchg
and
cmps
and
sbb
shl
stos
dec
push
push
adc
lea
mov
pop
pop
stos
iret
jp
mov
cdq
out
sbb
imul
adc
xchg
push
adc
test
dec
sub
ins
retf
mov
mov
sub
add
test
rcr
pop
fisttp
shl
ret
fcomp
(bad)
push
fwait
push
sbb
mov
cdq
aaa
movs
loope
sbb
mov
mov
mov
leave
inc
retf
dec
cmp
test
leave
imul
pop
(bad)
mov
cwde
mov
or
ror
pushf
outs
push
scas
data16
mov
int
imul
rol
aas
clc
fwait
jmp
and
aam
shr
mov
push
mov
sbb
clc
sbb
mov
cmps
pop
scas
xor
daa
fwait
adc
das
sbb
xchg
or
retf
lea
arpl
mov
pushf
imul
js
add
jmp
adc
or
sbb
stos
xchg
pop
inc
sbb
fwait
pop
cmp
icebp
xchg
mov
and
inc
mov
inc
or
cmps
mov
icebp
mov
xchg
dec
icebp
repnz
sbb
or
enter
cwde
lahf
xor
mov
les
inc
xlat
add
gs
mov
inc
dec
adc
cmp
in
xchg
jo
das
test
pop
ins
xor
and
rcl
call
inc
push
out
in
pop
rol
stos
or
dec
sbb
xor
sub
aaa
mov
jmp
jg
dec
cmp
mov
mov
pop
scas
test
js
sbb
inc
jl
sbb
test
sub
mov
ret
xchg
or
lea
sub
rcr
xor
dec
lods
lds
dec
pop
jmp
sbb
or
xor
mov
and
mov
or
(bad)
xor
enter
or
mov
arpl
jmp
sub
pop
movs
inc
popf
pusha
or
in
push
adc
fnstsw
sub
mov
jb
call
and
jo
xchg
mov
sbb
bound
ins
in
lahf
sub
inc
jmp
push
mov
retf
ror
idiv
nop
push
or
add
or
adc
das
lahf
bound
jb
push
dec
xor
push
dec
xlat
dec
push
test
mov
add
jbe
int3
pop
nop
dec
xor
dec
inc
jb
mov
mov
sub
ror
pop
repnz
aaa
ror
push
push
xchg
ror
mov
and
retf
inc
jo
adc
lods
test
fisub
inc
les
pop
sub
call
neg
aam
call
pop
mov
scas
push
inc
scas
data16
aam
adc
and
mov
mov
mov
dec
scas
push
adc
sbb
jmp
icebp
sub
movs
leave
sub
jae
push
xor
inc
sub
or
fs
(bad)
cmp
aad
add
xor
xchg
push
pop
inc
cwde
jnp
sub
dec
mov
xchg
mov
call
imul
or
je
sbb
inc
repz
mov
sub
mov
movs
sbb
pop
pop
xor
ror
inc
sub
cld
pop
dec
js
scas
test
pusha
inc
leave
sbb
xchg
(bad)
lods
shl
dec
pop
dec
ins
sbb
push
xor
push
sub
(bad)
cmp
jo
movs
or
xchg
or
arpl
shl
sub
jno
sub
outs
fwait
pop
inc
xchg
lahf
(bad)
ret
push
pop
xor
xchg
retf
xchg
xchg
rcl
in
adc
mov
push
jo
lods
push
jge
and
jmp
ror
dec
inc
xor
loope
jne
sbb
test
imul
or
cdq
sbb
icebp
cmp
ret
repz
xor
xor
test
in
adc
sub
jno
arpl
cmp
dec
jmp
movs
xchg
adc
stos
and
in
(bad)
pop
mov
mov
mov
cdq
pop
outs
mov
and
cmp
out
jb
les
push
test
push
sahf
test
adc
sub
jo
retf
sbb
mov
mov
cmp
test
jge
test
mov
pop
cmp
mov
add
fcom
data16
and
cdq
imul
mov
or
lods
xor
fcomp
ss
pop
cmp
inc
ret
xor
test
inc
mov
or
sbb
lea
mov
mov
xor
inc
add
into
enter
imul
enter
hlt
inc
ret
loope
ror
jno
movs
dec
arpl
sub
jns
popa
hlt
xlat
adc
ror
and
xchg
outs
mov
jmp
aaa
push
ins
inc
enter
dec
jecxz
sbb
iret
xor
ror
cmp
in
xor
and
sub
cdq
sbb
fsub
sbb
out
push
sub
(bad)
cmp
push
hlt
ja
test
into
add
cdq
mov
sub
xchg
xchg
mov
xlat
jb
cwde
js
pop
(bad)
push
cmp
jecxz
lods
adc
cmp
adc
push
jl
push
and
data16
xlat
adc
add
aam
ss
repnz
jnp
or
jb
mov
dec
pop
xor
sbb
ror
sbb
jb
(bad)
in
mov
xor
cmps
xor
sub
jmp
pop
popf
or
cmps
pop
loop
or
shl
mov
adc
cmps
test
sub
dec
dec
cli
test
aam
les
jo
cwde
jno
and
leave
and
inc
ffree
inc
pop
cmp
inc
ss
inc
or
out
stos
inc
jecxz
mov
mov
add
lahf
mov
push
xchg
sbb
movaps
push
sbb
or
dec
mov
jns
ret
idiv
adc
cmp
bound
add
fucompp
or
nop
adc
lods
sbb
ds
sub
js
fwait
ror
mov
mov
sub
push
mov
adc
cdq
ss
aaa
cdq
mov
cmp
cmp
cmp
jmp
push
rol
push
sar
mov
jne
xchg
cmp
or
adc
pop
dec
cmp
adc
stc
sbb
cmp
mov
cdq
push
cmp
mov
les
push
xor
cmps
cmp
push
or
xor
dec
pop
mov
mov
adc
xor
jb
ror
sub
or
stc
push
imul
mov
adc
mov
jae
add
stos
shl
cmp
pop
mov
cmp
mov
popa
push
push
jns
fadd
xchg
push
fwait
mov
loope
push
cmp
pop
mov
xor
call
cwde
inc
in
adc
loop
and
or
lock
adc
mov
or
and
leave
mov
add
add
cld
mov
mov
inc
cdq
or
call
shl
cwde
ins
mov
int3
dec
xchg
adc
push
add
inc
mov
adc
mov
push
push
push
test
ret
movs
rcr
mov
mov
repz
push
sbb
or
push
pop
dec
pop
xor
popa
jno
mov
les
xchg
mov
adc
pop
(bad)
hlt
dec
or
sbb
or
xchg
mov
or
dec
pop
fidivr
mov
sbb
or
pop
punpckhdq
ret
xor
sbb
jb
jmp
sub
push
sbb
or
inc
cmp
push
ins
rol
lahf
mov
and
gs
cdq
mov
retf
inc
ins
adc
cmp
rcl
nop
xchg
mov
dec
mov
mov
dec
mov
(bad)
jmp
sbb
fwait
sub
xchg
fwait
pusha
xchg
repz
scas
pop
push
arpl
adc
mov
lock
jmp
repnz
ret
repz
xchg
pop
xor
les
mov
inc
mov
xchg
add
icebp
fisubr
xor
adc
call
mov
xchg
or
sbb
test
sbb
push
mov
push
data16
repnz
adc
xchg
add
jae
and
dec
xchg
stc
or
mov
sub
or
pop
daa
xchg
sbb
sub
scas
imul
pop
mov
xchg
sub
int3
std
xor
arpl
xchg
ret
push
icebp
imul
cmp
shl
sbb
xchg
sub
mov
or
pop
mov
sub
loope
fiadd
pop
(bad)
loopne
movs
or
in
jmp
retf
jno
sub
js
mov
xchg
mov
cs
sbb
push
mov
cmp
fdivr
imul
hlt
dec
lahf
or
repnz
xchg
sbb
ret
xchg
lods
jmp
leave
cwde
push
gs
aad
popf
xchg
shl
into
js
mov
es
out
push
and
stos
outs
sub
sahf
rcr
nop
push
sbb
arpl
rcl
imul
adc
sub
xchg
dec
adc
sub
dec
mov
xchg
clc
(bad)
les
fnstcw
shl
test
daa
jmp
icebp
dec
mov
inc
adc
retf
ins
clc
mov
dec
das
test
es
push
and
std
sbb
mov
mov
or
jae
or
nop
arpl
jp
mov
(bad)
(bad)
xor
and
movs
push
popf
fwait
pop
pop
rcl
ror
add
or
outs
ins
inc
popf
fcom
ret
pushf
(bad)
loope
mov
and
push
mov
aam
repz
enter
add
pop
in
inc
sub
cmp
mov
jmp
add
cmps
jb
in
or
popa
nop
popf
imul
pushf
push
mov
add
or
xor
jl
cwde
clc
mov
mov
ins
cmp
cwde
mov
inc
adc
int3
(bad)
fcom
sub
test
call
int
pop
cld
xor
les
jecxz
jbe
lahf
add
sub
lahf
sbb
push
and
or
ds
jge
xor
pop
xchg
lahf
adc
mov
sbb
call
sahf
and
imul
sbb
ret
adc
mov
les
xchg
add
call
xor
pop
or
jns
or
retf
xor
ror
jne
sar
retf
push
push
leave
and
movs
ret
sbb
popa
xor
int3
pop
or
lea
retf
lock
not
stos
pop
xor
rol
addr16
push
loope
mov
sub
xchg
cmps
imul
sub
enter
cli
fdivr
pop
xchg
jge
mov
mov
loop
inc
jmp
mov
jae
mov
lea
sub
ret
xor
or
lods
pop
pushf
xchg
pop
push
jl
push
push
pusha
in
xchg
mov
les
push
rcl
jmp
add
sub
je
xchg
adc
in
mov
adc
mov
dec
les
mov
arpl
in
lahf
in
mov
and
pop
adc
out
dec
jle
mov
ror
fwait
or
pop
mov
dec
fsub
sti
mov
in
and
shl
mul
jle
mov
lods
mov
inc
ret
inc
sti
lods
push
outs
js
push
mov
dec
bound
sub
push
mov
imul
lea
push
sbb
retf
cmp
enter
movs
push
xchg
out
sbb
test
fisubr
jg
loopne
inc
mov
jo
and
adc
popf
jmp
adc
pop
(bad)
enter
adc
mov
mov
dec
inc
repnz
dec
mov
daa
pop
push
mov
lods
jns
mov
or
call
pop
inc
mov
sbb
adc
jns
addr16
xor
test
mov
xchg
sub
test
sub
pop
push
pop
mov
cmc
push
mov
lods
xchg
loopne
or
lahf
sub
mov
lock
or
ret
add
fmul
dec
(bad)
mov
fisub
scas
loope
test
daa
sbb
out
mov
sub
ret
xchg
fwait
(bad)
xchg
mov
xor
inc
cmp
bound
adc
sbb
data16
fwait
cmp
push
add
popa
pop
addr16
sub
arpl
shr
fst
sahf
into
cmp
popa
(bad)
gs
xor
pushf
jns
mov
xor
xchg
xchg
cmp
mov
mov
cdq
jmp
rol
clc
or
pop
xchg
pop
sub
movs
loop
mov
sbb
fs
shr
lods
add
inc
dec
or
mov
cmps
xchg
into
mov
push
je
cmps
call
xor
std
sub
push
push
sbb
mov
movs
inc
mov
adc
mov
stos
and
dec
mov
adc
rcl
in
dec
jmp
sub
sbb
mov
fisttp
xchg
cmp
sahf
sub
and
loopne
adc
mov
mov
lea
jmp
mov
movs
or
(bad)
lock
pop
scas
lock
xchg
mov
xchg
cmp
push
mov
jmp
mov
or
mov
popa
cmp
call
mov
cwde
pop
ret
rcr
jmp
stos
mov
rcl
lahf
inc
int
mov
jbe
pop
mov
or
dec
hlt
adc
add
cld
or
mov
or
retf
jmp
or
nop
sti
sub
and
xor
inc
pop
out
scas
(bad)
or
add
mov
sbb
es
dec
sbb
dec
mov
in
xchg
sub
push
mov
inc
push
js
xchg
xor
test
pandn
push
test
jb
pop
mov
dec
cmp
out
xchg
and
pop
cmp
fiadd
int
push
fadd
nop
sbb
pop
adc
stos
mov
loopne
jecxz
sub
push
inc
mov
push
pop
add
push
loop
add
ins
push
xor
or
mov
into
or
mov
dec
mov
mov
popf
popf
push
je
sbb
stos
xchg
xor
ror
mov
call
dec
jne
mov
js
or
push
lock
enter
rcl
pop
pop
retf
and
ret
sbb
or
mov
repnz
inc
jbe
or
xchg
push
leave
shl
pop
inc
xchg
xchg
mov
sbb
pushf
aaa
pop
fst
loopne
les
inc
jno
repnz
inc
(bad)
popa
cmps
js
or
or
xchg
jns
loop
adc
adc
mov
mov
mov
xor
push
std
mov
xchg
and
repnz
push
pop
gs
dec
lods
jb
cdq
cmp
or
sbb
leave
adc
outs
xor
cmps
or
movs
mov
icebp
xchg
pop
(bad)
test
scas
iret
aaa
inc
out
mov
or
sub
rcl
rol
mov
addr16
mov
mov
push
ds
leavew
xchg
dec
jnp
int
mov
xlat
stos
push
xchg
ss
loop
outs
fnstsw
sbb
stos
cmps
int
mov
iret
push
and
sub
sbb
xchg
mov
jecxz
xchg
jecxz
xchg
(bad)
dec
addr16
mov
or
in
imul
lods
stos
lods
sub
ins
fidivr
mov
push
aam
cmp
sub
xchg
dec
mov
nop
inc
stos
ror
fist
sbb
fwait
imul
shl
(bad)
jp
mov
call
sbb
pop
mov
pop
xor
and
scas
pop
mov
repz
sub
mov
in
dec
enter
mov
jae
call
mov
out
sub
lods
fisubr
mov
ins
aad
xchg
and
xor
mov
ficom
pop
xor
mov
repz
mov
sti
sbb
daa
mov
retf
xchg
add
pop
xor
(bad)
jle
ss
in
ss
aaa
aaa
jne
push
jno
xchg
or
outs
cwde
jne
int
inc
lea
sbb
test
into
mov
and
test
rol
pop
push
add
adc
xor
enter
imul
pusha
sub
lea
inc
xor
or
fsub
mov
inc
jae
test
fisttp
gs
xor
xor
pushf
aaa
fst
adc
pop
sbb
mov
cmp
jne
cmp
xlat
adc
lds
push
push
cmp
mov
add
adc
or
cmps
loopne
fisub
int
in
lea
pop
push
or
push
lea
nop
fld
lea
arpl
aaa
sub
gs
push
push
pop
test
int
push
add
and
ins
shr
jl
data16
aaa
mov
das
adc
sbb
push
movs
jbe
test
lea
(bad)
cmp
push
aaa
sub
dec
push
les
or
jb
xor
cwde
out
nop
push
jle
and
push
cmp
imul
adc
fnop
dec
inc
inc
inc
dec
aaa
rcl
adc
nop
inc
in
inc
cmps
test
outs
loope
out
xor
xchg
loop
pushw
movs
sar
adc
cmp
arpl
lahf
sar
int
adc
loopne
int3
sub
and
dec
jns
gs
ror
cmp
mov
(bad)
sub
push
dec
jmp
push
xchg
xchg
sbb
or
or
mov
push
jp
in
mov
mov
fldcw
pop
xchg
rcr
xchg
aam
inc
in
not
dec
mov
sub
fdiv
push
in
pop
pushf
mov
jmp
adc
pop
std
(bad)
je
xor
sub
or
jmp
dec
mov
push
(bad)
int3
xor
jns
shl
fadd
mov
mov
rcl
call
xor
push
xor
pop
aas
jae
loope
data16
retf
call
mov
loop
imul
clc
into
lock
and
add
(bad)
dec
jmp
scas
add
retf
jo
dec
test
sbb
leave
xchg
inc
mov
mov
loop
aaa
adc
shl
ss
or
aaa
sub
fisubr
ins
out
jp
add
aad
mov
fcom
movs
xor
dec
retf
adc
ins
dec
mov
movs
mov
(bad)
pusha
stc
inc
lods
call
sub
mov
or
inc
ret
sbb
xor
sub
pop
mov
clc
punpckhdq
add
mov
fwait
inc
mov
and
or
(bad)
je
inc
loop
inc
mov
pusha
xchg
call
int3
sbb
push
adc
bound
shr
mov
ins
test
fadd
or
cmp
and
test
dec
inc
mov
(bad)
lea
cmp
(bad)
shr
leave
cmp
sub
push
inc
and
mov
xor
jl
inc
dec
cmp
or
xor
cmp
sub
dec
lods
sbb
sbb
rcl
add
pop
je
inc
adc
sub
or
data16
int3
or
adc
inc
or
jb
pop
dec
sbb
movs
stos
mov
xor
dec
out
sub
mov
mov
inc
dec
xchg
pusha
test
aaa
enter
add
lahf
push
mov
sbb
jae
xor
push
pop
mov
add
es
lea
sub
nop
inc
retf
mov
ins
push
rcl
adc
sbb
call
les
ins
ror
in
sbb
sub
scas
cmps
or
(bad)
sar
sbb
cli
dec
ficom
push
or
ret
mov
and
mov
movs
call
xor
in
aas
sbb
es
fs
sub
aas
lea
cmps
dec
mov
and
test
dec
mov
push
cmp
sub
push
rol
push
mov
cli
mov
sub
test
jne
adc
xor
pusha
jnp
xlat
ss
(bad)
adc
ret
push
or
(bad)
fwait
dec
push
popa
inc
or
in
int3
xor
adc
fidivr
mov
inc
int
dec
sub
cwde
push
jecxz
mov
sub
fimul
(bad)
pop
add
push
(bad)
sahf
popa
xchg
and
xchg
or
stos
push
cmp
dec
push
std
dec
push
les
sbb
dec
push
jle
inc
or
push
mov
pop
shr
mov
je
push
fcomp
or
push
mov
mov
push
xor
or
dec
push
sbb
or
xchg
push
mov
dec
dec
jmp
jo
xor
cdq
sbb
stos
shr
mov
inc
int
inc
jb
and
push
movs
or
and
scas
stc
daa
sub
cmp
rcr
xor
into
xor
jne
cdq
add
and
les
movs
mov
sbb
and
jns
stos
jge
sbb
cmp
push
or
pusha
or
sbb
xor
lods
retf
inc
inc
xchg
sub
cld
and
dec
mov
lods
test
mov
shl
imul
pop
adc
ins
adc
into
fst
mov
loope
xor
sbb
jmp
xor
or
(bad)
retf
shl
inc
mov
ror
mov
mov
adc
(bad)
cwde
xor
mov
inc
sahf
jae
shr
ret
aad
mov
pop
xor
imul
cmps
mov
xor
js
jne
jae
cmc
cmps
in
inc
push
inc
sahf
inc
mov
jne
int
sub
inc
loope
fidivr
jno
scas
jno
pop
and
mov
adc
sbb
or
sub
daa
adc
sbb
jmp
xor
hlt
push
push
mov
and
jne
mov
stos
stos
int
repz
retf
gs
cmps
mov
jae
ror
or
inc
sub
cdq
dec
xchg
xchg
jge
xchg
mov
or
adc
mov
fimul
iret
mov
es
sub
pop
js
clc
je
sub
rol
test
loop
fidiv
mov
out
sar
lea
add
xchg
jb
sub
push
cdq
sub
or
push
dec
xchg
sub
dec
aas
and
mov
and
(bad)
mov
(bad)
sbb
add
call
push
aaa
mov
pop
pushf
sub
jnp
ret
cmps
or
in
adc
cdq
push
xlat
push
dec
push
cmp
adc
mov
fwait
jae
es
outs
inc
pop
ror
addr16
adc
sub
add
pop
outs
push
mov
sub
(bad)
push
fisub
pop
sub
std
dec
mov
xchg
xlat
ins
inc
es
and
enter
gs
xchg
icebp
int3
mov
adc
sar
pop
aad
fcomp
add
dec
add
cmp
xchg
push
pushf
mov
ret
jl
dec
mov
dec
repz
mov
(bad)
imul
into
ins
fcom
push
or
test
sbb
add
jge
aaa
cwde
(bad)
loopne
fcomip
push
(bad)
je
cmps
push
inc
add
pop
ins
inc
push
fcom
xchg
ins
push
inc
sub
dec
mov
dec
ror
ret
sar
retf
lds
sqrtps
int3
mov
and
loopne
mov
pop
pushf
or
mov
jp
or
imul
and
xlat
xor
dec
push
jl
pushf
hlt
popa
pop
dec
xor
push
pushf
popa
mov
mov
xor
cmp
inc
ss
or
fstp
mov
loope
mov
mov
push
ss
pop
inc
int3
adc
enter
mov
xchg
stos
movs
inc
or
cmp
icebp
add
mov
push
pop
dec
(bad)
cmp
retf
iret
xchg
retf
scas
xor
adc
or
xor
sub
mov
inc
and
int
loopne
xor
adc
add
or
jne
xchg
jns
call
imul
lock
out
ins
xchg
cmp
dec
xor
les
fxch
jae
or
jl
pushf
loopne
cmp
ror
lea
pop
int
cmp
ss
xchg
iret
pop
test
and
dec
inc
add
pop
inc
adc
ror
(bad)
push
fst
int
popa
retf
test
mov
rol
dec
je
add
fs
jl
(bad)
jb
popf
and
push
test
rcr
dec
mov
add
or
lahf
cwde
inc
aaa
cmc
int
enter
push
mov
pop
adc
add
fmul
pop
or
scas
fmul
dec
movs
mov
inc
inc
test
mov
mov
mov
lea
mov
adc
pop
test
fdivr
popa
movs
inc
pushf
test
scas
int
lahf
xchg
mov
enter
out
pop
dec
push
lds
sbb
dec
dec
fucom
cmp
pop
push
add
sbb
xchg
mov
sahf
inc
push
or
inc
and
xor
inc
xlat
push
enter
popf
clc
mov
hlt
fstp
int3
mov
add
lds
mov
mov
call
xchg
mov
xchg
fs
arpl
arpl
pushf
push
ins
les
dec
dec
inc
gs
shr
addps
clc
mov
dec
cwde
xor
xor
add
call
int
test
pop
push
pop
arpl
test
add
loope
sbb
(bad)
add
add
fwait
out
aad
sbb
mov
and
jne
push
ficom
dec
add
int
and
sub
mov
js
or
push
xor
inc
out
adc
xchg
xor
inc
dec
cmp
aaa
push
dec
jb
mov
test
fidiv
pop
adc
or
cmp
or
ja
dec
fstp
mov
add
xor
inc
add
sbb
xor
and
pusha
imul
dec
inc
movs
and
dec
push
mov
iret
pusha
xlat
inc
pushf
shr
xchg
fldenv
adc
dec
adc
test
mov
fs
jp
xlat
icebp
cmp
test
repnz
aaa
fsub
dec
mov
pop
sbb
mov
push
mov
mov
push
push
push
dec
push
dec
add
loopne
xor
inc
mov
or
movs
les
in
add
in
fstp
cmps
test
sub
pop
jge
or
cmp
aad
dec
hlt
cld
test
ins
inc
aaa
ror
(bad)
pop
(bad)
(bad)
inc
inc
inc
and
pop
cmps
imul
adc
cmp
push
pop
int3
call
test
cmp
test
ret
jl
ret
ficomp
dec
inc
scas
or
fcmovu
stos
and
push
test
outs
add
adc
xor
xor
xchg
xor
add
inc
mov
ss
outs
or
sub
ret
lds
or
jmp
and
cmp
sub
sbb
push
jo
sbb
mov
je
ret
dec
call
dec
mov
push
mov
dec
les
mov
sbb
retf
in
pop
xor
xchg
pop
in
bound
cmp
xchg
mov
fnstenv
scas
adc
cwde
xchg
je
aaa
add
mov
hlt
push
loop
lods
push
js
mov
lods
push
clc
push
mov
pop
push
adc
xchg
movs
dec
inc
mov
dec
test
movs
xor
in
test
adc
pushf
adc
push
push
xchg
ret
lahf
or
add
mov
(bad)
std
pop
pop
mov
sub
or
ds
clc
retf
fs
dec
adc
push
fnsave
call
push
and
lock
push
sbb
xor
xchg
stos
cdq
push
(bad)
aam
out
or
inc
add
xchg
adc
dec
loopne
sbb
jo
fs
cs
sbb
in
(bad)
pushf
movs
in
mov
dec
in
mov
xchg
js
movs
imul
aam
xchg
cmp
xchg
xchg
jmp
push
xchg
pushf
(bad)
cmp
jo
mov
pop
push
dec
push
imul
in
rcr
and
test
cli
ret
pop
mov
ins
arpl
jb
imul
cmc
inc
inc
in
push
hlt
int3
int3
jmp
shr
push
sbb
test
ja
pop
pop
push
or
in
ins
in
adc
aam
nop
sbb
mov
add
loop
mov
mov
add
inc
or
add
xchg
and
mov
nop
pop
dec
dec
inc
test
inc
inc
aam
cmp
jp
or
inc
fwait
dec
movs
inc
pusha
mov
dec
mov
cmp
sub
mov
retf
xchg
pop
sbb
lea
retf
sub
ror
leave
mov
push
out
movs
pop
and
and
dec
and
inc
into
jmp
mov
fisttp
outs
push
mov
xor
fadd
ret
lods
push
xchg
jbe
push
pusha
add
push
or
into
and
ins
dec
aaa
sub
fwait
sbb
dec
sbb
aad
test
sar
push
inc
pop
mov
add
mov
(bad)
mov
scas
fld
dec
pop
mov
sub
jp
dec
jmp
push
xchg
push
mov
ins
lods
scas
xchg
push
xchg
ins
mov
into
pop
xor
cmp
int
add
adc
push
ror
stos
aaa
mov
mov
dec
cmp
xchg
and
sub
inc
jl
shl
inc
stos
ror
cs
int3
in
or
mov
push
or
sahf
aad
cmc
adc
gs
aad
xor
push
mov
icebp
xor
inc
jecxz
push
lahf
cmp
or
inc
ror
dec
xor
or
out
(bad)
bound
retf
and
ds
jl
xchg
(bad)
lds
icebp
adc
xor
call
xchg
nop
fmul
popa
scas
push
js
or
mov
movs
jne
cwde
sbb
mov
jb
(bad)
mov
add
ins
cmp
call
sahf
sbb
cmp
ss
dec
arpl
and
dec
aam
sbb
cmp
mov
(bad)
lods
aam
push
sbb
leave
jl
fwait
or
push
pop
div
add
inc
fdiv
dec
dec
mov
push
icebp
out
cs
mov
lahf
cwde
pop
fwait
add
js
jle
push
mov
mov
in
mov
or
rcl
mov
pop
mov
xchg
push
stc
xchg
dec
push
dec
xchg
nop
inc
scas
mov
mov
ror
mov
pop
shl
fcom
mov
mov
fsubr
and
jg
frstor
ins
jmp
enter
pop
and
inc
xor
les
sbb
adc
les
movs
adc
gs
rol
push
test
inc
xchg
je
inc
ret
jne
or
iret
fs
inc
or
inc
fild
xchg
ja
test
add
shl
mov
xor
and
cld
mov
mov
adc
gs
dec
and
jo
in
jmp
psllw
cmp
add
jo
clc
mov
xchg
out
pop
ins
shl
dec
dec
fst
cwde
push
add
pusha
fsub
xchg
ficomp
pop
jne
mov
add
mov
xor
xlat
es
mov
mov
fmul
arpl
jbe
inc
add
cmp
pop
frstor
lahf
xchg
imul
int3
adc
mov
mov
cmp
add
xchg
adc
push
pop
ror
std
mov
neg
pop
popf
xchg
mov
lods
arpl
xor
and
mov
cdq
cmp
cdq
xor
push
fwait
push
loope
add
mov
mov
sub
cmc
(bad)
pusha
or
(bad)
mov
leave
nop
repnz
out
mov
(bad)
fs
xchg
pop
test
push
inc
jl
xor
ror
mov
pop
push
iret
fs
pop
jne
pop
shl
cmp
mov
bound
or
cld
mov
outs
inc
fdiv
xor
dec
lock
movs
test
hlt
cmp
jb
dec
dec
je
xor
iret
je
shl
outs
cwde
pop
dec
inc
inc
push
xchg
mov
lds
inc
jbe
push
cmp
inc
les
jns
fsub
int3
rol
bound
pop
lahf
inc
dec
lods
cmp
push
les
loop
cld
or
add
les
mov
fcmovb
jl
mov
xchg
inc
inc
mov
sub
mov
inc
loopne
ins
push
mov
dec
dec
outs
retf
cmp
int
and
stc
inc
mov
mov
and
pop
dec
push
sbb
xchg
push
xor
pop
dec
fwait
sti
inc
popa
cmp
jns
mul
mov
mov
hlt
xchg
dec
jl
cmp
aas
in
push
dec
(bad)
fld
jne
cdq
mov
aad
jae
push
mov
lahf
movs
test
add
in
push
pop
std
sbb
mov
test
int
(bad)
push
mov
sub
fisttp
add
push
fnstcw
outs
fldenv
mov
in
xor
aaa
ins
loope
ss
ins
fnstenv
mov
jae
mov
mov
imul
or
dec
imul
(bad)
fcmovnb
jno
mov
pop
(bad)
ins
inc
xchg
xchg
sbb
adc
jno
rol
mov
(bad)
scas
imul
(bad)
retf
xchg
add
in
jo
retf
imul
aad
xchg
sbb
mov
xor
(bad)
xchg
sbb
mov
mov
fidiv
mov
add
jo
ret
xlat
(bad)
fstp
jnp
xchg
ins
mov
in
inc
cmp
into
jecxz
jb
inc
sbb
(bad)
pop
pushf
aaa
mov
jbe
in
outs
ins
fdivr
inc
mov
rcr
jp
fidivr
dec
jbe
xchg
movs
push
in
mov
xor
ins
sbb
addr16
fidiv
data16
fnstenv
arpl
mov
call
int3
dec
pop
sbb
shl
stos
test
outs
adc
xchg
addr16
xchg
cmps
fwait
jno
dec
(bad)
pushf
stos
(bad)
mov
in
sbb
adc
retf
sbb
adc
or
sub
cmps
ins
mov
mov
out
cmps
imul
mov
and
and
mov
lahf
sbb
mov
fwait
outs
pop
cmp
sbb
addr16
call
in
inc
out
or
push
aam
fwait
jo
and
fwait
push
mov
call
mov
mov
imul
xchg
lods
mov
cdq
fs
stos
and
cdq
data16
mov
or
inc
lea
daa
popf
jb
add
xchg
cmps
mov
mov
adc
mov
rcr
imul
mov
stos
mov
stos
mov
or
jae
jmp
cmps
lods
mov
mov
xor
loop
mov
add
fwait
imul
cmps
int3
add
push
call
dec
or
ins
je
sbb
fldcw
int
enter
out
dec
hlt
call
iret
cli
dec
ret
cld
leave
sub
jb
test
pop
in
shl
stos
fstp
scas
pop
mov
(bad)
stos
or
(bad)
xor
pushf
mov
pop
jb
call
mov
mov
retf
xchg
outs
pop
cmp
push
inc
adc
scas
fwait
pop
dec
aaa
sbb
cmp
sbb
inc
add
dec
push
push
rcr
jno
or
(bad)
fs
cmp
mov
scas
mov
rcr
mov
out
cs
dec
aas
cmc
cmp
call
sbb
mov
cld
cwde
cdq
mov
push
(bad)
cmps
stos
sahf
mov
arpl
int
add
mov
cli
cmps
es
fs
sbb
data16
loope
int3
cmp
mov
dec
and
sbb
mov
lods
loope
adc
dec
jmp
in
mov
mov
mov
xchg
iret
aam
inc
and
sbb
pop
addr16
shl
xchg
adc
xchg
(bad)
sbb
in
pop
cmc
sbb
xor
lods
inc
adc
push
mov
xor
movs
push
mov
mov
add
add
pop
xor
push
jnp
mov
adc
mov
mov
enter
popf
dec
xor
xchg
int3
pop
mov
push
stos
mov
xlat
dec
fdiv
nop
and
or
mov
popa
and
push
lds
inc
rcr
inc
add
and
xor
mov
xchg
inc
in
test
cmp
push
pop
xor
and
test
xor
inc
mov
inc
pop
mov
test
sbb
int3
sbb
xchg
test
dec
enter
or
xchg
or
mov
xchg
sub
aad
adc
outs
fs
ja
iret
jno
push
xchg
in
mov
or
or
sub
leave
ss
add
mov
push
jle
add
into
pop
out
mov
ss
and
lods
cmp
aam
inc
lods
bound
or
push
pop
sbb
stos
out
test
sbb
data16
lods
ins
gs
and
adc
or
mov
cmps
and
fcom
test
mov
add
jl
inc
fistp
and
pushf
test
sahf
pop
mov
loope
jae
add
dec
xor
fmul
or
dec
jle
adc
or
lds
jae
jecxz
and
rcr
or
(bad)
aam
or
ror
retf
js
adc
jns
sbb
jno
mov
lods
movs
xchg
add
(bad)
rcl
push
add
sbb
cmp
adc
inc
xchg
push
and
test
and
sbb
cdq
or
xchg
loope
ficomp
or
les
imul
xchg
xchg
xchg
push
(bad)
xor
in
mov
mov
daa
stc
addr16
jno
cmp
mov
ror
push
cmp
pop
adc
mov
add
(bad)
push
mov
lods
sbb
and
xor
inc
add
mov
call
xor
jb
push
shr
int
rcl
mov
push
cwde
pop
popf
inc
inc
or
loope
jno
lods
and
mov
mov
rcl
mov
dec
sub
push
dec
cmp
nop
sbb
dec
lods
ret
test
adc
push
pop
inc
inc
ins
jmp
xor
out
ror
add
sub
int
(bad)
xor
cmp
stos
cmp
xchg
mov
push
dec
dec
cmp
nop
popf
mov
stos
idiv
outs
inc
xor
popf
xchg
lds
sub
sub
mov
fdivr
pop
scas
ss
(bad)
fs
inc
push
fs
(bad)
mov
push
cmp
or
test
sbb
int3
pop
pavgw
neg
inc
cmp
xor
ret
mov
stos
mov
pop
inc
into
add
lea
repnz
push
cmc
out
in
das
dec
mov
mov
push
pop
mov
test
and
dec
mov
mov
fmul
(bad)
cmp
sbb
inc
or
mov
jecxz
jbe
push
cmp
xchg
imul
(bad)
es
imul
pop
inc
stos
cmc
and
mov
xchg
xor
pop
jmp
sahf
sbb
icebp
stos
mov
fisub
cmps
mov
jmp
sbb
cmp
and
adc
inc
or
pop
daa
cmp
adc
jbe
cmp
aaa
or
push
and
into
cmp
gs
ins
cmp
cmp
ret
stc
pop
xor
lods
or
repz
call
and
cmp
adc
sbb
jnp
xor
inc
dec
inc
das
(bad)
pushw
inc
inc
sub
mov
mov
ins
test
int
mov
jecxz
pop
mov
and
or
xor
loope
mov
pop
cld
in
xchg
cmp
out
rcl
or
and
int
imul
jno
push
int
mov
fucomi
bound
movs
mov
cmp
add
mov
in
stc
push
xor
leave
lock
mov
and
sbb
mov
out
lds
mov
jle
or
xlat
mov
push
jne
xor
xor
xor
inc
je
xchg
jo
fs
xchg
pop
jg
push
sub
shr
sti
out
lds
dec
hlt
in
pop
xor
mov
or
fcom
or
les
adc
or
imul
cmp
inc
add
sub
sub
inc
sub
add
pop
add
je
add
add
(bad)
inc
add
pop
adc
pop
sbb
and
and
xor
inc
add
dec
add
or
add
popa
xor
sbb
ror
add
add
dec
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
pop
add
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
retf
mov
sub
mov
mov
add
push
xchg
sub
pop
cmp
idiv
mov
popf
mov
sub
xchg
inc
imul
xor
shl
fisub
fsub
pushf
addr16
mov
movs
push
sub
and
ret
sub
call
cmc
mov
mov
shr
(bad)
sbb
lods
pop
loopne
inc
pusha
fs
xlat
movs
sub
addr16
mov
je
ins
dec
lahf
push
js
pop
or
or
add
inc
jp
and
cmp
lods
je
scas
add
xor
lea
mov
ja
dec
movs
lds
pushf
push
mov
inc
les
call
iret
push
enter
jmp
sub
xor
xor
dec
xor
mov
call
pop
and
cmps
fld
jb
imul
add
and
jbe
and
fld
and
cdq
push
mov
jp
mov
xor
adc
test
js
sub
inc
icebp
ss
stos
js
fild
lock
xchg
or
jo
addr16
jns
push
iret
in
xchg
jmp
mov
(bad)
pop
icebp
xor
je
test
push
fst
ins
imul
aaa
mov
scas
pusha
lahf
ret
mov
inc
(bad)
out
mov
lods
scas
js
push
shl
int
(bad)
push
and
sub
xchg
out
int
cdq
bound
mov
call
push
imul
inc
in
imul
stc
sahf
pop
inc
jp
mov
xchg
loop
test
sahf
and
ins
scas
add
sahf
test
push
inc
or
sub
cmp
loop
fwait
stos
sub
lods
shl
xor
bound
ins
jns
inc
adc
outs
iret
dec
lock
jmp
lods
ins
cmp
jg
adc
out
xor
jge
ret
stos
sub
call
loope
lea
jl
repz
xor
pop
ficom
inc
mov
xchg
push
pop
jbe
shr
sbb
daa
les
call
sub
add
add
shr
dec
lahf
enter
int
push
mov
mov
mov
push
dec
mov
adc
and
pop
into
test
mov
outs
cmp
repz
cs
add
idiv
into
sbb
xchg
out
(bad)
pop
div
lock
jge
(bad)
fisubr
sub
shr
cmp
dec
movs
imul
sub
lock
ret
(bad)
and
mov
sbb
jae
mov
in
aas
and
dec
cmp
ja
test
fdivr
mov
arpl
outs
mov
push
test
popf
inc
test
(bad)
in
or
inc
imul
mov
fcmovu
pop
dec
repnz
outs
sub
mov
loop
aas
movs
jne
pop
clc
outs
loop
fwait
loop
aaa
inc
shr
inc
inc
cdq
adc
xor
clc
mov
adc
test
mov
ja
pusha
jp
pushf
adc
stos
push
fldcw
push
shl
mov
add
mov
sbb
cmp
sbb
lock
sar
jnp
jge
xchg
jnp
or
(bad)
jb
stos
push
mov
lahf
mov
xlat
call
push
inc
push
or
mov
add
sub
add
das
or
jmp
pop
rcr
out
push
mov
xor
mov
movs
add
div
stos
or
loop
lea
lahf
adc
xor
sub
inc
sub
sar
and
mov
mov
mov
outs
mov
sub
sub
xchg
jae
nop
punpckhdq
sub
jns
out
mov
xchg
scas
mov
fiadd
pop
mov
(bad)
cmp
stos
aas
pop
js
pop
or
inc
aad
aas
jbe
out
jns
xchg
add
inc
sub
and
mov
fldl2t
push
push
sub
outs
movs
fild
addr16
pop
fadd
jecxz
xor
fdivr
dec
mov
jmp
arpl
outs
gs
xchg
pop
retf
test
push
inc
pusha
unpckhps
je
enter
inc
mov
pop
ret
jmp
sub
pop
clc
cdq
push
fisub
dec
cdq
push
lahf
jo
jp
mov
jge
pop
aam
mov
shr
add
rol
push
or
dec
out
aad
adc
imul
(bad)
scas
mov
fadd
aas
loope
xlat
into
cmp
(bad)
dec
xchg
popa
aad
mov
xchg
icebp
shl
or
jp
mov
jae
(bad)
cli
int3
pop
and
mov
lds
xchg
and
pushf
jge
sar
lock
std
(bad)
(bad)
adc
adc
sub
jmp
sahf
sbb
mov
leave
imul
gs
iret
scas
or
mov
div
mov
in
mov
mov
mov
(bad)
mov
cli
or
pop
sbb
outs
in
popa
call
and
push
lock
lea
aaa
loope
imul
mov
(bad)
bound
jle
xor
cmps
mov
pop
cmp
icebp
lea
imul
rol
inc
ds
jge
imul
adc
mov
sub
inc
ds
movs
jae
(bad)
mov
cmp
jae
mov
fsubr
sbb
(bad)
in
lahf
dec
mov
ficom
pop
jns
mov
pop
in
data16
dec
aam
mov
pushw
dec
adc
sbb
leave
shr
loop
mov
fnstcw
(bad)
xlat
(bad)
mov
inc
jns
test
mov
scas
retf
xor
sbb
add
movlhps
jmp
pop
mov
mov
push
inc
and
data16
jl
sar
add
xor
dec
retf
pop
es
lea
les
or
dec
ror
mov
aas
scas
xor
mov
movs
in
add
push
icebp
daa
ret
in
loop
dec
or
or
sub
data16
out
fstp
in
leave
stos
call
adc
jge
mov
loop
in
dec
es
mov
jae
sbb
cmp
call
and
mov
inc
dec
das
dec
jae
push
sub
xor
mov
cld
dec
stos
call
add
push
mov
repnz
sub
mov
(bad)
cli
mov
jge
dec
mov
mov
data16
test
xchg
mov
jmp
jmp
fistp
js
lds
pop
mov
ss
jns
pop
mov
xlat
pushf
push
inc
(bad)
les
mov
call
ds
sbb
repnz
nop
add
add
inc
cmp
ret
inc
adc
or
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
clc
(bad)
xor
cmp
inc
add
sub
sbb
enter
lods
pop
js
push
mov
inc
xchg
dec
rol
jb
popa
push
cmps
sbb
fild
rcl
inc
sbb
and
aas
mov
fistp
add
jo
(bad)
jl
shl
(bad)
cmc
jg
xor
outs
xor
sbb
pusha
leave
loopne
fdivr
sbb
outs
and
xchg
ret
xor
mov
ins
push
xor
les
shl
imul
scas
in
nop
cmp
cmp
adc
les
dec
or
stos
outs
nop
jl
or
inc
movs
ds
imul
inc
jns
ss
and
pop
dec
jecxz
xor
fistp
xchg
xor
lods
inc
call
jg
(bad)
lods
retf
movs
pop
sub
push
xchg
enter
iret
push
outs
clc
pop
div
mov
push
cmps
mov
push
ficom
dec
adc
ins
or
add
inc
jno
int
sub
mov
mov
push
jne
jge
dec
xchg
(bad)
movs
mov
lahf
cmps
jecxz
push
pop
jb
iret
outs
clc
jge
outs
aaa
sub
mov
xchg
push
repnz
out
or
clc
popa
add
pop
inc
movs
not
ror
ins
ins
pop
mov
cdq
sbb
cmp
mov
arpl
xchg
push
push
test
je
or
imul
pop
sbb
scas
sub
out
int
dec
stos
adc
jae
mov
std
outs
xchg
dec
push
mov
scas
call
xor
add
test
add
add
movs
jbe
clc
fcmovnb
xor
sub
js
leave
sub
pop
frstor
pop
lods
jns
fisttp
fimul
pop
addr16
arpl
adc
jnp
ins
pop
pop
push
test
inc
ja
daa
lock
add
iret
sub
fist
mov
addr16
dec
outs
cmp
cmp
mov
imul
arpl
mov
inc
test
rol
retf
aam
xbegin
std
xchg
cmps
xchg
in
pop
xor
mov
int
sub
cmp
push
pop
sub
repz
imul
and
leave
fdiv
in
es
inc
or
int
fsub
add
dec
xchg
test
cmp
(bad)
icebp
ds
mov
push
cmp
inc
mov
neg
adc
mov
fwait
mov
push
xchg
sahf
jno
xlat
add
sub
test
outs
pop
push
xlat
scas
cmc
movs
cs
outs
jae
xchg
(bad)
jle
mov
cli
fwait
ds
das
cmp
stos
lods
movs
cmp
repz
(bad)
xchg
xor
sar
shr
mov
mov
push
stc
jnp
pushf
scas
push
hlt
aas
pop
jmp
sahf
popf
mov
gs
(bad)
lahf
fst
mov
leave
neg
inc
data16
sub
repz
(bad)
jmp
or
stos
xor
in
jg
ins
test
aad
xor
call
jb
arpl
mov
cmp
nop
jg
xlat
xchg
or
shl
gs
test
jae
dec
cmp
fdiv
scas
xchg
ret
loop
mov
loop
stos
gs
mov
(bad)
bound
sbb
js
dec
scas
and
out
mov
sub
pop
inc
add
js
es
push
retf
dec
div
ins
jmp
clc
jle
test
into
cmp
jmp
scas
ret
imul
xchg
sahf
pushw
mov
cmp
pop
pop
adc
mov
ret
and
mov
fsubr
mov
mov
mov
sub
mov
sub
mov
sub
mov
sub
cmp
stos
jmp
sub
xchg
inc
inc
jge
add
jmp
push
mov
dec
lahf
not
inc
sbb
(bad)
adc
push
std
fdivr
add
(bad)
movs
mov
mov
add
lods
jl
sbb
jg
mov
lock
add
jecxz
add
icebp
add
test
test
jle
mov
cmp
sub
xor
push
jne
push
sar
ret
rcr
xchg
arpl
std
imul
sbb
mov
push
lahf
dec
mov
cmp
imul
(bad)
mov
or
inc
push
mov
(bad)
call
mov
idiv
sub
test
pop
inc
lahf
xor
add
cld
imul
cld
sbb
mov
xchg
ins
mov
fmul
jno
push
xor
mov
fist
aam
pop
int3
(bad)
repnz
lock
push
cmps
and
loop
xor
cmp
mov
inc
clc
(bad)
rcl
mov
inc
fild
or
sbb
fcomi
mov
pop
data16
(bad)
aas
sub
pop
aas
out
movs
enter
imul
jg
psrad
cli
pop
lahf
sti
clc
mov
(bad)
and
add
mov
xor
mov
sbb
pop
test
xchg
sub
outs
mov
call
fs
mov
mov
mov
cmp
and
cmps
das
cmp
ds
mov
(bad)
(bad)
pop
pop
aaa
(bad)
mov
shl
outs
sti
or
xlat
inc
iret
(bad)
inc
adc
xchg
movs
dec
aas
loopne
(bad)
xor
clc
inc
cmp
inc
inc
(bad)
inc
mov
out
jne
mov
jg
cmc
stos
sub
js
cli
addr16
in
cmp
clc
push
fisubr
(bad)
jg
movs
(bad)
sti
ret
cld
imul
xor
popf
dec
pop
xchg
and
and
jb
adc
out
add
cmps
pop
push
pop
fsubr
popa
movs
cmp
aas
mov
jns
hlt
int3
mov
xor
loopne
adc
out
jge
xchg
jp
pop
icebp
lods
mov
xor
cmp
mov
sub
pop
mov
lods
imul
xor
aas
loope
(bad)
(bad)
cld
mov
icebp
mov
(bad)
jge
(bad)
(bad)
scas
clc
(bad)
push
int3
int3
xor
out
dec
pop
cli
lahf
into
mov
stos
out
imul
mov
out
aas
out
jmp
dec
arpl
icebp
out
pop
std
(bad)
pop
icebp
lods
ret
and
stc
aad
ins
fbstp
retf
jge
mov
das
test
lock
aas
repz
lahf
idiv
jg
xchg
(bad)
adc
inc
mov
mov
aas
mov
ret
jmp
adc
fs
add
cmps
mov
add
jmp
cld
push
pop
inc
lahf
js
add
repnz
lea
sub
ret
ret
rcr
test
sub
pop
enter
cmps
scas
es
lock
repz
pop
std
(bad)
pop
icebp
cmps
invd
imul
dec
rcl
add
fidivr
jbe
int
cmp
in
xchg
outs
cmp
push
scas
sbb
es
push
arpl
cmp
xchg
dec
add
jne
inc
inc
sbb
daa
mov
dec
xor
(bad)
mov
cdq
jle
aaa
dec
jns
add
(bad)
mov
mov
in
test
in
rcr
add
jns
push
jmp
aas
std
idiv
fwait
inc
xor
ins
cmc
adc
cmp
xchg
lahf
add
mov
fwait
(bad)
sti
pop
icebp
movs
inc
test
les
(bad)
div
jg
mov
repz
(bad)
xor
jnp
add
inc
int3
mov
or
ss
mov
inc
lea
jl
stos
push
(bad)
adc
test
cmp
pop
mov
(bad)
xor
mov
aas
jmp
inc
call
adc
xchg
rcl
adc
inc
add
adc
inc
add
adc
inc
push
fwait
lock
jmp
mov
pop
pop
lock
push
out
(bad)
cld
int
mov
call
push
retf
std
sub
mov
mov
sub
cmc
sbb
(bad)
call
or
mov
adc
int
test
adc
aaa
add
scas
add
(bad)
jmp
into
pop
fidivr
mov
pop
push
jb
xchg
out
(bad)
xchg
aas
mov
test
mov
inc
icebp
(bad)
fwait
ja
imul
pop
jns
xchg
repnz
lock
jmp
sti
pop
arpl
ins
scas
paddw
xchg
push
pop
xchg
gs
mov
and
sub
mov
jae
cmc
push
jnp
sub
test
jne
mov
cmp
in
push
cmp
pop
lods
cmp
scas
xlat
inc
mov
mov
push
xchg
ja
outs
cs
in
and
cli
xchg
int
mov
hlt
sbb
push
sub
(bad)
out
xchg
dec
test
mov
int3
xlat
ss
jmp
inc
outs
sbb
cmp
cmp
push
sub
push
push
mov
fxch
fwait
sub
cli
push
rcr
pusha
xchg
mov
xor
dec
sti
lods
sar
sub
ins
jb
fimul
out
in
xlat
xchg
mov
mov
cli
call
mov
pop
addr16
nop
iret
cwde
fcomp
inc
(bad)
sar
sbb
dec
sbb
or
pop
mov
sbb
dec
icebp
aad
aad
jns
add
jp
jl
rol
pop
mov
in
xchg
xor
push
mov
outs
inc
xor
les
xor
dec
out
adc
shl
or
dec
sar
adc
inc
push
cmc
cmp
sub
enter
jg
sbb
out
push
scas
(bad)
sbb
or
je
and
sbb
push
dec
call
cmp
push
dec
cli
mov
pop
push
or
and
popa
sar
or
aaa
das
stos
jae
in
and
pop
xchg
ror
jge
pop
jl
ror
stos
jg
mov
jno
xchg
aaa
add
pushf
push
or
xor
add
push
sbb
data16
loopne
aad
pop
jmp
dec
loop
mov
ds
and
push
scas
sub
repz
dec
add
aas
push
stos
ins
loopne
push
pushf
mov
jmp
into
fisub
cmp
and
cmp
aas
pop
shr
push
fs
jae
push
popf
scas
retf
test
lahf
jecxz
jg
jne
fldcw
add
cmp
inc
xchg
in
pop
rol
stc
ins
outs
inc
push
call
arpl
out
fld
push
mov
jns
inc
jnp
add
lea
dec
or
jne
cli
sbb
fwait
dec
mov
iret
fstp
cmp
xor
scas
inc
inc
or
in
push
repz
outs
jecxz
ds
jno
lods
push
loopne
in
iret
lock
push
imul
(bad)
pop
adc
loop
lahf
div
daa
stos
cmp
push
xchg
test
out
repnz
and
jmp
outs
dec
xor
stc
mov
int
loope
jo
into
dec
in
mov
dec
in
movs
adc
mov
or
sahf
mov
mov
mov
bound
inc
sbb
mov
imul
rcr
dec
fxch
and
mov
cmp
pop
sbb
mul
mov
or
pop
lods
sar
mov
shl
push
pop
xor
call
cmp
pop
xlat
mov
addr16
push
push
sbb
jecxz
cmp
rep
mov
rcr
mov
cmp
mov
and
arpl
mov
cmc
cwde
out
or
les
mov
pop
inc
xor
js
add
add
push
inc
jnp
imul
sar
sar
add
xlat
push
mov
pop
mov
xor
jnp
pop
mov
adc
pop
adc
daa
out
(bad)
push
sub
push
inc
push
nop
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
jmp
push
std
fdivr
add
fisttp
imul
xlat
test
pop
mov
cmp
lahf
imul
aad
mov
ja
rcl
jle
popf
icebp
ins
scas
call
(bad)
(bad)
xchg
xchg
inc
je
dec
fiadd
push
stos
jmp
ins
jge
pop
rol
mov
shr
push
sbb
sar
shr
aaa
(bad)
fcmove
xchg
imul
cs
add
lods
inc
ja
in
push
cld
lahf
mov
pop
dec
dec
loopne
or
pop
pop
or
mov
push
shl
sbb
iret
sbb
jne
cmp
push
pusha
mov
aas
jecxz
mov
dec
lods
push
retf
mov
pop
push
mov
in
pop
inc
push
push
and
jns
cmp
add
mov
mov
fisub
nop
jl
dec
jns
jb
or
sub
cld
pop
sbb
jne
arpl
repnz
mov
pop
xlat
adc
inc
shr
sub
and
jbe
dec
xor
push
mov
xor
cmp
xchg
cli
pushf
sub
xchg
inc
inc
dec
ret
add
push
js
jecxz
(bad)
push
jnp
xchg
sbb
xor
inc
ret
pop
outs
fld
loopne
movs
ja
lock
jge
out
lods
in
pop
fs
mov
dec
retf
pop
movs
fidivr
xchg
xor
ret
loope
lahf
jle
std
push
cmps
not
jg
jno
and
fwait
dec
adc
add
xor
cmc
lods
mov
add
iret
pop
rcl
jl
aad
in
fidivr
sbb
mov
push
sbb
add
test
rcr
leave
ins
ds
cmp
push
dec
rol
ds
repnz
je
xor
pop
movs
xchg
mov
or
fldenv
je
fisub
cdq
jp
scas
movs
jns
ficomp
mov
outs
out
adc
test
mov
call
cmp
dec
xchg
lds
xlat
(bad)
lahf
mov
mov
std
aas
cli
aad
jmp
sbb
xchg
hlt
inc
push
jg
dec
std
imul
add
sub
out
mov
pop
and
jge
dec
pop
jbe
aaa
dec
cmc
xor
fild
test
les
adc
pop
pushf
je
aaa
dec
fwait
xor
push
jg
adc
xchg
(bad)
xchg
fsubr
push
push
ins
and
aaa
fcomp
int3
adc
sbb
imul
pop
std
fisttp
cld
jmp
jno
cli
push
cmp
mov
push
fsubp
pop
jns
push
stc
add
jnp
shr
jb
jno
mov
sti
fistp
mov
or
clc
mov
mov
(bad)
pop
rcr
(bad)
inc
push
adc
cmp
add
cmp
cmp
fdiv
iret
jmp
jge
ds
xchg
shl
mov
push
out
push
stos
sub
js
inc
test
and
arpl
push
stc
push
cmps
lock
mov
bound
rol
push
cmp
xchg
cmp
or
call
xor
xchg
mov
ins
in
sbb
add
dec
jg
pop
fstp
fisttp
movs
lahf
cmc
popa
lock
pop
push
push
not
not
out
jg
cmc
lds
inc
fimul
sahf
loop
push
or
mov
inc
mov
out
in
retf
std
aam
mov
adc
jge
dec
shl
addr16
xor
rcr
xchg
inc
dec
loopne
mov
xor
inc
bound
sbb
sahf
jmp
and
imul
mov
cmps
div
(bad)
adc
shr
gs
cmp
xor
aad
cmp
or
dec
mov
or
xchg
clc
call
popf
sub
push
jo
dec
jno
shl
ins
test
cdq
out
adc
mov
xchg
test
jmp
pop
xchg
imul
lods
xor
ins
mov
lahf
add
pop
(bad)
enter
pusha
adc
repnz
out
call
dec
dec
sti
sbb
mov
adc
pop
(bad)
int3
jae
(bad)
jmp
or
adc
in
scas
push
in
push
ins
mov
jae
jp
push
push
shr
fcmovb
xchg
imul
pop
call
pop
jecxz
lds
movs
cmp
mov
mov
inc
sbb
cmps
aas
das
mov
fsubrp
cmp
dec
dec
fcom
std
clc
dec
int3
(bad)
jmp
mov
addr16
cdq
mov
xchg
and
add
lds
sar
cli
rcr
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
jmp
stos
std
and
mov
jns
ret
stos
jge
(bad)
mov
mov
out
fdiv
(bad)
xlat
movs
iret
push
xor
pop
test
push
stos
inc
xor
fadd
lahf
jno
test
lods
jmp
seta
pop
mov
pop
arpl
sti
jge
cmc
or
jg
pop
out
shl
mov
or
mov
dec
jno
(bad)
leave
xor
enter
sub
inc
xchg
xor
jnp
aas
jg
sub
cmp
mov
dec
mov
cmps
inc
sbb
mov
stc
imul
xor
inc
mov
(bad)
shl
sub
loopne
xchg
xchg
push
test
mov
sub
push
push
xor
das
mov
and
mov
jno
aad
icebp
sub
arpl
dec
pusha
xor
jno
fidiv
aas
xchg
xor
push
mov
imul
sub
popf
sahf
and
mov
loope
out
xchg
(bad)
(bad)
mov
in
sub
pop
in
enter
cld
gs
add
add
stc
xchg
push
push
mov
jnp
dec
xchg
out
ror
repnz
pop
mov
cld
pop
and
and
call
mov
mov
xchg
xchg
enter
sub
mov
and
jo
mov
push
sahf
mov
pop
xchg
mov
call
pop
cli
pushf
mov
ret
xlat
mov
out
sbb
pushf
jne
inc
jecxz
xor
push
mov
jae
ss
sti
ret
pushf
adc
xor
xor
into
mov
out
movs
ja
xchg
retf
mov
ins
jecxz
arpl
mov
in
in
shl
cmp
dec
jb
jmp
out
imul
mov
loope
inc
pop
pop
les
pop
inc
fild
jl
loope
inc
ins
ins
dec
dec
xchg
cmp
push
out
pop
pusha
cmp
push
ret
and
ss
inc
mov
loope
mov
addr16
jmp
repz
addr16
dec
int
sar
mov
cld
xor
mov
std
add
pop
lahf
or
shl
(bad)
jl
mov
xor
shl
xor
sub
ins
xor
out
fmulp
cli
retf
dec
xor
mov
inc
jecxz
pop
retf
movs
icebp
cmp
imul
dec
jo
leave
mov
sbb
sahf
xchg
in
or
lds
dec
call
add
cmp
jl
out
mul
sbb
jns
cli
mov
jp
imul
into
pop
pop
jae
(bad)
lahf
pop
jne
ja
(bad)
pop
jns
movs
sbb
inc
push
loope
mov
pop
push
rcl
cs
ror
clc
xchg
xchg
scas
jae
xor
aaa
sbb
repnz
mov
push
sar
xor
push
ret
movs
lea
or
push
retf
jnp
addr16
mov
shl
pop
dec
out
mov
sub
sbb
xchg
fsub
push
ds
sar
in
inc
or
mov
pop
dec
jne
test
push
mov
outs
cmp
xchg
cmp
xchg
in
xchg
out
sbb
mov
rol
repz
sub
dec
(bad)
add
push
cmp
jge
lods
xchg
push
jnp
(bad)
sub
pusha
push
fwait
inc
and
xchg
pop
and
dec
jno
mov
xor
cli
jnp
lods
inc
in
dec
sbb
or
lds
repnz
(bad)
mov
and
push
mov
cmp
(bad)
pusha
jno
sbb
cmc
cmp
lock
and
mov
push
dec
cmp
dec
out
adc
xchg
adc
mov
add
rol
fnstcw
push
aaa
push
in
ret
add
int
sti
jle
mov
int3
ds
jo
inc
das
stc
inc
push
push
repnz
ins
adc
push
(bad)
fstp
xor
dec
popa
fs
out
dec
pop
sbb
cli
test
xor
inc
or
pop
cwde
push
icebp
(bad)
stos
jg
xchg
jne
sbb
(bad)
fdecstp
mov
aaa
arpl
call
dec
les
mov
out
mov
push
mov
and
push
in
mov
mov
xor
mov
in
test
fcomp
or
push
jb
hlt
test
not
shr
sbb
sbb
jg
(bad)
lahf
scas
adc
mov
ror
es
jle
jg
scas
repnz
in
mov
dec
imul
les
ss
push
pop
mov
xor
xchg
in
push
jo
or
adc
mov
inc
mov
xor
jl
sbb
cmp
jne
cli
mov
movs
and
mov
stos
push
push
xor
and
ret
loop
sbb
mov
and
mov
imul
jl
or
push
xchg
out
cmp
scas
sbb
xor
mov
sbb
xchg
mov
push
jae
adc
inc
add
adc
inc
add
adc
inc
push
xchg
lock
scas
test
hlt
xchg
ds
out
or
jmp
sbb
pop
popf
adc
dec
or
xor
movs
data16
mov
repz
add
retf
pop
in
cli
xlat
imul
jb
inc
jno
pusha
nop
jnp
adc
movs
xchg
adc
pusha
jnp
push
clc
es
inc
jge
js
xchg
jge
loope
or
sbb
out
xchg
aas
sub
gs
ins
mov
test
jno
add
dec
cld
test
aam
push
xchg
cmp
lea
inc
add
mov
neg
outs
mov
hlt
call
imul
shr
daa
test
pop
scas
fcomp
imul
xchg
sub
popf
xchg
pop
xchg
std
loopne
jp
iret
repnz
sbb
pushf
xchg
mov
xchg
cmp
push
push
xchg
jno
jns
repz
jp
cmp
mov
inc
aad
inc
fnstcw
(bad)
call
dec
mov
lea
pop
das
nop
(bad)
aaa
xchg
xchg
cmp
mov
movs
mov
dec
jp
stos
fbstp
jg
stos
imul
call
inc
cmp
and
or
outs
ins
xchg
xor
mov
inc
mov
mov
rcl
retf
dec
mov
nop
pusha
push
pushf
xchg
pop
mov
out
pop
aad
loop
add
ss
xor
dec
dec
xchg
xor
push
jg
and
(bad)
pusha
xchg
outs
(bad)
lahf
xchg
adc
fcmovnu
(bad)
xor
push
retf
ret
dec
ret
mov
xchg
mov
test
idiv
mov
add
inc
test
loope
int3
nop
leave
gs
xchg
enter
xchg
addr16
add
cmps
dec
xchg
into
or
or
fdiv
outs
push
arpl
sti
(bad)
mov
lahf
in
call
sbb
sahf
fild
jne
cmp
int3
xchg
imul
or
(bad)
dec
xchg
fidivr
add
in
leave
cmp
dec
mov
jo
fcompp
ficomp
fisub
pop
cmp
scas
xor
outs
xchg
pushf
outs
mov
lahf
pop
mov
mov
aad
cmps
arpl
and
cmp
jg
out
push
js
ja
stos
repnz
iret
arpl
cmp
mov
movs
mov
sub
aaa
mov
test
(bad)
(bad)
or
ins
xchg
xor
add
iret
in
icebp
mov
jne
fstp
jmp
inc
and
adc
dec
pop
lock
(bad)
cmps
mov
xchg
ret
and
fs
inc
mov
scas
aam
or
out
add
(bad)
retf
xchg
dec
aas
fnstsw
mov
add
xchg
in
pop
test
mul
(bad)
pusha
xor
sub
sahf
and
cli
out
pop
sub
cmps
mov
pop
and
jae
pop
mov
repz
rcr
js
xchg
mov
mov
push
xchg
mov
pop
push
or
cmps
out
test
mov
inc
xchg
fs
inc
or
jl
dec
push
ds
pop
mov
or
push
inc
rcr
fs
int3
in
aam
scas
fidivr
and
mov
into
aam
fisub
mov
arpl
jg
cmp
push
dec
or
adc
inc
or
xlat
mov
mov
scas
push
jne
jbe
fldcw
inc
stos
pop
sbb
push
add
jp
cwde
sbb
inc
jg
movs
je
scas
int
mov
mov
sbb
cwde
test
mov
icebp
lods
fist
dec
dec
cs
hlt
push
ret
inc
lods
push
mov
fsubr
stc
jo
sti
push
dec
retf
jmp
and
xor
icebp
stos
xchg
in
mov
cdq
jne
out
push
cmp
mov
jbe
movs
std
bnd
pop
push
pop
add
push
comiss
xor
test
pop
jle
mov
imul
(bad)
rcr
enter
jl
out
(bad)
sub
cdq
sbb
stos
je
push
mov
mov
xchg
jmp
out
mov
aaa
xchg
xor
inc
mov
mov
pop
test
ficom
mov
dec
outs
cmp
dec
int3
mov
pusha
mov
fsub
loopne
mov
(bad)
dec
inc
lea
(bad)
dec
jp
pushf
mov
jb
lock
not
iret
mov
imul
inc
mov
stos
lahf
mov
(bad)
movs
mov
add
mov
(bad)
jns
movs
ret
sub
mov
xor
xchg
jmp
sbb
xchg
mov
int
test
jle
imul
push
dec
fld
adc
mov
jmp
mov
jne
xor
fs
(bad)
adc
adc
jo
movs
pusha
std
fild
cmps
push
aaa
mov
out
fs
xchg
imul
push
inc
adc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
call
out
hlt
dec
out
rol
jo
aas
mov
pushf
sbb
pop
popf
adc
dec
push
aam
aam
push
xor
daa
push
stc
push
sbb
pop
(bad)
or
mov
xlat
in
popf
inc
je
sbb
scas
enter
(bad)
push
jl
ins
retf
out
adc
fs
test
dec
xor
pop
int3
mov
pop
ror
(bad)
pop
not
ja
jg
inc
test
stc
lahf
cmps
mov
clc
cmp
out
cmp
fs
xchg
jnp
ss
clc
stc
jecxz
dec
call
fdiv
cmp
add
push
mov
test
jno
jns
xor
xchg
lock
scas
in
fnstsw
xchg
jl
jae
push
dec
mov
ss
sbb
jmp
test
pop
dec
push
add
adc
retf
mov
jge
(bad)
ficomp
jmp
push
repnz
aad
and
xchg
mov
icebp
rcl
fimul
fsub
cmps
int
retf
pop
mov
sub
jb
ss
sub
out
jae
loopne
cmp
sbb
ficom
icebp
or
ins
sub
lods
sbb
daa
cmp
jbe
and
fs
xchg
pop
imul
cmp
pop
jmp
dec
or
push
inc
mov
jmp
ror
icebp
xchg
push
dec
repnz
adc
leave
loop
or
das
mov
xor
arpl
fsubr
div
ja
mov
sub
mov
ret
add
push
mov
loopne
inc
mov
bound
clc
aad
in
je
sub
push
repnz
sahf
cmp
xchg
(bad)
lahf
rcr
aad
test
cli
das
aam
inc
stos
xchg
fdiv
test
xchg
pop
mov
imul
pop
sahf
je
pop
adc
fld
and
aam
pop
mov
mov
sbb
gs
inc
in
cmp
scas
add
ss
movs
mov
push
mov
loopne
pop
mov
mov
and
loopne
pop
mov
pop
mov
inc
out
imul
push
ret
pop
adc
mov
add
mov
xor
xchg
jo
test
mov
cld
inc
lods
dec
cmp
add
in
mov
frstor
lods
sub
test
lahf
icebp
daa
mov
sub
imul
fld
(bad)
xlat
and
add
push
mov
sub
xchg
pop
sub
mov
mov
xor
out
jb
movs
dec
loopne
jecxz
out
aam
or
inc
sbb
sti
cmc
daa
cli
push
cmp
mov
inc
repnz
(bad)
sti
int3
or
jmp
sub
pop
ror
cmc
push
or
scas
sub
jb
ja
jns
sub
int3
xchg
xor
(bad)
stos
movs
int
pushf
(bad)
pop
pop
je
adc
jnp
outs
add
adc
jl
repnz
cmc
scas
inc
lock
fs
retf
jmp
imul
mov
cmc
mov
(bad)
mov
pop
mov
push
jmp
mov
(bad)
push
jnp
arpl
push
sbb
cmp
scas
clc
cmps
inc
mov
add
popa
xchg
push
(bad)
test
mov
or
and
inc
add
ror
hlt
imul
fs
mov
pushf
mov
jmp
iret
adc
out
mov
fisubr
pusha
and
dec
int3
jp
jmp
xor
fnstsw
cmps
rcl
call
xchg
cmp
cmps
movs
ficomp
mov
pop
mov
inc
jmp
sub
imul
sbb
add
and
cmp
jne
jp
inc
in
push
outs
cmp
movs
push
and
rep
bnd
out
mov
mov
mov
ins
repz
rol
fldcw
std
popf
adc
and
cmp
and
fisubr
dec
repz
rol
jbe
jmp
or
ja
mov
rcr
pop
aam
inc
idiv
dec
cmc
xor
xor
push
jge
push
jb
or
in
mov
outs
jl
mov
popf
aam
daa
fcmovnbe
stc
xlat
sbb
add
daa
mov
sbb
push
mov
test
cmp
mov
xlat
adc
imul
push
adc
jge
cmp
(bad)
sub
xchg
stos
pop
addr16
(bad)
mov
and
mov
inc
and
sub
mov
sub
mov
hlt
pop
test
repz
daa
repz
out
or
adc
sub
in
stc
pop
(bad)
mov
iret
jae
call
sbb
dec
dec
inc
loopne
aaa
lock
mov
mov
add
mov
push
sub
mov
jge
test
and
mov
jge
pop
mov
xchg
push
ror
lock
sti
xchg
bswap
sub
imul
xchg
pop
mov
sar
out
into
lods
cmp
xchg
call
jns
or
mov
push
sar
push
out
out
xchg
loope
mov
mov
enter
dec
imul
pusha
aad
int
adc
jns
pop
int3
pop
int
cmp
std
sub
outs
and
enter
or
push
retf
push
js
pop
out
add
ds
call
pop
(bad)
ret
xchg
fld
push
mov
jns
fcomp
dec
fwait
int
sub
and
inc
add
stc
(bad)
mov
mov
scas
(bad)
in
push
jb
movs
adc
dec
sub
mov
inc
fist
pop
movs
pop
es
mov
daa
inc
shl
mov
es
jo
enter
cld
add
scas
and
mov
outs
lods
aad
iret
out
sti
mov
xor
aam
inc
imul
sar
cmpxchg
adc
inc
push
pop
jl
stc
push
movs
and
pop
out
imul
jl
mov
cmp
pusha
adc
data16
iret
mov
inc
push
aam
rcr
xchg
and
jg
inc
fcmovu
mov
mov
adc
mov
mov
add
std
xchg
fisub
rol
adc
pop
fcomp
sbb
adc
sub
das
rcr
aad
rcr
std
retf
cld
les
mov
and
or
jecxz
jmp
ins
pop
mov
pop
call
cs
xor
and
push
js
inc
aas
pop
jmp
std
call
and
inc
jl
sbb
shl
sub
pusha
inc
pop
out
cdq
xchg
dec
pop
jmp
sub
pop
aad
push
xchg
std
push
pop
jl
js
xor
push
repz
(bad)
push
mov
cmps
pop
imul
aad
pushf
fsub
dec
xor
cmp
xor
lahf
enter
jge
xchg
loop
retf
shr
pop
inc
cmp
scas
or
push
xchg
fcomp
out
int
inc
xchg
pavgb
pop
aad
xor
add
mov
xchg
jmp
adc
mov
js
sub
iret
inc
(bad)
lock
aad
adc
mov
cmp
dec
push
jg
xchg
popf
lods
mov
push
pop
popa
(bad)
lods
cmp
mov
adc
sahf
pop
stc
ror
inc
inc
jae
dec
xor
nop
imul
push
shr
int
dec
les
mov
or
xor
in
inc
sbb
push
mov
rol
hlt
sub
add
int
pop
pop
or
jnp
imul
cmp
gs
sbb
mov
div
ret
ins
xor
ret
sub
int
mov
cmp
std
sub
dec
call
pop
cmc
cmp
fs
sbb
cs
pop
rcr
pop
adc
pop
lahf
xchg
cmp
hlt
scas
sbb
mov
mov
cmp
cwde
push
and
xor
xchg
mov
pusha
sti
push
into
(bad)
fld
dec
xchg
pop
in
jp
mov
je
or
das
fxch
adc
mov
imul
(bad)
jnp
imul
leave
add
sub
pop
sbb
adc
jo
jae
cmc
aas
xchg
lods
dec
loope
mov
xor
rcl
and
sar
add
sbb
aad
test
jne
lods
into
call
fsub
xor
jge
sahf
xchg
mov
jmp
mov
pop
jno
mov
mov
xor
cmp
cmp
mov
sub
mov
repnz
xor
push
aaa
ret
adc
cmp
into
pop
jmp
pop
dec
pop
dec
daa
pop
jb
adc
pop
xchg
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
fdivr
cmps
cmp
add
inc
pop
jmp
push
loopne
jl
inc
aaa
arpl
mov
mov
out
sub
stos
daa
daa
call
push
push
dec
or
std
loope
data16
xor
add
out
adc
test
push
retf
test
jmp
(bad)
pop
add
(bad)
sbb
fldenv
ret
fidivr
call
paddusw
in
call
mov
retf
adc
iret
sbb
sub
jmp
mov
inc
cmps
shr
ja
retf
test
pop
cmp
inc
sahf
les
(bad)
sbb
in
xchg
xor
jno
xchg
add
je
xor
push
jae
sbb
mov
mov
cs
adc
iret
or
sbb
cmp
jo
xchg
jp
cdq
xchg
adc
mov
cmp
pushf
and
cmc
dec
mov
icebp
push
mov
and
mov
icebp
scas
lahf
dec
mov
add
sbb
sub
dec
arpl
pop
xchg
cld
jmp
aad
(bad)
loop
ins
std
or
inc
adc
popf
xor
jbe
cmp
pop
(bad)
ficomp
jne
inc
idiv
movs
jbe
imul
int
fst
push
push
jg
jns
cli
push
adc
jg
(bad)
pop
jge
xchg
daa
sub
mul
jg
cmp
jp
sahf
cmp
jmp
(bad)
dec
scas
movs
dec
cmps
jmp
fimul
pop
retf
mov
aad
inc
jmp
or
cs
addr16
ins
mov
rol
das
daa
fsub
outs
mov
pushf
push
test
js
inc
leave
jae
imul
dec
pop
scas
stc
arpl
scas
jg
icebp
aad
and
cmps
inc
out
stc
push
arpl
mov
out
jl
jo
inc
(bad)
jae
mov
pop
mov
mov
aam
sahf
es
jp
mov
cmps
fdivr
sbb
jne
jle
push
or
fsub
repnz
jmp
lods
sub
inc
les
in
jle
jo
xchg
imul
cmp
stos
fistp
fcomi
pop
fist
xlat
push
div
inc
adc
lahf
rcr
mov
loope
jbe
in
push
clc
and
jg
cmps
(bad)
test
and
arpl
repz
pop
out
push
pop
in
popa
loop
jns
popa
xchg
or
into
loope
jle
fadd
loope
mov
mov
mov
pusha
ja
push
movs
pop
pop
es
push
jge
lods
jmp
dec
rsqrtps
pushf
cdq
loop
cli
dec
jmp
add
push
es
ins
(bad)
loop
dec
mov
jnp
loopne
jo
je
jecxz
sar
daa
and
cmc
scas
gs
dec
cmps
push
pop
or
xor
test
scas
and
xor
cdq
fstp
mov
enter
leave
pop
cmc
lea
retf
mov
xchg
data16
mov
pusha
push
add
aaa
sub
dec
pop
pop
add
add
add
aad
pop
pop
fmul
(bad)
ret
mov
sahf
aas
lods
rol
bound
ins
xor
xchg
xor
mov
je
hlt
push
call
neg
dec
dec
test
sub
xor
and
call
sti
int3
scas
dec
std
cmc
inc
(bad)
lods
xor
mov
jg
into
and
dec
clc
xlat
mov
dec
mov
in
test
mov
add
outs
or
push
imul
sub
mov
test
ja
ins
aam
pushf
sbb
adc
ror
call
jmp
gs
dec
adc
xchg
xor
fidiv
sbb
repnz
fadd
dec
jbe
clc
ret
push
dec
and
or
mov
xchg
inc
test
mov
test
pop
adc
sub
mov
push
test
dec
inc
sahf
psrld
add
lahf
in
inc
je
sub
mov
sub
mov
mov
add
mov
add
retf
frstor
scas
mov
repnz
(bad)
dec
sub
imul
xor
popa
jo
mov
xchg
cmp
adc
(bad)
jo
add
das
pop
int3
aam
mov
fild
cdq
int3
dec
sbb
xchg
clc
jecxz
repz
jne
les
sub
add
(bad)
cs
aad
inc
sbb
pop
jno
movs
and
stos
sub
xor
xor
jle
cmp
clc
sbb
in
test
call
sub
lods
sub
loopne
stos
(bad)
sahf
cmp
lods
mov
mov
mov
jp
or
or
mov
mov
mov
cmp
mov
(bad)
xlat
pop
mov
icebp
inc
xchg
cmp
gs
mov
jl
ret
in
sahf
and
push
jmp
pop
loope
jns
mov
jne
bound
fiadd
or
mov
enter
jmp
retf
inc
js
outs
cmp
push
lea
sub
xor
sbb
jecxz
lahf
dec
xor
xchg
xchg
ins
mov
mov
sbb
push
add
fs
js
outs
bound
mov
pop
pop
push
mov
inc
mov
xor
hlt
stc
lods
inc
sub
sbb
xor
push
aad
xchg
movs
stc
cdq
iret
pop
push
mov
sahf
xchg
mov
mov
jo
xor
in
ficom
jg
sub
stc
idiv
sub
and
outs
outs
sbb
call
lea
add
add
les
ret
mov
out
iret
push
imul
push
bnd
aas
sar
push
xor
push
ret
icebp
inc
sbb
pop
fild
push
aaa
test
mov
cmp
jmp
mov
push
jp
outs
fsub
xchg
xor
outs
adc
test
shr
inc
xor
stc
mov
clc
push
cmps
mov
(bad)
not
dec
test
dec
xor
call
inc
mov
test
test
cdq
aad
das
imul
sbb
cs
add
test
iret
mov
(bad)
shl
pop
fiadd
hlt
adc
or
push
ins
mov
out
push
aaa
xchg
sbb
xchg
xor
jae
xchg
retf
(bad)
test
cs
rol
xor
push
jno
fs
push
mov
div
jns
dec
or
in
mov
adc
imul
mov
and
mov
sbb
push
gs
sbb
mov
inc
xor
cmps
jae
(bad)
add
jg
sbb
movs
or
pop
mov
in
sbb
sahf
xchg
(bad)
std
cld
leave
jb
inc
mov
inc
repz
jle
mov
adc
jbe
sub
xor
stos
adc
ret
jo
xchg
mov
adc
mov
daa
sbb
mov
xor
pusha
addr16
mov
(bad)
add
push
retf
test
je
xchg
mov
add
add
cmps
mov
inc
mov
test
scas
mov
add
mov
mov
sub
mov
(bad)
ror
sbb
aas
mov
lahf
int
loop
jb
jbe
cmc
enter
call
jnp
pushf
xor
in
mov
pop
aam
std
sub
cmp
(bad)
pop
xchg
cmc
fwait
pop
iret
fdivr
mov
push
mov
fs
push
mov
in
pop
into
mov
xchg
inc
outs
or
mov
xor
in
mov
lods
jae
(bad)
cmp
jnp
push
test
jecxz
arpl
jmp
clc
xchg
loop
stos
pop
inc
arpl
sti
sbb
pop
out
cmp
jg
pop
repz
cmp
(bad)
xchg
fs
ins
sahf
or
inc
or
push
sbb
pushf
sbb
sbb
xchg
jmp
ins
cmps
xor
iret
sbb
stos
or
int
iret
dec
hlt
mov
jg
dec
fs
jns
dec
shl
outs
mov
or
jmp
add
bound
xchg
dec
jg
test
scas
int3
adc
push
pop
mov
aam
pop
lds
sbb
in
cmp
int
push
outs
and
jb
ror
inc
outs
dec
sub
lods
mov
sbb
(bad)
fstp
dec
pop
mov
in
and
xchg
jb
inc
out
and
(bad)
jecxz
imul
neg
arpl
mov
cli
push
cmp
or
cwde
je
dec
les
cli
push
cmps
hlt
stos
pop
mov
inc
xchg
imul
icebp
mov
fstp
scas
mov
jp
ror
ret
xor
call
xor
mov
jb
mov
ficom
add
scas
shl
add
inc
dec
sbb
imul
mov
xchg
mov
mov
sti
inc
stos
int3
mov
mov
aad
mov
(bad)
retf
int3
jp
sbb
inc
jmp
test
push
mov
jmp
mov
leave
pop
pop
daa
mov
mov
and
sbb
in
(bad)
mov
mov
fiadd
(bad)
hlt
lods
mov
dec
iret
jae
sub
push
test
int3
aam
(bad)
leave
sub
push
dec
cmc
sbb
movs
and
mov
dec
adc
gs
dec
call
int
sbb
xchg
loope
and
dec
leave
bound
cmp
push
xchg
mov
cmps
imul
mov
aaa
scas
mov
mov
loopne
mov
imul
dec
add
aas
xchg
add
mov
mov
mov
jnp
fs
xor
(bad)
and
mov
sti
jnp
adc
mov
jns
and
movs
jb
shl
mov
jl
cmps
fucompp
xchg
ss
not
lods
rol
xor
mov
cmp
ds
(bad)
clc
lahf
ret
neg
mov
fisttp
xchg
add
mov
icebp
xchg
popa
test
mov
loop
pushf
loopne
add
stos
xchg
adc
push
xor
test
fs
pop
xlat
sar
aam
add
fbstp
jne
fdivr
jno
push
pop
add
lahf
in
inc
push
shl
push
shl
push
push
push
js
sar
ficomp
(bad)
cmc
scas
jl
mov
fmul
xchg
jmp
inc
in
cmp
sahf
push
xor
out
fmul
ret
push
or
dec
adc
sbb
pop
addr16
rcl
popf
sub
inc
imul
cmps
mov
push
inc
imul
dec
and
xchg
mov
pushf
jle
jg
ins
int3
xchg
out
lahf
inc
int3
(bad)
sbb
retf
in
push
mov
test
adc
fimul
shr
cs
inc
sbb
imul
lods
pop
inc
shr
jl
idiv
daa
and
sub
xchg
cmp
leave
leave
jecxz
mov
cmp
mov
jo
or
adc
push
lock
adc
ror
(bad)
fwait
add
stos
fild
lock
fisubr
sbb
hlt
fmul
pop
popf
dec
mov
stos
ret
push
inc
cwde
push
mul
mov
jle
and
xchg
in
or
push
std
lock
mov
mov
or
iret
cmp
rol
fdiv
xor
adc
dec
inc
or
inc
push
dec
mov
mov
inc
add
adc
inc
add
adc
inc
sbb
pop
stos
into
dec
inc
add
int
add
xchg
push
repz
in
jmp
ja
arpl
ss
add
jmp
ror
pop
jne
(bad)
das
add
clc
jle
add
(bad)
and
cmp
mov
cmps
or
cmovae
mov
jb
mov
and
hlt
imul
call
popa
dec
adc
inc
lods
mov
sti
out
xor
add
fcomp
inc
and
cmp
sub
lods
pop
xchg
repnz
iret
xor
add
in
fdivr
fnstcw
test
mov
mov
dec
(bad)
xchg
pushf
loopne
mov
out
sbb
stos
mov
mov
stos
sti
enter
add
mov
ret
imul
dec
aad
loop
push
or
gs
hlt
ins
inc
std
or
fwait
cmps
rcr
adc
fadd
cmps
jmp
(bad)
in
clc
sbb
jmp
xor
pop
aam
sub
or
ins
outs
adc
inc
in
ins
sti
call
movs
mov
int3
inc
cwde
inc
and
add
mov
call
bswap
out
and
leave
test
and
adc
push
sar
sbb
inc
cmp
jb
call
mov
fnsave
out
fbstp
hlt
xlat
ins
out
and
xor
fucomip
(bad)
sahf
fnstsw
int
pop
xchg
loop
cmc
rcr
sbb
mov
mov
sbb
jmp
mov
pushf
sar
mov
in
cld
adc
fmul
pop
cmps
and
jp
xor
inc
(bad)
fidiv
rdtsc
retf
pop
inc
push
xor
pop
retf
cdq
xor
cmps
pop
inc
cwde
push
dec
mov
scas
out
inc
lock
popf
cmps
jmp
pop
pop
ins
fsub
dec
sub
dec
mov
inc
mov
inc
mov
retf
shl
xchg
enter
test
jecxz
nop
enter
xor
fwait
jo
add
mov
ins
jmp
jno
jno
mov
movs
into
and
bound
mov
xlat
mov
and
mov
iret
lods
inc
icebp
xchg
add
stc
cmp
std
imul
push
add
xlat
xor
div
fimul
nop
cmp
push
movs
pop
push
mov
hlt
scas
xchg
jecxz
int
nop
in
inc
jne
xor
mov
aas
adc
outs
shr
inc
push
inc
in
mov
or
repz
rcl
int3
cld
lahf
sar
(bad)
out
and
mov
(bad)
(bad)
add
cvtps2pi
std
(bad)
sub
fstp
int3
call
add
pop
sbb
aas
mov
daa
fcmovnu
pop
cmps
sar
cmps
inc
scas
pop
pop
mov
mov
out
cld
xchg
xor
outs
add
xchg
pop
fcmovb
imul
mov
mov
sbb
and
dec
sbb
add
inc
mov
jae
mov
cs
xchg
stc
mov
pop
cmp
shl
ss
out
lods
inc
movs
xchg
jno
cdq
xchg
jns
dec
cmp
and
aad
add
imul
mov
xchg
out
inc
mov
ja
shl
sbb
dec
jnp
or
pop
jb
ins
mov
dec
cdq
pop
sub
(bad)
mov
retf
cmc
not
sub
or
pop
mov
sti
ror
inc
outs
mov
cmc
int
or
mov
movs
jae
cmps
test
mov
leave
cmp
xchg
neg
xchg
int
imul
retf
cld
cmp
imul
mov
cmp
(bad)
mov
xchg
mov
icebp
jmp
sub
and
and
mov
unpcklps
es
mov
lods
mov
(bad)
push
pusha
mov
dec
sbb
mov
in
cmp
or
jp
or
std
popa
push
(bad)
push
sub
and
(bad)
aad
stc
mov
push
or
push
xor
xchg
sub
in
sub
daa
sbb
mov
mov
jmp
sbb
add
jbe
cli
mov
jne
hlt
mov
fiadd
cmp
push
aad
jmp
mov
xchg
out
adc
repz
lods
bound
out
cmp
or
repnz
sbb
push
adc
ds
das
adc
pushf
outs
mov
fdiv
adc
inc
add
adc
inc
add
adc
inc
sbb
test
adc
call
mov
repnz
(bad)
inc
sub
fwait
sbb
adc
jp
repnz
test
in
outs
xor
cmc
movs
push
mov
cmp
push
std
mov
pop
inc
and
fcmovb
jmp
es
jle
repnz
cmp
mov
mov
addr16
mov
xlat
jp
int3
mov
or
mov
jb
xchg
pop
retf
mov
inc
fld
cmp
inc
push
inc
in
inc
aas
repnz
das
in
sbb
mov
and
or
xchg
sub
out
fcmovb
sub
xchg
push
mov
(bad)
adc
out
popa
stc
push
rcr
add
(bad)
push
popf
dec
out
xor
xor
pop
fmulp
imul
in
jbe
ror
xlat
cli
dec
popf
inc
(bad)
inc
xor
inc
(bad)
and
cli
stos
and
dec
int3
dec
mov
test
push
jb
fcom
outs
xchg
cdq
push
inc
jmp
fwait
inc
push
cmc
scas
cmps
jmp
jmp
test
xor
cmp
xchg
cmp
ss
cmp
arpl
mov
inc
and
rcl
out
imul
push
fidiv
xlat
mov
push
xchg
lods
jb
dec
and
in
push
xchg
loope
imul
xor
out
test
sahf
mov
add
jo
inc
jbe
rcl
or
shl
ins
std
lods
lods
and
or
(bad)
icebp
and
hlt
jo
dec
(bad)
cwde
into
in
aad
push
dec
pop
inc
jecxz
xlat
xchg
es
jmp
jns
add
or
stos
shl
ja
add
icebp
and
push
test
xchg
movs
dec
lock
inc
mov
fsub
fnstsw
fiadd
loope
call
push
adc
mov
mov
xchg
cmps
repnz
pop
dec
sub
pop
out
aaa
ficom
mov
out
jnp
fcmovb
fisttp
cmps
push
es
xchg
dec
out
mov
ss
out
jnp
cli
aam
test
inc
test
pushf
cmp
mov
cmps
ficomp
fs
lods
mov
sbb
sub
xchg
cmc
pop
dec
popa
mov
mov
push
les
scas
and
xchg
push
inc
and
addr16
add
imul
in
call
lods
cli
icebp
cli
push
das
in
jg
jl
hlt
movs
inc
pop
cmp
pushf
sbb
hlt
ins
mov
jns
ret
mov
addr16
rcr
push
inc
std
xchg
sub
jb
js
xor
clc
and
jb
push
sbb
xor
lock
mov
fcmovnu
lods
mov
icebp
sub
(bad)
in
(bad)
lods
jl
xor
push
or
sub
mov
fistp
mov
ret
adc
sub
sub
idiv
pop
scas
or
std
sahf
bnd
sbb
mov
pop
mov
enter
mov
sbb
jge
lds
sub
das
out
in
mov
push
fsubr
cld
xchg
push
shl
mov
ja
inc
test
shr
stos
xchg
hlt
xchg
int3
jbe
xchg
xchg
ficomp
xchg
enter
scas
and
jns
test
arpl
inc
sbb
iret
cmp
xor
fisubr
imul
loope
or
sub
jp
lahf
lea
out
(bad)
das
ss
mov
and
cmp
not
push
arpl
xor
add
in
icebp
mov
in
sbb
mov
adc
adc
ins
pop
adc
jmp
aad
sbb
push
dec
mov
push
mov
pop
call
adc
out
jmp
xor
mov
push
cld
xchg
sub
popf
in
sahf
xchg
stos
pop
fadd
mov
sahf
inc
or
stc
pop
mov
in
pop
inc
(bad)
hlt
stos
dec
cmp
dec
xor
pop
scas
dec
out
xchg
cmp
xor
add
stos
not
push
int
mov
ins
retf
sbb
push
cdq
cmp
pop
dec
dec
sub
arpl
shl
mov
push
add
push
add
push
add
lods
pop
jmp
(bad)
and
outs
add
stos
aad
sub
int3
aam
mov
xchg
pop
(bad)
push
xlat
icebp
add
cmp
vpaddq
sbb
xor
fsub
or
(bad)
out
out
jecxz
mov
push
pop
xchg
fild
in
jae
dec
and
mov
stc
xchg
(bad)
in
push
pop
test
cmc
push
mov
cld
dec
add
(bad)
repz
fmul
dec
dec
jmp
stc
inc
out
sahf
fwait
cld
iret
call
repz
mov
lods
add
push
mov
push
xor
add
stos
and
bswap
arpl
or
or
stc
xchg
sub
fmul
cmp
fcomp
cli
push
test
lds
and
xchg
fcomp
mov
std
inc
xor
(bad)
mov
push
aam
or
les
push
mov
sub
cmp
add
jmp
aam
mov
add
or
add
push
fstp
dec
test
xchg
jae
ror
dec
push
sbb
xchg
test
xchg
fiadd
imul
push
(bad)
jge
inc
fwait
and
cs
or
mov
stc
jl
mov
gs
dec
lods
dec
push
aam
leave
cs
je
mov
inc
sar
inc
pusha
out
jbe
cmps
test
fiadd
push
fistp
test
fsubr
sbb
jno
jne
dec
jge
fld
sbb
cmps
mov
push
sub
setne
mov
pop
std
xor
push
shl
frstor
push
xchg
dec
mov
jno
xlat
inc
mov
jg
pusha
mov
push
add
test
cmp
add
sahf
arpl
sbb
or
jp
cmps
mov
push
add
push
or
jecxz
ds
xchg
arpl
ja
sbb
into
xchg
dec
dec
fcmovbe
push
in
push
or
cdq
sbb
js
add
jo
iret
or
not
mov
inc
ins
rcr
push
pop
jae
stos
add
pushf
loop
leave
loop
sahf
div
loope
mov
pop
xor
push
cmc
fsubr
ss
inc
arpl
inc
dec
jae
test
sbb
dec
cld
test
mov
repnz
push
mov
mov
inc
jg
imul
and
int3
and
int3
mov
dec
int
ret
dec
pop
jg
sbb
mov
mov
xor
add
push
pop
mov
sub
(bad)
mov
sub
add
js
pop
mov
cli
repnz
es
(bad)
das
mov
mov
aam
repz
fadd
sahf
sbb
push
inc
xor
bound
jge
int
cdq
cmps
imul
push
jbe
adc
repnz
adc
sbb
sbb
xor
cmps
call
mov
lahf
push
ret
jge
dec
lea
mov
ret
pop
pop
test
in
ins
rol
adc
pushf
sbb
xor
ret
jge
sub
jns
mov
(bad)
(bad)
fcmovbe
data16
mov
ss
jae
xor
das
push
scas
stos
and
imul
(bad)
fnstcw
xchg
add
push
pushf
sbb
fldcw
xor
stos
cmp
outs
pop
imul
pop
inc
fmul
xchg
mov
xor
sub
dec
arpl
jmp
sub
xchg
pcmpeqb
sub
xor
bound
scas
and
adc
call
neg
pop
adc
pop
popa
mov
and
fidiv
cmp
mov
and
fnsave
idiv
jns
and
inc
fmul
pop
add
lock
cmp
leave
add
or
retf
pop
addr16
jg
movs
shr
push
dec
and
push
div
fild
sub
ds
test
add
jne
add
push
add
push
add
push
add
push
add
push
add
push
add
jae
jmp
dec
cmps
imul
inc
push
and
jno
inc
ret
xchg
add
into
out
add
iret
loope
scas
mov
jp
je
cmps
in
out
pop
jo
mov
cmps
push
popf
inc
inc
popf
push
dec
scas
mov
inc
fild
push
aad
jecxz
push
inc
loope
sub
ret
sub
or
pushf
jecxz
add
hlt
lods
cmp
mov
mov
int3
or
pop
fdiv
mov
cmp
(bad)
mov
jmp
lahf
dec
xor
retf
(bad)
xchg
sbb
scas
inc
xchg
pop
and
xchg
mov
dec
retf
xchg
pop
(bad)
aaa
push
dec
or
dec
cmp
into
rcl
or
dec
out
cwde
inc
xor
cmp
ja
inc
push
fadd
aad
in
sti
jns
cmc
pop
cwde
mov
outs
cmp
(bad)
sbb
iret
push
int3
xor
mov
test
jmp
push
retf
xchg
int3
inc
add
or
hlt
(bad)
dec
mov
xchg
inc
out
adc
mov
cmp
ror
std
pop
dec
sbb
es
xchg
dec
loope
mov
mov
jnp
jbe
mov
iret
cmps
inc
sub
cli
je
push
sub
jge
mov
icebp
(bad)
dec
(bad)
mov
mov
imul
in
xchg
sbb
add
jle
jb
pop
pop
ja
ds
jae
mov
dec
cmp
jle
mov
mov
cmp
and
dec
push
test
jmp
(bad)
rcl
xchg
aad
fild
mov
lods
mov
mov
mov
lock
dec
mov
les
mov
add
das
pop
push
xchg
imul
add
pop
pop
jecxz
clc
(bad)
sub
push
inc
lods
ds
inc
adc
xchg
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
bound
jmp
pop
pop
lahf
push
inc
adc
fs
call
aaa
pop
push
inc
dec
test
call
cmp
fld
mov
pop
imul
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
add
sbb
add
push
sbb
add
add
add
mov
bound
cmp
bound
pop
test
push
inc
xor
inc
ss
push
cs
dec
dec
add
add
add
add
add
add
add
add
add
add
add
inc
add
clc
mov
dec
add
add
add
add
or
jmp
and
inc
add
add
add
add
add
add
imul
imul
jb
addr16
outs
xor
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
xor
inc
add
inc
add
add
add
add
add
add
add
add
add
sti
ins
add
add
add
add
add
add
add
add
add
jecxz
add
add
add
add
inc
add
add
add
add
add
add
add
in
push
add
add
add
sbb
je
add
add
add
add
add
js
push
add
add
add
sbb
js
add
add
add
add
add
js
push
add
add
add
adc
jl
add
add
add
add
add
adc
push
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
pop
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
sbb
mov
add
add
add
push
add
add
push
add
add
add
adc
mov
add
add
add
pop
add
add
push
add
add
add
add
add
inc
add
add
add
dec
add
dec
add
add
or
dec
add
inc
add
ror
sub
pop
add
inc
add
add
add
jo
jb
add
popa
add
add
push
add
push
add
add
add
arpl
jne
jo
add
popa
add
outs
add
jo
popa
add
add
pop
add
je
imul
je
loopne
add
bound
jo
add
adc
inc
add
add
add
inc
add
add
add
dec
add
(bad)
(bad)
inc
add
add
call
add
add
call
add
add
and
add
add
push
add
add
and
add
add
hlt
and
add
add
lock
add
add
hlt
and
add
mov
push
and
hlt
in
dec
add
add
add
add
add
add
inc
add
add
add
add
test
inc
add
(bad)
(bad)
inc
add
add
add
add
push
add
(bad)
(bad)
inc
adc
cmp
add
call
add
add
and
add
push
add
add
add
or
add
inc
add
add
add
fwait
push
add
add
add
adc
inc
add
add
inc
add
add
add
and
add
push
add
add
add
inc
add
inc
add
add
add
and
jo
inc
add
sbb
inc
add
inc
add
inc
add
inc
add
sbb
inc
add
add
inc
add
sbb
inc
add
add
inc
add
sbb
inc
add
and
add
sub
jmp
sub
jmp
add
push
add
add
cmps
cmp
mov
adc
lods
sbb
mov
add
add
add
add
add
add
inc
add
add
add
add
or
adc
(bad)
xor
add
add
add
add
add
lock
add
add
add
sbb
pushf
add
add
add
stos
push
ins
push
mov
sbb
mov
adc
add
add
add
add
add
add
xchg
add
add
add
loopne
inc
add
add
add
add
adc
retf
xchg
idiv
enter
add
add
add
add
dec
movs
add
add
add
je
inc
add
add
push
add
add
inc
cdq
inc
cmp
scas
mov
add
add
add
add
add
add
and
add
add
add
clc
sbb
add
push
add
add
sbb
jne
pop
es
mov
inc
not
add
add
add
add
add
add
cdq
popa
add
add
add
je
dec
add
add
add
add
mov
das
sub
jg
mov
pop
or
add
add
add
add
add
add
mov
add
add
add
push
inc
dec
mov
nop
mov
dec
push
int3
es
add
or
add
add
add
add
sar
add
push
add
add
(bad)
xchg
mov
xchg
adc
loop
jnp
or
add
add
add
adc
add
int3
xchg
inc
add
add
add
add
out
add
outs
icebp
inc
movs
cmp
xor
add
or
add
add
add
sub
add
add
add
add
push
add
add
popa
add
add
push
loopne
nop
fwait
or
add
add
add
rol
add
add
shl
add
add
add
sar
lods
pop
mov
push
or
add
add
add
add
inc
add
add
lods
in
add
add
add
in
add
add
add
add
fs
add
add
add
jecxz
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
adc
add
add
add
inc
add
add
add
(bad)
inc
add
add
add
add
add
inc
add
add
add
aad
add
add
add
add
add
add
call
add
add
add
add
inc
add
add
add
rol
pop
add
add
add
dec
rol
pop
add
add
rol
pop
add
add
add
add
inc
add
add
add
rol
pop
add
add
add
push
rol
pop
add
add
rol
pop
add
add
add
add
add
add
add
rol
pop
add
add
add
add
add
add
add
iret
inc
add
add
add
add
fs
inc
add
add
add
into
inc
add
add
add
add
add
inc
add
add
add
add
mov
inc
add
add
add
inc
add
add
add
inc
add
add
add
retf
inc
add
add
add
inc
add
add
add
retf
inc
add
add
add
retf
pop
add
add
inc
add
add
add
inc
add
add
add
leave
inc
add
add
add
add
add
add
inc
add
add
add
enter
add
add
add
add
add
enter
add
add
mov
nop
mov
pop
mov
or
inc
add
add
add
add
mov
add
add
mov
add
add
add
inc
lds
pop
add
add
les
pop
add
add
add
add
add
add
add
ret
inc
add
add
add
add
add
add
add
add
ret
pop
add
add
add
dec
ret
pop
add
add
rol
add
add
add
add
inc
add
add
add
rol
add
add
rol
add
add
add
xor
inc
add
add
add
mov
add
mov
add
add
add
add
add
mov
add
mov
inc
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
jl
inc
add
add
add
add
fdivr
add
add
add
inc
add
add
add
mov
add
xchg
mov
add
cmp
inc
add
add
add
mov
add
mov
add
xor
inc
add
add
add
mov
add
xchg
mov
add
dec
mov
add
add
add
mov
inc
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
add
add
add
push
mov
add
add
add
mov
add
add
add
add
pusha
mov
add
add
add
inc
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
inc
add
add
add
mov
add
add
add
add
xor
add
call
add
add
add
add
inc
add
add
add
inc
add
add
add
add
ins
mov
add
add
add
add
int3
stos
inc
add
add
add
movs
inc
add
add
add
add
add
add
add
add
movs
inc
add
add
add
add
jo
inc
add
add
add
lahf
inc
add
add
add
sahf
inc
add
add
add
inc
add
add
add
sahf
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
add
ror
add
add
sub
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
cs
add
add
add
inc
add
add
add
add
add
add
in
add
add
adc
xor
add
call
add
add
add
push
add
add
inc
add
add
add
add
add
aam
inc
add
mov
add
inc
add
add
add
test
inc
add
add
add
inc
add
in
add
add
add
or
add
inc
add
add
add
push
add
add
add
sbb
inc
add
add
inc
add
add
add
xor
and
push
add
add
add
sbb
dec
add
add
add
dec
xor
enter
test
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
xor
push
fwait
push
add
(bad)
(bad)
inc
adc
push
add
add
mov
add
pusha
xor
xor
push
add
add
add
xor
aad
inc
add
xor
out
xor
cld
xor
or
inc
add
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
xor
ins
cs
add
inc
add
inc
add
xor
xchg
cs
add
inc
add
inc
add
inc
add
sbb
inc
add
cs
add
inc
add
inc
add
xor
int
inc
add
inc
add
inc
add
inc
add
xor
add
inc
add
inc
add
inc
add
inc
add
add
add
rol
and
inc
add
add
xchg
add
add
add
leave
mov
add
add
add
pop
mov
add
add
add
pop
mov
add
add
add
bound
add
or
jo
inc
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
add
mov
inc
add
add
add
fiadd
add
add
mov
inc
add
add
add
add
nop
xor
or
add
xchg
xor
pop
add
add
xor
add
dec
add
add
add
add
or
inc
add
fild
inc
add
add
add
in
mov
add
lock
add
fwait
push
add
add
add
sbb
je
add
xor
inc
add
add
add
push
add
add
add
sbb
js
add
xor
inc
add
add
mov
push
add
add
inc
add
add
add
inc
add
add
add
inc
add
push
add
add
add
sbb
add
add
inc
add
add
add
add
add
inc
add
push
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
add
ss
add
add
(bad)
(bad)
inc
sbb
mov
add
xor
inc
add
add
add
add
push
add
add
add
adc
mov
add
call
add
add
aaa
inc
add
push
add
add
add
add
inc
add
inc
add
cmp
movs
cmp
mov
inc
add
add
add
inc
add
sbb
inc
add
add
add
inc
add
sbb
inc
add
xor
adc
inc
add
sbb
inc
add
inc
add
xor
mov
inc
add
cmp
xor
inc
add
xor
mov
inc
add
add
add
add
xor
mov
inc
add
add
add
add
add
inc
add
inc
add
sbb
inc
add
inc
add
sbb
inc
add
add
add
cmps
xor
add
add
add
mov
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
inc
add
add
add
arpl
(bad)
(bad)
(bad)
inc
add
add
cwde
inc
add
add
add
add
xor
inc
add
add
add
lods
inc
add
add
add
cmp
add
add
cmp
inc
add
add
add
inc
add
add
add
cmp
add
mov
push
cmp
sub
dec
add
add
add
lods
inc
add
adc
xor
add
cwde
mov
add
clc
cmp
movs
fwait
push
add
add
add
adc
cmp
add
cmp
inc
add
add
add
add
push
add
add
add
adc
cmp
add
shl
add
fwait
push
add
add
add
push
add
add
mov
add
add
cmp
add
fwait
push
add
add
add
push
add
add
add
add
inc
add
fwait
push
add
add
add
adc
dec
add
add
mov
add
mov
inc
add
push
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
cmp
push
add
(bad)
(bad)
inc
adc
push
add
add
inc
add
add
add
add
add
push
add
add
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
inc
add
add
add
adc
pop
add
add
add
add
push
add
add
add
inc
add
aas
inc
add
add
add
cmp
mov
sbb
inc
add
add
add
inc
add
sbb
inc
add
ds
add
cmp
mov
inc
add
add
add
cmp
mov
inc
add
add
add
cmp
mov
sbb
inc
add
cmp
mov
sbb
inc
add
add
add
cmp
mov
sbb
inc
add
add
add
aas
inc
add
inc
add
sbb
inc
add
add
add
inc
add
sbb
inc
add
add
add
cmp
mov
inc
add
add
add
cmp
mov
sbb
inc
add
add
add
add
add
ja
or
sub
jmp
add
add
push
add
inc
add
add
add
popa
dec
add
(bad)
(bad)
inc
add
add
cdq
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
cwde
aas
inc
add
add
add
inc
add
add
add
add
mov
inc
add
add
(bad)
cmp
add
cmp
add
inc
add
fwait
push
add
add
add
adc
inc
add
add
inc
add
add
add
push
add
add
add
sbb
inc
add
add
inc
add
add
add
add
add
inc
inc
add
push
add
add
add
add
cmp
add
fwait
push
add
add
add
push
add
add
add
add
inc
inc
add
fwait
push
add
add
add
push
add
add
mov
add
add
inc
add
fwait
push
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
push
add
(bad)
(bad)
inc
sbb
pop
add
add
inc
add
add
add
inc
inc
add
push
add
add
add
sbb
pop
add
add
inc
add
add
add
fwait
push
add
add
add
sbb
pusha
add
add
inc
add
add
or
add
push
add
add
inc
add
add
inc
add
add
add
fwait
push
add
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
add
add
aas
inc
add
sbb
inc
add
aas
inc
add
aas
inc
add
sbb
inc
add
inc
inc
add
aas
inc
add
aas
inc
add
sbb
inc
add
inc
inc
add
aas
inc
add
sbb
inc
add
inc
inc
add
aas
inc
add
sbb
inc
add
inc
add
aas
inc
add
sbb
inc
add
aas
inc
add
sbb
inc
add
inc
inc
add
inc
inc
add
aas
inc
add
sbb
inc
add
inc
inc
add
add
add
add
add
inc
inc
add
aas
inc
add
sbb
inc
add
inc
inc
add
aas
inc
add
sbb
inc
add
inc
inc
add
aas
inc
add
sbb
inc
add
add
add
xlat
fisttp
add
add
add
sub
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
or
jo
inc
add
add
add
pusha
dec
add
(bad)
(bad)
inc
add
add
add
ror
add
add
adc
add
add
add
add
sbb
inc
add
add
add
add
pushf
inc
inc
add
add
add
add
add
mov
push
dec
inc
add
dec
add
add
add
inc
add
loopne
add
adc
xor
add
and
inc
add
add
add
push
add
add
add
or
add
inc
add
add
in
inc
add
add
inc
add
add
inc
add
add
add
and
add
dec
inc
add
inc
add
add
add
or
add
inc
add
add
add
fwait
push
add
add
add
adc
inc
add
add
inc
add
add
add
dec
inc
add
push
add
add
add
sbb
dec
add
add
inc
add
add
add
inc
add
push
add
add
add
sbb
dec
add
add
inc
add
add
add
push
add
add
add
push
add
add
mov
add
add
inc
add
fwait
push
add
add
add
adc
push
add
add
inc
add
add
add
add
add
push
add
add
add
inc
add
add
add
dec
inc
add
add
inc
add
add
add
adc
pop
add
add
inc
add
add
add
dec
inc
add
push
add
add
add
pop
add
add
test
inc
add
(bad)
(bad)
inc
add
add
add
add
fwait
push
add
(bad)
(bad)
push
inc
add
add
add
inc
add
sbb
inc
add
inc
inc
add
inc
add
sbb
inc
add
inc
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
add
inc
add
sbb
inc
add
inc
add
sbb
inc
add
inc
add
sbb
inc
add
inc
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
add
inc
add
sbb
inc
add
dec
inc
add
add
sub
jmp
sub
jmp
add
add
pop
add
inc
add
add
add
bound
(bad)
(bad)
(bad)
inc
add
add
inc
add
dec
add
add
ror
ror
add
add
mov
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
dec
inc
add
add
add
or
add
add
or
add
adc
xor
add
cwde
loop
add
add
add
add
call
add
add
dec
inc
add
push
add
add
add
add
add
inc
add
add
add
push
inc
add
push
add
add
add
or
add
inc
add
add
add
push
add
add
add
sldt
add
cmp
add
push
inc
add
fwait
push
add
add
add
adc
inc
add
add
add
add
inc
add
loop
add
add
add
adc
dec
add
add
inc
add
add
add
fwait
push
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
(bad)
(bad)
inc
adc
push
add
add
inc
add
add
add
add
push
add
add
add
or
add
inc
add
add
add
push
inc
add
add
inc
add
add
add
or
add
inc
add
add
add
push
inc
add
add
inc
add
add
add
or
add
inc
add
add
je
inc
add
add
inc
add
add
enter
aad
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
add
inc
add
add
add
dec
inc
add
inc
add
sbb
inc
add
dec
inc
add
inc
add
sbb
inc
add
push
inc
add
dec
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
add
add
push
inc
add
push
inc
add
dec
inc
add
sbb
inc
add
dec
inc
add
inc
add
sbb
inc
add
add
add
push
inc
add
dec
inc
add
inc
add
sbb
inc
add
add
add
inc
add
dec
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
xor
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
or
jo
inc
add
add
add
dec
add
(bad)
(bad)
inc
add
add
dec
add
add
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
mov
push
push
inc
add
cmc
dec
add
add
add
jmp
add
loopne
add
adc
xor
add
and
inc
add
add
add
push
inc
add
push
add
add
add
or
add
inc
add
add
add
push
inc
add
add
inc
add
add
add
(bad)
cmp
add
cmp
add
add
fwait
push
add
add
add
adc
inc
add
add
inc
add
add
rcl
add
push
add
add
inc
add
inc
add
add
add
add
pop
inc
add
loopne
add
add
add
sbb
dec
add
add
inc
add
add
add
pop
inc
add
lds
or
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
add
(bad)
(bad)
inc
adc
push
add
add
mov
add
cmp
add
push
add
add
add
inc
add
add
add
fwait
push
add
add
add
or
add
inc
add
add
add
pop
inc
add
inc
add
add
add
or
add
inc
add
add
add
pop
inc
add
add
inc
add
add
add
inc
add
pop
inc
add
add
add
push
inc
add
inc
add
sbb
inc
add
push
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
push
inc
add
sbb
inc
add
add
add
add
add
push
inc
add
inc
add
sbb
inc
add
push
inc
add
inc
add
sbb
inc
add
add
push
inc
add
inc
add
sbb
inc
add
push
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
add
add
push
inc
add
sbb
inc
add
add
add
xchg
sub
add
add
add
push
or
sub
jmp
sub
jmp
add
or
jo
inc
add
add
add
(bad)
(bad)
inc
add
add
inc
add
dec
add
add
add
push
ins
add
pop
inc
add
add
add
in
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
pop
inc
add
add
add
inc
add
out
add
add
add
push
ins
add
in
add
in
add
push
add
add
mov
add
add
push
add
add
add
adc
cmp
add
cmp
inc
add
add
add
pop
inc
add
push
add
add
add
sbb
cmp
add
pop
mov
add
xor
add
push
add
add
add
adc
inc
add
add
mov
add
test
inc
add
push
add
add
add
adc
inc
add
add
mov
add
or
add
push
add
add
add
str
add
cmp
add
inc
add
fwait
push
add
add
add
adc
dec
add
add
inc
add
add
mov
fwait
push
add
add
inc
add
add
add
and
inc
add
add
add
add
add
inc
add
push
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
adc
pop
add
add
mov
add
adc
add
add
mov
add
inc
add
add
inc
add
add
add
add
add
inc
add
add
inc
add
add
add
add
call
add
add
push
add
add
add
add
add
add
mov
add
adc
inc
add
fwait
push
add
add
add
adc
push
mov
add
xor
add
push
add
add
add
arpl
mov
inc
add
arpl
fldenv
add
arpl
repz
add
add
add
xor
mov
inc
add
sbb
inc
add
inc
add
sbb
inc
add
arpl
sbb
pop
inc
add
sbb
inc
add
arpl
add
add
fisub
add
pop
inc
add
sbb
inc
add
pop
inc
add
sbb
inc
add
add
add
pop
inc
add
sbb
inc
add
add
add
pop
inc
add
sbb
inc
add
add
add
inc
add
sbb
inc
add
add
add
inc
add
sbb
inc
add
add
add
arpl
stos
arpl
mov
inc
add
pop
inc
add
sbb
inc
add
add
add
pop
inc
add
sbb
inc
add
add
add
pop
inc
add
sbb
inc
add
add
add
pop
inc
add
sbb
inc
add
arpl
add
add
cmp
add
sbb
inc
add
add
add
add
add
arpl
and
aaa
add
add
ss
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
inc
add
add
add
bound
(bad)
(bad)
(bad)
inc
add
add
cwde
inc
add
dec
add
add
add
daa
add
add
add
add
add
lahf
inc
add
add
add
add
add
add
add
add
mov
add
add
inc
add
cs
add
add
add
inc
add
inc
add
adc
xor
add
and
inc
add
add
add
inc
add
push
add
add
add
adc
cmp
add
cmp
inc
add
add
add
inc
add
push
add
add
add
sbb
cmp
add
pop
mov
add
mov
add
push
add
add
inc
add
add
add
and
inc
add
add
add
push
push
add
add
add
adc
inc
add
add
mov
add
pusha
push
push
add
add
add
adc
dec
add
add
inc
add
add
add
push
push
add
add
add
sbb
dec
add
add
mov
add
and
add
add
mov
add
inc
add
add
add
test
inc
add
(bad)
(bad)
inc
add
add
add
add
fwait
push
add
(bad)
(bad)
inc
adc
push
add
add
mov
add
sub
inc
add
add
mov
add
inc
add
add
inc
add
add
add
push
add
add
add
or
add
inc
add
add
add
add
add
push
add
inc
add
add
add
add
and
add
inc
add
inc
add
add
add
adc
add
add
add
add
add
inc
add
add
inc
add
add
add
and
inc
add
add
add
imul
fwait
push
add
add
add
inc
add
inc
add
inc
add
ins
inc
add
add
add
fs
add
sbb
inc
add
fs
add
sbb
inc
add
inc
add
fs
add
fs
add
sbb
inc
add
inc
add
gs
add
fs
add
sbb
inc
add
gs
add
fs
add
sbb
inc
add
inc
add
fs
add
sbb
inc
add
inc
add
fs
add
sbb
inc
add
add
mov
fs
add
sbb
inc
add
inc
add
gs
add
fs
add
sbb
inc
add
inc
add
gs
add
fs
add
sbb
inc
add
inc
add
fs
add
sbb
inc
add
inc
add
fs
add
sbb
inc
add
inc
add
fs
add
sbb
inc
add
fs
add
sbb
inc
add
add
add
stos
stc
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
inc
add
add
add
popa
dec
add
(bad)
(bad)
inc
add
add
add
add
aam
imul
add
add
add
test
inc
add
add
add
add
sbb
inc
add
add
add
ins
inc
add
add
add
mov
push
outs
inc
add
dec
add
add
add
cdq
add
fadd
enter
inc
add
add
add
test
inc
add
(bad)
(bad)
inc
add
add
add
add
outs
inc
add
add
(bad)
(bad)
inc
adc
cmp
add
cmp
inc
add
add
add
add
push
add
add
add
or
add
inc
add
add
add
fwait
push
add
add
add
or
add
inc
add
add
add
jo
add
inc
add
add
add
adc
inc
add
add
add
add
inc
add
inc
add
add
add
adc
dec
add
add
fadd
add
add
add
add
add
push
add
add
add
add
inc
add
add
add
jb
add
inc
add
add
add
adc
push
add
add
fadd
or
add
xor
dec
pushf
push
add
add
add
lldt
add
movs
inc
add
add
add
jb
add
fwait
push
add
add
add
and
pop
add
add
fld
push
add
add
jae
add
push
add
add
add
adc
pop
add
add
fadd
add
add
aam
inc
add
pushf
push
add
add
add
or
add
add
add
je
add
push
add
add
add
verr
add
movs
inc
add
add
jl
inc
add
fwait
push
add
add
inc
add
add
add
cmp
add
je
add
fwait
push
add
add
add
adc
ins
add
add
inc
add
add
and
inc
add
push
add
add
inc
add
add
add
shl
add
push
add
jne
add
jne
add
jne
add
jbe
add
jbe
add
jbe
add
jbe
add
add
add
add
inc
add
sbb
inc
add
add
inc
add
inc
add
jne
add
add
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
sbb
inc
add
ins
inc
add
inc
add
inc
add
jne
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
sbb
inc
add
jne
add
outs
inc
add
inc
add
inc
add
outs
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
inc
add
add
add
daa
push
or
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
jo
inc
add
add
add
dec
add
(bad)
(bad)
inc
add
add
dec
add
jbe
add
jbe
add
add
add
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
call
add
add
sbb
add
add
imul
add
add
add
add
adc
xor
add
add
add
jl
inc
add
add
dec
add
add
add
lock
add
fwait
push
add
add
add
add
push
add
add
add
or
inc
add
fwait
push
add
add
add
add
push
add
add
add
sub
add
fwait
push
add
add
add
push
add
add
mov
add
add
add
fwait
push
add
add
inc
add
add
add
add
add
push
add
add
add
add
pusha
add
add
add
in
inc
add
fwait
push
add
add
add
adc
add
add
mov
add
add
add
add
mov
add
inc
add
add
add
in
mov
add
pop
jle
add
fwait
push
add
add
add
add
ins
add
add
add
je
inc
add
fwait
push
add
add
add
add
jo
add
pushf
mov
add
nop
jle
add
fwait
push
add
add
inc
add
add
add
add
lods
jle
add
fwait
push
add
add
add
add
pushf
mov
add
enter
les
inc
add
add
add
add
jl
add
pushf
mov
add
in
inc
add
fwait
push
add
add
add
add
add
add
add
add
add
fwait
push
add
add
add
add
test
add
pushf
mov
add
sbb
inc
add
fwait
push
add
add
add
or
add
inc
add
add
add
add
add
jg
add
add
inc
add
add
add
inc
add
add
add
push
add
add
add
add
nop
add
add
add
sar
add
fwait
push
add
add
inc
add
add
inc
add
add
add
jg
add
fwait
push
add
add
add
add
cwde
add
add
add
inc
add
fwait
push
add
add
add
inc
add
add
add
add
push
add
add
add
add
mov
mov
add
mov
fwait
push
add
add
add
push
add
inc
add
add
add
add
fwait
push
add
add
add
add
test
add
pushf
mov
add
sub
push
add
add
add
adc
lods
add
add
mov
add
inc
add
push
add
add
or
add
inc
add
add
movs
add
jo
inc
add
add
inc
add
add
inc
add
add
add
add
xor
inc
add
add
add
add
mov
mov
add
push
add
fwait
push
add
add
add
add
mov
mov
add
ins
add
fwait
push
add
add
add
or
add
inc
add
add
add
fwait
push
add
add
add
or
add
inc
add
add
add
add
fwait
push
add
add
add
adc
enter
and
inc
add
add
and
push
add
add
inc
add
add
add
add
add
add
fwait
push
add
add
add
adc
rol
add
and
inc
add
add
add
add
fwait
push
add
add
add
adc
aam
add
and
inc
add
add
add
add
add
test
add
push
add
add
add
add
add
(bad)
inc
add
add
add
add
pushf
push
add
(bad)
(bad)
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
mov
test
mov
test
aad
inc
add
test
out
test
cld
test
or
inc
add
xchg
xor
inc
add
inc
add
inc
add
add
inc
add
add
add
jbe
add
add
sbb
inc
add
inc
add
add
add
ja
add
add
sbb
inc
add
ja
add
add
sbb
inc
add
test
add
add
pusha
ja
add
add
sbb
inc
add
jbe
add
sbb
inc
add
jbe
add
sbb
inc
add
inc
add
add
add
ja
add
add
sbb
inc
add
js
add
add
sbb
inc
add
inc
add
add
add
js
add
add
sbb
inc
add
inc
add
add
add
inc
add
add
sbb
inc
add
inc
add
add
sbb
inc
add
test
add
add
mov
jbe
add
sbb
inc
add
test
add
add
enter
push
jbe
add
sbb
inc
add
add
add
js
add
add
sbb
inc
add
add
add
jns
add
add
sbb
inc
add
add
add
inc
add
add
sbb
inc
add
inc
add
add
sbb
inc
add
jbe
add
sbb
inc
add
test
add
add
mov
jbe
add
sbb
inc
add
jns
add
add
sbb
inc
add
jp
add
add
sbb
inc
add
jp
add
add
sbb
inc
add
inc
add
add
sbb
inc
add
jbe
add
sbb
inc
add
jbe
add
sbb
inc
add
jp
add
add
sbb
inc
add
jp
add
add
sbb
inc
add
jnp
add
add
sbb
inc
add
inc
add
add
sbb
inc
add
inc
add
add
sbb
inc
add
inc
add
jbe
add
sbb
inc
add
jnp
add
add
sbb
inc
add
inc
add
jnp
add
add
sbb
inc
add
inc
add
jl
add
add
sbb
inc
add
add
add
add
imul
add
cmp
push
jbe
add
sbb
inc
add
inc
add
add
sbb
inc
add
xchg
sub
add
out
inc
add
test
fiadd
add
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
cmp
add
add
add
les
add
rol
add
loop
add
add
add
mov
cmps
or
neg
adc
out
outs
pop
mov
cmps
or
neg
adc
out
outs
pop
mov
cmps
or
neg
adc
out
outs
pop
daa
pop
in
loopne
rol
cmps
stos
push
pop
out
mov
mov
dec
inc
lods
sbb
dec
cmp
add
add
add
add
dec
add
add
imul
fnstenv
fnstcw
or
dec
adc
add
add
add
data16
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
and
add
test
(bad)
jmp
std
(bad)
jmp
(bad)
jmp
std
(bad)
inc
add
std
(bad)
inc
add
add
add
add
add
add
add
add
std
(bad)
inc
add
add
add
add
add
add
add
add
jo
imul
bound
add
add
aaa
add
add
add
add
inc
add
inc
add
add
add
inc
add
xor
xor
inc
add
add
add
add
add
xor
aaa
add
add
inc
add
inc
inc
inc
xor
cs
inc
pop
add
gs
push
inc
outs
ins
ins
popa
outs
add
inc
outs
ins
ins
popa
outs
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
fld
add
in
add
add
add
add
neg
adc
out
outs
pop
mov
neg
adc
out
outs
pop
mov
neg
adc
out
outs
pop
fisub
mov
jb
loop
popf
mov
mov
pop
ret
pop
(bad)
cli
inc
mov
sbb
int3
aas
add
add
inc
add
add
test
add
add
outs
and
dec
mov
ja
and
repnz
push
push
ja
inc
stos
ja
mov
retf
xlat
jo
add
add
rcl
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
test
(bad)
jmp
std
(bad)
jmp
std
(bad)
call
add
cli
std
(bad)
inc
add
add
add
add
add
add
inc
jne
or
add
or
(bad)
inc
add
add
add
add
inc
jne
or
add
(bad)
std
(bad)
inc
add
add
add
add
inc
jne
sbb
add
inc
popa
jo
imul
imul
outs
jb
inc
outs
jb
inc
outs
ins
outs
jb
xor
xor
aaa
add
add
add
add
inc
add
inc
add
add
add
inc
add
xor
xor
inc
add
add
add
add
add
xor
aaa
add
add
inc
add
inc
inc
inc
xor
cs
inc
pop
add
gs
push
push
popa
outs
gs
add
push
popa
outs
gs
add
add
add
add
cmp
add
rol
add
loopne
add
and
add
sub
add
add
add
add
outs
mov
dec
rcl
xchg
push
add
pop
push
aas
inc
bound
jge
rcl
xchg
push
add
pop
push
aas
inc
bound
jge
rcl
xchg
push
add
pop
push
aas
sbb
jnp
dec
test
leave
cmps
or
mov
cmp
out
sbb
add
add
out
add
inc
test
iret
pop
add
mov
add
inc
mov
and
push
(bad)
sbb
je
inc
scas
push
jb
out
cmp
add
push
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
inc
inc
inc
pop
dec
push
cs
inc
pop
add
inc
inc
inc
pop
dec
push
dec
imul
fs
imul
fs
imul
xor
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
int3
add
add
add
add
push
sbb
add
pushf
pop
and
and
add
and
pushf
pop
and
sbb
add
pushf
pop
jne
pop
dec
dec
inc
sbb
out
jg
ss
dec
pop
sub
pop
sti
cmp
push
in
add
add
mov
add
stc
iret
add
push
push
jno
jb
mov
aas
pop
inc
sahf
mov
pusha
mov
mov
(bad)
xor
add
add
pusha
or
add
add
add
sbb
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
std
(bad)
inc
add
add
add
add
add
add
and
or
add
inc
outs
popa
bound
add
add
add
jae
add
add
outs
add
je
jb
outs
add
add
outs
add
jns
jb
imul
je
and
arpl
outs
add
bound
imul
xor
xor
xor
xor
inc
dec
xor
dec
aaa
dec
cs
inc
pop
add
je
popa
bound
cs
imul
ins
add
je
popa
bound
add
pop
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
pop
into
adc
out
mov
pop
into
adc
out
mov
into
adc
out
mov
add
cmp
xchg
xor
adc
xor
sub
dec
nop
add
shr
add
add
and
add
add
add
lods
inc
mov
outs
out
mov
cmp
inc
xchg
adc
inc
and
push
in
add
add
not
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
sub
add
add
add
cmps
std
(bad)
jmp
std
(bad)
jmp
(bad)
jmp
std
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
sub
adc
add
je
add
add
add
add
add
or
add
ins
sub
adc
add
inc
popa
arpl
outs
ins
outs
jb
inc
popa
jo
imul
add
add
aaa
add
add
add
add
cmp
inc
add
inc
add
add
add
push
push
push
inc
inc
push
xor
cs
inc
pop
add
inc
gs
outs
gs
imul
bound
push
push
dec
outs
fs
popa
bound
push
push
dec
outs
fs
popa
bound
stc
or
add
or
dec
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
neg
adc
das
dec
sti
xchg
stc
repnz
adc
das
dec
sti
ret
or
adc
adc
jne
mov
mov
ret
inc
test
adc
add
and
xchg
mov
push
data16
add
add
out
add
inc
test
iret
pop
add
retf
mov
lods
or
shl
dec
pop
dec
inc
mov
sub
mov
add
add
push
and
add
add
add
add
xor
inc
add
add
add
add
add
add
sub
add
add
sub
add
cmp
sub
add
add
add
add
xor
inc
add
cmp
inc
add
inc
dec
dec
inc
dec
inc
xor
cs
inc
pop
add
inc
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
outs
ins
ins
outs
outs
inc
imul
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
and
push
rcl
mov
add
ror
stos
push
rcl
mov
add
ror
stos
push
rcl
mov
add
ror
inc
pop
jle
mov
iret
and
jle
sbb
int
gs
inc
sbb
lods
inc
mov
add
add
add
add
out
add
add
push
xor
sti
mov
and
adc
cmp
xchg
fldcw
add
add
out
push
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
add
add
add
outs
jne
in
add
add
add
cmps
std
(bad)
jmp
std
(bad)
jmp
std
(bad)
jmp
std
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
hlt
pop
jne
or
add
or
(bad)
inc
add
add
add
add
outs
jne
or
add
cli
std
(bad)
inc
add
add
add
add
add
add
outs
jne
adc
add
(bad)
std
(bad)
inc
add
add
add
add
add
add
jne
or
add
(bad)
std
(bad)
inc
add
add
add
add
outs
jne
or
add
inc
popa
je
push
outs
jne
arpl
inc
popa
arpl
outs
ins
outs
jb
inc
popa
jo
imul
bound
add
jb
inc
outs
ins
outs
jb
cmp
xor
add
xor
aaa
add
add
add
add
xor
xor
xor
inc
add
add
add
add
push
push
inc
push
xor
xor
dec
inc
pop
add
inc
popa
je
push
imul
cs
push
inc
inc
inc
jb
add
inc
inc
inc
jb
add
add
cmp
add
rol
add
clc
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
jl
(bad)
xlat
sbb
mov
add
(bad)
xlat
sbb
mov
add
mov
rcl
mov
add
clc
jne
mov
adc
mov
mov
xchg
scas
mov
push
pop
int3
xor
fst
mov
lahf
ja
popa
sti
out
mov
add
add
add
cmp
add
add
popf
sub
sub
mov
daa
pop
mov
xor
add
or
add
add
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
add
test
(bad)
jmp
std
(bad)
jmp
(bad)
jmp
std
(bad)
jmp
add
add
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
or
(bad)
inc
add
add
add
add
js
add
add
(bad)
std
(bad)
inc
add
add
add
add
add
add
mov
or
add
or
add
push
add
add
add
add
add
add
js
add
add
inc
popa
arpl
outs
ins
outs
jb
inc
outs
popa
bound
add
je
push
inc
add
add
push
add
je
jne
push
add
popa
add
add
add
outs
add
imul
je
jb
and
push
dec
inc
dec
push
pop
xor
cs
inc
pop
add
arpl
gs
dec
imul
push
gs
inc
outs
js
push
imul
inc
outs
js
loope
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
fiadd
add
jmp
add
inc
add
add
add
push
cs
xchg
adc
jne
mov
ret
xchg
adc
jne
mov
ret
xchg
adc
jne
mov
xchg
push
adc
hlt
cmps
data16
push
clc
arpl
mov
dec
mov
and
dec
nop
dec
cmp
cmp
add
add
pop
cmp
scas
mov
inc
popf
mov
xchg
sbb
ret
in
jae
add
add
jbe
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
adc
add
add
add
add
add
add
add
add
add
test
(bad)
jmp
std
(bad)
jmp
(bad)
jmp
std
(bad)
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
pop
add
add
add
add
add
add
add
add
mov
add
push
popa
ins
jne
add
add
add
add
add
xor
sub
add
xor
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
push
inc
dec
dec
inc
push
xor
dec
inc
pop
add
inc
outs
ins
inc
je
xor
dec
outs
outs
je
push
imul
je
push
imul
add
adc
add
add
adc
add
add
(bad)
(bad)
inc
add
add
dec
add
pusha
fs
mov
or
add
add
add
add
add
cwde
inc
add
add
add
add
add
add
add
add
add
fs
add
(bad)
(bad)
(bad)
cmp
inc
add
popf
inc
add
fwait
inc
add
inc
add
add
add
(bad)
(bad)
(bad)
cmp
inc
add
add
js
inc
add
inc
add
add
add
sbb
(bad)
dec
add
mov
dec
add
add
add
add
add
add
(bad)
inc
add
add
add
add
pushf
ins
inc
add
(bad)
(bad)
push
add
add
add
sbb
add
add
add
add
(bad)
(bad)
call
cmps
inc
add
add
movs
fwait
inc
add
inc
add
add
add
(bad)
jmp
add
adc
dec
add
add
add
add
add
add
(bad)
inc
add
add
add
add
sbb
inc
add
(bad)
(bad)
jmp
add
popf
inc
add
add
add
pushf
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
add
inc
popf
inc
add
add
add
pushf
inc
add
add
add
add
inc
add
(bad)
(bad)
call
add
add
add
add
inc
add
add
add
xor
(bad)
(bad)
(bad)
dec
fild
push
popf
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
test
inc
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
in
add
inc
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
cmp
inc
add
add
add
add
pushf
inc
add
inc
add
add
add
(bad)
push
in
add
add
call
inc
add
add
add
add
js
add
xchg
in
xchg
pop
add
jnp
add
mov
add
jno
add
cdq
add
add
sbb
leave
ins
ins
add
add
jb
add
cdq
add
mov
jno
sahf
lahf
adc
cmps
inc
add
shr
lods
jo
add
ins
add
sbb
aas
movs
push
add
xchg
add
imul
js
add
adc
jae
push
add
lea
add
data16
pushf
sbb
aad
add
mov
nop
xor
icebp
test
add
add
add
mov
or
hlt
add
jge
or
popf
pop
add
popa
push
add
add
dec
xchg
pop
add
add
int
sbb
movs
test
add
cwde
add
add
ins
sbb
xchg
pop
push
add
jbe
add
add
fdiv
in
add
mov
imul
mov
add
add
jno
dec
add
bound
add
dec
dec
add
pop
add
outs
inc
add
dec
add
mov
add
mov
xor
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
clc
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
clc
clc
bound
hlt
inc
outs
jb
xor
jo
popa
add
inc
outs
jb
xor
add
dec
outs
fs
xor
ins
popa
outs
jb
add
dec
popa
dec
popa
imul
outs
fs
outs
add
add
outs
jb
xor
add
inc
jae
imul
add
arpl
outs
data16
add
ins
inc
jb
fs
jb
imul
jo
outs
jb
add
add
inc
je
imul
add
ins
outs
jb
outs
ins
outs
add
ins
outs
fs
jb
outs
add
push
jb
addr16
outs
xor
add
cmp
add
push
add
outs
add
add
add
and
dec
add
jo
jb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
adc
or
and
adc
add
add
add
add
jb
gs
xor
add
add
push
add
add
je
gs
imul
add
clc
popf
inc
add
sahf
inc
add
add
push
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
add
add
imul
fs
gs
outs
je
push
sahf
inc
add
add
add
je
dec
add
or
je
jmp
push
mov
call
jmp
add
add
imul
cs
ins
add
add
adc
add
inc
imul
jbe
push
jo
popa
je
add
add
mov
sahf
inc
add
add
sbb
add
or
je
jmp
push
mov
call
jmp
add
add
add
jae
gs
ins
xor
cs
ins
add
add
add
gs
ins
inc
js
arpl
gs
add
add
lahf
inc
add
lahf
inc
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
gs
imul
imul
jns
add
add
clc
popf
inc
add
inc
add
add
cwde
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
pusha
add
add
add
add
add
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
cmp
add
dec
add
add
add
add
push
add
add
xchg
jb
inc
pop
inc
or
mov
mov
test
sbb
dec
pushf
sbb
lock
fldenv
inc
movs
adc
lods
sbb
mov
mov
inc
dec
call
dec
fisttp
xor
or
stos
add
xchg
dec
popa
bound
xor
add
dec
lods
xor
or
stos
add
xchg
inc
outs
ins
ins
popa
outs
xor
add
add
dec
lods
xor
or
stos
add
xchg
push
gs
xor
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
ins
imul
outs
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
jo
inc
add
add
add
add
add
add
add
mov
dec
add
and
add
gs
xor
add
dec
lods
xor
or
stos
add
xchg
dec
popa
bound
xor
add
gs
xor
add
add
inc
mov
and
pop
imul
pop
push
mov
add
xor
xor
pop
push
push
dec
inc
push
inc
dec
dec
dec
pop
dec
dec
inc
push
dec
push
dec
inc
push
and
push
push
inc
dec
and
push
inc
dec
dec
pop
push
inc
cmp
pop
pop
inc
inc
inc
inc
pop
dec
push
outs
arpl
add
inc
inc
inc
pop
dec
push
dec
imul
add
add
add
dec
add
add
add
mov
inc
add
add
add
add
add
and
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
jp
or
dec
adc
add
bound
je
outs
add
cs
sti
movs
inc
inc
xchg
sbb
lea
pop
push
push
dec
inc
push
inc
dec
dec
dec
pop
dec
dec
inc
push
dec
push
dec
inc
push
and
push
push
inc
dec
and
push
inc
dec
dec
pop
push
inc
cmp
pop
push
dec
push
inc
inc
inc
xor
outs
arpl
add
gs
fsub
add
add
add
add
add
call
mov
dec
add
and
add
iretw
adc
pusha
rcl
xor
add
iretw
adc
pusha
rcl
gs
add
dec
lods
xor
or
stos
add
xchg
inc
push
add
adc
add
outs
out
je
bound
xor
add
inc
into
pop
push
inc
mov
pop
fs
adc
pop
push
dec
inc
push
dec
inc
inc
dec
pop
push
push
inc
inc
push
push
inc
inc
pop
push
push
push
inc
inc
push
xor
outs
arpl
add
push
push
inc
gs
outs
gs
imul
bound
add
mov
inc
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
and
add
dec
lods
xor
or
stos
add
xchg
je
js
xor
add
or
je
loope
lods
xor
or
stos
add
xchg
add
nop
dec
test
xchg
lahf
pusha
jno
push
mov
or
inc
sahf
aas
mov
adc
retf
xchg
idiv
enter
push
cmp
inc
mov
jns
dec
lods
xor
or
stos
add
xchg
addr16
add
add
xor
add
xchg
ss
dec
mov
ja
and
popa
outs
outs
gs
ins
outs
xor
add
jo
outs
outs
gs
ins
outs
xor
add
push
outs
jne
je
add
dec
lods
xor
or
stos
add
xchg
push
imul
push
gs
add
add
add
ins
xor
add
add
ins
xor
add
add
dec
ins
popa
addr16
popa
xor
add
xor
cli
dec
lods
xor
or
stos
add
xchg
inc
popa
je
xor
add
jno
xor
ja
add
jo
outs
outs
gs
ins
outs
add
add
jno
xor
dec
popa
bound
xor
popa
xor
add
add
popa
cmp
add
push
popa
outs
gs
xor
add
add
lods
xor
or
stos
add
xchg
dec
inc
dec
inc
outs
jb
add
add
push
push
bound
je
add
lahf
inc
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
js
inc
add
push
sahf
inc
add
movs
inc
add
add
rcr
add
or
je
jmp
push
mov
call
jmp
add
add
gs
imul
js
dec
outs
addr16
inc
add
add
push
sahf
inc
add
add
int3
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
add
inc
add
add
fcomp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
arpl
gs
imul
sahf
inc
add
movs
inc
add
add
in
dec
add
or
je
jmp
push
mov
call
jmp
add
add
imul
jae
jae
add
in
add
add
add
add
xor
add
inc
add
add
dec
lods
xor
or
stos
add
xchg
jno
add
add
adc
add
stos
add
movs
add
add
inc
add
add
add
add
add
arpl
add
add
add
outs
add
add
imul
and
add
jae
arpl
outs
add
add
add
add
add
jbe
add
add
add
add
add
add
add
add
add
jb
outs
add
add
add
and
dec
add
jo
jb
add
popa
add
add
add
add
popa
add
imul
add
add
and
add
inc
add
add
outs
add
add
add
add
jb
add
outs
add
add
add
add
add
add
dec
lods
xor
or
stos
add
xchg
sbb
add
imul
jb
add
popa
add
add
add
add
add
add
sbb
add
imul
jb
add
popa
add
add
add
add
add
adc
add
cmp
pop
add
dec
add
add
outs
add
imul
add
and
add
popa
add
add
add
add
popa
add
imul
add
add
imul
add
and
add
bound
cmp
pop
add
dec
add
add
popa
add
imul
add
add
imul
add
xor
add
cmp
pop
add
dec
add
add
outs
add
imul
push
add
add
popa
add
imul
add
add
imul
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
inc
jb
gs
je
add
add
push
add
inc
add
jo
imul
add
data16
je
je
jne
popa
add
add
add
add
add
jae
jae
outs
add
add
data16
add
add
outs
add
add
add
je
and
jae
jne
ins
add
add
imul
and
pop
add
push
add
add
add
add
add
add
outs
add
outs
add
ins
add
jp
imul
add
add
add
add
outs
add
imul
outs
add
outs
add
add
data16
add
add
popa
add
add
add
outs
add
jb
add
add
ins
add
outs
add
add
add
add
jb
jb
outs
add
add
add
jne
ins
add
jb
outs
add
add
add
add
add
inc
add
add
outs
add
imul
add
add
add
add
add
outs
add
add
je
je
add
popa
add
add
add
add
add
add
add
add
je
and
jae
jne
ins
add
add
imul
and
pop
add
push
add
add
add
ins
add
outs
add
je
outs
add
add
outs
add
and
jae
jne
arpl
arpl
add
jae
outs
add
add
add
add
add
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
push
add
jae
je
and
outs
add
outs
add
add
data16
add
add
popa
add
add
add
outs
add
jb
add
add
ins
add
outs
add
add
add
add
jb
jb
outs
add
add
add
jne
ins
add
jb
outs
add
add
add
cmp
push
add
xor
and
push
add
xor
add
add
cmp
inc
add
add
add
add
add
outs
add
add
imul
and
add
jae
arpl
outs
add
add
add
add
add
jbe
add
add
cmp
and
add
add
inc
add
add
imul
imul
imul
and
add
data16
je
je
jne
popa
add
add
add
outs
add
and
jae
jne
arpl
arpl
add
jae
outs
add
add
add
add
push
add
jo
jb
imul
imul
and
outs
add
outs
add
add
data16
add
add
popa
add
add
add
outs
add
jb
add
add
ins
add
outs
add
add
add
add
jb
jb
outs
add
add
add
jne
ins
add
jb
outs
add
add
add
add
dec
add
jae
add
imul
and
add
jae
arpl
outs
add
add
jne
ins
add
jb
outs
add
add
add
add
inc
ss
dec
dec
pop
pop
jbe
popa
push
gs
ins
add
jbe
popa
dec
bound
gs
fs
data16
add
stos
inc
add
fmul
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
dec
xor
jb
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
dec
add
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
popa
je
dec
fs
je
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
popa
jb
jne
add
add
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
inc
jb
gs
bound
imul
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
push
je
inc
ins
jo
sbb
cmp
pop
stos
sbb
loop
(bad)
cs
shr
cmps
into
aas
cmps
mov
mov
mov
stos
add
or
adc
(bad)
xor
cmp
imul
or
inc
aaa
jecxz
push
inc
outs
ins
ins
popa
outs
xor
add
push
popa
outs
gs
xor
add
add
push
add
dec
lods
xor
or
stos
add
xchg
and
add
imul
jb
add
popa
add
add
popa
add
add
add
add
add
add
add
add
add
adc
add
stos
add
movs
and
add
add
adc
add
stos
add
movs
add
add
nop
lods
inc
add
lods
inc
add
add
ins
add
ins
add
bound
jo
je
add
imul
add
add
add
add
jae
imul
add
je
jae
add
push
bound
ins
add
ins
add
je
jb
popa
add
and
add
imul
jb
add
popa
add
add
jae
popa
add
add
add
add
add
sub
add
push
add
outs
add
add
add
popa
add
add
add
ins
add
outs
add
je
popa
add
add
add
add
add
add
outs
add
data16
jb
ins
add
add
add
pop
pop
jbe
popa
dec
popa
ins
gs
imul
inc
add
fmul
push
add
add
ins
inc
imul
gs
fs
je
jb
inc
xor
add
loopne
mov
add
xor
add
and
add
add
add
or
add
and
inc
add
and
add
add
and
add
inc
add
and
add
add
or
add
sub
dec
add
and
add
dec
add
and
add
add
or
add
xor
push
add
and
add
add
and
add
push
add
and
add
add
or
add
cmp
pop
add
and
add
add
and
add
pop
add
and
add
add
or
add
inc
add
or
add
inc
add
and
add
add
and
add
and
cmps
add
and
add
test
or
add
push
and
ins
add
add
mov
or
add
je
mov
add
or
adc
add
add
adc
add
sbb
sbb
add
add
sbb
add
add
add
or
add
adc
add
adc
sub
add
add
sub
add
add
add
or
adc
add
add
adc
add
or
and
add
add
and
add
sbb
cmp
add
add
cmp
add
add
add
or
add
sbb
add
adc
and
add
add
and
add
add
add
sbb
add
or
cmp
add
add
cmp
add
or
xor
add
add
xor
add
adc
dec
add
add
add
add
cmp
add
adc
sbb
add
add
sbb
add
or
add
adc
add
or
add
inc
dec
xor
dec
aaa
dec
cs
inc
pop
add
add
add
ins
push
inc
inc
imul
inc
cmp
add
dec
mov
add
inc
add
add
clc
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
inc
inc
outs
fs
jb
jne
inc
cmp
dec
mov
add
add
add
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
xor
dec
aaa
cs
dec
dec
add
or
dec
ins
dec
outs
bound
outs
inc
xor
add
add
mov
add
mov
add
add
adc
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
dec
outs
bound
outs
dec
inc
dec
inc
inc
xor
add
add
mov
add
add
add
sbb
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
dec
outs
bound
outs
jae
inc
xor
add
in
mov
add
add
sub
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
gs
bound
inc
xor
add
in
mov
add
mov
add
add
xor
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
gs
imul
mov
add
mov
add
add
inc
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
inc
gs
outs
je
imul
outs
outs
dec
gs
popa
addr16
xor
in
mov
add
inc
add
add
dec
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
gs
outs
je
imul
outs
outs
dec
gs
popa
addr16
cmp
in
mov
add
add
pop
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
gs
fs
inc
xor
add
in
mov
add
mov
add
add
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
gs
fs
js
inc
inc
xor
add
add
mov
add
add
add
jo
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
inc
imul
gs
fs
js
dec
popa
outs
fs
gs
inc
xor
add
mov
add
add
jl
dec
add
or
je
jmp
push
mov
call
jmp
add
add
mov
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
jb
popa
bound
inc
xor
add
add
mov
add
inc
add
add
xchg
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
jb
popa
bound
js
inc
inc
xor
add
add
in
mov
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
jb
popa
bound
js
dec
popa
outs
fs
gs
inc
xor
add
in
mov
add
mov
add
add
lods
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
jb
popa
bound
popa
ins
gs
inc
cmp
add
add
mov
add
mov
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
jb
popa
bound
je
jb
inc
xor
add
add
add
add
ins
push
jb
jbe
gs
gs
gs
inc
imul
add
add
mov
add
add
(bad)
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
ins
push
popa
jb
popa
bound
inc
xor
add
add
in
mov
add
mov
add
add
rcr
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
inc
imul
jns
jne
inc
inc
xor
add
mov
add
add
add
(bad)
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
ins
addr16
imul
xor
add
in
mov
add
add
call
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
inc
ins
addr16
imul
inc
inc
xor
add
add
in
mov
add
mov
add
add
hlt
(bad)
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
jbe
gs
gs
gs
jo
popa
je
inc
inc
cmp
add
add
mov
add
inc
add
add
add
dec
add
or
je
jmp
push
mov
call
jmp
add
add
mov
add
add
or
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
jbe
gs
imul
inc
xor
add
add
mov
add
add
sbb
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
jbe
gs
imul
js
inc
xor
in
mov
add
inc
add
add
and
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
xor
add
mov
add
add
add
xor
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
bound
je
xor
in
mov
add
add
cmp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
push
imul
xor
add
mov
add
mov
add
dec
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
outs
fs
cmp
add
in
mov
add
mov
add
push
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
imul
add
add
in
mov
add
add
pusha
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
imul
fs
xor
in
mov
add
mov
add
ins
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
jne
jb
outs
je
popa
addr16
xor
add
add
mov
add
mov
add
js
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
je
ins
jae
gs
popa
addr16
xor
add
in
mov
add
add
add
test
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
je
ins
jae
gs
popa
bound
xor
add
mov
add
mov
add
nop
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
jb
outs
je
gs
gs
popa
imul
gs
jae
gs
popa
bound
inc
cmp
add
add
mov
add
inc
add
add
pushf
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
gs
dec
je
ins
jae
gs
popa
bound
inc
cmp
add
mov
add
add
add
test
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
gs
jo
imul
mov
add
mov
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
jb
outs
je
jb
outs
outs
inc
inc
xor
add
in
mov
add
mov
add
rcr
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
jo
imul
ins
outs
addr16
inc
xor
add
add
mov
add
add
add
int3
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
arpl
data16
je
js
cmp
add
add
mov
add
mov
add
fcomp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
outs
js
gs
inc
inc
xor
add
in
mov
add
add
in
dec
add
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
jb
outs
je
gs
jo
imul
add
add
mov
add
add
add
lock
mov
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
jo
popa
je
inc
outs
js
xor
in
mov
add
add
cld
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
je
jb
inc
inc
xor
add
add
mov
add
mov
add
or
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
imul
popa
jb
inc
inc
xor
add
add
in
mov
add
add
add
adc
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
jb
gs
jo
inc
xor
add
mov
add
add
and
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
gs
arpl
ins
gs
ins
addr16
imul
xor
add
mov
add
mov
add
sub
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
gs
ins
bound
dec
outs
fs
xor
add
mov
add
inc
add
add
cmp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
ins
bound
dec
outs
fs
xor
add
mov
add
add
inc
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
js
jb
popa
jb
gs
inc
xor
add
add
in
mov
add
mov
add
push
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
js
jb
jns
gs
cmp
add
in
mov
add
inc
add
add
pop
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
ins
inc
js
jb
jb
outs
jb
inc
xor
add
add
in
mov
add
inc
add
add
push
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
js
jb
jb
gs
cmp
add
in
mov
add
add
je
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
inc
js
jb
jbe
ins
jne
je
inc
inc
xor
add
mov
add
inc
add
add
sbb
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
gs
jo
imul
in
mov
add
inc
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
jo
imul
in
mov
add
add
cwde
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
gs
jo
imul
outs
addr16
inc
xor
add
in
mov
add
rol
add
movs
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
jo
imul
outs
addr16
inc
xor
add
in
mov
add
ret
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
gs
jo
imul
outs
addr16
inc
xor
add
mov
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
gs
jo
imul
outs
addr16
inc
xor
add
mov
add
ret
add
add
enter
mov
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
inc
gs
outs
gs
jb
push
inc
arpl
outs
inc
cmp
in
mov
add
ret
inc
add
add
aam
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
outs
popa
bound
bound
arpl
xor
add
add
in
mov
add
add
add
loopne
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
gs
imul
jae
outs
outs
jae
inc
xor
add
add
in
mov
add
ret
inc
add
add
in
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
gs
inc
push
jb
outs
je
fs
inc
cmp
add
mov
add
inc
add
add
clc
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
imul
jb
push
jb
outs
je
fs
inc
xor
add
add
in
mov
add
add
add
add
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
jae
popa
jb
popa
bound
jae
fs
inc
cmp
add
in
mov
add
les
add
add
adc
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
jae
imul
fs
inc
cmp
add
mov
add
add
sbb
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
jo
imul
ins
outs
addr16
imul
add
sbb
add
pop
dec
ins
push
jb
outs
je
gs
jb
jne
imul
add
data16
mov
add
add
add
sub
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
gs
jb
outs
je
jb
outs
inc
gs
jne
je
inc
xor
add
in
mov
add
lds
add
add
xor
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
jb
dec
jb
gs
je
jb
inc
xor
add
in
mov
add
inc
add
add
inc
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
jb
dec
jb
gs
inc
xor
add
in
mov
add
add
dec
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
outs
jb
dec
jb
gs
inc
xor
add
add
in
mov
add
mov
add
pop
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
imul
outs
jne
imul
add
add
mov
add
inc
add
add
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
mov
add
add
jo
dec
add
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
inc
fs
je
push
jne
jo
jb
inc
inc
xor
add
add
in
mov
add
mov
jl
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
imul
inc
xor
add
add
mov
add
enter
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
outs
fs
jb
jne
inc
xor
add
mov
add
inc
add
add
xchg
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
jb
outs
je
jb
jne
dec
imul
add
add
mov
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
jb
jne
dec
gs
fs
cmp
add
in
mov
add
inc
add
add
lods
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
imul
jb
jae
imul
add
mov
add
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
imul
inc
imul
add
in
mov
add
add
(bad)
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
imul
imul
add
add
mov
add
retf
add
add
rcr
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
popa
jb
popa
bound
outs
outs
je
outs
je
inc
inc
xor
add
in
mov
add
add
add
(bad)
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
imul
je
outs
je
inc
inc
xor
add
mov
add
add
call
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
jne
push
popa
jb
popa
bound
outs
outs
je
outs
je
inc
inc
xor
add
add
mov
add
retf
add
add
hlt
fmul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
jae
jb
popa
jb
popa
bound
outs
outs
je
outs
je
inc
inc
xor
add
in
mov
add
inc
add
add
add
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
popa
jb
popa
bound
jns
gs
inc
cmp
add
in
mov
add
add
or
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
gs
imul
gs
inc
cmp
add
mov
add
retf
inc
add
add
sbb
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
jb
outs
je
gs
outs
ins
jne
outs
dec
outs
outs
inc
inc
xor
add
add
mov
add
add
add
and
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
gs
jb
outs
je
jb
gs
jne
je
inc
imul
mov
add
add
xor
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
pop
dec
ins
inc
jb
popa
je
push
imul
push
add
mov
add
int3
inc
add
add
cmp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
imul
outs
push
inc
arpl
outs
inc
cmp
add
in
mov
add
add
dec
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
jb
outs
je
outs
jo
push
jb
outs
je
jb
outs
outs
imul
je
outs
outs
inc
inc
xor
add
add
in
mov
add
add
push
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
gs
jb
outs
je
jb
outs
push
jb
outs
je
jb
imul
add
mov
add
int
add
add
pusha
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
je
jb
addr16
jo
outs
inc
inc
xor
add
add
in
mov
add
inc
add
add
ins
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
je
jb
addr16
ins
outs
jae
inc
xor
in
mov
add
add
js
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
push
dec
push
gs
imul
add
in
mov
add
into
inc
add
add
test
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
imul
outs
outs
inc
xor
add
in
mov
add
inc
add
add
nop
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
imul
inc
xor
add
add
in
mov
add
add
pushf
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
outs
bound
jne
je
xor
add
mov
add
iret
inc
add
add
test
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
outs
bound
add
add
mov
add
rol
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
ins
push
je
jae
jae
gs
popa
addr16
outs
jne
je
xor
in
mov
add
add
rcr
add
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
je
jae
jae
gs
outs
bound
je
outs
outs
push
popa
ins
jne
inc
cmp
add
add
mov
add
rol
add
add
int3
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
popa
addr16
jo
imul
gs
xor
add
in
mov
add
rol
add
add
fcomp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
popa
addr16
jo
imul
outs
addr16
inc
xor
add
add
in
mov
add
add
in
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
popa
addr16
jo
imul
outs
addr16
inc
xor
add
add
in
mov
add
rol
add
add
lock
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
jo
outs
fs
cmp
add
add
add
in
mov
add
inc
add
add
cld
fisttp
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
je
jae
jae
gs
gs
dec
outs
bound
add
add
in
mov
add
add
or
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
gs
push
popa
addr16
cmp
add
in
mov
add
rol
add
add
adc
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
popa
addr16
gs
imul
add
mov
add
rol
add
add
and
dec
add
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
je
jae
jae
gs
popa
addr16
gs
imul
cmp
add
add
mov
add
add
sub
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
jb
jns
gs
imul
add
mov
add
rol
add
add
cmp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
push
je
jae
jae
jb
ja
popa
addr16
xor
add
add
in
mov
add
aam
add
add
inc
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
popa
jae
inc
jb
outs
jb
xor
in
mov
add
add
push
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
gs
gs
inc
imul
in
mov
add
aam
add
add
pop
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
jb
outs
je
inc
xor
add
in
mov
add
aad
add
add
push
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
push
je
jae
jae
je
jb
addr16
jb
outs
je
inc
xor
add
add
mov
add
add
add
je
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
bound
dec
jne
jo
je
inc
cmp
add
adc
dec
ins
pop
push
gs
popa
jb
ins
gs
jb
inc
xor
add
add
in
mov
add
aad
add
add
sbb
add
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
inc
outs
jne
inc
gs
imul
inc
cmp
add
add
mov
add
(bad)
inc
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
outs
jne
inc
gs
imul
ins
fs
cmp
add
mov
add
inc
add
add
cwde
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
ins
inc
outs
jne
inc
gs
gs
inc
outs
je
jns
xor
add
in
mov
add
(bad)
inc
add
add
movs
fimul
mov
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
inc
outs
jne
inc
gs
outs
je
jns
inc
xor
add
mov
add
xlat
inc
add
add
mov
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
gs
je
bound
arpl
popa
je
jae
xor
in
mov
add
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
mov
add
aad
add
add
enter
mov
or
je
jmp
push
mov
call
jmp
add
add
dec
ins
pop
inc
gs
popa
jb
ins
gs
jb
inc
xor
add
add
mov
add
xlat
inc
add
add
aam
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
pop
dec
ins
push
jb
outs
je
gs
je
jb
push
arpl
popa
je
inc
xor
in
mov
add
inc
add
add
loopne
dec
add
or
je
jmp
push
mov
call
jmp
add
add
or
out
dec
jge
push
outs
inc
mov
test
fild
add
dec
push
jg
inc
mov
and
(bad)
stos
push
ins
push
mov
sbb
mov
adc
mov
sbb
adc
xor
or
stos
add
xchg
add
xor
or
stos
add
xchg
dec
jo
imul
je
xor
add
xor
push
push
jno
jb
mov
aas
pop
inc
sahf
mov
ja
scas
push
push
popf
inc
lods
mov
fist
je
cmp
dec
inc
dec
push
push
pop
push
pop
push
push
inc
dec
pop
inc
dec
xor
dec
aaa
dec
outs
arpl
add
dec
imul
ins
add
add
fld
add
add
pop
add
add
add
add
fld
dec
fld
in
fimul
shl
inc
outs
ins
ins
popa
outs
xor
add
add
dec
lods
xor
or
stos
add
xchg
inc
jb
ins
xor
add
popa
xor
add
jae
gs
je
add
or
jl
push
add
add
inc
add
push
add
dec
add
add
add
add
popa
add
add
jb
popa
add
add
outs
add
add
add
add
add
jb
add
add
add
add
add
add
inc
add
add
push
add
push
add
add
add
add
add
inc
add
add
push
add
push
add
push
add
inc
add
add
sub
add
inc
add
arpl
jne
ins
add
outs
add
add
add
add
add
add
jae
jo
outs
add
je
outs
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
outs
add
and
add
and
inc
add
jno
jne
imul
outs
add
add
add
add
add
push
add
add
dec
add
add
sbb
add
dec
add
inc
add
inc
add
push
add
push
add
inc
add
add
add
and
add
dec
add
add
outs
add
and
add
and
push
add
outs
add
add
add
add
add
add
push
add
add
dec
add
add
sbb
add
dec
add
inc
add
inc
add
add
push
add
inc
add
add
add
adc
add
push
add
add
add
je
imul
add
add
adc
add
push
add
inc
add
inc
add
push
add
push
add
add
add
push
add
add
push
add
push
add
dec
add
add
dec
add
push
add
inc
add
add
and
add
push
add
arpl
add
jne
je
popa
add
add
imul
popa
add
add
add
add
add
add
dec
add
inc
add
push
add
add
add
add
add
add
dec
add
inc
add
push
add
add
push
add
inc
add
add
xor
add
add
adc
add
stos
add
movs
add
add
ins
add
outs
add
je
popa
add
imul
add
add
outs
add
add
add
add
popa
add
add
jb
popa
add
add
add
add
ins
movs
push
add
add
add
add
ins
movs
push
add
add
add
add
ins
movs
push
add
add
popa
add
add
jb
popa
add
add
add
dec
add
add
outs
add
and
popa
add
add
outs
add
outs
add
je
outs
add
add
add
add
add
add
jb
imul
imul
and
imul
outs
add
arpl
add
add
add
add
add
outs
add
data16
add
jb
popa
add
add
add
jb
imul
imul
sub
add
popa
add
add
add
jae
add
push
add
imul
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
add
add
add
add
add
push
add
add
dec
add
add
add
add
add
push
add
inc
add
inc
add
push
add
push
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
dec
add
inc
add
push
add
add
add
add
add
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
je
inc
outs
outs
ins
add
add
pop
pop
jbe
popa
push
je
push
xor
add
jbe
popa
inc
popa
je
push
popa
jb
add
add
jbe
popa
inc
popa
je
push
cmp
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
add
dec
add
add
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
dec
xor
add
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
add
add
jecxz
cmovle
int
jae
and
sahf
in
inc
pushf
mov
loope
mov
ficom
dec
mov
nop
mov
dec
push
int3
es
je
out
rol
shl
pushf
lock
jns
gs
jb
ja
imul
lods
xor
or
stos
add
xchg
push
imul
add
add
jo
arpl
je
add
arpl
arpl
jne
data16
add
jo
arpl
data16
add
push
add
add
imul
pop
add
add
je
ins
je
add
jbe
popa
inc
outs
add
add
js
inc
add
add
lock
mov
or
je
jmp
push
mov
call
jmp
add
add
cwde
add
add
add
add
add
add
add
add
sub
bound
add
xchg
or
add
add
add
add
add
ins
add
add
push
outs
inc
lea
dec
mov
aaa
psrlw
lea
imul
mov
mov
das
sub
jg
mov
pop
les
inc
dec
mov
mov
adc
je
jb
xor
add
add
ins
add
push
cmps
inc
lods
jae
mov
inc
cmc
sbb
pushf
jne
movs
dec
mov
(bad)
das
(bad)
xchg
mov
xchg
adc
loop
jnp
sub
jbe
jmp
cwde
dec
mov
push
inc
mov
data16
addr16
add
add
push
sbb
add
test
push
mov
pop
push
dec
inc
push
dec
inc
inc
dec
pop
push
push
inc
inc
push
push
inc
xor
inc
push
xor
xor
outs
arpl
add
push
push
inc
popa
je
push
imul
add
add
add
add
add
add
add
loopne
add
loopne
add
fimul
shl
push
popf
sub
sub
mov
daa
pop
mov
loop
pushf
pop
pop
inc
fwait
adc
add
add
inc
cmp
dec
inc
dec
push
push
pop
push
pop
push
push
inc
dec
pop
push
dec
inc
dec
push
pop
xor
outs
arpl
add
arpl
gs
dec
imul
add
add
add
add
add
add
dec
loope
add
inc
add
fisttp
shl
add
add
add
jae
je
add
popa
add
add
jo
add
popa
add
add
outs
add
add
add
push
add
outs
add
add
imul
add
add
dec
add
push
add
dec
add
add
push
add
and
sub
add
dec
add
dec
add
dec
add
push
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
add
outs
add
add
add
and
dec
add
jo
jb
add
popa
add
add
add
add
add
ss
pop
pop
inc
inc
cmps
mov
rol
(bad)
add
inc
add
ja
enter
xchg
out
sbb
jne
pop
es
mov
inc
not
dec
aaa
sar
dec
or
add
lods
xor
or
stos
add
xchg
inc
outs
ins
bound
add
sbb
add
push
jne
jb
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
inc
cmp
dec
inc
dec
push
push
pop
push
pop
push
push
inc
dec
pop
dec
push
inc
dec
dec
inc
push
xor
outs
arpl
add
add
add
popf
inc
add
loop
add
add
add
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
push
gs
outs
jb
popa
outs
arpl
jb
jno
outs
arpl
add
clc
popf
inc
add
inc
add
add
adc
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
outs
imul
jbe
push
je
imul
popf
inc
add
add
sbb
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
imul
push
jo
arpl
js
add
popf
inc
add
jecxz
add
add
sub
dec
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
popa
add
jb
popa
add
add
mov
mov
sbb
fdivr
inc
dec
aas
adc
mov
cdq
mov
jnp
and
sbb
push
mov
les
or
into
addr16
jmp
xchg
imul
fnstenv
fldenv
popa
outs
add
add
scas
or
inc
cdq
scas
mov
inc
in
movs
xchg
les
xlat
je
push
leave
dec
push
inc
outs
ins
inc
je
xor
add
add
add
lods
in
add
add
add
add
add
add
add
loop
add
dec
add
and
add
pop
add
jle
inc
mov
imul
sbb
fistp
dec
inc
nop
xor
cmc
loope
test
mov
scas
add
push
loopne
nop
fwait
lods
jnp
mov
pop
push
inc
(bad)
mov
mov
push
dec
aad
popa
bound
cmp
add
gs
aaa
add
dec
popa
bound
add
push
inc
mov
and
inc
and
(bad)
imul
pop
out
mov
test
add
sbb
add
pop
add
outs
icebp
inc
movs
cmp
xor
sbb
cmp
push
push
fst
lahf
or
outs
fs
gs
popa
addr16
add
add
push
sahf
inc
add
add
cmp
dec
add
or
je
jmp
push
mov
call
jmp
add
add
dec
add
add
add
jb
outs
add
add
add
dec
add
jo
jb
add
popa
add
add
add
add
add
push
add
ins
add
jbe
popa
add
add
add
outs
add
add
imul
add
add
add
add
jo
add
je
outs
add
add
add
add
push
add
add
ins
add
and
add
add
imul
outs
add
popa
add
add
add
add
add
add
add
add
add
and
push
add
ins
add
jp
imul
add
add
add
add
dec
lods
xor
or
stos
add
xchg
add
add
data16
add
add
popa
add
add
add
add
outs
add
imul
outs
add
ins
add
add
add
jbe
add
add
add
inc
add
jo
imul
add
and
jae
imul
jb
add
jp
popa
add
add
add
add
add
imul
imul
imul
and
popa
add
arpl
push
add
and
add
ins
add
add
add
jbe
add
add
add
add
add
imul
imul
imul
and
add
add
imul
js
add
push
add
ins
add
jbe
popa
add
add
add
jb
outs
add
add
add
and
dec
add
jo
jb
add
popa
add
add
add
add
jo
add
je
outs
add
add
add
add
push
add
add
ins
add
and
add
add
imul
outs
add
popa
add
add
add
add
add
add
add
push
add
outs
add
add
add
and
dec
add
jo
jb
add
popa
add
add
add
add
add
add
add
add
jae
imul
add
add
add
add
add
add
add
add
push
add
add
outs
add
data16
jb
ins
add
and
ins
add
add
bound
bound
popa
add
add
outs
add
and
add
ins
add
add
jo
jo
ins
add
arpl
popa
add
imul
add
add
add
add
add
lods
xor
or
stos
add
xchg
mov
add
push
add
outs
add
add
add
and
dec
add
jo
jb
add
popa
add
add
add
add
add
add
add
add
add
imul
ins
add
add
add
imul
imul
add
add
jne
jp
imul
add
add
jne
ins
add
add
add
popa
add
arpl
push
add
and
and
add
adc
add
inc
add
add
dec
add
dec
add
dec
add
add
add
and
add
arpl
cmp
pop
add
ins
add
jb
add
popa
add
add
add
add
add
add
add
sbb
add
arpl
outs
add
data16
add
jb
popa
add
imul
add
add
add
add
arpl
outs
add
add
add
add
add
add
add
add
ins
add
add
jns
jns
jns
add
add
or
add
push
add
ins
add
add
add
push
add
add
je
add
add
add
add
jne
je
add
je
add
add
add
add
add
add
jae
add
add
add
jb
add
add
je
outs
add
add
add
add
outs
add
ins
add
jb
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
iretw
adc
pusha
rcl
popa
push
popa
jb
jae
dec
add
add
jbe
popa
push
popa
jb
popa
je
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
dec
outs
push
je
add
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
dec
sbb
mov
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
je
add
add
add
add
add
add
add
add
add
add
outs
add
and
call
add
ins
add
add
add
add
sub
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
dec
add
add
add
add
add
add
add
outs
add
add
imul
and
jne
outs
add
and
add
je
popa
add
add
popa
add
add
add
add
add
add
add
imul
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
cmp
cmp
and
add
push
add
add
cmp
cmp
add
xor
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
cmp
cmp
and
push
add
and
add
add
or
add
push
add
add
add
add
add
add
add
add
imul
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
dec
add
and
add
push
add
add
dec
add
add
sub
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
cmp
xor
add
add
add
cmp
xor
add
add
imul
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
cmp
xor
add
add
add
add
add
cmp
xor
add
add
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
imul
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
xor
xor
xor
xor
and
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
imul
and
add
add
add
add
sub
add
add
add
add
jae
jne
outs
add
and
jae
je
popa
add
jo
popa
add
je
add
add
add
imul
je
popa
add
add
add
ins
add
outs
add
jae
imul
ins
add
and
jae
je
popa
add
jo
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
jbe
popa
inc
push
dec
outs
je
add
add
add
add
imul
je
imul
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
je
add
pop
pop
jbe
popa
dec
outs
push
popa
jb
pop
pop
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
push
arpl
imul
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
pop
pop
jbe
popa
inc
jo
xor
add
adc
add
and
outs
add
add
add
add
and
and
add
pop
pop
jbe
popa
push
dec
xor
jb
pop
pop
jbe
popa
push
popa
jb
add
jbe
popa
push
popa
jb
fs
jbe
popa
push
cmp
jb
add
dec
mov
and
mov
jns
in
xchg
and
retf
inc
or
js
es
sub
pusha
inc
cdq
inc
cmp
scas
mov
daa
ins
add
imul
fs
cmp
js
xor
add
push
gs
xor
add
adc
jo
add
add
add
add
cmp
add
sub
add
dec
add
jae
add
imul
and
jne
outs
add
and
jo
popa
add
jae
ja
outs
add
add
add
add
add
popa
add
jae
ja
outs
add
add
add
add
add
add
jo
je
imul
jae
add
sub
add
push
add
outs
add
and
push
add
jo
jae
and
popa
add
add
je
popa
add
je
jne
jo
add
add
pop
add
add
popa
add
jae
ja
outs
add
add
add
outs
add
and
jbe
popa
add
add
add
add
add
add
imul
je
add
add
add
outs
add
add
imul
outs
add
add
add
add
add
add
add
push
add
jae
jae
ja
outs
add
add
add
outs
add
and
jbe
popa
add
add
add
add
add
add
jb
outs
add
add
add
popa
add
add
outs
add
arpl
ins
add
jae
popa
add
add
add
add
add
add
dec
add
jae
jae
jne
outs
add
and
jae
je
popa
add
jo
popa
add
je
add
add
jb
add
add
je
add
add
add
add
imul
add
popa
add
add
add
add
add
add
add
cmp
pop
add
ins
add
jb
add
popa
add
add
add
add
push
add
outs
add
jbe
add
add
add
add
ins
add
add
outs
add
add
imul
outs
add
add
add
je
add
je
imul
add
or
add
add
arpl
jne
add
add
or
add
jo
jae
ja
popa
add
ins
add
add
add
lods
xor
or
stos
add
xchg
dec
dec
lods
xor
or
stos
add
xchg
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
dec
xor
je
add
pop
pop
jbe
popa
push
popa
jb
ins
jo
jno
add
pop
pop
jbe
popa
push
popa
jb
jb
add
jbe
popa
inc
outs
outs
ins
push
popa
jb
jne
ins
add
add
or
xor
or
stos
add
xchg
push
add
add
add
add
add
and
and
and
sub
and
and
and
sub
and
and
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
ja
ja
ja
add
imul
outs
add
add
outs
add
das
add
jae
jae
imul
add
jp
popa
add
add
jae
jae
imul
add
jp
popa
add
add
jae
jo
add
add
or
add
dec
add
add
add
add
push
add
add
je
je
jo
cmp
das
add
add
add
add
ja
ja
ja
add
imul
outs
add
add
outs
add
das
add
jb
outs
add
add
add
das
add
jne
add
add
imul
outs
add
add
add
je
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
jo
jo
outs
add
je
inc
add
imul
outs
add
add
je
add
push
add
add
popa
add
ins
add
add
add
add
add
add
add
add
add
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
push
cmp
je
xor
add
add
jbe
popa
push
popa
jb
imul
popa
push
xor
popa
jb
add
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
inc
jns
popa
jb
add
jbe
popa
inc
jns
jne
add
pop
pop
jbe
popa
inc
jns
jne
dec
xor
add
add
dec
lods
xor
or
stos
add
xchg
ror
xor
or
stos
add
xchg
sub
add
inc
add
outs
add
outs
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
mov
pop
pop
jbe
popa
push
jb
outs
je
bound
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
dec
imul
je
popa
jb
add
pop
pop
jbe
popa
inc
imul
add
adc
adc
mov
les
adc
adc
mov
les
add
add
inc
add
push
add
pop
add
dec
add
add
add
add
push
add
dec
add
push
add
dec
add
inc
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
and
xor
xor
and
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
sub
add
ins
add
add
add
jne
jo
jo
outs
add
je
inc
add
imul
outs
add
add
je
add
sub
add
inc
add
outs
add
add
ins
add
and
ins
add
and
jae
je
popa
add
jo
popa
add
add
add
add
add
add
add
jae
jne
outs
add
and
jae
je
popa
add
jo
popa
add
je
add
add
outs
add
je
popa
add
add
je
popa
add
add
add
add
imul
add
popa
add
add
add
add
add
dec
lods
xor
or
stos
add
xchg
pop
pop
jbe
popa
dec
gs
inc
popa
arpl
outs
ins
ins
inc
add
jbe
popa
inc
js
je
popa
arpl
outs
ins
ins
add
add
jbe
popa
inc
popa
jae
dec
bound
add
add
jbe
popa
inc
outs
jb
popa
arpl
outs
ins
ins
inc
add
pop
pop
jbe
popa
inc
popa
jae
dec
bound
popa
jb
inc
add
add
outs
add
add
imul
and
ins
add
add
jb
popa
add
add
add
add
outs
add
ins
add
je
outs
add
add
push
add
add
jae
add
xor
add
dec
add
popa
add
imul
imul
data16
jb
ins
add
je
outs
add
add
jb
jb
popa
add
add
add
add
add
add
add
add
push
add
add
jae
add
add
and
add
inc
add
popa
add
jb
popa
add
imul
and
popa
add
imul
add
add
add
or
add
arpl
imul
popa
add
add
add
dec
add
dec
add
dec
add
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
popa
jb
outs
je
pop
pop
jbe
popa
inc
jo
cmp
add
pop
pop
jbe
popa
push
popa
jb
ins
jo
add
add
add
add
add
jae
jne
outs
add
add
dec
xor
pop
sar
lods
pop
mov
push
dec
popf
mov
mov
sbb
fdivr
dec
lods
xor
or
stos
add
xchg
inc
and
add
or
inc
popa
ins
outs
fs
jb
outs
add
popa
ins
outs
fs
jb
outs
add
xor
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
dec
mov
mov
dec
inc
inc
dec
inc
inc
mov
dec
inc
inc
dec
inc
inc
mov
dec
inc
inc
dec
inc
inc
mov
dec
inc
inc
dec
inc
inc
mov
dec
inc
inc
mov
inc
inc
inc
inc
inc
inc
mov
inc
inc
inc
inc
inc
inc
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
add
jb
xor
add
add
add
push
dec
add
add
adc
add
add
add
add
push
popa
push
add
inc
test
add
je
outs
outs
gs
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
mov
add
(bad)
add
popf
or
add
add
add
add
add
add
sbb
and
and
and
and
and
and
and
and
and
and
and
and
dec
adc
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
push
add
add
add
add
sbb
add
add
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
add
add
add
add
add
pop
add
pop
pop
pop
add
add
pop
add
add
add
pop
add
pop
add
add
add
add
add
add
add
pop
add
add
pop
add
pop
add
add
add
pop
add
pop
pop
add
add
pop
pop
add
pop
pop
pop
add
pop
add
pop
add
add
inc
add
pop
add
pop
pop
add
pop
add
add
inc
add
inc
add
add
add
add
inc
pop
add
pop
pop
add
pop
add
add
inc
add
inc
add
add
inc
add
add
add
add
add
inc
add
add
pop
add
pop
pop
add
pop
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
inc
add
add
inc
add
add
add
pop
add
pop
pop
add
pop
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
inc
add
add
inc
add
add
add
pop
add
pop
pop
add
pop
add
add
inc
add
inc
add
add
inc
add
add
add
add
add
inc
add
add
pop
add
pop
pop
add
pop
add
add
inc
add
inc
add
add
add
add
inc
pop
add
pop
pop
add
pop
add
add
inc
add
pop
add
pop
pop
add
pop
pop
add
add
pop
add
pop
add
add
add
pop
add
add
pop
add
pop
pop
add
pop
add
pop
add
aas
pop
add
add
pop
pop
pop
add
add
add
add
add
pop
add
pop
pop
add
pop
add
pop
add
add
add
add
pop
pop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
call
into
jns
cwde
(bad)
cmp
cwde
inc
sbb
cwde
inc
sbb
cwde
(bad)
cmp
cdq
into
jns
fdivrp
call
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
outs
data16
popa
and
jae
ins
gs
outs
outs
and
inc
ins
je
dec
sub
inc
out
add
push
or
arpl
outs
fs
jb
outs
add
adc
dec
push
inc
outs
ins
inc
je
xor
dec
outs
outs
je
push
imul
add
or
add
sub
test
add
and
adc
add
add
pop
add
sbb
push
add
add
push
adc
add
pop
or
add
add
add
add
add
daa
or
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
out
int
add
add
add
add
in
add
sbb
add
pop
fsubrp
mov
ins
out
jg
inc
cmp
add
add
je
add
add
adc
inc
add
add
add
add
add
add
nop
add
add
popa
outs
jae
push
gs
data16
inc
repnz
add
add
arpl
outs
add
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
adc
dec
add
add
or
pushf
or
add
add
add
add
add
add
sbb
and
and
and
and
and
and
and
and
and
and
and
and
and
pop
adc
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
push
add
add
add
add
sbb
add
add
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
add
add
add
add
add
pop
add
pop
pop
pop
add
add
pop
add
add
add
pop
add
pop
add
add
add
add
add
add
add
pop
add
add
pop
add
pop
add
add
add
pop
add
pop
pop
add
add
pop
pop
add
pop
pop
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
add
add
add
add
movs
mov
add
add
movs
mov
add
add
movs
mov
add
add
add
add
add
pop
pop
add
pop
add
add
add
add
movs
mov
add
add
movs
mov
add
add
movs
mov
add
add
add
add
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
add
pop
add
add
add
pop
add
add
pop
add
pop
pop
add
pop
add
pop
add
aas
pop
add
add
pop
pop
pop
add
add
add
add
add
pop
add
pop
pop
add
pop
add
pop
add
add
add
add
pop
pop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
call
inc
sbb
cwde
inc
sbb
lahf
(bad)
stc
call
(bad)
stc
call
(bad)
stc
call
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
outs
jne
ins
popa
and
jae
ins
gs
outs
outs
and
inc
ins
je
pop
sub
inc
in
add
add
add
popa
xor
sbb
(bad)
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
ret
stos
mov
add
stos
stos
add
rol
les
add
lea
add
push
push
add
inc
add
data16
jnp
add
add
arpl
cdq
mov
add
dec
add
pop
pop
add
mov
add
mov
xchg
js
jae
jmp
loop
inc
inc
inc
add
enter
div
add
in
in
add
(bad)
add
xchg
xchg
add
add
(bad)
mov
add
mov
imul
retf
enter
mov
jbe
movs
mov
mov
jge
add
ror
add
leave
movs
add
les
add
mov
int
retf
mov
call
ret
mov
add
fnstenv
add
mov
mov
add
in
fld
mov
js
jmp
ret
add
fsub
add
jecxz
add
ror
add
in
jmp
add
(bad)
add
mov
cli
cmc
out
add
fisubr
add
loop
add
int
add
ret
lock
add
in
add
out
add
out
fild
stc
repnz
jmp
add
in
add
out
add
in
add
fidivr
add
loop
add
hlt
fiadd
hlt
jmp
add
mul
add
(bad)
add
fst
add
(bad)
add
in
jmp
xlat
(bad)
aam
mul
mov
(bad)
jmp
add
mov
lds
icebp
jmp
mov
(bad)
jmp
out
jmp
add
in
mov
add
out
mov
add
cmc
aad
xchg
xchg
xchg
(bad)
cld
repz
ror
add
icebp
mov
add
test
(bad)
(bad)
stc
add
test
sar
add
mov
(bad)
cld
leave
add
(bad)
out
(bad)
dec
add
dec
add
out
add
call
add
out
add
(bad)
fld
(bad)
(bad)
fild
(bad)
jmp
add
(bad)
out
add
(bad)
std
add
leave
enter
iret
add
retf
fadd
push
inc
cmps
aam
add
fcomp
add
(bad)
add
inc
imul
add
fld
cwde
(bad)
repz
mov
add
inc
(bad)
fcomi
add
rcr
add
std
add
test
add
mov
add
retf
test
jbe
add
jmp
add
fsub
add
jmp
add
inc
and
sti
add
imul
add
push
out
add
(bad)
add
dec
inc
mov
(bad)
add
retf
or
add
retf
icebp
add
(bad)
push
mov
mov
lods
add
(bad)
inc
cld
cld
cld
add
stc
stc
add
div
add
cmc
cmc
add
repnz
lock
out
out
add
in
in
add
jmp
add
jmp
out
loop
loop
(bad)
fadd
(bad)
fld
(bad)
(bad)
(bad)
add
rcl
add
rcl
add
iret
iret
add
int3
int3
add
retf
mov
add
ret
mov
mov
mov
mov
mov
mov
mov
scas
scas
scas
add
test
add
popf
popf
add
xchg
xchg
add
mov
add
jo
push
push
fs
add
pop
add
add
inc
add
inc
add
aas
aas
add
cmp
add
xor
add
cmc
add
push
cli
div
cmc
add
int3
and
cli
cmc
cmc
add
cmp
fcmovnbe
shl
sbb
cmc
cmc
add
aaa
dec
fcom
fcmovu
(bad)
into
pop
das
adc
and
cmc
add
add
jbe
int3
mov
into
and
sub
xor
adc
add
ss
fild
int
fcmovnu
(bad)
add
inc
push
into
and
movs
sahf
int3
int3
(bad)
(bad)
sbb
add
inc
imul
fcmovbe
and
int
and
add
xor
ret
mov
test
xlat
popf
fsub
or
add
and
pop
pop
jb
aam
(bad)
mov
test
pop
push
and
dec
gs
pop
jg
rcr
fcomp
and
adc
and
gs
dec
(bad)
mov
int
xlat
sbb
lock
add
add
add
and
arpl
pop
pop
pop
imul
stos
shl
sti
sti
cli
clc
cmc
add
add
add
mov
mov
pop
pop
addr16
pop
push
pop
ins
cs
push
adc
or
sub
add
add
mov
mov
addr16
pop
push
aas
xor
and
sbb
adc
add
std
cli
add
add
mov
mov
mov
lods
add
out
pop
jo
mov
add
cli
add
add
pushf
pushf
mov
mov
je
leavew
leave
cmp
add
test
add
mov
jmp
push
push
dec
dec
xchg
mov
add
push
je
ja
jae
push
dec
inc
inc
xchg
xchg
push
cld
cmc
add
loop
mov
pusha
push
inc
push
cmc
add
call
mov
push
inc
jle
or
cli
add
out
movs
int3
xchg
(bad)
mov
clc
dec
dec
inc
dec
mov
add
jecxz
popf
int3
mov
dec
push
push
vmovhps
repz
add
add
fild
int3
or
pusha
je
jnp
sbb
add
aad
or
xchg
mov
jno
push
sbb
add
jecxz
cmp
xchg
jle
lea
icebp
hlt
add
add
iret
cmp
int3
int3
int3
xchg
mov
jns
test
add
jecxz
iret
cmp
or
test
adc
fcmovu
iret
ds
push
das
das
push
xor
in
jecxz
fcom
fcmovu
loopne
fucomp
out
add
add
loop
jecxz
out
repz
(bad)
jmp
jg
inc
ud0
rol
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aas
add
add
add
add
add
add
add
add
lock
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
(bad)
clc
add
(bad)
clc
add
(bad)
cld
add
(bad)
inc
aas
(bad)
inc
and
loopne
loopne
inc
push
add
add
push
add
gs
xor
add
adc
inc
popa
je
and
ins
gs
outs
outs
popa
je
and
and
add
(bad)
inc
add
pop
pop
inc
adc
add
add
nop
add
add
popa
outs
jae
push
gs
inc
inc
add
add
je
add
add
add
gs
xor
add
(bad)
inc
add
das
or
add
add
nop
add
add
popa
outs
jae
push
gs
inc
add
dec
xor
or
adc
out
adc
(bad)
xor
cmp
pop
stos
sbb
loop
(bad)
cs
shr
lods
xor
or
stos
add
xchg
xchg
jl
add
add
ins
xor
or
arpl
gs
and
inc
outs
ins
jo
je
popa
and
ins
gs
imul
imul
add
sbb
add
and
and
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
clc
repz
std
fiadd
imul
jmp
add
cld
mov
add
out
add
loopne
add
idiv
add
fcmovnu
add
out
stos
add
out
add
icebp
mov
jmp
add
jmp
ret
out
stos
add
rcl
add
rcl
add
in
movs
add
int
add
mov
jmp
xchg
add
out
add
retf
(bad)
jecxz
add
mov
fimul
add
fadd
add
ret
faddp
rol
enter
jecxz
add
enter
mov
jnp
lock
add
mov
mov
add
mov
mov
add
(bad)
add
push
mov
xchg
fild
jae
mov
jp
xchg
xlat
mov
add
mov
add
rcl
mov
jp
dec
imul
mov
add
mov
add
xchg
shl
push
add
int3
bound
fisubr
jns
adc
add
enter
mov
add
stos
stos
add
stos
cmps
add
test
add
mov
sahf
add
(bad)
pop
add
test
cmps
add
mov
add
mov
jnp
shl
mov
add
les
nop
int3
addr16
mov
jae
shl
add
mov
sahf
add
mov
pushf
add
mov
add
mov
jno
int3
cwde
call
call
frstor
pop
add
stos
pop
add
mov
add
stos
pop
add
mov
add
leave
pusha
add
xchg
xchg
add
push
add
mov
add
test
nop
add
xchg
mov
in
push
add
cdq
jns
into
mov
push
add
mov
add
pop
add
stos
aas
add
mov
add
dec
add
mov
add
xchg
js
mov
mov
add
test
add
test
add
mov
test
dec
mov
add
(bad)
cwde
push
add
add
stos
add
mov
add
(bad)
cmps
sbb
btc
lods
jg
add
js
add
jge
add
cdq
sub
pushf
jg
add
jp
add
mov
add
mov
add
js
add
xchg
in
xchg
pop
add
jnp
add
mov
add
jno
add
cdq
add
add
sbb
leave
ins
ins
add
add
jb
add
cdq
add
mov
jno
sahf
lahf
adc
add
imul
lods
jo
add
ins
add
sbb
aas
movs
push
add
xchg
add
imul
js
add
adc
jae
push
add
lea
add
data16
pushf
sbb
aad
add
mov
nop
xor
icebp
test
add
add
add
mov
or
hlt
add
jge
or
popf
pop
add
popa
push
add
add
dec
xchg
pop
add
add
int
sbb
movs
test
add
cwde
add
add
ins
sbb
xchg
pop
push
add
jbe
add
add
fdiv
in
add
mov
imul
mov
add
add
jno
dec
add
bound
add
dec
dec
add
pop
add
outs
inc
add
dec
add
mov
add
mov
xor
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
clc
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
clc
clc
bound
hlt
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
mov
push
push
adc
mov
clc
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
cmps
push
sbb
add
adc
jne
cli
clc
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
clc
clc
mov
xor
inc
cmp
push
cmp
pop
stos
repnz
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
int
pop
cmp
cs
arpl
cwde
cwde
imul
jnp
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
imul
dec
cmp
dec
arpl
push
and
xor
fcmovnu
fcmovnu
fcmovnu
mov
imul
(bad)
jns
dec
inc
inc
pop
inc
inc
xor
mov
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
dec
ja
js
cdq
cmps
mov
jns
inc
arpl
xchg
jnp
stos
cli
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fstp
push
addr16
popf
mov
rol
mov
gs
sub
clc
clc
fcmovnu
fcmovnu
fcmovnu
fnclex
inc
push
push
dec
push
push
add
jnp
sub
popa
popa
ins
jmp
fcmovnu
scas
lds
aas
dec
pop
and
sub
xchg
ins
sub
clc
fcmovnu
fcmovnu
call
and
xor
fs
cdq
pushf
sub
jno
mov
lea
push
sbb
adc
pop
sub
push
cmps
imul
movs
sahf
sahf
mov
clc
fcmovnu
(bad)
jmp
push
sbb
or
or
pop
sub
outs
pushf
dec
and
mov
mov
(bad)
(bad)
sahf
aaa
sbb
add
add
sbb
aas
pop
ins
jns
and
sub
arpl
(bad)
cld
mov
xor
sbb
adc
sub
imul
and
mov
test
cld
sti
test
dec
inc
cmp
sub
push
and
xchg
mov
fist
out
in
loope
mov
dec
pop
cmp
push
push
and
test
xchg
sti
div
in
out
in
loopne
(bad)
sbb
push
and
sub
shr
mov
icebp
in
in
ror
ret
fnstcw
adc
push
sbb
push
and
sub
mov
xlat
clc
(bad)
in
(bad)
mov
lods
add
adc
sbb
push
and
and
ret
ret
int3
clc
(bad)
in
leave
scas
lahf
nop
xor
and
adc
push
push
adc
or
jle
int3
clc
(bad)
jecxz
nop
je
pop
pop
dec
and
or
pop
push
push
add
or
and
fcmovnu
jl
mov
inc
pop
adc
jb
adc
pop
cmovno
inc
push
push
push
push
fcmovnu
fcmovnu
fcmovnu
xor
or
jae
(bad)
retf
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
nop
pop
cmp
or
or
push
mov
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xor
and
movs
rcr
fstp
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xor
and
xor
fnstenv
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
xor
inc
pop
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
xor
xor
xor
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
cld
aas
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
inc
add
cld
add
paddb
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
add
push
add
clc
add
(bad)
inc
(bad)
jmp
ins
xor
add
add
add
push
dec
add
add
add
push
adc
add
add
add
add
or
push
push
inc
outs
ins
ins
popa
outs
xor
call
add
gs
push
inc
outs
ins
ins
popa
outs
add
add
add
sub
add
pop
add
add
sub
sub
add
add
add
inc
add
dec
add
add
es
jbe
imul
add
add
add
add
add
add
(bad)
dec
add
jbe
popa
and
outs
arpl
jne
popa
add
add
add
or
push
push
inc
outs
ins
ins
popa
outs
xor
call
add
gs
push
inc
outs
ins
ins
popa
outs
add
add
add
add
pop
add
add
sub
sub
add
add
add
in
add
inc
add
add
add
pop
es
push
adc
add
add
add
add
add
add
dec
add
outs
jne
ins
popa
and
outs
arpl
jne
popa
add
add
add
or
add
bound
add
and
push
push
inc
gs
outs
gs
imul
bound
push
push
dec
outs
fs
popa
bound
add
js
test
push
adc
add
add
sub
xor
add
add
xor
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
hlt
add
add
add
(bad)
(bad)
push
add
add
add
add
push
add
adc
add
sldt
xor
mov
add
add
adc
add
push
add
or
add
push
add
add
add
push
add
add
add
or
add
add
add
or
add
pop
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
push
popa
push
add
or
jecxz
stos
add
push
add
add
nop
add
add
popa
outs
jae
push
gs
data16
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
push
popa
push
add
or
jecxz
stos
add
push
add
add
mov
add
popa
outs
jae
push
gs
data16
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
mov
jp
jp
mov
add
fdivr
jp
jp
add
add
add
fadd
(bad)
add
fdivr
jp
jp
add
add
fadd
(bad)
add
fadd
(bad)
add
fdivr
jp
jp
add
mov
dec
fadd
(bad)
add
fadd
(bad)
add
fadd
(bad)
add
fdivr
jp
jp
add
mov
push
fadd
(bad)
add
fadd
(bad)
add
fadd
mov
mov
push
fadd
(bad)
add
fadd
mov
add
mov
push
fadd
mov
mov
dec
mov
add
mov
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
jg
(bad)
clc
aas
(bad)
push
pop
(bad)
jmp
ud0
rol
jmp
ud0
lock
(bad)
(bad)
clc
aas
(bad)
(bad)
cld
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
(bad)
(bad)
(bad)
(bad)
inc
sbb
arpl
gs
and
and
ins
jo
je
popa
and
arpl
jbe
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
add
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
pop
add
push
jae
imul
clc
push
loopne
push
add
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
adc
arpl
gs
and
and
ins
jo
je
popa
add
add
add
pavgb
pop
pop
sbb
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
add
add
or
push
push
push
popa
outs
gs
xor
dec
add
gs
push
push
popa
outs
gs
add
js
pop
add
sbb
or
push
add
popa
add
add
add
add
das
add
call
add
adc
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
inc
cdq
add
add
or
push
push
push
popa
outs
gs
xor
dec
add
gs
push
push
popa
outs
gs
add
enter
xchg
jg
sysret
add
popa
add
add
add
add
add
cld
push
add
sldt
add
adc
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
inc
pop
add
add
add
add
arpl
add
ins
ins
imul
je
and
imul
and
ins
gs
imul
imul
add
xor
add
(bad)
inc
add
cmps
or
add
add
add
add
add
add
arpl
add
outs
ins
jo
je
popa
and
jo
gs
ss
inc
inc
and
and
jo
gs
ss
cs
inc
inc
add
add
add
outs
mov
inc
add
cmps
or
add
add
add
add
add
add
arpl
add
arpl
gs
and
jo
gs
ss
inc
inc
and
and
jo
gs
ss
cs
inc
inc
add
add
add
outs
mov
inc
add
cmps
or
add
add
add
add
dec
add
add
push
add
gs
xor
add
push
add
xor
jo
jb
jne
arpl
add
add
add
pop
inc
adc
add
add
mov
add
popa
outs
jae
push
gs
inc
jp
add
add
add
popa
xor
sbb
pop
sbb
add
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
(bad)
in
add
inc
jne
imul
add
add
xor
add
out
add
inc
outs
bound
rol
add
add
adc
add
or
add
fiadd
add
inc
add
sbb
fild
test
or
push
push
push
push
or
push
or
pop
or
or
or
push
adc
adc
or
or
movlps
adc
adc
sbb
sbb
sbb
and
and
and
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
or
or
or
or
or
or
push
push
push
adc
or
adc
adc
(bad)
(bad)
movups
push
pop
adc
adc
push
sbb
sbb
sbb
and
and
and
daa
daa
daa
daa
daa
daa
daa
daa
daa
inc
add
or
inc
enter
add
adc
add
add
les
loopne
add
add
add
push
add
or
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
and
add
adc
inc
and
adc
adc
add
add
pop
or
add
add
add
add
adc
add
xor
push
popa
jno
and
adc
push
bound
xor
jb
adc
icebp
xchg
mov
shl
add
add
add
add
add
adc
and
and
adc
jo
jno
adc
add
add
add
add
add
add
add
add
and
inc
push
popa
jno
and
mov
(bad)
fiadd
or
add
add
add
add
add
hlt
xchg
into
es
mov
test
mov
in
and
hlt
xchg
xor
cs
in
adc
and
ins
push
pop
popf
retf
jne
shr
in
jecxz
push
jecxz
sub
xor
(bad)
push
test
jnp
(bad)
xchg
mov
hlt
jge
mov
sub
retf
jns
retf
(bad)
cmp
mov
sbb
loopne
cmp
sbb
pop
leave
ins
mov
jbe
sbb
sbb
push
mov
push
push
mov
mov
dec
out
pop
out
lds
pop
fidiv
xchg
inc
inc
push
add
cmps
and
mov
cmovnp
(bad)
mov
xchg
pop
inc
cmp
mov
sbb
ds
mov
mov
lahf
movs
fcomp
xchg
mov
test
fst
lods
ss
jmp
pop
or
xor
das
mov
xchg
in
hlt
pop
and
jo
lods
test
mov
shl
popa
inc
jb
leave
jmp
cmp
xchg
lock
sar
iret
jge
int
outs
addr16
xor
push
add
retf
inc
dec
mov
mov
aam
adc
mov
jp
push
pop
test
cmc
das
sub
or
(bad)
cmp
pop
jno
jg
lahf
sub
inc
sbb
fimul
dec
xchg
dec
xchg
inc
ret
and
add
xor
hlt
ror
mov
outs
mov
aad
jnp
add
(bad)
(bad)
mov
dec
jmp
xchg
retf
test
cdq
int3
aad
pop
retf
(bad)
sar
pushf
add
cmps
(bad)
pop
imul
ror
sahf
mov
inc
cmp
and
jecxz
dec
xchg
ss
jns
dec
aam
dec
call
fisub
xchg
sub
push
inc
shr
xor
jns
fwait
mov
jnp
arpl
retf
inc
adc
mov
jg
nop
cmp
(bad)
pop
mov
mov
jp
pushf
lahf
push
mov
imul
mov
mov
(bad)
mov
sar
clc
lahf
inc
sbb
xchg
lahf
or
mov
mov
enter
sbb
data16
ds
push
mov
xor
pop
push
pop
iret
ficom
out
fnstenv
fwait
xchg
push
call
mov
in
(bad)
movs
loopne
sbb
inc
inc
and
dec
enter
and
loopne
sbb
dec
stc
mov
out
jno
ins
fwait
(bad)
jb
pushf
ja
(bad)
mov
fucom
jge
jl
jae
in
xlat
lods
add
push
add
inc
inc
popf
mov
cs
and
mov
fwait
(bad)
jb
pop
loop
(bad)
cmp
inc
mul
mov
xchg
movs
fist
mov
cmps
mov
mov
retf
cmps
push
push
xchg
xchg
pop
cmp
call
push
call
out
dec
not
push
push
repnz
pop
int3
shl
xchg
mov
dec
dec
or
nop
xchg
inc
sbb
sub
pop
xchg
inc
ins
dec
push
in
xchg
cwde
pop
sub
dec
or
xchg
(bad)
fiadd
or
add
add
mov
pushf
push
jno
les
or
dec
lahf
(bad)
aad
scas
out
and
mov
(bad)
pop
int
jmp
mov
pusha
and
cmc
fdivr
xor
call
in
push
add
bnd
sbb
rcl
aam
and
adc
dec
dec
inc
xchg
mov
(bad)
aas
push
loopne
rcr
inc
aam
adc
daa
xor
ret
jns
pushf
cmps
data16
(bad)
fiadd
or
add
add
push
es
cli
adc
xchg
cmp
cli
lahf
in
test
inc
je
mov
fwait
scas
xor
jne
mov
mov
xor
pop
(bad)
fiadd
or
add
add
lahf
out
(bad)
pop
jnp
mov
jg
hlt
push
aas
in
cmp
aaa
in
ins
sbb
lods
test
push
cmp
lahf
cli
mov
repz
(bad)
das
cdq
fdiv
jl
fdiv
mov
(bad)
mov
mov
sub
fistp
clc
outs
xor
sar
cwde
sub
push
cli
loop
and
test
mov
adc
popa
in
sub
cdq
ret
mov
xchg
jmp
sub
xchg
or
ins
dec
add
mov
int
pop
xor
mov
xchg
cmps
popa
pop
leave
movs
inc
dec
ja
xchg
imul
adc
pop
jmp
mov
jp
sub
mov
jns
jb
ror
sub
jbe
sub
sbb
ins
mov
sbb
pop
jmp
xlat
ja
jl
cld
outs
sbb
and
loope
(bad)
aam
cmp
je
cmps
int3
fisttp
cmps
sbb
mov
add
aam
js
mov
stos
shl
fstp
movs
ja
sub
jnp
repnz
pop
fcmove
push
(bad)
or
xchg
das
sbb
movs
mov
idiv
or
sbb
xor
cld
push
inc
pop
(bad)
xor
sbb
jmp
rcr
sub
in
cld
mov
js
scas
retf
fcomp
out
dec
xchg
fist
sub
mov
xchg
push
pop
pop
mov
lahf
sbb
das
dec
test
fnsave
fsubr
xchg
imul
push
retf
(bad)
cs
ret
call
mov
iret
inc
mov
cmp
xlat
stos
pop
mov
aam
inc
sub
cmps
lds
sti
stos
loopne
rcl
(bad)
pop
jg
inc
lods
mov
pop
inc
push
(bad)
dec
ficom
shl
lods
pop
ret
mov
xlat
in
mov
cmc
cmp
push
adc
mov
das
push
cmc
lds
pop
pop
adc
sbb
in
(bad)
pop
sar
mov
div
fwait
nop
scas
into
retf
push
add
shl
sub
sub
mov
shl
es
dec
retf
and
adc
mov
xchg
mov
cmps
out
mov
fs
les
pop
shl
icebp
mov
mov
out
or
cdq
push
xchg
stc
sub
fisubr
inc
push
xchg
or
xchg
fst
cwde
(bad)
cmp
aam
mov
pop
imul
add
push
pop
repnz
jbe
mov
loopne
fldcw
pusha
add
mov
jle
in
rol
jle
jecxz
fwait
pop
mov
pop
push
std
lea
push
pop
(bad)
dec
test
lds
push
into
scas
sub
mov
xor
mov
fdivr
adc
mov
inc
mov
pop
xchg
(bad)
bound
test
lahf
mov
adc
mov
in
push
imul
and
pop
jg
fs
outs
(bad)
xchg
and
icebp
sti
cmp
push
cmc
lock
sub
das
xchg
xlat
xchg
push
sub
sbb
cwde
add
cdq
into
cmps
mov
je
or
add
repz
mov
mov
fs
push
cdq
clc
out
ds
adc
push
mov
mov
jmp
fild
(bad)
mov
aas
sub
jne
pop
in
sub
adc
mov
je
mov
sub
xchg
jo
outs
add
hlt
fimul
in
inc
mov
(bad)
adc
or
aas
sbb
push
xchg
xor
mov
pushf
stos
repnz
pop
mov
into
adc
loopne
bound
movs
sbb
pop
(bad)
mov
sub
mov
sub
les
mov
xor
aad
mov
pop
push
mov
xchg
aaa
pop
div
push
add
les
add
push
sub
sbb
pop
fsubr
in
ret
les
mov
pop
mov
repnz
xor
scas
sub
push
sub
stos
add
ffree
retf
cmp
lea
push
enter
stos
sub
or
sar
jae
lahf
dec
cli
cmps
aad
jo
add
or
loope
dec
adc
pushf
daa
or
bound
jge
(bad)
fiadd
or
add
push
aas
add
arpl
jle
mov
and
movs
repz
sti
lods
mov
fiadd
or
add
push
aas
add
xchg
fiadd
or
add
push
aas
add
add
jo
retf
ror
mov
dec
cmp
mov
pop
pushf
cmp
jnp
in
cmp
imul
scas
mov
idiv
fwait
loopne
stc
jmp
jp
arpl
push
lods
jb
push
je
sub
ja
mov
imul
push
add
sbb
xor
inc
in
mov
push
outs
dec
add
into
cmp
xor
mov
pop
mov
sbb
imul
lock
aas
xor
and
mov
inc
ret
test
pusha
mov
sbb
xor
xor
mov
inc
pop
or
sub
xlat
add
jl
inc
ret
and
out
repnz
aas
sub
jno
jb
stos
fild
adc
(bad)
clc
pop
sti
addr16
retf
paddb
mov
adc
retf
mov
or
mov
cmps
shl
mov
(bad)
fist
les
popa
mov
mov
(bad)
call
je
outs
(bad)
cmp
add
pop
es
test
sbb
mov
push
mov
jbe
xchg
aam
cmp
(bad)
push
cmp
cs
or
xor
cmp
je
rol
cmp
cmp
push
inc
fstp
ins
mov
push
hlt
sub
push
cmps
les
sub
inc
lahf
add
scas
mov
or
ins
inc
cli
xor
je
inc
scas
inc
test
outs
cmp
add
sbb
out
xor
std
inc
outs
mov
lea
push
xchg
sbb
rol
pop
inc
mov
add
inc
cmp
xchg
adc
sbb
add
pop
xchg
out
mov
mov
inc
add
pop
or
cli
xchg
jge
sub
mov
jl
movs
popf
(bad)
out
mov
ret
sbb
add
scas
or
cmp
push
repz
lods
jae
lock
test
fimul
pop
out
cmp
jp
fcompp
int
cli
push
mov
leave
xchg
inc
int
pop
sub
inc
xchg
les
cdq
(bad)
jbe
jmp
sbb
and
test
mov
add
pop
push
adc
pop
cld
cmp
lods
enter
(bad)
sbb
lods
das
stos
ret
mov
repnz
sub
mov
mov
movs
mov
popf
rcr
push
lds
xchg
xor
fcomp
mov
xor
sub
add
push
inc
and
imul
cmps
stos
xor
in
daa
aam
popf
ja
push
push
or
cmps
sub
lea
sar
sahf
(bad)
jmp
mov
jae
push
push
jb
mov
jg
pop
mov
cdq
inc
sbb
clc
sub
enter
sbb
sub
call
xor
push
in
sbb
out
dec
cld
push
fst
or
and
pop
ins
in
test
fwait
outs
int3
int
(bad)
ret
dec
mov
retf
and
jmp
mov
or
add
(bad)
push
test
pop
mov
push
ins
cmp
ja
and
pop
add
inc
push
jmp
(bad)
adc
xor
inc
push
push
jno
(bad)
fdivr
stos
xor
dec
pop
out
in
push
dec
sbb
scas
pop
lods
jbe
xor
shl
push
(bad)
push
test
daa
outs
mov
test
add
adc
adc
xlat
pusha
imul
je
jmp
add
xor
fist
or
call
adc
push
(bad)
(bad)
jmp
and
and
imul
or
or
enter
mov
into
test
daa
sahf
fnstsw
imul
leave
xchg
push
in
mov
cdq
mov
inc
xchg
addr16
repnz
imul
mov
stc
pop
sub
pop
add
inc
retf
mov
sbb
inc
inc
or
and
pop
sbb
mov
push
stc
pop
cld
sub
xchg
mov
mov
jae
scas
pop
push
jb
enter
pop
mov
inc
enter
and
xor
sbb
ror
dec
push
sub
jns
mov
aam
gs
pop
scas
push
sub
sbb
dec
mov
cmp
jb
mov
loopne
fs
fcomp
fiadd
or
add
add
adc
test
sub
pop
adc
mov
sbb
hlt
ret
movs
cli
lahf
clc
xchg
mov
mov
pop
mov
cmps
(bad)
call
(bad)
xlat
push
call
ins
(bad)
mov
outs
and
daa
sbb
jg
and
movs
cli
adc
inc
(bad)
mov
mov
ja
aas
aam
jb
push
int3
xchg
hlt
and
repnz
cmp
push
hlt
ret
hlt
dec
mov
cwde
mov
pop
mov
pushf
adc
repz
hlt
and
dec
dec
out
retf
stos
das
ficom
inc
sub
mov
retf
std
push
fisub
fdivr
out
add
hlt
pop
cmp
movs
jle
mov
hlt
lahf
push
pop
jb
movs
in
in
sti
aas
(bad)
fiadd
or
add
add
adc
push
test
xchg
fnstsw
pop
aad
cmc
mov
fnstsw
add
and
mov
(bad)
pop
cmp
or
(bad)
jle
stc
sahf
dec
test
xor
pop
ror
movs
pop
mov
pop
icebp
stos
data16
das
cmps
mov
in
mov
(bad)
mov
test
pop
pop
adc
jmp
fiadd
or
add
add
adc
mov
call
cs
mov
cs
mov
cs
mov
or
sbb
loopne
mov
(bad)
cwde
daa
lock
popa
sti
push
aas
add
lock
call
pop
add
mov
icebp
sbb
inc
outs
rcl
lea
push
push
retf
or
cmc
add
adc
adc
fdiv
xchg
pop
enter
sti
gs
mov
movs
dec
test
push
mov
rcr
lahf
call
push
xlat
in
repnz
ret
fldcw
pop
int3
mov
clc
iret
loop
inc
cmp
sti
sub
outs
inc
(bad)
sub
xchg
xor
push
sahf
stc
dec
jmp
arpl
(bad)
les
push
out
sbb
or
adc
das
stc
fisub
imul
pop
jb
adc
sbb
enter
idiv
cli
or
jp
sub
test
jb
inc
pop
xchg
pop
ins
mov
mov
retf
in
or
jo
inc
add
cmp
jg
popa
add
jne
out
rol
sub
int3
jmp
int3
xlat
test
jp
jmp
xchg
stos
int
jmp
inc
mov
jne
pop
xor
scas
mov
(bad)
mov
mov
inc
fwait
(bad)
or
mov
xor
or
xor
jae
adc
outs
lods
fsubr
popa
jne
jmp
int3
xchg
stos
mov
inc
sub
fwait
mov
jo
push
and
(bad)
and
ret
inc
js
fwait
mov
mov
outs
in
shr
pusha
aaa
in
nop
pop
mov
or
dec
jge
or
call
rcl
neg
ss
push
mov
clc
mov
sbb
mov
or
sub
mov
pop
or
xor
(bad)
xchg
pop
ror
nop
sbb
jnp
inc
scas
test
nop
arpl
fbstp
mov
fsubr
imul
xor
popa
push
dec
daa
inc
push
mov
push
int3
dec
loop
sbb
push
push
jecxz
repnz
jmp
mov
mov
fcmovb
dec
mov
or
jbe
sar
mov
cdq
mov
or
add
or
arpl
mov
pop
push
mov
out
xchg
sub
sbb
cmps
jecxz
push
(bad)
shr
mov
xor
fwait
stos
fcomp
mov
repnz
fistp
inc
mov
sub
mov
or
call
xor
jne
mov
push
mov
pop
(bad)
(bad)
sub
stc
test
ja
clc
mov
stos
cmp
or
cmp
ffreep
sbb
push
sbb
je
sbb
(bad)
les
or
sbb
in
or
jbe
pop
pusha
call
xor
xchg
cmp
cmc
call
inc
iret
(bad)
loop
test
sub
(bad)
les
imul
push
stos
mov
jmp
add
inc
xchg
push
xchg
push
sub
add
mov
scas
(bad)
pop
mov
repnz
dec
cdq
inc
outs
iret
pusha
(bad)
sbb
mov
ins
mov
add
push
jbe
fimul
mov
add
sub
xor
xor
cmp
popa
or
mov
cli
dec
aam
inc
movs
push
loope
repnz
mov
mov
add
mov
cmps
mov
icebp
sbb
js
mov
xchg
mov
sub
or
pop
je
outs
mov
cmp
xchg
(bad)
adc
enter
sub
int
(bad)
je
push
lds
jp
cmc
mov
push
jecxz
mov
mov
mov
(bad)
sbb
outs
inc
pop
pop
fisubr
neg
gs
and
jne
cwde
out
xchg
mov
jmp
fist
cmps
or
stc
xchg
test
cmp
inc
stos
push
sub
fdivr
and
add
xchg
pushf
mov
repz
add
sbb
repz
stos
sub
add
call
cmova
jl
xchg
retf
cmc
(bad)
cmc
ror
push
push
mov
mov
sahf
xchg
xchg
push
fcomp
jmp
loopne
repz
shr
add
jge
and
mov
mov
inc
mov
cld
or
gs
sbb
jle
mov
inc
mov
clc
fwait
sbb
cmps
mov
adc
gs
scas
pop
add
cld
sbb
fst
add
mov
movs
lods
jl
int3
imul
mov
ins
imul
mov
adc
es
push
fs
ja
shl
out
inc
loope
jne
aas
sahf
shr
outs
aas
mov
movs
in
xor
pop
mov
mov
mov
sbb
or
and
(bad)
retf
mov
in
cld
lea
stc
(bad)
int3
mov
sub
popa
sbb
inc
in
pop
stc
(bad)
aad
(bad)
jecxz
fs
cwde
imul
dec
pop
nop
sub
push
(bad)
dec
xchg
mov
(bad)
xchg
(bad)
cmp
adc
loop
nop
adc
outs
lahf
mov
xchg
sbb
adc
shl
mov
fsub
and
mov
rol
outs
(bad)
inc
sbb
adc
sahf
mov
jmp
xor
(bad)
int3
or
pop
cmova
test
aaa
adc
stos
pop
jge
fldenv
mov
(bad)
add
or
call
out
(bad)
out
xor
add
add
aas
adc
fild
out
xor
sahf
mov
out
lock
cdq
sub
cli
xchg
xor
dec
inc
scas
dec
pop
mov
sar
int3
sub
repnz
shr
cwde
test
mov
inc
jnp
(bad)
movs
push
and
mov
int3
dec
mov
push
push
mov
adc
cmp
stos
lahf
loopne
repnz
stos
out
dec
mov
mov
inc
or
sub
push
sbb
pop
mov
mov
mov
mov
and
sbb
or
push
jns
add
cmc
cmp
or
or
add
mov
ret
and
jmp
ja
lahf
rcr
xchg
push
icebp
fisttp
stos
dec
pop
lods
pop
les
out
aas
lods
inc
repz
ret
enter
and
(bad)
ds
jmp
lock
adc
mov
fdivr
mov
inc
inc
dec
cmps
cwde
mov
sbb
mov
jmp
cmp
mov
mov
jge
mov
cli
xor
xchg
stos
jle
outs
popa
jno
push
mov
cmp
sbb
sbb
fwait
adc
fcmovb
sbb
sub
fisttp
arpl
stos
sbb
pusha
sbb
aaa
sub
outs
ja
std
inc
lock
ror
in
push
popf
loop
sbb
out
aaa
xor
dec
add
or
dec
lods
dec
xchg
mov
xchg
(bad)
cmp
(bad)
aad
gs
jns
mov
xor
cmp
dec
push
(bad)
out
inc
sbb
sub
xchg
cmp
jns
enter
push
pop
add
push
inc
push
loope
xor
pop
dec
or
(bad)
mov
xchg
sar
cmps
outs
movs
adc
in
mov
daa
int3
jno
adc
fwait
bound
inc
test
push
bound
pop
ins
jp
cdq
adc
or
mov
cwde
ja
jmp
xlat
and
shl
dec
adc
inc
jmp
stos
ds
jae
div
not
xor
jae
xor
sbb
repnz
shl
les
call
push
dec
sbb
or
jp
push
leave
push
add
jno
test
xchg
(bad)
loopne
push
push
sahf
dec
dec
dec
or
lods
dec
push
mov
and
mov
pop
mov
ins
(bad)
loope
ret
cmp
push
mov
lds
repnz
sbb
mov
jne
inc
xlat
(bad)
pop
cli
cmc
(bad)
(bad)
repnz
clc
adc
sbb
xchg
dec
xchg
out
icebp
add
sub
adc
inc
cmp
adc
std
cdq
xchg
movups
psraw
mov
test
adc
cmp
shr
sbb
xchg
arpl
push
and
mov
and
int3
cmps
adc
movs
xchg
xchg
dec
dec
pop
movs
and
test
xchg
dec
jmp
pop
mov
add
add
or
or
(bad)
inc
add
add
add
gs
xor
add
or
dec
outs
and
je
jae
cs
add
add
inc
add
xlat
or
adc
add
add
mov
add
popa
outs
jae
push
gs
inc
jmp
add
push
add
popa
addr16
sbb
add
add
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
lahf
cmp
add
dec
dec
add
data16
arpl
mov
pop
pop
add
push
add
dec
dec
add
pushf
pushf
add
dec
add
mov
add
mov
pop
add
cmps
cmps
add
inc
add
test
lods
add
scas
scas
add
jb
add
push
add
mov
add
mov
(bad)
mov
add
test
add
mov
mov
add
call
(bad)
mov
mov
add
test
add
(bad)
loope
scas
add
cdq
cdq
add
mov
add
scas
scas
add
leave
leave
add
mov
pop
add
retf
retf
add
pusha
add
(bad)
les
in
mov
add
scas
scas
add
mov
mov
add
jno
add
mov
add
mov
add
mov
add
mov
add
lods
lods
add
cmps
cmps
add
mov
pop
dec
dec
add
jbe
add
push
add
mov
movs
add
mov
add
data16
dec
add
rol
mov
jg
add
pop
add
imul
xchg
add
fadd
rol
mov
push
add
jg
add
daa
daa
add
push
dec
add
and
jge
jae
dec
inc
inc
add
popa
popa
add
dec
add
dec
add
jno
ins
data16
cmps
cmps
add
inc
add
add
jo
push
in
loope
add
jno
sar
add
jo
cmp
fwait
xchg
xchg
add
es
js
imul
movs
mov
mov
mov
xchg
inc
push
inc
add
movs
pop
add
std
std
add
cli
cli
add
clc
clc
add
div
add
hlt
hlt
add
repz
icebp
icebp
add
out
out
add
in
in
add
jmp
out
out
in
in
jecxz
jecxz
loope
loope
(bad)
fiadd
(bad)
fadd
fcmovnu
fild
(bad)
fld
xlat
xlat
xlat
add
aam
add
rcl
add
rcl
add
iret
iret
add
int
add
retf
enter
mov
add
(bad)
les
ret
ret
ret
add
rol
mov
mov
mov
add
mov
mov
mov
scas
scas
scas
add
stos
add
movs
movs
add
mov
lahf
add
cwde
cwde
add
xchg
xchg
add
mov
add
mov
add
add
add
jp
jp
jns
jns
jne
jne
jae
jae
jno
jno
outs
outs
outs
add
imul
push
data16
add
arpl
pop
pop
pop
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
aaa
aaa
add
sub
add
adc
add
push
push
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
(bad)
loope
out
fxch
ret
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
iret
(bad)
mov
out
aad
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
(bad)
fcmovb
(bad)
(bad)
mov
dec
pop
out
fmul
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
(bad)
mov
mov
bound
push
gs
dec
jae
fst
ret
in
in
in
in
in
in
leave
xlat
leave
test
stos
int3
rol
imul
jns
fmul
in
in
in
in
rcl
mov
test
les
in
in
call
data16
mov
mov
mov
mov
int
mov
mov
in
in
in
jmp
in
mov
stos
scas
mov
mov
scas
mov
mov
mov
push
pop
pop
jb
inc
ds
mov
mov
mov
movs
cdq
call
aad
mov
pop
push
mov
ret
mov
mov
test
lods
stos
test
cmps
mov
xchg
pusha
(bad)
push
in
mov
cwde
xchg
xchg
xchg
cwde
mov
or
ror
mov
mov
ja
fadd
mov
xchg
xchg
xchg
xchg
xchg
scas
or
mov
cmps
mov
rol
sar
cdq
xchg
xchg
xchg
xchg
xchg
lods
syscall
add
fwait
mov
jl
mov
mov
mov
in
in
in
in
mov
xchg
stos
adc
xor
adc
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
add
sub
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
adc
add
fwait
nop
xchg
sub
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
push
add
sbb
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
pop
add
xor
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
sbb
add
stos
mov
add
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
push
add
or
jbe
sbb
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
and
add
or
add
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
and
add
inc
adc
or
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
and
mov
test
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
sub
lods
mov
mov
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
sub
mov
rol
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
xor
mov
mov
add
in
in
in
in
in
in
in
in
in
in
in
in
in
test
sahf
popf
fwait
movs
movs
lods
cmps
rol
in
in
in
in
in
in
in
in
in
in
in
in
in
in
fs
lahf
lods
fwait
xchg
xchg
xchg
cwde
xchg
rol
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
imul
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
clc
pop
(bad)
inc
add
inc
add
add
(bad)
add
add
add
add
add
add
add
aas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
(bad)
inc
inc
pop
adc
push
loopne
loopne
inc
add
int3
xor
or
(bad)
xchg
mov
xchg
adc
loop
jnp
mov
je
add
inc
lods
jae
mov
inc
cmc
sbb
dec
lods
xor
or
stos
add
xchg
mov
pop
add
add
add
ins
jo
outs
jb
add
inc
jne
fs
and
push
jb
addr16
outs
and
jo
gs
and
add
add
inc
add
ret
pop
add
ins
je
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
inc
clc
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
push
into
inc
mov
and
cwde
icebp
add
xor
mov
jbe
inc
and
ins
mov
movs
dec
fimul
xor
cmp
sub
sahf
out
push
rcr
jbe
ins
cmp
sub
xlat
lahf
not
push
in
mov
dec
and
and
jp
add
int3
mov
not
push
test
cwde
std
pop
rcl
rcl
test
push
jmp
pop
xor
mov
ds
pop
inc
fist
push
jno
arpl
push
jnp
sub
dec
shl
xor
(bad)
xchg
adc
cmps
jmp
jo
repnz
xor
mov
mov
adc
mov
cmp
and
adc
xor
push
mov
inc
cmps
movs
(bad)
xchg
jge
in
pusha
outs
mov
cmp
sbb
push
test
call
out
lods
hlt
int
out
repnz
cs
(bad)
es
sbb
dec
add
sar
inc
movs
shr
lahf
ja
cs
pop
fistp
loope
and
ja
hlt
mov
inc
mov
clc
push
dec
dec
std
outs
repz
xchg
iret
sub
nop
dec
sbb
inc
aas
xchg
add
push
xchg
ins
push
xchg
mov
add
cwde
cmps
push
inc
or
sbb
lock
adc
push
push
inc
jbe
push
dec
adc
jecxz
and
push
xchg
pop
mov
int
ret
push
call
in
jns
adc
add
pusha
jbe
popf
inc
add
push
hlt
bound
xchg
push
rol
mov
mov
rcl
rol
dec
inc
dec
mov
sub
mov
pop
arpl
push
inc
or
movs
mov
sub
shl
mov
xchg
xchg
jmp
cmps
push
inc
or
add
sub
mov
fdivr
clc
push
test
push
repz
mov
mov
push
test
push
arpl
mov
jle
lds
and
mov
inc
ds
jmp
ds
sti
push
iret
movs
adc
xor
shl
mov
xor
(bad)
ror
mov
add
hlt
mov
add
hlt
mov
add
mul
mov
fbld
dec
rcr
fcomi
mov
sahf
ret
mov
je
jno
xchg
mov
iret
movs
add
sbb
add
sub
adc
cmp
ror
inc
call
cmp
mov
nop
sbb
cli
push
cmp
jg
cmc
xor
sbb
xlat
iret
cmp
lods
and
call
jecxz
int3
aam
pop
push
pop
push
push
dec
lahf
sbb
cld
int
ficom
mov
mov
test
add
int
add
push
lahf
push
daa
aas
xor
jl
std
dec
imul
xor
(bad)
ror
(bad)
leave
aaa
mov
cmp
fidivr
rol
inc
shr
jle
cmp
pop
cmp
or
fcom
ja
fcomp
push
and
add
stos
mov
xchg
push
sbb
dec
pop
ror
cli
retf
rol
jge
and
cmp
imul
add
mov
adc
call
mov
popa
and
fild
and
and
dec
rcl
and
and
cld
and
pop
pop
clc
adc
scas
add
(bad)
stos
idiv
mov
imul
adc
jo
lock
mov
sti
(bad)
cmp
jl
jnp
mov
mov
(bad)
in
xchg
cs
jb
out
mov
shl
loope
pop
inc
ret
add
std
mov
seta
jns
pop
xchg
popf
(bad)
lahf
jecxz
jno
xor
mov
les
pop
int
pop
push
gs
cmp
stc
shl
(bad)
retf
(bad)
xor
mov
into
mov
(bad)
adc
(bad)
fcmovnb
ja
pop
inc
jno
xor
sub
test
jo
sbb
shl
mov
pop
jl
icebp
add
int
test
popf
adc
inc
lds
cmp
pop
out
dec
loop
cld
xor
hlt
xchg
test
test
sbb
call
fmul
repnz
add
call
lods
js
pop
mov
shl
mov
mov
xor
vunpckhps
fsubrp
sahf
daa
mov
push
(bad)
and
add
pop
cmp
and
enter
jo
aad
and
arpl
or
cmps
mov
scas
fs
and
bound
std
ror
push
idiv
inc
lock
(bad)
fisub
lock
scas
xchg
lock
(bad)
(bad)
dec
sub
mov
jg
mov
push
push
ja
jne
imul
mov
rol
in
mov
cmp
shl
out
cmp
(bad)
cmp
add
retf
push
iret
mov
lods
aas
loope
shr
push
push
push
mov
jns
xchg
stc
bound
adc
sbb
and
(bad)
js
loope
mov
cmp
lods
jmp
push
mov
jnp
not
lods
mov
(bad)
arpl
(bad)
data16
add
imul
iret
push
mov
js
jns
cs
movs
dec
ds
sbb
pop
pop
jb
push
inc
faddp
enter
clc
mov
jle
and
mov
mov
arpl
jl
or
push
test
stc
jb
mov
(bad)
push
jmp
pop
mov
inc
sub
or
mov
adc
sub
jb
add
(bad)
es
jmp
movs
sahf
fimul
pop
loop
sub
cs
add
ret
and
jge
rol
jp
mov
jbe
cmps
es
arpl
call
dec
or
xchg
(bad)
ret
add
inc
sti
pop
(bad)
sbb
ret
lahf
fsub
push
fldenv
in
fimul
mov
out
jno
clc
scas
xchg
loopne
in
out
and
cmp
cld
mov
dec
and
cwde
int3
retf
repnz
sbb
sti
mov
sub
mov
(bad)
cmc
mov
lds
(bad)
ficom
ret
and
or
or
leave
or
xchg
outs
cld
aaa
lock
lock
test
dec
jnp
mov
int
mov
inc
stos
movs
push
xor
fs
add
scas
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
nop
cmc
adc
add
je
sub
out
pusha
jbe
push
or
div
clc
mov
mov
in
dec
ret
mov
std
pop
sbb
aam
arpl
mov
pop
out
cmps
mov
scas
pushf
lods
xor
(bad)
mov
jge
and
sbb
lods
ret
call
neg
cmp
sbb
mov
inc
mov
and
fisubr
inc
ins
or
mov
fnsave
imul
jns
outs
mov
fcomp
sbb
cmp
sahf
aas
jl
pushf
in
arpl
adc
push
lods
pop
call
aad
jmp
clc
clc
outs
test
cmp
mov
(bad)
jl
loope
mov
int
sub
bound
xchg
mov
sbb
adc
xor
pushf
addr16
sbb
and
jl
movs
scas
movs
mov
jb
aam
sub
test
pusha
or
cmp
xchg
(bad)
mov
es
mov
dec
pop
sbb
outs
jp
lods
pop
add
call
lahf
adc
or
and
xor
mov
pop
in
jb
jmp
mov
cmc
sub
sbb
cmp
lahf
addr16
mov
jb
repz
dec
scas
lahf
pop
mov
inc
jle
or
push
in
mov
imul
imul
aaa
cmp
cmp
mov
adc
xchg
clc
(bad)
xchg
mov
fisubr
push
xchg
xor
push
sbb
into
sbb
cmp
mov
sti
fwait
sti
mov
call
sub
cmp
add
stos
push
sbb
int
out
hlt
dec
iret
mov
inc
sub
loopne
inc
sbb
rol
mov
iret
mov
addr16
or
inc
les
ret
(bad)
pop
test
fistp
sbb
popa
or
fld
retf
shl
jmp
les
test
xlat
pop
or
into
fucom
xchg
sub
in
fstp
ja
cmp
add
push
out
sub
cli
out
jle
clc
push
retf
push
nop
mov
rcl
aaa
add
in
fs
inc
xchg
ins
xchg
pop
out
adc
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
adc
(bad)
pop
aam
and
pop
out
(bad)
cmp
aam
jg
sub
add
push
(bad)
sbb
repz
jmp
stc
pop
(bad)
sub
inc
ins
cmc
stos
sub
ss
imul
sbb
or
jecxz
inc
jl
inc
adc
arpl
popa
adc
pop
icebp
scas
inc
pop
xchg
mov
imul
nop
xchg
mov
jge
pop
test
test
retf
lahf
xchg
call
stos
fisttp
test
xlat
mov
retf
cs
and
and
stos
std
mov
pop
jecxz
(bad)
jbe
jae
mov
arpl
jecxz
pop
loop
xor
das
stc
or
loope
and
hlt
add
push
(bad)
out
mov
cli
inc
jo
loope
xchg
int3
scas
mov
lods
ja
test
ins
loop
or
mov
inc
lds
push
xchg
pop
dec
call
into
and
sbb
cmp
icebp
mov
addr16
mov
sbb
push
inc
sub
pop
test
arpl
cmp
aas
test
adc
cld
jns
jne
(bad)
pop
fucomip
jmp
lods
ja
mov
imul
pop
jae
sbb
mov
jecxz
jnp
inc
mov
lock
imul
mov
push
in
ins
in
mov
pop
les
stos
inc
loope
inc
test
pop
ins
(bad)
(bad)
rcr
std
fwait
daa
xchg
in
ds
xor
scas
mov
lock
fsubr
jp
xchg
xchg
cs
test
jo
mov
jmp
lock
jmp
inc
jl
inc
adc
pop
cld
sti
fidivr
or
add
push
in
cmps
fdivr
ds
scas
push
mov
imul
mov
mov
xchg
into
leave
cmps
dec
into
loope
mov
ss
or
cmps
xor
lds
inc
(bad)
lahf
push
(bad)
imul
in
or
in
out
cmp
mov
jae
cmp
(bad)
add
(bad)
xchg
inc
neg
icebp
push
jg
jg
inc
iret
mov
cld
push
aas
gs
stc
inc
fild
loope
xchg
lea
cs
loope
outs
ret
fs
ror
cmps
dec
and
push
and
arpl
add
jmp
rcr
repz
clc
pop
(bad)
sub
inc
neg
icebp
push
jnp
test
push
out
dec
pop
xchg
js
dec
cmp
add
inc
mov
mov
add
jg
stos
dec
xchg
inc
rcr
lahf
jae
mov
sub
retf
mov
cld
push
pop
lock
jmp
inc
jl
inc
adc
cmp
inc
jb
lock
jmp
inc
jl
inc
adc
addr16
sti
fidivr
or
add
push
in
push
movq
(bad)
rcr
daa
cli
pop
cld
sti
fidivr
or
add
push
jg
jg
jg
mov
cld
push
push
retf
not
out
jne
push
and
cdq
inc
idiv
ret
icebp
push
jg
jg
jg
mov
cld
push
aas
gs
mov
push
into
mov
in
add
aas
sar
out
out
(bad)
clc
pop
(bad)
sub
(bad)
jge
aas
out
test
add
test
fcmovnbe
out
jne
push
and
cdq
inc
neg
icebp
push
jg
jg
jg
mov
cld
push
push
(bad)
cmps
pusha
div
sti
popf
outs
adc
pop
xchg
cld
daa
cli
addr16
sti
(bad)
add
or
add
push
inc
or
xchg
inc
neg
icebp
push
jnp
popf
sbb
out
jne
push
daa
inc
or
xchg
inc
neg
icebp
push
lahf
lock
jmp
inc
jl
inc
adc
cmp
inc
jb
lock
jmp
inc
jl
inc
adc
addr16
sti
(bad)
add
or
add
push
in
push
movq
(bad)
rcr
daa
cli
addr16
sti
(bad)
add
sub
add
push
inc
or
xchg
inc
neg
icebp
push
jnp
popf
sbb
out
jne
push
sub
add
(bad)
xchg
inc
neg
icebp
push
lahf
lock
iret
stc
idiv
inc
mov
outs
dec
mov
cld
daa
cli
addr16
sti
(bad)
add
or
add
push
inc
or
dec
inc
lahf
jnp
sti
loope
clc
stos
pop
(bad)
cmps
pusha
div
sti
popf
ins
adc
cmps
jg
mov
cld
push
pop
lock
jmp
inc
jl
inc
adc
cmp
inc
jb
lock
jmp
inc
jl
inc
adc
(bad)
xchg
inc
neg
icebp
push
jnp
popf
sbb
out
jne
push
daa
inc
or
xchg
inc
neg
icebp
push
mov
repz
jns
add
add
cmp
adc
movs
inc
iret
mov
cld
push
aaa
(bad)
adc
xor
jge
aas
out
test
add
test
xor
jae
mov
hlt
iret
stc
idiv
add
cdq
inc
neg
icebp
push
jnp
popf
sbb
mov
cld
sub
xor
jge
inc
out
test
add
test
add
lahf
jnp
sti
loope
clc
stos
cmp
jmp
xchg
inc
test
add
lahf
jnp
sti
loope
clc
stos
aas
loope
sar
out
repz
clc
pop
(bad)
sub
push
xchg
inc
test
add
lahf
jnp
sti
loope
clc
stos
aas
loope
sar
out
repz
clc
pop
(bad)
sub
mov
popf
ins
adc
rcl
add
fdivp
(bad)
clc
pop
(bad)
sub
(bad)
jge
aas
out
test
add
test
fcmovnbe
out
jne
mov
aas
sar
out
repz
clc
pop
(bad)
sub
stc
idiv
add
jnp
jge
mov
clc
dec
mov
stc
idiv
add
xor
jge
aas
out
test
add
test
xor
fsubr
mov
imul
inc
lahf
jnp
sti
loope
clc
stos
aas
loope
sar
out
repz
clc
pop
(bad)
sub
jp
into
mov
clc
dec
mov
stc
idiv
add
xor
jge
aas
out
test
add
test
xor
fsubr
mov
call
out
repz
clc
pop
(bad)
sub
stc
idiv
add
push
ficomp
das
clc
dec
mov
stc
idiv
add
test
sti
loope
clc
stos
jle
cmps
pusha
not
out
jne
mov
jnp
inc
iret
mov
cld
push
pop
lock
jmp
inc
jl
inc
adc
push
ficomp
scas
dec
(bad)
adc
aaa
(bad)
jge
aas
out
test
add
test
add
jnp
sti
loope
clc
stos
cmp
jmp
mov
dec
je
stc
idiv
add
aaa
(bad)
jge
aas
out
test
add
test
xor
fsubr
sub
aaa
(bad)
jge
aas
out
test
add
test
add
jnp
sti
loope
clc
stos
jle
cmps
pusha
div
sti
popf
jcxz
jecxz
lahf
cld
daa
mov
jg
or
add
push
inc
or
fwait
inc
neg
icebp
push
mov
jmp
mov
inc
loope
sar
fdivp
(bad)
clc
pop
(bad)
sub
stc
idiv
add
push
ficomp
cmp
scas
push
(bad)
adc
aaa
(bad)
jge
aas
out
test
add
test
cmp
repz
clc
pop
(bad)
sub
push
into
lods
adc
dec
iret
mov
arpl
mov
jg
or
add
push
inc
or
xchg
inc
neg
icebp
push
jnp
lahf
retf
sbb
inc
loope
rol
cld
mov
inc
lds
add
neg
(bad)
clc
pop
(bad)
sub
jp
into
test
jecxz
push
sub
add
(bad)
xchg
inc
test
sti
pop
mov
jae
sti
shl
adc
mov
daa
mov
mul
es
(bad)
jne
ins
stos
or
syscall
or
cmp
xchg
les
int3
mov
mov
scas
sub
add
mov
adc
lock
and
call
push
scas
mov
stos
rcl
cmp
dec
dec
adc
adc
imul
popa
xchg
mov
int3
leave
and
inc
shr
into
dec
jb
mov
loope
mov
imul
and
pop
bound
pop
retf
dec
retf
mov
(bad)
loope
mov
popf
call
xlat
arpl
addr16
jne
call
and
aaa
jg
into
pop
cmp
add
bound
add
xchg
xor
jbe
ins
add
mov
fld
iret
int3
and
in
inc
jmp
push
lds
out
xchg
mov
dec
scas
in
retf
pop
cld
and
dec
add
mov
nop
cmps
xchg
jne
sub
push
test
movs
jecxz
leave
aas
into
push
arpl
test
mov
and
dec
daa
jmp
rcr
aaa
imul
fst
sbb
adc
int3
mov
push
jl
mov
xor
jp
sub
(bad)
jp
sbb
mov
pop
jb
and
adc
jp
jmp
mov
lea
int
cmps
dec
repnz
and
out
test
(bad)
push
outs
jmp
outs
addr16
ins
dec
cmp
das
xchg
out
outs
in
fstp
mov
and
loopne
lods
sub
ret
stos
out
mov
rcr
std
fistp
imul
or
pmuludq
mov
shl
push
mul
es
mov
lea
and
shl
imul
xor
xor
pushf
into
xchg
inc
push
mov
fimul
adc
xchg
sahf
mov
push
pop
leave
xchg
leave
repz
fisttp
pop
inc
inc
xchg
(bad)
xor
arpl
and
adc
je
popa
aas
frndint
fucomip
xor
(bad)
fidiv
pushf
inc
divps
stos
jb
cmps
retf
or
fucomp
fild
aad
push
(bad)
add
pushf
shr
div
sub
fsub
fstp
aaa
fs
je
pop
dec
add
in
jmp
jno
push
(bad)
les
arpl
mov
fld
mov
dec
loop
fimul
push
leave
and
addr16
xor
jge
test
dec
ss
ins
adc
stc
or
sbb
(bad)
xchg
mov
repnz
mov
int3
mov
push
fcompp
aaa
int3
inc
jne
add
jecxz
retf
imul
mov
add
jo
mov
jbe
sub
out
(bad)
sbb
xchg
push
or
mov
mov
push
cmp
jb
rcr
jge
jmp
call
sahf
imul
xor
jl
fisttp
jmp
inc
iret
stc
int
imul
into
jg
outs
push
mov
fwait
mov
pushf
in
cmp
dec
outs
ds
aas
xchg
aas
in
xchg
jbe
jnp
test
add
sbb
into
jg
fsub
xor
aas
das
int
int3
aaa
jle
shr
(bad)
jecxz
or
and
cmps
mov
pop
iret
jae
jns
or
pop
mov
xor
mov
and
test
stc
and
adc
or
ret
sahf
pushf
aad
stc
lods
ror
loop
jnp
ins
and
push
mov
cld
inc
xchg
cld
pop
cmc
xchg
les
sub
inc
dec
jne
xor
shl
xor
sbb
jns
sbb
mov
jmp
fld
psubusw
jle
lock
(bad)
out
xchg
aas
pop
push
popf
and
mov
xchg
fidivr
push
inc
xchg
and
pop
cmp
add
jo
cmp
or
pop
int3
sbb
aaa
enter
push
stc
add
cmps
xchg
sub
adc
adc
cmp
inc
dec
sbb
mov
out
cwde
jno
push
rcr
sub
cmps
mov
mov
in
das
pop
sub
xor
shl
jae
sahf
ficomp
mov
inc
imul
jno
cwde
clc
(bad)
out
dec
int3
mov
sahf
mov
xor
mov
xchg
push
mov
sub
ins
sbb
cmp
sub
cmp
lds
jle
scas
inc
adc
mov
leave
(bad)
xlat
sub
dec
and
in
shr
mov
pop
mov
xchg
adc
sub
in
pop
popa
jns
pop
out
xor
add
(bad)
cdq
cmps
popf
xor
mov
test
push
mov
jge
enter
int
sahf
imul
mov
jnp
cmp
pop
mov
inc
mov
cmps
dec
sub
not
fbstp
mov
int3
and
jbe
adc
scas
fwait
retf
sub
in
push
dec
mov
imul
rol
or
jge
push
fdivr
pop
jae
int
mov
(bad)
(bad)
aaa
into
(bad)
sub
jne
lods
sbb
rol
dec
xchg
mov
aaa
jl
fptan
out
pushf
cli
aad
ja
jno
call
dec
cs
in
dec
test
inc
jmp
mov
jne
push
jmp
retf
dec
pop
(bad)
out
adc
xlat
jno
and
lahf
jmp
xchg
dec
push
lock
(bad)
add
xchg
iret
mov
aas
popa
push
add
ins
adc
ret
sbb
jmp
out
pusha
lds
adc
mov
and
fbld
(bad)
push
rcr
ds
sub
fdiv
and
test
pop
mov
mov
iret
out
das
(bad)
stc
jle
jmp
je
fiadd
dec
sub
call
cdq
(bad)
hlt
das
sub
aas
std
lahf
xor
pop
inc
mov
lds
test
repz
loop
cmps
ds
dec
loopne
aam
pop
dec
neg
mov
std
(bad)
cdq
in
fdivr
div
shl
mov
sub
push
iret
dec
cli
addr16
lods
push
dec
dec
dec
mov
dec
sub
mov
sub
adc
mov
pop
sub
adc
add
push
add
inc
adc
sub
inc
add
imul
adc
adc
dec
ret
mov
adc
add
push
inc
push
add
adc
inc
sub
mov
mov
mov
mov
cmp
pop
(bad)
movs
arpl
inc
xchg
jg
loope
ret
dec
sub
adc
retf
arpl
cmp
movs
jg
ss
(bad)
cld
das
clc
push
xor
sub
ss
(bad)
cld
das
clc
push
cli
out
nop
mov
push
pop
ret
std
mov
(bad)
cld
das
clc
push
std
mov
(bad)
cld
das
clc
push
cmc
fbld
cli
mov
sub
jg
xor
cli
push
fcos
add
test
add
push
xchg
(bad)
cld
das
clc
push
cmc
iret
and
idiv
movs
adc
push
std
add
out
ret
test
fcomp
inc
out
ret
test
pop
repnz
mov
jmp
dec
xchg
std
clc
pop
lock
add
out
ret
test
scas
(bad)
stc
inc
cmc
dec
ja
xchg
fdivp
out
ja
scas
xchg
jns
push
cmp
pushf
jge
sbb
pop
in
dec
sub
xor
sub
xor
jg
jg
xchg
jae
mov
sti
xlat
mov
popa
jmp
inc
mov
fdivr
jg
sbb
add
cld
sub
mov
xchg
out
js
cmp
sbb
sti
adc
add
pop
lock
cmp
xchg
inc
sbb
std
clc
pop
lock
cmc
(bad)
stos
dec
mov
in
and
sti
jmp
jg
(bad)
in
dec
sub
xor
repnz
xchg
out
js
pop
cmp
mov
xchg
inc
inc
fstp
sti
lock
movs
jg
ss
(bad)
cld
das
clc
push
cmc
aad
pop
ds
adc
push
jae
fwait
inc
jle
cld
sub
xor
cli
push
pop
inc
fild
ss
add
outs
mov
sub
sahf
cmc
in
pop
fcomp
inc
out
ret
test
fcomp
inc
out
ret
test
pop
repnz
mov
xchg
jno
jmp
ret
sub
shr
out
ret
test
inc
sar
add
cld
sub
in
xchg
ds
pop
(bad)
mov
sub
xor
inc
(bad)
popa
mov
mul
jg
(bad)
scas
scas
in
stos
dec
mov
inc
bound
hlt
or
inc
mov
inc
ror
enter
out
ret
test
pop
pop
push
jge
idiv
mov
pop
(bad)
movs
jg
ss
(bad)
cld
das
clc
push
std
mov
(bad)
cld
das
clc
push
cmc
fbld
cli
fwait
out
js
ins
jbe
stc
sar
push
inc
cwde
(bad)
push
in
ficomp
mov
(bad)
jno
mov
out
in
dec
sub
xor
sub
xor
cld
mov
test
or
cmp
jno
mov
dec
lds
shl
mov
inc
jle
cld
sub
push
xchg
jg
sbb
add
cld
sub
in
xchg
push
push
pop
iret
pop
mov
xchg
cmovnp
add
pop
lock
cmps
fcos
add
test
add
ds
out
js
pusha
cmp
xchg
jg
jmp
jg
xor
cli
push
fidivr
test
add
aas
mov
scas
cli
push
fidivr
test
add
ds
fdiv
out
fdivr
sub
mov
add
cld
sub
ret
sar
add
cld
sub
loop
pop
push
xchg
jae
test
mov
in
aas
fcomp
aas
out
ret
test
fcomp
inc
out
ret
test
pop
pop
xchg
dec
ja
jp
jmp
ret
std
mov
(bad)
cld
das
clc
push
std
mov
(bad)
cld
das
clc
push
cmc
retf
ins
sub
jge
push
mov
dec
inc
mov
pop
lock
add
pop
lock
mov
call
(bad)
push
pop
(bad)
movs
jg
ss
(bad)
cld
das
clc
push
jg
imul
add
mov
out
push
pop
ret
std
mov
(bad)
cld
das
clc
push
std
mov
(bad)
cld
das
clc
push
cmc
out
and
xchg
out
js
adc
dec
std
add
add
ret
test
fcomp
inc
out
ret
test
scas
stc
or
dec
mov
inc
bound
hlt
or
inc
mov
bound
hlt
or
inc
mov
mov
iret
push
mov
dec
inc
mov
pop
lock
add
pop
lock
cmc
fbld
cli
xchg
out
js
adc
dec
std
add
add
ret
test
fcomp
inc
out
ret
test
scas
stc
pop
aam
jae
test
popa
inc
sar
sbb
add
cld
sub
(bad)
sar
sbb
add
cld
sub
enter
sahf
cmp
es
inc
inc
retf
aas
sti
lock
xchg
inc
inc
retf
aas
sti
lock
inc
cli
fwait
out
js
adc
dec
std
add
add
ret
test
fcomp
inc
out
ret
test
scas
stc
or
dec
mov
inc
bound
hlt
or
inc
mov
bound
hlt
or
inc
mov
mov
out
push
pop
ret
std
mov
(bad)
cld
das
clc
push
std
mov
(bad)
cld
das
clc
push
cmc
fbld
cli
fwait
out
js
adc
dec
std
add
add
ret
test
fcomp
inc
out
ret
test
scas
stc
or
dec
mov
inc
bound
hlt
or
inc
mov
bound
hlt
or
inc
mov
ja
imul
sahf
cmp
es
inc
inc
retf
aas
sti
lock
xchg
inc
inc
retf
aas
sti
lock
sub
mov
inc
bound
hlt
or
inc
mov
bound
hlt
or
inc
mov
ja
cmps
sti
sahf
cmp
es
inc
inc
retf
aas
sti
lock
xchg
inc
inc
retf
aas
sti
lock
sub
mov
inc
bound
hlt
or
inc
mov
bound
hlt
or
inc
mov
ja
cmps
sti
sahf
cmp
es
inc
inc
retf
aas
sti
lock
xchg
inc
inc
retf
aas
sti
lock
sub
mov
inc
bound
hlt
or
inc
mov
bound
hlt
or
inc
mov
ja
cmps
sti
sahf
cmp
es
inc
inc
retf
aas
sti
lock
xchg
inc
inc
retf
aas
sti
lock
sub
mov
inc
bound
hlt
or
inc
mov
bound
hlt
or
inc
mov
ja
cmps
sti
sahf
cmp
es
inc
inc
fstp
sti
lock
movs
inc
shl
iret
(bad)
cld
das
clc
push
cmc
fbld
cli
fwait
out
js
mov
dec
inc
mov
pop
lock
jnp
sbb
dec
xlat
xor
dec
sbb
popf
mov
sub
mov
mov
add
dec
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
xchg
mov
inc
add
adc
inc
or
adc
xchg
mov
inc
add
adc
inc
add
call
movs
mov
xchg
mov
dec
rcl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
xchg
nop
je
cmps
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
xchg
add
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
sbb
add
dec
dec
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
push
mov
mov
call
mov
sub
mov
add
sub
sub
or
push
add
xchg
add
and
push
inc
or
adc
mov
push
inc
or
adc
mov
push
inc
or
adc
mov
push
inc
or
adc
mov
push
inc
or
adc
mov
push
inc
or
add
inc
and
je
movs
sbb
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
sbb
add
push
jg
cmps
mov
pop
addr16
call
fcmovbe
jbe
retf
mov
inc
cld
test
sbb
cmc
mov
cmp
call
dec
scas
sbb
int3
shl
xor
dec
iret
cdq
fcomp
ds
mov
pop
xchg
or
test
aad
mov
and
cmc
cmc
imul
loop
out
fcmovne
mov
xchg
loop
jge
jmp
int
stos
add
adc
lds
aas
icebp
pop
aad
cs
in
adc
and
jnp
movs
xor
xchg
push
mov
arpl
ins
mov
mov
jmp
add
cmps
popf
push
adc
adc
cld
imul
mov
scas
and
pop
fdivp
dec
and
pop
add
mov
xchg
adc
lock
int
push
icebp
sbb
std
mov
xchg
dec
mov
cmp
push
mov
xor
ja
or
pop
repz
xchg
sub
pop
out
dec
stc
psllw
add
cld
xchg
xlat
xor
rcr
dec
imul
adc
and
sub
cmc
hlt
xor
sysenter
dec
xor
mov
pushf
pop
lds
icebp
nop
lods
inc
mul
jne
fist
add
into
pop
enter
(bad)
in
inc
out
fist
out
jne
and
jg
fstp
push
jo
loop
and
xor
cmp
and
dec
ror
jg
sbb
lahf
push
leave
sbb
push
in
pushw
movs
rcl
popf
jp
jne
outs
enter
cld
and
frstor
pop
sub
dec
gs
scas
cmp
les
ret
(bad)
pop
int
add
cmps
inc
ret
(bad)
cmc
jae
inc
cld
imul
mov
mov
cmps
icebp
push
movs
mov
fwait
cmp
mov
(bad)
(bad)
js
jg
sub
add
push
xor
jp
stc
jg
cmc
cdq
(bad)
stos
mov
xor
int
sbb
cmp
sbb
(bad)
clc
dec
in
inc
out
(bad)
std
lock
mul
test
(bad)
cmps
ja
lock
fnstcw
sbb
stos
aas
loope
mov
add
inc
icebp
push
ret
jecxz
mov
cmc
mov
(bad)
cld
es
repz
out
stc
pop
(bad)
sub
out
(bad)
std
lock
mul
mov
inc
or
inc
mov
mov
stc
jecxz
inc
jl
inc
adc
(bad)
mov
pop
test
pop
cdq
fdivr
add
addr16
cmp
aas
out
xchg
inc
loop
inc
test
iret
(bad)
js
jg
sub
add
push
or
fld
aam
out
adc
aas
stc
loope
inc
jl
inc
adc
jg
ret
stc
pop
(bad)
sub
lahf
(bad)
out
pop
cdq
fdivr
imul
test
jg
imul
test
ret
(bad)
je
je
outs
popa
cmc
test
xchg
jg
out
jae
add
add
jg
out
jae
add
add
out
(bad)
out
pop
cdq
fdivr
imul
test
jg
imul
test
ret
(bad)
je
je
outs
popa
cmc
test
mov
repz
jae
add
add
jg
out
jae
add
add
out
jmp
shrd
loope
mov
add
jg
stos
aas
loope
mov
add
jg
stos
loope
add
aas
cmp
test
pop
cdq
fdivr
imul
idiv
test
jg
imul
idiv
test
ret
(bad)
jge
cld
jmp
aam
jecxz
adc
stc
idiv
inc
mov
stc
idiv
inc
mov
cmps
cmc
retf
test
mov
repz
jae
add
add
pop
repz
jae
add
add
out
xlat
sub
(bad)
cmps
ja
lock
repnz
call
repnz
add
test
pop
cdq
fdivr
imul
idiv
test
jg
imul
idiv
test
ret
(bad)
je
je
jb
jge
addr16
add
lods
xchg
cld
sti
fdivr
add
sub
add
push
jl
arpl
add
idiv
test
ret
(bad)
je
je
mov
out
aas
loope
mov
int3
pop
and
stos
inc
lds
test
sar
mov
arpl
(bad)
call
jmp
rol
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jp
popa
(bad)
cmps
mov
icebp
mov
xor
aaa
sbb
scas
pop
push
and
enter
jns
aam
dec
xchg
and
cli
push
sbb
mov
int
adc
mov
mov
test
ss
outs
add
jmp
cmp
jp
inc
dec
inc
(bad)
(bad)
outs
mov
lods
cli
pop
push
dec
popf
sub
shl
fs
sbb
(bad)
jae
sub
xchg
pop
push
inc
pop
aad
sbb
mov
xchg
xor
xchg
mov
lea
mov
shr
neg
push
outs
xchg
(bad)
repnz
stc
(bad)
ss
in
push
enter
jmp
in
mov
add
daa
inc
imul
and
aam
inc
xchg
xor
test
add
mov
bound
outs
inc
mov
mov
lea
outs
popa
add
lods
sbb
inc
xor
push
xor
jns
jecxz
es
stos
addr16
jg
mov
mov
cmp
or
jns
and
mov
or
cmp
mov
sti
jo
ds
jg
add
ret
jns
stc
jne
inc
sar
clc
call
jg
loopne
outs
int
sahf
jmp
call
arpl
push
lahf
mov
push
lahf
add
inc
lahf
ror
idiv
add
out
mov
push
jne
mov
ins
in
add
imul
dec
inc
(bad)
shl
cli
adc
idiv
jecxz
cmp
imul
(bad)
(bad)
mov
lahf
or
adc
and
js
fidiv
xor
sbb
pop
mov
fisttp
into
std
es
dec
ss
push
mov
inc
adc
out
jecxz
cmp
cli
fsubp
(bad)
mov
imul
(bad)
es
cmp
cmps
cli
adc
pop
sub
xchg
movs
mov
mov
sub
push
add
push
aas
cmovp
in
jge
add
xor
mov
add
sbb
cld
dec
pusha
sar
sub
imul
xor
icebp
xor
rcl
add
add
shl
xor
(bad)
jmp
mov
int
xlat
add
sub
push
jae
inc
mov
outs
in
lods
jg
sbb
cld
add
addr16
push
xchg
rol
icebp
in
inc
cmp
test
inc
loop
push
xchg
ret
(bad)
pop
pop
jg
and
cld
outs
cmps
(bad)
pop
push
test
sbb
lods
das
in
cmps
inc
sahf
pop
jg
or
inc
adc
call
ins
inc
loop
jnp
pop
aad
jbe
xor
inc
cmp
pop
stc
idiv
mov
inc
lahf
jnp
cld
add
movs
in
in
push
test
sbb
lods
pop
in
leave
inc
out
iret
inc
int
add
push
push
cdq
jae
add
jg
adc
and
cmps
bound
fnstenv
repz
out
cmc
jmp
dec
std
xchg
jne
add
jg
adc
and
cmps
bound
mov
(bad)
(bad)
inc
dec
inc
les
xchg
je
in
iret
inc
dec
inc
les
cs
cmp
cmp
cmp
add
jg
adc
and
jecxz
inc
adc
mov
mov
out
in
mov
inc
adc
fnstsw
or
add
cmp
into
(bad)
into
scas
jg
pop
inc
iret
or
add
(bad)
js
inc
loopne
(bad)
inc
push
into
pop
sbb
in
push
cld
call
pop
xlat
cld
lock
mov
out
mov
add
add
push
div
push
ret
(bad)
out
out
mov
test
inc
dec
inc
les
xchg
jne
add
jg
adc
and
adc
aas
cmp
cmc
pop
aas
clc
or
inc
adc
pop
xlat
cld
lock
mov
sti
or
push
in
push
cld
call
pop
xlat
cld
lock
mov
out
mov
add
add
push
in
cmps
fdivr
into
(bad)
into
scas
jg
fnstsw
or
add
(bad)
js
inc
loopne
(bad)
inc
push
retf
fcom
cld
call
pop
xlat
cld
lock
mov
out
mov
add
add
push
in
cmps
fdivr
into
(bad)
into
scas
jg
fnstsw
or
add
(bad)
js
inc
loopne
(bad)
inc
push
retf
fcom
cld
call
pop
xlat
cld
lock
mov
out
mov
add
add
push
in
cmps
fdivr
cmps
bound
fcom
adc
scas
adc
mov
cmp
dec
push
mov
jl
jae
mov
out
push
pushf
mov
mov
dec
pop
inc
rcl
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
push
mov
or
aaa
xchg
fidivr
sbb
mov
jle
(bad)
loope
add
add
add
jb
jle
mov
scas
add
add
or
sbb
call
adc
jbe
or
call
adc
xchg
xchg
mov
mov
xchg
popf
ror
mov
sub
in
add
xchg
mov
shr
mov
shr
mov
shr
push
ds
push
add
in
inc
jge
push
sbb
movs
mov
ficom
dec
sti
push
lahf
push
sub
xor
inc
jge
push
sbb
movs
mov
ficom
dec
sti
push
push
test
or
adc
add
mov
inc
xlat
push
(bad)
push
mov
(bad)
aaa
mov
in
aam
jmp
jg
ficomp
outs
inc
adc
inc
mov
dec
dec
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
hlt
cld
imul
inc
repnz
pop
cli
in
aas
dec
sbb
lock
cld
adc
jno
or
lods
adc
pop
add
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
mov
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
push
mov
in
aam
jmp
jg
fisubr
test
xlat
push
(bad)
push
mov
mov
dec
adc
sub
movs
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
dec
push
mov
aas
inc
and
add
xlat
lods
xchg
shl
lods
outs
ud0
enter
mov
add
xor
mov
adc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
push
mov
in
aam
jmp
jg
fidiv
push
cmc
psubd
(bad)
mov
ja
jle
and
mov
inc
rcl
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
imul
add
or
cmc
fidivr
sbb
mov
jle
(bad)
loope
add
add
std
jbe
inc
inc
mov
push
dec
pop
sub
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
sbb
retf
cld
mov
std
jo
in
inc
mov
dec
inc
and
mov
stc
push
shr
test
push
push
ror
xchg
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
cmp
inc
cld
adc
dec
dec
(bad)
mov
aas
inc
and
add
xlat
scas
pop
push
ret
stos
inc
adc
add
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
and
add
scas
or
das
mov
in
aam
jmp
jg
fidiv
nop
cmps
mov
dec
pop
inc
rcl
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
and
cmps
jecxz
ficomp
inc
nop
xor
add
imul
leave
jmp
inc
in
mov
sbb
retf
mov
push
push
xor
sub
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
xor
or
int
add
ror
add
gs
inc
inc
(bad)
mov
pop
mov
outs
push
inc
scas
or
jle
loopne
inc
call
sub
dec
pop
pusha
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
nop
rol
push
lahf
lea
jg
inc
retf
inc
pop
cmps
inc
shr
pop
ficomp
inc
nop
xor
add
imul
cs
inc
inc
aad
mov
and
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jecxz
pop
xchg
lods
push
out
stos
add
outs
stc
jmp
mov
jmp
ror
ss
imul
cmps
inc
sahf
xchg
(bad)
mov
ror
inc
cs
add
(bad)
push
mov
stos
inc
sbb
or
adc
add
inc
mov
into
test
ja
inc
mov
jg
dec
js
add
push
push
sti
inc
jg
xor
ror
jne
inc
push
int
mov
aam
outs
(bad)
mov
mov
xor
hlt
ds
stc
push
std
mov
retf
mov
push
in
mov
js
push
mov
xchg
xchg
inc
imul
or
jmp
dec
push
inc
and
cmp
jno
sbb
jg
mov
jg
push
(bad)
push
mov
pop
les
cmc
sar
cld
add
push
inc
push
mov
adc
dec
dec
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
inc
shl
lods
outs
ud0
enter
mov
add
xor
imul
inc
repnz
pop
cli
in
aas
dec
sub
jo
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
shl
pop
jnp
(bad)
xchg
mov
test
scas
movs
xchg
push
inc
scas
sbb
outs
(bad)
mov
cmp
mov
in
clc
inc
mov
std
imul
sbb
inc
jge
dec
(bad)
sti
in
push
sub
cmp
lds
in
icebp
inc
cmp
js
add
push
iret
and
iret
push
stc
push
std
sahf
aas
out
cld
stos
cmc
adc
enter
iret
pop
repz
push
xchg
stc
fs
not
push
xor
add
idiv
add
inc
mov
iret
jg
lods
pop
(bad)
std
cmc
lods
sbb
not
inc
mov
sbb
and
mov
pop
test
mov
out
jmp
stos
data16
mov
xor
xchg
inc
inc
(bad)
mov
pop
mov
outs
push
inc
scas
or
inc
pop
loopne
inc
call
sub
dec
pop
pusha
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
nop
rol
push
lahf
lea
jg
inc
retf
inc
pop
cmps
inc
shr
pop
ficomp
inc
nop
xor
add
imul
cs
inc
inc
aad
mov
and
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
retf
imul
or
cmp
dec
shl
cli
call
aas
mov
add
adc
pop
or
mov
mov
cli
mov
mov
jnp
xor
or
sub
dec
stos
mov
idiv
xchg
push
sbb
push
adc
movs
or
adc
sub
mov
sub
jne
loop
dec
push
push
mov
fdivrp
add
mov
cmp
dec
pop
cmp
dec
(bad)
cmc
imul
add
scas
or
das
mov
in
aam
jmp
jg
fidiv
inc
call
sub
dec
pop
pusha
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xchg
nop
rol
push
lahf
lea
jg
inc
retf
inc
pop
cmps
inc
shr
pop
ficomp
inc
nop
xor
add
imul
cs
inc
inc
aad
mov
and
mov
add
mov
add
mov
add
mov
add
movs
test
gs
mov
pop
inc
and
mov
daa
test
aad
cmp
sti
inc
inc
out
(bad)
je
push
into
(bad)
retw
push
mov
repz
cmp
pop
inc
sahf
imul
imul
push
xor
adc
sti
(bad)
lods
jg
mov
push
xchg
cld
(bad)
sub
mov
cmp
in
xlat
mov
jno
add
xchg
sub
lea
out
pop
je
cdq
arpl
sbb
mov
push
ja
mov
jmp
sub
icebp
push
adc
cmp
mov
xchg
adc
xor
jnp
fs
ret
pusha
cmp
xor
mov
mov
mov
nop
jnp
inc
ins
imul
stos
mov
aas
mov
movs
ds
rcr
mov
shr
adc
and
dec
pop
leave
retf
sbb
in
mul
movs
lds
jmp
mov
jge
aam
jo
ja
rcl
jno
lahf
jne
jge
pop
xchg
cmps
int
pop
push
stos
fisttp
hlt
arpl
adc
(bad)
scas
in
int
out
push
dec
inc
pop
scas
imul
sbb
imul
dec
inc
and
mov
stc
push
shr
test
add
push
(bad)
push
mov
popa
jle
fs
dec
inc
je
pop
dec
pop
inc
rcl
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
and
cmps
jecxz
ficomp
inc
nop
xor
add
imul
leave
jmp
inc
in
mov
sbb
retf
mov
push
push
xor
sub
mov
mov
sub
mov
sub
mov
sub
mov
sub
inc
cld
jnp
xor
add
mov
push
sbb
jp
inc
rol
sti
xor
mov
mov
xchg
pop
movs
sbb
xchg
push
aam
bound
xchg
pop
movs
sbb
xchg
jnp
mov
sub
sub
and
gs
sub
scas
jmp
add
clc
aas
out
rcr
mov
inc
outs
imul
stos
sub
add
sbb
dec
jno
shl
clc
enter
xchg
adc
push
test
lahf
mov
data16
jae
cwde
add
add
popf
dec
push
gs
stos
or
imul
xor
hlt
sbb
sbb
data16
mov
cld
in
adc
inc
xor
fidiv
enter
dec
pop
mov
dec
mov
mov
int
enter
aam
jae
and
std
push
xchg
cwde
pushf
mov
scas
out
adc
push
aad
xor
cmp
mov
xor
cmp
xor
mov
lods
loop
ret
ja
pop
push
int
fst
cmp
sub
retf
in
ins
rcr
ins
and
lods
fsub
pop
and
sub
cld
stos
sbb
pop
out
arpl
stos
add
mov
push
inc
pop
dec
out
xchg
pop
mov
cld
mov
push
lods
das
mov
fisubr
add
mov
add
scas
or
sbb
int
mov
inc
cmp
push
ss
add
(bad)
sbb
inc
push
cmp
push
xchg
mov
jae
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
and
cmps
jecxz
ficomp
inc
nop
xor
add
imul
leave
jmp
inc
in
mov
sbb
retf
mov
push
push
xor
sub
mov
mov
sub
mov
sub
mov
sub
mov
sub
inc
cld
jnp
xor
add
mov
push
sbb
pop
sar
cmp
out
pop
(bad)
lahf
icebp
in
pop
shl
xchg
mov
mov
mov
add
aad
mov
test
call
push
stos
push
pop
icebp
repnz
inc
inc
retf
pop
ins
and
test
dec
sbb
xor
push
je
jmp
shr
push
or
cmp
retf
jecxz
test
inc
(bad)
dec
add
adc
sub
sub
and
sub
dec
movs
xchg
jmp
pop
and
xor
out
push
test
or
inc
les
and
dec
gs
int3
mov
out
(bad)
jne
dec
pushf
fisttp
fbld
out
push
mov
add
repz
and
adc
enter
xchg
jecxz
jecxz
cmp
fdiv
dec
cmp
rcr
add
js
movs
mov
test
jno
lods
pop
inc
call
imul
mov
out
push
xor
daa
fiadd
cmc
sub
mov
xlat
xchg
inc
lahf
push
jae
push
ret
pop
in
dec
out
call
lea
rcl
or
das
sub
outs
mov
cmp
shr
rcl
fsubr
adc
xchg
push
mov
pop
adc
sbb
adc
jb
push
retf
add
fcmovnu
aam
(bad)
pop
xor
imul
lds
add
and
add
scas
sub
cld
dec
inc
and
mov
mov
int
popf
mov
sbb
push
xchg
push
mov
inc
mov
add
xchg
nop
je
scas
push
repz
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
inc
shl
lods
outs
ud0
enter
mov
add
xor
imul
inc
repnz
pop
cli
in
aas
dec
sub
jo
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
outs
inc
jecxz
icebp
stos
mov
pushw
cmc
lods
imul
push
sar
sub
lods
imul
(bad)
and
int
inc
rcl
aas
ds
out
mov
push
mov
loopne
xor
repz
add
int
add
hlt
iret
in
cmp
and
mov
sar
jecxz
adc
pop
retf
push
dec
rcl
cli
aam
call
aam
aad
int
push
in
lahf
cmp
jp
mov
push
add
enter
or
scas
sub
xor
mov
push
scas
es
out
push
push
inc
jns
neg
xor
xor
jbe
lar
addr16
nop
push
dec
dec
jo
jb
inc
enter
in
inc
sbb
push
addr16
sbb
enter
shl
push
lods
mov
(bad)
cmps
shr
stos
fidiv
popa
mov
ins
pusha
push
stos
pop
dec
push
add
jns
mov
pushf
add
pop
xor
pushf
mov
add
pop
fisttp
not
add
loopne
xor
int3
mov
or
test
jnp
test
ret
pop
dec
xchg
mov
sub
push
and
aad
jle
rcl
into
sub
test
dec
neg
hlt
mov
push
fsub
mov
push
xchg
test
arpl
loopne
js
push
loope
hlt
xor
xor
mov
inc
iret
xchg
sbb
push
pop
imul
add
out
jg
adc
test
ret
stos
mov
mov
mov
das
inc
mov
sub
dec
pop
cmc
dec
sub
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
cmp
inc
cld
adc
dec
dec
(bad)
mov
aas
inc
and
add
xlat
scas
pop
push
ret
stos
inc
adc
add
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
inc
jecxz
icebp
stos
push
push
inc
(bad)
cmp
push
pusha
out
pop
(bad)
mov
mov
jp
mov
add
pop
sub
cmp
inc
clc
sub
dec
ror
test
call
(bad)
test
mov
fstp
cld
stos
mov
adc
xor
fdiv
ffree
ror
inc
pop
cmp
(bad)
into
out
dec
mov
push
lds
sbb
lea
inc
inc
dec
push
scas
(bad)
fcomp
test
ins
push
dec
fldenv
push
sbb
repz
jns
jbe
adc
pusha
add
test
int
jg
lods
push
fbstp
sar
pusha
dec
jecxz
push
mov
(bad)
push
call
arpl
addr16
mov
(bad)
lahf
cmp
push
mov
repnz
popf
ja
add
rcr
ret
fisubr
or
stos
mov
sub
inc
jne
xchg
add
cmp
push
and
mov
dec
sub
ret
test
cs
imul
push
stos
push
aad
ret
and
jge
or
push
rcr
leave
mov
inc
push
outs
mov
push
cmp
adc
ds
aas
hlt
out
jg
gs
mov
lods
pushf
clc
dec
idiv
mov
xchg
mov
xlat
test
mov
xor
call
dec
pop
inc
rcl
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
dec
dec
push
mov
aas
inc
and
add
xlat
lods
xchg
shl
lods
outs
ud0
enter
mov
add
xor
mov
adc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
xchg
pop
sti
(bad)
cmp
push
scas
mov
pop
sbb
jecxz
test
je
jge
pop
mov
xchg
(bad)
jp
inc
adc
mov
xor
out
cmc
dec
(bad)
cmc
pop
xor
push
inc
out
push
mov
repz
movs
push
aad
inc
das
cli
cdq
xor
sar
stos
push
loopne
jg
call
cmp
lea
shl
dec
popa
push
sbb
jp
mov
or
mov
or
pop
arpl
sbb
mov
shr
xor
int3
mov
cmp
loope
mov
nop
push
pop
ins
mov
cld
imul
inc
(bad)
les
mov
movs
stos
mov
(bad)
jp
sub
ja
mov
cli
rcl
push
int
inc
pop
mov
test
cwde
into
cmp
test
dec
adc
adc
pop
and
push
push
cmp
cmps
mov
dec
gs
daa
xor
adc
adc
pop
popf
fsubr
dec
dec
cmp
mov
rol
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
imul
add
or
cmc
fidivr
sbb
mov
jle
(bad)
loope
add
add
std
jbe
inc
inc
mov
push
dec
pop
sub
mov
or
mov
or
mov
or
mov
or
mov
popa
xchg
pop
aam
add
push
jg
int
out
xchg
inc
xchg
pop
cld
repz
sti
in
cwde
mov
jle
fwait
ss
mov
jmp
rcl
mov
ins
aad
cmp
push
inc
mov
retf
pop
out
pop
movs
cmp
jmp
xor
call
jmp
gs
test
jg
outs
test
adc
add
inc
mov
add
imul
add
mov
pop
inc
cmp
mov
stos
inc
push
sbb
in
inc
cmps
mov
add
mov
xchg
jmp
sub
out
inc
jns
mov
push
xchg
test
lahf
clc
movs
cmc
xor
add
push
dec
jge
dec
push
aas
icebp
dec
push
(bad)
cwde
adc
push
dec
cmp
mov
cs
cmc
mov
mov
add
movs
movs
sbb
xor
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
hlt
cld
imul
inc
repnz
pop
cli
in
aas
dec
sbb
lock
cld
adc
jno
or
lods
adc
pop
add
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
adc
push
test
aad
lea
dec
sbb
add
mov
ins
(bad)
xor
movs
sub
(bad)
cwde
bound
in
sbb
jno
push
push
push
(bad)
rcl
iret
out
fucomip
push
sub
hlt
xor
dec
cmp
xor
scas
loop
je
jge
and
xor
mov
imul
clc
icebp
hlt
adc
fwait
or
popa
mov
iret
(bad)
mov
mov
xor
mov
imul
sbb
stos
push
ror
push
and
cli
shr
in
inc
inc
sbb
inc
xchg
cmp
ins
jg
cs
(bad)
push
push
push
(bad)
push
div
jmp
call
inc
repnz
add
aam
dec
push
clc
xor
out
push
push
sti
mov
adc
sbb
lods
mov
add
or
cmp
inc
and
mov
stc
push
and
fbstp
out
shr
inc
mov
gs
mov
pusha
jmp
xlat
mov
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
sbb
inc
or
xor
stc
add
std
jbe
inc
inc
mov
arpl
inc
inc
pop
cmps
inc
shr
adc
scas
add
mov
mov
add
sub
add
sub
add
sub
stos
xor
inc
mov
popf
(bad)
test
data16
imul
mov
sbb
push
push
adc
sub
leave
mov
aam
data16
(bad)
ds
rcl
jmp
arpl
mov
pusha
or
mov
adc
test
mov
mul
scas
sub
nop
jecxz
sub
out
sub
xchg
aas
sub
out
jmp
fucomi
stos
adc
sub
cdq
mov
test
in
dec
sub
push
fmulp
or
cmps
lahf
jecxz
push
ret
sbb
sub
push
mov
inc
lahf
jne
jle
cli
sub
sub
movs
add
push
push
dec
mov
in
aam
jmp
jg
jecxz
mov
(bad)
pop
aam
jmp
push
adc
jmp
mov
gs
mov
cli
rcr
clc
dec
inc
dec
push
aad
dec
pop
inc
rcl
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
hlt
cld
imul
inc
repnz
pop
cli
in
aas
dec
sbb
lock
cld
adc
jno
or
lods
adc
pop
add
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
adc
push
test
aad
lea
sbb
jg
cmps
inc
jp
push
ins
movs
retf
push
pop
and
mov
repnz
movs
pop
jo
pushf
push
jg
push
sti
je
(bad)
stc
push
jge
das
inc
cld
stos
jns
out
inc
jle
jl
(bad)
in
push
pop
movs
jae
inc
jle
js
ror
movs
inc
das
(bad)
inc
es
ret
mov
xchg
test
cmc
xor
jecxz
movs
aas
inc
sub
add
sar
add
fist
mov
push
pop
cmp
lock
call
dec
scas
neg
mov
sar
in
out
cmp
fild
sar
add
dec
mov
call
push
add
xchg
jmp
aam
mov
pop
pop
mov
outs
inc
push
sar
add
(bad)
cmp
movs
xor
inc
adc
add
mov
add
les
cmc
lds
mov
enter
xlat
push
(bad)
push
out
fldpi
pop
loop
mov
jo
fisubr
aam
push
and
push
push
loop
ret
rcl
xchg
nop
je
scas
cmps
ds
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
std
imul
inc
repnz
pop
cli
in
aas
dec
ror
jp
call
jae
sbb
out
cmp
idiv
js
inc
enter
push
pop
fcomi
aas
cli
add
inc
loopne
aas
cld
push
pop
outs
aam
add
add
add
push
leave
in
daa
fsubr
sti
jle
inc
inc
sbb
add
std
add
lock
(bad)
sub
push
pop
jg
aam
add
add
add
push
jge
push
inc
mov
inc
inc
lds
daa
fsubr
lea
das
in
cli
lahf
std
add
lock
(bad)
sub
add
jg
stos
cmp
test
push
inc
mov
inc
inc
lds
std
dec
inc
ud0
adc
mov
mov
jg
add
jg
stos
fild
out
add
and
add
test
adc
pop
inc
movs
adc
inc
ud0
adc
cli
add
inc
loopne
aas
cld
push
push
ret
call
fild
out
add
and
add
test
jle
inc
inc
sbb
add
pop
sbb
cli
add
inc
loopne
aas
cld
push
pop
outs
aam
add
add
add
push
jnp
test
push
mov
sti
jle
inc
inc
sbb
add
std
add
lock
(bad)
sub
push
pop
jg
aam
add
add
add
push
jge
push
inc
mov
inc
inc
lds
daa
fsubr
lea
das
in
cli
lahf
std
add
lock
(bad)
sub
rol
out
add
and
add
test
adc
pop
inc
fimul
mov
and
sbb
add
mov
inc
imul
pop
pop
inc
xchg
lods
mov
push
add
sbb
(bad)
inc
inc
(bad)
dec
inc
pop
(bad)
cs
fxch
mov
rcl
push
inc
mov
xchg
add
add
cld
pop
aas
ror
lea
adc
div
pop
(bad)
mov
hlt
push
mov
inc
icebp
je
and
push
xchg
imul
out
aaa
and
(bad)
out
and
add
jmp
jae
add
inc
(bad)
sbb
pop
mov
inc
jg
pop
pop
ficom
pop
hlt
or
inc
mov
call
jle
iret
(bad)
rcr
mov
dec
in
cmp
add
inc
lds
pop
and
sbb
ja
pushf
fcomip
or
jecxz
add
test
add
pop
inc
adc
(bad)
push
outs
inc
push
icebp
inc
mov
mov
dec
ret
fcomp
add
xchg
dec
cli
add
inc
ffreep
inc
loop
popf
(bad)
pushf
mov
inc
ret
add
or
inc
lds
mov
sub
(bad)
(bad)
daa
inc
adc
retf
mov
rcr
and
stos
lahf
sti
clc
lahf
cld
push
and
pop
sbb
add
inc
mov
mov
cmp
cwde
ins
iret
std
cld
dec
(bad)
sub
shr
out
mov
add
test
inc
div
in
je
sbb
iret
lea
repz
sar
push
icebp
les
(bad)
pop
lock
add
dec
sub
lea
aad
daa
cld
mov
std
jno
repz
fldcw
jp
xchg
jne
xchg
aaa
or
inc
push
adc
jno
movs
jae
cmp
stos
and
jmp
xchg
out
fcom
cmc
adc
lahf
jmp
std
loope
arpl
cmp
jmp
mov
pushf
xlat
rcr
aam
jg
mov
sahf
mov
add
mov
sub
pop
out
pop
add
inc
cmp
push
stc
jmp
stc
jmp
rcr
iret
pop
aas
iret
pop
cs
dec
(bad)
jp
(bad)
jp
jo
mov
(bad)
(bad)
repz
mov
mov
sahf
mov
add
mov
sub
pop
out
pop
add
inc
cmp
push
stc
jmp
stc
jmp
rcr
iret
pop
aas
iret
pop
cs
dec
(bad)
jp
(bad)
jp
jo
mov
(bad)
(bad)
repz
mov
mov
sahf
mov
add
mov
sub
pop
out
pop
inc
add
mov
inc
stc
jmp
xor
add
xchg
ja
sbb
inc
imul
mov
ja
sbb
inc
imul
mov
ja
sbb
inc
imul
mov
ja
sbb
inc
imul
mov
ja
sbb
inc
imul
mov
ja
sbb
inc
pop
dec
(bad)
mov
mov
(bad)
(bad)
repz
mov
mov
sahf
mov
add
mov
sub
jmp
dec
mov
push
cs
mov
stos
jbe
frstor
mov
stos
(bad)
xchg
mov
dec
aas
xor
adc
mov
lea
mov
jg
dec
aas
xor
adc
in
mov
leave
stc
(bad)
lock
fsub
in
bound
xor
fcom
inc
iret
dec
aas
xor
adc
inc
cmp
retf
dec
jg
(bad)
adc
mov
mov
xor
inc
test
(bad)
arpl
sub
lods
inc
out
mov
dec
getsec
aam
lods
ret
mov
xchg
lds
cmp
pop
stc
imul
aas
ret
add
std
mov
hlt
xchg
repz
loope
mov
pop
test
cmp
imul
gs
xbegin
mov
add
sub
adc
push
sti
sbb
sub
jp
iret
xchg
dec
cld
mov
repz
lock
ds
mov
repnz
jg
call
sbb
aaa
movs
inc
out
fidivr
aas
out
jecxz
pop
(bad)
es
jl
data16
mov
add
xor
adc
adc
dec
shl
mov
jae
iret
std
hlt
mov
das
dec
aas
repnz
(bad)
cli
pop
(bad)
es
jne
fucomi
sub
jne
out
cmp
test
jecxz
adc
jg
dec
inc
(bad)
sar
pop
stc
outs
jne
add
inc
adc
add
repnz
sti
pop
xchg
mov
ficom
outs
cmp
pusha
lods
setg
aas
jns
clc
call
xor
(bad)
fucomp
jg
fldenv
add
ins
xor
add
add
push
dec
add
add
add
cmps
sbb
inc
add
add
add
jb
data16
pop
add
arpl
gs
dec
imul
push
gs
inc
outs
js
add
or
add
dec
add
add
inc
xor
or
add
inc
pop
add
dec
push
add
and
adc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
add
add
add
add
add
add
addr16
fs
sbb
push
push
inc
popa
je
push
imul
cs
push
inc
inc
inc
jb
add
lock
or
mov
sub
mov
add
add
add
add
add
add
add
add
sub
outs
sub
sub
add
add
add
add
pop
add
add
rol
(bad)
(bad)
inc
adc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
cmps
add
add
add
add
add
add
add
add
sbb
add
add
or
arpl
jp
outs
outs
or
arpl
jp
outs
outs
add
add
add
or
arpl
jp
outs
outs
or
add
add
add
add
add
add
pop
add
add
add
imul
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
cmp
inc
inc
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
data16
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
inc
(bad)
cli
add
add
add
add
popa
xor
add
add
add
inc
jne
add
add
popa
xor
and
push
mov
add
or
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
imul
jb
add
popa
add
add
add
add
push
add
add
push
add
add
add
add
add
popa
xor
sbb
add
add
add
push
add
add
add
popa
addr16
sbb
jecxz
add
ins
je
add
or
jmp
add
dec
inc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
dec
add
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
cli
imul
imul
imul
jne
cmp
outs
xor
enter
int
pop
pop
lods
dec
mov
or
jge
inc
add
xchg
add
dec
pop
cwde
stos
aaa
in
mov
cmp
xor
sti
(bad)
dec
push
or
pop
mov
pushf
add
fldcw
stc
(bad)
adc
mov
push
mov
cmp
ror
add
stos
leave
lods
or
sub
and
(bad)
movs
mov
jo
add
mov
mov
adc
mov
and
aaa
fs
cdq
dec
inc
call
jmp
movs
dec
ins
xchg
xor
int
out
pushf
xchg
cmp
leave
mov
das
cdq
inc
cdq
push
ins
arpl
xchg
add
push
stos
enter
add
js
aam
dec
test
mov
inc
ds
mov
add
clc
test
mov
loope
cmps
lods
and
cmp
or
mov
xchg
or
cs
pop
jecxz
ins
or
xlat
push
jno
test
in
jge
shl
in
lods
bound
sub
push
out
int
inc
lea
ror
fdiv
dec
js
or
push
mov
mov
aas
cmps
(bad)
mov
push
xor
(bad)
pusha
cmp
jmp
aaa
int3
dec
daa
mov
push
mov
and
(bad)
or
leave
cld
cmp
ret
cmp
and
cmp
call
xchg
inc
or
mov
and
push
in
enter
popf
adc
andnps
push
mov
push
ins
cmps
xor
leave
repnz
jecxz
aad
add
push
ficomp
fdivr
xlat
out
jmp
jmp
push
test
add
inc
push
pop
call
test
inc
stos
stos
loopne
gs
inc
sbb
out
(bad)
enter
xor
jnp
imul
and
mov
inc
(bad)
repnz
rol
cmp
mov
sar
ret
xchg
add
push
out
pmovmskb
push
mov
cmp
push
aaa
and
lea
cmps
sahf
lds
jl
cmp
xchg
ds
jbe
mov
sbb
bound
xchg
inc
es
ins
iret
call
sbb
sahf
xchg
jno
push
sbb
outs
push
and
dec
lds
mov
inc
add
rcr
rcr
shl
test
nop
and
xor
call
(bad)
dec
xor
test
xchg
sub
lea
cmp
(bad)
xlat
(bad)
inc
sar
adc
ja
mov
mov
iret
cmp
ss
dec
lods
jne
movs
addr16
mov
or
(bad)
mov
fcomp
jnp
mov
sub
adc
push
inc
jmp
stos
std
sbb
xchg
stc
cmc
std
sub
mov
or
movs
test
stos
addr16
cmp
add
popa
adc
(bad)
and
ins
adc
mov
sbb
and
rcr
and
jge
cmps
in
out
jg
dec
sar
xchg
add
add
inc
jno
xchg
mov
and
xchg
nop
retf
dec
outs
and
fdiv
mov
sbb
in
cmps
call
sbb
cmc
in
fisttp
push
and
mov
inc
out
push
mov
loope
test
pop
scas
out
mov
nop
scas
int
cmps
clc
adc
cmp
stos
xor
scas
adc
loopne
cli
mov
sub
dec
pop
in
outs
mov
push
lods
mov
enter
les
rol
mov
mov
jne
pop
aas
cs
cli
push
mov
lds
gs
retf
cmps
fiadd
retf
cmc
pop
call
rcr
rol
push
out
retf
or
and
ret
(bad)
push
mov
test
iret
xor
dec
rol
mov
sbb
or
call
(bad)
push
jno
and
push
push
sub
inc
ds
imul
jnp
outs
cs
in
add
adc
xchg
cmp
rcl
pop
rcr
add
push
sbb
sub
aas
mov
into
inc
movs
or
push
imul
lock
cmp
xor
retf
lock
out
xor
xlat
sbb
or
(bad)
aad
push
mov
(bad)
mov
loope
mov
loopne
aam
paddd
mov
mov
jne
inc
mov
add
mov
mov
cmp
(bad)
fimul
mov
mov
and
aas
icebp
rol
mov
aam
mov
jno
add
xor
pushf
mul
sbb
sub
jmp
in
dec
fnstenv
push
jp
out
int3
call
or
push
mov
iret
movs
cmp
or
test
sub
loopne
pop
and
push
jecxz
lahf
cmps
push
and
push
pop
pop
mov
sbb
mov
repz
mov
mov
xor
dec
(bad)
push
leave
adc
ins
or
cmp
jae
lods
dec
inc
lods
mov
jmp
jp
pop
cmp
dec
xchg
sub
fs
mov
push
sar
aam
or
push
mov
and
jmp
sub
gs
das
arpl
lods
(bad)
mov
inc
mov
movs
cdq
sbb
scas
int
sub
ret
sub
jbe
repz
mov
jle
add
(bad)
cli
jl
(bad)
and
xor
push
sbb
pavgw
xor
enter
stos
add
test
aad
cmps
push
out
mov
int
in
jmp
(bad)
stc
pop
in
sub
fnsave
dec
sti
jmp
cld
jno
mov
sub
lods
add
cld
xor
gs
jmp
inc
sub
adc
cmp
rol
daa
add
xchg
sub
jae
dec
xchg
in
(bad)
shr
int
aaa
xchg
daa
pushf
and
jae
add
add
test
lds
and
repz
stc
push
rcr
into
into
pop
dec
out
inc
out
pushf
hlt
mov
repz
pushf
mov
adc
shr
sbb
mov
mov
pop
(bad)
cdq
fwait
es
(bad)
js
mov
fist
lds
xor
jno
lods
dec
js
sbb
fbld
sahf
pop
mov
in
mov
sub
mov
push
mov
mov
or
sbb
jno
jmp
jecxz
and
push
aad
repz
scas
cmp
adc
cmc
pop
mov
xchg
or
pop
dec
xor
jge
dec
push
cmp
pop
sub
dec
test
ins
(bad)
loopne
or
inc
dec
leave
es
scas
retf
cmp
or
sub
ja
sub
inc
xchg
or
(bad)
push
sahf
or
xchg
jmp
pop
xlat
mov
mov
popf
pop
js
push
lahf
pop
mov
xchg
lods
ins
int
jns
lahf
and
push
cli
enter
clc
aad
xor
sti
inc
shl
mov
xchg
push
aam
jge
retf
stos
sbb
fst
fimul
sar
int
retf
or
scas
xor
std
movs
jns
shl
jl
jno
lds
and
xchg
pop
cmc
adc
es
sub
push
jnp
and
push
add
int
fmul
out
add
xor
jb
imul
mov
std
jb
std
add
push
gs
xchg
inc
dec
cmp
dec
cs
rcl
mov
fwait
cmp
pop
xor
xchg
fisub
add
lea
aas
fstp
cmc
into
clc
push
inc
lahf
cli
cli
pop
std
or
mov
inc
inc
cmc
int3
push
add
js
loop
pop
in
push
mov
dec
xchg
add
pushf
sahf
inc
jecxz
mov
mov
mov
mov
mov
add
lahf
test
adc
cwde
push
xor
outs
xchg
iret
sbb
xchg
fistp
inc
and
rol
and
push
xlat
loop
aam
mov
and
and
iret
pop
pop
xlat
mov
lods
push
mov
push
inc
jge
sub
imul
pop
(bad)
cld
fisub
scas
inc
jmp
inc
ror
into
out
imul
sbb
ror
inc
inc
rep
jg
addr16
call
jge
stc
(bad)
mov
out
pop
test
movs
fcmovnb
(bad)
fld
pop
sbb
sahf
(bad)
cmp
lods
pusha
js
les
pop
xchg
imul
jl
inc
(bad)
mov
stc
push
sub
aas
mov
sahf
scas
out
mov
dec
jge
lods
enter
sbb
push
add
add
mov
in
jo
add
fidivr
jg
jg
ja
pop
inc
nop
xor
add
cmp
xor
imul
stos
inc
cs
pop
pop
xor
outs
inc
push
ja
sbb
jnp
inc
dec
lahf
idiv
add
push
pop
(bad)
into
dec
sahf
and
retf
es
or
sub
std
push
shl
(bad)
sbb
inc
cmp
sub
dec
das
cld
jp
imul
adc
repz
xchg
scas
ins
sub
cmp
dec
nop
(bad)
shr
sbb
inc
pop
sahf
mov
add
mov
out
push
popa
cmps
inc
mov
add
inc
xor
jp
popa
add
cmp
icebp
add
jg
fnstsw
xchg
in
dec
icebp
sub
xchg
mov
jge
cmc
sbb
sub
aas
in
jns
add
inc
ins
inc
pop
jbe
add
or
ins
push
jbe
jns
mov
add
push
jp
lods
test
movs
jmp
and
sub
lods
(bad)
sti
stos
inc
mov
out
mov
out
es
xor
std
std
xor
or
(bad)
nop
jns
cmps
sahf
mov
jmp
(bad)
movs
int
js
push
loopne
(bad)
mov
add
inc
jle
enter
lock
out
push
pop
ins
inc
pop
outs
cmc
adc
aas
(bad)
fld
add
dec
call
push
inc
add
add
add
add
gs
xor
add
push
add
imul
imul
add
rol
add
daa
push
inc
adc
add
pop
add
mov
add
popa
outs
jae
push
gs
inc
push
add
add
add
add
gs
xor
add
push
add
imul
imul
add
daa
push
inc
adc
add
pop
add
mov
add
popa
outs
jae
push
gs
inc
push
add
add
push
add
gs
xor
add
adc
push
jb
addr16
outs
and
jo
gs
and
add
add
add
rol
add
cmps
push
out
add
add
add
add
add
mov
popa
push
add
add
add
bound
xor
add
or
dec
ins
jo
gs
and
add
(bad)
(bad)
inc
add
push
add
add
add
adc
inc
push
add
add
push
add
gs
xor
add
push
add
outs
arpl
fs
imul
ins
outs
je
add
add
add
rol
add
outs
or
adc
add
add
mov
add
push
popa
push
add
add
add
gs
xor
add
push
add
outs
arpl
fs
imul
ins
outs
je
add
add
add
xchg
push
ja
adc
add
add
mov
add
push
popa
push
add
or
add
push
add
popa
xor
sbb
(bad)
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
fadd
add
retf
add
add
add
add
inc
add
inc
add
(bad)
inc
add
inc
(bad)
(bad)
inc
lock
inc
movs
mov
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
fwait
mov
push
sbb
mov
adc
adc
adc
adc
adc
adc
adc
mov
adc
div
cmc
ja
pop
push
or
adc
adc
adc
adc
adc
adc
adc
neg
pushf
div
div
div
sbb
sbb
adc
adc
adc
adc
adc
adc
fwait
adc
stc
stc
adc
mov
mov
ja
push
fwait
adc
adc
adc
adc
adc
pushf
stc
pop
pop
adc
nop
nop
nop
jo
xchg
or
div
push
push
mov
adc
adc
mov
xchg
nop
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
jo
mov
sbb
adc
adc
adc
lds
mov
xchg
xchg
xchg
xchg
xchg
fwait
neg
nop
jo
mov
mov
adc
pop
mov
mov
mov
xchg
mov
pop
stc
stc
xchg
nop
nop
nop
nop
outs
jo
test
push
mov
pop
(bad)
cli
pop
mov
mov
mov
mov
stc
stc
stc
xchg
xchg
xchg
nop
nop
nop
jo
cmc
test
mov
pop
cli
cli
mov
mov
mov
mov
xchg
nop
nop
nop
nop
jo
div
ja
mov
sti
clc
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
mov
adc
or
sti
mov
mov
mov
mov
xchg
xchg
xchg
xchg
nop
nop
nop
xchg
div
sbb
sti
sti
mov
mov
cli
mov
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
div
sbb
adc
cli
cld
sti
mov
mov
cli
cli
(bad)
stc
mov
xchg
nop
nop
nop
div
cmc
ja
adc
cld
sti
mov
mov
(bad)
xabort
xchg
xchg
xchg
xchg
nop
nop
nop
neg
cld
sti
mov
mov
mov
clc
mov
nop
nop
neg
std
sti
mov
ret
ret
ret
ret
ret
mov
mov
xchg
xchg
xchg
nop
xchg
neg
cld
std
les
ret
ret
ret
ret
mov
cli
(bad)
mov
xchg
adc
cmc
mov
std
or
in
(bad)
(bad)
(bad)
sti
cli
cli
mov
mov
adc
adc
std
sti
mov
out
and
or
or
sti
cli
cli
mov
adc
pushf
fwait
adc
adc
out
std
or
adc
(bad)
(bad)
std
std
cld
cld
sti
lds
stc
stc
idiv
adc
std
cld
(bad)
(bad)
in
out
(bad)
(bad)
(bad)
(bad)
std
cld
sti
lds
stc
pop
stc
fwait
adc
adc
adc
cli
cld
std
and
(bad)
(bad)
in
out
or
or
mov
mov
clc
pop
adc
adc
adc
std
std
and
(bad)
(bad)
(bad)
in
ret
mov
mov
pop
stc
mov
adc
adc
adc
std
std
cld
out
mov
mov
mov
mov
adc
adc
adc
adc
std
(bad)
std
and
les
mov
mov
adc
adc
adc
adc
adc
adc
adc
cld
std
(bad)
(bad)
std
and
or
or
cld
cld
sti
cli
clc
or
adc
adc
adc
adc
adc
adc
adc
sti
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
sti
(bad)
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
cld
cld
std
std
std
cld
sti
cli
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
(bad)
push
ud0
rol
inc
add
inc
add
cld
add
pop
clc
add
(bad)
add
pop
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
psubb
add
cld
add
aas
inc
add
add
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
inc
lock
add
add
add
add
add
add
popa
xor
sbb
add
aam
dec
add
add
arpl
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
add
add
popa
xor
sbb
add
add
aam
ja
inc
or
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
add
add
popa
xor
sbb
add
add
adc
or
arpl
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
add
add
popa
xor
sbb
add
add
call
add
arpl
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
add
add
popa
xor
sbb
add
add
add
adc
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
add
add
push
add
gs
xor
add
adc
push
jb
addr16
outs
and
jo
gs
and
add
add
add
cmps
push
out
add
push
add
add
mov
add
push
popa
push
add
push
add
popa
xor
sbb
jle
add
ins
je
add
add
inc
dec
inc
cmp
popa
and
es
add
(bad)
(bad)
push
div
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
lods
pushf
(bad)
out
shl
xchg
fsin
xchg
xlat
(bad)
xchg
mov
xchg
xchg
xchg
(bad)
xlat
dec
dec
dec
mov
dec
dec
std
mov
cld
mov
dec
stc
mov
cld
mov
cld
mov
cli
mov
clc
mov
stc
mov
stc
mov
test
xchg
test
test
stc
test
test
test
test
into
clc
test
test
int3
cmc
or
or
or
or
or
jg
repz
bnd
hlt
jle
repz
icebp
jl
bnd
bnd
lock
lock
out
jnp
jnp
(bad)
out
jp
icebp
jns
out
ja
in
je
jmp
ret
test
jmp
shr
shr
shr
mov
outs
mov
ins
mov
imul
imul
out
mov
arpl
movs
into
push
push
push
dec
movs
out
movs
jecxz
cmp
xor
or
sub
add
add
add
add
pop
inc
test
dec
dec
pop
push
aaa
push
xchg
pop
pop
aaa
push
push
add
mov
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
test
or
xchg
xchg
xchg
gs
cdq
fwait
add
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
in
test
(bad)
enter
sub
movs
sub
sub
mov
dec
pushf
dec
xchg
xchg
mov
pop
push
rcr
mov
clc
inc
mov
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
loop
push
retf
cwde
or
add
enter
lahf
inc
or
dec
mov
push
pop
xor
mov
push
loopne
adc
dec
popf
dec
mov
aad
pop
mov
(bad)
jne
push
movs
mov
out
popf
inc
shr
(bad)
cld
or
fsub
retf
fistp
dec
clc
movs
xor
dec
xchg
cdq
ror
dec
mov
xor
retf
sub
push
or
pop
inc
jae
fstp
test
pop
int
mov
xlat
mov
jno
mov
sbb
push
cs
(bad)
int
mov
and
inc
jl
add
enter
into
mov
adc
xor
mov
mov
fistp
xchg
xchg
lock
inc
loopne
in
repz
mov
xchg
cmp
repz
lahf
or
frstor
addr16
or
test
add
fbld
pop
xor
popf
es
daa
mov
cmc
icebp
inc
lea
add
jnp
addr16
sub
jno
inc
je
and
cwde
data16
push
push
add
adc
rol
xchg
dec
ss
loope
mov
(bad)
mov
in
addr16
add
addr16
(bad)
cdq
adc
jo
mov
out
jo
sub
pushf
fisttp
and
lds
arpl
xchg
sbb
bound
shl
nop
loop
rol
jno
ss
bound
ret
lds
push
pusha
xchg
inc
pop
pusha
or
test
aad
push
dec
(bad)
pop
bound
cmps
cwde
popf
pop
xor
test
popf
mov
sub
lods
mov
out
xchg
cs
test
cmp
test
adc
jo
mov
jle
xchg
inc
or
pop
inc
rol
sbb
inc
sti
dec
xor
dec
push
mov
stos
in
das
mov
push
xor
add
fst
daa
out
test
test
inc
add
mov
mov
cmp
adc
push
add
sbb
add
in
out
cli
and
popa
bound
fist
icebp
inc
sbb
scas
mov
jl
xor
pop
mov
and
pop
pop
xor
loope
loop
scas
out
sub
int3
xor
ins
xor
adc
add
inc
test
or
or
mov
aaa
pop
push
(bad)
scas
data16
aam
push
mov
lock
mov
jecxz
gs
jnp
sbb
push
and
cdq
bound
lock
mov
int
xlat
ins
neg
sub
lods
adc
pop
adc
mov
rcl
mov
fisubr
cs
in
dec
es
push
cmp
loopne
adc
movs
xor
shl
movs
adc
adc
mov
jmp
(bad)
cs
enter
or
fs
rol
lock
pop
mov
cmps
lahf
xchg
in
add
mov
sbb
ds
std
hlt
aam
xchg
adc
sbb
mov
push
je
xchg
cmps
jbe
jp
push
test
push
mov
out
(bad)
sti
sub
inc
or
push
xor
add
shl
dec
add
cmp
jmp
sub
rol
cli
inc
inc
or
mov
js
rol
or
mov
or
or
or
push
mov
imul
rcl
lock
movs
lds
and
add
ret
push
cli
rcr
mov
stc
loope
adc
dec
mov
std
sub
sbb
jle
lds
pop
xchg
xchg
add
sahf
mov
mov
mov
scas
shl
xchg
loop
xlat
enter
lea
pop
push
mov
cmp
icebp
mov
xor
ret
mov
iret
lea
adc
mov
es
add
(bad)
inc
add
add
int3
xor
bts
push
mov
sbb
mov
adc
repz
jge
push
outs
inc
mov
test
fild
cmp
xor
or
stos
add
xchg
xchg
xchg
add
add
add
push
add
outs
jb
add
ins
jo
jae
popa
jp
outs
outs
and
fs
imul
outs
outs
popa
ins
imul
add
add
sbb
add
and
and
add
jb
xor
add
add
dec
add
add
sldt
inc
add
inc
xchg
add
add
add
popa
xor
and
adc
adc
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
add
ins
add
jb
add
popa
add
add
add
add
add
push
add
add
adc
inc
add
popa
add
jb
popa
add
imul
and
inc
add
imul
add
sbb
popa
xor
sbb
add
add
add
add
push
add
gs
je
add
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
or
adc
pop
add
or
sub
dec
add
add
add
add
add
add
add
pop
inc
inc
push
push
push
push
inc
adc
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
test
add
add
add
add
sub
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
ja
ja
ja
add
ja
ja
jo
adc
ja
ja
or
ja
add
ja
xchg
inc
ja
ja
js
push
(bad)
ja
xchg
pop
pop
ja
ja
jg
add
(bad)
ja
test
jo
add
ja
int3
rol
ja
ja
(bad)
ja
ja
ja
ja
ja
ja
ja
ja
int3
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
dec
dec
cmp
call
add
je
popa
bound
cs
imul
ins
add
jp
add
add
add
imul
add
inc
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
call
mov
add
inc
aaa
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
push
add
popa
ins
jo
add
add
adc
or
or
or
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
add
add
popa
xor
and
adc
pop
add
add
or
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
add
ins
add
jb
add
popa
add
add
add
add
add
push
add
add
or
add
add
jb
popa
add
pop
add
outs
add
imul
popa
je
xor
sbb
add
add
add
add
add
add
popa
xor
and
adc
adc
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
add
ins
add
jb
add
popa
add
add
add
add
add
push
add
add
or
inc
add
je
je
jne
jb
popa
add
sbb
popa
xor
sbb
add
add
add
add
add
ins
ins
popa
outs
xor
add
push
add
imul
sbb
or
or
or
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
or
arpl
je
add
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
adc
push
iret
add
pop
add
or
sub
dec
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
test
add
add
add
add
sub
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
ja
ja
ja
add
ja
ja
jo
adc
ja
ja
or
ja
add
ja
xchg
inc
ja
ja
js
push
int3
ja
xchg
pop
pop
jl
(bad)
or
add
ja
pop
test
jo
add
ja
ja
pop
(bad)
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
int3
ja
ja
int3
(bad)
ja
ja
ja
ja
ja
ja
ja
ja
inc
cdq
add
or
arpl
je
add
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
push
sbb
pop
add
or
sub
pop
add
add
add
add
or
add
add
add
dec
push
inc
dec
dec
inc
and
inc
dec
push
dec
dec
push
dec
push
inc
adc
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
test
add
add
add
add
sub
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
ja
ja
ja
push
emms
ja
ja
and
ja
ja
call
ja
add
ja
xchg
inc
ja
ja
js
push
ja
pop
xchg
pop
pop
ja
pop
or
add
ja
pop
test
jo
add
ja
ja
add
pop
ja
jno
jno
ja
ja
jno
jno
ja
ja
ja
pop
jno
adc
ja
ja
ja
ja
ja
ja
ja
ja
inc
jbe
add
clts
add
bound
add
and
push
push
inc
gs
outs
gs
imul
bound
push
push
dec
outs
fs
popa
bound
add
add
add
verw
sub
add
push
add
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
hlt
add
add
add
(bad)
(bad)
push
add
add
add
add
push
add
adc
add
sldt
xor
mov
add
add
adc
add
push
add
or
add
push
add
add
add
push
add
add
add
or
add
add
add
or
add
pop
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
push
popa
push
add
or
jecxz
stos
add
push
add
add
nop
add
add
popa
outs
jae
push
gs
data16
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
push
popa
push
add
or
jecxz
stos
add
push
add
add
mov
add
popa
outs
jae
push
gs
data16
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
mov
jp
jp
mov
add
fdivr
jp
jp
add
add
add
fadd
(bad)
add
fdivr
jp
jp
add
add
fadd
(bad)
add
fadd
(bad)
add
fdivr
jp
jp
add
mov
dec
fadd
(bad)
add
fadd
(bad)
add
fadd
(bad)
add
fdivr
jp
jp
add
mov
push
fadd
(bad)
add
fadd
(bad)
add
fadd
mov
mov
push
fadd
(bad)
add
fadd
mov
add
mov
push
fadd
mov
mov
dec
mov
add
mov
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
jg
(bad)
clc
aas
(bad)
push
pop
(bad)
jmp
ud0
rol
jmp
ud0
lock
(bad)
(bad)
clc
aas
(bad)
(bad)
cld
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
(bad)
(bad)
(bad)
(bad)
inc
adc
jo
jae
popa
jp
outs
outs
and
fs
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
add
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
add
je
outs
outs
add
pop
add
push
je
ins
jo
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
jmp
add
add
and
add
add
add
je
outs
outs
add
pop
add
inc
gs
outs
add
add
add
or
sbb
push
add
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
jmp
add
add
add
add
push
add
popa
ins
xor
add
push
add
fs
imul
add
(bad)
inc
add
out
pop
adc
add
add
add
add
je
outs
outs
xor
push
add
add
arpl
jne
popa
and
jae
popa
ins
add
add
mov
inc
add
pop
or
add
add
add
or
add
add
je
outs
outs
xor
push
add
add
je
jne
popa
and
push
outs
imul
xor
add
(bad)
inc
add
pop
inc
adc
pop
add
add
add
add
je
outs
outs
xor
push
add
add
gs
outs
je
jbe
add
add
add
outs
mov
inc
add
scas
add
add
add
add
add
add
je
outs
outs
xor
push
add
add
imul
push
outs
imul
xor
add
(bad)
inc
add
pop
or
add
add
pop
add
add
or
add
add
je
outs
outs
xor
push
add
add
imul
inc
arpl
imul
add
xor
add
(bad)
inc
add
pop
or
add
add
pop
add
add
add
pop
add
je
outs
outs
xor
push
add
add
add
add
add
outs
mov
inc
add
scas
add
add
add
add
das
add
or
add
je
add
add
add
add
or
or
add
add
pop
add
push
push
push
dec
dec
add
adc
xor
inc
das
add
or
add
je
add
add
add
add
or
or
add
add
pop
add
push
push
push
dec
dec
add
adc
xor
inc
jl
add
or
add
popa
xor
sbb
pop
pop
add
ins
je
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
(bad)
in
add
inc
jne
imul
add
add
xor
add
out
add
inc
outs
bound
rol
add
add
adc
add
or
add
and
add
(bad)
fild
test
or
or
push
or
pop
push
pop
or
or
or
movups
adc
adc
adc
adc
pop
pop
sbb
pop
pop
and
and
and
and
add
or
femms
nop
adc
and
and
and
and
and
and
and
and
and
and
ret
or
ins
add
add
add
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
adc
add
add
add
add
add
add
add
add
add
add
adc
add
xor
xor
inc
xor
pop
adc
add
add
add
add
add
add
adc
add
inc
adc
and
add
adc
rcl
mov
add
xchg
adc
rol
xchg
and
inc
adc
add
add
add
add
add
add
add
add
add
adc
add
xor
inc
push
adc
and
add
add
add
add
add
add
add
and
inc
adc
jno
xchg
and
loope
fiadd
or
add
add
add
add
add
out
xchg
mov
jmp
cmp
mov
inc
push
(bad)
push
cwde
mov
sub
fdiv
pause
xor
pop
push
xchg
mov
sub
jae
mov
xor
add
scas
jns
cmps
repz
jmp
push
sbb
sbb
ss
(bad)
mov
lods
mov
xchg
lahf
(bad)
ss
retf
sub
mov
push
inc
scas
lods
cmp
fwait
mov
repz
mov
pop
bound
dec
xchg
mov
inc
inc
inc
ret
imul
ds
pop
mov
imul
xlat
aam
jo
into
test
jae
adc
add
cmps
push
dec
pop
ficomp
jb
and
rol
iret
in
clc
or
stos
fwait
push
into
jnp
xor
push
mov
ror
mov
dec
iret
sbb
push
push
jp
pop
add
mov
(bad)
jns
scas
stc
sahf
into
sbb
push
out
stc
sub
jge
popa
hlt
mov
lods
out
les
inc
ret
mov
das
push
xor
lods
adc
pop
mov
xchg
ror
or
rcl
mov
rol
xchg
mov
addr16
mov
jb
adc
in
fisubr
mov
cmc
jecxz
stc
xor
and
pop
add
cmp
push
or
mov
mov
jp
movs
jmp
in
or
jmp
pop
test
lea
(bad)
cli
jb
jns
clc
fild
(bad)
cld
jmp
daa
xchg
push
and
mov
mov
clc
and
shr
inc
xor
sbb
pop
dec
xor
hlt
inc
pop
cwde
scas
sub
sbb
pop
retf
test
xchg
(bad)
fidiv
inc
cmp
and
in
push
or
pop
cmp
pop
xor
lock
cmp
call
movs
setp
test
mov
xchg
xchg
imul
outs
sbb
cmp
ret
test
xchg
shr
mov
push
jae
jae
retf
xchg
mov
and
stos
and
or
fdiv
lods
pop
push
push
sti
cmp
cmp
sbb
lds
mov
inc
fwait
xlat
sahf
popa
mov
cmp
repnz
outs
mov
and
cli
adc
jge
repnz
pop
leave
(bad)
fiadd
or
add
add
or
or
(bad)
mov
in
xchg
mov
lods
adc
lods
inc
xor
outs
stos
cmp
ss
dec
retf
frstor
or
mov
jbe
dec
inc
mov
sbb
out
push
test
xchg
fdivr
push
fwait
xchg
push
in
or
add
(bad)
ror
mov
arpl
(bad)
clc
inc
and
sub
mov
adc
jnp
mov
out
jb
(bad)
xchg
add
ins
inc
ds
mov
lahf
lods
sub
dec
cmp
pushf
out
cmp
inc
cli
add
popa
jb
ins
push
or
leave
(bad)
call
mov
jbe
xchg
outs
jle
scas
xor
mov
popa
pop
fiadd
xor
imul
out
pop
pop
pop
pop
mov
mov
movs
add
out
mov
les
dec
outs
inc
xchg
or
push
outs
xor
and
xchg
or
test
cmps
lods
mov
cmp
in
adc
sub
sub
mov
cmp
sub
(bad)
fiadd
or
add
add
sub
jb
mov
cli
and
xchg
mov
cmp
xor
cmps
or
push
fnsave
mov
cmps
sbb
aam
sbb
cmp
lea
pushf
mov
sbb
aad
adc
pop
mov
loope
in
inc
cmp
mov
(bad)
adc
add
add
mov
xor
sbb
in
in
loope
rol
push
or
sub
gs
push
cdq
pop
mov
adc
jmp
push
test
mov
gs
cli
sub
add
out
dec
call
add
sbb
add
jb
shl
xlat
repnz
je
mov
ds
xchg
adc
out
dec
popa
retf
int
jbe
cmps
sbb
ins
pop
pop
pop
jge
dec
mov
je
adc
in
mov
xor
inc
push
jmp
cld
call
popf
or
lea
pop
lock
mov
leave
sar
sub
es
daa
pusha
and
push
mov
xor
ja
jp
aad
inc
pop
(bad)
fiadd
or
add
add
jae
div
sub
stc
xor
lea
inc
and
std
pop
stc
jo
std
mov
loop
and
sbb
and
cmp
enter
stc
fidiv
loop
in
cmps
pop
mov
sub
inc
xchg
loope
mov
xchg
pushf
xor
or
jb
(bad)
xor
and
mov
leave
jge
(bad)
sbb
fild
pop
pushf
xchg
fdivr
push
ret
ds
push
xchg
cmps
in
cmps
sti
cmp
add
mov
sub
(bad)
mov
fnstcw
xchg
scas
inc
in
lods
xor
out
pop
fucom
test
xchg
fwait
sahf
loopne
sar
test
push
dec
xabort
sbb
cmp
out
out
or
mov
lea
clc
xor
dec
push
mov
jne
cdq
sub
mov
and
fisubr
int
xor
xchg
adc
leave
iret
dec
sbb
xor
fldcw
rcl
push
jge
mov
mov
outs
xchg
aad
and
in
dec
mov
fdiv
int
fwait
xor
je
adc
ins
mov
jnp
gs
cmc
mov
(bad)
push
pop
mov
retf
xor
stos
inc
dec
or
(bad)
cmp
pushf
fstp
call
jbe
mov
sub
imul
outs
rol
dec
fld
mov
sub
mov
pop
xor
jg
cmp
(bad)
cmp
mov
mov
cmps
std
xchg
dec
repz
(bad)
not
mov
sbb
cmps
and
out
mov
mov
inc
xchg
mov
fdivrp
cmp
pushf
test
pop
sbb
mov
out
sub
arpl
ins
ret
aaa
mov
lods
popa
cmc
and
ins
xor
lahf
call
jbe
cmp
mov
mov
sar
je
mov
jle
mov
xchg
cmp
jl
arpl
mov
retf
nop
jg
enter
pop
movs
mov
push
xchg
pushf
jecxz
push
jl
xchg
push
pop
cmps
data16
adc
outs
mov
fwait
aas
and
pop
fwait
xchg
mov
mov
ja
inc
shl
jl
mov
je
ja
scas
push
dec
sub
data16
xor
dec
lahf
cli
call
push
or
pop
adc
mov
jecxz
or
icebp
jl
gs
cld
mov
add
fnstcw
inc
mov
enter
or
cmp
mov
jmp
mov
das
mov
dec
(bad)
clc
dec
inc
mov
es
sbb
sbb
mov
shl
imul
test
movs
mov
cmp
and
cmp
adc
(bad)
push
in
(bad)
fcom
ins
rcl
pop
movs
and
sbb
jns
faddp
outs
jae
mov
cmc
enter
out
xor
repz
neg
call
les
dec
or
mov
add
mov
sbb
sbb
mov
sbb
icebp
dec
xchg
(bad)
fcmovnb
fsubr
(bad)
jecxz
push
xchg
mov
cmp
inc
cmp
mul
xor
(bad)
jo
out
mov
arpl
jecxz
lock
jecxz
icebp
xor
sub
cs
fs
mov
fstp
fcomp
fucomip
repnz
pop
icebp
xchg
loope
test
icebp
mov
add
add
add
aas
add
xchg
in
inc
adc
pop
inc
mov
repnz
dec
call
lods
mov
cmp
lods
pop
inc
mul
aam
or
out
push
push
sbb
sbb
out
(bad)
fiadd
or
add
push
aas
add
hlt
ds
sub
(bad)
jne
pop
mov
xchg
aas
int
sbb
inc
sar
xor
mov
add
sti
inc
cmp
popf
aam
sub
xchg
mov
mov
cmp
or
(bad)
or
scas
loop
xchg
sahf
fist
retf
aas
(bad)
fiadd
or
add
push
aas
add
cmp
mov
push
aas
sub
add
add
jae
push
sub
mov
shl
stc
xchg
mov
mov
xor
repnz
shl
lahf
fs
lahf
xchg
loope
ins
inc
mov
sub
cmp
arpl
push
fwait
arpl
jbe
push
sbb
push
xlat
push
xor
arpl
and
inc
dec
mov
arpl
push
cli
and
jge
pusha
adc
ret
inc
cmp
sbb
fist
cmc
dec
cdq
pop
dec
out
adc
and
dec
jl
test
jl
sbb
mov
cli
xchg
add
and
test
mov
int
movs
lods
mov
popf
push
(bad)
idiv
mov
mov
stos
imul
jno
and
xchg
push
push
jne
and
jp
(bad)
js
je
mov
rcr
adc
jbe
hlt
imul
es
(bad)
in
dec
repz
mov
out
xchg
pop
mov
shr
out
out
xchg
push
ss
arpl
jg
imul
push
sbb
imul
xchg
daa
loopne
(bad)
aam
sti
lahf
jmp
ins
ins
lods
int3
dec
cs
out
cmp
mov
xor
outs
sbb
sub
push
stos
movs
or
jae
push
jge
movs
pop
movs
or
mov
loope
int3
jae
and
add
sbb
ss
lock
push
pop
adc
inc
fwait
dec
mov
(bad)
(bad)
xchg
fist
mov
ins
xchg
inc
or
iret
cmp
mov
lods
out
aaa
or
inc
fstp
xchg
xor
jle
aam
mov
stc
pop
cmp
pop
inc
into
cwde
ret
ins
jne
pop
cdq
mov
enter
add
test
cmps
pop
cs
mov
outs
jae
bound
gs
dec
add
mov
bound
add
push
push
adc
cmps
add
dec
clc
jmp
jge
xchg
push
dec
pop
outs
call
cmp
push
sub
sbb
in
nop
(bad)
call
in
mov
cs
dec
sub
in
mov
jg
fs
cmp
pop
fcomp
inc
ret
stos
rcl
mov
mov
pop
loop
loope
into
aam
movs
fnsave
sbb
test
jo
dec
push
xchg
cli
(bad)
mov
sbb
test
push
adc
popa
outs
pop
aas
xor
pop
lods
(bad)
outs
and
in
adc
mov
pop
pop
push
adc
fnstsw
inc
push
in
popa
inc
ret
(bad)
or
retf
add
pushf
jno
mov
jecxz
push
out
sbb
data16
shl
push
jo
out
jle
sbb
cmp
pop
adc
mul
arpl
add
and
mov
adc
cwde
les
in
xor
imul
imul
sahf
jae
mov
ins
vmwrite
stc
outs
nop
iret
movs
jmp
pop
ret
push
ret
ins
iret
ins
movs
cmp
xchg
in
cmp
jmp
jbe
xor
rcr
add
lods
movs
mov
jp
and
stos
mov
xor
ror
shr
pop
xchg
jne
dec
loope
retf
scas
add
test
xchg
xchg
lds
mov
jle
sub
dec
in
stc
xchg
adc
add
popa
pop
dec
aam
cmps
pop
or
stc
mov
push
inc
mov
outs
es
aad
fsub
(bad)
in
xchg
in
adc
pusha
ss
adc
adc
jecxz
fisttp
shl
scas
int
es
or
jmp
test
les
lods
jb
jnp
mov
out
push
or
and
stos
xchg
cli
dec
jmp
enter
ret
pop
jnp
inc
(bad)
mov
retf
push
in
shr
and
and
adc
inc
test
fwait
dec
and
mov
adc
cwde
mov
lahf
jge
loop
push
or
nop
adc
cmp
popa
or
push
repnz
adc
sti
jne
repnz
xor
(bad)
fidivr
dec
loope
dec
inc
(bad)
pop
cwde
fsub
or
jg
dec
cwde
jecxz
xor
ret
imul
pop
jmp
lahf
retf
in
fld
add
rcr
(bad)
adc
inc
adc
fisttp
jne
push
xchg
stos
pop
cmp
cmp
ins
fisub
xchg
or
xor
inc
dec
push
mov
mov
push
xchg
inc
cmp
(bad)
mov
call
movs
imul
(bad)
int
rol
inc
add
dec
sbb
ins
mov
ret
test
out
fld
loop
sub
dec
dec
cmps
or
xchg
ins
dec
leave
jo
test
mov
(bad)
(bad)
xchg
jl
adc
int3
adc
imul
add
cmp
pop
into
retf
outs
clc
dec
pop
(bad)
outs
ret
adc
in
mov
sub
cdq
iret
adc
inc
xor
frstpm(287
mov
shl
push
pushf
aaa
mov
inc
mov
xchg
add
add
mov
outs
jmp
int3
stos
retf
mov
les
enter
or
pop
xchg
pusha
xchg
les
int3
jo
fwait
mov
aas
stc
mov
aas
dec
mov
test
and
std
inc
mov
js
fwait
(bad)
out
mov
ins
lahf
leave
pop
aas
out
aad
scas
clc
sub
imul
ror
mov
fld
aad
mov
lea
pop
dec
push
(bad)
sar
adc
gs
aas
ret
adc
lock
loope
retf
mov
pop
dec
xchg
lea
(bad)
es
xchg
(bad)
mov
je
mov
ins
push
cmp
mov
sub
jbe
jb
jmp
lds
jo
sub
mov
mov
and
cmp
(bad)
fcmovu
dec
mov
stos
mov
fcom
mov
pop
stos
sub
mov
xchg
inc
sbb
pop
sbb
test
push
xchg
push
ins
ss
pop
cmp
lea
in
popa
jg
sar
lahf
out
cmps
aas
cs
xchg
xor
pop
inc
mov
(bad)
sar
adc
sub
test
mov
mov
mov
and
mov
(bad)
rcr
add
fist
inc
scas
pop
mov
cmps
nop
and
xchg
cmps
cmp
shr
lea
add
cmp
dec
push
sar
inc
scas
xchg
cmps
mov
or
test
adc
inc
or
cwde
jmp
aad
mov
fadd
push
push
(bad)
mov
jecxz
or
clc
out
push
xlat
xchg
adc
mov
xor
push
push
es
adc
(bad)
xchg
sub
mov
(bad)
xchg
inc
dec
fnstcw
pop
dec
popf
xchg
and
adc
jmp
movs
sbb
or
cmps
pushf
enter
loopne
dec
push
scas
pusha
test
xor
lock
add
mov
jne
or
xor
pop
js
retf
xchg
adc
or
loope
dec
and
ror
bound
push
or
mov
push
jo
adc
dec
cdq
dec
adc
inc
cwde
push
sub
imul
inc
lock
pusha
or
(bad)
xchg
or
into
sub
out
lds
push
push
pop
and
je
cmp
(bad)
jbe
je
push
xchg
sbb
call
add
add
aas
adc
xchg
xchg
call
adc
aad
bound
sub
mov
push
cmc
or
call
pop
ja
jns
scas
rol
jno
xor
mov
(bad)
(bad)
and
xchg
jmp
scas
adc
es
ins
lods
movs
mov
inc
call
lods
movs
push
test
mov
mov
xchg
dec
ror
sub
test
aaa
sub
dec
je
push
mov
cdq
(bad)
repnz
push
push
adc
push
jmp
mov
dec
pop
lock
push
jle
ss
fisttp
inc
add
test
jae
inc
out
sub
gs
ret
ins
sub
pop
icebp
rcr
add
jge
mov
sbb
popa
clc
dec
movs
push
and
push
dec
iret
cmp
inc
adc
or
sub
sub
shl
in
fild
cld
es
test
jmp
pop
arpl
shl
mov
ins
fwait
mov
dec
test
arpl
mov
sbb
or
add
retf
fisubr
rcl
jae
xchg
or
mov
nop
dec
jmp
push
addr16
xor
bound
xchg
jle
and
fadd
adc
pop
sub
ds
fcomp
lock
bound
bound
dec
cwde
pop
outs
scas
jg
(bad)
fiadd
or
add
add
adc
call
sbb
cmp
shl
sub
inc
call
out
inc
adc
popa
cdq
xchg
push
push
xchg
mov
pop
mov
push
nop
xchg
stc
(bad)
jo
icebp
cmps
push
pop
pop
push
imul
ror
sbb
scas
(bad)
push
sbb
daa
cmp
adc
fs
add
mov
das
das
or
xchg
xor
(bad)
dec
(bad)
(bad)
in
push
xor
test
test
scas
rcr
adc
in
test
cmp
or
sub
add
adc
retf
push
push
jmp
xchg
and
pop
neg
mov
les
dec
cmp
dec
sub
pop
pop
cwde
repz
push
pop
inc
inc
push
push
les
mov
inc
test
inc
pop
in
sbb
movs
int
inc
neg
lea
stos
add
pop
mov
retf
sub
pop
fsubp
jbe
xchg
ret
(bad)
cmp
jno
bound
sbb
pop
jno
in
sbb
pop
call
pusha
ins
retf
add
addr16
add
dec
ret
jo
aad
adc
iret
adc
adc
or
sbb
js
sbb
xor
call
inc
add
nop
ins
mov
mov
push
shl
addr16
lods
xchg
push
fwait
jae
pop
ret
xor
and
push
cwde
mov
cmps
sub
push
fidiv
cmp
addr16
(bad)
test
mov
xchg
shl
xor
xor
xor
mov
add
fiadd
or
add
add
adc
in
rol
aam
out
loop
pop
test
dec
push
mov
mov
fstp
adc
sub
arpl
test
mov
inc
jg
adc
into
add
rol
sub
iret
pushf
inc
imul
cmp
jb
mov
adc
xor
in
ins
and
jmp
and
test
das
(bad)
dec
pop
mov
icebp
inc
xor
pop
lock
xchg
push
push
or
or
stc
test
jbe
das
cld
xchg
mov
scas
push
aam
js
arpl
jp
les
cmp
jecxz
xor
mov
retf
push
rol
fsub
test
bound
repnz
imul
mov
mov
inc
mov
pushw
in
push
mov
push
retf
adc
jae
shl
add
icebp
test
push
(bad)
ja
das
push
sub
xchg
pop
jmp
ins
pop
mov
pusha
not
mov
inc
sub
push
pop
sbb
cmp
jb
shl
pusha
scas
inc
ins
pop
gs
mov
xchg
xor
and
ret
mov
daa
je
(bad)
push
push
adc
or
loop
inc
mov
adc
sub
jecxz
adc
push
ret
xor
pushf
mov
cwde
jg
mov
cwde
xor
fisttp
xchg
and
movs
pop
xchg
jns
sub
aad
sbb
lock
add
sbb
xor
repnz
xchg
(bad)
push
jbe
inc
jmp
or
mov
es
cmp
fnstcw
inc
loop
stos
inc
push
mov
(bad)
movs
addr16
mov
les
add
or
and
mov
out
add
jbe
call
jb
dec
maxps
jne
jns
push
cmp
add
je
sbb
xchg
sbb
arpl
pop
inc
add
cwde
out
and
dec
adc
ss
dec
in
popf
scas
sub
and
inc
mov
inc
(bad)
data16
test
push
inc
push
add
movs
mov
div
sub
jmp
push
mov
(bad)
iret
sub
outs
inc
pop
cwde
add
xor
xchg
mov
xor
and
xor
and
das
mov
mov
mov
sub
push
sub
sub
cwde
or
dec
pop
sbb
stos
adc
mul
pop
mov
cmps
pusha
loop
repz
mov
xor
xor
or
movq
add
test
mov
in
mov
test
push
sahf
arpl
sar
add
icebp
push
dec
add
and
ja
push
cmp
push
or
outs
fidiv
sbb
scas
cmp
cwde
sbb
pop
ror
push
pop
rcl
out
ds
bound
loop
push
cmps
(bad)
clc
aaa
ds
sub
xor
sub
add
adc
aam
loop
es
push
out
and
lods
xchg
mov
sub
shl
push
inc
and
out
jbe
mov
add
cmc
cdq
or
and
out
or
leave
pop
cmc
push
shr
xor
pushf
mov
enter
pushf
icebp
adc
xor
lock
mov
inc
stos
ror
and
mov
add
inc
sub
iret
adc
leave
cwde
inc
cli
dec
mov
fnstcw
push
popf
add
pop
pop
jbe
inc
in
dec
(bad)
pop
mov
in
push
ss
sub
popa
adc
push
push
fsubr
ja
sub
jnp
inc
aaa
push
mov
add
fild
out
or
add
fst
xchg
jno
sbb
aas
add
ret
inc
in
add
lea
push
dec
jne
movs
retf
lods
out
fcmovu
mov
jle
retf
xor
dec
cmp
jo
and
jecxz
sahf
jge
adc
adc
add
pop
cdq
cdq
cmp
jnp
int3
add
cmp
mov
add
lods
cmps
and
(bad)
rcl
inc
stos
push
push
call
idiv
punpckldq
or
mov
push
pop
mov
ret
sub
jle
mov
sbb
loope
jno
push
(bad)
cmp
sbb
ficom
addr16
sub
stc
lea
xor
ja
test
adc
test
xchg
or
mov
(bad)
out
inc
les
retf
pop
(bad)
clc
xchg
push
mov
cmc
dec
fsub
outs
sbb
hlt
push
aad
es
ins
rcr
lods
xor
pusha
mov
mov
arpl
inc
movs
xchg
test
pop
pushw
adc
frstor
adc
(bad)
and
dec
jmp
jb
repz
nop
ds
pop
stos
retf
rcl
sub
inc
hlt
ja
push
sbb
(bad)
xor
jae
jb
jbe
xor
aad
test
add
leave
scas
lods
adc
loop
pop
test
push
pop
lods
xchg
cli
inc
rol
mov
xor
mov
movs
(bad)
sti
adc
adc
dec
das
fdivr
add
jmp
ins
adc
adc
push
pop
(bad)
movs
test
pop
inc
and
fdiv
dec
pop
jo
push
sbb
push
add
fxch
arpl
xchg
push
inc
arpl
add
jbe
mov
add
or
dec
fidiv
shl
lahf
pop
fsub
fsubr
stc
pop
test
cdq
xchg
jnp
(bad)
ins
and
add
cdq
mov
les
mov
test
pop
cmps
mov
xchg
push
je
mov
inc
mov
shr
aad
icebp
les
jmp
(bad)
inc
sbb
mov
jb
or
or
loop
imul
or
mov
dec
scas
(bad)
out
sbb
mov
push
mov
pop
push
jne
jle
sub
jb
xor
(bad)
adc
imul
js
out
stc
xor
stos
add
mov
sbb
fistp
scas
jns
push
push
pop
xchg
call
aam
adc
and
in
sub
add
aad
popf
and
dec
or
jno
or
inc
test
shl
fs
vmovdqa
out
push
dec
ins
and
xor
dec
mov
pop
xor
pop
mov
ret
adc
repnz
dec
xor
mov
or
gs
push
int3
(bad)
loopne
stos
push
(bad)
cmp
inc
mov
push
and
out
mov
rcl
push
pcmpgtw
dec
jl
in
in
mov
iret
push
aaa
aas
into
stos
data16
jmp
pop
push
out
ss
jge
mov
imul
gs
xor
(bad)
fld
lock
(bad)
pop
pop
or
inc
jmp
add
push
add
popa
addr16
sbb
add
add
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
ret
add
xchg
xchg
add
data16
mov
add
pop
pop
add
mov
add
scas
scas
add
ins
add
pop
add
jne
mov
cmps
cmps
add
int3
int3
add
inc
add
dec
add
aam
add
cmp
cmp
outs
ins
add
mov
add
loope
add
lds
add
(bad)
int3
add
mov
fild
fnstcw
add
mov
test
repnz
add
mov
lahf
add
retf
inc
mov
add
sar
add
int3
test
out
fwait
add
fcmovne
add
shr
add
(bad)
lods
add
xlat
mov
(bad)
fidiv
add
fistp
add
in
fld
(bad)
clc
icebp
add
std
sti
add
in
add
lock
push
jmp
sahf
jle
jo
add
scas
jbe
(bad)
(bad)
inc
(bad)
(bad)
inc
sti
sti
sti
add
cli
cli
add
clc
clc
add
div
add
div
add
hlt
hlt
add
repz
repnz
icebp
icebp
add
out
out
add
out
out
add
in
in
add
jmp
add
jmp
out
out
out
out
in
in
jecxz
jecxz
loop
loop
loope
loope
loopne
loopne
(bad)
fild
(bad)
fiadd
fcmovnu
fild
fcmovu
fiadd
(bad)
fld
fcomp
fadd
xlat
xlat
xlat
add
(bad)
(bad)
add
aad
add
aam
add
rcl
add
rcl
add
rcl
add
rcl
add
iret
iret
add
into
into
add
int
add
int3
int3
add
retf
retf
add
retf
enter
mov
mov
(bad)
ret
ret
ret
add
rol
rol
add
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
scas
scas
add
lods
lods
add
stos
stos
add
test
add
cmps
cmps
add
movs
movs
add
mov
mov
add
sahf
sahf
add
pushf
pushf
add
call
xchg
xchg
xchg
add
xchg
xchg
add
nop
nop
add
mov
add
mov
mov
mov
mov
xchg
test
test
add
add
add
jle
jle
jge
jge
jl
jl
jp
jp
jns
jns
js
js
ja
ja
jbe
jbe
jne
jne
je
je
jae
jae
jno
jno
jo
jo
outs
outs
outs
add
outs
add
ins
add
imul
addr16
data16
add
arpl
pusha
pusha
pusha
add
pop
add
pop
add
add
pop
add
pop
add
push
add
push
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
add
inc
add
cmp
add
cmp
add
xor
add
add
scas
fcmovu
int3
test
rol
add
add
loopne
adc
adc
jecxz
mov
add
add
fbld
adc
inc
pop
mov
(bad)
mov
push
jl
xchg
add
ret
mov
push
push
xchg
aam
shl
add
add
push
push
jg
mov
mov
pushf
jbe
inc
jo
fild
add
push
push
push
pop
or
int3
ret
mov
pushf
mov
dec
(bad)
stos
add
add
sahf
cwde
dec
dec
dec
push
push
push
pop
pop
mov
and
xchg
test
fsubr
popf
ins
dec
dec
push
push
push
pop
test
mov
xchg
movs
xlat
out
mov
add
fwait
outs
dec
push
push
pop
xchg
mov
mov
shl
jp
cwde
jae
fisubr
pushf
jno
pop
nop
mov
xchg
sar
inc
inc
mov
add
mov
mov
bound
push
pop
outs
adc
inc
inc
leave
fsubr
mov
pusha
bound
pusha
push
pop
push
push
push
bound
mov
mov
add
mov
bound
push
sub
ja
add
add
add
imul
jbe
push
push
push
xchg
pop
pop
pop
outs
ja
shr
stos
arpl
imul
push
push
push
push
push
push
push
pop
jb
mov
pop
pusha
lods
ret
add
add
add
test
imul
lahf
imul
push
push
push
push
push
push
pop
pop
popa
jnp
ins
retf
mov
mov
mov
addr16
push
push
push
push
pop
pop
test
add
add
mov
cmps
pushf
cwde
js
pusha
xor
add
add
je
xchg
imul
add
pop
and
imul
add
and
aaa
xor
sub
add
pop
cmp
cmp
cmp
cmp
cmp
or
add
sbb
cmp
cmp
cmp
cmp
cmp
sldt
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
add
and
cmp
cmp
cmp
cmp
cmp
sbb
add
add
cmp
cmp
or
add
sbb
inc
inc
inc
inc
inc
inc
inc
inc
adc
add
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
add
sbb
ds
add
push
push
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
or
add
or
or
or
or
or
or
push
(bad)
(bad)
jmp
add
inc
add
cld
add
pop
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
pop
cld
add
aas
cld
add
jg
add
(bad)
inc
pop
(bad)
inc
ud0
add
(bad)
inc
ud0
add
(bad)
cld
add
(bad)
cld
add
(bad)
clc
add
(bad)
clc
add
push
add
lock
inc
test
sub
loopne
loopne
inc
jmp
add
push
add
popa
addr16
sbb
add
add
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
(bad)
(bad)
inc
add
add
(bad)
sti
inc
div
test
out
out
jae
jae
(bad)
fiadd
(bad)
rcl
add
inc
add
dec
add
jmp
add
jecxz
add
rcl
add
rcl
add
ret
mov
fcmovnu
add
retf
into
add
mov
add
stos
lods
add
mov
add
mov
movs
add
dec
dec
add
jns
add
xchg
xchg
add
jno
add
xchg
xchg
add
dec
add
call
imul
mov
mov
mov
popa
arpl
into
imul
into
jno
add
jno
add
pop
pop
add
arpl
mov
arpl
into
jge
add
jge
add
xchg
(bad)
sahf
pushf
add
cmps
movs
add
cmps
movs
add
scas
lods
add
cmps
movs
add
scas
lods
add
mov
add
mov
mov
sahf
pushf
add
xchg
xchg
add
sahf
pushf
add
scas
lods
add
mov
add
mov
mov
add
mov
(bad)
mov
add
pop
pop
add
xchg
xchg
add
mov
mov
(bad)
(bad)
add
iret
into
add
stos
movs
add
inc
add
and
xchg
jae
(bad)
mov
mov
mov
inc
inc
add
push
dec
add
or
fimul
pop
add
xor
out
mov
out
add
sti
test
out
mov
dec
add
cmps
jae
test
pushf
add
xlat
lods
add
jecxz
add
jmp
add
xchg
cmp
mul
jae
call
add
out
mov
add
sub
jmp
mov
add
mov
add
mov
mov
mov
mov
add
call
jmp
and
jmp
sub
jmp
arpl
jmp
sub
push
xor
push
inc
add
mov
imul
retf
mov
inc
dec
add
ret
push
add
(bad)
pop
add
retf
arpl
dec
pop
add
iret
imul
shl
out
retf
jnp
out
fistp
add
xlat
jnp
not
mov
test
add
out
add
fstp
(bad)
fild
jmp
xchg
add
fistp
jmp
xchg
add
jmp
add
jmp
add
out
lods
add
jecxz
add
rep
add
iret
movs
add
test
add
cmp
add
div
add
inc
add
dec
add
push
and
inc
pop
cmp
add
add
ins
or
adc
add
ins
sbb
and
add
inc
add
inc
sub
xor
add
push
add
dec
add
retf
mov
arpl
(bad)
fiadd
mov
mov
or
add
imul
add
imul
add
xchg
add
pop
and
xor
push
add
xchg
sub
sbb
cmp
into
sti
(bad)
add
xchg
xor
sub
add
cmp
and
pop
add
push
cmp
and
push
add
jno
add
inc
xor
dec
xlat
jae
xor
arpl
xor
mov
mov
inc
dec
xchg
lods
add
inc
sbb
add
xchg
into
add
test
dec
mov
add
pop
xchg
add
dec
jae
add
add
pop
add
out
out
add
out
add
(bad)
inc
add
add
add
add
rol
rol
add
add
add
add
add
add
add
add
add
add
add
pop
and
pop
pop
dec
and
add
add
add
add
add
add
add
add
push
pop
inc
adc
dec
adc
inc
es
sbb
add
add
add
add
add
add
add
add
push
push
or
adc
inc
inc
aas
es
add
add
add
add
add
add
in
in
push
push
or
cmovl
inc
inc
aas
and
add
add
add
add
add
push
add
push
or
cmp
adc
and
pop
add
add
add
add
add
add
inc
in
in
add
add
in
or
sbb
sbb
inc
aas
pop
dec
add
add
add
add
add
add
push
adc
add
add
cmp
pop
add
add
add
add
add
add
add
inc
in
or
or
cmp
and
add
add
add
add
pop
(bad)
(bad)
les
add
add
cmp
push
cmp
sub
sub
xor
add
add
add
rcl
int3
into
les
add
add
push
xor
sub
sub
sub
add
mov
(bad)
rol
add
add
sbb
test
xor
daa
daa
daa
dec
add
add
mov
xlat
fcmovne
retf
add
add
add
inc
push
mov
xor
daa
dec
pusha
add
(bad)
retf
int3
aad
mov
add
add
and
mov
jnp
pop
das
and
int
fcmovnu
mov
add
add
adc
mov
add
fmulp
rol
add
add
add
add
cmp
lea
add
(bad)
retf
add
add
add
add
add
adc
xchg
xchg
xchg
xchg
mov
push
retf
rcl
enter
add
add
add
add
jg
arpl
ja
push
lods
mov
enter
add
add
add
add
add
cmp
je
xchg
call
lods
outs
imul
add
add
add
add
add
cmp
jl
call
jmp
mov
add
add
add
add
add
add
add
adc
call
out
call
and
add
add
add
add
add
adc
fwait
mov
loop
loop
call
add
add
add
add
add
add
add
imul
in
in
in
mov
add
add
add
add
add
add
cmp
lahf
mov
(bad)
in
in
movs
mov
add
add
add
add
add
add
ret
movs
cmps
cmps
stos
lods
lods
cdq
mov
mov
add
add
add
add
add
add
push
dec
pop
pop
jg
test
lods
lods
lods
mov
cmps
cmps
mov
add
add
add
add
add
add
or
push
sbb
sbb
stos
cdq
test
scas
cmps
pushf
sbb
add
add
add
add
add
add
add
cmp
dec
cmovl
sbb
es
pop
ins
jg
pop
add
add
add
add
add
add
add
add
cmp
cmp
dec
dec
inc
inc
inc
inc
inc
sbb
pop
pop
add
add
add
add
add
add
add
add
add
add
jg
cmp
jg
dec
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
(bad)
push
add
rol
inc
add
inc
add
inc
add
inc
add
inc
add
loopne
cld
add
add
pop
rol
pop
rol
aas
rol
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
inc
pop
(bad)
push
aas
(bad)
(bad)
(bad)
(bad)
inc
pushf
push
sub
loopne
loopne
inc
add
add
or
push
add
gs
xor
add
push
add
fs
outs
add
add
add
addr16
add
push
add
add
add
or
push
add
gs
xor
add
add
push
imul
add
add
or
adc
add
add
int3
xor
pop
push
inc
dec
mov
nop
mov
dec
push
int3
es
add
cmps
push
and
jae
dec
lods
xor
or
stos
add
xchg
dec
xchg
add
ins
add
add
push
add
ins
inc
jb
fs
jb
imul
push
jb
addr16
outs
and
jo
gs
and
cs
jb
imul
add
add
inc
add
add
ins
xor
add
add
add
push
dec
add
add
sbb
add
adc
add
add
add
dec
add
add
je
outs
outs
add
pop
add
push
jae
imul
inc
push
sbb
jne
sbb
push
add
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
add
ins
je
add
dec
inc
cmp
popa
mov
cmps
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
or
or
or
or
or
or
or
or
or
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
and
and
and
and
and
and
and
and
and
daa
daa
daa
sub
sub
sub
sub
sub
sub
sub
sub
sub
das
das
das
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
aas
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
popa
popa
popa
bound
arpl
fs
imul
imul
ins
ins
ins
ins
outs
outs
outs
outs
outs
outs
jo
jo
jno
jb
jb
jae
je
je
jne
jbe
jbe
ja
js
js
jns
jp
jp
jnp
jl
jl
jge
jle
jle
jg
add
add
test
xchg
mov
mov
mov
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cwde
cwde
cdq
cdq
cdq
call
pushf
pushf
popf
popf
popf
sahf
sahf
sahf
lahf
lahf
lahf
mov
mov
mov
movs
movs
movs
cmps
cmps
cmps
cmps
cmps
cmps
test
test
test
stos
stos
stos
lods
lods
lods
lods
lods
lods
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
rol
ret
ret
ret
(bad)
(bad)
(bad)
(bad)
mov
mov
leave
leave
leave
retf
retf
retf
retf
int3
int3
int3
int
int
into
into
iret
iret
iret
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
aad
(bad)
(bad)
(bad)
xlat
xlat
xlat
fcomp
fcomp
(bad)
fcmovu
fcmovu
fcmovnu
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
loopne
loopne
loope
loop
loop
jecxz
in
in
in
out
out
out
call
jmp
jmp
in
in
in
in
in
in
out
out
out
out
out
out
lock
icebp
icebp
repnz
hlt
hlt
cmc
cmc
cmc
div
div
div
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
or
add
fwait
shr
hlt
xchg
dec
pop
mov
or
sbb
ins
xlat
mov
jecxz
out
pop
mov
xlat
mov
sbb
jb
mov
shl
cmp
mov
cmp
scas
sub
mov
loop
jne
xchg
cmps
xor
or
into
pushf
mov
jecxz
mov
jbe
arpl
xchg
cmp
pop
dec
mov
cmp
pop
sbb
in
fiadd
loop
outs
xchg
mov
sar
jbe
pop
mov
iret
mov
fsub
inc
or
add
dec
pop
pop
outs
pop
or
push
xchg
or
test
ins
mov
rcr
sbb
retf
mov
sub
mov
push
js
sbb
nop
cmp
pushf
xchg
xchg
jo
into
pop
outs
pop
jnp
dec
fidiv
xchg
shl
pushf
push
jo
repz
(bad)
fcmovu
pop
sbb
dec
push
jb
sbb
jbe
inc
outs
jecxz
sbb
outs
cmp
pop
xchg
ss
inc
xchg
gs
lds
jns
ss
shl
inc
mov
movs
sbb
xchg
inc
ficom
xor
rcl
int
shr
or
dec
inc
pop
jge
popa
xor
jno
and
aam
add
iret
cmp
fsubr
movs
mov
cmp
test
into
ins
out
jae
addr16
xchg
loopne
jae
inc
pop
inc
dec
loope
loope
aaa
lea
jecxz
jbe
nop
push
fbstp
retf
hlt
xchg
mov
push
push
mov
je
mov
and
in
inc
dec
imul
sbb
dec
rcl
jg
mov
mov
cmps
add
dec
cmp
loopne
mov
sub
push
xor
cmps
aam
clc
in
cmp
lea
sahf
fsub
fnsave
(bad)
jno
xchg
mov
mov
pop
or
movs
test
and
push
movs
retf
int3
inc
lea
test
or
int
adc
test
lods
xchg
addr16
mov
cmp
or
popf
mov
aaa
test
sbb
xor
jo
push
nop
xchg
xchg
adc
outs
(bad)
sbb
jb
and
int
push
loopne
add
push
xchg
bound
loope
(bad)
dec
jno
fcomp
out
add
dec
cmp
xchg
xchg
adc
cmp
mov
cmp
jg
fs
push
not
push
scas
add
pushf
push
mov
jne
pushf
adc
shl
adc
xor
push
sub
jae
xor
ins
pop
push
xchg
test
inc
and
out
not
dec
cs
xchg
and
push
push
xchg
add
leave
xchg
xor
or
xor
inc
movs
out
fcmovu
jns
fwait
push
into
retf
xchg
call
outs
cmp
push
push
lods
xor
and
jns
xlat
clc
addr16
js
test
jle
pop
ror
xor
dec
mov
cld
popa
pop
call
or
pop
dec
xor
and
jmp
xchg
call
jns
pop
ss
xor
ss
inc
xchg
xchg
retf
adc
push
dec
mov
loope
cmc
inc
sbb
pop
mov
cmp
addr16
fidivr
retf
fisttp
xor
mov
adc
test
jp
or
mov
fist
xor
or
adc
outs
fadd
sub
mov
push
outs
js
sbb
retf
mov
push
jno
pop
push
fs
ficom
lods
or
adc
call
xchg
pop
std
push
and
ror
pop
je
iret
pop
inc
jg
mov
mov
mov
scas
mov
lods
xchg
out
xchg
arpl
xchg
adc
lods
fidivr
into
add
(bad)
mov
out
ret
sbb
pop
rcl
dec
cmp
dec
(bad)
aad
pushf
xor
ss
inc
pop
dec
arpl
mov
les
jae
or
dec
xchg
nop
adc
mov
or
add
nop
pop
or
pop
mov
mov
(bad)
mov
mov
inc
xor
aad
test
adc
into
add
xchg
xchg
add
(bad)
dec
jo
gs
imul
outs
inc
addr16
xchg
adc
push
xchg
pop
mov
adc
adc
xchg
and
addr16
ins
jg
lock
or
daa
jns
push
or
inc
jmp
jne
pop
xchg
retf
mov
lds
jb
inc
mov
ret
push
cmp
and
ss
aaa
lea
sub
adc
inc
aam
xchg
lahf
jle
stos
sahf
inc
cs
pop
inc
pushf
cmp
cmp
mov
inc
scas
jae
les
icebp
sbb
imul
mov
loope
cmps
xor
or
mov
or
and
stos
sub
fld
xor
jns
into
sub
daa
loop
rol
stos
sbb
xchg
les
call
je
arpl
push
lea
dec
or
cmps
xchg
add
xor
adc
(bad)
jae
rcr
sbb
adc
in
and
test
push
sbb
ret
mov
mov
je
sbb
rcr
adc
mov
push
xor
int3
sub
mov
dec
pop
pop
rol
mov
(bad)
push
jne
nop
sub
mov
cmps
stc
mov
call
dec
push
push
sub
enter
jmp
or
lds
popa
dec
data16
loop
adc
or
or
pop
mov
mov
jnp
aad
aaa
xor
test
cs
and
enter
jle
cmp
cmp
push
rol
and
std
and
cmp
or
int
push
fisttp
sub
mov
xchg
jg
sbb
sub
xor
out
and
mov
push
popa
aad
pop
stc
sub
or
push
fbld
and
int3
xor
or
add
cmp
jne
mov
xchg
fld
aaa
imul
xlat
mov
push
fnstenv
in
jo
jmp
mov
cmp
mov
pop
fist
mov
push
pop
arpl
test
adc
jmp
dec
call
cdq
fwait
dec
lods
lods
rcl
test
adc
or
adc
loope
rcr
sub
sub
ror
cdq
iret
loope
and
lods
push
popa
mov
sub
inc
mov
adc
jno
fs
or
stos
ffree
call
outs
mov
in
cmp
(bad)
(bad)
dec
push
ret
les
and
adc
lea
jmp
shl
sub
test
fcomp
adc
pop
sar
mov
cmp
stos
popa
dec
shl
lods
outs
in
dec
jo
pop
dec
test
stos
outs
xchg
sub
jne
push
mov
jge
mov
ret
out
jns
and
jno
dec
pop
cmp
cli
dec
adc
mov
adc
and
aaa
icebp
xor
ins
dec
sub
inc
inc
sbb
sbb
mov
push
inc
dec
mov
cmp
adc
aad
aas
xor
sub
push
mov
dec
out
cvttps2pi
jl
pop
sbb
jle
jmp
pushf
dec
dec
mov
call
fidiv
test
mov
mov
sahf
cwde
adc
dec
(bad)
aaa
je
mov
into
in
bound
sar
mov
fs
in
sub
cmp
ss
or
out
cmp
shl
ins
stc
jmp
cmps
fiadd
dec
fdiv
cs
and
pop
scas
fucomp
movs
inc
stos
les
xchg
daa
cmp
inc
mov
or
je
mov
test
mov
popa
es
and
(bad)
sbb
ficomp
mov
mov
or
fsubr
adc
call
sbb
xchg
fwait
push
xor
call
fisub
push
sub
push
fsub
cmp
pop
cmps
xor
inc
arpl
and
repz
adc
mov
enter
jo
into
inc
or
mov
xor
cmp
push
call
ds
push
push
sti
ror
nop
cmp
psrad
inc
popa
sub
push
pop
push
adc
bound
xchg
xor
jne
addr16
cmc
add
sub
push
push
mov
(bad)
push
sub
cmp
in
mov
xor
sbb
in
dec
mov
fsub
das
add
pushf
push
adc
dec
dec
add
adc
inc
sbb
cmp
in
jge
pop
repz
into
xor
xchg
dec
out
xor
push
jge
mov
in
js
call
inc
add
and
pop
inc
jb
adc
and
pop
cmps
dec
(bad)
jg
push
push
push
loope
xlat
loop
fsub
jbe
pop
cmp
dec
ins
push
inc
cld
add
and
push
repnz
icebp
sub
push
xor
jb
push
push
mov
mov
jl
or
xor
cwde
mov
mov
mov
std
push
adc
push
jg
daa
js
rcr
(bad)
es
xor
dec
fwait
add
mov
add
fisub
cli
gs
test
cmp
inc
mov
push
iret
test
hlt
xor
dec
aam
and
xor
bound
pop
int
jnp
push
pop
in
out
lods
enter
push
rcr
sub
or
mov
or
push
push
test
add
dec
ret
sub
add
and
cmp
adc
je
xchg
clc
adc
jmp
daa
lea
(bad)
push
and
addr16
push
and
jle
ret
hlt
adc
mov
sub
push
sbb
push
inc
sbb
xor
push
jne
(bad)
(bad)
push
and
lock
mov
jl
jne
mov
xlat
xchg
das
sbb
pop
in
cmc
push
mov
xchg
inc
sbb
push
inc
fidiv
jns
daa
mov
pop
cmps
ror
jae
out
push
jge
mov
xor
mov
sub
or
and
xor
ret
ss
mov
pop
ror
and
popa
push
pushf
mov
or
iret
bound
and
das
cmps
adc
mov
rol
xchg
adc
repnz
ins
pop
cdq
outs
scas
add
inc
fcom
dec
mov
xchg
sbb
sbb
loop
pop
jae
and
inc
fbstp
cmp
add
pop
xchg
xor
nop
adc
adc
in
push
and
cmp
jb
shl
call
mov
add
pushf
adc
leave
push
xor
popf
cs
lods
mov
cmp
mov
adc
sub
lahf
dec
test
and
test
or
sub
ret
inc
inc
add
js
xchg
shl
pop
adc
call
fwait
or
stos
ret
push
pop
test
inc
fcom
je
sti
rol
and
ins
push
je
fnstenv
and
icebp
lea
adc
outs
(bad)
cmp
pop
adc
js
adc
test
push
and
shl
inc
cmp
(bad)
push
aaa
adc
stc
dec
fsub
push
push
or
pushw
mov
push
mov
sbb
leave
adc
(bad)
push
jmp
push
(bad)
mov
and
imul
addr16
adc
xor
loopne
xchg
shl
daa
arpl
add
daa
rcr
inc
mov
push
ja
inc
daa
enter
jb
xchg
add
mov
push
add
mov
mov
mov
jo
jmp
cmp
push
inc
mov
call
push
pop
pop
das
xchg
mov
(bad)
xor
adc
clc
mov
xchg
inc
sbb
adc
xor
shl
push
pop
shl
les
pop
lods
jmp
xchg
dec
es
sti
xchg
dec
mov
jo
mov
in
sbb
adc
or
cmp
aad
aad
push
in
and
adc
xlat
adc
or
adc
icebp
or
mov
adc
pop
push
push
mov
adc
mov
push
cli
pop
js
jmp
jl
jo
sahf
es
xor
dec
xchg
sbb
and
icebp
pop
(bad)
mov
push
test
adc
sbb
test
push
jnp
xor
outs
xor
push
fs
push
sub
mov
ffree
cmp
test
xchg
test
aas
xchg
sub
retf
push
adc
dec
es
addr16
sub
adc
rcl
push
nop
stos
pushf
nop
aaa
fs
adc
movs
and
dec
xor
or
or
cmps
pop
xor
push
xchg
adc
adc
adc
jb
fstp
mov
jg
add
and
movs
pop
cmp
test
jnp
add
mov
lods
mov
push
dec
mov
repnz
je
mov
add
jb
sub
jno
aad
inc
mov
int
cmp
dec
daa
add
cmp
test
jmp
xor
mov
mov
or
nop
cmp
push
loope
adc
fadd
push
xor
movs
mov
xchg
mov
xchg
jl
push
ins
js
and
test
jno
outs
xchg
push
rol
outs
xchg
jb
bt
mov
loop
dec
shl
mov
push
movs
xor
jmp
xor
and
push
push
cmp
sbb
push
pop
cmps
add
fdiv
fs
loop
jmp
jmp
xor
jp
(bad)
cwde
push
call
(bad)
mov
pop
push
and
xor
(bad)
mov
inc
enter
shl
adc
adc
push
(bad)
push
and
sbb
adc
sbb
retf
imul
movs
test
mov
pusha
mov
or
sub
loop
inc
sbb
gs
mov
cs
scas
xchg
push
mov
mov
pop
loop
in
push
addr16
sbb
mov
pop
lahf
and
gs
add
inc
pop
mov
jae
and
mov
jo
test
sbb
push
inc
jecxz
nop
(bad)
adc
shl
and
out
outs
inc
pop
dec
sbb
in
pop
ja
mov
push
imul
leave
add
sub
adc
fwait
sub
shl
movs
pop
dec
mov
xchg
or
xor
adc
push
pop
loop
and
inc
dec
out
cmp
mov
mov
jno
inc
bound
rol
or
fld
sbb
scas
xor
mov
mov
pop
sbb
daa
and
mov
jmp
sub
sbb
inc
dec
push
mov
in
pop
call
repz
and
push
xchg
sbb
ins
stos
xor
addr16
cmp
jecxz
das
loop
pop
fist
clc
and
push
push
mov
sub
xchg
inc
loopne
or
sub
mov
imul
sahf
inc
mov
imul
out
cdq
(bad)
stos
call
iret
sub
push
and
sub
or
xchg
jbe
dec
and
rcl
and
xlat
loopne
imul
xor
std
push
call
and
inc
pop
(bad)
nop
mov
movs
rcr
dec
lock
mov
outs
mov
rcl
jb
xchg
sbb
jo
test
inc
mov
js
repnz
adc
push
loop
mov
mov
push
jl
repnz
test
loopne
or
inc
retf
and
xor
lock
jns
adc
xor
adc
loope
pop
jmp
mov
mov
rol
push
ja
inc
and
mov
adc
xchg
ins
mov
and
cmp
pop
xor
call
imul
aad
jb
out
cld
push
ret
adc
fnstenv
lock
iret
fsub
mov
or
xchg
push
mov
mov
adc
and
xchg
jae
mov
fwait
mov
lods
fbld
push
lods
push
bound
je
push
jge
out
or
push
and
jne
inc
cmp
fild
lock
adc
aam
or
(bad)
js
das
push
cli
or
popa
xor
mov
push
mov
add
push
sub
fidiv
cmp
push
inc
sub
mov
dec
mov
lds
adc
fcom
push
push
mov
cdq
movs
mov
xchg
adc
cwde
pop
pusha
es
and
cld
mov
add
fsub
sbb
adc
dec
xlat
inc
xor
mov
push
stos
inc
sbb
adc
and
aad
sub
xchg
into
push
push
mov
and
pushf
adc
and
dec
aaa
xor
aam
sub
test
popa
jge
jle
jecxz
add
sbb
mov
pop
scas
xchg
adc
cmp
pop
mov
push
inc
loope
sub
movs
inc
xor
adc
shl
inc
ret
inc
loop
stc
sbb
inc
adc
frstor
or
aaa
jb
inc
cmp
in
inc
fild
mov
es
ja
bound
xor
jge
jge
pop
xchg
fidiv
xor
dec
mov
cmp
push
or
and
xor
test
cmp
push
and
movs
inc
ret
adc
push
inc
mov
mov
sub
loope
ja
into
xor
shl
cmp
shr
push
int3
adc
xor
cwde
jb
dec
xchg
push
stc
push
ficomp
adc
push
push
in
int3
pop
push
jo
push
sbb
or
mov
hlt
xlat
ins
(bad)
jo
sbb
icebp
sub
fcmovnb
mov
push
fiadd
sub
or
mov
inc
xchg
pop
pop
bnd
rcl
push
xchg
mov
jg
xchg
jno
add
fcom
mov
mov
and
cmp
cmp
dec
rcl
jae
and
not
fs
ins
mov
stos
mov
popf
(bad)
jb
dec
popa
push
mov
xchg
fisub
or
mov
bound
inc
dec
movs
out
out
repz
sub
movs
dec
data16
pop
clc
aam
fsubr
adc
(bad)
jo
inc
cs
adc
pop
inc
lea
adc
popa
and
and
adc
mov
pop
andps
and
add
push
jge
xlat
push
nop
adc
dec
leave
nop
ins
and
int
push
aad
les
xchg
fbld
cmp
and
out
lea
imul
pop
mov
fnstenv
sbb
mov
ins
sbb
sbb
cs
movs
sbb
xor
call
jno
mov
ffree
mov
mov
pop
retf
xchg
xor
xchg
xor
aaa
outs
cmp
fdivr
and
push
fwait
ss
fistp
fdivr
(bad)
out
xchg
or
push
retf
xchg
repz
addr16
gs
in
fidiv
movs
fwait
out
(bad)
je
mov
lea
pushf
(bad)
outs
fdiv
pushf
inc
movs
jae
outs
cmp
ins
aad
mov
xor
jge
mov
outs
inc
mov
sbb
xor
iret
mov
cmp
ss
fadd
mov
shl
inc
into
sbb
lods
dec
push
(bad)
in
inc
ins
fidiv
inc
scas
fdiv
sub
dec
push
mov
cmp
scas
fidivr
div
xchg
dec
mov
mov
mov
push
pop
pop
xchg
ds
retf
mov
or
ror
cmp
cdq
(bad)
mov
in
sbb
rcl
cwde
call
ret
mov
sbb
mov
test
lods
adc
cmps
sbb
sahf
mov
repz
or
xchg
jmp
pop
mov
call
mov
sub
lods
ins
les
stos
stos
sbb
iret
sbb
jle
push
test
es
push
cmp
cwd
movs
test
add
and
jno
retf
gs
mov
mov
loopne
shl
mov
xchg
call
ds
es
ss
scas
dec
cwde
test
cmps
cmps
sahf
push
repnz
mov
xor
push
jmp
add
jbe
(bad)
cmp
stos
cmps
fwait
pop
leave
and
and
test
imul
call
or
cmps
sbb
pop
inc
push
mov
adc
sbb
jmp
sahf
dec
push
fwait
adc
sub
mov
ror
cld
push
ret
lods
xor
cmp
xchg
and
cmps
and
sbb
shl
stos
dec
push
push
adc
lea
mov
pop
pop
stos
iret
jp
mov
cdq
out
sbb
imul
adc
xchg
push
adc
test
dec
sub
ins
retf
mov
mov
sub
add
test
rcr
pop
fisttp
shl
ret
fcomp
(bad)
push
fwait
push
sbb
mov
cdq
aaa
movs
loope
sbb
mov
mov
mov
leave
inc
retf
dec
cmp
test
leave
imul
pop
(bad)
mov
cwde
mov
or
ror
pushf
outs
push
scas
data16
mov
int
imul
rol
aas
clc
fwait
jmp
and
aam
shr
mov
push
mov
sbb
clc
sbb
mov
cmps
pop
scas
xor
daa
fwait
adc
das
sbb
xchg
or
retf
lea
arpl
mov
pushf
imul
js
add
jmp
adc
or
sbb
stos
xchg
pop
inc
sbb
fwait
pop
cmp
icebp
xchg
mov
and
inc
mov
inc
or
cmps
mov
icebp
mov
xchg
dec
icebp
repnz
sbb
or
enter
cwde
lahf
xor
mov
les
inc
xlat
add
gs
mov
inc
dec
adc
cmp
in
xchg
jo
das
test
pop
ins
xor
and
rcl
call
inc
push
out
in
pop
rol
stos
or
dec
sbb
xor
sub
aaa
mov
jmp
jg
dec
cmp
mov
mov
pop
scas
test
js
sbb
inc
jl
sbb
test
sub
mov
ret
xchg
or
lea
sub
rcr
xor
dec
lods
lds
dec
pop
jmp
sbb
or
xor
mov
and
mov
or
(bad)
xor
enter
or
mov
arpl
jmp
sub
pop
movs
inc
popf
pusha
or
in
push
adc
fnstsw
sub
mov
jb
call
and
jo
xchg
mov
sbb
bound
ins
in
lahf
sub
inc
jmp
push
mov
retf
ror
idiv
nop
push
or
add
or
adc
das
lahf
bound
jb
push
dec
xor
push
dec
xlat
dec
push
test
mov
add
jbe
int3
pop
nop
dec
xor
dec
inc
jb
mov
mov
sub
ror
pop
repnz
aaa
ror
push
push
xchg
ror
mov
and
retf
inc
jo
adc
lods
test
fisub
inc
les
pop
sub
call
neg
aam
call
pop
mov
scas
push
inc
scas
data16
aam
adc
and
mov
mov
mov
dec
scas
push
adc
sbb
jmp
icebp
sub
movs
leave
sub
jae
push
xor
inc
sub
or
fs
(bad)
cmp
aad
add
xor
xchg
push
pop
inc
cwde
jnp
sub
dec
mov
xchg
mov
call
imul
or
je
sbb
inc
repz
mov
sub
mov
movs
sbb
pop
pop
xor
ror
inc
sub
cld
pop
dec
js
scas
test
pusha
inc
leave
sbb
xchg
(bad)
lods
shl
dec
pop
dec
ins
sbb
push
xor
push
sub
(bad)
cmp
jo
movs
or
xchg
or
arpl
shl
sub
jno
sub
outs
fwait
pop
inc
xchg
lahf
(bad)
ret
push
pop
xor
xchg
retf
xchg
xchg
rcl
in
adc
mov
push
jo
lods
push
jge
and
jmp
ror
dec
inc
xor
loope
jne
sbb
test
imul
or
cdq
sbb
icebp
cmp
ret
repz
xor
xor
test
in
adc
sub
jno
arpl
cmp
dec
jmp
movs
xchg
adc
stos
and
in
(bad)
pop
mov
mov
mov
cdq
pop
outs
mov
and
cmp
out
jb
les
push
test
push
sahf
test
adc
sub
jo
retf
sbb
mov
mov
cmp
test
jge
test
mov
pop
cmp
mov
add
fcom
data16
and
cdq
imul
mov
or
lods
xor
fcomp
ss
pop
cmp
inc
ret
xor
test
inc
mov
or
sbb
lea
mov
mov
xor
inc
add
into
enter
imul
enter
hlt
inc
ret
loope
ror
jno
movs
dec
arpl
sub
jns
popa
hlt
xlat
adc
ror
and
xchg
outs
mov
jmp
aaa
push
ins
inc
enter
dec
jecxz
sbb
iret
xor
ror
cmp
in
xor
and
sub
cdq
sbb
fsub
sbb
out
push
sub
(bad)
cmp
push
hlt
ja
test
into
add
cdq
mov
sub
xchg
xchg
mov
xlat
jb
cwde
js
pop
(bad)
push
cmp
jecxz
lods
adc
cmp
adc
push
jl
push
and
data16
xlat
adc
add
aam
ss
repnz
jnp
or
jb
mov
dec
pop
xor
sbb
ror
sbb
jb
(bad)
in
mov
xor
cmps
xor
sub
jmp
pop
popf
or
cmps
pop
loop
or
shl
mov
adc
cmps
test
sub
dec
dec
cli
test
aam
les
jo
cwde
jno
and
leave
and
inc
ffree
inc
pop
cmp
inc
ss
inc
or
out
stos
inc
jecxz
mov
mov
add
lahf
mov
push
xchg
sbb
movaps
push
sbb
or
dec
mov
jns
ret
idiv
adc
cmp
bound
add
fucompp
or
nop
adc
lods
sbb
ds
sub
js
fwait
ror
mov
mov
sub
push
mov
adc
cdq
ss
aaa
cdq
mov
cmp
cmp
cmp
jmp
push
rol
push
sar
mov
jne
xchg
cmp
or
adc
pop
dec
cmp
adc
stc
sbb
cmp
mov
cdq
push
cmp
mov
les
push
xor
cmps
cmp
push
or
xor
dec
pop
mov
mov
adc
xor
jb
ror
sub
or
stc
push
imul
mov
adc
mov
jae
add
stos
shl
cmp
pop
mov
cmp
mov
popa
push
push
jns
fadd
xchg
push
fwait
mov
loope
push
cmp
pop
mov
xor
call
cwde
inc
in
adc
loop
and
or
lock
adc
mov
or
and
leave
mov
add
add
cld
mov
mov
inc
cdq
or
call
shl
cwde
ins
mov
int3
dec
xchg
adc
push
add
inc
mov
adc
mov
push
push
push
test
ret
movs
rcr
mov
mov
repz
push
sbb
or
push
pop
dec
pop
xor
popa
jno
mov
les
xchg
mov
adc
pop
(bad)
hlt
dec
or
sbb
or
xchg
mov
or
dec
pop
fidivr
mov
sbb
or
pop
punpckhdq
ret
xor
sbb
jb
jmp
sub
push
sbb
or
inc
cmp
push
ins
rol
lahf
mov
and
gs
cdq
mov
retf
inc
ins
adc
cmp
rcl
nop
xchg
mov
dec
mov
mov
dec
mov
(bad)
jmp
sbb
fwait
sub
xchg
fwait
pusha
xchg
repz
scas
pop
push
arpl
adc
mov
lock
jmp
repnz
ret
repz
xchg
pop
xor
les
mov
inc
mov
xchg
add
icebp
fisubr
xor
adc
call
mov
xchg
or
sbb
test
sbb
push
mov
push
data16
repnz
adc
xchg
add
jae
and
dec
xchg
stc
or
mov
sub
or
pop
daa
xchg
sbb
sub
scas
imul
pop
mov
xchg
sub
int3
std
xor
arpl
xchg
ret
push
icebp
imul
cmp
shl
sbb
xchg
sub
mov
or
pop
mov
sub
loope
fiadd
pop
(bad)
loopne
movs
or
in
jmp
retf
jno
sub
js
mov
xchg
mov
cs
sbb
push
mov
cmp
fdivr
imul
hlt
dec
lahf
or
repnz
xchg
sbb
ret
xchg
lods
jmp
leave
cwde
push
gs
aad
popf
xchg
shl
into
js
mov
es
out
push
and
stos
outs
sub
sahf
rcr
nop
push
sbb
arpl
rcl
imul
adc
sub
xchg
dec
adc
sub
dec
mov
xchg
clc
(bad)
les
fnstcw
shl
test
daa
jmp
icebp
dec
mov
inc
adc
retf
ins
clc
mov
dec
das
test
es
push
and
std
sbb
mov
mov
or
jae
or
nop
arpl
jp
mov
(bad)
(bad)
xor
and
movs
push
popf
fwait
pop
pop
rcl
ror
add
or
outs
ins
inc
popf
fcom
ret
pushf
(bad)
loope
mov
and
push
mov
aam
repz
enter
add
pop
in
inc
sub
cmp
mov
jmp
add
cmps
jb
in
or
popa
nop
popf
imul
pushf
push
mov
add
or
xor
jl
cwde
clc
mov
mov
ins
cmp
cwde
mov
inc
adc
int3
(bad)
fcom
sub
test
call
int
pop
cld
xor
les
jecxz
jbe
lahf
add
sub
lahf
sbb
push
and
or
ds
jge
xor
pop
xchg
lahf
adc
mov
sbb
call
sahf
and
imul
sbb
ret
adc
mov
les
xchg
add
call
xor
pop
or
jns
or
retf
xor
ror
jne
sar
retf
push
push
leave
and
movs
ret
sbb
popa
xor
int3
pop
or
lea
retf
lock
not
stos
pop
xor
rol
addr16
push
loope
mov
sub
xchg
cmps
imul
sub
enter
cli
fdivr
pop
xchg
jge
mov
mov
loop
inc
jmp
mov
jae
mov
lea
sub
ret
xor
or
lods
pop
pushf
xchg
pop
push
jl
push
push
pusha
in
xchg
mov
les
push
rcl
jmp
add
sub
je
xchg
adc
in
mov
adc
mov
dec
les
mov
arpl
in
lahf
in
mov
and
pop
adc
out
dec
jle
mov
ror
fwait
or
pop
mov
dec
fsub
sti
mov
in
and
shl
mul
jle
mov
lods
mov
inc
ret
inc
sti
lods
push
outs
js
push
mov
dec
bound
sub
push
mov
imul
lea
push
sbb
retf
cmp
enter
movs
push
xchg
out
sbb
test
fisubr
jg
loopne
inc
mov
jo
and
adc
popf
jmp
adc
pop
(bad)
enter
adc
mov
mov
dec
inc
repnz
dec
mov
daa
pop
push
mov
lods
jns
mov
or
call
pop
inc
mov
sbb
adc
jns
addr16
xor
test
mov
xchg
sub
test
sub
pop
push
pop
mov
cmc
push
mov
lods
xchg
loopne
or
lahf
sub
mov
lock
or
ret
add
fmul
dec
(bad)
mov
fisub
scas
loope
test
daa
sbb
out
mov
sub
ret
xchg
fwait
(bad)
xchg
mov
xor
inc
cmp
bound
adc
sbb
data16
fwait
cmp
push
add
popa
pop
addr16
sub
arpl
shr
fst
sahf
into
cmp
popa
(bad)
gs
xor
pushf
jns
mov
xor
xchg
xchg
cmp
mov
mov
cdq
jmp
rol
clc
or
pop
xchg
pop
sub
movs
loop
mov
sbb
fs
shr
lods
add
inc
dec
or
mov
cmps
xchg
into
mov
push
je
cmps
call
xor
std
sub
push
push
sbb
mov
movs
inc
mov
adc
mov
stos
and
dec
mov
adc
rcl
in
dec
jmp
sub
sbb
mov
fisttp
xchg
cmp
sahf
sub
and
loopne
adc
mov
mov
lea
jmp
mov
movs
or
(bad)
lock
pop
scas
lock
xchg
mov
xchg
cmp
push
mov
jmp
mov
or
mov
popa
cmp
call
mov
cwde
pop
ret
rcr
jmp
stos
mov
rcl
lahf
inc
int
mov
jbe
pop
mov
or
dec
hlt
adc
add
cld
or
mov
or
retf
jmp
or
nop
sti
sub
and
xor
inc
pop
out
scas
(bad)
or
add
mov
sbb
es
dec
sbb
dec
mov
in
xchg
sub
push
mov
inc
push
js
xchg
xor
test
pandn
push
test
jb
pop
mov
dec
cmp
out
xchg
and
pop
cmp
fiadd
int
push
fadd
nop
sbb
pop
adc
stos
mov
loopne
jecxz
sub
push
inc
mov
push
pop
add
push
loop
add
ins
push
xor
or
mov
into
or
mov
dec
mov
mov
popf
popf
push
je
sbb
stos
xchg
xor
ror
mov
call
dec
jne
mov
js
or
push
lock
enter
rcl
pop
pop
retf
and
ret
sbb
or
mov
repnz
inc
jbe
or
xchg
push
leave
shl
pop
inc
xchg
xchg
mov
sbb
pushf
aaa
pop
fst
loopne
les
inc
jno
repnz
inc
(bad)
popa
cmps
js
or
or
xchg
jns
loop
adc
adc
mov
mov
mov
xor
push
std
mov
xchg
and
repnz
push
pop
gs
dec
lods
jb
cdq
cmp
or
sbb
leave
adc
outs
xor
cmps
or
movs
mov
icebp
xchg
pop
(bad)
test
scas
iret
aaa
inc
out
mov
or
sub
rcl
rol
mov
addr16
mov
mov
push
ds
leavew
xchg
dec
jnp
int
mov
xlat
stos
push
xchg
ss
loop
outs
fnstsw
sbb
stos
cmps
int
mov
iret
push
and
sub
sbb
xchg
mov
jecxz
xchg
jecxz
xchg
(bad)
dec
addr16
mov
or
in
imul
lods
stos
lods
sub
ins
fidivr
mov
push
aam
cmp
sub
xchg
dec
mov
nop
inc
stos
ror
fist
sbb
fwait
imul
shl
(bad)
jp
mov
call
sbb
pop
mov
pop
xor
and
scas
pop
mov
repz
sub
mov
in
dec
enter
mov
jae
call
mov
out
sub
lods
fisubr
mov
ins
aad
xchg
and
xor
mov
ficom
pop
xor
mov
repz
mov
sti
sbb
daa
mov
retf
xchg
add
pop
xor
(bad)
jle
ss
in
ss
aaa
aaa
jne
push
jno
xchg
or
outs
cwde
jne
int
inc
lea
sbb
test
into
mov
and
test
rol
pop
push
add
adc
xor
enter
imul
pusha
sub
lea
inc
xor
or
fsub
mov
inc
jae
test
fisttp
gs
xor
xor
pushf
aaa
fst
adc
pop
sbb
mov
cmp
jne
cmp
xlat
adc
lds
push
push
cmp
mov
add
adc
or
cmps
loopne
fisub
int
in
lea
pop
push
or
push
lea
nop
fld
lea
arpl
aaa
sub
gs
push
push
pop
test
int
push
add
and
ins
shr
jl
data16
aaa
mov
das
adc
sbb
push
movs
jbe
test
lea
(bad)
cmp
push
aaa
sub
dec
push
les
or
jb
xor
cwde
out
nop
push
jle
and
push
cmp
imul
adc
fnop
dec
inc
inc
inc
dec
aaa
rcl
adc
nop
inc
in
inc
cmps
test
outs
loope
out
xor
xchg
loop
pushw
movs
sar
adc
cmp
arpl
lahf
sar
int
adc
loopne
int3
sub
and
dec
jns
gs
ror
cmp
mov
(bad)
sub
push
dec
jmp
push
xchg
xchg
sbb
or
or
mov
push
jp
in
mov
mov
fldcw
pop
xchg
rcr
xchg
aam
inc
in
not
dec
mov
sub
fdiv
push
in
pop
pushf
mov
jmp
adc
pop
std
(bad)
je
xor
sub
or
jmp
dec
mov
push
(bad)
int3
xor
jns
shl
fadd
mov
mov
rcl
call
xor
push
xor
pop
aas
jae
loope
data16
retf
call
mov
loop
imul
clc
into
lock
and
add
(bad)
dec
jmp
scas
add
retf
jo
dec
test
sbb
leave
xchg
inc
mov
mov
loop
aaa
adc
shl
ss
or
aaa
sub
fisubr
ins
out
jp
add
aad
mov
fcom
movs
xor
dec
retf
adc
ins
dec
mov
movs
mov
(bad)
pusha
stc
inc
lods
call
sub
mov
or
inc
ret
sbb
xor
sub
pop
mov
clc
punpckhdq
add
mov
fwait
inc
mov
and
or
(bad)
je
inc
loop
inc
mov
pusha
xchg
call
int3
sbb
push
adc
bound
shr
mov
ins
test
fadd
or
cmp
and
test
dec
inc
mov
(bad)
lea
cmp
(bad)
shr
leave
cmp
sub
push
inc
and
mov
xor
jl
inc
dec
cmp
or
xor
cmp
sub
dec
lods
sbb
sbb
rcl
add
pop
je
inc
adc
sub
or
data16
int3
or
adc
inc
or
jb
pop
dec
sbb
movs
stos
mov
xor
dec
out
sub
mov
mov
inc
dec
xchg
pusha
test
aaa
enter
add
lahf
push
mov
sbb
jae
xor
push
pop
mov
add
es
lea
sub
nop
inc
retf
mov
ins
push
rcl
adc
sbb
call
les
ins
ror
in
sbb
sub
scas
cmps
or
(bad)
sar
sbb
cli
dec
ficom
push
or
ret
mov
and
mov
movs
call
xor
in
aas
sbb
es
fs
sub
aas
lea
cmps
dec
mov
and
test
dec
mov
push
cmp
sub
push
rol
push
mov
cli
mov
sub
test
jne
adc
xor
pusha
jnp
xlat
ss
(bad)
adc
ret
push
or
(bad)
fwait
dec
push
popa
inc
or
in
int3
xor
adc
fidivr
mov
inc
int
dec
sub
cwde
push
jecxz
mov
sub
fimul
(bad)
pop
add
push
(bad)
sahf
popa
xchg
and
xchg
or
stos
push
cmp
dec
push
std
dec
push
les
sbb
dec
push
jle
inc
or
push
mov
pop
shr
mov
je
push
fcomp
or
push
mov
mov
push
xor
or
dec
push
sbb
or
xchg
push
mov
dec
dec
jmp
jo
xor
cdq
sbb
stos
shr
mov
inc
int
inc
jb
and
push
movs
or
and
scas
stc
daa
sub
cmp
rcr
xor
into
xor
jne
cdq
add
and
les
movs
mov
sbb
and
jns
stos
jge
sbb
cmp
push
or
pusha
or
sbb
xor
lods
retf
inc
inc
xchg
sub
cld
and
dec
mov
lods
test
mov
shl
imul
pop
adc
ins
adc
into
fst
mov
loope
xor
sbb
jmp
xor
or
(bad)
retf
shl
inc
mov
ror
mov
mov
adc
(bad)
cwde
xor
mov
inc
sahf
jae
shr
ret
aad
mov
pop
xor
imul
cmps
mov
xor
js
jne
jae
cmc
cmps
in
inc
push
inc
sahf
inc
mov
jne
int
sub
inc
loope
fidivr
jno
scas
jno
pop
and
mov
adc
sbb
or
sub
daa
adc
sbb
jmp
xor
hlt
push
push
mov
and
jne
mov
stos
stos
int
repz
retf
gs
cmps
mov
jae
ror
or
inc
sub
cdq
dec
xchg
xchg
jge
xchg
mov
or
adc
mov
fimul
iret
mov
es
sub
pop
js
clc
je
sub
rol
test
loop
fidiv
mov
out
sar
lea
add
xchg
jb
sub
push
cdq
sub
or
push
dec
xchg
sub
dec
aas
and
mov
and
(bad)
mov
(bad)
sbb
add
call
push
aaa
mov
pop
pushf
sub
jnp
ret
cmps
or
in
adc
cdq
push
xlat
push
dec
push
cmp
adc
mov
fwait
jae
es
outs
inc
pop
ror
addr16
adc
sub
add
pop
outs
push
mov
sub
(bad)
push
fisub
pop
sub
std
dec
mov
xchg
xlat
ins
inc
es
and
enter
gs
xchg
icebp
int3
mov
adc
sar
pop
aad
fcomp
add
dec
add
cmp
xchg
push
pushf
mov
ret
jl
dec
mov
dec
repz
mov
(bad)
imul
into
ins
fcom
push
or
test
sbb
add
jge
aaa
cwde
(bad)
loopne
fcomip
push
(bad)
je
cmps
push
inc
add
pop
ins
inc
push
fcom
xchg
ins
push
inc
sub
dec
mov
dec
ror
ret
sar
retf
lds
sqrtps
int3
mov
and
loopne
mov
pop
pushf
or
mov
jp
or
imul
and
xlat
xor
dec
push
jl
pushf
hlt
popa
pop
dec
xor
push
pushf
popa
mov
mov
xor
cmp
inc
ss
or
fstp
mov
loope
mov
mov
push
ss
pop
inc
int3
adc
enter
mov
xchg
stos
movs
inc
or
cmp
icebp
add
mov
push
pop
dec
(bad)
cmp
retf
iret
xchg
retf
scas
xor
adc
or
xor
sub
mov
inc
and
int
loopne
xor
adc
add
or
jne
xchg
jns
call
imul
lock
out
ins
xchg
cmp
dec
xor
les
fxch
jae
or
jl
pushf
loopne
cmp
ror
lea
pop
int
cmp
ss
xchg
iret
pop
test
and
dec
inc
add
pop
inc
adc
ror
(bad)
push
fst
int
popa
retf
test
mov
rol
dec
je
add
fs
jl
(bad)
jb
popf
and
push
test
rcr
dec
mov
add
or
lahf
cwde
inc
aaa
cmc
int
enter
push
mov
pop
adc
add
fmul
pop
or
scas
fmul
dec
movs
mov
inc
inc
test
mov
mov
mov
lea
mov
adc
pop
test
fdivr
popa
movs
inc
pushf
test
scas
int
lahf
xchg
mov
enter
out
pop
dec
push
lds
sbb
dec
dec
fucom
cmp
pop
push
add
sbb
xchg
mov
sahf
inc
push
or
inc
and
xor
inc
xlat
push
enter
popf
clc
mov
hlt
fstp
int3
mov
add
lds
mov
mov
call
xchg
mov
xchg
fs
arpl
arpl
pushf
push
ins
les
dec
dec
inc
gs
shr
addps
clc
mov
dec
cwde
xor
xor
add
call
int
test
pop
push
pop
arpl
test
add
loope
sbb
(bad)
add
add
fwait
out
aad
sbb
mov
and
jne
push
ficom
dec
add
int
and
sub
mov
js
or
push
xor
inc
out
adc
xchg
xor
inc
dec
cmp
aaa
push
dec
jb
mov
test
fidiv
pop
adc
or
cmp
or
ja
dec
fstp
mov
add
xor
inc
add
sbb
xor
and
pusha
imul
dec
inc
movs
and
dec
push
mov
iret
pusha
xlat
inc
pushf
shr
xchg
fldenv
adc
dec
adc
test
mov
fs
jp
xlat
icebp
cmp
test
repnz
aaa
fsub
dec
mov
pop
sbb
mov
push
mov
mov
push
push
push
dec
push
dec
add
loopne
xor
inc
mov
or
movs
les
in
add
in
fstp
cmps
test
sub
pop
jge
or
cmp
aad
dec
hlt
cld
test
ins
inc
aaa
ror
(bad)
pop
(bad)
(bad)
inc
inc
inc
and
pop
cmps
imul
adc
cmp
push
pop
int3
call
test
cmp
test
ret
jl
ret
ficomp
dec
inc
scas
or
fcmovu
stos
and
push
test
outs
add
adc
xor
xor
xchg
xor
add
inc
mov
ss
outs
or
sub
ret
lds
or
jmp
and
cmp
sub
sbb
push
jo
sbb
mov
je
ret
dec
call
dec
mov
push
mov
dec
les
mov
sbb
retf
in
pop
xor
xchg
pop
in
bound
cmp
xchg
mov
fnstenv
scas
adc
cwde
xchg
je
aaa
add
mov
hlt
push
loop
lods
push
js
mov
lods
push
clc
push
mov
pop
push
adc
xchg
movs
dec
inc
mov
dec
test
movs
xor
in
test
adc
pushf
adc
push
push
xchg
ret
lahf
or
add
mov
(bad)
std
pop
pop
mov
sub
or
ds
clc
retf
fs
dec
adc
push
fnsave
call
push
and
lock
push
sbb
xor
xchg
stos
cdq
push
(bad)
aam
out
or
inc
add
xchg
adc
dec
loopne
sbb
jo
fs
cs
sbb
in
(bad)
pushf
movs
in
mov
dec
in
mov
xchg
js
movs
imul
aam
xchg
cmp
xchg
xchg
jmp
push
xchg
pushf
(bad)
cmp
jo
mov
pop
push
dec
push
imul
in
rcr
and
test
cli
ret
pop
mov
ins
arpl
jb
imul
cmc
inc
inc
in
push
hlt
int3
int3
jmp
shr
push
sbb
test
ja
pop
pop
push
or
in
ins
in
adc
aam
nop
sbb
mov
add
loop
mov
mov
add
inc
or
add
xchg
and
mov
nop
pop
dec
dec
inc
test
inc
inc
aam
cmp
jp
or
inc
fwait
dec
movs
inc
pusha
mov
dec
mov
cmp
sub
mov
retf
xchg
pop
sbb
lea
retf
sub
ror
leave
mov
push
out
movs
pop
and
and
dec
and
inc
into
jmp
mov
fisttp
outs
push
mov
xor
fadd
ret
lods
push
xchg
jbe
push
pusha
add
push
or
into
and
ins
dec
aaa
sub
fwait
sbb
dec
sbb
aad
test
sar
push
inc
pop
mov
add
mov
(bad)
mov
scas
fld
dec
pop
mov
sub
jp
dec
jmp
push
xchg
push
mov
ins
lods
scas
xchg
push
xchg
ins
mov
into
pop
xor
cmp
int
add
adc
push
ror
stos
aaa
mov
mov
dec
cmp
xchg
and
sub
inc
jl
shl
inc
stos
ror
cs
int3
in
or
mov
push
or
sahf
aad
cmc
adc
gs
aad
xor
push
mov
icebp
xor
inc
jecxz
push
lahf
cmp
or
inc
ror
dec
xor
or
out
(bad)
bound
retf
and
ds
jl
xchg
(bad)
lds
icebp
adc
xor
call
xchg
nop
fmul
popa
scas
push
js
or
mov
movs
jne
cwde
sbb
mov
jb
(bad)
mov
add
ins
cmp
call
sahf
sbb
cmp
ss
dec
arpl
and
dec
aam
sbb
cmp
mov
(bad)
lods
aam
push
sbb
leave
jl
fwait
or
push
pop
div
add
inc
fdiv
dec
dec
mov
push
icebp
out
cs
mov
lahf
cwde
pop
fwait
add
js
jle
push
mov
mov
in
mov
or
rcl
mov
pop
mov
xchg
push
stc
xchg
dec
push
dec
xchg
nop
inc
scas
mov
mov
ror
mov
pop
shl
fcom
mov
mov
fsubr
and
jg
frstor
ins
jmp
enter
pop
and
inc
xor
les
sbb
adc
les
movs
adc
gs
rol
push
test
inc
xchg
je
inc
ret
jne
or
iret
fs
inc
or
inc
fild
xchg
ja
test
add
shl
mov
xor
and
cld
mov
mov
adc
gs
dec
and
jo
in
jmp
psllw
cmp
add
jo
clc
mov
xchg
out
pop
ins
shl
dec
dec
fst
cwde
push
add
pusha
fsub
xchg
ficomp
pop
jne
mov
add
mov
xor
xlat
es
mov
mov
fmul
arpl
jbe
inc
add
cmp
pop
frstor
lahf
xchg
imul
int3
adc
mov
mov
cmp
add
xchg
adc
push
pop
ror
std
mov
neg
pop
popf
xchg
mov
lods
arpl
xor
and
mov
cdq
cmp
cdq
xor
push
fwait
push
loope
add
mov
mov
sub
cmc
(bad)
pusha
or
(bad)
mov
leave
nop
repnz
out
mov
(bad)
fs
xchg
pop
test
push
inc
jl
xor
ror
mov
pop
push
iret
fs
pop
jne
pop
shl
cmp
mov
bound
or
cld
mov
outs
inc
fdiv
xor
dec
lock
movs
test
hlt
cmp
jb
dec
dec
je
xor
iret
je
shl
outs
cwde
pop
dec
inc
inc
push
xchg
mov
lds
inc
jbe
push
cmp
inc
les
jns
fsub
int3
rol
bound
pop
lahf
inc
dec
lods
cmp
push
les
loop
cld
or
add
les
mov
fcmovb
jl
mov
xchg
inc
inc
mov
sub
mov
inc
loopne
ins
push
mov
dec
dec
outs
retf
cmp
int
and
stc
inc
mov
mov
and
pop
dec
push
sbb
xchg
push
xor
pop
dec
fwait
sti
inc
popa
cmp
jns
mul
mov
mov
hlt
xchg
dec
jl
cmp
aas
in
push
dec
(bad)
fld
jne
cdq
mov
aad
jae
push
mov
lahf
movs
test
add
in
push
pop
std
sbb
mov
test
int
(bad)
push
mov
sub
fisttp
add
push
fnstcw
outs
fldenv
mov
in
xor
aaa
ins
loope
ss
ins
fnstenv
mov
jae
mov
mov
imul
or
dec
imul
(bad)
fcmovnb
jno
mov
pop
(bad)
ins
inc
xchg
xchg
sbb
adc
jno
rol
mov
(bad)
scas
imul
(bad)
retf
xchg
add
in
jo
retf
imul
aad
xchg
sbb
mov
xor
(bad)
xchg
sbb
mov
mov
fidiv
mov
add
jo
ret
xlat
(bad)
fstp
jnp
xchg
ins
mov
in
inc
cmp
into
jecxz
jb
inc
sbb
(bad)
pop
pushf
aaa
mov
jbe
in
outs
ins
fdivr
inc
mov
rcr
jp
fidivr
dec
jbe
xchg
movs
push
in
mov
xor
ins
sbb
addr16
fidiv
data16
fnstenv
arpl
mov
call
int3
dec
pop
sbb
shl
stos
test
outs
adc
xchg
addr16
xchg
cmps
fwait
jno
dec
(bad)
pushf
stos
(bad)
mov
in
sbb
adc
retf
sbb
adc
or
sub
cmps
ins
mov
mov
out
cmps
imul
mov
and
and
mov
lahf
sbb
mov
fwait
outs
pop
cmp
sbb
addr16
call
in
inc
out
or
push
aam
fwait
jo
and
fwait
push
mov
call
mov
mov
imul
xchg
lods
mov
cdq
fs
stos
and
cdq
data16
mov
or
inc
lea
daa
popf
jb
add
xchg
cmps
mov
mov
adc
mov
rcr
imul
mov
stos
mov
stos
mov
or
jae
jmp
cmps
lods
mov
mov
xor
loop
mov
add
fwait
imul
cmps
int3
add
push
call
dec
or
ins
je
sbb
fldcw
int
enter
out
dec
hlt
call
iret
cli
dec
ret
cld
leave
sub
jb
test
pop
in
shl
stos
fstp
scas
pop
mov
(bad)
stos
or
(bad)
xor
pushf
mov
pop
jb
call
mov
mov
retf
xchg
outs
pop
cmp
push
inc
adc
scas
fwait
pop
dec
aaa
sbb
cmp
sbb
inc
add
dec
push
push
rcr
jno
or
(bad)
fs
cmp
mov
scas
mov
rcr
mov
out
cs
dec
aas
cmc
cmp
call
sbb
mov
cld
cwde
cdq
mov
push
(bad)
cmps
stos
sahf
mov
arpl
int
add
mov
cli
cmps
es
fs
sbb
data16
loope
int3
cmp
mov
dec
and
sbb
mov
lods
loope
adc
dec
jmp
in
mov
mov
mov
xchg
iret
aam
inc
and
sbb
pop
addr16
shl
xchg
adc
xchg
(bad)
sbb
in
pop
cmc
sbb
xor
lods
inc
adc
push
mov
xor
movs
push
mov
mov
add
add
pop
xor
push
jnp
mov
adc
mov
mov
enter
popf
dec
xor
xchg
int3
pop
mov
push
stos
mov
xlat
dec
fdiv
nop
and
or
mov
popa
and
push
lds
inc
rcr
inc
add
and
xor
mov
xchg
inc
in
test
cmp
push
pop
xor
and
test
xor
inc
mov
inc
pop
mov
test
sbb
int3
sbb
xchg
test
dec
enter
or
xchg
or
mov
xchg
sub
aad
adc
outs
fs
ja
iret
jno
push
xchg
in
mov
or
or
sub
leave
ss
add
mov
push
jle
add
into
pop
out
mov
ss
and
lods
cmp
aam
inc
lods
bound
or
push
pop
sbb
stos
out
test
sbb
data16
lods
ins
gs
and
adc
or
mov
cmps
and
fcom
test
mov
add
jl
inc
fistp
and
pushf
test
sahf
pop
mov
loope
jae
add
dec
xor
fmul
or
dec
jle
adc
or
lds
jae
jecxz
and
rcr
or
(bad)
aam
or
ror
retf
js
adc
jns
sbb
jno
mov
lods
movs
xchg
add
(bad)
rcl
push
add
sbb
cmp
adc
inc
xchg
push
and
test
and
sbb
cdq
or
xchg
loope
ficomp
or
les
imul
xchg
xchg
xchg
push
(bad)
xor
in
mov
mov
daa
stc
addr16
jno
cmp
mov
ror
push
cmp
pop
adc
mov
add
(bad)
push
mov
lods
sbb
and
xor
inc
add
mov
call
xor
jb
push
shr
int
rcl
mov
push
cwde
pop
popf
inc
inc
or
loope
jno
lods
and
mov
mov
rcl
mov
dec
sub
push
dec
cmp
nop
sbb
dec
lods
ret
test
adc
push
pop
inc
inc
ins
jmp
xor
out
ror
add
sub
int
(bad)
xor
cmp
stos
cmp
xchg
mov
push
dec
dec
cmp
nop
popf
mov
stos
idiv
outs
inc
xor
popf
xchg
lds
sub
sub
mov
fdivr
pop
scas
ss
(bad)
fs
inc
push
fs
(bad)
mov
push
cmp
or
test
sbb
int3
pop
pavgw
neg
inc
cmp
xor
ret
mov
stos
mov
pop
inc
into
add
lea
repnz
push
cmc
out
in
das
dec
mov
mov
push
pop
mov
test
and
dec
mov
mov
fmul
(bad)
cmp
sbb
inc
or
mov
jecxz
jbe
push
cmp
xchg
imul
(bad)
es
imul
pop
inc
stos
cmc
and
mov
xchg
xor
pop
jmp
sahf
sbb
icebp
stos
mov
fisub
cmps
mov
jmp
sbb
cmp
and
adc
inc
or
pop
daa
cmp
adc
jbe
cmp
aaa
or
push
and
into
cmp
gs
ins
cmp
cmp
ret
stc
pop
xor
lods
or
repz
call
and
cmp
adc
sbb
jnp
xor
inc
dec
inc
das
(bad)
pushw
inc
inc
sub
mov
mov
ins
test
int
mov
jecxz
pop
mov
and
or
xor
loope
mov
pop
cld
in
xchg
cmp
out
rcl
or
and
int
imul
jno
push
int
mov
fucomi
bound
movs
mov
cmp
add
mov
in
stc
push
xor
leave
lock
mov
and
sbb
mov
out
lds
mov
jle
or
xlat
mov
push
jne
xor
xor
xor
inc
je
xchg
jo
fs
xchg
pop
jg
push
sub
shr
sti
out
lds
dec
hlt
in
pop
xor
mov
or
fcom
or
les
adc
or
imul
cmp
jmp
add
add
and
add
add
add
je
outs
outs
add
or
es
outs
outs
data16
popa
add
add
add
adc
adc
add
add
add
ins
je
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
jmp
add
add
and
add
or
push
imul
add
add
and
add
add
and
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
mov
lock
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
cli
imul
imul
imul
jne
cmp
outs
xor
enter
int
pop
pop
lods
dec
mov
or
jge
inc
add
xchg
add
dec
pop
cwde
stos
aaa
in
mov
cmp
xor
sti
(bad)
dec
push
or
pop
mov
pushf
add
fldcw
stc
(bad)
adc
mov
push
mov
cmp
ror
add
stos
leave
lods
or
sub
and
(bad)
movs
mov
jo
add
mov
mov
adc
mov
and
aaa
fs
cdq
dec
inc
call
jmp
movs
dec
ins
xchg
xor
int
out
pushf
xchg
cmp
leave
mov
das
cdq
inc
cdq
push
ins
arpl
xchg
add
push
stos
enter
add
js
aam
dec
test
mov
inc
ds
mov
add
clc
test
mov
loope
cmps
lods
and
cmp
or
mov
xchg
or
cs
pop
jecxz
ins
or
xlat
push
jno
test
in
jge
shl
in
lods
bound
sub
push
out
int
inc
lea
ror
fdiv
dec
js
or
push
mov
mov
aas
cmps
(bad)
mov
push
xor
(bad)
pusha
cmp
jmp
aaa
int3
dec
daa
mov
push
mov
and
(bad)
or
leave
cld
cmp
ret
cmp
and
cmp
call
xchg
inc
or
mov
and
push
in
enter
popf
adc
andnps
push
mov
push
ins
cmps
xor
leave
repnz
jecxz
aad
add
push
ficomp
fdivr
xlat
out
jmp
jmp
push
test
add
inc
push
pop
call
test
inc
stos
stos
loopne
gs
inc
sbb
out
(bad)
enter
xor
jnp
imul
and
mov
inc
(bad)
repnz
rol
cmp
mov
sar
ret
xchg
add
push
out
pmovmskb
push
mov
cmp
push
aaa
and
lea
cmps
sahf
lds
jl
cmp
xchg
ds
jbe
mov
sbb
bound
xchg
inc
es
ins
iret
call
sbb
sahf
xchg
jno
push
sbb
outs
push
and
dec
lds
mov
inc
add
rcr
rcr
shl
test
nop
and
xor
call
(bad)
dec
xor
test
xchg
sub
lea
cmp
(bad)
xlat
(bad)
inc
sar
adc
ja
mov
mov
iret
cmp
ss
dec
lods
jne
movs
addr16
mov
or
(bad)
mov
fcomp
jnp
mov
sub
adc
push
inc
jmp
stos
std
sbb
xchg
stc
cmc
std
sub
mov
or
movs
test
stos
addr16
cmp
add
popa
adc
(bad)
and
ins
adc
mov
sbb
and
rcr
and
jge
cmps
in
out
jg
dec
sar
xchg
add
add
inc
jno
xchg
mov
and
xchg
nop
retf
dec
outs
and
fdiv
mov
sbb
in
cmps
call
sbb
cmc
in
fisttp
push
and
mov
inc
out
push
mov
loope
test
pop
scas
out
mov
nop
scas
int
cmps
clc
adc
cmp
stos
xor
scas
adc
loopne
cli
mov
sub
dec
pop
in
outs
mov
push
lods
mov
enter
les
rol
mov
mov
jne
pop
aas
cs
cli
push
mov
lds
gs
retf
cmps
fiadd
retf
cmc
pop
call
rcr
rol
push
out
retf
or
and
ret
(bad)
push
mov
test
iret
xor
dec
rol
mov
sbb
or
call
(bad)
push
jno
and
push
push
sub
inc
ds
imul
jnp
outs
cs
in
add
adc
xchg
cmp
rcl
pop
rcr
add
push
sbb
sub
aas
mov
into
inc
movs
or
push
imul
lock
cmp
xor
retf
lock
out
xor
xlat
sbb
or
(bad)
aad
push
mov
(bad)
mov
loope
mov
loopne
aam
paddd
mov
mov
jne
inc
mov
add
mov
mov
cmp
(bad)
fimul
mov
mov
and
aas
icebp
rol
mov
aam
mov
jno
add
xor
pushf
mul
sbb
sub
jmp
in
dec
fnstenv
push
jp
out
int3
call
or
push
mov
iret
movs
cmp
or
test
sub
loopne
pop
and
push
jecxz
lahf
cmps
push
and
push
pop
pop
mov
sbb
mov
repz
mov
mov
xor
dec
(bad)
push
leave
adc
ins
or
cmp
jae
lods
dec
inc
lods
mov
jmp
jp
pop
cmp
dec
xchg
sub
fs
mov
push
sar
aam
or
push
mov
and
jmp
sub
gs
das
arpl
lods
(bad)
mov
inc
mov
movs
cdq
sbb
scas
int
sub
ret
sub
jbe
repz
mov
jle
add
(bad)
cli
jl
(bad)
and
xor
push
sbb
pavgw
xor
enter
stos
add
test
aad
cmps
push
out
mov
int
in
jmp
(bad)
stc
pop
in
sub
fnsave
dec
sti
jmp
cld
jno
mov
sub
lods
add
cld
xor
gs
jmp
inc
sub
adc
cmp
rol
daa
add
xchg
sub
jae
dec
xchg
in
(bad)
shr
int
aaa
xchg
daa
pushf
and
jae
add
add
test
lds
and
repz
stc
push
rcr
into
into
pop
dec
out
inc
out
pushf
hlt
mov
repz
pushf
mov
adc
shr
sbb
mov
mov
pop
(bad)
cdq
fwait
es
(bad)
js
mov
fist
lds
xor
jno
lods
dec
js
sbb
fbld
sahf
pop
mov
in
mov
sub
mov
push
mov
mov
or
sbb
jno
jmp
jecxz
and
push
aad
repz
scas
cmp
adc
cmc
pop
mov
xchg
or
pop
dec
xor
jge
dec
push
cmp
pop
sub
dec
test
ins
(bad)
loopne
or
inc
dec
leave
es
scas
retf
cmp
or
sub
ja
sub
inc
xchg
or
(bad)
push
sahf
or
xchg
jmp
pop
xlat
mov
mov
popf
pop
js
push
lahf
pop
mov
xchg
lods
ins
int
jns
lahf
and
push
cli
enter
clc
aad
xor
sti
inc
shl
mov
xchg
push
aam
jge
retf
stos
sbb
fst
fimul
sar
int
retf
or
scas
xor
std
movs
jns
shl
jl
jno
lds
and
xchg
pop
cmc
adc
es
sub
push
jnp
and
push
add
int
fmul
out
add
xor
pop
scas
sbb
cmp
and
imul
jg
retf
aas
push
mov
(bad)
or
loopne
or
jns
loop
jae
sub
je
cmp
and
xor
daa
sti
mov
dec
xor
arpl
and
pop
and
xchg
mov
mov
push
out
jae
retf
ss
inc
add
jle
add
(bad)
cmp
mov
adc
addr16
nop
cmp
in
pop
sub
and
sbb
mov
pop
movs
xchg
or
movs
xchg
dec
inc
push
cmp
pop
mov
pop
stc
mov
or
pop
mov
adc
sar
fild
sahf
cmp
daa
mov
fistp
mov
int
retf
in
outs
pop
dec
in
aaa
test
(bad)
js
mov
fidivr
out
push
mov
mov
fisttp
jo
cs
jp
mov
jne
cdq
add
push
jb
jmp
cmp
inc
repnz
and
mov
push
jp
jg
add
out
(bad)
popf
adc
cmps
fmulp
sub
jae
dec
adc
push
rcr
scas
jle
jae
push
push
pushf
bound
adc
popf
inc
cmps
jge
lods
xlat
in
xchg
in
fwait
and
daa
cmp
mov
jbe
sbb
mov
cmp
call
fimul
rcr
lds
in
jae
cli
(bad)
pop
test
fdiv
sub
xchg
mov
icebp
(bad)
stos
and
arpl
arpl
mov
std
dec
aas
movs
jae
ins
shl
xchg
sub
jp
push
push
fisttp
sbb
sub
fimul
mov
mov
inc
in
push
xchg
or
out
bound
add
sbb
mov
sahf
ficom
sub
in
mov
call
into
add
shr
scas
dec
retf
adc
jbe
daa
mov
scas
fidivr
jb
push
add
retf
iret
inc
pop
mov
xlat
das
and
ss
add
cmp
push
mov
dec
nop
xchg
sub
cmps
out
sahf
pop
xor
inc
and
call
mov
pushf
add
cmp
xor
stc
push
pop
xchg
adc
add
lds
inc
lea
mov
in
cdq
pop
xchg
loope
and
jns
cmp
out
je
loopne
and
xchg
push
inc
sbb
mov
cmp
dec
das
cwde
sbb
jbe
fstp
test
or
mov
sub
scas
lahf
adc
ret
daa
sti
lods
xlat
lock
aam
sbb
rcr
xchg
inc
leave
sbb
cmps
aam
push
lahf
ret
sbb
ds
mov
arpl
je
sub
mov
cmp
pop
dec
sbb
pop
outs
test
mov
push
jns
mov
add
push
jp
lods
test
movs
jmp
and
sub
fdivr
fs
into
loope
fisub
enter
aas
cmp
xchg
enter
push
int
adc
lahf
lahf
mov
adc
add
jns
test
or
xchg
fcom
sbb
(bad)
push
jp
push
imul
inc
push
or
mov
movs
push
daa
and
call
add
std
imul
add
ret
cmp
push
mov
cmp
outs
cmp
loop
pop
repz
xor
js
cmp
lea
cmp
cld
xor
dec
gs
rcr
pop
aaa
in
out
or
dec
jb
mov
inc
sbb
pop
idiv
adc
mov
push
gs
repnz
xlat
jae
push
xchg
dec
cdq
cli
push
fucomp
xchg
mov
imul
es
nop
xchg
sub
(bad)
icebp
adc
cs
lods
push
push
mov
cs
inc
cmps
jo
jo
out
jmp
jg
adc
dec
ret
nop
jo
fs
sahf
(bad)
lods
fnsave
das
xchg
adc
jb
ret
sbb
fcomp
dec
or
xchg
inc
stc
pushf
addr16
ret
xchg
shl
sbb
mov
add
std
xchg
or
imul
push
fild
jmp
fiadd
popa
imul
arpl
mov
sbb
sbb
scas
ins
push
mov
push
(bad)
cmp
xor
lods
and
dec
jecxz
(bad)
mov
lods
xor
adc
outs
fwait
jge
xchg
(bad)
mov
jmp
jb
dec
mov
aaa
xor
pop
(bad)
sub
mov
pop
inc
push
sbb
xchg
sub
jecxz
mov
out
add
sbb
jmp
mov
test
ret
xchg
in
pop
inc
pop
mov
test
lock
jb
stc
enter
add
lock
cmps
push
push
sbb
inc
add
les
pop
lods
cmp
xchg
add
in
(bad)
mov
mov
inc
inc
cmp
(bad)
mov
icebp
mov
stos
inc
fistp
adc
add
mov
adc
in
out
jae
scas
loop
mov
mov
inc
mov
idiv
xlat
das
add
fwait
dec
test
in
xchg
mov
shr
outs
outs
pop
shl
int3
cmp
add
sbb
fdivr
adc
jge
inc
in
jnp
or
sbb
xchg
xor
(bad)
and
xchg
enter
addr16
pop
mov
dec
mov
bound
inc
add
xor
cli
jge
push
mov
push
mov
popf
pop
xchg
xor
lea
mov
cmps
mov
mov
pop
dec
or
popa
in
cmp
sbb
cmp
mov
sbb
dec
clc
dec
scas
dec
sar
in
cld
add
mov
mov
add
xlat
pop
jge
pop
push
mov
int3
mov
add
mov
push
or
add
bound
icebp
es
iret
lahf
in
lods
cmp
rol
sbb
sub
push
sbb
(bad)
mov
dec
dec
pop
sub
cli
(bad)
mov
ins
pop
pop
dec
and
mov
iret
and
dec
mov
xchg
sub
mov
scas
mov
xor
std
mov
mov
push
sbb
sbb
and
push
sbb
(bad)
xor
std
aas
cmp
or
mov
add
rol
push
out
in
es
xchg
addr16
and
fst
retf
and
inc
lods
outs
xor
cli
fild
pop
das
out
in
shr
fdiv
sub
call
mov
aaa
nop
jno
nop
add
sbb
sbb
ficom
sbb
out
mov
pop
rol
ret
sbb
add
push
xor
test
mov
pop
push
xor
pushf
(bad)
xchg
fs
jp
test
call
xchg
sbb
scas
fcmovu
icebp
adc
mov
iret
push
ficomp
bound
pushf
push
sub
inc
(bad)
cmps
cmp
mov
lds
mov
(bad)
ins
outs
jns
xor
int3
jnp
ss
mov
push
cmp
fsub
(bad)
sbb
outs
and
sbb
out
int3
pop
cmps
aad
jecxz
jnp
inc
call
gs
pop
mov
call
and
and
(bad)
shr
(bad)
mov
mov
xchg
out
jecxz
push
xor
repz
loopne
jno
mov
sar
mov
mov
or
fisttp
jg
jp
gs
std
xchg
push
fadd
push
nop
in
loop
imul
inc
sub
cmp
lahf
enter
imul
sti
ja
repnz
neg
jb
sbb
test
nop
jns
mov
test
fdivr
push
repnz
dec
fcomp
pop
dec
mov
and
mov
sub
addr16
out
out
add
adc
xchg
repnz
cmp
or
adc
add
add
sbb
loop
sahf
xchg
(bad)
inc
in
mov
add
xor
ror
or
ret
xchg
cld
inc
xor
movs
stos
sbb
gs
je
repnz
aas
aas
pop
push
pushf
jno
mov
cmps
mov
sbb
cmp
hlt
int
nop
inc
xor
shl
push
xor
addr16
fwait
mov
mov
jb
pop
sub
int
ror
sub
mov
into
(bad)
scas
fiadd
sbb
leave
les
adc
iret
outs
dec
das
mov
bound
cmp
ja
arpl
cli
push
dec
sahf
mov
inc
dec
xor
mov
cmps
mov
das
mov
div
mov
arpl
mov
push
mov
sub
jo
and
in
mov
ins
push
sub
jbe
adc
and
dec
sti
pop
mov
push
xchg
dec
sar
repz
and
lahf
in
scas
xchg
xchg
ds
retf
add
pop
mov
retf
add
push
xor
pop
shl
mov
jmp
retf
ins
mov
xor
cld
(bad)
clc
mov
sbb
pop
adc
xor
scas
(bad)
xchg
cmp
pop
lock
pusha
and
push
jg
cs
pop
lock
inc
mov
lods
push
pop
fisub
and
dec
adc
je
cmp
test
xchg
movs
outs
mov
sbb
punpckhdq
and
and
jb
push
mov
mov
cmps
or
aad
ins
in
jecxz
test
inc
add
stc
sbb
clc
hlt
jmp
dec
stos
arpl
pop
fwait
retf
cmc
xor
retf
push
mov
push
push
iret
ins
hlt
sub
and
xchg
movs
pop
mov
push
ret
xchg
sub
push
mov
fs
jmp
and
add
imul
lock
shr
jp
mov
int
(bad)
mov
adc
adc
shl
cmp
and
cmp
popf
test
mov
scas
jo
pop
push
mov
(bad)
pop
mov
xchg
pusha
ret
mov
push
nop
pop
adc
scas
xor
push
mov
add
cmp
out
inc
inc
xchg
mov
and
out
push
fmul
dec
in
adc
dec
mov
(bad)
sub
mov
in
rcl
lea
test
sub
or
stc
enter
cld
push
imul
in
loop
or
ret
arpl
jb
jge
jb
xchg
cs
es
inc
jl
and
adc
iret
sbb
pop
sbb
jo
(bad)
fidiv
mov
sti
icebp
test
ja
inc
cmp
cmp
jne
dec
jmp
mov
lods
fwait
mov
arpl
jecxz
push
push
or
adc
fs
out
and
inc
std
repnz
jge
jmp
fld
hlt
fnstcw
or
adc
je
xor
mov
test
leave
or
push
adc
dec
out
pop
cmp
call
cmp
xor
jae
xlat
jb
jl
rol
xchg
xor
xor
inc
pop
aaa
daa
xor
pop
aam
outs
push
xor
jb
nop
mov
cdq
add
and
push
fdiv
mov
aad
cmc
sti
mov
fwait
jp
lods
cmc
stc
aam
pop
dec
sub
inc
jmp
(bad)
jle
sahf
iret
jno
std
div
dec
add
dec
mov
push
sub
aaa
(bad)
cmp
hlt
cmp
pop
mov
or
xor
mov
sub
mov
jmp
sub
adc
iret
mov
push
xchg
sbb
mov
pop
jno
(bad)
aas
dec
pop
mov
push
xor
pop
push
out
vcvtsd2si
jne
outs
div
inc
lods
and
cmps
mov
add
mov
mov
inc
pop
inc
sahf
imul
adc
(bad)
jmp
fs
push
mov
outs
pop
pop
hlt
fdivr
scas
cwde
lock
imul
out
mov
sbb
(bad)
xor
pop
je
ss
sbb
push
or
jecxz
mov
jb
pop
aam
jns
test
pop
cmp
push
adc
shl
fistp
(bad)
mov
(bad)
adc
inc
jg
fdivr
dec
push
add
das
sub
loopne
shl
(bad)
repz
or
pop
push
fmul
cmp
xor
push
inc
inc
push
aaa
mov
mov
mov
add
rcr
in
rcl
sti
mov
cld
test
popa
mov
pop
rcl
and
ret
pusha
imul
and
scas
lds
pop
inc
dec
and
jg
sub
fadd
jp
aam
nop
add
xlat
div
adc
mov
in
out
adc
fs
inc
inc
enter
jge
sub
in
test
shl
xlat
xor
push
cmp
sub
push
pop
nop
dec
or
pop
ds
mov
adc
or
leave
(bad)
cmc
lods
ins
gs
(bad)
jb
sbb
push
xchg
psubsw
int
(bad)
inc
xchg
ins
out
sub
xor
xor
mov
mov
in
or
pop
imul
mov
cmp
or
or
xlat
sbb
jecxz
shl
test
cld
push
inc
hlt
ss
push
(bad)
imul
inc
adc
adc
adc
dec
movs
mov
sub
cmp
jl
aad
mov
cli
mov
shl
push
sbb
sub
push
cmps
ins
popa
xor
mov
mov
pop
pushf
jle
dec
movs
pop
dec
adc
arpl
xchg
adc
jge
(bad)
mov
mov
add
nop
mov
dec
inc
push
jmp
mov
xor
push
mov
cmp
pop
dec
cmp
ins
call
repnz
mov
push
(bad)
and
adc
cmp
adc
xlat
cmp
adc
or
mov
out
xor
fidivr
jb
test
pop
loopne
and
retf
bound
xor
pop
out
jle
dec
in
mov
or
cld
sub
adc
mov
test
sbb
div
pop
int
adc
pop
xchg
xchg
xbegin
xchg
push
pop
sbb
jae
add
inc
add
test
sbb
dec
mov
xchg
aam
cmp
jne
retf
sub
or
imul
test
mov
aaa
ins
cmps
(bad)
in
mov
loopne
jecxz
pop
icebp
mov
adc
push
adc
jg
pop
or
add
cmp
sbb
or
rcl
mov
sbb
call
scas
inc
mov
call
retf
add
xchg
(bad)
push
or
jnp
jmp
push
cmp
push
hlt
pop
cmps
test
mov
xchg
mov
fs
push
add
add
ficomp
mov
ret
or
add
mov
add
repnz
xor
push
jl
jp
scas
mov
sub
inc
and
cmp
or
push
jl
aas
(bad)
sbb
(bad)
out
(bad)
sbb
fiadd
aam
dec
xchg
out
mov
lock
arpl
mov
adc
jnp
push
dec
retf
imul
inc
add
add
dec
push
outs
test
retf
push
or
cmps
xor
pop
dec
ret
fild
add
and
jmp
fidivr
inc
xor
push
aam
inc
dec
add
scas
mov
mov
sbb
aas
test
stos
stos
fld
test
or
dec
jmp
cmp
dec
(bad)
in
(bad)
scas
std
xor
fs
mov
test
mov
xchg
add
or
xor
ja
rcr
dec
pop
aas
imul
add
(bad)
xchg
and
sbb
sub
sub
dec
fs
(bad)
test
out
addr16
repnz
sub
outs
or
jmp
js
sbb
mov
jbe
mov
imul
jmp
movs
(bad)
push
and
pop
test
sub
xchg
and
sub
out
cld
test
loop
fldcw
movs
cwde
adc
jecxz
mov
push
js
and
scas
arpl
dec
je
push
pop
(bad)
lahf
mov
mov
data16
jmp
cmp
pop
std
in
shl
adc
jbe
out
mov
dec
jne
and
push
ror
xor
xchg
out
add
sahf
cmp
iret
out
cmps
xor
push
mov
mov
mov
mov
out
pop
xchg
nop
mov
xchg
cmp
std
xchg
mov
mov
jbe
jo
sbb
fisub
mov
retf
xor
push
inc
imul
imul
mov
and
(bad)
icebp
add
mov
mov
xchg
xor
dec
fisub
lds
jge
pusha
sahf
(bad)
loop
push
dec
jo
pushf
jbe
jg
cmp
jbe
test
xchg
xor
cmp
cld
sti
ror
jo
sbb
mov
nop
psubb
lahf
pop
fidiv
shl
xor
dec
push
leave
test
stos
xor
and
sbb
adc
iret
sbb
lea
and
cmp
(bad)
inc
push
xchg
int3
and
adc
ret
sub
into
imul
out
aad
(bad)
mov
add
pop
stos
adc
(bad)
into
sub
arpl
xchg
or
add
jg
lahf
clc
mov
cmp
bswap
sub
cmp
inc
mov
push
push
sbb
add
(bad)
js
inc
mov
sti
retf
stc
xlat
lahf
imul
inc
test
sbb
mov
mov
jne
push
push
dec
mov
sbb
xchg
xlat
jmp
mov
jle
xor
jnp
xchg
fistp
outs
test
mov
push
xchg
adc
xor
mov
inc
into
js
xor
mov
pop
aam
sub
add
push
call
xor
jp
mov
imul
popa
cmc
and
aaa
retf
enter
out
imul
out
add
xor
sahf
dec
jmp
fidivr
push
adc
push
mov
jno
inc
add
aad
mov
arpl
mov
mov
retf
sbb
sahf
mov
push
mov
dec
je
in
icebp
test
push
push
scas
js
xchg
jp
arpl
jg
pop
arpl
enter
jae
in
xlat
mov
sub
inc
xor
xor
(bad)
fs
js
mov
add
addr16
mov
or
add
aas
mov
mov
shl
cmp
jecxz
xor
jecxz
push
mov
ds
push
and
jnp
aas
shr
lds
dec
jp
mov
or
stos
outs
xor
data16
xchg
cmp
jae
ja
xchg
cmp
ds
cmp
or
xchg
out
jb
dec
dec
mov
push
ret
loope
das
cmp
xor
pop
loope
ds
std
push
jg
xchg
mov
ret
je
shl
xor
stc
cmps
popa
pop
cdq
add
jecxz
clc
push
mov
or
cld
(bad)
nop
xchg
jmp
inc
retf
movs
cmp
repnz
out
ret
pop
jbe
add
cdq
(bad)
and
call
inc
mov
xchg
out
(bad)
stos
(bad)
adc
call
inc
add
in
das
cmp
xchg
out
push
icebp
out
arpl
add
jno
push
aam
rcr
inc
call
dec
outs
xchg
sbb
pop
lock
lahf
xchg
(bad)
shr
mov
xchg
or
xchg
(bad)
dec
(bad)
shl
mov
xchg
stos
sub
jns
imul
daa
jecxz
xbegin
mov
sub
ja
mov
lea
out
sbb
iret
(bad)
xchg
xlat
lahf
cmc
(bad)
jg
mul
stos
call
xor
test
out
adc
int
fstp
sahf
fcmovnbe
cwde
sbb
add
jg
aas
fimul
push
mov
gs
cmp
loopne
xor
cmp
std
lahf
mov
in
fcomip
scas
scas
xchg
pushf
pop
loopne
xchg
jecxz
cmps
inc
ret
add
push
dec
jge
inc
sbb
js
jmp
pop
jne
mov
dec
cwde
sahf
int
pop
das
addr16
es
adc
in
pop
hlt
mov
adc
mov
cmp
mov
sbb
pop
cmp
in
sub
iret
hlt
stos
sar
ins
scas
mov
pop
mov
xor
out
add
mov
cmp
inc
aaa
aaa
outs
cmp
jbe
add
aas
dec
hlt
pop
clc
push
repnz
out
int3
xchg
mov
pop
out
mov
aas
(bad)
(bad)
fimul
iret
mov
js
dec
lahf
push
leave
cmp
push
sub
add
out
push
push
jp
call
xor
ds
adc
lahf
mov
inc
ret
add
aam
cli
(bad)
inc
xlat
stos
push
pop
push
aam
out
in
out
in
mov
sbb
add
sbb
aad
sbb
push
and
inc
retf
cmp
scas
xchg
es
sbb
stos
push
imul
(bad)
jecxz
mov
outs
push
inc
jnp
inc
xor
push
jge
ss
movs
adc
sbb
dec
stos
jmp
add
sub
mov
movs
adc
add
sub
dec
sub
push
mov
xchg
retf
rol
push
dec
jp
in
imul
or
pop
and
dec
sub
push
in
jmp
and
sahf
xchg
push
inc
pop
xchg
sahf
xchg
jns
jmp
add
test
sub
add
dec
ud0
add
adc
fwait
or
add
sbb
add
and
inc
and
add
add
add
inc
jb
ja
imul
add
add
pop
pusha
or
add
js
add
inc
cmp
add
add
add
arpl
je
add
add
add
add
push
sbb
push
adc
add
add
bound
and
cmp
add
add
add
ins
inc
dec
add
add
arpl
arpl
jne
data16
add
sbb
add
add
pop
sbb
add
sbb
add
pop
inc
inc
inc
add
add
add
mov
add
ins
inc
inc
add
add
or
jo
arpl
data16
add
sbb
add
add
pop
sbb
(bad)
add
add
sbb
add
pop
inc
inc
inc
add
add
add
mov
add
ins
inc
inc
add
add
push
add
gs
xor
add
sbb
inc
imul
jb
imul
cs
(bad)
inc
add
out
inc
or
adc
add
add
add
int3
xor
and
mov
sub
jo
pop
add
nop
dec
test
xchg
lahf
pusha
jno
push
mov
lods
xor
or
stos
add
xchg
lock
add
add
add
popa
imul
push
jb
addr16
outs
and
push
push
inc
push
inc
and
and
ins
imul
add
add
xchg
add
jle
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
aam
inc
mov
inc
mov
inc
imul
add
inc
and
stos
inc
add
mov
add
dec
jae
add
push
add
jecxz
add
stos
inc
imul
add
push
inc
add
add
cmp
xchg
add
and
push
add
aam
add
mov
add
inc
dec
dec
inc
and
add
add
add
add
add
add
add
add
push
add
aam
add
mov
add
imul
jae
inc
push
and
inc
dec
add
add
add
add
add
lock
add
mov
add
mov
add
imul
mov
and
inc
xchg
add
add
mov
add
jae
xor
push
add
aam
add
mov
add
mov
add
imul
dec
add
and
inc
fadd
fadd
mov
add
add
push
add
aam
add
mov
add
mov
add
imul
dec
add
and
stos
add
add
add
add
push
add
add
aam
add
mov
add
mov
add
dec
jae
jmp
push
add
add
mov
add
add
and
add
aam
add
mov
add
mov
add
dec
dec
add
and
add
fadd
add
mov
add
add
add
push
add
add
jecxz
add
(bad)
mov
jmp
imul
jae
add
push
and
add
dec
add
mov
xor
add
add
push
sbb
add
lock
jmp
mov
call
mov
inc
imul
mov
and
add
xchg
add
mov
bound
add
add
push
xor
add
call
add
push
add
jmp
(bad)
dec
(bad)
jmp
add
fadd
add
xchg
add
jae
add
push
push
add
lock
add
push
add
jmp
mov
jmp
add
mov
add
dec
jae
add
push
add
jecxz
aam
(bad)
push
add
dec
push
jmp
add
add
cmp
xchg
add
and
push
add
aam
aam
mov
mov
mov
mov
imul
add
dec
add
inc
add
fadd
add
mov
add
add
add
push
add
aam
jecxz
mov
mov
imul
add
jae
and
call
add
dec
add
mov
xor
add
add
push
sbb
aam
lock
call
add
mov
(bad)
mov
add
jmp
add
mov
bound
add
add
push
xor
aam
inc
mov
inc
mov
inc
imul
add
inc
and
(bad)
inc
add
fadd
add
xchg
add
jae
add
push
push
add
repnz
out
add
fcmovu
add
into
into
add
ret
mov
mov
stos
stos
stos
add
xchg
xchg
add
jp
add
outs
add
bound
push
push
push
add
dec
add
ds
xor
add
es
sbb
add
push
push
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
inc
add
add
add
inc
add
add
inc
add
inc
inc
add
add
add
add
add
add
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
jmp
pop
(bad)
inc
pop
(bad)
push
cmp
icebp
(bad)
(bad)
push
(bad)
(bad)
(bad)
clc
jg
jmp
aas
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
jmp
add
dec
inc
outs
jb
xor
xor
pop
add
add
add
xchg
and
add
inc
pop
add
add
push
add
gs
add
add
add
add
mov
add
add
inc
ja
add
add
popa
xor
and
add
sbb
add
arpl
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
add
cmp
pop
add
ins
add
jb
add
popa
add
add
add
add
add
push
add
add
add
sbb
popa
xor
sbb
add
add
add
sub
add
add
or
jo
outs
outs
gs
ins
outs
xor
dec
add
gs
push
push
popa
outs
gs
add
add
sub
push
add
sub
popa
add
add
add
add
push
add
ret
add
add
add
or
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
cmp
inc
add
and
add
add
outs
jne
je
add
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
sbb
adc
sub
inc
add
add
add
add
add
test
add
or
dec
jo
imul
cmp
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
add
add
outs
jne
je
add
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
push
add
jle
add
inc
add
add
add
adc
sub
inc
add
add
add
add
add
add
add
or
jb
popa
es
outs
outs
imul
add
add
add
add
add
arpl
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
add
add
popa
xor
sbb
or
add
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
lods
mov
rol
les
int
les
ret
xchg
pushf
add
mov
add
mov
movs
add
enter
jecxz
add
mov
lea
rol
ret
imul
popa
add
jge
add
push
add
mov
add
pop
pop
add
test
add
xchg
xchg
add
gs
jb
add
jb
add
add
add
gs
(bad)
pop
int
lahf
add
gs
xchg
xchg
add
mov
sahf
add
jge
push
push
add
fwait
fwait
add
stos
stos
add
cmps
cmps
add
lahf
lahf
add
add
mov
add
movs
movs
add
movs
movs
add
mov
mov
mov
add
pop
add
mov
mov
add
retf
push
dec
dec
add
ret
mov
add
into
into
add
(bad)
les
retf
mov
leave
add
rcl
add
aam
add
int
add
rcl
add
aam
add
in
in
add
(bad)
add
rcl
add
fcmovnu
add
je
lods
jp
add
cwde
add
(bad)
sahf
xchg
add
test
add
xchg
lods
movs
mov
add
mov
fbld
mov
out
movs
add
pushf
test
sar
add
mov
ficomp
lea
cwde
push
das
add
test
add
test
add
mov
mov
out
loope
add
cmp
in
sahf
push
add
mov
add
xchg
ss
cmps
pop
add
lahf
addr16
mov
add
add
xchg
dec
add
lods
addr16
lds
retf
add
mov
add
repz
add
cmps
cmp
clc
mov
add
mov
addr16
scas
add
fsub
add
lahf
add
call
sbb
jmp
sbb
pop
inc
add
mov
sbb
jmp
sub
push
cmp
(bad)
mov
inc
add
mov
inc
add
mov
scas
add
ror
(bad)
pop
add
retf
gs
mov
pop
call
outs
add
(bad)
jns
xlat
mov
add
fild
add
fdiv
(bad)
fstp
fimul
add
in
add
jecxz
add
call
cmps
add
out
mov
add
test
add
stc
mov
add
jecxz
add
add
push
add
(bad)
add
push
and
ss
add
pop
add
cmp
ds
add
pop
add
jle
add
pop
dec
add
je
add
xor
sub
xor
push
mov
add
popa
add
xchg
sub
add
pushf
xor
add
mov
add
mov
aas
add
pop
cmp
cmp
add
dec
add
mov
lea
ss
sub
fdiv
sub
pop
add
pop
inc
add
stos
pop
add
mov
jmp
add
clc
clc
add
loope
add
inc
push
mov
test
sar
add
inc
fs
lods
add
lds
cmp
test
fs
add
cmps
in
inc
dec
pop
add
add
(bad)
inc
repz
out
out
add
in
in
add
jmp
out
jecxz
jecxz
xchg
push
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
mov
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
or
ss
(bad)
daa
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
dec
dec
dec
dec
dec
inc
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
push
jecxz
push
push
dec
dec
inc
cmp
xor
push
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cli
cli
sti
jecxz
push
dec
inc
dec
dec
add
das
cs
daa
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
stc
clc
idiv
stc
jecxz
push
cmp
pop
sub
daa
daa
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
idiv
cli
push
push
cmp
sub
sub
daa
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
loope
cmc
loop
cli
jecxz
aaa
xor
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
not
or
loopne
cmp
and
and
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
mov
aas
adc
or
xor
pop
pop
pop
pop
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
sar
pop
xchg
adc
push
push
adc
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fmul
mov
dec
mov
pop
adc
pop
pop
pop
sbb
(bad)
(bad)
(bad)
mov
rcr
leave
mov
push
mov
popa
adc
inc
(bad)
(bad)
iret
leave
rcr
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
test
adc
(bad)
(bad)
retf
iret
fcmovu
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
adc
mov
fcom
iret
rcl
int
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
xchg
cdq
call
jg
(bad)
aam
xlat
xlat
les
(bad)
(bad)
(bad)
(bad)
push
cdq
pushf
pushf
popf
pushf
lea
pop
(bad)
xlat
into
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
pushf
popf
popf
sahf
xchg
jge
jno
mov
jl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
jnp
sahf
mov
push
mov
jbe
jns
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
lock
bnd
mov
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
sahf
mov
call
mov
jnp
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
in
out
in
in
out
mov
ins
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
jmp
in
out
jmp
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
cmps
test
lods
scas
mov
jmp
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
lahf
movs
stos
lods
scas
mov
mov
mov
in
stos
test
ds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
imul
mov
mov
lods
lods
test
ds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
inc
inc
cmp
fwait
mov
mov
scas
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
cmp
prefetch
push
bound
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
dec
dec
adc
push
push
sub
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
dec
dec
inc
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
dec
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
push
add
rol
inc
add
inc
add
inc
add
inc
add
icebp
add
rol
jg
loopne
cld
add
add
pop
rol
pop
rol
aas
rol
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
inc
pop
(bad)
push
aas
(bad)
(bad)
(bad)
(bad)
inc
cwde
add
lock
add
arpl
call
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
inc
je
imul
and
imul
add
push
add
add
popa
xor
sbb
add
add
je
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
jg
add
jg
jg
mov
mov
mov
mov
jg
jg
add
jg
mov
lock
push
sti
push
sti
push
sti
(bad)
mov
mov
jg
add
add
jg
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
(bad)
mov
mov
jg
jg
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
(bad)
mov
mov
jg
jg
sti
push
sti
push
sti
push
sti
push
sti
inc
add
add
sti
(bad)
mov
mov
lock
push
sti
push
sti
push
sti
push
sti
inc
add
lock
push
sti
push
sti
push
sti
(bad)
mov
mov
lock
push
sti
push
sti
push
sti
push
sti
inc
add
lock
push
sti
push
sti
push
sti
(bad)
mov
mov
add
add
sti
push
sti
push
sti
push
sti
inc
add
lock
push
sti
push
sti
(bad)
mov
mov
add
lock
push
sti
push
sti
push
sti
inc
add
lock
push
sti
push
sti
(bad)
mov
mov
add
sti
push
sti
push
sti
push
sti
push
sti
push
sti
(bad)
mov
mov
add
lock
push
sti
push
sti
push
sti
inc
add
(bad)
(bad)
(bad)
cld
aas
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
pop
(bad)
push
ud0
cld
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
arpl
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
dec
jb
ins
outs
imul
add
add
popa
xor
sbb
add
add
je
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
inc
(bad)
(bad)
inc
mov
(bad)
jg
add
jg
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
mov
add
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
(bad)
jg
add
jg
add
add
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
mov
mov
mov
mov
mov
(bad)
(bad)
jg
add
jg
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
ud0
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
add
add
arpl
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
inc
popa
ins
outs
fs
jb
outs
add
add
add
add
popa
xor
sbb
add
add
add
add
add
add
add
inc
cmp
popa
adc
adc
les
add
xor
cdq
xor
int3
int3
data16
(bad)
push
xor
int3
add
call
cdq
dec
int3
int3
cdq
cdq
data16
inc
data16
data16
data16
xor
int3
cdq
data16
jmp
add
push
add
cdq
xor
int3
int3
dec
cdq
data16
add
cdq
int3
cdq
(bad)
(bad)
jmp
stc
add
add
pop
add
add
add
add
add
add
imul
add
imul
pop
inc
push
add
push
add
ror
adc
adc
push
inc
and
lds
popf
push
or
or
add
push
and
mov
push
or
pop
add
push
pop
pop
add
adc
test
xchg
add
mov
push
pop
add
push
add
add
add
add
add
add
add
arpl
call
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
add
bound
outs
outs
outs
and
jo
imul
gs
add
fwait
add
add
or
push
push
push
popa
outs
gs
xor
dec
add
gs
push
push
popa
outs
gs
add
add
sub
aaa
add
add
popa
add
add
add
add
or
add
xor
add
add
add
or
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
cmp
inc
dec
add
add
push
add
gs
xor
add
pop
add
imul
add
add
add
(bad)
(bad)
inc
add
aaa
add
add
and
nop
add
add
push
popa
push
add
push
add
popa
addr16
sbb
add
outs
sbb
jmp
add
dec
inc
dec
inc
add
add
add
(bad)
fild
inc
add
add
add
add
add
pop
add
or
push
pop
push
push
or
or
or
or
or
or
or
or
or
or
adc
adc
adc
adc
adc
(bad)
fild
inc
add
or
or
movlps
or
adc
adc
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
enter
add
add
adc
add
add
les
sbb
add
add
add
add
add
les
sbb
add
add
add
add
add
add
add
(bad)
fiadd
or
add
add
add
add
add
lock
loopne
loopne
cmp
cmp
cmp
adc
adc
cmp
adc
or
and
ret
sbb
add
dec
adc
add
es
xor
stos
dec
loop
mov
xchg
pushf
adc
pop
loopne
sub
xor
arpl
ror
cmp
movs
push
inc
mov
xchg
jmp
and
je
mov
ja
push
mov
pop
push
shl
ret
xor
push
or
add
push
xor
cmps
sub
arpl
push
sub
in
jmp
ret
out
fwait
test
sti
into
jmp
fstp
and
jb
daa
mov
rol
shr
jo
push
stos
int3
mov
mov
call
stos
adc
mov
repz
add
inc
push
xlat
xchg
inc
cdq
int3
lea
sbb
inc
or
push
push
mov
shr
dec
aam
pop
or
aad
cs
and
sub
jo
xor
scas
fwait
cdq
stos
jmp
mov
mov
inc
stos
je
adc
push
dec
and
cmc
adc
or
out
push
or
inc
push
(bad)
call
inc
xchg
xor
adc
lods
inc
jo
mov
sbb
sbb
outs
(bad)
repnz
iret
dec
dec
int
xchg
int3
push
aam
cmp
xor
adc
in
add
jae
cmps
xor
imul
sub
ret
pop
mov
out
xchg
or
aad
call
imul
dec
mov
(bad)
bound
mov
xor
add
push
inc
aaa
mov
and
test
xor
fwait
into
iret
ins
xor
jae
imul
jns
in
pop
test
js
ror
hlt
mov
imul
stos
fiadd
push
test
je
test
dec
test
rcl
dec
xchg
jl
cmp
arpl
fistp
out
pop
addr16
push
dec
lods
and
cmps
ss
mov
repnz
dec
push
jmp
inc
mov
sbb
dec
xor
call
mov
jecxz
rcr
scas
jnp
xchg
int
add
jae
mov
push
xchg
stos
and
(bad)
test
mov
mov
lods
ins
stos
and
dec
rol
or
and
dec
dec
stos
adc
aam
pop
or
and
ss
rcl
mov
popa
or
ret
imul
add
jb
and
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
and
xor
and
xor
fiadd
or
add
add
cld
aaa
aaa
inc
or
push
(bad)
pop
stc
fisubr
push
sub
mov
ror
out
cmc
cmp
rep
jge
mov
shl
cmps
inc
jp
mov
or
stc
fstp
push
stos
stc
xlat
aad
jns
popf
dec
cmp
aaa
cmp
push
mov
jle
idiv
hlt
and
inc
outs
push
stos
out
shl
mov
inc
mov
sub
stos
push
(bad)
mov
mov
push
xchg
pop
jecxz
je
ror
mov
aaa
call
jne
mov
bound
xchg
scas
cld
or
arpl
mov
repz
fld
fs
ja
repnz
sbb
(bad)
pop
rol
or
dec
fdivr
jno
xor
cmp
sub
sbb
cmp
arpl
and
adc
fs
inc
dec
daa
jns
out
dec
jbe
push
mov
pop
push
iret
arpl
gs
(bad)
and
jo
out
mov
cs
inc
pusha
out
xor
addr16
xchg
jg
mov
daa
mov
xor
mov
xchg
test
shr
jne
imul
mov
in
(bad)
sub
pusha
fsub
xor
sbb
xchg
push
retf
sub
rcl
jmp
ret
inc
inc
popf
sar
xor
add
aam
(bad)
enter
mov
in
fisttp
in
or
mov
xchg
mov
stc
das
sub
lods
xor
(bad)
leave
mov
mov
or
jmp
and
int3
in
inc
dec
out
in
ficomp
sbb
mov
pop
or
push
fs
push
ja
jge
test
gs
rcl
sub
js
mov
pop
and
call
push
sub
mov
xor
mov
xchg
jl
iret
mov
out
retf
mov
pushf
pop
cmp
jbe
dec
and
sub
xchg
jp
ins
leave
stos
mov
adc
(bad)
mov
lods
rcr
pop
call
outs
mul
pop
add
arpl
fsubr
xor
data16
jmp
fmul
in
dec
push
xor
cli
scas
mov
xor
in
ret
hlt
fsub
stos
cmp
mov
fwait
sub
lods
sbb
retf
sub
mov
push
bound
sbb
xchg
dec
arpl
in
shl
jmp
push
sub
nop
in
mov
pop
ficom
mov
test
(bad)
das
sub
shl
add
jo
mov
in
push
xchg
add
aam
mov
mov
lods
and
cmc
mov
ror
and
test
sbb
pop
sub
push
cmp
jmp
xor
cmc
or
jne
jg
pop
or
dec
dec
jge
inc
add
adc
add
add
add
add
add
add
add
add
add
adc
adc
xor
adc
inc
inc
xor
jno
fiadd
or
add
add
add
scas
mov
sub
xchg
inc
adc
outs
imul
inc
pop
and
in
mov
fs
inc
push
repnz
jmp
iret
call
pop
aaa
lds
adc
inc
xchg
jl
fucomp
stc
pop
std
sbb
in
stc
movs
cmp
cmc
mov
cdq
pop
leave
or
call
cmps
push
mov
(bad)
in
push
and
inc
test
xor
jmp
jno
sub
jl
cwde
and
dec
retf
push
call
fdivr
jmp
repnz
dec
idiv
sbb
dec
fs
or
test
xor
push
mov
scas
rol
mov
pop
adc
pusha
push
lods
and
lea
adc
adc
in
inc
push
leave
xor
ror
push
ret
inc
inc
inc
mov
arpl
or
xchg
f2xm1
pop
ss
fst
imul
cld
test
xor
push
mov
lea
and
push
and
lds
sub
pop
or
fs
push
data16
movs
ss
cdq
sbb
iret
and
clc
pop
out
inc
add
adc
add
add
add
add
add
add
adc
add
xor
adc
(bad)
fiadd
or
add
add
add
repz
fstp
cmps
mov
inc
addr16
test
mov
mov
mov
fldenv
inc
hlt
hlt
pop
or
xlat
dec
mov
popf
enter
and
and
jne
dec
xchg
adc
seto
daa
push
in
inc
inc
push
sub
fs
mov
bound
xor
mov
adc
test
ret
push
test
mov
call
push
or
cwde
sbb
call
fs
adc
push
rcl
sbb
test
idiv
add
les
cmp
add
add
add
add
add
add
add
add
add
and
xor
add
adc
and
popa
and
inc
jno
adc
push
xchg
rcl
bound
mov
fiadd
or
add
push
aas
add
push
cld
or
mov
cmps
jno
cmps
jecxz
mov
loop
aaa
inc
ins
(bad)
mov
adc
stos
stos
stos
loope
sbb
mov
cmp
sub
cwde
sub
lahf
xor
stos
push
and
pop
mov
icebp
adc
push
in
aam
fidivr
xchg
mov
inc
mov
outs
inc
adc
or
loopne
or
fldl2t
scas
and
repz
lods
ja
(bad)
jo
rcl
mov
dec
cmps
lods
mul
mov
xchg
cmps
add
add
leave
jl
push
rcl
add
neg
xchg
stos
nop
outs
ficom
xor
mov
sub
mov
mov
dec
push
rcr
and
movs
push
aam
pop
pop
adc
test
sti
sub
adc
xchg
stos
sub
ins
sbb
movs
dec
add
sub
adc
add
xchg
fdivp
bound
adc
xor
pop
popf
push
fisubr
and
imul
cmc
push
sub
mov
popa
pop
out
xchg
mov
add
ins
sub
mov
sub
push
mov
mov
lock
loop
cmps
xor
ja
adc
int
pop
stc
adc
fs
jp
sbb
dec
jl
adc
cmp
shr
jae
cmp
jp
xchg
test
add
pop
fst
xor
outs
push
sub
xor
jno
and
das
dec
and
fisubr
lds
sbb
mov
mov
pop
mov
pop
test
push
je
inc
in
shl
inc
mov
sub
xchg
addr16
fsubp
fisttp
je
fidiv
mov
push
push
pop
sbb
add
out
ins
loop
xor
int3
jo
lods
pushf
xchg
adc
mov
or
fistp
xchg
mul
mov
data16
(bad)
or
jne
std
leave
push
add
pop
mov
mov
mov
or
and
pop
jmp
ja
xchg
daa
loope
fnstcw
push
and
jne
aas
jmp
xchg
and
mov
xchg
jb
push
inc
cmp
test
mov
popa
mov
ret
push
sbb
daa
call
mov
outs
pop
test
or
repz
(bad)
cmc
inc
add
jo
out
cmp
dec
repnz
jg
std
mov
pop
pop
xchg
xchg
mov
fimul
pop
pusha
mov
fsubr
jnp
pop
js
ss
pop
xor
(bad)
jmp
push
in
pop
sahf
or
fisubr
push
push
push
jecxz
or
nop
sbb
sub
xchg
(bad)
sub
ins
xchg
bound
leave
or
repz
ja
imul
mov
lods
retf
test
std
lds
push
clc
iret
inc
add
adc
add
add
add
add
add
add
add
and
inc
push
popa
adc
jno
and
add
add
add
aas
and
mov
xchg
cs
movs
retf
neg
mov
and
pop
lock
sub
and
int3
mov
out
jae
pop
mov
and
hlt
fsubr
mul
pop
clc
xor
xchg
(bad)
in
add
push
xor
pop
adc
adc
or
cmp
inc
loop
in
sbb
sbb
sub
mov
rol
xchg
ins
push
ins
push
sbb
push
test
inc
iret
lahf
test
scas
mov
loop
inc
std
push
gs
dec
test
test
push
sbb
xchg
call
lahf
fisub
ret
lahf
mov
pop
jg
(bad)
push
loop
enter
fcmovu
ds
fdivr
iret
les
xchg
test
adc
hlt
sbb
test
mov
mov
mov
jle
aad
push
mov
iret
(bad)
retf
adc
jnp
stos
push
add
xor
sbb
repz
add
xchg
sub
mov
jle
pop
cmps
cmp
aad
sbb
xchg
jnp
ins
mov
loope
cmps
dec
cwde
outs
bound
inc
aaa
hlt
xchg
test
sub
jp
push
jmp
dec
nop
in
out
inc
shl
push
sbb
dec
aaa
in
inc
mov
arpl
int
jo
jecxz
push
fld
in
jg
shl
mov
aad
cmc
sbb
mov
jae
mov
test
adc
in
push
add
inc
sbb
repz
enter
rol
jge
xchg
cmp
ds
call
mov
mov
std
mov
adc
les
add
ss
adc
sbb
int3
dec
(bad)
xlat
sahf
mov
sub
(bad)
and
sub
jns
xlat
cwde
js
fdivr
push
test
loopne
push
es
jl
pop
cmps
daa
rol
xchg
in
(bad)
cmps
or
mov
imul
jb
xchg
test
push
les
mov
mov
jno
mov
jo
jl
mov
mov
fs
jg
iret
inc
sbb
lds
inc
repnz
imul
fcomp
cmp
fidiv
data16
push
cmp
fidivr
mov
jg
mov
repz
jl
jns
mov
adc
fnstcw
cli
and
pop
imul
add
pop
movs
enter
int3
dec
pusha
mov
sub
pop
jno
fucomp
cmc
and
dec
fwait
add
cdq
rcl
cmp
pop
push
jg
sbb
adc
jo
mov
pop
sar
int
cdq
xchg
loop
mov
and
push
jecxz
movs
mov
test
mov
pop
xlat
add
cmc
das
push
jge
cld
and
scas
or
imul
data16
repz
nop
adc
out
pop
xchg
out
das
add
loopne
test
dec
jnp
inc
loope
(bad)
daa
fdiv
pusha
(bad)
shl
scas
cli
xchg
inc
push
enter
shl
jecxz
in
push
cmps
cld
mov
aas
mov
cwde
sub
shl
icebp
xor
xchg
mov
retf
adc
test
add
inc
xchg
mov
(bad)
repz
or
hlt
dec
push
jne
jl
loopne
ret
xchg
call
adc
inc
not
xchg
es
out
les
aaa
hlt
and
adc
xchg
pop
mov
and
pop
adc
adc
movs
inc
bound
jg
push
mov
and
dec
xchg
jg
mov
int
add
fisttp
inc
jno
pop
aad
mov
cmc
mov
(bad)
aas
xor
add
ja
dec
cmp
jns
and
popf
xchg
(bad)
repnz
jmp
push
lock
mov
inc
popf
(bad)
ss
or
int3
jmp
inc
aam
(bad)
test
add
je
pusha
test
push
or
mov
hlt
popf
in
push
in
jno
into
pop
leave
mov
pop
add
fst
shl
scas
cmps
mov
jmp
hlt
scas
push
mov
or
add
add
add
add
adc
or
add
add
push
loope
inc
and
and
inc
(bad)
cs
add
pop
popa
cmp
or
xchg
mov
adc
mov
cmps
mov
and
movs
xchg
and
dec
add
test
sub
cs
mov
mov
sub
mov
xor
outs
dec
in
add
ror
mov
dec
les
outs
loop
xor
and
mov
add
lahf
add
dec
imul
aaa
or
sub
dec
rcl
cs
shl
add
push
and
pop
or
jg
les
and
add
add
add
add
add
add
add
add
add
adc
and
xor
inc
push
popa
push
jno
fiadd
or
add
add
adc
add
pop
adc
mov
repnz
(bad)
xor
and
(bad)
cmp
add
fidivr
mov
(bad)
xlat
outs
js
adc
add
mov
mov
mov
stos
dec
xchg
(bad)
mov
push
jns
push
add
push
sbb
sbb
pop
icebp
or
pop
ins
out
xor
xor
(bad)
shr
adc
inc
loop
mov
dec
sahf
in
xor
jge
addr16
jg
mov
mov
push
jmp
iret
jmp
adc
outs
(bad)
mov
scas
pop
lock
ret
push
mov
cld
mov
stos
arpl
cmp
shl
lahf
loop
jbe
mov
jbe
or
sbb
or
rol
jmp
jnp
test
scas
movs
(bad)
out
rol
mov
js
aaa
call
pop
pop
push
pop
lock
push
icebp
stos
cs
je
or
imul
mov
cwde
xor
pop
add
js
test
inc
mov
and
aam
sbb
xor
sub
fisttp
clc
ja
fnstsw
inc
add
adc
add
add
add
add
add
add
add
add
add
adc
and
xor
popa
(bad)
fiadd
or
add
add
adc
stos
sub
jg
mov
and
pop
shl
icebp
retf
or
repz
sbb
fwait
jae
or
pop
sbb
cmp
mov
wrmsr
jo
inc
push
xchg
sbb
outs
retf
or
sbb
jo
fidivr
mov
mov
cwde
call
(bad)
retf
cmp
mov
daa
scas
inc
enter
test
cmp
in
jnp
mov
add
and
aam
push
js
rcl
ficom
adc
inc
pop
sbb
fs
leave
fbstp
and
push
cmps
enter
xor
mov
sub
shl
sbb
js
push
xor
test
jl
adc
mov
(bad)
loope
jae
leave
ss
js
repnz
lahf
addr16
fcmove
es
and
and
add
xchg
enter
push
inc
es
xor
cmps
jg
sub
mov
adc
add
add
add
add
add
add
add
add
adc
xor
popa
adc
xchg
mov
lock
(bad)
fiadd
or
add
add
adc
mov
inc
adc
inc
jnp
out
jg
(bad)
sbb
pusha
mov
xor
sbb
mov
cmc
mov
inc
mov
dec
adc
push
js
jae
shr
pushf
xchg
inc
pusha
sub
retf
cmps
add
add
add
mov
ja
cli
xchg
je
hlt
jnp
inc
popa
fild
add
xchg
sub
cmp
jmp
xchg
or
sbb
jle
inc
sbb
mov
ss
pop
dec
push
and
call
pop
dec
add
push
scas
scas
and
pusha
cmps
mov
outs
pop
loop
ds
test
push
xchg
inc
inc
jnp
cmp
or
mov
xchg
stc
fisttp
pop
sub
pusha
jle
xor
jecxz
lahf
jns
sahf
inc
mov
packuswb
push
out
jge
pop
fsincos
xchg
mov
aad
out
arpl
dec
shr
push
dec
mov
or
in
or
xchg
or
sar
loop
clc
cmp
bound
icebp
cli
xchg
mov
mov
cmp
scas
add
cmp
pushf
(bad)
push
pop
push
int
xchg
sub
add
pop
adc
mov
lock
sub
hlt
mov
sub
xchg
in
cli
mov
mov
call
popa
mov
xor
lea
mov
loopne
cmc
test
jmp
jp
inc
out
test
sar
inc
mov
sar
fcomp
test
mov
sbb
push
push
cwde
mov
arpl
cmc
sub
aas
fldcw
add
(bad)
jge
psrad
jbe
jge
dec
and
sets
and
outs
adc
inc
hlt
rol
leave
les
inc
in
push
inc
xchg
pop
pop
dec
pop
repnz
inc
mov
xor
fmul
aad
out
mov
(bad)
das
std
mov
jge
lods
jecxz
leave
or
sub
add
jl
aaa
jno
cmp
repnz
cs
inc
cli
test
xchg
out
cmp
adc
scas
ins
nop
add
jmp
jne
loopne
sahf
and
aam
add
enter
push
pop
or
je
mov
sub
outs
aaa
jnp
add
cli
jno
mov
outs
pop
dec
mov
mov
pushw
cmp
ja
fnstsw
xlat
jb
push
arpl
jns
std
mov
xchg
mov
out
ficomp
retf
jmp
mov
mov
int
test
dec
stos
xor
inc
clc
mov
pop
pop
cwde
xchg
inc
bound
getsec
sub
jg
adc
mov
int3
or
xchg
ret
xchg
pop
rol
mov
push
stos
aad
sub
add
mov
outs
adc
in
(bad)
inc
sbb
in
sub
and
sahf
cmps
adc
mov
dec
ins
icebp
xlat
int3
lods
xchg
jno
and
and
jne
mov
mov
mov
or
xor
retf
cs
(bad)
cmp
mov
cmp
in
xchg
sub
mov
scas
scas
inc
xor
pusha
cmp
mov
rcr
call
lods
dec
xchg
adc
jp
lods
in
jmp
fild
arpl
or
jle
pusha
inc
clc
and
add
or
cmp
mov
mov
aaa
repz
xchg
jle
popa
inc
mov
cmp
ins
mov
push
push
(bad)
or
and
jmp
addr16
mov
das
fiadd
pop
pop
cdq
push
mov
mov
scas
mov
(bad)
mov
jns
cdq
jo
daa
push
pop
mov
aas
js
add
mov
ss
in
imul
push
in
or
sub
mov
mov
(bad)
cmp
gs
pop
jl
sub
inc
and
pop
fistp
pop
cdq
pusha
outs
xor
test
aaa
dec
mov
jns
inc
mov
adc
lock
(bad)
xor
sbb
xor
outs
shl
xchg
popf
aas
jl
out
stos
sbb
mov
pop
push
sbb
pop
inc
xor
cmp
in
mov
mov
stc
cmp
cmp
sbb
sub
(bad)
xchg
cmp
jge
or
jnp
and
inc
adc
ins
dec
out
test
mov
lock
push
loop
jno
push
fiadd
out
das
mov
lea
fimul
mov
lods
cld
in
retf
sub
add
add
xor
ja
movs
sub
dec
imul
jmp
pop
push
loop
sub
mov
and
jne
not
pop
dec
popa
sbb
xor
loopne
inc
ins
jnp
stos
or
sbb
and
icebp
dec
ja
call
sub
out
inc
mov
int
pop
cwde
fisttp
xlat
or
mov
arpl
lods
mov
leave
push
xchg
sub
or
jns
loop
ret
push
cmp
sbb
or
ret
push
fdivr
pop
adc
jp
fbld
test
cmp
test
xchg
stos
mov
ret
push
xor
pusha
push
xor
and
shr
or
icebp
lods
loop
dec
and
jecxz
stos
lods
inc
or
mov
mov
add
shl
or
pop
pop
cmp
int
inc
nop
rcr
in
ss
in
and
scas
pop
push
pop
inc
mov
pop
test
jno
int3
adc
std
mov
test
pusha
shl
aad
arpl
shr
test
adc
xchg
popf
out
and
xchg
add
pop
push
cs
adc
xchg
leave
enter
test
push
ret
xchg
rol
fsubrp
pop
cmps
popa
fcomp
arpl
pusha
aas
icebp
push
dec
rol
mov
ins
sbb
test
mov
mov
add
mov
loop
push
daa
sbb
mov
inc
jo
rcr
cmp
mov
stc
out
jns
(bad)
out
mov
jno
les
pop
xchg
xchg
push
sbb
push
imul
ret
int3
sbb
sbb
cwde
sub
pop
lock
aam
mov
sahf
and
sar
(bad)
retf
xor
lahf
xchg
cwde
mov
cmp
and
inc
mov
test
cmp
fsubr
stc
cs
loop
retf
sub
scas
and
hlt
dec
int3
int3
pop
repnz
jae
mov
jne
xor
xchg
inc
aam
add
lahf
xchg
pop
jb
mov
test
mov
jg
push
mov
add
loopne
sbb
inc
dec
add
add
add
je
add
add
add
cmp
xor
das
xor
xor
add
add
add
add
and
add
add
pop
add
nop
add
add
push
popa
push
add
add
add
add
add
popa
xor
sbb
add
add
add
add
add
add
add
inc
cmp
popa
and
and
aad
add
rol
(bad)
(bad)
push
jmp
add
xor
cdq
cdq
cdq
call
inc
xor
xor
xor
cwd
inc
inc
data16
cwd
int3
cdq
int3
inc
cwd
data16
inc
(bad)
push
int3
int3
data16
jmp
int3
cdq
(bad)
call
inc
cdq
data16
add
add
push
xor
cdq
call
int3
pushfw
pushf
arpl
cdq
(bad)
dec
int3
cdq
xor
add
cdq
xor
cdq
cdq
xor
int3
xor
cdq
cdq
dec
int3
int3
int3
int3
add
stc
add
add
add
sub
add
add
and
inc
push
inc
jo
sub
dec
enter
cmp
or
dec
or
xor
cwde
pop
sub
dec
add
sub
mov
leave
dec
sub
mov
fsubr
mov
push
dec
outs
sub
sub
das
cs
pop
sbb
jo
es
dec
dec
and
call
push
push
push
push
push
mov
or
or
sub
or
rol
jnp
or
mov
mov
xchg
mov
add
sbb
sbb
add
ins
outs
mov
in
xchg
popf
mov
call
dec
or
push
pop
fadd
xchg
add
cmp
and
and
movs
inc
xor
or
loopne
sbb
fadd
and
and
push
or
mov
nop
inc
imul
movs
sbb
test
js
inc
add
push
or
mov
test
cmps
dec
daa
leave
push
mov
dec
in
dec
loop
push
movs
pop
out
hlt
sbb
sar
out
sbb
add
or
pop
fsub
inc
mov
and
and
ret
popf
and
loope
outs
sbb
pop
mov
xchg
mov
sbb
mov
or
js
adc
adc
pop
mov
or
and
inc
stos
and
rol
loop
(bad)
ins
jno
(bad)
adc
mov
into
cmps
mov
arpl
clc
mov
xchg
cs
mov
jno
movs
rcr
xchg
push
popf
rol
das
and
or
cmp
jo
outs
add
ins
push
mov
jl
jo
mov
pushf
outs
repnz
cmc
add
and
cmp
bound
ret
cmp
xor
push
sub
dec
mov
cmp
push
add
add
add
add
add
gs
xor
add
pop
add
jp
outs
outs
imul
add
add
(bad)
(bad)
inc
add
aaa
add
add
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
push
add
outs
jne
and
arpl
jbe
add
push
add
(bad)
inc
add
sbb
adc
add
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
add
push
popa
push
add
add
add
gs
xor
add
adc
dec
outs
fs
imul
je
ins
jo
add
or
inc
add
sbb
adc
add
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
add
push
popa
push
add
add
add
gs
xor
add
adc
push
imul
outs
outs
and
arpl
jbe
add
or
add
(bad)
inc
add
sbb
adc
add
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
add
push
popa
push
add
add
add
gs
xor
add
or
imul
imul
add
(bad)
inc
add
sbb
adc
adc
pop
add
push
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
add
push
popa
push
add
fwait
add
add
or
jo
outs
outs
gs
ins
outs
add
push
add
gs
push
push
popa
outs
gs
add
add
add
push
add
sub
popa
add
add
add
add
push
add
rol
add
sldt
add
or
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
cmp
inc
jecxz
add
or
add
popa
addr16
sbb
lds
add
ins
je
add
fdivr
loopne
adc
dec
inc
add
add
add
add
(bad)
in
add
inc
jne
imul
add
add
aas
add
(bad)
out
add
inc
outs
bound
rol
add
add
adc
or
add
adc
add
xor
add
add
add
add
add
push
or
pop
push
push
pop
or
or
or
or
push
or
or
or
or
or
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
push
push
or
or
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
or
mov
lock
adc
add
add
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
add
adc
push
xor
pusha
xor
inc
and
add
add
add
add
add
add
add
add
xor
and
adc
jno
xchg
mov
and
rol
inc
lock
jb
icebp
mov
adc
adc
add
add
add
add
add
add
add
add
add
add
and
inc
adc
popa
jno
xchg
mov
inc
lock
icebp
pusha
(bad)
fiadd
or
add
add
add
add
add
inc
xchg
push
inc
pop
mov
(bad)
sub
enter
popa
jb
dec
pop
dec
xchg
mov
sbb
or
mov
push
push
and
jmp
(bad)
or
bound
sub
sbb
(bad)
push
push
sub
add
(bad)
in
cmp
lods
mov
mov
sbb
sbb
sti
in
retf
mov
pushf
xchg
dec
xor
adc
pop
cmp
mov
adc
(bad)
int3
dec
dec
or
xchg
dec
push
pushf
cdq
add
inc
(bad)
or
int
into
iret
movs
into
(bad)
lods
ret
adc
mov
xchg
scas
test
and
cmp
shl
outs
add
inc
mov
jmp
cdq
aam
mov
imul
enter
out
retf
lods
stc
in
xchg
dec
and
jmp
retf
rol
mov
mov
adc
lods
outs
jg
repz
mov
loope
call
push
adc
jmp
repz
mov
iret
pop
sbb
jge
mov
inc
sahf
cli
push
cmp
stos
sbb
cmps
addr16
xchg
xor
jb
lods
mov
pop
push
cwde
fisub
xchg
sub
ins
pop
popa
in
jmp
jnp
jecxz
lods
pushf
into
add
ret
mul
inc
cmp
js
shr
repz
fst
(bad)
icebp
or
out
pop
inc
dec
sbb
mov
add
gs
push
jns
ja
mov
sub
rol
or
pop
retf
pop
cmp
inc
pop
addr16
imul
push
inc
sahf
mov
test
inc
jp
dec
push
out
and
sbb
je
jmp
scas
hlt
jae
lods
movs
pushf
(bad)
mov
in
xchg
jno
pop
shl
vpmullw
pop
lods
test
ja
push
loop
repz
xchg
cmc
sub
cld
xchg
xor
ficom
mov
call
pop
jmp
dec
loop
pop
mov
fist
sbb
push
inc
xchg
adc
fnsave
gs
popf
cmp
popf
ins
push
inc
(bad)
cmp
inc
dec
add
sub
cmps
push
inc
test
fs
ins
pop
in
jecxz
push
cmp
int3
and
rcl
mov
mov
pop
rol
dec
xor
sub
lea
cmps
inc
xchg
mov
retf
scas
pop
jae
imul
addr16
je
mov
dec
je
std
push
cmps
imul
daa
sub
add
inc
mov
es
cmc
cmp
cmp
daa
pop
jae
mov
in
and
test
aam
sbb
repz
push
xchg
mov
cmps
push
movs
add
test
add
mov
fs
jbe
push
mov
outs
adc
test
mov
xchg
test
mov
cld
int3
arpl
and
and
cmp
stos
nop
bound
icebp
sbb
push
popf
cmp
cmc
dec
xor
ror
repz
ds
(bad)
sbb
sti
mov
and
push
adc
push
add
mov
push
add
push
mov
lods
imul
and
sub
(bad)
and
and
cmp
add
or
les
test
or
inc
adc
inc
xlat
(bad)
fiadd
or
add
add
cdq
cdq
cdq
cdq
bnd
or
int3
clc
jae
lds
leave
push
sahf
(bad)
jnp
lds
bound
cmp
xor
or
sub
cmp
add
bound
cmp
push
dec
int3
int3
int3
or
call
dec
pop
mov
adc
mov
cmp
loope
add
add
dec
pop
(bad)
jmp
or
or
xchg
push
loop
xchg
test
xor
call
and
mov
cmp
and
sbb
lds
push
aad
dec
push
cmp
push
aad
data16
push
imul
lahf
mov
mov
ds
push
push
cmps
in
dec
sub
jne
ja
dec
pop
popa
xchg
int
mov
push
xchg
lea
mov
fldln2
aaa
pop
add
adc
add
gs
inc
stos
pusha
jo
fmul
lods
add
sbb
mov
jge
sbb
mov
out
sub
mov
outs
jne
mov
cmp
or
out
add
pop
int3
call
fwait
push
mov
xor
pop
out
stos
fs
in
jbe
out
ja
(bad)
push
pop
adc
and
sub
(bad)
es
mov
fwait
jbe
dec
retf
ja
mov
popf
cdq
popa
jge
jns
sub
cmp
inc
add
mov
mov
pop
movs
cmp
(bad)
outs
adc
dec
loopne
fstp
xchg
pop
stc
add
cld
mov
dec
call
jle
push
pop
jge
pop
imul
scas
xchg
pop
popa
or
stos
sbb
and
repz
cmp
mov
int
ds
stos
int3
dec
sub
xchg
aad
pop
cmp
ins
mov
addr16
xor
das
mov
retf
jmp
mov
fs
mov
pop
jmp
ret
(bad)
outs
sbb
in
push
mov
inc
clc
pop
stc
mov
pop
popf
mov
enter
push
and
dec
add
je
bound
enter
push
push
sbb
(bad)
xchg
outs
jmp
or
add
pop
dec
xchg
push
in
ins
pusha
push
cmp
rcl
sub
pop
mov
out
mov
xchg
jbe
sub
aad
mov
xor
stos
retf
pop
lea
cmp
push
push
in
fwait
jno
inc
lds
push
pop
ror
jae
test
mov
adc
xchg
or
push
add
dec
ds
jae
or
test
xchg
add
daa
jns
(bad)
push
in
fmul
cmc
cmovns
in
movs
fwait
push
add
fnstenv
and
ins
jp
dec
push
or
mov
xor
je
add
ret
and
stos
push
jmp
mov
in
mov
jb
ds
ds
mov
stos
push
pop
jne
sbb
lahf
push
dec
xchg
pop
stc
add
data16
cli
fwait
or
sub
inc
pop
pop
mov
ins
outs
mov
dec
jmp
jmp
maskmovq
mul
or
mov
mov
cwde
jne
mov
pop
jo
aaa
mov
lahf
cmp
jnp
xchg
mov
aad
xor
cmp
dec
es
movs
jp
inc
mov
cwde
shr
mov
mov
cwde
dec
fisttp
add
in
xor
test
out
sbb
push
sbb
dec
arpl
movs
inc
cld
test
pop
adc
or
mov
pop
ins
loop
iret
dec
xchg
mov
xchg
int
jnp
xchg
mov
push
and
test
fld
fistp
test
aad
imul
mov
rcl
(bad)
in
push
outs
inc
jo
popf
lock
pop
jnp
aas
sti
das
xlat
rep
addr16
lods
xlat
cmp
cld
fimul
jmp
lds
push
(bad)
sub
push
pop
(bad)
int
and
add
xchg
sti
pop
adc
push
adc
in
addr16
ficomp
pop
out
mov
dec
cld
imul
jg
push
(bad)
jbe
js
sbb
mov
add
int
pop
xlat
mov
mov
imul
adc
es
xchg
mov
jbe
ins
jge
(bad)
std
xchg
jne
sbb
adc
test
pop
call
inc
push
rcl
xor
cdq
cmp
jg
cmps
(bad)
pusha
bound
pop
inc
aam
call
dec
je
push
adc
sahf
xchg
sar
dec
jmp
sahf
xchg
sar
pop
retf
cmp
in
xchg
xchg
jb
dec
leave
cmp
in
mov
or
add
add
add
add
rcr
bound
arpl
jno
addr16
(bad)
cwde
cmp
xor
sbb
lahf
push
and
xor
(bad)
(bad)
xchg
data16
(bad)
cmp
addr16
add
sbb
test
add
pop
cmp
data16
sti
push
jl
cdq
cdq
call
jecxz
inc
icebp
int3
int3
std
push
data16
addr16
xor
ret
adc
push
push
jl
inc
add
add
add
ror
lods
js
repz
jecxz
loope
cdq
cdq
cdq
lahf
mov
xor
out
repnz
mov
cli
add
pop
mov
jmp
xor
idiv
push
iret
repz
inc
(bad)
fiadd
or
add
push
aas
add
(bad)
fiadd
or
add
push
aas
add
(bad)
fiadd
or
add
push
aas
add
pop
leave
push
cdq
fild
jecxz
outs
xchg
pavgb
jno
std
fwait
mov
test
push
int3
inc
mov
mov
mov
test
dec
pop
jg
lods
jle
jp
pop
out
cmp
xchg
in
scas
push
fimul
ss
cmps
js
jns
jmp
cmp
mov
addr16
push
stos
cmp
push
je
inc
mov
clc
std
jmp
pop
dec
std
xchg
dec
loope
sub
stos
mov
sub
ret
fcomp
cmp
sbb
sub
mov
jg
and
jl
bound
mov
xchg
imul
mov
stos
rcl
push
cmc
pop
sbb
xor
arpl
out
stos
mov
sub
in
jnp
cmps
xchg
pop
retf
xor
call
icebp
aaa
and
pop
aad
(bad)
fiadd
cli
test
add
pop
cmc
adc
ficom
or
pop
test
mov
and
retf
loop
add
dec
fcomp
ds
enter
shr
test
hlt
in
out
mov
adc
or
fsub
push
adc
inc
movs
sbb
or
dec
xchg
or
inc
mov
retf
jl
sbb
sub
push
sahf
push
popa
mov
jb
dec
mov
bound
arpl
or
fcom
dec
add
pop
cmp
pop
stos
mov
clc
dec
mov
fidivr
adc
jns
push
push
sub
pop
mov
loope
dec
mov
xchg
sti
inc
cmp
pusha
pop
ins
mov
push
popf
xchg
cmp
xchg
sub
xor
dec
bound
mov
sbb
jl
rcl
mov
or
push
pop
mov
outs
pop
mov
stos
push
fdiv
hlt
das
pop
mov
and
pop
aas
push
mov
jp
sbb
js
ror
ret
cmp
xor
cdq
lea
cmps
xor
add
adc
mov
lods
xor
inc
push
test
je
jmp
popa
xor
je
jno
jmp
cmc
sub
movs
stc
push
jbe
sar
hlt
mov
mov
and
jbe
js
imul
movs
xchg
xor
and
les
add
jecxz
enter
clc
stos
loop
sub
or
xchg
sub
imul
rol
inc
and
jmp
repz
adc
inc
call
add
xor
shl
cmc
sbb
push
(bad)
pop
ss
test
pop
xchg
std
jmp
ds
cwde
stc
lds
pop
inc
dec
inc
mov
push
xchg
and
xchg
out
adc
sub
cmp
inc
dec
xor
cmp
loop
(bad)
and
mov
gs
sahf
sbb
push
aad
add
xchg
not
sbb
sbb
push
push
inc
xor
mov
stc
sub
dec
cdq
xor
dec
lds
mov
jl
mov
sar
or
cs
mov
lahf
push
dec
(bad)
out
bound
xor
pop
mov
pop
inc
xchg
test
xchg
daa
pop
pop
mov
mov
inc
mov
imul
jo
movs
push
outs
aaa
xor
(bad)
adc
inc
cmps
jo
mov
shl
xor
jno
in
aam
xor
lds
lea
xor
pop
mov
movs
pop
ja
repnz
sbb
sub
dec
xor
sbb
aad
push
sbb
jmp
and
imul
mov
outs
mov
mov
out
pop
inc
in
rcr
in
cmp
push
jnp
mov
ror
das
sub
and
xor
aas
loopne
cmc
shl
dec
or
ins
das
mov
out
sar
push
mov
cmp
mov
outs
adc
or
cmps
pop
xor
nop
mov
scas
fcom
pushf
pop
xchg
loopne
jne
test
add
xchg
mov
shl
inc
scas
inc
daa
movs
sub
cs
push
movs
call
aam
mov
aad
pop
adc
lods
sub
divps
mov
pushf
iret
jo
pushf
mov
adc
nop
loop
inc
test
pop
add
(bad)
push
sub
cld
sbb
retf
inc
pop
jmp
push
lea
imul
cmc
sbb
xor
fild
imul
mov
into
loopne
iret
mov
adc
sti
xchg
stos
and
fcom
xor
pop
cwde
ja
sbb
mov
xlat
mov
jmp
mov
mov
cld
xchg
mov
jge
gs
call
mov
pop
out
fldcw
repz
xchg
stc
xchg
in
scas
ret
arpl
popf
dec
cmc
popf
xchg
test
scas
cwde
sbb
loope
hlt
jecxz
push
jmp
inc
cmp
in
test
adc
mov
jmp
lods
or
xor
and
dec
(bad)
mov
pop
test
in
(bad)
pop
clc
retf
int
mov
pop
mov
or
inc
popa
aam
clc
lods
jmp
add
(bad)
(bad)
cmps
daa
mov
sbb
icebp
jmp
sahf
mov
bound
xchg
mov
fnstcw
test
and
inc
adc
test
pop
inc
cmps
fisub
xor
adc
push
jae
xchg
sub
stos
movs
push
in
adc
inc
cmc
das
push
dec
loope
xor
xchg
retf
inc
lahf
push
and
push
iret
mov
push
xor
arpl
and
gs
mov
int3
jecxz
push
and
inc
cdq
dec
inc
push
shr
mov
lock
pop
leave
cmp
movs
and
jo
dec
xchg
data16
mov
pop
repz
mov
int3
call
sbb
(bad)
cmp
out
bound
imul
cmp
(bad)
xlat
or
cmp
or
mov
adc
fist
ja
lahf
sbb
adc
jbe
clc
lods
adc
fwait
enter
loop
in
adc
inc
fidiv
pop
mov
mov
nop
jne
and
or
nop
add
imul
ins
jo
mov
jno
aad
and
or
nop
cmp
loop
sub
std
test
sbb
and
(bad)
clc
bound
retf
shl
out
js
inc
int3
scas
loopne
outs
outs
xlat
push
add
cmps
popa
arpl
cmp
(bad)
fiadd
or
add
add
and
ror
clc
(bad)
mov
ds
das
add
jae
xchg
movs
pop
stc
inc
xor
inc
add
fsubr
add
hlt
test
dec
mov
mov
cmp
pop
cmc
stos
pop
pop
das
rcl
xor
xchg
clc
call
sbb
mov
or
cmps
pushf
in
and
dec
fcmovne
idiv
sbb
out
inc
or
sbb
iret
dec
loope
fsub
aam
or
stos
shr
fcmovnb
cmps
int
jmp
and
in
shr
xlat
nop
jle
test
mov
jnp
pusha
out
repz
sahf
repnz
(bad)
popf
out
push
fidiv
jg
mov
pop
sar
fstp
movs
jne
dec
xlat
push
arpl
icebp
sbb
jmp
xlat
jae
dec
sbb
in
mov
inc
cli
bound
test
loop
pop
cmp
in
std
pop
sub
sbb
sbb
test
dec
xchg
loopne
das
pinsrw
sbb
jle
add
(bad)
loopne
mov
bound
retf
jbe
outs
jnp
vphsubdq
jo
push
xlat
out
fdiv
ss
xchg
mov
cwde
xor
sbb
loop
xchg
(bad)
mov
std
inc
ror
sbb
add
cmp
dec
fdivr
push
ror
jmp
jecxz
jb
or
iret
pop
cmp
and
shl
clc
xor
mov
pop
lods
mov
std
ds
addr16
shl
dec
repnz
loopne
repnz
inc
in
in
adc
mov
mov
jmp
cmp
jp
fcomp
push
xchg
and
jmp
dec
mov
cmp
cdq
call
sub
mov
stc
aam
test
jg
retf
aam
movs
sti
scas
push
xchg
jecxz
les
xchg
test
popa
gs
mov
add
test
rcl
mov
adc
jmp
xchg
xchg
pop
idiv
mov
mov
fs
xchg
imul
and
mov
push
adc
out
into
sbb
out
adc
inc
in
test
jns
in
imul
outs
push
jg
jmp
into
xor
jp
dec
test
lods
movs
mov
jl
lods
ins
mov
mov
sbb
push
pop
movaps
mov
inc
sub
test
shl
fs
stc
pop
or
mov
cld
dec
mov
jo
jge
in
repnz
xor
leave
cmps
sbb
jl
jo
stos
inc
mov
dec
test
ds
ja
addr16
inc
in
sti
xchg
pop
push
loope
les
sub
pop
or
nop
into
cmp
sub
imul
pushf
inc
movs
test
imul
fs
test
and
sub
and
push
xor
(bad)
fdivr
ror
xor
mov
jae
and
mov
(bad)
repz
ret
iret
(bad)
push
rcl
xchg
pop
es
retf
pop
inc
fsubr
dec
mov
sub
mov
aad
xor
fild
(bad)
xor
gs
ror
mov
xor
pushf
outs
jno
cmp
add
fiadd
xchg
mov
mov
push
add
iret
imul
cld
cmps
dec
cmps
pop
jle
jecxz
inc
mov
out
mov
push
sti
(bad)
and
fisubr
movs
movs
add
push
std
aaa
push
pusha
fisttp
ins
xchg
sbb
adc
sbb
mov
ror
pop
add
cmp
pushf
cmc
or
(bad)
ret
sbb
dec
sub
xchg
stos
addr16
adc
stos
into
in
aad
push
(bad)
xor
lock
sahf
arpl
retf
imul
dec
xor
or
imul
les
pop
das
cmc
jb
jnp
ds
in
gs
push
xor
or
rol
rcr
xchg
ins
aas
push
daa
mov
jle
ficomp
imul
rcl
xchg
cmp
mov
ret
cld
lahf
dec
ret
add
mov
pop
fidiv
inc
outs
add
jns
sub
test
adc
mov
xor
jo
mov
push
cmps
jl
aad
or
js
mov
xlat
xchg
mov
push
ret
and
push
add
iret
fdiv
cmp
fisub
and
lea
clc
fsubr
mov
pop
call
dec
jnp
ds
pop
(bad)
cmovb
dec
data16
in
(bad)
retf
push
lahf
ds
xor
cs
movs
(bad)
xchg
push
xchg
xchg
(bad)
and
inc
cmp
cmp
mov
jae
mov
jnp
mov
add
imul
(bad)
pop
es
loop
pushf
in
div
sbb
daa
fcomi
jmp
lods
jmp
or
(bad)
jne
mov
lods
sub
popf
pop
mov
pusha
xchg
(bad)
sub
addr16
sti
(bad)
gs
clc
jg
mov
mov
call
mov
lods
xor
sbb
pop
fcomi
sar
leave
mov
jle
cmp
xor
cs
jge
pushf
add
ss
jmp
jns
pusha
mov
xchg
xchg
out
pop
rcl
hlt
push
or
mov
xor
pusha
mov
cdq
pop
js
push
jb
inc
arpl
jmp
inc
cmp
inc
push
fidivr
gs
adc
push
test
cmp
sub
mov
mov
add
xor
loope
jne
push
and
dec
push
mov
aad
xor
mov
mov
inc
leave
test
pop
xchg
jns
mov
lahf
je
and
sub
pop
pop
adc
nop
adc
fidiv
cmp
and
mov
dec
push
sub
jecxz
sbb
scas
sub
push
sbb
into
out
add
test
mov
xchg
icebp
lahf
dec
in
mov
mov
mov
inc
cmp
and
out
fistp
ret
mov
or
xor
xor
retf
es
mov
frstor
or
lods
pop
sub
(bad)
and
jle
test
sbb
out
cmps
stos
push
aam
sti
cmp
test
lea
push
cmp
ds
in
cdq
out
add
mov
iret
jg
and
popa
mov
leave
lods
xor
dec
lock
and
mov
mov
add
mov
std
xchg
fdivr
xchg
imul
xor
adc
push
inc
cmp
dec
call
pop
sub
pop
jmp
stos
sub
addr16
out
pop
sbb
in
push
jns
cwde
pmovmskb
dec
dec
push
mov
xor
xchg
ins
pushf
pcmpgtw
test
or
fmul
pop
adc
lahf
sub
mov
cmp
jmp
ret
add
xor
mov
cmps
or
test
jb
stos
out
cdq
leave
push
aam
pop
and
pushf
lods
fcmovu
jae
adc
or
inc
pop
cwde
xchg
push
retf
test
dec
jo
add
ret
adc
add
in
mov
mov
cmc
ret
jle
jmp
jecxz
xor
and
xor
sub
sbb
ret
fcomp
rcr
stos
aaa
in
sbb
or
pop
ror
inc
push
xchg
repz
cmp
mov
mov
nop
jl
out
push
and
mov
sbb
cvtdq2ps
gs
fsubr
rcr
sbb
mov
sub
mov
dec
outs
lahf
call
and
jmp
xchg
add
retf
sahf
mov
mov
cli
cdq
sub
int3
pop
and
ins
movs
jnp
xchg
push
seta
pop
scas
out
shl
or
inc
xor
ret
add
push
cdq
sub
add
(bad)
aad
mov
rol
cmc
mov
test
mov
cwde
gs
mov
iret
movs
mov
pop
mov
add
inc
push
retf
pusha
data16
dec
out
adc
and
add
or
popa
sub
inc
adc
xor
stc
mov
jp
fild
(bad)
es
dec
ins
cmc
adc
push
(bad)
idiv
fild
sbb
dec
fbstp
ret
xchg
xchg
into
stos
pop
and
inc
les
fisttp
lods
shl
push
fistp
or
xchg
mov
jle
call
loope
aad
hlt
les
sub
cs
out
pop
jmp
push
xor
adc
jb
scas
shl
inc
pushf
jb
cmps
in
xlat
ss
dec
push
sti
xor
mov
xor
retf
push
add
movntps
push
jecxz
push
push
bound
bound
jecxz
fwait
add
sbb
loope
mov
clc
xor
adc
popa
sbb
data16
adc
repnz
or
scas
ficomp
add
fcom
inc
aad
lea
popf
xor
xchg
dec
scas
repz
ja
push
lahf
cmps
add
test
mov
inc
mov
pop
lahf
jae
inc
pop
lods
ja
sub
lods
push
push
jns
mov
loopne
sub
popa
add
rol
or
or
mov
dec
jae
mov
loop
retf
add
sub
cmp
aas
in
or
in
and
fiadd
or
add
add
and
push
icebp
push
pop
xchg
sub
enter
(bad)
lock
and
mov
cmp
repnz
in
jg
dec
(bad)
icebp
add
add
adc
test
push
adc
dec
retf
cs
sbb
ret
loop
movups
jle
loopne
sbb
jmp
mov
pop
cs
inc
jecxz
gs
sub
and
movs
je
mov
xchg
clc
ret
loop
cld
pop
loope
dec
test
xchg
lock
inc
jne
lock
xchg
loopne
push
stc
add
jno
scas
icebp
pop
add
lock
clc
inc
cli
xchg
cs
mov
imul
push
cdq
cdq
cdq
cdq
ins
mov
cli
cs
inc
cmp
add
add
add
aas
and
jge
pop
mov
pop
xchg
add
pop
mov
push
psllw
mov
mov
cld
in
and
mov
jg
fwait
lock
jge
test
cdq
push
popa
add
test
dec
xchg
shr
hlt
push
push
inc
and
(bad)
push
dec
xchg
sub
push
pop
xor
inc
ret
push
dec
jmp
fisttp
cli
push
pop
movs
jne
push
in
or
js
js
mov
sar
add
xchg
sub
push
paddb
pop
in
mov
stc
addr16
outs
push
xchg
loopne
xchg
inc
mov
mov
xchg
(bad)
sub
in
outs
lods
je
add
inc
test
add
add
adc
adc
add
popf
and
mov
dec
pusha
lods
adc
in
aas
test
push
stos
imul
sbb
pop
imul
mov
mov
dec
sub
mov
(bad)
out
mov
mov
cld
dec
and
retf
xchg
loopne
data16
adc
mov
cmp
loopne
push
jl
dec
or
mov
clc
cmp
ret
inc
xlat
dec
jmp
mov
dec
xchg
push
xor
inc
push
mov
imul
stc
jbe
pop
(bad)
out
cld
lods
mov
inc
mov
sbb
add
mov
sub
ret
pop
dec
sbb
sbb
retf
push
movs
jns
dec
cs
inc
inc
arpl
adc
out
imul
scas
jl
mov
cwde
cs
dec
test
xlat
fisub
pop
mov
or
fstp
jnp
or
cs
test
int
call
mul
fiadd
or
add
add
adc
js
xchg
xchg
out
sub
es
mov
js
cmp
and
push
ins
xchg
dec
xor
lea
dec
and
cwde
push
jb
jle
imul
mov
outs
add
mov
pop
rcr
arpl
inc
adc
sub
sub
adc
cmp
adc
mov
mov
adc
add
push
add
test
or
lock
xchg
mov
into
jmp
pop
sbb
or
and
mov
stos
xchg
loopne
xchg
je
imul
mov
adc
cmp
cmc
sbb
pop
arpl
pop
push
shl
or
test
adc
and
je
inc
in
and
and
sbb
adc
add
inc
fadd
dec
shl
nop
mov
pop
xor
pop
addr16
pop
les
iret
imul
(bad)
or
int
fucomp
repz
jae
fcom
out
jo
push
push
pop
jno
arpl
sbb
push
int3
mov
rcl
dec
pushf
loopne
arpl
adc
push
shl
ins
push
cmp
jno
inc
call
xchg
or
cmp
push
jb
(bad)
mov
adc
movs
jle
push
(bad)
rcl
sub
xchg
bound
popf
mov
into
out
ret
sub
imul
fstp
sti
push
jno
int
fild
neg
xchg
xchg
push
push
push
fs
sbb
mov
leave
mov
int3
and
adc
push
jb
jbe
mov
or
add
push
push
clc
and
rcl
xchg
enter
pop
mov
fwait
repnz
cwde
inc
cmp
mov
movs
adc
mov
lahf
dec
jo
push
push
idiv
jae
add
pop
inc
jb
(bad)
pop
mov
mov
cmp
bound
mov
and
push
fbld
mov
mov
(bad)
aaa
test
fstp
mov
shl
(bad)
ja
and
xchg
mov
call
jae
pop
push
loopne
loopne
add
mov
cdq
jl
or
xchg
xor
pop
rcl
shl
popa
xor
add
stc
aam
dec
pop
scas
loope
ret
sahf
repz
test
xchg
xchg
mov
imul
sub
movs
retf
out
leave
xchg
xchg
jle
mov
jb
jecxz
ins
jp
dec
ret
pop
fcmovb
push
aad
fadd
xchg
enter
add
cs
push
push
mov
in
loopne
sub
ja
sub
mov
or
imul
add
mov
sub
jbe
out
mov
ins
mov
lds
(bad)
push
ins
loope
loope
push
loopne
in
lods
pop
(bad)
xor
jb
cmp
pop
add
add
pusha
fwait
ret
pushf
stc
sbb
add
dec
sbb
push
adc
in
into
ret
out
or
add
push
push
mov
pop
das
rcr
hlt
psubd
not
ficomp
cmps
cmps
and
sar
inc
mov
mov
dec
mov
pop
(bad)
xlat
movs
pop
mov
cmc
mov
mov
jnp
sub
aaa
jmp
(bad)
push
fwait
imul
in
popa
push
int3
(bad)
sbb
ins
xchg
mov
and
mov
jb
jb
addr16
dec
xor
sbb
stos
in
add
movs
jns
(bad)
es
add
aam
add
fsub
xchg
popa
adc
dec
(bad)
pop
jmp
cwde
jmp
push
pop
pop
mov
dec
aam
cwde
pop
xchg
test
mov
mov
dec
repnz
ss
bound
es
int3
sub
call
and
xchg
not
inc
in
sub
(bad)
sbb
adc
ins
push
add
pop
jnp
mov
push
aad
push
ja
add
adc
pop
pop
add
sbb
cli
aam
movs
sub
push
sub
dec
push
xchg
push
jmp
fwait
leave
lods
jno
rcl
loopne
fimul
dec
mov
add
outs
adc
cli
scas
mov
adc
push
cmp
push
movs
mov
(bad)
mov
and
and
push
jge
xchg
adc
pop
div
push
(bad)
fmul
add
jbe
stc
loop
(bad)
inc
sbb
mov
jo
cmps
mov
retf
adc
xchg
mov
push
pop
xchg
xchg
sub
pop
(bad)
sti
out
mov
adc
xchg
or
inc
or
push
xchg
push
adc
sub
cli
mov
and
fdiv
inc
sar
mov
sub
jo
arpl
or
ret
iret
aam
xchg
pop
and
mov
or
adc
mov
add
sub
cmps
pop
test
sub
pop
mov
add
jo
add
mov
sub
mov
stos
mov
data16
or
inc
stos
inc
mov
mov
xchg
and
in
push
stos
and
push
mov
or
pushf
das
repz
call
mov
fcmovnbe
sbb
cli
icebp
lahf
mov
add
xchg
aaa
jae
test
mov
sub
xchg
popa
xlat
jecxz
xchg
inc
stos
cmp
or
lea
pop
cmp
push
mov
rcr
push
popa
shl
pop
loop
cmc
xor
shl
and
call
pusha
cmps
jmp
mov
pop
popf
xchg
js
push
(bad)
jo
outs
lock
fidivr
adc
test
stos
in
push
mov
mov
sub
sbb
inc
aaa
pop
dec
stos
xchg
xor
mov
sub
cmp
and
in
ds
fwait
mov
rol
push
adc
iret
inc
or
and
xlat
ret
push
xor
es
mov
push
jmp
ret
stc
xchg
sub
push
cli
mov
dec
push
push
adc
pushw
add
inc
dec
cmp
fs
adc
and
inc
fdiv
mov
rol
pop
sub
call
movs
mov
pop
les
aaa
adc
inc
dec
push
ss
cmp
or
inc
sub
cdq
dec
sbb
push
and
int
sub
mov
lea
dec
and
xor
adc
dec
pop
mov
sub
lock
push
add
cmps
cmp
clc
movs
jno
movs
ret
push
int
or
and
pop
pop
push
or
int
push
jp
pop
jge
pop
movs
sub
inc
adc
mov
es
bound
les
mov
int3
rcr
push
cwde
cdq
xchg
das
sub
sbb
into
adc
pop
nop
cmp
sti
lds
jns
push
mov
adc
in
fcomp
mov
adc
test
mov
sub
push
repz
pushf
xchg
ficom
xor
mov
adc
sub
test
test
jp
pop
mov
fsubr
loopne
mov
movs
add
les
add
cwde
mov
stos
jb
pop
xor
or
iret
aam
ss
add
mov
sbb
xchg
cmps
mov
das
xchg
adc
(bad)
clc
cmp
shl
test
repz
push
inc
cdq
inc
dec
cld
cmps
cs
popf
inc
inc
int3
or
or
lea
or
les
add
sahf
icebp
mov
arpl
fisub
xchg
or
in
retf
jno
cmc
pop
shl
sar
ror
mov
mov
cdq
ins
test
mov
add
rcl
(bad)
add
adc
inc
popa
xor
or
test
adc
fadd
or
xchg
mov
test
cmc
mov
sbb
jb
mov
call
jb
cld
mov
xor
jge
push
scas
sub
sub
pop
jne
in
xor
call
lock
mov
pop
xor
call
xor
sar
retf
mov
rol
test
popa
mov
mov
sub
add
inc
ins
lock
mov
sbb
inc
mov
fcomp
pusha
push
rcl
cmps
mov
movs
inc
sub
arpl
sub
aaa
xchg
inc
into
jge
sbb
movs
dec
shr
and
and
push
in
pop
pop
ins
jp
loope
pop
into
adc
ret
aam
cwde
jle
fistp
xor
mov
xor
sbb
push
hlt
inc
pop
int3
mov
les
out
adc
push
imul
push
fxam
push
repz
pop
xchg
and
sub
(bad)
pop
add
popa
push
jns
jo
mov
fyl2xp1
cwde
pop
test
sbb
xchg
mov
jno
loop
add
push
push
jecxz
pop
dec
inc
ret
mov
ins
lea
mov
(bad)
push
add
sub
iret
xchg
pop
jae
cmp
mov
div
inc
xor
mov
fwait
mov
pop
jecxz
aaa
add
(bad)
(bad)
out
xchg
cmc
sub
out
cli
sbb
inc
mov
outs
int3
jo
(bad)
cmp
das
jg
add
mov
ror
xchg
pop
inc
in
inc
fs
mov
cmps
cmp
(bad)
adc
cmp
popa
add
sbb
or
test
jp
jmp
dec
sti
sbb
sub
cmp
xor
enter
rcl
iret
xchg
dec
ins
(bad)
enter
mov
arpl
mov
fchs
bound
test
adc
add
cmp
jg
rol
mov
mov
imul
retf
fcomp
pop
jb
push
in
adc
shr
and
dec
in
or
cmp
push
xor
add
add
sbb
adc
cli
dec
mov
loopne
imul
shl
mov
lock
mov
dec
movs
jne
cmp
mov
jae
xchg
fwait
aas
xchg
inc
dec
push
loopne
adc
jl
add
add
mov
setno
add
stc
ds
push
ins
ins
push
sti
cwde
mov
xor
aad
(bad)
mov
es
push
out
and
sbb
pop
mov
cmp
rcr
add
out
lods
rcl
sahf
jno
stos
sub
inc
sbb
xchg
push
test
stos
out
gs
cmp
sbb
jno
mov
arpl
add
mov
jae
sbb
in
sahf
push
pop
aaa
xchg
sbb
out
pop
cli
and
aaa
fwait
cmp
add
pop
enter
push
jnp
xchg
cmc
xor
pop
jle
add
inc
cmc
sahf
inc
repz
ja
popa
pop
ds
aas
bound
aad
addr16
fwait
shl
adc
or
arpl
leave
add
fwait
stos
retf
imul
scas
pushf
dec
jecxz
add
das
sar
repz
inc
xor
dec
push
jo
movs
inc
movs
mov
leave
pop
test
jae
xor
(bad)
mov
dec
add
and
xor
jb
(bad)
push
sbb
enter
add
cmp
out
sbb
call
pop
ja
cmp
out
fstp
jge
pop
or
add
loop
cmp
jno
jecxz
xchg
adc
call
ret
push
loope
and
stos
ins
cli
inc
stos
push
and
dec
arpl
inc
mov
push
pop
pop
mov
push
int
adc
repnz
add
inc
and
pop
inc
or
or
and
jmp
pop
mov
pop
sub
fmul
xchg
mov
jmp
das
inc
stos
push
cmps
rcl
pop
cmps
lods
ss
mov
mov
jp
or
and
jns
repz
cwde
mov
test
mov
mov
shr
mov
jb
xchg
mov
loop
popa
pop
ds
test
repz
pop
or
jle
adc
or
bound
imul
mov
xchg
int3
pop
and
mov
jecxz
cmp
test
cs
aam
je
dec
lods
jp
pop
clc
out
mov
mov
cmc
add
add
jbe
ins
jbe
leave
cmps
dec
push
mov
push
test
adc
jne
pop
data16
shl
and
sbb
mov
gs
into
ret
pop
ret
sbb
mov
dec
mov
mov
mov
aas
fmul
mul
sub
xor
dec
out
(bad)
addr16
xor
js
mov
jno
add
movs
sti
les
aam
push
rol
(bad)
cwde
out
mov
add
das
sbb
aam
add
cmp
mov
pop
sub
stos
push
xchg
inc
cmp
in
out
jno
mov
fisubr
dec
je
sub
push
mov
rcl
mov
jns
adc
push
(bad)
push
aad
pop
mov
outs
xchg
(bad)
pusha
sbb
xor
adc
pop
and
sub
jmp
movs
lea
xor
test
imul
sbb
cmps
cmp
cmp
std
retf
mov
outs
in
add
sbb
loope
inc
sub
out
(bad)
test
inc
mov
mov
and
sahf
leave
in
(bad)
mov
stc
in
call
jnp
add
sti
dec
cmc
addr16
popf
test
add
add
aas
adc
or
add
nop
lock
rcl
cmp
or
imul
inc
xchg
inc
(bad)
push
test
sbb
cli
das
dec
push
mov
test
(bad)
pop
loop
popf
call
push
inc
mov
shr
mov
push
mov
ror
cmp
js
loop
and
mov
pop
and
lods
mov
mov
xor
dec
mov
loopne
jo
push
mov
add
es
xchg
dec
mov
or
pop
rol
lds
push
push
adc
pop
dec
mov
test
test
sbb
adc
bound
add
or
es
inc
nop
xchg
cmc
or
pop
dec
xchg
test
loop
sahf
lea
sub
out
add
and
xchg
call
or
ja
and
cmp
mov
sbb
sub
or
jo
sub
inc
xor
into
and
push
test
pop
pop
xchg
sub
and
xor
mov
test
and
retf
(bad)
xor
cmp
popf
inc
inc
sub
sub
call
shl
clc
sbb
aaa
jno
mov
jne
(bad)
lock
pop
hlt
and
bound
add
sar
mov
je
aaa
xor
aam
add
push
icebp
xor
dec
call
push
mov
mov
js
outs
adc
xchg
cs
test
xchg
nop
sbb
push
dec
add
shl
imul
sub
pop
test
sahf
inc
shr
dec
jbe
xchg
xchg
pop
lods
dec
and
retf
xchg
dec
and
xchg
(bad)
movs
dec
inc
ret
add
add
add
aas
adc
inc
hlt
(bad)
mov
xchg
jb
rol
jbe
cmps
xor
sbb
or
bound
ds
retf
mov
aam
fisttp
and
pop
add
aad
xchg
xchg
cmp
in
mov
js
rcl
xchg
sub
sub
sbb
call
jl
inc
inc
icebp
and
xor
dec
sub
(bad)
hlt
xor
mov
sbb
mov
fistp
mov
call
call
jge
imul
mov
or
cmps
and
or
mov
jge
call
adc
and
jae
and
dec
loope
xchg
mov
test
hlt
sub
shl
sub
mov
popf
sub
jno
pop
test
cmp
and
sar
sub
sbb
mov
lods
jp
sub
sub
(bad)
shl
je
hlt
push
or
mov
into
sub
movs
inc
sub
mov
jae
ror
pop
xchg
retf
xchg
or
int3
(bad)
pop
prefetch
sbb
cmp
xchg
add
inc
push
unpckhps
sbb
xor
adc
adc
cmp
loopne
jb
cmc
jp
sbb
add
pop
dec
xchg
(bad)
movs
retf
jmp
pop
dec
xchg
lock
inc
mov
retf
pusha
rcl
inc
inc
movs
scas
inc
movs
mov
call
cwde
ret
xchg
sbb
xchg
sub
jmp
cmp
xchg
shl
test
int3
adc
pop
sbb
inc
mov
cdq
xchg
inc
inc
movs
adc
sub
push
test
sub
in
add
inc
(bad)
fld
add
adc
adc
mov
inc
sub
add
or
add
gs
xor
add
gs
xor
js
iret
add
add
add
adc
inc
pop
add
or
add
add
gs
xor
add
sbb
push
jb
addr16
outs
and
jo
gs
and
and
ins
imul
rol
add
(bad)
or
add
add
pop
add
mov
add
push
popa
push
add
push
add
popa
xor
sbb
outs
push
add
ins
je
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
es
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
mov
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
or
jle
std
push
in
cli
jg
test
mov
inc
(bad)
mov
add
pop
popa
hlt
pop
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
out
mov
lock
inc
(bad)
jg
ss
inc
(bad)
jg
sub
sub
cmp
or
inc
add
add
xor
call
outs
ins
inc
ins
addr16
outs
ins
ins
outs
outs
inc
imul
dec
inc
or
dec
add
add
inc
xor
or
add
dec
add
add
add
xchg
stc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
outs
outs
gs
ins
outs
xor
dec
add
gs
push
push
popa
outs
gs
add
add
xchg
and
inc
(bad)
add
popa
add
add
add
add
push
add
ret
add
add
add
(bad)
(bad)
inc
add
add
add
or
jecxz
stos
add
push
add
add
nop
add
add
popa
outs
jae
push
gs
data16
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
cmp
inc
pop
add
or
popa
bound
xor
add
add
add
(bad)
(bad)
inc
add
rol
add
adc
adc
and
mov
add
popa
outs
jae
push
gs
data16
add
adc
push
imul
dec
jo
jb
je
jbe
and
inc
das
add
or
popa
bound
xor
add
add
add
add
inc
add
or
adc
add
daa
add
add
add
push
add
gs
xor
add
or
push
gs
imul
add
add
rol
add
add
add
mov
inc
adc
add
daa
add
add
add
or
popa
bound
xor
add
add
add
add
inc
add
pop
add
add
push
add
daa
add
add
add
or
popa
bound
xor
add
add
add
add
inc
add
xor
inc
adc
add
add
add
or
popa
bound
xor
add
or
push
je
outs
je
and
add
add
add
rol
add
add
add
mov
inc
adc
adc
daa
add
add
add
add
je
add
add
xor
add
rol
add
add
add
aaa
add
add
and
nop
add
add
push
popa
push
add
add
push
add
popa
xor
adc
add
add
popa
add
(bad)
inc
sbb
add
ins
xor
adc
or
imul
imul
add
add
add
ins
xor
adc
adc
push
imul
outs
outs
and
arpl
jbe
add
add
add
add
add
ja
add
add
add
add
add
add
add
ins
xor
add
fs
imul
je
ins
jo
add
add
add
add
add
ins
xor
adc
push
add
outs
jne
and
arpl
jbe
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
bound
outs
outs
outs
and
jo
imul
gs
add
adc
add
popa
cmp
adc
add
add
push
add
add
pop
add
push
or
dec
outs
outs
jb
popa
jp
outs
outs
imul
add
sbb
add
add
add
add
jae
jae
outs
jp
add
add
add
sbb
add
xor
adc
add
sub
add
add
sbb
add
add
add
dec
outs
outs
add
add
add
add
add
xor
adc
add
sub
add
add
add
add
xor
adc
or
inc
outs
jo
jb
addr16
adc
add
sbb
xor
adc
add
sub
add
add
addr16
adc
or
jo
imul
popa
add
add
add
add
dec
xor
(bad)
popa
add
add
push
loopne
nop
fwait
mov
jle
inc
mov
imul
dec
lods
xor
or
stos
add
xchg
sahf
rol
sbb
add
imul
or
dec
jb
ins
outs
imul
add
add
inc
add
add
(bad)
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
or
jo
and
adc
lock
lock
fcom
lock
sbb
add
adc
adc
lock
lock
lock
rcl
lock
adc
test
lock
adc
add
adc
adc
adc
adc
lock
lock
lock
rcl
lock
mov
lock
lock
lock
add
adc
adc
adc
adc
pop
add
add
test
lock
adc
mov
lock
jo
lock
dec
lock
adc
adc
adc
adc
add
mov
lock
lock
lock
adc
xor
adc
lock
adc
adc
add
pusha
adc
push
adc
dec
adc
inc
adc
xor
and
adc
lock
lock
lock
add
add
dec
adc
inc
adc
xor
lock
add
lock
lock
lock
lock
add
xor
lock
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
lock
lock
lock
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
lock
lock
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
lock
lock
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
cwde
adc
cwde
adc
cwde
adc
add
cwde
adc
cwde
adc
cwde
adc
add
lock
adc
cwde
adc
cwde
adc
add
adc
adc
adc
adc
adc
adc
sbb
lock
lock
lock
adc
adc
adc
adc
adc
lock
lock
lock
lock
rcl
lock
lock
lock
lock
adc
nop
adc
nop
adc
nop
adc
nop
adc
nop
adc
sbb
lock
lock
lock
adc
adc
adc
adc
adc
lock
lock
lock
lock
rcl
lock
lock
lock
adc
mov
lock
lock
lock
lock
lock
lock
lock
adc
adc
adc
adc
adc
lock
lock
lock
lock
rcl
lock
lock
lock
add
add
lock
lock
call
adc
mov
lock
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
adc
enter
adc
fadd
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
lock
lock
lock
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
adc
call
loopne
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
call
adc
lock
lock
enter
adc
loopne
lock
add
add
shl
adc
lock
mov
lock
adc
add
add
mov
adc
add
cwde
adc
test
lock
lock
add
add
test
adc
adc
add
js
lock
lock
adc
mov
lock
add
cwde
lock
adc
adc
adc
add
push
adc
pusha
adc
jo
lock
lock
lock
adc
add
xor
js
adc
adc
adc
adc
lock
lock
lock
lock
lock
adc
dec
adc
pop
adc
push
lock
add
adc
adc
adc
adc
lock
lock
lock
lock
lock
adc
dec
adc
pop
adc
pusha
adc
add
xor
adc
lock
lock
lock
lock
lock
add
(bad)
(bad)
(bad)
push
ud0
rol
inc
add
inc
loopne
cld
pop
clc
pop
clc
jg
(bad)
(bad)
dec
loope
inc
dec
jecxz
or
jecxz
sahf
jns
(bad)
(bad)
push
(bad)
(bad)
push
lock
add
add
add
add
pop
(bad)
(bad)
(bad)
inc
sahf
jns
(bad)
or
inc
or
jmp
sahf
jns
loope
inc
clc
jg
pop
cld
pop
clc
aas
inc
loopne
inc
add
inc
add
(bad)
clc
pop
(bad)
(bad)
(bad)
(bad)
jmp
ins
xor
add
add
push
add
add
jp
add
popf
pop
add
inc
add
inc
das
add
add
add
je
add
add
add
add
or
aaa
add
adc
add
jmp
add
and
xor
inc
cdq
add
add
or
push
push
push
popa
outs
gs
xor
dec
add
gs
push
push
popa
outs
gs
add
add
rcl
test
add
dec
inc
or
popa
add
add
add
add
add
add
sldt
add
adc
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
inc
aam
add
add
ins
ins
popa
outs
xor
add
or
dec
jne
jbe
and
popa
jb
outs
add
add
add
loopne
add
or
add
add
or
adc
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
inc
add
sub
sub
inc
fisttp
add
add
add
ins
ins
popa
outs
xor
add
push
add
arpl
popa
add
add
add
rol
add
pop
cmp
add
add
arpl
ltr
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
add
ins
je
add
dec
inc
cmp
popa
mov
cmps
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
or
or
or
or
or
or
or
or
or
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
and
and
and
and
and
and
and
and
and
daa
daa
daa
sub
sub
sub
sub
sub
sub
sub
sub
sub
das
das
das
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
aas
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
popa
popa
popa
bound
arpl
fs
imul
imul
ins
ins
ins
ins
outs
outs
outs
outs
outs
outs
jo
jo
jno
jb
jb
jae
je
je
jne
jbe
jbe
ja
js
js
jns
jp
jp
jnp
jl
jl
jge
jle
jle
jg
add
add
test
xchg
mov
mov
mov
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cwde
cwde
cdq
cdq
cdq
call
pushf
pushf
popf
popf
popf
sahf
sahf
sahf
lahf
lahf
lahf
mov
mov
mov
movs
movs
movs
cmps
cmps
cmps
cmps
cmps
cmps
test
test
test
stos
stos
stos
lods
lods
lods
lods
lods
lods
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
rol
ret
ret
ret
(bad)
(bad)
(bad)
(bad)
mov
mov
leave
leave
leave
retf
retf
retf
retf
int3
int3
int3
int
int
into
into
iret
iret
iret
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
aad
(bad)
(bad)
(bad)
xlat
xlat
xlat
fcomp
fcomp
(bad)
fcmovu
fcmovu
fcmovnu
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
loopne
loopne
loope
loop
loop
jecxz
in
in
in
out
out
out
call
jmp
jmp
in
in
in
in
in
in
out
out
out
out
out
out
lock
icebp
icebp
repnz
hlt
hlt
cmc
cmc
cmc
div
div
div
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
or
add
fwait
shr
hlt
xchg
dec
pop
mov
or
sbb
ins
xlat
mov
jecxz
out
pop
mov
xlat
mov
sbb
jb
mov
shl
cmp
mov
cmp
scas
sub
mov
loop
jne
xchg
cmps
xor
or
into
pushf
mov
jecxz
mov
jbe
arpl
xchg
cmp
pop
dec
mov
cmp
pop
sbb
in
fiadd
loop
outs
xchg
mov
sar
jbe
pop
mov
iret
mov
fsub
inc
or
add
dec
pop
pop
outs
pop
or
push
xchg
or
test
ins
mov
rcr
sbb
retf
mov
sub
mov
push
js
sbb
nop
cmp
pushf
xchg
xchg
jo
into
pop
outs
pop
jnp
dec
fidiv
xchg
shl
pushf
push
jo
repz
(bad)
fcmovu
pop
sbb
dec
push
jb
sbb
jbe
inc
outs
jecxz
sbb
outs
cmp
pop
xchg
ss
inc
xchg
gs
lds
jns
ss
shl
inc
mov
movs
sbb
xchg
inc
ficom
xor
rcl
int
shr
or
dec
inc
pop
jge
popa
xor
jno
and
aam
add
iret
cmp
fsubr
movs
mov
cmp
test
into
ins
out
jae
addr16
xchg
loopne
jae
inc
pop
inc
dec
loope
loope
aaa
lea
jecxz
jbe
nop
push
fbstp
retf
hlt
xchg
mov
push
push
mov
je
mov
and
in
inc
dec
imul
sbb
dec
rcl
jg
mov
mov
cmps
add
dec
cmp
loopne
mov
sub
push
xor
cmps
aam
clc
in
cmp
lea
sahf
fsub
fnsave
(bad)
jno
xchg
mov
mov
pop
or
movs
test
and
push
movs
retf
int3
inc
lea
test
or
int
adc
test
lods
xchg
addr16
mov
cmp
or
popf
mov
aaa
test
sbb
xor
jo
push
nop
xchg
xchg
adc
outs
(bad)
sbb
jb
and
int
push
loopne
add
push
xchg
bound
loope
(bad)
dec
jno
fcomp
out
add
dec
cmp
xchg
xchg
adc
cmp
mov
cmp
jg
fs
push
not
push
scas
add
pushf
push
mov
jne
pushf
adc
shl
adc
xor
push
sub
jae
xor
ins
pop
push
xchg
test
inc
and
out
not
dec
cs
xchg
and
push
push
xchg
add
leave
xchg
xor
or
xor
inc
movs
out
fcmovu
jns
fwait
push
into
retf
xchg
call
outs
cmp
push
push
lods
xor
and
jns
xlat
clc
addr16
js
test
jle
pop
ror
xor
dec
mov
cld
popa
pop
call
or
pop
dec
xor
and
jmp
xchg
call
jns
pop
ss
xor
ss
inc
xchg
xchg
retf
adc
push
dec
mov
loope
cmc
inc
sbb
pop
mov
cmp
addr16
fidivr
retf
fisttp
xor
mov
adc
test
jp
or
mov
fist
xor
or
adc
outs
fadd
sub
mov
push
outs
js
sbb
retf
mov
push
jno
pop
push
fs
ficom
lods
or
adc
call
xchg
pop
std
push
and
ror
pop
je
iret
pop
inc
jg
mov
mov
mov
scas
mov
lods
xchg
out
xchg
arpl
xchg
adc
lods
fidivr
into
add
(bad)
mov
out
ret
sbb
pop
rcl
dec
cmp
dec
(bad)
aad
pushf
xor
ss
inc
pop
dec
arpl
mov
les
jae
or
dec
xchg
nop
adc
mov
or
add
nop
pop
or
pop
mov
mov
(bad)
mov
mov
inc
xor
aad
test
adc
into
add
xchg
xchg
add
(bad)
dec
jo
gs
imul
outs
inc
addr16
xchg
adc
push
xchg
pop
mov
adc
adc
xchg
and
addr16
ins
jg
lock
or
daa
jns
push
or
inc
jmp
jne
pop
xchg
retf
mov
lds
jb
inc
mov
ret
push
cmp
and
ss
aaa
lea
sub
adc
inc
aam
xchg
lahf
jle
stos
sahf
inc
cs
pop
inc
pushf
cmp
cmp
mov
inc
scas
jae
les
icebp
sbb
imul
mov
loope
cmps
xor
or
mov
or
and
stos
sub
fld
xor
jns
into
sub
daa
loop
rol
stos
sbb
xchg
les
call
je
arpl
push
lea
dec
or
cmps
xchg
add
xor
adc
(bad)
jae
rcr
sbb
adc
in
and
test
push
sbb
ret
mov
mov
je
sbb
rcr
adc
mov
push
xor
int3
sub
mov
dec
pop
pop
rol
mov
(bad)
push
jne
nop
sub
mov
cmps
stc
mov
call
dec
push
push
sub
enter
jmp
or
lds
popa
dec
data16
loop
adc
or
or
pop
mov
mov
jnp
aad
aaa
xor
test
cs
and
enter
jle
cmp
cmp
push
rol
and
std
and
cmp
or
int
push
fisttp
sub
mov
xchg
jg
sbb
sub
xor
out
and
mov
push
popa
aad
pop
stc
sub
or
push
fbld
and
int3
xor
or
add
cmp
jne
mov
xchg
fld
aaa
imul
xlat
mov
push
fnstenv
in
jo
jmp
mov
cmp
mov
pop
fist
mov
push
pop
arpl
test
adc
jmp
dec
call
cdq
fwait
dec
lods
lods
rcl
test
adc
or
adc
loope
rcr
sub
sub
ror
cdq
iret
loope
and
lods
push
popa
mov
sub
inc
mov
adc
jno
fs
or
stos
ffree
call
outs
mov
in
cmp
(bad)
(bad)
dec
push
ret
les
and
adc
lea
jmp
shl
sub
test
fcomp
adc
pop
sar
mov
cmp
stos
popa
dec
shl
lods
outs
in
dec
jo
pop
dec
test
stos
outs
xchg
sub
jne
push
mov
jge
mov
ret
out
jns
and
jno
dec
pop
cmp
cli
dec
adc
mov
adc
and
aaa
icebp
xor
ins
dec
sub
inc
inc
sbb
sbb
mov
push
inc
dec
mov
cmp
adc
aad
aas
xor
sub
push
mov
dec
out
cvttps2pi
jl
pop
sbb
jle
jmp
pushf
dec
dec
mov
call
fidiv
test
mov
mov
sahf
cwde
adc
dec
(bad)
aaa
je
mov
into
in
bound
sar
mov
fs
in
sub
cmp
ss
or
out
cmp
shl
ins
stc
jmp
cmps
fiadd
dec
fdiv
cs
and
pop
scas
fucomp
movs
inc
stos
les
xchg
daa
cmp
inc
mov
or
je
mov
test
mov
popa
es
and
(bad)
sbb
ficomp
mov
mov
or
fsubr
adc
call
sbb
xchg
fwait
push
xor
call
fisub
push
sub
push
fsub
cmp
pop
cmps
xor
inc
arpl
and
repz
adc
mov
enter
jo
into
inc
or
mov
xor
cmp
push
call
ds
push
push
sti
ror
nop
cmp
psrad
inc
popa
sub
push
pop
push
adc
bound
xchg
xor
jne
addr16
cmc
add
sub
push
push
mov
(bad)
push
sub
cmp
in
mov
xor
sbb
in
dec
mov
fsub
das
add
pushf
push
adc
dec
dec
add
adc
inc
sbb
cmp
in
jge
pop
repz
into
xor
xchg
dec
out
xor
push
jge
mov
in
js
call
inc
add
and
pop
inc
jb
adc
and
pop
cmps
dec
(bad)
jg
push
push
push
loope
xlat
loop
fsub
jbe
pop
cmp
dec
ins
push
inc
cld
add
and
push
repnz
icebp
sub
push
xor
jb
push
push
mov
mov
jl
or
xor
cwde
mov
mov
mov
std
push
adc
push
jg
daa
js
rcr
(bad)
es
xor
dec
fwait
add
mov
add
fisub
cli
gs
test
cmp
inc
mov
push
iret
test
hlt
xor
dec
aam
and
xor
bound
pop
int
jnp
push
pop
in
out
lods
enter
push
rcr
sub
or
mov
or
push
push
test
add
dec
ret
sub
add
and
cmp
adc
je
xchg
clc
adc
jmp
daa
lea
(bad)
push
and
addr16
push
and
jle
ret
hlt
adc
mov
sub
push
sbb
push
inc
sbb
xor
push
jne
(bad)
(bad)
push
and
lock
mov
jl
jne
mov
xlat
xchg
das
sbb
pop
in
cmc
push
mov
xchg
inc
sbb
push
inc
fidiv
jns
daa
mov
pop
cmps
ror
jae
out
push
jge
mov
xor
mov
sub
or
and
xor
ret
ss
mov
pop
ror
and
popa
push
pushf
mov
or
iret
bound
and
das
cmps
adc
mov
rol
xchg
adc
repnz
ins
pop
cdq
outs
scas
add
inc
fcom
dec
mov
xchg
sbb
sbb
loop
pop
jae
and
inc
fbstp
cmp
add
pop
xchg
xor
nop
adc
adc
in
push
and
cmp
jb
shl
call
mov
add
pushf
adc
leave
push
xor
popf
cs
lods
mov
cmp
mov
adc
sub
lahf
dec
test
and
test
or
sub
ret
inc
inc
add
js
xchg
shl
pop
adc
call
fwait
or
stos
ret
push
pop
test
inc
fcom
je
sti
rol
and
ins
push
je
fnstenv
and
icebp
lea
adc
outs
(bad)
cmp
pop
adc
js
adc
test
push
and
shl
inc
cmp
(bad)
push
aaa
adc
stc
dec
fsub
push
push
or
pushw
mov
push
mov
sbb
leave
adc
(bad)
push
jmp
push
(bad)
mov
and
imul
addr16
adc
xor
loopne
xchg
shl
daa
arpl
add
daa
rcr
inc
mov
push
ja
inc
daa
enter
jb
xchg
add
mov
push
add
mov
mov
mov
jo
jmp
cmp
push
inc
mov
call
push
pop
pop
das
xchg
mov
(bad)
xor
adc
clc
mov
xchg
inc
sbb
adc
xor
shl
push
pop
shl
les
pop
lods
jmp
xchg
dec
es
sti
xchg
dec
mov
jo
mov
in
sbb
adc
or
cmp
aad
aad
push
in
and
adc
xlat
adc
or
adc
icebp
or
mov
adc
pop
push
push
mov
adc
mov
push
cli
pop
js
jmp
jl
jo
sahf
es
xor
dec
xchg
sbb
and
icebp
pop
(bad)
mov
push
test
adc
sbb
test
push
jnp
xor
outs
xor
push
fs
push
sub
mov
ffree
cmp
test
xchg
test
aas
xchg
sub
retf
push
adc
dec
es
addr16
sub
adc
rcl
push
nop
stos
pushf
nop
aaa
fs
adc
movs
and
dec
xor
or
or
cmps
pop
xor
push
xchg
adc
adc
adc
jb
fstp
mov
jg
add
and
movs
pop
cmp
test
jnp
add
mov
lods
mov
push
dec
mov
repnz
je
mov
add
jb
sub
jno
aad
inc
mov
int
cmp
dec
daa
add
cmp
test
jmp
xor
mov
mov
or
nop
cmp
push
loope
adc
fadd
push
xor
movs
mov
xchg
mov
xchg
jl
push
ins
js
and
test
jno
outs
xchg
push
rol
outs
xchg
jb
bt
mov
loop
dec
shl
mov
push
movs
xor
jmp
xor
and
push
push
cmp
sbb
push
pop
cmps
add
fdiv
fs
loop
jmp
jmp
xor
jp
(bad)
cwde
push
call
(bad)
mov
pop
push
and
xor
(bad)
mov
inc
enter
shl
adc
adc
push
(bad)
push
and
sbb
adc
sbb
retf
imul
movs
test
mov
pusha
mov
or
sub
loop
inc
sbb
gs
mov
cs
scas
xchg
push
mov
mov
pop
loop
in
push
addr16
sbb
mov
pop
lahf
and
gs
add
inc
pop
mov
jae
and
mov
jo
test
sbb
push
inc
jecxz
nop
(bad)
adc
shl
and
out
outs
inc
pop
dec
sbb
in
pop
ja
mov
push
imul
leave
add
sub
adc
fwait
sub
shl
movs
pop
dec
mov
xchg
or
xor
adc
push
pop
loop
and
inc
dec
out
cmp
mov
mov
jno
inc
bound
rol
or
fld
sbb
scas
xor
mov
mov
pop
sbb
daa
and
mov
jmp
sub
sbb
inc
dec
push
mov
in
pop
call
repz
and
push
xchg
sbb
ins
stos
xor
addr16
cmp
jecxz
das
loop
pop
fist
clc
and
push
push
mov
sub
xchg
inc
loopne
or
sub
mov
imul
sahf
inc
mov
imul
out
cdq
(bad)
stos
call
iret
sub
push
and
sub
or
xchg
jbe
dec
and
rcl
and
xlat
loopne
imul
xor
std
push
call
and
inc
pop
(bad)
nop
mov
movs
rcr
dec
lock
mov
outs
mov
rcl
jb
xchg
sbb
jo
test
inc
mov
js
repnz
adc
push
loop
mov
mov
push
jl
repnz
test
loopne
or
inc
retf
and
xor
lock
jns
adc
xor
adc
loope
pop
jmp
mov
mov
rol
push
ja
inc
and
mov
adc
xchg
ins
mov
and
cmp
pop
xor
call
imul
aad
jb
out
cld
push
ret
adc
fnstenv
lock
iret
fsub
mov
or
xchg
push
mov
mov
adc
and
xchg
jae
mov
fwait
mov
lods
fbld
push
lods
push
bound
je
push
jge
out
or
push
and
jne
inc
cmp
fild
lock
adc
aam
or
(bad)
js
das
push
cli
or
popa
xor
mov
push
mov
add
push
sub
fidiv
cmp
push
inc
sub
mov
dec
mov
lds
adc
fcom
push
push
mov
cdq
movs
mov
xchg
adc
cwde
pop
pusha
es
and
cld
mov
add
fsub
sbb
adc
dec
xlat
inc
xor
mov
push
stos
inc
sbb
adc
and
aad
sub
xchg
into
push
push
mov
and
pushf
adc
and
dec
aaa
xor
aam
sub
test
popa
jge
jle
jecxz
add
sbb
mov
pop
scas
xchg
adc
cmp
pop
mov
push
inc
loope
sub
movs
inc
xor
adc
shl
inc
ret
inc
loop
stc
sbb
inc
adc
frstor
or
aaa
jb
inc
cmp
in
inc
fild
mov
es
ja
bound
xor
jge
jge
pop
xchg
fidiv
xor
dec
mov
cmp
push
or
and
xor
test
cmp
push
and
movs
inc
ret
adc
push
inc
mov
mov
sub
loope
ja
into
xor
shl
cmp
shr
push
int3
adc
xor
cwde
jb
dec
xchg
push
stc
push
ficomp
adc
push
push
in
int3
pop
push
jo
push
sbb
or
mov
hlt
xlat
ins
(bad)
jo
sbb
icebp
sub
fcmovnb
mov
push
fiadd
sub
or
mov
inc
xchg
pop
pop
bnd
rcl
push
xchg
mov
jg
xchg
jno
add
fcom
mov
mov
and
cmp
cmp
dec
rcl
jae
and
not
fs
ins
mov
stos
mov
popf
(bad)
jb
dec
popa
push
mov
xchg
fisub
or
mov
bound
inc
dec
movs
out
out
repz
sub
movs
dec
data16
pop
clc
aam
fsubr
adc
(bad)
jo
inc
cs
adc
pop
inc
lea
adc
popa
and
and
adc
mov
pop
andps
and
add
push
jge
xlat
push
nop
adc
dec
leave
nop
ins
and
int
push
aad
les
xchg
fbld
cmp
and
out
lea
imul
pop
mov
fnstenv
sbb
mov
ins
sbb
sbb
cs
movs
sbb
xor
call
jno
mov
ffree
mov
mov
pop
retf
xchg
xor
xchg
xor
aaa
outs
cmp
fdivr
and
push
fwait
ss
fistp
fdivr
(bad)
out
xchg
or
push
retf
xchg
repz
addr16
gs
in
fidiv
movs
fwait
out
(bad)
je
mov
lea
pushf
(bad)
outs
fdiv
pushf
inc
movs
jae
outs
cmp
ins
aad
mov
xor
jge
mov
outs
inc
mov
sbb
xor
iret
mov
cmp
ss
fadd
mov
shl
inc
into
sbb
lods
dec
push
(bad)
in
inc
ins
fidiv
inc
scas
fdiv
sub
dec
push
mov
cmp
scas
fidivr
div
xchg
dec
mov
mov
mov
push
pop
pop
xchg
ds
retf
mov
or
ror
cmp
cdq
(bad)
mov
in
sbb
rcl
cwde
call
ret
mov
sbb
mov
test
lods
adc
cmps
sbb
sahf
mov
repz
or
xchg
jmp
pop
mov
call
mov
sub
lods
ins
les
stos
stos
sbb
iret
sbb
jle
push
test
es
push
cmp
cwd
movs
test
add
and
jno
retf
gs
mov
mov
loopne
shl
mov
xchg
call
ds
es
ss
scas
dec
cwde
test
cmps
cmps
sahf
push
repnz
mov
xor
push
jmp
add
jbe
(bad)
cmp
stos
cmps
fwait
pop
leave
and
and
test
imul
call
or
cmps
sbb
pop
inc
push
mov
adc
sbb
jmp
sahf
dec
push
fwait
adc
sub
mov
ror
cld
push
ret
lods
xor
cmp
xchg
and
cmps
and
sbb
shl
stos
dec
push
push
adc
lea
mov
pop
pop
stos
iret
jp
mov
cdq
out
sbb
imul
adc
xchg
push
adc
test
dec
sub
ins
retf
mov
mov
sub
add
test
rcr
pop
fisttp
shl
ret
fcomp
(bad)
push
fwait
push
sbb
mov
cdq
aaa
movs
loope
sbb
mov
mov
mov
leave
inc
retf
dec
cmp
test
leave
imul
pop
(bad)
mov
cwde
mov
or
ror
pushf
outs
push
scas
data16
mov
int
imul
rol
aas
clc
fwait
jmp
and
aam
shr
mov
push
mov
sbb
clc
sbb
mov
cmps
pop
scas
xor
daa
fwait
adc
das
sbb
xchg
or
retf
lea
arpl
mov
pushf
imul
js
add
jmp
adc
or
sbb
stos
xchg
pop
inc
sbb
fwait
pop
cmp
icebp
xchg
mov
and
inc
mov
inc
or
cmps
mov
icebp
mov
xchg
dec
icebp
repnz
sbb
or
enter
cwde
lahf
xor
mov
les
inc
xlat
add
gs
mov
inc
dec
adc
cmp
in
xchg
jo
das
test
pop
ins
xor
and
rcl
call
inc
push
out
in
pop
rol
stos
or
dec
sbb
xor
sub
aaa
mov
jmp
jg
dec
cmp
mov
mov
pop
scas
test
js
sbb
inc
jl
sbb
test
sub
mov
ret
xchg
or
lea
sub
rcr
xor
dec
lods
lds
dec
pop
jmp
sbb
or
xor
mov
and
mov
or
(bad)
xor
enter
or
mov
arpl
jmp
sub
pop
movs
inc
popf
pusha
or
in
push
adc
fnstsw
sub
mov
jb
call
and
jo
xchg
mov
sbb
bound
ins
in
lahf
sub
inc
jmp
push
mov
retf
ror
idiv
nop
push
or
add
or
adc
das
lahf
bound
jb
push
dec
xor
push
dec
xlat
dec
push
test
mov
add
jbe
int3
pop
nop
dec
xor
dec
inc
jb
mov
mov
sub
ror
pop
repnz
aaa
ror
push
push
xchg
ror
mov
and
retf
inc
jo
adc
lods
test
fisub
inc
les
pop
sub
call
neg
aam
call
pop
mov
scas
push
inc
scas
data16
aam
adc
and
mov
mov
mov
dec
scas
push
adc
sbb
jmp
icebp
sub
movs
leave
sub
jae
push
xor
inc
sub
or
fs
(bad)
cmp
aad
add
xor
xchg
push
pop
inc
cwde
jnp
sub
dec
mov
xchg
mov
call
imul
or
je
sbb
inc
repz
mov
sub
mov
movs
sbb
pop
pop
xor
ror
inc
sub
cld
pop
dec
js
scas
test
pusha
inc
leave
sbb
xchg
(bad)
lods
shl
dec
pop
dec
ins
sbb
push
xor
push
sub
(bad)
cmp
jo
movs
or
xchg
or
arpl
shl
sub
jno
sub
outs
fwait
pop
inc
xchg
lahf
(bad)
ret
push
pop
xor
xchg
retf
xchg
xchg
rcl
in
adc
mov
push
jo
lods
push
jge
and
jmp
ror
dec
inc
xor
loope
jne
sbb
test
imul
or
cdq
sbb
icebp
cmp
ret
repz
xor
xor
test
in
adc
sub
jno
arpl
cmp
dec
jmp
movs
xchg
adc
stos
and
in
(bad)
pop
mov
mov
mov
cdq
pop
outs
mov
and
cmp
out
jb
les
push
test
push
sahf
test
adc
sub
jo
retf
sbb
mov
mov
cmp
test
jge
test
mov
pop
cmp
mov
add
fcom
data16
and
cdq
imul
mov
or
lods
xor
fcomp
ss
pop
cmp
inc
ret
xor
test
inc
mov
or
sbb
lea
mov
mov
xor
inc
add
into
enter
imul
enter
hlt
inc
ret
loope
ror
jno
movs
dec
arpl
sub
jns
popa
hlt
xlat
adc
ror
and
xchg
outs
mov
jmp
aaa
push
ins
inc
enter
dec
jecxz
sbb
iret
xor
ror
cmp
in
xor
and
sub
cdq
sbb
fsub
sbb
out
push
sub
(bad)
cmp
push
hlt
ja
test
into
add
cdq
mov
sub
xchg
xchg
mov
xlat
jb
cwde
js
pop
(bad)
push
cmp
jecxz
lods
adc
cmp
adc
push
jl
push
and
data16
xlat
adc
add
aam
ss
repnz
jnp
or
jb
mov
dec
pop
xor
sbb
ror
sbb
jb
(bad)
in
mov
xor
cmps
xor
sub
jmp
pop
popf
or
cmps
pop
loop
or
shl
mov
adc
cmps
test
sub
dec
dec
cli
test
aam
les
jo
cwde
jno
and
leave
and
inc
ffree
inc
pop
cmp
inc
ss
inc
or
out
stos
inc
jecxz
mov
mov
add
lahf
mov
push
xchg
sbb
movaps
push
sbb
or
dec
mov
jns
ret
idiv
adc
cmp
bound
add
fucompp
or
nop
adc
lods
sbb
ds
sub
js
fwait
ror
mov
mov
sub
push
mov
adc
cdq
ss
aaa
cdq
mov
cmp
cmp
cmp
jmp
push
rol
push
sar
mov
jne
xchg
cmp
or
adc
pop
dec
cmp
adc
stc
sbb
cmp
mov
cdq
push
cmp
mov
les
push
xor
cmps
cmp
push
or
xor
dec
pop
mov
mov
adc
xor
jb
ror
sub
or
stc
push
imul
mov
adc
mov
jae
add
stos
shl
cmp
pop
mov
cmp
mov
popa
push
push
jns
fadd
xchg
push
fwait
mov
loope
push
cmp
pop
mov
xor
call
cwde
inc
in
adc
loop
and
or
lock
adc
mov
or
and
leave
mov
add
add
cld
mov
mov
inc
cdq
or
call
shl
cwde
ins
mov
int3
dec
xchg
adc
push
add
inc
mov
adc
mov
push
push
push
test
ret
movs
rcr
mov
mov
repz
push
sbb
or
push
pop
dec
pop
xor
popa
jno
mov
les
xchg
mov
adc
pop
(bad)
hlt
dec
or
sbb
or
xchg
mov
or
dec
pop
fidivr
mov
sbb
or
pop
punpckhdq
ret
xor
sbb
jb
jmp
sub
push
sbb
or
inc
cmp
push
ins
rol
lahf
mov
and
gs
cdq
mov
retf
inc
ins
adc
cmp
rcl
nop
xchg
mov
dec
mov
mov
dec
mov
(bad)
jmp
sbb
fwait
sub
xchg
fwait
pusha
xchg
repz
scas
pop
push
arpl
adc
mov
lock
jmp
repnz
ret
repz
xchg
pop
xor
les
mov
inc
mov
xchg
add
icebp
fisubr
xor
adc
call
mov
xchg
or
sbb
test
sbb
push
mov
push
data16
repnz
adc
xchg
add
jae
and
dec
xchg
stc
or
mov
sub
or
pop
daa
xchg
sbb
sub
scas
imul
pop
mov
xchg
sub
int3
std
xor
arpl
xchg
ret
push
icebp
imul
cmp
shl
sbb
xchg
sub
mov
or
pop
mov
sub
loope
fiadd
pop
(bad)
loopne
movs
or
in
jmp
retf
jno
sub
js
mov
xchg
mov
cs
sbb
push
mov
cmp
fdivr
imul
hlt
dec
lahf
or
repnz
xchg
sbb
ret
xchg
lods
jmp
leave
cwde
push
gs
aad
popf
xchg
shl
into
js
mov
es
out
push
and
stos
outs
sub
sahf
rcr
nop
push
sbb
arpl
rcl
imul
adc
sub
xchg
dec
adc
sub
dec
mov
xchg
clc
(bad)
les
fnstcw
shl
test
daa
jmp
icebp
dec
mov
inc
adc
retf
ins
clc
mov
dec
das
test
es
push
and
std
sbb
mov
mov
or
jae
or
nop
arpl
jp
mov
(bad)
(bad)
xor
and
movs
push
popf
fwait
pop
pop
rcl
ror
add
or
outs
ins
inc
popf
fcom
ret
pushf
(bad)
loope
mov
and
push
mov
aam
repz
enter
add
pop
in
inc
sub
cmp
mov
jmp
add
cmps
jb
in
or
popa
nop
popf
imul
pushf
push
mov
add
or
xor
jl
cwde
clc
mov
mov
ins
cmp
cwde
mov
inc
adc
int3
(bad)
fcom
sub
test
call
int
pop
cld
xor
les
jecxz
jbe
lahf
add
sub
lahf
sbb
push
and
or
ds
jge
xor
pop
xchg
lahf
adc
mov
sbb
call
sahf
and
imul
sbb
ret
adc
mov
les
xchg
add
call
xor
pop
or
jns
or
retf
xor
ror
jne
sar
retf
push
push
leave
and
movs
ret
sbb
popa
xor
int3
pop
or
lea
retf
lock
not
stos
pop
xor
rol
addr16
push
loope
mov
sub
xchg
cmps
imul
sub
enter
cli
fdivr
pop
xchg
jge
mov
mov
loop
inc
jmp
mov
jae
mov
lea
sub
ret
xor
or
lods
pop
pushf
xchg
pop
push
jl
push
push
pusha
in
xchg
mov
les
push
rcl
jmp
add
sub
je
xchg
adc
in
mov
adc
mov
dec
les
mov
arpl
in
lahf
in
mov
and
pop
adc
out
dec
jle
mov
ror
fwait
or
pop
mov
dec
fsub
sti
mov
in
and
shl
mul
jle
mov
lods
mov
inc
ret
inc
sti
lods
push
outs
js
push
mov
dec
bound
sub
push
mov
imul
lea
push
sbb
retf
cmp
enter
movs
push
xchg
out
sbb
test
fisubr
jg
loopne
inc
mov
jo
and
adc
popf
jmp
adc
pop
(bad)
enter
adc
mov
mov
dec
inc
repnz
dec
mov
daa
pop
push
mov
lods
jns
mov
or
call
pop
inc
mov
sbb
adc
jns
addr16
xor
test
mov
xchg
sub
test
sub
pop
push
pop
mov
cmc
push
mov
lods
xchg
loopne
or
lahf
sub
mov
lock
or
ret
add
fmul
dec
(bad)
mov
fisub
scas
loope
test
daa
sbb
out
mov
sub
ret
xchg
fwait
(bad)
xchg
mov
xor
inc
cmp
bound
adc
sbb
data16
fwait
cmp
push
add
popa
pop
addr16
sub
arpl
shr
fst
sahf
into
cmp
popa
(bad)
gs
xor
pushf
jns
mov
xor
xchg
xchg
cmp
mov
mov
cdq
jmp
rol
clc
or
pop
xchg
pop
sub
movs
loop
mov
sbb
fs
shr
lods
add
inc
dec
or
mov
cmps
xchg
into
mov
push
je
cmps
call
xor
std
sub
push
push
sbb
mov
movs
inc
mov
adc
mov
stos
and
dec
mov
adc
rcl
in
dec
jmp
sub
sbb
mov
fisttp
xchg
cmp
sahf
sub
and
loopne
adc
mov
mov
lea
jmp
mov
movs
or
(bad)
lock
pop
scas
lock
xchg
mov
xchg
cmp
push
mov
jmp
mov
or
mov
popa
cmp
call
mov
cwde
pop
ret
rcr
jmp
stos
mov
rcl
lahf
inc
int
mov
jbe
pop
mov
or
dec
hlt
adc
add
cld
or
mov
or
retf
jmp
or
nop
sti
sub
and
xor
inc
pop
out
scas
(bad)
or
add
mov
sbb
es
dec
sbb
dec
mov
in
xchg
sub
push
mov
inc
push
js
xchg
xor
test
pandn
push
test
jb
pop
mov
dec
cmp
out
xchg
and
pop
cmp
fiadd
int
push
fadd
nop
sbb
pop
adc
stos
mov
loopne
jecxz
sub
push
inc
mov
push
pop
add
push
loop
add
ins
push
xor
or
mov
into
or
mov
dec
mov
mov
popf
popf
push
je
sbb
stos
xchg
xor
ror
mov
call
dec
jne
mov
js
or
push
lock
enter
rcl
pop
pop
retf
and
ret
sbb
or
mov
repnz
inc
jbe
or
xchg
push
leave
shl
pop
inc
xchg
xchg
mov
sbb
pushf
aaa
pop
fst
loopne
les
inc
jno
repnz
inc
(bad)
popa
cmps
js
or
or
xchg
jns
loop
adc
adc
mov
mov
mov
xor
push
std
mov
xchg
and
repnz
push
pop
gs
dec
lods
jb
cdq
cmp
or
sbb
leave
adc
outs
xor
cmps
or
movs
mov
icebp
xchg
pop
(bad)
test
scas
iret
aaa
inc
out
mov
or
sub
rcl
rol
mov
addr16
mov
mov
push
ds
leavew
xchg
dec
jnp
int
mov
xlat
stos
push
xchg
ss
loop
outs
fnstsw
sbb
stos
cmps
int
mov
iret
push
and
sub
sbb
xchg
mov
jecxz
xchg
jecxz
xchg
(bad)
dec
addr16
mov
or
in
imul
lods
stos
lods
sub
ins
fidivr
mov
push
aam
cmp
sub
xchg
dec
mov
nop
inc
stos
ror
fist
sbb
fwait
imul
shl
(bad)
jp
mov
call
sbb
pop
mov
pop
xor
and
scas
pop
mov
repz
sub
mov
in
dec
enter
mov
jae
call
mov
out
sub
lods
fisubr
mov
ins
aad
xchg
and
xor
mov
ficom
pop
xor
mov
repz
mov
sti
sbb
daa
mov
retf
xchg
add
pop
xor
(bad)
jle
ss
in
ss
aaa
aaa
jne
push
jno
xchg
or
outs
cwde
jne
int
inc
lea
sbb
test
into
mov
and
test
rol
pop
push
add
adc
xor
enter
imul
pusha
sub
lea
inc
xor
or
fsub
mov
inc
jae
test
fisttp
gs
xor
xor
pushf
aaa
fst
adc
pop
sbb
mov
cmp
jne
cmp
xlat
adc
lds
push
push
cmp
mov
add
adc
or
cmps
loopne
fisub
int
in
lea
pop
push
or
push
lea
nop
fld
lea
arpl
aaa
sub
gs
push
push
pop
test
int
push
add
and
ins
shr
jl
data16
aaa
mov
das
adc
sbb
push
movs
jbe
test
lea
(bad)
cmp
push
aaa
sub
dec
push
les
or
jb
xor
cwde
out
nop
push
jle
and
push
cmp
imul
adc
fnop
dec
inc
inc
inc
dec
aaa
rcl
adc
nop
inc
in
inc
cmps
test
outs
loope
out
xor
xchg
loop
pushw
movs
sar
adc
cmp
arpl
lahf
sar
int
adc
loopne
int3
sub
and
dec
jns
gs
ror
cmp
mov
(bad)
sub
push
dec
jmp
push
xchg
xchg
sbb
or
or
mov
push
jp
in
mov
mov
fldcw
pop
xchg
rcr
xchg
aam
inc
in
not
dec
mov
sub
fdiv
push
in
pop
pushf
mov
jmp
adc
pop
std
(bad)
je
xor
sub
or
jmp
dec
mov
push
(bad)
int3
xor
jns
shl
fadd
mov
mov
rcl
call
xor
push
xor
pop
aas
jae
loope
data16
retf
call
mov
loop
imul
clc
into
lock
and
add
(bad)
dec
jmp
scas
add
retf
jo
dec
test
sbb
leave
xchg
inc
mov
mov
loop
aaa
adc
shl
ss
or
aaa
sub
fisubr
ins
out
jp
add
aad
mov
fcom
movs
xor
dec
retf
adc
ins
dec
mov
movs
mov
(bad)
pusha
stc
inc
lods
call
sub
mov
or
inc
ret
sbb
xor
sub
pop
mov
clc
punpckhdq
add
mov
fwait
inc
mov
and
or
(bad)
je
inc
loop
inc
mov
pusha
xchg
call
int3
sbb
push
adc
bound
shr
mov
ins
test
fadd
or
cmp
and
test
dec
inc
mov
(bad)
lea
cmp
(bad)
shr
leave
cmp
sub
push
inc
and
mov
xor
jl
inc
dec
cmp
or
xor
cmp
sub
dec
lods
sbb
sbb
rcl
add
pop
je
inc
adc
sub
or
data16
int3
or
adc
inc
or
jb
pop
dec
sbb
movs
stos
mov
xor
dec
out
sub
mov
mov
inc
dec
xchg
pusha
test
aaa
enter
add
lahf
push
mov
sbb
jae
xor
push
pop
mov
add
es
lea
sub
nop
inc
retf
mov
ins
push
rcl
adc
sbb
call
les
ins
ror
in
sbb
sub
scas
cmps
or
(bad)
sar
sbb
cli
dec
ficom
push
or
ret
mov
and
mov
movs
call
xor
in
aas
sbb
es
fs
sub
aas
lea
cmps
dec
mov
and
test
dec
mov
push
cmp
sub
push
rol
push
mov
cli
mov
sub
test
jne
adc
xor
pusha
jnp
xlat
ss
(bad)
adc
ret
push
or
(bad)
fwait
dec
push
popa
inc
or
in
int3
xor
adc
fidivr
mov
inc
int
dec
sub
cwde
push
jecxz
mov
sub
fimul
(bad)
pop
add
push
(bad)
sahf
popa
xchg
and
xchg
or
stos
push
cmp
dec
push
std
dec
push
les
sbb
dec
push
jle
inc
or
push
mov
pop
shr
mov
je
push
fcomp
or
push
mov
mov
push
xor
or
dec
push
sbb
or
xchg
push
mov
dec
dec
jmp
jo
xor
cdq
sbb
stos
shr
mov
inc
int
inc
jb
and
push
movs
or
and
scas
stc
daa
sub
cmp
rcr
xor
into
xor
jne
cdq
add
and
les
movs
mov
sbb
and
jns
stos
jge
sbb
cmp
push
or
pusha
or
sbb
xor
lods
retf
inc
inc
xchg
sub
cld
and
dec
mov
lods
test
mov
shl
imul
pop
adc
ins
adc
into
fst
mov
loope
xor
sbb
jmp
xor
or
(bad)
retf
shl
inc
mov
ror
mov
mov
adc
(bad)
cwde
xor
mov
inc
sahf
jae
shr
ret
aad
mov
pop
xor
imul
cmps
mov
xor
js
jne
jae
cmc
cmps
in
inc
push
inc
sahf
inc
mov
jne
int
sub
inc
loope
fidivr
jno
scas
jno
pop
and
mov
adc
sbb
or
sub
daa
adc
sbb
jmp
xor
hlt
push
push
mov
and
jne
mov
stos
stos
int
repz
retf
gs
cmps
mov
jae
ror
or
inc
sub
cdq
dec
xchg
xchg
jge
xchg
mov
or
adc
mov
fimul
iret
mov
es
sub
pop
js
clc
je
sub
rol
test
loop
fidiv
mov
out
sar
lea
add
xchg
jb
sub
push
cdq
sub
or
push
dec
xchg
sub
dec
aas
and
mov
and
(bad)
mov
(bad)
sbb
add
call
push
aaa
mov
pop
pushf
sub
jnp
ret
cmps
or
in
adc
cdq
push
xlat
push
dec
push
cmp
adc
mov
fwait
jae
es
outs
inc
pop
ror
addr16
adc
sub
add
pop
outs
push
mov
sub
(bad)
push
fisub
pop
sub
std
dec
mov
xchg
xlat
ins
inc
es
and
enter
gs
xchg
icebp
int3
mov
adc
sar
pop
aad
fcomp
add
dec
add
cmp
xchg
push
pushf
mov
ret
jl
dec
mov
dec
repz
mov
(bad)
imul
into
ins
fcom
push
or
test
sbb
add
jge
aaa
cwde
(bad)
loopne
fcomip
push
(bad)
je
cmps
push
inc
add
pop
ins
inc
push
fcom
xchg
ins
push
inc
sub
dec
mov
dec
ror
ret
sar
retf
lds
sqrtps
int3
mov
and
loopne
mov
pop
pushf
or
mov
jp
or
imul
and
xlat
xor
dec
push
jl
pushf
hlt
popa
pop
dec
xor
push
pushf
popa
mov
mov
xor
cmp
inc
ss
or
fstp
mov
loope
mov
mov
push
ss
pop
inc
int3
adc
enter
mov
xchg
stos
movs
inc
or
cmp
icebp
add
mov
push
pop
dec
(bad)
cmp
retf
iret
xchg
retf
scas
xor
adc
or
xor
sub
mov
inc
and
int
loopne
xor
adc
add
or
jne
xchg
jns
call
imul
lock
out
ins
xchg
cmp
dec
xor
les
fxch
jae
or
jl
pushf
loopne
cmp
ror
lea
pop
int
cmp
ss
xchg
iret
pop
test
and
dec
inc
add
pop
inc
adc
ror
(bad)
push
fst
int
popa
retf
test
mov
rol
dec
je
add
fs
jl
(bad)
jb
popf
and
push
test
rcr
dec
mov
add
or
lahf
cwde
inc
aaa
cmc
int
enter
push
mov
pop
adc
add
fmul
pop
or
scas
fmul
dec
movs
mov
inc
inc
test
mov
mov
mov
lea
mov
adc
pop
test
fdivr
popa
movs
inc
pushf
test
scas
int
lahf
xchg
mov
enter
out
pop
dec
push
lds
sbb
dec
dec
fucom
cmp
pop
push
add
sbb
xchg
mov
sahf
inc
push
or
inc
and
xor
inc
xlat
push
enter
popf
clc
mov
hlt
fstp
int3
mov
add
lds
mov
mov
call
xchg
mov
xchg
fs
arpl
arpl
pushf
push
ins
les
dec
dec
inc
gs
shr
addps
clc
mov
dec
cwde
xor
xor
add
call
int
test
pop
push
pop
arpl
test
add
loope
sbb
(bad)
add
add
fwait
out
aad
sbb
mov
and
jne
push
ficom
dec
add
int
and
sub
mov
js
or
push
xor
inc
out
adc
xchg
xor
inc
dec
cmp
aaa
push
dec
jb
mov
test
fidiv
pop
adc
or
cmp
or
ja
dec
fstp
mov
add
xor
inc
add
sbb
xor
and
pusha
imul
dec
inc
movs
and
dec
push
mov
iret
pusha
xlat
inc
pushf
shr
xchg
fldenv
adc
dec
adc
test
mov
fs
jp
xlat
icebp
cmp
test
repnz
aaa
fsub
dec
mov
pop
sbb
mov
push
mov
mov
push
push
push
dec
push
dec
add
loopne
xor
inc
mov
or
movs
les
in
add
in
fstp
cmps
test
sub
pop
jge
or
cmp
aad
dec
hlt
cld
test
ins
inc
aaa
ror
(bad)
pop
(bad)
(bad)
inc
inc
inc
and
pop
cmps
imul
adc
cmp
push
pop
int3
call
test
cmp
test
ret
jl
ret
ficomp
dec
inc
scas
or
fcmovu
stos
and
push
test
outs
add
adc
xor
xor
xchg
xor
add
inc
mov
ss
outs
or
sub
ret
lds
or
jmp
and
cmp
sub
sbb
push
jo
sbb
mov
je
ret
dec
call
dec
mov
push
mov
dec
les
mov
sbb
retf
in
pop
xor
xchg
pop
in
bound
cmp
xchg
mov
fnstenv
scas
adc
cwde
xchg
je
aaa
add
mov
hlt
push
loop
lods
push
js
mov
lods
push
clc
push
mov
pop
push
adc
xchg
movs
dec
inc
mov
dec
test
movs
xor
in
test
adc
pushf
adc
push
push
xchg
ret
lahf
or
add
mov
(bad)
std
pop
pop
mov
sub
or
ds
clc
retf
fs
dec
adc
push
fnsave
call
push
and
lock
push
sbb
xor
xchg
stos
cdq
push
(bad)
aam
out
or
inc
add
xchg
adc
dec
loopne
sbb
jo
fs
cs
sbb
in
(bad)
pushf
movs
in
mov
dec
in
mov
xchg
js
movs
imul
aam
xchg
cmp
xchg
xchg
jmp
push
xchg
pushf
(bad)
cmp
jo
mov
pop
push
dec
push
imul
in
rcr
and
test
cli
ret
pop
mov
ins
arpl
jb
imul
cmc
inc
inc
in
push
hlt
int3
int3
jmp
shr
push
sbb
test
ja
pop
pop
push
or
in
ins
in
adc
aam
nop
sbb
mov
add
loop
mov
mov
add
inc
or
add
xchg
and
mov
nop
pop
dec
dec
inc
test
inc
inc
aam
cmp
jp
or
inc
fwait
dec
movs
inc
pusha
mov
dec
mov
cmp
sub
mov
retf
xchg
pop
sbb
lea
retf
sub
ror
leave
mov
push
out
movs
pop
and
and
dec
and
inc
into
jmp
mov
fisttp
outs
push
mov
xor
fadd
ret
lods
push
xchg
jbe
push
pusha
add
push
or
into
and
ins
dec
aaa
sub
fwait
sbb
dec
sbb
aad
test
sar
push
inc
pop
mov
add
mov
(bad)
mov
scas
fld
dec
pop
mov
sub
jp
dec
jmp
push
xchg
push
mov
ins
lods
scas
xchg
push
xchg
ins
mov
into
pop
xor
cmp
int
add
adc
push
ror
stos
aaa
mov
mov
dec
cmp
xchg
and
sub
inc
jl
shl
inc
stos
ror
cs
int3
in
or
mov
push
or
sahf
aad
cmc
adc
gs
aad
xor
push
mov
icebp
xor
inc
jecxz
push
lahf
cmp
or
inc
ror
dec
xor
or
out
(bad)
bound
retf
and
ds
jl
xchg
(bad)
lds
icebp
adc
xor
call
xchg
nop
fmul
popa
scas
push
js
or
mov
movs
jne
cwde
sbb
mov
jb
(bad)
mov
add
ins
cmp
call
sahf
sbb
cmp
ss
dec
arpl
and
dec
aam
sbb
cmp
mov
(bad)
lods
aam
push
sbb
leave
jl
fwait
or
push
pop
div
add
inc
fdiv
dec
dec
mov
push
icebp
out
cs
mov
lahf
cwde
pop
fwait
add
js
jle
push
mov
mov
in
mov
or
rcl
mov
pop
mov
xchg
push
stc
xchg
dec
push
dec
xchg
nop
inc
scas
mov
mov
ror
mov
pop
shl
fcom
mov
mov
fsubr
and
jg
frstor
ins
jmp
enter
pop
and
inc
xor
les
sbb
adc
les
movs
adc
gs
rol
push
test
inc
xchg
je
inc
ret
jne
or
iret
fs
inc
or
inc
fild
xchg
ja
test
add
shl
mov
xor
and
cld
mov
mov
adc
gs
dec
and
jo
in
jmp
psllw
cmp
add
jo
clc
mov
xchg
out
pop
ins
shl
dec
dec
fst
cwde
push
add
pusha
fsub
xchg
ficomp
pop
jne
mov
add
mov
xor
xlat
es
mov
mov
fmul
arpl
jbe
inc
add
cmp
pop
frstor
lahf
xchg
imul
int3
adc
mov
mov
cmp
add
xchg
adc
push
pop
ror
std
mov
neg
pop
popf
xchg
mov
lods
arpl
xor
and
mov
cdq
cmp
cdq
xor
push
fwait
push
loope
add
mov
mov
sub
cmc
(bad)
pusha
or
(bad)
mov
leave
nop
repnz
out
mov
(bad)
fs
xchg
pop
test
push
inc
jl
xor
ror
mov
pop
push
iret
fs
pop
jne
pop
shl
cmp
mov
bound
or
cld
mov
outs
inc
fdiv
xor
dec
lock
movs
test
hlt
cmp
jb
dec
dec
je
xor
iret
je
shl
outs
cwde
pop
dec
inc
inc
push
xchg
mov
lds
inc
jbe
push
cmp
inc
les
jns
fsub
int3
rol
bound
pop
lahf
inc
dec
lods
cmp
push
les
loop
cld
or
add
les
mov
fcmovb
jl
mov
xchg
inc
inc
mov
sub
mov
inc
loopne
ins
push
mov
dec
dec
outs
retf
cmp
int
and
stc
inc
mov
mov
and
pop
dec
push
sbb
xchg
push
xor
pop
dec
fwait
sti
inc
popa
cmp
jns
mul
mov
mov
hlt
xchg
dec
jl
cmp
aas
in
push
dec
(bad)
fld
jne
cdq
mov
aad
jae
push
mov
lahf
movs
test
add
in
push
pop
std
sbb
mov
test
int
(bad)
push
mov
sub
fisttp
add
push
fnstcw
outs
fldenv
mov
in
xor
aaa
ins
loope
ss
ins
fnstenv
mov
jae
mov
mov
imul
or
dec
imul
(bad)
fcmovnb
jno
mov
pop
(bad)
ins
inc
xchg
xchg
sbb
adc
jno
rol
mov
(bad)
scas
imul
(bad)
retf
xchg
add
in
jo
retf
imul
aad
xchg
sbb
mov
xor
(bad)
xchg
sbb
mov
mov
fidiv
mov
add
jo
ret
xlat
(bad)
fstp
jnp
xchg
ins
mov
in
inc
cmp
into
jecxz
jb
inc
sbb
(bad)
pop
pushf
aaa
mov
jbe
in
outs
ins
fdivr
inc
mov
rcr
jp
fidivr
dec
jbe
xchg
movs
push
in
mov
xor
ins
sbb
addr16
fidiv
data16
fnstenv
arpl
mov
call
int3
dec
pop
sbb
shl
stos
test
outs
adc
xchg
addr16
xchg
cmps
fwait
jno
dec
(bad)
pushf
stos
(bad)
mov
in
sbb
adc
retf
sbb
adc
or
sub
cmps
ins
mov
mov
out
cmps
imul
mov
and
and
mov
lahf
sbb
mov
fwait
outs
pop
cmp
sbb
addr16
call
in
inc
out
or
push
aam
fwait
jo
and
fwait
push
mov
call
mov
mov
imul
xchg
lods
mov
cdq
fs
stos
and
cdq
data16
mov
or
inc
lea
daa
popf
jb
add
xchg
cmps
mov
mov
adc
mov
rcr
imul
mov
stos
mov
stos
mov
or
jae
jmp
cmps
lods
mov
mov
xor
loop
mov
add
fwait
imul
cmps
int3
add
push
call
dec
or
ins
je
sbb
fldcw
int
enter
out
dec
hlt
call
iret
cli
dec
ret
cld
leave
sub
jb
test
pop
in
shl
stos
fstp
scas
pop
mov
(bad)
stos
or
(bad)
xor
pushf
mov
pop
jb
call
mov
mov
retf
xchg
outs
pop
cmp
push
inc
adc
scas
fwait
pop
dec
aaa
sbb
cmp
sbb
inc
add
dec
push
push
rcr
jno
or
(bad)
fs
cmp
mov
scas
mov
rcr
mov
out
cs
dec
aas
cmc
cmp
call
sbb
mov
cld
cwde
cdq
mov
push
(bad)
cmps
stos
sahf
mov
arpl
int
add
mov
cli
cmps
es
fs
sbb
data16
loope
int3
cmp
mov
dec
and
sbb
mov
lods
loope
adc
dec
jmp
in
mov
mov
mov
xchg
iret
aam
inc
and
sbb
pop
addr16
shl
xchg
adc
xchg
(bad)
sbb
in
pop
cmc
sbb
xor
lods
inc
adc
push
mov
xor
movs
push
mov
mov
add
add
pop
xor
push
jnp
mov
adc
mov
mov
enter
popf
dec
xor
xchg
int3
pop
mov
push
stos
mov
xlat
dec
fdiv
nop
and
or
mov
popa
and
push
lds
inc
rcr
inc
add
and
xor
mov
xchg
inc
in
test
cmp
push
pop
xor
and
test
xor
inc
mov
inc
pop
mov
test
sbb
int3
sbb
xchg
test
dec
enter
or
xchg
or
mov
xchg
sub
aad
adc
outs
fs
ja
iret
jno
push
xchg
in
mov
or
or
sub
leave
ss
add
mov
push
jle
add
into
pop
out
mov
ss
and
lods
cmp
aam
inc
lods
bound
or
push
pop
sbb
stos
out
test
sbb
data16
lods
ins
gs
and
adc
or
mov
cmps
and
fcom
test
mov
add
jl
inc
fistp
and
pushf
test
sahf
pop
mov
loope
jae
add
dec
xor
fmul
or
dec
jle
adc
or
lds
jae
jecxz
and
rcr
or
(bad)
aam
or
ror
retf
js
adc
jns
sbb
jno
mov
lods
movs
xchg
add
(bad)
rcl
push
add
sbb
cmp
adc
inc
xchg
push
and
test
and
sbb
cdq
or
xchg
loope
ficomp
or
les
imul
xchg
xchg
xchg
push
(bad)
xor
in
mov
mov
daa
stc
addr16
jno
cmp
mov
ror
push
cmp
pop
adc
mov
add
(bad)
push
mov
lods
sbb
and
xor
inc
add
mov
call
xor
jb
push
shr
int
rcl
mov
push
cwde
pop
popf
inc
inc
or
loope
jno
lods
and
mov
mov
rcl
mov
dec
sub
push
dec
cmp
nop
sbb
dec
lods
ret
test
adc
push
pop
inc
inc
ins
jmp
xor
out
ror
add
sub
int
(bad)
xor
cmp
stos
cmp
xchg
mov
push
dec
dec
cmp
nop
popf
mov
stos
idiv
outs
inc
xor
popf
xchg
lds
sub
sub
mov
fdivr
pop
scas
ss
(bad)
fs
inc
push
fs
(bad)
mov
push
cmp
or
test
sbb
int3
pop
pavgw
neg
inc
cmp
xor
ret
mov
stos
mov
pop
inc
into
add
lea
repnz
push
cmc
out
in
das
dec
mov
mov
push
pop
mov
test
and
dec
mov
mov
fmul
(bad)
cmp
sbb
inc
or
mov
jecxz
jbe
push
cmp
xchg
imul
(bad)
es
imul
pop
inc
stos
cmc
and
mov
xchg
xor
pop
jmp
sahf
sbb
icebp
stos
mov
fisub
cmps
mov
jmp
sbb
cmp
and
adc
inc
or
pop
daa
cmp
adc
jbe
cmp
aaa
or
push
and
into
cmp
gs
ins
cmp
cmp
ret
stc
pop
xor
lods
or
repz
call
and
cmp
adc
sbb
jnp
xor
inc
dec
inc
das
(bad)
pushw
inc
inc
sub
mov
mov
ins
test
int
mov
jecxz
pop
mov
and
or
xor
loope
mov
pop
cld
in
xchg
cmp
out
rcl
or
and
int
imul
jno
push
int
mov
fucomi
bound
movs
mov
cmp
add
mov
in
stc
push
xor
leave
lock
mov
and
sbb
mov
out
lds
mov
jle
or
xlat
mov
push
jne
xor
xor
xor
inc
je
xchg
jo
fs
xchg
pop
jg
push
sub
shr
sti
out
lds
dec
hlt
in
pop
xor
mov
or
fcom
or
les
adc
or
imul
cmp
sar
add
jmp
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
or
inc
outs
outs
data16
popa
add
add
add
loopne
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
inc
add
sub
sub
inc
sub
add
add
xor
pop
add
add
nop
adc
add
add
push
rol
add
add
add
add
add
xor
pop
add
add
add
add
add
add
add
push
rol
add
add
add
add
add
xor
pop
add
add
add
add
add
add
push
rol
add
add
add
add
add
xor
pop
add
add
lock
add
add
add
push
dec
add
add
add
add
add
gs
xor
add
push
add
inc
push
inc
add
add
add
add
add
daa
push
inc
adc
add
pop
add
mov
add
push
popa
push
add
add
push
push
add
gs
cmp
add
push
add
gs
cmp
add
add
add
daa
push
ja
adc
add
pop
add
mov
add
push
popa
push
add
add
add
gs
xor
add
add
pop
dec
add
add
add
add
add
scas
add
add
pop
add
mov
add
push
popa
push
add
add
pop
push
add
gs
xor
add
gs
xor
add
add
scas
add
add
pop
add
mov
add
push
popa
push
add
add
or
add
gs
aaa
add
add
add
gs
aaa
add
add
add
lahf
push
ja
adc
add
pop
add
mov
add
push
popa
push
add
add
add
gs
xor
add
pop
add
dec
inc
dec
push
inc
add
add
add
add
add
lahf
push
inc
adc
add
mov
add
push
popa
push
add
add
add
gs
xor
add
pop
add
push
inc
dec
pop
inc
add
add
add
add
add
sub
inc
adc
adc
pop
add
mov
add
push
popa
push
add
add
or
add
gs
add
add
add
gs
add
add
push
add
add
adc
pop
add
mov
add
push
popa
push
add
pop
add
add
push
add
gs
add
add
add
add
fcomp
add
or
or
lea
add
or
popa
xor
and
or
pop
add
or
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
dec
add
jo
jb
add
popa
add
add
add
add
push
add
add
adc
inc
add
popa
add
jb
popa
add
imul
and
inc
add
imul
add
sbb
popa
xor
sbb
add
add
add
add
add
je
outs
outs
gs
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
adc
or
pop
add
add
sub
push
add
add
add
add
add
add
add
push
and
and
and
and
and
and
and
and
and
and
and
and
and
and
es
or
add
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
test
add
add
add
add
sub
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
pop
ja
ja
ja
jo
ja
ja
ja
add
ja
add
ja
ja
ja
add
ja
ja
jo
(bad)
ja
ja
add
ja
div
ja
div
pop
ja
ja
ja
jo
ja
ja
ja
ja
div
ja
ja
xor
ja
ja
ja
emms
ja
ja
ja
add
ja
ja
ja
ja
dec
and
inc
outs
outs
data16
popa
and
and
outs
jbe
and
popa
jb
outs
and
inc
ins
je
dec
sub
inc
scas
add
or
add
add
je
outs
outs
gs
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
add
pop
add
add
sub
dec
add
add
add
add
add
add
add
sbb
and
and
and
and
and
and
and
and
and
and
and
and
and
pop
or
add
add
add
add
add
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
test
add
add
add
add
sub
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
ja
ja
ja
ja
ja
ja
ja
jo
ja
div
ja
ja
add
ja
ja
ja
add
ja
jo
ja
jo
div
div
ja
pshufw
ja
ja
add
div
ja
ja
emms
ja
ja
jo
add
ja
ja
add
jo
ja
ja
add
ja
div
add
ja
jo
ja
emms
ja
ja
div
ja
ja
ja
ja
ja
ja
ja
dec
sbb
inc
outs
outs
jne
ins
popa
and
jae
ins
gs
outs
outs
and
inc
ins
je
pop
sub
inc
inc
add
or
push
add
gs
xor
add
push
add
inc
push
dec
dec
add
add
add
sar
add
mov
test
adc
pop
add
nop
add
add
push
add
sbb
add
popa
xor
sbb
cmps
sbb
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
pushf
add
add
add
adc
add
add
les
sbb
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
adc
and
adc
push
popa
lock
jno
xchg
xor
adc
push
add
(bad)
inc
add
add
add
add
add
add
les
and
add
add
add
add
add
add
add
add
add
adc
and
adc
push
and
(bad)
fiadd
or
add
add
add
add
add
cmp
mov
fwait
ins
test
and
imul
cmps
ins
jmp
rol
or
pop
add
outs
or
inc
and
mov
or
dec
sbb
push
cmp
cmp
cdq
ja
jne
not
and
scas
sbb
outs
imul
mov
retf
hlt
fidiv
(bad)
cld
xchg
sbb
cmp
xchg
cmp
xlat
push
and
or
pop
cmp
(bad)
sbb
scas
popa
imul
xor
repz
or
jge
retf
jns
xchg
call
dec
cmps
and
idiv
add
cmc
xor
cmps
outs
adc
xor
(bad)
loope
ins
adc
(bad)
rcr
and
popa
push
fidiv
mov
sbb
in
mov
xor
in
test
cmp
sbb
fild
test
xor
sti
(bad)
cmps
fndisi(8087
push
sbb
mov
push
or
xor
push
(bad)
push
fs
iret
xor
scas
gs
leave
jo
cmc
inc
sahf
jae
push
or
add
push
je
and
repnz
test
sbb
mov
push
adc
adc
mov
push
mov
mov
push
or
ja
sbb
xchg
fs
icebp
and
inc
add
xor
xchg
sub
mov
jne
sub
xor
ja
ds
add
aas
dec
arpl
pop
ret
adc
push
sbb
mov
jg
rol
pop
and
inc
retf
jmp
ret
dec
loopne
pop
inc
add
ror
ins
imul
adc
xchg
xchg
push
jo
and
add
mov
mov
inc
sub
stos
add
les
jge
mov
jg
loopne
sub
fld
or
or
xor
pushf
je
pusha
adc
xchg
xchg
mov
cdq
push
xchg
out
mov
mov
dec
lea
ins
add
or
mov
dec
movs
sbb
xchg
cmp
test
or
cdq
sti
test
int3
sbb
add
mov
iret
hlt
retf
cmp
add
mov
add
jecxz
mov
push
adc
scas
and
xchg
cs
cli
in
xor
pop
xor
and
cmp
test
sub
pop
daa
retf
xchg
push
(bad)
jno
xchg
xchg
movs
sbb
cmp
xor
dec
imul
dec
inc
pusha
ins
xor
or
aas
mov
and
jle
ror
jns
popf
push
enter
xchg
mov
xor
xor
pop
cwde
pop
data16
mov
pop
cdq
test
pop
mov
and
dec
movs
sub
push
and
dec
adc
xor
jmp
leave
mov
les
data16
xor
jae
push
mov
add
xlat
add
sbb
mov
repnz
aam
into
in
mov
jbe
fst
hlt
mov
jp
mov
lds
das
adc
push
imul
xrelease
adc
push
(bad)
gs
js
and
cmc
push
dec
pop
push
nop
jne
add
cmp
ins
and
add
jecxz
imul
in
inc
jmp
mov
adc
and
push
xor
ror
pop
ret
movs
sbb
push
xchg
jle
sbb
xor
inc
fdivr
xchg
fnstenv
mov
mov
sbb
out
mov
jp
loop
loopne
aad
imul
jnp
icebp
or
dec
xor
std
xor
into
sub
retf
add
out
xor
in
cmc
xor
lods
loopne
mov
or
sbb
add
(bad)
mov
int
repz
pop
pop
pop
(bad)
cli
mov
xor
xchg
aam
xlat
sbb
mov
arpl
ficom
push
push
dec
lock
dec
shl
mov
(bad)
shl
pop
adc
add
inc
xchg
shr
jbe
call
push
push
jae
push
dec
push
stos
add
sub
ror
(bad)
pop
xor
fwait
(bad)
mov
add
cmp
sbb
or
(bad)
sbb
sar
aaa
call
in
cld
cs
lea
jge
mov
or
nop
in
movs
lahf
sahf
stc
movs
imul
jno
xor
pop
sbb
ror
fld
inc
mov
(bad)
into
jo
es
add
mov
adc
pop
inc
lea
add
cmp
mov
sub
add
pop
pop
adc
sbb
rcl
pop
add
retf
das
jge
(bad)
adc
dec
xchg
call
scas
xchg
jmp
inc
jo
cdq
adc
push
rol
popa
(bad)
es
aas
xchg
xchg
xor
jmp
mov
ret
or
xor
shl
in
add
ret
je
jns
push
pop
fsubr
aam
imul
sub
mov
ins
enter
dec
outs
mov
loope
mov
shr
out
sbb
jmp
shr
and
cwde
stc
mov
mov
in
xchg
add
xchg
mov
cmc
sub
xchg
cs
rcr
(bad)
cmps
(bad)
stc
std
mov
nop
mov
mov
jb
test
and
inc
or
adc
xlat
neg
popf
sub
das
jmp
imul
xor
adc
sub
lahf
test
cmps
dec
or
je
mov
inc
repz
addr16
push
int3
sahf
inc
or
shr
idiv
lods
mov
and
in
mov
cmp
in
mov
cmps
xchg
cmps
iret
cmp
adc
sbb
add
call
call
inc
cmp
xchg
jmp
jmp
mov
mov
mov
int3
jae
outs
add
pop
sbb
pop
jbe
aam
or
push
dec
retf
js
arpl
inc
and
shl
adc
mov
dec
and
dec
add
push
repz
adc
nop
sbb
pusha
pusha
or
and
pop
cmc
sbb
pop
jno
push
les
gs
xchg
push
rol
or
loopne
(bad)
not
test
in
fcmovb
shl
pop
sbb
pop
push
test
cli
lods
movs
je
enter
cmp
in
pushf
dec
fistp
dec
fldcw
or
fwait
mov
pop
inc
enter
xchg
popa
xchg
mov
xor
pop
inc
jl
lea
les
aad
rol
pusha
loopne
aaa
cmc
sti
movs
ds
mov
inc
xlat
dec
xor
frstor
push
ds
jg
ret
retf
add
sbb
push
inc
fsubr
sub
cmp
cdq
and
sbb
and
movs
clc
xchg
add
out
cld
sti
stos
push
xor
adc
add
cmp
or
(bad)
loopne
sbb
pop
ror
jecxz
(bad)
jmp
rol
in
add
bound
add
clc
ss
xchg
inc
push
jnp
mov
(bad)
jns
cmp
jne
mov
and
xchg
sbb
jne
and
xor
pop
pushf
out
fwait
jne
lods
js
pushf
sub
inc
dec
retfw
scas
jbe
xchg
sub
ret
nop
pop
pop
fs
inc
adc
and
dec
dec
gs
inc
addr16
xchg
ret
dec
push
out
push
adc
xor
cs
ins
dec
inc
cwde
add
xor
popa
imul
cmp
(bad)
push
push
int3
jmp
adc
sbb
clc
popa
mov
lds
rcl
sbb
mov
push
(bad)
mov
xor
jl
rcr
jne
and
xor
dec
xchg
add
mov
pushf
(bad)
mov
pusha
cmp
push
xor
xor
mov
xchg
fmul
inc
mov
mov
shl
in
cmp
jmp
xchg
dec
and
(bad)
shl
pop
inc
in
push
or
xchg
mov
jae
iret
pop
jmp
jno
jae
repz
and
out
lods
mov
xchg
jnp
pop
stos
ret
clc
ins
push
xchg
and
xchg
lea
cmp
push
cwde
jnp
leave
sbb
mov
in
xor
cmps
jo
in
jecxz
pop
imul
mov
mov
fcmovu
cwde
and
jb
in
imul
outs
sti
hlt
add
dec
and
xchg
mov
pop
and
push
sbb
inc
ins
add
ins
mov
dec
cmps
fnstsw
call
stc
dec
push
lds
or
arpl
rcr
jno
jb
fs
xor
add
inc
mov
dec
inc
je
lock
mov
(bad)
jle
jl
cmps
aam
add
retf
gs
xor
call
into
arpl
popf
pusha
cmp
cli
sbb
push
popf
test
xor
ror
mov
mov
mov
jp
ins
mov
push
popf
(bad)
in
cmc
mov
add
ja
fld
rol
mov
imul
add
fadd
xchg
sub
cmps
iret
xor
hlt
pop
loop
jns
ds
xor
call
mov
lds
add
cli
cs
mov
push
jno
js
push
xchg
mov
inc
push
mov
rcl
mov
es
dec
je
inc
adc
and
push
mov
sbb
add
shl
xor
xlat
aad
sbb
pop
es
out
mov
enter
movs
xchg
ret
xchg
mov
retf
loop
shl
lods
(bad)
fstp
nop
mov
mov
fwait
sbb
shl
cmps
aaa
push
dec
cmp
xor
mov
mov
push
out
cmps
adc
arpl
je
(bad)
rol
shl
retf
xchg
inc
scas
sub
stc
out
fnstenv
xor
mov
cmps
mov
jne
scas
clc
cld
outs
jnp
mov
in
je
fldenv
add
movs
mov
cwde
test
sbb
sub
cmp
(bad)
in
mov
mov
test
stos
hlt
mov
jo
mov
sahf
movs
mov
xchg
jmp
js
sbb
cmp
jae
dec
xchg
xchg
cmp
add
sahf
lahf
sub
je
pop
daa
lahf
and
aam
cmp
push
add
jmp
(bad)
div
rcl
ret
mov
add
mov
xor
daa
and
cmps
sbb
(bad)
jns
mov
leave
repz
inc
aaa
es
mov
adc
mov
dec
stos
cmp
shl
dec
(bad)
pop
add
or
sub
dec
pop
jo
xchg
or
jo
mov
sub
or
dec
add
jb
cmps
test
cmp
das
jnp
loop
sbb
into
mov
push
fidiv
cdq
xchg
xchg
sub
xchg
jmp
dec
sbb
adc
push
jbe
cmps
xor
mov
and
jmp
pop
add
movs
fnstsw
and
xor
inc
test
popa
not
sbb
push
add
adc
mov
add
push
cmp
movs
jmp
clc
mov
lods
or
push
test
sub
outs
rcr
nop
pusha
or
into
sub
gs
push
test
cmp
adc
retf
sbb
add
mov
stos
hlt
cmp
pusha
sbb
adc
add
or
into
jmp
loop
and
mov
leave
xchg
dec
out
outs
test
dec
xchg
and
adc
jl
pop
mov
inc
fcom
enter
out
pop
fcom
adc
cmp
add
sbb
jmp
mov
add
shr
mov
mov
pop
sub
ret
add
lock
int3
inc
mov
sti
loopne
stos
pop
fiadd
js
sub
jle
dec
sahf
sbb
dec
xor
xlat
imul
dec
sbb
retf
push
loope
xor
mov
push
dec
xor
aad
sub
repz
push
push
xchg
adc
inc
nop
pusha
sbb
(bad)
mov
imul
cdq
iret
inc
ret
mov
jnp
ret
in
push
or
xchg
sub
sub
fmul
rol
js
xor
or
rol
dec
gs
pop
idiv
test
test
xchg
nop
ja
call
add
jnp
dec
pop
gs
aas
mov
jmp
xchg
inc
pop
jle
sub
and
mov
sub
ins
rol
jp
pop
pop
iret
adc
cmc
out
mov
lods
mov
push
push
repz
adc
push
xor
or
nop
cmc
dec
pop
out
xor
int3
cs
clc
shr
dec
adc
dec
mov
std
cmp
mov
add
(bad)
push
jl
jge
pmulhw
emms
xchg
sub
adc
cmp
sar
or
lods
ins
movs
or
fnstsw
add
and
jmp
cmps
dec
or
ror
dec
xchg
pop
sti
pop
add
or
add
or
or
je
dec
add
push
leave
fs
lods
fcmovnu
jmp
xor
pop
ds
inc
fs
add
in
aad
xchg
jne
dec
lea
iret
sub
sbb
rcr
cmp
dec
mov
in
aad
or
test
mov
jo
int
push
xchg
inc
int
movs
lds
mov
add
xor
sub
mov
enter
pop
loop
pusha
loopne
repnz
ins
jns
or
push
sti
sub
icebp
sahf
ret
xchg
call
mov
mov
loope
inc
and
les
scas
sbb
ds
shl
add
mov
pop
sub
stos
fild
xor
sub
adc
mov
and
sahf
stc
sub
cmp
and
aad
mov
add
jo
add
pop
lock
xor
pop
test
int
xchg
and
dec
adc
xor
shl
popa
jo
mov
push
mov
mov
outs
inc
adc
mov
shl
mov
and
scas
dec
jbe
test
pop
pop
adc
lahf
cmp
pop
ins
adc
hlt
fbld
(bad)
mov
and
sub
fnsave
fcom
mov
push
retf
xchg
in
or
(bad)
xlat
inc
retf
sub
nop
out
mov
inc
push
cmps
inc
adc
aaa
adc
mov
retf
stos
add
test
ds
adc
sbb
add
pop
lock
pop
dec
lds
sub
mov
add
fdivr
lods
popa
in
sub
dec
push
push
add
push
sub
jns
inc
sub
pop
sbb
dec
outs
lock
adc
sub
retf
aaa
call
aaa
or
punpckhbw
xchg
int3
jae
pop
movs
(bad)
lods
pop
in
add
stos
xor
aas
scas
frstor
cmc
pop
clc
out
pop
pop
inc
adc
adc
cmp
out
sbb
jnp
fwait
dec
push
popf
pop
and
mov
pop
cmp
pop
icebp
out
int
jmp
fnsave
(bad)
and
out
jp
mov
xchg
push
rcr
jno
add
push
fcmovbe
not
push
mov
arpl
aad
xchg
mov
fsubr
stc
jge
neg
call
add
in
inc
xchg
loope
xchg
scas
inc
and
call
mov
retf
push
mov
mov
mov
or
cmp
mov
jp
scas
xor
nop
lahf
push
mov
add
mov
push
ins
cmp
inc
(bad)
rcl
mov
cmps
shl
cwde
sub
push
cmp
test
jp
and
push
in
xchg
mov
push
imul
push
ret
hlt
pop
out
xchg
ffree
push
gs
ins
call
add
or
jle
sbb
shr
outs
xchg
or
push
mov
mov
leave
sbb
scas
dec
xchg
pushf
dec
pop
push
mov
stc
push
shl
add
daa
sbb
push
jl
scas
jbe
loop
lods
dec
rdpmc
xor
jmp
adc
dec
test
test
or
push
leave
add
or
xor
cmps
cwde
sub
xor
mov
adc
pusha
movs
(bad)
retf
into
pop
inc
cwde
push
test
dec
adc
int
imul
ds
jns
cmps
push
add
(bad)
neg
adc
cmps
neg
aad
les
push
dec
cmp
(bad)
cdq
std
aas
push
iret
scas
std
push
cmps
cmp
xchg
push
adc
hlt
xchg
stos
ins
sub
cmp
popa
cli
lods
retf
or
dec
ret
and
int
jb
xor
pushf
mov
repnz
test
sbb
fwait
shr
rcl
scas
sub
add
mov
push
cwde
movs
ret
or
jno
jne
pop
pusha
cmc
and
icebp
adc
rcl
into
push
adc
sahf
stos
fidivr
sbb
add
mov
call
mov
repnz
xchg
fadd
adc
adc
inc
cmps
xlat
jae
add
dec
fwait
add
push
mov
push
hlt
cmp
push
inc
cmps
jmp
push
cld
sub
adc
scas
sar
fidiv
push
jmp
add
xor
add
(bad)
fmul
gs
mov
inc
cmps
inc
xchg
jmp
sahf
sub
push
retf
dec
loop
or
fist
adc
aaa
jg
push
adc
mov
test
sub
in
(bad)
push
inc
repz
hlt
cld
scas
or
cmp
pop
xchg
push
mov
mov
and
push
mov
pop
ret
or
nop
ins
in
adc
push
xchg
sub
adc
dec
sbb
jmp
test
xor
pop
je
fs
ss
mov
add
idiv
pop
cmp
dec
(bad)
push
xchg
rcl
xchg
xor
outs
not
push
push
rcr
jmp
jmp
movs
dec
pop
and
stos
rol
or
cdq
es
xor
dec
out
je
and
dec
add
loopne
leave
sbb
jl
inc
pop
shl
mov
ja
jbe
fsub
xchg
cmp
mov
mov
pop
inc
add
jp
movs
mov
jmp
je
rcl
outs
repnz
push
nop
push
jne
push
add
enter
push
mov
or
cmps
das
jo
ins
arpl
pop
aaa
stos
pop
inc
and
cwde
cwde
bnd
pop
and
daa
dec
out
mov
loope
daa
push
pop
sbb
sbb
ss
icebp
sbb
(bad)
fbstp
pop
bound
call
xchg
mov
aad
rol
std
add
(bad)
cld
and
mov
xchg
jae
mov
xchg
(bad)
jne
(bad)
or
mov
sub
add
jnp
adc
nop
or
sbb
(bad)
pushf
inc
and
add
js
and
push
loope
ror
mov
push
xchg
pushf
hlt
(bad)
push
push
loop
pop
ss
inc
mov
sub
pop
jnp
dec
ins
loop
mov
add
cwde
cld
mov
jle
and
rcl
add
mov
add
pop
popa
cs
inc
mov
test
rcl
lods
mov
sbb
fldenv
lods
add
mov
jmp
dec
js
xor
call
xchg
add
mov
lock
es
inc
loopne
cmp
sub
cmps
imul
inc
or
loope
or
adc
dec
inc
xlat
mov
inc
inc
call
inc
in
rcr
sti
cdq
xor
ficom
dec
xchg
or
cmp
mov
pusha
adc
test
(bad)
xor
cmp
inc
into
rcr
lahf
std
cld
sub
pop
jmp
gs
popf
cld
movs
push
sub
inc
(bad)
popf
outs
(bad)
xor
mov
mov
add
add
fist
or
inc
inc
add
or
push
add
gs
xor
add
push
add
inc
push
dec
dec
add
add
add
add
add
or
add
nop
add
add
push
add
dec
xor
cmpxchg
jg
mov
pop
or
inc
lea
dec
mov
aaa
psrlw
dec
lods
xor
or
stos
add
xchg
icebp
fiadd
add
push
add
jae
data16
or
jb
addr16
outs
and
jo
gs
and
and
ins
imul
add
add
sbb
add
and
and
add
jb
xor
add
add
push
mov
and
add
adc
add
add
add
or
popa
outs
jae
push
gs
inc
add
add
add
add
add
or
push
imul
add
add
or
add
add
or
add
ltr
add
inc
add
cmp
inc
cmp
add
add
add
arpl
xor
add
add
add
add
ins
je
add
push
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
lahf
add
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
cli
sub
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
stos
not
cwde
enter
xchg
in
sub
mov
mov
dec
movs
cmc
sbb
push
mov
enter
and
ins
xchg
pop
push
xchg
popa
inc
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
sbb
mov
hlt
add
mov
ror
inc
cli
sub
xchg
(bad)
loopne
mov
lds
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
dec
les
xchg
jp
mov
movs
or
mov
mov
lea
sahf
and
bswap
test
inc
call
test
inc
enter
addr16
dec
add
inc
test
jno
mov
cmp
sbb
fdiv
sub
leavew
in
fs
sub
cmps
inc
jmp
cmp
xchg
pop
jmp
aaa
jecxz
out
sbb
push
fwait
imul
mov
retf
xchg
loopne
ds
mov
rcr
inc
mov
mov
add
mov
add
mov
add
ficom
cmp
imul
(bad)
fwait
out
sar
jmp
daa
cmp
test
adc
gs
xchg
and
rcr
mov
xchg
cli
aad
pop
dec
and
mov
sub
dec
jne
ret
pop
in
fcom
rcr
pop
and
and
push
stos
outs
out
pop
jp
(bad)
lock
sbb
jmp
loope
retf
hlt
cmps
arpl
xor
adc
jne
add
enter
add
push
add
push
add
push
add
push
add
jp
push
mov
out
(bad)
cmp
and
push
inc
outs
jp
cli
aam
data16
das
retf
add
daa
pop
lahf
(bad)
stos
dec
or
and
neg
in
nop
in
xor
popf
imul
outs
mov
and
stc
xlat
nop
jp
xor
push
imul
jp
lds
movs
push
xor
imul
leave
or
(bad)
outs
ret
mov
mov
not
sbb
or
stos
retf
sub
mov
mov
xchg
rcl
push
xchg
push
inc
and
adc
inc
add
adc
inc
add
xchg
and
(bad)
pop
push
jb
mov
ret
sub
lods
enter
fist
loopne
fstp
and
cld
jg
pop
aaa
aam
ret
sbb
pop
(bad)
in
arpl
imul
adc
clc
stos
and
mov
test
sbb
ins
sbb
fadd
ds
out
xor
jae
test
jge
jmp
push
ins
movs
add
lods
and
icebp
dec
cmp
add
retf
inc
loopne
dec
push
mov
push
pop
sbb
pop
addr16
call
shl
(bad)
adc
push
push
push
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
inc
sub
push
xor
daa
mov
dec
retf
mov
xor
sar
stos
adc
and
addr16
push
jbe
call
and
(bad)
imul
pop
inc
pop
mov
push
jmp
das
repz
add
jle
sub
lods
adc
xchg
inc
mov
xchg
hlt
sbb
loop
mov
sub
int
xchg
les
aad
mov
cmp
inc
inc
dec
nop
retf
sbb
(bad)
jg
jne
push
cmp
icebp
add
xchg
mov
mov
arpl
adc
add
aam
(bad)
mov
rcr
mov
cmp
dec
mov
rcl
arpl
ds
stc
dec
jnp
js
push
fwait
push
mov
mov
aam
xchg
mov
sub
mov
sub
call
add
push
js
out
sahf
pop
cmps
popa
test
inc
jmp
pop
xchg
leave
out
mov
lods
pop
addr16
jae
pusha
cmp
aam
and
outs
xor
retf
push
leave
call
shl
jb
push
ins
mov
push
or
js
test
push
mov
sub
mov
cld
stos
out
dec
and
pop
inc
sub
sbb
aam
rcr
cwde
mov
(bad)
cmc
sbb
jo
cmp
fs
push
fsub
(bad)
sahf
add
jecxz
jno
lahf
mov
xlat
cmp
int
sub
xchg
cmp
int
or
and
loopne
sbb
xchg
mov
mov
push
sbb
adc
inc
or
adc
imul
imul
mov
sbb
shl
or
(bad)
jge
push
sahf
jns
adc
cmp
lea
adc
push
push
sbb
in
loopne
into
aas
into
sub
ds
in
mov
xchg
and
out
jno
push
cdq
adc
dec
mov
sbb
mov
mov
cld
imul
icebp
mul
sub
outs
aad
sbb
sub
inc
or
xor
ss
divps
ss
test
or
pop
loope
cdq
jmp
call
(bad)
test
(bad)
sbb
jp
push
lods
and
mov
or
lods
es
push
add
cmc
jmp
movs
enter
sahf
jnp
mov
jnp
jmp
out
stc
(bad)
cmp
mov
mov
xor
inc
and
sub
adc
push
dec
dec
lods
jne
mov
daa
mov
jo
(bad)
call
xor
dec
ret
aam
ror
js
push
and
xlat
fistp
or
push
sub
xor
push
xor
mov
js
mov
dec
call
iret
dec
push
dec
fild
pop
dec
data16
loop
pop
ins
fcom
sub
retf
sbb
into
cmps
and
or
xchg
mov
clc
push
fmul
imul
inc
dec
pop
mov
jl
cmps
adc
xor
stos
dec
les
cmp
ja
xchg
pusha
mov
aam
dec
mov
inc
cmp
dec
in
jle
std
sub
and
xchg
fsubp
arpl
je
xchg
mov
sbb
add
mov
scas
jge
cmp
jp
cmp
xchg
xor
or
sbb
cmps
scas
mov
rcr
sub
add
adc
cmc
or
xchg
xlat
sar
mov
add
push
inc
cmps
test
adc
pop
xor
movs
sbb
mov
fs
test
push
sar
jbe
cmps
pusha
jge
jmp
movs
cmp
inc
xor
cmp
mov
jecxz
add
mov
fld
call
adc
sbb
push
lock
fwait
xchg
sbb
and
pop
es
xchg
sub
sub
out
repnz
sub
adc
dec
pop
mov
iret
jb
mov
cmp
pop
mov
cmc
(bad)
hlt
adc
inc
adc
inc
add
xchg
ja
sub
pop
mov
push
inc
and
jnp
push
inc
scas
push
pop
lea
push
sbb
or
push
fnsave
cmp
mov
sbb
inc
jmp
mov
mov
xchg
(bad)
inc
sar
test
movs
jae
aam
dec
mov
cmps
inc
pop
dec
or
adc
cmp
xchg
mov
xchg
mov
shl
mul
lds
cmp
and
std
sub
dec
cmp
sbb
movs
adc
std
push
inc
sbb
int3
fnsave
cmps
jp
xor
imul
popa
cmp
push
lds
jp
adc
test
out
mov
rol
add
add
outs
and
or
enter
xor
push
and
adc
loopne
jmp
stos
mov
fs
cmp
inc
pushf
sub
dec
loop
mov
shl
repnz
sbb
push
ins
arpl
jno
sbb
dec
stos
inc
inc
ror
pop
iret
jno
fwait
pop
es
mov
push
repnz
aas
lea
stc
mov
dec
rol
stos
jns
sub
in
add
imul
jae
add
mov
xor
in
xor
dec
pop
mov
sbb
push
jb
sub
adc
jb
(bad)
dec
push
loopne
mov
mov
call
adc
ds
jns
and
or
inc
dec
add
adc
mov
nop
ret
mov
add
test
pushf
push
imul
enter
(bad)
test
test
enter
sbb
imul
cmp
xor
loop
pop
inc
or
daa
aam
adc
adc
xchg
outs
push
mov
sbb
mov
dec
(bad)
xchg
sbb
lds
add
push
push
xlat
in
push
push
enter
aam
jg
aam
mov
push
sub
cvtps2pd
add
cld
cmp
fsubp
lds
bound
sbb
pop
(bad)
adc
cmp
sub
sbb
dec
std
pop
push
mov
in
dec
cmp
cmp
add
push
popa
test
sbb
stos
out
or
mov
mov
add
sub
es
mov
fbstp
jmp
push
dec
push
sub
xor
fs
pusha
jp
cmc
jbe
push
dec
dec
int3
jge
ins
add
xchg
mov
rol
adc
nop
je
stos
(bad)
arpl
test
popf
mul
mov
frstor
cmp
add
mov
cmps
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
mov
sahf
fsub
sub
nop
test
inc
push
popf
mov
xchg
pop
add
enter
push
shl
inc
stos
add
adc
xor
test
mov
rcl
scas
push
inc
sbb
xor
pop
call
add
mov
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fld
add
add
push
pop
pop
adc
inc
add
cmp
inc
cdq
add
add
or
push
push
push
popa
outs
gs
xor
dec
add
gs
push
push
popa
outs
gs
add
or
in
xlat
or
add
dec
inc
or
popa
add
add
add
add
adc
add
add
sldt
add
or
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
or
popa
outs
jae
push
gs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
(bad)
inc
popa
add
add
add
add
arpl
add
push
imul
popa
jae
arpl
and
outs
data16
imul
add
add
or
add
add
or
add
or
adc
and
add
add
add
push
popa
push
add
add
add
add
arpl
add
dec
imul
je
inc
arpl
jae
and
xor
xor
add
add
add
or
add
add
or
add
or
adc
and
add
add
add
push
popa
push
add
add
add
add
arpl
add
push
push
popa
outs
and
popa
and
fs
and
xor
add
add
add
or
add
add
or
add
or
adc
and
add
add
add
push
popa
push
add
add
add
add
arpl
add
push
push
popa
outs
and
inc
and
outs
je
outs
ins
jae
add
add
add
or
add
add
or
add
pop
add
add
add
add
nop
add
add
push
popa
push
add
add
add
add
arpl
add
inc
jb
jae
popa
ins
and
jo
jb
jae
cmp
dec
push
add
add
add
or
add
add
or
add
push
add
add
add
add
nop
add
add
push
popa
push
add
add
std
and
add
add
popa
xor
sbb
frstor
add
ins
je
add
and
add
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
mov
lock
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
cli
imul
imul
imul
jne
cmp
outs
xor
enter
int
pop
pop
lods
dec
mov
or
jge
inc
add
xchg
add
dec
pop
cwde
stos
aaa
in
mov
cmp
xor
sti
(bad)
dec
push
or
pop
mov
pushf
add
fldcw
stc
(bad)
adc
mov
push
mov
cmp
ror
add
stos
leave
lods
or
sub
and
(bad)
movs
mov
jo
add
mov
mov
adc
mov
and
aaa
fs
cdq
dec
inc
call
jmp
movs
dec
ins
xchg
xor
int
out
pushf
xchg
cmp
leave
mov
das
cdq
inc
cdq
push
ins
arpl
xchg
add
push
stos
enter
add
js
aam
dec
test
mov
inc
ds
mov
add
clc
test
mov
loope
cmps
lods
and
cmp
or
mov
xchg
or
cs
pop
jecxz
ins
or
xlat
push
jno
test
in
jge
shl
in
lods
bound
sub
push
out
int
inc
lea
ror
fdiv
dec
js
or
push
mov
mov
aas
cmps
(bad)
mov
push
xor
(bad)
pusha
cmp
jmp
aaa
int3
dec
daa
mov
push
mov
and
(bad)
or
leave
cld
cmp
ret
cmp
and
cmp
call
xchg
inc
or
mov
and
push
in
enter
popf
adc
andnps
push
mov
push
ins
cmps
xor
leave
repnz
jecxz
aad
add
push
ficomp
fdivr
xlat
out
jmp
jmp
push
test
add
inc
push
pop
call
test
inc
stos
stos
loopne
gs
inc
sbb
out
(bad)
enter
xor
jnp
imul
and
mov
inc
(bad)
repnz
rol
cmp
mov
sar
ret
xchg
add
push
out
pmovmskb
push
mov
cmp
push
aaa
and
lea
cmps
sahf
lds
jl
cmp
xchg
ds
jbe
mov
sbb
bound
xchg
inc
es
ins
iret
call
sbb
sahf
xchg
jno
push
sbb
outs
push
and
dec
lds
mov
inc
add
rcr
rcr
shl
test
nop
and
xor
call
(bad)
dec
xor
test
xchg
sub
lea
cmp
(bad)
xlat
(bad)
inc
sar
adc
ja
mov
mov
iret
cmp
ss
dec
lods
jne
movs
addr16
mov
or
(bad)
mov
fcomp
jnp
mov
sub
adc
push
inc
jmp
stos
std
sbb
xchg
stc
cmc
std
sub
mov
or
movs
test
stos
addr16
cmp
add
popa
adc
(bad)
and
ins
adc
mov
sbb
and
rcr
and
jge
cmps
in
out
jg
dec
sar
xchg
add
add
inc
jno
xchg
mov
and
xchg
nop
retf
dec
outs
and
fdiv
mov
sbb
in
cmps
call
sbb
cmc
in
fisttp
push
and
mov
inc
out
push
mov
loope
test
pop
scas
out
mov
nop
scas
int
cmps
clc
adc
cmp
stos
xor
scas
adc
loopne
cli
mov
sub
dec
pop
in
outs
mov
push
lods
mov
enter
les
rol
mov
mov
jne
pop
aas
cs
cli
push
mov
lds
gs
retf
cmps
fiadd
retf
cmc
pop
call
rcr
rol
push
out
retf
or
and
ret
(bad)
push
mov
test
iret
xor
dec
rol
mov
sbb
or
call
(bad)
push
jno
and
push
push
sub
inc
ds
imul
jnp
outs
cs
in
add
adc
xchg
cmp
rcl
pop
rcr
add
push
sbb
sub
aas
mov
into
inc
movs
or
push
imul
lock
cmp
xor
retf
lock
out
xor
xlat
sbb
or
(bad)
aad
push
mov
(bad)
mov
loope
mov
loopne
aam
paddd
mov
mov
jne
inc
mov
add
mov
mov
cmp
(bad)
fimul
mov
mov
and
aas
icebp
rol
mov
aam
mov
jno
add
xor
pushf
mul
sbb
sub
jmp
in
dec
fnstenv
push
jp
out
int3
call
or
push
mov
iret
movs
cmp
or
test
sub
loopne
pop
and
push
jecxz
lahf
cmps
push
and
push
pop
pop
mov
sbb
mov
repz
mov
mov
xor
dec
(bad)
push
leave
adc
ins
or
cmp
jae
lods
dec
inc
lods
mov
jmp
jp
pop
cmp
dec
xchg
sub
fs
mov
push
sar
aam
or
push
mov
and
jmp
sub
gs
das
arpl
lods
(bad)
mov
inc
mov
movs
cdq
sbb
scas
int
sub
ret
sub
jbe
repz
mov
jle
add
(bad)
cli
jl
(bad)
and
xor
push
sbb
pavgw
xor
enter
stos
add
test
aad
cmps
push
out
mov
int
in
jmp
(bad)
stc
pop
in
sub
fnsave
dec
sti
jmp
cld
jno
mov
sub
lods
add
cld
xor
gs
jmp
inc
sub
adc
cmp
rol
daa
add
xchg
sub
jae
dec
xchg
in
(bad)
shr
int
aaa
xchg
daa
pushf
and
jae
add
add
test
lds
and
repz
stc
push
rcr
into
into
pop
dec
out
inc
out
pushf
hlt
mov
repz
pushf
mov
adc
shr
sbb
mov
mov
pop
(bad)
cdq
fwait
es
(bad)
js
mov
fist
lds
xor
jno
lods
dec
js
sbb
fbld
sahf
pop
mov
in
mov
sub
mov
push
mov
mov
or
sbb
jno
jmp
jecxz
and
push
aad
repz
scas
cmp
adc
cmc
pop
mov
xchg
or
pop
dec
xor
jge
dec
push
cmp
pop
sub
dec
test
ins
(bad)
loopne
or
inc
dec
leave
es
scas
retf
cmp
or
sub
ja
sub
inc
xchg
or
(bad)
push
sahf
or
xchg
jmp
pop
xlat
mov
mov
popf
pop
js
push
lahf
pop
mov
xchg
lods
ins
int
jns
lahf
and
push
cli
enter
clc
aad
xor
sti
inc
shl
mov
xchg
push
aam
jge
retf
stos
sbb
fst
fimul
sar
int
retf
or
scas
xor
std
movs
jns
shl
jl
jno
lds
and
xchg
pop
cmc
adc
es
sub
push
jnp
and
push
add
int
fmul
out
add
xor
pop
scas
sbb
cmp
and
imul
jg
retf
aas
push
mov
(bad)
or
loopne
or
jns
loop
jae
sub
je
cmp
and
xor
daa
sti
mov
dec
xor
arpl
and
pop
and
xchg
mov
mov
push
out
jae
retf
ss
inc
add
jle
add
(bad)
cmp
mov
adc
addr16
nop
cmp
in
pop
sub
and
sbb
mov
pop
movs
xchg
or
movs
xchg
dec
inc
push
cmp
pop
mov
pop
stc
mov
or
pop
mov
adc
sar
fild
sahf
cmp
daa
mov
fistp
mov
int
retf
in
outs
pop
dec
in
aaa
test
(bad)
js
mov
fidivr
out
push
mov
mov
fisttp
jo
cs
jp
mov
jne
cdq
add
push
jb
jmp
cmp
inc
repnz
and
mov
push
jp
jg
add
out
(bad)
popf
adc
cmps
fmulp
sub
jae
dec
adc
push
rcr
scas
jle
jae
push
push
pushf
bound
adc
popf
inc
cmps
jge
lods
xlat
in
xchg
in
fwait
and
daa
cmp
mov
jbe
sbb
mov
cmp
call
fimul
rcr
lds
in
jae
cli
(bad)
pop
test
fdiv
sub
xchg
mov
icebp
(bad)
stos
and
arpl
arpl
mov
std
dec
aas
movs
jae
ins
shl
xchg
sub
jp
push
push
fisttp
sbb
sub
fimul
mov
mov
inc
in
push
xchg
or
out
bound
add
sbb
mov
sahf
ficom
sub
in
mov
call
into
add
shr
scas
dec
retf
adc
jbe
daa
mov
scas
fidivr
jb
push
add
retf
iret
inc
pop
mov
xlat
das
and
ss
add
cmp
push
mov
dec
nop
xchg
sub
cmps
out
sahf
pop
xor
inc
and
call
mov
pushf
add
cmp
xor
stc
push
pop
xchg
adc
add
lds
inc
lea
mov
in
cdq
pop
xchg
loope
and
jns
cmp
out
je
loopne
and
xchg
push
inc
sbb
mov
cmp
dec
das
cwde
sbb
jbe
fstp
test
or
mov
sub
scas
lahf
adc
ret
daa
sti
lods
xlat
lock
aam
sbb
rcr
xchg
inc
leave
sbb
cmps
aam
push
lahf
ret
sbb
ds
mov
arpl
je
sub
mov
cmp
pop
dec
sbb
pop
outs
test
mov
push
jns
mov
add
push
jp
lods
test
movs
jmp
and
sub
fdivr
fs
into
loope
fisub
enter
aas
cmp
xchg
enter
push
int
adc
lahf
lahf
mov
adc
add
jns
test
or
xchg
fcom
sbb
(bad)
push
jp
push
imul
inc
push
or
mov
movs
push
daa
and
call
add
std
imul
add
ret
cmp
push
mov
cmp
outs
cmp
loop
pop
repz
xor
js
cmp
lea
cmp
cld
xor
dec
gs
rcr
pop
aaa
in
out
or
dec
jb
mov
inc
sbb
pop
idiv
adc
mov
push
gs
repnz
xlat
jae
push
xchg
dec
cdq
cli
push
fucomp
xchg
mov
imul
es
nop
xchg
sub
(bad)
icebp
adc
cs
lods
push
push
mov
cs
inc
cmps
jo
jo
out
jmp
jg
adc
dec
ret
nop
jo
fs
sahf
(bad)
lods
fnsave
das
xchg
adc
jb
ret
sbb
fcomp
dec
or
xchg
inc
stc
pushf
addr16
ret
xchg
shl
sbb
mov
add
std
xchg
or
imul
push
fild
jmp
fiadd
popa
imul
arpl
mov
sbb
sbb
scas
ins
push
mov
push
(bad)
cmp
xor
lods
and
dec
jecxz
(bad)
mov
lods
xor
adc
outs
fwait
jge
xchg
(bad)
mov
jmp
jb
dec
mov
aaa
xor
pop
(bad)
sub
mov
pop
inc
push
sbb
xchg
sub
jecxz
mov
out
add
sbb
jmp
mov
test
ret
xchg
in
pop
inc
pop
mov
test
lock
jb
stc
enter
add
lock
cmps
push
push
sbb
inc
add
les
pop
lods
cmp
xchg
add
in
(bad)
mov
mov
inc
inc
cmp
(bad)
mov
icebp
mov
stos
inc
fistp
adc
add
mov
adc
in
out
jae
scas
loop
mov
mov
inc
mov
idiv
xlat
das
add
fwait
dec
test
in
xchg
mov
shr
outs
outs
pop
shl
int3
cmp
add
sbb
fdivr
adc
jge
inc
in
jnp
or
sbb
xchg
xor
(bad)
and
xchg
enter
addr16
pop
mov
dec
mov
bound
inc
add
xor
cli
jge
push
mov
push
mov
popf
pop
xchg
xor
lea
mov
cmps
mov
mov
pop
dec
or
popa
in
cmp
sbb
cmp
mov
sbb
dec
clc
dec
scas
dec
sar
in
cld
add
mov
mov
add
xlat
pop
jge
pop
push
mov
int3
mov
add
mov
push
or
add
bound
icebp
es
iret
lahf
in
lods
cmp
rol
sbb
sub
push
sbb
(bad)
mov
dec
dec
pop
sub
cli
(bad)
mov
ins
pop
pop
dec
and
mov
iret
and
dec
mov
xchg
sub
mov
scas
mov
xor
std
mov
mov
push
sbb
sbb
and
push
sbb
(bad)
xor
std
aas
cmp
or
mov
add
rol
push
out
in
es
xchg
addr16
and
fst
retf
and
inc
lods
outs
xor
cli
fild
pop
das
out
in
shr
fdiv
sub
call
mov
aaa
nop
jno
nop
add
sbb
sbb
ficom
sbb
out
mov
pop
rol
ret
sbb
add
push
xor
test
mov
pop
push
xor
pushf
(bad)
xchg
fs
jp
test
call
xchg
sbb
scas
fcmovu
icebp
adc
mov
iret
push
ficomp
bound
pushf
push
sub
inc
(bad)
cmps
cmp
mov
lds
mov
(bad)
ins
outs
jns
xor
int3
jnp
ss
mov
push
cmp
fsub
(bad)
sbb
outs
and
sbb
out
int3
pop
cmps
aad
jecxz
jnp
inc
call
gs
pop
mov
call
and
and
(bad)
shr
(bad)
mov
mov
xchg
out
jecxz
push
xor
repz
loopne
jno
mov
sar
mov
mov
or
fisttp
jg
jp
gs
std
xchg
push
fadd
push
nop
in
loop
imul
inc
sub
cmp
lahf
enter
imul
sti
ja
repnz
neg
jb
sbb
test
nop
jns
mov
test
fdivr
push
repnz
dec
fcomp
pop
dec
mov
and
mov
sub
addr16
out
out
add
adc
xchg
repnz
cmp
or
adc
add
add
sbb
loop
sahf
xchg
(bad)
inc
in
mov
add
xor
ror
or
ret
xchg
cld
inc
xor
movs
stos
sbb
gs
je
repnz
aas
aas
pop
push
pushf
jno
mov
cmps
mov
sbb
cmp
hlt
int
nop
inc
xor
shl
push
xor
addr16
fwait
mov
mov
jb
pop
sub
int
ror
sub
mov
into
(bad)
scas
fiadd
sbb
leave
les
adc
iret
outs
dec
das
mov
bound
cmp
ja
arpl
cli
push
dec
sahf
mov
inc
dec
xor
mov
cmps
mov
das
mov
div
mov
arpl
mov
push
mov
sub
jo
and
in
mov
ins
push
sub
jbe
adc
and
dec
sti
pop
mov
push
xchg
dec
sar
repz
and
lahf
in
scas
xchg
xchg
ds
retf
add
pop
mov
retf
add
push
xor
pop
shl
mov
jmp
retf
ins
mov
xor
cld
(bad)
clc
mov
sbb
pop
adc
xor
scas
(bad)
xchg
cmp
pop
lock
pusha
and
push
jg
cs
pop
lock
inc
mov
lods
push
pop
fisub
and
dec
adc
je
cmp
test
xchg
movs
outs
mov
sbb
punpckhdq
and
and
jb
push
mov
mov
cmps
or
aad
ins
in
jecxz
test
inc
add
stc
sbb
clc
hlt
jmp
dec
stos
arpl
pop
fwait
retf
cmc
xor
retf
push
mov
push
push
iret
ins
hlt
sub
and
xchg
movs
pop
mov
push
ret
xchg
sub
push
mov
fs
jmp
and
add
imul
lock
shr
jp
mov
int
(bad)
mov
adc
adc
shl
cmp
and
cmp
popf
test
mov
scas
jo
pop
push
mov
(bad)
pop
mov
xchg
pusha
ret
mov
push
nop
pop
adc
scas
xor
push
mov
add
cmp
out
inc
inc
xchg
mov
and
out
push
fmul
dec
in
adc
dec
mov
(bad)
sub
mov
in
rcl
lea
test
sub
or
stc
enter
cld
push
imul
in
loop
or
ret
arpl
jb
jge
jb
xchg
cs
es
inc
jl
and
adc
iret
sbb
pop
sbb
jo
(bad)
fidiv
mov
sti
icebp
test
ja
inc
cmp
cmp
jne
dec
jmp
mov
lods
fwait
mov
arpl
jecxz
push
push
or
adc
fs
out
and
inc
std
repnz
jge
jmp
fld
hlt
fnstcw
or
adc
je
xor
mov
test
leave
or
push
adc
dec
out
pop
cmp
call
cmp
xor
jae
xlat
jb
jl
rol
xchg
xor
xor
inc
pop
aaa
daa
xor
pop
aam
outs
push
xor
jb
nop
mov
cdq
add
and
push
fdiv
mov
aad
cmc
sti
mov
fwait
jp
lods
cmc
stc
aam
pop
dec
sub
inc
jmp
(bad)
jle
sahf
iret
jno
std
div
dec
add
dec
mov
push
sub
aaa
(bad)
cmp
hlt
cmp
pop
mov
or
xor
mov
sub
mov
jmp
sub
adc
iret
mov
push
xchg
sbb
mov
pop
jno
(bad)
aas
dec
pop
mov
push
xor
pop
push
out
vcvtsd2si
jne
outs
div
inc
lods
and
cmps
mov
add
mov
mov
inc
pop
inc
sahf
imul
adc
(bad)
jmp
fs
push
mov
outs
pop
pop
hlt
fdivr
scas
cwde
lock
imul
out
mov
sbb
(bad)
xor
pop
je
ss
sbb
push
or
jecxz
mov
jb
pop
aam
jns
test
pop
cmp
push
adc
shl
fistp
(bad)
mov
(bad)
adc
inc
jg
fdivr
dec
push
add
das
sub
loopne
shl
(bad)
repz
or
pop
push
fmul
cmp
xor
push
inc
inc
push
aaa
mov
mov
mov
add
rcr
in
rcl
sti
mov
cld
test
popa
mov
pop
rcl
and
ret
pusha
imul
and
scas
lds
pop
inc
dec
and
jg
sub
fadd
jp
aam
nop
add
xlat
div
adc
mov
in
out
adc
fs
inc
inc
enter
jge
sub
in
test
shl
xlat
xor
push
cmp
sub
push
pop
nop
dec
or
pop
ds
mov
adc
or
leave
(bad)
cmc
lods
ins
gs
(bad)
jb
sbb
push
xchg
psubsw
int
(bad)
inc
xchg
ins
out
sub
xor
xor
mov
mov
in
or
pop
imul
mov
cmp
or
or
xlat
sbb
jecxz
shl
test
cld
push
inc
hlt
ss
push
(bad)
imul
inc
adc
adc
adc
dec
movs
mov
sub
cmp
jl
aad
mov
cli
mov
shl
push
sbb
sub
push
cmps
ins
popa
xor
mov
mov
pop
pushf
jle
dec
movs
pop
dec
adc
arpl
xchg
adc
jge
(bad)
mov
mov
add
nop
mov
dec
inc
push
jmp
mov
xor
push
mov
cmp
pop
dec
cmp
ins
call
repnz
mov
push
(bad)
and
adc
cmp
adc
xlat
cmp
adc
or
mov
out
xor
fidivr
jb
test
pop
loopne
and
retf
bound
xor
pop
out
jle
dec
in
mov
or
cld
sub
adc
mov
test
sbb
div
pop
int
adc
pop
xchg
xchg
xbegin
xchg
push
pop
sbb
jae
add
inc
add
test
sbb
dec
mov
xchg
aam
cmp
jne
retf
sub
or
imul
test
mov
aaa
ins
cmps
(bad)
in
mov
loopne
jecxz
pop
icebp
mov
adc
push
adc
jg
pop
or
add
cmp
sbb
or
rcl
mov
sbb
call
scas
inc
mov
call
retf
add
xchg
(bad)
push
or
jnp
jmp
push
cmp
push
hlt
pop
cmps
test
mov
xchg
mov
fs
push
add
add
ficomp
mov
ret
or
add
mov
add
repnz
xor
push
jl
jp
scas
mov
sub
inc
and
cmp
or
push
jl
aas
(bad)
sbb
(bad)
out
(bad)
sbb
fiadd
aam
dec
xchg
out
mov
lock
arpl
mov
adc
jnp
push
dec
retf
imul
inc
add
add
dec
push
outs
test
retf
push
or
cmps
xor
pop
dec
ret
fild
add
and
jmp
fidivr
inc
xor
push
aam
inc
dec
add
scas
mov
mov
sbb
aas
test
stos
stos
fld
test
or
dec
jmp
cmp
dec
(bad)
in
(bad)
scas
std
xor
fs
mov
test
mov
xchg
add
or
xor
ja
rcr
dec
pop
aas
imul
add
(bad)
xchg
and
sbb
sub
sub
dec
fs
(bad)
test
out
addr16
repnz
sub
outs
or
jmp
js
sbb
mov
jbe
mov
imul
jmp
movs
(bad)
push
and
pop
test
sub
xchg
and
sub
out
cld
test
loop
fldcw
movs
cwde
adc
jecxz
mov
push
js
and
scas
arpl
dec
je
push
pop
(bad)
lahf
mov
mov
data16
jmp
cmp
pop
std
in
shl
adc
jbe
out
mov
dec
jne
and
push
ror
xor
xchg
out
add
sahf
cmp
iret
out
cmps
xor
push
mov
mov
mov
mov
out
pop
xchg
nop
mov
xchg
cmp
std
xchg
mov
mov
jbe
jo
sbb
fisub
mov
retf
xor
push
inc
imul
imul
mov
and
(bad)
icebp
add
mov
mov
xchg
xor
dec
fisub
lds
jge
pusha
sahf
(bad)
loop
push
dec
jo
pushf
jbe
jg
cmp
jbe
test
xchg
xor
cmp
cld
sti
ror
jo
sbb
mov
nop
psubb
lahf
pop
fidiv
shl
xor
dec
push
leave
test
stos
xor
and
sbb
adc
iret
sbb
lea
and
cmp
(bad)
inc
push
xchg
int3
and
adc
ret
sub
into
imul
out
aad
(bad)
mov
add
pop
stos
adc
(bad)
into
sub
arpl
xchg
or
add
jg
lahf
clc
mov
cmp
bswap
sub
cmp
inc
mov
push
push
sbb
add
(bad)
js
inc
mov
sti
retf
stc
xlat
lahf
imul
inc
test
sbb
mov
mov
jne
push
push
dec
mov
sbb
xchg
xlat
jmp
mov
jle
xor
jnp
xchg
fistp
outs
test
mov
push
xchg
adc
xor
mov
inc
into
js
xor
mov
pop
aam
sub
add
push
call
xor
jp
mov
imul
popa
cmc
and
aaa
retf
enter
out
imul
out
add
xor
sahf
dec
jmp
fidivr
push
adc
push
mov
jno
inc
add
aad
mov
arpl
mov
mov
retf
sbb
sahf
mov
push
mov
dec
je
in
icebp
test
push
push
scas
js
xchg
jp
arpl
jg
pop
arpl
enter
jae
in
xlat
mov
sub
inc
xor
xor
(bad)
fs
js
mov
add
addr16
mov
or
add
aas
mov
mov
shl
cmp
jecxz
xor
jecxz
push
mov
ds
push
and
jnp
aas
shr
lds
dec
jp
mov
or
stos
outs
xor
data16
xchg
cmp
jae
ja
xchg
cmp
ds
cmp
or
xchg
out
jb
dec
dec
mov
push
ret
loope
das
cmp
xor
pop
loope
ds
std
push
jg
xchg
mov
ret
je
shl
xor
stc
cmps
popa
pop
cdq
add
jecxz
clc
push
mov
or
cld
(bad)
nop
xchg
jmp
inc
retf
movs
cmp
repnz
out
ret
pop
jbe
add
cdq
(bad)
and
call
inc
mov
xchg
out
(bad)
stos
(bad)
adc
call
inc
add
in
das
cmp
xchg
out
push
icebp
out
arpl
add
jno
push
aam
rcr
inc
call
dec
outs
xchg
sbb
pop
lock
lahf
xchg
(bad)
shr
mov
xchg
or
xchg
(bad)
dec
(bad)
shl
mov
xchg
stos
sub
jns
imul
daa
jecxz
xbegin
mov
sub
ja
mov
lea
out
sbb
iret
(bad)
xchg
xlat
lahf
cmc
(bad)
jg
mul
stos
call
xor
test
out
adc
int
fstp
sahf
fcmovnbe
cwde
sbb
add
jg
aas
fimul
push
mov
gs
cmp
loopne
xor
cmp
std
lahf
mov
in
fcomip
scas
scas
xchg
pushf
pop
loopne
xchg
jecxz
cmps
inc
ret
add
push
dec
jge
inc
sbb
js
jmp
pop
jne
mov
dec
cwde
sahf
int
pop
das
addr16
es
adc
in
pop
hlt
mov
adc
mov
cmp
mov
sbb
pop
cmp
in
sub
iret
hlt
stos
sar
ins
scas
mov
pop
mov
xor
out
add
mov
cmp
inc
aaa
aaa
outs
cmp
jbe
add
aas
dec
hlt
pop
clc
push
repnz
out
int3
xchg
mov
pop
out
mov
aas
(bad)
(bad)
fimul
iret
mov
js
dec
lahf
push
leave
cmp
push
sub
add
out
push
push
jp
call
xor
ds
adc
lahf
mov
inc
ret
add
aam
cli
(bad)
inc
xlat
stos
push
pop
push
aam
out
in
out
in
mov
sbb
add
sbb
aad
sbb
push
and
inc
retf
cmp
scas
xchg
es
sbb
stos
push
imul
(bad)
jecxz
mov
outs
push
inc
jnp
inc
xor
push
jge
ss
movs
adc
sbb
dec
stos
jmp
add
sub
mov
movs
adc
add
sub
dec
sub
push
mov
xchg
retf
rol
push
dec
jp
in
imul
or
pop
and
dec
sub
push
in
jmp
and
sahf
xchg
push
inc
pop
xchg
sahf
xchg
jns
jmp
add
test
sub
add
dec
ud0
add
push
fs
push
add
add
popa
bound
xor
add
adc
push
jb
addr16
outs
and
jo
gs
and
add
add
add
rol
add
pop
push
add
adc
pop
add
mov
add
push
popa
push
add
add
add
gs
xor
add
adc
push
jb
addr16
outs
and
jo
gs
and
add
add
add
dec
add
push
add
add
mov
add
push
popa
push
add
add
add
add
gs
xor
add
and
and
and
and
and
and
and
inc
outs
ins
jo
outs
outs
je
and
imul
add
add
add
add
add
or
add
adc
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
jb
imul
data16
popa
jb
add
add
add
add
add
daa
push
inc
adc
adc
pop
add
nop
add
add
push
popa
push
add
add
add
gs
xor
add
pop
add
xor
cmp
add
add
rol
add
add
add
inc
ret
add
or
sbb
pop
add
nop
add
add
push
popa
push
add
pop
add
outs
outs
ja
and
xor
imul
cmp
add
add
add
add
add
gs
pop
add
rol
add
and
add
push
add
add
push
nop
push
add
inc
sub
add
or
xor
pop
add
rol
add
and
add
push
add
add
push
rol
add
add
add
add
gs
xor
add
or
inc
gs
outs
gs
jb
add
add
rol
add
add
add
xchg
add
add
add
sbb
pop
add
nop
add
add
push
popa
push
add
add
add
or
add
popa
xor
sbb
out
add
ins
je
add
add
add
fiadd
add
add
add
jbe
add
sub
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
inc
add
(bad)
inc
add
add
rol
rcr
add
(bad)
inc
test
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
data16
data16
add
data16
data16
add
push
data16
data16
data16
add
add
pushaw
add
data16
push
add
add
add
add
data16
push
add
add
add
data16
data16
add
add
push
push
add
add
add
push
pusha
push
pusha
push
pusha
push
pusha
push
add
data16
add
add
add
pushaw
push
pusha
push
pusha
push
pusha
push
add
data16
add
add
xor
data16
push
pusha
push
data16
push
add
data16
add
add
add
add
add
pushaw
push
data16
push
add
data16
add
add
add
add
push
data16
add
add
push
add
push
add
add
add
add
push
data16
push
data16
push
add
add
add
add
push
pusha
push
pusha
push
data16
push
add
add
add
add
add
data16
add
pusha
add
add
data16
data16
add
pushaw
add
data16
data16
add
data16
data16
add
data16
data16
add
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
mov
mov
mov
add
sbb
sub
dec
add
add
add
add
xor
pop
add
rol
add
and
add
or
add
push
enter
inc
sub
add
or
outs
xor
pop
add
rol
add
and
add
push
add
add
push
rcl
add
add
add
add
gs
xor
add
xor
xor
add
add
add
add
out
add
add
add
adc
pop
add
nop
add
add
push
popa
push
and
push
gs
imul
xor
xor
fs
and
xor
je
ins
bound
and
xor
xor
inc
add
add
popa
bound
xor
add
push
add
xor
xor
das
and
and
and
add
add
add
rol
add
add
add
sbb
add
add
sbb
pop
add
nop
add
add
push
popa
push
add
sub
push
imul
xor
xor
and
and
outs
outs
ja
and
ins
ins
outs
outs
imul
je
outs
outs
add
add
add
add
gs
xor
add
sbb
push
jb
addr16
outs
and
jo
gs
and
and
imul
add
add
add
push
add
add
push
or
adc
adc
and
nop
add
add
push
popa
push
add
push
add
popa
xor
sbb
mov
add
pop
mov
inc
cmp
popa
pop
add
test
push
test
out
and
sbb
xor
sub
and
pop
sbb
sbb
add
adc
or
(bad)
out
out
xor
fsubp
xor
sub
out
(bad)
and
test
arpl
arpl
push
(bad)
out
out
(bad)
(bad)
into
into
into
adc
pop
mov
inc
adc
fimul
sbb
and
movs
arpl
or
cmp
xor
adc
inc
out
fidivr
arpl
arpl
jae
xor
jmp
(bad)
mov
(bad)
(bad)
test
pushf
pop
lods
lods
lods
lods
jae
mov
idiv
dec
adc
mov
and
lods
jnp
mov
test
imul
sbb
fidivr
movs
mov
dec
and
jnp
div
(bad)
imul
sub
and
xchg
dec
jnp
test
add
(bad)
mov
inc
xchg
movs
mov
imul
push
mov
mov
inc
sub
lods
(bad)
jae
sbb
mov
cmp
sbb
pop
into
mov
pushf
arpl
imul
cmp
push
out
(bad)
pushf
dec
jnp
and
arpl
imul
xchg
pop
pushf
(bad)
mov
pushf
pop
mov
(bad)
movs
jnp
jae
inc
sbb
inc
cmp
and
movs
push
sub
dec
(bad)
(bad)
mov
pop
cmp
jae
mov
lods
pop
push
mov
inc
jae
mov
arpl
push
sub
and
xor
jae
pushf
imul
out
mov
jnp
jae
adc
imul
out
mov
test
(bad)
xchg
imul
lods
xchg
mov
(bad)
lods
pushf
xchg
mov
faddp
mov
movs
jnp
imul
jnp
pushf
arpl
xchg
mov
movs
(bad)
out
mov
sub
mov
xor
arpl
imul
xchg
mov
mov
xchg
mov
sub
push
arpl
arpl
inc
jnp
xchg
jae
adc
arpl
sub
mov
lods
pushf
mov
cmp
push
sub
(bad)
mov
pushf
imul
xchg
movs
xchg
jae
xchg
dec
pop
inc
arpl
mov
test
test
or
inc
and
into
mov
dec
and
jnp
jnp
jae
xor
xchg
pushf
pop
imul
mov
lods
mov
movs
jae
mov
pushf
test
test
mov
lods
jae
inc
xor
(bad)
pushf
jnp
cmp
lods
(bad)
pushf
arpl
cmp
pop
test
arpl
xchg
or
push
imul
arpl
arpl
mov
pushf
test
mov
lods
jae
push
cmp
xor
inc
dec
cmp
jnp
test
xchg
push
cmp
imul
mov
jnp
dec
xor
imul
mov
arpl
add
add
add
sub
add
add
sub
inc
or
add
or
mov
rol
mov
ret
xchg
and
dec
mov
lds
enter
(bad)
and
sbb
mov
dec
pop
popf
mov
adc
mov
pop
ins
retf
movs
iret
lahf
inc
or
sub
out
add
and
mov
mov
push
push
xchg
jo
pusha
jo
ret
mov
jne
adc
push
add
lods
ficom
sub
out
push
movs
sub
cmp
xchg
rcl
sbb
push
call
mov
mov
popf
sbb
aad
or
out
mov
mov
or
in
rcr
add
jno
or
sahf
sub
repnz
pop
sbb
xchg
or
cmp
mov
jnp
mov
jns
add
inc
cmps
sbb
mov
leave
repz
sbb
and
cmps
adc
popa
fiadd
jl
(bad)
aad
mov
in
push
or
je
xchg
and
or
jl
int3
or
es
dec
xchg
(bad)
xchg
dec
pop
popf
mov
jb
data16
ror
xor
sbb
ret
dec
sbb
popa
fild
dec
cwde
and
sbb
int3
jne
push
sbb
test
pop
nop
mov
adc
aaa
test
push
cmp
arpl
lea
push
imul
aam
daa
jnp
mov
jp
mov
pushf
and
xchg
pop
mov
pushf
inc
dec
daa
in
or
cmp
jns
rol
pop
jns
sbb
pop
jno
movs
adc
mov
inc
call
adc
mov
xor
push
cmp
push
outs
sub
add
enter
adc
cmp
mov
and
call
or
push
pushf
scas
mov
in
call
push
imul
mov
cs
test
mov
aad
inc
pop
mov
and
data16
jl
jnp
lahf
adc
sub
xor
in
pop
jb
mov
jbe
xchg
or
ret
inc
neg
add
mov
test
int3
adc
daa
lods
lock
in
lock
adc
icebp
ret
sbb
das
mov
sub
cmp
nop
jmp
cmp
pop
outs
das
loopne
push
jb
jo
cwde
pop
retf
cld
ret
add
or
repz
push
pop
push
cmp
adc
sbb
in
sub
inc
cmps
addr16
add
xchg
loope
lods
push
and
daa
in
push
scas
mov
pop
(bad)
sub
fwait
nop
fst
int3
adc
push
mov
or
push
inc
add
sahf
shl
sbb
clc
loop
pop
sahf
clc
jecxz
inc
mov
mov
cmp
test
add
js
and
or
dec
cmp
enter
retf
dec
push
fwait
xchg
and
lea
pop
inc
xchg
idiv
jmp
pop
addr16
repz
(bad)
das
jg
fs
inc
test
mov
add
nop
fisubr
fmul
jb
mov
adc
add
dec
fistp
xor
loopne
mov
(bad)
xchg
jmp
mov
in
xchg
xor
sub
dec
or
ret
add
and
adc
dec
jno
push
sbb
pop
enter
sbb
in
push
inc
xchg
lock
fs
cmps
mov
movs
sub
ret
xchg
enter
xchg
push
lea
ret
or
pop
or
call
adc
mov
add
fistp
jmp
pop
int3
loop
hlt
addr16
adc
xor
clc
inc
push
out
push
sub
or
inc
rcl
rol
pop
test
or
rol
lods
rcr
test
adc
and
xlat
mov
aam
dec
pop
enter
movs
xor
popf
jmp
add
daa
inc
cdq
dec
call
sub
leave
dec
push
xchg
jb
scas
xor
enter
rcl
xor
in
push
scas
daa
out
jle
lock
adc
adc
adc
or
mov
imul
sbb
nop
add
jae
and
loop
inc
outs
push
add
imul
pop
int3
inc
pushf
xor
add
add
out
test
push
lods
mov
gs
scas
sti
or
stc
inc
add
push
pusha
add
inc
or
dec
sub
pusha
rol
jge
inc
and
mov
mov
xor
aam
and
test
inc
dec
rcl
test
dec
push
mov
mov
add
sub
aam
push
add
cli
or
out
and
xor
push
imul
sub
pop
adc
pop
shr
add
and
and
push
sbb
pop
popf
adc
add
push
outs
sub
or
test
div
sbb
and
or
add
sbb
cmp
rol
retf
fadd
cmp
mov
(bad)
in
arpl
loope
push
and
pop
jb
and
add
pusha
adc
and
cmp
inc
sbb
cwde
ror
push
ror
imul
call
add
and
(bad)
push
mov
call
fsub
(bad)
xchg
mov
sub
leave
cmp
mov
mov
test
rcl
loopne
xchg
xor
cwde
push
movs
adc
or
shl
aad
(bad)
cmp
mov
mov
aaa
fisttp
dec
push
movs
push
pushf
and
jmp
add
outs
or
xor
mov
(bad)
jmp
mov
mov
test
add
mov
imul
sbb
pop
mov
(bad)
mov
or
sub
add
mov
jne
or
rol
ins
nop
daa
rol
and
add
and
or
or
(bad)
add
in
add
xor
pop
push
mov
cdq
sub
jns
int
mov
and
mov
scas
sti
mov
iret
cmps
les
or
mov
mov
icebp
mov
pop
aam
popf
push
inc
add
rol
add
mov
add
cmp
pop
into
mov
mov
push
aam
loopne
clc
and
jbe
sub
pusha
lods
outs
mov
test
mov
and
jmp
and
adc
pop
or
adc
pop
(bad)
(bad)
mov
lock
add
adc
clc
inc
add
xchg
add
in
add
inc
add
xor
add
xor
or
in
outs
jnp
fild
inc
sbb
les
push
adc
sbb
loop
ret
call
sbb
add
inc
add
add
inc
add
sub
fst
add
push
sbb
ret
or
fxch
pop
into
mov
(bad)
out
add
xchg
add
stos
popf
in
fsubp
xchg
push
jmp
mov
xor
call
or
in
pop
lods
retf
mov
mov
mov
xor
inc
pop
or
adc
inc
dec
pop
and
ds
push
push
xor
dec
cmp
pop
push
adc
test
retf
xchg
inc
movs
and
sub
sbb
loopne
not
adc
lock
cmps
clc
or
scas
fs
into
mov
or
add
mov
adc
or
(bad)
add
lahf
(bad)
fadd
jg
enter
cs
jo
arpl
(bad)
loopne
ror
sar
mov
ret
add
xor
or
test
mov
and
adc
rol
add
sbb
push
or
add
mov
mov
mov
pushf
jmp
out
test
or
inc
inc
das
cld
inc
dec
mov
jns
sbb
pushf
jmp
outs
push
(bad)
adc
and
jmp
ret
aaa
jl
nop
add
jo
lahf
inc
jne
pusha
add
adc
sub
or
pusha
push
xor
mov
and
std
fs
adc
push
push
inc
loopne
clc
ss
fst
gs
mov
pop
and
add
daa
jnp
mov
cmp
push
nop
js
mov
(bad)
cmp
or
adc
dec
add
test
outs
and
add
nop
push
test
add
pusha
test
test
add
add
test
pop
add
ins
lods
lds
inc
jp
cmps
fs
add
mov
push
outs
pop
add
add
cmps
add
ja
pop
jns
inc
push
fst
cmp
ja
jle
add
ror
push
test
inc
push
pusha
jne
xor
push
xor
cs
pop
xchg
push
jecxz
add
mov
add
add
add
shl
mov
add
or
add
xor
add
add
js
or
inc
je
add
loopne
pop
arpl
push
add
pusha
add
pop
ja
call
cs
ins
or
xor
jp
inc
jno
xchg
arpl
ins
cmp
lea
push
pop
jo
or
sub
or
sbb
add
imul
mov
dec
mov
fs
adc
add
fcmovnb
ins
or
movhps
out
xor
push
or
rol
cmp
sbb
(bad)
or
jo
xor
sti
mov
inc
imul
dec
xor
cmps
jmp
add
clc
lock
push
mov
xchg
xchg
dec
std
repnz
and
mov
vmread
imul
mov
repnz
fs
pop
jns
and
push
les
xor
adc
xlat
add
arpl
test
test
out
arpl
lods
cmc
add
cmps
(bad)
ficom
or
xchg
outs
cwde
xchg
outs
outs
lock
rol
inc
nop
add
loopne
and
out
add
pop
mov
add
add
ins
cmp
pop
pop
push
jns
dec
add
jno
(bad)
outs
cmps
xchg
xchg
add
and
jns
data16
add
cmovo
mov
fisub
daa
pop
xor
adc
pop
add
mov
push
add
mov
or
dec
outs
je
inc
inc
imul
pop
mov
push
jbe
jae
dec
sub
add
push
xchg
fwait
es
add
add
cwde
push
or
pop
jg
or
push
pushf
ror
sbb
xor
jg
add
stc
lahf
push
or
add
add
paddsb
shl
ins
rol
push
add
mov
mov
adc
add
or
loopne
and
pop
inc
rol
push
pop
inc
and
lea
adc
(bad)
xchg
(bad)
js
mov
fxch
cdq
cmp
js
push
push
push
ins
push
test
jo
call
add
fwait
jbe
xchg
fidiv
test
fsubr
lds
es
int
ins
lahf
add
daa
mov
rol
sub
xchg
inc
push
or
pop
cmps
nop
fwait
push
jo
cmp
fwait
cmp
pusha
or
les
ror
add
xor
mov
inc
dec
aaa
rcl
test
mov
add
jp
lea
pusha
mov
push
xor
push
ja
lods
call
jmp
rol
stos
repz
stos
(bad)
rol
or
or
or
mov
nop
or
mov
rol
std
jmp
cdq
mov
push
fiadd
cdq
push
or
mov
and
rol
pusha
or
mov
jnp
xchg
mov
mov
call
movs
and
in
test
test
outs
dec
jmp
cmp
mov
add
ja
daa
cmps
js
jno
sar
pop
js
mov
fcmovnbe
jnp
nop
add
ja
ror
jne
or
add
add
pop
aaa
inc
or
inc
push
jo
xchg
in
test
jo
lea
out
out
and
sub
pop
fadd
add
cwde
pusha
mov
sub
rol
push
or
stos
mov
or
or
push
fst
mov
or
lock
jmp
stos
add
adc
sbb
add
add
js
add
add
adc
lods
retf
adc
stc
sbb
add
inc
mov
xor
(bad)
loopne
nop
adc
mov
fidivr
call
and
shr
mov
mov
test
mov
and
mov
or
cmp
mov
adc
pusha
rol
mov
sbb
(bad)
cmp
or
dec
ja
inc
inc
test
push
xor
mov
in
jne
hlt
das
lods
pop
and
or
or
pusha
pop
fcomp
xchg
push
mov
inc
lods
fcmovne
mov
fiadd
rol
leave
mov
jp
mov
rol
jae
mov
ins
mov
fwait
add
nop
pop
bound
mov
mov
or
or
add
mov
add
add
rol
cmp
ret
cmp
ret
test
add
les
ret
sub
inc
fadd
aas
jl
push
fadd
mov
les
les
ret
pop
mov
repnz
sub
or
mov
imul
(bad)
push
dec
lds
push
add
mov
jne
(bad)
jbe
(bad)
jns
(bad)
pop
add
rol
or
jl
dec
push
mov
mov
cmp
es
push
add
or
pop
hlt
push
push
int3
sbb
es
mov
inc
pusha
add
gs
out
lds
les
xchg
add
mov
cmp
add
arpl
(bad)
and
stos
or
mov
sbb
mov
push
int3
loope
or
pop
cmp
add
mov
adc
mov
js
add
add
ins
pop
ins
push
sbb
and
push
add
add
pop
add
or
icebp
or
add
cld
pop
push
mov
call
loopne
in
or
mov
movs
loopne
call
mov
xor
jo
inc
lock
inc
adc
lods
rcl
retf
inc
push
xor
and
shl
sub
leave
mov
inc
inc
inc
leave
mov
mov
mov
aaa
ins
ror
stos
or
rcl
nop
or
lock
std
ror
mov
mov
aam
rcl
and
push
sbb
dec
daa
iret
adc
or
adc
sbb
cli
cmp
lods
iret
add
or
or
pop
fs
pop
fs
fs
ins
sbb
es
scas
inc
or
sar
xchg
cmp
jge
push
cmp
nop
or
jmp
int3
mov
pop
and
rcl
popf
iret
popa
cmp
arpl
cmp
bound
cdq
mov
add
or
or
or
add
(bad)
add
fstp
sub
je
push
push
adc
mov
mov
or
or
fcomp
fst
scas
test
dec
push
or
jb
pop
jb
add
or
push
ret
mov
fyl2xp1
sub
in
pop
(bad)
(bad)
movs
shr
xlat
outs
sub
jns
ret
push
ins
popf
add
int3
mov
jge
xchg
lock
leave
jmp
sbb
and
cwde
nop
add
cmp
ret
cmp
fptan
pushf
add
jo
or
lods
adc
xor
or
or
or
xchg
fnsave
pop
adc
add
or
push
or
ret
or
mov
iret
inc
push
fisub
ret
push
mov
ficom
dec
or
fcom
fdiv
stos
push
lock
and
pop
popa
rol
out
sbb
scas
jo
add
or
pop
in
dec
in
pushf
add
xor
xchg
mov
fcomp
mov
in
adc
xor
jmp
or
in
fcompp
lahf
call
mov
mov
scas
iret
mov
jle
or
popf
pop
outs
lods
fdiv
fmul
int
sub
jl
ficom
rol
pop
cwde
adc
lods
loopne
jbe
or
sahf
jg
add
in
push
iret
inc
sahf
jmp
sub
jg
and
out
out
adc
call
sbb
sbb
in
test
in
rcr
test
test
in
ins
ret
in
popa
pusha
xlat
pop
dec
into
jns
or
mov
adc
nop
pop
pop
loopne
pushf
add
or
or
add
add
or
cmp
imul
push
or
ret
mov
enter
inc
add
pop
call
ins
icebp
jmp
in
mov
mov
scas
mov
cs
push
sbb
int3
mov
int
in
pop
call
call
pushf
mov
jl
icebp
xor
sub
sub
pop
fiadd
gs
(bad)
sbb
or
ror
iret
lock
pop
bound
add
jecxz
jle
mov
fimul
cmc
xchg
pop
add
ret
jmp
cmpps
std
(bad)
push
out
pop
jae
int
or
sbb
sub
cmp
cmc
sbb
sub
or
xlat
std
hlt
xchg
jmp
and
movs
push
or
sahf
setb
jecxz
jg
cwde
aas
stc
call
sar
xchg
pop
stc
lahf
pop
stc
movs
pop
stc
nop
das
pop
test
cli
stos
mov
loop
cli
loope
sti
mov
fidiv
or
sti
scas
adc
mov
or
pusha
out
adc
test
xchg
cmp
push
das
les
jp
adc
adc
pop
pop
sbb
adc
dec
std
retf
loopne
(bad)
loop
sbb
loopne
jnp
or
sbb
and
or
xor
hlt
pop
dec
or
dec
add
adc
xor
xchg
rol
aam
ret
add
cwde
push
and
pusha
gs
add
cmp
(bad)
push
mov
inc
mov
shl
dec
xchg
sub
fs
in
cwde
xor
movs
pop
adc
add
das
inc
sbb
add
cmp
add
sub
pop
adc
pop
or
cmp
ror
fldenv
in
add
mov
and
mov
aad
(bad)
data16
mov
lds
ja
call
stos
push
xchg
shr
mov
add
dec
sbb
mov
and
xor
leave
mov
or
mov
imul
in
inc
cmps
cmp
sbb
xchg
or
xlat
cmps
push
sbb
and
add
cli
mov
push
(bad)
fs
movs
dec
cmps
(bad)
xchg
call
ret
lock
ret
pusha
mov
and
push
pop
sub
sbb
(bad)
or
jo
inc
out
out
test
repnz
xchg
mov
ret
icebp
mov
add
add
dec
push
push
nop
sbb
lods
daa
test
lock
movs
and
pop
jl
out
inc
sbb
jno
cs
aaa
xchg
jo
inc
xor
mov
jns
and
adc
loope
or
mov
mov
cmp
or
in
mov
mov
retf
cmps
mov
lds
mov
dec
inc
sub
stos
jae
add
xor
push
loop
es
test
pop
inc
les
scas
lods
mov
or
push
sub
aas
int
push
cmp
adc
cmp
mov
mov
push
push
push
pop
popf
dec
ret
dec
add
push
pop
pop
dec
mov
or
inc
and
in
inc
adc
sbb
adc
cwde
mov
mov
pop
data16
jne
push
das
pop
clc
out
add
sbb
add
loop
push
mov
or
fdiv
sub
push
aaa
lods
in
loopne
loopne
or
xchg
ja
jp
mov
pop
jl
aad
pop
jle
mov
xor
xlat
pop
push
pop
es
jb
push
jno
stos
cmp
pop
push
cmp
dec
imul
je
sbb
xchg
dec
push
inc
hlt
retf
mov
cmp
xchg
dec
sub
xor
add
rcl
rcr
or
mov
inc
xchg
pop
outs
pmullw
aaa
adc
add
mov
or
push
sub
scas
test
shr
adc
imul
ror
fwait
ins
mov
xchg
test
mov
dec
pop
ins
mov
scas
sti
jmp
repz
mov
ret
call
(bad)
cwde
add
rcr
or
pop
xchg
mov
icebp
(bad)
iret
js
inc
jle
data16
dec
shl
xor
sar
scas
js
rol
fisub
xchg
pusha
push
ins
cwde
add
pop
hlt
or
pop
fisttp
dec
jne
sub
push
mov
arpl
out
iret
pusha
adc
pop
jb
add
push
mov
add
icebp
leave
dec
loopne
hlt
iret
das
aas
jge
(bad)
das
fistp
aad
jg
repz
loope
cld
aaa
sar
(bad)
icebp
pop
pop
cld
stc
mov
jl
rcr
or
jl
or
inc
vshufps
sub
in
and
dec
or
sub
mov
movs
mov
and
pop
jns
pop
loope
loopne
mov
test
inc
sbb
sbb
inc
pop
ret
xlat
sbb
inc
add
xlat
inc
mov
neg
add
push
test
mov
inc
pop
xlat
add
je
and
fadd
push
jo
jecxz
and
add
fadd
push
in
adc
shl
es
bound
mov
sti
or
sar
adc
xchg
aas
sbb
loopne
nop
add
mov
mov
or
add
inc
inc
or
sbb
js
or
rcl
push
test
mov
fist
jb
mov
and
(bad)
scas
sbb
rol
loopne
pop
mov
call
jns
push
pusha
xor
mov
jae
jecxz
out
ror
xchg
push
popf
jmp
cmps
cmp
xor
leave
int
call
push
repnz
inc
retf
jo
and
cwde
add
fistp
push
inc
sub
or
inc
pop
ror
cmp
or
push
adc
add
mov
ror
add
outs
adc
mov
ror
pop
enter
in
sub
sbb
dec
js
xor
js
inc
and
sub
inc
shld
das
xor
add
lock
push
lods
push
add
pop
in
push
mov
add
push
(bad)
andps
or
jo
mov
push
scas
jae
imul
push
mov
lods
jmp
test
test
sbb
ror
add
jp
or
imul
and
call
shl
cmp
dec
das
mov
gs
xchg
sub
mov
cmps
sub
sub
push
adc
add
inc
pusha
or
aad
paddusb
add
add
inc
add
xchg
mov
inc
das
inc
mov
adc
(bad)
mov
and
cmc
push
test
pushf
or
dec
adc
jns
jnp
hlt
cmps
xlat
mov
push
mov
add
push
test
fisub
add
fsubr
movs
fiadd
daa
xor
and
pusha
add
mov
adc
ror
rol
test
xchg
mov
mov
shr
dec
fdivr
lock
xlat
add
pop
sub
add
push
mov
inc
add
in
or
inc
idiv
aam
or
cmp
adc
scas
call
lods
je
cs
xor
push
mov
or
rol
mov
inc
adc
rol
sbb
add
add
or
push
mov
xor
xchg
ror
adc
add
and
jge
jno
aad
pop
sub
mov
sbb
xchg
mov
adc
add
push
add
dec
add
data16
sbb
or
adc
inc
or
loop
mov
lods
test
(bad)
call
adc
nop
push
and
pop
ins
(bad)
sti
xor
jle
add
xchg
xor
add
or
retf
xor
fadd
push
mov
ins
or
ret
mov
xor
xor
lock
mov
dec
ror
out
lods
outs
daa
dec
popa
adc
sbb
and
iret
fldcw
xchg
add
xor
hlt
popa
lds
add
lock
mov
add
add
pop
popf
loope
mov
pop
add
cmp
fcmovbe
cld
lods
mov
pop
pusha
sbb
inc
add
add
xor
out
sbb
adc
mov
push
outs
cli
or
sub
jae
fwait
add
add
imul
add
addr16
imul
mov
scas
out
push
int3
push
mov
cmp
mov
mov
pop
push
js
xor
cld
sub
lds
mov
pop
enter
ins
rcl
xchg
cmp
sub
pop
mov
cwde
add
pushf
xchg
test
xchg
cmp
or
jmp
xor
pop
add
loop
add
lds
arpl
jmp
call
push
add
les
adc
cld
sub
push
cld
aaa
in
adc
and
imul
pop
jb
xchg
rcr
mov
sti
jl
inc
pop
jp
jge
fbstp
rol
dec
push
push
inc
inc
fisttp
clc
outs
add
fcmovnbe
add
or
xor
add
repz
and
push
dec
mov
push
cmp
lock
arpl
inc
aas
hlt
and
sub
add
add
inc
stos
push
mov
addr16
test
pusha
add
add
xor
stc
call
pop
add
pop
fdiv
push
loopne
sub
pushf
mov
dec
sub
ret
sub
mov
dec
xor
inc
adc
sar
xchg
jg
pop
adc
xchg
push
clc
xchg
ds
pushf
pop
jp
pushf
pop
stos
cs
push
or
mov
pop
mov
inc
stos
add
mov
cmp
fwait
mov
lods
mov
add
or
add
cmp
loopne
dec
hlt
inc
sbb
dec
in
push
test
arpl
mov
sbb
add
(bad)
inc
add
or
shl
xchg
rol
push
test
inc
jnp
repz
inc
dec
rol
and
mov
mov
imul
xor
mov
in
inc
test
xor
rol
xor
jb
pop
js
sbb
sbb
mov
sbb
or
dec
mov
jnp
and
inc
xor
push
cmps
jbe
movs
and
shl
ds
mov
movs
jp
sub
add
dec
stos
or
xor
and
in
dec
cmp
sar
add
dec
jl
dec
les
les
les
sub
inc
stc
repz
add
nop
sub
and
and
add
call
arpl
inc
call
cmp
add
xor
mov
mov
adc
inc
(bad)
retf
shl
mov
cwde
add
add
adc
sbb
inc
inc
call
sbb
and
lods
mov
sub
xor
test
sub
and
push
xlat
dec
dec
push
mov
mov
and
and
sub
adc
rol
add
sbb
sbb
adc
adc
aam
dec
aam
add
sub
fadd
enter
push
mov
or
or
adc
pushf
sbb
xchg
(bad)
inc
test
loopne
aaa
push
xchg
fs
add
cmp
das
sub
(bad)
or
add
dec
add
inc
dec
cmp
and
lock
add
cmp
xor
add
sti
mov
xchg
sub
push
sub
add
test
xor
add
cmp
pop
dec
inc
or
adc
adc
mov
push
cmp
cmp
push
lods
add
mov
call
push
mov
test
test
add
and
cmp
mov
inc
inc
scas
xor
add
or
lea
lock
xor
ret
add
add
les
dec
nop
add
xor
adc
xor
xor
add
cmp
pop
push
cs
rol
xor
test
add
fadd
mov
ins
push
add
mov
dec
lock
test
dec
lock
inc
mov
inc
inc
or
dec
push
test
dec
pusha
add
push
out
aam
jge
or
or
add
sub
retf
std
fimul
aad
in
fdivr
and
fs
cld
repnz
cli
mov
cli
mov
pop
ins
add
push
icebp
fcom
jne
inc
enter
les
sbb
dec
mov
arpl
cmp
nop
ror
add
in
dec
xor
add
and
jns
sbb
pop
or
mov
adc
daa
sub
pushf
int3
jae
sub
mov
mov
sbb
test
or
js
jge
pop
or
jg
push
sub
mov
sbb
popf
add
rol
call
sub
test
add
add
fadd
sti
mov
mov
push
xchg
lock
sub
inc
add
sbb
push
and
add
dec
mov
loopne
out
xor
test
adc
aam
sub
cmp
add
scas
or
jns
xor
test
sub
sub
(bad)
std
xor
and
sub
shl
adc
and
xchg
ret
pop
lahf
stos
fist
fcomi
inc
push
sahf
pop
shl
pushf
stos
fld
inc
xor
fwait
cmp
mov
sbb
rcr
ret
add
push
xchg
lods
sub
test
jne
shr
inc
fiadd
cmp
sbb
pop
enter
pop
mov
cmp
cmp
xchg
xchg
add
lock
dec
mov
dec
sub
xor
out
add
cwde
test
xchg
push
add
inc
adc
or
or
or
sbb
cmc
adc
imul
sbb
xor
pop
sub
add
inc
or
and
test
dec
or
inc
cmp
push
xor
outs
pusha
pop
push
loopne
xor
xor
mov
add
pusha
add
pusha
xor
pusha
adc
popa
adc
loope
sbb
mov
or
xor
loopne
pop
loope
scas
loopne
push
loope
js
xor
sbb
data16
cbw
popa
pop
cmps
loope
push
loop
xor
jecxz
sbb
bound
add
ds
test
add
or
movs
sbb
jl
mov
dec
sbb
jo
or
and
pop
ret
xor
sbb
pop
or
or
pop
mov
push
or
push
add
cmp
add
in
add
add
xchg
sbb
or
test
test
test
add
pop
bnd
icebp
inc
add
and
push
fcomip
or
clc
in
inc
mov
cwde
aam
adc
rcr
mov
inc
or
in
pop
push
inc
and
jecxz
in
or
pop
js
dec
adc
dec
rol
punpckhbw
cdq
xchg
xor
mov
pop
jp
loop
sbb
in
add
addr16
cmps
jo
dec
jne
into
mov
rcr
in
sub
add
loop
fld
dec
add
std
loop
fistp
mov
call
xor
add
xor
xor
push
adc
push
jb
jb
push
shr
js
imul
push
imul
jbe
xchg
scas
or
push
add
sbb
add
pop
hlt
push
fisttp
mov
cwde
xor
xor
add
and
xor
or
movs
mov
pushf
lds
mov
adc
js
aas
adc
cmp
xor
or
pop
mov
mov
gs
cmps
add
add
dec
add
or
push
test
push
mov
sbb
inc
fsubr
inc
test
in
sar
mov
ins
les
ins
(bad)
fisubr
(bad)
jmp
inc
add
xchg
pop
ja
pop
imul
enter
ins
iret
push
jmp
adc
mov
gs
in
aam
jmp
dec
mov
add
push
push
add
push
mov
rol
out
cmp
rol
xor
pop
push
or
imul
adc
sub
test
sub
push
js
push
lock
test
pop
pushf
xchg
adc
sahf
adc
sub
rcl
(bad)
outs
mov
push
inc
imul
xor
push
popf
adc
push
clc
jmp
sahf
or
sbb
add
dec
pusha
jmp
pop
popa
cmp
jmp
fnsave
lock
sbb
cdq
xchg
sbb
mov
in
jno
nop
adc
push
sub
mov
outs
shr
mov
adc
add
push
inc
js
cmp
jb
fsubr
pop
mov
(bad)
in
aad
push
sub
and
imul
mov
and
cmp
movs
add
cmp
repnz
(bad)
xchg
push
xor
add
or
mov
jbe
daa
mov
add
jno
lahf
imul
dec
lock
bound
push
call
or
jmp
pop
imul
cmp
mov
fstp
(bad)
clc
outs
add
add
or
dec
mov
dec
aas
icebp
xor
xor
hlt
cmp
adc
mov
push
push
inc
call
pop
lock
repnz
imul
in
sahf
test
jae
jg
pop
test
dec
js
div
add
add
outs
imul
sahf
push
pop
imul
mov
push
adc
add
and
jne
add
or
add
test
add
test
add
and
push
or
lock
adc
test
add
das
repz
hlt
dec
xchg
add
imul
repz
outs
clc
aas
loop
call
mov
dec
dec
not
pop
push
mov
jl
fptan
xor
push
add
pop
jns
(bad)
je
mov
dec
daa
ja
maskmovq
imul
sbb
fbld
lock
dec
enter
test
cmp
idiv
mov
fidiv
cmps
add
inc
shl
clc
add
mov
lahf
jp
mov
adc
add
add
imul
lock
imul
jae
repnz
cs
dec
fild
fbstp
dec
add
jbe
jle
push
pusha
test
outs
add
push
pop
xor
fwait
dec
jp
lods
cmc
mov
jmp
pusha
add
add
scas
jl
xor
jp
aas
cli
data16
jl
aaa
jae
mov
inc
pop
jmp
(bad)
xchg
(bad)
addr16
addr16
mov
pop
icebp
add
dec
nop
add
jl
xor
mov
loope
xchg
sub
ror
mov
add
pusha
jle
push
jle
inc
push
out
jle
mov
(bad)
in
xlat
jle
mov
jg
pop
jmp
xchg
inc
jg
mov
jg
scas
jg
mov
outs
jbe
loope
jg
pop
or
add
adc
lock
test
pop
xor
and
mov
daa
push
lods
push
sbb
jb
call
and
fs
test
pop
test
pop
sbb
dec
pop
scas
inc
fldcw
movs
or
repnz
jmp
add
(bad)
or
rol
add
mov
and
xor
push
sub
lods
pop
and
sbb
adc
push
nop
sub
or
sub
mov
jmp
xor
mov
push
mov
push
push
loopne
add
in
cmp
shr
inc
rol
mov
dec
stos
push
and
retf
call
test
sub
aam
push
mov
cmp
fadd
retf
pop
pop
fwait
sub
(bad)
retf
shr
fsubr
cmp
test
lock
xchg
pop
push
scas
outs
std
xlat
mov
fwait
xlat
inc
mov
xor
jns
fwait
std
sub
movs
jnp
mov
stos
call
jno
mov
jne
dec
icebp
xchg
sub
add
mov
shl
fcomp
stos
xchg
push
(bad)
jl
push
xchg
mov
and
add
dec
sbb
push
mov
repnz
inc
pop
mov
in
popa
dec
push
sub
dec
inc
shl
sub
sbb
jb
sub
jl
xchg
mov
jo
sub
mov
daa
cmp
loopne
pop
and
jns
xchg
cmc
pop
pop
xchg
adc
mov
sbb
rol
push
cmp
mov
and
mov
push
xor
sahf
and
xchg
sub
test
push
push
adc
and
push
mov
pop
(bad)
adc
movs
out
daa
sbb
inc
push
push
xor
mov
loopne
and
add
and
push
cmp
add
pop
push
lea
stc
ret
cs
push
fwait
cmp
push
push
sub
add
pop
xchg
push
xor
pop
inc
mov
push
add
in
and
ret
enter
mov
cmc
ss
es
in
and
dec
or
add
sbb
push
hlt
adc
add
mov
mov
mov
adc
call
adc
sbb
ror
iret
cmp
xor
ror
mov
mov
sbb
or
fwait
scas
cmp
pop
sub
mov
hlt
mov
push
jnp
ins
pop
pop
mov
fwait
imul
mov
je
rcr
cmc
or
pop
icebp
add
mov
loop
loop
and
aam
pop
add
xor
pop
sbb
mov
mov
xor
mov
mov
enter
in
adc
ret
jbe
add
cli
push
mov
dec
enter
sub
add
fwait
stc
neg
push
stos
clc
jns
sbb
ins
jb
sbb
es
jmp
aad
add
pusha
das
outs
jp
shr
and
sbb
in
xchg
test
das
adc
pop
loopne
repnz
adc
push
rcl
ficomp
jge
mov
mov
jecxz
je
scas
mov
fisub
adc
into
push
cli
cmp
inc
retf
into
mov
outs
std
jnp
data16
cmp
push
fs
dec
pop
mov
jbe
add
or
js
popf
xor
push
mov
and
xchg
cmps
adc
add
lock
rcl
cld
rcl
add
push
and
ja
fs
add
inc
sti
int
retf
inc
in
rcr
add
inc
sbb
add
stc
xchg
sub
pop
sbb
loop
mov
data16
add
or
into
sub
cmp
lds
push
cmp
xorps
pushf
out
push
cmp
popa
sbb
and
inc
or
jnp
inc
inc
and
les
push
je
mov
adc
push
adc
push
test
push
adc
push
shl
dec
or
cmp
sub
retf
mov
scas
dec
and
sub
cmp
push
int3
shl
ins
mov
(bad)
cwde
aaa
add
sub
rol
push
sahf
mov
sub
nop
sbb
lahf
arpl
adc
ss
mov
and
retf
mov
mov
nop
ror
push
cmp
xor
or
add
mov
sub
ret
or
(bad)
sub
adc
call
test
xchg
mov
fdiv
test
in
add
mov
ds
popa
sar
adc
ret
mov
mov
xchg
ret
icebp
jmp
mov
sbb
aaa
pop
retf
addr16
dec
imul
dec
imul
sbb
jb
mov
retf
cmp
out
cmps
push
cwde
push
jmp
fsubr
xchg
jmp
mov
inc
add
test
pop
mov
or
or
lock
inc
outs
jge
pop
jecxz
xlat
mov
mov
adc
push
js
shl
loope
adc
add
jb
test
sahf
inc
movs
das
or
sub
xor
add
push
mov
cdq
in
shl
sub
enter
ficom
sbb
xchg
jo
sbb
int
push
jb
cmc
push
push
ss
shl
ja
and
xchg
cmc
mov
add
sbb
adc
or
ret
pop
ins
mov
inc
mov
xor
rol
stos
fucomp
jb
mov
mov
mov
out
out
jne
push
frstor
pop
popa
scas
je
ret
inc
push
mov
imul
xor
test
adc
adc
cmp
mov
(bad)
leave
cmps
cs
test
push
push
xor
popf
add
clc
push
mov
dec
mov
enter
test
repz
add
sub
les
adc
sbb
(bad)
adc
mov
xor
in
push
and
inc
dec
add
and
xchg
lea
adc
adc
or
xchg
cld
fs
sbb
adc
popa
sub
add
mov
xchg
push
not
mov
add
outs
repnz
mov
test
in
dec
xchg
ss
nop
fisubr
clc
xor
xchg
xchg
cmc
inc
icebp
push
iret
jae
cli
test
cmp
inc
mov
outs
xor
sub
push
int3
rol
in
gs
push
jae
mov
pop
retf
loope
shl
or
enter
fidiv
and
(bad)
dec
push
repz
inc
mov
into
xchg
push
dec
push
test
push
mov
jmp
fwait
xchg
cmc
je
adc
mov
jecxz
fsubr
fcmovnb
ret
sub
popf
loop
cmp
mov
push
imul
or
push
add
pop
adc
js
sub
retf
xor
retf
mov
(bad)
xlat
mov
dec
inc
add
imul
loope
icebp
mov
loope
imul
les
add
jle
retf
push
push
clc
ja
mov
fldenv
and
xchg
pop
jp
and
sub
(bad)
test
arpl
stos
daa
repz
cmp
push
or
loope
rep
dec
push
out
shl
loope
fild
(bad)
xor
mov
push
push
xor
mov
add
ja
cmp
xor
or
shl
cmp
clc
mov
cmp
cmps
or
mov
stos
mov
lock
pop
mov
ret
and
repnz
outs
sti
fadd
pop
xor
cmp
inc
(bad)
adc
add
sbb
fstp
pop
pop
inc
push
and
cmp
xchg
mov
mov
add
jae
outs
mov
sub
loope
jg
(bad)
aas
ds
scas
cld
in
mov
icebp
mov
pop
clc
(bad)
dec
mov
pop
sub
adc
fidiv
scas
sti
jo
pusha
sbb
pmaxsw
and
xor
rol
lock
(bad)
jno
(bad)
mov
or
ror
or
inc
or
loopne
test
rcl
push
jbe
sbb
sub
jge
test
pop
and
add
push
inc
adc
add
nop
loopne
mov
or
or
pusha
or
loopne
(bad)
and
loopne
mov
bt
cli
pusha
clts
popa
adc
adc
push
call
and
sar
loope
pop
rcr
adc
fimul
rol
push
jb
std
(bad)
adc
or
movs
sbb
add
mov
inc
and
mov
pop
sub
or
push
fidiv
sbb
loop
int3
mov
or
adc
vmread
sbb
add
loop
in
and
and
bound
mov
push
and
and
jbe
and
and
loop
mov
xchg
and
cmps
and
jp
es
adc
and
js
nop
jl
or
sbb
sbb
rol
aam
call
(bad)
jne
in
arpl
pop
fsubp
test
adc
pop
or
lahf
add
ror
or
sub
loopne
enter
inc
adc
or
loopne
fadd
add
or
or
fild
ds
sub
xchg
fstp
loopne
add
push
rol
nop
inc
adc
inc
adc
pop
js
add
inc
movs
inc
ds
inc
in
sub
and
fs
xor
sbb
add
rol
pop
xor
inc
mov
sbb
inc
add
pop
and
and
dec
(bad)
fs
dec
rol
and
dec
add
and
retf
push
add
in
dec
movs
push
or
inc
bound
aam
andps
adc
and
xor
jl
loop
pop
cwde
push
popa
ret
sub
les
push
mov
(bad)
adc
sbb
xchg
push
jmp
sbb
cmp
adc
movs
mov
mov
or
pop
or
arpl
and
add
add
out
push
push
and
mov
pushw
add
adc
ror
rol
adc
or
sbb
sbb
punpckhbw
jp
push
adc
add
cmp
add
call
fs
dec
add
cmps
jno
addr16
es
out
inc
push
in
cs
pop
inc
push
movs
adc
or
loopne
cmp
inc
xchg
push
ss
vphsubwd
pop
jbe
gs
ret
cld
inc
push
rol
dec
jecxz
lea
int3
inc
call
and
ret
mov
cmp
sar
and
cmps
mov
frstor
mov
push
ret
pop
leave
gs
call
repnz
pusha
pop
hlt
and
and
cmps
je
test
push
add
sub
add
and
or
inc
add
or
dec
stos
in
movs
fs
cmps
data16
add
add
or
inc
add
dec
es
es
ds
push
daa
jno
fs
cmps
dec
cli
and
fisub
adc
add
sub
push
cli
loopne
push
and
rol
pusha
sbb
mov
push
mov
out
inc
or
pusha
add
add
sbb
aaa
mov
or
adc
and
or
sbb
ror
in
clc
or
test
cmp
cmp
je
xchg
test
popa
push
in
arpl
xchg
test
sbb
xchg
loopne
inc
out
cwde
add
in
dec
add
push
out
scas
jp
add
or
ror
imul
inc
dec
adc
jl
mov
jmp
clc
test
inc
stos
outs
push
inc
xchg
add
rcl
jle
fs
push
int3
movs
xchg
sub
push
cmps
jno
and
inc
daa
xchg
pop
cmps
mov
inc
and
adc
clc
dec
pop
or
js
xor
jmp
xchg
std
test
jmp
mov
mov
sbb
pop
movs
loope
and
cmp
cli
inc
movs
out
adc
out
ror
ror
sub
ret
and
cdq
adc
cmps
popa
add
mov
inc
dec
add
and
stos
jmp
imul
dec
rol
jo
adc
ror
add
in
push
loop
shl
sub
in
sbb
push
imul
or
add
dec
imul
stos
data16
dec
dec
ror
test
sbb
cmp
sub
adc
adc
add
jl
dec
push
add
adc
pop
mov
xchg
push
test
stos
sub
and
and
into
imul
adc
fst
mov
aam
sbb
xchg
sbb
mov
add
in
inc
lods
lahf
xchg
(bad)
cmp
pop
out
add
push
mov
mov
add
ror
shr
sub
shl
ins
out
scas
pop
popa
(bad)
and
fist
retf
pop
mov
and
(bad)
into
jmp
or
add
and
jle
adc
inc
add
in
add
add
lods
idiv
add
add
sbb
add
jmp
mov
ret
mov
cwde
rcl
jmp
sbb
and
ficom
pop
sbb
xor
add
lock
sbb
in
mov
pop
xor
mov
imul
sub
sub
and
push
daa
and
add
and
and
in
sub
pop
push
adc
in
cmps
fdiv
out
scas
ret
ret
jmp
sbb
out
in
rol
add
pusha
cmp
in
jp
mov
jnp
sbb
sar
push
pop
shr
out
test
loopne
push
outs
mov
out
scas
push
fisubr
and
push
jo
mov
add
add
test
add
sub
sub
mov
cli
mov
and
inc
add
sbb
aad
inc
and
xchg
mov
mov
mov
lea
and
fisubr
pop
mov
jnp
addr16
inc
outs
outs
add
or
add
and
add
sub
scas
jno
pop
and
stos
mov
push
push
or
adc
mov
test
sbb
inc
fadd
out
mov
cs
outs
scas
xor
ror
add
and
and
push
icebp
adc
jno
pop
cmp
xlat
pop
stos
inc
xor
in
sbb
in
mov
jno
mov
into
es
call
mov
mov
and
call
sub
cli
push
mov
out
sti
(bad)
jno
scas
scas
outs
adc
sbb
aad
lods
push
jb
mov
and
aad
rcr
out
and
ror
loop
push
outs
mov
inc
repz
dec
sti
push
add
push
xor
add
add
cli
pop
mov
push
or
movs
test
in
lods
repnz
popa
mov
inc
shl
sbb
fidivr
fcomp
mov
out
lahf
jmp
call
ss
lahf
add
mov
out
push
daa
inc
adc
add
cmp
adc
in
push
push
adc
adc
stos
shl
xor
jne
test
or
xchg
add
jmp
inc
or
cmc
add
add
mov
addr16
dec
lods
inc
out
lods
sub
das
inc
stos
outs
sti
mov
add
outs
inc
xor
mov
outs
dec
outs
adc
aaa
shr
add
add
js
fcom
stos
adc
push
js
es
fiadd
inc
push
ror
ins
mov
stos
data16
scas
lods
scas
ret
mov
add
outs
add
es
scas
lock
cmps
das
jp
mov
inc
adc
jnp
sahf
(bad)
cli
pop
cmp
pop
jb
aaa
ret
xor
or
sub
stos
adc
inc
adc
xor
call
in
adc
mov
ds
cmp
xor
ret
ret
and
xor
test
mov
xchg
ltr
data16
or
sar
das
imul
fisubr
mov
(bad)
sub
out
mov
xor
call
sti
mov
mov
imul
ins
ja
sbb
loop
repnz
xor
dec
stc
xchg
repz
and
adc
ss
and
and
out
jp
adc
lea
jne
test
nop
xchg
in
es
scas
push
inc
mov
fstp
jg
or
bound
inc
mov
xor
pop
adc
dec
ins
ret
push
add
arpl
sbb
add
loopne
pop
scas
and
xchg
mov
mov
pop
daa
sar
icebp
push
loopne
jmp
cmp
pop
adc
test
ds
add
aam
sub
jnp
inc
das
pop
mov
add
xor
xchg
mov
inc
and
sub
icebp
(bad)
clc
sub
sub
aaa
inc
sbb
sar
aaa
inc
cmp
(bad)
ss
jbe
inc
aaa
jo
arpl
xchg
ret
xor
ret
mov
add
ss
(bad)
mov
xor
xchg
mov
add
fdiv
inc
adc
add
cmps
inc
mov
and
stos
or
jp
mov
aaa
add
mov
and
jne
dec
push
clc
icebp
pop
adc
add
mov
cmps
fisub
movs
and
ret
cld
pop
add
add
mov
test
inc
sub
test
adc
cmc
pop
repz
jb
add
jge
push
in
sbb
push
and
mov
stos
push
sti
mov
test
(bad)
sbb
jne
in
mov
shr
jmp
das
hlt
loop
adc
mov
add
and
xchg
mov
outs
xchg
add
sbb
add
adc
and
stos
sti
sub
mov
jne
test
sahf
xor
inc
cmp
jecxz
fbstp
sbb
cmp
mov
push
dec
(bad)
cmp
jb
push
xchg
fidiv
repz
fwait
jp
shr
ret
inc
fucompp
pop
pop
loop
adc
cmp
movs
jmp
cmp
cmc
cmp
cmp
mov
cli
mov
lea
push
adc
mov
aam
sbb
xor
repnz
repz
cmp
push
inc
sub
jle
call
div
inc
xor
call
mov
mov
aad
inc
inc
div
loopne
adc
dec
fisubr
dec
adc
test
xor
xchg
mov
or
clc
inc
add
sbb
dec
xor
push
mov
(bad)
or
sbb
bound
sbb
pop
rcr
sub
push
mov
or
icebp
inc
(bad)
or
push
push
lahf
and
pusha
inc
add
dec
add
sbb
inc
mov
pop
xor
imul
sbb
int3
add
mov
fld
pop
pop
aaa
or
loope
push
mov
or
ret
(bad)
push
adc
add
sbb
mov
mov
add
inc
sbb
ret
xor
sbb
add
cmps
dec
popa
xlat
cmps
std
mov
sbb
pusha
inc
or
xchg
sub
push
aad
inc
loop
add
mov
dec
adc
adc
add
xchg
sbb
push
and
and
movs
adc
mov
inc
mov
jno
leave
or
adc
mov
lods
mov
push
xchg
add
xchg
jae
or
dec
mov
fimul
jo
push
es
scas
mov
push
sbb
test
and
adc
mov
out
jmp
jp
add
add
inc
cdq
test
sub
inc
adc
mov
mov
mov
pop
mov
lods
mov
test
test
cli
retf
adc
jb
xchg
jbe
inc
test
dec
and
adc
sbb
das
xchg
and
dec
push
jmp
cmc
inc
push
cmp
fldenv
adc
xchg
cmp
jno
sbb
mov
pusha
pusha
or
and
push
jne
pusha
aam
sub
cmp
mov
in
ror
mov
jnp
cmp
aam
scas
mov
mov
push
add
or
fadd
nop
cwde
pusha
add
push
imul
pop
das
nop
dec
test
adc
call
push
add
outs
loop
ror
loop
daa
or
mov
sbb
ror
and
out
cmp
icebp
or
inc
push
push
add
mov
and
sbb
push
push
cwde
mov
adc
js
add
bnd
test
or
and
xchg
pop
inc
outs
dec
int3
mov
dec
add
mov
fs
dec
data16
push
xchg
push
aam
ret
or
les
arpl
cmps
mov
mov
int3
dec
add
inc
push
mov
imul
inc
xchg
or
pop
rol
push
sbb
in
mov
lock
mov
adc
cmp
dec
sub
pop
jo
(bad)
clc
cmp
fadd
(bad)
sub
mov
arpl
jnp
mov
cmp
pop
shr
or
sar
ror
(bad)
int
(bad)
pop
pop
cld
or
lea
xlat
add
sahf
sti
loopne
push
jl
rol
add
push
inc
stos
test
sbb
push
loope
ja
ins
mov
adc
add
cmp
inc
sub
mov
dec
ss
mov
pop
cld
mov
jo
or
cdq
test
inc
xor
pop
adc
arpl
hlt
xchg
cmp
adc
(bad)
mov
mov
add
push
mov
pop
int
adc
pushf
xor
mov
and
push
inc
pop
sub
test
(bad)
fdiv
jno
dec
mov
add
sbb
in
add
dec
imul
sub
adc
jb
mov
cmp
inc
adc
clc
add
aas
movs
retf
xchg
jmp
and
inc
pop
jo
in
lds
bound
add
xchg
pop
adc
or
inc
sahf
or
dec
add
add
dec
hlt
pushf
fcomp
push
xor
xor
xchg
out
outs
inc
inc
das
mov
ret
rcr
loopne
mov
sbb
rep
ins
jle
xor
sbb
stc
and
sub
arpl
ror
stos
push
call
mov
add
pop
loop
mov
ret
xor
lock
or
cmp
icebp
or
push
jae
xchg
sbb
loop
pop
mov
sub
sub
ror
inc
sub
mov
push
mov
ret
adc
cmps
jb
and
adc
addr16
cmp
sbb
sub
jecxz
adc
add
xor
pop
(bad)
loopne
inc
daa
loop
inc
clc
repz
iret
jae
movs
mov
mov
dec
inc
or
sub
call
arpl
or
push
add
or
ror
fs
push
inc
mov
popa
(bad)
int3
sahf
and
push
test
clc
rcr
add
ins
jl
mov
push
adc
and
jle
unpckhps
ins
pop
add
or
and
mov
cwde
mov
xchg
ficom
adc
int
call
(bad)
cmp
call
rcr
pop
lds
add
add
inc
and
jae
inc
sbb
and
test
or
push
jne
adc
cmp
inc
add
mov
cmp
xor
jle
push
adc
jmp
mov
dec
mov
scas
jecxz
div
sbb
loop
hlt
mov
scas
dec
inc
xchg
xor
js
adc
fild
mov
add
xor
mov
sub
inc
adc
adc
inc
(bad)
cmps
les
xchg
test
jmp
mov
inc
or
and
ror
out
adc
fsubr
jno
outs
push
ret
cwde
mov
xor
push
push
mov
ins
ror
dec
xchg
push
or
push
add
cmp
enter
lea
ss
int3
loop
das
in
cmp
or
and
ret
inc
xor
mov
mov
or
test
sub
retf
push
push
inc
xchg
lods
dec
adc
adc
dec
and
lahf
cmp
je
jecxz
jmp
ror
jle
fwait
loope
out
push
cdq
mov
xor
jg
or
mov
or
or
fwait
dec
inc
cmp
push
mov
movs
and
sbb
cdq
ss
add
adc
mov
pusha
ret
and
in
mov
xchg
add
loop
inc
sbb
pop
xor
adc
pop
lods
ret
xchg
xor
fs
aas
inc
test
adc
jl
lods
(bad)
adc
les
mov
sub
dec
dec
jb
js
dec
pop
sbb
jae
or
jmp
add
mov
add
fwait
out
jbe
push
mov
lods
ins
pop
push
nop
cmp
and
xor
popa
push
or
or
push
inc
adc
inc
cmova
into
adc
repz
sbb
jl
adc
lock
loop
pop
stc
enter
sbb
sbb
push
scas
ror
push
fidiv
mov
clc
int3
imul
sbb
jo
add
cmp
ins
sub
mov
test
cmp
adc
pop
ret
push
loopne
xchg
jl
shl
pop
mov
xor
clc
ror
lock
mov
add
or
push
mov
xchg
rol
mov
adc
dec
data16
shl
push
mov
pushf
push
ret
mov
out
xchg
jno
and
out
adc
loopne
xchg
in
inc
push
cmp
test
or
test
add
mov
dec
nop
ret
add
pop
add
add
pop
lahf
and
pop
jge
imul
test
adc
mov
std
in
jno
jl
pop
pop
stc
leave
push
(bad)
repnz
outs
jp
sub
sub
stc
hlt
movs
das
sub
mul
aas
xchg
jle
mov
cmps
(bad)
imul
or
popa
add
pop
cmp
(bad)
in
xchg
mov
sub
add
push
add
jnp
(bad)
pop
retf
call
shr
addr16
scas
push
into
out
das
ror
fsub
inc
sbb
fwait
push
rcl
ror
or
mov
aam
pushf
xor
adc
inc
imul
imul
add
add
int
call
mov
stos
(bad)
xor
or
and
pop
je
or
or
adc
pusha
adc
rcl
adc
sub
inc
add
outs
or
or
add
scas
(bad)
inc
push
add
or
or
adc
mov
add
jge
sbb
pusha
add
and
ret
push
or
nop
or
ror
adc
push
dec
adc
sbb
push
out
add
pushw
aad
add
add
loopne
psraw
jle
push
out
pop
stos
cs
jmp
(bad)
out
pop
and
push
gs
sub
rcr
sbb
movs
loope
scas
out
sahf
sbb
sbb
or
add
jmp
add
mov
imul
icebp
shr
cs
pop
sti
mov
push
inc
sbb
sbb
or
ror
add
hlt
es
inc
cmp
or
and
adc
repnz
mov
adc
jle
adc
push
or
adc
jecxz
or
jo
fdiv
or
inc
or
shr
jmp
rcr
mov
sub
push
push
mov
or
push
push
and
xor
mov
sbb
repnz
or
loope
(bad)
popa
sbb
inc
pop
shl
sbb
and
inc
pop
retf
adc
add
add
loope
inc
outs
sbb
hlt
sub
pop
jle
push
sub
cwde
push
call
sahf
and
mov
mov
or
or
xchg
xor
add
xchg
mov
mov
adc
push
mov
cmp
sbb
xchg
sub
shr
jb
jl
add
or
adc
popa
or
cs
xchg
cs
push
adc
cmc
jb
in
das
not
pop
jae
add
jb
sbb
sbb
sbb
adc
add
mov
xor
shl
mov
cmps
loope
xchg
add
xor
mov
dec
adc
inc
add
popa
push
loopne
and
sub
inc
sbb
mov
pop
and
sub
push
or
push
pop
inc
cmp
leave
adc
sbb
inc
inc
pop
arpl
sar
scas
adc
xlat
xor
int
mov
cmp
xchg
cmp
push
add
sbb
sar
xor
movs
sbb
push
xor
adc
push
hlt
pop
loope
mov
or
inc
pop
inc
(bad)
adc
es
push
adc
shl
out
lods
xchg
es
rcl
mov
inc
inc
je
push
sub
adc
push
push
inc
pop
aam
addr16
xor
rcl
pusha
adc
sbb
pop
pop
loope
mov
or
inc
or
call
push
sub
xchg
adc
movs
adc
ins
jb
xchg
and
sub
bound
sub
sub
std
loopne
cs
cwde
in
inc
mov
shl
or
add
loope
mov
paddb
xchg
out
std
pusha
sbb
popa
adc
inc
add
pop
xchg
push
(bad)
loop
sbb
push
in
or
adc
inc
or
xor
ret
adc
add
xor
shl
cmp
inc
pop
jae
add
push
push
adc
push
xor
in
int
xor
test
pop
loope
sub
push
rcl
sahf
add
sbb
add
add
adc
loope
stos
mov
call
sub
aad
sahf
and
push
xor
pop
adc
(bad)
lods
xor
sbb
adc
add
dec
pop
das
mov
aam
jecxz
psrad
in
xchg
or
je
jbe
xor
imul
mov
sbb
(bad)
jbe
push
shl
or
pop
scas
aad
xor
es
sahf
mov
movs
adc
int
push
xor
or
popa
push
dec
and
rol
sub
push
push
dec
push
inc
retf
xchg
dec
xor
stc
mov
in
sbb
sbb
scas
repz
arpl
popa
xor
sahf
and
xor
mov
arpl
push
pop
and
inc
push
test
ss
push
jns
sbb
dec
(bad)
adc
adc
jmp
fsubrp
(bad)
repnz
push
xchg
sbb
aam
adc
add
sahf
and
or
pusha
add
nop
xor
cmc
sub
sbb
inc
adc
adc
and
xchg
jb
pop
cmp
xchg
ds
pop
in
sbb
dec
sbb
adc
and
mov
cmp
loopne
mov
xor
ds
fstp
sub
inc
jbe
icebp
push
cld
mov
jo
or
ss
mov
call
pushf
xchg
xor
les
or
inc
lea
enter
mov
sub
cmp
push
in
sub
or
dec
jno
aad
outs
jb
jmp
or
pusha
jge
dec
mov
xchg
ins
jecxz
jbe
popa
ins
fnsave
push
out
xchg
pop
out
xchg
adc
xor
mov
add
or
inc
inc
inc
jecxz
pop
(bad)
and
ss
mov
movhps
cmps
mov
pop
xlat
adc
cmp
sbb
dec
add
or
ja
inc
adc
dec
aaa
js
test
mov
clc
ins
mov
dec
xlat
ja
jmp
push
push
imul
push
and
or
and
ror
or
jb
addr16
cmovp
xor
mov
push
add
in
bound
mov
jnp
mov
adc
sub
pop
arpl
mov
mov
gs
push
(bad)
pop
int
jle
dec
mov
push
jge
mov
jmp
xor
fdiv
outs
pop
add
test
adc
adc
xchg
dec
or
and
mov
mov
push
mov
cdq
xchg
sti
lea
inc
mov
xor
jns
mov
adc
aad
repnz
jle
mov
mov
or
call
jbe
or
adc
sub
add
inc
or
cmc
sub
fs
lock
push
pop
je
xor
sbb
jbe
cmp
push
xor
xchg
xchg
ss
fwait
mov
adc
sbb
sbb
cmp
push
imul
adc
mov
jbe
jns
xor
sti
sbb
xor
pop
sbb
cmp
and
mov
(bad)
adc
aam
xor
jbe
cwde
mov
dec
push
pop
inc
adc
fwait
das
mov
jg
fwait
movs
aam
push
mov
sbb
sub
aad
fnstsw
xlat
aaa
mov
pinsrw
xor
xor
cdq
add
cli
pushf
sbb
mov
pop
add
sbb
jns
cmp
mov
adc
stos
sbb
push
xchg
push
sbb
fcmove
xchg
cmp
add
mov
pop
test
push
lods
das
or
call
jb
cdq
test
sbb
cmps
pop
daa
or
repz
xor
or
cmps
aaa
sub
adc
shl
repz
loopne
cmp
add
push
mov
int3
push
test
pop
sub
push
and
xor
inc
mov
dec
mov
and
scas
pop
pop
arpl
test
popa
add
inc
adc
mov
pop
mov
fwait
mov
cmp
jp
mov
cmp
stos
and
push
adc
mov
sbb
popa
mov
sti
lss
mov
pop
in
and
ss
sub
inc
push
adc
dec
or
xor
call
fstp
adc
sbb
inc
mov
lds
jnp
add
lea
mov
sbb
mov
rcl
cdq
inc
pop
cmp
and
cmp
cmp
inc
sbb
das
jl
call
cmp
fadd
push
pop
lds
lds
lds
(bad)
arpl
pushf
(bad)
imul
outs
sbb
fistp
sub
adc
loope
ds
enter
push
add
pop
leave
xchg
fsubr
add
rcl
fmul
inc
add
adc
loope
shl
shl
adc
xchg
leave
ret
pop
leave
xor
adc
loope
xor
leave
sub
pop
add
pop
sbb
adc
mov
adc
adc
push
adc
add
in
into
or
arpl
mov
cwde
outs
mov
loopne
jg
xchg
cmp
retf
sbb
cmp
inc
movs
clc
cmp
mov
add
dec
add
sbb
retf
adc
rcl
add
and
aaa
cmp
ds
mov
popa
adc
jp
and
hlt
rol
aam
inc
push
add
pop
fst
xchg
sbb
inc
sbb
fsub
out
outs
bswap
or
add
inc
adc
mov
jg
hlt
pusha
popf
add
xchg
jns
add
popa
ucomiss
or
add
sbb
fistp
or
popf
fcomi
mov
popa
jge
push
pusha
nop
jnp
add
fwait
or
cmp
jbe
outs
push
add
pusha
loope
xchg
das
mov
mov
fbstp
(bad)
mov
pop
cmc
dec
(bad)
fistp
and
add
je
hlt
add
loopne
cmp
and
add
and
cmp
add
loope
enter
loopne
xor
int
fsubp
cmp
fist
sub
mov
sub
push
mov
lods
jns
add
and
arpl
dec
rcl
inc
adc
add
ret
jb
push
fstp
out
cmp
fs
xor
sbb
sbb
add
pushf
sbb
pusha
adc
std
std
hlt
jle
jmp
xor
dec
std
loop
and
jo
add
loop
xor
sbb
mov
fidivr
iret
mov
jg
in
and
ret
push
push
add
cmp
xor
add
adc
fst
shr
fidiv
or
mov
popa
aas
or
or
rol
(bad)
jmp
test
inc
xor
jg
jge
in
rcr
pusha
xlat
dec
mov
pusha
mov
inc
pop
adc
jbe
xor
shr
adc
popa
adc
jl
jo
adc
fmul
xor
pop
jge
mov
sbb
mov
aas
add
xchg
jg
sbb
neg
std
sbb
std
mul
retf
add
add
cmps
or
sbb
and
sbb
push
pop
lea
cld
or
movs
enter
call
xchg
sub
mov
add
xchg
cmps
inc
dec
mov
nop
or
adc
stos
inc
gs
shl
sbb
mov
mov
cmp
lods
jmp
ins
cmp
jmp
das
cmp
and
and
mov
inc
cmps
mov
shl
or
movs
std
aam
add
fwait
loop
in
in
and
add
jmp
xchg
sub
mov
mov
nop
inc
sbb
pusha
xor
mov
xor
jecxz
xchg
jmp
push
xlat
test
sbb
jns
add
loope
jge
add
adc
push
rcl
mov
sbb
sub
in
jmp
push
inc
dec
mov
push
mov
and
cmp
into
xor
repnz
hlt
jmp
mov
call
dec
sbb
leave
add
push
cmp
jno
push
das
nop
adc
out
xchg
sub
shr
inc
je
shl
inc
inc
add
or
xchg
mov
fidiv
add
push
dec
popa
lock
xchg
test
add
mov
xor
in
(bad)
sub
add
xchg
sbb
gs
sub
test
jle
cdq
or
dec
xor
in
inc
push
addr16
icebp
inc
xor
xchg
adc
cmp
add
mov
and
jne
xor
xchg
loopne
jge
add
xor
ret
add
mov
js
and
lods
mov
mov
xchg
call
mov
stos
xchg
cmp
add
or
mov
cmps
enter
xchg
dec
out
mov
push
mov
xor
into
test
or
push
stos
jg
push
addr16
or
fwait
mov
xor
mov
mov
and
xchg
loope
adc
dec
in
add
mov
jmp
es
pop
or
mov
int3
sti
scas
call
xor
pop
and
adc
xor
inc
fwait
adc
mov
cli
pop
call
cmp
adc
add
test
rcr
cmp
into
mov
pop
jbe
xchg
mov
add
pushf
xor
mov
add
retf
sub
sub
add
mov
pop
stos
and
fwait
fs
retf
sbb
add
mov
movs
les
or
or
cmp
xchg
or
xchg
inc
and
push
addr16
ror
hlt
jmp
popa
and
inc
pop
das
mov
jle
jo
dec
pop
test
ret
xchg
dec
mov
jg
add
icebp
(bad)
sahf
jg
cmp
stos
inc
inc
js
loopne
bound
adc
dec
xor
mov
mov
fisttp
add
push
inc
out
or
dec
hlt
movs
cmp
mov
cmp
lds
pop
fstp
(bad)
dec
ds
bound
cli
sahf
jno
push
fwait
or
jns
xor
or
jno
daa
inc
gs
scas
popf
fild
into
jmp
cs
rcr
mov
add
mov
cmp
rcr
xchg
dec
mov
xor
push
mov
mov
das
lock
test
add
mov
and
add
jb
add
not
inc
inc
sub
inc
ins
loop
push
ja
fbstp
or
rol
ja
pop
shr
movs
and
adc
mov
in
mov
add
imul
jmp
mov
mov
jne
and
ror
add
lock
dec
jns
adc
and
cld
mov
xor
add
push
xchg
mov
jmp
shl
dec
iret
add
mov
pop
lods
movs
mov
fsub
sub
or
mov
cdq
adc
mov
adc
clc
retf
push
jns
xor
cld
xor
lea
push
cmp
scas
inc
cmp
addr16
sbb
push
pop
xor
xor
lea
int
ret
movs
push
jae
std
dec
out
std
ret
int3
aam
mov
lock
xor
fst
add
scas
xor
cmp
mov
es
jae
je
jae
push
adc
mov
mov
or
jns
jle
dec
es
fadd
adc
xor
es
or
cmp
xchg
stos
xchg
mov
adc
or
rcr
and
ss
ins
pop
test
pushf
leave
push
ja
aam
or
xor
fwait
lahf
sbb
add
push
stos
push
scas
cmp
pop
jp
fisttp
xor
lods
in
stos
mov
pop
iret
mov
mov
stos
pop
fistp
push
repnz
dec
or
retf
inc
mov
mov
inc
add
scas
test
dec
xor
mov
sahf
and
mov
xlat
inc
cmp
xchg
cmc
or
push
fs
aaa
loope
cmp
cmps
das
jno
push
lods
loop
push
add
push
test
mov
aad
push
test
mov
sar
inc
popf
outs
jg
fsub
or
les
pop
fisubr
and
and
and
nop
loope
mov
or
or
inc
outs
dec
mov
and
dec
call
xchg
loopne
(bad)
push
inc
mov
jle
add
es
add
add
cmp
or
mov
pop
cld
loopne
inc
js
adc
popa
add
aaa
imul
(bad)
mov
cwde
arpl
sbb
(bad)
dec
adc
scas
sbb
dec
arpl
push
adc
std
dec
and
push
sub
jl
inc
sbb
ret
test
shr
stos
pop
adc
aad
push
hlt
xchg
test
dec
push
aaa
pusha
or
add
imul
cwde
(bad)
jl
xor
repz
ret
ss
int3
jae
rcr
cmp
pop
xchg
and
or
or
sub
mov
jle
les
dec
int
sub
loop
cmp
inc
iret
push
aam
adc
cdq
jmp
push
outs
js
rol
std
dec
iret
push
push
dec
shr
pop
xchg
and
xlat
test
add
mov
add
push
loop
xchg
mov
popf
in
inc
push
ret
cmps
jbe
or
jnp
shr
in
arpl
(bad)
div
xchg
cmp
jmp
jge
dec
and
adc
or
mov
mov
inc
jmp
jns
push
repnz
mov
int
sub
adc
(bad)
xor
mov
xchg
add
sub
scas
repnz
and
mov
jle
lock
or
inc
shr
inc
in
sub
and
and
add
and
jmp
popf
push
jne
sub
aad
mov
jmp
xchg
push
cmc
(bad)
jb
daa
mov
jb
xchg
add
jno
jle
jne
addr16
or
ret
jmp
mov
push
leave
test
inc
xor
jmp
daa
loope
push
or
call
shl
xor
aaa
pop
dec
adc
xchg
dec
inc
ror
push
std
loope
inc
cmp
jnp
and
mov
add
push
add
mov
test
jmp
idiv
jnp
add
clc
mov
outs
cld
ficom
cmp
outs
dec
sti
push
sbb
mov
jecxz
in
push
or
push
mov
inc
and
scas
jbe
push
into
mov
xchg
data16
add
and
out
jb
mov
add
sbb
mov
rol
adc
sbb
xchg
sub
cmps
inc
(bad)
pop
fs
jae
loop
inc
lock
gs
push
loop
sbb
mov
add
mov
jnp
push
add
xor
das
dec
add
inc
add
cmp
mov
push
cmp
inc
fadd
push
and
add
mov
ss
ror
loopne
fadd
popa
(bad)
push
fnsave
loope
dec
rol
inc
sbb
or
loop
pop
test
popa
inc
xor
cli
cmps
add
push
push
mov
inc
in
jb
xchg
xchg
adc
test
imul
imul
inc
mov
lods
push
inc
dec
adc
cmps
jae
dec
jae
xchg
repnz
aaa
jg
push
jnp
jae
jbe
cmp
pop
mov
xor
add
adc
and
test
mov
mov
inc
inc
scas
enter
mov
mov
mov
mov
mov
dec
mov
add
sub
aaa
or
(bad)
push
test
es
jbe
lds
cwde
es
fs
pop
jb
mov
jmp
xchg
and
dec
mov
jle
inc
mov
imul
xor
jns
popa
and
inc
mov
pop
mov
aas
daa
xor
push
push
test
adc
push
lahf
sbb
sbb
mov
mov
mov
cdq
xchg
push
test
pop
mov
or
sub
sub
dec
push
pop
sar
pop
gs
sub
lds
and
(bad)
jmp
add
inc
push
jae
(bad)
enter
xor
je
ficom
clc
ret
push
(bad)
sbb
clc
jns
pop
xchg
sub
sbb
ret
mov
push
mov
shl
mov
mov
xchg
jbe
mov
xchg
jne
xchg
jns
mov
cwde
adc
mov
xchg
mov
xchg
test
add
xor
dec
add
ja
push
leave
dec
push
arpl
in
pop
imul
xor
fimul
mov
ja
icebp
lea
adc
mov
movzx
add
pop
dec
sbb
jae
sbb
mov
ret
jbe
pushf
(bad)
stc
xchg
stos
mov
add
sub
xchg
and
xchg
mov
add
stc
add
sub
inc
dec
dec
push
sub
clc
aaa
xchg
js
add
xor
cmp
or
mov
out
dec
dec
mov
xor
call
jne
push
loopne
pop
cmp
nop
dec
rcr
dec
pushf
ret
or
mov
sub
jo
mov
sub
inc
and
inc
sbb
sbb
mov
mov
popf
(bad)
cdq
add
sahf
hlt
add
fiadd
repnz
mov
bound
inc
ss
pop
pop
xor
adc
cmc
mov
mov
sub
adc
jae
and
mov
mov
pop
popf
mov
cwde
int3
leave
test
pop
add
mov
pop
add
mov
push
nop
rol
mov
mov
jmp
pop
push
mov
add
cmp
add
cmps
inc
cmp
mov
test
mov
test
adc
mov
xchg
(bad)
sbb
pushf
and
int3
imul
inc
aas
add
jo
add
stos
je
stos
jo
push
push
or
add
(bad)
stc
cwde
sub
lea
sbb
movs
pushf
xchg
push
mov
xchg
inc
pop
ret
je
sahf
enter
movs
pop
fisubr
fisub
dec
cmps
gs
cmps
stos
mov
ja
pop
je
add
stos
out
call
stos
aas
inc
stos
sub
xchg
enter
dec
pop
pop
nop
cmps
fistp
pop
retf
dec
mov
add
imul
or
call
scas
xor
scas
lock
scas
sub
sub
scas
lods
push
imul
pushf
cli
xchg
fcomp
cwde
fistp
pop
sub
retf
cmp
xchg
mov
gs
inc
retf
mov
ficomp
test
mov
mov
push
js
cmp
lods
mov
call
pushf
mov
cmps
inc
mov
mov
scas
and
mov
add
mov
imul
rol
mov
xor
fwait
and
pushf
xor
(bad)
xor
or
fs
stos
mov
adc
mov
dec
test
retf
and
fld
mov
mov
jp
push
sti
pushf
cmps
or
stos
jmp
mov
and
rol
xor
mov
fild
je
add
add
sti
mov
sbb
mov
loope
push
mov
add
add
sub
sub
retf
mov
loopne
fmul
mov
cmp
sub
mov
shr
call
mov
fwait
mov
cmp
cmp
pop
push
movs
or
fwait
mov
mov
jns
adc
stos
scas
dec
scas
repnz
mov
inc
xor
mov
add
mov
pusha
add
cmp
xor
cdq
sub
add
retf
add
add
push
add
in
ret
cmp
mov
cmp
ret
dec
pushf
les
les
lds
lds
les
lds
sub
pop
lods
lds
fadd
rol
fmul
in
ret
cmp
ret
dec
cld
ret
pop
dec
mov
dec
or
aas
cmp
inc
cmp
cmp
dec
pop
into
and
add
call
imul
mov
call
add
leave
inc
mov
and
and
sbb
cs
or
mov
lock
mov
sub
ret
and
jmp
cmp
pop
push
loopne
inc
loopne
shr
dec
int3
lds
mov
les
loopne
int3
in
int3
rcr
and
int
int3
leave
lods
int
ins
or
in
int
in
int3
and
adc
inc
pop
ret
sar
call
jo
mov
sub
sub
stos
imul
push
mov
jmp
sub
add
imul
or
rcr
add
ret
add
leave
cwde
mov
retf
lds
ret
inc
repnz
add
cmp
add
add
rol
popf
ror
shr
xor
xor
shr
popf
shl
jge
ins
loopne
cmp
cmp
pop
loopne
ins
jo
dec
fld
dec
lea
(bad)
aam
dec
aam
sub
aad
std
shl
rcr
aad
ins
aad
pop
shl
adc
xor
mov
fwait
xchg
push
jmp
cmps
ins
cmp
fisubr
add
mov
mov
cmp
or
or
ror
sub
test
jmp
sbb
push
rol
add
nop
add
add
fisubr
fisubr
fidiv
fidivr
(bad)
jo
es
daa
jo
daa
loopne
or
fcmovne
lods
fmul
int
int
(bad)
fcmovne
jge
lods
dec
(bad)
fidivr
add
rol
pusha
(bad)
movs
nop
mov
inc
movs
adc
stos
jae
(bad)
push
dec
cwde
push
sbb
in
stos
jmp
pop
hlt
jp
popa
pop
mov
adc
and
pop
push
add
add
mov
mov
cwde
or
mov
mov
sti
add
push
pushf
pop
ret
push
add
push
rol
and
mov
add
scas
loop
mov
das
push
jecxz
into
loop
jle
(bad)
or
or
add
push
add
adc
add
add
jo
(bad)
jge
xor
add
in
cs
dec
jecxz
into
loop
add
push
jecxz
(bad)
loop
sahf
add
add
push
pusha
(bad)
in
test
pop
movs
or
mov
pop
scas
pop
and
mov
or
jl
add
add
ror
pop
ins
xor
add
and
arpl
add
add
test
xor
fild
add
cli
retf
or
dec
inc
xor
xor
dec
inc
fimul
jmp
test
in
out
jmp
(bad)
add
push
add
scas
add
add
add
add
push
add
add
jo
cmp
daa
fsubp
dec
into
fld
in
sar
in
mov
aad
in
sub
in
fdivr
mov
add
pusha
(bad)
dec
nop
mov
jns
fnstcw
pop
or
mov
cmp
push
ret
and
mov
stos
rol
or
aaa
pusha
or
call
out
lock
loopne
imul
mov
add
test
fucompp
pop
add
ror
cmp
add
or
retf
pop
lock
add
mov
adc
add
outs
add
dec
add
add
outs
add
add
add
aas
add
pop
push
lock
in
jle
fld
in
test
in
shr
sub
jmp
addr16
add
xchg
shr
mov
shr
mov
mov
cwde
lods
ror
retf
add
scas
loopne
push
icebp
bswap
call
add
inc
inc
icebp
or
loopne
push
jmp
mov
adc
sar
add
jge
pop
psubd
(bad)
hlt
or
add
mov
es
repz
add
dec
add
add
push
pop
aaa
jg
adc
add
pop
add
add
push
add
add
in
fcmove
cld
stos
lods
cmc
push
(bad)
in
push
ds
aad
jmp
inc
mov
gs
jmp
push
lahf
pop
mov
jle
call
mov
jmp
mov
test
push
scas
clc
mov
inc
dec
xor
add
and
adc
inc
fs
xchg
or
enter
inc
ins
fadd
mov
call
dec
sahf
inc
cdq
push
in
xchg
add
or
loopne
dec
xchg
push
test
js
xchg
and
inc
push
call
jl
inc
loopne
xchg
and
nop
push
and
pusha
inc
and
add
push
mov
ror
push
or
mov
jmp
add
bound
adc
les
mov
cmps
add
jp
repnz
add
or
inc
pop
pop
mov
lds
push
call
nop
(bad)
rol
xchg
daa
dec
pop
and
ins
ins
cdq
mov
aaa
enter
or
sar
sbb
jl
push
adc
mov
inc
shl
and
xchg
lock
ret
add
mov
ds
push
in
jecxz
mov
mov
sbb
push
fstp
xchg
in
enter
faddp
mov
sub
add
pusha
or
add
cmp
mov
dec
ret
dec
push
inc
mov
test
stos
stos
or
dec
or
mov
xor
mov
mov
loope
das
bound
add
add
mov
mov
(bad)
or
jmp
sar
inc
mov
retf
dec
mov
dec
and
add
sub
gs
dec
sub
or
cmc
bound
cld
inc
aaa
fdivr
lea
or
pop
push
push
scas
add
test
mov
inc
or
mov
and
jbe
inc
mov
and
add
xchg
arpl
and
sti
bound
aas
dec
icebp
mov
push
dec
test
and
xor
push
add
jb
inc
add
sbb
mov
mov
add
dec
xor
test
dec
mov
mov
push
inc
xor
sub
enter
sbb
mov
das
popf
jb
icebp
scas
push
xchg
xchg
(bad)
outs
mov
pop
dec
xchg
xor
int3
int3
and
rcr
push
fsubr
xor
les
int
(bad)
lods
popa
or
jecxz
jae
jecxz
mov
loope
adc
add
cmp
or
adc
push
fsub
shl
add
jl
dec
xchg
mov
sub
imul
mov
add
xor
xchg
cmp
mov
push
popa
loopne
push
(bad)
pop
pop
adc
ret
das
and
add
lds
push
fimul
nop
or
xor
inc
mov
cmp
fnstenv
mov
or
pop
mov
push
in
imul
add
sbb
push
xor
add
xchg
fs
push
push
retf
inc
lea
xchg
aam
mov
push
mov
and
into
cmp
xchg
dec
ret
into
xor
cld
xrelease
mov
add
cmp
cmp
xor
and
popf
fadd
mov
pop
pop
rol
mov
xchg
mov
mov
inc
or
nop
sbb
sahf
(bad)
hlt
mov
loopne
lods
fcmovb
nop
jp
test
push
jmp
test
test
cmp
inc
stos
push
cmp
add
scas
dec
lock
mov
mov
dec
inc
and
add
mov
ins
aas
xchg
fwait
(bad)
sbb
lea
push
cmp
xor
sbb
ror
movs
(bad)
and
inc
xchg
and
stos
shr
cmps
loop
and
cs
fadd
cwde
jecxz
cmp
test
mov
(bad)
adc
aaa
adc
pop
arpl
mov
mov
push
pop
test
cs
cmp
and
hlt
pop
push
pop
adc
xor
dec
push
cmc
adc
add
daa
add
jge
mov
dec
rcl
adc
add
jmp
pop
push
dec
xor
jl
pop
mov
jbe
and
push
ins
mov
addr16
pop
pusha
leave
add
inc
mov
or
or
adc
lds
dec
add
(bad)
sti
sbb
adc
add
dec
add
mov
dec
mov
add
shr
inc
adc
in
retf
pop
mov
sub
adc
mov
popf
mov
cmp
or
jb
inc
mov
add
pop
push
xor
inc
cmps
mov
aaa
and
pop
inc
in
(bad)
push
daa
and
or
inc
cmp
hlt
(bad)
push
sti
ret
sub
or
call
xchg
mov
hlt
dec
inc
retf
prefetchnta
or
clc
add
and
mov
mov
pop
popa
out
add
sahf
push
call
mov
out
add
push
mov
adc
mov
lds
push
lock
jl
mov
xor
pop
sub
lods
mov
mov
pop
jo
lods
and
lds
imul
jne
dec
sbb
pop
push
nop
and
inc
ja
xor
mov
xchg
push
add
mov
dec
jo
rol
scas
call
test
cwde
jne
mov
loopne
test
dec
and
xchg
rcl
into
mov
pushf
sbb
mov
loopne
aaa
clc
rcr
push
xchg
loop
cmp
pop
sub
cdq
ds
xor
sbb
pop
add
sbb
out
mov
xor
dec
adc
aad
or
inc
adc
sbb
push
nop
push
bound
rol
dec
add
pop
mov
adc
add
dec
shl
movs
cmp
nop
push
xchg
in
shl
add
jmp
(bad)
cmps
inc
test
lea
ss
fucomip
ror
mov
inc
adc
pop
outs
nop
jns
cmp
dec
ret
add
fs
rcr
(bad)
aad
cmp
inc
xchg
mov
aam
scas
arpl
fwait
inc
jmp
inc
pusha
sbb
popf
movs
and
xchg
fucomp
or
jg
inc
cmp
xor
or
and
les
into
adc
or
stos
add
mov
mov
push
mov
fiadd
in
ror
cwde
ror
sub
inc
mov
jmp
inc
popf
xor
mov
sar
jmp
js
rol
mov
dec
popa
jp
xor
es
push
cmp
cs
mov
mov
dec
das
cs
dec
and
cmp
data16
xchg
jo
test
xor
imul
add
cmc
fadd
iret
sub
fsub
jae
(bad)
xor
pop
ret
xor
xchg
movs
dec
cmps
pop
cld
sub
jo
aas
(bad)
rep
(bad)
fld
add
add
in
test
xchg
in
pop
inc
repnz
adc
hlt
mov
aas
retf
pushf
add
imul
and
or
xor
and
js
es
retf
and
sub
pop
stc
dec
mov
inc
xor
adc
loopne
xor
xchg
adc
jb
sub
add
jge
pusha
add
inc
adc
mov
int3
xor
xchg
push
mov
push
push
jp
or
jmp
lods
add
pop
push
pop
pushf
cdq
pusha
and
loopne
ja
pop
or
mov
leave
jno
and
adc
cmp
mov
inc
fdivr
loope
mov
inc
retf
mov
dec
jmp
dec
inc
push
add
jge
fld
inc
xchg
mov
popa
test
jo
pop
adc
xchg
pushf
pop
ficom
mov
jmp
lds
arpl
pop
enter
prefetch
xchg
xor
fistp
test
jmp
sub
and
inc
push
and
jns
not
and
mov
test
sub
and
or
loopne
sbb
fucomp
jmp
xlat
sbb
mov
add
dec
add
dec
cmc
and
ret
and
cmp
push
sbb
scas
inc
inc
and
psubq
mov
add
jecxz
dec
mov
pop
cmp
shr
mov
imul
or
mov
jmp
xchg
jmp
or
fidivr
mov
mov
aaa
rcr
mov
pushf
add
in
adc
test
in
or
cmp
adc
push
xchg
cmp
sub
test
je
xor
sbb
add
cmp
push
pusha
mov
imul
dec
lea
(bad)
adc
cmp
push
in
pop
or
mov
test
mov
cmp
cmp
rol
push
aas
cmc
dec
add
and
lods
add
aas
or
icebp
call
sub
rcl
mov
pop
rcr
adc
pop
or
loop
stos
icebp
or
or
sahf
mov
cmp
cmp
jnp
sbb
add
lock
sahf
jecxz
xor
or
cmp
pop
hlt
xor
add
clc
shl
pop
adc
test
push
les
xor
imul
cmp
fwait
ret
ret
and
cmp
add
cmp
sbb
xor
push
in
add
cmps
cmp
xchg
outs
mov
mov
xchg
jl
test
mov
dec
add
sbb
dec
popf
inc
xchg
adc
cmp
inc
cld
cmp
jmp
ss
mov
hlt
or
loopne
push
test
or
mov
mov
dec
cmp
shl
or
adc
or
sahf
fisttp
lds
aaa
or
das
inc
and
retf
or
xor
sub
xor
test
ss
or
or
mov
shl
or
stc
nop
imul
mov
xor
outs
mov
or
sub
sbb
xchg
test
loopne
adc
add
adc
ins
adc
fdivr
mov
sbb
cmp
pop
jmp
or
cmp
sub
pop
sbb
mov
and
and
inc
xchg
cld
popf
xchg
add
xrelease
mov
cmp
mov
push
mov
inc
lds
dec
lods
push
add
add
push
push
push
pop
aam
and
retf
pop
mov
jp
xor
pop
movs
mov
and
mov
call
lock
setns
sbb
mov
mov
std
or
mov
mov
retf
lods
bound
cwde
mov
nop
test
mov
test
in
(bad)
xor
les
mov
add
dec
retf
dec
sub
and
cmp
mov
sbb
ret
sbb
fiadd
loopne
(bad)
je
xchg
push
cmp
mov
adc
or
and
jns
adc
(bad)
sbb
adc
dec
inc
push
xor
sbb
cdq
sub
sub
das
retf
push
sub
pop
lods
sub
sbb
cmp
out
sbb
repnz
adc
mov
sahf
or
add
aaa
mov
stc
stos
scas
inc
mov
add
popf
loop
and
cmp
nop
popf
xchg
jl
stos
inc
icebp
pushf
xchg
add
inc
inc
xor
mov
test
pushf
adc
push
dec
inc
push
or
shr
or
sbb
fwait
call
lds
loopne
out
xor
jl
mul
je
xor
(bad)
in
sar
shr
movs
push
push
xor
das
and
mov
xchg
mov
and
pop
adc
sbb
movs
setno
mov
scas
movs
(bad)
mov
sahf
aas
pop
mov
(bad)
(bad)
mov
add
cmp
in
ret
int
stos
test
mov
cmp
xchg
xor
or
push
(bad)
cld
mov
sub
add
or
aas
inc
mov
dec
sbb
or
call
pushf
jns
push
lds
sbb
out
add
mov
pop
push
mov
add
sub
arpl
xchg
or
cmp
mov
sbb
or
movaps
xor
or
rol
pushf
sub
add
mov
xchg
cdq
fisttp
mov
and
and
mov
or
jne
in
add
add
cmp
or
and
pop
aad
rcl
or
enter
or
sbb
add
xchg
pop
xlat
movs
fst
and
and
sahf
lds
and
(bad)
fnsave
in
inc
mov
mov
in
jb
into
lahf
ins
(bad)
shr
pop
jecxz
add
inc
pop
stos
mov
push
add
cmp
cmp
pop
mov
or
shl
jmp
fcomp
pop
inc
mov
or
inc
xchg
addr16
ds
or
xchg
mov
cmp
sbb
cmp
xchg
(bad)
dec
or
cwde
sub
popf
xchg
ins
mov
leave
or
jge
mov
dec
stc
mov
aad
sub
jg
pop
pop
inc
fisttp
push
cwde
adc
in
data16
sahf
mov
movs
call
adc
add
jns
cmp
loop
sahf
push
add
cmp
jle
and
and
inc
sub
out
add
or
xor
in
or
xor
test
in
hlt
cld
adc
xchg
cmp
ret
cmp
rol
nop
adc
stc
popf
fild
fmul
mov
xchg
adc
add
and
(bad)
in
stos
mov
test
or
stos
xor
add
gs
icebp
fmul
fisub
pusha
dec
outs
xchg
dec
mov
jp
adc
inc
cwde
jno
sub
push
in
jb
push
jle
xchg
loopne
adc
push
cmp
test
cmp
imul
bound
rol
push
les
call
push
xchg
adc
xchg
sbb
sbb
cmp
cmp
add
add
xor
inc
sub
std
sub
mov
cmp
ds
ss
sbb
cmp
(bad)
call
xor
cmp
stos
pop
or
xor
mov
dec
cmp
and
add
jno
jmp
mov
nop
xor
or
push
inc
test
mov
dec
aad
mov
or
mov
das
mov
sti
push
mov
imul
push
jmp
adc
fstp
inc
or
test
cwde
mov
out
or
scas
test
fbld
mov
inc
inc
out
aaa
cmps
jns
and
cmp
loope
push
cmp
pushf
sub
and
jae
dec
imul
and
jb
sub
push
and
psubusw
scas
imul
adc
cwde
mov
mov
inc
dec
mov
sbb
mov
cmp
add
test
cmp
lea
pop
and
cmp
fxch
(bad)
jmp
cmps
test
or
rcl
loope
pand
outs
mov
mov
mov
rol
inc
xor
mov
bound
mov
or
dec
lods
data16
test
imul
and
and
ds
retf
mov
mov
mov
pop
mov
(bad)
out
push
xchg
repnz
push
fiadd
push
adc
ins
mov
add
mov
mov
cmp
inc
mov
inc
dec
sbb
inc
sbb
fs
inc
mov
rcl
add
xor
add
lock
test
add
adc
clc
xor
pop
call
fiadd
ins
inc
add
push
adc
in
iret
repnz
cs
sub
out
pushw
cwde
pop
adc
das
sar
sub
loopne
mov
push
and
(bad)
lods
into
adc
mov
sbb
xor
xor
sub
cmp
add
mov
dec
mov
(bad)
mov
dec
mov
test
push
push
and
add
fmul
cli
fsubrp
mov
or
or
jne
pop
inc
or
jmp
test
mov
test
or
add
xchg
out
adc
pop
xchg
test
test
jbe
mov
imul
iret
jbe
rol
dec
cwde
pop
fistp
gs
pop
jo
test
add
pop
add
add
xchg
idiv
ja
mov
jnp
mov
mov
aaa
xor
test
inc
out
mov
push
clc
stos
fsubr
push
fs
repz
movs
(bad)
xor
mov
xchg
mov
adc
inc
test
sbb
and
xchg
push
dec
sbb
xor
pusha
leave
ret
pop
lock
sar
movs
or
call
mov
mov
or
sub
data16
push
and
adc
dec
and
cmp
push
bound
mov
xor
aaa
mov
cld
dec
test
push
nop
add
mov
pop
sbb
test
cmp
cmp
or
ds
shl
push
xor
pop
fadd
add
js
sub
add
pop
jb
sub
push
loopne
retf
xlat
cld
and
push
inc
jp
nop
jmp
fdiv
and
lock
ret
repz
aaa
pop
inc
inc
scas
xchg
retf
lds
dec
pop
cld
lds
stc
lds
or
das
loopne
or
lods
jmp
xchg
(bad)
jecxz
push
aam
call
push
fdivrp
sub
mov
cs
or
dec
mov
dec
add
xchg
push
dec
cmc
mov
dec
cwde
push
add
adc
test
pop
add
sbb
cmp
xchg
xor
or
add
jo
push
mov
adc
mov
xor
or
inc
xchg
cmp
fld
inc
add
xchg
mov
dec
xchg
sub
mov
xchg
retf
dec
xor
or
push
sahf
cmp
outs
ret
xchg
je
jnp
int
mov
aam
fldenv
jne
aad
ins
inc
sub
add
cmp
pop
pop
or
sets
inc
cmp
and
cmp
imul
pop
mov
dec
push
scas
pop
add
and
cmp
sub
loope
inc
mov
dec
sub
icebp
shl
sbb
push
(bad)
cmp
pop
(bad)
cmp
lahf
dec
mov
sub
and
dec
ins
adc
push
clc
inc
test
cmp
(bad)
test
adc
loope
lock
jmp
and
sub
pop
mov
add
push
push
or
cmp
sub
rol
and
mov
xor
add
or
and
adc
sbb
fsub
or
clc
xor
adc
nop
fs
add
xchg
retf
jo
test
bound
mov
inc
xchg
mov
inc
and
int
arpl
xor
mov
leave
shl
adc
loop
ret
cdq
test
or
loop
xchg
mov
ins
or
and
pop
dec
xchg
adc
ficom
xchg
jo
pop
push
ror
inc
shl
push
push
icebp
in
pushf
mov
xchg
popa
mov
dec
adc
xor
or
mov
xor
push
sbb
mul
inc
outs
es
and
lds
adc
sbb
mov
cmps
daa
pop
sysenter
and
xchg
add
dec
add
add
lea
xchg
mov
sbb
add
mov
push
loopne
sbb
or
push
mov
cmp
sbb
inc
ds
fs
mov
xchg
xchg
cld
popa
push
pop
mov
push
xchg
mov
and
cmp
push
push
aam
mov
inc
xor
hlt
add
and
push
sahf
push
ret
fs
xor
pop
imul
imul
cwde
fwait
jp
pushf
ficomp
pop
push
jno
add
sub
xor
ret
gs
dec
jbe
retf
int3
sub
(bad)
in
call
hlt
pop
and
leave
cmc
fsub
lods
xchg
inc
adc
inc
ret
nop
jo
and
ins
mov
lods
mov
add
retf
adc
sbb
rol
sbb
enter
and
frstor
xor
arpl
jno
or
inc
loop
mov
(bad)
test
pop
add
push
mov
add
mov
rol
leave
sub
ret
dec
jecxz
sbb
iret
xor
fsub
pushf
dec
les
scas
inc
pop
dec
data16
(bad)
xchg
or
push
or
mov
sbb
sar
jbe
push
xor
xor
cmp
push
cmp
mov
ret
addr16
and
adc
adc
aam
mov
xor
pusha
ins
push
inc
or
loopne
mov
add
iret
dec
pop
ror
pop
dec
push
add
xchg
and
sbb
and
loopne
xchg
jle
cmp
and
and
dec
add
or
lahf
mov
daa
or
dec
ret
or
nop
xchg
mov
sbb
xor
int
in
and
or
adc
push
mov
mov
adc
aam
inc
inc
push
(bad)
cmp
les
ins
sbb
and
mov
add
lea
stos
add
mov
movs
add
and
add
add
mov
les
fisub
jg
add
push
or
movs
lea
jae
loopne
inc
add
xor
push
sbb
lds
pushf
nop
push
sub
push
or
pop
jmp
xchg
mov
sbb
nop
inc
pop
sub
add
push
stos
nop
and
les
cmp
mov
test
ror
xchg
aaa
cmp
imul
clc
ret
xchg
les
push
inc
or
pop
add
test
cs
adc
repnz
int
push
mov
pop
dec
mov
mov
fsub
pop
loop
stos
sbb
push
add
sbb
call
mov
adc
adc
add
add
mov
adc
(bad)
push
xchg
sbb
xchg
pop
sub
jae
or
add
jne
dec
sub
inc
or
gs
mov
sub
xor
es
add
rol
inc
sbb
add
add
dec
sbb
push
push
add
inc
nop
test
jecxz
pop
and
ss
jae
call
mov
sub
fadd
inc
and
(bad)
push
and
iret
dec
xchg
jno
inc
add
pop
mov
adc
push
pop
add
test
inc
mov
sbb
nop
or
cmp
or
pop
adc
adc
dec
and
mov
ret
pop
cmps
ret
daa
daa
fs
cs
adc
mov
xor
and
adc
shl
add
jo
arpl
call
mov
add
(bad)
rol
ror
inc
sbb
jo
in
outs
arpl
mov
inc
mov
test
fstp
(bad)
hlt
pop
push
mov
xor
hlt
adc
adc
sbb
adc
rol
lea
imul
add
je
out
gs
data16
push
lds
bound
xor
loope
jp
add
inc
or
icebp
mov
adc
mov
pop
mov
mov
cmc
stc
iret
jle
lock
add
(bad)
dec
repz
add
sbb
and
push
ins
mov
inc
js
dec
inc
add
je
sbb
or
lea
pop
leave
push
outs
add
adc
sbb
sbb
xor
daa
dec
mov
cs
add
jo
or
jo
sbb
dec
jo
movs
jno
stc
add
scas
ror
pop
cmp
imul
(bad)
loopne
dec
sar
sub
push
ret
movs
pop
btr
or
inc
dec
test
lock
or
loopne
jno
jmp
and
pop
call
jno
mov
mov
repnz
dec
or
jae
jmp
shr
mov
xchg
inc
xchg
cmps
mov
aaa
adc
lea
retf
xchg
add
push
ja
push
int3
sbb
fadd
sbb
mov
call
test
and
push
rol
dec
cld
loop
dec
loopne
cdq
pushf
sub
jle
cs
mov
mov
push
pop
jl
adc
imul
daa
fisttp
std
xor
adc
dec
add
mov
mov
das
jle
adc
mov
retf
pop
push
sbb
adc
call
bound
ret
mov
jge
push
rol
adc
sbb
ficom
and
mov
fs
pop
inc
push
xchg
push
xchg
fimul
stc
sbb
pop
push
mov
mov
aam
and
jno
add
mov
pop
adc
xchg
je
jecxz
sbb
out
movs
mov
add
and
mov
loop
ds
mov
enter
mov
adc
popa
loope
cmp
loopne
dec
repnz
jne
das
(bad)
(bad)
fidivr
mov
dec
jl
pop
jg
retf
sbb
fstp
add
push
jnp
pop
aas
push
(bad)
fistp
hlt
mov
jle
ret
pop
push
(bad)
std
dec
push
mov
div
pop
std
in
(bad)
mov
push
sbb
(bad)
cli
aas
add
cli
out
jg
lock
(bad)
cmc
pop
lods
add
nop
inc
pop
xchg
pop
scas
pop
pop
xor
(bad)
inc
add
ret
and
adc
inc
inc
clc
push
pmaddwd
sbb
pop
sbb
ss
xor
cmp
addr16
dec
push
sbb
add
jo
ss
pop
xor
mov
pop
dec
ror
in
enter
add
cwde
pop
pop
out
push
jae
pop
pop
nop
adc
xor
add
sbb
adc
adc
xor
call
test
sbb
sbb
or
sbb
xor
pop
(bad)
mov
or
out
loope
(bad)
mov
mov
and
mov
(bad)
and
jns
xchg
sbb
pop
push
and
and
loop
jp
adc
sub
xchg
xor
call
jp
pop
adc
pop
and
cs
inc
lods
pop
push
add
adc
inc
adc
inc
sbb
fistp
paddusb
imul
or
mov
mov
sub
dec
adc
push
mov
test
jo
xor
mov
add
sub
in
mov
aam
test
pop
mov
ret
jmp
add
rol
or
add
mov
adc
loop
cmp
dec
in
inc
stos
test
sahf
pop
cmp
inc
movs
inc
jmp
rol
dec
xchg
fs
jle
dec
and
sub
sub
sub
push
loopne
add
add
mov
inc
mov
push
push
and
cmp
dec
test
hlt
inc
push
push
fs
inc
adc
inc
pop
pusha
add
mov
lods
mov
sub
add
inc
outs
jmp
pop
mov
or
gs
lods
popf
jl
and
fadd
sbb
add
dec
inc
cwde
xchg
or
call
add
test
dec
and
xor
daa
pusha
dec
ret
ins
arpl
rcl
xchg
or
xor
mov
xor
inc
sub
sar
sahf
call
ins
push
push
test
adc
inc
adc
(bad)
pop
je
inc
add
or
add
or
sub
pop
pop
in
movs
outs
mul
push
mul
mul
outs
jmp
rcl
jbe
sub
outs
mov
adc
xor
sub
sub
jmp
xor
je
out
and
inc
jbe
cmps
jns
daa
jl
out
mov
add
daa
adc
addr16
add
lock
jmp
cmps
ins
jbe
sbb
dec
jmp
aas
xor
sbb
inc
dec
adc
jo
push
fadd
sbb
cs
pop
scas
sbb
clc
push
or
add
or
les
inc
mov
sbb
inc
or
not
and
push
mov
cdq
push
or
inc
test
hlt
sbb
jmp
je
shl
out
and
cdq
fnstenv
push
pop
clc
inc
sbb
add
push
cmps
ret
sub
cld
and
adc
inc
inc
adc
jo
sahf
mov
adc
sbb
fucompp
fwait
add
ret
adc
add
adc
adc
sbb
mov
imul
pop
jo
movs
inc
stos
movs
dec
iret
movs
bound
cmc
je
add
xchg
push
jle
xchg
push
sub
or
clc
push
xchg
jno
jecxz
shl
sub
inc
pmaddwd
das
nop
pusha
nop
or
inc
or
push
and
or
inc
rol
xor
add
mov
aam
ficom
pop
ret
or
dec
inc
cmp
sbb
cs
and
fist
mov
inc
push
clc
adc
js
rcr
call
inc
xor
ret
ret
fld
and
sbb
push
ret
rol
fsubr
ret
(bad)
jp
(bad)
(bad)
jmp
outs
sub
test
ins
ret
leave
outs
in
xor
imul
ins
mov
stos
cmps
shr
fadd
sbb
or
rcl
add
adc
sbb
call
rol
sub
adc
pop
or
rcr
inc
jl
retf
aaa
pop
mov
nop
inc
mov
in
rcr
xor
ret
ss
cmp
shl
xchg
icebp
jl
dec
add
int3
xchg
sbb
add
fadd
call
sar
sub
sahf
mov
pop
cwde
xor
mov
adc
leave
xchg
or
les
out
mov
lods
js
ret
test
mov
adc
adc
sub
inc
sub
cmp
es
fmulp
pop
out
jmp
outs
in
retf
shr
fisubr
xchg
nop
or
mov
mov
ror
loopne
hlt
sub
outs
sub
scas
out
pop
ror
sub
(bad)
rcr
jl
lods
fiadd
in
pop
xchg
dec
scas
inc
hlt
adc
jmp
xor
clc
inc
stos
xor
ret
cmp
test
cmps
xor
ss
cmp
ret
ss
outs
test
or
add
shl
jb
test
push
sahf
cwde
jne
pop
nop
inc
pushf
fisttp
dec
hlt
inc
push
loopne
js
sar
test
aam
push
ds
outs
js
shl
add
inc
sub
inc
sbb
or
jmp
pop
(bad)
enter
lock
jo
(bad)
cli
mov
loop
into
adc
add
inc
add
adc
mov
sbb
out
sbb
les
push
lods
adc
fisub
fdiv
jle
inc
sub
adc
cmp
push
cmp
dec
cmp
cmp
mov
xor
or
call
add
fidivr
push
mov
outs
xchg
test
inc
rol
add
add
add
add
cld
lods
jno
xor
inc
mov
add
mov
js
mov
jb
retf
repnz
bound
add
push
inc
stc
xor
in
das
push
adc
inc
xor
jae
or
scas
leave
adc
sub
push
xor
adc
xor
repz
cmp
add
add
pop
ret
xor
add
add
ret
cmp
cmp
ret
jmp
push
sar
xchg
mov
mov
shr
cwde
mov
xor
movs
pop
inc
test
xor
add
and
scas
inc
jae
mov
add
inc
sub
lock
repnz
mov
xor
(bad)
add
rol
repz
shl
sub
xchg
jmp
out
push
out
dec
outs
popf
sub
shl
jae
pop
rcl
adc
ret
cmp
sbb
daa
inc
adc
and
cmps
ret
push
cmps
and
dec
inc
daa
inc
mov
out
pop
cmps
sub
push
add
add
or
and
mov
inc
in
hlt
inc
add
xor
mov
les
imul
das
push
inc
stos
hlt
arpl
dec
das
xchg
push
mov
(bad)
adc
mov
jle
data16
xor
icebp
sete
mov
xor
ret
sub
and
xor
jbe
loop
jmp
imul
sub
sub
inc
pop
fwait
xor
out
xchg
sub
add
js
pop
adc
and
xor
inc
sub
xlat
mov
add
jno
push
or
pushf
enter
loopne
ret
test
adc
pop
movs
ret
sub
jbe
(bad)
dec
sbb
inc
das
sbb
and
mov
add
and
sbb
jg
aaa
xor
and
cmp
cmp
or
arpl
ss
cmp
xor
inc
mov
mov
cmp
jo
test
and
jmp
sbb
lock
adc
ret
ret
mov
fmul
mov
dec
dec
inc
sub
xchg
arpl
in
data16
xchg
and
mov
cwde
xchg
mov
jge
cwde
jg
call
mov
fwait
xchg
mov
test
stos
cmp
imul
add
cmp
mov
sbb
pop
pop
cli
pop
daa
sub
rol
add
daa
cld
sbb
add
rol
sbb
cmps
pop
clc
inc
sbb
ret
mov
dec
xor
add
leave
data16
mov
cmp
sbb
(bad)
lods
jecxz
scas
sti
cwde
scas
aam
add
inc
and
sub
inc
dec
adc
jmp
mov
xor
push
push
inc
xor
pop
cli
pop
out
mov
call
inc
pop
cld
sub
xor
inc
adc
add
call
push
je
sub
mov
loope
adc
mov
sti
mov
mov
fild
mov
xor
ret
xor
adc
push
aad
mov
inc
pop
dec
cmp
mov
push
inc
inc
mov
mov
out
sub
inc
and
push
mov
out
mov
sub
sub
ret
out
mov
js
inc
add
fidivr
das
mov
cmps
mov
mov
jge
fidivr
movs
adc
lock
mul
push
inc
sub
ret
adc
cld
rcr
dec
ins
jno
pop
push
cs
imul
sbb
cs
pop
jb
sar
sti
inc
adc
sub
icebp
mov
sub
add
xor
pop
or
ret
or
mov
push
nop
shl
mov
enter
ret
out
add
mov
push
cmp
and
inc
cmp
ds
or
cwde
sbb
add
or
jbe
popa
jecxz
loope
pop
imul
add
xchg
pop
add
sub
add
xchg
(bad)
cs
xchg
out
fsub
pop
pop
dec
mov
bound
aas
mov
clc
lahf
hlt
retf
add
and
sub
rol
cld
je
aaa
fnstcw
hlt
cdq
and
iret
mov
pop
pop
inc
push
xchg
dec
cdq
xor
add
add
or
mov
or
daa
inc
xchg
or
nop
movs
inc
or
xchg
pop
sub
jmp
mov
and
fwait
and
xchg
addr16
lahf
aas
add
push
mov
lock
sbb
adc
inc
int
dec
data16
mov
sub
pop
rcr
inc
inc
push
mov
in
mov
daa
iret
lods
xor
inc
adc
xchg
ficom
cmp
xchg
jmp
xchg
sbb
data16
add
inc
popa
mov
bound
call
call
mov
mov
cmps
mov
test
(bad)
(bad)
xchg
cmp
mov
ret
add
jmp
cld
and
xchg
mov
mov
cmps
add
cmp
pop
pop
push
inc
out
sbb
or
mov
in
or
xchg
or
jmp
int
pop
sbb
pop
js
adc
stc
and
in
xor
rol
sbb
test
sub
pop
and
inc
(bad)
fcom
mov
test
lods
mov
retf
mov
lods
scas
clc
ret
shrd
and
pop
cmp
pusha
add
push
jl
outs
aas
into
clc
mov
cmp
add
xor
and
cmp
or
fwait
and
shl
and
dec
sub
or
scas
push
je
inc
push
cmp
int3
into
ret
add
xchg
pop
in
loope
add
mov
repnz
(bad)
cmps
xchg
add
pop
repz
mov
stos
xchg
add
(bad)
push
int3
push
ror
mov
test
xchg
inc
dec
sub
mov
das
push
inc
inc
repz
aaa
dec
lods
push
aad
jmp
icebp
ret
rdmsr
inc
sub
mov
sub
mov
pusha
and
dec
push
aas
test
cmc
xor
mov
adc
pop
movs
and
push
xlat
mov
push
fnsave
cmp
lods
in
bound
pop
mov
movs
loop
icebp
out
aaa
sub
lods
aad
int3
(bad)
repz
jnp
ret
popa
xor
xchg
xchg
ror
dec
mov
call
les
maxps
adc
pop
or
jmp
or
fild
je
fld
stos
into
movs
mov
fwait
jno
sbb
movs
mov
dec
leave
sub
lock
cdq
gs
push
ins
mov
int3
dec
jne
add
dec
and
push
mov
clc
adc
shl
push
mov
mov
dec
cmp
push
enter
jbe
aad
inc
add
and
call
std
mov
or
xor
inc
nop
mov
jmp
jb
or
pop
inc
iret
sub
push
es
adc
adc
xchg
add
popa
ret
mov
mov
xor
inc
je
push
mov
jecxz
fnsave
adc
inc
adc
mov
jmp
xor
sbb
rol
ret
cld
repz
mov
test
mov
inc
mov
pop
dec
(bad)
and
inc
sbb
rol
jmp
dec
push
rcr
xor
ss
imul
dec
add
shl
stos
ins
jo
xchg
fwait
ret
pop
xchg
jbe
cmp
push
jle
inc
pop
test
cmp
in
push
rcr
xor
stos
push
nop
and
add
int
and
pop
xor
add
jo
add
and
(bad)
mov
inc
mov
in
ud2
aam
add
sbb
mov
rol
daa
movs
add
retf
loopne
or
push
jnp
jecxz
pop
mov
or
and
xor
add
test
inc
push
pusha
push
cmps
pop
int
out
ret
dec
out
inc
add
jns
cdq
adc
add
inc
inc
les
adc
push
jb
retf
dec
call
fcom
xchg
xlat
retf
aad
dec
call
sub
push
rol
pop
mov
inc
add
movs
popa
xchg
jge
adc
jge
and
add
adc
inc
icebp
and
jns
mov
sbb
xchg
dec
fs
(bad)
cmp
inc
stos
lea
pop
dec
cmp
jecxz
and
mov
add
add
mov
test
pop
out
adc
addr16
and
or
or
add
xlat
cmp
pop
adc
clc
adc
inc
sub
adc
push
lea
cmp
cs
or
xchg
mov
adc
lods
mov
xchg
xchg
dec
xchg
ins
shl
cld
leave
pop
inc
xchg
and
lds
pop
cmps
cmps
adc
or
jo
test
repz
inc
enter
inc
inc
mov
dec
test
icebp
fwait
mov
pop
xchg
xchg
rol
pop
jl
sbb
lods
adc
mov
push
jmp
lds
sbb
mov
mov
dec
or
es
or
test
mov
dec
sar
aam
add
mov
mov
push
cmp
mov
or
xchg
add
mov
pop
jne
push
outs
pop
push
xor
call
sub
xchg
call
adc
sbb
push
or
test
xchg
jl
sub
mov
xchg
stos
pushf
loopne
pop
aam
popf
(bad)
adc
imul
mov
(bad)
rol
push
icebp
and
js
pop
lods
dec
ror
mov
jnp
test
pop
push
lock
jne
sahf
pop
mov
fwait
mov
or
and
cmp
mov
mov
pusha
add
sbb
sub
pop
mov
mov
rcr
addr16
push
adc
add
loopne
bound
push
or
std
in
retf
jmp
mov
gs
fistp
icebp
sub
out
leave
or
dec
pop
jae
push
fs
xor
mov
add
sbb
push
lods
test
sbb
cwde
retf
push
inc
push
or
mov
dec
and
iret
es
or
sub
and
and
push
test
push
std
in
outs
pop
add
pop
and
les
(bad)
jecxz
test
popf
outs
xor
int3
mov
or
sub
in
jnp
(bad)
fmul
adc
inc
es
or
mov
xor
aas
into
outs
stos
dec
xchg
add
retf
add
hlt
lods
ins
and
sbb
arpl
mov
out
sub
xlat
cld
pop
inc
pushf
(bad)
push
dec
jmp
scas
repz
jb
pusha
mov
lods
in
inc
jecxz
(bad)
push
mov
dec
jae
pop
xchg
arpl
cmp
ins
pop
shl
retf
iret
fdivrp
int
mov
or
push
les
cmp
xchg
dec
pushf
das
les
add
push
add
addr16
add
cmp
push
adc
ret
pop
into
jo
imul
scas
mov
nop
push
and
push
mov
xchg
scas
pushf
in
ja
retf
dec
push
jmp
mov
in
add
and
icebp
and
and
jl
or
loopne
pusha
rol
jno
dec
inc
ret
pop
scas
jo
sub
(bad)
cmps
mov
jp
test
pop
jmp
jbe
aas
mov
das
or
in
ins
ja
fcmovnbe
(bad)
jbe
cmps
popf
adc
js
fstp
pop
or
out
jge
call
add
jl
or
mov
mov
daa
inc
(bad)
jle
xchg
(bad)
cld
in
das
jns
outs
fdivp
cdq
mov
out
das
stc
pop
pusha
pop
repnz
out
cld
adc
cli
push
dec
test
pop
(bad)
jp
cmps
ds
imul
fucomp
div
out
clc
fisttp
push
sar
mov
stc
out
fs
sub
ret
dec
aas
daa
imul
add
outs
lahf
add
movd
ja
sti
fstp
aas
clc
leave
outs
inc
pop
push
adc
dec
mov
clc
rcr
(bad)
cld
lahf
jg
sti
das
(bad)
js
(bad)
(bad)
outs
dec
sti
add
add
call
or
cli
and
sahf
test
xchg
add
rol
cmps
in
sbb
add
add
add
add
scas
xor
add
jo
and
add
add
push
add
in
bound
push
xor
adc
pop
jg
push
test
test
inc
pop
jnp
jo
add
mov
in
add
outs
push
xchg
sar
lods
add
add
lods
nop
or
add
or
or
and
add
add
add
sti
adc
inc
add
add
int3
xor
add
pop
add
outs
icebp
inc
movs
cmp
xor
mov
and
inc
and
(bad)
cmp
xor
or
stos
add
xchg
fisubr
add
pop
add
add
or
inc
je
imul
add
add
je
jbe
jp
outs
outs
and
imul
xor
add
add
inc
add
add
ins
xor
add
add
add
push
dec
add
add
or
inc
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
sldt
je
jbe
and
push
jb
jbe
arpl
add
add
add
add
add
add
add
arpl
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
sar
add
jmp
add
add
dec
add
add
ins
ins
popa
outs
xor
add
pop
add
push
jae
imul
add
add
add
pop
mov
add
arpl
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
add
ins
je
add
dec
inc
cmp
popa
mov
cmps
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
or
or
or
or
or
or
or
or
or
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
and
and
and
and
and
and
and
and
and
daa
daa
daa
sub
sub
sub
sub
sub
sub
sub
sub
sub
das
das
das
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
aas
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
popa
popa
popa
bound
arpl
fs
imul
imul
ins
ins
ins
ins
outs
outs
outs
outs
outs
outs
jo
jo
jno
jb
jb
jae
je
je
jne
jbe
jbe
ja
js
js
jns
jp
jp
jnp
jl
jl
jge
jle
jle
jg
add
add
test
xchg
mov
mov
mov
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cwde
cwde
cdq
cdq
cdq
call
pushf
pushf
popf
popf
popf
sahf
sahf
sahf
lahf
lahf
lahf
mov
mov
mov
movs
movs
movs
cmps
cmps
cmps
cmps
cmps
cmps
test
test
test
stos
stos
stos
lods
lods
lods
lods
lods
lods
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
rol
ret
ret
ret
(bad)
(bad)
(bad)
(bad)
mov
mov
leave
leave
leave
retf
retf
retf
retf
int3
int3
int3
int
int
into
into
iret
iret
iret
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
aad
(bad)
(bad)
(bad)
xlat
xlat
xlat
fcomp
fcomp
(bad)
fcmovu
fcmovu
fcmovnu
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
loopne
loopne
loope
loop
loop
jecxz
in
in
in
out
out
out
call
jmp
jmp
in
in
in
in
in
in
out
out
out
out
out
out
lock
icebp
icebp
repnz
hlt
hlt
cmc
cmc
cmc
div
div
div
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
or
add
fwait
shr
hlt
xchg
dec
pop
mov
or
sbb
ins
xlat
mov
jecxz
out
pop
mov
xlat
mov
sbb
jb
mov
shl
cmp
mov
cmp
scas
sub
mov
loop
jne
xchg
cmps
xor
or
into
pushf
mov
jecxz
mov
jbe
arpl
xchg
cmp
pop
dec
mov
cmp
pop
sbb
in
fiadd
loop
outs
xchg
mov
sar
jbe
pop
mov
iret
mov
fsub
inc
or
add
dec
pop
pop
outs
pop
or
push
xchg
or
test
ins
mov
rcr
sbb
retf
mov
sub
mov
push
js
sbb
nop
cmp
pushf
xchg
xchg
jo
into
pop
outs
pop
jnp
dec
fidiv
xchg
shl
pushf
push
jo
repz
(bad)
fcmovu
pop
sbb
dec
push
jb
sbb
jbe
inc
outs
jecxz
sbb
outs
cmp
pop
xchg
ss
inc
xchg
gs
lds
jns
ss
shl
inc
mov
movs
sbb
xchg
inc
ficom
xor
rcl
int
shr
or
dec
inc
pop
jge
popa
xor
jno
and
aam
add
iret
cmp
fsubr
movs
mov
cmp
test
into
ins
out
jae
addr16
xchg
loopne
jae
inc
pop
inc
dec
loope
loope
aaa
lea
jecxz
jbe
nop
push
fbstp
retf
hlt
xchg
mov
push
push
mov
je
mov
and
in
inc
dec
imul
sbb
dec
rcl
jg
mov
mov
cmps
add
dec
cmp
loopne
mov
sub
push
xor
cmps
aam
clc
in
cmp
lea
sahf
fsub
fnsave
(bad)
jno
xchg
mov
mov
pop
or
movs
test
and
push
movs
retf
int3
inc
lea
test
or
int
adc
test
lods
xchg
addr16
mov
cmp
or
popf
mov
aaa
test
sbb
xor
jo
push
nop
xchg
xchg
adc
outs
(bad)
sbb
jb
and
int
push
loopne
add
push
xchg
bound
loope
(bad)
dec
jno
fcomp
out
add
dec
cmp
xchg
xchg
adc
cmp
mov
cmp
jg
fs
push
not
push
scas
add
pushf
push
mov
jne
pushf
adc
shl
adc
xor
push
sub
jae
xor
ins
pop
push
xchg
test
inc
and
out
not
dec
cs
xchg
and
push
push
xchg
add
leave
xchg
xor
or
xor
inc
movs
out
fcmovu
jns
fwait
push
into
retf
xchg
call
outs
cmp
push
push
lods
xor
and
jns
xlat
clc
addr16
js
test
jle
pop
ror
xor
dec
mov
cld
popa
pop
call
or
pop
dec
xor
and
jmp
xchg
call
jns
pop
ss
xor
ss
inc
xchg
xchg
retf
adc
push
dec
mov
loope
cmc
inc
sbb
pop
mov
cmp
addr16
fidivr
retf
fisttp
xor
mov
adc
test
jp
or
mov
fist
xor
or
adc
outs
fadd
sub
mov
push
outs
js
sbb
retf
mov
push
jno
pop
push
fs
ficom
lods
or
adc
call
xchg
pop
std
push
and
ror
pop
je
iret
pop
inc
jg
mov
mov
mov
scas
mov
lods
xchg
out
xchg
arpl
xchg
adc
lods
fidivr
into
add
(bad)
mov
out
ret
sbb
pop
rcl
dec
cmp
dec
(bad)
aad
pushf
xor
ss
inc
pop
dec
arpl
mov
les
jae
or
dec
xchg
nop
adc
mov
or
add
nop
pop
or
pop
mov
mov
(bad)
mov
mov
inc
xor
aad
test
adc
into
add
xchg
xchg
add
(bad)
dec
jo
gs
imul
outs
inc
addr16
xchg
adc
push
xchg
pop
mov
adc
adc
xchg
and
addr16
ins
jg
lock
or
daa
jns
push
or
inc
jmp
jne
pop
xchg
retf
mov
lds
jb
inc
mov
ret
push
cmp
and
ss
aaa
lea
sub
adc
inc
aam
xchg
lahf
jle
stos
sahf
inc
cs
pop
inc
pushf
cmp
cmp
mov
inc
scas
jae
les
icebp
sbb
imul
mov
loope
cmps
xor
or
mov
or
and
stos
sub
fld
xor
jns
into
sub
daa
loop
rol
stos
sbb
xchg
les
call
je
arpl
push
lea
dec
or
cmps
xchg
add
xor
adc
(bad)
jae
rcr
sbb
adc
in
and
test
push
sbb
ret
mov
mov
je
sbb
rcr
adc
mov
push
xor
int3
sub
mov
dec
pop
pop
rol
mov
(bad)
push
jne
nop
sub
mov
cmps
stc
mov
call
dec
push
push
sub
enter
jmp
or
lds
popa
dec
data16
loop
adc
or
or
pop
mov
mov
jnp
aad
aaa
xor
test
cs
and
enter
jle
cmp
cmp
push
rol
and
std
and
cmp
or
int
push
fisttp
sub
mov
xchg
jg
sbb
sub
xor
out
and
mov
push
popa
aad
pop
stc
sub
or
push
fbld
and
int3
xor
or
add
cmp
jne
mov
xchg
fld
aaa
imul
xlat
mov
push
fnstenv
in
jo
jmp
mov
cmp
mov
pop
fist
mov
push
pop
arpl
test
adc
jmp
dec
call
cdq
fwait
dec
lods
lods
rcl
test
adc
or
adc
loope
rcr
sub
sub
ror
cdq
iret
loope
and
lods
push
popa
mov
sub
inc
mov
adc
jno
fs
or
stos
ffree
call
outs
mov
in
cmp
(bad)
(bad)
dec
push
ret
les
and
adc
lea
jmp
shl
sub
test
fcomp
adc
pop
sar
mov
cmp
stos
popa
dec
shl
lods
outs
in
dec
jo
pop
dec
test
stos
outs
xchg
sub
jne
push
mov
jge
mov
ret
out
jns
and
jno
dec
pop
cmp
cli
dec
adc
mov
adc
and
aaa
icebp
xor
ins
dec
sub
inc
inc
sbb
sbb
mov
push
inc
dec
mov
cmp
adc
aad
aas
xor
sub
push
mov
dec
out
cvttps2pi
jl
pop
sbb
jle
jmp
pushf
dec
dec
mov
call
fidiv
test
mov
mov
sahf
cwde
adc
dec
(bad)
aaa
je
mov
into
in
bound
sar
mov
fs
in
sub
cmp
ss
or
out
cmp
shl
ins
stc
jmp
cmps
fiadd
dec
fdiv
cs
and
pop
scas
fucomp
movs
inc
stos
les
xchg
daa
cmp
inc
mov
or
je
mov
test
mov
popa
es
and
(bad)
sbb
ficomp
mov
mov
or
fsubr
adc
call
sbb
xchg
fwait
push
xor
call
fisub
push
sub
push
fsub
cmp
pop
cmps
xor
inc
arpl
and
repz
adc
mov
enter
jo
into
inc
or
mov
xor
cmp
push
call
ds
push
push
sti
ror
nop
cmp
psrad
inc
popa
sub
push
pop
push
adc
bound
xchg
xor
jne
addr16
cmc
add
sub
push
push
mov
(bad)
push
sub
cmp
in
mov
xor
sbb
in
dec
mov
fsub
das
add
pushf
push
adc
dec
dec
add
adc
inc
sbb
cmp
in
jge
pop
repz
into
xor
xchg
dec
out
xor
push
jge
mov
in
js
call
inc
add
and
pop
inc
jb
adc
and
pop
cmps
dec
(bad)
jg
push
push
push
loope
xlat
loop
fsub
jbe
pop
cmp
dec
ins
push
inc
cld
add
and
push
repnz
icebp
sub
push
xor
jb
push
push
mov
mov
jl
or
xor
cwde
mov
mov
mov
std
push
adc
push
jg
daa
js
rcr
(bad)
es
xor
dec
fwait
add
mov
add
fisub
cli
gs
test
cmp
inc
mov
push
iret
test
hlt
xor
dec
aam
and
xor
bound
pop
int
jnp
push
pop
in
out
lods
enter
push
rcr
sub
or
mov
or
push
push
test
add
dec
ret
sub
add
and
cmp
adc
je
xchg
clc
adc
jmp
daa
lea
(bad)
push
and
addr16
push
and
jle
ret
hlt
adc
mov
sub
push
sbb
push
inc
sbb
xor
push
jne
(bad)
(bad)
push
and
lock
mov
jl
jne
mov
xlat
xchg
das
sbb
pop
in
cmc
push
mov
xchg
inc
sbb
push
inc
fidiv
jns
daa
mov
pop
cmps
ror
jae
out
push
jge
mov
xor
mov
sub
or
and
xor
ret
ss
mov
pop
ror
and
popa
push
pushf
mov
or
iret
bound
and
das
cmps
adc
mov
rol
xchg
adc
repnz
ins
pop
cdq
outs
scas
add
inc
fcom
dec
mov
xchg
sbb
sbb
loop
pop
jae
and
inc
fbstp
cmp
add
pop
xchg
xor
nop
adc
adc
in
push
and
cmp
jb
shl
call
mov
add
pushf
adc
leave
push
xor
popf
cs
lods
mov
cmp
mov
adc
sub
lahf
dec
test
and
test
or
sub
ret
inc
inc
add
js
xchg
shl
pop
adc
call
fwait
or
stos
ret
push
pop
test
inc
fcom
je
sti
rol
and
ins
push
je
fnstenv
and
icebp
lea
adc
outs
(bad)
cmp
pop
adc
js
adc
test
push
and
shl
inc
cmp
(bad)
push
aaa
adc
stc
dec
fsub
push
push
or
pushw
mov
push
mov
sbb
leave
adc
(bad)
push
jmp
push
(bad)
mov
and
imul
addr16
adc
xor
loopne
xchg
shl
daa
arpl
add
daa
rcr
inc
mov
push
ja
inc
daa
enter
jb
xchg
add
mov
push
add
mov
mov
mov
jo
jmp
cmp
push
inc
mov
call
push
pop
pop
das
xchg
mov
(bad)
xor
adc
clc
mov
xchg
inc
sbb
adc
xor
shl
push
pop
shl
les
pop
lods
jmp
xchg
dec
es
sti
xchg
dec
mov
jo
mov
in
sbb
adc
or
cmp
aad
aad
push
in
and
adc
xlat
adc
or
adc
icebp
or
mov
adc
pop
push
push
mov
adc
mov
push
cli
pop
js
jmp
jl
jo
sahf
es
xor
dec
xchg
sbb
and
icebp
pop
(bad)
mov
push
test
adc
sbb
test
push
jnp
xor
outs
xor
push
fs
push
sub
mov
ffree
cmp
test
xchg
test
aas
xchg
sub
retf
push
adc
dec
es
addr16
sub
adc
rcl
push
nop
stos
pushf
nop
aaa
fs
adc
movs
and
dec
xor
or
or
cmps
pop
xor
push
xchg
adc
adc
adc
jb
fstp
mov
jg
add
and
movs
pop
cmp
test
jnp
add
mov
lods
mov
push
dec
mov
repnz
je
mov
add
jb
sub
jno
aad
inc
mov
int
cmp
dec
daa
add
cmp
test
jmp
xor
mov
mov
or
nop
cmp
push
loope
adc
fadd
push
xor
movs
mov
xchg
mov
xchg
jl
push
ins
js
and
test
jno
outs
xchg
push
rol
outs
xchg
jb
bt
mov
loop
dec
shl
mov
push
movs
xor
jmp
xor
and
push
push
cmp
sbb
push
pop
cmps
add
fdiv
fs
loop
jmp
jmp
xor
jp
(bad)
cwde
push
call
(bad)
mov
pop
push
and
xor
(bad)
mov
inc
enter
shl
adc
adc
push
(bad)
push
and
sbb
adc
sbb
retf
imul
movs
test
mov
pusha
mov
or
sub
loop
inc
sbb
gs
mov
cs
scas
xchg
push
mov
mov
pop
loop
in
push
addr16
sbb
mov
pop
lahf
and
gs
add
inc
pop
mov
jae
and
mov
jo
test
sbb
push
inc
jecxz
nop
(bad)
adc
shl
and
out
outs
inc
pop
dec
sbb
in
pop
ja
mov
push
imul
leave
add
sub
adc
fwait
sub
shl
movs
pop
dec
mov
xchg
or
xor
adc
push
pop
loop
and
inc
dec
out
cmp
mov
mov
jno
inc
bound
rol
or
fld
sbb
scas
xor
mov
mov
pop
sbb
daa
and
mov
jmp
sub
sbb
inc
dec
push
mov
in
pop
call
repz
and
push
xchg
sbb
ins
stos
xor
addr16
cmp
jecxz
das
loop
pop
fist
clc
and
push
push
mov
sub
xchg
inc
loopne
or
sub
mov
imul
sahf
inc
mov
imul
out
cdq
(bad)
stos
call
iret
sub
push
and
sub
or
xchg
jbe
dec
and
rcl
and
xlat
loopne
imul
xor
std
push
call
and
inc
pop
(bad)
nop
mov
movs
rcr
dec
lock
mov
outs
mov
rcl
jb
xchg
sbb
jo
test
inc
mov
js
repnz
adc
push
loop
mov
mov
push
jl
repnz
test
loopne
or
inc
retf
and
xor
lock
jns
adc
xor
adc
loope
pop
jmp
mov
mov
rol
push
ja
inc
and
mov
adc
xchg
ins
mov
and
cmp
pop
xor
call
imul
aad
jb
out
cld
push
ret
adc
fnstenv
lock
iret
fsub
mov
or
xchg
push
mov
mov
adc
and
xchg
jae
mov
fwait
mov
lods
fbld
push
lods
push
bound
je
push
jge
out
or
push
and
jne
inc
cmp
fild
lock
adc
aam
or
(bad)
js
das
push
cli
or
popa
xor
mov
push
mov
add
push
sub
fidiv
cmp
push
inc
sub
mov
dec
mov
lds
adc
fcom
push
push
mov
cdq
movs
mov
xchg
adc
cwde
pop
pusha
es
and
cld
mov
add
fsub
sbb
adc
dec
xlat
inc
xor
mov
push
stos
inc
sbb
adc
and
aad
sub
xchg
into
push
push
mov
and
pushf
adc
and
dec
aaa
xor
aam
sub
test
popa
jge
jle
jecxz
add
sbb
mov
pop
scas
xchg
adc
cmp
pop
mov
push
inc
loope
sub
movs
inc
xor
adc
shl
inc
ret
inc
loop
stc
sbb
inc
adc
frstor
or
aaa
jb
inc
cmp
in
inc
fild
mov
es
ja
bound
xor
jge
jge
pop
xchg
fidiv
xor
dec
mov
cmp
push
or
and
xor
test
cmp
push
and
movs
inc
ret
adc
push
inc
mov
mov
sub
loope
ja
into
xor
shl
cmp
shr
push
int3
adc
xor
cwde
jb
dec
xchg
push
stc
push
ficomp
adc
push
push
in
int3
pop
push
jo
push
sbb
or
mov
hlt
xlat
ins
(bad)
jo
sbb
icebp
sub
fcmovnb
mov
push
fiadd
sub
or
mov
inc
xchg
pop
pop
bnd
rcl
push
xchg
mov
jg
xchg
jno
add
fcom
mov
mov
and
cmp
cmp
dec
rcl
jae
and
not
fs
ins
mov
stos
mov
popf
(bad)
jb
dec
popa
push
mov
xchg
fisub
or
mov
bound
inc
dec
movs
out
out
repz
sub
movs
dec
data16
pop
clc
aam
fsubr
adc
(bad)
jo
inc
cs
adc
pop
inc
lea
adc
popa
and
and
adc
mov
pop
andps
and
add
push
jge
xlat
push
nop
adc
dec
leave
nop
ins
and
int
push
aad
les
xchg
fbld
cmp
and
out
lea
imul
pop
mov
fnstenv
sbb
mov
ins
sbb
sbb
cs
movs
sbb
xor
call
jno
mov
ffree
mov
mov
pop
retf
xchg
xor
xchg
xor
aaa
outs
cmp
fdivr
and
push
fwait
ss
fistp
fdivr
(bad)
out
xchg
or
push
retf
xchg
repz
addr16
gs
in
fidiv
movs
fwait
out
(bad)
je
mov
lea
pushf
(bad)
outs
fdiv
pushf
inc
movs
jae
outs
cmp
ins
aad
mov
xor
jge
mov
outs
inc
mov
sbb
xor
iret
mov
cmp
ss
fadd
mov
shl
inc
into
sbb
lods
dec
push
(bad)
in
inc
ins
fidiv
inc
scas
fdiv
sub
dec
push
mov
cmp
scas
fidivr
div
xchg
dec
mov
mov
mov
push
pop
pop
xchg
ds
retf
mov
or
ror
cmp
cdq
(bad)
mov
in
sbb
rcl
cwde
call
ret
mov
sbb
mov
test
lods
adc
cmps
sbb
sahf
mov
repz
or
xchg
jmp
pop
mov
call
mov
sub
lods
ins
les
stos
stos
sbb
iret
sbb
jle
push
test
es
push
cmp
cwd
movs
test
add
and
jno
retf
gs
mov
mov
loopne
shl
mov
xchg
call
ds
es
ss
scas
dec
cwde
test
cmps
cmps
sahf
push
repnz
mov
xor
push
jmp
add
jbe
(bad)
cmp
stos
cmps
fwait
pop
leave
and
and
test
imul
call
or
cmps
sbb
pop
inc
push
mov
adc
sbb
jmp
sahf
dec
push
fwait
adc
sub
mov
ror
cld
push
ret
lods
xor
cmp
xchg
and
cmps
and
sbb
shl
stos
dec
push
push
adc
lea
mov
pop
pop
stos
iret
jp
mov
cdq
out
sbb
imul
adc
xchg
push
adc
test
dec
sub
ins
retf
mov
mov
sub
add
test
rcr
pop
fisttp
shl
ret
fcomp
(bad)
push
fwait
push
sbb
mov
cdq
aaa
movs
loope
sbb
mov
mov
mov
leave
inc
retf
dec
cmp
test
leave
imul
pop
(bad)
mov
cwde
mov
or
ror
pushf
outs
push
scas
data16
mov
int
imul
rol
aas
clc
fwait
jmp
and
aam
shr
mov
push
mov
sbb
clc
sbb
mov
cmps
pop
scas
xor
daa
fwait
adc
das
sbb
xchg
or
retf
lea
arpl
mov
pushf
imul
js
add
jmp
adc
or
sbb
stos
xchg
pop
inc
sbb
fwait
pop
cmp
icebp
xchg
mov
and
inc
mov
inc
or
cmps
mov
icebp
mov
xchg
dec
icebp
repnz
sbb
or
enter
cwde
lahf
xor
mov
les
inc
xlat
add
gs
mov
inc
dec
adc
cmp
in
xchg
jo
das
test
pop
ins
xor
and
rcl
call
inc
push
out
in
pop
rol
stos
or
dec
sbb
xor
sub
aaa
mov
jmp
jg
dec
cmp
mov
mov
pop
scas
test
js
sbb
inc
jl
sbb
test
sub
mov
ret
xchg
or
lea
sub
rcr
xor
dec
lods
lds
dec
pop
jmp
sbb
or
xor
mov
and
mov
or
(bad)
xor
enter
or
mov
arpl
jmp
sub
pop
movs
inc
popf
pusha
or
in
push
adc
fnstsw
sub
mov
jb
call
and
jo
xchg
mov
sbb
bound
ins
in
lahf
sub
inc
jmp
push
mov
retf
ror
idiv
nop
push
or
add
or
adc
das
lahf
bound
jb
push
dec
xor
push
dec
xlat
dec
push
test
mov
add
jbe
int3
pop
nop
dec
xor
dec
inc
jb
mov
mov
sub
ror
pop
repnz
aaa
ror
push
push
xchg
ror
mov
and
retf
inc
jo
adc
lods
test
fisub
inc
les
pop
sub
call
neg
aam
call
pop
mov
scas
push
inc
scas
data16
aam
adc
and
mov
mov
mov
dec
scas
push
adc
sbb
jmp
icebp
sub
movs
leave
sub
jae
push
xor
inc
sub
or
fs
(bad)
cmp
aad
add
xor
xchg
push
pop
inc
cwde
jnp
sub
dec
mov
xchg
mov
call
imul
or
je
sbb
inc
repz
mov
sub
mov
movs
sbb
pop
pop
xor
ror
inc
sub
cld
pop
dec
js
scas
test
pusha
inc
leave
sbb
xchg
(bad)
lods
shl
dec
pop
dec
ins
sbb
push
xor
push
sub
(bad)
cmp
jo
movs
or
xchg
or
arpl
shl
sub
jno
sub
outs
fwait
pop
inc
xchg
lahf
(bad)
ret
push
pop
xor
xchg
retf
xchg
xchg
rcl
in
adc
mov
push
jo
lods
push
jge
and
jmp
ror
dec
inc
xor
loope
jne
sbb
test
imul
or
cdq
sbb
icebp
cmp
ret
repz
xor
xor
test
in
adc
sub
jno
arpl
cmp
dec
jmp
movs
xchg
adc
stos
and
in
(bad)
pop
mov
mov
mov
cdq
pop
outs
mov
and
cmp
out
jb
les
push
test
push
sahf
test
adc
sub
jo
retf
sbb
mov
mov
cmp
test
jge
test
mov
pop
cmp
mov
add
fcom
data16
and
cdq
imul
mov
or
lods
xor
fcomp
ss
pop
cmp
inc
ret
xor
test
inc
mov
or
sbb
lea
mov
mov
xor
inc
add
into
enter
imul
enter
hlt
inc
ret
loope
ror
jno
movs
dec
arpl
sub
jns
popa
hlt
xlat
adc
ror
and
xchg
outs
mov
jmp
aaa
push
ins
inc
enter
dec
jecxz
sbb
iret
xor
ror
cmp
in
xor
and
sub
cdq
sbb
fsub
sbb
out
push
sub
(bad)
cmp
push
hlt
ja
test
into
add
cdq
mov
sub
xchg
xchg
mov
xlat
jb
cwde
js
pop
(bad)
push
cmp
jecxz
lods
adc
cmp
adc
push
jl
push
and
data16
xlat
adc
add
aam
ss
repnz
jnp
or
jb
mov
dec
pop
xor
sbb
ror
sbb
jb
(bad)
in
mov
xor
cmps
xor
sub
jmp
pop
popf
or
cmps
pop
loop
or
shl
mov
adc
cmps
test
sub
dec
dec
cli
test
aam
les
jo
cwde
jno
and
leave
and
inc
ffree
inc
pop
cmp
inc
ss
inc
or
out
stos
inc
jecxz
mov
mov
add
lahf
mov
push
xchg
sbb
movaps
push
sbb
or
dec
mov
jns
ret
idiv
adc
cmp
bound
add
fucompp
or
nop
adc
lods
sbb
ds
sub
js
fwait
ror
mov
mov
sub
push
mov
adc
cdq
ss
aaa
cdq
mov
cmp
cmp
cmp
jmp
push
rol
push
sar
mov
jne
xchg
cmp
or
adc
pop
dec
cmp
adc
stc
sbb
cmp
mov
cdq
push
cmp
mov
les
push
xor
cmps
cmp
push
or
xor
dec
pop
mov
mov
adc
xor
jb
ror
sub
or
stc
push
imul
mov
adc
mov
jae
add
stos
shl
cmp
pop
mov
cmp
mov
popa
push
push
jns
fadd
xchg
push
fwait
mov
loope
push
cmp
pop
mov
xor
call
cwde
inc
in
adc
loop
and
or
lock
adc
mov
or
and
leave
mov
add
add
cld
mov
mov
inc
cdq
or
call
shl
cwde
ins
mov
int3
dec
xchg
adc
push
add
inc
mov
adc
mov
push
push
push
test
ret
movs
rcr
mov
mov
repz
push
sbb
or
push
pop
dec
pop
xor
popa
jno
mov
les
xchg
mov
adc
pop
(bad)
hlt
dec
or
sbb
or
xchg
mov
or
dec
pop
fidivr
mov
sbb
or
pop
punpckhdq
ret
xor
sbb
jb
jmp
sub
push
sbb
or
inc
cmp
push
ins
rol
lahf
mov
and
gs
cdq
mov
retf
inc
ins
adc
cmp
rcl
nop
xchg
mov
dec
mov
mov
dec
mov
(bad)
jmp
sbb
fwait
sub
xchg
fwait
pusha
xchg
repz
scas
pop
push
arpl
adc
mov
lock
jmp
repnz
ret
repz
xchg
pop
xor
les
mov
inc
mov
xchg
add
icebp
fisubr
xor
adc
call
mov
xchg
or
sbb
test
sbb
push
mov
push
data16
repnz
adc
xchg
add
jae
and
dec
xchg
stc
or
mov
sub
or
pop
daa
xchg
sbb
sub
scas
imul
pop
mov
xchg
sub
int3
std
xor
arpl
xchg
ret
push
icebp
imul
cmp
shl
sbb
xchg
sub
mov
or
pop
mov
sub
loope
fiadd
pop
(bad)
loopne
movs
or
in
jmp
retf
jno
sub
js
mov
xchg
mov
cs
sbb
push
mov
cmp
fdivr
imul
hlt
dec
lahf
or
repnz
xchg
sbb
ret
xchg
lods
jmp
leave
cwde
push
gs
aad
popf
xchg
shl
into
js
mov
es
out
push
and
stos
outs
sub
sahf
rcr
nop
push
sbb
arpl
rcl
imul
adc
sub
xchg
dec
adc
sub
dec
mov
xchg
clc
(bad)
les
fnstcw
shl
test
daa
jmp
icebp
dec
mov
inc
adc
retf
ins
clc
mov
dec
das
test
es
push
and
std
sbb
mov
mov
or
jae
or
nop
arpl
jp
mov
(bad)
(bad)
xor
and
movs
push
popf
fwait
pop
pop
rcl
ror
add
or
outs
ins
inc
popf
fcom
ret
pushf
(bad)
loope
mov
and
push
mov
aam
repz
enter
add
pop
in
inc
sub
cmp
mov
jmp
add
cmps
jb
in
or
popa
nop
popf
imul
pushf
push
mov
add
or
xor
jl
cwde
clc
mov
mov
ins
cmp
cwde
mov
inc
adc
int3
(bad)
fcom
sub
test
call
int
pop
cld
xor
les
jecxz
jbe
lahf
add
sub
lahf
sbb
push
and
or
ds
jge
xor
pop
xchg
lahf
adc
mov
sbb
call
sahf
and
imul
sbb
ret
adc
mov
les
xchg
add
call
xor
pop
or
jns
or
retf
xor
ror
jne
sar
retf
push
push
leave
and
movs
ret
sbb
popa
xor
int3
pop
or
lea
retf
lock
not
stos
pop
xor
rol
addr16
push
loope
mov
sub
xchg
cmps
imul
sub
enter
cli
fdivr
pop
xchg
jge
mov
mov
loop
inc
jmp
mov
jae
mov
lea
sub
ret
xor
or
lods
pop
pushf
xchg
pop
push
jl
push
push
pusha
in
xchg
mov
les
push
rcl
jmp
add
sub
je
xchg
adc
in
mov
adc
mov
dec
les
mov
arpl
in
lahf
in
mov
and
pop
adc
out
dec
jle
mov
ror
fwait
or
pop
mov
dec
fsub
sti
mov
in
and
shl
mul
jle
mov
lods
mov
inc
ret
inc
sti
lods
push
outs
js
push
mov
dec
bound
sub
push
mov
imul
lea
push
sbb
retf
cmp
enter
movs
push
xchg
out
sbb
test
fisubr
jg
loopne
inc
mov
jo
and
adc
popf
jmp
adc
pop
(bad)
enter
adc
mov
mov
dec
inc
repnz
dec
mov
daa
pop
push
mov
lods
jns
mov
or
call
pop
inc
mov
sbb
adc
jns
addr16
xor
test
mov
xchg
sub
test
sub
pop
push
pop
mov
cmc
push
mov
lods
xchg
loopne
or
lahf
sub
mov
lock
or
ret
add
fmul
dec
(bad)
mov
fisub
scas
loope
test
daa
sbb
out
mov
sub
ret
xchg
fwait
(bad)
xchg
mov
xor
inc
cmp
bound
adc
sbb
data16
fwait
cmp
push
add
popa
pop
addr16
sub
arpl
shr
fst
sahf
into
cmp
popa
(bad)
gs
xor
pushf
jns
mov
xor
xchg
xchg
cmp
mov
mov
cdq
jmp
rol
clc
or
pop
xchg
pop
sub
movs
loop
mov
sbb
fs
shr
lods
add
inc
dec
or
mov
cmps
xchg
into
mov
push
je
cmps
call
xor
std
sub
push
push
sbb
mov
movs
inc
mov
adc
mov
stos
and
dec
mov
adc
rcl
in
dec
jmp
sub
sbb
mov
fisttp
xchg
cmp
sahf
sub
and
loopne
adc
mov
mov
lea
jmp
mov
movs
or
(bad)
lock
pop
scas
lock
xchg
mov
xchg
cmp
push
mov
jmp
mov
or
mov
popa
cmp
call
mov
cwde
pop
ret
rcr
jmp
stos
mov
rcl
lahf
inc
int
mov
jbe
pop
mov
or
dec
hlt
adc
add
cld
or
mov
or
retf
jmp
or
nop
sti
sub
and
xor
inc
pop
out
scas
(bad)
or
add
mov
sbb
es
dec
sbb
dec
mov
in
xchg
sub
push
mov
inc
push
js
xchg
xor
test
pandn
push
test
jb
pop
mov
dec
cmp
out
xchg
and
pop
cmp
fiadd
int
push
fadd
nop
sbb
pop
adc
stos
mov
loopne
jecxz
sub
push
inc
mov
push
pop
add
push
loop
add
ins
push
xor
or
mov
into
or
mov
dec
mov
mov
popf
popf
push
je
sbb
stos
xchg
xor
ror
mov
call
dec
jne
mov
js
or
push
lock
enter
rcl
pop
pop
retf
and
ret
sbb
or
mov
repnz
inc
jbe
or
xchg
push
leave
shl
pop
inc
xchg
xchg
mov
sbb
pushf
aaa
pop
fst
loopne
les
inc
jno
repnz
inc
(bad)
popa
cmps
js
or
or
xchg
jns
loop
adc
adc
mov
mov
mov
xor
push
std
mov
xchg
and
repnz
push
pop
gs
dec
lods
jb
cdq
cmp
or
sbb
leave
adc
outs
xor
cmps
or
movs
mov
icebp
xchg
pop
(bad)
test
scas
iret
aaa
inc
out
mov
or
sub
rcl
rol
mov
addr16
mov
mov
push
ds
leavew
xchg
dec
jnp
int
mov
xlat
stos
push
xchg
ss
loop
outs
fnstsw
sbb
stos
cmps
int
mov
iret
push
and
sub
sbb
xchg
mov
jecxz
xchg
jecxz
xchg
(bad)
dec
addr16
mov
or
in
imul
lods
stos
lods
sub
ins
fidivr
mov
push
aam
cmp
sub
xchg
dec
mov
nop
inc
stos
ror
fist
sbb
fwait
imul
shl
(bad)
jp
mov
call
sbb
pop
mov
pop
xor
and
scas
pop
mov
repz
sub
mov
in
dec
enter
mov
jae
call
mov
out
sub
lods
fisubr
mov
ins
aad
xchg
and
xor
mov
ficom
pop
xor
mov
repz
mov
sti
sbb
daa
mov
retf
xchg
add
pop
xor
(bad)
jle
ss
in
ss
aaa
aaa
jne
push
jno
xchg
or
outs
cwde
jne
int
inc
lea
sbb
test
into
mov
and
test
rol
pop
push
add
adc
xor
enter
imul
pusha
sub
lea
inc
xor
or
fsub
mov
inc
jae
test
fisttp
gs
xor
xor
pushf
aaa
fst
adc
pop
sbb
mov
cmp
jne
cmp
xlat
adc
lds
push
push
cmp
mov
add
adc
or
cmps
loopne
fisub
int
in
lea
pop
push
or
push
lea
nop
fld
lea
arpl
aaa
sub
gs
push
push
pop
test
int
push
add
and
ins
shr
jl
data16
aaa
mov
das
adc
sbb
push
movs
jbe
test
lea
(bad)
cmp
push
aaa
sub
dec
push
les
or
jb
xor
cwde
out
nop
push
jle
and
push
cmp
imul
adc
fnop
dec
inc
inc
inc
dec
aaa
rcl
adc
nop
inc
in
inc
cmps
test
outs
loope
out
xor
xchg
loop
pushw
movs
sar
adc
cmp
arpl
lahf
sar
int
adc
loopne
int3
sub
and
dec
jns
gs
ror
cmp
mov
(bad)
sub
push
dec
jmp
push
xchg
xchg
sbb
or
or
mov
push
jp
in
mov
mov
fldcw
pop
xchg
rcr
xchg
aam
inc
in
not
dec
mov
sub
fdiv
push
in
pop
pushf
mov
jmp
adc
pop
std
(bad)
je
xor
sub
or
jmp
dec
mov
push
(bad)
int3
xor
jns
shl
fadd
mov
mov
rcl
call
xor
push
xor
pop
aas
jae
loope
data16
retf
call
mov
loop
imul
clc
into
lock
and
add
(bad)
dec
jmp
scas
add
retf
jo
dec
test
sbb
leave
xchg
inc
mov
mov
loop
aaa
adc
shl
ss
or
aaa
sub
fisubr
ins
out
jp
add
aad
mov
fcom
movs
xor
dec
retf
adc
ins
dec
mov
movs
mov
(bad)
pusha
stc
inc
lods
call
sub
mov
or
inc
ret
sbb
xor
sub
pop
mov
clc
punpckhdq
add
mov
fwait
inc
mov
and
or
(bad)
je
inc
loop
inc
mov
pusha
xchg
call
int3
sbb
push
adc
bound
shr
mov
ins
test
fadd
or
cmp
and
test
dec
inc
mov
(bad)
lea
cmp
(bad)
shr
leave
cmp
sub
push
inc
and
mov
xor
jl
inc
dec
cmp
or
xor
cmp
sub
dec
lods
sbb
sbb
rcl
add
pop
je
inc
adc
sub
or
data16
int3
or
adc
inc
or
jb
pop
dec
sbb
movs
stos
mov
xor
dec
out
sub
mov
mov
inc
dec
xchg
pusha
test
aaa
enter
add
lahf
push
mov
sbb
jae
xor
push
pop
mov
add
es
lea
sub
nop
inc
retf
mov
ins
push
rcl
adc
sbb
call
les
ins
ror
in
sbb
sub
scas
cmps
or
(bad)
sar
sbb
cli
dec
ficom
push
or
ret
mov
and
mov
movs
call
xor
in
aas
sbb
es
fs
sub
aas
lea
cmps
dec
mov
and
test
dec
mov
push
cmp
sub
push
rol
push
mov
cli
mov
sub
test
jne
adc
xor
pusha
jnp
xlat
ss
(bad)
adc
ret
push
or
(bad)
fwait
dec
push
popa
inc
or
in
int3
xor
adc
fidivr
mov
inc
int
dec
sub
cwde
push
jecxz
mov
sub
fimul
(bad)
pop
add
push
(bad)
sahf
popa
xchg
and
xchg
or
stos
push
cmp
dec
push
std
dec
push
les
sbb
dec
push
jle
inc
or
push
mov
pop
shr
mov
je
push
fcomp
or
push
mov
mov
push
xor
or
dec
push
sbb
or
xchg
push
mov
dec
dec
jmp
jo
xor
cdq
sbb
stos
shr
mov
inc
int
inc
jb
and
push
movs
or
and
scas
stc
daa
sub
cmp
rcr
xor
into
xor
jne
cdq
add
and
les
movs
mov
sbb
and
jns
stos
jge
sbb
cmp
push
or
pusha
or
sbb
xor
lods
retf
inc
inc
xchg
sub
cld
and
dec
mov
lods
test
mov
shl
imul
pop
adc
ins
adc
into
fst
mov
loope
xor
sbb
jmp
xor
or
(bad)
retf
shl
inc
mov
ror
mov
mov
adc
(bad)
cwde
xor
mov
inc
sahf
jae
shr
ret
aad
mov
pop
xor
imul
cmps
mov
xor
js
jne
jae
cmc
cmps
in
inc
push
inc
sahf
inc
mov
jne
int
sub
inc
loope
fidivr
jno
scas
jno
pop
and
mov
adc
sbb
or
sub
daa
adc
sbb
jmp
xor
hlt
push
push
mov
and
jne
mov
stos
stos
int
repz
retf
gs
cmps
mov
jae
ror
or
inc
sub
cdq
dec
xchg
xchg
jge
xchg
mov
or
adc
mov
fimul
iret
mov
es
sub
pop
js
clc
je
sub
rol
test
loop
fidiv
mov
out
sar
lea
add
xchg
jb
sub
push
cdq
sub
or
push
dec
xchg
sub
dec
aas
and
mov
and
(bad)
mov
(bad)
sbb
add
call
push
aaa
mov
pop
pushf
sub
jnp
ret
cmps
or
in
adc
cdq
push
xlat
push
dec
push
cmp
adc
mov
fwait
jae
es
outs
inc
pop
ror
addr16
adc
sub
add
pop
outs
push
mov
sub
(bad)
push
fisub
pop
sub
std
dec
mov
xchg
xlat
ins
inc
es
and
enter
gs
xchg
icebp
int3
mov
adc
sar
pop
aad
fcomp
add
dec
add
cmp
xchg
push
pushf
mov
ret
jl
dec
mov
dec
repz
mov
(bad)
imul
into
ins
fcom
push
or
test
sbb
add
jge
aaa
cwde
(bad)
loopne
fcomip
push
(bad)
je
cmps
push
inc
add
pop
ins
inc
push
fcom
xchg
ins
push
inc
sub
dec
mov
dec
ror
ret
sar
retf
lds
sqrtps
int3
mov
and
loopne
mov
pop
pushf
or
mov
jp
or
imul
and
xlat
xor
dec
push
jl
pushf
hlt
popa
pop
dec
xor
push
pushf
popa
mov
mov
xor
cmp
inc
ss
or
fstp
mov
loope
mov
mov
push
ss
pop
inc
int3
adc
enter
mov
xchg
stos
movs
inc
or
cmp
icebp
add
mov
push
pop
dec
(bad)
cmp
retf
iret
xchg
retf
scas
xor
adc
or
xor
sub
mov
inc
and
int
loopne
xor
adc
add
or
jne
xchg
jns
call
imul
lock
out
ins
xchg
cmp
dec
xor
les
fxch
jae
or
jl
pushf
loopne
cmp
ror
lea
pop
int
cmp
ss
xchg
iret
pop
test
and
dec
inc
add
pop
inc
adc
ror
(bad)
push
fst
int
popa
retf
test
mov
rol
dec
je
add
fs
jl
(bad)
jb
popf
and
push
test
rcr
dec
mov
add
or
lahf
cwde
inc
aaa
cmc
int
enter
push
mov
pop
adc
add
fmul
pop
or
scas
fmul
dec
movs
mov
inc
inc
test
mov
mov
mov
lea
mov
adc
pop
test
fdivr
popa
movs
inc
pushf
test
scas
int
lahf
xchg
mov
enter
out
pop
dec
push
lds
sbb
dec
dec
fucom
cmp
pop
push
add
sbb
xchg
mov
sahf
inc
push
or
inc
and
xor
inc
xlat
push
enter
popf
clc
mov
hlt
fstp
int3
mov
add
lds
mov
mov
call
xchg
mov
xchg
fs
arpl
arpl
pushf
push
ins
les
dec
dec
inc
gs
shr
addps
clc
mov
dec
cwde
xor
xor
add
call
int
test
pop
push
pop
arpl
test
add
loope
sbb
(bad)
add
add
fwait
out
aad
sbb
mov
and
jne
push
ficom
dec
add
int
and
sub
mov
js
or
push
xor
inc
out
adc
xchg
xor
inc
dec
cmp
aaa
push
dec
jb
mov
test
fidiv
pop
adc
or
cmp
or
ja
dec
fstp
mov
add
xor
inc
add
sbb
xor
and
pusha
imul
dec
inc
movs
and
dec
push
mov
iret
pusha
xlat
inc
pushf
shr
xchg
fldenv
adc
dec
adc
test
mov
fs
jp
xlat
icebp
cmp
test
repnz
aaa
fsub
dec
mov
pop
sbb
mov
push
mov
mov
push
push
push
dec
push
dec
add
loopne
xor
inc
mov
or
movs
les
in
add
in
fstp
cmps
test
sub
pop
jge
or
cmp
aad
dec
hlt
cld
test
ins
inc
aaa
ror
(bad)
pop
(bad)
(bad)
inc
inc
inc
and
pop
cmps
imul
adc
cmp
push
pop
int3
call
test
cmp
test
ret
jl
ret
ficomp
dec
inc
scas
or
fcmovu
stos
and
push
test
outs
add
adc
xor
xor
xchg
xor
add
inc
mov
ss
outs
or
sub
ret
lds
or
jmp
and
cmp
sub
sbb
push
jo
sbb
mov
je
ret
dec
call
dec
mov
push
mov
dec
les
mov
sbb
retf
in
pop
xor
xchg
pop
in
bound
cmp
xchg
mov
fnstenv
scas
adc
cwde
xchg
je
aaa
add
mov
hlt
push
loop
lods
push
js
mov
lods
push
clc
push
mov
pop
push
adc
xchg
movs
dec
inc
mov
dec
test
movs
xor
in
test
adc
pushf
adc
push
push
xchg
ret
lahf
or
add
mov
(bad)
std
pop
pop
mov
sub
or
ds
clc
retf
fs
dec
adc
push
fnsave
call
push
and
lock
push
sbb
xor
xchg
stos
cdq
push
(bad)
aam
out
or
inc
add
xchg
adc
dec
loopne
sbb
jo
fs
cs
sbb
in
(bad)
pushf
movs
in
mov
dec
in
mov
xchg
js
movs
imul
aam
xchg
cmp
xchg
xchg
jmp
push
xchg
pushf
(bad)
cmp
jo
mov
pop
push
dec
push
imul
in
rcr
and
test
cli
ret
pop
mov
ins
arpl
jb
imul
cmc
inc
inc
in
push
hlt
int3
int3
jmp
shr
push
sbb
test
ja
pop
pop
push
or
in
ins
in
adc
aam
nop
sbb
mov
add
loop
mov
mov
add
inc
or
add
xchg
and
mov
nop
pop
dec
dec
inc
test
inc
inc
aam
cmp
jp
or
inc
fwait
dec
movs
inc
pusha
mov
dec
mov
cmp
sub
mov
retf
xchg
pop
sbb
lea
retf
sub
ror
leave
mov
push
out
movs
pop
and
and
dec
and
inc
into
jmp
mov
fisttp
outs
push
mov
xor
fadd
ret
lods
push
xchg
jbe
push
pusha
add
push
or
into
and
ins
dec
aaa
sub
fwait
sbb
dec
sbb
aad
test
sar
push
inc
pop
mov
add
mov
(bad)
mov
scas
fld
dec
pop
mov
sub
jp
dec
jmp
push
xchg
push
mov
ins
lods
scas
xchg
push
xchg
ins
mov
into
pop
xor
cmp
int
add
adc
push
ror
stos
aaa
mov
mov
dec
cmp
xchg
and
sub
inc
jl
shl
inc
stos
ror
cs
int3
in
or
mov
push
or
sahf
aad
cmc
adc
gs
aad
xor
push
mov
icebp
xor
inc
jecxz
push
lahf
cmp
or
inc
ror
dec
xor
or
out
(bad)
bound
retf
and
ds
jl
xchg
(bad)
lds
icebp
adc
xor
call
xchg
nop
fmul
popa
scas
push
js
or
mov
movs
jne
cwde
sbb
mov
jb
(bad)
mov
add
ins
cmp
call
sahf
sbb
cmp
ss
dec
arpl
and
dec
aam
sbb
cmp
mov
(bad)
lods
aam
push
sbb
leave
jl
fwait
or
push
pop
div
add
inc
fdiv
dec
dec
mov
push
icebp
out
cs
mov
lahf
cwde
pop
fwait
add
js
jle
push
mov
mov
in
mov
or
rcl
mov
pop
mov
xchg
push
stc
xchg
dec
push
dec
xchg
nop
inc
scas
mov
mov
ror
mov
pop
shl
fcom
mov
mov
fsubr
and
jg
frstor
ins
jmp
enter
pop
and
inc
xor
les
sbb
adc
les
movs
adc
gs
rol
push
test
inc
xchg
je
inc
ret
jne
or
iret
fs
inc
or
inc
fild
xchg
ja
test
add
shl
mov
xor
and
cld
mov
mov
adc
gs
dec
and
jo
in
jmp
psllw
cmp
add
jo
clc
mov
xchg
out
pop
ins
shl
dec
dec
fst
cwde
push
add
pusha
fsub
xchg
ficomp
pop
jne
mov
add
mov
xor
xlat
es
mov
mov
fmul
arpl
jbe
inc
add
cmp
pop
frstor
lahf
xchg
imul
int3
adc
mov
mov
cmp
add
xchg
adc
push
pop
ror
std
mov
neg
pop
popf
xchg
mov
lods
arpl
xor
and
mov
cdq
cmp
cdq
xor
push
fwait
push
loope
add
mov
mov
sub
cmc
(bad)
pusha
or
(bad)
mov
leave
nop
repnz
out
mov
(bad)
fs
xchg
pop
test
push
inc
jl
xor
ror
mov
pop
push
iret
fs
pop
jne
pop
shl
cmp
mov
bound
or
cld
mov
outs
inc
fdiv
xor
dec
lock
movs
test
hlt
cmp
jb
dec
dec
je
xor
iret
je
shl
outs
cwde
pop
dec
inc
inc
push
xchg
mov
lds
inc
jbe
push
cmp
inc
les
jns
fsub
int3
rol
bound
pop
lahf
inc
dec
lods
cmp
push
les
loop
cld
or
add
les
mov
fcmovb
jl
mov
xchg
inc
inc
mov
sub
mov
inc
loopne
ins
push
mov
dec
dec
outs
retf
cmp
int
and
stc
inc
mov
mov
and
pop
dec
push
sbb
xchg
push
xor
pop
dec
fwait
sti
inc
popa
cmp
jns
mul
mov
mov
hlt
xchg
dec
jl
cmp
aas
in
push
dec
(bad)
fld
jne
cdq
mov
aad
jae
push
mov
lahf
movs
test
add
in
push
pop
std
sbb
mov
test
int
(bad)
push
mov
sub
fisttp
add
push
fnstcw
outs
fldenv
mov
in
xor
aaa
ins
loope
ss
ins
fnstenv
mov
jae
mov
mov
imul
or
dec
imul
(bad)
fcmovnb
jno
mov
pop
(bad)
ins
inc
xchg
xchg
sbb
adc
jno
rol
mov
(bad)
scas
imul
(bad)
retf
xchg
add
in
jo
retf
imul
aad
xchg
sbb
mov
xor
(bad)
xchg
sbb
mov
mov
fidiv
mov
add
jo
ret
xlat
(bad)
fstp
jnp
xchg
ins
mov
in
inc
cmp
into
jecxz
jb
inc
sbb
(bad)
pop
pushf
aaa
mov
jbe
in
outs
ins
fdivr
inc
mov
rcr
jp
fidivr
dec
jbe
xchg
movs
push
in
mov
xor
ins
sbb
addr16
fidiv
data16
fnstenv
arpl
mov
call
int3
dec
pop
sbb
shl
stos
test
outs
adc
xchg
addr16
xchg
cmps
fwait
jno
dec
(bad)
pushf
stos
(bad)
mov
in
sbb
adc
retf
sbb
adc
or
sub
cmps
ins
mov
mov
out
cmps
imul
mov
and
and
mov
lahf
sbb
mov
fwait
outs
pop
cmp
sbb
addr16
call
in
inc
out
or
push
aam
fwait
jo
and
fwait
push
mov
call
mov
mov
imul
xchg
lods
mov
cdq
fs
stos
and
cdq
data16
mov
or
inc
lea
daa
popf
jb
add
xchg
cmps
mov
mov
adc
mov
rcr
imul
mov
stos
mov
stos
mov
or
jae
jmp
cmps
lods
mov
mov
xor
loop
mov
add
fwait
imul
cmps
int3
add
push
call
dec
or
ins
je
sbb
fldcw
int
enter
out
dec
hlt
call
iret
cli
dec
ret
cld
leave
sub
jb
test
pop
in
shl
stos
fstp
scas
pop
mov
(bad)
stos
or
(bad)
xor
pushf
mov
pop
jb
call
mov
mov
retf
xchg
outs
pop
cmp
push
inc
adc
scas
fwait
pop
dec
aaa
sbb
cmp
sbb
inc
add
dec
push
push
rcr
jno
or
(bad)
fs
cmp
mov
scas
mov
rcr
mov
out
cs
dec
aas
cmc
cmp
call
sbb
mov
cld
cwde
cdq
mov
push
(bad)
cmps
stos
sahf
mov
arpl
int
add
mov
cli
cmps
es
fs
sbb
data16
loope
int3
cmp
mov
dec
and
sbb
mov
lods
loope
adc
dec
jmp
in
mov
mov
mov
xchg
iret
aam
inc
and
sbb
pop
addr16
shl
xchg
adc
xchg
(bad)
sbb
in
pop
cmc
sbb
xor
lods
inc
adc
push
mov
xor
movs
push
mov
mov
add
add
pop
xor
push
jnp
mov
adc
mov
mov
enter
popf
dec
xor
xchg
int3
pop
mov
push
stos
mov
xlat
dec
fdiv
nop
and
or
mov
popa
and
push
lds
inc
rcr
inc
add
and
xor
mov
xchg
inc
in
test
cmp
push
pop
xor
and
test
xor
inc
mov
inc
pop
mov
test
sbb
int3
sbb
xchg
test
dec
enter
or
xchg
or
mov
xchg
sub
aad
adc
outs
fs
ja
iret
jno
push
xchg
in
mov
or
or
sub
leave
ss
add
mov
push
jle
add
into
pop
out
mov
ss
and
lods
cmp
aam
inc
lods
bound
or
push
pop
sbb
stos
out
test
sbb
data16
lods
ins
gs
and
adc
or
mov
cmps
and
fcom
test
mov
add
jl
inc
fistp
and
pushf
test
sahf
pop
mov
loope
jae
add
dec
xor
fmul
or
dec
jle
adc
or
lds
jae
jecxz
and
rcr
or
(bad)
aam
or
ror
retf
js
adc
jns
sbb
jno
mov
lods
movs
xchg
add
(bad)
rcl
push
add
sbb
cmp
adc
inc
xchg
push
and
test
and
sbb
cdq
or
xchg
loope
ficomp
or
les
imul
xchg
xchg
xchg
push
(bad)
xor
in
mov
mov
daa
stc
addr16
jno
cmp
mov
ror
push
cmp
pop
adc
mov
add
(bad)
push
mov
lods
sbb
and
xor
inc
add
mov
call
xor
jb
push
shr
int
rcl
mov
push
cwde
pop
popf
inc
inc
or
loope
jno
lods
and
mov
mov
rcl
mov
dec
sub
push
dec
cmp
nop
sbb
dec
lods
ret
test
adc
push
pop
inc
inc
ins
jmp
xor
out
ror
add
sub
int
(bad)
xor
cmp
stos
cmp
xchg
mov
push
dec
dec
cmp
nop
popf
mov
stos
idiv
outs
inc
xor
popf
xchg
lds
sub
sub
mov
fdivr
pop
scas
ss
(bad)
fs
inc
push
fs
(bad)
mov
push
cmp
or
test
sbb
int3
pop
pavgw
neg
inc
cmp
xor
ret
mov
stos
mov
pop
inc
into
add
lea
repnz
push
cmc
out
in
das
dec
mov
mov
push
pop
mov
test
and
dec
mov
mov
fmul
(bad)
cmp
sbb
inc
or
mov
jecxz
jbe
push
cmp
xchg
imul
(bad)
es
imul
pop
inc
stos
cmc
and
mov
xchg
xor
pop
jmp
sahf
sbb
icebp
stos
mov
fisub
cmps
mov
jmp
sbb
cmp
and
adc
inc
or
pop
daa
cmp
adc
jbe
cmp
aaa
or
push
and
into
cmp
gs
ins
cmp
cmp
ret
stc
pop
xor
lods
or
repz
call
and
cmp
adc
sbb
jnp
xor
inc
dec
inc
das
(bad)
pushw
inc
inc
sub
mov
mov
ins
test
int
mov
jecxz
pop
mov
and
or
xor
loope
mov
pop
cld
in
xchg
cmp
out
rcl
or
and
int
imul
jno
push
int
mov
fucomi
bound
movs
mov
cmp
add
mov
in
stc
push
xor
leave
lock
mov
and
sbb
mov
out
lds
mov
jle
or
xlat
mov
push
jne
xor
xor
xor
inc
je
xchg
jo
fs
xchg
pop
jg
push
sub
shr
sti
out
lds
dec
hlt
in
pop
xor
mov
or
fcom
or
les
adc
or
imul
cmp
sar
add
jmp
add
add
add
add
push
add
gs
xor
add
retf
add
gs
popa
and
outs
jp
outs
outs
and
jb
gs
and
popa
ins
ins
outs
outs
je
outs
popa
jb
imul
popa
and
jae
popa
jp
outs
outs
and
gs
jb
popa
outs
outs
and
jo
imul
gs
and
and
ins
and
gs
jae
outs
and
ins
popa
and
gs
outs
and
je
jbe
je
and
jae
jb
outs
and
jbe
jb
arpl
and
and
jae
jb
and
imul
je
and
ins
and
sub
arpl
jo
gs
and
jo
jae
ja
jb
add
sbb
add
add
ror
mov
push
call
add
mov
add
popa
outs
jae
push
gs
inc
mov
add
add
add
popa
xor
sbb
xchg
mov
add
mov
jmp
add
dec
inc
dec
inc
add
add
add
add
(bad)
in
add
inc
jne
imul
add
add
add
(bad)
out
add
inc
outs
bound
rol
add
add
adc
or
add
dec
js
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
or
sub
enter
add
adc
add
add
les
adc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
and
pop
xor
xor
adc
or
pop
adc
add
add
push
push
push
pop
push
add
add
add
add
adc
and
adc
adc
jno
adc
xor
adc
adc
arpl
xor
mov
adc
add
add
add
add
pop
add
add
add
add
add
and
adc
inc
adc
xor
and
adc
adc
mov
add
loope
inc
lock
and
adc
push
and
add
add
add
add
add
add
add
and
inc
push
popa
jno
adc
rcl
icebp
xor
fiadd
or
add
add
add
add
add
(bad)
sub
dec
(bad)
scas
adc
mov
arpl
mov
cmp
sub
lods
je
dec
shr
mov
sub
lods
dec
push
cmp
mov
jo
push
adc
or
xor
movs
stc
out
cmc
fmul
pop
sub
sub
lods
sti
mov
push
ins
std
add
arpl
in
mov
mov
jns
jo
cmps
or
mov
fstp
hlt
sbb
adc
and
test
sub
jg
out
sbb
sbb
test
mov
lods
fcmovnbe
adc
push
mov
daa
(bad)
fucom
dec
jmp
aaa
dec
mov
push
xlat
arpl
mov
ja
and
sub
pushf
and
cmp
inc
dec
inc
out
rcr
inc
jmp
aam
jne
dec
das
das
xor
or
retf
sub
push
jbe
fsub
fimul
fnsave
and
daa
in
xchg
pushf
sbb
sub
mov
(bad)
push
in
sbb
aaa
or
adc
ins
fisttp
sti
ins
mov
fdiv
or
mov
mov
sbb
int3
enter
mov
jmp
call
and
xor
mov
popa
mov
jno
setns
mov
call
sub
je
sub
cmp
imul
ins
arpl
or
push
jo
inc
adc
dec
repz
lods
aad
rol
jmp
and
bnd
shl
stos
sbb
or
and
imul
lods
dec
hlt
cmp
xchg
cmp
imul
cmp
scas
sar
cmc
mov
push
frstor
mov
push
cmp
bound
and
cld
retf
mov
mov
cmps
xchg
dec
popa
icebp
sbb
(bad)
lea
sar
jb
ret
or
or
mov
adc
fmul
in
mov
fild
inc
shl
inc
mov
inc
pop
sar
cmp
in
adc
retf
push
test
out
and
stc
mov
jmp
movs
jno
push
cmp
scas
push
lods
inc
test
sbb
dec
aaa
cmp
mov
ja
aas
nop
push
sub
je
pushf
neg
movs
imul
int3
ins
jbe
ins
jb
sar
cmc
mov
pusha
rcl
cdq
jmp
outs
mov
xchg
aad
jnp
mov
lahf
inc
imul
stc
mov
sbb
and
mov
xchg
inc
cmps
fcomi
sbb
mov
xchg
mov
lea
in
push
imul
(bad)
jb
dec
mov
aad
ret
fwait
inc
sbb
fcmovnu
pop
clc
mov
mov
movs
and
dec
dec
pop
mov
mov
inc
test
popf
aam
mov
call
mov
inc
xchg
jp
jbe
call
lods
inc
adc
loopne
pushf
test
mov
sbb
outs
cdq
sbb
out
(bad)
movs
pop
xchg
fsub
jp
(bad)
sub
ret
dec
es
jb
stos
dec
and
xchg
out
xchg
scas
cmp
retf
ds
pop
mov
dec
lock
loopne
xchg
xchg
aad
xor
bound
sub
dec
fwait
cwde
xchg
outs
sbb
ins
push
add
hlt
jl
cdq
outs
dec
pushf
(bad)
cmps
es
scas
adc
dec
cmp
and
jb
stc
or
adc
cmc
mov
call
outs
fidiv
dec
xchg
cmc
cld
adc
mov
jae
retf
xor
gs
sub
mov
push
mov
lods
inc
inc
xor
test
mov
inc
dec
mov
cdq
fist
pop
dec
loopne
daa
call
pop
xor
dec
push
xor
jmp
cmps
mov
dec
mov
xlat
dec
cmp
jmp
jne
dec
leave
jno
inc
in
inc
xor
jmp
mov
fnsave
cmps
dec
xlat
(bad)
out
dec
cdq
jnp
call
pop
push
imul
and
sahf
repnz
push
hlt
pop
xchg
and
jns
add
nop
mov
inc
ins
(bad)
popf
test
gs
mov
pop
or
dec
adc
call
xor
test
dec
jbe
cmp
sub
inc
xor
call
ret
inc
jl
jmp
js
or
jb
les
mov
pop
cmc
sbb
pop
mov
jl
push
js
rcl
adc
pop
imul
repnz
dec
mov
fwait
out
sbb
dec
fmul
and
pop
frstor
rcr
mov
mov
out
scas
lahf
xchg
outs
sbb
es
sbb
into
daa
push
sbb
pop
sbb
adc
pushf
inc
dec
inc
push
dec
test
sbb
cmps
fld
mov
xchg
add
add
movs
sub
push
xor
into
mov
pop
call
add
arpl
dec
adc
xor
imul
mov
sti
test
mov
mov
mov
or
cmps
(bad)
outs
es
sub
bound
mov
push
jmp
pop
sbb
adc
pop
loope
and
cmps
rcl
dec
jns
out
mov
inc
push
sub
xlat
lods
mov
dec
mov
and
rol
xchg
adc
je
call
scas
xchg
mov
mov
mov
das
pop
push
add
out
add
or
adc
pop
data16
mov
popa
les
inc
loop
scas
push
cld
sti
inc
xchg
stos
pop
retf
cmovs
and
cmps
push
push
fdiv
jb
mov
push
fist
dec
pop
push
gs
ss
xchg
out
sub
and
and
scas
push
mul
(bad)
pop
cs
jae
xchg
into
jno
sub
mov
sbb
popa
popa
(bad)
jmp
jns
push
stc
adc
ffree
js
loope
push
shl
mov
xlat
mov
cmc
mov
sbb
stc
inc
inc
ja
inc
sbb
and
lock
jae
ins
dec
xor
call
xlat
cmp
jns
paddusb
add
add
packssdw
sti
mov
adc
pop
xchg
or
nop
fld
(bad)
cdq
sub
ret
and
inc
std
nop
out
cmp
lock
stc
lods
inc
xchg
(bad)
iret
dec
xor
dec
cmp
pop
add
mov
and
add
test
xchg
jge
cmp
pushf
je
out
aad
sbb
ret
ja
aaa
clc
sub
outs
xor
aad
leave
fldenv
inc
iret
sub
xchg
stos
int3
dec
les
cmp
cwde
jl
js
inc
mov
pop
fucomi
add
call
sbb
mov
dec
or
fdivr
test
mov
cmp
pop
cmps
repz
mov
outs
and
mov
sbb
jb
stos
lods
fmulp
push
jo
cs
mov
test
in
or
xor
dec
dec
sub
adc
dec
push
cmps
mov
pop
add
mov
ret
xchg
loopne
das
add
fistp
mov
test
mov
sahf
mov
addr16
dec
mov
das
cmp
adc
daa
pusha
sub
push
arpl
dec
inc
mov
fwait
or
mov
stos
mov
xor
int3
dec
inc
and
(bad)
(bad)
ins
repnz
mov
push
outs
call
sub
ss
pop
ins
jmp
jnp
inc
inc
xchg
push
(bad)
mov
adc
stos
in
or
retf
outs
mov
rcr
int3
dec
gs
and
enter
mov
jl
inc
mov
xor
addr16
and
nop
push
arpl
pop
jmp
das
sbb
dec
ror
jb
xchg
repnz
add
jmp
mov
dec
lds
pushf
test
into
mov
dec
xchg
adc
jns
dec
adc
fwait
ins
leave
pop
xor
je
add
je
pushf
sbb
adc
jnp
fisub
fstp
dec
inc
mov
inc
dec
addr16
div
xor
dec
pop
xchg
mov
cmp
mov
push
push
shl
xchg
and
add
push
push
mov
outs
mov
hlt
imul
nop
pop
sbb
add
(bad)
xor
mov
cld
pop
(bad)
aaa
or
jb
stos
stos
mul
mov
leave
xchg
adc
cli
ins
test
ins
adc
push
adc
stc
inc
mov
jmp
ss
xor
lods
inc
xchg
imul
mov
or
jl
lods
es
repz
fadd
inc
std
inc
aam
jg
bnd
adc
shl
lea
inc
add
arpl
in
dec
sub
call
sahf
push
lea
leave
mov
sar
add
out
adc
cli
xor
inc
int3
aas
inc
adc
inc
xchg
out
inc
xchg
xchg
xchg
ret
mov
and
bound
cmps
or
nop
xlat
or
xor
or
sub
jnp
or
cmp
fsubr
retf
push
and
fdivr
adc
fs
fwait
int3
int3
push
aam
inc
xchg
and
sub
pushf
mov
fdivr
mov
push
out
dec
pop
ja
sub
and
sti
xchg
mov
push
mov
jbe
adc
jge
mov
loope
out
pop
aad
daa
pop
xchg
add
pushf
nop
cs
fdivr
test
adc
inc
add
add
add
add
add
fs
and
mov
lock
lods
jmp
inc
push
in
push
(bad)
xor
mov
aam
xchg
sbb
push
pop
cwde
scas
shl
fld
push
push
push
cmps
xor
cmp
xchg
fisub
lods
adc
fstp
aaa
jbe
out
aad
lods
(bad)
adc
adc
lea
push
sti
pop
(bad)
std
imul
pop
mov
adc
pop
sbb
scas
push
add
aaa
sub
sahf
mov
mov
daa
jnp
jle
ins
mov
or
arpl
(bad)
aad
or
and
(bad)
(bad)
in
popa
sbb
xor
ror
sahf
retf
cli
bound
bound
mov
lea
xchg
add
ja
inc
adc
mov
pop
mov
sub
pop
popf
push
dec
inc
xchg
or
cs
xchg
sub
pop
sbb
pop
in
fwait
xor
shl
lea
ss
sbb
mov
jp
pop
out
lock
imul
xor
loopne
mov
(bad)
mov
sub
in
scas
in
pop
fcmovnu
std
js
xchg
imul
out
mov
dec
ins
or
in
pop
stos
jg
push
fstp
dec
scas
(bad)
fadd
push
test
sbb
mov
jecxz
out
les
mov
test
and
mov
sub
cmp
fld
xchg
xchg
test
pop
aas
arpl
inc
push
cmps
iret
inc
cs
or
jmp
shl
jbe
loope
push
mov
mov
mov
mov
mov
push
sti
mov
sbb
push
clc
shr
outs
ss
jge
jge
mov
sub
in
outs
push
jmp
add
xor
imul
xchg
fcomp
bound
push
jne
call
leave
addr16
popf
or
ins
dec
mov
outs
ins
sub
xchg
in
pop
scas
in
mov
sub
in
and
(bad)
sbb
or
retf
(bad)
(bad)
shl
jb
div
popa
jbe
lahf
or
inc
add
gs
mov
jne
jge
scas
or
xchg
cmp
push
cmc
addr16
not
(bad)
sbb
sbb
cmp
cmp
sti
push
jmp
mov
das
(bad)
jmp
cmc
je
or
in
mov
test
leave
adc
sub
(bad)
ss
pop
fldenv
xchg
xchg
xor
repz
pop
sbb
in
cmp
fcomp
call
es
ds
push
mov
ja
bound
pop
movs
sti
adc
push
mov
cmp
jl
mov
pop
sar
scas
jmp
jnp
fistp
pop
push
jnp
std
mov
fnstenv
aas
jmp
hlt
fisttp
jmp
mov
scas
(bad)
ins
in
adc
mov
mov
stc
icebp
test
mov
sti
xor
stc
outs
fdivr
ja
shr
mov
cmp
adc
jmp
fist
push
inc
lods
stos
(bad)
cmp
loope
pop
mov
ins
in
sbb
mov
(bad)
ss
test
xchg
mov
pop
jle
je
mov
inc
mov
push
pop
jbe
cli
call
jl
xor
in
out
cmp
aas
neg
out
sbb
mov
std
dec
imul
jbe
ins
scas
adc
test
adc
sti
shl
gs
pop
xchg
jno
pop
aad
out
fnstenv
ins
jmp
add
add
int3
retf
mov
or
ror
push
outs
adc
js
jb
mov
mov
sub
inc
test
sahf
aam
scas
inc
ss
adc
or
jge
aaa
in
jbe
mov
mov
mov
popf
push
jl
sbb
dec
and
rcl
(bad)
lds
mov
mov
scas
(bad)
dec
fnstenv
sbb
pop
not
data16
dec
lods
mov
in
dec
inc
jae
mov
inc
nop
mov
sbb
adc
inc
sub
imul
cmp
sbb
adc
imul
jl
cs
(bad)
daa
jg
in
cmp
fbstp
repnz
pop
addr16
test
pop
cli
cli
xchg
data16
pop
push
mov
pop
sub
jno
push
cdq
push
xor
lahf
test
fldcw
xchg
cs
xchg
std
mov
jne
or
mov
stos
mov
lods
jmp
outs
cmp
dec
fstp
jmp
dec
enter
and
inc
lods
dec
fnstenv
retf
pop
in
cs
rcl
xchg
test
mov
jae
xchg
cmps
xor
mov
jns
pop
pop
and
test
cmc
mov
xchg
dec
outs
jp
out
jb
mov
mov
(bad)
inc
lods
cmp
into
sbb
jnp
enter
push
mov
cmc
pop
sub
pop
mov
popa
cmp
adc
sbb
ficomp
jne
dec
push
jbe
mov
pop
jbe
in
call
or
jmp
pop
ds
push
(bad)
mov
aam
push
(bad)
in
inc
(bad)
xlat
xchg
into
into
outs
fcmovb
ret
daa
add
jo
push
push
call
fsub
out
fld
pushf
jo
out
push
ins
neg
icebp
jns
rcl
cmp
mov
jmp
sub
xor
fbld
dec
lods
sahf
imul
cmp
aam
jmp
adc
in
mov
mov
rcl
dec
fldcw
retf
hlt
lds
adc
jecxz
mov
mov
push
xchg
and
movs
jmp
movs
aad
fnstcw
cwde
pop
adc
xchg
cmps
ficomp
sti
adc
xchg
iret
loop
out
test
ins
data16
push
xchg
lahf
push
lock
sub
leave
enter
(bad)
(bad)
shl
mov
cli
jmp
mov
scas
test
mov
mov
rcr
fstp
pop
add
fbld
mov
pop
inc
lods
in
mov
retf
and
mov
push
scas
pop
sbb
ja
in
fwait
jge
ret
(bad)
push
fwait
sbb
mov
xor
xor
cld
pushf
ret
mov
fdivr
call
push
out
imul
mov
and
sub
cmps
ins
jp
retf
jecxz
pop
test
enter
cld
cwde
inc
inc
pop
(bad)
stos
addr16
xlat
mov
lahf
ja
lahf
rcr
in
inc
lods
mov
jl
out
js
push
popa
jbe
movs
stos
in
cli
out
(bad)
mul
mov
aaa
and
inc
ret
and
and
idiv
jmp
dec
jle
cli
loop
push
push
frstor
sub
push
dec
lds
sub
outs
fstp
ret
or
cmp
push
pusha
inc
xor
jmp
out
ins
lods
addr16
rcl
pusha
movs
mov
mov
mov
retf
adc
ret
push
imul
and
fisttp
pop
jne
out
mov
enter
mov
imul
(bad)
jmp
push
mov
fdiv
push
push
jb
inc
clc
retf
in
mov
sar
fisttp
loop
inc
(bad)
jge
mov
popa
or
jmp
fmul
cli
mov
mov
outs
push
aam
mov
and
scas
xchg
imul
jae
jne
(bad)
push
mov
mov
push
mov
xchg
mov
pop
(bad)
pop
xchg
mov
outs
and
outs
mov
xchg
fwait
adc
clc
daa
imul
xor
add
xchg
adc
mov
inc
into
pop
push
mov
jne
je
ds
xchg
push
sub
sub
push
fst
pushf
imul
jae
test
sub
push
sub
xchg
scas
test
out
leave
pop
lods
xor
push
mov
pop
fsubr
ror
push
jg
mov
cmps
out
push
cdq
sub
in
and
mov
xchg
mov
pusha
adc
cmp
xchg
rol
in
es
into
leave
mov
(bad)
sti
outs
aad
ss
mov
cmp
ds
xchg
inc
not
mov
sbb
pop
sub
in
inc
jle
pop
pop
pop
mov
in
test
data16
shl
pop
cmp
sub
das
rcr
sub
scas
lock
rol
mov
and
imul
mov
fild
sti
mov
mov
jmp
lods
mov
pop
mov
jl
sub
and
xchg
mov
mov
popa
dec
xchg
je
mov
sub
cdq
fwait
xchg
mov
daa
pop
call
pop
xchg
sbb
(bad)
out
fs
(bad)
bound
jae
and
jnp
push
cmps
idiv
push
mov
xchg
pop
sbb
test
ds
loop
xchg
xor
test
out
(bad)
clc
inc
push
push
add
jne
in
inc
fsqrt
hlt
cli
stos
adc
cwde
fbld
addr16
pop
xor
pop
xlat
pop
cli
pop
out
sbb
fnstcw
adc
or
push
aam
int
out
int
rcr
(bad)
lock
mov
sub
lock
push
idiv
stos
sbb
cmc
push
imul
xlat
adc
jle
mov
inc
aad
pusha
push
sti
or
je
lds
(bad)
call
push
xchg
mov
pop
out
sub
test
cdq
fidivr
imul
in
mov
xlat
jge
outs
fwait
mov
lea
fcomp
inc
xor
inc
sbb
jge
lea
adc
ins
dec
xor
jecxz
sar
mov
imul
push
mov
fstp
gs
ret
fidiv
sbb
cld
pop
mov
int
imul
mov
scas
(bad)
mov
add
cld
xchg
jp
mov
(bad)
fiadd
or
add
add
and
(bad)
jmp
or
pop
mov
mov
das
sub
xchg
mov
in
jl
(bad)
sbb
shr
out
je
push
lods
fcmovbe
into
test
ins
stos
sbb
fs
inc
jb
sub
cwde
inc
jbe
mov
fadd
jne
fiadd
mov
fisttp
xchg
outs
jle
retf
xchg
fxch
aaa
jp
push
test
mov
inc
adc
in
sub
dec
push
xchg
cmp
or
lods
gs
fnstenv
mov
mov
jl
es
sub
push
and
xchg
push
fadd
jmp
xlat
das
imul
pop
dec
mov
test
xlat
mov
adc
xchg
jbe
scas
push
or
lea
and
ret
fs
shl
jnp
pop
rcr
aaa
mov
xchg
repnz
ja
mov
(bad)
and
icebp
ss
cmc
sbb
fisttp
xor
fisttp
jno
or
dec
and
ins
js
out
xchg
in
nop
test
jb
or
and
jne
push
ds
xor
adc
xchg
xchg
nop
mov
inc
dec
mov
mov
mov
imul
movs
ins
in
int
sbb
add
xchg
jecxz
xor
sbb
mov
cmp
xor
and
movs
imul
push
pop
rcr
pop
xor
lea
lea
retf
and
shr
dec
out
call
data16
cmps
mov
sbb
jne
cld
dec
xchg
xchg
inc
mov
in
sbb
sbb
loop
test
test
pop
in
push
lahf
dec
mov
lods
add
ror
(bad)
cdq
fxch
sbb
sub
mov
pusha
(bad)
or
mov
mov
retf
mov
push
add
aas
or
sbb
xchg
dec
(bad)
adc
mov
iret
and
lods
enter
or
lds
ja
adc
sub
xor
add
les
loope
push
rcl
retf
xor
add
xlat
cmps
mov
outs
dec
and
hlt
jmp
dec
mov
adc
clc
gs
repz
fidivr
fcmovu
xor
sub
jg
and
xchg
xor
mov
icebp
(bad)
mov
cli
xchg
out
xchg
stc
adc
push
xor
mov
fs
xchg
xor
pop
fistp
mov
mov
retf
fs
mov
sbb
and
test
neg
into
mov
jno
xchg
mov
scas
xchg
inc
jg
js
imul
fstp
mov
pop
fwait
bound
out
pop
stc
sbb
stc
js
inc
lds
dec
sub
dec
jp
sbb
adc
sbb
gs
and
outs
and
mov
jg
scas
pop
xchg
aas
add
cmp
inc
sub
scas
push
enter
mov
test
sahf
dec
hlt
xchg
(bad)
mov
xor
inc
and
dec
mov
cmp
jbe
adc
pop
call
xchg
inc
(bad)
sub
rcl
add
ret
imul
(bad)
push
fnsave
jno
or
scas
aad
arpl
dec
adc
aas
(bad)
inc
push
adc
sub
xchg
ret
xchg
inc
ins
dec
add
adc
mov
(bad)
inc
pop
jne
push
push
scas
popa
mov
aam
sub
jbe
inc
mov
jecxz
add
out
lahf
iret
mov
cwde
lea
fstp
pop
ins
out
gs
das
gs
fstp
shr
push
test
pushf
jns
call
mov
xchg
loope
cmp
add
nop
adc
scas
stc
bound
mov
dec
std
adc
xchg
stos
mov
pop
cmps
fidiv
in
scas
mov
mov
stc
and
out
pop
repz
loop
jl
dec
cmps
xor
mov
aaa
mov
(bad)
jp
setb
sbb
pop
cmp
fcomp
xchg
shl
adc
sub
adc
cmp
pop
enter
sbb
mov
jno
ja
mov
mov
dec
hlt
and
inc
inc
jmp
mov
mov
xor
inc
hlt
mov
push
pop
mov
xchg
leave
jb
xchg
hlt
dec
out
bts
(bad)
sub
(bad)
xchg
cdq
or
push
pop
push
test
pop
or
in
cmp
aam
enter
mov
popa
sbb
mov
mov
arpl
add
sub
nop
dec
sar
inc
stc
pushf
pop
retf
xchg
xchg
(bad)
push
inc
fs
js
cmp
dec
aam
in
js
stos
dec
clc
test
inc
cmp
jl
mov
shl
mov
xor
gs
aam
lods
jmp
jecxz
cs
xor
dec
scas
xor
xchg
cmp
fist
cmp
and
mov
jl
retf
es
mov
push
push
enter
inc
or
fdivr
mov
mov
add
jl
inc
sbb
out
dec
add
call
loopne
mov
push
mov
mov
mov
loope
adc
xchg
jg
cmps
and
dec
jb
ret
dec
mov
add
cli
push
inc
push
dec
dec
lock
inc
mov
ja
jmp
mov
mov
pop
popa
sub
add
pop
pop
ins
retf
inc
call
dec
xor
leave
cdq
sub
movs
xor
js
clc
(bad)
add
(bad)
xor
mov
push
mov
imul
inc
lock
addr16
sub
hlt
pop
xchg
inc
ficom
xlat
add
xchg
add
pop
push
hlt
ins
arpl
sbb
popa
or
mov
js
pop
inc
enter
cmp
cli
mul
enter
pop
add
out
(bad)
mov
adc
enter
bound
push
sub
sub
mov
jg
div
push
inc
sub
add
jp
add
xchg
(bad)
fcomp
es
ds
retf
cmp
jecxz
enter
inc
(bad)
pop
(bad)
addr16
pop
sahf
push
pop
out
lahf
(bad)
ins
inc
adc
(bad)
(bad)
fiadd
or
add
add
sbb
sbb
or
inc
ins
ins
cmp
mov
jle
sbb
push
xchg
cmp
add
push
(bad)
inc
add
xchg
add
push
out
iret
jbe
mov
push
inc
mov
aaa
call
pop
pop
dec
push
dec
clc
int3
aad
pop
push
call
jmp
adc
mov
mov
xor
bound
jo
jge
cmc
js
std
imul
lea
loop
das
add
ds
ret
xchg
sbb
fbstp
inc
mov
jmp
iret
push
aad
nop
int3
mov
inc
jns
popf
sbb
cdq
cmps
xor
stos
daa
mov
repz
push
push
outs
out
sbb
mov
imul
push
icebp
je
dec
or
in
mov
adc
mov
cmps
pop
inc
cmp
fnstcw
mov
pop
mov
push
push
in
loop
call
sbb
mov
cmp
adc
push
xor
sub
sbb
sub
(bad)
test
aaa
lds
stos
fldcw
xchg
mov
sub
push
mov
pop
fidivr
fld
es
or
sub
dec
ret
mov
mov
popa
pop
fmul
mov
retf
repnz
js
outs
mov
cmp
in
cdq
repnz
xlat
imul
in
scas
cmc
std
jno
sub
cld
pusha
mov
pusha
out
sub
js
ins
scas
mov
gs
std
jp
leave
out
stos
sbb
xchg
bnd
jo
ins
rcr
stc
pop
out
es
jecxz
mov
ficomp
ins
jbe
jle
mov
fist
push
lahf
sub
int3
ret
dec
cli
mov
arpl
dec
pop
bound
push
dec
fidivr
fistp
leave
outs
cmp
adc
mov
test
push
cmc
cli
sbb
fnstenv
adc
mov
popf
push
sub
sub
and
or
xor
push
sub
(bad)
jae
popf
adc
mov
pop
dec
popa
daa
outs
mov
inc
lods
fcomp
mov
lahf
pop
push
fcomp
xchg
sub
(bad)
repz
mov
es
ss
ins
outs
fwait
(bad)
and
pop
adc
ret
push
push
dec
mov
dec
xchg
adc
push
in
mov
add
adc
dec
icebp
dec
mov
mov
arpl
icebp
push
mov
mov
js
inc
int
repnz
retf
and
ins
test
ins
iret
adc
mov
jbe
ins
rcl
xor
sbb
aad
mov
inc
idiv
mov
jb
out
inc
or
mov
jns
xchg
imul
dec
mov
sbb
or
xor
data16
or
loope
mov
push
mov
shr
out
mov
pop
mov
jle
lds
or
mov
sub
dec
sbb
ins
inc
sub
(bad)
test
jle
sbb
cmc
daa
pop
mov
popf
jp
pop
out
dec
outs
adc
jb
push
xor
lods
cmps
and
or
jo
stos
inc
sub
in
pop
add
fidiv
ins
hlt
das
call
pop
call
rol
push
adc
ror
or
adc
ss
enter
fistp
stos
imul
aam
sub
es
mov
ds
push
cmps
mov
add
dec
jl
in
(bad)
mov
ins
jg
lods
push
ins
mov
add
add
cmp
ja
fidiv
jge
jae
jbe
stos
mov
int
mov
add
pop
pop
mov
aaa
mov
xchg
or
lods
leave
jecxz
scas
call
jmp
sub
sbb
call
sbb
adc
dec
int
scas
or
pminsw
xor
call
aas
sub
or
dec
cmp
and
sub
cli
xchg
push
add
mov
retf
fisub
mov
dec
lods
push
mov
pop
addr16
cmp
inc
sub
xchg
cli
cmp
xor
and
lods
rol
push
push
dec
dec
mov
jl
mov
stc
and
jno
lea
mov
mov
sub
out
gs
call
stos
mov
jb
fimul
(bad)
cwde
or
jl
cmp
rcr
stc
sbb
(bad)
in
shl
lods
(bad)
and
cmc
pop
retf
leave
add
les
popa
rcr
cmp
mov
pop
sub
push
adc
sbb
mov
loop
adc
add
jb
push
mov
jg
adc
pop
stos
add
inc
add
add
fcomp
mov
addr16
loopne
in
loop
ds
iret
dec
sub
jb
hlt
cmp
xchg
call
test
mov
loop
shl
lock
jb
or
push
and
xchg
push
ret
pop
jmp
mov
lock
dec
push
imul
add
pop
xlat
stos
fwait
stos
push
xchg
push
mov
xchg
pop
in
sti
push
fimul
push
and
ret
jns
dec
push
fmul
inc
lods
jp
inc
imul
test
and
and
sub
aaa
dec
jo
aam
mov
out
sbb
dec
adc
mov
mov
cmps
inc
test
call
sub
push
or
or
clc
test
pushf
sub
xchg
adc
adc
add
pushf
(bad)
imul
mov
push
cmp
sbb
mov
or
mov
clc
movs
std
dec
int3
gs
pop
js
ds
mov
push
jb
ret
lds
nop
dec
pop
retf
das
(bad)
xchg
(bad)
or
jno
and
(bad)
mov
or
cmp
sbb
loope
in
daa
xor
dec
adc
pop
std
jnp
sbb
add
(bad)
cmp
mov
or
sbb
ret
jl
aas
or
mov
imul
dec
int3
rcl
jl
shl
adc
cmp
pop
dec
sub
add
pmulhuw
daa
ror
sti
js
xor
scas
jmp
dec
pusha
jl
inc
data16
add
or
and
push
xor
clc
jnp
lea
test
(bad)
movs
addr16
jge
dec
mov
jg
fistp
fiadd
or
add
push
aas
add
repz
cmp
ds
xor
cmc
inc
sbb
outs
fstp
mov
sbb
mov
cmps
lds
sub
fwait
or
loop
pop
mov
fstp
popa
shl
adc
popf
mov
and
movs
popf
inc
xor
add
not
cs
cmp
jmp
mov
hlt
mov
cmc
movs
cmps
outs
pop
inc
jb
test
inc
shr
(bad)
std
in
sbb
fadd
push
aam
dec
nop
add
add
dec
sbb
imul
loopne
push
or
dec
cmps
icebp
shl
jno
or
sti
or
test
mov
mov
push
jnp
lahf
xor
xchg
xchg
sub
sub
pop
sub
jl
xor
outs
lods
outs
ror
mov
inc
and
call
ins
ss
hlt
inc
dec
sub
dec
inc
mov
aam
xchg
bound
cmp
mov
push
ins
in
dec
mov
mov
jae
out
retf
shl
je
or
cmp
arpl
mov
inc
cs
cmp
sbb
in
xlat
and
dec
cmps
mov
mov
imul
mov
loopne
jo
scas
ins
xchg
mov
test
xchg
cdq
(bad)
or
addr16
sub
data16
shl
clc
sub
in
xor
jne
jp
jb
(bad)
or
fdivr
mov
fnstcw
popa
test
jae
les
aam
sub
adc
jo
xchg
adc
mov
(bad)
leave
sub
stos
icebp
lds
popa
cld
sub
retf
inc
aam
cdq
cld
add
push
les
not
add
mov
xor
xchg
add
nop
outs
int3
sub
push
imul
push
cmc
popf
mov
xor
and
mov
cmp
add
add
mov
in
popa
jo
pop
jne
in
jmp
pushf
repnz
push
mov
ja
repnz
in
test
push
cmps
jge
mov
adc
and
rcr
push
and
call
pop
pop
repnz
inc
jecxz
lock
call
jns
mov
push
popfw
fcmovnbe
adc
test
fwait
pop
xchg
retf
pop
cmps
and
xchg
sbb
ficom
fisub
xchg
mov
clc
lea
push
pushf
xor
das
pushf
retf
xchg
bound
push
add
rol
jns
or
inc
scas
dec
mov
std
cmps
repnz
push
inc
dec
in
(bad)
fsub
pop
and
jb
add
(bad)
jne
fsub
lea
rol
sub
sbb
xchg
sar
scas
movs
ret
pop
cmps
aam
dec
idiv
jb
cwde
jmp
push
out
add
jl
add
stos
inc
cmp
lea
outs
and
mov
sbb
sbb
int
popf
inc
lahf
popa
push
push
sub
sti
(bad)
xchg
rcr
sti
push
les
popa
cmp
(bad)
xor
sar
pop
add
loope
cmp
test
add
cmp
mov
movs
push
icebp
jle
in
xchg
fstp
enter
and
lods
(bad)
pop
mov
test
ficom
fcom
out
mov
push
shr
mov
aad
ficomp
les
inc
movs
cmp
mov
or
int
push
rcr
cmp
inc
loop
pop
mov
jbe
gs
sahf
hlt
ficom
test
xor
mov
push
inc
inc
push
jmp
stc
xor
pop
push
and
movs
ins
lods
into
fisttp
es
test
(bad)
or
out
mov
adc
(bad)
aaa
sub
mov
push
sti
ja
gs
ror
inc
sbb
stc
and
mov
jbe
test
jnp
lock
mov
(bad)
lods
(bad)
mov
pop
mov
test
repz
xor
dec
sub
push
daa
sub
mov
jne
sbb
lea
repnz
mov
xchg
pop
jp
jbe
push
data16
pop
mov
push
pop
arpl
push
(bad)
and
and
xchg
xlat
jmp
mov
push
ror
(bad)
push
rol
add
push
in
push
push
rcr
push
inc
mov
push
mov
cmps
push
aad
jecxz
or
xor
add
add
aas
add
fiadd
(bad)
fs
xchg
cli
mov
(bad)
scas
ror
std
mov
dec
pop
xchg
inc
mov
mov
movs
jmp
cmc
jb
(bad)
cmc
adc
bound
inc
ins
dec
xchg
daa
nop
int
repnz
bound
ja
jmp
lock
xchg
mov
aad
jb
outs
dec
cli
jne
iret
aaa
clc
or
mov
jb
mul
inc
je
test
or
test
push
popf
popa
push
scas
scas
imul
xchg
add
push
add
in
(bad)
idiv
add
in
jno
retf
(bad)
sub
sub
loope
adc
stc
cmp
pop
jmp
push
sub
inc
pop
mov
mov
mov
std
mov
mov
das
inc
mov
call
cmps
es
jne
dec
int3
mov
inc
in
in
scas
ja
add
loopne
sahf
or
xor
adc
inc
shl
xlat
xchg
sub
dec
lods
fisttp
fidivr
mov
gs
pop
or
sbb
lods
mov
popf
mov
je
mov
out
aam
sar
jmp
fucomi
inc
sahf
rol
dec
addr16
cmp
cmp
xchg
pop
loop
push
int3
mov
sub
out
inc
xchg
sbb
pop
xor
adc
xchg
out
pushf
add
aad
out
mov
lock
pop
ins
add
ret
loope
push
mov
and
outs
cs
jno
mov
sub
bound
outs
sbb
xor
inc
add
js
test
or
cmp
inc
add
inc
aas
push
repz
lods
lods
out
gs
sub
aaa
sub
mov
rcl
imul
xlat
(bad)
inc
ss
xchg
fadd
je
repnz
sti
ins
xchg
mov
int3
lods
mov
aam
jg
push
loope
mov
hlt
std
(bad)
jne
mov
cli
xchg
or
xor
test
push
adc
push
rol
or
xor
(bad)
inc
cmp
lahf
xchg
fldcw
cmp
adc
pusha
mov
adc
int
jnp
mov
fwait
in
retf
jg
out
outs
loope
lea
cmp
push
test
test
cmp
in
pop
adc
mov
push
or
pop
es
std
stos
(bad)
cmp
loop
pop
and
ins
cmp
mov
push
or
add
arpl
ins
retf
cmp
jns
pop
bound
cdq
fst
xor
fst
arpl
call
(bad)
aad
test
div
ds
adc
test
inc
jae
inc
add
sar
aam
ret
jge
jmp
inc
ret
sub
inc
jg
stos
dec
cwde
jg
pop
mov
int
lahf
ss
arpl
in
jbe
push
fadd
inc
or
xchg
xchg
cs
jl
xor
ins
neg
cmps
neg
jmp
mov
push
pop
int3
je
arpl
push
or
or
ret
jmp
ss
pop
test
mov
lods
push
test
outs
push
dec
mov
loopne
cli
pop
adc
sub
mov
out
pop
daa
or
test
sbb
data16
ret
cmps
jbe
jle
jo
fstp
dec
cs
sti
cs
fcom
add
or
imul
pop
mov
(bad)
shr
out
dec
in
jmp
push
or
call
xchg
jl
cmp
imul
and
and
pop
test
cmps
rcl
mov
mov
jne
jmp
shl
fwait
dec
imul
lods
scas
dec
push
lds
loope
or
(bad)
inc
mov
adc
or
in
sbb
retf
cmp
adc
mov
ficom
push
add
fst
adc
das
xor
mov
xchg
add
pop
test
sti
xchg
cmp
mov
es
inc
aam
test
mov
pop
pop
cmps
and
shr
cmps
mov
imul
leave
pop
sbb
mov
call
jbe
mov
inc
mov
daa
dec
fsubr
mov
shl
add
mov
aas
data16
sti
dec
lahf
fst
dec
(bad)
xchg
lds
call
mov
pop
jbe
in
popf
and
cmp
call
mov
hlt
jae
shr
ins
cmp
(bad)
cmc
mov
inc
sbb
rol
pop
xchg
out
jle
cmc
call
outs
fisttp
pop
mov
fisub
or
inc
mov
pop
xchg
mov
mov
mov
dec
std
enter
outs
aad
adc
cmp
sub
xchg
ret
int
mov
scas
pop
pop
clc
pop
lea
fld
jle
aam
pop
aas
test
add
xchg
pop
int3
mov
push
or
ins
test
ret
fiadd
add
jae
int
and
mov
stc
dec
mov
add
pop
dec
mov
scas
push
inc
jmp
cmp
mov
push
imul
repnz
xchg
jmp
fiadd
or
add
push
aas
add
repz
xchg
icebp
fmul
std
mov
add
retf
or
test
ja
jno
(bad)
pop
popf
pushf
in
mov
out
push
inc
mov
sub
jg
xor
fmul
lods
mov
sbb
mov
stos
add
je
mov
int
jg
adc
call
scas
cwde
mov
and
xor
jg
repnz
pop
retf
inc
pop
mov
push
inc
cmp
iret
inc
cmp
mov
mov
mov
shl
pop
fcomp
fwait
and
stos
sub
xor
adc
xor
aam
scas
jge
jno
jo
xchg
jbe
inc
mul
adc
inc
pop
sti
popa
mov
ret
dec
daa
xchg
in
inc
test
mov
cmp
jnp
imul
jmp
adc
mov
jmp
jg
test
push
retf
cmps
cdq
cmc
loop
scas
pop
and
jg
mov
xchg
pmulhuw
mov
xchg
or
cmp
fbstp
and
jnp
dec
jmp
cmp
mov
rcr
out
push
popa
test
cmp
shr
xor
adc
sub
out
xor
mov
ds
add
js
and
jl
adc
aam
mul
xor
lahf
fist
cmp
xchg
xor
dec
sti
mov
jnp
cmp
push
cmp
jae
fnstcw
add
ins
leave
mov
pop
sub
pop
pop
adc
push
pop
inc
mov
cmp
out
cmp
xchg
lea
stc
stos
lods
inc
pop
mov
xchg
cmps
cwde
pop
push
mov
adc
mov
sub
loop
mov
lods
cmp
call
mov
nop
fwait
sbb
daa
mov
dec
mov
inc
pop
add
fcomp
es
mov
add
mov
in
stos
fisttp
in
pop
inc
int
mov
pusha
inc
push
push
call
sbb
int3
push
or
mov
dec
dec
cmp
pop
or
test
xor
jmp
sbb
push
jge
inc
rcr
inc
xchg
cmp
add
mov
dec
fidivr
push
out
or
arpl
test
mov
(bad)
cwde
cmp
inc
dec
mov
cmp
movs
scas
loope
in
inc
jge
aas
inc
jl
inc
loop
call
lods
xchg
cmps
mov
ja
push
dec
xor
mov
loope
xor
daa
and
mov
cmps
mov
and
sub
shr
sub
or
lock
mov
jb
dec
inc
leave
lods
dec
imul
mov
aaa
popa
push
jmp
sbb
sbb
push
out
inc
dec
pop
imul
aam
jns
clc
nop
lea
add
aaa
ss
rol
adc
jle
xor
ins
inc
aam
pop
imul
jp
sar
js
add
mov
nop
jmp
in
cmovbe
dec
add
in
aaa
jbe
sar
inc
popa
shr
in
inc
jb
hlt
jp
dec
int
bound
xor
dec
stos
push
(bad)
jae
inc
adc
mov
aam
or
xchg
jmp
jnp
sbb
sub
int3
aam
mov
push
cdq
xchg
(bad)
push
gs
ins
mov
inc
push
mov
jns
xchg
stos
(bad)
push
xlat
add
pop
fidivr
les
repnz
repnz
xor
popa
pusha
js
rcr
sbb
enter
call
clc
jns
icebp
adc
pushf
and
cmp
ja
xchg
das
jle
and
jb
stc
rol
sbb
iret
scas
adc
push
pop
sub
sub
adc
mov
xor
cmp
jb
and
imul
mov
mov
jg
lock
call
loop
push
mov
daa
call
or
and
sbb
(bad)
mov
jno
retf
ins
inc
adc
mov
jp
jg
and
data16
sahf
stc
add
mov
aaa
jne
push
inc
jp
pop
scas
ret
pop
daa
add
pushf
out
cdq
repz
cmps
add
jp
test
mov
fs
fld
out
sub
bound
sub
cmps
cmp
push
lods
popa
scas
dec
sub
test
mov
imul
mov
xchg
cwde
pop
(bad)
loop
sbb
ss
sbb
int3
push
cmps
pop
dec
push
ret
jmp
sahf
xchg
or
ret
sbb
cmp
mov
div
jne
or
and
push
or
out
jno
mov
out
repz
and
and
mov
push
out
sar
(bad)
lea
sub
sbb
jp
iret
scas
xchg
(bad)
sub
mov
inc
js
inc
cmp
div
pop
inc
sub
pop
fsub
mov
push
cmp
ins
xchg
mov
dec
xlat
mov
or
lods
jge
jnp
pusha
inc
mov
xchg
push
xchg
rcr
and
mov
fld
cmps
leave
movzx
mov
test
mov
cwde
xor
add
or
in
(bad)
fstp
loopne
std
push
ret
jae
test
ret
xchg
add
(bad)
icebp
arpl
stos
cs
(bad)
call
pop
push
cld
sub
ss
push
test
popa
inc
mov
aam
sub
xlat
idiv
mov
mov
(bad)
fidiv
in
ja
stc
inc
cli
inc
adc
and
fstp
jge
mov
mov
sub
sub
pop
push
scas
mov
div
popa
movs
pop
adc
rcr
mov
jmp
push
iret
mov
xor
cmp
pop
test
sub
xchg
xlat
into
sub
pop
fiadd
pop
cs
loopne
(bad)
(bad)
cli
dec
or
sub
dec
js
imul
test
xchg
ja
pop
loope
sub
lods
aad
dec
pop
or
in
mov
stos
mov
xor
jg
push
int3
xor
enter
stc
and
cmp
cmc
arpl
add
loop
sbb
lahf
mov
mov
loope
xchg
fnstcw
test
lea
(bad)
xchg
push
jne
gs
jne
aaa
push
fcomp
out
add
xchg
or
jmp
mov
xor
xor
jg
es
jno
(bad)
in
mov
sbb
sub
or
sbb
jae
or
jl
aam
mov
(bad)
xor
jg
(bad)
(bad)
outs
ror
inc
jae
inc
mov
jmp
dec
inc
mov
jne
test
cld
push
sbb
and
xor
cmp
sub
sbb
out
mov
jo
add
inc
push
cmps
ss
dec
xchg
or
std
cmp
enter
mov
inc
inc
pop
push
daa
add
push
fwait
sbb
add
test
push
or
jmp
mov
cwde
jmp
xchg
ret
mov
std
mov
sbb
leave
pop
lds
xchg
in
adc
push
sub
mov
pop
(bad)
mov
rcr
fs
cmps
inc
mul
int
add
jl
imul
mov
xchg
das
jae
jo
das
out
inc
mov
loopne
dec
xchg
loope
xchg
and
fist
xchg
add
int
loop
and
push
lods
les
ins
or
jb
xor
repz
sub
les
and
mov
cdq
out
imul
lock
pop
dec
(bad)
fmulp
prefetch
or
mov
adc
xchg
jmp
frstor
mov
sti
jo
xchg
cld
lods
add
aas
push
cmp
fs
add
(bad)
cwde
fwait
in
and
sbb
inc
lock
in
mov
xor
les
sbb
popa
jmp
cwde
cmps
test
popf
ins
test
lods
adc
pop
push
in
scas
sub
ins
test
int3
dec
scas
inc
mov
repnz
(bad)
(bad)
push
sbb
arpl
sub
fsubr
add
cwde
(bad)
mov
xchg
cdq
pop
(bad)
sub
lods
dec
inc
ins
pop
xchg
pop
(bad)
pushf
arpl
(bad)
pop
pop
test
xor
ret
data16
cmp
sti
cmp
mov
mov
jmp
jns
fild
or
xor
imul
jnp
xchg
pushf
repz
test
fld
xor
daa
scas
or
cwde
(bad)
lods
cmp
dec
hlt
dec
inc
enter
pusha
xor
mov
push
mul
inc
(bad)
outs
retf
xor
or
loop
(bad)
and
and
jecxz
std
jmp
push
add
and
arpl
jae
mov
push
jns
mov
push
test
pop
js
cmc
mov
push
lods
add
push
or
test
pop
push
add
bound
cwde
and
int3
mov
stos
jnp
mov
mov
aas
mov
arpl
fimul
das
pushf
aaa
adc
or
dec
mov
cld
ror
retf
mov
in
out
push
xor
dec
int3
or
cmps
ds
dec
ja
mov
jno
lds
adc
stc
add
cld
pop
cmp
jno
mov
jb
test
mov
or
out
sar
mov
test
adc
mov
adc
stos
outs
or
mov
jg
pop
stos
add
jecxz
xor
(bad)
int3
mov
pop
fstp
jbe
mov
fild
dec
add
pop
jl
dec
sub
mov
sub
pop
sbb
mul
xchg
fiadd
loop
inc
cmps
pop
mov
stos
and
fimul
xor
stc
push
mov
and
sub
pop
int3
mov
push
jb
stos
imul
enter
push
cwde
(bad)
jg
inc
div
(bad)
pop
xchg
jecxz
out
lods
and
movs
in
mov
push
pop
stos
sub
mov
cmp
adc
sub
mov
rol
inc
add
sbb
popf
ins
(bad)
repnz
test
scas
mov
mov
mov
std
js
xchg
or
ins
mov
xlat
(bad)
mov
pop
pop
add
fwait
pop
clc
jg
sub
lea
fldpi
and
add
les
fld
jl
xchg
add
fistp
clc
out
mov
mov
inc
out
ins
cs
xchg
out
cmps
fwait
outs
sub
fidivr
adc
xchg
push
jno
cmp
aam
in
cwde
add
inc
pop
pop
mov
cmps
mov
jmp
xor
das
mov
movs
mov
jmp
and
mov
les
xchg
out
(bad)
not
imul
adc
inc
pop
mov
push
jecxz
dec
jmp
jmp
adc
imul
or
pop
mov
cdq
loop
add
mov
int3
jg
dec
(bad)
inc
or
retf
(bad)
xchg
fcomp
mov
jl
pop
retf
lock
jmp
in
pop
jb
xor
xchg
or
mov
repnz
das
or
shr
shl
cmp
retf
cs
xchg
jle
in
jle
cli
adc
mov
pop
push
movs
sbb
sbb
mov
lea
xor
xchg
dec
stos
(bad)
int3
repnz
xchg
lock
fcmove
adc
sbb
adc
fldcw
jno
mov
cmps
iret
xor
mov
jecxz
pusha
fsubr
leave
mov
sbb
adc
les
call
xchg
sub
cdq
xor
pop
fidiv
in
push
xor
and
lahf
inc
out
hlt
jg
jp
push
xchg
das
popa
and
int
iret
ss
icebp
iret
adc
inc
sbb
push
and
jae
scas
rol
add
push
sub
stos
cld
add
lahf
mov
cmp
pop
pop
ds
or
out
retf
out
xchg
loope
inc
in
cs
inc
jp
xor
fimul
or
lock
loope
aas
popf
xchg
loope
cdq
jb
xor
inc
pop
and
data16
lds
cli
push
mov
pop
aas
mov
xchg
in
mov
cmps
mov
jno
jb
into
pop
into
lods
adc
lahf
add
xor
(bad)
mov
jns
and
cdq
jb
cmp
(bad)
repnz
mov
ja
cmp
mov
rol
push
jbe
push
div
add
dec
ror
push
add
mov
fucomip
icebp
push
xchg
and
imul
ror
lea
pusha
sbb
pusha
sub
or
mov
je
out
jae
movs
xor
repnz
cwde
out
adc
jne
mov
les
sahf
repnz
push
cmp
xor
push
xor
dec
adc
and
jae
push
jo
dec
popa
jne
and
lds
dec
pop
sub
cmps
hlt
sbb
enter
lds
and
dec
inc
fdivr
push
repnz
xchg
mov
mov
adc
mov
or
sub
pop
es
xchg
in
fldcw
lahf
xchg
(bad)
je
lods
pushf
push
lock
lds
push
outs
or
pop
inc
or
inc
sahf
imul
lea
jb
(bad)
shl
cmp
pop
fwait
imul
cdq
addr16
inc
icebp
push
mov
and
call
xlat
jbe
pop
fstp
int3
repz
cmp
cmp
fs
mov
retf
mov
adc
cmp
push
(bad)
call
sub
(bad)
lods
mov
push
das
popa
(bad)
fbld
cld
fcomp
jbe
xchg
sbb
push
jmp
push
retf
cmp
adc
popa
repz
mov
mov
jne
ss
mov
cmp
icebp
arpl
jne
icebp
jns
mov
jg
push
pop
pop
pushf
ret
cwde
pop
fmul
mov
pop
xchg
jno
xchg
sub
mov
daa
popf
and
ins
push
sbb
rol
cwde
pop
push
call
(bad)
enter
cdq
pop
pop
repz
cdq
mov
mov
mov
pop
cs
jle
daa
das
mov
test
ss
sub
mov
sbb
into
mov
mov
popa
repnz
fstp
cmc
lahf
xchg
scas
push
pop
fstp
les
jnp
mov
pop
jb
push
outs
int
sbb
mov
dec
jno
inc
outs
je
mov
pop
mov
sub
push
retf
mov
sar
xor
out
sbb
jmp
sbb
ficomp
ins
std
sub
xchg
mov
out
xor
lock
pusha
ret
mov
cmp
cmp
dec
cs
dec
xchg
sbb
add
fisttp
mov
mov
cmp
mov
lods
dec
cmp
popf
mov
movs
cmps
and
xchg
outs
lock
ss
jl
inc
pop
and
adc
leave
push
sub
xchg
int
xor
jae
rcr
inc
std
sbb
in
call
mov
jnp
ja
pop
mov
and
xor
addr16
mov
cdq
push
lods
xor
push
mov
cli
jns
and
mov
xchg
movs
ins
pop
fwait
pop
xor
jmp
ss
aas
fwait
js
mul
(bad)
and
push
fisttp
xchg
das
cdq
fwait
sub
(bad)
(bad)
shl
es
in
leave
adc
in
fidiv
std
push
dec
cmps
mov
mov
push
mov
(bad)
outs
xchg
cwde
repnz
xchg
pop
loop
js
sti
dec
xor
cmp
cmps
dec
jge
(bad)
pop
cmp
mov
inc
push
aam
pop
repnz
pop
arpl
cmp
pop
in
xor
jecxz
mov
pop
xor
hlt
popa
imul
push
jge
stos
inc
int3
jecxz
dec
sbb
lahf
imul
shl
aaa
xor
lods
aad
jmp
test
fcmovnu
dec
add
(bad)
mov
cli
ficom
xchg
and
daa
push
pop
add
ja
push
pop
arpl
xor
outs
add
out
retf
pop
xor
jno
(bad)
push
mov
neg
jp
xchg
mov
rcr
addr16
dec
(bad)
sbb
and
rol
cmps
ror
iret
sbb
mov
stos
jnp
jp
std
or
mov
sbb
stc
ret
dec
jne
jne
aas
xor
addr16
(bad)
in
mov
mov
cmp
stos
fcmove
outs
inc
fcom
data16
(bad)
into
dec
xchg
xor
sbb
aas
push
aaa
push
aaa
push
rcl
mov
sti
pop
loopne
shl
or
ror
mov
inc
pop
fsubr
outs
repz
jmp
xchg
xlat
add
push
int3
mov
mov
mov
jb
call
int3
in
int
imul
mov
add
sbb
div
enter
sbb
(bad)
sahf
sar
outs
rcl
jnp
aaa
cmps
xchg
sti
jo
sbb
aad
xchg
push
inc
pushf
xor
mov
pop
adc
sar
jne
lock
xor
jno
sbb
xor
jns
add
cmp
cmc
js
adc
xor
std
int
ret
or
loope
inc
retf
fwait
aad
repnz
cmps
aaa
ins
and
not
sbb
or
adc
cs
pop
rcl
xchg
dec
sub
int3
cmp
inc
jbe
out
xor
pop
popf
and
out
idiv
and
call
add
loopne
jno
retf
fistp
adc
inc
mov
sar
rol
mov
xor
stos
mov
into
sbb
ret
mov
repnz
mov
aam
jecxz
lods
pop
push
ror
pop
sub
cmc
jo
sub
icebp
mov
sbb
push
rol
add
stc
retf
nop
ret
mov
add
in
cmp
or
cmp
xlat
sahf
sub
ret
fimul
cmps
jb
inc
mov
add
scas
jbe
mov
cmc
or
or
into
popf
adc
(bad)
arpl
and
push
nop
in
inc
jbe
js
repz
js
lea
jle
xchg
pop
iret
jmp
sub
int
dec
int3
xchg
mov
xchg
mov
ror
xchg
add
jecxz
or
iret
in
xchg
ss
dec
xchg
ret
movs
jbe
xor
fmul
mov
add
mov
arpl
mov
hlt
test
push
cmp
enter
cmp
push
lea
cmps
lods
sub
dec
je
mov
jne
xchg
pop
shl
jmp
cmp
xor
cwde
test
pop
loop
sub
sub
sub
or
pop
pop
mov
xchg
inc
and
xchg
xchg
sbb
sti
loope
cmp
sub
sbb
sub
mov
fsub
enter
dec
loop
push
sub
enter
arpl
out
jnp
and
mov
js
test
cmp
dec
gs
pop
fdivr
data16
inc
int3
mov
pop
mov
bound
mov
movs
div
push
xor
mov
mov
push
std
popf
push
bound
sbb
sbb
cmp
xchg
sub
popa
in
cmp
sbb
inc
(bad)
jmp
fld
jae
pop
aad
jbe
cmp
stos
sbb
and
cmp
je
inc
in
sbb
mov
inc
inc
sbb
jnp
movs
mov
repz
(bad)
daa
xchg
leave
cmp
stc
aaa
cwde
pop
jl
dec
cld
(bad)
and
mov
xchg
sbb
movs
ret
push
mov
jl
adc
xchg
test
add
scas
test
jno
jns
inc
jne
xor
not
mov
mov
cmp
(bad)
push
xchg
cli
mov
(bad)
leave
hlt
mov
sti
jo
cli
je
and
das
jbe
jns
test
ret
mov
pusha
fstp
das
mov
xchg
xchg
sbb
adc
in
shl
sbb
sub
xchg
fs
push
gs
sub
dec
xchg
mov
lock
cmp
sub
fs
rol
jecxz
je
and
call
test
mov
sub
cmps
dec
imul
mov
aad
rol
mov
adc
xor
jg
cmp
cld
(bad)
sub
mov
stos
mov
cmp
fwait
sahf
inc
sbb
jnp
imul
movs
call
xchg
jno
retf
pop
cmp
jmp
enter
aas
jmp
ds
cli
icebp
dec
mov
mov
mul
jl
movs
mov
loop
ret
fld
aas
jle
scas
or
cmp
jns
inc
mov
mov
inc
and
xor
inc
(bad)
in
or
or
stos
jl
retf
mov
ja
xor
scas
aad
adc
mov
retf
out
mov
adc
jp
cmp
mov
mov
shr
pop
inc
add
mov
cmp
loop
jae
mov
mov
xor
fadd
push
pushf
aas
inc
sbb
out
imul
(bad)
mov
mov
cmp
jmp
jmp
iret
push
cld
pop
pop
adc
int
rcr
cmp
call
in
cmps
popf
icebp
hlt
ds
xchg
fprem
mov
mov
std
or
inc
jl
xor
mov
outs
in
jg
fiadd
or
add
add
and
pop
aas
(bad)
out
inc
iret
ins
push
mov
fild
inc
lea
inc
mov
and
mov
sbb
sbb
fcom
lea
mov
lods
xchg
cmc
cs
mov
retf
xchg
loope
mov
stos
mov
fldcw
lods
xor
sti
gs
push
xor
inc
pop
std
pop
call
bound
pop
push
jo
cwde
dec
xchg
(bad)
(bad)
adc
mov
leave
jmp
aas
jle
jne
out
iret
out
dec
imul
lahf
jno
mov
out
cmps
add
enter
ja
scas
push
xchg
jg
repz
in
cmc
inc
addr16
jmp
aad
mov
xchg
mov
jne
shl
rol
stc
and
sub
stc
rep
add
popa
loope
push
fmul
inc
push
and
adc
ja
cmp
push
xor
jo
jbe
aaa
fs
ins
out
push
into
mov
test
sub
xlat
dec
push
int3
cmc
push
cmp
(bad)
push
fwait
out
adc
add
jo
push
fistp
test
aaa
mov
fistp
xchg
das
jne
xor
adc
push
leave
(bad)
iret
movd
in
sub
add
pop
push
jecxz
cwde
pop
inc
jae
dec
jge
inc
shl
loopne
mov
sub
mov
xor
adc
push
mov
pop
pusha
mov
mov
jbe
sahf
push
or
sub
xchg
cmps
lahf
sbb
adc
or
lods
daa
push
retf
add
xchg
lods
xchg
lock
add
test
or
adc
int3
test
in
(bad)
xchg
jno
cmp
mov
fld
jbe
jecxz
icebp
cmp
test
loop
mov
jmp
push
fs
jmp
clc
cwde
add
fwait
jb
outs
int3
sbb
inc
leave
addr16
clc
mov
imul
inc
push
aad
sbb
push
movs
sar
jno
mov
mov
mov
xchg
or
sbb
sub
and
push
dec
dec
xor
neg
xor
adc
jno
icebp
adc
icebp
clc
cwde
arpl
popa
fstp
sti
xor
lds
fs
outs
call
jbe
ss
fsub
cld
push
mov
aad
mov
sub
mov
shr
stos
push
fwait
icebp
add
out
(bad)
mov
repz
ret
fdivrp
jg
sbb
xchg
or
pop
push
mov
int
(bad)
loopne
ret
jmp
repnz
pop
sbb
pop
inc
aad
bound
loope
lods
push
int
mov
test
jb
mov
sub
sahf
(bad)
cmp
lods
stos
jns
or
pop
mov
sub
or
mov
inc
xor
mov
jmp
cdq
jge
xor
imul
data16
ss
cwde
call
jecxz
loop
stos
iret
out
(bad)
push
pop
jp
cld
jmp
xor
lods
fnstsw
jmp
retf
xchg
lods
or
mov
and
pop
mov
mov
jle
retf
adc
push
push
lods
xor
out
mov
stos
fsubrp
mov
add
stos
shl
cli
mov
fwait
push
cmp
scas
pop
(bad)
xor
gs
ds
cmp
pusha
jp
push
int3
and
in
sub
sub
pop
(bad)
dec
fsub
test
sbb
icebp
dec
cmp
ror
or
(bad)
int
jge
fstp
repz
into
jmp
outs
pop
mov
adc
jo
out
std
les
pop
jge
fs
loopne
outs
repnz
add
jne
add
cs
add
ss
das
aas
inc
adc
push
dec
dec
sar
into
aad
je
int
xor
add
cmp
xchg
mov
xchg
lock
pushf
jl
cmc
fimul
xchg
hlt
push
sbb
cmps
and
mov
mov
mov
push
rol
inc
outs
mov
mov
in
out
fidivr
stos
lahf
jbe
pop
inc
adc
jb
sbb
dec
pushf
int3
sbb
mov
adc
imul
scas
cld
popf
mov
xchg
stos
jl
sbb
outs
xor
dec
sbb
test
les
ds
push
jns
add
xchg
call
stos
add
push
jns
jp
push
stos
jnp
mov
ins
xor
call
cmp
add
push
in
pop
mov
mov
dec
imul
mov
jne
shl
jmp
loop
call
add
ds
jle
jg
sub
jecxz
addr16
mov
iret
ret
xlat
dec
push
mov
fdivp
clc
fdiv
pusha
cmp
loop
add
shl
add
add
cmp
lds
movs
mov
inc
scas
mov
sti
test
hlt
ret
dec
fmul
and
cmp
mov
dec
dec
(bad)
es
mov
jns
pop
div
add
dec
test
gs
push
imul
js
push
ss
xchg
bound
cmc
mov
xchg
movs
inc
push
or
dec
fs
stc
jnp
enter
movaps
cmp
out
or
ins
and
or
mov
pop
repnz
push
icebp
sbb
push
add
repz
jne
outs
pop
pop
ja
pop
js
pop
retf
xor
jo
cwde
pop
adc
mov
in
outs
cmp
rcl
pop
sbb
inc
mov
and
inc
xchg
test
ror
fdivr
ficomp
jle
idiv
fist
mov
in
mov
stos
jns
out
cs
icebp
out
sub
pop
dec
mov
and
(bad)
pusha
lock
mov
mov
popa
data16
mov
test
jl
cbw
inc
dec
jle
sbb
sahf
inc
in
push
or
in
les
mov
push
imul
retf
in
dec
rcl
jne
imul
fld
in
mov
fdivr
inc
add
and
sub
sub
cs
mov
mov
adc
sbb
mov
pop
stc
push
(bad)
or
int3
sub
mov
mov
adc
or
loop
movs
dec
mov
add
iret
xor
jl
fdiv
sub
push
add
pop
jns
fisubr
dec
ins
push
stc
test
rol
mov
sti
cmp
jns
cmp
push
js
scas
in
jle
pop
ss
lahf
mov
mov
test
cmc
sub
mov
inc
xchg
scas
(bad)
pop
fxch
mov
add
fsub
jno
xchg
enter
and
leave
test
cmps
cdq
adc
mov
fldcw
jmp
and
mov
jecxz
pop
int3
rcl
jo
scas
xor
loop
pop
cmp
xor
add
mov
int
lock
mov
cdq
mov
sbb
add
pop
(bad)
leave
xchg
and
out
mov
ins
add
sbb
scas
es
jge
js
movs
dec
fsubr
xor
jno
inc
jbe
and
repnz
into
leave
xchg
jbe
cmp
push
mov
xchg
inc
mov
or
std
stos
jae
cmp
shl
push
sti
inc
xor
cmp
popa
sbb
dec
scas
jecxz
or
pop
and
xor
sub
aad
repnz
pushf
xchg
sahf
xor
sbb
test
stc
outs
xor
cli
mov
jmp
pop
fs
ja
mov
cwde
sub
inc
daa
pop
neg
push
mov
mov
outs
sahf
in
fstp
es
and
xchg
loop
sahf
jecxz
ret
fwait
shl
push
fmul
cmps
popa
aam
fs
scas
inc
and
lock
mov
jp
in
xchg
scas
iret
movs
xor
sub
scas
outs
xor
push
or
fcmovnb
imul
dec
outs
xchg
fsub
pop
jge
push
in
jecxz
fist
and
jns
lahf
xchg
or
mov
pop
cwde
cdq
aaa
fdivrp
sqrtps
fwait
scas
icebp
lahf
sbb
push
arpl
add
repz
jp
out
cmp
iret
(bad)
pop
jmp
jb
das
icebp
idiv
popf
repz
iret
mov
cmp
or
imul
lods
dec
movs
loopne
cmp
out
retf
pop
mov
shl
leave
in
ret
dec
pop
test
xchg
bound
dec
adc
lods
lds
clc
mov
retf
mov
addr16
sbb
adc
fld
push
or
jo
or
ins
test
(bad)
daa
dec
pop
(bad)
neg
aam
mov
sti
cmp
pop
fldcw
repz
and
gs
fstp
outs
mov
push
out
int
fwait
push
movs
outs
enter
retf
pop
adc
adc
movs
enter
jg
jl
imul
lahf
sub
fsubr
ins
dec
add
jmp
and
popa
movs
lea
pusha
or
xchg
push
adc
mov
rcr
inc
cmp
jmp
mov
dec
push
daa
repz
jnp
cmp
fstp
js
lods
dec
mov
fcmovnb
(bad)
pop
ret
shl
dec
scas
stc
jle
mov
mov
out
out
clc
test
xchg
test
pop
push
mov
jmp
jnp
arpl
call
(bad)
xchg
fabs
daa
out
das
(bad)
(bad)
pusha
(bad)
imul
adc
sub
mov
fadd
add
xlat
push
or
imul
pusha
xchg
mov
loope
aas
mov
dec
add
pop
pop
lods
push
sbb
and
xlat
in
pop
sti
mov
leave
adc
ret
push
mov
mov
jg
loopne
(bad)
out
(bad)
call
scas
pop
jns
stc
mov
fwait
dec
int
in
es
mov
iret
sti
les
fisub
xlat
int
jle
sub
cdq
mov
arpl
pop
mov
leave
(bad)
and
rcr
fild
inc
push
frstor
sti
jmp
xchg
sti
daa
int3
fidiv
cdq
packssdw
mov
aas
adc
pop
xchg
rcr
nop
fdiv
cmp
mov
ss
mov
dec
cli
lods
jp
sbb
in
outs
test
lahf
mov
(bad)
jae
fcomip
mul
arpl
fcmovne
sub
rdpmc
in
lock
neg
bound
mov
int3
(bad)
test
add
inc
or
mov
add
mov
stos
mov
sbb
out
ds
cwde
or
pop
scas
mov
and
retf
or
add
ins
xchg
xlat
pop
or
pushf
sub
(bad)
mov
pop
sub
push
xchg
pop
jae
cmp
in
icebp
xor
pop
sti
out
pop
push
movs
dec
jecxz
cld
xchg
pop
jecxz
std
and
cli
adc
jne
add
jle
loop
and
inc
cmp
cdq
push
(bad)
stc
push
cmp
sbb
or
jno
rol
xor
sbb
rol
push
rol
pop
pop
jmp
retf
jle
or
lock
push
xor
ins
scas
arpl
clc
and
mov
int
pop
shr
sti
pushf
sub
add
repz
repnz
outs
jbe
lods
pop
xor
stc
jne
(bad)
out
lods
push
add
fistp
scas
jmp
aas
cmp
jb
out
jl
cmp
pop
sar
(bad)
repnz
xor
cmps
outs
cmp
mov
xchg
jo
inc
jne
std
jne
mov
outs
out
not
mov
mov
pop
mov
pop
mov
sbb
or
fwait
sub
aas
or
xor
lods
add
add
(bad)
adc
cdq
pop
mov
push
jae
dec
xchg
aad
inc
sahf
in
dec
fisubr
cmp
fistp
push
leave
pop
leave
inc
push
scas
rol
mov
in
mov
call
leave
icebp
sti
aam
imul
jge
ret
ss
idiv
jmp
(bad)
leave
mov
cdq
push
push
cld
push
adc
iret
mov
icebp
fisubr
in
push
fidiv
jecxz
in
mov
lds
fidivr
mov
rcl
sub
rcl
bound
(bad)
addr16
mov
mov
xor
inc
stos
call
mov
in
(bad)
cs
or
adc
cdq
add
ja
pop
jmp
lods
mov
fisubr
add
xchg
xchg
add
cdq
mov
divps
jle
je
jge
clc
mov
(bad)
daa
imul
int3
les
lds
ds
xor
cmp
(bad)
dec
jb
repz
std
iret
out
adc
das
repz
sbb
out
pop
sbb
stc
xchg
adc
fidivr
les
ret
lds
inc
sub
push
push
add
pushf
or
jecxz
outs
pusha
cmp
and
rol
inc
dec
pop
and
xor
into
aas
mov
mov
push
aas
lahf
mov
je
fist
push
cdq
and
pop
cmp
cmp
scas
adc
mov
add
mov
neg
fwait
mov
xchg
cmp
js
loopne
add
jb
ss
push
inc
push
idiv
icebp
jge
mov
sbb
jmp
pop
dec
cmp
bswap
adc
jbe
pop
cdq
push
scas
mov
pop
mov
xchg
and
ror
mov
mov
gs
push
out
(bad)
sub
loope
jecxz
std
inc
sbb
in
ja
xchg
mov
push
ret
adc
lahf
inc
mov
scas
dec
xor
jo
in
sti
out
js
mov
cmp
and
and
js
es
imul
(bad)
out
(bad)
mov
pop
cld
sti
push
aaa
mov
sti
jns
push
xlat
out
out
pop
sbb
mov
or
pop
shl
cmp
add
out
xchg
xchg
mov
js
ret
adc
dec
js
xor
js
mov
xlat
cdq
push
xor
stos
push
sbb
jne
inc
stos
int
lahf
mov
ins
push
in
sub
pop
movs
mov
vsqrtsd
and
push
leave
mov
ret
(bad)
(bad)
jb
jle
add
das
sbb
iret
mov
fistp
jne
mov
ret
mov
int
div
(bad)
jge
stos
ror
into
add
mov
mov
(bad)
or
sbb
les
lods
adc
mov
xor
ins
dec
ffree
stos
ret
xlat
out
xor
and
lahf
stc
test
cs
stos
mov
inc
push
sub
imul
movs
cs
movs
pusha
scas
jmp
mov
xor
xor
mov
(bad)
in
pop
inc
cmp
icebp
int3
jns
icebp
jg
ds
into
jo
pop
iret
cmp
pop
idiv
jl
fistp
(bad)
es
pop
(bad)
addr16
ret
cmp
mov
retf
in
add
or
js
inc
jbe
into
cwde
daa
cmp
cmp
and
adc
mov
test
dec
jno
fadd
in
jne
xchg
jbe
mov
xchg
dec
or
pop
and
sti
and
outs
ins
jo
jecxz
mov
cmp
scas
dec
pop
aas
fadd
data16
inc
mov
or
aad
mov
lods
mov
xor
adc
sahf
dec
out
in
ins
repz
loopne
das
test
fistp
mov
jo
pushw
dec
cmp
cld
loopne
sahf
jg
stc
or
stc
jns
jns
neg
add
(bad)
mov
movs
popa
mov
push
rcl
mov
out
sub
sbb
mov
push
xor
pop
mov
(bad)
mov
jb
lahf
ja
pop
in
jle
and
jno
jl
or
in
sbb
cdq
jnp
push
lock
inc
cmp
das
shr
jns
xor
pop
add
xor
movs
mov
push
xor
aaa
(bad)
mov
mov
btr
or
fwait
stos
(bad)
pusha
cs
stos
(bad)
fbstp
cmp
(bad)
jbe
outs
in
aam
lock
dec
daa
xchg
sbb
(bad)
pop
(bad)
push
jl
fwait
mov
pop
jmp
test
aas
stos
jge
pop
xchg
mov
scas
push
(bad)
in
push
add
xor
pop
arpl
or
jmp
xchg
repz
lods
fisubr
js
inc
fnstenv
push
mov
sti
icebp
mov
mov
and
out
and
fst
test
(bad)
fs
enter
call
aaa
pop
sti
arpl
cld
int3
cs
aas
sbb
sub
outs
jb
xor
loop
xor
sub
stos
mov
sbb
dec
int
imul
lahf
out
jb
sbb
fidiv
std
dec
push
outs
addr16
arpl
(bad)
mov
lods
scas
jbe
shl
arpl
cmp
and
imul
popa
xchg
xchg
mov
aaa
mov
and
ret
xor
out
xchg
sti
inc
pop
jmp
retf
pop
or
jmp
or
mov
(bad)
and
jl
imul
sub
push
jns
enter
jg
xchg
xchg
mov
data16
loopne
out
out
push
cmp
mov
les
mov
fst
mov
inc
pusha
movs
out
pop
(bad)
xor
dec
mov
mov
popa
sbb
je
in
xchg
or
pop
xchg
into
mov
and
out
add
xchg
xchg
and
fnstenv
xchg
pop
das
sub
sbb
popf
dec
imul
scas
jle
(bad)
cs
jecxz
mov
fstp
fild
fist
push
fwait
add
cdq
xchg
push
pop
adc
iret
jecxz
mov
pushf
cld
inc
lds
aaa
dec
sahf
gs
pop
(bad)
mov
daa
pavgb
dec
pop
es
sbb
add
dec
cld
add
shr
xor
mov
add
dec
xor
sbb
sub
inc
mov
jae
push
push
imul
sub
mov
mov
leave
add
jbe
cli
and
aad
setne
retf
xor
sub
mov
ret
cs
ja
jle
fwait
sahf
sub
cmp
ret
jb
pop
outs
out
out
xchg
sbb
cmp
(bad)
hlt
call
ret
or
stos
gs
int3
daa
iret
push
pop
add
and
enter
(bad)
and
(bad)
sbb
jl
xchg
cld
shr
sar
xor
dec
stos
cmc
pop
loope
es
ss
cmp
repz
arpl
movs
inc
adc
and
xor
sbb
push
push
mov
mov
pop
inc
mov
fimul
into
jmp
jb
xorps
mov
pop
inc
es
hlt
es
and
lsl
clc
jne
ins
in
xor
cmps
mov
jae
dec
fst
jae
stc
test
mov
sbb
les
sbb
movs
rol
push
div
and
push
add
push
jge
push
ins
fistp
cmc
out
iret
inc
jg
popf
fsub
cmp
fsub
shr
ins
mov
push
mov
leave
jo
retf
in
dec
xchg
xor
push
cld
bound
xchg
retf
or
cld
dec
sbb
cmp
pop
xchg
cmp
jl
sub
icebp
cmp
cld
xchg
ss
inc
jne
cmp
aaa
or
inc
and
mov
rcr
fild
imul
imul
aam
push
dec
mov
mov
retf
sub
in
push
sub
das
mov
arpl
ins
mov
out
sbb
xor
adc
jno
jmp
push
aad
inc
adc
and
xchg
pop
sbb
xor
std
repz
and
popa
imul
in
(bad)
sub
push
jnp
inc
ins
mov
ja
repz
repz
into
xor
clc
popf
inc
mov
pop
clc
adc
xor
push
jl
xor
push
loop
inc
mov
push
rcl
pop
in
dec
adc
jl
lea
jae
shl
jmp
cdq
xor
adc
mov
jmp
loope
adc
fild
mov
jmp
test
cmp
and
aaa
movs
ins
stc
cdq
fstp
mov
jne
mov
aas
adc
pop
mov
fmul
cmp
in
pushf
jecxz
fdivr
add
dec
in
pop
fdivr
cwde
ja
mov
fimul
xor
cld
jl
aaa
js
sti
xchg
std
sti
cli
(bad)
inc
jg
div
fisubr
or
add
add
and
inc
inc
dec
cmp
scas
push
rcr
mov
jp
mov
jae
fbld
retf
not
in
or
sub
xchg
fdivr
pop
jnp
xchg
test
inc
cs
pop
std
add
std
das
cmp
dec
inc
ret
sbb
pushf
push
pop
in
sbb
loop
das
push
and
stc
mov
sub
(bad)
jp
lods
jmp
ins
jl
mov
pop
dec
pop
das
push
std
jecxz
xchg
int3
dec
rcl
std
adc
xchg
movs
ds
dec
mov
in
retf
adc
fisub
mov
sbb
jecxz
sub
hlt
(bad)
jg
retf
addr16
fisttp
pusha
pop
mov
(bad)
pusha
rep
call
sbb
pop
mov
jne
jp
mov
mov
stos
scas
aas
(bad)
cmps
outs
cwde
in
push
scas
clc
pop
or
sbb
lock
sar
cld
les
retf
jae
mov
mov
cmps
inc
call
cdq
(bad)
mov
daa
pop
in
jge
inc
adc
pop
rcr
cmps
mov
and
imul
psadbw
xchg
xchg
mov
xlat
add
retf
loop
lock
jno
add
sub
mov
xchg
add
mov
call
xor
outs
jmp
jge
xor
or
or
(bad)
(bad)
lods
sbb
add
jle
xchg
mov
cmp
adc
cld
scas
and
mov
push
sti
xor
(bad)
push
push
retf
int3
dec
gs
leave
add
pop
fmul
(bad)
jbe
or
xchg
pop
sbb
jg
or
lods
xor
jb
cld
shl
xor
xlat
neg
loope
adc
stc
xchg
xor
into
out
bound
nop
sub
jb
dec
xor
out
iret
inc
jae
fdivr
mov
add
in
clc
call
xchg
mov
lea
int3
leave
adc
sbb
push
inc
bound
mov
xchg
das
scas
das
xor
dec
jmp
inc
jmp
xor
clc
pop
sbb
xor
retf
daa
xchg
jne
rcr
cdq
mov
add
call
inc
jge
pop
outs
push
icebp
paddb
cmp
jmp
retf
(bad)
movs
cmc
jmp
cmp
pop
mov
jnp
inc
xchg
in
lods
and
ins
int
test
(bad)
div
adc
ss
sti
mov
add
sbb
clc
fdivr
sbb
cmp
pushf
xlat
xor
mov
mov
(bad)
daa
xor
retf
pop
xchg
add
xchg
pop
enter
sub
inc
repz
repz
sub
pop
test
dec
push
sub
lahf
push
sbb
popa
xchg
pusha
sbb
or
sbb
or
aad
cmp
pop
ins
pop
test
or
and
and
pop
rcl
dec
mov
out
cmp
out
in
push
jmp
push
pop
ret
bound
outs
stc
push
pop
mov
mov
jo
aas
in
data16
mov
aam
imul
out
mov
pop
imul
add
ret
cmp
call
fs
xor
xor
cli
imul
dec
icebp
pop
pop
ins
mov
mov
mov
sahf
mov
mov
mov
fmul
and
loopne
jmp
fidiv
jns
xor
pop
test
test
in
sub
inc
out
jg
mov
push
cwde
repnz
outs
xor
xchg
mov
les
xor
daa
cmc
fadd
lock
aas
int3
rcr
repnz
lods
mov
sub
les
scas
rcl
cmp
add
ins
xchg
add
lahf
out
lea
sub
jmp
jg
bound
dec
into
pop
out
adc
jg
sub
pop
cmp
cdq
shl
adc
adc
jns
pop
sub
pop
les
sub
pop
imul
pusha
lds
mov
mov
xor
hlt
test
aad
(bad)
ror
sbb
jae
aaa
mov
sub
mov
or
adc
out
cmp
das
mov
lods
out
test
pop
haddps
jbe
cmp
std
sbb
cmc
push
ror
and
add
inc
or
jbe
mov
mov
dec
dec
push
pop
cmp
je
scas
addr16
loop
inc
push
pop
scas
(bad)
jmp
test
out
jg
dec
out
(bad)
int3
test
test
loopne
pop
(bad)
in
loop
or
clc
adc
shr
adc
xor
shl
mov
and
inc
nop
ret
out
xor
adc
xor
dec
jecxz
inc
mov
shr
cdq
jb
xchg
xor
jo
gs
jecxz
std
dec
or
div
lahf
stos
or
call
inc
sbb
cmp
js
fdiv
jns
fucomip
pop
or
cmp
idiv
pop
push
inc
mov
aaa
hlt
pop
add
dec
fs
sbb
pop
fidiv
ja
add
mov
clc
xor
mov
inc
dec
popa
adc
mov
int3
scas
fist
sbb
pop
pop
mov
pop
or
jecxz
pop
cld
data16
add
clc
mov
jns
cmp
in
rol
pop
test
fidivr
sti
ja
sbb
and
inc
cli
sbb
xchg
cdq
not
in
inc
movs
ret
jae
mov
gs
icebp
and
inc
dec
gs
cmps
sub
test
xchg
aaa
loop
inc
sbb
jb
in
jnp
pop
cmp
hlt
ror
add
popa
mov
mov
pop
sbb
sbb
pop
or
dec
sahf
(bad)
cwde
(bad)
int3
enter
push
clc
pushf
in
sub
sbb
fdivr
popa
mov
mov
xchg
aam
xor
sbb
data16
data16
inc
lods
dec
stc
lods
(bad)
sbb
mov
test
dec
ret
aaa
shl
cmp
jno
out
enter
xchg
std
das
rol
adc
or
out
mov
int
push
inc
repz
sti
retf
lock
into
arpl
icebp
int3
jns
(bad)
add
sbb
loop
arpl
test
lea
push
call
jl
mov
adc
xchg
daa
dec
mov
xchg
dec
aam
jb
jne
sti
jo
jp
fsub
push
cmovl
xor
adc
popf
(bad)
push
aad
jle
aad
inc
jo
jecxz
pop
jne
pop
retf
dec
cli
je
push
sbb
jb
addr16
addr16
cmps
push
dec
xor
aas
ficom
inc
les
scas
sbb
and
or
les
adc
ror
xchg
loopne
mov
(bad)
les
mov
shl
xchg
or
add
ins
cmp
repz
inc
pop
adc
gs
dec
push
aam
mov
repnz
fcomp
bound
add
in
inc
cmp
sub
rol
xchg
push
sub
add
mov
test
xchg
fs
inc
loope
and
add
push
retf
dec
shl
sahf
fyl2x
push
shr
fimul
loopne
lods
add
adc
jno
jne
fwait
std
xchg
(bad)
push
sti
sub
add
gs
aam
xchg
mov
pop
fadd
adc
cmp
ins
hlt
push
cld
movs
stos
cmp
dec
iret
mov
and
and
mov
shr
cli
dec
jge
xlat
iret
fisttp
fbld
test
xchg
mov
retf
gs
mov
adc
fiadd
or
add
add
and
call
sub
pop
enter
pop
hlt
sbb
push
and
(bad)
mov
dec
mov
mov
pop
dec
rcl
jmp
xchg
cmc
test
xchg
mov
aas
or
and
sub
mov
shl
and
(bad)
jp
hlt
retf
je
xchg
push
adc
pop
pop
jne
jg
inc
xchg
pop
lea
call
pop
mov
xor
out
add
or
lds
repz
sbb
stc
out
cs
sbb
loop
movs
stos
lahf
fisttp
jg
xor
aaa
ja
fstp
cmc
sbb
pop
(bad)
shl
jno
pop
mov
jecxz
sbb
out
or
loope
mov
ror
cld
xchg
loop
out
addr16
loopne
aaa
pop
pop
adc
mov
jg
inc
sub
std
sar
xchg
and
dec
cdq
mov
out
pop
and
push
mov
inc
cmps
mov
xor
xchg
(bad)
add
push
dec
add
jle
cmp
jnp
cmp
inc
pop
sbb
outs
sti
out
push
mov
cwde
mov
scas
lds
loop
pop
add
imul
or
adc
and
rcr
xchg
stc
pop
ret
test
adc
add
mov
stos
leave
retf
gs
sbb
xor
les
xchg
jo
stc
push
mov
inc
and
fsincos
jp
dec
inc
inc
adc
scas
and
es
cwde
aad
push
ins
repnz
cdq
movs
adc
xchg
aaa
sahf
pop
push
jbe
cmc
inc
mov
fst
jp
and
imul
imul
fisttp
xchg
jnp
and
adc
popf
ret
mov
iret
xchg
and
jge
scas
hlt
add
mov
iret
mov
clc
sbb
pop
fs
imul
xchg
daa
jl
sub
mov
push
popf
dec
mov
fisttp
test
push
mov
push
jno
sbb
into
mov
int
mov
mov
stos
jge
(bad)
imul
imul
repz
push
pop
pop
push
retf
xor
jecxz
mov
cli
sub
sub
hlt
fnsave
fisub
xchg
jecxz
cmp
into
fwait
inc
mov
cmc
add
sar
stc
test
lods
sub
sbb
add
test
xor
pop
les
inc
add
xor
subps
jmp
sub
in
cmp
inc
outs
jno
pop
ret
xchg
int3
enter
xchg
aas
push
scas
mov
xchg
rcr
les
sub
cmp
pop
push
loopne
xor
cmp
fmul
mov
mov
jmp
mov
adc
int3
retf
mov
mov
xlat
js
xor
int
loope
test
cmc
jge
addr16
adc
jo
in
push
mov
xchg
jnp
mov
jns
mov
cmps
shr
sbb
sbb
lock
cld
xchg
sub
or
repz
adc
dec
mov
ins
in
ja
cmp
sub
cld
dec
or
fcmovnb
jae
jle
(bad)
mov
mov
cld
test
dec
push
icebp
inc
pop
adc
inc
xor
lods
or
sub
mov
adc
jecxz
and
xchg
adc
std
inc
adc
mov
and
cmps
cli
and
out
ret
out
daa
pop
xor
ud2
or
int3
fsubr
add
mov
xor
mov
xchg
pop
adc
xor
fsub
imul
push
(bad)
ins
enter
gs
sub
retf
mov
loope
int3
inc
retf
push
pushf
ins
out
and
ds
mov
xchg
es
xor
jo
bound
bound
jl
mov
jge
retf
test
cld
push
mov
and
(bad)
mov
aam
cmps
jge
ins
push
sbb
fcomp
retf
add
xchg
or
pop
std
adc
cli
push
dec
mov
or
rol
pusha
icebp
inc
bound
repnz
inc
dec
call
sub
or
jo
dec
psubq
push
popa
popa
lods
in
fimul
mov
jae
std
leave
das
ret
in
hlt
or
inc
adc
pop
dec
push
jg
and
push
out
add
dec
arpl
fs
pop
cmp
dec
mov
test
add
in
cs
repz
leave
loope
push
push
push
pop
imul
test
or
scas
(bad)
mov
pop
lods
test
(bad)
push
and
test
fistp
add
hlt
mov
mov
pop
mov
or
imul
mov
sbb
cmp
sbb
and
inc
lock
cs
mov
fwait
mov
mov
add
mov
les
inc
add
out
cmps
bound
push
ja
(bad)
mov
call
pushf
jmp
test
add
stos
enter
ret
sub
ds
mov
ds
mov
pop
mov
mov
mov
add
mov
repnz
mov
pop
mov
bound
dec
imul
lahf
xchg
test
stos
stc
inc
out
mov
adc
not
push
mov
adc
fs
add
std
mov
scas
xchg
jle
test
inc
and
mov
push
xor
mov
add
pushf
loop
repz
sub
int3
inc
(bad)
pop
cmp
addr16
mov
gs
jmp
mov
in
test
in
jno
mov
scas
jmp
retf
icebp
(bad)
sbb
push
stos
dec
cmc
sub
jl
push
push
push
jle
xor
dec
sbb
(bad)
(bad)
adc
in
mov
aaa
repnz
add
fsub
ficomp
jle
lods
lds
movs
das
cmp
inc
jae
inc
fwait
push
fild
xchg
cs
ss
ja
cmp
pop
cs
mov
jns
mov
imul
lahf
test
cld
cmps
jo
adc
mov
push
les
mov
sub
jnp
cmp
adc
mov
in
fmul
pop
or
dec
stos
popa
dec
setae
std
sbb
rcl
xor
sub
push
ficomp
sar
(bad)
mov
shl
xchg
shld
sbb
(bad)
inc
mov
(bad)
scas
dec
outs
adc
xor
lods
inc
stc
xchg
lahf
pop
scas
cmps
test
xor
mov
xchg
mov
cld
shl
jmp
fbstp
in
cmp
ss
dec
nop
adc
scas
icebp
daa
add
xchg
(bad)
cmps
icebp
mov
pop
jmp
adc
sub
jp
push
jmp
mov
lea
or
pusha
adc
push
stc
out
inc
inc
mov
popf
lds
es
movs
dec
xchg
wrmsr
arpl
loope
jg
cmp
mov
out
xor
mov
cmp
add
idiv
fmul
push
int
loopne
and
dec
out
sbb
test
cmc
pop
cmc
sub
pop
cli
mov
cs
push
sub
sub
cmp
and
jmp
jb
cmp
repz
(bad)
sbb
scas
not
std
sub
jb
outs
push
jo
into
mov
movs
(bad)
pop
pop
test
xchg
ins
push
out
in
je
enter
mov
inc
cwde
mov
xchg
test
mov
jmp
aaa
xchg
(bad)
adc
stos
div
dec
std
adc
sub
scas
test
les
push
mov
ficomp
mov
xor
pop
mov
or
and
and
fadd
jmp
mov
mov
retf
inc
push
test
adc
arpl
push
(bad)
xlat
push
mov
mov
fld
sbb
inc
jnp
and
xchg
in
xor
std
cmps
es
mov
push
xchg
mov
xchg
push
cmps
hlt
xor
push
inc
pop
shl
jmp
mov
jl
(bad)
rcr
out
pop
idiv
cs
mov
or
add
add
add
add
adc
outs
pushf
fs
inc
jmp
test
ret
gs
mov
mov
test
mov
lds
scas
addr16
cli
mov
paddd
cmp
sub
mov
sub
sbb
xor
shl
aam
std
fldenv
xor
loopne
fcomp
push
and
neg
cdq
inc
adc
in
icebp
fs
sti
xchg
ins
mov
xchg
jmp
ss
mov
xchg
jmp
mov
push
sbb
lahf
(bad)
mov
jmp
push
xchg
arpl
mov
imul
loopne
(bad)
jmp
in
mov
sahf
fistp
xor
pop
test
dec
mov
cmp
lods
js
jnp
iret
mov
jo
cwde
push
jmp
adc
jg
(bad)
jbe
jb
jmp
xor
stos
inc
lods
mov
mov
or
test
xchg
test
or
jp
cmc
cs
das
movd
aad
xchg
mov
test
or
mov
xor
sar
(bad)
repnz
shl
lahf
xchg
jmp
dec
in
sub
add
and
xchg
(bad)
das
jge
jg
fiadd
or
add
add
adc
cmp
adc
stos
ret
addr16
scas
push
add
test
mov
mov
shr
shl
dec
or
and
fld
inc
aam
retf
test
push
test
add
dec
dec
adc
xor
push
dec
xor
xchg
cmp
call
retf
rcr
push
fsubr
or
mov
lods
inc
pushf
inc
fsub
inc
inc
call
jne
sub
pop
push
jnp
js
imul
sub
mov
mov
xchg
ret
or
loopne
pop
cwde
popf
scas
aad
adc
test
rol
scas
mov
call
js
in
fadd
scas
pop
out
mov
or
mov
or
xchg
or
arpl
push
xchg
mov
sbb
sub
adc
push
lea
imul
int3
add
out
stc
test
pop
or
or
ins
xchg
pop
fnsave
xor
dec
fld
pop
shl
or
mov
fmul
push
push
jns
dec
mov
test
lock
mov
dec
add
dec
mov
or
nop
pusha
repz
mov
mov
sbb
ins
sbb
push
adc
jb
imul
cdq
aad
aad
adc
xor
fidiv
push
pop
sub
inc
add
mov
sub
popa
(bad)
in
add
add
fldenv
mov
add
push
and
(bad)
mov
je
loopne
and
shl
pusha
add
pop
push
fadd
add
loope
dec
or
outs
jns
and
xor
cwde
mov
mov
add
sub
mov
mov
adc
repz
xchg
fbstp
adc
repnz
mov
aad
xor
or
imul
mov
pop
(bad)
mov
in
shl
stos
mov
mov
and
sub
xor
shr
pusha
(bad)
sar
rol
in
test
xor
mov
add
xor
and
popa
not
lahf
cwde
retf
xchg
scas
xor
ins
push
aaa
test
(bad)
adc
les
inc
jo
(bad)
imul
mov
push
push
aad
(bad)
fsubr
xchg
xor
cdq
inc
dec
push
cmp
mov
retf
fld
pop
adc
pop
dec
sub
out
lds
frstor
mov
xchg
adc
sub
xchg
imul
dec
rcl
pop
mov
cmp
cmp
xor
mov
add
xor
or
nop
add
loop
or
jno
dec
imul
shl
les
adc
shr
pop
test
cmp
cwde
inc
pusha
jp
lds
or
pop
jl
pop
sub
int3
inc
ja
enter
mov
adc
sub
push
mov
sbb
adc
and
fsub
test
and
mov
sbb
xor
stos
add
adc
adc
sbb
aaa
not
xor
and
(bad)
pop
xor
ret
cld
and
push
or
jo
push
add
ins
sti
test
imul
popf
xchg
ret
pop
mov
leave
(bad)
xchg
inc
adc
dec
fldenv
loopne
shr
adc
xchg
add
aam
pop
and
imul
out
sub
push
push
xor
ss
cmp
mov
dec
sub
sbb
jb
aad
mov
jne
adc
or
jl
xor
cdq
xchg
(bad)
pusha
inc
add
xor
mov
push
inc
icebp
cmps
mov
pop
ins
mov
(bad)
and
and
mov
ja
lock
lods
aam
or
jl
push
inc
pop
out
int
lods
out
jno
sbb
jp
pop
mov
outs
rcl
and
bound
push
and
stos
and
xor
mov
sub
jb
in
adc
adc
lea
add
jb
cmps
mov
sub
daa
xor
les
or
scas
stos
out
sub
pop
xchg
xlat
add
je
adc
and
mov
test
xchg
mov
inc
cmp
and
adc
xchg
mov
in
cs
sbb
mov
mov
mov
inc
mov
pushf
sub
inc
mov
call
ror
int3
cmp
adc
mov
adc
jne
test
jo
jns
pusha
adc
test
bound
rcr
shl
cs
adc
and
adc
add
clc
ja
push
test
push
cwde
iret
mov
sub
sbb
pop
pop
inc
mov
mov
jo
je
repz
mov
lds
(bad)
int3
mov
pop
mov
loop
push
and
push
push
sbb
out
cmps
out
mov
inc
jne
(bad)
(bad)
push
mov
call
data16
add
xchg
and
adc
fmul
or
push
inc
xor
imul
push
mov
mov
jmp
fisubr
inc
in
test
mov
rol
jecxz
jo
mov
inc
or
xlat
push
je
fnstsw
ret
push
out
or
and
lea
arpl
inc
add
and
cmp
push
int3
popa
stos
out
inc
lods
test
jge
ss
loopne
mov
sub
mov
fisttp
mov
push
stos
shl
pop
xor
out
out
pop
popf
add
xchg
add
adc
adc
inc
call
popa
jo
mov
jge
fdiv
push
enter
loop
outs
add
add
mov
push
bound
loopne
pop
sbb
mov
fstp
push
sbb
adc
mov
adc
pop
sub
xor
sub
cwde
jmp
(bad)
in
sub
jne
jns
pop
test
es
push
fst
jge
int3
stc
add
add
in
pop
adc
xchg
push
fidiv
int3
arpl
test
push
sub
xor
popa
or
je
xchg
jbe
xchg
fcomp
or
test
(bad)
in
fwait
ss
scas
and
add
pop
push
icebp
jmp
add
jne
push
pop
dec
sbb
cmp
sbb
mov
adc
push
push
inc
and
retf
shr
add
jge
ins
adc
push
test
inc
sub
or
and
dec
int3
(bad)
and
pusha
and
cmps
cwde
cwde
cwde
or
retf
iret
loop
stc
mov
clc
sbb
jbe
mov
push
push
fstp
mov
add
and
clc
cdq
neg
cmp
loope
cmp
iret
push
in
scas
fst
jno
xchg
leave
popf
inc
les
and
add
bound
add
pop
dec
mov
adc
mov
cs
mov
adc
cmc
adc
mov
cmp
xor
les
loop
loop
pop
mov
sub
pushf
in
adc
inc
cli
cmp
fist
xor
pop
and
lock
lock
xor
(bad)
push
ss
(bad)
xchg
stos
addr16
adc
ins
pop
fs
jae
inc
pop
push
and
retf
ror
add
mov
mov
or
push
retf
enter
ror
int3
mov
push
adc
das
xchg
xchg
sar
or
ja
jmp
mov
rol
xor
cmp
xchg
adc
lods
adc
push
xchg
je
pushf
jne
xchg
out
test
ret
mov
test
push
inc
rol
sbb
xlat
xor
adc
push
cmps
fsubp
inc
push
inc
(bad)
adc
sub
xor
push
xor
fnstenv
push
add
xchg
push
pop
adc
cmps
fptan
adc
sbb
inc
xor
pop
add
xchg
mov
push
stos
pop
add
ss
xor
fnsave
pop
rcl
in
test
push
arpl
sub
ror
cmp
mov
out
adc
es
pop
xor
mov
div
mov
rcl
cmps
push
test
push
or
push
sbb
dec
outs
lahf
pop
push
cwde
cwde
push
mov
scas
sahf
in
add
je
inc
dec
pop
or
cld
retf
mov
shl
dec
pop
push
sbb
xor
cmp
xchg
jns
xchg
inc
xchg
leave
mov
push
pushf
cmp
push
jne
cmp
push
aaa
sub
mov
mov
pop
add
push
adc
inc
stos
xchg
mov
mov
sub
mov
fstp
add
arpl
or
adc
sahf
shl
mov
aam
push
add
jns
mov
mov
leave
lods
inc
mov
in
lds
and
push
jmp
cld
fisub
cmp
pop
jo
mov
fwait
out
sbb
cmp
pop
cmp
stc
xchg
mov
test
mov
sbb
pop
mov
out
mov
xor
sub
or
adc
inc
push
retf
sbb
sub
add
sbb
pusha
out
add
push
pop
pop
adc
and
sub
sub
dec
sub
test
mov
and
and
sahf
mov
cmp
cmp
mov
add
mov
jb
add
push
mov
retf
push
and
mov
fisubr
xchg
xor
dec
test
pop
push
pop
test
or
(bad)
fs
jge
mov
sub
jmp
xor
cmps
inc
add
(bad)
in
mov
xor
clc
test
nop
enter
sub
call
test
jle
or
pop
scas
sahf
push
in
mov
leave
cmp
dec
arpl
add
pop
add
or
inc
lods
stos
push
xchg
aad
mov
pop
int3
bound
push
or
pop
pusha
scas
sub
stos
scas
out
retf
gs
xchg
ret
popf
jl
test
add
cmps
lds
adc
scas
mov
movs
fld
into
lahf
add
out
data16
vcvtps2dq
fs
mov
push
les
in
vmovapd
mov
dec
aad
xor
mov
mov
inc
inc
or
pop
pop
data16
push
aad
mov
add
mov
jae
shl
sbb
cmp
stos
retf
push
xlat
scas
jb
mov
cmp
in
jnp
sbb
adc
and
sbb
sub
leave
sbb
add
mov
mov
inc
push
or
rcl
push
add
xchg
sbb
xor
dec
iret
fidiv
nop
retf
dec
call
inc
sbb
mov
pop
mov
sub
aam
or
push
add
clc
push
mov
pop
loop
inc
jmp
out
push
jne
xchg
push
cmp
and
pop
push
pop
jnp
adc
sahf
pop
mov
in
lods
add
sub
jmp
test
sbb
cld
(bad)
sbb
mov
ss
mov
cmp
shl
adc
mov
test
arpl
ins
pop
ins
mov
cmp
mov
push
inc
test
cmp
test
dec
push
loop
outs
mov
add
sbb
inc
stos
xor
shl
mov
test
xor
int
mov
dec
xchg
inc
add
jmp
adc
pop
stos
pusha
and
and
int
inc
pop
sub
mov
jecxz
test
mov
sbb
or
in
into
loop
and
inc
jl
int3
ss
sub
xchg
xchg
stos
into
fisttp
xchg
add
cmp
push
int
bound
push
push
test
ror
inc
sub
adc
sbb
out
rol
sub
out
mov
movs
sbb
movs
stc
sbb
retf
mov
sub
popf
fadd
inc
mov
mov
into
cmp
mov
mov
movs
sub
adc
pushf
add
push
rcl
inc
nop
sub
and
jb
push
cmp
aaa
sub
ja
and
mov
sub
inc
pop
push
in
hlt
pop
in
sbb
ret
mov
add
push
cmc
loope
jmp
popa
into
dec
push
into
mov
ins
das
xchg
cmp
cmp
ss
es
or
out
movs
inc
out
inc
test
pop
cmp
sub
stos
mov
xchg
and
pop
add
ret
jge
add
jno
prefetchnta
enter
leave
xor
xchg
sub
mov
pop
gs
adc
addr16
into
or
ror
daa
pop
sub
push
sub
fcom
adc
cwde
lods
sbb
mov
jnp
nop
xchg
pop
sbb
jnp
or
inc
(bad)
add
or
test
add
jbe
aad
add
mov
inc
xor
pop
fcom
jmp
movs
cmp
mov
mov
add
sbb
dec
lea
ja
les
stos
ret
stos
xor
ins
adc
push
and
adc
or
or
add
and
push
enter
mov
fisubr
sahf
jp
push
lods
sub
mov
jb
popa
in
aam
and
cmp
mov
push
inc
test
push
leave
and
aaa
inc
or
adc
push
(bad)
xlat
jne
mov
xchg
and
inc
pop
push
cmp
stos
cmp
cwde
outs
inc
sbb
mov
stos
cmc
sti
inc
shl
loope
nop
repz
push
or
iret
outs
and
inc
rcl
jne
fsub
xor
mov
inc
popa
push
mov
sbb
add
adc
xchg
adc
cs
rol
sub
jo
push
stos
mov
sahf
data16
mov
pop
mov
in
xchg
pop
inc
call
gs
pop
mov
xor
mov
dec
and
add
mov
scas
adc
ins
push
fiadd
icebp
cmp
sub
sub
inc
cmps
xchg
repnz
sub
and
add
jnp
mov
xchg
push
rcl
jne
inc
stc
jp
es
add
cmp
adc
fisttp
dec
call
xor
pusha
sbb
(bad)
frstor
inc
enter
or
popf
enter
push
nop
mov
push
and
sub
adc
jl
fisubr
ret
mov
dec
add
lods
(bad)
xchg
aad
mov
pop
mov
(bad)
push
adc
add
dec
hlt
ret
inc
xor
ins
mov
sbb
jmp
es
dec
nop
pop
retf
cmp
sbb
pop
jae
mov
mov
adc
adc
add
rol
movs
dec
or
push
stos
mov
mov
fs
and
or
cmp
mov
js
in
cmps
inc
mov
jl
pushf
adc
fcom
popf
and
scas
inc
push
xchg
mov
mov
mov
retf
mov
mov
xor
stos
lods
or
ins
std
mov
or
leave
jbe
adc
sub
js
push
jne
cdq
xchg
and
add
mov
scas
int3
leave
stos
sub
mov
fld
cld
inc
cmp
js
mov
loop
rcr
shr
pop
mov
jbe
rol
pop
cmp
xor
pop
push
or
mov
sbb
(bad)
or
xchg
jo
push
sbb
inc
xor
or
rol
pop
sahf
in
cmp
mov
inc
sub
int
sysexit
out
dec
sub
or
outs
push
xchg
call
mov
das
push
int
pop
cs
adc
pop
sbb
push
ins
jle
add
pusha
jge
fsub
cdq
popa
repnz
cmc
or
xchg
bound
jmp
adc
mov
sbb
mov
add
ins
or
jb
fs
fdiv
adc
mov
xor
xchg
(bad)
or
popa
push
inc
sbb
ins
frstor
adc
mov
out
jns
mov
fmul
ror
rcl
sub
cmps
or
cmp
push
ins
pop
loopne
retf
sahf
pusha
lds
pop
pop
mov
sbb
xchg
push
sub
fstp
sub
sub
clc
xor
xchg
in
and
sbb
cmp
pop
push
and
rol
mov
push
cmp
push
aam
shl
stos
add
dec
in
xchg
out
mov
mov
jmp
lds
xor
mov
or
dec
cmc
stos
ins
sub
xchg
sub
sub
mov
dec
pop
dec
retf
dec
pushf
loope
sbb
mov
cdq
and
inc
mov
mov
popa
push
sub
rcl
mov
push
dec
xchg
ds
mov
inc
movs
mov
add
repnz
pop
imul
push
ss
inc
sbb
clc
cdq
push
lods
pop
(bad)
in
(bad)
jae
in
add
mov
arpl
pop
adc
and
xchg
test
push
pop
(bad)
xor
xchg
xor
sbb
add
stc
fnstcw
sbb
mov
mul
mov
sub
popa
scas
mov
or
add
pop
jo
mov
jbe
adc
les
pop
mov
mov
ret
sbb
mov
xchg
adc
and
sub
add
cmp
jb
repnz
add
push
inc
popa
cmp
add
cmp
push
in
mov
push
mov
xor
scas
jb
ficom
mov
adc
adc
stos
in
outs
xor
add
scas
(bad)
cmps
(bad)
jecxz
sar
pop
and
cs
sbb
inc
ins
adc
ja
sub
hlt
cld
dec
js
out
sub
or
or
fcom
mov
fadd
pushf
xchg
sub
pop
cmp
pop
mov
adc
mov
loop
retf
inc
mov
and
or
mov
sub
add
push
outs
sub
xchg
sub
pop
lods
test
and
inc
mov
push
push
sub
inc
dec
stos
sbb
mov
sub
cmp
fst
xchg
add
sub
pop
ret
shr
pop
test
push
outs
xor
sbb
ja
sub
mov
cmps
xchg
xchg
sub
mov
stos
ret
call
sbb
sub
mov
jae
ja
pop
mov
jo
gs
outs
aaa
mov
fild
sub
sub
fs
aad
jl
mov
push
inc
mov
cs
xor
ins
js
sub
mov
(bad)
pop
and
sbb
cmc
or
enter
jmp
pop
test
rcr
ins
fiadd
movs
adc
ret
mov
fsubr
sbb
add
dec
pop
cmps
aam
dec
fwait
push
adc
inc
jb
jb
bound
add
inc
out
ss
ror
js
mov
(bad)
jb
push
and
ret
or
adc
nop
sbb
aas
cwde
test
push
mov
ret
or
sbb
ja
push
fiadd
adc
inc
ins
mov
stc
or
or
pop
retf
push
ret
or
ror
push
sete
sbb
mov
dec
fst
jmp
xor
jle
outs
or
inc
(bad)
jbe
fwait
outs
push
dec
call
add
test
xchg
push
loope
push
jg
shl
push
aad
mov
or
fucomp
xchg
rcl
aad
jp
fst
add
and
add
pop
nop
arpl
adc
ror
lea
mov
or
loope
in
popa
push
or
inc
add
adc
push
test
mov
mov
cmp
add
push
sbb
add
dec
pushf
add
addr16
mov
dec
test
or
mov
in
mov
xchg
sbb
test
and
cmp
outs
and
retf
int3
inc
loope
add
pop
or
or
or
mov
sub
pop
mov
xor
lods
jae
imul
mov
push
rol
dec
push
call
push
retf
int
cmp
sbb
ret
dec
sbb
dec
push
jbe
into
(bad)
push
ins
or
adc
add
add
data16
add
nop
and
jmp
test
icebp
sub
xor
aad
icebp
into
xchg
jb
stos
sub
lods
xchg
mov
push
xchg
gs
ins
add
push
inc
test
adc
and
hlt
jmp
data16
mov
or
rcr
stos
jne
sub
mov
jns
fld
fisubr
sahf
push
inc
stc
repnz
loop
movs
or
mov
pop
lea
int
adc
sub
lods
mov
cmp
and
adc
inc
test
or
loope
jns
mov
xor
push
or
mov
pop
pop
sub
ret
mov
jge
sbb
mov
sub
add
mov
push
jb
and
push
adc
push
inc
inc
fs
mov
mov
xor
jecxz
push
(bad)
mov
repnz
cmc
inc
mov
jne
xor
jge
cmp
sbb
mov
movs
add
pop
sub
sbb
jge
shl
adc
aam
sbb
fdivp
cs
in
pop
mov
jl
das
leave
add
sub
and
adc
mov
pop
and
inc
xchg
push
jns
bound
xchg
mov
inc
enter
mov
mov
loopne
add
rol
repz
adc
scas
movs
mov
sbb
ror
in
or
jp
cmp
test
cmps
sub
sub
adc
sbb
retf
pop
pop
mov
jo
xchg
retf
mov
cmp
ja
mov
rol
sbb
outs
aaa
mov
push
adc
test
pop
jg
clc
and
fcomp
or
or
mov
mov
sub
push
inc
out
mov
add
int3
mov
pop
(bad)
push
mov
sar
push
(bad)
nop
push
in
mov
or
adc
cmps
jb
int3
addr16
push
sbb
inc
test
inc
test
pusha
xor
retf
es
aam
loopne
dec
inc
or
push
call
xchg
sbb
cwde
sbb
mov
rcl
or
les
test
and
fsub
jnp
rcl
loop
pop
jl
cmps
aad
add
loope
pusha
and
test
shl
cdq
pop
xchg
imul
enter
cmp
imul
add
push
inc
sub
pop
add
and
lods
lea
lods
push
or
lahf
adc
adc
fldcw
in
xchg
stos
retf
stos
xchg
add
gs
ja
xchg
push
sub
mov
je
inc
jmp
sar
mov
pop
loope
les
hlt
xor
nop
sub
push
add
xchg
repnz
ss
dec
xchg
mov
cs
es
jp
add
xchg
ins
test
fcom
lds
cmp
mov
pop
dec
push
dec
movs
ins
push
mov
lds
(bad)
sbb
lods
rcr
scas
sub
mov
(bad)
stc
nop
push
rol
add
mov
jnp
mov
lds
test
push
retf
push
sahf
pusha
push
enter
mov
jbe
xchg
dec
xor
call
(bad)
and
mov
jo
das
adc
(bad)
sahf
add
and
mov
add
adc
rcl
xchg
push
pushf
rol
dec
push
pushf
push
fsub
xchg
jae
or
inc
test
dec
dec
cwde
aam
mov
les
jp
jbe
mov
fadd
int3
push
inc
sbb
xchg
(bad)
clc
leave
cwde
or
retf
dec
jp
add
push
movs
push
fcomp
dec
push
dec
add
mov
or
ret
push
aad
pop
fwait
mov
jb
xlat
xchg
pop
dec
xor
imul
push
mov
push
test
mov
jp
shl
or
mov
mov
mov
cld
clc
dec
inc
add
cmps
pop
loopne
pop
pop
mov
push
enter
jb
fisttp
gs
adc
mov
or
rol
lods
mov
xchg
gs
push
add
popa
lea
push
cmp
dec
dec
pop
jae
sub
dec
sub
push
or
gs
pop
sub
push
push
pop
(bad)
fld
scas
push
sub
das
jbe
out
sub
add
bound
jo
das
push
fnstenv
cwde
data16
mov
jnp
mov
inc
add
pop
clc
pop
(bad)
(bad)
enter
mov
add
xlat
jne
dec
loope
sub
xor
xchg
xor
inc
loopne
mov
push
popf
lods
xchg
leave
cs
ror
clc
xchg
leave
(bad)
fistp
test
dec
cli
add
push
pop
dec
int3
dec
sbb
mov
je
or
(bad)
pop
add
ja
inc
or
fdivp
outs
adc
xor
pop
add
imul
retf
xor
inc
out
push
ret
xchg
mov
sub
nop
pop
mov
pop
gs
not
ins
repz
cdq
mov
inc
fsubr
pop
ror
add
xor
xchg
cmps
mov
mov
mov
mov
mov
xor
lds
adc
push
mov
pop
or
mov
xchg
in
mov
aam
push
or
shl
sbb
add
imul
xor
lock
hlt
call
pusha
sub
mov
push
mov
rcl
mov
jns
es
mov
shl
movs
dec
add
mov
ret
pusha
pop
cmp
rol
test
and
test
enter
mov
dec
push
jno
fmul
xor
or
test
or
sub
pushf
inc
ret
inc
inc
push
lock
or
movs
mov
imul
(bad)
icebp
sbb
sbb
pop
fld
shr
push
mov
call
test
mov
sub
add
jae
xor
out
shl
arpl
std
mov
cmps
adc
sub
push
cdq
int
(bad)
repz
cmp
xor
xor
stos
sbb
sysenter
out
push
push
mov
jne
mov
pop
stc
mov
stc
cmp
mov
ror
and
mov
es
in
scas
enter
enter
movs
mov
cmp
xor
imul
das
adc
stos
mov
sub
repz
sub
(bad)
les
inc
push
inc
inc
fadd
aaa
ja
inc
fs
and
sub
sbb
ja
and
scas
loopne
retf
mov
lods
sti
xchg
ins
sub
jo
dec
push
push
fcmovnb
cmp
pop
ins
dec
mov
fld
iret
inc
ja
xor
lea
mov
xor
xor
push
sbb
mov
inc
fld
stos
and
push
cmps
ins
cmp
cdq
inc
stc
jb
stc
adc
shl
imul
stos
and
inc
inc
in
fsub
dec
movlps
movs
adc
cmp
or
(bad)
sub
or
adc
add
sar
out
retf
fisubr
aad
jbe
or
pop
test
jae
xor
mov
mov
ret
mov
adc
mov
scas
adc
push
movs
rol
ja
dec
pop
ret
in
mov
mov
inc
pop
imul
xchg
push
adc
and
sub
push
sbb
test
cwde
lds
xchg
movs
sub
ror
sbb
pusha
nop
fsubr
retf
jae
dec
fs
not
inc
mov
or
ja
dec
xor
push
mov
xor
cmp
fidiv
inc
sub
test
aaa
popa
gs
mov
push
mov
outs
loopne
cdq
lds
leave
(bad)
push
int3
outs
push
dec
out
and
pop
add
es
xchg
out
mov
dec
lahf
xor
or
cmps
pusha
inc
mov
ja
and
mov
fldenv
push
loopne
adc
lea
out
push
ss
repnz
pop
mov
ins
xor
mov
sahf
mov
sbb
jno
pop
adc
leave
mov
fidiv
fnsetpm(287
cmp
fistp
pop
cli
bound
inc
shl
sub
cmp
pop
es
inc
jne
je
dec
mov
popa
(bad)
sbb
jle
out
jl
in
fxam
jge
popf
sub
(bad)
repz
push
cdq
jmp
idiv
sti
dec
mov
mov
adc
(bad)
push
int3
jmp
push
mov
imul
mov
jnp
cmps
std
mov
mov
push
pop
scas
ret
out
out
aas
xor
out
(bad)
jl
dec
lds
mov
sahf
inc
movs
inc
lods
ret
add
or
neg
cmp
mov
jae
(bad)
fiadd
or
add
add
adc
aam
xor
pop
mov
fnstenv
inc
inc
mov
rcr
mov
cld
in
adc
sub
retf
adc
cmp
test
xchg
mov
push
or
xchg
lock
xchg
xchg
mov
scas
push
arpl
in
or
scas
pop
or
ret
sahf
and
adc
jmp
xor
inc
jne
sub
lods
push
cmp
sub
inc
fwait
add
sbb
int
loopne
adc
movs
sar
icebp
pop
push
(bad)
lods
push
lods
sbb
aam
lds
mov
clc
test
clc
xchg
mov
fsub
mov
cmps
add
rcr
test
and
jae
cmp
mov
sbb
push
stc
push
xor
ficom
lods
pop
mov
xlat
ror
or
es
out
mov
in
in
mov
push
or
xchg
cmp
inc
xchg
aam
loop
ins
in
scas
les
popa
imul
cld
xor
push
adc
fdiv
or
fist
leave
retf
nop
mov
aam
mov
jg
xor
ss
xchg
pop
push
mov
or
mov
add
inc
xor
jp
loope
adc
addr16
push
(bad)
movs
and
push
mov
movs
add
push
dec
jae
cmp
mov
sbb
xchg
ins
xor
shl
sub
mov
pop
mov
mov
cmc
out
aad
pop
xlat
push
adc
jmp
lods
push
xchg
outs
repz
mov
jnp
sbb
or
xor
dec
int3
jl
and
retf
pusha
or
loop
add
ja
mov
nop
ret
je
outs
push
jecxz
inc
jae
mov
push
aam
mov
adc
mov
jb
sub
int
and
or
das
adc
cmps
push
mov
aam
jp
popf
enter
out
push
push
movs
pop
pop
mov
mov
dec
mov
int3
inc
and
loop
sbb
xor
shr
setb
push
je
jo
aaa
cmp
test
xchg
cmps
adc
fiadd
jmp
or
mov
push
sbb
mov
xor
ror
scas
mov
popa
ja
jecxz
mov
mov
lods
in
xor
icebp
sbb
clc
loop
or
jmp
fdiv
aam
sub
gs
push
aas
xor
mov
add
mov
sub
fisttp
inc
xchg
imul
sbb
inc
mov
arpl
pop
call
adc
push
pop
pusha
push
fadd
rep
inc
daa
xor
add
icebp
adc
loope
fmul
cmps
jno
sbb
retf
xor
push
(bad)
and
out
adc
sub
add
sbb
pop
ffreep
add
sahf
stos
aas
int3
inc
mov
sbb
pusha
xor
loope
outs
xor
pop
mov
xchg
loop
mov
and
adc
cli
pop
das
mov
das
clc
and
fnstsw
in
xor
sub
sub
jle
pop
adc
sub
push
loopne
pop
jle
imul
push
arpl
pop
imul
jmp
pop
xor
xchg
adc
xor
cmps
mov
adc
adc
arpl
sub
xchg
sub
js
push
jo
push
push
pop
(bad)
test
xor
xchg
test
xchg
mov
mov
lds
out
aam
cmp
add
xor
mov
rol
push
xchg
sbb
mov
(bad)
jge
dec
jne
shr
aaa
pop
and
loop
shl
cs
pop
out
cmp
xlat
lock
movs
sub
loop
pop
mov
dec
loop
hlt
popa
sub
ins
cmc
adc
dec
sar
cmp
and
pop
add
adc
jle
mov
push
jle
imul
mov
fbld
gs
inc
mov
push
jl
add
ret
push
std
nop
aad
cmp
cmps
jbe
cmp
cmps
add
aam
push
adc
xchg
mov
cmc
loope
inc
ins
jb
xchg
fisub
mov
push
mov
and
xchg
out
aaa
(bad)
not
syscall
loopne
xchg
adc
jle
pop
add
dec
lea
push
lods
mov
push
or
push
sbb
das
loop
test
jecxz
add
fsubr
int
cmps
out
test
adc
pop
fs
call
or
inc
adc
adc
aaa
push
adc
into
add
xchg
push
shl
imul
stos
in
or
inc
xchg
cmp
jge
fild
pop
repz
in
(bad)
xor
sub
test
scas
mov
dec
(bad)
ins
sub
xor
or
cmp
mov
(bad)
out
loope
push
mov
retf
div
cmovo
adc
push
call
inc
fistp
inc
jno
cdq
outs
cld
mov
ins
xchg
dec
ds
test
hlt
retf
jp
retf
pop
and
xor
xchg
es
icebp
adc
add
xchg
push
outs
add
pop
mov
pop
xchg
or
out
int
adc
dec
pop
xor
shl
mov
dec
jmp
mov
jecxz
sbb
cwde
test
aaa
arpl
fsubr
popa
test
and
shl
jae
pop
xor
sbb
mov
sbb
out
aam
and
out
xor
movs
mov
inc
mov
jbe
pushf
jb
mov
bound
outs
bound
pop
jbe
push
(bad)
in
adc
push
jle
(bad)
and
jl
das
inc
mov
inc
popa
test
das
mov
fld
jae
lea
or
or
les
pop
mov
leave
dec
out
div
scas
xchg
adc
xor
ins
push
push
int3
pop
xchg
cdq
test
jmp
push
mov
xlat
xchg
jl
or
cmp
(bad)
xchg
inc
or
and
xlat
pop
jae
aas
fstp
ds
add
inc
xor
les
(bad)
fst
out
adc
add
mov
mov
mov
mov
add
push
nop
(bad)
les
or
mov
add
push
(bad)
sub
mov
mov
push
and
mov
inc
and
shl
mov
lds
mov
test
dec
sti
dec
iret
movs
mov
fisttp
sbb
addr16
mov
fstp
int3
cmps
adc
in
jns
mov
cmp
pop
cmp
xor
jmp
mov
and
call
xor
or
jmp
adc
pop
mov
scas
add
sub
mov
test
lods
dec
add
hlt
mov
inc
pushf
outs
mov
stos
(bad)
cwde
mov
cmp
clc
sub
and
and
inc
rcl
or
push
adc
scas
add
mov
pop
scas
push
sub
xchg
(bad)
cld
dec
ds
push
jge
mov
stos
jnp
pop
adc
add
rcl
and
push
aam
mov
test
sbb
adc
jmp
sbb
(bad)
push
push
stos
repz
add
aad
repz
mov
cwde
shl
xor
pop
inc
mov
jl
arpl
mov
inc
in
add
jae
push
push
dec
sub
mov
iret
sub
and
dec
mov
inc
push
arpl
cmp
sbb
fild
stos
loop
shr
cmp
cmp
jno
dec
push
or
push
inc
and
not
es
iret
in
and
retf
clc
mov
ds
inc
gs
add
stos
rcr
xchg
icebp
and
push
adc
retf
sub
(bad)
fsub
int
inc
aas
mov
mov
rcl
loope
enter
not
mov
cmp
adc
pop
mov
stos
dec
lds
loop
or
hlt
and
sysexit
adc
mov
mov
sub
inc
cmp
xchg
call
jg
dec
nop
mov
fnstcw
int
or
cmp
lar
ss
push
pop
pop
(bad)
(bad)
nop
or
mov
aaa
adc
out
push
mov
mov
stos
cmc
pop
mov
fdiv
rcl
pusha
push
pop
sbb
add
cmp
pop
not
movs
push
test
shl
fmul
into
mov
inc
and
dec
sub
int
inc
mov
call
add
dec
nop
add
cmc
data16
adc
iret
inc
or
add
inc
dec
pusha
adc
jae
mov
stc
sub
mov
lds
mov
mov
enter
retf
popf
adc
mov
cmps
cmp
sub
push
shrd
cmp
push
mov
xchg
lahf
mov
adc
xchg
pop
mov
call
adc
aas
test
pop
daa
test
pop
adc
push
scas
mov
jnp
cmc
mov
xchg
ja
into
popa
stos
push
mov
mov
mov
jmp
aaa
pop
push
out
call
mov
mov
pop
adc
lods
push
adc
jmp
or
pop
mov
bound
in
pop
pusha
or
fdivr
fmul
push
aam
cs
scas
dec
add
dec
(bad)
jecxz
mov
out
mov
sub
retf
push
or
xor
mov
imul
pop
sbb
cli
xchg
cmp
(bad)
std
fst
dec
div
dec
cli
fs
ret
dec
adc
into
xchg
mov
dec
dec
(bad)
fdiv
stos
gs
(bad)
ds
(bad)
jae
in
or
sub
push
xchg
clc
xchg
cmc
adc
into
ins
fstp
jb
jg
hlt
icebp
icebp
das
jmp
jno
call
mov
popa
inc
loopne
hlt
pop
mov
mov
pop
imul
xor
push
fldenv
bnd
dec
je
mov
jl
hlt
sbb
test
leave
test
mov
mov
inc
les
sub
sbb
and
mov
cdq
cmp
or
mov
mov
or
in
lea
hlt
push
dec
push
mov
js
or
xchg
adc
xor
cli
push
push
pop
mov
out
adc
push
es
xchg
mov
call
jmp
jmp
mov
test
cs
sub
and
(bad)
mov
pop
idiv
sbb
dec
or
sub
arpl
cwde
xchg
jge
shl
fdiv
cdq
dec
or
push
add
xor
jne
test
push
sahf
fnstenv
retf
cli
(bad)
ret
inc
mov
icebp
cwde
ins
mov
push
fmul
push
stos
pop
mov
push
adc
mov
inc
out
pop
sub
mov
sub
xor
jns
dec
scas
scas
repz
shl
mov
push
jg
jbe
sbb
push
or
mov
push
scas
and
call
pop
sbb
aaa
repz
mov
mov
xlat
xor
movs
stos
pushf
outs
loop
push
ja
(bad)
jmp
aam
mov
xchg
cmp
test
push
inc
xchg
mov
or
push
dec
addr16
lahf
int3
mov
push
and
aas
mov
stos
mov
add
add
gs
int3
outs
repnz
ds
add
or
mov
add
sub
fs
daa
xchg
fcomp
cmp
ficom
inc
(bad)
sub
inc
inc
sub
cmps
inc
inc
pushf
aaa
popf
add
idiv
adc
cwde
push
pop
sbb
push
dec
clc
mov
sbb
xchg
inc
sub
inc
es
cmps
add
sahf
das
scas
jno
push
mov
cwde
dec
dec
cmp
call
cwde
add
out
inc
and
inc
add
sti
cwde
or
xchg
push
popf
and
ss
or
sub
(bad)
fdivr
and
sub
scas
retf
scas
mov
jnp
les
fidiv
scas
les
stos
js
dec
dec
or
in
rol
add
popf
cmp
das
icebp
xor
lods
xor
ret
xor
out
repz
add
xchg
mov
(bad)
outs
ret
xchg
adc
fist
out
push
or
lods
fnsave
idiv
retf
test
ror
and
add
inc
mov
sub
loope
in
rol
mov
daa
or
jge
mov
xor
repz
int3
adc
add
xchg
loop
test
vminps
je
or
pushf
pop
out
pop
xor
pop
outs
jecxz
push
pop
add
pop
dec
inc
mov
cld
inc
jmp
xlat
xchg
imul
xor
push
cmps
add
inc
popf
retf
sub
loop
ret
push
sbb
clc
test
int3
add
mov
mov
or
jmp
in
test
mov
xor
cmp
movs
push
xchg
imul
adc
imul
push
pop
jne
nop
mov
xchg
adc
movs
lds
push
xchg
mov
ja
inc
rcl
scas
sbb
xor
xor
cmp
pop
jae
inc
xchg
push
das
mov
imul
enter
popf
push
rol
test
fidiv
sar
sar
test
outs
daa
cdq
outs
(bad)
rol
nop
ins
retf
ret
fs
enter
mov
into
push
aas
mov
jle
pop
push
lods
jo
(bad)
cwde
add
xchg
jbe
jge
mov
inc
adc
into
aaa
sub
push
cmc
scas
rcl
in
(bad)
xchg
aas
test
out
neg
jl
jg
clc
mov
sbb
cdq
out
idiv
mov
or
cmps
mov
fwait
jmp
das
dec
fdivr
popf
ds
stos
jle
(bad)
fiadd
or
add
add
adc
aam
nop
xlat
dec
outs
neg
xor
sub
add
mov
pop
push
push
push
lods
xor
jbe
mov
out
imul
scas
dec
mov
mov
jmp
imul
xor
adc
call
call
popa
cmp
out
pop
cwde
adc
sub
das
xchg
rcr
rcr
gs
fstp
and
int
repnz
ins
arpl
mov
cwde
int3
inc
data16
mov
add
scas
add
stos
stos
jecxz
xor
pusha
push
xchg
in
adc
ins
push
(bad)
lea
dec
and
and
jmp
mov
test
ret
sub
fst
cwde
shr
mov
pushf
mov
xor
outs
push
cli
test
push
xchg
aas
iret
(bad)
outs
call
add
ret
inc
inc
mov
icebp
add
push
push
and
dec
popa
add
aad
cli
stc
outs
adc
pusha
data16
push
or
rcl
dec
out
in
in
xchg
jbe
jecxz
xchg
xor
dec
inc
das
push
(bad)
add
add
cwde
or
loop
add
xchg
shl
gs
adc
imul
enter
into
ins
hlt
lahf
xor
push
fsubr
fsub
mov
push
out
add
xchg
sti
int3
cmp
in
sbb
movs
es
(bad)
cmp
mov
in
push
adc
cs
addr16
jp
into
cmp
or
xor
fcomp
add
mov
or
inc
ret
int
fwait
aam
pop
mov
lods
(bad)
sbb
pop
lods
xor
enter
dec
jo
es
push
hlt
inc
push
jae
adc
mul
push
rol
pop
bnd
xchg
jp
pop
retf
stos
out
and
jmp
mov
movs
sub
sub
arpl
mov
fcmovne
add
mov
and
cmps
pop
(bad)
jp
and
dec
adc
mov
popa
lds
inc
pop
sub
adc
in
jb
mov
sahf
aad
jmp
adc
sub
shr
inc
push
xchg
ins
in
loop
js
inc
arpl
rcr
outs
dec
cmp
inc
ins
push
loopne
loope
inc
(bad)
mov
data16
jo
cmp
(bad)
imul
cld
inc
test
pop
adc
aad
pusha
pop
sbb
xchg
add
int
test
dec
or
mov
lods
push
push
out
sti
xchg
push
push
mov
mov
dec
sbb
scas
das
ja
ret
stc
cld
cmps
popa
fild
jg
dec
icebp
and
mov
das
inc
dec
ja
adc
mov
cmp
hlt
(bad)
out
push
and
es
cmp
ror
pop
outs
pop
movs
or
jmp
lea
in
imul
mov
in
add
stos
les
je
adc
xchg
sub
sbb
leave
cdq
hlt
jns
pop
imul
lods
aaa
loop
inc
ins
mov
mov
dec
pushf
imul
outs
xor
add
or
stos
add
scas
push
loopne
xchg
movs
aam
ins
mov
xchg
repz
rcl
fsubr
xor
popa
lock
add
popa
gs
push
sub
jns
repz
test
pop
xchg
mov
stos
or
out
je
ror
pop
sub
sbb
jg
mov
(bad)
jno
add
or
pop
inc
sbb
sbb
icebp
mov
(bad)
sahf
dec
out
bound
movs
xchg
(bad)
nop
cs
cs
add
push
push
cmp
dec
fisttp
ss
(bad)
stos
xor
inc
sub
sar
int
lahf
pop
fdivr
inc
jmp
out
jns
and
pop
xor
shl
pop
pop
cdq
cmp
in
xchg
sub
add
mov
push
push
daa
out
data16
retf
fisttp
stos
cmc
fcomp
movs
imul
or
pop
(bad)
test
or
ds
or
jae
cmc
lods
retf
pop
repnz
xor
xor
and
cld
(bad)
mov
repz
aad
test
xchg
(bad)
ja
pop
test
pop
inc
pop
(bad)
movs
jae
stos
sbb
fiadd
xor
mov
(bad)
or
aas
add
loopne
jne
lods
ret
mov
or
adc
call
mov
(bad)
pop
sub
pop
mov
jg
mov
ins
pop
or
jle
xor
shl
std
ins
icebp
sub
xor
pop
xor
and
cmps
sbb
imul
sub
dec
test
adc
sbb
mov
pop
push
test
xor
imul
mov
(bad)
mov
mov
ret
cld
inc
dec
test
push
sub
ins
push
movsx
aaa
cld
mov
jmp
ror
inc
jne
mov
push
sub
stos
and
data16
scas
aaa
sub
pop
stos
xor
dec
jb
inc
icebp
or
movs
sbb
mov
push
mov
call
ins
ror
ret
add
fnstenv
scas
cmp
add
xchg
outs
push
pop
(bad)
jp
out
clc
inc
push
or
ja
cld
inc
push
dec
or
xor
cmp
xchg
aaa
(bad)
aaa
gs
dec
add
mov
rdmsr
rcl
lods
ffree
pop
and
mov
inc
mov
sub
xor
inc
mov
out
repz
stos
aam
add
ret
imul
adc
pop
sbb
call
mov
movs
stc
fdiv
jae
lods
push
jecxz
pop
jbe
sbb
cmps
xchg
sub
lods
jae
ret
push
mov
movs
shl
sub
popa
dec
jne
les
in
mov
sub
dec
out
aam
test
scas
jno
sub
bound
mov
outs
dec
jne
or
push
cmp
popa
inc
clc
test
sar
fdiv
push
mov
test
lods
fsub
jae
ja
push
xchg
or
fadd
mov
leave
add
sub
adc
ss
inc
(bad)
push
sub
pop
cmp
out
xchg
cmp
jl
int3
imul
xchg
lds
mov
cmp
stos
or
sar
js
mov
rcr
add
pop
mov
add
(bad)
xchg
bound
fst
retf
out
fsubr
gs
xchg
sub
jbe
lea
pop
imul
dec
sbb
mov
nop
xor
xor
movs
or
mov
mov
aad
adc
mov
sbb
stos
push
daa
push
push
push
sbb
fcom
clc
idiv
mov
and
mov
sahf
out
sub
jl
test
adc
push
pop
cdq
xchg
add
inc
pop
mov
push
loope
test
movs
(bad)
dec
push
outs
push
push
add
dec
out
xchg
dec
or
dec
pop
jno
vucomisd
adc
cwde
cmp
jmp
jo
sub
aam
jp
push
or
call
imul
push
dec
sub
push
(bad)
repnz
dec
inc
and
hlt
cmc
fmul
sub
call
mov
aad
pop
jl
adc
and
mov
loop
(bad)
shr
out
mov
pop
imul
int
dec
lock
xor
daa
stos
xchg
pop
and
inc
jne
push
fisubr
in
(bad)
in
ja
xchg
push
std
sahf
push
movs
neg
ja
ins
inc
jo
movs
test
sbb
pop
sbb
cmp
mov
shr
inc
mov
or
leave
lods
nop
pop
xchg
xor
pop
inc
nop
and
cwd
xchg
mov
scas
sub
sbb
lods
lock
jp
mov
dec
sbb
fcmovbe
mov
lods
mov
sbb
int3
add
cmp
in
xlat
push
sbb
aad
cmp
cmps
leave
pushf
ror
lods
adc
das
fcomip
or
fcomp
adc
fisub
sub
es
ds
push
sub
jp
cmc
int3
inc
mov
push
pop
jae
icebp
or
scas
lahf
xor
sub
add
idiv
or
ins
lea
pop
mov
inc
push
and
xlat
pop
adc
pop
inc
cmp
mov
inc
rcr
or
rol
mov
cmp
aam
sub
sub
push
test
ror
push
push
adc
int3
mov
mov
cmps
adc
lds
xchg
pop
mov
ja
pusha
in
add
mov
inc
retf
(bad)
jp
addr16
mov
daa
mov
aad
std
dec
cs
outs
fwait
out
test
fs
bswap
aas
inc
xchg
inc
fiadd
jo
xor
das
push
push
lahf
repz
scas
xor
in
mov
ror
aam
pop
xor
xlat
jne
push
cs
add
ins
add
fnstsw
(bad)
ja
xor
cmp
jb
in
adc
call
mov
pop
loop
mov
es
add
sbb
add
push
add
mov
pop
icebp
sbb
iret
test
pop
sar
rcr
imul
xchg
sahf
dec
or
retf
outs
popfw
jne
enter
and
dec
(bad)
jae
mov
pop
mov
cld
pop
popa
out
jno
mov
xor
or
sub
cli
xchg
xor
push
adc
mov
iret
adc
sbb
mov
mov
pop
mov
mov
xchg
scas
outs
(bad)
lea
mov
xor
adc
fld
xor
pop
shl
xor
cld
mov
dec
add
jecxz
jnp
push
shr
inc
and
pusha
dec
dec
push
jmp
xor
or
dec
(bad)
pop
call
aam
or
pop
das
nop
outs
cld
cmp
add
imul
loope
jl
push
sar
cmps
scas
mov
mov
lock
nop
fidiv
data16
std
fcomp
mov
cmps
jmp
lods
dec
xchg
clc
and
push
test
pop
add
ret
ss
ins
stc
retf
movs
xchg
inc
out
hlt
xor
sbb
jmp
pop
mov
sub
arpl
lods
je
cmc
out
xchg
mov
pop
aam
out
(bad)
enter
adc
(bad)
data16
(bad)
nop
sub
cmps
mov
lds
or
mov
dec
ret
retf
aaa
add
repnz
or
aam
dec
dec
push
cmp
retf
jnp
in
mov
int3
add
popf
pop
ret
enter
fst
sbb
cs
or
clc
int3
push
mov
mov
pop
lds
pop
lods
aas
aas
inc
lahf
or
icebp
or
icebp
js
rol
pop
or
stos
and
stc
shr
std
imul
sbb
fdiv
fdivr
mov
push
and
xor
dec
mov
aam
xor
jae
dec
mov
pushf
inc
mov
(bad)
jp
lods
addr16
push
or
mov
inc
mov
sbb
jle
cmp
pop
aas
mov
add
neg
loope
xchg
xlat
cld
mov
sub
retf
daa
jg
push
and
push
jg
int3
jnp
add
mov
jbe
xchg
xlat
add
inc
xor
inc
push
pop
sbb
add
pop
test
jae
jnp
mov
push
test
jecxz
js
cmp
sbb
outs
push
neg
(bad)
xlat
xchg
scas
pop
test
scas
jns
and
loop
cmps
movs
test
loop
icebp
cmp
clc
xor
pop
mov
lock
cmp
sbb
retw
add
retf
in
repz
mov
jmp
add
mul
in
stos
ret
ret
xlat
les
pop
inc
movs
jae
mov
sub
inc
stos
(bad)
pusha
mov
cwde
movs
shl
(bad)
and
(bad)
gs
test
sbb
jge
in
sbb
or
adc
aam
adc
adc
test
pusha
cmp
sar
mov
add
xor
xchg
lahf
sbb
mov
rcr
ja
out
mov
xor
xor
sub
or
add
sbb
jecxz
jno
mov
adc
xchg
xor
xor
outs
(bad)
and
sub
ret
out
push
lods
movhps
lods
fdiv
in
scas
data16
adc
pop
mov
xlat
mov
shr
cmps
xchg
shl
lea
and
movs
fs
sbb
hlt
mov
push
inc
jmp
inc
cwde
dec
clc
(bad)
mov
add
std
sbb
outs
sub
sbb
test
adc
fcomp
jmp
cmp
sub
rcr
retf
lea
pop
nop
lea
pop
jecxz
xlat
mov
sbb
addr16
repz
in
iret
xor
jmp
and
and
lods
jl
popa
xor
adc
sub
out
loop
mov
imul
push
add
fcomp
and
xchg
test
push
adc
push
pop
faddp
xor
pop
pop
ins
stos
sub
jp
push
xlat
repnz
cmp
push
jl
mov
pop
and
or
dec
dec
xchg
outs
pop
mov
cmp
mov
fld
push
jae
lahf
int3
jp
adc
jle
fadd
dec
mov
mov
xchg
jb
mov
dec
data16
push
inc
into
and
push
mov
(bad)
mov
scas
gs
dec
popf
inc
add
ret
stc
aam
cmp
inc
popa
shl
push
dec
cld
repz
gs
push
xchg
and
lahf
les
(bad)
mov
xchg
pop
in
xlat
fistp
nop
push
int
push
push
inc
jbe
lds
dec
xchg
cmp
jge
xor
fisttp
shr
enter
sbb
push
arpl
xchg
sub
and
leave
sub
cmp
fstp
and
pop
adc
jno
push
popa
in
pop
imul
(bad)
xchg
ins
in
pusha
mov
sub
mov
icebp
cli
cs
cmp
aam
mov
adc
sub
aad
bound
cmps
jno
pop
imul
dec
or
sbb
lods
mov
mov
shl
das
xchg
pop
xchg
fdiv
jne
xchg
repz
out
jne
cmps
pop
aam
ret
xlat
push
das
or
pop
iret
jmp
int3
loope
stos
mov
inc
cmp
stos
mov
add
js
call
(bad)
inc
add
dec
xor
or
jp
mov
adc
lods
sbb
mov
xchg
jb
inc
pop
inc
or
mov
mov
cmp
xor
or
stos
add
xchg
fdivr
add
add
add
add
jb
xor
jo
popa
add
outs
jo
popa
and
jae
arpl
gs
popa
and
and
jo
imul
popa
jb
push
add
add
sbb
add
and
and
add
jb
xor
add
add
push
dec
add
add
adc
add
add
add
add
add
je
outs
outs
gs
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
add
pop
add
push
add
sub
add
add
add
mov
add
add
add
pop
es
push
adc
add
add
add
add
add
add
(bad)
inc
jae
add
add
je
outs
outs
gs
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
add
sbb
add
pop
add
xor
add
add
add
push
or
add
add
dec
add
add
es
jbe
imul
outs
jo
popa
adc
add
add
add
add
add
add
(bad)
inc
ja
add
add
je
outs
outs
gs
adc
push
push
cs
push
inc
outs
ins
ins
popa
outs
add
add
add
enter
dec
add
add
or
sub
aaa
add
add
add
add
add
inc
add
add
add
adc
push
imul
outs
outs
and
arpl
jbe
adc
add
add
add
add
add
add
(bad)
inc
jle
add
or
add
bound
add
and
push
push
inc
gs
outs
gs
imul
bound
push
push
dec
outs
fs
popa
bound
add
js
test
inc
adc
add
or
sub
xor
add
push
add
add
xor
add
and
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
hlt
add
add
add
(bad)
(bad)
push
add
add
add
add
push
add
adc
add
sldt
xor
mov
add
add
adc
add
push
add
or
add
push
add
add
add
push
add
add
add
or
add
add
add
or
add
pop
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
push
popa
push
add
or
jecxz
stos
add
push
add
add
nop
add
add
popa
outs
jae
push
gs
data16
push
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
push
popa
push
add
or
jecxz
stos
add
push
add
add
mov
add
popa
outs
jae
push
gs
data16
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
mov
jp
jp
mov
add
fdivr
jp
jp
add
add
add
fadd
(bad)
add
fdivr
jp
jp
add
add
fadd
(bad)
add
fadd
(bad)
add
fdivr
jp
jp
add
mov
dec
fadd
(bad)
add
fadd
(bad)
add
fadd
(bad)
add
fdivr
jp
jp
add
mov
push
fadd
(bad)
add
fadd
(bad)
add
fadd
mov
mov
push
fadd
(bad)
add
fadd
mov
add
mov
push
fadd
mov
mov
dec
mov
add
mov
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
jg
(bad)
clc
aas
(bad)
push
pop
(bad)
jmp
ud0
rol
jmp
ud0
lock
(bad)
(bad)
clc
aas
(bad)
(bad)
cld
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
(bad)
(bad)
(bad)
(bad)
inc
sbb
jo
popa
and
and
jo
imul
inc
jb
push
je
bound
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
push
popa
and
push
jo
and
add
add
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
pop
add
push
jae
imul
mov
add
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
or
es
imul
outs
popa
add
add
add
pop
mov
push
add
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
push
add
inc
outs
jo
popa
add
add
add
adc
add
arpl
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
add
add
add
add
je
add
add
add
loopne
loopne
add
adc
add
or
inc
inc
inc
dec
push
push
cs
dec
push
add
push
add
add
add
add
add
arpl
add
outs
jo
popa
and
and
stc
and
arpl
add
add
add
outs
mov
rol
cmp
call
add
add
adc
and
inc
inc
add
add
add
add
arpl
add
gs
and
imul
outs
jo
popa
add
add
add
outs
mov
rol
cmp
fmul
pop
pop
inc
adc
add
add
add
add
add
je
add
add
adc
add
add
inc
add
add
and
and
add
add
mov
add
popa
outs
jae
push
gs
data16
inc
jmp
add
push
add
popa
addr16
sbb
add
add
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
(bad)
(bad)
inc
xchg
sub
add
cmp
inc
add
push
push
add
push
add
arpl
xchg
dec
dec
add
ins
ins
add
gs
imul
int3
data16
gs
popa
popa
add
inc
inc
add
gs
pop
add
pop
pop
add
pop
pop
add
dec
dec
add
push
push
add
pushf
pushf
add
add
jmp
jl
jno
dec
add
jg
add
fs
mov
add
outs
outs
add
mov
add
fs
inc
add
xchg
xchg
add
inc
inc
add
aas
add
mov
cdq
add
xchg
xchg
add
test
add
lahf
lahf
add
cwde
cwde
add
mov
add
ja
add
mov
add
xchg
add
mov
add
lods
lods
add
mov
cdq
add
test
jge
test
add
add
lds
pop
mov
cwde
cwde
add
mov
mov
(bad)
jnp
add
jns
add
enter
push
add
(bad)
les
xlat
mov
aam
into
mov
pop
add
aam
add
rcl
add
(bad)
les
les
loop
cmps
fwait
fwait
add
into
into
add
jne
jo
imul
in
in
add
mov
mov
push
push
add
pop
add
(bad)
add
ds
inc
inc
add
outs
add
add
stc
stc
add
cmc
cmc
add
rcl
add
(bad)
les
lods
lods
lods
add
pushf
pushf
add
mov
add
mov
add
jo
pop
xchg
add
mov
pushf
add
outs
add
aaa
add
lods
stos
add
aas
add
jns
add
inc
add
fs
add
add
cmps
mov
add
pop
add
push
dec
add
mov
add
push
add
in
add
test
add
xor
push
inc
cmp
add
add
bound
pusha
dec
inc
add
das
sub
lea
out
push
inc
add
add
leave
add
in
add
(bad)
add
add
add
out
add
cmp
jge
(bad)
add
add
add
inc
add
jl
jmp
in
add
jmp
add
jmp
cdq
add
add
das
xor
and
inc
add
xor
add
jne
cmp
dec
dec
dec
add
cmp
add
add
fdivrp
add
xor
add
cmp
add
dec
inc
sub
inc
dec
jno
add
add
inc
fwait
scas
inc
mov
inc
imul
sti
add
jmp
cmc
idiv
add
jnp
std
std
std
add
repz
in
in
add
out
add
loopne
add
fcmovnu
add
fcomp
add
aad
add
rcl
add
iret
iret
add
int3
int3
add
mov
add
mov
mov
mov
mov
mov
mov
stos
stos
stos
add
test
cmps
add
xchg
xchg
add
jg
add
ja
jae
jae
push
data16
add
dec
add
cmp
add
xor
add
clc
clc
clc
clc
clc
clc
clc
clc
pushf
jo
cld
mov
add
add
clc
stos
mov
jecxz
push
fwait
(bad)
cmps
test
add
clc
clc
cli
hlt
out
in
in
test
cmps
mov
add
clc
clc
mov
in
out
jge
or
movs
cli
cmps
test
add
add
add
clc
jbe
loop
in
icebp
jge
jmp
jne
mov
ja
ja
pop
cmc
cmps
mov
add
clc
bnd
jge
jmp
stc
jbe
hlt
repz
mov
in
in
outs
in
scas
jmp
out
jge
in
mov
cli
clc
cmc
hlt
repz
imul
enter
jge
scas
jmp
out
out
out
scas
in
stos
in
jg
(bad)
mov
repnz
inc
mov
bnd
jmp
jmp
loop
call
call
cmp
jge
jmp
mov
xor
nop
jge
mov
hlt
mov
xchg
stos
add
jmp
scas
loope
mov
in
scas
popf
sub
fwait
test
repnz
add
add
hlt
fwait
mov
jle
out
pop
adc
xchg
out
jbe
mov
dec
nop
neg
int
add
jge
xchg
sub
jbe
sub
push
push
fsub
mov
arpl
fmul
add
add
scas
and
and
cmp
mov
adc
fsubr
xchg
fmul
into
add
add
and
aas
lea
aas
dec
sub
push
push
sub
int
int
retf
add
add
and
inc
pop
lea
sub
push
push
cmp
retf
retf
add
add
je
and
cmp
inc
xor
sub
adc
cmp
inc
lods
ror
int
rcl
rol
add
add
je
and
push
xchg
inc
push
pop
and
adc
push
inc
add
retf
cmp
add
je
sub
xchg
outs
lea
push
jecxz
scas
jmp
adc
test
add
pop
dec
push
test
mov
sbb
inc
xchg
out
push
add
add
add
aas
lea
mov
mov
push
movups
adc
pop
sbb
push
and
push
test
add
dec
dec
or
cmp
adc
inc
sub
adc
adc
add
add
add
icebp
and
pop
pop
bound
or
push
xor
adc
test
add
mov
stc
ja
repnz
xchg
pop
inc
adc
push
loop
loopne
mov
loop
adc
add
add
add
div
mov
jo
stc
jbe
push
sbb
out
out
in
xchg
adc
test
add
add
mov
adc
test
jnp
lods
mov
ficomp
adc
add
cmp
out
mov
out
pop
adc
add
cmp
loope
fild
push
mov
add
jl
jl
push
adc
xchg
push
push
repnz
add
add
(bad)
(bad)
(bad)
(bad)
clc
pop
(bad)
jmp
pop
(bad)
inc
add
clc
add
pavgb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jo
add
jo
add
xadd
add
clc
add
ud0
add
(bad)
clc
add
(bad)
clc
add
(bad)
inc
pop
add
add
add
add
or
add
ins
popa
addr16
sbb
add
add
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
lahf
cmp
add
dec
dec
add
data16
arpl
mov
pop
pop
add
push
add
dec
dec
add
pushf
pushf
add
dec
add
mov
add
mov
pop
add
cmps
cmps
add
inc
add
test
lods
add
scas
scas
add
jb
add
push
add
mov
add
mov
(bad)
mov
add
test
add
mov
mov
add
call
(bad)
mov
mov
add
test
add
(bad)
loope
scas
add
cdq
cdq
add
mov
add
scas
scas
add
leave
leave
add
mov
pop
add
retf
retf
add
pusha
add
(bad)
les
in
mov
add
scas
scas
add
mov
mov
add
jno
add
mov
add
mov
add
mov
add
mov
add
lods
lods
add
cmps
cmps
add
mov
pop
dec
dec
add
jbe
add
push
add
mov
movs
add
mov
add
data16
dec
add
rol
mov
jg
add
pop
add
imul
xchg
add
fadd
rol
mov
push
add
jg
add
daa
daa
add
push
dec
add
and
jge
jae
dec
inc
inc
add
popa
popa
add
dec
add
dec
add
jno
ins
data16
cmps
cmps
add
inc
add
add
jo
push
in
loope
add
jno
sar
add
jo
cmp
fwait
xchg
xchg
add
es
js
imul
movs
mov
mov
mov
xchg
inc
push
inc
add
movs
pop
add
std
std
add
cli
cli
add
clc
clc
add
div
add
hlt
hlt
add
repz
icebp
icebp
add
out
out
add
in
in
add
jmp
out
out
in
in
jecxz
jecxz
loope
loope
(bad)
fiadd
(bad)
fadd
fcmovnu
fild
(bad)
fld
xlat
xlat
xlat
add
aam
add
rcl
add
rcl
add
iret
iret
add
int
add
retf
enter
mov
add
(bad)
les
ret
ret
ret
add
rol
mov
mov
mov
add
mov
mov
mov
scas
scas
scas
add
stos
add
movs
movs
add
mov
lahf
add
cwde
cwde
add
xchg
xchg
add
mov
add
mov
add
add
add
jp
jp
jns
jns
jne
jne
jae
jae
jno
jno
outs
outs
outs
add
imul
push
data16
add
arpl
pop
pop
pop
add
pop
add
pop
add
push
add
add
push
add
push
add
dec
add
dec
add
dec
add
dec
add
inc
add
inc
add
inc
add
aas
aas
add
cmp
add
aaa
aaa
add
sub
add
adc
add
push
push
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
(bad)
loope
out
fxch
ret
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
iret
(bad)
mov
out
aad
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
(bad)
fcmovb
(bad)
(bad)
mov
dec
pop
out
fmul
in
in
in
in
in
in
in
in
in
in
in
in
in
ret
(bad)
mov
mov
bound
push
gs
dec
jae
fst
ret
in
in
in
in
in
in
leave
xlat
leave
test
stos
int3
rol
imul
jns
fmul
in
in
in
in
rcl
mov
test
les
in
in
call
data16
mov
mov
mov
mov
int
mov
mov
in
in
in
jmp
in
mov
stos
scas
mov
mov
scas
mov
mov
mov
push
pop
pop
jb
inc
ds
mov
mov
mov
movs
cdq
call
aad
mov
pop
push
mov
ret
mov
mov
test
lods
stos
test
cmps
mov
xchg
pusha
(bad)
push
in
mov
cwde
xchg
xchg
xchg
cwde
mov
or
ror
mov
mov
ja
fadd
mov
xchg
xchg
xchg
xchg
xchg
scas
or
mov
cmps
mov
rol
sar
cdq
xchg
xchg
xchg
xchg
xchg
lods
syscall
add
fwait
mov
jl
mov
mov
mov
in
in
in
in
mov
xchg
stos
adc
xor
adc
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
add
sub
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
adc
add
fwait
nop
xchg
sub
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
push
add
sbb
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
pop
add
xor
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
sbb
add
stos
mov
add
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
push
add
or
jbe
sbb
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
and
add
or
add
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
and
add
inc
adc
or
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
and
mov
test
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
sub
lods
mov
mov
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
sub
mov
rol
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
xor
mov
mov
add
in
in
in
in
in
in
in
in
in
in
in
in
in
test
sahf
popf
fwait
movs
movs
lods
cmps
rol
in
in
in
in
in
in
in
in
in
in
in
in
in
in
fs
lahf
lods
fwait
xchg
xchg
xchg
cwde
xchg
rol
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
imul
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
(bad)
clc
pop
(bad)
inc
add
inc
add
add
(bad)
add
add
add
add
add
add
add
aas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
(bad)
inc
inc
fst
or
loopne
inc
dec
add
add
push
add
gs
xor
add
or
dec
outs
and
je
jae
cs
inc
add
lahf
push
sbb
pop
add
mov
add
popa
outs
jae
push
gs
inc
inc
add
add
add
add
gs
xor
add
push
add
ins
and
bound
imul
add
add
add
(bad)
inc
add
pop
pop
inc
adc
add
add
add
add
gs
xor
add
adc
inc
outs
jo
popa
and
arpl
gs
popa
and
add
add
(bad)
inc
add
jg
ja
adc
adc
pop
add
mov
add
popa
outs
jae
push
gs
inc
dec
add
or
add
add
gs
xor
add
or
inc
jb
push
add
add
add
(bad)
inc
add
jg
ja
adc
add
pop
add
mov
add
popa
outs
jae
push
gs
inc
inc
add
or
add
add
gs
xor
add
push
add
data16
jne
and
arpl
imul
add
add
add
inc
add
pop
pop
loope
adc
add
pop
add
add
push
add
popa
xor
sbb
xchg
mov
add
mov
jmp
add
dec
inc
dec
inc
add
add
add
add
(bad)
in
add
inc
jne
imul
add
add
add
(bad)
out
add
inc
outs
bound
rol
add
add
adc
or
add
dec
js
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
or
sub
enter
add
adc
add
add
les
adc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
and
pop
xor
xor
adc
or
pop
adc
add
add
push
push
push
pop
push
add
add
add
add
adc
and
adc
adc
jno
adc
xor
adc
adc
arpl
xor
mov
adc
add
add
add
add
pop
add
add
add
add
add
and
adc
inc
adc
xor
and
adc
adc
mov
add
loope
inc
lock
and
adc
push
and
add
add
add
add
add
add
add
and
inc
push
popa
jno
adc
rcl
icebp
xor
fiadd
or
add
add
add
add
add
(bad)
sub
dec
(bad)
scas
adc
mov
arpl
mov
cmp
sub
lods
je
dec
shr
mov
sub
lods
dec
push
cmp
mov
jo
push
adc
or
xor
movs
stc
out
cmc
fmul
pop
sub
sub
lods
sti
mov
push
ins
std
add
arpl
in
mov
mov
jns
jo
cmps
or
mov
fstp
hlt
sbb
adc
and
test
sub
jg
out
sbb
sbb
test
mov
lods
fcmovnbe
adc
push
mov
daa
(bad)
fucom
dec
jmp
aaa
dec
mov
push
xlat
arpl
mov
ja
and
sub
pushf
and
cmp
inc
dec
inc
out
rcr
inc
jmp
aam
jne
dec
das
das
xor
or
retf
sub
push
jbe
fsub
fimul
fnsave
and
daa
in
xchg
pushf
sbb
sub
mov
(bad)
push
in
sbb
aaa
or
adc
ins
fisttp
sti
ins
mov
fdiv
or
mov
mov
sbb
int3
enter
mov
jmp
call
and
xor
mov
popa
mov
jno
setns
mov
call
sub
je
sub
cmp
imul
ins
arpl
or
push
jo
inc
adc
dec
repz
lods
aad
rol
jmp
and
bnd
shl
stos
sbb
or
and
imul
lods
dec
hlt
cmp
xchg
cmp
imul
cmp
scas
sar
cmc
mov
push
frstor
mov
push
cmp
bound
and
cld
retf
mov
mov
cmps
xchg
dec
popa
icebp
sbb
(bad)
lea
sar
jb
ret
or
or
mov
adc
fmul
in
mov
fild
inc
shl
inc
mov
inc
pop
sar
cmp
in
adc
retf
push
test
out
and
stc
mov
jmp
movs
jno
push
cmp
scas
push
lods
inc
test
sbb
dec
aaa
cmp
mov
ja
aas
nop
push
sub
je
pushf
neg
movs
imul
int3
ins
jbe
ins
jb
sar
cmc
mov
pusha
rcl
cdq
jmp
outs
mov
xchg
aad
jnp
mov
lahf
inc
imul
stc
mov
sbb
and
mov
xchg
inc
cmps
fcomi
sbb
mov
xchg
mov
lea
in
push
imul
(bad)
jb
dec
mov
aad
ret
fwait
inc
sbb
fcmovnu
pop
clc
mov
mov
movs
and
dec
dec
pop
mov
mov
inc
test
popf
aam
mov
call
mov
inc
xchg
jp
jbe
call
lods
inc
adc
loopne
pushf
test
mov
sbb
outs
cdq
sbb
out
(bad)
movs
pop
xchg
fsub
jp
(bad)
sub
ret
dec
es
jb
stos
dec
and
xchg
out
xchg
scas
cmp
retf
ds
pop
mov
dec
lock
loopne
xchg
xchg
aad
xor
bound
sub
dec
fwait
cwde
xchg
outs
sbb
ins
push
add
hlt
jl
cdq
outs
dec
pushf
(bad)
cmps
es
scas
adc
dec
cmp
and
jb
stc
or
adc
cmc
mov
call
outs
fidiv
dec
xchg
cmc
cld
adc
mov
jae
retf
xor
gs
sub
mov
push
mov
lods
inc
inc
xor
test
mov
inc
dec
mov
cdq
fist
pop
dec
loopne
daa
call
pop
xor
dec
push
xor
jmp
cmps
mov
dec
mov
xlat
dec
cmp
jmp
jne
dec
leave
jno
inc
in
inc
xor
jmp
mov
fnsave
cmps
dec
xlat
(bad)
out
dec
cdq
jnp
call
pop
push
imul
and
sahf
repnz
push
hlt
pop
xchg
and
jns
add
nop
mov
inc
ins
(bad)
popf
test
gs
mov
pop
or
dec
adc
call
xor
test
dec
jbe
cmp
sub
inc
xor
call
ret
inc
jl
jmp
js
or
jb
les
mov
pop
cmc
sbb
pop
mov
jl
push
js
rcl
adc
pop
imul
repnz
dec
mov
fwait
out
sbb
dec
fmul
and
pop
frstor
rcr
mov
mov
out
scas
lahf
xchg
outs
sbb
es
sbb
into
daa
push
sbb
pop
sbb
adc
pushf
inc
dec
inc
push
dec
test
sbb
cmps
fld
mov
xchg
add
add
movs
sub
push
xor
into
mov
pop
call
add
arpl
dec
adc
xor
imul
mov
sti
test
mov
mov
mov
or
cmps
(bad)
outs
es
sub
bound
mov
push
jmp
pop
sbb
adc
pop
loope
and
cmps
rcl
dec
jns
out
mov
inc
push
sub
xlat
lods
mov
dec
mov
and
rol
xchg
adc
je
call
scas
xchg
mov
mov
mov
das
pop
push
add
out
add
or
adc
pop
data16
mov
popa
les
inc
loop
scas
push
cld
sti
inc
xchg
stos
pop
retf
cmovs
and
cmps
push
push
fdiv
jb
mov
push
fist
dec
pop
push
gs
ss
xchg
out
sub
and
and
scas
push
mul
(bad)
pop
cs
jae
xchg
into
jno
sub
mov
sbb
popa
popa
(bad)
jmp
jns
push
stc
adc
ffree
js
loope
push
shl
mov
xlat
mov
cmc
mov
sbb
stc
inc
inc
ja
inc
sbb
and
lock
jae
ins
dec
xor
call
xlat
cmp
jns
paddusb
add
add
packssdw
sti
mov
adc
pop
xchg
or
nop
fld
(bad)
cdq
sub
ret
and
inc
std
nop
out
cmp
lock
stc
lods
inc
xchg
(bad)
iret
dec
xor
dec
cmp
pop
add
mov
and
add
test
xchg
jge
cmp
pushf
je
out
aad
sbb
ret
ja
aaa
clc
sub
outs
xor
aad
leave
fldenv
inc
iret
sub
xchg
stos
int3
dec
les
cmp
cwde
jl
js
inc
mov
pop
fucomi
add
call
sbb
mov
dec
or
fdivr
test
mov
cmp
pop
cmps
repz
mov
outs
and
mov
sbb
jb
stos
lods
fmulp
push
jo
cs
mov
test
in
or
xor
dec
dec
sub
adc
dec
push
cmps
mov
pop
add
mov
ret
xchg
loopne
das
add
fistp
mov
test
mov
sahf
mov
addr16
dec
mov
das
cmp
adc
daa
pusha
sub
push
arpl
dec
inc
mov
fwait
or
mov
stos
mov
xor
int3
dec
inc
and
(bad)
(bad)
ins
repnz
mov
push
outs
call
sub
ss
pop
ins
jmp
jnp
inc
inc
xchg
push
(bad)
mov
adc
stos
in
or
retf
outs
mov
rcr
int3
dec
gs
and
enter
mov
jl
inc
mov
xor
addr16
and
nop
push
arpl
pop
jmp
das
sbb
dec
ror
jb
xchg
repnz
add
jmp
mov
dec
lds
pushf
test
into
mov
dec
xchg
adc
jns
dec
adc
fwait
ins
leave
pop
xor
je
add
je
pushf
sbb
adc
jnp
fisub
fstp
dec
inc
mov
inc
dec
addr16
div
xor
dec
pop
xchg
mov
cmp
mov
push
push
shl
xchg
and
add
push
push
mov
outs
mov
hlt
imul
nop
pop
sbb
add
(bad)
xor
mov
cld
pop
(bad)
aaa
or
jb
stos
stos
mul
mov
leave
xchg
adc
cli
ins
test
ins
adc
push
adc
stc
inc
mov
jmp
ss
xor
lods
inc
xchg
imul
mov
or
jl
lods
es
repz
fadd
inc
std
inc
aam
jg
bnd
adc
shl
lea
inc
add
arpl
in
dec
sub
call
sahf
push
lea
leave
mov
sar
add
out
adc
cli
xor
inc
int3
aas
inc
adc
inc
xchg
out
inc
xchg
xchg
xchg
ret
mov
and
bound
cmps
or
nop
xlat
or
xor
or
sub
jnp
or
cmp
fsubr
retf
push
and
fdivr
adc
fs
fwait
int3
int3
push
aam
inc
xchg
and
sub
pushf
mov
fdivr
mov
push
out
dec
pop
ja
sub
and
sti
xchg
mov
push
mov
jbe
adc
jge
mov
loope
out
pop
aad
daa
pop
xchg
add
pushf
nop
cs
fdivr
test
adc
inc
add
add
add
add
add
fs
and
mov
lock
lods
jmp
inc
push
in
push
(bad)
xor
mov
aam
xchg
sbb
push
pop
cwde
scas
shl
fld
push
push
push
cmps
xor
cmp
xchg
fisub
lods
adc
fstp
aaa
jbe
out
aad
lods
(bad)
adc
adc
lea
push
sti
pop
(bad)
std
imul
pop
mov
adc
pop
sbb
scas
push
add
aaa
sub
sahf
mov
mov
daa
jnp
jle
ins
mov
or
arpl
(bad)
aad
or
and
(bad)
(bad)
in
popa
sbb
xor
ror
sahf
retf
cli
bound
bound
mov
lea
xchg
add
ja
inc
adc
mov
pop
mov
sub
pop
popf
push
dec
inc
xchg
or
cs
xchg
sub
pop
sbb
pop
in
fwait
xor
shl
lea
ss
sbb
mov
jp
pop
out
lock
imul
xor
loopne
mov
(bad)
mov
sub
in
scas
in
pop
fcmovnu
std
js
xchg
imul
out
mov
dec
ins
or
in
pop
stos
jg
push
fstp
dec
scas
(bad)
fadd
push
test
sbb
mov
jecxz
out
les
mov
test
and
mov
sub
cmp
fld
xchg
xchg
test
pop
aas
arpl
inc
push
cmps
iret
inc
cs
or
jmp
shl
jbe
loope
push
mov
mov
mov
mov
mov
push
sti
mov
sbb
push
clc
shr
outs
ss
jge
jge
mov
sub
in
outs
push
jmp
add
xor
imul
xchg
fcomp
bound
push
jne
call
leave
addr16
popf
or
ins
dec
mov
outs
ins
sub
xchg
in
pop
scas
in
mov
sub
in
and
(bad)
sbb
or
retf
(bad)
(bad)
shl
jb
div
popa
jbe
lahf
or
inc
add
gs
mov
jne
jge
scas
or
xchg
cmp
push
cmc
addr16
not
(bad)
sbb
sbb
cmp
cmp
sti
push
jmp
mov
das
(bad)
jmp
cmc
je
or
in
mov
test
leave
adc
sub
(bad)
ss
pop
fldenv
xchg
xchg
xor
repz
pop
sbb
in
cmp
fcomp
call
es
ds
push
mov
ja
bound
pop
movs
sti
adc
push
mov
cmp
jl
mov
pop
sar
scas
jmp
jnp
fistp
pop
push
jnp
std
mov
fnstenv
aas
jmp
hlt
fisttp
jmp
mov
scas
(bad)
ins
in
adc
mov
mov
stc
icebp
test
mov
sti
xor
stc
outs
fdivr
ja
shr
mov
cmp
adc
jmp
fist
push
inc
lods
stos
(bad)
cmp
loope
pop
mov
ins
in
sbb
mov
(bad)
ss
test
xchg
mov
pop
jle
je
mov
inc
mov
push
pop
jbe
cli
call
jl
xor
in
out
cmp
aas
neg
out
sbb
mov
std
dec
imul
jbe
ins
scas
adc
test
adc
sti
shl
gs
pop
xchg
jno
pop
aad
out
fnstenv
ins
jmp
add
add
int3
retf
mov
or
ror
push
outs
adc
js
jb
mov
mov
sub
inc
test
sahf
aam
scas
inc
ss
adc
or
jge
aaa
in
jbe
mov
mov
mov
popf
push
jl
sbb
dec
and
rcl
(bad)
lds
mov
mov
scas
(bad)
dec
fnstenv
sbb
pop
not
data16
dec
lods
mov
in
dec
inc
jae
mov
inc
nop
mov
sbb
adc
inc
sub
imul
cmp
sbb
adc
imul
jl
cs
(bad)
daa
jg
in
cmp
fbstp
repnz
pop
addr16
test
pop
cli
cli
xchg
data16
pop
push
mov
pop
sub
jno
push
cdq
push
xor
lahf
test
fldcw
xchg
cs
xchg
std
mov
jne
or
mov
stos
mov
lods
jmp
outs
cmp
dec
fstp
jmp
dec
enter
and
inc
lods
dec
fnstenv
retf
pop
in
cs
rcl
xchg
test
mov
jae
xchg
cmps
xor
mov
jns
pop
pop
and
test
cmc
mov
xchg
dec
outs
jp
out
jb
mov
mov
(bad)
inc
lods
cmp
into
sbb
jnp
enter
push
mov
cmc
pop
sub
pop
mov
popa
cmp
adc
sbb
ficomp
jne
dec
push
jbe
mov
pop
jbe
in
call
or
jmp
pop
ds
push
(bad)
mov
aam
push
(bad)
in
inc
(bad)
xlat
xchg
into
into
outs
fcmovb
ret
daa
add
jo
push
push
call
fsub
out
fld
pushf
jo
out
push
ins
neg
icebp
jns
rcl
cmp
mov
jmp
sub
xor
fbld
dec
lods
sahf
imul
cmp
aam
jmp
adc
in
mov
mov
rcl
dec
fldcw
retf
hlt
lds
adc
jecxz
mov
mov
push
xchg
and
movs
jmp
movs
aad
fnstcw
cwde
pop
adc
xchg
cmps
ficomp
sti
adc
xchg
iret
loop
out
test
ins
data16
push
xchg
lahf
push
lock
sub
leave
enter
(bad)
(bad)
shl
mov
cli
jmp
mov
scas
test
mov
mov
rcr
fstp
pop
add
fbld
mov
pop
inc
lods
in
mov
retf
and
mov
push
scas
pop
sbb
ja
in
fwait
jge
ret
(bad)
push
fwait
sbb
mov
xor
xor
cld
pushf
ret
mov
fdivr
call
push
out
imul
mov
and
sub
cmps
ins
jp
retf
jecxz
pop
test
enter
cld
cwde
inc
inc
pop
(bad)
stos
addr16
xlat
mov
lahf
ja
lahf
rcr
in
inc
lods
mov
jl
out
js
push
popa
jbe
movs
stos
in
cli
out
(bad)
mul
mov
aaa
and
inc
ret
and
and
idiv
jmp
dec
jle
cli
loop
push
push
frstor
sub
push
dec
lds
sub
outs
fstp
ret
or
cmp
push
pusha
inc
xor
jmp
out
ins
lods
addr16
rcl
pusha
movs
mov
mov
mov
retf
adc
ret
push
imul
and
fisttp
pop
jne
out
mov
enter
mov
imul
(bad)
jmp
push
mov
fdiv
push
push
jb
inc
clc
retf
in
mov
sar
fisttp
loop
inc
(bad)
jge
mov
popa
or
jmp
fmul
cli
mov
mov
outs
push
aam
mov
and
scas
xchg
imul
jae
jne
(bad)
push
mov
mov
push
mov
xchg
mov
pop
(bad)
pop
xchg
mov
outs
and
outs
mov
xchg
fwait
adc
clc
daa
imul
xor
add
xchg
adc
mov
inc
into
pop
push
mov
jne
je
ds
xchg
push
sub
sub
push
fst
pushf
imul
jae
test
sub
push
sub
xchg
scas
test
out
leave
pop
lods
xor
push
mov
pop
fsubr
ror
push
jg
mov
cmps
out
push
cdq
sub
in
and
mov
xchg
mov
pusha
adc
cmp
xchg
rol
in
es
into
leave
mov
(bad)
sti
outs
aad
ss
mov
cmp
ds
xchg
inc
not
mov
sbb
pop
sub
in
inc
jle
pop
pop
pop
mov
in
test
data16
shl
pop
cmp
sub
das
rcr
sub
scas
lock
rol
mov
and
imul
mov
fild
sti
mov
mov
jmp
lods
mov
pop
mov
jl
sub
and
xchg
mov
mov
popa
dec
xchg
je
mov
sub
cdq
fwait
xchg
mov
daa
pop
call
pop
xchg
sbb
(bad)
out
fs
(bad)
bound
jae
and
jnp
push
cmps
idiv
push
mov
xchg
pop
sbb
test
ds
loop
xchg
xor
test
out
(bad)
clc
inc
push
push
add
jne
in
inc
fsqrt
hlt
cli
stos
adc
cwde
fbld
addr16
pop
xor
pop
xlat
pop
cli
pop
out
sbb
fnstcw
adc
or
push
aam
int
out
int
rcr
(bad)
lock
mov
sub
lock
push
idiv
stos
sbb
cmc
push
imul
xlat
adc
jle
mov
inc
aad
pusha
push
sti
or
je
lds
(bad)
call
push
xchg
mov
pop
out
sub
test
cdq
fidivr
imul
in
mov
xlat
jge
outs
fwait
mov
lea
fcomp
inc
xor
inc
sbb
jge
lea
adc
ins
dec
xor
jecxz
sar
mov
imul
push
mov
fstp
gs
ret
fidiv
sbb
cld
pop
mov
int
imul
mov
scas
(bad)
mov
add
cld
xchg
jp
mov
(bad)
fiadd
or
add
add
and
(bad)
jmp
or
pop
mov
mov
das
sub
xchg
mov
in
jl
(bad)
sbb
shr
out
je
push
lods
fcmovbe
into
test
ins
stos
sbb
fs
inc
jb
sub
cwde
inc
jbe
mov
fadd
jne
fiadd
mov
fisttp
xchg
outs
jle
retf
xchg
fxch
aaa
jp
push
test
mov
inc
adc
in
sub
dec
push
xchg
cmp
or
lods
gs
fnstenv
mov
mov
jl
es
sub
push
and
xchg
push
fadd
jmp
xlat
das
imul
pop
dec
mov
test
xlat
mov
adc
xchg
jbe
scas
push
or
lea
and
ret
fs
shl
jnp
pop
rcr
aaa
mov
xchg
repnz
ja
mov
(bad)
and
icebp
ss
cmc
sbb
fisttp
xor
fisttp
jno
or
dec
and
ins
js
out
xchg
in
nop
test
jb
or
and
jne
push
ds
xor
adc
xchg
xchg
nop
mov
inc
dec
mov
mov
mov
imul
movs
ins
in
int
sbb
add
xchg
jecxz
xor
sbb
mov
cmp
xor
and
movs
imul
push
pop
rcr
pop
xor
lea
lea
retf
and
shr
dec
out
call
data16
cmps
mov
sbb
jne
cld
dec
xchg
xchg
inc
mov
in
sbb
sbb
loop
test
test
pop
in
push
lahf
dec
mov
lods
add
ror
(bad)
cdq
fxch
sbb
sub
mov
pusha
(bad)
or
mov
mov
retf
mov
push
add
aas
or
sbb
xchg
dec
(bad)
adc
mov
iret
and
lods
enter
or
lds
ja
adc
sub
xor
add
les
loope
push
rcl
retf
xor
add
xlat
cmps
mov
outs
dec
and
hlt
jmp
dec
mov
adc
clc
gs
repz
fidivr
fcmovu
xor
sub
jg
and
xchg
xor
mov
icebp
(bad)
mov
cli
xchg
out
xchg
stc
adc
push
xor
mov
fs
xchg
xor
pop
fistp
mov
mov
retf
fs
mov
sbb
and
test
neg
into
mov
jno
xchg
mov
scas
xchg
inc
jg
js
imul
fstp
mov
pop
fwait
bound
out
pop
stc
sbb
stc
js
inc
lds
dec
sub
dec
jp
sbb
adc
sbb
gs
and
outs
and
mov
jg
scas
pop
xchg
aas
add
cmp
inc
sub
scas
push
enter
mov
test
sahf
dec
hlt
xchg
(bad)
mov
xor
inc
and
dec
mov
cmp
jbe
adc
pop
call
xchg
inc
(bad)
sub
rcl
add
ret
imul
(bad)
push
fnsave
jno
or
scas
aad
arpl
dec
adc
aas
(bad)
inc
push
adc
sub
xchg
ret
xchg
inc
ins
dec
add
adc
mov
(bad)
inc
pop
jne
push
push
scas
popa
mov
aam
sub
jbe
inc
mov
jecxz
add
out
lahf
iret
mov
cwde
lea
fstp
pop
ins
out
gs
das
gs
fstp
shr
push
test
pushf
jns
call
mov
xchg
loope
cmp
add
nop
adc
scas
stc
bound
mov
dec
std
adc
xchg
stos
mov
pop
cmps
fidiv
in
scas
mov
mov
stc
and
out
pop
repz
loop
jl
dec
cmps
xor
mov
aaa
mov
(bad)
jp
setb
sbb
pop
cmp
fcomp
xchg
shl
adc
sub
adc
cmp
pop
enter
sbb
mov
jno
ja
mov
mov
dec
hlt
and
inc
inc
jmp
mov
mov
xor
inc
hlt
mov
push
pop
mov
xchg
leave
jb
xchg
hlt
dec
out
bts
(bad)
sub
(bad)
xchg
cdq
or
push
pop
push
test
pop
or
in
cmp
aam
enter
mov
popa
sbb
mov
mov
arpl
add
sub
nop
dec
sar
inc
stc
pushf
pop
retf
xchg
xchg
(bad)
push
inc
fs
js
cmp
dec
aam
in
js
stos
dec
clc
test
inc
cmp
jl
mov
shl
mov
xor
gs
aam
lods
jmp
jecxz
cs
xor
dec
scas
xor
xchg
cmp
fist
cmp
and
mov
jl
retf
es
mov
push
push
enter
inc
or
fdivr
mov
mov
add
jl
inc
sbb
out
dec
add
call
loopne
mov
push
mov
mov
mov
loope
adc
xchg
jg
cmps
and
dec
jb
ret
dec
mov
add
cli
push
inc
push
dec
dec
lock
inc
mov
ja
jmp
mov
mov
pop
popa
sub
add
pop
pop
ins
retf
inc
call
dec
xor
leave
cdq
sub
movs
xor
js
clc
(bad)
add
(bad)
xor
mov
push
mov
imul
inc
lock
addr16
sub
hlt
pop
xchg
inc
ficom
xlat
add
xchg
add
pop
push
hlt
ins
arpl
sbb
popa
or
mov
js
pop
inc
enter
cmp
cli
mul
enter
pop
add
out
(bad)
mov
adc
enter
bound
push
sub
sub
mov
jg
div
push
inc
sub
add
jp
add
xchg
(bad)
fcomp
es
ds
retf
cmp
jecxz
enter
inc
(bad)
pop
(bad)
addr16
pop
sahf
push
pop
out
lahf
(bad)
ins
inc
adc
(bad)
(bad)
fiadd
or
add
add
sbb
sbb
or
inc
ins
ins
cmp
mov
jle
sbb
push
xchg
cmp
add
push
(bad)
inc
add
xchg
add
push
out
iret
jbe
mov
push
inc
mov
aaa
call
pop
pop
dec
push
dec
clc
int3
aad
pop
push
call
jmp
adc
mov
mov
xor
bound
jo
jge
cmc
js
std
imul
lea
loop
das
add
ds
ret
xchg
sbb
fbstp
inc
mov
jmp
iret
push
aad
nop
int3
mov
inc
jns
popf
sbb
cdq
cmps
xor
stos
daa
mov
repz
push
push
outs
out
sbb
mov
imul
push
icebp
je
dec
or
in
mov
adc
mov
cmps
pop
inc
cmp
fnstcw
mov
pop
mov
push
push
in
loop
call
sbb
mov
cmp
adc
push
xor
sub
sbb
sub
(bad)
test
aaa
lds
stos
fldcw
xchg
mov
sub
push
mov
pop
fidivr
fld
es
or
sub
dec
ret
mov
mov
popa
pop
fmul
mov
retf
repnz
js
outs
mov
cmp
in
cdq
repnz
xlat
imul
in
scas
cmc
std
jno
sub
cld
pusha
mov
pusha
out
sub
js
ins
scas
mov
gs
std
jp
leave
out
stos
sbb
xchg
bnd
jo
ins
rcr
stc
pop
out
es
jecxz
mov
ficomp
ins
jbe
jle
mov
fist
push
lahf
sub
int3
ret
dec
cli
mov
arpl
dec
pop
bound
push
dec
fidivr
fistp
leave
outs
cmp
adc
mov
test
push
cmc
cli
sbb
fnstenv
adc
mov
popf
push
sub
sub
and
or
xor
push
sub
(bad)
jae
popf
adc
mov
pop
dec
popa
daa
outs
mov
inc
lods
fcomp
mov
lahf
pop
push
fcomp
xchg
sub
(bad)
repz
mov
es
ss
ins
outs
fwait
(bad)
and
pop
adc
ret
push
push
dec
mov
dec
xchg
adc
push
in
mov
add
adc
dec
icebp
dec
mov
mov
arpl
icebp
push
mov
mov
js
inc
int
repnz
retf
and
ins
test
ins
iret
adc
mov
jbe
ins
rcl
xor
sbb
aad
mov
inc
idiv
mov
jb
out
inc
or
mov
jns
xchg
imul
dec
mov
sbb
or
xor
data16
or
loope
mov
push
mov
shr
out
mov
pop
mov
jle
lds
or
mov
sub
dec
sbb
ins
inc
sub
(bad)
test
jle
sbb
cmc
daa
pop
mov
popf
jp
pop
out
dec
outs
adc
jb
push
xor
lods
cmps
and
or
jo
stos
inc
sub
in
pop
add
fidiv
ins
hlt
das
call
pop
call
rol
push
adc
ror
or
adc
ss
enter
fistp
stos
imul
aam
sub
es
mov
ds
push
cmps
mov
add
dec
jl
in
(bad)
mov
ins
jg
lods
push
ins
mov
add
add
cmp
ja
fidiv
jge
jae
jbe
stos
mov
int
mov
add
pop
pop
mov
aaa
mov
xchg
or
lods
leave
jecxz
scas
call
jmp
sub
sbb
call
sbb
adc
dec
int
scas
or
pminsw
xor
call
aas
sub
or
dec
cmp
and
sub
cli
xchg
push
add
mov
retf
fisub
mov
dec
lods
push
mov
pop
addr16
cmp
inc
sub
xchg
cli
cmp
xor
and
lods
rol
push
push
dec
dec
mov
jl
mov
stc
and
jno
lea
mov
mov
sub
out
gs
call
stos
mov
jb
fimul
(bad)
cwde
or
jl
cmp
rcr
stc
sbb
(bad)
in
shl
lods
(bad)
and
cmc
pop
retf
leave
add
les
popa
rcr
cmp
mov
pop
sub
push
adc
sbb
mov
loop
adc
add
jb
push
mov
jg
adc
pop
stos
add
inc
add
add
fcomp
mov
addr16
loopne
in
loop
ds
iret
dec
sub
jb
hlt
cmp
xchg
call
test
mov
loop
shl
lock
jb
or
push
and
xchg
push
ret
pop
jmp
mov
lock
dec
push
imul
add
pop
xlat
stos
fwait
stos
push
xchg
push
mov
xchg
pop
in
sti
push
fimul
push
and
ret
jns
dec
push
fmul
inc
lods
jp
inc
imul
test
and
and
sub
aaa
dec
jo
aam
mov
out
sbb
dec
adc
mov
mov
cmps
inc
test
call
sub
push
or
or
clc
test
pushf
sub
xchg
adc
adc
add
pushf
(bad)
imul
mov
push
cmp
sbb
mov
or
mov
clc
movs
std
dec
int3
gs
pop
js
ds
mov
push
jb
ret
lds
nop
dec
pop
retf
das
(bad)
xchg
(bad)
or
jno
and
(bad)
mov
or
cmp
sbb
loope
in
daa
xor
dec
adc
pop
std
jnp
sbb
add
(bad)
cmp
mov
or
sbb
ret
jl
aas
or
mov
imul
dec
int3
rcl
jl
shl
adc
cmp
pop
dec
sub
add
pmulhuw
daa
ror
sti
js
xor
scas
jmp
dec
pusha
jl
inc
data16
add
or
and
push
xor
clc
jnp
lea
test
(bad)
movs
addr16
jge
dec
mov
jg
fistp
fiadd
or
add
push
aas
add
repz
cmp
ds
xor
cmc
inc
sbb
outs
fstp
mov
sbb
mov
cmps
lds
sub
fwait
or
loop
pop
mov
fstp
popa
shl
adc
popf
mov
and
movs
popf
inc
xor
add
not
cs
cmp
jmp
mov
hlt
mov
cmc
movs
cmps
outs
pop
inc
jb
test
inc
shr
(bad)
std
in
sbb
fadd
push
aam
dec
nop
add
add
dec
sbb
imul
loopne
push
or
dec
cmps
icebp
shl
jno
or
sti
or
test
mov
mov
push
jnp
lahf
xor
xchg
xchg
sub
sub
pop
sub
jl
xor
outs
lods
outs
ror
mov
inc
and
call
ins
ss
hlt
inc
dec
sub
dec
inc
mov
aam
xchg
bound
cmp
mov
push
ins
in
dec
mov
mov
jae
out
retf
shl
je
or
cmp
arpl
mov
inc
cs
cmp
sbb
in
xlat
and
dec
cmps
mov
mov
imul
mov
loopne
jo
scas
ins
xchg
mov
test
xchg
cdq
(bad)
or
addr16
sub
data16
shl
clc
sub
in
xor
jne
jp
jb
(bad)
or
fdivr
mov
fnstcw
popa
test
jae
les
aam
sub
adc
jo
xchg
adc
mov
(bad)
leave
sub
stos
icebp
lds
popa
cld
sub
retf
inc
aam
cdq
cld
add
push
les
not
add
mov
xor
xchg
add
nop
outs
int3
sub
push
imul
push
cmc
popf
mov
xor
and
mov
cmp
add
add
mov
in
popa
jo
pop
jne
in
jmp
pushf
repnz
push
mov
ja
repnz
in
test
push
cmps
jge
mov
adc
and
rcr
push
and
call
pop
pop
repnz
inc
jecxz
lock
call
jns
mov
push
popfw
fcmovnbe
adc
test
fwait
pop
xchg
retf
pop
cmps
and
xchg
sbb
ficom
fisub
xchg
mov
clc
lea
push
pushf
xor
das
pushf
retf
xchg
bound
push
add
rol
jns
or
inc
scas
dec
mov
std
cmps
repnz
push
inc
dec
in
(bad)
fsub
pop
and
jb
add
(bad)
jne
fsub
lea
rol
sub
sbb
xchg
sar
scas
movs
ret
pop
cmps
aam
dec
idiv
jb
cwde
jmp
push
out
add
jl
add
stos
inc
cmp
lea
outs
and
mov
sbb
sbb
int
popf
inc
lahf
popa
push
push
sub
sti
(bad)
xchg
rcr
sti
push
les
popa
cmp
(bad)
xor
sar
pop
add
loope
cmp
test
add
cmp
mov
movs
push
icebp
jle
in
xchg
fstp
enter
and
lods
(bad)
pop
mov
test
ficom
fcom
out
mov
push
shr
mov
aad
ficomp
les
inc
movs
cmp
mov
or
int
push
rcr
cmp
inc
loop
pop
mov
jbe
gs
sahf
hlt
ficom
test
xor
mov
push
inc
inc
push
jmp
stc
xor
pop
push
and
movs
ins
lods
into
fisttp
es
test
(bad)
or
out
mov
adc
(bad)
aaa
sub
mov
push
sti
ja
gs
ror
inc
sbb
stc
and
mov
jbe
test
jnp
lock
mov
(bad)
lods
(bad)
mov
pop
mov
test
repz
xor
dec
sub
push
daa
sub
mov
jne
sbb
lea
repnz
mov
xchg
pop
jp
jbe
push
data16
pop
mov
push
pop
arpl
push
(bad)
and
and
xchg
xlat
jmp
mov
push
ror
(bad)
push
rol
add
push
in
push
push
rcr
push
inc
mov
push
mov
cmps
push
aad
jecxz
or
xor
add
add
aas
add
fiadd
(bad)
fs
xchg
cli
mov
(bad)
scas
ror
std
mov
dec
pop
xchg
inc
mov
mov
movs
jmp
cmc
jb
(bad)
cmc
adc
bound
inc
ins
dec
xchg
daa
nop
int
repnz
bound
ja
jmp
lock
xchg
mov
aad
jb
outs
dec
cli
jne
iret
aaa
clc
or
mov
jb
mul
inc
je
test
or
test
push
popf
popa
push
scas
scas
imul
xchg
add
push
add
in
(bad)
idiv
add
in
jno
retf
(bad)
sub
sub
loope
adc
stc
cmp
pop
jmp
push
sub
inc
pop
mov
mov
mov
std
mov
mov
das
inc
mov
call
cmps
es
jne
dec
int3
mov
inc
in
in
scas
ja
add
loopne
sahf
or
xor
adc
inc
shl
xlat
xchg
sub
dec
lods
fisttp
fidivr
mov
gs
pop
or
sbb
lods
mov
popf
mov
je
mov
out
aam
sar
jmp
fucomi
inc
sahf
rol
dec
addr16
cmp
cmp
xchg
pop
loop
push
int3
mov
sub
out
inc
xchg
sbb
pop
xor
adc
xchg
out
pushf
add
aad
out
mov
lock
pop
ins
add
ret
loope
push
mov
and
outs
cs
jno
mov
sub
bound
outs
sbb
xor
inc
add
js
test
or
cmp
inc
add
inc
aas
push
repz
lods
lods
out
gs
sub
aaa
sub
mov
rcl
imul
xlat
(bad)
inc
ss
xchg
fadd
je
repnz
sti
ins
xchg
mov
int3
lods
mov
aam
jg
push
loope
mov
hlt
std
(bad)
jne
mov
cli
xchg
or
xor
test
push
adc
push
rol
or
xor
(bad)
inc
cmp
lahf
xchg
fldcw
cmp
adc
pusha
mov
adc
int
jnp
mov
fwait
in
retf
jg
out
outs
loope
lea
cmp
push
test
test
cmp
in
pop
adc
mov
push
or
pop
es
std
stos
(bad)
cmp
loop
pop
and
ins
cmp
mov
push
or
add
arpl
ins
retf
cmp
jns
pop
bound
cdq
fst
xor
fst
arpl
call
(bad)
aad
test
div
ds
adc
test
inc
jae
inc
add
sar
aam
ret
jge
jmp
inc
ret
sub
inc
jg
stos
dec
cwde
jg
pop
mov
int
lahf
ss
arpl
in
jbe
push
fadd
inc
or
xchg
xchg
cs
jl
xor
ins
neg
cmps
neg
jmp
mov
push
pop
int3
je
arpl
push
or
or
ret
jmp
ss
pop
test
mov
lods
push
test
outs
push
dec
mov
loopne
cli
pop
adc
sub
mov
out
pop
daa
or
test
sbb
data16
ret
cmps
jbe
jle
jo
fstp
dec
cs
sti
cs
fcom
add
or
imul
pop
mov
(bad)
shr
out
dec
in
jmp
push
or
call
xchg
jl
cmp
imul
and
and
pop
test
cmps
rcl
mov
mov
jne
jmp
shl
fwait
dec
imul
lods
scas
dec
push
lds
loope
or
(bad)
inc
mov
adc
or
in
sbb
retf
cmp
adc
mov
ficom
push
add
fst
adc
das
xor
mov
xchg
add
pop
test
sti
xchg
cmp
mov
es
inc
aam
test
mov
pop
pop
cmps
and
shr
cmps
mov
imul
leave
pop
sbb
mov
call
jbe
mov
inc
mov
daa
dec
fsubr
mov
shl
add
mov
aas
data16
sti
dec
lahf
fst
dec
(bad)
xchg
lds
call
mov
pop
jbe
in
popf
and
cmp
call
mov
hlt
jae
shr
ins
cmp
(bad)
cmc
mov
inc
sbb
rol
pop
xchg
out
jle
cmc
call
outs
fisttp
pop
mov
fisub
or
inc
mov
pop
xchg
mov
mov
mov
dec
std
enter
outs
aad
adc
cmp
sub
xchg
ret
int
mov
scas
pop
pop
clc
pop
lea
fld
jle
aam
pop
aas
test
add
xchg
pop
int3
mov
push
or
ins
test
ret
fiadd
add
jae
int
and
mov
stc
dec
mov
add
pop
dec
mov
scas
push
inc
jmp
cmp
mov
push
imul
repnz
xchg
jmp
fiadd
or
add
push
aas
add
repz
xchg
icebp
fmul
std
mov
add
retf
or
test
ja
jno
(bad)
pop
popf
pushf
in
mov
out
push
inc
mov
sub
jg
xor
fmul
lods
mov
sbb
mov
stos
add
je
mov
int
jg
adc
call
scas
cwde
mov
and
xor
jg
repnz
pop
retf
inc
pop
mov
push
inc
cmp
iret
inc
cmp
mov
mov
mov
shl
pop
fcomp
fwait
and
stos
sub
xor
adc
xor
aam
scas
jge
jno
jo
xchg
jbe
inc
mul
adc
inc
pop
sti
popa
mov
ret
dec
daa
xchg
in
inc
test
mov
cmp
jnp
imul
jmp
adc
mov
jmp
jg
test
push
retf
cmps
cdq
cmc
loop
scas
pop
and
jg
mov
xchg
pmulhuw
mov
xchg
or
cmp
fbstp
and
jnp
dec
jmp
cmp
mov
rcr
out
push
popa
test
cmp
shr
xor
adc
sub
out
xor
mov
ds
add
js
and
jl
adc
aam
mul
xor
lahf
fist
cmp
xchg
xor
dec
sti
mov
jnp
cmp
push
cmp
jae
fnstcw
add
ins
leave
mov
pop
sub
pop
pop
adc
push
pop
inc
mov
cmp
out
cmp
xchg
lea
stc
stos
lods
inc
pop
mov
xchg
cmps
cwde
pop
push
mov
adc
mov
sub
loop
mov
lods
cmp
call
mov
nop
fwait
sbb
daa
mov
dec
mov
inc
pop
add
fcomp
es
mov
add
mov
in
stos
fisttp
in
pop
inc
int
mov
pusha
inc
push
push
call
sbb
int3
push
or
mov
dec
dec
cmp
pop
or
test
xor
jmp
sbb
push
jge
inc
rcr
inc
xchg
cmp
add
mov
dec
fidivr
push
out
or
arpl
test
mov
(bad)
cwde
cmp
inc
dec
mov
cmp
movs
scas
loope
in
inc
jge
aas
inc
jl
inc
loop
call
lods
xchg
cmps
mov
ja
push
dec
xor
mov
loope
xor
daa
and
mov
cmps
mov
and
sub
shr
sub
or
lock
mov
jb
dec
inc
leave
lods
dec
imul
mov
aaa
popa
push
jmp
sbb
sbb
push
out
inc
dec
pop
imul
aam
jns
clc
nop
lea
add
aaa
ss
rol
adc
jle
xor
ins
inc
aam
pop
imul
jp
sar
js
add
mov
nop
jmp
in
cmovbe
dec
add
in
aaa
jbe
sar
inc
popa
shr
in
inc
jb
hlt
jp
dec
int
bound
xor
dec
stos
push
(bad)
jae
inc
adc
mov
aam
or
xchg
jmp
jnp
sbb
sub
int3
aam
mov
push
cdq
xchg
(bad)
push
gs
ins
mov
inc
push
mov
jns
xchg
stos
(bad)
push
xlat
add
pop
fidivr
les
repnz
repnz
xor
popa
pusha
js
rcr
sbb
enter
call
clc
jns
icebp
adc
pushf
and
cmp
ja
xchg
das
jle
and
jb
stc
rol
sbb
iret
scas
adc
push
pop
sub
sub
adc
mov
xor
cmp
jb
and
imul
mov
mov
jg
lock
call
loop
push
mov
daa
call
or
and
sbb
(bad)
mov
jno
retf
ins
inc
adc
mov
jp
jg
and
data16
sahf
stc
add
mov
aaa
jne
push
inc
jp
pop
scas
ret
pop
daa
add
pushf
out
cdq
repz
cmps
add
jp
test
mov
fs
fld
out
sub
bound
sub
cmps
cmp
push
lods
popa
scas
dec
sub
test
mov
imul
mov
xchg
cwde
pop
(bad)
loop
sbb
ss
sbb
int3
push
cmps
pop
dec
push
ret
jmp
sahf
xchg
or
ret
sbb
cmp
mov
div
jne
or
and
push
or
out
jno
mov
out
repz
and
and
mov
push
out
sar
(bad)
lea
sub
sbb
jp
iret
scas
xchg
(bad)
sub
mov
inc
js
inc
cmp
div
pop
inc
sub
pop
fsub
mov
push
cmp
ins
xchg
mov
dec
xlat
mov
or
lods
jge
jnp
pusha
inc
mov
xchg
push
xchg
rcr
and
mov
fld
cmps
leave
movzx
mov
test
mov
cwde
xor
add
or
in
(bad)
fstp
loopne
std
push
ret
jae
test
ret
xchg
add
(bad)
icebp
arpl
stos
cs
(bad)
call
pop
push
cld
sub
ss
push
test
popa
inc
mov
aam
sub
xlat
idiv
mov
mov
(bad)
fidiv
in
ja
stc
inc
cli
inc
adc
and
fstp
jge
mov
mov
sub
sub
pop
push
scas
mov
div
popa
movs
pop
adc
rcr
mov
jmp
push
iret
mov
xor
cmp
pop
test
sub
xchg
xlat
into
sub
pop
fiadd
pop
cs
loopne
(bad)
(bad)
cli
dec
or
sub
dec
js
imul
test
xchg
ja
pop
loope
sub
lods
aad
dec
pop
or
in
mov
stos
mov
xor
jg
push
int3
xor
enter
stc
and
cmp
cmc
arpl
add
loop
sbb
lahf
mov
mov
loope
xchg
fnstcw
test
lea
(bad)
xchg
push
jne
gs
jne
aaa
push
fcomp
out
add
xchg
or
jmp
mov
xor
xor
jg
es
jno
(bad)
in
mov
sbb
sub
or
sbb
jae
or
jl
aam
mov
(bad)
xor
jg
(bad)
(bad)
outs
ror
inc
jae
inc
mov
jmp
dec
inc
mov
jne
test
cld
push
sbb
and
xor
cmp
sub
sbb
out
mov
jo
add
inc
push
cmps
ss
dec
xchg
or
std
cmp
enter
mov
inc
inc
pop
push
daa
add
push
fwait
sbb
add
test
push
or
jmp
mov
cwde
jmp
xchg
ret
mov
std
mov
sbb
leave
pop
lds
xchg
in
adc
push
sub
mov
pop
(bad)
mov
rcr
fs
cmps
inc
mul
int
add
jl
imul
mov
xchg
das
jae
jo
das
out
inc
mov
loopne
dec
xchg
loope
xchg
and
fist
xchg
add
int
loop
and
push
lods
les
ins
or
jb
xor
repz
sub
les
and
mov
cdq
out
imul
lock
pop
dec
(bad)
fmulp
prefetch
or
mov
adc
xchg
jmp
frstor
mov
sti
jo
xchg
cld
lods
add
aas
push
cmp
fs
add
(bad)
cwde
fwait
in
and
sbb
inc
lock
in
mov
xor
les
sbb
popa
jmp
cwde
cmps
test
popf
ins
test
lods
adc
pop
push
in
scas
sub
ins
test
int3
dec
scas
inc
mov
repnz
(bad)
(bad)
push
sbb
arpl
sub
fsubr
add
cwde
(bad)
mov
xchg
cdq
pop
(bad)
sub
lods
dec
inc
ins
pop
xchg
pop
(bad)
pushf
arpl
(bad)
pop
pop
test
xor
ret
data16
cmp
sti
cmp
mov
mov
jmp
jns
fild
or
xor
imul
jnp
xchg
pushf
repz
test
fld
xor
daa
scas
or
cwde
(bad)
lods
cmp
dec
hlt
dec
inc
enter
pusha
xor
mov
push
mul
inc
(bad)
outs
retf
xor
or
loop
(bad)
and
and
jecxz
std
jmp
push
add
and
arpl
jae
mov
push
jns
mov
push
test
pop
js
cmc
mov
push
lods
add
push
or
test
pop
push
add
bound
cwde
and
int3
mov
stos
jnp
mov
mov
aas
mov
arpl
fimul
das
pushf
aaa
adc
or
dec
mov
cld
ror
retf
mov
in
out
push
xor
dec
int3
or
cmps
ds
dec
ja
mov
jno
lds
adc
stc
add
cld
pop
cmp
jno
mov
jb
test
mov
or
out
sar
mov
test
adc
mov
adc
stos
outs
or
mov
jg
pop
stos
add
jecxz
xor
(bad)
int3
mov
pop
fstp
jbe
mov
fild
dec
add
pop
jl
dec
sub
mov
sub
pop
sbb
mul
xchg
fiadd
loop
inc
cmps
pop
mov
stos
and
fimul
xor
stc
push
mov
and
sub
pop
int3
mov
push
jb
stos
imul
enter
push
cwde
(bad)
jg
inc
div
(bad)
pop
xchg
jecxz
out
lods
and
movs
in
mov
push
pop
stos
sub
mov
cmp
adc
sub
mov
rol
inc
add
sbb
popf
ins
(bad)
repnz
test
scas
mov
mov
mov
std
js
xchg
or
ins
mov
xlat
(bad)
mov
pop
pop
add
fwait
pop
clc
jg
sub
lea
fldpi
and
add
les
fld
jl
xchg
add
fistp
clc
out
mov
mov
inc
out
ins
cs
xchg
out
cmps
fwait
outs
sub
fidivr
adc
xchg
push
jno
cmp
aam
in
cwde
add
inc
pop
pop
mov
cmps
mov
jmp
xor
das
mov
movs
mov
jmp
and
mov
les
xchg
out
(bad)
not
imul
adc
inc
pop
mov
push
jecxz
dec
jmp
jmp
adc
imul
or
pop
mov
cdq
loop
add
mov
int3
jg
dec
(bad)
inc
or
retf
(bad)
xchg
fcomp
mov
jl
pop
retf
lock
jmp
in
pop
jb
xor
xchg
or
mov
repnz
das
or
shr
shl
cmp
retf
cs
xchg
jle
in
jle
cli
adc
mov
pop
push
movs
sbb
sbb
mov
lea
xor
xchg
dec
stos
(bad)
int3
repnz
xchg
lock
fcmove
adc
sbb
adc
fldcw
jno
mov
cmps
iret
xor
mov
jecxz
pusha
fsubr
leave
mov
sbb
adc
les
call
xchg
sub
cdq
xor
pop
fidiv
in
push
xor
and
lahf
inc
out
hlt
jg
jp
push
xchg
das
popa
and
int
iret
ss
icebp
iret
adc
inc
sbb
push
and
jae
scas
rol
add
push
sub
stos
cld
add
lahf
mov
cmp
pop
pop
ds
or
out
retf
out
xchg
loope
inc
in
cs
inc
jp
xor
fimul
or
lock
loope
aas
popf
xchg
loope
cdq
jb
xor
inc
pop
and
data16
lds
cli
push
mov
pop
aas
mov
xchg
in
mov
cmps
mov
jno
jb
into
pop
into
lods
adc
lahf
add
xor
(bad)
mov
jns
and
cdq
jb
cmp
(bad)
repnz
mov
ja
cmp
mov
rol
push
jbe
push
div
add
dec
ror
push
add
mov
fucomip
icebp
push
xchg
and
imul
ror
lea
pusha
sbb
pusha
sub
or
mov
je
out
jae
movs
xor
repnz
cwde
out
adc
jne
mov
les
sahf
repnz
push
cmp
xor
push
xor
dec
adc
and
jae
push
jo
dec
popa
jne
and
lds
dec
pop
sub
cmps
hlt
sbb
enter
lds
and
dec
inc
fdivr
push
repnz
xchg
mov
mov
adc
mov
or
sub
pop
es
xchg
in
fldcw
lahf
xchg
(bad)
je
lods
pushf
push
lock
lds
push
outs
or
pop
inc
or
inc
sahf
imul
lea
jb
(bad)
shl
cmp
pop
fwait
imul
cdq
addr16
inc
icebp
push
mov
and
call
xlat
jbe
pop
fstp
int3
repz
cmp
cmp
fs
mov
retf
mov
adc
cmp
push
(bad)
call
sub
(bad)
lods
mov
push
das
popa
(bad)
fbld
cld
fcomp
jbe
xchg
sbb
push
jmp
push
retf
cmp
adc
popa
repz
mov
mov
jne
ss
mov
cmp
icebp
arpl
jne
icebp
jns
mov
jg
push
pop
pop
pushf
ret
cwde
pop
fmul
mov
pop
xchg
jno
xchg
sub
mov
daa
popf
and
ins
push
sbb
rol
cwde
pop
push
call
(bad)
enter
cdq
pop
pop
repz
cdq
mov
mov
mov
pop
cs
jle
daa
das
mov
test
ss
sub
mov
sbb
into
mov
mov
popa
repnz
fstp
cmc
lahf
xchg
scas
push
pop
fstp
les
jnp
mov
pop
jb
push
outs
int
sbb
mov
dec
jno
inc
outs
je
mov
pop
mov
sub
push
retf
mov
sar
xor
out
sbb
jmp
sbb
ficomp
ins
std
sub
xchg
mov
out
xor
lock
pusha
ret
mov
cmp
cmp
dec
cs
dec
xchg
sbb
add
fisttp
mov
mov
cmp
mov
lods
dec
cmp
popf
mov
movs
cmps
and
xchg
outs
lock
ss
jl
inc
pop
and
adc
leave
push
sub
xchg
int
xor
jae
rcr
inc
std
sbb
in
call
mov
jnp
ja
pop
mov
and
xor
addr16
mov
cdq
push
lods
xor
push
mov
cli
jns
and
mov
xchg
movs
ins
pop
fwait
pop
xor
jmp
ss
aas
fwait
js
mul
(bad)
and
push
fisttp
xchg
das
cdq
fwait
sub
(bad)
(bad)
shl
es
in
leave
adc
in
fidiv
std
push
dec
cmps
mov
mov
push
mov
(bad)
outs
xchg
cwde
repnz
xchg
pop
loop
js
sti
dec
xor
cmp
cmps
dec
jge
(bad)
pop
cmp
mov
inc
push
aam
pop
repnz
pop
arpl
cmp
pop
in
xor
jecxz
mov
pop
xor
hlt
popa
imul
push
jge
stos
inc
int3
jecxz
dec
sbb
lahf
imul
shl
aaa
xor
lods
aad
jmp
test
fcmovnu
dec
add
(bad)
mov
cli
ficom
xchg
and
daa
push
pop
add
ja
push
pop
arpl
xor
outs
add
out
retf
pop
xor
jno
(bad)
push
mov
neg
jp
xchg
mov
rcr
addr16
dec
(bad)
sbb
and
rol
cmps
ror
iret
sbb
mov
stos
jnp
jp
std
or
mov
sbb
stc
ret
dec
jne
jne
aas
xor
addr16
(bad)
in
mov
mov
cmp
stos
fcmove
outs
inc
fcom
data16
(bad)
into
dec
xchg
xor
sbb
aas
push
aaa
push
aaa
push
rcl
mov
sti
pop
loopne
shl
or
ror
mov
inc
pop
fsubr
outs
repz
jmp
xchg
xlat
add
push
int3
mov
mov
mov
jb
call
int3
in
int
imul
mov
add
sbb
div
enter
sbb
(bad)
sahf
sar
outs
rcl
jnp
aaa
cmps
xchg
sti
jo
sbb
aad
xchg
push
inc
pushf
xor
mov
pop
adc
sar
jne
lock
xor
jno
sbb
xor
jns
add
cmp
cmc
js
adc
xor
std
int
ret
or
loope
inc
retf
fwait
aad
repnz
cmps
aaa
ins
and
not
sbb
or
adc
cs
pop
rcl
xchg
dec
sub
int3
cmp
inc
jbe
out
xor
pop
popf
and
out
idiv
and
call
add
loopne
jno
retf
fistp
adc
inc
mov
sar
rol
mov
xor
stos
mov
into
sbb
ret
mov
repnz
mov
aam
jecxz
lods
pop
push
ror
pop
sub
cmc
jo
sub
icebp
mov
sbb
push
rol
add
stc
retf
nop
ret
mov
add
in
cmp
or
cmp
xlat
sahf
sub
ret
fimul
cmps
jb
inc
mov
add
scas
jbe
mov
cmc
or
or
into
popf
adc
(bad)
arpl
and
push
nop
in
inc
jbe
js
repz
js
lea
jle
xchg
pop
iret
jmp
sub
int
dec
int3
xchg
mov
xchg
mov
ror
xchg
add
jecxz
or
iret
in
xchg
ss
dec
xchg
ret
movs
jbe
xor
fmul
mov
add
mov
arpl
mov
hlt
test
push
cmp
enter
cmp
push
lea
cmps
lods
sub
dec
je
mov
jne
xchg
pop
shl
jmp
cmp
xor
cwde
test
pop
loop
sub
sub
sub
or
pop
pop
mov
xchg
inc
and
xchg
xchg
sbb
sti
loope
cmp
sub
sbb
sub
mov
fsub
enter
dec
loop
push
sub
enter
arpl
out
jnp
and
mov
js
test
cmp
dec
gs
pop
fdivr
data16
inc
int3
mov
pop
mov
bound
mov
movs
div
push
xor
mov
mov
push
std
popf
push
bound
sbb
sbb
cmp
xchg
sub
popa
in
cmp
sbb
inc
(bad)
jmp
fld
jae
pop
aad
jbe
cmp
stos
sbb
and
cmp
je
inc
in
sbb
mov
inc
inc
sbb
jnp
movs
mov
repz
(bad)
daa
xchg
leave
cmp
stc
aaa
cwde
pop
jl
dec
cld
(bad)
and
mov
xchg
sbb
movs
ret
push
mov
jl
adc
xchg
test
add
scas
test
jno
jns
inc
jne
xor
not
mov
mov
cmp
(bad)
push
xchg
cli
mov
(bad)
leave
hlt
mov
sti
jo
cli
je
and
das
jbe
jns
test
ret
mov
pusha
fstp
das
mov
xchg
xchg
sbb
adc
in
shl
sbb
sub
xchg
fs
push
gs
sub
dec
xchg
mov
lock
cmp
sub
fs
rol
jecxz
je
and
call
test
mov
sub
cmps
dec
imul
mov
aad
rol
mov
adc
xor
jg
cmp
cld
(bad)
sub
mov
stos
mov
cmp
fwait
sahf
inc
sbb
jnp
imul
movs
call
xchg
jno
retf
pop
cmp
jmp
enter
aas
jmp
ds
cli
icebp
dec
mov
mov
mul
jl
movs
mov
loop
ret
fld
aas
jle
scas
or
cmp
jns
inc
mov
mov
inc
and
xor
inc
(bad)
in
or
or
stos
jl
retf
mov
ja
xor
scas
aad
adc
mov
retf
out
mov
adc
jp
cmp
mov
mov
shr
pop
inc
add
mov
cmp
loop
jae
mov
mov
xor
fadd
push
pushf
aas
inc
sbb
out
imul
(bad)
mov
mov
cmp
jmp
jmp
iret
push
cld
pop
pop
adc
int
rcr
cmp
call
in
cmps
popf
icebp
hlt
ds
xchg
fprem
mov
mov
std
or
inc
jl
xor
mov
outs
in
jg
fiadd
or
add
add
and
pop
aas
(bad)
out
inc
iret
ins
push
mov
fild
inc
lea
inc
mov
and
mov
sbb
sbb
fcom
lea
mov
lods
xchg
cmc
cs
mov
retf
xchg
loope
mov
stos
mov
fldcw
lods
xor
sti
gs
push
xor
inc
pop
std
pop
call
bound
pop
push
jo
cwde
dec
xchg
(bad)
(bad)
adc
mov
leave
jmp
aas
jle
jne
out
iret
out
dec
imul
lahf
jno
mov
out
cmps
add
enter
ja
scas
push
xchg
jg
repz
in
cmc
inc
addr16
jmp
aad
mov
xchg
mov
jne
shl
rol
stc
and
sub
stc
rep
add
popa
loope
push
fmul
inc
push
and
adc
ja
cmp
push
xor
jo
jbe
aaa
fs
ins
out
push
into
mov
test
sub
xlat
dec
push
int3
cmc
push
cmp
(bad)
push
fwait
out
adc
add
jo
push
fistp
test
aaa
mov
fistp
xchg
das
jne
xor
adc
push
leave
(bad)
iret
movd
in
sub
add
pop
push
jecxz
cwde
pop
inc
jae
dec
jge
inc
shl
loopne
mov
sub
mov
xor
adc
push
mov
pop
pusha
mov
mov
jbe
sahf
push
or
sub
xchg
cmps
lahf
sbb
adc
or
lods
daa
push
retf
add
xchg
lods
xchg
lock
add
test
or
adc
int3
test
in
(bad)
xchg
jno
cmp
mov
fld
jbe
jecxz
icebp
cmp
test
loop
mov
jmp
push
fs
jmp
clc
cwde
add
fwait
jb
outs
int3
sbb
inc
leave
addr16
clc
mov
imul
inc
push
aad
sbb
push
movs
sar
jno
mov
mov
mov
xchg
or
sbb
sub
and
push
dec
dec
xor
neg
xor
adc
jno
icebp
adc
icebp
clc
cwde
arpl
popa
fstp
sti
xor
lds
fs
outs
call
jbe
ss
fsub
cld
push
mov
aad
mov
sub
mov
shr
stos
push
fwait
icebp
add
out
(bad)
mov
repz
ret
fdivrp
jg
sbb
xchg
or
pop
push
mov
int
(bad)
loopne
ret
jmp
repnz
pop
sbb
pop
inc
aad
bound
loope
lods
push
int
mov
test
jb
mov
sub
sahf
(bad)
cmp
lods
stos
jns
or
pop
mov
sub
or
mov
inc
xor
mov
jmp
cdq
jge
xor
imul
data16
ss
cwde
call
jecxz
loop
stos
iret
out
(bad)
push
pop
jp
cld
jmp
xor
lods
fnstsw
jmp
retf
xchg
lods
or
mov
and
pop
mov
mov
jle
retf
adc
push
push
lods
xor
out
mov
stos
fsubrp
mov
add
stos
shl
cli
mov
fwait
push
cmp
scas
pop
(bad)
xor
gs
ds
cmp
pusha
jp
push
int3
and
in
sub
sub
pop
(bad)
dec
fsub
test
sbb
icebp
dec
cmp
ror
or
(bad)
int
jge
fstp
repz
into
jmp
outs
pop
mov
adc
jo
out
std
les
pop
jge
fs
loopne
outs
repnz
add
jne
add
cs
add
ss
das
aas
inc
adc
push
dec
dec
sar
into
aad
je
int
xor
add
cmp
xchg
mov
xchg
lock
pushf
jl
cmc
fimul
xchg
hlt
push
sbb
cmps
and
mov
mov
mov
push
rol
inc
outs
mov
mov
in
out
fidivr
stos
lahf
jbe
pop
inc
adc
jb
sbb
dec
pushf
int3
sbb
mov
adc
imul
scas
cld
popf
mov
xchg
stos
jl
sbb
outs
xor
dec
sbb
test
les
ds
push
jns
add
xchg
call
stos
add
push
jns
jp
push
stos
jnp
mov
ins
xor
call
cmp
add
push
in
pop
mov
mov
dec
imul
mov
jne
shl
jmp
loop
call
add
ds
jle
jg
sub
jecxz
addr16
mov
iret
ret
xlat
dec
push
mov
fdivp
clc
fdiv
pusha
cmp
loop
add
shl
add
add
cmp
lds
movs
mov
inc
scas
mov
sti
test
hlt
ret
dec
fmul
and
cmp
mov
dec
dec
(bad)
es
mov
jns
pop
div
add
dec
test
gs
push
imul
js
push
ss
xchg
bound
cmc
mov
xchg
movs
inc
push
or
dec
fs
stc
jnp
enter
movaps
cmp
out
or
ins
and
or
mov
pop
repnz
push
icebp
sbb
push
add
repz
jne
outs
pop
pop
ja
pop
js
pop
retf
xor
jo
cwde
pop
adc
mov
in
outs
cmp
rcl
pop
sbb
inc
mov
and
inc
xchg
test
ror
fdivr
ficomp
jle
idiv
fist
mov
in
mov
stos
jns
out
cs
icebp
out
sub
pop
dec
mov
and
(bad)
pusha
lock
mov
mov
popa
data16
mov
test
jl
cbw
inc
dec
jle
sbb
sahf
inc
in
push
or
in
les
mov
push
imul
retf
in
dec
rcl
jne
imul
fld
in
mov
fdivr
inc
add
and
sub
sub
cs
mov
mov
adc
sbb
mov
pop
stc
push
(bad)
or
int3
sub
mov
mov
adc
or
loop
movs
dec
mov
add
iret
xor
jl
fdiv
sub
push
add
pop
jns
fisubr
dec
ins
push
stc
test
rol
mov
sti
cmp
jns
cmp
push
js
scas
in
jle
pop
ss
lahf
mov
mov
test
cmc
sub
mov
inc
xchg
scas
(bad)
pop
fxch
mov
add
fsub
jno
xchg
enter
and
leave
test
cmps
cdq
adc
mov
fldcw
jmp
and
mov
jecxz
pop
int3
rcl
jo
scas
xor
loop
pop
cmp
xor
add
mov
int
lock
mov
cdq
mov
sbb
add
pop
(bad)
leave
xchg
and
out
mov
ins
add
sbb
scas
es
jge
js
movs
dec
fsubr
xor
jno
inc
jbe
and
repnz
into
leave
xchg
jbe
cmp
push
mov
xchg
inc
mov
or
std
stos
jae
cmp
shl
push
sti
inc
xor
cmp
popa
sbb
dec
scas
jecxz
or
pop
and
xor
sub
aad
repnz
pushf
xchg
sahf
xor
sbb
test
stc
outs
xor
cli
mov
jmp
pop
fs
ja
mov
cwde
sub
inc
daa
pop
neg
push
mov
mov
outs
sahf
in
fstp
es
and
xchg
loop
sahf
jecxz
ret
fwait
shl
push
fmul
cmps
popa
aam
fs
scas
inc
and
lock
mov
jp
in
xchg
scas
iret
movs
xor
sub
scas
outs
xor
push
or
fcmovnb
imul
dec
outs
xchg
fsub
pop
jge
push
in
jecxz
fist
and
jns
lahf
xchg
or
mov
pop
cwde
cdq
aaa
fdivrp
sqrtps
fwait
scas
icebp
lahf
sbb
push
arpl
add
repz
jp
out
cmp
iret
(bad)
pop
jmp
jb
das
icebp
idiv
popf
repz
iret
mov
cmp
or
imul
lods
dec
movs
loopne
cmp
out
retf
pop
mov
shl
leave
in
ret
dec
pop
test
xchg
bound
dec
adc
lods
lds
clc
mov
retf
mov
addr16
sbb
adc
fld
push
or
jo
or
ins
test
(bad)
daa
dec
pop
(bad)
neg
aam
mov
sti
cmp
pop
fldcw
repz
and
gs
fstp
outs
mov
push
out
int
fwait
push
movs
outs
enter
retf
pop
adc
adc
movs
enter
jg
jl
imul
lahf
sub
fsubr
ins
dec
add
jmp
and
popa
movs
lea
pusha
or
xchg
push
adc
mov
rcr
inc
cmp
jmp
mov
dec
push
daa
repz
jnp
cmp
fstp
js
lods
dec
mov
fcmovnb
(bad)
pop
ret
shl
dec
scas
stc
jle
mov
mov
out
out
clc
test
xchg
test
pop
push
mov
jmp
jnp
arpl
call
(bad)
xchg
fabs
daa
out
das
(bad)
(bad)
pusha
(bad)
imul
adc
sub
mov
fadd
add
xlat
push
or
imul
pusha
xchg
mov
loope
aas
mov
dec
add
pop
pop
lods
push
sbb
and
xlat
in
pop
sti
mov
leave
adc
ret
push
mov
mov
jg
loopne
(bad)
out
(bad)
call
scas
pop
jns
stc
mov
fwait
dec
int
in
es
mov
iret
sti
les
fisub
xlat
int
jle
sub
cdq
mov
arpl
pop
mov
leave
(bad)
and
rcr
fild
inc
push
frstor
sti
jmp
xchg
sti
daa
int3
fidiv
cdq
packssdw
mov
aas
adc
pop
xchg
rcr
nop
fdiv
cmp
mov
ss
mov
dec
cli
lods
jp
sbb
in
outs
test
lahf
mov
(bad)
jae
fcomip
mul
arpl
fcmovne
sub
rdpmc
in
lock
neg
bound
mov
int3
(bad)
test
add
inc
or
mov
add
mov
stos
mov
sbb
out
ds
cwde
or
pop
scas
mov
and
retf
or
add
ins
xchg
xlat
pop
or
pushf
sub
(bad)
mov
pop
sub
push
xchg
pop
jae
cmp
in
icebp
xor
pop
sti
out
pop
push
movs
dec
jecxz
cld
xchg
pop
jecxz
std
and
cli
adc
jne
add
jle
loop
and
inc
cmp
cdq
push
(bad)
stc
push
cmp
sbb
or
jno
rol
xor
sbb
rol
push
rol
pop
pop
jmp
retf
jle
or
lock
push
xor
ins
scas
arpl
clc
and
mov
int
pop
shr
sti
pushf
sub
add
repz
repnz
outs
jbe
lods
pop
xor
stc
jne
(bad)
out
lods
push
add
fistp
scas
jmp
aas
cmp
jb
out
jl
cmp
pop
sar
(bad)
repnz
xor
cmps
outs
cmp
mov
xchg
jo
inc
jne
std
jne
mov
outs
out
not
mov
mov
pop
mov
pop
mov
sbb
or
fwait
sub
aas
or
xor
lods
add
add
(bad)
adc
cdq
pop
mov
push
jae
dec
xchg
aad
inc
sahf
in
dec
fisubr
cmp
fistp
push
leave
pop
leave
inc
push
scas
rol
mov
in
mov
call
leave
icebp
sti
aam
imul
jge
ret
ss
idiv
jmp
(bad)
leave
mov
cdq
push
push
cld
push
adc
iret
mov
icebp
fisubr
in
push
fidiv
jecxz
in
mov
lds
fidivr
mov
rcl
sub
rcl
bound
(bad)
addr16
mov
mov
xor
inc
stos
call
mov
in
(bad)
cs
or
adc
cdq
add
ja
pop
jmp
lods
mov
fisubr
add
xchg
xchg
add
cdq
mov
divps
jle
je
jge
clc
mov
(bad)
daa
imul
int3
les
lds
ds
xor
cmp
(bad)
dec
jb
repz
std
iret
out
adc
das
repz
sbb
out
pop
sbb
stc
xchg
adc
fidivr
les
ret
lds
inc
sub
push
push
add
pushf
or
jecxz
outs
pusha
cmp
and
rol
inc
dec
pop
and
xor
into
aas
mov
mov
push
aas
lahf
mov
je
fist
push
cdq
and
pop
cmp
cmp
scas
adc
mov
add
mov
neg
fwait
mov
xchg
cmp
js
loopne
add
jb
ss
push
inc
push
idiv
icebp
jge
mov
sbb
jmp
pop
dec
cmp
bswap
adc
jbe
pop
cdq
push
scas
mov
pop
mov
xchg
and
ror
mov
mov
gs
push
out
(bad)
sub
loope
jecxz
std
inc
sbb
in
ja
xchg
mov
push
ret
adc
lahf
inc
mov
scas
dec
xor
jo
in
sti
out
js
mov
cmp
and
and
js
es
imul
(bad)
out
(bad)
mov
pop
cld
sti
push
aaa
mov
sti
jns
push
xlat
out
out
pop
sbb
mov
or
pop
shl
cmp
add
out
xchg
xchg
mov
js
ret
adc
dec
js
xor
js
mov
xlat
cdq
push
xor
stos
push
sbb
jne
inc
stos
int
lahf
mov
ins
push
in
sub
pop
movs
mov
vsqrtsd
and
push
leave
mov
ret
(bad)
(bad)
jb
jle
add
das
sbb
iret
mov
fistp
jne
mov
ret
mov
int
div
(bad)
jge
stos
ror
into
add
mov
mov
(bad)
or
sbb
les
lods
adc
mov
xor
ins
dec
ffree
stos
ret
xlat
out
xor
and
lahf
stc
test
cs
stos
mov
inc
push
sub
imul
movs
cs
movs
pusha
scas
jmp
mov
xor
xor
mov
(bad)
in
pop
inc
cmp
icebp
int3
jns
icebp
jg
ds
into
jo
pop
iret
cmp
pop
idiv
jl
fistp
(bad)
es
pop
(bad)
addr16
ret
cmp
mov
retf
in
add
or
js
inc
jbe
into
cwde
daa
cmp
cmp
and
adc
mov
test
dec
jno
fadd
in
jne
xchg
jbe
mov
xchg
dec
or
pop
and
sti
and
outs
ins
jo
jecxz
mov
cmp
scas
dec
pop
aas
fadd
data16
inc
mov
or
aad
mov
lods
mov
xor
adc
sahf
dec
out
in
ins
repz
loopne
das
test
fistp
mov
jo
pushw
dec
cmp
cld
loopne
sahf
jg
stc
or
stc
jns
jns
neg
add
(bad)
mov
movs
popa
mov
push
rcl
mov
out
sub
sbb
mov
push
xor
pop
mov
(bad)
mov
jb
lahf
ja
pop
in
jle
and
jno
jl
or
in
sbb
cdq
jnp
push
lock
inc
cmp
das
shr
jns
xor
pop
add
xor
movs
mov
push
xor
aaa
(bad)
mov
mov
btr
or
fwait
stos
(bad)
pusha
cs
stos
(bad)
fbstp
cmp
(bad)
jbe
outs
in
aam
lock
dec
daa
xchg
sbb
(bad)
pop
(bad)
push
jl
fwait
mov
pop
jmp
test
aas
stos
jge
pop
xchg
mov
scas
push
(bad)
in
push
add
xor
pop
arpl
or
jmp
xchg
repz
lods
fisubr
js
inc
fnstenv
push
mov
sti
icebp
mov
mov
and
out
and
fst
test
(bad)
fs
enter
call
aaa
pop
sti
arpl
cld
int3
cs
aas
sbb
sub
outs
jb
xor
loop
xor
sub
stos
mov
sbb
dec
int
imul
lahf
out
jb
sbb
fidiv
std
dec
push
outs
addr16
arpl
(bad)
mov
lods
scas
jbe
shl
arpl
cmp
and
imul
popa
xchg
xchg
mov
aaa
mov
and
ret
xor
out
xchg
sti
inc
pop
jmp
retf
pop
or
jmp
or
mov
(bad)
and
jl
imul
sub
push
jns
enter
jg
xchg
xchg
mov
data16
loopne
out
out
push
cmp
mov
les
mov
fst
mov
inc
pusha
movs
out
pop
(bad)
xor
dec
mov
mov
popa
sbb
je
in
xchg
or
pop
xchg
into
mov
and
out
add
xchg
xchg
and
fnstenv
xchg
pop
das
sub
sbb
popf
dec
imul
scas
jle
(bad)
cs
jecxz
mov
fstp
fild
fist
push
fwait
add
cdq
xchg
push
pop
adc
iret
jecxz
mov
pushf
cld
inc
lds
aaa
dec
sahf
gs
pop
(bad)
mov
daa
pavgb
dec
pop
es
sbb
add
dec
cld
add
shr
xor
mov
add
dec
xor
sbb
sub
inc
mov
jae
push
push
imul
sub
mov
mov
leave
add
jbe
cli
and
aad
setne
retf
xor
sub
mov
ret
cs
ja
jle
fwait
sahf
sub
cmp
ret
jb
pop
outs
out
out
xchg
sbb
cmp
(bad)
hlt
call
ret
or
stos
gs
int3
daa
iret
push
pop
add
and
enter
(bad)
and
(bad)
sbb
jl
xchg
cld
shr
sar
xor
dec
stos
cmc
pop
loope
es
ss
cmp
repz
arpl
movs
inc
adc
and
xor
sbb
push
push
mov
mov
pop
inc
mov
fimul
into
jmp
jb
xorps
mov
pop
inc
es
hlt
es
and
lsl
clc
jne
ins
in
xor
cmps
mov
jae
dec
fst
jae
stc
test
mov
sbb
les
sbb
movs
rol
push
div
and
push
add
push
jge
push
ins
fistp
cmc
out
iret
inc
jg
popf
fsub
cmp
fsub
shr
ins
mov
push
mov
leave
jo
retf
in
dec
xchg
xor
push
cld
bound
xchg
retf
or
cld
dec
sbb
cmp
pop
xchg
cmp
jl
sub
icebp
cmp
cld
xchg
ss
inc
jne
cmp
aaa
or
inc
and
mov
rcr
fild
imul
imul
aam
push
dec
mov
mov
retf
sub
in
push
sub
das
mov
arpl
ins
mov
out
sbb
xor
adc
jno
jmp
push
aad
inc
adc
and
xchg
pop
sbb
xor
std
repz
and
popa
imul
in
(bad)
sub
push
jnp
inc
ins
mov
ja
repz
repz
into
xor
clc
popf
inc
mov
pop
clc
adc
xor
push
jl
xor
push
loop
inc
mov
push
rcl
pop
in
dec
adc
jl
lea
jae
shl
jmp
cdq
xor
adc
mov
jmp
loope
adc
fild
mov
jmp
test
cmp
and
aaa
movs
ins
stc
cdq
fstp
mov
jne
mov
aas
adc
pop
mov
fmul
cmp
in
pushf
jecxz
fdivr
add
dec
in
pop
fdivr
cwde
ja
mov
fimul
xor
cld
jl
aaa
js
sti
xchg
std
sti
cli
(bad)
inc
jg
div
fisubr
or
add
add
and
inc
inc
dec
cmp
scas
push
rcr
mov
jp
mov
jae
fbld
retf
not
in
or
sub
xchg
fdivr
pop
jnp
xchg
test
inc
cs
pop
std
add
std
das
cmp
dec
inc
ret
sbb
pushf
push
pop
in
sbb
loop
das
push
and
stc
mov
sub
(bad)
jp
lods
jmp
ins
jl
mov
pop
dec
pop
das
push
std
jecxz
xchg
int3
dec
rcl
std
adc
xchg
movs
ds
dec
mov
in
retf
adc
fisub
mov
sbb
jecxz
sub
hlt
(bad)
jg
retf
addr16
fisttp
pusha
pop
mov
(bad)
pusha
rep
call
sbb
pop
mov
jne
jp
mov
mov
stos
scas
aas
(bad)
cmps
outs
cwde
in
push
scas
clc
pop
or
sbb
lock
sar
cld
les
retf
jae
mov
mov
cmps
inc
call
cdq
(bad)
mov
daa
pop
in
jge
inc
adc
pop
rcr
cmps
mov
and
imul
psadbw
xchg
xchg
mov
xlat
add
retf
loop
lock
jno
add
sub
mov
xchg
add
mov
call
xor
outs
jmp
jge
xor
or
or
(bad)
(bad)
lods
sbb
add
jle
xchg
mov
cmp
adc
cld
scas
and
mov
push
sti
xor
(bad)
push
push
retf
int3
dec
gs
leave
add
pop
fmul
(bad)
jbe
or
xchg
pop
sbb
jg
or
lods
xor
jb
cld
shl
xor
xlat
neg
loope
adc
stc
xchg
xor
into
out
bound
nop
sub
jb
dec
xor
out
iret
inc
jae
fdivr
mov
add
in
clc
call
xchg
mov
lea
int3
leave
adc
sbb
push
inc
bound
mov
xchg
das
scas
das
xor
dec
jmp
inc
jmp
xor
clc
pop
sbb
xor
retf
daa
xchg
jne
rcr
cdq
mov
add
call
inc
jge
pop
outs
push
icebp
paddb
cmp
jmp
retf
(bad)
movs
cmc
jmp
cmp
pop
mov
jnp
inc
xchg
in
lods
and
ins
int
test
(bad)
div
adc
ss
sti
mov
add
sbb
clc
fdivr
sbb
cmp
pushf
xlat
xor
mov
mov
(bad)
daa
xor
retf
pop
xchg
add
xchg
pop
enter
sub
inc
repz
repz
sub
pop
test
dec
push
sub
lahf
push
sbb
popa
xchg
pusha
sbb
or
sbb
or
aad
cmp
pop
ins
pop
test
or
and
and
pop
rcl
dec
mov
out
cmp
out
in
push
jmp
push
pop
ret
bound
outs
stc
push
pop
mov
mov
jo
aas
in
data16
mov
aam
imul
out
mov
pop
imul
add
ret
cmp
call
fs
xor
xor
cli
imul
dec
icebp
pop
pop
ins
mov
mov
mov
sahf
mov
mov
mov
fmul
and
loopne
jmp
fidiv
jns
xor
pop
test
test
in
sub
inc
out
jg
mov
push
cwde
repnz
outs
xor
xchg
mov
les
xor
daa
cmc
fadd
lock
aas
int3
rcr
repnz
lods
mov
sub
les
scas
rcl
cmp
add
ins
xchg
add
lahf
out
lea
sub
jmp
jg
bound
dec
into
pop
out
adc
jg
sub
pop
cmp
cdq
shl
adc
adc
jns
pop
sub
pop
les
sub
pop
imul
pusha
lds
mov
mov
xor
hlt
test
aad
(bad)
ror
sbb
jae
aaa
mov
sub
mov
or
adc
out
cmp
das
mov
lods
out
test
pop
haddps
jbe
cmp
std
sbb
cmc
push
ror
and
add
inc
or
jbe
mov
mov
dec
dec
push
pop
cmp
je
scas
addr16
loop
inc
push
pop
scas
(bad)
jmp
test
out
jg
dec
out
(bad)
int3
test
test
loopne
pop
(bad)
in
loop
or
clc
adc
shr
adc
xor
shl
mov
and
inc
nop
ret
out
xor
adc
xor
dec
jecxz
inc
mov
shr
cdq
jb
xchg
xor
jo
gs
jecxz
std
dec
or
div
lahf
stos
or
call
inc
sbb
cmp
js
fdiv
jns
fucomip
pop
or
cmp
idiv
pop
push
inc
mov
aaa
hlt
pop
add
dec
fs
sbb
pop
fidiv
ja
add
mov
clc
xor
mov
inc
dec
popa
adc
mov
int3
scas
fist
sbb
pop
pop
mov
pop
or
jecxz
pop
cld
data16
add
clc
mov
jns
cmp
in
rol
pop
test
fidivr
sti
ja
sbb
and
inc
cli
sbb
xchg
cdq
not
in
inc
movs
ret
jae
mov
gs
icebp
and
inc
dec
gs
cmps
sub
test
xchg
aaa
loop
inc
sbb
jb
in
jnp
pop
cmp
hlt
ror
add
popa
mov
mov
pop
sbb
sbb
pop
or
dec
sahf
(bad)
cwde
(bad)
int3
enter
push
clc
pushf
in
sub
sbb
fdivr
popa
mov
mov
xchg
aam
xor
sbb
data16
data16
inc
lods
dec
stc
lods
(bad)
sbb
mov
test
dec
ret
aaa
shl
cmp
jno
out
enter
xchg
std
das
rol
adc
or
out
mov
int
push
inc
repz
sti
retf
lock
into
arpl
icebp
int3
jns
(bad)
add
sbb
loop
arpl
test
lea
push
call
jl
mov
adc
xchg
daa
dec
mov
xchg
dec
aam
jb
jne
sti
jo
jp
fsub
push
cmovl
xor
adc
popf
(bad)
push
aad
jle
aad
inc
jo
jecxz
pop
jne
pop
retf
dec
cli
je
push
sbb
jb
addr16
addr16
cmps
push
dec
xor
aas
ficom
inc
les
scas
sbb
and
or
les
adc
ror
xchg
loopne
mov
(bad)
les
mov
shl
xchg
or
add
ins
cmp
repz
inc
pop
adc
gs
dec
push
aam
mov
repnz
fcomp
bound
add
in
inc
cmp
sub
rol
xchg
push
sub
add
mov
test
xchg
fs
inc
loope
and
add
push
retf
dec
shl
sahf
fyl2x
push
shr
fimul
loopne
lods
add
adc
jno
jne
fwait
std
xchg
(bad)
push
sti
sub
add
gs
aam
xchg
mov
pop
fadd
adc
cmp
ins
hlt
push
cld
movs
stos
cmp
dec
iret
mov
and
and
mov
shr
cli
dec
jge
xlat
iret
fisttp
fbld
test
xchg
mov
retf
gs
mov
adc
fiadd
or
add
add
and
call
sub
pop
enter
pop
hlt
sbb
push
and
(bad)
mov
dec
mov
mov
pop
dec
rcl
jmp
xchg
cmc
test
xchg
mov
aas
or
and
sub
mov
shl
and
(bad)
jp
hlt
retf
je
xchg
push
adc
pop
pop
jne
jg
inc
xchg
pop
lea
call
pop
mov
xor
out
add
or
lds
repz
sbb
stc
out
cs
sbb
loop
movs
stos
lahf
fisttp
jg
xor
aaa
ja
fstp
cmc
sbb
pop
(bad)
shl
jno
pop
mov
jecxz
sbb
out
or
loope
mov
ror
cld
xchg
loop
out
addr16
loopne
aaa
pop
pop
adc
mov
jg
inc
sub
std
sar
xchg
and
dec
cdq
mov
out
pop
and
push
mov
inc
cmps
mov
xor
xchg
(bad)
add
push
dec
add
jle
cmp
jnp
cmp
inc
pop
sbb
outs
sti
out
push
mov
cwde
mov
scas
lds
loop
pop
add
imul
or
adc
and
rcr
xchg
stc
pop
ret
test
adc
add
mov
stos
leave
retf
gs
sbb
xor
les
xchg
jo
stc
push
mov
inc
and
fsincos
jp
dec
inc
inc
adc
scas
and
es
cwde
aad
push
ins
repnz
cdq
movs
adc
xchg
aaa
sahf
pop
push
jbe
cmc
inc
mov
fst
jp
and
imul
imul
fisttp
xchg
jnp
and
adc
popf
ret
mov
iret
xchg
and
jge
scas
hlt
add
mov
iret
mov
clc
sbb
pop
fs
imul
xchg
daa
jl
sub
mov
push
popf
dec
mov
fisttp
test
push
mov
push
jno
sbb
into
mov
int
mov
mov
stos
jge
(bad)
imul
imul
repz
push
pop
pop
push
retf
xor
jecxz
mov
cli
sub
sub
hlt
fnsave
fisub
xchg
jecxz
cmp
into
fwait
inc
mov
cmc
add
sar
stc
test
lods
sub
sbb
add
test
xor
pop
les
inc
add
xor
subps
jmp
sub
in
cmp
inc
outs
jno
pop
ret
xchg
int3
enter
xchg
aas
push
scas
mov
xchg
rcr
les
sub
cmp
pop
push
loopne
xor
cmp
fmul
mov
mov
jmp
mov
adc
int3
retf
mov
mov
xlat
js
xor
int
loope
test
cmc
jge
addr16
adc
jo
in
push
mov
xchg
jnp
mov
jns
mov
cmps
shr
sbb
sbb
lock
cld
xchg
sub
or
repz
adc
dec
mov
ins
in
ja
cmp
sub
cld
dec
or
fcmovnb
jae
jle
(bad)
mov
mov
cld
test
dec
push
icebp
inc
pop
adc
inc
xor
lods
or
sub
mov
adc
jecxz
and
xchg
adc
std
inc
adc
mov
and
cmps
cli
and
out
ret
out
daa
pop
xor
ud2
or
int3
fsubr
add
mov
xor
mov
xchg
pop
adc
xor
fsub
imul
push
(bad)
ins
enter
gs
sub
retf
mov
loope
int3
inc
retf
push
pushf
ins
out
and
ds
mov
xchg
es
xor
jo
bound
bound
jl
mov
jge
retf
test
cld
push
mov
and
(bad)
mov
aam
cmps
jge
ins
push
sbb
fcomp
retf
add
xchg
or
pop
std
adc
cli
push
dec
mov
or
rol
pusha
icebp
inc
bound
repnz
inc
dec
call
sub
or
jo
dec
psubq
push
popa
popa
lods
in
fimul
mov
jae
std
leave
das
ret
in
hlt
or
inc
adc
pop
dec
push
jg
and
push
out
add
dec
arpl
fs
pop
cmp
dec
mov
test
add
in
cs
repz
leave
loope
push
push
push
pop
imul
test
or
scas
(bad)
mov
pop
lods
test
(bad)
push
and
test
fistp
add
hlt
mov
mov
pop
mov
or
imul
mov
sbb
cmp
sbb
and
inc
lock
cs
mov
fwait
mov
mov
add
mov
les
inc
add
out
cmps
bound
push
ja
(bad)
mov
call
pushf
jmp
test
add
stos
enter
ret
sub
ds
mov
ds
mov
pop
mov
mov
mov
add
mov
repnz
mov
pop
mov
bound
dec
imul
lahf
xchg
test
stos
stc
inc
out
mov
adc
not
push
mov
adc
fs
add
std
mov
scas
xchg
jle
test
inc
and
mov
push
xor
mov
add
pushf
loop
repz
sub
int3
inc
(bad)
pop
cmp
addr16
mov
gs
jmp
mov
in
test
in
jno
mov
scas
jmp
retf
icebp
(bad)
sbb
push
stos
dec
cmc
sub
jl
push
push
push
jle
xor
dec
sbb
(bad)
(bad)
adc
in
mov
aaa
repnz
add
fsub
ficomp
jle
lods
lds
movs
das
cmp
inc
jae
inc
fwait
push
fild
xchg
cs
ss
ja
cmp
pop
cs
mov
jns
mov
imul
lahf
test
cld
cmps
jo
adc
mov
push
les
mov
sub
jnp
cmp
adc
mov
in
fmul
pop
or
dec
stos
popa
dec
setae
std
sbb
rcl
xor
sub
push
ficomp
sar
(bad)
mov
shl
xchg
shld
sbb
(bad)
inc
mov
(bad)
scas
dec
outs
adc
xor
lods
inc
stc
xchg
lahf
pop
scas
cmps
test
xor
mov
xchg
mov
cld
shl
jmp
fbstp
in
cmp
ss
dec
nop
adc
scas
icebp
daa
add
xchg
(bad)
cmps
icebp
mov
pop
jmp
adc
sub
jp
push
jmp
mov
lea
or
pusha
adc
push
stc
out
inc
inc
mov
popf
lds
es
movs
dec
xchg
wrmsr
arpl
loope
jg
cmp
mov
out
xor
mov
cmp
add
idiv
fmul
push
int
loopne
and
dec
out
sbb
test
cmc
pop
cmc
sub
pop
cli
mov
cs
push
sub
sub
cmp
and
jmp
jb
cmp
repz
(bad)
sbb
scas
not
std
sub
jb
outs
push
jo
into
mov
movs
(bad)
pop
pop
test
xchg
ins
push
out
in
je
enter
mov
inc
cwde
mov
xchg
test
mov
jmp
aaa
xchg
(bad)
adc
stos
div
dec
std
adc
sub
scas
test
les
push
mov
ficomp
mov
xor
pop
mov
or
and
and
fadd
jmp
mov
mov
retf
inc
push
test
adc
arpl
push
(bad)
xlat
push
mov
mov
fld
sbb
inc
jnp
and
xchg
in
xor
std
cmps
es
mov
push
xchg
mov
xchg
push
cmps
hlt
xor
push
inc
pop
shl
jmp
mov
jl
(bad)
rcr
out
pop
idiv
cs
mov
or
add
add
add
add
adc
outs
pushf
fs
inc
jmp
test
ret
gs
mov
mov
test
mov
lds
scas
addr16
cli
mov
paddd
cmp
sub
mov
sub
sbb
xor
shl
aam
std
fldenv
xor
loopne
fcomp
push
and
neg
cdq
inc
adc
in
icebp
fs
sti
xchg
ins
mov
xchg
jmp
ss
mov
xchg
jmp
mov
push
sbb
lahf
(bad)
mov
jmp
push
xchg
arpl
mov
imul
loopne
(bad)
jmp
in
mov
sahf
fistp
xor
pop
test
dec
mov
cmp
lods
js
jnp
iret
mov
jo
cwde
push
jmp
adc
jg
(bad)
jbe
jb
jmp
xor
stos
inc
lods
mov
mov
or
test
xchg
test
or
jp
cmc
cs
das
movd
aad
xchg
mov
test
or
mov
xor
sar
(bad)
repnz
shl
lahf
xchg
jmp
dec
in
sub
add
and
xchg
(bad)
das
jge
jg
fiadd
or
add
add
adc
cmp
adc
stos
ret
addr16
scas
push
add
test
mov
mov
shr
shl
dec
or
and
fld
inc
aam
retf
test
push
test
add
dec
dec
adc
xor
push
dec
xor
xchg
cmp
call
retf
rcr
push
fsubr
or
mov
lods
inc
pushf
inc
fsub
inc
inc
call
jne
sub
pop
push
jnp
js
imul
sub
mov
mov
xchg
ret
or
loopne
pop
cwde
popf
scas
aad
adc
test
rol
scas
mov
call
js
in
fadd
scas
pop
out
mov
or
mov
or
xchg
or
arpl
push
xchg
mov
sbb
sub
adc
push
lea
imul
int3
add
out
stc
test
pop
or
or
ins
xchg
pop
fnsave
xor
dec
fld
pop
shl
or
mov
fmul
push
push
jns
dec
mov
test
lock
mov
dec
add
dec
mov
or
nop
pusha
repz
mov
mov
sbb
ins
sbb
push
adc
jb
imul
cdq
aad
aad
adc
xor
fidiv
push
pop
sub
inc
add
mov
sub
popa
(bad)
in
add
add
fldenv
mov
add
push
and
(bad)
mov
je
loopne
and
shl
pusha
add
pop
push
fadd
add
loope
dec
or
outs
jns
and
xor
cwde
mov
mov
add
sub
mov
mov
adc
repz
xchg
fbstp
adc
repnz
mov
aad
xor
or
imul
mov
pop
(bad)
mov
in
shl
stos
mov
mov
and
sub
xor
shr
pusha
(bad)
sar
rol
in
test
xor
mov
add
xor
and
popa
not
lahf
cwde
retf
xchg
scas
xor
ins
push
aaa
test
(bad)
adc
les
inc
jo
(bad)
imul
mov
push
push
aad
(bad)
fsubr
xchg
xor
cdq
inc
dec
push
cmp
mov
retf
fld
pop
adc
pop
dec
sub
out
lds
frstor
mov
xchg
adc
sub
xchg
imul
dec
rcl
pop
mov
cmp
cmp
xor
mov
add
xor
or
nop
add
loop
or
jno
dec
imul
shl
les
adc
shr
pop
test
cmp
cwde
inc
pusha
jp
lds
or
pop
jl
pop
sub
int3
inc
ja
enter
mov
adc
sub
push
mov
sbb
adc
and
fsub
test
and
mov
sbb
xor
stos
add
adc
adc
sbb
aaa
not
xor
and
(bad)
pop
xor
ret
cld
and
push
or
jo
push
add
ins
sti
test
imul
popf
xchg
ret
pop
mov
leave
(bad)
xchg
inc
adc
dec
fldenv
loopne
shr
adc
xchg
add
aam
pop
and
imul
out
sub
push
push
xor
ss
cmp
mov
dec
sub
sbb
jb
aad
mov
jne
adc
or
jl
xor
cdq
xchg
(bad)
pusha
inc
add
xor
mov
push
inc
icebp
cmps
mov
pop
ins
mov
(bad)
and
and
mov
ja
lock
lods
aam
or
jl
push
inc
pop
out
int
lods
out
jno
sbb
jp
pop
mov
outs
rcl
and
bound
push
and
stos
and
xor
mov
sub
jb
in
adc
adc
lea
add
jb
cmps
mov
sub
daa
xor
les
or
scas
stos
out
sub
pop
xchg
xlat
add
je
adc
and
mov
test
xchg
mov
inc
cmp
and
adc
xchg
mov
in
cs
sbb
mov
mov
mov
inc
mov
pushf
sub
inc
mov
call
ror
int3
cmp
adc
mov
adc
jne
test
jo
jns
pusha
adc
test
bound
rcr
shl
cs
adc
and
adc
add
clc
ja
push
test
push
cwde
iret
mov
sub
sbb
pop
pop
inc
mov
mov
jo
je
repz
mov
lds
(bad)
int3
mov
pop
mov
loop
push
and
push
push
sbb
out
cmps
out
mov
inc
jne
(bad)
(bad)
push
mov
call
data16
add
xchg
and
adc
fmul
or
push
inc
xor
imul
push
mov
mov
jmp
fisubr
inc
in
test
mov
rol
jecxz
jo
mov
inc
or
xlat
push
je
fnstsw
ret
push
out
or
and
lea
arpl
inc
add
and
cmp
push
int3
popa
stos
out
inc
lods
test
jge
ss
loopne
mov
sub
mov
fisttp
mov
push
stos
shl
pop
xor
out
out
pop
popf
add
xchg
add
adc
adc
inc
call
popa
jo
mov
jge
fdiv
push
enter
loop
outs
add
add
mov
push
bound
loopne
pop
sbb
mov
fstp
push
sbb
adc
mov
adc
pop
sub
xor
sub
cwde
jmp
(bad)
in
sub
jne
jns
pop
test
es
push
fst
jge
int3
stc
add
add
in
pop
adc
xchg
push
fidiv
int3
arpl
test
push
sub
xor
popa
or
je
xchg
jbe
xchg
fcomp
or
test
(bad)
in
fwait
ss
scas
and
add
pop
push
icebp
jmp
add
jne
push
pop
dec
sbb
cmp
sbb
mov
adc
push
push
inc
and
retf
shr
add
jge
ins
adc
push
test
inc
sub
or
and
dec
int3
(bad)
and
pusha
and
cmps
cwde
cwde
cwde
or
retf
iret
loop
stc
mov
clc
sbb
jbe
mov
push
push
fstp
mov
add
and
clc
cdq
neg
cmp
loope
cmp
iret
push
in
scas
fst
jno
xchg
leave
popf
inc
les
and
add
bound
add
pop
dec
mov
adc
mov
cs
mov
adc
cmc
adc
mov
cmp
xor
les
loop
loop
pop
mov
sub
pushf
in
adc
inc
cli
cmp
fist
xor
pop
and
lock
lock
xor
(bad)
push
ss
(bad)
xchg
stos
addr16
adc
ins
pop
fs
jae
inc
pop
push
and
retf
ror
add
mov
mov
or
push
retf
enter
ror
int3
mov
push
adc
das
xchg
xchg
sar
or
ja
jmp
mov
rol
xor
cmp
xchg
adc
lods
adc
push
xchg
je
pushf
jne
xchg
out
test
ret
mov
test
push
inc
rol
sbb
xlat
xor
adc
push
cmps
fsubp
inc
push
inc
(bad)
adc
sub
xor
push
xor
fnstenv
push
add
xchg
push
pop
adc
cmps
fptan
adc
sbb
inc
xor
pop
add
xchg
mov
push
stos
pop
add
ss
xor
fnsave
pop
rcl
in
test
push
arpl
sub
ror
cmp
mov
out
adc
es
pop
xor
mov
div
mov
rcl
cmps
push
test
push
or
push
sbb
dec
outs
lahf
pop
push
cwde
cwde
push
mov
scas
sahf
in
add
je
inc
dec
pop
or
cld
retf
mov
shl
dec
pop
push
sbb
xor
cmp
xchg
jns
xchg
inc
xchg
leave
mov
push
pushf
cmp
push
jne
cmp
push
aaa
sub
mov
mov
pop
add
push
adc
inc
stos
xchg
mov
mov
sub
mov
fstp
add
arpl
or
adc
sahf
shl
mov
aam
push
add
jns
mov
mov
leave
lods
inc
mov
in
lds
and
push
jmp
cld
fisub
cmp
pop
jo
mov
fwait
out
sbb
cmp
pop
cmp
stc
xchg
mov
test
mov
sbb
pop
mov
out
mov
xor
sub
or
adc
inc
push
retf
sbb
sub
add
sbb
pusha
out
add
push
pop
pop
adc
and
sub
sub
dec
sub
test
mov
and
and
sahf
mov
cmp
cmp
mov
add
mov
jb
add
push
mov
retf
push
and
mov
fisubr
xchg
xor
dec
test
pop
push
pop
test
or
(bad)
fs
jge
mov
sub
jmp
xor
cmps
inc
add
(bad)
in
mov
xor
clc
test
nop
enter
sub
call
test
jle
or
pop
scas
sahf
push
in
mov
leave
cmp
dec
arpl
add
pop
add
or
inc
lods
stos
push
xchg
aad
mov
pop
int3
bound
push
or
pop
pusha
scas
sub
stos
scas
out
retf
gs
xchg
ret
popf
jl
test
add
cmps
lds
adc
scas
mov
movs
fld
into
lahf
add
out
data16
vcvtps2dq
fs
mov
push
les
in
vmovapd
mov
dec
aad
xor
mov
mov
inc
inc
or
pop
pop
data16
push
aad
mov
add
mov
jae
shl
sbb
cmp
stos
retf
push
xlat
scas
jb
mov
cmp
in
jnp
sbb
adc
and
sbb
sub
leave
sbb
add
mov
mov
inc
push
or
rcl
push
add
xchg
sbb
xor
dec
iret
fidiv
nop
retf
dec
call
inc
sbb
mov
pop
mov
sub
aam
or
push
add
clc
push
mov
pop
loop
inc
jmp
out
push
jne
xchg
push
cmp
and
pop
push
pop
jnp
adc
sahf
pop
mov
in
lods
add
sub
jmp
test
sbb
cld
(bad)
sbb
mov
ss
mov
cmp
shl
adc
mov
test
arpl
ins
pop
ins
mov
cmp
mov
push
inc
test
cmp
test
dec
push
loop
outs
mov
add
sbb
inc
stos
xor
shl
mov
test
xor
int
mov
dec
xchg
inc
add
jmp
adc
pop
stos
pusha
and
and
int
inc
pop
sub
mov
jecxz
test
mov
sbb
or
in
into
loop
and
inc
jl
int3
ss
sub
xchg
xchg
stos
into
fisttp
xchg
add
cmp
push
int
bound
push
push
test
ror
inc
sub
adc
sbb
out
rol
sub
out
mov
movs
sbb
movs
stc
sbb
retf
mov
sub
popf
fadd
inc
mov
mov
into
cmp
mov
mov
movs
sub
adc
pushf
add
push
rcl
inc
nop
sub
and
jb
push
cmp
aaa
sub
ja
and
mov
sub
inc
pop
push
in
hlt
pop
in
sbb
ret
mov
add
push
cmc
loope
jmp
popa
into
dec
push
into
mov
ins
das
xchg
cmp
cmp
ss
es
or
out
movs
inc
out
inc
test
pop
cmp
sub
stos
mov
xchg
and
pop
add
ret
jge
add
jno
prefetchnta
enter
leave
xor
xchg
sub
mov
pop
gs
adc
addr16
into
or
ror
daa
pop
sub
push
sub
fcom
adc
cwde
lods
sbb
mov
jnp
nop
xchg
pop
sbb
jnp
or
inc
(bad)
add
or
test
add
jbe
aad
add
mov
inc
xor
pop
fcom
jmp
movs
cmp
mov
mov
add
sbb
dec
lea
ja
les
stos
ret
stos
xor
ins
adc
push
and
adc
or
or
add
and
push
enter
mov
fisubr
sahf
jp
push
lods
sub
mov
jb
popa
in
aam
and
cmp
mov
push
inc
test
push
leave
and
aaa
inc
or
adc
push
(bad)
xlat
jne
mov
xchg
and
inc
pop
push
cmp
stos
cmp
cwde
outs
inc
sbb
mov
stos
cmc
sti
inc
shl
loope
nop
repz
push
or
iret
outs
and
inc
rcl
jne
fsub
xor
mov
inc
popa
push
mov
sbb
add
adc
xchg
adc
cs
rol
sub
jo
push
stos
mov
sahf
data16
mov
pop
mov
in
xchg
pop
inc
call
gs
pop
mov
xor
mov
dec
and
add
mov
scas
adc
ins
push
fiadd
icebp
cmp
sub
sub
inc
cmps
xchg
repnz
sub
and
add
jnp
mov
xchg
push
rcl
jne
inc
stc
jp
es
add
cmp
adc
fisttp
dec
call
xor
pusha
sbb
(bad)
frstor
inc
enter
or
popf
enter
push
nop
mov
push
and
sub
adc
jl
fisubr
ret
mov
dec
add
lods
(bad)
xchg
aad
mov
pop
mov
(bad)
push
adc
add
dec
hlt
ret
inc
xor
ins
mov
sbb
jmp
es
dec
nop
pop
retf
cmp
sbb
pop
jae
mov
mov
adc
adc
add
rol
movs
dec
or
push
stos
mov
mov
fs
and
or
cmp
mov
js
in
cmps
inc
mov
jl
pushf
adc
fcom
popf
and
scas
inc
push
xchg
mov
mov
mov
retf
mov
mov
xor
stos
lods
or
ins
std
mov
or
leave
jbe
adc
sub
js
push
jne
cdq
xchg
and
add
mov
scas
int3
leave
stos
sub
mov
fld
cld
inc
cmp
js
mov
loop
rcr
shr
pop
mov
jbe
rol
pop
cmp
xor
pop
push
or
mov
sbb
(bad)
or
xchg
jo
push
sbb
inc
xor
or
rol
pop
sahf
in
cmp
mov
inc
sub
int
sysexit
out
dec
sub
or
outs
push
xchg
call
mov
das
push
int
pop
cs
adc
pop
sbb
push
ins
jle
add
pusha
jge
fsub
cdq
popa
repnz
cmc
or
xchg
bound
jmp
adc
mov
sbb
mov
add
ins
or
jb
fs
fdiv
adc
mov
xor
xchg
(bad)
or
popa
push
inc
sbb
ins
frstor
adc
mov
out
jns
mov
fmul
ror
rcl
sub
cmps
or
cmp
push
ins
pop
loopne
retf
sahf
pusha
lds
pop
pop
mov
sbb
xchg
push
sub
fstp
sub
sub
clc
xor
xchg
in
and
sbb
cmp
pop
push
and
rol
mov
push
cmp
push
aam
shl
stos
add
dec
in
xchg
out
mov
mov
jmp
lds
xor
mov
or
dec
cmc
stos
ins
sub
xchg
sub
sub
mov
dec
pop
dec
retf
dec
pushf
loope
sbb
mov
cdq
and
inc
mov
mov
popa
push
sub
rcl
mov
push
dec
xchg
ds
mov
inc
movs
mov
add
repnz
pop
imul
push
ss
inc
sbb
clc
cdq
push
lods
pop
(bad)
in
(bad)
jae
in
add
mov
arpl
pop
adc
and
xchg
test
push
pop
(bad)
xor
xchg
xor
sbb
add
stc
fnstcw
sbb
mov
mul
mov
sub
popa
scas
mov
or
add
pop
jo
mov
jbe
adc
les
pop
mov
mov
ret
sbb
mov
xchg
adc
and
sub
add
cmp
jb
repnz
add
push
inc
popa
cmp
add
cmp
push
in
mov
push
mov
xor
scas
jb
ficom
mov
adc
adc
stos
in
outs
xor
add
scas
(bad)
cmps
(bad)
jecxz
sar
pop
and
cs
sbb
inc
ins
adc
ja
sub
hlt
cld
dec
js
out
sub
or
or
fcom
mov
fadd
pushf
xchg
sub
pop
cmp
pop
mov
adc
mov
loop
retf
inc
mov
and
or
mov
sub
add
push
outs
sub
xchg
sub
pop
lods
test
and
inc
mov
push
push
sub
inc
dec
stos
sbb
mov
sub
cmp
fst
xchg
add
sub
pop
ret
shr
pop
test
push
outs
xor
sbb
ja
sub
mov
cmps
xchg
xchg
sub
mov
stos
ret
call
sbb
sub
mov
jae
ja
pop
mov
jo
gs
outs
aaa
mov
fild
sub
sub
fs
aad
jl
mov
push
inc
mov
cs
xor
ins
js
sub
mov
(bad)
pop
and
sbb
cmc
or
enter
jmp
pop
test
rcr
ins
fiadd
movs
adc
ret
mov
fsubr
sbb
add
dec
pop
cmps
aam
dec
fwait
push
adc
inc
jb
jb
bound
add
inc
out
ss
ror
js
mov
(bad)
jb
push
and
ret
or
adc
nop
sbb
aas
cwde
test
push
mov
ret
or
sbb
ja
push
fiadd
adc
inc
ins
mov
stc
or
or
pop
retf
push
ret
or
ror
push
sete
sbb
mov
dec
fst
jmp
xor
jle
outs
or
inc
(bad)
jbe
fwait
outs
push
dec
call
add
test
xchg
push
loope
push
jg
shl
push
aad
mov
or
fucomp
xchg
rcl
aad
jp
fst
add
and
add
pop
nop
arpl
adc
ror
lea
mov
or
loope
in
popa
push
or
inc
add
adc
push
test
mov
mov
cmp
add
push
sbb
add
dec
pushf
add
addr16
mov
dec
test
or
mov
in
mov
xchg
sbb
test
and
cmp
outs
and
retf
int3
inc
loope
add
pop
or
or
or
mov
sub
pop
mov
xor
lods
jae
imul
mov
push
rol
dec
push
call
push
retf
int
cmp
sbb
ret
dec
sbb
dec
push
jbe
into
(bad)
push
ins
or
adc
add
add
data16
add
nop
and
jmp
test
icebp
sub
xor
aad
icebp
into
xchg
jb
stos
sub
lods
xchg
mov
push
xchg
gs
ins
add
push
inc
test
adc
and
hlt
jmp
data16
mov
or
rcr
stos
jne
sub
mov
jns
fld
fisubr
sahf
push
inc
stc
repnz
loop
movs
or
mov
pop
lea
int
adc
sub
lods
mov
cmp
and
adc
inc
test
or
loope
jns
mov
xor
push
or
mov
pop
pop
sub
ret
mov
jge
sbb
mov
sub
add
mov
push
jb
and
push
adc
push
inc
inc
fs
mov
mov
xor
jecxz
push
(bad)
mov
repnz
cmc
inc
mov
jne
xor
jge
cmp
sbb
mov
movs
add
pop
sub
sbb
jge
shl
adc
aam
sbb
fdivp
cs
in
pop
mov
jl
das
leave
add
sub
and
adc
mov
pop
and
inc
xchg
push
jns
bound
xchg
mov
inc
enter
mov
mov
loopne
add
rol
repz
adc
scas
movs
mov
sbb
ror
in
or
jp
cmp
test
cmps
sub
sub
adc
sbb
retf
pop
pop
mov
jo
xchg
retf
mov
cmp
ja
mov
rol
sbb
outs
aaa
mov
push
adc
test
pop
jg
clc
and
fcomp
or
or
mov
mov
sub
push
inc
out
mov
add
int3
mov
pop
(bad)
push
mov
sar
push
(bad)
nop
push
in
mov
or
adc
cmps
jb
int3
addr16
push
sbb
inc
test
inc
test
pusha
xor
retf
es
aam
loopne
dec
inc
or
push
call
xchg
sbb
cwde
sbb
mov
rcl
or
les
test
and
fsub
jnp
rcl
loop
pop
jl
cmps
aad
add
loope
pusha
and
test
shl
cdq
pop
xchg
imul
enter
cmp
imul
add
push
inc
sub
pop
add
and
lods
lea
lods
push
or
lahf
adc
adc
fldcw
in
xchg
stos
retf
stos
xchg
add
gs
ja
xchg
push
sub
mov
je
inc
jmp
sar
mov
pop
loope
les
hlt
xor
nop
sub
push
add
xchg
repnz
ss
dec
xchg
mov
cs
es
jp
add
xchg
ins
test
fcom
lds
cmp
mov
pop
dec
push
dec
movs
ins
push
mov
lds
(bad)
sbb
lods
rcr
scas
sub
mov
(bad)
stc
nop
push
rol
add
mov
jnp
mov
lds
test
push
retf
push
sahf
pusha
push
enter
mov
jbe
xchg
dec
xor
call
(bad)
and
mov
jo
das
adc
(bad)
sahf
add
and
mov
add
adc
rcl
xchg
push
pushf
rol
dec
push
pushf
push
fsub
xchg
jae
or
inc
test
dec
dec
cwde
aam
mov
les
jp
jbe
mov
fadd
int3
push
inc
sbb
xchg
(bad)
clc
leave
cwde
or
retf
dec
jp
add
push
movs
push
fcomp
dec
push
dec
add
mov
or
ret
push
aad
pop
fwait
mov
jb
xlat
xchg
pop
dec
xor
imul
push
mov
push
test
mov
jp
shl
or
mov
mov
mov
cld
clc
dec
inc
add
cmps
pop
loopne
pop
pop
mov
push
enter
jb
fisttp
gs
adc
mov
or
rol
lods
mov
xchg
gs
push
add
popa
lea
push
cmp
dec
dec
pop
jae
sub
dec
sub
push
or
gs
pop
sub
push
push
pop
(bad)
fld
scas
push
sub
das
jbe
out
sub
add
bound
jo
das
push
fnstenv
cwde
data16
mov
jnp
mov
inc
add
pop
clc
pop
(bad)
(bad)
enter
mov
add
xlat
jne
dec
loope
sub
xor
xchg
xor
inc
loopne
mov
push
popf
lods
xchg
leave
cs
ror
clc
xchg
leave
(bad)
fistp
test
dec
cli
add
push
pop
dec
int3
dec
sbb
mov
je
or
(bad)
pop
add
ja
inc
or
fdivp
outs
adc
xor
pop
add
imul
retf
xor
inc
out
push
ret
xchg
mov
sub
nop
pop
mov
pop
gs
not
ins
repz
cdq
mov
inc
fsubr
pop
ror
add
xor
xchg
cmps
mov
mov
mov
mov
mov
xor
lds
adc
push
mov
pop
or
mov
xchg
in
mov
aam
push
or
shl
sbb
add
imul
xor
lock
hlt
call
pusha
sub
mov
push
mov
rcl
mov
jns
es
mov
shl
movs
dec
add
mov
ret
pusha
pop
cmp
rol
test
and
test
enter
mov
dec
push
jno
fmul
xor
or
test
or
sub
pushf
inc
ret
inc
inc
push
lock
or
movs
mov
imul
(bad)
icebp
sbb
sbb
pop
fld
shr
push
mov
call
test
mov
sub
add
jae
xor
out
shl
arpl
std
mov
cmps
adc
sub
push
cdq
int
(bad)
repz
cmp
xor
xor
stos
sbb
sysenter
out
push
push
mov
jne
mov
pop
stc
mov
stc
cmp
mov
ror
and
mov
es
in
scas
enter
enter
movs
mov
cmp
xor
imul
das
adc
stos
mov
sub
repz
sub
(bad)
les
inc
push
inc
inc
fadd
aaa
ja
inc
fs
and
sub
sbb
ja
and
scas
loopne
retf
mov
lods
sti
xchg
ins
sub
jo
dec
push
push
fcmovnb
cmp
pop
ins
dec
mov
fld
iret
inc
ja
xor
lea
mov
xor
xor
push
sbb
mov
inc
fld
stos
and
push
cmps
ins
cmp
cdq
inc
stc
jb
stc
adc
shl
imul
stos
and
inc
inc
in
fsub
dec
movlps
movs
adc
cmp
or
(bad)
sub
or
adc
add
sar
out
retf
fisubr
aad
jbe
or
pop
test
jae
xor
mov
mov
ret
mov
adc
mov
scas
adc
push
movs
rol
ja
dec
pop
ret
in
mov
mov
inc
pop
imul
xchg
push
adc
and
sub
push
sbb
test
cwde
lds
xchg
movs
sub
ror
sbb
pusha
nop
fsubr
retf
jae
dec
fs
not
inc
mov
or
ja
dec
xor
push
mov
xor
cmp
fidiv
inc
sub
test
aaa
popa
gs
mov
push
mov
outs
loopne
cdq
lds
leave
(bad)
push
int3
outs
push
dec
out
and
pop
add
es
xchg
out
mov
dec
lahf
xor
or
cmps
pusha
inc
mov
ja
and
mov
fldenv
push
loopne
adc
lea
out
push
ss
repnz
pop
mov
ins
xor
mov
sahf
mov
sbb
jno
pop
adc
leave
mov
fidiv
fnsetpm(287
cmp
fistp
pop
cli
bound
inc
shl
sub
cmp
pop
es
inc
jne
je
dec
mov
popa
(bad)
sbb
jle
out
jl
in
fxam
jge
popf
sub
(bad)
repz
push
cdq
jmp
idiv
sti
dec
mov
mov
adc
(bad)
push
int3
jmp
push
mov
imul
mov
jnp
cmps
std
mov
mov
push
pop
scas
ret
out
out
aas
xor
out
(bad)
jl
dec
lds
mov
sahf
inc
movs
inc
lods
ret
add
or
neg
cmp
mov
jae
(bad)
fiadd
or
add
add
adc
aam
xor
pop
mov
fnstenv
inc
inc
mov
rcr
mov
cld
in
adc
sub
retf
adc
cmp
test
xchg
mov
push
or
xchg
lock
xchg
xchg
mov
scas
push
arpl
in
or
scas
pop
or
ret
sahf
and
adc
jmp
xor
inc
jne
sub
lods
push
cmp
sub
inc
fwait
add
sbb
int
loopne
adc
movs
sar
icebp
pop
push
(bad)
lods
push
lods
sbb
aam
lds
mov
clc
test
clc
xchg
mov
fsub
mov
cmps
add
rcr
test
and
jae
cmp
mov
sbb
push
stc
push
xor
ficom
lods
pop
mov
xlat
ror
or
es
out
mov
in
in
mov
push
or
xchg
cmp
inc
xchg
aam
loop
ins
in
scas
les
popa
imul
cld
xor
push
adc
fdiv
or
fist
leave
retf
nop
mov
aam
mov
jg
xor
ss
xchg
pop
push
mov
or
mov
add
inc
xor
jp
loope
adc
addr16
push
(bad)
movs
and
push
mov
movs
add
push
dec
jae
cmp
mov
sbb
xchg
ins
xor
shl
sub
mov
pop
mov
mov
cmc
out
aad
pop
xlat
push
adc
jmp
lods
push
xchg
outs
repz
mov
jnp
sbb
or
xor
dec
int3
jl
and
retf
pusha
or
loop
add
ja
mov
nop
ret
je
outs
push
jecxz
inc
jae
mov
push
aam
mov
adc
mov
jb
sub
int
and
or
das
adc
cmps
push
mov
aam
jp
popf
enter
out
push
push
movs
pop
pop
mov
mov
dec
mov
int3
inc
and
loop
sbb
xor
shr
setb
push
je
jo
aaa
cmp
test
xchg
cmps
adc
fiadd
jmp
or
mov
push
sbb
mov
xor
ror
scas
mov
popa
ja
jecxz
mov
mov
lods
in
xor
icebp
sbb
clc
loop
or
jmp
fdiv
aam
sub
gs
push
aas
xor
mov
add
mov
sub
fisttp
inc
xchg
imul
sbb
inc
mov
arpl
pop
call
adc
push
pop
pusha
push
fadd
rep
inc
daa
xor
add
icebp
adc
loope
fmul
cmps
jno
sbb
retf
xor
push
(bad)
and
out
adc
sub
add
sbb
pop
ffreep
add
sahf
stos
aas
int3
inc
mov
sbb
pusha
xor
loope
outs
xor
pop
mov
xchg
loop
mov
and
adc
cli
pop
das
mov
das
clc
and
fnstsw
in
xor
sub
sub
jle
pop
adc
sub
push
loopne
pop
jle
imul
push
arpl
pop
imul
jmp
pop
xor
xchg
adc
xor
cmps
mov
adc
adc
arpl
sub
xchg
sub
js
push
jo
push
push
pop
(bad)
test
xor
xchg
test
xchg
mov
mov
lds
out
aam
cmp
add
xor
mov
rol
push
xchg
sbb
mov
(bad)
jge
dec
jne
shr
aaa
pop
and
loop
shl
cs
pop
out
cmp
xlat
lock
movs
sub
loop
pop
mov
dec
loop
hlt
popa
sub
ins
cmc
adc
dec
sar
cmp
and
pop
add
adc
jle
mov
push
jle
imul
mov
fbld
gs
inc
mov
push
jl
add
ret
push
std
nop
aad
cmp
cmps
jbe
cmp
cmps
add
aam
push
adc
xchg
mov
cmc
loope
inc
ins
jb
xchg
fisub
mov
push
mov
and
xchg
out
aaa
(bad)
not
syscall
loopne
xchg
adc
jle
pop
add
dec
lea
push
lods
mov
push
or
push
sbb
das
loop
test
jecxz
add
fsubr
int
cmps
out
test
adc
pop
fs
call
or
inc
adc
adc
aaa
push
adc
into
add
xchg
push
shl
imul
stos
in
or
inc
xchg
cmp
jge
fild
pop
repz
in
(bad)
xor
sub
test
scas
mov
dec
(bad)
ins
sub
xor
or
cmp
mov
(bad)
out
loope
push
mov
retf
div
cmovo
adc
push
call
inc
fistp
inc
jno
cdq
outs
cld
mov
ins
xchg
dec
ds
test
hlt
retf
jp
retf
pop
and
xor
xchg
es
icebp
adc
add
xchg
push
outs
add
pop
mov
pop
xchg
or
out
int
adc
dec
pop
xor
shl
mov
dec
jmp
mov
jecxz
sbb
cwde
test
aaa
arpl
fsubr
popa
test
and
shl
jae
pop
xor
sbb
mov
sbb
out
aam
and
out
xor
movs
mov
inc
mov
jbe
pushf
jb
mov
bound
outs
bound
pop
jbe
push
(bad)
in
adc
push
jle
(bad)
and
jl
das
inc
mov
inc
popa
test
das
mov
fld
jae
lea
or
or
les
pop
mov
leave
dec
out
div
scas
xchg
adc
xor
ins
push
push
int3
pop
xchg
cdq
test
jmp
push
mov
xlat
xchg
jl
or
cmp
(bad)
xchg
inc
or
and
xlat
pop
jae
aas
fstp
ds
add
inc
xor
les
(bad)
fst
out
adc
add
mov
mov
mov
mov
add
push
nop
(bad)
les
or
mov
add
push
(bad)
sub
mov
mov
push
and
mov
inc
and
shl
mov
lds
mov
test
dec
sti
dec
iret
movs
mov
fisttp
sbb
addr16
mov
fstp
int3
cmps
adc
in
jns
mov
cmp
pop
cmp
xor
jmp
mov
and
call
xor
or
jmp
adc
pop
mov
scas
add
sub
mov
test
lods
dec
add
hlt
mov
inc
pushf
outs
mov
stos
(bad)
cwde
mov
cmp
clc
sub
and
and
inc
rcl
or
push
adc
scas
add
mov
pop
scas
push
sub
xchg
(bad)
cld
dec
ds
push
jge
mov
stos
jnp
pop
adc
add
rcl
and
push
aam
mov
test
sbb
adc
jmp
sbb
(bad)
push
push
stos
repz
add
aad
repz
mov
cwde
shl
xor
pop
inc
mov
jl
arpl
mov
inc
in
add
jae
push
push
dec
sub
mov
iret
sub
and
dec
mov
inc
push
arpl
cmp
sbb
fild
stos
loop
shr
cmp
cmp
jno
dec
push
or
push
inc
and
not
es
iret
in
and
retf
clc
mov
ds
inc
gs
add
stos
rcr
xchg
icebp
and
push
adc
retf
sub
(bad)
fsub
int
inc
aas
mov
mov
rcl
loope
enter
not
mov
cmp
adc
pop
mov
stos
dec
lds
loop
or
hlt
and
sysexit
adc
mov
mov
sub
inc
cmp
xchg
call
jg
dec
nop
mov
fnstcw
int
or
cmp
lar
ss
push
pop
pop
(bad)
(bad)
nop
or
mov
aaa
adc
out
push
mov
mov
stos
cmc
pop
mov
fdiv
rcl
pusha
push
pop
sbb
add
cmp
pop
not
movs
push
test
shl
fmul
into
mov
inc
and
dec
sub
int
inc
mov
call
add
dec
nop
add
cmc
data16
adc
iret
inc
or
add
inc
dec
pusha
adc
jae
mov
stc
sub
mov
lds
mov
mov
enter
retf
popf
adc
mov
cmps
cmp
sub
push
shrd
cmp
push
mov
xchg
lahf
mov
adc
xchg
pop
mov
call
adc
aas
test
pop
daa
test
pop
adc
push
scas
mov
jnp
cmc
mov
xchg
ja
into
popa
stos
push
mov
mov
mov
jmp
aaa
pop
push
out
call
mov
mov
pop
adc
lods
push
adc
jmp
or
pop
mov
bound
in
pop
pusha
or
fdivr
fmul
push
aam
cs
scas
dec
add
dec
(bad)
jecxz
mov
out
mov
sub
retf
push
or
xor
mov
imul
pop
sbb
cli
xchg
cmp
(bad)
std
fst
dec
div
dec
cli
fs
ret
dec
adc
into
xchg
mov
dec
dec
(bad)
fdiv
stos
gs
(bad)
ds
(bad)
jae
in
or
sub
push
xchg
clc
xchg
cmc
adc
into
ins
fstp
jb
jg
hlt
icebp
icebp
das
jmp
jno
call
mov
popa
inc
loopne
hlt
pop
mov
mov
pop
imul
xor
push
fldenv
bnd
dec
je
mov
jl
hlt
sbb
test
leave
test
mov
mov
inc
les
sub
sbb
and
mov
cdq
cmp
or
mov
mov
or
in
lea
hlt
push
dec
push
mov
js
or
xchg
adc
xor
cli
push
push
pop
mov
out
adc
push
es
xchg
mov
call
jmp
jmp
mov
test
cs
sub
and
(bad)
mov
pop
idiv
sbb
dec
or
sub
arpl
cwde
xchg
jge
shl
fdiv
cdq
dec
or
push
add
xor
jne
test
push
sahf
fnstenv
retf
cli
(bad)
ret
inc
mov
icebp
cwde
ins
mov
push
fmul
push
stos
pop
mov
push
adc
mov
inc
out
pop
sub
mov
sub
xor
jns
dec
scas
scas
repz
shl
mov
push
jg
jbe
sbb
push
or
mov
push
scas
and
call
pop
sbb
aaa
repz
mov
mov
xlat
xor
movs
stos
pushf
outs
loop
push
ja
(bad)
jmp
aam
mov
xchg
cmp
test
push
inc
xchg
mov
or
push
dec
addr16
lahf
int3
mov
push
and
aas
mov
stos
mov
add
add
gs
int3
outs
repnz
ds
add
or
mov
add
sub
fs
daa
xchg
fcomp
cmp
ficom
inc
(bad)
sub
inc
inc
sub
cmps
inc
inc
pushf
aaa
popf
add
idiv
adc
cwde
push
pop
sbb
push
dec
clc
mov
sbb
xchg
inc
sub
inc
es
cmps
add
sahf
das
scas
jno
push
mov
cwde
dec
dec
cmp
call
cwde
add
out
inc
and
inc
add
sti
cwde
or
xchg
push
popf
and
ss
or
sub
(bad)
fdivr
and
sub
scas
retf
scas
mov
jnp
les
fidiv
scas
les
stos
js
dec
dec
or
in
rol
add
popf
cmp
das
icebp
xor
lods
xor
ret
xor
out
repz
add
xchg
mov
(bad)
outs
ret
xchg
adc
fist
out
push
or
lods
fnsave
idiv
retf
test
ror
and
add
inc
mov
sub
loope
in
rol
mov
daa
or
jge
mov
xor
repz
int3
adc
add
xchg
loop
test
vminps
je
or
pushf
pop
out
pop
xor
pop
outs
jecxz
push
pop
add
pop
dec
inc
mov
cld
inc
jmp
xlat
xchg
imul
xor
push
cmps
add
inc
popf
retf
sub
loop
ret
push
sbb
clc
test
int3
add
mov
mov
or
jmp
in
test
mov
xor
cmp
movs
push
xchg
imul
adc
imul
push
pop
jne
nop
mov
xchg
adc
movs
lds
push
xchg
mov
ja
inc
rcl
scas
sbb
xor
xor
cmp
pop
jae
inc
xchg
push
das
mov
imul
enter
popf
push
rol
test
fidiv
sar
sar
test
outs
daa
cdq
outs
(bad)
rol
nop
ins
retf
ret
fs
enter
mov
into
push
aas
mov
jle
pop
push
lods
jo
(bad)
cwde
add
xchg
jbe
jge
mov
inc
adc
into
aaa
sub
push
cmc
scas
rcl
in
(bad)
xchg
aas
test
out
neg
jl
jg
clc
mov
sbb
cdq
out
idiv
mov
or
cmps
mov
fwait
jmp
das
dec
fdivr
popf
ds
stos
jle
(bad)
fiadd
or
add
add
adc
aam
nop
xlat
dec
outs
neg
xor
sub
add
mov
pop
push
push
push
lods
xor
jbe
mov
out
imul
scas
dec
mov
mov
jmp
imul
xor
adc
call
call
popa
cmp
out
pop
cwde
adc
sub
das
xchg
rcr
rcr
gs
fstp
and
int
repnz
ins
arpl
mov
cwde
int3
inc
data16
mov
add
scas
add
stos
stos
jecxz
xor
pusha
push
xchg
in
adc
ins
push
(bad)
lea
dec
and
and
jmp
mov
test
ret
sub
fst
cwde
shr
mov
pushf
mov
xor
outs
push
cli
test
push
xchg
aas
iret
(bad)
outs
call
add
ret
inc
inc
mov
icebp
add
push
push
and
dec
popa
add
aad
cli
stc
outs
adc
pusha
data16
push
or
rcl
dec
out
in
in
xchg
jbe
jecxz
xchg
xor
dec
inc
das
push
(bad)
add
add
cwde
or
loop
add
xchg
shl
gs
adc
imul
enter
into
ins
hlt
lahf
xor
push
fsubr
fsub
mov
push
out
add
xchg
sti
int3
cmp
in
sbb
movs
es
(bad)
cmp
mov
in
push
adc
cs
addr16
jp
into
cmp
or
xor
fcomp
add
mov
or
inc
ret
int
fwait
aam
pop
mov
lods
(bad)
sbb
pop
lods
xor
enter
dec
jo
es
push
hlt
inc
push
jae
adc
mul
push
rol
pop
bnd
xchg
jp
pop
retf
stos
out
and
jmp
mov
movs
sub
sub
arpl
mov
fcmovne
add
mov
and
cmps
pop
(bad)
jp
and
dec
adc
mov
popa
lds
inc
pop
sub
adc
in
jb
mov
sahf
aad
jmp
adc
sub
shr
inc
push
xchg
ins
in
loop
js
inc
arpl
rcr
outs
dec
cmp
inc
ins
push
loopne
loope
inc
(bad)
mov
data16
jo
cmp
(bad)
imul
cld
inc
test
pop
adc
aad
pusha
pop
sbb
xchg
add
int
test
dec
or
mov
lods
push
push
out
sti
xchg
push
push
mov
mov
dec
sbb
scas
das
ja
ret
stc
cld
cmps
popa
fild
jg
dec
icebp
and
mov
das
inc
dec
ja
adc
mov
cmp
hlt
(bad)
out
push
and
es
cmp
ror
pop
outs
pop
movs
or
jmp
lea
in
imul
mov
in
add
stos
les
je
adc
xchg
sub
sbb
leave
cdq
hlt
jns
pop
imul
lods
aaa
loop
inc
ins
mov
mov
dec
pushf
imul
outs
xor
add
or
stos
add
scas
push
loopne
xchg
movs
aam
ins
mov
xchg
repz
rcl
fsubr
xor
popa
lock
add
popa
gs
push
sub
jns
repz
test
pop
xchg
mov
stos
or
out
je
ror
pop
sub
sbb
jg
mov
(bad)
jno
add
or
pop
inc
sbb
sbb
icebp
mov
(bad)
sahf
dec
out
bound
movs
xchg
(bad)
nop
cs
cs
add
push
push
cmp
dec
fisttp
ss
(bad)
stos
xor
inc
sub
sar
int
lahf
pop
fdivr
inc
jmp
out
jns
and
pop
xor
shl
pop
pop
cdq
cmp
in
xchg
sub
add
mov
push
push
daa
out
data16
retf
fisttp
stos
cmc
fcomp
movs
imul
or
pop
(bad)
test
or
ds
or
jae
cmc
lods
retf
pop
repnz
xor
xor
and
cld
(bad)
mov
repz
aad
test
xchg
(bad)
ja
pop
test
pop
inc
pop
(bad)
movs
jae
stos
sbb
fiadd
xor
mov
(bad)
or
aas
add
loopne
jne
lods
ret
mov
or
adc
call
mov
(bad)
pop
sub
pop
mov
jg
mov
ins
pop
or
jle
xor
shl
std
ins
icebp
sub
xor
pop
xor
and
cmps
sbb
imul
sub
dec
test
adc
sbb
mov
pop
push
test
xor
imul
mov
(bad)
mov
mov
ret
cld
inc
dec
test
push
sub
ins
push
movsx
aaa
cld
mov
jmp
ror
inc
jne
mov
push
sub
stos
and
data16
scas
aaa
sub
pop
stos
xor
dec
jb
inc
icebp
or
movs
sbb
mov
push
mov
call
ins
ror
ret
add
fnstenv
scas
cmp
add
xchg
outs
push
pop
(bad)
jp
out
clc
inc
push
or
ja
cld
inc
push
dec
or
xor
cmp
xchg
aaa
(bad)
aaa
gs
dec
add
mov
rdmsr
rcl
lods
ffree
pop
and
mov
inc
mov
sub
xor
inc
mov
out
repz
stos
aam
add
ret
imul
adc
pop
sbb
call
mov
movs
stc
fdiv
jae
lods
push
jecxz
pop
jbe
sbb
cmps
xchg
sub
lods
jae
ret
push
mov
movs
shl
sub
popa
dec
jne
les
in
mov
sub
dec
out
aam
test
scas
jno
sub
bound
mov
outs
dec
jne
or
push
cmp
popa
inc
clc
test
sar
fdiv
push
mov
test
lods
fsub
jae
ja
push
xchg
or
fadd
mov
leave
add
sub
adc
ss
inc
(bad)
push
sub
pop
cmp
out
xchg
cmp
jl
int3
imul
xchg
lds
mov
cmp
stos
or
sar
js
mov
rcr
add
pop
mov
add
(bad)
xchg
bound
fst
retf
out
fsubr
gs
xchg
sub
jbe
lea
pop
imul
dec
sbb
mov
nop
xor
xor
movs
or
mov
mov
aad
adc
mov
sbb
stos
push
daa
push
push
push
sbb
fcom
clc
idiv
mov
and
mov
sahf
out
sub
jl
test
adc
push
pop
cdq
xchg
add
inc
pop
mov
push
loope
test
movs
(bad)
dec
push
outs
push
push
add
dec
out
xchg
dec
or
dec
pop
jno
vucomisd
adc
cwde
cmp
jmp
jo
sub
aam
jp
push
or
call
imul
push
dec
sub
push
(bad)
repnz
dec
inc
and
hlt
cmc
fmul
sub
call
mov
aad
pop
jl
adc
and
mov
loop
(bad)
shr
out
mov
pop
imul
int
dec
lock
xor
daa
stos
xchg
pop
and
inc
jne
push
fisubr
in
(bad)
in
ja
xchg
push
std
sahf
push
movs
neg
ja
ins
inc
jo
movs
test
sbb
pop
sbb
cmp
mov
shr
inc
mov
or
leave
lods
nop
pop
xchg
xor
pop
inc
nop
and
cwd
xchg
mov
scas
sub
sbb
lods
lock
jp
mov
dec
sbb
fcmovbe
mov
lods
mov
sbb
int3
add
cmp
in
xlat
push
sbb
aad
cmp
cmps
leave
pushf
ror
lods
adc
das
fcomip
or
fcomp
adc
fisub
sub
es
ds
push
sub
jp
cmc
int3
inc
mov
push
pop
jae
icebp
or
scas
lahf
xor
sub
add
idiv
or
ins
lea
pop
mov
inc
push
and
xlat
pop
adc
pop
inc
cmp
mov
inc
rcr
or
rol
mov
cmp
aam
sub
sub
push
test
ror
push
push
adc
int3
mov
mov
cmps
adc
lds
xchg
pop
mov
ja
pusha
in
add
mov
inc
retf
(bad)
jp
addr16
mov
daa
mov
aad
std
dec
cs
outs
fwait
out
test
fs
bswap
aas
inc
xchg
inc
fiadd
jo
xor
das
push
push
lahf
repz
scas
xor
in
mov
ror
aam
pop
xor
xlat
jne
push
cs
add
ins
add
fnstsw
(bad)
ja
xor
cmp
jb
in
adc
call
mov
pop
loop
mov
es
add
sbb
add
push
add
mov
pop
icebp
sbb
iret
test
pop
sar
rcr
imul
xchg
sahf
dec
or
retf
outs
popfw
jne
enter
and
dec
(bad)
jae
mov
pop
mov
cld
pop
popa
out
jno
mov
xor
or
sub
cli
xchg
xor
push
adc
mov
iret
adc
sbb
mov
mov
pop
mov
mov
xchg
scas
outs
(bad)
lea
mov
xor
adc
fld
xor
pop
shl
xor
cld
mov
dec
add
jecxz
jnp
push
shr
inc
and
pusha
dec
dec
push
jmp
xor
or
dec
(bad)
pop
call
aam
or
pop
das
nop
outs
cld
cmp
add
imul
loope
jl
push
sar
cmps
scas
mov
mov
lock
nop
fidiv
data16
std
fcomp
mov
cmps
jmp
lods
dec
xchg
clc
and
push
test
pop
add
ret
ss
ins
stc
retf
movs
xchg
inc
out
hlt
xor
sbb
jmp
pop
mov
sub
arpl
lods
je
cmc
out
xchg
mov
pop
aam
out
(bad)
enter
adc
(bad)
data16
(bad)
nop
sub
cmps
mov
lds
or
mov
dec
ret
retf
aaa
add
repnz
or
aam
dec
dec
push
cmp
retf
jnp
in
mov
int3
add
popf
pop
ret
enter
fst
sbb
cs
or
clc
int3
push
mov
mov
pop
lds
pop
lods
aas
aas
inc
lahf
or
icebp
or
icebp
js
rol
pop
or
stos
and
stc
shr
std
imul
sbb
fdiv
fdivr
mov
push
and
xor
dec
mov
aam
xor
jae
dec
mov
pushf
inc
mov
(bad)
jp
lods
addr16
push
or
mov
inc
mov
sbb
jle
cmp
pop
aas
mov
add
neg
loope
xchg
xlat
cld
mov
sub
retf
daa
jg
push
and
push
jg
int3
jnp
add
mov
jbe
xchg
xlat
add
inc
xor
inc
push
pop
sbb
add
pop
test
jae
jnp
mov
push
test
jecxz
js
cmp
sbb
outs
push
neg
(bad)
xlat
xchg
scas
pop
test
scas
jns
and
loop
cmps
movs
test
loop
icebp
cmp
clc
xor
pop
mov
lock
cmp
sbb
retw
add
retf
in
repz
mov
jmp
add
mul
in
stos
ret
ret
xlat
les
pop
inc
movs
jae
mov
sub
inc
stos
(bad)
pusha
mov
cwde
movs
shl
(bad)
and
(bad)
gs
test
sbb
jge
in
sbb
or
adc
aam
adc
adc
test
pusha
cmp
sar
mov
add
xor
xchg
lahf
sbb
mov
rcr
ja
out
mov
xor
xor
sub
or
add
sbb
jecxz
jno
mov
adc
xchg
xor
xor
outs
(bad)
and
sub
ret
out
push
lods
movhps
lods
fdiv
in
scas
data16
adc
pop
mov
xlat
mov
shr
cmps
xchg
shl
lea
and
movs
fs
sbb
hlt
mov
push
inc
jmp
inc
cwde
dec
clc
(bad)
mov
add
std
sbb
outs
sub
sbb
test
adc
fcomp
jmp
cmp
sub
rcr
retf
lea
pop
nop
lea
pop
jecxz
xlat
mov
sbb
addr16
repz
in
iret
xor
jmp
and
and
lods
jl
popa
xor
adc
sub
out
loop
mov
imul
push
add
fcomp
and
xchg
test
push
adc
push
pop
faddp
xor
pop
pop
ins
stos
sub
jp
push
xlat
repnz
cmp
push
jl
mov
pop
and
or
dec
dec
xchg
outs
pop
mov
cmp
mov
fld
push
jae
lahf
int3
jp
adc
jle
fadd
dec
mov
mov
xchg
jb
mov
dec
data16
push
inc
into
and
push
mov
(bad)
mov
scas
gs
dec
popf
inc
add
ret
stc
aam
cmp
inc
popa
shl
push
dec
cld
repz
gs
push
xchg
and
lahf
les
(bad)
mov
xchg
pop
in
xlat
fistp
nop
push
int
push
push
inc
jbe
lds
dec
xchg
cmp
jge
xor
fisttp
shr
enter
sbb
push
arpl
xchg
sub
and
leave
sub
cmp
fstp
and
pop
adc
jno
push
popa
in
pop
imul
(bad)
xchg
ins
in
pusha
mov
sub
mov
icebp
cli
cs
cmp
aam
mov
adc
sub
aad
bound
cmps
jno
pop
imul
dec
or
sbb
lods
mov
mov
shl
das
xchg
pop
xchg
fdiv
jne
xchg
repz
out
jne
cmps
pop
aam
ret
xlat
push
das
or
pop
iret
jmp
int3
loope
stos
mov
inc
cmp
stos
mov
add
push
adc
(bad)
inc
add
add
add
jo
add
adc
pop
inc
inc
inc
inc
pop
dec
push
dec
imul
fs
imul
add
add
add
add
sbb
add
sbb
add
add
add
or
inc
add
add
or
xor
xor
cmp
xor
inc
add
add
add
sbb
pop
dec
push
cmp
dec
pop
dec
cmp
inc
push
inc
cmp
inc
push
dec
cmp
pop
dec
dec
add
inc
(bad)
pop
cmp
arpl
xor
popaw
xor
xor
xor
data16
aaa
aaa
popa
xor
bound
cmp
xor
arpl
cmp
xor
bound
popa
cmp
bound
bound
bound
xor
xor
cmp
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
add
add
add
(bad)
(bad)
(bad)
inc
add
add
jecxz
xchg
(bad)
into
adc
dec
mov
add
add
add
cmp
push
sbb
add
add
add
dec
xor
or
sbb
jne
pop
es
mov
inc
not
add
inc
inc
cmps
mov
rol
cmp
xor
or
stos
add
xchg
inc
popa
add
pop
add
add
or
inc
jae
imul
add
gs
imul
jae
jae
outs
jp
add
xor
add
add
inc
add
add
ins
xor
add
add
add
push
dec
add
add
add
push
sbb
add
add
add
dec
add
add
ins
ins
popa
outs
xor
add
pop
add
push
jae
imul
add
add
add
and
adc
add
add
arpl
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
add
ins
je
add
dec
inc
cmp
popa
mov
cmps
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
or
or
or
or
or
or
or
or
or
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
and
and
and
and
and
and
and
and
and
daa
daa
daa
sub
sub
sub
sub
sub
sub
sub
sub
sub
das
das
das
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
aas
aas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
popa
popa
popa
bound
arpl
fs
imul
imul
ins
ins
ins
ins
outs
outs
outs
outs
outs
outs
jo
jo
jno
jb
jb
jae
je
je
jne
jbe
jbe
ja
js
js
jns
jp
jp
jnp
jl
jl
jge
jle
jle
jg
add
add
test
xchg
mov
mov
mov
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cwde
cwde
cdq
cdq
cdq
call
pushf
pushf
popf
popf
popf
sahf
sahf
sahf
lahf
lahf
lahf
mov
mov
mov
movs
movs
movs
cmps
cmps
cmps
cmps
cmps
cmps
test
test
test
stos
stos
stos
lods
lods
lods
lods
lods
lods
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
rol
ret
ret
ret
(bad)
(bad)
(bad)
(bad)
mov
mov
leave
leave
leave
retf
retf
retf
retf
int3
int3
int3
int
int
into
into
iret
iret
iret
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
aad
(bad)
(bad)
(bad)
xlat
xlat
xlat
fcomp
fcomp
(bad)
fcmovu
fcmovu
fcmovnu
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
loopne
loopne
loope
loop
loop
jecxz
in
in
in
out
out
out
call
jmp
jmp
in
in
in
in
in
in
out
out
out
out
out
out
lock
icebp
icebp
repnz
hlt
hlt
cmc
cmc
cmc
div
div
div
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
or
add
fwait
shr
hlt
xchg
dec
pop
mov
or
sbb
ins
xlat
mov
jecxz
out
pop
mov
xlat
mov
sbb
jb
mov
shl
cmp
mov
cmp
scas
sub
mov
loop
jne
xchg
cmps
xor
or
into
pushf
mov
jecxz
mov
jbe
arpl
xchg
cmp
pop
dec
mov
cmp
pop
sbb
in
fiadd
loop
outs
xchg
mov
sar
jbe
pop
mov
iret
mov
fsub
inc
or
add
dec
pop
pop
outs
pop
or
push
xchg
or
test
ins
mov
rcr
sbb
retf
mov
sub
mov
push
js
sbb
nop
cmp
pushf
xchg
xchg
jo
into
pop
outs
pop
jnp
dec
fidiv
xchg
shl
pushf
push
jo
repz
(bad)
fcmovu
pop
sbb
dec
push
jb
sbb
jbe
inc
outs
jecxz
sbb
outs
cmp
pop
xchg
ss
inc
xchg
gs
lds
jns
ss
shl
inc
mov
movs
sbb
xchg
inc
ficom
xor
rcl
int
shr
or
dec
inc
pop
jge
popa
xor
jno
and
aam
add
iret
cmp
fsubr
movs
mov
cmp
test
into
ins
out
jae
addr16
xchg
loopne
jae
inc
pop
inc
dec
loope
loope
aaa
lea
jecxz
jbe
nop
push
fbstp
retf
hlt
xchg
mov
push
push
mov
je
mov
and
in
inc
dec
imul
sbb
dec
rcl
jg
mov
mov
cmps
add
dec
cmp
loopne
mov
sub
push
xor
cmps
aam
clc
in
cmp
lea
sahf
fsub
fnsave
(bad)
jno
xchg
mov
mov
pop
or
movs
test
and
push
movs
retf
int3
inc
lea
test
or
int
adc
test
lods
xchg
addr16
mov
cmp
or
popf
mov
aaa
test
sbb
xor
jo
push
nop
xchg
xchg
adc
outs
(bad)
sbb
jb
and
int
push
loopne
add
push
xchg
bound
loope
(bad)
dec
jno
fcomp
out
add
dec
cmp
xchg
xchg
adc
cmp
mov
cmp
jg
fs
push
not
push
scas
add
pushf
push
mov
jne
pushf
adc
shl
adc
xor
push
sub
jae
xor
ins
pop
push
xchg
test
inc
and
out
not
dec
cs
xchg
and
push
push
xchg
add
leave
xchg
xor
or
xor
inc
movs
out
fcmovu
jns
fwait
push
into
retf
xchg
call
outs
cmp
push
push
lods
xor
and
jns
xlat
clc
addr16
js
test
jle
pop
ror
xor
dec
mov
cld
popa
pop
call
or
pop
dec
xor
and
jmp
xchg
call
jns
pop
ss
xor
ss
inc
xchg
xchg
retf
adc
push
dec
mov
loope
cmc
inc
sbb
pop
mov
cmp
addr16
fidivr
retf
fisttp
xor
mov
adc
test
jp
or
mov
fist
xor
or
adc
outs
fadd
sub
mov
push
outs
js
sbb
retf
mov
push
jno
pop
push
fs
ficom
lods
or
adc
call
xchg
pop
std
push
and
ror
pop
je
iret
pop
inc
jg
mov
mov
mov
scas
mov
lods
xchg
out
xchg
arpl
xchg
adc
lods
fidivr
into
add
(bad)
mov
out
ret
sbb
pop
rcl
dec
cmp
dec
(bad)
aad
pushf
xor
ss
inc
pop
dec
arpl
mov
les
jae
or
dec
xchg
nop
adc
mov
or
add
nop
pop
or
pop
mov
mov
(bad)
mov
mov
inc
xor
aad
test
adc
into
add
xchg
xchg
add
(bad)
dec
jo
gs
imul
outs
inc
addr16
xchg
adc
push
xchg
pop
mov
adc
adc
xchg
and
addr16
ins
jg
lock
or
daa
jns
push
or
inc
jmp
jne
pop
xchg
retf
mov
lds
jb
inc
mov
ret
push
cmp
and
ss
aaa
lea
sub
adc
inc
aam
xchg
lahf
jle
stos
sahf
inc
cs
pop
inc
pushf
cmp
cmp
mov
inc
scas
jae
les
icebp
sbb
imul
mov
loope
cmps
xor
or
mov
or
and
stos
sub
fld
xor
jns
into
sub
daa
loop
rol
stos
sbb
xchg
les
call
je
arpl
push
lea
dec
or
cmps
xchg
add
xor
adc
(bad)
jae
rcr
sbb
adc
in
and
test
push
sbb
ret
mov
mov
je
sbb
rcr
adc
mov
push
xor
int3
sub
mov
dec
pop
pop
rol
mov
(bad)
push
jne
nop
sub
mov
cmps
stc
mov
call
dec
push
push
sub
enter
jmp
or
lds
popa
dec
data16
loop
adc
or
or
pop
mov
mov
jnp
aad
aaa
xor
test
cs
and
enter
jle
cmp
cmp
push
rol
and
std
and
cmp
or
int
push
fisttp
sub
mov
xchg
jg
sbb
sub
xor
out
and
mov
push
popa
aad
pop
stc
sub
or
push
fbld
and
int3
xor
or
add
cmp
jne
mov
xchg
fld
aaa
imul
xlat
mov
push
fnstenv
in
jo
jmp
mov
cmp
mov
pop
fist
mov
push
pop
arpl
test
adc
jmp
dec
call
cdq
fwait
dec
lods
lods
rcl
test
adc
or
adc
loope
rcr
sub
sub
ror
cdq
iret
loope
and
lods
push
popa
mov
sub
inc
mov
adc
jno
fs
or
stos
ffree
call
outs
mov
in
cmp
(bad)
(bad)
dec
push
ret
les
and
adc
lea
jmp
shl
sub
test
fcomp
adc
pop
sar
mov
cmp
stos
popa
dec
shl
lods
outs
in
dec
jo
pop
dec
test
stos
outs
xchg
sub
jne
push
mov
jge
mov
ret
out
jns
and
jno
dec
pop
cmp
cli
dec
adc
mov
adc
and
aaa
icebp
xor
ins
dec
sub
inc
inc
sbb
sbb
mov
push
inc
dec
mov
cmp
adc
aad
aas
xor
sub
push
mov
dec
out
cvttps2pi
jl
pop
sbb
jle
jmp
pushf
dec
dec
mov
call
fidiv
test
mov
mov
sahf
cwde
adc
dec
(bad)
aaa
je
mov
into
in
bound
sar
mov
fs
in
sub
cmp
ss
or
out
cmp
shl
ins
stc
jmp
cmps
fiadd
dec
fdiv
cs
and
pop
scas
fucomp
movs
inc
stos
les
xchg
daa
cmp
inc
mov
or
je
mov
test
mov
popa
es
and
(bad)
sbb
ficomp
mov
mov
or
fsubr
adc
call
sbb
xchg
fwait
push
xor
call
fisub
push
sub
push
fsub
cmp
pop
cmps
xor
inc
arpl
and
repz
adc
mov
enter
jo
into
inc
or
mov
xor
cmp
push
call
ds
push
push
sti
ror
nop
cmp
psrad
inc
popa
sub
push
pop
push
adc
bound
xchg
xor
jne
addr16
cmc
add
sub
push
push
mov
(bad)
push
sub
cmp
in
mov
xor
sbb
in
dec
mov
fsub
das
add
pushf
push
adc
dec
dec
add
adc
inc
sbb
cmp
in
jge
pop
repz
into
xor
xchg
dec
out
xor
push
jge
mov
in
js
call
inc
add
and
pop
inc
jb
adc
and
pop
cmps
dec
(bad)
jg
push
push
push
loope
xlat
loop
fsub
jbe
pop
cmp
dec
ins
push
inc
cld
add
and
push
repnz
icebp
sub
push
xor
jb
push
push
mov
mov
jl
or
xor
cwde
mov
mov
mov
std
push
adc
push
jg
daa
js
rcr
(bad)
es
xor
dec
fwait
add
mov
add
fisub
cli
gs
test
cmp
inc
mov
push
iret
test
hlt
xor
dec
aam
and
xor
bound
pop
int
jnp
push
pop
in
out
lods
enter
push
rcr
sub
or
mov
or
push
push
test
add
dec
ret
sub
add
and
cmp
adc
je
xchg
clc
adc
jmp
daa
lea
(bad)
push
and
addr16
push
and
jle
ret
hlt
adc
mov
sub
push
sbb
push
inc
sbb
xor
push
jne
(bad)
(bad)
push
and
lock
mov
jl
jne
mov
xlat
xchg
das
sbb
pop
in
cmc
push
mov
xchg
inc
sbb
push
inc
fidiv
jns
daa
mov
pop
cmps
ror
jae
out
push
jge
mov
xor
mov
sub
or
and
xor
ret
ss
mov
pop
ror
and
popa
push
pushf
mov
or
iret
bound
and
das
cmps
adc
mov
rol
xchg
adc
repnz
ins
pop
cdq
outs
scas
add
inc
fcom
dec
mov
xchg
sbb
sbb
loop
pop
jae
and
inc
fbstp
cmp
add
pop
xchg
xor
nop
adc
adc
in
push
and
cmp
jb
shl
call
mov
add
pushf
adc
leave
push
xor
popf
cs
lods
mov
cmp
mov
adc
sub
lahf
dec
test
and
test
or
sub
ret
inc
inc
add
js
xchg
shl
pop
adc
call
fwait
or
stos
ret
push
pop
test
inc
fcom
je
sti
rol
and
ins
push
je
fnstenv
and
icebp
lea
adc
outs
(bad)
cmp
pop
adc
js
adc
test
push
and
shl
inc
cmp
(bad)
push
aaa
adc
stc
dec
fsub
push
push
or
pushw
mov
push
mov
sbb
leave
adc
(bad)
push
jmp
push
(bad)
mov
and
imul
addr16
adc
xor
loopne
xchg
shl
daa
arpl
add
daa
rcr
inc
mov
push
ja
inc
daa
enter
jb
xchg
add
mov
push
add
mov
mov
mov
jo
jmp
cmp
push
inc
mov
call
push
pop
pop
das
xchg
mov
(bad)
xor
adc
clc
mov
xchg
inc
sbb
adc
xor
shl
push
pop
shl
les
pop
lods
jmp
xchg
dec
es
sti
xchg
dec
mov
jo
mov
in
sbb
adc
or
cmp
aad
aad
push
in
and
adc
xlat
adc
or
adc
icebp
or
mov
adc
pop
push
push
mov
adc
mov
push
cli
pop
js
jmp
jl
jo
sahf
es
xor
dec
xchg
sbb
and
icebp
pop
(bad)
mov
push
test
adc
sbb
test
push
jnp
xor
outs
xor
push
fs
push
sub
mov
ffree
cmp
test
xchg
test
aas
xchg
sub
retf
push
adc
dec
es
addr16
sub
adc
rcl
push
nop
stos
pushf
nop
aaa
fs
adc
movs
and
dec
xor
or
or
cmps
pop
xor
push
xchg
adc
adc
adc
jb
fstp
mov
jg
add
and
movs
pop
cmp
test
jnp
add
mov
lods
mov
push
dec
mov
repnz
je
mov
add
jb
sub
jno
aad
inc
mov
int
cmp
dec
daa
add
cmp
test
jmp
xor
mov
mov
or
nop
cmp
push
loope
adc
fadd
push
xor
movs
mov
xchg
mov
xchg
jl
push
ins
js
and
test
jno
outs
xchg
push
rol
outs
xchg
jb
bt
mov
loop
dec
shl
mov
push
movs
xor
jmp
xor
and
push
push
cmp
sbb
push
pop
cmps
add
fdiv
fs
loop
jmp
jmp
xor
jp
(bad)
cwde
push
call
(bad)
mov
pop
push
and
xor
(bad)
mov
inc
enter
shl
adc
adc
push
(bad)
push
and
sbb
adc
sbb
retf
imul
movs
test
mov
pusha
mov
or
sub
loop
inc
sbb
gs
mov
cs
scas
xchg
push
mov
mov
pop
loop
in
push
addr16
sbb
mov
pop
lahf
and
gs
add
inc
pop
mov
jae
and
mov
jo
test
sbb
push
inc
jecxz
nop
(bad)
adc
shl
and
out
outs
inc
pop
dec
sbb
in
pop
ja
mov
push
imul
leave
add
sub
adc
fwait
sub
shl
movs
pop
dec
mov
xchg
or
xor
adc
push
pop
loop
and
inc
dec
out
cmp
mov
mov
jno
inc
bound
rol
or
fld
sbb
scas
xor
mov
mov
pop
sbb
daa
and
mov
jmp
sub
sbb
inc
dec
push
mov
in
pop
call
repz
and
push
xchg
sbb
ins
stos
xor
addr16
cmp
jecxz
das
loop
pop
fist
clc
and
push
push
mov
sub
xchg
inc
loopne
or
sub
mov
imul
sahf
inc
mov
imul
out
cdq
(bad)
stos
call
iret
sub
push
and
sub
or
xchg
jbe
dec
and
rcl
and
xlat
loopne
imul
xor
std
push
call
and
inc
pop
(bad)
nop
mov
movs
rcr
dec
lock
mov
outs
mov
rcl
jb
xchg
sbb
jo
test
inc
mov
js
repnz
adc
push
loop
mov
mov
push
jl
repnz
test
loopne
or
inc
retf
and
xor
lock
jns
adc
xor
adc
loope
pop
jmp
mov
mov
rol
push
ja
inc
and
mov
adc
xchg
ins
mov
and
cmp
pop
xor
call
imul
aad
jb
out
cld
push
ret
adc
fnstenv
lock
iret
fsub
mov
or
xchg
push
mov
mov
adc
and
xchg
jae
mov
fwait
mov
lods
fbld
push
lods
push
bound
je
push
jge
out
or
push
and
jne
inc
cmp
fild
lock
adc
aam
or
(bad)
js
das
push
cli
or
popa
xor
mov
push
mov
add
push
sub
fidiv
cmp
push
inc
sub
mov
dec
mov
lds
adc
fcom
push
push
mov
cdq
movs
mov
xchg
adc
cwde
pop
pusha
es
and
cld
mov
add
fsub
sbb
adc
dec
xlat
inc
xor
mov
push
stos
inc
sbb
adc
and
aad
sub
xchg
into
push
push
mov
and
pushf
adc
and
dec
aaa
xor
aam
sub
test
popa
jge
jle
jecxz
add
sbb
mov
pop
scas
xchg
adc
cmp
pop
mov
push
inc
loope
sub
movs
inc
xor
adc
shl
inc
ret
inc
loop
stc
sbb
inc
adc
frstor
or
aaa
jb
inc
cmp
in
inc
fild
mov
es
ja
bound
xor
jge
jge
pop
xchg
fidiv
xor
dec
mov
cmp
push
or
and
xor
test
cmp
push
and
movs
inc
ret
adc
push
inc
mov
mov
sub
loope
ja
into
xor
shl
cmp
shr
push
int3
adc
xor
cwde
jb
dec
xchg
push
stc
push
ficomp
adc
push
push
in
int3
pop
push
jo
push
sbb
or
mov
hlt
xlat
ins
(bad)
jo
sbb
icebp
sub
fcmovnb
mov
push
fiadd
sub
or
mov
inc
xchg
pop
pop
bnd
rcl
push
xchg
mov
jg
xchg
jno
add
fcom
mov
mov
and
cmp
cmp
dec
rcl
jae
and
not
fs
ins
mov
stos
mov
popf
(bad)
jb
dec
popa
push
mov
xchg
fisub
or
mov
bound
inc
dec
movs
out
out
repz
sub
movs
dec
data16
pop
clc
aam
fsubr
adc
(bad)
jo
inc
cs
adc
pop
inc
lea
adc
popa
and
and
adc
mov
pop
andps
and
add
push
jge
xlat
push
nop
adc
dec
leave
nop
ins
and
int
push
aad
les
xchg
fbld
cmp
and
out
lea
imul
pop
mov
fnstenv
sbb
mov
ins
sbb
sbb
cs
movs
sbb
xor
call
jno
mov
ffree
mov
mov
pop
retf
xchg
xor
xchg
xor
aaa
outs
cmp
fdivr
and
push
fwait
ss
fistp
fdivr
(bad)
out
xchg
or
push
retf
xchg
repz
addr16
gs
in
fidiv
movs
fwait
out
(bad)
je
mov
lea
pushf
(bad)
outs
fdiv
pushf
inc
movs
jae
outs
cmp
ins
aad
mov
xor
jge
mov
outs
inc
mov
sbb
xor
iret
mov
cmp
ss
fadd
mov
shl
inc
into
sbb
lods
dec
push
(bad)
in
inc
ins
fidiv
inc
scas
fdiv
sub
dec
push
mov
cmp
scas
fidivr
div
xchg
dec
mov
mov
mov
push
pop
pop
xchg
ds
retf
mov
or
ror
cmp
cdq
(bad)
mov
in
sbb
rcl
cwde
call
ret
mov
sbb
mov
test
lods
adc
cmps
sbb
sahf
mov
repz
or
xchg
jmp
pop
mov
call
mov
sub
lods
ins
les
stos
stos
sbb
iret
sbb
jle
push
test
es
push
cmp
cwd
movs
test
add
and
jno
retf
gs
mov
mov
loopne
shl
mov
xchg
call
ds
es
ss
scas
dec
cwde
test
cmps
cmps
sahf
push
repnz
mov
xor
push
jmp
add
jbe
(bad)
cmp
stos
cmps
fwait
pop
leave
and
and
test
imul
call
or
cmps
sbb
pop
inc
push
mov
adc
sbb
jmp
sahf
dec
push
fwait
adc
sub
mov
ror
cld
push
ret
lods
xor
cmp
xchg
and
cmps
and
sbb
shl
stos
dec
push
push
adc
lea
mov
pop
pop
stos
iret
jp
mov
cdq
out
sbb
imul
adc
xchg
push
adc
test
dec
sub
ins
retf
mov
mov
sub
add
test
rcr
pop
fisttp
shl
ret
fcomp
(bad)
push
fwait
push
sbb
mov
cdq
aaa
movs
loope
sbb
mov
mov
mov
leave
inc
retf
dec
cmp
test
leave
imul
pop
(bad)
mov
cwde
mov
or
ror
pushf
outs
push
scas
data16
mov
int
imul
rol
aas
clc
fwait
jmp
and
aam
shr
mov
push
mov
sbb
clc
sbb
mov
cmps
pop
scas
xor
daa
fwait
adc
das
sbb
xchg
or
retf
lea
arpl
mov
pushf
imul
js
add
jmp
adc
or
sbb
stos
xchg
pop
inc
sbb
fwait
pop
cmp
icebp
xchg
mov
and
inc
mov
inc
or
cmps
mov
icebp
mov
xchg
dec
icebp
repnz
sbb
or
enter
cwde
lahf
xor
mov
les
inc
xlat
add
gs
mov
inc
dec
adc
cmp
in
xchg
jo
das
test
pop
ins
xor
and
rcl
call
inc
push
out
in
pop
rol
stos
or
dec
sbb
xor
sub
aaa
mov
jmp
jg
dec
cmp
mov
mov
pop
scas
test
js
sbb
inc
jl
sbb
test
sub
mov
ret
xchg
or
lea
sub
rcr
xor
dec
lods
lds
dec
pop
jmp
sbb
or
xor
mov
and
mov
or
(bad)
xor
enter
or
mov
arpl
jmp
sub
pop
movs
inc
popf
pusha
or
in
push
adc
fnstsw
sub
mov
jb
call
and
jo
xchg
mov
sbb
bound
ins
in
lahf
sub
inc
jmp
push
mov
retf
ror
idiv
nop
push
or
add
or
adc
das
lahf
bound
jb
push
dec
xor
push
dec
xlat
dec
push
test
mov
add
jbe
int3
pop
nop
dec
xor
dec
inc
jb
mov
mov
sub
ror
pop
repnz
aaa
ror
push
push
xchg
ror
mov
and
retf
inc
jo
adc
lods
test
fisub
inc
les
pop
sub
call
neg
aam
call
pop
mov
scas
push
inc
scas
data16
aam
adc
and
mov
mov
mov
dec
scas
push
adc
sbb
jmp
icebp
sub
movs
leave
sub
jae
push
xor
inc
sub
or
fs
(bad)
cmp
aad
add
xor
xchg
push
pop
inc
cwde
jnp
sub
dec
mov
xchg
mov
call
imul
or
je
sbb
inc
repz
mov
sub
mov
movs
sbb
pop
pop
xor
ror
inc
sub
cld
pop
dec
js
scas
test
pusha
inc
leave
sbb
xchg
(bad)
lods
shl
dec
pop
dec
ins
sbb
push
xor
push
sub
(bad)
cmp
jo
movs
or
xchg
or
arpl
shl
sub
jno
sub
outs
fwait
pop
inc
xchg
lahf
(bad)
ret
push
pop
xor
xchg
retf
xchg
xchg
rcl
in
adc
mov
push
jo
lods
push
jge
and
jmp
ror
dec
inc
xor
loope
jne
sbb
test
imul
or
cdq
sbb
icebp
cmp
ret
repz
xor
xor
test
in
adc
sub
jno
arpl
cmp
dec
jmp
movs
xchg
adc
stos
and
in
(bad)
pop
mov
mov
mov
cdq
pop
outs
mov
and
cmp
out
jb
les
push
test
push
sahf
test
adc
sub
jo
retf
sbb
mov
mov
cmp
test
jge
test
mov
pop
cmp
mov
add
fcom
data16
and
cdq
imul
mov
or
lods
xor
fcomp
ss
pop
cmp
inc
ret
xor
test
inc
mov
or
sbb
lea
mov
mov
xor
inc
add
into
enter
imul
enter
hlt
inc
ret
loope
ror
jno
movs
dec
arpl
sub
jns
popa
hlt
xlat
adc
ror
and
xchg
outs
mov
jmp
aaa
push
ins
inc
enter
dec
jecxz
sbb
iret
xor
ror
cmp
in
xor
and
sub
cdq
sbb
fsub
sbb
out
push
sub
(bad)
cmp
push
hlt
ja
test
into
add
cdq
mov
sub
xchg
xchg
mov
xlat
jb
cwde
js
pop
(bad)
push
cmp
jecxz
lods
adc
cmp
adc
push
jl
push
and
data16
xlat
adc
add
aam
ss
repnz
jnp
or
jb
mov
dec
pop
xor
sbb
ror
sbb
jb
(bad)
in
mov
xor
cmps
xor
sub
jmp
pop
popf
or
cmps
pop
loop
or
shl
mov
adc
cmps
test
sub
dec
dec
cli
test
aam
les
jo
cwde
jno
and
leave
and
inc
ffree
inc
pop
cmp
inc
ss
inc
or
out
stos
inc
jecxz
mov
mov
add
lahf
mov
push
xchg
sbb
movaps
push
sbb
or
dec
mov
jns
ret
idiv
adc
cmp
bound
add
fucompp
or
nop
adc
lods
sbb
ds
sub
js
fwait
ror
mov
mov
sub
push
mov
adc
cdq
ss
aaa
cdq
mov
cmp
cmp
cmp
jmp
push
rol
push
sar
mov
jne
xchg
cmp
or
adc
pop
dec
cmp
adc
stc
sbb
cmp
mov
cdq
push
cmp
mov
les
push
xor
cmps
cmp
push
or
xor
dec
pop
mov
mov
adc
xor
jb
ror
sub
or
stc
push
imul
mov
adc
mov
jae
add
stos
shl
cmp
pop
mov
cmp
mov
popa
push
push
jns
fadd
xchg
push
fwait
mov
loope
push
cmp
pop
mov
xor
call
cwde
inc
in
adc
loop
and
or
lock
adc
mov
or
and
leave
mov
add
add
cld
mov
mov
inc
cdq
or
call
shl
cwde
ins
mov
int3
dec
xchg
adc
push
add
inc
mov
adc
mov
push
push
push
test
ret
movs
rcr
mov
mov
repz
push
sbb
or
push
pop
dec
pop
xor
popa
jno
mov
les
xchg
mov
adc
pop
(bad)
hlt
dec
or
sbb
or
xchg
mov
or
dec
pop
fidivr
mov
sbb
or
pop
punpckhdq
ret
xor
sbb
jb
jmp
sub
push
sbb
or
inc
cmp
push
ins
rol
lahf
mov
and
gs
cdq
mov
retf
inc
ins
adc
cmp
rcl
nop
xchg
mov
dec
mov
mov
dec
mov
(bad)
jmp
sbb
fwait
sub
xchg
fwait
pusha
xchg
repz
scas
pop
push
arpl
adc
mov
lock
jmp
repnz
ret
repz
xchg
pop
xor
les
mov
inc
mov
xchg
add
icebp
fisubr
xor
adc
call
mov
xchg
or
sbb
test
sbb
push
mov
push
data16
repnz
adc
xchg
add
jae
and
dec
xchg
stc
or
mov
sub
or
pop
daa
xchg
sbb
sub
scas
imul
pop
mov
xchg
sub
int3
std
xor
arpl
xchg
ret
push
icebp
imul
cmp
shl
sbb
xchg
sub
mov
or
pop
mov
sub
loope
fiadd
pop
(bad)
loopne
movs
or
in
jmp
retf
jno
sub
js
mov
xchg
mov
cs
sbb
push
mov
cmp
fdivr
imul
hlt
dec
lahf
or
repnz
xchg
sbb
ret
xchg
lods
jmp
leave
cwde
push
gs
aad
popf
xchg
shl
into
js
mov
es
out
push
and
stos
outs
sub
sahf
rcr
nop
push
sbb
arpl
rcl
imul
adc
sub
xchg
dec
adc
sub
dec
mov
xchg
clc
(bad)
les
fnstcw
shl
test
daa
jmp
icebp
dec
mov
inc
adc
retf
ins
clc
mov
dec
das
test
es
push
and
std
sbb
mov
mov
or
jae
or
nop
arpl
jp
mov
(bad)
(bad)
xor
and
movs
push
popf
fwait
pop
pop
rcl
ror
add
or
outs
ins
inc
popf
fcom
ret
pushf
(bad)
loope
mov
and
push
mov
aam
repz
enter
add
pop
in
inc
sub
cmp
mov
jmp
add
cmps
jb
in
or
popa
nop
popf
imul
pushf
push
mov
add
or
xor
jl
cwde
clc
mov
mov
ins
cmp
cwde
mov
inc
adc
int3
(bad)
fcom
sub
test
call
int
pop
cld
xor
les
jecxz
jbe
lahf
add
sub
lahf
sbb
push
and
or
ds
jge
xor
pop
xchg
lahf
adc
mov
sbb
call
sahf
and
imul
sbb
ret
adc
mov
les
xchg
add
call
xor
pop
or
jns
or
retf
xor
ror
jne
sar
retf
push
push
leave
and
movs
ret
sbb
popa
xor
int3
pop
or
lea
retf
lock
not
stos
pop
xor
rol
addr16
push
loope
mov
sub
xchg
cmps
imul
sub
enter
cli
fdivr
pop
xchg
jge
mov
mov
loop
inc
jmp
mov
jae
mov
lea
sub
ret
xor
or
lods
pop
pushf
xchg
pop
push
jl
push
push
pusha
in
xchg
mov
les
push
rcl
jmp
add
sub
je
xchg
adc
in
mov
adc
mov
dec
les
mov
arpl
in
lahf
in
mov
and
pop
adc
out
dec
jle
mov
ror
fwait
or
pop
mov
dec
fsub
sti
mov
in
and
shl
mul
jle
mov
lods
mov
inc
ret
inc
sti
lods
push
outs
js
push
mov
dec
bound
sub
push
mov
imul
lea
push
sbb
retf
cmp
enter
movs
push
xchg
out
sbb
test
fisubr
jg
loopne
inc
mov
jo
and
adc
popf
jmp
adc
pop
(bad)
enter
adc
mov
mov
dec
inc
repnz
dec
mov
daa
pop
push
mov
lods
jns
mov
or
call
pop
inc
mov
sbb
adc
jns
addr16
xor
test
mov
xchg
sub
test
sub
pop
push
pop
mov
cmc
push
mov
lods
xchg
loopne
or
lahf
sub
mov
lock
or
ret
add
fmul
dec
(bad)
mov
fisub
scas
loope
test
daa
sbb
out
mov
sub
ret
xchg
fwait
(bad)
xchg
mov
xor
inc
cmp
bound
adc
sbb
data16
fwait
cmp
push
add
popa
pop
addr16
sub
arpl
shr
fst
sahf
into
cmp
popa
(bad)
gs
xor
pushf
jns
mov
xor
xchg
xchg
cmp
mov
mov
cdq
jmp
rol
clc
or
pop
xchg
pop
sub
movs
loop
mov
sbb
fs
shr
lods
add
inc
dec
or
mov
cmps
xchg
into
mov
push
je
cmps
call
xor
std
sub
push
push
sbb
mov
movs
inc
mov
adc
mov
stos
and
dec
mov
adc
rcl
in
dec
jmp
sub
sbb
mov
fisttp
xchg
cmp
sahf
sub
and
loopne
adc
mov
mov
lea
jmp
mov
movs
or
(bad)
lock
pop
scas
lock
xchg
mov
xchg
cmp
push
mov
jmp
mov
or
mov
popa
cmp
call
mov
cwde
pop
ret
rcr
jmp
stos
mov
rcl
lahf
inc
int
mov
jbe
pop
mov
or
dec
hlt
adc
add
cld
or
mov
or
retf
jmp
or
nop
sti
sub
and
xor
inc
pop
out
scas
(bad)
or
add
mov
sbb
es
dec
sbb
dec
mov
in
xchg
sub
push
mov
inc
push
js
xchg
xor
test
pandn
push
test
jb
pop
mov
dec
cmp
out
xchg
and
pop
cmp
fiadd
int
push
fadd
nop
sbb
pop
adc
stos
mov
loopne
jecxz
sub
push
inc
mov
push
pop
add
push
loop
add
ins
push
xor
or
mov
into
or
mov
dec
mov
mov
popf
popf
push
je
sbb
stos
xchg
xor
ror
mov
call
dec
jne
mov
js
or
push
lock
enter
rcl
pop
pop
retf
and
ret
sbb
or
mov
repnz
inc
jbe
or
xchg
push
leave
shl
pop
inc
xchg
xchg
mov
sbb
pushf
aaa
pop
fst
loopne
les
inc
jno
repnz
inc
(bad)
popa
cmps
js
or
or
xchg
jns
loop
adc
adc
mov
mov
mov
xor
push
std
mov
xchg
and
repnz
push
pop
gs
dec
lods
jb
cdq
cmp
or
sbb
leave
adc
outs
xor
cmps
or
movs
mov
icebp
xchg
pop
(bad)
test
scas
iret
aaa
inc
out
mov
or
sub
rcl
rol
mov
addr16
mov
mov
push
ds
leavew
xchg
dec
jnp
int
mov
xlat
stos
push
xchg
ss
loop
outs
fnstsw
sbb
stos
cmps
int
mov
iret
push
and
sub
sbb
xchg
mov
jecxz
xchg
jecxz
xchg
(bad)
dec
addr16
mov
or
in
imul
lods
stos
lods
sub
ins
fidivr
mov
push
aam
cmp
sub
xchg
dec
mov
nop
inc
stos
ror
fist
sbb
fwait
imul
shl
(bad)
jp
mov
call
sbb
pop
mov
pop
xor
and
scas
pop
mov
repz
sub
mov
in
dec
enter
mov
jae
call
mov
out
sub
lods
fisubr
mov
ins
aad
xchg
and
xor
mov
ficom
pop
xor
mov
repz
mov
sti
sbb
daa
mov
retf
xchg
add
pop
xor
(bad)
jle
ss
in
ss
aaa
aaa
jne
push
jno
xchg
or
outs
cwde
jne
int
inc
lea
sbb
test
into
mov
and
test
rol
pop
push
add
adc
xor
enter
imul
pusha
sub
lea
inc
xor
or
fsub
mov
inc
jae
test
fisttp
gs
xor
xor
pushf
aaa
fst
adc
pop
sbb
mov
cmp
jne
cmp
xlat
adc
lds
push
push
cmp
mov
add
adc
or
cmps
loopne
fisub
int
in
lea
pop
push
or
push
lea
nop
fld
lea
arpl
aaa
sub
gs
push
push
pop
test
int
push
add
and
ins
shr
jl
data16
aaa
mov
das
adc
sbb
push
movs
jbe
test
lea
(bad)
cmp
push
aaa
sub
dec
push
les
or
jb
xor
cwde
out
nop
push
jle
and
push
cmp
imul
adc
fnop
dec
inc
inc
inc
dec
aaa
rcl
adc
nop
inc
in
inc
cmps
test
outs
loope
out
xor
xchg
loop
pushw
movs
sar
adc
cmp
arpl
lahf
sar
int
adc
loopne
int3
sub
and
dec
jns
gs
ror
cmp
mov
(bad)
sub
push
dec
jmp
push
xchg
xchg
sbb
or
or
mov
push
jp
in
mov
mov
fldcw
pop
xchg
rcr
xchg
aam
inc
in
not
dec
mov
sub
fdiv
push
in
pop
pushf
mov
jmp
adc
pop
std
(bad)
je
xor
sub
or
jmp
dec
mov
push
(bad)
int3
xor
jns
shl
fadd
mov
mov
rcl
call
xor
push
xor
pop
aas
jae
loope
data16
retf
call
mov
loop
imul
clc
into
lock
and
add
(bad)
dec
jmp
scas
add
retf
jo
dec
test
sbb
leave
xchg
inc
mov
mov
loop
aaa
adc
shl
ss
or
aaa
sub
fisubr
ins
out
jp
add
aad
mov
fcom
movs
xor
dec
retf
adc
ins
dec
mov
movs
mov
(bad)
pusha
stc
inc
lods
call
sub
mov
or
inc
ret
sbb
xor
sub
pop
mov
clc
punpckhdq
add
mov
fwait
inc
mov
and
or
(bad)
je
inc
loop
inc
mov
pusha
xchg
call
int3
sbb
push
adc
bound
shr
mov
ins
test
fadd
or
cmp
and
test
dec
inc
mov
(bad)
lea
cmp
(bad)
shr
leave
cmp
sub
push
inc
and
mov
xor
jl
inc
dec
cmp
or
xor
cmp
sub
dec
lods
sbb
sbb
rcl
add
pop
je
inc
adc
sub
or
data16
int3
or
adc
inc
or
jb
pop
dec
sbb
movs
stos
mov
xor
dec
out
sub
mov
mov
inc
dec
xchg
pusha
test
aaa
enter
add
lahf
push
mov
sbb
jae
xor
push
pop
mov
add
es
lea
sub
nop
inc
retf
mov
ins
push
rcl
adc
sbb
call
les
ins
ror
in
sbb
sub
scas
cmps
or
(bad)
sar
sbb
cli
dec
ficom
push
or
ret
mov
and
mov
movs
call
xor
in
aas
sbb
es
fs
sub
aas
lea
cmps
dec
mov
and
test
dec
mov
push
cmp
sub
push
rol
push
mov
cli
mov
sub
test
jne
adc
xor
pusha
jnp
xlat
ss
(bad)
adc
ret
push
or
(bad)
fwait
dec
push
popa
inc
or
in
int3
xor
adc
fidivr
mov
inc
int
dec
sub
cwde
push
jecxz
mov
sub
fimul
(bad)
pop
add
push
(bad)
sahf
popa
xchg
and
xchg
or
stos
push
cmp
dec
push
std
dec
push
les
sbb
dec
push
jle
inc
or
push
mov
pop
shr
mov
je
push
fcomp
or
push
mov
mov
push
xor
or
dec
push
sbb
or
xchg
push
mov
dec
dec
jmp
jo
xor
cdq
sbb
stos
shr
mov
inc
int
inc
jb
and
push
movs
or
and
scas
stc
daa
sub
cmp
rcr
xor
into
xor
jne
cdq
add
and
les
movs
mov
sbb
and
jns
stos
jge
sbb
cmp
push
or
pusha
or
sbb
xor
lods
retf
inc
inc
xchg
sub
cld
and
dec
mov
lods
test
mov
shl
imul
pop
adc
ins
adc
into
fst
mov
loope
xor
sbb
jmp
xor
or
(bad)
retf
shl
inc
mov
ror
mov
mov
adc
(bad)
cwde
xor
mov
inc
sahf
jae
shr
ret
aad
mov
pop
xor
imul
cmps
mov
xor
js
jne
jae
cmc
cmps
in
inc
push
inc
sahf
inc
mov
jne
int
sub
inc
loope
fidivr
jno
scas
jno
pop
and
mov
adc
sbb
or
sub
daa
adc
sbb
jmp
xor
hlt
push
push
mov
and
jne
mov
stos
stos
int
repz
retf
gs
cmps
mov
jae
ror
or
inc
sub
cdq
dec
xchg
xchg
jge
xchg
mov
or
adc
mov
fimul
iret
mov
es
sub
pop
js
clc
je
sub
rol
test
loop
fidiv
mov
out
sar
lea
add
xchg
jb
sub
push
cdq
sub
or
push
dec
xchg
sub
dec
aas
and
mov
and
(bad)
mov
(bad)
sbb
add
call
push
aaa
mov
pop
pushf
sub
jnp
ret
cmps
or
in
adc
cdq
push
xlat
push
dec
push
cmp
adc
mov
fwait
jae
es
outs
inc
pop
ror
addr16
adc
sub
add
pop
outs
push
mov
sub
(bad)
push
fisub
pop
sub
std
dec
mov
xchg
xlat
ins
inc
es
and
enter
gs
xchg
icebp
int3
mov
adc
sar
pop
aad
fcomp
add
dec
add
cmp
xchg
push
pushf
mov
ret
jl
dec
mov
dec
repz
mov
(bad)
imul
into
ins
fcom
push
or
test
sbb
add
jge
aaa
cwde
(bad)
loopne
fcomip
push
(bad)
je
cmps
push
inc
add
pop
ins
inc
push
fcom
xchg
ins
push
inc
sub
dec
mov
dec
ror
ret
sar
retf
lds
sqrtps
int3
mov
and
loopne
mov
pop
pushf
or
mov
jp
or
imul
and
xlat
xor
dec
push
jl
pushf
hlt
popa
pop
dec
xor
push
pushf
popa
mov
mov
xor
cmp
inc
ss
or
fstp
mov
loope
mov
mov
push
ss
pop
inc
int3
adc
enter
mov
xchg
stos
movs
inc
or
cmp
icebp
add
mov
push
pop
dec
(bad)
cmp
retf
iret
xchg
retf
scas
xor
adc
or
xor
sub
mov
inc
and
int
loopne
xor
adc
add
or
jne
xchg
jns
call
imul
lock
out
ins
xchg
cmp
dec
xor
les
fxch
jae
or
jl
pushf
loopne
cmp
ror
lea
pop
int
cmp
ss
xchg
iret
pop
test
and
dec
inc
add
pop
inc
adc
ror
(bad)
push
fst
int
popa
retf
test
mov
rol
dec
je
add
fs
jl
(bad)
jb
popf
and
push
test
rcr
dec
mov
add
or
lahf
cwde
inc
aaa
cmc
int
enter
push
mov
pop
adc
add
fmul
pop
or
scas
fmul
dec
movs
mov
inc
inc
test
mov
mov
mov
lea
mov
adc
pop
test
fdivr
popa
movs
inc
pushf
test
scas
int
lahf
xchg
mov
enter
out
pop
dec
push
lds
sbb
dec
dec
fucom
cmp
pop
push
add
sbb
xchg
mov
sahf
inc
push
or
inc
and
xor
inc
xlat
push
enter
popf
clc
mov
hlt
fstp
int3
mov
add
lds
mov
mov
call
xchg
mov
xchg
fs
arpl
arpl
pushf
push
ins
les
dec
dec
inc
gs
shr
addps
clc
mov
dec
cwde
xor
xor
add
call
int
test
pop
push
pop
arpl
test
add
loope
sbb
(bad)
add
add
fwait
out
aad
sbb
mov
and
jne
push
ficom
dec
add
int
and
sub
mov
js
or
push
xor
inc
out
adc
xchg
xor
inc
dec
cmp
aaa
push
dec
jb
mov
test
fidiv
pop
adc
or
cmp
or
ja
dec
fstp
mov
add
xor
inc
add
sbb
xor
and
pusha
imul
dec
inc
movs
and
dec
push
mov
iret
pusha
xlat
inc
pushf
shr
xchg
fldenv
adc
dec
adc
test
mov
fs
jp
xlat
icebp
cmp
test
repnz
aaa
fsub
dec
mov
pop
sbb
mov
push
mov
mov
push
push
push
dec
push
dec
add
loopne
xor
inc
mov
or
movs
les
in
add
in
fstp
cmps
test
sub
pop
jge
or
cmp
aad
dec
hlt
cld
test
ins
inc
aaa
ror
(bad)
pop
(bad)
(bad)
inc
inc
inc
and
pop
cmps
imul
adc
cmp
push
pop
int3
call
test
cmp
test
ret
jl
ret
ficomp
dec
inc
scas
or
fcmovu
stos
and
push
test
outs
add
adc
xor
xor
xchg
xor
add
inc
mov
ss
outs
or
sub
ret
lds
or
jmp
and
cmp
sub
sbb
push
jo
sbb
mov
je
ret
dec
call
dec
mov
push
mov
dec
les
mov
sbb
retf
in
pop
xor
xchg
pop
in
bound
cmp
xchg
mov
fnstenv
scas
adc
cwde
xchg
je
aaa
add
mov
hlt
push
loop
lods
push
js
mov
lods
push
clc
push
mov
pop
push
adc
xchg
movs
dec
inc
mov
dec
test
movs
xor
in
test
adc
pushf
adc
push
push
xchg
ret
lahf
or
add
mov
(bad)
std
pop
pop
mov
sub
or
ds
clc
retf
fs
dec
adc
push
fnsave
call
push
and
lock
push
sbb
xor
xchg
stos
cdq
push
(bad)
aam
out
or
inc
add
xchg
adc
dec
loopne
sbb
jo
fs
cs
sbb
in
(bad)
pushf
movs
in
mov
dec
in
mov
xchg
js
movs
imul
aam
xchg
cmp
xchg
xchg
jmp
push
xchg
pushf
(bad)
cmp
jo
mov
pop
push
dec
push
imul
in
rcr
and
test
cli
ret
pop
mov
ins
arpl
jb
imul
cmc
inc
inc
in
push
hlt
int3
int3
jmp
shr
push
sbb
test
ja
pop
pop
push
or
in
ins
in
adc
aam
nop
sbb
mov
add
loop
mov
mov
add
inc
or
add
xchg
and
mov
nop
pop
dec
dec
inc
test
inc
inc
aam
cmp
jp
or
inc
fwait
dec
movs
inc
pusha
mov
dec
mov
cmp
sub
mov
retf
xchg
pop
sbb
lea
retf
sub
ror
leave
mov
push
out
movs
pop
and
and
dec
and
inc
into
jmp
mov
fisttp
outs
push
mov
xor
fadd
ret
lods
push
xchg
jbe
push
pusha
add
push
or
into
and
ins
dec
aaa
sub
fwait
sbb
dec
sbb
aad
test
sar
push
inc
pop
mov
add
mov
(bad)
mov
scas
fld
dec
pop
mov
sub
jp
dec
jmp
push
xchg
push
mov
ins
lods
scas
xchg
push
xchg
ins
mov
into
pop
xor
cmp
int
add
adc
push
ror
stos
aaa
mov
mov
dec
cmp
xchg
and
sub
inc
jl
shl
inc
stos
ror
cs
int3
in
or
mov
push
or
sahf
aad
cmc
adc
gs
aad
xor
push
mov
icebp
xor
inc
jecxz
push
lahf
cmp
or
inc
ror
dec
xor
or
out
(bad)
bound
retf
and
ds
jl
xchg
(bad)
lds
icebp
adc
xor
call
xchg
nop
fmul
popa
scas
push
js
or
mov
movs
jne
cwde
sbb
mov
jb
(bad)
mov
add
ins
cmp
call
sahf
sbb
cmp
ss
dec
arpl
and
dec
aam
sbb
cmp
mov
(bad)
lods
aam
push
sbb
leave
jl
fwait
or
push
pop
div
add
inc
fdiv
dec
dec
mov
push
icebp
out
cs
mov
lahf
cwde
pop
fwait
add
js
jle
push
mov
mov
in
mov
or
rcl
mov
pop
mov
xchg
push
stc
xchg
dec
push
dec
xchg
nop
inc
scas
mov
mov
ror
mov
pop
shl
fcom
mov
mov
fsubr
and
jg
frstor
ins
jmp
enter
pop
and
inc
xor
les
sbb
adc
les
movs
adc
gs
rol
push
test
inc
xchg
je
inc
ret
jne
or
iret
fs
inc
or
inc
fild
xchg
ja
test
add
shl
mov
xor
and
cld
mov
mov
adc
gs
dec
and
jo
in
jmp
psllw
cmp
add
jo
clc
mov
xchg
out
pop
ins
shl
dec
dec
fst
cwde
push
add
pusha
fsub
xchg
ficomp
pop
jne
mov
add
mov
xor
xlat
es
mov
mov
fmul
arpl
jbe
inc
add
cmp
pop
frstor
lahf
xchg
imul
int3
adc
mov
mov
cmp
add
xchg
adc
push
pop
ror
std
mov
neg
pop
popf
xchg
mov
lods
arpl
xor
and
mov
cdq
cmp
cdq
xor
push
fwait
push
loope
add
mov
mov
sub
cmc
(bad)
pusha
or
(bad)
mov
leave
nop
repnz
out
mov
(bad)
fs
xchg
pop
test
push
inc
jl
xor
ror
mov
pop
push
iret
fs
pop
jne
pop
shl
cmp
mov
bound
or
cld
mov
outs
inc
fdiv
xor
dec
lock
movs
test
hlt
cmp
jb
dec
dec
je
xor
iret
je
shl
outs
cwde
pop
dec
inc
inc
push
xchg
mov
lds
inc
jbe
push
cmp
inc
les
jns
fsub
int3
rol
bound
pop
lahf
inc
dec
lods
cmp
push
les
loop
cld
or
add
les
mov
fcmovb
jl
mov
xchg
inc
inc
mov
sub
mov
inc
loopne
ins
push
mov
dec
dec
outs
retf
cmp
int
and
stc
inc
mov
mov
and
pop
dec
push
sbb
xchg
push
xor
pop
dec
fwait
sti
inc
popa
cmp
jns
mul
mov
mov
hlt
xchg
dec
jl
cmp
aas
in
push
dec
(bad)
fld
jne
cdq
mov
aad
jae
push
mov
lahf
movs
test
add
in
push
pop
std
sbb
mov
test
int
(bad)
push
mov
sub
fisttp
add
push
fnstcw
outs
fldenv
mov
in
xor
aaa
ins
loope
ss
ins
fnstenv
mov
jae
mov
mov
imul
or
dec
imul
(bad)
fcmovnb
jno
mov
pop
(bad)
ins
inc
xchg
xchg
sbb
adc
jno
rol
mov
(bad)
scas
imul
(bad)
retf
xchg
add
in
jo
retf
imul
aad
xchg
sbb
mov
xor
(bad)
xchg
sbb
mov
mov
fidiv
mov
add
jo
ret
xlat
(bad)
fstp
jnp
xchg
ins
mov
in
inc
cmp
into
jecxz
jb
inc
sbb
(bad)
pop
pushf
aaa
mov
jbe
in
outs
ins
fdivr
inc
mov
rcr
jp
fidivr
dec
jbe
xchg
movs
push
in
mov
xor
ins
sbb
addr16
fidiv
data16
fnstenv
arpl
mov
call
int3
dec
pop
sbb
shl
stos
test
outs
adc
xchg
addr16
xchg
cmps
fwait
jno
dec
(bad)
pushf
stos
(bad)
mov
in
sbb
adc
retf
sbb
adc
or
sub
cmps
ins
mov
mov
out
cmps
imul
mov
and
and
mov
lahf
sbb
mov
fwait
outs
pop
cmp
sbb
addr16
call
in
inc
out
or
push
aam
fwait
jo
and
fwait
push
mov
call
mov
mov
imul
xchg
lods
mov
cdq
fs
stos
and
cdq
data16
mov
or
inc
lea
daa
popf
jb
add
xchg
cmps
mov
mov
adc
mov
rcr
imul
mov
stos
mov
stos
mov
or
jae
jmp
cmps
lods
mov
mov
xor
loop
mov
add
fwait
imul
cmps
int3
add
push
call
dec
or
ins
je
sbb
fldcw
int
enter
out
dec
hlt
call
iret
cli
dec
ret
cld
leave
sub
jb
test
pop
in
shl
stos
fstp
scas
pop
mov
(bad)
stos
or
(bad)
xor
pushf
mov
pop
jb
call
mov
mov
retf
xchg
outs
pop
cmp
push
inc
adc
scas
fwait
pop
dec
aaa
sbb
cmp
sbb
inc
add
dec
push
push
rcr
jno
or
(bad)
fs
cmp
mov
scas
mov
rcr
mov
out
cs
dec
aas
cmc
cmp
call
sbb
mov
cld
cwde
cdq
mov
push
(bad)
cmps
stos
sahf
mov
arpl
int
add
mov
cli
cmps
es
fs
sbb
data16
loope
int3
cmp
mov
dec
and
sbb
mov
lods
loope
adc
dec
jmp
in
mov
mov
mov
xchg
iret
aam
inc
and
sbb
pop
addr16
shl
xchg
adc
xchg
(bad)
sbb
in
pop
cmc
sbb
xor
lods
inc
adc
push
mov
xor
movs
push
mov
mov
add
add
pop
xor
push
jnp
mov
adc
mov
mov
enter
popf
dec
xor
xchg
int3
pop
mov
push
stos
mov
xlat
dec
fdiv
nop
and
or
mov
popa
and
push
lds
inc
rcr
inc
add
and
xor
mov
xchg
inc
in
test
cmp
push
pop
xor
and
test
xor
inc
mov
inc
pop
mov
test
sbb
int3
sbb
xchg
test
dec
enter
or
xchg
or
mov
xchg
sub
aad
adc
outs
fs
ja
iret
jno
push
xchg
in
mov
or
or
sub
leave
ss
add
mov
push
jle
add
into
pop
out
mov
ss
and
lods
cmp
aam
inc
lods
bound
or
push
pop
sbb
stos
out
test
sbb
data16
lods
ins
gs
and
adc
or
mov
cmps
and
fcom
test
mov
add
jl
inc
fistp
and
pushf
test
sahf
pop
mov
loope
jae
add
dec
xor
fmul
or
dec
jle
adc
or
lds
jae
jecxz
and
rcr
or
(bad)
aam
or
ror
retf
js
adc
jns
sbb
jno
mov
lods
movs
xchg
add
(bad)
rcl
push
add
sbb
cmp
adc
inc
xchg
push
and
test
and
sbb
cdq
or
xchg
loope
ficomp
or
les
imul
xchg
xchg
xchg
push
(bad)
xor
in
mov
mov
daa
stc
addr16
jno
cmp
mov
ror
push
cmp
pop
adc
mov
add
(bad)
push
mov
lods
sbb
and
xor
inc
add
mov
call
xor
jb
push
shr
int
rcl
mov
push
cwde
pop
popf
inc
inc
or
loope
jno
lods
and
mov
mov
rcl
mov
dec
sub
push
dec
cmp
nop
sbb
dec
lods
ret
test
adc
push
pop
inc
inc
ins
jmp
xor
out
ror
add
sub
int
(bad)
xor
cmp
stos
cmp
xchg
mov
push
dec
dec
cmp
nop
popf
mov
stos
idiv
outs
inc
xor
popf
xchg
lds
sub
sub
mov
fdivr
pop
scas
ss
(bad)
fs
inc
push
fs
(bad)
mov
push
cmp
or
test
sbb
int3
pop
pavgw
neg
inc
cmp
xor
ret
mov
stos
mov
pop
inc
into
add
lea
repnz
push
cmc
out
in
das
dec
mov
mov
push
pop
mov
test
and
dec
mov
mov
fmul
(bad)
cmp
sbb
inc
or
mov
jecxz
jbe
push
cmp
xchg
imul
(bad)
es
imul
pop
inc
stos
cmc
and
mov
xchg
xor
pop
jmp
sahf
sbb
icebp
stos
mov
fisub
cmps
mov
jmp
sbb
cmp
and
adc
inc
or
pop
daa
cmp
adc
jbe
cmp
aaa
or
push
and
into
cmp
gs
ins
cmp
cmp
ret
stc
pop
xor
lods
or
repz
call
and
cmp
adc
sbb
jnp
xor
inc
dec
inc
das
(bad)
pushw
inc
inc
sub
mov
mov
ins
test
int
mov
jecxz
pop
mov
and
or
xor
loope
mov
pop
cld
in
xchg
cmp
out
rcl
or
and
int
imul
jno
push
int
mov
fucomi
bound
movs
mov
cmp
add
mov
in
stc
push
xor
leave
lock
mov
and
sbb
mov
out
lds
mov
jle
or
xlat
mov
push
jne
xor
xor
xor
inc
je
xchg
jo
fs
xchg
pop
jg
push
sub
shr
sti
out
lds
dec
hlt
in
pop
xor
mov
or
fcom
or
les
adc
or
imul
cmp
sar
add
jmp
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
or
addr16
ins
outs
je
add
add
add
rol
add
push
loopne
inc
add
add
arpl
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
sar
add
jmp
add
add
and
add
add
add
ins
ins
popa
outs
xor
add
or
es
jae
imul
add
add
add
rol
add
sbb
adc
sbb
add
sbb
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
ins
je
add
add
inc
dec
inc
cmp
popa
mov
add
(bad)
(bad)
push
div
out
out
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
mov
add
add
add
add
add
nop
nop
xor
aad
(bad)
adc
push
ret
sbb
ins
xlat
sub
adc
imul
and
cs
sub
or
mov
(bad)
test
dec
cmp
popf
les
into
mov
retf
dec
xchg
or
pop
stos
mov
stos
mov
jb
xor
adc
and
pop
pop
push
add
daa
imul
sbb
cwde
inc
sub
imul
mov
mov
ss
jb
pop
cmp
pop
mov
jge
xchg
data16
aas
fwait
xchg
jnp
inc
inc
sub
dec
push
xchg
xchg
adc
sbb
jae
cmps
jb
das
cmp
lds
push
fwait
enter
push
test
dec
sub
retf
xor
push
fwait
push
cmp
sub
mov
and
mov
pushf
jnp
(bad)
cmp
sub
cli
cwde
int
mov
cs
xor
je
call
nop
mov
inc
push
mov
pop
mov
xor
and
imul
rol
loop
pushf
call
std
(bad)
aad
or
shr
sbb
adc
mov
rol
popf
cli
movs
ss
imul
cmp
and
scas
sahf
adc
xor
lds
and
in
ret
sti
mov
push
hlt
push
arpl
jb
mov
and
imul
outs
loop
inc
mov
inc
add
call
loope
xor
sti
and
popf
dec
ins
dec
test
push
out
sub
es
test
xor
pop
xchg
pop
mov
add
sub
jno
(bad)
fisttp
dec
pop
sub
call
aas
mov
aad
sar
jmp
cmp
pop
jae
test
pusha
dec
aad
add
push
push
adc
lods
push
push
ins
or
ror
push
fwait
mov
jne
sar
rol
loope
and
pop
rol
js
xchg
nop
(bad)
cmp
dec
dec
push
cdq
paddq
mov
push
test
push
fimul
in
push
pop
mov
out
sbb
ret
pop
(bad)
loope
pop
movs
sub
inc
pop
es
add
ins
mov
add
pushf
popf
jne
pop
inc
jae
sub
add
mov
lock
and
ss
shl
mov
call
pop
cwde
(bad)
gs
(bad)
jbe
sahf
rcl
pop
mov
repnz
fbld
retf
inc
fucom
push
pop
adc
dec
clc
cmps
fs
push
fdivr
cmp
mov
jge
jmp
int
int3
inc
mov
pop
xchg
mov
mov
xchg
in
push
aad
dec
cmps
add
cli
push
out
aas
aaa
push
sub
adc
mov
add
xchg
inc
mov
fwait
sub
jnp
scas
(bad)
xor
call
and
add
in
addr16
pop
retf
sub
xor
mov
sahf
and
dec
fisubr
xchg
or
push
add
xor
inc
(bad)
cmp
repnz
mov
add
jns
fsubr
in
(bad)
das
and
int3
inc
push
xchg
mov
int
inc
xchg
lea
call
push
repnz
or
fwait
retf
ret
and
mov
repz
sbb
jp
out
dec
mov
adc
outs
fwait
xchg
sbb
fdivr
xchg
pushf
in
ja
out
movs
push
inc
cmp
sub
in
mov
jmp
xchg
lds
add
js
and
(bad)
in
jmp
jns
outs
or
stos
out
xchg
xor
xor
in
movs
nop
out
mov
or
fs
jmp
mov
sbb
retf
mov
pusha
sub
mov
pop
test
cdq
out
xor
jp
ja
pop
mov
mov
push
pop
in
loope
int
cld
push
fdiv
mov
xchg
scas
pop
sub
rol
mov
mov
sub
sti
pop
test
movs
xchg
pusha
or
retf
jns
mov
call
sbb
add
pop
push
jp
jecxz
mov
mov
call
mov
xchg
movs
push
adc
pop
and
xor
mov
mov
and
push
add
fst
and
sub
sbb
xchg
jne
pop
rcl
mov
and
aad
push
dec
rcl
mov
xor
push
cwde
neg
cmps
mov
mov
pop
xchg
mov
cli
mov
add
imul
cmp
xor
loop
sbb
lea
adc
mov
fisttp
xor
aaa
or
sub
cmps
loop
sbb
cmp
or
clc
cmp
outs
ins
enter
stos
jno
fwait
popa
into
jno
mov
pop
add
inc
xor
dec
sbb
sub
mov
inc
(bad)
fisubr
jnp
adc
dec
mov
push
xor
push
xor
mov
push
jp
jle
ret
xchg
xchg
inc
fldcw
cmp
shl
mov
push
push
and
repnz
push
test
dec
pop
mov
dec
jae
jae
adc
rcr
das
sti
xchg
gs
leave
pop
mov
xchg
xor
inc
and
ins
pop
push
jo
lods
adc
ret
lods
add
xor
shr
in
daa
imul
xchg
mov
mov
inc
or
mov
cmps
mov
xchg
int3
inc
cmp
imul
lahf
mov
and
cmp
or
ds
je
(bad)
aam
les
test
xor
cmp
inc
ins
lods
dec
or
and
popf
in
push
mov
loope
scas
push
das
sub
enter
ins
es
aas
mov
pop
and
adc
xor
pushf
loopne
loop
mov
xor
adc
int3
adc
icebp
adc
and
mul
add
or
sub
ror
adc
lods
mov
scas
(bad)
rcl
pop
push
or
push
mov
dec
mov
scas
js
xor
xchg
jbe
mul
sbb
mov
mov
xchg
fmul
into
out
push
push
ins
enter
xchg
in
jbe
or
push
cdq
xor
movs
mov
movs
es
sub
enter
xchg
ss
push
ja
inc
mov
dec
mov
loopne
(bad)
cmp
test
pop
repz
fidivr
sbb
push
sbb
jb
cmc
aad
and
call
xor
pop
pop
lock
xchg
or
clc
xor
xchg
or
fcmovnu
out
mov
loopne
fist
lods
sbb
mov
in
pusha
shl
dec
add
dec
xor
mov
sub
clc
pop
fdivp
dec
fwait
outs
lods
jno
enter
mov
mov
pop
loope
pop
push
test
leave
iret
psubw
add
arpl
ins
(bad)
frstor
popa
mov
mov
or
xchg
sub
sbb
loope
mov
leave
add
inc
xlat
in
jl
xchg
jp
test
push
mov
and
mov
mov
dec
sbb
add
sbb
inc
adc
aad
or
cwde
sub
mov
nop
and
out
pop
cdq
pop
mov
sbb
stos
arpl
dec
and
in
call
cmp
(bad)
and
dec
or
mov
xchg
mov
mov
ins
das
adc
sub
fcomp
les
sub
ds
push
ins
sti
jns
int3
jb
or
push
add
fcmovbe
call
push
sar
clc
xchg
mov
pushf
test
icebp
(bad)
jb
sahf
inc
call
fadd
in
lahf
repnz
xchg
pop
cmps
jno
inc
idiv
or
inc
sub
and
into
ja
push
test
inc
rcl
jb
popf
repnz
aad
pop
out
and
mov
push
push
into
push
in
xchg
dec
fmul
xor
inc
jb
scas
pop
fst
lds
inc
aam
fldcw
jo
enter
js
sahf
xabort
fs
retf
shl
das
(bad)
push
sub
xchg
rcl
stos
cmp
pop
pop
and
inc
sbb
sbb
(bad)
mov
dec
aam
popa
pop
inc
pop
jmp
add
xor
scas
jecxz
cmp
in
jo
sar
nop
inc
jp
and
inc
enter
push
int
in
mov
xchg
fwait
dec
repnz
div
pop
ret
gs
dec
out
push
jmp
int
dec
enter
sbb
jae
cmp
les
imul
js
pop
jae
pop
add
add
ror
xchg
iret
xor
xchg
dec
loope
out
cdq
jns
aas
jno
bound
test
push
call
ret
(bad)
mov
lods
jmp
inc
pop
in
aaa
fadd
xchg
mov
pop
add
out
data16
out
jbe
dec
xchg
add
fs
test
dec
not
test
cmps
test
mov
cs
pop
xchg
fs
push
(bad)
xor
xchg
add
mov
rcl
xor
adc
jg
xchg
and
push
pop
not
push
into
adc
xchg
aaa
sub
mov
out
aad
jle
inc
imul
sub
dec
pop
jbe
pop
pop
jg
push
inc
in
je
scas
xchg
push
movs
rcl
aad
lahf
and
jnp
inc
pusha
mov
je
push
cmps
test
lock
(bad)
push
and
leave
xor
adc
xchg
jbe
add
repnz
xchg
mov
je
cwde
jle
jo
shl
pop
xor
or
(bad)
pop
xchg
inc
imul
jg
cmps
sbb
rcr
cwde
pop
jnp
js
xchg
sub
dec
inc
inc
push
pop
daa
pusha
mov
push
and
rcl
(bad)
ja
mov
sub
cmps
mov
ins
push
ins
xor
imul
mov
add
imul
pop
xor
xchg
cwde
je
add
or
push
push
imul
mov
aaa
push
adc
jbe
xchg
jno
inc
cmp
test
jbe
sub
mov
mov
push
sub
mov
(bad)
pop
gs
mov
retf
or
cmp
mov
cmps
sbb
sbb
cmp
push
xchg
sbb
je
push
mov
fdivr
push
cmp
and
out
aas
mov
mov
jle
hlt
test
xor
xor
adc
cmp
push
mov
orps
(bad)
fmulp
xor
ss
add
push
inc
dec
or
jb
rol
push
nop
imul
bound
jmp
mov
int3
inc
arpl
data16
test
jne
inc
mov
add
test
ins
push
cmps
add
data16
(bad)
push
xor
call
push
pop
ins
jno
jl
inc
sub
pop
push
inc
ins
shl
xchg
xchg
ins
shl
mov
sub
inc
sub
test
aas
test
push
call
xchg
inc
inc
xor
daa
and
sub
das
cmp
sar
sub
mov
sbb
cmp
push
bound
nop
adc
dec
sbb
or
fnstenv
jmp
mov
inc
inc
test
loope
push
inc
fwait
stc
cmps
adc
out
ret
adc
pop
lock
xchg
pop
mov
cmc
adc
mov
jmp
popf
in
inc
sbb
test
add
fstp
jbe
push
mov
mov
pop
outs
adc
and
or
aas
movs
clc
push
sbb
mov
push
push
popf
sub
lock
dec
and
jmp
pop
jns
bound
xor
push
push
call
push
sbb
push
push
(bad)
adc
rol
push
cdq
xor
xlat
call
scas
out
lahf
add
adc
pop
icebp
xor
es
pop
adc
js
dec
test
daa
push
jg
test
push
inc
pop
sahf
cs
push
xchg
mov
push
imul
xchg
addr16
rcr
push
or
mov
sbb
cmps
not
cmps
adc
repz
xor
dec
and
mov
push
cmc
ror
pop
ret
lds
clc
sub
sbb
push
dec
jae
sub
(bad)
cwde
jmp
jb
in
xchg
or
sbb
xchg
fisubr
sbb
lods
xchg
push
jle
adc
push
sahf
and
adc
or
int3
jne
mov
cmp
inc
mov
jle
or
push
xor
mov
sub
scas
dec
jnp
push
pop
mov
test
xchg
ror
adc
mov
xor
daa
inc
mov
xor
jl
lds
out
in
dec
add
es
cmp
xor
xchg
jb
and
or
aas
and
push
dec
nop
(bad)
das
mov
lods
out
cmps
add
ins
cmps
sub
jle
nop
push
inc
(bad)
aas
ins
in
rcl
adc
mov
out
mov
sbb
sar
and
add
gs
and
cmp
sub
pop
and
push
dec
adc
pop
pop
cmp
pop
cmp
pop
push
pop
test
push
imul
add
xchg
adc
mov
sub
and
add
(bad)
pusha
lds
movs
fs
imul
xor
adc
push
mov
and
dec
mov
mov
inc
cmps
hlt
aas
pop
pop
inc
outs
mov
leave
push
fs
repnz
push
ror
inc
cli
push
xchg
movs
popf
daa
mov
sbb
test
es
jmp
mov
popa
lock
mov
out
mov
nop
add
lahf
jne
scas
adc
mov
les
jnp
outs
or
push
add
arpl
cmps
das
mov
dec
shr
arpl
hlt
stos
mov
xchg
fs
sahf
xchg
ja
call
add
xchg
inc
data16
push
pop
jnp
(bad)
mov
pop
call
pop
lock
movs
sbb
je
ja
push
ss
mov
cmps
cmp
mov
sub
(bad)
sbb
or
push
lahf
pop
jmp
mov
stos
xchg
lock
sbb
adc
idiv
push
cmp
repz
push
xchg
jmp
mov
jmp
and
jge
or
inc
pop
sub
les
sbb
cmp
sbb
lods
add
je
mov
sbb
mov
jecxz
sbb
fwait
stos
sbb
mov
mov
fs
xchg
mov
ins
sbb
nop
dec
mov
data16
pop
xchg
(bad)
fmul
and
dec
(bad)
sbb
dec
jae
bound
or
xor
adc
xor
jle
inc
in
mov
ds
mov
vpsubq
mov
mov
dec
and
scas
test
stc
stos
jb
gs
push
sub
pop
cs
dec
jbe
cmc
lods
lods
cmp
pop
mov
adc
inc
mov
and
jmp
jg
mov
or
shl
inc
xchg
push
or
(bad)
lods
mov
push
push
(bad)
sahf
push
jo
repz
sbb
call
pop
sub
aaa
sub
push
sbb
dec
mov
inc
push
mov
test
cs
add
push
les
xchg
test
jg
inc
enter
fidivr
out
push
push
mov
iret
jp
ret
aam
retf
ds
jecxz
pop
retf
sbb
not
or
and
rol
in
loopne
or
xchg
jle
nop
retf
cld
sub
inc
add
aas
inc
shr
push
xlat
push
mov
cli
aam
aaa
mov
pop
inc
sbb
and
mov
mov
push
scas
js
mov
ret
mov
mov
shl
dec
jnp
cdq
ret
adc
push
jl
lods
xor
jl
pop
pop
xlat
jne
in
and
push
imul
ret
cmp
inc
jbe
ins
retf
add
push
cmp
mov
stc
sbb
jecxz
imul
add
aaa
push
movs
dec
inc
cdq
pop
(bad)
dec
jmp
cmps
ins
pop
shl
or
nop
fiadd
hlt
clc
test
sub
imul
sub
sub
dec
addr16
retf
xchg
mov
ret
sbb
dec
or
sbb
and
adc
mov
adc
stos
push
stos
les
jno
push
jp
or
cmps
cdq
adc
mov
inc
and
int3
aaa
xchg
repnz
fiadd
dec
push
dec
ror
neg
lahf
push
xchg
dec
jmp
lods
pusha
push
rcl
inc
pop
imul
push
inc
lods
retf
enter
push
push
and
cmps
(bad)
add
push
xchg
xor
push
dec
shl
lea
idiv
adc
mov
sahf
sar
int3
ja
popf
gs
(bad)
xor
js
rcl
pop
cmp
cmps
dec
jge
(bad)
fs
or
jmp
int
imul
adc
(bad)
shl
lds
and
sub
and
cmp
popf
jbe
dec
adc
xlat
retf
fmul
aam
sbb
jmp
xchg
sub
test
outs
ja
inc
mov
inc
and
sbb
imul
repz
test
mov
mov
ror
icebp
into
ret
call
enter
daa
push
test
fs
xor
jb
aad
repz
add
pop
add
ret
jmp
aam
and
neg
test
push
add
jns
xor
les
and
xor
out
lock
fs
mov
jecxz
into
addr16
jg
test
repnz
in
or
loope
sbb
mov
(bad)
xchg
arpl
pop
pop
out
outs
aad
jl
dec
push
jmp
or
popf
repz
jge
test
pop
xor
adc
or
inc
add
daa
retf
je
mov
outs
lods
les
mov
or
adc
cmp
shl
dec
icebp
daa
dec
cmp
pusha
or
call
pop
dec
jge
mov
mov
fwait
repnz
or
xchg
pop
sub
loop
jbe
mov
mov
mov
fldenv
push
mov
pop
jg
mov
ins
sub
mov
cmp
scas
inc
cmp
pusha
fs
cmps
pinsrw
or
add
cmp
movs
pop
mov
dec
out
pop
mov
mov
pop
xor
sub
mov
test
cmp
mov
cmp
jecxz
pop
and
int3
cld
xor
pop
js
pop
lea
mov
int
cmps
push
jle
push
cli
pop
add
dec
and
retf
ja
pop
jge
pop
mov
adc
jno
jns
int
clc
pop
je
movs
movs
mov
jbe
imul
fmulp
push
fdiv
popf
add
sub
int
mov
mov
jle
pop
sbb
or
or
movs
dec
xchg
dec
and
pushf
cmp
add
cmp
cmp
jns
shl
xchg
sbb
sub
jbe
loop
pop
mov
dec
inc
sub
ja
test
es
adc
add
inc
mov
scas
out
hlt
xchg
cdq
and
cli
dec
aad
scas
pop
int3
jo
out
in
fstp
ds
mov
inc
mov
adc
in
shl
sbb
pop
or
fs
leave
popa
test
stos
fcmovnbe
push
rcr
cli
or
and
sub
aam
adc
mov
cld
mov
in
cmp
mov
dec
popa
scas
xor
int3
(bad)
fsub
in
sub
adc
cmp
out
mov
xchg
and
sub
popf
ss
cmp
sub
adc
(bad)
shl
or
mov
sub
inc
adc
retf
pop
jae
push
lea
add
je
or
push
call
ret
in
inc
outs
and
mov
sbb
dec
mov
fsubr
out
lahf
xor
scas
cld
loope
mov
xchg
imul
in
push
int3
shr
shr
dec
fmul
jnp
dec
and
xor
test
enter
adc
ss
daa
inc
mov
pop
mov
and
add
cdq
sahf
push
retf
sub
retf
dec
ret
or
bound
inc
jmp
int
push
adc
ins
xchg
xor
fs
xlat
div
and
mov
xor
xor
inc
int3
into
mov
stos
pusha
stos
mov
clc
sbb
ins
dec
hlt
repz
test
lods
jmp
retf
push
call
adc
xor
fs
in
inc
jmp
hlt
xchg
in
pushf
pop
rcl
scas
test
cmp
jmp
pusha
dec
lea
inc
into
sub
adc
enter
cli
inc
stc
outs
mov
inc
push
cmp
nop
or
mov
popf
or
add
adc
adc
(bad)
cmovs
in
fstp
inc
sub
adc
or
or
fcom
sbb
push
cmps
jecxz
adc
or
stos
rcr
and
retf
pop
and
leave
rcl
aaa
xchg
test
xor
scas
lahf
push
ds
lock
push
call
mov
push
jo
mov
test
movs
push
inc
push
shl
mov
jae
sbb
adc
push
adc
dec
cmps
scas
jl
dec
mov
fstp
add
and
aad
and
add
push
pop
in
pusha
int3
out
es
push
mov
dec
in
hlt
dec
and
mov
push
repnz
(bad)
je
imul
push
jecxz
xor
add
inc
test
sbb
ror
mov
or
or
adc
and
daa
out
dec
cmps
push
imul
nop
enter
jmp
add
xor
pop
push
stc
xor
ins
mov
cdq
mov
lock
cmp
mov
xchg
das
daa
jno
in
dec
mov
cwde
cmp
das
jae
and
mov
rcl
mov
addr16
jl
mov
ins
sbb
gs
cmps
jle
cli
(bad)
and
or
mov
xchg
adc
dec
push
cmps
aad
or
pcmpeqw
pushw
add
inc
add
cmp
add
int3
shl
mov
mov
push
cmp
or
in
sbb
mov
shr
dec
in
outs
imul
sub
(bad)
daa
cmp
push
lahf
popf
push
pop
mov
mov
sbb
xor
fisub
aam
dec
mov
and
or
push
loope
ds
sar
ja
in
adc
mov
movs
popf
mov
jno
psadbw
pop
jb
loop
mov
adc
rcl
pop
sub
nop
push
out
addr16
movs
jnp
jmp
sbb
std
movs
repz
clc
add
or
xchg
outs
xchg
gs
mov
pop
outs
push
(bad)
and
mov
or
xchg
mov
in
cmp
inc
pop
test
adc
dec
sbb
fidiv
(bad)
mov
dec
dec
aaa
sub
sti
push
div
push
sti
sbb
xchg
add
sbb
or
dec
add
sti
pop
ins
xchg
xchg
mov
mov
pop
popf
cmp
add
xchg
call
outs
jge
sub
adc
shl
in
cmp
test
xor
cmp
adc
loop
das
add
pop
ds
(bad)
movs
int3
sub
sbb
or
push
add
mov
mov
(bad)
sahf
xor
lds
in
fwait
(bad)
sub
addr16
push
sbb
test
add
and
mov
addr16
push
mov
sbb
imul
or
xchg
mov
dec
retf
adc
mov
pop
out
push
mov
dec
or
mov
jl
rcl
cmps
jbe
lahf
js
adc
add
xchg
or
inc
add
mov
jp
sub
rol
in
ja
adc
xchg
loope
call
push
pop
in
push
imul
or
jge
and
addr16
mov
inc
lods
push
mov
imul
add
mov
sub
fadd
dec
push
imul
and
sbb
adc
ret
mov
jb
sbb
addr16
mov
mov
dec
je
or
out
dec
dec
movs
call
test
cmovge
inc
ret
xlat
adc
das
mov
aam
ins
or
test
rcr
adc
jl
xlat
pusha
inc
and
hlt
iret
mov
repnz
fsubrp
in
fldenv
dec
inc
in
test
jecxz
push
pop
xor
pop
inc
out
push
cmp
jno
shl
mov
xchg
dec
imul
jl
sbb
pmullw
adc
fbstp
cmp
ins
imul
push
mov
call
and
sub
fs
stos
jno
mov
pop
fmul
ss
loopne
push
imul
sub
pop
mov
mov
push
xchg
mov
popa
mov
push
add
js
in
sub
xor
in
mov
dec
nop
fnstcw
sub
cmps
inc
mov
add
dec
test
cld
or
cmps
push
sub
and
push
mov
mov
into
leave
stos
je
sbb
dec
cmp
adc
jne
push
push
adc
aas
fiadd
pop
or
push
mov
or
cli
stc
repz
cmps
and
icebp
mov
pop
test
jp
add
(bad)
push
stc
cs
outs
fxch
and
pop
push
inc
cmp
pop
daa
mov
das
test
(bad)
div
iret
lods
rcl
call
fld
push
mov
mov
xchg
test
mov
dec
call
cmp
cmp
sar
add
jmp
add
add
add
add
push
add
ins
bound
add
add
push
add
add
add
sub
inc
jns
add
add
popa
xor
and
or
add
add
add
or
inc
add
arpl
add
jae
and
xor
xor
xor
xor
cmp
adc
dec
add
jo
jb
add
popa
add
add
add
add
push
add
add
or
push
add
jb
jae
imul
add
add
popa
xor
sbb
add
add
add
push
add
add
add
popa
addr16
sbb
jecxz
add
ins
je
add
or
jmp
add
dec
inc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
dec
add
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
cli
imul
imul
imul
jne
cmp
outs
xor
enter
int
pop
pop
lods
dec
mov
or
jge
inc
add
xchg
add
dec
pop
cwde
stos
aaa
in
mov
cmp
xor
sti
(bad)
dec
push
or
pop
mov
pushf
add
fldcw
stc
(bad)
adc
mov
push
mov
cmp
ror
add
stos
leave
lods
or
sub
and
(bad)
movs
mov
jo
add
mov
mov
adc
mov
and
aaa
fs
cdq
dec
inc
call
jmp
movs
dec
ins
xchg
xor
int
out
pushf
xchg
cmp
leave
mov
das
cdq
inc
cdq
push
ins
arpl
xchg
add
push
stos
enter
add
js
aam
dec
test
mov
inc
ds
mov
add
clc
test
mov
loope
cmps
lods
and
cmp
or
mov
xchg
or
cs
pop
jecxz
ins
or
xlat
push
jno
test
in
jge
shl
in
lods
bound
sub
push
out
int
inc
lea
ror
fdiv
dec
js
or
push
mov
mov
aas
cmps
(bad)
mov
push
xor
(bad)
pusha
cmp
jmp
aaa
int3
dec
daa
mov
push
mov
and
(bad)
or
leave
cld
cmp
ret
cmp
and
cmp
call
xchg
inc
or
mov
and
push
in
enter
popf
adc
andnps
push
mov
push
ins
cmps
xor
leave
repnz
jecxz
aad
add
push
ficomp
fdivr
xlat
out
jmp
jmp
push
test
add
inc
push
pop
call
test
inc
stos
stos
loopne
gs
inc
sbb
out
(bad)
enter
xor
jnp
imul
and
mov
inc
(bad)
repnz
rol
cmp
mov
sar
ret
xchg
add
push
out
pmovmskb
push
mov
cmp
push
aaa
and
lea
cmps
sahf
lds
jl
cmp
xchg
ds
jbe
mov
sbb
bound
xchg
inc
es
ins
iret
call
sbb
sahf
xchg
jno
push
sbb
outs
push
and
dec
lds
mov
inc
add
rcr
rcr
shl
test
nop
and
xor
call
(bad)
dec
xor
test
xchg
sub
lea
cmp
(bad)
xlat
(bad)
inc
sar
adc
ja
mov
mov
iret
cmp
ss
dec
lods
jne
movs
addr16
mov
or
(bad)
mov
fcomp
jnp
mov
sub
adc
push
inc
jmp
stos
std
sbb
xchg
stc
cmc
std
sub
mov
or
movs
test
stos
addr16
cmp
add
popa
adc
(bad)
and
ins
adc
mov
sbb
and
rcr
and
jge
cmps
in
out
jg
dec
sar
xchg
add
add
inc
jno
xchg
mov
and
xchg
nop
retf
dec
outs
and
fdiv
mov
sbb
in
cmps
call
sbb
cmc
in
fisttp
push
and
mov
inc
out
push
mov
loope
test
pop
scas
out
mov
nop
scas
int
cmps
clc
adc
cmp
stos
xor
scas
adc
loopne
cli
mov
sub
dec
pop
in
outs
mov
push
lods
mov
enter
les
rol
mov
mov
jne
pop
aas
cs
cli
push
mov
lds
gs
retf
cmps
fiadd
retf
cmc
pop
call
rcr
rol
push
out
retf
or
and
ret
(bad)
push
mov
test
iret
xor
dec
rol
mov
sbb
or
call
(bad)
push
jno
and
push
push
sub
inc
ds
imul
jnp
outs
cs
in
add
adc
xchg
cmp
rcl
pop
rcr
add
push
sbb
sub
aas
mov
into
inc
movs
or
push
imul
lock
cmp
xor
retf
lock
out
xor
xlat
sbb
or
(bad)
aad
push
mov
(bad)
mov
loope
mov
loopne
aam
paddd
mov
mov
jne
inc
mov
add
mov
mov
cmp
(bad)
fimul
mov
mov
and
aas
icebp
rol
mov
aam
mov
jno
add
xor
pushf
mul
sbb
sub
jmp
in
dec
fnstenv
push
jp
out
int3
call
or
push
mov
iret
movs
cmp
or
test
sub
loopne
pop
and
push
jecxz
lahf
cmps
push
and
push
pop
pop
mov
sbb
mov
repz
mov
mov
xor
dec
(bad)
push
leave
adc
ins
or
cmp
jae
lods
dec
inc
lods
mov
jmp
jp
pop
cmp
dec
xchg
sub
fs
mov
push
sar
aam
or
push
mov
and
jmp
sub
gs
das
arpl
lods
(bad)
mov
inc
mov
movs
cdq
sbb
scas
int
sub
ret
sub
jbe
repz
mov
jle
add
(bad)
cli
jl
(bad)
and
xor
push
sbb
pavgw
xor
enter
stos
add
test
aad
cmps
push
out
mov
int
in
jmp
(bad)
stc
pop
in
sub
fnsave
dec
sti
jmp
cld
jno
mov
sub
lods
add
cld
xor
gs
jmp
inc
sub
adc
cmp
rol
daa
add
xchg
sub
jae
dec
xchg
in
(bad)
shr
int
aaa
xchg
daa
pushf
and
jae
add
add
test
lds
and
repz
stc
push
rcr
into
into
pop
dec
out
inc
out
pushf
hlt
mov
repz
pushf
mov
adc
shr
sbb
mov
mov
pop
(bad)
cdq
fwait
es
(bad)
js
mov
fist
lds
xor
jno
lods
dec
js
sbb
fbld
sahf
pop
mov
in
mov
sub
mov
push
mov
mov
or
sbb
jno
jmp
jecxz
and
push
aad
repz
scas
cmp
adc
cmc
pop
mov
xchg
or
pop
dec
xor
jge
dec
push
cmp
pop
sub
dec
test
ins
(bad)
loopne
or
inc
dec
leave
es
scas
retf
cmp
or
sub
ja
sub
inc
xchg
or
(bad)
push
sahf
or
xchg
jmp
pop
xlat
mov
mov
popf
pop
js
push
lahf
pop
mov
xchg
lods
ins
int
jns
lahf
and
push
cli
enter
clc
aad
xor
sti
inc
shl
mov
xchg
push
aam
jge
retf
stos
sbb
fst
fimul
sar
int
retf
or
scas
xor
std
movs
jns
shl
jl
jno
lds
and
xchg
pop
cmc
adc
es
sub
push
jnp
and
push
add
int
fmul
out
add
xor
jb
imul
mov
std
jb
std
add
push
gs
xchg
inc
dec
cmp
dec
cs
rcl
mov
fwait
cmp
pop
xor
xchg
fisub
add
lea
aas
fstp
cmc
into
clc
push
inc
lahf
cli
cli
pop
std
or
mov
inc
inc
cmc
int3
push
add
js
loop
pop
in
push
mov
dec
xchg
add
pushf
sahf
inc
jecxz
mov
mov
mov
mov
mov
add
lahf
test
adc
cwde
push
xor
outs
xchg
iret
sbb
xchg
fistp
inc
and
rol
and
push
xlat
loop
aam
mov
and
and
iret
pop
pop
xlat
mov
lods
push
mov
push
inc
jge
sub
imul
pop
(bad)
cld
fisub
scas
inc
jmp
inc
ror
into
out
imul
sbb
ror
inc
inc
rep
jg
addr16
call
jge
stc
(bad)
mov
out
pop
test
movs
fcmovnb
(bad)
fld
pop
sbb
sahf
(bad)
cmp
lods
pusha
js
les
pop
xchg
imul
jl
inc
(bad)
mov
stc
push
sub
aas
mov
sahf
scas
out
mov
dec
jge
lods
enter
sbb
push
add
add
mov
in
jo
add
fidivr
jg
jg
ja
pop
inc
nop
xor
add
cmp
xor
imul
stos
inc
cs
pop
pop
xor
outs
inc
push
ja
sbb
jnp
inc
dec
lahf
idiv
add
push
pop
(bad)
into
dec
sahf
and
retf
es
or
sub
std
push
shl
(bad)
sbb
inc
cmp
sub
dec
das
cld
jp
imul
adc
repz
xchg
scas
ins
sub
cmp
dec
nop
(bad)
shr
sbb
inc
pop
sahf
mov
add
mov
out
push
popa
cmps
inc
mov
add
inc
xor
jp
popa
add
cmp
icebp
add
jg
fnstsw
xchg
in
dec
icebp
sub
xchg
mov
jge
cmc
sbb
sub
aas
in
jns
add
inc
ins
inc
pop
jbe
add
or
ins
push
jbe
jns
mov
add
push
jp
lods
test
movs
jmp
and
sub
lods
(bad)
sti
stos
inc
mov
out
mov
out
es
xor
std
std
xor
or
(bad)
nop
jns
cmps
sahf
mov
jmp
(bad)
movs
int
js
push
loopne
(bad)
mov
add
inc
jle
enter
lock
out
push
pop
ins
inc
pop
outs
cmc
adc
aas
(bad)
fld
add
clc
std
adc
inc
add
add
add
add
bound
xor
add
or
dec
outs
and
je
cmp
add
(bad)
inc
add
iret
add
add
sbb
add
add
nop
add
jl
add
popa
outs
jae
push
gs
inc
push
add
push
add
gs
xor
add
adc
jae
jo
outs
jb
inc
imul
imul
(bad)
inc
add
add
add
pop
pop
sub
or
sbb
adc
and
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
inc
add
add
add
(bad)
clc
jg
(bad)
clc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jg
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
dec
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
pop
(bad)
(bad)
(bad)
(bad)
jg
add
add
add
pop
clc
add
(bad)
jg
clc
jo
add
pop
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
jo
pop
clc
pop
jo
add
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
jmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
(bad)
cld
and
(bad)
clc
pusha
add
clc
loopne
(bad)
jmp
add
jmp
pop
(bad)
jmp
ud0
loopne
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
add
jl
add
popa
outs
jae
push
gs
inc
cmp
pop
push
add
popa
xor
sbb
sbb
ins
je
add
pop
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
in
pop
push
push
push
push
xor
cmp
dec
add
add
add
add
add
add
dec
add
add
add
sbb
add
add
add
add
add
add
add
dec
add
add
add
fadd
sub
add
add
add
add
add
add
add
add
daa
sldt
add
pusha
or
sbb
nop
cmp
dec
add
add
add
add
add
add
add
add
dec
add
add
add
cmp
dec
add
add
add
add
add
js
inc
dec
dec
add
add
add
add
cmp
dec
add
add
add
add
add
cmp
dec
daa
adc
add
add
or
add
add
add
add
add
inc
dec
dec
add
add
add
add
das
data16
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
cmp
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
call
dec
dec
add
add
add
add
add
cmp
dec
add
add
add
add
add
cmp
dec
add
add
add
add
add
add
add
add
add
inc
add
add
cmp
dec
add
add
add
add
add
push
cmp
dec
add
add
add
jne
add
add
add
pop
add
add
add
add
punpckhwd
sbb
add
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
out
add
inc
outs
bound
add
add
(bad)
fild
test
or
or
or
or
or
or
or
adc
adc
adc
sbb
or
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
adc
push
push
adc
push
push
push
push
adc
or
or
or
adc
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
pop
add
add
add
adc
add
add
fld
add
pop
inc
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
adc
add
and
xor
adc
mov
adc
xor
adc
pop
and
icebp
arpl
push
mov
xchg
push
fs
ret
ss
rcl
gs
ret
shl
repz
daa
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
adc
add
add
add
add
add
adc
and
adc
push
popa
jno
adc
mov
push
shl
xor
loope
adc
xor
and
add
xor
push
mov
ss
loop
mov
ret
shl
repz
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
daa
aaa
inc
push
addr16
xchg
cmps
mov
(bad)
fiadd
or
add
add
add
add
add
in
mov
fsub
aam
test
add
xor
call
addr16
mov
sub
xchg
fwait
cmps
(bad)
push
loope
scas
sbb
cmp
in
adc
lahf
ficom
(bad)
adc
cmp
(bad)
mov
ds
xlat
pop
xchg
dec
ss
jns
jbe
add
std
fist
aas
cmp
(bad)
xor
rol
xchg
out
jb
inc
(bad)
cmp
ins
xlat
out
jnp
and
mov
aad
inc
xor
push
pop
dec
repz
enter
xlat
xor
jo
je
pop
in
arpl
inc
cmps
mov
push
cli
not
sbb
in
ret
jle
not
push
fstp
loope
sub
jne
xor
out
xchg
popf
out
std
out
into
clc
out
cld
out
in
sub
lea
jnp
pop
push
(bad)
icebp
pop
call
iret
inc
idiv
dec
cli
or
leave
ds
jmp
cmp
xchg
xchg
cmp
pop
movs
push
cmp
cmp
out
std
stc
ja
jb
sbb
mov
cmps
add
in
(bad)
sahf
jecxz
arpl
xchg
jo
mov
(bad)
shl
add
or
push
outs
das
outs
xchg
cmp
jmp
jo
and
test
mov
dec
ror
out
push
jno
mov
inc
mov
push
mov
cdq
adc
cmc
jg
and
lds
ja
mov
adc
retw
(bad)
addr16
and
pop
xchg
dec
(bad)
scas
adc
sub
shl
push
pop
iret
movs
mov
pop
lock
ins
xchg
adc
mov
inc
popa
lds
mov
push
(bad)
xor
xchg
scas
and
jo
jmp
jno
add
cmps
dec
adc
mov
inc
mov
mov
stos
arpl
fisub
adc
test
mov
fdivr
jne
mov
call
adc
add
jmp
mov
call
pop
stos
aad
jae
xchg
xchg
add
mov
mov
fdivr
dec
ja
outs
clc
and
popa
fcomp
sub
fcomp
add
btr
ficomp
std
das
movs
jmp
int
sbb
mov
repz
movs
mov
aaa
sbb
pop
out
pop
cmp
mov
add
arpl
out
hlt
mov
hlt
jne
scas
int3
addr16
fdiv
nop
pop
xlat
xchg
imul
clc
inc
fmul
(bad)
jge
xor
(bad)
int3
ja
mov
(bad)
in
scas
mov
inc
cld
inc
bnd
cmp
movs
or
cdq
aas
mov
loope
push
inc
cli
ins
rcl
mov
xchg
mov
clc
out
mov
cs
mov
cdq
pop
outs
xor
mov
sbb
fiadd
jge
aas
movs
hlt
mov
pop
std
fild
call
add
ins
(bad)
push
push
es
test
fxch
jne
mov
cdq
adc
and
dec
in
std
sbb
pop
in
dec
cmp
mov
enter
imul
mov
hlt
pop
in
cli
push
fadd
or
push
arpl
(bad)
mov
mov
pop
and
dec
inc
xchg
mov
stc
mov
pop
test
int
ins
cmp
push
adc
jge
or
jecxz
nop
iret
(bad)
inc
push
mov
sar
mov
xchg
fcmovnu
in
lods
dec
out
mov
ins
mov
push
pop
(bad)
mov
aad
(bad)
aaa
js
(bad)
ins
scas
mov
sub
add
je
inc
fs
(bad)
jb
lods
scas
mov
jmp
fist
cld
(bad)
cmp
idiv
std
mov
add
cdq
adc
out
adc
fcmovnu
(bad)
dec
pushf
out
ror
adc
(bad)
out
mov
add
leave
in
jnp
jmp
mov
pop
adc
sbb
mov
inc
cli
mov
pop
jmp
repnz
cdq
inc
pop
xor
or
add
fild
cdq
mov
push
outs
xchg
(bad)
cwde
stc
add
shl
shrd
adc
mov
cmp
mov
xchg
(bad)
pop
jae
jo
loop
out
push
std
aaa
cmp
mov
in
jp
pop
push
repz
js
(bad)
ds
sbb
mov
ja
jg
cmc
cmp
xchg
outs
mov
rol
fsubr
cmp
stos
sbb
iret
scas
jne
jge
mov
fisttp
cli
push
jp
push
jo
movs
mov
jl
pop
xor
pop
ret
cmp
test
repz
lahf
cli
(bad)
jp
ins
int3
jne
mov
xchg
(bad)
jno
xrelease
out
stos
clc
mov
sbb
mov
lds
jle
push
inc
out
scas
mov
adc
cs
cli
mov
bnd
icebp
aas
fsubr
shl
fadd
xor
jge
cmp
inc
ja
cmp
lahf
add
mov
loopne
pop
dec
ins
jge
(bad)
ror
add
movs
cmp
sbb
pop
arpl
jl
cmp
xor
fcmovbe
ins
ins
ds
jno
and
cli
inc
(bad)
cld
test
xlat
push
add
inc
cli
(bad)
cmc
xchg
imul
imul
xchg
ss
sub
out
cmp
mov
cmp
div
loop
inc
push
rcr
fadd
push
out
jg
ins
std
pop
call
out
xchg
aam
push
sbb
xor
sbb
lods
arpl
arpl
mov
in
mov
jle
xchg
rcr
call
inc
(bad)
std
sub
inc
call
js
adc
retf
lahf
push
push
jbe
outs
jnp
mov
das
stc
(bad)
or
stos
js
stos
cmp
and
outs
and
dec
jae
outs
cld
pop
dec
outs
mov
jbe
mov
push
jae
(bad)
sti
pop
arpl
cld
xlat
sbb
hlt
jle
fsubr
pop
mov
and
inc
xor
sbb
in
pop
cdq
stc
mov
jge
add
pop
(bad)
adc
inc
sahf
xchg
ins
stos
ss
pop
sub
dec
mov
aad
ins
(bad)
es
add
pop
int3
xchg
les
pusha
jle
inc
xor
jge
mov
and
cli
dec
arpl
jge
pop
call
hlt
pop
mov
(bad)
jns
inc
arpl
fimul
mov
ret
mov
mov
sbb
pop
jge
movs
shl
fidiv
lods
ins
jbe
pop
out
jmp
pop
jno
fcomp
mov
xor
fs
outs
mov
xlat
cmp
xor
sbb
jno
fsubp
pop
pop
popa
fdivr
sbb
sub
not
or
pop
lahf
mov
icebp
sbb
ins
pushf
xchg
push
dec
cli
lods
arpl
arpl
imul
popf
gs
(bad)
out
leave
lods
inc
loope
lds
xchg
mov
jae
push
and
jnp
jb
mov
fimul
sub
rcr
jnp
fbstp
shl
std
and
(bad)
(bad)
int
jmp
mov
or
lock
adc
cli
ds
mov
xchg
inc
xchg
push
ret
xchg
mov
js
jo
dec
(bad)
mov
aas
push
cmps
xor
fistp
xchg
mov
inc
in
dec
mov
enter
mov
xchg
jle
in
add
jecxz
jecxz
rcr
xchg
ret
sbb
xor
fdivr
jmp
out
hlt
in
jg
cli
imul
sbb
add
je
mov
fsub
jg
pop
retf
ss
popf
popf
xor
mov
aaa
mov
xor
jae
leave
outs
shl
lahf
into
sub
loope
fmul
cdq
xchg
(bad)
(bad)
shl
cmp
push
push
retf
fldl2e
mov
movs
std
imul
xor
jmp
ins
mov
imul
out
mov
inc
cmp
cmc
sbb
xchg
push
shr
mul
push
mov
test
add
mov
add
fucomp
nop
cmp
jne
das
or
cld
jbe
idiv
sbb
iret
jmp
std
sbb
ja
cmp
fcomip
imul
sub
popf
mov
mov
loopne
out
ror
ss
faddp
inc
ins
add
aam
sub
jge
sub
ficomp
cmp
out
cmp
cmp
fbstp
ficomp
xor
push
jmp
dec
movs
add
sub
fdiv
dec
js
lds
push
out
cmc
jo
out
mov
fcmovbe
inc
popf
xor
xchg
rol
repz
or
xor
shr
ds
xchg
pop
fisttp
int3
sub
fidiv
xchg
pop
mov
mov
xor
inc
inc
scas
mov
pop
gs
enter
jge
aas
sbb
scas
not
cld
aad
cdq
cli
adc
xor
jo
and
jnp
std
mov
mov
sbb
mov
push
xor
outs
ret
(bad)
xor
repz
add
dec
mov
das
shr
mov
jp
jno
sub
not
cmps
call
xchg
stos
sbb
pop
enter
sub
les
hlt
jns
jg
inc
sar
add
mov
and
rcr
add
and
inc
jne
xchg
rcr
xor
fistp
out
inc
sub
retf
iret
mov
adc
mov
mov
push
int
xchg
xlat
aam
xor
sti
sub
mov
xchg
xlat
retf
inc
mov
(bad)
mov
inc
dec
(bad)
adc
movs
std
pop
bswap
(bad)
mov
ins
ss
sub
cli
pushf
shl
out
int3
jge
sbb
push
and
xor
je
nop
out
xor
iret
jnp
push
jp
push
ja
sbb
push
mov
sub
shl
mov
pop
retf
hlt
pop
pop
outs
push
mov
call
pop
rcr
iret
js
pop
dec
push
(bad)
in
call
pop
lahf
aam
leave
outs
inc
sub
ffree
fcmovu
mov
jmp
das
gs
stc
scas
push
ficomp
dec
cli
adc
dec
ds
mov
bnd
lea
cld
lahf
into
hlt
jg
loop
adc
and
and
ret
div
imul
jo
jmp
stc
jno
inc
sbb
cmp
pop
retf
and
ja
adc
sub
popf
push
data16
test
push
inc
pusha
jge
(bad)
xlat
cmp
cmp
add
hlt
push
add
sbb
add
jg
hlt
push
mov
aaa
fwait
add
ds
mov
dec
iret
fmul
xchg
adc
mov
adc
mov
add
shl
movs
in
jns
or
shr
clc
pop
in
enter
shl
push
lahf
add
dec
mov
mov
fnstenv
cmp
fild
(bad)
pop
mov
loope
jae
jmp
mov
shr
mov
hlt
jle
xchg
stos
or
mov
rcl
sub
xor
jnp
mov
(bad)
ins
fcmove
cmps
mov
pop
sbb
out
jo
sbb
ret
icebp
ret
fild
cmp
pop
mov
movs
iret
cli
push
jge
mov
arpl
daa
sar
cwde
(bad)
dec
pop
inc
dec
(bad)
mov
pop
jbe
push
(bad)
push
cmp
mov
xchg
lock
cmp
gs
ins
movs
add
les
push
fwait
pop
pop
cld
xlat
out
mov
repnz
cmc
xchg
sub
hlt
jns
std
push
adc
pop
sub
aaa
ins
mov
dec
aad
lahf
cld
xlat
mov
repnz
dec
cdq
pop
pusha
dec
pop
(bad)
cmps
cmc
iret
sub
lods
mov
pop
mov
(bad)
sti
daa
xor
scas
add
or
out
ficomp
dec
pop
jae
and
popf
imul
mov
xchg
(bad)
dec
fbld
inc
(bad)
jl
aam
outs
jmp
mov
xchg
ins
(bad)
mov
cmp
out
jns
rcr
ja
pusha
std
mov
mov
mov
mov
cmp
dec
add
add
add
add
add
add
add
add
add
add
mov
or
and
or
and
or
add
ja
cmp
pushf
int3
int
ja
cmp
pushf
int3
int
ja
cmp
pushf
int3
int
add
jns
push
add
push
add
push
add
jp
mov
jp
mov
jp
mov
add
jns
push
add
xor
jns
push
add
xor
jns
push
add
xor
add
js
stos
add
pop
add
add
shr
mov
add
jbe
in
pusha
cli
push
add
in
pusha
cli
push
add
in
pusha
cli
push
add
add
pop
jb
pusha
cdq
call
jno
add
xor
add
pop
add
add
mov
int
and
int
and
int
inc
dec
dec
pop
rol
push
popa
je
and
add
add
add
add
add
add
add
jns
cmp
fstp
add
cmp
fstp
add
cmp
fstp
add
add
add
and
add
add
and
add
add
and
add
add
mov
clc
jge
add
mov
cli
push
push
add
push
push
add
mov
add
add
stos
stos
add
stos
stos
add
stos
stos
add
stos
stos
add
stos
stos
add
stos
stos
add
add
icebp
mov
push
adc
pop
add
mov
add
add
mov
add
mov
add
mov
push
add
or
sbb
mov
fucom
mov
sbb
push
add
ja
add
add
stos
stos
add
stos
stos
add
stos
stos
add
add
clc
in
mov
into
cmp
mov
mov
push
add
add
cmp
mov
push
cmp
mov
push
cmp
mov
add
(bad)
sbb
mov
(bad)
sbb
mov
(bad)
sbb
mov
add
mov
add
push
cmp
mov
mov
push
add
add
add
add
add
add
add
add
add
clc
in
lahf
fstp
add
clc
in
lahf
fstp
add
clc
in
lahf
fstp
add
add
cmp
add
sub
add
(bad)
sbb
popf
daa
rol
add
push
icebp
mov
push
icebp
mov
push
icebp
mov
add
pop
fdiv
popa
jmp
mov
popa
ja
add
jmp
add
sbb
jb
pusha
fstp
add
fdiv
pusha
fstp
add
fdiv
pusha
fstp
add
add
mov
add
mov
add
mov
add
add
jecxz
add
stos
add
sub
add
inc
sbb
pusha
stos
stos
add
add
dec
cmp
pusha
mov
add
dec
cmp
pusha
mov
add
dec
cmp
pusha
mov
add
add
jno
add
cmp
daa
inc
sbb
pusha
mov
add
ja
add
push
xchg
pusha
pusha
mov
push
xchg
pusha
pusha
mov
push
xchg
pusha
pusha
mov
add
sbb
cmp
pop
jmp
cmp
pop
jmp
cmp
pop
jmp
sbb
sar
sbb
sar
sbb
sar
add
sbb
push
add
int
sbb
in
inc
sar
sbb
push
add
fiadd
add
sbb
ins
add
add
inc
shr
add
inc
shr
sbb
cmp
inc
int3
int
sbb
cmp
inc
int3
int
sbb
cmp
inc
int3
int
add
sbb
sbb
add
push
add
sbb
add
push
add
sbb
add
push
add
add
int3
int
sbb
(bad)
sbb
push
push
cmp
add
ins
add
add
mov
add
fstp
add
mov
add
fstp
add
mov
add
fstp
add
add
stos
add
ds
add
stos
add
ds
add
stos
add
ds
add
add
jb
and
fiadd
jp
jb
and
fiadd
jp
jb
and
fiadd
add
jg
cmp
and
into
cmp
and
into
cmp
and
add
stos
add
fsubr
add
stos
add
fsubr
add
stos
add
fsubr
add
add
in
aaa
fstp
add
sub
stos
add
pop
push
add
add
ja
add
fsubr
add
add
add
fiadd
test
add
sbb
add
mov
add
test
add
inc
inc
add
popa
add
fsubr
add
add
ins
pop
add
(bad)
sbb
test
pop
add
add
(bad)
sbb
test
add
fadd
test
mov
add
xchg
add
add
ds
add
mov
mov
cmp
push
add
in
push
sub
jb
push
dec
movs
add
add
daa
rol
pop
add
push
daa
rol
nop
js
add
add
add
xchg
sbb
add
mov
xchg
rol
pop
(bad)
sbb
xchg
push
cmp
pop
(bad)
sbb
add
xchg
xchg
push
add
add
stos
stos
add
cmp
add
add
jno
add
jecxz
add
ds
add
add
mov
add
lahf
dec
add
sar
add
cdq
xor
add
jmp
add
sbb
cwde
add
bound
in
add
xchg
jno
add
ja
xchg
icebp
mov
xchg
jmp
add
xchg
pushf
jb
imul
(bad)
pop
jb
outs
cmp
add
(bad)
sbb
add
mov
aas
add
pusha
mov
lea
jno
mov
add
mov
in
mov
add
push
add
call
add
in
mov
in
mov
in
add
mov
add
jo
cli
add
ins
pop
add
sbb
add
add
add
push
lahf
add
push
add
and
jp
stos
add
movs
add
add
sbb
sar
jns
sbb
sar
jns
sbb
sar
add
js
in
call
add
js
add
add
in
pushf
fstp
add
in
pushf
fstp
add
in
pushf
fstp
add
add
add
pushf
out
out
add
add
popf
ins
pop
add
add
popf
jmp
js
in
lahf
daa
rol
js
in
lahf
daa
rol
js
in
lahf
daa
rol
add
mov
mov
mov
add
mov
in
cdq
mov
add
add
sub
cmp
cdq
dec
movs
add
ja
add
add
sar
nop
inc
add
call
add
add
mov
add
sahf
and
add
xchg
jmp
adc
add
ins
pop
add
add
add
add
ins
pop
add
pop
push
add
pusha
mov
add
xchg
clc
in
movs
ja
add
ja
add
ja
add
add
inc
inc
add
stos
stos
add
cdq
call
add
push
add
push
add
add
ins
pop
add
ins
pop
add
ins
pop
add
add
mov
add
out
out
add
sub
test
add
push
push
add
push
push
add
add
mov
mov
and
add
add
pusha
mov
test
add
rol
mov
add
jge
add
jge
add
jge
add
add
or
xchg
in
les
add
xchg
push
add
add
movs
cli
add
movs
cli
add
movs
cli
add
add
fstp
add
or
test
inc
add
add
push
add
movs
cli
add
push
add
movs
cli
add
push
add
movs
cli
add
add
stos
add
cdq
call
cdq
call
cdq
call
add
add
ds
add
ds
add
ds
add
add
cmp
add
xchg
jmp
add
add
push
rol
jmp
lahf
aad
add
add
movs
cli
add
shr
sbb
fwait
dec
movs
add
add
mov
add
out
out
add
fstp
add
add
fadd
xchg
fdiv
xchg
mov
add
mov
push
add
push
add
push
add
add
sar
mov
stos
add
jno
add
add
sar
mov
add
sar
add
mov
add
arpl
add
push
push
add
add
(bad)
sbb
test
in
xchg
push
push
add
daa
rol
add
test
mov
xchg
jno
add
mov
in
xchg
pusha
mov
jle
push
add
inc
add
xchg
dec
movs
add
add
cmp
mov
sbb
jg
sbb
xchg
sbb
test
sbb
add
add
add
or
mov
mov
mov
mov
add
cwde
push
add
and
call
add
rol
add
lahf
xchg
push
add
data16
mov
add
hlt
lahf
add
add
fsubr
add
xor
add
sbb
add
lea
add
mov
add
mov
add
add
data16
and
xchg
push
push
add
add
cdq
call
mov
jb
call
xchg
pushf
dec
cmc
add
or
mov
dec
movs
add
add
pop
push
add
int3
int
movs
dec
cmp
cdq
cmp
add
add
mov
add
mov
add
jno
add
add
shr
push
add
aad
add
add
add
add
add
sbb
xchg
pusha
mov
jle
add
xchg
inc
inc
add
in
xchg
daa
rol
add
jg
in
xchg
data16
lahf
dec
add
out
out
add
add
mov
in
xchg
mov
in
xchg
mov
sbb
xchg
push
push
add
sbb
add
jecxz
add
add
fstp
add
fstp
add
fstp
add
add
mov
add
adc
add
add
sbb
add
fstp
add
lahf
dec
add
add
hlt
lahf
add
movs
cli
add
push
push
add
add
inc
inc
add
inc
inc
add
inc
inc
add
add
movs
cli
add
add
mov
add
in
lea
add
inc
dec
dec
or
add
push
add
add
add
inc
dec
dec
add
add
add
add
add
add
add
add
jmp
or
dec
inc
inc
pop
push
push
dec
inc
dec
dec
inc
add
add
add
dec
imul
ins
outs
je
push
inc
inc
and
pop
and
into
add
add
add
add
add
popa
arpl
dec
push
inc
push
add
add
dec
inc
inc
and
inc
inc
add
not
add
add
add
shr
add
add
arpl
je
add
push
add
add
fs
add
add
je
je
add
lock
add
imul
add
add
add
adc
pop
pop
pop
add
add
add
add
pop
pop
pop
add
add
add
adc
pop
pop
pop
add
add
add
adc
ins
outs
add
add
add
ins
fs
add
add
add
add
add
add
add
add
add
add
jne
imul
add
adc
gs
jae
add
add
add
arpl
add
add
add
push
push
inc
add
add
add
or
push
push
inc
add
add
add
or
push
push
inc
add
add
add
or
gs
add
add
inc
outs
jo
jb
addr16
sub
xor
cmp
and
ja
gs
sub
popa
jb
and
ins
jo
outs
jns
add
arpl
add
add
add
adc
inc
inc
and
inc
xor
ss
add
adc
inc
inc
and
inc
xor
ss
add
pop
and
add
add
add
push
add
add
add
push
int3
pop
pop
pop
and
add
add
pop
and
add
add
add
add
cmp
add
add
add
add
add
bound
add
sbb
pop
pop
pop
and
add
add
add
add
je
fs
add
add
add
add
dec
inc
inc
and
je
cmp
das
ja
ja
imul
add
push
dec
inc
inc
and
je
cmp
das
ja
ja
imul
add
arpl
add
add
add
cs
inc
inc
and
xor
ss
inc
gs
jne
je
push
inc
inc
and
ins
outs
jne
and
popa
arpl
sub
inc
add
add
dec
inc
inc
and
xor
ss
inc
gs
jne
je
push
inc
inc
and
ins
outs
jne
and
popa
arpl
sub
inc
add
fs
add
add
add
add
gs
outs
arpl
push
imul
inc
outs
outs
imul
and
inc
xor
ss
add
sub
gs
outs
arpl
push
imul
inc
outs
outs
imul
and
inc
xor
ss
add
gs
add
add
adc
add
iret
adc
add
int3
add
or
add
add
add
pop
and
add
add
dec
or
push
add
add
out
gs
jae
add
add
add
add
add
pop
add
add
and
add
add
push
and
jb
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
inc
add
dec
add
add
arpl
push
add
jl
add
nop
add
add
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
jne
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
add
add
dec
add
add
jno
jp
test
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jb
jle
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
pop
add
xchg
mov
lds
test
push
push
push
daa
push
aaa
push
dec
push
pop
push
push
jnp
mov
popf
push
scas
push
rol
push
jecxz
cmc
pop
pop
pop
sbb
sub
cmp
pop
je
xchg
cdq
pop
lods
pop
mov
pop
clc
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
imul
mov
enter
stc
or
or
or
or
or
or
or
or
or
or
or
inc
or
mov
fimul
cs
dec
push
fs
jg
fwait
push
mov
ror
out
wbinvd
(bad)
cmovno
pop
(bad)
setbe
mov
iret
paddsb
or
adc
popa
adc
fwait
adc
adc
adc
adc
ins
adc
call
adc
adc
jecxz
add
and
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
mov
push
es
dec
push
ins
push
(bad)
push
mov
(bad)
push
cli
pop
sbb
pop
mov
scas
pop
rcl
neg
sbb
inc
sbb
mov
scas
sbb
sbb
sbb
sbb
imul
sbb
sbb
sbb
ja
sahf
sbb
sbb
sbb
cmp
arpl
mov
mov
ficomp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jo
cdq
sbb
push
push
inc
push
push
xchg
push
mov
pop
ds
imul
jmp
and
and
dec
and
mov
and
and
and
and
and
and
and
xchg
and
and
and
and
and
and
and
and
push
and
push
xchg
mov
call
daa
jp
stos
daa
fsubr
or
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
sub
jbe
stos
sub
dec
sub
cs
das
and
pop
das
xchg
das
(bad)
das
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xchg
aaa
ss
scas
ss
aaa
pushf
aaa
xlat
cmp
push
cmp
inc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
mov
aas
popa
aas
mov
inc
fs
cmps
inc
out
sub
inc
lods
inc
out
inc
xor
inc
mov
test
inc
add
mov
adc
inc
call
inc
stos
inc
lock
xor
dec
add
dec
xlat
dec
sbb
dec
lock
aaa
dec
jge
les
dec
push
dec
call
dec
mov
dec
xchg
dec
fmul
dec
outs
dec
mov
add
dec
xchg
dec
fst
push
jno
mov
push
fwait
push
out
xor
push
(bad)
push
adc
push
stos
push
not
(bad)
push
fist
push
jne
ret
push
pop
push
test
push
xchg
push
loopne
das
pop
jge
retf
pop
sbb
pop
mov
pop
cmps
pop
cmc
pop
inc
pop
xchg
pop
in
xor
pop
daa
pop
js
leave
pop
sbb
pop
mov
pop
mov
add
pusha
cld
popa
dec
popa
mov
bound
xchg
arpl
fs
fs
fs
gs
cmp
addr16
push
in
imul
dec
push
push
imul
imul
push
ins
scas
ins
or
ins
mov
outs
les
outs
js
shl
jo
jo
jno
jno
jno
jb
jb
jae
jae
jae
je
je
je
jne
jne
jne
jbe
jbe
jbe
ja
ja
js
js
js
jns
jns
jns
jp
jp
jnp
jnp
jnp
jl
jl
jl
jge
jge
jle
jle
jle
jg
jg
jg
add
or
xor
xchg
xor
push
cmp
jecxz
inc
test
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
(bad)
ss
sahf
nop
push
nop
outs
nop
(bad)
xchg
aas
xchg
test
adc
dec
xchg
mov
and
xchg
leave
xchg
xor
lahf
xchg
or
dec
cwde
mov
cdq
cld
call
scas
pushf
sbb
mov
sahf
inc
sahf
scas
lahf
sbb
mov
inc
mov
xchg
mov
out
push
movs
(bad)
movs
cmp
mov
loopne
push
test
test
sbb
(bad)
stos
add
pop
lods
shr
sub
scas
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
cs
fwait
mov
or
jp
cmc
shl
shl
ret
fcmovnb
pop
ret
aam
push
(bad)
into
lds
enter
ret
mov
mov
retf
mov
ss
mov
xor
int
into
ss
mov
aaa
iret
mov
sar
mov
rol
aam
aam
aad
aad
(bad)
push
(bad)
fcom
pop
xlat
loopne
fs
fldcw
fidiv
sti
fild
fst
fst
fild
fild
loope
loope
loop
loop
jecxz
jecxz
in
in
in
out
out
out
out
call
inc
jmp
in
jo
sti
in
xchg
adc
pushf
out
sub
mov
inc
out
int3
lock
lock
jb
push
mov
sbb
cmps
hlt
xor
ret
cmc
fdivp
ins
idiv
test
cli
push
cli
out
ja
pop
cld
cwde
std
sub
mov
jmp
(bad)
(bad)
out
add
inc
outs
bound
add
add
(bad)
fild
test
or
or
or
or
or
or
or
adc
adc
adc
sbb
or
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
adc
push
push
adc
push
push
push
push
adc
or
or
or
adc
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
and
push
add
add
adc
(bad)
fld
add
pop
inc
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
adc
add
and
xor
adc
mov
adc
xor
adc
pop
and
icebp
arpl
push
mov
xchg
push
fs
ret
ss
rcl
gs
ret
shl
repz
daa
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
adc
add
add
add
add
add
adc
and
adc
push
popa
jno
adc
mov
push
shl
xor
loope
adc
xor
and
add
xor
push
mov
ss
loop
mov
ret
shl
repz
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
daa
aaa
inc
push
addr16
xchg
cmps
mov
(bad)
fiadd
or
add
add
add
add
add
push
leave
es
call
sbb
xor
adc
xchg
fcom
jg
pop
loop
fistp
add
mov
inc
mov
test
dec
test
mov
popf
add
xor
push
loope
loopne
std
leave
outs
or
fldlg2
outs
xchg
cwde
cmc
push
push
dec
test
dec
jo
jo
sub
inc
je
dec
mov
shl
mov
arpl
dec
cmp
mov
rcr
cmp
or
je
add
add
movs
xor
loop
or
je
add
add
cmps
sti
jae
push
loope
loopne
sahf
loopne
loopne
ds
adc
mov
mov
add
(bad)
adc
dec
cmp
mov
pop
imul
jge
and
sti
xchg
fsubr
inc
lds
adc
mov
pop
imul
jge
mov
mov
and
mov
or
push
in
add
das
mov
adc
pop
and
xor
mov
js
dec
loope
mov
mov
cmp
mov
sub
pusha
movs
sub
push
test
xchg
and
and
dec
and
inc
sub
adc
mov
mov
cmp
jne
into
dec
mov
imul
jno
popa
add
mov
pop
(bad)
outs
daa
fidivr
push
addr16
and
je
scas
js
loop
into
or
idiv
push
int3
pushf
xor
outs
mov
pop
icebp
repnz
jecxz
mov
cs
loope
mov
repnz
xor
aam
xchg
data16
jno
mov
sbb
cwde
popf
les
push
in
mov
push
pusha
scas
popa
mov
(bad)
and
hlt
jbe
xchg
out
jmp
dec
mov
push
sub
je
sahf
call
xor
not
mov
push
mov
mov
mov
xchg
int
test
mov
xchg
call
mov
jne
cmp
dec
or
jmp
js
mov
mov
aas
dec
(bad)
or
sub
fldl2e
jg
sbb
test
int3
jmp
loopne
pop
popf
adc
adc
fld
mov
cmp
(bad)
jmp
fdivrp
add
mov
adc
push
into
lds
mov
jns
cmps
push
test
mov
outs
fs
sbb
push
pop
bound
je
nop
clc
sbb
popa
pop
in
and
stos
int
lahf
movs
lods
popf
mov
in
xchg
xchg
pop
cmp
dec
and
pusha
fs
push
jge
sub
xor
fsubr
mov
out
fld
test
pop
ins
push
mov
jbe
xor
jmp
push
retf
or
xor
and
dec
(bad)
or
push
mov
mov
inc
dec
out
pop
mov
inc
popf
cmps
lock
fisttp
test
shr
movs
repz
cmps
ins
fiadd
xor
lds
push
push
lahf
sar
add
and
add
outs
imul
aam
sbb
sahf
push
or
sbb
enter
nop
je
xor
add
xor
test
sub
aad
scas
sbb
xchg
int3
sub
xor
dec
fdiv
mov
mov
test
or
(bad)
jae
aad
(bad)
ror
pop
(bad)
ficom
sub
inc
pop
xchg
or
pop
in
xchg
popa
xchg
setne
mov
ret
xchg
push
aas
call
cmc
xor
lods
xchg
dec
xor
adc
jae
pop
loopne
lock
mov
scas
cmp
out
and
out
mov
xchg
mov
xchg
jle
shl
sub
mov
in
add
jecxz
adc
aam
mov
inc
and
mov
rcl
cmp
inc
jnp
sub
push
adc
xchg
mov
push
cmp
cmp
adc
and
or
(bad)
call
mov
cmps
mov
add
movs
shr
or
add
and
sub
(bad)
outs
adc
dec
retf
lods
mov
ror
cmp
add
add
fndisi(8087
retf
mov
shl
cmp
jns
retf
xchg
inc
std
retf
addr16
cmps
mov
dec
sub
inc
enter
bound
retf
ss
clc
xlat
mov
push
mov
sub
add
inc
jae
xor
add
pop
cmp
rcl
and
xor
stos
daa
pop
and
ins
ins
add
test
je
enter
lds
test
push
pop
mov
stos
fcomi
stos
cmp
mov
push
sbb
cmp
imul
jp
shr
jbe
mov
call
sbb
aaa
push
fwait
xchg
aam
jle
movs
sahf
(bad)
pop
sub
mov
xor
loop
loop
mov
mov
mov
push
dec
repnz
fidivr
sub
xor
mov
sbb
sbb
fsub
sti
gs
int3
dec
pop
repz
rcr
imul
sahf
lds
adc
adc
cmp
je
add
and
jae
jmp
je
sbb
rcr
ja
std
movs
movs
ins
ins
mov
mov
fcmovbe
fdiv
sbb
ror
jne
mov
je
ds
inc
and
or
mov
clc
adc
adc
cmps
add
jb
call
inc
adc
movs
sar
jg
sub
cmp
jle
icebp
inc
cmps
int
add
xchg
ror
dec
sahf
push
dec
sub
jo
xchg
add
add
dec
mov
shl
xor
movs
pushf
aas
inc
inc
mov
xor
je
js
mov
jns
adc
push
fsubr
popf
loope
(bad)
lahf
adc
arpl
outs
(bad)
nop
xor
leave
cld
mov
ds
mov
hlt
in
ins
jne
(bad)
into
clc
mov
add
mov
mov
jmp
push
ret
test
sbb
add
ret
push
xlat
inc
lods
push
pop
jle
sbb
aaa
imul
sub
xchg
rcr
inc
push
int3
je
ins
rol
lods
mov
test
stc
inc
inc
cmp
mov
stos
xor
mov
jbe
addr16
cwde
and
and
push
jns
jmp
sbb
dec
add
dec
ins
adc
xchg
jl
inc
xchg
je
pop
out
cld
xchg
fs
and
sub
rcl
inc
mov
push
stos
inc
loopne
out
push
in
fs
sub
je
sar
scas
cmp
mov
adc
sub
out
aam
lea
xchg
xor
cli
add
mov
jnp
dec
jae
loopne
cmp
test
fadd
pop
push
fst
and
mov
ds
retf
push
dec
mov
lods
jo
cmp
ror
sbb
sbb
xor
dec
stos
ficomp
jge
scas
xchg
jg
mov
arpl
aaa
outs
pop
out
popf
dec
lahf
data16
jle
sbb
(bad)
sub
cmp
sbb
add
or
in
in
loopne
std
pop
retf
outs
sbb
or
shl
mov
neg
mov
xor
adc
inc
(bad)
test
fisttp
xchg
shl
test
jnp
div
sub
add
sbb
in
xor
mov
xchg
imul
dec
sbb
dec
ds
mov
mov
sub
lods
fadd
popa
xlat
add
sub
or
sti
pop
stos
dec
mov
adc
aaa
test
push
jne
xor
es
mov
inc
outs
adc
mov
loope
loope
pop
adc
adc
push
ins
test
call
cmc
xor
xchg
dec
xor
mov
mov
cmp
nop
mov
sbb
ret
mov
jl
retf
test
cmp
or
xchg
sub
(bad)
mov
mov
mov
push
inc
div
jmp
pop
mov
out
sbb
sub
in
fisub
(bad)
daa
xchg
or
pop
pop
mov
shr
jns
fstp
movs
sbb
(bad)
sub
mov
add
cwde
add
push
mov
shl
fist
jle
in
mov
aad
jge
scas
push
mov
aam
mov
loopne
xor
cmp
test
scas
hlt
jmp
push
xchg
pcmpgtw
arpl
sahf
repnz
inc
sub
call
adc
sub
inc
fsubp
mov
icebp
sub
and
jne
je
push
arpl
add
mov
nop
(bad)
sar
rcl
aam
cmp
sbb
mov
inc
push
fild
in
loopne
call
or
push
mov
inc
sbb
xor
in
or
mov
mov
test
aam
sub
cwde
push
imul
pusha
stos
xchg
xor
xchg
mov
jge
push
(bad)
mov
sub
into
imul
psubd
sbb
jg
call
adc
inc
mov
mov
and
push
push
or
jno
mov
out
mov
mov
mov
xchg
movs
push
xor
inc
cmp
push
out
fs
jo
push
fimul
lahf
mov
xchg
jo
cmp
or
aaa
xor
adc
loopne
repnz
iret
xchg
sub
jo
test
push
pop
inc
xlat
jo
lods
int
rol
(bad)
push
inc
cmp
rol
dec
and
pop
lock
out
xchg
pop
rcr
fcomp
test
mov
int3
sub
or
xchg
movs
dec
mov
mov
cmp
scas
jno
(bad)
repnz
sbb
loopne
addr16
jmp
and
call
cmps
add
adc
fldcw
int3
mov
push
pop
lock
iret
cmp
or
sub
mov
arpl
fs
pop
inc
mov
nop
shr
xor
pop
mov
pushf
dec
mov
sbb
ins
test
call
cmc
xor
ret
cs
jnp
sbb
out
xchg
inc
aaa
(bad)
push
mov
ins
int
cmps
iret
jo
scas
mov
ins
adc
jge
adc
popf
int3
scas
dec
rcr
lods
jecxz
fsub
fmul
(bad)
push
fisttp
push
es
hlt
mov
mov
mov
sahf
xbegin
iret
mov
dec
ss
(bad)
mov
loope
mov
out
in
sub
add
nop
arpl
dec
add
stc
sub
mov
xchg
stos
arpl
sub
xchg
jno
pop
xchg
sub
es
das
push
adc
repnz
push
into
fucom
sbb
mov
sbb
jne
adc
push
arpl
mov
stos
mov
inc
add
push
fild
imul
dec
int
mov
pop
cmps
ins
jnp
inc
jno
leave
dec
lea
bound
dec
mov
xchg
popa
lods
sbb
leave
out
nop
push
push
adc
xlat
in
push
shl
jmp
mov
mov
fldcw
jge
xchg
xor
stc
retf
repnz
ja
xchg
gs
fstp
jbe
mov
xchg
xlat
imul
out
or
ins
rcr
sar
in
push
test
loope
scas
stos
adc
cwde
std
inc
movs
dec
cmps
jbe
sbb
dec
mov
fwait
sbb
lea
jp
sub
outs
mov
mov
sub
data16
or
enter
push
cmp
outs
xchg
ret
data16
nop
fs
(bad)
mov
push
jne
or
cld
push
out
jmp
or
sub
pop
cmps
adc
xchg
mov
pop
push
xchg
xchg
inc
xor
cmp
cmp
adc
pop
jmp
xchg
aad
bound
sub
mov
mov
sbb
call
clc
sub
es
ds
cmp
(bad)
cmps
sbb
adc
leave
push
lods
daa
xor
daa
or
je
popf
or
and
dec
stos
jae
pop
aam
add
int
mov
fisttp
test
into
push
scas
sub
lds
movs
test
nop
inc
faddp
loopne
pop
cmp
ins
jecxz
adc
ret
xchg
dec
das
call
cmc
inc
stos
fnsave
in
stos
in
ins
jbe
cmp
out
push
cmp
xor
pop
in
mov
popa
das
lods
fmul
into
push
sub
cli
retf
sub
add
aas
ss
and
mov
adc
push
lods
arpl
push
adc
add
je
mov
lods
inc
out
mov
add
push
cld
out
inc
sub
ret
ret
add
jecxz
dec
shl
call
add
cmp
sub
jmp
sub
jecxz
gs
adc
call
test
loop
enter
lock
sub
jo
fcmovbe
push
les
mov
out
xor
dec
push
jb
add
add
dec
or
dec
mov
adc
imul
sub
leave
push
jp
sub
xchg
mov
mov
sbb
mov
jo
sar
and
loop
cmp
jbe
jmp
lods
jbe
jl
movs
adc
push
add
push
add
cmc
cmp
push
aam
adc
add
scas
cmc
push
call
jbe
lods
pushf
addr16
dec
lods
mov
sbb
mov
dec
mov
fdivr
pop
and
int
mov
clc
ret
sbb
dec
push
cwde
imul
outs
sub
sub
pop
cmps
mov
mov
cmp
ror
push
pop
mov
mov
sti
pop
retf
pop
adc
add
pop
movs
les
xchg
push
ud1
jl
stos
repnz
mov
mov
and
adc
inc
jno
(bad)
outs
stos
fwait
repz
int
leave
outs
mov
mov
cmp
cld
and
or
jl
push
pop
push
push
adc
adc
xchg
shr
jno
pop
inc
pop
(bad)
call
and
jmp
(bad)
scas
dec
pushf
cmps
lods
add
movs
loop
mov
cmp
ins
adc
sub
xchg
aam
cmp
adc
lea
push
inc
dec
sbb
stos
ja
xchg
pop
mov
pusha
or
out
mov
cmp
(bad)
dec
jae
fdiv
leave
adc
sbb
pop
inc
lods
adc
inc
fisttp
and
shl
dec
and
ret
fld
ror
cld
nop
es
xchg
outs
xchg
sbb
fs
sub
enter
int
and
ret
mov
stos
mov
mov
pop
scas
mov
inc
ja
cmp
jge
xchg
mov
pop
(bad)
imul
pop
xor
jo
lea
shl
loop
sbb
sub
sub
mov
pop
into
xor
xor
mov
xchg
cwde
xchg
mov
push
fdivr
cmp
mov
mov
jmp
stos
(bad)
pop
inc
adc
jmp
loop
sub
shr
jle
dec
out
shr
and
loop
jno
cmp
mov
mov
or
sbb
(bad)
rcl
arpl
push
cdq
cmp
push
ja
adc
int
mov
inc
imul
sub
loope
scas
add
sbb
sahf
or
ds
cdq
repz
aam
or
or
or
or
addr16
(bad)
aam
ss
ss
mov
push
and
sub
ins
adc
stos
mov
ret
xchg
sub
cmp
shl
jmp
cmp
js
jl
inc
sub
lods
mov
int
cmp
call
(bad)
pop
pop
retf
cmps
mov
sahf
bound
jnp
dec
pop
sub
sbb
movs
inc
leave
test
xchg
pop
sbb
sub
je
in
cli
sysexit
lahf
cmp
xor
lods
and
push
push
iret
mov
in
pop
push
xor
call
in
movs
arpl
(bad)
pop
out
das
jbe
jno
rol
and
push
out
pop
push
or
outs
cmps
sbb
inc
sub
cli
enter
aad
int
jle
lods
scas
xchg
fcom
fsubr
into
jno
inc
lds
inc
and
out
push
dec
cmp
add
inc
in
jle
rcr
mov
xchg
(bad)
nop
inc
call
sub
out
sbb
out
cwde
int3
push
sti
or
mov
add
pop
mov
and
int
movs
and
scas
inc
push
jecxz
mov
lods
add
fsubr
cmp
lods
fucomp
adc
jns
jbe
mov
pop
mov
inc
jae
pop
push
call
lds
add
sbb
mov
je
dec
or
int3
data16
pop
inc
mov
push
cld
adc
and
inc
cmps
cmp
xchg
sbb
fs
push
mov
inc
in
scas
(bad)
repnz
push
dec
add
adc
outs
loop
push
push
adc
mov
xor
test
inc
stos
fadd
ror
cs
dec
push
push
or
ss
ins
push
mov
arpl
loope
pop
mov
idiv
sub
pop
(bad)
sbb
icebp
rcl
scas
pop
daa
fild
ss
scas
cmp
and
pop
xor
dec
aad
mov
pop
add
ins
cmp
jnp
sahf
pop
inc
mov
sub
pop
ja
xchg
dec
mov
add
rol
das
xor
gs
mov
xchg
mov
fdivr
jmp
or
inc
xor
xchg
mov
jmp
mov
out
movs
sbb
mov
test
jo
mov
and
push
add
sti
rol
push
adc
lock
mov
and
inc
mov
adc
push
lds
cld
sub
retf
push
add
push
pop
and
mov
xlat
rol
xor
out
out
adc
mov
adc
shr
retf
mov
and
call
mov
jmp
fnstcw
mov
pop
cmp
sbb
dec
pop
inc
and
cmps
pop
mov
ja
rol
iret
xchg
outs
stos
sbb
pavgb
push
retf
and
test
or
cmp
lods
(bad)
mov
lods
sub
pop
rcr
mov
imul
imul
add
xor
pop
xor
mov
sub
ins
sbb
mov
jno
adc
sbb
arpl
add
ret
mov
jmp
xchg
mov
mov
xor
and
shr
cwde
rol
inc
mov
cwde
je
mov
or
jnp
jmp
fs
call
or
shr
xchg
retf
adc
aad
das
jno
push
movs
lea
pop
movs
leave
test
cli
inc
pop
adc
and
adc
or
or
and
in
xor
adc
inc
and
inc
(bad)
inc
call
cmc
inc
and
out
sub
xchg
dec
and
or
push
outs
push
xchg
enter
shr
test
sbb
cmp
std
daa
ins
add
retf
lods
into
ror
cs
xor
mov
(bad)
jae
stc
retf
lods
mov
(bad)
xlat
pop
not
neg
add
sub
inc
sub
lods
pop
(bad)
xchg
adc
rcr
add
pop
push
in
jg
pop
jmp
inc
mov
imul
(bad)
in
inc
or
push
stc
mov
xchg
lea
sbb
imul
movs
push
aaa
ds
mov
rcl
add
add
fwait
mov
push
cmps
pop
xchg
mov
shl
fs
inc
int
and
adc
push
jne
imul
loopne
aad
adc
std
leave
test
int
pusha
xchg
sub
dec
add
fdiv
sub
xchg
push
push
pop
mov
xchg
mov
cmp
xor
jns
aam
push
push
dec
pop
popa
inc
outs
js
mov
rcr
ja
call
hlt
mov
mov
out
add
ins
cmp
repz
jae
test
mov
or
jl
movs
rcr
mov
mov
push
sbb
aas
inc
stc
inc
push
leave
jns
es
add
xchg
pop
inc
pop
outs
pop
sbb
aaa
pop
and
mov
ins
push
inc
mov
xor
dec
jmp
leave
push
add
mov
adc
lods
push
rcl
sub
enter
add
in
xchg
add
inc
and
push
mov
out
dec
out
xor
popf
mov
lock
call
loopne
inc
xor
or
jne
cmp
sub
(bad)
(bad)
dec
popf
xor
sub
adc
stos
fild
mov
lock
or
xor
pop
rol
ffreep
(bad)
push
stos
and
mov
and
sub
add
mov
xlat
sub
jae
enter
push
xlat
mov
cmp
mov
mov
fsub
add
jno
pusha
mov
add
xor
xor
imul
lods
cmp
or
push
int
mov
clc
or
xchg
jo
lea
stos
fisub
xor
pusha
jb
or
jne
pop
ja
xor
int3
sub
fwait
push
out
jbe
cmp
xchg
aaa
push
div
xchg
test
stos
add
lahf
xchg
mov
add
jno
add
sbb
in
pop
push
outs
out
popa
push
outs
inc
inc
arpl
and
cmp
mov
mov
sub
retf
mov
popf
add
pop
mov
cwde
xchg
test
sbb
div
addr16
(bad)
mov
imul
repnz
loop
cmp
jle
lahf
aad
(bad)
enter
stos
fstp
lock
dec
shl
mov
add
mov
imul
dec
inc
arpl
fidiv
ret
lds
cmp
cmps
xor
xor
add
sahf
cmp
or
pop
cmps
imul
loop
mov
in
aaa
adc
setns
add
popf
gs
enter
idiv
jae
sbb
cmps
cs
mov
repnz
mov
dec
jb
cmp
inc
int
xchg
xchg
cmps
jb
in
ja
loope
push
mov
or
in
lock
jne
inc
sbb
fst
sub
test
jb
mov
das
or
jae
jecxz
pop
sub
xchg
mov
adc
add
inc
xchg
js
inc
fsub
mov
pop
sbb
and
cmp
aad
xchg
nop
setb
fscale
outs
enter
cmp
popf
gs
mov
jle
adc
mov
stos
fbld
xor
mov
je
and
pop
mov
imul
sbb
mov
(bad)
ins
xor
loop
les
inc
imul
test
pop
pop
pushf
push
jbe
add
in
ja
and
mov
or
clc
and
les
(bad)
xchg
and
popa
mov
mov
xchg
iret
jns
mov
and
cmp
inc
adc
fs
add
fild
jecxz
or
sahf
adc
add
cmp
dec
mov
popa
scas
out
sub
cvtpi2ps
mov
sahf
call
jmp
mov
dec
jns
mov
or
test
and
adc
(bad)
shl
xor
popa
fsubr
mov
(bad)
pop
arpl
dec
fnstsw
nop
out
fisubr
lahf
int3
inc
aaa
xlat
push
and
inc
jno
rol
(bad)
out
sti
xchg
into
stos
(bad)
enter
mov
jnp
push
imul
test
(bad)
cmc
push
ret
inc
push
pop
fcmovnu
cld
dec
pop
xchg
inc
imul
cld
aad
jnp
pop
cmps
xchg
mov
mov
sbb
mov
sar
in
mov
ficomp
sbb
(bad)
fistp
in
fcomip
shl
pop
mov
mov
cmp
mov
hlt
sbb
adc
fdiv
cwde
ins
repnz
inc
imul
scas
shr
retf
mov
sbb
xlat
repnz
or
shl
ins
mov
dec
cwde
jo
inc
ret
mov
jg
mov
imul
(bad)
repnz
int
push
xchg
and
ss
inc
adc
hlt
push
mov
dec
jg
nop
jg
adc
fmul
(bad)
adc
pop
pusha
add
add
nop
into
in
dec
icebp
sub
stos
fst
add
dec
scas
ins
(bad)
retf
leave
cmp
xchg
cli
add
imul
jb
jnp
imul
cs
and
(bad)
jge
das
les
cmps
gs
cmp
lock
adc
mov
mov
mov
pop
fdivr
jo
(bad)
out
pop
retf
ret
movs
mov
mov
or
mov
xchg
push
rcr
push
loop
cmp
es
fwait
dec
call
cwde
and
xor
enter
ds
fisubr
cmp
sbb
aas
rcl
pusha
jae
rcr
cmp
hlt
sahf
stos
hlt
popf
mov
xchg
push
jne
fwait
ins
lods
lds
inc
xor
pop
loop
int3
add
xor
imul
pop
sbb
jo
jle
aad
ret
mov
pop
inc
jmp
movs
adc
adc
test
fld
lds
(bad)
aaa
imul
mov
xor
cld
sub
rcl
daa
add
inc
sub
out
add
jo
dec
and
jae
dec
cld
push
pop
add
cmp
jne
call
in
mov
or
mov
xchg
sub
cld
out
call
pop
cmp
dec
test
mov
adc
inc
mov
loopne
addr16
shr
cdq
and
fdiv
mul
adc
les
repnz
scas
aam
xchg
dec
jns
adc
mov
push
lahf
and
pop
sub
mov
lock
and
aad
xor
retf
pop
in
xchg
mov
pop
xchg
push
movs
xor
or
pop
cs
ret
mov
shl
mov
stc
push
lods
dec
(bad)
push
retf
push
dec
adc
(bad)
shl
xor
push
dec
(bad)
in
popa
push
sub
test
and
iret
push
imul
out
push
mov
mov
mov
push
(bad)
sbb
lea
ins
stos
jb
lods
imul
jno
add
std
aaa
shl
fst
in
test
jne
pusha
lock
cld
push
jg
inc
mov
movs
add
js
daa
jno
mov
jmp
pop
ds
faddp
(bad)
outs
not
sbb
clc
adc
stos
dec
mov
stc
dec
call
adc
ss
loop
pop
ret
shr
mov
sbb
and
imul
cs
lods
js
nop
or
push
outs
(bad)
cmps
and
mov
add
in
out
jnp
xor
sub
jecxz
bnd
das
xchg
into
fcomp
into
pushf
inc
push
sbb
fdivr
push
xchg
or
xor
(bad)
mov
(bad)
fs
sbb
mov
arpl
popa
in
cs
adc
in
sub
add
push
or
adc
fcom
(bad)
or
xor
leave
sub
mov
std
aad
(bad)
xchg
jp
cmps
mov
in
push
arpl
aaa
jae
fstp
mov
jbe
ret
mov
pop
ja
cdq
push
out
out
xor
dec
into
xor
fisubr
in
scas
push
aam
sub
je
ret
mov
jp
jmp
jnp
mov
int
stos
sub
ds
dec
std
sbb
aam
retf
jnp
leave
mov
mov
inc
push
mov
xchg
jne
cld
sbb
adc
(bad)
aam
aaa
xor
sub
stc
scas
enter
mov
sbb
add
add
sub
lea
aam
xchg
mov
test
or
sar
mov
jmp
je
in
dec
jne
(bad)
(bad)
lahf
xchg
out
test
fisttp
mov
xchg
out
inc
push
mov
xchg
sub
shl
pushf
mov
jb
push
mov
nop
(bad)
mov
xor
mov
xchg
push
addr16
cmp
(bad)
gs
cmp
fldcw
je
sbb
or
cmps
cmp
xchg
(bad)
add
stos
pcmpeqw
xchg
and
or
test
add
dec
inc
imul
cmp
mov
cmp
imul
mov
jo
fldcw
cmp
sub
add
(bad)
cmp
shr
ins
add
or
fcomp
aam
inc
test
sub
push
in
and
inc
(bad)
js
es
cmp
mov
mov
jno
rcl
mov
add
jge
xor
mov
retf
lods
aad
(bad)
imul
hlt
mov
inc
repz
xchg
inc
mov
cmp
mov
rol
repnz
sub
into
mov
jne
mov
ror
das
jge
test
mov
mov
ss
xor
mov
inc
mov
mov
lea
test
mov
(bad)
jb
mov
imul
cmps
sbb
test
ss
div
xor
add
retf
and
sub
shl
in
sub
or
ja
(bad)
sar
paddusw
xor
ret
test
call
pop
stos
in
mov
outs
test
repz
mov
xor
jo
loop
sub
fcomp
ins
fld
rol
ds
rcr
jmp
and
(bad)
movs
cmps
mov
test
jne
scas
or
lahf
mov
and
mov
retf
daa
imul
js
cdq
mov
push
sbb
shl
sub
ja
pop
inc
hlt
fisttp
mov
adc
dec
ret
dec
retf
test
fimul
test
xchg
mov
mov
loopne
aas
adc
jl
aaa
xchg
imul
add
sbb
push
sub
xor
mov
in
ror
add
pop
adc
addr16
cmp
pop
call
jns
retf
pop
mov
ins
test
scas
adc
stos
arpl
mov
stos
jb
aad
enter
popf
add
adc
fild
cmp
rcl
push
mov
mov
jp
mov
mov
ret
push
cdq
iret
and
adc
jo
add
rol
adc
stos
jae
dec
aad
out
and
sbb
je
leave
inc
mov
push
xor
mov
outs
pop
xchg
push
out
adc
dec
(bad)
sub
inc
mov
and
mov
adc
loopne
shl
fst
lds
pop
jnp
mov
(bad)
(bad)
loope
arpl
adc
int
xchg
mov
dec
and
popa
jg
aad
aaa
sub
add
or
sub
pop
add
push
ret
mov
jae
(bad)
rcr
add
sti
lahf
stc
dec
mov
sti
xchg
dec
or
retf
mov
sbb
ror
dec
out
xchg
fistp
jle
(bad)
rcl
inc
xor
loop
inc
(bad)
jns
aaa
push
(bad)
mov
mov
push
cmp
push
add
xchg
mov
pop
mov
fucomi
popa
imul
mov
popa
adc
aas
fidivr
test
xchg
dec
repnz
nop
sti
pop
push
xlat
push
fnstenv
inc
in
cmp
jmp
pusha
sbb
mov
es
pop
inc
test
sbb
or
sbb
push
(bad)
call
(bad)
sbb
mov
std
add
sti
cmp
xchg
and
out
lds
jae
sub
es
fnsetpm(287
add
dec
push
lods
(bad)
cwde
mov
pop
popa
lds
in
mov
dec
cmp
xchg
xchg
mov
jp
push
retf
call
(bad)
imul
out
hlt
out
push
xor
dec
shl
mov
push
nop
push
pop
sub
cmps
mov
nop
inc
clc
mov
popf
out
out
ret
enter
lock
cmp
pop
pop
or
xchg
jmp
lods
ficom
adc
std
pusha
sbb
mov
mov
adc
inc
push
(bad)
leave
mov
mov
jnp
mov
dec
pushf
inc
push
mov
mov
je
mov
or
jns
cdq
add
lods
imul
stc
cmps
xchg
frstor
mov
jecxz
in
ins
dec
cmp
push
dec
or
push
cdq
popf
cdq
mov
xchg
loop
gs
aas
inc
pop
mov
jl
push
and
mov
push
mov
aad
or
add
mov
dec
sbb
pop
idiv
call
pop
(bad)
stc
daa
add
inc
add
mov
sbb
popa
and
and
test
movs
sub
mov
push
mov
xchg
jns
icebp
mov
dec
jo
nop
stos
push
pop
cdq
push
cdq
dec
and
mov
pushf
stc
pop
js
xor
pop
jo
xchg
out
shl
adc
xlat
inc
movs
push
dec
daa
push
retf
dec
popf
cld
push
test
mov
movs
cwde
mov
xchg
sub
push
push
jns
rcl
and
bound
(bad)
cmc
inc
stos
in
push
lahf
xchg
cmp
pop
loopne
cmp
adc
mov
jge
in
sub
js
xor
test
imul
mov
fstp
inc
pop
int3
into
enter
mov
outs
gs
in
cmp
push
jno
popa
mov
push
rcl
cmp
imul
push
loope
mov
stos
or
adc
mov
jmp
scas
mov
jne
add
stc
pop
mov
les
outs
nop
cmp
and
mov
xor
jne
mov
push
jne
cmp
mov
lock
aam
adc
hlt
(bad)
(bad)
add
inc
(bad)
gs
cmp
jnp
sti
pop
mov
xor
mov
cli
dec
dec
imul
jae
or
in
pop
je
stc
and
iret
ror
sar
hlt
arpl
jnp
mov
shr
sahf
out
iret
inc
gs
sbb
iret
out
adc
xor
mov
into
imul
add
xor
jecxz
cmp
les
test
mov
es
loop
in
test
or
mov
pop
jg
call
stos
add
sub
mov
inc
sub
push
clc
out
jns
iret
mov
and
lea
std
and
js
retf
jne
push
stos
pop
xlat
aam
fcom
(bad)
js
mov
adc
cs
push
bound
sbb
push
mov
fdecstp
sbb
mov
enter
mov
xchg
and
adc
icebp
pop
sti
call
int
mov
ins
xchg
pop
xor
xchg
jge
data16
repnz
out
pusha
cmp
shl
fisttp
imul
jbe
pop
(bad)
fnstsw
fdiv
sbb
pop
cmp
push
sub
repnz
and
je
jno
mov
popf
mov
xor
sbb
mov
out
call
in
setb
fld
lahf
mov
add
pop
inc
xor
popa
cmp
and
or
or
xchg
nop
jmp
pushf
hlt
stos
(bad)
bound
loop
loop
xchg
sti
call
mov
fidiv
ins
call
fcom
sar
add
mov
adc
push
es
je
test
shl
jmp
jl
loop
adc
imul
jg
test
adc
lods
movs
pop
stos
mov
inc
pusha
in
and
or
mov
mov
jp
and
push
push
cmp
add
loopne
sbb
out
mov
sbb
into
or
sahf
rcr
mov
push
add
jmp
sbb
leave
xchg
xchg
inc
and
cmc
xor
sub
ss
and
jns
cli
fs
jae
mov
xchg
inc
outs
mov
cmp
lock
int3
ret
cmps
(bad)
cmp
repz
fs
push
mov
add
out
aad
repz
xlat
push
pop
mov
inc
in
(bad)
je
xor
or
or
jg
inc
dec
xor
pop
test
enter
sbb
cs
xlat
pop
inc
jo
adc
pusha
inc
fild
mov
pop
hlt
jbe
enter
lahf
sub
iret
mov
cmp
xor
out
outs
out
dec
test
add
repnz
call
xor
xor
(bad)
pop
adc
ja
test
mov
movs
inc
or
dec
test
xchg
mov
(bad)
pop
scas
test
dec
dec
dec
mov
test
sbb
addr16
push
lods
cmp
movs
jo
sbb
loopne
(bad)
dec
adc
push
jno
pop
jmp
push
sahf
fsubr
enter
sbb
sbb
dec
in
fldcw
fneni(8087
inc
stos
dec
ret
push
or
int3
fidivr
mov
sbb
and
ins
out
add
(bad)
mov
mov
repz
cmp
mov
aas
call
xchg
mov
mov
test
ins
mov
xchg
loop
cs
imul
mov
cmp
imul
jno
je
xchg
(bad)
in
push
popa
pop
sti
sbb
or
sub
cmp
xor
daa
mov
or
sar
sub
or
mov
cmp
test
mov
pop
imul
adc
mov
clc
lea
rcr
push
call
loop
xchg
mov
sbb
mov
pop
sahf
push
cmps
and
dec
cli
lods
mov
outs
mov
fld
xor
scas
movs
in
adc
jmp
ins
mov
or
add
mov
das
jo
mov
sbb
pop
out
xor
cmp
movs
push
xchg
xchg
mov
fdivr
and
or
xor
sub
test
sbb
scas
cli
or
jno
lea
ja
std
push
cmps
cmp
sub
mov
xor
push
ret
arpl
push
and
or
mov
loope
lods
test
dec
fistp
xor
mov
dec
dec
ror
or
pop
inc
ss
loopne
fld
cmp
scas
xor
std
mov
mov
or
daa
ficom
loop
adc
add
mov
imul
stos
mov
cld
inc
jecxz
pop
test
test
or
pushf
sub
and
jo
sub
mov
and
or
fadd
test
cwde
test
jmp
dec
or
rcl
mov
fild
push
scas
es
(bad)
lock
jno
lods
in
or
jno
mov
jno
lods
ins
dec
adc
cmp
sti
cmp
dec
push
scas
mov
mov
fstp
rcl
enter
sbb
mov
jno
mov
add
push
and
dec
rol
test
ror
lock
and
dec
ror
rcl
dec
jmp
mov
das
dec
daa
adc
mov
add
adc
dec
or
inc
xchg
dec
and
inc
(bad)
fld
clc
push
dec
add
push
adc
nop
push
add
or
add
popa
xor
sbb
jb
add
ins
je
add
add
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
fild
inc
add
push
push
pop
push
add
or
or
or
or
sbb
adc
adc
sbb
push
sbb
and
daa
and
sub
sbb
sub
sub
xor
xor
daa
cmp
xor
(bad)
fild
inc
add
or
or
or
or
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
or
add
add
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
mov
fimul
in
in
mov
in
jecxz
dec
dec
dec
pop
pop
xchg
and
bound
das
sahf
xchg
das
in
cwde
hlt
mov
sahf
jnp
and
(bad)
mov
loope
inc
sbb
push
sbb
aas
ss
cwde
cld
imul
add
shl
std
hlt
imul
retf
dec
pop
movs
jae
js
dec
inc
fist
sar
xor
shr
in
movs
mov
and
daa
and
pushf
adc
cdq
repnz
call
mov
ins
outs
ins
inc
stos
add
xor
push
jo
fmul
add
ins
pop
dec
mov
aam
daa
sub
pop
leave
adc
retf
xor
les
cmp
jg
push
mov
cld
xchg
neg
imul
scas
ss
mov
adc
(bad)
jns
int
fidiv
aaa
push
call
pop
shr
stos
ret
test
dec
in
fld
cdq
in
or
mov
and
jmp
push
mov
mov
mov
imul
jo
ror
jne
ss
loop
jnp
inc
ror
in
shl
xchg
gs
data16
add
xchg
sub
push
sti
dec
cmp
jecxz
cld
xor
not
scas
xor
sahf
(bad)
out
xor
sub
shl
daa
cmp
mov
repz
xor
sub
mov
out
adc
cmp
adc
test
and
lock
add
dec
jg
outs
test
adc
mov
mov
stc
dec
mov
jmp
mov
aad
iret
cmps
faddp
addr16
mov
inc
aaa
sbb
retf
frstor
adc
(bad)
dec
aad
inc
test
push
(bad)
fcom
pop
dec
mov
xchg
and
jae
cwde
jmp
lahf
cmp
pop
and
cs
lea
lea
mov
fs
out
fwait
jge
cmps
dec
test
ror
and
enter
and
pop
pop
jns
cmps
les
xor
fisub
int3
jge
xchg
rcl
lods
ja
mov
mov
sbb
idiv
aaa
xor
es
jbe
cmp
add
cli
push
push
pop
add
mov
and
mov
push
lock
and
jb
(bad)
mov
add
xchg
retf
jne
ficomp
lea
xor
mov
xchg
mov
jmp
leave
out
and
cmp
(bad)
inc
(bad)
movs
lds
sti
aas
out
jno
mov
mov
xor
cmp
out
jne
add
push
jbe
popa
mov
(bad)
in
jae
and
mov
cmps
lock
jecxz
jp
lods
jo
pop
(bad)
sbb
jp
cld
jp
mov
fiadd
js
sahf
sub
xchg
dec
dec
adc
mov
push
je
sub
sbb
pop
imul
xchg
push
sub
jno
in
jecxz
pop
aaa
mov
popa
xor
in
nop
in
jp
and
aam
jp
fwait
test
pop
pop
fldcw
xchg
xor
ds
cwde
loope
pop
mov
in
push
mov
inc
jmp
cmp
pop
pop
fsubr
xor
cmp
sbb
mov
and
int3
xchg
inc
xor
and
xor
shr
xor
cmp
dec
pop
pop
mov
shl
(bad)
test
int3
push
inc
add
ror
repz
aad
frstor
scas
xor
inc
sar
add
retf
sub
sbb
pop
push
loop
das
sbb
dec
add
out
fwait
cmps
mov
adc
test
bound
ja
mov
ds
pop
dec
ds
cmc
mov
cmp
pop
lds
repnz
xor
and
pop
pop
inc
mov
fst
jns
inc
rcr
push
mov
sub
aam
sbb
push
ss
push
cdq
jbe
leave
outs
cwde
adc
and
inc
mov
mov
mov
cwde
and
loop
mov
call
or
adc
and
lahf
xchg
dec
leave
jecxz
mov
mov
xor
inc
cdq
ja
mov
jmp
push
xor
inc
lea
mov
sbb
cmp
and
out
or
jp
mov
cmps
retf
xor
add
or
mov
mov
push
xchg
addr16
aas
pop
xlat
xor
cwde
lods
ins
in
hlt
rol
pop
ins
(bad)
fld
mov
mov
mov
sub
sar
imul
pop
dec
mov
jb
adc
cmp
dec
push
lock
imul
call
div
mov
adc
sbb
pop
adc
sbb
lahf
paddb
pop
pop
lods
xchg
fistp
shl
cmp
and
or
jne
mov
frstor
into
mov
sti
push
(bad)
int
inc
and
pop
sub
or
aas
xor
cmp
cmps
pop
js
inc
mov
jnp
popf
addr16
xchg
and
sahf
sbb
xchg
pop
pop
(bad)
push
dec
xchg
nop
pop
add
cmp
clc
cmps
sar
repnz
in
cmc
je
push
(bad)
mov
xchg
ja
xchg
xlat
or
add
cmp
jmp
clc
mov
les
xor
cdq
cmc
outs
in
iret
in
out
(bad)
or
push
fbstp
add
retf
mov
jno
push
sub
cs
dec
mov
test
push
jmp
mov
rol
adc
push
movs
mov
bound
jo
push
jmp
xor
scas
movs
lods
(bad)
dec
mov
mov
hlt
aam
bound
xchg
nop
add
dec
lods
sub
add
jns
pop
ret
ds
jl
imul
lds
inc
sub
adc
inc
sbb
mov
and
xor
test
cli
pop
fnstcw
fcomip
mov
iret
shl
mov
imul
in
(bad)
pop
aas
fwait
pushf
jge
in
jmp
fistp
out
dec
loope
outs
mov
cwde
neg
cmc
sub
lahf
sbb
and
lahf
nop
repnz
gs
scas
(bad)
fcomp
xchg
in
popf
in
mov
in
cmp
lahf
ins
pusha
loopne
inc
sbb
jmp
mov
outs
mov
cmp
popa
add
arpl
shl
lods
cmps
ret
stos
inc
movs
retf
test
mov
cmps
push
sub
jl
enter
jae
sub
cmc
sub
sbb
dec
mov
in
(bad)
pusha
movs
retf
sbb
ja
cmp
leave
test
push
xor
cmp
stos
retf
loop
ret
cli
jge
cmps
imul
mov
mov
mov
cmp
xchg
lea
jbe
jmp
inc
shl
cs
inc
mov
(bad)
sar
mov
add
dec
mov
jb
push
ins
push
jbe
cmps
dec
(bad)
inc
xchg
mov
pop
test
xchg
push
add
clc
cld
cmp
loope
shr
sbb
jmp
cmp
mov
stos
out
iret
retf
adc
daa
test
and
addr16
jb
xchg
lahf
fidiv
mov
sub
xor
xchg
mov
and
call
aam
mov
pop
movs
cmps
faddp
sub
in
pop
out
mov
dec
mov
enter
mov
pop
jmp
gs
pop
iret
push
gs
mov
sbb
xchg
cmp
jge
movs
jae
pop
shl
cli
shr
scas
outs
jle
sub
inc
repz
cmps
gs
movs
fwait
mov
push
sub
or
popf
lods
mov
mov
scas
and
mov
dec
mov
iret
fdiv
stc
ret
js
or
fadd
retf
aam
push
repz
xchg
shl
pusha
or
addr16
mov
add
(bad)
scas
and
mov
sahf
in
lods
repz
inc
jb
ds
sbb
lods
pop
repnz
pop
mov
lods
mov
cmp
xchg
inc
cs
mov
cmps
frstor
adc
mov
aaa
mov
add
jl
imul
adc
jmp
mov
jg
mov
inc
addr16
sub
out
enter
retf
cmp
(bad)
or
jo
int
ins
scas
outs
dec
test
push
mov
pop
out
and
pop
call
jmp
cmps
xchg
test
mov
dec
sbb
retf
sub
adc
push
inc
jp
loope
lock
xchg
push
cmc
cld
push
cs
mov
shl
cmps
outs
fst
ret
imul
(bad)
pushf
mov
sbb
jecxz
mov
xchg
jmp
cld
cwde
movs
jnp
daa
es
mov
loopne
mov
dec
aas
sti
dec
sti
xor
idiv
mov
retf
out
(bad)
test
push
clc
stos
fcomip
xchg
push
fstp
fiadd
xchg
idiv
mov
aam
scas
cmp
add
mov
clc
dec
inc
mov
mov
aad
xchg
mov
fnstenv
cmps
fnstsw
jmp
xor
jmp
jg
cwde
cdq
and
inc
jl
fnstsw
fsincos
(bad)
add
mov
mov
xchg
push
xor
popf
xlat
imul
pushf
or
push
mov
mov
dec
xchg
push
xor
sbb
jae
lods
pushf
xor
cmp
sar
dec
pop
push
mov
sbb
inc
mov
or
mov
mov
or
sbb
mov
popf
adc
cmp
mov
stos
fsub
loopne
faddp
and
aaa
pusha
xchg
xor
cmps
jmp
imul
jg
inc
or
jecxz
sbb
sahf
fistp
movs
push
in
vmovdqu
jns
sub
dec
in
les
sub
xchg
sbb
xlat
xchg
(bad)
aad
cmp
adc
jne
repnz
mov
mov
ffree
stc
dec
sub
add
int
xchg
push
icebp
mov
push
sub
into
push
imul
es
pop
sbb
mov
hlt
cmp
les
fcmovu
mov
mov
dec
mov
pop
call
push
pushf
xchg
sar
shr
xchg
cmps
lea
lea
cmps
mov
sbb
mov
jmp
sub
mov
add
pop
fwait
scas
pop
dec
cmps
cmp
or
das
or
adc
add
and
pop
mov
mov
addr16
dec
sub
retf
repz
cwde
stos
push
into
jae
adc
push
inc
push
inc
or
xor
pop
pop
sub
out
mov
call
cwde
inc
inc
sub
fstp
xlat
add
repnz
cli
xor
pop
lock
popf
movs
dec
sbb
cmp
fisttp
xchg
mov
pusha
inc
pop
add
(bad)
dec
push
(bad)
pop
(bad)
and
or
fstp
clc
dec
out
inc
aaa
lea
outs
in
or
adc
sbb
jecxz
and
inc
add
mov
in
jbe
rcr
into
xlat
push
div
lds
and
and
iret
inc
shl
mov
xchg
push
mov
lods
inc
jnp
jno
cmc
daa
jne
out
adc
mov
xchg
ins
push
popf
int3
inc
retf
cld
pop
movs
ss
sub
(bad)
jnp
bnd
shr
fs
add
push
jecxz
dec
jp
jge
ret
jbe
ficom
sbb
xchg
imul
or
xchg
xor
mov
sar
loopne
push
les
mov
jae
ins
mov
or
pusha
dec
xchg
pushf
sub
and
cmp
jp
fwait
test
pop
pop
fldcw
xchg
xor
ds
cwde
loope
pop
mov
in
push
mov
inc
jmp
retf
mov
(bad)
adc
cmps
push
sbb
sar
pop
and
cmp
mov
pop
(bad)
stos
push
mov
pop
mov
add
add
stos
mov
xchg
int3
sbb
fmul
dec
cmp
int
xchg
stos
arpl
and
and
add
dec
loope
push
sub
in
cmc
cmp
out
sub
loopne
mov
cmp
add
or
or
cmp
pop
mov
cmp
mov
or
dec
movs
inc
(bad)
push
scas
or
mov
dec
fwait
mov
mov
dec
hlt
call
sbb
or
push
hlt
push
mov
dec
sbb
cmps
cmps
sub
dec
pop
jb
jecxz
pop
fidiv
call
jecxz
inc
nop
mov
jp
dec
jmp
ins
push
mov
mov
test
pop
ror
fs
daa
add
fcom
pop
movs
js
push
mov
sub
in
jmp
adc
sub
fwait
outs
rcl
mov
inc
in
push
ja
les
pop
bound
sub
pop
push
pop
call
test
xchg
ret
xchg
sti
push
lahf
sub
push
cmp
cmp
out
(bad)
ficomp
mov
or
push
adc
xchg
dec
loopne
cmp
push
mov
daa
jnp
inc
rcl
and
jns
add
in
push
or
add
aas
ret
pop
push
pop
js
dec
shl
dec
push
imul
xlat
push
inc
inc
pop
movmskps
test
or
(bad)
je
jge
push
mov
retf
push
or
call
out
mov
data16
sbb
fistp
inc
retf
addr16
popa
jne
call
(bad)
out
arpl
fbld
out
test
fdiv
cs
daa
pop
and
xor
push
jg
dec
xor
xlat
xor
and
out
test
jno
in
xchg
into
inc
shl
sbb
aad
popf
pop
push
mov
lods
out
mov
in
pop
rcl
inc
adc
fcomp
mov
ud1
movs
xchg
cwde
aam
cli
push
mov
popf
scas
pop
cs
add
(bad)
ins
cdq
adc
outs
push
pop
add
sub
gs
fild
rol
cmp
mov
in
das
xor
pop
xchg
mov
xchg
mov
xchg
xor
sbb
dec
movs
push
cmp
sti
xor
mov
icebp
leave
or
ss
push
mov
dec
lock
xchg
(bad)
test
shr
cmps
clc
inc
pop
xchg
or
enter
shl
(bad)
add
fidiv
sahf
stos
arpl
push
out
cmp
sbb
out
add
xor
mov
jp
jmp
cs
and
addr16
add
inc
lods
call
push
(bad)
hlt
jmp
pop
fadd
sub
popa
sti
inc
ret
sub
ds
add
test
jecxz
jbe
inc
repz
fsubrp
sbb
stc
jo
loop
test
out
add
mov
out
xor
retf
cmp
jmp
aad
fld
or
xchg
fcomp
sbb
sub
ret
add
test
mov
sub
ins
mov
pop
push
mov
mov
pop
dec
mov
pop
sub
sub
cdq
and
inc
test
cmp
jb
pop
cli
ja
cs
pop
dec
jno
sbb
sahf
and
add
outs
(bad)
cmp
pop
out
test
pusha
sbb
jecxz
shl
push
clc
jae
adc
dec
or
adc
pop
retf
jae
lods
popf
or
dec
out
or
add
call
mov
mov
scas
mov
repnz
jbe
xchg
lahf
cmps
js
inc
aam
dec
lea
dec
sar
jns
and
in
leave
ins
fadd
mov
test
xchg
jl
js
aam
dec
mov
and
pop
aas
(bad)
xchg
push
ss
shl
repnz
mov
pop
mov
pop
dec
(bad)
loopne
pop
sub
mov
sahf
loopne
sub
cmp
outs
fs
pushw
iret
xor
xchg
mov
sbb
mov
inc
icebp
leave
sbb
push
push
xor
and
ja
sub
xor
pusha
mov
pop
inc
xchg
or
xchg
cdq
inc
dec
enter
addr16
int
add
loope
mov
xchg
mov
int3
push
fnstsw
push
inc
enter
jmp
push
mov
or
and
or
jnp
xor
pop
lahf
int
mov
fadd
push
test
es
xor
mov
aad
jbe
js
mov
sub
inc
out
sbb
or
out
enter
repz
xchg
adc
push
xchg
addr16
push
(bad)
fisttp
in
mov
xchg
shl
inc
xchg
je
add
mov
and
cdq
or
mov
dec
outs
imul
sub
xor
cmp
dec
push
sbb
add
fstp
xor
ja
jmp
pop
test
ins
push
xor
pop
int3
mov
ja
hlt
fldcw
mov
out
xchg
(bad)
retf
stos
rol
adc
dec
sbb
lock
std
xchg
(bad)
xchg
pop
dec
nop
pop
imul
xchg
pop
cdq
and
dec
xchg
jge
push
or
out
test
pop
add
mov
fcomp
je
rcl
loop
xchg
frndint
mov
or
mov
push
popa
and
jl
fist
jmp
mov
lahf
pop
shl
or
xchg
mov
push
xor
into
inc
adc
cli
ins
lea
dec
mov
fmul
retf
and
retf
mov
ins
sbb
xchg
cld
and
out
lods
mov
movs
mov
mov
ins
imul
mov
daa
jo
and
sbb
push
aaa
fiadd
pop
loop
in
ins
and
idiv
lods
mov
fst
jns
jmp
ss
sub
mov
inc
iret
int
push
pop
cmp
add
mov
out
mov
dec
daa
xchg
jecxz
mov
pop
cdq
retf
add
adc
in
cmp
push
ds
fdivp
push
mov
sahf
in
neg
xor
lea
fs
daa
sub
shl
pop
loopne
add
or
ins
cld
cmp
daa
mov
fild
cdq
sbb
xchg
daa
adc
mov
test
(bad)
dec
cs
ret
mov
mov
aam
iret
push
shl
shl
dec
sbb
pop
xchg
cmps
fucom
xor
int3
test
ret
push
and
ret
cld
movs
test
pop
jns
inc
sbb
out
xor
xor
cmp
loopne
dec
sbb
xor
inc
adc
push
jle
test
xchg
inc
out
rol
outs
adc
mov
xchg
pop
push
xor
fdivr
pop
into
mov
add
imul
jmp
mov
or
in
icebp
les
out
sub
repnz
rol
inc
pusha
inc
in
add
idiv
dec
mov
adc
jo
and
xchg
fmul
add
and
repz
(bad)
mov
cmp
dec
xchg
fidivr
mov
pop
fst
xchg
xor
sub
jl
mov
(bad)
jo
mov
in
push
retf
and
sbb
jle
mov
clc
ror
lods
push
or
mov
lods
fcomp
pop
xchg
in
fadd
icebp
or
ret
jle
fcomip
push
call
mov
sbb
movs
rol
sbb
inc
jbe
out
cmp
ss
fwait
out
fs
ret
mov
sbb
jg
scas
mov
dec
fadd
je
repz
add
cmp
sahf
add
es
push
cdq
outs
stos
or
out
pop
fld
adc
mov
inc
in
inc
cmp
cwde
pop
xor
push
iret
loop
lods
out
push
fnstsw
stc
jg
xor
mov
jns
push
cdq
xchg
mov
mov
dec
out
lahf
adc
(bad)
push
(bad)
jne
jp
xchg
mov
imul
and
sar
or
push
fdiv
adc
push
inc
fnstcw
les
ja
add
lock
mov
std
pop
adc
fidivr
out
and
sti
ret
cmp
outs
inc
loop
xor
push
cmp
addr16
stos
cwde
and
dec
jmp
enter
out
ss
pop
xchg
mov
ds
(bad)
pop
cdq
jecxz
daa
lock
pop
jmp
mov
jecxz
push
adc
out
ret
dec
inc
ret
sub
aas
clc
inc
mov
cmp
arpl
mov
xlat
jae
and
adc
mov
mov
push
and
add
je
sahf
(bad)
dec
mov
jle
inc
mov
aas
xchg
xchg
sub
repz
in
es
mov
cmovo
jmp
(bad)
ss
xchg
fnsave
adc
in
mov
ja
pop
int3
mov
lods
(bad)
xor
lock
cmp
add
jecxz
push
sbb
fisttp
test
fs
mov
movs
mov
bound
push
(bad)
ins
xor
retf
(bad)
sub
lods
mov
aam
les
gs
test
call
mov
xchg
xlat
cmp
ins
ins
stos
mov
arpl
jl
mov
jl
mov
int
ret
adc
sahf
daa
xchg
mov
mov
xor
inc
gs
or
shl
iret
push
daa
dec
aaa
ja
pop
push
into
xchg
in
in
or
(bad)
test
or
push
push
mov
(bad)
mov
xchg
ja
sar
cmp
cs
inc
(bad)
dec
xchg
sbb
pusha
pop
out
call
sub
xor
sbb
mov
daa
test
cs
das
cdq
sbb
sub
pop
add
ss
ins
push
dec
jae
retf
mov
jbe
dec
out
xchg
xchg
mov
inc
push
jl
and
(bad)
in
leave
fsubr
push
out
sub
loop
retf
and
sti
cmp
popf
cmp
(bad)
int3
xlat
cs
loop
sbb
fcmovnu
push
in
cmps
jno
or
retf
sub
adc
adc
mov
jno
adc
mov
mov
and
push
inc
mov
cmp
(bad)
ret
xor
dec
or
fimul
retf
xchg
dec
frstor
and
or
mov
repz
xor
push
and
and
sub
xor
adc
js
iret
push
daa
mov
cmp
pop
fldcw
arpl
test
xor
xlat
jo
stc
sbb
fistp
out
iret
sahf
js
jno
jb
jo
mov
jge
imul
(bad)
into
and
mov
fdivr
sar
aaa
cs
lods
in
daa
mov
jns
dec
ja
xchg
mov
out
adc
out
xlat
adc
push
fwait
push
mov
lahf
jge
(bad)
push
into
shl
std
fcmovb
mov
or
scas
cmp
repnz
mov
ficomp
cdq
ja
and
sub
sbb
pop
lds
adc
jecxz
add
cmp
scas
cmps
mov
pop
inc
inc
dec
dec
xchg
(bad)
fs
cwde
pushf
add
int3
inc
or
shl
mov
adc
fsubr
loop
mov
imul
pop
sub
mov
jo
adc
push
mov
inc
imul
call
cwde
pop
popa
push
mov
and
ins
xlat
lahf
ret
shl
inc
jnp
xor
xchg
jae
and
mov
mov
gs
mov
sbb
add
pop
fdivr
in
ds
repnz
mov
fdiv
cwde
lods
cmp
xchg
sub
push
mov
jbe
js
rol
popa
mov
mov
lock
lock
or
sbb
inc
sbb
or
add
xchg
sahf
jnp
fisubr
pop
inc
test
aas
mov
test
fdivr
leave
jo
cmp
test
jo
mov
repz
ret
outs
ins
in
in
repnz
pop
sbb
jbe
add
shr
in
and
ja
test
cmp
mov
cmp
jbe
outs
push
sub
add
arpl
mov
mov
test
mov
jns
sbb
imul
clc
cwde
in
out
inc
(bad)
xor
xor
or
(bad)
ja
sbb
pop
pop
inc
arpl
mov
inc
dec
fwait
lahf
cmp
test
inc
test
inc
or
repnz
dec
(bad)
sar
pop
pop
popa
repnz
or
icebp
mov
into
jp
mov
icebp
inc
xchg
xor
js
fild
adc
repz
and
fistp
adc
(bad)
fcmovnb
mov
mov
mov
ss
(bad)
into
dec
daa
sti
and
jmp
ds
scas
xor
sti
sub
imul
xchg
lahf
mov
adc
pop
retf
fstp
call
jg
mov
int
cmp
mov
test
jl
fstp
ins
into
iret
fwait
out
repz
imul
ins
xor
call
lock
xchg
xchg
popa
xchg
arpl
retf
cmp
sbb
daa
jno
mov
mov
dec
dec
in
ins
cs
dec
jmp
(bad)
mov
ins
(bad)
loopne
ja
pop
xchg
in
inc
mov
mov
int
pop
dec
shl
stos
and
je
jmp
jecxz
mov
sub
imul
and
mov
jl
movs
(bad)
cmps
pop
fild
iret
or
mov
xchg
imul
movs
ret
xchg
inc
add
add
push
fdivr
ret
inc
mov
mov
xor
cmp
push
pop
or
pushf
enter
fadd
sahf
jle
push
push
mov
iret
ja
imul
push
sbb
call
pop
sbb
mov
sub
lea
pop
js
or
push
jecxz
test
add
or
aam
int3
mov
stos
lea
and
dec
aam
in
dec
mov
mov
xchg
enter
pop
xchg
rcl
adc
retf
ret
cmp
jno
mov
mov
xchg
dec
lods
rcl
mov
jo
xchg
xor
pop
push
out
mov
sub
(bad)
sub
sbb
int
(bad)
fisub
in
sar
cmp
ja
mov
mov
jmp
sbb
or
mov
ins
out
or
pop
shr
out
add
and
fdivr
cmps
inc
aam
and
jl
push
daa
push
and
xchg
mov
and
or
add
call
loope
mov
and
adc
(bad)
int3
mov
test
cmp
sbb
pop
mov
ja
test
stos
push
cmps
inc
dec
sbb
xchg
ss
pop
shr
shl
pop
(bad)
pop
ret
sti
(bad)
push
stos
and
cmp
aas
aaa
retf
repz
lea
lahf
adc
outs
ja
fadd
jae
jno
retf
pop
ficom
xchg
sub
add
retf
sbb
push
sar
in
popf
mov
add
fldenv
push
ror
sbb
pop
cdq
loope
adc
adc
mov
(bad)
dec
shl
shr
out
mov
mov
mov
in
leave
(bad)
dec
out
fprem
sub
mov
mov
cdq
and
(bad)
pop
pop
xor
or
gs
sub
adc
jecxz
pop
pusha
or
aaa
mov
hlt
push
adc
pop
mov
and
loop
sub
or
stc
sub
inc
push
xor
adc
stos
jmp
ins
pop
ins
pop
enter
je
test
sub
push
shl
xchg
mov
cmp
sar
cmp
jbe
movs
nop
inc
cli
test
imul
mov
push
add
and
inc
lock
arpl
test
ins
dec
repnz
xor
js
into
or
add
mov
adc
cmp
xor
rcl
xor
popa
mov
jle
nop
push
inc
sbb
inc
fs
fwait
in
push
lods
sbb
add
mov
add
leave
into
dec
add
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
inc
add
fcmovu
lds
adc
rcl
mov
aam
mov
add
sbb
sub
add
sahf
sub
retf
ins
mov
test
in
add
push
push
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
shr
mov
(bad)
cmp
call
mov
fs
aas
sbb
add
jecxz
add
xchg
dec
sbb
(bad)
sbb
add
pop
mov
adc
mov
mov
ficomp
adc
mov
jne
and
push
push
pop
cmp
jae
shl
pop
and
xor
cmp
loopne
xchg
(bad)
mov
add
les
fs
mov
iret
cmp
ja
mov
bound
repz
sub
dec
sbb
mov
cmp
dec
loop
xor
push
sbb
daa
fidiv
inc
in
lea
ja
adc
ds
jle
shr
xor
and
out
in
outs
push
addr16
(bad)
(bad)
in
sbb
dec
add
loopne
lods
cmp
retf
mov
mov
imul
(bad)
int3
bound
mov
jle
test
int3
sub
or
sbb
add
push
sar
in
in
jo
fcmove
cmp
fstp
data16
fwait
sbb
imul
xor
imul
mov
lfs
fstp
fadd
mov
mov
loop
sbb
fcmovnu
push
in
cmps
jno
or
retf
sub
adc
adc
and
in
push
dec
pop
loopne
(bad)
out
ret
idiv
cmp
adc
repnz
bound
mov
popf
mov
rol
sbb
pop
pop
fcomp
addr16
mov
pop
data16
int3
jo
int3
mov
mov
(bad)
sbb
mov
out
cmp
sti
cmp
mov
and
sti
and
push
xchg
mov
fnsave
stc
mov
loope
arpl
mov
pop
test
sbb
inc
jbe
out
cmp
ss
fwait
out
fs
pop
jnp
jecxz
out
cmps
xchg
jle
(bad)
ins
data16
push
(bad)
call
inc
jb
sub
fwait
add
xchg
push
sub
lods
xor
dec
stc
out
ss
ja
or
cmp
push
es
mov
(bad)
in
or
icebp
dec
lea
cwde
xchg
jno
in
sub
loop
xchg
jno
aad
push
into
adc
loope
call
jmp
out
movs
shl
or
je
sbb
xor
cmps
ja
call
outs
loope
arpl
mov
mov
sbb
sub
or
push
inc
jne
loop
cmp
pop
fwait
in
sub
mov
mov
in
jp
xchg
push
or
pop
ins
mov
cmp
xor
add
push
dec
dec
into
out
in
inc
mov
mov
xlat
pop
fdivr
in
ds
repnz
mov
fdiv
cwde
scas
pop
retf
ret
fcmovb
(bad)
cmps
js
in
rol
jmp
xor
mov
adc
inc
inc
and
cmp
sbb
ins
push
iret
push
repnz
lods
je
mov
test
push
dec
test
loopne
jbe
in
call
dec
repz
loope
sahf
mov
jbe
inc
jns
sub
test
sbb
xchg
cmp
iret
mov
cmovne
test
mov
ins
shl
xor
sbb
add
jno
mov
fisub
and
lahf
push
mov
cmps
xchg
rcl
add
jecxz
or
adc
mov
add
jmp
fiadd
imul
xor
add
jecxz
or
(bad)
test
sub
add
push
xchg
xor
add
jecxz
or
test
jmp
cs
out
inc
jecxz
ja
mov
or
mov
jl
jl
outs
xchg
dec
loope
sar
inc
ret
sbb
sahf
push
jns
cmp
inc
or
(bad)
xchg
fld
idiv
mov
push
scas
les
fimul
or
mov
pushf
popa
in
movs
dec
dec
push
cmp
fsub
sahf
fldcw
imul
sbb
int
mov
aaa
ins
fisttp
out
(bad)
push
jg
pop
imul
repz
add
scas
cld
and
jge
add
(bad)
mov
dec
imul
mov
pop
xlat
fwait
lods
out
je
xor
mov
and
jo
les
push
pop
arpl
or
mov
or
test
and
push
sbb
pusha
add
mov
in
call
sub
xor
aaa
lea
mov
cmp
mov
sub
enter
mov
mov
sub
and
in
lock
mov
jmp
jmp
cmp
sub
adc
mov
dec
loopne
jnp
or
clc
pop
xchg
lahf
lock
jg
mov
(bad)
test
jg
iret
fstp
(bad)
in
fucomi
mov
pop
mov
into
cdq
loope
push
xor
sub
cwde
inc
cmps
jns
ins
aad
jmp
in
(bad)
retf
sbb
lods
push
inc
test
inc
or
cli
retf
aas
in
pop
clc
dec
aas
loope
into
div
cld
std
cwde
repnz
outs
fstp
ss
(bad)
push
cmp
jne
outs
or
xchg
cdq
out
arpl
and
mov
cwde
adc
sbb
cld
ret
cmp
sar
mov
pop
mov
pop
hlt
leave
mov
imul
mov
test
and
sbb
mov
loop
mov
fdivr
jmp
cli
test
das
xchg
mov
leave
cmp
int
clc
mov
je
dec
fist
inc
(bad)
mov
imul
push
dec
(bad)
jnp
sahf
sub
sar
mov
xor
imul
sbb
out
sahf
inc
mov
popf
mov
inc
ficomp
retf
xchg
pop
mov
das
mov
aad
sbb
sub
stos
test
loop
fistp
pusha
repnz
cmps
and
cld
arpl
std
inc
ret
mov
cmps
or
aam
sub
cs
and
in
push
daa
cmp
cdq
loop
push
fisubr
or
lock
test
outs
je
in
mov
aas
xchg
call
nop
xchg
js
repz
(bad)
jge
dec
adc
aaa
pop
mov
es
(bad)
rol
mov
in
sbb
jp
mov
cmp
stos
cmps
pop
jmp
jmp
(bad)
in
inc
push
pop
sbb
in
fs
in
mov
pop
inc
icebp
cmps
cdq
movs
retf
std
xchg
jae
mov
fstp
fwait
xchg
adc
call
pop
clc
jle
out
inc
xchg
mov
fldl2t
mov
(bad)
push
pop
int
popf
shl
(bad)
(bad)
cmp
cmp
mov
movs
mov
cwd
test
mov
retf
add
sub
cmp
fiadd
sbb
pop
(bad)
je
scas
ins
in
popa
mov
jle
test
dec
ins
(bad)
in
inc
pop
dec
and
rcl
pop
arpl
push
icebp
jge
pop
inc
jne
sbb
xor
das
bound
movs
outs
fcom
push
sbb
cli
mov
ss
push
scas
imul
pop
dec
push
push
in
ret
xor
and
cmps
add
fwait
in
or
pop
out
sub
jp
or
outs
sbb
gs
add
xor
xchg
add
cmp
dec
pop
shl
push
fwait
xchg
xor
fimul
enter
mov
jb
inc
inc
arpl
sahf
xor
mov
out
lahf
add
push
cmp
or
inc
or
or
jae
pushf
pop
(bad)
sub
das
in
fwait
sbb
loop
imul
fsubrp
jbe
dec
retf
lock
into
loop
xor
xlat
out
jl
mov
mov
in
psubd
adc
sbb
mov
iret
push
stc
push
adc
pop
rcr
add
xor
dec
imul
pop
mov
arpl
popa
jp
icebp
adc
xor
mov
arpl
scas
scas
mov
pop
cmp
sub
mov
xor
iret
and
xor
sahf
dec
sbb
je
movs
imul
sti
aad
mov
cmp
sub
pop
shl
sbb
push
(bad)
xor
mov
and
mov
sbb
mov
je
push
fisub
jae
inc
sub
mov
jno
mov
outs
pop
call
xor
jae
fs
pop
retf
and
adc
les
sbb
ret
pop
js
inc
mov
or
fwait
jecxz
and
xor
adc
fs
arpl
lods
jae
cmp
sar
movs
inc
ret
leave
add
push
mov
and
ss
or
out
pop
xchg
or
scas
cmp
clc
jnp
fidiv
imul
jecxz
and
mov
mov
loope
fs
sti
inc
lahf
xor
mov
mov
push
xchg
vcvtss2si
out
idiv
sub
mov
xor
pop
retf
adc
lock
enter
test
cli
xchg
mov
ja
adc
pop
add
inc
fs
jo
cmp
aas
loop
packssdw
xchg
xlat
test
std
mov
or
cmp
inc
fistp
push
ss
sti
repz
push
fsubr
fsubr
pop
ins
(bad)
cmp
push
(bad)
cmc
outs
and
dec
inc
mov
ret
jno
je
js
add
add
js
jmp
jnp
scas
pusha
nop
inc
and
arpl
inc
(bad)
enter
hlt
popf
jge
lock
mov
lea
add
ja
jb
cmp
xchg
cmc
lods
jg
inc
mov
cmp
arpl
mov
xlat
jae
and
adc
mov
mov
push
and
or
adc
lea
inc
mov
xor
mov
or
cmc
mov
scas
cs
imul
sbb
popa
inc
pop
xor
and
push
retf
adc
loop
sbb
iret
mov
ret
sub
fadd
lock
int3
stos
mov
mov
sar
or
mov
out
or
and
leave
ins
popa
pop
push
int3
push
sbb
mov
cmp
xchg
pusha
add
mov
nop
inc
jne
stos
imul
fldz
mov
shl
popf
mov
retf
push
sbb
and
pop
lock
imul
cmps
(bad)
stc
push
inc
fldenv
fstp
ds
int
jns
jecxz
cmp
cmp
xor
cmps
cs
mov
ret
xchg
popa
sbb
pop
jp
test
outs
outs
das
outs
mov
mov
mov
aam
sub
mov
xchg
add
mov
xor
(bad)
jbe
adc
lahf
test
jnp
sub
add
shl
test
outs
ret
sbb
inc
or
mov
movs
imul
aaa
mov
int
aaa
add
mov
mov
fisttp
fsub
cmps
mov
cwde
and
cmp
xchg
loopne
push
mov
mov
pushf
je
rol
std
mov
arpl
mov
pop
lods
fisub
cdq
cld
cmc
mov
push
pause
cdq
ror
xchg
movs
mov
cmps
in
mov
and
mov
inc
mov
fadd
outs
jle
mov
popf
mov
repnz
fisubr
jbe
mov
xchg
xchg
xor
pop
dec
icebp
popf
xchg
clc
jnp
mov
scas
je
das
daa
adc
icebp
fild
sbb
ja
movs
and
lahf
xchg
loop
mov
test
cli
pop
push
xchg
adc
pop
iret
push
not
or
mov
popa
add
ja
xchg
mov
dec
push
lock
push
sub
aas
jne
inc
pusha
jg
daa
xchg
cmps
pop
retf
(bad)
push
jp
retf
add
out
or
cdq
or
inc
inc
or
(bad)
pop
push
dec
neg
idiv
cmps
ja
std
lahf
neg
dec
mov
mov
xchg
sbb
mov
and
mov
cdq
or
cdq
jns
xchg
add
sbb
inc
int3
or
(bad)
rcr
mov
mov
int
lahf
jnp
cmp
mov
js
jle
lock
xchg
ret
in
xor
jne
fwait
xchg
test
mov
cwde
add
jl
test
push
mov
dec
mov
hlt
pop
or
xor
int
xchg
int3
push
sbb
arpl
mov
mov
dec
jns
out
ins
ins
ss
mov
or
or
call
pop
daa
outs
rol
scas
pop
iret
sbb
jbe
rcr
scas
mul
mov
or
jl
cmc
add
in
imul
mov
add
dec
inc
enter
dec
push
rcr
jg
ror
or
cmp
mov
rcr
imul
pop
lods
push
outs
rcr
add
movs
out
xchg
mov
ins
test
mov
int
data16
xor
pusha
test
mov
push
aas
cld
and
(bad)
cdq
std
scas
mov
sti
dec
sti
push
sti
dec
in
jg
jg
(bad)
cmp
repnz
fisub
jmp
jecxz
stos
arpl
out
sub
adc
test
mov
push
and
ins
mov
jae
nop
or
icebp
push
cdq
jno
sbb
out
push
movs
jne
in
dec
in
ja
pop
sub
arpl
inc
icebp
mov
pop
(bad)
jne
jns
ret
cmp
adc
es
sub
stos
xchg
pop
and
xchg
(bad)
and
(bad)
(bad)
adc
dec
sbb
jmp
jnp
in
fsub
leave
sbb
sub
lods
pop
jmp
mov
push
clc
push
inc
sti
add
int3
(bad)
inc
xchg
xor
out
xchg
into
push
xchg
xchg
add
int3
mov
add
frstor
sub
dec
adc
and
xor
xor
cmp
jmp
retf
fwait
cmp
in
in
ins
in
out
cmp
dec
and
or
cmp
stc
and
adc
or
shr
not
js
mov
cmp
xchg
pop
nop
jbe
or
ret
add
loopne
jae
or
adc
jle
lds
jo
fidiv
js
xor
jecxz
(bad)
cmps
jo
icebp
jg
imul
cs
sub
popf
ret
pop
lods
push
mov
mov
or
push
jb
add
es
stc
jno
leave
loop
dec
repz
repnz
fcmovnbe
hlt
imul
iret
aam
mov
pop
cdq
sbb
push
sub
push
shr
jl
xor
std
sub
dec
and
ins
add
push
and
cmps
icebp
and
inc
(bad)
jmp
call
sub
(bad)
mov
lea
fwait
ds
push
pop
dec
jnp
or
jne
jmp
mov
sti
sub
or
cmp
push
les
imul
les
dec
and
stos
mov
dec
and
add
mov
imul
jmp
iret
adc
(bad)
(bad)
cmp
test
pop
loop
loopne
pop
xchg
fcmovnb
aaa
push
ret
pop
sar
mov
cmp
xchg
imul
dec
ins
mov
inc
mov
cmp
mov
mov
xor
mov
and
das
or
sub
ret
ins
xchg
push
mov
xor
enter
cld
pop
imul
imul
xor
outs
xchg
in
addr16
fisttp
loope
or
dec
mov
cmp
dec
mov
imul
test
int3
mov
sbb
dec
push
lock
imul
test
sbb
stc
fbstp
or
ds
mov
sbb
and
jb
adc
xchg
sbb
test
pop
out
inc
xchg
scas
(bad)
jno
mov
les
xor
nop/reserved
cmps
xchg
or
inc
shl
gs
and
add
test
add
push
(bad)
fs
popf
mov
not
into
dec
xchg
mov
(bad)
stos
and
cmc
dec
or
xchg
cmp
pop
sub
add
cmp
hlt
lods
es
push
dec
push
jmp
outs
push
sbb
retf
xchg
jbe
add
dec
aaa
push
mov
lods
fisubr
nop
test
and
cmp
inc
fadd
push
mov
sub
add
push
inc
add
sbb
fisttp
sbb
mov
dec
gs
cmp
pop
push
lea
add
sbb
dec
cmp
add
cli
xor
cmp
loop
jmp
fs
sbb
xor
cmp
(bad)
daa
shl
lds
test
pop
xchg
outs
gs
jmp
mov
mov
mov
lock
mov
xor
js
jnp
jns
pop
fisub
xlat
inc
fdivr
pop
popf
fwait
into
cmp
sbb
arpl
fiadd
xor
imul
ret
call
repz
cmp
mov
mov
test
arpl
gs
bound
and
xchg
add
imul
or
ja
or
div
push
sti
loop
cmp
scas
and
retf
mov
and
dec
inc
sbb
jns
test
retf
mov
jne
outs
loop
jnp
mov
daa
pop
xor
cli
out
sti
push
mov
retf
mov
je
jae
movs
jmp
jmp
mov
mov
test
pushf
mov
rol
sbb
loope
arpl
pop
fs
dec
sbb
cmps
leave
idiv
cld
int3
cmp
sbb
fucom
sahf
push
ss
sbb
js
mov
scas
xor
push
fld
jp
xchg
jne
cmps
movs
movs
aaa
mov
or
add
iret
push
inc
fidiv
cmps
or
sbb
pop
pusha
jne
scas
adc
and
jmp
mov
pop
add
fidivr
and
(bad)
repnz
ins
in
gs
fldenv
mov
xor
dec
int
add
cmps
loopne
push
iret
rcr
pop
pop
dec
sub
neg
aam
cs
inc
fucompp
movs
jo
fwait
sub
push
xchg
and
jne
int
push
xchg
adc
out
fsubp
push
outs
and
push
out
into
push
repz
push
fst
or
sbb
mov
ret
jne
adc
add
push
cmp
pusha
retf
inc
add
inc
sbb
movs
stos
jp
sub
xor
xchg
xchg
icebp
sar
loopne
xor
mov
dec
test
adc
inc
add
inc
add
inc
add
call
sti
push
mov
and
xchg
arpl
inc
jb
add
sbb
cmp
(bad)
jg
fidiv
xchg
movs
jg
imul
(bad)
and
adc
cwde
int3
mov
jns
mov
fcmovb
(bad)
cmps
js
in
rol
jmp
xor
mov
adc
inc
inc
and
and
sbb
cmps
jns
js
pop
or
mov
mov
lea
adc
(bad)
clc
push
sbb
mov
lds
sbb
jp
repz
ror
adc
mov
cwde
cs
enter
shr
outs
movs
cmps
imul
cdq
out
out
sahf
push
pop
(bad)
sbb
test
and
mov
aaa
jl
cli
sahf
sub
dec
bound
into
mov
mov
and
mov
add
pop
dec
ds
xor
(bad)
(bad)
jg
jg
fild
movs
mov
adc
pop
shl
xor
push
push
xchg
jbe
addr16
popa
daa
jbe
ja
or
mov
inc
sub
sub
dec
add
gs
and
out
mov
mov
cmp
jge
jmp
add
shr
pop
xchg
push
dec
cwde
lea
jo
cld
dec
loope
dec
push
mov
sbb
xchg
call
icebp
adc
or
aas
sub
test
sbb
mov
jns
cdq
adc
or
in
pop
popf
aad
add
pop
and
ins
stos
in
add
push
popa
imul
mov
add
rol
enter
lods
(bad)
mov
imul
adc
(bad)
es
cmp
mov
adc
shl
pusha
xchg
mov
xchg
fwait
cmp
ds
ret
pop
outs
movs
jge
mov
in
xor
push
fisubr
xor
xor
cmp
lods
(bad)
pop
shl
std
cmps
out
pop
sub
int3
fidivr
daa
xor
pop
call
mov
fcom
pop
sbb
cmps
bound
in
in
cmp
cmp
fmul
mov
div
ins
mov
xor
push
mov
xchg
aas
sahf
mov
daa
xchg
in
sbb
sbb
jb
cmp
ror
cmp
cmps
pop
(bad)
out
xor
test
int3
retf
outs
shl
stc
retf
fs
cmp
add
add
retf
sbb
jge
into
cmp
and
movs
dec
and
add
sbb
jno
fldcw
iret
gs
push
xor
push
daa
sub
int3
jo
sbb
mov
mov
inc
mov
dec
pop
push
pop
and
repz
sbb
(bad)
jecxz
test
ror
shl
dec
das
or
sbb
imul
inc
inc
push
fild
jmp
or
xor
out
mov
mov
in
xchg
imul
repnz
mov
(bad)
fidivr
cdq
jns
int3
xchg
inc
cli
frstor
fstp
in
xor
cmp
ja
daa
and
cmp
xchg
pop
out
mov
mov
fcomp
arpl
in
mov
and
add
push
ret
shl
mov
or
in
outs
push
cmp
mov
movlhps
jo
pop
test
add
ret
inc
mov
mov
xor
cmp
push
pop
or
pushf
enter
fadd
call
je
inc
pop
cmp
mov
gs
rol
xchg
test
retf
mov
adc
lods
js
adc
inc
dec
imul
fld
rcr
call
cdq
xchg
jo
sahf
lsl
pop
aam
mov
mov
(bad)
pop
in
lea
imul
jno
aaa
fistp
pusha
in
loopne
jb
adc
xchg
cli
mov
ds
lea
ins
inc
xchg
les
jo
rcr
pop
pop
pop
fimul
or
ins
xchg
out
push
or
imul
sbb
cmps
scas
sub
ss
sti
ds
push
mov
movs
popf
movs
popa
sub
pop
xchg
sti
mov
imul
pop
pop
jns
in
jle
dec
jnp
mov
rol
popf
jbe
push
sbb
xor
or
jo
sub
(bad)
jb
or
jno
dec
jns
sbb
pushf
cdq
daa
mov
sbb
cmp
sets
inc
stos
pop
pop
jmp
xchg
fsub
xor
adc
pop
sbb
or
(bad)
rol
jl
test
fnstenv
inc
loope
xchg
popf
inc
int3
cs
lds
loope
nop
mov
or
xchg
fidiv
popf
out
outs
out
add
fld
push
jbe
pop
fistp
xchg
mov
push
retf
push
aad
repnz
and
pushf
or
sbb
add
out
fwait
retf
inc
or
add
rcr
xor
xchg
pop
loope
jbe
imul
sub
xchg
pop
pop
cmp
lea
es
push
sub
aas
jne
inc
pusha
jg
daa
xchg
cmps
pop
retf
(bad)
push
jp
retf
add
out
or
cdq
cmovns
pop
pop
js
sbb
mov
loope
leave
xchg
sub
fsubr
jo
pusha
sbb
add
aad
xor
jne
in
in
fsub
adc
sub
ss
and
int3
jo
and
and
fisubr
lods
fwait
inc
and
ret
cmp
push
mov
imul
gs
nop
push
pop
add
push
js
ret
push
shl
mov
xchg
pop
mov
imul
or
out
or
xchg
stc
push
jae
imul
ret
and
xor
dec
mov
in
imul
enter
not
jae
xchg
aad
xor
mov
js
inc
shl
in
sub
cmp
pop
jns
inc
and
sbb
sub
mov
xor
inc
in
aaa
push
pop
idiv
mov
jo
clc
outs
pop
aas
jmp
addr16
pop
lock
test
xchg
and
std
stos
mov
and
cmp
pop
inc
dec
pop
mov
imul
not
test
std
mov
or
cmp
inc
fistp
push
ss
sti
repz
push
fsubr
fadd
push
clc
ret
inc
mov
mov
xchg
or
or
retf
and
push
or
xchg
and
retf
inc
xchg
(bad)
adc
mov
and
sti
and
push
xchg
mov
fnsave
stc
mov
loope
leave
inc
mov
leave
add
data16
test
xchg
cmp
psubusw
(bad)
fidivr
inc
loopne
in
sbb
sahf
scas
loope
fcmovnu
mov
test
ss
mov
test
push
cmps
mov
out
jl
mov
pop
out
sbb
outs
pop
js
inc
mov
lods
das
out
fld
je
ficom
cwde
mov
mov
and
mov
mov
dec
jl
cmps
pop
push
dec
mov
sti
fidiv
sbb
mov
stos
adc
ds
retf
mov
int3
div
adc
add
adc
and
jo
mov
and
gs
sbb
cmp
push
jmp
aas
mov
jne
lods
dec
sub
push
xor
sar
inc
mov
jle
fbstp
jbe
xchg
ds
mov
jnp
pop
clc
xchg
dec
mov
movs
aaa
xor
push
push
addr16
in
repnz
leave
sub
mov
inc
pop
icebp
push
lea
outs
popf
add
mov
cmp
ins
sbb
add
pop
mov
lds
fwait
imul
mov
inc
ins
and
ja
outs
in
dec
sub
add
cmp
mov
shl
push
shr
mov
mov
push
lods
push
sub
xchg
inc
retf
cs
test
sub
sbb
lods
clc
push
(bad)
push
mov
lea
mov
jmp
push
or
leave
(bad)
in
cmps
xlat
sbb
std
jnp
ror
imul
fcmovnb
mov
sbb
sub
xchg
inc
xor
bswap
cwde
adc
dec
int
jp
hlt
stc
bound
inc
dec
push
test
ins
inc
data16
mov
stos
bswap
mov
cmp
(bad)
and
outs
sub
xor
inc
dec
ins
out
fsubrp
sub
and
movs
and
popa
pop
sub
xchg
xchg
pusha
mov
lds
mov
jmp
(bad)
mov
pop
shr
ds
in
aad
lods
ficomp
fucom
push
xchg
(bad)
mov
mov
jle
shl
imul
into
and
pop
mov
rol
dec
outs
and
mov
outs
push
mov
rcr
jnp
aad
push
call
mov
call
cmp
std
loope
or
imul
ss
retf
mov
imul
fmul
and
shr
xchg
xor
push
loope
scas
add
mov
out
cmp
inc
pop
das
test
(bad)
repz
mov
shr
das
jecxz
push
fisubr
enter
sub
pop
fisub
outs
sahf
sbb
stc
mov
add
in
imul
movs
js
out
mov
push
lods
ja
movs
xchg
sub
repnz
mov
add
fsubrp
push
push
xchg
retf
mov
jmp
(bad)
scas
adc
jnp
ror
and
push
mov
xor
sti
mov
jns
ret
std
pop
inc
repz
fimul
sbb
sub
xchg
push
es
ins
add
popf
mov
dec
cmp
cs
dec
mov
push
push
jnp
addr16
push
dec
ret
out
popf
mov
push
shl
jne
push
ds
in
(bad)
mov
xor
cmc
in
inc
loop
imul
ss
fmul
aaa
aaa
scas
add
inc
fisttp
adc
popa
cld
jns
cld
mov
icebp
mov
stos
or
std
rcl
in
pop
adc
pop
push
jle
repnz
pushf
pushf
stos
jecxz
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
lock
ficom
mov
sub
mov
cmps
add
add
cld
arpl
in
das
(bad)
sbb
test
lods
sub
int
nop
xlat
(bad)
mov
pop
add
jp
loopne
or
xlat
xor
jge
dec
mov
aaa
lds
je
cld
rol
or
add
inc
mov
mov
in
hlt
pop
xor
push
cmp
fmul
dec
sub
dec
test
lock
mov
add
pop
mov
movs
xchg
js
scas
in
mov
leave
xor
ffree
rcr
out
adc
jae
iret
mov
jne
(bad)
mov
adc
int
pop
in
test
mov
xchg
daa
pusha
fcomp
or
in
arpl
jbe
cmp
dec
mov
sbb
sahf
jp
jge
xchg
iret
std
fwait
(bad)
cdq
mov
movs
(bad)
stos
sbb
inc
mov
popf
js
test
add
retf
jecxz
or
mov
inc
xchg
xchg
mov
jae
and
and
cmp
jmp
add
fmul
fidivr
in
sub
out
push
cdq
xchg
inc
out
xor
adc
or
out
jbe
imul
or
pop
pop
push
xlat
push
adc
movs
push
add
(bad)
retf
jae
push
popf
mov
repz
adc
pop
mov
fmul
or
leave
jle
sub
xchg
mov
add
sub
push
test
adc
xchg
out
out
mov
push
es
shr
cmp
(bad)
int3
or
setne
fist
or
loope
out
je
fwait
les
inc
mov
mov
add
ret
and
lods
pop
mov
(bad)
fcos
add
mov
aam
aad
jg
test
xlat
pushf
in
call
ret
inc
mov
adc
jmp
xchg
sub
inc
sbb
jo
jg
xchg
push
nop
stos
or
je
or
mov
add
mov
jbe
int3
adc
add
(bad)
fiadd
loope
out
jo
xchg
push
icebp
and
out
cmp
imul
fstp
repz
and
mov
inc
cmp
mov
dec
jg
les
gs
imul
pop
dec
(bad)
imul
and
sbb
push
sub
mov
ret
iret
not
inc
mov
icebp
cmps
(bad)
test
(bad)
adc
(bad)
std
hlt
cdq
daa
jo
das
add
and
and
jne
pop
(bad)
(bad)
ja
ins
outs
loop
mov
sbb
lods
and
pop
xchg
adc
mov
movups
js
ret
shr
sub
int3
out
mov
add
sahf
movs
push
cmp
dec
(bad)
or
mov
outs
(bad)
dec
dec
std
push
jbe
pop
addr16
cmp
mov
inc
and
or
mov
aaa
mov
mov
push
xchg
and
bound
jecxz
pop
push
or
push
fwait
loop
lea
xchg
gs
pop
dec
outs
jne
movs
xor
mov
or
daa
test
jae
lods
jle
jmp
cli
jbe
outs
out
xchg
xchg
adc
add
jae
aad
rsqrtps
aas
clc
push
retf
std
xchg
movs
fimul
scas
inc
lods
aaa
fnstenv
jns
xchg
jecxz
std
cmps
fdiv
adc
cli
mov
add
xlat
inc
or
cld
jnp
in
mov
add
mov
mov
js
dec
shl
into
cli
aas
mov
sub
fsub
test
cmp
jns
xlat
pop
jne
dec
pop
cmp
mov
adc
lahf
sbb
gs
sub
shr
les
lahf
loope
mov
data16
jmp
ret
inc
or
loopne
in
ret
dec
mov
popf
cwde
rcr
fcom
fcomip
lods
mov
xor
and
icebp
in
inc
nop
jle
add
aas
inc
mov
pop
imul
jnp
mov
mov
adc
stos
sub
adc
inc
cmp
mov
sub
mov
test
or
ins
lock
enter
scas
int3
xor
icebp
es
mov
inc
cmp
inc
mov
mov
sub
shr
inc
(bad)
sbb
jle
xchg
xor
inc
std
lahf
test
push
add
push
nop
ss
mov
pop
mov
lds
push
jg
aam
aad
daa
xchg
aad
cs
push
lock
outs
sbb
and
xor
push
pushf
adc
daa
test
shl
cwde
sub
mov
sub
xchg
repz
push
dec
(bad)
ja
rcl
mov
dec
stc
ret
icebp
pop
xchg
loope
repz
jmp
lods
clc
sti
inc
xchg
repz
pop
ja
jmp
xor
pop
fistp
iret
sub
mov
add
loope
xchg
mov
cmp
jb
sub
push
ins
cmp
add
add
ds
not
sub
sti
or
push
push
or
inc
es
sub
dec
rcl
sbb
mov
addr16
test
xchg
sub
iret
int3
(bad)
test
bound
pop
repnz
add
jnp
stos
popf
dec
cld
mov
aaa
cli
sbb
jecxz
pushf
lahf
dec
push
mov
lahf
loope
mov
jge
ins
out
jecxz
jmp
outs
and
or
push
cmp
push
btc
inc
and
icebp
cmp
icebp
push
pop
xchg
mov
mov
mov
and
scas
or
(bad)
sub
loopne
add
xor
movs
push
cmp
mov
shl
xor
out
repz
das
sub
cmp
xor
pop
cmc
scas
sub
out
outs
in
jg
add
xor
cdq
inc
jl
retf
fmul
cld
in
fstp
hlt
fnstsw
xor
lds
pop
jns
sub
icebp
scas
xchg
shr
ror
and
imul
sbb
pop
movs
push
lods
pusha
mov
lods
mov
mov
mov
xchg
stos
sub
inc
and
and
retf
jbe
outs
mov
shl
add
mov
out
mov
popa
push
fnstsw
adc
mov
xchg
(bad)
dec
ins
cmovne
jge
shl
nop
inc
mov
dec
loope
ss
jb
xor
or
dec
jno
imul
pop
sbb
cld
mov
pop
retf
imul
cs
sub
or
inc
inc
das
int
fild
dec
outs
mov
mov
inc
add
jmp
aas
adc
imul
retf
fwait
gs
repnz
fimul
push
mov
test
cwde
xchg
add
(bad)
xor
and
gs
aam
fcmovnu
jge
fldcw
cdq
push
xchg
bound
push
outs
sbb
dec
das
adc
inc
ja
ja
jmp
cmp
dec
ret
jne
outs
add
retf
xchg
stc
iret
and
sbb
(bad)
loop
sahf
ret
xor
dec
in
rol
adc
cmp
add
mov
sub
fsub
cmp
push
cmp
mov
sti
pop
mov
scas
(bad)
sar
addr16
fisub
mov
int
mov
scas
addr16
in
adc
xchg
int3
fwait
cld
(bad)
retf
xor
retf
xchg
daa
jbe
mov
pushf
mov
fisubr
es
sub
push
mov
pop
ret
sbb
adc
inc
sub
inc
dec
ins
cmp
xchg
mov
sub
add
sti
dec
leave
outs
xchg
imul
out
cdq
mov
mov
shr
repnz
xchg
ror
ins
pop
mov
cmp
add
push
dec
mov
jbe
and
leave
rcr
sbb
std
pop
cmp
in
xlat
outs
xchg
jo
popa
pop
mov
repnz
xchg
xlat
xchg
xor
loop
and
es
imul
retf
pop
inc
mov
and
pop
fsubr
adc
lods
aas
xchg
(bad)
mov
inc
test
mov
push
int3
xor
popa
and
out
(bad)
scas
call
inc
aad
xchg
dec
mov
cmp
mov
pop
call
pop
ret
inc
jb
ret
cs
inc
fadd
(bad)
out
mov
fwait
cmps
shl
enter
rcr
fstp
inc
arpl
mov
aad
xchg
or
out
jl
(bad)
mov
pop
cmp
jo
in
jne
idiv
cmps
into
jns
push
cmps
mov
cs
cmp
jae
shr
mov
test
addr16
stos
add
idiv
xor
loopne
xor
xor
pop
repnz
in
popf
mov
mov
jecxz
test
cdq
sbb
xchg
fild
cmc
sbb
mov
gs
(bad)
test
xchg
and
add
iret
cmps
fnstenv
sub
sbb
push
fcomp
jmp
scas
sub
ficom
retf
sub
enter
(bad)
lock
mov
add
stc
mov
cmp
fldcw
xchg
pop
(bad)
icebp
mov
sti
mov
jp
and
arpl
inc
adc
mov
mov
into
cmps
out
mov
push
loope
nop
xor
in
sub
cmc
or
fcmovu
cmp
mov
cmp
fmul
cdq
ret
add
xchg
sub
iret
cmp
pop
inc
movs
jmp
xchg
fcmovne
push
cdq
adc
pop
dec
lods
in
cwde
inc
loopne
jns
sbb
das
js
retf
mov
jecxz
shl
cmp
and
mov
cmp
jbe
stc
retf
fistp
mov
cmp
out
stos
xchg
ja
mov
push
mov
mov
iret
jg
pop
xor
sub
cmp
add
out
sahf
ficomp
jnp
imul
mov
stos
or
xchg
jne
or
fisub
cmp
cmp
cmps
ret
imul
jmp
rcr
add
rol
mov
cmp
adc
push
mov
mov
mov
fcmovnb
jno
aaa
fnstenv
adc
xchg
ins
pop
in
cmp
js
arpl
push
imul
sbb
ss
scas
jb
in
fmul
daa
add
jo
movs
pop
push
jae
mov
mov
data16
mov
ds
out
and
(bad)
rcl
aaa
ficom
xchg
dec
les
sbb
adc
mov
mov
add
xchg
sbb
ret
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
js
rcl
and
dec
add
or
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
push
adc
sbb
adc
adc
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
lldt
popa
jp
outs
and
and
je
jae
add
hlt
add
add
add
daa
push
inc
adc
add
and
mov
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
ud0
adc
add
add
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
lldt
popa
jp
outs
and
arpl
popa
je
add
adc
add
push
add
add
add
daa
push
inc
adc
add
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
shld
inc
adc
add
add
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
or
jp
outs
and
gs
add
adc
add
push
add
add
add
daa
push
inc
adc
add
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
push
movs
ud0
adc
add
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
adc
push
jo
jp
outs
and
and
arpl
add
add
hlt
push
add
add
add
daa
push
inc
adc
adc
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
or
arpl
and
and
add
sldt
hlt
push
add
add
add
daa
push
cmp
adc
add
and
mov
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
pop
adc
adc
adc
adc
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
adc
push
gs
imul
arpl
jbe
add
or
hlt
add
add
add
daa
push
inc
adc
add
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
or
add
pop
inc
push
inc
adc
add
add
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
or
lldt
add
and
nop
add
add
push
popa
push
add
add
or
add
add
gs
xor
add
adc
push
imul
outs
outs
and
fs
add
or
add
push
add
add
add
daa
push
inc
adc
add
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
adc
push
gs
jo
and
popa
je
imul
inc
add
or
add
push
add
add
add
daa
push
inc
adc
add
add
nop
add
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
or
or
adc
adc
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
push
inc
adc
add
add
and
nop
add
add
push
popa
push
add
add
or
add
add
gs
xor
add
adc
push
gs
imul
ins
and
inc
add
add
add
push
add
add
add
daa
push
inc
adc
add
and
nop
add
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
add
ud0
adc
add
add
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
adc
inc
jo
ins
imul
and
je
add
add
add
push
add
add
add
daa
push
inc
adc
add
and
nop
add
add
push
popa
push
add
or
add
add
gs
xor
add
adc
push
imul
dec
jo
jb
je
jbe
add
add
add
push
add
add
add
daa
push
inc
adc
add
add
nop
add
add
push
popa
push
add
add
add
gs
xor
add
push
add
gs
xor
add
add
add
or
add
add
add
adc
adc
and
nop
add
add
push
popa
push
add
add
add
add
gs
xor
add
adc
push
gs
imul
jae
jae
outs
jp
add
pop
add
rol
add
ja
out
add
or
adc
pop
add
mov
add
push
popa
push
add
add
add
gs
xor
add
adc
push
gs
imul
jae
jae
outs
jp
add
push
add
add
add
fist
ja
adc
add
pop
add
mov
add
push
popa
push
add
push
add
popa
xor
sbb
jle
add
ins
je
add
add
inc
dec
inc
cmp
popa
and
es
add
(bad)
(bad)
push
div
out
out
out
(bad)
(bad)
(bad)
(bad)
into
into
into
mov
lods
pushf
(bad)
out
shl
xchg
fsin
xchg
xlat
(bad)
xchg
mov
xchg
xchg
xchg
(bad)
xlat
dec
dec
dec
mov
dec
dec
std
mov
cld
mov
dec
stc
mov
cld
mov
cld
mov
cli
mov
clc
mov
stc
mov
stc
mov
test
xchg
test
test
stc
test
test
test
test
into
clc
test
test
int3
cmc
or
or
or
or
or
jg
repz
bnd
hlt
jle
repz
icebp
jl
bnd
bnd
lock
lock
out
jnp
jnp
(bad)
out
jp
icebp
jns
out
ja
in
je
jmp
ret
test
jmp
shr
shr
shr
mov
outs
mov
ins
mov
imul
imul
out
mov
arpl
movs
into
push
push
push
dec
movs
out
movs
jecxz
cmp
xor
or
sub
add
add
add
add
pop
inc
test
dec
dec
pop
push
aaa
push
xchg
pop
pop
aaa
push
push
add
mov
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
test
or
xchg
xchg
xchg
gs
cdq
fwait
add
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
in
test
(bad)
enter
sub
movs
sub
sub
mov
dec
pushf
dec
xchg
xchg
mov
pop
push
rcr
mov
clc
inc
mov
mov
leave
xchg
sub
pop
leave
mov
retf
xchg
loop
push
retf
cwde
or
add
enter
lahf
inc
or
dec
mov
push
pop
xor
mov
push
loopne
adc
dec
popf
dec
mov
aad
pop
mov
(bad)
jne
push
movs
mov
out
popf
inc
shr
(bad)
cld
or
fsub
retf
fistp
dec
clc
movs
xor
dec
xchg
cdq
ror
dec
mov
xor
retf
sub
push
or
pop
inc
jae
fstp
test
pop
int
mov
xlat
mov
jno
mov
sbb
push
cs
(bad)
int
mov
and
inc
jl
add
enter
into
mov
adc
xor
mov
mov
fistp
xchg
xchg
lock
inc
loopne
in
repz
mov
xchg
cmp
repz
lahf
or
frstor
addr16
or
test
add
fbld
pop
xor
popf
es
daa
mov
cmc
icebp
inc
lea
add
jnp
addr16
sub
jno
inc
je
and
cwde
data16
push
push
add
adc
rol
xchg
dec
ss
loope
mov
(bad)
mov
in
addr16
add
addr16
(bad)
cdq
adc
jo
mov
out
jo
sub
pushf
fisttp
and
lds
arpl
xchg
sbb
bound
shl
nop
loop
rol
jno
ss
bound
ret
lds
push
pusha
xchg
inc
pop
pusha
or
test
aad
push
dec
(bad)
pop
bound
cmps
cwde
popf
pop
xor
test
popf
mov
sub
lods
mov
out
xchg
cs
test
cmp
test
adc
jo
mov
jle
xchg
inc
or
pop
inc
rol
sbb
inc
sti
dec
xor
dec
push
mov
stos
in
das
mov
push
xor
add
fst
daa
out
test
test
inc
add
mov
mov
cmp
adc
push
add
sbb
add
in
out
cli
and
popa
bound
fist
icebp
inc
sbb
scas
mov
jl
xor
pop
mov
and
pop
pop
xor
loope
loop
scas
out
sub
int3
xor
ins
xor
adc
add
inc
test
or
or
mov
aaa
pop
push
(bad)
scas
data16
aam
push
mov
lock
mov
jecxz
gs
jnp
sbb
push
and
cdq
bound
lock
mov
int
xlat
ins
neg
sub
lods
adc
pop
adc
mov
rcl
mov
fisubr
cs
in
dec
es
push
cmp
loopne
adc
movs
xor
shl
movs
adc
adc
mov
jmp
(bad)
cs
enter
or
fs
rol
lock
pop
mov
cmps
lahf
xchg
in
add
mov
sbb
ds
std
hlt
aam
xchg
adc
sbb
mov
push
je
xchg
cmps
jbe
jp
push
test
push
mov
out
(bad)
sti
sub
inc
or
push
xor
add
shl
dec
add
cmp
jmp
sub
rol
cli
inc
inc
or
mov
js
rol
or
mov
or
or
or
push
mov
imul
rcl
lock
movs
lds
and
add
ret
push
cli
rcr
mov
stc
loope
adc
dec
mov
std
sub
sbb
jle
lds
pop
xchg
xchg
add
sahf
mov
mov
mov
scas
shl
xchg
loop
xlat
enter
lea
pop
push
mov
cmp
icebp
mov
xor
ret
mov
iret
lea
adc
add
add
loopne
cmp
or
inc
add
add
push
gs
add
stc
push
(bad)
inc
add
add
add
add
pusha
dec
pop
dec
add
adc
and
add
add
bound
xor
add
mov
lock
dec
add
dec
add
(bad)
(bad)
push
popa
dec
add
bound
lock
dec
add
bound
jo
dec
add
pusha
dec
add
add
add
(bad)
inc
add
add
dec
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
sbb
inc
add
(bad)
(bad)
inc
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
sbb
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
add
jo
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
mov
inc
add
(bad)
(bad)
inc
add
add
pusha
dec
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
pushf
ins
inc
add
(bad)
(bad)
inc
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
dec
dec
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
add
js
inc
add
(bad)
(bad)
inc
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
add
adc
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
pop
dec
add
add
add
add
pop
dec
add
pop
dec
add
add
add
add
add
fs
add
(bad)
(bad)
inc
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
mov
(bad)
(bad)
inc
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
add
push
jbe
add
(bad)
(bad)
inc
add
add
add
add
add
add
arpl
add
add
test
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
dec
add
inc
add
(bad)
(bad)
inc
add
add
dec
add
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
add
inc
add
dec
add
mov
dec
add
mov
dec
add
add
mov
dec
add
mov
dec
add
mov
inc
add
add
mov
dec
add
add
add
inc
add
add
add
add
fisttp
cld
mov
inc
add
add
add
add
inc
add
dec
add
mov
dec
add
mov
inc
add
dec
add
mov
dec
add
movs
inc
add
mov
inc
add
jb
push
popa
jae
add
add
inc
js
arpl
je
push
inc
add
fadd
mov
dec
add
add
add
fadd
mov
dec
add
add
fld
nop
fisttp
mov
fld
xchg
fisttp
mov
fild
cwde
fisttp
cld
loopne
add
fisttp
je
inc
add
inc
add
mov
inc
add
inc
add
dec
add
in
add
dec
add
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
mov
movsx
test
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
jmp
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
neg
sbb
inc
neg
mov
push
push
call
neg
sbb
inc
neg
or
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
mov
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
push
call
mov
lea
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
lea
call
lea
call
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
lea
call
push
call
lea
push
lea
push
push
call
add
lea
call
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
lea
push
lea
push
push
call
add
lea
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
lea
call
mov
movsx
test
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
push
mov
push
call
mov
lea
call
push
call
mov
mov
lea
push
lea
push
lea
push
push
lea
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
jmp
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
lea
call
mov
movsx
test
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
push
mov
push
call
mov
lea
call
push
call
mov
mov
lea
push
lea
push
lea
push
push
lea
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
jmp
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
jmp
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
neg
sbb
inc
neg
mov
push
push
call
neg
sbb
inc
neg
or
mov
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movsx
test
je
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
call
mov
lea
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
lea
call
lea
call
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movsx
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
call
push
lea
push
call
push
call
lea
call
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
call
push
lea
push
call
push
lea
push
call
add
push
call
mov
lea
call
lea
call
mov
movsx
test
jne
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
mov
lea
lea
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
push
mov
push
call
mov
lea
call
push
call
mov
mov
lea
push
lea
push
lea
push
push
lea
push
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
jmp
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
push
call
call
push
jmp
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
jne
mov
lea
push
push
mov
call
cmp
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
mov
lea
push
push
mov
call
test
jge
push
push
push
push
call
cmp
jne
mov
test
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
setg
xor
cmp
setl
or
jne
sub
jo
mov
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
push
push
call
mov
lea
call
push
call
lea
mov
lea
push
lea
push
push
lea
push
push
mov
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
call
mov
test
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
test
jne
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
call
mov
lea
lea
mov
mov
call
mov
lea
push
call
lea
call
lea
lea
mov
mov
call
lea
push
call
lea
call
mov
push
push
call
push
push
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
push
call
fnclex
test
jge
mov
push
push
push
push
call
jmp
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
jmp
mov
mov
cmp
jne
mov
test
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
cmp
jne
mov
push
call
test
jge
push
push
push
push
call
cmp
jne
mov
push
call
test
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
mov
lea
push
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
push
lea
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
push
push
call
lea
push
push
call
push
call
add
lea
call
mov
push
push
push
call
lea
push
push
call
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
xor
test
lea
lea
setg
push
push
neg
push
mov
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
push
call
mov
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
call
lea
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
call
lea
call
mov
push
jmp
lea
call
lea
lea
push
push
push
call
add
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
mov
push
mov
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
call
mov
mov
lea
call
lea
call
mov
mov
push
lea
push
push
call
push
call
mov
call
mov
lea
push
push
call
lea
mov
call
mov
lea
push
lea
push
push
mov
mov
call
mov
lea
call
mov
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
lea
call
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
sub
push
jo
movsx
mov
lea
lea
push
push
push
mov
mov
call
mov
mov
add
cmp
jg
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
mov
mov
mov
call
mov
lea
lea
push
lea
push
push
push
call
add
lea
call
mov
add
cmp
ja
xor
mov
jmp
lea
lea
mov
mov
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
push
call
mov
lea
call
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
jmp
lea
lea
mov
mov
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
push
call
sub
fstp
call
fstp
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
mov
lea
call
jmp
lea
lea
mov
mov
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
push
call
mov
lea
call
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
jmp
lea
lea
mov
mov
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
mov
lea
call
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
push
mov
lea
mov
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
mov
mov
add
add
mov
jo
mov
jmp
fwait
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
and
add
scas
dec
add
mov
add
add
add
add
add
add
adc
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
sub
push
jo
movsx
mov
lea
lea
push
push
push
mov
mov
call
mov
mov
add
cmp
jg
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
mov
mov
mov
call
mov
lea
lea
push
lea
push
push
push
call
add
lea
call
mov
cmp
jl
cmp
jg
lea
lea
mov
mov
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
push
call
mov
lea
call
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
jmp
lea
lea
mov
mov
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
mov
lea
call
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
lea
push
mov
lea
mov
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
lea
lea
mov
mov
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
mov
mov
add
add
mov
jo
mov
jmp
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
mov
lea
push
push
push
mov
call
cmp
fnclex
jge
mov
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
jne
mov
push
call
push
lea
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
neg
sbb
lea
inc
neg
mov
call
lea
lea
push
push
push
call
add
cmp
je
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
push
push
call
lea
push
push
call
push
call
add
lea
call
mov
push
push
push
call
lea
push
push
call
push
call
add
lea
call
mov
push
call
mov
push
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
lea
mov
mov
mov
mov
mov
call
lea
push
push
call
mov
push
lea
push
call
add
push
call
mov
call
lea
mov
call
lea
call
cmp
je
mov
mov
movsx
lea
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
call
lea
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
mov
call
lea
call
cmp
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
mov
push
push
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
not
mov
lea
push
push
push
call
add
cmp
je
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
call
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
call
mov
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
test
je
mov
push
call
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
xor
cmp
sete
lea
neg
call
lea
call
test
je
mov
push
push
push
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
call
lea
call
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
jmp
mov
push
push
push
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
call
lea
mov
call
lea
call
cmp
je
cmp
jne
mov
push
push
push
call
push
lea
push
call
push
call
add
lea
call
fwait
push
jmp
sub
mov
mov
xor
push
push
mov
mov
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
call
lea
call
mov
cmp
jne
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
sub
mov
mov
sub
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
call
lea
call
sub
mov
mov
lea
sub
mov
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
mov
call
lea
call
lea
call
fwait
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
push
mov
jne
mov
push
call
test
jge
push
push
push
push
call
cmp
jne
mov
push
call
test
jge
push
push
push
push
call
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
jmp
mov
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
lea
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
test
je
push
call
mov
call
mov
add
jo
push
call
mov
lea
call
mov
add
jo
push
lea
push
push
call
mov
push
push
call
mov
call
mov
lea
push
push
call
lea
call
mov
push
call
sub
jo
push
mov
push
call
mov
lea
call
test
jle
or
cmp
jne
mov
mov
push
push
call
test
je
jmp
mov
mov
push
push
push
push
call
test
jne
mov
push
push
call
mov
call
mov
call
jmp
mov
push
jmp
lea
call
ret
mov
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
mov
push
push
call
jmp
mov
mov
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
test
jne
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
mov
push
push
push
call
mov
mov
lea
call
push
push
call
mov
lea
call
mov
lea
push
push
call
push
lea
push
push
call
mov
push
push
call
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
lea
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
cmp
jne
mov
cmp
jne
push
push
call
mov
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
cmp
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
jmp
mov
mov
mov
cmp
jne
mov
test
jne
push
push
call
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
cmp
jne
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
lea
push
mov
push
mov
mov
mov
mov
mov
call
test
jne
mov
push
call
lea
push
push
call
lea
mov
push
push
mov
call
push
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
mov
mov
mov
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
push
push
call
cmp
jge
mov
push
push
push
push
call
jmp
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
cmp
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
jmp
mov
mov
cmp
jne
mov
lea
push
push
push
push
call
test
jge
push
push
push
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
mov
push
call
mov
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
cmp
jne
mov
lea
push
push
push
push
call
test
jge
push
push
push
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
cmp
jne
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
jmp
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
mov
push
mov
call
cmp
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
mov
push
mov
call
cmp
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
mov
push
mov
call
cmp
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
mov
call
mov
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
lea
push
mov
push
mov
mov
mov
mov
mov
call
test
jne
mov
push
call
lea
push
push
call
lea
mov
push
push
mov
call
push
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
mov
mov
mov
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
mov
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
cmp
jne
mov
mov
jmp
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
call
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
mov
push
mov
call
cmp
jge
push
push
push
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
call
mov
mov
lea
call
lea
call
mov
mov
push
lea
push
push
call
push
call
mov
call
mov
lea
push
push
call
lea
mov
call
mov
lea
push
lea
push
push
mov
mov
call
mov
lea
call
mov
lea
call
push
jmp
test
je
lea
call
lea
call
lea
call
ret
lea
call
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
push
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
xor
cmp
lea
sete
neg
mov
call
cmp
je
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
lea
push
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
lea
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
push
push
call
test
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
push
call
mov
mov
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
push
call
test
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
push
call
mov
mov
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
mov
lea
push
push
call
lea
push
lea
push
push
call
push
lea
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
mov
push
call
mov
push
lea
push
call
lea
lea
push
push
call
lea
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
push
push
push
call
mov
add
lea
push
push
call
mov
lea
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
call
push
lea
push
call
mov
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
fld
mov
fsub
mov
push
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
fld
mov
fsub
mov
push
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
fwait
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
jne
mov
push
call
mov
lea
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
lea
mov
mov
mov
mov
push
push
call
push
push
call
xor
cmp
fnclex
jge
jmp
cmp
jne
mov
push
call
mov
push
lea
push
call
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
lea
mov
mov
mov
mov
push
push
call
push
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
lea
push
mov
push
mov
mov
mov
mov
mov
call
test
jne
mov
push
call
lea
push
push
call
lea
mov
push
push
mov
call
push
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
mov
mov
mov
call
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
lea
lea
push
push
mov
mov
call
test
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
lea
mov
mov
mov
call
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
lea
mov
push
mov
push
mov
mov
mov
mov
mov
mov
call
test
je
lea
push
push
mov
mov
call
test
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
test
fnclex
jge
push
push
push
mov
push
call
jmp
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
jmp
mov
mov
push
call
push
lea
push
call
mov
mov
lea
mov
push
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
mov
mov
mov
mov
lea
call
xor
mov
push
jmp
lea
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
mov
push
lea
push
call
add
push
call
mov
lea
call
lea
call
lea
call
mov
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
xor
cmp
setne
neg
mov
lea
call
movsx
test
je
mov
mov
jmp
mov
mov
push
jmp
lea
call
lea
call
ret
lea
call
ret
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
lea
xor
rep
mov
lea
rep
lea
lea
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
call
call
lea
lea
push
push
push
call
lea
push
call
cmp
mov
jne
cmp
jne
cmp
jne
mov
mov
lea
call
mov
mov
call
jmp
lea
push
call
cmp
jne
cmp
jne
cmp
jne
mov
mov
lea
call
mov
mov
call
jmp
lea
push
call
cmp
jne
cmp
jne
cmp
jne
mov
mov
lea
call
mov
mov
call
jmp
lea
push
call
cmp
jne
cmp
jne
cmp
jne
mov
mov
lea
call
mov
mov
call
jmp
lea
push
call
cmp
jne
cmp
jne
cmp
jne
mov
mov
lea
call
mov
mov
call
jmp
mov
mov
mov
cmp
jne
cmp
jne
mov
lea
call
mov
jmp
cmp
jne
cmp
jne
mov
lea
call
mov
jmp
cmp
jne
cmp
jne
mov
lea
call
mov
mov
call
mov
push
push
call
mov
lea
mov
push
lea
mov
push
lea
push
lea
mov
mov
push
push
mov
mov
mov
mov
call
lea
push
lea
mov
push
lea
push
lea
push
push
mov
mov
mov
mov
mov
call
lea
mov
push
mov
call
mov
lea
mov
lea
push
lea
push
push
mov
mov
mov
call
lea
push
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
lea
push
lea
push
push
call
push
lea
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
push
jmp
test
je
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
mov
mov
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jle
sub
jo
call
ret
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
lea
push
push
call
lea
push
push
call
lea
push
push
call
lea
push
push
call
mov
lea
lea
push
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
cmp
je
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
jmp
mov
push
call
mov
lea
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
add
call
mov
push
call
push
lea
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
mov
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
push
call
neg
sbb
push
inc
mov
neg
mov
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
push
call
neg
sbb
lea
inc
lea
neg
mov
lea
push
push
push
mov
call
mov
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
call
lea
lea
push
push
push
mov
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
lea
lea
push
lea
push
lea
push
push
push
call
add
cmp
je
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
cmp
jne
push
push
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
push
mov
mov
push
mov
mov
mov
call
mov
lea
call
push
call
mov
lea
lea
push
push
push
call
add
lea
call
jmp
mov
mov
cmp
mov
mov
mov
mov
mov
jae
lea
lea
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
movzx
add
add
jo
call
mov
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
cmp
fnclex
jge
jmp
mov
lea
lea
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
call
mov
push
jmp
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
jmp
mov
mov
mov
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
call
mov
lea
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
jmp
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
call
mov
lea
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
mov
mov
call
mov
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
neg
sbb
push
mov
mov
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
mov
lea
call
jmp
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
push
call
mov
lea
call
mov
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
test
jne
push
push
call
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
mov
mov
mov
jne
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
fwait
push
jmp
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
jne
mov
lea
push
push
mov
call
cmp
jge
push
push
push
push
call
mov
xor
cmp
setg
xor
cmp
setl
or
jne
sub
jo
mov
mov
xor
cmp
setle
xor
cmp
setge
test
jne
cmp
jne
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
test
jne
mov
push
call
push
lea
push
call
mov
push
call
lea
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
mov
mov
call
sub
lea
jo
push
lea
push
push
call
mov
lea
lea
push
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
jmp
mov
jmp
mov
push
call
mov
lea
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
lea
mov
movsx
push
push
mov
mov
call
mov
lea
lea
push
lea
push
push
call
push
lea
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
mov
xor
mov
push
jmp
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
lea
mov
push
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
mov
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
mov
push
push
lea
push
push
call
push
call
call
mov
lea
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
call
mov
mov
push
push
push
call
mov
push
lea
push
lea
push
mov
mov
mov
push
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
call
mov
mov
push
push
push
call
mov
push
lea
push
lea
push
mov
mov
mov
push
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
mov
push
call
jmp
mov
lea
call
lea
lea
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
call
mov
mov
mov
push
mov
push
push
push
call
push
push
push
call
mov
mov
push
lea
push
lea
push
mov
mov
push
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
push
push
call
add
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
push
push
call
add
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
mov
mov
call
mov
mov
lea
call
mov
lea
push
push
call
mov
push
push
call
push
call
call
mov
lea
push
push
call
lea
call
mov
push
call
mov
lea
call
mov
lea
call
push
jmp
test
je
lea
call
lea
call
ret
lea
call
ret
mov
mov
mov
pop
mov
pop
xor
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
mov
push
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
call
mov
lea
push
push
mov
mov
call
lea
lea
push
push
call
mov
lea
not
call
cmp
je
mov
lea
lea
push
push
push
call
mov
lea
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
xor
cmp
fnclex
jge
push
push
push
push
call
jmp
push
jmp
lea
call
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
movsx
lea
lea
push
push
lea
push
push
mov
mov
mov
mov
call
lea
push
push
call
lea
lea
push
push
call
mov
lea
lea
push
lea
push
push
push
call
add
test
jne
add
jo
xor
jmp
mov
lea
sub
push
jo
mov
lea
push
lea
push
push
mov
mov
mov
call
mov
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
mov
add
push
call
add
lea
jo
movsx
mov
push
lea
push
lea
push
push
mov
mov
mov
call
lea
push
call
mov
mov
call
lea
lea
push
push
push
call
mov
add
lea
call
push
jmp
test
je
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
lea
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
push
mov
call
mov
call
mov
mov
mov
lea
lea
mov
mov
call
lea
push
call
mov
lea
push
mov
call
call
mov
mov
mov
lea
lea
mov
mov
call
lea
lea
mov
mov
call
mov
lea
lea
push
lea
push
push
mov
mov
call
push
lea
lea
push
push
call
mov
lea
call
push
lea
push
lea
push
lea
push
push
call
lea
push
call
fstp
lea
lea
push
lea
push
push
push
call
fld
add
call
mov
mov
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
mov
imul
jo
sub
mov
jo
mov
push
mov
call
mov
push
lea
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
mov
cmp
jne
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
call
mov
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
fwait
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
ret
mov
mov
pop
pop
mov
mov
xor
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
cmp
jne
mov
lea
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
push
push
push
call
mov
lea
call
push
lea
push
call
push
lea
push
push
call
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
mov
cmp
jne
mov
lea
call
push
lea
push
push
call
push
lea
push
push
call
mov
push
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
mov
push
lea
push
mov
call
lea
lea
push
push
call
lea
lea
push
push
push
call
add
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
mov
push
call
mov
lea
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
test
mov
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
cmp
jne
fdiv
jmp
push
call
mov
push
mov
fnstsw
test
jne
fstp
call
mov
mov
lea
call
push
push
call
mov
lea
call
fld
cmp
jne
fdiv
jmp
push
call
push
push
fnstsw
test
jne
fstp
call
mov
lea
call
push
call
mov
lea
call
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
mov
fwait
push
jmp
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
mov
push
mov
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
call
mov
lea
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
call
mov
lea
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
test
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
mov
lea
lea
mov
mov
mov
mov
call
mov
mov
lea
mov
push
mov
mov
mov
mov
mov
call
mov
mov
lea
call
push
call
mov
lea
call
mov
push
push
call
mov
lea
call
mov
push
push
lea
push
lea
push
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
lea
push
lea
push
push
call
mov
lea
call
push
call
mov
lea
call
mov
mov
mov
call
lea
push
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
xor
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
mov
mov
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
push
push
call
add
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
lea
push
push
call
push
lea
push
push
call
push
mov
push
push
call
mov
lea
call
lea
push
push
call
push
lea
push
push
call
push
push
call
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
fwait
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
mov
cmp
jne
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
cmp
mov
jne
push
push
call
mov
mov
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
mov
lea
push
push
call
mov
mov
mov
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
push
push
push
push
call
push
call
test
jne
movsx
dec
cmp
jb
call
mov
push
shl
add
push
call
mov
mov
add
jo
mov
jmp
push
call
mov
mov
sub
push
jo
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
fld
call
lea
mov
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
fld
call
lea
mov
call
mov
push
call
push
lea
push
call
mov
lea
lea
push
push
push
call
lea
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
fwait
push
jmp
lea
call
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
mov
cmp
mov
jne
push
push
call
mov
mov
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
mov
lea
push
push
call
mov
mov
mov
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
push
push
push
push
call
push
call
test
jne
movsx
dec
cmp
jb
call
mov
push
shl
add
push
call
mov
mov
add
jo
mov
jmp
push
call
mov
mov
sub
push
jo
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
fld
call
lea
mov
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
fld
call
lea
mov
call
mov
push
call
push
lea
push
call
mov
lea
lea
push
push
push
call
lea
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
fwait
push
jmp
lea
call
lea
call
ret
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
fld
mov
mov
call
mov
mov
lea
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
call
mov
mov
movsx
mov
mov
fild
mov
mov
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fstp
fnstsw
test
jne
cmp
jg
mov
mov
fld
mov
mov
mov
mov
call
push
push
push
call
mov
push
add
jo
movsx
movsx
mov
sub
fild
mov
jo
fstp
mov
fild
push
movsx
fstp
mov
mov
fild
mov
push
mov
fstp
mov
push
push
push
push
call
test
fnclex
jge
push
push
push
push
call
fld
fadd
mov
mov
fstp
fnstsw
test
jne
mov
add
jo
mov
mov
jmp
fwait
push
jmp
lea
call
ret
ret
mov
mov
mov
pop
mov
mov
pop
pop
mov
mov
mov
xor
mov
mov
mov
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
call
push
lea
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
push
fld
call
push
fld
call
push
fld
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
movsx
mov
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
fild
fstp
fild
fstp
fld
fmul
mov
imul
jo
mov
fild
fstp
fadd
fadd
fnstsw
test
jne
fstp
fld
push
fstp
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
sub
mov
cmp
jae
mov
jmp
call
mov
lea
push
mov
shl
mov
mov
add
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
cmp
jne
fdiv
jmp
push
call
fld
cmp
jne
fdiv
jmp
push
call
fsubrp
fnstsw
test
jne
push
fstp
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fcomp
fnstsw
test
je
mov
jmp
mov
mov
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fcomp
fnstsw
test
jne
mov
jmp
mov
mov
neg
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fnstsw
test
jne
call
push
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fnstsw
test
jne
call
push
fld
cmp
jne
fdiv
jmp
push
push
call
fmul
fnstsw
test
jne
call
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
fld
fcomp
fnstsw
test
je
mov
jmp
mov
mov
movsx
xor
cmp
sete
neg
mov
neg
and
mov
lea
call
movsx
test
je
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
mov
push
call
push
lea
push
call
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
sub
mov
cmp
jae
mov
jmp
call
mov
mov
mov
mov
mov
shl
mov
mov
add
push
mov
push
lea
push
call
push
push
call
add
lea
push
lea
push
push
call
add
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
push
call
push
lea
push
call
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
push
push
push
mov
push
fld
call
push
fld
call
push
fld
call
push
push
mov
push
call
mov
call
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
push
lea
push
call
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
mov
mov
sub
jo
mov
mov
mov
fwait
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
jmp
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
xor
push
push
mov
push
sub
mov
mov
mov
push
push
mov
mov
push
push
mov
mov
push
push
mov
mov
mov
call
push
lea
push
call
lea
push
push
call
add
push
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
lea
push
push
call
add
push
call
mov
lea
call
mov
mov
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
mov
mov
push
push
push
sub
mov
push
push
mov
mov
push
push
mov
mov
push
push
mov
mov
mov
call
lea
push
push
call
push
lea
push
call
add
push
call
lea
push
push
call
lea
push
push
call
add
push
call
push
lea
push
call
lea
push
push
call
add
push
call
mov
mov
mov
sub
mov
push
push
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
xor
lea
lea
mov
mov
call
mov
push
push
push
call
push
lea
push
call
push
call
add
lea
call
mov
push
jmp
lea
call
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
push
push
call
mov
mov
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
call
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
call
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
lea
mov
lea
push
lea
push
push
lea
push
push
mov
call
lea
lea
push
lea
push
push
push
call
add
jmp
cmp
jne
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
mov
lea
push
lea
push
lea
push
push
push
call
mov
add
cmp
je
cmp
jne
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
jmp
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
mov
push
lea
push
call
lea
push
lea
push
push
call
test
je
mov
test
jne
push
push
call
mov
mov
push
push
mov
call
lea
push
push
call
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
jmp
mov
lea
call
lea
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
lea
push
push
call
add
push
call
sub
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
mov
mov
mov
call
lea
push
push
call
push
call
lea
lea
push
push
push
call
add
lea
call
xor
jmp
mov
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
xor
test
lea
lea
sete
push
push
neg
push
mov
call
add
test
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
lea
lea
sete
push
push
neg
push
mov
call
add
test
je
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
jmp
xor
mov
cmp
jne
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
xor
test
lea
lea
sete
push
push
neg
push
mov
call
add
test
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
lea
lea
sete
push
push
neg
push
mov
call
add
test
je
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
test
fnclex
jge
push
jmp
xor
mov
cmp
jne
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
push
push
call
push
lea
push
call
push
call
add
lea
call
xor
mov
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
lea
push
push
push
call
add
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
xor
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
push
push
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
call
call
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
xor
mov
mov
cmp
setne
xor
cmp
setne
test
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
cmp
jne
push
push
call
mov
push
mov
mov
lea
push
call
mov
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
cmp
jne
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
test
je
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
test
fnclex
jge
push
push
push
jmp
mov
push
call
push
lea
push
call
mov
push
call
lea
push
push
call
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
call
xor
cmp
mov
mov
setl
mov
lea
neg
mov
push
lea
push
lea
push
push
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
push
push
lea
push
push
mov
mov
mov
mov
mov
mov
call
lea
lea
push
lea
push
lea
push
push
mov
mov
call
lea
push
push
call
push
lea
lea
push
lea
push
push
call
lea
push
push
call
push
call
lea
mov
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
cmp
je
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
jmp
mov
push
call
lea
push
push
call
mov
push
call
push
lea
push
call
mov
push
call
lea
push
push
call
mov
push
mov
lea
lea
push
push
mov
mov
call
lea
lea
push
push
call
push
call
call
fcomp
mov
fnstsw
test
je
mov
mov
lea
mov
mov
mov
push
mov
lea
push
lea
push
push
mov
mov
call
mov
lea
lea
push
push
call
push
call
call
fcomp
mov
fnstsw
test
je
mov
mov
push
mov
lea
lea
push
push
mov
mov
call
lea
lea
push
push
call
push
call
call
fcomp
fnstsw
test
jne
mov
jmp
xor
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
neg
neg
or
mov
neg
or
test
je
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
call
lea
lea
mov
mov
call
lea
lea
push
lea
push
push
lea
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
jmp
mov
push
call
lea
mov
push
mov
call
lea
call
mov
test
jne
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
xor
mov
fwait
push
jmp
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
mov
cmp
jne
mov
lea
push
push
mov
call
cmp
jge
push
push
push
push
call
cmp
jne
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
xor
lea
cmp
sete
neg
mov
call
test
jne
mov
lea
push
push
mov
call
test
jge
push
push
push
push
call
jmp
mov
mov
cmp
jne
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
xor
cmp
sete
neg
mov
lea
call
mov
push
test
je
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
jmp
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
mov
mov
mov
mov
mov
mov
call
mov
push
call
lea
push
push
call
lea
lea
mov
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
lea
call
lea
lea
push
lea
push
push
push
call
add
mov
push
jmp
lea
call
lea
call
lea
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
cmp
jne
fdiv
jmp
push
call
fadd
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
fld
fsub
mov
push
cmp
jne
fdiv
jmp
push
call
fnstsw
test
jne
fstp
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
lea
push
mov
call
lea
mov
lea
push
lea
push
push
push
call
add
lea
call
test
je
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
lea
push
push
push
call
add
jmp
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
mov
push
mov
call
lea
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
push
mov
sub
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
mov
call
mov
lea
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
mov
push
call
mov
fwait
push
jmp
lea
call
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
setle
xor
cmp
setge
test
jne
cmp
je
cmp
je
mov
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
push
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
push
mov
call
mov
lea
push
push
call
mov
lea
lea
mov
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
mov
push
lea
push
push
mov
mov
call
lea
lea
push
lea
push
push
mov
mov
call
lea
push
push
call
mov
lea
call
lea
call
lea
lea
push
push
push
call
add
lea
lea
mov
push
push
mov
call
test
je
lea
lea
push
lea
push
push
mov
mov
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
lea
mov
push
lea
push
push
mov
mov
call
lea
lea
push
lea
push
push
call
mov
lea
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
lea
mov
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
push
mov
lea
lea
push
push
mov
mov
call
lea
lea
push
lea
push
push
mov
mov
call
lea
push
push
call
mov
lea
call
lea
call
lea
lea
push
push
push
call
add
lea
lea
mov
push
push
mov
call
test
je
lea
lea
push
lea
push
push
mov
mov
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
push
mov
lea
lea
push
push
mov
mov
call
lea
lea
push
lea
push
push
call
mov
lea
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
mov
lea
lea
mov
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
mov
mov
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
call
lea
lea
push
push
push
call
mov
add
push
call
push
lea
push
call
mov
lea
push
lea
push
push
mov
mov
mov
call
lea
lea
push
lea
push
push
mov
mov
call
push
lea
push
call
mov
lea
call
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
lea
mov
push
push
mov
call
test
je
lea
lea
push
lea
push
push
mov
mov
call
mov
lea
call
mov
push
call
lea
push
push
call
mov
lea
mov
push
lea
push
push
mov
mov
call
lea
lea
push
lea
push
push
call
mov
lea
call
lea
call
lea
lea
push
push
push
call
mov
add
push
call
lea
push
push
call
lea
lea
mov
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
call
lea
lea
push
push
push
call
add
push
jmp
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
call
push
lea
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
mov
lea
call
test
je
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
call
mov
push
call
push
lea
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
call
mov
lea
neg
sbb
inc
neg
call
lea
call
test
je
mov
push
call
mov
lea
push
push
call
mov
push
mov
lea
lea
push
push
mov
mov
call
lea
push
call
lea
call
lea
lea
push
push
push
call
add
lea
push
call
mov
test
jne
push
push
call
mov
mov
push
call
lea
push
push
call
mov
lea
push
push
mov
push
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
mov
lea
lea
push
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
mov
add
test
jne
push
push
call
mov
lea
push
push
mov
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
mov
add
push
call
push
lea
push
call
lea
lea
mov
mov
mov
call
lea
push
call
fstp
push
lea
push
lea
push
lea
push
push
mov
call
mov
lea
lea
push
push
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
fwait
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
lea
push
call
lea
push
push
call
mov
add
push
call
push
lea
push
call
lea
lea
mov
mov
mov
call
lea
push
call
fstp
push
lea
push
lea
push
lea
push
push
mov
call
mov
lea
lea
push
push
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
mov
fwait
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
cmp
mov
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
call
push
lea
push
lea
push
lea
push
push
call
lea
push
call
mov
sub
fstp
mov
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
push
call
lea
call
lea
lea
push
lea
push
push
push
call
add
call
push
push
mov
push
call
push
lea
push
call
lea
push
push
call
mov
add
push
call
push
lea
push
call
lea
lea
mov
mov
mov
call
lea
push
call
fstp
push
lea
push
lea
push
lea
push
push
mov
call
mov
lea
lea
push
push
call
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
call
mov
fwait
push
jmp
lea
call
lea
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
mov
xor
mov
cmp
jne
cmp
jne
push
push
call
mov
lea
push
push
mov
mov
call
mov
push
push
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
jl
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ret
or
add
add
rol
or
loopne
or
lock
or
inc
or
or
or
push
les
add
or
xor
or
dec
les
add
sbb
add
or
jl
or
mov
or
call
add
les
add
add
hlt
les
add
add
and
add
push
lds
add
lds
add
add
dec
lds
add
or
jo
or
xchg
add
sub
or
xchg
lds
add
lds
add
lds
add
lds
add
add
test
add
(bad)
or
push
add
sbb
add
(bad)
or
cmp
or
dec
(bad)
or
ja
add
or
(bad)
or
fs
or
jbe
or
push
add
add
add
add
(bad)
(bad)
or
xor
add
hlt
(bad)
or
add
or
adc
or
and
or
xor
add
ds
or
push
(bad)
or
pop
(bad)
or
ins
(bad)
or
jp
or
mov
or
mov
(bad)
or
mov
add
(bad)
or
in
(bad)
or
add
or
push
enter
enter
enter
add
adc
add
pop
enter
enter
enter
add
or
add
mov
enter
enter
enter
enter
add
sub
or
dec
or
adc
or
and
or
xor
or
inc
leave
or
push
leave
or
leavew
or
je
or
lods
add
and
or
add
leave
or
mov
add
mov
add
adc
or
in
or
repnz
or
dec
or
push
retf
imul
or
and
or
xor
or
imul
add
push
retf
mov
add
ins
retf
jl
or
xchg
or
and
add
stos
retf
and
add
ret
add
retf
inc
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
dec
imul
je
popa
jb
add
pop
pop
jbe
popa
inc
jb
gs
bound
imul
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
push
gs
ins
add
add
jbe
popa
push
popa
jb
ins
jo
add
add
jbe
popa
inc
outs
jb
popa
arpl
outs
ins
ins
inc
add
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
popa
ins
gs
imul
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
push
popa
jb
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
push
je
inc
outs
outs
ins
add
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
dec
bound
gs
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
jbe
popa
inc
jo
cmp
add
pop
pop
jbe
popa
inc
outs
outs
ins
push
popa
jb
jne
ins
add
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
je
add
pop
inc
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
imul
add
add
pop
pop
jbe
popa
inc
jns
popa
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
inc
js
je
popa
arpl
outs
ins
ins
add
add
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
inc
popa
je
push
cmp
add
pop
pop
jbe
popa
push
jb
outs
je
bound
add
pop
pop
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
jbe
popa
push
popa
jb
jb
add
add
jbe
popa
inc
jns
jne
add
add
pop
pop
jbe
popa
inc
popa
jae
dec
bound
popa
jb
add
pop
pop
jbe
popa
push
je
push
xor
add
add
fs
data16
je
outs
add
add
jbe
popa
push
xor
popa
jb
add
add
jbe
popa
dec
popa
je
dec
fs
popa
ins
ins
dec
add
add
jbe
popa
push
arpl
imul
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
push
je
push
outs
push
outs
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
push
popa
jb
imul
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
add
pop
pop
jbe
popa
push
popa
jb
popa
je
add
pop
pop
jbe
popa
inc
popa
je
push
popa
jb
add
add
jbe
popa
dec
xor
jb
add
add
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
dec
outs
push
je
add
add
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
outs
je
add
pop
pop
jbe
popa
inc
jns
jne
dec
xor
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
dec
xor
je
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
pop
jbe
popa
push
cmp
jb
add
add
fs
imul
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
push
popa
jb
ins
jo
jno
add
pop
pop
jbe
popa
push
popa
jb
fs
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
add
add
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
inc
popa
jae
dec
bound
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
cmp
je
xor
add
add
jbe
popa
push
popa
jb
add
add
ins
ins
ins
jne
add
add
jbe
popa
dec
popa
je
dec
fs
je
add
pop
inc
dec
je
outs
add
add
pop
pop
jbe
popa
dec
gs
inc
popa
arpl
outs
ins
ins
inc
add
add
jbe
popa
push
dec
xor
jb
add
pop
pop
jbe
popa
inc
push
dec
outs
je
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
