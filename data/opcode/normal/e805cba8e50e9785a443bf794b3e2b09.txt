std
idiv
(bad)
call
push
mov
add
pop
ret
int3
or
repz
sub
inc
(bad)
mov
add
add
pop
pusha
outs
das
popa
pop
jb
xor
jne
jo
and
pushf
sbb
nop
outs
leave
nop
pop
mov
or
sbb
leave
test
inc
pusha
add
sti
mov
jo
sub
(bad)
xchg
push
mov
mov
mov
clc
push
call
idiv
mov
sub
add
inc
and
add
or
je
add
mov
pop
stos
fst
in
ret
jg
(bad)
and
bound
mov
pop
ja
inc
add
add
ds
push
and
cmp
test
ror
setne
ret
pop
xlat
sbb
loopne
mov
add
data16
add
ins
fucomip
cmp
push
outs
aam
or
out
cmp
xor
movq
sti
lock
cmp
jne
or
or
add
or
adc
ffreep
(bad)
push
dec
and
mov
lea
push
push
push
mov
stc
ds
movs
fmul
rcr
shl
xchg
push
push
mov
push
cmp
mov
pop
js
(bad)
jl
cmp
jb
push
xor
test
inc
lock
sti
nop
data16
xor
jb
sbb
(bad)
sub
push
lea
push
aam
xchg
loop
push
iret
loopne
xor
push
add
cmp
jb
adc
pusha
jmp
pop
pop
ret
or
mov
sub
push
push
push
mov
loope
(bad)
into
push
or
call
mov
push
mov
fwait
shl
test
adc
pop
pop
call
mov
push
push
push
xchg
not
xor
and
sbb
loop
inc
lock
mov
add
clc
loop
add
or
cmp
out
test
push
cmc
xchg
cdq
push
push
push
jae
mov
ins
cmp
or
push
jnp
xlat
scas
bound
mul
stos
mov
in
pop
sub
jmp
cwde
and
or
lock
(bad)
out
inc
and
cmp
jne
cmp
jne
add
pop
(bad)
jnp
or
rcr
sub
mov
adc
jne
(bad)
push
ret
push
add
arpl
or
in
lock
jae
sbb
jl
in
in
mov
lds
ins
push
push
push
call
add
push
pop
push
pop
mov
xchg
add
xor
jg
(bad)
inc
fisttp
mov
loopne
mov
mov
int3
icebp
sar
add
inc
cmp
jb
loop
mov
sbb
in
and
mov
rcl
or
push
call
jno
leave
push
mov
loop
and
jg
xchg
rol
pop
fs
cmp
cmp
adc
call
sub
add
call
loop
rol
sub
mov
jp
push
and
cmp
push
push
cld
mov
fild
inc
cmp
cmp
addr16
mov
jl
je
xchg
xor
ror
adc
push
ss
push
in
fwait
movs
shr
adc
and
sbb
inc
add
imul
out
out
sub
rcr
xchg
push
js
or
mov
call
imul
and
sub
mul
cmp
jo
pop
and
leave
cdq
add
adc
sar
mov
adc
mov
(bad)
mov
js
pop
or
add
xchg
adc
and
xor
cdq
cmp
ja
out
stc
imul
and
sbb
adc
jmp
jg
add
push
ret
xor
adc
test
or
sar
sar
into
lea
xchg
retf
mov
frstor
inc
jge
inc
add
add
jmp
lds
fdivr
xor
xor
(bad)
outs
not
sbb
mov
out
xor
test
imul
sub
mov
punpckhwd
sbb
stos
in
dec
hlt
call
push
jae
xor
mov
test
pop
mov
cld
xchg
xchg
adc
mov
lea
jg
fwait
add
inc
mov
inc
lahf
sub
lea
push
push
cld
loope
lock
mov
ret
add
adc
repz
or
jge
imul
test
and
adc
fiadd
idiv
xor
lahf
das
sbb
adc
adc
pop
mov
cmp
add
rol
add
xor
mov
fmul
scas
jecxz
push
and
in
cmp
jns
ins
ret
jno
loopne
adc
or
movs
push
sti
mov
mov
sahf
mov
adc
sbb
in
xchg
data16
aas
mov
xchg
and
cmp
in
(bad)
std
jb
ja
and
inc
adc
jg
dec
ja
jb
dec
cmp
out
pop
mov
add
pushf
mov
add
mov
dec
mov
dec
lahf
ret
cmp
jne
xor
inc
je
jl
jmp
pop
xor
inc
push
mul
fld
jge
imul
or
mov
cmp
test
addr16
shl
or
movlpd
in
jnp
mov
div
lea
dec
pop
js
xlat
ds
or
mov
jp
inc
push
sub
cmp
(bad)
sbb
sbb
nop
add
out
mov
mov
jo
adc
ret
movs
pusha
dec
repnz
push
or
add
xchg
cmp
test
aaa
cmp
jae
mov
(bad)
lds
add
in
add
jmp
mov
adc
ror
sub
mov
shl
jb
jo
mov
cmp
dec
mov
test
jmp
(bad)
or
inc
xor
stos
jbe
ret
je
xor
out
mov
mov
adc
xor
cmp
fisubr
sbb
add
ins
adc
ret
and
push
jmp
ins
fimul
sbb
jmp
mov
cmps
mov
test
mov
push
push
sbb
sbb
xor
sub
cmps
outs
push
mov
push
fld
push
pop
jl
or
pop
cwde
imul
fdivr
cmovb
movs
pop
and
or
idiv
and
add
pop
add
pop
ret
jb
pop
mov
add
mov
inc
ja
sub
outs
xor
test
and
jo
jbe
lea
add
dec
call
int3
aaa
(bad)
icebp
ds
push
int3
test
lds
adc
mov
inc
add
mov
stos
pop
pop
jo
add
jl
int3
lods
repz
push
push
ins
sbb
and
dec
add
mov
sahf
jns
push
push
ins
push
cmp
mov
lahf
cld
bound
mov
lea
mov
add
add
cmc
sub
mov
call
out
add
or
loop
nop
shl
or
push
xlat
cmp
push
xchg
or
sub
dec
jl
push
bound
xor
mov
test
je
mov
push
lea
sti
ss
ret
retf
mov
sub
xor
clc
bound
lahf
cmp
push
push
(bad)
adc
add
scas
inc
jbe
or
je
jne
(bad)
push
xor
je
imul
push
adc
je
sbb
aas
mov
push
mov
xchg
push
sbb
mov
or
push
ffreep
mov
sbb
or
and
xor
push
addr16
mov
push
cmp
sub
or
mov
mov
loopne
ud0
pop
sbb
jp
rol
out
push
or
push
or
scas
adc
add
jbe
pop
push
xor
leave
xor
dec
push
mov
leave
mov
jecxz
adc
(bad)
ja
jne
stos
add
mov
pop
loopne
shl
mov
mov
fistp
or
out
push
push
ret
out
stc
xchg
jl
mov
jp
push
cmp
lock
test
xor
pop
pop
out
pop
(bad)
push
push
push
mov
xchg
and
mov
and
mov
pop
push
xor
cli
pop
test
sbb
sbb
data16
ds
(bad)
cmp
in
mov
inc
cmp
out
loope
jb
not
adc
xor
mov
jmp
mov
mov
sti
ds
sbb
or
(bad)
fbld
mov
retf
shr
shl
or
loop
sbb
add
add
loopne
or
out
in
mov
xchg
test
add
shr
fsubr
enter
add
sub
aad
jmp
xor
add
jb
cmp
add
mov
jo
mov
out
adc
xor
retf
and
and
sbb
adc
pop
lea
xor
sub
or
call
cdq
out
xor
jl
mov
ret
sti
lods
lods
js
add
or
je
(bad)
pop
pop
mov
shl
lods
or
ret
shl
loopne
stos
adc
or
retf
sub
(bad)
fld
mov
fistp
(bad)
ror
cmp
es
loop
sbb
push
mov
nop
neg
inc
cmp
jne
mov
inc
cmp
jb
or
hlt
jne
les
sbb
mov
mov
or
js
dec
out
sub
add
cmp
lea
xchg
jge
das
push
push
pusha
inc
mov
mov
xchg
cmp
jne
pop
or
hlt
inc
jle
pop
push
adc
push
mov
enter
movs
shl
dec
push
inc
or
add
ss
pop
dec
inc
cmp
cs
push
sahf
add
xchg
lahf
adc
fisub
adc
mov
inc
jecxz
add
sub
dec
inc
inc
adc
pop
add
cmp
add
add
adc
out
push
inc
mov
retf
adc
or
push
ret
pop
xchg
xor
dec
icebp
mov
pop
je
lea
retf
retf
bound
push
mov
icebp
or
sahf
dec
or
add
or
pop
xor
push
test
cli
fadd
lods
aas
imul
out
cmp
jle
push
push
xor
cs
add
adc
pop
(bad)
clc
adc
push
push
pop
frstor
push
add
xor
or
movs
push
sub
xchg
adc
and
idiv
jnp
adc
add
inc
jne
arpl
jbe
pop
cld
pushf
cmp
jae
sbb
sub
push
add
jb
cmp
clc
cmp
jp
test
dec
ja
fisttp
(bad)
(bad)
mov
dec
add
pop
or
mov
lods
call
imul
nop
out
adc
xor
arpl
sub
popa
les
jmp
push
or
lea
lea
or
daa
inc
jl
and
and
mov
jl
or
sbb
daa
cld
pop
call
xor
or
xchg
sbb
pop
jae
(bad)
pop
cmp
jns
aas
jp
sub
push
pushf
pop
aaa
push
js
sub
mov
mov
sub
cmp
rol
add
mov
jle
inc
or
test
mov
call
push
js
(bad)
out
mov
add
adc
mov
xchg
retf
in
adc
je
sub
inc
fs
cmp
or
adc
popf
mov
les
mov
dec
cld
mov
push
xor
ret
push
loope
sbb
adc
push
xor
jp
mov
and
leave
movs
aas
iret
sub
movq
ins
xchg
cmp
pop
clc
div
popa
xor
sbb
mov
out
jo
adc
add
push
adc
mov
push
pop
pop
sbb
mov
neg
lock
mov
ja
bnd
adc
push
mov
je
sub
ret
mov
or
bound
hlt
jmp
sbb
fnsave
jl
test
lods
and
fistp
retf
and
loope
and
or
pop
in
fcmovb
adc
jbe
cmp
jae
sub
push
or
push
ficomp
pop
enter
js
sub
enter
sti
or
add
inc
gs
mov
add
pop
xor
jnp
pop
cmp
cmp
xchg
xchg
into
mov
pop
std
or
scas
sbb
cli
(bad)
xlat
push
mov
test
pop
int
cmp
jne
out
sbb
jl
add
xor
cmp
jl
dec
(bad)
cmp
jbe
sahf
lea
rcl
dec
push
or
or
inc
and
std
ret
or
ds
cmp
mov
jne
push
dec
mov
stos
mov
or
sbb
xchg
pop
imul
gs
mov
mov
adc
cmp
jne
mov
(bad)
mov
add
xor
popa
mov
jmp
pop
outs
out
cmp
cmp
adc
inc
dec
scas
add
inc
push
sub
or
pop
adc
nop
cmp
push
mov
inc
inc
pop
sub
jmp
mov
(bad)
(bad)
lahf
mov
cli
push
push
sar
xchg
(bad)
out
or
movzx
push
das
xchg
sbb
sbb
push
adc
cmp
(bad)
pop
(bad)
aas
mov
sub
dec
sub
inc
dec
xor
inc
adc
call
fst
sub
adc
pop
add
sbb
stos
das
and
pop
jne
jns
inc
jg
pop
out
pushf
xor
jmp
push
in
sbb
push
add
jmp
stc
mov
hlt
pop
ins
inc
xor
xor
(bad)
or
mov
mov
hlt
push
adc
or
mov
xor
cmp
sbb
xor
sbb
adc
push
xor
neg
sbb
lock
pop
push
popa
mov
push
mov
inc
pop
xchg
pop
movs
pop
sbb
lahf
cmp
inc
add
shr
mov
adc
mov
aas
mov
add
push
push
loop
or
jns
cmp
outs
test
add
data16
jp
cli
in
jg
cmp
je
mov
jbe
test
cmp
mov
jp
inc
ret
adc
adc
jmp
je
es
call
pop
cmp
cmovb
push
imul
xchg
adc
pop
jne
popf
popa
jne
fdivr
cwde
sub
lock
pop
and
mov
sbb
mov
and
sbb
cmp
xor
xor
push
ins
jo
js
ja
pop
push
jl
adc
jae
lock
(bad)
outs
mov
jmp
and
xchg
add
xor
dec
int3
mov
cmp
jge
mov
icebp
xlat
dec
adc
dec
adc
adc
sar
test
stos
add
adc
fidivr
int
adc
dec
inc
loopne
or
xchg
pop
mov
xchg
movs
mov
pushf
adc
and
cmp
ret
aaa
scas
dec
push
pop
push
push
sub
jne
xchg
push
fs
das
jecxz
mov
pop
mov
out
hlt
mov
test
push
sub
hlt
jo
sub
cmp
popa
add
or
cli
test
or
add
sub
adc
push
mov
cld
and
mov
adc
sbb
pop
or
movups
imul
ds
es
push
outs
push
push
ds
add
jne
push
jo
gs
pushf
mov
(bad)
fimul
inc
adc
jmp
push
fmul
fistp
int3
and
pop
ins
sti
ret
push
jns
adc
or
sbb
and
out
cmps
or
test
fnstsw
data16
mov
cli
lea
or
jmp
ret
mov
sub
sub
mov
lea
out
icebp
sbb
dec
fs
or
inc
jle
int
push
je
lea
sbb
test
(bad)
(bad)
das
adc
sub
lds
push
inc
fs
loop
shl
das
push
jg
push
sbb
or
cmp
push
push
call
jmp
lahf
adc
repnz
push
jae
xchg
test
mov
jg
lea
inc
inc
dec
sbb
daa
add
adc
xlat
mov
sub
jne
mov
or
push
push
add
mov
lea
xor
jno
pop
adc
inc
push
hlt
dec
shl
pop
inc
cs
push
or
adc
int
(bad)
aad
jecxz
shl
aam
test
bound
or
mov
(bad)
js
je
imul
add
inc
xchg
js
jns
pop
in
add
xor
dec
in
add
or
jp
cmp
dec
jmp
adc
ja
mov
push
sbb
movs
push
or
or
sbb
mov
aaa
shl
mov
cmp
jne
dec
jmp
in
push
push
cmp
clc
retf
push
outs
xor
jns
xchg
ds
mov
pop
add
pop
call
leave
and
mov
or
push
inc
test
aas
push
aad
mov
call
pop
pop
add
mul
into
dec
outs
pushf
stos
pop
add
fcomip
add
out
mov
mov
push
jo
jmp
je
lea
push
add
xchg
aaa
shl
dec
cmp
lock
jmp
mov
sbb
pop
mov
sbb
add
jbe
sub
sub
or
jmp
sub
cs
adc
adc
dec
je
movs
call
sahf
ror
add
je
cli
(bad)
adc
sbb
loopne
mov
xchg
rcr
pop
mov
lods
sbb
push
push
lea
dec
pop
sbb
push
jmp
lock
int3
idiv
cmp
jbe
inc
shl
sbb
add
jecxz
fcomip
outs
jae
movzx
dec
es
aas
inc
vpsubsb
push
ss
and
push
nop
shr
lods
sub
jo
mov
push
and
jns
push
pop
dec
pusha
dec
out
(bad)
aam
push
bound
pop
jmp
aam
adc
test
and
pop
xchg
(bad)
xor
daa
jne
mov
icebp
jmp
mov
cli
cmp
push
cli
icebp
out
in
jge
lock
mov
sbb
jne
xor
push
cmp
mov
stc
ror
test
jno
or
ret
pop
pcmpeqw
or
mov
push
scas
or
pop
in
mov
mov
push
ror
rol
or
jl
(bad)
cmps
and
and
dec
sub
jne
or
pushf
sub
addr16
sub
(bad)
in
lds
daa
pop
jb
jne
inc
fistp
jge
test
xchg
sbb
mov
out
push
cmc
jmp
and
movzx
neg
sbb
xchg
add
sbb
xor
add
lea
add
xchg
push
movsx
push
xor
clc
movs
daa
cmp
add
ja
push
(bad)
test
dec
(bad)
fst
jnp
loopne
out
push
push
cmp
stc
sub
test
or
and
jmp
add
sbb
cmp
imul
adc
es
pop
jns
cmp
and
and
cmps
std
pop
inc
dec
fiadd
enter
lea
add
xchg
dec
int3
or
mov
repnz
add
imul
sub
xchg
out
call
mul
mov
inc
xor
pop
mov
sub
pop
pop
pop
push
(bad)
jnp
add
std
test
add
or
ja
into
xchg
mov
mov
(bad)
ins
jne
cmp
mov
add
inc
enter
test
cmp
test
rol
test
push
aad
and
mov
shr
sub
mov
lea
xchg
push
dec
clc
ins
sbb
ss
push
push
les
cmp
fwait
es
adc
xchg
out
ret
lock
int3
mov
cdq
or
inc
cmp
add
repz
ret
push
retf
xor
mov
add
pushf
jmp
and
pop
xchg
fisub
scas
sbb
mov
push
imul
and
mov
sbb
test
mov
push
lea
scas
inc
loopne
(bad)
imul
xor
(bad)
je
push
cmp
mov
enter
push
push
push
(bad)
je
cmp
mov
cs
loopne
xor
movs
imul
add
sbb
sbb
xor
adc
cld
fld
aaa
or
rcr
rcr
or
adc
push
xor
cmp
lods
xor
push
or
mov
neg
push
popa
jb
and
xor
sar
mov
cmp
je
inc
push
arpl
mov
dec
enter
loop
pop
pop
sub
dec
pop
pop
faddp
dec
add
or
jecxz
out
cmps
inc
mov
jne
mov
inc
xor
(bad)
jae
inc
inc
repz
inc
pop
pop
add
je
pop
shr
loopne
pop
jae
push
movs
aas
or
mov
rol
enter
mov
jmp
sub
loop
pop
adc
xor
add
inc
adc
retf
sbb
clc
jmp
pop
and
xor
lods
jg
dec
xor
nop
test
mov
or
cmp
inc
or
or
cmp
je
push
jnp
or
or
jne
mov
adc
sbb
cmps
aad
mov
int
pop
and
push
pop
xor
or
call
push
fdivr
or
or
call
daa
fdivp
inc
push
add
push
shl
and
pop
xor
mov
sahf
cmc
adc
mov
lock
add
arpl
clc
push
push
mov
pushf
add
div
push
js
lock
sbb
add
adc
popf
test
daa
dec
xlat
xor
mov
pop
ret
push
sbb
lods
inc
outs
jne
jns
shr
inc
loope
lahf
mov
adc
test
jne
pop
cmp
cmp
je
cld
push
xlat
pusha
xlat
dec
repnz
mov
sub
sbb
adc
loop
cmp
or
ins
adc
movs
xor
add
ins
push
add
inc
add
push
test
add
xchg
lea
cwde
ficomp
pop
ror
retf
add
js
sub
cmp
pop
inc
mov
pop
and
add
and
or
pop
adc
xchg
jo
adc
and
mov
pushf
fdiv
adc
cmp
dec
in
adc
mov
pushf
dec
mov
ins
shl
ds
sub
xor
add
pushf
out
and
mov
or
fsub
call
or
mov
mov
daa
scas
push
mov
inc
or
jno
aaa
sbb
ficom
and
mov
push
and
adc
repnz
cdq
and
jne
add
xchg
or
and
and
std
push
xor
push
mov
jle
xlat
leave
xchg
fidivr
je
sub
js
pop
outs
cmp
jmp
inc
js
cdq
push
popw
ja
push
inc
add
pop
pop
inc
sub
rol
xchg
inc
popf
shl
lahf
add
pushf
pop
push
adc
push
dec
or
inc
jo
test
sub
test
mov
push
iret
jle
add
(bad)
retf
cmc
xchg
xchg
(bad)
lods
push
cmp
sahf
mov
outs
add
mov
mov
fldl2t
cmp
inc
push
(bad)
in
sub
jnp
popf
jle
push
xor
mov
in
jnp
xchg
cmp
mov
mov
mul
mov
ror
pop
or
call
loope
sub
xchg
popa
xchg
jmp
ror
sub
ss
outs
jecxz
ds
xlat
cs
push
lock
movs
push
cwde
and
bnd
or
ss
adc
sbb
jge
pop
mov
push
push
ficom
scas
sbb
iret
or
push
rol
push
adc
mov
xor
jmp
jle
pop
icebp
mov
leave
jne
in
pop
ret
mov
dec
cmp
fadd
mov
in
cli
xor
js
sub
(bad)
retf
and
adc
cmp
jne
push
sub
pop
add
mov
aas
and
je
addr16
xor
scas
add
adc
out
neg
lods
or
cmps
xchg
test
out
pop
inc
and
adc
or
cmp
sbb
inc
xor
or
and
dec
dec
pop
lock
mov
push
push
cwde
pcmpeqb
push
inc
push
dec
loopne
loopne
sbb
(bad)
pushf
jle
gs
sbb
arpl
aad
jmp
icebp
jle
and
loopne
add
dec
jnp
jge
clc
and
xchg
mov
outs
pop
sbb
lods
add
por
or
add
xor
jmp
int3
adc
icebp
dec
(bad)
mov
add
pop
ins
mov
sbb
mov
pusha
xor
mov
shr
and
adc
pop
inc
mov
xchg
inc
inc
pop
leave
rol
into
dec
inc
jo
sbb
and
mov
pusha
or
adc
push
icebp
popa
sbb
sub
test
xor
mov
jmp
(bad)
cmp
and
pop
sbb
into
mov
push
push
add
and
add
mov
inc
or
cmp
je
outs
inc
mov
stc
ins
inc
mov
dec
add
dec
movs
and
or
dec
xchg
out
test
push
je
pop
mov
(bad)
(bad)
and
aas
add
movs
dec
ins
fisub
js
rol
mov
adc
loope
rcr
add
test
push
inc
aad
xchg
and
mov
xor
add
pusha
mov
fst
jg
push
fdiv
cld
add
pop
ret
dec
add
in
rcl
jae
cmps
sub
push
mov
cmp
in
add
inc
inc
adc
rcl
icebp
adc
cmp
mov
or
cmp
fwait
movs
push
add
lods
adc
out
add
push
movaps
mov
(bad)
pop
loope
adc
movs
mov
clc
mov
or
or
aaa
mov
add
retf
in
ins
sbb
(bad)
cmp
push
imul
adc
shl
adc
popf
out
mov
jo
or
cli
test
fiadd
jl
enter
mov
push
jne
add
pop
sahf
fisubr
dec
je
push
jmp
or
mov
add
push
mov
imul
ins
and
add
pop
adc
jno
in
pop
or
add
add
add
jg
inc
mov
dec
adc
jo
icebp
sbb
cld
and
adc
push
sub
repnz
sub
in
and
or
and
ficom
test
pop
mov
lea
in
jge
jnp
sub
ror
ja
and
or
mov
fisttp
mov
outs
out
inc
fmul
pusha
mov
or
jg
shr
adc
or
adc
mov
mov
dec
and
(bad)
bnd
movs
push
jo
adc
mov
xor
test
fld
inc
test
or
inc
inc
jmp
adc
ror
js
mov
icebp
outs
mov
or
push
aam
mov
loop
sbb
dec
and
push
pop
pop
rol
lahf
paddw
inc
pop
lock
dec
shr
mov
mov
lea
add
add
gs
pop
loope
gs
lahf
or
(bad)
push
test
loopne
xchg
cld
int3
pop
jp
das
(bad)
out
inc
sub
mov
ret
mov
iret
xchg
icebp
adc
inc
inc
adc
es
mov
sbb
mov
add
pop
and
mov
das
and
test
or
adc
popa
and
inc
js
inc
jno
dec
call
fsubrp
or
dec
shl
push
inc
dec
pop
das
aam
add
cmp
inc
mov
cmp
xchg
push
mov
push
mov
lock
fnstenv
or
ret
jmp
cdq
inc
fisttp
add
dec
dec
push
xor
(bad)
fmul
imul
push
push
cmps
push
ds
fsubr
mov
jle
or
or
in
in
hlt
add
inc
sbb
(bad)
push
dec
xchg
inc
mov
sbb
mov
add
cmp
or
mov
pop
fcomp
lea
ins
sbb
pop
add
and
repnz
cmp
aas
inc
ins
push
add
mov
or
(bad)
(bad)
mov
or
adc
loopne
push
or
out
sbb
pop
ret
xor
int3
fist
push
ds
retf
jmp
jno
fiadd
xor
xchg
les
sub
cli
sti
movs
dec
sbb
shl
fidivr
dec
sub
xchg
les
push
sahf
daa
pushf
pushf
jae
ins
xor
outs
inc
cs
daa
push
ja
jmp
jmp
adc
or
or
outs
ror
and
adc
and
mov
scas
xor
or
or
jmp
mov
std
sub
leave
cmp
mov
cmovne
inc
and
mov
and
jg
fwait
pop
and
jne
jecxz
ror
pusha
or
stos
xchg
int
xor
pop
dec
inc
sub
cld
dec
mov
adc
adc
and
ins
mov
xchg
inc
inc
sahf
and
mov
pop
xchg
jbe
or
jg
ss
mov
pop
add
or
pop
push
call
fmul
(bad)
mov
adc
mov
test
stos
sti
add
adc
pop
mov
mov
cmp
mov
mov
and
and
mov
les
pushf
stos
xor
cmp
xor
stos
or
mov
push
push
cli
mov
sbb
mov
push
push
xor
jmp
int3
adc
adc
enter
mov
mov
loope
daa
daa
cmp
xchg
adc
fs
jl
cmp
push
push
test
jle
inc
fdivr
jmp
ret
sbb
cmp
push
cmp
inc
push
push
fld
xor
cmp
std
and
ja
call
dec
sbb
xchg
cmp
jle
mov
push
push
add
loopne
movs
sbb
retf
inc
dec
add
push
cmp
cmp
xchg
sbb
and
dec
rcr
inc
xor
(bad)
cmps
inc
pushf
or
jg
add
mov
add
enter
dec
or
or
test
xchg
aad
sbb
sbb
stos
pop
cs
mov
mov
mov
or
mov
mov
sbb
inc
sub
or
sub
mov
jno
gs
add
shr
punpcklbw
aas
ret
dec
sbb
push
jnp
inc
loopne
cmp
pop
push
test
dec
push
call
ret
or
inc
cld
les
(bad)
xchg
(bad)
jne
div
push
(bad)
pop
int
out
jp
int
jge
mov
fistp
je
dec
fistp
jno
mov
mov
mov
adc
ds
add
lock
dec
push
rol
adc
push
test
pop
and
pusha
inc
mov
push
push
repnz
aas
pop
repnz
iret
inc
dec
adc
cmp
add
add
out
fs
cmp
jne
inc
push
lahf
xor
sbb
movs
inc
daa
mov
icebp
popa
xor
push
pop
enter
lock
pop
cs
push
cmp
sbb
sbb
jmp
int3
(bad)
push
push
and
dec
and
je
jmp
ds
jl
cmp
pop
and
adc
ret
push
inc
inc
inc
iret
cmp
xchg
in
scas
repnz
mov
test
mov
inc
inc
lods
mov
mov
dec
add
add
pop
adc
test
test
mov
push
push
add
sahf
xchg
mov
fmul
mov
cli
adc
ins
shr
mov
and
add
adc
mov
dec
adc
adc
rcr
adc
pop
jbe
icebp
xchg
push
mov
or
sbb
sub
lahf
push
jge
mov
(bad)
pop
dec
adc
inc
ja
jo
mov
or
js
aam
hlt
fcmovnu
jp
lock
cmp
fdiv
pop
push
test
push
sahf
(bad)
or
ss
or
sbb
adc
js
retf
or
popf
(bad)
je
jp
sub
add
add
xor
push
push
push
mov
mov
xchg
aas
shr
call
jle
sub
fs
inc
mov
add
adc
dec
cmp
push
pop
xchg
push
mov
lods
sar
sbb
popf
scas
or
mov
mov
cmp
jg
add
or
mov
out
je
int
jge
pop
xor
in
mov
pop
lock
lock
add
add
loopne
xor
data16
inc
and
or
xor
and
or
sti
mov
push
cld
out
push
aaa
xchg
pop
add
and
bound
add
inc
xor
daa
mov
pushf
add
ret
daa
icebp
lods
jg
test
je
push
or
fcom
push
es
and
dec
ins
arpl
aas
repz
adc
dec
out
sbb
sub
add
push
xchg
aaa
push
push
pop
(bad)
sub
mov
les
test
in
add
pop
push
pop
ss
hlt
push
add
fbstp
in
pop
sub
outs
xchg
adc
or
and
and
(bad)
les
sbb
sbb
mov
push
add
add
adc
pop
adc
and
scas
xchg
jo
push
xchg
xor
xor
or
add
dec
inc
mov
xor
lahf
xchg
push
adc
dec
enter
sub
push
movs
pop
repz
mov
sbb
fistp
stos
lock
adc
lea
outs
add
mov
sbb
or
or
inc
mov
sbb
sahf
adc
int3
jno
loope
xor
(bad)
repz
dec
and
cmp
jbe
pop
scas
js
mov
and
(bad)
call
stos
dec
sub
sar
cmp
push
sbb
neg
cmp
cmovb
pop
add
imul
nop
mov
dec
(bad)
cmp
mov
add
mov
fisttp
test
or
adc
adc
jg
retf
adc
push
inc
jg
(bad)
ror
inc
enter
cmp
jne
xchg
mov
inc
cs
clts
jmp
jg
fnstenv
leave
and
lea
or
xor
addr16
mov
jl
mov
movs
pop
popa
pop
cdq
in
jb
dec
pushf
sbb
or
mov
mov
lock
adc
jge
sbb
leave
dec
mov
cmp
mov
sub
mov
je
(bad)
mul
jge
inc
inc
sbb
std
xchg
test
nop
mov
je
ins
mov
mov
mov
fld
jne
ret
sahf
jle
pop
mov
push
cmp
dec
(bad)
int3
sahf
xor
ins
cmp
cmp
out
inc
push
das
mov
mov
js
outs
xor
mov
sub
gs
aaa
int
mov
mov
cmp
dec
cld
adc
xor
inc
adc
mov
imul
ficom
sbb
sbb
sbb
add
call
cmp
mov
xor
or
add
nop
dec
mov
xchg
cs
lock
adc
outs
sbb
mov
in
js
mov
xchg
retf
in
retf
mov
dec
mov
sahf
(bad)
call
ds
pop
mov
pop
out
pop
retf
shl
in
popa
xor
call
mov
ja
inc
sbb
mov
xchg
aaa
outs
pop
ins
outs
cmp
inc
sbb
push
mov
sub
test
scas
inc
ja
xor
push
dec
mov
jns
fs
(bad)
es
push
cmp
jle
mov
and
or
bound
imul
or
aas
mov
push
add
popa
(bad)
lea
ficom
add
or
xor
or
jmp
sar
jne
test
pop
mov
ins
dec
pop
push
ret
fisub
int3
out
clc
mov
jmp
aas
pop
xor
and
add
push
inc
adc
leave
and
push
and
ss
push
jge
jmp
fist
jnp
cmove
cmp
je
repz
mov
sub
shl
adc
sub
ins
and
and
or
jle
mov
(bad)
lock
pop
mov
pop
cmc
inc
inc
enter
and
lods
dec
dec
cmp
dec
pop
shl
push
push
lock
ja
leave
xchg
add
bswap
fwait
test
pop
in
add
xchg
loop
in
pop
sbb
push
mov
test
aas
adc
shl
out
push
mov
test
aam
arpl
push
ins
ins
lock
fstp
pusha
retf
and
and
bound
and
dec
retf
and
and
and
cmp
mov
push
jno
sbb
xor
jmp
inc
sbb
cmp
mov
setge
dec
inc
test
shl
rcr
cs
pop
cwde
cmps
jno
hlt
adc
mov
lea
push
add
rcr
loope
and
sahf
jno
adc
dec
mov
xlat
add
mov
cmp
jecxz
sub
dec
xor
loope
outs
or
mov
mov
sub
(bad)
popf
or
sahf
arpl
ins
and
mov
aaa
pop
xor
xor
lea
mov
lods
shl
or
xor
pushf
cmp
pop
test
xchg
cmp
push
jg
cmp
cmps
adc
push
mov
(bad)
(bad)
cmp
or
add
mov
or
pushf
lea
push
inc
xchg
dec
or
es
sub
sbb
ja
adc
xchg
add
mov
mov
mov
push
mov
sub
add
scas
iret
gs
or
and
sbb
cmp
mov
xlat
or
pushf
mov
adc
sbb
imul
out
add
mov
jo
popf
mov
int
or
fisttp
retf
push
jb
push
pop
fcom
or
push
les
neg
or
mov
push
sub
pop
int
and
push
dec
mov
cmc
add
jp
xchg
push
in
pop
js
mov
mov
repz
add
jne
mov
rcr
push
adc
push
pop
sbb
xor
scas
sbb
ror
sbb
mov
mov
and
inc
jl
adc
xor
hlt
dec
sbb
jg
scas
lds
xchg
int
add
invd
ret
pop
pusha
sbb
xchg
and
das
and
dec
cmp
push
loopne
push
mov
inc
shr
popa
mov
shl
pop
adc
pop
and
xchg
and
(bad)
movs
test
sub
xchg
jmp
pop
jo
inc
xchg
sbb
mov
addr16
inc
adc
adc
mov
das
ror
addr16
out
pop
rcr
sbb
sbb
push
mov
icebp
inc
inc
fmul
vunpckhps
repnz
and
mov
jmp
mov
and
mul
add
sbb
and
ror
inc
in
aas
add
jb
pop
or
mov
movs
inc
(bad)
mul
imul
or
add
xchg
xor
sbb
adc
xchg
(bad)
paddq
dec
mov
(bad)
inc
jbe
adc
sub
push
xor
or
jge
adc
dec
adc
xchg
adc
js
mov
push
fadd
ror
std
and
sbb
mov
pusha
xor
aam
lea
and
lahf
sub
dec
jmp
mov
add
add
adc
mov
(bad)
jne
push
add
jge
cld
sub
adc
dec
rol
rcl
add
jae
cmp
mov
mov
cmp
daa
adc
je
mov
inc
add
out
cmps
mov
add
jne
push
lea
das
or
or
daa
xchg
or
jns
movs
dec
xlat
xchg
clc
lock
sub
adc
sub
or
push
enter
rol
rol
or
pop
cmp
outs
mov
mov
push
xor
cmp
adc
aam
imul
sbb
push
cmps
gs
inc
in
push
mov
das
jmp
sbb
jo
pop
cmp
sete
popa
inc
push
push
xchg
shl
in
(bad)
xor
or
xor
or
xor
and
push
mov
mov
push
sbb
jecxz
mov
xor
inc
ror
and
scas
mov
jae
pop
nop
cwde
sbb
movs
inc
add
inc
icebp
inc
movs
add
inc
mov
push
mov
out
xchg
mov
push
pop
or
lea
push
loopne
xor
jbe
cmp
dec
sbb
sbb
dec
(bad)
push
lea
call
add
and
sub
mov
sahf
popf
cmp
out
inc
sub
rcr
stos
or
dec
adc
daa
sub
pop
cmp
shr
xchg
push
add
mov
popa
jl
push
add
mov
pop
out
mov
mov
ins
cmps
mov
ret
xchg
xchg
ss
shl
or
push
lahf
dec
jp
mov
lea
adc
lock
jno
inc
mov
fcmovnu
inc
clc
adc
inc
std
in
iret
ja
out
jl
jmp
test
jle
sub
loope
lahf
pop
pushf
sbb
and
popa
lods
outs
xchg
mov
xor
xor
sbb
pop
mov
call
sar
inc
scas
mov
jl
dec
test
inc
dec
fstp
cli
xchg
in
cmp
dec
sub
push
loopne
aas
jae
xchg
(bad)
or
stc
jl
jecxz
pop
inc
adc
(bad)
fcomp
push
xchg
sbb
mov
xor
push
cmp
ins
bound
push
add
or
add
push
mov
ret
push
test
xchg
inc
dec
mov
clc
dec
mov
adc
xchg
test
or
movs
ins
fcmovne
xchg
pusha
pop
mov
push
or
jne
js
or
push
call
rol
ret
movs
fxam
inc
mov
jno
cmp
test
xchg
fcmovu
jmp
dec
push
sub
push
sti
xchg
cld
mov
push
push
(bad)
push
dec
lods
dec
gs
and
je
add
xchg
mov
pop
in
dec
xor
mov
or
lea
mov
inc
or
push
aaa
pop
hlt
cmp
jp
mov
push
sbb
push
pop
sub
mov
inc
cmp
fst
inc
and
dec
mov
add
adc
sbb
sub
imul
lods
aas
or
add
int
inc
jmp
mov
adc
pop
mov
mov
push
push
push
out
sub
cmp
fwait
xchg
je
cmp
cmp
sub
adc
sbb
pusha
(bad)
xchg
js
test
je
lea
add
sbb
and
lods
adc
pop
xor
cmp
or
add
sar
mov
adc
adc
mov
repz
inc
add
out
mov
adc
mov
pop
mov
addr16
jb
jo
dec
sbb
inc
sub
pusha
pushf
sub
jmp
lea
push
clc
and
cmc
mov
lahf
cmp
aaa
dec
stos
popa
aas
add
mov
pop
add
xchg
pushf
or
inc
add
add
test
and
aas
nop
mov
mov
repz
xchg
add
sbb
push
adc
enter
add
and
and
and
and
les
sbb
pop
add
xchg
xor
and
jp
xor
xchg
mov
lahf
test
pop
pop
pop
stos
pop
push
daa
xchg
inc
sub
inc
lods
test
add
jae
jle
sub
mov
es
test
push
push
cmp
and
or
adc
push
or
cmp
clc
xor
sbb
adc
mov
dec
data16
dec
repz
mov
cs
adc
(bad)
retf
xor
mov
adc
add
fimul
dec
pop
pushf
and
pushf
xchg
cmp
lea
push
jmp
inc
fdivr
inc
adc
add
loopne
(bad)
(bad)
mov
shl
outs
gs
mov
daa
xor
neg
pusha
pusha
xor
cwde
add
sub
adc
add
jbe
aad
pop
add
add
and
ds
aas
mov
sbb
dec
or
cmp
sub
int3
(bad)
xchg
int3
and
mov
add
add
push
add
jg
inc
daa
push
shl
rcr
push
add
xor
jns
push
inc
leave
adc
lea
adc
jl
mov
and
inc
mov
inc
aaa
aam
add
or
adc
sbb
sub
push
ins
cmc
xor
shl
shr
adc
inc
dec
adc
cmp
movs
in
out
cli
mov
xchg
push
ins
repnz
sub
or
mov
sub
cwde
adc
dec
mov
ss
cmp
inc
dec
add
imul
repz
xor
test
cld
cmp
call
dec
test
aas
call
jmp
jg
jmp
js
sbb
repnz
mov
ror
sbb
retf
dec
ror
pop
repz
div
xchg
cmp
cmp
sub
ror
sbb
and
jbe
pop
pop
in
add
lock
sahf
sbb
fbstp
or
pop
cmp
jne
int
sti
or
add
sub
and
aaa
or
sbb
jmp
push
push
pop
shr
ins
jo
sbb
xor
sahf
je
pop
(bad)
(bad)
cli
sub
mov
pop
jae
inc
or
hlt
pushf
hlt
push
je
inc
adc
cmp
mov
adc
aas
lds
xor
cmp
sub
(bad)
lds
add
int
xor
inc
add
push
mov
mov
loopne
lea
xchg
lock
mov
xor
inc
lahf
loop
leave
fdiv
aas
push
sub
fimul
push
mov
sub
sbb
ja
(bad)
push
push
or
mov
add
sbb
adc
lea
aam
fmul
pop
and
inc
outs
or
mov
repz
push
mov
add
out
jg
mov
sbb
add
and
xor
xor
add
jo
push
fs
push
add
xor
cmp
pop
xchg
shl
adc
pop
sbb
add
push
mov
xchg
or
pop
mov
pop
pusha
stos
or
xor
enter
jmp
jmp
repnz
das
iret
(bad)
and
cmp
xchg
lods
push
sahf
add
mov
or
dec
and
pop
pusha
int
or
add
or
movs
xor
adc
int3
loopne
inc
cmp
lds
mov
nop
jo
cmp
and
je
fs
enter
ins
leave
enter
push
sub
mov
and
mov
push
imul
dec
lods
mov
or
retf
mov
cmps
dec
mov
mov
pop
mov
fcom
jp
stos
not
sbb
ins
and
or
mov
(bad)
jno
test
cld
jo
pop
scas
adc
rol
ret
in
cmc
jae
shl
sbb
jnp
push
dec
scas
shl
inc
bound
sub
pxor
add
or
dec
jne
jmp
push
cmp
js
push
loopne
popf
lock
sbb
jmp
push
and
sahf
cs
pushf
jmp
fstp
add
and
div
cs
add
jmp
mov
mov
jmp
int3
push
cmp
jb
lea
cmp
jb
repnz
mov
cmp
dec
in
dec
loopne
push
mov
fadd
icebp
sbb
mov
mov
push
mov
or
jne
inc
sub
cmp
ins
pop
pop
sbb
push
adc
les
ins
std
das
in
jmp
aam
(bad)
jge
jae
aaa
shr
inc
add
in
sub
icebp
jle
adc
ffree
mov
push
cli
fadd
jg
xchg
push
add
push
fidivr
xchg
sub
pop
pop
ret
aaa
in
mov
mov
mov
jbe
mov
bound
loopne
fadd
adc
ins
lahf
push
loope
mov
fistp
add
mov
push
inc
pop
inc
jae
nop
test
movs
fidivr
push
retf
sti
sub
dec
adc
or
cwde
mov
test
dec
sbb
sbb
or
adc
inc
(bad)
in
aas
jg
outs
jecxz
js
pop
and
mov
jbe
add
or
xchg
and
push
mov
jo
jb
xor
lds
pop
sbb
neg
out
push
sub
adc
popf
push
sar
sbb
mov
(bad)
test
dec
adc
pop
nop
js
add
xor
adc
cmp
push
cmp
es
rol
pop
sbb
sbb
xchg
mov
xor
sbb
in
pop
nop
mov
stos
cs
or
adc
xchg
retf
pop
cmp
lods
add
or
(bad)
sub
and
or
in
in
add
and
add
leave
cli
mov
push
push
rol
dec
jg
pop
pop
push
or
sbb
cmp
adc
hlt
push
jbe
add
add
and
pop
add
ret
push
fnsave
stc
inc
(bad)
idiv
ins
xchg
push
mov
pop
shr
or
jns
cmp
inc
push
je
in
add
or
push
sub
loope
cmp
adc
add
or
inc
inc
fstp
outs
and
push
jge
lsl
or
xor
sar
int
(bad)
fild
mov
or
call
outs
nop
lea
into
sub
and
outs
repnz
bound
dec
and
and
inc
add
in
ret
mov
and
dec
sub
xchg
cmp
xchg
fwait
je
rol
mov
xchg
mov
sub
fidiv
std
inc
ret
repnz
and
jmp
clc
jl
inc
call
loopne
mov
xor
cmp
(bad)
fnstsw
dec
retf
leave
mov
cmp
xor
mov
sub
add
clc
mov
jne
cmp
adc
push
ins
shl
es
jle
adc
je
pop
mov
imul
jecxz
jb
mov
daa
je
dec
sbb
inc
push
dec
add
in
push
test
outs
xchg
sub
cmp
and
cmp
mov
mov
test
jnp
repnz
cmps
test
add
cmp
cmp
cwde
jmp
jbe
lods
test
or
mov
inc
cdq
das
cmp
mov
add
and
pushf
dec
pop
sbb
das
sub
sbb
sub
adc
jmp
and
pop
enter
fwait
sub
sub
adc
or
cmp
pusha
push
jge
push
data16
rol
jmp
pop
push
cdq
hlt
or
mov
outs
xor
rcr
dec
(bad)
cmp
and
mov
div
pusha
mov
enter
js
push
add
pop
mov
adc
cli
jl
inc
jne
cmp
mov
or
cmp
leave
pop
(bad)
rcl
mov
pusha
xor
add
sahf
adc
inc
call
push
outs
cmp
mov
and
mov
sbb
(bad)
adc
pop
shl
pop
push
mov
xor
ja
push
pop
push
xor
call
push
call
dec
pop
into
mov
and
xchg
out
dec
push
mov
ret
sub
dec
inc
push
inc
(bad)
lock
or
cmps
fdiv
push
popa
dec
push
sti
adc
cmp
push
bswap
(bad)
(bad)
jle
dec
mov
repz
data16
xlat
ins
inc
gs
add
and
inc
xor
mov
scas
xchg
or
cmp
xor
hlt
add
inc
add
xchg
add
out
xchg
mov
inc
aaa
and
pop
and
or
mov
repz
inc
js
pop
(bad)
push
sahf
and
cld
xor
and
loop
add
mov
mov
shl
push
jl
aad
push
push
mov
jge
push
mov
add
push
js
or
sub
sbb
enter
inc
mov
lods
xor
push
sbb
and
mov
mov
inc
xor
or
mov
jg
jns
ret
sbb
dec
adc
sbb
and
adc
(bad)
popf
je
mov
sub
dec
ror
mov
lea
inc
hlt
cmps
mov
pop
push
and
stc
xor
push
and
jmp
or
push
pop
mov
dec
mov
inc
nop
dec
pop
push
xor
pop
lods
add
jae
push
mov
(bad)
pop
adc
push
fcomp
call
mov
nop
inc
mov
ret
ret
shl
mov
enter
stos
cmp
jae
inc
sti
sbb
ret
xchg
icebp
popa
std
(bad)
stc
mov
ins
inc
cs
cmp
jno
or
mov
or
inc
jmp
sub
sub
lea
add
xchg
lahf
ror
ja
mov
pop
bound
dec
fild
out
sub
fmul
inc
js
lahf
and
dec
push
into
pushf
xor
icebp
mov
jmp
fsub
cmp
fsubr
push
mov
xchg
jmp
add
xor
loop
xor
shl
aaa
push
cmp
jae
push
daa
mov
pop
addr16
(bad)
fistp
xor
je
cmp
je
cmp
je
cmp
sub
inc
cmp
je
cmp
je
cmp
cmp
cmp
je
arpl
je
cmp
je
enter
jle
retf
por
inc
mov
dec
xchg
inc
pop
mov
loop
or
xchg
aaa
inc
hlt
sahf
rol
sbb
sbb
push
mov
sub
hlt
add
lock
mov
clc
push
in
add
sub
adc
hlt
dec
sbb
jmp
popa
jae
jno
or
or
dec
ret
sbb
sbb
or
or
imul
xchg
mov
cli
inc
push
push
jg
xor
int
adc
or
mov
pop
jne
inc
es
mov
cmp
add
cmp
cdq
lock
jno
cmp
xor
xor
push
mov
inc
mov
add
in
stc
jge
clc
and
test
or
test
mov
ret
xlat
jb
or
inc
add
mov
or
in
pop
mov
jne
or
add
loopne
xchg
push
push
stos
and
lods
in
sbb
pop
ret
cmc
mov
adc
pop
test
pop
inc
xor
or
or
sbb
rol
int
adc
adc
inc
xchg
stos
(bad)
or
loopne
lock
cmp
popa
pavgw
mov
cmp
jne
inc
sbb
bound
rol
inc
rcl
ficom
inc
mov
or
dec
mov
lea
stos
mov
push
add
rcr
test
jb
push
cs
hlt
repnz
inc
jg
je
push
adc
fmul
jb
dec
xor
retf
mov
xor
or
std
icebp
xor
(bad)
pop
or
lea
xor
cmp
inc
mov
pop
test
or
mov
push
pusha
and
push
or
into
inc
jg
jns
rcr
in
aad
jns
jp
outs
cmp
pop
or
push
or
xchg
and
push
mov
test
fcmovnbe
xor
aad
push
and
cwde
inc
fisub
jae
sbb
or
push
inc
popa
test
je
imul
mov
sub
or
or
adc
mov
mov
loope
add
pusha
movs
movs
dec
jo
push
cmp
mov
add
mov
loopne
pop
sti
adc
cmps
push
lea
bswap
push
adc
dec
out
mov
sub
mov
push
jb
jb
sbb
ins
add
or
sub
cwde
cmp
cwde
nop
jb
lods
mov
xchg
cmp
mov
or
xor
(bad)
std
xor
push
cwde
jl
and
sbb
push
mov
rol
adc
mov
cmp
push
inc
sbb
sub
pop
mov
rol
push
lock
sub
fcomp
sbb
add
fdiv
in
mov
add
in
in
lock
lea
mov
add
enter
cli
fld
fisttp
push
inc
push
inc
cli
push
sub
mul
inc
mov
or
add
jmp
or
ins
and
popa
add
xchg
xor
test
or
in
jl
lock
fcom
test
mov
sbb
cwde
ins
shl
push
sbb
fs
and
mov
push
inc
mov
pop
dec
popa
jb
jmp
rol
mov
loop
sbb
(bad)
rol
adc
sub
std
ret
movsx
shl
enter
pop
jmp
push
xchg
jl
inc
rol
pop
lods
sbb
ret
push
aad
add
lahf
push
clc
add
clc
clc
dec
xchg
out
cs
adc
add
out
enter
mov
pop
mov
scas
mov
mov
pop
out
and
adc
(bad)
stos
mov
cmp
mov
push
mov
xor
popa
push
mov
mov
jne
rol
aas
add
adc
ret
jo
xchg
push
jnp
and
cmp
inc
push
mov
mov
mov
mov
add
add
imul
scas
cmp
inc
mov
add
add
mov
push
and
dec
test
mov
aas
outs
sub
mov
mov
and
xchg
nop
pushw
and
add
mov
sbb
cwde
push
adc
and
add
loopne
mov
sbb
xor
and
test
push
sub
adc
cmp
add
ds
add
inc
sbb
inc
sbb
jne
add
mov
adc
mov
ret
mov
aaa
adc
cs
mov
outs
xchg
retf
sbb
test
rcr
add
js
dec
mov
push
in
adc
jg
inc
cmps
pusha
push
lea
pop
and
jg
ret
daa
sub
ret
lahf
push
inc
clc
xlat
inc
mov
push
xor
adc
mov
out
mov
gs
sub
scas
push
cld
mov
mov
jo
or
mov
cmp
in
pop
pop
mov
scas
es
pusha
mov
fnstsw
cli
ins
jmp
or
test
or
jmp
cld
scas
sbb
loope
ins
ret
add
add
lock
pusha
js
push
rol
and
(bad)
in
sbb
shl
leave
jb
iret
repz
rcl
fidivr
inc
fs
(bad)
push
sar
sti
or
in
mov
ror
jmp
sbb
pop
cli
frstor
or
sbb
jmp
jmp
cmp
enter
and
out
xor
loop
mov
xchg
cld
nop
and
nop
cmp
or
sub
inc
push
cld
ret
xchg
inc
and
add
add
mov
imul
(bad)
pop
cmp
call
pop
mov
adc
aas
xchg
inc
shl
and
inc
in
xor
xchg
and
lods
jnp
(bad)
cmps
pop
pusha
icebp
aam
shr
add
jl
jne
daa
xchg
pop
iret
enter
sbb
add
dec
sbb
inc
jno
or
jmp
xchg
stc
test
fmul
add
sbb
rcr
pop
cmp
lahf
cmp
xor
jmp
add
push
xchg
idiv
call
bnd
cmp
icebp
xor
mov
push
pop
inc
jl
xor
mov
sbb
or
hlt
icebp
rcr
call
clc
inc
ret
imul
lock
push
sbb
push
call
push
fbld
je
ja
mov
pushf
sbb
loopne
xor
cli
add
or
cmp
hlt
sbb
jne
mov
out
aaa
push
jmp
xor
aaa
dec
aad
outs
dec
push
jne
cmp
aaa
lea
sti
jge
test
pop
enter
ja
repnz
or
and
sub
mov
popa
repz
nop
jmp
or
pop
pop
cmp
dec
ja
jmp
inc
test
cmp
sbb
call
mov
dec
xor
ret
xor
cmp
(bad)
jo
scas
cmp
push
inc
dec
adc
dec
cwde
push
push
test
cmp
xchg
mov
ss
jl
ret
cmps
mov
mov
mov
out
fwait
or
add
add
stos
mov
mov
jb
sub
jne
xor
cld
inc
pushf
mov
icebp
retf
or
sbb
cmp
mov
jo
mov
(bad)
cld
add
loop
jne
dec
dec
add
sub
sub
bound
jo
cmp
jne
push
pop
sub
pop
in
pop
or
dec
and
dec
das
push
inc
inc
call
push
cdq
mov
inc
add
push
into
add
push
sti
mov
inc
adc
inc
data16
sub
inc
jmp
das
cdq
jmp
fsincos
cmp
aas
push
cmp
inc
adc
sub
jge
cmp
pop
pop
or
adc
or
movs
aas
inc
mov
or
std
or
inc
or
and
pop
inc
and
push
mov
mov
mov
mov
ficom
and
rol
or
add
xchg
adc
sub
dec
xchg
dec
or
inc
pop
adc
or
or
lds
sbb
mov
mov
pop
push
loopne
xchg
lods
popf
sub
add
inc
aaa
mov
jae
mov
mov
sbb
scas
sbb
sbb
lea
(bad)
popf
sub
retf
retf
add
and
or
int3
ret
xlat
call
adc
push
pusha
lock
pop
push
and
aad
shl
dec
push
dec
mov
movs
jmp
sbb
(bad)
inc
cdq
mov
enter
call
xor
das
push
and
xchg
loope
push
add
push
jne
add
cmp
dec
inc
and
(bad)
in
nop
sub
test
rol
inc
xchg
or
add
cmc
daa
cmp
pusha
pusha
add
sbb
pop
xor
mul
and
bound
pop
and
xchg
sub
movs
addr16
cmp
popf
mov
push
or
loopne
or
adc
call
sub
in
xor
movs
out
cmp
stos
sbb
mov
cmp
xchg
dec
push
add
mov
push
add
add
loope
jo
sub
mov
mov
jmp
icebp
jl
enter
in
in
es
fwait
dec
fsubr
shl
mov
add
and
and
jl
repnz
and
lock
add
das
fistp
hlt
add
cs
rcr
repnz
xchg
ds
adc
vmwrite
movs
add
inc
and
sub
cmp
and
hlt
add
inc
push
repnz
add
add
fwait
adc
or
cld
add
add
add
enterw
ror
int3
adc
addr16
(bad)
mov
int
adc
(bad)
fdivr
xor
xor
push
fs
adc
add
out
xor
cmp
or
push
jl
mov
adc
add
shl
fsubr
fld
mov
push
(bad)
mov
js
js
loope
dec
xor
hlt
lock
lods
or
push
imul
sub
arpl
cmp
or
push
adc
int3
ret
aaa
mov
or
fsubr
sbb
and
jb
stos
rcl
xchg
sbb
push
nop
adc
jo
xchg
in
js
scas
sub
cwde
dec
sar
cmp
or
add
pcmpgtd
sar
out
in
in
add
in
into
fs
(bad)
nop
add
or
adc
or
or
outs
loopne
mov
outs
inc
push
cmp
repnz
xchg
adc
adc
mov
sbb
pusha
xor
or
aas
and
js
push
mov
cmp
or
cmp
and
in
jb
and
std
adc
cmps
mov
loopne
dec
es
ins
(bad)
fisttp
sub
test
je
or
adc
sbb
push
push
xlat
push
mov
add
fwait
push
cmp
pop
mov
mov
cmp
sub
adc
mov
es
jmp
adc
call
in
add
pop
scas
shl
arpl
inc
mov
aaa
mov
and
adc
loopne
adc
pop
or
mov
sub
mov
into
mov
call
das
call
push
jge
dec
push
pushf
mov
ss
aam
jl
and
fist
arpl
sbb
test
test
mov
mov
add
mov
shr
lea
xchg
shl
dec
mov
std
add
mov
xor
push
mul
and
push
sbb
dec
adc
mov
pop
add
push
shr
daa
add
push
(bad)
jne
pop
push
dec
push
dec
add
mov
mov
adc
ss
push
ret
pop
cs
add
call
sar
adc
adc
fsub
and
add
jae
test
imul
ja
pop
aam
jl
test
sbb
jecxz
lea
fwait
(bad)
out
mov
mov
jmp
mov
jo
cld
cmps
push
dec
cmps
mov
cmp
mov
mov
ja
adc
mov
jmp
lock
fsubr
and
clc
in
push
and
rcl
vhaddps
adc
or
loope
add
push
sub
mov
fs
into
push
psubsw
mov
and
add
pop
mov
mov
lods
rcl
daa
adc
sbb
mov
and
retf
push
test
dec
loope
adc
js
cdq
or
push
pop
push
sbb
jmp
imul
sar
push
lahf
add
daa
pop
add
pusha
add
adc
pop
or
xlat
int3
mov
shl
and
sub
lea
lock
push
int3
jmp
mov
cmp
mov
push
mul
adc
mov
or
push
sbb
mov
loope
mov
cdq
ret
sbb
adc
aad
ficom
les
lea
xchg
add
cmc
inc
inc
push
add
and
std
push
add
dec
movs
push
or
xchg
lahf
or
in
lahf
adc
mov
mov
push
cmp
adc
add
out
cmp
mov
inc
or
mov
fld
std
xor
cld
fdiv
jg
xchg
cmps
imul
adc
cli
(bad)
aam
push
xor
and
nop
test
xor
fcmovb
add
sbb
pop
jmp
stos
nop
push
pusha
pop
in
(bad)
inc
cmps
daa
in
add
inc
stos
push
fs
outs
sub
add
sub
inc
or
inc
gs
adc
les
fwait
sar
(bad)
call
loopne
and
push
out
movs
add
lahf
adc
xchg
sbb
or
xchg
cmps
mov
invd
adc
(bad)
lock
mov
sbb
mov
lahf
(bad)
or
mov
sahf
sub
mov
cmp
je
sub
pushf
ins
sub
sbb
call
ror
and
xor
imul
jae
jns
inc
push
in
sbb
add
(bad)
mov
push
add
xor
or
dec
mov
aaa
or
xor
loopne
rol
cmp
(bad)
dec
dec
js
mov
adc
cmps
cmps
or
xor
cmp
add
pop
push
ret
mov
clc
push
add
mov
inc
les
(bad)
pop
mov
xchg
or
add
xchg
sub
imul
cmp
or
dec
aas
sbb
mov
add
loopne
sbb
movs
add
imul
dec
inc
js
dec
sbb
add
xor
lds
inc
stc
add
rcr
div
pushf
inc
pop
mov
push
shr
push
push
jno
push
xchg
and
push
aam
mov
cmp
(bad)
cli
add
and
sub
push
dec
sbb
pusha
dec
add
dec
test
pop
or
pusha
cmp
outs
loopne
push
outs
or
inc
add
cmp
dec
and
pop
pop
add
push
loopne
pop
or
jmp
and
pop
int3
push
(bad)
repz
inc
fbld
sbb
mov
scas
push
sbb
or
fsubr
xchg
retf
in
in
aam
jmp
call
xchg
mov
or
inc
push
add
int
addr16
adc
add
cmp
xchg
les
cmp
xlat
in
push
lea
mov
cmp
sbb
jmp
fmul
xor
or
and
or
gs
or
jg
dec
or
lods
leave
mov
and
mov
div
pop
mov
popa
push
test
mov
movs
mov
mov
shl
fwait
jne
out
enter
add
push
retf
retf
dec
jmp
fidiv
lock
jg
sbb
(bad)
ror
sbb
loopne
fdivp
sbb
cmp
cmp
mov
cmp
jne
cmp
and
sar
or
sti
adc
dec
popf
add
cmps
pop
sbb
iret
fmul
mov
cmp
fs
test
add
mov
rol
xchg
sbb
jbe
cmp
inc
int
or
rol
inc
loope
or
pop
icebp
idiv
dec
sbb
mov
xchg
inc
adc
adc
mov
add
push
and
sbb
ret
dec
sub
ror
mov
aas
rol
pop
add
ds
test
pop
mov
movups
add
push
adc
xchg
ror
or
sbb
jg
add
hlt
sbb
leave
mov
add
sub
retw
(bad)
(bad)
or
xor
dec
or
mov
mov
add
jg
add
jb
stos
dec
inc
(bad)
ins
inc
jb
mov
push
iret
shl
(bad)
push
jmp
call
ret
and
into
shl
pop
cmp
or
sbb
lods
je
out
sub
inc
test
push
sub
push
push
mov
sti
sub
jmp
aaa
push
push
push
xor
cli
cmp
cmps
sar
mov
not
pop
es
or
add
inc
retf
mov
pop
cmp
mov
mov
sbb
shl
into
or
hlt
inc
not
mov
rcl
push
cld
mov
cmp
je
or
fidivr
dec
add
jb
ja
inc
loop
rcr
jb
inc
add
push
jb
inc
mov
cmp
je
xchg
retf
push
nop
jge
mov
daa
jmp
rcr
push
rol
das
test
ret
sbb
lods
push
aad
ret
ss
push
and
cmps
in
imul
out
scas
into
add
push
push
shr
pusha
sbb
loopne
mov
cmp
sub
sub
mov
scas
cmp
pop
adc
or
adc
cmp
jns
pop
jl
mov
rcr
push
xor
mov
pop
in
add
lds
(bad)
mov
pop
mov
dec
push
cmps
inc
fst
jmp
in
loop
add
mov
xchg
dec
sub
and
add
sub
movs
lahf
je
(bad)
push
dec
adc
adc
and
mov
sar
or
bnd
add
add
jns
pushf
xor
push
js
das
fldcw
jnp
(bad)
outs
cmp
sbb
dec
fs
clc
or
sub
ins
xor
(bad)
or
or
cmp
pop
fidiv
(bad)
sti
test
repnz
nop
add
les
jne
rol
call
daa
mov
lea
mov
test
call
sub
or
dec
out
adc
stos
lods
ror
pop
xchg
add
ins
cli
mov
jp
int3
test
cmp
push
ror
adc
jns
lock
mov
or
jmp
stos
xor
lahf
into
dec
fistp
push
sub
and
sbb
push
jne
call
jbe
mov
sbb
xchg
jb
das
fidivr
add
and
in
adc
repz
add
pop
ins
pop
cdq
adc
pop
and
xchg
icebp
mov
xlat
(bad)
push
jae
nop
mov
paddb
aaa
pop
xor
out
mov
push
add
mov
or
dec
inc
xor
push
sub
sub
test
inc
fdivrp
sbb
push
lahf
dec
mov
in
push
lods
and
sub
push
mov
pop
out
mov
mov
iret
cmps
lods
stos
fsub
or
std
mov
out
push
fwait
mov
retf
add
dec
pop
aam
rcr
stc
pop
adc
push
ret
xor
sahf
cmp
or
(bad)
pop
sub
ret
and
pusha
cwde
xchg
adc
and
cmp
push
mov
xchg
cmp
xchg
xchg
scas
sub
arpl
jle
cmp
jne
aaa
add
adc
push
stc
add
(bad)
test
and
and
dec
sbb
dec
add
shl
and
pop
sbb
push
mov
sbb
js
push
add
adc
xor
out
jle
push
push
test
ja
push
lock
and
dec
mov
(bad)
cli
adc
mov
retf
iret
or
lods
xor
inc
mov
adc
xchg
lods
mov
lods
movs
sbb
movs
push
or
pushf
and
adc
fisub
xor
imul
inc
adc
inc
fwait
pop
mov
inc
daa
mov
inc
push
jbe
fistp
test
add
in
enter
dec
cld
adc
lock
and
hlt
push
jle
(bad)
mov
adc
pop
dec
pop
pop
test
nop
push
jl
aas
push
lods
outs
aas
adc
or
xchg
loop
dec
in
or
ss
add
fist
pop
cmp
jl
rcr
ret
xor
adc
mov
arpl
dec
add
outs
push
pop
lods
mov
or
add
pusha
test
test
imul
push
inc
enter
cmps
push
adc
mov
jmp
sub
rol
imul
sbb
jle
pop
cmpps
jl
inc
pop
mov
rol
jo
aam
adc
push
pop
in
and
inc
mov
lods
push
adc
cdq
stos
scas
and
les
mov
pop
sti
cs
add
push
cmc
inc
inc
add
jb
jne
pop
loop
mov
cs
push
aam
jbe
dec
cmp
xlat
test
xor
jnp
pop
mov
ja
xchg
loop
hlt
lock
mov
and
mov
mov
call
leave
sbb
lds
add
pop
cmps
inc
cmp
loope
sbb
into
jge
mov
xlat
(bad)
push
mov
dec
ror
push
lahf
inc
push
leave
xchg
ret
stos
aam
or
push
or
(bad)
(bad)
xlat
(bad)
push
(bad)
(bad)
adc
popf
hlt
lods
fstp
pop
retf
mov
dec
mov
popf
cld
jbe
(bad)
push
push
mov
ficomp
and
jmp
bound
mov
add
add
mov
jno
in
mov
inc
add
xchg
and
mov
stos
xor
bound
adc
jae
and
out
inc
sub
push
and
shl
mov
lods
es
sub
mov
dec
xor
or
push
inc
add
dec
sub
fcomp
shl
pop
scas
pop
xchg
mov
mov
inc
jmp
xor
add
out
out
adc
aad
inc
je
or
cmp
scas
sbb
add
or
mov
jae
xchg
hlt
imul
mov
jmp
xchg
jmp
fmul
sbb
push
sub
sti
pop
sub
in
loop
add
out
adc
add
inc
clc
xor
test
cmp
adc
in
inc
add
jnp
imul
mov
into
jp
mov
mov
fmul
popa
jo
dec
inc
xchg
stos
xchg
outs
push
jne
cld
mov
mov
pop
dec
jne
or
push
push
in
dec
push
ins
test
in
pop
or
popf
and
xor
adc
push
sub
jmp
je
lock
dec
cmp
adc
push
and
mov
add
dec
and
sub
add
mov
cmp
sbb
nop
cmp
dec
leave
sbb
sbb
(bad)
or
data16
sbb
neg
jnp
sti
not
xchg
packsswb
clc
sub
lock
inc
and
add
adc
into
pop
xchg
sbb
ins
loop
add
mov
push
repz
sbb
adc
arpl
lea
out
call
push
push
push
dec
inc
or
pop
push
lods
loope
push
push
mov
push
or
add
push
dec
nop
test
(bad)
or
out
add
dec
push
mov
retf
cmc
adc
lahf
adc
add
popa
push
in
jae
dec
pop
jg
pop
rol
bound
lods
inc
mov
jecxz
pop
inc
bound
add
(bad)
pop
sbb
adc
out
inc
test
pushf
std
jl
xchg
xchg
sub
mov
sahf
adc
call
out
sbb
inc
adc
sahf
xchg
and
sub
mov
inc
rep
xor
mov
push
mov
(bad)
mov
pop
add
stc
or
sar
push
adc
xor
mov
adc
push
inc
sbb
outs
ja
bound
js
push
inc
add
pop
mov
and
adc
dec
cmp
movs
sbb
push
(bad)
(bad)
or
sar
mov
mov
cdq
dec
or
test
dec
call
mov
mov
mov
pop
popa
inc
push
cmp
or
sti
daa
and
and
jg
mov
mov
cmp
into
push
or
pop
cmps
les
adc
retf
xchg
dec
dec
cmps
mov
and
ss
mov
out
imul
stc
lahf
sbb
popa
pop
stc
xchg
add
add
test
pop
cmp
fmul
mov
mov
or
or
sbb
je
or
jbe
ret
mov
pop
cmp
cmp
inc
daa
and
inc
cmp
and
ret
arpl
sub
add
jmp
cmp
cwde
daa
adc
push
aas
and
and
mov
push
loop
xor
mov
(bad)
adc
xor
in
mov
inc
pop
ficom
dec
push
cld
push
and
xor
inc
sbb
pop
jmp
pop
pop
jns
push
adc
add
push
movs
add
cwde
and
add
add
push
sub
sub
push
or
aaa
retf
inc
or
and
ss
add
sti
jl
xor
ja
dec
inc
add
add
lock
pop
pop
nop
push
pop
jb
mov
pop
add
push
mov
out
sub
push
and
jge
nop
xchg
or
movs
adc
cmps
xchg
out
push
adc
sbb
mov
push
or
push
jne
push
ins
mov
sub
cld
dec
loope
rol
call
or
daa
push
nop
callw
jmp
lgs
add
mov
imul
ror
shl
lahf
jnp
pop
sub
sbb
inc
mov
mov
test
or
movs
cmp
or
rcr
cmp
mov
add
jno
pop
add
add
xchg
les
imul
sbb
mov
adc
sub
ins
stos
inc
loopne
push
xor
aaa
ficom
neg
push
ins
lahf
aad
mov
mov
ins
scas
ins
xlat
sub
push
push
push
mov
push
sbb
lahf
(bad)
push
loop
jl
das
sbb
ins
push
sub
or
outs
sbb
add
ret
push
cmp
add
pop
pop
jae
push
hlt
add
out
daa
push
or
adc
mov
js
jns
mov
clc
aaa
push
cdq
adc
adc
int
rol
and
adc
pop
stc
enter
enter
and
jecxz
test
adc
popa
pop
mov
and
mov
cmp
or
sub
push
scas
fidivr
adc
add
out
and
mov
or
test
and
xor
fsub
js
(bad)
inc
push
pop
xchg
push
jmp
and
mov
sqrtps
add
xor
fs
push
push
nop
clc
rol
inc
and
loope
xor
not
inc
or
push
jmp
jg
lea
fisubr
ja
pop
and
leave
push
sbb
or
popa
popa
inc
in
jns
cmp
jne
xor
cmp
ror
xor
and
in
jns
adc
push
add
jno
or
jmp
or
sbb
shl
push
lea
adc
mov
shl
push
add
and
call
sub
call
jmp
aas
add
sahf
fs
or
push
xchg
std
ss
add
sti
mov
fwait
sbb
xor
movs
pop
pop
mov
mov
sbb
or
jmp
jl
js
out
das
push
lea
add
inc
push
or
mov
and
aad
push
pop
aam
push
dec
fisub
ror
add
imul
inc
(bad)
push
pop
pop
push
outs
and
push
retf
ins
add
or
xor
jle
inc
mov
push
out
and
int
cmp
push
fcomp
retf
aam
mov
mov
mov
je
cmp
adc
mov
nop
outs
or
add
or
pop
xlat
dec
fiadd
mov
pop
pop
inc
pop
sbb
pop
and
jnp
sahf
sbb
fstp
sar
dec
(bad)
cmp
es
loopne
and
lea
jb
add
push
xchg
push
pop
dec
mov
int3
jmp
call
arpl
adc
sbb
push
out
adc
cmovl
fdivr
add
nop
lock
popf
add
pop
dec
dec
cmp
lock
or
arpl
sbb
pop
gs
jge
adc
inc
fnstenv
and
inc
daa
cmp
popa
fdivr
std
pop
dec
sub
push
inc
inc
les
(bad)
dec
mov
pop
pop
push
cwde
adc
(bad)
mov
and
into
dec
pop
push
pop
fdivr
addr16
xchg
ret
cmp
mov
adc
aas
dec
js
nop
xchg
sub
outs
pop
sbb
enter
xchg
adc
dec
add
dec
lods
sbb
mov
pusha
lods
lea
push
push
xor
in
dec
xor
push
sbb
inc
cmp
jae
push
sbb
inc
(bad)
jb
jb
mov
pop
mov
inc
inc
xchg
mov
xchg
add
fisub
jmp
dec
ins
loop
fmulp
ret
aad
retf
pop
test
iret
and
push
out
push
cdq
push
add
sbb
jo
je
aas
push
bound
ss
into
out
or
xchg
sar
mov
cmp
push
mov
dec
ins
inc
mov
je
push
and
stos
push
retf
inc
push
mov
movs
fwait
mov
xor
ret
cdq
imul
push
push
adc
xchg
pop
dec
fdiv
retf
pop
mov
xor
jg
push
dec
int3
xor
mov
mov
fiadd
or
adc
(bad)
fsub
and
or
pop
or
dec
aam
loopne
dec
push
and
sbb
sbb
sbb
mov
sbb
push
(bad)
das
(bad)
add
adc
jmp
clc
mov
and
inc
loope
pop
adc
aas
push
push
or
(bad)
cmp
pusha
or
push
push
dec
out
pop
rol
cmp
sub
or
inc
pop
pusha
inc
(bad)
push
jae
fistp
mov
hlt
ja
cmp
push
jbe
push
call
pushf
mov
int
xchg
push
add
or
mov
and
popa
sub
add
sbb
sbb
adc
inc
xchg
in
add
or
sbb
push
mov
xor
adc
or
sub
add
push
dec
add
pusha
jo
loope
and
cwde
ss
js
in
(bad)
mov
add
lock
push
lods
int3
mov
mov
inc
outs
add
cmp
jle
jo
or
ss
cmp
lods
jg
add
push
enter
test
bound
pop
pop
ror
pop
mov
adc
lock
inc
mov
mov
sub
cmp
jg
loop
sar
pop
movs
adc
jo
push
jmp
fadd
inc
add
lock
xchg
or
pop
mov
iret
sbb
sub
add
jge
xchg
jmp
cmps
test
(bad)
jnp
lock
adc
xor
adc
pop
jp
cmovl
mov
outs
test
lods
ja
xchg
loopne
shl
fwait
xchg
adc
mov
fst
leave
push
push
cmps
std
push
ficom
adc
cmp
push
xor
adc
add
and
pop
cmp
outs
or
push
sbb
pop
push
cld
je
mov
push
shl
ss
ss
pop
cwde
fimul
push
test
sbb
mov
xchg
mov
jo
mov
dec
cmp
jne
into
mov
es
jmp
pop
and
repz
call
push
out
lea
loopne
ja
retfw
jne
in
inc
out
jnp
imul
jne
inc
in
clc
jge
dec
sub
jmp
pop
jne
cmp
or
mov
out
add
pushf
ins
test
mov
adc
es
fistp
sbb
cmp
pop
bound
pop
cmp
pop
imul
icebp
mov
mov
out
sub
and
push
pop
jg
test
mov
test
jmp
jle
cmp
inc
cmp
hlt
inc
pop
dec
adc
add
sub
dec
and
add
test
addr16
sub
mov
push
je
cs
dec
jg
ret
jne
test
sbb
repnz
icebp
add
cmp
add
iret
push
xor
add
add
mov
ss
push
or
cmp
dec
fistp
pop
xor
push
add
add
out
ins
lods
bound
(bad)
imul
cmp
icebp
mov
(bad)
je
add
adc
not
adc
jne
adc
mov
pmaxsw
(bad)
pop
inc
push
or
jl
mov
or
push
pop
jo
loope
push
jb
sub
add
fcomp
fsubr
sub
dec
mov
xor
dec
stos
sbb
or
test
inc
cmps
ret
pop
and
inc
sub
aad
and
inc
push
mov
pop
jecxz
cld
jmp
sbb
fadd
add
inc
and
jb
pop
sbb
adc
das
cmc
movs
xchg
inc
sbb
fs
popa
or
mov
outs
and
movs
jmp
icebp
std
pop
(bad)
jg
jnp
xor
push
add
add
in
push
call
push
add
hlt
out
ret
mov
inc
add
push
rcl
xor
call
push
test
fcomp
jg
popf
dec
jo
inc
adc
(bad)
mov
adc
sti
fcomip
pop
sahf
add
sub
shl
or
cmp
jb
sub
cmp
xchg
push
mov
or
pop
sar
push
push
cli
mov
adc
pop
jne
add
sbb
jl
test
(bad)
jbe
pop
lea
aad
lea
faddp
mov
aas
add
cmp
sub
js
or
dec
dec
jecxz
or
push
push
push
sti
jne
xor
or
cmp
adc
push
xor
jecxz
pop
or
sub
bnd
leave
ja
sub
fild
mov
je
dec
ins
jle
ja
movzx
push
jp
rol
push
leave
test
in
out
push
pop
popa
add
add
inc
enter
add
mov
adc
jg
aaa
test
je
xchg
ins
jl
fadd
jecxz
mov
push
push
pop
pusha
or
fst
pop
cmp
xor
dec
cdq
xor
popf
sar
adc
xchg
push
sub
adc
div
mov
pop
rcr
sub
add
sar
test
leave
sbb
push
xor
and
sbb
call
(bad)
or
out
jo
loopne
sub
cmc
mov
add
push
push
add
dec
test
jle
sti
(bad)
add
jl
mov
shr
add
call
mov
mov
inc
mov
sub
shl
or
cmp
jl
mov
sub
adc
gs
add
and
shl
or
int3
push
jne
adc
xor
ins
sub
sub
les
xor
inc
add
or
in
mov
mov
es
or
sub
dec
fcmovu
push
cmp
rcr
sbb
pop
(bad)
jae
sub
jne
cmc
int3
lea
and
mov
rol
fs
sahf
inc
inc
aas
sbb
rcr
add
sbb
mov
lock
xor
shl
jne
or
cmc
shl
in
push
mov
out
shr
push
adc
jo
hlt
xchg
xchg
aam
clc
jne
jecxz
cli
pop
jge
adc
movs
cmp
mov
add
clc
int3
xchg
(bad)
shl
push
not
or
cmovs
pop
mov
mov
add
jg
add
dec
ret
daa
jl
pop
fadd
mov
or
sbb
popf
push
pop
xchg
push
ja
adc
gs
jp
fisttp
cmp
push
sub
fadd
xor
fadd
dec
pop
push
sbb
add
adc
movs
add
add
or
test
pop
mov
cmp
aad
push
push
js
xchg
ins
adc
das
loopne
inc
jge
add
cdq
sbb
bound
pop
sbb
push
sub
push
outs
xchg
aad
mov
fiadd
adc
dec
jg
cmp
sbb
inc
fsub
push
js
pop
sub
sub
aas
ss
dec
das
inc
ficomp
ins
out
adc
(bad)
loopne
jmp
aad
movs
stc
ret
sub
ret
or
xor
mov
push
es
inc
and
pop
adc
push
inc
test
repz
sbb
add
out
std
pusha
adc
scas
mov
xchg
sub
add
mov
repz
adc
cmp
pminsw
test
cmp
ins
mul
test
loope
test
popa
xlat
mov
adc
cmps
lea
mov
sbb
scas
loop
loopne
xor
movs
inc
or
inc
push
pop
and
or
or
rcl
inc
xlat
cmp
sbb
inc
and
popa
sub
mov
jg
jmp
pop
adc
mov
xor
cmp
aaa
jecxz
xchg
or
sti
push
movs
cmps
mov
retf
and
push
mov
add
sub
sub
and
mov
mov
out
inc
dec
nop
adc
add
mov
push
add
mov
mov
sbb
xor
imul
das
mov
mov
push
or
xor
mov
xor
adc
jne
addr16
sbb
cmp
dec
dec
test
pop
mov
add
je
pop
sbb
jae
dec
sub
fs
push
xor
mov
stos
call
jge
shl
sti
sar
lea
or
mov
push
cmp
jbe
sar
jle
sub
lahf
add
int3
out
pop
xor
movs
out
add
pushf
loop
ret
mov
lea
jmp
sub
into
add
loop
pop
inc
in
xchg
pop
xor
or
lods
in
mov
xor
clc
pop
ja
gs
in
js
jo
int3
mov
jae
or
adc
add
pop
js
mov
adc
mov
add
lods
and
dec
ds
and
add
push
and
inc
ret
push
dec
xchg
xchg
mov
adc
xchg
movs
or
or
sub
ins
lock
sub
sbb
push
inc
and
push
test
lahf
xor
mov
push
adc
loope
data16
ss
pop
out
pop
push
(bad)
clc
pop
out
cmc
or
out
jmp
int3
push
js
add
xchg
mov
cs
jecxz
aam
call
jp
retf
loopne
outs
sysexit
or
mov
in
enter
fistp
fcom
call
sub
leave
inc
sti
jne
xor
outs
push
sbb
jno
sub
cld
sbb
test
pusha
add
and
loope
sub
push
shl
cmc
mov
dec
fsub
retf
(bad)
cmp
jp
inc
inc
sbb
pop
xor
xor
retf
mov
das
xchg
je
jbe
mov
test
popf
je
stc
and
fst
lock
lds
add
lods
lea
inc
push
fld
into
cwde
(bad)
or
repnz
and
repz
mov
comiss
xor
les
jg
add
sbb
sbb
pop
pop
mov
push
push
push
ss
jmp
fsub
neg
sub
fmul
fwait
cmp
add
(bad)
fiadd
inc
mov
mov
push
int
inc
sbb
inc
xor
mov
mov
push
mov
or
call
sbb
pop
mov
retf
mov
mov
outs
pop
mov
or
push
cmovne
test
std
mov
push
iret
mov
sub
and
shr
push
lahf
and
enter
gs
xor
and
or
mov
je
dec
dec
add
cmp
or
fnstenv
adc
push
pop
add
jmp
sub
pushf
mov
retf
lods
psubsb
cld
out
ss
xchg
pop
outs
push
cmp
sbb
jnp
mov
into
adc
in
adc
in
add
jmp
cmp
or
fidivr
imul
dec
push
xor
fild
jmp
(bad)
jmp
sub
mov
inc
pop
jmp
adc
lock
sbb
mov
and
xor
int3
pop
daa
sbb
mov
inc
dec
mov
mov
push
fs
sbb
test
std
xchg
sub
jl
mov
jmp
pop
ret
nop
and
jns
les
dec
int3
mov
mov
cmp
push
mov
in
sub
test
int3
add
jno
push
add
inc
enter
out
add
mov
or
jl
jns
rcl
mov
jo
out
mov
rol
adc
dec
mov
rcr
jnp
cs
add
movhps
jmp
inc
sub
cmp
js
xor
jmp
inc
xor
ret
add
test
outs
push
push
push
in
in
pop
mov
dec
bound
fisttp
mov
and
pop
mov
jne
pusha
pop
push
or
add
shr
nop
pop
add
add
mov
pop
push
mov
pop
pop
pop
lods
add
jge
sub
cld
cs
fsubr
push
cmp
jae
sbb
jmp
dec
ror
sbb
add
jne
cmp
mov
nop
jno
in
sbb
rcr
pusha
adc
add
fsubr
pop
push
inc
pop
mov
cmp
adc
pop
xor
pusha
push
fmul
xchg
rol
fiadd
push
and
out
cmp
xchg
ret
mov
push
add
call
rcl
rcl
and
sbb
and
dec
jae
or
cmp
mov
icebp
cmp
arpl
lock
and
adc
inc
cmps
add
sub
dec
cs
lods
or
mov
int
jl
test
clc
je
xor
push
and
popa
inc
inc
fst
jmp
ret
and
mov
popf
sub
xor
cmp
in
in
shl
call
adc
jb
adc
add
add
lea
test
aam
arpl
fs
sub
in
daa
stc
push
pop
and
push
dec
sub
fist
add
sub
add
loop
(bad)
cmp
retf
lahf
test
or
je
add
sar
xor
adc
sahf
and
fbld
(bad)
xor
fidivr
adc
xor
xchg
adc
sub
ja
js
mov
dec
jle
push
push
rol
dec
push
add
fwait
out
pop
add
push
add
adc
enter
je
pop
dec
mov
mov
xchg
pop
outs
inc
pushf
movs
mov
mov
adc
lea
sar
mov
xor
adc
pushf
std
add
inc
dec
push
and
push
jo
dec
add
fmul
and
and
cdq
je
push
jno
dec
movs
push
(bad)
in
cmp
lods
add
push
sbb
add
repz
or
pop
(bad)
sub
push
fisttp
adc
xor
dec
and
adc
adc
xor
jae
aad
and
push
loope
sub
inc
sbb
jae
mov
or
bound
cwde
sub
mov
add
adc
sbb
xor
(bad)
xor
and
pop
adc
mov
je
ret
or
les
adc
pop
add
aas
add
pop
in
lock
xor
mov
mov
popa
clc
rcr
or
jne
mov
ret
pop
push
inc
pop
shr
shr
ds
(bad)
cmp
mov
rcr
jmp
mov
pop
xchg
ror
xchg
xor
dec
jb
sub
push
sbb
jmp
shl
sub
or
lock
adc
ffreep
adc
lea
or
rcr
or
xor
mov
ret
sbb
out
je
inc
rcl
je
pop
adc
rol
or
rcr
xor
mov
sbb
pop
lds
loop
mov
fcom
loopne
sbb
and
and
es
push
call
add
es
mov
adc
lock
push
sbb
scas
sbb
dec
and
(bad)
sbb
leave
push
cmp
je
pusha
xor
push
daa
adc
jae
sub
add
sub
jae
push
je
pop
je
or
je
icebp
mov
or
push
pcmpeqw
addr16
(bad)
push
cld
out
cdq
and
inc
pop
add
mov
jne
push
sbb
push
fimul
or
push
jne
and
lock
jbe
jb
lea
(bad)
cmp
cmps
cmp
inc
daa
push
xor
jno
push
inc
xor
and
or
xor
cmp
and
dec
mov
sub
xor
push
aad
(bad)
loope
inc
pop
sbb
mov
push
push
mov
sahf
dec
cmp
sar
sbb
push
inc
mov
push
repnz
jmp
fcmove
add
stos
out
(bad)
test
fs
dec
stos
inc
mov
sbb
(bad)
pop
add
loopne
and
mov
sub
imul
push
cmp
test
and
mov
mov
cld
mov
xor
jp
inc
daa
rcl
lods
sub
sbb
add
dec
cmc
bound
lahf
jnp
jnp
enter
movs
add
push
xor
adc
lahf
adc
mov
sbb
sbb
pop
in
in
icebp
sub
rol
retf
pop
adc
xor
ss
loope
xor
imul
push
cmp
or
inc
jo
xor
xor
dec
and
mov
sub
add
and
in
push
not
mov
adc
lods
add
adc
mov
inc
mov
inc
sub
movs
inc
xor
inc
sahf
inc
outs
sbb
sub
in
nop
sub
xor
mov
add
nop
lds
pop
xor
jno
movs
pop
sub
sbb
push
and
and
(bad)
(bad)
mov
push
addps
lods
push
sahf
xchg
push
cmp
xor
rcl
xor
push
and
xor
mov
and
inc
adc
add
sub
or
aaa
mov
arpl
in
push
lahf
sbb
jne
aaa
pushf
loop
jmp
rol
push
jmp
or
push
sub
sbb
pop
cmp
movs
mov
daa
sub
ds
sti
shl
push
push
xor
push
ror
push
inc
sub
repz
xor
adc
dec
sub
jle
xor
pushf
cmp
jne
push
mov
sub
xor
icebp
inc
fwait
inc
mov
and
mov
mov
inc
sbb
gs
inc
fistp
sub
sbb
add
push
in
mov
pop
test
mov
lea
lds
xor
loopne
mov
sbb
sbb
push
and
sbb
into
jecxz
or
stc
or
adc
xchg
or
pop
xor
adc
cmps
mov
mov
jb
cmp
sbb
fistp
hlt
push
mov
add
and
sbb
push
mov
pop
add
push
pop
inc
mov
xor
sub
xchg
cwde
xchg
and
mov
cli
int3
mov
mov
or
pop
sti
stos
scas
add
sbb
in
push
adc
outs
add
sbb
arpl
in
add
or
xor
push
jmp
jle
or
dec
mov
jb
outs
or
cmp
mov
mov
lea
ret
cmp
mov
in
and
test
jl
and
das
dec
sbb
or
sbb
add
push
outs
into
jnp
je
call
std
jb
je
and
jg
push
push
sahf
or
ja
push
movs
(bad)
lds
or
xor
call
and
cmp
jne
pop
fild
push
pop
sbb
data16
sbb
adc
sub
xor
lds
adc
inc
in
push
add
xor
mov
call
mov
add
into
push
push
lock
mov
sub
mov
add
hlt
int
cs
js
seta
push
adc
add
aad
pushf
mov
addr16
push
xor
iret
sub
or
cmp
or
fiadd
jmp
test
adc
imul
jg
add
push
daa
or
clc
(bad)
pop
sar
sub
adc
fsubr
push
sub
xor
xor
clc
fidivr
mov
add
sub
sbb
movs
adc
add
lock
push
daa
test
pop
fistp
or
pop
rcl
pop
mov
sub
leave
and
mov
inc
mov
add
adc
push
adc
sbb
and
shl
add
lods
add
push
ret
mov
rol
mov
or
cs
pop
push
add
push
cmp
jp
cmp
jmp
jo
pop
dec
push
and
xor
add
pushf
add
or
push
cmp
sub
cdq
jo
sub
movs
push
sub
and
dec
adc
aaa
push
jno
push
sbb
ror
push
call
sub
inc
push
or
ffree
add
in
or
and
hlt
sti
jl
pop
add
movs
sub
sub
pop
pop
jmp
sbb
aas
push
pusha
xchg
fsubr
ret
lods
push
or
and
push
mov
sbb
pop
and
jecxz
add
stos
jbe
or
in
retf
and
add
or
dec
cs
sbb
jo
inc
stos
mov
xor
sub
loope
in
dec
aaa
lds
arpl
jle
push
int
movs
xlat
outs
cld
call
fld
inc
fcomp
int
es
jo
rol
fild
fwait
test
or
sbb
or
mov
pop
aas
dec
inc
pop
and
lods
push
test
mov
ror
cmp
adc
or
and
stos
rcr
xor
sbb
push
push
and
outs
mov
retf
xchg
mov
outs
sub
out
jcxz
inc
cdq
inc
jmp
not
add
push
fwait
mov
(bad)
push
jnp
test
iret
add
jg
jg
xor
mov
mov
push
pop
scas
mov
add
cmc
pop
stos
call
xor
dec
ror
or
push
xor
xor
aas
test
cmp
popf
mov
jmp
outs
mov
imul
jnp
mov
sub
call
jne
mov
pcmpeqw
les
adc
bound
or
(bad)
in
xor
leave
jbe
jne
fidiv
idiv
sbb
in
or
div
lds
add
fst
pop
dec
je
retf
mov
adc
rcl
mov
pop
test
add
push
and
mov
inc
adc
cwde
jle
push
fcom
in
fist
jmp
add
push
fdiv
test
jmp
xchg
dec
mov
adc
jne
push
ins
rcr
mov
inc
mov
add
push
lds
movs
jbe
imul
adc
adc
add
sub
sbb
pop
push
cwde
std
leave
jmp
mov
es
cmp
mov
push
js
sbb
stos
add
and
cmp
mov
inc
(bad)
ret
sub
dec
add
jle
push
mov
cmp
mov
mov
cmp
sub
sub
jp
sbb
jb
jbe
or
sbb
add
inc
enter
or
xor
sub
jbe
or
mov
repz
jne
lahf
outs
push
push
add
cld
push
pusha
dec
into
test
(bad)
in
cmps
adc
ja
pop
mov
sbb
dec
jmp
add
add
bound
fimul
adc
cmps
mov
movs
cdq
mov
sub
add
aaa
cmp
mov
mov
cmp
xor
jno
pop
and
leave
add
lahf
sbb
jo
pusha
dec
add
aam
xchg
inc
movs
inc
inc
jb
jle
and
adc
pop
cmp
add
punpcklbw
push
cmp
jmp
in
or
pop
fmul
or
pushf
jmp
pop
cmp
jno
leave
xchg
or
add
dec
xor
into
stos
dec
test
ins
mov
jns
jl
(bad)
cmp
shl
mov
int3
pop
shl
inc
pop
lahf
test
pop
inc
mov
and
stos
xor
sahf
cmp
cmp
ja
sbb
mov
push
push
je
mov
lahf
xor
xchg
push
push
loope
test
jg
push
xor
jmp
inc
jmp
add
shr
and
mov
cmp
ja
jmp
ficomp
jb
ss
jg
cmp
rol
xchg
inc
adc
and
lea
mul
hlt
mov
mov
sub
mov
dec
add
out
xchg
setle
mov
or
inc
adc
dec
jbe
sti
and
sbb
or
or
jmp
and
clc
adc
mov
aam
sbb
mov
cmp
mov
adc
push
adc
test
les
lods
jmp
dec
xlat
push
cmps
outs
push
test
jmp
sub
jo
subps
jge
dec
mov
or
test
sbb
sub
cmp
loopne
jmp
mov
call
pop
fwait
push
and
ret
jnp
xor
mov
add
ins
and
pusha
sbb
adc
ret
xchg
sub
mov
or
adc
jg
hlt
ret
pop
add
je
jmp
push
imul
loope
or
add
and
(bad)
push
and
ret
pop
pop
mov
mov
pop
(bad)
sub
jo
(bad)
shr
pop
sbb
cld
xor
adc
or
xor
sub
cmp
sub
nop
fs
and
pop
or
and
push
lds
adc
push
ret
mov
jne
or
push
dec
cli
xchg
cmps
sub
je
push
add
ffreep
inc
or
movs
pop
xchg
lods
mov
push
push
xor
and
jmp
in
xchg
clc
or
je
add
inc
sub
xchg
mov
pusha
ins
(bad)
mov
fsub
jg
(bad)
in
pop
pop
inc
(bad)
jae
and
stc
sbb
(bad)
fild
fistp
(bad)
neg
dec
pop
cmp
stc
ffreep
(bad)
ror
xchg
dec
pop
mov
mov
inc
pop
nop
add
pop
mov
ins
add
or
xchg
hlt
cmps
dec
adc
push
push
push
or
rcl
ret
mov
mov
xor
lods
dec
inc
pop
pop
cmp
sar
pop
cmp
sub
es
(bad)
inc
adc
out
jle
add
test
push
or
cld
jbe
mul
sub
add
fadd
(bad)
xchg
or
add
push
add
push
cmp
ja
sar
(bad)
mov
icebp
ret
out
dec
inc
test
clc
pop
add
push
enter
inc
shr
repz
adc
pop
cdq
push
inc
ficomp
sbb
sbb
and
mov
iret
pop
ret
pop
movs
adc
cmp
in
push
(bad)
sbb
repz
mov
push
aas
(bad)
jmp
sbb
movntps
push
add
sbb
or
mov
xor
retf
mov
sbb
mov
cmp
jae
sub
push
push
jp
aaa
sub
pop
jg
ror
or
loopne
adc
and
test
mov
adc
nop
push
in
add
pop
sub
ret
aas
cmp
sar
or
or
or
dec
dec
push
rcl
and
or
add
aam
pop
push
and
and
dec
dec
or
fadd
push
int
inc
push
lods
movs
inc
pop
ret
adc
pop
rol
mov
shr
fldl2t
jp
in
push
sub
ja
add
dec
shr
adc
jg
or
(bad)
std
mov
sub
cld
lea
aad
jo
repnz
push
push
mov
movs
fld
(bad)
inc
mov
sbb
add
dec
mov
dec
jmp
rcr
xchg
into
ins
push
hlt
sbb
and
pop
cmp
cmps
inc
dec
dec
jne
cmp
mov
sbb
ror
sub
loope
xchg
and
inc
add
ins
xchg
adc
push
or
call
add
cmp
lahf
sahf
push
inc
sbb
cwde
jg
sub
sub
fmul
add
popa
inc
bound
inc
scas
jle
xchg
xchg
sub
scas
mov
pop
imul
pusha
or
jbe
pusha
xchg
cmp
rcl
push
int3
dec
inc
or
or
fist
mov
cmp
jno
mov
hlt
call
push
call
mov
ds
int3
push
loopne
daa
add
or
cmp
xor
cmp
cmp
pusha
mov
es
pop
mov
jb
mov
sbb
fcomp
add
or
nop
xor
add
dec
push
aaa
ss
or
sub
ror
xor
xchg
pop
shl
push
add
and
mov
cmc
pop
jl
cmp
inc
scas
lea
mov
mov
aad
and
add
mov
dec
sub
adc
leave
xor
and
adc
sub
push
push
jg
movs
pop
mov
sbb
data16
mov
pop
clc
pop
add
nop
or
loope
dec
inc
sub
add
dec
jl
mov
mov
xor
cmps
ja
daa
in
push
adc
push
enter
mov
rol
mov
and
add
mov
fstp
cmp
xor
dec
inc
pop
stos
fs
or
bound
xor
add
nop
add
xor
and
sbb
pusha
adc
scas
cmp
add
xor
inc
out
test
mov
repz
je
sbb
and
fsubp
adc
cmps
pop
adc
add
pushf
mov
mov
and
popa
push
xor
add
loope
cld
mov
dec
xchg
jl
inc
hlt
shl
mov
cmp
aam
test
mov
mov
jl
leave
mov
in
mov
jecxz
scas
daa
imul
mov
scas
cmp
xchg
push
sbb
dec
mov
xchg
xchg
jae
test
rcr
sbb
or
mov
gs
cmp
mov
stc
xor
dec
push
inc
test
sub
jnp
pop
add
sub
inc
sbb
push
xor
sub
mov
push
ins
mov
push
movs
cmp
pop
icebp
mov
dec
dec
cmp
ja
jb
inc
jae
std
cs
or
jbe
aaa
test
test
jl
cmp
push
or
jbe
cmp
test
sbb
sub
jae
xchg
mov
cmp
mov
out
dec
add
sbb
jnp
cmp
cmp
mov
and
bound
add
push
mov
xlat
movs
(bad)
cmc
retf
cmp
jno
ss
add
dec
mov
pop
dec
je
sar
test
scas
xchg
sbb
jmp
loope
jg
jmp
sbb
movs
jno
xor
dec
push
adc
clc
adc
sahf
nop
mov
inc
xor
int
or
adc
push
mov
and
loopne
mov
xor
xchg
mov
jmp
stos
jb
retf
sub
(bad)
rol
dec
dec
mov
mov
mov
dec
add
out
out
and
addr16
stc
push
pop
push
push
dec
movs
push
sbb
add
add
mov
push
or
lahf
je
mov
push
or
push
jae
xchg
inc
pop
(bad)
ret
sbb
aaa
dec
push
jne
enter
je
enter
pop
lock
cmp
rcr
adc
add
adc
inc
mov
or
jmp
inc
adc
dec
clc
mov
mov
mov
mov
rol
sbb
or
jns
jns
aam
fdivr
fsub
loopne
shl
jns
jnp
and
or
mov
es
push
inc
clc
cmp
mov
cmp
add
ret
mov
rol
fdivr
lock
lock
lea
test
sub
imul
inc
jae
mov
and
add
jle
push
ror
cld
jge
sti
test
dec
(bad)
(bad)
jmp
sbb
imul
pop
push
push
mov
mov
push
cmp
sub
lods
push
and
ret
ror
sti
xchg
dec
retf
std
jmp
and
add
push
push
push
loopne
sbb
icebp
pop
jl
mov
hlt
sbb
cmp
shl
lahf
and
fld
aam
and
imul
adc
push
movs
pop
aam
push
inc
pop
in
dec
xor
dec
ret
cli
sub
push
cmp
jbe
mov
outs
mov
pop
cli
add
adc
mov
adc
inc
pop
inc
sar
(bad)
or
pop
cmp
adc
jb
xchg
mov
sub
movs
dec
stc
adc
ror
mov
pop
outs
pop
js
stc
mov
es
lds
rcr
ja
cmp
jae
or
call
xor
test
add
add
ret
adc
add
add
add
arpl
adc
inc
add
mov
cmp
xor
or
inc
gs
mov
add
clc
inc
sub
dec
hlt
clc
jae
into
push
daa
inc
and
mov
cmp
hlt
xchg
push
stos
popf
or
inc
adc
sub
jmp
dec
or
(bad)
mov
jmp
data16
mov
sbb
leave
xor
mov
adc
sub
push
or
jne
sbb
icebp
add
scas
sbb
lock
jl
sbb
jmp
jg
jp
(bad)
aad
sub
mov
loop
or
nop
sbb
xor
cwde
push
inc
pop
add
xor
(bad)
fwait
push
push
xchg
dec
ret
pop
add
fild
sub
addr16
or
mov
retf
call
scas
sub
dec
cmp
add
or
int
add
lods
cmc
mov
and
into
mov
and
push
adc
in
xchg
pop
mov
xor
xchg
into
je
rol
sub
mov
add
mov
inc
cmp
add
push
test
add
inc
xor
mov
pushf
aam
retf
ret
mov
adc
movs
test
fist
pop
add
sbb
leave
mov
and
or
jge
xchg
push
push
mov
add
test
adc
push
pop
(bad)
push
pop
lahf
nop
mov
inc
xchg
aaa
mov
mov
lods
cmp
push
ds
push
xor
xor
add
sbb
out
adc
in
sub
add
add
aas
inc
in
add
xchg
mov
dec
mov
mov
inc
add
test
add
xchg
xchg
mov
mov
jl
jns
clc
inc
aaa
addr16
cmp
xor
inc
and
dec
add
arpl
dec
inc
sbb
mov
shr
in
add
mov
sub
sub
mov
jo
arpl
xor
or
loope
es
adc
ret
jp
push
fidivr
mov
sbb
test
and
jne
mov
xor
fwait
add
add
pop
and
add
loope
ret
xor
inc
lahf
add
or
inc
shl
in
in
push
lea
lock
inc
adc
pop
sbb
lea
ss
sub
pop
xchg
xor
fdivr
mov
xchg
fmul
and
adc
dec
push
ret
ror
nop
inc
xchg
ror
jo
xchg
into
xor
xor
dec
ror
or
pop
jae
loopne
or
cmp
mov
cmc
lea
std
sub
adc
sbb
inc
imul
loopne
add
push
jbe
inc
lea
or
ja
mov
pop
xchg
std
jne
repnz
inc
add
rcl
mov
popf
in
pop
cmp
inc
call
dec
movs
imul
mov
rcr
or
or
(bad)
(bad)
test
jl
cmps
imul
mov
push
retf
cs
data16
and
mov
retf
push
pop
scas
add
sub
mov
jl
mov
mov
push
dec
push
or
aas
push
cs
cmp
(bad)
xchg
inc
mov
push
push
bound
mov
mov
repz
push
int3
or
and
sbb
inc
or
push
push
aad
add
shl
push
aad
lods
push
shl
test
dec
jns
outs
pop
cmps
push
pop
mov
retf
mov
mov
movs
fst
pop
push
jmp
mov
jb
mov
pop
push
mov
add
add
cdq
push
iret
fist
sbb
es
pop
(bad)
and
cs
fbld
sbb
(bad)
leave
and
pop
sub
jl
mov
ret
xor
outs
daa
mov
pop
sar
dec
call
mov
inc
aas
add
add
push
xlat
adc
add
and
in
cmp
sbb
and
mov
push
mov
add
push
push
push
stc
mov
adc
fadd
sub
cmp
mov
jns
jmp
mov
in
scas
ins
pushf
xchg
sar
test
xchg
adc
jmp
sub
ror
adc
push
or
(bad)
in
dec
xchg
push
add
push
xor
add
add
sbb
shl
lock
movs
cmps
mov
cs
mov
cmp
inc
add
cld
jmp
push
pop
movs
mov
jae
repnz
dec
cdq
fcomp
fwait
and
push
mov
push
popf
and
jno
into
adc
xor
push
pop
push
outs
pop
xor
cs
jmp
into
stc
inc
out
pop
ds
sub
fs
test
mov
mov
ficom
inc
inc
and
sti
add
js
mov
hlt
add
dec
fs
cmps
out
into
xor
es
push
pop
shl
mov
and
call
adc
ins
dec
das
cmp
fs
clc
sub
ss
retf
or
and
idiv
inc
retf
xchg
mov
mov
push
jo
retf
outs
test
push
cmp
ret
jmp
adc
or
pop
lods
inc
push
rcr
les
sub
lahf
mov
and
and
mov
push
scas
sar
or
dec
movs
int
out
sbb
test
adc
clc
push
sub
xor
call
shr
cmp
test
and
pop
cld
or
ror
dec
jg
std
fnsave
xchg
or
sub
and
xchg
test
push
mov
hlt
or
sbb
and
mov
xchg
add
add
or
rcr
fadd
push
or
lock
adc
pop
jns
add
add
push
enter
dec
sahf
jl
aas
pop
sbb
add
pop
push
or
imul
sbb
inc
pop
push
gs
xor
dec
nop
fistp
add
adc
pop
lods
or
or
pop
int3
dec
add
loopne
pop
cmps
xor
fadd
jl
pop
pop
cs
add
daa
adc
popa
and
mov
call
adc
int
or
xor
mov
dec
mov
pop
xchg
jns
neg
add
lahf
je
jl
inc
sbb
dec
inc
or
dec
je
sub
lea
and
xor
lea
es
out
rcl
stc
stc
or
and
pop
pop
ret
mov
aad
call
in
jp
jp
adc
xchg
jne
jo
retf
jno
mov
cmp
sbb
and
mov
mov
add
pop
sub
pop
or
add
fist
pop
jno
inc
shl
or
push
sbb
stos
or
push
pushf
push
pop
lahf
cmp
jge
push
jle
push
in
shl
push
xchg
dec
xor
test
nop
mov
cs
test
adc
cmp
ucomiss
aas
ud2
sbb
and
pfmul
(bad)
add
push
int
sbb
xor
pop
jne
fmul
and
cmp
cs
inc
jb
popf
call
cmp
in
aaa
mov
das
icebp
bound
jne
icebp
daa
les
cdq
add
cmc
fwait
ud2
jne
mov
pop
adc
xchg
inc
dec
loope
jg
add
or
mov
inc
jp
sub
or
(bad)
mov
push
sbb
jecxz
dec
pop
fwait
mov
out
add
or
out
adc
add
xchg
je
pop
rcl
adc
sub
mov
mov
mov
js
inc
je
or
jne
add
fdivr
neg
cmp
cmps
fs
in
jle
mov
adc
xor
mov
mov
jae
loop
add
add
jle
add
lahf
mov
inc
outs
aas
push
movq
add
pop
add
mov
ret
bound
loopne
add
xor
mov
pop
pop
mov
push
add
and
cld
push
jmp
cmc
add
imul
xor
and
dec
iret
pushf
sbb
sub
test
mov
mov
test
jl
in
scas
cs
cld
and
mov
enter
or
dec
retf
xor
and
mov
(bad)
xor
cmp
stc
xor
int3
cmp
sbb
cmps
push
inc
dec
popa
jecxz
and
stos
imul
or
js
ds
bound
ror
adc
sbb
movs
cmp
loopne
stos
or
mov
dec
xor
jne
sbb
push
dec
cmp
ja
in
mov
iret
xor
pusha
or
sub
ret
jle
fstp
add
pop
cmp
in
scas
dec
or
into
or
xchg
cmp
mov
inc
xchg
push
pop
in
cmp
fistp
call
add
inc
je
pushf
jns
cmp
loope
ins
mov
sbb
nop
xchg
inc
data16
popf
pushf
inc
dec
(bad)
aaa
ins
stos
push
ins
pop
xor
(bad)
lods
add
psubsb
ror
mov
lahf
xlat
nop
popa
enter
mov
push
add
dec
push
add
neg
add
clc
xor
call
and
cmp
and
mov
scas
jne
movs
and
mov
xchg
sub
aaa
dec
push
cmp
jg
retf
std
push
dec
mov
les
loope
sbb
(bad)
push
pusha
rol
loopne
push
mov
pop
push
inc
adc
xor
mov
mov
inc
add
ins
push
inc
cmp
cmp
mov
mov
inc
inc
loope
cmp
loopne
jne
inc
pop
ror
push
pop
cmps
aas
and
adc
sub
call
pop
or
mov
sub
les
xchg
cmp
aaa
fld
fs
inc
cmp
std
ins
fwait
and
jle
inc
scas
dec
or
pop
cmp
mov
adc
or
adc
push
xor
xchg
and
test
mov
and
dec
cmp
rol
inc
jge
pop
add
sbb
mov
sub
dec
sbb
xor
or
adc
scas
test
mov
xor
push
loope
addr16
xchg
add
xor
lea
cmp
inc
cmp
inc
gs
sbb
sub
inc
jl
dec
inc
add
ret
push
inc
jo
inc
push
or
(bad)
sub
jmp
or
xor
mov
test
imul
sbb
aas
push
ret
mov
movs
popa
or
rcl
adc
push
push
dec
xchg
neg
inc
pop
fist
fst
add
pop
rcl
jmp
mov
sub
das
je
cmp
jg
sbb
or
xor
inc
sub
add
jmp
mov
xchg
xor
shr
fimul
rcr
int
push
jmp
ret
sbb
out
sub
adc
shr
xchg
push
imul
rcr
pop
pop
mov
arpl
iret
nop
push
aaa
adc
inc
push
ret
aam
lock
push
jo
cs
push
inc
js
adc
inc
push
mov
imul
jb
rol
add
(bad)
mov
sbb
inc
push
pop
pop
mov
cs
dec
std
mov
push
dec
add
mov
and
xchg
xor
mov
inc
pusha
jl
jmp
adc
or
adc
sbb
or
lock
push
jne
or
out
mov
outs
retf
ret
mov
xor
clc
xor
cmp
inc
loop
inc
cdq
cmp
or
dec
push
or
shr
push
cmp
or
and
cs
jp
pop
add
mov
in
xchg
sub
inc
icebp
mov
nop
cmp
dec
pop
pop
inc
sub
mov
adc
adc
push
inc
xor
cmp
add
stc
retf
pop
ja
push
add
xchg
and
pop
xor
push
pop
cld
in
ja
data16
fs
cmp
ret
add
pop
add
jg
push
pop
pop
or
adc
dec
and
mov
pop
ror
inc
js
jns
(bad)
and
jge
mov
dec
add
shr
or
fsub
and
dec
fst
mov
cmp
mov
pop
jmp
adc
jmp
dec
cmp
test
int3
cmc
inc
cmp
cmp
xor
pop
cld
add
add
retf
jbe
icebp
adc
jecxz
mov
ret
xor
sub
add
sbb
pop
test
push
push
push
fld1
loopne
enter
stos
mov
fisub
rcl
inc
mov
imul
addr16
pop
add
shr
jp
jne
je
add
dec
dec
test
enter
(bad)
sbb
cs
inc
dec
ss
push
je
or
adc
jb
adc
lock
push
mov
das
call
sub
je
jg
push
fadd
inc
retf
ficom
movs
mov
sub
push
dec
mov
or
jae
pop
add
and
popa
dec
cmp
add
mov
xor
je
mov
fcomp
pop
cmp
xor
cmp
aas
sbb
mov
push
pop
push
add
pop
jne
inc
je
sub
add
leave
inc
pop
push
fadd
xchg
and
lea
dec
pop
stos
aaa
adc
xor
sub
cmp
mov
sbb
push
hlt
jae
jo
sub
mov
jl
push
call
sub
jmp
dec
adc
dec
je
ins
call
mov
pop
inc
mov
add
lods
dec
aas
sub
and
push
aas
and
in
and
mov
inc
cmp
rcr
rcl
ret
mov
mov
test
pop
mov
shr
pop
add
rcl
pop
test
dec
jecxz
jge
sbb
or
out
add
or
pop
sub
push
clc
or
fbld
imul
vmaxpd
and
mov
add
mov
jbe
xor
cmp
fmul
jae
sahf
sub
pop
push
lea
aas
dec
lea
fldcw
(bad)
jl
inc
jp
inc
xchg
aaa
movs
jb
pop
pop
sub
dec
or
adc
aas
jmp
add
mov
jae
adc
push
push
sub
addr16
add
mov
sbb
mov
cmp
jp
int3
inc
sti
ins
and
mov
add
sub
call
sbb
repz
cmp
imul
inc
add
cmc
pop
sar
pop
mov
(bad)
in
xor
pop
cmps
cmp
or
and
pop
iret
dec
cwde
or
dec
mov
xor
sahf
pop
pop
jmp
rcl
or
std
dec
push
cli
push
stos
mov
lea
push
add
add
add
adc
pop
adc
into
popa
ror
adc
push
ds
ss
xchg
or
and
pop
jmp
jb
sub
std
popa
mov
leave
daa
push
(bad)
inc
rcr
dec
cmp
mov
jb
adc
pop
jp
pop
dec
arpl
dec
cmp
jbe
and
mov
and
or
test
mov
xor
mov
add
in
sbb
cdq
mov
call
bound
shr
push
imul
and
jle
ficom
aad
adc
add
add
push
pop
leave
xchg
sub
inc
shl
ret
in
sub
sbb
mov
outs
clc
sbb
mov
cmp
push
mov
inc
or
retf
cmp
jbe
pop
pop
maxps
adc
add
or
sub
pop
cmp
imul
pop
pop
movs
in
bound
add
das
push
or
mov
add
or
cwde
sub
push
inc
nop
and
mov
pop
(bad)
inc
sub
pusha
ins
cmp
add
sbb
dec
sub
aas
xchg
scas
std
xchg
ret
jae
add
adc
iret
sbb
or
and
sbb
and
scas
mov
mov
jg
add
dec
xor
mov
es
and
sub
or
fisubr
mov
inc
cld
and
adc
retf
inc
lea
stos
ret
(bad)
int3
test
jb
cmp
imul
push
jno
mov
inc
jnp
mov
push
cmp
push
aas
cmp
lock
data16
add
push
pop
mov
cmp
or
dec
inc
fwait
xor
pop
push
mov
pop
cmc
jg
pop
push
ret
sbb
ficom
mov
mov
sbb
arpl
push
mov
add
pop
pop
mov
jb
add
adc
add
mov
ins
popa
jnp
lock
push
sbb
mov
sqrtps
js
in
retf
mov
(bad)
xor
stos
mov
inc
adc
ds
sbb
cmp
adc
dec
adc
and
(bad)
(bad)
call
dec
push
xor
mov
xor
movs
mov
test
sub
ja
push
sar
dec
sub
inc
sub
sub
adc
or
mov
popf
or
mov
movs
pop
dec
dec
xchg
test
mov
cmp
dec
cmp
fs
inc
mov
push
retf
mov
pop
cmp
mov
inc
je
stos
push
cmp
push
sbb
sbb
sbb
jmp
dec
je
pop
inc
push
mov
stos
mov
or
add
or
xchg
or
mov
and
xchg
pop
adc
inc
push
xor
jmp
popf
adc
fwait
inc
xor
adc
ds
shr
cs
dec
cld
in
sub
mov
inc
bound
in
mov
loop
test
(bad)
jl
sahf
sub
pop
push
push
jmp
push
mov
jno
arpl
add
push
push
cmc
and
into
jmp
mov
ins
out
popf
pop
push
test
xor
ss
inc
xchg
mov
xor
sbb
jno
loopne
jge
mov
or
adc
stos
push
mov
lea
les
or
and
punpcklwd
adc
dec
(bad)
adc
out
es
sub
mov
test
push
mov
xor
xor
or
push
push
pop
mov
add
push
repz
xchg
adc
retf
pop
jmp
(bad)
jp
inc
loop
ja
cmp
mov
jo
jmp
inc
adc
cmp
es
add
imul
(bad)
mov
popa
movs
add
pop
add
cdq
xchg
push
daa
popa
ins
js
pop
(bad)
pop
push
int3
inc
je
push
xor
mov
mov
mov
ja
mov
xchg
push
aaa
popa
cwde
or
jmp
(bad)
dec
sbb
jmp
cmp
adc
push
loope
adc
addr16
add
cmp
xchg
(bad)
mov
xor
cdq
inc
xor
inc
in
hlt
sbb
outs
sbb
inc
je
fdivr
in
sbb
mov
sub
fsubrp
jo
inc
lods
mov
int3
jns
add
or
and
sbb
lods
push
pop
fs
call
jo
shr
push
add
dec
dec
xor
push
push
adc
in
mov
and
xchg
mov
enter
mov
xchg
js
mov
jo
mov
arpl
pusha
pushf
jb
push
jge
or
mov
xchg
inc
push
inc
aas
(bad)
sahf
cmp
jge
or
xor
sub
lock
cs
gs
in
dec
mov
mov
into
mul
xor
push
add
jmp
loopne
cmps
rol
pop
lahf
add
out
xor
adc
cmp
test
sub
sub
sub
push
das
(bad)
ins
push
clc
add
and
pop
xchg
inc
mov
jecxz
data16
mov
test
aad
pusha
adc
adc
xor
add
(bad)
mov
mov
das
jmp
sahf
imul
inc
inc
cmp
pop
out
jp
mov
aas
xlat
aaa
lock
stc
dec
xchg
add
pop
pop
(bad)
mov
sub
and
and
jns
pcmpgtb
add
iret
and
add
inc
inc
dec
in
sbb
cmp
shl
nop
mov
daa
aas
adc
add
(bad)
aad
dec
and
cmp
jp
xchg
jns
push
cmp
pop
idiv
lea
outs
(bad)
pop
ret
sbb
sbb
push
cld
pop
push
push
push
imul
add
jnp
stos
inc
push
inc
sub
out
xor
call
in
sti
sti
sti
mov
sti
sti
enter
inc
ja
cmps
push
cs
inc
jg
and
and
push
dec
push
stc
pop
pop
mov
iret
inc
push
leave
push
pop
pop
lock
xor
dec
mov
pusha
jecxz
ror
and
adc
mov
imul
mov
sbb
imul
shl
loopne
(bad)
sbb
push
sub
pusha
push
sub
xor
sbb
or
dec
inc
adc
xchg
xchg
sbb
mov
sbb
sbb
dec
sbb
call
or
sbb
pop
mov
push
jg
push
(bad)
and
adc
(bad)
cld
hlt
xchg
lea
retf
push
mov
sahf
xchg
outs
push
and
inc
fst
ja
dec
mov
dec
sub
enter
cmp
nop
aaa
out
dec
cli
das
pop
push
sub
dec
test
cmp
je
sub
dec
cmp
cmc
out
std
add
rol
or
cmp
xchg
pop
xchg
stos
lock
ja
cmp
test
adc
add
outs
call
setb
aad
mov
movs
push
mov
add
adc
retf
out
and
mov
add
shr
or
mov
shl
add
sar
clc
inc
lea
mov
(bad)
(bad)
rol
ror
dec
jge
fld
mov
sbb
jmp
lock
mov
cmp
stc
lock
fisub
mov
dec
pop
xchg
mov
and
pop
or
sbb
movs
pop
inc
push
sbb
sbb
xor
push
add
fnsave
jl
ret
stos
xchg
scas
je
sbb
(bad)
pop
pushf
adc
add
lods
sub
test
lea
(bad)
sub
cmps
test
jecxz
sbb
ror
xchg
mov
shl
lock
fcmovnb
loopne
mov
dec
shl
adc
push
enter
sar
fwait
(bad)
xchg
js
sbb
jnp
dec
or
xchg
mov
inc
nop
retf
cld
mov
dec
add
bound
cdq
out
loope
mov
cmp
xchg
in
call
jne
mov
ja
jne
int
inc
adc
loop
xchg
pop
pop
data16
adc
ja
jg
mov
or
xchg
dec
enter
xor
xchg
or
test
and
jl
adc
xchg
or
je
xchg
and
in
es
hlt
sub
inc
sbb
dec
scas
fs
or
in
and
push
dec
pusha
in
sub
fs
cs
pusha
pop
mov
fcomp
xchg
or
es
fcomp
nop
dec
xchg
push
aam
sbb
shr
dec
dec
or
xchg
and
in
es
inc
inc
cdq
nop
dec
xchg
inc
cmp
sbb
dec
scas
fs
cmp
xchg
or
in
and
in
xor
mov
cdq
nop
dec
xor
inc
sbb
dec
scas
sub
lods
mov
and
es
and
in
and
or
test
jge
ficom
pop
pop
or
pop
shr
inc
and
mov
test
add
xchg
xor
daa
add
add
add
inc
jo
xor
and
ins
adc
xor
and
xor
and
add
add
add
mov
push
inc
push
xchg
dec
dec
and
in
xchg
dec
or
dec
cmp
cmp
jnp
xchg
add
test
and
dec
jb
inc
xor
sub
xchg
pop
adc
or
and
dec
add
add
enter
add
jb
aaa
stos
jne
movs
and
jb
adc
mov
and
and
sbb
and
xor
cwde
pop
leave
test
adc
jb
nop
xchg
adc
fcomp
and
pop
ins
out
add
add
add
push
push
dec
pop
inc
or
arpl
loopne
cld
cwde
add
pop
mov
push
or
dec
lock
jne
movzx
adc
xchg
or
pop
jg
mov
xchg
push
in
sbb
clc
retf
xchg
push
xor
push
cmp
cmp
in
adc
or
retf
fidivr
scas
(bad)
imul
je
pop
mov
push
in
call
cmp
add
xor
pop
jo
xor
ins
ja
std
push
push
inc
or
pop
cld
sbb
mov
dec
cmp
mov
add
pop
rol
ret
pop
movs
sti
sbb
push
adc
add
test
ret
das
mov
lea
mov
add
add
or
shr
dec
test
mov
mov
sub
cmp
adc
push
push
push
inc
push
or
sbb
jns
cmp
xor
ss
ins
movs
js
adc
add
jne
ds
cwde
pop
jo
inc
mov
adc
xor
leave
xor
clc
ds
push
outs
or
push
sbb
jmp
xchg
cmp
pop
test
mov
hlt
adc
add
jbe
jnp
(bad)
dec
push
pop
adc
add
push
sbb
sub
mov
dec
sar
fdiv
or
sub
add
es
imul
and
(bad)
ins
mov
mov
sar
jl
or
ret
mov
push
ficomp
rol
(bad)
jns
ins
loop
adc
and
cmp
sub
push
pop
xchg
pop
sbb
retf
in
xor
jg
push
adc
jge
inc
cdq
push
sub
lock
inc
or
movs
xchg
popf
or
lock
das
push
popa
add
add
or
jo
mov
dec
test
rcl
push
mov
sub
iret
and
into
xchg
outs
repnz
cmp
pop
or
ret
mov
jg
push
xor
push
add
mov
add
cmp
jo
aam
xor
jmp
(bad)
(bad)
sub
jmp
inc
icebp
or
ss
data16
cmp
daa
push
and
test
ins
int3
clc
jle
pusha
push
or
inc
jb
popa
dec
sub
(bad)
or
daa
test
mov
js
pusha
pop
sub
and
cmps
popa
push
push
movs
shr
sub
push
inc
push
lea
lock
sti
xor
daa
pushf
movs
mov
sahf
add
imul
jne
add
ret
icebp
pusha
outs
add
ja
add
aam
sahf
ret
xchg
sub
sbb
sub
mov
push
cs
push
or
mov
mov
(bad)
mov
adc
sar
push
xor
pusha
sub
sub
adc
xor
nop
fisttp
jmp
loop
gs
push
mov
cmps
mov
movs
sub
adc
push
push
or
push
push
and
mov
jmp
lea
js
dec
jmp
add
jo
or
mov
pop
ret
xor
aaa
sbb
mov
adc
push
add
stc
push
fs
mov
gs
mov
sbb
inc
push
xor
aam
inc
jo
mov
sub
push
hlt
mov
bound
mov
ret
mov
sbb
sub
xor
cmps
comiss
lods
outs
xor
outs
and
xchg
ror
call
cmp
inc
pop
fstp
mov
push
std
add
dec
or
fisttp
fs
add
jnp
cmc
cmp
sbb
dec
add
cmp
and
fstp
push
mov
test
sub
retf
xchg
add
scas
test
scas
sub
or
pop
test
stos
jnp
or
movs
test
jmp
and
aam
push
cmp
(bad)
pop
adc
or
(bad)
pop
fs
mov
push
or
push
cmp
movs
sub
mov
lock
gs
aaa
inc
rol
xchg
xor
pop
ja
dec
sbb
add
inc
adc
push
stos
gs
daa
push
push
imul
add
bound
stos
mov
mov
cmp
jb
add
pop
fld
enter
ret
jne
ins
pop
ret
mov
jmp
or
pusha
icebp
jge
cmp
push
mov
sbb
js
sbb
es
sub
retf
push
iret
inc
jne
xor
add
push
xchg
lock
call
test
dec
test
lock
cmp
push
xchg
jne
adc
aad
ja
aad
pusha
xchg
mov
add
clc
cmp
(bad)
and
imul
xchg
mov
push
and
sbb
inc
out
jmp
jne
push
and
mov
sub
mov
out
enter
push
add
cld
cmp
mov
fs
in
(bad)
ss
jge
add
pop
or
mov
test
jg
cmp
add
int3
jne
mov
clc
jmp
dec
mov
sbb
test
mov
mov
xchg
pop
ja
cmp
jl
push
fmul
pop
(bad)
jmp
dec
pop
cmps
mov
add
cmp
inc
dec
cdq
pop
ror
dec
sbb
xchg
and
shl
fcom
jle
mov
push
enter
xor
cmp
xlat
lock
(bad)
pop
bswap
loopne
popa
inc
pop
retf
inc
mov
cmp
loope
inc
cmp
out
xchg
ret
jmp
shr
scas
fst
in
and
shl
mov
sbb
scas
sub
pop
mov
imul
jne
enter
les
sub
js
and
fcomp
cmp
or
jae
aaa
jecxz
xchg
jno
xor
adc
je
fadd
mov
mov
pop
add
sub
ja
push
or
or
mov
push
add
jbe
mov
fbld
mov
inc
pop
pop
push
cmp
test
push
mov
dec
mov
xchg
pop
xchg
add
sub
js
inc
push
outs
cs
or
or
test
mov
mov
popa
hlt
mov
stos
jg
(bad)
imul
fs
aad
mov
or
lahf
bound
add
leave
xchg
cmp
jne
out
fstp
xor
mov
pusha
emms
and
pop
dec
or
cmp
(bad)
or
lock
jbe
mov
lahf
cli
movs
mov
or
jmp
iret
cmps
lds
sub
shr
loope
les
enter
xor
jb
add
in
cmp
stc
outs
aam
add
sbb
add
outs
mov
sbb
(bad)
(bad)
jbe
in
sbb
mov
xor
pop
retf
(bad)
out
cs
fnclex
das
test
xor
pop
inc
jne
aas
and
ror
ins
aas
adc
fidiv
cmp
or
cs
outs
pop
sbb
add
ja
jno
fcom
pop
dec
ins
shr
outs
loopne
inc
adc
enter
mov
pop
add
push
loopne
jae
fisttp
fimul
fsub
leave
inc
jp
loop
(bad)
or
and
ins
or
pop
rcl
test
loopne
jnp
dec
inc
inc
mov
push
add
mov
(bad)
mov
adc
popf
adc
cmp
xlat
imul
mov
jmp
shr
dec
or
push
test
pop
mov
mov
push
push
int3
(bad)
out
shl
mov
loope
xchg
nop
add
jbe
lods
lea
sar
mov
jb
in
add
jge
inc
add
popa
stos
cmp
xchg
jns
add
ss
clc
out
(bad)
jne
fs
shr
or
or
cmp
bnd
cmps
shl
add
ret
repnz
add
test
push
in
inc
or
mov
mov
xchg
ins
ror
lock
pop
add
sbb
xchg
(bad)
jge
push
cpuid
mov
(bad)
mov
sbb
fdivr
push
sub
cs
icebp
imul
pop
push
xor
or
fdivr
jnp
inc
ret
push
ficomp
jne
jbe
fild
(bad)
rol
and
sbb
jo
jns
push
adc
sub
add
je
cmps
pusha
or
push
les
dec
into
adc
push
and
pop
cwde
or
ret
jno
loope
mov
stos
add
jmp
pop
fmul
dec
ss
cli
xor
fsubr
test
or
or
daa
ins
repz
rcl
sub
dec
inc
jmp
shl
rol
inc
fsub
push
loopne
jne
or
mov
jge
mov
mov
and
daa
pop
mov
inc
push
cmp
mov
xchg
lods
fdivr
push
cmp
inc
in
xor
lods
int
mov
fdivr
jmp
mov
enter
or
test
xchg
lahf
xchg
xchg
xchg
test
js
mov
movs
or
test
(bad)
jecxz
xchg
ins
lods
push
std
mov
scas
loope
test
mov
inc
pusha
sbb
cld
push
cmp
test
and
test
xchg
or
dec
fild
or
loopne
fcomi
loop
les
(bad)
sbb
push
ret
lea
xor
adc
fsub
imul
out
inc
push
push
mov
imul
jo
push
add
or
add
inc
test
pop
cmp
inc
les
loopne
and
idiv
mov
je
cmp
or
in
test
xor
call
fcom
ret
clc
lods
hlt
dec
push
and
loopne
add
cs
addr16
sub
loopne
xor
inc
bound
mov
ds
jle
cld
add
aad
sbb
jmp
(bad)
adc
pop
mov
loopne
repnz
adc
xchg
(bad)
arpl
fld
jl
lods
cdq
js
popaw
mov
or
add
cs
enter
gs
mov
cwde
les
pop
and
shl
dec
cwde
mov
push
lock
cmp
jecxz
arpl
push
add
or
out
mov
push
jne
xchg
not
add
in
addr16
test
cmp
dec
icebp
jle
add
adc
outs
js
xor
clc
add
inc
dec
mov
lods
mov
push
pop
out
dec
aaa
pusha
or
shl
sbb
clc
xor
cld
pop
fidivr
dec
dec
in
aas
outs
mul
loope
repnz
in
add
enter
cld
dec
loope
pop
mov
test
lock
jp
dec
adc
(bad)
hlt
not
jo
adc
sti
push
das
mov
push
(bad)
and
add
test
call
dec
lea
cmp
sbb
ins
add
ret
shl
mov
jl
xchg
or
mov
ds
test
loopne
push
or
xlat
mov
repz
sub
push
sub
add
retf
hlt
push
add
adc
and
and
pop
cld
jmp
out
out
and
aam
adc
mov
enter
sahf
xor
or
imul
and
mov
xchg
push
pop
imul
loopne
inc
or
stos
sti
movs
je
mov
sbb
scas
fsubr
iret
fdivr
imul
sub
mov
pop
imul
and
stos
sbb
repnz
shl
push
and
(bad)
ret
out
jmp
mov
push
mov
push
push
and
les
xor
stos
rol
sub
rcl
ds
popa
aad
loopne
inc
or
test
mov
ss
(bad)
mov
sub
mov
jmp
push
pop
and
leave
pop
push
rcl
in
jbe
fadd
or
rol
xchg
cli
add
lods
jnp
or
sub
jne
les
ret
or
cmp
or
cmovo
add
loop
mov
dec
xor
dec
mov
es
imul
or
or
mov
movs
ss
adc
popa
call
adc
movs
push
mov
(bad)
jmp
adc
add
and
pop
test
push
inc
add
jmp
ss
shl
cmp
ficomp
out
fisttp
or
adc
pshuflw
inc
mov
cmp
pop
sub
scas
dec
sti
fisubr
ret
xor
jne
push
jmp
shl
or
bsf
mov
call
hlt
jge
shl
sub
out
pop
push
jne
and
adc
dec
cmp
movs
mov
mov
enter
sbb
repz
xchg
inc
inc
movs
into
mov
or
clc
clc
je
pusha
mov
imul
aam
mov
sbb
jmp
and
jb
rcl
pop
pop
mov
ret
adc
rol
mov
js
in
sub
fwait
push
push
or
stos
xor
data16
sahf
jne
pushf
scas
and
fucomi
add
push
dec
mov
pop
or
jmp
xor
and
adc
pop
push
ins
jge
pop
idiv
cwde
outs
inc
data16
jmp
popa
mov
jo
data16
or
push
or
sahf
lock
rol
adc
add
push
add
cmp
jne
out
inc
jo
or
enter
lods
mov
dec
add
adc
sbb
call
stos
xchg
leave
inc
jae
lea
fadd
jmp
stc
inc
add
movs
mov
mov
or
inc
ret
ror
cmp
pop
out
leave
movs
not
push
sub
and
stos
adc
daa
or
loop
lock
adc
test
lods
out
sbb
push
pop
mov
bound
popf
jg
jo
xchg
ret
pop
icebp
into
mov
rol
(bad)
mov
cmc
fs
adc
and
dec
movs
shr
stc
or
bt
add
mov
mov
and
inc
dec
rep
adc
cs
test
lods
push
popa
loopne
push
jbe
call
fist
xchg
retf
(bad)
mov
mov
dec
int3
push
sub
call
jae
movq
sub
adc
sub
push
fnstenv
cmp
add
mov
outs
dec
hlt
repz
mov
adc
pop
xor
inc
and
xor
mov
(bad)
jg
sub
repnz
ret
sbb
in
mul
les
jge
ins
or
mov
mov
push
fisttp
dec
add
sbb
or
jmp
mov
cld
cld
add
add
and
add
add
js
outs
ins
adc
outs
adc
cmp
mov
sub
mov
dec
call
shl
je
mov
mov
dec
add
(bad)
(bad)
pop
mov
bound
pop
jge
data16
movs
and
jmp
sahf
fstp
nop
or
jl
pushf
ss
mov
mov
inc
add
(bad)
daa
or
add
hlt
xor
add
cmp
je
xor
(bad)
adc
sub
jb
loopne
pop
mov
repz
add
push
ds
pop
inc
add
mov
gs
jns
mov
nop
or
push
sub
dec
out
dec
call
adc
das
daa
xchg
push
adc
push
cmps
cmps
sti
dec
addr16
push
out
cs
out
pop
push
push
dec
adc
push
and
iret
pop
xor
outs
push
jbe
jle
jl
(bad)
jg
push
dec
dec
jg
jg
jg
aas
cli
repz
jg
jg
jg
jo
ins
mov
rcl
lea
jb
in
pop
lds
out
and
xchg
adc
inc
je
xor
jo
or
dec
mov
je
jmp
xor
lock
icebp
xchg
push
pop
retf
jmp
fidivr
int3
add
jecxz
loope
xor
push
inc
jmp
mov
mov
xchg
sbb
data16
imul
mov
push
data16
aad
or
mov
add
sub
mov
push
mov
push
jmp
mov
push
mov
les
mov
sub
sub
inc
inc
dec
jne
jge
xlat
mov
movs
adc
xchg
lahf
fst
push
mov
imul
push
mov
shr
or
retf
add
clc
inc
rcr
mov
cmp
shl
or
pusha
sub
sub
aad
jo
test
inc
add
clc
inc
dec
sub
dec
push
push
push
test
into
xchg
cmp
mov
shl
or
je
pop
rcl
fcmovu
xor
fcmovnu
xor
mov
stos
iret
dec
add
dec
push
add
inc
adc
dec
in
shl
adc
je
aam
test
mov
mov
sti
out
pop
loop
cmp
nop
push
(bad)
out
int
cwde
retf
rcl
ror
mov
add
mov
sbb
lods
cmp
jae
fild
adc
lea
xchg
test
jne
and
cdq
das
and
stc
mov
push
xor
cmp
lds
sti
mov
adc
sbb
cmp
mov
jmp
dec
scas
or
mov
(bad)
test
push
dec
and
ret
dec
fadd
loopne
dec
ror
loopne
enter
push
fadd
fild
(bad)
mov
jmp
push
call
lock
aad
mov
popf
int3
adc
ror
loope
sub
push
mov
sbb
mov
dec
jno
jns
or
or
add
dec
sbb
xchg
cmp
stos
js
ret
popa
ins
lods
mov
mov
outs
mov
test
mov
inc
mov
data16
ret
cmp
mov
cli
push
and
(bad)
jne
lea
mov
test
je
add
les
clc
imul
xchg
push
mov
shl
fucomip
stos
inc
shl
imul
sbb
jg
pop
adc
sub
xlat
sub
inc
cs
sar
ret
imul
add
mov
sbb
daa
cli
ret
inc
xor
add
cmps
mov
inc
ins
out
out
sub
test
mov
ret
or
test
xor
pusha
rol
push
jo
fst
sub
vxorps
out
pop
prefetchnta
sbb
test
add
out
es
push
inc
rcl
mov
bound
jg
add
fldcw
cmp
jne
sub
pop
push
push
or
inc
jb
js
clc
ins
and
movs
imul
or
andps
pusha
test
add
dec
call
xor
scas
push
rcr
or
sbb
popf
mov
mov
mov
outs
jge
mov
lea
inc
clc
fs
sbb
sbb
push
jecxz
push
inc
pushf
mov
das
ficom
or
jbe
inc
add
rcl
add
and
fdiv
add
int3
xchg
jnp
enter
or
rcl
push
add
or
and
pop
cmp
in
push
call
mov
mov
and
pushf
or
pop
pusha
xchg
adc
fwait
xchg
pop
cld
popf
jb
test
mov
push
add
or
sub
jge
fs
cli
sub
enter
ficom
mov
ins
push
push
jne
inc
bound
addr16
lods
adc
mov
adc
or
sti
adc
enter
cmp
push
jge
sbb
imul
mov
cmp
cli
dec
imul
fadd
or
inc
push
pop
iret
mov
ja
xchg
pop
pop
nop
jecxz
loope
out
inc
out
fadd
cmp
call
pop
ins
jb
push
dec
test
xchg
arpl
jb
cmp
pop
jge
clc
test
mov
cld
xor
lods
mov
pop
sbb
loopne
dec
inc
add
cmp
adc
mov
sbb
push
retf
xor
jnp
xor
adc
dec
retf
mov
add
push
stos
xor
push
pop
cli
push
fnstcw
dec
and
adc
fidiv
test
mov
pop
xchg
stc
push
lea
ret
cmp
rol
lods
call
xor
fimul
and
clc
push
or
dec
cmp
xchg
call
mul
data16
xor
jle
std
(bad)
repz
(bad)
jmp
jmp
push
and
jo
or
add
rcr
loope
xchg
jo
test
or
lds
pop
xchg
push
test
daa
pop
nop
(bad)
sbb
cld
adc
xor
sbb
imul
lds
mov
(bad)
and
loop
push
pop
test
sub
retf
xor
lock
dec
pushf
sub
xchg
mov
stos
dec
test
adc
ja
and
test
in
mov
mov
add
xor
into
dec
xchg
fist
push
jecxz
int3
or
clc
(bad)
mov
mov
pop
inc
or
or
mov
xchg
jg
push
sar
shl
sub
push
push
stos
mov
hlt
and
int3
(bad)
pushf
inc
push
pop
lods
test
aaa
adc
scas
frstor
jge
cmp
cld
cmp
je
outs
int
add
or
sbb
imul
push
ja
icebp
idiv
mov
push
data16
mov
das
aaa
jb
sub
outs
adc
push
jne
retf
stc
mov
xchg
imul
jecxz
jbe
shl
stos
jmp
je
pop
mov
adc
jmp
push
mov
aas
movs
lock
into
push
jmp
sbb
add
out
out
mov
or
cmp
lods
add
in
push
mov
ret
shl
push
or
xlat
dec
mov
pop
adc
dec
sbb
lods
out
dec
lock
sar
ror
ds
push
mov
adc
out
retf
mov
cmp
je
xchg
pusha
xchg
in
jbe
arpl
mov
loopne
cmp
outs
das
push
es
fs
xor
lock
(bad)
jmp
jmp
add
mov
mov
push
out
push
shl
cli
xchg
xchg
push
mov
stc
pop
inc
push
xor
lea
inc
inc
arpl
enter
sbb
push
test
and
fld
enter
stos
jl
pop
daa
sub
or
mov
xor
or
xchg
ins
mov
daa
ror
push
jne
es
fldcw
les
add
xchg
inc
adc
loopne
mov
sbb
add
and
mov
mov
push
jae
js
sar
mov
push
out
sub
nop
jb
std
sub
and
imul
push
jae
push
mov
jns
mov
pop
and
or
test
jo
ins
pop
jg
sbb
aaa
lods
and
sahf
(bad)
sbb
or
cmp
cmp
sbb
and
push
ret
add
inc
adc
cmp
jne
adc
ds
pop
mov
push
mov
cmp
adc
jl
(bad)
es
cwde
rcr
adc
arpl
inc
push
lods
inc
jo
or
adc
retf
cs
pop
add
lock
jl
ror
sbb
aaa
push
fwait
aam
scas
or
dec
mov
(bad)
jno
mov
and
in
or
push
sbb
inc
cmp
les
dec
adc
dec
rol
aam
ret
lds
or
push
aam
jge
add
sbb
xchg
jno
sbb
pop
mov
enter
call
mov
scas
add
ins
jne
sub
dec
sbb
xor
pop
inc
jne
in
jo
cmp
aad
inc
call
mov
add
add
jne
clc
gs
data16
in
mov
cmp
in
rol
mov
int3
pop
and
add
jbe
add
shl
(bad)
sub
jb
imul
push
ror
fidivr
shl
sub
xchg
ror
and
pusha
sub
mov
bsf
add
and
sbb
push
idiv
adc
mov
test
inc
adc
retf
je
jge
(bad)
push
sub
fdivr
push
neg
mov
(bad)
(bad)
(bad)
jle
div
retf
add
add
xor
shl
or
jo
loope
jbe
and
xor
pop
jge
outs
or
and
int
push
rcl
icebp
(bad)
cld
cmp
je
cmps
jmp
jns
out
cmp
cmp
fs
or
js
std
js
test
cld
or
jl
out
sub
jp
pop
adc
mov
push
mov
dec
jecxz
call
mov
daa
mov
xchg
xlat
or
out
rcl
or
cmp
dec
enter
xchg
add
jmp
push
push
mov
mov
into
jno
mov
push
dec
adc
and
pop
push
daa
or
jl
sub
sti
and
cmc
adc
mov
pop
and
movs
loopne
data16
adc
call
push
cmp
fcmovb
xchg
mov
push
push
mov
dec
adc
mov
add
pop
jno
pop
mov
and
xor
pop
pop
pop
leave
xor
call
xor
jae
cmp
xor
adc
or
dec
lds
or
aas
test
daa
and
hlt
push
hlt
xchg
movs
leave
and
jmp
sbb
dec
cli
adc
mov
adc
pop
lods
nop
and
add
dec
adc
add
sub
jno
pop
pop
sub
xchg
adc
dec
sbb
fidivr
scas
mov
in
les
test
mov
add
sbb
mov
setb
movs
add
adc
int
jo
std
adc
dec
dec
add
adc
test
loopne
push
and
retf
mov
jbe
mov
dec
ficomp
mov
sub
and
loopne
fcom
sbb
adc
outs
pop
movsx
aam
dec
add
adc
dec
fdivr
dec
or
cmp
clc
jl
fistp
cmp
jle
mov
or
jne
adc
xacquire
cwde
add
mov
jmp
jb
sub
(bad)
push
push
cmp
cmps
sub
push
out
xor
adc
icebp
lods
out
xor
jo
cmp
inc
scas
and
cwde
or
int3
pop
enter
repz
aas
dec
push
cmp
jg
shl
cmp
bnd
cmp
jne
dec
and
and
add
out
stc
je
mov
pushf
fadd
pop
jle
adc
jbe
in
pop
jg
cli
lods
and
(bad)
sbb
sbb
and
or
adc
test
lahf
xor
movs
cmc
or
and
sub
or
push
adc
pusha
lea
in
jmp
pop
or
jbe
in
jae
inc
mov
sbb
inc
adc
popf
mov
pop
adc
jmp
scas
ss
adc
jnp
adc
or
xchg
retf
scas
mov
and
shr
movs
sbb
test
sub
inc
jl
rcr
in
push
shl
test
ds
rol
pop
jle
cmps
repnz
and
pop
cmps
cmp
and
movs
test
mov
in
sbb
lea
dec
sbb
add
hlt
mov
cmp
cmp
jne
shl
leave
ja
push
sbb
or
shl
cmps
je
rcr
test
adc
sbb
mov
daa
loop
out
pop
ds
and
mov
jp
sbb
adc
cdq
add
pop
cmp
mov
push
jg
xchg
push
cmp
jmp
push
and
stos
cmp
mov
push
aam
and
jg
mov
test
loopne
jns
mov
sub
inc
lock
mov
cmp
adc
sbb
in
push
push
add
cld
into
push
in
inc
les
mov
inc
mov
dec
mov
xchg
jno
mov
push
jmp
mov
sar
sub
xor
test
mov
cs
cmp
fldenv
or
xchg
and
mov
scas
push
jg
dec
enter
adc
push
addr16
adc
fs
cmps
stos
cmps
sub
(bad)
xchg
loopne
clc
inc
xchg
mov
loop
push
lds
push
or
adc
outs
dec
pop
add
and
or
xor
push
or
inc
and
(bad)
push
popa
jne
dec
lds
imul
cmp
and
fs
add
pop
push
jmp
mov
jo
loop
jle
cdq
dec
xor
jno
js
rcr
je
pop
sti
fistp
jbe
xchg
aaa
pop
jl
inc
mov
and
lahf
adc
pop
stos
ins
dec
push
test
cli
sub
scas
sti
dec
or
aam
mov
mov
inc
mov
aas
das
cmp
je
pop
dec
dec
inc
loopne
sub
push
inc
rcl
and
push
out
push
das
push
and
mov
mov
icebp
shr
jne
mov
cmp
mov
jns
aam
cmp
jl
or
jg
ret
pop
push
jle
shl
jl
hlt
jl
add
clc
ins
pop
add
pop
cmp
cmp
cmp
(bad)
lock
xchg
test
aam
inc
test
push
xor
shl
pcmpeqb
into
inc
add
add
adc
jb
stos
push
retf
das
lea
movs
pop
or
retf
rol
cld
push
adc
lea
enter
sbb
sub
cmp
hlt
push
xchg
sub
mov
jb
xor
xor
sbb
add
push
add
cmp
jmp
mov
ds
sbb
mov
mov
xor
mov
aaa
ja
js
arpl
aaa
jle
inc
add
mov
dec
adc
mov
and
add
sbb
rol
jl
push
(bad)
xchg
mov
fnsave
lds
test
xchg
loopne
ss
inc
adc
loop
push
sub
push
mov
mov
add
add
in
add
jg
retf
push
jno
add
stc
out
adc
jp
adc
push
daa
movs
mov
jns
jo
ret
cmps
test
mov
dec
rcl
sbb
es
and
jbe
sbb
jmp
xor
ret
aas
and
mov
js
jae
push
sbb
pusha
add
dec
lahf
or
je
or
pop
or
mov
mov
cmp
jge
dec
sub
rol
repnz
jge
test
jns
or
mov
and
pop
push
in
test
fsubrp
adc
shr
jb
test
add
bound
lea
call
xor
sub
hlt
shr
scas
stos
test
adc
pop
jecxz
and
lods
pop
pop
cwde
retf
fwait
adc
cmp
movs
cdq
je
ret
xchg
cmps
adc
loopne
cmp
test
das
push
dec
xlat
pop
imul
xchg
ret
loope
mov
ret
jmp
sub
call
jne
push
test
push
push
bound
mov
adc
sub
sbb
or
inc
push
in
js
adc
in
jbe
jo
or
or
pop
retf
sbb
pop
pop
mov
jle
mov
mov
xor
add
sbb
movhps
mov
dec
jne
mov
aaa
xchg
daa
cmps
mov
loopne
cmps
dec
mov
test
or
or
jmp
je
xchg
ret
imul
cmps
(bad)
test
pop
loopne
mov
and
push
aad
cmp
aas
je
push
mov
mov
sub
sbb
test
test
inc
add
je
cmp
sar
cs
rcr
sbb
stos
push
xlat
or
jmp
dec
jle
cmp
pushf
cmp
in
out
push
sbb
or
xlat
jne
cmp
jb
dec
push
lock
jp
test
cmps
push
push
add
div
jl
mov
fwait
pop
jb
add
jnp
arpl
pop
sti
and
aas
mov
jecxz
sub
cmc
addr16
jle
lea
or
dec
lahf
clc
outs
test
dec
add
inc
mov
sbb
ret
je
lea
mov
cmp
bound
test
mov
cmp
xchg
push
stos
pop
push
ret
cmp
gs
and
cmp
and
test
scas
mov
int
or
lods
inc
push
add
jo
pop
mov
mov
sub
sub
add
(bad)
mov
(bad)
sbb
bound
or
ret
(bad)
lods
pop
out
cwde
imul
mov
inc
xlat
(bad)
dec
cmp
push
jmp
dec
outs
add
iret
inc
add
push
push
fcom
inc
push
adc
push
sbb
add
(bad)
adc
push
xor
xor
sbb
mov
cmp
add
repnz
lods
dec
lea
pop
mov
or
xlat
inc
xchg
int3
push
mov
inc
xor
mov
sbb
mov
add
lods
add
inc
add
pop
add
cdq
in
ret
mov
sbb
push
test
adc
inc
loope
loope
mov
or
push
popf
cmp
clc
add
mov
call
and
push
push
mov
xor
xor
jmp
shr
or
cdq
sahf
mov
out
shld
xchg
inc
lods
add
stc
pop
pusha
and
sbb
xor
mov
sub
ror
push
out
or
pop
fbstp
adc
jbe
xchg
cld
nop
push
sub
and
fcomp
aaa
xchg
out
or
aas
mov
push
push
leave
inc
ja
pop
icebp
xchg
mov
sub
push
cmp
and
sub
retf
bound
pop
inc
mov
loopne
dec
jno
push
inc
or
jno
mov
and
pop
sbb
retf
in
push
or
push
or
pop
pop
adc
add
mov
adc
retf
js
ss
call
pop
pop
lock
in
inc
call
mov
(bad)
sti
les
rol
push
mov
xchg
add
outs
cmp
ins
cmc
mov
xchg
or
add
in
inc
ins
or
cmp
cmp
pop
outs
cmp
shl
sbb
sbb
push
push
add
cmp
scas
jnp
add
ins
mov
push
cmp
jne
adc
movs
push
mov
pop
push
or
inc
arpl
xor
pop
mov
pushf
out
push
test
sub
push
dec
add
mov
dec
xor
scas
ja
pop
cdq
inc
mov
je
leave
add
nop
or
enter
and
jb
mov
adc
pop
jb
sub
popa
mov
xchg
movaps
cmp
fcmovnb
sbb
call
scas
sbb
mov
int3
lock
loopne
mov
inc
jmp
adc
pop
scas
add
xchg
pop
(bad)
imul
fsubrp
inc
popf
xchg
or
xchg
pushf
push
test
sar
in
mov
xor
jb
pop
sbb
out
out
movs
mov
(bad)
adc
in
mov
sahf
sub
mov
call
pop
mov
sub
sub
repz
jmp
sub
dec
je
or
jmp
push
sub
ds
std
xchg
cmp
and
std
out
sbb
mov
cmc
mov
call
mov
(bad)
pop
mov
mov
mov
mov
mov
cs
repnz
add
inc
mov
jbe
xor
(bad)
shl
inc
dec
push
neg
pop
and
std
push
or
inc
dec
fistp
(bad)
jmp
add
or
mov
mov
push
mov
jbe
inc
enter
jne
ret
sbb
jl
lods
or
mov
adc
jbe
and
inc
and
mov
dec
das
push
mov
and
shr
(bad)
test
div
fsubr
dec
adc
mov
lods
add
xchg
or
mov
into
add
jno
retf
fdivr
lahf
(bad)
push
repz
lea
je
emms
add
xor
aam
daa
jbe
sub
cmp
test
out
push
pop
pop
adc
sbb
jno
ja
sub
loope
sti
loop
or
or
pop
rcl
(bad)
or
inc
sub
add
leave
mov
cmps
push
push
inc
xchg
dec
in
jg
xor
sub
(bad)
jmp
add
sahf
les
mov
popf
cmp
sbb
mov
add
bound
(bad)
hlt
add
fld
jnp
aaa
push
inc
lea
mov
jmp
clc
fcom
jg
xor
push
push
or
js
dec
and
(bad)
in
ret
sub
jle
cmp
jmp
mov
add
hlt
mov
dec
jmp
(bad)
ss
out
adc
test
inc
pop
mov
mov
add
push
in
push
or
adc
jbe
hlt
repz
out
cmp
sub
sub
xchg
rol
in
add
pop
cld
movs
jb
xchg
stc
adc
or
push
adc
dec
ins
bound
jle
pop
adc
mov
jmp
aas
inc
inc
cmp
pop
xor
jl
xor
push
movsx
arpl
call
test
sub
cli
sbb
enter
or
adc
sbb
shr
imul
cmp
jbe
fist
sbb
out
fmul
xor
mov
push
xor
shl
push
push
push
push
xor
dec
rcl
push
sub
test
xchg
xchg
xchg
ins
test
or
xchg
imul
adc
sbb
adc
sbb
fs
sub
enter
mov
cmp
add
inc
adc
and
add
imul
pop
and
mov
jmp
push
adc
in
jmp
mov
pop
push
ret
add
inc
or
pinsrw
jns
lea
push
lea
dec
add
jo
dec
push
out
jp
or
pop
jl
ja
leave
mov
mov
rcr
enter
fcom
aad
les
es
loopne
leave
fwait
xchg
fnsave
add
xlat
cmp
xor
cmp
mov
mul
mov
add
xchg
jg
or
lock
jmp
inc
pop
inc
mov
ret
mov
sub
or
or
sub
cmp
jne
dec
mov
inc
inc
mov
(bad)
pop
jnp
dec
or
ja
ror
xor
sti
jo
enter
test
sub
sbb
imul
arpl
js
cdq
lods
gs
shl
ins
aad
mov
push
push
jae
iret
pop
and
inc
dec
sbb
mov
cmp
js
add
xor
add
xor
mov
or
fwait
push
pusha
sbb
jmp
or
mov
and
fcomp
mov
dec
cmps
push
stos
bound
lock
cmps
push
jne
je
sub
inc
jb
cld
adc
jne
mov
inc
dec
xchg
sub
ret
sbb
inc
sub
and
mov
enter
sub
inc
adc
loope
fidivr
pop
ss
adc
sub
add
jns
pop
sbb
mov
sbb
mov
push
xor
in
addr16
mov
adc
call
scas
mov
jmp
or
xchg
pop
xor
fisttp
or
adc
jmp
cmp
movs
jmp
adc
jle
test
jmp
xor
sbb
add
adc
mov
sub
call
jl
test
inc
shr
pop
jmp
jmp
add
imul
clc
sub
cmp
rep
mov
ror
enter
dec
mov
nop
das
mov
dec
dec
mov
xchg
out
sahf
ja
mov
mov
push
sahf
jmp
xor
repnz
pop
shl
add
nop
mov
xor
mov
jb
sbb
sub
test
enter
mov
bound
and
into
in
or
test
popf
sbb
push
fcmove
rep
sahf
out
clc
rol
prefetcht2
and
pop
rol
and
push
(bad)
xor
cmp
mov
and
jb
cli
push
add
sahf
out
sahf
or
sub
ss
mov
movsx
stos
and
add
xor
mov
push
cld
cld
mov
or
push
or
adc
jmp
sub
icebp
cld
and
add
sar
sbb
pop
sub
fiadd
scas
ins
cmp
dec
mov
jp
sbb
fst
scas
mov
and
ja
test
xor
add
and
dec
ret
cmc
mov
mov
rol
out
mov
je
test
dec
call
cmp
pushf
or
jne
inc
jmp
fbld
jns
sub
sub
inc
or
push
mov
adc
loope
xor
mov
push
sub
or
push
mov
daa
mov
mov
inc
cmp
cmp
shl
adc
inc
sbb
jmp
in
cmp
push
add
pop
and
aas
xor
push
loop
mov
and
out
cdq
(bad)
add
mov
pop
scas
inc
jae
mov
or
push
je
push
dec
sbb
cmp
jne
inc
fmul
or
inc
jmp
leave
xchg
mov
pop
or
push
mov
add
jne
cmp
std
xchg
mov
push
inc
add
adc
ss
ud2
jmp
pop
mov
cmp
je
cmp
je
cmp
xor
je
cmp
push
ficom
or
push
adc
pop
push
ins
je
or
ja
push
xchg
push
jns
into
aaa
cmp
adc
pop
sbb
ins
jne
inc
fiadd
inc
out
pop
push
add
rcl
sub
and
xchg
retf
int
push
inc
xor
clc
push
pop
cmp
aam
cmp
or
fld
ss
xchg
das
pop
or
call
sbb
jp
fild
or
jbe
pop
in
jne
jecxz
jg
cmp
xchg
lea
outs
jne
nop
xchg
js
popa
pop
xor
push
dec
push
outs
repz
and
mov
maskmovq
lea
das
or
jg
ins
xchg
pop
jg
mov
aaa
or
pop
inc
push
inc
jle
and
add
repnz
jle
shl
mov
xchg
sahf
out
lahf
scas
imul
ficom
pop
je
pop
je
test
in
push
iret
or
rcl
retf
js
or
cmp
dec
je
or
int3
mov
jmp
outs
jne
inc
shl
jmp
adc
lea
pushf
or
or
shl
jmp
xor
mov
jmp
pop
pmulhw
inc
jae
inc
shl
push
cmp
jl
pop
mov
dec
mov
push
popw
inc
std
cwde
dec
clc
mov
inc
mov
je
adc
push
(bad)
xor
adc
jmp
fist
sbb
shr
das
and
icebp
nop
cmp
cmp
addr16
loopne
popa
je
or
fwait
cmps
adc
inc
cmp
(bad)
out
cmp
rcr
(bad)
aas
inc
push
and
pop
cmp
fcomip
ret
out
cmp
push
lea
retf
aas
jbe
or
aad
push
and
mov
jle
es
imul
xor
push
xor
data16
aam
jle
sbb
mov
add
outs
mov
inc
pop
or
mov
pop
jnp
jmp
cmp
js
pusha
jbe
gs
cmp
sbb
add
push
push
enter
jmp
fucomi
enter
enter
push
retf
dec
jle
mov
cwde
jmp
enter
xchg
nop
sbb
sar
pop
xor
cmp
leave
push
xchg
icebp
arpl
into
pop
hlt
fs
data16
sti
clc
push
bound
shl
or
pop
push
xor
jmp
test
enter
xor
hlt
mov
out
dec
icebp
data16
xor
je
cmp
jne
pop
jp
jg
add
scas
in
xchg
mov
ss
push
jl
(bad)
push
imul
sbb
pop
dec
pop
test
xchg
add
push
imul
in
hlt
xlat
pop
push
push
inc
mov
cmp
dec
dec
in
push
xlat
add
xor
int
int
pop
and
leave
ins
push
clc
mov
push
mov
and
dec
pop
push
or
gs
dec
mov
stos
test
jmp
push
out
sbb
test
push
mov
jbe
mov
pop
xor
pop
out
xchg
mov
cli
inc
mov
mov
inc
cmp
das
push
out
dec
sbb
mov
pop
xor
mov
or
mov
retf
clc
sub
push
and
push
xor
cmp
lods
aas
lds
dec
cmp
vcmpeqpd
or
imul
jbe
or
pusha
or
ret
out
mov
jle
mov
inc
inc
jne
sub
outs
icebp
push
adc
hlt
inc
push
mov
push
push
xor
sbb
sub
cmp
leave
rol
add
outs
dec
icebp
xor
dec
push
adc
mov
add
rcr
fs
or
call
mov
push
mov
push
mov
repnz
rcl
movs
pop
pop
push
or
dec
rcr
sti
pop
pop
test
push
neg
add
fiadd
rcr
cmp
jne
sub
inc
dec
call
xor
imul
(bad)
jg
sbb
mov
jp
mov
inc
test
fcmovbe
ror
add
push
dec
movs
xchg
mov
mov
pop
push
mov
pop
mov
mul
xlat
mov
adc
sub
aam
xor
clc
xchg
or
ror
push
paddusw
push
pop
leave
push
lea
ins
or
loopne
xchg
push
jecxz
das
cmps
and
cmp
test
or
pop
rol
xor
cmp
inc
(bad)
cmps
leave
iret
mov
js
add
cmp
push
mov
int3
je
sub
int
adc
and
jno
cld
jns
jne
aad
mov
mov
xchg
rcl
js
loope
xchg
mov
adc
cmp
loope
sbb
lods
add
loope
add
fistp
mov
mov
or
and
leave
jp
ins
ret
jbe
pushf
inc
add
add
mov
pop
sub
fldcw
sub
pushf
shr
cmp
push
movsx
and
jmp
cmp
pop
or
xor
test
and
adc
or
fld
neg
or
rcr
out
ds
pop
jge
add
or
adc
cmp
jle
xor
shr
add
jne
push
mov
mov
jmp
adc
pop
rcr
push
inc
sub
mov
test
call
xor
ds
aas
inc
xchg
ret
and
fisttp
mov
sbb
pop
sub
push
add
pop
and
jmp
adc
push
pushw
jns
ins
jle
pop
aad
imul
push
and
or
add
dec
nop
clc
mov
inc
pop
pop
add
sbb
xchg
push
mov
push
pop
mov
pop
pop
and
or
or
rcl
nop
jge
mov
inc
sbb
xor
dec
inc
push
inc
fisubr
shl
in
(bad)
or
inc
mov
test
les
shr
leave
mov
cmp
scas
sub
jle
push
mov
push
adc
sbb
adc
lock
inc
inc
pop
or
adc
into
bt
icebp
adc
jns
movs
mov
pop
sbb
pop
je
stc
or
sub
pusha
ja
or
cmp
mov
ins
fimul
call
sbb
mov
mov
mov
xchg
or
sbb
jp
(bad)
dec
inc
or
cmp
dec
inc
inc
pop
adc
push
push
mov
dec
gs
lea
hlt
pop
add
push
push
out
rol
mov
in
sbb
cmp
je
cmp
es
push
pusha
sub
dec
sbb
and
dec
jbe
inc
bound
jbe
ret
adc
push
aaa
ret
jns
push
dec
mov
pop
add
int3
js
push
push
shr
lea
sub
add
inc
push
lock
inc
cmp
ret
loope
jo
adc
js
sar
sbb
dec
cli
out
mov
das
movs
mov
or
in
rol
jmp
xchg
or
aam
add
pushw
repz
and
cmp
xor
fldcw
mov
or
push
or
add
cmp
xor
popa
and
mov
push
and
sbb
movs
test
jl
pop
lahf
dec
sub
add
shl
sub
pop
add
adc
pop
xor
or
ins
jge
xor
cmp
cmp
pop
pop
or
inc
pusha
cmp
outs
les
dec
or
inc
dec
pop
and
mov
sbb
clc
je
xchg
pushf
mov
mov
and
push
adc
push
(bad)
sub
sbb
add
push
pop
mov
test
push
xchg
sub
dec
ds
in
ds
cmp
mov
in
pop
cmp
ins
and
(bad)
nop
or
fwait
imul
jne
imul
sbb
repz
jp
cmp
je
add
mov
ins
shr
(bad)
adc
lea
mov
retf
mov
jmp
mov
sub
or
sub
outs
clc
jmp
xor
scas
mov
mov
jmp
push
cdq
ror
stos
movs
shl
or
and
cwde
jge
xchg
ret
lea
out
add
dec
and
call
jnp
imul
cmc
inc
cwde
and
popa
mov
mov
xchg
adc
jp
dec
jg
loope
js
js
and
test
outs
xor
pop
pop
cdq
out
fsub
xor
and
inc
into
sub
cmp
xor
nop
or
adc
inc
in
inc
sbb
mov
xor
mov
add
pop
or
cmp
dec
fisubr
xor
pop
shl
or
sbb
sub
ret
test
in
fcmove
movs
pop
add
ja
jle
test
xchg
movs
hlt
fdivr
inc
es
mov
cmp
fbstp
shl
mov
pop
sar
pop
dec
xchg
inc
lea
adc
dec
pop
aas
mov
lods
or
sbb
in
push
leave
adc
mov
xchg
pop
imul
cmp
and
fisubr
mov
pusha
adc
ins
les
out
cmp
xchg
sub
sub
jmp
ja
xlat
les
xlat
jle
sub
aam
adc
mov
sub
mov
push
adc
in
lea
nop
out
int3
pushf
adc
mov
and
in
(bad)
jo
outs
sahf
add
sbb
dec
and
mov
mov
pop
stc
inc
cmc
inc
push
and
out
push
int3
adc
mov
jnp
dec
and
movd
fwait
cli
sbb
jge
ror
ret
push
cld
int3
inc
adc
and
dec
mov
popf
mov
fmul
loopne
inc
popf
mov
or
in
mov
movs
xchg
iret
in
push
clc
jnp
clc
lahf
push
push
pop
add
sub
fld
push
pop
sbb
cmp
daa
adc
jne
xchg
cmp
outs
add
imul
outs
xor
mov
xor
jge
movs
xchg
add
cwde
pushf
add
cmp
inc
sbb
sbb
mov
das
js
dec
popa
arpl
mov
xchg
pusha
dec
add
cmps
ins
adc
fmul
or
or
dec
call
add
mov
and
clc
in
pop
push
pop
xor
ins
and
sbb
outs
dec
dec
hlt
push
adc
pusha
push
mov
push
dec
push
xor
loope
adc
js
retf
ror
dec
data16
dec
ror
aam
inc
outs
mov
xchg
in
sahf
js
adc
mov
pop
dec
or
test
or
and
fdiv
or
jo
push
mov
and
retf
retf
or
push
mov
retf
mov
lods
fisub
sti
mov
xchg
inc
adc
jl
test
je
sbb
ds
retf
pop
inc
add
test
pop
gs
popa
or
dec
add
or
adc
jae
or
mov
rcr
xchg
ret
jae
stc
mov
pusha
push
loopne
enter
and
in
int
pop
push
cmp
shl
mov
mov
cmp
js
mov
jl
mov
pop
jg
test
cs
pushf
or
mov
or
and
push
and
or
jecxz
inc
fisubr
mov
push
sar
(bad)
int3
sbb
fnstsw
cmp
test
sbb
push
mov
lods
jae
enter
shr
ja
movs
jb
sub
punpcklwd
in
sbb
cmp
test
dec
jl
retf
out
pop
xor
jb
ss
push
repnz
xchg
and
fs
aas
mov
mov
cmp
ins
ja
inc
push
jbe
adc
sub
cmp
inc
hlt
push
ja
(bad)
push
add
leave
jge
shl
and
jp
movs
mov
inc
test
mov
pop
cmp
or
add
sub
or
fnstcw
mov
xlat
adc
and
call
stos
test
sub
mov
push
and
sahf
fcom
push
dec
cmp
ret
aam
cs
fs
mov
ror
xor
in
lea
dec
rcr
push
ss
xlat
xchg
dec
add
aas
pop
xor
push
xlat
ds
and
jle
or
mov
xlat
jle
aas
and
jle
or
ds
or
dec
fimul
dec
mov
in
xlat
dec
sar
leave
in
xlat
dec
sar
enter
dec
ror
enter
dec
dec
sbb
jb
ror
fs
inc
push
lea
cmp
push
sbb
or
rcl
and
xchg
rol
inc
add
mov
dec
loope
ins
push
push
mov
mov
cli
adc
or
lock
inc
xchg
ret
push
mov
jl
int3
into
das
mov
pop
shl
nop
inc
xor
test
inc
inc
adc
gs
fisub
jo
or
push
cmp
sar
add
icebp
xor
(bad)
daa
cmp
xor
sbb
push
or
lea
scas
cmps
cmps
out
pop
mov
xor
add
mov
or
pop
out
adc
mov
out
out
out
and
xchg
pop
out
out
cmp
out
in
repnz
pop
out
sbb
test
imul
fsubrp
clc
int
cmp
cmp
jg
icebp
add
xor
inc
ins
aam
push
shl
retf
xchg
jge
or
ret
pusha
mov
xchg
jbe
cmp
or
fdivp
mov
jb
mov
and
jb
imul
stos
js
call
pop
bound
jb
jo
xor
xor
loope
mov
push
inc
nop
ss
scas
enter
mov
mov
int3
pop
les
fyl2x
(bad)
mov
jno
lods
fild
int
mov
xchg
xchg
dec
repz
dec
mov
mov
sub
cmps
xchg
pop
mov
and
paddusw
and
and
sub
hlt
stc
ret
push
loope
jne
jmp
out
mov
cmp
into
test
pop
in
popa
pop
movs
add
add
fcomp
inc
mov
clc
adc
or
pop
sbb
push
jo
mov
push
fistp
mov
jl
sbb
fmul
sbb
inc
or
push
pop
mov
dec
fdivr
or
pop
push
jmp
dec
jge
cld
adc
jo
sbb
retf
fisub
or
cli
jmp
out
dec
test
add
jmp
jmp
and
or
mov
popa
pop
pop
xor
fimul
inc
adc
mov
(bad)
xchg
dec
sbb
fimul
(bad)
popa
shl
je
adc
jne
xor
sbb
add
ror
push
push
out
or
sahf
cmps
lea
call
dec
fidivr
add
xor
inc
cmp
jne
or
(bad)
lea
ret
ret
dec
lock
add
pop
rcr
add
ror
jp
push
aad
mov
lahf
xchg
xor
js
mov
dec
add
rcl
adc
add
sbb
push
ret
push
cmp
pop
pop
mov
sub
and
clc
or
mov
jne
pop
sbb
je
sbb
addr16
jle
mov
adc
stc
inc
jmp
push
pop
mov
jl
jo
je
jo
xor
fwait
jbe
pop
retf
jbe
push
lahf
sbb
adc
adc
mov
(bad)
mov
imul
dec
xchg
jmp
sub
sub
sub
repz
cmp
jbe
inc
inc
jne
xchg
xor
jae
jbe
or
xor
adc
sub
js
and
or
xchg
inc
in
jmp
jb
dec
sbb
pop
hlt
ror
in
mov
faddp
shl
(bad)
imul
or
movs
jmp
xor
jmp
arpl
lods
cmps
(bad)
(bad)
adc
cmps
and
sar
ret
xor
iret
repz
in
sbb
sub
push
imul
pop
fs
sbb
out
xchg
mov
inc
rcr
int3
xlat
repz
inc
fld
sti
fdiv
jmp
sub
shl
jae
and
add
mov
add
(bad)
out
out
jnp
cld
xor
jmp
inc
out
sub
cmp
iret
repz
je
sahf
test
jne
repz
cmovs
jb
outs
jo
and
(bad)
pop
sub
inc
jl
mov
and
sbb
(bad)
cmps
dec
inc
fmul
hlt
test
or
sbb
rol
pop
lock
rcl
push
test
aam
imul
aad
mov
ficom
cli
mov
call
push
sbb
jne
outs
movs
push
jmp
and
(bad)
cmp
or
push
pop
inc
or
sbb
bound
adc
jb
pop
sbb
(bad)
sub
icebp
jnp
lock
out
mov
jae
jae
xchg
push
or
jb
mov
dec
jb
sar
dec
jbe
xor
pop
and
rcr
cdq
in
das
repz
or
imul
fnstenv
cmp
mov
xchg
test
cmp
(bad)
jns
fdiv
daa
fild
rcl
les
mov
out
or
mov
xor
jl
retf
xor
xor
dec
fcom
fsubrp
jmp
cld
sbb
adc
xchg
(bad)
fdivr
(bad)
jne
scas
sbb
cmp
(bad)
sahf
pop
push
lock
mov
inc
lahf
ret
pop
and
push
fidiv
push
pop
mov
aas
and
iret
(bad)
sbb
push
inc
cdq
push
loopne
jle
sub
shl
scas
mov
movs
mov
mov
dec
fcomp
push
xchg
leave
cmp
ret
loop
loope
dec
jno
mov
cmp
bnd
adc
cld
push
movs
arpl
push
or
sbb
xor
or
sbb
dec
jbe
and
add
leave
and
jns
add
add
cmps
jecxz
jb
mov
and
das
xchg
sbb
mov
jb
and
mov
pusha
dec
push
push
xchg
push
jno
mov
add
pop
inc
mov
mov
outs
mov
repz
jae
jmp
mov
push
and
and
lds
or
outs
or
aas
adc
push
jmp
sbb
pusha
push
inc
int
push
jle
(bad)
cld
hlt
mov
je
jge
jae
pop
or
and
and
outs
push
call
inc
ret
adc
pop
hlt
adc
inc
in
emms
add
mov
sbb
gs
push
inc
cwde
xchg
(bad)
sti
mov
pusha
rol
mov
mov
out
repnz
inc
jne
jbe
jp
out
pop
sub
ss
in
sbb
mov
jp
(bad)
clc
push
and
xor
jl
add
js
or
mov
pop
mov
or
adc
xchg
rol
frstor
push
xor
neg
sub
mov
cmp
adc
rol
loopne
test
and
test
adc
mov
pop
inc
sbb
adc
mov
adc
mov
(bad)
xor
adc
sar
push
fild
push
adc
cmp
mov
outs
aam
inc
pop
inc
not
setb
scas
jge
pop
iret
adc
push
enter
pop
lock
rcr
and
push
sbb
jl
icebp
fst
jne
add
mov
cmp
xchg
jle
dec
test
cmp
dec
repnz
inc
adc
iret
inc
and
push
or
xor
or
or
dec
adc
jmp
inc
push
or
push
repnz
rol
pop
mov
lahf
jge
pop
(bad)
mov
loop
sbb
dec
dec
sub
lock
lods
cmp
add
cmp
jne
dec
in
popa
xor
je
lods
mov
clc
call
and
and
push
es
mov
add
adc
hlt
or
mov
loop
pop
pop
push
pop
add
stos
push
rcr
cdq
mov
je
addr16
mov
sti
mov
or
ds
neg
femms
out
xor
jmp
(bad)
icebp
cmova
outs
push
(bad)
dec
inc
push
add
inc
pop
rcl
clc
scas
and
push
or
xor
fnstcw
enter
hlt
xor
xchg
pop
imul
rcl
jmp
lods
(bad)
loopne
(bad)
in
adc
xor
daa
add
sbb
div
pmaxsw
ror
rol
push
xchg
inc
push
call
sub
call
add
push
stos
jne
mov
mov
rcr
push
or
inc
push
add
dec
inc
ror
or
aam
sub
pop
jb
dec
shl
add
data16
jle
add
pop
shr
aaa
test
sub
mov
shl
mov
icebp
sub
jle
imul
jp
and
push
adc
xchg
push
add
sub
shl
jge
dec
push
xor
xor
adc
scas
dec
push
movs
movs
cmp
sbb
lods
sbb
pop
or
ret
inc
bound
and
sbb
push
mov
sbb
sub
jnp
cs
pop
addr16
mov
jno
dec
or
push
mov
aam
scas
push
mov
mov
push
and
adc
xor
les
sub
cmp
jne
mov
mov
cmp
xchg
xor
or
clc
push
ins
jbe
cmp
xchg
adc
xchg
in
push
pop
xchg
adc
pop
sub
fcmovb
into
push
shl
sbb
cmps
out
aaa
stc
adc
add
mov
adc
xchg
fild
dec
imul
mov
cmp
xchg
enter
or
clc
pusha
or
data16
sub
push
in
rol
inc
fmul
pop
aad
out
hlt
repnz
aas
adc
inc
lahf
inc
cmp
jmp
sbb
adc
dec
jne
lahf
add
movs
clc
cmp
push
sub
xor
inc
sbb
jne
gs
sar
sub
scas
and
cmp
ja
sbb
and
ja
mov
pop
add
retf
jmp
stos
xor
imul
mov
push
cmps
mov
inc
sbb
inc
xor
in
dec
and
mov
ret
es
pop
add
sub
mov
imul
push
jne
pop
adc
sti
mov
dec
cmp
ja
cld
dec
ret
adc
cld
jbe
call
test
add
neg
mov
out
cmp
neg
mov
pop
xor
nop
xor
cld
rol
push
loopne
mov
add
(bad)
loopne
adc
stos
popf
or
inc
and
inc
add
jmp
les
(bad)
add
call
and
aam
enter
test
sbb
(bad)
out
mov
push
fdiv
push
mov
je
mov
inc
xchg
repnz
inc
push
or
pop
sar
adc
sbb
sahf
ret
jmp
(bad)
fmul
add
jne
std
jle
daa
mov
xor
or
jb
repnz
inc
nop
and
or
je
inc
dec
jl
mov
je
add
nop
ja
xchg
pop
xor
mov
in
add
dec
(bad)
dec
lea
sahf
mov
cld
dec
js
aaa
das
sub
push
ficom
cmp
mov
or
adc
rcr
pusha
sub
fcomp
loopne
jmp
movs
imul
cmp
imul
inc
push
push
dec
dec
pushf
jno
inc
and
inc
and
and
pop
dec
lods
test
out
lock
inc
add
cmp
jle
push
cmp
adc
pop
add
cmps
(bad)
stos
not
rol
repnz
mov
cmp
jo
mov
pop
push
fldenv
inc
and
add
mov
sbb
xchg
push
push
pusha
call
push
cmp
add
cmps
mov
add
shl
add
add
inc
popf
int3
adc
inc
sub
sti
adc
mov
xor
push
jmp
daa
add
add
test
xchg
jle
pop
jno
add
lods
mov
jo
inc
mov
push
dec
fs
ss
out
sbb
clc
hlt
mov
sbb
aas
cmp
and
pop
xlat
movs
add
in
cmp
(bad)
xchg
hlt
jmp
aam
cld
sbb
gs
and
add
inc
add
mov
loopne
clc
dec
movs
ret
push
push
mov
mov
or
jo
mov
scas
mov
inc
mov
sbb
lds
scas
not
adc
and
fwait
or
in
loopne
add
adc
popa
push
sub
in
out
clc
add
pop
shl
cmp
in
js
xchg
mov
je
clc
shl
sbb
xchg
cmp
daa
fld
in
or
or
hlt
mov
mov
lea
adc
sbb
or
pusha
push
xor
mov
push
and
rol
xchg
lea
sub
xchg
popf
int3
jno
mov
(bad)
or
lock
aam
test
call
in
inc
lahf
jbe
fcomp
cmp
push
fcom
sar
push
pop
loope
dec
clc
jne
mov
aas
xchg
popf
ja
add
fisttp
cmp
adc
and
cli
ror
cmp
inc
add
mov
(bad)
nop
cmp
jae
mov
jmp
into
into
sbb
and
or
sub
out
add
retf
retf
(bad)
int3
ins
and
and
cmp
inc
or
mov
dec
outs
push
int3
add
ins
adc
mov
add
loop
pop
pcmpeqd
mov
inc
mov
pop
sbb
popf
popa
ret
or
jge
push
cmp
cwde
dec
and
pop
imul
and
ins
xor
fnstenv
aaa
jle
adc
clc
push
pop
div
pop
enter
mov
repz
es
push
pop
fimul
push
push
push
xor
call
out
pusha
pusha
sbb
jns
jo
dec
ja
(bad)
xor
out
add
mov
ins
add
mov
lea
jb
loopne
adc
enter
xchg
fwait
jo
xchg
test
mov
lock
inc
cmp
jne
fs
pop
fisttp
cmc
movs
xchg
ins
(bad)
call
xor
out
sti
aad
(bad)
lds
push
xchg
sub
pop
add
push
push
sbb
daa
push
(bad)
cmp
cmp
push
jns
add
pop
cmp
je
cmp
pop
addr16
fs
bts
sub
sar
xchg
out
xchg
pop
push
push
rol
fs
inc
add
jo
cdq
sub
stos
dec
sub
mov
add
cmp
jle
lock
pop
and
pusha
push
(bad)
xchg
and
rcr
stos
out
push
fwait
adc
aas
mov
shl
data16
adc
mov
mov
pop
cld
ror
push
xor
lock
jecxz
stos
sub
xchg
jne
cmp
fsub
cmp
sub
jp
adc
es
in
jecxz
jg
pop
mov
inc
dec
lock
je
mov
sub
mov
dec
pop
(bad)
rol
fsubr
xor
mov
add
outs
shr
inc
leave
inc
(bad)
mov
and
into
mov
in
jo
and
into
adc
div
adc
inc
jmp
addr16
rcr
out
inc
dec
inc
repz
aad
dec
xchg
loop
push
pop
(bad)
fiadd
jo
mov
push
cmp
add
push
fisubr
cmp
jl
pusha
adc
ds
dec
imul
lock
and
loopne
fadd
inc
je
mov
adc
mov
scas
stos
jae
mov
in
xor
dec
fwait
loope
leave
(bad)
lea
inc
push
data16
jne
enter
(bad)
test
and
mov
push
adc
test
lods
mov
mov
pop
xchg
inc
jmp
or
(bad)
add
adc
xlat
fmul
xchg
jmp
shr
push
clc
jae
add
mov
and
add
xlat
or
inc
jmp
cmp
adc
scas
add
add
add
clc
xchg
xchg
int
mov
addr16
or
xchg
in
call
ja
pop
lock
mov
jge
or
sahf
mov
rcl
ins
retf
add
ret
lea
test
mov
xchg
retf
jne
(bad)
pop
xchg
fcomp
repz
cmp
jns
stc
jae
push
cmp
(bad)
(bad)
rol
(bad)
mov
mul
fs
gs
inc
pop
inc
stos
cli
call
test
(bad)
stc
cld
ror
jns
lea
sbb
shl
xchg
pop
inc
fsub
dec
enter
cmp
push
or
lods
or
shl
outs
cs
fiadd
ins
arpl
cmps
test
fs
add
je
pop
ins
jne
push
gs
loope
cmp
add
jmp
push
aad
add
or
js
mov
ror
jp
and
xor
shr
cld
lods
movs
jno
dec
leave
inc
pop
sbb
cld
adc
mov
cmp
idiv
mov
rcl
sbb
test
mov
icebp
add
add
mov
or
dec
call
sub
or
cmp
pop
jl
adc
adc
or
mov
popf
in
mov
bound
pop
mov
mov
xchg
mov
xchg
test
test
mov
push
ret
dec
mov
inc
loope
and
jmp
stos
xchg
shl
xor
adc
mov
lods
mov
fucomp
lahf
adc
inc
cmp
jne
inc
dec
cmp
mov
cmps
mov
cli
out
(bad)
sbb
cmp
aam
test
and
jo
and
xchg
mov
ins
fdiv
jb
fdivr
dec
dec
push
bnd
add
mov
dec
mov
xlat
nop
cli
mov
xlat
js
add
jns
jns
outs
enter
popf
mov
xchg
push
enter
mov
and
pop
fcmovb
out
in
mov
cmp
stos
loope
xchg
or
mov
jp
add
les
shl
(bad)
retf
cmp
ds
dec
pop
dec
unpcklps
mov
in
add
rcl
shl
jmp
mov
les
add
mov
xlat
mov
test
fild
cmp
add
push
es
mov
add
mov
pop
jb
test
(bad)
out
retf
add
movs
push
rol
inc
cmps
fstp
adc
and
cmp
enter
mov
jne
loopne
aaa
pop
movs
sbb
aad
fdiv
fld
imul
rcl
add
add
xor
and
mov
repnz
lea
jmp
jge
sub
je
fs
xchg
lahf
cld
pop
neg
jmp
or
adc
mov
retf
cmp
inc
ret
xor
add
mov
pusha
cld
jg
icebp
cmc
lds
pop
xchg
cmp
scas
ret
sub
fadd
movs
push
xor
xchg
ror
push
pop
xor
xchg
repnz
(bad)
cli
sub
jl
movs
push
retf
es
sbb
dec
jmp
xchg
add
dec
in
dec
xchg
adc
xor
cld
mov
xlat
adc
pop
cld
int3
xor
cmp
call
lea
add
mov
jg
ret
jnp
push
and
dec
in
loope
mov
repz
adc
cdq
test
or
rol
lock
test
out
out
je
mov
sub
aaa
iret
(bad)
fmul
dec
and
xor
test
lods
add
push
js
push
div
push
pushf
mov
out
aam
retf
test
inc
es
test
inc
repnz
lock
mov
rol
lock
stc
inc
push
neg
aaa
mov
retf
inc
std
inc
pop
xchg
mov
dec
jnp
xchg
data16
repnz
scas
push
mov
popf
out
fistp
jg
and
inc
cmp
sub
ja
mov
mov
imul
cmp
xchg
in
jl
mov
cld
sub
hlt
fdiv
jmp
pop
and
adc
jbe
vphsubsw
pop
cld
jae
jp
lds
mov
lahf
cmp
div
jl
(bad)
std
shl
cli
xor
sub
and
cmps
add
mov
or
push
dec
push
dec
xor
loop
adc
lar
fwait
enter
sub
and
mov
test
and
add
rcl
or
shl
(bad)
cwde
pop
cld
jns
push
sbb
and
pop
jbe
add
cdq
push
shr
iret
mov
dec
xchg
mov
and
inc
and
mov
sbb
leave
dec
mov
ror
dec
ins
dec
mov
pop
sub
push
cmp
into
test
ret
pop
ror
push
int3
mov
jmp
cmp
jb
push
pop
ja
loope
jge
sar
cmp
and
aam
loopne
adc
mov
adc
push
inc
addr16
mov
jae
sub
and
jmp
jbe
sbb
pavgw
dec
loope
adc
adc
addr16
out
jmp
mov
xor
push
mov
adc
stos
inc
cmp
push
pop
jl
xlat
mov
mov
movs
push
dec
pop
repnz
std
mov
mov
(bad)
clc
repnz
sub
sbb
call
pushf
test
push
mov
mov
(bad)
cmp
ja
jb
dec
dec
lock
test
jmp
pop
xchg
mov
push
pop
(bad)
dec
or
cmovo
add
hlt
clc
mov
cwde
sub
push
lea
fadd
inc
mov
xadd
cmp
xchg
dec
sub
lods
add
js
dec
sub
pushf
cmp
or
sub
dec
fcomp
inc
pop
jg
adc
(bad)
add
stos
push
(bad)
fxrstor
and
sbb
add
xor
div
push
dec
push
and
dec
outs
mov
cmp
(bad)
xor
adc
and
and
xor
mov
not
mov
push
in
loope
adc
iret
jecxz
movs
add
and
jno
aam
and
sbb
mov
(bad)
adc
enter
inc
ja
lea
js
jmp
sub
push
sub
push
fadd
push
push
jnp
sub
dec
jbe
pop
ret
xlat
push
push
lea
and
cld
mov
jae
push
or
rcl
shl
jb
cmp
or
fild
dec
and
add
add
dec
jl
and
pop
push
add
jo
jl
xchg
icebp
je
fild
jns
stos
fidiv
jb
jbe
push
mov
sti
add
shl
clc
adc
sub
inc
fdivr
mov
add
(bad)
out
sub
pop
shr
je
xor
cwde
jne
push
and
sub
dec
pop
inc
ret
inc
push
fadd
and
adc
xchg
aad
into
in
in
cmc
inc
popf
cmp
jl
out
jb
pminsw
jne
mov
das
int
adc
and
or
mov
mov
inc
in
xchg
nop
sbb
xor
test
dec
daa
push
js
mov
and
out
sub
add
mov
lds
push
add
in
ret
nop
pop
js
push
and
xchg
mov
mov
fistp
call
(bad)
jne
add
cmp
outs
cli
mov
leave
cmp
pop
sbb
pop
inc
push
mov
pop
mov
cdq
jbe
nop
shl
or
sbb
xlat
push
xchg
inc
and
jg
push
xor
lea
into
pop
mov
xchg
or
ret
lods
cmp
je
es
stc
movs
retf
stos
int
and
ins
in
push
scas
jne
sub
and
or
push
outs
aaa
mov
dec
or
push
inc
lock
imul
and
push
loop
sahf
inc
mov
xor
dec
adc
cmp
jl
inc
sub
inc
popa
add
cmp
cld
pop
and
xor
jne
dec
aaa
or
out
in
pusha
mov
xchg
inc
mov
sahf
add
add
push
in
and
pop
sub
or
mov
inc
inc
xchg
jne
out
movs
(bad)
rol
in
enter
or
push
jmp
mov
mov
pop
je
xor
dec
les
shl
shl
or
push
fucomp
movs
mov
psrad
call
mov
dec
js
pop
pop
mov
mov
push
bound
sahf
lock
ins
fidiv
sbb
mov
loopne
add
cmp
cmp
imul
test
add
fimul
dec
in
add
sbb
ret
pop
shr
and
or
or
mov
jae
loopne
mov
and
clc
add
jb
mov
add
push
sub
xor
sbb
pop
fadd
cmc
or
fcomp
ret
popa
call
cli
iret
or
add
adc
clc
xor
mov
or
push
(bad)
add
div
jb
pop
dec
push
dec
neg
call
fisttp
dec
fchs
xor
(bad)
jb
pop
and
adc
jbe
jmp
je
add
call
mov
jbe
push
cmps
mov
or
lds
push
daa
jmp
add
lds
add
or
mov
cmp
mov
mul
enter
shl
and
(bad)
cmp
jae
shr
xor
add
not
adc
push
add
test
sar
shl
mov
mov
retf
jmp
mov
dec
push
add
push
dec
cld
adc
add
mov
wbinvd
push
or
xor
call
adc
pop
jb
mov
sti
lods
jo
ror
add
lock
js
push
dec
push
inc
jge
inc
cmps
psrad
or
scas
out
pusha
inc
sub
push
adc
hlt
inc
cmps
mov
dec
jmp
jae
mov
add
lock
sub
repnz
push
mov
mov
cmp
jne
outs
xor
lock
mov
mov
arpl
or
and
clc
sbb
outs
and
xor
or
jno
jb
ja
cmp
ja
push
adc
mov
sbb
adc
dec
add
pusha
retf
mov
das
mov
xchg
mov
mov
xor
js
inc
xor
lods
push
pusha
lock
and
je
test
push
call
clc
xor
loop
mov
sub
xor
mov
imul
jne
push
scas
dec
mov
or
adc
jbe
shl
push
cs
jb
inc
cmps
push
call
jle
int3
xor
or
adc
je
add
or
call
lock
pop
jmp
movs
(bad)
lods
lahf
lea
lea
adc
jmp
mov
sbb
repz
ret
pop
fwait
daa
push
push
or
add
ds
shl
mov
cld
ds
push
das
das
int
adc
sbb
or
js
pop
fs
cmp
pop
cmps
cwde
outs
xor
mov
push
lods
ins
sub
sar
in
push
rol
dec
shl
clc
add
mov
fsub
fs
mov
jmp
mov
push
or
es
pop
or
hlt
sbb
out
or
adc
jmp
jmp
add
clc
scas
repz
jnp
daa
push
das
aaa
inc
inc
(bad)
repz
dec
push
push
xor
jne
xchg
iret
shl
fwait
cmp
pop
jle
in
add
adc
add
cmc
jns
adc
inc
imul
adc
lea
out
mov
jg
pop
out
out
adc
movzx
jge
pushf
push
push
mov
mov
shl
ret
or
jne
adc
add
mov
jmp
lock
sub
adc
pop
lea
es
inc
sbb
clc
or
pop
xchg
sbb
sbb
adc
jmp
enter
sbb
in
dec
jmp
sbb
loope
push
pop
mov
jno
mov
icebp
clc
mov
push
xor
movs
xchg
test
push
rcr
inc
adc
push
and
xor
push
(bad)
adc
lock
test
(bad)
mov
jo
sbb
adc
ins
imul
or
(bad)
mov
call
cmp
add
leave
inc
sbb
in
adc
dec
pmaxsw
xchg
jbe
out
mov
in
mov
sahf
xor
xchg
fist
pusha
std
jnp
inc
and
inc
and
or
test
add
mov
and
sub
cmc
xor
mov
repnz
or
mov
cmp
dec
inc
je
outs
retf
and
cmp
add
sub
push
jns
push
int
or
and
mov
sub
push
stos
sbb
and
adc
test
(bad)
jo
xor
test
push
out
aaa
push
add
mov
push
pop
(bad)
rol
mov
xchg
pushf
repz
loop
push
call
popf
lods
cli
cmp
or
pusha
inc
xchg
outs
mov
pop
sub
xlat
or
add
sar
in
xchg
mov
cmps
lea
enter
daa
xor
ins
push
jnp
das
pop
jbe
jns
arpl
add
in
mov
or
xor
arpl
sbb
cmp
imul
arpl
(bad)
jb
daa
cs
cld
or
add
arpl
in
or
addr16
dec
retf
mov
(bad)
jg
cmc
clc
xor
xor
xor
jns
pushf
ror
icebp
inc
jo
dec
call
sbb
outs
sub
call
outs
test
loopne
sub
adc
add
cmp
adc
pusha
aaa
xchg
push
mov
mov
adc
push
push
test
push
bound
bound
mov
pop
cmc
jno
jle
push
adc
fld
je
or
push
je
inc
inc
cld
cs
pop
cmp
into
pop
push
rcl
mov
psrlq
sbb
loop
jns
cmps
rcl
add
xor
or
cdq
add
xor
cwde
ficom
xor
jns
cmp
push
xor
inc
xchg
xchg
or
jns
and
mov
adc
pop
jne
mov
mov
pop
pop
push
jb
sub
jp
aas
add
nop
or
push
pop
mov
xor
mov
jo
mov
scas
push
xor
inc
ja
shl
inc
dec
jne
or
aas
mov
and
adc
adc
(bad)
loopne
leave
out
sub
jmp
in
push
aaa
daa
mov
pop
pop
stos
and
push
mov
fmul
mov
jmp
sub
adc
mov
fst
or
jecxz
push
xor
or
loopne
das
adc
popa
cmp
push
inc
mov
and
mov
xor
dec
dec
mov
adc
dec
fsubr
dec
fist
and
sbb
test
repnz
bound
push
and
loopne
sete
inc
and
push
and
pop
dec
ret
popf
dec
lock
pop
fadd
and
shl
jmp
adc
sub
gs
dec
into
clc
inc
bts
mov
popa
jmp
inc
sub
mov
jnp
outs
or
data16
je
or
add
jo
inc
mov
je
inc
mov
outs
movs
sti
daa
add
test
std
add
iret
clc
inc
pusha
iret
inc
push
shl
xchg
add
mov
std
pop
or
enter
in
je
daa
or
das
pusha
outs
iret
imul
dec
push
dec
push
pop
push
jecxz
popf
fadd
dec
pop
das
scas
out
pushf
xor
(bad)
push
jb
lds
sbb
or
xor
or
push
idiv
in
leave
push
inc
or
push
or
cmp
sar
pop
das
ror
adc
out
or
inc
loopne
call
xor
sub
inc
mov
and
cmp
add
cmp
cmps
int3
call
je
cmp
jne
jmp
adc
push
sub
fcmovne
adc
adc
aaa
pop
dec
xchg
mov
ret
jle
add
sub
sub
hlt
add
ja
jo
not
dec
or
ret
or
sub
pop
pop
xchg
(bad)
and
or
push
add
daa
add
les
les
mov
lock
loopne
pop
xchg
add
xchg
sbb
ret
inc
add
bound
add
mov
fidiv
sbb
fmul
add
fistp
rcl
pop
add
push
popf
push
cmc
fs
ret
sbb
jne
gs
push
push
lea
sbb
push
push
pusha
add
dec
or
xor
jo
cs
sbb
clc
add
adc
jmp
or
add
sub
add
add
outs
into
adc
std
imul
jmp
and
out
jmp
sar
jne
jle
mov
cmp
test
pop
jne
jae
jmp
mov
jmp
fldenv
push
ds
xchg
pop
jmp
mov
and
xchg
mov
push
jg
pop
fnstenv
js
stos
(bad)
fstp
adc
hlt
stc
rol
cs
sub
add
dec
adc
inc
push
not
cld
jb
mov
call
loopne
jle
mov
sti
nop
(bad)
sbb
and
add
into
pop
popf
pop
test
dec
lds
add
push
sub
mov
and
cmps
aas
lods
inc
ret
loope
je
fsin
dec
out
pop
mov
jg
or
arpl
dec
mov
pop
push
pop
pop
test
push
jb
push
sbb
cli
mov
lea
mov
jg
adc
add
mov
and
xchg
or
pop
adc
lods
mov
je
fcomp
fadd
test
cs
inc
js
fild
jb
scas
xlat
push
std
xchg
cwde
xchg
or
or
shl
mov
ja
lahf
mov
das
push
in
xor
ss
jmp
fild
fst
loope
mov
mov
repz
mov
or
cmp
ror
mov
pop
sub
ret
int
fwait
pusha
arpl
xor
jle
xchg
test
mov
xchg
daa
pop
clc
cmps
adc
nop
cmp
jbe
imul
loopne
push
mov
sbb
and
int
sbb
and
ror
out
mov
ja
lahf
mov
ja
(bad)
fisubr
pop
push
jle
push
ins
aam
int3
fxch
mov
pop
fiadd
cli
shl
out
fwait
cmp
cmp
mov
pop
and
sub
in
fimul
jmp
adc
or
loope
fisttp
fimul
mov
int3
add
sub
xor
xor
push
xchg
bound
mov
mov
add
dec
xor
xchg
(bad)
sub
(bad)
mov
ret
cmp
jl
clc
sbb
or
sbb
test
push
sbb
push
mov
mov
jmp
xor
sub
mov
dec
jl
lock
iret
jae
pop
xchg
jo
sti
adc
mov
and
push
enter
fwait
mov
add
jbe
imul
jbe
jns
add
jb
adc
pop
mov
rol
test
pop
or
repz
(bad)
icebp
or
dec
pusha
iret
jmp
(bad)
and
cdq
push
inc
push
data16
les
dec
jmp
fadd
push
and
add
ds
adc
(bad)
ja
sbb
pop
cld
or
add
jg
pop
les
jl
jg
cmp
ja
imul
and
mov
inc
sub
push
cmp
sub
jge
stos
push
stos
add
add
clc
lock
dec
mov
adc
or
add
gs
add
or
push
scas
and
ja
add
les
mov
cmps
or
add
lock
scas
adc
xchg
mov
adc
push
xchg
iret
cmp
and
fist
jns
add
xchg
mov
sar
jbe
jecxz
sub
lock
shr
loope
rol
cld
call
fs
ja
(bad)
fisubr
cmp
icebp
clc
cmp
movs
ss
out
jb
pop
mov
sbb
push
jne
push
inc
pop
call
or
ret
sub
cmp
ja
sbb
loopne
pusha
xchg
out
pop
and
popa
cmp
test
and
pusha
and
cmp
loopne
add
pop
xor
jge
mov
xchg
inc
sbb
and
sub
rcl
inc
cld
loopne
test
cmp
retf
add
push
lock
pop
nop
leave
hlt
mov
test
cs
cmp
jb
mov
movs
or
jbe
and
pop
scas
mov
cmp
cwde
cs
mov
xor
ret
movs
hlt
ret
or
(bad)
aas
jbe
push
push
xchg
cmp
add
push
add
add
adc
ins
add
adc
or
jmp
je
add
mov
aas
fmul
pop
cmps
das
cmp
push
clc
xor
pop
and
clc
adc
xor
mov
pop
inc
ret
jno
fstp
sub
xor
lock
adc
inc
fdivr
retf
ret
cmp
pop
les
sar
xchg
jo
push
adc
repnz
ins
dec
(bad)
sahf
fistp
add
mov
inc
pop
es
ins
out
daa
jp
xor
inc
in
pop
xor
lock
in
adc
loopne
xor
in
push
xor
inc
xchg
call
ja
or
ins
dec
or
or
leave
leave
and
or
and
or
add
inc
push
push
enter
mov
cmp
shl
jb
push
xor
imul
and
jg
inc
adc
loopne
dec
pushf
mov
cmp
pop
xor
movs
outs
push
sub
pop
xchg
cmp
daa
mov
fwait
call
push
pusha
fst
fwait
pop
jge
shl
ss
pop
adc
jmp
out
mov
pop
call
ds
lods
push
daa
mov
mov
adc
or
mov
push
inc
inc
add
iret
inc
inc
leave
mov
push
and
scas
inc
scas
jns
cmp
inc
scas
inc
scas
in
repnz
inc
scas
xchg
inc
leave
mov
inc
push
and
scas
inc
push
xor
adc
jne
sub
or
jp
ret
cli
inc
ror
add
or
scas
push
or
and
pusha
inc
xchg
jmp
cdq
or
hlt
clc
push
bnd
lock
in
loop
push
out
repz
aad
mov
fild
(bad)
in
stc
sub
mov
(bad)
push
bound
jo
loop
enter
ins
lods
mov
adc
pop
sub
dec
pushaw
mov
ret
sub
push
xchg
in
push
in
icebp
daa
repnz
mov
xor
xchg
retf
in
cli
mov
leave
mov
pop
push
sar
dec
dec
ds
cmps
lea
daa
xchg
leave
xor
rcl
jp
das
pop
bound
xchg
xchg
out
add
xchg
fsub
xchg
mov
mov
xchg
movs
add
xchg
xchg
dec
adc
out
sbb
ret
push
jb
daa
rcl
cmp
es
sbb
push
dec
test
mov
xchg
inc
xchg
adc
adc
inc
outs
es
adc
jmp
push
pop
data16
inc
loopne
push
push
call
lds
add
push
mov
pop
adc
mov
adc
adc
xchg
es
fsubr
jg
dec
retf
add
dec
dec
in
xchg
sahf
js
pop
test
in
inc
imul
cmp
pop
sahf
or
pushf
inc
dec
imul
cmp
xchg
lahf
push
bnd
fidiv
pop
sub
inc
sub
jbe
sbb
lahf
in
xchg
fsubr
pop
(bad)
out
add
sbb
xchg
lahf
mov
mov
sbb
add
scas
arpl
(bad)
sahf
daa
xchg
out
jle
shl
repnz
fadd
lahf
jb
ss
aaa
jg
xor
xchg
mov
mov
repnz
sub
iret
call
add
jge
sti
aaa
fadd
jae
mov
adc
push
add
cmp
lock
jb
jbe
push
outs
push
jne
cmp
adc
or
mov
in
cs
jne
push
jmp
or
sub
push
cld
push
add
mov
sub
clc
adc
ffree
add
sahf
ror
repnz
mov
stos
ret
fdiv
jle
dec
mov
push
push
mov
sbb
(bad)
mov
out
std
fcomp
cwde
or
or
or
cmp
nop
or
cli
call
movs
jg
dec
mov
rcl
(bad)
mov
add
inc
adc
mov
inc
push
xor
dec
popa
push
cmp
and
fs
inc
bound
cmp
ficomp
lock
xchg
dec
mov
add
cmp
push
sub
add
jecxz
mov
mov
loopne
fcomp
js
mov
aaa
test
dec
movs
cdq
dec
xor
fcomp
dec
add
sub
test
loopne
lock
sar
int3
sbb
mov
(bad)
in
jl
inc
xor
shr
lahf
ror
mov
xchg
in
or
add
mov
dec
and
daa
pushf
dec
or
mov
xor
mov
add
push
push
test
push
in
pop
sar
mov
mov
jle
add
push
jno
mov
clc
dec
dec
push
add
add
pop
and
mov
les
xor
mov
cmp
xchg
sbb
dec
sub
fisttp
sub
xchg
out
aam
add
sub
mov
fbstp
cld
mov
xchg
int3
lea
sbb
inc
inc
add
lds
sub
adc
pop
jo
neg
(bad)
mov
push
inc
(bad)
xchg
cmc
add
jo
sar
ds
sbb
and
sbb
ret
ror
ret
or
frstor
add
into
ds
cmp
clc
add
sub
dec
clc
vxorps
add
jmp
vpcmpeqb
vpsubq
push
xor
jmp
in
call
lahf
scas
vzeroupper
pushf
dec
add
jl
and
repnz
adc
stc
aas
shl
add
psubb
movaps
xor
mov
and
call
jmp
test
xor
cmp
mov
aaa
retf
std
jo
or
push
jl
cld
jb
sahf
push
lea
stc
xor
push
sub
cmp
add
icebp
loopne
mov
jne
mov
sar
inc
out
(bad)
neg
mov
add
sar
mov
lea
push
cld
je
cld
out
or
and
sub
sar
inc
push
gs
daa
pushf
dec
ror
pusha
in
jo
and
enter
int
add
xor
ret
dec
xor
cmp
fwait
sub
daa
bound
sti
hlt
sub
cwde
fisttp
inc
push
and
push
mov
leave
lods
add
mov
pop
or
jne
or
sar
add
iret
adc
adc
arpl
push
jmp
pop
je
call
popf
rcl
push
cmps
cwde
popf
xor
loopne
and
pop
jne
jmp
push
fimul
push
sbb
cmps
jl
inc
cmp
aas
sub
jmp
push
adc
jmp
sub
out
mov
jae
lods
jb
xchg
setbe
push
cmp
xor
pop
jmp
add
repz
aad
and
add
repnz
jo
cld
or
inc
mov
sbb
shr
sar
inc
mov
adc
cmp
add
inc
add
mov
inc
adc
(bad)
or
push
loopne
movs
xchg
ins
xchg
mov
nop
leave
enter
sbb
out
adc
dec
test
loopne
(bad)
xchg
dec
movs
push
aam
int3
clc
in
jb
pop
cs
fs
in
call
rcl
cmp
jo
sbb
adc
(bad)
jno
rol
mov
xchg
and
mov
xor
cs
mov
out
mov
or
xchg
ins
sbb
and
xor
pop
pop
sub
mov
add
mov
xor
ja
adc
into
jnp
mov
push
cld
add
dec
mov
adc
jbe
pop
add
add
add
cmp
mov
inc
scas
or
jne
aad
and
dec
sbb
sub
add
test
or
xchg
sub
push
pop
in
push
dec
(bad)
out
out
add
dec
imul
push
outs
and
adc
inc
je
jns
adc
xchg
push
mov
les
adc
cs
outs
or
push
adc
mov
idiv
mov
xchg
mov
mov
pop
movs
push
test
push
call
fild
sbb
and
mov
jae
sub
push
inc
sbb
ret
push
(bad)
call
imul
adc
les
mov
cmp
cld
pop
stos
nop
cmp
jle
je
or
mov
popa
lock
inc
adc
cmp
jb
and
les
cld
or
loop
cwde
adc
retf
mov
inc
pop
and
not
push
loop
or
adc
imul
adc
mov
nop
pop
inc
or
sub
dec
adc
cmp
push
jl
mov
sub
ja
mov
xor
push
add
or
dec
ret
hlt
leave
cmp
popa
mov
std
xor
xor
mov
cmp
pushf
fistp
mov
push
aad
int3
(bad)
sbb
push
mov
enter
jp
mov
cmp
rol
movs
out
sbb
cmp
jbe
cmp
or
ror
push
in
aas
mov
cmp
and
dec
sub
adc
stos
pop
loop
add
sub
nop
call
add
sub
(bad)
dec
imul
mov
test
jnp
and
shr
ret
popf
mov
scas
popa
(bad)
mov
inc
sbb
imul
rcl
xchg
mov
jae
in
pop
or
jne
jne
sub
push
sar
inc
mov
ja
loopne
pop
mov
jns
xor
jg
repnz
or
mov
sbb
loop
les
sbb
inc
fsubr
je
es
mov
cdq
or
pop
ja
imul
rol
adc
enter
loope
mov
push
xchg
or
push
arpl
cmp
or
loopne
push
ja
pop
pop
or
and
jb
sbb
enter
xor
push
std
aam
test
pop
add
xchg
mov
pop
pop
aam
pop
int3
in
jecxz
jle
and
nop
cmp
jg
je
xchg
scas
xchg
call
jne
mov
cli
or
pcmpeqb
clc
jl
jae
jle
push
jg
push
jb
jns
inc
xor
pop
pop
scas
jmp
lods
sahf
push
inc
push
inc
mov
push
sbb
push
mov
xor
leave
or
call
cs
cmc
mov
fst
mov
lock
inc
loopne
mov
adc
retf
add
sub
sar
or
enter
test
outs
test
dec
or
lods
or
adc
in
inc
mov
mov
add
ss
and
inc
xor
cs
ins
cs
inc
push
xor
pop
mov
and
test
xor
pop
xchg
jo
push
add
and
mov
lock
pop
add
mov
inc
jge
in
cmps
ss
or
test
inc
push
push
and
pop
lock
ins
int
lock
pusha
jecxz
and
in
adc
ret
push
pop
cdq
push
add
loopne
arpl
or
mov
mov
popf
lods
js
pusha
and
dec
lock
hlt
movzx
xchg
and
je
ficom
xor
and
or
pop
and
cmp
xchg
push
push
xchg
sub
dec
pop
(bad)
pop
enter
push
cmp
push
inc
mov
shl
mov
push
fs
iret
and
mov
pop
das
and
and
dec
mov
test
xchg
add
pop
das
xor
push
ret
dec
jl
int
sub
scas
push
adc
add
xor
je
idiv
daa
or
xor
push
push
adc
shl
jnp
cmps
fisttp
jne
test
adc
cmp
and
inc
jb
movs
imul
and
stos
mov
xor
xor
ds
cmp
jae
int
mov
pop
mov
xchg
pop
cs
sbb
test
pusha
jmp
out
ja
pop
imul
push
int3
int3
xor
out
push
cmp
jno
xor
popf
ret
fstp
jmp
push
cmp
ds
xchg
pusha
aam
ins
ss
pusha
lock
test
inc
adc
mov
cmp
and
mov
mov
lea
xchg
les
test
sub
push
cmp
push
sub
add
adc
js
xchg
dec
xchg
pop
xor
sbb
(bad)
mov
loopne
push
scas
cmp
xor
jmp
xor
popa
sub
or
mov
pop
jno
add
mov
adc
sub
js
and
jb
dec
push
or
mov
pop
out
gs
call
daa
jmp
bound
and
mov
shl
(bad)
sub
jne
and
push
jecxz
cmp
je
and
push
sub
pop
jl
add
cli
loop
jb
ret
ja
or
lock
sbb
mov
clc
fmul
fcmove
push
enter
mov
pop
pop
ret
jns
loopne
fcomp
add
and
or
inc
fld
jp
add
xchg
mov
test
pop
push
clc
xchg
mov
imul
jo
jae
clc
push
sub
jle
(bad)
push
jmp
and
aaa
mov
setnp
rcr
adc
les
fsubr
jbe
cmp
clc
mov
push
xlat
and
rcr
pop
pop
popa
sbb
dec
mov
or
xchg
stos
pop
inc
mov
mov
mov
call
test
or
add
push
in
fcmovnb
jecxz
pop
adc
pop
sbb
mov
out
xchg
lock
test
add
or
pop
cmps
lock
mov
inc
ret
je
out
mov
push
jmp
and
jmp
(bad)
jmp
cld
xchg
call
in
add
cdq
idiv
icebp
pop
add
add
and
pop
add
dec
in
jp
pop
add
sub
sbb
scas
add
cmps
xchg
pop
and
or
ss
jns
ins
mov
push
jno
push
daa
adc
fsubr
push
or
mov
pop
cmps
dec
pop
sbb
or
jmp
out
scas
ret
(bad)
xchg
mov
add
mov
mov
js
scas
jae
mov
adc
aam
test
cmps
or
push
daa
adc
jge
pop
mov
push
cmp
sar
jne
mov
sbb
mov
gs
clc
loop
cmp
imul
and
(bad)
dec
mov
inc
jmp
fxam
sbb
add
jbe
xor
cmc
sub
sbb
fnsave
xor
sub
fs
in
xor
sbb
sub
out
jecxz
mov
sbb
js
loop
mov
into
cmp
mov
push
fsubr
adc
jmp
pop
xor
or
inc
or
push
call
inc
inc
ins
xchg
mov
pop
pushf
retf
rcr
sub
lea
inc
or
js
cmp
ror
mov
retf
scas
pop
clc
stos
push
jns
pop
lea
mov
test
or
pop
or
sbb
icebp
push
fs
js
loope
jg
push
ror
jecxz
inc
and
push
ins
jmp
mov
aad
sub
mov
mov
outs
sar
ja
je
or
dec
movs
push
mov
(bad)
adc
jne
lods
adc
adc
push
sahf
retf
test
xchg
out
cmp
in
mov
mov
and
xchg
cmps
repnz
adc
dec
loopne
mov
test
ins
(bad)
or
pop
es
dec
ret
add
xor
int3
xor
fwait
mov
das
push
mov
or
or
adc
push
xor
cmps
jle
jp
adc
mov
pop
call
cmp
push
(bad)
push
test
shr
cmp
fisubr
add
xchg
scas
mov
cmp
hlt
dec
gs
iret
xor
and
adc
popa
or
xor
ins
pop
and
jo
rcl
out
fild
xor
jne
sub
mov
push
dec
inc
not
pusha
mov
jmp
retf
fs
clc
pop
mov
xchg
cli
jmp
cli
iret
mov
jo
lea
mov
lea
sahf
(bad)
and
dec
fsubr
fild
mov
stos
adc
push
adc
sbb
dec
push
pop
mov
or
jg
unpcklps
add
and
or
push
pop
or
mov
or
add
push
fist
lock
inc
jne
mov
pop
jp
jne
push
and
add
adc
dec
xor
test
arpl
lock
sar
mov
das
inc
push
pop
pop
out
into
jb
or
ret
jmp
pop
inc
jmp
and
not
push
cmp
std
mov
adc
and
add
mov
aas
xor
lock
jmp
dec
stos
sub
pushf
or
outs
or
xor
push
fsub
xchg
repnz
je
pop
add
sahf
or
je
(bad)
aaa
rcl
mov
je
push
sti
lock
adc
(bad)
icebp
aas
jb
cmp
mov
and
jmp
or
into
enter
shl
sub
or
lods
out
cmp
ja
sbb
adc
rol
stos
test
adc
clc
add
cmps
sti
popa
(bad)
ins
mov
daa
data16
jne
outs
popw
adc
pop
mov
xor
pop
push
mov
dec
popa
xor
cmp
fsubp
sub
mov
dec
das
push
pop
xor
sub
loopne
inc
add
dec
xor
sar
not
ins
push
inc
adc
jne
sbb
adc
clc
xor
shl
mov
xor
retf
popf
cmp
sub
pop
out
or
ins
cmps
cmp
jno
xor
cs
mov
retf
inc
xor
push
inc
jg
sbb
popa
lea
jle
jne
loopne
adc
cdq
(bad)
addr16
mov
adc
add
pop
jne
int
jle
jmp
ret
lea
pop
pop
pop
mov
adc
pop
sub
cmp
into
inc
mov
pop
mov
jmp
adc
lea
shr
jns
jo
and
cld
dec
xlat
mov
cwde
jcxz
hlt
and
mov
xchg
push
adc
ins
mov
jmp
or
sub
push
pop
jb
xchg
mov
xchg
pop
in
push
mov
adc
and
stos
sub
dec
mov
shl
mov
mov
lea
mov
cdq
clc
inc
call
lea
push
pop
loop
aam
popa
adc
cli
lock
ror
ror
cmp
add
mov
mov
into
ret
dec
add
je
jp
(bad)
pusha
cmp
je
mov
dec
xor
ror
gs
dec
mov
(bad)
cmovo
popf
mov
out
int
ret
push
sbb
xchg
or
and
dec
hlt
jne
mov
fisubr
in
mov
loopne
inc
inc
jmp
or
test
sbb
pop
call
js
mov
ror
inc
xchg
mov
pop
nop
lahf
sbb
xor
je
mov
sub
add
lock
mov
cmp
push
retf
cmp
adc
fbld
cmove
pop
mov
push
push
xor
pop
enter
test
or
sbb
xchg
sbb
pop
mov
cmp
or
mov
cmp
mov
sub
daa
mov
add
mov
inc
cld
sub
dec
and
xchg
es
and
mov
clc
push
inc
or
(bad)
inc
aas
cmp
das
imul
add
test
add
loopne
(bad)
push
push
inc
add
sub
retf
mov
aam
ret
inc
and
push
icebp
pop
jmp
ror
hlt
add
inc
gs
adc
inc
or
sbb
pop
rol
cdq
adc
mov
inc
add
in
and
mov
ror
loopne
jb
sbb
and
retf
sub
pop
fiadd
imul
push
adc
sti
scas
shl
adc
xchg
jo
inc
retf
add
retf
inc
xor
ins
ins
push
cli
mov
(bad)
retf
push
data16
inc
(bad)
outs
adc
js
scas
loopne
ret
xadd
adc
(bad)
ins
xchg
xor
add
daa
stc
dec
int3
or
neg
pusha
mov
adc
jnp
and
xchg
loopne
inc
inc
lock
adc
(bad)
and
adc
ins
les
sub
cmp
jmp
add
add
icebp
sbb
xor
daa
outs
or
ret
sub
or
push
imul
repz
cmp
and
or
or
arpl
push
lods
jge
xor
push
iret
pop
pusha
sub
push
test
arpl
(bad)
std
push
cli
mov
rcr
cmp
ja
jnp
cmc
sub
adc
stc
and
test
xor
jbe
jb
pop
nop
loopne
or
dec
lods
lock
or
lea
mov
pop
jne
(bad)
jp
inc
std
push
and
fcomi
shl
fsubr
test
push
jo
repz
lock
xchg
and
xor
push
jmp
pop
push
xor
dec
xchg
lods
js
jp
mov
test
imul
xchg
mov
or
push
jle
xor
sub
sbb
mov
mov
inc
ins
icebp
sub
mov
xor
retf
lods
sti
jo
push
nop
(bad)
mov
pop
(bad)
add
cmp
push
dec
arpl
jbe
jmp
shl
loopne
les
add
push
scas
fldcw
outs
inc
sbb
or
stos
scas
in
mov
push
cdq
rcr
pop
adc
inc
test
mov
adc
cmp
movs
adc
push
test
pop
adc
mov
push
mov
jmp
aas
cmc
out
shl
lock
ins
cmp
ja
cmp
inc
jmp
jmp
movs
mov
dec
adc
or
fwait
mov
test
or
cmp
inc
xor
or
or
in
loop
dec
add
jae
in
push
add
and
pop
xchg
sub
or
lock
jnp
cmp
in
shr
sbb
or
and
int
jle
mov
xor
call
ins
cmp
push
inc
retfw
lods
imul
and
add
jmp
xchg
sbb
leave
add
inc
xor
sbb
jo
mov
imul
dec
push
push
scas
cld
cmp
shr
mov
and
push
adc
cmp
loope
xchg
hlt
sbb
xor
xor
lock
jmp
and
sub
ins
sbb
ret
adc
or
jmp
dec
dec
repz
push
or
pop
fwait
jno
jecxz
or
test
jae
ds
push
js
pop
push
jo
push
jle
inc
and
mov
mov
je
bound
mov
xor
jno
mov
inc
mov
inc
adc
push
lods
cmps
adc
(bad)
icebp
popa
inc
je
pusha
and
inc
mov
jg
daa
cmp
jl
stos
cmp
inc
rol
out
adc
test
fisubr
or
ffreep
jge
adc
dec
jb
cmp
mov
in
sub
les
mov
push
imul
mov
adc
sbb
mov
cli
push
loope
(bad)
pop
cmp
mov
loope
arpl
js
adc
add
jmp
sbb
push
jmp
jg
adc
jmp
sbb
xor
iret
pop
ins
popa
pop
test
jl
inc
cmps
jbe
ss
mov
je
or
mov
sub
jle
inc
imul
push
pop
mov
sbb
or
(bad)
repz
pop
mov
cs
add
rcr
and
push
adc
cmp
addr16
mov
mov
dec
pusha
inc
adc
pop
pop
xor
je
sub
test
je
retf
or
imul
push
mov
das
jns
mov
jbe
fs
ins
jne
lahf
and
xchg
add
add
and
xor
push
cmp
icebp
je
push
in
rol
push
push
xchg
inc
enter
loopne
or
inc
dec
cwde
(bad)
push
sbb
push
jbe
fadd
nop
sub
dec
sbb
mov
sub
outs
sub
movs
inc
push
sub
sbb
push
adc
pop
fcomp
into
call
adc
mov
dec
ins
or
ss
and
push
add
sbb
xor
cmps
xchg
xchg
or
mov
cmp
cmovp
push
cmp
jbe
sbb
adc
adc
xor
fs
dec
cmp
sub
nop
dec
es
inc
ins
sub
mov
lahf
pop
and
repz
xchg
outs
xor
dec
cmp
dec
call
aam
sub
dec
pop
addr16
fsubr
in
call
dec
sti
xchg
ds
xor
add
xchg
shl
cdq
add
sub
pop
jp
mov
cmp
jbe
jne
mov
or
popf
inc
sub
cmp
imul
scas
call
push
pop
mov
mov
sub
push
or
enter
fisttp
and
sub
mov
es
fild
ds
mov
js
or
bound
inc
inc
int
sub
jp
jmp
jge
nop
in
inc
or
push
inc
movs
push
adc
fs
push
cwde
adc
push
xchg
test
pop
mov
aaa
add
pop
push
sub
sahf
dec
mov
add
outs
or
clc
(bad)
and
cmc
sbb
inc
cmp
jne
je
mov
out
or
jle
jmp
and
pop
cli
or
cmp
call
push
jmp
and
or
je
or
jge
jmp
test
mov
mov
shl
out
adc
sbb
mov
ret
clc
outs
pusha
xor
inc
or
inc
repnz
add
fisttp
jle
xor
dec
adc
std
les
pop
cmp
(bad)
mul
push
or
cmp
jne
push
je
add
pop
jae
and
ret
gs
and
dec
cmp
pop
jmp
dec
sar
and
add
mov
mov
sti
inc
nop
loopne
jge
add
sub
loopne
push
loopne
test
mov
dec
sar
push
lock
ret
daa
push
pop
add
inc
cli
push
lock
inc
inc
add
and
dec
ret
ror
and
call
dec
jmp
jp
pop
xor
add
sub
mov
bound
pop
cmp
mov
mov
lock
stos
jle
jle
and
add
fsub
shl
jo
jl
loop
movsx
inc
into
adc
push
stos
add
imul
jbe
pop
lock
outs
enter
enter
test
sti
jbe
ja
test
jns
or
scas
mov
(bad)
adc
mov
ficomp
or
fs
inc
xchg
mov
dec
dec
jbe
out
add
inc
call
add
sub
clc
xchg
inc
mov
add
inc
jmp
jno
pusha
sbb
div
xchg
fwait
sbb
xor
hlt
push
sub
and
adc
sbb
stos
and
fsub
sub
push
jmp
mov
and
push
adc
and
out
dec
jl
fstp
xchg
add
add
push
add
inc
sahf
lea
aaa
and
dec
inc
sbb
dec
adc
jg
fs
push
bound
or
push
mov
xchg
cld
fdivr
(bad)
je
ret
jle
test
inc
pop
push
lea
dec
push
jnp
jp
fnsave
js
mov
adc
mov
dec
add
adc
dec
ror
xor
leave
cmp
dec
icebp
shl
sbb
mov
mov
loope
(bad)
loopne
hlt
iret
sbb
add
(bad)
jg
sub
pop
pop
loope
xchg
into
imul
or
ret
ja
pop
imul
ret
sub
xor
adc
in
mov
add
call
cmp
addps
mul
dec
cmp
xor
outs
repz
sti
or
lea
out
(bad)
sub
rcr
out
int3
test
fcomp
cmps
int3
push
or
in
test
jno
xor
pop
ret
sbb
jbe
cmp
mov
mov
pop
push
inc
mov
inc
or
(bad)
(bad)
xchg
es
and
(bad)
neg
inc
mov
mov
adc
clc
cdq
idiv
add
cwde
sbb
mov
push
jge
add
cmp
add
lods
xor
dec
cmps
mov
add
jg
fsub
add
retf
sub
xor
or
mov
hlt
lock
les
out
mov
hlt
das
push
xor
inc
ror
and
adc
aaa
fiadd
bound
ds
add
das
jmp
out
test
hlt
inc
loop
sbb
vcomisd
std
cmp
mov
sbb
add
inc
idiv
push
sub
xchg
or
daa
lea
lds
xor
sub
jns
push
hlt
or
neg
cmp
jo
sar
jae
xor
sbb
jbe
not
cwde
inc
xchg
lds
dec
leave
and
xor
push
cmps
leave
mov
(bad)
sbb
hlt
call
pop
fimul
sub
inc
xlat
dec
ret
(bad)
push
push
popf
mov
add
cmp
shr
jl
inc
jecxz
loope
es
jb
mov
mov
outs
push
nop
push
jmp
jmp
mov
and
pop
sub
xor
dec
mov
jl
push
xor
add
out
dec
add
sub
ja
sub
sub
inc
dec
ss
add
xor
test
shr
les
add
dec
cld
in
aam
jecxz
adc
or
dec
repz
dec
pop
mov
lea
add
lea
rol
jns
add
(bad)
hlt
and
je
mov
push
mov
cmp
sbb
inc
dec
push
adc
push
push
sub
test
xor
mov
test
cdq
mov
loop
mov
iret
out
push
push
push
adc
(bad)
ins
out
mov
das
jge
jl
or
add
ret
(bad)
or
push
xor
shl
or
int
popf
inc
adc
inc
je
inc
je
sub
jne
(bad)
dec
xor
xor
sub
mov
ja
or
jnp
pop
sub
pop
or
clc
sbb
xchg
xor
jns
dec
add
xor
bound
aam
or
loop
or
sar
lock
cld
or
sbb
in
gs
int3
mov
(bad)
mov
jle
int
das
sub
popa
adc
lods
adc
sbb
sbb
add
ret
out
or
(bad)
jge
jl
sub
adc
sbb
cmp
cmp
cmp
mov
ror
stc
fs
hlt
push
add
in
popa
jne
and
call
push
mov
arpl
mov
push
aas
imul
add
sub
mov
or
xchg
or
sbb
pop
add
hlt
dec
nop
mov
cmp
mov
or
mov
call
push
leave
jnp
pop
movs
call
adc
or
dec
xor
shl
mov
pop
daa
mov
loop
push
cmp
inc
gs
fldcw
push
add
push
jo
jmp
mov
test
inc
add
and
xchg
loopne
call
inc
push
fs
repz
pop
and
mov
dec
(bad)
pop
ins
or
inc
or
je
mov
test
je
pop
clc
sub
push
ror
(bad)
mov
test
stc
push
imul
add
xchg
bound
mov
mov
es
loop
add
movs
jo
fsubr
inc
push
into
jnp
xor
xor
addr16
or
jmp
call
jnp
mov
(bad)
std
sbb
sbb
pop
push
or
add
cmc
push
neg
mov
sub
nop
push
dec
ret
cmp
jmp
and
add
inc
jmp
push
loope
outs
adc
jne
or
push
and
sbb
rol
mov
mov
test
add
mov
push
das
push
daa
xor
inc
xchg
mov
js
(bad)
std
jge
xchg
cmp
mov
pop
jle
sar
mov
mov
mov
mov
repnz
add
xchg
and
pop
cmp
add
ror
dec
ret
(bad)
pop
nop
pop
test
inc
dec
cld
movs
sbb
jo
cmp
lods
xor
sbb
jecxz
inc
lods
mov
nop
clc
sbb
xor
adc
add
jmp
pop
adc
cmps
mov
rol
clc
(bad)
cld
mov
dec
cs
or
rol
push
mov
loope
xchg
dec
loopne
inc
add
shl
xchg
test
adc
mov
cs
xchg
(bad)
mov
icebp
adc
pop
jmp
movs
mov
add
inc
jbe
or
add
xchg
xchg
cmp
inc
sbb
push
cmp
inc
iret
mov
movs
cmp
ds
adc
jb
and
je
and
in
jnp
popf
jmp
push
xor
mov
test
add
adc
mov
and
adc
xor
mov
sub
wbinvd
mov
fs
add
or
aam
inc
stos
and
mov
mov
adc
mov
xor
xchg
sbb
fidiv
mov
inc
retf
ins
stos
sub
adc
inc
fwait
or
sub
mov
nop
push
and
(bad)
add
push
cs
sbb
and
loope
cdq
inc
fcom
adc
icebp
add
adc
rol
mov
mov
(bad)
loop
ret
or
sar
push
ret
daa
sub
out
or
push
add
and
sbb
sbb
push
movhlps
rcr
loopne
push
in
das
push
popa
ror
aaa
mov
mov
cmp
push
in
ja
icebp
and
nop
jbe
pop
dec
adc
mov
adc
mov
dec
jecxz
and
add
stos
mov
movs
sub
hlt
scas
ins
fldenv
xchg
pusha
inc
aas
stos
in
jecxz
lahf
sub
and
push
push
sbb
sbb
add
push
sbb
pop
xor
inc
xchg
(bad)
pop
and
popa
add
repnz
lods
mov
pop
adc
adc
adc
pushf
dec
mov
jmp
cwde
gs
rcr
pop
jmp
or
push
dec
sbb
pop
idiv
loopne
and
push
int3
popa
out
sti
sbb
leave
pushf
es
rcl
pushf
pop
mov
gs
xor
sbb
push
popa
gs
call
push
pop
ret
fs
or
add
push
icebp
popf
cmc
push
hlt
sbb
push
pop
pop
push
shr
push
pop
jo
lock
(bad)
(bad)
jmp
pop
js
adc
sbb
adc
clc
mov
movs
inc
cmp
pop
xchg
sbb
sbb
push
imul
lea
push
push
inc
data16
inc
enter
jge
loope
(bad)
in
mov
and
data16
loope
cdq
int
enter
mov
and
xor
and
loop
lds
mov
xor
push
nop
test
jns
xor
or
das
aam
push
push
outs
jb
sahf
inc
shr
inc
add
cld
sub
jecxz
xchg
mov
call
or
test
push
daa
das
xchg
xlat
in
leave
movs
and
cwde
adc
mov
mov
pop
and
xchg
dec
cmp
cmp
leave
in
les
inc
pop
jb
in
dec
ror
or
aam
mov
push
ror
pop
or
xchg
dec
xor
xchg
loope
outs
ins
push
sub
je
sub
adc
aad
jo
fsub
jne
or
or
dec
pop
inc
(bad)
call
pop
lock
leave
cwde
mov
and
repnz
xor
imul
iret
mov
cwde
pop
add
push
cmp
adc
test
adc
inc
mov
arpl
movs
inc
and
mov
sbb
dec
push
ror
sbb
pop
adc
dec
pusha
mov
aas
inc
loopne
push
cmp
sahf
je
jbe
mov
mov
mov
push
xchg
mov
fs
mov
les
inc
xor
mov
pop
push
jne
imul
and
sub
jmp
test
dec
test
sbb
adc
ret
and
add
add
lds
cs
cmp
sti
sub
scas
retf
add
cld
xor
adc
dec
fldenv
nop
or
fld
add
xor
and
push
mov
mov
lock
jl
sbb
cmp
dec
pop
jecxz
adc
or
fsub
inc
lock
cmp
dec
mov
mov
xchg
and
push
dec
dec
cmp
adc
out
dec
add
add
pop
rcl
cwde
adc
pusha
(bad)
mov
cld
xchg
mov
lahf
inc
cmp
js
pusha
jl
pop
jb
jbe
outs
movs
cmp
mov
xchg
fcomp
adc
cmp
mov
in
lods
inc
sbb
sub
xchg
mov
ins
idiv
cwde
sbb
and
ss
lea
mov
cmp
adc
test
sbb
cmp
repnz
mov
inc
or
dec
bound
aaa
ret
mov
add
pop
or
in
push
mov
fs
inc
cmp
nop
push
mov
inc
mov
in
xchg
xlat
hlt
int3
add
push
mov
add
xor
push
mov
icebp
pop
dec
enter
enter
cwde
dec
or
inc
enter
or
cmp
and
loope
sbb
retf
dec
pushf
or
test
inc
lea
enter
inc
xor
push
lods
js
and
inc
arpl
dec
cmp
or
or
movs
jbe
push
cmp
lock
sub
xor
sub
cmp
xchg
mov
mov
pop
jne
cmp
sub
rol
mov
pop
in
sar
add
cdq
mov
push
sbb
and
loop
mov
enter
cmp
or
push
inc
xchg
out
mov
xor
push
cli
adc
cmp
and
push
mov
fs
cmp
sbb
data16
ss
adc
sbb
mov
ja
cmp
pop
add
(bad)
(bad)
jmp
mov
push
mov
ja
movs
mov
jmp
stos
adc
mov
sub
push
add
test
js
push
adc
sbb
jnp
pusha
(bad)
cld
jmp
sub
push
adc
pop
test
adc
cmp
call
pop
add
jae
xchg
sbb
in
or
shl
or
and
push
push
mov
cmp
dec
mov
add
jmp
and
loope
es
mov
add
inc
or
add
sbb
test
and
lock
add
mov
test
pop
lea
mov
test
jbe
or
(bad)
pop
and
adc
ret
or
fst
and
in
mov
outs
jo
push
mov
push
push
xor
ins
or
push
push
and
inc
sub
push
pcmpeqd
movs
inc
inc
dec
and
sub
test
fs
int
out
mov
dec
push
sbb
mov
movs
pop
shl
and
call
add
fdivr
jmp
push
lea
pop
dec
(bad)
xchg
push
loopne
and
ja
out
sbb
or
cmp
and
lea
dec
mov
neg
test
sbb
pop
mov
das
dec
repnz
sbb
repz
xor
call
add
push
push
add
xlat
les
aas
pusha
inc
scas
outs
repnz
push
or
push
rep
sub
hlt
inc
push
out
pop
cdq
in
or
sbb
es
inc
loope
jle
mov
ret
aas
add
dec
daa
pop
cmps
mov
sbb
(bad)
ror
dec
out
dec
mov
pop
xchg
iret
cmp
dec
push
test
push
scas
mov
fsub
sahf
cmps
jne
fistp
(bad)
scas
cdq
xchg
lds
and
test
cmps
fiadd
imul
adc
in
sub
push
popf
sub
add
mov
sub
sub
in
adc
sub
and
push
sub
sbb
push
popa
ds
sub
cmp
mov
int3
aad
xchg
push
(bad)
cdq
push
mov
mov
push
push
pop
add
rol
cmp
push
test
fild
scas
or
pminsw
iret
pushf
in
cwde
ret
idiv
mov
and
loope
out
sti
call
outs
or
inc
retf
push
ins
test
stos
gs
ins
dec
jecxz
je
test
ret
mov
mov
push
inc
cmp
jbe
sbb
inc
or
je
mov
(bad)
sbb
add
jmp
stos
ds
jbe
fs
(bad)
jmp
fmul
or
inc
(bad)
iret
pop
push
adc
pop
loope
add
(bad)
ror
sub
mov
cmc
and
xor
pop
add
imul
mov
(bad)
dec
lea
lock
je
mov
mov
pop
jo
sub
mov
pop
inc
inc
pop
(bad)
adc
or
inc
push
sbb
inc
cmp
jbe
enter
or
into
push
mov
sub
add
mov
or
inc
pusha
gs
dec
or
dec
jecxz
mov
mov
inc
dec
add
cmp
cmp
das
mov
movs
and
dec
call
xlat
or
dec
pop
add
bnd
jo
idiv
rol
or
into
push
push
js
and
je
and
sti
in
ins
iret
sbb
or
sahf
mov
js
push
mov
out
fsubr
jp
jne
bound
jmp
ret
repz
pop
stos
mov
in
dec
sub
push
jbe
xor
or
cmp
adc
inc
dec
push
push
or
dec
cmp
sbb
aam
fldenv
mov
fcom
loopne
mov
push
scas
stos
mov
push
or
inc
inc
ins
and
xchg
pop
xor
mov
sbb
mov
in
pop
fcom
add
pop
cmp
jecxz
enter
imul
mov
xchg
enter
ret
shr
aaa
adc
sub
scas
shl
cli
add
add
sbb
imul
nop
sub
div
(bad)
and
je
push
hlt
adc
cs
or
inc
in
or
or
mov
and
pop
cmps
ret
stc
add
inc
retf
(bad)
xchg
in
xchg
jo
mov
inc
in
push
cmp
pop
or
lock
cmp
fild
sbb
leave
lock
test
and
daa
jae
or
mov
adc
cmps
aaa
cmp
and
or
or
mov
adc
and
inc
lea
mov
stos
and
loop
dec
int
and
jle
(bad)
mov
and
mov
daa
add
mov
in
test
in
in
repnz
add
cmp
or
or
jmp
sub
adc
mov
adc
push
push
mov
data16
or
pop
push
mov
cli
add
xor
push
push
adc
scas
adc
push
movs
in
push
rcl
mov
pop
loop
add
dec
xchg
cmp
fisubr
mov
add
xchg
test
movs
das
lahf
xchg
hlt
shr
jmp
shl
je
add
cs
or
xchg
cld
retf
jne
imul
div
lea
adc
ret
add
pop
movs
or
xor
push
push
sub
sbb
(bad)
push
ficomp
pop
aas
and
inc
fcom
push
cmp
mov
or
add
xor
pop
add
or
shl
mov
pop
push
idiv
sub
jecxz
and
fsub
push
dec
sub
and
inc
imul
push
jne
adc
adc
retf
fcomp
and
mov
push
sbb
add
mov
in
jl
jb
ror
cs
cmps
cmp
lds
cmp
ret
xor
mov
jb
mov
stos
jo
mov
mov
add
jnp
cli
mov
aaa
jmp
les
push
dec
lds
test
and
mov
stos
icebp
js
ja
dec
(bad)
xchg
jns
call
dec
add
push
fiadd
mov
and
adc
les
(bad)
sahf
jb
ror
add
mov
js
and
popf
push
push
popa
dec
adc
nop
add
call
ds
and
push
stos
add
mov
add
jbe
pop
jmp
pop
mov
mov
jle
dec
and
dec
cs
mov
stc
sbb
fs
add
push
mov
jo
lea
(bad)
jo
mov
dec
mov
lds
pop
ins
jmp
mov
dec
loope
mov
les
push
dec
je
(bad)
sar
cs
jne
mov
jb
or
icebp
or
or
scas
and
outs
mov
dec
arpl
pop
or
or
(bad)
mov
fisub
and
adc
pop
into
or
or
inc
clc
push
sub
es
cmp
shr
sub
arpl
sub
out
jle
loopne
add
jmp
test
mov
or
mov
dec
xlat
sub
loop
sub
sub
push
jp
enter
push
test
sti
jmp
lea
stos
xchg
xchg
cmp
adc
das
adc
dec
scas
mov
mov
inc
fmul
and
mov
adc
or
mov
or
adc
inc
leave
cmp
mov
mov
ret
aaa
stos
add
adc
mov
dec
and
xor
test
bound
and
or
jge
pop
xor
mov
loope
and
xor
mov
xor
xchg
mov
sahf
adc
jp
mov
lods
jae
inc
mov
cmova
mov
jae
sub
xor
add
in
sbb
call
and
js
add
sahf
sbb
jae
ins
loope
fdiv
fdiv
mov
inc
add
adc
jl
inc
cmp
cld
push
cmp
mov
sub
movs
scas
or
fwait
sbb
cli
push
or
jmp
outs
(bad)
call
dec
je
xor
lock
lahf
or
sbb
in
jne
cmp
movs
xlat
pop
jmp
jo
cmp
dec
pop
xchg
dec
clc
adc
enter
or
or
sbb
loope
nop
in
test
aad
test
xor
mov
aam
add
(bad)
xor
xor
das
adc
mov
sub
fmul
js
mov
xchg
pop
inc
jl
ss
mov
sbb
mov
xchg
imul
rcr
pusha
push
or
stc
mov
fidiv
push
add
retf
cmp
sahf
sbb
ret
dec
add
inc
inc
or
inc
pop
jnp
jge
fnclex
enter
jge
inc
hlt
add
or
aas
je
mov
or
test
or
retf
jb
retf
add
adc
test
add
or
xor
pop
xlat
stmxcsr
imul
sbb
and
leave
leave
leave
leave
imul
cld
pop
jmp
data16
fcmovnu
addr16
je
or
push
jns
or
rcl
or
add
dec
bound
repz
fs
clc
add
push
or
lods
stos
and
add
popa
loope
xchg
sbb
sub
adc
pop
dec
leave
adc
jmp
mov
out
cmp
jne
and
push
out
fucom
mov
retf
xchg
jg
dec
xchg
cmp
xchg
or
and
or
cmp
out
jne
or
push
scas
dec
pop
das
push
(bad)
push
jp
ins
cld
test
and
add
pop
into
into
and
xchg
xchg
into
into
into
sbb
sbb
retf
je
push
imul
ja
xchg
stc
retf
jne
or
shl
fs
adc
cmp
into
into
mov
mov
pop
add
add
lock
push
mov
sar
fbstp
ror
add
test
stc
shl
jmp
add
retf
ror
leave
jecxz
std
sbb
pop
sub
je
sub
ret
loopne
fisub
pop
ss
test
aaa
cld
mov
shl
rcl
popa
hlt
pop
push
jae
stos
mov
loopne
push
hlt
hlt
push
shr
adc
xlat
xlat
add
xchg
pop
into
scas
in
jecxz
sar
int
jmp
or
shr
adc
ficom
mov
and
push
sbb
push
idiv
xchg
mov
(bad)
adc
mov
fwait
mov
jl
pop
pop
jne
loopne
adc
rcr
inc
inc
jmp
and
push
sbb
adc
add
and
repnz
fs
rcr
mov
push
in
rcr
dec
jmp
std
push
cmp
in
(bad)
sahf
push
outs
push
xor
aam
sbb
sub
push
movs
ret
push
jmp
mov
pop
mov
add
pusha
test
or
test
lods
add
gs
sub
(bad)
out
fiadd
inc
adc
dec
sbb
jbe
lock
push
add
ja
and
popf
movs
(bad)
mov
lea
xchg
cld
adc
dec
cld
test
je
mov
clc
pop
xor
mov
push
push
sar
rol
ret
pop
scas
or
add
or
ror
pushf
jnp
sbb
push
test
add
addr16
add
(bad)
jmp
add
rcr
mov
or
push
add
add
push
outs
scas
loop
adc
xchg
xor
mov
add
pop
(bad)
shr
add
shl
mov
dec
add
loope
jne
mov
mov
xor
mov
outs
dec
push
or
mov
mov
inc
dec
and
in
in
call
js
(bad)
cld
js
cmp
jl
jmp
sbb
sub
stos
dec
cmp
je
(bad)
cmp
xor
dec
push
pop
sbb
jno
push
es
into
push
push
cmp
xor
push
adc
retf
pop
jne
dec
xchg
rol
or
sbb
dec
xor
add
ss
lea
in
pop
mov
daa
mov
rol
nop
call
call
mov
jne
add
movsx
pop
sbb
pop
or
jne
int3
mov
jne
sub
or
hlt
test
(bad)
cmps
js
(bad)
mov
retf
cdq
adc
xchg
or
or
outs
sub
mov
adc
popf
jp
out
gs
adc
and
mov
stos
fst
pushf
or
mov
mov
shr
and
retf
jmp
push
mov
adc
dec
add
adc
cld
and
xor
lea
inc
add
ss
pop
rcr
fstp
shr
pop
sub
cmps
jge
(bad)
in
retf
pop
add
(bad)
ins
gs
in
adc
xor
sub
mov
in
hlt
test
retf
bound
pop
test
ss
mov
cmp
push
adc
xchg
(bad)
call
and
or
xor
ror
test
mov
adc
inc
cwde
mov
loope
sbb
lea
pushf
mov
iret
mov
inc
adc
test
cmp
enter
clc
out
push
xlat
dec
popa
out
jb
push
jb
fistp
mov
push
mov
push
(bad)
xchg
repnz
mov
mov
pusha
jecxz
sbb
pop
inc
js
in
popf
(bad)
lock
add
mov
movs
jge
jle
and
call
add
mov
shr
dec
jno
and
dec
inc
xchg
inc
mov
dec
dec
pop
inc
loopne
and
inc
lods
lea
xchg
dec
cmp
adc
imul
and
sub
mov
fisubr
cmp
popa
dec
or
movs
std
jo
mov
nop
lea
ins
jb
adc
inc
icebp
imul
mov
mov
or
xchg
out
push
int3
leave
adc
mov
and
pop
and
in
cmp
xchg
lea
or
mov
jmp
cmps
inc
push
xchg
loop
mov
mov
adc
adc
rol
iret
jmp
dec
dec
push
int3
push
fdivr
clc
rcl
inc
(bad)
repnz
xchg
loop
mov
(bad)
adc
dec
adc
in
gs
inc
popa
shr
mov
cmp
lea
pop
icebp
pop
xor
out
(bad)
fincstp
add
adc
adc
sub
jno
mov
and
mov
pop
pop
mov
cmp
and
ret
sub
sbb
mov
mov
mov
jmp
ret
mov
stc
push
fimul
pop
mov
jl
fcmovb
jmp
aaa
lods
or
(bad)
xor
or
lods
retf
retf
pop
mov
dec
clc
ss
xor
outs
lea
jbe
jmp
mov
pop
xor
or
adc
clc
gs
adc
or
js
jb
fwait
xchg
fnstenv
mov
imul
mov
jb
sub
outs
push
nop
scas
mov
and
leave
(bad)
stos
inc
lea
inc
sbb
pusha
sub
out
fld
dec
repz
xchg
pop
xor
mov
mov
mov
pop
rcl
or
sbb
test
ret
arpl
push
retf
add
fs
clc
(bad)
xchg
sub
sbb
clc
dec
cmp
and
jmp
sbb
icebp
xchg
or
iret
outs
stc
add
out
ss
sbb
xchg
retf
or
jae
mov
ror
out
inc
xor
and
pusha
cld
xchg
jo
sbb
cld
mov
fidiv
cld
mov
sbb
cmp
rol
cmps
xor
rol
mov
stos
std
add
dec
fisubr
outs
mov
scas
cmp
js
sbb
push
lods
mov
je
mov
test
gs
adc
mov
mov
test
inc
add
cmp
fld
sar
clc
ret
inc
pop
push
faddp
clc
and
dec
and
nop
clc
cdq
adc
stos
in
aad
or
xchg
mov
cs
cmp
les
add
mov
clc
or
jae
mov
dec
push
jb
add
clc
mov
out
clc
mov
xchg
pop
test
test
cwde
cmp
xor
je
mov
clc
hlt
inc
loop
mov
sub
pop
stc
xor
xchg
pushf
clc
nop
sub
pop
mov
sub
fisub
push
push
nop
test
(bad)
(bad)
push
inc
fist
ret
push
sub
icebp
mov
rol
or
mov
(bad)
fisttp
rcr
jle
cmps
cmps
pop
mov
dec
mov
in
xlat
daa
ret
sti
neg
leave
lods
test
nop
mov
dec
mov
push
stos
nop
mov
xchg
xor
sbb
mov
jp
(bad)
ins
ss
fstp
jge
sbb
jl
xor
outs
push
les
fstp
sub
clc
retf
add
cli
push
mov
leave
xor
xor
add
push
dec
test
in
cmc
ds
mov
inc
setns
leave
add
sub
pushf
ret
adc
movs
push
mov
pushf
and
pop
xor
mov
and
jmp
scas
ja
sar
cs
retf
mov
mov
push
mov
add
popa
add
xchg
dec
pop
in
xor
iret
xchg
(bad)
xor
pushf
clc
je
pop
jecxz
pusha
in
dec
pop
or
aam
and
pop
and
(bad)
fmul
sar
sub
div
jge
cmp
or
or
leave
(bad)
jmp
test
loop
cdq
inc
ss
xor
loope
repz
lock
imul
dec
sbb
es
cmp
dec
and
sub
pop
pop
add
dec
sbb
ficomp
jo
sbb
xor
sub
rol
gs
jo
dec
pop
push
add
es
test
loop
and
(bad)
dec
xlat
movzx
fcom
sbb
jmp
mov
pop
inc
dec
jmp
add
xor
dec
jecxz
das
in
lea
dec
js
cmp
rol
sbb
pop
cld
sub
or
or
mov
lds
mov
and
movs
dec
mov
js
inc
jge
sbb
mov
aaa
add
sub
jno
div
fisttp
add
fiadd
and
add
xchg
stc
jmp
mov
pop
pop
sub
push
in
jmp
js
add
(bad)
mov
cmp
and
test
sub
ret
rcl
dec
and
ins
cdq
mov
push
add
loopne
adc
call
or
adc
add
cmp
adc
dec
test
pusha
in
cmp
fld
dec
imul
sbb
call
cmp
push
or
or
xchg
adc
inc
push
out
lods
lea
dec
sbb
push
xchg
mov
popf
test
and
add
lea
dec
loope
push
mov
push
test
and
push
cwde
push
sub
mov
add
ret
mov
push
mov
or
push
stos
test
add
fstp
out
cmp
or
push
jo
ins
mov
std
and
movs
jmp
lock
cmp
cs
in
ror
mov
inc
in
fsubp
jmp
pop
or
fisttp
sbb
or
(bad)
xchg
mov
mov
adc
aam
mov
call
sbb
pop
mov
into
outs
xchg
jo
test
inc
jecxz
xchg
add
push
fistp
jmp
sbb
pop
outs
sbb
cmp
or
call
aam
sbb
(bad)
inc
add
sub
pop
lock
lds
leave
jb
or
and
pop
dec
pop
or
es
adc
pop
and
push
sbb
fmul
mov
or
push
xor
pcmpgtd
leave
dec
jae
ret
cmp
adc
leave
sbb
mov
ror
mov
mov
mov
jle
addr16
and
aaa
test
sub
sub
or
add
mov
and
cmp
pop
sar
neg
inc
inc
pop
add
dec
adc
out
push
xchg
sahf
adc
inc
stc
cmp
xor
ds
push
jmp
xchg
sahf
sub
(bad)
push
and
or
or
or
push
pop
(bad)
cmp
add
push
call
add
daa
daa
adc
add
add
and
daa
add
push
pushf
inc
shl
out
out
loopne
and
push
(bad)
stc
test
adc
shr
and
pop
push
je
mov
adc
or
jbe
fisubr
mov
mov
lahf
in
pop
jl
and
pop
xor
xchg
push
nop
adc
or
add
cmps
in
pushf
add
add
push
push
ret
push
and
gs
loope
ret
xor
jnp
dec
aam
fwait
retf
lock
mulps
(bad)
pop
and
adc
adc
mov
adc
cmp
adc
cmp
cmp
xchg
adc
das
or
or
or
repz
pop
scas
push
cmp
ss
out
mov
adc
ret
cmp
or
push
shr
pop
push
add
pop
stos
and
add
call
in
call
fcompp
repnz
sahf
or
sbb
call
gs
push
fstp
mov
cld
dec
adc
pop
ds
in
push
sub
cmps
call
int3
push
adc
jnp
in
jmp
jb
dec
enter
adc
and
mov
pop
add
retf
cdq
cwde
push
adc
mov
xor
add
fld
test
push
rol
inc
push
sahf
in
sub
in
lods
cmps
mov
sahf
fmul
cmp
shr
and
ss
and
jo
inc
add
add
cmp
jo
pop
mov
mov
inc
sbb
into
popf
mov
adc
hlt
jae
in
push
nop
add
data16
sbb
mov
adc
adc
pop
pop
test
push
dec
out
pop
(bad)
mov
stos
add
cs
call
es
(bad)
mov
retf
add
lock
mov
or
pop
cdq
inc
pop
cmp
or
or
aas
mov
jg
mov
or
sbb
add
movs
ins
out
and
loope
outs
pop
or
and
dec
push
ror
mov
pop
pop
mov
mov
and
mov
or
fldcw
push
xchg
test
or
sub
jecxz
rcr
push
cmps
adc
dec
fidivr
pop
hlt
fwait
sbb
fsub
ds
mov
fld1
fdivp
fstp
sbb
push
loopne
or
mov
adc
cmp
inc
cmp
xchg
sti
nop
in
mov
push
adc
push
or
mov
inc
mov
push
fcomp
into
sbb
bound
sbb
xor
into
repz
fild
xor
add
sub
pop
xor
xchg
ret
fimul
call
push
mov
mov
inc
cmp
pusha
fst
stos
imul
lahf
mov
lea
pop
call
loope
and
push
fdivr
cmp
test
mov
push
mov
jg
call
jne
scas
ffreep
nop
scas
pusha
inc
ins
jg
ja
test
push
lods
rcl
or
cwde
out
out
or
outs
shl
push
fwait
jo
pop
sub
mov
jg
inc
jle
clc
test
adc
pop
test
sbb
fyl2x
and
js
lds
movs
lea
outs
jl
movs
pop
out
push
pop
jmp
test
push
xchg
jl
je
and
lds
fld
in
outs
jmp
imul
sbb
mov
out
mov
jb
enter
jecxz
ret
lahf
(bad)
push
push
inc
jmp
sahf
int
jmp
jle
fwait
not
movapd
push
clc
jae
iret
jbe
xor
jg
ins
ss
rcl
retf
cmp
mov
and
retf
or
jg
(bad)
dec
mov
cmp
cs
jnp
mov
aad
and
cmp
mov
mov
call
test
fdivr
push
mov
mov
mov
addsd
int
sub
repnz
idiv
push
dec
sbb
bound
cmp
pop
dec
imul
adc
test
xchg
mov
aam
sbb
add
adc
inc
gs
movs
pop
mov
arpl
add
push
jmp
nop
shl
das
jl
sbb
arpl
repnz
mov
mov
out
mov
and
mov
gs
adc
mov
mov
mov
lahf
or
bt
adc
je
cmp
movs
movs
sub
and
push
das
cld
add
out
jle
push
inc
jmp
mov
xor
bound
in
dec
mov
call
ds
enter
push
adc
pop
pop
(bad)
cwde
push
push
xor
es
popf
jno
imul
fimul
(bad)
jmp
inc
loopne
data16
jne
inc
div
xchg
aad
shl
mov
jno
cmp
cmp
cmp
jl
mov
sub
ss
aam
pop
mov
(bad)
pop
pop
stc
mov
cmovae
cld
or
cli
not
daa
sbb
loope
dec
test
nop
mov
loope
popa
movs
or
es
mov
cs
push
sub
sti
pop
fdiv
das
adc
ss
push
inc
imul
ins
push
push
mov
outs
leave
mov
(bad)
pop
push
dec
out
stos
push
push
div
sub
fcmovnb
add
add
dec
aam
cmp
jns
sub
inc
or
in
cmps
mov
add
(bad)
or
test
or
xor
popf
sub
aam
xchg
dec
or
sub
and
test
clc
jmp
lea
call
cmp
pop
imul
cli
mov
inc
mov
and
inc
jo
dec
add
lea
mov
and
int
sbb
pop
mov
add
jno
add
mov
loopne
adc
cmps
xor
mov
mov
push
add
jmp
mov
sub
bound
test
sbb
pop
inc
pop
int3
or
cli
not
rol
sbb
lock
fcmovnu
and
jns
inc
dec
adc
in
xlat
xor
pmaxsw
mov
ins
gs
jbe
adc
loopne
jge
fs
stc
idiv
jae
loop
imul
out
jne
cmp
add
fisttp
push
or
xchg
add
or
ret
and
rcl
das
pop
pop
cmps
or
dec
xor
pop
scas
paddusw
ret
cmp
ds
or
aaa
dec
daa
add
inc
mov
retf
push
jnp
adc
cmp
shl
(bad)
(bad)
xor
aam
fcom
xchg
into
call
sbb
clc
xor
mov
sar
mov
mov
xor
je
lea
jge
sub
inc
imul
inc
inc
test
inc
inc
xor
jmp
jns
les
jp
ficomp
push
sub
sub
mov
xchg
add
(bad)
mov
and
clc
in
ror
jns
test
xor
cmps
xchg
stos
test
cmp
inc
dec
add
rcr
nop
push
xchg
in
push
mov
cwde
enter
sub
and
push
xor
shr
or
fsub
sub
sub
loope
leave
push
sub
dec
adc
jno
pusha
(bad)
imul
jbe
dec
cmps
mov
mov
sbb
jbe
xor
lods
jmp
lock
dec
sub
cmp
or
int3
sub
je
loopne
outs
jmp
fsubr
sbb
sti
rcr
jno
xlat
mov
pop
in
fsubr
mov
adc
adc
movs
add
add
and
inc
sub
les
lea
jge
movs
add
stos
hlt
mov
fcom
mov
bound
pop
cmp
inc
add
xchg
call
xor
into
aas
sbb
aad
dec
pcmpgtb
add
pop
lods
or
cmc
ffree
ror
mov
cwde
adc
sub
add
or
in
dec
jg
push
and
jl
cmp
push
or
xchg
xor
(bad)
pop
or
pop
stc
or
or
sub
fstp
add
sbb
ror
sbb
xchg
xor
(bad)
or
test
(bad)
pop
pusha
clc
jp
adc
or
pop
jnp
mov
mov
sbb
je
gs
or
and
and
xor
and
sbb
cmp
pusha
adc
sbb
add
xchg
jmp
stos
add
sbb
pop
or
and
leave
ficom
and
(bad)
out
and
pop
test
ins
mov
push
add
(bad)
pop
adc
add
adc
(bad)
or
push
xchg
or
into
adc
cmc
xor
add
adc
fsubrp
adc
mov
push
loopne
or
cmps
sbb
fdiv
das
(bad)
adc
or
mov
jno
push
lods
imul
ins
add
xchg
jg
mov
into
sbb
push
xchg
(bad)
mov
mov
shl
xor
add
(bad)
leave
les
ds
out
jno
test
unpcklpd
aad
int
mov
bound
adc
iret
sbb
cmp
lods
sbb
loopne
les
and
addr16
lahf
mov
fs
xlat
lea
pop
(bad)
push
pop
hlt
repnz
(bad)
push
inc
push
mov
(bad)
out
test
cmp
add
push
icebp
pop
call
shl
add
mov
dec
inc
ror
jnp
add
sub
push
arpl
mov
push
(bad)
retf
repnz
sub
jnp
idiv
push
in
push
cld
outs
jg
xchg
cmps
repnz
rcl
mul
adc
test
aad
inc
adc
ja
rol
(bad)
fdiv
shr
aam
sbb
(bad)
sar
ret
vpunpckhqdq
sti
adc
adc
pop
(bad)
(bad)
ja
push
out
xchg
loope
mov
jb
mov
je
movs
clc
ret
mov
add
dec
je
dec
pop
rcl
movd
or
xor
loopne
sar
mov
iret
mov
pop
inc
cwde
xbegin
call
leave
jp
mov
dec
and
call
or
adc
rcl
sub
mov
sbb
jae
and
ror
dec
bound
cmps
push
and
enter
test
adc
or
jne
push
jmp
and
dec
jge
xor
fldl2e
fmulp
(bad)
jecxz
or
test
push
jnp
push
mov
pop
es
jne
fscale
data16
data16
xor
xor
int
mov
push
inc
sub
aad
loope
scas
cmp
mov
je
fstp
dec
push
rol
fldln2
inc
in
shl
sbb
rol
push
ret
inc
jae
mov
leave
jne
pop
in
jmp
gs
jae
(bad)
sub
fldz
sub
shl
push
sub
mov
in
ja
add
adc
or
rcpps
add
lea
pop
add
scas
daa
dec
shr
xchg
fnstenv
sbb
pushf
mov
jbe
aaa
jmp
f2xm1
test
fcomp
es
jne
push
fadd
ret
lahf
and
aaa
aam
adc
mov
icebp
push
xchg
mov
mov
or
stos
or
or
pop
frstor
aam
and
aas
add
cmp
jne
mov
mov
iret
add
and
fmul
mov
sub
or
add
pop
add
(bad)
jmp
shl
sar
rol
mov
and
xlat
sub
jnp
jb
mov
push
ins
xchg
int3
jmp
int
(bad)
jnp
gs
cmp
and
rol
mov
add
or
in
or
stos
xor
js
ret
adc
popa
icebp
jmp
test
or
std
xchg
jmp
mov
or
imul
fmul
cmp
into
ret
mov
pusha
pop
int3
mov
xchg
test
je
add
mov
mov
in
or
les
stos
inc
and
push
jnp
and
loope
lods
sbb
adc
not
lods
fstp
pop
xor
add
data16
fldcw
pop
aas
out
push
test
mov
add
in
cmp
test
or
in
jg
inc
je
shld
call
or
fld
inc
test
or
mov
imul
fstp
xlat
pop
cs
cmp
cmp
and
adc
push
add
cmp
stos
arpl
daa
je
xlat
pop
mov
gs
xchg
sub
sbb
popa
xchg
mov
sbb
outs
stos
ret
jb
out
fcomp
push
pop
sar
sub
mov
enter
jbe
dec
loopne
clc
and
xchg
aas
(bad)
loopne
ja
cli
push
inc
sbb
hlt
jmp
sub
fstp
and
push
aad
adc
lods
jnp
sub
push
lock
xor
sbb
jge
ins
or
push
xchg
or
bound
jne
jl
outs
sahf
and
xor
ins
xor
jmp
jl
pop
sub
cmc
(bad)
ins
clc
sbb
(bad)
and
mov
fwait
test
in
fild
je
xor
add
or
fwait
rol
add
and
sub
(bad)
add
push
lea
in
push
push
add
cmps
cmp
xor
js
cmps
and
and
outs
sbb
in
pop
xor
mov
int3
loope
xchg
and
nop
retf
int
push
or
inc
fild
mov
or
fucomi
jl
jmp
push
add
sbb
daa
push
outs
sbb
pop
adc
adc
mov
sub
cmps
xchg
jne
xor
mov
in
fnstenv
dec
jbe
xchg
pop
push
pop
push
adc
mov
adc
jge
jne
call
and
fstp
inc
add
int
test
shl
(bad)
enter
fsubr
dec
push
mov
bound
mov
sbb
mov
int3
ja
push
push
pop
and
push
scas
les
pusha
push
cs
fstp
xor
or
aas
dec
lock
and
fucom
in
inc
jp
push
jle
add
push
pop
mov
push
test
xchg
in
stos
add
sbb
test
or
jle
or
jnp
pusha
movs
mov
sub
dec
dec
mov
mov
mov
test
or
or
lock
leave
(bad)
adc
xchg
out
push
stos
xor
setp
xchg
pop
jmp
sub
stos
xchg
and
jg
xor
sbb
push
push
(bad)
jmp
sbb
pop
xchg
sbb
neg
ror
mov
test
dec
loopne
neg
adc
xor
jg
outs
sbb
inc
pop
adc
or
out
pop
add
repz
and
popa
mov
inc
mov
xor
mov
aaa
xlat
mov
sbb
xor
xor
add
xor
push
mov
add
retf
neg
jbe
or
adc
sbb
test
xchg
sbb
or
or
sbb
or
sbb
sub
addr16
inc
mov
mov
sub
in
pop
je
xor
(bad)
call
addr16
jb
cmp
ja
add
cmp
or
repz
(bad)
cmp
in
dec
in
popa
adc
adc
or
adc
push
sub
jp
pop
leave
retf
mul
ret
shl
mov
mov
nop
jne
and
ss
sub
and
add
nop
ds
mov
pusha
cli
push
scas
inc
or
es
mov
icebp
(bad)
mov
adc
cmp
int3
out
mov
rcr
in
add
call
outs
and
out
sub
in
inc
and
sbb
push
ficom
xor
mov
xor
xor
mov
sub
lock
sbb
cs
or
mov
sub
inc
jl
cs
jnp
outs
movs
fld
jmp
call
pop
ins
xor
in
popf
ja
jp
enter
clc
jg
adc
lea
mov
push
and
dec
mov
fstp
lods
inc
add
fisttp
add
dec
popa
cmps
and
lods
pop
mov
inc
shr
test
and
test
adc
and
push
push
(bad)
adc
loope
in
scas
rol
adc
retf
icebp
push
inc
stos
stc
adc
mov
je
sbb
(bad)
fimul
rcr
sub
jecxz
add
pop
mov
ror
movs
in
adc
pop
sub
pushf
loopne
adc
add
push
add
xor
gs
push
or
out
(bad)
outs
sub
pop
cmp
and
adc
test
adc
aas
xor
loope
cld
mov
loopne
and
add
xor
add
fwait
mov
mov
shl
and
loopne
add
mov
movs
gs
or
imul
xchg
or
push
adc
or
and
cmp
add
xchg
loop
push
mov
pop
adc
call
dec
je
jbe
xchg
js
cmp
add
or
js
push
outs
pop
das
and
movs
adc
repz
adc
add
adc
rcl
repz
gs
jbe
and
xor
add
hlt
push
imul
pop
es
mov
loop
shl
or
sbb
je
pusha
add
mov
sbb
jg
mov
sub
sub
leave
sbb
outs
xor
fldcw
inc
inc
retf
adc
push
or
push
sub
das
sti
call
in
call
jnp
daa
movs
mov
add
clc
adc
lock
and
cmp
mov
leave
inc
jmp
(bad)
test
add
idiv
add
jle
cmp
adc
lock
loopne
ret
ss
sbb
not
or
or
ds
ins
hlt
into
fcmovu
adc
rcl
add
or
inc
fs
xor
push
xchg
dec
clc
idiv
jnp
data16
and
sahf
jp
sub
ins
sbb
mov
pop
rcr
xchg
cmps
dec
lds
repz
pop
push
adc
mov
jo
push
mov
or
imul
mov
xor
pop
add
or
xchg
sbb
imul
add
movs
add
or
or
or
lods
inc
or
inc
leave
into
ss
or
xor
sub
jb
nop
fwait
aam
or
call
or
add
not
scas
push
sub
scas
test
loop
mov
mov
mov
pop
outs
or
xor
and
cmp
ret
push
retf
fs
and
dec
fnstsw
jmp
mov
(bad)
push
xor
xor
rcr
(bad)
sbb
lock
and
mov
and
in
out
movs
jl
and
jecxz
sbb
into
xor
adc
jmp
inc
jl
and
and
dec
in
xor
sub
mov
push
loopne
and
(bad)
scas
fstp
cmp
(bad)
ins
mov
xor
loope
add
cdq
push
mov
mov
inc
and
adc
fstp
dec
inc
pusha
jmp
ds
mov
les
neg
push
cmp
div
sti
add
or
dec
in
out
add
movs
mov
cmps
repz
mov
jne
or
and
mov
jne
adc
test
test
stos
xor
pop
sbb
sbb
jmp
mov
fnsave
and
dec
add
adc
push
je
pop
lods
fld
fstp
jmp
fisttp
pusha
movs
xchg
mov
mov
lea
and
and
retf
cmp
pop
or
ins
sub
inc
mov
jne
(bad)
icebp
cwde
or
sub
xchg
ret
pop
adc
mov
test
inc
push
and
outs
leave
and
loopne
add
cwde
inc
(bad)
loope
xchg
xchg
dec
in
and
pop
push
xchg
push
pop
jmp
imul
ss
push
lea
lea
or
adc
fstp
fs
mul
push
data16
add
test
(bad)
jne
push
test
mov
ret
mov
push
ja
and
xor
leave
mov
ins
fucomp
daa
jo
add
dec
das
je
movs
mov
(bad)
or
and
rcr
and
ins
or
or
or
pop
sbb
jge
sti
mov
out
cwde
and
fstp
and
sub
shr
and
cmp
(bad)
jmp
call
mov
mov
dec
fwait
and
mov
lods
mov
sub
dec
lods
lods
xchg
scas
int3
test
pusha
pop
mov
push
sbb
push
xor
cwde
and
jno
add
push
movs
loope
ret
call
test
cmp
mov
pop
sbb
push
std
aam
mov
adc
mov
sbb
sub
dec
jl
(bad)
and
das
fnstsw
imul
retf
sbb
enter
push
and
mov
(bad)
outs
(bad)
mov
add
loop
loopne
nop
push
dec
jle
aas
add
nop
sbb
cmp
or
jecxz
sahf
cmp
lea
push
mov
xchg
in
add
add
rcr
or
sbb
adc
add
mov
mov
pop
push
jmp
inc
or
cwde
lods
enter
jo
pusha
or
or
add
inc
into
cmp
jb
inc
cmp
cmp
jb
adc
pop
push
adc
push
adc
(bad)
add
pop
push
adc
les
mov
jmp
nop
cli
outs
and
add
jo
jecxz
push
xor
ins
shl
or
inc
and
pop
or
mov
dec
rcl
or
popa
mov
mov
rcl
xor
cmp
jge
mov
nop
shr
mov
ret
call
add
sar
ret
cld
in
call
ret
out
repnz
mov
jg
adc
mov
push
rol
data16
xlat
mov
push
movs
inc
sbb
xchg
cmps
adc
mov
jmp
push
pop
push
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
inc
sti
sti
ja
push
pop
jb
cmp
or
cmp
or
xor
sbb
fist
or
add
sbb
sbb
xchg
jo
add
fxch
retf
sub
leave
xor
push
or
loopne
loope
push
in
mov
ror
in
adc
add
pop
jge
mov
stc
inc
jae
and
shld
shl
xchg
sbb
add
add
or
aas
lods
rcl
jmp
shr
push
push
push
je
mov
inc
in
dec
jge
inc
inc
dec
sbb
in
xchg
fiadd
out
sub
inc
sbb
fmul
sbb
in
sbb
fcom
ret
out
push
inc
and
fnstenv
xchg
icebp
sbb
adc
pop
sahf
xchg
adc
sbb
dec
jns
ret
ret
push
or
pop
pop
pop
push
sub
nop
sbb
movs
movs
mov
xchg
xor
repnz
jmp
mov
push
or
(bad)
iret
xor
or
jmp
mov
xor
lahf
inc
push
jmp
adc
cmp
add
add
ret
cwde
(bad)
out
lahf
pop
and
enter
jmp
sbb
enter
xchg
adc
push
or
jae
cmp
add
ins
inc
cld
add
or
pop
jmp
add
pop
mov
pop
adc
mov
cdq
shl
jmp
pop
cmp
mov
and
fdivr
xor
xchg
jl
sbb
or
or
jno
jns
jmp
popa
punpcklwd
imul
or
sbb
or
dec
or
lds
pop
cmp
and
push
ins
fcomp
fcom
add
leave
ret
aaa
sbb
add
pusha
adc
test
je
imul
adc
mov
hlt
push
fistp
pop
pop
mov
mov
cmp
jmp
ds
icebp
clc
add
rcl
add
fs
pop
jmp
cmp
fcomp
fnstcw
ret
mov
pop
xchg
pop
xor
add
push
sbb
add
or
bnd
mov
xchg
pusha
jnp
stos
add
xor
xor
call
add
add
add
add
inc
ins
iret
repz
or
pop
push
add
push
lock
push
or
adc
mov
add
sub
cmp
push
test
or
movs
jge
ja
cmp
mov
or
cmp
mov
es
shl
sub
xor
(bad)
and
repz
leave
js
(bad)
movs
add
data16
pusha
nop
mov
(bad)
out
rcl
fldenv
fcom
loope
shr
dec
and
pop
dec
jnp
inc
loopne
ret
je
cmp
dec
jecxz
arpl
jmp
cs
inc
je
inc
outs
jmp
ret
out
jmp
arpl
inc
lea
cmovb
adc
and
and
rol
mov
(bad)
shl
clc
clc
and
jne
cmp
sbb
mov
sub
add
jmp
clc
repnz
scas
jne
pop
inc
jbe
fxch
mov
std
sbb
mov
pop
clc
(bad)
cld
popa
xchg
mov
sar
or
ror
add
push
mov
loop
inc
xor
arpl
mov
inc
loopne
out
loop
out
shr
popf
imul
push
call
mov
mov
jb
xor
jbe
sub
pop
xchg
in
imul
adc
push
dec
ret
jg
sbb
pop
jnp
mov
not
lea
sbb
sbb
adc
sbb
sbb
ret
jae
out
lea
ret
push
sbb
loope
pop
or
cdq
mov
lods
or
stos
mov
sub
sbb
mov
repz
ror
cs
fmul
or
in
sbb
push
mov
dec
push
push
sbb
test
les
mov
cmp
or
mov
jecxz
pop
mov
pop
add
out
js
dec
mov
icebp
retf
out
pop
pushf
out
sub
fistp
sub
adc
in
jne
pop
dec
loopne
movs
mov
sar
aas
arpl
popa
inc
mov
add
push
jp
mov
push
retf
call
adc
test
inc
cmps
lea
xchg
xor
pop
or
lods
or
addr16
fsubr
inc
adc
add
dec
pop
push
adc
mov
cmp
pop
call
add
inc
adc
add
jmp
xchg
sahf
rcl
dec
xor
push
outs
daa
sub
scas
push
jmp
or
or
mov
and
jp
jae
test
pop
sub
push
dec
cmp
or
lods
dec
or
loopne
xchg
jo
jne
pop
fsubr
scas
outs
xor
int3
adc
mov
shr
ret
(bad)
stc
jmp
xor
sbb
cdq
or
mov
pop
dec
inc
add
ins
sbb
loop
sub
push
cdq
sub
cmps
mov
pusha
icebp
push
mov
in
ja
add
push
adc
and
and
jmp
xor
jge
lea
and
clc
pop
push
cmp
sub
mov
add
inc
mov
jg
or
idiv
test
inc
jb
xchg
or
in
inc
nop
out
pusha
lea
mov
or
(bad)
in
push
jp
dec
mov
out
pop
test
pop
les
xchg
adc
push
add
push
jae
aaa
lods
aam
lods
adc
mov
xor
inc
dec
ja
fiadd
xchg
xor
or
sbb
sbb
or
mov
pop
jmp
cmp
in
pop
mov
push
inc
nop
adc
mov
cmp
push
push
pop
pop
ins
dec
enter
add
add
fwait
dec
add
add
sub
push
xor
push
or
sbb
push
adc
cs
cmp
aam
and
(bad)
xchg
lahf
pusha
loope
fstp
push
lock
push
sub
in
repz
scas
pop
push
mov
daa
sbb
fcmovb
push
adc
movs
add
div
jo
out
aaa
mov
das
push
sbb
(bad)
adc
mov
xor
jl
pop
push
xchg
mov
enter
mov
xor
sbb
push
jns
neg
inc
mov
pop
psrlq
jne
sub
mov
fcomip
inc
mov
adc
outs
cmp
xchg
cmps
cmp
adc
test
add
dec
push
(bad)
aam
cmp
data16
push
dec
pop
push
pop
mov
sbb
call
sub
and
adc
mov
movs
jo
adc
cdq
add
sbb
ins
nop
ss
scas
cld
mov
xor
or
and
jmp
xor
ins
sbb
in
adc
pop
scas
je
cmp
aas
mov
push
cdq
add
push
adc
movsx
pop
ror
imul
and
pop
xor
sahf
inc
mov
ret
push
test
cmp
pop
adc
jmp
data16
sub
push
inc
push
jb
sbb
pslld
jnp
adc
push
es
add
add
add
sub
push
jo
adc
test
jecxz
(bad)
cmp
jae
or
mov
add
into
and
xor
sub
add
cmp
mov
adc
out
leave
add
add
xchg
dec
inc
clc
add
cmp
pop
cmp
fs
jo
cmc
add
mov
aam
adc
cmp
and
nop
xor
xchg
dec
mov
pusha
and
mov
mov
loop
dec
out
mov
cmp
outs
and
pop
and
cdq
in
add
outs
or
sub
mov
pop
ret
test
or
rcl
push
(bad)
ja
jae
fstp
xchg
push
mov
outs
inc
mov
push
push
adc
movs
adc
(bad)
sbb
mov
adc
jnp
imul
(bad)
mov
jecxz
aaa
add
shl
arpl
cmp
xor
rcr
test
or
cmps
loop
rcr
cmp
fisttp
push
cmp
jne
mov
or
add
popa
mov
jbe
in
mov
push
cmp
dec
sbb
das
xchg
daa
cmp
repz
loopne
dec
dec
and
push
add
cli
xor
shl
add
jg
mov
data16
in
inc
(bad)
sub
ja
(bad)
xchg
sub
sub
aad
cmc
fild
(bad)
es
shr
and
sbb
mov
rcl
jmp
push
and
xchg
(bad)
sub
cmp
fild
jmp
push
push
add
add
sub
jmp
and
pop
xchg
inc
enter
scas
xchg
adc
push
ror
pop
clc
leave
lea
pop
test
cmp
push
nop
pop
pop
in
ins
pop
pop
in
or
mov
add
jge
in
loope
xchg
inc
xchg
sub
pop
adc
mov
push
cmc
aad
add
retf
jo
dec
pop
push
mov
jmp
test
in
ds
clc
mov
aam
or
xor
inc
mov
mov
xchg
add
mov
mov
mov
je
inc
ss
ret
mov
xchg
test
sbb
mov
xor
cmps
test
mov
mov
push
retf
fimul
add
and
jbe
sbb
ins
jp
or
push
ds
mov
push
sbb
sbb
sub
fwait
and
(bad)
add
mov
push
jg
icebp
jbe
inc
push
in
push
inc
jne
pop
out
(bad)
xchg
xor
pop
xacquire
and
shl
int3
cmp
xchg
sti
mov
daa
or
ror
shl
ja
cmp
test
sub
sub
fcom
movs
stos
jg
shld
cdq
(bad)
or
xor
push
bound
xor
(bad)
sbb
ret
jg
mov
rol
xor
mov
mov
repnz
movs
add
jae
sub
inc
xor
add
mov
sub
rcr
ret
mov
pop
mov
or
cmps
pop
popa
mov
ror
mov
mov
movs
sbb
sub
cmp
mov
mov
ror
cmp
push
pop
push
push
or
inc
leave
inc
dec
data16
cmp
adc
inc
xchg
pop
lahf
push
dec
push
sbb
das
cdq
xchg
rol
jmp
push
inc
stc
mov
xor
int
daa
pop
adc
inc
test
mov
mov
jmp
sbb
(bad)
and
sbb
adc
sbb
iret
shr
xchg
and
dec
jb
test
(bad)
mov
ret
ror
test
add
sahf
add
mov
lds
or
out
adc
adc
and
(bad)
aas
pop
and
dec
shr
inc
shr
add
xchg
adc
fcmovnb
jecxz
loope
or
or
add
sbb
mov
cmp
jne
mov
scas
ret
ds
mov
hlt
aam
push
sub
mov
int
cmovb
std
add
pop
mov
lods
sti
mov
add
retf
test
adc
ins
or
cdq
add
add
(bad)
or
cmc
shl
dec
fs
sub
and
sbb
mov
mov
cmp
jne
jle
mov
add
out
add
jo
or
push
and
push
add
mov
add
loopne
lods
paddsb
ret
and
scas
mov
ror
dec
pop
mov
add
dec
adc
xchg
add
or
xor
xchg
or
adc
push
mov
cmp
adc
mov
stos
jb
fdiv
or
ins
loopne
ror
es
xchg
add
mov
enter
xor
and
add
and
sub
test
inc
add
push
das
scas
fidivr
loop
adc
sbb
jb
jo
push
push
jne
jnp
stc
or
and
push
pop
(bad)
xchg
mov
xor
mov
jmp
ins
or
adc
in
movs
xor
and
fistp
test
jmp
adc
jecxz
cmc
scas
and
adc
sub
cmp
sub
cmp
clc
xor
and
repnz
sbb
inc
xor
sub
mov
inc
and
ins
dec
push
(bad)
sbb
repz
push
push
fadd
clc
pop
add
and
cmp
fild
je
inc
jp
jle
nop
pop
cli
add
mov
sub
cdq
jl
inc
inc
cmp
push
je
pop
js
sbb
adc
test
pop
fmul
push
test
jns
mov
aas
mov
adc
push
and
cmp
xchg
test
cwde
ja
out
and
sbb
loopne
int
xchg
and
fidivr
test
sbb
mov
loope
cmps
mov
pop
and
inc
repz
and
adc
shr
and
es
cmp
pcmpeqw
call
lahf
xor
and
rcl
dec
pop
fsubrp
sahf
outs
dec
inc
mov
add
or
add
jnp
push
neg
jne
popf
data16
push
push
loope
adc
dec
test
aaa
adc
xchg
sbb
loop
loop
push
xchg
fwait
pusha
and
pop
fiadd
xchg
xor
sbb
adc
test
fs
inc
mov
mov
les
cld
popf
mov
ja
and
xor
add
adc
mov
or
sbb
cmp
xor
push
shl
inc
cmp
nop
cmc
jmp
fisttp
push
nop
mov
pop
mov
mov
in
mov
mov
jne
push
rcl
cmp
mov
or
addr16
pop
cmc
lea
inc
lea
shl
push
xor
xor
and
xchg
add
call
enter
add
inc
ret
sar
xor
mov
jmp
in
cli
xchg
lods
ja
aam
inc
loope
sub
and
adc
mov
cmp
xchg
jne
int
mov
adc
push
mov
cmp
push
push
push
or
lahf
aas
add
sbb
test
test
jb
push
int3
ins
sub
adc
mov
outs
fist
fcom
cmp
icebp
inc
or
jns
xlat
xchg
pushf
add
fwait
push
dec
push
mov
in
inc
add
fcmove
in
sbb
sbb
in
and
inc
sbb
shl
inc
xchg
xchg
cwde
add
jne
adc
and
in
inc
jbe
add
sbb
in
push
sbb
sub
into
pop
loopne
add
xor
add
cmp
xor
dec
lahf
aas
ret
sbb
push
lods
(bad)
lahf
dec
pop
leave
push
dec
xchg
imul
mov
push
dec
pop
push
cmp
fstp
or
jmp
sbb
inc
mov
data16
mov
mov
ds
pop
pop
mov
adc
push
mov
pop
(bad)
and
loop
sbb
int3
(bad)
cmps
lock
sbb
xlat
pop
jbe
push
popf
add
push
mov
test
dec
imul
add
aam
mov
pop
add
or
nop
add
and
cmp
jl
ss
cmp
(bad)
adc
aas
mov
adc
cmp
sub
mov
xor
mov
push
rol
inc
nop
xlat
xor
nop
fisttp
sub
dec
sub
xchg
test
or
jmp
ss
enter
and
out
jns
push
cld
add
nop
(bad)
daa
sbb
adc
add
bound
sub
sub
daa
test
push
jmp
push
dec
mov
sub
aaa
add
loop
add
adc
call
ds
arpl
dec
jb
dec
cmp
mov
xchg
not
jge
in
jne
mov
and
data16
cmp
and
dec
push
pop
cmp
nop
inc
inc
scas
hlt
xchg
xor
(bad)
cli
mov
sbb
ret
cmc
sbb
xlat
cmp
push
dec
mov
push
push
push
pop
xlat
mov
jb
fucom
fidivr
ins
adc
inc
cs
add
jbe
ins
dec
scas
mov
jne
inc
imul
dec
jmp
add
mov
adc
addr16
mov
pop
je
cs
je
pop
lahf
push
push
pop
xchg
xchg
test
push
add
add
cmc
mov
minps
les
out
push
aaa
pop
cmp
push
adc
test
mov
adc
push
xor
je
or
outs
and
push
jle
ins
iret
data16
inc
sub
es
fst
sub
neg
push
not
jnp
cmp
jp
loop
adc
iret
jnp
fnstenv
(bad)
jae
mov
mov
push
stos
xchg
mov
add
leave
push
pop
sbb
sbb
or
dec
cs
or
adc
adc
push
pop
sbb
jg
pop
mov
gs
sbb
call
add
cmp
sbb
daa
inc
mov
add
inc
test
jmp
or
mov
pop
rol
lods
cmp
pop
xchg
xor
add
mov
test
inc
jne
(bad)
push
sub
mov
jmp
or
mov
or
lods
push
cmp
add
aaa
pop
or
aam
leave
or
or
sbb
jmp
es
and
clc
or
ds
enter
xchg
sub
cmp
shr
arpl
or
cmp
or
add
inc
ret
jmp
shr
inc
mov
and
mov
arpl
retf
mov
adc
mov
dec
xor
fdivr
ror
movs
loopne
pop
(bad)
pop
mov
pop
lea
adc
push
inc
sub
dec
sbb
cmp
or
and
sub
push
repnz
dec
or
and
inc
iret
jnp
inc
lahf
mov
test
sbb
or
pop
adc
push
or
call
cli
lds
xor
and
je
sbb
loopne
mov
das
jb
daa
outs
jo
adc
cmp
add
stos
in
pop
cmp
movs
xor
cmp
inc
push
fcomp
inc
dec
cld
mov
in
dec
jmp
adc
and
addr16
and
pop
push
cmp
imul
pop
mov
fisubr
sub
and
adc
xor
xchg
les
cmp
shr
add
jmp
add
fnstenv
push
rcl
int
add
add
mov
mov
add
inc
inc
lea
je
jmp
dec
cmp
in
(bad)
sub
(bad)
and
cmp
aaa
push
pop
fbld
mov
dec
fcmovbe
ins
ret
push
shl
xchg
inc
lea
repnz
fimul
add
add
out
fisubr
in
mov
cmp
rep
das
sub
sbb
jnp
fwait
std
je
or
add
add
or
add
aas
add
inc
and
or
or
jg
dec
loopne
cmp
push
rol
pushf
pop
cs
cmp
adc
fcomp
test
retf
adc
in
sub
sub
mov
cmp
loopne
cwde
daa
out
or
jo
std
test
pushf
add
jmp
out
out
daa
mov
adc
push
or
xor
adc
pop
add
cmp
pop
shl
aas
or
cwde
retf
jo
sar
mov
out
dec
cmp
in
or
dec
push
or
fistp
pop
xchg
test
rol
je
mov
jno
add
lods
and
inc
fst
and
cmc
scas
sbb
xor
push
mov
add
cmp
push
call
push
sub
add
mov
js
or
jno
or
pop
and
nop
call
sbb
jg
cmp
sbb
xor
pop
in
cmp
xor
fimul
cmp
cmp
mov
cmp
mov
test
icebp
inc
jmp
and
cmp
fst
jg
cs
jne
cmp
mov
loopne
packsswb
xchg
fcmovnb
mov
mov
jmp
popf
jbe
lock
fmul
push
rol
in
dec
lea
pop
sub
dec
jnp
and
or
push
push
jnp
add
ja
loope
cmps
mov
xchg
inc
mov
add
push
add
fcmovbe
sti
(bad)
leave
jmp
(bad)
jbe
push
mov
and
xor
sbb
inc
lods
adc
scas
movs
inc
jmp
ds
gs
mov
in
add
mov
outs
rcr
lods
sub
ret
and
ins
sbb
je
sbb
iret
mov
je
aas
sbb
ficomp
inc
sbb
fnsave
adc
ins
sbb
stos
loopne
jo
adc
cwde
mov
xchg
scas
push
pop
jl
adc
std
or
push
jp
ja
sub
(bad)
jecxz
xor
ret
pop
and
mov
cld
xchg
daa
in
push
push
sbb
loope
les
jne
(bad)
sub
std
add
neg
je
mov
into
jae
cld
mov
hlt
sub
add
push
ins
push
push
addr16
cwde
(bad)
mov
adc
fist
scas
jo
fbstp
fs
xor
push
mov
and
or
int3
add
jge
mov
push
push
imul
je
pop
jg
cmp
adc
inc
sbb
adc
cmovae
mov
adc
sub
test
pop
imul
xchg
or
pop
push
ror
sub
sub
inc
mov
verw
sbb
dec
xor
or
ins
rcl
or
add
movs
adc
retf
or
or
cli
ret
(bad)
test
jae
(bad)
cmp
(bad)
out
movs
loop
mov
or
cmp
mov
aad
rcl
xor
push
mov
cmp
cdq
mul
push
lods
jmp
stos
rcl
sub
aaa
imul
or
cmova
das
xor
rcr
pushf
lea
mov
mov
cli
ror
bound
adc
(bad)
mov
mov
les
xor
inc
dec
fld
outs
test
pop
mov
sub
sub
or
mov
in
or
sbb
adc
out
dec
mov
mov
les
fldcw
dec
adc
adc
cmp
les
dec
sub
mov
in
sbb
sbb
bnd
xor
push
fcom
aas
leave
sub
sub
imul
rol
jl
cdq
push
imul
and
movs
inc
sbb
and
cdq
xchg
sub
sub
xchg
sbb
xchg
cmp
or
dec
sub
mov
adc
jmp
inc
je
or
sub
and
daa
sub
cdq
adc
add
mov
dec
pop
int3
push
sub
sbb
mov
jne
xor
nop
jbe
sub
sub
hlt
jp
sub
test
or
retf
fwait
sub
or
sbb
add
fiadd
cmps
cmps
lock
mov
xchg
mov
push
lsl
aam
in
sbb
icebp
push
or
push
adc
add
sbb
xchg
ins
or
clc
push
ror
lods
adc
xor
sbb
jnp
data16
(bad)
(bad)
iret
pop
sbb
int3
je
inc
sbb
cmp
mov
mov
les
inc
mov
int3
sbb
xchg
sub
sub
add
aas
xchg
lock
inc
mov
loopne
sbb
or
cmps
sub
xor
adc
rol
ret
jo
inc
stos
push
(bad)
aam
sub
dec
or
out
test
push
inc
lahf
(bad)
lods
sbb
xor
stos
js
mov
pushf
loope
aad
adc
push
or
mov
(bad)
lea
or
dec
mov
jbe
ret
jo
nop
test
aad
inc
pop
adc
adc
inc
lods
sub
inc
push
xchg
cmp
or
call
std
adc
imul
and
push
inc
pushf
cld
jp
dec
call
cmp
(bad)
push
sar
sbb
rol
mov
cld
in
ins
mov
aaa
mov
xor
(bad)
cmp
and
clc
xor
cdq
jp
je
xchg
jecxz
mov
push
dec
push
sub
xor
out
ja
rcl
sti
test
cs
xor
dec
ret
stos
mov
jl
or
popf
pop
retf
dec
outs
movs
add
adc
test
(bad)
cli
mov
inc
sub
sbb
push
outs
les
pusha
and
cmp
jge
bound
sub
clc
dec
push
jle
mov
jg
and
or
lds
cmp
xor
add
push
hlt
xor
std
pop
fwait
push
je
mov
nop
cmp
jae
lahf
pop
daa
and
or
je
and
pushf
lahf
sbb
je
pop
sbb
dec
jmp
or
cmp
xor
scas
jo
sahf
mov
cmps
sar
dec
mov
inc
inc
push
call
ds
dec
or
xor
mov
xor
jne
cmp
mov
cmps
ret
sti
mov
aam
pop
(bad)
sti
push
sbb
test
ins
sub
mov
test
or
hlt
adc
mov
or
add
mov
aad
test
push
pop
scas
inc
sub
jno
test
mov
lahf
mov
sbb
cmp
pop
sar
js
mov
mov
cli
xor
lds
xchg
outs
lods
and
push
dec
lea
cmp
je
jmp
test
and
ds
sub
sbb
(bad)
adc
add
xor
push
movd
sub
in
jne
nop
popa
and
push
dec
jno
ss
cmps
xchg
frstor
mov
imul
adc
fisttp
pusha
inc
adc
outs
int
jecxz
dec
pop
fimul
mov
test
lods
add
mov
adc
test
pop
arpl
(bad)
rcr
mov
mov
popf
jne
add
pop
call
xor
mov
add
popa
sbb
pop
jl
xchg
inc
jl
fdiv
or
das
rcr
pop
shr
adc
add
ror
or
and
rol
pop
and
lods
add
jl
mov
(bad)
(bad)
xchg
cmp
int3
mov
dec
mov
outs
addr16
shl
add
xor
xor
inc
dec
mov
stos
push
dec
fistp
(bad)
adc
xor
pop
push
or
inc
inc
fmul
sbb
rcl
sub
(bad)
or
shl
fbld
adc
(bad)
mov
pop
push
outs
adc
adc
fmul
les
aad
cmp
ja
jb
add
outs
(bad)
inc
inc
jmp
rcl
dec
mov
outs
mov
pop
pop
inc
test
or
ror
mov
pop
sub
inc
jne
or
sahf
mov
adc
dec
cmp
aaa
sub
rcl
retf
jno
xor
cli
fbstp
push
fstp
inc
or
(bad)
add
fidiv
aad
sbb
dec
adc
ret
shl
cli
jno
inc
dec
add
jo
and
sub
or
dec
pop
pusha
pop
ss
push
test
or
call
add
iret
adc
inc
gs
loopne
or
pop
mov
dec
mov
pop
clc
xor
push
add
sbb
xor
inc
sub
pop
test
ins
push
test
xchg
mov
in
out
push
sbb
jge
sbb
and
and
out
mov
fcomp
add
test
jg
imul
mov
outs
jl
push
add
mov
cmp
push
add
or
xchg
int
mov
sar
call
adc
pop
cld
and
add
ja
adc
xchg
dec
push
sbb
pop
or
dec
xor
inc
call
aas
or
xor
adc
inc
push
pop
push
clc
fcmovnb
and
sar
dec
xchg
jo
cmps
xchg
cs
mov
rcr
sbb
jne
or
add
dec
jb
inc
or
sub
push
add
cmps
or
ja
sbb
mov
pop
adc
mov
inc
test
fadd
pusha
stc
push
movs
xor
push
push
js
outs
jl
or
ret
sub
mov
inc
add
xor
xchg
sub
pop
cli
ja
adc
cmp
adc
mov
sub
adc
dec
ja
pop
ja
dec
fcom
add
push
sub
pusha
mov
movs
ins
xchg
add
inc
or
dec
add
sub
adc
inc
call
push
es
or
or
xor
out
jne
push
push
cmp
inc
adc
ins
xor
adc
pop
cmps
mov
loop
sbb
js
lods
xor
mov
rcr
ins
sub
movs
jb
xor
retf
in
xor
pop
dec
sbb
sbb
mov
inc
cld
adc
(bad)
cmovbe
or
repnz
mov
pop
push
retf
dec
ds
add
jmp
add
jge
inc
jle
inc
adc
add
mov
inc
inc
ins
test
sbb
sbb
sub
mov
mov
ret
fmul
nop
(bad)
fsub
push
push
sbb
or
sbb
sub
fisubr
loop
movs
jp
loopne
adc
mov
in
(bad)
xor
xchg
add
(bad)
inc
adc
ins
mov
jne
dec
aam
jmp
push
mov
push
dec
dec
push
jl
sbb
imul
and
sbb
sbb
sub
repz
jb
je
and
out
lods
sub
pop
test
imul
dec
cmp
ja
or
jne
pop
and
add
push
cwde
and
sahf
fstp
loopne
pop
inc
dec
add
pop
mov
or
(bad)
xchg
cmp
sbb
rol
inc
fmul
dec
mov
jb
sbb
out
push
dec
xor
adc
ja
cmc
xchg
inc
pop
pop
and
mov
fmul
sbb
das
mov
inc
out
adc
rcr
push
and
dec
cmp
or
mov
push
xchg
pusha
and
xchg
call
adc
rol
aaa
push
xor
(bad)
jnp
dec
je
ror
push
push
adc
sub
push
out
frstor
push
into
mov
dec
aaa
loop
xor
push
sub
test
sahf
cmps
cld
and
clc
mov
ror
fnsave
fld
cmovbe
sub
mov
clc
adc
sbb
aam
cmp
ret
sbb
stc
add
mov
xor
sub
and
inc
ds
pop
imul
mov
mov
dec
push
xor
or
dec
cmp
pop
adc
dec
ret
xor
lock
push
xchg
adc
sub
push
add
lods
daa
nop
xchg
icebp
xchg
push
jbe
outs
mov
int3
mov
xchg
xchg
adc
(bad)
ja
adc
aas
clc
fistp
bound
or
jne
enter
xor
jne
adc
jecxz
aas
add
inc
mov
jg
in
cmps
(bad)
fsub
push
int
loopne
in
mov
push
adc
mov
jl
cmp
mov
ret
mov
add
fsubr
mov
jl
adc
lods
push
mov
jb
mov
test
mov
and
sbb
imul
and
or
dec
pop
jo
ffreep
scas
sahf
inc
add
pop
mov
sbb
xchg
push
push
xor
ds
dec
or
xor
inc
ins
jb
dec
push
sbb
ds
push
fiadd
inc
sbb
(bad)
pop
sub
sub
dec
pusha
xchg
jo
in
repz
cmc
fwait
ret
mov
pusha
dec
mov
add
cmp
retf
and
cli
add
or
outs
pop
inc
add
pusha
inc
adc
xor
cmp
mov
pop
pop
push
push
or
imul
sbb
imul
cmp
push
push
je
(bad)
adc
pop
scas
and
jno
js
mov
sbb
js
sbb
mov
iret
adc
add
js
cdq
jo
int
push
sub
mov
cld
js
mov
add
leave
sahf
dec
int3
push
sbb
rol
add
dec
pop
fs
mov
fdiv
fisubr
cmc
or
add
xchg
xor
adc
push
sbb
inc
xor
and
pop
fsub
and
mov
xor
sbb
sar
mov
mov
mov
dec
ins
push
mov
movs
shl
xor
inc
and
dec
push
push
pop
mov
fld
adc
es
fisub
mov
shl
cmp
sub
mov
mov
dec
or
jle
call
cmp
dec
xor
imul
push
movs
ins
aaa
sbb
nop
pop
mov
cmp
jno
or
sbb
and
test
pushf
inc
fiadd
mov
addr16
push
or
lods
and
sbb
sub
inc
test
jnp
ins
cs
pop
fs
enter
js
and
jle
bound
mov
ret
inc
or
sub
(bad)
or
and
jo
or
xor
call
mov
ins
fcomp
add
outs
sub
inc
inc
lea
inc
loope
mov
pop
lahf
add
nop
cmp
xchg
(bad)
xor
movs
sbb
push
add
stc
add
sbb
aaa
add
(bad)
leave
push
push
xor
lock
sbb
inc
pop
push
test
fistp
inc
mov
call
outs
push
nop
movs
and
xchg
cmp
mov
jg
ret
sub
lahf
add
addr16
jecxz
sbb
(bad)
mov
inc
dec
(bad)
mov
fidiv
adc
dec
or
out
(bad)
repz
sub
(bad)
mov
mov
add
push
push
push
mov
push
xchg
(bad)
jo
(bad)
call
adc
fld
push
sbb
mov
call
jp
sti
cmp
adc
jno
repz
pop
add
retf
xor
(bad)
and
shl
loopne
sbb
stc
shl
sbb
iret
sti
dec
add
pop
jbe
push
and
or
inc
lahf
inc
stos
out
dec
cmp
out
mov
jecxz
inc
fisttp
retf
fsubrp
add
pop
mov
ins
push
cmp
push
rcr
movs
mov
and
cs
adc
and
sub
jne
xor
lea
ja
sub
or
movs
push
push
fist
mov
retf
ja
fstp
popa
xchg
in
mov
push
push
pop
sub
fistp
mov
jbe
mov
push
(bad)
sub
inc
cmp
fisttp
cs
sub
cli
lahf
jno
enter
and
(bad)
(bad)
imul
xor
mov
or
outs
mov
mov
cmp
inc
clc
dec
adc
ss
jne
sbb
ret
cmp
push
fst
mov
adc
adc
inc
lock
inc
xchg
call
xchg
push
pop
xor
fadd
sub
mov
sbb
xchg
xlat
movs
lock
fdivr
ins
pop
lahf
data16
mov
adc
sub
imul
int3
ins
sub
popf
cli
add
out
fbld
mov
mov
or
jb
stc
imul
or
push
sbb
test
and
cmp
pop
mov
sbb
xor
and
loope
jge
add
xor
or
test
sbb
rcr
mov
mov
xor
ds
cmp
arpl
push
rcl
mov
in
ins
push
sub
push
push
or
push
adc
push
movs
(bad)
and
lea
int
movs
pop
xor
or
scas
pop
adc
sub
inc
sub
ret
loope
lock
jnp
mov
adc
mov
adc
push
inc
ret
inc
xlat
sbb
test
je
push
and
inc
ret
(bad)
dec
loop
jl
pop
je
int3
mov
cmc
sbb
cmp
sub
dec
xor
sbb
movs
dec
cmp
inc
js
dec
repz
fst
mov
retf
and
nop
je
sub
or
cmp
mov
(bad)
movs
popa
test
push
sub
inc
ret
pop
les
inc
jge
xchg
cmp
sbb
pop
adc
add
push
lock
inc
cld
leave
cmp
jns
xchg
mov
lods
lea
data16
add
mov
jae
xor
dec
dec
sub
retf
push
push
xchg
(bad)
cld
pop
jno
mov
push
push
ins
adc
xor
adc
pop
inc
hlt
push
push
(bad)
or
dec
test
inc
pop
and
pop
pop
and
sbb
in
sti
sub
adc
ret
dec
push
sti
and
fcom
cmp
std
push
test
enter
shl
pop
inc
jno
pop
push
(bad)
push
pop
inc
sbb
cmp
xchg
mov
ja
inc
sbb
mov
imul
fwait
jnp
pop
mov
jo
sbb
out
push
jae
bound
push
sar
push
je
inc
or
push
call
ret
sbb
jne
push
mov
(bad)
mov
or
cwde
mov
push
add
jl
(bad)
push
sbb
pop
mov
(bad)
test
lods
jge
popa
lds
icebp
test
retf
push
shl
enter
jne
sbb
imul
add
or
pop
in
bound
lds
fdivr
sbb
and
test
sub
inc
sub
(bad)
fcomp
adc
xchg
cld
and
mov
push
jne
test
test
jns
dec
cmp
add
xlat
and
and
jns
or
sti
add
jbe
pop
adc
push
sbb
jb
into
jns
xchg
xchg
(bad)
(bad)
cld
test
pop
in
pop
enter
clc
inc
jge
cmp
fstp
add
jns
sub
push
push
push
pop
in
dec
je
jecxz
in
hlt
cmc
neg
push
test
or
inc
inc
mov
and
push
push
jns
dec
cld
jne
push
or
adc
jns
fwait
(bad)
retf
je
or
in
hlt
cmc
lea
shl
mov
cld
pop
clc
in
je
cmp
sbb
leave
shl
lods
xlat
lock
adc
adc
rol
ret
push
adc
mov
outs
and
adc
movs
add
gs
adc
loope
dec
jecxz
mov
mov
das
test
xor
popa
dec
sbb
frstor
cmp
bound
push
push
push
mov
gs
lea
jo
jmp
inc
dec
cmps
mov
out
and
dec
pop
mov
inc
or
imul
xor
mov
popa
xor
and
adc
ret
cmp
nop/reserved
push
cmp
add
pop
push
or
add
(bad)
retf
jmp
and
cmp
push
jb
rol
aaa
adc
pop
dec
push
call
rcl
js
movs
xchg
ret
mov
hlt
mov
int3
or
jb
push
std
aas
dec
add
mov
mov
push
jge
or
and
sahf
sbb
xchg
dec
dec
sbb
cmp
sbb
and
mov
mov
xor
add
das
popa
pusha
es
push
sbb
mov
sub
xor
out
and
adc
(bad)
pop
ret
into
scas
sahf
icebp
je
mov
dec
inc
sbb
mov
pop
xor
inc
fcom
jecxz
mov
mov
test
xor
(bad)
pop
lods
xor
add
popa
dec
(bad)
sbb
cmp
dec
push
adc
and
je
dec
and
add
pop
les
movs
push
ret
sub
call
push
fist
push
pushf
push
mov
loop
fsubr
mov
adc
shr
or
pop
push
ficomp
mov
push
mov
adc
daa
pusha
inc
push
push
clc
or
int
(bad)
xchg
or
pop
sbb
sub
jecxz
xor
push
nop
cmp
and
pop
push
test
lds
dec
xor
mov
pop
jae
xor
outs
sahf
retf
fs
sub
arpl
sbb
push
and
pop
cmp
adc
cmp
and
mov
sbb
xor
and
repnz
sub
and
adc
sbb
inc
mov
sbb
(bad)
stc
pop
and
jo
es
mov
and
push
jae
jnp
in
push
push
aaa
sti
adc
add
inc
and
(bad)
and
and
mov
rol
and
aam
lock
pusha
cmp
in
and
push
push
mul
out
add
frstor
pop
or
mov
jmp
add
sub
movs
ins
push
mov
inc
pop
daa
fwait
push
or
adc
sar
adc
ja
or
pop
mov
mov
inc
rcr
adc
js
int
push
sub
push
push
mov
and
cmp
jne
push
test
clc
lods
or
add
adc
lock
push
push
fisubr
out
add
shl
xchg
inc
into
push
jbe
pushf
pop
xchg
icebp
aaa
mov
inc
cwde
mul
adc
ret
pop
inc
sbb
(bad)
inc
leave
lock
hlt
dec
call
xor
test
loope
inc
and
pop
push
and
push
gs
test
lea
leave
cwde
push
and
fild
rol
dec
scas
std
dec
pop
fnstsw
inc
add
cs
loopne
add
xchg
mov
xchg
push
push
pop
ret
sahf
and
in
pop
test
sub
rcr
pop
js
adc
or
xchg
dec
add
adc
rcl
add
adc
push
mov
jp
ror
sub
jg
sub
in
cmp
sub
je
rcl
mov
je
jbe
ret
xchg
in
retf
add
ret
test
fisubr
icebp
fiadd
dec
dec
jne
push
adc
add
or
es
js
cmp
pop
loopne
add
les
jne
or
xchg
cld
loopne
es
xor
add
aad
(bad)
and
or
enter
sub
pop
add
adc
fwait
xchg
mov
add
ret
add
lahf
add
int
mov
mov
lea
and
inc
mov
inc
lea
push
stos
mov
pop
mov
test
push
lock
int
call
xor
add
push
aaa
inc
out
mov
es
dec
jmp
sbb
push
adc
push
add
lea
loop
lock
and
xor
lods
dec
push
push
lods
and
sbb
sub
add
cmp
ja
pop
and
into
sbb
popf
mov
sub
cli
mov
outs
or
push
push
and
fbstp
dec
inc
dec
cmps
pusha
or
out
add
sbb
loopne
push
movs
sub
enter
fs
mov
jecxz
sub
inc
adc
shr
sub
fwait
pop
mov
ja
in
jle
loop
add
pop
jl
js
ret
push
retf
jl
xor
cmp
mov
add
sbb
out
inc
repz
pop
cmp
jo
cmp
sar
jbe
adc
mov
lods
lods
add
lock
mov
aam
clc
dec
adc
loopne
xor
gs
pop
and
mov
push
jo
mov
mov
and
cmp
add
ins
sbb
sbb
add
jae
dec
adc
push
xchg
push
xchg
dec
inc
jbe
(bad)
mov
adc
ds
adc
ret
xor
adc
add
shl
in
dec
and
inc
imul
test
cmp
add
mov
pop
and
fadd
in
call
cmp
jb
add
ins
loope
pop
mov
scas
and
mov
add
xchg
fbstp
add
(bad)
add
xchg
pop
and
or
adc
add
push
(bad)
or
pop
pop
dec
popa
add
sub
sbb
aam
fist
xchg
call
cmp
mov
jnp
dec
cmp
retf
inc
xor
dec
inc
add
sub
push
push
and
fs
retf
cmovb
jno
push
and
call
or
push
pop
inc
and
or
push
sub
xor
dec
add
aam
push
into
xchg
jle
dec
cmp
mov
cmps
cmps
cmp
aas
adc
in
jg
shl
inc
push
neg
pop
test
and
imul
loopne
dec
jae
or
xor
or
push
mov
shr
cmp
or
rcl
pop
add
ficomp
pop
sub
add
and
sbb
call
adc
lods
and
inc
sbb
ja
retf
int3
adc
or
cmps
jne
cmp
add
add
xlat
xor
push
sub
adc
and
lods
xor
or
sub
adc
xchg
test
shl
or
out
sub
xchg
fnstenv
or
jge
xchg
inc
and
inc
dec
pop
push
xor
sub
movs
add
mov
outs
jp
stos
sti
lahf
mov
sbb
cmp
test
add
pop
adc
mov
ins
mov
adc
or
gs
outs
ret
mov
mov
sbb
(bad)
adc
push
fisub
push
jg
ins
adc
mov
rol
aaa
test
inc
mov
xchg
push
mov
inc
fs
out
fisub
cmp
sbb
jmp
lahf
test
jae
pop
inc
cmp
dec
sub
and
inc
add
sub
inc
cmp
cmp
adc
call
xor
adc
not
and
or
cmp
xor
je
sub
xor
inc
mov
or
lods
stos
ss
xlat
adc
or
sbb
mov
clc
ja
xlat
mov
push
inc
sbb
inc
or
nop
push
mov
daa
cwde
xor
mov
call
push
pusha
bound
daa
dec
mov
jecxz
add
add
adc
xlat
jecxz
ror
ins
add
push
pop
into
inc
mov
in
jecxz
inc
cmp
pop
nop
cmp
xor
jnp
(bad)
je
pusha
add
repnz
aad
and
inc
jo
sbb
push
sub
mov
sahf
push
(bad)
and
jmp
das
push
cmp
mov
or
mov
add
sbb
adc
push
adc
in
dec
dec
test
and
inc
mov
mov
jmp
or
(bad)
jne
cmp
fld
shl
pop
adc
iret
jne
mov
gs
cmp
pop
jl
add
sbb
lea
push
mov
mov
sbb
mov
jmp
xchg
add
dec
js
mov
xlat
inc
add
hlt
out
jmp
sar
cmp
add
(bad)
cmps
ret
outs
js
dec
rcl
sub
mov
push
sub
lea
add
test
push
or
and
scas
aam
sbb
inc
int3
div
pop
push
dec
dec
sub
dec
sub
push
outs
inc
dec
pop
or
mov
hlt
pusha
or
push
cmp
xor
xor
outs
lahf
retf
sub
and
sub
push
cs
outs
fsubp
stos
je
cmp
push
js
add
or
cmps
cmp
mov
mov
mov
rol
addr16
mov
cmp
cwde
add
sar
fs
mov
cmp
fiadd
sti
imul
sub
pushw
push
clc
retf
dec
add
rol
cli
(bad)
mov
retf
jo
cmp
test
add
cmp
ret
int
or
ret
loopne
sahf
retf
push
push
stos
lods
mov
es
and
sbb
inc
push
mov
jb
cmp
ja
fst
pop
or
push
adc
add
ret
and
pop
and
and
mov
dec
or
fisttp
push
sub
push
push
sub
or
or
or
leave
lea
sub
outs
mov
or
mov
mov
mov
mov
and
(bad)
leave
dec
add
test
mov
xchg
xor
xchg
lock
add
jecxz
pop
dec
cwde
out
mov
and
jg
and
inc
sub
mov
mov
jns
push
fdiv
enter
sbb
push
inc
xor
jg
bnd
retf
xor
or
cmp
pusha
lods
aam
mov
sub
or
rol
adc
pop
xchg
pop
push
xor
xor
sbb
xchg
and
mov
cmp
sbb
mov
pop
fst
push
loop
add
add
loope
rol
push
mov
pop
aaa
inc
mov
inc
mov
xlat
sub
sbb
add
push
loop
sbb
push
xor
inc
fcmovnb
mov
pop
sbb
mov
in
lds
mov
cwde
aas
lods
test
xchg
cwde
popa
jecxz
mov
and
sub
jno
and
or
loop
mov
pop
pop
ret
mov
or
inc
cmps
mov
lea
mov
add
cmps
rol
jbe
adc
scas
xor
fstp
sub
jae
xor
add
call
dec
ret
call
push
cmp
(bad)
push
or
test
and
mov
add
cld
add
jnp
sbb
pop
mov
scas
sbb
test
xor
ins
call
lock
retf
jecxz
mov
loopne
lahf
das
adc
std
add
adc
stc
sub
test
fadd
inc
pop
pop
loope
call
or
xchg
xor
mov
sub
and
dec
ror
out
push
xlat
mov
or
push
les
pop
test
and
jmp
cmp
adc
nop
jg
(bad)
mov
imul
inc
adc
clc
jbe
mov
xor
xor
ret
ins
or
sar
sub
adc
je
int3
in
push
or
push
or
pop
fwait
js
jo
or
mov
mov
sub
or
sub
cdq
dec
repnz
push
jo
jmp
ror
mov
push
test
jo
test
lea
in
xor
or
adc
fwait
mov
pushf
mov
push
js
mov
add
pop
inc
adc
ss
fs
movs
xor
cmp
imul
aam
or
in
adc
xchg
pop
bound
jmp
in
sub
lock
popa
inc
fldcw
or
fnclex
or
call
popa
sub
popa
imul
sub
ja
adc
mov
xchg
jb
mov
adc
ret
mov
sbb
mov
jle
or
add
adc
je
sbb
dec
fwait
adc
xor
shl
out
div
or
inc
pop
xor
pusha
mov
jne
movs
test
adc
xor
and
pop
jge
dec
dec
adc
jmp
add
pop
inc
ret
ins
xor
xor
ins
sub
xchg
ins
xor
add
out
jbe
xchg
rcl
div
xor
jg
sbb
movs
imul
dec
xchg
pushf
mov
outs
xor
mov
fisub
push
jnp
dec
mov
(bad)
fdivr
pop
and
dec
jl
ds
add
inc
test
aas
shl
xchg
pop
xchg
or
jo
dec
push
aaa
in
inc
mov
xchg
or
int
inc
inc
mov
fimul
sbb
and
sbb
repnz
icebp
add
jb
sbb
ret
add
fwait
xchg
movs
mov
inc
sbb
stc
loopne
(bad)
rol
dec
mov
lds
mov
add
aam
dec
mul
retf
add
mov
push
and
inc
or
add
add
add
addr16
(bad)
jl
pop
pop
iret
dec
pusha
jae
sub
dec
push
popf
push
jecxz
movs
jbe
xor
call
scas
popf
adc
adc
add
add
xchg
stos
or
ret
cmp
in
nop
fidivr
xchg
jo
pop
retf
inc
pushf
or
cmps
and
jne
add
fucomip
adc
or
test
mov
jg
jnp
cmp
fadd
pop
leave
je
adc
mov
sub
imul
inc
cs
pusha
push
and
adc
jns
rcl
push
or
cmps
sbb
push
or
nop
push
pusha
hlt
add
xchg
sub
loope
mov
pusha
fucomp
sub
pop
repnz
gs
sbb
jns
sub
cmp
dec
pop
xor
and
sbb
je
add
pop
push
and
bound
adc
pusha
xor
push
xchg
(bad)
cmp
inc
es
and
int
add
mov
jb
adc
or
inc
jne
cld
push
aas
mov
cmp
add
sbb
sub
adc
adc
pop
imul
pop
shl
in
mov
push
enter
adc
pop
dec
js
sub
imul
in
cwde
inc
(bad)
enter
sub
xor
aas
push
shl
jmp
pop
dec
push
mov
cmps
ins
and
add
jg
ret
or
mov
movs
test
cmps
std
call
xchg
or
lahf
pop
cmp
outs
push
mov
and
push
xor
xchg
jo
dec
sbb
jno
sbb
and
inc
xchg
outs
add
call
out
pop
sbb
cli
mov
cmp
retf
pop
sub
push
cmp
rol
adc
lods
dec
call
cmp
movs
xchg
mov
cdq
dec
ret
rcl
pushf
mov
jnp
xor
mov
add
cmp
push
mov
loop
lock
fistp
adc
inc
xchg
movs
cwde
mov
dec
in
sbb
cmps
mov
dec
adc
repnz
gs
and
push
dec
add
push
mov
test
lods
hlt
and
mov
(bad)
push
popa
and
dec
retf
adc
xchg
loop
cwde
xchg
fiadd
push
and
mov
nop
pop
mov
mov
sbb
sbb
shl
and
jne
cmp
sub
sahf
mov
daa
pop
jb
mov
xchg
push
mov
xchg
xor
add
pop
daa
cmp
xchg
mov
or
mov
(bad)
push
js
cmp
push
push
sbb
add
outs
(bad)
out
shr
ja
cmp
shl
(bad)
aam
mov
cmp
sub
mov
(bad)
retf
test
ins
mov
gs
cmp
es
dec
xor
xchg
mov
ficom
retf
push
mov
inc
rep
xor
sub
and
dec
push
daa
dec
pop
xor
mov
mov
xchg
adc
and
and
or
nop
or
or
icebp
pusha
pop
adc
or
imul
sub
xchg
push
sub
jecxz
loop
push
jb
and
pop
push
push
xchg
pop
pop
scas
adc
mov
adc
or
xor
inc
leave
and
xchg
arpl
fs
add
lahf
pop
push
mov
mov
jl
add
fs
je
inc
in
mov
sub
sub
adc
cmp
dec
and
add
aas
or
es
adc
enter
sbb
enter
and
xor
repnz
xor
add
inc
pop
or
push
cmp
nop
dec
dec
push
push
cmp
nop
inc
inc
pop
pusha
in
inc
push
fs
cmp
add
mov
sub
stos
cmp
lahf
push
sar
dec
je
test
stos
lea
mov
pop
pushf
sar
inc
shl
sbb
add
pop
or
cmps
fadd
hlt
faddp
stc
sbb
xor
pop
and
pop
adc
cwde
imul
xor
sub
push
sub
jb
int
inc
inc
inc
dec
xor
xor
inc
inc
or
inc
ja
and
jecxz
mov
jl
xchg
mov
pop
pop
mov
sbb
rcl
inc
inc
inc
inc
and
sub
and
jg
dec
add
mov
mov
jns
sbb
add
xor
mov
aam
jno
jg
mov
rcr
pop
cmps
add
and
lods
dec
and
(bad)
sub
in
mov
xor
icebp
dec
xchg
js
sysexit
add
pop
jle
xor
pop
(bad)
jmp
xor
pop
push
push
imul
push
xchg
sbb
add
xor
sub
mov
or
or
sub
sbb
int
fdivr
add
pop
jne
dec
and
add
cwde
cli
add
dec
hlt
mov
push
aaa
cmp
daa
out
sar
imul
jle
jmp
jo
add
xlat
iret
or
mov
mov
add
pusha
mov
cmp
or
xchg
pop
rcl
push
inc
sbb
sub
js
loopne
cli
dec
jp
add
mov
psrlq
sub
(bad)
cmp
aas
test
pop
ret
sbb
add
add
movs
sbb
xor
pushf
mov
push
xchg
dec
call
bound
aad
xchg
jne
xor
pop
jg
leave
pop
jmp
inc
pop
adc
mov
inc
cmp
daa
jne
dec
sub
aaa
push
jle
not
adc
adc
and
ret
mov
mov
popa
fild
add
adc
push
add
ret
mov
push
push
add
and
in
dec
adc
dec
popa
cmps
jmp
fldl2t
adc
fidivr
add
dec
jb
mov
cmps
dec
imul
mov
sub
cmp
cmp
and
je
inc
pop
loope
in
mov
push
int
retf
xor
xor
push
mov
adc
fst
rcl
adc
cmp
daa
sub
mov
sub
jmp
mov
or
dec
push
ret
or
cmp
lock
inc
mov
aam
adc
adc
ss
dec
shr
ret
lea
sar
add
into
call
(bad)
enter
inc
ja
mov
imul
fisubr
pop
jnp
mov
jnp
push
jns
ficomp
add
mov
fmul
outs
test
mov
pop
push
dec
ret
data16
xor
jbe
push
in
rcl
loopne
sbb
xchg
dec
leave
outs
ret
xor
sbb
xchg
mov
(bad)
ficom
es
sbb
mov
sbb
add
inc
loope
xchg
mov
and
adc
jmp
xchg
nop
jge
ret
enter
adc
fstp
test
xchg
xor
nop
imul
sub
inc
daa
add
mov
push
push
dec
cmc
cmp
jb
xchg
rcl
xlat
test
imul
cmp
div
inc
push
sbb
cmc
mov
and
xor
ret
mov
or
jecxz
mov
je
inc
mov
cmc
jb
jmp
inc
mov
jns
pop
mov
push
shl
add
mov
mov
sub
dec
sbb
and
cmp
cmc
sbb
mov
push
pop
mov
or
aad
dec
sbb
out
fimul
pusha
fisubr
int3
mov
ins
mov
xor
pushf
loope
stc
mov
lea
lock
pop
mov
repnz
add
sar
jae
sub
push
push
mov
mov
sbb
push
or
inc
sub
sub
pop
pop
cs
xchg
sbb
scas
pop
xchg
mov
adc
jp
retf
pop
cmp
pop
adc
and
int
adc
push
test
cmp
nop
cmp
push
jg
mov
pop
jae
sbb
xchg
mov
shl
jge
and
cdq
mov
lea
inc
add
and
sub
sub
aaa
inc
xor
adc
fmul
jne
shl
pusha
popf
inc
add
cmps
popa
test
test
lods
and
and
inc
or
or
xchg
ret
cmp
mov
add
mov
sbb
mov
push
int
sub
pusha
aad
aaa
xchg
pusha
mov
mov
je
fxch
(bad)
fdiv
mov
fld
add
ret
pop
pop
ins
ror
call
shl
inc
stos
gs
push
leave
push
pusha
cdq
adc
iret
arpl
es
add
jne
(bad)
adc
add
sbb
loope
push
in
pop
(bad)
cmp
sub
jecxz
outs
cmps
push
push
in
fsubr
push
adc
add
das
fwait
sbb
adc
adc
add
lods
add
test
in
gs
imul
mov
iret
pop
arpl
mov
loop
add
push
ret
inc
loope
popa
dec
push
jp
les
mov
sbb
add
fcom
add
ja
and
xor
mov
jge
jp
push
sahf
inc
sti
fsubr
movs
adc
aaa
xchg
sub
push
cli
cs
adc
add
ds
cmp
div
pop
pop
adc
fsubrp
mov
push
mov
ret
out
fiadd
add
add
nop
mov
push
mov
or
mov
jb
push
dec
nop
cmp
or
mov
mov
push
retf
mov
fadd
test
adc
ret
or
push
cmp
or
dec
inc
stos
ret
and
ror
ss
ds
add
or
inc
sub
imul
sbb
or
inc
or
cmps
out
or
(bad)
sbb
dec
mov
mov
ins
jge
cvttps2pi
lock
nop
add
and
push
jge
push
cmp
arpl
add
push
push
sbb
dec
pop
cmp
inc
xor
adc
fxam
sbb
cmp
inc
xor
cmp
aaa
(bad)
out
adc
sub
in
xchg
jle
push
mov
or
sub
inc
push
push
and
sbb
add
call
mov
and
inc
jmp
sbb
or
mov
adc
dec
sub
and
dec
add
or
inc
int
mov
push
popa
into
fisttp
sub
stc
jno
push
fwait
imul
add
sbb
sub
cmp
inc
sbb
shr
jne
and
repnz
mov
call
add
xor
cmps
das
test
pop
pop
rcr
adc
ret
aas
dec
fs
psraw
jo
or
adc
lock
jnp
pop
cmp
mov
adc
icebp
inc
les
in
sbb
push
mov
(bad)
out
in
mov
adc
std
adc
scas
dec
popf
mov
movzx
inc
sub
mov
not
and
sbb
aad
sub
cmp
sbb
add
and
pop
inc
mov
inc
xchg
cmc
call
lods
sbb
shl
test
into
xor
inc
xor
add
mov
ins
or
in
mov
int3
add
xlat
sub
add
jge
outs
sbb
add
and
inc
adc
fmul
push
push
stos
add
or
loope
inc
sub
jmp
push
fbld
sub
mov
sti
loope
int3
add
sub
lea
or
dec
dec
mov
jle
inc
jb
and
shl
fwait
jbe
pop
xchg
add
add
dec
dec
inc
or
add
outs
and
loopne
sbb
push
add
mov
mov
push
cmps
ret
cmp
imul
fmul
xor
pop
jne
or
sbb
cmp
mov
mov
movs
xlat
add
adc
fidivr
fbld
stos
cmp
sub
push
sbb
cli
add
fcom
dec
and
add
and
sbb
jle
mov
das
aad
sbb
dec
retf
jb
ret
add
inc
sbb
lods
mov
mov
test
lock
cmp
inc
add
cmp
hlt
pusha
push
fwait
mov
ja
xor
or
shl
push
and
pushf
cmp
adc
retf
pusha
adc
rcl
sbb
mov
push
xor
cli
pusha
hlt
push
es
out
add
movsx
mov
jp
data16
inc
sub
outs
mov
adc
sbb
fist
cmp
pusha
pop
add
push
cmps
mov
mov
loop
pop
inc
mov
and
mov
mov
pop
lahf
pusha
rol
or
push
cdq
aam
and
or
and
retf
not
pop
(bad)
dec
ret
or
add
add
fcomip
cmp
inc
push
mov
call
and
mov
adc
sahf
ins
dec
and
inc
cmp
sar
(bad)
push
xchg
enter
and
add
jnp
dec
cmp
cmp
add
ror
add
and
mov
retf
into
dec
(bad)
sub
fld
retf
or
(bad)
jecxz
sub
jnp
inc
add
cmp
fcmove
retf
(bad)
in
ror
shr
xchg
xor
ins
repnz
adc
test
cmp
lea
cmp
ss
repnz
add
or
add
cwde
sub
leave
repz
repnz
(bad)
scas
test
iret
dec
add
ror
in
shr
(bad)
out
mov
xlat
pop
mov
mov
iret
inc
test
outs
push
mov
jnp
and
mov
scas
xchg
jno
std
cdq
jge
pop
ret
push
mov
out
mov
not
out
loop
pop
fcom
bnd
mov
cmps
pop
mov
dec
addr16
or
dec
outs
repz
add
addr16
cld
(bad)
and
mov
pop
ror
or
test
loopne
or
fiadd
pop
mov
mov
push
test
ret
mov
jle
shl
ss
inc
mov
rol
scas
aad
sub
ret
push
pop
pop
or
jmp
sahf
or
(bad)
mov
imul
int
fmul
cmp
iret
rcr
das
(bad)
(bad)
adc
ds
fistp
push
adc
add
into
and
mov
jnp
mov
jbe
aad
enter
iret
addr16
in
and
repz
loope
inc
loop
cwde
cmp
iret
call
aaa
add
jg
push
ins
pop
add
lea
(bad)
dec
bnd
out
mov
xchg
add
idiv
daa
(bad)
adc
inc
inc
int
pop
jno
iret
not
retf
jb
fs
call
ret
lea
faddp
xlat
push
cs
cmp
jle
out
movs
(bad)
or
pop
lea
mov
icebp
loop
int3
add
enter
nop
dec
xlat
popa
test
(bad)
(bad)
loope
int3
ja
push
xor
mov
aaa
xor
add
pusha
add
inc
mov
xchg
add
repnz
or
lock
or
mov
and
(bad)
sub
popf
ins
mov
mov
lods
xor
xor
cmp
std
xchg
fsubr
cmc
xchg
jp
jmp
iret
faddp
fisub
dec
xor
mov
add
lea
mov
mov
test
pop
jmp
(bad)
in
add
and
test
rcr
iret
out
aam
mov
inc
test
jl
add
ror
xor
into
(bad)
(bad)
lods
bound
rcl
fldenv
scas
retf
add
std
cdq
sbb
icebp
dec
sub
jl
pop
loope
data16
pop
and
lods
les
sub
mov
aaa
sahf
and
push
or
iret
sbb
cmp
ret
idiv
fwait
or
(bad)
mov
pop
shr
sbb
or
cmp
imul
gs
cmp
xchg
push
xchg
int3
or
sub
xchg
stc
jge
out
dec
pop
test
sub
test
adc
mov
lea
ds
mov
jge
(bad)
lea
loop
fcomp
ret
cdq
in
jae
or
adc
add
pop
mov
xlat
xor
add
(bad)
mov
int
and
repz
push
pusha
retf
inc
push
ins
push
sub
jns
loop
or
imul
or
pop
cmp
loope
mov
cmps
pusha
add
cmp
mov
add
add
xchg
test
ss
or
add
mov
mov
pop
addr16
pop
(bad)
inc
dec
adc
push
pop
or
imul
call
clc
mov
icebp
or
leave
mov
add
push
sahf
inc
jp
call
or
inc
leave
mov
aam
cli
sub
mov
add
xchg
add
pop
mov
or
les
inc
loop
add
xor
push
and
mov
xor
or
push
test
add
mov
inc
popf
in
je
mov
hlt
fwait
dec
ss
xor
sahf
adc
scas
cmp
sbb
div
or
pop
sub
sub
adc
inc
mov
shl
js
ins
dec
outs
and
push
sbb
rcr
lea
inc
dec
shl
pop
pop
jle
adc
arpl
cmp
add
mov
inc
lock
(bad)
sub
in
sbb
ret
xchg
push
add
pushf
push
jmp
or
aad
mov
mov
loop
mov
pusha
add
int3
jmp
jmp
cmp
jb
icebp
mov
repnz
in
das
sub
and
data16
push
(bad)
jmp
add
(bad)
dec
cmp
sbb
push
pop
mov
popa
(bad)
stc
xor
mov
xchg
retf
push
es
cmps
or
sub
sub
sbb
cdq
(bad)
cli
cmp
mov
pop
out
frstor
add
push
sub
(bad)
and
lock
push
js
pop
(bad)
ficom
pop
leave
push
push
ret
jg
ins
or
mov
int
pop
loope
std
cli
cwde
movs
adc
ror
lea
in
jmp
or
lds
lahf
shr
sub
add
cmp
jb
push
lea
push
pop
imul
and
mov
lea
mov
and
test
movs
inc
dec
adc
or
(bad)
mov
add
loopne
jmp
xor
cmp
sbb
test
call
fisub
shl
inc
rcr
sbb
adc
jg
mov
lods
mov
mov
inc
mov
jb
pop
pop
cwde
and
mov
adc
mov
push
retf
fdiv
inc
mov
ret
stos
xchg
test
mov
inc
into
fmul
out
movs
xchg
mov
jg
xor
jo
add
push
js
popa
mov
push
mov
ret
mov
stos
int
(bad)
fdivr
inc
shr
add
lahf
xchg
jmp
xor
xchg
lods
adc
or
and
jecxz
hlt
movs
fimul
and
add
bound
add
bound
pop
push
inc
add
inc
inc
test
ret
pop
inc
add
lahf
sub
mov
lahf
jbe
les
pop
fs
add
jnp
sub
call
inc
imul
das
push
sbb
mov
mov
arpl
iret
jl
fwait
dec
dec
mov
pop
xor
sub
and
test
jnp
mov
test
sbb
cmp
shl
pusha
sub
or
dec
bswap
rol
pop
xchg
jge
or
shr
cli
pop
sub
nop
mov
test
mov
pop
mov
je
pop
adc
pop
adc
dec
push
mov
push
inc
mov
and
dec
or
(bad)
or
push
cmp
(bad)
outs
push
mov
cli
cld
je
outs
adc
daa
adc
je
rcr
mov
sar
inc
sbb
(bad)
je
add
dec
jae
add
push
xchg
mov
pop
sbb
enter
mov
es
data16
inc
jbe
sub
add
mov
test
xor
xor
mov
fs
loope
dec
call
rol
and
add
adc
add
sahf
cmps
test
add
xchg
cmps
push
imul
push
imul
add
dec
add
arpl
add
arpl
lahf
mov
pop
repz
and
ss
jo
jp
xchg
pop
jns
inc
loope
(bad)
push
dec
add
pop
adc
mov
call
mov
ds
scas
push
xor
call
mov
add
xor
cmp
popf
pop
mov
mov
stos
popa
dec
popa
xchg
mov
add
lock
inc
loope
daa
pop
push
into
sbb
mov
sub
xor
inc
pop
adc
add
mov
sbb
mov
rcr
je
add
pop
ins
sbb
fwait
jns
mov
xchg
enter
sbb
clc
test
mov
add
xor
pop
shr
or
inc
bound
and
sbb
cmps
lds
cmp
les
cmp
mov
push
adc
std
in
outs
add
pop
jns
nop
or
sub
jns
fistp
cwde
sub
cmp
lods
outs
popa
data16
or
add
fisub
and
fbstp
iret
sbb
hlt
inc
xlat
inc
xor
lahf
add
sbb
ja
lods
adc
and
shl
int
nop
xor
loopne
call
sbb
push
and
gs
outs
fidivr
add
fnstsw
ds
mov
(bad)
shr
(bad)
mov
or
das
outs
add
pop
and
mov
lods
xsaves
test
sub
and
repnz
cmps
cmp
adc
fist
pop
cs
loopne
and
rcr
fnstenv
push
pop
mov
adc
adc
inc
rol
inc
mov
mov
or
fs
fwait
xchg
jge
xchg
(bad)
mov
mov
repz
ds
mov
and
push
test
xor
dec
les
inc
popa
mov
xchg
mov
mov
pusha
push
add
adc
lock
jb
jp
fdiv
and
fwait
(bad)
lods
popa
xor
ins
adc
xchg
fs
jne
pshufw
and
mov
pushf
and
sbb
sub
in
push
xor
mov
xor
rcr
push
addr16
loop
int
es
or
in
fsubr
add
lods
out
push
shl
xchg
adc
retf
push
mov
ss
lahf
or
pop
jbe
(bad)
outs
mov
sbb
add
sbb
out
or
outs
add
inc
push
in
dec
pusha
and
sbb
jecxz
jbe
aas
mov
cld
aaa
push
push
push
sub
fadd
sub
sbb
add
adc
mov
popf
outs
cmp
push
or
cmps
adc
fld
xor
sbb
test
cdq
(bad)
lds
lea
pop
pop
es
adc
xor
jb
mov
in
dec
inc
pushf
mov
sbb
pusha
hlt
mov
pop
in
and
sbb
and
sub
movs
mov
mov
inc
pop
adc
bound
pop
in
jb
xchg
setne
xor
mov
imul
xchg
dec
xor
pop
shl
jo
sub
pop
mov
pushw
sbb
xchg
adc
outs
jmp
fistp
inc
sbb
movs
sub
(bad)
add
adc
and
icebp
call
mov
sbb
(bad)
ficomp
sbb
shl
push
fwait
or
shl
push
pop
loope
mov
dec
aaa
ins
pop
cmp
sbb
xor
loope
lods
mov
aad
adc
aas
xor
(bad)
sub
rcr
lock
or
add
js
pop
std
pusha
mov
out
ins
mov
push
test
fcom
ret
push
push
mov
push
data16
or
adc
push
mov
adc
aaa
ja
jecxz
pop
pop
add
sbb
mov
mov
in
xlat
and
pop
sar
adc
adc
mov
and
rcr
pop
pop
pop
into
in
lock
adc
(bad)
fild
test
dec
adc
retfw
test
dec
(bad)
loopne
mov
les
and
push
pop
stos
mov
ret
inc
hlt
dec
sub
shl
bound
rol
sub
xor
and
lods
pop
sahf
stc
jb
push
in
std
nop
mov
xor
cmps
nop
or
arpl
xchg
sub
fbld
add
(bad)
fmulp
add
shr
jge
(bad)
sti
je
xchg
push
xor
add
out
jle
xchg
test
pop
xor
cmp
ins
mov
sub
add
add
jno
jno
pop
pop
mov
pop
cwde
dec
push
add
sub
(bad)
mov
jle
lds
call
sub
sub
or
out
outs
mov
or
or
cmps
sub
sbb
mov
in
add
test
shr
adc
loopne
clc
outs
outs
or
jmp
add
add
int
inc
int
add
mov
ds
pop
mov
js
mov
xchg
push
add
or
rol
pop
xchg
cmp
mov
call
orps
rcl
pop
mov
pop
gs
pcmpeqd
jmp
push
cmp
xchg
ret
ret
inc
xor
aam
mov
call
dec
push
add
adc
add
in
sub
je
in
adc
fst
push
mov
cmp
ds
shl
je
add
push
sub
push
stc
push
jb
ret
xor
cmc
cmp
movs
test
lahf
add
pmaxub
out
out
pop
fadd
inc
je
and
sbb
or
(bad)
shl
xchg
jmp
jns
inc
or
inc
hlt
sub
inc
mov
add
sub
pop
and
shl
add
stos
sbb
mov
adc
popf
mov
mov
jecxz
cdq
cmp
pop
aad
hlt
add
inc
or
or
sahf
xchg
add
cmps
push
fisub
lods
popa
call
sub
jg
mov
mov
mov
idiv
ins
mov
pop
(bad)
cmc
inc
jmp
xchg
jmp
jle
push
clc
call
jmp
pusha
fdivr
xor
and
mov
mov
test
and
out
dec
fcom
inc
lea
mov
(bad)
shr
lods
jp
popa
and
sub
jg
rol
sub
jne
lock
loop
ins
mov
and
les
pop
or
lock
mov
mov
mov
inc
cmp
mov
push
in
xor
mov
cmc
jge
aam
adc
xor
jle
clc
or
jae
and
push
push
cmp
cmp
sti
and
push
xlat
and
adc
mov
pusha
mov
sbb
aaa
mov
cmp
jae
sub
scas
push
mov
dec
enter
(bad)
rol
or
mov
xor
hlt
mov
aaa
add
jnp
sbb
inc
xchg
lods
inc
pop
dec
adc
inc
add
mov
jmp
jg
jo
sub
or
or
push
ins
jmp
dec
js
pushf
sbb
cmp
pop
push
sbb
mov
mov
nop
or
xchg
jmp
push
fs
lock
(bad)
lods
lods
aaa
xchg
or
add
or
and
imul
sbb
fist
xchg
mov
sub
jmp
loopne
and
iret
test
call
adc
mov
jne
adc
add
cmp
(bad)
and
imul
adc
add
cmp
dec
push
ins
sahf
push
jl
or
push
inc
pop
add
push
ret
and
(bad)
icebp
adc
shr
add
xor
leave
dec
cwde
sbb
push
cmps
je
in
inc
ins
add
dec
cmp
and
addr16
or
and
inc
inc
inc
or
cmp
jmp
pop
mov
lods
aas
dec
dec
mov
loopne
mov
pop
adc
sbb
jle
outs
rcr
cmp
adc
jns
add
movs
(bad)
and
aad
popa
ret
sbb
fadd
jbe
dec
icebp
xor
repz
xor
mov
sbb
mov
mov
enter
mov
(bad)
pushf
dec
pop
scas
call
pop
stos
inc
movs
bound
scas
cmp
sbb
push
out
(bad)
push
movzx
push
hlt
push
cmp
pop
ret
pop
clc
inc
push
fwait
xor
and
add
inc
sbb
test
out
add
sbb
jle
shr
sub
or
dec
cmp
mov
call
shr
aaa
adc
sti
dec
call
mov
out
add
or
mov
and
sub
(bad)
adc
add
xchg
sbb
lods
cmps
sahf
test
fdiv
jbe
push
ins
and
push
dec
inc
add
sbb
jp
xchg
shl
inc
or
jl
or
pop
mov
rcl
setl
les
cld
cmp
push
inc
inc
jo
scas
sub
or
pop
jbe
pusha
jge
add
sub
or
inc
sub
push
adc
mov
pop
inc
add
out
jo
xchg
xor
retf
cmc
xor
retf
pop
or
icebp
jae
sub
sahf
mov
add
mov
mov
jl
jbe
jmp
int3
inc
inc
sub
push
push
dec
sub
mov
dec
arpl
dec
hlt
mov
lods
xor
sbb
adc
xor
jl
xlat
data16
and
mov
loope
jmp
inc
jmp
mov
adc
add
add
fcmovb
add
pop
ins
jmp
nop
mov
fnstcw
repnz
sbb
repz
or
jae
cmp
jae
cmp
or
aam
retf
jnp
mov
dec
ret
mov
xchg
pop
mov
mov
mov
mov
sbb
xor
mov
ss
enter
fadd
xchg
shl
dec
add
add
add
call
xor
adc
ret
div
enter
arpl
fcmovb
cli
xchg
and
adc
stos
mov
stos
push
and
jg
shl
or
mov
call
js
add
(bad)
jl
xchg
sbb
mov
sbb
and
rcr
(bad)
lods
or
stos
or
shl
js
stos
fimul
inc
(bad)
movs
aas
dec
fst
adc
ja
popf
inc
das
aam
pop
pusha
mov
xchg
xchg
dec
adc
in
pop
jmp
jmp
jge
add
cmp
clc
test
stc
or
inc
retf
sti
mov
dec
push
dec
adc
or
jg
mov
inc
(bad)
mov
mov
mov
xor
out
add
arpl
inc
pusha
mov
xchg
pop
cmps
push
or
aas
inc
iret
lods
sbb
repnz
in
std
inc
push
mov
or
cmp
xchg
mov
test
pop
or
or
sub
add
imul
mov
or
in
pop
hlt
mov
add
or
jmp
js
push
lahf
pushf
push
or
and
jl
imul
imul
ins
pop
push
stos
iret
nop
xor
add
dec
sub
rcl
pusha
movs
push
outs
fsub
jg
sub
imul
imul
sbb
cmp
loop
push
mov
add
in
cdq
fs
mov
jne
das
gs
inc
sbb
aas
sub
sub
add
lea
add
adc
pop
daa
add
inc
cmp
fisttp
es
(bad)
fnstenv
jp
(bad)
es
icebp
push
push
push
add
mov
loop
popa
arpl
(bad)
push
jle
data16
cmp
cmp
mov
xor
jmp
scas
in
dec
cmp
jl
fwait
cmp
pop
dec
adc
cli
adc
pusha
fisttp
inc
xchg
lea
es
imul
pop
sub
adc
pop
cld
movs
xlat
xchg
xor
pop
jecxz
mov
stos
shr
sbb
add
sub
in
jge
stos
ins
pop
out
dec
scas
pusha
ja
mov
xor
data16
ja
cmp
push
lea
jo
(bad)
mov
xor
jge
rol
add
mov
add
fldenv
scas
xchg
jne
inc
fdiv
ret
mov
mov
mov
cmp
cmp
inc
cli
xchg
cld
fldln2
mov
add
mov
pop
(bad)
push
and
mov
push
add
rcl
or
enter
rol
cmp
xor
push
sub
jno
and
or
or
rcl
je
je
adc
mov
js
es
mov
(bad)
inc
jmp
push
cli
inc
inc
push
and
outs
loopne
dec
dec
cmp
shr
or
jp
jg
shr
ss
into
jle
pop
and
ins
or
fs
or
and
mov
call
pop
popf
inc
or
enter
xor
dec
xchg
xor
loope
sub
sub
jo
xchg
pop
test
mov
jl
dec
or
push
cmp
cmc
lods
cmp
inc
pop
push
xor
inc
cmp
mov
outs
lea
add
pop
pusha
jmp
jo
add
sub
sub
jne
das
ret
lock
sbb
add
xor
pusha
add
data16
dec
add
lahf
rcr
and
inc
mov
adc
mov
push
push
leave
lea
into
outs
add
(bad)
stos
cmp
gs
and
mov
sbb
fist
add
push
inc
sbb
cmps
cmps
js
pop
inc
jnp
aam
dec
loope
sub
or
mov
ror
fnstsw
test
fisttp
inc
dec
cli
out
inc
popa
inc
push
or
or
dec
mov
(bad)
pop
mov
mul
mov
sub
sub
adc
inc
xor
or
add
jmp
inc
lea
clc
call
inc
cmp
cmp
ret
jg
arpl
sub
xor
adc
jb
loopne
jl
dec
xchg
dec
mov
rcr
enter
sub
dec
femms
mov
add
xchg
push
cmps
lods
cdq
cmp
mov
xor
jmp
in
stos
out
in
dec
push
push
jge
mov
push
xchg
mov
mov
and
test
push
pop
ja
mov
add
mov
and
aaa
shr
(bad)
jb
jne
sub
popf
loopne
sub
xchg
cdq
pop
fidiv
scas
mov
jg
(bad)
xor
pop
sbb
sbb
jp
pop
adc
test
pop
add
and
add
add
pop
shl
inc
sub
add
std
mov
fimul
inc
mov
nop
inc
call
sbb
sti
dec
mov
sar
ins
adc
inc
sub
pop
les
ds
dec
mov
push
je
sub
push
cmp
sbb
pop
adc
outs
neg
cmp
pop
mul
lea
jmp
cmp
or
inc
std
jmp
mov
rol
push
sahf
dec
add
inc
stos
inc
test
fisttp
cmp
dec
adc
mov
add
(bad)
jmp
mov
inc
and
xchg
aaa
xchg
arpl
inc
out
add
mov
in
in
test
lods
cmp
jmp
pop
mov
pushf
dec
jmp
ins
test
sar
jge
out
xor
in
push
cwde
jmp
xor
add
outs
leave
fcom
mov
cmp
retf
jo
ins
xor
imul
xchg
test
and
add
mov
dec
dec
stc
fidivr
adc
in
and
mov
dec
mov
mov
pop
pusha
xor
push
add
xchg
sbb
inc
gs
es
cmp
fisubr
push
ja
jge
pop
cmp
jg
and
or
jns
adc
adc
cmp
cmp
loopne
sbb
jbe
inc
lea
lock
mov
retf
xor
push
stc
nop
mov
nop
fscale
in
push
mov
inc
ds
mov
loope
inc
adc
sbb
in
mov
sbb
sbb
int
gs
dec
push
dec
push
fild
fistp
add
je
and
push
dec
or
mov
test
adc
push
mov
or
nop
mov
mov
lock
jo
std
in
mov
push
mov
xor
push
inc
fisubr
or
inc
jmp
out
mov
jg
or
sar
es
or
repz
in
loopne
les
or
cmc
and
imul
push
ficomp
sbb
fistp
or
push
xchg
or
imul
xor
jmp
adc
dec
outs
adc
sti
sbb
or
xor
and
cmp
inc
mov
clc
or
adc
in
mov
cld
add
jmp
and
cmp
ror
or
adc
jp
lea
lods
movs
fidivr
sub
cmp
adc
pop
mov
out
not
dec
sub
and
and
add
mov
inc
scas
lahf
push
add
dec
adc
hlt
or
lea
cmp
adc
fst
mov
movs
sbb
xchg
mov
adc
(bad)
cdq
add
ror
xor
in
test
cmp
call
add
ror
jecxz
test
scas
fistp
xor
add
xor
mov
or
add
into
in
pop
add
in
cmp
or
aas
jo
pusha
shl
mov
jmp
lods
loopne
sbb
popa
push
push
dec
push
jp
cmp
pushf
mov
jnp
or
sub
pop
xchg
push
cmp
jge
in
jg
lea
imul
xchg
in
inc
iret
(bad)
jmp
inc
jnp
hlt
mov
jmp
mov
jmp
sub
sub
inc
xlat
rol
or
das
pop
jle
call
inc
xor
(bad)
sub
xchg
cwde
jns
sbb
sub
push
repnz
push
sbb
jmp
shl
sbb
add
jl
imul
cwde
sbb
movs
popa
in
mov
mov
imul
and
fimul
push
mov
les
fst
(bad)
pushw
sbb
jg
mov
and
mov
jno
push
or
ss
add
fwait
jbe
adc
and
adc
push
test
dec
sbb
pop
sbb
mov
pop
sub
ins
clc
or
cs
sbb
std
ins
jmp
rcr
mov
mov
not
and
push
inc
not
inc
arpl
inc
lods
or
adc
or
add
mov
aaa
les
call
mov
jg
fwait
dec
pop
movs
cwde
popa
lods
int
push
pop
imul
dec
dec
cmp
mov
sub
pop
xor
push
neg
(bad)
xchg
adc
push
pop
jo
mov
ins
push
sar
mov
jns
ins
sbb
aas
jl
adc
mov
pop
cs
or
test
mov
test
add
repnz
sar
xchg
fimul
sub
adc
bound
enter
jmp
(bad)
inc
add
cmp
add
(bad)
pop
loopne
or
add
jnp
adc
ror
ins
lea
jb
stc
mov
icebp
xor
inc
icebp
mul
cmp
or
mov
add
movs
inc
test
adc
in
or
sub
fcmovb
and
inc
or
stc
bswap
leave
leave
leave
add
add
leave
leave
leave
leave
push
pop
or
leave
leave
leave
leave
or
or
jmp
(bad)
adc
loopne
or
jne
mov
loope
imul
sar
and
clc
pop
adc
fistp
call
aam
pop
push
dec
xlat
adc
or
push
fwait
je
add
sahf
adc
jb
jmp
push
or
sar
shl
or
push
nop
bound
pop
add
dec
and
jb
push
or
xor
mov
movs
mov
adc
add
jle
sbb
mov
sub
jo
pop
aas
inc
enter
mov
shl
mov
sbb
jbe
popa
or
out
stos
sub
or
into
jmp
push
pushf
adc
pop
cmovs
cmp
jge
xor
pop
xor
jmp
jnp
dec
aad
xor
call
pmuludq
int
rcl
push
sub
outs
sub
ja
sbb
push
xor
pop
push
nop
or
cld
and
fstp
jbe
cdq
ins
ret
adc
fist
cdq
and
and
imul
push
mov
or
rol
leave
add
add
and
add
adc
inc
(bad)
adc
dec
add
dec
hlt
adc
movs
jmp
mov
mov
push
lds
push
or
test
lds
add
call
das
mov
mov
imul
cs
loope
and
loopne
ins
mov
and
ret
or
aas
cmps
dec
cs
and
nop
cmps
mov
scas
add
mov
push
inc
sub
fstp
and
mov
fisttp
stos
jge
aas
loope
bound
inc
out
aas
mov
and
mov
sub
inc
scas
mov
mov
xor
aaa
ficom
pop
movs
inc
je
push
sub
mov
lods
and
or
inc
fdivr
call
ins
inc
cmp
pop
sahf
dec
pop
shl
movsx
and
mov
mov
push
cs
sub
xor
adc
jns
ins
and
fistp
lods
fs
or
ins
in
out
rcr
cwde
or
retf
jo
(bad)
push
add
pop
dec
or
ja
js
mov
ror
and
fsubr
retf
sub
mov
sub
adc
add
stc
pushf
jmp
push
jne
push
or
xor
idiv
in
scas
pusha
(bad)
xor
xchg
mov
xor
or
in
cmp
lods
pop
cmc
in
ss
cmp
test
mov
add
sar
fs
or
fs
je
call
mov
movs
cmp
add
(bad)
pop
sub
call
sub
sbb
mov
xor
les
clc
xchg
mov
or
cmp
push
rcl
inc
push
sahf
pushf
arpl
dec
loop
mov
stos
sub
add
lea
mov
dec
xor
(bad)
pop
ins
dec
dec
inc
jle
mov
inc
sbb
shl
sub
xor
push
dec
mov
js
arpl
int
daa
(bad)
mov
lock
fst
ficom
push
inc
aam
push
test
ins
inc
pop
push
pop
pushf
cmp
rol
aas
pusha
fisubr
enter
mov
adc
add
mov
cs
pop
adc
pop
mov
in
aaa
push
fld
and
ja
pop
adc
pop
add
sbb
pusha
cs
push
mov
ss
pop
cmp
lock
or
jle
sbb
push
cmp
jno
jle
and
add
xor
mov
nop
sbb
xchg
add
in
ja
cmp
jne
xchg
mov
rol
fadd
or
sbb
fnstsw
pop
add
clc
push
les
add
xlat
test
inc
ss
jbe
shl
sbb
lock
add
je
cmc
fadd
or
cmp
or
push
out
push
sub
pop
inc
sbb
add
lods
fst
push
push
or
jp
add
adc
inc
dec
pushf
fisttp
pop
xor
add
mov
xchg
and
add
mov
cmp
shl
fsub
pop
and
mov
rol
xor
mov
xor
add
aad
pusha
sbb
pop
pop
scas
and
cli
jo
loop
loopne
mov
cld
adc
fwait
adc
and
fcomi
add
sub
cmp
inc
je
pop
dec
adc
xor
test
in
xchg
jle
push
pop
add
pop
jbe
mov
shl
add
or
pusha
fdiv
fdiv
add
mov
div
add
cli
(bad)
loop
sbb
push
xlat
sub
loope
pushf
push
les
adc
mov
cmps
nop
rcl
push
adc
std
ret
and
sti
adc
lldt
retf
sbb
or
stos
push
mov
sbb
xor
push
fwait
sub
inc
call
pop
repnz
or
mov
pop
in
and
adc
lea
je
adc
loope
retf
xchg
pop
js
(bad)
mov
int3
add
retf
lock
pusha
adc
pop
sbb
jbe
sub
shl
mov
outs
xor
push
outs
add
and
outs
outs
push
pop
adc
ss
shl
jmp
pusha
inc
ins
add
and
(bad)
inc
repz
lea
jne
mov
cmp
jbe
xor
fstp
mov
inc
cmp
cmp
and
add
sub
cmp
push
jne
pop
jne
xchg
or
push
jne
jo
adc
mov
mov
je
push
inc
enter
inc
popa
loope
pop
jb
pushf
test
jmp
push
push
cwde
dec
inc
inc
xor
and
lea
inc
and
clc
cmp
jbe
sub
add
push
js
or
inc
in
mov
lock
cmp
mov
sbb
cmp
jb
jl
imul
aam
dec
mov
inc
mov
or
cs
push
cmp
rcr
fisub
cmp
sbb
or
mov
dec
sbb
ret
repnz
dec
dec
or
enter
dec
cmp
and
ret
cld
(bad)
lea
jle
xchg
dec
jl
jp
out
or
js
jge
loop
add
adc
je
adc
and
shr
mov
mov
loope
or
adc
(bad)
dec
push
add
jl
mov
mov
add
shr
push
je
ins
pop
mov
les
inc
ins
jb
sub
push
xchg
fstp
rcl
jg
dec
pop
inc
sub
add
mov
xchg
push
ds
dec
fs
js
dec
mov
cdq
push
inc
mov
lds
mov
int3
add
call
add
or
add
push
inc
and
cmps
es
mov
lds
fs
inc
(bad)
js
mov
add
add
sbb
sub
and
jns
and
jne
div
push
xor
cmp
add
add
or
push
je
pop
je
cmps
sub
lock
pop
icebp
cmp
push
push
sbb
or
lods
pop
push
add
mov
mov
cmp
push
adc
jle
nop
pop
jg
ficom
or
mov
outs
push
mov
push
pop
mov
outs
inc
and
or
push
push
imul
idiv
dec
adc
mov
imul
and
daa
mov
dec
fistp
sub
ds
jbe
push
or
cld
lock
sub
mov
popf
sub
es
mov
aaa
dec
hlt
test
ins
sub
xchg
or
sysenter
cld
ss
mov
dec
leave
cmp
je
sub
xchg
inc
(bad)
sub
dec
mov
cmps
and
adc
mov
push
push
retf
mov
ss
cmp
or
push
or
push
aas
cmp
adc
sub
and
and
dec
mov
sbb
adc
or
add
sbb
pop
or
jmp
cmp
retf
call
jmp
lock
mov
out
pop
lea
ja
push
bsf
ja
push
ss
lds
add
pushf
add
push
loopne
lods
inc
inc
sub
rcr
call
sahf
mov
adc
pop
jge
or
je
stos
dec
dec
jb
cmp
cmp
inc
xchg
jo
push
jo
dec
push
xlat
push
lods
push
les
sub
outs
enter
fmul
es
cmp
daa
fs
rcl
add
xchg
dec
adc
mov
in
add
je
dec
and
pop
cmps
dec
xchg
push
sbb
pop
aad
pusha
sbb
jmp
adc
push
mov
fistp
jle
xchg
shr
and
add
mov
jb
cmp
jbe
mov
add
hlt
jbe
fst
dec
or
mov
not
push
jle
mov
leave
or
pop
inc
mov
aas
adc
adc
xor
and
jge
or
je
neg
add
xor
ret
ins
arpl
and
in
xchg
add
jmp
(bad)
ret
and
and
and
sbb
fnsave
or
daa
(bad)
int3
dec
inc
adc
sbb
clc
in
js
and
add
sbb
aaa
sahf
aas
inc
xor
and
adc
adc
xchg
xchg
or
sbb
inc
add
dec
(bad)
stc
or
imul
and
push
leave
inc
jg
(bad)
push
inc
inc
sub
or
adc
and
jge
xor
push
jl
push
cwde
test
inc
push
push
push
xchg
inc
fmul
iret
sub
jae
push
shl
(bad)
cmp
xor
sub
push
and
mov
dec
push
jbe
sub
rol
dec
ds
(bad)
push
daa
xchg
inc
mov
mov
(bad)
xor
pop
mov
popa
rol
into
retf
sub
call
and
pop
stos
mov
cmp
dec
push
or
pop
sbb
jne
call
sbb
inc
mov
or
dec
cmp
mov
lods
xchg
cmp
xor
sbb
call
pop
sub
sub
xor
mov
pop
cmp
cld
push
sub
push
sbb
fldcw
jmp
dec
jle
sbb
jb
add
adc
nop
add
or
xchg
sub
or
ja
sub
adc
or
setb
mov
cmp
inc
adc
retf
jnp
push
sar
xor
push
sbb
in
in
loope
inc
push
nop
jp
adc
fwait
mov
lods
dec
xor
clc
add
pop
shl
adc
cwde
adc
jne
mov
mov
nop
inc
imul
bound
lea
sub
out
mov
sub
or
scas
xor
jno
and
sbb
pop
shr
inc
loopne
shr
mov
jle
nop
push
pop
add
ret
adc
lods
pop
cmp
inc
add
add
mov
mov
add
ins
leave
sbb
adc
cvtps2pd
mov
pop
lods
and
xchg
or
mov
inc
jp
in
xchg
mov
lock
jne
inc
pop
ja
fcom
lds
or
or
inc
call
aam
mov
sub
sub
cmp
mov
mov
add
jl
mov
push
xchg
nop
push
or
out
push
in
out
xor
test
int3
mov
test
inc
push
fs
outs
cmp
push
dec
pop
ja
inc
movs
jmp
ret
sahf
out
cmp
outs
mov
lds
aas
and
mov
and
or
in
add
cmp
push
sub
push
mov
jb
jmp
inc
mov
fisubr
xchg
inc
push
test
mov
fisttp
pop
dec
jbe
stos
lods
inc
push
push
cs
push
push
sbb
outs
jmp
xor
push
or
js
js
add
cmp
xor
push
or
loope
pop
(bad)
xchg
fs
push
fsubr
sbb
xlat
sbb
add
pop
inc
pop
and
adc
and
jbe
jmp
or
sbb
out
add
inc
lea
dec
push
and
push
add
pop
rol
movs
adc
in
out
push
fld
(bad)
or
loop
lods
mov
or
add
int3
loop
sbb
push
inc
movs
loop
push
cdq
mul
ss
push
ds
or
xor
jne
(bad)
les
fdivr
not
or
ficomp
jmp
and
cdq
dec
popf
scas
fmul
popf
sbb
pop
aam
mov
lods
in
cmps
ror
inc
lea
lods
in
pop
in
push
leave
cs
pusha
loop
jo
jmp
pop
lods
mov
jmp
dec
sahf
pop
xchg
cs
jae
jg
pop
stc
inc
and
ss
ror
dec
push
pop
imul
jl
out
xchg
push
cwde
xor
nop
or
cmp
mov
mov
or
mov
mov
sbb
push
pop
and
fwait
or
ja
inc
into
adc
pushf
dec
mov
inc
jle
ins
imul
pop
or
jb
pusha
push
out
ja
cmp
adc
jg
cdq
xlat
popf
pushf
xchg
cmp
push
xchg
pop
jmp
dec
(bad)
xor
or
sbb
inc
push
xchg
sub
ja
mul
jne
(bad)
and
dec
push
fnstcw
jnp
sbb
adc
fwait
cmp
call
adc
test
scas
inc
pushf
loop
ins
adc
mov
cmps
push
xchg
cmps
fwait
jl
rcl
and
test
adc
and
add
lock
xor
inc
mov
inc
push
or
test
into
add
jge
add
scas
cmp
add
sbb
cwde
out
and
push
mov
sub
or
iret
add
add
or
add
xchg
push
(bad)
stos
sub
dec
and
xor
bnd
aad
mov
add
popf
jl
into
xchg
mov
or
inc
pop
add
inc
aam
iret
pop
cmp
test
std
loop
or
or
pop
imul
and
cmc
add
pop
jbe
pop
inc
push
xchg
hlt
lods
sub
fs
dec
fmul
pusha
aad
push
jb
adc
pop
lods
pop
push
sbb
inc
inc
jno
push
jno
test
cmps
push
pop
inc
nop
adc
and
add
push
sbb
xchg
sub
xor
sbb
push
sbb
inc
inc
dec
cs
lahf
push
xchg
in
ret
mov
ins
push
push
cmp
adc
push
movs
imul
inc
adc
add
mov
pop
mov
mov
or
cdq
sub
sar
xchg
adc
jns
inc
push
(bad)
out
popa
popw
dec
mov
mov
sub
test
shl
inc
push
jmp
lea
cdq
xlat
dec
xor
cmp
adc
or
mov
and
inc
retf
sub
clc
jnp
(bad)
sbb
xor
add
enter
iret
jne
dec
sbb
cmp
inc
nop
add
adc
add
jl
mov
test
call
inc
popa
call
call
shl
imul
dec
add
adc
fs
jle
add
add
sbb
xor
retf
mov
push
sbb
jecxz
xchg
jg
xlat
fcomp
and
mov
add
cmp
or
sbb
pushf
je
inc
jl
mov
jmp
add
sbb
adc
mov
nop
cmp
aas
xchg
add
push
sbb
push
cmp
or
dec
inc
mov
xchg
pop
pusha
jo
mov
sar
daa
ins
adc
in
out
dec
xor
inc
dec
sbb
ret
adc
imul
daa
mov
jnp
imul
jnp
mov
aaa
imul
cmp
jge
cmp
or
ja
inc
aad
ret
sbb
adc
add
push
mov
lods
and
push
fsubr
push
jno
sub
jno
je
imul
sub
cmp
adc
push
adc
mov
dec
sbb
or
aaa
mov
inc
push
jg
inc
ja
add
adc
gs
(bad)
or
loope
cmp
xor
and
cmps
dec
dec
cmp
dec
sub
xchg
mov
push
add
jns
mov
loopne
pop
push
dec
cmps
shl
adc
(bad)
push
push
sahf
int
xchg
and
es
cmps
add
cmps
iret
data16
add
add
jns
cmp
add
jns
fwait
int
pop
or
or
shr
mov
xor
inc
out
fcomi
jmp
ds
outs
aas
imul
sub
movs
(bad)
push
add
test
inc
cld
add
mov
and
leave
sub
pop
adc
or
lods
pop
xchg
adc
mov
or
cmp
gs
inc
or
je
pop
jne
call
adc
xchg
test
in
movs
jb
jne
inc
jmp
and
jne
push
adc
pop
add
or
pop
cmp
inc
xor
push
cdq
cmp
xor
popa
pop
in
popf
enter
jmp
xor
jns
sbb
adc
cmp
push
ins
jo
xchg
cmp
jne
inc
cdq
fs
ucomiss
adc
je
inc
mov
xchg
pop
fadd
je
stos
add
push
jo
pop
test
out
mov
loope
imul
pushf
sub
aas
js
xor
cmc
add
and
ins
xchg
dec
jmp
and
ret
pop
and
or
add
bound
js
cli
mov
pusha
jnp
aad
cwde
adc
add
les
lea
dec
test
sub
mov
cs
add
adc
ja
mov
jg
adc
jmp
je
(bad)
ja
sub
mov
pop
adc
ins
imul
mov
lock
test
push
(bad)
push
add
push
jns
sbb
xor
push
rcr
push
loopne
push
add
add
xchg
adc
ins
mov
push
lods
push
push
in
push
and
or
into
in
add
or
push
mov
dec
pop
fnsave
sbb
add
and
lahf
adc
push
fstp
ret
pop
pusha
jb
enter
sbb
fadd
jae
xor
inc
cwde
jno
(bad)
sbb
and
clc
push
jl
jmp
arpl
dec
inc
xor
or
out
in
cmp
sbb
sub
pop
enter
js
pop
fmul
adc
pushf
adc
jae
inc
sbb
or
dec
xchg
jae
mov
aam
das
in
retf
jmp
inc
or
xor
inc
mov
sbb
inc
push
sub
leave
or
sbb
sub
or
call
sub
xor
das
icebp
ss
test
mov
sub
inc
push
push
inc
add
ins
cmp
adc
sub
in
adc
jmp
xchg
sub
test
push
shl
xor
fistp
or
push
(bad)
retf
push
add
cmp
adc
repz
and
add
inc
gs
outs
or
das
inc
inc
outs
mov
adc
sar
add
scas
lahf
pop
push
neg
mov
sbb
adc
adc
pop
mov
es
dec
push
or
ds
add
mov
in
inc
call
sbb
add
inc
or
movs
jge
add
xor
add
jae
ja
stos
sub
or
adc
mov
add
jmp
sbb
push
ret
xchg
lods
ins
and
inc
pop
cld
mov
dec
push
arpl
in
pusha
jecxz
pop
test
outs
fwait
pand
aaa
sub
add
push
push
jne
xor
xchg
and
loopne
xor
in
xor
xor
mov
bound
retf
iret
dec
inc
adc
inc
inc
or
inc
int3
add
sbb
or
sbb
popf
add
cs
xor
js
adc
enter
or
loope
fdiv
mov
(bad)
int3
or
inc
mov
aad
sahf
jmp
clc
movs
loopne
xchg
(bad)
mov
inc
aam
stos
mov
mov
add
sti
test
test
pop
cs
outs
loopne
mov
mov
sbb
ja
cwde
xchg
add
xchg
mov
mov
mov
push
(bad)
or
lahf
movs
add
add
xor
movntq
test
or
adc
das
sbb
xor
(bad)
pop
xor
popa
cmp
pop
jbe
fs
(bad)
fwait
enter
or
test
les
outs
cmp
push
sub
inc
les
or
ret
jmp
pusha
xor
outs
adc
adc
retf
rcr
push
or
popa
or
out
scas
lods
jae
or
test
js
cmps
arpl
mov
fadd
pusha
mov
daa
daa
aaa
out
lods
mov
cwde
mov
or
in
mov
and
push
hlt
xchg
in
and
jae
dec
pop
arpl
mov
and
mov
xor
adc
sbb
mov
mov
cmp
and
mov
cmp
mov
lea
test
jne
pop
add
das
lods
push
add
pop
cmc
aaa
or
xor
imul
hlt
shl
xlat
push
js
je
push
jb
cmp
adc
pop
xor
push
neg
inc
rol
loop
mov
or
push
movs
push
outs
sub
push
inc
inc
das
sbb
jne
add
add
inc
lahf
cmp
cmps
add
xchg
neg
ja
push
xor
lods
adc
adc
pop
xchg
push
imul
imul
(bad)
jne
dec
jmp
pusha
sar
test
add
sub
hlt
dec
int
cs
adc
sub
sbb
sbb
cdq
sbb
adc
xchg
pop
mov
or
inc
xchg
xor
iret
and
add
js
adc
or
xchg
iret
add
cmp
sahf
mov
dec
mov
sub
(bad)
ins
hlt
dec
aam
push
cmp
ins
mov
(bad)
jo
add
jne
or
mov
xchg
xchg
sub
test
push
leave
xchg
(bad)
lods
das
sbb
lea
mov
fs
lea
cwde
mov
mov
push
dec
(bad)
pusha
xchg
add
movs
pop
pop
inc
popa
lds
mov
push
shr
aaa
sbb
pop
loope
mov
rcl
jecxz
jecxz
pop
inc
or
(bad)
enter
test
cs
pop
inc
fdiv
test
inc
jmp
xchg
in
push
jb
repz
add
outs
gs
inc
xor
aas
aas
jle
retf
(bad)
push
xor
test
adc
shr
or
pop
(bad)
sbb
ins
and
cmp
nop
inc
add
leave
cmp
and
cmp
cmp
daa
cmp
mov
js
sbb
adc
ds
xor
fisubr
inc
sub
xchg
or
test
test
(bad)
into
cmp
mov
sbb
add
rcr
enter
mov
call
mov
inc
nop
sbb
dec
jl
inc
fild
mov
inc
test
sbb
sub
pause
rol
test
pushf
sbb
test
add
(bad)
push
int3
pop
bound
add
cmp
xor
and
or
xor
mov
inc
xor
jne
ins
cld
mov
bound
in
xor
inc
addr16
movs
push
add
push
jmp
jmp
push
dec
and
add
mov
rcr
mov
test
jmp
sub
or
and
add
push
nop
bnd
and
push
mov
pop
or
and
and
add
lods
scas
ins
adc
or
ins
mov
add
hlt
mov
je
add
in
or
cs
pop
ror
imul
sbb
inc
and
add
xor
add
loopne
dec
je
add
inc
cmp
mov
add
in
dec
push
pop
dec
sub
mov
cwde
pop
pop
cli
fadd
sbb
cmp
push
xchg
loopne
dec
and
xor
nop
test
push
scas
stos
fucomi
or
add
add
pop
pop
or
cmp
dec
jecxz
adc
push
sbb
imul
pushf
cmp
and
and
les
and
ret
pop
cmp
aas
jno
cmp
sub
out
mov
push
and
dec
adc
das
dec
push
and
cmps
rcl
xor
xor
movs
and
mov
lds
mov
outs
das
ins
lea
movs
mov
push
cmp
mov
and
icebp
(bad)
pusha
push
out
shl
push
add
dec
cmp
nop
inc
dec
inc
xor
dec
popa
sub
cmps
retf
enter
ins
add
sbb
dec
adc
add
fild
lahf
adc
mov
rcl
mov
push
cmc
pop
pop
and
jmp
inc
sbb
cld
std
sbb
and
mov
je
popa
or
ja
jge
lea
sub
xchg
and
icebp
xor
cmp
pushf
mov
adc
inc
cmp
call
test
and
test
ret
aaa
cli
sbb
push
inc
adc
sub
push
pop
pushf
jmp
in
xor
leave
fwait
add
enter
and
sbb
fstp
or
ja
sub
enter
fnstenv
ja
add
mov
or
inc
cmp
stos
lods
jbe
or
pop
cmp
les
jmp
mov
(bad)
sub
clc
jp
popf
add
or
imul
jnp
ret
in
jmp
add
leave
sub
inc
adc
push
dec
push
dec
push
push
inc
xor
(bad)
xor
jecxz
or
xor
lods
xor
test
sub
leave
push
mov
sbb
pusha
adc
fnsave
in
test
mov
pop
and
xor
inc
mov
mov
popf
or
fst
and
pushf
jne
xchg
in
push
repnz
sub
icebp
or
sbb
out
push
fsub
add
add
ss
loope
sub
movs
cwde
into
ds
mov
shl
push
iret
adc
push
loope
fisubr
jae
mov
aad
mov
xchg
push
mov
hlt
inc
cmp
inc
xchg
push
xor
and
jnp
addr16
sub
mov
dec
es
sbb
xor
or
sub
sbb
pop
mov
mov
or
les
add
dec
add
inc
addr16
inc
add
or
jb
inc
hlt
loopne
dec
addr16
pop
sub
and
lds
shl
and
cmp
and
shr
or
test
sub
xchg
xchg
push
push
xor
dec
pop
aad
int
mov
jg
rcl
jg
inc
sub
and
sbb
or
bound
inc
fst
and
sbb
cmp
cmp
mov
mov
mov
loopne
xor
jae
add
mov
push
loope
in
aad
push
cmps
ins
lods
addr16
out
lds
jo
mov
jne
jmp
dec
push
mov
ret
adc
sbb
lock
push
push
inc
and
pop
add
xor
call
lahf
ja
stos
add
lods
xor
das
add
sbb
push
adc
inc
push
xor
cmp
sub
jnp
xchg
pop
int
push
xor
sub
test
mov
lods
lods
or
jnp
inc
in
clc
lods
xor
sbb
test
sub
xchg
pop
sbb
fcomp
xor
push
add
push
jg
adc
push
or
and
mov
imul
add
sbb
popf
fld
pop
js
cmp
leave
mov
dec
mov
pop
test
cmp
add
ins
dec
shr
xchg
mov
pop
lahf
sbb
push
outs
jns
inc
jb
sub
movs
gs
stc
xor
cwde
cmp
imul
xor
xchg
ja
mov
lea
mov
adc
mov
mov
adc
inc
mov
mov
jno
loop
push
das
add
sub
mov
out
pop
add
xor
ds
es
mov
(bad)
cmp
in
pop
out
and
cld
leave
sub
movs
cmp
nop
or
jp
inc
(bad)
sbb
pop
cld
cmp
adc
fwait
xchg
and
sbb
push
cld
or
popa
add
or
inc
mov
jp
imul
add
arpl
sub
xchg
mov
(bad)
sbb
daa
rol
lahf
jl
cmp
or
push
daa
mov
xor
or
lods
ret
pop
(bad)
leave
sbb
cmp
mov
push
push
aam
sub
jle
out
lds
inc
adc
inc
lahf
sub
test
mov
mov
xchg
sbb
push
mov
ret
cmp
loopne
sbb
inc
or
enter
cmp
mov
lods
mov
or
scas
es
sar
lods
icebp
or
mov
cmp
jp
js
sti
fnstenv
inc
or
nop
pop
test
mov
dec
cmp
sub
test
std
icebp
dec
push
outs
je
pop
push
repnz
test
sub
cmc
mov
and
(bad)
cs
push
sbb
sbb
outs
sub
retf
xchg
adc
mov
mov
adc
repz
rol
dec
aas
mov
retf
mov
cmp
mov
adc
pop
or
cmp
enter
cmp
xchg
lods
mov
inc
lods
mov
rol
lds
push
push
push
loope
adc
pusha
mov
pop
push
jbe
je
cld
push
fiadd
push
pop
dec
add
mov
add
xchg
mov
pusha
add
xchg
cmp
les
mov
push
mov
(bad)
cmp
sub
jno
fiadd
xchg
pop
aam
sub
sub
push
rol
pusha
push
and
cs
and
adc
je
iret
fs
mov
push
pop
ret
dec
adc
sbb
mov
xor
xlat
cmp
cmp
pop
inc
sbb
ds
push
push
outs
ins
cmp
sub
mov
out
lods
int
lods
xchg
ja
jb
daa
sub
iret
sub
jb
sbb
cmp
sub
pop
add
sub
inc
add
xor
dec
sub
lods
and
dec
mov
add
sub
add
push
fistp
ins
xor
xor
inc
mov
mov
and
cld
or
cmp
add
jno
loopne
or
inc
or
cmp
stc
sbb
xor
xor
mov
fst
xor
sbb
add
dec
ins
shr
pop
adc
or
or
mov
stos
popf
out
cmp
inc
pop
and
mov
pop
jmp
and
jp
scas
lea
push
retf
repz
push
add
sub
sbb
out
lahf
lea
push
rcl
push
add
dec
sbb
movs
sub
test
rcr
lds
add
add
ret
div
clc
cld
neg
or
stos
jno
add
mov
stc
ficomp
add
test
test
(bad)
out
cs
cwde
sbb
mov
adc
or
inc
fs
xor
mov
jecxz
mov
push
xchg
mov
xchg
push
xchg
loopne
rcr
or
or
jb
repnz
xchg
add
or
xor
or
and
adc
mov
stc
sub
pop
cli
sbb
fisttp
xor
cmp
popf
aaa
push
adc
sbb
adc
sbb
jne
(bad)
inc
loopne
and
and
xor
icebp
ret
cmp
scas
and
adc
sbb
hlt
mov
add
xor
cmp
inc
(bad)
enter
jmp
cmp
aas
xor
test
and
sbb
test
scas
into
dec
sar
aaa
xchg
cmp
fnsave
pop
xchg
out
mov
push
and
pop
xor
mov
scas
inc
push
pop
dec
add
push
push
cmp
and
xor
movs
mov
mov
ss
add
add
mov
mov
pop
push
push
sar
ds
jbe
inc
and
push
xchg
lahf
xchg
cmpxchg
inc
cmp
in
mov
pop
and
pop
mov
inc
imul
les
es
inc
mov
mov
daa
fs
push
ret
icebp
or
icebp
add
call
jno
cld
mov
loop
jbe
inc
popf
mov
lods
cdq
add
inc
lea
adc
add
loopne
inc
pop
imul
dec
ss
dec
lock
mov
xor
nop
test
inc
push
dec
push
shl
cmp
add
or
jno
pop
cdq
jne
test
adc
dec
cdq
sbb
imul
rol
or
pop
jno
jb
add
jbe
mov
cmc
or
push
and
push
xchg
ror
aas
jmp
mov
jnp
xor
add
addr16
bound
in
jl
test
jne
xchg
cmp
fwait
and
or
sub
test
and
ins
and
test
lock
inc
push
mov
sbb
add
nop
scas
inc
mov
pop
add
test
int
sbb
(bad)
and
sub
test
cmps
mov
or
xor
adc
add
bound
out
pop
fidiv
ret
cmp
mov
in
repz
push
dec
or
jl
inc
shl
or
movs
in
xchg
sub
jmp
ret
inc
loopne
sub
cmp
test
xchg
push
pop
cmps
sub
push
sub
xor
daa
jb
mov
arpl
cmp
inc
or
dec
leave
or
mov
dec
xor
xor
sbb
shl
fst
imul
mov
adc
add
mov
xor
xor
mov
dec
aad
cmp
shl
popf
mov
aam
pop
cmp
xlat
push
or
shl
fs
add
adc
and
out
popa
pushf
neg
mov
adc
data16
add
(bad)
js
aad
or
pushf
and
bound
add
int3
js
movs
push
and
push
daa
pop
aaa
leave
ja
stos
add
and
mov
sahf
adc
push
sahf
jno
and
or
rcl
mov
dec
addr16
call
push
sub
cld
jl
cmp
and
nop
inc
mov
lea
sahf
mov
mov
sub
mov
push
sbb
ja
mov
mov
cmp
xlat
and
mov
xor
leave
enter
sbb
sbb
sbb
jb
leave
sub
and
xchg
cmp
repnz
add
sbb
pop
mov
add
mov
sbb
clc
lea
repnz
sub
mov
iret
jae
and
sub
sub
aad
xlat
pop
dec
lds
mov
mov
sbb
pop
cwde
jae
test
dec
cmp
rol
adc
rcl
movs
add
test
jg
test
mov
(bad)
pop
inc
cmp
test
mov
xor
adc
mul
and
jecxz
in
ja
aas
stos
and
pushf
sub
xor
lahf
inc
push
add
mov
pop
mov
xor
adc
out
xchg
call
jo
(bad)
imul
sub
xor
fwait
retf
fdiv
pop
lock
dec
int3
leave
dec
xor
ds
and
jnp
pop
add
xchg
in
push
adc
shl
pop
jb
cmp
xor
jns
loopne
sbb
enter
sub
sbb
xor
int3
mov
loop
nop
sub
dec
xchg
cwde
repnz
je
pop
add
jbe
adc
mov
xor
add
cmp
and
pop
add
cmp
xchg
adc
cmps
rol
xor
push
mov
mov
mov
fimul
bound
int
test
or
sbb
xor
cmp
cmp
int
add
cmp
mov
rcl
movs
add
pop
call
push
or
fdivr
imul
add
adc
xor
cmp
add
loope
xchg
je
rcl
jl
push
imul
ins
js
sub
sub
mov
jmp
dec
rol
xchg
outs
cwde
pushf
sub
test
aad
jo
in
or
push
mov
mov
cld
jb
nop
out
loop
mov
and
sbb
mov
fnstenv
inc
cmp
and
dec
out
inc
test
xchg
lods
sbb
push
xor
cmp
xchg
repnz
xor
aam
xchg
retf
and
mov
inc
push
lock
clc
mov
imul
mov
add
imul
outs
xor
add
and
arpl
adc
mov
and
xchg
inc
fidiv
mov
nop
cwde
xchg
retf
and
je
sbb
adc
add
mov
push
daa
sbb
add
pushf
xchg
dec
jbe
push
sbb
lock
bound
ins
sbb
sahf
dec
in
lea
jp
clc
into
ret
xor
in
bound
jbe
xchg
ss
dec
adc
and
push
mov
add
or
mul
or
jne
movs
pushf
ins
pushf
jge
pop
lds
inc
jbe
add
aaa
xor
push
add
cld
sbb
sbb
jo
sub
fild
mov
cdq
mov
mov
xchg
retf
add
ret
scas
nop
add
jp
inc
mov
mov
nop
cmp
cmp
xor
mov
add
fidivr
inc
mov
loope
test
ins
add
mov
sbb
push
cmp
or
movs
sub
call
or
sub
and
sub
add
pusha
test
inc
pop
add
jg
or
aas
ins
lods
and
inc
enter
ds
sbb
sub
or
(bad)
fsubr
out
test
dec
adc
stc
inc
pop
cmp
xor
inc
mov
outs
or
pop
push
xchg
or
sbb
mov
add
push
loopne
ja
outs
not
push
sub
adc
jge
jb
or
rcr
add
aad
push
sub
mov
inc
add
push
cmp
sbb
sub
and
loopne
cmp
jbe
leave
movs
push
dec
and
and
adc
call
nop
push
xor
fcmovnu
xchg
xchg
fidivr
in
dec
in
sub
sbb
adc
xchg
or
pop
adc
xlat
pop
pusha
adc
sbb
shl
in
ss
and
push
push
mov
movaps
xchg
pusha
movaps
adc
push
jnp
or
ins
push
adc
ins
jo
adc
sub
mov
ja
and
fdivr
sub
out
mov
fcom
adc
sub
movs
jecxz
inc
xchg
pop
fwait
push
clc
leave
add
daa
sbb
and
or
push
mov
mov
sub
sbb
shl
jmp
or
fld
fmul
adc
movs
stos
xor
fiadd
dec
push
push
sbb
mov
push
das
pushf
cmp
or
outs
rcl
call
jp
jp
int3
push
fs
fidiv
mov
out
inc
jmp
ficom
push
cmps
hlt
dec
sbb
mov
pusha
pop
sub
fistp
scas
mov
(bad)
xor
jae
cwde
inc
movs
test
sbb
add
fdiv
mov
cmps
movs
mov
in
inc
mov
xor
pop
sub
inc
adc
pop
mov
xor
add
jo
xor
dec
and
dec
push
(bad)
repz
push
push
aam
add
push
sbb
jmp
and
test
push
push
or
je
ja
adc
hlt
cmc
pop
xchg
ins
xchg
shr
sub
mov
pop
mov
jbe
adc
mov
xchg
int3
les
in
enter
jno
(bad)
aas
rcr
xor
jmp
add
or
or
das
int3
xchg
add
(bad)
or
push
rcr
inc
in
mov
sbb
and
adc
xchg
cdq
sbb
enter
add
gs
in
push
sub
cmp
add
dec
sub
or
leave
add
xchg
sbb
repz
and
ja
xor
fisub
(bad)
and
xchg
xor
jecxz
or
push
xor
adc
cmp
inc
jl
out
pop
jo
outs
inc
add
jb
or
bound
mov
xlat
push
push
fisub
dec
dec
sub
cmp
popa
(bad)
(bad)
push
sub
jg
rcl
pop
push
daa
inc
and
stc
daa
and
adc
les
push
inc
cmp
hlt
dec
jecxz
sub
adc
or
push
push
popa
mov
das
fisubr
fdivr
or
aas
je
cmp
aas
iret
add
ds
and
sar
or
les
push
mov
jp
mov
retw
xor
pop
pop
jne
popf
or
xchg
cmp
dec
push
sub
and
imul
sbb
add
xchg
adc
rol
inc
adc
and
sbb
inc
and
mov
xchg
adc
inc
movs
xchg
sahf
popa
or
add
in
pop
xor
inc
adc
and
xchg
mov
(bad)
cmp
or
jb
stc
xor
pusha
jp
add
leave
dec
or
or
dec
cmps
pop
test
dec
mov
and
shl
or
dec
sbb
jbe
mov
adc
repnz
ins
mov
pusha
fxch
cmp
cmp
mov
into
nop
mov
sbb
inc
adc
cmps
add
lock
cmp
and
adc
dec
xchg
sbb
inc
mov
(bad)
xlat
push
cmp
xchg
cmp
in
pop
mov
scas
adc
adc
mov
inc
imul
and
mov
icebp
push
repz
push
imul
popa
mov
mov
sbb
mov
cmp
push
je
inc
lds
add
cli
std
nop
(bad)
loope
or
lock
cmp
push
or
fisttp
sti
sbb
xchg
nop
(bad)
sbb
push
adc
jle
imul
inc
mov
pop
outs
add
fadd
jg
sub
and
dec
retf
and
loop
push
(bad)
adc
rcr
mov
test
xor
pop
aam
push
push
cmp
xor
push
call
enter
pop
mov
sbb
out
in
dec
xor
cmp
ja
xor
movs
adc
pop
mov
add
es
pop
add
inc
push
and
xor
int3
push
push
fwait
jns
and
sbb
pop
sbb
and
cmp
mov
ret
call
push
jmp
add
(bad)
pop
cmp
add
sti
and
pop
in
jbe
mov
add
xor
repz
enter
int3
pop
and
xor
jno
pop
mov
(bad)
lds
and
shr
les
cmc
sbb
fmul
test
pop
add
jns
push
and
sbb
repnz
out
popa
and
xor
or
mov
and
xor
(bad)
push
dec
push
imul
inc
push
inc
inc
or
mov
fmul
mov
dec
mov
sbb
add
mov
mov
inc
repnz
inc
dec
inc
nop
imul
or
icebp
and
dec
je
sbb
mov
retf
mov
xchg
retf
xchg
push
stc
add
movs
xor
add
add
bound
pop
cmps
loope
in
cld
mov
emms
std
xor
xor
push
push
fcom
sub
xor
cmp
inc
fcom
je
sub
iret
rcl
and
adc
fwait
push
push
nop
adc
xchg
pop
adc
pop
jmp
jp
pusha
out
inc
jmp
push
test
sbb
sbb
dec
or
cmp
and
inc
inc
xchg
or
ds
imul
sub
sbb
inc
push
jns
push
mov
xor
cmp
mov
cmp
rcl
arpl
cmp
sbb
sbb
pop
xchg
sub
push
loopne
imul
lods
pop
ret
add
test
(bad)
inc
sub
and
dec
dec
dec
adc
cli
leave
ror
fiadd
xor
in
pop
add
and
(bad)
mov
pop
xchg
mov
inc
push
fild
mov
or
adc
loop
and
sbb
xor
es
psllw
adc
cmp
jae
and
or
and
call
mov
out
pop
adc
test
dec
add
dec
mov
push
pop
in
out
inc
dec
dec
cmp
test
test
test
xlat
je
push
xlat
pop
lock
lahf
dec
push
fst
fcomp
inc
inc
inc
dec
stos
cmp
sahf
pop
mov
sub
cmp
rcr
and
cmp
fist
test
mov
daa
test
lea
cmp
ret
cmps
stc
sbb
push
xchg
shr
mov
adc
addr16
mov
repz
inc
mov
adc
sub
test
ror
imul
daa
push
sbb
mov
push
retf
lahf
xchg
and
test
mov
mov
xor
enter
push
mov
mov
push
and
push
inc
and
mov
adc
or
cwde
test
rcr
sub
out
push
imul
inc
imul
adc
and
nop
dec
jmp
jmp
sub
sbb
out
and
sub
jo
pop
mov
loope
mov
mov
mov
popa
sub
inc
or
mov
xchg
and
je
add
xchg
pop
mov
pop
sbb
cs
sub
mov
mov
add
pop
add
das
jne
pop
xchg
pop
push
pop
add
fsubp
cmp
xchg
push
push
and
cwde
add
inc
dec
lock
addr16
cmp
in
add
fisubr
and
and
inc
(bad)
cmp
sbb
inc
sub
adc
daa
inc
fadd
xchg
fld
test
jne
and
push
in
push
mov
mov
xchg
dec
mov
dec
loope
jmp
sbb
xchg
sbb
and
add
fcom
sbb
xchg
push
aaa
sahf
bound
hlt
xchg
je
aam
enter
jg
jmp
(bad)
push
(bad)
pushf
add
lea
mov
(bad)
dec
xchg
inc
cs
shr
add
mov
(bad)
xchg
and
xlat
sbb
mov
pop
aam
cmp
dec
mov
add
sbb
pop
mov
ss
ror
ins
xchg
pop
sub
test
mov
pop
inc
or
mov
call
xor
pop
push
sbb
inc
and
ret
inc
xchg
push
push
xchg
sub
ss
xchg
and
shl
mov
pop
adc
push
jbe
xchg
loope
xor
loopne
inc
or
mov
xor
popf
nop
add
or
pop
fs
adc
fs
dec
inc
push
(bad)
and
je
mov
and
xchg
cli
pusha
add
pop
inc
sub
popa
(bad)
pop
xor
add
push
xchg
push
dec
push
fwait
jb
push
add
into
jmp
cmps
push
pushf
add
icebp
and
mov
inc
pusha
movs
jg
(bad)
je
pop
or
pop
hlt
pop
outs
push
or
xor
retf
push
mov
sahf
add
or
sbb
rcl
nop
add
lea
adc
fs
sub
cld
imul
pusha
pop
mov
ins
inc
ss
push
cmp
adc
pop
push
adc
push
repz
sbb
cmp
pushfw
enter
push
cmp
je
cmp
inc
ds
jns
(bad)
jo
in
outs
fs
xor
adc
call
pop
sbb
xor
push
fwait
dec
sbb
adc
(bad)
jle
xor
add
cmp
and
xchg
mov
push
xchg
push
outs
add
mov
aaa
xchg
push
ror
and
inc
in
jg
les
inc
or
sub
rcr
pop
or
retf
dec
shl
jo
call
jl
sbb
sbb
nop
data16
or
push
retf
push
adc
repnz
or
and
pop
sbb
xor
inc
push
dec
mov
and
xchg
cmps
test
jge
cmp
aaa
cmp
cmovbe
adc
lea
dec
fs
sub
cs
pop
jl
xchg
add
dec
push
mov
scas
movs
ror
iret
mov
enter
(bad)
or
add
adc
and
or
cmp
mov
jo
movs
repnz
push
xchg
or
rol
adc
ret
dec
test
rcr
imul
inc
cmps
movs
outs
ficom
nop
inc
enter
ins
cld
imul
xor
fld
jno
fimul
push
sub
sub
mov
jae
jmp
cmp
xor
pop
xor
push
adc
xlat
mov
mov
das
add
aaa
mov
and
scas
add
jo
xor
mov
push
pop
stc
in
arpl
pop
push
mov
push
out
jb
sbb
pop
ss
movs
pop
ret
xlat
rcr
adc
or
push
call
fsub
rcr
loopne
vmwrite
adc
lods
sbb
and
(bad)
mov
enter
push
or
and
mov
je
(bad)
xchg
push
mov
dec
clc
inc
inc
pop
mov
sbb
cmp
dec
push
and
adc
push
dec
out
ins
add
mov
sub
cmp
jo
shr
push
pop
push
jbe
cli
jae
pusha
xor
xor
mov
inc
mov
shl
loope
je
cmp
or
and
mov
(bad)
str
fsub
jl
cmp
adc
arpl
jns
cmps
enter
xor
movs
fstp
xor
(bad)
aad
in
jb
jo
stc
enter
dec
adc
xor
in
mov
das
xchg
mov
and
clc
push
add
push
test
es
push
mov
movs
push
in
je
xchg
sub
fisttp
mov
jl
lea
mov
pop
sub
fisttp
and
and
gs
ins
add
cmps
or
les
pop
adc
retf
popa
lock
jb
(bad)
inc
jb
or
jl
retf
pop
nop
inc
sub
sub
ror
pushf
loopne
ss
dec
sbb
movs
movs
sbb
sub
xchg
mov
mov
mov
cs
movs
adc
lods
mov
movs
jecxz
ret
pfcmpeq
mov
mov
adc
rcl
outs
rcr
movs
push
cmp
sbb
mov
dec
fwait
pop
nop
cmp
push
jp
int3
rcr
mov
pop
mov
push
mov
pop
das
les
(bad)
jmp
adc
dec
aam
aaa
mov
mov
in
add
or
sti
or
imul
movs
or
(bad)
push
ret
retf
neg
add
addr16
adc
movs
sub
xor
inc
pop
ds
adc
mov
lock
call
jl
pop
or
xlat
lahf
ret
adc
mov
add
mov
xlat
inc
arpl
mov
fisub
sub
mov
sbb
icebp
mov
lahf
mov
addr16
pop
cmp
mov
out
nop
push
pop
mov
jl
nop
sbb
pop
inc
ins
loope
popf
mov
and
xchg
push
sar
mov
pop
mov
js
sub
adc
push
outs
dec
cmp
push
sub
enter
cwde
push
sbb
mov
mov
imul
in
fcom
es
aaa
loopne
lods
push
push
and
add
sub
inc
ret
aas
or
cmps
test
sbb
dec
je
movs
enter
add
push
jge
mov
pop
add
push
mov
imul
test
test
inc
mov
xchg
mov
or
pusha
lahf
push
test
lea
dec
push
adc
xchg
rol
xchg
out
js
sub
sub
(bad)
and
cmp
mov
hlt
dec
pop
or
mov
inc
and
test
(bad)
mov
pop
scas
arpl
gs
mov
mov
xor
xchg
dec
cmps
sub
cmp
lea
das
mov
leave
or
push
arpl
loop
inc
and
mov
dec
mov
jne
ss
sub
push
or
mov
inc
loopne
fdivr
or
jne
ficom
mov
test
test
push
cmp
je
test
cmp
(bad)
and
test
push
xor
sbb
add
cmp
jl
je
ins
adc
cmp
cmovs
cmp
jae
xchg
inc
shl
(bad)
imul
(bad)
jl
jmp
add
add
xor
inc
mov
(bad)
and
cmp
fmul
and
push
lahf
lods
rol
push
inc
sbb
xchg
jl
add
push
je
adc
inc
pop
xchg
pop
mov
jmp
sub
sub
loop
sub
sub
push
push
fsubr
pop
sbb
adc
hlt
or
sub
xchg
sbb
cmps
jbe
jno
mov
xchg
ror
fwait
mov
pop
imul
cmp
fs
add
adc
sbb
mov
shl
int3
addr16
out
cld
or
dec
test
arpl
push
(bad)
inc
mov
mov
dec
retf
jl
push
push
sbb
adc
adc
add
sbb
test
retf
add
hlt
inc
cld
mov
in
pop
mov
popa
imul
xor
clc
or
retf
add
pop
sub
inc
pop
mov
pop
push
cmps
mov
pop
push
pushf
cmp
xor
jb
push
and
clc
dec
xor
daa
mov
out
or
(bad)
xor
es
push
fisttp
and
js
or
inc
arpl
mov
sub
xchg
pop
shl
jns
inc
cmp
mov
cmp
or
test
mov
push
and
inc
mov
mov
mov
push
or
xchg
adc
mov
mov
sahf
adc
adc
in
cmp
push
inc
mov
mov
pusha
sbb
cmp
and
sub
sub
ins
jl
and
test
inc
ins
jecxz
je
inc
je
add
jo
add
cmp
push
rcl
cmp
jp
gs
pop
inc
ins
inc
cdq
push
push
cli
inc
xor
dec
add
cld
push
push
dec
adc
push
mov
or
inc
or
sub
xchg
xor
enter
retf
push
out
xchg
mov
aam
xchg
push
data16
cmp
jl
jmp
or
jge
add
push
mov
dec
dec
push
dec
clc
imul
push
test
xor
push
adc
inc
xchg
push
in
movs
inc
fs
xor
mov
pop
ret
lds
lea
clc
dec
pop
cwde
nop
scas
movs
cmp
and
add
mov
jl
or
dec
jb
sbb
cmp
imul
cmp
and
stos
cmp
push
inc
push
or
add
mov
fsubr
xor
inc
sub
push
out
mov
push
dec
and
pop
hlt
xor
xor
mov
push
dec
out
pop
pop
and
add
push
(bad)
imul
push
lods
mov
adc
push
sahf
jmp
mov
sub
sub
pop
in
cmp
test
mov
leave
xchg
int
mov
mov
or
xchg
and
xor
adc
inc
push
push
xor
or
and
rcl
add
xor
adc
lea
aas
sub
jne
add
inc
adc
push
jge
mov
imul
fadd
sbb
mov
lea
ss
fst
movs
xor
xchg
dec
(bad)
xor
push
and
push
scas
inc
adc
and
retf
ja
sbb
ja
add
ds
lock
clc
push
and
or
stos
adc
dec
and
ror
retf
sub
push
xchg
cmp
cmp
push
add
xor
aaa
ss
xor
cld
jno
jb
pop
in
or
repz
mov
or
push
ja
retf
mov
dec
je
mov
push
inc
daa
mov
sahf
outs
and
xor
xor
mov
fwait
dec
add
test
inc
sub
retf
imul
xor
xor
push
ficom
sub
imul
mov
xor
ja
test
add
das
(bad)
(bad)
retf
xchg
cmp
jmp
jo
test
int
(bad)
and
cmp
jl
sub
mov
push
or
enter
mov
cwde
or
push
and
mov
aaa
call
fwait
inc
pop
mov
cmp
imul
or
mov
cmps
xchg
or
or
inc
(bad)
cmp
xchg
adc
test
mov
jbe
or
fsubrp
push
cs
and
add
mov
inc
ins
add
add
push
mov
push
rol
adc
(bad)
mov
es
lods
inc
and
adc
push
and
jg
push
add
mov
adc
xor
mov
out
ins
inc
push
in
fs
ins
and
adc
in
cs
fld
mov
retf
xchg
xchg
mov
mov
or
pop
vmread
add
jns
push
mov
push
rcr
adc
pop
pop
xchg
hlt
inc
rcl
imul
js
mov
mov
add
push
dec
jo
or
add
imul
push
push
push
mov
push
call
mov
inc
sbb
push
sub
mov
repz
(bad)
js
push
leave
inc
push
jl
or
aaa
sub
(bad)
xchg
mov
push
mov
jne
jns
lods
mov
mov
dec
adc
xchg
out
movs
loopne
popa
cmc
mov
mov
mov
dec
adc
adc
movs
cmp
push
push
(bad)
push
pop
xor
adc
mov
xchg
pushf
(bad)
jb
bound
or
shl
adc
cld
cmp
ss
xor
loope
inc
inc
in
js
push
jb
mov
jo
stc
test
adc
lock
mov
add
pop
in
or
pop
bound
push
cmp
xor
xchg
mov
sar
dec
sbb
xlat
movs
push
jl
jmp
cld
(bad)
lock
lock
or
cdq
add
and
inc
dec
rcr
push
pushf
es
adc
add
and
iret
dec
push
mov
or
mov
sbb
mov
fistp
inc
sbb
xchg
mov
sbb
(bad)
push
push
adc
add
repnz
push
xor
mov
sub
mov
sbb
jo
pop
and
adc
test
icebp
loop
push
popf
fsubr
cwde
xchg
pop
add
retf
dec
test
mov
xor
pop
sahf
sbb
outs
or
mov
dec
(bad)
aad
repz
ins
jne
push
gs
xor
inc
or
retf
jecxz
lods
sahf
sub
add
or
adc
pop
loop
or
mov
and
xor
pushf
std
sbb
outs
sub
jb
cmp
pop
data16
or
aas
inc
lahf
je
xor
cmp
mov
loop
not
adc
pop
inc
cmp
cmp
stos
mov
mov
pop
jp
fucomp
lahf
jle
xchg
xor
je
xor
outs
test
scas
mov
mov
aas
xchg
scas
adc
aam
(bad)
and
add
inc
imul
jae
sbb
inc
add
xlat
add
outs
stos
pop
lea
(bad)
(bad)
popf
fnstenv
push
mov
inc
push
call
nop
shl
xchg
add
push
shl
xchg
push
or
xchg
xchg
jae
push
xchg
jo
int
fcomp
je
arpl
jbe
jl
mov
popa
pop
into
ins
push
pusha
cmp
bnd
ins
push
es
imul
add
jb
jecxz
cmp
addr16
loope
and
ja
cs
sar
fnstenv
inc
push
push
es
pop
daa
movs
push
daa
mov
mov
inc
pop
push
dec
push
or
or
or
sbb
ficom
mov
inc
inc
mov
mov
or
lahf
lahf
push
cmp
adc
push
sub
lods
or
pusha
push
test
dec
jecxz
ja
(bad)
and
jmp
mov
jne
push
lea
mov
sbb
or
loope
push
in
addr16
add
jnp
inc
lods
retf
out
add
jp
mov
push
and
push
mov
dec
xchg
or
xchg
mov
loopne
ja
or
fist
push
cmp
retf
inc
add
add
add
pop
xchg
cmp
add
test
mov
aaa
mov
mov
sbb
test
sbb
lods
das
into
push
add
pusha
add
mov
pop
pusha
loopne
icebp
sar
jg
adc
mov
mov
fdiv
inc
mov
gs
imul
add
add
pop
adc
cmp
movs
fidivr
call
adc
in
push
or
xor
fsubr
loop
jg
shl
lods
jmp
jle
mov
jl
lock
loope
mov
iret
xchg
cs
jge
sub
fidiv
push
fwait
jne
push
je
and
jne
push
aaa
mov
pop
mov
fnstcw
add
fisttp
mov
enter
jne
test
jb
cmp
or
cmp
mov
or
sbb
pop
xchg
jle
push
cmp
popf
pop
leave
test
dec
leave
xchg
stos
aaa
add
arpl
xor
or
sub
jl
add
sahf
jne
jge
cmps
int3
ss
mov
push
sub
test
adc
push
pop
inc
jp
jne
cmps
call
cmp
push
mov
inc
adc
mov
inc
sub
das
pop
arpl
mov
hlt
mov
xor
jae
xor
sbb
push
mov
adc
xchg
sbb
mov
pop
aaa
or
push
dec
dec
mov
mov
jo
cmp
cmp
mov
icebp
ret
mov
inc
sti
push
dec
adc
and
std
loopne
mov
aad
mov
xlat
gs
xor
add
pushf
mov
sbb
add
push
mov
stos
js
jne
xor
data16
or
push
ja
int3
test
mov
shl
enter
or
sbb
out
add
nop
cmp
(bad)
int3
test
xchg
ror
pop
ins
lods
mov
adc
sbb
cmp
pop
jb
dec
push
push
jg
mov
unpckhps
cwde
push
call
mov
test
sbb
(bad)
(bad)
sub
test
lea
add
add
mov
push
lea
mov
mov
inc
push
das
xchg
adc
ret
inc
mov
fisttp
add
lea
push
(bad)
test
fimul
cli
inc
dec
pushf
bound
or
sbb
in
jge
retf
call
inc
inc
pop
es
inc
int
mov
push
xor
lahf
ror
shl
dec
loop
push
clc
jl
mov
inc
pop
loope
das
sbb
push
or
ror
das
xor
xor
xchg
or
ins
mov
test
or
and
int
repz
or
ret
or
push
sub
or
stc
and
mov
adc
mov
test
pop
je
mov
jle
aam
ret
mov
or
call
jns
push
sub
push
call
test
test
xchg
rcl
in
fcomp
adc
xchg
pushf
inc
enter
mov
cmc
sbb
push
or
xchg
nop
popa
add
push
cli
(bad)
and
push
int3
daa
lods
loop
shr
aad
sub
cmp
jmp
ds
jb
and
jb
mov
shl
or
jne
add
add
xchg
adc
mov
jmp
mov
mov
xlat
ins
pusha
mov
add
jae
lds
or
xchg
adc
jg
sbb
add
push
add
and
push
jnp
test
in
add
sbb
loope
cmp
adc
rol
push
mov
aam
fcomp
xor
mov
add
add
btc
mov
jns
xchg
inc
xchg
pop
nop
iret
xchg
add
sub
mov
jns
mov
sbb
(bad)
or
mov
lea
xor
sub
es
(bad)
test
sub
fistp
nop
add
mov
in
lock
mov
or
clc
push
mov
jae
call
mov
in
push
cmp
(bad)
jge
mov
rol
pop
cld
(bad)
test
add
pop
aad
and
mov
sub
cmp
fdiv
mov
pop
fcmovnb
imul
loop
mov
pop
je
inc
add
shl
rol
aam
js
(bad)
pop
mov
adc
mov
dec
popa
cmp
add
test
xor
jae
mov
enter
push
cmp
sahf
cld
jecxz
xlat
rol
int
sub
fcmovb
push
xchg
sub
adc
fnstsw
ret
lods
cmp
loope
loop
ds
mov
pop
jbe
mov
ror
clc
loope
pop
sub
mov
pop
test
push
mov
or
les
hlt
inc
cmp
fnstcw
out
push
call
test
rcl
mov
mov
xor
hlt
shl
movs
in
popa
mov
cld
push
retf
and
cmp
mov
mov
test
loope
jmp
mov
or
inc
call
lods
add
loopne
mov
call
and
pop
adc
cmp
jmp
aam
push
mov
mov
mov
cmp
mov
push
lods
retf
lods
pop
icebp
add
push
pop
push
int
test
sub
add
jne
push
fistp
xor
jne
sar
sbb
aas
fwait
xchg
movs
mov
push
xchg
and
add
pop
in
mov
jnp
inc
mov
pop
popa
jne
leave
jno
xchg
ins
pop
and
and
not
xchg
cmp
movs
sti
sbb
sahf
cmc
mov
inc
sub
in
sub
adc
jne
or
fcomi
sub
adc
push
push
popa
stc
adc
sahf
xchg
add
sbb
push
fbld
jmp
lock
add
adc
or
pushaw
(bad)
(bad)
mov
ret
je
xchg
imul
icebp
add
push
sub
or
mov
rcr
push
fnstenv
ins
popa
lock
sahf
or
adc
(bad)
jnp
inc
xchg
or
adc
call
fst
shl
pusha
add
or
mov
xchg
and
addr16
xchg
jle
dec
test
movs
or
shl
out
ds
dec
add
mov
lea
ds
lock
jmp
dec
adc
pop
add
jno
mov
mov
jne
(bad)
mov
jno
lahf
push
mov
dec
push
inc
push
push
iret
mov
addr16
ror
sbb
mov
mov
dec
repnz
rol
add
inc
mov
sub
xor
or
dec
add
popa
inc
xor
push
dec
movs
test
dec
in
and
sub
xchg
dec
xchg
jno
inc
aas
rcl
add
loop
cmp
and
sbb
int
dec
jbe
jmp
fs
sub
sti
mov
xor
add
stos
pop
push
jg
xor
and
aaa
sbb
sub
sbb
push
dec
fcomp
mov
mov
and
and
in
hlt
sub
sbb
mov
xor
pop
pop
mov
stc
lea
or
mov
sub
add
cmp
rcl
pop
dec
addr16
iret
sbb
push
sub
pusha
dec
or
cs
sbb
push
repnz
int
pop
pop
pop
icebp
lea
cmp
fwait
(bad)
push
outs
fiadd
loopne
add
stos
mov
jne
mov
mov
std
mov
push
int
sub
cs
push
inc
movs
or
call
sub
inc
leave
dec
add
sub
nop
xor
mov
mov
jp
leave
add
(bad)
mov
fidiv
jns
fimul
dec
out
sub
adc
ret
movs
xlat
sub
add
rol
or
ins
mov
push
scas
iret
loopne
clc
pop
sbb
sbb
pushf
out
sub
mov
pop
push
outs
bound
inc
inc
add
mov
clc
sub
mov
push
cdq
sbb
inc
or
pusha
xor
mov
jo
stos
push
icebp
add
movs
jl
clc
mov
loopne
(bad)
rol
adc
inc
sub
adc
or
enter
mov
xchg
ja
scas
inc
cmp
(bad)
aam
add
inc
pusha
sub
clc
push
adc
dec
leave
inc
sub
mov
test
popa
mov
add
xor
xor
ja
inc
jmp
and
and
sahf
pop
lock
fcom
shr
sub
mov
(bad)
loop
in
and
push
xor
pop
or
pop
sbb
jo
mov
je
inc
out
pop
dec
add
mov
in
in
pop
adc
mov
push
xchg
add
dec
repz
fxch
xchg
dec
inc
inc
shl
cwde
pusha
ds
jo
adc
jo
mov
daa
out
and
movs
in
sar
dec
jbe
push
pop
sub
mov
jmp
les
sahf
jae
sbb
xor
je
xchg
repnz
(bad)
pop
movs
frstor
add
pop
and
adc
sub
test
stc
pusha
rcr
lods
jo
inc
sub
inc
pushf
cmp
jmp
pusha
xor
mov
dec
pop
das
sbb
xchg
icebp
inc
(bad)
push
inc
stos
test
aad
ror
movs
(bad)
jge
shr
xchg
sbb
mov
icebp
push
imul
inc
pop
repnz
add
push
(bad)
mov
pushf
cmp
mov
out
add
adc
dec
stos
inc
push
cld
or
out
cli
test
xor
pop
jbe
xchg
je
ss
cmp
neg
daa
sub
and
inc
mov
aad
adc
js
ficom
arpl
int3
rcl
mov
test
sbb
cmps
stc
xchg
cmp
inc
repz
mov
adc
or
and
or
call
sbb
pusha
dec
xchg
dec
mov
shl
enter
mov
add
rcr
dec
(bad)
out
inc
jne
sub
add
mov
or
push
cmp
pop
jle
add
fild
jns
pop
xchg
shr
inc
xor
hlt
dec
and
sub
fsub
push
or
adc
ins
and
push
cmps
loopne
or
mov
inc
or
mov
push
sbb
xchg
shr
fidiv
xchg
out
movs
(bad)
adc
inc
dec
add
fcom
sbb
fbstp
add
and
mov
add
inc
mov
shr
movs
push
jmp
loopne
push
sub
pusha
push
mov
and
mov
or
(bad)
xchg
pop
movs
sub
jge
or
or
stc
jmp
in
xchg
xor
sub
stc
cmps
popa
and
hlt
lea
push
add
mov
lds
and
lock
nop
aam
cmc
les
sub
jle
mov
push
cmp
dec
es
fst
cwde
lds
adc
jo
pop
mov
push
cmp
cmp
sbb
fiadd
xor
add
mov
add
retf
xchg
mov
or
pop
lods
dec
sub
mov
push
pop
cwde
inc
add
push
pop
mov
push
sub
mov
popf
out
inc
inc
(bad)
jecxz
lods
add
imul
add
add
mov
jb
mov
(bad)
push
sahf
sub
adc
shl
test
pop
xor
sub
aas
and
and
jne
pusha
xchg
ins
cmp
fs
jmp
mov
or
or
in
pop
cmp
adc
add
jl
into
inc
fcom
call
in
lods
cmp
and
aam
mov
sub
mov
out
(bad)
mov
inc
mov
lds
aam
push
stc
dec
dec
adc
sbb
dec
lahf
pushf
imul
cmp
push
push
sahf
add
imul
ror
and
cmp
xchg
mov
ins
rcr
mov
aaa
push
add
push
mov
sub
mov
mov
cmp
dec
add
jbe
lea
cmp
add
ret
add
nop
mov
test
ja
pop
jl
dec
popa
popf
bound
sbb
or
add
fisub
push
and
popa
xor
and
ror
ret
rcl
daa
sub
add
je
outs
loope
retf
int
sbb
inc
pop
dec
js
xor
pop
push
fwait
or
sub
enter
stos
or
jmp
cmp
scas
sbb
pop
mov
arpl
(bad)
mov
or
jmp
xor
scas
adc
(bad)
jns
push
loopne
inc
xor
mov
lods
add
adc
sub
call
sbb
cmp
outs
mov
mov
popa
mov
leave
sbb
dec
jp
sbb
loope
pop
pusha
jge
adc
fistp
mov
retf
mov
test
scas
and
pop
add
outs
mov
dec
or
in
ret
out
popa
mov
or
test
outs
icebp
mov
pop
jmp
push
ins
clc
adc
add
mov
loopne
inc
push
adc
or
xchg
cdq
push
jne
jmp
mov
cmps
fdiv
push
outs
mov
adc
daa
or
loope
sbb
jo
js
jl
xchg
jmp
cli
inc
scas
xor
inc
push
neg
mov
das
loope
add
add
adc
xchg
mov
dec
call
sub
popf
sbb
ds
sub
pop
dec
sbb
sub
sub
xchg
loopne
mov
rcl
push
add
cmp
xor
sar
dec
mov
pop
inc
xchg
out
adc
mov
xor
and
mov
and
aas
jo
movs
mov
mov
(bad)
add
mov
sub
dec
or
dec
mov
cmp
ret
cmp
xor
(bad)
or
dec
and
mov
std
inc
mov
lock
out
or
retf
push
sub
std
(bad)
add
mov
sbb
pusha
sbb
push
cmp
dec
dec
inc
or
push
adc
push
lea
jge
xchg
test
mov
shl
fisub
test
and
rol
add
cdq
sbb
mov
imul
or
dec
call
xor
inc
adc
xchg
mov
push
popa
adc
movzx
sbb
pop
int
into
add
cmp
inc
and
popa
jno
push
mov
xor
shl
adc
or
and
adc
dec
push
addr16
push
jmp
ret
lea
add
sub
mov
bound
adc
mov
daa
push
aas
sub
xor
mov
add
mov
or
in
dec
cmp
add
les
mov
push
call
ins
xor
ror
jbe
inc
fdiv
push
mov
xchg
inc
xor
sub
jae
dec
xor
ficomp
add
fidiv
mov
mov
pop
push
push
sub
mov
aaa
mov
mov
imul
and
sub
arpl
clc
test
loop
mov
ror
(bad)
mov
lods
jge
sub
inc
xor
(bad)
shr
sub
add
push
clc
add
jecxz
icebp
mov
(bad)
loopne
or
jo
dec
retf
mov
cld
loopne
aam
aam
cs
cmp
sti
push
add
xor
shr
jo
lods
(bad)
lock
jmp
or
pop
sub
pop
shr
mov
jmp
int
jne
sbb
mov
cs
dec
call
inc
push
arpl
xchg
in
sbb
imul
fcom
jle
retf
inc
jl
inc
pop
enter
data16
ss
aas
inc
mov
cmp
mov
sbb
ret
push
sub
neg
and
add
adc
and
sbb
and
mov
and
inc
ror
popf
inc
add
jl
mov
call
xor
adc
call
xor
int
pop
push
jl
pop
dec
sub
mov
mov
mov
xor
jae
push
pop
sub
push
push
out
in
sub
shl
add
jp
dec
mov
jns
dec
shl
sbb
push
pop
dec
mov
test
add
out
fdiv
aad
div
or
mov
jnp
daa
ror
inc
xchg
ret
les
xor
add
pop
jbe
inc
push
push
fs
lods
mov
xor
xor
or
into
adc
xchg
ja
ss
imul
jecxz
adc
push
lahf
jne
mov
and
pop
sbb
inc
adc
push
sub
or
sub
cmp
pusha
pop
or
rol
ret
sub
pop
popf
aad
add
shr
pop
dec
sub
push
rcl
(bad)
rcr
or
(bad)
test
hlt
in
xchg
nop
sbb
xchg
jmp
cld
mov
jnp
pop
leave
inc
and
add
xor
xchg
push
outs
adc
adc
dec
adc
pop
aas
push
mov
xor
mov
mov
add
pop
shl
mov
mov
repnz
mov
sub
dec
int
or
movs
rol
push
and
xor
aas
dec
shr
xchg
rcl
inc
lea
cmps
je
mov
cmp
in
inc
dec
and
sbb
popa
cmp
xlat
dec
and
jo
and
retf
mov
or
movs
test
and
es
mov
mov
push
imul
aam
lock
sub
pop
es
aaa
cmp
sub
iret
add
pop
dec
adc
daa
sbb
cmp
pop
leave
test
dec
mov
and
pop
xchg
inc
aaa
movs
cmps
mov
inc
add
das
mov
sbb
rcl
fsub
and
xor
cmps
adc
(bad)
outs
push
lods
imul
in
clc
inc
movs
inc
adc
sub
int3
ds
mov
cmp
add
fidivr
fidivr
pop
sub
arpl
adc
xchg
mov
add
or
ffreep
ins
add
push
add
and
pusha
mov
sbb
repnz
xchg
cmp
mov
xor
mov
sub
jmp
les
mov
push
sbb
fs
ins
jmp
inc
ins
mov
push
mov
je
inc
adc
cs
push
xor
fisttp
add
dec
ins
mov
mov
dec
xchg
or
inc
sbb
test
repz
mov
lahf
ret
es
clc
mov
lock
push
push
mov
nop
inc
shr
xchg
sbb
or
(bad)
shl
enter
push
(bad)
or
mov
mov
push
sub
in
cmp
in
in
or
out
bnd
or
mov
ss
mov
push
add
call
mov
dec
cmp
inc
sbb
or
mov
dec
add
xchg
sbb
(bad)
call
jmp
imul
mov
and
outs
inc
in
adc
xchg
addr16
out
(bad)
push
hlt
mov
adc
sub
int
mov
shl
js
ins
mov
xchg
dec
loopne
in
loopne
sub
inc
jo
lock
add
push
inc
cwde
sub
xchg
cmps
push
test
jmp
or
dec
mov
adc
mov
inc
call
add
(bad)
jno
pop
pop
ss
mov
xchg
fdiv
aam
pop
test
mov
jnp
(bad)
push
and
je
add
loop
das
mov
add
call
leave
or
inc
and
cmps
fld
cld
fnsave
push
sbb
dec
pusha
fwait
nop
add
(bad)
neg
inc
fistp
sbb
jbe
call
stos
clc
fsub
mov
sub
cmp
push
inc
fmul
(bad)
fmul
dec
fcomp
fcomp
push
daa
sub
daa
pop
dec
jnp
mov
cmp
sub
inc
sbb
cmp
sbb
test
add
lahf
push
adc
xchg
sahf
mov
mov
and
mov
lods
fmul
cmp
push
jl
mov
in
call
inc
jg
xchg
sub
sbb
push
push
call
and
sbb
adc
sbb
add
nop
mov
rcl
sar
aam
rcl
inc
or
sub
addr16
cmp
mov
adc
inc
add
push
add
fs
aas
sbb
pusha
sub
or
jle
adc
rcr
mov
inc
adc
mov
sbb
add
jnp
lea
sbb
sub
mov
test
sbb
and
jne
and
pop
inc
cmps
cmp
arpl
sub
rcr
add
sub
and
add
repnz
sub
xchg
or
pop
cmp
inc
xchg
fild
add
mov
cmp
out
std
ins
mov
je
ins
xchg
pop
mov
jbe
cdq
cwde
add
adc
jl
test
add
(bad)
icebp
push
add
(bad)
ret
sub
add
mov
and
(bad)
sub
nop
mov
inc
cmp
(bad)
sbb
ins
sub
add
js
mov
xor
jb
mov
pop
retf
push
inc
(bad)
daa
dec
push
add
or
add
cmp
push
mov
mov
and
and
xor
sub
arpl
jmp
mov
mov
mov
mov
scas
lahf
cmps
daa
or
inc
add
adc
cmps
shl
pop
adc
fisttp
pop
mov
jmp
imul
sbb
inc
stos
cdq
or
add
adc
dec
add
add
or
movs
mov
add
add
pop
dec
fidivr
test
push
jecxz
or
mov
and
jl
sar
jmp
dec
and
add
sbb
outs
or
pop
add
add
imul
cdq
mov
pop
sub
scas
aaa
jg
push
cmp
movs
push
or
cmps
jne
nop
sbb
pop
adc
shr
fimul
leave
adc
jne
sub
lea
mov
push
test
adc
dec
xchg
loope
or
leave
inc
sbb
sub
popf
cmp
addr16
sub
mov
dec
shl
push
add
xchg
(bad)
imul
mov
test
cmp
push
or
cmc
adc
jg
add
xor
adc
addr16
and
je
scas
test
in
loop
les
movs
imul
dec
ret
mov
addr16
pop
sbb
push
popa
cdq
fs
push
sbb
xchg
(bad)
jmp
and
popf
enter
push
and
cmp
(bad)
call
rol
and
outs
and
xchg
jno
(bad)
mov
sahf
ins
and
mov
xor
loop
in
xchg
jb
and
and
ficom
push
mov
mov
adc
xchg
adc
add
ret
(bad)
dec
dec
pop
or
push
add
mov
cmp
icebp
add
adc
lahf
repnz
or
pop
cld
mov
push
xor
aas
mov
push
aas
clc
xchg
or
add
and
and
loope
sub
sbb
inc
mov
mov
dec
lahf
mov
std
outs
adc
lea
pusha
add
xchg
inc
js
lods
pop
dec
inc
clc
add
cmp
adc
mov
inc
cmp
add
pop
movs
outs
nop
mov
movs
test
les
cmp
lods
add
es
repnz
enter
icebp
jb
dec
xor
ins
aam
mov
mov
or
dec
dec
sbb
sbb
lods
sbb
pop
xlat
pushf
int
dec
scas
mov
icebp
fnsave
cmp
mov
pop
fidivr
loope
cmp
push
bound
data16
sbb
js
mov
push
loopne
sub
mov
add
scas
inc
jg
out
fwait
adc
sub
xchg
stos
popa
xor
push
les
and
inc
add
pop
jae
fbstp
xor
and
and
add
jno
xlat
rep
push
cmps
lds
clc
pop
dec
dec
mov
stos
or
les
adc
or
adc
xchg
adc
add
je
cmp
jo
jmp
add
(bad)
aam
call
inc
les
sar
adc
out
add
dec
call
xchg
(bad)
in
rcl
adc
int
dec
data16
pop
adc
dec
and
rcl
jo
fwait
call
movd
mov
shl
mov
push
mov
jge
pop
out
cmp
loope
mov
and
test
int3
adc
add
pop
push
mov
ja
inc
mov
aam
nop
mov
xor
push
test
adc
in
sahf
mov
fdiv
add
sar
or
adc
mov
add
jns
call
adc
or
jmp
dec
sub
shl
test
add
xchg
lahf
or
pop
mov
ss
pop
movs
push
test
mov
cmp
push
push
fstp
test
loopne
push
imul
sbb
mov
mov
cmp
mov
push
or
pop
imul
and
retf
inc
mov
push
jmp
(bad)
jmp
out
and
jl
js
mov
push
(bad)
(bad)
jo
xchg
pop
std
mov
call
retf
arpl
jl
or
aad
out
pop
int3
das
mov
pop
rol
ds
pop
test
loope
sbb
in
pop
mov
test
out
and
add
xor
pop
push
dec
inc
daa
inc
and
add
pop
inc
shl
mov
mov
dec
push
movs
push
mov
inc
mov
jo
jne
sub
mov
jnp
(bad)
cmp
jge
xchg
add
and
mov
or
cmp
jns
dec
xor
dec
add
outs
dec
adc
sub
adc
push
inc
rcr
dec
inc
loopne
jno
pop
inc
mov
or
inc
sbb
add
mov
pop
(bad)
mov
push
mov
jle
pop
or
xor
in
out
leave
dec
imul
test
pop
je
cmp
out
shl
xor
call
inc
push
push
xchg
movs
or
div
shr
mov
sbb
in
sbb
and
add
enter
and
retf
push
fcmovne
sub
push
push
aaa
lods
or
sub
push
pop
pop
push
sbb
sbb
add
movs
adc
or
sti
rcl
or
loope
and
and
movs
mov
xchg
mov
lds
and
outs
cmps
add
push
mov
cmp
mov
xchg
or
mov
mov
and
cmp
outs
jnp
jl
sub
add
xor
iret
cld
inc
arpl
add
dec
daa
and
sbb
int3
repz
or
dec
or
pop
sbb
dec
xor
and
mov
xor
pusha
sbb
pop
pusha
mov
test
sub
clc
jp
inc
sub
push
into
cmp
sub
es
and
in
cmp
xchg
xchg
add
cmp
ret
xchg
sar
xlat
dec
cmp
mov
inc
movs
mov
or
xchg
pop
xor
push
lahf
mov
ins
mov
xchg
push
pop
ret
pop
and
pop
cs
jo
pop
push
and
or
pop
add
add
sub
sub
pop
xor
sbb
aas
mov
stc
nop
lea
xor
mov
mov
(bad)
pop
out
mov
sar
pushw
or
mov
xchg
je
daa
adc
sub
add
xchg
add
push
add
out
mov
cmps
add
sub
adc
push
add
mov
adc
xor
mov
aad
or
sti
pop
popa
or
mov
test
cwde
mov
adc
push
inc
mov
add
inc
push
ret
pop
mov
movs
nop
test
sbb
pop
dec
dec
xor
aam
adc
push
fidiv
pop
cmp
or
aad
repz
add
and
lock
fbld
mov
mov
fist
shl
sub
rcr
inc
enter
arpl
and
push
adc
stos
add
cmp
and
and
xchg
int3
jno
cmp
and
sti
mov
inc
or
dec
cs
cmp
or
xor
dec
xor
rol
push
mov
push
fdivr
mov
jae
and
and
or
scas
mov
in
es
mov
adc
push
adc
mov
test
cmp
mov
clc
bound
cmp
add
fstp
adc
inc
sub
dec
scas
inc
or
add
sub
sbb
rcr
adc
add
add
sub
test
loopne
and
or
push
les
cmp
mov
ficomp
mov
pop
adc
retf
push
jo
(bad)
push
mov
mov
ja
mov
loope
dec
or
and
pop
in
repz
imul
jp
dec
jbe
add
xchg
test
mov
or
cs
vrsqrtss
add
xor
cmp
xor
push
pusha
or
xor
cli
and
enter
pushf
xor
pop
cwde
pop
cmps
icebp
sbb
mov
mov
pop
xor
icebp
push
retf
or
(bad)
jmp
sub
in
add
mov
leave
add
dec
and
in
mov
clc
ins
or
jo
lods
add
shr
inc
or
add
fdivr
jb
sub
mov
inc
bound
scas
jno
pop
stc
adc
imul
or
sahf
ret
(bad)
icebp
gs
(bad)
dec
cmps
movs
pop
mov
or
inc
mov
ficomp
jae
mov
dec
adc
jecxz
cmp
dec
(bad)
cmp
pop
sbb
mov
add
add
jecxz
popf
inc
mov
sub
push
mov
repz
daa
add
rcl
(bad)
push
and
add
add
retf
xor
pop
ficom
or
xchg
add
xchg
or
(bad)
jp
add
(bad)
addr16
jbe
add
fcmovnb
enter
jmp
enter
inc
sub
xor
sub
jbe
push
or
jne
mov
je
jbe
ret
sub
lea
inc
or
or
and
xor
(bad)
shl
xor
sbb
mov
or
test
mov
fs
in
scas
jo
add
cmp
and
xor
push
add
jae
pop
push
(bad)
mov
pop
pop
adc
adc
xor
sub
push
imul
data16
fcomi
loop
xor
and
int3
(bad)
mul
cmp
mov
out
cmps
mov
sbb
add
test
rcr
inc
jno
cmps
mov
jbe
add
push
cmp
rol
stos
xor
sbb
ret
clc
sub
jae
add
or
add
retf
dec
adc
mov
xchg
pusha
pop
add
loopne
out
or
loopne
and
mov
or
jg
mov
xchg
cmp
inc
jb
popa
aas
in
cld
add
enter
sub
adc
mov
or
dec
sar
dec
sbb
adc
xor
out
cmps
fisttp
ret
pop
push
lock
dec
call
mov
arpl
mov
ins
sub
mov
xor
dec
add
ins
push
lea
cmp
jne
retf
and
mov
mov
cmps
mov
je
outs
add
sbb
icebp
sub
mov
add
inc
js
adc
push
mov
and
ror
mov
and
pushf
jbe
xor
lahf
loopne
add
stos
jecxz
add
int3
lock
adc
mov
adc
and
arpl
dec
nop
out
les
dec
mov
bnd
push
adc
mov
cmp
dec
das
xchg
adc
aam
rol
pop
mov
push
mov
jecxz
fwait
jecxz
xor
add
jecxz
xor
sub
dec
loope
add
mov
fnsave
xor
leave
inc
sbb
xchg
arpl
push
lahf
push
pop
dec
iret
cmp
cmp
gs
mov
dec
adc
pushf
test
xchg
aaa
cmp
outs
sub
dec
push
add
and
jne
jecxz
mov
xchg
ds
test
je
lea
dec
jle
pop
cmp
dec
mov
clc
inc
pop
push
mov
inc
mov
mov
gs
cmps
in
aaa
movs
clc
pop
mov
and
mov
jmp
(bad)
xchg
jo
test
cs
push
fsubp
leave
inc
inc
add
leave
or
and
fild
push
sbb
sbb
sbb
cmovl
adc
dec
xor
mov
retf
jg
and
inc
sar
sub
cwde
mov
push
xchg
dec
adc
daa
scas
pop
add
pop
or
pop
popa
add
push
push
adc
xor
movs
movs
(bad)
stos
and
xor
or
test
js
ror
aas
or
inc
fsubr
fnstenv
pop
mov
inc
adc
repz
sbb
xchg
outs
loope
jne
mov
or
inc
call
mov
push
cld
mov
not
shr
pushf
popa
adc
sbb
mov
sbb
add
xor
mov
add
nop
adc
and
dec
dec
push
sub
popa
or
stc
sbb
jno
movs
and
pop
xchg
stos
and
fadd
inc
sti
pop
inc
scas
nop
retf
xchg
pusha
dec
out
ins
js
cmp
mov
adc
xchg
popa
popf
xchg
push
je
cs
pop
xchg
xchg
sbb
rcr
stos
jo
sbb
sbb
xchg
xchg
cmp
and
mov
sbb
ja
jmp
ret
and
sbb
jge
or
xor
or
mov
aas
adc
aad
dec
test
inc
xchg
adc
sub
mov
clc
push
dec
xchg
rol
and
and
xor
arpl
push
xchg
and
shl
dec
add
mov
jbe
and
push
jmp
push
cmp
mov
add
mov
push
call
push
sbb
jo
in
jns
sbb
mov
adc
test
or
ins
mov
ins
dec
jmp
int3
mov
rcl
or
push
add
fcmovne
sbb
mov
dec
push
push
jbe
mov
and
or
and
add
sub
add
sbb
sbb
inc
dec
dec
sub
or
pop
add
lods
xor
enter
jp
pop
xor
and
mov
xchg
data16
push
iret
(bad)
fisub
adc
add
and
rcr
adc
mov
dec
inc
popa
and
mov
imul
lods
pop
ins
or
and
lods
cdq
or
aad
lods
push
movs
add
sbb
ins
cmp
sbb
movs
or
movs
dec
inc
adc
nop
add
scas
pop
pop
mov
lea
loope
mov
dec
adc
push
clc
dec
jecxz
dec
xchg
inc
adc
lock
inc
push
test
or
ss
hlt
mov
jle
jmp
inc
adc
dec
mov
(bad)
sti
movs
imul
sub
shr
mov
push
mov
sbb
leave
pop
push
jo
enter
adc
pop
jmp
loopne
fild
mov
je
stos
dec
cmps
nop
imul
aam
outs
push
inc
cmps
imul
in
cmp
hlt
std
push
adc
pop
push
and
repz
jmp
and
mov
out
inc
and
rdmsr
shl
jns
out
stc
add
cli
data16
sti
push
xchg
es
dec
jnp
int3
int3
xlat
cmp
popf
das
test
push
imul
dec
jne
aaa
inc
adc
jmp
mov
shl
idiv
stos
imul
xor
and
leave
add
clc
adc
xchg
xchg
jmp
aas
add
push
out
je
aam
cwde
pop
daa
adc
pusha
push
push
sti
mov
jo
pop
shl
mov
push
push
xchg
add
and
jne
fmul
adc
test
xor
ss
cmp
mov
inc
cdq
sbb
xor
pusha
lea
inc
test
jecxz
fisttp
mov
adc
sbb
inc
repnz
inc
and
pushfw
mov
sbb
xor
and
add
hlt
and
push
retf
jmp
xchg
sbb
add
(bad)
es
pusha
mov
lods
sub
ins
call
hlt
movs
sub
and
jmp
arpl
sbb
je
cmc
sbb
je
cmp
dec
nop
add
dec
mov
mov
dec
add
jge
push
out
fmul
push
rcr
push
and
pusha
sub
ins
lahf
movs
xchg
inc
maxps
lods
or
aaa
dec
xchg
bound
inc
ret
jbe
cmp
xchg
mov
out
sar
add
mov
loope
or
inc
add
int3
cmp
jbe
xchg
aad
push
icebp
std
adc
push
cmp
jge
sbb
or
scas
push
out
in
clc
push
sar
add
inc
nop
popa
test
xchg
hlt
xor
push
imul
test
cld
test
aad
mov
add
ret
lods
ins
sub
mov
daa
sub
mov
push
or
jge
aad
or
cdq
pop
ret
add
push
inc
loopne
mov
adc
shr
dec
fadd
test
mov
pop
mov
(bad)
pop
mov
mov
adc
into
sbb
scas
cmp
inc
cmp
sahf
jmp
aas
inc
mov
out
mov
mov
inc
mov
data16
mov
jae
sub
xor
mov
cmp
ret
or
cwde
push
push
mov
and
xchg
dec
xchg
out
adc
xrstor
pop
dec
rol
inc
push
xor
in
add
adc
add
loopne
or
pop
dec
hlt
or
int3
mov
and
mov
jmp
aam
add
jns
and
xchg
ret
test
sub
repnz
retf
sbb
lea
push
fldcw
scas
outs
add
adc
cmp
inc
jl
ror
idiv
pop
pop
sub
push
ds
enter
and
cmp
test
push
or
inc
jp
push
repnz
and
xor
xor
sti
das
ds
mov
fidiv
mov
adc
stc
sbb
jns
loope
or
cmp
jge
jge
outs
jbe
pushf
fiadd
mov
int3
push
jg
mov
mov
sbb
test
push
and
lods
jo
inc
mov
mov
loope
ds
shl
ret
dec
push
push
lock
div
ficom
mov
jle
jbe
inc
xchg
lock
inc
add
xchg
pushf
hlt
xor
or
sub
sbb
mov
ins
mov
mov
(bad)
jmp
cmp
enter
add
mov
sub
push
repnz
retf
test
pop
xor
ror
cmp
in
lods
les
nop
pop
stc
push
inc
leave
sub
fiadd
fstp
push
fidivr
inc
aas
jb
adc
ficomp
lahf
cmp
imul
mov
cmp
cwde
xchg
arpl
pop
sbb
cmp
fxch
rcl
push
push
push
or
gs
add
xor
leave
(bad)
jmp
adc
xchg
pop
add
mov
aad
or
dec
pop
or
ins
sub
cs
push
mov
cmp
sub
lds
mov
shr
jne
sbb
mov
inc
jbe
cmp
outs
adc
hlt
add
pop
or
dec
sub
sbb
shl
add
adc
pushf
rol
push
mov
and
stos
retf
mov
sbb
cwde
and
add
dec
test
sbb
xchg
cmc
daa
pop
sub
xchg
and
xor
in
adc
inc
cmp
add
shl
cmp
loopne
xchg
std
shr
cmp
icebp
dec
in
adc
test
cmp
sbb
aam
inc
(bad)
popa
or
cmps
mov
xor
ds
cmc
es
sbb
cwde
nop
xchg
xchg
inc
and
xor
out
mov
shl
inc
xor
and
das
and
jl
cmp
jae
add
dec
add
mov
push
sub
mov
sub
hlt
sti
xor
sahf
jg
ret
rcl
or
push
or
fiadd
pushf
inc
mov
adc
pusha
pop
inc
jmp
dec
enter
jb
call
xchg
sub
mov
in
out
popa
or
daa
cdq
cmp
inc
sbb
push
adc
push
js
mov
cwde
in
scas
arpl
add
sbb
shl
sub
mov
xchg
repz
mov
and
movs
fs
add
cmp
or
jne
mov
fstp
inc
add
inc
pop
movs
call
and
mov
sub
lock
in
fadd
fadd
push
pop
lods
sbb
mov
push
shl
pop
pop
dec
xchg
and
je
dec
vmread
mov
jb
push
ret
and
xor
xlat
pop
mov
sbb
mov
mov
lods
stos
popf
xchg
xor
cmovg
pop
fisubr
inc
xchg
cmc
push
clc
ret
pop
pop
or
mov
or
inc
je
test
mov
add
into
jmp
rol
inc
or
lahf
and
out
and
cwde
imul
test
or
inc
xchg
push
cmp
dec
and
or
mov
(bad)
push
lock
imul
fcom
mov
add
and
ror
movs
add
pop
pop
js
rcl
sub
in
pop
or
push
lahf
inc
and
mov
sub
sbb
xor
mov
sub
jo
cmp
push
rol
lods
jno
push
mov
lods
and
and
lahf
jnp
test
cmp
pop
inc
(bad)
jecxz
pop
mov
xchg
data16
lods
or
jecxz
rcl
fs
inc
push
push
inc
aas
mov
gs
push
add
sbb
(bad)
pop
mov
cmp
out
pop
jp
jbe
push
cmp
cmp
push
cli
jb
jmp
push
dec
sbb
lods
pop
add
sbb
and
inc
sub
add
icebp
push
push
add
mov
or
and
test
or
stc
mov
jne
pop
inc
inc
adc
pop
rcl
sbb
fild
dec
mov
pusha
sub
cmp
xlat
imul
sti
outs
adc
jo
jae
sbb
jb
imul
cmc
add
dec
(bad)
(bad)
retf
das
rcr
and
nop
push
xor
xchg
or
add
jne
mov
pop
mov
dec
jns
add
repz
rcl
dec
push
outs
push
(bad)
cmp
je
mov
lock
adc
push
and
push
xor
enter
push
mov
leave
or
adc
sbb
adc
cli
icebp
in
jbe
inc
push
test
adc
les
or
or
jl
(bad)
mov
lock
jecxz
push
push
xor
push
cld
rcr
push
aaa
push
les
cmp
jb
push
sbb
je
push
push
pop
inc
in
ss
sub
fcmovu
ret
add
test
inc
add
xor
add
dec
loop
push
imul
mov
pop
imul
add
mov
and
mov
movs
mov
mov
movs
and
cmps
sbb
stos
dec
aam
(bad)
les
adc
xchg
ds
movs
je
or
dec
inc
fst
push
jne
jne
pop
pop
adc
loope
je
add
and
idiv
or
cmp
mov
pusha
movs
mov
and
and
outs
bound
pop
push
adc
sub
inc
and
mov
push
pop
mov
mov
mov
push
xchg
add
sub
test
ins
int
jo
or
xchg
(bad)
push
and
fs
das
dec
push
cmc
pop
ja
and
into
lock
pop
adc
add
mov
je
jl
aam
mov
out
adc
or
push
sub
imul
adc
add
sbb
sub
cmp
push
jl
scas
fwait
pop
lock
lahf
test
inc
add
inc
xor
pop
inc
xor
pop
adc
adc
push
cld
adc
adc
retf
iret
push
push
and
ret
or
mov
mov
out
mov
outs
lock
pusha
or
mov
lea
inc
mov
shl
lea
xchg
(bad)
out
(bad)
and
rcr
mov
mov
xor
cwde
mov
into
lods
sbb
push
sbb
push
adc
pushf
sbb
ja
mov
out
(bad)
cmp
test
dec
and
into
jl
ss
adc
pop
sub
xor
jne
push
inc
or
push
push
mov
daa
cmp
and
push
pop
xchg
daa
xor
mov
lahf
test
repnz
dec
or
xchg
popa
or
inc
mov
mov
jo
dec
mov
popa
bnd
or
div
adc
xor
ror
dec
cwde
inc
push
adc
jmp
add
xor
(bad)
in
fimul
and
iret
and
and
or
jne
je
test
pop
mov
or
add
jg
sbb
push
sbb
mov
and
loope
adc
nop
or
sbb
xchg
sbb
xlat
add
gs
push
add
push
inc
dec
pop
and
ss
mov
push
sbb
lods
mov
sub
das
mov
aaa
jne
imul
inc
pusha
pop
inc
std
ror
jbe
pop
pop
inc
add
cmp
jb
xchg
dec
or
pop
rcl
or
setbe
adc
push
inc
add
sbb
lock
xchg
sub
ret
mov
shr
cld
push
repz
add
stos
mov
test
cmp
and
and
cmp
mov
cs
sub
nop
retf
hlt
gs
jl
or
cmp
inc
mov
js
xor
sbb
jns
cwde
loopne
mov
and
mov
add
ja
fadd
jle
jle
mov
mov
pop
(bad)
sahf
(bad)
mov
sbb
mov
sub
js
dec
inc
sub
cmp
dec
or
int3
fsubr
or
jle
mov
push
jl
lods
sub
push
push
and
push
and
cmp
push
popa
xchg
icebp
mov
add
xchg
je
test
mov
data16
dec
fmul
xchg
shl
stos
adc
push
pushf
push
hlt
add
stc
jo
xchg
out
push
ins
in
push
jns
test
mov
gs
lea
sbb
test
sbb
adc
inc
movq
xor
mov
cld
mov
dec
mov
fldcw
icebp
lea
test
out
or
inc
mov
jmp
fild
xchg
jmp
dec
jb
jb
in
repz
cdq
or
mov
adc
pop
pop
push
xor
xchg
pop
mov
imul
and
test
mov
jp
aad
pop
lahf
xchg
sti
inc
sbb
cmp
nop
in
aas
add
pop
imul
jp
mov
jecxz
add
cmc
cmp
jae
icebp
push
fsub
xlat
adc
mov
pop
adc
jns
xor
add
nop
or
movs
(bad)
aas
fidiv
cmp
fidivr
nop
sbb
aam
inc
dec
jb
fsub
loopne
in
cmp
loop
sbb
jg
lock
test
clc
ss
cmp
sti
ret
fdiv
add
out
retf
jbe
add
jp
or
not
daa
push
and
sahf
out
nop
mov
shl
ds
out
lock
jno
push
cmp
jns
xchg
sub
ja
add
popa
dec
test
nop
sahf
iret
mov
xchg
ret
or
imul
mov
cs
ds
ds
mov
jns
and
add
pop
(bad)
call
jnp
add
sub
dec
sar
inc
aam
mov
fistp
inc
xchg
cld
fiadd
push
add
and
cmp
imul
ins
add
outs
dec
inc
cmps
add
imul
je
ins
or
arpl
jb
arpl
cmp
jae
and
outs
or
jne
test
inc
inc
dec
cmp
ret
jmp
sub
ins
je
jne
imul
ins
ins
pop
inc
imul
movs
push
pop
inc
outs
arpl
gs
push
popa
das
mov
outs
imul
fs
imul
imul
push
out
sar
add
push
ins
add
imul
outs
fs
or
jb
bound
mov
pop
push
push
gs
inc
push
out
push
sbb
jmp
imul
jl
push
dec
or
outs
outs
ja
cdq
cmp
outs
and
arpl
popa
cmp
cmp
push
dec
hlt
or
push
popa
jns
outs
gs
mov
addr16
mov
and
push
push
push
cwde
cmp
dec
add
aas
and
mov
jbe
mov
loop
pop
jl
add
or
sub
bound
and
dec
push
in
ffree
ds
pop
ja
sbb
xlat
sub
push
push
daa
inc
jae
dec
inc
ins
jae
pop
sub
mov
push
mov
inc
gs
ins
jne
push
mov
adc
adc
inc
fmul
mov
js
movs
ja
push
rcr
add
(bad)
leave
ret
test
loopne
cmp
mov
pop
add
int
cmp
enter
cld
sub
iret
repz
or
push
sbb
add
pop
int3
sahf
out
fidivr
inc
dec
push
push
pop
jns
out
pop
pusha
fs
out
jl
test
mov
jns
out
movs
test
mov
iret
jnp
jmp
push
rol
iret
repz
int3
rcl
fdiv
cmp
repz
in
in
out
sahf
int
sub
sahf
out
sahf
cmp
jo
mov
cmp
mov
lock
push
je
cmp
repz
mov
jns
int
das
or
sbb
fwait
out
sahf
dec
push
or
iret
repz
dec
jo
enter
lock
xor
push
xor
and
jmp
dec
jae
fs
popa
call
retf
fwait
xchg
imul
jae
fs
ins
inc
imul
inc
data16
jbe
stc
mov
fld
dec
(bad)
ins
sbb
add
xchg
pop
je
ss
jb
mov
daa
adc
seta
pop
lods
or
sub
and
sbb
ds
cmp
and
cmp
js
test
mov
pop
sub
out
or
pop
push
not
das
and
scas
sub
cmp
sub
sub
pop
sahf
out
mul
jl
cmp
repz
mov
addr16
cmp
inc
cmp
push
clc
pusha
jbe
je
daa
add
bound
adc
jns
outs
data16
lock
ins
stos
dec
sub
jae
mov
xor
or
fs
std
or
sbb
pop
jbe
cli
es
mov
pusha
lds
in
adc
xor
jne
je
arpl
test
fdiv
jb
jae
jg
sub
mov
sbb
sbb
imul
jne
mov
xor
outs
pusha
ins
popa
jo
gs
lock
inc
or
add
jns
rcr
fs
je
outs
inc
sub
jle
pusha
inc
dec
push
push
push
push
dec
ja
sub
adc
pop
mov
xchg
pop
pop
adc
outs
ins
mov
cmc
aaa
jae
out
dec
xor
aaa
cmp
aam
mov
and
pop
test
dec
or
fld
xor
jns
jo
test
fsubr
cmp
mov
mov
inc
nop
aaa
sbb
cmp
inc
mov
sbb
dec
pusha
sbb
sbb
scas
pop
push
and
add
in
test
mov
push
scas
mul
and
push
and
sub
and
xchg
jo
and
mov
ss
inc
ins
or
fisub
sub
mov
push
pusha
sbb
mov
mov
arpl
popf
ds
fild
paddd
bound
and
add
push
add
ja
add
add
add
sub
and
push
pop
lock
xor
mov
or
pusha
int3
cmp
inc
add
js
sub
add
out
xor
add
add
cmp
mov
test
clc
out
ss
mov
pop
(bad)
daa
push
and
mov
data16
retf
sub
jb
int3
push
and
ja
jo
outs
jne
sub
or
inc
or
sbb
in
test
adc
pop
(bad)
imul
inc
rcr
push
popa
cmc
mov
ret
icebp
sub
cmp
jg
push
xchg
stc
adc
adc
nop
gs
sub
(bad)
xlat
add
call
daa
dec
lahf
xchg
add
xchg
call
cli
lds
enter
lods
jmp
fld
into
aam
clc
(bad)
jg
arpl
sbb
jo
fild
ds
jg
(bad)
inc
int
or
data16
cmp
add
inc
pop
and
dec
ret
pop
ror
(bad)
(bad)
inc
stos
jl
and
or
les
xchg
and
sbb
std
(bad)
(bad)
(bad)
ficom
mov
stos
pop
(bad)
or
add
rcl
mov
sub
(bad)
(bad)
(bad)
inc
and
mov
push
test
mov
pop
loopne
fadd
inc
(bad)
cld
rol
sar
dec
xor
inc
dec
in
and
mov
jb
in
je
pop
ror
sub
shl
sti
test
pop
popa
dec
(bad)
(bad)
jmp
sbb
push
add
xor
das
out
daa
push
arpl
jmp
or
out
lock
pop
adc
outs
sbb
inc
xor
inc
lods
add
jb
stc
aad
(bad)
(bad)
(bad)
call
xchg
cmp
lods
push
fidiv
mov
mov
dec
dec
jecxz
push
adc
sub
and
sub
mov
repnz
adc
fsub
(bad)
(bad)
(bad)
jge
cmp
cdq
sbb
sbb
xchg
add
adc
xchg
(bad)
mov
push
or
mov
sbb
and
xchg
cmp
int3
mov
jmp
es
(bad)
(bad)
call
outs
or
jno
push
dec
mov
push
jg
cmp
js
test
lock
(bad)
fld
(bad)
(bad)
(bad)
push
gs
dec
sub
loopne
ins
ret
push
iret
leave
xchg
daa
push
stos
loop
daa
out
pushf
cmps
mov
(bad)
(bad)
(bad)
jg
dec
shr
hlt
lock
jg
ins
or
add
inc
ret
pop
sub
out
sbb
lock
(bad)
jmp
int
movs
sbb
inc
imul
push
sbb
movs
(bad)
(bad)
jg
ins
loope
mov
xchg
push
aas
int
cmp
inc
inc
dec
push
or
(bad)
xchg
xchg
and
adc
push
cdq
out
inc
xor
mov
call
(bad)
lea
fs
out
pop
repnz
adc
add
sub
iret
rol
xlat
jge
ficomp
popf
fidivr
retf
fsub
(bad)
call
cmp
loop
stos
stc
outs
ja
es
or
adc
(bad)
(bad)
fild
nop
or
pop
fcmove
es
push
xchg
xchg
call
mov
cld
inc
mov
out
sar
inc
add
mov
and
and
(bad)
inc
add
cmp
pop
movs
into
xor
dec
ins
ins
mov
xor
push
adc
and
xchg
xlat
jmp
test
xchg
shl
dec
push
scas
sub
xchg
ror
cli
mov
add
call
sub
shr
pop
imul
inc
bound
daa
dec
pop
outs
push
scas
(bad)
in
stos
mov
out
(bad)
mov
pop
repnz
stos
xor
mov
or
dec
push
xor
popf
(bad)
call
fild
cmp
js
fwait
xor
lds
es
(bad)
(bad)
(bad)
call
sti
scas
rcl
test
dec
fwait
clc
push
xchg
stos
or
scas
add
sub
imul
(bad)
(bad)
call
aad
jbe
ror
(bad)
call
lock
je
pop
cmp
(bad)
(bad)
(bad)
call
dec
in
mov
adc
retf
xchg
call
jb
mov
stos
nop
pop
and
xor
(bad)
(bad)
(bad)
(bad)
jmp
outs
call
xchg
or
lock
repnz
inc
mov
leave
popf
xchg
or
mov
inc
imul
cmps
adc
pop
sar
jp
in
mov
jmp
fcom
in
int
lds
adc
pop
rcl
mov
mov
add
leave
dec
sbb
(bad)
(bad)
jmp
dec
jns
or
shr
ins
pop
call
into
jb
(bad)
js
adc
dec
add
cdq
push
(bad)
jmp
in
out
cmp
mov
xor
(bad)
(bad)
mov
pop
fidivr
pop
inc
adc
jne
es
addr16
arpl
std
cld
(bad)
(bad)
jmp
imul
add
test
and
inc
pop
fcom
sbb
push
add
add
dec
mov
cmc
loope
dec
mov
in
out
dec
addr16
(bad)
(bad)
dec
mov
test
cmp
ret
int3
xchg
sub
aas
cmp
div
js
hlt
(bad)
(bad)
(bad)
fild
rcr
ds
pop
in
ja
retf
pop
push
das
add
(bad)
(bad)
mov
push
or
loope
mov
cs
mov
(bad)
(bad)
(bad)
(bad)
jp
mov
ja
dec
ror
shl
clc
test
addr16
lods
mov
enter
popf
xchg
add
dec
pop
cmp
mov
push
dec
call
sbb
or
stos
xlat
jl
loope
pushf
movs
fwait
jne
(bad)
jmp
lock
pop
push
xchg
aam
icebp
add
jb
sbb
ss
stos
js
jg
mov
sub
jmp
adc
mov
cli
(bad)
jmp
mov
inc
sahf
mov
ret
jl
bound
sbb
scas
mov
(bad)
(bad)
jmp
stos
lea
xchg
xchg
test
shl
rol
(bad)
(bad)
call
add
fadd
sub
cmp
jae
ins
jmp
add
(bad)
(bad)
inc
mov
and
xlat
test
fst
iret
add
xchg
cmp
push
call
sti
pop
(bad)
(bad)
(bad)
inc
das
cmps
dec
mov
dec
in
bound
inc
data16
adc
repnz
(bad)
jg
retf
pop
ja
cmc
shl
jbe
jmp
dec
hlt
xor
and
(bad)
push
mov
adc
dec
jae
(bad)
pusha
inc
adc
(bad)
jmp
call
aaa
out
leave
fimul
inc
dec
stc
(bad)
ins
(bad)
(bad)
fisttp
pop
mov
in
xchg
push
les
bound
jmp
jmp
xchg
mov
aad
lea
ss
sahf
sub
hlt
or
clc
(bad)
(bad)
dec
iret
cmps
movs
ja
and
int3
das
jb
xor
mov
xor
jmp
mov
and
int
ds
(bad)
jo
pop
mov
test
int3
inc
clc
fnstsw
out
xchg
imul
icebp
mov
scas
stos
mov
sbb
std
aas
lds
inc
sbb
xlat
loope
das
out
(bad)
(bad)
(bad)
dec
arpl
fstp
test
inc
pop
sub
into
fadd
sub
fld
lea
daa
lods
shl
mov
mov
lock
int3
push
mov
jmp
inc
fmul
popf
(bad)
fadd
mov
xor
aaa
std
jmp
push
add
adc
mov
vmwrite
std
ss
jbe
loope
call
mov
sbb
add
shl
sar
jae
fstp
cs
mov
call
arpl
mov
aad
popa
xchg
and
or
sub
pop
pusha
push
mov
(bad)
cmp
mov
icebp
pusha
(bad)
retf
fild
aaa
xchg
data16
dec
sbb
lea
inc
outs
lds
mov
lds
enter
and
push
(bad)
(bad)
(bad)
inc
call
sbb
and
jns
add
jns
out
and
(bad)
loopne
iret
retf
movs
lea
fmul
outs
or
je
push
mov
push
inc
int3
aam
mov
push
int3
pop
mov
jmp
les
fstp
(bad)
call
out
fdiv
arpl
sub
xchg
mov
(bad)
cmp
aaa
ja
cmp
sub
stc
ret
xchg
out
push
in
inc
mov
pop
cli
in
lods
rcr
int3
scas
test
pop
popf
shr
call
call
jge
outs
xchg
imul
cmp
xor
cmp
mov
test
push
es
add
(bad)
(bad)
fimul
cmp
mov
sub
jle
in
cdq
and
dec
jmp
add
add
int
stc
int
adc
sbb
add
push
pop
and
int
fnstenv
dec
or
push
push
or
cld
data16
imul
or
setg
push
xrstor
mov
iret
add
adc
adc
adc
fwait
int
sbb
or
pop
pop
jo
mov
cld
sbb
sbb
add
sbb
add
push
scas
out
sbb
sbb
and
sub
mov
jg
xchg
(bad)
push
xor
scas
pop
imul
ja
(bad)
adc
pop
dec
push
pop
dec
mov
pop
jnp
aad
repz
pop
je
dec
js
mov
mov
fistp
bound
add
outs
jp
fwait
addr16
jo
mov
jbe
jne
push
and
xor
sti
cs
imul
add
repz
xor
bound
in
adc
add
pop
mov
out
test
mul
add
dec
add
mov
out
in
push
es
add
jbe
sti
(bad)
lds
inc
push
add
push
and
pop
arpl
jae
sub
adc
jns
jne
fs
jmp
psllq
jae
sbb
cmp
or
or
or
in
or
or
outs
mov
scas
adc
adc
adc
daa
daa
mov
and
jbe
(bad)
push
das
push
xorps
shr
das
ins
push
and
mov
push
pop
and
mov
aas
add
sub
xchg
add
aas
xlat
pop
cwde
push
shl
pop
(bad)
xlat
dec
lahf
sub
mov
jb
neg
xchg
arpl
jae
shr
push
xchg
out
xchg
add
lea
cs
nop
xchg
mov
xchg
mov
leave
ret
and
add
ins
pop
jg
mov
push
(bad)
sub
pop
add
jbe
cmps
dec
pusha
push
int3
push
jp
xchg
fld
repnz
scas
pop
sahf
xor
pop
pop
aad
ins
xchg
ins
inc
fwait
lods
dec
dec
or
add
jle
out
mov
frstor
movaps
aaa
push
sub
xlat
sahf
imul
das
push
inc
adc
add
push
mul
xor
outs
jne
dec
mov
adc
push
gs
push
push
inc
jb
cs
je
fs
cwde
por
mov
outs
adc
pop
jb
jo
jnp
outs
adc
daa
dec
mov
inc
bound
push
dec
sub
xor
rcr
out
ins
push
jne
push
gs
in
pop
add
dec
outs
jbe
arpl
fucomp
or
jns
jb
add
add
inc
jle
jge
fistp
jae
xchg
je
ins
bound
jbe
sbb
and
xor
inc
dec
push
push
dec
dec
das
fs
jns
jg
sahf
fbld
and
adc
sub
dec
cmp
xlat
cmps
shr
adc
jne
dec
push
call
jnp
sbb
fdiv
or
and
mov
pop
xchg
outs
fs
mov
(bad)
fidivr
(bad)
jae
lahf
pop
mov
mov
and
pop
mov
dec
daa
dec
push
jnp
add
inc
call
add
dec
push
dec
mov
ins
add
cmps
gs
shl
js
jbe
jbe
cmp
sbb
stos
jns
jb
arpl
pop
out
out
mov
loope
imul
adc
push
jae
pop
or
and
scas
pop
outs
pop
push
or
pusha
das
inc
inc
ja
mov
daa
mov
(bad)
dec
add
jbe
out
add
jmp
mov
jmp
and
add
and
dec
dec
loopne
jnp
cmp
(bad)
repz
inc
cmp
cmp
inc
dec
dec
cmp
repz
push
pop
fs
out
sahf
idiv
test
sahf
mov
mov
sahf
out
mov
repz
sahf
out
fsub
in
push
hlt
out
sahf
int
inc
add
sbb
out
sahf
xor
inc
pop
out
(bad)
rcl
push
ins
je
sahf
out
sahf
test
fwait
out
int3
loopne
inc
add
repz
repz
xor
inc
fdivp
cmp
dec
push
pop
pusha
push
out
js
pushf
test
fnstcw
repz
ror
lock
add
jns
out
sub
cmp
push
push
xchg
sbb
and
and
nop
jl
add
test
and
nop
imul
add
jbe
ins
or
and
mov
out
mov
(bad)
pop
adc
sub
adc
and
inc
pop
inc
mov
out
and
add
add
fisubr
mov
push
mov
sub
(bad)
aas
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
fdivr
(bad)
(bad)
(bad)
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
inc
inc
dec
adc
daa
push
clc
scas
inc
push
pop
or
or
(bad)
(bad)
and
fstp
sbb
and
(bad)
(bad)
jmp
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
(bad)
(bad)
push
or
push
ins
outs
outs
jo
jb
je
jbe
js
sub
cwde
pusha
aas
xchg
cld
jnp
jge
jg
(bad)
(bad)
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
and
and
push
push
push
push
push
pop
pop
pop
aas
mov
add
dec
push
nop
out
mov
addr16
rol
dec
or
iret
mov
mov
mov
push
cmp
jnp
fnstcw
push
inc
cwde
push
push
cmp
push
mov
jno
cmp
jo
loop
mov
test
inc
push
gs
mov
stos
and
mov
jb
ins
outs
xor
inc
inc
pop
mov
stos
and
fisttp
outs
cmp
push
pop
xor
(bad)
aas
push
jp
lods
dec
ret
push
adc
ret
aaa
push
push
jb
cmps
xor
sahf
cmc
das
pop
pop
int3
test
fld
push
ins
xor
jg
cwde
push
lods
sub
ja
xchg
cmp
cmp
outs
xor
jg
mov
ins
mov
jne
lea
pop
jbe
jne
inc
sbb
aad
xchg
js
push
jae
and
js
scas
mov
jnp
push
fbld
imul
ja
repnz
fldpi
mov
pusha
jecxz
rol
cmps
bound
(bad)
sub
and
pop
dec
ins
stos
lahf
imul
mov
not
sidtd
outs
and
xchg
pop
inc
jne
jb
cmp
arpl
dec
fimul
das
push
test
jns
lods
push
imul
jae
inc
jae
imul
and
inc
dec
popa
jo
or
adc
fisub
ins
dec
popa
push
outs
inc
dec
rol
sub
or
push
sub
jo
out
add
jl
loopne
(bad)
aad
mov
and
sqrtps
push
fidivr
xchg
mov
outs
or
add
int3
add
add
mov
call
fs
dec
in
pop
cmp
in
hlt
or
or
or
and
sub
unpcklps
enter
sub
outs
xor
push
adc
jb
cmp
cmove
adc
inc
mov
sbb
jb
enter
sbb
sbb
mov
pop
pushf
and
xchg
and
inc
mov
int3
es
fsubr
in
in
xchg
and
sub
sub
sub
or
adc
sbb
enter
and
sub
xor
sbb
jb
cmp
inc
inc
dec
inc
push
inc
xchg
and
pop
inc
fs
ins
dec
cmp
enter
dec
test
dec
and
sbb
push
pushf
push
movs
push
lods
cmp
mov
subps
dec
add
sbb
sti
das
mov
aam
loopne
enter
in
push
clc
pop
push
add
sbb
jb
adc
sbb
sub
or
inc
push
dec
addps
cmp
enter
adc
adc
inc
mov
adc
mov
sbb
sbb
sbb
sbb
mov
hlt
push
ltr
or
in
xchg
and
and
xor
mov
jb
and
and
enter
ins
sub
test
sbb
jb
nop
sub
sub
xchg
and
int3
xor
xor
in
lock
cld
cmp
or
adc
and
sbb
cmp
cmp
inc
jb
enter
inc
pop
inc
push
cmp
inc
movs
dec
in
xchg
and
dec
mov
jb
dec
loopne
in
push
clc
push
enter
adc
adc
pop
sbb
jb
sub
cmp
dec
ins
pop
adc
add
jb
enter
or
mov
adc
adc
push
loopne
in
xchg
sbb
sbb
cmp
sbb
sub
xor
inc
imul
enter
push
or
or
cmp
retf
and
imul
adc
add
stc
jb
lock
cld
or
or
adc
retf
and
and
sub
cmp
adc
jb
enter
pop
pusha
or
inc
mov
or
sbb
enter
mov
or
mov
call
sbb
or
enter
or
sbb
mov
jns
add
pop
or
je
enter
add
nop
or
test
mov
sub
or
or
add
or
or
add
xor
sbb
and
xor
inc
mov
add
push
jns
in
or
cmp
or
inc
das
pop
push
jns
or
dec
test
in
retf
xchg
dec
mov
push
rol
sbb
cmp
fcom
inc
xchg
mov
jo
in
add
lock
cld
jb
enter
or
inc
mov
sub
cmp
inc
rcl
in
xchg
and
les
sbb
jb
inc
mov
cwde
mov
ss
out
das
mov
enter
mov
and
arpl
jo
in
inc
psubb
pop
add
into
cmps
ret
pop
sbb
out
pop
sub
ss
into
sysenter
xchg
add
pushf
sbb
mov
dec
int
and
mov
stos
mov
mov
sbb
cmp
mov
lods
xchg
and
enter
loopne
cmp
in
in
(bad)
sbb
adc
adc
sbb
dec
sub
xor
sbb
cmp
ror
dec
fstp
xchg
and
fs
jl
cmp
enter
movs
mov
inc
mov
xchg
(bad)
loopne
mov
xchg
into
call
add
ins
inc
sbb
or
sbb
pop
and
adc
loope
gs
pop
xor
cmp
push
cmp
pop
xlat
cs
push
jae
or
pushf
sbb
movs
js
test
ret
nop
mov
mov
inc
into
pop
test
ins
aaa
mov
inc
mov
dec
sub
int3
je
fst
scas
pmulhuw
inc
into
out
or
sub
jb
retf
xchg
push
pop
sbb
popa
sub
into
mov
adc
xor
and
jno
daa
cmps
adc
cmp
in
xchg
mov
pop
inc
jb
xor
fld
cmp
cmp
adc
in
in
enter
mov
js
das
inc
xor
jns
fcomp
nop
addr16
xchg
mov
outs
pushf
data16
or
mov
jno
mov
xadd
jb
enter
cmp
test
addr16
cmp
popf
(bad)
ja
jne
jbe
ss
or
pop
adc
mov
aas
dec
sbb
jb
xchg
dec
adc
lea
ss
inc
jle
adc
push
push
enter
pop
adc
cwde
aam
jb
je
test
in
fst
fbld
mov
test
enter
cmp
xchg
sbb
in
pop
inc
dec
nop
adc
in
xchg
and
xor
inc
retf
xchg
mov
jno
(bad)
daa
sbb
pop
adc
fsub
jo
mov
mov
cdq
mov
rcr
cmp
call
das
inc
mov
mov
add
addr16
enter
and
cmp
outs
inc
sbb
or
mov
jb
bound
xchg
and
fs
dec
jl
in
daa
jb
enter
push
outs
lods
add
int3
nop
fsub
inc
rcl
jo
fld
push
add
inc
ficom
xor
lock
or
test
cmp
mov
test
sti
sbb
sti
add
psubw
aas
bswap
test
push
adc
das
pop
ja
jg
(bad)
jmp
js
push
adc
pop
mov
pop
xor
pop
cmp
mov
jg
cmp
mov
xor
lock
jg
sbb
into
xchg
ins
xor
inc
cmp
xchg
or
push
test
rcl
(bad)
(bad)
dec
mov
cdq
sbb
stos
push
inc
xor
jp
mov
ins
jp
(bad)
in
pusha
push
(bad)
fsub
neg
inc
lock
or
ss
or
sbb
xchg
std
jae
inc
sub
loopne
add
cmp
fsub
fld
in
pop
jecxz
mov
in
jg
ret
mov
aas
adc
or
out
dec
inc
or
or
add
pop
pop
int3
jo
jg
imul
mov
sbb
inc
cwde
ror
push
xchg
push
jecxz
(bad)
cld
cld
add
repnz
jae
outs
int3
popa
arpl
jae
jb
cs
mov
test
jl
sbb
aaa
(bad)
(bad)
push
sub
fidiv
add
imul
xchg
fdivp
(bad)
out
jmp
loope
or
cld
cmp
mov
ficomp
sahf
rcr
xor
rol
mov
repz
out
push
sub
ds
idiv
mov
icebp
bound
or
pop
push
pop
cmps
aas
fistp
iret
mov
mov
xchg
ror
push
shl
inc
ret
sti
jmp
jmp
pop
inc
fprem
fstp
(bad)
jo
sub
sub
(bad)
jmp
in
pop
pushf
mov
aam
push
push
aas
loopne
gs
sbb
mov
(bad)
(bad)
in
mov
aaa
lds
rep
(bad)
int
les
sahf
sub
jae
out
call
jge
and
ret
pop
dec
lea
mov
jp
mov
jle
scas
clc
idiv
dec
or
mov
int3
in
cmp
and
mov
mov
jo
in
(bad)
fcomip
ss
push
mov
mov
and
push
sub
jmp
(bad)
sub
jmp
ins
shl
repz
and
(bad)
lock
ja
mov
cmp
fwait
ins
sar
cli
loope
lea
out
lahf
lods
ds
or
mov
push
shl
mov
(bad)
stc
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
xor
std
xchg
arpl
or
jns
cld
ret
aas
fs
jns
(bad)
mov
mov
les
xor
mov
cli
and
push
mov
push
push
push
cs
xor
adc
lds
sub
fbstp
dec
(bad)
neg
sbb
push
adc
sub
push
mov
cdq
xchg
(bad)
cld
push
cld
sub
in
fiadd
sub
(bad)
aas
int
inc
bound
xchg
mov
mov
fcomp
lds
xchg
cmp
aas
enter
or
rol
push
lock
or
int3
fbld
stc
dec
jecxz
shl
out
fistp
aas
in
(bad)
jp
and
rol
jmp
adc
ins
push
xor
inc
add
(bad)
std
(bad)
std
pop
sub
push
lds
stos
fs
imul
out
(bad)
(bad)
push
jb
js
and
xor
mov
jl
push
int
retf
push
add
(bad)
out
popf
xchg
jb
out
inc
mov
nop
adc
adc
aas
or
jg
int
sbb
std
stos
pop
lahf
jae
xlat
mov
pusha
cld
(bad)
stc
(bad)
jle
cmp
xchg
repnz
icebp
adc
jbe
pop
push
push
pop
jmp
sbb
push
jae
pop
ror
inc
pop
or
and
repz
pop
imul
call
(bad)
adc
ds
push
xor
stc
fwait
xchg
popa
xor
xor
xor
dec
jmp
inc
xor
mov
inc
sar
mov
(bad)
imul
pop
sub
and
and
xor
jle
jmp
iret
cmp
jmp
(bad)
fcomi
sar
fisttp
or
cs
daa
dec
inc
dec
push
sar
stc
pop
movs
sub
jle
repz
(bad)
adc
sbb
sbb
jno
sbb
aaa
jg
aaa
sahf
lods
imul
rcl
out
fsub
fsubrp
cmp
xor
mov
mov
fdiv
mov
aas
sqrtps
call
and
in
cmp
mov
add
cmp
push
test
daa
sub
xlat
pusha
scas
cmp
daa
in
pop
ror
add
and
in
test
shl
daa
in
cmp
in
aad
cmps
sub
or
and
shl
aam
cmp
punpcklbw
dec
enter
cmc
rol
or
cmp
push
enter
pop
jo
shl
mov
adc
fdivr
dec
pop
repnz
mov
test
imul
aas
mov
in
jmp
cdq
inc
dec
enter
jo
sahf
nop
adc
es
add
mov
nop
adc
inc
sub
adc
inc
sahf
shl
pusha
lahf
add
test
(bad)
int
pushf
nop
pop
rcl
in
sbb
int3
lock
and
in
jo
add
sub
cmp
in
cmp
inc
sbb
jge
adc
jnp
test
xor
les
arpl
in
ins
outs
mov
retf
popaw
bound
ins
outs
fs
fs
out
iret
jle
pop
arpl
pop
push
dec
inc
outs
or
mov
xor
xor
test
push
mov
daa
outs
ss
data16
and
scas
jbe
cmove
xor
cmp
out
enter
adc
sbb
aas
ins
cwde
push
jbe
jbe
dec
or
mov
das
sbb
cmp
push
mov
lfs
mov
mov
cmp
enter
adc
sbb
push
and
sbb
pop
cld
and
and
popa
in
xchg
and
and
mov
(bad)
maskmovq
test
icebp
cmp
xchg
(bad)
(bad)
jmp
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
(bad)
(bad)
(bad)
jmp
mov
push
movs
mov
aad
mov
rcl
mov
sub
(bad)
(bad)
(bad)
(bad)
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
call
or
sub
fild
mov
xor
fild
(bad)
(bad)
(bad)
dec
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
(bad)
(bad)
(bad)
call
mov
sub
mov
(bad)
and
or
adc
stos
(bad)
(bad)
(bad)
call
data16
inc
fdiv
jno
add
aad
mov
mov
movs
xchg
gs
jmp
mov
call
xor
add
push
(bad)
or
or
push
xchg
pop
jg
(bad)
jg
add
hlt
push
imul
ins
sbb
xor
mov
push
ins
jnp
(bad)
(bad)
jmp
or
(bad)
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
mov
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
(bad)
(bad)
(bad)
dec
pusha
fidiv
add
in
add
pop
dec
or
cmp
add
daa
adc
(bad)
(bad)
call
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
(bad)
call
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
(bad)
mov
call
mov
cmp
jmp
(bad)
(bad)
jmp
fild
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
xlat
(bad)
(bad)
jmp
pop
jge
xchg
(bad)
shl
add
inc
push
imul
(bad)
jg
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
(bad)
stc
out
mov
pop
aad
mov
call
xchg
shl
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
(bad)
(bad)
(bad)
call
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
(bad)
(bad)
(bad)
inc
inc
or
das
es
lds
or
sub
mov
cmps
call
ret
(bad)
push
iret
shl
sbb
ret
es
pushf
mov
ins
add
jg
(bad)
aas
ss
jmp
addr16
jb
push
ret
mov
loop
sub
(bad)
(bad)
(bad)
dec
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
jecxz
call
int
mov
mul
ja
outs
ja
mov
out
cli
jo
call
adc
cmp
pop
or
adc
sahf
gs
clc
sar
imul
dec
loop
mov
push
add
mov
cmp
cmps
not
pusha
sar
(bad)
(bad)
dec
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fdivrp
pop
dec
cli
jg
mov
jmp
mov
xor
call
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
cmc
(bad)
call
sub
aaa
mov
or
sbb
add
movs
inc
or
sbb
and
ret
push
sub
(bad)
out
mov
jge
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
call
(bad)
cli
retf
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
push
shl
test
(bad)
(bad)
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
cmp
das
xchg
mov
retf
ss
sbb
ins
(bad)
fistp
inc
(bad)
(bad)
(bad)
call
sahf
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
(bad)
(bad)
ret
gs
fisubr
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
jmp
cmp
repz
fbstp
push
jo
add
dec
mov
xchg
sbb
xor
pop
(bad)
(bad)
(bad)
call
mov
fisubr
cmp
jns
jae
dec
call
inc
cmp
fdivrp
pop
(bad)
call
dec
jns
inc
jle
jmp
(bad)
sbb
adc
push
lea
jmp
cmps
ret
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
rcr
cli
outs
retf
push
pop
mov
mov
lea
inc
cld
call
xlat
ficom
test
loope
xchg
retf
les
jb
out
imul
(bad)
(bad)
fidiv
dec
pop
pop
adc
push
sbb
adc
and
inc
and
(bad)
mov
jl
or
push
fs
dec
mov
mov
and
cmps
xor
(bad)
jg
(bad)
mov
lods
out
sar
mov
adc
stos
and
leave
jmp
(bad)
inc
sti
push
jns
das
mov
and
je
or
repnz
dec
push
jo
(bad)
(bad)
(bad)
fisub
xor
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
js
(bad)
(bad)
call
cmp
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
(bad)
(bad)
(bad)
aas
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
mov
(bad)
(bad)
(bad)
push
sbb
mov
ja
(bad)
ins
pop
push
dec
sub
or
inc
jmp
add
adc
push
xor
(bad)
mov
xchg
push
(bad)
push
hlt
out
les
lock
xchg
fdecstp
jmp
lea
inc
xor
push
jg
(bad)
jg
lods
dec
jo
outs
sbb
sub
loope
fisub
lds
push
call
(bad)
jmp
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
(bad)
(bad)
(bad)
std
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
cli
(bad)
push
pop
mov
jo
cmc
shr
add
mov
arpl
lods
(bad)
loope
(bad)
fisttp
int3
mov
mov
xchg
scas
or
lea
(bad)
(bad)
call
inc
pop
and
pop
ins
cmp
les
adc
sub
dec
add
sar
(bad)
(bad)
(bad)
call
retf
bound
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
(bad)
(bad)
call
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
call
rcr
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
ja
daa
imul
lock
dec
mov
(bad)
sbb
mov
mov
in
and
out
mov
(bad)
mov
or
jle
xchg
aas
mov
adc
out
sar
(bad)
jg
pop
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
dec
aaa
push
add
test
pop
mov
fwait
sub
aaa
mov
ret
mov
test
dec
jg
or
adc
(bad)
movs
(bad)
test
pop
cmp
or
stc
sbb
sub
mov
inc
(bad)
(bad)
(bad)
dec
in
push
ja
pop
sub
das
sbb
fild
sbb
repnz
(bad)
call
mov
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
(bad)
(bad)
(bad)
jmp
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outs
(bad)
(bad)
(bad)
(bad)
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
jmp
fsub
leave
pop
sub
and
mov
(bad)
(bad)
(bad)
jmp
adc
mov
sub
fidivr
sub
ds
sbb
sub
call
lods
mov
call
pop
cmp
xor
jb
and
(bad)
(bad)
(bad)
call
jb
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
cli
mov
retf
jp
retf
mov
mov
fdivrp
cmp
nop
clc
push
in
es
xchg
pop
in
ja
add
push
or
(bad)
(bad)
(bad)
(bad)
out
je
arpl
sub
shr
aam
cmps
gs
fs
imul
add
xlat
dec
pop
mov
outs
jns
dec
cld
arpl
dec
retf
(bad)
(bad)
(bad)
dec
sbb
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
or
call
inc
sub
dec
inc
sbb
push
add
push
(bad)
(bad)
(bad)
(bad)
ds
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
(bad)
call
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
(bad)
(bad)
(bad)
jmp
mov
mul
out
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
(bad)
(bad)
(bad)
out
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
call
std
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
stc
jne
pop
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
(bad)
(bad)
(bad)
push
int
dec
mul
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
(bad)
(bad)
(bad)
(bad)
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
dec
clc
(bad)
call
pop
sbb
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
mov
push
add
sti
cmp
ret
mov
call
dec
retf
lahf
lds
icebp
leave
enter
pop
inc
int3
inc
ins
xchg
sbb
(bad)
jmp
mov
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
(bad)
(bad)
(bad)
call
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
(bad)
(bad)
inc
xor
xor
dec
mov
or
(bad)
in
popf
or
div
(bad)
(bad)
(bad)
fst
mov
(bad)
mov
push
pop
and
push
adc
fadd
arpl
(bad)
(bad)
jmp
pop
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
(bad)
(bad)
(bad)
call
sub
and
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
inc
mov
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
(bad)
(bad)
(bad)
push
dec
mov
mov
pop
dec
adc
mov
mov
fidivr
loopne
mov
in
xor
add
(bad)
mov
out
scas
mov
push
xchg
bound
fwait
push
mov
mov
lds
loopne
outs
add
(bad)
(bad)
inc
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
(bad)
(bad)
(bad)
clc
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
(bad)
(bad)
(bad)
call
sbb
inc
(bad)
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rcl
xchg
or
in
xchg
loop
xchg
mov
call
xchg
loopne
fstp
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
sub
push
clc
mov
dec
sub
and
clc
jg
sahf
loop
outs
dec
jg
or
(bad)
jge
aad
shl
call
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
push
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
(bad)
(bad)
jmp
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
add
jg
dec
ja
prefetchw
or
jae
(bad)
(bad)
(bad)
(bad)
mov
cmc
cwde
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
(bad)
(bad)
jmp
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
mov
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
outs
cli
jmp
inc
addr16
fwait
push
add
in
mov
dec
leave
(bad)
(bad)
mov
out
arpl
adc
push
mov
cli
(bad)
(bad)
push
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
jmp
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
(bad)
call
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
jg
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
pop
icebp
(bad)
jmp
std
shl
pop
xchg
idiv
sub
sbb
repnz
and
(bad)
(bad)
mov
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
(bad)
fst
jmp
xor
(bad)
and
(bad)
(bad)
(bad)
jmp
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
(bad)
(bad)
inc
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
(bad)
(bad)
(bad)
push
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
call
std
(bad)
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
(bad)
(bad)
dec
lock
imul
ss
test
(bad)
cs
mov
call
std
push
mov
loope
into
cs
out
add
add
fcmovnb
(bad)
call
pop
jmp
icebp
and
sub
aam
(bad)
(bad)
call
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
(bad)
(bad)
(bad)
jmp
in
adc
cmp
adc
mov
jle
cmp
pushf
in
adc
and
mov
cmps
push
data16
jno
ds
outs
sub
mov
(bad)
(bad)
(bad)
inc
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
mov
jp
or
xchg
popa
mov
gs
xor
dec
popa
sub
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
(bad)
(bad)
call
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
jno
test
aam
ins
fucom
jmp
aam
push
sub
push
fwait
sub
jmp
sar
stc
jp
gs
pop
pop
dec
(bad)
(bad)
(bad)
jmp
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
in
(bad)
(bad)
(bad)
dec
aam
ror
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jecxz
cmp
inc
fistp
(bad)
or
pop
fnstenv
lods
push
mov
enter
mov
adc
push
and
enter
mov
sbb
mov
or
or
mov
or
(bad)
(bad)
(bad)
jmp
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
or
jmp
jno
test
lahf
mov
xor
leave
(bad)
(bad)
fist
add
or
sbb
or
sub
out
(bad)
(bad)
jmp
add
push
hlt
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
xor
dec
les
mov
(bad)
adc
mov
mov
sbb
mov
jl
sti
aam
gs
mov
test
into
mov
(bad)
(bad)
push
loop
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
(bad)
(bad)
(bad)
(bad)
mov
jae
add
pop
fisttp
jno
daa
add
mov
or
jg
jmp
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
(bad)
(bad)
call
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
mov
add
(bad)
jg
mov
sub
inc
cmp
(bad)
adc
push
sbb
or
xchg
cmp
pop
(bad)
(bad)
(bad)
jmp
xchg
or
popf
or
scas
daa
jge
sahf
mov
setae
mov
push
(bad)
(bad)
(bad)
(bad)
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
(bad)
(bad)
dec
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fdivr
pop
cmp
les
repnz
sar
addr16
mov
fisttp
ss
fmul
sub
scas
or
dec
add
inc
add
fbld
ret
test
fist
outs
mov
inc
mov
sub
imul
sbb
push
ja
mov
add
mov
(bad)
(bad)
(bad)
inc
mov
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
fwait
fs
arpl
es
mov
or
ss
jb
addr16
(bad)
jmp
hlt
push
adc
mov
sub
xchg
ror
(bad)
inc
mov
fcmovnu
and
aam
inc
push
fiadd
(bad)
(bad)
mov
es
outs
mov
loope
mov
ja
pop
out
punpckhdq
push
cmp
call
push
push
pop
(bad)
gs
(bad)
clc
bound
shr
ins
iret
inc
mov
or
cmp
mov
(bad)
(bad)
inc
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
(bad)
(bad)
(bad)
push
test
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
cmps
mov
xlat
push
xchg
push
ficom
and
addr16
jp
les
mov
(bad)
call
add
outs
sub
or
mov
sub
(bad)
fild
xor
bound
lods
lds
pop
cmps
xchg
(bad)
(bad)
dec
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
xchg
adc
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
(bad)
(bad)
(bad)
inc
sbb
sbb
ss
call
ins
sbb
inc
aas
(bad)
(bad)
(bad)
dec
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadd
neg
lds
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
pop
cmc
(bad)
dec
sub
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
mul
xor
mov
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
jmp
shr
push
lds
jge
fisubr
cmp
jns
add
ret
xchg
(bad)
(bad)
(bad)
call
xchg
adc
mov
cmp
lds
or
sub
dec
add
inc
xlat
xor
cli
bound
pop
(bad)
(bad)
(bad)
call
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
(bad)
(bad)
(bad)
call
out
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
add
or
cld
(bad)
inc
int3
mov
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
(bad)
push
loopne
or
stos
rcl
jmp
ja
das
aas
jns
ss
(bad)
fcomip
push
add
sub
dec
lea
pusha
jle
xor
out
(bad)
(bad)
push
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
cmp
cmp
(bad)
call
or
mov
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
(bad)
(bad)
(bad)
call
inc
jmp
rcr
inc
adc
out
movs
add
test
cmp
(bad)
dec
pop
inc
ja
cwde
pop
ins
(bad)
adc
ss
daa
mov
(bad)
inc
sbb
mov
xor
mov
push
rcr
hlt
lds
(bad)
out
hlt
push
out
pop
cli
call
xchg
neg
xchg
aad
pop
mov
test
xor
imul
or
dec
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
(bad)
(bad)
(bad)
jmp
lahf
mov
mov
(bad)
repz
cmp
call
imul
or
pop
inc
cld
ds
test
jg
lods
xor
sub
pop
xor
dec
dec
(bad)
(bad)
push
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
(bad)
(bad)
fbstp
scas
xchg
adc
lea
or
mov
pop
inc
sbb
(bad)
(bad)
fstp
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
call
cwde
and
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
(bad)
mov
cli
jle
jnp
sub
sub
xchg
mov
xchg
push
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
or
cmp
ins
jle
aas
gs
jns
(bad)
mov
sbb
das
clc
(bad)
mov
retf
mov
mov
out
and
loope
or
(bad)
(bad)
cld
mov
jle
shl
imul
inc
cmp
ja
fsub
clc
(bad)
call
jle
hlt
out
push
or
test
mov
adc
xor
fist
pop
add
push
add
pop
lods
test
(bad)
(bad)
(bad)
inc
retf
ret
lea
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
mov
xchg
push
or
cmp
sbb
mov
(bad)
call
pusha
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
(bad)
(bad)
(bad)
call
jae
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
(bad)
(bad)
(bad)
cmp
clc
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
(bad)
(bad)
push
test
test
xchg
aad
xor
imul
adc
frstor
in
mov
(bad)
(bad)
jg
cmps
daa
aam
es
dec
dec
and
cdq
and
and
adc
(bad)
push
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
(bad)
(bad)
dec
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
(bad)
(bad)
(bad)
(bad)
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
cs
jl
outs
cmp
fisub
nop
jmp
(bad)
jmp
in
pop
push
repz
arpl
popa
sub
(bad)
(bad)
inc
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
mov
or
dec
dec
fs
arpl
dec
sbb
retf
dec
(bad)
(bad)
(bad)
call
xchg
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
(bad)
(bad)
(bad)
dec
sub
mov
push
xor
addr16
jne
ds
mov
or
ror
(bad)
(bad)
(bad)
jl
loop
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
cld
(bad)
jmp
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
(bad)
(bad)
mov
stos
mov
or
cmp
in
paddsb
hlt
(bad)
(bad)
(bad)
jmp
das
loop
jmp
stos
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
(bad)
(bad)
(bad)
jmp
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
(bad)
(bad)
(bad)
call
hlt
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
(bad)
(bad)
(bad)
cmp
jno
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
(bad)
(bad)
inc
shl
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
(bad)
jg
pusha
(bad)
int3
ret
xchg
cmp
rcl
mov
mov
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
sar
stos
(bad)
rcr
into
add
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
(bad)
(bad)
(bad)
fs
stos
xchg
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
(bad)
(bad)
dec
fwait
xor
jge
mov
pop
mov
(bad)
(bad)
(bad)
dec
in
mov
fisttp
(bad)
and
sbb
sbb
out
fdivr
(bad)
(bad)
(bad)
fcmovbe
test
cmps
arpl
aad
or
test
mov
into
stos
movs
(bad)
(bad)
(bad)
jmp
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
mov
(bad)
(bad)
(bad)
aas
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
cmps
mov
(bad)
dec
mov
cmpxchg
mov
punpckldq
xlat
and
adc
test
xchg
dec
ret
pushf
xor
loopne
mov
cwde
xor
scas
hlt
(bad)
(bad)
(bad)
mov
enter
scas
out
(bad)
bound
xor
xlat
cmp
fistp
or
outs
mov
dec
(bad)
mov
fucom
(bad)
(bad)
(bad)
(bad)
fbstp
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
lods
jne
aaa
std
push
inc
int
outs
es
lods
jg
sub
mov
xchg
rcr
(bad)
(bad)
(bad)
jmp
(bad)
and
xor
pop
or
addr16
xchg
shr
push
cmp
ret
xchg
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
ror
dec
pop
loop
aas
jmp
jecxz
in
fmul
lock
mov
mov
xor
loop
push
dec
jg
outs
test
or
(bad)
(bad)
(bad)
inc
sbb
and
lds
sub
mov
inc
and
(bad)
xchg
test
(bad)
(bad)
(bad)
(bad)
call
cmp
xor
not
adc
iret
push
retf
mov
ret
dec
(bad)
(bad)
jmp
pop
mov
pop
mov
test
fistp
ret
imul
dec
das
push
ret
ja
imul
setl
(bad)
sub
mov
cwde
cmc
(bad)
(bad)
(bad)
(bad)
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
mov
call
xlat
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
(bad)
(bad)
(bad)
(bad)
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
(bad)
(bad)
inc
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
cli
(bad)
(bad)
push
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
mov
daa
popf
and
pop
jle
pop
lock
out
and
scas
xor
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
(bad)
(bad)
cmp
bound
and
inc
sbb
jmp
sub
sahf
aam
push
stc
mov
in
(bad)
(bad)
jg
pop
cmp
cmps
(bad)
xor
or
cmp
movs
add
outs
sbb
dec
sub
scas
cmc
test
and
mov
mov
jmp
xchg
fstp
ror
sar
add
push
movs
not
cmp
(bad)
(bad)
jmp
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
rol
rol
call
xor
xor
(bad)
and
stc
popa
call
rcr
mov
ss
add
sbb
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
(bad)
(bad)
(bad)
(bad)
mov
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
(bad)
(bad)
call
test
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
(bad)
inc
push
xor
es
jmp
fdiv
inc
mov
bound
(bad)
(bad)
(bad)
call
fist
cs
push
es
mov
cld
mov
adc
push
ja
(bad)
(bad)
(bad)
push
cs
adc
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
mov
push
and
ds
inc
mov
iret
(bad)
(bad)
(bad)
(bad)
(bad)
jg
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
adc
retf
imul
mov
jle
cmp
cdq
in
(bad)
(bad)
(bad)
jg
mov
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
mov
dec
sbb
ds
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
popa
xchg
fiadd
mov
push
scas
scas
push
repz
dec
lods
adc
jns
stos
es
test
mov
push
test
test
jns
repz
cmps
cmps
cmps
movs
iret
repz
movs
push
mov
dec
push
imul
iret
out
call
nop
sahf
iret
sar
xchg
jno
lock
cmp
mov
xor
jo
ins
ins
sub
rep
imul
mov
repz
pushw
addr16
out
ds
mov
cmp
movs
fs
arpl
cmp
jnp
pusha
ds
pop
push
pop
pop
pop
xor
cmps
test
push
jl
cmps
repnz
xor
aas
lock
retf
ss
sub
jo
and
and
sbb
sbb
nop
mov
sahf
cmps
adc
push
or
cmp
int
retf
retf
in
call
jns
out
mov
ins
je
test
jns
out
xchg
pushf
test
fwait
out
sahf
ror
hlt
cld
int3
or
repz
and
inc
push
repz
repz
fs
js
iret
repz
mov
cmp
repz
int3
aam
lock
addr16
int
or
sub
jns
out
inc
push
pusha
jo
out
sahf
jl
cwde
movs
mov
ins
sahf
out
shl
in
hlt
into
add
cmp
repz
and
cmp
repz
dec
pop
ins
jl
cwde
cmp
repz
rcl
cld
jns
out
iret
adc
dec
pusha
out
sahf
out
mov
sahf
fsubr
rol
adc
cmp
iret
repz
pop
pusha
push
hlt
js
push
add
sahf
out
sahf
cwde
movs
mov
enter
out
loopne
clc
rol
repz
repz
cmp
iret
repz
push
mov
enter
rol
jns
out
adc
cmp
out
sahf
out
fs
mov
movs
mov
rcr
cmp
out
in
cld
ror
sbb
cmp
repz
pop
push
jo
mov
cmp
fsub
hlt
aam
jns
out
or
and
inc
out
sahf
out
pop
ins
jl
sahf
out
sahf
pushf
test
(bad)
rcr
cmp
out
call
sbb
cmp
repz
inc
push
pusha
iret
repz
ins
js
cwde
movs
mov
iret
repz
enter
jns
out
(bad)
or
sub
inc
out
sahf
out
pusha
ins
je
sahf
out
sahf
mov
sahf
out
int3
fsub
hlt
xlat
add
cmp
repz
xor
add
cmp
inc
dec
push
pop
mov
push
pusha
push
push
jns
out
nop
cwde
mov
sahf
mov
in
cmp
mov
cld
fadd
adc
repz
repz
cmp
repz
pusha
ins
js
nop
pushf
cmp
repz
mov
rcr
jns
int
in
fld
or
out
sahf
out
xor
pop
sahf
out
sahf
fs
mov
jns
(bad)
aam
hlt
repz
mov
add
and
inc
iret
repz
push
push
cmp
repz
int3
fsub
hlt
jns
out
fild
or
and
out
sahf
out
pop
fs
sahf
out
sahf
nop
cwde
movs
mov
enter
jns
fsub
in
cmps
out
sahf
addr16
or
and
out
sahf
cmp
or
mov
aam
ins
sahf
out
lock
fisttp
adc
repz
and
inc
push
pusha
jo
iret
repz
nop
mov
iret
repz
lock
out
sahf
out
xor
dec
pop
sahf
out
sahf
fs
mov
jns
aam
fild
repz
repz
inc
push
fs
repz
jo
mov
cmp
(bad)
aam
in
jns
addr16
loopne
adc
xor
jns
out
pop
ins
sbb
rcl
clc
loope
cmp
repz
sbb
cmp
repz
repz
fs
mov
repz
pushf
test
shl
in
sahf
out
cmp
loop
sbb
cmp
sahf
out
dec
pop
fs
out
sahf
out
movs
mov
rcr
fsubr
hlt
jecxz
cmp
repz
sbb
xor
repz
repz
dec
pop
ins
js
repz
or
repz
(bad)
rcr
call
hlt
in
or
and
jns
out
cmp
push
pusha
sahf
out
sahf
ins
js
nop
pushf
lods
jns
out
mov
repz
out
in
adc
xor
repz
inc
push
pop
fs
cmp
repz
cwde
movs
mov
repz
repz
lock
sahf
int
out
sbb
cmp
out
sahf
dec
pop
push
sahf
out
movs
mov
cmp
out
out
sbb
iret
repz
inc
pop
push
iret
repz
mov
int3
fdivr
iret
repz
clc
call
imul
pop
fwait
jnp
out
call
push
out
or
sahf
out
mov
ror
out
sahf
rcr
call
cmp
repz
and
xor
repz
repz
dec
push
pop
pusha
iret
repz
push
movs
cmp
repz
mov
cmp
repz
call
sahf
addr16
and
sahf
out
sahf
cmp
push
pop
pusha
push
jo
or
cwde
mov
repz
and
ins
xchg
test
repz
enter
enter
repz
sbb
sub
cmp
repz
inc
push
pop
iret
repz
push
cwde
cmp
repz
test
mov
repz
hlt
out
sahf
addr16
sbb
sub
cmp
push
pop
jns
out
pusha
push
jns
out
nop
cwde
movs
mov
out
sahf
mov
clc
cmp
rep
retf
add
sbb
xor
test
popf
out
fwait
dec
imul
call
outs
movs
imul
sahf
fwait
cmp
pop
cmps
mov
mov
add
or
add
xor
xchg
fild
lahf
inc
cld
cmp
pop
add
cmp
cmp
push
pop
or
cmp
cmp
or
or
mov
add
rol
or
repz
add
mov
not
xchg
pop
push
push
das
fstp
out
pusha
or
das
pop
fstp
and
add
adc
add
mov
add
aas
in
cs
add
cs
cs
add
enter
mov
push
or
add
or
sahf
out
sbb
adc
sbb
jns
out
push
push
push
add
or
add
out
sbb
out
mov
out
pop
(bad)
aas
aam
or
mov
out
push
dec
int3
sub
ins
out
sahf
out
sbb
pop
fcomp
mov
jns
out
inc
ret
(bad)
out
sahf
out
adc
jns
xor
jns
out
dec
retf
push
jns
out
sbb
jns
cmp
jns
out
inc
(bad)
cmps
out
sahf
out
push
xchg
push
(bad)
sahf
out
sahf
ss
test
jns
out
dec
into
cs
outs
out
sahf
out
push
sahf
pop
ficomp
mov
jns
out
inc
shl
popa
out
sahf
out
adc
jns
xor
jns
out
dec
leave
sub
out
sbb
jns
cmp
jns
out
inc
lds
sahf
out
adc
out
sahf
xor
lea
out
dec
int
lods
ins
out
sahf
out
sbb
out
sahf
cmp
add
cmp
repz
shl
cmp
repz
xor
iret
jae
repz
cmp
repz
mov
retf
repz
repz
sub
stos
stos
iret
repz
imul
sbb
cmp
repz
fwait
pop
pop
fcomi
cmp
repz
cmp
iret
jnp
sti
sti
pop
pop
cmp
repz
xchg
(bad)
repz
repz
daa
daa
cmps
cmps
iret
repz
addr16
pop
pop
cmp
repz
xchg
push
push
xlat
repz
repz
aaa
aaa
mov
iret
repz
ja
div
(bad)
(bad)
iret
repz
(bad)
dec
dec
iret
repz
repz
das
das
scas
scas
iret
repz
outs
outs
out
out
pop
pop
cmp
repz
lahf
pop
pop
fcomip
cmp
repz
aas
mov
iret
jg
(bad)
jmp
jns
ja
inc
push
and
push
sahf
out
sahf
xor
dec
sub
sahf
out
sbb
js
out
sahf
out
and
adc
jns
jnp
xor
add
sar
and
rol
outs
add
test
or
jb
pop
enter
leave
inc
leave
inc
push
(bad)
iret
inc
add
adc
adc
adc
pushf
pop
sbb
inc
jb
pop
sbb
inc
leave
inc
leave
sbb
ret
sub
xor
add
adc
adc
nop
or
cs
or
sbb
aam
call
(bad)
push
sbb
or
or
or
xor
and
add
and
xor
sbb
xor
add
mov
rol
sbb
fistp
or
mov
in
jbe
lods
sub
jo
jno
add
aas
add
aas
js
jmp
adc
fnstcw
xchg
inc
pop
add
fwait
pushf
fsub
(bad)
arpl
bound
daa
daa
mov
push
daa
xchg
outs
fild
jo
bound
jae
imul
cmp
bound
xor
xor
pop
cs
xor
add
js
leave
and
daa
js
add
leave
leave
leave
add
add
pop
jb
ja
ja
mov
das
xor
pop
pushf
pushf
pop
jo
xor
gs
pushf
pushf
pushf
gs
fs
jb
and
mov
xchg
fs
das
xchg
xchg
xchg
xchg
jb
jb
in
xchg
xchg
jb
jb
add
and
add
pop
or
pusha
pop
sysret
dec
xchg
ud0
data16
test
xor
xor
in
in
xor
in
inc
arpl
sbb
pop
xor
cmp
in
xor
pushf
pushf
fs
pushf
pushf
pushf
fs
fs
pop
jb
fs
(bad)
and
xor
pushf
pushf
pushf
pushf
xor
pushf
aaa
pop
je
rdtsc
leave
leave
leave
leave
xor
xor
fmul
mov
add
dec
cs
cs
ss
sbb
cmp
xor
xchg
dec
scas
pop
xor
xor
xor
adc
outs
outs
add
add
fs
jae
cmp
in
add
jo
jae
in
arpl
jae
sbb
cmp
jae
cs
outs
jo
lods
jne
outs
xchg
jg
cmp
sbb
fstp
bound
jne
bound
data16
mov
jo
pop
ror
mov
arpl
ja
ja
ja
gs
adc
dec
arpl
fs
fidivr
pushw
jne
push
fistp
ins
rcr
mov
fwait
outs
pop
outs
sbb
bound
mov
outs
jp
mov
outs
fadd
jo
enter
jo
mov
pop
ins
pop
addr16
jo
repnz
push
mov
(bad)
leave
and
jno
lods
xor
js
addr16
or
xchg
imul
jae
add
data16
rcl
mov
jae
mov
xor
jo
imul
imul
lock
ja
out
loop
cmp
shl
jae
daa
(bad)
jecxz
push
inc
pop
daa
imul
or
pop
and
or
sar
inc
loopne
outs
aad
movsx
outs
mov
psrlq
cmp
fs
jae
in
arpl
jae
gs
adc
(bad)
idiv
loopne
fidiv
push
pop
(bad)
mov
fadd
jge
sbb
jo
das
pop
je
je
mov
bound
(bad)
js
in
movs
imul
add
in
cs
mov
dec
in
inc
pop
gs
gs
jmp
aas
sbb
pop
xor
aaa
mov
bound
imul
xor
(bad)
push
push
mov
pop
imul
jo
bound
enter
data16
ins
loope
(bad)
pop
dec
lods
lods
sub
aaa
and
push
scas
outs
and
mov
pop
add
push
and
ret
xor
pop
mov
pop
jnp
pop
dec
ret
dec
pop
jb
imul
ucomiss
mov
xor
push
xor
je
stc
fcmovbe
inc
sub
add
pop
cmp
loope
cmp
ins
pop
mov
push
or
cwde
popa
push
outs
ja
out
dec
retf
pop
pop
mov
sbb
aaa
push
ret
mov
js
outs
mov
daa
imul
outs
ja
popa
xchg
out
pop
ja
and
jno
scas
dec
cs
cmp
push
or
not
and
jo
pusha
fisub
imul
fistp
dec
pop
cmps
js
dec
das
daa
cmp
aas
pop
imul
mov
mov
je
cmp
jns
js
les
pop
ja
sti
ja
in
pop
jae
paddusw
(bad)
or
pop
dec
imul
retf
daa
or
ret
psllq
ja
lea
xchg
fs
movq
cmp
mov
pop
popa
and
jb
pop
fs
push
push
pop
bound
xor
ds
repnz
jae
jo
xor
in
movs
aaa
jmp
mov
and
pop
jb
fmul
cmp
call
push
repz
ins
test
es
jnp
mov
xchg
mov
mov
pop
arpl
outs
pop
ins
movs
xor
xlat
sbb
bound
ja
jb
and
cmp
gs
clc
lea
push
ins
mov
mov
imul
push
out
pop
jae
jae
adc
in
xlat
sbb
ins
cmovg
jae
jae
or
xchg
jg
add
mov
pop
punpcklwd
or
aaa
scas
jne
mov
jno
pop
jne
popa
ja
xor
xlat
push
push
pop
enter
and
mov
daa
outs
sbb
cmps
pop
imul
mov
jae
xchg
dec
ins
leave
jno
popa
xor
mov
pusha
iret
ficom
ja
add
fs
ins
jecxz
push
xor
push
loope
js
pop
jne
psubusb
jp
xor
pop
jb
fisub
jae
jae
adc
fisubr
or
leave
mov
ds
mov
jae
jbe
(bad)
(bad)
pop
ja
pushf
dec
cs
fdivr
push
fs
sub
xchg
bound
and
mov
pop
ja
(bad)
fisub
and
xchg
es
outs
inc
gs
ficom
ja
inc
jno
mov
fs
addr16
enter
je
ja
scas
add
xchg
push
nop
lea
pop
ins
sub
loop
or
aas
js
imul
lock
jg
aas
jnp
ins
push
adc
jne
jne
inc
outs
pop
ficomp
xchg
ins
mov
mov
jne
iret
(bad)
pop
jb
loop
data16
retf
mov
das
xchg
xchg
out
je
daa
fistp
aad
popa
das
jecxz
add
pusha
das
xor
loope
jmp
mov
loopne
dec
pop
and
or
mov
push
imul
jno
ja
pop
mov
ss
fs
mov
xchg
sbb
ins
ja
(bad)
bound
ja
xchg
dec
cs
sahf
push
jb
pop
ja
aad
mov
pop
scas
loop
mov
mov
daa
jbe
fdiv
rcr
sub
ins
ins
ins
mov
stos
outs
mov
movhps
cmp
pop
das
mov
sbb
jo
push
fwait
gs
div
cmp
pop
pop
xor
lahf
dec
outs
inc
add
lahf
imul
push
push
dec
sti
sbb
xlat
sar
ins
inc
or
inc
dec
imul
pop
call
pop
loope
push
js
outs
movhps
ins
(bad)
pop
outs
mov
xor
xchg
es
mov
jae
push
jb
jbe
or
pop
jo
movs
pop
fcmovbe
loop
pop
test
fmul
je
dec
jae
retf
mov
mov
call
jae
jbe
lea
pop
ins
packsswb
aad
repnz
pop
xchg
leave
sar
cmp
ja
mov
gs
nop
fld
(bad)
leave
sbb
shr
jbe
inc
popa
jae
inc
push
in
jae
jo
leave
mov
xchg
ins
outs
das
gs
mov
outs
inc
scas
jae
cmp
inc
inc
fs
jb
xchg
fcmovnbe
scas
dec
pop
jae
imul
mov
pop
pop
pop
fs
push
fadd
mov
or
jp
(bad)
imul
aaa
mov
push
bound
xchg
dec
cs
stos
mov
jge
sub
aad
xchg
fld
jae
mov
push
inc
xor
jns
add
(bad)
add
daa
js
xor
add
jno
mov
pop
mov
jmp
and
pop
jnp
jae
mov
jb
ja
pop
pop
ror
jb
ja
mov
imul
pop
div
popa
lock
mov
fwait
lods
call
jne
add
pop
sbb
push
ins
push
push
mov
push
ja
lock
test
pop
bound
loopne
scas
js
aad
outs
and
pop
sbb
fs
mov
js
mov
push
and
rol
mov
dec
test
repnz
dec
aam
cmp
outs
push
xchg
call
div
popa
push
push
aaa
fisubr
pop
ins
xlat
jns
and
stos
js
jo
js
not
imul
or
push
add
and
(bad)
and
fisttp
les
outs
xor
outs
jmp
popa
das
popa
or
cs
and
push
ss
cmps
xchg
mov
xor
add
pop
inc
loop
nop
jno
inc
sub
xchg
mov
rcr
sub
pop
mov
aas
jg
pop
add
pop
push
ja
cmp
cs
pop
mov
jns
fsub
pop
and
mov
data16
or
sbb
imul
loope
rol
or
fld
cmp
pop
fdivrp
ret
pop
mov
arpl
jne
push
and
lods
sub
fisub
and
jnp
pop
xor
pop
mov
daa
pminub
pop
push
add
dec
nop/reserved
comiss
cmp
and
loopne
pop
add
mov
mov
xchg
cmp
xlat
or
arpl
pop
sbb
cmp
lahf
push
cmps
add
inc
cs
jbe
pop
or
out
bound
dec
lahf
jo
js
xor
je
je
gs
jb
mov
inc
inc
mov
push
sbb
cmps
pop
aaa
pop
mov
inc
pop
gs
jnp
jno
push
xchg
popa
ja
pop
xor
inc
jp
push
inc
sub
add
dec
es
call
push
call
push
pop
xchg
sub
pop
cmps
pop
push
cmc
add
bound
ror
arpl
jne
ret
movs
jo
jae
xor
mov
push
aaa
push
cmp
das
or
nop
push
or
inc
jo
sub
sbb
push
xor
and
xchg
and
push
xor
aaa
cmc
mov
sub
ins
push
inc
mov
cmp
mov
fiadd
dec
ja
push
adc
loope
pop
(bad)
or
rcl
jb
nop
cmp
mov
pop
cmp
imul
mov
je
push
push
aaa
ins
call
cmp
pop
rol
outs
imul
outs
push
es
and
popa
(bad)
mov
or
xlat
sub
mov
cmp
mov
test
add
cmps
mov
daa
dec
xchg
inc
sub
sub
and
imul
sbb
cmp
sbb
stos
inc
retf
dec
jns
add
pop
aaa
inc
dec
push
push
mov
imul
js
pop
or
pop
js
dec
test
or
dec
add
and
pop
xlat
or
add
and
and
dec
adc
adc
push
mov
xor
adc
(bad)
jg
xlat
add
mov
mov
ds
pop
adc
cld
std
mov
inc
repnz
iret
pop
pusha
or
test
rol
stos
push
and
jg
dec
sbb
repz
push
push
or
scas
int
ds
(bad)
clc
leave
loop
pop
rol
lock
pop
adc
fnstcw
jo
inc
cmp
sahf
mov
es
ss
repz
and
cmp
cmp
mov
inc
and
sbb
js
inc
inc
aaa
shl
stos
ins
fidiv
sbb
aas
fidivr
push
lock
repnz
ds
ins
lock
push
outs
add
or
repnz
cmc
pusha
ins
xor
scas
add
mov
aas
rcr
adc
inc
cmps
sbb
xchg
push
push
mov
pop
add
add
pop
(bad)
push
rol
int3
inc
rcr
pop
sbb
mov
cmp
adc
mov
mov
shl
ins
iret
mul
inc
cmp
lock
dec
push
pusha
jnp
outs
lds
push
dec
dec
inc
mov
repz
xor
add
and
sub
sar
arpl
dec
js
repz
or
dec
ror
inc
dec
out
cmps
imul
mov
jns
repz
nop
push
adc
push
repz
int
out
std
ds
push
xor
lock
or
pop
xor
cmp
repz
je
daa
iret
xchg
mov
out
push
jo
pop
push
aas
push
mov
mov
(bad)
loopne
xor
jns
push
adc
push
mov
loopne
pop
push
push
inc
pop
pop
pop
xor
cli
pop
cmp
add
scas
add
add
idiv
(bad)
in
outs
mov
pop
fbstp
push
and
mov
jl
bound
push
and
repz
lock
jae
sahf
inc
mov
push
loopne
(bad)
xor
push
jns
adc
jo
xor
and
out
out
mov
imul
and
lods
cs
paddd
mov
jle
(bad)
fadd
sbb
pop
in
bound
pop
mov
cld
lahf
sbb
outs
rol
ss
adc
dec
cli
mov
mov
lods
pop
dec
movs
enter
push
push
mov
and
mov
add
adc
add
mov
aas
mov
cmp
ud1
pop
cmc
adc
xchg
cmp
mov
pop
cld
cmc
and
xor
mov
push
pusha
fsub
leave
dec
jo
ins
mov
int3
cmp
cmps
xchg
mov
rol
iret
mov
push
ins
and
loope
test
test
or
lock
jae
gs
push
ja
adc
pop
test
xor
dec
xchg
pop
dec
mov
lahf
dec
stos
cld
(bad)
jg
arpl
xor
inc
rcl
popf
int
mov
pop
add
xchg
dec
pop
pop
push
xchg
lea
mul
xchg
push
push
push
mov
push
pop
fs
je
add
js
fs
and
and
inc
pop
sti
mov
add
push
and
ja
ficomp
inc
mov
(bad)
pop
add
cmps
test
push
ins
fsub
cmp
sbb
adc
xchg
pop
in
xacquire
shr
das
ja
xor
push
sub
pop
mov
ficom
mov
stos
add
inc
xor
retf
mov
hlt
and
cmp
out
vmread
pop
addr16
ss
int3
jb
xchg
mov
fist
or
and
js
adc
not
aas
xchg
pop
mov
inc
inc
push
and
imul
pop
js
fistp
loop
mov
jb
das
and
push
loop
imul
cmps
outs
mov
es
lahf
inc
inc
out
mov
push
mov
xor
out
fist
xchg
cwde
sbb
dec
dec
xlat
push
lock
das
inc
(bad)
loop
aas
inc
inc
inc
mov
pop
or
inc
ds
pop
mov
repnz
ss
je
(bad)
jnp
sub
xchg
jae
pop
adc
sub
mov
push
adc
sbb
iret
inc
cwde
pop
push
jl
push
mov
mov
mov
fistp
xchg
inc
push
add
dec
ret
mov
lea
sub
jbe
push
and
popa
xchg
dec
jae
bound
das
and
retf
ret
xchg
movs
push
retf
push
ins
mov
test
mov
push
inc
pop
inc
pusha
test
out
mov
scas
test
jno
jbe
loopne
inc
sti
add
sti
or
adc
jmp
mov
sbb
adc
ret
push
and
cmp
jecxz
ins
jae
and
sub
shr
outs
addr16
and
inc
pop
out
stc
(bad)
lods
cmps
addr16
jbe
loopne
mov
imul
ins
push
push
inc
push
adc
push
inc
aas
aad
lods
mov
sub
cmps
xchg
mov
jne
js
mov
adc
(bad)
mov
dec
dec
jmp
loope
add
sub
pop
aaa
xchg
push
push
add
clc
push
ja
xchg
push
pop
sbb
dec
mov
and
dec
jp
ret
call
dec
lock
xor
stos
pop
nop
fidivr
mov
adc
mov
mov
cmp
add
jbe
rcl
push
out
or
mov
cmps
pop
xchg
stos
mov
pop
imul
arpl
inc
jecxz
shl
push
das
and
fs
test
mov
inc
sbb
dec
scas
push
inc
daa
fild
in
movs
inc
inc
aam
mov
xchg
mov
jmp
inc
dec
cs
and
push
popa
lds
pop
aaa
mov
jg
ja
lods
mov
or
je
cmp
repz
lahf
add
popa
and
test
sub
inc
aaa
and
mov
push
mov
mov
cmp
setns
push
jecxz
or
imul
je
bnd
pop
sub
pusha
or
add
push
sub
adc
jmp
outs
mov
pushf
daa
mov
mov
sub
mov
mov
fisubr
lods
lds
or
add
inc
pop
xor
jecxz
bound
or
frstor
outs
dec
push
add
pusha
out
jl
dec
add
push
aaa
es
sub
lock
inc
inc
inc
jmp
pop
repz
ror
adc
retf
push
retf
adc
jnp
push
jo
into
sbb
and
jle
adc
add
add
cmps
rol
stos
shl
into
xor
pop
mov
push
sti
add
adc
dec
out
inc
xchg
dec
push
pop
add
inc
mov
es
sub
fstp
or
out
mov
jge
or
cmp
loopne
push
(bad)
mov
and
inc
inc
pop
pop
sub
shr
inc
mov
mov
add
out
bound
cs
ja
sub
pop
sbb
dec
xchg
jnp
cs
push
dec
pop
inc
fistp
push
das
push
sub
push
jmp
mov
inc
cs
mov
push
or
pop
inc
or
push
sub
scas
dec
dec
dec
ins
pop
mov
cld
push
or
and
or
add
and
sbb
jb
sub
push
inc
add
jb
jo
mov
cmp
add
sbb
adc
popa
arpl
or
sbb
mov
push
inc
dec
adc
pop
sbb
jge
push
push
gs
pop
je
push
pand
dec
gs
jb
outs
jae
arpl
fs
fwait
or
sbb
rol
jo
bound
mov
jo
and
(bad)
iret
rol
add
scas
push
out
popa
push
mov
jns
pmuludq
gs
lock
call
dec
ss
out
(bad)
pop
pusha
jecxz
fwait
daa
xchg
xchg
inc
bound
out
(bad)
sub
cmp
jns
out
cwde
lods
mov
xchg
in
jbe
jo
outs
jae
and
xchg
inc
pop
adc
add
add
mov
mov
adc
dec
das
jmp
dec
xchg
out
rcr
addr16
das
fimul
adc
mov
jg
lahf
ins
mov
ss
jne
setge
je
imul
mov
jb
(bad)
dec
call
fist
pcmpeqd
daa
xchg
jb
imul
outs
bound
mov
push
outs
pop
sbb
mov
jp
dec
imul
mov
ja
outs
imul
jbe
and
outs
aas
pop
imul
jne
je
jo
dec
ins
daa
addr16
jg
cmp
lods
addr16
das
or
stos
lea
push
fisttp
jecxz
push
fwait
sub
adc
sub
jbe
loopne
repz
jecxz
mov
scas
nop
retf
in
pop
push
inc
add
inc
daa
mov
sbb
das
mov
je
call
jb
jno
xlat
pop
push
jne
(bad)
push
das
push
pop
je
out
push
cmp
dec
xor
repnz
xchg
nop
in
jo
sahf
(bad)
push
in
mov
cmps
inc
push
jb
push
jg
dec
mov
mov
mov
jbe
mov
je
pop
jb
mov
out
dec
jg
inc
mov
out
gs
cmps
cs
shl
ins
dec
movsx
push
pop
mov
pop
je
daa
pop
hlt
cs
aaa
shr
xor
pop
imul
pop
mov
or
ss
mov
pop
mov
mov
mov
xlat
inc
cmps
outs
jl
push
pop
dec
iret
aaa
dec
mov
mov
mov
pop
(bad)
imul
sub
pop
inc
pop
push
mov
sbb
push
inc
ja
dec
fcmovnbe
jbe
out
addr16
outs
dec
ficom
gs
ficom
pop
jb
shl
pop
jb
ins
pop
dec
fidiv
inc
xlat
mov
fidiv
pop
inc
je
and
cmp
retf
mov
jae
mul
sbb
ins
cmps
dec
sbb
call
pshufw
or
daa
gs
jmp
inc
scas
leave
rcr
mov
jg
jle
cwde
pusha
shl
push
jnp
(bad)
sub
mov
push
sbb
pop
inc
fistp
ins
lds
scas
sub
pop
pop
cmp
clc
jbe
sbb
adc
scas
dec
mul
out
mov
repnz
add
out
ror
push
xchg
mov
(bad)
push
xchg
cli
neg
and
repnz
add
add
fucomip
fcmovu
mov
(bad)
test
or
push
and
inc
add
add
fisttp
lds
in
sti
(bad)
dec
pop
jae
inc
arpl
int3
inc
fist
sbb
scas
or
imul
inc
inc
outs
scas
or
lea
(bad)
push
pop
xor
xchg
sbb
inc
shr
(bad)
xchg
dec
pop
xchg
cs
push
out
jae
data16
addr16
aaa
pop
inc
xor
outs
ds
fdiv
mov
inc
dec
jg
push
out
call
dec
inc
not
outs
(bad)
scas
pop
inc
inc
dec
das
outs
mov
sub
dec
inc
inc
pop
push
scas
pop
fwait
sbb
push
das
push
in
xlat
sbb
adc
add
imul
add
dec
(bad)
push
dec
jno
dec
fbstp
test
ins
dec
(bad)
cmp
rcl
ins
(bad)
imul
jnp
jbe
jnp
xchg
jno
pop
add
and
pop
lods
sbb
jns
out
in
xchg
popa
outs
dec
das
jno
pop
cmp
ja
addr16
arpl
jp
arpl
scas
mov
sub
sbb
es
inc
or
mov
mov
ja
cmp
loop
ja
mov
inc
push
(bad)
add
inc
fwait
or
xor
mov
pop
or
ficom
sbb
sbb
or
sbb
aaa
(bad)
jb
sbb
push
pop
bnd
dec
pop
inc
dec
push
mov
dec
(bad)
pop
pop
(bad)
outs
sbb
add
ficom
add
push
ja
fwait
lds
inc
lods
sbb
mov
lods
das
pop
add
ins
dec
sub
pop
(bad)
pop
mov
push
imul
pop
jp
outs
or
in
jns
sbb
mov
jne
ja
aaa
mov
xchg
retf
gs
mov
mov
mov
rcr
or
or
sbb
bound
push
mov
daa
pop
push
icebp
push
jno
das
out
pop
cmp
sbb
fnsave
popa
pop
jbe
push
ret
or
xlat
(bad)
pop
mov
in
ret
or
dec
pop
pop
(bad)
not
or
fwait
(bad)
xchg
and
aas
pop
imul
(bad)
jl
(bad)
xchg
sbb
dec
jb
jns
mov
or
push
pop
not
sbb
cs
dec
cs
outs
outs
jb
mov
inc
jns
or
adc
pop
or
push
pop
fcmovnbe
test
loop
pop
or
imul
or
mov
mov
push
pop
sti
pop
add
xlat
or
sbb
leave
mov
fnsave
jge
pop
dec
pop
or
imul
mov
not
arpl
imul
arpl
jb
push
sti
call
jae
push
pusha
rol
das
jg
push
add
jae
jo
push
jbe
dec
ficom
push
imul
dec
pop
ror
movs
push
gs
mov
mov
pop
aaa
jne
jne
adc
pop
jo
pop
data16
sub
das
xchg
mov
pop
mov
out
movs
sar
inc
cmps
pop
je
pop
push
mov
repnz
jle
outs
xchg
sbb
inc
iret
cmp
push
cmps
xor
mov
scas
ins
and
push
loopne
push
pop
cs
or
outs
movs
mov
pop
jnp
hlt
pusha
jecxz
ret
inc
sub
(bad)
ret
add
jp
jbe
fwait
iret
aaa
les
cmp
jecxz
fdivr
lock
mov
lock
push
or
add
jo
outs
pop
shl
ins
or
adc
push
or
test
adc
push
push
or
mov
or
ds
sar
pop
pop
into
adc
pop
jle
pop
pop
xchg
mov
xor
sbb
mov
adc
mov
pop
stc
cmps
push
and
or
test
lods
lock
(bad)
fidivr
movq
sub
repz
sub
adc
adc
adc
iret
repz
push
pop
sbb
repz
repz
sbb
inc
sub
sbb
add
mov
xchg
loopne
mov
mov
inc
jge
inc
inc
inc
and
mov
add
jg
inc
sub
adc
sbb
and
xor
inc
add
leave
mov
push
inc
adc
mov
leave
leave
adc
int
ins
jbe
test
ficomp
jle
pop
push
pop
inc
cmp
mov
and
ret
sbb
ret
adc
mov
imul
inc
add
aaa
mov
add
add
ds
repz
sbb
add
adc
push
add
mov
sbb
sbb
push
popa
pusha
movs
test
xor
or
or
pusha
test
push
push
into
or
adc
pop
repz
jnp
jo
xor
sar
pop
ja
and
inc
loopne
lock
push
push
pop
sbb
cmp
aas
iret
js
rol
adc
adc
repz
repz
mov
out
cmp
add
mov
jecxz
sub
xor
or
out
test
test
(bad)
jns
lahf
pop
push
sbb
add
push
jl
mov
sahf
pop
(bad)
ins
sub
repz
mov
add
repz
adc
iret
repz
or
iret
repz
movs
add
iret
repz
sbb
repz
adc
iret
repz
mov
mov
add
push
push
add
add
jbe
repz
ss
pcmpgtd
lods
cmp
repz
xchg
or
cmp
repz
push
pushf
arpl
out
iret
fcomp
push
outs
cs
push
push
push
mov
call
scas
js
(bad)
adc
sahf
out
ret
mov
out
inc
loop
sbb
out
xchg
jns
shr
sahf
out
sub
dec
out
repnz
cmps
mov
cmp
sub
jne
retf
jns
out
stos
add
sahf
xchg
jmp
xchg
out
fisubr
mov
or
jns
xchg
out
ret
jae
(bad)
jns
out
arpl
cmps
add
inc
out
sbb
jnp
(bad)
imul
sahf
out
mov
mov
out
in
push
pop
ja
out
sahf
xchg
into
addr16
scas
pop
out
jns
xchg
pop
pop
cmp
xchg
sahf
jg
fisubr
jp
ja
das
mov
dec
(bad)
nop
or
mov
xchg
shl
mov
in
cs
test
cs
fnstcw
stc
lds
in
or
in
cs
cmc
int
cs
cs
popf
fisttp
in
mov
mov
mov
in
mov
cs
cs
jmp
inc
cs
fstp
sti
(bad)
cmps
or
xchg
or
cs
cs
scas
out
inc
cs
lahf
fistp
ret
mov
sub
jg
out
or
adc
aaa
into
mov
push
ret
jns
pop
xchg
mov
mov
xor
movs
dec
jp
adc
popa
mov
addr16
lea
call
es
shl
push
jp
adc
fistp
push
dec
adc
sbb
sbb
(bad)
jmp
lock
lds
daa
and
sbb
inc
fcmovbe
and
add
adc
jmp
das
test
ja
iret
sub
cmp
dec
out
add
jp
inc
sub
add
xchg
das
jecxz
xor
xchg
sbb
es
shl
sub
es
lods
hlt
cmps
mov
movzx
or
arpl
sub
popw
das
xlat
and
mov
add
(bad)
fsubr
arpl
test
sub
xchg
aaa
es
in
mov
or
inc
sub
adc
and
mov
out
inc
adc
fimul
call
lahf
mov
pop
test
or
push
mov
sbb
push
sahf
mov
cmp
(bad)
mov
out
ror
imul
mov
fwait
test
mov
imul
lahf
jp
pop
jmp
das
push
sub
scas
dec
dec
imul
xchg
stos
mov
imul
ret
das
cs
ins
pop
jnp
pop
dec
xor
sub
xchg
add
mov
ins
and
mov
lods
pop
fwait
pop
stos
xchg
cmps
arpl
sbb
bound
xor
pop
sub
mov
cmps
out
das
xor
xchg
bound
stos
xchg
sbb
cmps
or
cmp
pop
sti
pop
jnp
(bad)
push
ins
cmp
or
aaa
inc
mov
push
adc
mov
imul
or
push
cmc
mov
retf
cli
mov
jp
mov
push
sbb
pop
shl
ret
push
mov
add
inc
nop/reserved
pop
mov
aad
out
jecxz
jbe
mul
pop
dec
jg
ss
pop
aas
xchg
cmp
push
repz
pop
sahf
xor
dec
adc
stos
mov
ror
mov
test
fwait
jae
inc
add
or
arpl
(bad)
fist
add
pop
xor
mov
sub
shl
sub
pop
jae
adc
ret
add
cmp
add
outs
pop
push
push
arpl
mov
andnps
rcr
call
jns
push
cmp
xlat
bound
add
dec
retf
leave
jp
ds
ss
sbb
movs
pop
push
fbstp
mov
xor
jno
sbb
fild
sahf
les
push
jo
pop
mov
add
loope
and
inc
xchg
pop
pusha
push
inc
stos
aaa
inc
push
ret
inc
pop
or
adc
xchg
test
mov
xor
xor
xor
ss
jb
xchg
ss
ret
test
add
pop
into
mov
pop
das
push
add
jb
shl
xor
pop
inc
test
ins
neg
(bad)
das
aaa
fcomi
sub
outs
push
sub
sbb
data16
dec
aas
sub
ins
imul
gs
gs
mov
fld
inc
fs
dec
push
adc
push
jae
sbb
retf
out
nop
jg
push
add
sub
sub
imul
test
add
jne
(bad)
pop
loopne
dec
sbb
(bad)
inc
adc
sbb
outs
iret
sub
sub
pop
push
jp
das
xor
inc
mov
popa
pusha
ins
dec
ins
or
outs
jne
call
xor
pop
les
cmp
stos
les
or
push
aas
sar
ffreep
bound
lahf
fs
or
and
das
jo
cs
adc
ja
jbe
and
dec
dec
sub
cmp
jb
adc
jg
inc
xchg
pushaw
mov
sbb
call
cmp
sub
or
lock
mov
sub
imul
dec
pop
add
add
jmp
inc
cmps
inc
pop
or
xchg
test
inc
add
adc
inc
jnp
or
dec
pop
and
push
mov
inc
mov
ss
cmovno
(bad)
sti
lea
pop
test
push
or
stos
and
pop
fild
sbb
aaa
outs
aaa
dec
xchg
and
adc
rcl
lods
inc
xchg
(bad)
mov
cmps
jo
jg
stos
push
aaa
(bad)
fild
ja
(bad)
jmp
out
lahf
add
dec
shr
jae
outs
ja
xor
int
ins
jbe
inc
add
xchg
adc
cs
dec
rcr
mov
add
aaa
ins
add
scas
add
adc
sbb
bound
pop
and
sbb
scas
and
imul
pop
dec
sti
mov
(bad)
lahf
aaa
xchg
aaa
imul
pop
dec
aaa
mov
loop
mov
sbb
popf
inc
dec
mov
aas
mov
aaa
dec
push
sub
cmp
inc
jmp
shl
in
rol
ror
inc
sub
add
sub
xlat
push
xlat
ja
jno
push
js
jecxz
das
jnp
pop
aam
mov
cmp
cmps
pop
bound
push
(bad)
lahf
jnp
jp
pop
push
not
movs
pop
sub
movs
outs
int3
pop
add
cmp
jo
sar
daa
leave
aaa
and
out
imul
fisub
xsaves
inc
sub
arpl
add
jmp
dec
mov
xor
add
das
iret
dec
dec
dec
dec
inc
mov
test
inc
mov
pop
adc
pop
imul
das
stos
push
sti
je
stos
lods
jecxz
mov
pop
xchg
mov
(bad)
dec
arpl
ret
ficomp
push
movs
or
cmp
dec
and
ins
mov
push
daa
inc
daa
sub
cmp
sbb
imul
or
sub
popf
(bad)
js
js
sub
fisubr
addr16
jo
or
out
daa
push
and
sub
(bad)
nop
dec
or
ret
and
addr16
mov
aad
stos
jbe
jnp
or
and
push
lods
popa
xchg
sub
or
sbb
test
daa
rcr
dec
shl
jmp
jae
out
shl
fistp
adc
das
cmp
sbb
jb
(bad)
cmp
sub
ss
js
mov
mov
sub
and
pop
aas
sub
rol
jmp
cmp
or
ret
jg
xor
mov
push
das
pop
pop
or
cmp
mov
pusha
lea
pop
adc
inc
lods
iret
outs
lods
push
outs
pop
inc
rol
test
es
adc
adc
arpl
dec
push
in
pusha
and
push
adc
scas
sub
sub
jbe
mov
adc
xor
jge
dec
and
inc
lods
push
fist
shl
xchg
sub
cmc
dec
popw
mov
shl
xor
je
ins
arpl
add
jg
add
dec
and
mov
out
test
jne
pop
push
dec
lahf
nop
pop
(bad)
das
das
out
sub
sbb
pop
xor
arpl
sbb
movs
inc
push
lahf
jg
mov
arpl
movs
xchg
adc
mov
movs
xor
push
pop
sub
xchg
push
push
inc
lea
jl
jnp
ja
repz
pop
fcomp
xlat
add
or
sub
mov
mov
dec
jmp
and
pop
shl
dec
sub
ret
push
pop
pop
jae
xor
mov
sub
gs
cli
out
je
je
outs
push
push
imul
sbb
pop
out
outs
jae
pop
xor
lock
neg
inc
xor
pop
push
rol
lahf
outs
push
bound
jb
dec
out
pop
sbb
and
dec
inc
(bad)
in
pop
push
pop
push
pop
pop
inc
test
mov
es
sub
add
popa
push
sar
outs
je
sub
pop
add
scas
pop
mov
mov
xlat
aas
push
xor
mov
sbb
mov
das
imul
test
cmp
mov
xor
ss
daa
mov
adc
daa
add
and
arpl
or
outs
fist
je
sub
div
sub
dec
rcr
xor
pandn
add
fwait
add
xchg
inc
popa
fld
scas
fistp
daa
xor
xchg
xchg
and
rcl
pop
xor
pop
sar
(bad)
sub
outs
addr16
leave
and
jl
out
push
cli
out
mov
outs
push
or
and
addr16
xchg
mov
inc
add
pop
add
enter
push
adc
pop
nop
pop
out
mov
or
adc
xchg
add
jmp
es
arpl
push
fadd
loopne
xchg
inc
enter
jmp
mov
adc
push
and
in
repnz
add
adc
es
add
sahf
cdq
inc
pop
enter
pop
popf
or
push
mov
push
les
(bad)
lods
(bad)
mov
hlt
push
add
adc
push
enter
outs
mov
aaa
fwait
int
cmp
push
loopne
push
mov
add
add
inc
inc
push
dec
sbb
iret
cdq
mov
push
pop
jnp
and
adc
test
into
xchg
add
add
js
adc
outs
jns
frstor
aad
es
add
outs
cld
xor
add
xor
sub
pop
inc
(bad)
sub
and
inc
inc
inc
add
sub
dec
dec
repnz
es
or
push
add
test
jns
pop
out
(bad)
sahf
mov
dec
dec
daa
inc
push
xchg
cmp
inc
inc
jbe
sbb
pop
inc
sub
in
in
jb
je
dec
js
in
push
push
jl
or
and
movs
test
inc
mov
nop
das
lahf
mov
int
pop
xchg
adc
ss
sub
jb
and
sub
aaa
pop
xchg
mov
jl
icebp
mov
dec
and
jge
jbe
cmps
cs
int3
add
bound
sbb
or
call
jle
fs
xchg
pop
pop
pop
and
push
sub
or
push
ror
out
repnz
js
ja
ins
inc
pop
lahf
orps
pop
pop
sbb
pop
jp
cmp
add
sbb
xor
outs
es
mov
movs
aas
xor
daa
xor
je
sbb
in
or
in
nop
sub
cmp
dec
fcomp
fsubp
xchg
dec
and
push
ins
mov
cmp
pop
int
or
ins
nop
out
and
add
or
dec
sti
shl
data16
fdivr
cwde
es
jns
loopne
adc
sbb
jae
dec
xor
daa
nop
icebp
js
adc
push
inc
fild
daa
and
push
adc
cmps
lods
ins
pop
test
add
inc
xor
xchg
sbb
pop
pop
daa
ins
push
sti
fld
add
nop
jbe
push
fiadd
sbb
pop
aas
int3
jnp
push
jg
int
iret
jmp
hlt
fistp
sbb
lock
or
jg
dec
in
push
jg
loope
pop
dec
add
popa
and
ja
fst
shl
test
(bad)
push
jnp
test
or
neg
dec
aas
cmps
icebp
dec
xor
cmp
inc
leave
test
nop
pop
add
test
pop
adc
and
iret
jbe
js
add
pop
mov
cwde
jg
popf
jo
rcr
dec
in
dec
mov
sahf
aas
mov
outs
add
sqrtps
popa
mov
dec
xchg
push
repz
(bad)
stc
lea
push
push
inc
scas
jg
sbb
xchg
aas
call
outs
push
iret
add
push
inc
pushf
push
pop
aas
jbe
rol
test
jg
adc
inc
mov
cwde
bnd
push
cdq
lea
and
sbb
test
push
movs
inc
(bad)
leave
and
lar
adc
cmp
push
sub
cmp
jo
push
dec
fsubrp
cmps
not
jb
lods
add
dec
push
pop
(bad)
push
xlat
idiv
add
hlt
push
cli
aas
out
add
adc
inc
fstp
out
add
cmc
jae
xor
xchg
call
pop
pop
daa
sub
shr
add
rol
imul
or
and
add
ins
ins
test
dec
out
xlat
out
cwde
nop
nop
push
mov
and
xchg
imul
paddd
movs
or
pop
inc
repnz
push
push
push
cmp
pop
push
inc
jg
std
out
push
rol
or
dec
mov
and
and
loopne
inc
jle
test
shl
mov
dec
inc
mov
(bad)
(bad)
add
mov
in
call
nop
pop
jle
adc
push
ficomp
(bad)
aam
mov
xor
fcomp
loopne
xor
lea
inc
jb
ss
add
or
xchg
lea
jg
sub
xor
mov
xchg
aas
xor
cs
or
test
fild
add
push
test
adc
pop
in
mov
jne
loope
and
and
adc
add
inc
or
mov
sub
jbe
cmps
xchg
cmps
mov
aas
push
jb
lods
aas
dec
dec
xor
inc
mov
jg
xor
(bad)
aas
jne
imul
das
push
push
inc
push
leave
inc
pop
mov
add
xchg
leave
sar
aas
out
pop
mov
es
daa
or
aas
or
jg
pop
and
aas
push
jg
and
in
push
mov
and
dec
push
xor
xchg
out
es
or
and
enter
push
dec
adc
xor
aas
and
xchg
mov
sbb
add
push
xchg
pop
adc
adc
mov
call
aam
push
xor
add
dec
sub
mov
xchg
mov
sbb
cmp
test
bound
inc
es
push
dec
inc
push
test
call
(bad)
fiadd
dec
(bad)
(bad)
mov
adc
mov
call
nop
mov
or
js
mov
push
mov
xor
loop
mov
xchg
dec
add
nop
jmp
add
movs
test
lds
mov
(bad)
clc
push
push
outs
aas
add
sbb
jo
mov
add
test
dec
cs
cmp
mov
xor
or
leave
inc
and
aas
rcr
add
add
or
xchg
pop
mov
and
and
push
xchg
mov
call
leave
xchg
sbb
sub
ficom
inc
aas
push
add
inc
cmps
pop
adc
push
mov
and
mov
inc
sub
and
in
and
mov
jns
dec
add
das
xchg
mov
adc
inc
jb
dec
popa
push
mov
aas
xchg
xchg
xchg
mov
and
mov
leave
nop
sub
dec
nop
xchg
pop
and
xchg
xchg
pop
leave
inc
jb
xchg
xchg
sub
pop
and
add
ret
cs
jg
dec
and
daa
outs
add
adc
inc
xor
pop
cmp
xor
pop
add
lds
xor
test
dec
xor
jg
sbb
jle
adc
es
bound
adc
and
sub
adc
jg
stos
add
pop
leave
or
test
aas
test
inc
jb
xchg
pop
and
imul
push
mov
dec
es
addr16
mov
inc
fwait
sub
push
xchg
pop
and
pop
adc
inc
jb
pop
imul
add
pop
or
sub
pop
in
mov
aas
data16
pop
and
push
cdq
push
fs
mov
jg
mov
sub
arpl
and
cs
mov
mov
fadd
push
add
mov
add
call
inc
mov
or
shl
mov
push
aas
and
pop
leave
adc
scas
nop
or
jg
cmps
and
mov
aas
jg
add
inc
push
or
mov
(bad)
aas
popa
pop
push
dec
mov
sar
add
push
or
inc
(bad)
aas
inc
leave
mov
and
rol
xchg
pop
and
pusha
into
xchg
dec
xchg
jne
jg
mov
stc
aas
or
mov
inc
aas
cmp
add
jns
xchg
into
out
inc
and
dec
repz
icebp
outs
vsubpd
dec
cs
cmp
in
inc
inc
or
mov
mov
fiadd
xchg
ret
ret
aas
inc
jb
mov
ret
pop
and
leave
ret
ret
mov
inc
jb
mov
xchg
pop
and
mov
pop
leave
inc
jb
mov
jb
pop
and
mov
pop
leave
inc
mov
inc
jb
pop
mov
pop
and
leave
mov
mov
stos
adc
push
aas
in
pop
(bad)
aas
cmp
ds
mov
and
cs
inc
inc
(bad)
jge
mov
and
and
cs
mov
jge
jge
sbb
aam
mov
aas
add
xchg
xchg
jg
sub
mov
inc
dec
sahf
add
and
jmp
jmp
jle
aas
cmp
ds
and
scas
nop
mov
inc
inc
mov
jmp
and
mov
in
jg
adc
inc
xor
jg
xchg
dec
and
jg
adc
inc
jg
xchg
pop
or
mov
(bad)
mov
mov
cs
in
mov
or
mov
and
cs
in
xchg
xchg
xchg
xchg
test
test
test
mov
test
mov
and
cs
mov
adc
and
arpl
mov
xchg
mov
cdq
mov
mov
sub
ret
cs
mov
ret
and
cs
ret
xchg
mov
and
mov
cs
mov
mov
mov
and
cs
mov
mov
cs
mov
mov
mov
cs
in
mov
aaa
jg
mov
mov
inc
mov
dec
mov
push
xchg
aas
xchg
aas
and
leave
inc
mov
movs
push
and
stos
ja
mov
sbb
stos
jg
mov
jg
leave
inc
ror
dec
and
imul
imul
mov
jmp
pop
mov
jb
mov
and
jg
dec
es
jns
jns
mov
jns
cdq
dec
es
mov
mov
mov
jp
xchg
mov
and
sub
dec
mov
mov
in
mov
cs
and
cs
mov
in
mov
test
test
dec
test
add
cmp
or
xchg
mov
push
mov
mov
cs
mov
mov
test
jg
mov
cdq
dec
es
jae
jae
mov
jae
cdq
dec
es
mov
mov
mov
je
xchg
mov
and
mov
cs
mov
jne
jne
and
cs
mov
mov
and
cs
jbe
jbe
mov
inc
es
jbe
nop
pop
add
mov
and
sub
dec
es
mov
mov
ja
cdq
dec
es
ja
jnp
mov
jnp
cdq
dec
es
es
mov
jnp
cdq
add
dec
xchg
xchg
xchg
cs
(bad)
and
push
fs
pop
sar
jg
cmps
mov
pop
jle
dec
cs
outs
outs
outs
xchg
mov
and
and
mov
(bad)
mov
jo
xchg
mov
and
and
xchg
dec
je
jno
jno
leave
inc
xor
jno
xchg
dec
and
jno
adc
inc
jno
inc
xor
and
leave
jb
jb
inc
xor
adc
pop
mov
adc
and
leave
inc
xor
and
and
(bad)
les
and
cwde
dec
cmps
push
push
jle
xor
and
leave
inc
xchg
xchg
inc
xor
add
inc
jb
pop
and
shl
inc
rol
jb
pop
rol
mov
mov
xchg
mov
mov
and
es
mov
cdq
mov
dec
jns
cs
mov
aas
pop
and
leave
call
popf
aas
sahf
jbe
pop
adc
test
dec
cs
mov
mov
cs
lea
and
cs
in
adc
inc
pop
mov
aas
mov
xor
and
mov
je
xchg
dec
push
jg
xor
and
leave
imul
imul
mov
mov
pop
mov
jb
js
jb
pop
and
js
pop
leave
inc
js
inc
jb
pop
js
pop
and
leave
jle
jle
inc
jb
jle
xchg
pop
and
jle
pop
leave
inc
jb
mov
and
mov
mov
pop
mov
leave
mov
jb
mov
pop
mov
jb
add
and
inc
add
sbb
test
xchg
test
test
test
mov
mov
xchg
jle
mov
add
push
xchg
dec
xor
jb
fidivr
and
int
mov
mov
add
mov
inc
jb
jg
int3
jb
cmp
add
and
retf
and
leave
inc
inc
pop
leave
add
mov
and
xchg
mov
inc
inc
add
mov
int3
int
and
lods
cwde
inc
daa
jo
aas
mov
and
ficomp
add
xor
aas
mov
(bad)
aas
sub
or
pop
push
mov
fidivr
mov
mov
int3
int
pop
and
retf
mov
pop
mov
jb
pop
and
int
inc
jb
retf
rol
and
ins
mov
call
les
mov
daa
jg
add
mov
in
mov
cs
mov
cmp
dec
fiadd
cmp
xor
xor
xor
or
test
push
dec
jno
jb
xchg
mov
mov
inc
repnz
mov
aas
xor
jae
pop
mov
aas
cmp
dec
mov
jle
pop
leave
inc
mov
jb
pop
and
pop
mov
rol
cmp
bound
and
pop
mov
in
jg
or
sti
xchg
aaa
inc
adc
mov
jg
or
sti
(bad)
adc
aaa
inc
xchg
or
add
leave
add
add
inc
jb
add
and
and
add
inc
jb
pop
add
pop
and
leave
add
add
aas
dec
sar
dec
aas
mov
inc
jb
rol
mov
jg
dec
daa
test
das
add
adc
add
das
inc
and
sub
outs
or
aas
leave
inc
or
mov
inc
push
inc
sub
retf
add
pop
mov
dec
aas
outs
add
cmp
jg
push
xlat
scas
pusha
jne
aas
push
aas
add
call
ficomp
xchg
cmp
pop
jle
inc
add
cmp
add
mov
inc
add
dec
and
add
add
pop
add
jb
cmp
jb
pop
and
into
and
leave
inc
into
into
or
pop
into
inc
aas
cs
mov
in
mov
sub
movs
lds
sti
dec
cs
mov
sti
mov
and
push
jo
call
jb
jns
add
add
leave
mov
and
and
and
and
add
pop
adc
and
push
leave
inc
jb
aaa
aaa
xchg
pop
and
aaa
aaa
sbb
pop
add
mov
inc
aas
das
xor
pop
and
xor
leave
inc
xor
jo
pop
xor
inc
jb
pop
pop
jb
pop
and
pop
and
leave
inc
pop
pop
mov
es
xchg
sub
sub
nop
mov
and
ins
jmp
in
mov
cs
ins
ins
ins
pop
mov
and
mov
mov
sub
pop
add
dec
adc
mov
push
ds
ja
stos
shl
jg
push
in
fadd
jle
or
jg
rol
mov
dec
add
add
jb
mov
and
leave
loop
in
inc
jb
in
xchg
pop
and
out
pop
leave
inc
jb
jmp
in
push
push
leave
inc
out
leave
inc
mov
xor
pop
and
xor
(bad)
cmp
xchg
add
push
jg
pop
leave
inc
push
sbb
sbb
push
xchg
dec
sbb
adc
xchg
fidiv
jle
mov
aas
mov
pop
add
push
mov
xchg
pop
and
sub
leave
inc
sub
adc
sub
aas
aaa
jg
sub
sbb
and
pop
and
ins
sub
cmp
and
dec
add
add
fist
aas
inc
or
add
push
or
push
mov
test
jg
inc
ret
push
mov
(bad)
inc
idiv
call
inc
push
test
iret
inc
movs
sub
aas
push
call
leave
inc
sar
movups
jb
pop
and
adc
leave
inc
adc
scas
les
pop
es
aas
push
push
enter
sub
inc
jb
sub
xchg
pop
and
sub
jg
int
jb
inc
ret
mov
adc
add
jg
aas
push
leave
inc
sar
loopne
add
jg
leave
xlat
aad
test
pop
add
mov
add
mov
mov
aas
dec
push
cs
mov
mov
inc
adc
add
scas
nop
mov
pop
leave
adc
push
jb
pop
and
pop
and
leave
inc
pop
pop
mov
fs
in
sbb
xor
mov
or
cs
add
aas
dec
aas
lea
ds
inc
shl
rol
call
aas
cs
adc
das
jmp
and
aas
inc
ins
nop
pop
adc
aad
shl
pop
and
mov
mov
outs
and
mov
and
jg
jb
jo
repz
fs
inc
icebp
add
adc
dec
dec
adc
sar
jmp
or
xor
call
adc
cmps
call
sub
adc
shl
jg
cs
mov
sbb
sbb
adc
mov
rcl
aas
and
dec
mov
sub
mov
mov
aas
iret
inc
inc
test
jg
dec
push
pop
add
add
and
add
mov
cs
es
sub
and
xor
aas
adc
mov
cmp
jo
cmp
cs
and
or
dec
jne
jg
and
in
jbe
ja
add
mov
sbb
fisub
mov
mov
push
push
push
dec
cmps
sub
add
call
aas
inc
or
mov
fild
hlt
jg
jb
mov
mov
je
(bad)
jg
push
xchg
cs
mov
adc
xchg
mov
adc
adc
cs
adc
cld
pop
aam
scas
or
call
add
in
add
add
jmp
aad
or
adc
adc
in
mov
push
aas
jb
adc
pop
jmp
sub
mov
sar
or
xchg
pop
and
or
jb
push
pop
push
cmp
inc
mov
push
call
aas
or
xor
mov
add
xor
shl
or
mov
jmp
push
jg
xchg
mov
sbb
mov
dec
cmp
pushf
dec
push
cmp
add
sbb
sub
pop
leave
mov
add
aas
pop
leave
inc
mov
xchg
data16
mov
mov
sub
add
dec
aas
mov
or
dec
aas
push
mov
cmps
dec
es
mov
call
sbb
dec
dec
sub
xchg
mov
xchg
mov
inc
add
mov
leave
inc
mov
pop
add
cwde
aas
daa
leave
inc
fwait
test
sub
sub
sub
leave
inc
jb
sub
and
xor
leave
inc
xor
inc
jb
pop
xor
ss
dec
mov
inc
fwait
(bad)
aas
mov
inc
call
and
es
mov
dec
and
es
mov
adc
cdq
cmovl
in
dec
xchg
aas
xchg
mov
pop
pop
xchg
mov
and
and
sub
mov
xchg
dec
push
out
mov
pop
mov
sub
(bad)
jge
cs
stos
aas
jg
xchg
mov
sbb
aas
sbb
cs
aas
pop
aas
and
xchg
mov
pop
push
mov
movs
scas
dec
xor
in
dec
aas
dec
fist
lods
cdq
loop
test
aas
loope
xchg
pop
and
jecxz
pop
leave
inc
in
inc
jb
pop
out
pop
and
leave
call
jb
jmp
xchg
pop
and
in
out
xchg
bound
sar
pop
leave
inc
jmp
aam
aad
jb
pop
and
fsub
leave
inc
(bad)
inc
jb
pop
fcmovnu
pop
and
leave
fstp
(bad)
inc
jb
loopne
xchg
pop
and
loop
add
inc
cmp
pop
ins
aas
inc
call
inc
test
add
mov
xchg
xor
(bad)
cmp
xchg
mov
adc
mov
stos
test
in
pop
jg
mov
mov
aas
jg
imul
pop
mov
add
jg
or
xchg
pop
fwait
cmp
or
adc
jo
lods
neg
call
aas
push
call
aaa
scas
mov
mov
call
cmp
xchg
dec
push
in
push
aas
call
jmp
shld
inc
jb
je
daa
sub
leave
sub
sub
inc
jb
sub
mov
and
cdq
dec
scas
sbb
xchg
imul
mov
mov
mov
and
cs
mov
mov
and
mov
in
mov
scas
jmp
sub
dec
aas
pop
leave
inc
ret
mov
data16
pop
and
push
and
leave
inc
push
mov
jg
xchg
dec
je
cmp
leave
inc
xor
xor
and
leave
inc
mov
mov
xor
push
inc
jg
inc
leave
inc
pop
xor
outs
push
js
daa
mov
sbb
add
test
imul
xor
dec
xchg
dec
(bad)
jg
retf
jp
dec
xor
xor
push
add
push
adc
push
push
xor
(bad)
(bad)
out
adc
adc
push
sub
dec
outs
arpl
xor
and
add
sbb
or
push
jg
mov
imul
and
xor
in
neg
pop
or
xor
pop
sbb
xor
xor
cmp
pop
xor
xor
sub
dec
adc
outs
outs
xor
ss
add
cld
cs
repnz
jne
and
and
adc
ffreep
sub
adc
outs
data16
popa
pop
mov
jb
xor
adc
xchg
clc
(bad)
xor
gs
outs
jo
lods
nop
popa
test
pop
add
mov
add
and
add
or
(bad)
call
lock
push
cmp
xchg
mov
(bad)
cmp
fld
(bad)
call
jb
sub
(bad)
(bad)
(bad)
sti
fcmovbe
inc
adc
inc
xor
shl
jns
or
pusha
push
aad
inc
retf
push
mov
(bad)
(bad)
(bad)
dec
add
ins
and
push
jmp
fs
movs
xor
outs
mov
mov
out
(bad)
(bad)
push
mov
repnz
sub
or
xor
or
cmp
mov
cld
cmp
aam
imul
dec
push
xchg
xor
(bad)
(bad)
(bad)
cld
or
push
jp
aas
mov
push
out
xor
mov
dec
and
ins
into
inc
mov
pop
loop
pop
popa
(bad)
(bad)
(bad)
dec
xchg
sbb
dec
or
jne
cmp
jb
shr
retf
retf
mov
mov
(bad)
(bad)
(bad)
inc
mov
iret
mov
mov
push
arpl
cmps
je
xor
mov
or
std
repnz
adc
jle
xor
sbb
add
jg
(bad)
xlat
inc
cmp
pop
add
jmp
sub
(bad)
(bad)
jmp
je
cmp
das
arpl
xor
arpl
cs
arpl
das
jne
(bad)
cmp
push
push
xor
pop
jns
pop
jge
ins
(bad)
push
push
or
push
sbb
add
ins
ja
fild
or
add
xor
push
xor
adc
push
lods
fnsave
push
lock
ins
lock
shl
add
xor
xor
xchg
loop
adc
movq
jo
xor
cmps
in
ins
cmps
int3
pusha
ds
inc
push
pop
(bad)
jmp
jmp
jl
pop
mov
in
jl
sub
(bad)
call
jmp
mov
popa
pop
push
dec
pop
xchg
and
cmp
inc
cmps
es
cli
jmp
mov
enter
cmp
fcomip
jmp
neg
adc
mov
and
daa
imul
(bad)
push
(bad)
or
sub
stos
mov
sahf
push
fs
in
in
jbe
fdiv
outs
xchg
retf
and
(bad)
(bad)
call
jp
and
bound
push
jb
nop
shl
arpl
pop
adc
mov
cld
stos
(bad)
(bad)
(bad)
inc
(bad)
fistp
and
lahf
ror
adc
mov
imul
adc
xchg
mov
sub
cs
es
pop
mov
(bad)
(bad)
call
jae
sbb
jb
out
and
xchg
xchg
push
jmp
inc
icebp
clc
lea
jnp
xor
jg
mov
push
mov
test
in
sbb
in
(bad)
(bad)
xchg
sbb
mul
(bad)
push
pop
enter
jp
or
sub
inc
xchg
retf
aad
ja
in
add
fwait
inc
(bad)
adc
test
inc
rcl
icebp
mov
adc
inc
gs
imul
dec
sbb
adc
add
push
test
xor
outs
fbstp
inc
push
jae
jo
xor
jno
mov
imul
outs
adc
add
std
dec
or
sub
add
push
adc
cs
mov
inc
stos
xor
xor
xor
xor
xor
xor
push
sbb
xor
xor
icebp
adc
bound
or
(bad)
push
pusha
add
inc
dec
test
iret
cdq
aas
and
pop
push
mov
jo
(bad)
(bad)
(bad)
aas
jecxz
jle
js
aad
sub
outs
pop
adc
idiv
cs
or
sti
out
popf
add
popa
push
in
ret
cs
leave
and
call
jl
xor
inc
ret
mov
push
cdq
mov
push
(bad)
(bad)
(bad)
jmp
push
jae
xor
lds
add
loop
mov
push
pop
rcr
mov
call
pop
loopne
adc
lods
fdiv
xchg
sub
adc
xchg
pushf
loopne
xor
xor
and
(bad)
(bad)
(bad)
inc
lds
nop
sahf
std
retf
add
popa
dec
movs
(bad)
loopne
or
xlat
xor
(bad)
call
pop
in
push
push
in
(bad)
aad
xor
(bad)
cmp
test
add
cmp
lds
int3
add
(bad)
(bad)
(bad)
dec
cmp
xchg
cmp
xor
xor
cld
cmp
fiadd
ins
push
push
bound
repnz
call
pop
jmp
and
xlat
lods
sahf
out
popf
ins
mov
jo
ins
ja
add
aaa
dec
sti
dec
jmp
push
mov
xchg
push
dec
jb
in
sub
call
test
mov
xchg
add
and
or
fbstp
call
add
(bad)
xor
xor
in
aas
popa
(bad)
aad
jno
cld
lods
jg
push
sbb
and
lock
scas
and
adc
into
add
(bad)
jg
test
ror
push
mov
sub
inc
sub
dec
icebp
jmp
call
cmp
ret
cs
cmp
pop
arpl
xor
adc
shl
(bad)
(bad)
push
call
pop
add
iret
or
and
add
ret
lea
fnstsw
cdq
(bad)
(bad)
(bad)
call
loopne
icebp
dec
mov
dec
leave
in
jmp
mov
adc
imul
(bad)
std
enter
stos
ins
stos
mov
inc
dec
and
and
movs
nop
adc
jmp
je
sbb
dec
push
inc
cdq
xchg
cmp
jns
iret
xor
xor
cli
aaa
std
fld
rcr
es
push
dec
scas
call
ffreep
(bad)
inc
cmp
stos
sub
pop
and
leave
mov
or
sahf
scas
dec
cld
(bad)
(bad)
ds
inc
xchg
sbb
push
cmp
pushf
dec
lods
lods
jnp
es
imul
or
imul
jecxz
dec
inc
out
fdivr
out
in
xchg
mov
rol
aas
fcom
(bad)
(bad)
(bad)
(bad)
dec
retf
ds
movs
and
cmc
sub
and
push
fwait
movs
fstp
repz
mov
call
jbe
and
add
inc
mov
ficom
pop
mov
mov
add
push
stos
add
pop
sub
add
add
pop
add
mov
or
(bad)
faddp
(bad)
ins
add
in
push
loopne
add
add
add
loop
in
pop
add
inc
add
adc
pop
or
cmps
mov
call
or
sbb
sahf
or
loop
inc
daa
pop
xchg
dec
xor
xor
inc
xchg
das
and
jns
lods
mov
sbb
push
ins
ins
daa
dec
aaa
inc
push
jns
rol
push
inc
pop
imul
mov
pop
push
inc
repnz
push
cmp
or
dec
xchg
cmp
call
outs
push
inc
fmul
les
aas
inc
push
or
inc
xchg
push
xor
fadd
aaa
aas
retf
sub
sar
pop
pop
dec
dec
dec
sbb
les
clc
outs
jg
adc
add
adc
inc
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
test
out
push
and
push
adc
pop
ret
js
jg
pop
add
(bad)
ja
adc
fld
ins
jl
xchg
xor
scas
mov
cwde
push
repnz
xchg
pop
int3
jl
mov
push
mov
xchg
lahf
push
pop
sub
jg
inc
(bad)
pop
ins
mov
stc
push
cmp
iret
ins
xchg
mov
out
std
sahf
mov
xchg
out
inc
push
and
inc
or
test
repz
dec
push
push
jnp
out
pop
push
push
push
dec
pop
xchg
fmulp
pop
adc
pop
add
push
or
loopne
out
push
add
cmp
and
add
inc
(bad)
(bad)
and
push
movs
push
rol
scas
cdq
mov
add
push
sub
imul
jnp
lods
cs
add
push
pop
shr
push
push
out
push
movs
aas
and
inc
fs
push
addr16
jl
or
ins
sub
movs
push
lds
test
and
pop
dec
sub
test
pop
dec
sub
sub
and
out
popa
test
mov
jnp
adc
push
outs
imul
pop
jae
daa
data16
es
outs
das
out
or
(bad)
ja
and
mov
out
mov
adc
shr
pop
sub
sbb
inc
jae
outs
inc
mov
or
xor
pusha
sbb
adc
inc
adc
mov
lds
je
imul
jne
sub
push
es
xchg
ds
cs
pop
cmp
ins
pop
mov
pop
fbstp
pop
mov
sub
push
mov
xor
shl
pop
mov
xor
popa
aas
cmps
mov
jae
mov
sub
jae
mov
dec
jnp
adc
ret
push
push
and
inc
iret
mov
xor
sbb
ja
sub
mov
outs
xchg
dec
inc
jle
and
push
test
arpl
out
or
test
and
ds
push
das
not
js
stos
adc
fs
scas
repz
mov
stos
jnp
push
pop
mov
dec
and
not
fs
push
sub
xchg
mov
data16
shl
imul
test
cmp
push
sbb
jp
fidivr
mov
rol
add
push
fwait
push
pop
inc
arpl
push
xlat
outs
mov
jae
and
pusha
adc
sub
(bad)
nop
ins
inc
loop
aas
inc
imul
jg
outs
xchg
lods
sub
or
scas
js
inc
xchg
xor
jmp
es
cmp
shl
mov
push
mov
int3
mov
mov
push
pop
and
das
inc
xlat
and
mov
stos
popa
add
ins
jmp
(bad)
pop
ds
shl
je
jnp
mov
imul
jnp
bound
stos
pop
cs
imul
pop
or
test
aaa
ins
mov
mov
xor
(bad)
test
push
sti
push
add
scas
push
js
shl
repnz
push
add
dec
shl
pop
or
(bad)
call
pop
je
imul
test
push
jecxz
jnp
jo
retf
inc
outs
repz
jl
dec
gs
arpl
jbe
(bad)
aaa
push
or
je
arpl
sub
pop
sub
imul
push
je
push
xlat
stos
daa
ret
or
xlat
cmc
loopne
outs
loop
ins
scas
je
ds
inc
jg
jo
sbb
scas
adc
ret
push
mov
xchg
push
pop
dec
inc
jnp
stos
outs
fisttp
arpl
pop
sbb
loopne
imul
push
test
les
mov
mov
push
add
mov
inc
sbb
and
sti
call
jmp
(bad)
test
add
lds
loop
push
xchg
repz
pop
mov
jae
pop
push
sub
pop
mov
mov
push
jnp
lods
pusha
adc
sbb
or
jmp
ja
mov
mov
or
push
outs
xor
sbb
ret
fild
jecxz
scas
xor
daa
mov
inc
pop
mov
push
je
pop
adc
and
shl
dec
cmps
sub
jmp
mov
or
out
imul
cmps
jns
push
jecxz
sub
aaa
iret
pop
ret
lds
push
mov
push
jns
movs
add
jns
lods
loopne
fisttp
mov
inc
mov
pop
and
ret
mov
lahf
mov
ret
sti
lock
(bad)
xchg
js
ins
or
and
jbe
(bad)
pop
pop
and
pop
cdq
shl
push
sti
pop
jb
gs
repz
pop
arpl
lods
and
iret
out
pop
icebp
mov
imul
lea
sbb
call
add
jecxz
in
mov
test
cmp
jae
xor
mov
push
xor
xor
(bad)
push
inc
push
dec
mov
shl
jmp
jmp
or
dec
fild
push
mov
pop
pop
cmp
dec
adc
push
js
sbb
lea
push
xchg
jnp
imul
add
sub
(bad)
imul
pop
sbb
adc
ror
mov
sub
js
lods
add
xchg
je
out
mov
shr
popa
stos
mov
sti
daa
dec
pusha
ret
stos
xor
outs
adc
dec
jmp
lods
adc
adc
aam
pop
in
xor
imul
imul
sti
cmp
sbb
imul
and
ret
cmp
xor
xchg
test
popa
mov
dec
scas
push
or
sbb
lods
mov
xor
paddb
add
ret
add
fwait
sbb
sbb
hlt
ja
jo
sub
jno
stos
out
rol
push
and
jo
mov
mov
out
jae
repz
push
jae
mov
push
mov
dec
shr
dec
xchg
cld
cwde
mov
cmc
inc
outs
cmps
lahf
jae
ja
pop
push
xchg
push
sbb
push
cs
adc
mov
sub
stos
mov
pop
or
fcmovbe
xor
push
lods
add
imul
dec
adc
jns
mov
stos
mov
xchg
adc
ret
and
les
inc
rol
imul
sub
addr16
(bad)
ins
or
daa
jb
push
and
pop
outs
adc
arpl
mov
stos
inc
mov
and
inc
cmp
add
mov
cmps
les
lods
lea
iret
mov
mov
add
je
mov
pop
inc
or
clc
cs
arpl
aas
ret
pop
bnd
push
pop
push
mov
push
call
xor
cdq
imul
pusha
(bad)
adc
sub
test
fist
or
push
push
jp
inc
lds
push
fbld
daa
or
xchg
xor
sbb
xchg
dec
cmp
add
jo
xchg
js
test
add
mov
imul
mov
shr
stos
fwait
push
cli
je
sbb
out
mov
add
xchg
push
addr16
cmps
jmp
mov
sub
shr
or
and
cmps
mov
out
ret
fwait
sub
(bad)
sub
shl
adc
sbb
mov
outs
sti
xchg
ficom
inc
(bad)
jmp
popa
or
adc
jmp
ror
jmp
pop
ficomp
or
stos
pusha
(bad)
dec
push
lods
call
fiadd
cs
push
bound
aam
repz
mov
pop
pop
mov
sbb
(bad)
iret
xor
addr16
inc
dec
lods
loope
aas
ret
and
lods
sbb
cmps
and
pop
fbstp
inc
cmps
pop
xor
inc
inc
push
dec
shr
add
sub
ja
test
push
popa
test
arpl
mov
mov
push
add
imul
js
(bad)
je
imul
arpl
cs
mov
ja
jae
test
imul
icebp
or
push
xchg
push
mov
pop
and
fcomip
xchg
or
adc
or
movs
adc
push
dec
add
out
outs
(bad)
ret
jae
aas
adc
sub
and
fbstp
xlat
lds
cmp
push
add
neg
mov
lods
mov
inc
xchg
fs
xor
stos
mov
bound
enter
dec
addr16
sub
movs
inc
xchg
pop
lahf
xchg
jb
popf
iret
sti
out
pop
xor
jae
(bad)
pop
mov
paddsw
out
outs
aaa
aaa
add
pop
cmps
ss
outs
jns
js
inc
ins
aam
mov
dec
aas
push
jb
test
add
js
shl
cmps
fs
mov
jne
outs
push
icebp
sub
mov
jns
jb
push
sub
pop
dec
cmp
test
adc
sbb
stos
inc
lahf
jne
fdiv
fs
mov
mov
jo
pop
lods
jmp
(bad)
fld
mov
sub
mov
dec
mov
stos
cs
les
arpl
sub
sbb
stos
jno
stos
(bad)
arpl
(bad)
sub
add
aam
xlat
and
fwait
sbb
jae
inc
or
pop
ror
or
mov
rol
jg
mov
cwde
fild
push
pop
(bad)
aad
jb
mov
and
gs
sbb
cvtpi2ps
and
je
cwde
pop
ret
mov
inc
push
outs
lods
lods
cwde
fwait
cmp
bound
and
dec
inc
sub
mov
pop
sub
outs
sbb
jmp
shl
cmps
test
sbb
and
cwde
sub
ja
and
mov
(bad)
mov
dec
bound
add
imul
imul
and
daa
iret
push
ror
sbb
scas
jae
retf
push
push
and
mov
add
(bad)
bound
jmp
xchg
or
es
popa
sub
mov
imul
ins
(bad)
pop
lahf
das
(bad)
push
mov
or
outs
rcr
and
jno
iret
ds
dec
ret
pusha
ret
pop
inc
pushaw
rcl
inc
mov
xor
retf
and
sub
push
jae
daa
mov
pop
sbb
sbb
add
popa
adc
stos
mov
sbb
mov
fs
xor
mov
and
shl
loop
sahf
push
jnp
jnp
push
and
loope
fwait
sub
xchg
cs
pop
sti
scas
arpl
sub
and
adc
test
inc
adc
rol
sub
sub
test
dec
lods
pusha
xor
daa
mov
inc
ror
daa
inc
cmp
(bad)
pusha
add
test
sub
shl
sbb
or
sbb
fild
add
xchg
or
push
sar
push
dec
or
sbb
inc
xchg
dec
jmp
or
aaa
add
adc
hlt
push
push
cmp
retf
cmps
stos
sub
and
mov
mov
aas
dec
jecxz
movs
jae
push
jne
scas
ins
das
jo
inc
mov
daa
or
adc
(bad)
(bad)
cmp
ins
inc
ins
mov
pop
ds
ss
call
push
sub
inc
add
or
jbe
adc
pop
cmp
xor
adc
jmp
ret
xchg
ja
push
les
jae
and
test
iret
call
sub
pop
rcl
retf
add
adc
mov
inc
and
cmp
dec
daa
into
vmread
xor
and
bound
push
and
mov
inc
pop
aaa
cmp
xchg
mov
imul
mov
cmp
stos
addr16
xor
pop
mov
add
cli
inc
xchg
inc
pop
mov
loop
inc
repnz
sbb
inc
mov
cmp
push
jecxz
(bad)
jmp
and
ds
jns
jb
xor
sub
xchg
adc
add
mov
sbb
sub
or
add
adc
in
rcr
cmp
pop
and
jg
dec
adc
sub
call
pop
jb
xor
dec
ja
aaa
ret
add
arpl
outs
sub
jo
or
and
push
cmp
pop
jl
jmp
pop
pop
stos
sub
xchg
scas
outs
aas
push
imul
mov
lods
inc
pop
push
or
iret
xor
jno
aas
imul
pusha
cmp
xchg
jae
mul
xchg
pop
(bad)
mov
dec
push
je
pop
test
test
sub
mov
jns
add
mov
inc
mov
aas
sub
sub
call
rol
stos
mov
sub
or
(bad)
movs
fmul
xor
push
add
pop
shl
test
dec
lods
arpl
test
fwait
stos
loopne
push
mov
dec
adc
ja
inc
push
and
mov
push
fist
adc
nop
push
lea
pop
lea
xlat
ins
add
jmp
aas
push
out
test
imul
xor
jnp
jae
daa
xor
dec
ret
ror
pop
pop
jae
pop
push
or
rcl
adc
sub
or
jae
call
outs
add
lea
xchg
pop
pop
pop
stos
rol
dec
ins
push
arpl
(bad)
push
lods
inc
fidivr
jg
push
aaa
je
pop
fs
push
adc
inc
inc
mov
xchg
cs
xor
mov
movs
icebp
dec
out
dec
mov
add
fwait
sub
rcr
add
mov
div
outs
sub
pop
inc
and
pop
mov
sahf
lea
xor
lods
cwde
mov
mov
outs
mov
push
xchg
btc
xchg
mov
mov
jae
mov
xchg
sbb
(bad)
fimul
repnz
aaa
and
and
ja
dec
add
or
lock
or
push
aad
jne
addr16
push
icebp
add
and
ins
lock
jb
addr16
test
and
(bad)
stos
sbb
out
cmps
xor
xchg
xor
sub
cmp
or
addr16
push
rcl
mov
imul
scas
out
sbb
dec
xchg
mov
das
sub
mov
test
push
push
pop
mov
and
add
test
xchg
aam
cmp
dec
aad
push
mov
adc
iret
out
mov
repz
add
pop
ds
and
sti
fist
sub
(bad)
mov
rol
scas
daa
xor
mov
daa
retf
sub
sub
aas
imul
and
arpl
dec
addr16
call
xor
xor
or
int
mov
outs
push
xchg
daa
jb
(bad)
rcl
(bad)
fstp
sbb
sti
pop
ror
xor
pop
xor
pop
cs
sbb
dec
shr
scas
aaa
or
inc
pop
sub
test
and
ja
push
fnstenv
adc
push
mov
call
jnp
mov
gs
xchg
and
fild
loop
mov
sbb
jmp
mov
jp
pop
mov
lahf
out
imul
inc
pop
rcl
lahf
push
push
inc
fdivr
call
daa
push
inc
ja
pop
das
ds
xor
sub
push
dec
pop
inc
add
push
push
movs
mov
pop
mul
lods
mov
pop
sub
jmp
jne
adc
js
jae
mov
fmul
fist
lock
bound
es
mov
lahf
aas
fwait
(bad)
fisub
xor
aas
dec
pusha
mov
xor
inc
call
mov
popa
jae
adc
mov
aas
jg
dec
mov
adc
fsub
movs
outs
xchg
mov
pusha
add
ins
mov
idiv
sub
or
and
aad
xchg
ror
push
call
mov
cmp
fist
jnp
div
xor
or
and
add
scas
dec
mov
xchg
push
push
and
pop
sbb
jae
pop
jo
xchg
test
sbb
(bad)
pcmpgtw
(bad)
inc
pop
cmp
dec
pop
sbb
mov
loope
add
push
adc
sub
and
imul
arpl
or
xchg
push
int3
adc
ins
xchg
jae
loop
push
ja
out
and
sub
lods
bound
push
aaa
pop
or
and
pop
adc
cmp
xor
dec
pop
jae
sbb
sbb
dec
add
adc
scas
xchg
push
mov
retf
arpl
cli
xor
(bad)
push
(bad)
and
pop
stos
add
add
dec
dec
jb
xor
(bad)
cmc
or
xlat
popa
imul
repz
push
sbb
in
xor
ja
add
jl
and
rcl
bound
mov
xchg
push
sub
mov
jne
jbe
push
mov
imul
(bad)
push
pop
add
rol
or
or
jno
inc
and
dec
add
rol
xchg
loopne
mov
xor
je
mov
adc
cmp
sub
ins
lds
aaa
pop
loop
data16
jae
jl
jp
cmp
jp
les
push
popa
add
inc
daa
mov
mov
scas
aas
das
inc
stos
or
adc
xor
pop
xchg
sub
sbb
fwait
ret
call
mov
or
loopne
ret
push
int
aaa
sbb
push
and
cmps
mov
dec
sub
dec
test
mov
jbe
shr
repz
add
jne
imul
cwde
pop
or
call
stos
inc
movs
cmps
pop
pusha
push
inc
(bad)
ds
and
mov
lahf
(bad)
jns
fimul
xor
xlat
jo
mov
ss
call
and
xlat
pop
or
aaa
and
sbb
inc
pop
jne
test
fcmovnbe
sbb
inc
mov
fwait
or
sub
push
push
or
pop
mov
mov
adc
stos
adc
xchg
pop
test
xor
inc
rol
ror
add
test
and
lea
push
pop
repz
and
bound
mov
pop
or
ja
push
mov
and
ins
sub
pusha
repz
les
mov
push
xchg
dec
jns
les
ret
inc
push
rcr
push
dec
sbb
and
cmp
mov
aad
aas
and
cmp
movs
mov
ret
das
and
aaa
inc
mov
and
(bad)
mul
push
(bad)
pop
mov
push
sub
push
mov
push
jae
pop
sub
js
mov
and
ins
fbld
inc
movs
aam
pop
lods
and
fisttp
mov
pop
pusha
fbld
imul
outs
sub
test
push
scas
mov
adc
(bad)
das
inc
adc
mov
mov
and
pop
out
sub
movs
mov
fwait
xor
lds
inc
xchg
stc
shr
push
add
fist
sub
or
test
(bad)
ja
cmp
push
adc
stos
push
adc
lods
add
pop
xor
add
xchg
mov
retf
ds
lea
inc
mov
scas
shr
adc
stos
inc
out
or
iret
jo
stos
dec
add
jmp
mov
pop
(bad)
pop
push
(bad)
stos
ret
cs
add
es
push
pop
(bad)
cmp
sbb
stos
jmp
push
sbb
outs
push
pop
sub
mov
neg
and
sub
add
mov
jmp
mov
and
mov
lea
iret
sub
push
xor
imul
cmp
sbb
cmp
cmp
pop
add
xor
stos
out
nop
mov
lods
das
(bad)
mov
mov
repz
aam
lods
aas
dec
xor
pop
and
inc
add
sub
inc
mov
mov
dec
getsec
cmp
mov
aaa
mov
sti
mov
pop
push
push
retf
outs
movs
mov
scas
lahf
xchg
sub
add
or
cmps
pop
or
shl
mov
das
push
(bad)
stos
or
mov
out
mov
and
add
lods
rcr
xchg
dec
out
ret
mov
inc
stos
(bad)
xchg
pop
ret
cs
xchg
pop
pop
xor
and
repz
sbb
aas
pop
add
stos
inc
push
mov
stos
aas
and
push
mov
and
xor
test
arpl
aaa
mov
push
xor
pop
dec
(bad)
xor
(bad)
js
inc
xlat
xor
sub
sub
outs
div
sbb
push
test
jno
aaa
jmp
inc
test
sar
addr16
xor
call
push
mov
stos
outs
mov
ja
add
xor
xchg
cwde
stos
sub
(bad)
xor
imul
(bad)
lods
inc
and
leave
sbb
push
stos
aad
or
mov
mov
pop
sbb
jnp
jo
imul
jo
pop
cmps
jge
mov
call
mov
adc
cmp
and
or
and
retf
shl
sub
or
add
add
adc
aas
and
stos
push
stos
and
push
dec
stos
dec
retf
jmp
lods
es
mov
fwait
xchg
or
inc
and
pop
mov
or
mov
fcom
sbb
push
add
mov
inc
mov
stos
test
pop
mov
adc
cmp
pop
or
mov
pop
xchg
and
sbb
mov
mov
(bad)
sub
cmp
sbb
lods
dec
nop
das
sub
adc
pop
and
nop
mov
adc
xchg
mov
jnp
je
mov
sub
ror
inc
add
aas
stos
fiadd
and
xchg
iret
xchg
mov
bound
outs
aad
push
add
retf
sbb
rol
adc
scas
sub
fist
mov
jg
sbb
or
adc
inc
cmps
xchg
pop
lds
dec
arpl
ja
inc
sub
xchg
mov
xchg
ja
adc
sbb
mov
stos
mov
and
addr16
push
movs
je
inc
daa
retf
sbb
xchg
lahf
test
mov
lods
inc
jmp
xchg
loop
inc
aas
jb
movs
popa
adc
pushf
dec
xor
lods
pop
fbstp
add
stos
fwait
pop
jnp
test
jl
sub
test
xchg
jae
add
jmp
mov
or
loopne
mov
retf
cmp
push
add
inc
lds
sbb
das
leave
pop
sbb
or
lods
bound
stos
mov
dec
sub
inc
aaa
push
cmp
inc
fmul
lea
dec
test
sub
stos
and
xlat
mov
pop
daa
stos
adc
push
lds
bound
add
push
imul
add
rcr
adc
aam
sub
mov
fidiv
sub
xchg
or
inc
and
fcomp
ud0
ret
mov
sbb
mov
mov
pusha
xchg
out
xchg
dec
mov
in
sub
jg
xlat
or
call
daa
xor
aas
adc
push
push
push
mov
inc
mov
outs
bound
(bad)
mov
fstp
(bad)
rol
xchg
jns
sbb
xchg
pop
push
test
(bad)
repz
movs
adc
sub
shl
or
adc
jbe
js
inc
xchg
arpl
leave
xlat
cmp
push
push
jne
push
xchg
xor
(bad)
fist
and
sub
cmp
adc
les
stos
cs
and
inc
or
mov
movs
sti
adc
xor
mov
mov
inc
imul
lods
add
adc
mov
pop
cmps
xor
push
cmps
xor
and
test
(bad)
sub
mov
pop
or
and
push
xchg
daa
jmp
lods
push
sar
outs
pop
call
data16
or
fild
push
stos
and
adc
sbb
sbb
scas
jae
test
call
add
jbe
push
dec
cmp
pop
loopne
sub
mov
cmc
or
jg
jne
jmp
add
enter
sti
push
dec
mov
xor
lahf
jne
adc
test
cmp
sub
jb
or
add
cwde
bound
dec
jb
sbb
test
inc
test
lahf
xor
fistp
mov
jae
daa
xor
mov
dec
ins
inc
popa
adc
dec
jae
sar
fwait
(bad)
loop
inc
or
push
sub
lods
sub
lods
pop
dec
cmps
mov
and
pusha
(bad)
jecxz
dec
pop
adc
ret
push
outs
and
or
inc
(bad)
outs
aaa
call
push
push
cwde
pop
daa
jae
inc
stos
inc
adc
ret
mov
inc
mov
jecxz
cwde
nop
add
mov
inc
sub
add
cmps
pop
cmp
mov
pusha
jne
xor
sbb
add
mov
mov
jmp
loop
aaa
aas
lods
and
imul
jne
or
shl
add
bound
imul
es
iret
daa
sub
not
cmp
xchg
loopne
retf
sub
inc
adc
bound
and
xor
imul
push
mov
lods
aas
jae
arpl
rol
push
pusha
push
pop
cmp
arpl
(bad)
retf
pop
mov
mov
out
addr16
inc
inc
mov
and
pop
lods
cwde
mov
pop
cmp
ret
inc
mov
sbb
pop
rol
mov
je
pop
mov
shl
lds
add
jae
cmp
mov
mov
adc
addr16
dec
(bad)
aas
aas
sub
mov
fist
stos
push
ror
lods
popa
inc
adc
push
jg
ja
and
nop
jae
adc
inc
xchg
mov
test
push
ror
aas
add
test
inc
add
inc
in
iret
cmp
xor
scas
jecxz
or
pop
adc
pop
mov
sub
scas
sub
loopne
fadd
call
push
popa
inc
in
dec
ss
add
lods
and
(bad)
faddp
push
popf
add
push
adc
inc
mov
shl
mov
mov
jecxz
mov
aaa
jne
inc
lods
or
adc
or
and
push
sub
mov
mov
xchg
gs
loop
sub
imul
jmp
mov
outs
mov
pop
fwait
adc
or
sub
jmp
fisubr
dec
adc
sub
adc
lods
dec
das
push
ffree
cmp
shl
push
add
mov
inc
and
jno
sbb
push
adc
dec
sti
sub
inc
xor
(bad)
cmp
ins
shr
sub
mov
sub
mov
ret
daa
xchg
ins
xor
add
pop
xor
movs
sub
iret
sti
add
xchg
pop
loopne
and
outs
jg
ins
and
add
imul
add
test
div
sub
xor
(bad)
sub
pop
je
mov
sub
xchg
and
inc
jmp
rcpps
adc
pusha
dec
adc
movs
sbb
mov
sbb
xor
add
dec
and
daa
fcom
add
add
push
aad
xchg
inc
sub
stos
arpl
fstp
je
adc
bound
xchg
jmp
mov
jae
aad
fwait
sbb
retf
inc
and
push
neg
push
jecxz
jne
sbb
scas
and
ret
jecxz
add
or
jmp
push
ins
jge
adc
inc
pusha
mov
jnp
add
pusha
lods
sub
xchg
xor
dec
outs
out
cmp
mov
aaa
xchg
add
mov
pop
mov
mov
cs
adc
inc
add
jg
stos
and
imul
add
jecxz
xor
push
xor
stos
mov
bound
inc
inc
mov
xor
dec
mov
push
adc
pop
fsubrp
call
aaa
ud2
sbb
adc
add
les
test
jae
xchg
ret
pop
mov
ret
arpl
push
push
lods
sbb
xor
mov
add
arpl
mov
out
mov
lods
mov
(bad)
push
fwait
dec
mov
and
lods
cwde
imul
nop
mov
pop
push
popf
adc
mov
adc
loope
adc
outs
lods
inc
loop
cmps
dec
fwait
movs
push
and
adc
or
(bad)
xlat
inc
mov
mov
sbb
lds
jae
rol
jae
pop
mov
inc
xchg
xchg
mov
movs
xor
cmp
adc
and
xchg
push
dec
(bad)
dec
ins
xor
shr
arpl
mov
adc
mov
adc
scas
sti
ins
push
pop
jb
fbld
add
mov
das
sbb
sub
nop
test
lods
sub
push
and
jecxz
out
adc
adc
jecxz
add
pop
daa
inc
adc
test
inc
push
pop
mov
add
push
pop
daa
mov
sub
lods
sbb
daa
data16
mov
out
ins
dec
ja
ret
dec
adc
add
mov
xchg
pop
push
xlat
jnp
adc
push
pusha
lods
fs
mov
mov
pop
test
sti
aaa
hlt
mov
mov
mov
push
outs
pop
(bad)
pusha
je
or
sub
sub
cmp
imul
or
js
sbb
gs
mov
gs
mov
dec
(bad)
shl
add
mov
jg
ror
sub
mov
adc
and
unpckhps
dec
inc
and
adc
mov
lock
xor
mov
jmp
loopne
out
add
ins
pop
sti
jns
test
test
imul
xchg
and
mov
sbb
lds
add
fbld
out
fcmovne
xor
mov
pop
sub
or
pop
stos
sbb
inc
retf
outs
jecxz
js
jg
or
ret
or
je
cmp
xor
(bad)
popa
push
pop
or
call
mov
pop
pushf
ror
pop
xchg
and
inc
or
lahf
(bad)
dec
bound
mov
ret
and
sub
mov
test
or
cs
ret
dec
pop
adc
adc
dec
dec
popa
add
ret
mov
addr16
lods
push
xchg
jo
leave
js
rol
mov
mov
frstor
xlat
arpl
or
jl
inc
xchg
(bad)
and
mov
or
mov
pop
ror
mov
xchg
dec
push
xchg
cmp
sbb
stos
das
or
lahf
adc
xchg
and
mov
jnp
xlat
inc
mov
mov
repnz
add
adc
pushf
xlat
call
rcl
jnp
cs
add
pop
pop
fidivr
dec
xor
adc
ins
push
icebp
dec
push
pop
inc
sbb
daa
mov
in
cmp
dec
push
inc
aas
sub
ins
xchg
jae
push
imul
cmp
mov
jbe
push
das
pop
aas
ror
adc
into
inc
dec
dec
sub
inc
pusha
loopne
dec
and
pop
push
jns
sub
push
bound
mov
adc
xchg
inc
cmps
jbe
mov
imul
push
pop
adc
or
inc
stos
dec
(bad)
mov
sbb
shr
inc
adc
cmp
mov
lock
repnz
pop
inc
jmp
lock
dec
dec
cmp
or
fnstsw
pusha
jo
fimul
jmp
pop
xor
stos
mov
pop
aas
sub
out
push
push
lahf
dec
(bad)
or
add
push
mov
jl
xchg
and
mov
outs
pop
icebp
pop
pop
mov
js
idiv
push
add
mov
push
inc
jmp
jle
pop
call
(bad)
xor
add
pop
outs
inc
lods
jecxz
or
pop
mov
xor
inc
push
jl
imul
xchg
out
or
movd
iret
out
inc
xchg
xchg
dec
adc
sbb
arpl
not
dec
daa
out
pusha
js
mov
push
inc
inc
out
aad
lds
jg
push
outs
pmaxsw
and
in
ins
xchg
inc
cmp
or
mov
xchg
dec
fwait
or
shl
cmp
inc
imul
mov
push
daa
jns
add
fimul
mov
test
repz
stc
or
pop
mov
mov
lahf
mov
mov
shr
push
dec
inc
mov
xor
inc
and
outs
xor
imul
adc
test
mov
and
pop
jmp
enter
push
arpl
adc
xchg
xor
push
out
and
push
xchg
mov
ret
push
dec
xor
ficom
push
add
push
inc
fbstp
mov
or
fistp
aas
stos
add
iret
bound
add
inc
pop
jmp
sub
fistp
dec
dec
xchg
mov
push
add
retf
cmp
inc
sub
shl
and
dec
bound
fwait
mov
sub
das
xor
sbb
mov
sub
ret
pop
mov
loop
imul
sti
add
pop
adc
arpl
stos
aas
iret
fimul
add
or
dec
pop
adc
mov
inc
popa
aad
mov
mov
bound
out
xchg
test
jg
loop
shr
ja
jnp
dec
push
xchg
xor
sub
push
ret
sub
stos
sub
jg
outs
sbb
jae
mov
or
ret
add
ja
lods
sub
test
xor
pop
xor
cmp
shr
jmp
and
(bad)
aaa
cwde
sub
push
aaa
mov
adc
mov
lea
xchg
mov
pop
push
(bad)
pop
add
xchg
inc
call
sbb
jo
add
inc
mov
ror
test
nop
add
pop
mov
ins
inc
pop
push
adc
xchg
fcmovu
dec
sbb
mov
cmp
pop
or
lods
dec
ins
add
mov
xlat
movs
push
xor
add
or
or
call
xchg
pop
mov
ret
inc
movs
mov
mov
cmp
xchg
nop
mov
sub
jmp
add
adc
mov
sti
push
mul
jmp
lea
adc
sub
push
pop
aad
lar
or
jmp
add
(bad)
cmp
jb
mov
inc
add
mov
pop
scas
jg
pop
pop
adc
add
data16
and
adc
stos
add
ja
and
mov
pop
pop
mov
stos
stos
xor
mov
sub
sub
dec
and
aas
xchg
mov
inc
xor
daa
loop
jo
arpl
or
arpl
das
imul
aas
inc
les
add
sub
fistp
stos
jg
adc
sub
xor
and
mov
add
mov
or
mov
repz
fisubr
pop
or
mov
sub
cmp
sbb
add
add
aas
push
lods
mov
mov
aaa
jmp
mov
pop
inc
dec
aad
or
push
dec
jae
sub
mov
mov
jecxz
add
lahf
adc
shl
loopne
inc
les
aad
push
mov
ja
xchg
mov
add
or
add
pop
add
daa
rol
dec
push
add
xchg
(bad)
fist
add
adc
addr16
retf
xor
dec
sbb
push
add
xlat
mov
xchg
add
shr
arpl
push
call
or
xchg
push
xor
mov
add
ja
pusha
push
xor
imul
inc
iret
scas
or
mov
mov
imul
ret
mov
xchg
popa
lods
dec
jnp
mov
(bad)
je
sbb
gs
adc
adc
inc
mov
xchg
push
lahf
dec
adc
push
arpl
aaa
lods
pop
js
push
daa
jmp
mov
cmp
addr16
retf
mov
lods
fild
and
es
push
lock
xchg
jg
jmp
loop
(bad)
mov
sub
adc
add
inc
inc
mov
pandn
push
shr
imul
jmp
and
sar
outs
xchg
lea
push
or
pop
dec
jns
(bad)
nop
sub
mov
mov
jb
sbb
(bad)
jo
inc
and
adc
mov
fbld
sbb
sub
aaa
mov
xchg
mov
xor
pop
jb
pop
stos
inc
pop
fisttp
pop
fwait
not
and
push
iret
sbb
ss
jmp
mov
sub
dec
xlat
push
xor
cmps
sub
sub
stos
xor
je
cmps
das
or
add
mov
retf
daa
mov
add
retf
pop
push
sbb
sbb
push
shl
dec
mov
mov
push
idiv
pop
jbe
movs
inc
mov
adc
add
imul
push
inc
pop
xchg
bt
mov
lods
xchg
jp
rol
xchg
adc
(bad)
xor
adc
not
or
adc
rol
aaa
mov
push
inc
mov
add
cmp
sub
cmp
stos
jo
pop
test
addr16
inc
mov
pop
retf
sub
add
pop
and
mov
jb
sub
out
jae
xor
mov
sbb
sub
fwait
dec
mov
repz
jcxz
adc
adc
stos
cmp
daa
dec
les
ja
and
jnp
xchg
xor
out
mov
inc
mov
jg
adc
cmp
inc
sbb
rol
push
pop
iret
mov
mov
stos
(bad)
push
push
adc
pop
dec
pop
out
imul
arpl
adc
sbb
jg
aaa
mov
inc
ins
and
push
sub
sbb
nop
jb
into
push
lea
inc
lods
add
call
add
pop
sbb
xchg
pop
jmp
dec
mov
xor
or
cmp
shr
dec
fucomi
jge
xchg
outs
cmp
xchg
outs
arpl
(bad)
dec
xchg
xlat
(bad)
mov
mov
dec
arpl
imul
sbb
mov
jne
inc
or
ret
push
jge
lock
mov
and
add
pop
dec
xlat
ins
lods
push
add
dec
push
or
inc
pop
cmp
fprem
xlat
sahf
pop
sbb
push
push
jecxz
mov
(bad)
call
fild
dec
lahf
push
ret
sub
shufps
les
cmp
inc
pop
(bad)
idiv
add
fisub
pop
pop
xor
add
push
xor
sub
pop
mov
mov
fild
mov
pop
xor
call
dec
fimul
inc
retf
mov
cmp
das
sub
outs
and
inc
sub
out
enter
cmps
mov
sub
dec
pop
adc
adc
inc
cmp
fs
inc
xor
mov
xchg
dec
inc
inc
sbb
inc
dec
rcl
adc
mov
pop
inc
sub
ja
daa
push
push
inc
mov
fmul
shl
inc
add
dec
loop
or
sub
data16
(bad)
je
jg
or
fnstsw
or
shl
mov
mov
pop
add
and
dec
repz
pusha
adc
and
ins
rcl
inc
ja
push
por
dec
mov
push
scas
or
adc
cs
pop
add
stos
pop
jg
dec
cmps
jno
pop
fist
sbb
mov
shr
rcl
mov
(bad)
mov
retf
ret
call
arpl
inc
lods
adc
jb
push
and
loopne
xor
push
cmp
mov
xor
test
jb
jae
mov
xchg
xor
sbb
add
rol
adc
push
xchg
sbb
out
ret
imul
mov
dec
paddusw
and
cmps
dec
jne
lods
scas
imul
pop
rcr
dec
dec
add
push
fild
fwait
push
xchg
add
dec
fcmovnu
dec
shl
adc
and
rcr
retf
inc
iret
dec
inc
inc
jo
inc
sbb
mov
dec
daa
push
ja
mov
adc
aas
mov
push
mov
movs
imul
mov
stos
jo
mov
inc
push
repz
rcl
jecxz
dec
sbb
mov
ins
ret
xchg
movs
pusha
dec
shl
inc
inc
sbb
mov
repz
fimul
push
fcomp
cmps
jae
je
and
xchg
(bad)
out
jp
mov
add
call
loope
push
adc
inc
pop
adc
sbb
dec
xchg
es
pop
xlat
dec
dec
adc
pop
sub
pop
or
daa
imul
cs
push
dec
pop
mov
out
shr
sub
mov
pop
xchg
cmp
adc
jl
das
fild
sub
add
or
mov
mov
push
movs
dec
and
xor
xor
add
(bad)
sbb
add
adc
retf
data16
xor
popf
push
jmp
or
or
xchg
lds
das
dec
adc
pop
xchg
bound
xor
sbb
cmp
dec
stos
sbb
mov
adc
add
push
inc
arpl
aam
retf
mov
and
es
arpl
ins
popa
jae
inc
push
mov
les
sbb
dec
movs
add
sub
and
pusha
mov
xchg
jmp
ror
xchg
pop
daa
jmp
add
arpl
mov
and
push
or
mov
cmps
test
inc
(bad)
call
mov
or
inc
mov
and
push
(bad)
dec
xor
call
adc
ret
adc
pop
imul
fimul
ret
test
xchg
mov
xchg
mov
or
mov
sbb
pop
cmc
rol
jns
add
add
ja
(bad)
sub
mov
mov
das
sbb
lods
imul
mov
and
sub
stos
sbb
push
dec
pop
inc
or
dec
rol
ja
push
inc
cwde
sub
dec
or
xchg
arpl
mov
call
mov
add
mov
mov
bound
mov
and
ret
sub
mov
mov
(bad)
test
iret
stos
xchg
inc
pop
stos
xor
imul
aas
jnp
retf
les
inc
mov
push
xchg
mov
pop
test
add
daa
outs
push
add
cs
dec
mov
mov
jne
aaa
push
out
ds
xor
imul
sbb
mov
imul
pop
inc
sub
jecxz
stos
nop
or
or
gs
cs
push
arpl
adc
push
dec
test
int
push
pop
dec
add
push
fistp
and
adc
jnp
pop
ds
(bad)
mov
dec
add
adc
add
lods
or
imul
movs
ret
cli
ds
push
imul
sub
or
push
cmp
push
jmp
sub
mov
or
(bad)
iret
or
sub
dec
bound
adc
push
rol
(bad)
fwait
das
(bad)
(bad)
fidiv
lods
mov
mov
pop
sub
jns
stos
inc
mov
pusha
xor
imul
dec
and
jl
ret
retf
xor
pusha
push
mov
cwde
push
mov
lds
adc
dec
dec
sbb
fcom
and
dec
cmp
inc
scas
stos
lods
(bad)
mov
(bad)
daa
fstp
pop
cmove
mov
(bad)
cmps
adc
out
xchg
je
push
out
das
sub
imul
or
xchg
aas
adc
jne
inc
xor
xor
(bad)
sub
jo
lods
stos
push
add
mov
sub
outs
sahf
xlat
daa
cmp
push
sub
mov
aas
inc
js
inc
test
mov
cmps
xchg
rcr
mov
push
or
cmp
dec
mov
or
mov
je
lahf
sub
jmp
adc
mov
jp
pop
inc
or
xor
push
xchg
xor
stos
dec
dec
out
mov
cmp
add
sbb
mov
xchg
test
scas
mov
outs
imul
iret
mov
or
and
(bad)
aas
add
stos
add
mov
lods
les
inc
and
add
sub
jg
fld
adc
push
push
shl
in
ret
jmp
or
mov
adc
mov
jo
mov
mov
inc
add
sbb
inc
inc
add
xchg
adc
retf
ret
add
push
shr
repz
ficomp
inc
sbb
xchg
dec
add
mov
pop
xchg
inc
dec
inc
in
pop
jo
ficom
adc
pop
pop
rcl
(bad)
add
aas
xor
ss
ret
loope
sub
sti
sub
add
add
imul
daa
outs
sub
fwait
cmps
push
or
outs
ret
add
pop
stos
aad
and
les
fisttp
int3
es
mov
inc
daa
or
push
bound
mov
cmc
mov
adc
pop
out
inc
mov
mov
mov
xchg
or
inc
and
or
push
arpl
bound
fist
add
jae
test
mov
add
scas
lods
inc
pop
mov
and
sar
loopne
stos
push
out
ja
adc
jo
bndldx
or
xor
stos
mov
and
xor
pop
push
or
enter
aaa
aas
mov
bound
push
dec
std
cmp
dec
idiv
dec
or
out
dec
add
cmps
mov
mov
arpl
or
or
or
mov
outs
cs
mov
rcl
dec
mov
or
cmps
inc
cmp
retf
pop
sub
pusha
loop
lahf
mov
sbb
movs
cmps
addr16
lea
xchg
lds
dec
xchg
(bad)
xor
pop
mov
dec
lds
jae
rol
sbb
cmp
dec
test
lds
inc
cmps
adc
and
dec
push
stos
or
imul
jmp
mov
imul
add
dec
js
add
stos
retf
or
cwde
xchg
adc
loopne
mov
inc
mov
pusha
xchg
mov
and
addr16
aam
bound
mov
inc
mov
and
ret
or
cmps
data16
add
push
or
mov
xor
jb
jns
push
sbb
jmp
inc
rcl
nop
pusha
jno
dec
mov
sbb
ss
pop
mov
mov
inc
imul
adc
popa
add
addr16
add
ja
shl
aaa
dec
xchg
popa
inc
add
pusha
jmp
xchg
sub
aaa
mov
les
(bad)
inc
jecxz
xchg
and
mov
add
push
ud0
xchg
test
mov
cmps
xchg
mov
test
inc
pop
mov
xor
mov
test
movs
sbb
mov
nop
jecxz
xor
ja
sub
ins
xchg
mov
js
sub
mov
dec
test
and
push
jmp
pop
xlat
jmp
adc
mov
adc
add
jecxz
bound
nop
dec
pop
pusha
inc
sub
push
pop
push
rcl
xchg
push
cmps
test
adc
scas
(bad)
pop
pop
(bad)
sub
xor
in
loope
sti
dec
jo
add
inc
mov
nop
mov
call
add
adc
mul
dec
fsub
sbb
lds
dec
inc
or
mov
or
mov
movs
mov
adc
mov
push
pop
jg
adc
daa
arpl
mov
and
xor
sbb
xor
sbb
pushf
mov
sub
xor
cmp
or
sub
sub
push
pop
adc
ja
mov
imul
push
movs
mov
sbb
or
or
iret
xlat
mov
or
xor
sbb
push
push
jmp
stos
pop
or
pop
repz
lea
adc
dec
gs
mov
add
(bad)
stos
mov
dec
ja
cmp
add
pop
xor
test
cmps
lock
stos
adc
cmp
jnp
test
add
jg
ins
lods
add
rcr
push
xchg
or
lods
ret
cmps
push
mov
push
cmc
lods
sub
test
stos
add
xadd
inc
lods
enter
lock
addr16
push
push
pavgb
sbb
es
mov
push
das
sub
mov
pop
push
add
add
(bad)
mov
or
out
add
inc
(bad)
and
mov
adc
aaa
mov
push
inc
sti
dec
mov
pop
cmp
pop
test
inc
inc
push
ret
adc
mov
push
sti
mov
dec
and
add
add
add
inc
gs
sbb
(bad)
sti
out
inc
add
add
add
add
add
adc
add
sti
(bad)
mov
ds
or
add
add
add
aas
cmp
mov
cmp
inc
or
cmp
aas
in
mov
xchg
xor
push
xor
mul
sbb
ds
cmp
push
pop
inc
repnz
xor
pop
inc
lock
adc
pxor
inc
sub
xor
mov
dec
push
xor
xor
xor
(bad)
and
dec
addr16
pandn
xchg
push
ss
mov
mov
xor
ss
dec
inc
scas
iret
pop
ficomp
cmps
inc
push
ss
cmp
xchg
inc
add
cmp
inc
ucomiss
mov
movs
js
outs
inc
xor
ss
into
mov
inc
xor
xor
push
cmp
js
pop
inc
dec
inc
daa
inc
cmp
cmp
inc
push
ss
pusha
add
sti
cmp
mov
cmp
aaa
aaa
iret
imul
add
retf
cmps
sub
jo
jecxz
sbb
addr16
div
xor
pop
mov
ss
arpl
mov
push
xor
cmp
mov
sub
sub
mov
dec
adc
jp
ins
repnz
cmp
aas
jecxz
add
xor
stos
and
cmp
pop
outs
push
pop
dec
mov
cmp
xchg
neg
sub
sub
in
js
fidivr
retf
inc
dec
(bad)
jp
rcr
cmp
ret
ret
sub
dec
cmp
sbb
pusha
mov
dec
inc
addr16
ret
rcl
sbb
imul
xor
jb
or
jecxz
cmp
push
sar
push
js
mov
xor
jmp
ret
fcmovnbe
popa
ret
sbb
dec
fwait
pop
add
cmp
push
mov
push
fwait
addr16
iret
sub
out
cmp
pop
in
lds
cmp
fwait
or
xor
cmp
mov
ret
inc
jb
cmp
mov
mov
dec
cmp
(bad)
cmova
retf
sub
push
(bad)
imul
xor
retf
mov
inc
xchg
jb
push
mov
add
aas
cmp
inc
stos
sub
pusha
pop
pop
mov
push
push
pusha
(bad)
loop
scas
pop
jbe
inc
out
sbb
xchg
push
mov
pop
dec
sbb
xlat
mov
outs
adc
out
cmp
inc
call
ja
xor
shr
pop
dec
mov
mov
jle
and
xor
add
sub
or
das
mov
push
scas
mov
adc
cmp
ret
inc
sti
adc
dec
loop
rol
fisub
and
(bad)
scas
das
(bad)
jmp
or
inc
push
fsubp
adc
add
pop
jae
pop
jo
(bad)
cmp
loope
imul
jnp
inc
xor
cmp
cmp
rol
add
or
jp
xor
sub
push
loopne
pop
xchg
out
inc
adc
mov
push
js
pop
out
mov
ret
add
push
mov
addr16
out
or
adc
cmp
or
cmp
jno
mov
add
or
mov
(bad)
and
and
out
pop
ins
call
nop
sub
dec
pop
stos
add
pop
push
jne
inc
retf
pop
inc
shl
or
xor
and
cmp
aad
sbb
ret
push
pop
sub
mov
xlat
pop
jae
inc
mov
aas
dec
xor
shl
and
sbb
aaa
mov
xchg
ss
fcmovnb
dec
or
arpl
out
mov
js
loope
cmps
loop
jg
adc
or
fbstp
mov
js
sub
cmp
xor
xchg
cmp
push
sub
dec
imul
fdivp
fimul
addr16
ror
mov
test
mov
(bad)
repz
cmp
retf
inc
test
push
mov
add
jo
fstp
add
iret
scas
frstpm(287
test
xor
out
jecxz
inc
xchg
mov
cmp
cmp
jecxz
push
test
and
push
and
mov
in
cmps
in
cmp
xchg
fistp
nop
mov
arpl
inc
rcr
dec
ret
cmp
out
cmps
xor
stos
inc
pop
inc
inc
fwait
fwait
jo
pop
out
dec
sub
cmp
inc
xor
retf
dec
ja
and
jnp
pop
dec
mov
lahf
scas
lods
shr
mov
not
cmp
dec
pop
xchg
dec
and
dec
imul
pop
ins
push
cwde
xor
inc
or
mov
xor
jmp
pop
mov
icebp
or
mov
mov
xor
js
inc
push
inc
ja
fwait
dec
sub
fmul
adc
jecxz
shr
inc
mov
mov
mov
push
dec
stos
jnp
or
push
imul
imul
xor
aaa
mov
cmp
and
xor
mov
dec
adc
xchg
loop
ret
sub
dec
pop
jecxz
mov
rcr
ins
out
outs
push
pop
push
icebp
and
xor
mov
adc
mov
push
pop
fwait
inc
mov
mov
lea
xor
jp
inc
cmp
push
adc
push
mov
pxor
addr16
cli
xchg
fistp
inc
je
das
pop
inc
out
adc
scas
xor
lods
mov
fild
cmps
test
xor
sahf
mov
xor
aas
out
test
les
sti
xor
dec
adc
repnz
dec
xor
call
xor
call
xor
sar
jecxz
dec
xchg
xor
inc
pop
(bad)
pop
add
stos
add
mov
out
inc
mov
loopne
cmp
add
(bad)
jo
fwait
push
add
cwde
push
dec
addr16
adc
push
inc
retf
jnp
cmp
(bad)
popa
nop
inc
dec
aas
ret
mov
cmps
sti
sub
add
add
dec
adc
mov
xor
or
xor
retf
imul
pop
popf
cmps
adc
out
imul
add
add
add
add
push
push
es
add
dec
jge
imul
push
sbb
adc
shl
iret
loop
rcr
jl
push
das
inc
imul
mov
ret
xor
pavgw
inc
add
add
jbe
cmp
mov
aas
sbb
xor
fadd
mov
mov
jno
mov
inc
and
loope
fwait
push
jae
outs
dec
fmul
mov
add
dec
stos
jmp
inc
fwait
inc
pop
mov
xchg
scas
daa
pop
hlt
push
lods
cmp
out
cmps
aaa
xor
push
fiadd
inc
or
shl
ret
mov
ret
(bad)
ja
addr16
sbb
push
dec
mov
and
push
jmp
inc
mov
sub
(bad)
arpl
cs
sub
jbe
fcomi
call
addr16
pusha
aad
or
dec
sub
pop
pop
iret
pop
mov
add
mov
push
jmp
inc
je
or
cmps
jmp
pop
stos
imul
pop
movs
out
repnz
pop
push
jmp
and
push
or
add
pop
shr
loopne
lods
stos
iret
stos
dec
call
pop
stos
xor
inc
cmp
sbb
mov
jae
shr
retf
mov
ret
iret
add
arpl
(bad)
fimul
sub
in
imul
sbb
pop
mov
(bad)
getsec
cmp
cmp
jmp
xor
mov
inc
sub
xor
aas
push
add
rcl
inc
pop
sbb
pop
and
inc
fwait
cmp
sbb
bound
or
mov
pop
xor
loopne
push
jmp
xchg
push
xchg
daa
cs
ins
adc
shl
pop
pop
inc
cmp
fsub
mov
movs
add
add
add
cwde
dec
or
add
btc
xor
sbb
inc
iret
sti
mov
pop
mov
loope
push
add
or
xchg
dec
xchg
jp
xor
(bad)
mov
xchg
inc
mov
cmp
dec
arpl
xor
leave
adc
xor
xor
(bad)
cmp
xchg
add
fmul
dec
pop
inc
stos
daa
das
dec
je
mov
jp
test
aas
(bad)
ja
cmps
push
xor
mov
iret
fwait
jecxz
loop
sub
cmps
xor
retf
xchg
cmp
test
add
sub
mov
xor
retf
jle
and
out
ror
arpl
inc
loopne
adc
shl
add
arpl
add
push
fwait
shl
push
lds
data16
stos
dec
test
adc
test
arpl
lds
(bad)
xor
adc
iret
ss
add
jbe
xchg
mov
and
push
and
add
imul
inc
loop
shl
inc
daa
xchg
add
xchg
dec
xor
add
and
iret
xchg
jae
sar
push
aas
push
fisttp
fiadd
dec
sti
inc
jnp
(bad)
(bad)
jmp
adc
mov
mov
dec
cs
sub
dec
add
mov
push
mov
shl
stos
inc
dec
adc
mov
mov
mov
popf
cli
or
xlat
aas
addr16
and
jnp
or
mov
sbb
dec
pop
xor
ss
das
and
call
adc
mov
mov
push
inc
mov
add
call
sub
adc
daa
sub
push
addr16
mov
(bad)
shl
inc
pop
xor
retf
jp
push
xor
mov
scas
push
call
inc
out
pop
xor
mov
repz
add
iret
add
xor
and
fstp
cmp
pop
pop
or
or
inc
scas
cmps
outs
mov
sbb
xchg
inc
cmp
inc
mov
jl
scas
cmp
jo
jp
(bad)
dec
pop
xor
pop
push
scas
imul
ror
sti
aaa
or
ret
adc
sahf
xor
fwait
xor
add
scas
cmp
popa
mov
cmp
adc
outs
out
jecxz
dec
lods
sbb
adc
and
push
dec
mov
imul
pop
mov
sub
sbb
add
mov
pop
test
mov
xor
test
clc
cmp
jne
and
push
test
jo
lahf
add
xor
add
lahf
ja
add
stos
inc
arpl
rcr
(bad)
movs
imul
call
xchg
adc
cmp
mov
xor
and
or
pusha
sbb
sub
neg
jae
and
lods
cmp
das
jmp
ficomp
out
sbb
popf
ret
or
(bad)
jne
cmp
retf
das
adc
fcomi
hlt
rol
push
or
mov
fmul
stos
adc
or
or
dec
jmp
or
add
add
pop
cmp
invd
xor
pop
popf
push
popf
dec
jg
cmp
popf
cwde
cmp
ja
fisubr
div
sub
jnp
dec
movs
sbb
iret
fistp
pusha
aad
pop
sbb
inc
mov
jmp
mov
dec
pushf
test
inc
mov
jg
inc
mov
add
jno
aad
repz
inc
push
inc
(bad)
sbb
pop
xor
ror
inc
add
neg
fldl2e
jp
jg
lds
adc
and
outs
out
ret
rcl
xor
xchg
mov
cmp
pusha
aam
cmp
call
adc
adc
xor
das
arpl
or
stos
push
pop
jecxz
adc
mov
ins
out
xor
cmps
sub
aaa
cmps
sbb
inc
xchg
sub
lahf
mov
iret
xor
adc
arpl
add
pop
daa
rol
push
fadd
not
loop
xchg
pop
sub
and
mov
ret
xlat
es
jno
sub
inc
jnp
and
mov
fsubr
shr
push
cmps
cmp
adc
or
sti
fild
enter
or
push
inc
mov
pop
das
sbb
lods
scas
add
ror
adc
inc
repz
adc
pusha
push
sub
fistp
adc
cmp
mov
ror
xor
inc
test
lahf
lods
mov
ja
inc
xor
aaa
or
outs
dec
xor
jno
pop
mov
jo
jle
push
push
pop
(bad)
adc
inc
mov
mov
in
sub
push
aas
or
out
mov
inc
dec
sbb
xchg
inc
retf
mov
shl
push
arpl
pop
aaa
icebp
aas
(bad)
pop
mov
cwde
xor
and
fstp
dec
jmp
fwait
or
push
aas
inc
mul
and
sbb
and
mov
les
scas
inc
mov
or
jg
ret
jmp
sbb
out
div
les
mov
jne
cmp
gs
es
xor
and
cmp
dec
pop
outs
xor
xor
pusha
lods
push
fimul
fnclex
sbb
pop
(bad)
xor
(bad)
test
shr
lahf
aad
xchg
xor
mov
dec
mov
add
sub
pop
cmp
imul
inc
xor
xchg
out
xchg
pop
xlat
xor
mov
pop
stos
push
(bad)
adc
addr16
mov
aaa
sti
xchg
outs
inc
das
adc
mov
inc
ret
nop
(bad)
sub
cmp
shr
or
pop
ret
stos
aam
push
jae
inc
sub
iret
xchg
nop
cmp
mov
shl
cmp
pop
(bad)
arpl
jmp
mov
jecxz
arpl
jmp
call
pop
dec
fiadd
shr
jno
shl
mov
pusha
or
loope
inc
dec
adc
mov
cmp
mov
inc
call
aad
sbb
outs
pop
mov
dec
or
cmp
inc
mov
mov
aas
cmp
lods
cmp
pop
ror
addr16
test
add
adc
dec
mov
sbb
dec
stos
xor
jmp
arpl
add
sbb
pop
sbb
loopne
mov
or
mov
ret
xchg
xchg
push
jp
mov
fistp
xchg
add
aaa
sbb
push
mov
movs
data16
(bad)
mov
dec
inc
mov
xor
das
inc
imul
rcr
or
mov
fwait
dec
das
push
mov
mov
inc
retf
aaa
mov
push
mov
rol
mov
push
inc
sub
sti
bound
cs
idiv
imul
sbb
retf
add
and
jp
sbb
xchg
add
or
fcom
pop
xchg
iret
sbb
js
jae
ret
ds
dec
mov
or
xor
and
inc
sub
mov
sub
mov
imul
mov
adc
test
cmp
addr16
or
nop
ds
lock
mul
aaa
mov
aas
cmp
or
xchg
(bad)
mov
loop
pop
inc
rcl
xlat
xchg
mov
jnp
ror
push
push
push
or
inc
mov
adc
call
jne
pop
jnp
mov
xor
imul
mov
(bad)
fisttp
stos
xor
cmp
jecxz
je
repz
pop
pop
fistp
jmp
sbb
sbb
xlat
xchg
out
push
dec
mov
jnp
test
and
add
idiv
ret
and
inc
or
xor
pop
mov
stos
xlat
sbb
add
mov
inc
pop
out
mov
(bad)
and
cwde
dec
push
push
xor
mov
mov
xchg
and
out
xor
pop
test
or
pop
add
bound
daa
inc
jg
pop
or
push
rol
pop
inc
shl
aaa
xor
ret
xchg
inc
pop
add
ss
pop
arpl
inc
xlat
in
or
daa
adc
ret
xor
or
xor
shl
or
pop
xlat
test
inc
mov
mov
aas
jae
fadd
lea
inc
je
xor
iret
or
push
or
pop
mov
or
sbb
mov
js
and
retf
mov
jmp
ror
add
pusha
pop
xor
dec
push
pop
and
lahf
mov
outs
in
inc
mov
dec
or
xor
stos
fadd
and
add
mov
inc
inc
cmp
lods
adc
jnp
jecxz
enter
imul
inc
fld
inc
sbb
dec
out
pop
mov
xchg
or
push
push
mov
sti
fwait
ins
shl
mov
or
pop
out
pop
fwait
xor
aaa
movs
dec
dec
mov
dec
pop
sbb
mov
scas
xchg
inc
inc
mov
pop
cli
xor
xchg
fmul
mov
jno
dec
addr16
inc
inc
mov
mov
inc
outs
inc
push
jmp
pop
and
mov
sbb
test
xor
aaa
nop
call
shl
jne
daa
outs
xor
xchg
mov
popa
sub
pusha
xor
mov
outs
xor
xchg
ret
jae
adc
aaa
(bad)
mov
adc
imul
arpl
sbb
stos
lds
in
pop
ror
lods
loope
pop
jecxz
popf
ret
cmps
inc
cmp
push
sub
inc
imul
lahf
arpl
sysenter
adc
inc
les
lahf
jne
movs
push
xchg
fwait
and
outs
cmp
or
mov
ja
mov
adc
loopne
push
jmp
xor
aad
xor
and
push
aaa
mov
jmp
dec
pop
pop
lea
push
mov
push
rcl
outs
cmp
pop
and
xor
add
test
outs
shl
or
ret
jo
mov
push
arpl
sub
loop
push
xor
xchg
or
bound
popa
pop
xchg
es
xchg
jecxz
jmp
repz
mov
jmp
adc
rol
sub
mov
jl
arpl
jg
add
lods
adc
or
sub
inc
and
push
add
daa
xor
(bad)
jae
and
add
push
scas
push
push
pop
mov
sub
inc
arpl
jbe
jmp
into
mov
shl
pop
ror
sub
or
fidivr
dec
fwait
push
add
dec
imul
ins
pop
push
cmp
jmp
or
mov
mov
loope
push
icebp
inc
lods
loop
scas
xor
and
xchg
das
imul
test
inc
mov
test
push
mov
inc
sub
cmp
sub
adc
and
push
retf
and
outs
inc
jnp
lea
fwait
arpl
mov
aaa
addr16
push
sub
push
push
iret
xor
or
add
test
inc
rcl
mov
jae
scas
dec
pop
mov
imul
mov
mov
sub
in
imul
scas
or
iret
fist
(bad)
or
mov
sbb
outs
iret
push
arpl
jmp
dec
daa
loope
mov
stos
lea
dec
adc
ins
loop
scas
mov
lea
and
push
lahf
dec
xor
mov
lahf
lds
add
jg
mov
xor
and
add
repz
adc
xor
ret
iret
push
lods
add
pop
and
pusha
and
nop
xchg
shr
xor
xor
stos
pop
lahf
aad
aad
jnp
dec
sub
inc
adc
repz
pop
pop
dec
mov
sar
or
fist
xor
ret
xchg
aas
jmp
or
pop
add
sub
lds
cmp
mov
cwde
mov
push
adc
ret
mov
add
outs
lds
xchg
push
pop
loop
sub
xchg
dec
je
outs
imul
daa
scas
pop
push
(bad)
mov
xor
daa
shl
(bad)
mov
inc
add
je
scas
inc
pop
push
pop
inc
ret
adc
push
xchg
ret
call
movs
int3
pop
aaa
retf
stos
add
mov
xor
pop
and
push
mov
aaa
scas
ret
pop
adc
sub
mov
dec
push
and
or
mov
adc
push
fist
je
pop
pop
adc
xor
adc
repz
xor
sbb
and
adc
and
cmp
bound
jmp
inc
add
mov
sub
push
(bad)
xlat
or
jmp
sub
xchg
xlat
xor
sub
mov
inc
scas
ds
dec
test
sub
rcl
scas
ror
mov
les
xchg
dec
les
xchg
cmp
xor
add
loopne
push
and
or
xor
xchg
push
enter
pop
(bad)
sub
xor
pop
inc
ins
jmp
fsub
imul
loopne
inc
outs
fidiv
cmp
je
sub
or
inc
jno
mov
push
xor
inc
in
sbb
xlat
add
push
dec
or
cmp
sub
hlt
mov
daa
xor
stos
pop
jecxz
shr
mov
(bad)
mov
lods
stos
popa
out
iret
stos
outs
sbb
sub
aam
xor
cmp
inc
adc
dec
and
xchg
sub
dec
sub
mov
sub
jmp
push
xlat
mov
or
sbb
adc
and
mov
add
add
pop
and
iret
repz
pop
push
add
imul
(bad)
push
iret
ror
inc
stos
pop
pop
sti
aaa
jo
sar
jg
pop
cmp
aas
cmp
sub
push
aad
mov
inc
xor
cwde
inc
sub
aam
jecxz
push
push
cmp
pop
std
(bad)
xor
rcl
(bad)
mov
jg
add
lahf
mov
mov
dec
outs
dec
arpl
stos
loope
aas
jecxz
ret
xlat
setno
mov
(bad)
mov
sub
call
and
pop
loopne
test
push
dec
sub
fwait
mov
xor
sub
fwait
dec
lds
or
adc
mov
or
xchg
xchg
bound
add
jb
jmp
or
mov
cmp
inc
inc
sub
arpl
push
dec
mov
sbb
rol
add
nop
and
jnp
mov
mov
aam
add
or
cmp
pop
ds
lds
mov
cs
and
adc
mov
adc
mov
jmp
xlat
mov
test
xchg
adc
or
stos
push
pop
dec
add
(bad)
cmps
ds
out
imul
inc
fwait
pop
sbb
imul
lods
push
arpl
inc
xchg
lods
xlat
dec
dec
loopne
and
push
push
and
dec
cmp
xor
cmp
push
inc
daa
jecxz
add
sub
adc
cmp
or
pop
mov
xchg
push
stos
cmp
das
ror
pop
les
stos
xchg
push
jmp
xor
aaa
aas
inc
xchg
sbb
push
hlt
arpl
scas
imul
push
sub
add
mov
push
and
out
mov
cs
adc
sbb
xor
adc
in
pop
test
xchg
pop
lea
cmp
ret
dec
dec
xchg
scas
adc
retf
inc
jo
adc
mov
adc
pop
push
dec
dec
inc
iret
mov
mov
push
popf
jmp
mov
adc
(bad)
xchg
repz
mov
xchg
xor
out
inc
dec
jne
rol
jp
mov
imul
jp
pop
push
fisttp
in
dec
xor
fild
hlt
daa
inc
jae
mov
repz
inc
xor
pop
imul
stos
xchg
test
and
sbb
scas
push
add
mov
jmp
nop
mov
jo
rcl
add
add
or
sub
loope
push
inc
mov
xor
push
push
jno
sub
inc
pop
dec
xchg
cmps
arpl
sub
lods
sti
adc
add
inc
stos
nop
add
inc
add
es
inc
xchg
xchg
or
fisttp
sbb
xlat
cmp
leave
cmp
imul
dec
jecxz
mov
sbb
ret
aas
out
pusha
push
cmps
lods
mov
(bad)
push
(bad)
and
ret
retf
imul
test
push
pusha
xor
fwait
mov
push
jne
cs
sub
retf
aad
jae
adc
and
add
aaa
test
inc
cmp
pop
je
mov
inc
jg
arpl
sbb
adc
cmps
cmp
pcmpeqd
stos
push
ret
jg
scas
inc
test
call
inc
xor
je
mov
(bad)
ror
cmp
dec
aad
mov
xor
mov
mov
mov
adc
adc
xchg
sbb
inc
stos
jecxz
xor
shl
push
pop
inc
inc
mov
add
pop
dec
lea
imul
xlat
pop
sub
rol
push
(bad)
imul
xlat
sbb
mov
pop
sub
fsub
add
(bad)
and
xor
mov
mov
aaa
jmp
rcl
jg
inc
xchg
or
push
pop
xchg
pop
push
sub
push
fbld
hlt
movs
adc
or
(bad)
out
imul
pop
xor
xlat
adc
mov
addr16
data16
pop
pop
stos
retf
mov
add
push
dec
movs
xor
cwde
arpl
(bad)
(bad)
mov
xchg
bound
mov
popa
mov
sub
or
push
rol
push
lods
mov
pop
test
ud0
or
sbb
adc
(bad)
or
jne
mov
xor
fcom
lahf
and
sub
jno
jnp
shl
dec
popa
and
lds
mov
stos
mov
xor
adc
ds
adc
aaa
xor
or
adc
lods
aaa
jg
aam
inc
xchg
bndldx
xor
sub
enter
lods
push
jmp
xchg
add
push
mov
and
sbb
push
movs
stos
sar
lods
or
xor
popa
into
pop
mov
or
inc
add
in
cmp
lea
test
test
mov
(bad)
xor
outs
xchg
xchg
add
stos
sbb
and
sbb
push
mov
jb
push
xchg
and
push
popa
shl
bound
sti
ja
sub
addr16
ror
mov
cmps
pop
aaa
inc
push
je
enter
push
inc
inc
adc
inc
daa
sub
stos
adc
cmp
mov
inc
inc
mov
cmp
ret
outs
sub
or
ss
mov
jmp
ss
mov
mov
les
jae
push
add
or
inc
adc
xchg
movs
dec
call
add
sub
push
sbb
xor
ret
sbb
push
int3
xlat
cmp
outs
icebp
and
lahf
sbb
(bad)
push
shl
sbb
add
dec
pop
adc
and
les
imul
mov
stos
arpl
jmp
nop
sbb
shr
push
mov
mov
mov
(bad)
pop
ret
jl
jae
add
jnp
lods
retf
sbb
inc
imul
daa
inc
mov
sub
rsm
mov
mov
stos
fidivr
out
aaa
xchg
mov
sbb
sub
xchg
push
or
pop
(bad)
scas
mov
pop
mov
add
add
push
mov
push
inc
cwde
call
add
ret
lea
lods
mov
movs
push
xor
pop
dec
mov
mov
push
shl
add
aam
(bad)
sub
jg
mov
sub
cs
(bad)
out
nop
or
pop
and
add
cmp
jg
movs
xor
out
inc
cmp
adc
push
popa
pop
and
ret
ds
add
mov
aaa
sub
(bad)
and
pop
sbb
adc
fwait
das
push
mov
cdq
lahf
pop
and
or
push
pop
pop
and
out
das
pusha
cmps
push
test
xor
xchg
cmp
and
and
add
adc
ja
(bad)
mov
dec
dec
lgs
sbb
lds
fadd
push
adc
bound
loope
imul
stos
bound
mov
sub
jg
sub
aas
popa
adc
mov
lods
es
dec
and
pop
adc
inc
pop
push
stos
or
push
or
sub
push
push
xor
push
mov
popa
aam
push
out
pop
pop
push
add
mov
mov
imul
pop
leave
inc
push
cmp
mov
stos
mov
fadd
sub
icebp
add
add
adc
les
mov
movs
stos
mov
adc
mov
mov
adc
add
outs
ret
ss
das
mov
retf
jmp
lods
pop
mov
test
mov
add
xor
neg
stos
push
pop
and
push
cmp
adc
or
xlat
or
sbb
add
data16
pop
adc
cmp
xor
or
call
pop
xor
mov
pop
sbb
cmps
cs
adc
out
cmp
and
fbld
mov
cmp
xor
pop
sbb
push
test
xchg
xlat
mov
push
and
or
xor
mov
stos
push
imul
retf
nop
stos
push
mov
mov
nop
mov
add
sbb
pop
rol
pop
push
push
ins
(bad)
jo
out
sti
sub
call
mov
dec
and
cmp
lahf
xor
adc
cmp
xchg
xor
or
aam
add
dec
add
mov
jae
and
pop
pop
and
pop
sbb
push
imul
dec
pop
test
ret
aas
lahf
push
or
int3
scas
mov
mov
and
xchg
and
daa
cmova
add
es
fdiv
pop
add
lods
pop
mov
or
and
das
mov
pop
and
adc
pop
xor
xor
or
pop
and
adc
scas
dec
adc
stos
xor
xor
add
dec
daa
inc
sub
fcmovne
and
xor
imul
add
add
outs
and
xor
pop
pop
inc
adc
mov
inc
jmp
sub
and
sub
mov
mov
push
add
jb
cmp
mov
sbb
or
xchg
repz
pop
cmp
retf
inc
and
dec
pop
jae
sbb
bound
nop
lds
test
sub
sub
xor
jno
pop
outs
sahf
and
and
(bad)
dec
push
test
cmps
repz
pusha
add
sbb
and
popa
adc
pop
jnp
dec
add
(bad)
cs
and
mov
inc
call
ror
cmp
add
dec
or
test
xchg
xor
ret
stos
sbb
mov
add
or
mov
push
mov
mov
out
ret
mov
and
cmp
ror
and
inc
add
and
cmp
stos
loopne
cmp
or
sub
(bad)
or
sub
push
aam
shl
mov
arpl
and
or
add
arpl
lahf
add
imul
sbb
sub
xlat
jg
push
add
xchg
pusha
mov
adc
ja
xor
popa
push
push
jae
dec
fwait
(bad)
jmp
xchg
mov
sti
dec
lods
mov
adc
xchg
fld
xchg
test
inc
add
mov
cmp
sub
(bad)
ds
(bad)
out
or
stos
mov
push
xchg
and
adc
out
mov
add
dec
mov
pop
arpl
dec
pop
dec
and
cmp
push
ins
or
jnp
push
and
rcl
retf
inc
outs
jbe
push
and
aaa
mov
retf
jmp
daa
and
dec
jmp
mov
or
cmp
ret
push
push
and
push
aas
lahf
inc
fwait
pop
add
repz
push
outs
jecxz
add
xor
add
test
stos
pop
or
adc
fwait
inc
mov
stos
and
adc
and
jg
popa
aad
lods
fwait
or
sbb
sub
jnp
cmp
xchg
inc
mov
sub
outs
cmp
scas
and
sbb
inc
imul
scas
mov
cmp
ds
cmp
test
xchg
arpl
pop
push
or
add
test
fwait
add
pop
mov
ins
and
pop
iret
test
mov
xchg
push
mov
cmp
es
cmps
sub
dec
push
mov
mov
jmp
sbb
fsub
jbe
aas
bound
push
jb
mov
lds
imul
aaa
imul
sub
pop
adc
inc
fist
or
xor
sar
xor
xchg
ret
adc
pop
inc
ret
outs
loopne
push
imul
in
aad
imul
or
mov
cmp
test
or
adc
push
dec
inc
xor
outs
xor
mov
ret
xchg
int3
aas
lss
popf
aam
mov
dec
ror
(bad)
or
pop
pop
add
ret
mov
jmp
pusha
pop
adc
xor
fistp
lahf
(bad)
js
les
lahf
dec
inc
push
jne
sbb
scas
fwait
add
adc
mov
xor
inc
and
and
add
fld
lsl
push
mov
mov
jecxz
push
mov
fidivr
aaa
sqrtps
stos
or
add
push
jae
and
and
stos
imul
imul
dec
or
xor
push
pop
adc
(bad)
test
ret
lods
mov
outs
mov
imul
inc
inc
mov
xor
add
pop
jg
xor
test
mov
fld
cmps
icebp
mov
fiadd
fwait
add
and
pop
adc
or
jne
mov
dec
cmp
and
xor
dec
pop
shl
stos
fwait
(bad)
mov
inc
bound
inc
mov
jecxz
dec
pop
jl
sub
adc
push
stos
push
mov
imul
daa
(bad)
loopne
or
lods
push
mov
push
xor
sbb
adc
(bad)
movs
adc
pop
cmovs
push
add
arpl
dec
or
add
push
or
aam
out
popf
and
mov
mov
and
inc
jnp
push
ret
pop
mov
inc
push
and
xor
and
inc
inc
xor
daa
cmps
imul
and
pop
dec
xor
push
sbb
mov
pop
push
adc
add
adc
or
bound
pop
adc
shr
sbb
dec
and
adc
stos
sbb
inc
pop
push
dec
js
xor
add
jmp
jbe
or
pop
sbb
push
push
imul
fsubr
adc
adc
in
outs
and
inc
mov
pop
and
inc
and
dec
sbb
xchg
lock
bound
out
mov
add
idiv
sub
add
aaa
sbb
jns
inc
jae
ficom
out
(bad)
in
cmp
sub
in
jne
adc
and
mov
push
sub
xlat
or
jbe
add
aaa
jo
shl
(bad)
dec
or
dec
mov
pop
pusha
fmul
mov
adc
pand
push
sbb
(bad)
sbb
sbb
mov
push
and
(bad)
adc
loope
or
xchg
inc
mov
and
xor
stos
xlat
push
imul
sub
push
pop
inc
fidivr
or
das
and
pop
cmp
xchg
adc
adc
repz
ss
test
popf
mov
dec
outs
pop
ja
cmps
imul
dec
daa
and
sbb
jne
cs
retf
sbb
ficom
push
out
sbb
inc
adc
and
pop
sbb
bound
mov
(bad)
and
pop
sbb
mov
and
sbb
mov
adc
div
inc
das
cmps
sub
ins
stos
fdivr
das
out
inc
mov
(bad)
pop
ins
pop
xchg
pop
jnp
fdivr
stos
sub
adc
sbb
emms
out
pusha
rcl
stos
adc
(bad)
mov
das
pop
(bad)
mov
mov
addr16
xchg
adc
xorps
pop
mov
cmp
xchg
mov
xchg
xor
aaa
push
jl
inc
and
sbb
sbb
out
or
sbb
push
dec
and
mul
test
or
xor
and
xor
in
add
inc
xor
sbb
adc
fwait
push
ds
ret
xchg
mov
fidivr
fwait
sahf
pop
jecxz
jp
div
rcr
push
clc
cmp
adc
imul
xchg
imul
stos
xchg
and
push
pushf
jecxz
(bad)
andnps
mov
push
inc
outs
je
xor
ss
sub
pop
cmp
inc
pop
mov
lahf
inc
dec
xor
or
outs
test
dec
inc
add
lds
(bad)
jecxz
pop
adc
push
inc
and
fbstp
inc
int3
shr
cmp
rep
aad
movs
iret
cmp
scas
pop
mov
sar
dec
add
cmp
adc
arpl
cmp
inc
and
and
dec
fistp
fistp
arpl
xchg
xor
dec
dec
out
xchg
jae
xor
ret
ror
loope
ret
adc
pop
les
fild
pop
xor
les
jecxz
pop
inc
out
push
mov
add
xor
pop
sbb
sub
aad
and
pop
ret
(bad)
shl
test
push
das
add
bound
or
iret
mov
outs
xchg
imul
adc
add
popa
pop
xor
pop
ret
inc
jg
mov
inc
pop
jecxz
adc
add
xor
dec
pop
pop
faddp
inc
lea
xor
push
xor
adc
loopne
dec
push
imul
fsub
mov
addr16
sbb
push
add
adc
mov
mov
lods
fucomi
inc
outs
xor
(bad)
pop
fwait
xor
test
(bad)
(bad)
ds
pusha
ins
out
fbld
(bad)
lahf
dec
mov
nop
sub
push
sub
sbb
push
sbb
pop
dec
sbb
xor
scas
dec
pop
inc
lahf
pop
test
adc
pop
mov
adc
push
fst
push
outs
out
push
and
enter
adc
mov
add
xor
outs
loopne
sti
add
sub
stos
dec
movsx
ins
loop
pop
jnp
inc
sub
pop
aam
sub
adc
inc
mov
sti
test
xor
dec
or
inc
add
pop
xlat
mov
lods
xchg
inc
mov
(bad)
and
sbb
inc
pop
mov
adc
fild
jmp
call
sbb
jno
scas
push
sbb
aam
add
mov
(bad)
inc
fild
or
mov
adc
jo
iret
ds
or
cmps
mov
push
xchg
push
cmp
test
aas
xor
mov
arpl
mov
dec
inc
mov
inc
xchg
push
inc
test
dec
inc
nop
add
adc
push
add
or
mov
mov
rcr
xchg
imul
mov
cmp
cmps
adc
stos
mov
xor
jno
sbb
scas
inc
mov
mov
sti
sub
mov
pop
cmp
mov
inc
loope
fwait
inc
loopne
jmp
ja
xor
inc
jmp
enter
xor
xchg
add
pop
xor
jmp
loopne
mov
or
mov
aaa
loop
mov
inc
xor
xchg
dec
mov
sbb
mov
aas
mov
xor
add
xchg
push
sbb
mov
sub
icebp
xchg
cvttps2pi
inc
dec
inc
fcmovnu
or
mov
je
sbb
(bad)
mov
push
pop
xor
cmp
add
sub
rcr
xor
xor
arpl
inc
mov
jne
jmp
test
push
add
scas
sbb
mov
test
xor
arpl
cmps
mov
jmp
adc
mov
xchg
(bad)
dec
loop
adc
(bad)
aad
jmp
inc
shl
addr16
or
add
xor
add
add
adc
pusha
les
arpl
cmp
ret
stos
pop
pop
ret
xor
jmp
add
mov
pop
add
and
xor
bound
cmps
add
inc
fistp
or
fmul
inc
test
call
rcl
add
aaa
add
add
lods
imul
mov
ds
call
stos
xor
xlat
xor
xchg
and
ret
sub
daa
mov
fwait
inc
and
push
imul
jmp
sub
inc
fwait
movaps
push
sub
aas
jmp
ss
xchg
mov
sbb
ret
or
push
add
adc
mov
adc
sti
ret
or
or
mov
fbstp
and
not
mov
(bad)
push
mul
test
lods
and
out
or
loop
jg
out
dec
ins
and
inc
dec
int3
adc
arpl
es
das
mov
jb
sub
jb
cmp
int
push
sub
inc
bound
ret
add
xor
sar
(bad)
dec
xchg
sub
and
imul
scas
add
rcr
inc
or
mov
mov
and
imul
aam
xor
push
sar
adc
loop
nop
inc
push
mov
nop
xchg
imul
push
dec
dec
push
lods
pop
repz
popa
fbld
xor
sbb
repnz
test
push
and
retf
sbb
add
pop
mov
les
inc
loop
push
sbb
cmp
fistp
or
or
jnp
pusha
xor
push
stos
xor
and
mov
xchg
pop
dec
dec
arpl
push
xchg
adc
add
or
lock
dec
cmp
sti
xor
pop
stos
mov
sub
mov
mov
inc
(bad)
aam
xor
test
jnp
adc
pop
xchg
and
fwait
punpckhdq
inc
and
test
mov
ins
lods
adc
daa
lds
mov
pop
mov
inc
pop
push
xchg
or
test
jecxz
shl
ds
or
adc
pop
enter
xchg
xor
xlat
xchg
fidiv
xlat
inc
outs
repz
bound
inc
dec
lods
and
(bad)
adc
jecxz
retf
xchg
nop
and
sti
add
add
pop
push
push
jmp
imul
and
pop
pop
sub
push
mov
dec
stos
sbb
sub
shl
pusha
push
xor
pusha
push
xor
cmp
add
push
lods
ss
imul
add
sub
inc
in
or
(bad)
dec
add
inc
push
sbb
es
push
in
idiv
cmps
push
push
test
inc
rcl
push
rol
aas
push
xchg
or
(bad)
sbb
shl
adc
xchg
mov
push
nop
cmp
fbstp
inc
push
add
pop
xchg
adc
or
cmp
fmul
dec
movs
sub
pop
adc
jle
jmp
push
or
add
xchg
adc
cs
jg
and
mov
xor
dec
push
call
sbb
mov
xor
popa
lds
sbb
fcmove
ret
sub
(bad)
xor
adc
adc
inc
call
push
shl
stos
movs
aad
sbb
jecxz
and
and
sub
or
jecxz
xchg
jecxz
jecxz
not
sub
nop
mov
movs
mov
shl
dec
daa
scas
xchg
inc
pop
popf
outs
jecxz
jmp
aaa
jg
ret
repnz
ja
fiadd
imul
outs
dec
xchg
shl
aaa
mov
or
mov
cmp
xor
fist
cmp
jle
push
pop
hlt
or
adc
pop
test
xor
add
stos
loopne
repz
arpl
xor
imul
imul
and
add
xor
sub
aaa
hlt
outs
pop
jg
sbb
imul
pop
mul
ss
push
bound
xchg
mov
mov
add
or
push
outs
(bad)
aaa
inc
jb
movs
ja
dec
stos
mov
cs
push
xor
pop
adc
call
fisttp
rol
imul
push
fistp
movs
jg
retf
dec
dec
mov
iret
sub
(bad)
repz
jmp
outs
imul
cmp
fistp
mov
sbb
repz
lock
xor
jae
das
cs
sbb
mov
or
cs
scas
push
dec
pop
repz
jne
dec
mov
mov
pop
scas
sbb
popf
pop
(bad)
adc
(bad)
retf
out
or
xchg
(bad)
fisubr
pop
pop
pop
push
and
ret
jmp
sub
arpl
aad
rcr
push
sbb
movs
mov
sub
push
jmp
fnsave
mov
daa
push
cmp
adc
and
dec
loope
ret
xchg
ins
ret
mov
iret
jne
add
push
sub
fadd
sbb
call
fwait
push
call
jmp
xor
cmp
push
daa
mov
adc
aas
pop
mov
mov
(bad)
sub
push
lahf
adc
xchg
add
fwait
cmp
cmp
push
adc
xor
inc
stos
cwde
shr
xor
mov
and
pop
adc
dec
dec
push
sbb
mov
xor
pop
xchg
mov
out
inc
push
push
(bad)
pop
aaa
xchg
jmp
ror
fdiv
mov
test
sub
ret
mov
and
or
das
sbb
ret
jecxz
inc
add
dec
mov
jno
pop
stos
or
pop
adc
adc
test
jmp
adc
or
and
push
aas
adc
fisub
das
lods
adc
daa
das
adc
add
add
and
or
sbb
(bad)
das
push
ror
cmp
in
adc
adc
sub
(bad)
rcl
add
sbb
js
or
mov
push
push
ja
adc
lock
jnp
cmp
das
jnp
movs
cdq
call
push
and
xchg
sub
and
sbb
xor
and
mov
test
das
mov
xor
inc
cdq
dec
mov
dec
pop
sub
xor
dec
or
pop
imul
sbb
mov
daa
cmps
inc
test
push
ret
push
aad
sub
js
push
adc
pop
cmp
jp
inc
repnz
repnz
push
stos
daa
and
push
adc
or
sub
and
inc
sbb
jnp
or
dec
mov
dec
ins
add
test
mov
sub
(bad)
xor
add
or
lea
dec
jmp
test
mov
dec
sbb
lahf
add
(bad)
mov
scas
xor
dec
pop
xchg
ss
das
jnp
add
dec
mov
and
mov
loopne
push
mov
cmp
pusha
shl
bt
or
push
sub
pop
aas
xor
adc
aas
sub
xor
stos
mov
dec
adc
xor
test
adc
pop
push
push
push
or
inc
add
outs
or
xor
lahf
ins
xor
and
outs
(bad)
pop
or
inc
cmps
mov
pop
jae
push
rcl
ret
mov
dec
xchg
cmp
enter
stos
test
push
dec
outs
xor
xor
pop
pop
xor
lods
push
and
call
ja
or
(bad)
retf
pop
jecxz
mov
cmp
aas
xor
and
sub
jno
xor
pop
ret
pop
push
and
das
xor
sysexit
add
cmp
int
inc
add
mov
jmp
xor
jb
or
test
inc
daa
inc
scas
dec
inc
inc
inc
cmp
dec
push
or
je
add
xor
and
arpl
push
push
dec
ret
aas
jge
ins
call
sub
dec
xchg
jo
rcl
aas
pop
xor
and
xlat
fild
mov
shr
adc
ret
mov
xor
inc
mov
mov
dec
arpl
xchg
rcr
popf
inc
mov
inc
adc
test
lods
push
cmp
test
pop
xor
sub
nop
and
arpl
and
push
jg
pusha
inc
daa
mov
pushaw
shr
adc
mov
fist
add
push
shr
push
xchg
jg
push
add
inc
and
add
mov
jo
jmp
xchg
pop
imul
and
inc
or
pop
mov
clc
add
adc
push
xor
(bad)
sub
mov
rcr
jecxz
jp
mov
or
clc
push
test
or
enter
adc
stos
sbb
stos
adc
push
add
aam
stos
or
and
push
ret
(bad)
dec
rol
push
push
daa
or
mov
inc
adc
mov
jbe
into
(bad)
(bad)
xor
and
ror
sub
bound
push
xchg
cmp
pop
sbb
cmp
adc
adc
ss
pop
fist
adc
out
shl
xlat
pop
pop
aaa
and
nop
(bad)
addr16
and
ins
push
arpl
test
push
pop
out
test
pusha
mov
add
sbb
sbb
xor
push
daa
mov
inc
cmp
cmp
jb
and
scas
xor
sub
push
add
push
inc
dec
push
push
mov
out
pop
jecxz
push
xor
push
aam
lods
cmp
xchg
sub
(bad)
sub
jne
xlat
sbb
jmp
inc
or
ret
add
sub
mov
ins
retf
aaa
jne
pop
(bad)
pop
ja
xlat
lods
push
or
(bad)
mov
or
or
add
aas
stos
mov
and
sub
stos
sub
add
mov
shl
sbb
call
lahf
fsubr
sbb
daa
ins
fwait
outs
sbb
mov
stos
or
push
jne
ds
aas
ja
adc
xchg
sub
push
mov
mov
adc
pusha
cmps
sbb
(bad)
xlat
sbb
jne
and
pop
pop
pusha
xor
shl
xchg
shr
pop
add
push
jg
imul
fwait
pop
adc
inc
pop
mov
imul
add
call
push
jmp
xchg
and
rcl
adc
mov
and
add
stos
xchg
iret
mov
mov
fisubr
add
dec
mov
lods
pop
rcr
xor
xchg
push
and
pop
fcomp
sti
and
idiv
adc
adc
inc
and
sub
xchg
sbb
xor
icebp
or
push
jecxz
inc
pusha
dec
adc
popa
mov
pop
arpl
jae
adc
add
push
jg
dec
and
iret
(bad)
push
add
cmp
dec
xchg
xchg
and
(bad)
or
and
outs
push
sbb
scas
xchg
pop
cmp
and
mov
jg
sbb
push
mov
xor
add
dec
push
call
sub
les
ds
mov
cmp
pop
ret
fstp
and
or
in
ret
sbb
mov
nop
ret
cmps
mov
iret
leave
cdq
sub
adc
sbb
add
adc
jg
retf
lods
or
(bad)
and
cmp
js
test
inc
lods
dec
arpl
adc
xchg
adc
jmp
sub
or
sbb
test
or
(bad)
dec
sbb
mov
adc
xchg
dec
sbb
sbb
adc
rcr
sub
lods
sbb
pop
xchg
into
push
dec
ja
add
aaa
lds
pusha
adc
xor
and
ret
scas
xchg
cmp
push
das
mov
dec
test
imul
dec
ror
arpl
inc
push
mov
loopne
out
(bad)
cmp
shl
cmp
push
cmp
xlat
cmp
fsub
jecxz
push
add
push
xchg
xor
mov
fist
div
sub
pushw
mov
(bad)
xchg
out
(bad)
stos
lahf
mov
leave
or
das
add
mov
add
ret
shl
mov
mov
add
(bad)
shl
and
out
fs
arpl
mov
inc
xchg
pop
inc
sub
push
pushf
inc
cmps
sub
sbb
inc
mov
add
add
stos
out
test
addr16
fsubr
das
out
add
xor
or
or
lods
push
sub
das
jnp
mov
inc
out
aaa
xor
mov
mov
lods
add
imul
or
pop
dec
or
mov
in
das
xlat
shr
xor
or
push
fisub
inc
xchg
(bad)
push
push
adc
inc
sub
push
and
rcr
(bad)
jg
mov
and
stos
mov
daa
mov
or
sub
ret
aaa
sbb
pop
push
and
jb
xor
out
and
bound
dec
mov
pop
push
mov
adc
in
pop
ds
pop
or
cmps
mov
(bad)
xchg
ror
stos
push
dec
ror
mov
or
pop
mov
push
jo
popa
and
sub
xchg
pop
add
and
mov
scas
in
jecxz
dec
ja
xor
adc
js
jecxz
dec
pop
mov
push
xrelease
(bad)
fs
xor
adc
test
icebp
or
add
scas
and
(bad)
data16
out
jo
lods
push
pop
xchg
xlat
mov
sub
pop
xor
mov
stos
das
imul
repz
stos
cs
aad
xor
inc
sbb
xor
mov
sbb
dec
adc
cmp
xchg
and
mov
add
jl
sub
push
lods
sbb
shufps
fcomp
and
inc
add
jg
sub
stos
lea
mov
cmps
push
sub
dec
jmp
or
and
mov
pop
and
or
arpl
jmp
inc
or
adc
lahf
lods
dec
add
xchg
outs
pop
adc
xor
or
adc
mov
fwait
xchg
pop
sub
adc
mov
push
das
push
sub
cs
xchg
xor
retf
jl
mov
scas
xchg
sbb
cs
xor
ja
adc
add
mov
dec
add
xchg
les
test
xchg
imul
arpl
push
dec
lods
mov
mov
daa
scas
mov
(bad)
shr
int
add
or
inc
jne
xor
cs
mov
inc
bound
arpl
inc
shr
arpl
sub
dec
adc
repz
push
sbb
gs
sahf
xchg
lods
aad
fidiv
mov
adc
push
mov
or
xchg
lods
shr
xlat
imul
outs
(bad)
dec
xor
stos
(bad)
inc
dec
pop
sbb
pop
stos
or
repz
test
aas
mov
sub
(bad)
(bad)
pop
xchg
ja
lds
pop
add
mov
xchg
pop
add
pusha
adc
pop
adc
lods
dec
outs
adc
adc
je
push
imul
adc
pop
and
xor
inc
or
adc
pusha
add
adc
add
or
dec
dec
pop
fsub
mov
mov
and
sub
inc
sbb
sub
sub
out
xor
lds
xchg
iret
test
dec
inc
stos
test
ret
mov
lock
push
pop
dec
aam
loop
retf
pop
adc
lahf
and
into
sbb
sbb
xor
xor
mov
retf
pop
mov
test
and
and
mov
inc
and
adc
xchg
fwait
jg
push
adc
stos
ret
pop
push
add
out
out
ret
mov
mov
shl
mov
add
sbb
scas
mov
stos
ja
add
adc
out
pop
sub
pop
sti
add
ret
cmp
cs
mov
and
push
inc
enter
and
xor
fs
xchg
xor
xor
add
xor
xor
xor
test
nop
xor
inc
repnz
mov
add
leave
adc
xor
(bad)
fwait
and
stos
xor
or
mov
sub
nop
inc
adc
xchg
sub
xchg
xor
xor
jle
dec
adc
add
xor
xor
leave
xor
push
xor
push
and
add
adc
mov
xor
test
xor
xor
sbb
retf
xor
add
adc
push
xor
xor
sbb
add
aas
sub
adc
retf
and
add
and
sub
mov
mov
inc
add
xchg
inc
sub
jg
nop
adc
xchg
inc
movs
sbb
jl
add
add
or
inc
pop
leave
fs
sub
mov
es
inc
adc
and
and
pop
add
add
mov
add
or
add
xor
xor
xor
or
xor
mov
or
or
mov
xor
xor
lds
mov
or
push
leave
and
or
and
push
movs
mov
add
add
stos
ins
scas
jae
and
mov
pop
dec
es
(bad)
jae
add
mov
mov
xchg
dec
and
adc
dec
and
adc
dec
dec
push
mov
sub
neg
xchg
adc
adc
pop
push
add
out
add
add
add
and
push
add
add
jne
inc
(bad)
push
aam
add
cmps
xor
jns
adc
pop
(bad)
jae
and
sub
sub
inc
and
mov
dec
and
adc
dec
and
adc
dec
test
mov
gs
xchg
and
lds
and
and
inc
inc
pop
or
add
and
jae
mov
adc
adc
mov
sub
add
test
xor
xor
xor
xor
call
xor
xor
xor
jns
jmp
(bad)
loop
or
inc
pop
inc
scas
(bad)
push
adc
xor
xor
xor
jnp
outs
cli
xchg
pop
xor
xor
xor
cs
jmp
jne
aam
and
popa
clc
push
fwait
pop
ja
sub
std
mov
push
outs
inc
aas
enter
dec
push
call
pop
sbb
popa
addr16
xor
fdivr
cld
xor
lods
mov
xor
inc
xor
dec
xor
add
fsubrp
(bad)
inc
dec
and
pop
or
mov
push
(bad)
jg
in
add
dec
(bad)
xor
push
pop
dec
xor
mov
sub
mov
xor
(bad)
dec
cmp
xor
loop
mov
pop
test
pop
aas
dec
shr
sti
retf
xor
hlt
fcomp
shl
mov
pop
push
outs
mov
lock
xchg
fcmovbe
ins
test
mov
fdiv
dec
(bad)
retf
imul
add
inc
dec
mov
jnp
dec
add
xor
pushf
fisttp
mov
aam
in
push
xor
add
loopne
adc
(bad)
inc
xor
sub
dec
or
dec
dec
ds
xor
mov
push
sbb
xor
jb
push
fwait
xchg
sbb
mov
into
fstp
into
jp
push
xor
push
iret
fdivrp
rcl
(bad)
(bad)
mov
repnz
retf
dec
ins
imul
xor
xchg
(bad)
ja
dec
data16
adc
push
not
arpl
pop
pop
outs
sbb
pusha
inc
out
retf
and
jnp
pop
out
push
in
loopne
pop
cmp
push
mov
cwde
sub
jge
loope
movs
aas
xchg
fsubrp
xor
or
mov
push
and
or
xrelease
mov
js
xlat
imul
dec
and
stos
dec
das
not
pop
movhps
(bad)
mov
push
push
jcxz
outs
js
sub
push
xor
or
lods
jmp
into
add
das
push
addr16
add
test
test
dec
pop
fsubp
dec
and
jg
ss
push
xchg
loope
scas
jecxz
fisub
clc
xchg
pop
add
nop
test
stos
or
jmp
jne
adc
(bad)
pop
push
scas
outs
ud0
push
push
mov
add
mov
mov
xchg
lahf
add
pop
(bad)
arpl
(bad)
xlat
push
dec
pop
fsub
dec
dec
jnp
mov
push
(bad)
jle
mov
lahf
dec
mov
add
scas
mov
aaa
jnp
addr16
cmp
shl
mov
imul
jg
pop
lock
lahf
dec
cmp
ins
shl
stos
mov
and
xchg
inc
add
rol
test
shr
pop
lea
fild
adc
dec
loope
(bad)
fsub
addr16
push
xchg
arpl
pop
push
pusha
ins
and
pop
jmp
fild
or
xchg
or
pop
add
adc
jno
push
sbb
sub
ds
push
dec
push
push
mul
push
js
mov
aaa
push
jp
loopne
mov
fisttp
pop
not
outs
out
and
ds
push
pop
jbe
loopne
push
jge
jp
in
inc
hlt
jbe
ins
add
mov
xchg
or
bound
mov
outs
sti
xchg
sar
xchg
dec
out
inc
push
add
stos
dec
dec
xchg
mov
push
pop
mov
loope
sbb
fst
mov
adc
sub
in
jl
mov
iret
outs
sbb
loopne
and
mov
pop
xor
push
pop
sar
cmp
test
inc
cmp
mov
xor
push
push
adc
adc
pop
outs
cmp
fisttp
mov
retf
ins
shl
jnp
(bad)
cmp
inc
push
sbb
add
aaa
pop
dec
mov
stos
inc
xor
(bad)
les
mov
sub
in
scas
iret
jnp
or
fiadd
idiv
inc
lock
lock
in
mov
sbb
pop
jb
cmp
pop
push
inc
les
sbb
cld
mov
imul
xchg
test
jne
pop
xchg
mov
xchg
lea
ja
(bad)
and
push
addr16
mov
pop
push
mov
call
das
aaa
sbb
inc
jo
jbe
test
nop
adc
mov
or
ss
or
mov
or
cmp
pop
in
pop
rol
out
sbb
sub
sti
outs
xor
cs
pop
add
cli
pop
dec
aad
jno
cmps
xchg
pop
adc
out
faddp
push
xchg
neg
add
pop
mov
push
mov
ja
push
fisttp
test
add
loop
mov
data16
cmps
rcr
inc
pusha
sub
mov
push
fdivr
dec
jb
pop
mov
leave
and
add
push
es
add
cli
(bad)
mov
adc
jecxz
xchg
sbb
jge
mov
shr
or
out
outs
pusha
cmp
pop
mov
push
push
adc
sbb
adc
sti
cmp
jno
adc
xor
dec
dec
push
mov
xlat
loop
mov
loop
jp
push
arpl
lds
mov
ss
in
push
jmp
cmp
test
nop
push
push
sub
fwait
addr16
add
aad
sub
xor
sbb
jle
jmp
jbe
mov
adc
mov
out
sbb
push
ud0
xchg
push
cmps
or
inc
push
popf
push
retf
and
aas
push
nop
sbb
(bad)
or
inc
sbb
mov
cmps
and
nop
outs
push
les
dec
pop
outs
test
je
rcl
adc
adc
xchg
pop
push
pop
or
adc
pop
ja
ficomp
outs
mov
loop
jbe
push
mov
push
push
mov
lahf
enter
jmp
scas
cmp
imul
rcr
out
or
xchg
push
pop
and
cmc
daa
rcr
loope
xor
out
test
adc
add
dec
repnz
push
jmp
mov
mov
mov
stos
shl
pop
(bad)
jmp
mov
add
mov
xchg
arpl
add
call
push
jge
addr16
jne
call
popa
push
inc
rcl
mov
cmp
arpl
xor
dec
outs
add
iret
jae
ror
mov
xor
sub
push
ja
add
inc
mov
pusha
les
cmp
xor
and
call
stos
add
push
mov
add
cmp
mov
(bad)
adc
lock
ja
push
sbb
add
adc
outs
scas
scas
imul
and
push
(bad)
scas
outs
rol
loopne
retf
or
mov
dec
add
iret
pop
mov
push
jmp
dec
test
adc
jmp
cmp
test
add
ja
inc
push
adc
aas
ret
push
mov
test
ss
push
dec
aam
loopne
sub
dec
pop
jo
xor
call
xor
mov
call
mov
add
js
add
xchg
stos
(bad)
adc
call
inc
sbb
bound
push
fwait
xor
frstor
loop
mov
retf
fsubr
xchg
push
adc
das
mov
les
pushw
jns
imul
mov
stos
arpl
leave
aas
sbb
scas
out
mov
daa
push
mov
(bad)
or
mov
mov
jle
jp
rcl
sbb
sub
shl
lds
loope
enter
inc
add
pop
ja
in
call
adc
or
fwait
sub
sub
jp
das
lods
adc
push
imul
fwait
cwde
jne
jmp
sahf
mov
loop
xchg
mov
inc
xor
or
aaa
mov
shl
(bad)
(bad)
xchg
out
push
test
push
scas
sub
xchg
scas
or
outs
sbb
jbe
xchg
mov
mov
pusha
xchg
iret
push
out
punpcklwd
push
loop
imul
jecxz
fsub
dec
arpl
sbb
add
fcomp
pop
loopne
push
add
cmp
int
xor
jmp
push
push
push
pop
mov
jmp
lock
pop
or
xor
cmp
ret
pop
pusha
pusha
dec
mov
scas
aaa
mov
out
cmp
or
scas
shl
mov
(bad)
cmps
mov
ins
(bad)
push
dec
cmps
stos
(bad)
and
daa
xor
imul
inc
ja
push
ret
cmps
movlps
sbb
or
stos
adc
mov
jno
inc
sub
mov
or
addr16
push
and
rol
inc
mov
add
cmps
push
imul
daa
outs
jl
jne
push
outs
add
or
shl
pushw
pop
xchg
pop
dec
pop
or
jbe
dec
outs
aas
std
add
lea
xor
inc
aam
mov
and
pop
add
cmc
je
dec
mov
addr16
inc
retf
stos
outs
adc
sbb
dec
pop
xor
add
add
add
arpl
mov
pop
pop
and
imul
(bad)
sti
or
push
pop
add
cli
scas
push
cmps
sbb
jg
or
pop
adc
inc
add
sbb
daa
push
jecxz
data16
mov
sbb
mov
pop
xlat
xchg
enter
push
adc
sub
pop
adc
sub
sti
leave
xchg
add
sbb
inc
daa
pop
xchg
pop
push
pop
retf
or
(bad)
mov
push
pop
aaa
(bad)
iret
xor
xor
(bad)
dec
cld
or
inc
(bad)
out
push
mov
push
std
push
push
mov
repz
out
faddp
xlat
jmp
sti
dec
(bad)
or
push
mov
fwait
add
adc
or
or
sub
mov
dec
call
push
push
dec
dec
jb
out
pop
push
add
imul
jg
dec
jge
push
shl
add
jmp
push
ret
inc
stos
fwait
enter
dec
ins
sar
les
adc
inc
xlat
push
xchg
movs
mov
fwait
pop
jp
adc
sti
loop
sahf
push
and
xchg
cmp
loop
push
xlat
lahf
pop
push
cmp
mov
in
sbb
outs
jmp
outs
outs
data16
sub
push
lods
sub
xchg
jecxz
push
inc
add
jg
pop
arpl
jne
les
lods
inc
mov
adc
adc
sub
adc
jne
push
or
push
pop
ja
call
imul
jp
cwde
push
lds
pop
pop
dec
fadd
out
or
sti
imul
inc
or
ja
add
or
xchg
sub
nop
inc
shr
or
xchg
and
imul
or
(bad)
jns
xor
daa
jp
add
or
push
sub
fadd
or
out
and
dec
push
(bad)
mov
cs
mov
fistp
pop
enter
cmp
outs
daa
into
outs
iret
push
jnp
add
fdivr
pop
adc
popa
daa
loopne
or
iret
ret
nop
or
out
push
enter
pop
pop
push
mov
loope
aas
lea
dec
dec
data16
outs
adc
mov
dec
js
dec
jnp
outs
or
add
xor
or
mov
pop
pop
jbe
or
pop
pop
mov
sub
cmp
xchg
pop
rol
and
inc
test
adc
or
movs
stos
ror
mov
pop
xor
push
sbb
inc
ret
xor
pusha
nop
or
cmp
xchg
mov
fdivr
xlat
sbb
sti
and
ins
aad
outs
or
dec
xchg
sbb
mov
jmp
(bad)
xorps
mov
jns
(bad)
xor
mov
dec
adc
retf
(bad)
mov
sahf
adc
mov
repnz
loope
ror
adc
mov
and
retf
test
mov
jecxz
push
je
dec
xchg
mov
repnz
xchg
(bad)
mov
xor
sub
xor
shl
repnz
dec
ja
xor
add
jo
aaa
cmps
repz
inc
outs
scas
xor
inc
addr16
jg
movs
adc
mov
in
cmovs
pop
mov
mov
movs
xor
fs
dec
pop
popa
sub
jmp
daa
pushf
cmc
push
fisub
test
xor
mov
adc
(bad)
mov
mov
js
jae
cmps
mov
or
xchg
cmp
stos
push
dec
mov
or
lds
sbb
push
cmps
pop
scas
mov
sub
jbe
cmp
mov
inc
jge
sahf
pusha
mov
rcl
retf
ret
test
ret
mov
push
push
daa
sahf
adc
mov
jb
rcl
ja
repz
or
pop
and
sub
aas
pop
arpl
shl
push
jno
mov
ficom
xor
daa
arpl
sub
ficomp
pop
push
test
bound
xchg
daa
popa
(bad)
or
pop
mov
mov
loopne
mov
push
cmp
nop
imul
fs
das
jnp
sti
xor
clc
xor
sbb
jnp
ror
mov
and
inc
add
add
call
imul
jnp
xchg
sbb
enter
mov
adc
push
inc
pushf
or
aaa
rcr
fwait
or
cs
dec
pop
nop
rol
pop
out
adc
cli
pop
xchg
pop
mov
adc
arpl
or
test
loop
outs
outs
pop
sbb
dec
(bad)
sti
sbb
mov
add
mov
cwde
inc
xor
pop
push
adc
out
xchg
pop
inc
adc
push
sbb
les
sub
mov
dec
and
adc
push
mul
sbb
and
dec
mov
popf
clc
pop
xor
fs
pop
sti
xchg
jno
loop
(bad)
sbb
outs
sbb
jmp
pop
aad
add
xchg
rcl
idiv
jnp
shr
jbe
in
jb
jp
loop
fstp
pusha
push
sub
adc
aad
xchg
cmp
mov
outs
or
dec
add
stc
push
dec
jnp
jno
gs
xchg
aaa
imul
dec
push
dec
cmps
rol
push
push
and
sub
xlat
or
mov
or
push
mov
pop
retf
pextrw
daa
dec
mov
mov
adc
xchg
test
cdq
jge
dec
ret
es
mov
dec
cmp
sub
enter
out
or
lock
push
dec
es
inc
data16
loopne
xor
mov
push
xchg
adc
mov
(bad)
sti
outs
sti
sub
int
push
inc
jge
fwait
outs
and
mov
push
loop
cmp
bound
pop
inc
ins
adc
or
push
nop
push
pop
add
adc
mov
add
jno
pop
daa
retf
push
mov
xor
test
xchg
mov
(bad)
xlat
xor
fwait
cmp
call
pusha
test
js
push
ds
test
iret
stos
xor
cmp
xor
imul
ror
outs
mov
sbb
test
pop
adc
int
arpl
imul
add
or
retf
pop
dec
xchg
add
cmp
cmps
ror
fisub
and
rcl
xor
jo
ret
mov
clc
inc
jl
gs
push
bound
cmp
(bad)
(bad)
neg
push
fisttp
jbe
stos
mov
or
jecxz
jg
(bad)
mov
ins
pop
jne
mov
sub
inc
adc
jmp
inc
loopne
pushf
pop
mov
bound
sbb
mov
sbb
xchg
sbb
fadd
mov
and
xchg
fist
add
and
mov
xor
(bad)
mov
jle
pop
push
push
push
push
inc
shl
dec
clc
and
mov
pop
mov
ret
add
sub
sub
inc
test
xchg
jb
dec
inc
movs
imul
mov
out
mov
and
popa
add
mov
dec
rol
xor
mov
xor
jg
daa
and
popa
inc
xor
mov
dec
sti
outs
sbb
inc
(bad)
sti
xor
test
arpl
scas
or
call
inc
jo
adc
or
mov
loopne
inc
or
aas
push
adc
jle
emms
(bad)
jg
jmp
and
imul
jle
adc
jmp
ja
shl
cmps
push
xchg
push
stos
sub
push
push
pusha
repz
pop
xor
call
imul
mov
aad
mov
ss
or
jbe
mov
data16
adc
stos
repz
js
retf
aaa
pop
add
mov
mov
sub
pop
ret
push
jge
cmp
das
xlat
sti
pop
gs
inc
stos
inc
loopne
dec
(bad)
jmp
sbb
add
ss
mul
xchg
icebp
dec
jmp
adc
mov
rol
or
sbb
and
add
xor
or
mov
mov
xlat
rcr
and
(bad)
outs
outs
rol
js
retf
push
aaa
push
xor
mov
ret
outs
shr
mov
jb
imul
imul
add
or
jmp
pop
ret
sub
pop
jae
arpl
add
fwait
outs
and
xor
out
and
pop
rol
dec
retf
pop
pop
rcl
rcl
xchg
lock
jp
jbe
mov
push
sub
sbb
shl
sbb
pop
adc
push
scas
outs
mov
or
push
fwait
maxps
sub
push
jbe
push
or
add
mov
push
mov
sub
cmp
into
jb
int
pop
dec
sub
inc
mov
jecxz
pop
fmul
repnz
push
enter
dec
xor
sbb
mov
sti
outs
lods
or
cwde
popa
adc
das
jnp
xchg
test
xchg
and
push
sub
inc
mov
pusha
jb
int3
mov
jl
jmp
jmp
(bad)
xor
push
ss
mov
cmc
push
es
fs
inc
mov
rol
mov
ins
fdiv
ja
mov
loop
pop
pop
fidivr
cdq
imul
mov
jmp
(bad)
and
ja
jnp
add
lods
push
dec
pop
or
push
lock
xchg
iret
pop
mov
lds
add
data16
inc
sbb
lods
mov
pop
ror
mov
dec
popa
xor
and
gs
jp
push
and
push
xchg
jo
aaa
aaa
nop
sbb
add
test
in
outs
add
and
push
push
mov
add
inc
(bad)
lods
jge
imul
hlt
stos
lea
mov
adc
cmp
sysret
je
retf
dec
pop
lahf
pop
fwait
test
ret
add
pop
outs
sub
and
(bad)
sub
cmp
sub
imul
xlat
out
sbb
xchg
inc
sub
jbe
lods
cs
add
mov
pop
jnp
or
sub
cmp
mov
rep
inc
mov
ss
or
mov
push
cmp
(bad)
add
inc
shl
xor
push
mov
dec
out
mov
pop
loop
ss
push
je
add
inc
mov
daa
mov
sbb
add
mov
pop
dec
daa
out
sti
inc
and
popa
adc
retf
imul
sbb
sahf
lods
mov
dec
cmp
mov
adc
jnp
ja
cmp
xchg
test
push
cmp
rep
mov
adc
adc
out
aaa
fistp
test
mov
or
push
cmp
imul
or
dec
and
sbb
inc
pop
sbb
aad
sub
pcmpeqd
stos
mov
mov
add
mov
stos
adc
push
pop
outs
loopne
jle
xor
sbb
sbb
add
pop
mov
or
test
or
dec
outs
mov
sar
mov
and
adc
push
daa
push
aaa
mov
imul
stos
outs
sub
fs
je
jne
sub
dec
sub
xlat
or
push
mov
push
fimul
lods
imul
pusha
test
or
data16
stos
repz
fwait
inc
mov
mov
or
xchg
dec
push
shr
xchg
sbb
imul
test
jbe
push
(bad)
pop
stos
adc
aas
dec
outs
fisttp
mov
jmp
jo
push
mov
mov
jbe
dec
inc
xchg
ret
test
jmp
jecxz
add
mov
mov
dec
(bad)
loopne
jb
jae
rcr
fld
(bad)
mov
pop
xor
lods
cmp
xlat
mov
push
rcl
mov
pop
pusha
push
jg
out
xchg
ret
add
mov
and
lea
mov
add
(bad)
lods
inc
mov
push
add
scas
repz
or
xchg
imul
enter
sbb
add
out
and
sahf
movs
and
pop
inc
and
jecxz
add
xchg
add
dec
inc
push
les
inc
pop
adc
lahf
stos
in
push
pop
imul
mov
mov
imul
pop
gs
add
push
push
and
xchg
aaa
retf
jo
fist
ja
cli
dec
add
inc
hlt
pop
fist
into
inc
in
add
mov
add
jmp
inc
ins
(bad)
movs
and
into
outs
mov
xor
loop
inc
push
ja
add
push
lahf
jmp
jnp
ss
and
ret
lea
outs
xchg
cmp
stos
add
fwait
add
(bad)
inc
mov
add
add
pop
fimul
and
push
or
push
push
idiv
mov
add
mov
out
imul
pop
add
mov
pop
mov
push
xor
jmp
stos
mov
push
faddp
loope
sbb
xor
stos
ret
movd
les
add
mov
test
jecxz
scas
add
cmp
mov
pop
jbe
push
or
stos
jae
stos
lea
pop
sbb
jae
or
xor
push
aad
imul
and
sub
shl
ja
in
pusha
xchg
aaa
cmp
rol
aas
xor
sar
rol
bound
sub
scas
loopne
sub
sbb
push
shr
(bad)
repz
imul
mov
inc
mov
dec
not
add
out
aas
adc
fisttp
je
arpl
or
dec
dec
ror
dec
jmp
test
pop
jb
mov
mov
push
inc
jo
push
push
popa
push
mov
jmp
aas
fwait
inc
and
sbb
sub
adc
cmp
jnp
mov
lock
adc
repz
into
xor
xor
xchg
pop
out
and
mov
lahf
inc
sbb
mov
pop
fiadd
add
lahf
sti
jae
xchg
pop
jecxz
movs
dec
mov
bound
(bad)
xchg
sub
jmp
pusha
cmps
movs
mul
add
loop
cmp
jl
(bad)
fwait
cmp
loop
add
(bad)
cmp
sbb
xor
and
popa
jg
pop
cwde
movs
mov
outs
xlat
mov
iret
xor
sub
pop
xchg
pop
(bad)
sub
mov
push
mov
ret
repz
push
xchg
out
stos
scas
adc
test
scas
mov
retf
test
sbb
(bad)
xchg
xor
add
and
loop
add
shr
mov
pusha
(bad)
sub
inc
adc
mov
dec
mov
outs
outs
sbb
retf
or
sub
sahf
push
and
ds
nop
xor
jmp
stos
or
aad
test
push
lahf
and
in
jb
sub
repnz
jl
jb
pop
test
xchg
push
out
aaa
ror
int3
nop
dec
xchg
add
ret
push
sub
push
dec
jecxz
pop
xchg
push
(bad)
pop
mov
push
fwait
add
push
adc
pop
pop
push
dec
cld
test
pop
sub
and
xchg
ret
mov
repz
or
and
add
cmps
mov
mov
pop
mov
adc
imul
xlat
dec
pop
pop
and
shr
call
movs
sbb
sti
outs
rol
push
(bad)
sub
cmps
add
xchg
sbb
stos
mov
mov
push
xchg
push
lods
bound
dec
mov
bound
inc
pop
pop
xor
pop
sbb
xchg
add
push
fwait
xchg
(bad)
pusha
mov
sar
cmps
ret
sbb
xchg
outs
jnp
mov
ror
pop
add
js
retf
or
jae
and
outs
daa
cmp
push
add
test
jmp
movs
jb
test
dec
scas
jp
pop
add
pop
stos
xor
mov
and
arpl
push
mov
retf
mov
or
pop
push
stos
jle
mov
out
adc
pop
sti
mov
jge
jb
lahf
cmps
outs
mov
bound
xlat
sbb
imul
inc
(bad)
pop
sahf
mov
es
pop
jmp
mov
imul
mov
adc
jle
adc
lods
imul
sub
push
movq
jp
push
sub
loop
push
mov
lods
or
mov
mov
sbb
addr16
pop
imul
lods
test
and
push
mov
lods
cmp
sbb
ret
sub
popa
mov
retf
fwait
test
jnp
inc
and
mov
inc
ins
shl
nop
arpl
jbe
mov
dec
popf
sub
dec
add
inc
xchg
cmps
and
sti
je
inc
sub
clc
mov
stos
mov
push
pop
or
xor
out
(bad)
pop
ret
pop
lods
mov
xor
iret
mov
and
push
lahf
add
pusha
dec
mov
cs
cmp
retfw
jmp
scas
sbb
mov
cmp
lods
jecxz
scas
adc
aas
call
test
call
pop
daa
shr
cld
(bad)
inc
test
xor
adc
arpl
or
aas
add
sub
pop
mov
pop
scas
dec
fdivr
pop
add
mov
repz
fisub
push
sti
scas
movs
into
shr
(bad)
mov
mov
pandn
mov
inc
mov
or
pop
inc
xchg
pop
push
mov
cs
sbb
and
cmp
das
aam
test
inc
movs
add
daa
inc
ret
sbb
or
outs
or
test
imul
shl
(bad)
loop
dec
ror
sub
ss
xor
or
sbb
call
add
scas
outs
push
inc
ficom
push
movzx
pop
and
mov
imul
nop
sbb
adc
fs
and
sub
and
out
add
shl
ret
sbb
iret
jmp
sub
inc
iret
pop
cdq
rcl
sbb
mov
aam
bound
lahf
xor
push
inc
cld
push
imul
inc
push
xchg
cwde
mov
call
or
fadd
mov
jle
push
in
inc
(bad)
sub
push
cmp
repnz
xor
cs
pop
push
dec
push
dec
add
(bad)
mov
pop
add
xor
inc
ret
sub
outs
add
dec
xchg
dec
mov
cmp
inc
xchg
xor
or
adc
xor
icebp
jbe
dec
(bad)
neg
data16
add
outs
jnp
fadd
stos
jg
mov
adc
push
mov
or
sahf
pop
into
in
add
inc
and
mov
push
and
mov
adc
or
mov
test
xchg
jl
jno
cmp
push
xor
pop
or
test
fcomp
(bad)
sar
inc
pop
iret
sbb
xchg
dec
mov
lods
cmp
dec
mov
mov
sti
mov
pop
(bad)
mov
(bad)
out
mov
sbb
lds
sub
arpl
int3
ins
mov
cmps
bound
fcomp
adc
or
add
bound
in
mov
xor
outs
jnp
sub
movs
imul
add
pop
sub
sub
mov
enter
daa
sub
ret
sub
fisub
jecxz
arpl
mov
adc
mov
adc
mov
cs
out
mov
push
push
(bad)
and
lds
xchg
add
xor
in
jg
mov
xor
pop
aaa
sub
mov
(bad)
bound
push
mov
and
xor
push
add
jae
or
or
or
dec
mov
mov
test
stos
or
add
ror
mov
ja
push
fist
mov
pop
push
jp
les
imul
fwait
mov
aam
mov
sub
aaa
adc
adc
pop
and
add
sub
or
mov
rcr
adc
mov
(bad)
mov
mov
shr
(bad)
xchg
inc
push
lods
mov
inc
jmp
xchg
retf
lds
mov
das
add
loopne
iret
push
or
mov
sub
repnz
push
outs
jge
mov
(bad)
ja
xchg
mov
fwait
push
push
les
mov
dec
arpl
add
sti
sti
push
ret
xchg
xor
pusha
adc
in
ret
scas
adc
mov
mov
xor
mov
inc
xchg
pop
fisttp
inc
ror
jae
add
into
push
loope
adc
pop
(bad)
cmps
dec
cs
mov
inc
movs
outs
imul
test
mov
mov
shl
add
or
push
ror
mov
addr16
xor
adc
mov
mov
mov
loopne
push
test
push
mov
jmp
cmp
sbb
(bad)
out
adc
mov
ret
jmp
dec
xor
into
neg
inc
or
(bad)
sub
inc
adc
cmps
push
sahf
mov
inc
push
add
jmp
push
add
movs
inc
mov
xchg
sbb
mov
cmp
ret
popa
push
ja
cmps
fcom
mov
pop
in
adc
repnz
fild
or
rol
fild
fild
or
add
ss
and
cmp
idiv
ss
shr
mov
shl
add
mov
sti
pop
pop
fild
(bad)
retf
mov
xchg
or
mov
fcmovne
bound
outs
xchg
or
add
mov
imul
mov
inc
test
adc
pop
out
mov
inc
out
inc
xchg
or
repz
push
ret
(bad)
mov
ret
push
arpl
arpl
mov
gs
arpl
sbb
xchg
sti
mov
test
arpl
xchg
push
xor
mov
sub
push
cmp
inc
dec
sti
shl
test
(bad)
rol
dec
fidivr
pop
stos
push
daa
xchg
add
mov
fmul
inc
repz
push
or
xchg
mov
ja
mov
and
jo
jne
stos
idiv
add
or
add
iret
aaa
dec
inc
add
adc
loopne
ret
add
outs
jg
push
shl
lods
neg
popf
jnp
pop
maxps
jo
and
add
xor
dec
mov
and
mov
dec
ss
xor
mov
cmp
mov
aaa
pop
pop
and
push
xchg
ja
mov
lds
test
xchg
ret
fs
stos
add
xlat
xchg
jb
jo
call
xor
fild
imul
adc
sub
ds
fsub
mov
mov
and
jg
push
pop
push
repz
push
and
mov
das
mov
mov
sar
dec
aad
mov
lahf
ds
inc
mul
outs
addr16
jbe
dec
mov
retf
add
mov
test
daa
pop
popf
cs
iret
xchg
dec
fs
stos
aam
fwait
fwait
mov
sub
sahf
mov
or
lea
mov
out
test
popa
or
xchg
and
push
jnp
push
ret
jnp
mov
push
mov
cmp
ror
ja
xchg
loope
sub
mov
mov
lea
jnp
js
pusha
test
lahf
fisub
sbb
pop
sub
sub
aas
aas
cmp
lods
loopne
dec
mov
iret
xchg
daa
loope
xchg
outs
add
and
push
or
pop
pop
push
and
mov
push
sub
fist
and
(bad)
push
jnp
mov
fidiv
dec
pusha
sub
sub
jmp
inc
xchg
pop
sbb
mov
movs
pop
pop
mov
inc
sbb
out
xchg
add
mov
dec
or
xchg
and
mov
addr16
jnp
dec
dec
xchg
xchg
(bad)
mul
push
out
mov
lods
dec
lahf
pop
jl
push
add
arpl
pop
push
push
femms
or
iret
(bad)
rcl
mov
daa
fstp
mov
push
add
hlt
or
dec
mov
or
inc
bound
ret
loop
aas
xor
ins
and
push
push
imul
push
xor
dec
sub
cmp
inc
shr
jle
arpl
(bad)
stos
sub
dec
push
dec
ins
jne
adc
dec
xchg
mov
push
inc
pop
out
in
sub
add
mov
pop
add
dec
pop
outs
mov
adc
cmp
adc
fcmovnbe
stos
pusha
xchg
out
mov
ja
adc
mov
or
xchg
mov
ja
pop
inc
push
or
mov
add
call
or
lea
mov
rcr
jno
sub
jne
sbb
sub
xchg
js
xchg
add
jle
and
stos
and
sub
sbb
(bad)
xchg
dec
cmp
cmps
pop
push
inc
and
sbb
mov
cmp
jnp
push
imul
xchg
and
shl
jle
ret
sbb
sub
sbb
cmps
scas
sbb
push
out
or
pop
and
aad
mov
and
loopne
sbb
xor
mov
push
lea
jmp
push
sbb
mov
add
xor
aad
pop
dec
dec
inc
es
stos
inc
pop
dec
push
call
test
or
scas
or
aad
and
jmp
and
xchg
adc
or
jecxz
mov
add
push
mov
inc
xor
jnp
adc
xor
outs
dec
cmp
jo
fnstsw
dec
xor
bound
sbb
add
jecxz
xor
xor
sbb
pusha
push
mov
and
cmps
add
dec
pop
repz
mov
dec
call
psubq
fist
or
ds
ficom
jecxz
mov
jo
cdq
gs
gs
bound
mov
inc
outs
xor
enter
push
je
mov
arpl
mov
stos
lds
enter
lahf
push
add
cmp
imul
cmps
iret
add
or
lahf
pop
pop
sub
cmp
cmp
fwait
pop
ret
or
and
fwait
and
sub
test
push
or
xchg
mov
test
pop
dec
bound
outs
scas
jbe
xchg
mov
cld
ret
dec
addr16
cmps
inc
or
sub
mov
ins
fst
ret
cmps
dec
mov
sti
sti
pop
jbe
inc
push
not
mov
push
push
inc
jecxz
test
icebp
mov
push
sbb
adc
out
std
xadd
aaa
out
cwde
mov
ficomp
in
inc
ss
mov
inc
cdq
das
aaa
cmps
xchg
adc
jno
mov
push
pop
sar
inc
cmp
push
add
lods
push
in
jmp
ror
pop
sbb
push
adc
add
into
fist
dec
aas
fwait
inc
xchg
fmul
sbb
or
pop
add
adc
ja
pop
test
inc
and
stos
cmps
xchg
or
lods
xchg
aas
adc
cmc
xchg
retf
jmp
lods
leave
sbb
jnp
ret
pop
add
mov
add
pop
fadd
push
sub
loop
mov
dec
cmp
sub
cmp
rol
mov
or
push
daa
std
lds
dec
push
fs
aad
and
cmps
mov
push
and
lock
cmp
pusha
and
retf
add
and
mov
pop
inc
pop
adc
or
and
cdq
pop
mov
das
push
adc
loop
push
pop
adc
les
mov
push
adc
cmp
mov
push
jg
fadd
sub
punpckldq
lds
sti
add
mov
push
adc
dec
add
dec
inc
(bad)
mov
xor
and
xor
add
adc
push
out
add
mov
inc
pop
ret
daa
mov
shl
nop
push
dec
out
sbb
jecxz
repz
mov
pop
addr16
adc
aam
cmp
pop
pop
dec
xchg
ror
and
test
push
pop
add
xchg
xchg
add
psubusb
xchg
pop
cwde
add
popa
jo
pushf
lock
fwait
mov
dec
xchg
aas
sbb
mov
stos
data16
cli
pusha
test
out
inc
gs
retf
and
rcl
inc
mov
xor
clc
and
into
push
gs
sti
adc
cmp
sti
pop
retf
push
rcl
and
sti
mov
push
adc
pop
pop
add
test
pop
test
ret
mov
push
fwait
into
add
in
int
iret
push
adc
jbe
retf
neg
add
iret
pop
or
add
mov
pop
cmp
outs
sub
mov
cmps
push
rcr
or
scas
das
xchg
xlat
jmp
mov
mov
pop
xor
sbb
or
mov
pop
rcr
mov
xor
xor
dec
mov
rol
push
inc
sub
das
fwait
pop
ror
and
and
cmp
push
cmp
pop
addr16
retf
or
sbb
inc
xor
aaa
imul
bound
pusha
xchg
mov
(bad)
jmp
mov
push
mov
jnp
mov
sub
lds
dec
or
jecxz
pop
xchg
clc
push
jecxz
phsubd
dec
stos
outs
(bad)
popf
cmps
pop
fs
push
cmp
inc
pusha
pfmul
dec
arpl
sub
arpl
pop
shr
addr16
(bad)
shl
ror
xor
movs
xchg
sub
add
pop
outs
sbb
out
out
add
adc
push
bound
dec
lods
sbb
sbb
fcomi
mov
sbb
fisttp
sub
and
mov
mov
push
mov
pop
pop
add
pop
cwde
lahf
xchg
outs
cdq
push
and
out
data16
imul
push
dec
mov
cmp
mov
or
xor
shl
push
pop
iret
dec
cli
daa
xor
or
cmp
cmps
cmc
xchg
pop
retf
xchg
adc
push
gs
push
jecxz
pop
arpl
sub
sub
sub
push
dec
dec
jmp
sbb
xchg
push
neg
xor
mov
mov
mov
inc
jbe
fsub
adc
inc
jb
imul
sti
lahf
or
fsub
jg
(bad)
popa
mov
xchg
imul
pop
and
pop
mul
movs
mov
pop
bnd
(bad)
or
rep
sub
sbb
shr
daa
pusha
jmp
pop
and
(bad)
adc
and
jl
jnp
mov
test
pop
aaa
xchg
outs
div
sti
das
rdtsc
adc
movhps
xchg
(bad)
push
outs
sbb
mov
xchg
fucomi
dec
loop
jno
shr
pop
and
mov
xor
gs
add
add
(bad)
adc
inc
add
sub
or
loope
arpl
mov
ficom
(bad)
rol
ror
fist
mov
mov
xchg
fwait
add
and
xor
inc
(bad)
sbb
push
inc
cmc
inc
jp
shl
test
sbb
jb
jge
outs
mov
or
xchg
xor
add
pop
pop
push
lahf
xor
stos
das
icebp
mov
and
lahf
push
outs
out
int3
add
imul
jmp
les
jae
push
push
push
sub
sbb
sub
cdq
jb
jecxz
sub
test
gs
jp
adc
adc
push
mov
push
(bad)
pop
dec
sub
xor
push
add
xor
sbb
sbb
add
add
and
xchg
push
adc
add
dec
adc
jb
pop
cmp
imul
add
pop
stos
sbb
adc
stos
mov
outs
add
ror
ret
push
nop
stos
push
add
push
mov
inc
pop
test
iret
mov
adc
(bad)
sub
mov
jnp
adc
int3
xor
cmps
inc
and
jb
xor
and
enter
dec
adc
xor
add
adc
and
xor
adc
sbb
xor
inc
push
and
xor
cmp
add
sub
and
sbb
mov
fs
or
xor
and
inc
push
add
xor
push
pop
xchg
mov
and
adc
dec
dec
and
mov
dec
and
mov
xchg
pop
xchg
lahf
xchg
dec
adc
pop
add
pop
push
and
add
push
mov
mov
pop
sub
add
call
adc
jg
jae
add
pop
in
fcmovnb
inc
sar
jg
jmp
xlat
les
cmp
shl
rol
adc
inc
jg
push
mov
aas
xlat
lds
xor
xor
shl
dec
sti
fwait
mov
push
pop
push
inc
mov
ret
mov
xlat
(bad)
mov
cmp
ror
sub
pop
ss
repz
cmc
cmovg
cld
(bad)
call
cld
clc
repz
sar
int
or
aad
add
xlat
scas
add
stos
add
into
fwait
or
rol
xor
leave
pop
fsubr
adc
cmps
jb
mov
push
(bad)
cmp
stos
push
call
lahf
popf
sub
outs
jbe
sbb
push
(bad)
(bad)
mov
(bad)
fdivr
dec
(bad)
call
iret
jns
fnstsw
jg
pop
cmp
outs
sahf
ret
test
fnstsw
cld
(bad)
(bad)
fisubr
(bad)
sti
cmc
out
repz
jmp
rol
std
aaa
std
or
movs
push
out
(bad)
fistp
xchg
mov
outs
mov
xlat
xor
loopne
dec
call
movs
sub
sbb
imul
inc
es
fdiv
js
push
push
sub
rcr
ins
(bad)
std
sti
push
jno
mov
enter
nop
adc
cmp
nop
(bad)
stc
hlt
or
xchg
push
mov
data16
scas
pop
(bad)
imul
es
es
nop
push
sbb
mov
leave
xchg
adc
jg
lds
push
(bad)
ficomp
add
mov
push
ret
mov
jle
call
(bad)
sbb
loopne
push
jmp
retf
jmp
fstp
lahf
push
fcmovnu
pop
xchg
mov
mov
call
test
mov
mov
data16
sti
test
(bad)
cld
mov
cmp
push
in
call
push
loope
call
mov
cdq
(bad)
xchg
retf
mov
fsub
loop
fstp
repnz
jb
jp
pop
jmp
(bad)
sahf
and
mov
test
xchg
push
mov
outs
cmp
push
jmp
retf
inc
jbe
(bad)
fidivr
push
add
paddd
je
xchg
outs
aad
mov
mov
inc
test
pop
inc
mov
xor
nop
out
repnz
and
mov
inc
jmp
jns
xchg
sbb
jmp
push
repz
xadd
(bad)
xor
pop
cwde
jae
aaa
addr16
jbe
(bad)
(bad)
in
ja
neg
mov
push
(bad)
lods
add
retf
inc
xchg
mov
or
leave
ins
adc
push
dec
or
adc
mov
sahf
fwait
and
stos
ror
xchg
shl
aas
jle
movs
mov
and
call
into
xor
out
xlat
lods
pop
push
loopne
xchg
ins
(bad)
dec
mov
jle
pusha
jae
mov
xchg
sub
shl
cmp
outs
jmp
pushf
push
push
push
jle
movs
mov
shl
iret
sahf
cmp
mov
push
gs
add
jmp
push
cmps
inc
(bad)
xchg
aaa
out
inc
repnz
xchg
mov
dec
cmps
inc
pop
adc
out
push
in
fnstenv
xchg
or
pop
pop
dec
sbb
jne
fimul
inc
adc
sbb
outs
(bad)
ins
sub
mov
cmc
sti
test
cld
inc
jae
mov
dec
mov
push
inc
popf
std
(bad)
mov
cmc
adc
or
cmp
jmp
and
and
(bad)
jg
cmps
fucomi
loopne
iret
in
xor
mov
push
mov
pop
mov
push
inc
(bad)
mov
inc
inc
mov
out
or
(bad)
xor
daa
pop
pop
addr16
lock
lock
aaa
mov
dec
cmps
jle
jg
cli
fidivr
jmp
lock
mov
ss
es
shl
das
stos
xchg
push
push
ret
shl
or
(bad)
add
jge
rol
out
mov
test
xor
repz
out
aam
or
js
push
add
jg
mov
nop
ret
imul
clc
xchg
jmp
xor
jmp
jle
ficomp
add
ss
push
mov
int
ret
jle
jb
mov
xchg
ja
std
aas
std
das
mul
lds
jb
in
push
inc
test
jle
cmps
push
pop
lock
ret
test
cmc
jmp
fiadd
jg
mov
dec
jl
mul
pop
jle
add
das
call
fistp
jmp
leave
jne
inc
xor
(bad)
jle
inc
jno
hlt
cmp
pop
jg
sbb
mov
popf
dec
retf
(bad)
call
(bad)
retf
mov
(bad)
aas
cmps
pop
dec
(bad)
(bad)
call
mov
inc
inc
lahf
inc
xchg
call
mov
or
imul
cli
ja
pushf
es
das
das
xchg
push
mov
xchg
cld
(bad)
jmp
mov
lea
dec
out
xchg
dec
dec
aam
or
fcomp
jmp
ds
jmp
mov
adc
pop
pop
mov
into
daa
aaa
imul
pop
icebp
(bad)
mov
rol
pusha
imul
scas
push
inc
ss
(bad)
les
orps
jno
pusha
jg
push
hlt
dec
cmp
adc
cmp
inc
dec
das
hlt
jmp
(bad)
ds
inc
mov
ss
lahf
popa
lods
mov
add
inc
les
ret
jmp
jo
fadd
or
fwait
adc
out
ret
sub
inc
imul
jle
dec
sub
loop
push
dec
inc
sbb
es
jle
outs
popf
cmps
data16
out
mov
jle
mov
xchg
push
sub
jle
lods
cli
ins
popf
fnstsw
jbe
stos
scas
xchg
loop
pusha
js
mov
jb
shl
xor
cmp
jbe
jle
mov
shr
(bad)
(bad)
aas
lods
fdivr
stc
mov
mov
jmp
xchg
push
scas
sub
dec
push
in
jmp
jecxz
mov
push
mov
sahf
pop
stos
ret
xchg
jmp
sub
add
call
hlt
call
fcmove
inc
daa
xchg
sub
dec
(bad)
cmp
mov
call
jbe
push
mov
out
jle
movs
jmp
or
div
dec
dec
jae
std
jmp
call
jl
stos
pop
daa
aaa
pop
cld
mov
fadd
or
xchg
push
jle
sahf
mov
scas
or
push
cmps
lds
aas
xlat
jg
call
jle
xor
and
mov
or
jns
fnstenv
ror
mov
(bad)
mov
inc
add
(bad)
imul
lock
ds
fadd
inc
ffreep
pop
sahf
and
adc
scas
jge
iret
popf
cs
lds
loop
aas
mov
in
jae
out
sbb
push
shl
fmul
jmp
test
(bad)
cmp
int3
inc
mov
cs
pop
les
push
idiv
jle
jg
bnd
push
addr16
scas
and
mov
cwde
push
lock
int
jne
test
not
jb
cmp
pop
push
mov
jl
cmps
ja
(bad)
push
mov
call
scas
inc
jmp
cwde
cs
call
mov
(bad)
dec
and
pop
inc
imul
dec
mov
push
mov
call
jmp
sub
pop
sub
mov
push
cdq
(bad)
adc
push
ss
inc
jae
pop
daa
push
ret
test
in
(bad)
lods
inc
jne
and
es
pop
adc
fdiv
mov
scas
les
sahf
in
test
scas
jle
adc
jle
nop
xor
bound
mov
in
jg
xlat
mov
add
mov
(bad)
stc
repnz
jae
sub
inc
(bad)
jmp
xchg
inc
push
jecxz
cmps
loopne
inc
inc
mov
sbb
mov
dec
(bad)
mov
mov
push
xor
out
gs
and
imul
int
aas
jle
xchg
jl
sub
push
cmp
clc
repnz
shl
jle
scas
(bad)
inc
(bad)
in
fstp
int3
cwde
cmp
jns
(bad)
xchg
imul
test
int
outs
jmp
push
dec
inc
inc
outs
clc
movs
imul
cdq
out
aam
pusha
(bad)
mov
cli
std
push
pop
pop
scas
lds
xor
cmp
mov
fild
mov
hlt
stc
test
dec
out
xchg
push
dec
mov
inc
jg
out
inc
scas
ins
pop
push
mov
xchg
cmps
sub
pop
call
call
cmps
popf
fdivp
add
inc
in
repnz
inc
movs
out
mov
daa
aaa
call
popf
pop
mov
scas
push
jbe
sahf
and
enter
scas
pop
dec
fmulp
inc
(bad)
push
push
pop
jle
jbe
test
in
cmps
nop
ins
cmp
adc
mov
mov
dec
retf
push
or
push
dec
std
mov
mov
es
mov
ds
inc
call
(bad)
out
js
data16
(bad)
jg
fbld
dec
add
dec
jns
rcl
fidiv
shl
inc
in
imul
inc
les
cmps
xchg
pusha
jg
les
jg
repnz
xor
ins
push
push
dec
jle
lods
(bad)
jmp
cmps
outs
rol
pop
stos
jbe
cs
push
icebp
hlt
cmove
out
jmp
jmp
mov
ss
sahf
dec
lods
(bad)
cmp
call
std
inc
cli
xchg
ret
cmps
jb
cmp
(bad)
dec
outs
out
test
lock
hlt
call
iret
scas
jle
mov
rol
retf
mov
jbe
xchg
inc
ins
xchg
xchg
cmp
iret
ja
push
lods
int3
sub
sub
push
pop
pop
cli
inc
dec
pop
out
(bad)
xor
adc
movs
cmps
test
pop
cmps
iret
pushf
jle
sbb
pop
icebp
test
jle
aad
cmps
call
push
lods
push
xchg
add
pop
in
fsubr
into
jp
in
push
lods
fidivr
jg
mov
pop
jmp
(bad)
inc
jbe
mov
ds
pop
fiadd
push
cmp
jmp
jg
das
adc
push
fiadd
xor
jg
inc
aad
cmps
pop
movs
mov
fnstsw
inc
loopne
mov
call
icebp
mov
lods
ja
jg
jg
inc
xor
cs
test
call
outs
jmp
sbb
inc
inc
stos
call
sub
push
push
mov
cmp
cmp
idiv
jg
inc
sar
dec
pushf
imul
xchg
push
inc
push
out
fsubrp
cmc
out
iret
sub
inc
cmp
test
sub
push
out
xchg
(bad)
out
mov
ja
je
xor
lea
push
daa
test
pop
cld
jbe
iret
sahf
and
inc
xchg
push
movs
fbld
stos
pop
das
shl
imul
mov
loop
sub
pop
xlat
cmps
aad
js
int
cmc
cwde
int3
xchg
or
xlat
scas
add
jle
scas
add
fidiv
div
jecxz
leave
test
fdivr
lods
test
ss
fisub
jle
jle
jle
ins
push
std
xor
mov
mov
cmps
jg
mov
imul
adc
arpl
int
or
mov
cmps
cwde
into
call
dec
enter
and
test
and
fnstenv
lods
xchg
adc
(bad)
mov
in
iret
xchg
dec
adc
(bad)
loope
rol
mov
ja
mov
inc
pushf
arpl
xchg
enter
int
(bad)
jg
mov
xchg
dec
dec
mov
jb
(bad)
jmp
jmp
mov
test
pop
hlt
jmp
mov
lea
mov
fdiv
lahf
and
call
cdq
retf
ja
mov
mov
aaa
jbe
in
jmp
inc
addr16
int
aam
inc
cmps
cmps
shl
repnz
xor
test
push
jmp
lds
jno
js
mov
dec
mov
cmps
pop
stos
mov
sbb
sahf
inc
sti
loop
or
ret
(bad)
(bad)
pop
push
cmp
es
jge
std
push
dec
fbstp
inc
adc
push
and
ss
pop
out
stos
movs
push
push
stos
sbb
aaa
sti
lock
jbe
jle
mov
pusha
outs
jle
(bad)
jle
cld
mov
add
jg
add
dec
imul
stos
dec
cs
ds
pushf
ins
in
fnstcw
xor
(bad)
jg
cmps
jns
jg
lods
int
add
(bad)
adc
jbe
jle
jle
sbb
sub
push
out
ss
fsubr
jge
(bad)
bound
(bad)
scas
add
push
or
mov
ss
jge
and
stos
push
fs
es
mov
mov
rol
ret
lds
pop
iret
ds
cmp
jmp
jg
es
push
adc
jg
mov
call
dec
xor
popf
push
push
cld
mov
repz
(bad)
jg
cdq
pop
pop
mov
call
bound
jno
int3
ins
inc
lods
push
mov
pop
cmp
cmp
ja
nop
scas
cmps
sbb
dec
outs
ss
and
mov
aas
add
retf
xchg
xor
shl
icebp
loop
or
adc
mov
adc
test
mov
test
into
cs
cld
arpl
mov
(bad)
mov
scas
stos
dec
js
mov
and
scas
nop
(bad)
push
into
fwait
inc
out
outs
out
or
cmc
es
ss
daa
add
es
nop
adc
outs
sbb
jle
add
rol
ds
and
pop
mov
jo
inc
pop
int3
test
push
into
(bad)
jg
add
daa
loopne
ret
push
mov
test
jg
xchg
inc
es
xchg
pop
(bad)
jle
(bad)
adc
pop
fwait
jnp
ss
push
pop
add
mov
inc
mov
dec
sbb
or
lods
ja
fisub
lock
mov
push
push
test
inc
daa
xor
and
xchg
inc
jg
icebp
(bad)
inc
mov
nop
push
cmc
xchg
ret
mov
out
fsubr
loop
out
mov
into
pushf
bound
jmp
mov
clc
mov
inc
push
push
mov
jmp
scas
cld
call
push
mov
adc
cwde
push
(bad)
mov
inc
in
jle
sbb
ja
ret
call
pop
mov
jle
fcom
mov
shl
cmp
das
loope
push
out
jecxz
cmps
adc
pop
adc
cmp
(bad)
push
js
cwde
in
mov
push
fidivr
xlat
call
stos
ins
jle
xchg
aas
xchg
dec
iret
pushf
pusha
mov
(bad)
jmp
add
xlat
pop
xor
sahf
mov
ss
xchg
push
jg
sbb
mov
xchg
das
test
(bad)
jg
push
adc
push
(bad)
jg
std
cmc
pop
pop
mov
xchg
sub
ret
prefetch
shl
push
jg
mov
movs
lock
dec
pop
push
call
inc
mov
shl
inc
dec
pop
mov
out
add
pextrw
fadd
(bad)
loopne
cmp
mov
je
push
adc
lea
lock
inc
xchg
xchg
aam
cmp
int
inc
mov
mov
and
(bad)
dec
dec
into
jmp
inc
inc
mov
inc
inc
mov
mov
jg
lds
(bad)
mov
sub
push
xchg
ret
sti
(bad)
pop
jne
fdiv
(bad)
imul
ror
mov
(bad)
imul
sub
aam
jb
fild
push
sar
ror
andnps
lahf
fiadd
(bad)
jge
je
add
popa
pop
or
outs
call
dec
jle
sti
mov
push
jle
jno
xor
cmps
push
cmps
and
(bad)
cmp
cdq
pop
(bad)
jg
push
movs
and
outs
cmps
mov
push
xor
jo
ins
sar
jns
push
xchg
pop
popw
inc
das
adc
push
sti
fnstenv
or
xchg
addr16
cmp
dec
out
xor
sbb
jbe
psrlw
push
xchg
ret
cmps
ins
xor
adc
int3
dec
pushf
ins
mov
xchg
xchg
(bad)
mov
rcl
dec
(bad)
cdq
paddsb
out
adc
call
jle
icebp
loop
xor
je
enter
lds
lds
cmp
(bad)
mov
jo
es
outs
(bad)
lds
xchg
data16
pop
sti
rol
xchg
jmp
call
in
add
test
out
jmp
repnz
inc
(bad)
(bad)
test
ja
lods
jp
(bad)
jg
test
jmp
ins
mov
(bad)
jg
cdq
and
jne
inc
or
jne
mov
xchg
test
lahf
mov
out
xchg
or
sub
jns
mov
ret
adc
(bad)
(bad)
(bad)
jg
mov
xor
add
call
fsubrp
add
out
test
(bad)
(bad)
inc
mov
cmc
add
fsub
add
enter
ror
cmp
mov
mov
add
test
neg
fbstp
mov
movs
jle
fwait
add
mov
ins
(bad)
inc
jge
add
ja
add
mov
mov
(bad)
outs
fidiv
test
lods
mov
jb
fild
(bad)
cmp
mov
add
add
mov
mov
fidiv
push
scas
push
mov
mov
add
(bad)
std
jmp
pop
add
pop
add
arpl
add
mov
ja
test
xchg
cmp
(bad)
jmp
ins
jbe
push
pusha
cmp
jns
add
lea
mov
or
mov
mov
ss
stos
jbe
push
add
div
add
lods
jle
enter
retf
scas
xchg
scas
jp
into
lods
je
mov
fild
push
lds
dec
add
loope
fild
jg
add
mov
add
jge
add
add
jle
imul
or
retf
(bad)
out
sub
dec
cmp
fiadd
mov
repz
cmps
sti
mov
hlt
add
retf
fld
cmp
mov
push
mov
cmp
add
call
mov
jl
xchg
mov
cld
add
fwait
mov
mov
mov
scas
sahf
stos
mov
push
clc
rol
xchg
adc
loop
outs
add
mov
add
fld
cld
fbstp
cmps
mov
push
mov
stc
stos
jo
lahf
fisubr
xchg
adc
add
dec
addr16
add
jns
push
test
add
sahf
dec
pop
xor
xchg
sub
ins
ja
outs
add
seta
inc
fwait
mov
add
push
mov
mov
mov
(bad)
fisttp
jae
add
mov
add
mov
(bad)
(bad)
mov
mov
fstp
into
fdivr
jnp
iret
lods
inc
(bad)
mov
inc
mov
nop
dec
add
xor
xchg
jo
mov
add
sti
jle
add
pop
sar
inc
adc
(bad)
jmp
pop
rol
dec
into
fld
mov
repz
icebp
test
push
pop
test
jmp
loopne
add
sahf
mov
add
sar
jg
scas
cmp
test
add
cdq
add
unpckhps
xor
jnp
add
out
das
jbe
add
sahf
inc
int
cmp
leave
test
adc
retf
push
enter
xor
sub
inc
lahf
cmps
jns
add
lahf
push
cmps
or
inc
fbstp
fimul
pop
add
(bad)
pop
pop
push
xchg
adc
ret
add
inc
sub
js
adc
test
jp
ret
pop
xchg
cs
push
fld
push
inc
adc
jp
add
lods
std
sub
pop
pop
loope
rol
pop
ds
or
popf
jne
add
movs
sahf
(bad)
mov
(bad)
fiadd
(bad)
popf
add
enter
xchg
jecxz
xchg
es
jle
mov
outs
(bad)
movs
push
add
jl
(bad)
test
inc
add
into
pop
push
add
add
pushf
jae
outs
(bad)
aas
push
add
idiv
add
xchg
add
(bad)
(bad)
(bad)
dec
rol
dec
int3
fiadd
mov
lock
add
jecxz
add
fdivrp
(bad)
call
fld
aas
mov
add
stos
mov
cmp
cmps
add
add
ret
xchg
ss
js
out
arpl
out
in
add
in
xor
or
push
rol
jle
add
cdq
add
adc
pop
add
xchg
inc
(bad)
push
clc
mov
popa
add
pop
or
jmp
cld
or
test
jp
inc
and
loop
ss
cmp
fwait
add
dec
dec
add
cld
jmp
add
push
add
jnp
add
test
add
scas
jbe
lods
lock
and
stos
cmp
pop
cld
pop
push
int3
stos
add
shl
out
lods
sbb
mov
pop
lods
add
rol
jmp
add
mov
mov
int3
lods
mov
mov
add
and
mov
test
test
xchg
add
inc
adc
out
(bad)
(bad)
(bad)
dec
int3
add
aam
xchg
fucom
add
out
repnz
loopne
add
ficomp
add
mov
xchg
pushf
xchg
jo
push
xchg
mov
add
inc
pop
lahf
gs
pop
lea
ja
(bad)
cmp
leave
add
js
ja
push
test
scas
lahf
mov
aaa
(bad)
test
cmps
pop
add
imul
in
adc
not
inc
addr16
pusha
sar
xchg
sahf
add
imul
cmp
add
inc
(bad)
sti
(bad)
fild
sldt
pop
or
sbb
lahf
pop
add
pop
jns
ret
lahf
les
cmps
mov
xor
xchg
push
add
aad
add
fnstcw
or
push
in
fdiv
out
cmps
add
(bad)
push
fsubr
nop
add
mov
sahf
lods
div
loopne
xchg
sub
test
sub
xchg
es
mov
pop
pop
xchg
sahf
mov
ror
mov
sub
fidiv
xchg
mov
(bad)
(bad)
mov
fucom
add
into
add
lods
aaa
xor
daa
pusha
adc
fsub
pop
mov
mov
fdivr
sti
add
cmps
mov
lods
mov
clc
(bad)
cmp
mov
test
xlat
add
fwait
add
inc
push
cli
push
cmps
pop
dec
push
push
ja
into
lods
lock
(bad)
rol
jg
adc
inc
imul
imul
mov
outs
scas
xchg
clc
stos
and
pop
add
popf
outs
sbb
out
loopne
sub
push
clc
cmc
jle
ins
and
fwait
outs
push
into
aaa
add
mov
in
jmp
shl
add
fmul
jmp
xchg
out
mov
in
mov
ret
sahf
xchg
add
movs
imul
sub
ins
mov
push
loope
add
add
sub
and
stc
stos
lahf
xor
cmp
mov
mov
(bad)
jg
push
inc
scas
mov
add
lds
add
add
mov
dec
push
adc
scas
mov
jo
mov
xchg
mov
lahf
xchg
lock
pushf
aam
add
into
fisubr
cmc
add
call
xchg
mov
ds
add
stos
fidivr
add
mov
aas
push
jne
add
mov
movs
pop
add
aas
ret
mov
adc
jle
push
imul
imul
idiv
inc
call
add
in
jecxz
in
cld
add
not
ror
out
jb
scas
mov
dec
lock
xchg
push
cmp
(bad)
sti
(bad)
mov
xchg
dec
add
cmps
outs
shr
push
push
add
lea
xchg
add
push
add
fisttp
lahf
call
mov
out
xchg
retf
fsubp
pop
mov
test
ficomp
clc
sub
add
cdq
movs
out
push
clc
mov
xchg
fbstp
or
add
fild
xchg
mov
in
add
jg
(bad)
fucomi
cli
data16
fiadd
sbb
add
in
mov
fcomp
mov
lods
mov
pusha
add
jbe
inc
es
repnz
test
lds
(bad)
fbld
adc
xchg
xchg
add
leave
stos
add
shr
or
(bad)
add
push
and
mov
jmp
jne
leave
fdivr
add
mov
add
stos
jo
cmps
mov
mov
sbb
stos
jle
add
add
push
mov
add
add
test
pop
push
mov
push
add
into
or
add
(bad)
frstpm(287
mov
inc
shl
add
scas
data16
test
jns
dec
gs
jns
js
ja
mov
jb
(bad)
push
xchg
pushf
pop
(bad)
aaa
ins
dec
in
out
cld
add
jmp
sbb
(bad)
call
in
ds
inc
push
not
movs
lods
add
scas
add
push
mov
mov
jmp
jns
add
out
add
in
add
mov
cmp
jl
add
jmp
xlat
ret
xor
cld
imul
xchg
test
test
outs
sub
cmp
sub
stos
sbb
ret
pushf
add
mov
lock
add
xchg
cdq
scas
xor
mov
out
inc
pop
lahf
xor
cmp
(bad)
jmp
mov
enter
rcr
add
loop
jl
call
push
jmp
call
jmp
fdivp
div
add
jmp
add
inc
push
jmp
add
out
dec
jp
add
loope
cs
daa
push
fild
test
cli
add
stos
mov
jbe
mov
inc
pop
sub
scas
jl
mov
aam
mov
inc
pop
push
add
test
add
jmp
idiv
push
pop
jle
mov
push
xchg
ins
xor
ds
cmc
dec
outs
or
push
push
pop
loopne
stos
es
test
xlat
mov
inc
jae
leave
test
pusha
push
xor
dec
jge
add
sub
push
add
add
and
mov
test
add
mov
(bad)
shl
stos
xchg
pop
loope
push
xchg
arpl
lahf
lods
mov
repz
jl
popf
add
jmp
inc
mov
fcomi
imul
mov
test
lahf
aaa
mov
sbb
out
test
cmp
jmp
fld
sbb
nop
outs
xchg
jle
add
dec
ret
ds
std
add
dec
(bad)
(bad)
(bad)
jg
out
inc
jge
add
jae
add
imul
add
pop
ffreep
gs
or
outs
fcomi
hlt
inc
fwait
enter
mov
jle
mov
sbb
in
jp
loop
sar
call
scas
lods
mov
mov
dec
add
lods
shr
ret
aas
dec
xchg
ds
outs
pop
jnp
scas
jg
mov
push
push
(bad)
push
dec
test
mov
pop
clc
inc
test
add
adc
sub
mov
add
push
js
fild
mov
mov
cmp
stos
xor
cmps
sahf
jmp
sbb
jno
pop
ins
push
add
pop
or
mov
dec
popa
adc
pop
pop
add
jl
add
scas
xor
out
fild
mov
add
dec
sahf
movs
add
adc
mov
fucomp
add
ds
aad
xchg
or
push
xor
push
inc
add
jmp
(bad)
inc
cmp
jle
leave
mov
into
es
mov
inc
inc
xchg
icebp
pop
mov
sahf
mov
cmp
add
int3
fsub
leave
fdiv
dec
jae
mov
jo
scas
jne
add
jno
and
mov
call
mov
out
add
xchg
jge
(bad)
jbe
mov
and
or
lahf
or
lahf
jo
add
mov
mov
pop
add
ss
out
add
push
dec
movs
jge
es
and
jnp
jbe
push
pop
xchg
jmp
hlt
add
into
mov
sbb
ss
push
xchg
call
cld
ins
sbb
push
or
sbb
movs
js
sbb
fwait
sub
xor
jl
add
jge
mov
cwde
outs
and
dec
sbb
stos
mov
push
pop
es
add
dec
push
lods
xchg
add
scas
jg
and
xchg
addr16
push
call
sub
xchg
sahf
add
in
add
loop
(bad)
in
add
jmp
cs
push
(bad)
ss
test
inc
aad
push
mov
inc
stos
ret
scas
cmp
movs
sub
mov
outs
add
scas
dec
cmp
retf
sub
(bad)
jle
stos
lock
jmp
pop
mov
add
outs
jle
or
in
ja
leave
mov
call
add
mov
jnp
mov
gs
cmps
into
rol
mov
inc
outs
call
add
lahf
arpl
ret
add
mov
mov
xchg
mov
(bad)
jbe
xchg
jle
es
pop
xchg
scas
test
repz
hlt
aas
(bad)
mov
dec
add
ins
sbb
lea
jmp
add
fild
or
ins
mov
push
fst
jle
jbe
xchg
push
xor
mov
cwde
imul
cli
sbb
test
xor
mov
stc
sub
xchg
aas
xchg
cmps
mov
add
icebp
div
add
in
push
(bad)
outs
inc
fsubr
add
lods
lock
out
pop
push
mov
xor
scas
sbb
or
cs
cmp
sbb
mov
or
aas
(bad)
cmp
cs
scas
inc
ins
iret
fidivr
adc
(bad)
jge
pop
inc
fs
xor
in
cld
add
in
inc
jns
mov
add
(bad)
cmp
push
loope
sahf
outs
call
adc
ss
movs
ins
jle
out
outs
out
int3
stos
jno
fdivr
ja
mov
jle
push
inc
add
mov
push
(bad)
fcmovnu
or
(bad)
sar
add
sbb
mov
mov
xchg
jle
jl
push
loopne
adc
loopne
mov
push
push
loope
jl
xchg
add
xor
pop
cmps
sahf
jl
xchg
push
movs
fcomip
call
loope
add
icebp
push
movs
sub
loop
add
out
fsubr
scas
loope
sub
fsubr
cmps
fidiv
inc
shl
add
loopne
add
add
pop
aaa
sahf
stos
pop
add
add
dec
xchg
call
sub
and
jo
add
(bad)
(bad)
popa
cld
cmp
jle
out
outs
and
out
xchg
iret
xchg
mov
out
add
mov
fiadd
outs
cmps
lods
adc
mov
retf
sbb
push
adc
jmp
pop
mov
into
rcr
shl
push
out
ffreep
add
fld
mov
ins
loop
dec
data16
daa
loop
xchg
jmp
test
dec
cs
pop
test
sahf
add
push
or
inc
push
jns
add
dec
aas
test
mov
adc
test
cmps
mov
inc
daa
iret
stos
cs
adc
lods
jnp
sub
or
pop
jg
or
test
lock
stc
fild
mov
imul
add
lock
cmps
fisubr
ins
mov
jmp
call
in
sbb
(bad)
addr16
ss
mov
cmp
add
or
mov
test
add
jmp
mov
les
dec
mov
or
or
jle
mov
inc
cmp
cli
ret
add
xchg
jg
cmp
xchg
test
imul
push
ret
add
mov
add
mov
push
loopne
xchg
or
clc
jbe
pop
mov
data16
inc
js
and
jbe
(bad)
loope
repnz
pop
das
dec
mov
jg
pop
and
pop
sub
push
add
and
dec
mov
cmp
add
cmps
aaa
add
mov
inc
sahf
jp
scas
push
push
test
mov
lahf
pop
loope
pop
mov
shl
or
add
push
loopne
cmps
(bad)
sahf
aam
loopne
cld
shl
add
mov
test
test
hlt
cmp
daa
pop
cmp
add
push
(bad)
call
push
test
rcr
add
push
lahf
enter
mov
add
add
add
jecxz
jl
xchg
jmp
sbb
aaa
pop
iret
(bad)
push
inc
lods
adc
fadd
xchg
add
ret
jecxz
xchg
add
daa
call
xor
add
std
add
fadd
mov
mov
push
sub
pop
ja
dec
clc
and
cmp
test
test
lea
ret
sahf
pop
lahf
mov
aas
xchg
dec
mov
cmps
mov
push
popa
repz
add
cmps
inc
ror
ss
pusha
or
mov
dec
ret
jp
fsubp
pop
jp
out
fsin
call
sti
add
loop
push
loopne
(bad)
fwait
test
aam
push
push
and
sub
xor
stos
hlt
sbb
add
into
aaa
ins
(bad)
out
xchg
xor
aaa
cmp
es
loope
arpl
scas
daa
das
dec
add
mov
xlat
jmp
mov
idiv
out
les
test
mov
xchg
mov
mov
iret
mov
push
lahf
(bad)
popa
pop
(bad)
fbld
loopne
mov
add
(bad)
fwait
add
retf
jmp
add
stc
out
sti
neg
jb
pop
sbb
jl
pop
(bad)
xor
aas
add
jle
add
(bad)
fbstp
push
pusha
push
cwde
jbe
nop
outs
daa
add
sbb
mov
jnp
retf
mov
out
or
test
jl
nop
cmps
out
mov
mov
cmps
cmps
jle
or
rcr
rol
aas
sub
clc
inc
mov
lods
sahf
pushf
and
cli
add
repnz
add
or
jecxz
mov
in
mul
xor
xor
dec
xor
loope
call
add
dec
add
dec
das
cmp
push
(bad)
add
xchg
add
xchg
icebp
mov
mov
add
fwait
cld
mov
add
or
js
xchg
imul
fdivr
fst
fiadd
add
into
push
in
aam
add
add
cs
push
test
dec
fs
daa
cmp
aaa
cli
(bad)
fmul
aaa
lea
add
adc
aas
data16
mov
add
out
mov
inc
add
dec
push
mov
sahf
bound
retf
inc
rcr
test
sbb
mov
hlt
add
call
push
pop
and
mov
shl
cmc
xchg
add
xchg
xchg
jle
aaa
or
ins
dec
pop
pop
pop
push
jmp
xchg
jle
mov
lods
mov
adc
mov
adc
out
shl
add
pushf
push
add
mov
test
into
cmps
add
pop
scas
push
cmps
xor
cmp
hlt
inc
das
aas
or
in
and
jge
push
pop
push
add
cmps
fdivr
in
cmps
mov
mov
inc
sub
cmp
(bad)
stos
jbe
js
mov
popf
jno
xchg
mov
inc
stc
sub
movs
(bad)
pop
jmp
out
clc
add
jmp
or
fistp
jg
jmp
fild
cs
add
pop
dec
add
cli
sub
out
or
into
dec
pop
xor
jo
or
mov
add
mov
clc
test
jnp
stos
pop
pop
test
add
cwde
push
lods
mov
jb
in
movs
add
dec
xlat
daa
push
cs
inc
daa
out
pop
and
fld
xor
dec
sub
push
add
mov
es
movs
gs
mov
jo
jo
xchg
mov
or
mov
lods
push
test
mov
cmps
lods
test
push
clc
test
add
popa
add
push
push
lahf
dec
cmp
mov
xor
fwait
out
idiv
inc
iret
fild
cmps
call
xchg
jo
jg
cmps
jl
sub
add
push
sub
lods
xchg
xlat
pop
cmp
out
outs
pop
sub
bound
test
cmps
pop
push
or
cmps
nop
bound
push
mov
test
add
lahf
pop
add
sub
add
jg
inc
or
out
dec
gs
adc
outs
sub
pop
ss
fwait
add
fwait
push
or
call
xchg
mov
mov
sub
jb
fwait
pop
add
lahf
or
jb
retf
scas
ret
dec
push
jo
test
loopne
dec
mov
sahf
out
push
fs
or
sub
jmp
adc
or
push
cs
test
dec
arpl
inc
or
jo
popa
pop
push
addr16
add
sub
xlat
pop
and
xor
xchg
pop
dec
ret
fcmovne
mov
cmps
adc
mov
xchg
movs
jge
out
jo
mov
dec
pop
cmps
ss
mov
dec
bound
dec
cmp
add
push
add
mov
test
inc
mov
inc
test
inc
mov
lea
jo
push
js
sahf
jno
mov
inc
out
push
sahf
inc
inc
adc
cmp
paddusw
clc
call
push
ja
mov
lock
hlt
add
sub
mov
adc
loop
shl
das
inc
outs
or
mov
iret
fdiv
add
add
pop
shr
xor
push
test
or
xor
xchg
push
xor
pop
popa
xchg
cwde
mul
jmp
add
jge
dec
jae
addr16
xor
clc
fild
mov
mov
mov
mov
rol
bound
jnp
mov
cmp
sub
xchg
mov
mov
mov
(bad)
popf
dec
aaa
xchg
icebp
add
pushf
push
jbe
mov
test
out
gs
(bad)
mov
mov
add
lods
jo
scas
mov
lahf
rol
mov
(bad)
arpl
or
test
out
add
loop
xchg
aas
add
inc
int
lock
fstp
push
test
int3
fcos
mov
jno
push
pop
xor
add
jge
push
stc
sbb
inc
inc
test
dec
mov
sub
sahf
mov
pop
inc
(bad)
std
ins
and
fwait
mov
retf
ret
mov
jle
inc
pop
inc
imul
scas
jmp
(bad)
mov
inc
sub
out
mov
fiadd
repnz
push
inc
xchg
inc
push
fwait
popa
jl
lea
add
into
rcl
pop
mov
add
mov
add
mov
xchg
push
aas
add
or
pushf
dec
ret
or
or
fwait
test
inc
mov
xchg
call
push
pop
fstp
rcl
int3
fcom
aas
enter
aad
add
dec
fdivr
push
leave
(bad)
add
mov
mov
pop
cs
add
jbe
push
add
pop
add
pop
das
sub
ret
fisubr
mov
outs
(bad)
(bad)
fld
stos
mov
pop
sub
addr16
xor
inc
inc
adc
dec
mov
dec
mov
dec
xchg
inc
mov
pusha
fstp
ficomp
outs
inc
imul
sub
(bad)
jge
retf
mov
aaa
jbe
add
push
lea
pop
mov
lahf
inc
lock
dec
out
xor
dec
inc
arpl
les
dec
inc
call
dec
push
popa
adc
xchg
into
cmps
ins
sahf
ins
mov
int
out
movs
ja
xchg
pop
sub
stos
hlt
fcmove
mov
push
cmp
(bad)
enter
jo
cmp
push
fsub
add
mov
out
add
in
out
and
(bad)
ds
xlat
clc
fisttp
push
xchg
xchg
fsubp
add
xlat
push
xor
popf
cmps
sub
out
xor
inc
jge
jnp
cld
call
jmp
mov
cmp
sub
mov
out
inc
test
inc
mov
mov
dec
xchg
sti
aad
(bad)
pop
add
add
cmps
jne
push
fstp
scas
jge
push
push
scas
into
pusha
cmps
je
jns
xchg
xchg
es
das
xor
aas
add
pop
xchg
arpl
mov
cs
xchg
inc
push
in
ret
add
jg
mov
enter
xchg
push
add
pusha
mov
pop
push
pop
add
push
jg
bound
push
mov
inc
mov
mov
xchg
in
add
shr
push
test
xchg
fstp
enter
ins
outs
push
gs
push
add
outs
es
fninit
add
fiadd
inc
mov
pop
loope
mov
sub
add
pop
dec
pushf
popa
adc
out
int3
mov
pop
dec
sub
xor
ss
(bad)
aas
mov
add
push
add
push
add
pop
add
cmp
jmp
pop
popf
push
popa
movs
jb
push
jp
jno
add
mov
add
ins
mov
add
out
mov
jl
outs
inc
cmps
jns
(bad)
jnp
mov
push
ins
inc
daa
das
cmp
inc
push
jmp
xchg
imul
fnstsw
lods
or
push
push
add
jmp
cdq
dec
inc
ret
lods
je
dec
mov
arpl
xchg
test
xchg
lahf
jns
add
cmc
pop
mov
xchg
out
pop
adc
push
nop
cwde
sahf
cmps
rol
inc
jg
cmp
(bad)
outs
cs
shl
add
(bad)
pop
shl
ret
or
(bad)
fisttp
retf
sar
push
lds
jle
ja
(bad)
mov
pop
rcr
add
add
(bad)
push
xor
dec
lahf
mov
or
popa
push
xchg
inc
ss
fnsave
stos
jle
aaa
cmp
or
(bad)
mov
inc
mov
dec
nop
pop
add
arpl
pop
sahf
imul
movs
jae
imul
(bad)
jb
jp
mov
cmp
add
add
retf
dec
adc
mov
data16
push
rcr
add
pop
sbb
push
jp
fidiv
xlat
push
fs
outs
add
pop
xor
push
bound
mov
das
cmp
imul
fild
adc
ret
leave
movs
ret
mov
push
rcr
ds
ss
jo
mov
xchg
test
adc
push
push
or
xchg
dec
mov
pop
push
inc
adc
jb
in
sbb
inc
leave
xchg
add
lahf
dec
(bad)
rol
ds
and
mov
cs
mov
mov
es
fadd
jb
aad
pop
rol
pop
push
imul
jmp
add
jae
pop
sub
addr16
jb
jne
add
pop
cld
mov
mov
add
popf
add
retf
mov
inc
rcr
add
loop
test
mov
shr
sub
add
pop
ret
pop
jbe
fwait
jb
popa
pop
imul
jb
test
mov
push
(bad)
call
fisubr
or
popf
pop
add
cmps
mul
rcl
xchg
cs
pop
add
xchg
gs
ret
cmps
test
iret
push
(bad)
jle
xor
mov
outs
aam
pop
rcr
add
jecxz
jb
loope
dec
leave
xlat
xchg
adc
cmp
int3
aaa
scas
rcl
jne
ds
ss
ror
test
mov
push
rol
fs
mov
ss
test
(bad)
push
das
jp
outs
mov
cmp
add
jp
pop
fwait
js
(bad)
push
push
loopne
pop
sub
(bad)
cli
pop
in
jmp
jg
jae
mov
call
add
xchg
dec
ja
sahf
pop
add
push
test
mov
inc
outs
pop
idiv
mov
mov
and
rcr
(bad)
dec
add
pushf
es
test
add
mov
movs
js
inc
inc
push
popa
mov
cmps
jo
cmps
sahf
push
xchg
mov
cmp
push
test
jg
iret
fild
jne
fild
gs
dec
(bad)
retf
adc
repnz
leave
cmp
lds
mov
cmps
dec
mov
add
fdiv
mov
dec
mov
add
mov
cmps
mov
movs
mov
test
adc
xchg
lahf
ss
add
not
cld
jnp
test
leave
aad
es
fiadd
and
loope
adc
fwait
jecxz
in
cld
inc
ret
xchg
es
lahf
cwde
mov
addr16
mov
jecxz
outs
pop
fnsave
push
mov
(bad)
pop
aaa
jne
add
je
mov
sub
xorps
sti
sub
push
test
retf
rcl
mov
aas
loope
inc
mov
ja
jp
add
lock
test
cmp
dec
push
add
xchg
dec
les
pop
add
xlat
add
pusha
pop
jle
cld
retf
inc
ror
enter
(bad)
mov
cmp
push
push
cmp
imul
scas
mov
mov
inc
lods
mov
add
in
sub
cmps
mov
cmp
pusha
add
jns
aas
dec
jle
arpl
add
retfw
out
add
inc
dec
jcxz
outs
cmps
encls
rep
add
mov
jbe
cld
push
js
sahf
data16
jo
outs
mov
icebp
push
(bad)
pusha
pop
outs
xor
out
popf
push
ins
mov
int
inc
add
(bad)
lahf
mov
aas
retf
dec
inc
push
bound
or
dec
lods
push
into
inc
mov
mov
mov
iret
add
pusha
(bad)
rcl
mov
fsub
mov
add
mov
pop
sbb
dec
sbb
jge
cmp
cmp
mov
mov
aaa
ja
jno
adc
iret
inc
xchg
clc
mov
jecxz
xor
add
and
inc
jl
jae
ret
(bad)
jg
sub
jo
and
xchg
push
lahf
mov
mov
push
jo
mov
je
mov
call
cwde
ins
add
jle
pop
sbb
pop
into
xor
dec
data16
icebp
add
mov
(bad)
xor
arpl
or
add
sub
push
lea
mov
xor
scas
ret
lahf
lods
jg
mov
push
ror
test
popf
call
leave
add
les
ds
fisub
pop
xchg
stos
mov
cmp
dec
sub
cwde
rcr
in
sahf
xor
add
bound
imul
mov
dec
and
ja
add
aaa
mov
bound
out
loope
jnp
enter
mov
into
xchg
xchg
push
lahf
inc
adc
xor
push
mov
sahf
call
test
sti
xchg
add
pop
inc
pop
mov
call
add
pop
mov
xchg
pushf
add
push
loope
jns
xor
xor
call
pop
shr
fimul
push
dec
mov
inc
mov
stos
mov
mov
data16
xchg
jo
test
icebp
push
(bad)
ds
loop
pop
lahf
cmp
loope
mov
or
(bad)
ins
xchg
jmp
cs
mov
cmps
jbe
cmove
xchg
leave
jbe
jle
sub
lahf
push
inc
test
scas
sub
pop
pop
push
pop
popa
xchg
aas
inc
test
(bad)
mov
add
gs
pop
call
(bad)
xlat
adc
mov
test
jae
addr16
(bad)
or
aas
outs
xor
mov
pop
push
ds
inc
stos
mov
mov
mov
mov
aas
cmps
mov
cmp
scas
rol
cmp
cmp
sub
fbstp
(bad)
dec
jbe
add
pop
test
pop
mov
add
call
add
jne
add
jno
dec
fadd
jns
fiadd
pop
or
mov
cmp
clc
fwait
jp
mov
add
ja
push
add
rol
xchg
push
int3
mov
sub
adc
fbld
loopne
sub
push
ins
cmps
jle
push
jmp
cmp
push
into
xor
push
outs
cs
jbe
es
ds
mov
jge
fistp
out
in
(bad)
ss
(bad)
(bad)
leave
aad
push
xlat
fwait
mov
fldcw
mov
mov
mov
mov
xchg
div
mov
pop
fsubr
ret
dec
pop
fiadd
enter
ret
fs
das
inc
imul
and
sub
lahf
sub
(bad)
jg
rol
dec
jbe
lods
add
mov
data16
addr16
add
add
pop
jo
aaa
jns
sbb
mov
js
and
dec
jae
add
jmp
and
push
add
push
ds
jae
jge
xor
jg
fcmove
add
into
mov
lods
shl
add
cmps
mov
pop
pop
(bad)
ret
das
dec
pop
and
loopne
push
push
stos
(bad)
mov
movs
or
test
dec
outs
(bad)
lahf
mov
cmc
repnz
pop
push
xchg
out
stc
jmp
js
test
cmps
ja
push
sahf
push
push
pop
mov
jmp
nop
add
pop
sub
push
scas
inc
ror
(bad)
cmp
fistp
push
outs
push
mov
mov
jmp
ss
pop
jg
ret
jbe
(bad)
pop
mov
jnp
pop
je
adc
loope
mov
jae
jl
mov
fmul
jo
jp
adc
xchg
jle
retf
imul
jle
lock
push
jnp
mov
jo
jg
pop
mov
clc
cmp
push
rcr
push
adc
aaa
out
jl
ds
addr16
popa
adc
aaa
jp
pop
ss
(bad)
mov
sub
ds
add
popa
add
cld
stc
test
inc
inc
je
add
gs
addr16
mov
scas
gs
mov
addr16
xchg
xchg
xchg
pop
add
add
sbb
out
inc
jg
out
(bad)
lods
sub
pop
mov
xchg
pop
and
jae
jge
inc
rol
outs
xchg
scas
call
inc
sub
call
ficomp
pop
xchg
jle
mov
jae
xor
pop
loope
xchg
jo
pop
cmps
jno
sti
outs
xchg
cdq
add
popf
push
xor
fwait
je
dec
mov
ss
dec
xchg
fild
sti
pop
add
repnz
mov
fbld
push
scas
push
pushf
data16
test
xchg
xchg
mov
xor
ss
jnp
xchg
mov
(bad)
out
push
ja
adc
inc
fisubr
xlat
push
or
test
add
nop
pop
cmps
jl
mov
adc
push
mov
jae
pusha
out
fadd
add
bound
mov
inc
test
xor
std
fild
add
xchg
add
sti
clc
jmp
shr
sti
or
xchg
pusha
out
mov
cdq
fs
pop
sub
call
add
xchg
dec
mov
xor
cmp
sar
xor
push
lea
(bad)
adc
adc
lahf
retf
clc
das
or
pop
add
lea
pop
fbld
jne
bound
test
(bad)
loopne
add
mov
add
pop
xchg
cld
bound
cli
mov
(bad)
(bad)
out
add
xchg
fsubr
loop
pop
call
loopne
adc
xchg
pop
push
push
and
jg
les
ja
(bad)
mov
mov
adc
add
lahf
push
sbb
cmp
cmovnp
add
or
xchg
ja
int
sub
lods
(bad)
(bad)
push
inc
lods
js
gs
jns
jle
pop
mov
nop
pop
push
add
lahf
iret
(bad)
das
add
add
mov
div
not
xchg
aaa
xchg
leave
mov
outs
outs
mov
add
push
scas
(bad)
pop
mov
ins
movs
into
test
scas
in
rol
adc
mov
loope
cs
jb
jl
cmp
movs
mov
xlat
loope
aas
push
les
bound
(bad)
inc
push
add
add
enter
mov
add
dec
(bad)
cld
lods
jle
jp
scas
mov
add
sub
mov
scas
inc
call
fld
push
xchg
popa
xchg
dec
mov
push
or
stos
aam
(bad)
shl
xlat
push
mov
cwde
add
add
push
inc
mov
push
push
loope
cmps
xchg
lea
push
mov
mov
push
sub
cs
add
ja
mov
push
xchg
xchg
add
ss
mov
or
jbe
lods
jnp
sahf
retf
ds
loope
test
jl
imul
jle
mov
jb
test
mov
mov
rcr
adc
ret
dec
nop
pop
push
pop
in
cmc
in
and
fsub
fiadd
retf
fmul
loope
push
test
pop
sar
pusha
xchg
test
inc
mov
dec
lea
ins
aad
jle
movs
add
ins
mov
inc
pop
xchg
add
add
bound
push
push
loope
mov
outs
adc
pop
arpl
xchg
(bad)
mov
cli
mov
out
push
scas
jg
mov
add
add
push
repz
out
das
pop
lahf
mov
add
add
add
mov
fidiv
sahf
ret
(bad)
push
adc
ins
inc
xlat
out
lock
sti
fwait
xchg
mov
mov
ret
fmulp
outs
push
call
stos
cmps
inc
xchg
lods
xchg
inc
test
aas
inc
retf
sub
mov
pop
fnsave
scas
sar
mov
add
mov
xchg
repnz
repz
(bad)
fistp
inc
pop
push
xchg
add
shl
add
mov
xchg
ins
mov
pop
test
out
mov
add
je
push
jmp
pop
mov
fnstenv
out
popa
nop
imul
mov
cmp
test
cdq
gs
mov
popa
test
js
push
or
push
pop
(bad)
xchg
push
jbe
inc
out
mov
xor
mov
jnp
or
xchg
ja
xchg
jo
ja
jl
push
add
shl
out
mov
es
mov
pop
mov
mov
scas
mov
xlat
pop
scas
or
push
ret
push
sahf
aaa
je
mov
jmp
hlt
shr
push
dec
nop
pop
test
push
xchg
mov
push
scas
ds
out
rol
test
xchg
mov
adc
cmp
inc
xchg
into
push
or
mov
mov
loope
inc
popa
test
add
(bad)
mov
(bad)
adc
(bad)
sub
mov
xchg
mov
das
pusha
pop
cmp
dec
add
pusha
pop
push
mov
pop
push
sahf
push
cmp
pop
and
gs
test
into
xchg
dec
cmp
mov
inc
test
call
mov
or
add
cmp
out
xchg
cmp
inc
push
and
inc
daa
jge
dec
jns
pop
lock
je
mov
mov
mov
add
jnp
jle
mov
push
mov
je
pop
test
push
mov
loopne
jle
xor
out
(bad)
popa
(bad)
outs
xor
mov
inc
xchg
dec
xor
sbb
ret
jnp
pop
dec
sub
fld
xchg
pop
in
out
add
mov
scas
hlt
push
cs
inc
xchg
call
rol
rol
retf
je
mov
jne
mov
push
js
outs
jbe
lea
push
das
scas
gs
jbe
cli
lods
jns
ss
or
pop
jmp
das
pop
ja
push
adc
jg
jns
pop
cmp
lock
cmp
mov
mov
or
mov
fwait
add
lods
mov
jle
out
dec
iret
sbb
push
test
add
xchg
cmp
ja
mov
or
stos
xlat
mov
add
ret
movs
(bad)
mov
js
pop
push
xchg
add
dec
daa
popa
ins
arpl
mov
js
cs
popa
cmp
inc
pop
lahf
mov
jle
ss
mov
pop
cmp
jo
mov
inc
daa
(bad)
dec
inc
ret
xchg
xchg
mov
movs
cmovne
outs
xchg
iret
or
retf
fxch
(bad)
(bad)
call
out
dec
lea
ret
mov
ret
add
leave
add
out
call
lds
vmwrite
ds
imul
or
shl
fwait
adc
xchg
fiadd
dec
lahf
pop
ror
or
loopne
data16
inc
fdiv
daa
fist
xor
cmps
pop
pop
clc
or
aam
gs
cwde
mov
test
pop
(bad)
mov
add
imul
add
add
(bad)
inc
shl
add
in
add
retf
jnp
xchg
scas
xchg
add
push
cmp
push
xchg
popa
xchg
jb
outs
rol
adc
mov
jle
out
mov
nop
sub
fsubr
add
aas
add
jle
outs
aas
push
adc
mov
ins
or
mov
sub
std
lods
into
outs
xor
ja
(bad)
ins
xchg
lahf
pop
stos
mov
jb
(bad)
(bad)
cmp
pop
mov
fwait
add
add
add
out
in
add
sub
xchg
add
cmp
test
pop
add
pop
push
xchg
pop
add
popa
push
popa
cmovg
dec
xchg
pop
mov
pminsw
push
jle
mov
cmps
xor
std
call
ds
lahf
pop
xchg
add
add
lds
adc
outs
xchg
xchg
push
test
dec
jl
repnz
lahf
(bad)
hlt
adc
pop
xchg
loope
(bad)
inc
pop
mov
xchg
add
rol
leave
jmp
and
imul
jbe
push
add
not
pushw
imul
fbstp
loopne
nop
hlt
xchg
jno
jle
inc
mov
mov
pushf
out
cmps
out
and
inc
cmps
add
outs
add
lods
retf
lods
leave
dec
mov
es
enter
pop
mov
mov
aas
jae
fsub
fiadd
ror
sub
(bad)
jmp
nop
add
call
aad
and
outs
push
jmp
rol
xchg
inc
cld
dec
aaa
jae
out
pop
add
test
stos
push
arpl
ja
pop
movs
outs
pop
cmp
outs
subps
push
sbb
push
jbe
mov
inc
mov
ret
jmp
scas
bound
(bad)
mov
add
int
add
scas
mov
ror
je
add
test
xchg
sub
mov
xchg
cmp
inc
dec
add
push
iret
lahf
add
loope
add
cmps
retf
shl
mov
push
jle
inc
inc
scas
popa
loopne
xor
imul
outs
addr16
jl
psrad
cmp
dec
mov
mov
sub
pop
push
ret
fiadd
(bad)
(bad)
inc
out
xchg
mov
mov
add
xchg
addr16
push
pop
xor
mov
add
push
xchg
out
add
fist
pop
inc
pop
xlat
add
int
in
xor
lea
jmp
xchg
std
cmp
not
(bad)
(bad)
inc
lock
bound
std
inc
xchg
(bad)
fldcw
nop
ror
fdivrp
pop
pusha
cwde
loope
arpl
icebp
jne
ror
call
sub
idiv
adc
xchg
sbb
mov
jmp
sahf
into
inc
repnz
pushf
frndint
jo
fist
jmp
mov
loope
ret
xchg
aam
pop
test
into
call
xchg
rol
shr
rcr
dec
(bad)
ds
sti
jg
jg
xlat
mul
lock
call
les
mov
push
stos
push
jle
add
mov
icebp
sti
push
jbe
popa
mov
jmp
sbb
int
jg
mov
sar
pop
mov
call
cdq
int3
in
rol
dec
adc
cli
cld
or
mov
div
call
push
xchg
aam
xor
aad
jo
sar
adc
adc
add
sbb
in
add
shl
dec
ins
xchg
xchg
loop
pop
push
cmps
(bad)
pop
mov
push
mov
unpcklps
sbb
in
aas
pop
fucomip
jmp
jo
xlat
lock
jmp
jmp
fdivr
ss
jmp
in
lock
sbb
fimul
f2xm1
inc
jge
ror
jno
test
in
cmc
mov
cmp
(bad)
(bad)
mov
in
loope
ds
pop
or
icebp
not
jno
int
mov
jmp
pop
call
scas
jle
mov
jmp
mov
push
add
add
out
neg
outs
mov
out
dec
scas
sar
cmps
xor
stos
jg
mov
inc
stos
aad
(bad)
paddb
or
cmp
stos
retf
leave
inc
movs
retf
jmp
shr
out
jmp
adc
mov
shl
imul
in
xchg
fild
ret
inc
(bad)
lock
call
mov
loope
dec
popf
(bad)
int
and
mov
push
(bad)
repz
sti
or
jae
aad
adc
sar
lea
fprem
push
int
add
(bad)
jg
mov
pop
shr
call
call
cld
std
push
mov
aam
pop
sbb
mov
sbb
jmp
(bad)
(bad)
dec
call
inc
mov
(bad)
jne
(bad)
cmp
inc
sbb
push
mov
in
call
outs
and
mov
push
xlat
cli
push
cmc
(bad)
jg
rol
loop
scas
not
hlt
mov
lock
rcr
shl
pop
repnz
cli
or
call
call
jecxz
xchg
dec
jb
je
push
mov
jg
aam
jmp
jmp
mov
mov
push
ret
xlat
(bad)
mov
xchg
in
hlt
loopne
add
clc
adc
(bad)
(bad)
push
movs
jmp
std
jmp
icebp
call
mov
lods
loop
adc
add
xchg
call
ds
fild
(bad)
push
mov
or
cld
pop
stos
scas
aam
pop
leavew
out
shl
jecxz
call
add
shr
inc
les
shr
sub
(bad)
fnstcw
fisubr
xchg
inc
mov
clc
(bad)
jg
idiv
sti
cld
or
idiv
adc
in
xor
out
cmp
cmc
clc
pop
jle
xchg
ja
hlt
clc
push
jge
fild
sbb
sub
movs
outs
or
xchg
push
retf
(bad)
push
leave
cmps
mov
push
pop
int
pusha
int3
repnz
push
ror
rcl
in
int3
cs
call
xlat
stos
in
or
(bad)
(bad)
(bad)
(bad)
jge
iret
sub
sahf
cwde
rcl
cmp
aam
cmps
int3
lds
stc
adc
inc
rcr
inc
jnp
out
jecxz
pusha
lds
add
mov
int3
out
retf
jbe
ins
jle
popa
int
imul
jo
push
aam
jo
adc
push
enter
xchg
out
inc
fcomi
xchg
loopne
xchg
das
(bad)
aaa
xchg
mov
ins
daa
call
xchg
ret
jmp
pop
scas
push
daa
movs
push
add
sar
dec
lods
sar
pop
ror
sbb
cmps
pushfw
loope
mov
mov
mov
and
add
push
jae
inc
jp
enter
call
out
(bad)
loop
loope
mov
fadd
jl
dec
pop
lods
(bad)
mov
into
mov
out
xchg
call
fisttp
sbb
dec
fwait
data16
jg
outs
push
pop
mov
jmp
scas
mov
fwait
sar
dec
scas
aad
test
jecxz
jmp
jno
shl
outs
fild
ds
inc
retf
aad
cmp
fdiv
inc
mov
mov
(bad)
(bad)
stos
inc
cld
mov
loop
stc
outs
int3
call
cld
scas
fbstp
mov
lfs
mov
loope
inc
mov
outs
add
(bad)
and
adc
outs
jns
jg
adc
data16
jmp
stos
fcos
adc
pop
pusha
mov
shl
pop
jmp
pop
xchg
mov
test
xchg
pop
(bad)
jbe
fstp
(bad)
push
hlt
inc
cmps
shl
clc
xchg
stos
mov
lds
mov
push
test
(bad)
not
ret
rcr
pop
mov
enter
(bad)
call
dec
test
xor
sub
(bad)
call
test
test
cdq
inc
es
call
mov
aad
scas
shl
pop
rcr
inc
mov
in
(bad)
jmp
jp
pop
aad
out
sub
outs
movs
mov
inc
mov
std
xor
outs
push
xor
aam
loope
(bad)
(bad)
(bad)
mov
nop
hlt
jns
jp
ins
jne
in
inc
gs
inc
ins
jl
push
jge
neg
popf
and
(bad)
push
pusha
mov
outs
test
lds
xchg
(bad)
sti
pop
mov
(bad)
(bad)
jmp
(bad)
(bad)
dec
lods
sar
add
ss
out
movs
scas
sub
lods
or
jle
mov
(bad)
cmp
sar
dec
cmps
shr
inc
cmps
iret
lock
rcr
data16
hlt
ja
or
test
shl
mov
mov
das
mov
(bad)
jnp
mov
(bad)
call
loopne
mov
cwde
xchg
sahf
xchg
mov
sti
jb
enter
(bad)
jmp
ret
icebp
inc
xchg
mov
push
xchg
mov
push
xchg
mov
je
jnp
(bad)
and
dec
loope
ficom
dec
sub
push
outs
outs
mov
mov
xchg
(bad)
movs
not
aam
dec
mov
setne
stos
xchg
sub
stos
push
mov
pop
dec
bound
xchg
shl
ins
enter
mov
loopne
mov
sti
push
mov
scas
push
repz
(bad)
fdiv
call
dec
mov
add
cmps
es
mov
loop
jae
lods
(bad)
scas
mov
je
in
cli
retw
imul
loopne
enter
fisub
fsub
aaa
je
mov
mov
pusha
mov
fsubr
icebp
and
pop
ror
inc
outs
mov
xlat
call
lds
ja
loope
fisubr
sub
pop
xchg
dec
dec
retf
inc
aas
mov
and
mov
push
pop
(bad)
out
dec
push
pop
or
push
jecxz
loopne
pop
xchg
outs
and
out
mov
lea
dec
mov
(bad)
out
call
test
pop
xchg
test
push
(bad)
(bad)
js
pop
aad
or
cmps
push
jge
fcmovnb
(bad)
dec
and
push
or
les
xchg
mov
fmul
loopne
xchg
jle
cmp
mov
inc
call
outs
jbe
adc
das
pushf
ret
push
push
inc
mov
ins
inc
and
shl
leave
ds
fcom
fdivr
fdiv
xchg
data16
push
pop
mov
rcr
cmp
dec
(bad)
icebp
jle
out
mov
jg
leave
lock
in
push
int3
hlt
push
add
mov
jmp
mov
mov
push
jl
aam
fldln2
repz
aaa
dec
mov
jecxz
jmp
lahf
push
fucomp
repnz
(bad)
fild
sbb
jbe
mov
pushf
push
(bad)
int
inc
std
mov
out
inc
hlt
cli
inc
add
add
int3
icebp
into
dec
push
(bad)
xor
cmp
fcmovnbe
outs
aad
mov
fmul
jns
es
mov
stos
cmp
sbb
sbb
dec
and
mov
fsub
mov
fs
mov
lods
fadd
(bad)
aaa
retf
retf
sub
sbb
adc
pop
xor
inc
push
fst
fprem1
mov
pop
fdiv
pop
retf
jno
ficom
test
ss
loopne
inc
jmp
push
adc
mov
xchg
shr
dec
cmps
push
loope
mov
jecxz
mov
xlat
lahf
enter
in
ffreep
inc
dec
aad
sub
ret
lock
rcl
jecxz
jmp
loope
cmc
pop
jp
xlat
mov
cmps
adc
dec
mov
and
mov
push
mov
gs
pop
int
pop
ds
jo
jns
test
jmp
jmp
mov
mov
fnstcw
mov
hlt
movs
enter
jmp
sub
idiv
call
mov
mov
mov
in
lods
ret
rol
jmp
fcom
in
data16
inc
xor
ret
lds
mov
pop
ds
into
jo
cmp
and
cmps
mov
dec
js
call
fbld
std
cmp
push
cld
mov
out
mov
cld
jmp
xchg
mov
ins
xchg
(bad)
(bad)
xchg
mov
xchg
pop
lock
pop
les
mov
jmp
mov
and
sar
scas
add
(bad)
(bad)
mov
xchg
movs
mov
scas
inc
dec
out
outs
xchg
test
into
test
mov
stos
push
in
pop
and
sar
stos
aad
fs
jl
push
ja
retf
clc
xchg
scas
(bad)
mov
mov
lock
mov
adc
(bad)
jne
ins
data16
js
mov
mov
cdq
xchg
bound
jecxz
popf
mov
ret
out
cld
fadd
in
test
push
stos
int
mov
(bad)
(bad)
inc
jmp
cmp
enter
(bad)
out
hlt
and
loope
retf
cmc
rcl
outs
or
in
(bad)
cmp
jbe
jnp
jg
idiv
enter
(bad)
jg
(bad)
hlt
ins
mov
div
mov
(bad)
(bad)
cli
pop
pop
cmps
retf
add
rcl
jmp
das
push
clc
nop
jg
inc
adc
add
popf
lods
fdivr
sbb
push
mov
adc
mov
jle
xlat
clc
inc
lds
retf
add
call
js
push
mov
int3
out
cli
stc
stos
xor
int3
data16
mov
cld
std
pop
call
ins
mov
fsqrt
xchg
mov
xchg
pop
push
jo
dec
out
outs
shl
stos
call
cs
sbb
mov
xchg
out
(bad)
jmp
jecxz
arpl
repz
xchg
icebp
bound
jg
push
movs
aam
xor
push
xchg
mov
xchg
retf
push
std
fdivr
test
shl
sti
call
in
jo
loope
rol
lea
in
clc
jmp
mov
jmp
mov
fdivr
dec
jle
lods
mov
div
xchg
in
mov
out
ja
aas
adc
cmps
fsubp
sub
jg
retf
jmp
clc
adc
scas
(bad)
in
addr16
loopne
pop
mov
mov
ins
das
clc
fild
push
dec
cmps
int
pusha
mov
dec
mov
dec
jmp
adc
gs
mov
test
imul
lock
in
fiadd
mov
hlt
ins
mov
cmp
mov
jmp
(bad)
push
scas
retf
aam
mov
loopne
cmps
sar
jg
push
jle
(bad)
mov
(bad)
jnp
ret
fabs
ds
and
pop
hlt
cli
cld
or
(bad)
mov
in
aas
mov
out
mov
in
int
lods
cli
(bad)
push
in
cmc
clc
adc
mov
into
cmc
test
push
dec
aaa
inc
adc
jne
shl
add
mov
aas
inc
pop
inc
mov
xor
fild
(bad)
call
mov
sar
push
xchg
mov
mov
fadd
xor
sahf
into
loope
xchg
mov
dec
mov
mov
xchg
mov
mov
push
mov
mov
test
push
inc
clc
(bad)
(bad)
mov
enter
mov
jns
popf
mov
icebp
mov
sahf
mov
mov
je
ror
hlt
adc
jg
jo
fwait
mov
(bad)
jp
aam
cmp
stc
popf
int3
fdivr
scas
adc
pop
mov
dec
mov
retf
shl
xchg
mov
sar
xor
cmpps
ds
mov
(bad)
mov
dec
pusha
sar
mov
fistp
ins
cld
or
sub
sub
push
inc
dec
and
add
or
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
leave
sub
push
inc
cmp
in
in
jecxz
or
add
sub
inc
sahf
fxch
xchg
add
add
add
adc
and
pop
mov
sub
call
fld
pop
add
add
daa
or
daa
push
out
int
fcom
sub
add
push
pop
and
sub
jae
xor
xor
push
je
test
jl
jae
pop
jns
push
add
add
es
mov
xor
daa
call
inc
add
add
ss
add
out
sub
adc
arpl
inc
mov
out
fidiv
or
rcr
and
jnp
fimul
or
popa
retf
adc
pop
xchg
pop
lds
mov
or
cs
pop
push
call
test
sbb
add
xchg
fbstp
or
cmps
xor
sbb
xlat
sub
xor
push
jmp
push
push
sbb
lea
fldenv
mov
pop
mov
mov
ja
xlat
out
mov
movs
and
test
xchg
dec
bound
mov
adc
sbb
xchg
mov
sub
nop
fmul
outs
pop
inc
push
adc
fwait
(bad)
and
lds
mov
mov
add
mov
inc
repz
or
add
mov
les
add
add
jl
adc
or
pusha
pop
mov
push
(bad)
sub
add
sub
dec
cmps
cmp
jne
xor
ficomp
and
pop
and
sbb
in
push
str
stos
jp
sbb
(bad)
pextrw
add
pop
sbb
mov
ror
iret
adc
add
ins
or
ret
nop
imul
mov
and
ret
inc
sbb
ins
sbb
jmp
push
test
popa
jae
fisub
ins
pop
pop
dec
push
add
inc
es
cmp
inc
or
or
push
jae
mov
mov
push
es
jle
out
fisubr
ds
scas
push
adc
rol
adc
lds
pop
pop
pop
xchg
bound
lea
adc
je
fs
and
push
mov
rcr
mov
imul
inc
and
test
xor
enter
fcom
cmp
xor
shl
sub
inc
aas
cs
add
out
repz
adc
adc
fs
mov
push
push
or
cmp
imul
push
push
outs
sub
imul
scas
inc
cmps
add
xor
fcmovb
or
sbb
xor
mov
mov
pop
inc
push
pop
and
add
pop
in
data16
add
add
add
scas
add
ds
add
fiadd
pop
xchg
add
or
lahf
mov
and
ds
ret
jb
dec
xchg
jne
cmp
inc
and
or
mov
mov
imul
ja
(bad)
jmp
inc
adc
jae
in
rcr
and
add
mov
dec
ja
inc
add
mov
push
aam
adc
mov
xor
(bad)
xchg
sub
in
cs
rol
or
mov
xchg
push
test
sbb
jp
sub
push
sbb
push
das
jmp
out
sub
inc
sub
ja
push
push
les
add
pop
mov
daa
adc
push
jae
into
mov
xor
and
sub
iret
jnp
setne
cmp
push
sbb
dec
cs
xor
jns
sub
inc
xchg
xchg
or
sbb
sbb
push
jb
mov
ins
and
aam
cmp
cmp
xlat
jo
mov
mov
(bad)
dec
lahf
popf
xchg
inc
popf
fadd
inc
clc
cmp
lahf
add
je
push
or
arpl
xchg
adc
push
dec
adc
inc
adc
xor
xor
ret
xor
rol
sbb
and
push
mov
ja
pusha
loop
jle
push
or
fild
pop
xchg
scas
jae
mov
dec
push
xchg
mov
inc
fs
(bad)
fild
clc
dec
mov
ret
adc
imul
repnz
lea
ficom
inc
and
and
adc
push
lea
dec
pusha
inc
xor
ret
dec
sub
jbe
loopne
inc
xor
ret
mov
xor
aad
inc
addr16
inc
mov
test
push
loope
dec
imul
mov
cmp
arpl
sar
retf
fbld
rcl
add
mov
push
xor
add
aaa
sub
les
popa
push
rcl
dec
fidiv
scas
and
addr16
shl
xchg
cmp
sub
addr16
stos
push
mov
push
cs
call
and
and
call
daa
mov
test
inc
adc
mov
xor
xlat
xor
push
mov
adc
or
call
and
ret
(bad)
xlat
sbb
and
add
inc
dec
mov
add
and
adc
xor
ss
and
mov
(bad)
jmp
adc
dec
or
test
sbb
and
loopne
xchg
xchg
push
arpl
jae
push
inc
xor
test
shl
add
jae
ret
or
dec
fdivr
inc
add
lea
cmps
cmp
or
pop
scas
mov
mov
sbb
dec
push
push
mov
sbb
fimul
(bad)
push
arpl
fiadd
mov
cvttps2pi
xchg
xchg
rcl
ror
dec
retf
or
push
mov
pop
pop
or
pop
mov
arpl
test
jmp
iret
add
jmp
xor
mov
pop
adc
mov
inc
mov
push
mov
sub
cmps
test
adc
xor
or
imul
dec
inc
push
imul
xor
and
imul
sbb
push
xor
push
add
pop
(bad)
fdivr
cwde
sub
arpl
ins
rol
xor
(bad)
fiadd
es
sbb
arpl
sbb
es
mov
call
sub
pop
fwait
and
pop
dec
ror
jmp
mov
bound
add
(bad)
xlat
inc
(bad)
cmps
retf
mov
inc
mov
pop
pop
ror
pop
jbe
inc
jmp
and
ins
mov
pusha
bound
mov
retf
(bad)
ins
mov
pop
fwait
xor
adc
jae
scas
cmps
push
push
adc
adc
inc
int3
push
add
xor
or
adc
xor
pop
sbb
xchg
xor
push
xor
sub
sub
xchg
jnp
add
(bad)
inc
loop
adc
popa
arpl
xchg
aam
fistp
fst
dec
adc
dec
or
adc
aaa
jecxz
les
les
cmp
dec
dec
mov
inc
mov
stc
les
push
mov
xchg
add
pop
jb
xor
add
int
loop
scas
and
adc
sub
test
fidivr
xchg
(bad)
in
dec
inc
add
xor
xor
add
xor
adc
add
mov
add
hlt
xor
pop
arpl
in
add
push
push
mov
outs
cli
adc
outs
inc
push
inc
push
xchg
and
sub
idiv
std
mov
sub
sub
dec
push
sub
inc
push
xor
daa
push
daa
xor
jae
cs
inc
and
push
inc
sbb
push
dec
out
idiv
jae
and
dec
adc
inc
cs
sub
inc
xchg
cs
mov
cmp
sub
xor
mov
out
into
cmp
popf
cmps
dec
mov
fdivp
mov
xor
sub
jbe
inc
fist
aaa
xlat
mov
or
stos
xchg
repz
retf
inc
xor
dec
push
(bad)
sub
pop
imul
sbb
imul
xor
xchg
dec
ss
mov
xor
jae
fbld
push
xor
and
imul
and
jnp
and
cmp
in
ret
xor
sub
adc
push
sub
mov
addr16
xor
adc
repz
sub
mov
or
xor
out
sbb
adc
shl
sbb
loop
sub
and
mov
loope
xchg
pop
fcomp
inc
and
xchg
push
add
xchg
pop
aas
mov
sub
jmp
in
inc
dec
xor
fmul
xor
mov
aaa
or
sub
sbb
push
and
inc
push
push
scas
jp
adc
cmp
call
js
sbb
pop
mov
cmp
mov
iret
sbb
push
mov
inc
sbb
es
fcomp
(bad)
sub
push
adc
mov
sub
lods
in
jmp
pop
jae
sbb
push
and
inc
inc
mov
stos
aaa
jae
sbb
outs
shl
jecxz
cmp
or
adc
inc
outs
aaa
mov
dec
xchg
and
add
push
and
pop
stos
loopne
inc
sahf
xor
and
repz
outs
mov
clc
inc
inc
iret
fild
jl
ror
mov
js
sub
inc
and
cmp
mov
fdiv
addr16
repnz
ret
je
fstp
repz
xchg
daa
inc
mov
add
pop
adc
pop
mov
aas
pop
loopne
bswap
and
ror
inc
mov
mov
out
mov
scas
sub
movs
pusha
adc
mov
mov
pop
test
iret
ret
imul
adc
xchg
or
ret
sub
jmp
scas
scas
dec
arpl
outs
in
sub
push
cs
inc
repz
aaa
dec
dec
pop
push
imul
jnp
inc
cs
cmp
jae
xor
and
inc
push
inc
div
ret
loop
fdiv
or
xor
sub
es
push
jb
or
jnp
pop
pop
or
mov
repz
movs
mov
js
outs
ret
shl
and
out
into
pop
mov
pop
sub
aas
dec
push
cli
jecxz
xchg
mov
in
jbe
in
out
pop
cmp
cmp
add
or
xchg
cmp
cmp
int
repz
dec
(bad)
xor
sar
stos
cdq
fsubrp
lahf
pop
sub
xchg
sub
mov
fist
push
leave
jae
sub
sub
and
sub
xchg
adc
stos
test
push
mov
pop
stos
sub
jnp
or
xchg
sbb
stos
call
xor
pop
fdiv
loop
cmp
push
xor
mov
add
jnp
fcom
push
dec
jae
dec
sti
psubb
cmp
or
outs
jge
push
ins
aaa
out
ret
cmp
mov
ds
stos
sbb
ds
mov
and
dec
lock
xchg
ja
jg
in
or
sbb
(bad)
and
sub
lea
mov
inc
shr
lods
sub
inc
xor
jo
jns
pop
xor
mov
jmp
xor
or
adc
inc
in
ss
sub
push
add
adc
sbb
mov
sti
dec
cmp
push
xchg
iret
and
push
push
push
loope
push
dec
mov
lods
mov
cmp
les
aaa
adc
sub
add
pop
mov
inc
dec
cmp
xchg
int3
sub
or
add
jbe
dec
sub
dec
scas
jbe
daa
cmp
cmp
add
pop
loopne
cmp
push
das
ds
mov
sub
add
fcmovbe
pop
loopne
xor
or
jl
sub
out
xor
cs
stc
lock
dec
push
fist
sub
jl
or
aaa
leave
scas
sub
or
or
ins
repnz
mov
and
dec
stc
stos
mov
cmp
xor
sub
dec
push
sub
inc
and
mov
sahf
cmp
xor
pop
fdiv
add
push
lea
inc
ja
iret
add
add
xchg
cmps
daa
mov
mov
adc
xchg
jnp
dec
(bad)
das
pop
mov
and
lock
pop
dec
inc
inc
cmps
adc
fdivp
daa
dec
dec
scas
xchg
enter
ret
jmp
scas
xor
popa
ret
pop
cs
and
fistp
sub
(bad)
xor
xor
rcr
out
js
xchg
scas
inc
inc
pop
mov
dec
sbb
sbb
pop
sbb
mov
sub
or
shl
add
jg
prefetchwt1
aaa
(bad)
daa
dec
scas
jbe
imul
sub
jns
in
es
jno
fld
(bad)
push
(bad)
jp
cmp
mov
push
aas
imul
jl
sub
dec
sbb
div
sbb
fmul
sbb
xchg
pop
xlat
mov
les
stos
jmp
inc
push
xor
push
in
clc
mov
sub
sub
or
pop
dec
inc
xor
and
daa
jp
loop
retf
mov
add
aam
mov
sar
jp
xchg
(bad)
imul
das
arpl
or
jne
cmp
xor
popf
scas
xor
rol
xor
xor
loop
sub
xchg
stos
ss
out
shr
add
or
call
and
pop
push
daa
mov
inc
repnz
jnp
push
mov
call
push
pop
pop
xor
jmp
imul
inc
mov
or
sub
sbb
retf
or
in
pop
stos
inc
inc
inc
jnp
jbe
sbb
jae
scas
stos
pop
into
dec
inc
and
lahf
and
(bad)
das
out
xchg
popa
retf
rol
jmp
out
mov
pop
mov
out
and
xchg
ret
stos
mov
daa
cmps
pop
je
jp
rcl
xor
fwait
inc
jmp
sub
add
jp
pop
xchg
adc
and
stos
inc
mov
push
pop
sub
sbb
and
shl
add
push
or
mov
sub
sub
outs
add
add
test
fistp
and
xchg
pop
in
sub
adc
jne
add
test
fwait
std
jg
mov
mov
(bad)
inc
or
pop
add
xor
daa
jg
jno
test
push
outs
pop
or
ins
or
lea
pop
test
push
pop
dec
jp
hlt
xchg
add
test
sub
bound
nop
jmp
mov
add
xchg
cli
pop
out
jbe
test
daa
adc
push
pop
pop
js
jge
adc
jns
xchg
xchg
dec
adc
push
les
and
mov
test
dec
shl
jecxz
mov
imul
popa
call
js
pop
repz
or
lahf
fisttp
jecxz
cld
(bad)
cmp
push
add
pop
fadd
xor
(bad)
lock
pop
or
jmp
and
xchg
mov
sbb
out
(bad)
(bad)
out
bound
mov
and
arpl
push
cmp
pusha
sub
xorps
ja
push
pop
cmp
loopne
dec
gs
arpl
scas
add
xor
std
push
xchg
jae
mov
mov
add
outs
jg
dec
mov
dec
sbb
jle
xchg
xchg
sbb
sub
sbb
jae
shl
ror
cmp
adc
mov
dec
xchg
push
loop
cmp
sti
adc
ret
mov
dec
xchg
call
inc
xchg
xchg
and
jnp
(bad)
push
in
xchg
push
in
out
in
jle
rcr
lds
aas
movs
data16
push
je
retf
add
(bad)
jp
adc
dec
or
dec
adc
(bad)
mov
(bad)
mov
xor
and
aaa
bound
in
ins
jnp
lock
imul
pop
sbb
jle
mov
add
inc
mov
add
dec
jae
or
retf
dec
cmp
mov
add
out
inc
ins
or
mov
jg
sbb
pop
inc
push
jbe
clc
popf
cmp
jg
mov
cmps
int
cmp
data16
ins
fld
mov
jnp
or
push
mov
cs
dec
add
jmp
dec
outs
pusha
xor
mov
jl
in
xlat
dec
shr
push
int
movs
bound
or
add
sub
add
fdivr
add
adc
push
sub
dec
dec
pop
sbb
addr16
cmp
(bad)
icebp
cmp
mov
jo
outs
arpl
popf
setae
std
dec
std
push
push
push
xchg
sbb
push
xchg
dec
(bad)
dec
or
(bad)
cs
sub
ret
(bad)
call
jg
push
(bad)
outs
cmps
pop
(bad)
sub
pop
push
out
rol
scas
or
inc
mov
xor
and
aas
and
mov
jo
popw
pop
jmp
call
iret
push
push
or
or
inc
imul
ja
fimul
xchg
bound
pop
cs
dec
cs
xlat
and
jnp
push
cmp
xor
rcl
xchg
dec
lods
out
adc
sbb
inc
sbb
mov
scas
retf
nop
popa
or
inc
or
or
inc
xor
sub
pop
jnp
or
dec
push
pop
pop
add
cmp
and
sar
and
(bad)
mov
push
jp
xchg
aad
enter
push
pop
cs
push
cld
push
add
nop
push
pop
into
dec
repnz
sbb
pop
push
cmps
movs
mov
out
xor
cmp
push
add
or
pop
push
sbb
inc
cmp
fidivr
sbb
fistp
repz
into
(bad)
sub
sbb
in
pop
pop
sub
inc
push
push
(bad)
(bad)
push
(bad)
out
mov
push
daa
stos
xchg
pop
jb
add
pop
sub
mov
push
mov
outs
adc
dec
scas
add
push
or
retf
push
mov
pop
push
mov
pusha
fmul
(bad)
jbe
pop
jns
jp
inc
clc
rol
cmp
mov
sbb
xchg
inc
mov
stos
add
into
or
push
xchg
pop
loop
pop
or
pop
mov
cmp
push
jp
jne
sbb
push
push
cdq
push
sahf
pop
or
mov
add
add
push
(bad)
out
jbe
mov
sbb
scas
ds
cmps
repnz
pusha
xchg
xlat
lahf
sbb
pop
gs
stos
dec
mov
outs
cmp
push
add
popa
mov
sbb
dec
es
adc
jp
pop
push
mul
sub
cmp
dec
dec
fstp
inc
xchg
xor
ins
enter
pop
cmps
xchg
mov
and
ins
in
mov
imul
mul
push
ret
out
push
xlat
mov
(bad)
(bad)
ja
mov
retf
mov
cmp
jae
outs
dec
mov
fnstcw
inc
dec
inc
and
add
mov
rcl
pop
or
in
shr
add
ficomp
jp
ret
mov
jb
out
push
popa
cmp
sbb
shl
retf
scas
cmps
daa
mov
test
pop
pop
gs
or
dec
addr16
sbb
push
add
lods
sbb
(bad)
xchg
aam
cmc
dec
fbld
mov
or
pop
xor
iret
fwait
push
and
cwde
sbb
aaa
je
xchg
aaa
(bad)
jmp
movs
jb
arpl
or
test
xor
mov
and
sbb
and
sahf
mov
mov
gs
arpl
mov
push
jnp
sbb
call
adc
fcom
add
mov
loopne
imul
fbstp
xor
cdq
dec
add
xchg
push
popa
das
femms
push
shl
mov
sub
ror
add
sub
cdq
add
push
inc
and
shr
je
sbb
push
push
add
sub
sbb
and
imul
aaa
iret
ins
inc
test
(bad)
pop
mov
mov
and
mov
push
leave
sub
inc
pop
ret
add
mov
pop
call
push
inc
sbb
add
or
add
or
dec
xor
jp
and
fwait
xchg
scas
sbb
pop
xor
and
addr16
je
pop
cmp
jb
call
inc
mov
mov
adc
nop
push
pusha
ja
jp
rol
sub
sbb
add
dec
movs
jnp
xchg
push
imul
outs
mov
xlat
mov
add
mov
or
rcr
push
sbb
pop
cmp
movs
push
ins
nop
sub
imul
mov
mov
js
movs
cmps
(bad)
jmp
mov
add
sub
mov
out
push
addr16
into
pop
jnp
or
sbb
aas
pop
push
sti
addr16
lods
(bad)
xor
mov
das
and
push
xchg
jno
jg
xchg
push
mov
pop
ret
lods
push
bound
aas
or
sbb
push
jne
wrmsr
mov
adc
or
add
sbb
scas
out
(bad)
mov
inc
cmp
xchg
loopne
ins
add
add
xchg
retf
dec
int3
(bad)
dec
xchg
jb
iret
cmp
cmps
neg
fst
jbe
jne
adc
xchg
nop
(bad)
ds
dec
sbb
imul
(bad)
mov
cmp
fwait
daa
mov
pop
jbe
bound
movs
xor
jg
jmp
iret
add
movs
dec
cmc
push
adc
cmp
push
mov
daa
out
and
mov
and
inc
ja
addr16
(bad)
sub
add
imul
outs
xor
mov
scas
xchg
add
mov
mov
cmps
daa
stos
pop
mov
adc
push
pusha
mov
inc
sub
inc
dec
jp
or
pop
push
pop
dec
arpl
sar
pop
call
(bad)
and
push
sub
icebp
je
mov
scas
push
stos
imul
jmp
bound
dec
dec
adc
mov
inc
and
ins
sub
loopne
ret
mov
xchg
fisub
inc
add
mov
xor
lea
xchg
cwde
push
addr16
pop
add
imul
dec
mov
jae
fld
imul
dec
outs
loopne
mov
pusha
dec
sar
xor
arpl
adc
add
inc
repz
outs
(bad)
ret
data16
jnp
and
out
adc
inc
lahf
jp
adc
out
adc
mov
(bad)
mov
movs
push
inc
xor
arpl
ins
adc
or
jmp
out
push
daa
cmp
jno
add
push
sysret
fist
loop
push
mov
inc
dec
add
fiadd
jo
arpl
inc
mov
icebp
sbb
jnp
sbb
fild
add
pop
mov
int
inc
outs
xor
mov
or
push
push
adc
mov
bndstx
sub
cmp
ins
xchg
mov
add
icebp
mov
mov
nop
adc
adc
add
fcmovnb
add
arpl
inc
jo
imul
inc
sbb
daa
sub
push
mov
mov
xor
sub
pusha
xor
cmp
cs
or
cmp
cmp
pop
jne
mov
dec
xchg
sub
push
inc
pop
call
(bad)
pcmpeqb
test
mov
dec
pushf
inc
sbb
aaa
adc
(bad)
xor
mov
jmp
add
pop
test
sub
push
inc
mov
sbb
iret
fsub
lods
inc
jg
out
xchg
ret
or
cdq
btc
jg
movs
adc
adc
popa
add
mov
mov
inc
mov
sub
cmp
cmp
or
stos
and
retf
or
push
in
repnz
jne
je
cmps
mov
cmp
sti
xchg
jmp
ror
imul
sti
scas
dec
mov
push
outs
pop
mov
dec
mov
inc
jo
popa
xchg
loopne
aam
add
daa
jo
adc
bound
dec
aaa
sub
js
test
dec
xor
test
(bad)
repz
or
sbb
rcl
jae
push
movs
xchg
scas
daa
push
pop
fild
push
cmc
push
add
inc
push
test
push
mov
jo
dec
xchg
mov
pop
adc
or
add
test
mov
cmp
push
test
stos
and
daa
pop
pop
ins
jge
inc
das
outs
imul
js
inc
jo
rcl
aad
inc
dec
xchg
sub
sahf
inc
ja
add
ins
ja
(bad)
repz
push
or
sub
lahf
sbb
sbb
stos
sbb
mov
push
jne
jne
inc
ja
jbe
fist
push
xor
stos
sub
mov
cmp
(bad)
xlat
pushf
(bad)
les
imul
inc
outs
sbb
inc
stos
rcl
or
jmp
pop
jno
mov
cmp
or
das
retf
jne
cs
add
or
pop
lahf
add
ret
ret
mov
xor
add
ja
stos
push
xchg
sub
add
jg
bound
fld
sub
and
fimul
stc
mov
cmp
add
mov
stos
and
jb
inc
nop
fwait
add
jmp
jmp
sub
inc
rcl
xchg
daa
mov
inc
addr16
iret
mov
inc
mov
sbb
xor
add
push
and
call
cli
sbb
jbe
add
ror
and
or
push
mov
add
xor
ret
shl
inc
add
lahf
inc
test
popa
xchg
retf
pop
lahf
enter
pop
retf
inc
pop
pop
pop
or
popa
xchg
arpl
stos
xchg
inc
es
retf
outs
inc
pop
push
stos
bound
retf
push
mov
jae
fnstsw
and
sub
inc
push
jl
ins
or
imul
push
test
mov
and
stos
test
arpl
add
add
fwait
imul
arpl
mov
mov
xchg
in
les
push
pop
and
inc
add
dec
das
imul
xor
mov
das
mov
retf
mov
outs
adc
push
ja
dec
inc
mov
jle
fsub
mov
popa
inc
jo
xchg
mov
outs
or
js
inc
mov
(bad)
mov
outs
adc
pop
jno
repnz
mov
adc
jg
inc
pop
arpl
jo
out
xchg
mov
and
adc
add
and
outs
adc
or
addr16
cmp
imul
out
push
add
adc
sbb
push
mov
push
jb
out
loop
mov
por
add
push
pop
imul
bound
stos
outs
stos
aas
rol
out
ror
mov
in
sbb
push
inc
fwait
xor
add
xor
mov
cmp
addr16
inc
mov
cdq
push
inc
xchg
imul
cmp
cmps
mov
pop
ins
cmp
neg
pop
retf
outs
pop
mov
gs
ins
rcr
add
pop
lock
xor
fld
inc
xor
adc
sub
add
pop
shr
imul
mov
xchg
cmp
out
lds
cld
mov
adc
aaa
adc
sbb
sbb
(bad)
inc
(bad)
sbb
mov
xor
outs
addr16
aas
sahf
cli
outs
imul
sub
xlat
sub
dec
or
or
inc
and
retf
jb
sbb
adc
mov
push
shl
sti
adc
mov
jo
dec
sti
jae
cmp
repz
push
and
fild
pop
sbb
dec
fisubr
push
push
je
cs
ja
ud0
or
pop
jecxz
or
and
sbb
xor
push
outs
jmp
scas
loop
daa
popw
jae
loop
mov
mul
jecxz
fild
sub
xchg
xchg
pop
lods
pop
js
mov
add
jb
scas
inc
pop
push
pop
fild
stos
xchg
sub
pop
stos
test
jae
shl
sbb
xor
xor
shl
push
jecxz
adc
mov
scas
out
and
scas
mov
in
ja
in
ret
arpl
arpl
test
mov
xchg
ja
xlat
xor
js
and
rol
jbe
mov
push
out
pop
(bad)
mov
aas
mov
popa
mov
jle
pop
mov
cld
or
sub
push
lds
push
scas
mov
hlt
mov
xchg
imul
in
ret
jge
and
pop
pop
add
sub
adc
in
aas
cmp
sub
mov
(bad)
xchg
js
and
movsx
or
xor
add
mov
call
dec
mov
add
xor
adc
adc
xchg
mov
in
aaa
sub
push
or
aas
mov
fbld
dec
sbb
imul
jecxz
or
dec
xchg
push
fld
inc
jmp
push
xchg
push
in
dec
adc
jnp
ret
cwde
adc
rol
stos
push
sbb
inc
sbb
outs
pop
xor
cmp
sub
fbstp
jb
cmps
add
xchg
jae
das
gs
mov
stos
xchg
mov
dec
out
or
jbe
cmps
outs
shl
jne
pop
dec
sbb
fistp
retf
mov
cmp
mov
imul
rol
lahf
cmps
push
push
(bad)
inc
dec
in
(bad)
das
mov
adc
pop
stos
out
mov
dec
xchg
cs
or
and
je
dec
adc
pop
and
or
mov
pop
pop
cdq
mov
xor
xor
ss
je
xor
sub
mov
fstp
nop
or
test
or
xor
mov
outs
ja
sub
jae
stos
cmp
cmp
sti
scas
mov
mov
movs
push
fbstp
inc
imul
sbb
ja
adc
inc
sub
mov
sbb
mov
adc
dec
(bad)
clc
rol
repz
adc
adc
xchg
dec
pop
inc
mov
pop
xor
adc
push
mov
rcl
push
sub
(bad)
fmul
or
mov
pop
inc
xor
lds
or
jo
sub
pop
or
jmp
pop
pop
imul
or
(bad)
scas
xlat
pop
dec
dec
lds
adc
cmps
dec
add
(bad)
and
mov
inc
push
imul
sbb
(bad)
push
movs
ss
dec
push
xchg
outs
shl
xlat
in
adc
out
mov
and
addr16
sub
arpl
shr
(bad)
repnz
mov
inc
sub
mov
sub
or
fist
mov
mov
inc
shr
mov
push
ins
adc
ds
jbe
jb
cwde
rcl
test
pop
mov
mov
stos
sbb
cmps
out
inc
imul
sub
inc
xor
cmps
jae
mov
sti
push
sub
mov
and
imul
mov
fcmovu
mov
jecxz
xchg
pop
mov
jp
cmc
lock
mov
lahf
jo
adc
push
jecxz
add
loopne
xlat
fimul
push
sbb
mov
mov
mov
xor
mov
ja
pop
push
xlat
mov
fs
adc
pop
pop
pop
sbb
pop
push
xor
inc
or
imul
neg
retf
je
inc
push
and
jmp
sbb
jne
inc
jae
push
lods
ret
jae
mov
call
sbb
mov
pop
pushf
xor
aas
loope
mov
mov
imul
aam
out
cs
stos
sbb
dec
prefetchw
mov
push
pop
adc
sbb
test
push
lahf
adc
jmp
mov
xchg
sub
pop
stos
pop
and
push
jecxz
stos
inc
inc
es
ins
or
mov
aad
sbb
inc
(bad)
jle
cmp
xchg
daa
adc
add
push
or
ret
push
mov
adc
rcr
loopne
sub
maxps
sub
cmps
sub
inc
imul
jnp
pop
daa
ficom
lock
mov
phaddd
sbb
dec
mov
mov
out
cmp
dec
out
dec
popa
sub
adc
fmul
fadd
cmp
fbld
das
daa
jp
rcl
add
adc
adc
movs
mov
arpl
and
ret
inc
ret
mov
dec
popa
iret
pop
movs
push
lods
test
call
lsl
xchg
xchg
mov
mov
add
fsubr
ins
mov
push
dec
pop
add
sub
xlat
inc
addr16
ins
mov
jnp
loop
dec
(bad)
pop
enter
push
mov
xlat
inc
xlat
aaa
or
(bad)
adc
gs
mov
cmp
dec
pop
xchg
adc
inc
adc
add
push
movs
or
and
sub
loope
add
(bad)
mov
xchg
scas
stos
push
mov
movs
outs
popa
or
not
adc
sub
imul
inc
pop
adc
mov
jmp
cdq
pop
sti
(bad)
push
je
ret
inc
or
mov
pop
lahf
mov
pop
(bad)
and
jg
test
xchg
mov
cmp
sub
scas
cwde
mov
popa
jae
mov
iret
imul
push
sbb
stos
stos
sbb
mov
dec
arpl
les
xchg
outs
or
aaa
push
inc
nop
dec
outs
outs
and
scas
jae
xchg
fwait
xchg
ret
cmps
arpl
dec
das
dec
imul
sar
push
mov
or
stos
outs
cmp
push
in
xchg
cmp
add
scas
mov
test
push
outs
mov
inc
pushf
adc
sbb
pop
add
mov
sub
and
fild
iret
je
xlat
or
ins
push
and
jnp
ss
out
mov
lahf
cs
loopne
mov
(bad)
dec
sti
sbb
sbb
jp
and
fdiv
in
data16
dec
xchg
test
dec
xlat
jnp
mov
xor
add
sub
mov
push
push
mov
push
stos
pop
aaa
push
dec
fs
popa
push
sbb
ins
xlat
inc
aaa
jecxz
sbb
sbb
pop
mov
sbb
xchg
sbb
sub
fisubr
push
imul
and
pop
or
imul
(bad)
ins
lods
pusha
outs
retf
out
mov
in
and
or
(bad)
ss
retf
ins
loop
inc
lods
dec
or
xchg
shl
(bad)
call
add
fdiv
in
add
jnp
and
mov
xor
adc
mov
bound
mov
inc
movs
add
ficomp
mov
(bad)
pop
adc
xlat
sub
push
push
popa
push
out
mov
cs
jg
mov
adc
popa
repz
sar
ror
bound
(bad)
sub
outs
adc
fbld
push
and
(bad)
mov
popa
ror
inc
or
loopne
bound
lods
sbb
sub
out
xchg
push
sub
dec
sbb
das
push
outs
jg
push
test
mov
popa
fild
adc
add
(bad)
xor
xor
xor
ins
or
cmps
or
xor
adc
imul
je
sub
mov
(bad)
push
mov
add
push
adc
pop
xchg
mov
mov
popa
jecxz
jbe
push
out
xlat
inc
xchg
jecxz
pop
movs
jo
sub
(bad)
dec
push
dec
jmp
or
dec
pop
mov
pop
or
xor
adc
scas
das
lods
cmp
stos
pop
pop
loopne
cmps
xor
sub
adc
je
and
call
and
xchg
fild
ret
repz
lods
sbb
mov
push
xchg
stos
imul
sub
push
outs
aaa
pop
ret
mov
les
jns
test
dec
stos
adc
pop
or
inc
repnz
dec
aam
add
scas
inc
mov
inc
stos
inc
mov
add
scas
dec
les
shl
push
inc
(bad)
sti
(bad)
mov
adc
xchg
inc
and
mov
xchg
nop
pop
xor
sub
enter
cmp
pop
sbb
pop
cmp
push
fimul
inc
cwde
mov
fisttp
aaa
shr
ja
call
pop
jp
fnsave
inc
sub
jp
popa
push
mov
shl
dec
lods
push
inc
sub
jecxz
es
shr
fisttp
jae
popa
enter
and
das
jmp
add
inc
test
add
sub
mov
xchg
outs
sub
es
push
inc
mov
push
sub
sub
sub
or
or
sub
mov
(bad)
adc
popa
mov
div
jb
gs
daa
(bad)
ret
fimul
jmp
cmp
sbb
daa
iret
mov
inc
xor
cmp
mov
sbb
inc
mov
(bad)
mov
sub
dec
sub
mov
and
and
retf
pop
and
pop
inc
cli
cli
adc
jae
sbb
loopne
es
sbb
or
clc
ret
das
(bad)
shl
xchg
arpl
lods
test
outs
les
test
lods
or
(bad)
loopne
les
inc
(bad)
jbe
mov
je
xchg
mov
adc
mov
and
mov
das
cmp
push
shl
dec
movs
pop
ins
inc
adc
pop
mov
push
popa
jmp
loope
dec
mov
js
arpl
jae
jnp
rcr
pop
mov
aaa
adc
mov
add
jmp
xchg
and
loopne
js
pop
jecxz
xchg
and
xchg
mov
out
push
dec
loop
pop
ins
pop
push
dec
test
dec
mov
loopne
arpl
add
cmp
mov
xchg
add
(bad)
xchg
jbe
fcom
pop
inc
dec
sub
xchg
pop
add
or
sub
jmp
daa
mov
mov
daa
stos
daa
or
inc
not
and
daa
adc
sub
pop
pmulhuw
outs
sbb
dec
rol
mov
and
jmp
push
inc
aaa
or
push
add
(bad)
stos
push
inc
push
pop
test
sti
mov
inc
mov
jae
dec
mov
xchg
add
adc
loopne
pop
popa
sbb
sbb
add
add
push
push
xor
sub
mov
adc
add
repz
mov
fnsave
cld
js
jbe
aaa
inc
adc
add
pop
fmul
arpl
xor
outs
mul
and
fstp
loope
inc
shl
mov
imul
dec
inc
add
dec
pop
dec
outs
arpl
mov
(bad)
fsub
sbb
addr16
mov
or
enter
push
mov
add
xchg
das
into
adc
mov
std
ss
rcr
adc
rol
inc
sets
fidiv
xlat
inc
and
jp
mov
popf
xlat
inc
adc
scas
xor
ret
and
pop
pop
dec
add
and
adc
cs
dec
add
mov
push
xor
repz
mov
push
pop
imul
jne
mov
mov
fbstp
(bad)
dec
dec
loopne
cdq
sbb
les
xor
shr
into
fwait
push
sti
mov
ins
pusha
popa
adc
ins
out
xchg
mov
push
nop
mov
push
(bad)
push
xchg
pop
sbb
(bad)
adc
arpl
pop
pop
fmul
repnz
dec
mov
sbb
sbb
outs
add
fsub
loop
mov
repnz
push
or
sahf
lods
and
adc
pop
and
add
dec
cs
mov
dec
adc
mov
inc
and
cmps
adc
mov
ror
xchg
cmp
add
imul
add
rcr
dec
fs
jne
and
xchg
neg
and
out
test
mov
jmp
in
sub
and
add
and
mov
adc
outs
pop
jl
test
xor
adc
jecxz
dec
add
sbb
dec
loopne
je
outs
(bad)
nop
dec
mov
push
adc
or
inc
pop
jbe
call
outs
mov
mov
jg
jno
or
add
or
(bad)
jge
gs
es
or
mov
jnp
adc
call
es
bndldx
inc
pusha
mov
dec
and
out
xlat
ret
lds
stos
pop
pop
jbe
faddp
push
mov
push
sub
mov
mov
jle
int
inc
(bad)
out
xor
push
dec
adc
xor
dec
loopne
movs
cs
push
(bad)
xchg
pusha
mov
outs
inc
rcr
imul
pop
xchg
push
imul
push
jecxz
and
push
add
pusha
nop
pop
fiadd
xchg
xchg
dec
push
add
or
sbb
add
loopne
push
(bad)
ss
mov
cmp
shr
push
jecxz
sbb
into
mov
adc
add
pop
xor
dec
fdiv
leave
mov
cmp
inc
fdiv
push
push
sub
xchg
pop
inc
mov
jmp
nop
movs
add
sub
rol
adc
daa
nop
add
js
and
xor
mov
add
xor
adc
xor
mov
or
ror
xlat
cmp
pop
jo
nop
cmps
cmp
dec
push
xchg
dec
leave
pop
fisubr
mov
pop
jmp
or
and
sbb
inc
pusha
and
push
or
push
fbld
mov
ficomp
and
das
pop
test
daa
fs
add
sub
push
push
fwait
inc
xchg
jp
ret
cmps
pusha
pusha
aad
inc
jne
mov
xchg
ficomp
and
push
cmps
stos
mov
rcr
and
out
jns
fs
jmp
mov
jg
cmps
or
adc
push
add
(bad)
shl
imul
or
dec
pusha
ret
lea
sub
adc
mov
cmps
fcmovbe
inc
adc
je
xchg
pop
rcl
and
sbb
and
jg
(bad)
or
inc
or
add
inc
xchg
sar
cwde
and
ror
adc
or
cs
xchg
xchg
dec
add
pop
dec
mov
aas
test
fwait
mov
cs
adc
pop
add
daa
pusha
pusha
add
(bad)
dec
fiadd
mov
dec
mov
jge
test
xor
jp
mov
neg
dec
retf
push
loope
cmp
fwait
imul
sub
pop
push
jnp
popa
inc
mov
and
repnz
sbb
stos
sti
scas
mov
jmp
mov
fisub
pop
inc
jae
sub
add
(bad)
xchg
arpl
cmp
or
dec
ret
sub
jp
daa
retf
xor
or
mov
xchg
rol
arpl
sbb
test
jbe
adc
inc
or
inc
xor
cmp
mov
or
cdq
add
or
jbe
push
inc
rol
mov
and
or
mov
xor
retf
xchg
js
or
pop
push
stos
xor
pop
ret
ins
aad
dec
jmp
mov
lock
or
dec
sub
mov
cmp
sbb
add
adc
dec
jne
inc
add
pop
das
xchg
sub
enter
push
add
adc
jbe
xchg
nop
push
stos
pop
sbb
retf
outs
pop
ins
fimul
fmul
aam
sub
jne
adc
daa
and
fwait
add
jecxz
jmp
mov
mov
cmps
loope
jo
outs
jmp
add
pop
or
mov
mov
gs
add
mov
push
add
mov
loope
bound
mov
adc
call
(bad)
jae
inc
xchg
mov
sbb
dec
call
mov
ret
and
add
mov
push
adc
(bad)
outs
adc
das
lds
xchg
cmp
add
adc
and
xchg
stos
jg
fld
adc
sub
push
add
rcr
jae
mov
xchg
adc
imul
push
mov
inc
mov
pop
scas
add
arpl
(bad)
aad
mov
push
dec
or
stos
outs
cmps
adc
ror
add
inc
adc
add
mov
mov
cwde
arpl
les
in
pusha
pop
xlat
sbb
pop
jmp
addr16
push
or
retf
aaa
mov
push
inc
fcmovnb
mov
cmovae
mov
sbb
add
inc
rol
inc
inc
xor
jmp
sbb
or
xlat
dec
add
jbe
jecxz
and
arpl
jnp
push
outs
xor
popa
xlat
mov
rol
add
loopne
ror
and
mov
mov
or
jne
sbb
sub
inc
push
mov
dec
mov
lds
and
mov
sbb
and
lock
mov
pop
jbe
fild
pop
test
call
pop
and
pop
push
xor
pop
ins
sub
(bad)
pop
xchg
pushf
dec
xor
push
push
xchg
add
ret
or
aam
test
adc
popa
shl
xlat
and
mov
popa
ins
cmp
retf
setg
aad
imul
and
push
mov
or
or
push
je
lea
push
mov
sbb
add
pop
arpl
mov
fwait
test
out
xchg
add
enter
jle
mov
(bad)
outs
jnp
add
adc
(bad)
popa
fwait
stos
sub
adc
dec
add
xchg
xchg
mov
pop
mov
mov
and
xchg
add
jae
fs
gs
ficom
loopne
ss
shr
sbb
rcr
jcxz
sub
movs
shr
sub
das
cmps
add
imul
sti
sti
lds
js
xchg
mov
cwde
sbb
sub
retf
popa
fild
mov
jnp
fwait
sub
pop
dec
test
mov
sbb
stos
cli
cmp
ficomp
cmps
sti
xor
and
dec
adc
push
pop
fadd
pop
add
xchg
and
je
mov
dec
dec
adc
imul
test
xor
add
arpl
(bad)
jmp
inc
mov
sub
hlt
add
retf
mov
setnp
rcr
aad
sbb
(bad)
retf
push
jbe
mov
out
popa
popa
les
inc
sbb
or
and
movs
sub
mov
stos
pop
inc
add
xchg
xor
cmp
fcomp
mov
shr
mov
push
mov
or
xchg
sub
and
jg
cmp
inc
lock
aaa
sbb
pop
lds
call
out
sub
das
daa
adc
xchg
pop
repz
popa
mov
jb
inc
test
ficomp
inc
or
mov
push
daa
adc
add
xchg
or
xor
jnp
sbb
pop
lods
push
inc
pushf
ja
jmp
push
inc
ret
push
adc
add
lea
add
pop
nop
mov
out
cs
adc
add
jno
ret
ins
pop
ss
and
fild
and
inc
pop
stos
and
mov
mov
push
and
lds
inc
xor
mov
cmps
xchg
in
lock
outs
or
xor
jo
add
idiv
lock
dec
scas
mov
add
test
cmp
cmc
mov
push
retf
js
add
sub
aaa
jmp
mov
fisubr
pop
push
or
sbb
cmp
ror
and
mov
lods
(bad)
xlat
test
inc
mov
test
dec
adc
gs
test
dec
ja
fimul
cs
lahf
repz
mov
add
jae
push
test
push
cmp
ins
dec
and
add
or
add
fwait
push
popa
inc
mov
and
mov
scas
inc
add
fisttp
sub
loop
push
mov
inc
cmp
add
das
out
je
sbb
xchg
jo
add
dec
jmp
or
daa
xchg
or
jmp
fmul
movs
pop
ins
cmps
inc
sbb
mov
(bad)
ins
jg
imul
xor
fdiv
cmp
push
add
fmul
sub
add
pop
imul
pop
pop
jb
adc
fwait
mov
add
jmp
or
movs
push
mov
repz
addr16
pop
rcl
xor
imul
dec
push
lods
add
xor
mov
sbb
rdtsc
ret
popa
pop
adc
xor
ins
leave
add
(bad)
mov
add
in
jae
arpl
out
xchg
ins
add
xor
or
lods
out
repnz
fs
fstp
adc
pop
inc
sub
mov
adc
jo
pop
ja
daa
(bad)
jmp
daa
push
add
add
arpl
mov
mov
repz
push
mov
dec
mov
jnp
dec
rol
inc
fwait
inc
or
xor
inc
xor
mov
xchg
imul
and
mov
test
mov
sbb
inc
popa
inc
shl
or
or
or
push
push
xchg
and
or
add
pop
les
aad
xchg
sbb
jecxz
add
and
lea
push
sbb
or
mov
(bad)
xlat
push
mov
sbb
ins
mov
dec
pop
jle
and
mov
push
nop
fwait
cmp
adc
sbb
inc
into
lahf
int
lea
xchg
mov
and
aad
(bad)
(bad)
pop
pop
jae
sub
cs
jmp
(bad)
sbb
addr16
or
mov
adc
xchg
test
and
and
imul
add
pop
sahf
push
imul
call
daa
cmp
aaa
adc
xor
dec
imul
fist
ret
and
xor
dec
push
adc
jp
dec
inc
adc
mov
test
pop
inc
fwait
adc
or
test
data16
stos
dec
jmp
rol
ret
adc
adc
leave
sbb
push
and
adc
lea
pop
inc
xchg
cmp
movs
adc
add
push
mov
sub
and
lock
mov
push
jo
jl
cmps
retf
mov
movs
jno
shr
cmps
jnp
or
(bad)
fimul
clc
mov
icebp
cs
dec
xor
movs
or
xchg
mov
sti
xor
enter
ss
arpl
adc
cwde
lea
sub
sbb
cmp
ds
cmp
xchg
push
mov
mov
pushf
je
xor
(bad)
xlat
stos
and
xchg
push
mov
dec
sti
inc
sbb
fisttp
repz
ror
fs
xchg
pop
ins
xchg
push
xor
or
imul
clc
jbe
fild
pop
test
cmps
pop
add
nop
and
xchg
add
adc
jg
sub
in
add
ror
outs
aaa
xchg
cmp
fisubr
fwait
sub
dec
arpl
dec
xchg
mov
push
xchg
jecxz
xchg
xor
scas
mov
jno
mov
les
sub
lea
outs
inc
gs
mov
or
cmp
pop
push
pop
sbb
jg
pop
dec
inc
mov
sub
fucomip
pop
push
cs
aas
das
xor
inc
scas
push
push
test
out
ret
xor
ret
call
and
inc
xchg
iret
retf
and
scas
pop
sbb
inc
das
pop
mov
adc
add
pop
xor
jmp
imul
lds
ins
or
pop
ret
xor
mov
mov
inc
inc
arpl
dec
arpl
pop
pop
mov
stos
and
daa
sub
adc
pop
(bad)
fdivp
mov
shl
outs
xor
and
mov
or
call
xor
pop
popf
cmp
mov
mov
push
pop
mov
ss
dec
ret
mov
pop
idiv
sub
sub
mov
cmps
shl
call
stos
inc
imul
cs
and
inc
cmps
push
jno
pop
fwait
cmp
addr16
push
inc
ja
or
inc
ret
mov
aaa
ss
sub
fisttp
mov
(bad)
test
pop
mov
xor
iret
dec
into
mov
mov
arpl
and
and
inc
adc
mov
pop
jecxz
out
fidivr
pusha
push
(bad)
outs
inc
inc
lods
adc
(bad)
xlat
fistp
dec
add
mov
cmp
mov
sub
ins
(bad)
mov
xchg
pop
cmp
ret
xchg
les
adc
or
inc
push
inc
mov
outs
fisttp
mov
pop
mov
pop
(bad)
cmps
mov
xchg
mov
mov
sub
xor
or
sub
inc
sub
push
dec
aad
or
jmp
fcomp
sub
ins
rol
dec
fistp
mov
dec
ror
dec
xchg
mov
jg
xor
mov
or
movs
data16
and
sahf
into
or
xor
cmp
sbb
dec
arpl
les
mov
add
or
fild
jmp
sub
les
div
inc
test
and
dec
inc
addr16
or
push
mov
mov
push
and
aaa
inc
inc
mov
pop
xchg
mov
inc
arpl
cmp
pop
daa
add
push
jecxz
inc
mov
inc
jbe
push
and
and
sbb
test
inc
and
push
or
xchg
or
jmp
adc
mov
xor
jnp
push
add
and
xor
sub
pop
ret
jecxz
or
adc
mov
adc
fwait
adc
push
add
jecxz
imul
mov
shl
aas
dec
and
sbb
call
adc
push
cmp
movs
mov
add
mov
push
test
inc
arpl
aaa
xchg
scas
movs
add
inc
or
inc
push
js
xchg
and
sub
and
xor
dec
inc
pop
inc
push
shr
pop
and
sbb
add
sbb
pop
and
dec
out
dec
arpl
xchg
xchg
mov
inc
aaa
jmp
inc
sbb
mov
call
mov
jnp
jp
xchg
push
mov
xchg
ret
add
and
push
loopne
out
push
xlat
cmp
push
call
scas
and
aaa
ret
scas
dec
pop
mov
jmp
fisttp
lds
imul
adc
dec
inc
inc
(bad)
arpl
or
sbb
aaa
aaa
mov
cmp
repz
adc
aaa
jae
mov
cs
aaa
fwait
shr
push
pop
lds
xor
fwait
add
sbb
imul
sub
sbb
or
ror
and
xor
dec
sbb
xchg
dec
sub
xor
pop
inc
sbb
push
out
and
xchg
mov
loopne
add
add
sub
inc
adc
xchg
pop
dec
jmp
mov
cs
jecxz
jmp
sub
push
pop
mov
and
adc
je
mov
push
sub
aaa
dec
push
scas
or
cmp
rcl
das
jmp
push
inc
xchg
mov
xchg
jo
dec
cmp
inc
rol
and
jmp
mov
xchg
push
push
dec
xor
outs
pop
out
xor
xchg
adc
xchg
outs
mov
jge
outs
sub
or
or
or
rcl
xor
mov
push
shl
dec
leave
inc
and
and
imul
add
gs
lods
cs
or
and
jmp
add
lods
loopne
cmp
jmp
sub
or
sbb
bound
add
inc
mov
adc
xor
sbb
repz
add
inc
shl
ja
les
pusha
mov
mov
ret
xor
lock
mov
xor
or
sub
mov
dec
repz
sub
inc
push
pop
adc
mov
ss
add
outs
mov
ins
xor
cmps
add
outs
xor
pop
adc
fild
lds
adc
mov
iret
mov
or
and
mov
mov
mov
shl
add
adc
cmps
or
arpl
gs
iret
sub
mov
or
lods
jecxz
add
adc
push
mov
imul
push
test
mov
inc
scas
inc
sub
push
pop
jns
mov
sub
and
sub
mov
pop
xor
adc
dec
add
xor
inc
inc
loope
stos
add
sub
push
pop
xor
mov
jmp
pop
xchg
add
dec
mov
mov
test
add
xor
xlat
daa
cmp
add
add
daa
pop
dec
nop
mov
ins
sbb
retf
dec
add
aam
dec
adc
rol
jae
sbb
jo
aad
jae
jns
xchg
mov
lods
add
(bad)
mov
das
loopne
sub
jg
leave
les
aaa
fs
add
xor
lods
sub
mov
ret
and
aas
cmp
loopne
pop
and
inc
or
inc
out
dec
lock
push
rol
mov
add
and
sub
dec
arpl
les
dec
sub
ins
inc
push
sti
retf
sub
push
mov
inc
push
lahf
jo
push
add
cmp
call
xor
xchg
icebp
(bad)
mov
xchg
or
mov
xor
pop
and
shl
repnz
and
loope
sbb
push
sub
add
fs
popa
pusha
mov
fisttp
sub
je
shl
add
mov
push
cdq
in
jns
jae
pop
push
das
adc
mov
gs
jne
je
arpl
stos
outs
and
jno
test
sbb
sub
pop
mov
add
xor
dec
push
xor
and
inc
xor
or
add
dec
push
xor
outs
inc
dec
sbb
data16
sbb
retf
push
or
or
dec
fild
xor
out
add
inc
xchg
or
add
and
and
imul
bound
push
xchg
dec
and
add
mov
push
lods
mov
and
or
push
mov
adc
nop
add
add
cmp
in
jnp
or
scas
cmp
inc
sub
ret
lahf
push
add
xchg
mov
sti
jmp
or
outs
or
xchg
add
aam
jae
pop
xor
xor
or
cs
dec
push
xchg
push
dec
leave
xor
sub
inc
daa
scas
mov
or
cmps
sbb
xchg
movs
or
push
xlat
push
in
jbe
out
add
rcr
sub
ja
mov
pop
pop
push
add
jmp
lds
call
jecxz
and
mov
sub
xchg
jo
sbb
mov
popa
mov
adc
sub
mov
lds
ret
sbb
pop
dec
sub
call
mov
dec
iret
aas
inc
or
repnz
pusha
dec
push
mov
xor
add
call
imul
and
sub
xor
mov
xchg
fisttp
add
sar
daa
jae
ret
les
pusha
addr16
sbb
outs
je
jmp
sar
pop
inc
add
push
push
xor
adc
push
inc
sub
into
or
sub
and
daa
ret
in
add
jg
push
movs
and
push
sub
rcl
pop
mov
jg
stos
or
push
movs
and
adc
out
addr16
add
sbb
dec
and
mov
inc
adc
imul
mov
mov
in
inc
sub
faddp
div
dec
add
add
sbb
adc
inc
sbb
cmp
lods
fs
add
inc
movs
fbld
cmp
sub
shr
push
or
mov
(bad)
gs
mov
xchg
or
mov
test
outs
je
inc
jns
or
and
jecxz
cdq
add
(bad)
pop
jo
test
sub
pop
pop
xor
and
push
(bad)
adc
mov
cmps
arpl
pop
xchg
push
sar
ds
xor
push
scas
xlat
inc
mov
xlat
push
mov
imul
nop
pop
pop
add
add
inc
add
xchg
xor
sub
jno
dec
jb
bound
push
jecxz
mov
adc
jns
out
inc
(bad)
mov
dec
loope
shl
es
ret
mov
aas
pop
imul
xchg
jl
js
sbb
ret
retf
jb
push
pop
call
imul
and
push
js
je
outs
sbb
rcl
pop
pop
fcom
and
jns
add
pop
cmovg
mov
pop
and
push
bound
pop
daa
jge
pop
(bad)
retf
jmp
outs
jns
push
adc
repz
imul
daa
or
loopne
aaa
imul
jb
xchg
and
push
cmp
das
outs
outs
adc
sub
test
out
das
jo
add
xchg
or
dec
pusha
pop
adc
lahf
push
cs
dec
ins
adc
jecxz
fs
push
adc
jo
jnp
cmp
mov
adc
adc
cmp
jae
sbb
nop
(bad)
shl
mov
pop
sbb
mov
cld
arpl
adc
(bad)
sub
retf
xchg
cmps
sub
mov
cmp
loope
xor
ss
daa
ins
jg
xchg
scas
pop
aaa
jae
jp
xchg
cmp
push
cli
aaa
sbb
(bad)
mov
rcl
loopne
cmp
push
pop
(bad)
sub
jg
movs
adc
dec
or
or
mov
sti
fisttp
push
repnz
outs
sbb
pop
inc
aas
jae
jnp
rol
jae
pop
inc
add
and
or
add
fwait
dec
stos
jmp
imul
xlat
mov
das
fwait
call
out
xchg
add
stos
aaa
pop
pop
(bad)
jo
cmps
sahf
pop
inc
mov
xlat
mov
(bad)
dec
cmps
js
push
add
pop
or
mov
push
rol
pop
jb
(bad)
fisttp
adc
cs
or
add
xchg
pop
and
dec
imul
xchg
das
scas
push
push
or
cmps
mov
arpl
mov
jmp
mov
xchg
loop
iret
imul
dec
push
fcomp
xor
ins
dec
aaa
loopne
pop
cmps
arpl
mov
das
outs
jbe
ss
in
ins
sbb
imul
cwde
mov
cmp
jae
inc
in
push
jae
mov
sub
imul
add
imul
retf
call
xlat
out
rol
push
pop
pop
and
push
or
sub
sbb
ss
push
sub
push
cs
dec
addr16
test
sbb
jp
mov
cld
or
mov
mov
mov
nop
aas
jg
ret
ficomp
iret
xor
fs
dec
mov
iret
adc
mov
out
mov
in
sbb
addr16
or
ret
pop
mov
pause
stos
xor
fisub
mov
mov
sub
and
or
jbe
push
sti
outs
or
cli
test
adc
xchg
daa
ret
pusha
jae
mov
cmp
mov
or
pop
mov
(bad)
add
test
inc
mov
ins
push
out
es
out
test
loopne
or
(bad)
mov
adc
mov
cmp
int3
push
sub
stos
push
xor
xor
out
add
jmp
xor
imul
fimul
and
sbb
popa
ret
cld
aaa
sbb
push
inc
jns
sub
(bad)
mov
pop
mov
stos
and
add
inc
mov
cmp
mov
or
scas
sub
rcl
ja
lock
pop
(bad)
loopne
ja
or
adc
imul
shl
sti
push
mov
xchg
addr16
or
pushf
cdq
push
jno
add
pop
inc
icebp
sbb
xor
mov
jo
push
dec
aas
and
inc
lea
push
imul
scas
arpl
ret
ret
dec
inc
repz
xor
pop
inc
xor
inc
out
pop
lahf
pop
cmp
adc
push
xchg
xchg
cmps
dec
xchg
adc
(bad)
cld
loop
sahf
push
jmp
inc
jns
movs
inc
adc
xchg
and
aam
pop
mov
and
mov
xchg
adc
or
iret
and
mov
imul
push
mov
pop
add
arpl
mov
push
sub
pop
cmp
mov
or
lahf
imul
mov
or
sbb
add
mov
or
pop
arpl
push
aas
mov
cs
mov
xchg
dec
imul
xor
mov
or
fistp
cmp
push
inc
push
pop
inc
jnp
sbb
mov
pop
jo
mov
popf
fisub
cmp
mov
arpl
in
pop
sub
push
pusha
bound
mov
inc
(bad)
outs
and
adc
shl
fs
sbb
aad
or
inc
(bad)
test
jmp
les
(bad)
dec
add
fbld
xchg
movs
mov
jle
das
popa
rcl
addps
dec
push
lock
dec
and
and
clc
add
ja
in
cmps
div
stos
push
adc
imul
mov
pop
fcom
adc
mov
pop
jns
mov
nop
out
and
mov
add
pop
daa
jge
jmp
mov
jge
jns
scas
pop
(bad)
or
mov
outs
cmc
push
add
aas
outs
sub
jp
outs
scas
jno
pop
out
xchg
sbb
sbb
aaa
ins
pop
push
add
repz
mov
in
fistp
jne
sti
push
xchg
adc
and
nop
adc
xor
push
shl
xor
add
rol
test
mov
das
imul
rcr
psllq
mov
xchg
push
push
add
add
outs
mov
mov
inc
shr
push
dec
push
imul
ins
jl
pushf
xchg
into
inc
sub
push
add
adc
outs
popa
mov
pop
fistp
push
xchg
je
jo
sbb
xchg
mov
cmovnp
inc
jne
jp
sub
dec
xchg
(bad)
test
push
mov
mov
xor
mov
xor
iret
popa
xor
fmul
jecxz
or
sub
pop
adc
inc
fwait
pop
mov
fwait
add
or
aam
outs
imul
or
test
pop
jo
inc
inc
inc
rcl
loopne
adc
inc
or
test
add
sbb
adc
cdq
dec
xchg
pop
pop
inc
mov
add
or
jns
push
inc
cli
dec
inc
add
mov
ret
push
mov
push
push
adc
loop
daa
add
jmp
push
push
jnp
add
inc
call
or
jns
popa
les
inc
pop
xchg
arpl
sub
add
imul
xchg
jo
pop
popa
fld
fild
jnp
(bad)
mov
repnz
ror
add
outs
add
sub
test
jecxz
setb
mov
push
pop
add
aaa
jp
lods
adc
shr
push
les
push
pop
repnz
or
pusha
mov
sti
pop
push
inc
repz
popa
adc
out
sbb
lods
(bad)
(bad)
inc
adc
test
loopne
push
lahf
xor
or
inc
es
mov
aas
ja
pusha
mov
loop
repz
ret
xor
iret
jl
daa
movs
adc
fbld
xchg
jo
mul
loopne
lock
push
(bad)
ss
(bad)
sbb
in
cmps
mov
cmps
or
jne
cmp
mov
push
inc
cmps
add
ja
out
xchg
outs
inc
and
out
push
loop
out
aas
sbb
jne
cmps
jo
out
inc
loope
add
pop
adc
(bad)
in
or
push
mov
arpl
ins
pop
das
mov
xor
cmps
push
push
in
push
pop
cli
sub
pop
add
dec
ret
or
std
les
sub
addr16
jno
scas
jns
ins
mov
dec
push
mov
ds
daa
push
pop
pop
jmp
test
aaa
pop
xlat
ror
or
push
mov
ror
sysret
sbb
pop
add
outs
gs
pop
test
jb
pop
mov
cmps
sub
and
popa
push
pop
pop
stos
pop
iret
repnz
cmps
mov
bound
sub
repz
and
or
mov
(bad)
(bad)
nop
ret
sub
ror
jae
and
push
cs
add
sbb
dec
xchg
and
stos
sahf
gs
sbb
lock
push
cmp
push
scas
cwde
pusha
aaa
test
add
outs
jl
push
push
pop
sub
pusha
jno
cmps
iret
or
stos
out
xor
add
and
sub
pop
cmps
dec
mov
add
loope
or
push
shl
xor
lahf
pop
sar
repz
mov
shl
outs
mov
(bad)
xor
mov
mov
jp
icebp
mov
mov
mov
or
imul
push
pop
mov
sub
into
dec
shr
push
mov
jp
cli
jnp
addr16
pusha
(bad)
sti
fcmovu
adc
addr16
dec
ret
jns
xor
mov
and
lock
dec
imul
test
bound
ja
aaa
mov
mov
or
jns
cmp
or
jo
pop
dec
leave
xor
das
fcom
sbb
xor
fwait
mov
adc
sti
ins
push
and
shl
es
mov
jmp
mov
mov
aas
scas
daa
push
push
dec
sbb
cmps
dec
xlat
inc
and
daa
imul
fisubr
iret
inc
outs
cmps
outs
test
push
shr
scas
mov
xsavec
cmps
xchg
jecxz
add
sbb
ret
or
repz
jl
dec
push
addr16
jl
outs
adc
dec
outs
jb
ror
cdq
out
pop
sub
mov
retf
push
call
call
adc
out
and
popa
(bad)
push
dec
jns
ficom
dec
adc
loope
cs
ret
scas
dec
movs
test
jecxz
jbe
rol
dec
je
mov
mov
adc
jne
lds
sub
fbld
push
inc
pop
or
push
daa
dec
inc
mov
imul
add
je
xchg
neg
(bad)
and
dec
pushf
sbb
xchg
scas
ja
nop
pusha
dec
outs
jo
(bad)
push
test
fwait
movs
enter
push
icebp
lods
shl
jne
jcxz
jnp
retf
bound
scas
and
fidivr
xchg
dec
sar
ret
mov
out
das
(bad)
iret
js
add
mov
adc
sar
inc
mov
or
adc
sbb
imul
test
dec
ret
push
jecxz
inc
test
mov
cmps
ror
sbb
adc
mov
push
sub
xchg
ds
push
sub
sub
sub
adc
ret
mov
sbb
cmp
push
adc
dec
inc
or
pop
add
mov
call
jnp
test
call
loopne
scas
jmp
repz
xlat
push
mov
repz
adc
test
add
shr
rcl
add
loope
aaa
dec
bnd
xchg
mov
adc
jae
pop
xor
fidiv
ja
add
call
jne
or
adc
mov
pop
pop
ss
test
scas
(bad)
arpl
mov
jae
mov
jmp
ins
push
jge
addr16
ret
ins
push
adc
push
jp
mov
jp
fdiv
push
push
pop
icebp
jno
inc
xchg
(bad)
jnp
jle
stos
push
sti
fimul
ror
shl
lock
outs
(bad)
and
mov
es
shr
pop
repz
push
dec
imul
add
or
imul
imul
jge
and
cld
or
add
push
jnp
iret
sbb
clc
or
daa
cwde
push
fcomp
jae
mov
arpl
pop
mov
mov
mov
xchg
lods
xchg
add
add
call
call
mov
sbb
add
fisubr
arpl
stos
and
test
sub
imul
push
sbb
outs
pop
scas
pop
add
add
test
daa
inc
aas
jo
lea
mov
mov
sbb
xchg
push
mov
dec
inc
dec
cmp
shl
push
aaa
sub
pop
(bad)
sub
rol
aas
pop
cwde
pusha
(bad)
push
popa
xor
pop
dec
push
or
adc
mov
arpl
pop
or
sahf
icebp
call
xchg
sahf
dec
xor
(bad)
jecxz
(bad)
adc
repz
and
fcomp
xor
repz
fs
lds
dec
(bad)
jnp
sbb
retf
xor
push
ins
push
(bad)
xor
(bad)
shl
lahf
add
inc
add
(bad)
push
push
imul
pusha
adc
aam
das
call
out
or
call
adc
rol
pop
add
ret
or
fbstp
xor
and
shl
adc
or
or
xor
sub
rol
out
jnp
and
push
movs
daa
push
inc
sbb
out
add
add
shl
(bad)
shl
fisubr
or
sub
xor
cwde
push
mov
lea
outs
(bad)
dec
in
pusha
adc
addr16
push
pop
pop
inc
bound
popa
fild
inc
and
or
adc
dec
pop
dec
inc
jecxz
push
mov
ds
add
mov
sub
or
sbb
fcomi
or
ret
sbb
jg
push
shl
add
and
(bad)
cmp
test
add
sbb
and
outs
ret
cmp
adc
add
das
out
imul
imul
imul
or
pop
xor
adc
dec
sub
call
fstp
and
xor
add
adc
stos
adc
mov
nop
or
arpl
and
adc
jnp
xor
inc
push
and
fwait
adc
dec
pop
push
xor
dec
mov
or
add
inc
and
in
test
push
pop
xor
ins
test
push
jmp
retf
rcl
cmp
ret
mov
or
arpl
push
or
xor
jnp
mov
scas
add
jecxz
jmp
inc
push
xchg
icebp
dec
(bad)
jecxz
jnp
sub
push
or
adc
jg
inc
add
push
ret
rcr
fadd
popa
add
fwait
and
out
xchg
inc
or
push
repz
add
ss
(bad)
cmps
adc
sbb
es
push
cs
into
pop
pusha
aas
stos
adc
xor
add
outs
mov
retf
cmps
mov
enter
sbb
xlat
and
dec
cmp
in
aaa
inc
lahf
js
or
inc
sub
aas
adc
adc
or
adc
ret
sbb
add
and
mov
sbb
mov
sbb
jae
add
mov
dec
pop
jae
dec
cmp
not
jae
enter
arpl
pop
sbb
xor
fwait
xor
mov
or
pop
(bad)
adc
add
out
pop
outs
dec
push
add
push
xchg
xor
sbb
pop
or
cmc
test
dec
jmp
shr
les
fucomip
adc
push
daa
aas
and
imul
imul
shl
aaa
xor
xor
or
mov
jmp
cs
ja
test
inc
xchg
scas
add
push
mov
push
imul
cmp
dec
sbb
push
xor
xor
movs
inc
add
or
cmp
lock
cmp
fbstp
xlat
arpl
sub
mov
xchg
mov
jno
sbb
(bad)
jg
push
mov
bound
cmps
leave
adc
enter
push
xchg
test
xchg
adc
stos
loop
pop
mov
fadd
clc
pop
pop
inc
adc
add
sbb
xlat
test
dec
xchg
mov
mov
ret
movq
cmp
pusha
dec
aaa
cs
or
cwde
or
sub
nop
mov
lods
fst
dec
out
ret
sub
fwait
neg
push
daa
xlat
ja
(bad)
and
daa
iret
xor
sbb
cmp
or
xor
jbe
push
push
and
fwait
sbb
lock
out
fild
cmps
jo
push
cmp
jmp
ret
loop
mov
push
sbb
shl
lahf
mov
mov
pop
adc
adc
(bad)
xor
ins
ja
pop
cmp
daa
add
sbb
xchg
les
pop
jp
adc
dec
fist
pop
iret
cmp
cmp
test
sbb
inc
sub
push
imul
ficom
mov
push
and
fistp
inc
out
xor
sub
out
mov
add
pop
or
out
retf
cs
movs
sbb
jo
xlat
dec
sub
adc
adc
push
dec
push
call
mov
push
(bad)
adc
mov
(bad)
or
cmps
inc
mov
arpl
sbb
rol
xor
mov
sub
sti
mov
xchg
xor
or
ret
xchg
scas
mov
xchg
inc
shr
and
dec
pop
clc
mov
and
fistp
jg
or
sub
cmp
cmp
scas
xchg
dec
or
xor
xor
and
sub
pusha
shl
scas
pop
(bad)
fsubr
ins
das
sub
cmp
sub
adc
sub
sbb
cmp
sbb
popa
xor
inc
iret
shl
stos
sbb
fisub
mov
(bad)
inc
cmp
test
pusha
jne
fcomp
push
ja
sbb
out
outs
ja
sub
sub
xchg
clc
sub
retf
loope
fstp
inc
pop
aaa
or
adc
cmp
inc
test
xor
sar
pop
idiv
call
aas
outs
les
jo
cmp
push
aas
push
mov
fwait
scas
push
xor
inc
arpl
pop
mov
(bad)
fst
dec
dec
and
xchg
mov
cmp
inc
inc
loop
jo
lahf
dec
pop
cmp
ss
or
and
dec
rol
xor
adc
retf
jecxz
sbb
pop
xor
push
adc
or
cs
adc
cmp
cmp
in
jo
ja
mov
fbstp
retf
xor
jnp
xlat
(bad)
ficom
lahf
inc
mov
fcom
shl
cmps
sub
movs
dec
cmps
dec
sbb
aas
neg
ret
fld
jbe
mov
xchg
sub
mov
xchg
push
call
cmps
jmp
fcomp
jno
pop
into
stos
pop
adc
idiv
(bad)
mov
cmps
sti
jmp
inc
adc
sbb
cmp
sysret
jl
sub
pop
inc
jae
ret
popa
push
push
mov
or
adc
sbb
mov
inc
or
ja
arpl
adc
or
mov
xor
iret
push
adc
inc
add
stos
jecxz
inc
ret
mov
gs
imul
sbb
jmp
repz
dec
in
aas
pop
xchg
or
adc
test
xchg
not
jmp
mov
xor
pop
or
and
xchg
jle
mov
or
push
aaa
or
and
addr16
pop
mov
sbb
gs
ret
outs
sub
and
or
out
scas
add
inc
rol
pop
xor
and
fdivr
jg
fbstp
mov
cmps
xor
jle
out
ins
add
inc
inc
push
mov
mov
inc
pop
sub
dec
adc
cmp
das
jbe
mov
jp
xchg
mov
xchg
ret
arpl
fild
add
out
iret
test
jb
push
int3
dec
comiss
xor
sub
arpl
mov
inc
(bad)
mov
mov
push
aaa
jp
dec
push
fwait
add
mov
cmps
aas
movd
shr
inc
scas
ja
in
loopne
sub
int3
outs
inc
rcr
cli
bnd
jo
mov
xchg
adc
jb
daa
inc
mov
dec
push
ja
and
xchg
int3
div
xor
lahf
jle
ret
sub
pop
ret
mov
aas
inc
pop
inc
sbb
(bad)
mov
dec
cmp
adc
loop
daa
inc
mov
inc
pop
mov
xor
sub
pusha
or
pop
ja
pmaxsw
imul
call
cmp
or
xchg
inc
arpl
pop
push
ja
pop
sub
adc
mov
jns
ja
jmp
push
test
mov
ss
cmp
inc
cmps
daa
arpl
repz
sub
out
xor
daa
sub
cmp
xor
rdtsc
or
pusha
lds
jnp
sub
inc
cmp
sub
xchg
jnp
jle
fimul
xor
xor
jmp
pop
push
jns
sub
rol
mov
pop
inc
sbb
mov
stos
push
adc
sysret
lahf
daa
and
pop
popf
adc
pop
xchg
and
sub
loopne
in
fcom
mov
out
cwde
mov
adc
cmp
xchg
sub
bound
push
jmp
jo
lods
push
fcmovne
cmp
inc
or
loopne
out
inc
pop
jns
mov
mov
xor
inc
js
inc
jg
sub
sbb
test
xlat
inc
push
das
jbe
icebp
shr
inc
mov
ret
int3
mov
inc
xor
push
adc
cmps
add
jae
inc
mov
xor
pop
das
or
jbe
out
jmp
fwait
popa
stc
xchg
dec
pop
push
mov
iret
mov
call
pop
call
das
aaa
sub
movs
stos
aad
mov
inc
popa
lds
lahf
repz
mov
dec
daa
lahf
xchg
das
sub
cmps
xor
sbb
cs
imul
sbb
or
outs
or
mov
pop
add
int3
daa
arpl
mov
xor
mov
cmp
xor
jmp
hlt
dec
dec
(bad)
stos
mov
movs
pop
icebp
xor
stos
mov
pop
addr16
mov
repz
pop
fld
out
sbb
xor
add
je
inc
out
aas
mov
aas
sub
push
sbb
dec
cmps
ins
leave
test
xchg
lsl
dec
xor
add
or
dec
jae
sub
addr16
fsubr
cmp
dec
fiadd
mov
inc
jb
test
jnp
fistp
or
lock
femms
aaa
imul
test
or
mov
mov
repz
add
push
lods
out
repz
retf
or
inc
imul
jae
xor
push
adc
cs
inc
aas
aaa
mov
inc
imul
inc
mov
pop
push
xchg
movs
in
lea
push
iret
loop
inc
adc
mov
sub
icebp
loope
leave
pop
push
xchg
adc
ret
mul
call
adc
pop
xchg
mov
push
inc
inc
fiadd
jg
sub
jae
das
pop
cwde
cmp
mov
push
xchg
(bad)
pop
mov
lods
mov
pop
xor
add
dec
add
xchg
sbb
cmp
imul
ffree
jne
cmp
iret
and
in
test
jmp
and
inc
inc
inc
pop
jne
or
or
add
inc
test
enter
mov
ss
and
enter
pop
xchg
loope
jo
pop
add
(bad)
sub
stos
das
(bad)
cmp
leave
xchg
sbb
cmp
sub
popf
ds
aaa
push
xchg
or
aaa
mov
xchg
push
pop
jmp
enter
mov
inc
inc
inc
mov
jne
ret
adc
sub
mov
or
mov
push
sub
rol
fistp
mov
ficomp
pop
test
and
sub
inc
push
fadd
xlat
lea
sbb
cmp
sar
arpl
and
mov
imul
sti
mov
mov
ja
clc
pop
xor
mov
sub
dec
jp
mov
mov
retf
jmp
dec
les
cli
scas
imul
fisttp
dec
xor
xchg
mov
cmp
pop
mov
pop
pop
sahf
ret
iret
jp
cmp
adc
xchg
xchg
pop
daa
push
xor
pop
neg
push
adc
mov
pop
add
ror
test
jecxz
mov
jle
cmp
mov
mov
cs
xchg
shl
xor
xor
arpl
ret
pusha
inc
xor
pop
mov
and
sub
cmc
adc
adc
iret
outs
inc
lods
sbb
pop
jg
mov
pop
daa
es
sub
rol
(bad)
shl
xor
bound
test
dec
mov
(bad)
stos
inc
sub
dec
mov
sbb
push
aas
jbe
imul
dec
dec
xor
sub
ror
jg
mov
dec
sbb
daa
movs
(bad)
or
add
aaa
popa
mov
imul
and
cwde
sbb
sti
stos
mov
mov
shl
add
sub
sar
sub
jnp
and
dec
xchg
int3
ins
(bad)
daa
xchg
sub
add
mov
aaa
adc
out
inc
movs
push
pop
adc
pusha
xor
sbb
imul
shl
inc
pop
ret
or
aaa
adc
xchg
sti
scas
or
lds
dec
inc
mov
sub
stos
adc
test
or
add
dec
add
cmp
push
adc
add
xor
dec
push
add
out
sbb
das
xchg
inc
add
mov
sub
jl
push
pop
pop
pop
add
xor
int3
fbstp
into
xor
lea
ins
inc
cmp
xor
rol
sub
or
inc
add
add
leave
popa
jb
xchg
pop
fisttp
leave
cmp
maxps
aad
repz
retf
sbb
mov
in
aaa
adc
or
call
add
xchg
outs
cdq
push
js
or
daa
inc
maxps
mov
pop
jne
push
inc
call
mov
xor
rcl
push
mov
jle
xor
push
gs
ficomp
nop
fs
nop
pusha
push
out
sub
jle
jno
gs
arpl
repnz
add
xchg
stc
(bad)
adc
xor
sub
nop
cmp
and
and
stc
data16
out
inc
call
ds
pop
add
mov
test
maxps
inc
push
mov
or
xchg
out
movs
jns
lahf
leave
popa
jb
fcom
or
(bad)
cmps
retf
dec
sub
xor
nop
cld
pop
mov
(bad)
mov
sub
mov
(bad)
adc
and
out
or
popf
xchg
retf
mov
push
das
ss
cmp
cmp
inc
push
ss
sub
int3
mov
(bad)
jmp
dec
pop
cdq
sub
push
push
jge
jae
leave
jmp
(bad)
aad
(bad)
mov
mov
sti
jl
jge
mov
cs
pop
adc
dec
add
cli
and
adc
aaa
pop
sub
or
pusha
push
enter
sbb
pop
ins
in
xor
jae
or
pop
and
fld
pop
cwde
sahf
and
nop
outs
adc
add
stos
pop
push
(bad)
js
and
pop
or
xchg
push
call
and
or
(bad)
jg
mov
or
push
push
cmp
mov
cmp
xlat
push
inc
push
sub
(bad)
and
(bad)
dec
(bad)
jl
mov
xor
dec
sub
inc
xchg
adc
push
pop
repnz
sub
xchg
cs
pop
cmp
stos
(bad)
xchg
dec
cmp
xor
add
mov
dec
jb
pushf
call
cmp
retf
jo
repnz
pop
jnp
add
or
dec
jb
adc
mov
xchg
or
cld
cld
jns
inc
jge
pop
sahf
pop
sti
xchg
or
pushf
(bad)
mov
mov
adc
in
or
jmp
loopne
mov
mov
add
ror
sub
xor
bound
push
out
loop
(bad)
mov
pop
daa
leave
and
pop
sub
(bad)
add
push
movs
or
cmp
add
push
mov
mov
push
add
inc
fiadd
mov
xchg
sahf
pop
mov
cs
dec
lahf
push
retf
pop
pop
scas
mov
addr16
or
sub
and
mov
xchg
add
scas
pop
repnz
jge
push
and
in
inc
leave
inc
js
(bad)
fst
add
push
ret
test
inc
inc
ins
mov
mov
es
idiv
or
dec
outs
sbb
retf
imul
(bad)
mov
out
icebp
xchg
outs
cmps
std
sub
adc
scas
xchg
add
mov
mov
xchg
leave
mov
inc
xor
mov
push
sub
sbb
inc
outs
scas
(bad)
(bad)
xor
push
imul
xor
or
xchg
or
imul
dec
fwait
mov
push
pop
pop
or
xchg
dec
pop
xchg
dec
jmp
dec
int3
dec
push
and
sbb
push
inc
add
in
and
mov
and
dec
or
je
push
cmp
inc
or
mov
inc
repnz
add
mov
cmp
dec
imul
push
sbb
sbb
stos
sub
adc
leave
adc
sbb
push
add
or
sbb
sub
cmp
jl
and
inc
dec
mov
iret
push
xor
loopne
jo
push
inc
into
xor
adc
ret
in
push
shl
(bad)
xchg
ins
movs
rol
cmps
mov
cmp
call
daa
pusha
jecxz
inc
mov
dec
xor
xor
push
pop
xchg
pop
sbb
ins
scas
inc
es
test
outs
addr16
out
sbb
mov
xchg
sub
xor
adc
ds
lahf
push
jb
lea
test
xchg
lods
outs
mov
shl
inc
mov
inc
cmp
add
aaa
daa
ja
adc
jmp
xchg
imul
add
or
stos
iret
scas
retf
js
xchg
pop
xchg
dec
dec
xor
inc
or
scas
mov
push
cmps
xor
aas
jne
or
xchg
(bad)
xor
idiv
xor
rcl
mov
ss
sbb
fwait
jbe
push
cwde
inc
fist
fdivr
cmp
stos
cmp
sbb
xor
sbb
rcl
add
es
push
push
(bad)
call
dec
mov
inc
add
cmp
nop
mov
cmp
loopne
scas
movs
adc
sub
pop
cdq
in
inc
fcom
jno
popa
cmp
inc
(bad)
sub
addr16
inc
pusha
arpl
fstp
xchg
or
push
ja
inc
or
call
jmp
or
cmp
adc
jmp
retf
out
and
push
inc
inc
jb
imul
jnp
bound
push
adc
mov
leave
imul
push
pop
into
cmps
nop
mov
xor
arpl
mov
or
dec
arpl
shr
retf
call
mov
jno
aaa
dec
push
arpl
jg
dec
aaa
sbb
pop
push
out
lds
push
ja
lods
sub
inc
xchg
inc
xor
push
or
imul
pop
ror
sti
outs
scas
add
push
xlat
ds
push
push
jmp
(bad)
jo
add
fisubr
pusha
sub
mov
cmp
sbb
jecxz
(bad)
mov
inc
pop
inc
mov
das
jl
dec
pop
push
in
mov
push
cmp
xchg
push
push
push
test
or
mov
mov
push
(bad)
ficom
or
xor
cmp
mov
neg
push
scas
cmp
imul
xor
dec
scas
cmp
cmps
(bad)
mov
movs
sbb
aaa
xchg
ss
cmp
push
jg
loopne
icebp
(bad)
out
aaa
lea
adc
mov
or
xchg
jmp
sti
push
or
pusha
push
push
pop
sti
adc
xor
dec
jp
nop
movs
dec
fwait
loop
fisub
xchg
mov
pop
push
mov
outs
adc
or
sbb
cmps
push
daa
jnp
aam
shr
mov
ja
mov
adc
icebp
push
sahf
cli
sbb
inc
out
jae
sub
fdivr
xchg
pop
neg
test
xchg
push
mov
das
dec
adc
inc
mov
sbb
fcomp
adc
dec
nop
or
imul
stos
dec
add
pusha
outs
push
sbb
add
ins
adc
push
jecxz
sub
xor
adc
push
lahf
data16
or
jnp
xchg
or
pusha
mov
and
push
in
fsub
ds
add
retf
movs
es
adc
sbb
lods
dec
add
mov
add
pop
add
mov
push
jae
xlat
push
and
dec
pop
adc
or
inc
fwait
ds
push
test
fisttp
inc
rcl
xor
xchg
add
and
xor
push
add
adc
push
lds
push
sbb
ins
or
dec
dec
inc
retf
xor
push
push
mov
or
inc
mov
jecxz
(bad)
dec
mov
jecxz
cmp
dec
mov
push
outs
xor
ja
ss
dec
je
movs
xor
sbb
inc
pop
ja
jnp
aam
add
xchg
leave
aam
arpl
inc
push
adc
push
repz
pusha
arpl
jo
pop
es
push
jmp
fstp
and
aaa
les
sbb
leave
push
out
imul
push
out
lods
jmp
rol
mov
jb
pusha
mov
ret
aaa
ss
addr16
jecxz
fiadd
mov
push
add
cmp
xor
iret
xchg
inc
dec
push
fadd
cmps
cmps
sub
push
mov
aad
adc
rcr
push
xchg
xor
scas
push
xchg
and
imul
fdivr
xchg
stos
jo
and
inc
inc
push
or
and
pop
mov
xchg
dec
xchg
dec
xchg
xchg
les
(bad)
addr16
rcr
push
pop
outs
sub
fs
ins
add
jmp
jmp
ja
push
sub
push
addr16
outs
xlat
push
ret
push
inc
loopne
sbb
lods
(bad)
in
adc
enter
push
fcmovnu
fwait
dec
cmovnp
fwait
or
out
add
or
fistp
and
adc
jne
xchg
(bad)
(bad)
outs
fs
push
sub
mov
xchg
adc
(bad)
push
fist
int
(bad)
aad
mov
imul
test
ss
or
mov
sub
add
inc
ja
gs
jmp
mov
rcr
arpl
push
sbb
sub
lods
push
jo
aaa
adc
xor
enter
and
mov
call
into
xor
mov
(bad)
stos
scas
stos
adc
or
mov
ins
sub
addr16
ja
sar
push
inc
das
outs
fdiv
fcomip
pop
jae
neg
sar
cs
dec
sub
cmp
xchg
cmp
aaa
or
and
jecxz
aaa
popf
adc
add
mov
pop
and
fisub
jne
push
or
dec
cmps
dec
pop
xor
dec
pop
jae
inc
out
adc
ja
push
fimul
movs
mov
cmps
sub
dec
jge
je
push
(bad)
loope
out
loop
cmps
mov
sub
bound
jmp
and
mov
imul
inc
test
mov
dec
inc
imul
mov
mov
xor
(bad)
fist
jmp
retf
adc
(bad)
cmp
xor
imul
or
lahf
aas
dec
add
jmp
sub
and
mov
(bad)
jecxz
ror
add
sbb
imul
mov
lods
bt
and
push
sub
sahf
mov
pop
jo
pop
mov
sbb
loope
xor
inc
fild
das
(bad)
cmc
push
mov
pop
push
lds
add
inc
or
push
stos
inc
fwait
movs
or
int3
pop
dec
mov
xor
push
jno
js
out
mul
sti
mov
outs
arpl
jb
jnp
loope
dec
mov
inc
sbb
(bad)
out
repz
dec
js
stos
outs
clc
fucom
jae
sar
push
jne
shl
in
sub
jmp
pusha
add
addr16
push
in
in
inc
imul
jne
loope
loopne
cmp
cli
loope
fwait
pop
inc
adc
out
push
sub
jbe
lods
repz
lahf
mov
inc
test
add
or
fcmovb
jae
popa
outs
pop
pop
inc
fdiv
aaa
pop
push
lds
jmp
stos
fsub
inc
xor
mov
stos
rcl
imul
pop
xchg
adc
mov
je
sbb
adc
jns
xor
adc
out
dec
inc
rol
jbe
cmp
xchg
mov
push
or
(bad)
addps
pop
outs
scas
shr
test
adc
jae
fisubr
xlat
adc
popa
stos
cmps
sti
mov
enter
mov
jnp
xor
adc
xor
sub
jbe
sbb
outs
add
pop
lods
mov
shl
push
adc
inc
jo
pop
mov
jae
(bad)
mov
ins
jo
out
adc
out
inc
sub
bound
(bad)
bound
cmp
js
lods
sbb
pop
xchg
es
scas
mov
jmp
fisttp
and
out
push
sub
cmps
cmps
imul
or
jno
test
dec
pop
cs
fwait
jmp
inc
bound
mov
jg
add
rol
pusha
ins
movs
or
mov
or
xlat
or
loop
mov
jmp
add
push
push
push
mov
leave
cmp
test
inc
ror
mov
jg
ss
std
mov
(bad)
push
pusha
mov
cs
or
and
aaa
ffree
and
mov
ret
pop
dec
mov
pop
push
xlat
daa
push
cwde
or
js
retf
inc
je
and
stos
xor
cmp
adc
push
inc
jnp
add
or
sub
mov
pusha
xlat
je
dec
repz
ja
outs
pusha
cli
xchg
or
movs
push
shl
inc
cmp
dec
sbb
clc
ja
stos
lea
in
and
add
mov
repnz
movs
ss
(bad)
mov
sub
pop
xchg
cmp
push
jecxz
pusha
inc
addr16
jge
sub
jmp
fild
ins
pop
mov
inc
adc
imul
call
in
push
mov
shr
adc
outs
pop
sti
or
sub
or
xlat
imul
loop
dec
dec
retf
loopne
jne
js
movs
les
(bad)
aas
adc
push
ret
arpl
loope
call
movs
jmp
or
fstp
jno
les
pop
les
adc
addr16
xchg
sub
arpl
xchg
or
adc
sbb
xlat
inc
in
inc
pop
sbb
out
je
pop
in
jmp
shl
aaa
out
pop
sub
add
xchg
add
cmp
push
std
jmp
xchg
jo
jg
xchg
das
mov
cmp
cwde
(bad)
sbb
arpl
and
fwait
adc
pop
sbb
sti
mov
sub
pop
mov
dec
ins
adc
adc
mov
nop
inc
inc
xchg
sbb
sub
das
out
nop
mov
lahf
pop
jbe
push
inc
mov
push
arpl
pop
inc
ds
xor
and
or
aaa
(bad)
push
cmps
movs
aad
add
js
dec
pop
aas
cmp
fbld
add
call
push
loopne
adc
outs
adc
pop
add
mov
inc
and
ret
mov
cmovo
mov
cmps
xor
xchg
loopne
out
fistp
push
ins
or
mov
push
and
dec
mov
fimul
inc
xor
mov
cwde
mov
add
pop
aas
adc
pop
xchg
sbb
repnz
ss
push
pop
std
inc
(bad)
jmp
and
or
sbb
sbb
mov
mov
lods
mov
je
pop
gs
push
cwde
jge
cmp
add
pop
and
enter
fiadd
push
shl
imul
fwait
cmps
jne
loop
dec
xor
mov
popf
(bad)
push
outs
bound
jbe
int3
mov
cmps
std
out
loopne
(bad)
iret
outs
push
pop
je
mov
not
nop
cmp
jle
imul
push
icebp
call
xchg
cmp
push
fs
dec
add
popa
mov
neg
mov
adc
sbb
adc
push
lods
add
pop
daa
adc
dec
add
mov
das
xchg
xchg
jbe
adc
mov
mov
push
pop
dec
fisttp
mov
jnp
mov
popa
mov
bswap
sub
push
(bad)
adc
inc
loope
adc
shr
jns
sub
pusha
jo
mul
adc
sub
or
mov
fcmovnbe
mov
iret
fbld
add
sub
dec
cmp
jo
push
lock
jmp
and
inc
bound
retf
xchg
push
in
(bad)
inc
stos
push
or
pop
sbb
in
xchg
xor
inc
pop
sbb
add
je
mov
and
dec
sbb
dec
jo
jg
and
jo
push
dec
jbe
dec
sbb
gs
in
and
retf
pop
stos
and
inc
inc
std
push
ins
jmp
xor
outs
inc
jne
jnp
sub
mov
xchg
(bad)
out
push
rcr
mov
sbb
add
mov
jne
xchg
(bad)
(bad)
jp
dec
xor
ins
or
cwde
(bad)
adc
loope
push
pop
mov
loope
sbb
inc
ret
imul
add
mov
dec
or
add
add
and
dec
mov
mov
shr
sub
xlat
das
daa
and
imul
jmp
mov
out
arpl
jb
pop
les
repz
fisub
add
mov
(bad)
mov
sbb
mov
mov
push
jecxz
mov
popa
retf
xchg
cmps
div
out
cli
push
rol
sub
xchg
loopne
ret
xor
add
mov
fs
dec
frstor
repz
ficomp
not
add
out
or
cmps
fisttp
adc
add
out
add
daa
inc
aam
scas
or
inc
or
add
movs
push
push
outs
vmovlpd
loop
xchg
sbb
inc
(bad)
or
add
neg
add
sbb
add
aaa
outs
xor
sbb
or
mov
popa
fistp
push
add
mov
push
jnp
retf
jne
and
imul
pop
stos
pop
pop
ja
sbb
jmp
cmps
std
push
jecxz
push
inc
pop
mov
or
out
sbb
jp
push
out
push
ds
xor
add
push
loope
adc
add
and
and
push
rol
pop
ret
jns
pop
sbb
lock
add
jecxz
(bad)
mov
fsub
xchg
imul
mov
mov
inc
mov
fisub
pop
pop
xor
lods
pop
mov
dec
cs
mov
add
fwait
arpl
add
inc
jb
and
xor
inc
scas
test
mov
cmp
and
push
ret
das
cli
ret
sub
or
dec
fwait
pop
rol
data16
js
push
pop
or
lahf
vmread
lock
xchg
mov
xchg
adc
scas
in
imul
nop
test
imul
cmps
(bad)
push
add
add
daa
ret
mov
lods
adc
dec
mov
pop
mov
push
inc
xlat
mov
push
cmp
jecxz
xor
ret
and
and
push
retf
sbb
cmp
mov
hlt
test
sub
push
pop
pop
fidivr
pop
push
sbb
bound
outs
cmp
jnp
ins
sub
adc
loope
push
pop
cmp
xchg
mov
xchg
or
clc
call
scas
loopne
adc
jne
cmps
test
cmp
outs
inc
and
popa
stos
or
dec
push
out
add
shl
xor
mov
jbe
cmps
dec
mov
push
gs
popa
mov
popa
aad
and
(bad)
loop
mov
fs
mov
adc
(bad)
xchg
push
emms
adc
shr
push
jb
sub
lds
out
data16
aam
in
push
loope
rcl
adc
test
lahf
jbe
mov
neg
aaa
and
mov
and
push
mov
shl
(bad)
das
dec
add
add
scas
and
imul
or
pop
jnp
js
inc
dec
push
pop
and
mov
pop
stos
pop
outs
arpl
fadd
add
outs
xchg
fistp
push
pop
and
xchg
xchg
ins
xchg
mov
sbb
xchg
push
mov
inc
mov
cs
or
mov
sbb
add
pop
and
cmp
loope
ins
push
retf
adc
jae
stos
adc
test
jp
sub
xchg
jne
sahf
or
add
(bad)
mov
mov
popf
cmp
(bad)
sub
sub
inc
xchg
mov
inc
adc
(bad)
sub
stos
mov
iret
sbb
and
stos
mov
or
and
dec
jp
das
adc
inc
sub
cmps
or
push
dec
adc
jnp
mov
mov
dec
or
dec
push
aad
and
xchg
jmp
pop
imul
dec
and
ja
inc
test
mov
add
mov
paddusw
pop
imul
and
fwait
push
xchg
inc
mov
(bad)
jno
and
xchg
push
cmp
and
mov
adc
add
inc
int
add
daa
sti
pop
es
ret
jmp
jmp
lahf
add
enter
ins
adc
or
mov
add
stos
pop
add
cmp
fwait
ja
dec
sub
and
or
es
es
mov
loopne
dec
add
int
in
out
neg
add
lods
add
mov
mov
out
jge
lds
lods
cs
sub
mov
inc
ret
add
add
or
jbe
sbb
cmp
jb
cs
mov
mov
stos
neg
mov
push
mov
les
xchg
lds
scas
mov
(bad)
mov
addr16
xchg
clc
mov
ja
mov
pop
cmp
mov
fwait
mov
(bad)
push
into
pop
adc
add
fist
dec
mov
and
into
outs
pop
adc
scas
addr16
mov
mov
lods
sub
add
movlps
sti
lock
outs
cli
push
lods
jo
and
jbe
xchg
jmp
pxor
mov
addr16
rol
cmp
(bad)
pop
xchg
xor
in
mov
ror
jae
scas
fiadd
jns
fist
push
sbb
mov
mov
push
ret
aas
mov
sahf
arpl
push
je
sbb
int3
leave
add
bnd
lock
dec
cmps
mov
adc
ficomp
stos
and
and
xchg
shl
retf
lds
cwde
mov
cmp
xchg
xor
mov
xchg
das
push
jg
outs
mov
sti
mov
aam
outs
cmp
jp
dec
mov
imul
cmp
mov
mov
or
mov
leave
push
inc
add
nop
fwait
xchg
sti
sti
lock
mov
mov
sub
dec
mov
mov
stc
ret
add
mov
clc
sahf
arpl
ret
scas
leave
fbld
loopne
push
das
push
ds
and
(bad)
pop
fcom
cli
pop
(bad)
shl
pop
inc
shr
and
ret
mov
xor
mov
jae
dec
pop
adc
shl
in
imul
add
ss
inc
and
or
adc
mov
imul
jg
add
add
pop
mov
jmp
mov
pop
xchg
jecxz
arpl
push
cmp
retf
push
(bad)
mov
stos
(bad)
scas
mov
retf
mov
daa
mov
test
dec
and
fld
pop
mov
sub
pop
das
cmp
mov
jecxz
or
ror
pop
add
pop
xchg
xchg
lds
sahf
aas
(bad)
or
fld
mov
mov
and
push
loope
das
ret
ret
int3
clc
add
cmp
and
mov
jbe
sub
shl
add
mov
pusha
push
cmc
loopne
div
sub
mov
cmps
push
aad
push
add
pop
add
jg
jmp
mov
test
fmul
das
scas
xlat
mov
or
sub
mov
mov
aaa
lds
cmp
ins
sti
mov
mov
ins
aas
iret
(bad)
mov
mov
dec
fld
dec
mov
add
aaa
aaa
cs
in
mov
imul
sbb
les
das
push
movs
or
icebp
dec
fwait
stos
push
stos
loop
pusha
adc
out
ja
pop
jbe
mov
inc
mov
sbb
mov
shl
mov
or
mov
lods
inc
lds
dec
pusha
test
rol
mov
xchg
and
mov
cwde
mov
lock
mov
ret
lods
or
xchg
jo
aaa
pop
mov
sub
scas
dec
xor
(bad)
pop
mov
jnp
repnz
neg
mov
loopne
xor
rcr
ficom
aas
sti
ret
ud2
lods
add
ins
jmp
xchg
pop
outs
mov
bound
(bad)
mov
add
jo
pop
(bad)
test
fwait
ret
scas
mov
adc
add
out
or
pushf
pop
mov
lods
stos
jo
and
or
ja
dec
add
sub
mov
mov
scas
jmp
dec
sbb
rcl
dec
mov
mov
mov
das
xlat
sbb
inc
sahf
cdq
stos
sub
xlat
sahf
mov
dec
mov
mov
addr16
jb
pop
dec
mov
mov
iret
lahf
push
inc
mov
popa
add
push
inc
pop
arpl
or
push
fmul
jmp
out
dec
cmps
push
scas
inc
stos
rcr
pop
jae
mov
mov
stos
inc
cmp
jo
adc
mov
xor
ret
addr16
add
mov
xlat
mov
inc
dec
and
add
sbb
dec
dec
and
fisttp
test
jns
into
lods
mov
test
xor
cmp
test
pop
mov
xchg
or
das
mov
xor
ret
sbb
pop
xor
sub
and
or
mov
add
aaa
inc
xor
or
jmp
(bad)
dec
cmp
jnp
lods
adc
sbb
pop
aaa
push
les
push
jns
aaa
cmps
mov
sbb
mov
imul
aaa
adc
test
lahf
mov
retf
mov
mov
lds
cmp
sub
cmp
enter
cmp
mov
push
ret
jp
(bad)
ja
jmp
or
sub
push
xlat
mov
mov
xchg
fdiv
xchg
scas
pop
xchg
pop
pop
pushf
call
xchg
xchg
jp
and
mov
and
sub
inc
jp
ja
mov
test
cmps
stos
loopne
adc
adc
dec
or
ins
shl
cmps
jmp
mov
sbb
loop
clc
jno
cli
das
add
aam
inc
cmp
rcl
or
stos
cs
mov
dec
xchg
mov
(bad)
(bad)
outs
push
add
mov
(bad)
out
lea
mov
(bad)
stos
adc
scas
sahf
ror
push
loop
pop
lods
(bad)
mov
(bad)
js
fidivr
mov
sub
scas
aas
pop
iret
pop
mov
xchg
xchg
ret
sbb
mov
xchg
inc
xchg
sub
scas
ret
stos
outs
sbb
pop
(bad)
push
pusha
data16
pop
or
or
pop
push
movs
ss
ja
cmps
aad
dec
rol
(bad)
mov
mov
jp
inc
cmp
jmp
scas
lahf
enter
bound
(bad)
les
lea
mov
inc
and
fcmovne
movs
or
out
sbb
nop
or
adc
xor
add
sub
xor
test
push
call
mov
stos
or
mov
pop
cmp
mov
mov
dec
pop
mov
ins
or
imul
pop
mov
rcr
mov
xlat
add
xchg
aam
mov
jo
lock
arpl
dec
adc
ror
xchg
push
loopne
lods
xlat
cmps
mov
mov
es
inc
sub
rcr
mov
test
addr16
les
out
ret
sbb
inc
mov
mov
xchg
add
out
xlat
(bad)
repnz
outs
ror
mov
ins
xor
push
xchg
imul
inc
aaa
sub
push
push
dec
xchg
xlat
inc
add
push
mov
call
stc
lock
aam
or
xrelease
sbb
imul
ins
repz
pop
mov
jecxz
push
inc
ror
and
pop
or
iret
ja
adc
mov
lea
mov
dec
or
in
pop
xchg
pop
mov
les
mov
add
push
inc
outs
inc
lods
jmp
pop
xchg
mov
call
mov
lods
xor
jnp
pop
loope
imul
cmp
mov
arpl
mov
ret
mov
adc
cmps
sub
xchg
or
or
pop
push
sbb
or
lock
pushf
stos
stos
mov
jmp
aam
push
outs
push
jnp
mov
aaa
push
mov
jmp
xchg
cwde
ja
test
mov
dec
adc
ret
push
jecxz
mov
mov
and
mov
fbld
cmp
scas
adc
push
lea
lods
stos
(bad)
rol
pop
out
rol
push
cmps
xor
mov
and
ds
xchg
xchg
push
not
xor
add
dec
aam
imul
(bad)
repz
test
outs
sub
jnp
imul
jg
(bad)
jmp
aam
sub
call
pusha
push
das
push
jmp
push
jo
iret
shl
aaa
jno
push
push
mov
sub
fdiv
loope
fistp
bound
sbb
popa
push
scas
jns
xor
push
mov
mov
add
test
cs
xchg
mov
ja
mov
pop
outs
shr
jo
pop
jp
add
dec
and
dec
rcl
adc
ds
sbb
inc
jle
nop
mov
call
ret
pop
mov
ja
push
fucom
push
push
addr16
cdq
or
bound
adc
cmps
mov
je
arpl
inc
inc
jg
bsf
out
bound
mov
pop
retf
bsr
xchg
or
outs
xor
or
adc
data16
adc
pop
add
add
stos
inc
out
xchg
(bad)
pop
push
jbe
das
dec
push
imul
ficomp
and
pop
add
lock
cmps
push
fbld
mov
mov
imul
pop
cmps
arpl
mov
je
loopne
aaa
sbb
stos
xor
jmp
repz
add
xchg
or
aaa
out
in
jbe
retf
and
push
push
push
(bad)
ror
ja
shl
scas
nop
(bad)
xchg
(bad)
inc
mov
sbb
sub
mov
lock
sti
xchg
fwait
add
dec
sbb
addr16
push
je
pop
inc
sbb
pop
ja
movs
add
pop
aam
pusha
ret
shr
ins
movs
sti
jmp
pop
cmp
mov
ins
jg
inc
ds
sub
in
mov
les
fdivr
jae
lahf
or
push
push
mov
out
adc
ret
inc
lods
stos
ret
pusha
ret
aas
je
pop
push
jbe
mov
jnp
sub
jmp
jne
mov
mov
xor
xchg
mov
(bad)
and
adc
push
xchg
cli
pop
dec
repz
in
xor
pop
pop
pop
adc
(bad)
mov
scas
retf
sbb
jnp
push
pop
das
(bad)
xor
pop
add
fldenv
sbb
bound
ins
xor
mov
push
xchg
shr
fisubr
dec
aaa
es
sbb
xchg
sbb
adc
jo
fidivr
jg
fdivr
addr16
(bad)
(bad)
bound
out
loopne
sbb
jo
jmp
jae
ins
and
iret
or
xor
pop
les
adc
daa
sub
mov
add
xor
sub
xchg
push
sub
pop
(bad)
ret
xchg
imul
jbe
imul
mov
inc
into
adc
fisubr
adc
(bad)
dec
stos
pop
adc
scas
jne
push
arpl
bound
or
shl
adc
sub
stos
movs
sbb
je
fs
push
outs
mov
jo
(bad)
scas
push
mov
sub
stos
pop
shl
iret
sbb
pop
jmp
mov
xchg
pop
lahf
mov
xchg
enter
(bad)
adc
push
dec
xor
mov
sub
pop
fwait
mov
adc
shr
ror
pop
ja
sub
pop
je
dec
jae
or
jbe
lahf
outs
ret
mov
mov
(bad)
stos
out
inc
xchg
push
daa
mov
or
imul
mov
xor
mov
cs
mov
jae
mov
xor
xor
popa
iret
inc
dec
jae
or
loopne
xchg
add
dec
jne
add
pop
and
in
mov
or
cmp
inc
mov
sub
stos
and
cmps
inc
add
sub
ffreep
adc
mov
idiv
pop
inc
or
pop
or
push
aas
test
pop
lea
and
jb
rcr
imul
or
imul
stos
sub
pop
jmp
jne
push
jmp
sub
bound
scas
jmp
adc
xchg
or
call
dec
push
dec
or
add
jl
fmul
(bad)
xchg
das
and
shl
or
xor
dec
inc
pop
or
adc
xchg
jmp
repz
loop
cmp
dec
addr16
add
sbb
sub
(bad)
and
xchg
stos
mov
(bad)
push
inc
xchg
dec
enter
out
xchg
jns
xchg
push
lds
push
pop
xor
lahf
and
ret
xchg
das
das
inc
mov
dec
and
push
bound
or
imul
mov
daa
pop
pop
add
scas
stos
dec
lahf
ret
pop
call
inc
imul
adc
mov
mov
sub
pop
movs
(bad)
les
out
mov
pop
xor
ins
(bad)
aas
push
inc
and
(bad)
jmp
in
xchg
jecxz
imul
imul
pop
lods
xchg
sub
pop
ins
inc
dec
sub
fisubr
and
jge
cli
dec
(bad)
(bad)
jbe
push
and
iret
(bad)
jge
pop
(bad)
cmp
xor
aam
lea
adc
cmps
iret
in
push
add
add
pop
xor
mov
push
and
sti
cmps
sbb
lahf
aaa
xor
inc
mov
pusha
int
adc
lods
movs
arpl
or
sti
or
aas
push
out
fidiv
ja
or
inc
dec
push
imul
cmp
sub
not
lahf
adc
ret
push
sub
movs
xor
(bad)
popa
fwait
jb
push
push
fimul
push
imul
mov
scas
mov
jne
mov
inc
add
ret
pusha
ret
sbb
or
sub
sub
fild
mov
jo
sbb
sbb
lahf
das
imul
or
popa
pop
adc
add
bound
push
repnz
inc
arpl
mov
loope
pop
and
and
aad
xor
add
adc
enter
inc
push
ins
aam
push
aaa
inc
inc
add
arpl
(bad)
adc
pop
dec
push
ret
scas
retf
ror
or
adc
out
call
add
sahf
fadd
jmp
add
dec
jbe
jle
jmp
dec
fcmovnu
jne
fisttp
jnp
out
or
fnstsw
(bad)
jmp
(bad)
push
dec
inc
dec
loope
xlat
into
in
mov
fadd
cmp
mov
cmp
sub
inc
rcl
adc
push
mov
sar
neg
add
out
fst
lahf
shl
shl
daa
test
(bad)
pop
sahf
xchg
aas
push
jmp
(bad)
loope
aam
adc
jno
in
pop
xlat
ret
push
jmp
aaa
cmp
jmp
xchg
out
jge
add
or
(bad)
fiadd
arpl
leave
xchg
jl
add
out
call
inc
push
mov
ss
fimul
arpl
fdivr
shl
(bad)
into
and
aam
fcmovb
adc
jecxz
iret
mov
(bad)
sahf
data16
push
jae
fldl2e
inc
fsub
dec
fcom
popf
(bad)
sbb
ja
mov
call
rcr
add
imul
pop
fstp
fdivp
or
sbb
out
ret
lods
jo
adc
xlat
inc
lods
xchg
in
arpl
sbb
lahf
and
jp
mov
in
fistp
rol
inc
push
out
mov
jecxz
jnp
xlat
rcl
cmps
xor
aaa
xchg
add
xor
inc
ficomp
data16
outs
sbb
shr
mov
outs
sub
fsubr
rcr
cmps
add
push
rcl
aad
jne
or
adc
dec
jmp
nop
and
ins
push
ds
pop
jmp
push
mul
mov
push
adc
fild
stos
xlat
movs
arpl
fidivr
and
ins
scas
inc
call
(bad)
xor
add
jnp
stos
cmp
lahf
inc
pop
shl
fwait
loope
call
stos
pop
mov
pop
shl
js
or
inc
push
out
cs
pop
dec
mov
ret
add
jecxz
loop
add
jmp
icebp
mov
das
loope
pop
jnp
push
loop
aad
es
aad
stos
jmp
pop
cmp
mov
arpl
not
daa
push
mul
out
fnstsw
cmps
or
es
not
jl
cli
mov
inc
fisttp
daa
xlat
das
loop
pop
fiadd
call
xchg
call
lea
retf
cwde
stos
mov
in
(bad)
loope
or
imul
imul
sub
sbb
dec
fucomi
mov
jg
rcl
push
out
loope
mov
xlat
das
aaa
push
push
daa
xchg
mov
ja
sbb
adc
rcr
rcr
sub
push
sub
pop
jg
out
(bad)
push
pusha
imul
(bad)
jmp
ror
xor
or
das
mov
aam
fcmovnbe
cmps
data16
sbb
pusha
inc
ja
(bad)
out
or
xchg
fild
add
imul
mov
jg
adc
sbb
mov
loop
mov
jg
(bad)
add
lds
imul
shr
fnstenv
es
aaa
(bad)
pop
mov
mov
mov
mov
in
cmps
imul
call
adc
retf
lods
pusha
mov
fwait
loope
out
ret
ins
rcl
call
ret
(bad)
cmp
mov
nop
sub
cmps
add
or
jmp
imul
scas
les
and
adc
mov
(bad)
out
sbb
add
jb
pop
pusha
sbb
sub
sbb
cmp
jno
outs
dec
fisttp
lods
push
add
retf
fild
stos
cmps
pusha
push
push
mov
mov
das
mov
daa
push
ficom
je
push
push
pop
pop
in
jecxz
not
cmp
test
cmp
sbb
enter
ror
out
push
mov
push
xor
mov
fild
in
test
pop
shl
xor
mov
jmp
test
movs
inc
jb
sbb
scas
test
mov
call
fdiv
push
xlat
push
(bad)
fbld
push
fwait
or
push
shl
cmp
jmp
jmp
push
push
lock
out
cmp
jg
dec
shl
or
ret
aad
dec
xchg
shl
inc
sub
sbb
jle
mov
sbb
jl
jo
add
jnp
jae
mov
xchg
fiadd
mov
repz
lds
adc
mov
jecxz
mov
and
popa
sbb
sbb
add
dec
mov
popa
lock
xchg
addr16
js
xchg
cmp
fdivr
ss
pop
mov
pusha
adc
inc
js
or
cmps
pop
mov
sbb
inc
mov
inc
cs
xchg
xor
sub
sub
xor
or
push
ret
cmp
or
scas
retf
jnp
arpl
out
pop
das
outs
push
pop
(bad)
sbb
aas
fdivr
(bad)
test
aaa
loopne
jnp
mov
push
pop
rcr
ret
scas
sub
inc
mov
shl
js
mov
mov
cmp
ret
ret
ret
sbb
pop
scas
(bad)
mov
sahf
push
jecxz
iret
cmp
rol
jbe
sub
out
jno
ret
and
sbb
mov
not
push
sbb
loope
imul
mov
sbb
push
out
mov
js
es
fiadd
sub
cmp
add
nop
mov
stos
xchg
dec
sahf
xchg
aas
mov
mov
mov
ret
sub
xchg
adc
adc
bound
inc
test
rol
inc
mov
xchg
outs
sbb
push
iret
sub
mov
push
stos
mov
fcom
imul
retf
sbb
inc
in
mov
or
scas
push
adc
inc
xlat
sub
sbb
cmp
outs
add
sub
inc
sub
xor
fild
pop
or
pop
xor
mov
cmps
into
xor
(bad)
repz
pop
loop
and
(bad)
xchg
xchg
rol
or
ja
mov
mov
push
xor
test
ret
add
dec
add
or
dec
pop
add
daa
push
and
and
xor
jle
pop
sbb
xor
sbb
sub
mov
stos
push
inc
push
push
push
aaa
ds
or
dec
inc
inc
and
add
sub
sbb
xor
ja
dec
fimul
inc
dec
adc
cmp
es
imul
pop
add
cmp
adc
xor
out
and
mov
xchg
daa
push
xor
jbe
or
outs
and
(bad)
(bad)
sub
pop
add
pop
jno
das
push
popa
jnp
lods
sbb
sbb
push
or
mov
stc
push
push
or
sbb
pop
es
das
adc
shl
(bad)
and
sbb
and
inc
loopne
inc
xchg
daa
sub
sbb
stos
dec
mov
jae
add
mov
sub
mov
jecxz
mov
loope
cmp
pop
and
inc
dec
add
inc
xchg
arpl
adc
xor
and
mov
jbe
mov
or
pop
push
out
cmp
das
add
and
pop
inc
mov
(bad)
cmp
repnz
mov
call
pop
sbb
out
pop
add
inc
daa
inc
push
or
sar
or
sbb
cli
dec
out
add
ficom
pop
jo
dec
repnz
xor
push
shr
bound
mov
add
fdivr
jb
sbb
adc
test
add
cmp
or
js
add
imul
fisubr
xchg
push
data16
dec
adc
repz
adc
ins
test
in
rcr
xor
pop
(bad)
shl
and
das
add
jne
sahf
push
lahf
and
mov
mov
pusha
mov
pop
sbb
and
jg
adc
jns
fisub
inc
lahf
inc
es
dec
fwait
cs
and
push
mov
jecxz
stos
fimul
aaa
jecxz
or
mov
ret
in
loop
mov
es
add
loopne
push
dec
xchg
cmc
cmp
stos
sbb
inc
(bad)
arpl
sub
pop
pusha
adc
mov
or
pop
and
out
pop
rcr
scas
lahf
sti
test
out
rcl
sbb
sbb
adc
inc
or
(bad)
imul
shl
pop
sub
inc
mov
fsubr
dec
cmp
dec
mov
add
sub
adc
fiadd
push
rcr
scas
or
dec
scas
jecxz
cmp
or
outs
aas
sbb
or
or
jo
cmp
jbe
jbe
push
stos
xor
sahf
xor
add
inc
sbb
idiv
cs
and
idiv
jae
mov
fld
fist
mov
and
mov
pop
pop
out
aaa
ror
mov
fbstp
inc
ret
mul
sub
pop
rol
fcom
pushf
or
fidivr
sbb
sbb
inc
push
xchg
popf
idiv
push
das
push
mov
xor
es
jmp
stos
cs
pusha
jmp
ja
sub
mov
push
(bad)
push
inc
pop
pop
sbb
cmp
loope
sub
and
jae
or
dec
mov
push
cmp
inc
pop
jno
sbb
inc
jno
sub
add
dec
cli
pop
iret
push
add
jns
(bad)
sub
sub
and
push
into
cmp
or
sbb
adc
fs
pop
test
and
or
dec
xor
pop
xlat
push
xor
adc
sub
es
pminub
adc
nop
(bad)
pop
ret
inc
icebp
push
loopne
addr16
and
repz
lea
jmp
xor
dec
inc
ja
jecxz
push
or
jo
retf
and
rol
jnp
stos
jmp
dec
cmova
push
inc
or
adc
sub
arpl
push
test
add
push
pop
mov
fistp
retf
push
jo
or
inc
adc
dec
inc
adc
mov
repz
push
test
sub
lea
inc
out
lahf
mov
out
adc
mov
jl
pop
add
arpl
sbb
sbb
sbb
pop
sub
aas
sbb
add
cmp
jns
fist
add
or
les
mov
(bad)
adc
mov
in
daa
outs
mov
ret
and
adc
inc
sub
idiv
adc
(bad)
or
pusha
lds
jecxz
sti
jmp
push
sbb
cmp
mov
retf
pop
mov
pop
into
sbb
sbb
add
pop
pop
inc
lock
sub
pop
lea
mov
sbb
arpl
push
iret
shl
push
lods
xor
sub
sbb
xchg
inc
jmp
xchg
or
push
pop
cmp
add
push
push
daa
inc
adc
mov
push
add
mov
aas
push
adc
test
inc
and
mul
adc
adc
sbb
ds
mov
daa
jnp
or
ret
add
and
jne
add
inc
dec
ret
adc
push
inc
sbb
inc
and
push
pop
daa
pop
pop
popa
xor
loop
mov
out
inc
mov
pop
jecxz
mov
sub
jno
(bad)
sub
adc
mov
(bad)
mov
and
popa
mov
push
push
dec
xor
mov
(bad)
test
ja
sub
add
ret
aaa
jnp
push
pop
rcr
arpl
mov
retf
mov
mov
mov
jp
inc
inc
sub
out
loopne
jnp
jge
jecxz
push
or
push
inc
add
or
fwait
or
sbb
inc
mov
adc
dec
push
and
pop
inc
clc
jne
clc
pop
jnp
pop
and
fwait
push
sub
inc
aaa
xor
in
mov
jmp
adc
sub
inc
pop
scas
data16
sbb
pop
xchg
retf
adc
add
push
mov
lods
popa
pop
cmp
das
iret
sbb
les
push
jnp
adc
sbb
retf
movs
(bad)
fiadd
(bad)
pusha
inc
or
inc
das
(bad)
or
push
xchg
or
lock
push
mov
xor
or
lea
inc
jmp
jp
push
(bad)
loop
cmps
out
and
xchg
sub
(bad)
add
add
movs
ret
jp
add
sbb
xchg
stc
loop
sahf
pop
and
push
cmps
movs
jne
xchg
movs
outs
cmp
loopne
inc
popa
xchg
inc
add
pop
push
adc
jecxz
mov
and
imul
mov
push
sbb
mov
pop
push
lods
inc
mov
daa
div
ret
mov
ss
inc
and
ret
mov
ja
idiv
adc
and
repnz
ins
lods
mov
fwait
sub
mov
ins
xchg
or
sub
push
imul
bnd
outs
adc
sbb
imul
sub
cmp
cmp
mov
pop
mov
pop
not
mov
sub
jge
aaa
xchg
inc
mov
cdq
mov
push
xchg
add
push
pop
or
ins
push
call
push
inc
push
mov
ret
aaa
push
xor
sbb
(bad)
jecxz
mov
inc
jb
sbb
ins
lods
jg
pop
sub
ins
lods
imul
lods
add
jp
cmp
add
mov
add
scas
push
icebp
push
leave
test
jo
xchg
xchg
cmp
scas
lea
xchg
and
retf
jnp
add
das
pop
sub
iret
sub
push
jno
pop
mov
push
movs
inc
adc
sbb
lods
aaa
loop
outs
(bad)
pop
adc
stos
sbb
aaa
lds
mov
shl
ins
outs
jp
fistp
sbb
jmp
ins
lods
add
fistp
nop
(bad)
aad
mov
les
das
dec
sbb
ins
arpl
sbb
inc
and
shl
fild
dec
enter
inc
push
xor
loopne
push
inc
aas
aas
jmp
outs
imul
shr
pop
and
je
sub
unpckhps
xor
adc
scas
push
ins
or
lea
stos
mov
(bad)
mov
xchg
imul
add
mov
dec
imul
add
mov
add
jae
pop
pop
mov
mov
dec
mov
jno
ret
lahf
sbb
les
fs
push
test
repz
les
push
mov
sub
cmps
pushaw
(bad)
and
or
pop
ror
mov
xor
nop
mov
pop
fsub
stos
pusha
xor
sbb
(bad)
xchg
sub
sub
sub
push
dec
int
js
mov
cs
push
movs
dec
out
push
push
pop
push
(bad)
ja
retf
add
repz
mov
shl
add
inc
clc
mov
(bad)
adc
out
ret
outs
inc
scas
or
inc
test
enter
pop
dec
sbb
push
ret
jg
inc
and
sbb
and
push
adc
push
xor
fs
cmps
jae
jae
cmps
fs
jae
fs
and
push
push
add
and
jg
pop
pop
(bad)
xchg
and
loop
popa
ja
int3
add
inc
pcmpeqd
inc
add
bt
inc
xchg
nop
push
inc
int3
mov
and
add
or
mov
sub
and
leave
dec
cmps
stos
ficomp
or
sub
mov
aaa
jo
mov
push
rep
jne
inc
mov
xchg
inc
sahf
test
or
aad
movs
outs
mov
mov
push
leave
push
sbb
push
and
push
dec
sub
outs
arpl
and
or
push
jb
mov
or
push
xor
lods
lds
ror
jg
inc
jb
xchg
daa
mov
test
adc
mov
outs
lea
inc
sub
rcr
shr
mov
and
ja
push
mov
adc
and
imul
xchg
push
cmp
mov
and
int
in
jae
daa
data16
sub
sub
adc
jg
pop
cmc
pop
sti
jns
xor
inc
lods
bound
sbb
jae
ss
mov
xchg
push
fcmovnb
scas
movs
sub
aaa
sub
push
mov
pop
stos
add
or
xor
jbe
shl
push
mov
shl
repnz
sti
add
xchg
and
dec
ror
mov
ins
int3
push
inc
push
out
cmp
pop
dec
sbb
push
arpl
xchg
loopne
lahf
stos
mov
outs
xor
ret
and
rcl
mov
jo
xchg
dec
lds
fsubr
div
out
shl
xchg
sub
jp
add
test
pop
push
test
add
retf
push
movntq
pop
add
mov
adc
and
test
sub
jbe
jp
cmp
data16
pop
(bad)
xchg
scas
cs
xor
and
push
hlt
mov
inc
daa
dec
inc
or
or
xchg
pop
inc
add
outs
sub
or
(bad)
iret
xor
pop
xor
push
inc
ss
rol
pop
ret
pop
xor
mov
xor
mov
lahf
ds
sti
dec
movs
outs
shl
add
fsubr
stos
(bad)
arpl
jmp
sub
sub
xor
adc
cmp
xor
pop
aaa
test
fwait
jnp
jnp
push
icebp
xor
fidivr
shr
fwait
mov
xchg
arpl
inc
jmp
imul
or
push
out
cmps
frstor
stos
cmp
shr
ret
xor
mov
pop
add
inc
inc
push
pusha
nop
cmp
ret
adc
mov
or
mov
(bad)
fild
cmp
adc
mov
cmp
fwait
xlat
inc
adc
xchg
stos
xlat
cs
mov
and
das
inc
inc
mov
fld
mov
mov
daa
cmp
mov
and
sub
or
pop
scas
mov
inc
add
movs
sahf
mov
mov
mov
cmp
inc
xlat
(bad)
(bad)
add
sub
push
cmp
xor
or
scas
or
or
or
dec
ja
out
sbb
pop
push
push
inc
push
iret
and
mov
pop
cmc
inc
mov
out
mov
daa
sub
sbb
inc
push
xlat
jb
xchg
popf
cmp
sbb
inc
dec
iret
pminub
push
sub
test
and
pop
pop
add
xchg
and
(bad)
and
(bad)
cmp
mov
loope
inc
and
xor
pop
inc
pop
mov
xor
scas
mov
mov
mov
jecxz
in
clc
lock
(bad)
mov
ret
rcl
bound
mov
mov
push
sar
int3
test
mov
int
dec
or
dec
dec
mov
or
sub
push
loop
aaa
loope
push
shl
jg
mov
jg
pop
xchg
xor
sbb
outs
je
dec
mov
push
jae
ds
and
pop
or
and
xor
outs
call
dec
fwait
xchg
sbb
stos
dec
push
mov
sub
inc
ret
call
or
mov
lods
popa
mov
add
jmp
and
inc
(bad)
adc
ffreep
mov
and
cmp
ss
sbb
nop
sub
(bad)
out
pusha
sbb
mov
out
pop
pop
xchg
ret
xor
dec
adc
daa
pop
loopne
sub
cmc
stos
rol
sub
mov
imul
fwait
pop
jbe
push
not
lahf
mov
add
arpl
and
push
xchg
inc
daa
pop
sbb
adc
xchg
push
dec
push
add
sbb
cmps
imul
fld
mov
jnp
mov
pop
sub
cmp
push
stos
fcmovnb
adc
out
(bad)
push
mov
leave
xor
out
push
ds
fmul
pop
and
or
adc
dec
mov
outs
fisubr
xor
pop
cmp
adc
imul
iret
mov
lock
inc
pop
mov
xchg
inc
cmp
push
mov
pop
iret
mov
cmp
mov
retf
mov
mov
cmps
push
outs
and
sti
lock
out
cmp
inc
sti
(bad)
lock
cmp
xchg
xchg
mov
imul
rep
xor
adc
cmp
xchg
xor
fiadd
sar
pop
inc
xor
push
cmovle
sub
or
mov
mov
push
rcr
xor
sub
fcmovnb
mov
bound
sbb
inc
push
ja
jmp
stos
adc
dec
mov
popa
sti
xchg
out
sbb
adc
xchg
xchg
xor
and
ret
mov
and
xchg
jne
pop
shl
dec
repz
or
por
scas
mov
cmp
iret
dec
scas
inc
xor
add
cmp
push
jae
mov
daa
xlat
xlat
push
dec
dec
xchg
inc
rcl
xchg
pop
xlat
outs
dec
imul
aad
jmp
mov
push
or
aaa
push
adc
inc
push
push
or
add
in
daa
ja
aad
lea
dec
sub
sub
jge
xor
xor
sub
pop
ret
push
ret
adc
dec
add
(bad)
sub
loop
ret
inc
inc
or
adc
(bad)
(bad)
daa
push
jmp
sbb
xor
mov
xchg
in
push
dec
ja
push
rcr
idiv
rol
or
pop
pop
lahf
dec
mov
fwait
dec
fistp
arpl
stos
stos
pop
mov
adc
adc
inc
adc
shl
push
xchg
xchg
cmps
mov
iret
stos
mov
and
bound
sub
(bad)
push
or
test
dec
lods
call
imul
xor
jnp
mov
sub
jbe
jmp
pop
scas
fwait
(bad)
jmp
jg
push
jecxz
sbb
mov
or
mov
popf
test
mov
rol
adc
(bad)
or
dec
sub
mov
out
xchg
pop
mov
mov
out
loopne
push
mov
pop
out
dec
inc
pop
(bad)
and
jne
mov
rol
sti
adc
xor
test
sbb
and
xor
inc
mov
pop
push
xor
or
or
cmp
ds
dec
ins
call
cmp
cmp
ds
adc
add
xchg
imul
fimul
push
sbb
daa
pop
rol
iret
jecxz
and
and
jge
jo
push
test
dec
not
dec
loopne
mov
sbb
push
fimul
mov
jg
mov
add
mov
add
add
jne
xchg
sti
aas
mov
mov
ror
fisubr
and
mov
mov
push
xor
dec
mov
sbb
lahf
(bad)
sahf
ins
popa
adc
push
adc
add
jae
push
and
dec
outs
push
popa
add
mov
adc
out
idiv
pop
jae
icebp
mov
and
ret
imul
inc
jae
out
mov
xchg
ds
ins
aas
mov
adc
or
stos
sub
(bad)
fwait
in
fisub
sbb
push
push
ret
dec
dec
call
data16
fst
test
(bad)
bound
ja
jp
movs
jge
outs
fs
das
jp
dec
pop
xor
or
pop
addr16
inc
sbb
aas
popa
sub
mov
jp
into
loope
out
test
nop
push
je
push
icebp
rcl
jbe
daa
ret
xor
sbb
xor
sbb
mov
add
pop
cmp
ss
xchg
and
in
mov
pop
add
adc
scas
imul
arpl
cmovo
sbb
(bad)
inc
add
scas
sbb
push
and
mov
cli
sub
outs
aaa
and
(bad)
push
pusha
add
movs
jne
adc
cmp
mov
iret
adc
mov
sbb
cmp
jns
popa
icebp
jo
pop
push
(bad)
mov
pop
push
retf
pusha
pop
xchg
jo
pop
inc
(bad)
fmul
cmp
and
push
cmps
push
adc
cld
enter
cmp
js
push
scas
inc
xchg
imul
sub
and
cmp
inc
loope
imul
jp
pop
push
mov
pop
iret
jg
mov
mov
mov
movs
mov
adc
xchg
jo
or
mov
push
retf
fwait
pop
and
or
push
push
js
nop
adc
pop
inc
ret
je
cmps
add
ins
pop
rol
adc
push
pop
adc
shl
jb
mov
and
push
je
add
pusha
rol
sub
xchg
inc
cli
jno
dec
cmps
daa
bound
rcl
addr16
fst
stos
rcl
or
shl
loope
mov
sub
sbb
push
(bad)
stos
jp
and
mov
push
adc
adc
ins
mov
loop
aaa
jnp
outs
push
aaa
or
loope
or
xor
mov
arpl
mov
or
xchg
ret
ret
or
mov
and
daa
mov
repz
mov
test
stos
add
or
ffreep
neg
sahf
lods
mov
sbb
not
outs
or
add
aaa
les
lods
arpl
sub
jecxz
fs
mov
stos
shl
or
jo
xchg
div
adc
mov
imul
in
or
jecxz
sub
jp
cmp
sbb
inc
jp
mov
sbb
imul
cmps
popf
and
ret
pop
cmp
sbb
out
lahf
imul
imul
mov
repnz
aad
nop
das
pop
cmp
fisubr
loopne
and
call
addr16
pop
adc
cmps
je
call
adc
sub
inc
adc
out
in
pusha
pop
inc
mov
or
sub
inc
lds
mov
mov
retf
pop
rcl
lock
sub
sub
jbe
dec
or
mov
sub
pop
and
imul
jmp
sar
mov
push
dec
xor
pop
out
int3
xchg
(bad)
outs
repz
cmp
ins
adc
pop
daa
pop
sbb
pop
out
ins
inc
add
mov
daa
into
adc
mov
das
jg
or
cs
movs
inc
xchg
cdq
loope
movs
cmp
popa
ret
sbb
out
add
loop
mov
xor
mov
lods
mov
xchg
inc
(bad)
sub
retf
repz
add
in
add
cmp
fwait
mov
fisubr
pusha
adc
icebp
push
aas
jo
jp
sbb
jae
jmp
cmp
pusha
arpl
nop
push
out
stos
shr
mov
outs
bound
push
out
add
mov
fild
outs
sti
ins
sar
iret
mov
je
stos
xchg
out
dec
hlt
xor
mov
(bad)
or
loop
inc
shl
shl
outs
jmp
repz
pop
lahf
es
mov
inc
xlat
xchg
or
pop
test
inc
arpl
sub
or
fs
rol
(bad)
cmp
mov
add
cmp
test
cmp
xchg
jbe
sub
push
pop
jp
push
test
push
dec
repz
nop
mov
push
mov
pop
sub
or
xor
or
or
mov
and
add
add
imul
in
mov
inc
cs
or
cmp
ret
int
sbb
data16
pop
xchg
fs
jae
fstp
inc
outs
in
jp
dec
dec
fs
inc
sub
gs
jnp
imul
rcl
sbb
xor
lock
outs
pop
mov
mov
daa
dec
sub
inc
sub
outs
dec
dec
jg
ret
push
repz
add
cmp
xor
rcr
push
scas
or
fmul
add
sub
repz
ins
(bad)
xchg
jae
aam
pop
repz
sbb
push
pop
inc
dec
(bad)
pop
mov
pop
cld
jnp
rep
mov
pop
not
jbe
xchg
gs
jae
lea
ins
push
sbb
arpl
es
mov
jp
ss
xlat
retf
outs
mov
outs
jp
push
pop
inc
pop
mov
mov
pop
inc
add
aas
pop
retf
es
and
pop
and
add
push
jp
sub
and
xchg
in
mov
cli
mov
inc
jnp
sbb
adc
mov
sub
jae
das
sbb
daa
imul
fcomp
addr16
mov
fisttp
daa
mov
xor
arpl
dec
dec
daa
stos
xlat
sbb
ret
mov
push
sub
inc
jecxz
(bad)
pop
sbb
les
jge
daa
out
not
ret
outs
inc
jmp
add
lahf
add
cli
inc
bound
(bad)
jle
dec
stos
lock
push
sub
push
jae
in
mov
push
jae
cli
adc
sbb
lods
xchg
das
xchg
les
pop
sub
or
inc
xchg
pop
stos
push
jecxz
cs
push
and
(bad)
addr16
and
loope
sub
dec
dec
outs
sbb
(bad)
or
jmp
repz
daa
dec
arpl
push
lock
jecxz
das
and
stos
push
(bad)
(bad)
bound
imul
sbb
aad
mov
xchg
out
shr
adc
push
(bad)
ins
and
ins
scas
or
ins
pop
ret
repz
mov
dec
(bad)
xor
adc
push
jb
ins
cmp
mov
xor
xchg
hlt
cmp
push
pushf
shl
idiv
inc
mov
dec
das
popa
ror
inc
xor
inc
leave
and
sbb
inc
pop
or
pop
dec
push
mov
adc
sub
je
and
mov
lds
pop
rol
pop
into
pop
aad
scas
adc
test
jg
(bad)
je
sbb
xchg
mov
jl
notrack
rol
sub
lds
adc
mov
mov
mov
adc
movs
ret
shr
fstp
ror
and
cmc
lods
add
test
push
pop
inc
mov
out
pop
int3
mov
cwde
mov
js
stos
cdq
std
out
adc
rcr
in
ret
and
repz
clc
in
or
xchg
not
fwait
add
mov
je
add
inc
mov
jl
fwait
add
(bad)
aaa
dec
or
add
pop
sahf
imul
mov
sbb
jl
lods
imul
cmp
pop
adc
pushf
int
sbb
mov
push
pop
ja
loope
pop
xor
int
shl
scas
xchg
(bad)
adc
jg
(bad)
mov
sub
lock
stos
sbb
sub
aad
ret
aas
inc
aad
lods
mov
pop
mov
pop
jmp
in
sbb
pop
add
inc
(bad)
int3
mov
or
enter
enter
or
or
xchg
mov
enter
adc
xchg
sbb
xor
(bad)
(bad)
mov
mov
pop
mov
dec
jo
(bad)
stos
xor
and
pop
int
enter
rol
jb
or
enter
mov
lods
xor
mov
and
push
pop
inc
mov
bound
mov
ja
hlt
rcl
adc
push
pop
cmp
retf
arpl
adc
ret
cwde
push
xchg
sbb
lods
xor
mov
outs
(bad)
jo
scas
inc
sub
outs
fwait
mov
and
lods
(bad)
shr
push
mov
pop
add
daa
mov
cmp
scas
sub
pop
mov
div
mov
inc
push
push
ds
pop
mov
push
mov
mov
fmul
mov
pop
add
jbe
add
mov
ss
ss
mov
cmp
in
shl
retf
ret
and
or
lods
int3
mov
pand
scas
ins
sbb
pop
push
(bad)
push
inc
cwde
int3
cmps
push
ja
push
sub
and
mov
fstp
mov
and
out
pop
(bad)
(bad)
pop
add
out
test
loopne
aaa
mov
shr
mov
ret
push
sub
bound
enter
pop
xor
push
push
push
jle
in
in
xor
icebp
mov
cld
enter
mov
sub
sub
lods
repnz
retf
sar
add
mov
push
(bad)
sub
sub
(bad)
(bad)
test
inc
jbe
inc
(bad)
stos
mov
shl
lods
std
add
sub
lods
shr
loop
cld
mov
add
adc
outs
add
xor
or
adc
out
mov
ret
dec
repnz
cmp
fdiv
(bad)
lahf
xor
movs
mov
xchg
addr16
mov
sbb
dec
lds
adc
mov
sub
nop
out
out
and
jnp
scas
mov
int3
mov
lock
jae
inc
sbb
xor
sahf
push
clc
mov
leave
mov
pusha
mov
pop
mov
push
movs
add
lock
div
inc
pop
es
retf
mov
jb
es
xchg
in
mov
sub
mov
pop
mov
imul
lock
sub
push
mov
or
push
mov
lea
and
cmp
cmp
pop
jb
das
cmp
shl
sti
sbb
jmp
pop
dec
jge
cmp
xor
push
ret
jae
add
aaa
xor
inc
xchg
push
daa
pop
in
ret
cli
cmp
punpckhbw
(bad)
fbld
jmp
arpl
stc
adc
imul
push
(bad)
or
bound
add
sbb
pop
sub
jecxz
stos
pop
int
adc
xor
or
add
mov
xor
xlat
cmp
cmovg
fidivr
jmp
mov
mov
loopne
xor
shl
out
or
inc
dec
(bad)
mov
ja
add
je
movhps
jl
adc
mov
shl
xchg
jns
or
push
xchg
mov
stos
push
pusha
mov
inc
dec
cmps
pop
or
or
pop
out
ret
retf
mov
sbb
test
scas
arpl
xor
and
nop
and
mov
mov
stc
mov
jmp
out
pop
outs
inc
mov
shl
rol
loopne
mov
jl
adc
jp
push
js
xchg
bswap
rol
dec
sbb
(bad)
add
cmp
cwde
out
fwait
cmp
jne
inc
mov
or
data16
repnz
cld
sbb
mov
(bad)
jl
int
repnz
lds
in
int
pop
mov
iret
fsub
xor
mov
sar
popa
mov
inc
pushf
mov
adc
dec
cmps
adc
mov
dec
nop
cs
push
push
add
retf
loop
(bad)
mov
adc
inc
pop
fidiv
int3
in
lds
add
in
cs
test
jae
in
adc
push
fisub
fisub
xchg
out
repz
daa
mov
cmps
xor
pop
pusha
inc
fistp
mov
data16
ja
ins
mov
inc
ds
jmp
mov
adc
and
mov
sub
ins
aam
lahf
mov
xor
pop
adc
pop
arpl
cmp
sahf
pop
push
push
adc
ret
xchg
add
pop
ror
daa
stc
lods
lds
dec
adc
inc
popa
jne
stc
(bad)
mov
push
sub
add
xchg
push
dec
sbb
stos
pop
mov
sbb
xor
arpl
add
jb
mov
inc
inc
gs
clc
sbb
add
push
imul
cwde
xor
adc
gs
sbb
mov
fst
jp
fsub
pavgw
jne
inc
pop
xchg
out
cdq
adc
lods
prefetch
mov
cmps
xlat
mov
stos
jnp
imul
in
rcl
fwait
je
ret
or
mov
push
push
daa
mov
fisub
ja
dec
inc
add
add
outs
in
cmp
pop
sbb
retf
adc
pop
mov
lods
pop
ss
add
gs
pop
sub
dec
pop
sub
pop
push
jne
add
sub
adc
jo
mov
adc
ins
iret
lahf
push
mov
fsub
ja
mov
(bad)
sub
faddp
outs
pop
mov
popa
ror
or
fimul
mov
add
mov
adc
add
xlat
dec
js
arpl
mov
mov
inc
cwde
jg
mov
mov
fst
shl
adc
mov
sbb
push
cmps
and
or
jbe
cmps
nop
sbb
stos
mov
or
loopne
fwait
push
and
test
ficom
and
pop
stos
inc
sahf
test
inc
or
aas
push
inc
popa
repnz
sub
or
xchg
jmp
ins
push
scas
sub
cmps
inc
and
sub
pop
adc
aam
mov
arpl
sbb
push
jo
adc
dec
les
enter
adc
pop
or
add
adc
inc
add
(bad)
popa
push
push
les
fwait
mov
sbb
mov
or
push
cmc
push
sbb
and
ins
cmp
dec
xchg
or
and
(bad)
imul
xlat
mov
xor
test
cmps
cmp
inc
imul
pop
imul
push
inc
xchg
out
or
aaa
popa
test
sbb
sub
xor
bound
and
sub
sbb
imul
jp
dec
daa
dec
lods
sahf
ret
sub
lods
loope
inc
mov
push
or
pop
addr16
cmp
jne
and
push
imul
retf
pop
inc
mov
cmps
xor
sbb
fadd
push
lods
jg
(bad)
sub
ins
js
xchg
push
movs
hlt
push
xchg
arpl
mov
xor
adc
inc
xchg
sbb
adc
punpcklwd
mov
inc
ror
scas
xchg
inc
fcom
sbb
sub
ret
fwait
bound
test
lahf
dec
sbb
repnz
inc
adc
and
inc
addr16
test
inc
pop
adc
popa
jecxz
fwait
sahf
push
scas
pusha
push
push
retf
sbb
sbb
adc
movs
sub
mov
or
mov
in
sti
inc
sbb
cmp
bound
loopne
adc
dec
xlat
fcmovbe
ins
push
outs
pop
xor
push
adc
enter
fsubp
iret
inc
jg
xchg
movs
mov
pop
arpl
ins
or
push
xlat
and
(bad)
je
mov
imul
mov
xchg
pop
add
ficomp
(bad)
dec
sub
xor
pop
xchg
jbe
dec
jbe
push
test
mov
dec
cmp
jp
imul
iret
mov
nop
sbb
mov
aas
not
push
jmp
sub
movs
adc
(bad)
div
pop
inc
jb
pop
mov
adc
jmp
loopne
and
arpl
xchg
and
adc
adc
dec
repz
sar
xor
sub
and
dec
dec
jnp
stos
sbb
push
sub
cmp
cmp
scas
add
dec
and
cmp
pop
push
adc
pop
sbb
mov
push
dec
and
dec
adc
xchg
cmp
outs
adc
sbb
push
shr
dec
add
inc
das
and
mov
push
pop
mov
aaa
jmp
xchg
es
jg
pop
xor
ror
loop
es
into
cmp
inc
adc
mov
cdq
shr
scas
fmul
aad
jae
add
lahf
push
sub
sbb
push
add
adc
stos
out
mov
sub
je
shl
ins
mov
push
scas
inc
or
pop
pop
dec
xchg
lahf
push
sub
sbb
push
mov
xor
or
out
les
cwde
ins
and
shl
mov
jecxz
xor
daa
bound
and
inc
xchg
push
outs
xchg
push
ret
pop
xchg
data16
inc
jb
loope
stos
jecxz
movs
mov
call
das
ret
test
into
daa
push
fisttp
pop
repnz
shr
fwait
sub
inc
mov
jg
mov
mov
add
fist
aad
ja
lahf
(bad)
movs
push
adc
ins
sbb
daa
retf
jb
push
mov
shl
popa
pop
gs
xlat
out
adc
sbb
fistp
xchg
add
sbb
popa
push
sbb
jmp
or
nop
mov
and
mov
mov
es
and
bnd
mov
aaa
sub
test
push
pop
mov
or
or
loop
arpl
stos
mov
push
cmps
iret
jp
das
inc
mov
cwde
mov
xchg
outs
ret
(bad)
test
and
xor
pop
fst
es
xor
sbb
sti
push
add
hlt
movs
jnp
xchg
inc
stos
mov
adc
movs
mov
jl
inc
sub
add
aaa
push
rol
das
add
mov
jae
packsswb
scas
test
aaa
xor
mov
push
mov
lods
arpl
pop
lods
inc
retf
repz
push
push
mov
jecxz
adc
je
je
cmps
addr16
pusha
addr16
sub
je
mov
cmps
push
(bad)
push
sbb
aas
sbb
rol
dec
sub
adc
inc
ins
imul
and
(bad)
(bad)
fild
rcl
push
and
or
dec
jae
arpl
arpl
jb
arpl
call
add
les
add
and
mov
xor
inc
add
adc
cmp
add
adc
inc
mov
and
adc
dec
pop
inc
and
dec
ins
mov
add
inc
sar
xor
mov
xor
rcl
int3
push
es
out
or
xor
jnp
jns
aaa
xor
sub
xlat
rol
(bad)
xchg
daa
xchg
rcl
push
sub
bound
aaa
adc
pop
add
dec
jnp
scas
movups
fisubr
rcl
js
pop
(bad)
inc
xor
nop
sub
inc
sbb
loopne
int3
(bad)
jg
daa
add
and
sub
ins
or
rol
and
les
daa
mov
jb
arpl
out
lds
scas
fisttp
sub
pop
mov
inc
ret
lock
pxor
scas
and
sbb
mov
push
xor
pop
fcmove
ds
int3
fist
add
imul
xor
in
inc
adc
or
mov
js
(bad)
and
inc
jp
and
inc
lea
daa
dec
cs
mov
mov
retf
sub
jnp
add
ins
adc
test
push
mov
cmp
adc
test
adc
pusha
add
add
pop
inc
lahf
sbb
cld
fadd
int3
ret
ja
lock
aas
sub
xor
sub
xor
jnp
sub
jmp
test
(bad)
ret
lahf
mul
imul
mov
add
jns
mov
xchg
test
inc
mov
inc
daa
in
and
movs
call
xchg
mov
inc
aaa
movs
mov
push
and
sbb
hlt
or
xor
add
sub
adc
jnp
adc
mov
stos
mov
mov
test
and
rcl
jl
(bad)
xlat
xor
inc
addr16
dec
push
mov
test
add
add
or
xchg
and
inc
test
push
cmp
mov
push
test
lea
adc
ret
push
mov
jno
scas
and
fcmovnb
jbe
sub
lods
pusha
or
cmp
mov
xlat
and
fisttp
sub
int3
pop
sbb
xlat
push
mov
sub
comiss
stos
sub
sbb
adc
lahf
add
repz
aam
pop
sahf
pop
(bad)
sub
xchg
adc
dec
add
clc
test
xor
xor
fld
fwait
mov
or
pop
mov
retf
and
cmp
pop
shr
mov
mov
mov
jo
xchg
jecxz
mov
dec
rcl
test
or
or
aam
(bad)
push
dec
fld
imul
movs
retf
lods
add
push
adc
jg
pop
inc
xchg
mov
lahf
lods
cmps
ja
push
int3
jmp
and
adc
ficom
pop
and
or
push
lds
cmps
push
sub
fwait
xchg
pusha
xor
mov
jo
movs
mov
xor
stos
inc
(bad)
sahf
sub
scas
das
xchg
inc
and
mov
mov
push
mov
lea
mov
cmps
inc
push
out
mov
xchg
retf
pop
or
add
fwait
jmp
xchg
sti
xchg
push
ss
cmps
adc
lds
(bad)
sub
dec
dec
add
pop
popf
ss
and
scas
jecxz
jo
cmp
sahf
pop
fwait
xorps
xor
mov
(bad)
xor
mov
sub
mov
mov
push
xor
mov
xor
div
push
add
(bad)
push
fsubr
sub
dec
inc
sub
rcr
jnp
stos
call
push
out
pop
sbb
sub
test
add
xor
mov
cmp
lahf
test
sbb
xor
xor
out
jns
jno
js
inc
jg
stos
xchg
xchg
or
push
mov
leave
xor
inc
stos
xor
xor
inc
push
mov
xor
dec
xor
adc
or
jnp
dec
push
mov
cmps
and
cs
add
xor
or
or
push
pop
cmps
test
movs
mov
cmp
mov
movs
inc
cmps
cmp
add
mov
addr16
arpl
movs
scas
cmp
push
jo
and
or
mov
out
loop
test
cmp
sub
xor
(bad)
mov
das
pop
daa
add
daa
dec
cmp
mov
cmp
ss
or
(bad)
cmp
dec
pop
rol
or
xor
ret
and
scas
es
das
push
push
mov
mov
cmp
xchg
xchg
pop
and
cmps
or
pop
(bad)
mov
das
fwait
imul
push
int3
pop
cmp
mov
adc
js
cmp
sbb
imul
dec
pop
pop
xor
or
push
rol
arpl
(bad)
mov
dec
out
retf
xlat
cmp
rol
rcl
sbb
inc
sub
mov
add
rcr
push
ins
cmp
fisub
out
pop
ins
mov
mov
mov
aaa
fwait
sar
pop
mov
pop
jg
adc
xlat
test
mov
lods
lahf
(bad)
xor
ficomp
mov
xlat
sub
mov
mov
es
out
pop
inc
sbb
cmps
inc
imul
(bad)
sti
jnp
xchg
jo
mov
lods
mov
or
shr
pop
lods
rcr
push
mov
or
sbb
iret
push
ret
iret
scas
pop
pop
xlat
push
adc
sbb
dec
cs
pop
xor
sub
pop
dec
ret
imul
ins
cwde
shl
shl
push
dec
mov
(bad)
int
adc
sub
jbe
inc
sub
call
aas
cmp
jnp
lods
or
rcr
adc
mov
mov
scas
jmp
imul
inc
out
scas
ja
mov
xor
inc
fimul
xchg
(bad)
mov
mov
jbe
outs
mov
jmp
sbb
daa
xchg
shr
mov
out
mov
mov
xlat
js
pop
inc
jns
sub
test
pop
add
pop
add
inc
lds
daa
dec
sbb
fiadd
xor
dec
sbb
sub
stos
rol
in
sbb
das
pop
add
arpl
inc
rol
inc
adc
jecxz
jmp
retf
fisub
inc
or
push
and
push
push
fwait
(bad)
xchg
pop
aam
jp
sub
mov
idiv
xor
mov
iret
adc
sbb
push
pusha
jb
jae
fld
jnp
xor
add
jmp
pop
repz
pop
dec
bound
adc
mov
xor
das
dec
mov
lods
inc
stos
xor
dec
mov
inc
test
mov
cld
xchg
sbb
dec
or
sbb
add
xchg
pop
iret
jg
inc
adc
sub
and
and
push
inc
pop
add
mov
test
inc
add
idiv
inc
and
xor
add
cmp
xor
sbb
test
or
inc
aaa
outs
and
(bad)
cmp
mov
or
mov
mov
(bad)
inc
scas
sar
or
add
pop
fistp
adc
sbb
add
es
xor
jmp
ds
ds
xchg
or
(bad)
mov
ficomp
(bad)
scas
cmps
xor
movs
adc
mov
xor
xor
and
rcr
pop
(bad)
inc
jnp
lds
cmp
jg
or
or
push
jae
(bad)
push
sbb
push
jecxz
sbb
or
daa
pop
test
or
pusha
xchg
adc
ret
scas
push
pop
and
retf
adc
push
outs
pop
cli
or
push
cli
call
out
sbb
enter
inc
jnp
(bad)
and
loopne
jne
iret
sub
mov
jmp
inc
add
loopne
dec
sub
jbe
pop
inc
je
bound
jo
pop
inc
mov
lds
cmp
stos
sbb
cmp
inc
cmp
lahf
fild
ja
push
xor
out
add
popf
push
or
mov
imul
add
addr16
out
cmp
(bad)
jo
pop
or
sbb
cmps
scas
aad
jne
push
cmp
div
push
stos
fidivr
lds
retf
and
aaa
enter
(bad)
dec
pop
js
mov
jle
pop
jo
or
push
xor
inc
cmps
dec
ss
repz
and
sahf
add
pop
mov
adc
cmps
adc
jbe
popa
xor
inc
push
cs
lods
lods
jne
xor
dec
pop
fbld
adc
xor
mov
inc
ret
or
jmp
jecxz
mov
repz
cmp
mov
pop
inc
out
(bad)
retf
loopne
sbb
dec
out
and
lods
inc
aaa
ds
jp
mov
push
popa
sbb
popa
inc
lahf
arpl
fist
ss
xor
cmp
or
or
mov
pop
xchg
mov
mov
sub
mov
scas
(bad)
shl
add
ret
mov
xor
jmp
retf
mov
xchg
shl
dec
jp
mov
fbstp
pusha
jb
add
inc
test
add
xchg
mov
add
adc
push
repz
sub
pusha
mov
sub
mov
iret
imul
pop
and
dec
cli
mov
or
push
lds
es
out
cmps
cmp
xor
push
bound
xor
dec
fld
push
cmp
xor
cmp
jl
in
rol
mov
add
scas
xor
fisttp
dec
and
or
inc
dec
inc
and
push
das
in
pop
mov
inc
pop
cmp
cmps
xchg
movs
add
lahf
sub
shl
cmp
jmp
xchg
cmp
cs
sub
sub
in
rcr
(bad)
sbb
push
jae
(bad)
cmp
jp
lahf
stos
ss
jnp
sbb
outs
mov
adc
push
ficomp
popw
xor
jmp
push
ja
(bad)
jecxz
fbstp
jmp
ja
add
xchg
repz
mov
xor
add
mov
jb
out
mov
push
or
inc
mul
cmp
add
xor
add
movs
sbb
ret
and
xor
sub
mov
jg
or
popa
and
sbb
mov
pop
dec
sbb
add
lahf
hlt
rcl
mov
xchg
mov
ret
adc
mov
sub
mov
mov
adc
out
nop
(bad)
mov
push
and
mov
pop
leave
xchg
cmp
add
cmp
js
loop
aas
cmps
(bad)
xlat
adc
pop
jge
mov
or
push
xor
ja
sar
inc
outs
bound
or
inc
aaa
xor
adc
jmp
dec
and
sub
push
lea
mov
xchg
div
mov
ret
pop
sahf
pop
dec
rcl
xor
push
push
sbb
jmp
leave
mov
inc
jmp
out
cmp
push
xchg
add
pop
es
adc
(bad)
(bad)
and
and
(bad)
sbb
sbb
mov
and
inc
mov
je
fcomip
cmp
pop
aaa
pop
pop
adc
mov
cmp
mov
push
fild
je
sub
daa
addr16
sti
ret
shl
aaa
ret
and
push
out
scas
mov
mov
mov
and
imul
repz
pop
mov
ret
xor
inc
xlat
inc
pop
bound
test
repz
ja
mov
dec
ret
jb
das
pop
add
cmp
sub
xor
aad
add
aam
pop
jb
sub
arpl
xlat
sbb
mov
mov
mov
mov
mov
jbe
xor
inc
(bad)
cmp
mov
(bad)
or
sti
shl
sub
mov
sbb
repz
pop
mov
aam
lods
xor
push
xor
loop
stos
mov
enter
movs
add
pop
rol
or
xchg
scas
or
jecxz
pop
outs
inc
ret
add
dec
mov
inc
dec
dec
inc
arpl
cmp
ja
fbstp
pop
ret
jb
pop
inc
out
xchg
mov
ret
and
sti
inc
inc
dec
outs
pop
mov
dec
add
fld
popf
xchg
mov
daa
adc
jecxz
add
inc
lock
rcl
pop
ds
aas
test
pop
xor
mov
mov
stos
cs
rcr
mov
inc
fild
jno
retf
inc
mov
sub
cmps
(bad)
mov
mov
rol
das
cmps
add
and
add
push
jb
cmp
ss
lods
adc
dec
push
push
shl
pop
add
xor
sbb
popa
inc
sub
push
pop
ror
mov
or
mov
mov
out
xchg
enter
and
sbb
or
or
push
pop
jg
cmp
cmp
cmps
mov
or
or
or
or
xor
(bad)
or
adc
or
adc
pop
push
cmp
jae
jne
pop
or
sub
and
or
imul
ins
aas
or
pop
sub
neg
fidiv
addr16
es
iret
repz
push
das
or
cmp
dec
sbb
cmp
inc
push
add
xor
or
pop
cmp
dec
cmp
dec
cmps
ds
stc
push
mov
dec
ds
push
push
out
jnp
push
mov
sbb
push
add
dec
push
inc
jo
rcl
inc
push
mov
push
or
sub
jnp
jne
and
mov
sub
outs
pusha
and
add
sub
sbb
fidivr
and
xor
dec
mov
psadbw
cs
movs
ret
add
imul
sub
loop
dec
retf
cmp
dec
adc
push
adc
sub
ds
(bad)
pfcmpgt
ds
sub
aas
pop
sahf
xor
test
xlat
push
sub
sub
js
push
sub
rcr
cmp
adc
dec
out
xchg
sub
jne
mov
dec
push
loope
jno
cmps
xchg
dec
popa
push
jne
dec
mov
push
xlat
retf
pop
mov
cmp
mov
jmp
and
out
test
psllq
in
sbb
adc
sub
inc
stos
shr
arpl
inc
xor
call
ss
rol
pop
aaa
jbe
xchg
mov
jbe
xlat
or
arpl
mov
dec
and
inc
or
cmp
pop
cmp
cs
xor
lock
mov
and
inc
cmp
outs
pop
xlat
sbb
xor
add
cmps
mov
retf
aas
push
add
inc
cmp
push
mov
sub
adc
shr
xlat
sbb
es
xchg
mov
test
and
bound
inc
pushf
fidiv
retf
sbb
sbb
stos
push
(bad)
in
jle
aas
push
inc
mov
fist
dec
aaa
stos
xor
xor
or
push
rcl
pop
popa
stos
sub
fucomi
jmp
xchg
retf
xlat
arpl
sub
push
aaa
sub
pop
mov
das
sub
sub
out
imul
add
cmp
push
mov
sbb
adc
mov
jo
ror
sbb
mov
or
call
pop
enter
iret
aas
pop
adc
add
cbw
add
pop
adc
sub
sbb
ins
push
pop
sub
push
lods
and
xor
jmp
iret
push
adc
and
mov
push
or
pop
fld
das
pop
daa
inc
pop
and
inc
jl
cs
xor
or
xor
pop
ja
mov
repz
mov
les
fwait
cmp
and
inc
push
pop
xor
outs
xor
sbb
sub
mov
push
xchg
dec
push
(bad)
ficom
(bad)
push
jg
jecxz
sar
fwait
adc
pop
inc
inc
out
inc
jo
scas
daa
mov
sbb
jmp
cmp
ret
fimul
shl
cmp
sub
pop
jmp
repz
les
dec
xchg
or
sub
int
pop
cwde
jg
fistp
push
sub
sub
pop
sbb
scas
test
loope
fdiv
cmps
imul
cmp
sbb
arpl
fstp
sub
lea
fwait
xor
sahf
arpl
push
sub
xor
sub
mov
xchg
aas
scas
mov
lods
and
(bad)
jnp
sub
mov
outs
mov
sub
ret
mov
and
xor
imul
and
mov
fs
add
sub
lea
mov
fwait
xchg
adc
cli
cmp
das
push
(bad)
cmps
sbb
add
jecxz
inc
scas
call
sub
fwait
and
mov
mov
(bad)
neg
pop
mov
jno
in
icebp
xchg
fdiv
jecxz
repz
sti
adc
clc
out
cmp
or
pop
fiadd
push
add
mov
inc
cmp
fld
mov
retf
mov
or
jae
scas
retf
sbb
xchg
inc
into
sub
in
dec
test
xor
and
or
das
xor
mov
adc
sbb
add
(bad)
jno
lds
add
es
cmp
inc
sub
fistp
fld
jne
pop
out
cmp
adc
pop
xor
xchg
cmp
loopne
(bad)
mov
sub
or
ud0
mov
stos
lock
xor
xchg
sub
cmps
inc
and
jmp
dec
mov
mov
stos
push
or
mov
adc
add
sar
xchg
jo
add
js
and
inc
add
cmp
cmp
in
das
cmp
pop
pop
ret
xor
inc
inc
push
push
jecxz
ret
arpl
sub
or
pusha
adc
cs
add
ret
sahf
xchg
retf
inc
pushf
imul
in
cmp
and
inc
stos
cmp
and
jae
inc
arpl
xlat
push
mov
inc
push
adc
(bad)
sub
lahf
or
add
cs
das
xor
not
test
add
jo
xchg
or
ja
sbb
xor
out
or
xchg
jo
pop
inc
jnp
add
ja
push
ret
cdq
xor
and
xor
mov
jnp
sbb
mul
dec
xlat
pop
adc
rcl
push
(bad)
mov
dec
mov
sbb
ins
scas
mov
pop
or
loopne
fdiv
sub
outs
aas
jnp
fs
add
lods
(bad)
aam
jbe
ja
ret
in
jae
bound
loopne
fbstp
or
int3
adc
cs
pop
push
push
popa
aaa
cs
(bad)
jae
mov
sbb
inc
add
adc
arpl
lods
push
adc
cmps
mov
rcl
xor
scas
jge
sbb
jb
jp
sub
(bad)
daa
movs
add
cmp
daa
xor
sub
mov
mov
adc
rol
add
jnp
cmp
loope
cmp
out
ret
cmp
dec
mov
ds
xchg
lahf
push
cmp
push
lea
mov
sub
dec
ss
mov
dec
xchg
mov
das
xor
mov
retf
inc
adc
adc
and
adc
sbb
ss
das
adc
cmp
inc
(bad)
cmp
pop
and
sub
xor
push
aas
and
jb
arpl
cmp
sub
rol
pop
or
ret
sbb
sub
push
xor
or
call
mov
inc
sbb
mov
dec
aas
fidivr
stos
push
mov
add
inc
xchg
jp
and
das
ja
add
fstp
add
es
out
dec
jno
imul
js
jecxz
jecxz
sub
xor
lds
add
xchg
sbb
sub
lds
sbb
cmp
test
stos
out
xchg
(bad)
fadd
cmp
lods
adc
cmps
adc
jb
iret
inc
sub
sub
sub
loope
adc
retf
jg
sub
(bad)
out
pop
shl
pop
dec
arpl
daa
xor
(bad)
jmp
sbb
imul
dec
fwait
adc
xchg
xlat
ja
nop
test
xchg
xchg
jle
mov
mov
mov
dec
push
push
or
push
ss
sub
inc
leave
mov
adc
adc
aam
and
and
ins
gs
lock
adc
push
lock
xchg
adc
aas
dec
pop
and
dec
or
shr
mov
outs
inc
inc
je
push
jmp
push
outs
push
gs
xchg
jnp
scas
jge
imul
gs
outs
imul
in
dec
popa
mov
inc
ins
outs
bound
js
arpl
fidiv
inc
ins
xor
dec
jne
cmp
or
jbe
ins
jo
arpl
push
add
inc
or
cwde
cdq
ins
mov
cmps
out
out
xor
inc
adc
xor
dec
sbb
inc
lea
xor
push
mov
xchg
imul
(bad)
push
jbe
dec
(bad)
ins
outs
jne
sbb
gs
push
pusha
iret
push
pop
jb
and
dec
gs
push
in
pusha
inc
sub
inc
outs
jne
dec
popa
ins
in
or
iret
adc
push
sbb
ins
push
add
sbb
repz
mov
jae
push
pop
mov
dec
ja
ja
je
bound
or
jne
mov
sbb
jae
pop
push
shl
sub
pop
fcmovne
jo
lods
push
sar
js
rcr
push
ins
out
outs
fmul
mov
shl
cmp
jb
jae
pop
push
rol
test
lahf
mov
cmp
test
sbb
inc
jns
push
ss
and
pop
outs
adc
jne
dec
out
adc
or
mul
jnp
jmp
pop
test
push
push
jno
or
jns
adc
cs
movhps
adc
shr
jae
retf
movs
dec
or
jb
push
ins
repz
inc
push
mov
pop
push
inc
div
xchg
push
xor
dec
mov
pop
(bad)
inc
mov
inc
inc
sbb
bound
dec
movs
dec
xor
xor
in
jo
in
or
dec
mov
stc
gs
into
mov
adc
mov
jle
aam
mov
add
mov
ror
xor
add
sbb
shl
outs
hlt
hlt
cwde
push
push
je
ja
cmp
mov
cmp
dec
push
das
js
dec
add
sbb
lods
cmp
dec
mov
ret
jnp
scas
xor
sbb
outs
sar
mov
aad
rcl
pop
jmp
inc
lea
mov
or
rol
and
adc
aas
sbb
push
sub
mov
lods
pop
shr
cmp
outs
popw
push
popa
or
add
out
aad
xor
imul
jecxz
push
sub
xchg
jae
add
ret
jbe
cmps
inc
jns
js
mov
and
stos
test
jns
sbb
sbb
sub
push
loopne
or
in
jo
stos
mov
sbb
dec
xchg
outs
test
popa
fdecstp
xor
adc
xor
arpl
push
dec
dec
xchg
jne
or
inc
dec
sub
mov
xchg
je
inc
sbb
lods
cmp
je
rol
loop
xor
add
pop
mov
scas
mov
ret
movs
sbb
and
inc
push
jle
pop
mov
enter
add
and
ja
aas
(bad)
push
sub
adc
test
movs
cmp
inc
neg
outs
mov
fnstenv
loope
push
xchg
outs
ja
inc
inc
adc
mov
push
mul
fs
fimul
adc
add
scas
pop
outs
mov
push
ja
push
push
outs
fdiv
outs
or
mov
imul
pop
mov
jg
rcl
pop
fwait
adc
mov
jbe
add
nop
mov
pop
adc
pop
inc
loope
cdq
dec
or
mov
push
addr16
retf
dec
adc
movs
inc
push
not
outs
imul
and
or
in
das
xor
pop
adc
movs
sub
cmp
and
shl
inc
jne
data16
imul
add
push
adc
xchg
and
lock
jno
inc
xchg
mov
jmp
adc
out
and
adc
in
sbb
es
movs
sbb
pop
pop
mov
jmp
or
outs
imul
add
inc
jns
mov
mov
icebp
push
sub
push
pop
cwde
retf
mov
jne
pop
xor
jns
and
or
retf
jo
cs
popa
inc
mov
js
mov
sub
les
add
ret
in
add
bound
cmp
ins
jnp
ins
jno
inc
cmps
sbb
mov
sbb
sub
ins
jae
sub
dec
push
sbb
(bad)
fidiv
cmp
frstor
out
je
sub
pop
sahf
sbb
aam
xor
inc
pop
push
jb
or
imul
bound
inc
imul
jb
adc
inc
pusha
ja
mov
pusha
cs
jae
sub
pop
jge
dec
add
stc
cmp
push
in
mov
xor
aad
sub
xor
repz
ss
outs
inc
cmps
mov
imul
mov
fdiv
pushf
and
dec
aaa
and
sbb
inc
and
xor
je
ret
fs
cmp
xor
daa
sbb
inc
je
inc
jmp
adc
sbb
inc
mov
and
adc
or
inc
push
lods
jo
ret
(bad)
outs
mov
jl
or
adc
stos
les
add
in
add
sub
(bad)
xchg
inc
(bad)
xchg
jbe
loope
mov
or
dec
fs
sbb
add
jb
jp
ins
cli
and
pop
xor
loopne
inc
daa
mov
test
fistp
dec
mov
mov
es
lahf
mov
mov
inc
xchg
or
loope
adc
fmul
and
add
pop
bound
shl
or
push
push
sub
and
adc
ins
stc
add
sar
inc
inc
jb
lods
fst
pop
dec
add
stos
shr
jno
and
xchg
or
pop
pop
cli
ins
dec
outs
dec
cmp
daa
popa
push
xchg
push
cmps
test
sbb
and
and
pusha
or
and
or
dec
daa
cmp
dec
xor
fiadd
push
lods
sbb
ds
inc
sbb
inc
add
add
add
dec
shl
mov
dec
xor
dec
ror
push
lods
mov
inc
enter
and
inc
pop
lock
inc
jb
into
jle
js
mov
fstp
or
add
inc
jb
inc
outs
dec
push
retf
outs
mov
add
mov
fld
push
xor
mov
inc
cs
xchg
les
xor
popf
enter
nop
jnp
push
daa
pop
push
das
jmp
outs
push
enter
enter
cld
pusha
ins
mov
lahf
js
add
jecxz
jo
inc
fst
pop
add
outs
sti
sub
shl
lds
add
and
lea
mov
sbb
popf
ss
mov
or
int3
sbb
rol
pop
jnp
(bad)
mov
fs
loopne
dec
cmovg
mov
jae
mov
std
daa
inc
ins
test
hlt
push
pmulhuw
inc
mov
pop
daa
cmps
push
sbb
or
pop
pushf
fcom
test
lds
inc
adc
push
outs
add
cmps
lds
fdiv
call
pusha
shl
dec
xor
and
mov
daa
dec
sub
ss
ins
sbb
test
sbb
jbe
arpl
sub
rcr
xor
jo
(bad)
cli
inc
jae
adc
push
jae
call
int3
jne
rcr
sbb
dec
je
lods
mov
mov
fisub
push
add
fidiv
pop
fcmovnbe
adc
adc
xchg
adc
or
ret
dec
add
stos
add
das
or
xchg
rcl
aad
lock
or
or
(bad)
fs
mov
lds
cmp
ins
pop
popa
aas
sbb
mov
ret
cmp
add
sbb
xor
sahf
adc
jo
int3
xor
std
cmp
pop
mov
sbb
js
jns
sbb
lods
or
pusha
in
push
addr16
mov
jbe
cmp
inc
mov
lods
mov
je
pop
inc
sub
mov
cmp
jnp
lods
jecxz
pop
fcomi
nop
cmps
test
jno
jb
mov
pop
jo
ja
push
fiadd
(bad)
and
mov
cmp
add
mov
test
xor
outs
mov
sub
jae
lahf
repnz
mov
loopne
je
jo
fld
pop
mov
mov
ds
mov
jo
gs
jbe
push
mov
shl
cmp
add
test
inc
(bad)
fimul
inc
daa
cld
fs
adc
into
sub
mov
mov
cmps
mov
in
ret
call
je
push
add
push
add
inc
sbb
adc
or
and
or
and
cmp
imul
pop
add
(bad)
(bad)
jmp
push
lock
add
lock
lock
adc
push
adc
sbb
(bad)
(bad)
call
pop
lock
push
aaa
push
adc
push
or
sub
cmp
adc
sub
adc
cmp
mov
(bad)
call
xor
pop
or
push
push
sbb
and
or
das
adc
or
test
or
(bad)
(bad)
call
adc
or
or
xor
and
dec
and
or
lock
add
popa
add
scas
mov
or
outs
sbb
or
(bad)
call
mov
dec
or
pop
fsub
dec
adc
mov
add
lock
(bad)
std
(bad)
dec
arpl
test
pop
jmp
push
or
push
sbb
addr16
pusha
jb
pop
dec
cmp
loopne
(bad)
jmp
inc
es
inc
sub
and
push
adc
sbb
(bad)
in
jmp
push
adc
adc
or
fdiv
mov
das
xor
pop
push
push
pop
sbb
fstp
jg
or
sbb
or
sub
(bad)
(bad)
jg
or
cmp
inc
push
and
push
or
push
mov
push
or
(bad)
fdivr
xor
add
adc
cmp
test
das
pop
sbb
jmp
and
pop
sbb
and
test
and
adc
std
xchg
es
sub
dec
jae
jmp
(bad)
(bad)
push
in
lock
dec
or
sub
add
xor
adc
cld
int
call
mov
jmp
adc
dec
pushf
pop
jb
cmp
and
es
push
adc
push
inc
sub
inc
sbb
dec
push
ins
or
lock
cmp
nop
xchg
xchg
scas
ja
push
adc
and
or
arpl
push
icebp
mov
or
or
add
lock
loop
sbb
(bad)
dec
and
or
aam
add
pusha
sbb
adc
mov
adc
mov
xor
xchg
loopne
or
pop
sbb
add
push
and
adc
sub
push
sbb
sbb
adc
mov
or
push
mov
pop
fistp
push
or
and
and
mov
lock
push
test
adc
jge
dec
sub
sub
cmp
lock
sbb
xchg
or
inc
daa
lock
les
pop
pop
pop
push
stos
(bad)
loope
sbb
and
pop
adc
xchg
shl
ret
dec
syscall
or
pop
adc
sbb
mov
jg
or
push
push
or
adc
jnp
pop
sbb
adc
sub
sbb
fistp
and
rol
adc
or
xchg
or
sbb
and
pop
sti
jg
mov
sub
and
sub
sbb
push
aas
clc
outs
adc
stos
push
or
or
lock
or
or
sbb
adc
ror
or
or
shl
ret
dec
fs
cmp
(bad)
add
mov
sbb
xor
inc
pop
or
mov
mov
adc
fcmovnu
jecxz
femms
into
add
das
mov
sar
jo
dec
scas
adc
das
or
sbb
adc
retf
mov
adc
aas
dec
xor
jg
and
and
push
fs
and
or
loopne
sbb
sub
xor
adc
or
mov
mov
pop
and
aaa
das
sub
sub
sub
sub
daa
xlat
pop
cmp
jns
(bad)
(bad)
sub
test
inc
sub
aaa
push
pop
push
scas
sbb
in
xlat
mov
add
adc
mov
add
and
adc
or
clc
or
rcr
or
and
fidivr
adc
add
xchg
scas
jge
sbb
movs
or
outs
ja
out
mov
or
or
adc
pop
mov
mov
inc
pop
dec
cs
pop
or
adc
xor
dec
xchg
sbb
adc
clc
sub
lock
adc
adc
(bad)
call
cmps
add
sbb
sbb
and
test
push
jbe
dec
icebp
pop
mov
inc
lods
pop
pusha
pop
adc
adc
sbb
jl
(bad)
fistp
push
out
arpl
mov
push
xchg
add
mov
mov
push
adc
inc
jo
imul
inc
xor
push
sub
or
xor
ret
jge
(bad)
pop
add
cvtps2pd
push
mov
sbb
inc
sbb
lock
add
sub
and
push
dec
pop
mov
adc
xor
inc
push
sub
inc
fs
scas
adc
push
adc
sub
scas
clc
outs
fsubr
add
inc
push
pop
fdivr
or
dec
xor
sbb
add
adc
dec
pop
movs
or
pushf
or
(bad)
or
or
and
sub
inc
push
hlt
mov
das
jl
adc
dec
cmp
or
and
sbb
ins
lds
pop
or
cs
and
and
sbb
cmp
inc
sub
and
push
sti
inc
or
sbb
ins
adc
add
dec
or
xchg
ins
jne
inc
pop
mov
jp
aaa
call
movs
adc
push
sbb
xor
cmp
sub
or
or
jne
jg
call
push
push
lock
je
or
call
sbb
add
jecxz
push
add
and
dec
adc
mov
dec
xor
add
xor
xor
pop
sbb
push
xor
sub
lock
add
cmp
lock
pop
pop
outs
outs
(bad)
call
jb
jns
sbb
xor
push
jl
sub
push
push
mov
add
scas
clc
jmp
outs
cmp
or
sbb
and
repz
pmulhuw
add
aad
cmp
pop
lock
add
aad
movs
cmp
push
sub
movs
adc
push
sbb
cmp
sub
je
mov
or
add
pop
inc
mov
push
lock
dec
dec
sbb
pop
das
xor
or
lock
add
mov
sar
lock
add
lock
mov
add
pop
inc
pop
adc
add
xchg
pop
fidivr
fisttp
subps
sbb
sbb
and
inc
or
xchg
ss
xchg
or
dec
add
lock
add
(bad)
jmp
lock
or
lock
or
and
sbb
jmp
mov
bound
xor
add
sbb
xor
or
cmps
cmps
sub
mov
adc
aaa
cwde
add
or
and
sbb
clc
adc
jno
dec
loop
adc
xor
or
pop
outs
or
daa
or
ss
mov
or
syscall
pop
xor
pminsw
in
mov
pop
into
or
or
add
pusha
and
xchg
sub
adc
out
add
inc
jl
or
or
xor
pop
or
add
jl
mov
sub
sbb
das
or
inc
mov
call
pop
and
add
ret
inc
or
test
clc
aaa
or
sbb
pop
add
scas
add
jg
retf
push
inc
add
lock
add
js
std
cmps
aas
cli
and
add
js
js
pop
sub
or
adc
sbb
sub
mov
adc
daa
or
and
ret
mov
out
adc
and
dec
pop
in
pop
xchg
fs
lock
adc
in
mov
or
test
mov
mov
cli
pop
(bad)
dec
lock
push
add
push
pop
push
cs
pop
add
lock
mov
lock
or
js
add
and
clc
cli
adc
adc
pop
ja
adc
mov
shl
mov
rol
lock
sub
arpl
sbb
loope
pop
jnp
(bad)
push
or
or
lock
mov
ss
sbb
stos
cld
or
ret
int
mov
xor
cmp
lock
cs
mov
adc
add
es
outs
pop
push
inc
jns
or
lock
add
mov
sub
sub
xor
call
adc
inc
(bad)
sub
cmp
jne
sub
aad
out
call
or
adc
jmp
cmp
adc
pop
retf
test
push
adc
mov
or
inc
dec
adc
push
or
aaa
sub
inc
or
adc
shl
icebp
adc
sub
dec
call
add
pusha
nop
add
mov
push
push
xor
imul
pop
push
add
add
loop
sub
or
movs
adc
and
and
mov
dec
sbb
pop
jle
adc
in
or
adc
psadbw
inc
fisttp
push
and
adc
inc
push
mov
cwde
ret
and
push
cld
xor
sbb
sub
sbb
push
push
in
loopne
cld
jg
add
ss
xor
dec
test
adc
mov
mov
fcom
cmp
or
mov
mov
adc
sub
add
pop
adc
fs
jmp
inc
sbb
push
cld
pushf
clc
pop
mov
sbb
aaa
sbb
pop
adc
pop
loop
bound
push
div
daa
sbb
or
or
out
mov
in
push
pop
and
das
xor
sub
and
sbb
aam
fcom
and
sub
xor
pop
sub
cmp
adc
fs
(bad)
sbb
jle
(bad)
fistp
inc
adc
and
lock
inc
mov
jp
fsubr
das
mov
(bad)
cmp
and
jp
sub
inc
adc
sub
js
pop
cmp
lock
sub
fs
fs
inc
jne
add
cli
push
outs
add
daa
ja
push
aaa
cld
add
or
xor
and
loop
jmp
pop
push
adc
dec
test
mov
xchg
ins
lock
mov
ins
mov
add
int3
and
ds
call
and
loop
mov
add
fiadd
inc
fadd
or
xor
das
clc
pop
pusha
adc
or
dec
sbb
outs
jg
pop
xor
aaa
pop
push
or
push
add
mov
xor
sbb
outs
or
or
mov
sub
icebp
not
aas
dec
or
push
or
xchg
or
inc
sub
adc
add
cmp
inc
aaa
sbb
mov
ret
outs
and
add
(bad)
or
jecxz
outs
pop
mov
adc
sub
inc
or
and
imul
adc
or
cmp
pop
outs
pop
hlt
push
scas
push
or
sbb
add
out
add
push
adc
push
movs
jp
mov
add
add
push
ss
add
sahf
dec
dec
ret
sbb
fbstp
or
xor
es
xor
test
pop
and
push
jl
add
ret
adc
and
or
adc
mov
xor
cmp
sbb
inc
sub
pop
and
cld
inc
ins
pop
inc
push
pop
and
add
mov
inc
es
jg
dec
aad
push
test
stos
sbb
mov
popa
pop
(bad)
or
pop
and
pop
add
jno
fdivr
lock
add
add
fistp
xchg
dec
and
push
aaa
sar
add
pop
or
jns
call
cld
mov
loope
bound
xor
or
aaa
dec
adc
cmp
pop
jmp
sbb
adc
lock
clc
adc
jp
and
mov
push
and
in
mov
adc
sbb
push
movups
maxps
jmp
pop
adc
inc
sub
and
or
adc
jmp
or
sbb
and
and
xor
adc
dec
push
adc
and
adc
sbb
pop
sub
jne
(bad)
sub
or
or
lods
adc
push
push
sbb
dec
aaa
sbb
sub
and
sbb
mov
adc
mov
or
(bad)
push
xor
pop
pop
test
xor
sbb
clc
jg
sbb
jle
or
sub
or
pusha
das
cmps
and
xlat
xor
mov
cdq
call
and
ficom
pop
or
or
add
adc
sub
out
pop
sbb
sbb
inc
sbb
popa
push
adc
xor
dec
inc
and
sbb
cmps
shl
push
xor
add
sub
lock
fsubr
(bad)
lods
push
and
inc
pusha
pop
ror
adc
sub
or
add
cmp
shr
mov
adc
or
or
cmp
push
jae
sbb
dec
mov
or
sbb
hlt
test
push
adc
adc
sub
push
das
push
ret
cmps
int
pop
or
in
dec
jo
xchg
dec
and
sar
xchg
stos
test
inc
inc
cmp
fadd
xchg
lods
or
or
jecxz
and
test
cmp
push
mov
jae
imul
adc
fmul
test
and
jl
push
sbb
and
aaa
ins
jg
adc
and
lock
mov
pop
add
lock
(bad)
(bad)
inc
and
inc
sbb
and
adc
movs
push
pop
or
xor
scas
xchg
mov
ja
std
and
lea
sbb
adc
lods
adc
add
aaa
cld
das
mov
jb
xor
pop
push
cmp
lock
out
lock
test
movs
jp
mov
inc
scas
adc
cmps
or
push
mov
jne
stos
outs
sub
or
sub
cld
fdivp
add
mov
add
movs
or
cmp
rol
in
fsubr
sub
push
push
sbb
ret
dec
xchg
adc
push
jp
cmps
call
or
cmp
cmp
clc
and
aaa
std
imul
or
pop
sbb
and
and
jl
jmp
cs
cmp
adc
ss
pop
add
and
sbb
inc
clc
or
or
and
dec
mov
cmp
jl
jle
and
add
pusha
sbb
cmps
and
arpl
push
jl
mov
bound
and
movhps
jmp
xor
or
mov
pop
sbb
add
or
mov
js
sub
push
adc
add
adc
cmp
xor
pop
push
sbb
xor
adc
mov
sub
fisub
mov
push
dec
sub
and
ja
(bad)
out
push
xor
cmp
or
sbb
push
sbb
xchg
outs
xor
and
mov
sbb
dec
xchg
sbb
push
or
and
jo
lea
sub
or
movs
inc
ds
call
inc
adc
nop
sbb
and
or
sbb
or
cld
adc
pop
pop
sub
inc
cmp
cmp
jge
jg
adc
adc
sbb
adc
or
xor
or
pop
in
adc
sbb
fbstp
jp
sbb
inc
sbb
push
pop
mov
rol
repnz
sub
pop
or
adc
fbld
jb
dec
sbb
mov
pop
mov
cmp
push
ucomiss
push
sar
push
cmp
sbb
or
mov
scas
add
push
sub
mov
mov
lahf
adc
dec
sbb
cmp
cmp
and
outs
repnz
cmp
push
xor
push
push
jmp
push
adc
or
sbb
push
push
adc
add
dec
sbb
and
inc
sbb
or
fwait
inc
cmp
mov
sbb
push
pop
and
xor
adc
or
pusha
and
jg
loopne
add
or
mov
pusha
cmp
cwde
ret
loop
mov
pop
ds
adc
ds
aaa
sbb
adc
mov
xor
pop
inc
xor
cmc
idiv
cli
je
add
xchg
push
lock
add
adc
fimul
pop
push
or
inc
adc
adc
add
das
sub
mov
xor
adc
inc
xor
adc
adc
adc
pop
repnz
push
loopne
and
adc
inc
and
sbb
sub
dec
or
mov
pop
sbb
inc
or
pop
or
pop
adc
mov
dec
sub
sub
cmp
out
mov
sbb
xchg
(bad)
(bad)
jg
dec
inc
cmp
adc
cmp
sbb
call
(bad)
(bad)
jg
jbe
sbb
and
sub
and
sbb
sbb
dec
movsx
jmp
addr16
add
sbb
test
inc
mov
(bad)
jg
sti
adc
lock
add
and
and
xchg
sub
sub
cmp
repz
or
or
ror
dec
pop
pop
push
adc
jmp
add
jbe
sub
adc
sub
mov
adc
pop
cmp
xor
jb
xor
inc
mov
dec
sbb
or
adc
es
call
xor
mov
inc
sub
dec
push
xor
jmp
sbb
cs
adc
pop
sub
push
mov
(bad)
dec
push
dec
cmp
adc
or
and
inc
or
adc
call
call
adc
or
adc
or
fild
or
ins
add
mov
push
add
sbb
bndstx
add
cmp
pop
sbb
xor
es
inc
jp
std
neg
sub
sub
cmps
inc
sub
fimul
pop
data16
add
jmp
sar
sbb
adc
xor
cmp
pop
or
cmp
mov
rol
or
cmc
(bad)
lock
ror
or
and
push
out
inc
adc
cmp
outs
js
xor
push
pop
femms
inc
lock
pusha
adc
(bad)
fbstp
push
or
adc
sbb
ja
dec
call
inc
sub
cmp
adc
push
sub
and
and
push
test
push
add
add
lock
push
jl
mov
je
jae
sahf
dec
sub
xor
rcr
xor
movs
ror
(bad)
adc
sub
pop
stos
push
(bad)
mov
mov
add
and
(bad)
push
mov
mov
xor
wbinvd
cmp
pop
adc
mov
jmp
adc
inc
or
(bad)
and
and
sub
jbe
pop
add
loope
scas
shr
cld
mov
sub
pushf
adc
xor
cmps
dec
mov
and
or
push
and
and
or
adc
fcmovnb
cmp
lahf
pop
call
in
mov
jns
and
add
xchg
fwait
mov
or
adc
pop
fcom
or
sbb
mov
push
add
lock
pop
in
inc
xor
and
add
sub
or
adc
or
and
cmps
mov
sbb
or
mov
call
nop
scas
add
sbb
sub
xor
or
repnz
add
and
aam
push
xor
xor
movs
mov
lock
pop
jb
jp
and
add
push
pop
pusha
stos
push
adc
test
lock
retf
inc
mov
xor
in
(bad)
xchg
lock
mov
test
test
mov
test
sbb
or
ja
mov
or
sub
mov
jnp
jnp
and
aam
sbb
cmp
sbb
and
adc
xchg
fucomip
outs
daa
or
lock
xor
ja
scas
test
adc
in
mov
xor
push
or
xor
adc
nop
cwde
add
xchg
and
pusha
sub
push
add
inc
dec
fsqrt
add
push
jmp
outs
add
jle
test
add
adc
add
scas
mov
xor
dec
inc
(bad)
aas
getsec
pop
sub
shl
mov
in
fiadd
push
add
or
add
push
xchg
and
add
adc
ins
fadd
and
cmp
xchg
push
das
inc
push
inc
das
jbe
add
les
cs
push
mov
add
and
add
and
add
mov
cmps
and
push
mov
inc
sar
mov
add
fwait
ret
out
push
or
ror
dec
jmp
xchg
addr16
dec
add
shr
pop
out
repz
lahf
jb
jb
ja
dec
adc
adc
dec
out
cmp
jno
xchg
cmps
jno
sbb
mov
dec
sub
adc
popa
add
mov
push
xchg
and
inc
add
add
add
push
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
int3
lods
pop
add
lods
pop
add
cli
inc
add
add
sbb
or
inc
add
arpl
or
add
cld
xor
add
add
