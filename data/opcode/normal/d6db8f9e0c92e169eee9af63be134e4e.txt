xchg
into
cmps
addr16
and
xchg
or
add
add
mov
add
inc
dec
mov
adc
rol
pop
xor
mov
ins
fcmovnu
and
jne
dec
enter
lds
jo
sti
mov
hlt
sbb
xor
dec
rcl
mov
or
and
mov
add
leave
outs
add
sbb
addr16
jle
jno
iret
mov
jae
rcl
pop
fmul
inc
dec
xchg
pop
rol
in
lods
scas
pop
call
push
repnz
pop
jmp
xor
jns
mov
stos
(bad)
arpl
adc
hlt
sub
movs
adc
inc
mov
(bad)
out
sub
inc
cmp
xchg
sub
inc
mov
shl
popa
cmp
inc
sbb
inc
dec
and
(bad)
mov
imul
lahf
int
lds
fadd
mov
adc
out
push
sbb
inc
sar
leave
int3
sbb
std
call
sub
inc
mov
mov
mov
fs
cmp
sub
pop
xchg
out
imul
xor
fmul
inc
ins
and
push
inc
dec
shl
lods
mov
or
repnz
xor
mov
jnp
loop
mov
xchg
inc
mov
or
or
popa
popa
cdq
add
push
rol
imul
sub
jmp
int3
popf
and
cmps
lds
add
cmp
in
inc
cmp
(bad)
stos
adc
dec
pop
sub
or
add
enter
push
sti
(bad)
sbb
add
fisub
repz
and
nop
pop
data16
ja
sbb
push
mov
mov
add
int3
inc
inc
or
dec
xor
mov
popf
xor
dec
push
repz
fwait
jle
jl
cmc
mov
fstp
jbe
mov
jp
(bad)
and
jnp
sbb
pop
cdq
adc
adc
into
daa
das
pop
movs
into
ja
loope
loop
fadd
mov
out
add
mov
fldcw
daa
mov
inc
(bad)
call
scas
stc
loope
movs
mov
lods
cli
jo
pop
fimul
int
mov
mov
mov
xor
cmps
fmul
outs
arpl
cmp
jg
icebp
cmp
pop
or
(bad)
mov
jno
sbb
add
xor
mov
outs
cwde
ss
iret
mov
movs
fsub
ficom
fs
xlat
sbb
les
inc
dec
das
adc
xchg
cmp
daa
mov
movs
cdq
cdq
lods
sub
in
or
das
imul
stos
sbb
add
push
jae
pop
fild
aam
icebp
jne
(bad)
cmp
sub
add
shl
inc
dec
push
ror
das
sbb
sub
mov
cmps
jge
and
xchg
pop
mov
out
xchg
cmp
enter
jecxz
es
adc
mov
add
into
inc
and
xor
nop
ss
xchg
dec
mov
xchg
popf
dec
stc
fnstsw
mov
arpl
sbb
cmc
neg
and
dec
xor
jns
mov
sbb
mov
dec
test
pop
es
jecxz
mov
push
cmp
mov
mov
and
fsubp
xchg
inc
mov
push
int
or
adc
imul
and
sbb
fmul
(bad)
out
jo
xbegin
arpl
icebp
push
out
aas
js
faddp
pop
mov
adc
inc
mov
addr16
mov
mov
add
in
push
cmps
cmps
imul
adc
shl
jo
repz
ud1
mov
pop
cmps
add
retf
mov
lea
ds
imul
stc
adc
repz
(bad)
sbb
loop
std
jne
cmp
jnp
mov
data16
cld
xchg
sahf
leave
fwait
loope
dec
(bad)
mov
push
cmp
push
xchg
ja
mov
shl
rcl
pop
or
cmp
and
shr
aam
in
aaa
repnz
or
inc
add
popa
stos
lahf
mov
icebp
or
adc
arpl
pop
enter
xchg
jmp
mov
(bad)
sbb
idiv
xor
rcr
mov
add
retf
js
push
mov
or
or
loopne
mov
popf
xchg
shl
loope
mov
out
cmp
inc
adc
cmps
mov
sub
sub
push
popa
or
aaa
test
mov
stc
dec
hlt
pop
jp
ds
aaa
iret
or
jmp
mov
cmps
cmp
imul
sbb
inc
jmp
fbstp
jnp
(bad)
cmp
pop
adc
mov
retf
push
push
int
jge
fwait
jg
movs
outs
mov
pusha
cld
sbb
fisttp
inc
fidiv
call
cmp
frstor
jns
movs
call
and
add
pop
inc
mov
inc
push
add
lea
ss
sbb
jp
lock
push
mov
adc
pop
gs
push
push
dec
xchg
and
das
mov
cmp
repz
jnp
aad
movs
sbb
imul
xor
sub
pushf
ficomp
int3
pop
ret
div
mov
fstp
fldenv
adc
sbb
add
push
or
mov
shl
jmp
cmp
lahf
inc
push
jbe
dec
and
inc
add
mov
dec
mov
push
xchg
or
push
nop
xor
pop
add
setge
js
adc
lock
mov
and
jb
stc
in
cmp
shr
cmps
xchg
cmp
cli
mov
xchg
mov
fisubr
out
sbb
cmp
pop
shr
add
xchg
je
add
cmp
xchg
hlt
cdq
imul
mov
scas
out
mov
add
cmps
movs
jmp
push
dec
call
in
add
fcmovnbe
xchg
push
and
mul
push
mov
(bad)
out
mov
lmsw
daa
jnp
mov
jl
add
mov
(bad)
fwait
cmc
cmps
shl
sbb
das
in
or
popf
add
fsubr
mov
push
push
adc
shl
icebp
sbb
push
popf
dec
sbb
and
ret
mov
mov
sbb
pop
push
cld
xchg
mov
jl
mov
fwait
std
sub
push
ficom
out
arpl
aad
sbb
fcmovb
dec
(bad)
cli
sbb
push
shl
add
out
jbe
aas
mov
in
or
push
out
cld
in
mov
push
jl
aaa
cmp
out
lds
js
call
and
sbb
sub
dec
jne
fstp
mov
jo
xchg
movs
mov
sbb
or
ja
sbb
lods
repnz
ret
mov
inc
addr16
xchg
mov
rcl
cmp
push
imul
dec
stos
adc
fdiv
xchg
std
dec
push
or
enter
cmp
ficomp
sbb
stc
sbb
int3
mov
jbe
jl
cs
pop
xchg
push
add
cmc
or
pop
not
out
pusha
push
push
scas
jecxz
jmp
dec
cmps
cmc
lods
jns
(bad)
retf
pop
and
adc
pop
in
jg
xchg
mov
neg
xchg
fist
ret
and
scas
repnz
cmp
lahf
pop
push
cmp
stos
cmp
clc
int
push
sahf
jmp
or
js
jge
out
jecxz
dec
hlt
sbb
retf
(bad)
je
in
pop
and
push
cli
fisub
shl
cmp
jbe
mul
icebp
clc
mov
xchg
fs
jmp
lods
pop
pop
outs
(bad)
mov
add
arpl
jmp
mov
(bad)
(bad)
cmp
jmp
inc
test
mov
inc
cwde
js
mov
adc
(bad)
nop
sub
int3
sti
data16
xchg
ins
fist
and
adc
push
xchg
rol
loopne
mov
ins
push
je
fimul
add
mov
fisttp
iret
out
stos
push
sbb
cli
les
adc
sar
les
out
cmp
stos
dec
mov
clc
ja
dec
mov
adc
adc
rcr
inc
lea
daa
or
push
int
mul
or
inc
cli
test
jbe
cmp
xor
cmp
xchg
or
ffreep
popa
xchg
inc
xor
arpl
scas
push
(bad)
cmp
jbe
retf
inc
stos
lea
push
ins
xor
mov
movs
es
dec
push
ret
xor
adc
(bad)
sbb
and
cmp
ds
sub
cmp
fmul
and
pop
jmp
(bad)
stc
sti
pop
inc
test
int3
inc
dec
sub
adc
adc
int3
out
adc
adc
fs
cmp
sbb
mov
bound
int3
rcl
and
jns
mov
cmp
push
retf
push
cmps
out
stos
or
xor
fidiv
out
dec
and
ficom
rcl
pusha
add
mov
lahf
out
ss
into
and
jns
mov
je
dec
out
and
dec
push
mov
adc
iret
dec
call
or
sbb
mov
sbb
and
inc
adc
mov
pop
sbb
mov
inc
mov
ret
(bad)
cmp
push
gs
retf
inc
ficom
push
fldenv
mov
ror
sub
xor
add
loope
or
shl
jae
sbb
lahf
fwait
ror
mov
cmp
addr16
mov
fsub
xchg
cli
jmp
les
adc
test
enter
xor
das
lods
sub
fucom
pushf
out
les
or
xor
pop
xchg
inc
dec
xor
ret
shl
mov
push
push
jbe
ret
outs
lds
call
cmc
in
sbb
sbb
cs
stc
jl
xor
nop
cld
(bad)
push
sbb
push
mov
mov
pop
and
mov
adc
and
es
cmp
(bad)
pop
add
mov
cdq
or
and
mov
into
cmp
xor
les
(bad)
cmp
(bad)
lahf
and
hlt
fidiv
push
iret
cld
je
xchg
iret
jl
pop
fisub
xlat
arpl
or
mov
nop
(bad)
inc
fistp
pop
cmp
sbb
outs
shl
leave
cmp
or
sub
and
js
sbb
loopne
or
jmp
pop
jl
mov
shr
and
cmc
stc
addr16
mov
lods
aam
xor
or
(bad)
cmp
sbb
ret
jnp
clc
out
ja
mov
mov
addr16
and
rcl
dec
repz
jno
add
hlt
pusha
mov
pop
dec
sbb
sub
js
(bad)
cmc
and
aam
mov
xchg
les
call
fist
and
stos
arpl
into
mov
dec
cmc
xchg
(bad)
div
mov
mov
addr16
outs
stos
add
je
dec
fnsave
(bad)
cs
jo
ins
test
out
das
xchg
retf
xor
mov
xchg
adc
dec
inc
adc
sbb
int3
mov
mov
fadd
inc
test
xchg
les
sar
bnd
and
daa
push
dec
nop
mov
scas
sub
repz
aam
xchg
mov
cld
add
mov
shr
in
fsubr
add
dec
pop
ret
jle
mov
or
or
dec
aad
stos
loopne
lods
lea
jge
and
loop
ss
mov
push
fcompp
adc
pop
cmp
jg
sbb
nop
ins
inc
(bad)
cwde
or
out
inc
push
call
(bad)
mov
popa
arpl
push
xor
fsubr
das
test
jns
ret
mov
ret
data16
cmps
adc
jnp
fcom
xchg
xor
xlat
lahf
mov
mov
pop
or
inc
mov
pop
mov
mov
jae
sub
call
sbb
xchg
lock
lods
fild
add
inc
mov
dec
repnz
mov
mov
mov
shl
jg
out
sbb
inc
push
hlt
lds
sub
jo
int3
test
pop
imul
fisttp
jl
inc
mov
cli
ficom
hlt
or
cmp
jnp
and
or
outs
pop
iret
pop
inc
icebp
jle
or
add
rcr
and
scas
test
movs
enter
mov
outs
pop
test
iret
cmp
dec
retf
aam
fld
xor
rcr
cdq
aad
jge
or
xchg
sbb
mov
mov
std
mov
cmps
xor
loopne
and
fwait
jo
pop
push
mov
test
out
push
cld
in
cdq
in
lahf
lahf
pop
nop
mov
mov
in
adc
push
das
sbb
repnz
cmp
push
xchg
aad
jo
or
fld
aas
adc
std
fs
add
and
jbe
jb
or
arpl
or
sub
iret
dec
or
loopne
mov
mov
fs
push
dec
repnz
ret
cli
inc
test
cmp
int3
(bad)
div
pcmpeqb
icebp
nop
(bad)
dec
scas
jae
xor
fstp
sbb
push
xchg
(bad)
es
push
out
mov
sub
mov
fistp
sbb
addr16
das
dec
sub
jno
or
jno
test
pop
icebp
mov
pop
push
push
lock
inc
pushf
jmp
fstp
add
inc
xlat
addr16
in
mov
in
cmc
add
jns
add
sti
pop
stc
inc
ja
jge
loop
xchg
outs
mov
jae
adc
pop
test
pop
mov
aas
dec
addr16
inc
or
sbb
js
sub
out
cld
sbb
(bad)
sti
aad
repz
scas
cmp
pushf
(bad)
ins
(bad)
xchg
stos
xor
scas
mov
inc
mov
push
daa
dec
inc
call
inc
popf
retf
out
out
xchg
mov
dec
dec
(bad)
xor
inc
cwde
repz
mov
in
call
cld
(bad)
pop
jmp
adc
outs
in
cmp
mov
push
push
jo
push
and
(bad)
mov
repnz
and
jns
(bad)
ud1
in
add
cld
fsubr
cmps
mov
fld
nop
inc
xor
mov
fcomp
inc
daa
pop
dec
loop
add
inc
test
add
mov
arpl
sar
shl
rol
pop
pop
test
repz
sbb
mov
xor
sar
mov
sti
pop
inc
movs
cmp
ror
push
add
and
gs
mov
mov
adc
aas
push
pop
xor
ret
or
xchg
cmp
mov
xchg
xchg
or
xor
push
test
js
mov
mov
jnp
cs
imul
popa
xor
shl
cmp
rcl
xchg
in
lods
lods
lds
jecxz
adc
sets
test
fcmovnb
lods
adc
fadd
lds
xchg
jle
outs
xlat
fld
mov
push
cmc
push
lods
in
pop
lahf
push
lea
sbb
mov
lods
ins
test
xor
sar
gs
cmp
mov
popf
movs
push
and
ret
adc
fldcw
xchg
(bad)
pusha
push
test
mov
adc
in
add
cld
xor
dec
sbb
push
dec
(bad)
mov
lds
pmaddwd
popa
mov
mov
and
jb
or
push
sub
fild
dec
addr16
mov
jg
in
and
or
jno
mov
jmp
into
stc
shl
or
and
pop
or
sub
nop
mov
in
enter
add
xchg
jmp
cmp
cmc
fs
and
std
jle
mov
(bad)
cmp
es
lds
clc
fs
fwait
pop
xor
mov
out
sbb
jno
fdiv
mov
dec
push
pop
push
sub
xchg
int
test
pusha
cli
das
pop
inc
ja
cmp
popa
inc
pop
mov
or
xchg
test
cmps
pop
lahf
cmps
sbb
movs
dec
inc
or
xchg
xor
int3
fs
sti
das
(bad)
sbb
test
pushf
xor
adc
dec
mov
push
fs
jns
ret
dec
pop
int
repz
push
push
mov
mov
jnp
fs
mov
(bad)
ret
(bad)
popf
add
adc
das
imul
retf
sub
(bad)
popa
add
into
leave
dec
xor
mov
or
inc
scas
out
add
aaa
fdivr
sbb
add
mov
adc
jne
mov
pushf
fnstcw
lahf
fs
cdq
fild
or
jb
ins
retf
outs
ds
xchg
dec
cmp
mov
push
test
ret
ss
hlt
sub
push
ret
js
push
xor
test
je
or
adc
retf
xchg
adc
dec
loope
js
pushf
xchg
and
scas
mov
add
popf
dec
xor
sub
cmp
clc
popa
cdq
jle
sbb
adc
dec
retf
test
push
pop
(bad)
pop
pushf
mov
dec
or
mov
gs
movs
and
sbb
fsubrp
and
les
xlat
scas
push
mov
lahf
pop
xor
xlat
inc
ret
movs
jmp
pop
jne
(bad)
in
and
jl
push
fadd
cmps
mov
jo
popa
fiadd
cmp
cmps
push
inc
fwait
ja
sub
mov
mov
repz
jle
pop
test
adc
test
not
movs
stos
mov
inc
or
dec
imul
out
(bad)
jecxz
out
mov
or
push
inc
push
dec
fwait
jl
xor
xor
ss
cmp
xchg
out
or
or
ret
xor
nop
pop
sbb
mov
push
int3
imul
adc
out
mov
inc
jae
mov
das
cmp
pushf
dec
out
adc
addr16
inc
mov
icebp
add
retf
sbb
rcr
sbb
in
xor
loope
je
aad
and
ret
and
arpl
mov
in
pop
pop
sbb
scas
mov
lods
test
xchg
inc
in
in
iret
aas
jl
mov
or
cwde
inc
adc
fcom
sub
(bad)
in
mov
aad
mov
sbb
mov
clc
sbb
inc
in
jne
push
inc
sub
pop
js
cmps
mov
xor
int3
cwde
dec
push
fisub
nop
sub
call
retf
clc
loop
pop
jb
and
dec
xchg
shl
imul
es
mov
mov
test
pop
ja
loope
jbe
pop
sar
(bad)
aad
es
sbb
(bad)
out
mov
push
pop
stos
loope
ds
mov
mov
jns
mov
cmps
add
test
pop
inc
arpl
and
mov
loope
sti
adc
jg
(bad)
push
inc
mov
outs
je
mov
jmp
jge
mov
arpl
pop
stos
ret
je
popa
pop
mov
fxch
in
stc
cmp
xchg
repz
mov
xchg
test
mov
xor
test
dec
rcr
sbb
fnstcw
xor
fild
dec
imul
ret
lea
cmps
imul
sub
addr16
mov
sahf
lea
pop
mov
fwait
and
sbb
ret
adc
ror
into
test
in
(bad)
or
xor
dec
adc
push
data16
mov
xor
mov
sub
mov
fisub
sti
sbb
dec
pop
hlt
push
mov
sbb
leave
or
ins
mov
repnz
hlt
xor
bound
cld
sbb
inc
aad
test
repnz
fisubr
lea
dec
fbstp
jl
and
mov
add
jmp
xchg
mov
bound
push
cmp
sub
int3
call
repz
adc
or
mov
push
dec
fnstsw
jmp
inc
dec
inc
jge
in
movs
mov
inc
in
inc
or
cs
jge
jl
pop
add
fs
dec
cs
(bad)
xor
jo
in
jg
sbb
xchg
and
neg
popf
data16
inc
imul
and
mov
ins
hlt
mov
pop
(bad)
sbb
xchg
test
loopne
test
pop
mov
mov
(bad)
mov
retf
push
shl
mov
adc
repz
mov
pusha
ror
sar
mov
xchg
int3
and
adc
aad
sub
add
call
push
dec
mov
xchg
xor
dec
or
sub
adc
dec
jmp
scas
test
xchg
enter
xchg
dec
xchg
cmp
ins
mov
dec
mov
loop
ret
pop
retf
pop
in
daa
mov
sub
cmp
ss
xchg
or
addr16
push
cmps
xlat
or
jno
sub
xlat
std
in
sub
cmp
fs
jo
pop
sti
setb
jmp
clc
(bad)
aas
aad
dec
addr16
mov
cmp
xchg
leave
push
mov
push
ds
pop
es
xlat
enter
pop
inc
add
enter
xchg
cmp
fs
push
xor
pop
fmul
and
cwde
dec
dec
aam
repz
fst
in
scas
ins
cmps
call
retf
(bad)
xchg
adc
and
jno
inc
jbe
jo
xchg
call
adc
cld
dec
(bad)
xor
in
and
ins
scas
les
shl
xor
jb
adc
xor
movs
leave
adc
or
xchg
ss
xor
jecxz
loopne
xor
add
loopne
inc
and
(bad)
out
enter
clc
add
or
clc
jmp
fisubr
and
or
fst
push
pop
mov
mov
xor
mov
leave
lea
adc
sub
arpl
aaa
js
jg
pop
sbb
test
in
adc
imul
lock
outs
dec
in
ins
fsub
pop
xchg
shr
cmp
mov
scas
inc
jmp
adc
add
push
adc
sub
ins
sbb
mov
sub
in
lods
loop
xlat
dec
int
leave
inc
push
loope
lds
xchg
push
iret
jl
in
xchg
jo
mov
add
sub
retf
jecxz
movs
and
mov
neg
test
inc
retf
or
jmp
add
pop
mov
pop
dec
inc
aad
pop
jae
mov
and
or
push
and
das
sub
icebp
mov
fs
xchg
sti
push
jmp
ins
sti
jmp
mov
clc
jecxz
sbb
jmp
jae
sbb
inc
mov
jl
stos
cmps
xchg
or
retf
cs
jnp
in
inc
inc
(bad)
xchg
scas
mov
jo
or
cmp
push
clc
das
fcmovbe
adc
pop
inc
fld
mov
ds
lods
outs
push
sbb
fild
push
std
rcl
xor
(bad)
pop
pop
mov
sar
pop
mov
retf
push
(bad)
sbb
push
push
sbb
mov
push
xor
cs
rcr
push
test
sub
out
ds
ret
jb
mov
xchg
add
dec
xor
cdq
jle
sar
lods
(bad)
dec
data16
jmp
sub
loop
fwait
loopne
and
ins
(bad)
sbb
sbb
or
sub
loop
xchg
mov
adc
out
test
mov
mov
xor
lahf
push
pushf
jbe
jp
xchg
cli
push
mov
aaa
push
jne
dec
inc
fisub
ficomp
sub
fsub
dec
mov
push
call
push
ins
jge
ds
lods
mov
retf
push
imul
movs
sbb
cmp
sbb
pop
push
inc
inc
sub
mov
ja
mov
lods
mov
pusha
jo
push
push
mov
dec
or
fnsave
pop
loopne
inc
xor
aad
jecxz
call
sbb
xchg
or
dec
or
fisub
aam
in
aaa
ins
(bad)
or
dec
scas
xor
mov
stos
adc
fwait
jl
cli
sbb
out
adc
fmul
sar
jae
jle
push
fdiv
or
sub
mov
and
xor
cdq
jmp
mov
and
push
hlt
iret
stc
mov
mov
rcr
xor
jecxz
jg
add
loopne
or
jnp
fidiv
in
outs
sbb
pop
mov
adc
lea
push
push
ins
sbb
mov
out
dec
push
bound
sub
div
jecxz
sub
push
jecxz
sub
cld
aad
fisttp
or
lahf
mov
mov
mov
neg
(bad)
jg
cs
loopne
icebp
cld
cli
ins
adc
push
pop
cmp
cmp
daa
dec
mov
or
imul
inc
mov
cmp
leave
sbb
sbb
std
fs
mov
nop
out
push
adc
mov
nop
lods
cmp
pushf
loopne
comiss
stos
icebp
pop
xchg
inc
dec
or
mov
adc
shl
lods
xchg
fsubr
or
mov
jo
add
or
pop
fadd
leave
sahf
or
(bad)
adc
outs
stc
and
or
inc
add
ret
sbb
call
cmp
inc
shl
add
adc
(bad)
imul
outs
push
aas
and
aam
imul
jne
jbe
cmp
outs
cld
out
stos
(bad)
pop
nop
cwde
jmp
ret
add
mov
std
in
cmp
imul
mov
pop
pop
cmp
cli
mov
push
xchg
xchg
dec
ins
cmp
movs
cwde
in
adc
and
mov
or
js
fld
mov
xchg
ret
pop
div
pop
pusha
and
jmp
jbe
and
adc
repz
push
push
xor
adc
loopne
out
pop
xchg
out
push
fdiv
xchg
mov
jo
jg
imul
xchg
mov
imul
aam
cmp
sbb
hlt
dec
test
mov
and
jne
dec
dec
std
jle
ins
adc
inc
or
jecxz
sbb
shl
add
outs
std
add
mov
fs
xor
xor
test
add
mov
cmps
jb
retf
jg
push
ss
(bad)
test
out
outs
outs
inc
mov
dec
cmp
mov
adc
xchg
cld
mov
mov
faddp
mov
pop
mov
out
repnz
sub
pop
pop
rcl
mov
cli
popf
sub
jecxz
jno
lahf
je
sub
sbb
add
push
out
retf
iret
push
es
mov
aam
(bad)
aad
pop
outs
fisub
mov
sub
push
sbb
add
scas
(bad)
push
cs
xor
jns
daa
mov
cmps
sub
call
call
js
xchg
mov
cmp
stos
xchg
mov
push
test
outs
jno
call
mov
cmp
pop
jl
cmp
pop
in
pop
sub
cmps
cmps
popf
scas
fdivr
push
add
aaa
js
cmp
mov
cwde
or
stos
mov
jg
loope
(bad)
jo
mov
xchg
and
cmp
and
movs
rol
retf
jae
xor
adc
bound
js
clc
jo
or
(bad)
lea
cmp
ror
mov
stc
in
adc
sub
js
cmp
sbb
imul
jecxz
xor
and
push
std
cmp
pop
pop
adc
xchg
pop
xor
jns
sub
ret
dec
jle
(bad)
sub
mov
xor
lea
mov
das
arpl
mov
xchg
cmp
loop
loope
cli
ret
adc
sbb
and
or
add
sub
arpl
cmps
movs
div
repz
ret
pop
dec
stos
dec
sbb
cwde
call
in
add
js
jg
stos
add
add
or
das
fs
(bad)
push
test
pop
jl
or
jle
mov
push
rol
cmp
inc
aad
xor
pop
mov
mov
sub
dec
dec
xor
lock
aas
stos
jg
inc
mov
mov
inc
iret
outs
pop
xchg
push
mov
popa
sar
xchg
jecxz
hlt
jle
enter
retf
out
or
fdivr
push
sbb
sahf
cmp
pop
nop
fist
xchg
fidiv
or
jnp
inc
lock
clc
rcr
sbb
sub
xchg
jmp
loop
lock
shr
test
(bad)
in
in
inc
push
dec
inc
dec
call
jl
cdq
ss
ds
jno
jle
mov
in
or
cmc
jmp
and
jge
ins
jmp
lock
xchg
sbb
cmp
fstp
ret
retf
mov
into
push
or
lea
retf
dec
push
xor
aaa
sub
test
ror
sub
inc
je
xor
xor
mov
dec
cmp
inc
icebp
shl
(bad)
fnstenv
cs
cmp
mov
mov
nop
(bad)
rcr
cmp
mov
push
aaa
(bad)
xor
mov
mov
sahf
out
cwde
cmps
push
in
jge
test
std
inc
jo
inc
or
out
stc
mov
std
sbb
loop
inc
and
daa
call
bound
das
sbb
clc
sub
movs
dec
ins
dec
out
fiadd
fdiv
inc
xchg
(bad)
push
test
mov
jg
sbb
pop
fwait
and
pop
mov
cdq
(bad)
outs
stc
jle
inc
hlt
outs
iret
jmp
sbb
dec
push
mov
(bad)
(bad)
mov
jle
sbb
and
xor
xor
cmp
out
fbld
dec
js
cmc
mov
mov
inc
jno
xchg
pop
adc
mov
adc
xchg
sti
pop
mov
daa
mov
test
sar
rcl
mov
ins
jb
and
cmp
sbb
push
xor
into
and
sbb
sbb
pop
addr16
pop
mov
ds
fild
push
add
jmp
xor
dec
or
pop
sbb
or
out
sahf
daa
lods
inc
and
sub
xor
imul
ror
sti
sub
les
test
xchg
cmp
pushf
mov
xchg
stos
inc
push
pop
xor
push
cli
inc
leave
cld
ja
sbb
xchg
cmps
jg
sbb
inc
std
test
push
mov
xor
out
adc
fild
cmp
pusha
fwait
daa
push
xchg
adc
pop
add
addr16
fnstsw
pop
jae
mov
sbb
scas
mov
xchg
fcmovnu
sar
or
mov
adc
xchg
jb
out
xchg
fcom
loop
retf
fwait
xchg
iret
out
imul
imul
stos
sub
sub
push
cld
cdq
sub
nop
dec
fnstenv
(bad)
ins
mov
sti
mov
fstp
lock
sbb
jle
push
gs
retf
mov
mov
popf
pop
pop
mov
sar
inc
mov
into
test
jae
ja
push
jne
mov
push
scas
or
and
mov
add
sub
inc
jmp
repnz
nop
jle
xor
sub
outs
jmp
mov
or
test
scas
lods
or
sub
test
ss
push
dec
pop
push
int3
imul
lock
jge
lock
out
push
imul
pusha
push
pop
es
push
ror
sbb
popf
pop
into
xchg
(bad)
sbb
add
sbb
xchg
out
push
sub
ja
push
out
mov
inc
adc
push
(bad)
lock
dec
ret
jnp
jo
pop
sub
inc
frstor
and
inc
mov
aam
adc
adc
mov
xchg
cmp
mov
cmp
stc
lock
neg
pop
loopne
ror
lds
dec
fadd
mov
mov
pop
xor
sub
movs
sub
cmp
cli
add
in
adc
cmps
rol
mov
(bad)
lods
or
jle
jecxz
xor
das
push
loope
out
jae
mov
jno
fnsave
cmp
ret
in
es
cmp
loop
cli
scas
fidiv
push
fdivr
sub
pop
sub
imul
and
xchg
push
push
mov
in
or
lea
inc
or
pop
int3
jl
cmc
lds
inc
ret
cli
push
mov
popf
inc
mov
outs
jne
mov
adc
mov
cmp
or
inc
add
std
jmp
jns
jmp
addr16
adc
mov
inc
out
cmp
stos
mov
add
cmp
(bad)
sar
pop
fistp
xchg
push
dec
lds
cwde
and
xor
dec
mov
std
pusha
jae
pop
stos
and
dec
adc
mov
push
sub
test
push
loopne
fadd
adc
out
mov
cwde
rcl
lahf
mov
jp
xchg
(bad)
cmc
push
mov
(bad)
pop
inc
cmp
jle
push
mov
mov
sbb
stc
sar
icebp
xor
jb
inc
loop
sbb
mov
sub
out
bound
sbb
ins
or
gs
push
sti
jle
jmp
jmp
iret
sub
lahf
dec
fisttp
idiv
sbb
inc
loope
fs
iret
mov
test
or
adc
out
cs
out
out
jp
fild
dec
in
and
in
inc
cmp
les
xor
lds
movs
test
or
lods
test
push
mov
sbb
aaa
es
jmp
out
push
fldz
inc
stos
iret
or
add
adc
(bad)
lock
mul
add
and
cmc
pop
xchg
mov
cmp
push
mov
into
or
jp
and
or
mov
(bad)
sbb
mov
and
jmp
popa
clc
push
mov
sub
mov
sbb
dec
or
mov
ja
int
jecxz
push
(bad)
jns
adc
fidiv
jg
and
xchg
fst
dec
xchg
jmp
inc
push
fnsave
(bad)
xor
ficomp
shl
lahf
dec
sbb
xchg
inc
xrelease
aas
test
shl
jmp
sub
lds
push
push
xor
dec
add
jg
in
cs
(bad)
mov
mov
cs
dec
and
and
loope
std
jmp
adc
and
jno
jmp
(bad)
fistp
or
mov
movs
cmc
and
add
mov
jnp
data16
pop
inc
fbstp
inc
jnp
div
test
clc
pop
push
leave
cld
cmp
dec
inc
sbb
loopne
cmp
ja
jo
jmp
inc
jns
scas
mov
push
leave
aad
test
mov
push
stos
int
mov
xor
ins
sbb
ret
cmp
(bad)
in
je
cmp
out
xchg
pop
test
jns
test
lods
retf
mov
xchg
xor
cmc
add
lods
inc
movs
stc
add
xor
pop
and
dec
mov
inc
outs
push
fwait
imul
mov
jnp
mov
scas
retf
outs
push
(bad)
jmp
dec
jp
pop
in
adc
call
cli
ftst
mov
cmp
mov
pop
test
and
pop
ds
dec
pop
push
(bad)
fcom
pop
int
pop
pop
dec
cs
adc
cmp
pop
imul
xchg
or
mov
sub
test
push
gs
ret
stos
popf
xchg
adc
mov
aad
jo
pop
inc
ds
cmp
push
push
popf
jb
xchg
in
lock
push
dec
mov
mov
xor
dec
inc
call
dec
adc
stos
inc
push
push
loope
jne
mov
or
call
mov
inc
dec
leave
mov
jg
into
popa
retf
cmp
iret
sub
jmp
add
pop
das
add
xor
movs
fs
fbstp
pop
and
nop
movs
cli
cmc
jmp
sub
lahf
arpl
xchg
push
fidivr
scas
xor
pusha
fs
movs
jbe
das
std
lea
push
rol
mov
scas
mov
in
push
out
or
sbb
mov
cs
into
lea
lock
xchg
loop
loopne
cs
push
push
pop
xor
mov
popf
xchg
pop
sahf
nop
inc
sti
into
cmp
outs
stc
arpl
ins
jb
mov
jp
int3
jmp
imul
fstp
in
ds
je
sub
stos
cld
div
dec
jmp
inc
sbb
or
jl
imul
cmp
out
out
sub
in
jae
dec
mov
jne
pop
push
mov
jmp
inc
sbb
fcomp
xor
inc
shr
ficom
icebp
(bad)
adc
call
push
loop
jmp
test
sub
sbb
(bad)
dec
call
lahf
xchg
in
retf
and
in
adc
sub
jecxz
clc
cmps
fwait
hlt
push
mov
pop
push
add
imul
cmp
xchg
in
push
retf
inc
out
inc
mov
movs
or
xor
mov
mov
jmp
aam
mov
jb
jbe
shl
rcl
repnz
loop
pop
push
pop
lahf
repz
jg
xchg
mov
cmc
or
push
adc
out
in
stos
adc
and
xchg
adc
adc
mov
shl
mov
or
lods
add
pop
ja
jnp
jns
fstp
dec
lock
adc
(bad)
pop
neg
xor
gs
jmp
adc
loop
sub
loope
outs
jae
add
call
mov
mov
xlat
mov
dec
nop
sub
sti
jo
in
leave
mov
(bad)
aam
add
mov
retf
push
jle
les
cmc
xor
xor
jno
adc
jb
cmp
adc
int3
in
mov
cdq
ss
icebp
push
cmp
popf
int3
pop
push
lods
adc
addr16
mov
sbb
mov
push
sub
shl
and
jno
(bad)
or
mov
inc
dec
fs
inc
push
loopne
(bad)
inc
push
xor
xchg
push
int3
popf
add
xchg
mov
std
nop
out
mov
cmp
or
jle
ins
sbb
scas
jmp
pop
(bad)
retf
jbe
or
mov
add
cmps
jecxz
daa
mov
add
icebp
or
std
pusha
mov
stc
push
pop
sbb
fwait
ret
(bad)
jl
jmp
stos
pop
lock
test
sub
cld
mov
sar
add
xor
stos
mov
pop
dec
cmp
pop
push
sub
mov
pusha
mov
std
adc
mov
rcl
movs
jle
xor
bound
and
pop
ds
adc
in
cmp
cmc
sub
idiv
xchg
jg
ror
call
mov
into
nop
ret
sbb
jp
mov
in
mov
pusha
jnp
sbb
call
add
mov
jbe
xchg
not
retf
mov
pop
mov
sub
mov
fbstp
lds
push
movs
loop
jno
fadd
xchg
add
pop
retf
and
mov
rcr
xchg
popa
test
js
push
scas
sbb
mov
les
fst
scas
daa
sbb
and
ror
sahf
cmp
xlat
sbb
test
sbb
mov
xor
or
jp
push
shl
les
(bad)
mov
icebp
fisub
mov
jge
or
dec
jl
mov
add
dec
xor
int
jae
jbe
je
and
pop
and
aaa
mov
popa
xchg
inc
int
and
jns
sbb
ss
sub
test
out
sbb
mov
jns
push
mov
xlat
jp
sub
test
jmp
mov
in
push
sbb
daa
ins
inc
pop
popa
fadd
jg
lea
push
dec
jb
mov
inc
(bad)
push
xchg
ror
cmp
add
sbb
mov
and
adc
int
retf
xchg
repnz
in
pop
shl
pop
call
js
js
test
sar
jne
js
aam
imul
add
add
dec
xlat
push
lods
push
dec
and
jne
cmps
aad
cld
cmp
mov
adc
clc
aaa
dec
mov
gs
(bad)
jo
and
cmp
mov
dec
sbb
pop
pop
mov
in
push
fs
pop
fsubr
and
mov
sub
ins
add
jns
or
stos
adc
mov
adc
rol
pop
popa
pop
loope
fimul
jmp
test
lock
adc
jg
add
lock
hlt
xchg
fmul
(bad)
push
or
pop
add
cmp
out
inc
push
mov
cmp
mov
lock
dec
and
mov
sbb
add
cdq
push
out
jle
cli
push
inc
cdq
sbb
mov
mov
cmp
xor
clc
xor
out
lods
mov
pop
pop
into
std
adc
pop
push
push
fldcw
and
push
or
jle
push
pop
pop
add
ficomp
sbb
add
movs
nop
imul
loopne
sahf
dec
and
xchg
fnstcw
jg
mov
mov
fmul
call
mov
pop
push
repnz
ins
out
dec
in
rep
pop
inc
and
mov
or
std
repz
fs
lea
bound
cmp
mov
cmps
mov
sbb
xchg
enter
cmp
jne
retf
cwde
or
cmp
leave
hlt
stc
mov
or
loopne
pop
push
(bad)
icebp
sbb
cmc
out
clc
sti
dec
fcom
test
xchg
imul
jecxz
or
xor
mov
int3
push
mul
out
fwait
arpl
call
retf
mov
push
xchg
push
int
pop
stc
ror
and
push
adc
cmps
jge
adc
mov
jmp
jns
sub
inc
jae
clc
or
idiv
inc
cwde
ins
movups
xor
sar
test
pop
jnp
mov
cmp
mov
jnp
in
jg
inc
test
jnp
rcr
cmc
push
mov
out
sbb
psubq
loopne
cld
fadd
in
data16
fcom
mov
les
push
and
sbb
xchg
inc
cli
pop
mov
stos
cmp
jmp
adc
adc
push
in
jbe
jp
mov
jp
inc
xchg
adc
(bad)
aad
ins
mov
pop
jmp
cdq
xchg
int3
pop
mov
xchg
inc
push
movs
iret
jmp
ret
push
mov
test
jge
movs
adc
mov
pop
cmp
inc
push
bswap
loope
xchg
xchg
mov
add
addr16
clc
cmp
scas
in
neg
pop
sub
js
push
mov
cmc
mov
pop
in
cmp
sub
gs
lahf
sub
xchg
and
or
ret
movs
push
push
lds
(bad)
(bad)
cwde
jecxz
lock
sbb
jmp
(bad)
in
aam
and
pop
mov
dec
pop
aaa
std
idiv
pop
push
sbb
or
mov
jae
jl
(bad)
dec
mov
adc
pop
lahf
jb
dec
xor
adc
cmp
dec
fcom
dec
stos
cli
jge
jnp
daa
push
jne
fnclex
push
pop
scas
xor
dec
adc
mov
jbe
pop
or
sub
or
mov
sti
jmp
lock
jbe
inc
repz
dec
iret
imul
and
repnz
jge
outs
dec
outs
cmc
mov
push
in
lds
mov
inc
les
fisubr
jb
imul
pop
ret
retf
add
ss
pop
clc
nop
imul
fisttp
xchg
leave
(bad)
ss
iret
or
pop
dec
jmp
dec
aam
mov
pop
jg
jnp
pop
les
or
pushf
inc
mov
add
(bad)
retf
cmp
imul
loopne
test
icebp
jne
sbb
mov
sahf
cld
add
leave
jmp
cmp
push
jge
add
pop
call
jmp
(bad)
sbb
in
or
mov
push
sbb
pushf
mov
jns
jle
mov
dec
or
and
aad
pop
cmps
jecxz
test
adc
movzx
xchg
mov
jae
cmps
jmp
jmp
cmc
outs
xor
dec
sahf
ss
not
xor
ret
push
xor
pusha
jnp
test
icebp
mov
fld
lahf
and
in
js
popa
int
add
loopne
rcr
xchg
jge
fmul
ja
(bad)
(bad)
xchg
jle
add
sbb
fistp
mov
sbb
mov
mov
or
call
pop
sbb
pop
movs
jb
add
pop
sbb
xchg
sub
scas
les
or
adc
das
ins
loopne
lea
mov
add
cmp
es
std
aas
adc
and
jg
or
out
xor
adc
cmp
dec
push
and
mov
outs
push
cld
loop
sub
mov
stc
push
lods
push
mov
cmp
repnz
xchg
les
sbb
scas
outs
or
jle
mov
imul
dec
dec
cmp
mov
out
fcom
cmp
lahf
icebp
pop
pusha
mov
popf
mov
mov
mov
cmps
shl
jae
mov
xor
int3
loopne
xor
jmp
jl
jae
mov
lods
rol
cmp
dec
ret
add
out
mov
test
xchg
mov
ss
int3
lds
jno
repnz
aad
mov
dec
aam
cmp
popa
adc
clc
std
shr
mov
rol
push
in
(bad)
test
arpl
adc
fmul
outs
and
shl
mov
inc
test
cld
adc
add
jmp
xchg
ds
mov
shl
push
sub
daa
xor
loop
sbb
sub
fs
scas
jg
pop
pop
mov
icebp
scas
leave
fild
sbb
adc
(bad)
pop
inc
xchg
aas
add
cmp
xor
cmp
or
adc
push
fmul
jno
loopne
push
cmp
and
(bad)
lods
sahf
test
int3
push
xchg
dec
das
lea
test
fist
jbe
cmc
std
or
cmp
xchg
mov
pushf
das
cmp
dec
push
jnp
adc
ror
adc
mov
dec
fmulp
jle
repnz
xor
test
pop
ins
sar
(bad)
sbb
and
outs
mov
inc
jmp
and
and
pusha
pop
dec
add
jmp
je
(bad)
sahf
xor
ss
jmp
push
xor
mov
dec
jge
cmc
cli
lock
mov
int3
and
or
mul
cmp
gs
mov
cli
pop
sub
dec
pop
or
cmc
inc
les
push
ret
mov
(bad)
fld
out
xchg
ror
fwait
lds
cmp
mov
and
jmp
push
mov
fwait
lods
mov
loop
(bad)
pop
addr16
lock
mov
xchg
mov
(bad)
cmp
dec
xor
add
fadd
inc
xchg
jnp
mov
jae
out
cmp
fwait
arpl
dec
mov
and
cmp
cmp
and
lahf
mov
imul
aas
mov
inc
or
cmp
shl
pop
lahf
scas
add
(bad)
pop
loop
and
sub
inc
cmps
test
arpl
in
pop
cmp
repz
js
inc
jo
inc
lahf
push
adc
lock
pusha
inc
dec
cli
rcr
stos
aad
pop
cmps
add
enter
inc
dec
nop
gs
out
in
(bad)
fcomp
lds
mov
cmp
sahf
test
sbb
(bad)
dec
xchg
les
retf
xchg
push
stos
pop
dec
push
aas
das
mov
or
mov
inc
sbb
addr16
or
jbe
loop
shl
sar
cld
mov
sbb
xchg
retf
in
jno
xchg
xchg
xor
sbb
jecxz
mov
and
sbb
pushf
test
jge
add
xor
shl
fild
mov
and
dec
in
sub
adc
ror
adc
inc
nop
aad
and
inc
ret
dec
mov
cli
xchg
mov
jnp
(bad)
xor
jo
dec
adc
mov
fisttp
pop
add
fmul
scas
xchg
push
and
push
sub
mov
nop
mov
dec
data16
fdivr
rcr
push
cmp
mov
ss
popf
ror
cmc
adc
rcr
cmps
into
pop
xor
aas
pop
push
push
sbb
test
test
pop
jbe
loope
cmp
cmp
test
xchg
jmp
jno
jno
xor
cmp
sub
outs
movs
pop
mov
inc
add
mov
cmps
retf
add
(bad)
ja
dec
outs
push
scas
mov
cmp
outs
out
jg
mov
out
stc
lahf
xchg
cs
mov
ins
jl
mov
cs
jbe
push
ror
fimul
idiv
rol
ds
lds
dec
fist
xchg
out
jp
fadd
sbb
inc
adc
(bad)
bound
cmp
pop
ficom
test
fnsetpm(287
and
aad
cdq
and
pushf
push
jnp
mov
scas
xchg
clc
pop
xor
(bad)
pop
sub
adc
enter
and
std
add
daa
test
mov
test
into
movs
cwde
xor
mov
lock
(bad)
fucom
push
pop
pop
pop
dec
leave
push
or
or
mov
loope
sub
outs
out
pop
mov
mov
jmp
inc
cmp
out
aad
xor
jmp
xlat
xor
and
mov
jb
(bad)
cmps
ss
aam
dec
popf
jp
sub
cmps
or
xor
ficom
sub
pop
push
jno
mov
sub
les
scas
imul
ds
lods
jp
cld
fidiv
pop
push
sbb
(bad)
push
push
cmps
mov
mov
inc
mov
dec
sar
inc
gs
dec
dec
movs
xor
xor
int3
femms
lock
inc
aad
jle
cld
out
add
sub
imul
mov
cld
push
mov
repz
scas
mov
push
jo
jecxz
pop
les
mov
jle
xlat
pop
dec
mov
xor
push
retf
xchg
(bad)
mov
icebp
adc
push
addr16
adc
or
ret
aaa
int
jb
(bad)
in
adc
dec
push
add
int
clc
mov
mov
inc
cmp
add
pop
cmp
or
pop
cmps
mov
ja
push
inc
mov
mov
enter
ret
shrd
xor
or
cmp
in
sbb
mov
mov
dec
bound
jnp
dec
push
mov
ins
push
mov
out
and
(bad)
imul
sar
mov
mov
sbb
xchg
retf
out
dec
xor
rol
jnp
sbb
and
push
std
pop
push
xchg
ret
add
imul
test
mov
fld
mov
jo
mov
mov
xlat
ficom
or
aad
dec
sbb
push
or
and
pop
jne
sbb
xchg
psubsw
mov
mov
std
pusha
jb
lea
inc
fiadd
test
out
mov
inc
cdq
mov
and
mov
div
in
or
repnz
add
scas
jmp
es
or
or
dec
fs
xlat
cmp
ja
push
clc
xchg
inc
add
test
in
imul
pop
xchg
cld
push
adc
pop
sub
adc
repz
jns
shr
repnz
cdq
push
pop
test
(bad)
loopne
mov
adc
mov
test
or
retf
dec
mov
xchg
lock
sub
in
cmp
add
dec
popf
add
inc
movs
fistp
and
adc
push
adc
and
xchg
add
aam
vpsllw
arpl
rcl
and
ret
push
and
xchg
cmp
sub
adc
and
mov
repz
(bad)
jg
push
xchg
popf
data16
xchg
xor
lods
test
(bad)
jl
rol
mov
(bad)
sti
push
and
sbb
sbb
pop
mov
and
or
test
sbb
ficomp
mov
scas
dec
and
cmps
es
jl
cmp
fmul
jno
mov
sub
cli
inc
sub
arpl
pop
xchg
icebp
or
dec
(bad)
and
call
loop
fild
test
mov
cmp
(bad)
ja
or
leave
in
in
inc
inc
mov
icebp
pop
mov
mov
dec
loopne
out
sub
adc
mov
add
cmp
and
stos
jp
push
mov
call
gs
xor
mov
cmp
pop
in
lds
icebp
fisttp
lds
mov
lods
xor
pop
mov
ds
mov
inc
jb
or
int
pop
outs
retf
or
mov
mov
or
xchg
int
jns
sbb
cmp
mov
int
jge
push
adc
retf
int3
xchg
fnsetpm(287
in
clc
lea
fstp
and
pop
fsubr
pop
maskmovq
neg
pushf
add
call
fwait
and
push
(bad)
mov
lods
dec
test
push
cmp
pop
mov
inc
jo
div
or
pop
cmp
jno
(bad)
xor
mov
sbb
xor
in
arpl
in
or
fiadd
ja
sub
ficomp
mov
add
cwde
lock
mov
mov
mov
popf
cmp
stc
pop
not
inc
jnp
enter
mov
jbe
push
outs
test
cmp
mov
out
xor
ja
popf
sbb
fistp
mov
lahf
xor
xor
cmps
int
in
mov
addr16
popf
into
rol
xor
sahf
cmp
adc
pop
ds
fld
std
addr16
iret
mul
cld
mov
mul
xor
mov
dec
or
pop
or
pop
repnz
pop
mov
xlat
fstp
inc
mov
adc
in
jns
and
je
ins
push
add
inc
xchg
test
fld
mov
push
inc
fwait
dec
cdq
pop
inc
add
xor
shr
sti
jl
ret
add
push
pop
faddp
xchg
sub
push
out
cli
push
dec
xchg
movs
inc
jno
jg
adc
mov
hlt
jp
fcomp
push
jmp
ret
adc
ds
out
je
rcl
sar
aad
cmps
jl
div
cmp
aas
lahf
aas
mov
outs
outs
(bad)
hlt
and
adc
cmps
pop
push
(bad)
sbb
pushf
add
(bad)
sbb
inc
movs
jns
das
xor
cmp
add
pop
je
sub
xchg
scas
div
sbb
sbb
jmp
mov
out
xchg
sub
out
imul
sub
or
test
adc
(bad)
ror
cmc
inc
mov
(bad)
out
daa
jle
addr16
mov
xchg
movs
and
adc
nop
mov
out
push
adc
data16
lea
xchg
in
arpl
and
push
int
push
mov
enter
fcomp
mov
pop
repnz
dec
fld
cmc
mov
jae
mov
fsub
movs
and
les
xchg
xor
sahf
pop
clc
ret
enter
jge
inc
xor
pop
add
sbb
or
mov
call
mov
lds
mov
jecxz
mov
mov
xchg
sub
enter
jge
mov
in
scas
test
add
rcl
push
popa
into
mov
xchg
pop
push
int3
ja
data16
hlt
or
lahf
pop
xacquire
add
test
inc
mov
and
loop
push
mov
ss
xor
inc
test
mov
sti
pop
sub
cmc
sbb
add
inc
push
mov
int3
dec
mov
inc
pop
cs
jno
dec
push
push
test
test
ja
mov
mov
icebp
or
push
push
test
inc
dec
out
dec
inc
adc
and
stc
std
add
inc
inc
jecxz
inc
or
leave
jne
imul
sub
ins
mov
mov
daa
sti
daa
inc
sub
(bad)
mov
loope
sub
push
ds
jmp
rcl
jnp
cmp
jp
mov
jmp
mov
push
push
xor
jmp
call
stos
ds
sub
add
add
or
dec
adc
or
into
jp
out
clc
xchg
stos
adc
dec
call
jbe
mov
call
pop
lds
inc
xchg
stos
push
pop
dec
and
adc
cmp
imul
xchg
ss
jl
js
std
stc
jl
test
cdq
pushf
sti
mov
jecxz
xchg
jle
or
lea
sahf
adc
xchg
inc
xchg
aam
das
inc
das
and
add
pop
mov
mov
push
xor
call
call
in
add
pusha
out
xor
cmps
cld
adc
push
mov
scas
js
dec
xchg
sub
fld
dec
inc
push
and
inc
clc
(bad)
packssdw
imul
push
xor
ds
or
test
outs
push
or
pop
jmp
fisttp
mov
or
add
sahf
retf
mov
cdq
or
push
xchg
retf
xchg
mov
addr16
push
in
mov
loope
mov
cld
fadd
les
in
adc
jb
call
sbb
lock
inc
daa
jns
iret
movs
addr16
int
pop
je
cmc
adc
mov
push
inc
imul
jbe
push
mov
pop
add
les
or
jle
in
and
outs
fwait
jl
xchg
sbb
mov
or
inc
hlt
xchg
fbstp
xor
jecxz
cmp
pop
pop
cmp
dec
xchg
mov
bound
mov
xchg
sbb
sbb
sbb
push
xchg
jns
stc
imul
stos
mov
dec
mov
jbe
cwde
cmp
leave
lea
xchg
mov
dec
inc
sar
sbb
(bad)
sub
(bad)
or
mov
adc
cdq
les
sbb
fstp
fstp
test
jge
jecxz
pop
or
cmp
sbb
and
arpl
je
and
xor
pop
test
sbb
inc
jle
jno
dec
in
cmps
push
sub
outs
hlt
or
sub
pop
or
and
(bad)
jle
out
sbb
cmp
lods
iret
jge
push
pop
lods
mov
cmc
or
cmps
cli
xchg
push
jecxz
sbb
cli
sbb
and
mov
push
(bad)
jno
jp
popf
add
push
ret
xchg
xchg
sub
fadd
cmp
fcom
lds
mov
and
xor
cmp
sub
add
jmp
retf
adc
xor
mov
(bad)
stc
sti
test
fdivr
xchg
fiadd
mov
loope
jg
call
push
fbld
fild
mov
push
js
gs
(bad)
das
in
mov
pop
rep
out
mov
ins
and
cmc
test
push
lock
push
mov
and
mov
dec
add
xchg
inc
mov
arpl
fsub
test
and
xlat
cmp
es
test
jb
repnz
adc
push
imul
push
into
mov
adc
sbb
aad
sbb
lea
bound
into
bound
xor
(bad)
aaa
fldenv
ins
dec
into
dec
dec
clc
adc
pop
pop
(bad)
jecxz
in
lods
jno
sti
push
shl
das
mov
int3
loop
into
fs
push
mov
ins
dec
adc
(bad)
cmp
mov
push
pop
xor
out
pop
jo
sub
dec
sbb
aam
inc
ss
push
loope
(bad)
rol
inc
xchg
(bad)
int
xor
mov
popa
data16
pushf
in
popa
adc
popa
mov
rcl
aaa
test
xor
xor
push
clc
or
int
xor
inc
dec
mov
ja
jns
inc
mov
fwait
pop
pop
mov
call
mov
push
pop
sub
aam
jge
xchg
jle
pushw
xchg
test
fldl2e
ja
mov
push
out
pop
scas
adc
xor
xchg
stc
lss
mov
int3
jmp
daa
adc
mov
gs
sub
dec
popf
dec
in
es
cmp
mov
and
(bad)
out
or
arpl
in
or
jg
fidivr
mov
out
pop
push
fild
jmp
mov
scas
sub
dec
mov
idiv
pop
push
sub
pop
addr16
es
fisub
pop
xchg
mov
xchg
push
sbb
scas
pop
push
mov
(bad)
not
sbb
adc
xchg
push
xor
iret
into
cmps
data16
adc
fmul
icebp
(bad)
pop
or
repz
cld
out
ror
std
popf
ret
cdq
imul
jo
dec
sbb
inc
shl
dec
push
jle
fist
and
xchg
pop
mov
sysexit
inc
dec
scas
push
cmc
shr
int3
sbb
clc
push
ss
mov
stos
or
ret
pop
xor
xchg
shl
pop
mov
xchg
mov
mov
gs
ins
mov
inc
test
dec
add
leave
jmp
aam
cmp
dec
jnp
(bad)
fbld
loop
inc
fisubr
cmc
lahf
fist
jno
jae
js
in
mov
sub
inc
cli
stos
push
jmp
and
test
leave
xchg
ja
test
in
loope
push
je
int3
cli
ja
hlt
inc
mov
cs
sahf
jg
mov
call
inc
jbe
or
mov
push
clc
and
inc
ja
push
imul
pop
jae
mov
in
pop
fnstcw
leave
pop
dec
adc
jne
xor
mov
int3
push
fsubr
js
cmp
cwde
xchg
call
call
in
and
(bad)
adc
fadd
mov
pop
leave
fisub
retf
rcr
add
outs
fidiv
xor
jb
test
addr16
dec
jmp
out
stos
cs
mov
inc
rdpmc
push
push
add
enter
mov
push
xor
imul
ror
inc
mov
gs
es
cld
jbe
add
pop
adc
adc
stos
movs
and
jecxz
sbb
push
das
pop
adc
(bad)
(bad)
cld
sahf
xor
adc
push
sub
add
fwait
std
push
std
scas
fdiv
mov
lock
jo
lahf
jg
pop
fild
cmp
fcomi
add
ret
add
mov
ds
test
in
pop
jl
xor
adc
push
test
bound
cmp
rcl
into
push
mov
shl
mov
mov
lea
clc
lods
mov
add
inc
cdq
aad
in
xor
pop
and
mov
scas
cs
add
and
cwde
std
int
imul
xor
cmp
and
dec
ss
(bad)
repnz
pop
push
xchg
jecxz
ret
cmps
jl
mov
pushf
ret
std
data16
lock
call
jo
dec
fsubrp
xor
jl
call
cmp
out
jmp
addr16
fcomip
jge
into
push
dec
fisubr
loop
mov
or
mov
dec
hlt
fdiv
sar
imul
cmp
mov
pop
iret
add
(bad)
xchg
sub
neg
out
lahf
mov
outs
fmul
xchg
inc
xor
sahf
scas
sti
shr
ins
test
stos
jne
test
push
xlat
mov
shl
xchg
stos
xchg
(bad)
test
and
fisub
cmp
mov
jns
pop
or
cmps
pop
aam
inc
pop
sbb
in
push
xor
cwde
jnp
add
mov
ins
pushf
adc
lods
xchg
adc
das
movs
stos
pop
fisubr
mov
sub
stos
push
or
sbb
lea
mov
dec
bound
push
repz
mov
ficomp
pop
cdq
(bad)
mov
push
movs
inc
or
mov
ja
pop
jmp
cmc
data16
cmp
test
call
xchg
in
xchg
cmps
push
mov
and
inc
pop
rol
(bad)
rcl
push
mov
xor
xor
cmp
and
mov
sub
inc
test
cmp
aas
mov
xchg
sub
(bad)
cld
mov
sub
jmp
mov
loop
mov
shl
les
lock
xchg
pop
add
fcomp
data16
pushf
push
xor
mov
cmp
jl
push
out
mov
cdq
nop
ret
scas
dec
xchg
xor
xchg
(bad)
sbb
fucompp
jne
sar
or
cmc
(bad)
dec
shr
dec
push
mov
mov
fdivr
mov
and
and
lods
jle
add
and
jns
shl
sub
xor
repz
push
inc
shl
scas
addr16
lea
pop
cmp
and
xchg
pop
jge
inc
jo
out
pop
adc
xchg
mov
shr
shl
and
movs
add
xor
pop
and
pshufw
retf
adc
std
mov
test
pop
push
xchg
adc
leave
push
add
pop
movs
dec
les
call
lock
repz
scas
ds
cld
add
add
movs
lods
jg
stos
push
add
adc
bound
inc
cmp
ins
add
cmp
mov
js
movs
rol
jmp
pop
(bad)
clc
mov
sub
adc
aad
mov
sbb
(bad)
icebp
(bad)
jnp
rcl
and
std
psubq
xchg
out
fisttp
adc
xlat
sti
cmps
jns
pop
dec
add
xor
or
into
adc
xor
pop
xchg
mov
dec
cmp
cmc
sub
ret
fstp
xor
in
fimul
es
jb
jne
sbb
cmps
mov
push
jmp
loopne
push
inc
inc
movs
xor
dec
adc
xor
push
not
out
sub
cmp
sbb
stc
pop
test
push
and
pushf
xchg
adc
push
pop
xchg
lea
call
nop
cmp
push
je
xor
lds
lods
pop
push
push
fcomp
aam
es
sub
mov
aam
int3
push
pop
xor
push
sbb
add
or
cs
mov
leave
int
mov
test
mov
jle
cli
and
into
sub
push
pop
mov
xor
dec
ja
lahf
jp
cli
xor
dec
lock
cmp
cmp
add
push
xchg
inc
aam
ds
loopne
daa
outs
push
push
sub
or
addr16
xor
pusha
xor
int3
sub
ret
sti
xchg
mov
inc
sbb
add
push
cdq
inc
cdq
pop
in
fwait
mov
add
pop
mov
leave
shr
add
sub
sub
pop
jl
loopne
xchg
cmp
xchg
mov
add
out
dec
adc
or
imul
inc
leave
sbb
shl
mov
dec
pushf
ss
adc
push
fidivr
xor
cdq
mov
cmp
push
sub
pop
stos
mov
mov
aas
loope
shl
out
inc
ins
mov
dec
pop
aas
xchg
dec
popf
or
mov
cdq
ins
push
sbb
xor
(bad)
cmp
dec
push
push
aas
mov
dec
fisub
mov
push
ins
stos
dec
mov
ss
xor
dec
and
inc
in
inc
jno
add
ret
mov
xchg
xor
dec
lock
daa
outs
push
gs
scas
cli
or
nop
jmp
xor
je
and
or
add
push
sqrtps
jmp
jb
cmp
sbb
sub
adc
fld
stc
sahf
mov
xchg
jno
mov
mov
fidiv
mov
mov
call
mov
add
inc
fldcw
sub
ins
xchg
mov
nop
aam
ds
dec
add
lea
mov
sbb
fdiv
test
sti
arpl
and
xchg
jo
mov
out
test
adc
into
es
mov
sub
sbb
mul
jbe
add
push
xor
ror
ud0
(bad)
aad
jmp
dec
stos
add
sbb
jno
fiadd
pop
xchg
movs
pop
or
ret
pop
out
(bad)
jg
lods
and
ja
and
test
mov
sbb
outs
jo
test
xchg
retf
mov
cmps
(bad)
and
and
gs
jmp
mov
adc
cmp
pop
movd
push
movs
sbb
loop
add
(bad)
pop
mov
add
mov
add
outs
mov
jae
xor
dec
ins
fist
sbb
jns
popf
adc
xor
cmps
xchg
cs
dec
mov
adc
xor
dec
jnp
fnsave
ret
cmp
mov
sbb
add
jge
scas
mov
lahf
inc
mov
cwde
leave
(bad)
sti
ret
repnz
mov
scas
cwde
stos
xchg
scas
scas
out
adc
xlat
mov
test
nop
rcr
pop
jnp
test
pop
push
dec
mov
stos
fwait
or
sub
das
(bad)
nop
dec
sub
mov
and
lock
dec
jmp
cmp
mov
rol
inc
add
iret
jnp
mov
out
jmp
inc
sub
dec
rcl
mov
iret
fisub
retf
or
mov
xor
ret
push
sbb
dec
xchg
not
and
ds
addr16
or
mov
loopne
cmps
test
push
mov
cmp
test
jl
sbb
movs
test
les
(bad)
or
psubsw
loope
scas
and
jbe
cld
scas
mov
imul
sbb
sbb
xor
push
adc
xchg
call
rcl
aaa
inc
movs
sub
push
mov
push
aam
add
leave
push
lds
pop
inc
push
dec
xor
mov
pushf
(bad)
pop
ins
rcl
es
scas
push
and
adc
setle
pop
cmps
test
dec
jmp
lea
hlt
mov
sbb
lds
int
lods
cdq
lahf
push
mov
xor
add
mov
stos
mov
ja
push
dec
and
dec
pop
stc
push
out
fwait
ds
lods
and
mov
push
add
xchg
add
mov
icebp
(bad)
xchg
int3
pop
adc
pushf
call
es
popf
add
jo
add
push
jecxz
pop
movsx
lods
cmp
push
sbb
mov
sbb
das
(bad)
sub
jl
add
sub
push
jo
lahf
and
xchg
mov
xor
psllw
jae
cmp
and
in
add
inc
push
pop
mov
cmp
in
mov
retf
pop
xchg
sub
sbb
nop
sub
mov
cmp
fimul
cli
cmp
lods
nop
jno
and
lock
sub
jecxz
iret
sub
addr16
in
popf
cmp
sbb
fbstp
call
icebp
cld
enter
push
push
mov
scas
enter
int
xchg
jp
mov
pushf
push
cdq
jnp
dec
aad
std
sbb
cmp
scas
out
aad
mov
aam
pop
test
sbb
mov
out
call
fld
jae
leave
push
push
dec
(bad)
retf
lds
xchg
ss
mov
shl
and
test
repnz
jecxz
mov
xor
cs
push
or
mov
sub
test
adc
std
xchg
lods
bound
shl
adc
cmc
imul
aam
mov
mov
sahf
pop
loopne
mov
dec
arpl
leave
in
popa
lods
int
mov
lds
es
mov
cmc
sub
mov
das
mov
outs
mov
cmps
add
mov
pop
out
sbb
das
add
shl
aam
dec
es
jae
mov
sbb
or
in
push
mov
fisub
add
aad
mov
cmps
mov
mov
jbe
sbb
jae
sbb
cli
xor
dec
cmp
sub
sti
and
retf
adc
aam
fist
xchg
sbb
jg
cmps
aam
cmp
nop
mov
fucomi
in
fldcw
inc
jb
jmp
sbb
fmul
(bad)
shr
jecxz
or
in
sub
ins
and
clc
cmp
out
inc
test
sbb
fild
test
adc
xor
xchg
add
and
push
pop
nop
jo
nop
aam
jl
cmp
mov
imul
pop
int3
fwait
and
jmp
es
mov
and
and
mov
setbe
inc
push
mov
adc
scas
(bad)
rcl
imul
mov
arpl
xor
inc
das
push
add
jo
cmp
fidivr
push
push
idiv
cmp
(bad)
pushf
bnd
mov
inc
pop
mov
sub
lods
fiadd
dec
jbe
aam
dec
repnz
imul
mov
sti
sub
mov
cwde
addr16
aad
jle
imul
inc
les
cmp
mov
dec
mov
int
ds
adc
sbb
sbb
or
out
jno
aaa
std
pop
fwait
sub
pop
lahf
ret
xchg
xchg
mov
push
mov
test
push
out
mov
fcmovnbe
pushf
push
jmp
leave
call
fnstenv
pop
jg
mov
cld
dec
shr
push
sub
and
xor
push
lods
sub
je
jg
mov
sbb
lds
pop
test
push
push
out
in
pop
aaa
inc
sbb
in
and
add
mov
outs
cmps
imul
cmp
enter
inc
nop
es
pop
aaa
push
pop
rol
pop
jg
std
mov
xadd
sbb
mov
pop
pop
adc
(bad)
and
mov
mov
sbb
push
(bad)
sar
xor
push
cmp
dec
inc
cmc
pop
int
les
out
dec
pop
jl
pop
add
je
ror
ins
idiv
adc
cmp
out
push
pop
fld
pop
leave
jg
or
mov
imul
(bad)
pop
into
lods
retf
pop
movs
xor
or
cmp
dec
xor
dec
sub
jmp
adc
imul
mov
sti
inc
imul
cmp
pop
jge
jbe
add
xchg
adc
nop
mov
fild
std
mov
cmp
scas
mov
jnp
sbb
jbe
adc
jbe
(bad)
mul
mov
mul
or
xor
jbe
mov
jle
xchg
(bad)
out
pop
push
std
adc
out
test
adc
add
cmp
push
cmp
sbb
sub
frstor
dec
xor
cs
fadd
call
daa
stos
lods
inc
or
xchg
inc
sbb
aas
mov
call
stos
mov
sub
dec
dec
mov
add
lea
pop
(bad)
sub
mov
fild
call
sahf
xchg
cli
adc
ja
add
and
pop
sbb
pop
inc
adc
and
push
jbe
and
add
xlat
dec
mov
fdiv
xor
or
arpl
mov
pop
dec
in
popf
(bad)
loop
pop
mov
into
jge
mov
mov
inc
fsub
xchg
xchg
xor
adc
add
xchg
inc
popf
push
sbb
inc
lock
jg
push
loope
fnsetpm(287
adc
(bad)
aad
xlat
ror
sar
push
cmp
add
push
gs
pushf
inc
xchg
cs
and
outs
ja
xchg
ins
aaa
dec
jae
sahf
lods
loopne
mov
dec
pop
jmp
cs
rol
mov
xchg
test
in
xor
dec
out
lods
xor
ret
add
je
fiadd
pop
push
and
mov
and
mov
sub
ja
jae
adc
jno
sub
ret
fisttp
stos
push
jl
mov
inc
dec
inc
add
adc
mov
stos
(bad)
jae
cli
pushf
mov
mov
aas
and
cmp
jns
pop
xor
jmp
rcr
out
or
add
inc
ja
arpl
int
sbb
xchg
in
les
jnp
cs
pop
call
fisub
adc
xchg
jnp
loope
lods
adc
inc
or
pop
mov
sbb
mov
call
add
sbb
cmp
and
fldenv
test
nop
mov
movs
mov
clc
add
ss
es
(bad)
xchg
cmps
inc
out
mov
mov
or
xchg
aas
mov
(bad)
mov
aas
rcl
arpl
jmp
or
push
repz
mov
xor
push
movs
or
dec
jge
adc
inc
(bad)
(bad)
aaa
arpl
pop
sub
dec
leave
aam
dec
xor
sub
dec
mov
xor
cld
mov
jl
jno
pop
sub
mov
fild
int3
and
pusha
add
int
xlat
push
cmp
mov
fs
push
ror
jno
je
jae
stos
neg
mul
aam
xchg
ret
sbb
sti
mov
lods
and
test
dec
sti
push
ss
das
adc
cmp
pop
add
cli
cmp
in
jle
in
push
pushf
xchg
dec
movs
xlat
imul
dec
pop
xor
cmp
mov
push
movs
mov
push
adc
repz
sub
ficom
jp
and
(bad)
rcl
rol
mov
add
jo
ror
loopne
push
out
mov
add
lea
fld
cmp
dec
repz
in
fstp
mov
push
lahf
enter
in
xchg
sub
mov
and
dec
rol
xchg
cmps
lods
cld
mov
adc
pop
push
fst
jbe
imul
in
pop
xor
dec
lods
aam
sar
pop
ja
out
mul
aad
out
or
or
add
movs
pop
lahf
ins
in
mov
inc
push
shr
mov
sbb
sub
push
loope
pop
je
adc
lock
retf
int
jno
or
retf
(bad)
ins
aam
enter
or
popa
mov
iret
arpl
clc
cwde
mov
push
cmp
push
push
push
mov
daa
(bad)
mov
jmp
es
ds
push
ficom
scas
mov
pop
mov
adc
jbe
rcr
cmp
mov
mov
dec
repz
or
ret
dec
sbb
shl
lds
or
mov
clc
mov
inc
cs
add
add
daa
inc
sbb
jno
stc
int
dec
dec
(bad)
lock
clc
adc
add
lahf
stc
push
adc
add
(bad)
jecxz
gs
xchg
lock
xchg
mov
sbb
cdq
imul
aaa
(bad)
imul
sub
std
push
ins
popf
push
jle
mov
pop
inc
retf
cmp
adc
sub
ins
nop
(bad)
mov
sub
fcomp
xor
mov
adc
addr16
loop
and
popa
cmps
and
lock
outs
push
fwait
aad
cmps
pop
fst
jmp
jbe
hlt
cmps
mov
push
mov
jmp
ret
mov
call
push
xor
lods
pushf
sbb
ss
push
xchg
xor
and
xchg
or
sbb
pushf
jg
arpl
in
adc
add
or
imul
ficom
test
movs
jecxz
dec
es
or
(bad)
cmc
mov
into
sar
movs
ja
fs
add
pop
(bad)
(bad)
in
cmp
pop
sar
push
repnz
dec
push
mov
cmp
sbb
mov
arpl
fpatan
ret
push
les
ss
shl
xor
mov
mov
lea
mov
sbb
dec
in
pop
jp
fsubr
push
mov
call
das
sbb
stos
mov
sbb
mov
push
jmp
jno
or
rol
rcr
dec
aas
loope
pusha
cdq
xchg
jb
aam
cmp
or
dec
mov
xchg
repz
xchg
imul
pop
call
popa
pop
or
aas
cmp
push
xor
and
push
mov
scas
fisubr
retf
sbb
and
cmovns
in
std
popf
in
jg
pop
fadd
stc
jno
jnp
neg
jmp
xor
cld
add
jl
push
aad
sbb
sahf
or
mov
sti
xor
mov
adc
rcl
or
push
es
fyl2x
iret
ret
pop
sub
nop
je
and
add
adc
inc
lods
sub
adc
add
push
push
dec
sbb
shl
jmp
(bad)
push
imul
dec
imul
dec
inc
cmp
mov
adc
xchg
imul
pop
fisub
test
cmp
jmp
leave
js
mov
popa
hlt
pop
sbb
cmp
into
cdq
mov
inc
retf
adc
jmp
das
mov
cmp
inc
push
xor
(bad)
push
cld
or
iret
push
ins
fsin
ret
popf
ror
(bad)
and
lods
jnp
rol
cwde
(bad)
mov
neg
xor
adc
fsubr
mov
mov
dec
cwde
ja
push
pop
cs
cmp
xchg
add
pop
retf
repnz
stos
add
not
jge
repz
(bad)
xchg
scas
cmp
int3
and
mov
dec
test
or
xchg
int
mov
mov
ror
fcmovnb
jmp
or
mov
retf
add
rcl
adc
or
into
test
xlat
cdq
dec
call
jnp
into
(bad)
stos
xor
daa
test
sbb
mov
int3
jp
loop
sar
shl
mov
pop
xor
hlt
jno
out
cmc
dec
adc
in
pop
pop
jne
in
cmp
xor
mov
pop
scas
retf
bound
ror
sub
nop
les
out
(bad)
ins
dec
cdq
popa
imul
imul
pop
mov
inc
and
inc
mov
push
jo
fidivr
daa
and
mov
dec
mov
mov
arpl
dec
jae
bound
mov
jecxz
sub
xor
xor
xchg
adc
mov
cli
add
add
out
push
fcom
and
inc
dec
ss
imul
pmulhuw
leave
icebp
sub
ds
mov
xchg
xchg
add
pop
jbe
mov
cmp
push
or
mov
test
rcl
cs
(bad)
jg
adc
mov
(bad)
push
out
xchg
outs
mov
sar
shr
dec
cmp
imul
and
hlt
add
ficom
and
ret
or
pop
or
idiv
add
xchg
mov
and
xor
and
and
xchg
cmp
addr16
mov
dec
mov
mov
ins
mov
in
(bad)
(bad)
fbld
bsr
xor
jmp
(bad)
xchg
iret
sti
ret
pop
js
mov
mov
repnz
and
xchg
pop
out
in
inc
ret
and
hlt
(bad)
(bad)
jmp
xor
lock
jecxz
dec
pop
mov
pusha
xchg
stc
ret
or
mov
sub
mov
outs
fwait
ja
aad
out
in
push
mov
or
xor
aad
inc
lahf
ret
jno
nop
enterw
push
mov
icebp
jbe
mov
xchg
call
mov
gs
cmp
shl
mov
sbb
cs
xor
popa
add
or
dec
aas
loope
movs
dec
cwde
enter
cli
std
sbb
imul
push
ins
fsubr
test
ret
or
das
daa
aaa
test
ins
inc
ds
jns
and
xchg
mov
push
dec
xor
repz
rcr
std
sbb
jne
call
sbb
xchg
imul
sti
lock
iret
and
test
addr16
out
xor
mov
mov
int
pop
adc
jbe
pop
inc
enter
adc
out
pop
addr16
cdq
jg
popa
mov
mov
sbb
and
cmp
sahf
test
stos
popfw
nop
fsub
pop
push
adc
test
xor
jecxz
test
lahf
leave
pop
push
jmp
jns
lahf
in
mov
dec
dec
(bad)
and
dec
xchg
call
out
out
adc
shld
daa
movs
adc
and
mov
or
mov
sbb
cld
lds
sbb
jecxz
(bad)
or
xchg
push
jmp
add
inc
mov
fistp
lods
mov
jecxz
sub
jmp
lock
popa
mov
outs
sub
daa
pop
xor
fadd
dec
clc
xor
call
pop
leave
xchg
add
ss
mov
push
sub
and
jmp
repnz
xor
dec
sub
pop
aaa
push
xor
nop
fstp
cmp
retf
(bad)
fwait
sbb
mov
stc
mov
add
jge
retf
sub
inc
mov
jmp
adc
cdq
inc
aaa
scas
add
push
pushf
out
imul
pop
jbe
adc
iret
adc
out
scas
add
sbb
sbb
mov
mov
and
outs
das
sub
push
test
mov
(bad)
cld
mov
int3
mov
ret
push
mov
cs
stc
imul
data16
addr16
mov
mov
int
inc
cmc
sti
dec
fmul
adc
sub
mov
sbb
inc
push
outs
ins
pop
ret
push
std
mov
or
xor
daa
mov
mov
jb
js
xor
lock
jg
pop
inc
xchg
pop
addr16
or
js
icebp
loop
mov
(bad)
lea
mov
sbb
mov
movs
dec
mov
push
add
push
and
sub
push
push
imul
adc
in
stc
mov
or
outs
xchg
(bad)
ss
cmp
movs
enter
inc
(bad)
lea
pop
js
arpl
jbe
and
pop
add
jo
dec
add
gs
stos
movs
into
push
cmp
xor
xor
jl
sub
push
inc
inc
cmp
cmc
fadd
or
icebp
or
test
rcr
cmp
adc
ret
dec
stos
daa
sub
adc
fcomp
xor
cmc
out
pop
fist
fcom
test
stos
and
add
shl
mov
frstor
pusha
push
test
jnp
cdq
dec
push
sbb
xchg
daa
(bad)
pop
pop
stos
push
int3
sti
cmp
mov
popa
in
add
mov
cmc
cmp
cs
dec
lock
jge
push
lea
data16
test
(bad)
into
retf
addr16
push
ins
mov
sub
mov
mov
adc
fadd
fld
out
test
vpor
mov
inc
and
add
and
aaa
push
mov
loop
cmp
add
add
or
int
scas
xchg
sub
push
fisubr
into
sbb
pop
push
loope
shr
mov
inc
cli
fst
aad
(bad)
nop
jecxz
test
mov
pop
out
xchg
cmp
(bad)
stc
mov
ror
adc
xchg
inc
stos
mov
arpl
jp
xor
mov
mov
movs
mov
popa
jo
add
mov
add
and
imul
mov
xlat
xchg
push
fbstp
push
jnp
mov
out
push
xchg
cmp
jne
mov
mov
jo
retf
cmps
xchg
sub
xchg
mov
sub
ins
and
(bad)
aas
test
mov
pop
mov
jbe
dec
paddsb
retf
sbb
pop
mov
dec
adc
fnstsw
rcl
iret
pop
inc
lahf
js
arpl
ficom
jecxz
and
iret
xor
and
push
adc
sub
push
mov
sbb
mov
jp
lea
dec
mov
adc
jmp
sbb
fsub
jp
adc
xchg
pop
mov
mov
pop
and
fmul
xor
aad
test
xlat
dec
jmp
ret
(bad)
fidiv
pop
dec
mov
int3
ins
outs
xchg
jmp
idiv
popa
test
jbe
clc
sub
and
add
jp
cld
pop
loop
pop
xor
mov
cmps
jle
mov
and
aaa
(bad)
in
mov
xchg
aad
jecxz
cmps
pop
iret
or
jmp
in
xchg
mov
arpl
sti
cmps
fisub
(bad)
in
loop
add
lahf
mov
cmp
add
sbb
cld
daa
test
jmp
xchg
push
aaa
inc
enter
and
loop
sub
inc
mov
xor
mov
dec
and
das
test
test
stc
push
cmp
mov
fld
cld
or
ins
hlt
outs
xor
xor
imul
lahf
push
pop
mov
cld
mov
add
icebp
call
mov
call
and
mov
je
sbb
cmps
aam
sar
xchg
test
cmc
adc
ins
aam
daa
fidivr
push
daa
jnp
mov
or
movs
inc
nop
dec
xchg
pop
adc
mov
push
mov
cld
cmc
in
fwait
inc
mov
dec
lods
test
fwait
outs
mov
pop
add
fisttp
jge
mov
aas
pop
jo
out
std
adc
inc
imul
hlt
cmp
pop
mov
and
pop
add
out
sub
push
fnsave
jno
push
xchg
push
movs
nop
pop
pop
jg
xchg
or
sbb
mov
sti
repnz
sbb
cmp
mov
div
cmp
mov
xchg
cli
addr16
jmp
sub
xchg
iret
pop
mov
mov
xchg
push
jge
xlat
jecxz
punpcklbw
lods
cmp
hlt
(bad)
std
cli
jmp
mov
or
or
push
dec
sbb
les
sti
ins
outs
out
mov
and
jo
or
mov
mov
(bad)
cld
in
xor
sbb
xor
jns
push
xor
add
clc
ret
sbb
push
pop
mov
retf
shl
push
inc
mov
jmp
cdq
leave
inc
xor
(bad)
cmp
pop
push
pop
cmp
jg
ins
xor
fnstenv
inc
pop
push
and
pop
cmp
bound
mov
jae
ja
mov
sub
mov
iret
mov
mov
push
mov
add
mov
pop
retf
js
jmp
inc
push
fldenv
jne
jno
or
and
inc
jbe
cld
mov
adc
xor
add
imul
mov
cdq
add
pop
or
icebp
lea
test
push
addr16
cmps
and
pop
scas
clc
iret
add
ja
or
xor
inc
int
(bad)
push
dec
or
or
jno
pop
and
int3
push
jb
retf
ins
mov
popf
test
(bad)
cmp
and
mov
and
(bad)
cmps
ret
push
into
cmc
add
ror
sub
cmp
dec
push
pop
imul
je
cmp
sahf
cmps
jbe
push
aas
(bad)
push
sub
addr16
and
mov
push
ret
mov
pop
aam
arpl
adc
hlt
rcl
(bad)
arpl
or
into
or
inc
lods
lods
repz
into
mov
mov
iret
adc
fsubr
dec
jnp
jb
sbb
call
add
jnp
push
call
out
adc
cmp
bound
lahf
stc
or
rcl
jmp
lds
in
mov
jnp
loope
cwde
add
and
cdq
cmp
xlat
les
pop
sub
scas
sti
fdivr
cld
int
add
and
fisub
xchg
cmp
aas
xor
scas
sbb
aaa
movs
inc
(bad)
pop
push
loope
pushf
cmps
bswap
call
cwde
lahf
dec
pop
fimul
out
cwde
xlat
mov
sti
jg
inc
imul
adc
in
repz
mov
jecxz
std
push
push
cmp
pop
fild
loope
mov
stos
mov
lds
mov
cmc
xor
xchg
mov
cmp
or
adc
sub
cmp
add
dec
hlt
mov
pop
out
out
stos
daa
sub
xor
jb
sbb
clc
jle
push
sbb
js
call
test
sti
arpl
(bad)
push
push
movs
icebp
pop
jnp
fnstenv
sub
inc
mov
loopne
fcom
fldcw
nop
mov
cdq
je
mov
jmp
fstp
shl
add
adc
and
inc
xor
mov
xchg
or
jns
mov
mov
movs
movs
scas
pop
cmp
leave
ss
shl
inc
outs
ss
dec
out
mov
mov
mov
shr
cmp
inc
cmc
push
adc
int
mov
and
sub
stc
cmps
adc
enter
jbe
and
ror
outs
fmul
dec
pop
imul
sbb
outs
into
pop
cs
ds
and
xor
mov
enter
movs
rol
data16
xchg
out
or
push
add
add
rol
inc
xor
xor
push
push
fcmovbe
inc
push
loope
inc
mov
push
sbb
pop
(bad)
xor
popa
inc
sub
fcomp
data16
jmp
neg
xchg
xchg
jns
icebp
nop
xchg
adc
jne
(bad)
paddusw
jmp
add
dec
sub
out
cmps
inc
xlat
out
xchg
cmp
mov
mov
mov
hlt
div
out
in
aam
stc
leave
not
in
leave
jmp
mov
adc
fldenv
sar
dec
ins
pop
sbb
jno
lods
cwde
inc
fisubr
push
dec
xchg
dec
push
(bad)
fisubr
jge
test
ins
out
lods
daa
inc
mov
popa
xchg
sahf
or
push
adc
pop
cmp
push
fisub
fild
mov
push
in
sbb
inc
xor
fnsave
std
in
mov
movs
aas
fisttp
cwde
jne
sub
loope
and
jnp
jmp
retf
sahf
cdq
addr16
in
ja
jp
and
daa
cmp
push
inc
lods
mov
xchg
aas
pusha
add
xor
xor
stc
cdq
cmps
push
adc
fwait
pop
jecxz
imul
out
sub
cld
iret
hlt
outs
jmp
cmps
int
add
ja
xchg
lds
popf
mov
pushf
pop
dec
call
and
call
clc
out
daa
push
jbe
call
rcr
jmp
bound
adc
sbb
add
cmp
dec
jns
sbb
sti
push
hlt
outs
jmp
cmp
cdq
pop
mov
aaa
and
ficom
dec
cmp
pop
mov
push
adc
mov
adc
jmp
loop
jne
pop
or
arpl
popf
fldcw
call
jns
lods
sbb
adc
stos
rol
scas
ss
push
popf
dec
inc
bound
adc
cwde
dec
jg
gs
pop
mov
dec
sbb
cmps
or
mov
jns
inc
push
jns
or
lods
cmp
xchg
xchg
ret
into
popa
test
test
inc
adc
fimul
call
addr16
xor
add
push
xor
dec
xchg
xor
inc
stos
les
jae
stos
mov
leave
sub
and
sub
ss
adc
mov
mov
xor
mov
ja
or
adc
sti
xchg
dec
aam
pop
xchg
stos
and
dec
inc
mov
inc
add
std
xor
sub
adc
jmp
lds
cmp
iret
and
mov
scas
sbb
pop
push
mov
or
xchg
xor
repnz
xlat
mov
js
jb
loopne
jp
cmp
add
mov
shr
jnp
dec
inc
or
fwait
fs
bound
int3
jge
pop
shl
push
stc
rol
dec
inc
imul
adc
dec
lods
sbb
mov
out
outs
xchg
jg
repnz
shr
icebp
mov
inc
ins
retf
je
data16
xor
ja
in
xchg
push
mov
xlat
retf
sbb
adc
pushf
(bad)
sbb
dec
leave
mov
icebp
frstor
shufps
and
jmp
stc
repnz
push
or
retf
and
movs
cmp
in
mov
test
mov
xor
lds
xor
mov
or
sub
hlt
dec
loopne
stos
or
icebp
xchg
cwde
mov
out
and
inc
jmp
dec
movs
scas
pop
(bad)
or
out
imul
sub
cmps
pusha
sbb
daa
lahf
mov
or
mov
dec
pop
mov
lock
ret
mov
mov
xchg
or
dec
dec
push
aas
dec
rol
test
pop
sub
popa
and
retf
inc
test
or
jl
xchg
xadd
jno
cs
hlt
je
sub
cmps
test
mov
push
sub
sub
mov
icebp
mov
les
cmps
scas
inc
es
add
add
add
dec
je
mov
lea
xchg
pop
xor
mov
mov
shl
mov
mov
scas
ret
call
adc
sahf
jb
ins
idiv
stos
rcr
sbb
or
jb
mov
daa
dec
xchg
std
mov
xor
popf
xor
inc
sub
rol
jns
mov
mov
leave
lahf
bnd
ins
sbb
fnstsw
pop
sub
cmc
dec
int
in
loop
aas
movs
mov
jbe
(bad)
sti
pop
push
fmul
xchg
sub
neg
mov
push
repz
outs
adc
mov
jle
cmp
es
xchg
popa
xor
mov
mov
inc
sub
movs
push
aam
cli
ja
mov
push
mov
and
lahf
shr
ficomp
push
sbb
dec
cmc
mov
inc
and
sub
push
sbb
xchg
dec
xchg
ficom
jbe
pop
cdq
inc
scas
je
push
ins
mov
sahf
ins
in
sub
add
out
cs
pusha
(bad)
sbb
lock
sub
inc
add
fistp
stos
shr
cwde
xor
imul
int
in
idiv
lods
popa
out
retf
mov
pushf
ret
or
add
aad
test
add
xor
out
cli
add
pop
and
dec
xor
scas
mov
jmp
jecxz
lds
xchg
pop
sar
icebp
xchg
arpl
cwde
mov
maskmovq
idiv
sub
sar
(bad)
outs
std
ja
sbb
sbb
jp
dec
std
fst
sub
in
dec
mov
cli
inc
out
call
push
clc
xor
cdq
cmp
stos
pop
test
sbb
movs
movs
nop
mov
push
gs
mov
int
mov
inc
stos
and
add
outs
cmp
js
sub
nop
dec
push
out
xchg
imul
gs
pop
cmp
bound
(bad)
jge
jno
push
dec
add
sbb
call
repnz
test
mov
mov
cmp
jl
addr16
movs
xlat
stos
push
enter
jmp
inc
test
xor
out
jp
fsub
jnp
outs
cwde
lahf
arpl
mov
popa
sub
jb
jle
scas
push
jmp
std
adc
adc
or
dec
push
inc
sbb
stos
mov
dec
jbe
(bad)
jmp
ds
pop
shl
test
push
or
mov
sti
sbb
mov
bound
test
hlt
dec
mov
stc
ss
je
sub
pop
loopne
jno
(bad)
push
adc
push
leave
not
sti
imul
xchg
inc
rcr
add
(bad)
push
sbb
in
lock
or
inc
lahf
push
and
xchg
mov
cmps
jno
inc
lods
arpl
bound
mov
out
comiss
movd
sub
(bad)
cmp
xlat
fisubr
push
aad
imul
das
retf
rcr
dec
and
mov
inc
aaa
fcom
pop
or
stos
clc
push
push
or
into
jp
adc
stos
cmp
stos
xchg
jbe
icebp
jbe
mov
sub
jle
ins
aam
mov
and
in
or
std
jns
fidiv
ss
stos
and
cmc
outs
(bad)
xchg
fmul
cs
push
xor
mov
mov
jecxz
xor
jg
sbb
lahf
sbb
stc
out
or
fistp
test
leave
out
xchg
(bad)
aas
add
jp
mov
push
stos
iret
shl
arpl
lock
mov
bound
daa
dec
sub
dec
jne
arpl
add
jg
or
lock
loope
xor
push
test
cmp
scas
and
pop
(bad)
inc
inc
lods
daa
xlat
retf
cmc
into
or
xor
sub
lods
rol
call
jmp
ret
or
mov
add
in
xor
dec
sub
and
fimul
les
push
inc
inc
inc
cmp
push
push
scas
test
or
stc
jmp
sub
dec
loopne
daa
cld
cmps
sbb
inc
jb
jnp
in
adc
fisttp
ins
cli
mov
xchg
int
inc
frstor
xor
mov
aas
in
and
sbb
dec
or
jno
or
sub
fsub
nop
out
and
inc
xor
xor
xchg
and
or
jb
sub
xchg
jns
inc
add
pop
xor
popa
adc
or
mov
add
jecxz
ret
xor
ret
dec
and
mov
lds
int
leave
pop
icebp
cmps
pushf
add
sbb
pop
outs
push
dec
mov
aam
je
dec
mov
pop
push
mov
ins
repz
jmp
push
push
gs
inc
test
into
or
aas
sub
fnsave
out
fst
in
ss
mov
mov
div
inc
jecxz
imul
es
push
mov
inc
jmp
lods
cmp
pop
loop
xchg
jnp
jae
xlat
ds
fwait
mov
lods
or
mov
cmp
sub
ins
dec
pop
mov
jl
adc
and
sbb
outs
in
fisttp
fdiv
or
push
fwait
retf
sbb
cmp
mov
dec
add
pop
pop
push
(bad)
xchg
dec
inc
cmp
mov
cmp
push
inc
cdq
scas
repz
push
mov
clc
rcr
dec
pop
sub
jnp
fidivr
ja
inc
jbe
cmp
push
lods
sbb
pop
outs
mov
jns
pop
or
sahf
mov
(bad)
mov
cwde
cdq
popf
push
shr
push
test
je
hlt
jmpw
mov
dec
ret
or
das
pop
and
inc
sub
out
push
test
inc
mov
pushf
inc
fistp
iret
push
cmps
mov
(bad)
(bad)
outs
add
sub
loopne
pop
int3
cdq
pop
mov
jl
inc
sti
adc
fwait
sub
xchg
mul
ds
popf
push
pop
leave
mov
or
stos
sahf
(bad)
mov
adc
push
mov
jno
je
adc
retf
rcl
fisttp
push
rcl
loop
mov
outs
sti
loopne
sub
iret
imul
inc
sub
and
pop
dec
push
mov
or
pop
out
xchg
pop
lds
aaa
sbb
ret
aaa
xchg
xor
(bad)
test
(bad)
packuswb
mov
sub
ror
and
push
outs
cmps
push
fnstcw
mov
fstp
xchg
and
xlat
ins
scas
(bad)
lahf
inc
mov
hlt
sbb
out
mov
mov
xor
xchg
push
gs
push
xor
test
pop
mov
out
push
imul
push
cmp
in
rcr
sub
je
sbb
mov
cmp
dec
xchg
lods
dec
cmp
sub
push
daa
aad
xor
cmp
sbb
dec
icebp
in
repnz
scas
xor
xchg
std
aam
popa
and
dec
sub
sbb
adc
sbb
cmps
mov
aam
test
push
ror
(bad)
xor
xor
adc
std
cmp
loope
mov
imul
out
xchg
adc
fisttp
leave
add
scas
jl
stc
or
mov
add
data16
(bad)
mov
mov
sahf
mov
xchg
lea
hlt
in
mov
sbb
sbb
sub
scas
and
ret
cmps
mov
outs
inc
push
dec
push
and
mov
push
jnp
jo
mov
cmc
sub
ret
or
mov
test
pushf
out
repnz
dec
fild
enter
data16
adc
cmps
fs
push
pop
sbb
push
mov
inc
xor
int3
shl
test
js
cdq
icebp
and
inc
lods
inc
push
cmp
pop
mov
outs
repnz
mov
xor
jno
or
push
fnstsw
(bad)
fwait
dec
loopne
outs
cmps
jge
add
pusha
push
xchg
clc
in
popa
xchg
popf
xor
cmps
fild
adc
ret
push
scas
out
push
inc
xchg
imul
ret
retf
pop
dec
pop
inc
adc
add
scas
and
mov
lahf
(bad)
std
inc
or
(bad)
push
bound
mov
jp
scas
push
es
jecxz
js
mov
dec
movs
call
lock
aad
mov
push
ins
faddp
dec
loop
(bad)
jp
pop
mov
aam
sub
dec
pop
lods
ins
sbb
adc
in
cmp
fs
add
jmp
adc
lods
fmulp
cs
or
cmp
arpl
sub
xor
imul
mov
jge
mov
int3
mov
bound
fimul
xchg
sbb
jl
push
cmps
inc
aam
add
xchg
adc
jne
push
pop
push
xchg
xlat
out
sbb
psubsb
push
and
push
pop
rcl
xor
jne
mov
sub
mov
mov
fbld
xchg
daa
out
pop
mov
add
jmp
sbb
lock
cmp
fsubr
dec
xlat
int
(bad)
jge
jb
(bad)
sbb
mov
adc
dec
push
jg
xor
pop
jbe
leave
scas
xchg
push
dec
rol
arpl
mov
or
xchg
sub
mov
and
xchg
and
aam
cmp
dec
and
data16
xchg
pop
loop
fld
das
lods
sub
push
jbe
or
mov
mov
enter
jmp
mov
jecxz
sub
xchg
push
pop
(bad)
fld
inc
arpl
stc
and
and
and
and
push
cli
jl
mov
(bad)
xchg
sub
call
push
adc
ja
pop
xchg
xor
retf
in
(bad)
hlt
out
xlat
gs
jg
in
mov
idiv
daa
adc
int
xor
test
scas
sub
xor
loope
and
fimul
imul
cmp
xchg
ja
dec
mov
adc
cmp
sbb
neg
jle
int
jae
cmp
xor
and
sub
add
js
or
cmp
pop
int3
test
xor
nop
xor
rcr
addps
push
outs
test
dec
test
push
enter
fild
xchg
adc
mov
or
dec
out
mov
dec
mov
scas
mov
mov
dec
xchg
test
lahf
add
out
mov
dec
adc
int3
pushf
mov
mov
cmp
pusha
ss
movs
add
cmp
nop
adc
mov
push
jecxz
push
sbb
(bad)
and
sbb
mov
lahf
adc
lods
cs
jp
iret
adc
mov
repnz
xor
xchg
lahf
loop
push
jmp
lock
movs
adc
push
add
cmp
je
das
and
and
add
scas
imul
xor
inc
cdq
daa
cmps
jne
fmul
mov
outs
pop
js
imul
cmps
jo
jmp
neg
hlt
shl
cmp
push
and
movs
pop
test
ja
jecxz
cmp
or
cmp
(bad)
xchg
and
pop
addr16
ror
test
cmp
xrelease
dec
retf
rol
fwait
cmps
mov
or
out
dec
push
cmp
sbb
rcl
int3
shl
xchg
int
jge
aaa
ficomp
sub
shl
pushf
jo
ret
imul
lds
stc
cld
jno
push
test
sub
mov
xchg
rcr
adc
stos
dec
cli
mov
data16
fild
aam
xlat
xor
(bad)
cmp
mov
sbb
push
shl
pop
mov
mov
int3
cmc
fadd
rcl
(bad)
fist
dec
and
fdivr
dec
fild
xchg
hlt
add
jne
ret
outs
or
push
imul
movs
xor
fbstp
ins
les
mov
loop
out
fwait
sub
cmp
jmp
sub
jle
fcmovu
mov
fs
int
int3
(bad)
jl
jmp
dec
jo
pop
jno
ror
shl
mov
cmp
push
dec
add
mov
sbb
retf
add
push
jo
clc
outs
add
popa
xlat
adc
dec
pushf
pusha
mov
std
mov
add
imul
or
fstp
ret
jl
in
adc
and
mov
inc
sbb
xchg
or
pop
push
inc
dec
add
push
lea
push
xor
push
hlt
jbe
cwde
jo
jmp
fidivr
pop
ins
xchg
test
inc
(bad)
es
ss
ds
das
in
and
add
sub
jae
cld
out
cmp
inc
in
dec
inc
and
push
cmc
mov
mov
or
mov
jg
jle
and
sbb
mov
inc
cwde
xlat
jbe
jmp
in
imul
mov
jb
jae
push
addr16
cmp
call
loope
fdiv
adc
xchg
aam
push
out
je
and
daa
and
mov
(bad)
sahf
xchg
xor
(bad)
fwait
in
stos
xor
push
inc
cli
pop
or
add
push
ins
add
hlt
and
fidiv
adc
push
dec
pop
mov
int
out
aad
out
xchg
cmp
mov
cmp
add
push
xor
pusha
and
mov
mov
sub
mov
jb
push
stos
(bad)
sbb
push
jmp
or
mov
jae
ins
sbb
pop
mov
cli
mov
jecxz
mov
mov
sahf
in
pusha
push
push
dec
push
aas
mov
cwde
jge
enter
icebp
nop
sbb
jo
in
(bad)
jnp
push
outs
sub
or
ror
mov
cmp
repnz
std
cwde
sub
jl
outs
xlat
addr16
into
sbb
add
jbe
adc
inc
nop
sbb
cmc
xor
xor
inc
mov
(bad)
outs
sub
mov
out
pop
cmp
je
fld
mov
fsubr
xchg
out
cmp
and
movs
aad
adc
in
xchg
pop
push
cmp
test
leave
cmps
into
pushf
leave
push
jo
cmps
fadd
cld
jns
out
call
fwait
xor
(bad)
je
mov
add
test
(bad)
clc
outs
adc
mov
mov
movs
xor
ret
ja
mov
xchg
rol
push
push
cmps
xor
xchg
xchg
jmp
cmp
shl
outs
ret
clc
lahf
and
push
outs
dec
mov
int
cmc
scas
enter
lds
fisubr
mov
and
adc
out
fmul
inc
stc
jmp
aas
mov
lahf
sti
push
jge
pusha
ret
fwait
push
(bad)
loop
or
leave
cmps
aas
pop
add
mov
adc
daa
xor
das
std
into
fcomp
int
jno
loop
sbb
add
mov
push
sub
(bad)
js
or
push
cwde
dec
fsub
push
mov
sub
scas
dec
sub
mov
xchg
mov
sub
and
lds
cs
cmp
loopne
test
sar
and
xchg
mov
xchg
movs
xchg
xor
aaa
fstp
sbb
sbb
lea
ss
mov
jecxz
repz
addr16
and
das
mov
adc
sbb
mov
into
cmps
sbb
fiadd
push
pushf
xchg
adc
test
scas
dec
mov
cmp
jg
sahf
or
cmp
inc
pop
adc
inc
sbb
loopne
(bad)
cmc
and
scas
jmp
retf
jmp
(bad)
imul
call
out
leave
push
or
adc
cmp
mov
mov
div
mov
or
add
jo
fs
cmp
daa
dec
ret
xor
sbb
sbb
jno
bound
add
cs
out
fiadd
or
lods
inc
sbb
jge
jne
xchg
jns
call
aam
dec
fprem
jl
cmps
xor
out
mov
mov
aas
inc
aam
cmp
xchg
fwait
pop
inc
in
add
push
xchg
test
sahf
mov
dec
mov
sar
cs
xchg
dec
clc
enter
mov
sub
fsubp
cli
dec
or
jmp
out
cli
mov
outs
inc
and
pop
push
mov
dec
sub
push
(bad)
fsubr
pusha
cmc
or
inc
imul
push
ds
div
aad
and
sub
add
sub
cli
add
pop
xor
xor
fwait
out
std
push
cmp
inc
cmps
popf
and
je
lock
out
mov
dec
repnz
ja
clc
jne
div
push
add
scas
xchg
jmp
push
arpl
mov
fldenv
(bad)
rcr
cwde
add
rol
xchg
in
dec
xor
sahf
jp
cmp
xchg
or
add
dec
push
loopne
cmp
adc
push
int
xchg
into
out
daa
cmc
leave
mov
jbe
cwde
push
aad
cld
mov
mov
lds
and
push
inc
in
mov
call
pop
cmp
cmp
jae
inc
sub
mov
xchg
pop
retf
cmp
push
shl
xchg
pop
call
loopne
hlt
pop
xchg
push
mov
in
out
iret
je
sbb
in
dec
int
pop
pop
adc
popf
pop
and
mov
xchg
in
dec
sahf
pop
jb
std
add
fiadd
xchg
lea
loope
cmp
call
jmp
in
cmp
jb
xlat
out
not
or
in
xor
les
push
adc
movs
test
bound
and
aad
add
mov
push
add
lock
rcr
xchg
pop
out
call
add
clc
cmps
rcl
shl
ret
cmp
fcomp
or
scas
out
mov
xchg
out
xchg
jno
and
repnz
popa
push
inc
ror
cmps
icebp
stc
scas
sub
movs
enter
and
mov
push
mov
add
imul
cmp
rol
cmp
cmp
lock
idiv
retf
xlat
push
retf
aas
fcomip
cmp
mov
sbb
xchg
cmp
sbb
cs
je
rcr
xor
mov
rcl
adc
into
outs
mov
call
and
pop
sub
(bad)
or
xor
and
ret
shl
dec
dec
scas
stos
xchg
pop
xchg
cli
neg
push
inc
dec
pop
xlat
mov
movs
xchg
push
jecxz
xor
scas
xlat
fdivr
pusha
arpl
sub
arpl
hlt
call
mov
imul
loope
retf
int
inc
sbb
in
sbb
aaa
jg
loop
mov
sar
lds
inc
stos
hlt
sbb
loope
adc
cmp
repnz
lea
ins
xchg
mov
dec
in
sbb
repnz
shl
repz
dec
test
addr16
adc
pop
mov
adc
push
ds
sbb
or
add
inc
cmp
out
sbb
ret
sub
add
mov
cmp
stos
push
mov
or
ins
aas
dec
gs
adc
and
idiv
mov
or
stos
stos
mov
lods
call
shl
ja
or
push
dec
ret
fadd
mov
sti
(bad)
fild
cmp
in
imul
xor
rol
out
fmul
xchg
xchg
mov
jmp
add
fwait
sbb
icebp
inc
dec
sbb
imul
call
cmovs
mov
jmp
inc
or
jns
ds
lds
xor
dec
mov
inc
adc
outs
test
push
add
out
dec
pop
xchg
fwait
jge
out
pop
pop
inc
xchg
jp
mov
cdq
add
mov
push
sahf
fimul
and
cwde
push
(bad)
add
rcl
mov
aam
push
iret
cmp
mov
mov
inc
fist
nop
adc
pusha
push
sti
ror
push
pop
movs
mov
or
push
loope
sbb
add
mov
sti
sub
pop
movs
cdq
mov
mov
(bad)
push
arpl
xchg
outs
dec
mov
cmp
enter
sbb
push
jmp
fst
jb
inc
pop
ret
sahf
adc
xor
xor
jecxz
xchg
daa
fst
out
js
mov
popa
out
jo
das
or
and
dec
jb
add
xor
add
or
cdq
mov
mov
mov
xchg
out
jmp
mov
fdivr
jnp
dec
lods
xchg
fmul
push
test
inc
clc
call
ja
ins
(bad)
xlat
jns
mov
(bad)
test
mov
mov
int
in
in
xor
repnz
iret
push
jbe
outs
js
lea
jbe
inc
inc
lock
sub
leave
cwde
lds
rcl
inc
retf
jge
push
out
jnp
mov
jns
cmps
cmc
outs
add
and
pop
push
cmp
rcl
or
sub
mov
mov
bswap
loop
imul
push
or
cs
in
mov
test
mov
cmp
bound
bound
inc
cdq
push
push
sub
dec
(bad)
pop
push
push
dec
test
fwait
add
stc
xchg
pop
fwait
ret
adc
sbb
xor
data16
and
pop
neg
test
dec
mov
sbb
dec
pop
dec
jno
and
mov
adc
je
mov
mov
stos
push
cmp
push
sti
fnstenv
movs
mov
imul
push
ds
cmp
dec
mov
jns
call
leave
dec
test
xchg
repnz
out
fsubp
mov
xchg
(bad)
adc
(bad)
jp
fcomp
mov
cdq
push
mov
cmp
dec
sbb
or
(bad)
std
cli
adc
adc
ss
mov
aas
stc
or
mov
ror
test
sub
int
xchg
dec
pop
push
push
mov
stc
fdivr
sub
pop
fistp
add
pop
add
outs
loop
les
xchg
loopne
sub
test
jmp
cdq
in
sub
mov
xchg
repnz
adc
test
mov
ficom
ret
scas
xor
or
add
sbb
push
mov
jno
xchg
mov
ins
cmp
stos
(bad)
mov
jno
cmp
xor
xchg
ds
adc
inc
adc
daa
push
int
push
pop
daa
and
pop
push
test
cld
cdq
push
push
mov
jmp
dec
pop
dec
xchg
mov
pusha
fild
rcr
cs
push
imul
mov
loope
hlt
(bad)
mov
out
add
out
xor
mov
dec
push
xor
add
sbb
(bad)
in
dec
jl
faddp
bound
out
mov
aas
pop
push
jmp
inc
nop
test
pop
(bad)
out
and
mov
bound
call
cmp
xchg
sbb
cdq
jge
adc
add
cld
xor
xchg
pop
pushf
cdq
punpckhdq
add
jne
fld
sbb
test
push
sbb
iret
pop
ror
dec
aaa
daa
cmps
loope
pop
pop
cmp
test
lods
mov
mov
push
jle
push
jge
cli
retf
aaa
sub
xor
push
xor
mov
fdiv
push
nop
mov
mov
mov
and
imul
imul
pop
mov
pop
outs
dec
xchg
ins
repz
mov
or
lods
add
aaa
pop
nop
sbb
and
das
jl
xor
or
pop
add
jmp
enter
sub
mov
cmps
jae
pop
and
pop
loope
push
inc
lods
push
popf
(bad)
cmp
fnsave
add
cmp
add
xchg
aaa
sti
pushf
aaa
ret
fisubr
shl
mov
cmps
repz
pop
mov
sti
test
push
dec
and
out
dec
jmp
int3
cmp
mov
mov
lods
jb
sbb
sbb
lahf
jmp
out
cwde
fnstcw
jns
mov
cs
jns
mov
xchg
(bad)
or
xchg
(bad)
sub
sub
sub
pop
sbb
shr
inc
or
mov
adc
imul
lods
mov
outs
fwait
sub
push
or
cmp
mov
(bad)
sbb
and
cmps
jo
mov
jmp
jnp
enter
pop
add
bound
and
inc
rol
fcomi
ret
stc
mov
cmp
retf
(bad)
cmp
inc
dec
std
jmp
cmp
imul
sar
not
push
dec
cmp
retf
in
add
cmps
inc
jmp
cmp
ja
and
pop
lods
xchg
test
lds
cmp
add
(bad)
movs
lea
cld
mov
popa
mov
or
repz
fs
and
into
or
out
mov
adc
es
or
imul
js
mov
or
pop
lea
mov
mov
cli
adc
pop
cmc
fld
jg
mov
in
outs
adc
sub
in
call
dec
outs
mov
hlt
leave
jmp
inc
mov
cmp
mov
(bad)
pop
mov
jns
jmp
repnz
jae
cmp
sbb
or
mov
and
sub
scas
mov
inc
mov
and
ds
push
pusha
ret
adc
and
js
es
scas
test
jmp
fs
jecxz
test
test
cmp
cmps
retf
mov
sub
retf
out
mov
jnp
push
cmp
sbb
inc
add
repnz
rcl
push
pushf
cmp
dec
jp
inc
loop
cmp
push
lds
(bad)
xchg
mov
push
adc
test
jbe
test
ins
sbb
mov
shl
out
cmps
or
sbb
shl
stos
cmp
xchg
sbb
jmp
test
cmp
das
out
jecxz
test
sub
xor
xor
out
lar
fs
mov
dec
cmp
xchg
fdiv
sub
cs
dec
bound
lds
shl
cld
mov
into
dec
ds
mov
push
sub
in
inc
(bad)
stos
push
xor
add
fnstsw
pop
in
stos
pop
in
retf
xchg
jo
push
pop
mov
je
in
stc
cwde
imul
sub
mov
(bad)
xchg
mov
jmp
xchg
(bad)
retf
loope
xor
cmp
sti
repnz
xor
stc
jle
scas
out
push
xor
clc
cwde
cmp
adc
(bad)
fisttp
test
aas
sub
adc
outs
jge
add
shl
mov
adc
aaa
mov
xchg
not
repnz
enter
scas
stc
test
popf
inc
mov
sub
scas
push
pop
push
xchg
mov
pop
pop
add
jne
xor
test
push
add
bsf
ins
retf
aaa
fwait
pop
sbb
jmp
sti
pop
mov
cs
stc
fistp
fistp
fwait
pop
or
sub
test
scas
mov
nop
xchg
gs
fistp
mov
das
ret
ret
sbb
pusha
cwde
ins
rcl
xchg
sub
inc
cmp
test
xchg
rol
pop
and
fs
xor
and
daa
(bad)
adc
retf
fwait
lods
add
icebp
vhsubps
ins
lds
xor
mov
out
les
imul
lahf
adc
in
xlat
cwde
jb
gs
sti
jnp
ins
retf
dec
xor
scas
xchg
test
loop
mov
jno
push
sub
and
(bad)
dec
lock
sbb
leave
outs
movs
push
scas
sbb
es
inc
jbe
dec
mov
popa
xchg
mov
in
imul
arpl
inc
dec
adc
call
sbb
aaa
cmp
es
push
push
enter
scas
mov
xchg
inc
mov
cld
bound
sbb
(bad)
aam
sub
dec
or
pop
mov
and
adc
pop
sar
pop
jnp
iret
(bad)
retf
js
std
and
cmp
sbb
or
add
imul
retf
fstp
push
sahf
jno
pop
jmp
xor
and
leave
mov
sbb
mov
mov
data16
ins
enter
mov
cmp
jmp
shr
xchg
imul
inc
rcr
aad
mov
inc
or
movs
pop
mov
adc
lods
jnp
mov
mov
out
int
adc
mov
retf
loope
jb
fwait
cmps
adc
push
bound
xor
xchg
xchg
ins
sub
(bad)
pop
jns
xlat
mov
movs
pop
ins
pushf
in
pop
mov
jnp
jns
repz
push
cmp
sbb
inc
in
mov
jg
mov
jl
(bad)
and
es
test
mov
dec
in
push
xchg
mov
xor
popa
jecxz
clc
clc
mov
pop
and
xor
jae
shr
cmp
cmps
xlat
pop
xchg
jge
mov
sub
fwait
shl
jmp
sbb
xchg
cwde
bswap
or
sub
mov
mov
ret
enter
rcr
test
aad
or
push
ins
xor
jmp
mov
xor
call
mov
in
dec
ins
jl
mov
ss
xlat
push
adc
movs
inc
add
xchg
dec
pop
shl
add
push
lods
cmp
cli
rep
imul
std
imul
jge
les
mov
adc
call
jno
inc
scas
sub
sbb
retf
leave
push
lahf
stos
xchg
movs
test
fst
rcr
ja
push
sub
pop
inc
cmp
xor
fistp
mov
cmc
sub
mov
dec
mov
test
jle
inc
sti
push
clc
mov
or
fwait
jbe
ret
inc
arpl
jle
mov
xchg
sbb
cmc
shr
cli
jle
jae
das
js
push
jg
push
aaa
mov
push
pop
pop
jecxz
xlat
inc
jge
imul
test
and
mov
cmc
(bad)
daa
sub
test
xor
mov
add
mov
mov
jbe
retf
sub
cmp
dec
push
(bad)
pop
loope
sbb
and
or
fstp
out
rcr
loope
mov
stc
std
inc
leave
and
sub
push
in
cmp
jo
test
std
cmp
xchg
mov
or
mov
sub
(bad)
or
mov
out
adc
sti
xor
sub
lds
mov
sbb
cmp
fwait
and
pop
xor
mov
test
and
je
retw
cwde
or
jo
hlt
clc
adc
outs
jle
adc
mov
jp
push
(bad)
fidivr
lods
mov
rol
inc
shl
mov
idiv
fld
mov
cmp
xor
lock
mov
in
jnp
cmp
repnz
out
sbb
test
mov
sbb
and
or
ins
faddp
fcom
push
mov
mov
xchg
fsub
outs
mov
jnp
add
cwde
loop
push
sbb
mov
repz
push
xchg
int
mov
repnz
push
out
xor
movs
xchg
in
jno
push
xchg
xlat
mov
cmp
out
mov
pusha
adc
retf
sbb
or
inc
cmp
lods
pop
ret
xor
cmc
add
fist
jl
sub
call
and
cmps
pop
mov
or
inc
sub
ror
mov
push
jno
addr16
fcmovne
dec
loop
test
aam
mov
mov
mov
xchg
mov
es
xor
ret
mov
frstor
dec
and
or
popa
dec
lock
call
pop
pop
in
pop
jmp
mov
iret
xor
popf
push
jmp
add
(bad)
jp
fisub
lods
stc
lds
bound
xchg
aad
dec
cwde
mov
es
pop
push
loope
pop
(bad)
lods
pop
loopne
push
mov
cmp
je
hlt
mov
aaa
ss
mov
inc
addr16
rcr
mov
(bad)
aaa
adc
cmp
jecxz
jl
or
(bad)
movs
(bad)
xchg
inc
mov
cmp
stos
int
sbb
sub
adc
push
push
iret
aaa
adc
or
and
mov
and
int3
out
int
jecxz
ret
test
pop
es
iret
cs
mov
jmp
jae
test
stos
es
xor
movs
and
stc
jp
adc
(bad)
rcr
rcr
adc
adc
dec
jg
jmp
mov
fnstsw
add
dec
lock
retf
sbb
mov
(bad)
repz
sub
jne
les
shl
ins
adc
hlt
fnsave
xor
lds
arpl
xchg
mov
pop
call
ds
inc
into
sub
aad
fcomip
cmp
shl
jl
dec
mov
into
lods
jnp
xor
(bad)
xchg
pop
push
ret
repnz
mov
icebp
push
add
sbb
imul
push
je
inc
xchg
test
push
mov
lahf
stos
xor
mov
dec
in
xor
and
rcl
call
xchg
and
mov
icebp
in
add
in
lahf
scas
adc
inc
(bad)
adc
fwait
es
inc
mov
ja
retf
sar
push
test
mov
imul
ret
ret
sar
jp
cmp
and
imul
jns
mov
jmp
mov
sub
loope
lock
int
mov
cmc
fadd
sbb
out
jbe
clc
(bad)
loopne
(bad)
in
inc
cmp
js
push
ror
pop
jae
pushf
adc
fadd
(bad)
xor
sbb
jae
mov
stos
cli
dec
mov
jl
jmp
fst
cs
sti
cmc
aaa
cmps
sub
and
push
sbb
mov
sbb
pop
jmp
out
ins
mov
repz
pop
data16
imul
or
jo
mov
dec
out
cld
lods
dec
xor
pop
push
fdiv
and
cmc
int
cmp
mov
and
pop
test
pop
ins
in
sub
adc
bound
loopne
and
xlat
sub
cmp
jo
sbb
es
jnp
repz
dec
mov
outs
add
push
mov
adc
movs
xor
fnstsw
enter
jmp
adc
mov
aaa
gs
fs
push
cmc
sar
xlat
mov
mov
scas
retf
outs
int3
jl
jmp
mov
sub
jmp
xchg
pop
add
in
ja
xchg
int3
mov
das
lahf
jmp
lds
mul
push
mov
aaa
je
sbb
fadd
sbb
cwde
jge
xchg
das
test
add
ret
rol
ds
cmp
mov
cmp
sub
(bad)
or
shl
daa
xchg
ins
nop
dec
add
push
aas
comiss
sbb
in
fisttp
cmps
or
inc
es
sbb
fmul
mov
dec
iret
fbld
xchg
mov
add
add
jae
dec
fisub
dec
lock
imul
lods
adc
std
aaa
(bad)
(bad)
in
dec
pop
mov
out
rcr
(bad)
or
inc
add
add
dec
stc
pop
call
outs
add
xlat
shl
inc
push
pminsw
push
inc
es
call
stos
arpl
vshufps
inc
int
jns
mov
push
cmps
lds
ret
cmp
addr16
dec
and
dec
sub
idiv
test
jo
sar
jg
cmp
dec
adc
dec
movs
fimul
into
adc
jle
repz
push
adc
cmps
mov
mov
scas
mov
adc
je
add
call
into
adc
xor
pushw
xor
aaa
mov
movs
je
push
sub
mov
jns
ror
or
cmp
pop
or
lods
sbb
imul
jb
ins
jo
pop
hlt
sar
sub
movs
and
sbb
pop
shr
add
mov
out
add
pusha
mov
imul
mov
cli
push
fs
out
test
enter
fcomp
jmp
fild
mov
push
imul
je
out
mov
mov
jp
jmp
pop
push
pop
mov
je
jb
xor
cmp
sbb
mov
out
and
sub
jle
cmc
add
mov
(bad)
fdiv
jle
movs
and
dec
inc
sbb
push
test
xor
push
rcl
cmp
sahf
or
(bad)
jecxz
cmp
test
xchg
and
stos
xchg
iret
mov
and
call
adc
ja
arpl
or
cwde
xchg
dec
push
inc
test
(bad)
mov
jp
jmp
cmp
lahf
(bad)
pop
sahf
push
jg
clc
push
cmp
cmp
pushf
or
xchg
fisub
jmp
mov
mov
push
xor
push
adc
mov
and
or
and
(bad)
jmp
sub
fcom
scas
sar
mov
push
(bad)
movs
out
mov
int
cdq
dec
daa
int3
ret
inc
mov
stc
(bad)
cmps
mov
adc
mov
adc
inc
inc
pop
xor
sti
sti
xor
(bad)
cmp
into
idiv
std
mov
ss
fcom
jmp
into
pop
xor
mov
dec
xor
mov
push
sbb
int
sbb
or
cmp
adc
add
push
stc
push
icebp
pop
in
stos
ss
adc
loop
leave
mov
in
push
ins
out
dec
nop
inc
adc
sbb
xchg
call
cld
shl
jbe
sbb
not
popa
add
mov
xchg
stos
out
jne
ins
aam
push
pop
out
xchg
test
inc
(bad)
and
rol
enter
xchg
ficomp
push
ins
add
into
sbb
push
xor
je
mov
xor
add
cmp
cwde
es
es
sbb
pop
dec
xchg
mov
out
stos
jb
xchg
repnz
and
pop
out
mov
cmps
jle
xor
iret
fild
pop
pop
xor
add
pop
push
mov
shl
fs
mov
dec
lahf
leave
fisttp
push
fidiv
retf
shl
add
adc
add
mov
test
shl
repz
and
fadd
repnz
cli
rcl
xchg
cli
adc
jge
imul
cmp
pop
vpaddusb
sbb
and
mov
(bad)
sbb
ds
jae
test
push
xchg
dec
(bad)
xor
movs
bound
mov
ficom
cmp
cs
push
mov
jne
fs
sub
cli
adc
push
mov
daa
cmp
pop
call
outs
aaa
jp
mov
xchg
dec
ds
imul
aam
ds
out
push
js
xchg
xchg
pushf
pop
into
push
cdq
xchg
bound
adc
inc
pop
(bad)
xchg
imul
fdivr
cmps
fcom
imul
mov
mov
jge
js
mov
or
mov
pop
das
call
mov
leave
aaa
test
jmp
jmp
add
pop
push
mov
push
test
popa
push
cdq
es
jo
xor
fst
imul
nop
push
(bad)
mov
mov
in
mov
and
stos
jmp
(bad)
shr
and
js
lahf
add
jle
test
out
adc
shr
pusha
out
fdivr
jb
fild
sub
lea
sub
mov
ss
aam
rcl
push
xchg
and
cmps
sbb
cmps
outs
and
mov
sub
retf
ror
and
sbb
jg
mov
and
xor
arpl
rcl
jb
jmp
cmp
dec
sbb
ret
inc
sbb
pop
call
xchg
test
call
fistp
mov
ins
test
jnp
push
push
ret
sub
ficomp
out
pusha
push
inc
dec
bound
dec
sub
stos
xchg
sti
mov
call
fwait
aas
dec
push
sbb
jo
jns
sbb
mov
lea
push
inc
loopne
cld
mov
idiv
xor
aam
or
and
int
mov
pusha
(bad)
ror
xchg
retf
(bad)
xchg
and
cld
cmp
mov
out
jbe
in
sti
shr
shl
jmp
push
arpl
in
scas
pop
add
arpl
loop
int
rol
mov
xchg
nop
add
fxch
mov
mov
and
jbe
dec
xchg
mov
aam
ds
sbb
pop
int
gs
repz
pop
mov
das
cld
sub
inc
sub
sbb
mov
sub
mov
push
sub
lahf
or
in
call
add
imul
in
stos
loope
or
lahf
mov
cmc
sbb
int
pushf
jmp
sbb
cmp
rol
push
xchg
sbb
and
adc
cdq
mov
shl
xchg
jp
cs
call
jmp
mov
xlat
cmps
iret
pushf
inc
and
aad
shr
add
sahf
pushf
loop
inc
retf
sti
iret
aas
lahf
dec
aas
lods
xor
jno
ins
inc
in
js
dec
into
sub
inc
or
pop
cmp
jp
add
jl
loope
loopne
inc
add
sbb
mov
xchg
cdq
and
outs
fucomip
fs
jp
cs
js
push
or
add
add
jg
clc
push
js
add
mov
pop
xchg
and
fsub
cmps
push
add
xchg
je
imul
pop
jo
fwait
push
addr16
pop
xor
fcmovu
jmp
xchg
xchg
lahf
jle
stc
xor
xor
dec
fnstsw
mov
cld
push
int
sar
movs
stos
ins
out
in
xor
lods
mov
xor
sub
(bad)
fmulp
outs
mov
sbb
addr16
mov
push
ins
xchg
popa
popa
rol
shr
cmp
push
or
daa
add
lods
ss
call
and
jmp
call
dec
movs
xchg
push
jne
aad
adc
cmp
inc
icebp
push
pushf
adc
pop
xor
(bad)
push
jne
or
test
cmc
jmp
test
es
dec
call
leave
out
inc
imul
addr16
jmp
(bad)
push
jmp
inc
jmp
lea
mov
leave
cmc
mov
(bad)
movs
es
mov
and
cdq
pop
jnp
push
cdq
loope
sub
ror
sub
push
xor
imul
mov
or
xchg
loope
xor
mov
(bad)
sub
lods
and
dec
ficom
jae
jns
cld
xor
loop
mov
into
stc
inc
adc
sbb
scas
sbb
sub
int3
mov
dec
pushf
xor
xor
leave
ror
fdiv
jmp
ror
fnsave
sbb
dec
mov
pop
sti
into
and
mov
mov
add
scas
ror
xor
into
mov
inc
dec
inc
jnp
sub
add
sbb
push
ret
and
sti
les
das
sub
sub
or
sti
and
fisttp
mov
push
sub
aam
out
jmp
xchg
mov
mov
jge
sti
mov
ds
jb
push
sub
imul
pop
or
sub
in
mov
sahf
pop
pop
add
or
imul
sbb
enter
jo
cdq
xchg
add
xor
in
push
(bad)
jecxz
sub
cdq
outs
and
xchg
dec
aam
outs
jmp
dec
push
out
lods
lds
fbstp
push
icebp
cmc
xor
mov
xchg
data16
addr16
scas
ds
addr16
stos
lock
rcl
outs
mov
pop
ror
pop
jns
add
add
inc
xchg
std
mov
mov
(bad)
jb
mov
mov
imul
sti
sbb
outs
retf
add
(bad)
mov
or
orps
cmp
ret
pop
adc
adc
xor
daa
mov
mov
cwde
xchg
inc
into
xchg
add
mov
add
pop
ds
(bad)
mov
imul
xchg
xchg
push
addr16
adc
push
mov
push
jno
stos
scas
mov
call
in
in
out
mov
mov
in
cwde
pop
or
adc
inc
mov
inc
in
jmp
push
mov
inc
sbb
and
fimul
(bad)
cld
(bad)
xlat
call
pop
test
loopne
jae
sti
dec
mov
ins
push
sub
jbe
push
sub
vpmullw
or
jmp
sub
dec
push
jnp
cmps
fisub
jns
test
mov
mov
adc
and
(bad)
lock
inc
cmps
out
in
lds
sbb
or
mov
adc
pop
sub
test
and
xchg
push
xchg
dec
cmp
jl
popa
sub
mov
fsubr
jecxz
xchg
not
daa
fs
mov
cmps
cwde
(bad)
retf
clc
test
movs
(bad)
in
xor
lock
fistp
stc
mov
mov
jmp
int
es
stos
sub
test
cmp
mov
lea
add
dec
shl
push
movs
arpl
dec
jo
mov
mov
movs
pop
push
aaa
push
mov
(bad)
add
dec
mov
mov
in
cmp
mov
mov
dec
sub
xlat
repnz
sbb
sub
and
stos
(bad)
fcomp
je
xchg
bnd
inc
ret
pop
loope
cmps
aad
xchg
cmps
mov
pop
dec
adc
outs
mov
sbb
das
or
pushf
cdq
jno
fwait
xchg
addr16
stc
fld
iret
fadd
mov
push
dec
inc
ins
addr16
pop
mov
dec
ficom
cmp
in
mov
fist
stc
repz
in
das
int3
inc
aaa
xor
fwait
pop
xchg
mov
cmp
movs
pop
jecxz
scas
repnz
xchg
jg
cli
dec
jne
iret
cld
sub
jle
inc
int3
cmp
xor
sbb
sub
dec
fs
jge
movs
scas
mov
movs
push
das
cmp
sub
and
sbb
shl
inc
dec
pop
lods
ret
int
icebp
aas
lea
add
mov
aam
push
add
mov
int
jnp
cmp
jae
js
inc
mov
or
mov
inc
cmps
fs
push
stos
add
mov
addr16
add
jle
or
adc
mov
dec
mov
lahf
adc
cmps
dec
sub
mov
pop
mov
inc
mov
inc
dec
and
inc
cmp
push
inc
ja
push
push
sahf
cs
sbb
outs
cmps
arpl
sti
jecxz
popf
push
ret
cmp
mov
in
jmp
inc
lock
and
xchg
xchg
mov
or
sbb
pop
fisubr
or
mov
pop
mov
bound
fcom
stos
arpl
sub
sub
xchg
shr
sub
push
mov
int3
or
and
ret
mov
xchg
inc
mov
xor
add
xor
adc
dec
pop
sbb
pop
in
arpl
jne
cmp
mov
push
adc
rol
sbb
dec
pop
int
int3
and
xor
cmp
add
push
sbb
test
loope
repz
mov
sti
jno
jge
pop
jmp
std
jmp
inc
cli
(bad)
call
in
pusha
mov
jg
jmp
cmp
mov
inc
inc
ror
into
scas
pop
push
call
je
jmp
fst
fdiv
cld
jmp
test
jle
add
xor
stos
(bad)
mov
test
test
into
jb
jge
cli
mov
jle
mov
inc
inc
neg
adc
add
adc
iret
cwde
sub
xlat
add
pop
rol
mov
repz
mov
aam
inc
add
movs
jl
xor
sahf
sub
inc
mov
xchg
neg
xchg
inc
inc
adc
ds
push
mov
mov
into
dec
sub
jp
ds
scas
xchg
pop
mov
or
fidivr
fcom
mov
rcl
cmp
or
cmp
shl
(bad)
or
int
inc
mov
or
sbb
pop
dec
dec
cmc
sub
sti
xor
les
retf
int
nop
ins
ret
repnz
mov
lea
pop
mov
dec
lods
nop
or
clc
lods
sub
scas
iret
loop
imul
jmp
jmp
adc
int
adc
and
clc
in
push
test
jecxz
pop
mov
mov
gs
leave
fnsave
pop
scas
mov
jo
inc
cmp
cdq
fcomp
push
cmps
pop
cmp
mov
cwde
ret
push
or
sahf
outs
xor
js
mov
sub
movs
sub
and
shl
sbb
clc
popa
cwde
dec
retf
and
mov
xchg
(bad)
ret
(bad)
and
in
mov
int
sub
rcl
adc
mov
or
sub
mov
and
daa
popa
(bad)
daa
shr
movs
adc
call
imul
push
out
test
int
or
(bad)
xor
dec
xchg
sub
pop
ret
jmp
loope
pop
ds
sbb
mov
nop
movs
add
xchg
inc
mov
inc
adc
test
ja
push
mov
cmp
arpl
pop
repnz
aaa
pop
add
cdq
xchg
mov
inc
mov
sar
imul
fadd
call
push
cmp
lds
fldenv
push
pushf
dec
scas
jp
pop
(bad)
xchg
mov
sahf
lods
repz
push
rcl
pop
mov
cmc
std
dec
mul
jl
fisttp
xchg
xor
pusha
and
push
add
ss
dec
sbb
mov
cmp
mov
movs
inc
xchg
iret
out
xor
xor
imul
jne
je
(bad)
adc
dec
iret
in
cmp
pop
push
mov
sbb
add
inc
pop
fild
shr
pop
iret
je
(bad)
cmp
mov
inc
sub
adc
inc
xor
adc
cmps
cmovo
jg
les
jl
shl
and
pushf
shl
dec
jb
bound
and
aaa
and
mov
ss
lods
(bad)
ins
sbb
daa
cmps
cld
mov
pushf
mov
mov
jb
fldcw
jae
adc
jmp
sub
xchg
lds
loop
in
pusha
push
push
in
mov
cmc
xchg
cmp
mov
pop
adc
xor
pushf
pop
or
and
fild
call
inc
je
jecxz
adc
loopne
data16
sti
rcr
push
loopne
push
adc
rcl
fld
movs
jbe
and
(bad)
fnstcw
xchg
ss
sbb
scas
and
adc
mov
ret
sub
movs
movs
repz
inc
scas
lahf
xor
mov
push
pop
push
mov
jnp
gs
int3
inc
push
or
jns
dec
xchg
idiv
aaa
(bad)
mov
ret
mov
mov
inc
ds
cdq
push
retf
dec
pop
inc
dec
xchg
in
jecxz
jns
sar
cmp
(bad)
pop
xchg
scas
pop
sbb
cmp
inc
mov
sub
dec
pop
or
and
movs
xor
xchg
addps
mov
pop
xor
adc
mov
out
lods
or
(bad)
and
push
movs
pop
dec
jg
sbb
xchg
cmp
fisttp
fisub
sti
xchg
je
les
adc
push
dec
cmp
sbb
mov
pusha
nop
inc
push
(bad)
sub
fisubr
out
jmp
mov
sub
aas
pushf
pop
mov
call
repz
dec
mov
fsub
enter
clc
cmc
adc
cmps
mov
pop
pushf
mov
or
push
mov
jle
(bad)
xor
cli
stc
lock
xor
mov
add
or
adc
int3
sbb
std
jge
add
and
movs
push
es
xor
test
and
retf
movs
mov
pusha
push
push
in
mov
inc
es
dec
mov
enter
or
imul
sub
or
ds
hlt
daa
inc
cmps
push
push
pop
in
(bad)
or
adc
sub
in
(bad)
jecxz
test
dec
mov
adc
jmp
push
and
cmp
sbb
push
test
xchg
xor
lahf
sbb
mov
ins
mov
sbb
addr16
rcr
pop
stos
dec
mov
xor
cwde
inc
add
cmps
and
lds
add
jp
int
int
sbb
jl
dec
icebp
ret
idiv
push
cmc
cmp
rcr
jecxz
adc
(bad)
lock
int3
cmps
cld
out
jl
loop
sbb
imul
lock
jb
jp
call
mov
jge
ins
adc
stos
xchg
test
jno
adc
pushf
and
sbb
test
push
outs
adc
cmp
scas
xchg
add
and
daa
mov
and
inc
push
sub
repz
sub
(bad)
ret
popa
pop
ret
push
push
dec
enter
test
push
mov
jg
mov
jbe
mov
xlat
scas
shl
or
dec
outs
mov
cmp
gs
inc
adc
data16
imul
mov
jne
ja
loop
fstp
(bad)
sbb
sbb
sub
pop
or
lods
push
pop
cmp
xchg
lds
pop
and
push
test
sub
shr
add
in
shl
sbb
ss
pop
fidivr
mov
pop
aad
sub
(bad)
sub
mov
pop
fistp
scas
loopne
sbb
add
pop
and
push
dec
add
ret
inc
sub
in
mov
pop
push
popa
adc
ins
mov
mov
fist
out
cmp
jb
in
enter
(bad)
pop
inc
mov
xor
mov
sbb
bnd
dec
jnp
f2xm1
add
test
pop
dec
jo
jecxz
pushf
inc
adc
clc
aad
jo
xor
clc
mov
and
jnp
or
jno
ss
mov
mov
fwait
jg
aad
je
cmp
sub
movs
movs
mov
test
jecxz
aaa
cmp
dec
jno
xor
iret
loopne
cmps
lock
and
mov
sub
dec
jnp
daa
(bad)
cmp
xchg
xchg
sti
sub
bound
jno
and
add
jecxz
adc
add
sbb
repz
cmps
mov
push
sti
inc
push
retf
and
nop
enter
push
(bad)
ds
ds
std
test
xchg
mov
xchg
cmp
xchg
xor
outs
sub
nop
pop
mov
mov
add
and
jecxz
dec
test
popf
mov
rcl
mov
jge
and
xchg
stc
dec
add
jmp
sbb
cmp
mov
pop
retf
jo
jno
or
les
outs
cli
enter
in
mov
xchg
or
xor
enter
push
mov
pop
mov
and
mov
xchg
mov
mov
or
inc
pop
mov
scas
in
scas
sub
(bad)
cmp
jmp
inc
sub
movs
repz
push
or
xchg
fsubr
xchg
and
jle
jne
fidivr
hlt
adc
xchg
jmp
mov
push
jle
cwde
gs
dec
add
outs
mov
and
cmp
xor
xor
data16
adc
push
(bad)
dec
daa
dec
inc
iret
adc
fnstsw
sbb
push
mov
jb
pop
repz
hlt
dec
dec
rcr
push
cld
cmc
push
pop
adc
mov
mov
loop
and
imul
outs
pop
cmp
cmp
xor
inc
rcr
adc
mov
hlt
push
xchg
fisttp
into
jge
inc
out
inc
sub
inc
inc
adc
int3
mov
mov
mov
loope
test
out
ja
scas
and
cmp
adc
jno
iret
push
mov
push
mov
jge
mov
jmp
or
inc
ret
int
mov
cmp
or
add
clc
jo
inc
dec
popf
jbe
test
xor
iret
das
jno
add
adc
lods
pop
cmps
movs
(bad)
sub
mov
push
cs
add
jl
jno
xchg
shl
mov
mov
mov
fistp
mov
or
inc
pusha
call
js
pop
ret
jge
adc
xchg
mov
lahf
push
inc
adc
inc
cmps
sysexit
icebp
sahf
iret
push
dec
repz
adc
mov
ret
xchg
fmul
imul
mov
les
(bad)
jecxz
pop
dec
pop
mov
adc
sub
ins
jp
rol
retf
mov
aas
out
adc
es
mov
mov
idiv
pop
dec
call
fwait
adc
rol
inc
in
mov
leave
push
xor
pop
xor
sbb
cli
sub
jp
jmp
loopne
add
add
int
(bad)
jge
cmps
inc
pop
rol
jle
adc
add
int
sub
pop
ror
push
adc
outs
cmc
add
test
dec
ins
xor
pop
sar
icebp
aaa
addr16
jno
arpl
int
xor
pop
mov
add
fucomi
call
arpl
jp
push
fldenv
mov
push
adc
pop
add
jmp
jb
sbb
cld
jl
sbb
int3
test
dec
rcr
dec
jecxz
mov
test
cmp
popa
sti
std
pop
ret
scas
cld
pop
mov
fdiv
inc
bnd
(bad)
bound
lahf
mov
retf
pop
cmps
jmp
mov
xchg
add
popf
sar
cld
mov
leave
pop
ficom
xchg
xor
sbb
xchg
inc
ja
mov
shl
add
ficomp
cmps
mov
mov
daa
sbb
xchg
inc
leave
cdq
or
test
pop
hlt
pop
add
iret
inc
out
ficom
cmp
push
cmps
mov
iret
cdq
cmp
outs
movs
sub
or
hlt
movs
jb
jae
iret
push
mov
cld
adc
movs
mov
xor
or
imul
pop
mov
loop
cmps
repnz
adc
ins
jb
das
fbld
dec
outs
push
test
outs
inc
mov
stc
inc
lods
push
ficomp
jnp
cwde
out
adc
and
arpl
add
sbb
inc
mov
add
adc
setae
cdq
pop
fisubr
or
inc
jae
and
pop
fstp
rcr
cld
repz
pop
add
and
fidivr
mov
push
xor
ss
fs
jl
xchg
jmp
enter
pop
xchg
dec
mov
and
mov
scas
mov
push
(bad)
enter
inc
jno
gs
dec
ins
test
test
adc
dec
call
je
mov
(bad)
jmp
push
jns
xchg
cmp
pushf
stos
sub
inc
(bad)
sbb
push
mov
out
pop
cmp
mov
jg
fld
cmps
clc
cmp
add
add
inc
xchg
cmp
out
or
test
stos
sbb
test
xor
push
arpl
ins
out
fisubr
xor
xchg
je
or
(bad)
or
not
sub
adc
pop
jmp
test
jg
and
mov
je
cmp
test
add
mov
es
mov
ds
(bad)
xor
daa
push
adc
(bad)
iret
in
jmp
jnp
stos
sbb
nop
jg
xor
mov
cdq
das
or
mov
cwde
fwait
retf
jl
cmp
push
stos
pop
push
sub
call
mov
xor
into
pop
push
dec
mov
cmps
stos
fwait
mov
mov
jnp
dec
scas
gs
dec
ret
cmps
mov
pop
out
les
iret
in
retf
dec
jne
jl
dec
setle
cmp
mov
movs
push
xchg
sub
push
movs
or
adc
push
(bad)
clc
mov
pop
xor
mov
ss
enter
mov
sub
aad
scas
xor
dec
retf
popf
push
or
xchg
cmp
jle
sahf
int3
into
jmp
out
imul
mov
and
loopne
and
add
pop
mov
pop
push
push
cmp
sahf
sub
and
in
adc
push
loop
pop
pushf
dec
leave
sub
imul
push
ret
mov
bound
fisttp
inc
cmp
pop
pop
out
fbstp
fucomp
idiv
adc
xchg
sbb
inc
cld
push
mov
hlt
leave
mov
cdq
je
xchg
mov
icebp
jge
fwait
lods
ss
ja
fs
lods
push
jnp
or
out
clc
push
pop
iret
out
call
out
inc
cmovne
push
mov
js
cmp
inc
nop
popa
inc
ss
dec
inc
xchg
fstp
adc
mov
ins
xlat
add
loop
fstp
lea
add
jmp
xchg
push
dec
ret
push
icebp
fbld
and
popa
dec
popf
aaa
mov
pop
or
addr16
sbb
jbe
xor
popa
or
push
es
das
xchg
sbb
mov
rcl
std
ret
add
(bad)
std
pop
add
mov
inc
std
pop
dec
and
test
xor
sti
pop
mov
(bad)
test
sub
movs
mov
fwait
cmp
lods
sub
cmc
xchg
out
js
mov
jae
cmp
sar
add
xor
dec
dec
adc
clc
ds
loop
stos
outs
call
leave
pop
mov
push
sbb
or
in
icebp
std
dec
xchg
and
jmp
das
ret
test
stos
out
jmp
daa
lods
cli
test
hlt
ret
mov
dec
jecxz
imul
hlt
mov
adc
jl
push
adc
jle
push
out
shl
pop
jns
into
sub
cmps
movs
cmp
pop
aaa
mov
call
cmc
daa
shl
push
jle
add
pop
xchg
add
clc
inc
push
fsubr
lea
cmp
mov
leave
gs
mov
xchg
sub
mov
stos
or
sbb
fs
dec
sbb
push
pop
ja
popf
pop
jno
xor
or
cmp
push
adc
xor
ret
outs
icebp
shr
add
xor
xor
adc
or
out
push
pop
std
push
cmc
loop
inc
pusha
enter
mov
xchg
repz
cmp
mov
adc
adc
pop
stos
movs
js
jne
jne
(bad)
data16
je
test
cwde
dec
mov
pop
jle
es
push
dec
adc
lods
mov
loope
xchg
in
push
jg
pop
fcom
push
mov
in
mov
bound
retf
jl
ds
(bad)
imul
adc
inc
push
ins
dec
in
mov
ins
pop
hlt
jo
call
jb
idiv
addr16
(bad)
xchg
inc
mov
or
das
ds
dec
fistp
jmp
imul
or
imul
stc
mov
fisttp
cs
cld
and
enter
xor
pop
mov
(bad)
cmp
ror
dec
test
(bad)
mov
sub
sbb
lea
lods
stos
dec
mov
cwde
sub
ret
mov
mov
jl
add
fchs
mov
jns
lock
pusha
xor
dec
call
mov
cmc
into
cwde
iret
jnp
imul
add
popf
ds
mov
je
fisttp
xor
outs
mov
imul
dec
push
scas
loope
fdiv
mov
fimul
add
xor
mov
pop
mov
ins
dec
push
retf
pop
xor
mov
out
sbb
aam
mov
xor
inc
adc
je
sub
cli
ret
rol
out
test
push
outs
adc
mov
sub
cli
mov
sbb
jne
or
dec
push
pop
cwde
arpl
test
outs
(bad)
ficomp
sbb
add
bound
xchg
icebp
and
inc
repz
cmps
adc
rsqrtps
mov
jno
push
ja
test
repz
jns
(bad)
pop
sbb
dec
pop
inc
push
cmp
in
das
add
enter
shl
pusha
sub
std
daa
call
aas
push
cli
jmp
call
mov
push
out
mov
jmp
jne
cwde
sbb
inc
popa
retf
inc
out
and
shl
push
inc
jg
add
pop
dec
out
sub
sti
and
mov
inc
les
mov
adc
push
adc
jb
loop
dec
and
stc
es
(bad)
repnz
jecxz
adc
adc
push
cmps
out
(bad)
leave
iret
(bad)
dec
push
pop
cmc
fsub
ficom
xchg
jmp
into
mov
add
(bad)
sbb
leave
fdivr
dec
inc
stos
div
test
sub
lahf
int3
popf
cmp
and
cmps
push
lods
mov
pop
sub
xchg
pop
inc
mov
ds
das
outs
cwde
test
lods
scas
outs
icebp
xchg
sub
xchg
loop
test
or
pop
mov
sahf
xchg
mov
xlat
xchg
mov
dec
mov
les
fnstenv
ins
mov
sti
cs
ficom
xchg
lds
xor
cmps
ins
push
pop
push
jecxz
push
cwde
ror
push
mov
and
mov
sub
fwait
push
cmp
fwait
jnp
adc
xchg
jmp
and
jecxz
iret
(bad)
(bad)
dec
int
add
xor
rcr
cdq
push
loop
popa
mov
pusha
mov
cmp
push
mov
ja
mov
int
xor
icebp
stos
rol
stos
xchg
or
movzx
push
add
lods
cld
bound
int
pop
in
sub
cmp
jg
dec
shl
add
scas
jo
mov
xlat
push
std
xchg
sbb
sub
in
inc
int
clc
data16
rol
frstor
push
sub
(bad)
fisubr
adc
int
lock
add
mov
mov
and
add
pushf
mov
pop
pop
fnstsw
pop
cmp
push
jb
dec
cdq
xchg
xor
pop
xor
adc
(bad)
call
ret
stos
ja
push
rol
outs
inc
jl
in
mov
adc
int
cmp
or
(bad)
inc
daa
add
inc
out
jg
fld
push
dec
jns
movs
sub
push
dec
pop
jae
push
call
test
pop
out
dec
xor
mov
mov
(bad)
or
mov
ret
fcom
jp
cmp
fsub
and
and
mov
push
pop
lods
jns
mov
xor
mov
push
mov
ret
mov
xor
out
pop
adc
mov
xchg
outs
leave
loop
icebp
sbb
das
repnz
push
cmp
or
mul
loop
push
aam
in
xchg
xchg
mov
mov
lahf
hlt
pusha
test
or
and
mov
movs
stos
add
adc
xlat
mov
cmp
(bad)
in
(bad)
out
xchg
in
sub
cmp
jno
cwde
cmp
mov
dec
dec
mul
jmp
jmp
scas
or
sar
cmp
dec
mov
retf
jmp
not
cmp
ja
dec
gs
test
push
mov
lock
repz
ins
jecxz
cdq
dec
jne
scas
mov
cwde
ins
cli
lods
mov
ss
into
dec
es
and
jg
lock
pop
(bad)
(bad)
aaa
lds
pop
sbb
idiv
out
pop
jge
xchg
popa
dec
pop
cmps
sti
xchg
mov
mov
outs
push
jg
or
retf
pop
arpl
aad
dec
hlt
in
(bad)
mov
test
std
or
lahf
mov
test
jns
sub
(bad)
lods
xor
cmp
sar
bound
push
dec
inc
mov
push
and
test
adc
jae
(bad)
or
add
sub
and
loopne
mov
repz
jmp
and
jne
mov
bnd
cmc
adc
pop
test
push
mov
stos
sbb
sub
std
arpl
pusha
clc
jge
movs
fmul
stos
mov
cmc
mov
inc
movs
into
or
adc
mov
cmp
repz
xchg
push
mov
aas
jno
adc
mov
mov
push
and
dec
lods
mov
lea
push
sub
jl
or
mov
sub
or
adc
add
add
push
(bad)
sbb
das
(bad)
sbb
ins
add
out
je
fbld
shr
xbegin
dec
cmp
sub
or
popa
test
clc
pop
es
mov
mov
sbb
xchg
jbe
dec
mov
je
pop
inc
stos
mov
test
sub
xchg
stc
mov
repnz
mov
sbb
adc
adc
push
sbb
xor
pop
mov
ja
(bad)
out
stos
pslld
sbb
inc
push
loope
ror
mov
adc
xchg
shl
loopne
dec
data16
xchg
jns
fnstcw
sub
jo
xchg
xor
push
jle
and
gs
mov
nop
in
(bad)
dec
in
aam
rcl
xchg
jmp
push
push
add
jmp
fst
inc
cs
mov
jecxz
push
ror
add
inc
dec
jno
aad
push
add
or
inc
repnz
cmp
repnz
addr16
inc
jns
out
and
xchg
sub
mov
pop
push
shl
imul
xor
ins
ret
jbe
shl
out
push
sbb
(bad)
pop
ins
int3
mov
ins
jmp
or
push
mov
movs
or
jae
repz
lea
das
pop
stos
jge
sbb
cmps
push
test
mov
pop
addr16
out
test
cmps
sbb
loopne
jb
mov
adc
jecxz
lods
push
rcr
nop
add
out
xchg
inc
mov
jb
xor
retf
out
inc
and
in
and
cmc
xor
sbb
mov
lods
sbb
sbb
aas
test
or
jae
xor
ins
dec
adc
push
adc
aad
shr
jle
stos
fwait
dec
jb
inc
in
push
xor
pop
jb
repz
dec
push
dec
and
ja
adc
and
jne
inc
sbb
imul
jb
scas
in
dec
cmp
mov
mov
ja
sti
mov
daa
jecxz
jns
rcl
pop
add
ins
push
xchg
mov
mov
pop
and
imul
jmp
in
sub
jno
adc
inc
in
sbb
dec
pop
fstp
jno
and
mov
mov
enter
ror
das
and
pop
or
cmp
jmp
sbb
dec
inc
pop
sub
sbb
xchg
or
loope
fist
test
or
xchg
add
fcomp
repnz
mov
pop
jp
iret
dec
push
cs
or
dec
mov
and
test
ror
mov
xchg
(bad)
adc
faddp
xor
sub
inc
mov
cmp
ja
adc
pop
sub
ins
leave
pop
jmp
lods
add
les
ja
shr
aad
jb
xor
les
jae
push
shr
fstp
xor
idiv
jg
cmp
pop
dec
pop
and
test
ins
repnz
sbb
lods
adc
jp
xchg
out
xchg
push
xchg
xor
mov
mov
inc
out
mov
call
sahf
popa
mov
or
popf
pop
movs
outs
ds
push
gs
cs
cs
xchg
call
scas
test
or
jmp
imul
push
mov
jecxz
sbb
popf
jle
xchg
(bad)
xor
ror
xor
push
and
ss
sbb
pop
call
cmps
test
cmc
retf
ret
xchg
push
and
push
ins
mov
xor
inc
mov
ret
mov
jns
outs
call
push
xchg
ret
call
xor
pop
and
mov
ret
xor
cld
push
push
sbb
lds
lea
test
mov
leave
stc
dec
jecxz
fimul
mov
call
jo
cld
arpl
push
adc
sub
lods
cdq
ins
push
fisttp
xchg
mov
and
jmp
movs
mov
inc
bound
pop
pop
test
mov
neg
xor
(bad)
mov
popf
sbb
rol
fdiv
arpl
(bad)
ins
sbb
test
addr16
push
scas
fcmovnu
push
in
cld
test
cs
(bad)
movs
inc
mov
lea
aam
shr
test
cmp
ja
ja
or
cmp
(bad)
mov
mov
pop
mov
in
pop
shl
(bad)
mov
test
int3
cmp
push
mov
mov
mov
dec
mov
dec
pslld
sub
jo
mov
mov
ret
push
jl
dec
inc
add
cli
je
shl
adc
mov
xchg
xor
adc
daa
mov
add
pop
sbb
lock
bound
or
dec
repz
pop
(bad)
push
sub
sti
fstp
retf
retf
and
pop
cmp
mov
es
rcr
std
fldenv
mov
push
mov
inc
push
ja
sti
cmp
fsub
pop
imul
push
clc
and
xor
xchg
(bad)
mov
in
ret
adc
push
inc
in
pop
daa
cmp
out
fwait
pop
idiv
cdq
in
xchg
pop
xchg
sbb
xchg
fbstp
imul
gs
xor
jecxz
dec
jle
test
and
(bad)
mov
test
or
lods
push
loopne
pop
test
xor
ds
sub
mov
ret
mov
dec
xor
ins
add
inc
lahf
xor
fnstcw
nop
dec
pop
or
mov
sbb
pop
ds
es
retf
lock
inc
popf
icebp
cmp
in
xor
xor
adc
sbb
mov
sub
and
and
xchg
jmp
push
add
fisttp
js
inc
enter
xor
rcr
dec
jmp
pusha
push
cli
pop
leave
test
cmp
add
mov
(bad)
mov
neg
sub
add
xor
rcr
xchg
dec
call
push
mov
pusha
sub
jo
mov
loopne
sahf
ret
pop
adc
sbb
pop
xor
clc
jbe
sub
cwde
loopne
sub
and
jmp
add
addr16
add
pop
or
or
test
adc
pushf
sub
call
mov
loope
vaesdec
dec
(bad)
fldcw
aas
out
imul
dec
pop
jb
je
or
mov
mov
ins
loopne
push
mov
outs
cmp
pop
jno
adc
ficomp
sub
mov
jl
pusha
push
in
lods
xor
push
mov
pop
dec
or
add
sahf
shl
xor
jge
int
xchg
sbb
(bad)
cmp
push
pop
and
(bad)
jbe
jecxz
dec
jo
outs
cmps
clc
ins
fnstenv
icebp
aas
cmp
sbb
push
push
cmps
and
or
out
xor
std
fbstp
jmp
cwde
test
pop
cmp
jne
cmps
fwait
(bad)
pop
cs
dec
mov
inc
sbb
xchg
ret
cli
shl
mov
and
push
movs
jecxz
test
mov
lock
hlt
and
sar
rcl
mov
push
xchg
sub
iret
cs
mov
inc
test
sub
jge
push
push
cmp
cdq
call
test
lods
fldl2e
or
sbb
fisub
and
pop
add
xor
jp
sti
movs
mov
aaa
es
outs
pop
dec
ret
cld
inc
adc
mov
call
sbb
mov
sub
mov
mov
int
or
fnsave
sar
push
leave
cmp
jae
mov
fisub
and
and
arpl
mov
out
retf
xchg
mov
ja
sbb
and
and
out
or
imul
push
mov
not
push
cmp
sbb
cld
or
sbb
and
and
test
inc
and
xchg
js
jp
cmps
xchg
(bad)
mov
and
xor
dec
mov
jns
in
push
dec
lock
and
stc
xor
lods
dec
stc
and
(bad)
and
into
fwait
jo
and
stos
push
ss
push
mov
cmps
adc
leave
or
and
mov
sti
out
mov
jle
cmp
jle
add
dec
dec
data16
xchg
sbb
dec
popa
adc
repz
and
jmp
dec
push
fisttp
push
sub
mov
iret
pop
cmp
and
sub
adc
ja
push
stos
cdq
bound
sub
iret
inc
jg
retf
ds
rcr
pushf
neg
dec
mov
xlat
gs
cdq
and
push
popfw
js
or
outs
push
mov
ficomp
test
ret
xchg
mul
iret
xchg
(bad)
jge
mov
inc
jnp
dec
test
push
rol
fsubr
jl
mov
add
mov
and
test
imul
(bad)
jp
mov
push
adc
jnp
cmps
dec
arpl
mov
adc
and
mov
into
ins
scas
cmp
lea
mov
scas
push
jae
jae
jmp
es
frstor
pop
or
jbe
cmp
imul
mov
inc
dec
imul
xchg
adc
ds
pop
mov
mov
loopne
cmp
mov
ror
mov
jmp
add
add
icebp
adc
jmp
mov
add
test
xor
shl
aad
mov
jbe
pop
lds
jle
call
push
clc
add
scas
adc
xor
push
mov
sbb
pslld
jl
rcl
xor
hlt
in
fdivr
add
sti
leave
loope
pop
lahf
ds
jle
rcr
into
and
jg
dec
sti
sub
sbb
(bad)
dec
jbe
dec
jns
lahf
pop
imul
ret
push
and
out
lods
scas
xchg
mov
mov
icebp
idiv
mov
inc
(bad)
clc
adc
fcomp
xchg
jle
push
es
sbb
inc
mov
xor
cmp
adc
xchg
fmul
int3
loop
sub
mov
cmc
cmps
mov
sub
lea
mov
push
mov
jmp
sti
push
movs
push
inc
fsub
stos
repz
arpl
add
xchg
imul
in
mov
mov
and
cmps
(bad)
(bad)
aam
lds
test
jo
retf
jb
iret
enter
stos
inc
push
test
cld
call
push
mov
sbb
leave
or
add
and
sub
ficom
loopne
push
imul
ror
out
push
pop
lds
jl
adc
jns
ins
mov
or
mov
and
loopne
cmps
ins
push
inc
call
in
test
inc
mov
xor
repz
xchg
sub
movs
mov
sbb
sbb
inc
sub
inc
aaa
mov
retf
dec
pop
ins
fstp
cwde
push
repz
fsubrp
ret
pop
addr16
push
and
cdq
and
sub
sub
cmp
out
idiv
push
pop
add
popa
adc
arpl
fidiv
xlat
mov
cmp
mov
xcrypt-ecb
cmps
or
and
push
ss
cmp
lds
fidivr
cdq
ret
retf
push
xchg
dec
(bad)
pop
dec
sbb
xor
push
ja
adc
lea
lock
in
int
fdivr
lods
sub
fcom
fidiv
add
mov
adc
mov
out
mov
mov
cmp
pop
xlat
test
mov
mov
stc
sub
sub
add
icebp
int3
lods
adc
cmp
xchg
int
dec
addps
mov
mov
and
adc
cs
fcom
sahf
cs
mov
call
add
test
ror
stos
dec
xor
cli
(bad)
pop
sbb
push
call
or
and
rcl
mov
lock
out
ja
jmp
sub
in
mov
sbb
pop
(bad)
out
jno
or
cmp
push
lock
sahf
neg
lea
out
test
aam
jp
inc
jae
or
pop
call
cmp
push
cs
pop
xor
sar
pop
scas
sbb
ins
cld
or
jge
xor
pop
ins
mov
mov
in
int
loopne
mov
outs
cmp
(bad)
fsub
and
and
pop
add
lea
push
in
jb
inc
mov
inc
pushf
mov
and
or
jl
out
daa
fnstcw
call
adc
xor
xchg
dec
add
mov
sub
mov
xchg
das
jecxz
in
adc
or
add
loopne
cmp
xor
daa
inc
mov
lahf
add
call
cmp
inc
sub
jns
or
and
sbb
popf
xor
jae
mov
add
out
add
jns
shl
lods
movs
div
pop
int3
jecxz
and
out
dec
cmp
dec
sbb
mov
dec
inc
adc
mov
xchg
fcomp
jle
mov
push
inc
fild
scas
shr
add
mov
dec
les
jnp
wrmsr
mov
sub
mov
outs
push
adc
pushf
jg
fimul
cld
out
clc
pop
jbe
test
test
cmp
or
je
push
mov
or
cli
mov
ret
add
push
(bad)
mov
push
xor
iret
cs
xchg
ins
loope
xchg
xor
push
jecxz
fs
fistp
mov
jae
in
das
cwde
(bad)
mov
jb
jb
(bad)
add
imul
mov
add
mov
cmp
arpl
fld
jno
jle
jecxz
popf
scas
sti
movs
mov
jp
sub
cwde
xchg
sbb
dec
xchg
inc
dec
lock
push
jnp
fld
enter
pop
xor
xor
mov
xor
mov
sbb
arpl
cdq
in
xchg
mov
movs
add
movs
add
js
cwde
jns
pop
pop
fisubr
lods
sub
mov
pop
or
or
div
mov
mov
sub
(bad)
and
fisubr
(bad)
aam
push
pushf
es
movs
jecxz
pop
cli
lahf
pop
jne
mov
push
loop
and
(bad)
and
in
dec
ficomp
ret
mov
cwde
and
push
ja
and
adc
xchg
push
sbb
(bad)
test
fmul
push
clc
in
shl
pop
sub
mov
mov
adc
and
stc
scas
imul
pop
and
call
push
test
push
cmp
test
retf
enter
fcom
dec
xchg
and
sbb
xchg
mov
mov
fst
in
xchg
and
movs
cmc
and
and
mov
jo
add
(bad)
cdq
add
cld
jo
adc
push
sub
sub
inc
jg
icebp
(bad)
sub
pop
out
les
ds
daa
fld
sub
sub
or
pop
div
arpl
out
mov
cmps
jp
enter
popw
dec
out
into
push
imul
mov
mov
mov
jo
jnp
(bad)
ja
push
sahf
retf
rcl
adc
sbb
mov
jmp
inc
sbb
xor
int3
outs
cmp
neg
outs
push
push
stos
call
push
push
es
stc
cdq
enter
(bad)
push
test
dec
mov
shl
int3
imul
icebp
dec
mov
and
sbb
or
mov
test
cli
push
(bad)
aaa
cmps
push
in
pushf
dec
push
adc
add
dec
add
sub
test
sbb
das
mov
pop
sar
dec
pop
jno
fs
loopne
enter
mov
mov
(bad)
frstor
adc
movs
repnz
xor
fisttp
mov
xchg
mov
repnz
js
sti
cld
push
rcr
(bad)
call
hlt
adc
dec
dec
push
push
sahf
or
jle
adc
mov
(bad)
fist
jl
push
aam
iret
aad
xlat
repz
push
not
lahf
jp
xor
adc
lds
shr
mov
fstp
test
and
mov
test
inc
stos
pop
mov
push
mov
mov
(bad)
inc
dec
daa
out
(bad)
fucomip
push
sar
(bad)
lock
ret
pop
into
cld
xor
sahf
xchg
lock
shl
int
and
mov
cmp
xchg
jecxz
scas
lock
bound
shr
mov
into
test
gs
pop
jo
and
ja
or
mov
mov
cmp
mov
mov
in
mov
mov
repnz
sbb
jle
movs
jmp
movs
or
ss
mov
jnp
data16
cmps
nop
adc
dec
ins
or
js
mov
int3
mov
dec
ror
or
cmp
or
out
out
gs
jae
jecxz
imul
out
pop
adc
enter
and
inc
cmp
cs
adc
shr
mov
dec
and
dec
fld
outs
dec
add
in
gs
inc
xor
and
outs
sbb
lods
arpl
dec
sbb
xchg
jmp
std
xchg
mov
sbb
xchg
dec
(bad)
outs
test
push
aad
add
inc
mov
mov
mov
add
mov
or
clc
jmp
shl
add
les
xor
push
fnsave
mov
shr
mov
repnz
rep
sbb
mov
jnp
add
shr
push
sbb
add
adc
xlat
mov
nop
pop
int3
cmp
cmp
xor
neg
ror
stos
jno
or
mov
add
or
ins
sahf
pop
mov
mov
push
jno
cs
icebp
cld
daa
je
int3
cmp
dec
fst
sar
stos
push
ja
cmps
mov
daa
test
hlt
jmp
fsubr
jp
je
and
jmp
push
sub
or
pop
and
dec
(bad)
cmp
mov
mov
loope
xlat
xor
jl
fs
pop
mov
sub
aad
push
movs
xchg
repnz
cli
std
push
sti
mov
mov
sub
jl
cmps
lods
dec
dec
jmp
or
lods
cmp
mov
and
mov
pop
xor
or
push
cmp
xchg
or
or
lods
push
daa
aaa
jns
mov
call
jae
rcr
clc
fiadd
mov
cmp
sbb
std
rcr
xchg
fild
pop
and
shl
stos
inc
js
in
test
pop
xlat
sbb
adc
jmp
or
(bad)
outs
and
jge
jo
adc
aad
aam
dec
dec
mov
out
out
pop
jne
bound
adc
inc
nop
popa
push
pop
mov
add
pop
adc
outs
jnp
sbb
bound
dec
jl
jp
or
movs
add
je
inc
lea
push
sub
mov
mov
xchg
jbe
test
cmps
mov
fisttp
bound
jl
dec
jbe
lea
sub
add
jl
mov
sub
stos
ret
adc
push
pop
xor
push
in
and
inc
movs
or
retf
sub
shr
jg
sub
or
or
dec
sbb
pop
mov
ret
aaa
sub
add
pop
out
and
fild
pop
nop
jno
call
push
mov
mov
nop
je
sub
mov
daa
sbb
xor
push
inc
jle
jl
adc
lods
fsub
cli
sbb
icebp
mov
dec
jbe
jb
ins
add
push
icebp
mov
sbb
imul
xor
cli
jne
adc
neg
ret
aaa
and
test
cs
mov
jb
dec
cmp
cmc
mov
dec
dec
mov
popa
call
or
into
mov
push
pop
jne
dec
sub
and
jecxz
stos
jmp
repz
pop
inc
push
xor
xchg
xor
jae
stc
adc
fld
loopne
fist
dec
push
js
ja
rcl
call
push
add
mov
and
xor
leave
inc
vxorps
xor
lods
call
ret
mov
(bad)
mov
sbb
sub
cwde
pusha
xor
inc
jp
aas
add
call
test
mov
pop
dec
sbb
(bad)
out
into
inc
and
hlt
pop
pop
mov
sub
mov
cmc
jne
xchg
inc
mov
cmp
(bad)
shl
pop
sub
push
js
iret
xchg
mov
hlt
call
fild
lock
aad
jp
test
shl
icebp
xchg
jl
mov
pop
into
dec
out
pop
lahf
mov
xchg
je
inc
inc
or
pop
mov
jl
pop
cmps
std
seto
or
mov
sub
mov
xor
xchg
dec
pop
adc
sub
sub
scas
pop
sub
pop
inc
ins
or
imul
add
cwde
or
stc
push
mov
push
pop
add
shr
or
mov
xor
adc
mov
out
call
jmp
aaa
dec
cld
push
pop
test
rol
pusha
addr16
xlat
inc
pop
cmp
pusha
stos
les
push
add
lock
xor
inc
cmp
and
imul
xor
sbb
push
out
mov
lds
cmp
push
pop
cs
bound
cmp
push
dec
cmp
ins
into
mov
jle
or
cmps
push
andnps
fdiv
sub
add
test
popa
pop
dec
xchg
repnz
xchg
pop
jecxz
enter
inc
retf
push
sub
out
cmp
xchg
xor
fadd
sbb
cwde
test
movs
inc
sbb
ss
jbe
inc
mov
std
movs
push
dec
in
lods
add
pop
imul
xchg
and
jge
clc
inc
repz
ss
mov
sub
bound
iret
mov
mov
mov
pop
cli
add
mov
loopne
sbb
push
xor
shl
js
shl
sub
loop
push
ins
and
dec
ins
jmp
jb
mov
enter
icebp
xchg
neg
or
fcom
nop
sti
addr16
jnp
iret
movs
fstp
and
jecxz
in
ins
in
arpl
mov
and
cmp
add
in
lahf
popa
addr16
loopne
pop
aas
mov
pop
inc
and
bound
je
aam
loopne
mov
daa
or
mov
ins
lds
lods
mov
mov
retf
retf
sub
dec
or
aam
adc
sbb
ret
push
and
lahf
push
pushf
sub
mov
dec
call
test
aad
inc
(bad)
ret
dec
push
gs
push
add
adc
xchg
out
mov
ret
(bad)
int3
(bad)
cmp
mov
movaps
push
test
out
cmps
out
sub
push
cmp
popa
(bad)
xor
mov
fs
pop
hlt
lahf
mov
adc
push
fsub
add
(bad)
mov
push
call
popf
loop
and
daa
xchg
das
stc
and
adc
clc
jmp
sub
xchg
pop
jl
out
mov
hlt
iret
int3
out
movs
ss
fcom
sub
mov
dec
repnz
or
retf
inc
in
xchg
ror
mov
mov
cmp
push
jecxz
xchg
adc
shr
ror
lds
arpl
sub
dec
mov
popf
cdq
loop
nop
xor
imul
push
and
daa
mov
test
xacquire
daa
scas
not
(bad)
pop
sub
mov
pop
outs
mov
outs
call
adc
int3
jno
outs
rcl
cmp
jg
cmp
cwde
in
cmp
add
ret
push
ror
aas
sbb
(bad)
loop
imul
sbb
(bad)
mov
sbb
push
inc
shr
shl
data16
bound
mov
bound
(bad)
dec
pop
xor
movs
cwde
xor
je
icebp
xor
dec
inc
mov
pop
dec
add
xlat
dec
ds
sar
ss
test
test
mov
js
or
pop
jo
cmps
shld
push
mov
mov
out
(bad)
xchg
mov
stos
push
pop
mul
add
xchg
push
dec
nop
pop
pop
xor
xlat
jmp
pop
fidiv
aam
mov
adc
adc
push
shl
stos
daa
and
mov
or
(bad)
mov
movs
rol
out
nop
inc
das
push
les
fs
dec
pop
rcr
movs
mov
icebp
mov
ror
jo
gs
repz
xor
out
fwait
sbb
leave
jg
addr16
sub
retf
movs
jae
popf
lock
ins
pop
cld
sub
popf
push
gs
jne
retf
(bad)
imul
pusha
jge
adc
fs
jb
mov
adc
push
pop
inc
pop
in
lods
cs
ret
add
je
(bad)
(bad)
nop
fdivr
ret
jl
loope
push
inc
(bad)
fld
jmp
test
gs
sbb
call
xchg
psrld
jmp
out
sti
dec
(bad)
xchg
out
fnstsw
mov
add
and
add
jae
inc
ins
jle
aam
and
sub
sti
je
popf
imul
mov
div
cmp
shr
mov
xchg
jg
(bad)
aas
sub
jecxz
mov
out
inc
push
repz
clc
ja
(bad)
mov
and
push
call
setb
(bad)
ror
out
cld
inc
push
les
push
add
sbb
adc
dec
and
jb
shr
fdiv
movs
mov
shl
jbe
bound
mov
mov
ins
dec
in
sar
and
pop
inc
iret
or
mov
xchg
and
shr
sbb
bound
test
fs
pop
test
sti
dec
mov
into
shr
mov
mov
pop
scas
(bad)
push
and
mov
mov
shr
dec
xor
and
lea
pop
mov
scas
ins
mov
push
imul
cmp
or
jl
sahf
pop
adc
in
(bad)
sti
mov
cmp
add
std
mov
dec
fst
jb
pop
add
fcmovbe
and
or
mov
sahf
push
sub
or
repz
pop
inc
mov
sbb
mov
sbb
test
rcl
pop
(bad)
and
push
sti
nop
mov
dec
imul
pop
mov
push
cli
int3
loopne
add
sbb
cmc
cmp
mov
fldln2
sub
mov
rcr
ins
dec
cmp
icebp
test
in
cs
out
pop
sub
jmp
dec
pop
mov
pop
adc
fsub
scas
xchg
sbb
push
push
adc
out
sbb
mov
idiv
fwait
addr16
iret
push
aam
retf
icebp
xchg
push
add
and
cwde
xchg
mov
ret
(bad)
retf
add
ja
pop
sbb
or
aaa
push
shr
push
mov
cli
js
and
sub
push
and
jne
pop
cli
mov
or
inc
(bad)
fisubr
(bad)
fnsave
out
push
or
add
ret
xchg
or
in
jmp
fmul
dec
ficomp
jp
shl
xchg
mov
sbb
pop
push
das
es
cmp
pop
sub
xlat
ins
jae
imul
aam
cmp
mov
jb
jne
or
dec
pushf
shl
add
xchg
push
fsubr
or
into
out
inc
or
(bad)
fs
popf
(bad)
imul
xlat
cmps
add
and
xor
sub
loop
fisubr
je
neg
add
and
(bad)
js
xchg
(bad)
loop
push
bound
jns
push
push
pop
jle
push
call
shr
pop
pop
fcmovu
cmp
and
sbb
or
sub
push
stc
popa
sub
(bad)
lahf
mov
repnz
jbe
cmp
ds
sub
(bad)
pushf
cld
movs
aad
jmp
mov
loop
xchg
dec
or
lahf
stos
pop
bound
stos
sbb
push
loop
(bad)
xor
and
mov
stc
in
xchg
cld
rcr
adc
jg
and
sahf
dec
sbb
pushf
cmp
leave
popa
test
push
jge
and
test
push
mov
add
mov
add
mov
cmp
daa
aas
pop
xor
gs
out
adc
je
(bad)
hlt
fadd
add
cwde
mov
and
jl
mov
in
rcl
and
jne
lea
fisttp
in
sub
mov
jmp
mov
popa
fild
pusha
mov
add
xor
pop
in
pop
lock
fstp
sahf
lahf
push
jb
ins
loop
jecxz
dec
cs
xor
retf
jnp
add
pop
sbb
lods
scas
jecxz
aam
or
loopne
mov
test
aam
adc
sub
push
pop
fcmove
and
push
sub
pop
dec
mov
into
cs
mov
or
cld
add
jbe
cmp
nop
xor
(bad)
mov
push
nop
loop
rol
pop
clc
xor
push
cld
retf
js
pop
std
jae
dec
in
test
aas
(bad)
call
mov
mov
in
into
loope
test
std
aaa
(bad)
xor
xchg
dec
xor
inc
loopne
jae
movs
lea
(bad)
jns
cmp
call
mov
sar
(bad)
scas
js
xor
cmp
lds
(bad)
cmps
mov
dec
add
js
xchg
es
jnp
xchg
xor
inc
stos
jne
pop
jl
mov
mov
and
adc
scas
int
dec
retf
sbb
call
loope
pop
retf
ret
aaa
xor
push
test
fisub
shl
es
cdq
fild
sbb
jge
inc
cmp
push
cmp
aam
add
es
loop
mov
inc
mov
js
mov
stos
mov
xchg
push
call
cli
adc
jbe
add
hlt
fs
mov
out
mov
in
ins
sahf
jmp
bound
stc
scas
adc
imul
pushf
push
and
jb
pop
in
xchg
push
adc
fs
jg
shl
aam
xchg
or
mov
mov
fsub
dec
cdq
xchg
popa
dec
mov
(bad)
scas
imul
mov
imul
lods
call
pop
popa
shr
push
pmuludq
jns
enter
or
gs
mov
pop
in
xor
dec
aad
and
jmp
or
test
out
dec
cwde
pop
jmp
cmps
ret
and
xchg
(bad)
or
out
repnz
outs
push
lods
jmp
sub
icebp
sub
xor
data16
inc
mov
(bad)
jp
mov
xor
mov
data16
nop
jnp
(bad)
fcomp
ins
lahf
out
inc
push
in
out
nop
ror
and
jb
stos
shl
push
stc
aaa
clc
fucomi
jg
aad
fwait
ret
aaa
add
mov
adc
jl
xlat
jno
pop
mov
mov
std
imul
fs
add
and
or
sub
pop
dec
int3
jl
cmp
mov
test
cmps
cmps
dec
push
loop
xor
or
out
movs
cld
out
xchg
push
std
xchg
xchg
leave
cmp
add
cld
cmc
sub
push
sub
in
pop
and
stos
and
xor
cmp
pop
adc
test
imul
xlat
mov
inc
je
cmp
out
sbb
cs
jns
ret
or
dec
or
js
sbb
add
aaa
fst
inc
aas
mov
ins
movs
icebp
jle
dec
mov
lds
daa
fcmovnu
seto
inc
cld
mov
xlat
js
fisub
out
adc
bound
fcom
xor
or
ss
jmp
dec
adc
cmp
mov
(bad)
mov
pop
pop
sti
out
push
and
fimul
out
aad
aam
pop
jmp
test
test
ret
jp
les
loop
jnp
loop
pop
jmp
out
push
test
dec
xor
and
mov
jbe
xchg
movs
cld
xor
mov
fdiv
push
or
movs
lock
dec
out
jo
loopne
and
repz
ins
mov
mov
push
adc
fwait
xchg
imul
clc
mov
dec
dec
ret
dec
dec
(bad)
adc
les
dec
das
aam
nop
dec
push
mov
test
outs
sbb
stc
and
leave
je
mov
aas
xchg
mov
mov
mov
cmp
and
push
jne
and
loop
ret
jnp
add
pop
out
test
push
les
pop
xor
pushf
ret
mov
maxps
push
add
in
dec
fdiv
mov
sub
hlt
and
leave
jmp
rcl
sub
dec
sub
jmp
es
mov
pop
mov
(bad)
in
or
adc
(bad)
xchg
sar
and
dec
jecxz
js
sar
adc
mov
xchg
cs
pushf
fnstenv
jle
repnz
je
shl
cmp
call
xlat
inc
fwait
sbb
jbe
rcr
adc
stos
mov
or
jnp
dec
sbb
mov
jl
or
sub
adc
aas
xchg
cmps
xor
inc
in
inc
aaa
(bad)
stos
aad
xchg
or
pop
imul
lock
imul
jnp
pop
mov
push
je
cmp
(bad)
inc
cli
xchg
sub
jle
fucomi
sahf
mov
xor
cmp
call
mov
(bad)
lods
inc
xor
clc
cmp
pop
jne
call
outs
push
push
out
xor
mov
(bad)
(bad)
jmp
mov
popa
jne
push
sbb
mov
movs
inc
(bad)
rol
mov
sbb
retf
adc
mov
mov
out
scas
ss
scas
jmp
popa
and
pop
or
hlt
rcr
loopne
neg
neg
adc
fist
(bad)
ror
pop
out
mov
sbb
add
lea
jecxz
inc
pop
dec
popf
iret
inc
xchg
aas
div
add
dec
cs
jnp
mov
jae
xor
shl
or
imul
scas
xchg
xchg
push
imul
rol
inc
xchg
jge
dec
movs
imul
dec
cmp
lods
and
loop
mov
sbb
daa
(bad)
sub
dec
cs
movs
push
sbb
pop
clc
repnz
mov
mov
in
add
sub
add
mov
icebp
inc
xchg
iret
repz
(bad)
aad
js
shr
fst
mov
adc
fstp
mov
ror
mov
add
sti
cmc
dec
xchg
es
movs
dec
push
xor
ja
ins
adc
in
cmps
mov
rcl
inc
std
adc
clc
test
out
int
xor
das
or
push
in
fisubr
retf
jg
or
frstor
mov
(bad)
or
or
and
sub
sti
inc
hlt
cs
sub
add
aas
mov
cld
pop
sbb
iret
movs
retf
inc
into
fstp
mov
jne
push
mov
sar
mov
aam
xchg
in
aas
sahf
sub
add
sub
mov
sti
addr16
js
iret
mov
sub
repz
dec
cmp
mov
inc
sbb
sbb
ins
hlt
scas
push
ror
or
arpl
or
inc
repz
cmp
sbb
add
adc
mov
loopne
sub
cwde
push
imul
add
add
cmp
pop
and
ds
lods
and
cmp
sub
call
cmps
fnstenv
xor
out
push
xor
jae
addr16
xchg
add
(bad)
stos
jle
imul
stc
sub
add
xor
fnstsw
retf
jmp
imul
cmp
ds
cli
int
sub
push
xor
and
pop
imul
dec
sbb
(bad)
jge
pop
int
loop
or
or
sbb
data16
ss
xchg
sbb
pushf
(bad)
adc
adc
popa
cdq
xchg
xor
sbb
cmps
dec
cmp
and
pusha
(bad)
lock
stos
cmp
ds
fild
pop
pusha
outs
adc
std
call
lods
sub
mov
pop
mov
sbb
xchg
js
push
js
ret
push
mov
test
xchg
pusha
hlt
jmp
enter
or
pop
fisub
mov
out
mov
push
(bad)
std
pop
add
clc
adc
push
jae
mov
push
mov
iret
loop
pusha
push
pop
sub
push
int3
and
mov
icebp
mov
push
adc
cmc
adc
mov
test
pop
jmp
adc
cwde
dec
sbb
or
(bad)
mov
daa
sub
inc
pop
mov
xchg
or
ins
dec
retf
push
jns
xlat
sub
lods
xchg
pop
pop
shr
dec
push
cmp
outs
dec
xchg
mov
inc
loop
bnd
xchg
mov
and
imul
pop
adc
dec
hlt
push
xchg
xchg
imul
icebp
adc
mov
and
mov
mov
jg
ss
sti
icebp
mov
sbb
push
stc
sti
inc
mov
inc
mov
ss
pop
fmul
jl
loop
mov
jno
push
rcl
xchg
sbb
push
ret
adc
aad
mov
loope
sub
or
mov
sahf
jae
addr16
mov
jno
fld
stos
xor
fwait
xor
dec
addr16
shr
sub
mov
mov
xchg
mov
loopne
scas
xor
adc
aam
stos
les
mov
push
sub
sub
push
ret
dec
pushf
clc
inc
cmps
push
mov
inc
ret
outs
mov
mov
into
sti
aaa
mov
lock
dec
imul
(bad)
hlt
jne
fcmovnu
mov
dec
cdq
and
mov
and
mov
jns
mov
push
add
into
push
test
push
dec
adc
int3
pop
fldcw
mov
nop
cmp
cmp
outs
add
in
cwde
(bad)
mov
mov
mov
cs
push
xchg
mov
lods
push
xchg
std
mov
repnz
xor
call
sub
idiv
test
xor
outs
daa
rol
fstp
int3
pushf
add
xlat
sub
dec
or
mov
jno
mov
jge
in
(bad)
icebp
mov
out
sub
(bad)
sub
mov
push
adc
add
jmp
out
lahf
(bad)
mov
retf
jae
(bad)
mov
imul
nop
sub
cmp
or
cmp
xlat
mov
scas
ud2
push
in
push
test
ins
jmp
in
add
jle
dec
hlt
push
mov
daa
test
icebp
pop
aam
jecxz
inc
or
imul
xor
dec
push
xlat
push
or
inc
xchg
loop
pop
xchg
inc
int
loopne
int3
jmp
outs
add
xchg
pop
sub
loope
mov
fisub
hlt
fisttp
(bad)
scas
js
repz
adc
popf
push
cmp
dec
fiadd
ret
(bad)
sbb
ds
pop
imul
mov
fs
dec
mov
xor
(bad)
je
cmp
jbe
addr16
add
and
dec
or
nop
fwait
mov
jbe
sar
and
mov
inc
call
inc
loopne
loopne
shl
push
or
dec
(bad)
sbb
mov
push
push
ins
cwde
mov
pop
sbb
das
in
sbb
mov
mov
es
and
pop
dec
retf
adc
push
push
jo
xacquire
nop
into
int
xchg
jno
in
xchg
mov
nop
ss
sbb
inc
push
imul
jp
popf
xor
in
popf
movs
pop
inc
in
add
or
pop
mov
or
aam
sub
test
cmp
xchg
pop
repz
aad
xchg
xor
in
ror
push
(bad)
scas
adc
sbb
inc
test
sbb
(bad)
pop
xor
and
xchg
push
xor
dec
sahf
mov
and
lds
call
xchg
cdq
stc
in
fmul
xchg
dec
fwait
loopne
xor
test
mov
mov
mov
out
outs
nop
pop
cmp
dec
lahf
mov
daa
push
push
sub
push
fdiv
xchg
jae
inc
mov
jge
scas
cmp
(bad)
mov
int
rcr
es
repz
cmc
das
dec
repz
jmp
stc
aam
cmc
add
inc
in
jne
pop
xchg
mov
mov
mov
outs
inc
mov
ja
jbe
xchg
out
sub
mov
mov
pushw
(bad)
stc
pop
frstor
jae
mov
addr16
sahf
aam
mov
mov
fild
fwait
ss
scas
dec
mov
lea
mov
call
test
fcom
dec
dec
push
mov
mov
add
dec
jg
lahf
ja
shl
div
cmps
les
rcr
cmp
xchg
sub
sbb
call
xchg
aad
pop
(bad)
retf
rcl
cld
xor
ret
mov
int
in
jno
movs
arpl
test
mov
inc
xchg
lahf
mov
or
and
imul
and
jmp
movs
pop
lock
pcmpgtd
add
cmps
pop
ins
dec
pop
jmp
pop
mov
sbb
cmp
ret
pop
sub
int
aas
dec
dec
push
lahf
aam
into
mov
push
psrld
je
jmp
out
add
movs
pop
dec
xor
(bad)
xchg
xchg
add
(bad)
cmp
mov
icebp
lds
push
mov
call
sti
ret
xchg
imul
out
jecxz
jno
jno
(bad)
out
mov
dec
dec
sbb
sahf
vshufps
stc
cwde
push
test
jno
ja
loop
xchg
inc
add
das
xor
and
pop
xchg
fxch
xchg
mov
repnz
pusha
xlat
dec
push
leave
sbb
arpl
sub
push
mov
mov
shl
xchg
fisubr
inc
inc
or
test
out
popa
jnp
xor
(bad)
mov
mov
inc
cmp
ss
xchg
mov
(bad)
dec
inc
mov
sbb
add
imul
sub
xor
jle
dec
std
push
popf
push
in
jmp
sub
xor
outs
xor
aad
ret
jne
jno
ret
adc
pusha
dec
imul
jbe
les
sbb
xchg
inc
jno
aas
add
mov
jl
and
pushf
jecxz
jg
ss
jae
int3
(bad)
neg
hlt
sar
stc
or
call
add
out
div
sar
mov
imul
xchg
nop
and
pop
xor
fcomp
ret
sub
lods
stos
int3
in
int
pop
loopne
dec
cwde
mov
(bad)
add
out
aaa
or
jnp
mov
mov
jbe
xchg
std
mov
lea
into
pop
cmp
xchg
or
xor
xchg
cmp
aaa
stos
test
in
inc
sbb
aas
sub
loope
(bad)
shl
pushf
xchg
jle
jle
mov
mov
aaa
mov
arpl
pop
ins
addr16
movs
loop
movs
push
pop
push
popf
adc
dec
dec
jo
and
leave
stos
cdq
fldenv
clc
cwde
pop
mov
fisub
sahf
mov
ins
jno
les
aam
(bad)
sub
in
in
imul
int
test
int3
or
sub
out
les
hlt
lods
cli
(bad)
lea
dec
imul
xchg
clc
add
jmp
ins
adc
jge
(bad)
int3
and
sbb
ret
ret
hlt
cmp
xor
sub
fimul
(bad)
jbe
adc
lock
neg
mov
xchg
ins
or
jne
mov
leave
jns
ja
dec
or
jne
shr
jno
repz
imul
xor
mov
xchg
push
(bad)
in
pop
jno
mov
or
call
mov
cmp
push
mov
xor
adc
in
leave
test
cmp
inc
out
es
in
xor
pop
mov
test
not
pop
sub
cmc
sbb
dec
imul
mov
xchg
fsubr
das
dec
mov
xor
gs
dec
arpl
shl
gs
sub
iret
retf
repnz
pop
sbb
sbb
sbb
xchg
push
push
xor
popa
stc
and
nop
test
call
adc
jne
das
push
and
out
cmps
lods
(bad)
inc
(bad)
push
xor
pop
repz
or
sub
repz
xchg
adc
popa
xor
cmp
add
jnp
repnz
or
ins
adc
aad
or
pop
mov
sub
pop
push
mov
cwde
xchg
lahf
mov
pop
sub
pusha
or
movs
inc
dec
cmp
push
setns
xor
icebp
mov
lea
mov
inc
xchg
movs
test
call
mov
ja
sbb
ds
fistp
push
or
repz
iret
add
jne
out
aaa
cs
xor
add
add
and
mov
adc
inc
push
jg
push
sub
(bad)
pop
lds
pop
int
dec
jb
dec
lods
fstp
inc
stc
hlt
xchg
mov
push
and
into
ret
mov
sar
out
or
outs
test
(bad)
mov
mov
jno
or
aaa
inc
add
and
sbb
and
not
xor
lods
dec
xor
xor
xchg
mov
jle
sti
cmp
hlt
adc
cmp
xchg
ins
stc
xchg
push
hlt
call
(bad)
jne
out
(bad)
dec
xlat
mov
xchg
push
call
cld
in
mov
sbb
adc
push
cli
loope
imul
fld
mov
push
std
mov
loop
popf
mov
dec
xchg
outs
add
ficomp
frstor
push
lds
lds
pushf
inc
and
jl
adc
sbb
pop
push
cmp
and
out
xor
mov
xchg
xor
aad
xchg
iret
in
mov
jg
pop
mov
adc
cdq
push
mov
pop
imul
cmps
pop
xor
(bad)
ror
mov
push
mov
test
inc
cmp
int3
ror
pop
into
sub
rdpmc
add
add
pusha
mov
daa
and
movs
sbb
test
or
dec
sub
movs
xchg
jle
enter
in
cmps
call
iret
jmp
add
pop
xor
test
xor
cmc
ret
icebp
cmp
mov
test
ret
mov
mov
xor
xchg
cs
leave
out
xchg
xchg
ins
cmps
xchg
mov
ficomp
jecxz
lea
xlat
xchg
jbe
sti
imul
pop
fisubr
add
out
test
repz
cvtdq2ps
dec
clc
retf
scas
int
add
shr
sub
pop
push
pop
xchg
mov
ja
and
out
mov
adc
mov
das
in
jno
retf
cmp
sub
arpl
leave
mov
call
mov
mov
push
aad
lods
pop
xchg
in
mov
popf
inc
aas
inc
mov
and
cmc
push
icebp
pop
push
adc
arpl
icebp
mov
(bad)
cmp
sub
movs
dec
mov
aas
push
sbb
cmc
rol
sub
pop
cs
xor
das
xor
and
dec
aas
pop
int
add
sub
or
push
push
ret
cmps
scas
lahf
cmp
add
sub
push
jns
jno
popa
fst
ret
xchg
sahf
xchg
add
retf
ss
cmp
or
test
sbb
inc
dec
mov
mov
fmul
jmp
cwde
fwait
scas
push
in
xor
sbb
sub
cmp
push
jge
into
stc
cmp
ds
nop
loopne
gs
add
out
dec
fst
pop
mov
sub
stos
lods
sub
sbb
ret
cld
jnp
popa
sub
cmp
pop
sbb
pop
push
enter
dec
mov
add
push
mov
xchg
and
call
inc
push
dec
mov
push
imul
xlat
loopne
xchg
mov
fiadd
inc
cmc
and
cmp
outs
(bad)
mov
sar
adc
mov
dec
or
fwait
sub
push
out
inc
xchg
sbb
jnp
mov
lods
add
sbb
pop
ds
mov
icebp
loop
add
mov
push
lock
retf
and
fdivr
or
les
xchg
add
outs
sbb
ss
mov
mov
enter
xchg
cmp
cmp
icebp
inc
and
mov
add
ja
add
mul
push
and
jb
sbb
sbb
mov
stos
or
inc
mov
sbb
push
ds
clc
retf
dec
loopne
pop
aam
mov
xor
push
mov
mov
cmp
or
cmps
sbb
push
xor
and
inc
jno
test
xor
sbb
mov
lock
repnz
repz
jns
rcl
(bad)
cmp
cmp
add
xor
and
push
in
js
mov
mov
jns
xor
push
pop
mov
gs
(bad)
ror
(bad)
sbb
(bad)
adc
mov
mov
imul
jmp
into
push
(bad)
cmp
sbb
mov
out
(bad)
aaa
pop
out
daa
mov
inc
mov
sub
cwde
or
jge
push
outs
(bad)
rcr
loopne
gs
mov
sbb
nop
ret
adc
mov
and
test
scas
lock
ret
fld
std
fist
mov
sbb
call
cli
cmp
mov
xor
int3
or
jno
push
mov
and
leave
test
add
push
movs
retf
jl
iret
xchg
mov
xchg
sub
or
out
dec
sbb
or
stos
cdq
lea
lods
stos
jnp
mov
int
cdq
mov
cmps
mov
sub
dec
mov
mov
mov
xchg
sub
in
cmps
mov
sub
push
sbb
sub
rcl
sahf
mov
int
push
sti
loopne
aam
sti
cmc
pop
les
in
leave
sahf
inc
pushf
cwde
out
ret
pusha
dec
fisttp
xor
mov
push
pop
jmp
dec
call
xchg
sbb
movs
lock
dec
xor
push
test
lahf
rcl
imul
mov
fs
cmp
mov
retf
repz
int
mov
dec
jns
mov
xchg
ror
xchg
movs
outs
fdiv
and
out
jbe
inc
cmp
les
(bad)
mov
jmp
mov
push
call
aaa
ret
mov
jl
(bad)
ja
imul
sub
push
outs
test
jbe
cmp
dec
or
fcomp
popf
shl
jle
and
lods
shl
sub
retf
imul
ins
push
and
push
loop
push
test
and
jle
adc
and
jmp
add
sahf
int3
hlt
out
cwde
nop
ins
iret
in
in
xchg
pushf
sub
rcr
jmp
pusha
sbb
shl
cdq
dec
fwait
xchg
xor
mov
imul
outs
push
xor
ins
test
mov
inc
das
push
dec
mov
sub
aad
jno
adc
js
cmc
add
sub
jle
test
ja
xor
mov
jae
cld
push
or
shr
pop
lods
hlt
mov
jle
test
retf
clc
sub
jg
mov
pop
add
jge
sbb
push
sub
xor
mov
rcl
and
mov
pop
or
pusha
xchg
pushf
dec
enter
push
pop
mov
adc
imul
dec
jecxz
mov
add
fcomi
out
ins
(bad)
push
mov
stos
mov
dec
xchg
clc
mov
in
mov
cmp
ds
mov
jl
stos
xor
xchg
test
icebp
mov
inc
je
pop
dec
repnz
lds
sahf
dec
call
push
mov
mov
push
not
mov
and
lds
stos
out
pop
call
fwait
mov
mov
scas
shr
adc
loop
inc
fcomip
jmp
push
fadd
mov
push
mov
loope
add
loope
out
aad
or
mov
and
cld
mov
repz
or
push
loopne
shl
shl
in
aam
mov
iret
bound
mov
fcomp
or
sub
repnz
jo
jmp
inc
push
stos
aad
call
pop
cmp
jbe
loopne
out
pop
sub
or
pop
mov
jp
lahf
mov
cmps
pushf
dec
dec
dec
xchg
mov
inc
(bad)
sub
cmp
out
rcl
inc
icebp
imul
adc
shr
aas
hlt
aam
jbe
pushf
dec
pusha
push
nop
xor
xchg
nop
test
dec
out
aaa
jecxz
paddsb
xchg
push
cmp
or
adc
nop
sbb
lock
into
pop
repnz
and
push
int
jb
jge
or
aaa
ret
in
or
imul
cwde
jns
or
mov
sbb
mov
movs
pop
(bad)
test
mov
add
out
push
xchg
sbb
pop
fsub
add
pop
and
movhps
outs
mov
push
push
xor
call
adc
cmp
nop
(bad)
in
rcr
mov
cmp
xor
neg
(bad)
cwde
(bad)
cmp
imul
xchg
ds
dec
fimul
push
aam
inc
jl
cmps
inc
push
jbe
shr
sub
adc
fnsave
sub
mov
mov
jp
cmp
pop
popa
mov
add
test
mov
stos
xlat
(bad)
xor
in
addr16
mov
jb
adc
mov
int
or
out
or
jnp
jmp
out
cmp
adc
inc
inc
addr16
data16
(bad)
les
test
jge
mov
cmps
xchg
nop
add
push
push
rol
je
xchg
cli
push
ins
xor
test
jne
mov
push
jo
fwait
or
push
cmp
dec
js
aaa
mov
daa
mov
out
fldenv
retf
mov
(bad)
shl
push
mov
sbb
stc
pop
and
(bad)
rcl
fdivr
enter
add
stos
push
cmp
popa
out
ja
cmc
stos
push
ret
push
ja
cli
fcmovu
xchg
jns
dec
add
sti
xchg
call
sub
rol
pop
dec
cli
cmp
scas
(bad)
jo
or
repz
jno
cli
gs
jp
loopne
lahf
enter
(bad)
push
call
jb
aas
inc
lods
rcr
retf
out
mov
in
iret
int
cmps
shr
push
xor
inc
iret
ds
shl
test
mov
sbb
outs
popa
jnp
repz
push
jmp
pop
push
jecxz
mov
pop
sbb
jnp
jmp
loop
pop
icebp
dec
add
pop
sbb
into
in
lods
(bad)
dec
jmp
pop
xchg
(bad)
sbb
cmp
clc
ja
test
xchg
xchg
(bad)
in
inc
mov
sub
lods
add
shl
push
jmp
popf
sbb
sbb
loope
icebp
sub
in
dec
idiv
es
push
out
pop
adc
add
mov
aas
and
mov
xor
(bad)
jg
cmp
add
pop
mov
adc
xchg
and
addr16
mov
shl
jp
sub
inc
push
sbb
js
fidiv
outs
mov
lds
adc
outs
jg
dec
dec
movs
inc
sub
ja
repnz
or
adc
pusha
pop
mov
repnz
pop
sub
mov
in
push
xlat
jmp
mov
pop
fsubr
sub
cwde
popf
test
ins
hlt
mov
in
pop
push
mov
jmp
movs
jmp
dec
jp
mov
shl
fld
inc
mov
mov
icebp
stos
xchg
aam
cli
lahf
xchg
jno
cmp
cmp
mov
jg
mov
jno
lds
push
xor
mov
xchg
movs
rcl
mov
ror
ds
add
fsubr
ins
jmp
shl
movs
mov
jmp
imul
and
out
adc
jo
jg
sub
jb
sub
dec
mov
mov
and
iret
fstp
test
mov
pop
sbb
fild
or
cmp
push
movs
popa
mov
popf
mov
(bad)
aam
mov
mov
sbb
mov
xor
ja
dec
push
and
sub
lds
or
pop
pop
imul
or
call
adc
push
mov
dec
repz
mov
xor
or
xor
leave
pop
or
scas
test
adc
jb
sahf
js
inc
adc
mov
in
inc
cmp
cli
inc
cmps
iret
movs
and
jg
test
ficom
loop
push
push
mov
push
nop
or
xchg
in
adc
sbb
outs
retf
lods
icebp
mov
dec
test
ins
out
aad
jle
out
jb
js
icebp
inc
repnz
lods
and
cs
sar
mov
push
mov
fcomp
cmc
pop
rcr
inc
loop
cmps
stos
int3
jmp
add
push
mov
xor
dec
or
sub
or
push
cmp
leave
bound
lahf
movs
in
cmc
fisubr
inc
jbe
jmp
jae
and
xchg
jmp
push
dec
das
xor
dec
push
dec
repnz
jle
mov
movs
(bad)
adc
and
xor
out
pop
inc
push
jl
mov
fdiv
adc
nop
aas
cmp
daa
or
stos
leave
sub
push
das
and
sbb
test
int3
and
mov
enter
pop
xchg
call
aam
daa
imul
mov
jae
inc
fisub
add
push
not
retf
push
mov
jg
sub
cmp
lods
test
popa
mov
popa
add
lock
or
sub
pop
ss
cwde
xchg
or
add
fisub
ficomp
ins
mov
xor
sbb
(bad)
jecxz
mov
xchg
jge
mov
retf
retf
call
and
lock
in
inc
mov
adc
pop
cmp
call
xchg
sub
jb
or
sti
mov
repz
nop
or
in
scas
or
cwde
xchg
pop
and
inc
pop
gs
adc
mov
fcmovnbe
push
mov
fld
ins
jns
rcr
xchg
adc
stc
inc
pop
add
push
dec
data16
push
dec
mov
xchg
mov
push
fdivrp
push
pop
and
push
mov
xchg
lock
ret
sub
sub
int
outs
push
mov
dec
and
pop
repz
add
iret
cmp
repz
stos
icebp
push
dec
dec
out
es
(bad)
and
xlat
push
das
das
and
and
sub
movs
jl
add
mov
jo
ins
fnstenv
jb
xchg
fcomp
cli
xor
sub
adc
mov
cmps
(bad)
jnp
jb
fs
fcomp
sar
test
sub
inc
(bad)
int3
add
iret
pshufw
cmp
inc
ret
sbb
inc
lea
fild
cmp
movs
movs
cmp
xor
pop
xor
loope
xchg
and
das
cmps
and
and
aad
push
lock
dec
(bad)
mov
int3
jecxz
aam
mov
ss
mov
pop
mov
and
in
mov
jnp
rcr
and
and
fcmovnu
jmp
addr16
xchg
cmp
popa
jecxz
out
stc
xor
mov
iret
sbb
or
xor
cmp
mov
mov
shl
les
mov
arpl
push
cdq
iret
lods
ins
out
pop
mov
push
jmp
jnp
call
mov
push
lock
div
in
stos
and
or
add
jns
add
cmps
sahf
int3
xchg
movhps
scas
jle
cmp
cli
mov
jg
outs
ins
lock
test
test
add
inc
sub
mov
out
pop
xor
sbb
test
sbb
outs
push
(bad)
mov
push
cmp
sub
lahf
icebp
pop
ror
fstp
repnz
inc
adc
cli
jnp
sbb
test
jns
out
mov
imul
pop
or
outs
or
pop
push
xor
adc
test
jge
(bad)
fist
shr
(bad)
or
mov
and
imul
lds
add
mov
push
lahf
cmps
jle
call
test
cld
lahf
adc
imul
mul
scas
mov
fst
ret
push
mov
cmp
(bad)
aas
dec
mov
int
sti
shl
sub
jmp
jns
sbb
(bad)
push
frstor
movs
push
out
jo
xor
cld
pusha
push
mov
mov
mov
gs
outs
dec
dec
push
sbb
js
test
(bad)
jg
adc
aaa
push
dec
cmp
popa
out
push
push
mov
jl
pop
neg
sti
xor
sbb
jb
add
and
add
arpl
pusha
xchg
sbb
fimul
dec
int
fs
mov
call
cmps
stos
ss
ds
adc
mov
cmp
not
sahf
xor
test
aam
imul
or
cmc
call
cld
jmp
(bad)
sub
into
test
cmp
jg
stos
aas
std
push
jl
dec
xor
mov
jnp
cmps
aaa
or
xchg
lahf
mov
repnz
mov
add
outs
mov
(bad)
adc
aaa
jmp
(bad)
ins
cmp
push
rcl
test
jbe
jl
fsub
je
sub
pop
js
or
add
dec
inc
sub
sbb
adc
rol
adc
sub
sti
imul
dec
cmp
shr
and
iret
stos
jmp
daa
mov
ret
addr16
test
xchg
nop
dec
lock
pushf
repz
outs
test
mov
and
int3
mov
leave
or
jle
mov
rol
mov
adc
call
xchg
fldenv
and
fisub
push
pop
cmp
cmps
sbb
es
iret
lds
push
cmp
out
xor
dec
jae
hlt
adc
push
fwait
jbe
and
inc
cmps
push
jge
cld
add
jg
sti
data16
mov
cmp
xor
mov
nop
push
mov
xchg
adc
mov
call
inc
rol
or
mov
adc
ja
sbb
jae
pop
ficom
loopne
push
or
fcmovnu
in
sbb
stos
cld
mov
add
and
and
mov
ins
push
mov
jmp
push
push
inc
pop
enter
cli
in
mov
cmps
mov
data16
movq
pop
and
and
cli
in
(bad)
sbb
test
sub
out
cli
rcl
pop
test
dec
imul
dec
xchg
rol
adc
inc
retf
sub
jno
adc
lods
pop
dec
inc
sub
les
and
in
daa
enter
or
lahf
daa
mov
mov
and
mov
stos
aaa
hlt
mov
xor
not
add
aam
xor
dec
js
pop
imul
inc
rcr
and
imul
test
xor
jmp
mov
dec
daa
push
mov
lea
(bad)
pop
dec
sbb
mov
pusha
push
mov
mov
fisub
jp
jnp
xor
push
out
mov
jns
add
inc
xor
add
dec
imul
adc
nop
pushf
ds
call
(bad)
int
retf
out
mov
out
mov
fwait
mov
(bad)
fistp
pop
mov
enter
std
inc
popfw
pop
stc
in
push
pushf
hlt
retf
cmp
pop
aaa
repz
and
dec
test
lock
bound
lea
mov
jmp
movs
les
call
jbe
mov
inc
xchg
movs
pop
fadd
add
sub
loopne
inc
iret
mov
xor
cmps
xor
test
das
cld
mov
sub
sbb
stos
sub
jns
out
push
adc
int3
jne
sbb
jle
dec
aam
imul
dec
xor
mov
add
aas
loopne
dec
dec
sbb
or
cmp
xor
xchg
add
in
mov
sub
xchg
repz
dec
mul
jmp
xlat
cmp
ficom
inc
pop
mov
call
ss
jecxz
inc
fst
fiadd
movs
inc
or
sub
mov
nop
(bad)
(bad)
jle
ret
or
adc
clc
loop
inc
sub
inc
jl
jbe
fs
inc
int3
push
out
cdq
pop
movs
cmp
out
in
jae
fbld
call
pop
out
shl
sbb
mov
or
add
sub
add
dec
sahf
test
xor
cmp
cmp
mov
pop
fwait
enter
loopne
ret
out
xchg
inc
mov
nop
ret
jle
xchg
popf
ss
ret
jae
xor
sbb
cli
jbe
cmp
neg
cmp
cmc
dec
aam
mov
aad
les
fdivr
dec
cmp
mov
push
jge
mov
xchg
imul
push
cmp
cld
sbb
adc
and
shl
ret
push
mov
mov
mov
shr
fcom
sar
and
add
es
xchg
imul
fbstp
adc
push
and
cmp
add
pushf
aam
jno
sub
sub
jg
pop
movs
jmp
aam
add
sub
push
mov
sbb
and
cmps
jno
sahf
sub
xchg
pushf
cdq
add
or
push
pusha
xchg
or
xor
in
or
int3
lea
pushf
jns
mov
add
test
nop
pusha
mov
pop
cld
dec
iret
jae
add
xchg
ffree
dec
xor
imul
add
ins
cld
pusha
add
jp
adc
xlat
sti
adc
stc
addr16
movs
mov
in
jp
ds
cmp
jl
pop
int
outs
or
pushf
jl
jo
push
add
(bad)
adc
jmp
retf
pop
stc
retf
sar
inc
rcl
xchg
call
(bad)
in
push
rep
pop
bound
jg
push
jae
shl
push
(bad)
adc
fmul
test
add
fs
out
in
jle
inc
fcom
jne
(bad)
pop
push
mov
scas
repz
adc
enter
rcr
push
lahf
pop
out
cmps
sbb
xchg
jp
test
add
pop
addr16
mov
aaa
dec
scas
pop
xchg
push
push
xchg
enter
inc
and
sub
xchg
and
leave
mov
pop
mov
(bad)
cdq
loope
test
adc
repnz
in
mov
popa
mov
push
and
pop
jns
push
mov
out
ror
xor
add
and
(bad)
hlt
sub
push
cmc
rol
pusha
mov
dec
jmp
mov
pop
inc
sub
jo
xchg
sbb
outs
ret
mov
jecxz
push
outs
pop
stos
cmps
pop
int3
fs
push
sbb
popf
mov
icebp
bound
mov
or
jmp
lahf
mov
or
sbb
(bad)
ret
xchg
bound
nop
pop
or
stc
mov
mov
retf
add
jno
das
xchg
mov
inc
sbb
mov
push
jge
push
xchg
mov
dec
aaa
push
dec
outs
aaa
inc
inc
and
push
fadd
pop
inc
data16
fsubr
mov
hlt
push
sub
inc
dec
cdq
jb
neg
call
dec
ret
mov
pop
sar
jb
retf
push
std
mov
add
pop
cwde
xlat
or
and
inc
ja
mov
mov
jae
out
jmp
inc
call
sbb
cmp
xchg
sbb
adc
das
mov
iret
adc
adc
inc
or
cmp
cmp
ficomp
(bad)
retf
sub
fs
pusha
push
cmp
cmp
add
cmp
enter
fwait
dec
cwde
loopne
stos
add
push
cdq
xor
clc
xchg
shl
pop
xchg
sub
pop
add
cli
je
jae
aas
jp
cmp
pop
cdq
cmc
nop
sbb
mov
mov
pop
mov
mov
mov
stos
in
addr16
je
pop
lea
je
sub
dec
movs
shld
clc
test
inc
and
xchg
jne
(bad)
(bad)
mov
pop
jb
leave
ins
jae
into
scas
fs
mov
mov
ror
dec
cdq
cmp
fild
movs
sbb
push
(bad)
aam
mov
adc
mov
mov
jbe
jo
retf
out
hlt
movs
mov
in
push
fwait
pop
push
inc
adc
inc
popa
sbb
xchg
inc
loopne
xchg
inc
neg
stc
pop
sbb
pop
mov
icebp
icebp
aas
mov
xor
sbb
mov
scas
mov
cmp
pop
pushf
dec
shr
lea
and
pop
pop
inc
mov
shl
or
cmps
gs
push
or
daa
dec
and
sub
fcmove
push
and
mov
fisubr
popf
ss
clc
fdiv
mov
ins
aaa
into
fisub
and
mov
pushf
mov
and
ins
mov
gs
ins
repnz
lods
xchg
jle
shl
imul
stos
or
and
or
inc
jnp
movs
or
stos
and
stos
adc
into
mov
mov
clc
fld
pusha
mov
add
cld
mov
push
imul
push
adc
cbw
jecxz
inc
scas
push
aad
dec
mov
std
int
test
mov
iret
mov
das
add
inc
xchg
fisttp
mov
inc
adc
imul
out
(bad)
mov
mov
or
fild
mov
jmp
scas
dec
and
cmp
cld
add
sbb
or
loopne
jp
jo
or
cli
ror
add
enter
inc
and
ror
(bad)
jbe
shr
lahf
or
call
int
sub
leave
cmp
int
sub
xor
fnsave
outs
pop
sahf
imul
push
mov
push
ins
xchg
popa
jbe
inc
xchg
fisubr
(bad)
aaa
nop
lds
push
push
outs
icebp
xchg
sbb
xchg
movs
aaa
pop
addr16
rcr
or
cmp
test
xchg
outs
push
test
arpl
out
jle
(bad)
mov
jb
mov
xor
mov
sub
sbb
jns
mov
je
cmp
mov
pop
test
jnp
fistp
xor
loopne
add
mov
movs
aam
mov
std
inc
pop
cwde
outs
add
mov
mov
jb
xchg
cwde
mov
push
clc
add
push
push
pop
add
(bad)
cmp
jmp
fs
ret
lea
and
adc
dec
popf
xchg
lock
dec
pop
mov
xchg
stc
jbe
and
ror
mov
fbstp
mov
in
popa
outs
dec
xor
sti
daa
sub
int
cli
enter
and
dec
std
aas
push
mov
jp
(bad)
push
mov
sar
in
jmp
or
(bad)
adc
pop
dec
xor
sti
loope
int3
bound
sbb
xor
xor
out
iret
dec
out
and
adc
cmps
xchg
out
sti
xchg
pop
loopne
out
in
ror
mov
ins
inc
(bad)
sbb
inc
xchg
adc
push
je
mov
fstp
mov
mov
lods
arpl
fs
hlt
xlat
lock
or
rcr
f2xm1
pushf
dec
cmp
stc
movs
sub
clc
into
inc
jl
daa
mov
mov
xor
push
jmp
pop
jg
jbe
(bad)
in
jmp
push
stc
pusha
adc
rcl
jnp
cmp
cmp
push
std
sbb
pop
stos
sub
or
sub
or
lock
cmps
inc
pop
mov
pop
push
ja
sar
cmp
stc
cs
mov
lea
js
or
lock
test
shl
xor
mov
pop
adc
leave
dec
pop
xchg
sti
ret
xchg
es
or
stos
lock
xlat
fsubr
data16
mov
pop
jb
cmp
add
pop
push
jmp
and
sbb
ins
inc
imul
cmc
fmul
mov
jmp
jns
cwde
and
xchg
and
(bad)
fcmovne
sub
lds
leave
call
dec
cmovnp
in
out
addr16
xor
test
pop
movs
pop
xor
add
mov
push
sti
dec
mov
mov
lds
sbb
xchg
dec
arpl
add
sbb
fstp
int
mov
adc
push
clc
jo
push
xor
inc
mov
repz
xor
psraw
(bad)
cwde
cmp
xor
lahf
aaa
dec
adc
lock
mov
push
cdq
into
ins
lods
mov
das
sbb
in
mov
mov
iret
in
mov
ds
repnz
outs
adc
fldcw
mov
cmps
sub
div
adc
in
rcr
(bad)
fadd
(bad)
sbb
adc
pop
adc
adc
cmp
inc
pop
retf
(bad)
sub
bound
rol
mov
jno
and
jmp
cmc
retf
fwait
stc
out
dec
movs
stc
mov
sub
add
cld
outs
jp
inc
call
sub
xchg
repz
pop
das
add
mov
cwde
mov
mov
and
(bad)
pop
(bad)
adc
loopne
adc
dec
jns
jecxz
jl
mov
mov
int
aas
xchg
clc
popf
out
fcmovu
in
sti
das
pop
movs
sbb
enter
test
adc
push
xchg
mov
repz
jns
cwde
xlat
(bad)
mov
xchg
add
sbb
mov
inc
and
inc
push
stos
jne
shl
outs
pop
fisubr
and
ret
mov
cld
sbb
jo
in
mov
mov
daa
(bad)
mov
(bad)
xchg
push
ins
stos
push
mov
adc
pushw
test
out
ss
cmp
inc
es
mov
sar
mov
push
adc
mov
cmps
repz
(bad)
jmp
test
lahf
inc
dec
vmread
(bad)
repz
or
inc
and
daa
scas
stos
gs
inc
not
xchg
not
sbb
cld
push
jmp
iret
or
adc
test
imul
mov
jle
mov
jle
or
adc
pop
sub
mov
and
or
cs
ja
outs
stc
into
out
pushf
sub
arpl
jg
ret
adc
int3
mov
mov
idiv
or
push
cli
mov
xchg
movs
call
fsub
aam
dec
out
iret
hlt
mov
js
inc
rol
mov
xchg
jo
(bad)
jge
sub
sub
repnz
push
ds
pop
popa
sub
fs
pop
sbb
dec
gs
repnz
fistp
add
pop
dec
and
xchg
pushf
push
push
inc
addr16
pop
repz
sub
repz
aad
inc
pop
push
and
sahf
push
clc
test
cmp
push
inc
hlt
jp
and
xor
cmp
push
jle
lods
jae
jg
jle
push
mov
mov
and
fidiv
mov
jno
jl
push
in
in
jae
xor
mov
mov
mov
sub
movs
adc
or
fcomp
sbb
daa
push
inc
dec
fmul
call
adc
ret
mov
imul
push
cmps
loopne
ror
orps
mov
cmp
mov
ja
jmp
stos
mov
mov
mov
sbb
or
mov
and
sub
inc
idiv
jnp
and
cwde
aaa
test
fcomp
rcl
xlat
adc
cld
jns
fwait
mov
add
or
aaa
in
icebp
or
and
leave
loope
xor
xor
fstp
mov
aaa
mov
(bad)
jmp
xchg
es
sub
adc
inc
adc
sbb
loopne
jae
mov
iret
das
iret
fbld
rcl
push
jle
stos
jecxz
out
test
mov
addr16
repnz
scas
jno
mov
movs
sub
adc
cld
and
mov
push
fs
or
movs
int
addr16
add
mov
mov
xchg
test
cmp
cwde
cmp
or
outs
imul
or
lock
mov
pop
test
test
mov
stos
xor
idiv
xchg
in
sbb
popf
sub
mov
mov
add
in
(bad)
mov
cmp
xchg
mov
pop
outs
fs
iret
pop
mov
popf
arpl
shl
in
add
jnp
or
xor
sbb
mov
or
jg
loopne
cmc
fdivr
call
mov
cmp
push
xchg
inc
hlt
ret
push
retf
xchg
push
jo
mov
pop
jbe
push
inc
in
inc
dec
sbb
xchg
and
gs
clc
pop
mov
into
mov
pop
fdiv
xor
jns
leave
int3
inc
neg
imul
stos
fwait
popa
or
xchg
in
add
je
loopne
cmp
mov
int3
jge
push
fidivr
sub
dec
test
daa
lea
cmp
ja
jmp
dec
(bad)
push
cwde
enter
mov
mov
mov
cmp
adc
in
mov
int
test
sbb
jo
sbb
add
jmp
data16
adc
ins
inc
aad
sub
mov
cmps
dec
adc
add
lock
cmp
pop
or
xor
adc
dec
outs
aas
jbe
xchg
adc
inc
movs
push
inc
cmps
mov
aas
and
xor
hlt
sbb
pop
shl
dec
fsubr
jns
jo
inc
adc
jbe
lds
cmc
ror
mov
push
xchg
outs
jl
sub
lahf
adc
outs
in
fabs
inc
jns
push
call
sub
popf
pusha
adc
pushf
cs
push
jb
sub
mov
lds
pop
jl
xchg
popf
cmp
cmps
jno
leave
cs
inc
lea
cmc
cld
push
add
add
in
add
shl
loop
int
in
or
sbb
fld
mov
repz
std
dec
sub
aas
mov
popa
push
iret
je
scas
outs
sahf
(bad)
jge
xchg
mul
movs
(bad)
mov
(bad)
mov
push
add
jg
pop
psrlq
ss
xchg
push
shr
test
loopne
pop
cmp
pop
push
gs
clc
mov
add
sbb
jb
cmovae
fdiv
pop
cmps
call
retf
not
cmp
xor
jmp
inc
sub
jmp
aam
data16
adc
cld
clc
ret
pushf
out
pop
pushf
(bad)
xchg
mov
adc
adc
adc
xchg
sbb
enter
and
shl
mov
lock
push
xchg
mov
(bad)
shr
lock
mov
jne
ja
mov
mov
std
les
sub
retf
arpl
mov
imul
adc
sbb
mov
jo
xlat
mov
outs
jns
ins
push
add
ins
adc
cmp
ret
push
enter
lea
inc
ficomp
xchg
outs
add
test
sti
and
xlat
sar
xor
push
addr16
test
jnp
add
(bad)
fld
inc
fld
sbb
or
add
jne
sbb
clc
mov
mov
mov
jb
cmps
fdivr
in
xchg
dec
aas
or
mov
jne
xchg
mov
pop
cmp
jle
xchg
jle
icebp
je
adc
into
mov
into
fistp
cmp
test
or
out
inc
ffreep
add
fld
aad
sti
xor
xchg
or
clc
ds
sub
hlt
stos
xor
add
xchg
xchg
jno
xchg
jae
push
push
and
nop
push
dec
lods
frstor
pop
sub
sbb
xor
fnstsw
add
ds
and
sub
jge
or
cmp
jae
push
cmp
ja
jle
pop
or
pop
lds
inc
push
sub
mov
push
add
mov
add
pop
loope
sub
add
adc
xchg
push
mov
and
imul
fist
or
xchg
outs
and
jb
fwait
mov
or
in
fld
scas
bound
retf
lds
sub
mov
faddp
imul
fidivr
scas
cmp
iret
push
inc
shr
jl
sub
mov
pushf
add
jle
mov
or
les
clc
imul
dec
je
jg
mov
xchg
xor
into
in
sbb
and
cmp
dec
xchg
fnstenv
sub
stos
in
sub
lds
and
sar
lods
mov
out
lea
push
dec
inc
and
das
mov
and
push
dec
fst
stos
adc
mov
jmp
push
dec
sub
jns
xor
hlt
pop
cmp
push
movs
xchg
dec
std
je
das
push
arpl
push
cld
pop
fist
loope
imul
mov
aam
aas
mov
dec
ss
sar
aad
and
ds
in
out
push
in
jp
pop
jp
and
and
pop
repnz
dec
add
loop
lds
pop
popa
ss
mov
mov
xchg
movs
outs
mov
xchg
jge
push
mov
sub
mov
mov
mov
ja
scas
or
lods
push
dec
je
xchg
push
push
xchg
loop
push
aaa
mov
arpl
add
xchg
mov
sub
cwde
xchg
pop
push
push
idiv
fwait
test
jmp
push
cwde
lods
adc
scas
xchg
mov
cmc
fld
stos
(bad)
jmp
jno
out
pop
and
popa
cmp
mov
and
jg
dec
push
mov
adc
ds
daa
adc
loope
mov
(bad)
nop
in
loope
xchg
sub
lahf
nop
shl
cwd
inc
push
sub
dec
lds
sbb
cmp
or
push
mov
mov
inc
aas
push
shr
mov
dec
fcmovnu
jbe
xor
(bad)
or
and
fwait
pop
push
and
imul
sti
jae
jmp
mov
mov
pushf
in
cmc
stc
pop
ss
in
xchg
ins
add
push
std
loopne
push
loope
push
mov
mov
xor
test
dec
xor
shl
aas
sbb
in
xchg
push
fdivr
pop
push
push
test
ret
jmp
dec
jae
sub
(bad)
push
lods
xchg
clc
arpl
iret
and
lahf
out
or
shl
out
icebp
enter
or
inc
adc
push
ins
adc
fnstenv
push
js
jmp
ucomiss
jmp
and
jg
cmp
add
jmp
xchg
jmp
int3
(bad)
jmp
or
ja
jb
test
push
push
and
mov
lahf
rcl
mov
xchg
nop
add
stos
es
inc
and
in
cmc
sub
ss
add
dec
and
call
enter
push
ficom
ss
mov
lahf
out
and
les
and
mul
xchg
jne
scas
cmps
xchg
popf
int3
xchg
arpl
xlat
xor
fstp
lds
jmp
mov
jns
int3
(bad)
repz
adc
outs
xchg
das
pop
cmp
jecxz
xor
ins
cmps
mov
add
mov
mov
mov
in
xor
or
pop
es
dec
test
or
inc
jnp
leave
inc
pop
xlat
fs
stos
sbb
jle
jle
jecxz
lods
cs
rol
fdiv
pop
adc
cmp
add
or
adc
test
mov
arpl
movs
pop
out
adc
mov
and
pop
pop
std
mov
inc
call
retf
jl
push
mov
push
pop
jo
mov
(bad)
fimul
jmp
jnp
push
xchg
and
or
mov
test
lods
mov
jle
rcr
add
fidivr
mov
mov
xchg
pop
aaa
push
fwait
aad
hlt
clc
movs
(bad)
mov
adc
sbb
int
pop
pop
xchg
out
movq
jb
add
jle
adc
clc
xor
jmp
data16
lds
pxor
mov
gs
sahf
push
or
xor
mov
sar
fidiv
jl
mov
out
je
gs
out
cmp
adc
inc
repnz
cmp
scas
xor
movs
jp
mov
mov
inc
jnp
mov
test
xchg
(bad)
cmp
sti
pop
mov
clc
outs
outs
xchg
push
rol
jge
jge
(bad)
stc
test
jge
and
ret
mov
push
(bad)
in
repz
pop
(bad)
xor
or
jecxz
outs
loope
adc
dec
add
jmp
daa
dec
loop
add
fnstenv
xchg
jge
ret
mov
loopne
jo
div
ins
sbb
adc
xor
or
pop
int
loopne
fist
and
fadd
xlat
mov
enter
arpl
mov
inc
retf
pop
int
(bad)
mov
pop
sbb
test
add
jb
gs
retf
repz
xchg
push
and
or
jns
adc
pop
movs
mov
dec
xor
jnp
sahf
not
lods
(bad)
cld
sub
fld
pop
push
fstp
xchg
pop
stc
std
clc
mov
pop
add
std
call
sbb
jmp
dec
pop
or
pop
aad
cmp
sbb
fwait
in
mov
scas
adc
pop
dec
sbb
dec
xor
out
mov
mov
int
loopne
inc
div
sub
sbb
cmps
es
xchg
sbb
into
pop
movs
add
jmp
repnz
inc
hlt
adc
xchg
loop
fld
loop
int
lds
leave
push
mov
fbstp
ins
inc
iret
fcomp
or
jg
ror
retf
outs
inc
xchg
pop
push
(bad)
repnz
ret
pop
loop
stc
inc
mov
mov
jns
xor
cmp
add
mov
out
sbb
xor
and
rcl
addr16
test
pop
inc
cmp
or
xchg
mov
jns
into
xor
paddusb
mov
mov
jbe
ja
xchg
es
ret
aas
cli
dec
xchg
cmps
push
adc
inc
cmp
or
inc
jp
into
not
fs
mov
js
jl
les
or
loope
mov
inc
cmp
call
sbb
cmps
cmps
loopne
mov
das
stos
out
push
xchg
shr
pusha
jb
(bad)
mov
mov
xchg
jbe
mov
push
adc
into
cmp
jp
adc
imul
jns
mov
sub
mov
inc
loope
movs
or
test
adc
dec
mov
mov
loop
int3
jmp
push
push
add
in
rsm
sub
lods
mov
addr16
jo
jecxz
lods
fistp
xchg
scas
pop
mov
popa
cli
test
cmp
cmps
xchg
imul
and
mov
jmp
pop
mov
push
xor
sub
adc
div
mov
or
and
xor
sub
and
cmp
mov
inc
xchg
aas
sbb
pop
jnp
es
xchg
repnz
neg
push
pop
repz
mov
cli
into
add
sti
and
mul
cmovno
adc
fwait
ss
mov
mov
imul
out
xor
jmp
sub
xchg
test
rcr
mov
fnstenv
lea
in
dec
cmp
push
inc
sub
or
sbb
cwde
xor
push
and
adc
sub
sbb
push
mul
(bad)
fist
imul
dec
xor
push
pop
inc
movs
or
add
pushf
jbe
cmp
das
cmp
inc
or
and
mov
xor
inc
cmp
cmp
add
pop
test
sbb
mov
sub
jmp
clc
xor
ror
push
adc
ins
shl
push
cdq
out
rcr
std
mov
push
into
dec
repz
adc
mov
gs
scas
out
xlat
sahf
ret
in
xor
xchg
xor
not
jae
add
push
push
mov
int
or
push
mov
dec
test
push
mov
jecxz
mov
cmps
repz
pop
sbb
enter
push
mov
inc
and
adc
lahf
jecxz
pop
mov
test
mov
imul
in
stos
adc
sub
adc
mov
push
int3
retf
add
inc
pop
nop
imul
scas
push
(bad)
adc
data16
dec
imul
loope
dec
mov
stos
fdivr
mov
push
rcl
std
mov
outs
push
test
adc
pop
xor
sbb
mov
loope
xor
addr16
fxch
sub
in
inc
lahf
aaa
inc
rcl
(bad)
dec
cld
(bad)
outs
stos
add
(bad)
fisub
xchg
inc
fstp
sub
sub
jge
ss
mov
sti
jnp
loop
adc
mov
push
lods
lea
mov
push
mov
mov
sub
xchg
loop
shl
int3
pop
xchg
mov
pusha
add
popa
xchg
sub
or
push
mov
loope
jne
jnp
sub
mov
pusha
fidivr
cmp
retf
test
mov
push
dec
inc
shl
cmp
mov
sbb
jbe
mov
fwait
dec
nop
xchg
mov
aad
jecxz
pop
retf
and
iret
mov
jno
jno
in
cmp
and
push
int3
shr
mov
xor
inc
(bad)
adc
mov
sub
lea
cdq
push
in
cmc
mov
jno
aad
xor
fucomp
repnz
or
out
pop
mov
leave
fnstenv
inc
mov
xchg
test
inc
cwde
stos
imul
fdiv
lahf
or
aam
pop
and
ror
push
lds
das
clc
pop
cmp
dec
add
xchg
or
mov
sub
cmp
mov
stos
sbb
push
in
mov
lock
and
out
add
mov
fistp
push
dec
int
and
sbb
loope
pop
test
and
popa
mov
(bad)
and
inc
inc
sbb
aas
add
inc
mov
cmp
(bad)
jecxz
inc
stc
bound
sub
rcl
sub
int3
(bad)
icebp
(bad)
dec
and
ss
add
cmc
aaa
dec
and
and
cdq
mov
inc
movs
jl
gs
lgs
jno
fimul
lods
add
out
jmp
xchg
ja
sahf
cs
pop
gs
pop
fstp
fmul
add
rcl
inc
jne
test
mov
xchg
pop
xchg
sub
std
mov
ret
push
stos
or
cmp
test
mov
mov
lahf
test
fild
jns
sub
lds
xor
cmp
mov
jne
mov
dec
aas
jns
in
add
sbb
pop
aam
sbb
mov
cwde
cmp
in
jle
jmp
mov
jae
xor
test
dec
jbe
jae
shl
fimul
sub
sbb
inc
test
jg
les
je
ret
and
ret
sub
pop
cdq
or
add
jp
jne
sub
lods
in
cmp
mov
fadd
mov
addr16
and
jnp
test
rcr
ret
mov
pop
aam
jle
or
mov
pop
adc
adc
(bad)
arpl
adc
sub
xchg
pop
repnz
sbb
xchg
add
jmp
ret
(bad)
(bad)
data16
popf
pop
pop
inc
outs
test
push
outs
jg
adc
lahf
dec
aam
add
fistp
pop
push
push
loopne
mov
fadd
icebp
sbb
in
in
sbb
data16
call
sub
sbb
adc
(bad)
xor
adc
icebp
push
in
mov
out
fcmovb
xlat
stc
lock
retf
jle
xchg
shl
clc
(bad)
icebp
repz
xchg
push
daa
xchg
inc
sbb
xlat
cs
xchg
push
popf
sahf
mov
out
pop
adc
push
pop
fdiv
leave
cs
and
mov
stos
inc
in
cld
sub
mov
mov
or
mov
arpl
sub
inc
das
mov
adc
cld
xchg
cmp
mov
fsub
mov
(bad)
iret
out
and
ins
enter
loopne
and
mov
add
push
xchg
in
jge
inc
cmps
mov
and
lods
icebp
mov
xchg
cli
test
or
(bad)
bnd
push
shl
pop
shr
sbb
loopne
shl
cmp
pop
(bad)
fs
in
jnp
cmp
mov
mov
es
sbb
lds
leave
cli
mov
fist
test
cs
jnp
fmul
rcl
icebp
pop
mov
int
fiadd
ins
or
jge
test
fwait
nop
jge
inc
out
js
sar
dec
es
sub
cmp
outs
movs
pop
adc
pop
jmp
add
test
ds
ret
cwde
pop
ret
jae
or
pop
cdq
sbb
arpl
cmp
xor
aam
xchg
outs
repz
or
(bad)
out
jne
mov
or
mov
dec
mov
repz
push
scas
aad
mov
xchg
pop
mov
inc
cmp
nop
inc
iret
mov
jae
cli
sub
iret
arpl
sub
call
iret
xchg
xchg
std
dec
lods
push
das
push
mov
cmp
dec
cmp
sbb
or
loope
pusha
rcl
or
popa
fld
aad
xor
mov
in
dec
fwait
mov
pop
sub
push
(bad)
out
push
dec
pop
cmps
scas
xor
outs
mov
pop
ss
repz
lea
dec
dec
xor
fbld
retf
or
aam
mov
mov
add
xchg
xchg
inc
shl
adc
and
es
inc
in
cmp
xor
popf
daa
mov
push
xor
jmp
not
xor
iret
test
inc
pop
jl
cwde
pushf
data16
sub
or
mov
int3
stos
mov
add
mov
adc
pop
adc
mov
jns
call
sbb
jns
xchg
add
popf
dec
je
fst
inc
xor
int3
retf
punpckldq
xor
mov
test
xlat
mov
pop
adc
cs
sub
cmp
test
es
scas
or
or
(bad)
jmp
stos
mov
out
sbb
mov
jae
scas
xor
cmp
xlat
mov
cmp
je
jl
mov
clc
test
nop
fisub
shr
inc
and
les
neg
sbb
sub
xchg
stos
out
jle
and
jmp
pop
jecxz
mov
xchg
fiadd
mov
popf
dec
push
ss
imul
outs
lock
add
xchg
outs
pop
jg
bound
(bad)
scas
sub
lods
scas
pop
cmp
jb
retf
sub
dec
std
pop
test
imul
ret
inc
cmp
sub
adc
mov
mov
dec
or
and
push
std
pop
sar
cmp
cmp
and
jp
mov
xor
add
dec
test
push
push
pusha
fnsave
dec
mov
inc
jmp
xor
cmp
mov
cdq
sbb
es
inc
(bad)
lock
lds
add
dec
pop
xor
xlat
loopne
adc
add
or
out
sub
out
mov
mov
pop
jge
xchg
inc
(bad)
ret
xchg
sub
pop
pusha
dec
add
add
in
and
add
mov
jmp
movs
push
aad
pop
jmp
xchg
cmp
and
pop
inc
fidivr
or
out
xor
push
or
mov
out
dec
and
pop
mov
lea
mov
js
lds
idiv
mov
movs
cmps
xor
jns
pop
mov
mov
imul
push
jnp
jmp
xchg
retf
xor
mov
or
push
shl
and
mov
or
aas
inc
mov
lock
aad
adc
add
aam
xchg
and
sahf
adc
sti
hlt
mov
enter
inc
cld
xlat
sbb
pop
push
outs
enter
mov
or
movs
or
pop
mov
and
push
sbb
dec
std
call
bound
aas
cs
sub
xchg
sbb
dec
xor
call
adc
push
mov
loopne
jmp
pusha
push
dec
aad
pusha
mov
lss
mov
outs
je
cwde
out
fwait
add
adc
cmps
retf
sub
shl
into
cmp
stos
mov
pop
lahf
imul
cdq
adc
(bad)
sub
mov
xor
cld
cmp
retf
mov
cmps
inc
ret
fst
xor
scas
cs
movs
aam
ret
(bad)
jmp
pop
ror
mov
jne
jge
test
outs
mov
or
and
outs
(bad)
jecxz
iret
mov
or
stos
add
fistp
mov
dec
cmc
es
xchg
and
test
aad
pop
frstor
das
repz
mov
add
test
adc
and
dec
sbb
mov
jns
leave
shl
int
push
popf
add
ffreep
xchg
arpl
jecxz
ror
jmp
pop
or
sbb
test
and
add
or
xchg
ja
jo
in
jecxz
xchg
inc
xchg
add
push
sub
cld
mov
js
pop
arpl
(bad)
jae
mov
test
enter
outs
jge
loop
jecxz
pop
jg
mov
mov
xchg
dec
loope
imul
xor
stos
cmc
pusha
cld
push
sub
adc
retf
cmps
and
xchg
call
fiadd
rcl
imul
and
push
sahf
enter
lahf
ror
movs
pop
stos
xchg
pop
cwde
mov
jae
and
jbe
cli
inc
sub
add
cld
scas
sar
scas
sbb
mov
adc
jecxz
pop
call
xor
stc
push
int3
push
pop
cs
loop
fist
fwait
inc
mov
repz
sbb
shl
or
(bad)
mov
mov
sbb
push
lock
jae
imul
aaa
sbb
add
repz
or
push
inc
sub
shl
mov
call
adc
(bad)
mov
jmp
xchg
inc
inc
sub
sbb
scas
xor
xchg
xchg
xchg
fmul
mov
and
mov
mov
mov
pop
call
idiv
fwait
bound
inc
jne
mov
scas
xor
xchg
xor
mov
cmp
cmp
pop
add
outs
inc
add
dec
inc
(bad)
sahf
adc
sar
xlat
cmp
push
jle
and
test
fst
push
or
mov
xchg
lods
pop
ds
(bad)
(bad)
and
push
push
dec
push
xor
mov
iret
int3
daa
mov
fnstsw
mov
cmps
dec
loope
in
arpl
sub
fdivr
and
xchg
add
fwait
arpl
cli
out
add
cmp
push
ficomp
cmp
lock
xor
int
movs
stc
jle
or
mov
(bad)
ret
adc
loop
into
les
into
sbb
ret
cmp
rcr
(bad)
in
adc
sar
lds
mov
dec
in
push
imul
in
sti
retf
mov
jmp
jge
test
push
inc
ret
xchg
mov
adc
lea
fmul
nop
fstp
shr
xchg
mov
jp
test
dec
addr16
lahf
(bad)
sbb
fs
gs
xlat
ins
mov
sar
and
xor
test
js
icebp
cmp
jle
fisubr
sub
aaa
or
scas
pop
inc
outs
in
pop
mov
pop
mov
movs
xchg
mov
xor
fnstsw
popf
xchg
mov
call
cmp
cmp
cdq
into
push
adc
cli
loope
xor
cmp
add
outs
ds
inc
mov
mov
pop
push
fisub
int3
pop
(bad)
in
int
not
jb
out
push
cmp
or
mov
in
xor
enter
inc
(bad)
cld
fwait
imul
(bad)
xchg
push
mov
mov
xchg
adc
sbb
inc
inc
mov
gs
or
test
call
nop
jle
iret
jg
adc
ins
xor
ds
push
dec
jmp
add
(bad)
sbb
push
clc
push
xor
mov
int
push
bnd
mov
ficom
ins
ror
pop
mov
iret
add
add
mov
sahf
push
add
call
jo
cmp
fdivr
jne
push
mov
xchg
xchg
inc
mov
jb
ins
(bad)
push
pushf
adc
fild
js
or
sub
mov
lods
dec
push
push
mov
cmp
adc
dec
xor
clc
mov
xchg
mov
call
cmp
xlat
ins
xchg
adc
inc
pop
int3
push
jns
dec
popa
es
clc
daa
cmc
pop
adc
adc
cdq
or
rcr
(bad)
sti
and
cmp
push
inc
lahf
and
scas
mov
mov
sbb
mov
sti
inc
ss
push
push
ror
(bad)
daa
ins
add
xor
adc
les
mov
je
out
sub
xchg
aas
clc
rcr
retf
mov
jg
out
push
xor
adc
or
add
cli
add
fiadd
je
sahf
cld
adc
in
call
movs
punpcklwd
xchg
mov
add
mov
fidivr
in
mov
mov
outs
xor
ss
arpl
pop
retf
inc
ins
add
dec
jmp
int3
nop
lock
daa
push
pop
add
repz
and
outs
test
push
mov
fistp
in
xchg
xchg
cmp
add
mov
add
sahf
xor
outs
cmps
push
xchg
ja
jno
sbb
inc
out
pop
dec
push
and
mov
push
push
push
test
mov
or
fild
mov
cmp
in
inc
fsubr
and
popa
add
and
fsubr
call
idiv
xchg
(bad)
mov
adc
scas
dec
jmp
pop
ins
hlt
sub
sub
jle
popa
jno
outs
cld
popf
jnp
and
jecxz
mov
push
sub
sub
aam
jg
cmp
inc
pusha
jg
shr
fisub
and
jne
fwait
jnp
xchg
imul
mov
inc
or
fidivr
call
mov
(bad)
cmp
add
push
push
pop
dec
aaa
or
jp
iret
inc
mov
stos
mov
xchg
xchg
pusha
test
scas
add
add
cld
sub
xchg
add
das
cmc
add
nop
movs
push
jo
inc
pop
inc
lock
jl
cmp
loopne
iret
or
xchg
and
fmul
push
out
(bad)
fldcw
int
push
aad
adc
cmp
outs
das
shl
adc
xchg
int
push
nop
test
pop
pusha
int3
scas
pop
cmp
xor
mov
jno
daa
mov
ja
pop
inc
mov
push
mov
or
inc
jp
mov
ss
add
mov
daa
push
ins
pop
mov
or
fisubr
loope
or
mov
test
sbb
mov
fldenv
and
(bad)
js
lea
dec
test
and
mov
lods
(bad)
out
leave
loop
xor
jo
xchg
push
dec
xor
js
(bad)
jle
xor
test
pop
jno
js
jnp
xor
jb
js
mov
push
pop
mov
xchg
jo
jae
ins
movs
push
repnz
bound
push
mov
jbe
adc
ss
sbb
hlt
cmp
mov
ss
dec
fcomp
sbb
mov
(bad)
cmp
jge
shl
push
int
pop
into
mov
push
push
out
stc
add
arpl
test
shl
(bad)
out
or
cld
xor
cmp
and
and
xor
ja
(bad)
lahf
cdq
and
idiv
call
jae
jg
and
(bad)
push
sbb
lods
cmp
dec
mov
fnstenv
das
cmps
lock
push
in
test
iret
pusha
test
popf
dec
(bad)
ins
pop
sbb
mov
inc
push
cmps
adc
in
imul
cs
mov
push
lods
mov
dec
pop
pop
inc
movs
lock
shr
push
dec
add
inc
and
aam
outs
xchg
arpl
push
shr
aaa
scas
mov
daa
add
jg
shr
(bad)
pop
mov
sbb
test
out
add
test
(bad)
and
dec
and
lods
cmp
int
mov
gs
mov
pushf
les
mov
(bad)
mov
out
ins
pop
xchg
into
imul
out
gs
mov
inc
jmp
cmp
pop
jbe
mov
fist
add
pop
jnp
mov
xor
imul
popa
xchg
sahf
xor
mov
idiv
mov
jmp
rcl
aaa
lods
(bad)
add
clc
xor
outs
push
es
jne
ficomp
fisub
jecxz
enter
cmp
scas
and
loop
out
mov
lods
cmps
push
adc
and
ss
or
icebp
scas
ins
adc
ins
shl
jne
fwait
shl
push
xor
mov
push
push
arpl
adc
aas
mov
jno
out
(bad)
dec
pop
shl
addr16
mov
aas
mov
mov
imul
out
arpl
add
iret
shl
mov
sub
pop
out
mov
xor
add
loopne
cmp
dec
ret
scas
xor
mov
out
fidiv
test
pop
sub
mov
icebp
mov
loopne
and
inc
xor
aas
xor
jns
cmp
shr
scas
inc
jecxz
imul
int3
push
cdq
dec
retf
jno
push
jl
fstp
push
mov
dec
(bad)
mov
mov
cdq
leave
cmp
cwde
aam
shr
push
jmp
shl
in
jae
fnstenv
cmp
cwde
jp
cwde
adc
and
stos
(bad)
(bad)
adc
sub
inc
cmp
mov
sub
in
pushf
or
xor
xor
pop
out
dec
dec
cmp
or
ret
or
lods
call
out
adc
push
neg
into
or
push
rol
aam
mov
jne
arpl
cmp
xor
test
outs
xchg
fwait
fs
cwde
adc
or
inc
aas
inc
std
fdivr
out
xor
enter
fcmovu
and
xchg
(bad)
add
addr16
mov
sub
pop
pushf
push
mov
dec
mov
jae
dec
jle
into
iret
gs
test
outs
stos
cli
std
outs
in
xor
(bad)
fstp
or
pop
in
les
dec
mov
jle
test
fimul
fdivr
into
push
fs
(bad)
hlt
outs
stc
jmp
ja
rcr
stos
cld
loope
retf
(bad)
pop
cs
leave
fs
cdq
pop
repz
adc
adc
(bad)
adc
jns
adc
call
outs
ja
sub
jb
xchg
mov
jmp
(bad)
sar
int3
cdq
rol
dec
ret
inc
inc
jnp
(bad)
cdq
pop
ror
lds
xchg
out
or
stos
pop
jb
lods
mov
in
mov
mov
test
fwait
les
or
movs
shr
push
adc
fcomp
or
and
or
loop
(bad)
mov
(bad)
jg
scas
jmp
nop
sub
mov
stc
enter
rcl
xchg
es
xchg
test
sub
pop
in
in
pop
pop
mov
xor
outs
pusha
xchg
xor
dec
outs
or
lea
aas
je
xor
add
xor
cmc
push
mul
xor
in
ja
and
jbe
leave
loop
adc
popf
or
or
sub
jp
icebp
cmp
js
(bad)
int3
in
paddusw
and
dec
dec
fmulp
jle
push
add
int3
sahf
inc
movs
setp
push
mov
ja
and
lahf
sub
sbb
pop
mov
(bad)
jecxz
push
sbb
ja
ja
outs
stc
dec
sbb
loop
(bad)
pushf
mov
in
out
aaa
jmp
pop
lods
jb
mov
pop
call
xor
jb
xchg
mov
pop
and
das
dec
lods
xor
push
cmc
push
retf
mov
int3
fcmove
cmp
pop
and
jne
inc
mov
scas
das
xchg
cmp
(bad)
mov
mov
sbb
test
ror
or
sbb
jp
pop
add
adc
ret
popa
mov
addr16
in
pushf
lock
sub
inc
cwde
aaa
cdq
adc
xchg
in
mov
or
sbb
aas
mov
mov
and
(bad)
pop
not
(bad)
frstor
adc
add
mov
shr
mov
shl
add
dec
cmc
int
or
or
push
jne
hlt
mov
inc
xchg
inc
sub
cmp
shl
sub
jmp
xchg
jo
sbb
and
sti
dec
mov
pop
mov
sbb
mov
stos
shr
jecxz
stos
call
call
push
and
mov
test
aam
not
dec
ds
add
add
ficom
mov
push
mov
sahf
xor
xor
ds
sub
repnz
pop
add
cmps
sbb
mov
shl
push
pusha
xor
inc
sub
imul
ret
dec
sbb
jg
loopne
pusha
pop
mov
xchg
mov
push
lock
or
or
mov
mov
or
int
rcr
jno
bound
add
cmp
sub
dec
sub
rcr
in
adc
adc
gs
cs
push
xchg
dec
int
leave
std
adc
inc
or
sahf
shl
fwait
cdq
push
jbe
add
inc
mov
jae
or
(bad)
cmps
je
adc
adc
fisub
nop
pop
data16
push
adc
es
lock
popa
mov
push
out
inc
sub
int
xchg
test
stc
sbb
mov
sti
ret
fsubr
je
scas
inc
das
cmp
xchg
hlt
nop
xchg
jmp
add
xor
sbb
stos
xor
outs
jno
mov
mov
add
push
shr
jmp
push
sbb
and
loope
loopne
inc
fstp
stc
ficom
and
bound
mov
mov
ficomp
addr16
jmp
sbb
adc
cmps
xchg
scas
mov
sbb
aam
mov
push
mov
mov
sar
(bad)
sbb
jmp
out
xor
and
adc
push
loope
imul
inc
mov
jbe
fbstp
ror
or
mov
jmp
clc
inc
movs
adc
sbb
out
inc
(bad)
fild
in
pop
sbb
outs
outs
cmp
enter
jb
sub
mov
sti
outs
ror
mov
aaa
cmc
xchg
or
pop
out
inc
scas
xlat
int3
pop
(bad)
xchg
in
retf
aas
and
test
ins
popa
xchg
push
imul
in
xchg
popa
in
push
es
mov
cmp
fcomp
dec
sar
jmp
cmps
adc
call
or
(bad)
xor
mov
aaa
jo
fiadd
add
lds
mov
pop
clc
cld
jne
iret
out
cmp
arpl
jge
jae
in
ds
dec
out
scas
jb
xchg
xor
out
ret
xchg
outs
sub
or
test
push
clc
imul
pop
mov
cmp
rcr
inc
xor
xchg
jmp
mov
mov
in
adc
(bad)
adc
nop
jle
outs
(bad)
(bad)
gs
neg
(bad)
cmp
addr16
pop
jmp
aad
mov
add
hlt
fadd
sub
clc
xlat
nop
(bad)
pushf
push
ret
(bad)
daa
mov
jno
lahf
mov
jae
push
dec
push
imul
cmps
in
dec
push
add
cmps
mov
jecxz
cmp
ret
shl
xor
out
outs
pop
aaa
and
inc
xchg
adc
pop
packsswb
mov
mov
jne
inc
or
cmp
push
mov
sahf
cmp
jecxz
std
in
loopne
xchg
test
xor
adc
mov
loop
adc
outs
in
xchg
pop
pop
mov
xor
setbe
sbb
repz
xchg
es
out
shr
add
cmp
mov
or
std
cmp
push
dec
xchg
fldcw
test
leave
xchg
jmp
js
mov
aaa
xor
mov
test
add
loop
rcl
add
cmps
popf
mov
pop
xchg
add
rcl
enter
aas
mov
dec
or
ret
stc
inc
xchg
scas
or
fisub
and
push
fdivr
mov
imul
jnp
lea
fisub
pop
pop
enter
cmps
jmp
pop
in
mov
imul
xchg
fadd
mov
jmp
push
fstp
lods
loope
inc
clc
mov
mov
inc
xchg
lea
adc
imul
jb
dec
sub
sub
add
mov
frstpm(287
inc
ret
in
shr
jbe
pushf
test
push
and
add
inc
rcr
mov
fadd
sbb
sub
pop
or
mov
mov
jle
mov
mov
shl
(bad)
out
sub
scas
xor
(bad)
xlat
jb
adc
hlt
hlt
push
mov
dec
loop
retf
pop
mov
call
out
sahf
ror
dec
dec
add
fxch
sbb
les
add
push
ret
addr16
xchg
jne
ror
fdivr
and
adc
stos
popa
add
ds
loop
sahf
and
ss
(bad)
das
push
scas
(bad)
push
push
add
out
(bad)
xor
xor
mov
xlat
and
push
or
scas
sahf
and
fwait
push
push
cld
ds
pop
das
jge
cmps
jo
mov
sbb
or
imul
rol
add
mov
sub
out
or
shl
xor
add
xchg
xor
nop
jne
into
loope
add
jns
sub
hlt
leave
dec
stos
and
xor
jle
fimul
push
mov
ret
sub
jae
jo
dec
mov
or
mul
test
dec
jp
xor
mov
xchg
rol
push
sub
fstp
ret
lahf
add
loope
je
push
dec
push
pop
inc
je
or
add
test
(bad)
mov
cmp
xor
add
pop
push
sub
adc
sbb
and
add
adc
mov
retf
popf
dec
cmp
jl
mov
mov
int3
sbb
push
mov
jb
push
adc
out
push
sbb
sahf
sbb
arpl
mov
jo
aas
test
int3
push
call
addr16
in
mov
ror
(bad)
inc
popf
lods
test
inc
mov
(bad)
test
aad
dec
mov
or
pop
mov
push
inc
mov
xor
mov
aas
mov
dec
add
pop
and
dec
outs
dec
add
cli
mov
pop
sbb
loopne
adc
or
movs
inc
xchg
push
sub
scas
sbb
sbb
leave
and
(bad)
pusha
stos
leave
daa
sbb
(bad)
xor
add
cdq
ds
push
mov
push
cmp
dec
sub
sbb
mov
mov
sub
test
mov
mov
and
pop
push
cmps
mov
pop
(bad)
cld
mov
xchg
(bad)
(bad)
jnp
dec
mov
fwait
rcl
xchg
xchg
push
hlt
jb
inc
out
test
dec
jecxz
test
bound
int3
hlt
xchg
dec
test
pop
aas
xor
and
mov
in
mov
xchg
(bad)
mov
fcomp
ret
leave
call
ins
lods
lock
and
enter
cmps
adc
adc
sar
cwde
dec
lahf
or
xacquire
out
rol
leave
mov
and
cdq
ss
cmc
imul
sub
test
popf
sub
push
xchg
(bad)
jns
mov
xchg
(bad)
or
push
mov
pop
loopne
jnp
pop
(bad)
jb
out
inc
int
idiv
movs
cdq
movs
call
fldcw
jmp
ror
push
out
pop
call
mov
stos
arpl
add
pop
xor
les
add
out
dec
test
test
mov
sub
sbb
div
loop
nop
fsub
add
sub
push
inc
xchg
dec
ret
aas
mov
adc
mov
jno
loop
in
int
div
dec
lods
jnp
inc
push
xor
lds
pop
fcmove
jp
rol
xchg
adc
inc
mov
mov
mov
and
aam
xlat
call
mov
jmp
jmp
imul
fisub
out
sub
inc
push
dec
rsm
pop
popa
lahf
or
hlt
mov
scas
jmp
or
adc
add
xchg
sbb
lds
pushf
mov
jae
aaa
inc
or
sub
mov
cmc
movs
imul
xor
gs
pop
mov
xchg
es
stos
gs
test
fs
inc
jb
in
pushf
push
xchg
xchg
xor
dec
fs
pop
push
cs
and
dec
pop
dec
icebp
cmp
push
(bad)
stc
xchg
inc
mov
push
sub
mov
call
aad
mov
mov
cmp
loope
inc
lods
sbb
ret
ficom
mov
repz
dec
push
cdq
lds
sub
sahf
xlat
jne
dec
ja
nop
je
pop
pusha
add
in
rcl
loopne
(bad)
mov
in
data16
in
daa
test
icebp
xchg
imul
inc
hlt
push
pushf
aaa
xor
pop
mov
cdq
bound
mov
aas
(bad)
and
lock
push
mov
sti
cmps
xor
dec
and
lds
jb
sub
fsub
add
cs
mov
ficom
ins
push
cmps
fld
jns
pop
push
out
shl
out
jo
in
inc
arpl
pop
cmp
inc
mov
or
add
imul
cmp
addr16
dec
xchg
dec
push
movs
cli
pop
cli
aaa
xlat
pop
or
int3
push
pop
mov
lods
imul
fsubr
and
(bad)
repz
inc
loope
cmp
imul
(bad)
sub
inc
xchg
shr
sbb
mov
mov
add
repnz
sbb
ins
(bad)
push
dec
fcomip
xor
data16
mov
setbe
in
div
out
adc
adc
inc
std
ret
aas
or
rcr
mov
mov
lahf
test
fwait
cmp
xchg
(bad)
dec
dec
call
adc
adc
or
inc
fs
test
push
ins
sbb
popa
jb
cdq
xor
movs
lods
rcl
inc
cmps
adc
add
rcr
mov
lahf
mov
es
sbb
adc
and
popa
or
xchg
stos
inc
push
xchg
inc
push
or
mov
mov
cli
mov
push
retf
inc
xchg
mov
or
and
neg
mov
arpl
and
jge
movs
leave
data16
jo
xor
ds
push
aam
cmp
pop
lea
scas
mov
mov
cld
push
xchg
adc
pusha
out
aad
xlat
ret
cmp
xchg
mov
inc
jnp
mov
add
arpl
(bad)
daa
sbb
add
adc
aaa
inc
fmulp
xor
mov
or
scas
fmul
inc
retf
or
mov
popa
push
and
xchg
fs
or
pop
push
and
push
sub
xor
xchg
addr16
mov
jg
inc
inc
cwde
js
icebp
loop
jp
sbb
cmp
mov
lods
pusha
sbb
mov
or
stos
sub
ss
push
inc
imul
std
mov
xor
fisub
retf
push
ss
out
push
jb
(bad)
ins
mov
lods
imul
or
jecxz
sub
arpl
call
cmp
call
call
add
out
xchg
add
fnsave
cmp
push
aad
xchg
xor
mov
imul
gs
cwde
ds
mov
call
jl
outs
pop
rcl
mov
sbb
add
retf
xchg
imul
inc
sbb
inc
sbb
jb
setb
sub
bnd
cmp
vpmaxsw
cmps
mov
test
push
sub
dec
adc
cmp
mov
dec
fild
add
(bad)
and
mov
stos
sub
ror
adc
test
push
pop
(bad)
in
cmp
mov
or
mov
ret
xchg
add
mov
sub
scas
pop
es
and
stc
dec
mov
invd
test
adc
aaa
add
push
mov
mov
dec
mov
lds
les
shl
test
mov
sti
xchg
sbb
data16
call
pop
scas
mov
jb
and
hlt
loope
jecxz
mov
stos
loopne
pop
push
add
sti
aaa
dec
add
popa
xor
mov
xchg
clc
repnz
test
xor
push
jg
mov
je
ja
les
pop
(bad)
cmp
jbe
fnsave
xchg
mov
dec
or
xchg
call
call
jge
mov
push
xchg
cmp
outs
nop
add
shl
adc
into
cmp
(bad)
aaa
stos
cmp
xor
jo
sbb
pop
xor
cmp
pop
sub
xor
aad
fdivr
mov
nop
and
rcr
retf
loope
mov
jg
test
or
xchg
fcomp
retf
cmp
and
cmp
mov
cli
mov
sbb
inc
call
retf
mov
sbb
fwait
cmp
pop
xor
mov
outs
outs
jg
mov
bound
cmp
pop
or
push
mov
xchg
out
sahf
stos
pop
jno
cmc
rcl
call
test
fisttp
cmp
push
or
clc
test
xor
fadd
mov
xor
and
or
pop
fstp
adc
xlat
xchg
cdq
add
mov
std
scas
adc
adc
xor
cmps
xchg
jge
jne
imul
dec
dec
or
ret
gs
mov
(bad)
and
xchg
sub
jns
in
sbb
push
dec
test
(bad)
dec
sbb
(bad)
jmp
scas
xchg
(bad)
js
mov
je
and
lods
sub
cdq
dec
cdq
pop
retf
dec
push
mov
pop
retf
test
or
aas
jmp
or
aas
add
adc
cmp
cmp
les
cmp
ret
out
imul
push
jne
sub
sahf
stos
pop
out
jbe
outs
xchg
test
pop
test
sbb
or
push
adc
mov
add
pop
add
dec
mov
adc
dec
mov
out
mov
frstor
sub
mov
(bad)
cmp
stos
call
lods
inc
mov
nop
sub
jae
mov
mov
add
sub
sbb
cld
xchg
push
push
jbe
or
mov
push
(bad)
out
out
inc
popa
fnstsw
cmps
jns
mov
jmp
repnz
and
xchg
je
shl
sub
cmp
jnp
(bad)
mov
dec
in
xchg
jle
mov
inc
neg
sahf
test
gs
add
and
fld
add
xor
ror
aas
hlt
mov
mov
imul
aam
mov
imul
push
pusha
cmp
xchg
xor
fwait
mov
and
push
or
mov
adc
cmp
mul
xchg
mov
loopne
inc
test
pop
cli
inc
(bad)
test
lds
mov
adc
fs
sbb
fld
lahf
mov
inc
push
mov
call
xchg
mov
xchg
iret
nop
or
mov
icebp
int3
retf
lahf
mov
add
xchg
fwait
and
pop
js
inc
jmp
adc
outs
xor
push
inc
and
jo
(bad)
adc
(bad)
int
cmp
mov
or
mov
test
sub
dec
or
rol
push
and
pop
je
test
stos
cmp
mov
adc
std
sub
mov
jecxz
pop
(bad)
fwait
sahf
add
pusha
int3
xchg
and
mov
iret
and
push
cdq
and
imul
(bad)
sar
cmovg
push
icebp
adc
imul
xor
mov
ret
and
and
jns
cmps
jo
loop
(bad)
addr16
push
mov
mov
ficomp
iret
fist
or
mov
inc
dec
sahf
outs
pop
mov
movs
popf
dec
sub
int3
xchg
mov
adc
mul
sub
sub
stc
sub
in
cmc
adc
mov
jne
fistp
push
pushf
cld
mov
ins
das
sbb
cld
dec
dec
inc
inc
aad
cmp
mov
rcr
mov
shr
mov
movs
int
(bad)
fs
sar
iret
shl
fwait
ss
push
clc
jb
xchg
(bad)
ror
adc
pop
fucomp
out
(bad)
cmc
fcomip
(bad)
or
jb
and
call
call
cmp
dec
and
push
out
mov
push
push
test
loope
adc
dec
ins
xor
dec
icebp
aam
in
pop
jge
xchg
sub
jmp
and
cli
(bad)
pop
inc
jl
push
xchg
and
xlat
push
inc
inc
jp
push
data16
shl
ror
fcmovb
out
cmp
and
test
and
cmp
ja
cs
mov
push
sahf
sti
mov
stos
mov
mov
inc
cmp
clc
iret
out
sbb
push
sub
xchg
inc
outs
fld
sbb
sbb
adc
fcomp
push
sbb
test
or
in
out
fldenv
pop
retf
enter
cmp
sti
sub
clc
call
outs
in
inc
cmc
iret
jb
xchg
cli
(bad)
aas
push
dec
cmps
sub
xor
popf
das
add
hlt
mov
xchg
lods
and
bound
pop
out
je
cli
aad
sbb
cmp
cmp
jecxz
jmp
test
adc
cmps
adc
and
jb
push
or
gs
xlat
repnz
push
jne
or
(bad)
sti
sub
push
into
retf
add
mov
mov
adc
arpl
mov
aas
xchg
movs
sti
mov
adc
jnp
ins
mov
std
jne
ins
xchg
retf
into
data16
or
pop
ret
icebp
cmp
int
cmp
(bad)
mov
gs
xchg
test
shr
jecxz
loopne
sub
push
std
jle
fcom
lock
out
mov
mov
add
mov
pcmpgtw
dec
xchg
call
cmps
in
sub
call
inc
pop
add
out
imul
sbb
xchg
(bad)
mov
arpl
pop
loop
inc
jns
dec
dec
inc
inc
sar
imul
ins
cmp
and
ja
aad
xchg
(bad)
loope
push
scas
mov
adc
das
icebp
sbb
out
mov
lods
xchg
mov
pop
ret
jg
xchg
aas
stos
inc
into
or
rol
jns
jne
dec
mov
out
xchg
sbb
pop
add
pop
shl
inc
push
mov
mov
sub
popa
movs
imul
sahf
jecxz
sbb
cdq
adc
repnz
jmp
mov
jecxz
add
xor
sbb
cmc
fstp
pop
test
movs
mov
lds
loope
dec
mov
lock
and
xchg
xor
inc
inc
bound
sub
call
dec
mov
add
or
add
xor
daa
pop
adc
adc
dec
out
je
std
pop
loopne
and
sub
adc
cmp
and
int
push
pop
test
push
fld
popf
add
mov
push
cdq
jns
lock
add
cld
repnz
icebp
ror
mov
pop
add
inc
aam
imul
fwait
icebp
outs
mov
inc
push
fsub
adc
ret
xchg
dec
imul
dec
(bad)
jmp
cmp
dec
cmp
pop
out
inc
mov
les
ss
in
rol
pop
scas
mov
jb
push
pop
arpl
push
(bad)
(bad)
out
stos
outs
fxch
loope
fistp
es
leave
adc
stos
adc
ficomp
lods
repz
push
daa
test
and
std
xchg
mov
and
pop
mov
and
repz
cli
sbb
sbb
jbe
sbb
cdq
mov
add
inc
jne
iret
in
inc
inc
add
sbb
popf
jmp
in
sub
popa
cmc
cmp
cmp
xchg
test
add
jle
cmp
or
and
xchg
jmp
lods
push
add
and
dec
fsubr
cdq
pop
add
adc
mov
outs
fist
bound
movs
bound
xchg
lods
fcomp
rcl
sub
push
sbb
stos
pop
xor
jge
cmp
sbb
popf
aaa
out
jl
int
push
dec
mov
clc
xchg
jg
mov
push
dec
cmps
or
jmp
stos
xlat
push
dec
mov
jg
sahf
jle
dec
and
mov
pusha
stos
jp
dec
scas
in
call
daa
jns
and
pop
test
test
test
into
fld
sti
xchg
popa
mov
pop
loopne
xchg
ins
cdq
cmp
ret
add
push
enter
sub
jo
mov
fdiv
pop
mov
lods
add
mov
jne
xchg
mov
jnp
movs
call
jno
add
xchg
mov
lock
outs
mov
call
jb
mov
or
loopne
or
test
enter
popa
adc
rol
cmp
xchg
push
and
popf
or
loop
and
jle
sbb
dec
(bad)
jnp
xchg
shl
push
cld
(bad)
(bad)
sub
into
sub
call
sub
(bad)
rcl
mov
pushf
adc
jle
inc
pop
push
adc
pop
mov
or
xchg
mov
mov
(bad)
xor
cmp
add
sahf
cmps
mul
rcr
fs
xchg
int
bound
jle
jmp
mov
and
fsubr
sbb
scas
fisttp
je
sbb
add
aam
cmps
push
dec
xchg
sub
sti
fs
dec
(bad)
or
int3
push
in
push
es
adc
adc
xchg
in
cli
push
dec
adc
jmp
jnp
enter
fsub
xor
pop
mov
sbb
fcmovne
sbb
shl
fcmovnb
enter
sub
mov
jmp
outs
(bad)
or
into
adc
cwde
std
mov
dec
enter
dec
in
pop
xchg
push
sbb
or
adc
mov
jecxz
xor
dec
mov
push
mov
inc
rcl
pushf
in
lahf
repz
dec
pop
stos
aam
mov
mov
out
sub
scas
jae
sub
mov
inc
pop
je
cli
(bad)
retf
jno
add
jno
mov
pop
push
clc
(bad)
push
(bad)
aaa
outs
adc
pop
stc
stc
shl
test
sbb
cmp
loop
cwde
mov
out
shr
addr16
das
jmp
ja
sub
(bad)
int3
push
dec
ret
mov
jge
xor
push
sbb
inc
sub
inc
push
aad
adc
movs
bound
mov
mov
leave
mov
mov
inc
xchg
dec
inc
inc
jno
call
mov
pop
aaa
icebp
sbb
mov
icebp
xchg
outs
mov
repz
jnp
enter
add
jg
cmp
in
xchg
rcl
jmp
outs
push
add
xchg
sub
je
push
mov
mov
psrlq
and
and
ret
mov
or
dec
sbb
sub
ffree
mov
add
retf
data16
out
test
jnp
inc
daa
adc
mov
xor
sbb
sub
xchg
xchg
dec
nop
out
sbb
inc
xor
inc
pop
mov
jecxz
sub
shr
loope
jne
loopne
xor
ror
pop
mov
(bad)
sub
inc
je
jl
rcr
movs
not
or
(bad)
mov
shl
out
sbb
dec
add
stos
ss
aad
(bad)
adc
pop
mov
test
mov
xchg
inc
xchg
fs
clc
sbb
aas
cmp
mov
stos
push
leave
sub
jle
test
or
jmp
dec
pop
leave
and
mov
(bad)
stos
mov
xor
adc
inc
mov
rol
inc
sub
xlat
or
fld
mov
fsub
fsub
jnp
test
mov
lahf
xor
inc
adc
push
or
call
xlat
jl
sbb
das
sub
daa
mov
mov
fbstp
xor
push
cld
sbb
push
jbe
shr
push
jge
dec
stos
test
or
and
jo
iret
add
mov
sub
sub
sbb
sbb
mov
xchg
daa
loope
aad
mov
(bad)
mov
ret
inc
xlat
out
ror
out
xchg
test
and
icebp
ror
hlt
cdq
aaa
adc
outs
jl
shl
(bad)
sbb
in
repnz
imul
mov
mov
jecxz
sub
sub
mov
dec
adc
mov
inc
shl
aam
jl
aad
fcmovnu
mov
inc
cmp
inc
jnp
aam
outs
jecxz
sbb
(bad)
aam
pop
in
shl
xchg
stos
(bad)
sti
pop
(bad)
int
xchg
mov
ret
cmp
jo
in
leave
mov
pop
scas
jmp
inc
loopne
cwde
jmp
push
push
xor
inc
dec
aas
xchg
js
movs
push
and
xor
fdiv
loopne
js
outs
cli
push
mov
jbe
or
aaa
icebp
int3
and
(bad)
push
adc
pop
(bad)
and
add
jecxz
std
pushf
outs
sti
cmps
icebp
fsub
cli
mov
push
enter
dec
jecxz
rcr
jo
mov
mov
popa
bound
clc
out
xor
jmp
imul
scas
sbb
xchg
arpl
sbb
sbb
xor
push
test
xchg
loop
mov
repnz
mov
push
aad
adc
add
test
dec
and
or
test
or
adc
mul
js
inc
out
and
sub
or
fldenv
data16
addr16
push
add
and
cmp
movs
rcl
stos
jmp
inc
aam
call
das
mov
inc
loop
je
int
ins
movs
sub
(bad)
cmp
cs
test
ds
paddb
sbb
xchg
mov
xor
push
inc
retf
aas
xchg
(bad)
jb
int3
xchg
mov
outs
retf
lea
push
scas
inc
adc
gs
and
ins
fwait
out
test
inc
popf
mov
sbb
adc
pop
sti
out
out
pop
aam
add
cmp
cmps
out
popa
mov
sub
pop
dec
leave
mov
(bad)
int
fcom
fs
xchg
out
sub
aam
push
test
add
push
inc
pop
mov
cli
in
jne
push
xor
lea
mov
or
jne
pop
shl
mov
dec
out
enter
inc
ins
dec
push
pop
mov
cld
cmps
out
dec
mov
hlt
adc
xor
push
jo
(bad)
mov
mov
mov
jns
gs
loope
lods
sbb
pop
retf
(bad)
popf
xchg
cli
fnstsw
mov
movs
cld
ror
adc
push
lds
jle
mov
xor
sub
ds
test
cli
fwait
lock
jmp
lock
mov
pop
xor
mov
mov
mov
dec
hlt
cmp
ss
(bad)
out
jg
xor
xchg
jle
stc
iret
shl
ja
push
icebp
int3
sbb
xlat
inc
push
mov
dec
xchg
shr
lock
sbb
daa
jae
dec
sub
push
push
mov
cmp
add
mov
cmps
pmaxub
mov
sbb
xlat
ins
xchg
mov
test
push
jle
or
mov
rcl
gs
dec
fild
(bad)
and
add
mov
cld
cld
sahf
idiv
sbb
pop
jbe
rcr
mov
push
mov
popa
pop
add
aad
jge
fmul
popa
xor
push
fwait
mov
ins
lock
retf
push
iret
sub
xor
jge
loopne
jl
loopne
push
mov
gs
nop
jge
and
fist
mov
or
outs
xor
das
int
(bad)
fisttp
ror
mov
out
adc
xlat
arpl
les
mov
jno
cmp
push
mov
(bad)
retf
mov
mov
mov
ficom
mov
enter
pop
inc
(bad)
and
or
sub
in
dec
mov
pusha
retf
and
sti
mov
stc
pop
jg
mov
xor
adc
aam
sbb
jge
jns
ret
xor
mov
aad
add
popa
pushf
retf
lods
dec
inc
add
dec
mov
push
fild
out
adc
pop
and
rcr
(bad)
mov
jle
inc
mov
popa
adc
sbb
into
push
xchg
fadd
int
imul
(bad)
call
jb
pusha
fbld
sub
fdivp
int
imul
inc
outs
cli
lea
or
popa
jno
rol
clc
mov
inc
cmp
fwait
push
aad
jle
addr16
jbe
shl
jle
jnp
hlt
out
imul
mov
in
inc
sbb
cwde
ret
xchg
rol
icebp
addr16
push
repnz
mov
sub
xchg
in
sub
sub
movs
test
sti
repz
sub
adc
inc
mov
mov
add
repz
and
(bad)
adc
not
mov
mov
(bad)
mov
jl
ficom
mov
into
enter
xchg
retf
cmp
not
(bad)
push
pop
cs
in
ss
loope
sahf
push
mov
loopne
xchg
sub
repz
mov
out
ficom
push
js
dec
mov
add
sbb
cs
test
mov
inc
push
xor
(bad)
ret
jl
cmc
iret
cmps
mov
and
fdivr
int3
(bad)
outs
sbb
icebp
push
ja
ret
and
xchg
ins
hlt
inc
mov
popf
sbb
hlt
lds
add
sbb
lahf
(bad)
clc
pushf
(bad)
jnp
push
in
mov
or
test
stos
jne
not
pop
mov
inc
loope
cmps
jo
inc
inc
rol
repz
xlat
cmp
ins
mov
cmp
rsm
add
pop
shl
or
add
or
test
mov
out
hlt
adc
ficomp
push
popa
ds
push
pop
ror
aam
int3
and
pop
out
test
sbb
pusha
pop
neg
outs
daa
stc
push
sub
cmp
(bad)
data16
add
dec
xchg
rol
hlt
inc
mov
cmp
push
pop
int3
test
stc
jmp
(bad)
push
sub
cli
or
dec
or
aam
jbe
nop
sahf
lea
test
or
add
mov
cmp
adc
pop
sbb
movs
mov
sbb
pop
jl
mov
jge
or
xor
aad
in
sahf
mov
iret
test
popa
dec
adc
sub
inc
jg
pop
jmp
fisttp
adc
sbb
cmp
cmps
pop
fisttp
mov
dec
std
retf
sbb
fsubr
add
clc
jle
pop
or
inc
int
sahf
scas
pop
stos
movs
and
and
adc
mov
or
inc
(bad)
arpl
retf
xor
loop
fisttp
ret
cmps
add
jge
xlat
push
sub
mov
jecxz
psrlw
arpl
ret
pop
mov
cld
mov
(bad)
cmc
xlat
dec
push
pop
ret
hlt
mov
jl
add
pop
sbb
inc
data16
push
jp
sbb
and
into
push
hlt
mov
scas
lea
sbb
push
jnp
test
aad
fist
out
xchg
out
push
(bad)
jp
and
xor
jmp
dec
int3
jl
mov
xor
xor
inc
dec
shr
ds
sbb
dec
outs
sub
lods
sub
stos
cmp
add
and
dec
ins
in
or
out
cld
inc
push
adc
cmc
jo
in
mov
jns
ja
movs
pop
sbb
mov
adc
enter
mov
iret
or
mov
mov
push
sbb
xor
ins
xchg
sub
dec
fld
mov
repz
stc
mov
add
(bad)
es
xchg
xchg
cli
sub
add
mov
movs
lds
or
sbb
sub
inc
mov
bound
jmp
mov
jp
inc
jne
dec
popf
stc
or
fs
xchg
push
mov
sbb
fsubr
push
jmp
xor
push
and
xor
adc
out
sub
jle
pop
mov
fdiv
cs
adc
pop
mov
outs
sbb
fstp
sub
add
add
rcr
add
inc
push
or
xor
mov
loop
xchg
or
mov
fdivr
pop
mov
clc
cmp
xor
gs
or
and
clc
mov
js
nop
movs
(bad)
sti
sbb
cmps
movs
(bad)
xor
ret
adc
xor
jb
je
or
sbb
jbe
xchg
inc
cmp
xor
arpl
mov
dec
push
pop
sub
mov
dec
push
fisub
div
repnz
xor
mov
out
sahf
int
mov
pop
cmps
add
jno
jne
cmp
shl
mov
mov
xchg
ins
add
fwait
add
retf
push
retf
popa
iret
adc
xor
call
jo
xchg
aad
mov
shr
repz
add
lods
sub
jae
xchg
xchg
shl
mov
loop
sub
js
sbb
cmps
xchg
lahf
jecxz
sub
mov
test
cmp
mov
push
inc
jb
popa
cmp
in
or
popf
fwait
add
lea
(bad)
jae
xchg
and
ss
repnz
repz
pusha
ror
cmc
enter
lahf
sub
neg
cmps
adc
enter
ret
mov
adc
out
popf
mov
jno
outs
push
and
push
fnstsw
jo
stc
jge
xor
mov
xchg
(bad)
(bad)
repnz
xchg
mov
into
jae
pop
cmc
or
shr
cmps
mov
fsub
mov
imul
(bad)
jbe
adc
scas
(bad)
fidiv
mov
(bad)
or
mov
mov
movs
dec
int3
xchg
pop
test
ins
addr16
(bad)
cmp
adc
test
test
xchg
retf
leave
xchg
jne
ret
or
mov
pop
std
loop
iret
or
(bad)
ins
or
cmp
pop
retf
mov
test
inc
adc
frstor
lods
add
das
movs
sub
sbb
xor
fsub
mov
(bad)
mov
lahf
adc
sbb
cmp
add
aam
or
(bad)
cmp
pop
scas
gs
jmp
jno
retf
push
push
add
xor
test
fisttp
lods
das
cmp
push
lds
fistp
imul
jmp
mov
mov
xor
(bad)
sub
xor
push
out
stos
adc
dec
mov
std
push
or
aaa
cmp
and
sbb
out
or
sbb
mov
aad
or
retf
imul
icebp
mov
imul
int3
or
fimul
cmc
sub
push
fsub
ret
lds
mov
or
lahf
dec
xlat
cmp
arpl
jg
in
jge
out
push
add
mov
and
inc
aad
sar
pop
fdivr
imul
call
push
add
popa
sub
push
push
xor
out
pop
pusha
sub
mov
adc
popa
lods
fdivr
push
icebp
xchg
adc
fstp
fld
test
in
or
aam
xchg
jno
push
not
xor
sahf
mov
mov
gs
push
repnz
shl
sub
xor
popf
xor
mov
les
sub
movs
shl
and
(bad)
imul
stos
mov
outs
mov
ja
adc
shl
add
add
pop
and
ret
sub
loopne
ja
nop
iret
test
xchg
lds
cmp
es
adc
fld
inc
into
pop
(bad)
jae
repz
or
push
cmc
out
iret
and
lahf
mov
(bad)
loope
jns
repz
xchg
cli
out
jecxz
repz
mov
fwait
or
push
mov
add
adc
jae
push
mov
inc
(bad)
mov
in
into
or
retf
int
cmp
mov
jmp
jecxz
movs
sbb
dec
fisub
cld
test
(bad)
scas
clc
sbb
sahf
jge
mov
and
push
(bad)
int
out
lea
loope
sbb
jmp
pop
repz
pusha
movs
stc
inc
adc
retf
enter
add
dec
jbe
jb
mov
(bad)
ss
jnp
pop
pushf
shl
shl
test
lods
push
mov
jg
inc
xor
retf
push
sub
xchg
cli
dec
jmp
cli
imul
cmp
push
int3
sub
and
cmp
aad
enter
dec
aaa
cld
add
dec
int3
rcl
jns
xchg
hlt
push
outs
fcomp
cld
stos
ins
in
cmp
xchg
popa
or
and
inc
sub
xor
and
mov
lods
or
mov
lahf
aaa
call
cmp
pop
jmp
dec
and
and
stos
js
pop
aaa
lea
arpl
and
or
cs
call
and
jo
test
cmp
mov
mov
jo
popf
sub
ror
mov
mov
aad
ds
fcom
in
outs
test
arpl
push
mov
pop
call
pop
pop
inc
in
in
daa
(bad)
push
lods
inc
repnz
imul
aam
dec
call
mov
xchg
mov
stc
xor
inc
cli
cmp
jb
cmp
mul
mov
movs
cmp
les
stos
(bad)
fs
jmp
scas
sbb
out
in
jle
jns
mov
sti
push
mov
ss
clc
data16
clc
icebp
repz
mov
int3
mov
test
and
push
cmp
jmp
add
repnz
lea
sub
movs
stc
xor
or
cmp
push
loopne
inc
bound
xchg
call
push
fdivr
lods
ficomp
jg
fcom
or
out
retf
iret
test
pop
adc
cs
xchg
div
mov
dec
mov
adc
inc
sbb
fsubr
imul
sbb
jbe
outs
cs
jg
repz
mov
fs
nop
fxam
retf
icebp
in
cmp
sbb
xor
shr
idiv
xchg
iret
sub
push
cmc
(bad)
sub
dec
or
cmp
fsubr
aas
xor
cld
mov
ins
or
cmps
sbb
mov
jae
cmp
aad
(bad)
ror
call
mov
sbb
fs
jl
cmc
mov
xor
imul
mov
push
lods
inc
push
xor
mov
jle
je
pop
jne
out
or
jne
mov
pop
shl
cmps
ror
cs
leave
pushf
sbb
shl
js
out
test
dec
mov
sub
rcr
xchg
lds
xchg
les
retf
jne
lahf
call
inc
stos
mov
pop
out
xor
jnp
shl
loop
test
adc
mov
mov
jo
pop
and
mov
(bad)
pop
mov
pushf
cmp
push
sbb
xor
jle
fs
(bad)
mov
pop
imul
lock
dec
fcom
fcmovne
(bad)
hlt
sar
inc
adc
aaa
dec
fdiv
fsubr
fucomip
mov
fldcw
pop
movs
ret
mov
push
and
push
adc
leave
cmps
jecxz
jp
(bad)
inc
movs
mov
cmp
dec
maxps
retf
addr16
mov
gs
enter
xor
or
imul
and
add
mov
psraw
fimul
cdq
pushf
mov
dec
sub
aas
fwait
sub
sbb
cmc
ins
lock
mov
in
add
push
call
sahf
pop
ficomp
cmps
and
fisubr
cmp
sbb
movs
pop
ss
mov
inc
mov
call
mov
ja
js
fld
xchg
aaa
outs
pop
cdq
enter
jge
mov
sub
ins
push
adc
and
pop
and
icebp
mov
stos
mov
add
scas
les
(bad)
addr16
sub
movs
fcmovbe
sub
inc
mov
dec
in
popf
xlat
adc
(bad)
cmp
adc
cmc
push
xchg
dec
shr
push
pusha
sub
mov
adc
sub
add
push
add
push
call
ficomp
pop
stos
cmp
add
inc
mov
xor
aas
(bad)
int3
xchg
not
fidivr
shl
cmp
out
mov
(bad)
jbe
and
je
xchg
out
popa
inc
pusha
and
xor
loop
neg
fisubr
fs
call
imul
adc
int
mov
clc
mov
cmps
retf
(bad)
cli
clc
iret
mov
xchg
mov
loop
ret
ficom
addr16
add
cmps
mov
(bad)
hlt
int
in
pop
push
cdq
xchg
push
xor
cld
jge
xchg
mov
pop
add
mov
or
mov
ret
scas
mov
cmp
movs
mov
xor
inc
jmp
fnsave
add
mov
push
cmp
cmps
test
pop
nop
cmp
mov
push
sub
lods
jg
adc
xor
dec
outs
mov
jb
ret
rcl
nop
lods
aaa
mov
and
jp
daa
push
mov
mov
sbb
jmp
ja
push
loop
dec
or
shrd
call
add
stos
push
jne
dec
jae
fisubr
push
clc
jecxz
cmp
mov
pop
call
cmc
push
add
rcr
cmc
shl
push
(bad)
into
ss
dec
aad
push
jbe
aam
add
pop
clc
fcom
imul
cmc
cdq
push
stc
ficom
xchg
sbb
mov
rcl
jne
mov
sub
enter
data16
es
push
pop
mov
sub
jle
daa
or
mov
adc
leave
jmp
mov
inc
outs
adc
lahf
xor
pusha
mov
dec
ja
sub
call
ds
xchg
stc
psrlq
fisttp
out
inc
iret
dec
cmps
mov
retf
rcl
das
shl
push
and
xchg
test
xor
xor
jl
add
mov
jle
sub
fs
and
xchg
fdivr
and
mov
loopne
mov
fsub
jecxz
inc
jle
lds
mov
sub
add
mul
cmc
mov
mov
repz
arpl
call
pop
mov
(bad)
in
sbb
(bad)
or
jmp
rcl
ins
mov
mov
lock
jge
push
cmps
jmp
loop
les
(bad)
scas
aaa
cmc
sub
dec
stc
call
call
retf
push
jo
inc
pop
mov
rcl
pop
pop
retf
sbb
pop
js
lds
mov
aas
sub
stos
bound
jl
gs
cs
mov
xor
mov
and
xchg
dec
scas
inc
xor
stc
or
sub
add
sbb
imul
push
cs
test
mov
test
(bad)
lods
fs
(bad)
aam
sahf
mov
mov
inc
and
not
mov
mov
aam
idiv
pop
inc
js
int3
lods
push
aad
cmp
faddp
push
xor
imul
mov
add
fiadd
(bad)
add
dec
dec
lock
add
push
fcomp
jmp
xchg
fcom
test
shr
pop
cli
fsub
mul
fwait
out
test
or
mov
call
loop
push
jge
fsubr
std
adc
pushf
mov
sbb
ins
add
call
popa
inc
jns
and
popa
pop
dec
xchg
mov
gs
out
ror
jecxz
add
aaa
add
push
fimul
and
add
mov
sahf
dec
pop
add
out
(bad)
fs
stos
mov
push
jge
stos
or
xchg
mov
lods
outs
sbb
in
outs
(bad)
imul
stos
lds
into
lds
xchg
test
xlat
pop
gs
test
pusha
adc
dec
lea
cmp
iret
xchg
ja
iret
cmp
mov
lahf
retf
test
cmp
and
ret
stc
add
mov
mov
test
jae
sti
movd
cmp
mov
scas
mov
mov
xchg
pop
scas
push
fwait
push
pushf
push
mov
cdq
or
xor
inc
stos
sbb
sub
aaa
leave
(bad)
fwait
mov
mov
outs
outs
cmp
ins
test
jmp
cmp
or
xchg
xor
jg
ss
or
mov
jp
jle
mov
outs
add
mov
fsubrp
pop
outs
iret
in
leave
pop
push
mov
dec
push
mov
add
retf
push
cmps
in
aad
or
xor
xchg
xchg
stos
cmp
cli
mov
jge
mov
mov
rol
add
adc
mov
xor
sbb
dec
sub
jns
pusha
push
jo
psrlq
test
xor
ja
sbb
rcr
sbb
cwde
sbb
jb
sbb
xchg
loop
pop
or
mov
cmp
fisubr
and
mov
repz
lea
xchg
add
pop
inc
sub
pshufw
and
pop
lock
(bad)
cld
cmps
mul
or
movs
push
adc
add
pop
cli
std
repnz
fistp
nop
shl
mov
xchg
xor
fcomp
ins
dec
mov
scas
jae
hlt
jbe
int3
pushf
add
or
pop
jecxz
cmc
and
jg
out
push
aad
pop
lahf
icebp
iret
fs
cld
inc
inc
div
sub
xchg
shl
nop
jb
dec
add
aam
lods
mov
cmp
add
mov
sar
int
dec
loope
mov
inc
mov
mov
mov
push
or
popa
idiv
push
outs
lods
push
sti
lds
mov
and
movs
out
sub
das
or
mov
or
not
add
imul
enter
leave
in
lahf
xchg
dec
test
pop
aad
fist
pop
push
dec
int3
pop
dec
ins
je
stos
mov
jmp
cmp
xchg
or
out
mov
lea
(bad)
gs
sub
dec
cmps
inc
push
not
add
stos
dec
inc
push
or
gs
xchg
loop
leave
imul
pop
xor
push
aaa
mov
aam
and
mov
mov
sbb
rcl
push
pop
fsub
mov
or
mov
pop
cmp
das
mov
inc
push
inc
sub
lods
or
inc
clc
outs
xor
xchg
pop
xchg
add
mov
jae
cmp
iret
cmp
jb
xor
and
or
clc
imul
mov
jmp
loop
shr
sbb
pop
mov
(bad)
sub
xchg
test
stc
(bad)
xchg
add
inc
cs
mov
or
data16
shr
lahf
sti
inc
dec
lds
scas
or
and
mov
and
mov
jnp
ins
adc
dec
test
aas
fcomp
xchg
cmp
or
daa
mov
ret
int
or
xlat
(bad)
push
mov
mov
push
push
outs
and
push
repnz
leave
ins
jecxz
xchg
lods
dec
adc
jb
add
pop
mov
xchg
fisttp
dec
dec
int
inc
xor
cmp
or
mov
sbb
sbb
push
loop
add
push
repnz
ss
sbb
dec
xchg
pop
add
pop
mov
(bad)
retf
xchg
sbb
test
imul
jl
push
les
stos
dec
aam
data16
or
loop
(bad)
out
or
mov
xchg
add
enter
push
xor
popa
pmaxub
sbb
stos
mov
shl
stos
inc
pop
cmps
stos
das
pop
mov
jnp
xor
fst
test
je
(bad)
mov
imul
and
dec
xor
fadd
pop
outs
rcl
add
sub
xchg
mov
dec
push
fistp
xlat
inc
sbb
dec
imul
inc
mov
fstp
add
movs
out
lods
les
fimul
dec
dec
fmul
or
cmp
ds
inc
xor
inc
gs
and
ret
gs
inc
sbb
mov
ja
push
mov
pop
cmp
aam
dec
pop
ret
fadd
push
sbb
bound
adc
dec
loope
leave
leave
inc
loopne
lea
(bad)
jno
xlat
jge
adc
dec
fcomp
push
pop
mov
xchg
mov
mov
pop
div
clc
sti
iret
pop
mov
loopne
sbb
or
repz
jmp
arpl
loop
inc
adc
mov
push
jb
inc
sub
repz
cdq
mov
jb
movs
adc
es
sub
adc
inc
sbb
stos
xchg
mov
sbb
jno
xor
rcl
mov
sbb
xor
loope
int3
fidivr
js
int3
into
adc
fsubr
stc
xchg
shr
jnp
retf
ss
div
imul
pop
repnz
lods
lahf
sbb
jp
jne
outs
mov
ds
mov
fisttp
cmp
add
sbb
dec
pop
hlt
xchg
inc
(bad)
cmp
mov
jmp
mov
into
lods
scas
jle
push
mov
push
xchg
outs
jb
into
xchg
cmp
mov
and
(bad)
pushf
mov
xor
or
sub
push
mul
push
sti
xchg
jle
inc
out
pop
outs
outs
nop
ficom
dec
mov
imul
(bad)
outs
loope
xor
stos
add
cmp
inc
xchg
mov
xor
inc
ds
cmp
sub
sbb
int
inc
int3
or
xchg
lea
jo
int
lods
test
fistp
pop
and
push
(bad)
xchg
stc
or
mov
int
fcom
adc
mov
mov
cmp
xchg
punpcklbw
popf
inc
sub
mov
or
xor
xor
out
icebp
mov
inc
jno
lods
mov
gs
push
repnz
pop
test
in
xlat
sbb
mov
adc
pop
push
xlat
repz
push
xor
add
xchg
sar
dec
and
xor
inc
adc
popf
or
push
mov
daa
in
add
das
mov
adc
sub
add
adc
cmp
cwde
ss
arpl
cmp
pop
add
arpl
dec
cmp
lahf
pushf
adc
xlat
dec
sbb
mov
adc
pop
iret
push
repz
mov
adc
fmul
jg
call
test
dec
test
fstp
pop
pop
xchg
push
jo
pop
ds
repnz
sbb
pop
add
repz
xchg
or
fisttp
scas
pop
(bad)
sti
mov
icebp
not
jnp
loopne
mov
lods
mov
(bad)
push
push
sub
and
pop
xchg
sbb
fcmove
dec
adc
imul
push
pushf
std
cmc
sub
(bad)
cwde
in
jno
cwde
pop
mov
push
jno
jmp
(bad)
jb
xor
xchg
in
cmp
in
sbb
pusha
sbb
cmp
push
adc
jmp
sbb
les
(bad)
lds
push
test
lock
xor
stos
aam
jnp
loopne
sbb
out
ins
ins
dec
jmp
and
test
mov
ds
jnp
push
push
mov
cmp
pop
push
les
jns
inc
xlat
int
sbb
imul
jl
jg
iret
ds
push
xchg
call
addr16
leave
and
adc
mov
sub
fdivr
std
sub
push
push
iret
imul
adc
add
nop
in
ins
pop
sub
sbb
and
inc
ja
jno
push
mov
pop
pop
add
or
xchg
ja
fidivr
sub
pop
je
gs
xchg
and
sbb
into
rol
pop
cli
mov
inc
pop
xchg
sub
mov
mov
iret
jmp
push
mov
inc
or
ss
pop
lahf
movs
pop
mov
adc
fmul
repz
mov
mov
cmp
inc
jg
pop
popf
bound
inc
mov
pop
dec
add
jo
aam
dec
aad
shl
adc
pusha
jle
es
outs
and
dec
xor
arpl
dec
cmp
xchg
pusha
fcmovnbe
inc
or
dec
and
pop
stos
es
aas
and
movs
adc
push
dec
ins
(bad)
sbb
inc
repnz
mov
push
xchg
arpl
(bad)
fsubr
jl
pop
test
push
push
cmps
fistp
mov
mov
mov
lods
mov
sbb
jnp
dec
in
mov
cmps
stos
loopne
clc
sahf
cmp
mov
pop
xchg
(bad)
fnsave
out
fnclex
aas
fbld
out
push
(bad)
jp
sub
add
dec
aaa
rcr
dec
xor
push
sbb
cmps
and
out
push
ror
bound
jecxz
xchg
js
dec
xor
int
retf
and
push
pop
adc
push
sub
movs
mov
mov
int3
mov
xchg
sub
daa
jmp
mov
loop
or
xchg
or
push
test
jecxz
xchg
hlt
mov
rol
xor
fcomp
call
push
jne
xchg
pop
pop
les
dec
mov
pop
inc
test
xchg
sbb
push
mov
repnz
js
cmp
add
mov
stos
call
sub
rol
fst
shr
cmc
popa
cmps
fist
in
mov
sub
(bad)
(bad)
sub
jbe
cmp
rcl
adc
stos
pop
inc
pop
mov
int3
stc
aam
mov
pop
repnz
stos
into
cmc
inc
aas
and
cmovp
test
les
imul
div
sbb
pusha
xchg
cli
adc
lock
(bad)
pop
sub
std
pop
and
es
xchg
add
daa
or
pop
cmp
(bad)
mov
ins
xchg
dec
adc
adc
jge
and
(bad)
in
mov
imul
test
(bad)
test
cdq
(bad)
and
mov
mov
pusha
cmp
outs
sti
stos
les
lods
pop
add
int
ins
xchg
xor
ins
mov
sbb
or
adc
into
adc
test
retf
fld
and
lds
mov
sub
retf
xor
(bad)
js
ja
xor
jbe
adc
push
ret
pop
sbb
sbb
adc
pop
hlt
mov
(bad)
mov
push
mov
movs
push
jp
mov
(bad)
jmp
cmp
cmps
test
jmp
je
and
xor
mov
cwde
fidivr
mov
mov
data16
(bad)
ror
sbb
push
sub
jae
(bad)
and
xchg
mov
inc
jns
sti
retf
popa
cmp
xchg
pushf
(bad)
cmp
fst
add
clc
xlat
test
add
mov
pop
cli
inc
ja
sti
adc
mov
xchg
pop
das
adc
or
sbb
ror
pop
scas
inc
and
aam
test
sbb
mov
mov
xchg
dec
loope
sub
cmps
sbb
ret
pop
aam
(bad)
iret
xor
cmp
lea
cmp
and
or
(bad)
xchg
loop
dec
out
cmps
dec
mov
dec
adc
cdq
jnp
cmp
in
stos
(bad)
xchg
pop
or
ss
imul
sub
xchg
lea
or
cmps
repnz
fstp
xor
push
pop
pop
sub
iret
call
idiv
xchg
jle
and
ret
xlat
xchg
pop
pop
mov
mov
(bad)
out
outs
and
fbstp
adc
in
in
stos
jg
xor
jecxz
(bad)
mov
cmp
dec
mov
sbb
shl
jmp
cld
in
adc
in
xchg
fsub
or
add
sti
inc
and
and
or
xor
retf
mul
out
gs
push
fsubrp
int
jg
or
add
loop
push
in
push
stc
outs
lods
xchg
adc
sub
jbe
bound
inc
add
sub
mov
pop
inc
fimul
adc
adc
int3
inc
enter
sbb
call
pop
in
or
xchg
or
cmps
dec
mov
cmc
cli
mov
sub
fcmove
dec
pop
jmp
xor
gs
lods
loopne
push
xor
adc
mov
jmp
sbb
xor
mov
add
pop
mov
xchg
dec
and
push
push
and
aaa
push
mov
aad
popf
(bad)
imul
sbb
xchg
mov
cld
xchg
in
push
or
jmp
jmp
push
mov
push
xchg
repz
jg
inc
pop
xchg
movs
push
jl
clc
dec
mov
repz
rcr
outs
cli
fnop
jo
inc
and
std
push
dec
cmpordps
jne
push
addr16
jle
jae
inc
adc
lahf
sahf
and
sub
sbb
lahf
adc
jno
mov
iret
(bad)
jecxz
ss
outs
cmp
xor
dec
ss
pop
add
or
pop
push
cmp
sub
mov
push
fmul
pop
nop
movs
and
fwait
out
dec
xchg
(bad)
sub
sub
xlat
fwait
mov
and
retf
test
or
icebp
idiv
ins
xchg
sub
adc
cmp
(bad)
cs
and
int
adc
ins
inc
ret
stos
push
sbb
sbb
mov
jbe
xor
fcom
or
data16
test
jp
or
dec
sahf
fisub
mov
add
outs
jecxz
mov
scas
add
arpl
cs
and
fsub
dec
je
mov
and
dec
lds
aam
out
cmp
mov
xor
aas
shl
jne
test
movs
repz
mov
retf
out
pop
cwde
int
jp
enter
div
inc
pop
jno
loope
leave
pop
sti
cmp
jmp
test
sub
and
inc
xlat
test
test
jae
fimul
cld
or
std
xor
adc
jns
cmc
fld
mov
test
sbb
sti
inc
jle
or
daa
mov
int3
push
add
popa
push
dec
jge
out
lods
mov
xchg
push
jb
lea
adc
outs
inc
jno
gs
call
mov
adc
inc
fisttp
mov
xor
or
in
(bad)
cmp
xchg
data16
pop
shl
js
int3
(bad)
leave
rol
lods
pop
jns
(bad)
ror
sbb
sahf
xchg
inc
in
jns
pop
aas
mov
loopne
fisttp
out
dec
cmp
repz
push
mov
sbb
mov
dec
popf
mov
js
imul
sti
repz
mov
in
mov
iret
cmps
pop
cmp
sbb
add
jmp
dec
jecxz
add
dec
xchg
loopne
loop
jno
push
aas
(bad)
push
lods
mov
xor
or
inc
movs
pop
shr
(bad)
xchg
xchg
and
or
add
das
int3
aam
push
std
mov
scas
mov
adc
test
ins
sbb
jne
repz
jno
cmp
add
cmps
nop
xchg
call
xor
in
(bad)
jnp
in
cmp
dec
xchg
add
out
cmp
sbb
mov
into
sbb
pop
(bad)
mov
js
clc
ret
sub
mov
xchg
movs
mov
xlat
out
rcr
imul
shr
pop
cwde
popf
and
mov
xor
int
cdq
inc
push
mov
xchg
ret
jnp
push
mov
pop
add
loop
jge
and
movs
stos
mov
es
sub
xchg
(bad)
jns
push
xor
int
mov
xor
push
or
repz
or
pop
push
mov
pusha
mov
fnstcw
pop
xlat
xor
or
iret
adc
adc
shl
jge
cdq
cdq
cmp
test
stos
scas
ins
sahf
nop
nop
and
mov
fdiv
dec
mov
or
mov
jmp
push
js
fwait
sub
(bad)
cmp
inc
jge
add
(bad)
cmp
push
or
dec
test
pop
push
fisttp
daa
add
outs
addr16
shr
add
repnz
push
mov
pop
ins
shr
jno
add
loope
retf
out
test
adc
out
movs
movs
sub
dec
bound
mov
pop
dec
mov
(bad)
idiv
daa
jae
xchg
out
jmp
adc
or
out
cmps
push
int
adc
dec
xor
bound
sbb
sub
pop
mov
rcl
inc
pop
push
cmps
outs
xor
sub
mul
sub
and
fs
sbb
push
test
test
sbb
sahf
dec
dec
loop
pop
or
jb
xchg
jae
mov
and
adc
mov
jge
adc
shr
add
not
retf
mov
mov
xchg
and
sbb
add
call
mov
push
ret
in
stos
sub
mov
jmp
cld
mov
xchg
push
in
mov
mov
cld
popf
jmp
and
ficom
(bad)
mov
mov
dec
(bad)
aas
jne
dec
lods
in
mov
sub
stos
inc
cdq
add
(bad)
adc
outs
or
mov
sbb
aas
je
outs
lock
jg
js
in
cs
dec
jp
xchg
dec
xor
push
mov
inc
sbb
adc
mov
hlt
(bad)
pop
jo
dec
cmp
fisubr
lea
lods
and
mov
push
call
test
loopne
nop
(bad)
outs
pop
xchg
mov
js
clc
jne
push
mov
and
dec
aad
push
pop
enter
xlat
call
mov
sbb
jnp
inc
push
sti
and
adc
idiv
stc
mov
xchg
mov
call
cdq
xor
retf
inc
xchg
in
(bad)
test
pop
lea
xchg
lods
es
pop
sbb
xchg
in
sub
es
icebp
out
cmps
xchg
or
and
or
or
mov
xor
fdiv
in
push
fiadd
mov
fnstsw
mov
fidiv
cmps
es
addr16
aaa
jb
loopne
movs
sbb
adc
loopne
dec
(bad)
stc
js
xor
xchg
in
cmps
mov
je
inc
fist
jmp
push
cmp
aaa
outs
mov
push
repz
in
add
jo
test
sub
adc
jmp
mov
shl
add
inc
fwait
outs
mov
mov
pop
or
sbb
mov
mov
ins
xchg
jp
pop
rcr
out
add
jne
(bad)
xor
jl
lahf
jne
push
sbb
adc
(bad)
push
dec
xchg
sub
adc
ficomp
pop
rol
mov
inc
idiv
pusha
cmp
ds
ins
fld
sbb
mov
cli
jns
push
and
inc
sub
(bad)
mov
fimul
jmp
shl
mov
jle
mov
ss
cmp
pop
cwde
sti
mov
mov
xor
sub
jo
out
push
jnp
jns
dec
xor
or
in
pop
cmc
shl
ffreep
inc
inc
inc
loope
cmp
in
je
neg
lahf
leave
repnz
idiv
xchg
movs
stc
(bad)
sub
jb
mov
daa
mov
ficomp
neg
push
movs
cmp
push
mov
sub
push
push
dec
xchg
add
cmps
push
loopne
jnp
pop
mov
sub
add
and
xlat
jo
ret
fwait
loope
pop
xor
hlt
les
enter
pop
in
fsubr
mov
cmp
mov
mov
jnp
movs
mul
sub
jmp
or
push
mov
repnz
mov
mov
cmp
jnp
stos
xchg
lea
xor
jmp
adc
mov
and
and
sub
xchg
xchg
iret
xchg
pop
icebp
jmp
rcl
fimul
repz
cdq
test
int3
xchg
jge
jb
sbb
fld
jbe
xchg
cmp
dec
or
and
push
push
mov
sub
fisubr
cmp
and
jl
inc
dec
cs
xchg
adc
popa
fst
mov
in
retf
xchg
in
retf
and
mov
add
cmp
cwde
add
icebp
add
out
mov
sahf
and
leave
xor
out
ja
aad
sub
outs
add
jg
ja
adc
mov
jb
and
lahf
int
sbb
add
sbb
pop
faddp
stos
mov
cdq
dec
sbb
dec
stos
push
cli
lea
cmp
inc
dec
test
push
(bad)
ins
nop
sub
test
pop
ins
gs
lahf
inc
mov
cmp
sub
outs
or
xchg
leave
inc
pop
sbb
pop
shl
jl
xor
repnz
cmp
inc
inc
imul
mov
add
imul
rcr
rdmsr
xor
ror
and
sub
icebp
inc
add
rcl
push
adc
arpl
dec
test
aad
data16
mov
xor
mov
stos
cmp
xchg
jo
pop
inc
js
imul
popa
out
scas
in
ss
mov
sahf
cmp
push
bound
adc
xchg
mov
inc
dec
mov
sbb
adc
cmp
xor
mov
add
dec
xchg
jmp
cmp
add
xchg
dec
jb
sbb
adc
dec
cs
mov
ja
mov
ins
adc
mov
inc
inc
inc
push
out
or
xchg
shl
leave
pmullw
addr16
nop
mov
not
xor
inc
ret
cmp
call
adc
xlat
cmp
in
call
push
mov
dec
or
rcr
mov
inc
shr
add
stc
icebp
push
loopne
in
adc
xor
daa
push
push
mov
fiadd
sbb
ds
or
mov
test
jmp
in
sub
or
(bad)
addr16
loope
idiv
daa
jle
add
mov
mov
inc
inc
call
aam
js
mov
scas
bound
aas
and
or
sbb
in
jmp
and
mov
hlt
push
call
cdq
cdq
jnp
sub
xor
out
ret
or
out
cmp
fidivr
sub
sbb
sbb
mov
sti
arpl
pop
cwde
ror
(bad)
mov
call
add
cmps
ins
movs
shl
cld
retf
jle
mov
jne
inc
fidiv
mov
mov
inc
scas
xchg
pop
mov
loopne
fst
cwde
mov
mov
aaa
cmp
mov
cs
int3
jmp
les
imul
and
dec
pop
sub
pop
dec
or
pusha
mov
inc
pop
(bad)
xchg
pop
imul
das
and
aad
mov
(bad)
enter
or
icebp
outs
mov
dec
scas
xlat
adc
(bad)
jmp
jnp
mov
xchg
mov
cmps
add
mov
mov
test
adc
fisttp
loop
mov
call
das
mov
cmps
mov
add
push
jmp
call
mov
adc
mov
ds
imul
nop
js
fld
(bad)
xchg
icebp
in
mov
and
cwde
imul
jecxz
sbb
push
sbb
out
retf
rol
pop
xchg
push
mov
inc
gs
ret
xor
loope
(bad)
movs
pop
or
adc
(bad)
aad
nop
cmps
push
scas
test
imul
xchg
inc
out
push
std
xlat
fsubp
data16
cmps
repz
adc
sub
out
cmp
leave
shl
pop
mov
inc
mov
sbb
inc
out
mov
scas
stos
ins
xor
mov
cwde
dec
stc
call
iret
push
mov
pop
rol
stos
dec
jb
mov
push
dec
(bad)
mov
imul
inc
and
cmp
inc
jne
sbb
mov
cli
scas
(bad)
sahf
das
sbb
std
shl
pushf
sbb
sbb
pusha
aaa
add
cli
cmp
sub
jg
jnp
mov
push
cdq
ins
movs
stc
stos
shl
cmp
int3
mov
jmp
jae
jnp
aad
ja
repz
scas
adc
sbb
bnd
inc
jmp
lock
add
jge
mov
repnz
mov
ja
and
rcr
lods
dec
or
pusha
call
sub
pop
cld
fsub
mov
in
test
cmp
in
sub
ja
ins
out
fs
loopne
in
inc
enter
jmp
iret
push
repz
add
test
in
push
mov
icebp
and
retf
mov
fnstcw
push
rcl
push
adc
movs
jmp
pop
sbb
sahf
mov
stos
xchg
daa
sbb
and
out
out
xchg
inc
sub
jle
loopne
aaa
add
sub
sahf
rcl
adc
aas
cdq
rcr
mov
xchg
inc
iret
retf
and
dec
dec
xor
or
sub
lea
inc
and
mov
mov
pop
nop
sub
sub
imul
add
repnz
jb
or
test
sbb
jle
bound
cmp
xor
mov
enter
add
push
(bad)
xchg
or
sub
pop
pop
mov
cdq
out
in
leave
jns
jb
xor
adc
out
ret
repnz
xchg
fsubr
scas
jae
stos
hlt
(bad)
fwait
mov
out
loop
sar
jecxz
jge
push
pop
test
adc
daa
shr
std
out
sub
dec
repz
push
imul
jle
(bad)
out
cld
popf
and
leave
int
(bad)
in
inc
mov
and
das
pop
and
fucomi
pop
pop
cmps
addr16
or
mov
mov
cs
push
mov
int
dec
out
dec
xchg
loopne
frstor
mov
pusha
leave
repnz
inc
xor
popa
jns
inc
cwde
mov
xchg
aas
fldcw
pusha
int3
and
mov
jmp
sbb
ss
cs
add
or
cmp
mov
pop
rcr
(bad)
mov
out
gs
call
and
movs
mov
adc
aad
ja
aam
lahf
push
call
lds
add
jp
popa
mov
dec
push
iret
jne
fwait
mov
popf
inc
(bad)
and
or
and
cmp
push
dec
inc
int3
mov
add
in
jmp
imul
dec
mov
add
or
pop
sbb
retf
fdiv
push
adc
(bad)
mov
bts
and
sar
sub
mov
inc
pop
clc
aas
pop
sbb
xchg
js
adc
ins
mov
fmul
sub
retf
addr16
jl
xor
push
sub
cwde
or
pop
inc
pop
loope
cdq
sbb
mov
or
repz
imul
pop
shl
mov
ins
ja
mov
mov
mov
inc
shl
stc
mov
imul
add
popa
sub
xchg
cmp
pop
and
adc
stos
jmp
and
test
sub
pop
cmp
xchg
mov
mov
in
cld
adc
nop
push
scas
(bad)
pop
xor
jae
jg
or
mov
icebp
jecxz
xchg
push
out
and
(bad)
push
popf
lahf
fwait
es
add
or
jo
mov
mov
inc
jge
sbb
dec
sbb
ror
adc
das
pop
adc
dec
mov
mov
call
jb
push
cmp
dec
xlat
std
push
sub
or
pop
fistp
outs
add
add
jmp
xchg
mov
test
dec
adc
scas
addr16
xchg
xor
jae
xchg
imul
mov
je
xchg
jns
int3
in
cli
or
and
push
(bad)
hlt
lea
call
int
inc
in
aam
imul
add
push
cwde
in
jno
fimul
int
push
shr
rcl
jp
add
mov
out
adc
and
(bad)
fild
mov
je
xor
scas
xor
cmp
pop
mov
mov
mov
jne
movs
stos
loopne
add
pop
adc
mov
adc
pushf
xchg
repz
xor
adc
pop
push
inc
jns
iret
daa
ficom
clc
jecxz
adc
jmp
sbb
mov
je
push
loopne
test
inc
(bad)
lods
cwde
pop
mov
(bad)
cdq
idiv
cmp
lahf
xor
sbb
je
popf
fisub
xchg
push
mov
pop
jg
and
retf
pop
mov
ret
sti
mov
mov
fld
js
sahf
mov
jge
dec
dec
cli
outs
and
or
or
adc
mov
js
cs
fdecstp
or
ret
mov
mov
inc
(bad)
adc
adc
inc
mov
loop
and
add
add
mul
and
mov
test
adc
movs
sbb
fwait
push
lock
loope
mov
cmp
xor
in
aas
mov
fbld
mov
icebp
sbb
call
xchg
xor
test
inc
cmps
xchg
xor
xchg
dec
clc
xchg
push
(bad)
mov
adc
cmp
mov
sbb
hlt
inc
dec
push
or
dec
retf
mov
add
mov
and
(bad)
mov
pop
(bad)
mov
ins
mov
sub
dec
je
mov
out
jl
(bad)
inc
and
mov
pop
push
mov
mov
push
push
stc
xor
sub
ds
inc
inc
or
inc
clc
(bad)
and
sbb
push
push
das
xor
lea
shr
rol
cmps
mov
push
repnz
jecxz
or
pop
dec
out
inc
in
addr16
popf
cdq
push
out
ss
outs
cmps
pop
(bad)
call
sti
xchg
frstor
jle
and
mov
pop
or
stos
les
xlat
push
jnp
repnz
out
xchg
mov
(bad)
call
push
pcmpeqd
fld
sub
test
mov
cdq
(bad)
test
sbb
jns
pop
or
mov
jns
call
sub
cld
jmp
push
mov
mov
sbb
out
sub
aam
pop
push
sbb
mov
jbe
mov
and
jne
mov
cmp
les
jmp
jg
xor
movs
pop
sub
cdq
and
cmp
aam
das
repnz
pop
out
fdiv
dec
int3
(bad)
call
frstor
movs
jbe
fbstp
inc
int3
jb
mov
jo
xchg
test
ins
push
out
icebp
inc
mov
cld
std
aam
stc
(bad)
out
inc
add
mov
mov
rcl
jns
pop
cld
mul
jb
jp
test
scas
or
(bad)
ds
les
ds
movs
dec
imul
js
ins
in
das
data16
fistp
mov
pop
inc
stos
test
mov
pop
(bad)
push
jp
mov
shl
and
int
mov
cmc
test
jmp
adc
add
jae
inc
push
mov
xchg
enter
repz
popa
out
xor
js
inc
push
push
mov
push
outs
xor
jmp
popa
out
or
js
popa
aad
aad
mov
sar
xor
mov
adc
pop
fbld
xlat
pushf
pop
dec
sahf
xor
inc
or
ficomp
mov
pop
mov
pop
ror
xor
mov
out
and
test
addr16
shr
stos
xor
jg
mov
cli
mov
arpl
fs
call
mov
ret
or
mov
inc
push
repz
movs
leave
cmps
mov
or
es
imul
mul
adc
and
test
dec
pusha
nop
jp
jae
mov
daa
bound
add
lds
iret
push
and
cld
lea
loop
cmps
sbb
repz
stos
pop
adc
add
jle
pop
retf
imul
or
es
fwait
mov
stos
mov
rcl
sbb
mov
add
xlat
into
loope
push
push
push
pop
pop
mov
pushf
push
pop
ins
cmp
inc
inc
bnd
scas
(bad)
les
mov
js
pop
sub
mov
cmp
adc
mov
repnz
push
outs
loop
cli
aaa
out
gs
dec
test
std
call
cdq
jb
xor
pop
into
es
cdq
(bad)
pop
ja
out
inc
sbb
out
test
aas
dec
popf
call
into
(bad)
adc
das
rcl
clc
jmp
xchg
nop
or
out
shl
ja
fild
fisttp
cmp
mov
inc
or
pop
mov
mov
push
xor
sbb
ins
fistp
(bad)
imul
fs
call
or
mov
cmc
std
or
loopne
sbb
movnti
adc
lock
dec
sahf
imul
cmps
sub
sub
fldcw
xor
scas
stos
stos
cli
sbb
lahf
call
pop
sar
jge
inc
sar
fldcw
call
jbe
adc
je
movs
xor
mov
ror
fs
repnz
adc
fcmovbe
or
repnz
jle
fucomp
xor
fidiv
dec
push
add
out
inc
repz
lods
ja
imul
or
mov
dec
and
sub
push
mov
cmp
mov
cmps
sbb
fcmovb
dec
(bad)
into
jmp
inc
adc
xor
pop
ret
xchg
mov
cmp
push
pop
inc
xor
mov
adc
jge
das
ficomp
mov
icebp
cmc
pop
test
inc
imul
int3
pop
cmp
es
mov
cmc
push
mov
lea
fidiv
adc
icebp
popf
push
jmp
neg
mov
jmp
cld
outs
push
add
jno
shr
dec
cmp
adc
ins
jbe
mov
mov
mov
js
test
jns
push
les
push
adc
iret
jp
lods
cmps
call
aad
xlat
sbb
ds
adc
inc
loopne
jp
ret
outs
sbb
push
loopne
cmp
pop
retf
add
sbb
and
or
fild
jnp
mov
xlat
dec
sbb
push
imul
pop
mov
test
add
sbb
cdq
or
rcr
mov
mov
xor
sbb
sub
or
cmp
arpl
fmul
aas
mov
dec
and
stos
(bad)
and
add
mov
inc
adc
mov
mov
inc
leave
scas
xchg
loop
xchg
call
sub
iret
in
mov
test
out
mov
in
repz
fs
sub
lea
xor
ja
sahf
pop
enter
mov
std
iret
pop
hlt
aad
pop
call
lds
in
es
or
fcom
and
movs
stos
icebp
shl
js
pop
mov
add
loopne
xor
gs
mov
icebp
sbb
shl
lds
add
xchg
les
fprem1
fidiv
jl
out
sub
nop
aaa
mov
std
xchg
mov
pop
add
loopne
adc
jp
scas
sub
mov
out
fstp
jae
test
jmp
fnstsw
add
mov
push
sahf
(bad)
push
lock
scas
jo
mov
inc
popa
adc
dec
mov
jae
inc
sub
and
push
cwde
ret
daa
lds
push
ror
(bad)
fprem
nop
sbb
inc
into
push
jo
call
xor
inc
lock
add
xor
jns
cmps
push
cmp
mov
jno
jbe
ficom
pop
rol
int3
inc
mov
dec
xor
mov
pop
inc
jbe
adc
push
inc
test
pop
(bad)
adc
sbb
mov
xor
add
xchg
(bad)
sbb
popa
mov
cmps
int
std
lea
and
and
ja
push
outs
test
mov
mov
js
mov
hlt
cmp
mov
shld
gs
mov
in
or
mov
in
retf
in
mov
(bad)
out
fmul
mov
or
pop
in
mov
xchg
retf
out
inc
test
sahf
stc
jne
ins
in
jle
(bad)
ret
les
push
repz
out
aas
sub
sub
fcmovb
out
pusha
clc
push
mov
jmpw
jmp
jno
jnp
xchg
cmps
inc
in
movs
lods
imul
mov
scas
leave
out
cmc
add
sbb
movs
fwait
cmp
jle
ja
xor
test
xchg
cwde
arpl
dec
retf
mov
cmp
pusha
cwde
jle
lods
pop
xlat
cmp
jo
cs
dec
scas
pop
push
aam
stos
mov
les
ror
dec
sub
ror
nop
data16
mov
xchg
dec
jle
mov
jecxz
cmp
imul
xor
pushf
jb
movs
adc
or
add
sbb
xchg
cwde
and
push
(bad)
loope
xchg
shl
in
jecxz
dec
seto
jge
sti
push
nop
jnp
pop
(bad)
stc
mov
dec
cmp
pop
lods
ror
mov
jmp
fst
xchg
dec
inc
mov
and
mov
pusha
or
dec
pop
push
push
iret
cmps
jle
outs
dec
xchg
pushf
mov
sbb
lods
mov
lock
cmp
lds
mov
mov
xor
pop
push
cmp
pop
imul
mov
ins
mov
adc
jno
(bad)
call
mov
cld
mov
sub
mov
cdq
movs
in
xor
xlat
adc
pop
add
mov
xor
out
fisub
mov
daa
arpl
scas
jle
pop
mov
pop
aas
aam
dec
inc
out
popa
lahf
or
xchg
jb
or
or
ins
std
mov
std
pop
leave
jo
and
test
test
ss
or
add
ror
call
push
dec
arpl
movs
and
xlat
test
jle
mov
inc
xchg
sub
(bad)
aam
xchg
inc
adc
imul
xchg
or
int3
inc
mov
add
sub
xchg
xor
mov
or
mov
or
sbb
stos
push
cld
out
sbb
add
(bad)
repz
gs
adc
jmp
daa
outs
mov
ret
dec
aas
xchg
ficomp
jle
out
inc
adc
push
inc
inc
mov
clc
or
inc
stos
lods
sub
dec
cmp
add
fs
push
inc
or
int3
and
and
dec
mov
sahf
test
jmp
mov
call
popf
rcr
push
js
add
mov
mov
(bad)
xor
aaa
data16
mov
dec
loopne
test
xchg
push
mov
sbb
aaa
dec
and
cmp
cmp
or
fwait
pop
bound
ja
in
cmps
jne
add
mov
inc
adc
or
shr
mov
or
mov
or
outs
pop
into
mov
in
leave
in
pop
je
sahf
in
inc
jmp
pop
(bad)
fxch
loop
or
jb
mov
cmp
and
jmp
sbb
jl
sub
stos
add
mov
repnz
add
push
and
mov
inc
xor
sbb
or
cmp
pop
ror
mov
mov
pushf
xor
and
xchg
js
popa
mov
fisttp
popa
sub
xor
cmp
aad
ja
pop
cmp
ins
aam
xor
pushf
out
mov
dec
and
mov
call
ja
lock
mov
ja
xor
xor
mov
enter
ss
loop
jb
aas
fld
push
xchg
jo
ror
gs
cmp
icebp
lock
jns
out
ds
gs
into
pop
mov
fidivr
loop
mov
xchg
mov
fild
dec
je
(bad)
popa
cwde
sbb
dec
div
jge
inc
cld
pop
loope
ror
(bad)
repz
(bad)
loop
out
setle
mov
in
pop
jo
mov
(bad)
outs
int
repz
(bad)
fmul
leave
std
xchg
adc
pop
pop
mov
test
jmp
loop
in
adc
adc
jns
cli
adc
(bad)
js
idiv
jb
arpl
and
nop
sti
fimul
dec
das
mov
shr
scas
mov
pop
pop
es
mov
mov
dec
pusha
xlat
sbb
dec
xchg
loope
and
push
adc
imul
pop
(bad)
ror
(bad)
sub
clc
(bad)
pop
iret
into
push
cli
cmp
mov
rcl
dec
mov
xor
mov
add
xlat
add
adc
sub
inc
xchg
nop
sub
sub
movs
fidiv
mov
movs
les
iret
test
in
pusha
(bad)
and
pop
inc
nop
jbe
jp
pop
jno
add
and
mov
fisubr
push
cmp
outs
sub
sbb
push
xor
pushf
cmp
jp
dec
xchg
add
cmc
add
repnz
in
jb
sub
jp
cmc
sub
xchg
or
imul
xlat
xor
andps
push
adc
cdq
aad
or
stc
fs
push
mov
imul
mov
pop
and
retf
add
out
scas
dec
outs
movs
sub
jge
push
mov
inc
and
add
mov
and
pop
jg
ins
enter
sti
adc
mov
scas
mov
xchg
aad
cli
xchg
popf
jno
stc
aas
xor
mov
mov
sbb
push
add
or
test
inc
imul
rcr
sbb
hlt
(bad)
mov
aaa
ins
pop
pop
leave
mov
fldcw
adc
adc
push
rol
sti
(bad)
jecxz
sbb
lods
ret
enter
(bad)
jne
jae
jne
clc
sbb
inc
fisttp
frstor
out
push
pop
sbb
ret
jo
dec
shr
rcr
(bad)
jmp
mov
mov
push
and
ret
scas
add
mov
ja
jl
scas
mov
inc
aaa
lods
clc
cmc
inc
pop
mov
mov
sti
inc
inc
mul
push
mov
push
mov
call
mov
and
mov
aam
scas
push
sbb
loope
jno
sbb
idiv
retf
es
sub
loopne
xchg
ja
jmp
jmp
push
jne
fistp
inc
out
outs
cmp
daa
add
out
mov
fidiv
imul
push
repz
mov
sbb
cmp
ins
sbb
out
jmp
cdq
scas
adc
lock
test
call
jmp
add
push
push
inc
push
inc
rcr
dec
or
je
or
shl
mov
loopne
ret
imul
and
jne
push
lods
out
push
and
push
dec
adc
jmp
xchg
push
pop
ja
sub
fdivr
jecxz
xor
dec
scas
inc
test
retf
test
cmp
sbb
mov
push
push
fcomp
loop
(bad)
xchg
xlat
inc
imul
scas
inc
mov
xor
pop
or
xlat
test
sub
fstp
retf
xor
(bad)
into
jmp
xor
mov
add
mov
mov
js
stc
xchg
out
dec
pushf
jnp
add
jbe
add
sub
push
xchg
pusha
sub
in
pusha
xchg
das
fnstsw
ins
cmp
test
mov
stc
stos
or
loop
mov
or
fist
mov
je
adc
scas
mov
xchg
call
loope
lea
jo
fisub
cmp
fsubr
push
lods
pusha
xchg
xchg
stc
retf
mov
cmp
push
stos
fld
xchg
sti
mov
in
lahf
out
cmps
std
or
call
movs
bound
cmp
mov
in
add
jg
xor
mov
test
cwde
pop
stos
mov
push
jns
sbb
retf
ins
pop
gs
sub
sub
cmp
pop
or
ss
adc
push
sbb
or
pop
out
push
ror
mov
loope
jnp
mov
idiv
cs
jp
mov
push
sbb
cmp
jae
xchg
push
jmp
xor
mov
out
cli
push
mov
jnp
ins
or
mov
fsubrp
(bad)
stos
pop
xchg
xor
inc
inc
mov
fstp
dec
jae
xchg
push
push
sbb
mov
adc
nop
sar
outs
sub
inc
sbb
aas
jmp
mov
imul
sbb
push
mov
std
sub
(bad)
cmp
call
pop
jmp
or
loope
and
loopne
jge
xlat
clc
loop
mov
adc
jmp
bound
sbb
sbb
retf
je
sbb
pop
addr16
loope
gs
and
pop
fwait
ins
adc
jecxz
pusha
pop
loopne
je
lods
(bad)
cld
fistp
inc
push
(bad)
ins
lods
(bad)
lahf
mov
sub
test
in
inc
ret
fidiv
test
(bad)
test
xor
xor
fsubr
dec
sub
scas
ja
aam
pop
push
dec
ins
and
xchg
add
sti
cmp
push
add
push
std
add
sbb
cmp
sub
mov
ret
test
js
adc
pushf
sar
xchg
push
push
mov
ficomp
ja
pop
add
outs
hlt
add
jge
pusha
add
lock
out
xchg
mov
stos
push
pusha
stos
gs
dec
dec
jp
aam
mov
sbb
pop
fs
aad
int3
jmp
movs
movs
mov
lods
cmp
arpl
add
push
adc
sub
test
into
out
xor
pcmpgtw
(bad)
fcom
and
cmp
xchg
push
and
add
shl
ss
retf
cmps
or
sar
and
imul
or
(bad)
leave
push
imul
call
jmp
mov
lods
cmp
pop
in
or
idiv
cli
iret
add
sbb
ins
cmp
mov
mov
cmps
call
ds
outs
add
stc
stos
aaa
sub
(bad)
in
pop
add
div
and
pop
gs
iret
fcomp
and
push
lds
pushf
adc
ftst
and
shl
retf
push
xchg
add
retf
sbb
jmp
and
in
mov
dec
inc
cs
xor
out
hlt
pushf
cmp
popa
inc
pop
loope
cmps
test
xor
into
js
ror
mov
cmps
pop
stc
div
xchg
(bad)
fdiv
adc
push
jge
jl
adc
sbb
mov
ror
ficomp
(bad)
cmp
repnz
mov
cmps
pop
push
mov
movs
mov
xchg
jne
nop
mov
sbb
in
hlt
and
xchg
dec
push
test
lods
xor
movs
and
(bad)
fcomp
imul
jl
cmps
jg
pop
int3
fcmovbe
popf
retf
lahf
call
jns
and
inc
popa
fwait
test
inc
inc
push
pop
xchg
dec
(bad)
xchg
adc
xchg
arpl
daa
sbb
es
shl
jge
mov
out
pop
adc
lahf
mov
jo
(bad)
xor
lock
ins
sbb
pop
cmp
test
xchg
ret
mov
rol
mov
dec
xor
and
and
push
in
outs
mov
sahf
(bad)
out
retf
mov
les
lods
sbb
xchg
jo
shl
xor
ins
and
xchg
mov
push
adc
adc
(bad)
pop
repz
jne
int
aam
xchg
mov
aam
xchg
inc
cli
add
rcl
mov
(bad)
lods
sub
and
in
xchg
and
sub
sahf
fs
mov
sbb
jge
fldenv
inc
inc
loopne
scas
fadd
mov
push
js
push
cmp
sub
add
out
adc
dec
adc
test
cwde
sub
dec
cmp
jmp
(bad)
int
enter
mov
cdq
ror
dec
pop
xchg
cmps
aas
xlat
dec
push
sub
adc
std
mov
mov
sahf
mov
inc
int3
dec
loopne
jl
pop
ret
sub
and
xchg
call
paddusb
lods
or
out
fdivr
push
loop
push
pop
cmps
les
cmp
mov
imul
jne
(bad)
into
aas
ins
xchg
jns
cmp
cs
scas
aam
inc
push
sbb
bound
sub
jp
sbb
(bad)
xchg
fidiv
cli
mov
(bad)
lock
xchg
inc
jne
repnz
ror
in
popa
gs
pushf
mov
push
rol
jbe
leave
in
xchg
loop
mov
stc
(bad)
rol
shr
call
cli
sar
je
(bad)
fldenv
ja
sub
push
push
jae
ss
mov
(bad)
enter
adc
shr
fist
movs
js
sbb
fdivr
xor
adc
ss
(bad)
dec
pop
push
mov
or
fstp
mov
sub
sbb
jae
xlat
cmp
icebp
and
stos
mov
sbb
sub
icebp
jbe
movs
mov
dec
(bad)
repnz
imul
or
and
or
lea
xchg
pop
dec
jmp
icebp
mov
push
adc
and
cmp
push
leave
add
inc
xchg
xor
int
xchg
repz
dec
ret
out
cmp
mov
into
or
out
pusha
cmp
nop
call
mov
push
rol
mov
push
idiv
(bad)
mov
mov
fidivr
pusha
loopne
dec
aaa
mov
jo
adc
mov
inc
popa
lods
or
inc
aaa
xor
shl
jns
add
inc
xchg
fld
cld
or
push
gs
pop
cmp
sub
mov
pop
cwde
mov
leave
pop
jo
pusha
xchg
icebp
mov
mov
xlat
(bad)
out
(bad)
xchg
aas
adc
and
ds
mov
xchg
je
lea
retf
jne
imul
adc
mov
inc
jecxz
or
sub
mov
mov
ds
ss
mov
std
mov
mov
pushf
mov
(bad)
sub
jle
mov
gs
xchg
jnp
neg
cmp
cwde
jmp
in
arpl
and
xchg
push
pushf
sbb
cs
call
or
outs
sbb
or
loop
jbe
(bad)
ss
stos
das
fimul
cmps
push
adc
adc
push
fild
pusha
cmp
sub
and
icebp
sbb
pop
dec
rcl
out
push
or
xlat
popf
cmp
gs
dec
xchg
pop
push
out
rcl
push
xor
fisub
cmp
xor
test
xchg
ins
retf
lock
mov
bound
in
arpl
(bad)
mov
pushf
mov
ins
inc
mov
pop
js
sti
push
stos
call
test
push
jmp
sub
cmp
cld
ins
dec
mov
test
add
daa
retf
sbb
jecxz
loope
jle
shr
dec
mov
xchg
sub
dec
inc
add
into
ss
mov
fidiv
and
int
adc
mov
adc
xchg
push
ss
xlat
test
loop
sub
xor
leave
xor
inc
mov
sbb
xchg
icebp
xor
sbb
or
inc
ja
ret
or
imul
fiadd
(bad)
xchg
lods
xor
pop
or
jmp
xlat
dec
xchg
repz
xlat
dec
daa
out
retf
mov
gs
xchg
fs
(bad)
or
and
sar
xchg
sbb
fs
xor
loopne
sar
test
std
mov
clc
ins
test
popa
dec
xlat
fiadd
jmp
sub
mov
or
dec
pop
jg
adc
push
xor
adc
jmp
or
push
or
loop
aas
sbb
bound
ins
in
fsubr
out
xchg
sub
dec
lea
fwait
or
push
imul
jg
dec
ins
sbb
sub
add
imul
mov
pop
rol
xchg
pop
jne
test
push
add
lock
cmp
test
mov
daa
outs
inc
out
pop
mov
xchg
lods
mov
add
hlt
xchg
jne
mov
and
add
xchg
scas
dec
into
push
sub
add
pop
ss
(bad)
aam
xor
jmp
fimul
fwait
push
add
inc
push
shl
pop
sti
stos
inc
nop
loop
iret
adc
mov
sub
ret
repnz
out
pop
mov
cmp
push
jne
xchg
and
mov
pop
push
lods
cmps
push
pop
fs
loope
frstor
rcr
and
imul
xchg
mov
fwait
leave
packsswb
sbb
dec
or
(bad)
xor
retf
mov
sbb
mov
mov
outs
gs
xchg
jecxz
adc
cmp
addr16
(bad)
sar
call
cmp
jmp
ins
test
add
nop
ret
ins
cmps
lock
sub
adc
cli
pop
or
and
xchg
pop
add
mov
xchg
sar
adc
jmp
and
pop
dec
out
repnz
movs
xchg
sbb
loope
inc
jmp
jo
sbb
(bad)
mov
adc
pop
mov
dec
sub
lods
(bad)
sbb
cmp
inc
ja
out
xchg
pop
cdq
pop
jmp
pop
inc
cwde
cdq
xchg
clc
xchg
dec
sahf
xor
cmp
inc
test
mov
xor
jge
ret
inc
retf
push
dec
push
mov
sub
pop
xor
jp
addr16
loopne
xor
ins
mov
call
rcl
in
outs
pop
sub
cli
fwait
clc
(bad)
and
pop
int
std
retf
sbb
jmp
or
push
test
sar
and
call
and
in
push
push
ins
inc
adc
mov
jecxz
mov
mov
mov
les
xor
push
(bad)
fsubr
sub
pop
dec
test
fbstp
pop
loope
sbb
xchg
out
push
mov
faddp
ss
xor
outs
xchg
push
or
push
jnp
ja
inc
push
nop
data16
outs
daa
adc
data16
xor
sbb
fdivrp
out
xchg
test
pop
or
jbe
enter
lea
dec
or
pop
pop
leave
scas
inc
cld
cmp
or
jnp
add
inc
inc
lea
jecxz
rcr
outs
imul
sti
arpl
test
or
enter
mov
inc
je
dec
adc
enter
inc
mov
jne
fs
push
iret
ret
push
je
xlat
ins
pop
mov
out
outs
clc
leave
popa
jns
cmp
cmp
inc
pop
repnz
scas
movs
fstp
scas
mov
cmps
xchg
push
cld
jbe
push
add
adc
jae
mov
aas
fidiv
in
ret
xchg
push
or
push
dec
jbe
jle
and
jo
pop
adc
pop
mov
pop
push
sbb
xchg
imul
nop
std
adc
nop
mov
int3
imul
xchg
test
div
xor
sar
xor
xchg
and
inc
aad
pop
rol
dec
test
jb
xchg
frstor
test
retf
fldenv
sub
repz
not
mov
fisubr
jne
lock
push
retf
xor
(bad)
es
and
scas
outs
adc
loop
or
out
jbe
loopne
mov
pop
dec
push
int
add
ja
(bad)
int3
adc
push
les
stc
jo
cmp
push
and
xchg
jno
push
and
inc
icebp
fstp
pushf
retf
cmps
ins
jle
sbb
fnstsw
xor
sar
pop
ds
into
cwde
out
mov
pop
jg
aad
add
loope
add
fidivr
ja
mov
in
or
test
sar
cmp
in
out
(bad)
daa
out
mov
(bad)
inc
adc
(bad)
jp
and
push
call
jnp
adc
xor
xchg
push
int3
or
stos
rol
xchg
cmp
(bad)
sahf
lods
call
jo
call
push
fidiv
std
cmps
pop
jo
cmp
stos
pop
push
fwait
fwait
repnz
inc
jge
(bad)
fs
cmp
hlt
cmp
mov
mov
data16
shr
sub
cmp
lods
ror
lahf
and
imul
std
bound
icebp
jno
jno
outs
into
and
inc
cmp
call
cmp
ins
mov
dec
pusha
dec
adc
je
add
daa
jae
lea
retf
iret
pushf
xor
or
inc
in
jne
imul
lods
call
bound
outs
or
icebp
pop
fsubp
gs
or
mov
xor
adc
add
fstp
ins
addr16
fnsave
or
(bad)
lea
aam
and
cli
xor
mov
lods
and
push
imul
jmp
fs
les
nop
jle
xchg
inc
out
mov
inc
and
fmul
scas
into
sub
mov
mov
sub
retf
inc
add
cs
and
push
and
mov
addr16
push
and
fadd
push
ss
int
inc
mov
(bad)
call
jmp
mov
shl
pop
enter
les
or
adc
mov
inc
mov
in
(bad)
ret
inc
je
pop
in
adc
sbb
jl
enter
inc
aas
inc
sub
and
cmp
mov
hlt
mov
mov
popf
outs
stos
pop
and
sbb
add
in
out
mov
jg
xchg
sti
pop
bound
sbb
orps
and
mov
xor
jecxz
arpl
cmp
aaa
stos
sub
sbb
cmc
rol
add
jbe
sub
mov
fldcw
mov
xchg
repnz
dec
rep
mov
ds
sub
ins
jg
lock
mov
xor
dec
mov
push
fstp
bound
mov
push
cmp
cwde
xor
call
pop
ds
in
sbb
or
fxch
test
(bad)
retf
pop
inc
ins
or
sbb
lahf
mul
repz
jno
and
add
add
jns
xchg
push
adc
push
(bad)
retf
mov
xor
movhlps
xor
add
jns
in
std
xchg
xchg
xchg
sbb
imul
add
mov
scas
sub
cmp
in
sti
push
inc
inc
ret
xchg
shr
cmps
nop
int
mov
out
(bad)
hlt
es
mov
jmp
inc
pop
aaa
rcl
inc
cwde
test
scas
popa
aad
xor
imul
shl
mov
pop
fdivr
xor
mov
cld
dec
sbb
call
mov
js
dec
pop
cmp
movs
adc
in
lahf
jmp
(bad)
sub
xlat
sbb
sahf
sub
xchg
sti
std
cwde
cmp
fiadd
in
jb
adc
out
mov
mov
inc
push
mov
pop
fcmovne
cmp
add
mov
sbb
push
cld
stc
jno
or
lods
cmps
or
aas
rcl
and
inc
sbb
jno
movs
daa
xchg
fimul
aam
inc
fcmovbe
sub
xchg
sub
fsubr
js
mov
ins
cmp
mov
xor
inc
or
stos
pop
lea
hlt
in
xlat
jmp
stc
ja
xor
pop
sub
pop
add
jecxz
cmp
mov
add
mov
and
icebp
pop
xchg
sbb
xchg
dec
repz
ja
xlat
sar
jae
popa
fcomi
retf
stos
mov
or
cmc
jmp
xchg
mov
(bad)
xor
(bad)
idiv
or
in
js
out
rcl
les
cmps
popf
mov
pop
xor
xchg
push
cs
mov
out
or
xor
mov
addr16
test
and
pop
outs
jp
nop
bnd
cwde
xchg
repz
pop
xchg
dec
lds
rol
cmp
imul
xchg
dec
pop
aad
cmps
adc
mov
mov
and
mov
or
call
cmps
mov
outs
mov
scas
sbb
stc
std
inc
mov
sub
xchg
pop
pop
pusha
or
pop
adc
inc
or
pop
cmp
in
jecxz
sbb
fsubr
inc
dec
dec
push
pop
pop
sbb
pop
mov
inc
adc
xchg
clc
imul
or
cdq
mov
icebp
push
ret
icebp
sbb
xor
lods
mov
push
fisttp
out
fmul
inc
test
in
(bad)
mov
mov
mov
scas
xchg
daa
jno
fistp
ins
daa
fldcw
je
sahf
and
push
fstp
push
push
icebp
push
sahf
jbe
fdivr
jge
dec
(bad)
sbb
ret
mov
mov
xchg
out
hlt
mov
or
jns
daa
sub
fs
inc
mov
dec
sahf
xlat
adc
mov
and
enter
out
iret
dec
push
xchg
pop
inc
mov
shl
inc
lea
ss
neg
sub
or
stos
push
mov
mov
test
mov
test
into
pop
xor
pop
not
cmp
or
jge
clc
ret
push
es
push
lds
push
xor
shr
inc
sbb
sbb
cdq
cdq
sbb
out
jmp
fs
mov
xchg
sbb
sub
je
sbb
jae
mov
xor
mul
inc
mov
imul
cdq
sub
or
test
xchg
adc
fisttp
and
inc
jno
mov
or
ds
sub
mov
std
mov
inc
prefetch
stos
push
aad
fst
push
iret
ret
pop
daa
cmc
pop
jo
adc
ss
mov
fsub
xlat
pop
mov
adc
cmp
mov
out
dec
push
xor
int
pop
clc
sub
dec
lods
ja
add
mov
cmp
push
xchg
mov
jb
ror
xchg
inc
cwde
stos
fnstsw
push
mov
out
ffreep
fild
clc
inc
mov
mov
les
mov
dec
inc
std
int3
mov
push
icebp
jne
out
clc
shl
xchg
cmps
sbb
fisttp
rcl
es
shr
mov
jmp
pop
ins
jns
mov
pop
(bad)
scas
or
sbb
fs
or
sub
push
dec
add
das
in
pop
dec
(bad)
push
loope
call
ja
push
xor
ror
loop
jno
outs
stos
jmp
sub
idiv
mov
mov
js
imul
cmp
mov
data16
ret
shl
fsubr
aam
pop
add
dec
add
inc
shl
push
mov
cmc
pmuludq
mov
pop
jmp
retf
ins
lahf
cmp
enter
lds
mov
inc
retf
dec
and
sub
xchg
jne
test
dec
aaa
add
(bad)
js
test
pop
adc
les
call
pop
retf
jmp
clc
rcl
jne
inc
int
sar
mov
sub
sbb
leave
loop
adc
mov
inc
dec
dec
mov
pop
push
imul
mov
into
ficomp
in
sbb
ja
int
rcr
imul
inc
inc
sbb
fst
cli
loope
and
xchg
shr
sub
xchg
int
push
int
xor
loop
and
fs
xor
ins
inc
cmp
movq
sahf
aad
hlt
mov
xchg
mov
jo
ret
lods
pop
mov
aad
dec
mov
repz
inc
pop
adc
push
push
push
call
cmp
pop
retf
sub
ins
aam
enter
stc
adc
sbb
or
jb
mov
push
push
cld
imul
xchg
icebp
xchg
mov
rcr
outs
push
xchg
dec
sbb
test
jnp
fdivp
pop
mov
cmp
data16
sbb
lds
mov
sub
xor
xlat
out
or
push
or
push
pop
inc
mov
push
fwait
fwait
(bad)
jmp
mov
std
pop
xlat
gs
in
ss
xchg
outs
int3
xchg
mov
push
add
jnp
and
gs
dec
mov
mov
loope
xchg
add
ficom
or
call
or
rcr
pop
stos
mov
leave
mov
leave
jge
xor
mov
mov
lods
xor
pop
or
mov
retf
fadd
fcomip
dec
jl
mov
sub
dec
neg
(bad)
fld
dec
inc
mov
sub
xor
pushf
mov
(bad)
jno
sti
jne
lods
hlt
(bad)
sahf
(bad)
movs
arpl
es
aaa
pop
iret
jno
ret
gs
mov
mov
cmps
dec
sbb
pop
repz
xchg
xlat
arpl
(bad)
(bad)
xor
daa
lock
jo
mov
inc
gs
aaa
jns
push
mov
(bad)
(bad)
xlat
shl
lea
stos
add
sub
push
dec
bound
xor
mov
xor
sbb
and
sar
popf
sbb
into
(bad)
retf
jle
dec
popf
push
outs
mov
mov
push
and
in
xchg
jmp
iret
lods
sbb
retf
nop
aam
xor
xchg
mov
cmps
xchg
fadd
xchg
mov
sub
mov
pushw
push
movs
sar
cmps
xchg
jmp
xor
or
cmp
sbb
fiadd
ins
aaa
or
pop
jg
(bad)
ins
dec
pop
cmps
(bad)
div
mov
cmp
add
push
or
in
addr16
and
jne
mov
sub
out
stos
scas
cmp
mov
pushf
sub
shl
xor
(bad)
je
fs
push
jle
sub
arpl
cdq
test
daa
mov
test
pop
push
or
jbe
mov
jmp
scas
fdivr
adc
ins
push
aad
adc
fcmovu
mov
test
test
push
std
aas
loop
iret
xchg
outs
cmp
jmp
adc
or
inc
and
pop
dec
imul
push
adc
jge
cdq
inc
adc
and
outs
inc
pop
push
aam
cs
arpl
std
rcl
jae
loope
clc
sub
jne
cs
mov
js
arpl
pop
pop
adc
xor
ss
inc
push
dec
mov
ret
jmp
or
in
pop
cmc
retf
jno
pop
mov
enter
or
sub
aas
xchg
mov
iret
repz
jge
iret
and
pop
xor
mov
and
lods
int
jl
fiadd
mov
popf
mov
jno
jbe
jmp
xor
hlt
xlat
(bad)
cli
addr16
dec
mov
outs
xchg
xchg
mov
inc
pop
call
cwde
mov
pop
xchg
out
inc
inc
stos
pop
ror
inc
mov
iret
push
sti
sub
sub
or
xor
clc
xchg
lea
sbb
cmps
cmp
and
nop
cmova
or
mov
fstp
jae
cmp
out
jge
cmp
out
cmps
call
sub
cli
dec
sbb
mov
pop
inc
pop
cdq
retf
jecxz
mov
sbb
and
addr16
aam
(bad)
loop
mov
cwde
xlat
jmp
lea
dec
les
test
mov
mov
add
pop
add
aaa
jae
jo
push
fyl2xp1
(bad)
and
pop
cmps
js
xor
and
xchg
icebp
shl
dec
inc
aas
and
nop
inc
loop
mov
sub
cmp
and
cmp
js
jmp
int
push
pop
pop
jecxz
xor
mov
scas
aaa
pusha
push
lock
stc
mov
mov
jle
(bad)
dec
xchg
push
loope
ret
mov
sti
mov
jle
enter
(bad)
xchg
scas
pop
popf
xchg
add
ins
sahf
mul
cmp
sub
rol
dec
sub
push
inc
cmps
xchg
in
pop
fist
dec
sahf
and
dec
lea
loopne
mul
mov
xor
sbb
clc
je
push
add
or
add
or
cmp
inc
xchg
popa
pop
rol
clc
mov
mov
and
xlat
or
xchg
jp
cmps
int3
leave
enter
loope
mov
mov
or
or
push
call
dec
mov
inc
dec
inc
push
adc
fimul
add
xor
or
mov
or
adc
lds
(bad)
jecxz
into
cmp
jge
mov
loop
aad
aam
cmc
pop
dec
or
inc
mov
dec
cld
sub
clc
cmc
jbe
or
mov
and
push
add
mov
arpl
inc
popa
sbb
sbb
(bad)
pushf
adc
rep
cmp
test
sbb
daa
mov
lahf
pop
jecxz
retf
push
mov
sbb
loop
les
fwait
jb
or
loope
jae
sbb
mov
mov
pushf
stc
clc
inc
fwait
push
adc
lods
jnp
test
out
dec
xchg
jecxz
ins
jl
mov
movs
lods
inc
mov
xor
stos
dec
sahf
out
xor
out
mov
fadd
or
cmp
ja
and
dec
push
jle
int
lahf
mov
cmc
dec
jns
gs
sub
mov
mov
sbb
mov
sti
jge
sub
stos
cmp
sbb
jbe
stos
addr16
icebp
mov
fmul
ror
push
jo
jne
les
inc
sbb
push
push
mov
jge
cld
aaa
inc
jae
pop
(bad)
shl
sub
int3
cmp
xor
std
add
and
ret
xchg
ins
lds
mov
jae
aaa
jp
mov
add
and
fiadd
popf
aas
sub
push
xor
out
push
test
jb
aam
pop
pop
jp
call
mov
das
push
inc
hlt
jnp
dec
pop
not
jle
mov
jp
std
mul
inc
call
jae
add
mov
js
mov
pop
cmp
in
and
dec
sub
std
pop
seto
fld
cmp
scas
mov
jp
push
aas
in
mul
rol
push
adc
fdiv
out
aaa
cli
lods
daa
cmp
sbb
adc
mov
into
pushw
pop
sub
shl
mov
call
retf
xchg
sbb
add
inc
jbe
fimul
pop
xor
add
push
jge
mov
adc
push
fs
dec
sub
sbb
daa
cmp
push
nop
movntq
out
mov
imul
aam
lods
mov
int
dec
ins
cmp
fdivp
push
jbe
pop
loope
nop
pop
pop
(bad)
xchg
or
mov
pop
mov
or
rcl
sar
icebp
mov
das
mov
outs
or
push
pop
mov
and
arpl
ror
push
lds
adc
sbb
stos
nop
mov
mov
add
xchg
jne
jge
jl
(bad)
shl
imul
bound
or
jp
push
push
sub
mov
(bad)
int3
cs
add
rcr
mov
dec
scas
mov
jp
pusha
mov
jno
jmp
sbb
icebp
ss
ret
mov
mov
add
aas
test
push
call
aas
mov
pop
dec
ja
adc
pop
retf
inc
stc
test
loope
lock
shr
mov
mov
cmps
or
loop
push
or
pop
pop
add
fld
add
out
(bad)
pop
out
and
mov
cmp
or
sbb
mov
jmp
aam
out
loope
cdq
dec
inc
lods
sar
adc
cmp
dec
leave
push
stc
pop
call
popa
mov
jnp
jne
repnz
sub
sub
mov
jmp
xchg
cmc
xor
mov
xor
and
pop
into
sbb
jmp
fs
pop
jns
(bad)
push
gs
sub
dec
movs
push
xor
add
mov
xlat
mov
mov
ds
and
fadd
xor
mov
adc
ret
pop
int3
cdq
add
test
xchg
mov
or
call
mov
fwait
inc
dec
ficomp
imul
in
stc
jle
or
clc
jg
inc
push
sahf
push
outs
xor
inc
sub
and
pop
push
jge
fdiv
lock
nop
xchg
and
(bad)
cmp
mov
sub
mov
dec
sbb
(bad)
out
mov
mov
sbb
enter
out
adc
xor
iret
mov
mov
adc
cmp
cwde
inc
fstp
jb
sub
xchg
mov
ret
mov
or
pop
jecxz
ficom
cmp
mov
repnz
fs
dec
cdq
ds
xchg
mov
mov
mov
(bad)
fwait
popa
in
cs
add
jno
dec
test
and
movs
cmps
push
retf
repz
movs
loop
jl
or
retf
jae
xchg
mov
lock
js
pushf
sub
fisubr
mov
test
jg
jle
cwde
dec
fistp
push
inc
call
push
xchg
pop
and
xchg
inc
xor
cs
inc
test
xchg
test
aad
adc
mov
or
pushw
stos
and
test
xor
enter
leave
mov
jp
mov
inc
cmp
cmp
and
and
mov
iret
std
dec
popa
pushf
fdivr
xchg
rol
mov
mov
inc
inc
in
push
adc
ja
or
cmps
cmp
fwait
cmc
ins
inc
jnp
or
mov
cmp
dec
mov
fwait
inc
pop
mov
sub
and
sbb
push
push
sbb
push
pop
inc
dec
xor
sti
in
pop
cwde
ja
cwde
mov
cmc
repz
aas
int3
sbb
push
fisubr
movs
lahf
pop
or
mov
and
popa
cmp
push
cmp
add
adc
rcl
test
clc
pusha
cmp
(bad)
fldenv
pop
mov
mov
pop
sbb
loope
adc
imul
and
ja
jb
cmp
and
pop
add
inc
lahf
push
(bad)
test
into
xchg
sahf
outs
sbb
adc
mov
adc
or
pop
clc
jo
cmp
inc
or
repz
ror
repnz
dec
dec
sub
pop
aaa
fstp
loope
(bad)
dec
stos
outs
ins
xchg
nop
and
mov
xchg
ss
mov
pushf
inc
bound
sub
xchg
dec
daa
in
xor
mov
ss
in
(bad)
cmc
jmp
adc
int3
xchg
aam
push
sub
ins
jo
je
aas
sahf
xor
cmp
cs
push
movs
fidivr
scas
sub
mov
cld
sti
(bad)
cmc
jnp
scas
sbb
dec
mov
jno
inc
xor
stc
cwde
mov
sub
nop
addr16
mov
jbe
jp
jo
cmp
jnp
pop
add
sar
retf
sahf
xchg
push
cmp
clc
ret
cmp
imul
inc
adc
pushf
(bad)
arpl
pop
gs
fs
fst
ror
adc
test
ja
add
jge
jnp
adc
jmp
pop
adc
mov
ins
repnz
(bad)
in
pop
sub
sbb
int
sbb
clc
or
fsubrp
loop
mov
or
jle
pop
xchg
enter
jo
dec
fimul
das
jbe
leave
add
add
add
inc
sbb
and
sbb
nop
nop
out
clc
or
pushf
shl
sbb
cmc
push
dec
repnz
in
sub
mov
sbb
xor
loope
shr
inc
sub
mov
mov
sub
dec
mov
(bad)
repz
mov
inc
aas
aaa
add
sub
adc
fmul
push
int
dec
bound
sbb
sub
outs
adc
pop
sbb
mov
loope
pusha
ss
cmc
stos
sbb
xor
push
lods
push
fwait
mov
data16
push
cmp
mov
(bad)
retf
dec
repnz
fldcw
call
inc
sub
into
and
stos
daa
mov
pop
jns
jmp
xlat
lods
mov
daa
repnz
inc
jbe
mov
icebp
jl
repz
sbb
add
cmp
add
dec
retf
fbstp
xor
sti
(bad)
mov
rol
sub
jmp
call
data16
add
repz
lds
dec
repz
pushf
ins
dec
dec
mov
sub
pop
sub
mov
lds
retf
rol
mov
popa
xor
std
test
sbb
cmp
shl
(bad)
popf
push
sub
in
mov
pop
and
cmps
mov
cmp
popf
gs
adc
xor
nop
push
and
jp
dec
ja
mov
out
das
pop
add
xor
std
xchg
(bad)
sbb
loopne
scas
out
repnz
movs
mov
dec
into
sub
jge
adc
jo
jle
jae
xchg
outs
adc
cdq
dec
mov
mov
and
inc
jg
fstp
je
dec
ja
call
push
inc
xchg
dec
push
mov
pop
je
adc
imul
adc
inc
push
add
push
cmp
cdq
pop
lods
dec
ins
mov
and
cdq
adc
jo
or
scas
scas
(bad)
rcr
psubsw
imul
mov
int3
adc
shl
jecxz
sub
sub
mov
sub
in
jno
sub
xchg
es
mov
mov
fmulp
and
ror
push
mov
xor
and
stos
dec
push
in
pop
cmp
in
dec
push
sbb
sbb
mov
aam
call
loope
xchg
loop
or
xchg
(bad)
adc
cmp
add
push
jp
sub
(bad)
sbb
icebp
ficom
fwait
dec
jae
mov
push
xchg
jb
adc
xor
call
cwde
cmp
out
xor
rcr
arpl
add
jo
movs
cmp
hlt
push
movs
dec
push
mov
jp
jb
and
lahf
mov
mov
add
mov
std
dec
mov
adc
inc
leave
xchg
add
inc
mov
test
xchg
cmp
loope
mov
inc
inc
cmc
psubd
data16
sub
ret
pusha
stc
xchg
pop
loopne
test
add
mov
dec
cmps
movs
into
mov
jmp
fdivr
or
fld
in
ins
cmps
sub
icebp
les
nop
and
jecxz
repnz
sti
mov
push
fsubp
dec
mov
xor
mov
push
fmul
cli
pop
imul
jo
stos
data16
mov
test
repz
retf
lea
test
popa
mov
pop
jp
cmp
and
pop
lods
push
jmp
shr
mov
cmp
test
stc
pop
mov
xlat
hlt
jae
push
sar
jmp
cmps
xor
movs
mov
call
xor
ret
sbb
fidivr
(bad)
daa
pop
scas
sub
je
jmp
cmps
dec
scas
and
inc
pop
lods
fs
pushf
data16
int
cmp
pop
into
addr16
adc
int3
leave
ret
xor
mov
popf
sub
and
cmc
js
fdiv
into
pop
pop
jb
jecxz
xor
fsubr
(bad)
push
out
movs
add
gs
dec
arpl
sbb
jecxz
sahf
out
or
test
jp
pop
(bad)
test
arpl
movs
xchg
retf
sbb
adc
in
jbe
and
push
pop
add
rol
mov
ja
and
jmp
inc
jg
xchg
out
in
out
jge
cmp
adc
mov
leave
sahf
jle
or
das
in
rol
(bad)
ror
add
rcr
pusha
dec
or
add
mov
int
inc
jg
arpl
adc
data16
scas
outs
mov
cmp
xor
jb
push
enter
outs
cmp
xchg
sbb
adc
mov
xchg
sti
fcmovu
(bad)
enter
sbb
mov
(bad)
push
pop
cmp
xchg
jl
idiv
or
or
mov
mov
stos
sbb
mov
jne
or
inc
xchg
inc
xor
jmp
test
sbb
leave
inc
pop
int
std
sbb
sub
mov
xchg
sub
arpl
inc
fsubr
icebp
(bad)
xor
mov
or
(bad)
out
xor
pop
mov
cmp
sub
mov
xchg
ror
(bad)
in
pop
cmp
nop
jo
fld
inc
outs
jno
fnstsw
dec
(bad)
pop
loope
pushf
mov
push
cmp
test
cmp
jmp
fidiv
pop
add
sbb
cmps
mov
push
dec
retw
aaa
xlat
ds
mov
es
sti
push
int
fwait
imul
push
xchg
bound
gs
pushf
jge
test
shr
jo
sahf
mov
and
and
dec
dec
xlat
mov
jge
cmp
dec
daa
dec
ret
dec
js
push
mov
das
fmulp
push
and
leave
and
adc
push
cmp
or
cmc
mov
mov
pop
scas
popa
add
out
in
adc
das
jae
mov
inc
repnz
push
arpl
jnp
es
inc
xchg
xor
inc
mov
inc
cmp
sbb
sub
loopne
sub
cmp
test
jno
dec
in
inc
inc
sbb
add
mov
sahf
stc
mov
mov
cvtdq2ps
jnp
lods
ja
sbb
jmp
test
aam
and
jo
mov
push
jo
cmp
mov
ret
sub
push
or
std
sbb
das
add
or
in
push
test
shl
cdq
lea
sub
dec
pop
jecxz
adc
add
ja
sbb
lds
xchg
(bad)
jne
dec
pop
xchg
out
mov
and
enter
mov
jae
std
dec
loopne
push
ja
ja
inc
pop
mov
dec
in
push
jle
jp
imul
cmp
lock
mov
cmps
inc
dec
in
sti
jns
adc
test
mov
loope
jecxz
in
aad
sbb
push
ins
sbb
or
fs
sbb
data16
nop
dec
inc
repz
adc
std
lahf
xchg
cs
push
sar
jne
shl
stc
or
call
xor
pop
int3
jbe
inc
fwait
lea
inc
dec
clc
push
inc
(bad)
out
xor
ror
adc
sbb
mov
stos
jno
and
mov
(bad)
push
push
mov
inc
mov
dec
push
dec
xchg
je
jns
stos
repnz
sub
(bad)
sub
jge
enter
dec
mov
lods
xor
sbb
sub
cmp
stc
mov
jl
cmp
mov
shr
mov
out
add
and
aaa
rol
jg
push
mov
stos
mov
xchg
add
inc
or
out
mov
call
xchg
in
sbb
imul
out
xchg
jge
dec
out
adc
inc
js
or
(bad)
mov
(bad)
pusha
push
or
sub
xchg
(bad)
frstpm(287
mov
dec
cs
out
xchg
jp
inc
cmp
repnz
loop
mov
icebp
mov
out
sbb
adc
jnp
inc
or
add
bswap
fcomp
loop
xchg
or
mov
scas
jne
sbb
add
jge
cli
cmp
in
ds
jbe
mov
push
out
fdecstp
out
sbb
test
out
push
cmp
out
push
xor
push
pop
push
pusha
fild
and
xor
adc
stos
push
lods
jbe
push
hlt
ins
inc
dec
push
stos
leave
push
shl
fs
aaa
movs
sub
fdiv
inc
test
cmp
stc
ror
int
push
mov
jne
mov
mov
and
mov
icebp
mov
jo
repz
cmp
dec
xchg
js
and
sar
push
je
xor
adc
jno
stc
push
xor
ror
add
nop
xor
xchg
xchg
push
dec
add
sbb
sbb
xchg
xor
arpl
mov
mov
cmp
or
(bad)
xlat
movs
pop
cmp
sub
xchg
je
arpl
xchg
xor
add
into
xor
(bad)
lods
pop
movs
and
xor
je
fs
sub
mov
fs
(bad)
dec
dec
mov
jae
mov
stos
in
ror
sub
cwde
pop
pop
inc
dec
sbb
pop
out
jmp
xchg
movs
push
cmps
cli
push
sub
scas
cli
jp
jbe
sbb
inc
xchg
sahf
xchg
add
ins
sub
fs
cmp
pop
inc
pop
stc
cmp
cwde
inc
mov
cmp
clc
jmp
sbb
fstp
inc
or
hlt
inc
xor
and
jnp
pushf
lock
(bad)
cs
je
jmp
retf
inc
and
stc
xor
js
ror
jmp
test
call
test
add
sar
retf
inc
sub
cmp
icebp
pop
arpl
retf
add
sub
repz
fdecstp
jbe
pusha
adc
fistp
in
test
jb
sti
aas
lahf
jne
ror
daa
push
icebp
inc
(bad)
out
adc
mov
nop
call
retf
mov
adc
cmp
ja
retf
popf
daa
lock
into
inc
xchg
aam
xor
retf
hlt
addr16
cs
pop
xor
into
push
jl
sahf
pop
fbld
mov
icebp
xchg
das
dec
out
div
ins
pop
inc
(bad)
lock
into
in
int3
adc
cs
iret
retf
xchg
retf
cmps
movs
in
jnp
add
jmp
loope
add
std
inc
cmps
mov
sbb
sbb
sbb
jae
bound
iret
gs
cmps
xor
pop
mov
mov
pop
aas
inc
adc
inc
or
xchg
repz
stos
call
dec
repnz
sbb
mov
xchg
push
pusha
scas
repz
adc
mov
pop
add
adc
mov
mov
mov
pop
call
(bad)
sbb
cmps
neg
mov
setno
and
pop
and
outs
or
cdq
mov
call
nop
pop
mov
in
fcom
mov
(bad)
stc
repz
stc
push
jnp
jo
int3
call
jns
icebp
mov
js
outs
int
jo
mov
cmps
mov
cld
ret
mov
mov
leave
or
or
shl
ror
jecxz
(bad)
ins
fwait
jns
pop
cwde
push
std
cmp
fst
mov
icebp
dec
jns
sub
scas
retf
sahf
jb
inc
push
add
fiadd
in
mov
in
inc
in
test
(bad)
(bad)
xor
cmps
adc
adc
aam
push
cli
sbb
jb
pop
imul
aas
jo
leave
sub
cmc
fwait
cmps
test
shl
and
or
pop
test
mov
inc
or
xchg
bound
xchg
into
(bad)
out
sub
xor
push
sub
fsub
push
dec
(bad)
xor
add
jne
movs
pop
xchg
hlt
cdq
sub
inc
push
add
hlt
fldenv
retf
push
jae
pusha
sbb
sbb
dec
test
lock
mov
adc
push
(bad)
hlt
xchg
popw
push
repz
jg
hlt
ins
outs
push
lahf
imul
lds
fimul
jle
sub
sbb
fs
loopne
imul
pushf
push
pop
aas
push
dec
mov
xlat
cmp
sub
cvtdq2ps
jnp
xor
ss
cmp
and
fimul
sbb
bound
fs
sbb
loope
imul
retf
mul
cmp
xchg
pop
sub
inc
adc
das
(bad)
sahf
inc
xor
aam
push
jno
jb
xchg
(bad)
(bad)
in
inc
(bad)
adc
or
inc
stc
ja
movs
out
cmps
jne
je
aaa
sbb
aas
ret
loopne
cmc
xchg
xor
rcr
and
ret
dec
aaa
or
ret
in
jecxz
sbb
dec
pop
push
mov
test
das
pop
jns
aaa
dec
push
push
jo
jl
fadd
or
adc
sar
pop
inc
jecxz
fs
mov
push
sbb
adc
or
nop
inc
mov
xchg
out
pusha
icebp
or
and
jns
scas
cmp
jae
in
adc
stc
aam
sub
pop
imul
loopne
int
inc
scas
or
adc
test
xor
xchg
xchg
js
lds
enter
arpl
inc
dec
aas
mov
add
imul
dec
xor
pusha
stos
jae
mov
push
dec
cmp
lahf
sbb
outs
repnz
mov
call
hlt
ja
out
scas
out
sub
cmp
out
jo
and
jae
pop
outs
add
scas
add
into
dec
pop
imul
mov
int3
shl
cmovs
pop
lahf
adc
cmp
std
scas
xlat
enter
adc
popa
fisubr
gs
bound
rol
or
mov
add
cmp
push
fstp
das
push
xchg
jmp
mov
aaa
wrmsr
iret
test
fstp
or
sub
mov
jno
aaa
sti
inc
pop
mov
add
call
pop
sub
jmp
cmp
inc
or
jmp
inc
and
push
pop
or
data16
and
cmp
xchg
mov
scas
enter
retf
addr16
sbb
cmps
(bad)
jmp
jmp
lahf
pop
jle
pusha
cmc
std
fs
mov
loop
dec
or
cmp
bound
rcl
and
pop
pop
push
jno
outs
mov
or
sar
mov
stos
loope
add
pop
mov
jbe
pop
fdiv
aaa
leave
ror
xor
imul
mov
cmp
scas
push
lds
loopne
mov
fucomip
add
xchg
jg
fnsave
push
std
cmp
jnp
test
sbb
lgs
push
mov
lahf
aas
int
leave
popf
outs
mov
cdq
dec
mov
cmp
mov
iret
int3
aam
mov
mov
popa
mov
stc
inc
dec
pop
(bad)
jmp
adc
mov
lock
ja
clc
ds
xor
pop
sub
paddb
fwait
repz
or
mov
ds
cmp
pop
dec
pusha
cmp
mov
std
cmp
xchg
out
lods
cmc
inc
jle
xchg
icebp
scas
ss
daa
cmp
sti
hlt
xchg
test
xchg
iret
adc
sbb
mov
jge
fist
jg
jb
js
xchg
ror
or
adc
stos
sbb
inc
jbe
inc
xchg
cmp
jmp
sbb
mov
jae
or
pop
not
call
pop
scas
clc
pop
jne
push
movs
out
(bad)
and
cmp
int3
stc
(bad)
lods
dec
popf
stos
cmp
adc
int3
fmul
dec
jb
aaa
test
jne
lds
inc
int3
iret
or
sub
add
sub
mov
push
lods
jnp
mov
sar
add
out
cmp
add
inc
cmps
or
test
fmul
adc
es
push
dec
stc
adc
movs
rcr
das
cmps
cmps
jge
jb
ja
jecxz
push
xor
pop
fstp
je
jge
(bad)
pusha
shl
clc
mov
lods
adc
loope
test
xor
js
pop
xor
cld
inc
pop
sub
psubd
es
imul
in
mov
ror
xor
xor
repnz
data16
pushf
aad
ss
lahf
sbb
mov
mov
mov
mov
sub
sbb
jne
mov
stc
jne
adc
cmc
pminub
cmp
ret
jne
sbb
push
xor
push
ret
movs
xchg
mov
icebp
bound
lods
loope
lock
addr16
pop
loope
push
xchg
push
fsubr
repnz
sahf
leave
test
lock
repnz
scas
sub
xchg
xchg
push
fstp
push
push
enter
pop
sub
lods
adc
ja
jb
(bad)
or
dec
inc
mov
dec
stc
mov
mov
sar
pop
mov
push
sbb
shl
sub
cmp
mov
push
sub
cwde
inc
push
loopne
in
aad
mov
pop
sub
mov
retf
push
imul
xchg
push
fimul
out
mov
call
pop
test
(bad)
movs
sbb
xchg
lds
dec
stos
retf
and
fs
cwde
push
arpl
(bad)
repz
jle
clc
sub
int3
sbb
mov
sub
adc
mov
repz
xor
mov
ds
jne
jmp
add
dec
pushf
pop
push
mov
jle
stos
nop
push
push
es
daa
(bad)
pop
dec
cmp
jmp
repnz
xor
push
test
call
inc
sub
cs
ror
stos
fisub
dec
(bad)
(bad)
adc
xor
aaa
ins
xchg
test
(bad)
push
cwde
adc
and
xchg
and
es
fld
mov
add
inc
xlat
test
pop
jns
adc
inc
int
jb
call
jle
cmps
mov
and
popa
mov
lds
scas
inc
push
push
mov
repnz
pusha
mov
push
(bad)
jae
sub
(bad)
jne
push
cmp
xor
ffreep
sar
xchg
jg
adc
test
loope
mov
push
sub
jmp
push
lods
aas
retf
inc
inc
cmp
xchg
mov
adc
and
inc
rcl
mov
push
mov
pop
xchg
inc
and
inc
aas
and
pop
test
rol
cli
dec
add
stc
es
cmps
push
push
xor
pushf
arpl
imul
repz
mov
add
cmp
mov
popf
mov
lock
stos
fwait
mov
test
movs
and
sbb
test
adc
fisubr
repz
or
pushf
outs
lahf
pop
cmp
les
call
jmp
arpl
or
jge
and
mov
inc
mov
xor
arpl
cmp
mov
and
push
mov
xor
ret
(bad)
jne
ja
jmp
xchg
fdiv
les
push
sbb
jge
outs
nop
push
sub
lds
jl
out
fwait
iret
xlat
sub
hlt
jg
retfw
mov
lahf
scas
dec
cmp
ins
outs
xlat
in
arpl
jno
rcr
inc
imul
jp
xor
inc
aas
fild
sub
push
(bad)
xor
out
aas
push
push
mov
movs
lock
out
or
jmp
mov
(bad)
fcmovnb
retf
addr16
jno
scas
jp
mov
pop
mov
icebp
push
icebp
fs
fsubr
mov
fst
inc
sub
ds
jne
push
add
test
popa
xchg
cmps
fsub
push
pop
ficomp
and
add
sbb
adc
rcr
leave
jl
(bad)
dec
loope
adc
add
push
fwait
leave
fmul
cmps
mov
push
pop
add
out
mov
push
xor
fnstcw
jmp
mov
cdq
mov
cmps
cld
sub
mov
loope
ret
cdq
adc
and
add
cmps
sbb
inc
mov
ins
mov
rol
(bad)
jmp
ins
add
xchg
cmp
add
outs
lea
jle
dec
dec
(bad)
jle
push
cs
mov
or
cmp
inc
sub
pop
and
push
sbb
jns
push
in
ret
xlat
pop
in
inc
cmps
or
sbb
mov
or
cmp
adc
lock
pop
mov
xchg
in
push
in
(bad)
xor
dec
shr
jecxz
icebp
outs
ret
sub
test
in
mov
sbb
adc
cmp
push
pop
ins
sbb
fcomp
add
dec
repnz
dec
leave
lods
push
(bad)
ja
pop
or
jl
test
xchg
outs
push
mov
xor
retf
imul
jno
push
mov
test
or
cmc
add
call
jne
adc
sbb
and
mov
dec
push
ins
adc
mov
pop
in
jns
loop
dec
push
push
xor
inc
ins
or
or
and
stc
out
add
sub
or
or
adc
aas
retf
dec
adc
or
fstp
pop
lds
pop
(bad)
into
or
pop
mov
sbb
cld
jo
(bad)
test
pop
xchg
lea
sub
sub
gs
addr16
push
mov
in
sub
push
shl
das
into
cs
jl
add
mov
cld
or
inc
inc
and
mov
sbb
pop
and
test
pushf
inc
sub
mov
sbb
jns
fs
push
jp
iret
shr
popf
sahf
in
scas
xor
mov
cmc
ins
(bad)
fs
xchg
jne
and
pop
ds
adc
sub
inc
xor
mov
mov
push
cmps
cmp
fisubr
mov
mov
outs
xchg
xor
(bad)
lock
cmp
clc
shl
outs
dec
pop
xor
mov
mov
stos
test
jmp
cwde
rol
pop
mov
jne
jge
das
imul
bound
mov
xor
sbb
and
test
xchg
mov
and
hlt
call
stos
sub
ret
dec
ds
jo
lea
push
mov
pop
and
(bad)
push
(bad)
cdq
lds
out
pop
mov
ja
aad
movs
fwait
stos
outs
iret
cmp
lahf
daa
inc
dec
jns
jge
in
add
cmp
pop
rcl
loop
inc
aam
lea
lock
mov
jle
iret
ss
jns
stos
scas
mov
sub
loopne
call
out
lods
push
and
test
sbb
sar
iret
xchg
push
ds
sahf
mov
add
pop
movs
sti
cmp
cmps
inc
std
mov
or
ds
xchg
cmc
xor
das
add
adc
lds
push
cmp
mov
int
mov
ficom
or
in
push
push
repnz
call
mov
outs
inc
cdq
xchg
lods
aad
add
pop
xchg
mov
retf
inc
ins
cmp
or
push
(bad)
mov
pop
jle
push
ret
mov
and
das
dec
adc
cmp
fidivr
dec
lock
hlt
and
in
or
div
test
push
out
loope
cmp
mov
cmps
sub
imul
mov
or
or
(bad)
mov
fnstsw
inc
jno
xchg
and
inc
cmp
xlat
pop
imul
les
and
xor
cdq
(bad)
pushf
outs
cwde
es
inc
add
xchg
or
dec
stc
push
adc
nop
xlat
mov
pop
jb
pop
sti
mov
cmp
or
push
cmps
fisttp
jp
loopne
pop
in
fild
stc
cmps
out
repnz
push
int3
test
push
jns
mov
test
sti
dec
and
pop
adc
cmp
shr
mov
imul
cmovae
orps
mov
ins
and
mov
and
inc
xchg
repz
cld
out
repnz
das
hlt
loopne
mov
push
leave
out
jnp
sbb
retf
pop
xor
pop
test
ins
je
mov
xchg
xor
xchg
inc
pop
sbb
jae
push
cmp
lea
lods
mov
imul
dec
jmp
std
scas
push
js
arpl
cs
pop
ror
lahf
and
retf
data16
mov
push
dec
mov
adc
hlt
cmp
add
int3
and
fs
cmp
(bad)
mov
mov
cmp
rcl
rol
sahf
ins
mov
repz
ins
mov
shl
movs
scas
add
test
mov
fisub
(bad)
rcr
sahf
mov
das
stos
aas
add
jle
dec
sbb
mov
dec
bound
mov
cmp
add
mov
mov
push
xchg
call
push
and
(bad)
(bad)
out
in
cld
cmp
push
push
neg
xor
pop
sub
xchg
and
bound
fdivr
into
mov
out
mov
sbb
or
(bad)
jecxz
sub
call
push
push
lods
(bad)
leave
out
mov
lahf
loop
jbe
mov
or
cmp
mov
out
fimul
in
adc
mov
jns
sub
mov
inc
or
or
out
xchg
fbstp
push
and
adc
mov
icebp
fs
cmp
shl
push
pop
stos
add
add
fst
fistp
push
inc
xchg
mov
sbb
sbb
movs
(bad)
repnz
push
jp
push
push
adc
je
nop
test
sar
xor
cs
mov
loope
xor
ins
inc
mov
jp
xor
outs
lea
add
inc
dec
xor
push
fiadd
jg
mov
xchg
(bad)
jmp
fwait
or
es
push
xchg
cmps
adc
aam
daa
inc
cmps
loope
fld
push
mov
scas
lock
adc
lock
pop
jg
out
and
mov
and
push
ins
imul
fist
and
sub
popa
lock
cdq
and
fst
mov
popf
test
nop
add
popf
jne
ret
pop
jp
hlt
scas
xchg
mov
mov
js
in
cdq
(bad)
dec
mov
pop
out
sub
mov
lock
xchg
out
push
and
(bad)
jl
dec
or
mov
and
inc
cdq
mov
pop
in
adc
ins
rcl
cmp
xor
imul
pop
leave
xchg
push
or
add
sbb
lea
dec
clc
(bad)
and
sub
ss
outs
jmp
cmp
lea
fdivr
cmp
test
out
loop
bound
mov
les
jecxz
mov
push
xor
xor
sub
fild
sbb
daa
aad
jne
fld
in
scas
movs
stc
(bad)
fld
aas
mov
call
in
out
mov
test
xor
popf
mov
cmps
div
jp
sbb
mov
pop
and
cmps
and
pop
test
dec
cli
loop
scas
call
jbe
test
test
inc
stc
sbb
je
pop
jle
movs
les
mov
jb
mov
popa
xchg
daa
icebp
cmovp
xor
popf
xor
mov
jae
dec
cdq
xor
adc
stos
(bad)
cmp
call
cdq
or
test
xchg
adc
mov
hlt
sbb
cmps
jmp
xchg
xchg
sub
mov
sti
push
cli
popf
cmp
ss
shr
push
cmps
pop
bound
fistp
sahf
(bad)
jbe
inc
call
mov
mov
jecxz
test
movs
in
stos
jns
rcr
xor
sub
(bad)
jge
mov
cmp
dec
in
inc
rcr
push
mov
pop
push
inc
retf
imul
ds
out
sub
dec
sub
vpshufd
hlt
xor
bound
sbb
jle
pop
btr
retf
retf
pop
inc
inc
shl
ret
sub
sbb
int3
mov
pop
cli
jne
ror
mov
xor
jmp
cmp
push
push
xchg
push
ds
out
xor
pop
rcr
fild
dec
iret
fistp
fimul
pop
mov
adc
dec
adc
jmp
lds
inc
jmp
sub
xchg
xor
add
cmp
pop
(bad)
xchg
push
mov
outs
cmps
mov
loopne
mov
data16
shl
sub
mov
fcomp
xchg
pushf
dec
mov
fisubr
loop
fnstenv
cmps
jle
cmp
(bad)
xchg
pop
and
and
adc
cmp
movaps
push
xor
(bad)
test
xchg
(bad)
push
loope
dec
fs
cmp
inc
sbb
stos
xchg
adc
sub
lock
je
(bad)
pop
sbb
fst
pushf
sbb
mov
mov
mov
test
js
popa
stos
into
scas
mov
mov
inc
outs
stos
pop
sbb
cmp
shl
ret
add
(bad)
dec
je
test
sub
push
int3
mov
cmc
cmps
jge
(bad)
and
lods
pusha
pop
sbb
(bad)
icebp
aam
and
daa
test
sbb
inc
jmp
dec
div
out
test
push
in
in
adc
and
movs
fwait
popa
shl
fwait
jl
pop
push
ror
sub
lock
sub
jecxz
adc
jmp
and
in
mov
enter
adc
and
out
push
lock
mov
mov
and
xlat
sbb
lds
jo
inc
push
push
fwait
dec
cmc
mov
inc
xchg
adc
scas
ss
cmp
pop
mov
jbe
cmp
add
scas
mov
in
sbb
xchg
cmp
mov
cld
adc
movs
imul
out
pusha
pop
mov
sbb
and
ss
jmp
mov
inc
cmps
test
popa
xchg
pusha
or
push
loopne
sar
mov
inc
lods
sbb
push
hlt
test
inc
(bad)
lahf
jns
ja
mov
(bad)
popf
rcr
test
add
retf
xor
jge
(bad)
push
dec
jno
out
(bad)
push
imul
jp
mov
daa
sbb
gs
pop
stos
into
push
mov
or
push
bound
retf
add
daa
int
mov
or
pop
repz
test
dec
sub
stos
ror
or
cmp
call
cmp
or
dec
lahf
mov
push
inc
inc
xchg
inc
ret
ret
or
inc
ja
xor
pop
addr16
lea
jnp
and
xchg
cwde
or
sub
mov
mov
mov
jge
out
add
out
popa
jmp
cs
jge
pop
sbb
lea
dec
mov
dec
sub
test
icebp
ins
add
mov
lods
lods
int3
pushf
push
sub
daa
inc
pop
xchg
mov
les
lock
xor
ins
push
pop
inc
ret
int
loop
fwait
pop
adc
mov
dec
and
popa
(bad)
pop
push
scas
movs
jmp
pop
aam
xor
mov
(bad)
mov
xor
cmp
jmp
xor
sub
mov
les
gs
xchg
arpl
adc
and
(bad)
int
popa
add
and
outs
shr
cmp
push
cli
add
sahf
xor
xchg
mov
and
test
push
push
mov
rcr
jnp
and
mov
fadd
ja
pop
cmp
add
repnz
inc
jp
adc
dec
xor
std
nop
retf
hlt
push
xchg
and
std
stos
cmp
xchg
ja
push
fdiv
sbb
scas
cli
jnp
lods
lds
jne
xchg
int
inc
add
mov
ja
xchg
mov
adc
movs
hlt
mov
cmp
stos
jb
adc
shl
inc
adc
xor
f2xm1
dec
xchg
enter
pusha
lock
mov
or
mov
push
rol
push
test
arpl
leave
popf
xor
xchg
cmps
jmp
mov
in
or
inc
add
pop
hlt
out
sbb
dec
adc
cmp
mov
cmp
aad
dec
and
jmp
or
add
cli
into
test
cmp
pop
xor
sub
inc
fcmovnb
sahf
push
inc
lods
call
cmp
outs
imul
adc
and
hlt
add
stos
in
jns
js
(bad)
xor
mov
ss
inc
arpl
cwde
fld
cmp
mov
rcl
push
stos
inc
fstp
fwait
mov
cwde
jbe
jnp
jle
cwde
retf
sbb
sbb
popa
cmp
add
cmps
mov
pusha
jbe
inc
dec
shr
jl
ds
ret
jl
xchg
rol
mov
sbb
sti
xchg
shl
cmc
pop
dec
mov
jb
int3
xor
(bad)
jo
cmp
stos
and
sub
push
outs
inc
add
adc
mov
mov
mov
push
push
lds
cmc
xchg
test
sbb
fs
out
mov
sub
cs
xchg
mov
movs
add
in
ret
in
push
mov
pop
or
cmp
(bad)
div
dec
pop
adc
adc
arpl
sbb
push
inc
mov
loope
movs
add
cs
mov
push
jmp
outs
dec
add
sahf
push
push
(bad)
out
montmul
cmps
inc
ins
xchg
add
imul
leave
shl
dec
cdq
mov
ss
jmp
inc
add
cmp
out
loopne
test
add
xchg
loop
and
push
shr
shufps
repnz
les
sub
push
loopne
xor
addr16
pop
sahf
mov
mov
retf
inc
mov
sbb
fist
push
inc
pusha
pop
into
cmc
in
fidiv
call
inc
(bad)
sbb
ret
add
scas
dec
pushf
mov
es
xchg
pop
or
ror
dec
out
adc
mov
push
outs
adc
push
call
loop
pop
ss
mov
push
push
xchg
fst
pop
ins
nop
xor
mov
mov
push
cwde
xchg
add
xchg
jae
cmp
das
cmp
sub
test
test
pop
cmps
or
stos
mov
or
xchg
add
daa
aaa
and
xor
lods
or
dec
into
pop
hlt
mov
jnp
ja
cmp
mov
je
fmul
mov
jae
adc
dec
cli
pop
loopne
ror
xchg
jmp
clc
jo
stos
cmp
cld
popf
loope
je
inc
cmc
push
sti
cmp
int3
xor
push
pop
rcr
mov
or
dec
add
jecxz
lds
ins
mov
sti
loope
sub
out
das
pop
mov
jp
cmp
mov
scas
mov
or
push
cmps
cwde
sahf
sbb
or
and
stos
or
lock
cwde
dec
shl
push
(bad)
and
shl
cmp
add
push
jo
or
pop
arpl
popa
mov
ins
and
add
sbb
xchg
(bad)
xlat
stos
pop
cwde
repnz
lods
push
jp
xor
(bad)
cmp
(bad)
or
mov
xchg
xor
lods
jo
jo
push
(bad)
gs
pop
ficomp
xor
dec
push
sbb
push
sbb
mov
sub
fld
add
ins
mov
(bad)
push
loope
in
jbe
dec
ins
mov
out
push
jle
adc
and
sub
add
mov
mul
mov
push
mov
fisub
cmp
aam
mov
xor
pushf
fcmovnb
iret
ret
popa
ss
loop
jmp
out
int
imul
dec
dec
pop
pop
xor
mov
push
cmp
xor
test
daa
sbb
xchg
popf
and
out
stos
mov
xlat
xchg
jne
xchg
repz
daa
aam
mov
sub
mov
push
test
sub
test
adc
push
pop
jae
push
retf
clc
add
and
pop
inc
sub
fbld
mov
cs
inc
inc
test
(bad)
push
clc
or
pop
mov
and
outs
push
sbb
xchg
xchg
arpl
or
cwde
rol
inc
jmp
or
ror
jp
inc
es
bound
inc
(bad)
push
dec
pop
mov
mov
jge
inc
sub
test
or
xor
ficom
ins
jmp
jb
les
add
retf
cmp
sub
xchg
push
retf
ret
stos
push
stc
dec
jecxz
(bad)
arpl
cwde
pop
les
stos
mov
fucomp
pop
je
add
mov
dec
jae
addr16
loope
sub
mov
adc
pop
loope
ret
test
dec
add
and
shl
cmp
sbb
bound
lea
pop
adc
and
adc
mov
push
fadd
sbb
inc
add
cmp
imul
pop
cmp
pop
cmp
adc
mov
xor
push
adc
xchg
mov
cmp
int
call
cmc
loopne
in
inc
out
arpl
xchg
arpl
ret
mov
scas
mov
outs
call
shr
ss
jmp
cmps
add
sub
call
(bad)
inc
jne
jb
or
shl
pusha
lods
jge
int3
push
pop
cmps
std
out
cdq
pop
inc
loopne
(bad)
out
nop
push
xor
mov
stos
xor
pop
hlt
mov
and
jae
adc
xor
mov
and
pop
jle
pop
mov
out
mov
mov
and
xlat
inc
sub
jo
sub
mov
or
nop
or
or
mov
fwait
daa
test
add
sbb
cmps
iret
add
add
mov
mov
and
popa
mov
sbb
ret
mov
mov
pop
ds
mov
sub
call
pop
or
nop
shl
push
scas
cmp
cmp
popa
xor
and
adc
loopne
daa
push
out
(bad)
imul
sbb
test
or
pushf
ins
add
imul
shl
fisttp
push
mov
outs
scas
sub
in
jno
mov
pop
hlt
mov
sbb
aaa
sub
imul
mov
call
push
mov
mov
xor
repnz
stos
jl
loopne
loop
push
fmul
and
(bad)
enter
and
dec
dec
sahf
addr16
push
cmp
aas
inc
fwait
xchg
mov
into
jg
test
jecxz
leave
bound
sub
repnz
in
ja
jmp
not
ins
ja
adc
bound
dec
push
ja
outs
add
es
cmp
fnstenv
mov
xor
test
fstp
jae
stos
cdq
das
mov
jp
mov
push
(bad)
(bad)
fwait
jg
movs
and
daa
adc
call
retf
push
(bad)
xchg
repnz
add
icebp
enter
jg
inc
outs
xor
jo
out
inc
stos
aad
push
adc
push
inc
rol
fld
bsf
pop
xchg
cmp
icebp
push
sub
outs
pop
sub
add
mov
add
mov
lahf
rcr
pop
push
fstp
shr
sub
push
stos
imul
rol
xchg
mov
sub
cmps
and
test
xchg
cmp
inc
ins
or
mov
sbb
lea
xor
xchg
xor
(bad)
pop
or
pop
fnstsw
pavgb
pop
mov
jmp
and
pop
bound
sbb
cmp
(bad)
popf
jmp
push
pop
stc
sub
or
mov
xor
pop
xor
outs
xlat
mov
mov
or
cld
dec
ss
xor
ds
adc
jle
xor
retf
add
xor
out
or
push
ins
cmp
out
loopne
mov
pop
imul
test
cdq
mov
aas
out
lahf
pop
add
or
inc
pop
mov
mov
pop
aad
jbe
out
push
push
add
xchg
loopne
cmp
cmp
bound
fld
sub
mov
mov
in
jae
stos
lds
fstp
sub
xor
pusha
fimul
push
fucomp
in
or
adc
push
mov
icebp
mov
mov
cmp
nop
xor
adc
fwait
dec
mov
sbb
mov
mov
fadd
xor
ss
fcomp
les
sub
or
lahf
jns
xor
jb
cmc
xchg
or
jge
call
daa
out
jnp
or
dec
xor
mov
lock
xchg
or
pop
pushf
xchg
mov
rcr
fadd
xchg
icebp
test
xor
test
mov
shr
cdq
fld
jno
ror
mov
ss
out
push
ss
xchg
popf
mov
je
cs
in
pop
and
push
out
pusha
inc
sbb
in
xor
mov
push
mov
or
sti
rcl
ss
aaa
cli
and
call
mov
sub
pop
(bad)
in
cmp
dec
jmp
sbb
push
(bad)
iret
leave
xor
fsubr
ret
jb
xchg
adc
in
xchg
push
mov
lds
aam
push
sbb
outs
loopne
inc
and
imul
aas
mov
fsub
out
jnp
out
pop
fldcw
pop
mov
or
cmp
sub
xchg
fild
jns
mov
add
jecxz
int3
mov
mov
imul
or
push
jg
or
inc
ret
adc
cmovg
stos
sub
stc
fdivr
add
movs
daa
jl
mov
lea
adc
jmp
inc
and
mov
jg
inc
sbb
arpl
push
bnd
ss
fs
test
add
lods
and
(bad)
dec
push
or
sbb
mov
mov
fsubr
cmp
ret
into
nop
add
aaa
jl
jb
or
mov
test
inc
mov
add
ins
dec
ins
out
int3
xchg
push
ja
jg
xchg
xchg
fs
mov
pop
sub
fist
shr
(bad)
xchg
inc
sub
std
mov
pop
mul
xor
mov
popf
jecxz
add
jl
nop
mov
adc
and
inc
popa
xchg
mov
xchg
and
outs
and
xchg
outs
add
enter
ins
xor
(bad)
mov
or
(bad)
dec
mov
mov
mov
mov
rol
push
dec
cmp
cmp
jmp
inc
outs
imul
in
mov
mov
ss
push
and
xor
dec
xchg
adc
dec
xchg
sub
aas
mov
jno
pop
cli
outs
test
jne
xchg
inc
xchg
xor
bound
mov
mov
lahf
cmp
addr16
mov
fcmovbe
add
sbb
and
fld
pop
fwait
ins
or
push
(bad)
and
and
arpl
push
sbb
add
cmp
stos
and
imul
arpl
and
cwde
push
in
stos
push
adc
sahf
je
adc
dec
jmp
aas
and
es
mov
adc
add
dec
repz
pop
push
mov
mov
pushf
mov
sbb
fadd
sbb
std
jae
jl
xor
retf
aaa
xor
mov
inc
loope
scas
pop
jo
adc
adc
jmp
cmp
sub
test
mov
call
sbb
aas
xchg
mov
and
hlt
repz
pop
(bad)
push
jmp
inc
imul
adc
sbb
imul
inc
out
ds
lea
mov
test
adc
(bad)
lods
sahf
nop
mov
stos
sbb
pop
pop
sbb
or
or
push
mov
add
inc
cwde
imul
mov
fcomp
mov
xchg
sub
sar
jb
xchg
inc
fsub
jecxz
push
std
and
retf
cmp
sbb
hlt
jp
cmp
retf
push
mov
ds
sar
movs
gs
bnd
sub
xor
jg
ins
aaa
scas
mov
and
(bad)
loope
sub
test
outs
mov
lahf
pop
popf
std
jo
cmp
or
cmp
mov
test
xchg
adc
gs
mov
scas
push
rcr
js
in
mov
(bad)
in
add
push
or
mov
cli
call
pop
jmp
jle
imul
ins
jns
nop
pushf
aad
jmp
cmps
in
xchg
leave
mov
enter
pusha
hlt
dec
jmp
leave
int3
ins
ins
fist
sbb
inc
movs
cmp
ins
popa
push
xor
mov
in
ss
mov
call
test
out
nop
clc
ror
fnstsw
pop
mov
into
sbb
clc
adc
leave
add
out
jb
adc
rcr
and
pop
ja
xchg
lahf
fwait
push
aam
lds
inc
loope
hlt
adc
xchg
hlt
stos
cmp
mov
push
sub
push
cmp
(bad)
aaa
dec
cs
mov
mov
push
add
push
rcr
xor
add
push
in
and
test
es
rcr
push
fwait
mov
mov
sahf
inc
xor
push
mov
repnz
xchg
push
pop
rcl
and
adc
sar
imul
es
mov
xor
ins
ins
sub
dec
std
cmp
xchg
inc
xlat
or
cli
xchg
rol
pushf
cmp
push
jge
hlt
je
jb
shr
xor
adc
outs
or
push
pop
xchg
jno
call
xchg
pop
xor
mov
pop
lahf
lods
rcl
xor
fs
pop
cmp
pop
inc
sbb
sub
movs
inc
or
in
cpuid
inc
test
mov
es
push
mov
and
dec
mov
cmp
ins
jne
sub
inc
xor
or
div
test
pop
out
xor
(bad)
aad
push
xchg
or
sbb
mov
mov
out
cld
rcl
jbe
shl
rcl
and
xchg
or
or
xor
sub
adc
push
xor
gs
imul
pop
in
leave
out
lods
mov
xchg
xor
dec
cli
call
mov
inc
xchg
popf
sub
sub
adc
not
lock
test
gs
mov
dec
push
cmc
out
mov
retf
aam
or
inc
xor
daa
mov
push
mov
ret
xor
jl
test
std
data16
mov
xor
inc
mov
nop
xchg
pop
sbb
xor
mov
mov
sub
enter
pushf
outs
dec
idiv
leave
mov
in
(bad)
jbe
and
loope
(bad)
fsubp
mov
or
aad
cmovl
lock
ret
rol
bound
aaa
mov
jg
or
test
dec
mov
outs
(bad)
fsubr
and
mov
fistp
sbb
add
loopne
mov
mov
ins
push
das
out
mov
mov
dec
fwait
movs
cmps
leave
ret
inc
fld
inc
gs
loop
add
push
jbe
sub
out
jge
or
pop
repz
mov
or
inc
ficomp
aam
fwait
lds
mov
jae
or
loope
inc
dec
or
xchg
je
xor
pop
popa
dec
add
sub
jg
pop
mov
xchg
and
or
adc
(bad)
fdivr
sti
add
sub
cmp
and
xlat
fistp
ja
mov
daa
popa
adc
rcl
mov
pop
adc
inc
in
in
fwait
movs
or
xor
nop
aam
or
pop
inc
pop
cdq
loope
sbb
jo
lds
cmps
in
inc
sub
push
jno
dec
add
mov
fwait
xor
test
jbe
pushf
ss
add
add
adc
and
and
sti
lods
sub
dec
int3
data16
xor
push
mov
sbb
push
popa
loopne
jl
sahf
mov
xchg
daa
dec
icebp
outs
nop
loopne
enter
retf
(bad)
fsubr
stos
leave
sahf
daa
inc
jmp
xchg
jmp
push
pop
ins
jb
jns
xor
outs
cdq
inc
add
cmp
scas
ret
cmp
jnp
out
in
pop
jge
mov
scas
ret
mov
pop
push
scas
and
cmps
mov
add
mov
mov
out
nop
add
stos
jne
or
inc
movs
pop
mov
sbb
cmp
test
mov
int
push
push
fild
test
dec
cmps
mov
int
sub
aam
iret
dec
mov
dec
ins
in
cmp
scas
scas
sub
pop
pop
ret
cmps
aas
pop
fistp
movs
push
je
xchg
jbe
popf
dec
stc
dec
sub
xchg
ins
fs
sbb
loope
test
aaa
inc
jb
cmps
jnp
dec
add
clc
js
sti
jbe
pop
sbb
add
xor
push
dec
mov
dec
lahf
and
mov
(bad)
add
push
mov
xor
sar
pop
out
and
sbb
pop
inc
push
push
jns
(bad)
stos
xchg
jnp
les
imul
and
dec
xor
jno
out
retf
popa
cmps
clc
or
mov
int3
xor
and
push
push
and
add
call
pcmpgtb
xlat
inc
cmp
scas
jo
lahf
and
cmp
es
dec
outs
shl
mov
movs
push
ficomp
inc
pop
aad
repz
add
pop
les
push
inc
stos
outs
mov
dec
shr
iret
cmps
push
fdiv
iret
sbb
sahf
shl
add
cld
push
inc
jle
push
loop
nop
int3
dec
or
mov
arpl
(bad)
mov
mov
sbb
mov
stc
mov
jle
jl
ja
call
jbe
push
push
push
mov
mov
jo
aam
jle
add
loop
leave
(bad)
sub
inc
sub
and
sub
cmps
in
sub
add
(bad)
inc
push
xor
outs
pop
sub
out
(bad)
or
sub
data16
inc
dec
jae
fmul
repz
scas
clc
test
cmp
mov
push
shl
fwait
push
aas
and
jmp
cmp
jmp
rol
nop
pop
cmp
(bad)
adc
dec
xchg
ret
jae
adc
adc
out
or
movs
lahf
mov
jbe
xchg
mov
pop
and
push
push
mov
cmp
adc
in
inc
dec
inc
test
cmps
outs
outs
(bad)
shr
sbb
sti
xor
fwait
cdq
ret
shl
nop
out
ret
out
mov
jp
dec
stos
popf
dec
mov
sbb
pop
adc
cmp
das
test
xchg
mov
sahf
dec
test
cmp
sbb
and
aad
loopne
inc
mov
jmp
into
xor
push
adc
pop
adc
pusha
enter
pop
call
add
fisttp
pop
cmp
sti
in
pusha
jmp
test
pop
pop
mov
sub
xor
push
add
scas
sahf
adc
stos
sub
and
(bad)
mov
inc
xor
aaa
xchg
mov
sub
repnz
aam
loope
cmp
mov
pop
mov
cmp
xchg
(bad)
int
jo
call
arpl
xor
ds
push
daa
xor
gs
cmc
popa
dec
push
xchg
and
mov
push
sbb
rol
mov
mov
icebp
cmovae
in
int3
fs
dec
lock
lea
sti
mov
mov
fsub
enter
movs
mov
or
sub
cld
rcl
sbb
sub
xchg
dec
test
add
xchg
inc
and
inc
out
in
int3
(bad)
jge
cld
fstp
outs
sbb
jmp
xor
cmps
pop
jae
inc
xchg
fstp
(bad)
mov
fisttp
stos
mov
push
mov
test
add
retf
je
pop
xor
ror
(bad)
push
jne
dec
jae
pop
gs
cld
ret
mov
jne
aaa
pop
push
fwait
and
mov
les
cmc
ja
ins
sub
into
xor
or
mov
push
inc
fld
inc
clc
and
or
mov
lods
jle
retf
in
test
nop
dec
cmp
je
xor
ss
adc
xlat
pmaddwd
mov
adc
dec
shr
jmp
in
ins
sub
mov
mov
dec
dec
dec
pop
add
gs
pop
adc
pusha
bound
dec
pop
fimul
dec
or
bnd
mov
lahf
mul
inc
mov
pop
retf
(bad)
push
jmp
dec
mov
aaa
(bad)
xor
mov
gs
xchg
loopne
lock
test
sbb
dec
pop
out
gs
shl
dec
push
shr
sbb
push
sub
(bad)
ss
test
jae
jmp
sub
sub
fsubr
rcl
sti
add
xor
push
adc
fcmovnbe
call
loope
and
xor
fsubr
jo
sub
inc
mov
repz
ja
inc
push
mov
cwde
push
cmps
movs
jmp
jp
xchg
mov
pushf
push
pop
and
mov
mov
cdq
into
std
scas
lea
jo
jp
jbe
adc
mov
cli
push
or
lahf
sbb
test
cdq
pop
xchg
push
iret
nop
inc
cmp
mov
call
into
in
push
sti
adc
jle
scas
ret
iret
ret
cmps
sbb
adc
xor
retf
dec
imul
fnstsw
pop
adc
fcmove
cwde
sub
or
vmwrite
into
retf
mov
xchg
cmp
dec
adc
adc
jno
xor
(bad)
jnp
jmp
push
aad
ss
(bad)
std
std
cmp
mov
xchg
pop
idiv
xlat
dec
or
and
imul
dec
in
mov
leave
mov
sub
jmp
ins
mov
mov
and
adc
sub
outs
test
pop
inc
jo
fdivr
xor
pusha
(bad)
sub
and
stos
pusha
mov
cmp
pusha
jl
sahf
mov
pop
mov
aam
xor
arpl
loopne
jne
ins
mov
lock
add
xor
dec
jp
in
test
mov
es
sub
dec
fstp
mov
or
sbb
mov
add
mov
outs
pop
xchg
or
shr
repnz
shl
std
bound
shl
rcl
xor
out
pusha
sbb
div
pop
jb
pop
iret
out
sbb
ja
icebp
popf
xchg
xor
push
sub
pop
stos
mov
ins
mov
xchg
ins
sbb
adc
sub
and
movs
retf
mov
mov
lods
add
imul
sub
mov
ss
sbb
out
push
jne
fwait
pusha
push
stc
xchg
add
sahf
mov
cmp
lahf
mov
dec
mov
loope
loop
adc
outs
shl
inc
shl
hlt
mov
push
sub
and
mov
out
enter
jg
repnz
xor
into
xchg
(bad)
int
ins
jo
iret
inc
out
enter
pop
push
(bad)
ret
fldcw
nop
mov
loopne
mov
jb
pop
cmps
push
adc
shr
add
mov
and
(bad)
pop
fbld
inc
inc
idiv
mov
xor
xchg
or
jnp
jae
jle
xchg
xlat
std
data16
outs
test
push
out
jne
out
into
cmc
(bad)
lahf
test
cmp
jbe
inc
shl
add
scas
and
loopne
ss
out
mov
fisubr
dec
cmp
movs
(bad)
repz
jle
out
lds
loope
test
daa
in
data16
ins
test
sub
jle
addr16
rcr
add
xchg
repnz
jmp
aad
dec
jno
pop
(bad)
mov
cmps
xchg
push
jmp
int
bound
pushf
mov
push
xchg
stc
push
inc
xchg
inc
test
inc
xor
pop
retf
sbb
sbb
ret
and
lods
(bad)
sub
add
icebp
add
scas
push
push
or
adc
retf
inc
mov
mov
rcl
jmp
cwde
retf
add
inc
(bad)
mov
gs
dec
xor
jp
pop
cwde
daa
rcl
ds
mov
or
dec
aam
retf
repnz
mov
fidivr
push
inc
and
enter
mov
or
ficomp
hlt
stos
repz
data16
cmp
outs
ins
(bad)
lods
les
imul
sar
pop
push
sub
dec
sub
mov
mov
lock
aad
adc
cmp
sbb
gs
std
repz
or
sar
dec
push
sbb
pop
xor
inc
or
iret
inc
mov
push
sti
xor
loope
xchg
mov
(bad)
les
out
aam
fisub
jns
lahf
es
push
sbb
and
dec
int3
scas
sahf
mov
aam
pop
xchg
stos
ja
inc
or
xor
das
push
sub
(bad)
and
push
cmp
data16
sbb
repz
sub
pop
mov
sbb
bound
xor
mov
add
add
pusha
pop
lea
push
ret
dec
test
push
pop
and
adc
pop
mov
add
ror
pop
mov
dec
ja
xchg
cmps
in
cmp
outs
loope
pushf
imul
nop
mov
scas
sub
outs
inc
or
pop
outs
xchg
(bad)
cmp
add
or
shl
stos
je
repnz
dec
cdq
adc
mov
mov
(bad)
push
pop
lods
push
rol
sbb
dec
ja
hlt
xchg
add
lahf
test
sbb
jg
cmps
cmp
mov
inc
inc
mov
dec
cs
dec
stos
cmps
adc
data16
pop
xor
cmp
shl
push
mov
nop
pop
fisttp
add
cmp
dec
cmp
adc
mov
fcomp
sbb
(bad)
and
jb
repz
add
push
cmp
push
aam
hlt
inc
mov
push
push
cmp
cmp
push
out
or
jle
jmp
jo
jle
outs
loope
sub
cmp
and
jge
fstp
sbb
cmp
dec
xchg
mov
and
in
out
ret
gs
(bad)
adc
pop
mov
dec
mov
inc
sar
add
xchg
inc
mov
jbe
push
dec
loop
nop
daa
dec
cli
push
mov
sub
fsubr
movs
mov
mov
out
addps
not
in
ins
jns
es
call
lds
or
icebp
and
push
(bad)
test
adc
push
add
fisttp
xchg
add
int3
sar
sti
mov
sbb
movs
mov
fwait
ss
jne
or
mov
xchg
std
popa
dec
cmp
inc
mov
dec
cmp
call
or
xor
xchg
jnp
ret
dec
jae
scas
mov
imul
movs
test
popa
mov
sti
mov
mov
push
cmps
cmp
lods
in
or
or
(bad)
or
ds
popa
int3
sahf
mov
cmp
in
add
daa
call
add
fwait
repnz
pop
sbb
cli
xor
dec
cmp
gs
adc
xor
push
push
add
lods
jb
and
pop
mov
cli
out
(bad)
mov
cmp
push
iret
mov
pop
and
je
ins
pop
ds
push
mov
cli
mov
pop
jle
call
push
hlt
adc
dec
dec
adc
pushf
scas
or
jb
movs
pop
xchg
xor
fild
cmp
sti
pop
dec
test
sahf
xchg
ss
add
mov
repnz
repnz
push
dec
(bad)
pop
dec
stos
jns
xchg
aad
cmp
icebp
lahf
xchg
push
pop
mov
stos
(bad)
outs
cmp
pop
repnz
push
xor
loope
mov
aaa
mov
sbb
cs
or
ss
mov
mov
push
test
add
fild
jle
and
dec
int
push
adc
push
sar
js
mov
sti
xchg
dec
mov
mov
xlat
fidivr
jne
add
les
jo
jg
cmp
or
(bad)
shl
jnp
pop
push
ja
and
popa
hlt
xchg
sbb
dec
pop
jge
jne
rcr
pop
sub
push
jg
out
aaa
fisttp
test
es
ficomp
scas
xchg
cmp
out
cmc
dec
push
pop
cmp
cmps
mov
mov
rol
cmp
push
cmps
rcr
mov
xchg
ins
jge
add
sbb
cmp
mov
sar
dec
test
repz
rcr
into
jmp
fadd
jb
aad
aaa
mov
push
mov
cmp
fisub
xchg
(bad)
xchg
dec
movs
mov
xchg
adc
ds
scas
lea
add
cmp
leave
mov
sar
popa
push
push
repz
mov
xchg
adc
sub
jns
push
std
repnz
mov
mov
loopne
sti
adc
xor
lods
out
mov
sar
mov
movs
xchg
add
dec
les
xor
in
inc
pop
mov
mov
jge
ret
sub
or
imul
mov
je
or
aaa
sbb
clc
or
sub
jecxz
int3
mov
loope
sub
xchg
loop
lahf
call
and
add
movs
nop
loope
ficom
shr
or
jns
and
pop
cwde
lock
inc
cdq
sub
loope
mov
dec
fistp
xchg
push
and
clc
lds
jp
outs
or
cmps
adc
in
and
xor
push
sbb
pusha
adc
mov
sbb
pop
scas
xor
std
dec
mov
in
cwde
in
loopne
imul
(bad)
popf
dec
aad
inc
add
js
call
gs
push
inc
jp
(bad)
sbb
mov
fcomp
add
movs
ror
cs
lea
add
cmps
or
mov
cwde
mov
and
mov
sbb
sub
xchg
push
js
mov
jno
int
sar
jg
leave
test
loopne
imul
push
scas
mov
aam
jno
sbb
cmp
adc
mov
lea
jne
dec
cmps
mov
jae
jnp
sub
fistp
stos
nop
jae
cmps
and
shl
push
and
clc
ret
pushf
push
cmp
ret
dec
dec
sbb
mov
xchg
fld
sbb
loopne
leave
push
pop
movs
dec
dec
add
mov
jne
shl
push
pop
sub
jae
pusha
inc
dec
int3
test
outs
jg
inc
cli
inc
scas
call
lods
in
mov
push
test
enter
xchg
dec
movs
sbb
ror
outs
ret
adc
mov
xor
cld
xor
inc
fs
lods
cmp
jp
dec
addr16
or
aas
jle
(bad)
repz
test
inc
add
retf
jg
repnz
enter
cmp
jge
jecxz
shr
jmp
inc
and
sahf
fisttp
add
or
cmp
stos
out
cmp
out
aaa
xor
inc
jns
push
inc
push
jmp
cmp
and
bound
xchg
lea
ins
fiadd
adc
push
outs
and
add
push
mov
hlt
lds
and
(bad)
jp
adc
ss
cld
adc
sbb
(bad)
jae
(bad)
sti
or
mov
xchg
lods
jmp
in
adc
cs
adc
mov
mov
retf
mov
cmps
sub
mov
retf
imul
pushf
adc
lods
rcr
inc
jmp
jg
pop
andps
stc
mov
lea
add
pop
movs
loopne
xor
push
dec
mov
add
rcl
icebp
aaa
repz
clc
iret
inc
aam
push
outs
xchg
cmp
shr
or
in
repz
imul
xchg
mov
jg
into
pop
pop
imul
in
mov
addr16
rcr
daa
stos
ja
sbb
mov
jmp
jle
mov
adc
cmpxchg
ds
inc
push
xor
xor
xchg
ja
jno
retf
in
lahf
(bad)
mov
stc
arpl
dec
xchg
cli
xchg
fbstp
sub
cli
aam
cmp
scas
pop
test
or
mov
dec
repnz
add
mov
xor
dec
push
sub
mov
cmc
in
pop
xlat
neg
add
pop
(bad)
fcmove
out
in
outs
test
sbb
sbb
add
pop
xchg
into
aad
push
(bad)
and
mov
daa
jb
push
or
in
icebp
lods
push
dec
dec
xor
jne
sub
(bad)
mov
daa
das
and
ins
aas
je
cmps
inc
int
pop
adc
(bad)
mov
in
enter
enter
pop
gs
add
sbb
add
mov
(bad)
sub
jo
hlt
pop
outs
or
aam
ret
push
or
jle
xchg
ss
push
ret
jb
push
popa
in
xor
retf
push
pushf
daa
dec
push
push
add
add
jle
scas
mov
out
dec
push
nop
loop
xchg
add
sar
loop
inc
or
mov
imul
pop
sbb
xor
sub
in
cmp
jle
cmps
xchg
jmp
pusha
jno
mov
fcomi
lods
sar
jo
jecxz
aaa
sub
jbe
(bad)
sub
arpl
jns
jge
neg
jo
and
je
push
in
cmps
pop
mov
movmskps
mov
xor
push
mov
mov
movs
push
adc
adc
jp
inc
mov
lods
mov
jnp
je
cmp
fs
push
sbb
ret
sub
cmp
jne
and
xchg
inc
out
stos
fisttp
add
push
fs
call
jp
jge
mov
jbe
bound
stos
pop
movs
div
push
lods
lahf
push
push
push
or
jbe
pop
cmp
jb
and
dec
sub
and
in
aam
add
mov
pusha
(bad)
xor
xchg
xlat
pop
mov
sar
push
or
jo
cld
push
pusha
mov
dec
leave
fstp
sub
repnz
push
sbb
push
jp
cmp
inc
push
ins
push
stos
jae
inc
pop
leave
xchg
aas
add
aaa
xchg
ds
int
mov
leave
xchg
mov
adc
pusha
mov
mov
movs
sbb
les
pop
push
icebp
or
pop
cmp
cli
sub
repz
jo
stos
jno
adc
aaa
es
adc
movs
jo
stos
lea
mov
test
je
(bad)
jne
daa
pop
test
sub
xor
test
adc
popa
hlt
cmp
stos
push
add
or
cmp
mov
xlat
xchg
add
pop
das
ins
pop
mov
and
callw
jb
mov
pop
outs
mov
adc
push
cld
xchg
mov
rol
sub
mov
stc
xor
dec
jne
loop
mov
jg
outs
jae
xchg
xor
test
push
pop
push
mov
mov
xor
mov
(bad)
jmp
dec
not
xor
popa
or
sub
cli
cmp
cmp
and
sbb
shl
fdiv
enter
or
data16
sahf
or
pop
jg
jp
daa
lock
outs
ins
cmps
sbb
jbe
(bad)
fistp
dec
inc
push
pop
sub
mov
cli
adc
or
dec
jno
jmp
(bad)
pop
lea
cmps
dec
jp
cmps
sbb
retf
ins
xor
rcl
js
and
cmp
or
sahf
ficomp
int
cmp
call
cmp
fstp
mov
icebp
inc
pop
jo
pop
div
xor
bound
mov
cmp
test
jge
pop
xchg
mov
pop
into
dec
je
mov
ds
not
or
xchg
cdq
daa
and
sub
lahf
das
sub
mov
rcl
xor
push
shl
(bad)
add
nop
inc
aaa
lods
fcom
call
retf
mov
test
ins
je
jge
push
mov
adc
cmp
pop
fs
retf
ins
mov
push
repz
(bad)
push
pushw
sbb
loop
jmp
dec
scas
movs
mov
fwait
xor
int3
adc
shr
rcr
ror
enter
xchg
cmp
mov
je
rcl
aaa
nop
nop
sbb
mov
dec
mov
jno
mov
out
mov
leave
mov
jmp
loope
out
shl
push
push
sbb
scas
pop
cmp
ins
xor
lahf
loopne
pusha
idiv
mov
(bad)
push
jl
sub
pop
cmp
add
xor
shl
sub
dec
xor
ja
inc
mov
sub
pop
aad
outs
scas
xor
cld
push
mov
ret
dec
lods
imul
sbb
sub
daa
(bad)
stos
sbb
lock
pop
push
(bad)
in
call
fldcw
in
pop
sbb
scas
mov
xor
cmc
lods
xchg
and
fistp
pop
dec
pop
hlt
inc
jle
dec
fnstsw
xor
cmps
fs
pop
call
push
fisttp
pop
push
stos
sti
sti
fwait
gs
push
adc
cmps
fild
jmp
test
in
fild
mov
jo
(bad)
jns
rcr
push
sub
and
call
mov
mov
loopne
jae
xor
cdq
mov
pavgw
outs
jnp
and
shl
int
arpl
loope
fsubr
aaa
dec
ins
mov
inc
or
xchg
movs
stos
(bad)
mov
push
mov
xor
xchg
outs
cmp
push
push
arpl
and
and
icebp
es
movs
cmps
in
arpl
cmps
rcl
adc
in
add
sbb
adc
jno
inc
jbe
sub
or
arpl
cld
and
ret
(bad)
push
mov
mov
aad
sahf
das
pusha
arpl
stos
jmp
and
and
in
out
jo
mov
sbb
push
popf
pop
in
ins
pop
rol
jle
and
add
sub
jmp
icebp
fcmovne
clc
ficomp
mov
adc
push
lahf
xchg
ss
adc
and
popf
das
fsubr
cmp
mov
mov
and
outs
jae
xchg
repz
adc
pop
mov
and
mov
xchg
clc
stc
mov
or
repnz
test
push
cmps
cli
pop
leave
outs
stos
or
cmp
pop
fwait
jb
mov
xor
jle
mov
les
pop
(bad)
jmp
push
add
mov
dec
mov
stos
lds
sub
int3
retf
sbb
(bad)
xchg
adc
loope
aaa
pop
pop
mov
minps
out
mov
and
fiadd
pop
cmps
nop
je
mov
push
jne
popa
mov
aad
bound
clc
ror
dec
sbb
(bad)
xor
jno
mov
xchg
mov
inc
push
inc
ret
mov
test
inc
fimul
sbb
sub
out
xchg
in
ficomp
outs
add
outs
call
in
and
jo
add
jecxz
fcom
jae
ins
push
xchg
jno
pop
sub
(bad)
lock
jecxz
fiadd
xlat
(bad)
and
es
sub
jmp
rcl
push
and
and
sti
or
lahf
or
and
pusha
fwait
aas
sbb
xchg
adc
jns
add
mov
push
sub
imul
ins
cdq
enter
fild
std
jmp
sub
test
dec
imul
ins
call
adc
sbb
movs
pop
cmp
cs
popa
mov
mov
jbe
cld
popf
lahf
aaa
xchg
pop
pop
loop
ss
(bad)
inc
and
repz
retf
stos
in
mov
xlat
pusha
xchg
sub
push
dec
ds
push
xchg
jmp
mov
(bad)
push
(bad)
aas
loop
stos
es
imul
mov
repz
clc
adc
xlat
mov
xchg
lahf
jnp
cld
enter
push
lea
add
stc
fcomp
shr
jbe
das
sbb
dec
push
lods
inc
(bad)
outs
ins
jecxz
std
lods
ja
out
stos
fldenv
call
adc
sar
in
dec
add
aas
fwait
ins
(bad)
cld
cmc
xchg
adc
stc
push
ins
cmps
xchg
xchg
in
dec
js
jp
and
ins
lahf
shl
pop
push
mov
xor
ret
leave
add
div
retf
dec
mov
pop
out
mov
push
dec
jl
mov
mov
les
xor
stos
(bad)
stc
inc
cmp
out
daa
std
xchg
(bad)
movs
int
cmp
sahf
mov
pop
into
ret
push
into
dec
xchg
push
sub
jno
hlt
stc
and
clc
cmovne
in
and
aas
or
add
les
(bad)
and
rol
call
xchg
mov
sbb
pop
in
add
gs
cdq
and
test
mov
jle
loope
xor
dec
mov
sbb
and
das
jno
aaa
inc
jne
push
shr
add
cmp
lds
mov
push
out
cli
push
mov
iret
shl
cli
popa
pop
mov
arpl
leave
jle
xlat
sahf
(bad)
adc
cmp
pushf
dec
stc
loope
dec
popa
mov
repz
into
in
je
fnstenv
fsub
out
dec
(bad)
sub
jecxz
mov
pop
out
jl
retf
xor
mov
movs
mov
add
sahf
(bad)
mov
js
xchg
inc
shr
jg
cmp
clc
add
push
movs
rol
addr16
mov
cs
and
adc
and
xor
mov
cmp
leave
jo
pop
les
push
mov
(bad)
or
and
ret
hlt
jl
dec
loope
lahf
xlat
push
movs
cmp
shl
pusha
xchg
inc
outs
pop
mov
or
iret
or
call
stos
fdivp
sbb
test
hlt
sbb
jl
test
enter
inc
mov
cmp
mov
mov
lds
cmp
mov
mov
mov
repnz
call
xchg
test
icebp
pop
loopne
and
fwait
jo
mov
(bad)
xchg
(bad)
inc
pop
dec
test
clc
(bad)
xchg
loopne
mov
in
jge
mov
push
das
int3
add
lahf
js
(bad)
xor
leave
add
call
adc
jae
scas
sub
fisttp
mov
stos
sub
adc
fwait
or
out
popf
pusha
xchg
in
in
sub
mov
fild
inc
(bad)
pop
xchg
ret
outs
call
or
fwait
pop
cli
pushf
jbe
xor
inc
add
popf
daa
ins
test
les
push
push
arpl
xchg
int
popa
mov
ror
pushf
or
sbb
(bad)
js
xlat
xor
cdq
fnsave
adc
cmp
dec
loopne
movs
pop
or
sbb
sbb
test
popa
(bad)
sahf
xor
or
sbb
mov
aad
dec
or
pushf
ds
js
cwde
rcr
push
jno
sbb
jge
retf
xchg
pop
and
mov
retf
push
adc
retf
cs
inc
pop
loopne
jmp
es
or
clc
in
add
lods
lds
xchg
add
scas
xchg
movs
inc
xchg
add
pop
lods
inc
repz
mov
jge
pushf
lock
mov
add
pop
or
xchg
into
mov
xor
cmps
shr
fldcw
inc
ret
(bad)
in
jge
jp
cmps
sub
dec
ficom
(bad)
sbb
or
inc
jne
push
aad
cmp
rcl
aaa
add
in
mov
dec
loop
scas
fimul
dec
rep
sahf
jmp
mov
add
xchg
inc
sbb
mov
sahf
mov
xchg
ss
mov
test
or
adc
lods
aaa
stos
xchg
or
cmp
sbb
test
xchg
shr
cld
in
adc
add
std
xchg
retf
jno
jge
inc
in
pop
shl
test
pop
test
push
pushf
dec
rol
pop
push
xchg
push
mov
int3
out
imul
retf
ja
mul
mov
arpl
mov
mov
mov
cmp
mov
jmpw
push
and
inc
ss
jbe
in
pop
mov
call
dec
mov
stc
dec
dec
sub
and
mov
arpl
inc
and
sbb
push
push
push
repz
dec
push
outs
mov
aaa
add
push
sbb
mov
cmp
pop
push
test
push
inc
pop
rcr
sub
outs
ror
call
data16
or
fidiv
pop
xlat
in
or
push
shr
shl
and
ror
pop
std
test
(bad)
lock
cld
add
fsubr
aaa
dec
mov
fs
push
out
sahf
enter
push
iret
mov
(bad)
adc
mov
pop
or
mov
xor
fild
mov
imul
in
pop
rcl
jno
cmp
adc
loop
pusha
lea
jb
inc
lods
repnz
in
pop
js
push
jmp
adc
je
xor
xchg
mov
retf
jle
fild
int
adc
in
cli
sub
push
mov
hlt
mov
popa
jns
and
btc
or
out
mov
or
sbb
sbb
loopne
mov
mov
enter
retf
adc
(bad)
sub
jg
(bad)
idiv
mov
xchg
jg
cmps
in
ss
mov
push
inc
inc
sbb
outs
into
mov
xrelease
mov
jns
adc
cmp
adc
pop
push
nop
(bad)
jno
pop
jnp
int
addr16
cs
ss
xchg
push
lock
fdiv
cmc
out
jecxz
push
mov
fs
fidivr
sbb
jnp
cli
je
and
xor
or
mov
fiadd
ins
jo
mov
push
ret
mov
cmp
stos
pop
and
ins
inc
jp
fmulp
inc
xor
shl
cmp
fst
cmp
mov
jno
push
enter
loop
jno
add
bound
mov
mov
inc
mov
xchg
or
cmps
or
in
mov
or
stos
jno
push
retf
jb
icebp
je
and
stos
push
or
jno
fimul
lods
pop
adc
sbb
pop
xor
scas
sub
cmp
fiadd
lahf
and
in
data16
daa
xchg
xchg
repz
sub
aad
pusha
or
mov
ja
std
mov
js
push
inc
pusha
aad
aad
(bad)
ret
sbb
fs
div
cs
mov
into
std
mov
dec
ret
movs
jmp
out
out
dec
dec
mov
dec
les
lea
cmp
jae
dec
or
test
ins
mov
xor
cmp
popa
pop
fcomp
jp
and
push
int3
xor
ins
cmp
ja
jo
imul
pop
cmp
fdiv
iret
xor
jmp
mov
sahf
pop
in
les
push
lahf
xchg
retf
add
sahf
pop
inc
mov
push
push
cmp
dec
dec
mov
jg
dec
mov
iret
fst
add
ror
sbb
jmp
and
hlt
mov
bound
fnstsw
jmp
in
pop
add
mov
ret
stos
loop
data16
push
jecxz
jl
sbb
xchg
rol
sub
fnstcw
push
pop
cmp
or
out
imul
pusha
add
adc
fs
les
xchg
fsub
outs
rcl
shl
imul
or
(bad)
icebp
mov
aam
ss
and
out
push
jg
dec
scas
popa
jmp
into
(bad)
cdq
mov
lock
iret
xor
pop
pop
jl
mov
retf
out
neg
mov
pop
jbe
fldpi
pop
popf
imul
std
ins
sbb
mov
cmc
xchg
jnp
test
mov
jg
stos
outs
daa
popa
dec
scas
add
cwde
inc
pop
out
loop
dec
dec
loop
mov
xchg
pop
in
jae
mov
test
or
hlt
xchg
and
sub
cld
mov
(bad)
and
or
shl
mov
add
arpl
sub
fnstenv
stos
lds
add
push
movs
cmp
and
jl
test
fucom
sub
push
mov
fcomi
call
arpl
lods
icebp
mov
ss
cmp
pop
xchg
into
pusha
in
mov
ja
push
(bad)
mov
sub
and
mov
pop
push
jl
xor
and
je
bswap
icebp
retf
sub
adc
mov
out
scas
imul
xchg
adc
dec
imul
push
ins
call
push
inc
xor
scas
ficom
(bad)
and
and
sbb
lods
jg
xchg
scas
aad
jnp
xor
push
cwde
mov
and
lds
cmp
mov
(bad)
(bad)
daa
xchg
adc
repnz
in
pop
jg
adc
pop
sbb
aam
outs
push
movs
or
and
movs
sub
cmps
lahf
fwait
jb
or
movs
sahf
inc
(bad)
jl
rcl
fsub
mov
mov
lods
stc
and
pushf
sub
imul
mov
pop
repz
pop
lock
xlat
mov
xchg
sub
push
mov
in
mov
enter
pusha
or
xor
leave
sbb
inc
nop
adc
inc
out
xchg
aad
mov
js
mov
aad
(bad)
pop
in
jno
lods
cdq
nop
mov
cmp
inc
mov
mov
push
dec
mov
rcl
cmps
enter
fnsave
lods
pop
pusha
push
mov
mov
aam
dec
movs
jns
data16
push
adc
and
push
ins
je
jge
cli
fistp
mov
stos
call
cmc
sbb
and
jle
je
loop
rcl
shl
rol
dec
and
add
fwait
jbe
cmp
lods
hlt
push
mov
out
adc
lods
cmp
and
test
loopne
dec
cmovge
xchg
dec
mov
dec
inc
bound
xor
xchg
mov
(bad)
outs
icebp
cmps
rol
jns
inc
sub
dec
xchg
popf
ror
pop
cmp
mov
sti
push
add
nop
in
push
in
mov
jge
jecxz
(bad)
stos
and
push
add
cli
push
stos
mov
sbb
addr16
ror
inc
dec
data16
loope
popf
and
outs
cmp
inc
or
mov
dec
fcom
mov
fs
sub
in
loope
(bad)
mov
mov
repz
push
fimul
jle
aam
xor
cdq
stc
popf
lock
push
pop
sbb
jnp
inc
adc
pushf
test
sbb
(bad)
fiadd
lahf
cmc
dec
cmp
packuswb
stos
dec
push
lds
lahf
pop
mov
jecxz
and
mov
adc
mov
pop
icebp
out
adc
pop
jmp
jp
in
pop
leave
icebp
xlat
push
mov
xchg
in
inc
push
call
jae
cmp
shl
ret
dec
lods
xchg
jp
(bad)
jge
stos
jle
add
lea
push
jl
addr16
mov
push
outs
jecxz
dec
sbb
arpl
jp
mov
fidivr
movs
(bad)
cmp
cmp
push
out
mov
lds
jecxz
pop
xchg
dec
lahf
retf
gs
xchg
mov
xchg
add
dec
cdq
sbb
xor
sub
xor
add
lods
add
gs
dec
xor
xor
add
cmp
icebp
repnz
aad
std
aaa
sub
call
fcmovne
popf
mov
sub
ret
aaa
xor
sub
jmp
dec
pop
aas
(bad)
xor
inc
int3
movs
clc
loope
push
fisubr
out
ja
mov
push
jp
cmp
repnz
in
cmp
add
xchg
add
fadd
js
sub
mov
stos
push
call
outs
jmp
mov
in
stc
out
(bad)
dec
mov
js
or
or
lahf
retf
out
xor
push
arpl
fdivr
les
mov
mov
push
or
dec
and
mov
sub
je
jbe
xchg
xor
inc
repnz
mov
sbb
sub
and
adc
in
scas
mov
mov
(bad)
push
xchg
push
dec
ins
pusha
add
mov
inc
(bad)
sub
cmp
adc
jecxz
cmc
xor
sbb
mov
sub
pop
(bad)
out
fs
arpl
and
outs
vaddsd
push
push
jns
xor
popf
pop
call
sub
xchg
scas
inc
ret
in
cwde
ss
mov
cmp
out
add
stos
repz
xchg
cli
outs
(bad)
nop
xchg
fdivr
sbb
lods
lods
sub
mov
or
mov
je
jge
push
test
and
bnd
fdiv
xchg
sbb
int
cmp
mov
les
inc
mov
addr16
ret
test
jne
call
cdq
cdq
add
sbb
lods
arpl
push
cmc
fdiv
movs
rcr
cmp
lods
cmc
in
fdiv
sub
pop
mov
xchg
mov
dec
inc
test
loope
repz
iret
dec
jmp
fucom
je
sar
mov
stos
outs
xor
(bad)
daa
mov
dec
or
xchg
cli
test
in
sti
mov
xchg
add
pop
pop
movs
push
sub
sbb
sbb
cmps
inc
adc
loop
push
adc
call
xor
fs
ficomp
ret
or
call
adc
in
push
cmp
mov
dec
lods
push
sub
push
into
pushf
aad
inc
xchg
inc
xchg
add
aaa
cmp
out
cmp
pop
addr16
out
fst
mov
ja
sbb
(bad)
movs
inc
push
retf
ret
add
je
ja
and
adc
aad
mov
push
fwait
xor
mov
addr16
xor
test
jmp
dec
xor
mov
dec
fwait
movs
pop
into
loop
lahf
les
cld
call
aad
addr16
dec
pop
cld
push
pop
inc
ins
imul
mov
nop
push
or
scas
pop
sti
es
mov
push
inc
rol
fwait
xchg
jbe
and
mov
dec
iret
mov
mov
mov
aaa
dec
nop
xor
xor
sahf
(bad)
arpl
fs
sbb
cli
cmp
out
jmp
cmp
sar
xchg
pop
lds
scas
adc
call
xor
ins
adc
and
and
pop
sub
jecxz
leave
push
dec
adc
push
mov
outs
dec
and
in
pop
test
fdivr
pop
jp
ret
mov
push
xchg
pop
or
jno
repnz
inc
mov
aam
and
cwde
xchg
dec
add
push
in
rcl
cmp
mov
add
inc
retf
or
hlt
or
push
add
adc
cmp
inc
(bad)
cli
add
mov
push
or
(bad)
pop
and
stos
not
mov
outs
repz
outs
and
fisub
or
push
movs
out
cs
lock
mov
sbb
adc
stos
fdiv
push
ins
push
movs
push
sub
xlat
cmps
sbb
sahf
sahf
cmps
jl
push
xchg
pop
repnz
xchg
pop
js
cs
imul
int
pop
add
sbb
add
call
popf
lock
fsubp
mov
in
daa
in
ret
fadd
aam
das
cld
mov
xlat
imul
and
aam
pop
in
lds
inc
sbb
mov
push
jp
outs
dec
xlat
lods
push
xor
scas
repz
popf
cmp
and
ins
adc
pop
cmp
les
neg
fistp
das
xchg
pop
xchg
pop
(bad)
pop
pushw
shl
hlt
sub
clc
push
mov
(bad)
ror
add
retf
fiadd
cmp
push
(bad)
cmp
(bad)
clc
sub
xor
imul
mov
xor
data16
mov
add
push
inc
cwde
shl
retf
pop
aas
mov
lds
cld
scas
cli
xchg
mov
lock
xchg
ins
rcr
outs
dec
inc
sub
cmc
push
clc
or
sbb
rcl
add
push
es
mov
int
movs
mul
gs
cmp
test
pop
iret
sbb
lods
cmps
jmp
in
inc
outs
or
adc
inc
jb
dec
cmp
mov
xchg
ins
jp
xchg
call
out
mov
ss
cmp
cmp
fs
je
or
or
inc
aas
into
lods
inc
loope
or
add
inc
xor
jp
popf
and
fiadd
mov
pop
inc
push
inc
jae
out
jno
dec
ja
sub
cmp
add
in
dec
xchg
movs
sti
mov
mov
cli
mov
inc
sysret
jbe
sbb
bound
fdiv
shr
mov
push
adc
sbb
test
shl
sbb
inc
stc
push
aad
sbb
xlat
pushf
mov
int3
scas
or
pushf
dec
loope
fisubr
add
push
seto
enter
cmps
and
sbb
pop
in
sti
jo
rcr
test
pop
cdq
(bad)
bound
lock
daa
mov
lods
adc
mov
test
add
pop
fidivr
popf
jnp
mov
gs
or
jmp
sub
hlt
adc
outs
call
jb
xor
add
inc
fnstsw
ds
js
jg
cmp
nop
add
xchg
cld
jecxz
push
imul
nop
cli
enter
ins
icebp
push
jae
fsubr
pop
mov
pusha
test
sbb
aaa
pop
aad
or
xchg
les
imul
sahf
jmp
jg
fistp
fisttp
sbb
neg
ret
push
icebp
mov
and
shl
adc
cdq
add
test
or
ret
pop
sub
ins
push
pop
xchg
cs
xor
and
div
movs
stos
sbb
mov
test
sub
jmp
adc
aaa
lock
mov
(bad)
aam
shr
stos
and
rcl
and
lock
jmp
fst
cli
xlat
cdq
inc
sub
jp
jnp
or
out
repz
ins
out
xchg
mov
ss
inc
hlt
(bad)
xchg
out
push
mov
mov
mov
(bad)
mov
inc
loop
lods
aaa
sbb
movs
sti
or
lods
mov
daa
dec
inc
sbb
dec
adc
outs
daa
pop
std
test
int3
push
shr
div
cmc
adc
xchg
aas
xchg
xchg
dec
test
sub
inc
das
cld
in
sti
ret
cmp
loopne
jns
sbb
push
(bad)
fistp
(bad)
daa
cmp
dec
fs
mov
add
out
mov
mov
test
inc
and
icebp
je
inc
pop
pop
add
aam
inc
pop
xor
fs
sti
fucomi
ret
push
fnsave
add
dec
es
shl
mov
(bad)
cmc
imul
ds
outs
ds
mov
test
mov
test
xchg
out
mov
ja
out
adc
push
and
movs
cdq
xlat
sbb
lods
lods
lods
sub
push
add
dec
int3
and
fistp
pop
mov
sbb
(bad)
popa
fsubr
and
add
pop
not
inc
outs
mov
mov
jnp
sbb
(bad)
pop
pop
scas
outs
pop
inc
mov
mov
mov
rcl
jne
jno
jbe
aad
pop
push
dec
repz
fdivr
(bad)
jo
mov
mov
push
shl
in
inc
inc
mov
shl
jo
pop
or
mov
xchg
fisubr
inc
xchg
cmp
cs
add
inc
lods
rcr
pop
sub
adc
in
push
push
rcl
cdq
mov
movs
adc
inc
test
popf
out
sar
lods
not
shl
push
paddw
dec
outs
add
aaa
das
fsub
(bad)
jg
pop
pusha
dec
outs
dec
out
loopne
push
push
pop
retf
mov
shl
sbb
data16
scas
pop
push
push
dec
add
outs
call
dec
xchg
mov
fwait
mov
fistp
cmp
mov
jg
and
jmp
icebp
nop
mov
pop
mov
int3
imul
adc
call
lods
and
vsqrtsd
out
loope
icebp
clc
cmp
inc
es
sbb
dec
cld
cmp
jbe
test
push
std
sahf
sub
add
inc
jo
call
cmp
push
ror
gs
rol
jecxz
imul
call
cli
mov
sbb
es
hlt
retf
leave
popa
hlt
add
stc
push
add
jns
lods
adc
sub
add
fst
inc
jbe
xor
fisub
ins
scas
data16
pop
ret
test
cwde
retf
mov
sbb
add
push
not
sbb
push
dec
xlat
pop
aad
inc
enter
retf
addr16
fistp
xchg
jns
jge
jo
mov
jns
add
xchg
and
or
xchg
sbb
fdiv
sbb
jmp
adc
scas
call
fiadd
pop
ss
sbb
sub
lea
movs
jg
mov
pushf
sbb
jo
or
jmp
push
arpl
out
jmp
add
sub
jb
test
xchg
fild
stos
mov
or
loope
xchg
xchg
sub
sahf
inc
mov
xchg
adc
jne
pop
rol
mov
in
mov
stos
icebp
into
cmp
pop
loopne
ins
pushf
or
cmp
sub
sbb
aas
(bad)
fs
cmp
sub
int
cdq
inc
(bad)
cdq
dec
mov
mov
test
sar
mov
pop
scas
xor
lahf
or
xchg
pop
push
in
push
jle
add
pop
add
ins
lock
cmp
mov
fdiv
cld
jb
xlat
dec
or
sub
mov
or
sbb
fs
adc
sti
stc
dec
jbe
fistp
fst
mov
rcl
inc
sar
pop
outs
stc
inc
jle
leave
mov
shl
sub
xor
in
mov
popf
movs
movs
xor
push
xchg
das
sbb
xchg
nop
mov
dec
lods
add
dec
mov
xor
(bad)
xor
add
push
lods
push
es
pop
adc
mov
mov
dec
stos
sbb
rcl
in
mov
fucomp
sbb
mov
or
ror
jb
es
ret
ins
iret
test
sub
sub
pop
pop
pop
pop
stos
daa
or
in
lods
push
retf
mov
enter
mov
sbb
mov
mov
dec
rcr
jecxz
call
nop
dec
pop
add
aam
mov
push
call
aaa
cmps
and
cmp
and
xchg
mov
mov
out
xor
mov
pop
jmp
push
frstor
pop
or
push
push
outs
inc
sbb
sbb
mov
(bad)
call
fisubr
cmp
mov
std
test
add
fwait
adc
jg
stc
xchg
scas
repz
ficomp
cmp
cwde
js
mov
test
cmp
sbb
add
jo
mov
jno
out
movs
mov
or
pop
pop
mov
and
outs
mov
jl
lock
test
dec
and
or
lea
fdivr
push
push
out
mov
movs
cmp
adc
push
lods
retf
mov
pusha
test
lea
int3
jge
cmp
cmp
sbb
xchg
dec
sub
(bad)
fsub
cld
jecxz
je
sub
mov
jg
or
(bad)
or
gs
mov
xchg
jg
sub
xor
pop
jo
mov
data16
(bad)
push
xchg
adc
fist
cmp
mov
ret
in
pop
lds
push
data16
std
nop
dec
cmp
call
sub
and
inc
pop
sub
mov
jae
adc
adc
jns
cmp
mov
in
aam
scas
push
and
call
add
adc
push
xchg
movs
sub
sbb
mov
cmps
cmps
mov
clc
xchg
movs
retf
push
sbb
lods
shr
push
enter
xor
pop
cld
stos
pop
or
fwait
xor
and
ficom
dec
jo
int3
cld
or
xchg
pop
loop
call
aaa
add
imul
xchg
xchg
or
sbb
adc
xchg
test
mov
pop
xchg
inc
push
mov
xchg
mov
jbe
jmp
stos
retf
into
into
js
push
dec
adc
lods
inc
mov
int3
aas
movs
test
ret
pop
push
xchg
mov
into
mov
mov
push
data16
inc
test
sbb
sbb
dec
mov
add
inc
jno
inc
xor
or
jg
mov
lahf
sub
mov
add
addr16
lock
add
xchg
out
clc
mov
loopne
ret
jmp
retf
sub
push
inc
fnstsw
cmp
cld
gs
mov
adc
xchg
(bad)
push
in
das
sti
lds
in
mov
sub
inc
push
jns
push
(bad)
aad
scas
imul
imul
sub
sbb
(bad)
cli
sar
adc
inc
mov
adc
aam
shl
and
jecxz
rcr
jp
inc
jp
pop
loopne
lods
pop
cmps
push
dec
push
lods
lods
ja
jo
dec
les
stos
jo
popf
sbb
xchg
lds
mov
(bad)
imul
adc
(bad)
cmp
sub
pop
jo
push
xchg
fst
cmp
fcomip
jo
dec
imul
clc
aam
pop
fmulp
repz
js
pop
add
js
sahf
push
and
daa
scas
push
rcr
stos
dec
push
into
or
int
repnz
jnp
mov
cmp
hlt
jecxz
out
shl
ja
dec
cmps
loopne
int
xor
cs
xchg
cmc
jns
mov
ret
sub
adc
mov
inc
dec
not
jns
int3
mov
mov
xor
xchg
loope
int3
test
loope
enter
clc
es
stos
ror
int3
jb
out
and
scas
sub
test
nop
mov
cld
sbb
lods
sbb
inc
mov
out
mov
js
cmc
inc
and
jmp
add
into
jmp
push
inc
dec
jbe
loope
(bad)
das
adc
add
outs
sbb
jbe
test
getsec
or
rcl
scas
cmc
test
int
mov
jle
mov
jle
or
or
leave
call
dec
sub
(bad)
mov
aas
sbb
lock
or
mov
sar
mov
out
jb
loopne
into
xor
sahf
push
sbb
(bad)
ss
test
sub
lods
sar
scas
aad
push
leave
fs
xor
mov
ss
clc
adc
arpl
(bad)
outs
pop
mov
sub
mov
sbb
rcr
dec
pop
cmp
sbb
aas
lea
rol
loopne
inc
repz
push
mov
or
pop
inc
push
loope
mov
sbb
lods
test
and
jmp
xchg
ins
(bad)
pushf
pop
addr16
adc
adc
and
enter
xlat
jmp
enter
in
jae
xchg
xor
retf
mov
add
sti
es
fdivr
jmp
push
out
aas
mov
movs
std
into
push
and
lods
iret
jno
cwde
aaa
retf
inc
xchg
pop
cmp
or
and
(bad)
fist
xor
and
jge
add
add
dec
jl
js
cmc
mov
out
jecxz
mov
mov
int3
cs
fcomip
aaa
test
fs
retf
mov
xchg
test
mov
fwait
jecxz
popa
out
arpl
xchg
sbb
js
dec
pop
mov
ins
nop
add
jl
push
push
mov
mov
dec
ins
mov
jg
inc
push
mov
fdivr
test
aam
js
sbb
ror
pop
mov
ds
cmps
stos
add
aas
leave
and
cmps
jmp
mov
xor
jl
rol
pusha
push
imul
icebp
(bad)
retf
ins
fcmove
add
(bad)
push
loope
imul
scas
mov
int
mov
sti
sub
pop
sub
xor
in
outs
aam
fs
in
out
dec
(bad)
ja
ins
dec
loop
fiadd
jbe
mov
ds
cmps
mov
clc
js
rcl
mov
dec
ins
shr
xor
xor
into
pop
(bad)
lods
shr
repnz
lods
clc
adc
out
mov
xor
add
and
iret
jg
adc
(bad)
sub
imul
iret
add
movs
sbb
rcr
test
cwde
xor
xor
jo
sahf
in
sahf
fcmovnb
in
jg
or
in
(bad)
ss
fldcw
jg
or
loopne
sahf
retf
sub
(bad)
iret
pusha
mov
pop
fwait
mov
stc
push
xchg
sbb
push
lods
xchg
int3
sub
pop
and
push
lods
ds
out
add
xchg
jmp
(bad)
mov
jecxz
int3
mov
cmp
(bad)
outs
(bad)
retf
stc
nop
fist
js
cmc
cdq
pop
in
nop
cmp
mov
or
xor
jns
aad
mov
nop
jne
daa
mul
jno
push
pop
(bad)
mov
or
in
xor
xor
pop
pop
fs
push
xor
movs
jmp
sbb
imul
jecxz
fdivr
das
and
ds
sub
imul
fadd
fs
sub
push
pushw
sbb
mov
adc
push
scas
mov
sub
fmul
inc
in
push
shr
pop
sar
out
cmp
adc
jne
das
int3
cmps
push
cdq
jno
xor
out
sti
pop
outs
les
(bad)
xlat
sub
xchg
sbb
ficom
pusha
jo
mov
stos
sti
aaa
(bad)
ja
in
jnp
jb
and
push
and
stos
or
sbb
dec
outs
and
les
(bad)
jmp
mov
repnz
out
sub
jbe
jae
lea
xchg
and
bnd
pop
stos
xchg
movs
scas
adc
jle
pop
inc
cdq
xchg
xor
mov
add
(bad)
es
mov
scas
jl
dec
mov
mov
add
int3
out
xchg
addr16
jl
sbb
out
mov
mov
lods
inc
and
mov
dec
sbb
cmp
clc
xchg
sbb
test
sub
scas
(bad)
mov
shr
into
jp
dec
sub
out
dec
and
sbb
test
fs
lea
fcomp
rcr
mov
clc
cmp
jb
call
data16
xchg
stos
jae
bound
pusha
pop
jg
jge
test
inc
xchg
mov
fs
xchg
push
mov
jmp
lds
pop
das
cmp
cwde
sub
lahf
enter
in
or
pop
xor
or
jb
int
jne
xor
sbb
adc
push
jmp
xchg
mov
mov
inc
fidivr
and
clc
xor
and
push
and
push
je
loop
in
pop
xor
mov
(bad)
shl
out
in
push
sbb
xchg
clc
sar
add
hlt
mov
sub
stos
lock
sub
shl
fldcw
aam
pop
out
or
push
sub
movs
test
ins
adc
fidiv
sti
push
je
(bad)
inc
ins
sbb
push
mov
push
xchg
add
aam
pop
icebp
outs
rcr
stos
out
retf
mov
mov
lea
lock
aam
inc
dec
sub
inc
mov
test
adc
adc
movs
mov
stos
sbb
repnz
div
popa
(bad)
lock
pop
aas
pop
in
add
adc
mov
mov
stos
adc
or
shl
pop
adc
inc
movs
push
es
shr
jl
xor
cmp
or
in
mov
pop
std
xor
retf
jmp
pop
mov
jae
pop
jbe
(bad)
sbb
mov
jno
pusha
jbe
and
pusha
cwde
mov
inc
pop
dec
push
fdivr
xchg
push
ret
cmp
sub
jns
into
add
sbb
cmps
mov
(bad)
jne
ja
jbe
mov
push
adc
call
fnstsw
sbb
push
mov
das
xchg
mov
jae
mov
push
lea
jp
dec
pop
dec
out
push
push
cmp
push
stos
outs
jb
shl
sub
or
xlat
mov
fisttp
int3
xor
arpl
add
mov
ins
xchg
pop
(bad)
call
push
inc
mov
fmul
mov
cmp
ja
aam
into
adc
add
jg
enter
mov
inc
pop
xor
and
loop
test
sub
jns
inc
mov
cmp
and
js
xchg
(bad)
jmp
fmul
ret
es
into
mov
fadd
retf
mov
push
jno
xor
in
push
sbb
fwait
push
add
aaa
pop
cmp
cmp
jnp
xchg
(bad)
gs
push
imul
popa
ror
dec
cdq
mov
int
xchg
or
out
jle
push
sub
arpl
retf
loope
add
iret
das
out
xor
aas
int3
cmp
xchg
pop
or
in
sbb
test
fiadd
test
mov
jge
je
pop
jae
push
sub
aas
repz
fwait
sbb
loop
mov
ins
xor
lods
add
lods
rcl
or
sub
stos
mov
mov
mov
test
(bad)
jge
sub
das
retf
aas
je
sbb
xor
and
push
dec
jg
idiv
inc
jb
mov
mov
xor
js
dec
(bad)
mov
mov
out
arpl
iret
push
pushf
jmp
call
sub
lds
push
pop
out
repz
setne
jbe
push
mov
add
push
cli
mov
push
outs
cmps
cdq
xchg
push
frstor
cmp
test
add
ret
dec
inc
aam
pop
adc
xchg
frstor
xchg
jno
add
fdiv
retf
retf
adc
push
mov
mov
mov
fistp
in
call
out
push
sbb
add
out
inc
jbe
or
jecxz
mov
sub
bound
call
cli
mov
push
pop
sbb
bound
arpl
movs
dec
test
sub
dec
(bad)
aas
mov
jecxz
pop
hlt
add
popa
(bad)
repnz
add
adc
adc
inc
jecxz
call
ror
dec
enter
nop
and
sbb
lods
cli
mov
retf
xlat
sbb
test
lea
push
test
sub
mov
push
xchg
mov
outs
jo
std
xchg
jecxz
mov
xchg
mov
or
ja
outs
push
inc
mov
xchg
or
push
fidivr
pop
stos
test
mov
push
xchg
inc
das
add
shl
in
xchg
fnstsw
or
inc
mov
xor
out
fincstp
ror
mov
jmp
push
out
fidivr
mov
aad
int3
or
movs
or
dec
fs
mov
xchg
cli
jbe
and
jno
mov
xchg
and
push
ret
push
push
aam
int3
adc
in
xor
lds
call
imul
xchg
xlat
cmp
cdq
and
pushf
mov
pop
push
fs
and
sub
jo
fsub
call
push
stos
stos
mov
iret
and
xchg
adc
loop
shl
rcr
xlat
outs
add
movs
scas
add
(bad)
(bad)
pop
in
loopne
xchg
cmp
or
jmp
ret
sub
les
jle
adc
mov
aas
xchg
cmc
push
aaa
dec
sub
aam
imul
and
sbb
call
mov
mov
pop
mov
popa
call
es
nop
(bad)
cmc
jb
or
adc
neg
sti
push
and
fs
or
lods
pop
inc
jb
outs
imul
xchg
int3
sahf
movs
and
fst
cli
ficomp
mov
test
mov
pushf
pop
jle
jbe
test
retf
xchg
sub
in
xchg
lods
jecxz
and
(bad)
aad
pop
fldcw
sub
lahf
push
enter
popa
fdivr
adc
(bad)
rcr
aam
aam
push
popf
mov
(bad)
addr16
xchg
push
jae
dec
rol
bound
xor
scas
mov
adc
or
inc
pop
mov
mov
clc
rol
pop
mov
cdq
mov
dec
into
cmp
or
dec
in
xchg
push
jp
mov
sub
xor
xor
xchg
ds
shr
add
fcom
in
push
in
dec
xlat
lods
pop
mov
inc
sub
out
ss
iret
sub
push
inc
je
imul
cdq
cld
or
jmp
(bad)
pop
push
dec
dec
mov
push
mov
cs
add
cmps
lods
xchg
cmc
push
sbb
(bad)
inc
pop
sbb
sbb
inc
rcr
jae
test
mov
inc
fist
mov
dec
xchg
or
jmp
inc
aaa
loope
pop
cmp
mov
xor
jmp
dec
sub
adc
pop
ffreep
push
neg
pop
and
pushf
stos
push
int3
xor
inc
cmp
mov
jp
pop
push
dec
js
dec
push
dec
dec
mov
xor
sub
and
inc
mul
mov
add
out
adc
scas
inc
enter
xor
(bad)
ror
jmp
cmp
inc
and
aaa
mov
aam
icebp
or
inc
mov
div
pop
xchg
pop
(bad)
mov
das
pop
dec
mov
out
xchg
jne
cmp
xor
fwait
cmp
jge
inc
lahf
std
mov
rcr
jle
xchg
aad
jno
lahf
movs
daa
and
pop
inc
push
dec
sahf
pushf
cmp
xchg
push
jecxz
push
or
repnz
shl
ret
mov
sahf
push
mov
in
fsub
sub
dec
test
add
pop
mov
sbb
or
ds
sbb
or
pop
cdq
dec
and
cmp
cmp
call
push
jb
lock
in
int
lahf
test
pop
es
mov
add
xor
loopne
cld
outs
mov
xor
sti
sub
hlt
sbb
mov
push
adc
(bad)
loopne
mov
ret
mov
pop
retf
sbb
test
dec
out
pop
popf
sbb
xchg
call
push
sbb
jno
xlat
scas
push
mov
leave
or
sahf
push
push
pop
sbb
fisubr
shl
aaa
aad
pop
sbb
fld
sbb
dec
xor
ret
push
jne
out
aad
sub
jmp
fadd
adc
out
les
mov
inc
cmps
out
imul
jb
mov
fst
ror
(bad)
lock
cmp
sub
pop
(bad)
rcr
cli
push
or
add
push
out
xor
push
cmp
imul
pop
loop
jmp
push
dec
in
stos
es
movs
xor
pop
addr16
hlt
sub
mov
fs
sahf
xchg
call
inc
xor
fs
xchg
pop
clc
or
ins
les
xchg
daa
push
pop
sub
push
sahf
std
movs
imul
mov
push
(bad)
jmp
shl
leave
xchg
adc
bnd
imul
push
mul
cmps
dec
push
and
js
test
sahf
cs
cmc
add
pop
xor
mov
into
mov
fcmovnbe
cmps
mov
mov
jecxz
stos
push
jg
dec
enter
xchg
mov
sahf
add
jg
and
mov
(bad)
push
mov
out
in
aad
inc
es
xchg
pop
push
retf
mov
adc
ins
shl
int3
inc
dec
cli
sbb
(bad)
fcom
test
fisttp
ret
xchg
sbb
shr
adc
cmps
retf
cmps
out
inc
push
inc
push
adc
hlt
retf
aas
cmc
sbb
je
leave
sbb
xor
push
outs
nop
loopne
push
adc
inc
(bad)
jmp
mov
jmp
es
fild
in
push
cmp
aaa
sbb
pop
jmp
add
or
fnstsw
das
push
jno
push
jge
lods
mov
push
sbb
or
xor
jl
xchg
cwde
rcr
push
adc
(bad)
(bad)
aad
mov
out
ret
pop
fwait
cmps
jnp
dec
mov
mov
jo
mov
enter
and
cwde
fild
cmp
pop
pusha
sbb
pop
push
sub
std
add
dec
xor
fwait
and
sahf
or
rcl
(bad)
ss
jnp
sub
mov
mov
inc
into
sub
jnp
sbb
xchg
xchg
cld
fsub
pop
(bad)
mov
xchg
mov
xor
and
or
cmp
sahf
jg
mov
aas
clc
sbb
sub
(bad)
addr16
mov
in
dec
xchg
pushf
jp
js
dec
clc
jg
add
int
mov
jnp
pop
bound
sbb
jp
dec
inc
out
mov
cmp
mov
test
ins
jge
fsubr
cdq
xlat
xor
out
sub
cmp
jmp
dec
cmc
gs
fmul
adc
xor
lods
test
cmps
mov
and
shl
jae
push
stos
div
push
pop
es
out
(bad)
inc
mov
outs
inc
out
mov
call
inc
fisttp
imul
push
(bad)
bound
fmul
mov
xchg
fwait
mov
pop
jge
out
sub
push
mov
jnp
hlt
repz
fadd
(bad)
(bad)
bound
(bad)
xchg
imul
mov
sbb
aad
sbb
repz
stc
in
aam
jmp
ret
shl
mov
jb
mov
push
int
dec
es
push
aad
sbb
mov
cmp
aaa
push
pop
in
jge
lock
(bad)
push
mov
sti
mov
sub
sbb
inc
mov
movs
push
repnz
or
and
cmp
or
gs
fistp
adc
(bad)
sbb
xor
xlat
aad
adc
mov
xchg
sar
(bad)
xchg
(bad)
mov
movs
ret
out
lods
mov
sbb
aad
push
cld
sbb
stos
or
jno
mov
jmp
add
out
lds
cmp
mov
inc
std
sub
mov
xor
sub
je
cmp
adc
jne
sbb
or
and
adc
push
fnstsw
cmp
std
inc
mov
out
jmp
inc
aam
add
das
movs
aaa
cmps
cmc
push
push
stos
(bad)
out
xlat
mov
inc
xor
push
js
std
outs
aaa
xor
cmps
cs
push
lock
push
mov
nop
inc
sahf
icebp
dec
ja
mov
and
xchg
imul
jne
outs
mov
push
ret
pop
pop
jp
pop
mov
daa
adc
add
cli
and
out
dec
out
cmps
xchg
inc
and
mov
pop
test
std
cwde
fs
dec
xchg
sbb
sub
in
inc
push
jno
cmp
xchg
cld
leave
jne
rcr
call
fsub
mov
aaa
pop
pop
cli
dec
aad
cmp
mov
dec
test
ret
mov
dec
dec
lods
push
and
pop
dec
(bad)
jb
movs
or
movs
mov
and
xchg
call
cmp
inc
(bad)
sar
xor
out
xchg
fist
in
mov
ffree
mov
xor
push
or
sahf
sub
sub
sub
jle
push
ror
jecxz
xchg
iret
mov
popf
add
mov
cmp
inc
dec
movs
ss
dec
push
pop
aas
xor
mov
or
push
fst
push
xchg
aaa
hlt
xchg
add
jne
aaa
xchg
popf
inc
mov
pop
arpl
sub
(bad)
sbb
cmp
xchg
test
jnp
bound
(bad)
push
or
dec
das
cs
pop
les
js
mov
scas
xchg
js
push
fstp
and
mov
inc
clc
push
sbb
scas
les
in
push
aaa
sbb
dec
repnz
adc
sbb
cmp
neg
inc
sbb
(bad)
xchg
jb
sbb
pop
addr16
call
fmul
xor
cmp
int3
jnp
scas
int
mov
fld
add
aam
xor
mov
push
int
jl
jns
mov
pop
or
cdq
sbb
jg
pop
add
fs
sbb
push
cmp
xchg
push
retf
test
dec
jmp
ficomp
mov
lds
jno
fs
test
mov
mov
or
in
inc
cwde
cmc
add
jne
add
test
ja
enter
sbb
stc
push
pop
fwait
sbb
call
pop
cmps
stos
aam
(bad)
out
clc
fwait
jge
mov
push
mov
mov
arpl
mov
pop
sbb
repz
ja
or
rcr
dec
mov
rcr
xor
clc
inc
xor
pushf
icebp
movs
dec
and
cmp
mov
fdivr
push
test
mov
aad
cdq
jmp
(bad)
sbb
cmps
and
ja
pop
jecxz
mov
lods
sar
popf
test
jb
xor
in
fstp
popf
daa
or
icebp
lahf
sub
imul
dec
add
fwait
dec
fucomi
sub
inc
stos
je
sbb
(bad)
sahf
daa
pop
mov
dec
enter
bound
ins
xor
movs
mov
inc
fwait
(bad)
jmp
gs
xor
and
push
pop
mov
inc
push
fimul
in
sub
in
mov
jl
adc
sub
rcr
cdq
lods
mov
div
dec
movs
adc
cld
movs
jne
add
xchg
cdq
mov
lods
cmp
push
cs
push
fsubp
lods
fdiv
scas
(bad)
(bad)
cmp
bound
repz
push
or
jp
popa
js
cdq
sub
out
lock
in
inc
xchg
or
or
lods
gs
xor
test
pop
call
rol
daa
cmp
dec
pop
sahf
cdq
pop
push
aad
stc
test
xchg
lods
out
xchg
imul
div
dec
fadd
ficom
mov
push
int3
pop
xchg
adc
mul
jge
inc
shl
call
or
in
add
lds
enter
mov
test
std
sbb
pop
sahf
xchg
adc
sbb
push
mov
pushf
(bad)
fist
test
cmp
fldcw
mov
pop
(bad)
xchg
outs
inc
pusha
cmc
fistp
pop
in
push
xlat
rcr
cmp
mov
scas
mov
xchg
cwde
cmp
inc
call
retf
xor
(bad)
(bad)
push
add
ror
cmps
imul
push
and
unpckhps
rcl
into
push
xor
xor
out
fdivr
pop
jae
test
les
xchg
fmulp
pushf
stos
dec
ins
repnz
pushf
push
cmp
xchg
add
sbb
ret
popa
fwait
cmp
stos
mov
cwde
jg
cmps
xchg
test
push
stos
jmp
cmp
push
jle
adc
cmp
add
lods
or
pushf
xor
aad
mov
sbb
int
inc
lods
adc
mov
cmp
imul
(bad)
arpl
dec
or
push
jb
repz
sbb
jo
mov
aaa
mov
fisttp
inc
cmps
out
xchg
push
in
dec
shl
jbe
xor
pop
scas
push
dec
sti
int3
mov
xchg
adc
pop
ins
dec
retf
lea
sbb
mov
loope
in
cmps
and
jo
xchg
cdq
lahf
fdivr
xor
cli
popf
lea
bound
sbb
sbb
sahf
add
push
int3
test
mov
jge
dec
jge
dec
test
mov
repz
ins
xchg
push
xor
test
add
rol
push
ins
fnstsw
or
das
mov
int
ins
call
ds
mov
and
mov
sar
sub
sub
daa
ficom
mov
xchg
dec
movs
dec
repz
inc
addr16
stc
jnp
data16
xchg
cmp
test
dec
sbb
imul
test
mov
int3
into
cmp
push
cmp
push
es
ins
int
mov
cs
xor
adc
test
fidiv
loope
xlat
in
adc
rdtsc
jnp
dec
jmp
jns
mov
xor
pop
inc
rcl
ss
mov
pop
pop
fist
in
in
dec
int3
lea
ret
add
sub
mov
hlt
sub
adc
pushf
sbb
daa
dec
ficomp
ins
ror
mov
xor
adc
das
in
call
dec
call
daa
das
outs
out
idiv
(bad)
jmp
add
push
out
add
add
push
jo
sub
movs
shl
out
arpl
fsub
mov
ret
jnp
pop
sub
push
repz
sbb
(bad)
cmc
outs
adc
xchg
loop
ret
push
push
xor
adc
push
sub
cmp
add
les
jbe
jae
jmp
pop
(bad)
fst
adc
cmp
(bad)
int3
dec
pop
test
cli
popf
push
add
cld
ja
and
mov
icebp
in
ret
repnz
pop
push
jp
xchg
mov
fcom
movs
and
out
popf
dec
xor
aas
out
aad
sbb
sub
clc
in
jl
test
inc
cmps
xchg
jle
or
sahf
fistp
xchg
xchg
jnp
addr16
div
scas
pop
jo
pop
rcl
cwde
stos
popf
cmc
lods
stos
(bad)
and
jmp
inc
push
(bad)
cwde
mov
sbb
loop
xor
push
jg
movs
or
xchg
mov
adc
mov
stos
(bad)
and
pop
cs
xchg
adc
int3
(bad)
fadd
jno
jmp
inc
js
adc
iret
daa
cmp
add
shl
xlat
rcl
stos
or
mov
jae
aas
mov
push
leave
ds
lock
rcr
std
test
jmp
xchg
or
sbb
sbb
jns
leave
iret
sbb
cld
jne
jl
push
xchg
(bad)
clc
sar
mov
lahf
es
xor
xor
inc
ja
jp
rcl
xchg
(bad)
nop
std
jmp
add
in
imul
jo
adc
scas
sub
push
rcl
(bad)
inc
add
pop
ja
dec
cld
into
cmp
(bad)
mov
pop
sbb
jno
jae
xlat
loopne
leave
in
jge
jb
pop
cmp
dec
ret
(bad)
js
out
dec
pushf
or
test
xlat
or
or
push
mov
pop
(bad)
push
sbb
pop
fst
jge
or
dec
push
mov
popa
(bad)
lods
js
push
ret
pop
gs
mov
call
jbe
cmp
sbb
xchg
sbb
ja
pop
mov
cdq
scas
mov
mov
fcomp
push
shr
inc
or
xchg
mov
pop
adc
and
imul
xor
mov
adc
adc
sbb
mov
cmp
inc
cwde
dec
repz
(bad)
into
test
je
(bad)
scas
xor
scas
ficomp
jmp
mov
rcr
add
loope
dec
and
cmp
inc
pop
fmulp
mov
and
call
xor
jmp
js
les
mov
or
pushf
sbb
cmp
les
push
pop
aam
mov
adc
aam
and
stos
icebp
sbb
xbegin
mov
fimul
shl
(bad)
mov
and
pushf
stos
push
in
icebp
jle
pop
jmp
sub
mov
cmp
sub
addr16
push
pop
dec
stos
jmp
add
xchg
and
mov
and
and
popa
shl
mov
push
pusha
out
test
xor
dec
js
mov
xor
jmp
jle
stos
data16
lods
xchg
hlt
movs
mov
lods
push
retf
shr
mov
push
(bad)
pop
cmp
dec
pop
shl
push
xchg
mov
das
stos
dec
(bad)
jbe
sbb
loop
mov
inc
or
fadd
xor
xor
mov
inc
xchg
dec
mov
push
rcr
push
mov
add
test
data16
fbld
cmp
(bad)
out
movs
das
mov
lea
or
jb
int3
pop
jo
loope
movs
and
lods
pop
(bad)
pop
jg
pop
push
and
mov
xlat
(bad)
cwde
push
mov
repnz
jb
cdq
loopne
jmp
outs
ret
sbb
nop
call
mov
push
jg
jae
retf
test
push
pop
pop
and
mov
sub
int3
or
jne
mov
dec
xchg
sub
nop
sub
(bad)
aad
fdivr
popf
retf
enter
ror
lea
adc
dec
retf
pop
push
sbb
sar
pop
out
leave
push
dec
xchg
pop
test
jle
fiadd
inc
mov
mov
mov
ins
dec
mov
push
int
sub
outs
movs
or
xor
ret
add
out
movs
mov
mov
or
sub
sub
movs
add
aaa
xor
popa
fs
addr16
and
mov
cwde
cmp
sub
cmp
add
(bad)
jne
mov
mov
dec
or
in
mov
movs
lods
cs
adc
sub
mov
pop
cmp
push
cmp
mov
setge
cmps
push
(bad)
and
add
aaa
adc
xchg
sar
fbstp
jle
rcr
lock
addr16
or
ins
mov
call
test
js
hlt
(bad)
int
jg
mov
rcr
xchg
out
sti
and
sbb
daa
int3
imul
jge
cmps
cs
stos
pop
pop
sub
stos
jl
or
cmp
cdq
cmps
jecxz
xchg
cmp
xchg
test
adc
cdq
inc
sub
sub
jmp
cmp
and
jp
inc
sbb
mov
xor
idiv
xchg
sub
ds
aaa
and
cwde
mov
mov
push
mov
stos
mov
jp
js
mov
outs
mov
lds
test
sbb
mov
inc
loop
stc
ja
mov
js
or
outs
leave
(bad)
out
push
and
inc
hlt
imul
nop
daa
iret
mov
repnz
push
out
inc
add
retf
jl
lock
repz
test
cmps
test
push
std
les
gs
xchg
inc
sbb
inc
loop
test
imul
mov
push
or
pop
push
mov
in
mov
in
int3
or
in
int
and
cmp
out
and
mov
pusha
lods
cmovne
shr
or
sbb
xor
out
rcr
xchg
inc
outs
push
rol
cli
sbb
out
sub
mov
aaa
push
fsub
popa
popa
mov
jmp
repnz
jmp
push
pusha
mov
add
arpl
imul
call
rcl
shr
stc
pop
add
sub
cld
cmc
stos
mov
mov
(bad)
sar
sub
fnstsw
jnp
adc
xor
adc
and
sub
into
jne
gs
fistp
sti
sbb
loopne
mov
sbb
and
cmp
(bad)
mul
push
cs
push
fsub
jmp
inc
in
stc
and
xchg
sbb
pop
add
push
test
loop
shl
add
fld
es
stc
xchg
(bad)
pop
pop
pop
mov
sub
test
in
push
repnz
retf
mov
mov
js
leave
inc
or
push
mov
sub
pop
call
xor
xor
out
(bad)
sbb
push
mov
jl
imul
xor
push
enter
retf
add
sub
test
popa
push
mov
mov
bound
shl
into
clc
hlt
push
sub
xchg
dec
cwde
icebp
daa
sub
jnp
xor
push
mov
arpl
and
std
faddp
fscale
repnz
inc
and
shr
jno
mov
clc
sbb
pusha
push
xor
add
or
push
cmc
icebp
mov
sbb
cmc
push
scas
xchg
cmp
xchg
icebp
sub
hlt
adc
mov
add
mov
test
jle
push
cs
(bad)
setl
imul
popa
lods
adc
or
xchg
outs
mov
data16
stos
xchg
cs
inc
or
jle
xchg
jb
jle
cld
mov
sbb
mov
scas
jb
jne
xlat
retf
mov
adc
adc
push
xchg
cmp
xchg
cld
nop
ins
outs
push
xchg
xor
cld
or
dec
sbb
ins
mov
jecxz
mov
sub
jecxz
mov
popf
ja
mov
jnp
ins
mov
add
xor
out
mov
xchg
retf
inc
push
(bad)
(bad)
sub
xchg
xor
jp
push
mov
mov
repz
cli
loopne
cmp
std
sti
pop
pushf
mov
stos
mov
shr
push
pop
adc
fmul
mov
out
xor
mov
xchg
movs
push
dec
cmps
mov
sbb
jmp
cmp
sbb
mov
adc
mov
adc
sbb
adc
or
add
popf
mov
or
sbb
test
mov
pop
xor
push
aam
pop
fwait
rcr
ficomp
imul
out
pop
inc
xor
inc
mov
and
aaa
popf
test
arpl
inc
and
ds
pop
call
mov
mov
xchg
daa
iret
xchg
int
jnp
xchg
mov
fistp
xor
add
ds
mov
pop
mov
fcom
mov
ds
jge
(bad)
mov
std
xchg
mov
push
xor
jmp
xor
rol
icebp
and
cmp
(bad)
dec
fbstp
out
(bad)
fucomi
adc
aam
jecxz
data16
jae
(bad)
data16
xor
bound
mov
add
jmp
aas
outs
inc
popa
std
jmp
inc
pop
or
int
xlat
inc
and
or
(bad)
pusha
sti
in
int3
retf
inc
inc
mov
mov
cmp
mov
mov
xlat
dec
cs
jne
inc
or
jecxz
push
not
dec
into
xor
add
stos
repnz
adc
stc
ins
test
cmp
push
dec
lods
mov
data16
clc
mov
cwde
loope
call
fwait
adc
dec
test
push
int3
int
cmps
sbb
jle
leave
xor
or
fdiv
pop
rcl
cwde
mov
adc
xor
(bad)
int3
and
sbb
adc
dec
sbb
arpl
mov
repz
xlat
xor
mov
gs
mov
add
push
js
in
imul
movs
sub
adc
mov
icebp
sbb
xchg
data16
test
pop
in
les
stc
add
add
jp
clc
lea
dec
cmp
sbb
shl
dec
or
cmp
jmp
icebp
sub
jp
dec
xchg
pop
nop
dec
push
xor
pushf
leave
pop
es
lea
adc
ins
popa
inc
into
dec
out
sub
test
inc
sbb
pusha
push
mov
retf
outs
mov
sub
lods
mov
push
out
js
jmp
pxor
rol
mov
dec
add
cmp
pop
mov
jns
pop
nop
bound
sbb
das
xchg
sbb
popa
mov
jb
(bad)
pop
inc
cmc
or
and
(bad)
gs
test
retf
jmp
pop
push
push
push
mov
or
dec
or
inc
mov
mov
daa
add
add
imul
add
jno
xor
push
jp
dec
inc
call
je
push
dec
jg
mov
or
cmp
movs
cld
movs
sub
push
inc
add
fdivr
into
iret
cmp
sbb
loop
xor
ja
mov
shl
adc
out
jo
pop
mov
mov
or
shl
push
mov
lea
xor
mov
outs
jle
mov
data16
out
dec
push
adc
jae
imul
pusha
lea
sbb
push
cmps
and
enter
jnp
repz
cmps
xlat
loop
fwait
push
scas
movs
out
mov
outs
call
sub
loopne
aad
mov
fwait
push
jnp
xchg
cmp
pop
imul
aam
aam
dec
fwait
jb
cld
gs
bound
cmp
add
pop
dec
xor
pop
loopne
(bad)
rcl
test
sbb
scas
mov
push
xchg
ds
xor
(bad)
jmp
cmps
sar
out
daa
(bad)
ficom
fs
mov
jmp
ins
and
outs
imul
pop
rcl
test
int3
jp
or
cs
or
mov
push
add
dec
inc
sub
ss
sbb
in
sbb
in
push
push
push
inc
or
shl
retf
ret
test
fs
in
xor
fdiv
cmp
jae
sbb
sar
cmps
fnstenv
stc
gs
in
inc
scas
xchg
popa
mov
sbb
aad
adc
lods
(bad)
pop
fstp
mov
add
xchg
xchg
adc
imul
add
movs
lods
and
es
movs
cmc
lods
sbb
sbb
mov
xchg
mov
jmp
iretw
lea
dec
mov
cmp
xor
aad
jo
inc
push
in
(bad)
pop
clc
mov
push
les
int3
sbb
and
sbb
pushf
sub
nop
sbb
push
out
pop
aaa
rol
xchg
pusha
adc
mov
bound
loope
(bad)
call
shr
xchg
(bad)
arpl
sar
shl
sbb
inc
(bad)
xchg
cdq
repnz
inc
pusha
pop
retf
push
shl
xor
mov
adc
push
pcmpgtw
pop
sbb
repnz
sbb
mov
loopne
mov
jp
sbb
loopne
mov
rcr
fisubr
cmc
mov
jo
lods
bound
daa
mov
fdivr
sub
or
movs
push
in
(bad)
xor
loopne
addr16
pop
xchg
and
mov
ds
mov
mov
sub
jmp
inc
push
sub
int
mov
push
sub
cld
xchg
xor
jmp
je
mov
cwde
ror
jmp
in
push
(bad)
lea
popa
cmovnp
ret
push
outs
push
les
xchg
mov
aam
xchg
dec
and
cmp
mov
inc
shl
dec
outs
ror
loop
mov
mov
dec
(bad)
fwait
jmp
adc
repnz
jnp
aad
mov
ja
xor
sti
inc
ins
inc
xlat
mov
daa
rol
mov
ror
mov
mov
sti
movs
aaa
and
ds
push
cmp
or
or
push
imul
retf
retf
lods
call
lods
sub
inc
out
hlt
(bad)
fcom
and
push
mov
pop
cwde
xchg
mov
mov
add
fisttp
adc
dec
push
je
push
add
bound
add
neg
or
icebp
jae
(bad)
or
bound
jecxz
ins
jb
and
es
pop
inc
jo
imul
shl
jge
ins
sti
jecxz
jecxz
ret
loop
addr16
mov
lods
aas
test
and
mov
repnz
or
mov
(bad)
jge
sub
mov
(bad)
jb
sbb
jne
or
jmp
adc
leave
fcmovnb
fidiv
(bad)
mov
jmp
jecxz
int3
push
jmp
scas
adc
sub
jnp
dec
rol
pop
int3
mov
add
jmp
daa
test
mov
retf
test
into
push
(bad)
jl
jae
sahf
adc
mov
shl
fdivr
retf
out
dec
ret
cmps
xchg
or
test
lds
mov
mov
or
lahf
(bad)
stos
std
add
(bad)
cli
push
mov
add
mov
adc
mov
sub
pop
dec
scas
jnp
aad
adc
cmps
cmps
add
xor
push
pop
sti
inc
mov
xor
dec
cmps
(bad)
fisub
stos
mov
pop
xchg
cdq
ss
push
sub
scas
jmp
bound
pusha
push
stos
pop
stos
adc
fs
cmp
repnz
cs
hlt
(bad)
int3
inc
jns
data16
inc
dec
loop
xchg
push
jmp
imul
aam
enter
xor
push
push
inc
xchg
out
cmps
jge
aad
shr
ds
add
cmps
xor
retf
mov
rol
out
jnp
xchg
add
repz
lds
fsubr
mov
push
pop
inc
xlat
leave
add
retf
mov
neg
stos
test
retf
cmc
call
fnstenv
lahf
pusha
xor
dec
push
add
not
(bad)
jp
in
push
popf
repnz
into
xchg
popf
popf
je
arpl
or
push
pop
jae
mov
pushf
push
addr16
fsave
add
cdq
mov
mov
fcomip
out
mov
arpl
sar
mov
data16
jmp
cld
mov
xor
mov
cli
movs
cli
xor
dec
shr
sbb
jge
ins
or
xor
pop
fld
cmp
push
mov
out
mov
lock
cld
mov
ret
test
add
adc
pop
sbb
xor
add
push
pop
cs
jp
add
and
addr16
loope
mov
jne
push
pusha
mov
cwde
sbb
mov
push
dec
fiadd
and
pop
push
adc
pop
shl
push
mov
sbb
int
pop
jo
in
outs
dec
cmp
mov
mov
sar
jge
mov
stos
jg
sub
xchg
mov
xchg
fdiv
scas
push
cmp
dec
jg
cmp
jae
inc
rcl
(bad)
jp
mov
sti
loop
xchg
push
(bad)
test
sbb
in
retf
(bad)
push
and
jmp
outs
rcl
lea
call
aad
lahf
dec
jecxz
cwde
xchg
push
movs
sete
mov
jb
and
xor
sub
inc
mov
cmc
cwde
fsubp
or
mov
leave
movs
cmp
loope
jp
fs
fisttp
and
cs
jae
(bad)
push
imul
lods
sbb
inc
retf
inc
and
nop
neg
in
add
jne
loop
or
adc
mov
int
call
test
sbb
in
aam
ds
adc
sbb
sbb
ud2
cmp
rcr
adc
sbb
and
hlt
dec
fcom
loop
iret
ss
cld
cmps
cmp
dec
mov
xlat
sbb
popf
cmps
and
mov
enter
mov
daa
call
jbe
mov
lea
push
sub
xor
adc
test
xchg
test
push
inc
cmp
lds
lock
sbb
aas
mov
and
and
jecxz
sub
push
ins
sbb
push
lods
push
shl
lds
sub
rol
pop
mov
jmp
aas
dec
adc
repz
and
push
jb
adc
retf
rcl
icebp
stc
pop
inc
jl
push
leave
sbb
add
push
aam
aaa
hlt
inc
cmps
jl
ins
push
rol
hlt
jp
call
xchg
fld
lea
adc
pop
xor
nop
ficom
mov
icebp
add
in
push
mov
pop
mov
push
popf
lock
xor
pop
(bad)
aad
gs
cmp
sub
shr
pop
mov
aam
aad
pusha
cmp
mov
or
pop
xor
inc
sub
in
dec
xchg
pushf
mov
and
sahf
add
add
ins
cmc
in
outs
pushf
or
push
inc
xchg
pop
ja
clc
enter
mov
adc
sbb
add
(bad)
mov
cmp
repnz
inc
call
adc
(bad)
mov
or
rcl
jno
dec
push
cli
or
inc
pop
push
add
fs
mov
imul
aas
sub
push
daa
sub
jmp
enter
add
stos
lds
mov
aam
pop
push
pop
cld
cld
ret
icebp
jae
dec
repnz
lahf
adc
in
push
jno
inc
mov
jbe
in
mov
mov
jp
add
adc
lea
(bad)
jo
cmp
scas
pinsrw
push
cs
pop
xchg
mov
push
inc
adc
mov
and
fcom
mov
jae
sbb
cmp
aam
int3
mov
jne
loopne
and
les
jnp
fild
adc
lods
pop
dec
jns
sub
loop
sub
sbb
dec
dec
mov
pop
jp
or
inc
xlat
call
or
es
cmps
jmp
aad
add
add
out
and
(bad)
inc
je
hlt
inc
mov
xor
mov
mov
pusha
ss
adc
sbb
mov
outs
popa
jle
mov
add
test
mov
sbb
iret
sub
adc
sbb
dec
add
mov
fcmovnb
movs
mov
jmp
jmp
mov
xchg
sub
mov
adc
jp
fldenv
mov
adc
out
mov
cmp
mov
push
jmp
sub
aaa
add
stos
cld
shl
inc
xchg
jmp
scas
call
dec
jno
sub
cdq
in
push
addr16
xor
mov
rol
ret
jle
popf
loop
or
addr16
lock
inc
mov
scas
and
jmp
aas
lock
mov
cmp
push
inc
push
mov
or
dec
outs
retf
test
(bad)
and
push
mov
adc
es
jne
push
jle
(bad)
push
stc
jbe
xchg
cmp
adc
call
shl
xchg
addr16
adc
lock
fimul
and
xor
out
jl
push
pop
enter
mov
xor
mov
inc
pop
js
enter
ss
push
adc
push
ror
imul
sub
aas
inc
and
fist
lea
fisubr
pop
inc
(bad)
mov
sub
sbb
(bad)
mul
push
data16
js
mov
sub
add
int3
cvttps2pi
pushf
push
in
pop
cwde
pop
push
inc
and
or
rcl
aad
je
loopne
dec
call
push
lods
sub
daa
enter
adc
mov
enter
cld
xchg
fnstenv
repz
xchg
cli
stos
js
sub
icebp
stc
fisttp
cmps
je
jne
xchg
aaa
pushf
hlt
sub
and
or
das
mov
cwde
xchg
jno
arpl
inc
sub
outs
xchg
mov
(bad)
pop
push
sbb
add
sbb
pop
mov
push
outs
leave
inc
test
ror
adc
nop
push
clc
push
dec
shl
cld
sub
push
inc
pop
xchg
out
add
repnz
push
sti
into
mov
mov
retf
adc
fdiv
setae
aam
imul
bound
movs
sub
jp
in
mov
jp
sbb
mov
movs
ret
cwde
repz
push
je
fs
imul
add
jns
popf
push
xlat
cdq
sub
popf
sub
or
or
fwait
icebp
sbb
mov
xchg
mov
std
mov
pop
lock
mov
xchg
xlat
or
dec
pop
cdq
data16
push
arpl
cmps
test
test
or
xchg
cmp
cmp
xchg
or
popf
inc
pop
xor
sbb
retf
repnz
lods
loopne
jmp
jnp
cli
pusha
mov
inc
dec
fld
jl
js
sub
push
fimul
leave
mov
mov
mov
cmp
outs
push
mov
sub
pop
push
jle
inc
cld
daa
repz
fst
add
(bad)
fstp
xchg
test
popf
fs
aam
pop
aaa
pop
scas
ret
mov
cmp
sbb
or
in
sti
push
pusha
es
inc
aam
xor
arpl
aad
dec
adc
fidiv
stos
shl
push
mov
xor
in
fdiv
push
mov
(bad)
stc
mov
scas
sahf
ret
and
cmp
and
push
imul
cdq
out
mov
pusha
imul
call
pop
mov
lods
mov
or
imul
fadd
pop
pop
pop
fcmovb
into
cld
mov
les
fsub
sub
or
push
inc
ds
dec
xchg
cld
ds
bound
scas
popa
das
mov
arpl
xchg
jge
hlt
adc
mov
push
mov
shl
out
dec
mov
cmp
retf
aad
test
hlt
fist
pop
or
inc
test
pushf
dec
ret
cmps
pushf
aam
cmp
cli
push
ret
sub
pop
inc
pusha
movs
mov
fst
jns
add
cmp
cmp
addr16
jbe
pop
pop
(bad)
outs
out
ins
push
in
push
div
and
add
in
pushf
pop
and
out
pop
adc
inc
dec
cld
xchg
add
int3
std
jp
push
movs
adc
loopne
movs
pop
sub
loop
mov
dec
adc
scas
and
ret
mov
push
cli
and
xchg
aas
cwde
cwde
pop
push
in
leave
pop
hlt
adc
(bad)
pop
push
rcr
sub
hlt
add
and
ja
push
gs
pop
shr
test
push
and
pop
mul
rol
sub
sub
xor
cld
cmp
outs
sub
add
mov
fmul
inc
jecxz
les
and
mov
rol
sbb
mov
pusha
ins
pop
sbb
cs
dec
leave
outs
adc
pop
xchg
lds
sbb
mov
ds
push
push
mov
aas
mov
scas
das
mov
sbb
dec
or
jbe
dec
(bad)
ret
or
jecxz
mov
mov
mov
shl
add
cld
mov
push
inc
ins
jnp
mul
mov
xchg
out
cmp
jg
call
cdq
bound
jl
in
lds
jmp
call
ror
xor
sub
jp
sub
mov
aam
aas
push
mov
dec
push
mov
inc
dec
sbb
les
mov
out
inc
mul
int
addr16
and
and
das
jg
jl
mov
pop
das
or
xor
(bad)
jg
in
cmp
mov
(bad)
in
loope
and
xor
xchg
pop
mov
adc
inc
pop
jno
push
mov
mov
pop
pusha
pop
mov
or
scas
in
pop
bound
lahf
adc
inc
cli
cmps
cmp
jmp
xchg
inc
inc
mov
std
xor
dec
scas
dec
mov
fcomp
xchg
xor
lods
xchg
add
out
movs
ja
push
mov
cld
and
pop
pop
ja
mov
cli
push
(bad)
test
sbb
aas
cli
je
and
ja
mov
mov
cdq
sub
inc
fwait
test
js
jge
mov
push
pand
retf
sbb
mov
adc
mov
dec
les
test
jecxz
mov
xor
push
or
xor
inc
cld
cmp
sbb
jge
int
hlt
adc
call
push
mov
xchg
jecxz
pop
mov
mov
fstp
xchg
lods
leave
dec
hlt
test
mov
cmp
sub
jle
pop
or
addr16
xor
lea
test
or
xor
(bad)
scas
push
les
aam
mov
mov
inc
sub
jge
outs
inc
jg
data16
xchg
loop
sbb
cs
pop
sbb
les
stc
sub
outs
call
(bad)
aaa
out
xor
fsubr
call
xchg
sub
rcl
inc
cli
frstor
cwde
sbb
push
mov
pusha
adc
sbb
hlt
ss
inc
inc
lods
jge
enter
fcomp
(bad)
jmp
fild
mov
ret
push
ficom
fstp
(bad)
or
add
enter
xchg
mov
cld
or
in
stc
add
add
sub
retf
or
(bad)
push
rcl
jbe
sbb
xchg
xchg
mov
enter
aam
push
mov
inc
jae
or
adc
and
pop
lea
lods
xor
mov
daa
adc
fldz
xor
mov
fcom
lea
addr16
mov
mov
add
test
cmp
ror
xor
pop
or
pop
into
dec
jle
sub
mov
adc
leave
jge
hlt
lods
fs
aad
xchg
loop
adc
pop
mov
addr16
loope
sbb
jp
mov
movs
cmps
pop
fimul
mov
cmp
xchg
sbb
cli
int3
pop
add
icebp
jns
or
sbb
sub
mov
dec
push
pop
adc
jne
xor
mov
addr16
sti
cli
in
(bad)
aas
sub
into
nop
lea
sbb
adc
xchg
add
repz
in
mov
int3
sbb
sbb
int
stos
jp
arpl
jnp
cwde
out
sub
dec
stos
and
jno
imul
outs
data16
xor
jmp
push
mov
jl
push
std
ins
out
into
mov
xchg
xchg
push
and
leave
sbb
xor
jmp
mov
push
repz
inc
(bad)
into
loop
jg
out
push
in
sahf
icebp
dec
js
ins
sbb
dec
(bad)
stc
jp
shr
or
dec
and
pop
add
mov
(bad)
pop
mov
dec
scas
leave
outs
mov
pop
pushf
jbe
sbb
jb
mov
pop
in
dec
aad
mov
or
pop
(bad)
push
push
push
sub
push
cmp
xchg
inc
dec
sti
pop
ins
js
sub
jecxz
pop
in
or
les
imul
add
cmp
ret
mov
jmp
mov
xchg
xor
cld
jge
xchg
outs
sub
dec
mov
cmc
add
jnp
inc
adc
rcr
or
into
pop
mov
sbb
cmp
sub
jno
mov
sti
sub
test
inc
jmp
sbb
xchg
clc
scas
out
(bad)
pop
xor
nop
cmp
sub
mov
fist
inc
mov
gs
cdq
adc
(bad)
ins
scas
sbb
jnp
ss
pusha
js
sub
sub
pop
pop
les
inc
fisttp
or
dec
in
(bad)
data16
outs
mov
dec
inc
cmp
mov
icebp
jae
fidivr
or
inc
mov
arpl
mov
mov
push
daa
mov
out
ret
inc
out
mov
shl
pop
mov
jmp
add
arpl
call
sar
mov
fwait
adc
aas
sbb
mov
and
ss
les
addr16
mov
mov
cmp
pop
jmp
cmp
sub
jae
cs
mov
loopne
jle
aam
out
add
xchg
leave
int
jae
call
xor
mov
and
pop
out
shr
clc
sub
aas
xchg
sahf
ds
jmp
pop
mov
mov
mov
dec
lds
sub
fdiv
(bad)
call
in
sahf
mov
mov
in
sub
jb
pop
pusha
and
and
dec
mov
lds
aam
mov
test
add
idiv
fstp
adc
and
in
jb
ss
pop
je
dec
adc
sar
(bad)
sbb
mov
call
aas
mov
pop
pop
sbb
(bad)
lods
loopne
and
ins
dec
mov
jmp
cdq
mov
hlt
movs
repz
jge
test
xor
jbe
add
jmp
es
push
dec
dec
test
ss
jecxz
add
jno
aas
ds
or
cmp
and
add
sahf
push
in
dec
es
mov
cs
aaa
in
mov
loope
mov
cmp
in
or
push
jg
lods
and
xchg
shl
js
mov
es
sub
stc
add
jns
sub
push
mov
arpl
gs
mov
pop
sub
dec
int
mov
push
test
inc
std
(bad)
addr16
(bad)
xor
mov
mov
add
sbb
movs
out
and
js
add
iret
shl
jno
out
jns
pop
setae
jp
sar
ss
sar
es
clc
sub
mov
dec
out
div
adc
pushf
aas
ins
fstp
stos
pop
pop
repz
mov
mov
mov
pop
sbb
fnstcw
and
imul
cmp
lds
sbb
lods
sub
push
outs
sub
mov
imul
sub
mov
outs
ror
shr
(bad)
cmc
pop
push
stc
popf
jo
dec
nop
arpl
push
(bad)
scas
xlat
pop
add
dec
inc
test
daa
out
addr16
mov
dec
icebp
int3
mov
add
div
add
ror
shl
std
and
sbb
push
jmp
push
sbb
dec
aam
ss
dec
xchg
pop
mov
cmp
pop
shl
push
stos
sbb
nop
mov
mov
imul
inc
daa
fwait
jo
add
adc
jl
xlat
icebp
xchg
(bad)
push
push
gs
loope
sbb
(bad)
int3
in
leave
mov
sbb
aam
rcr
es
push
xchg
push
dec
mov
mov
fiadd
js
cmp
mov
aas
ret
pop
int3
test
(bad)
push
daa
push
movs
cmps
movs
lahf
pop
ror
push
mov
add
call
cmp
pop
imul
and
mov
jmp
jo
sahf
sbb
mov
mov
ins
adc
jns
int
mov
(bad)
out
and
loop
push
and
cmp
sti
stos
call
xlat
push
cli
rcr
pop
imul
(bad)
div
sub
mov
push
mov
push
add
(bad)
imul
cmc
mov
add
hlt
std
inc
sbb
inc
or
inc
cld
(bad)
cli
sub
xchg
sbb
jnp
xchg
outs
push
pop
sar
jl
inc
out
mov
jnp
in
mov
mov
jge
mov
ds
adc
cmp
xchg
cwde
cmp
push
sub
int
popa
clc
add
aas
or
cmp
mov
push
into
xor
push
(bad)
fisubr
jmp
jb
pop
mov
or
inc
cmp
ret
jno
fxch
cmps
aas
repz
push
pop
(bad)
mov
sti
xor
jecxz
in
inc
sbb
data16
add
mov
sub
fcom
or
fwait
adc
aas
mov
fsubr
lods
pop
cmp
mov
or
sub
fneni(8087
pop
adc
fidiv
shl
lahf
dec
fadd
aas
push
cmp
mov
inc
cld
mov
aad
call
add
dec
adc
push
xchg
(bad)
cwde
call
push
push
inc
inc
sub
jmp
jmp
inc
repnz
adc
js
or
sub
mov
or
mov
imul
pop
push
jbe
es
and
fnsave
ficomp
into
sub
sbb
cmp
(bad)
fldcw
pusha
mov
and
mov
push
sbb
jne
int
cmc
aad
adc
add
push
outs
mov
mov
fwait
jne
jmp
test
add
into
fisttp
aam
mov
sbb
icebp
cmp
and
jb
pop
leave
ds
lahf
jmp
pop
inc
cli
jmp
psubusw
sub
xchg
sub
push
outs
dec
push
mov
jge
add
mov
into
out
mov
jl
pop
rcr
inc
xchg
fdivr
jle
jbe
in
jg
mov
or
das
push
jmp
jg
ins
(bad)
mov
arpl
je
je
lahf
or
aam
arpl
mov
or
sub
popa
aaa
lea
xchg
cmps
and
pop
lock
jmp
(bad)
stos
ins
test
outs
test
cmp
scas
clc
imul
cmps
loop
mov
or
bound
sbb
pop
mul
cli
scas
adc
(bad)
retf
leave
push
ins
(bad)
scas
out
loop
arpl
mov
scas
dec
ja
sahf
adc
std
push
add
shl
sub
and
ror
and
jnp
mov
sub
jne
sar
outs
push
mov
dec
jl
ror
mov
enter
outs
sub
imul
push
out
xor
mov
jae
pop
sub
fwait
(bad)
iret
or
call
imul
push
daa
or
inc
iret
not
cmp
xchg
clc
adc
pusha
pop
mov
test
les
cli
adc
push
or
sub
ds
pop
test
add
push
jmp
adc
xchg
ja
clc
push
in
push
inc
pop
jge
movs
mov
out
rol
pop
or
dec
inc
add
rcl
sbb
adc
pop
xor
mov
jo
aam
xchg
es
cmp
pop
jg
mov
sub
bound
std
fucomp
in
arpl
movs
pop
and
inc
loope
mov
fidiv
push
out
(bad)
pop
push
aad
je
or
lahf
cmp
(bad)
jge
sub
dec
jecxz
push
xor
xor
push
push
jg
rcl
mov
test
mov
sbb
cmp
lahf
iret
xchg
push
inc
mov
jl
and
in
js
cmp
push
lea
ins
ja
mov
xor
out
mov
sub
mov
js
std
stos
adc
sub
addr16
xchg
cmps
and
scas
push
call
in
sbb
add
inc
rcl
pop
mov
cld
cwde
sub
(bad)
and
pop
sbb
mov
popa
push
aam
bound
inc
mov
mov
es
xchg
xchg
jbe
mov
jg
or
loope
push
movs
ins
jmp
adc
pop
xchg
sub
jae
into
repnz
stc
push
ret
sbb
lahf
xlat
daa
and
or
dec
pop
mov
loop
(bad)
jge
mov
adc
dec
sub
adc
add
sbb
cmp
mov
rcr
sub
sbb
add
jge
pop
je
adc
mov
aam
push
or
call
sub
mov
xchg
shl
fwait
adc
inc
outs
cmp
loope
sbb
ret
jae
jecxz
jnp
xchg
jecxz
or
pop
cmp
mov
add
test
cmp
dec
cmp
or
(bad)
and
and
call
lahf
ret
xchg
jno
ss
leave
mov
xchg
adc
in
lock
loop
dec
imul
push
inc
and
xor
jne
xchg
lds
movs
in
xor
int
and
(bad)
cdq
push
mov
lods
aas
sti
mov
dec
xchg
cs
mov
sbb
ret
sbb
xor
cdq
test
jbe
outs
mov
jge
add
jl
test
pop
adc
or
sbb
adc
ins
sbb
mov
and
pop
jo
jb
inc
ss
xchg
sub
mov
test
arpl
dec
imul
mov
movs
(bad)
hlt
aam
sbb
push
dec
cmp
sbb
out
or
es
outs
cwde
fwait
sbb
(bad)
mov
mov
int3
mov
jmp
pop
mov
aad
scas
dec
and
xor
xlat
aam
or
xlat
adc
iret
cmp
retf
lods
adc
xor
std
sub
icebp
and
(bad)
jno
fild
push
out
jg
xchg
sub
jmp
jb
add
in
xor
leave
jge
xlat
inc
and
pop
(bad)
pop
retf
outs
push
cli
jns
pushf
outs
out
push
ins
xor
adc
add
mov
bound
ins
mov
inc
cmps
xchg
outs
push
xor
mov
or
call
sti
out
mov
ja
outs
fmul
fwait
adc
add
sahf
cmp
jp
in
ss
retf
mov
dec
xor
mov
fimul
mov
test
push
sbb
push
mov
dec
cmp
gs
jl
aam
shr
push
sub
sub
sub
(bad)
dec
div
pop
xchg
mov
jb
lds
inc
out
mov
fist
jne
xchg
xchg
fsubr
repz
mov
push
repz
aas
inc
mov
dec
ret
push
rol
ret
push
xor
and
out
hlt
cmps
lods
xor
retf
mov
ja
cmp
mov
and
fwait
inc
pusha
call
add
xor
aas
retf
test
sbb
or
arpl
xor
ret
add
mov
adc
mov
pop
ret
push
xor
push
arpl
xchg
add
shl
out
jl
dec
imul
xchg
jmp
cmp
jbe
cs
add
pop
dec
rcl
fsubr
scas
imul
cdq
mov
pop
mov
cmp
jmp
sbb
lahf
icebp
repz
sub
adc
jecxz
xor
cli
add
push
gs
cmp
xor
test
add
pusha
adc
cdq
shl
mov
(bad)
xor
mov
jns
je
jmp
inc
out
imul
iret
das
adc
xchg
adc
mov
xor
push
xor
mov
adc
inc
and
inc
test
sub
cmps
ss
and
cmp
jno
push
jbe
xor
jae
sub
sbb
aas
xor
fistp
xchg
and
adc
dec
repnz
aam
popa
jle
fisub
retf
je
xchg
jno
push
(bad)
inc
shl
sub
push
push
retf
sub
(bad)
xchg
push
mov
aaa
adc
dec
xchg
inc
call
push
push
inc
sub
jno
rol
cmp
push
aad
mov
push
mov
xor
daa
popa
stc
(bad)
rcr
outs
cmps
sub
inc
mov
(bad)
scas
and
jmp
les
sub
mov
pop
xor
cmp
inc
ja
dec
push
cwde
and
xchg
pop
xchg
nop
imul
lods
repz
xchg
out
inc
lock
das
pusha
pop
fs
ins
mov
push
add
dec
or
sbb
dec
out
lods
ficom
cmp
push
dec
dec
aad
stos
add
sbb
sub
xor
jns
lods
push
in
pop
xlat
inc
ss
stc
add
add
xchg
xor
add
mov
sub
repz
dec
retf
pop
xchg
icebp
fs
push
das
cmc
std
not
out
add
jge
rcr
out
sub
inc
pop
jge
cmps
inc
xchg
jg
aad
mov
fbld
mov
cwde
pop
xor
cmps
dec
jnp
xor
mov
push
add
loope
addr16
jo
sub
(bad)
xor
adc
sub
dec
jae
jmp
inc
inc
or
inc
pop
pop
shl
push
test
jne
leave
mov
sbb
js
jmp
pop
mov
movs
or
cli
pop
mov
popf
ss
test
adc
add
fistp
sbb
adc
(bad)
dec
pop
pop
inc
jbe
and
or
rol
inc
movq
push
mov
cmp
inc
xchg
add
test
cmp
mov
jle
inc
push
mov
(bad)
icebp
add
sbb
stos
aad
enter
xchg
xor
xor
aaa
es
(bad)
shl
jno
lahf
leave
fsubr
outs
mov
inc
repz
jno
mov
sub
data16
(bad)
iret
(bad)
xchg
retf
adc
scas
or
sub
and
sbb
adc
jnp
scas
aam
imul
fmul
pop
ret
int
ret
mov
inc
sahf
sub
stc
mov
sbb
jbe
cwde
and
mov
(bad)
sar
aaa
scas
jb
mov
in
dec
adc
jbe
xchg
xor
pop
and
call
movs
mov
in
mov
mov
mov
dec
scas
inc
mov
mov
xor
mov
retf
stos
fistp
adc
aad
inc
mov
int3
inc
xor
dec
jmp
bound
adc
pop
mov
mov
shl
dec
fist
sbb
push
xor
dec
adc
loope
jmp
sub
push
ins
fwait
lahf
mov
nop
or
xor
jne
loop
cwde
add
lock
in
mov
xchg
jg
ins
stos
aam
movs
cwde
adc
mov
imul
mov
sbb
mov
ja
lds
ret
push
mov
stos
adc
jne
push
jno
hlt
jns
ret
lods
lds
xchg
add
test
xchg
(bad)
push
sbb
dec
cmp
enter
add
stos
gs
inc
push
dec
mov
out
adc
retf
or
adc
fimul
out
lods
dec
and
int3
pop
push
inc
jp
cmc
gs
pop
repz
xor
sub
inc
cmp
sub
lock
std
rol
lahf
push
mov
and
push
push
in
pop
repz
or
or
sub
std
sti
int
jb
xchg
fwait
cmp
or
jp
ja
jl
mov
int3
out
mov
fs
jns
or
cld
(bad)
or
pop
cmps
(bad)
fucom
(bad)
sar
leave
outs
xor
jmp
xchg
in
jns
popf
sub
(bad)
jl
add
shr
and
pop
add
cmp
test
pop
mov
fdivr
cmp
adc
(bad)
sbb
movlps
cmp
mov
xor
or
and
rcl
daa
xchg
fwait
lock
jnp
push
dec
ret
or
int
inc
push
push
mov
inc
xor
lods
inc
or
xor
xchg
mov
shl
out
and
adc
sar
rcr
loope
or
hlt
stos
dec
xchg
inc
push
in
lahf
ror
div
jmp
(bad)
fdiv
adc
cmps
xchg
xor
int
dec
fldcw
(bad)
imul
and
iret
cmps
inc
imul
or
xor
aas
mov
push
add
and
call
pushf
fst
push
jb
jb
pop
jmp
test
or
loope
pusha
jl
sbb
repnz
fild
nop
mov
outs
sahf
ret
pop
mov
inc
push
xor
jno
mov
add
aas
aad
inc
mov
push
xor
sbb
hlt
(bad)
(bad)
push
mov
adc
js
add
sub
dec
cdq
das
add
fiadd
(bad)
jne
pushf
inc
retf
je
pop
mov
push
fdiv
repnz
lahf
add
push
inc
aas
psadbw
dec
mov
mov
push
lods
and
xchg
mov
loop
sahf
cmp
pop
add
or
fld
cmpxchg
pop
or
jnp
cmp
dec
add
hlt
push
jno
fldcw
or
jo
popf
cld
xchg
or
lds
stc
(bad)
and
pop
mov
jle
addr16
fadd
add
int
pop
ds
mov
push
stc
arpl
fmul
lock
ret
dec
mov
push
pop
mov
mov
add
push
je
cmp
xchg
ret
xchg
pop
stos
push
in
lahf
sbb
mov
imul
mov
ja
push
cmp
mov
fs
dec
std
std
or
mov
or
sub
fmul
ins
sar
sbb
std
setge
fisub
adc
das
ret
cdq
mov
fnstsw
mov
addr16
repz
mov
cmc
imul
inc
(bad)
cmp
shr
div
xchg
rcl
sti
leave
push
clc
jmp
mov
movs
loopne
mov
ror
jp
shl
test
jg
or
not
inc
mov
dec
and
movs
mov
repz
adc
call
sbb
movs
repz
inc
adc
xchg
add
lock
jo
and
stos
push
cmp
out
sbb
inc
inc
inc
or
adc
or
sbb
aam
jne
test
mov
or
push
sar
cmp
aas
mov
jns
addr16
fistp
or
mov
cmp
not
jae
prefetchw
rol
push
movs
(bad)
xchg
fmul
mov
or
or
mov
push
aad
cld
mov
scas
push
lock
lahf
push
mov
pop
sub
dec
sbb
add
sbb
bound
test
xlat
aad
stos
sub
mov
iret
or
sub
mov
es
adc
sti
mov
jmp
inc
cmps
and
out
push
xor
fdivr
fadd
inc
out
shl
cmps
sbb
sbb
movs
push
fistp
scas
cdq
jp
jb
pop
in
pop
mov
inc
test
xor
repz
and
jecxz
sbb
call
pusha
call
lods
push
dec
cmp
jb
xchg
adc
test
(bad)
clc
cmp
mov
pop
inc
call
ds
push
xlat
mov
sbb
in
and
pop
addr16
or
les
gs
es
pop
jns
add
fdivrp
mov
cs
sbb
sub
dec
fucomi
mov
stos
jae
inc
std
in
les
xchg
xchg
mov
or
stos
jle
sahf
jecxz
movs
mov
repnz
cdq
adc
dec
aam
in
pop
stc
loop
popa
push
fisttp
les
adc
in
into
jle
mov
push
cmp
out
mov
bound
es
push
xchg
movs
mov
adc
mov
aaa
pop
push
mov
shl
sbb
mov
dec
clc
push
int
test
jge
sub
mov
sub
fst
and
fbld
sub
inc
not
mov
push
pop
pop
fistp
retf
mov
cld
add
sbb
cmps
test
icebp
cmp
pop
xor
mov
push
jnp
jnp
jge
sbb
cmc
xchg
mov
xor
lea
or
cmc
or
call
mov
test
add
or
imul
std
dec
shr
adc
repnz
fdivr
jo
sbb
xor
aam
shl
sbb
xchg
mov
aam
or
test
lea
setns
lock
dec
dec
push
jp
jnp
iret
scas
sahf
(bad)
jo
xchg
and
add
sbb
ins
mov
jno
cmp
nop
cmp
ror
aad
arpl
mov
retf
jne
cwde
push
add
xchg
cli
sub
or
xor
mov
dec
int3
stos
inc
or
jl
or
daa
(bad)
mov
sahf
mov
mov
cli
mov
shl
cmc
push
mov
sub
and
inc
bound
mov
jecxz
add
ds
int
sysenter
add
neg
bound
add
inc
fs
fstp
call
inc
sbb
jno
imul
mov
push
cmp
jge
je
out
jo
pop
sbb
loope
icebp
cs
addr16
les
xor
cmp
or
or
out
sub
mov
xchg
or
clc
test
mov
test
in
mov
cmps
retf
fsubr
push
fdivr
sbb
sbb
pop
lahf
jge
not
in
or
mov
push
sti
xor
or
dec
lods
pop
nop
push
and
push
scas
iret
mov
mov
cmp
mov
mov
adc
inc
out
push
sub
mov
pop
xchg
mov
dec
test
adc
iret
jl
lock
popf
mov
loopne
adc
std
sub
add
cmp
shl
inc
test
sbb
into
or
cmp
mov
dec
loope
push
ja
cmps
sbb
pop
repnz
mov
mov
sbb
jb
call
xlat
dec
es
btc
dec
inc
adc
mov
lds
stc
(bad)
push
stos
ror
loopne
dec
mov
xchg
lods
pop
pop
fcom
dec
sahf
sbb
jo
aam
test
imul
fs
and
in
mov
xchg
add
or
add
xor
scas
dec
in
push
or
frstor
ror
mov
fldl2e
(bad)
stc
dec
mov
and
xchg
imul
sbb
lahf
and
mov
loopne
ss
cld
lods
xchg
pop
mov
cmps
dec
je
pop
push
scas
retf
aaa
jnp
stos
and
cmps
cmp
and
(bad)
pop
sbb
jne
and
push
int
inc
popa
mov
sub
movs
lahf
scas
or
imul
jge
fidiv
retf
cmp
clc
lock
out
pushf
movs
add
test
test
sub
fsubr
sbb
ds
iret
cmc
sahf
xchg
addr16
xor
mov
cdq
sbb
mov
sub
dec
pusha
sbb
push
loopne
push
lahf
adc
adc
into
aam
ret
bound
or
mov
ds
call
inc
cmp
sbb
inc
(bad)
mov
rol
jne
xchg
xchg
imul
dec
add
push
inc
cld
inc
fcomp
daa
sar
ret
mov
clc
test
pop
add
jno
or
div
adc
daa
jne
add
das
and
ja
mov
fcom
lods
jp
rcl
add
xor
out
mov
bound
and
(bad)
int
push
ret
ficomp
in
sub
movs
repz
test
push
fidiv
and
sub
sub
xor
sub
movs
sti
push
fcmovb
sub
xlat
inc
inc
inc
mov
dec
push
xchg
pop
cmp
int3
out
pop
sbb
loop
xchg
loopne
mov
sub
push
sbb
jo
xor
mov
cmps
out
mov
dec
or
es
hlt
add
push
js
adc
mov
mov
jp
movs
cmps
arpl
mov
pop
mov
aaa
icebp
xchg
and
add
clc
mov
lods
es
pop
in
cmp
ret
xchg
(bad)
jnp
mov
adc
cmc
std
es
add
ror
movs
jmp
popa
psllw
sub
pop
test
lods
pusha
sti
jo
(bad)
retf
hlt
mov
mov
imul
inc
jmp
adc
repnz
add
dec
inc
in
dec
sti
mov
test
add
push
pcmpeqd
dec
(bad)
repz
xchg
pop
jno
jae
mov
add
jno
mov
test
retf
and
pop
sbb
or
dec
sbb
ret
adc
inc
daa
jp
jne
sub
mov
adc
cmps
ror
loop
push
pop
mov
xchg
jae
test
and
jle
and
lea
cmp
xor
(bad)
push
das
mov
jp
xor
sbb
push
mov
fld
xchg
cdq
loop
xchg
rcl
mov
stc
dec
pop
fdiv
mov
push
pop
jns
or
fistp
fld
scas
sub
cmp
pop
je
aaa
jecxz
and
adc
js
sub
mov
push
dec
data16
inc
pop
into
js
stc
adc
out
lahf
push
xchg
jg
lock
cmps
aam
sbb
cwde
ds
jne
jo
aad
cmp
xchg
mov
add
push
sub
mov
add
jbe
jmp
mov
(bad)
loope
repnz
push
push
dec
out
cmps
sub
add
fs
retf
test
stos
js
push
sub
or
aas
cmps
inc
retf
xor
jo
cmp
jge
outs
dec
mov
dec
pop
lahf
nop
sbb
push
femms
pop
xchg
loope
or
dec
loopne
stc
inc
push
add
loopne
and
stos
sub
jne
add
mov
ss
ret
mov
arpl
cmps
cmps
lods
and
inc
adc
mov
enter
xchg
loopne
dec
loope
and
jns
adc
loopne
lods
pop
sbb
mov
hlt
call
add
push
in
mov
or
sub
cmps
cmp
adc
out
mov
out
sbb
mov
iret
pusha
aad
xor
lods
ja
mov
jl
movs
fldenv
sub
loope
stos
sbb
jle
dec
dec
cs
pop
out
adc
lds
push
frstor
ror
icebp
enter
jbe
add
out
and
fnstcw
xor
or
xor
xchg
retf
outs
mov
and
(bad)
hlt
es
jb
mov
repz
xor
push
adc
hlt
rcl
repnz
cwde
adc
cli
xor
test
adc
sub
test
xchg
gs
mov
lods
leave
psraw
cdq
pop
stos
bound
push
stos
mov
sti
pop
jae
jmp
jne
fisub
dec
frstor
xchg
shl
jmp
pop
push
fisttp
cmp
outs
jg
cmc
ins
push
and
(bad)
neg
sbb
or
xchg
imul
jnp
mul
mov
rol
inc
pop
imul
lods
xor
cmp
dec
mov
dec
inc
call
cld
fwait
pop
mov
stos
xchg
repz
hlt
fs
dec
xor
pop
push
(bad)
shr
adc
movs
mov
dec
fs
or
pop
lds
adc
out
push
setae
sbb
mov
adc
mov
in
push
aas
mov
les
sbb
cmp
test
imul
in
(bad)
dec
mov
movs
inc
dec
ficom
pop
sbb
jno
pop
out
pusha
sbb
fmul
pop
lock
mov
imul
ret
mov
arpl
cli
pop
mov
xor
aas
stc
jbe
mov
or
in
ror
imul
mov
inc
(bad)
mov
jmp
mov
stos
pusha
(bad)
mov
aaa
in
jbe
(bad)
mov
mov
movntps
push
push
jle
xor
dec
push
loop
xchg
jno
sbb
fs
scas
(bad)
mov
fst
addr16
imul
fnsave
into
aad
and
iret
pop
inc
nop
lock
movs
(bad)
stos
outs
push
pop
jecxz
jb
mov
jns
mov
xchg
push
sbb
call
xor
stos
push
inc
jl
pop
pop
sub
cmp
pop
xchg
xchg
fnstsw
dec
push
(bad)
outs
mov
push
stos
xchg
jg
push
mov
outs
ret
outs
or
addr16
or
outs
adc
arpl
or
cli
neg
mov
jbe
lods
mov
mov
imul
xchg
push
or
enter
xchg
mov
ins
cmp
stos
pushf
repnz
call
fisttp
in
mov
clc
push
mov
hlt
lods
push
scas
in
ss
jmp
cmp
cs
push
sbb
repnz
fwait
jge
fwait
xor
sahf
push
leave
xchg
ja
test
inc
addr16
jge
enter
sbb
fnstsw
sub
dec
repnz
daa
(bad)
enter
xor
in
pop
vmovupd
pop
xchg
dec
inc
call
loop
shl
jle
aam
xchg
mov
cmp
aas
pop
inc
cmp
jnp
pop
movs
sti
ins
xor
popa
cmp
sbb
lds
add
adc
xchg
mov
cmp
push
sbb
sbb
or
loopne
aad
sti
push
aam
sbb
cmc
push
fsub
(bad)
out
adc
xchg
mov
repz
cli
fisubr
ds
lods
adc
inc
xchg
xor
aas
call
sub
push
add
jmp
imul
hlt
stc
sub
cmp
call
push
mov
pushf
cmp
adc
ja
imul
mov
iret
cmc
jnp
cmp
adc
xchg
mov
xchg
or
inc
out
cmp
(bad)
dec
(bad)
mov
jge
pop
das
mov
call
add
(bad)
in
xchg
movs
inc
push
stc
xlat
add
jmp
les
getsec
push
std
ss
jae
ror
(bad)
pop
lods
inc
mov
inc
loop
xchg
mov
fcmovnb
mov
in
stos
or
xchg
adc
mov
xchg
jbe
push
fadd
push
mov
popa
xor
cli
fiadd
push
mov
das
inc
cwde
mov
pop
sub
dec
in
jnp
(bad)
adc
xlat
or
sar
js
xchg
inc
cld
cwde
cmp
adc
cmps
push
ret
aaa
in
xchg
xchg
xchg
push
sub
inc
xor
out
stos
xor
in
addr16
or
loop
aaa
cmp
bnd
cmc
inc
clc
mov
jmp
dec
movs
lock
xchg
sti
adc
ins
pop
pop
ss
xor
cli
cs
clc
(bad)
fistp
in
aam
lahf
fwait
movs
loope
dec
adc
pop
(bad)
pop
cmps
sbb
scas
out
xchg
or
ja
mov
or
add
neg
xchg
sub
bound
js
mov
pop
jb
mov
mov
mov
xlat
mov
stos
(bad)
not
jl
leave
call
and
std
daa
out
adc
in
adc
retf
adc
cli
loopne
or
hlt
cmp
shl
cli
pop
jp
xor
pop
xchg
(bad)
dec
inc
xor
fisubr
pushw
mov
scas
imul
out
dec
repnz
pop
dec
sti
xchg
dec
iret
cmp
cli
mov
imul
mov
ins
xlat
xchg
push
test
mov
mov
bound
or
and
add
push
adc
or
in
push
test
mov
imul
hlt
jb
sahf
add
movs
(bad)
pop
test
das
or
test
add
jl
loopne
xor
setl
inc
jmp
shl
nop
scas
add
sbb
push
mov
sub
fcom
stos
ins
or
sbb
stc
call
push
ss
jb
stos
jp
inc
xor
xor
mov
(bad)
vpmulhuw
and
lds
jecxz
outs
or
nop
push
sbb
movs
sub
outs
clc
xchg
ins
bound
aad
fwait
lea
pop
jle
lods
(bad)
mov
inc
loope
lds
cld
mov
or
mov
dec
mov
inc
xchg
and
test
add
jno
sub
fidivr
xchg
sti
dec
mov
sahf
or
mov
pushf
stc
sbb
jb
sub
mov
pop
xor
cmps
cmp
sbb
mov
pop
jmp
mov
pop
inc
mov
mov
lods
dec
and
cmps
rcl
adc
pop
xchg
xor
xor
mov
push
rol
or
imul
and
sbb
leave
pop
push
cmp
mov
push
dec
mov
jmp
test
push
xor
ret
dec
repnz
loop
adc
ins
mov
ja
imul
cli
xor
dec
lahf
jne
cmp
xchg
inc
inc
pop
sbb
mov
outs
js
sbb
test
and
mov
and
adc
js
jae
scas
mov
lods
call
repz
fidiv
jecxz
push
cmpxchg
sti
and
ror
pop
or
xchg
lock
sub
inc
or
pop
push
pop
push
inc
pushf
xor
mov
in
iret
pop
je
jmp
int
addr16
mov
cli
push
idiv
enter
or
clc
mov
add
or
jg
and
ins
pop
mov
xor
xchg
jbe
mov
xchg
test
dec
scas
xchg
gs
xchg
int
les
imul
jg
sbb
jae
(bad)
sti
das
stos
aam
hlt
cmp
mov
sahf
jb
(bad)
fwait
int3
ins
retf
or
shr
arpl
outs
xlat
scas
push
add
jb
clc
sub
mov
cdq
scas
ret
dec
jmp
xchg
cli
retf
mov
sub
pop
(bad)
leave
popa
sbb
jbe
jbe
jnp
push
jl
push
rol
fist
xchg
lahf
fs
mov
xchg
mov
xor
(bad)
xor
mov
sti
xor
push
or
xor
xchg
outs
sbb
mov
test
es
dec
xchg
cmp
jg
dec
inc
pop
cmp
mov
push
xchg
mov
ins
xchg
retf
mov
icebp
dec
or
fdivr
sbb
es
xor
fadd
and
(bad)
jne
test
out
mov
or
icebp
shl
inc
(bad)
adc
rcr
imul
pushf
lahf
mov
sbb
sub
mov
fcmove
test
test
dec
adc
outs
inc
aaa
movs
into
shr
in
jge
and
test
mov
xchg
inc
mov
push
outs
xchg
xchg
adc
fwait
fwait
test
sub
fisubr
cdq
stc
xchg
push
div
data16
in
ss
aad
out
and
test
push
es
push
jge
or
lea
hlt
(bad)
sbb
push
cli
sbb
leave
sbb
adc
jge
rcr
into
lock
jb
mov
pop
mov
xchg
sbb
mov
sbb
movs
mov
jnp
sbb
xchg
or
inc
or
xlat
mov
add
pushf
stos
inc
dec
in
loopne
mov
xchg
dec
push
dec
imul
ficomp
jmp
cmp
iret
inc
jb
test
imul
or
cmp
cmc
and
mov
adc
and
inc
push
mov
push
int
addr16
mov
scas
ror
movs
pop
cmp
pusha
enter
dec
cmps
cmps
outs
dec
out
(bad)
in
call
push
jmp
aad
lahf
push
(bad)
pushf
push
dec
call
mov
or
mov
outs
stos
adc
mov
inc
fdiv
mov
push
cmc
test
mov
ret
mov
xchg
in
test
adc
xlat
(bad)
fstp
bound
shr
sub
(bad)
adc
mov
mov
push
repnz
add
mov
(bad)
sbb
jo
fwait
mov
leave
cmp
add
jbe
aad
push
xchg
fidiv
push
popa
push
stos
stc
xor
adc
or
sbb
push
sub
hlt
mov
out
sub
and
jmp
jp
icebp
push
xchg
int
xor
mov
jg
js
inc
aad
pop
enter
(bad)
mov
pop
push
movs
inc
mov
scas
rcr
adc
adc
inc
mov
jmp
sbb
adc
movs
xchg
hlt
inc
add
add
scas
xchg
and
stos
fist
sub
pop
dec
cs
cdq
je
mov
mov
(bad)
popf
gs
loope
push
push
and
nop
cmp
adc
std
(bad)
sub
push
sbb
shl
out
cli
ins
call
movs
lds
xchg
pop
pop
std
add
scas
stc
pop
xor
and
lock
dec
push
xor
push
or
test
pop
mov
cdq
loop
inc
clc
in
shl
sahf
pop
repz
push
inc
and
inc
cld
or
and
aad
cmps
pop
or
fcom
jmp
ret
fiadd
bts
xchg
mov
ror
fwait
jmp
mov
pop
xchg
push
repnz
fwait
mov
shl
cmc
push
dec
xchg
frstor
mov
movs
cmp
xchg
dec
test
push
ss
sbb
(bad)
or
add
xchg
sub
mov
lock
pshufw
out
call
mov
sub
pop
jae
aas
aas
jmp
sahf
or
fild
or
clc
push
cmp
push
test
shl
out
lahf
pushf
and
push
out
outs
in
jo
and
push
mov
sub
push
mov
div
retf
dec
and
test
repnz
mov
mov
in
stc
loope
add
clc
jp
mov
(bad)
mov
fcomip
jle
mov
jmp
clc
(bad)
xchg
rcr
jns
iret
loope
sub
dec
cdq
xor
aas
pop
or
adc
(bad)
jmp
sbb
jnp
add
sbb
push
cmp
ds
test
stc
inc
ins
dec
jge
add
sub
xchg
jmp
add
push
mov
mov
push
ret
leave
jae
nop
jmp
stos
test
or
inc
test
div
or
mov
addr16
clc
mov
fst
and
push
pop
ds
and
inc
inc
jne
fdivp
inc
mov
pop
ss
sti
mov
push
fimul
lods
mov
test
mov
loopne
sbb
xor
xor
test
or
ja
jo
int
into
retf
cmp
or
cs
push
pushf
stos
xchg
pushf
movs
ins
pop
je
fisubr
mov
or
les
(bad)
inc
retf
sbb
fdiv
hlt
pop
add
pop
add
ror
xchg
adc
stos
jmp
inc
cmc
repz
jmp
and
pop
repnz
jo
mov
inc
fwait
adc
mov
inc
and
repnz
and
outs
adc
repz
mov
jp
rcl
and
(bad)
sub
into
mov
and
in
add
mov
pop
xor
mov
sub
pop
scas
push
inc
pop
inc
fucomp
xchg
clc
fisub
nop
js
int
jmp
dec
retf
mov
in
ret
jp
cmps
mov
test
jle
imul
add
iret
enter
int
movs
stc
push
jp
addr16
mov
aad
icebp
mov
lahf
mov
pop
sar
mov
aam
dec
movs
les
dec
xor
jl
adc
cmp
mov
fdiv
sub
xchg
lahf
aad
bt
pusha
add
inc
(bad)
adc
xchg
add
dec
xchg
loope
in
fs
mov
(bad)
stos
(bad)
loope
sbb
and
push
test
ret
ja
xchg
lds
adc
mov
popa
and
mov
lods
xchg
in
mov
cmp
mov
mov
out
fdiv
mov
call
outs
imul
or
pop
cwde
iret
aas
bswap
push
jne
cmp
shl
imul
repz
sub
jp
jb
cdq
sar
mov
popa
shl
dec
js
mov
cmp
xor
mov
or
ins
fs
and
jne
mov
push
inc
pop
inc
add
icebp
enter
sti
loop
nop
pop
out
f2xm1
call
mov
shr
pop
arpl
in
inc
cld
cmp
pop
xor
frstor
sub
mov
push
inc
sar
mov
aaa
nop
inc
stc
shl
out
jge
push
out
daa
pop
xchg
pushf
dec
push
fwait
dec
fmul
jl
push
imul
lahf
mov
mov
(bad)
gs
xchg
sub
neg
pop
rcr
push
pop
call
mov
sbb
cmp
mov
or
std
js
inc
jae
dec
jmp
fmul
mov
sbb
inc
sub
push
xor
push
dec
movs
or
add
imul
jne
dec
push
cmps
pop
dec
push
mov
scas
mov
mov
ins
mov
std
xchg
ficom
pusha
pop
pop
enter
sub
pop
xor
in
pusha
mov
adc
pop
shl
cmp
out
and
sub
hlt
out
clc
or
pop
dec
or
xlat
xor
push
inc
shl
push
jns
ret
pop
sub
jg
leave
mov
xor
scas
gs
sbb
fcmovne
xor
cmps
cmp
ret
dec
mov
inc
dec
movs
cmp
mov
push
mov
mov
jbe
pop
jmp
mov
xchg
and
sbb
add
dec
cwde
sub
inc
dec
sub
cwde
pop
pop
push
push
add
jecxz
sahf
and
adc
mov
mov
xchg
mov
jb
cmp
popf
pop
add
cld
jae
les
mov
jmp
frstor
xchg
push
sub
mov
std
pushf
enter
mov
xlat
test
fwait
daa
jno
xchg
dec
mov
inc
add
arpl
ins
or
mov
inc
in
or
sub
or
dec
push
stc
repz
jae
aas
std
pop
pop
ja
push
jp
jg
sub
sahf
mov
mov
shl
fldcw
or
jle
cmp
add
int3
mov
arpl
mov
sbb
mov
mov
or
jae
jle
retf
push
dec
fwait
das
repnz
(bad)
hlt
repnz
lods
push
movs
ss
push
jbe
cmps
(bad)
xchg
inc
dec
aaa
push
mov
adc
dec
mov
scas
mov
or
sub
xchg
dec
sub
add
mov
mov
and
dec
xchg
mov
into
cmovb
inc
adc
lahf
pushf
hlt
cmp
inc
pop
add
(bad)
clc
mov
clc
and
aam
ds
pop
dec
adc
daa
dec
shr
xlat
icebp
adc
icebp
fwait
xchg
cld
cmp
adc
aas
push
or
lods
lods
shl
push
or
xor
retf
jmp
sbb
int
xchg
jp
mov
es
jbe
inc
jae
adc
adc
cmp
cwde
clc
imul
lds
dec
dec
sbb
mov
lahf
sub
sub
cdq
nop
std
inc
les
pop
inc
push
mov
pushf
out
test
pop
pusha
mov
pop
ins
pop
rcr
fcmovnb
push
cmp
push
inc
xchg
mov
ret
mov
inc
xchg
cs
ins
sbb
(bad)
std
jg
mov
call
push
adc
sub
jns
in
retf
dec
repnz
retf
std
jns
cmps
pop
(bad)
out
call
adc
and
test
xchg
mov
inc
adc
in
or
(bad)
fnsave
les
js
sub
mov
add
mov
pop
lock
test
fmul
in
cwde
int
dec
sbb
dec
jp
xor
arpl
mov
shl
sbb
dec
retf
push
mov
clc
mov
pushf
mov
mov
ds
push
dec
xor
add
xchg
ror
in
in
mov
ins
imul
daa
push
hlt
jae
add
(bad)
mov
rol
jbe
dec
icebp
and
or
loopne
mov
inc
mov
pop
ret
jbe
sar
pusha
xchg
ja
jl
ja
(bad)
inc
sub
(bad)
loopne
inc
fnstenv
ret
or
push
or
int
mov
jl
push
loopne
ret
pop
sbb
sub
pop
and
scas
or
xchg
jp
jnp
dec
shl
mov
push
adc
adc
mov
ja
arpl
outs
jbe
cdq
(bad)
xor
cmp
popa
in
jae
mov
push
mov
inc
or
sub
and
push
ja
dec
xlat
hlt
(bad)
test
push
mov
stos
jle
dec
xor
xchg
mov
ja
mov
retf
or
out
sbb
(bad)
iret
jae
and
jno
xchg
xchg
sub
in
int
lods
pop
fild
gs
mov
pop
and
in
out
mov
sub
push
push
xchg
xor
mov
adc
push
fwait
adc
mov
jmp
cmp
jbe
cmp
sub
imul
or
fs
fisttp
repz
sub
lods
sbb
mov
mov
sub
hlt
out
shr
(bad)
mov
jo
fsubr
cld
xchg
cmps
xchg
sbb
or
movs
cs
cdq
or
(bad)
mov
aas
ror
out
retf
in
test
(bad)
push
imul
cmp
mov
movups
pop
ret
sbb
inc
jl
dec
lea
cmc
int3
mov
mov
aaa
mov
popf
out
int
aaa
lods
xchg
mov
xchg
mov
int3
xor
sbb
aam
jnp
mov
dec
pop
or
and
scas
jp
xor
inc
mov
pop
retf
add
cmp
mov
pop
rcl
cmp
rep
stos
mov
mov
stos
jnp
jno
fwait
xchg
pop
push
gs
jae
or
pop
les
in
nop
or
or
xor
or
sub
jl
cmp
fiadd
(bad)
hlt
scas
mov
into
loop
popaw
inc
not
cmps
out
scas
(bad)
dec
inc
adc
inc
jmp
rcr
push
(bad)
push
mov
das
ins
mov
aam
sbb
sbb
bound
mov
xlat
call
push
test
cmp
sbb
inc
or
mov
test
cmp
dec
dec
test
stos
mov
cld
mov
mov
pop
jae
fstp
sbb
lods
and
jmp
jno
shr
cmp
sbb
add
jl
popf
jg
fcmovb
mov
mov
xlat
push
and
and
outs
jb
sbb
mov
(bad)
ja
pop
and
mov
leave
xchg
ins
xor
call
xor
pop
adc
movs
retf
cdq
add
xchg
cmp
cmps
scas
iret
xchg
dec
cld
fs
add
stc
xchg
mov
sub
int3
int3
sbb
and
sub
pop
scas
js
call
jle
xchg
fldenv
ja
fisubr
neg
dec
xchg
push
lock
jle
or
(bad)
fnstcw
mov
adc
xchg
push
jb
stos
push
mov
enter
fisubr
das
xlat
cmp
js
pusha
loopne
cwde
pop
cmp
xor
cmp
mov
nop
cdq
xchg
mov
sti
int3
or
mov
and
imul
int3
jnp
and
inc
arpl
cmp
adc
pop
test
xchg
lock
cmp
pop
(bad)
test
in
dec
dec
test
jge
mov
mov
inc
movs
xor
push
jle
push
loop
test
xchg
mov
sbb
bound
lds
mov
cs
xor
es
retf
test
hlt
pop
pop
jae
aad
adc
jecxz
jmp
xchg
sti
and
cmc
adc
shl
cmps
call
jns
lods
ss
pop
xor
cdq
cmp
or
test
jbe
pushf
mov
jge
sub
test
cmps
push
je
stos
jmp
or
nop
mov
inc
mov
mov
xor
sub
push
inc
adc
mov
aam
aaa
or
jg
mov
ficom
test
cmp
int3
inc
lea
or
and
or
xchg
xchg
jle
aad
or
adc
stc
lock
in
dec
xchg
std
sub
inc
in
popf
dec
mov
push
aas
pop
jge
xor
outs
and
jne
xor
mov
and
or
sub
aaa
or
out
scas
jno
xchg
dec
aaa
je
xchg
push
fild
lock
pop
jb
inc
ret
loopne
scas
add
xor
mov
sti
fst
mov
adc
or
jno
dec
(bad)
sbb
arpl
jns
test
shr
pushf
or
loopne
out
dec
outs
cwde
or
add
lods
jae
dec
jg
jns
std
fnstsw
sbb
mov
xor
into
cmp
xchg
movs
push
push
inc
std
cdq
adc
push
pop
pop
xchg
sub
xchg
cmp
mov
and
pushf
mov
fsubr
inc
nop
test
movs
sub
adc
and
and
imul
and
call
xchg
ja
(bad)
xor
sbb
xor
fwait
es
push
adc
push
add
push
call
wrmsr
lock
xchg
popa
mov
ds
xchg
dec
sbb
push
mov
popa
or
rcl
(bad)
cdq
xchg
jnp
mov
out
sahf
dec
sbb
inc
ret
mov
fnstenv
shr
jg
addr16
sub
(bad)
arpl
test
ja
icebp
test
popa
jo
in
ror
adc
js
je
mov
out
fwait
jecxz
scas
(bad)
mov
shr
jbe
in
les
jl
lea
rol
je
fcos
out
(bad)
shr
test
jb
test
xor
mov
pop
(bad)
mov
into
bound
jl
pop
and
push
arpl
pusha
fdivr
xor
xchg
xor
outs
mov
jmp
xchg
aam
cmp
adc
out
jmp
pusha
es
iret
xor
xchg
mov
sub
aam
ror
rcl
mov
lds
xchg
test
add
mov
outs
cmp
call
stos
push
mov
and
mov
pop
mov
jg
dec
or
data16
and
fimul
xor
mov
(bad)
sti
retf
dec
dec
pop
adc
shl
adc
ins
adc
(bad)
inc
xor
mov
jno
mov
mov
(bad)
inc
or
jp
je
mov
mov
icebp
out
ds
adc
xchg
ins
mov
push
inc
fiadd
adc
mov
jmp
iret
nop
or
out
inc
jmp
add
ds
(bad)
jb
aaa
jns
sti
ror
add
sbb
pop
xchg
mov
pop
ja
fcomp
daa
lea
lods
jno
daa
(bad)
(bad)
jmp
mov
sbb
dec
sub
jg
adc
inc
xor
xor
push
mov
push
add
pop
xchg
mov
clc
inc
ret
call
popa
jne
mov
dec
sbb
pop
ret
and
icebp
add
push
xor
pop
add
imul
out
in
and
test
inc
leave
xor
ret
daa
sub
bound
jbe
jns
cld
push
imul
aas
sbb
daa
mov
scas
int3
stc
arpl
addr16
jle
mov
les
mov
inc
push
push
pop
mov
dec
test
aad
sbb
fwait
sbb
in
(bad)
ins
jmp
aas
fst
stc
dec
adc
and
fidiv
jg
mov
sub
mov
(bad)
jge
xor
xchg
es
adc
movs
xchg
das
daa
jge
mov
or
push
lahf
jmp
cs
sbb
rol
add
sbb
call
xchg
cmp
xor
mov
pop
cdq
dec
(bad)
cmp
enter
dec
movs
rcr
(bad)
xor
mov
sub
pushf
push
movs
sti
out
scas
cmps
push
jg
mov
lock
mov
jle
adc
inc
scas
pop
outs
push
xor
adc
sti
rol
sbb
std
sar
xchg
and
fwait
inc
data16
ins
add
and
fist
sar
pop
inc
add
out
sbb
aas
data16
sbb
jge
imul
jmp
cmps
pop
fisttp
push
hlt
fstp
loop
and
cdq
leave
pushf
and
jle
arpl
jle
cmps
or
push
mov
and
sbb
jbe
pusha
jp
xchg
rcr
adc
jl
cli
push
imul
retf
fmul
dec
push
rol
inc
sbb
mov
pop
xchg
mov
inc
dec
movs
lahf
push
xchg
mov
(bad)
fist
adc
rcl
not
test
push
(bad)
fucom
push
sbb
or
mov
jle
jmp
or
push
movs
pop
inc
scas
stos
loopne
stc
popa
dec
je
mov
fisub
stos
sub
jbe
xlat
iret
cmc
lahf
cmp
mov
shl
push
dec
dec
pop
jbe
inc
xchg
loope
inc
inc
xchg
outs
lock
or
mov
sub
and
push
mov
repz
int3
lea
xor
ret
into
push
xchg
dec
dec
jle
mov
push
add
int3
dec
daa
(bad)
xchg
cwde
pop
cmp
add
jle
data16
(bad)
repz
loop
mov
pop
stos
fistp
call
sbb
call
inc
push
mov
in
mov
ja
inc
loopne
mov
and
add
pop
and
loopne
(bad)
jbe
ret
(bad)
jg
mov
in
jecxz
inc
or
fsubr
pushf
mov
add
mov
xor
retf
mov
retf
xchg
iret
cmp
in
aad
cli
push
call
cli
xor
gs
mov
test
or
xchg
adc
in
add
mov
push
and
pop
xchg
outs
xchg
arpl
loopne
arpl
jno
push
cmps
addr16
or
dec
sbb
sub
xchg
mov
and
xchg
stc
mov
xor
and
cmp
cs
retf
xor
scas
xchg
pop
pop
add
dec
mov
dec
push
jbe
test
cli
xchg
mov
xchg
mov
loopne
xor
sar
inc
xlat
dec
out
icebp
jg
pop
inc
cdq
jns
xchg
mov
xor
xchg
sub
lds
retf
stos
fsub
mov
dec
jns
sub
jnp
dec
mov
stc
cmps
mov
cmps
inc
jg
mov
int3
mov
and
sub
mov
dec
mov
mov
ins
jl
in
fisub
ffreep
push
pop
inc
xchg
int3
call
xchg
or
(bad)
out
arpl
sbb
mov
inc
jno
adc
jp
push
dec
mul
xchg
test
jmp
and
sbb
into
out
dec
xchg
and
xor
ret
xchg
push
shl
(bad)
xlat
adc
cs
hlt
mov
in
or
add
movs
cmp
mov
mov
scas
clc
fldcw
sar
imul
lods
rol
lods
jp
mov
jae
inc
push
jg
sahf
push
out
push
shl
lock
xlat
jmp
out
in
add
xor
and
mov
shl
xor
pcmpgtb
dec
and
call
sti
fadd
mov
jbe
sahf
pushf
outs
in
xor
adc
cs
sar
movs
xor
or
add
bound
mov
popf
jne
adc
ja
sbb
icebp
std
jmp
jae
int3
cmp
xchg
aad
gs
std
(bad)
js
sub
mov
stos
repz
adc
out
out
aad
daa
jbe
jbe
cs
call
cmp
adc
push
das
xchg
lods
repz
fdivrp
inc
in
mov
inc
mov
jp
(bad)
cmps
xchg
xor
mov
push
jecxz
out
xchg
movs
ins
cdq
pop
je
inc
bound
(bad)
inc
std
loope
int
xlat
imul
addr16
jb
js
loope
ja
and
popf
in
fsubr
test
arpl
in
cdq
sbb
inc
dec
addr16
movs
inc
cmp
clc
or
pushf
dec
cmp
and
shr
stc
xchg
jo
popa
nop
xchg
jb
push
pop
push
mov
or
dec
inc
mov
or
sbb
pushf
mov
mov
aam
lock
and
push
shr
mov
pop
push
and
push
sub
cmps
jb
or
mov
adc
js
ja
and
pop
rol
inc
add
mov
into
push
arpl
lods
cmp
dec
xchg
mov
jmp
cmps
clc
xor
push
lods
ja
push
repz
push
add
outs
push
fimul
out
or
(bad)
ja
in
(bad)
sub
mov
pop
repz
out
mov
xor
fcomp
lahf
out
jecxz
loop
jb
push
jno
xor
movs
dec
mov
push
mov
in
or
sbb
aas
popf
outs
ss
popa
or
jmp
dec
loope
xor
rcl
pop
jne
pop
rcl
sahf
sbb
out
jp
jmp
xor
nop
stos
cdq
mov
and
imul
popf
mov
sbb
pop
(bad)
in
fadd
ror
jmp
fsub
out
cmps
push
push
out
pop
jne
push
xlat
and
and
jg
aas
sub
and
pop
jl
jns
xor
ins
sub
ret
mov
pop
and
es
ss
fmul
mov
cdq
sbb
call
fwait
outs
mov
xor
aad
mov
ret
clc
stos
sub
stos
push
inc
dec
(bad)
xchg
stos
xchg
pushf
add
clc
mov
cmp
je
gs
es
mov
dec
idiv
xor
mov
cld
(bad)
stc
in
in
pushf
ret
xlat
test
stos
out
in
pop
mov
fidivr
pop
loope
aas
test
in
test
pop
lea
ins
pushf
jnp
push
or
adc
mov
inc
rcl
add
xchg
cli
add
adc
out
loop
push
mov
cwde
das
jmp
loope
cmc
push
mov
int3
dec
or
loop
mul
inc
dec
shl
scas
test
inc
ins
jg
mov
dec
out
or
lahf
mov
ins
stos
(bad)
mov
aaa
fidivr
inc
pop
mov
lahf
add
mov
rcl
pop
aad
mov
cwde
retf
add
or
shl
sahf
dec
iret
mov
cmp
pop
or
rcl
ret
sbb
leave
ret
cmc
adc
jge
clc
xor
(bad)
scas
movs
std
sahf
cmp
cmc
loop
call
shr
add
(bad)
push
cld
or
rcl
rcl
int
int3
cmp
imul
jg
leave
sbb
aas
xor
adc
out
stos
mov
in
inc
add
(bad)
fist
adc
movs
jl
pop
es
and
je
push
pop
mov
cvtdq2ps
mov
mov
xchg
sub
xor
in
in
or
sub
sahf
sbb
xchg
cdq
push
je
mov
dec
test
adc
xor
sbb
mov
add
add
ins
jnp
lods
jno
cwde
adc
xor
sub
push
arpl
in
adc
test
stos
jge
je
lahf
js
xchg
(bad)
fiadd
mov
fs
aas
mov
pusha
mov
jno
cmp
add
or
adc
icebp
cmps
pcmpgtd
jmp
inc
ret
sub
movs
fadd
push
(bad)
popa
data16
mov
popf
sub
pop
scas
sub
out
push
jae
adc
cmp
mov
outs
out
push
dec
jge
sbb
enter
fimul
push
mov
lahf
mov
xor
push
mov
ret
fsubr
aas
inc
(bad)
fld
imul
dec
adc
inc
lods
cmp
jmp
pop
mov
(bad)
jae
stos
std
push
rcl
or
and
sti
sbb
scas
adc
inc
mov
imul
xchg
cmp
xor
loope
jge
neg
clc
fs
fcom
mov
(bad)
sub
mov
dec
xchg
inc
push
mov
(bad)
pop
mov
test
hlt
jb
sub
pushf
imul
dec
in
add
(bad)
fcom
add
test
cmp
fisub
jne
cvtdq2ps
repz
ins
stos
dec
in
arpl
push
les
lahf
xor
xor
in
push
fdivr
mov
loope
mov
in
xor
fist
movs
inc
jo
into
pop
xor
ins
movs
sub
add
pop
jmp
xor
js
pusha
mov
fldenv
and
pop
mov
cmc
dec
cld
adc
imul
pop
add
mov
aad
mov
popa
call
fstp
in
cld
mov
add
pop
sbb
inc
inc
aad
sub
xchg
add
inc
pop
cmc
rcr
aad
mov
int
cld
out
test
and
and
rcl
mov
inc
scas
js
popf
dec
push
lods
mov
call
xor
fdivr
pop
cmp
add
xchg
mov
loope
cdq
popf
(bad)
sbb
xor
outs
sub
aaa
call
jmp
movs
push
iret
jp
pop
lea
mov
inc
mov
arpl
push
aam
add
push
mov
mov
loop
pushf
aaa
cmp
inc
jg
out
inc
cmps
test
out
xchg
daa
mov
xor
mov
and
add
mov
inc
rcl
out
xchg
mov
or
inc
leave
cmc
cwde
mov
cmp
aaa
dec
mov
pop
or
xor
int
mov
pop
les
mov
cld
mov
push
sub
dec
call
outs
aam
pop
pop
lods
and
xchg
fsubr
inc
shl
mov
fimul
sub
mov
jp
shl
push
xlat
mov
and
shr
popf
out
(bad)
mov
mov
aad
imul
in
dec
push
pop
mov
xor
data16
mov
xchg
pusha
shl
jae
dec
pop
pushf
stos
(bad)
mov
jns
push
in
mov
pop
mov
mov
test
stc
xor
push
push
stc
fdiv
test
add
jno
mov
mov
or
xchg
cwde
out
or
js
or
mov
add
into
xchg
ds
pop
jbe
jl
sbb
sub
mov
bound
xchg
sub
in
cmp
jb
in
fcom
int3
cdq
fsub
push
xlat
and
add
in
in
add
add
imul
in
pop
js
adc
test
or
push
(bad)
lock
pop
popf
movs
or
fadd
retf
cmps
cwde
rol
push
fld
test
and
(bad)
dec
retf
sbb
xor
sub
xor
cmp
lods
push
cmp
add
std
arpl
test
sbb
add
cmp
and
mov
pop
mov
pop
repnz
sti
mov
push
int
xchg
bound
ja
adc
and
imul
sbb
(bad)
mov
xor
aas
mov
dec
xor
or
sub
fist
adc
ds
jl
xchg
jno
adc
jae
fcomp
mov
inc
push
adc
lock
add
mov
xchg
pop
jbe
cmp
xchg
inc
adc
movs
repz
stc
data16
lahf
lds
shr
push
paddb
sub
(bad)
pusha
fild
xor
mov
cli
pop
add
sbb
mov
inc
mov
or
retf
jl
jmp
rcl
cmp
mov
dec
dec
ror
shr
in
rol
mov
xchg
inc
mov
bound
add
or
into
push
sub
ret
outs
sub
shl
add
daa
inc
aaa
xchg
adc
jmp
sub
adc
or
lock
fisubr
jae
push
call
sbb
mov
icebp
push
sub
fmul
push
xor
mov
sub
aam
mov
ret
xor
nop
pop
(bad)
jl
mov
jae
and
ds
cmp
adc
jo
or
test
lods
repz
ins
inc
bound
xchg
pop
std
test
movs
and
dec
dec
mov
dec
test
pop
mov
in
ficom
or
cmp
mov
cmp
cld
or
add
out
arpl
push
data16
call
(bad)
in
ret
cwde
(bad)
pop
sbb
xchg
pop
sbb
cdq
(bad)
fs
shl
sub
pop
sub
cmps
sbb
scas
pop
pop
out
or
dec
mov
mov
pop
adc
xchg
cwde
fcomp
pop
sbb
les
daa
data16
(bad)
mov
cmp
ss
mov
dec
je
mov
cmc
xor
sahf
stos
sub
out
addr16
pop
les
shl
iret
hlt
das
or
dec
imul
inc
push
xchg
test
mov
sti
jnp
jmp
js
adc
pop
jae
movs
mul
sar
dec
loop
pop
pop
push
sbb
enter
xor
das
xchg
enter
adc
push
mov
mov
jecxz
cmp
sub
in
scas
leave
shr
pop
sbb
into
mov
jnp
push
das
rol
aam
(bad)
retf
xchg
ret
imul
fcmovnu
mov
pusha
shl
(bad)
pop
retf
int
dec
in
fwait
repz
or
addr16
sahf
xchg
jmp
ds
push
cmp
repz
mov
pop
dec
pop
mov
fptan
fimul
arpl
pop
or
dec
mov
jb
leave
cs
std
mov
mov
fild
hlt
and
je
ret
sbb
mov
adc
dec
adc
or
jg
push
mov
fmul
sahf
loopne
mov
cld
movs
lds
mov
leave
dec
mov
cwde
sbb
call
dec
add
add
sbb
dec
push
jp
retf
jge
cs
cmp
add
lds
xor
out
cli
int3
jmp
(bad)
dec
daa
mov
dec
cwde
push
retw
in
popa
out
test
xchg
cmp
add
mov
pop
jbe
lods
mov
retf
and
lahf
loope
cmp
sub
aas
jge
mov
sub
aaa
mov
(bad)
es
xchg
out
cmps
js
js
and
add
aaa
xchg
jmp
icebp
test
cs
loopne
movs
stos
mov
pop
mov
fwait
push
or
loopne
sbb
pop
lea
mov
lahf
mov
(bad)
fs
sub
inc
jbe
xor
retf
cmp
fsub
xchg
xor
push
mov
mov
(bad)
pop
push
push
push
mov
inc
cmps
shl
jmp
lahf
dec
inc
inc
data16
add
mov
lea
das
push
dec
pop
push
adc
jns
adc
sub
or
aas
xor
pop
hlt
sub
retf
je
pop
xchg
arpl
pop
or
mov
int3
and
pusha
sar
(bad)
fsubr
sbb
int
lods
ret
scas
(bad)
cmp
pop
push
pop
mov
cli
or
enter
adc
cmp
cmp
bound
inc
int
xchg
fadd
ror
and
and
jp
sbb
(bad)
sub
stos
iret
add
xchg
dec
lock
repz
jmp
push
mov
ins
jb
(bad)
pop
mov
add
(bad)
and
inc
aam
cmp
mov
sbb
dec
arpl
jae
inc
sbb
sub
mov
jle
push
jl
popf
adc
call
xchg
mov
xchg
pop
mov
adc
xchg
adc
retf
xchg
mov
bnd
sti
mov
call
scas
add
outs
in
out
test
xor
bound
mov
dec
cmps
test
mov
daa
shr
call
dec
das
dec
jbe
imul
xchg
arpl
test
pop
lds
(bad)
or
xor
add
sbb
nop
mov
sahf
jb
cs
(bad)
(bad)
and
mov
xchg
push
mov
cwde
cmc
jo
test
stos
adc
sub
jge
int
call
cmps
jne
pushf
sub
outs
xlat
jns
test
arpl
mov
scas
push
pop
and
cmps
fbstp
pop
ffreep
xor
jmp
mov
fadd
imul
and
lods
mov
loope
push
mov
ret
aaa
jb
adc
ror
dec
imul
imul
jmp
popf
mov
sub
or
neg
fadd
mov
sub
icebp
test
test
addr16
cmp
test
sub
fild
or
pop
xchg
das
or
(bad)
shl
and
mov
sbb
aaa
aam
inc
scas
mov
popf
(bad)
jmp
repz
arpl
movs
not
icebp
repnz
lds
jle
in
in
push
or
mov
mov
inc
sbb
stos
popa
inc
setae
sahf
std
shr
pop
add
das
dec
xchg
dec
jb
inc
xor
outs
sub
cwde
icebp
pop
mov
mov
loopne
icebp
xor
cmp
xchg
and
cs
sub
pop
xchg
stos
in
or
xor
adc
cmps
shl
push
ret
sub
add
sub
fs
add
clc
scas
in
mov
outs
inc
jae
pop
mov
stos
dec
stos
mov
xchg
sub
sahf
inc
xor
lods
inc
out
rcl
test
jp
xchg
mov
bound
in
imul
(bad)
sub
ss
mov
and
icebp
sub
jno
clc
lock
out
fistp
pop
mov
les
pop
call
dec
dec
popa
mov
inc
shl
cs
fdiv
mov
xchg
adc
inc
out
daa
adc
and
jns
cmp
jg
scas
in
inc
idiv
jns
outs
fst
mov
push
int
and
adc
lahf
shr
ret
pop
pop
and
inc
shr
inc
jmp
aas
jecxz
dec
int3
mov
dec
dec
dec
push
adc
mov
pop
xor
cmps
call
xor
jecxz
mov
xchg
ds
jo
in
mov
push
hlt
sbb
mov
cmp
or
and
inc
inc
sti
mov
ffreep
push
mov
sub
inc
dec
jno
arpl
and
test
enter
mov
sti
(bad)
jnp
mov
in
frstor
or
retf
inc
iret
in
pop
inc
ja
add
ret
popa
jge
mov
dec
lock
sbb
jns
daa
adc
or
jno
push
in
and
ror
outs
aam
mov
cld
jl
adc
cmps
mov
mov
xchg
retf
loop
cmp
sahf
dec
dec
call
adc
shl
cmp
xor
push
ret
and
aaa
mov
pop
fdivr
ret
gs
pop
adc
or
repnz
in
mov
xor
mov
mov
or
je
pop
mov
jo
in
xchg
lods
mov
mov
fwait
push
push
dec
pop
cdq
cwde
inc
jbe
shl
imul
(bad)
mov
rcl
fild
mov
jo
jle
out
xchg
dec
inc
push
push
cmc
ret
out
in
lea
push
mov
sti
daa
jmp
sbb
idiv
push
popf
popf
pop
mov
xchg
xchg
jbe
sub
mov
pop
sub
mov
add
daa
lods
and
cmp
out
jne
cli
cmp
add
ja
int
movs
lods
inc
dec
push
sbb
imul
movs
daa
and
inc
jge
mov
pop
test
nop
call
and
(bad)
dec
loope
push
jae
cwde
sbb
xor
lock
inc
movs
push
pop
adc
ss
test
mov
sbb
out
mov
sub
mov
lgs
jb
std
out
aas
sbb
out
movs
jmp
xchg
mov
mov
cwde
ror
das
push
rcr
mov
jns
jo
ret
dec
lock
mov
das
add
jbe
retf
lods
ds
sub
dec
sbb
mov
inc
repnz
pop
xchg
add
les
aad
ss
add
in
push
fbld
pop
push
mov
cmp
call
mov
dec
xor
mov
jne
scas
push
addr16
mov
loopne
gs
inc
and
cli
cmps
pop
scas
cld
aad
mov
lods
stos
aam
ror
in
pop
dec
sbb
daa
popa
jo
nop
adc
loop
call
lods
arpl
call
lahf
pop
mov
hlt
mov
rcr
cmp
lds
or
cmp
mov
dec
aad
add
mov
mov
adc
jg
inc
scas
loope
jecxz
adc
imul
push
outs
popf
inc
stos
in
idiv
push
call
xor
dec
mov
mov
fnstsw
stc
(bad)
mov
mov
push
cdq
mov
mov
scas
jo
push
cdq
fld
mov
fst
bound
dec
(bad)
add
inc
outs
pushf
in
push
xor
movs
xor
nop
clc
jmp
fst
sub
movs
xchg
or
es
cmp
or
inc
xor
add
retf
repnz
mov
clc
lods
sub
pop
pop
xchg
scas
jge
imul
or
inc
push
adc
mov
xchg
inc
inc
jo
repz
repz
call
jge
dec
out
movs
fs
add
and
mov
xchg
cdq
mov
sbb
jge
sub
aaa
in
sbb
jg
outs
sub
outs
jbe
pusha
scas
jp
js
fsubr
imul
sbb
pop
mov
sti
push
fwait
retf
dec
retf
mov
dec
adc
adc
scas
mov
cmps
push
aam
xchg
sbb
cmp
mov
push
mov
ret
push
adc
lods
cmp
adc
jg
xchg
xchg
dec
(bad)
mov
and
repnz
mov
call
adc
retf
lahf
das
add
jae
rcr
repnz
ja
xor
stos
dec
loop
cmp
stos
loop
push
in
mov
push
adc
mov
(bad)
and
sbb
sar
hlt
xchg
jne
push
sahf
add
and
sub
inc
repnz
icebp
(bad)
ds
cmp
sbb
ret
push
or
inc
cwd
lods
retf
add
outs
xchg
lods
mov
iret
sub
test
lods
(bad)
mov
lock
aad
jns
mov
std
mov
push
jmp
aam
cli
add
fadd
push
xor
(bad)
jae
imul
add
or
mov
hlt
cmp
mov
pop
enter
pmulhuw
out
out
imul
inc
shl
repz
sbb
mov
rcr
inc
adc
push
int
mov
add
sbb
lock
push
add
add
outs
lock
xchg
adc
sti
mov
adc
push
sub
add
aas
stos
in
adc
push
xor
out
xchg
pushf
xchg
and
lods
in
jge
add
ja
and
out
cwde
adc
stc
dec
mov
add
mov
push
xchg
and
cmp
sti
sbb
cmp
or
jnp
xchg
mov
xchg
lds
gs
jbe
fwait
rol
outs
aam
push
push
mov
sub
and
cdq
int
pop
fs
in
cmp
nop
adc
je
mov
mov
sub
cld
pop
mov
jge
mov
jo
adc
push
adc
add
push
sbb
es
dec
xor
repnz
cmp
fbld
or
inc
cmc
add
mov
cli
cwde
dec
or
sbb
sahf
add
shl
mov
gs
jns
sub
fidiv
sbb
inc
leave
mov
mov
or
sbb
icebp
(bad)
adc
push
jle
(bad)
retf
push
mov
mov
xor
lds
data16
lods
inc
cmps
ins
adc
in
pop
or
test
in
adc
ins
lods
nop
mov
dec
xchg
pop
mov
scas
lds
sub
retf
add
dec
jg
push
push
fwait
push
fdiv
or
stc
shl
in
cld
int
mov
scas
pop
push
std
jns
push
ret
ss
pop
jp
mov
push
lahf
lods
jbe
mov
loopne
mov
or
cmp
push
call
cmp
push
in
jo
adc
adc
xor
cli
jo
lods
jecxz
hlt
mov
xchg
ja
pop
imul
jno
aad
cmp
and
ret
jne
aaa
xor
or
inc
(bad)
retf
in
shr
outs
push
push
retf
xchg
add
sti
xchg
int
xchg
(bad)
or
and
dec
dec
mov
repz
into
pop
adc
xor
jmp
cmps
aaa
leave
enter
fcomp
pop
xchg
jb
inc
sub
or
push
cdq
cmp
js
popf
(bad)
out
(bad)
retf
mov
(bad)
sbb
mov
outs
rol
cmps
adc
shr
or
fdiv
pop
adc
fs
jne
in
sub
inc
mov
jle
add
fldlg2
enter
ficom
movs
outs
cwde
nop
mov
inc
mov
jnp
pop
cmp
or
mov
adc
add
stos
mov
push
test
js
xor
rol
sbb
sub
es
std
mov
int
ror
dec
sbb
dec
and
mov
inc
cmp
adc
mov
xor
test
mov
sbb
psubq
into
and
add
loop
adc
in
ss
jno
xchg
mov
mov
sbb
push
pop
push
repz
mov
xchg
div
mov
lods
adc
stos
ss
scas
jg
adc
lock
repnz
sub
xor
dec
sahf
cmp
ficomp
xchg
aad
push
iret
(bad)
test
in
xor
cs
dec
imul
data16
inc
lock
dec
jg
adc
push
dec
call
test
aad
mov
mov
jb
aad
bound
mov
cmp
ret
mov
bswap
cmps
jbe
add
adc
jbe
aas
pop
ret
jne
std
pop
sub
mov
stos
out
inc
mov
jmp
xchg
std
sub
movs
neg
fnstenv
mov
pop
cmp
jo
data16
in
in
loop
cwde
and
sbb
stos
sbb
xchg
dec
jmp
mov
imul
jmp
popa
mov
mov
or
test
jle
fwait
mov
push
xor
pop
and
loope
adc
lods
adc
popa
or
aam
outs
ret
mov
cdq
sbb
add
sub
scas
and
adc
bound
mov
js
ds
jne
push
cwde
mov
ror
and
xchg
xchg
int3
shl
mov
sahf
loope
xor
add
mov
jns
inc
iret
pop
sbb
cmp
mov
cmovb
pop
sbb
xor
scas
cmp
dec
movs
shl
out
mov
push
in
in
xchg
sbb
(bad)
mov
sbb
push
inc
mov
or
push
scas
mov
push
imul
jb
push
rcl
lods
stos
lods
test
and
dec
or
in
cld
mov
mov
arpl
inc
mov
mov
adc
bound
mov
jns
add
je
adc
lods
out
loopne
inc
xor
mov
adc
sub
inc
sub
fidivr
cmp
fst
xchg
adc
cmps
sub
jp
jl
out
rol
call
cdq
cwde
mov
sbb
ror
dec
sbb
and
popf
(bad)
adc
push
iret
xchg
fisub
sbb
bound
ror
loop
mov
in
popf
ret
fimul
lods
lea
or
fwait
mov
dec
mov
aam
xchg
adc
daa
inc
fidivr
jle
adc
pop
or
and
bound
fbstp
data16
sbb
xchg
or
sub
aad
jp
js
pop
sar
mov
rcr
jne
mov
and
rcr
xchg
(bad)
rcl
mov
jl
loopne
test
sahf
fsub
scas
pop
mov
call
test
push
hlt
jno
bnd
jo
pop
jle
xchg
and
sub
(bad)
out
push
mov
lahf
jb
or
stc
pop
add
xor
arpl
mov
pusha
dec
sub
loop
inc
push
loop
retf
pusha
fisub
push
je
mov
(bad)
aas
add
push
into
or
outs
(bad)
sub
ret
test
gs
fldenv
jmp
mov
add
outs
cli
mov
cs
pop
je
sbb
sub
push
dec
imul
bound
aaa
cmp
xor
in
lods
add
push
sti
sub
leave
xchg
pop
movs
mov
repnz
mov
pusha
cmps
shl
fprem
(bad)
dec
loope
into
cmps
daa
xchg
dec
mov
popa
fmul
out
(bad)
mov
xchg
jb
sbb
ror
ds
dec
ss
gs
out
fmul
pop
jo
mov
scas
mov
inc
icebp
dec
adc
outs
cmc
(bad)
xor
in
iret
scas
sub
test
aaa
js
push
or
mov
adc
sbb
xchg
std
mov
ds
jbe
es
int
lahf
xor
mov
stc
sbb
enter
mov
rol
inc
mov
jae
mov
xor
outs
popf
xchg
dec
lods
inc
fcom
sbb
mov
test
hlt
rol
pop
fmul
jo
js
cmp
cs
sti
call
push
adc
(bad)
(bad)
and
push
bound
ins
add
sub
adc
nop
sahf
(bad)
mov
jmp
xor
jnp
out
rol
mul
sub
std
in
push
jecxz
scas
loope
mov
pop
mov
pop
xor
sbb
aaa
fs
jle
out
or
sub
test
movs
aad
inc
test
outs
mov
push
in
aaa
cmp
mov
sbb
cmp
pop
mov
not
and
stos
gs
cld
test
dec
adc
les
imul
mov
jecxz
std
and
mov
(bad)
imul
retf
push
ret
(bad)
sub
and
mov
lods
and
dec
push
jae
aaa
jnp
mov
pop
sbb
add
imul
hlt
xchg
popa
sub
lahf
push
scas
or
sbb
and
ffree
push
inc
test
ds
ins
mov
inc
in
loope
pop
mov
add
idiv
call
cmp
shr
mov
repnz
jle
mov
loop
sbb
xor
scas
adc
push
push
adc
stos
fs
in
cmps
aaa
lock
in
xchg
sbb
in
bnd
fcom
inc
pop
cmc
add
scas
xlat
test
enter
scas
or
lods
sub
lds
add
sub
pop
dec
lock
leave
or
mov
stc
fsubr
add
sub
sub
test
ins
jne
pop
jp
inc
gs
jb
cmp
mov
aam
packssdw
inc
arpl
outs
test
or
mov
icebp
cmps
mov
mov
xor
pop
sub
mov
shr
xchg
nop
adc
xor
ret
inc
pop
adc
xor
dec
ret
and
and
jl
das
ja
cmp
lods
dec
add
loopne
add
xchg
adc
daa
fdiv
popf
mov
or
ret
aaa
rcl
push
push
lea
jno
jmp
push
mov
daa
cmp
jnp
mov
xor
mov
inc
retf
(bad)
jg
xchg
pop
add
les
add
xchg
xor
ds
loopne
push
pop
imul
jmp
(bad)
fimul
cmp
pop
mov
aam
and
mov
dec
sti
cs
dec
aam
push
pop
lods
push
xchg
mov
in
test
and
das
(bad)
sar
inc
xor
mov
mov
fbld
xchg
mov
mov
inc
xor
jmp
mov
lea
push
lea
mov
stos
sbb
les
popa
(bad)
add
cmc
mov
push
sbb
mov
pop
adc
dec
(bad)
shl
(bad)
jae
fs
test
jp
add
in
dec
in
mov
test
xor
shl
clc
jnp
mov
stc
inc
jne
loopne
mov
adc
sub
push
retf
sub
cmp
int
add
es
sbb
xchg
xor
or
pop
add
pop
jmp
mov
cmp
or
rcl
or
jle
iret
xor
add
(bad)
jecxz
mov
fs
mov
push
or
cwde
sub
scas
(bad)
pop
in
rcl
enter
sub
or
or
fstp
mov
test
jmp
add
scas
stos
sub
dec
fcmovb
(bad)
jg
pop
cmc
mov
and
pop
retf
dec
ins
mov
enter
xchg
push
js
sar
in
ficom
(bad)
push
je
pop
cdq
icebp
jle
and
ins
cmps
jno
loope
inc
mov
out
pop
bound
call
ror
je
mov
inc
addr16
movs
inc
pop
inc
inc
cld
(bad)
xchg
aas
retf
sar
mov
push
mov
cli
fdiv
movs
or
jp
mov
ja
(bad)
mov
arpl
rol
fwait
sub
pop
ret
sbb
mov
xlat
cwde
mov
pop
out
out
xchg
push
cld
stos
int
mov
pop
aas
jo
rol
scas
ins
sti
adc
es
jge
lahf
outs
test
xchg
ret
xor
out
mov
repnz
stos
fiadd
xor
mov
jo
mov
bound
cwde
data16
sub
fs
rcl
push
or
push
test
(bad)
iret
stos
mov
and
sub
loopne
cmc
arpl
inc
mov
in
inc
jmp
ins
adc
cli
xchg
pop
adc
adc
loop
fsub
and
loop
xor
mov
cmps
sbb
or
jbe
test
push
call
std
mov
pop
cmp
push
cld
sbb
jg
sub
xor
adc
mov
cmp
out
shr
(bad)
and
rol
add
rcr
sub
mov
sbb
mov
es
or
je
(bad)
or
ret
sbb
jl
mov
inc
adc
mov
jle
mov
ins
mov
and
xchg
mov
mov
cmp
es
popf
fbld
mov
adc
call
inc
retf
rcl
xchg
jmp
and
mov
xor
xchg
hlt
stos
jg
cmp
add
ja
inc
nop
aam
inc
fcmovne
inc
fistp
scas
mov
imul
sbb
dec
cs
dec
and
mov
jecxz
lods
stos
int
test
add
ds
mov
das
jge
ret
jp
imul
test
add
adc
jl
jbe
ins
lea
in
add
sbb
sub
clc
call
sbb
sbb
ret
jb
ffree
add
adc
dec
ficomp
mov
sub
fdivr
(bad)
xchg
adc
mov
adc
add
imul
or
pop
jb
fiadd
mov
out
ficomp
sbb
cli
sub
and
pop
add
sti
cld
xchg
sub
mov
mov
and
addr16
pop
cdq
push
jg
fimul
push
xchg
cmp
inc
mov
xor
mov
stos
xor
fst
gs
ins
loop
ds
jge
dec
xchg
xchg
xchg
inc
sub
sub
push
out
mov
sbb
jl
inc
mov
inc
xor
inc
cmp
sahf
dec
pusha
mov
xor
jno
rcl
mov
loope
nop
call
jl
loop
data16
rcl
adc
jl
or
inc
cmps
ja
pop
cmps
not
pop
or
out
loop
test
xor
sbb
(bad)
push
sbb
add
popa
push
mov
loop
jle
mov
sub
icebp
jle
mov
cli
sbb
jp
cmp
pop
loop
or
retf
pop
in
mov
dec
pop
out
mov
cs
enter
inc
cld
jno
leave
pop
fst
or
add
adc
fwait
push
out
cmps
sbb
xor
mov
ror
adc
scas
adc
push
jo
cmp
mov
inc
jb
icebp
vmovups
cpuid
sub
enter
mov
mov
inc
and
jg
(bad)
lods
sub
lahf
scas
dec
mov
sbb
and
adc
xchg
mov
dec
add
movs
adc
adc
outs
mov
icebp
inc
loope
out
xchg
or
cmp
push
and
add
cmp
inc
jmp
out
cs
push
add
leave
inc
sbb
xchg
inc
not
nop
pop
jmp
and
dec
scas
mov
jp
in
clc
inc
xor
cmp
je
mov
stos
adc
add
ins
mov
and
dec
ins
scas
out
pop
add
inc
pop
enter
cdq
inc
sbb
ret
and
mov
aas
sti
addr16
outs
xchg
fdiv
mov
scas
or
sub
push
lds
cs
fisttp
stc
mov
mov
pop
mov
leave
or
xchg
pusha
jne
mov
outs
arpl
daa
stos
push
push
adc
add
sub
(bad)
je
(bad)
sahf
push
mov
inc
lea
icebp
rol
dec
xchg
mov
dec
imul
pop
push
xor
in
sbb
cmp
shl
sub
mov
(bad)
push
sub
pop
mov
pop
dec
xor
xor
and
(bad)
jle
ficom
and
or
jne
inc
jecxz
adc
cmps
ficomp
jmp
test
cs
loopne
ret
outs
inc
jae
push
sub
mov
sbb
cmp
out
cmp
into
add
push
push
cwde
movs
mov
jmp
push
xchg
fs
xchg
icebp
loop
adc
stos
and
xchg
mov
fcmovnb
loope
adc
xchg
test
pop
int
lea
or
cmp
jno
js
pushf
and
jmp
and
mov
add
push
pop
mov
(bad)
or
das
jnp
int3
dec
jmp
jg
(bad)
shr
loope
mov
jecxz
pushf
xchg
sub
xor
mov
push
cmps
je
sbb
adc
jge
test
pop
mov
mov
mov
fisub
jmp
aaa
inc
xchg
xchg
dec
inc
in
jns
out
inc
clc
jne
(bad)
out
cmp
nop
call
imul
mov
cmps
push
adc
push
or
test
add
(bad)
cmps
dec
jge
pop
outs
movs
je
and
inc
mov
out
mov
adc
pop
add
push
add
data16
jmp
push
pop
aas
xor
cmp
mul
xlat
sub
pop
cmp
rcr
cmp
rcl
pop
dec
mov
jle
dec
push
mov
or
movs
or
sbb
jle
mov
xchg
stos
lock
jnp
pusha
ds
lods
aaa
cmp
ins
(bad)
data16
lea
nop
js
test
sahf
rol
and
mov
sub
jne
inc
js
mov
mov
bound
mov
adc
repz
sbb
out
xchg
sti
fild
jbe
outs
ins
add
mov
sti
outs
call
pop
pushf
cld
rol
arpl
add
and
push
repnz
mov
ins
aam
inc
out
lods
ficomp
push
adc
(bad)
into
dec
or
adc
or
nop
sbb
lds
outs
movs
in
mov
retf
jmp
pusha
add
cmp
adc
rcl
bound
std
sti
stos
mov
scas
(bad)
int
addr16
cmp
arpl
xor
jecxz
push
inc
dec
adc
and
mov
pop
mov
jmp
dec
pop
out
add
dec
mov
fidivr
sub
adc
enter
repz
xor
push
shr
mov
es
push
(bad)
aad
shr
fcmove
pop
imul
inc
cmp
scas
call
and
fcom
push
stos
in
pop
test
add
rcr
popf
pop
dec
inc
push
out
cld
pop
jne
outs
popf
dec
push
sub
sbb
fsubr
cld
(bad)
mov
mov
or
or
enter
jno
pop
retf
jmp
jno
mov
call
nop
and
dec
arpl
iret
jge
fs
pop
rcl
nop
add
sahf
push
jb
les
sub
xchg
pop
cmps
cmp
fsubr
push
xor
hlt
aad
push
push
xchg
mov
frstor
neg
rcr
jmp
jae
inc
mov
push
aaa
sbb
lock
gs
ret
or
mov
mov
push
not
lods
xchg
pop
loopne
dec
test
ret
adc
and
rcr
test
xchg
xor
(bad)
mov
push
inc
sbb
cmps
push
jbe
pusha
les
inc
sub
xor
(bad)
std
test
inc
add
movs
fnstsw
imul
jbe
cmp
xchg
imul
call
add
and
stos
pop
sub
jle
mov
adc
cmp
add
cdq
out
or
in
je
push
ins
inc
jnp
aaa
lea
inc
xor
xchg
push
(bad)
adc
ds
jecxz
fs
mov
gs
mov
pop
int3
popf
cmps
retf
(bad)
mov
movs
mov
jmp
scas
shl
xor
xchg
mov
and
popa
push
sbb
into
imul
jg
pop
(bad)
fiadd
sar
xor
stc
into
xor
outs
adc
push
lods
sti
aas
inc
cmp
sbb
mov
inc
add
test
nop
and
sti
leave
cld
mov
push
int3
dec
mov
cmp
jnp
cmps
fdiv
or
lods
mov
adc
cmp
pop
sub
mov
pop
bndstx
push
mov
sahf
ret
add
mov
xchg
mov
out
lods
cmp
mov
ins
push
hlt
inc
in
add
xchg
mov
mov
xor
mov
icebp
wrmsr
and
add
and
lea
pop
pop
pop
sbb
and
rcr
fwait
cs
les
(bad)
mov
pop
retf
xchg
or
jmp
adc
nop
loop
into
inc
pop
imul
mov
out
jmp
into
mov
into
outs
sub
xchg
sbb
adc
js
movs
rcr
pop
ins
mov
inc
mov
stos
daa
loop
call
bnd
movs
not
stc
or
push
sar
fucomip
rcr
ret
lsl
adc
shl
dec
cmp
(bad)
mov
sbb
(bad)
lea
inc
xor
ret
repz
rcl
bound
ror
push
mov
popa
cmp
push
icebp
fwait
dec
lock
ret
jp
fsub
pop
dec
(bad)
mov
mov
test
jmp
jg
test
cmc
rcr
pop
dec
dec
ret
and
pop
dec
pop
jb
mov
push
and
std
loope
inc
leave
or
xor
aaa
daa
lock
pop
jns
xchg
out
cld
xor
push
adc
push
int
dec
(bad)
and
mov
push
jbe
mov
add
scas
push
dec
and
fadd
out
fcmovb
cmp
jl
inc
fcmove
jno
mul
nop
push
mov
test
cmp
stc
add
inc
jne
inc
jno
dec
push
cwde
stos
imul
imul
adc
shr
mov
push
sahf
aam
or
jecxz
out
push
mov
imul
hlt
inc
adc
fimul
cld
mov
jne
aaa
ins
into
jae
icebp
pop
jo
pop
and
mov
popa
sbb
pop
sub
gs
mov
in
and
jbe
xchg
outs
and
imul
lahf
adc
xor
sar
mov
rol
jge
movs
pushf
cmp
adc
ja
mov
rcl
in
add
leave
loopne
inc
aaa
jl
sub
mov
jmp
mov
xchg
mov
mov
in
and
sbb
sar
pop
cmp
ss
push
int3
xor
mov
vmovss
in
imul
pop
sbb
push
cdq
xor
lahf
sbb
(bad)
jo
xchg
cdq
xor
sbb
nop
daa
lods
pop
arpl
mov
mul
mov
imul
popf
push
xlat
neg
ss
(bad)
mov
jo
dec
and
stos
into
ret
or
(bad)
shr
repz
xor
dec
push
adc
push
xor
push
and
leavew
xor
call
push
cmc
xchg
dec
jmp
mov
push
movs
ds
in
sbb
test
mov
xor
push
jbe
mov
rol
aad
and
ret
adc
addr16
jno
aaa
dec
add
test
push
xchg
cli
scas
sti
dec
frstor
pop
xor
add
adc
aas
js
ret
xchg
leave
or
push
test
cmp
mov
(bad)
mov
cdq
jle
mov
adc
xor
aad
mov
xchg
sbb
pop
cmp
movs
jp
jnp
jg
pop
jne
or
sbb
es
mov
push
stos
xchg
imul
sub
scas
jp
jns
jmp
and
stos
out
dec
sub
inc
jl
fcmovnb
mov
cmps
lock
pusha
sbb
les
push
ja
push
push
or
movs
pop
pop
je
(bad)
fisttp
push
xchg
test
or
test
dec
xor
pop
leave
mov
pop
adc
mov
dec
mov
push
inc
call
movs
loop
dec
cmp
xor
mov
mov
mov
and
sub
es
sub
mov
mov
int
jle
cmp
(bad)
cmps
bound
add
jle
dec
fisubr
mov
sahf
pop
jge
fnstcw
sbb
popf
in
js
fst
jne
in
sub
js
in
or
retf
adc
xchg
pop
push
sti
bswap
out
(bad)
jnp
jne
inc
and
sub
call
test
icebp
dec
adc
or
int3
jo
fld
(bad)
pop
inc
cwde
ret
leave
ds
pop
scas
daa
cdq
jp
xlat
mov
test
fidiv
setb
clc
pop
add
and
clc
dec
or
and
data16
jae
dec
lea
jmp
mov
(bad)
ins
dec
pop
dec
xor
jmp
shl
jbe
sub
movs
(bad)
popa
push
imul
stc
fld
mov
test
inc
mov
or
mov
mov
movs
and
pop
mov
inc
call
or
or
mov
cmp
mov
add
stos
xor
mov
cmp
cmps
lods
cmc
aad
loop
inc
lods
adc
add
sbb
cmc
pop
lock
lds
imul
or
(bad)
mov
mov
aam
std
test
retf
sbb
xor
test
cs
or
jle
lods
add
movs
cmp
sbb
sbb
rcr
neg
mov
add
xlat
fisttp
pop
inc
mov
sub
fwait
push
scas
add
ins
inc
xchg
dec
mov
jg
sbb
pop
vpsubsb
inc
enter
jnp
push
adc
xchg
out
dec
dec
lods
out
pop
dec
mov
push
lahf
and
pop
xchg
and
test
adc
mov
les
js
and
adc
iret
mov
xchg
out
in
sbb
nop
mov
or
int
adc
cmc
adc
pop
sub
shl
inc
movs
mul
idiv
out
adc
or
xchg
jl
mov
lods
in
push
fiadd
cdq
xchg
and
outs
mov
mov
push
or
cli
sub
in
push
stos
sbb
dec
jo
clc
and
aam
xor
cmp
push
mov
sub
or
mov
xor
xchg
xor
cmp
xchg
retf
mov
test
or
xchg
fcmovb
mov
xchg
loop
je
pop
xchg
sub
push
sbb
mov
push
ins
mov
jae
bound
and
push
jo
int
jno
mov
dec
fsubr
cmp
mov
sar
push
push
xchg
xchg
es
dec
dec
cmp
retf
mov
ja
pop
(bad)
push
test
adc
retf
add
jg
daa
jbe
xor
mov
cmp
cld
xchg
sbb
scas
add
xchg
mov
push
inc
mov
arpl
jl
xchg
mov
dec
stos
sub
cmp
and
(bad)
outs
mov
ret
dec
mov
repz
cmp
xchg
dec
dec
jne
inc
and
popf
or
or
jge
jl
xchg
dec
or
adc
pop
mov
cmp
popa
bnd
xchg
jmp
or
(bad)
dec
ret
outs
into
retf
adc
inc
mov
rcr
mov
sbb
mov
leave
mov
cmp
adc
test
(bad)
add
fdiv
dec
adc
pop
jb
cmc
lahf
sar
mov
mov
cli
cmp
xchg
iret
cli
sub
aas
in
sub
pop
push
(bad)
clc
imul
pop
(bad)
sbb
push
out
pop
gs
xor
dec
sub
jbe
pop
xor
cmp
pop
pop
scas
retf
js
pop
push
sub
dec
ror
jae
iret
stos
rcl
int3
inc
sbb
push
jp
int3
xor
push
loopne
push
pop
cmp
sub
inc
sub
scas
mov
ret
imul
(bad)
pushf
dec
jae
and
mov
jb
xchg
inc
jge
mov
jg
pop
mul
fdiv
jmp
inc
jge
std
push
mov
and
push
xchg
xchg
popa
dec
sbb
in
ins
mov
cli
mov
and
mov
pop
or
sbb
sub
xchg
push
scas
xchg
push
sbb
add
aad
mov
cmp
pop
lods
cmps
cmc
das
retf
std
nop
mov
sub
mov
mov
pop
push
mov
xlat
fcom
push
pop
xchg
pop
inc
stos
add
mov
add
movs
sub
in
test
adc
mov
cld
and
(bad)
push
sbb
ror
popf
mov
sbb
aas
inc
out
mov
popf
jns
jnp
adc
gs
or
das
sbb
rol
push
mov
inc
repnz
call
imul
bound
inc
(bad)
pop
push
aad
sbb
retf
push
jecxz
lods
push
push
pusha
cmc
test
sbb
or
aad
ret
and
dec
out
mov
push
dec
retf
movs
jle
fldenv
and
dec
sbb
int3
pop
in
fadd
movs
and
xchg
cmp
data16
fild
clc
or
lahf
cmp
inc
mov
aas
sbb
or
icebp
test
push
mov
xchg
xlat
jl
pusha
nop
loop
out
sub
mov
xchg
inc
xchg
mov
outs
push
mov
add
inc
jge
ins
dec
cmp
shr
xchg
out
rcr
sub
cmp
jbe
cwde
xchg
inc
and
ss
cdq
cmp
mov
pop
in
(bad)
outs
jecxz
enter
scas
mov
retf
xchg
mov
jo
out
push
push
or
sub
sub
pop
movs
cmc
pop
add
push
std
mov
jge
imul
int
inc
popaw
push
je
sub
ret
fmul
(bad)
les
sbb
cld
jl
push
dec
xor
ja
rol
mov
gs
xor
out
mov
xor
movs
div
dec
mov
adc
sahf
inc
xchg
and
sub
out
sub
jae
cmc
cmps
cs
fstp
aaa
add
fidivr
adc
aas
jecxz
push
inc
pop
and
dec
mov
dec
cwde
ret
mov
xor
adc
push
out
dec
cld
mov
fnstcw
cs
inc
mov
xchg
int
in
ins
push
lahf
int3
lds
xor
inc
dec
movs
das
in
nop
xor
aaa
inc
shr
shr
push
push
sub
rcr
pop
fwait
gs
adc
sub
sbb
and
push
push
add
push
retf
std
cmps
call
sahf
inc
scas
inc
out
and
(bad)
data16
or
int3
rcl
je
sbb
xchg
push
ja
pop
mov
in
xlat
push
add
add
pop
iret
jmp
inc
mov
xchg
in
cmp
jge
mov
aam
ror
pop
repz
xor
ds
nop
sub
repnz
stos
data16
(bad)
and
int
ins
shl
jecxz
jecxz
inc
mov
push
out
inc
adc
rol
pop
test
out
jl
ds
daa
clc
rcl
mov
adc
mov
das
mov
inc
or
gs
lds
jmp
xor
neg
aas
stos
or
or
arpl
gs
shl
rol
push
push
mov
mov
cld
jo
xor
push
xlat
lock
enter
pop
aas
(bad)
test
loopne
mov
aas
inc
out
cmc
add
xchg
ret
mov
outs
mov
pop
adc
pop
sub
push
xchg
push
imul
leave
jmp
das
adc
mov
xchg
xchg
mov
aas
dec
rcl
or
mov
mov
leave
lea
fdiv
and
cmps
mov
add
and
pop
jno
pop
add
mov
cmp
mov
sar
pusha
mov
mov
or
xor
push
inc
lock
or
in
loope
neg
fldcw
push
and
outs
sbb
xor
mov
js
xchg
inc
xor
ins
fwait
call
sub
movs
(bad)
movs
xor
jo
lock
mov
(bad)
lods
aam
std
inc
aas
adc
inc
ins
jns
loope
push
(bad)
out
xchg
xor
sbb
inc
pop
push
out
xchg
arpl
dec
jecxz
push
sbb
and
sub
shl
jg
retf
mov
nop
(bad)
repnz
mov
loop
mov
push
scas
add
call
mov
call
hlt
xor
sbb
sti
nop
mov
pop
lock
ror
aad
push
jmp
pop
xchg
pop
stos
sub
jne
add
xor
enter
gs
mov
pop
mov
or
dec
(bad)
pop
sub
dec
cmc
push
cmps
mov
stos
pop
popa
pop
test
and
in
push
cli
jns
mov
rcr
fwait
pop
fcmovu
pushf
dec
hlt
nop
push
daa
add
push
inc
mov
sti
ret
jne
push
pop
out
(bad)
jb
cmps
jo
add
and
mov
xor
pop
outs
sbb
push
jae
xchg
pop
out
es
mov
icebp
push
sub
in
ret
loopne
movs
push
xor
cmps
out
xchg
sub
in
out
les
mov
and
inc
popa
pushf
cmp
das
inc
mov
pop
push
jp
push
retf
mov
test
and
loope
or
and
test
sbb
cdq
jae
mov
pop
xor
sahf
push
xor
sub
pop
rcr
sbb
xchg
push
pop
(bad)
xlat
add
push
cli
xchg
pop
popa
aam
sbb
dec
pop
xchg
inc
mov
into
xlat
idiv
mov
pop
sbb
fiadd
les
jecxz
mov
or
lods
mov
arpl
mov
call
aas
test
xor
int
out
cdq
std
cmps
or
push
inc
clc
xchg
lods
adc
xor
jae
(bad)
sub
scas
sub
imul
imul
sub
push
cmc
mov
in
cdq
movs
ret
scas
retf
adc
pop
stos
aam
lods
pop
sub
fst
xchg
cmp
xchg
push
das
jne
mov
shl
jnp
test
(bad)
fidivr
movs
ss
ins
stc
pop
cld
imul
sub
leave
fistp
leave
rcr
movs
xlat
jecxz
arpl
pop
mov
aad
or
fdivr
inc
sbb
add
in
enter
jecxz
dec
inc
scas
jle
mov
inc
push
ror
and
hlt
iret
pop
push
std
sub
(bad)
xchg
mov
nop
aam
jge
cmps
es
(bad)
outs
pop
inc
mov
push
xchg
sbb
retf
pop
retf
addr16
mov
dec
push
cli
inc
ins
add
push
cld
cmovp
xchg
cli
iret
data16
sar
xor
dec
and
popf
cdq
xor
xor
imul
jmp
call
dec
mov
imul
sbb
xchg
test
xchg
ja
cmp
push
idiv
icebp
pop
jg
push
push
dec
jae
pushf
(bad)
in
xor
xchg
loop
jno
or
neg
daa
in
ret
mov
xor
cmp
pop
sbb
inc
xlat
lahf
addr16
test
rcl
(bad)
out
pop
jle
in
repz
sti
movs
lahf
imul
mov
fs
daa
out
sub
adc
mov
jnp
xchg
pop
not
aam
push
cld
popf
pop
cs
lahf
div
clc
dec
cmp
rcl
xchg
or
ja
jg
aam
jecxz
inc
in
aad
mov
add
retf
pop
mov
imul
retf
sbb
xlat
cmp
jmp
push
retf
sub
aam
or
stos
mov
xlat
push
test
pop
or
inc
lea
cdq
out
xchg
inc
cli
hlt
xchg
push
pop
pop
and
push
mov
aad
out
push
xor
ds
out
push
mov
shr
xor
sbb
fadd
dec
ret
and
mov
repnz
xlat
and
sahf
shl
jp
arpl
dec
adc
movs
dec
pop
(bad)
xor
call
ins
mov
adc
shl
mov
mov
mov
add
scas
cmp
push
cld
xor
(bad)
(bad)
cwde
jb
cmp
aam
inc
sbb
pop
call
jecxz
and
stos
sbb
(bad)
call
inc
mov
gs
jp
fstenv
dec
and
aam
mov
nop
inc
aad
stc
lods
push
mov
add
imul
cmp
test
cli
push
add
and
lea
dec
jnp
inc
cvtps2pi
pop
rol
push
pop
xor
sbb
sahf
jns
shl
aad
inc
bound
push
jnp
test
mov
pop
iret
push
xor
rcl
sbb
pop
cs
xchg
and
sub
daa
push
jbe
fild
sti
mov
push
sbb
test
add
pop
push
or
pop
test
es
jmp
mov
sub
ds
loope
push
mov
inc
pop
jo
cdq
adc
scas
mov
pop
test
mov
sti
test
jnp
jne
xchg
leave
add
push
mov
rol
sbb
or
push
xchg
jle
pop
sub
xchg
push
mov
cmps
xor
xchg
sbb
dec
jns
inc
ins
xor
hlt
hlt
cmp
stc
sub
rcl
push
aaa
mov
sub
mov
fiadd
int3
push
adc
sbb
shl
out
mov
mov
ins
mov
adc
das
sbb
sbb
push
dec
add
shr
pop
or
aam
jo
jecxz
dec
or
sub
sub
push
fsubr
sbb
aam
cdq
cmc
push
sbb
xor
ja
rcl
xor
adc
outs
jne
enter
mov
inc
mov
pushf
dec
inc
jmp
test
jmp
mov
cmps
xchg
xchg
dec
mov
inc
xchg
dec
ss
adc
jb
arpl
test
in
jb
addr16
pop
dec
mov
data16
scas
push
xor
add
lods
inc
sub
pop
mov
adc
inc
fnsave
lock
adc
xchg
add
pop
shl
scas
xchg
or
sbb
jmp
xchg
out
(bad)
pop
xlat
inc
retf
pop
jnp
loopne
cmp
int3
jge
nop
call
in
cmps
dec
test
dec
adc
push
mov
shl
push
cwde
or
in
jmp
add
push
sub
cmp
cmp
hlt
jecxz
stc
inc
xlat
xor
ja
shl
(bad)
or
(bad)
daa
outs
and
add
stos
jle
out
(bad)
pop
push
inc
pop
aad
push
repnz
mov
push
pop
hlt
add
push
les
xor
(bad)
hlt
mov
inc
fdiv
hlt
cmp
sub
jp
cmps
inc
push
gs
adc
jg
bound
dec
cmp
mov
push
push
mov
cmp
fs
fmul
xchg
mov
test
push
ror
repnz
(bad)
pop
iret
or
jnp
push
sti
pop
mov
pop
pop
xchg
push
mov
push
mov
add
pop
mov
add
lods
push
adc
cmp
fimul
aam
xchg
add
cld
div
mov
push
gs
lock
and
pop
adc
rcl
jno
iret
pop
mov
xchg
push
sbb
pop
push
xor
jge
add
dec
inc
les
add
cmp
pop
rcr
sub
inc
xor
or
into
mov
outs
das
pusha
mov
adc
call
out
inc
test
and
push
inc
push
inc
or
data16
mov
stos
xor
push
add
clc
rdpmc
lock
pop
sbb
xchg
in
dec
test
mov
fild
std
mov
arpl
scas
sub
mov
lds
fld
push
cmp
cwde
dec
push
cld
jo
pushf
arpl
jle
into
jl
add
jp
lea
inc
jbe
dec
inc
jmp
leave
add
mov
sbb
push
inc
bound
data16
pop
retf
imul
sti
cmp
push
or
pop
pushf
xchg
mov
xchg
mov
in
or
sbb
inc
jbe
stos
ror
sbb
push
xchg
push
mov
adc
(bad)
inc
mov
retf
mov
out
pop
(bad)
sti
cmps
jp
in
push
in
les
(bad)
out
push
push
inc
call
popf
push
bound
or
push
pop
std
fidiv
sub
mov
cs
xor
sub
jmp
jle
fild
inc
sbb
aaa
jb
jno
push
mov
mov
(bad)
adc
shr
sub
jae
pop
pop
and
inc
into
inc
(bad)
hlt
call
cwde
mov
mov
fistp
mov
jmp
mov
out
(bad)
outs
hlt
adc
js
aam
addr16
dec
cmp
mov
popa
sbb
cmp
fwait
adc
das
adc
imul
cmp
mov
add
mov
mov
arpl
call
push
cmp
dec
dec
xchg
inc
call
sbb
aaa
loop
add
cmps
mov
dec
sub
(bad)
inc
push
add
sub
test
jae
outs
in
aas
jmp
cwde
push
add
clc
and
shl
mov
push
mov
and
jnp
cmp
push
push
mov
inc
ins
faddp
push
mov
jmp
sub
ror
mov
cdq
inc
cli
stc
out
add
popf
call
cdq
test
cmp
shl
ds
xor
mov
mov
dec
rcl
dec
adc
fdivr
jle
cwde
jmp
mov
rcl
imul
push
ins
mov
repz
mov
test
mov
dec
jg
in
or
mov
cmp
lahf
jne
bound
popf
pop
hlt
cmp
imul
(bad)
push
mov
out
sub
cli
push
cmp
retf
pop
sysret
mov
cmp
addr16
mov
test
test
xlat
aas
imul
push
cmp
lahf
or
sub
fiadd
pop
adc
lods
mov
or
cmp
pcmpeqd
stc
or
jg
sbb
ror
lods
ror
jo
les
push
and
push
jge
shl
int
inc
or
data16
dec
shr
and
stos
lods
and
inc
data16
dec
pop
pop
cwde
sti
xor
jo
sub
jne
dec
or
mov
nop
lock
push
bound
jg
inc
stos
mov
iret
mov
lahf
and
inc
and
retf
sti
push
frstor
cmp
push
mov
inc
jno
or
enter
mov
call
ds
in
ror
dec
cmps
or
nop
xchg
sbb
jne
loop
ins
cmps
clc
je
mov
push
sar
sbb
(bad)
popf
mov
push
mov
bound
lahf
push
fst
sub
pusha
int
cwde
jmp
add
mov
pop
xlat
and
test
lods
in
mov
ds
shrd
scas
jo
mov
pop
mov
ret
cld
dec
push
sub
mov
inc
popa
add
dec
adc
in
jmp
leave
push
push
push
mov
in
pop
lods
cmp
jmp
adc
push
dec
and
inc
pop
ficomp
cmp
sbb
xlat
daa
call
mov
ficomp
iret
push
and
out
out
pop
ds
test
(bad)
push
jecxz
repnz
sub
test
arpl
stos
dec
or
jl
mov
xor
test
test
pop
sbb
pop
dec
leave
xchg
(bad)
mov
mov
sbb
cdq
scas
inc
push
cwde
retf
jne
sbb
bound
and
fs
jae
sahf
cli
pop
cmc
jl
ret
repz
enter
push
dec
mov
(bad)
fimul
test
jae
pop
inc
mov
mov
sub
sahf
sub
(bad)
sar
sbb
pushf
fsub
push
dec
xor
mov
cmp
push
pop
das
dec
gs
push
std
push
push
sbb
mov
push
jns
(bad)
push
call
rol
loope
push
lods
das
push
mov
fcomp
mov
dec
sar
sub
jp
je
shl
push
daa
aaa
aad
dec
xor
bound
xor
lea
jnp
loopne
push
(bad)
(bad)
jbe
add
inc
push
mov
mov
or
aas
adc
xchg
push
retf
mov
shl
je
out
fld
mov
pop
add
into
push
imul
sbb
shl
pushf
mov
xchg
mov
fidiv
cli
sub
adc
xor
xchg
cmps
cwde
inc
cmp
add
add
nop
retf
cli
clc
xor
lods
outs
retf
push
daa
(bad)
psllq
mov
pop
add
mov
ret
pop
gs
adc
sub
ins
mov
xchg
mov
pushf
adc
jo
adc
outs
push
sbb
mov
ss
test
nop
xchg
stc
sbb
popf
mov
cld
stc
daa
pop
mov
or
mov
pop
mov
bound
fdiv
call
mov
cmp
test
add
cmp
call
sbb
push
mov
(bad)
enter
arpl
push
popa
dec
inc
inc
sub
aas
cmp
push
pop
xchg
daa
mov
lods
retf
cld
push
out
adc
call
leave
ja
fdivr
cld
mov
push
cmp
nop
add
and
repnz
icebp
xchg
lods
add
shl
sbb
jle
dec
bound
cmp
call
mov
cmp
ficomp
dec
into
pop
mov
(bad)
std
mov
les
ja
push
jl
out
(bad)
stos
movs
mov
inc
cdq
lahf
outs
jg
(bad)
adc
fstp
mov
pop
push
sub
(bad)
fwait
in
sar
shr
fwait
mov
ins
cdq
dec
out
sbb
cmp
in
and
or
js
stc
gs
or
imul
sahf
fcmovnb
push
mov
ss
mov
shl
popf
cwde
jae
cmp
mov
push
or
xchg
pop
jp
(bad)
enter
imul
fisub
jmp
mov
(bad)
iret
ret
movs
mov
test
add
or
ins
xor
inc
addr16
(bad)
clc
icebp
repz
jmp
cmps
int3
mov
fs
outs
dec
mov
cmp
dec
dec
(bad)
cmp
rcl
dec
mov
push
or
mov
dec
pop
jle
(bad)
jbe
dec
loope
cld
mov
inc
and
pop
mov
ret
ja
cmp
cmp
xchg
cmp
jl
xor
iret
or
inc
xchg
icebp
xchg
and
pop
daa
cmp
mov
push
int3
fs
push
sbb
enter
sub
push
add
jnp
dec
stc
stos
xor
add
inc
push
push
sub
(bad)
fisubr
pop
push
out
sbb
out
and
repnz
inc
hlt
shr
in
jl
das
seto
aam
sbb
dec
sbb
ret
sub
and
xchg
aad
in
mov
lods
cwde
xchg
mov
mov
out
js
push
mov
jo
icebp
test
pop
push
addr16
test
es
push
mov
dec
rcl
xor
and
es
push
cmp
and
push
adc
push
lahf
and
and
lock
cdq
cmp
ficom
and
and
or
rcl
sbb
test
sbb
sub
adc
rcl
sbb
mov
push
ins
movs
test
inc
clc
mov
ret
(bad)
fwait
into
pop
cmc
shl
mov
mov
dec
or
dec
(bad)
ins
leave
and
lock
inc
adc
sub
(bad)
jle
ret
jmp
jb
pop
mov
test
lods
pop
int
and
clc
call
or
ja
adc
inc
lock
add
shl
and
das
cmps
idiv
ins
fisubr
ret
mov
jge
gs
dec
mov
jmp
stos
addr16
cld
jle
adc
sahf
adc
das
(bad)
cwde
imul
enter
adc
shl
xor
adc
ins
in
clc
push
or
psubsb
add
mov
push
mov
arpl
fucomip
movs
fisttp
sbb
(bad)
fsubrp
test
and
mov
and
add
mov
ins
dec
xor
fisub
mov
xor
lock
cmp
push
mov
add
mov
mov
sbb
jno
mov
cli
int
pop
mov
inc
jne
call
and
gs
call
cdq
mov
in
mov
mov
jmp
imul
sub
sbb
add
jo
mov
jmp
xor
or
push
push
push
add
add
dec
cmp
xchg
mov
jle
cs
in
sti
sar
sti
stos
dec
push
inc
and
pop
stos
or
mov
arpl
adc
jecxz
scas
enter
or
mov
retf
cmp
push
push
fdivr
stc
ret
xor
shl
mov
nop
int
xchg
fstp
data16
cdq
test
push
popa
add
iret
icebp
pushf
fadd
add
cmp
xchg
mov
fwait
(bad)
pop
aad
(bad)
out
xor
daa
(bad)
imul
arpl
fdivr
add
dec
add
add
dec
cmps
lock
in
sbb
ficom
xchg
mov
mov
ficom
out
sub
adc
scas
fsubp
inc
or
dec
adc
loopne
mov
ins
jg
and
cmp
call
fisub
add
test
jns
out
ins
sbb
in
stos
div
pop
(bad)
repz
call
pop
push
sbb
pop
ret
jl
mov
ss
jo
mov
(bad)
mov
adc
(bad)
stc
hlt
adc
cmp
mov
stos
or
dec
adc
test
test
stos
loopne
sbb
push
daa
rcl
push
mov
in
xchg
(bad)
sti
sub
jg
cmp
xor
daa
bound
mov
xchg
js
cdq
adc
call
dec
or
push
push
lock
or
shr
push
aam
and
push
jecxz
imul
lods
not
jmp
(bad)
std
mov
(bad)
push
mov
pop
inc
add
call
add
or
mov
aas
movs
xchg
push
mov
stc
push
scas
xchg
js
rol
call
push
xor
add
pop
mov
test
std
into
add
sbb
fist
ss
mov
sbb
int3
adc
arpl
and
aad
push
jp
sub
mov
adc
dec
(bad)
ror
dec
jne
outs
pop
jno
and
adc
imul
add
jns
addr16
cmp
cld
cmpxchg
pop
mov
xor
out
pushf
xlat
sbb
lods
scas
ret
popf
stos
pop
fmul
xlat
xchg
aam
ins
adc
jp
test
or
popf
jno
out
jmp
(bad)
into
xor
and
or
sti
aaa
lods
in
jns
fnstenv
(bad)
in
mov
pop
hlt
pop
xchg
dec
pushf
inc
jl
push
fidiv
fbld
dec
into
mov
mov
pop
cdq
popf
mov
lods
mov
jns
push
loop
add
mov
mov
cwde
jb
out
shl
mov
pop
and
ds
mov
mov
js
fbld
and
mov
pop
mov
in
push
mov
pop
dec
pop
jge
enter
sti
mov
xchg
loopne
std
cmps
add
cmp
push
cld
leave
jecxz
inc
fstp
retf
adc
pop
jmp
pop
ret
cmp
dec
retf
out
sti
not
leave
jecxz
mov
popa
mov
jo
sub
jl
fild
and
pop
xchg
jns
inc
retf
mov
mov
stos
xchg
inc
imul
xor
mov
or
(bad)
cld
push
loop
push
ret
push
leave
adc
or
add
pop
jno
mov
test
xlat
cmp
jne
(bad)
out
adc
and
sbb
sbb
stc
and
ins
adc
or
or
mov
out
push
sbb
test
adc
pop
mov
das
xor
pop
in
push
cmp
mov
sub
ror
xchg
or
ffree
ins
aam
or
loope
nop
int3
inc
cmc
out
mov
jg
(bad)
mov
in
or
shl
sbb
outs
shl
xchg
dec
out
xor
fst
(bad)
repnz
test
or
inc
fucomi
inc
and
sbb
or
push
sub
int3
lea
cmps
into
retf
or
scas
js
arpl
dec
fld
and
sub
jecxz
out
or
fisub
aad
mov
push
xor
push
test
addr16
aaa
mov
xor
push
mov
out
in
dec
pop
mov
xchg
ja
jo
add
js
into
inc
retf
cmps
sahf
mov
daa
mov
pop
int
jecxz
mov
mov
scas
add
push
mov
ja
hlt
fdivr
sahf
and
fmul
fmul
pop
add
sub
pop
sbb
mov
mov
in
mov
cmp
cmc
call
repz
(bad)
jno
(bad)
pushf
call
cmp
mov
mov
xchg
retfw
cmps
or
pushf
in
xchg
ss
clc
loope
and
je
retf
imul
adc
ret
jp
push
jno
inc
pop
cmp
loop
push
add
and
cmc
jo
add
pop
(bad)
std
cwde
or
cmp
es
call
xlat
repz
into
and
dec
movs
fimul
inc
sbb
push
ret
repz
xchg
shr
xchg
dec
inc
idiv
mov
add
(bad)
fistp
or
pushf
lds
mov
aas
shr
xchg
in
lahf
call
loop
xor
out
imul
call
shr
fdiv
inc
pop
rol
mov
pusha
enter
or
or
jb
pop
pop
sbb
jb
xor
mov
inc
cmp
and
xchg
dec
mov
inc
idiv
dec
js
int
mov
addr16
icebp
arpl
mov
xor
inc
and
sub
jle
pop
ss
jbe
retf
fs
push
loop
bound
jg
fmul
out
add
inc
mov
jb
inc
push
push
outs
loop
xchg
pop
ror
sbb
xchg
imul
sar
cmp
outs
int3
sahf
aas
push
inc
pop
adc
inc
pop
inc
cs
jmp
or
push
popa
push
ins
mov
dec
cmp
hlt
jmp
sbb
fsubr
jle
inc
sub
add
out
jle
enter
jmp
jno
out
cdq
shr
mov
aad
sbb
cwde
cmp
sub
pop
movs
push
push
lods
(bad)
cld
cmp
jp
shl
loopne
sbb
out
xchg
loopne
hlt
repz
xchg
imul
cwde
xchg
add
dec
arpl
pop
push
retf
outs
inc
out
xchg
adc
lahf
jmp
mov
addr16
jbe
dec
pop
dec
adc
test
xor
xlat
dec
adc
neg
fst
jae
rcr
into
gs
adc
aad
sub
inc
xchg
test
push
test
fiadd
shl
push
ret
test
scas
ins
cmovno
pop
fst
in
push
mov
rcr
sti
bound
inc
fld
jle
sahf
sbb
cmp
push
addr16
adc
pop
movs
jmp
scas
and
fistp
repnz
sbb
div
inc
mov
mov
movs
fwait
xchg
xor
fcomip
sbb
jns
sub
jb
add
mov
cmc
push
xchg
sub
sbb
fadd
and
jp
push
adc
inc
adc
pop
and
pusha
mov
xchg
sub
xchg
neg
test
and
inc
fild
fsub
outs
add
ins
clc
jge
inc
sbb
add
mov
out
out
pop
retf
das
mov
sub
pop
push
push
add
sahf
mov
mov
popf
(bad)
sub
pop
cmp
pop
adc
aad
fwait
clc
mov
test
dec
mov
mov
std
enter
sub
or
popa
mov
pop
aaa
fs
movs
lods
push
mov
int
xor
jb
cdq
loop
stos
dec
rcl
xchg
and
jnp
xchg
push
mov
addr16
ror
(bad)
sub
in
mov
push
out
push
addr16
mov
outs
jmp
mov
jb
retf
xchg
xchg
pop
mov
stos
jns
out
mov
adc
pop
sbb
cmp
rcr
bts
cmp
xchg
push
test
pusha
adc
sahf
pop
jmp
cmc
push
inc
lock
das
pop
xor
jo
or
inc
jne
dec
leave
popa
mov
xchg
movs
mov
retf
sbb
mov
loope
sbb
jno
jmp
arpl
dec
imul
dec
push
aaa
(bad)
adc
xchg
sub
xchg
xchg
daa
adc
push
adc
dec
je
rcr
inc
sti
(bad)
(bad)
retf
pop
jbe
xor
mov
out
gs
pop
mov
adc
xor
rol
lods
das
inc
mov
pop
cmps
xchg
adc
mov
inc
popa
lods
adc
cld
xor
adc
mov
or
enter
mov
pop
sub
lds
mov
adc
push
dec
scas
sbb
stos
add
(bad)
not
(bad)
out
sub
test
inc
mov
das
cmp
(bad)
stc
fs
pop
jge
jmp
add
sbb
cmp
cs
shr
push
xchg
lods
ror
pop
(bad)
ds
aaa
sti
jbe
fdivp
adc
xor
or
data16
mov
xchg
movs
loop
sbb
add
mov
push
test
mov
jge
pop
js
sar
lea
adc
lods
repnz
and
cmc
sbb
dec
and
cmp
retf
jo
sub
aaa
add
es
fnstcw
dec
retf
sub
aam
add
sar
jl
das
pop
lds
je
push
jecxz
push
cmc
jnp
mov
retf
das
mov
jae
outs
push
sub
and
pop
and
add
jnp
(bad)
rol
xor
retf
ins
(bad)
cwde
sub
and
jno
mov
adc
out
outs
xor
add
pop
xor
in
push
add
jo
jnp
outs
ret
std
jp
pop
arpl
adc
push
lea
jb
sbb
stos
xor
or
not
mov
cmp
inc
lods
(bad)
into
jmp
jbe
stos
es
out
jecxz
retf
xchg
add
jnp
inc
pusha
dec
outs
add
fistp
xor
mov
mov
int3
retf
arpl
jge
leave
cs
xor
mov
dec
aam
push
pop
jg
fndisi(8087
div
adc
add
movs
in
cld
jecxz
dec
in
mov
(bad)
or
sar
(bad)
jae
jmp
fmul
mov
repz
dec
cs
aaa
jmp
add
lock
dec
jne
xor
jnp
cli
add
xchg
ins
pop
sahf
xchg
js
repz
syscall
in
jmp
mov
mov
pop
jno
test
push
xlat
rol
sbb
imul
mov
imul
mov
imul
cdq
sbb
leave
je
jno
aad
jle
stos
int
pop
cli
(bad)
pop
stos
outs
retf
(bad)
int3
ds
adc
fiadd
lds
out
xor
cwde
add
outs
daa
adc
push
repnz
pop
or
in
lods
scas
jno
sub
cmp
cwde
jmp
dec
je
inc
cmps
shl
xlat
jns
add
sbb
pop
mov
je
aas
ja
pop
mov
cmp
int
mov
iret
pop
jbe
inc
aas
jbe
stos
pop
scas
and
jecxz
mov
test
mov
adc
cmp
and
imul
mov
dec
js
(bad)
cli
sub
mov
inc
pop
sbb
pusha
push
cmp
mov
(bad)
adc
mov
in
add
(bad)
adc
stos
fild
and
cdq
mov
clc
in
shr
ror
cmp
je
jnp
fsubr
test
jb
retf
shl
and
push
sar
dec
retf
adc
js
(bad)
fadd
push
sub
cwde
adc
sbb
sub
ret
es
jbe
push
lahf
push
pop
jl
fadd
cmp
sti
jo
shr
retf
lea
psllw
mov
lock
sub
stos
push
add
jb
push
outs
mov
dec
or
movs
stos
(bad)
and
cmp
popf
(bad)
push
stos
jnp
(bad)
jge
ret
xor
or
xchg
or
xchg
int3
xor
jno
dec
inc
push
or
add
cmps
cmp
mov
aad
clc
and
ds
inc
mov
es
imul
outs
dec
ds
imul
inc
adc
inc
imul
pop
into
pop
arpl
push
jbe
rcr
sbb
in
cs
jecxz
stos
rcr
scas
pop
mov
lods
(bad)
xchg
pop
lods
inc
loop
inc
sbb
inc
jo
inc
cdq
or
fist
inc
movs
shl
or
rcl
dec
inc
adc
lock
mov
inc
pop
out
ficomp
xchg
adc
sbb
mov
and
dec
je
outs
push
leave
pop
xchg
mov
mov
ss
retf
dec
out
push
push
lock
fiadd
push
lods
push
mov
not
xchg
inc
adc
sub
popf
mov
add
mov
pop
cdq
and
jle
icebp
(bad)
outs
iret
push
cmp
cmp
push
push
test
xor
dec
mov
(bad)
mov
and
data16
stc
pop
lahf
and
adc
xchg
mov
and
and
push
xor
xor
mov
pop
dec
ins
fsub
lahf
mov
shl
rcl
test
cmp
add
mov
aad
int3
jl
inc
add
fisub
push
add
cdq
mov
pop
adc
sub
cdq
mov
out
pop
dec
or
test
aam
pop
es
jmp
xchg
das
inc
nop
xchg
xor
xchg
setl
pop
iret
repz
loopne
div
xchg
(bad)
xlat
and
inc
hlt
add
stos
jbe
xchg
xor
xchg
adc
(bad)
push
test
dec
inc
xchg
add
jecxz
inc
cmp
paddw
push
or
pop
test
push
add
popf
adc
ror
adc
pop
mov
cmp
sar
xor
add
cmp
cmp
mov
movs
pop
mov
ror
inc
or
jmp
and
ret
or
les
dec
leave
shl
shl
pusha
mov
(bad)
xchg
adc
xor
sbb
lea
xchg
or
les
mov
popa
mov
and
pop
jmp
jno
ret
inc
mov
xchg
sti
sub
inc
sub
repz
xor
(bad)
retf
add
jno
or
outs
sub
xchg
push
jnp
mov
adc
jmp
and
or
call
dec
ja
popf
fs
ins
popf
inc
pop
mov
jecxz
mov
cmps
jp
repz
into
pop
jmp
pop
push
sti
sbb
push
fist
ss
lock
mov
add
or
sahf
mov
dec
cmp
mov
popa
inc
mov
adc
add
loope
xor
(bad)
test
ror
add
mov
fsub
fistp
nop
mov
js
ins
out
cld
dec
jge
in
mov
ss
cmp
inc
ins
add
mov
dec
repz
sbb
cmp
retf
fnsave
out
in
sar
sub
jae
xlat
adc
xchg
push
pop
jo
sbb
sbb
sbb
lock
inc
test
xor
dec
push
cld
pop
or
lds
sub
mov
mov
jmp
in
mov
jle
movs
sub
mov
or
das
mov
in
fidivr
pop
cli
fstp
das
pop
hlt
stos
cmps
movs
sub
and
rol
les
(bad)
dec
sti
mov
mov
xchg
mov
repz
std
(bad)
stos
or
inc
jg
lock
dec
inc
call
xor
fwait
cmp
pop
mov
push
mov
or
scas
dec
ins
xchg
ret
mov
rcl
sbb
sub
sub
ficomp
(bad)
mov
pop
clc
inc
repnz
int3
arpl
cwde
rcl
sbb
cmp
js
fiadd
jae
jge
aaa
ficom
dec
inc
xchg
fcmovbe
ja
les
jg
lods
and
cld
pop
clc
(bad)
bound
push
sahf
push
push
mov
in
mov
sti
ins
cld
jo
in
in
push
retf
adc
ds
rcl
sti
in
push
xchg
or
int
pop
iret
xchg
and
xabort
sub
inc
pop
fisubr
jbe
adc
pusha
mov
xchg
mov
jbe
(bad)
jb
and
adc
leave
imul
rcr
scas
pusha
xchg
xchg
iret
adc
call
stc
(bad)
ds
xchg
sub
lock
bswap
mov
lds
jg
shl
movs
outs
movs
loope
sti
pop
data16
push
xchg
aas
jmp
scas
sub
iret
je
push
stos
push
dec
sub
stos
stos
(bad)
mov
cmp
call
mov
shr
sbb
enter
retf
push
neg
mov
inc
xor
ret
nop
stos
cwde
mov
xor
or
rcl
fistp
fiadd
jo
out
fistp
sub
xor
pop
(bad)
out
int3
fwait
jle
fmul
jg
dec
dec
push
sbb
addr16
xchg
mov
pop
ss
cmp
ja
jmp
mov
jns
cmc
mov
retf
imul
popa
call
ret
and
sbb
popf
sbb
cmp
imul
mov
es
xchg
mov
sahf
pop
cmps
lods
push
sbb
(bad)
pop
iret
mov
addr16
ret
iret
mov
faddp
fsubr
sets
test
fadd
jae
inc
cli
adc
lea
and
fcomp
and
(bad)
ja
jp
jle
push
test
adc
test
aam
dec
xchg
fimul
xor
cdq
data16
mov
rcl
push
rcr
cmp
iret
fs
loope
js
(bad)
shr
(bad)
sbb
pop
in
(bad)
stc
jmp
inc
bound
lahf
cmp
mov
dec
mov
or
loope
repnz
(bad)
mov
call
jbe
in
sbb
jge
dec
leave
and
add
es
push
bound
xlat
pop
dec
or
mov
jb
jp
clc
aad
clc
jno
mov
push
mov
jp
xor
xor
retf
mul
ss
inc
(bad)
cmps
cmp
rcl
mov
cmp
lds
repnz
jb
jbe
pop
pop
add
mov
icebp
jle
add
sbb
sar
test
push
cs
rol
dec
ja
mov
cli
shr
(bad)
sti
bound
sbb
mov
enter
loope
pushf
pushf
ds
inc
and
add
ins
(bad)
(bad)
xchg
imul
push
xchg
pop
loopne
test
lods
mov
(bad)
fucom
cs
mov
scas
inc
call
mov
cdq
xchg
sbb
push
outs
pop
push
aas
mov
sti
scas
push
pop
fadd
sub
push
je
outs
adc
bound
icebp
push
test
xor
data16
in
mov
addr16
adc
jmp
ret
mov
push
(bad)
pop
xor
xchg
outs
daa
cmp
inc
imul
or
dec
cmc
sbb
(bad)
aaa
push
and
dec
loop
daa
aaa
ins
adc
sub
sbb
mov
inc
ss
call
bnd
push
cmp
mov
pop
add
adc
imul
mov
pop
push
pop
fld
sbb
and
lea
push
outs
cs
push
sub
cmc
jne
retf
push
loopne
aam
xor
adc
scas
push
data16
test
mov
mov
dec
daa
mov
test
out
xchg
inc
outs
dec
mov
cdq
cmp
mov
scas
sahf
xor
xor
sbb
iret
mov
in
out
in
fcmovne
fst
xchg
iret
mov
jp
cli
iret
hlt
ret
bound
jle
lahf
push
xchg
addr16
aam
pop
jns
cmp
cmp
in
pop
shl
ja
jno
test
aas
push
scas
add
and
enter
xor
lods
mov
xor
mov
clc
cmp
int
pusha
(bad)
ds
ret
iret
in
push
(bad)
in
cmps
cmp
or
bound
gs
sbb
xchg
jns
sub
data16
inc
or
arpl
loopne
lds
pop
push
outs
fstp
push
(bad)
lock
mov
jl
and
out
int
cdq
push
aas
or
enter
and
mov
(bad)
xchg
dec
leave
sti
push
inc
rcr
xchg
aam
pop
xor
(bad)
int3
and
rcl
gs
(bad)
clc
jns
cld
adc
imul
sbb
mov
bound
sti
or
je
dec
test
pop
je
mov
and
adc
out
xchg
test
sub
mov
add
js
adc
cs
in
cwde
pop
mov
mov
push
movs
pusha
je
cmps
ja
pop
sub
mov
jg
retf
cwde
inc
shl
sbb
pop
adc
fstp
ins
es
(bad)
in
cmp
mov
lahf
adc
test
or
jbe
xor
fisttp
(bad)
adc
add
es
fimul
mov
inc
iret
das
outs
add
outs
test
ret
xor
cmc
inc
fist
or
lods
mov
dec
xor
add
popa
jmp
or
push
(bad)
shr
jle
cmps
adc
inc
(bad)
retf
cmp
mov
call
mov
fld
inc
mov
aas
mov
ds
ds
push
rcl
retf
out
pop
sbb
ins
sub
mov
test
or
inc
test
clc
jecxz
dec
xchg
dec
dec
mov
sbb
or
lea
addr16
add
cmp
xchg
imul
out
js
ins
add
mov
cmp
push
xchg
cmp
add
push
stos
jae
mov
mov
out
rcr
mov
xor
ds
or
fadd
movs
(bad)
and
and
out
dec
repz
in
inc
test
inc
or
scas
adc
sub
adc
push
mov
ja
add
cmp
inc
mov
cmps
dec
xchg
lea
stos
retf
scas
cdq
fcom
outs
shl
jmp
cmp
loope
mov
test
push
hlt
fld
mov
and
push
lods
cmp
mov
les
out
aas
adc
adc
test
push
lods
cld
pop
sti
jo
push
adc
sbb
jmp
pop
ins
mov
(bad)
ins
fwait
sbb
push
cs
lods
iret
das
test
xlat
pusha
or
cmp
pop
inc
lock
jg
fwait
sbb
std
adc
ret
adc
xchg
imul
fimul
fsub
iret
push
pop
fidivr
mov
in
inc
js
popf
test
push
sub
lea
ror
xor
xchg
push
and
loop
add
je
or
pop
fbstp
inc
mov
xchg
cld
cli
add
mov
cmp
(bad)
stos
add
xchg
and
or
sub
ss
mov
dec
pop
push
stos
test
lock
adc
repz
jle
(bad)
(bad)
fist
inc
pop
mov
call
retf
popa
jmp
fmul
icebp
ds
rcl
mov
and
jnp
out
scas
inc
cs
mov
outs
mov
jo
mov
addr16
mov
ss
popa
xchg
and
pop
mov
mov
xor
pop
icebp
xor
ds
hlt
shl
dec
es
inc
or
fxch
xor
ss
and
or
xor
pop
mov
sub
sbb
mov
jno
icebp
aas
mov
push
or
daa
dec
add
iret
inc
xlat
aad
out
cmp
xor
xchg
icebp
outs
cmps
test
into
movs
xor
movs
dec
rcr
and
in
mov
xchg
sbb
mov
clc
cld
lods
fcmovnbe
aaa
cli
jb
push
add
call
lods
xchg
ror
daa
enter
dec
jge
jmp
dec
mov
mov
js
test
shl
js
push
xchg
iret
lea
dec
push
jns
push
clc
es
adc
es
jmp
imul
mov
cmp
mov
outs
fs
pushf
fstp
idiv
das
mov
xchg
or
xchg
mov
fisubr
sub
dec
xlat
enter
adc
arpl
mov
(bad)
or
retf
sub
and
push
add
pushf
or
popa
sti
rol
cmp
out
jmp
dec
scas
shl
sub
inc
pop
mov
out
and
jns
popa
int
ins
mov
pop
scas
aam
fistp
xchg
test
cli
(bad)
rcr
xchg
jnp
fadd
hlt
mov
mov
shl
add
mov
loopne
mov
mov
mov
mov
sahf
cmc
cmp
sti
or
and
xlat
clc
ja
dec
lock
aam
adc
pusha
out
cs
adc
movs
inc
popa
stos
outs
pop
in
xchg
dec
mov
sub
jb
add
test
cmp
pop
aaa
shl
cld
rcr
xchg
repnz
ja
test
iret
jmp
ss
stos
and
jo
jns
jmp
xor
out
fs
or
adc
lahf
or
dec
pop
lea
data16
popf
xchg
jne
or
xchg
enter
imul
fiadd
pop
inc
push
mov
cmp
hlt
leave
add
aam
mov
jne
(bad)
ja
xor
or
or
or
cmp
into
sbb
sub
adc
sub
jnp
aas
adc
inc
lahf
sub
mov
ins
out
outs
add
pop
and
jns
fmul
inc
inc
and
jmp
pop
in
lahf
add
(bad)
cli
stc
inc
inc
inc
call
jle
xchg
fcomp
mov
pusha
cmp
inc
pop
sbb
xchg
mov
std
pushw
out
dec
adc
int3
enter
bound
call
cld
vdivpd
and
clc
pop
ins
adc
sbb
ins
mov
cmp
hlt
dec
test
xchg
inc
xor
daa
mov
(bad)
pop
enter
sub
lods
jle
jo
add
cmp
scas
out
sub
es
sbb
mov
add
and
aas
inc
push
movs
jmp
out
or
test
sub
ja
jg
je
dec
daa
ret
jno
push
arpl
div
sub
push
in
lods
call
ret
imul
sti
stc
sbb
mov
imul
repnz
les
dec
add
rcl
scas
(bad)
cwde
mov
push
iret
inc
sub
xchg
neg
dec
jecxz
mov
hlt
pop
bound
call
das
test
jg
dec
mov
inc
pop
pop
inc
cli
fcom
cmp
jl
or
xchg
jmp
and
push
test
mov
sub
mov
push
scas
in
shr
bound
cmc
xchg
xchg
inc
push
ins
adc
call
xchg
push
jp
xor
outs
mov
sub
dec
retf
sbb
push
cmp
cmp
or
aam
push
and
enter
(bad)
stc
sti
(bad)
push
push
ror
dec
pop
dec
jl
sbb
mov
pushf
mov
xor
pop
repnz
and
loopne
xor
test
sbb
pop
mov
dec
je
jecxz
and
nop
or
inc
pop
cmp
arpl
push
jns
jmp
sbb
in
sub
adc
add
std
or
push
lods
pusha
mov
and
jmp
mov
int
addr16
mov
dec
scas
nop
xor
fs
inc
lods
mov
cmp
add
cmp
jo
or
dec
popa
jbe
mov
icebp
inc
pop
adc
push
mov
fcomp
iret
les
adc
sbb
clc
movs
sahf
mov
data16
das
in
mov
leave
pop
jnp
jno
or
clc
adc
(bad)
mov
(bad)
jle
add
sar
push
imul
data16
call
add
shl
inc
and
jge
inc
jbe
loope
ror
and
push
jge
cmps
or
jo
rcr
mov
sar
jp
in
inc
and
xchg
lea
in
ror
inc
mov
sbb
imul
or
scas
dec
mov
pop
scas
pop
push
mov
loopne
rol
out
out
sbb
fcomip
imul
int
mov
and
ins
and
int3
outs
xor
push
xor
mov
cmp
inc
pop
mov
adc
imul
out
ins
mov
mov
push
das
mov
dec
cmp
push
sub
mov
pushf
ds
jl
es
in
fisub
xor
fst
and
sub
jg
mov
lds
imul
ja
(bad)
push
inc
ins
xchg
jle
ret
cld
pop
xchg
xchg
pop
jb
icebp
int
mov
pop
inc
outs
outs
pop
xor
test
ror
cmps
mov
in
out
dec
das
push
jp
xor
xlat
xchg
mov
mov
gs
jbe
push
(bad)
outs
lahf
nop
fmul
jb
ficom
rol
mov
and
push
mov
pop
test
enter
cdq
inc
jnp
aas
loop
mov
lods
pop
jg
lods
dec
(bad)
in
je
stos
cld
aas
fnsave
xchg
xchg
adc
stc
sbb
aaa
js
daa
gs
repz
in
mov
fidivr
(bad)
test
out
inc
aaa
lods
pop
sub
outs
xor
add
push
repnz
xor
stc
jne
or
and
push
fisubr
add
sbb
inc
fs
and
mov
mov
retf
jecxz
sar
mov
cmp
mov
out
xchg
dec
cmp
retf
jae
cmp
stos
inc
cmp
or
mov
dec
rep
pop
jnp
ins
ret
add
push
test
inc
mov
(bad)
ins
and
(bad)
out
ror
arpl
inc
jmp
xchg
cmp
push
pop
fs
push
aas
jae
ficom
inc
push
xchg
sbb
dec
dec
jmp
xor
or
stos
xchg
movs
popa
js
retf
mov
inc
xchg
jp
or
daa
push
push
repnz
pop
test
lea
pop
inc
pop
push
push
sbb
sub
dec
leave
das
sar
push
movs
aas
push
neg
push
aas
movs
fstp
mov
and
retf
cmp
fild
rcl
aam
sbb
ins
fucom
in
sbb
fstp
add
movs
push
(bad)
mov
mov
nop
leave
sub
mov
(bad)
outs
push
pop
retf
mov
adc
mov
jg
and
repnz
js
jmp
out
dec
not
adc
mov
loopne
jne
mov
inc
lods
fmul
sar
retf
mov
push
gs
push
mov
pop
mov
xchg
enter
es
add
jns
mov
retf
lods
mov
pusha
in
rcl
add
test
fisubr
pop
jno
fs
sbb
test
add
mov
ret
or
xchg
xchg
sbb
sub
adc
or
push
(bad)
mov
dec
stc
test
dec
jnp
ror
jg
jg
push
add
in
mov
aaa
pop
dec
or
mov
and
mov
test
pushf
dec
or
inc
sub
lods
movs
pop
mov
sbb
mov
fld
mov
ror
cmp
cld
push
jp
nop
jg
(bad)
jb
jns
or
sub
ret
jnp
jle
jne
dec
jae
vfnmadd213ps
ds
out
in
xchg
test
sbb
pop
mov
mov
pop
pushf
push
loope
cli
pop
adc
sti
mov
add
ror
sahf
inc
add
and
cmp
inc
pop
dec
lea
inc
xchg
add
adc
(bad)
das
push
jbe
cmp
es
inc
jb
movs
xor
sub
sbb
(bad)
or
push
in
sbb
test
rcr
adc
in
adc
cmp
ja
sbb
cmp
leave
movs
mov
int3
shl
sub
loopne
cdq
and
test
cmp
xchg
inc
xor
(bad)
fnsave
call
mov
cs
outs
mov
fs
inc
push
jae
mov
lods
pop
mov
imul
add
xchg
fwait
pop
xor
pop
mov
sub
push
int
or
sub
mov
mov
test
int3
adc
stc
call
ret
cwde
xchg
or
popa
aad
sbb
in
and
cmc
mov
fisubr
jo
addr16
test
mov
test
jecxz
push
sti
adc
mov
cmc
retf
push
fiadd
cmc
mov
push
fs
cmp
push
(bad)
out
js
out
sub
add
call
in
jg
sbb
das
xor
mov
fldenv
sub
push
mov
int
lods
mov
ja
shl
nop
imul
fnsave
xchg
jo
inc
push
popf
pop
mov
out
fdivr
pop
push
mov
imul
sbb
and
mov
mov
xlat
mov
jecxz
push
iret
xchg
mov
sbb
fldenv
mov
imul
xchg
mov
js
xchg
mov
mov
pushf
pop
ja
out
jbe
sub
mov
cmp
popa
pop
repz
out
pop
out
outs
push
xor
mov
lds
inc
pop
adc
pop
ret
mov
lea
aam
push
inc
dec
scas
in
pop
stos
jmp
mov
sbb
or
int
jno
aad
jg
pop
jp
push
retf
xchg
bound
inc
mov
add
movs
popa
repnz
jge
adc
lock
icebp
mov
lea
imul
inc
push
rcr
inc
rcl
mov
inc
iret
dec
lahf
fild
push
or
outs
cmp
xchg
enter
ss
nop
leave
xchg
aaa
add
hlt
lods
movs
adc
mov
adc
ret
mov
nop
fs
mov
pop
(bad)
cld
das
jle
in
jmp
dec
dec
xchg
pop
sub
fs
enter
dec
cmp
add
sbb
inc
xor
pop
pop
imul
sub
shl
loop
enter
inc
xlat
inc
in
inc
test
pop
add
or
mov
fistp
mov
test
push
xor
js
mov
pop
push
push
mov
into
push
pop
sti
adc
push
jecxz
mov
mov
pop
sbb
(bad)
mov
je
xchg
pop
pop
inc
lods
scas
shl
push
out
add
clc
rcr
or
mov
cmps
xchg
sub
add
hlt
outs
pusha
add
ins
test
jl
les
enter
lds
les
xchg
enter
ins
loope
ret
push
pushf
pop
add
(bad)
aam
mov
cmc
lahf
mov
or
push
cmp
out
cmp
jae
cmps
xor
data16
xor
xchg
sbb
aam
lahf
pushf
mov
push
xor
jl
pop
mov
(bad)
cdq
xchg
push
sti
cmc
(bad)
mov
lock
xchg
scas
push
xor
adc
xor
pop
movs
and
mov
iret
repz
std
mov
in
psrlw
hlt
fs
adc
mov
imul
xchg
mov
int3
(bad)
mov
outs
mov
test
out
push
(bad)
fcmovb
fdivrp
xor
pusha
cmp
shl
or
loop
inc
aas
js
push
pop
jl
in
call
jecxz
stos
dec
push
jae
sbb
lods
or
(bad)
jl
xchg
repnz
lea
jecxz
(bad)
sti
adc
fsubp
cmp
cli
ja
sub
add
xchg
mov
jle
sub
jp
mov
mov
xchg
adc
test
ret
inc
movs
fst
pop
lods
ds
xor
inc
mov
push
cld
pop
dec
adc
jp
clc
sub
mov
daa
sub
xchg
loope
push
int
test
sub
fst
lods
sub
cmps
dec
add
and
loop
jo
hlt
idiv
dec
pop
xchg
cmps
(bad)
xchg
or
in
mov
add
mov
and
dec
test
xchg
loop
sbb
pop
sub
dec
pusha
or
xor
loope
js
add
ror
and
std
xchg
mov
cs
imul
cmp
test
repnz
xchg
push
xor
add
cld
(bad)
mov
xchg
idiv
cmp
pop
cmp
movs
je
test
mov
push
iret
test
jae
mov
inc
pop
ss
sbb
xor
shl
xchg
pop
pop
pop
sbb
or
mov
mov
test
jl
cli
(bad)
cs
(bad)
adc
jae
dec
pusha
sbb
pop
mov
aam
xor
pop
daa
dec
add
in
xor
ret
inc
adc
dec
pushf
xchg
test
pop
stos
int3
out
cli
ja
cwde
adc
into
je
dec
retf
sahf
in
sub
test
add
idiv
sub
xor
add
call
push
and
retf
dec
jmp
cli
mov
cdq
cmp
jmp
and
loope
retf
lods
dec
out
sar
adc
ja
and
fdivr
inc
fwait
adc
adc
in
popf
lea
aaa
sub
sbb
add
lods
vmovhpd
vpcomq
xchg
jo
add
ds
sar
sar
pop
xchg
pushf
xchg
sub
add
icebp
rol
xchg
stos
fisttp
xor
(bad)
lds
or
aaa
xchg
fisub
sahf
rcl
hlt
dec
cdq
loop
push
clc
in
into
test
addr16
xchg
dec
cmps
cmps
cld
mov
sub
idiv
mov
jnp
nop
je
jmp
nop
cmps
repz
outs
aas
aas
jle
jmp
add
jle
shl
jns
xor
mov
add
int3
aaa
push
pusha
mov
jo
add
push
inc
shl
sahf
push
sbb
inc
repz
and
adc
push
xchg
jns
pop
inc
adc
xor
call
fistp
inc
push
cmp
leave
mov
xor
xchg
xchg
xchg
mov
addr16
(bad)
cmp
mov
shl
lods
ins
dec
inc
push
outs
push
dec
(bad)
cwde
sub
pop
mov
push
push
jo
fldcw
sbb
jns
inc
sbb
test
dec
pop
or
xchg
sub
xor
nop
int
add
sub
lods
push
inc
inc
out
jae
mov
data16
stc
fiadd
fcmovnb
pop
(bad)
cmps
adc
popa
lods
add
aad
cmps
fisubr
stos
mov
mov
xor
ss
dec
icebp
imul
xchg
dec
pop
fcmovne
stos
xchg
lahf
and
or
pop
inc
sbb
fistp
loopne
mov
jp
add
pushf
pop
fcom
gs
or
mov
xchg
aas
sti
sbb
mov
div
into
ror
xor
cmp
and
mov
push
jmp
xchg
mov
(bad)
sbb
xor
push
cmp
adc
rol
cwde
add
push
js
cmp
sbb
xchg
out
and
mov
xor
xchg
fidiv
les
es
and
jl
out
mov
inc
arpl
push
jecxz
mov
shr
loopne
push
imul
pop
movs
push
loope
icebp
aas
bound
lods
movs
push
rcr
cmp
or
fmul
xor
mov
cs
adc
cld
dec
jp
push
sub
test
add
stc
test
sbb
dec
sub
push
xor
loope
inc
vpsraw
fs
xor
sub
jge
inc
sub
mov
pop
dec
push
(bad)
(bad)
in
mov
js
pop
movs
or
rcr
clc
push
rcr
mov
movs
aas
mov
leave
xor
out
ret
mov
jecxz
pop
dec
mov
mov
adc
loop
in
adc
ror
xchg
dec
cmp
hlt
out
out
mov
jge
xor
sbb
(bad)
mov
rol
repz
popa
cld
dec
(bad)
fadd
aad
test
mov
jns
data16
xchg
outs
sbb
inc
in
mov
sbb
dec
aam
cmp
mov
xchg
xor
mov
mov
stc
out
imul
xor
xlat
or
ss
retf
cmps
or
cmc
cmp
fiadd
mov
mov
sbb
arpl
and
jb
push
out
adc
call
push
push
push
outs
ss
add
sub
fild
ins
jae
mov
test
jb
sbb
dec
mov
int3
lds
sub
test
adc
adc
xchg
xchg
xchg
push
(bad)
pop
adc
mov
fwait
push
cmp
movs
mov
mov
push
mov
pop
es
adc
inc
push
dec
les
imul
sbb
out
test
adc
pop
push
push
add
sub
xor
pop
cmp
(bad)
and
in
les
push
xor
outs
push
sbb
sbb
push
scas
or
push
mov
call
mov
jp
aam
movs
mov
and
idiv
aad
shr
dec
nop
sub
call
push
cmp
push
jl
add
popf
dec
lahf
div
call
dec
cld
(bad)
inc
mov
sub
emms
adc
pop
rcl
sbb
add
add
dec
push
mov
in
add
mov
inc
inc
jmp
das
and
mov
addr16
push
cmp
into
pop
adc
pop
lock
adc
popa
xlat
call
mov
pop
or
and
inc
lods
sbb
mov
add
mov
js
je
jnp
and
rcr
or
test
test
push
(bad)
jge
fistp
or
jmp
cmp
dec
pushf
mov
sbb
xor
inc
ficomp
ja
mov
(bad)
mov
mov
push
push
add
cwde
call
mov
jb
sbb
movs
adc
pop
js
xor
pop
cdq
fadd
xchg
add
and
aad
in
in
jge
cdq
in
je
jle
aam
and
dec
jmp
inc
popf
sub
jb
adc
sbb
pop
je
out
xchg
mov
mov
cld
push
and
aas
xchg
rol
in
ins
test
or
sbb
aas
cmp
leave
das
push
sbb
jge
push
and
or
sbb
adc
inc
cmp
clc
fldcw
out
hlt
lods
dec
icebp
mov
cmp
enter
inc
js
jbe
xlat
pop
pop
xor
loop
lea
loopne
xchg
inc
dec
fsub
add
(bad)
ja
fnstcw
out
rcr
jl
push
enter
and
in
push
pusha
adc
push
outs
mov
dec
add
movs
mov
inc
and
push
or
outs
jb
in
sti
repnz
cld
outs
test
or
or
pop
lods
retf
mov
iret
cmp
or
xchg
fadd
dec
leave
jae
ds
mov
jmp
loop
and
mov
adc
add
stos
mov
mov
in
sahf
jmp
movs
dec
dec
xchg
inc
imul
mov
mov
fninit
dec
data16
test
pop
mov
and
fistp
xor
mov
dec
fisubr
mov
sub
mov
jae
inc
ret
pop
fwait
add
or
rol
(bad)
shr
xchg
adc
adc
in
(bad)
std
mov
call
ror
or
pop
adc
fwait
loopne
sub
push
hlt
mov
arpl
fsubr
jmp
loopne
sub
jmp
lahf
(bad)
outs
jbe
lods
jo
std
sti
fwait
int3
pusha
inc
cli
rol
add
push
movs
sar
inc
cld
lock
stc
popf
lea
pop
jg
ficom
pop
popa
addr16
cmp
std
popa
popf
push
shl
sbb
gs
adc
pop
test
sahf
pop
jmp
mov
dec
jo
xchg
stc
push
sbb
aam
data16
jno
jo
dec
and
xchg
aad
dec
mov
(bad)
rol
outs
call
scas
cmp
sub
or
out
stos
pop
data16
pop
iret
call
outs
sub
cmp
xchg
adc
jg
inc
sbb
ror
pusha
lds
sbb
stc
mov
fadd
(bad)
cwde
push
cld
aad
scas
jne
or
adc
(bad)
imul
push
xor
pusha
jg
sub
iret
sti
push
es
fist
dec
add
pop
lahf
lea
pop
pop
pop
xor
pop
fcom
mov
inc
dec
test
sub
retf
iret
nop
jns
cli
add
repz
sahf
retf
gs
xchg
ins
into
adc
mov
mov
test
pop
sbb
push
(bad)
cmc
cld
ins
dec
mov
repz
or
dec
dec
aam
xor
fs
push
or
pop
retf
movs
mov
jle
(bad)
xor
dec
repnz
ror
push
aas
ret
psrlq
fsub
std
cmps
in
sbb
jl
daa
push
nop
ret
ret
retf
ins
xchg
cmp
das
mov
add
test
popf
push
sbb
ja
es
push
push
mov
scas
imul
pop
adc
jnp
ss
frstor
jp
aas
mov
mov
or
push
and
xchg
arpl
xchg
sbb
mov
cs
inc
fldcw
inc
outs
or
xchg
dec
push
xchg
and
adc
and
icebp
dec
add
mov
nop
jbe
mov
sbb
mov
xchg
push
mov
dec
and
sub
pop
mov
hlt
movs
out
pop
dec
cs
mov
stc
lods
fs
aad
sbb
sti
lahf
push
enter
repz
sbb
cli
rcl
adc
push
ret
popa
inc
popf
mov
iret
lahf
fld
(bad)
push
xor
or
imul
inc
or
jns
pop
pop
lods
mov
sbb
ins
test
push
es
jnp
mov
mov
clc
out
gs
cld
js
pop
dec
sub
mov
cmps
push
jno
jb
mov
push
cmc
adc
pop
adc
aaa
mov
adc
sbb
mov
neg
sub
call
sahf
enter
cmp
sbb
iret
xor
jo
fstp
adc
and
pop
loope
push
dec
jne
mov
jmp
cmp
jle
pop
mov
push
mov
fild
fstp
pop
mov
push
inc
jb
mov
icebp
shr
shl
jbe
sti
das
xchg
pop
test
inc
push
push
pusha
stc
call
dec
jnp
dec
cmp
(bad)
mov
inc
jg
cli
scas
rol
jne
ins
inc
retf
loop
xchg
leave
cmc
lods
mov
cmp
push
add
js
ins
daa
inc
ins
fld
push
ss
dec
add
out
sub
ins
inc
inc
and
dec
aad
test
rcr
mov
out
scas
test
jno
mov
test
jne
adc
sbb
sbb
inc
push
or
je
arpl
cmc
lods
mov
push
mov
scas
(bad)
cdq
mov
jl
(bad)
or
ret
je
xor
daa
test
aas
mul
leave
lds
es
pusha
mov
stos
adc
shl
loop
outs
ror
std
cmp
jge
mov
dec
lahf
enter
leave
and
sub
movs
sub
mov
or
lahf
in
mov
retf
lea
xlat
lods
test
inc
es
clc
sub
mov
jae
fnsave
std
or
xor
inc
sub
js
loope
jae
fs
and
push
call
ds
sar
stos
into
mov
adc
imul
stos
es
stc
or
gs
sbb
or
outs
and
push
pop
cmp
fsubr
js
lea
std
mov
fldenv
jb
shl
(bad)
sub
mov
cmp
sbb
cmp
fild
jmp
inc
inc
pmaxub
cmps
adc
xchg
jne
shl
cmp
mov
shl
pop
scas
xor
mov
mov
cld
stc
arpl
xor
(bad)
je
add
add
xchg
fldcw
sar
lds
xchg
fldcw
ins
mov
je
xchg
test
pop
sbb
nop
repz
xor
mov
pop
int3
loop
fadd
imul
add
and
push
lds
add
and
inc
fldenv
push
push
inc
gs
dec
lods
fwait
clc
mov
sub
int
in
loope
sub
hlt
cmp
sbb
or
scas
in
mov
mov
jbe
lahf
inc
fld
repnz
inc
xchg
xor
loopne
mov
mov
or
jbe
inc
jle
add
adc
or
sbb
inc
adc
test
add
cli
mov
stos
fmul
jle
cmps
icebp
pop
div
adc
push
push
mov
mov
cmp
mov
lds
je
xchg
ret
out
lds
dec
xchg
imul
or
mov
jo
jns
push
lods
add
jp
mov
repz
and
push
lea
jnp
sar
jno
and
mov
test
cmps
dec
push
jb
xchg
cmp
cmps
repnz
rcr
ret
leave
ss
cmp
mov
js
adc
cmps
lods
fwait
mov
outs
test
dec
xchg
rol
inc
mov
pop
lods
mov
pushf
adc
pop
mov
neg
pop
dec
or
jg
ret
jmp
mov
push
cmp
adc
int3
mov
or
pop
mov
nop
and
out
clc
mov
xor
pop
movs
shr
lds
cdq
and
ds
mov
push
int3
test
add
pop
fstp
call
push
pop
push
fist
jmp
nop
cmp
aas
ret
xchg
mov
idiv
sub
call
daa
jne
mov
push
adc
cmp
pop
mov
mov
jae
push
shl
stc
fwait
pop
fcom
push
mov
sbb
or
ins
mov
sbb
cwde
xchg
in
push
adc
test
cdq
test
jne
mov
sar
arpl
sbb
mov
jo
adc
push
adc
xor
jnp
dec
arpl
push
add
xchg
adc
adc
stos
jle
jmp
xchg
movs
add
gs
and
std
jmp
mov
xchg
mov
or
jo
mov
cmp
mov
mov
fnclex
je
mov
sahf
repz
xchg
dec
call
ror
or
ins
fiadd
push
shl
fcomp
aas
retf
aam
sub
dec
sbb
and
ficom
mov
aaa
xchg
adc
add
in
xchg
and
ret
jg
xchg
js
cmp
dec
gs
out
cmp
adc
pusha
int
outs
fmul
ss
pop
sub
pop
leave
and
xchg
test
mov
inc
loop
sahf
jmp
(bad)
iret
shl
in
xchg
xor
mov
test
mov
push
movs
xchg
sbb
cmps
add
pop
out
sub
outs
xlat
jecxz
test
aas
into
inc
mov
xor
sbb
ror
mov
mov
adc
mov
sbb
sar
rcl
retf
dec
scas
pop
retf
add
out
scas
in
(bad)
por
push
or
jb
int
es
and
add
lock
aad
inc
cld
cwde
icebp
mov
imul
cmc
push
stc
cmp
into
xor
leave
(bad)
mov
stos
shl
fsub
push
inc
jb
mov
call
push
add
add
loop
xchg
test
xor
in
mov
call
scas
jl
and
adc
xchg
jg
lahf
mov
mov
ins
xchg
pop
js
aad
shl
cmps
std
xor
pop
loop
sahf
nop
mov
mov
aam
adc
dec
test
and
jmp
inc
retf
aad
mov
cs
loopne
inc
adc
gs
mov
add
xor
sar
out
sbb
sbb
mov
dec
aaa
adc
leave
inc
jge
sub
daa
test
repnz
test
loopne
and
ja
bound
stc
mov
cs
xchg
pop
jl
and
pushf
into
repnz
and
adc
mov
les
xchg
jg
push
push
or
(bad)
out
cmps
jns
dec
dec
pop
call
js
les
loope
mov
jbe
mov
call
xchg
add
jle
xor
retf
call
retf
xchg
aaa
push
loope
add
push
call
xchg
imul
xchg
dec
push
outs
imul
jg
mov
xchg
sbb
ret
push
sub
mov
add
xlat
and
pop
jle
dec
jecxz
inc
repnz
into
dec
mov
test
xor
add
cmps
dec
das
mov
jge
aam
stc
xchg
dec
pop
sbb
inc
sbb
sub
xchg
cli
sbb
or
and
push
push
mov
sub
adc
dec
out
out
pop
sub
mov
popf
aad
shl
stc
pop
pop
nop
xor
pop
call
daa
mov
mov
popa
sti
cmp
xchg
fsubr
jb
mov
mov
xor
and
pushf
sub
jns
les
fisttp
mov
add
les
sub
(bad)
mov
sub
nop
nop
add
jmp
in
pop
pop
shl
mov
mov
clc
in
fsubr
push
add
push
and
jno
repnz
cmps
rcl
loope
das
mov
sub
push
lds
add
sbb
xor
inc
je
inc
inc
jne
gs
inc
icebp
mov
movs
mov
lock
add
ss
mov
jne
es
imul
mov
push
jnp
xchg
cmc
xor
jmp
mov
add
loopne
mov
jnp
out
scas
xchg
xor
cmp
and
xchg
fwait
jae
inc
out
or
push
sbb
test
cmp
sbb
xor
mov
mov
mov
test
mov
imul
retf
xor
cmp
mov
sbb
push
scas
cmp
repnz
cmp
sub
sbb
xchg
mov
mov
xlat
(bad)
pusha
icebp
in
inc
cld
cmp
jp
stos
pop
mov
imul
loopne
push
add
mov
imul
sbb
pop
xchg
fisubr
out
int
leave
sub
pop
dec
adc
fidivr
sub
dec
test
xchg
ficom
retf
jge
test
dec
call
add
xchg
mov
lock
or
xor
adc
call
out
pop
aad
out
xor
push
fld
ds
repnz
pushf
mov
mov
mov
call
gs
add
mov
fdiv
loopne
mov
mov
sbb
ret
sbb
nop
(bad)
in
jmp
leave
push
loopne
xchg
or
mov
fs
jns
loop
pushf
cmp
arpl
outs
dec
out
dec
mov
mov
repnz
cmp
mov
pop
shl
push
dec
and
(bad)
push
cwde
in
xchg
inc
loope
cmp
es
hlt
(bad)
jmp
push
pop
popa
pop
gs
xchg
xchg
fisub
ins
scas
ret
push
ret
sub
clc
cmp
test
mov
mov
inc
aas
movs
in
pusha
jge
add
sub
push
(bad)
push
outs
pop
ret
sub
bound
adc
push
add
and
xchg
xchg
les
scas
je
jo
pop
dec
mov
pop
movs
jmp
and
pop
mov
cmc
or
sbb
fcomp
push
ins
(bad)
or
add
int3
mov
xlat
loopne
mov
test
loope
xor
push
pop
out
(bad)
retf
push
frstor
xchg
cwde
pop
push
pop
les
add
in
mov
pusha
add
sub
mov
or
ins
push
movs
hlt
pop
retf
mov
jne
sar
pop
cwde
push
or
adc
mov
mov
adc
mov
cwde
call
(bad)
xchg
test
vmread
sbb
xchg
xor
add
out
xor
out
jg
and
push
xchg
cdq
ja
mov
inc
dec
mov
sahf
sub
push
out
es
(bad)
pop
cli
rcl
cmp
adc
xchg
cmp
jo
sti
mov
jo
push
mov
mov
lds
repz
mov
cmp
repz
enter
mov
and
ss
fnstenv
jnp
(bad)
(bad)
dec
loope
mov
scas
in
lods
inc
clc
(bad)
dec
push
cmp
stos
sti
imul
movs
out
sahf
outs
lods
dec
push
push
cmc
loope
and
loope
ins
mov
push
mov
mov
xor
mov
pop
movs
pop
ss
dec
jp
jecxz
or
or
sub
pusha
jo
ds
push
fld
sbb
test
push
retf
mov
jmp
sti
cmps
leave
stc
inc
jno
sub
clc
cmp
retf
call
xchg
pop
sub
lea
cld
pushf
xchg
add
(bad)
int
cs
or
add
jmp
in
out
fbld
sub
idiv
or
mov
inc
cmps
cmp
iret
jle
inc
lods
dec
enter
pop
dec
out
mov
lock
ret
sub
lods
ja
cmp
cmp
ds
ret
addr16
xchg
add
mov
ins
fcomp
xchg
fadd
in
out
pop
xchg
jne
outs
(bad)
ret
sti
test
stc
cmp
jmp
xchg
out
pop
rcr
out
cmp
mov
inc
jnp
sub
bound
dec
pop
push
movs
fwait
or
xor
mov
mov
pop
add
ds
xchg
in
cmps
out
int
push
xchg
xchg
test
(bad)
mov
xchg
jmp
mov
fnstcw
push
sub
dec
fild
and
xor
push
repnz
rcr
push
push
les
(bad)
call
pop
adc
fsubp
pushf
sti
in
mov
arpl
mov
bound
cmps
mov
add
cs
mov
pop
sub
aam
cmp
mov
push
fild
outs
adc
sub
les
sbb
lahf
rcl
movs
or
sbb
mov
cmps
jge
test
push
sub
cs
call
dec
fsub
or
ins
sbb
ins
les
mov
test
jb
add
jmp
cmps
mov
push
inc
addr16
sar
cmp
jl
inc
inc
or
push
mul
push
fsubrp
mov
retf
icebp
(bad)
arpl
sub
inc
leave
sar
mov
cmc
mov
cmps
push
push
inc
jo
rol
stos
push
mov
or
test
and
scas
push
mov
in
pop
xchg
mov
sar
cmps
sub
sbb
hlt
ror
(bad)
fs
shr
or
jno
(bad)
sub
xchg
mov
int3
jmp
jae
aas
or
in
pop
inc
add
retf
sub
sti
adc
inc
mov
sub
imul
scas
call
out
sub
imul
adc
mov
adc
push
and
(bad)
fsubp
pop
xor
dec
mov
jle
cli
add
sub
mov
fsubr
cmps
dec
mov
xchg
(bad)
hlt
std
fadd
adc
push
pop
push
sti
(bad)
xchg
clc
jbe
mov
pop
sahf
mov
out
inc
js
mov
pop
add
lea
sub
jbe
lods
or
nop
shl
iret
fsubr
sbb
pop
in
and
jns
or
hlt
push
test
mov
xchg
pop
ret
jae
mov
pop
bound
and
adc
inc
aas
fnstcw
jle
cmp
adc
(bad)
lahf
and
mov
das
aad
sbb
xchg
sub
xchg
(bad)
mov
outs
push
mov
imul
dec
add
jecxz
add
pop
push
cld
xor
jg
jp
out
dec
out
lea
pop
jg
mov
adc
sbb
fcom
pop
(bad)
mov
shl
cmps
cmp
ss
cmp
loop
cmp
std
mov
push
and
jmp
test
adc
in
mov
xchg
sbb
das
ficom
adc
dec
stc
fsubr
popa
adc
aam
movs
push
jmp
lock
(bad)
pop
test
lock
shl
fild
popf
jl
dec
test
add
(bad)
aam
and
mov
ja
adc
mov
(bad)
aas
lods
into
sub
xchg
imul
or
aas
gs
jp
loope
daa
xchg
cmp
popa
dec
adc
cmp
ficomp
sub
cmp
or
sub
clc
xor
cli
out
mov
je
stc
push
icebp
add
aad
pop
mov
xor
out
lds
(bad)
inc
sub
adc
lahf
cmp
(bad)
fidiv
xchg
int
rol
sub
(bad)
sysenter
std
sub
mov
es
call
pop
mov
push
stos
cmovb
push
fnstenv
mov
push
cmp
add
iret
jno
fwait
cmp
mov
xchg
adc
and
fabs
sbb
cmp
and
push
ror
inc
(bad)
jnp
inc
mov
jge
jmp
sub
mov
xchg
add
outs
sub
xor
jg
adc
rcl
loop
dec
push
popa
ficomp
fs
cwde
jb
pop
jmp
jmp
dec
cmp
jle
dec
loopne
xlat
neg
ds
sar
jle
pop
retf
mov
ja
test
cmp
lock
add
push
dec
ret
sbb
jmp
push
int
jmp
enter
mov
mov
jle
xchg
mov
sub
outs
pop
(bad)
xchg
mov
jge
push
and
jns
test
or
std
add
mov
dec
(bad)
lods
mov
mov
add
adc
and
pop
add
push
test
add
add
add
in
test
je
cdq
jecxz
and
and
mov
push
pop
arpl
jecxz
retf
mov
fucomip
mov
sub
cwde
jne
adc
adc
xor
cs
hlt
lods
inc
mov
jo
push
outs
or
sahf
lods
bound
xor
enter
scas
jno
pop
inc
push
pop
mov
dec
add
stos
cmp
mov
push
ss
mov
pop
sti
xchg
xor
lods
cmp
call
adc
mov
shr
mov
jge
add
xchg
or
fs
sub
jne
xchg
icebp
repz
out
inc
push
out
sbb
xchg
addr16
mov
clc
lea
mov
es
inc
repz
imul
add
daa
bound
jecxz
jp
enter
(bad)
loop
std
sti
sub
aaa
pop
popf
fbstp
or
inc
fidiv
sbb
add
sbb
fidivr
cld
loopne
inc
pop
lea
xor
shl
sbb
push
lods
dec
sbb
mov
ficomp
jge
pop
pop
nop
leave
xor
mov
jge
inc
(bad)
iret
mov
xor
add
mov
cmps
hlt
ret
or
not
mov
lea
sbb
ret
(bad)
mov
xor
fbld
or
xlat
loop
outs
test
leave
fwait
icebp
xchg
mov
data16
stc
push
les
add
fstp
sbb
jmp
mov
cwde
fidivr
jmp
adc
test
or
bound
cs
stos
jae
xor
and
inc
clc
sbb
jg
aas
pop
out
mov
pop
clc
xchg
or
ins
inc
push
daa
fistp
push
jae
mov
outs
into
push
xchg
pop
(bad)
mov
test
popa
(bad)
popa
mov
cmc
jbe
imul
dec
out
add
dec
sar
dec
ins
sbb
cli
cs
ds
lea
add
add
(bad)
shl
int3
into
jno
mov
push
js
loopne
retf
sbb
fild
mov
enter
sub
fld
imul
fs
sub
loope
ins
lock
clc
ins
das
sub
add
dec
int
retf
mov
sets
fst
or
mov
movs
xchg
lahf
js
or
xchg
push
mov
push
jnp
xor
push
sbb
int3
dec
nop
int
inc
pop
sub
adc
jge
add
ror
mov
push
add
mov
sub
cdq
fadd
popa
or
cwde
cmp
out
(bad)
js
cmps
movs
outs
xchg
cmp
and
scas
xchg
into
or
mov
sub
hlt
ret
adc
pop
in
cs
inc
mov
sub
bound
ret
adc
dec
popf
retf
mov
inc
mov
fdiv
(bad)
movs
out
cmps
mov
test
add
push
in
add
jecxz
xchg
adc
xlat
test
lea
clc
clc
xor
cmp
push
adc
movntq
pop
imul
movs
(bad)
or
xchg
(bad)
nop
clc
push
xor
pop
sti
aaa
nop
cmps
adc
sti
stos
xchg
jns
mov
mov
jmp
adc
outs
ret
shr
push
stos
call
popa
outs
sub
(bad)
ins
arpl
or
push
inc
(bad)
mov
gs
ret
sbb
push
dec
rol
cli
adc
mov
jb
add
push
push
pusha
enter
sti
aad
pop
or
mov
aam
or
test
stos
fcomi
pop
cmp
enter
and
and
jbe
jnp
sbb
ret
(bad)
into
adc
mov
lds
ja
ja
(bad)
pusha
mov
setb
outs
pop
mov
xchg
mov
into
inc
fidivr
jcxz
pushf
(bad)
xchg
clc
pop
out
add
xor
rcr
jns
repz
jmp
sub
adc
adc
mov
pop
repnz
sbb
jno
popa
push
jnp
dec
adc
les
inc
retf
jp
sar
add
icebp
adc
or
ins
mov
out
lods
sbb
jp
mov
dec
(bad)
dec
stos
pop
aas
cmovb
aaa
and
or
jl
sub
lds
mov
mov
jmp
mov
jg
jmp
push
inc
les
popf
or
lods
dec
loopne
sub
cmps
sti
loop
hlt
mov
sbb
jmp
lahf
ret
je
xlat
test
jge
ret
out
inc
movs
in
pushf
mov
push
nop
js
mov
push
sub
xor
inc
fs
das
sahf
jge
jbe
ret
ss
adc
lods
dec
or
xlat
adc
jns
call
clc
sahf
mov
int
sub
call
lods
push
inc
pop
out
sub
imul
add
pop
push
inc
lods
mov
fmul
jp
int
call
add
push
cmp
dec
pusha
sub
(bad)
les
xchg
lods
(bad)
fwait
out
mov
cmp
fs
ins
add
shr
or
add
push
ins
lock
fild
lahf
hlt
je
sub
cwde
sub
cmc
outs
xor
stc
lahf
fwait
dec
out
lea
pop
(bad)
stos
shl
outs
out
push
push
mov
rcl
adc
call
into
cwde
mov
mov
int3
ret
cmp
clc
push
push
iret
add
(bad)
pop
cmps
add
cs
cmp
sub
mov
movs
lock
(bad)
rol
sub
xlat
jo
lea
(bad)
fsubr
jo
(bad)
and
cli
aas
loope
iret
sbb
mov
cwde
mov
clc
lods
test
inc
xchg
es
push
push
fstp
movs
mov
scas
lea
fsub
popa
outs
xor
push
out
or
inc
(bad)
jne
shl
xchg
push
and
xor
dec
rcr
retf
xor
jo
dec
aam
jo
and
arpl
xlat
mov
mov
jecxz
lea
push
idiv
jbe
frstor
xlat
sbb
mov
push
inc
mov
push
test
lahf
push
lods
mov
adc
mov
pmullw
stos
inc
push
add
aam
and
jns
call
sub
jmp
movs
into
and
aas
pusha
arpl
vpshufhw
inc
sbb
add
mov
bound
ja
cmp
popf
mov
jg
(bad)
loope
xor
cmp
bound
mov
rcl
or
jmp
cmp
push
outs
dec
outs
xor
xor
sbb
mov
mov
xor
cmps
into
mov
jp
inc
test
add
mov
movs
and
daa
stc
idiv
sub
fdivr
or
inc
aas
retf
stc
and
mov
lea
enter
mov
or
dec
dec
aas
in
stc
mov
sbb
inc
mov
dec
out
outs
ret
mov
stos
cmp
xor
loop
ja
dec
or
mov
fdivr
clc
and
(bad)
cmp
adc
and
into
pop
imul
and
int
lock
int3
and
imul
sbb
xchg
ret
inc
lods
xchg
out
ror
dec
bound
cmp
dec
push
fild
xor
fld
daa
out
rcl
sbb
push
inc
dec
xor
ds
mov
loop
xor
jns
lea
mov
xor
aam
inc
push
shl
sbb
xor
or
imul
fmulp
gs
ds
mov
cmp
dec
imul
jp
push
cwde
std
push
rcr
rcr
xchg
cmp
clc
sahf
stos
js
cmc
popf
ficomp
into
popa
and
add
retf
push
push
xchg
arpl
mov
mov
jne
and
(bad)
and
mov
mov
ror
inc
jp
jno
xchg
or
cmp
xchg
add
movs
mov
into
sbb
clc
adc
jae
push
and
jmp
in
mov
jl
mov
mov
in
subps
push
cmps
addr16
xchg
push
push
retfw
xor
loope
sub
adc
xor
add
mov
nop
dec
lock
cdq
imul
lods
xchg
or
loope
sub
icebp
outs
sbb
rol
push
adc
xlat
outs
push
xor
pop
xor
mov
xchg
jb
sub
enter
adc
xchg
mov
sbb
mov
call
into
pop
enter
inc
mov
sub
dec
dec
stos
stc
mov
out
mov
sti
or
mov
mov
jp
push
push
fisub
lock
or
cmp
inc
das
test
mov
mov
les
jne
fwait
(bad)
push
inc
jmp
fidivr
xor
imul
inc
retf
aad
push
jnp
cdq
test
hlt
je
imul
ss
stc
(bad)
cdq
out
retf
icebp
sbb
pusha
fdivr
test
mov
sbb
or
pop
jp
mov
into
mov
ret
mov
aam
test
mov
jno
scas
pop
cwde
push
(bad)
out
lock
jne
mov
push
sbb
loopne
xor
loope
mov
jle
jne
xchg
fsub
mov
in
popf
nop
and
imul
inc
div
add
xor
mov
or
pusha
push
mov
data16
outs
aad
xor
mov
scas
inc
mov
inc
sub
xor
into
lods
jmp
xchg
fld
or
stc
dec
mov
mov
out
jecxz
ins
push
mov
mov
loope
mov
loop
daa
pop
gs
push
cmp
mov
add
repz
scas
mov
jne
pop
outs
mov
ds
mov
lea
mov
mov
imul
or
mov
ror
shld
inc
mov
scas
lds
das
nop
inc
push
pusha
mul
lods
jne
hlt
push
jmp
stc
fild
popa
test
in
ja
and
inc
push
retf
inc
ficom
aad
xor
rcl
pop
push
inc
test
call
or
pop
mov
mov
xchg
sbb
idiv
sub
mov
sar
inc
mov
dec
mov
mov
adc
inc
ins
inc
mov
imul
addr16
(bad)
(bad)
pusha
push
data16
add
push
adc
mov
in
mov
xchg
mov
inc
cs
(bad)
fisub
ja
xchg
shl
jns
jo
pushf
push
jge
(bad)
cwde
das
(bad)
dec
les
sub
push
inc
cmps
cmp
mov
and
nop
call
mov
mov
not
dec
dec
push
push
mov
push
pop
pop
movs
(bad)
mov
cmp
ins
fst
push
xchg
lahf
fidiv
add
ins
cld
fisub
hlt
test
out
movs
sub
cmps
cwde
ins
icebp
xor
cmp
daa
xor
sahf
into
xchg
inc
fiadd
aam
jnp
mov
mov
push
push
movs
or
mov
ins
sbb
add
sub
xchg
push
xchg
cmp
int
mov
jg
test
mov
test
ss
mov
leave
stc
dec
addr16
pop
dec
sub
xchg
ficomp
mov
scas
mov
jp
and
xor
pop
jnp
push
in
xchg
push
jno
pop
xchg
jge
mov
sub
into
xor
jae
aaa
sbb
xchg
test
test
out
mov
je
mov
xchg
loope
pop
mov
pop
movs
sti
sub
pop
or
and
jp
xchg
inc
into
pop
cmp
arpl
pop
push
lahf
pop
mov
sti
jmp
loop
int3
sbb
dec
loope
xchg
(bad)
mov
(bad)
mov
push
add
cdq
aad
push
(bad)
or
inc
sbb
jp
xchg
dec
xor
cs
cmps
sub
stc
mov
inc
and
cli
xchg
fs
dec
fwait
and
dec
shl
pop
es
xchg
mov
aam
mov
in
mov
jnp
pop
push
and
xchg
sbb
cmc
out
fwait
scas
jb
inc
jmp
shl
mov
push
mov
aaa
push
add
leave
or
push
and
or
lods
push
sbb
add
jbe
lods
dec
std
test
push
cmp
xchg
push
cmc
mov
cs
xor
lods
pop
es
scas
mov
push
sub
dec
jns
xchg
paddusb
and
mov
into
rol
mov
mov
adc
pop
xchg
xchg
sahf
cmp
dec
(bad)
jmp
popf
push
mov
inc
xor
ins
scas
shr
mov
push
mov
push
lahf
sbb
js
add
add
and
sar
push
pop
fwait
mov
call
ja
inc
ss
in
push
cmps
sbb
test
enter
les
lods
test
mov
or
mov
sbb
pusha
enter
fstp
cmps
mov
les
sub
sub
(bad)
inc
not
loope
(bad)
mov
arpl
sbb
arpl
pop
in
cwde
into
das
inc
dec
pop
mov
sahf
ja
xchg
mov
add
(bad)
outs
add
or
je
shr
sar
adc
mov
in
in
mov
sti
jmp
das
in
cdq
out
mul
mov
pop
sti
fcomp
jno
cdq
and
call
mov
sbb
mov
sub
xchg
cdq
add
mov
add
rol
cmp
inc
ja
sub
sub
mov
mov
mov
push
je
push
push
add
fidivr
mov
mov
and
(bad)
jle
cmps
adc
pushf
pop
(bad)
popf
mov
cmp
repnz
sbb
cld
(bad)
adc
dec
sbb
mov
push
inc
xchg
jmp
inc
test
clc
popa
rcl
lods
mov
(bad)
aaa
gs
xchg
imul
xchg
in
mov
mov
rol
jle
cli
mov
fild
mov
sar
xor
pop
movs
dec
pop
dec
add
mov
push
jp
xchg
dec
fs
(bad)
mov
clc
jl
xchg
call
adc
and
pop
cmp
int
mov
push
cmps
int
adc
jg
das
(bad)
and
out
shl
aaa
sub
mov
mov
ins
cmps
fucomp
add
mov
push
xor
cld
mov
std
inc
cwde
pop
call
push
mov
push
mov
mov
stc
cmp
fs
sbb
popf
shl
sub
int
inc
dec
jle
outs
jb
addr16
cli
jmp
mov
push
outs
fcmovne
adc
test
dec
loop
mov
rcl
vaddsd
(bad)
adc
xor
icebp
(bad)
sti
mov
dec
fisubr
push
pop
retf
sub
mov
pop
mov
pop
or
jecxz
add
fist
sub
inc
jo
out
imul
add
jp
int
sbb
sar
aam
retf
in
std
retf
fild
test
sar
stos
pop
sub
retf
stc
add
xchg
aam
jmp
leave
mov
repnz
xchg
dec
dec
jg
pop
fwait
(bad)
(bad)
jmp
xor
sbb
sub
cmp
js
in
into
xchg
add
adc
gs
sub
repnz
xchg
inc
je
push
cmp
(bad)
shl
idiv
arpl
inc
popa
icebp
push
mov
jl
rcr
(bad)
scas
adc
xchg
dec
cmp
sbb
inc
pop
jne
dec
mov
xchg
je
or
fisttp
pushf
push
xor
cwde
aad
dec
xor
push
(bad)
shr
fsub
push
inc
jge
pop
xchg
pop
dec
dec
sahf
dec
je
mov
iret
test
sbb
out
retf
pop
outs
mov
inc
and
scas
out
mov
stos
pop
popf
sub
out
jmp
adc
lea
sbb
imul
loope
push
cmp
ret
movs
sbb
rcl
inc
xor
xlat
adc
fiadd
add
test
into
movs
push
or
xchg
(bad)
cwde
data16
addr16
js
sub
icebp
mov
ins
jne
stos
clc
out
test
adc
cdq
push
inc
dec
sub
inc
jo
imul
ins
mov
and
(bad)
shl
pop
stos
and
sti
push
mov
xchg
test
xor
dec
or
pop
imul
mov
pop
cli
cmp
ds
imul
push
sbb
mov
mov
pop
retf
xor
shr
(bad)
add
mov
retf
bswap
or
sub
add
jo
xchg
or
test
call
push
push
ror
push
xchg
and
mov
int3
daa
into
outs
cmps
sbb
pop
fsubr
iret
jmp
jp
clc
sahf
in
xor
addr16
aad
and
repz
mov
lods
add
movs
mov
dec
xchg
cmps
push
int3
fwait
xchg
lds
test
add
cmps
int
outs
jecxz
out
dec
mov
jmp
jle
shl
dec
sbb
shl
add
ret
pusha
adc
or
imul
or
lds
add
(bad)
out
dec
push
pop
dec
mov
hlt
into
rcr
mov
ret
cdq
mov
push
sbb
jmp
jp
ins
add
out
push
push
daa
(bad)
jmp
fmul
sub
push
repz
jmp
cmp
and
shr
addr16
push
repz
mov
pop
jae
inc
mov
nop
cmp
push
out
push
lods
test
sub
adc
dec
or
adc
jb
pop
test
pop
(bad)
xor
mov
jmp
pop
das
push
add
mov
in
pop
and
push
pop
sar
push
jg
sub
sbb
dec
inc
ficom
(bad)
xchg
inc
(bad)
mov
xchg
mov
or
lods
leave
ss
jle
std
jl
ins
sbb
push
sbb
je
cmp
repz
dec
mov
aad
pop
shl
xor
push
iret
imul
in
mov
mov
outs
cmc
push
aad
sbb
push
add
movs
dec
mov
sub
fwait
pop
cmp
std
jmp
adc
pusha
mov
push
(bad)
mov
push
clc
or
add
rol
lods
jb
cmps
nop
lahf
sti
fstp
adc
test
push
push
fbstp
jge
xchg
shl
fwait
icebp
imul
aas
adc
sub
or
push
call
cmps
movs
lock
(bad)
push
mov
push
stos
cwde
imul
out
sbb
and
out
pop
mov
mov
cmps
js
mov
fstp
and
pusha
fsub
(bad)
and
in
xor
out
add
and
out
call
push
shl
xor
es
int
out
xor
adc
push
xchg
pop
call
push
addr16
jp
lahf
loop
mov
push
inc
out
xchg
pop
mov
dec
adc
cli
retf
sets
adc
hlt
push
stc
ds
push
in
and
adc
pop
aam
out
ret
xor
sub
fisttp
cmps
lock
xchg
inc
xchg
iret
dec
lds
xchg
js
pop
xor
fwait
mov
stos
leave
or
pop
or
sub
dec
sti
jne
fadd
mov
btc
or
mov
xor
push
retf
cmp
lahf
sub
data16
dec
xor
dec
(bad)
shl
add
inc
sub
cmp
in
(bad)
fiadd
and
xlat
repnz
and
aas
jp
sar
and
movs
xchg
call
addr16
push
rcl
rol
add
jl
rcr
inc
les
lea
xor
mov
pop
inc
gs
jmp
push
xor
ss
pop
int3
aas
or
mov
push
adc
(bad)
inc
rcl
popa
sti
sbb
mov
jae
lods
cmp
inc
lea
adc
cmp
leave
jmp
push
icebp
aam
popf
add
cdq
push
icebp
or
addr16
out
add
mov
jmp
pop
dec
mov
xchg
mov
dec
je
lods
mov
leave
jecxz
adc
sub
sbb
lds
js
pop
mov
push
or
dec
ret
cmc
pop
mov
jmp
fisttp
(bad)
cmp
shl
xchg
jecxz
out
ret
jb
hlt
push
jae
xor
inc
push
out
retf
or
dec
cwde
and
mov
adc
sub
sub
inc
test
jo
push
jp
fistp
aaa
imul
les
(bad)
bsf
ret
add
shl
mov
test
(bad)
fst
mov
das
inc
rol
inc
push
sub
(bad)
adc
test
sub
(bad)
not
rol
(bad)
cmovo
dec
movs
mov
leave
xor
or
mov
cs
call
sbb
sahf
outs
in
test
(bad)
mov
neg
add
sbb
clc
stos
jg
iret
jp
lea
push
pop
dec
xor
dec
jecxz
in
aad
xchg
push
out
sub
cmp
mov
div
ss
mov
xor
cwde
(bad)
jmp
stos
inc
add
mov
sbb
in
test
int3
dec
inc
sbb
movups
scas
jg
push
arpl
sub
not
inc
mov
retf
gs
jae
mov
pusha
lds
stos
mov
ror
dec
cdq
ds
cmp
pop
sub
inc
sub
rol
and
xor
fldcw
add
rcl
rcr
sbb
pop
ds
arpl
jbe
and
mov
and
fmul
jnp
movs
test
and
div
addr16
sub
jbe
ja
outs
pop
jmp
and
retf
mov
add
mov
sub
nop
adc
rcl
(bad)
pop
or
pushw
scas
or
pop
mov
dec
add
stc
rcr
imul
add
(bad)
cli
cmc
fcom
pop
cmp
int3
sbb
add
stos
pop
mov
int3
fimul
aas
inc
push
adc
sbb
cmps
add
adc
xchg
xchg
jns
rcr
mov
cmp
pop
jae
jle
loop
mov
xor
aaa
je
adc
sub
test
xchg
popf
retf
push
rol
dec
dec
test
cmp
push
mov
repz
sbb
cmp
mov
pop
out
fistp
das
sbb
xor
cwde
call
in
pushf
sbb
dec
cmp
and
jecxz
mov
inc
sub
or
mov
cdq
and
jecxz
je
push
mov
ret
jne
jns
mov
scas
sbb
push
jb
addr16
jge
(bad)
(bad)
mov
push
xlat
fnstenv
xchg
stos
inc
aad
shl
pushf
adc
lds
(bad)
jecxz
daa
lea
sar
mov
sub
(bad)
or
jle
call
xor
adc
xlat
out
cmc
ret
fisttp
in
adc
cmp
ss
dec
sbb
sbb
jb
pop
xchg
out
(bad)
and
dec
jne
fiadd
pop
retf
xchg
add
push
jecxz
aad
pop
cmc
mov
pop
(bad)
out
fwait
inc
xlat
stos
in
mov
or
cmp
arpl
push
ds
or
jbe
pop
cli
shr
push
je
call
leave
or
mov
lahf
xor
retf
call
retf
out
retf
jo
outs
fst
mov
inc
hlt
jb
mov
jmp
ror
xor
mov
movs
adc
add
or
mov
hlt
mov
adc
popf
xchg
aaa
leave
jl
adc
(bad)
mov
push
push
loope
sti
out
push
cmc
sbb
mov
retf
add
shl
adc
retf
dec
jns
push
pop
vpackssdw
movs
pushf
dec
fmulp
push
add
sahf
mov
jle
or
pop
iret
mov
mov
test
pushf
das
mov
and
in
loopne
mov
cmp
shl
loopne
cli
in
loope
sub
mov
lods
data16
xchg
dec
mov
ror
pop
push
or
push
out
push
movs
xlat
sub
aam
inc
(bad)
call
int3
push
and
mov
popa
das
into
(bad)
repz
(bad)
call
nop
fiadd
jne
test
iret
ret
jae
adc
push
push
jecxz
fadd
mov
fidiv
add
shl
and
jmp
mov
cmps
adc
and
sbb
inc
xlat
pop
shl
inc
imul
not
xchg
sbb
push
inc
xchg
into
imul
popf
adc
mov
nop
js
loop
add
shl
xchg
jmp
fild
ja
stc
and
sbb
loop
repz
addr16
add
iret
adc
outs
out
mov
or
mov
out
arpl
data16
jp
cwde
gs
sbb
mov
retf
mov
lds
stc
ss
mov
jo
jp
push
(bad)
adc
add
mov
add
inc
inc
jl
mov
(bad)
cld
and
rol
les
arpl
xchg
fild
lahf
mov
repz
adc
call
push
and
lock
movs
xchg
into
jmp
sub
push
push
xchg
jmp
(bad)
das
ins
or
sub
jecxz
sahf
fwait
aaa
aam
xchg
mov
(bad)
popf
inc
mov
adc
push
add
jae
push
or
cmp
aad
outs
aam
jle
push
lods
call
mov
loopne
mov
add
adc
(bad)
loopne
xor
test
or
mov
mov
std
jne
mov
pushf
adc
sbb
inc
mov
jge
add
push
jmp
push
rcl
rep
cmp
mov
imul
clc
mov
stc
or
pop
sub
mov
hlt
ins
push
fdiv
xor
test
jno
mov
je
mov
outs
xor
or
mov
into
pop
dec
aas
call
outs
enter
outs
retf
fidivr
sbb
and
xor
ret
add
pushf
cmp
(bad)
push
lods
xchg
jo
and
mov
or
lahf
pop
cwde
lds
mov
out
cmp
sete
add
mov
adc
jmp
and
or
div
test
cmp
sub
cmp
or
ins
sub
and
or
dec
int
imul
sub
std
lea
out
push
jno
sbb
(bad)
cs
test
dec
xchg
pop
push
sbb
fcomp
cwde
loope
add
cld
cld
mov
add
test
dec
mov
mov
inc
jmp
test
jle
outs
push
leave
adc
mov
es
stc
add
mov
push
scas
adc
sbb
and
add
mov
(bad)
mov
or
push
sub
cmc
ret
pop
sub
retf
es
pop
add
ret
enter
neg
fidiv
cmp
test
mov
xor
dec
and
nop
fdivr
mov
dec
mov
xor
call
outs
xchg
push
pushf
or
imul
fidiv
fwait
daa
es
and
mov
pop
enter
mov
jp
jb
ret
jecxz
sahf
sti
jmp
repz
push
inc
pop
push
les
inc
xlat
cmp
cmp
jnp
sub
loop
mov
mov
xchg
push
cld
shl
adc
mov
push
lahf
adc
mov
jne
adc
pusha
pop
fidiv
icebp
aad
shl
js
movs
or
pop
stc
ins
stos
out
mov
sub
in
mov
(bad)
enter
aad
xchg
(bad)
popa
(bad)
test
int3
movs
pop
pushf
popa
fsub
ja
lods
aas
inc
add
lock
mov
mov
int
idiv
inc
cmp
inc
jmp
jle
frstor
gs
(bad)
dec
sub
popf
(bad)
mov
sbb
dec
js
cdq
add
fcom
cmp
adc
or
cmps
mov
pop
mov
push
dec
jno
jns
scas
mov
sub
jmp
fld
retf
lahf
push
and
cmp
lahf
push
jo
pop
add
andnps
add
or
in
adc
fisttp
in
and
sar
movs
xor
xor
xchg
lods
rcr
iret
rcr
aam
out
push
push
out
xchg
vcvtsi2ss
mov
xor
dec
cmp
mov
mov
rcl
mov
bound
jp
jmp
jb
push
rcl
xor
in
pop
mov
mov
xor
call
cmps
retf
(bad)
mov
adc
in
inc
leave
pop
leave
and
stc
mov
jl
nop
jmp
inc
test
mov
push
and
outs
lea
xchg
loop
cmp
arpl
mov
jbe
sub
or
or
fnstenv
mov
test
jp
into
adc
xchg
or
sub
lock
(bad)
jmp
inc
jb
scas
jns
fild
xor
dec
dec
push
dec
xchg
mov
ret
adc
xchg
lock
rcr
out
push
test
or
popf
retf
int3
or
push
jae
add
mov
out
cdq
mov
mov
sub
aaa
sbb
push
(bad)
cmps
ja
loop
xchg
and
or
add
rcl
loop
mov
fsubp
js
les
sub
aam
mov
push
jns
leave
pop
les
(bad)
cld
mov
push
daa
arpl
rol
xchg
adc
dec
leave
loope
mov
push
addr16
xchg
pop
(bad)
stos
cdq
ins
shl
push
add
scas
fistp
cmp
sub
sahf
sar
mov
out
dec
icebp
in
xchg
jo
and
sbb
add
mov
mov
repz
xor
sar
pop
loopne
sbb
mov
inc
pop
ficomp
sbb
aaa
inc
push
xor
inc
gs
mov
mov
dec
inc
in
mov
and
jmp
mov
inc
lahf
inc
jae
scas
shl
dec
loopne
daa
add
pop
pop
sbb
gs
pop
mov
push
ins
test
cmp
and
pop
sbb
popa
push
inc
and
mov
stos
daa
add
xlat
pop
or
popa
leave
div
jne
xchg
clc
jmp
and
inc
cmps
test
outs
repz
outs
and
(bad)
xchg
(bad)
aam
fisubr
push
xor
retf
xchg
or
loopne
(bad)
(bad)
int
fdivr
jbe
stc
mov
push
jns
push
dec
pop
cmps
stos
mov
shr
jmp
push
cmp
shl
mov
in
stos
int
mov
mov
xchg
push
icebp
mov
push
test
aam
and
or
stos
cmc
test
add
push
mov
imul
test
in
imul
pop
xchg
scas
out
loop
pushf
cmps
xor
push
adc
out
add
in
cmp
rol
cmp
sbb
fcom
mov
rol
inc
and
clc
inc
xchg
jnp
and
push
jp
xchg
ss
xchg
loope
jmp
aam
sub
pop
sbb
int3
dec
inc
inc
stos
sahf
sbb
test
xlat
inc
out
and
mov
in
das
xchg
stos
lock
aam
add
test
in
call
xor
mov
mov
in
jo
mov
rcr
imul
cli
cld
xchg
push
lea
movs
xchg
shr
mov
xchg
sbb
sahf
cmp
cld
sbb
jecxz
pop
mov
sub
mov
into
or
and
mov
push
sbb
outs
fdiv
pop
push
push
sahf
popf
test
leave
stc
test
or
loopne
les
out
dec
jno
(bad)
push
ss
push
aaa
inc
mov
lock
loopne
sbb
and
mov
scas
enter
xor
in
retf
jecxz
pop
push
imul
aaa
hlt
imul
mov
jo
dec
(bad)
mov
push
imul
xor
and
and
movs
add
and
les
fwait
add
mov
mov
popa
je
lods
jl
jle
test
cmps
lock
mov
cli
mov
cmp
jne
dec
fcom
lods
adc
sti
add
or
adc
bound
leave
adc
push
shr
and
xchg
cmp
shl
dec
push
xchg
(bad)
daa
fsubr
daa
sub
mov
mov
mov
mov
outs
in
sub
mov
test
sahf
mov
xchg
cs
sbb
dec
test
dec
sbb
lock
mov
xlat
fwait
dec
xchg
cmc
data16
or
xchg
push
cmps
nop
or
dec
mov
das
add
ss
test
enter
push
mov
shr
int
imul
fwait
xchg
mov
xchg
add
or
call
rcl
ins
xchg
stos
outs
and
mov
add
fstp
ds
aaa
clc
js
dec
clc
fxch
add
mov
loope
push
pop
sbb
das
push
js
and
dec
adc
mov
mov
xor
push
push
dec
iret
js
lds
lock
call
mov
xchg
and
daa
lods
outs
xchg
inc
aaa
sbb
pusha
jne
scas
sub
daa
sbb
(bad)
push
fs
jmp
rol
mov
sbb
lods
sub
dec
mov
jbe
inc
jp
shl
adc
mov
sub
imul
jns
stc
jae
mov
int
stc
or
push
mov
rcr
fstp
je
and
push
ins
retf
je
mov
pop
loopne
mov
les
cld
pop
and
pop
mov
int3
enter
lods
or
cld
sbb
(bad)
cli
or
ins
mov
jecxz
retf
bound
sti
mov
retf
dec
hlt
dec
sub
inc
aaa
inc
jmp
push
gs
ins
sbb
leave
add
dec
mov
push
and
or
mov
pusha
sbb
iret
dec
dec
imul
fwait
pushf
gs
call
movs
sub
or
jb
inc
xor
int3
cmp
das
stc
loop
mov
shr
cmp
lahf
cwde
cmp
aaa
xor
dec
mov
stos
dec
mov
mov
mov
rcl
sbb
ss
gs
iret
aam
shl
cmp
out
dec
into
jmp
cdq
ffree
pop
mov
mov
cdq
loopne
movs
add
popa
mov
xchg
xchg
sub
aaa
mov
dec
in
inc
mov
inc
scas
leave
daa
or
mov
test
jle
fst
jle
push
xor
sti
and
mov
or
mov
pop
add
mov
movs
mov
fstp
(bad)
xchg
movs
xchg
das
jge
push
test
xchg
jmp
jno
js
mov
into
aaa
in
outs
cmps
jmp
mov
or
push
push
out
fdiv
cmp
mov
sub
sbb
cdq
xchg
dec
lods
int3
cli
lea
xchg
sbb
mov
pop
outs
add
inc
sub
movs
or
cmp
outs
imul
cmps
popf
test
jnp
jge
aas
dec
retf
mov
jle
pop
or
test
mov
iret
inc
dec
fucomp
call
cmp
mov
(bad)
mov
sub
mov
mov
xchg
mov
xchg
or
dec
popf
lock
jp
ret
stos
mov
and
or
ss
cmc
push
sub
sub
jo
sub
sub
sub
add
and
jge
lods
jo
cld
(bad)
(bad)
fwait
or
jl
retf
xchg
pop
mov
inc
(bad)
int3
xor
add
mov
sbb
jg
aas
ins
jns
(bad)
lds
std
icebp
cmp
jo
ds
xchg
cmps
xchg
cmc
lock
lock
mov
xchg
pop
xchg
push
cmp
(bad)
rol
cmp
sub
jmp
loopne
xor
sub
sahf
das
fadd
retf
dec
mov
fidivr
jb
xor
loope
xlat
lods
push
in
ficom
sub
adc
cmp
mov
lea
test
inc
push
icebp
lods
(bad)
xchg
dec
call
pop
push
lds
cld
inc
sub
pop
jb
jb
in
mov
add
xor
jmp
stos
arpl
test
lods
cwde
cmp
pushf
inc
ret
adc
jnp
scas
lods
icebp
dec
imul
lods
inc
pop
leave
inc
mov
jne
inc
push
or
aaa
cli
(bad)
push
jno
daa
mov
(bad)
cmp
jg
out
loop
mov
cmp
and
or
pop
popf
add
hlt
cmps
sti
in
jne
add
(bad)
cmp
shr
pop
push
in
stc
jl
data16
xchg
(bad)
std
shl
jecxz
nop
pusha
xchg
stos
adc
sbb
pop
ss
jne
pop
and
xor
loop
jg
popf
stc
fdiv
adc
cwde
arpl
xor
sub
stc
push
fist
and
ror
das
jno
inc
jne
dec
mov
arpl
adc
bndldx
xchg
push
jns
nop
xor
int3
in
(bad)
out
pusha
inc
in
inc
xor
in
(bad)
push
repnz
sbb
dec
adc
cdq
add
pop
sub
sub
push
mov
mov
pushf
push
sub
push
fdivp
out
lods
(bad)
mov
sahf
dec
add
pop
xor
xchg
xor
mov
sub
sahf
cmp
shl
rol
(bad)
(bad)
sub
jl
retf
xor
(bad)
cmc
xchg
pop
push
fadd
jb
push
push
jecxz
or
scas
mov
or
sub
ja
ins
fcomp
aaa
inc
test
and
repz
test
cmps
shl
sbb
sbb
(bad)
lds
push
or
scas
inc
xor
pop
xor
repz
xor
add
shl
inc
mov
pop
sbb
movs
mov
sub
(bad)
sbb
mov
mov
loop
sub
leave
cld
sbb
dec
mov
mov
mov
push
inc
inc
test
cmp
xor
or
mov
mov
pop
push
loope
mov
popf
retf
cmc
adc
pop
inc
das
mov
cdq
cmp
add
cmp
ror
or
inc
(bad)
and
out
inc
dec
scas
arpl
xor
stos
shl
jno
push
mov
int3
shl
bound
cwde
and
pop
lods
pop
pop
or
mov
push
xchg
jecxz
mov
ins
push
paddw
mov
cld
adc
dec
sbb
out
inc
(bad)
imul
(bad)
out
adc
pop
scas
movs
sti
jmp
(bad)
les
add
retf
leave
pop
and
enter
out
int
in
out
sbb
add
arpl
push
jno
xor
pop
dec
repz
jmp
hlt
int3
adc
cmp
and
jmp
mov
leave
mov
lahf
dec
lahf
retf
and
cmp
push
enter
xchg
inc
cmp
movs
fdivr
das
gs
hlt
and
adc
xlat
sub
loop
mov
fwait
stos
mov
jmp
push
sbb
mov
inc
push
cmc
dec
shr
adc
imul
pop
push
jecxz
clc
retf
jmp
sub
sbb
out
mov
jl
mov
lock
hlt
call
sub
cmps
jle
cmps
sub
pop
cmp
ins
inc
inc
je
dec
push
in
mov
(bad)
jne
mov
pop
loop
rol
inc
sbb
ss
bound
add
fidiv
pop
jno
repz
inc
xchg
sar
pop
xchg
cmps
mov
fimul
(bad)
mov
arpl
inc
sahf
mov
pop
inc
xlat
mov
sbb
mov
rcr
lea
cmp
mov
or
mov
ins
xor
push
xchg
push
dec
lea
rdmsr
cmps
mov
test
xchg
mov
jne
jo
fld
push
add
std
cs
and
cmp
daa
aas
add
jae
retf
cmps
imul
hlt
pop
rcl
es
xlat
fstp
add
hlt
dec
pop
mov
push
xchg
jmp
cmp
mov
ret
mov
in
push
mov
mov
xor
retf
mov
call
out
shr
std
add
test
call
aad
dec
(bad)
lock
les
pop
mov
loop
xor
cmp
cmp
xor
stos
xchg
cmc
xlat
sub
mov
fisub
(bad)
pusha
sub
sub
imul
jp
pop
sub
hlt
enter
adc
xchg
add
stos
jge
dec
sbb
into
adc
add
xchg
popf
mov
mov
icebp
daa
mov
cmp
cmps
sar
adc
push
mov
push
movs
pop
gs
push
(bad)
nop
mov
das
dec
pop
and
dec
xlat
adc
mov
in
jo
les
cli
pop
lods
adc
pushf
push
aaa
or
pop
push
shl
das
xchg
cs
jne
xchg
add
xlat
stc
pop
push
adc
mov
push
adc
leave
lods
sbb
sbb
out
xor
xor
mov
js
jo
mov
cmp
ds
fstp
push
iret
sti
jne
jmp
jge
out
call
fcmovnu
int
pop
out
mov
inc
and
jns
or
push
sbb
sbb
dec
call
stc
jb
dec
fdivr
sbb
adc
push
stos
pop
push
push
gs
out
ret
pop
sahf
xchg
mov
push
fisubr
push
sub
(bad)
mov
xor
mov
pop
push
inc
cwde
jp
call
and
pop
sbb
cs
das
add
loop
mov
adc
lahf
xchg
cmp
pusha
stc
retf
cld
ret
or
jl
scas
jne
in
in
mov
(bad)
fstp
nop
retf
out
sahf
popf
lds
and
jl
loopne
ins
aam
(bad)
scas
out
mov
fs
lea
jbe
or
int
ins
or
test
and
jmp
mov
dec
and
std
sbb
jo
add
sbb
pop
hlt
ss
into
pop
scas
dec
fwait
and
xlat
xchg
adc
sub
mov
mov
mov
push
or
int
pop
repnz
mov
push
jno
(bad)
fcomip
std
adc
fmul
cmp
push
call
stc
fisub
or
xchg
in
mov
sti
icebp
scas
inc
int3
push
xchg
and
call
push
loopne
inc
mov
jb
out
gs
cmps
mov
ret
rcr
stos
dec
aam
xchg
out
out
mov
not
xor
in
imul
movs
mov
sbb
test
sbb
int3
cs
aas
scas
dec
add
shl
xchg
bswap
xlat
scas
fwait
jae
rol
movs
fdivr
jl
mov
retf
mov
ret
imul
mov
loopne
aad
loopne
xchg
es
or
ret
inc
xchg
cdq
rol
cld
fwait
outs
dec
push
mov
outs
out
mov
pop
push
mov
pop
sub
sub
jne
cmps
push
int
aaa
mov
loop
inc
mov
dec
ins
and
fisubr
xor
lods
xor
in
retf
cmp
lods
cli
jno
jecxz
adc
push
test
jl
outs
shl
hlt
dec
lahf
sub
pusha
inc
loop
xor
sub
mov
bound
jb
stc
jle
int
jbe
fmul
sub
out
imul
or
hlt
lock
call
mov
outs
jp
dec
push
cmp
repz
ds
aaa
jmp
xchg
pop
popa
sbb
cmps
and
sbb
(bad)
fwait
(bad)
sahf
sar
add
sub
push
(bad)
sbb
pop
mov
push
push
mov
lahf
cmp
pop
mov
xor
pop
add
sub
sub
pop
lods
jns
jecxz
das
jl
mov
dec
arpl
push
ins
pop
js
gs
dec
aas
call
jb
loope
lods
ret
jnp
and
push
jne
pop
push
cld
fdivr
mov
sbb
push
xor
sub
push
sub
nop
shr
and
and
daa
fst
push
pop
aad
cmps
test
mov
dec
xor
fsub
cmp
cld
pop
push
in
fs
(bad)
cwde
es
cmp
cld
push
(bad)
in
shl
dec
adc
fld
sti
in
arpl
xor
dec
shl
pop
xlat
mov
nop
iret
adc
jb
add
mov
in
ins
jae
lods
sub
adc
(bad)
lods
fistp
xlat
aam
aas
test
cmps
call
lahf
rcl
sbb
enter
fldenv
inc
aam
call
clc
push
test
clc
je
stos
dec
xchg
dec
(bad)
out
inc
pop
sub
cmps
xchg
mov
inc
push
mov
push
mov
retf
and
sub
icebp
les
neg
fidiv
push
mov
mov
iret
ins
cmp
stc
push
xchg
aad
pop
jge
sti
icebp
mov
scas
mov
jo
xchg
mov
cmp
mov
add
dec
push
out
cli
mov
cld
push
ds
pop
clc
push
sub
enter
shl
loope
jns
dec
xchg
sbb
(bad)
hlt
mov
loopne
dec
arpl
imul
xchg
popf
pop
push
sub
cmp
pop
sub
add
sub
sahf
cmps
arpl
nop
es
addr16
leave
sbb
cli
inc
sub
mov
leave
shl
or
sti
sbb
icebp
clc
int
pusha
sub
mov
xor
or
dec
(bad)
int3
fwait
ins
xor
cmp
jne
in
cmp
not
scas
pushw
pop
xlat
mov
adc
add
sbb
pop
cld
fild
inc
jmp
xor
xchg
movs
ins
mov
ror
in
scas
(bad)
dec
push
call
xchg
or
arpl
(bad)
imul
shl
push
add
add
mov
jae
loope
retf
cmp
push
ret
jo
adc
jp
fisub
inc
aas
ja
les
mov
addr16
cmp
mov
xchg
jnp
inc
shr
push
cmps
xor
and
lock
in
or
push
retf
in
cmp
lea
add
xor
add
call
jmp
(bad)
outs
std
add
cli
xor
fbstp
xchg
leave
ret
mov
loopne
ret
push
outs
mov
adc
pop
lea
test
cld
sub
les
test
sbb
and
lahf
cmps
cmp
xchg
jle
cmp
push
sbb
movs
xchg
test
in
pop
fld
(bad)
hlt
dec
rcl
int
jnp
push
adc
jb
mov
daa
pop
mov
not
inc
pop
adc
push
inc
shr
mov
in
mov
and
dec
mov
jno
ins
and
out
adc
popf
xchg
mov
cmp
adc
(bad)
cld
jnp
addr16
or
jo
hlt
mov
xor
inc
enter
pusha
scas
imul
jmp
and
sbb
shl
daa
inc
popa
hlt
test
pop
sub
dec
daa
(bad)
jmp
jns
xchg
jp
dec
mov
xchg
mov
sti
sbb
xor
call
adc
shl
xchg
fs
inc
out
fwait
adc
call
jmp
idiv
scas
mov
adc
push
int3
imul
and
push
into
or
sub
sub
icebp
jb
or
mov
pop
test
and
or
rcl
gs
bound
dec
pop
in
pusha
push
add
inc
ficom
inc
sub
mov
xchg
jnp
int
inc
ret
in
pop
cmp
hlt
pop
and
mov
(bad)
jge
dec
in
(bad)
into
and
enter
mov
or
pop
mov
(bad)
nop
sub
(bad)
in
mov
or
push
mov
jmp
pushf
dec
out
jbe
nop
pushf
(bad)
inc
and
adc
jmp
aas
ins
repz
sub
scas
lahf
add
or
lds
inc
push
or
mov
push
add
ins
cmps
add
push
mov
mov
or
ret
js
dec
mov
loop
jae
test
inc
gs
push
cmp
or
test
inc
dec
arpl
(bad)
stos
out
sti
add
inc
ret
push
xchg
jp
push
clc
adc
sti
(bad)
push
mov
or
jno
add
dec
jne
adc
jmp
jl
dec
xchg
mov
adc
push
gs
js
das
cs
jge
add
movs
dec
sbb
call
movlhps
test
pop
cmp
jo
les
jbe
icebp
xlat
out
sbb
jg
adc
xacquire
repz
dec
lods
loop
aaa
repz
ss
jl
mov
pusha
or
es
fistp
push
shl
and
imul
push
mov
or
ret
jmp
jmp
dec
cmp
xchg
call
xor
ror
in
pop
cmp
push
sbb
mov
sub
mov
lods
das
test
(bad)
and
xchg
adc
mov
pop
out
test
or
pop
dec
cmp
bound
clc
jmp
or
test
add
sbb
int3
dec
pop
gs
dec
sbb
sub
out
sbb
cwde
sar
inc
enter
jnp
xor
(bad)
(bad)
and
add
push
xor
outs
imul
inc
call
dec
dec
(bad)
idiv
mov
xchg
mov
stc
mov
jg
jle
bound
(bad)
pop
mov
das
in
pop
call
sub
fild
cs
mov
movs
hlt
mov
mov
shl
and
push
and
retf
adc
and
mov
sahf
pop
push
iret
jns
mov
cmp
(bad)
hlt
fisubr
mov
xchg
bound
sahf
std
jmp
mov
mov
jecxz
mov
cwde
or
push
fld
pop
push
cmp
xor
fsubr
cmp
into
ror
mov
cmc
ins
movs
push
add
std
mov
sbb
mov
sbb
sbb
mov
pop
jmp
scas
mov
ror
xchg
popa
leave
add
lods
pop
dec
mov
push
test
clc
cwde
mov
jp
jae
mov
and
int
xchg
mov
jle
sub
ret
(bad)
shl
sub
mov
out
les
scas
fwait
cmps
inc
and
mov
(bad)
fisub
add
and
cli
adc
cli
push
or
and
xor
mov
movs
cmp
xlat
mov
scas
xchg
add
rcr
fdivr
cmp
xor
mov
lods
(bad)
xchg
mov
pop
adc
(bad)
loopne
rcr
xchg
mov
or
je
std
or
test
cli
adc
sar
sub
add
or
cwde
or
popf
dec
bt
out
add
push
mov
dec
sub
cdq
xchg
sub
cmp
fimul
(bad)
mov
inc
add
or
jmp
call
dec
xchg
jl
jmp
sub
leave
cmp
jp
in
rcl
adc
push
add
jecxz
test
xchg
arpl
mov
cld
mov
add
mov
pop
pop
mov
popf
cmp
xchg
dec
daa
push
sub
pushf
pop
outs
push
imul
scas
enter
sub
fisubr
ss
push
(bad)
test
sub
inc
(bad)
cmp
fucomi
jecxz
inc
test
pusha
loop
and
xlat
xchg
icebp
push
or
mov
jg
cmp
loop
(bad)
pop
loope
xor
outs
cmp
nop
mov
add
lahf
jno
fmul
jmp
fiadd
jnp
aad
aad
xor
adc
xchg
mov
sbb
cmps
and
jne
cmp
xchg
cmp
mov
pop
call
stos
push
and
push
pop
movs
fwait
xchg
jg
jno
test
xor
or
add
pop
(bad)
push
pop
mov
ja
int3
push
mov
cmp
add
and
(bad)
and
in
jno
or
inc
repnz
cmps
bound
adc
jmp
mov
ret
dec
mov
add
push
fstp
sbb
xor
jmp
and
cli
icebp
adc
test
pop
xchg
shl
outs
inc
mov
fistp
mov
mov
popa
bound
jge
xchg
leave
jge
and
das
pushf
inc
sub
xchg
xchg
jmp
and
mov
and
in
in
inc
test
and
pop
shr
outs
dec
outs
bnd
fwait
daa
imul
mov
add
or
icebp
test
xchg
ror
push
xchg
xor
hlt
or
out
inc
psrld
and
push
cmc
into
stos
fisubr
cs
add
shl
das
xlat
cld
into
xchg
iret
xor
(bad)
dec
or
mov
inc
mov
in
rcr
in
push
pushf
hlt
xchg
in
popa
push
(bad)
mov
sub
cli
inc
out
aaa
inc
dec
cmp
jle
pop
(bad)
stos
and
push
or
test
mov
fimul
sbb
mov
iret
mov
pop
cdq
or
inc
xchg
jae
cmp
fstp
out
add
pop
sbb
iret
stc
jnp
(bad)
call
jp
icebp
and
push
cmps
in
jmp
jne
ret
(bad)
xlat
enter
inc
(bad)
into
inc
inc
ins
sub
daa
mov
and
pop
call
imul
shl
out
std
in
sub
xor
push
sub
daa
bound
lods
(bad)
pop
and
xor
repz
outs
xlat
fist
shr
pop
jns
push
push
jmp
sub
pop
int
push
movs
(bad)
es
outs
cmp
mov
outs
mov
mov
ret
xor
inc
xor
push
mov
inc
push
cli
mov
xor
adc
je
popa
mov
xchg
add
jae
jns
xchg
xor
cs
cmc
push
jl
xlat
cmp
cmps
mov
clc
add
test
push
sbb
sahf
hlt
pop
arpl
scas
xor
(bad)
pop
outs
(bad)
fisub
jmp
mov
push
pop
or
data16
push
shr
stos
pop
sub
hlt
mov
push
es
nop
jge
push
nop
scas
mov
out
in
aam
xchg
push
mov
add
sbb
test
push
inc
xor
loopne
icebp
ins
inc
pushf
outs
les
clc
adc
and
fsubr
nop
and
xor
mov
sbb
mov
mov
ror
xchg
fstp
fcomp
retf
mov
cmp
push
fisttp
mov
mov
cmp
fpatan
jge
mov
push
loop
test
stos
inc
retf
sbb
lods
cmps
xchg
into
call
add
xchg
pop
popa
push
xor
or
cdq
jl
hlt
(bad)
jnp
nop
cmp
(bad)
mov
pop
jns
mov
jmp
out
test
pop
pop
fs
inc
out
outs
aam
stc
mov
add
add
cmps
in
xchg
cwde
adc
rcr
leave
adc
dec
xor
jle
and
adc
adc
and
push
movs
rol
fs
pop
inc
inc
dec
cmp
or
imul
mov
fld
rcl
mov
and
push
cli
push
dec
jnp
xor
jl
jnp
out
pop
cwde
sbb
ins
sub
xor
adc
cmp
add
mov
cld
fidivr
sub
xor
test
scas
jl
adc
dec
outs
push
lds
mov
push
clc
aad
pop
push
mov
or
adc
sub
and
dec
in
add
jmp
fwait
(bad)
loope
mov
inc
jbe
inc
repnz
xchg
jns
not
inc
mov
cmp
push
ret
shr
cmp
pop
ins
retf
dec
or
out
movs
jns
jb
das
hlt
xor
movs
cdq
sahf
fcmovnb
daa
cmp
and
and
push
pushf
retf
int
fist
inc
les
repnz
push
ret
and
inc
xor
or
and
(bad)
and
popf
(bad)
mov
xor
in
mov
cld
mov
adc
push
and
call
retf
in
ja
fldcw
push
popw
pop
pop
mov
stos
mov
add
jle
push
popa
frstor
dec
jecxz
jb
outs
nop
mov
test
or
inc
arpl
sar
mov
pop
xor
or
push
mov
sbb
dec
aad
pop
das
addr16
pop
jmp
loope
cli
adc
jbe
inc
jne
jae
(bad)
cmps
jl
sar
mov
cmp
sbb
rol
sub
inc
das
leave
mov
adc
je
sub
dec
add
movs
jg
std
pop
daa
repnz
loope
and
mov
lods
or
imul
imul
push
sub
cmps
adc
scas
daa
retf
std
jo
inc
loope
(bad)
ja
push
sbb
imul
push
jmp
adc
push
test
test
in
je
ficom
data16
cmp
mov
les
out
retf
pop
mov
es
sbb
inc
fs
pop
jmp
push
push
hlt
add
sbb
or
xchg
xchg
out
cmps
ds
retf
retf
fdiv
cmp
adc
popa
fs
jns
rcl
jne
ror
cmp
aam
mov
ins
lea
push
mov
push
ja
ja
out
dec
repz
imul
rol
scas
and
in
out
xor
add
and
(bad)
dec
cld
test
rcl
pop
push
ret
shr
daa
sbb
inc
pop
inc
mov
and
mov
mov
push
stos
mov
xor
xchg
mov
sbb
mov
push
pop
pop
std
stos
addr16
xor
inc
pop
lods
pop
fcmovne
push
scas
jecxz
dec
and
loopne
inc
cs
pusha
aaa
lea
pop
or
xor
repz
out
xchg
mov
inc
movs
icebp
rcr
popa
xchg
test
test
out
fcomp
ror
xchg
fcom
pop
ds
pushf
pop
or
ret
int
cmp
rcr
ds
or
dec
mov
push
mov
mov
jle
jnp
inc
sahf
in
sub
inc
test
adc
movs
mov
cs
imul
(bad)
aas
xchg
out
xchg
movs
jecxz
std
jecxz
out
add
lods
push
stos
inc
movs
add
mov
add
mov
push
in
or
and
in
pop
ins
int3
loope
push
inc
cs
ja
mov
movs
scas
loop
lock
sbb
pop
dec
sar
inc
push
sar
mov
cmp
jno
cmps
or
pop
dec
(bad)
pop
push
out
movs
add
sbb
mov
dec
jo
clc
xor
inc
jb
xor
scas
mov
xchg
adc
es
inc
mov
xor
dec
mov
fstp
jl
sub
aam
cmp
cmp
and
pushf
mov
jns
push
js
xchg
xchg
imul
or
in
dec
dec
jbe
add
fisub
mov
lahf
mov
xor
dec
fimul
aam
scas
(bad)
repz
test
rcr
aaa
int3
sub
dec
in
dec
inc
push
cmp
scas
mov
adc
icebp
(bad)
stos
cmp
inc
shl
adc
adc
mov
int3
dec
xchg
push
cmp
stos
add
adc
fcom
shl
sub
ja
push
test
stos
push
add
loop
(bad)
call
fs
in
inc
xor
leave
push
dec
mov
pop
adc
jae
clc
cdq
fs
jecxz
or
jl
stc
jns
cmp
sbb
jecxz
dec
aas
xchg
mov
and
xor
adc
xchg
inc
in
push
sbb
push
adc
mov
mov
sbb
and
push
test
scas
xchg
or
mov
cmp
leave
mov
mov
cwde
cld
pop
mov
push
scas
pop
(bad)
push
add
ds
sub
fs
(bad)
cwde
cmps
add
jns
sti
clc
pop
test
jge
mov
in
sbb
add
stos
jo
(bad)
int
aas
cmp
push
xchg
(bad)
mov
ins
inc
xchg
shl
sbb
mov
ins
sub
mov
sub
addr16
in
lods
imul
push
mov
pop
sub
xor
out
cmps
(bad)
mov
pop
js
inc
pop
adc
ret
je
lods
or
aad
fisub
lods
movs
loope
mov
ficomp
cmp
dec
les
adc
int
stos
xor
(bad)
outs
cmp
inc
mov
jmp
scas
mov
dec
cwde
push
mov
aam
mov
add
mov
and
inc
push
lea
cmp
or
pop
mov
or
je
mov
mov
pushf
(bad)
jne
adc
mov
dec
dec
push
and
cmp
inc
sbb
test
retf
and
cmp
fwait
cmp
pop
cmp
stos
push
push
xor
es
fs
stc
push
pop
gs
mov
sub
push
add
xchg
pushf
cmc
xchg
test
leave
push
xchg
pop
xchg
sbb
dec
adc
mov
jne
enter
sbb
repz
and
pop
mov
jl
in
add
in
into
cmps
fldcw
xchg
pop
mov
mov
and
adc
fs
xor
jo
mov
shr
lahf
mov
push
jg
mov
test
adc
mov
jae
psubb
sub
adc
add
test
xchg
daa
sbb
hlt
cmp
in
das
data16
xor
xchg
jl
sub
lds
pop
cmp
retf
data16
mov
jge
fwait
xchg
in
retf
mov
push
jno
fstp
pop
and
and
js
repnz
xor
mov
sub
add
adc
push
add
lds
das
or
mov
inc
mov
cmp
jmp
ret
mov
mov
mov
jmp
add
push
or
nop
jae
sbb
sahf
mov
adc
or
mov
inc
data16
stc
into
cmps
imul
outs
push
mov
cmc
xor
(bad)
xchg
mov
mov
outs
leave
adc
sub
and
pop
jmp
(bad)
lds
mov
mov
or
(bad)
sub
lea
or
ret
test
adc
out
xlat
add
cmc
push
pop
sahf
mov
stos
hlt
push
loop
jmp
test
push
dec
jnp
and
dec
sub
ss
arpl
push
xchg
mov
ret
add
or
(bad)
xchg
mov
inc
xchg
adc
mov
pop
cmp
adc
adc
mov
ja
mov
rol
mov
jg
ror
scas
js
xor
cmps
sbb
int3
push
pop
inc
das
bswap
mov
cmp
pop
cmp
fild
fcom
imul
mov
stos
out
push
inc
retf
mov
sbb
repnz
mov
repz
fst
jecxz
or
out
in
test
lea
push
sti
(bad)
shr
mov
xchg
sti
cwde
xchg
dec
pop
adc
fild
loop
mov
test
jl
xchg
or
dec
aam
call
outs
test
jmp
scas
pop
push
and
fild
test
mov
fwait
pop
sbb
retf
aam
or
inc
(bad)
out
inc
jge
pop
shr
mov
test
pop
push
popa
pop
not
cdq
ret
call
sbb
fdiv
cmp
into
arpl
push
add
mov
pop
mov
jno
push
sbb
imul
enter
and
lods
imul
inc
rcr
mov
fisttp
cwde
sub
stc
jns
cmp
xchg
cmp
mov
test
adc
iret
or
je
xchg
jl
int3
adc
ror
add
hlt
inc
sbb
adc
ins
cmp
mov
mov
je
out
jg
aaa
sti
out
jmp
pop
stc
or
mov
xor
fist
call
ret
adc
fnstcw
or
movs
push
outs
out
iret
sbb
add
dec
cld
popa
jmp
and
dec
data16
fldcw
into
or
aaa
das
fimul
push
push
mov
add
and
push
dec
mov
mov
sub
out
jns
sti
sub
dec
ret
ror
xchg
mov
and
cdq
mov
cmp
cli
cmp
addr16
je
adc
mov
inc
icebp
push
or
cwde
call
jg
sahf
or
sub
dec
mov
jmp
push
adc
repnz
jnp
out
dec
popa
mov
xlat
mov
push
xor
add
(bad)
adc
cmp
xchg
mov
enter
cmp
ror
sub
sti
and
loope
daa
mov
loopne
stc
ficom
mov
sar
fabs
dec
pop
cmp
iret
aas
pop
fisttp
std
push
cli
es
inc
sub
sahf
lods
pop
cmp
jge
aas
test
shr
fs
imul
pop
mov
bound
loopne
sbb
sub
xor
mov
adc
jmp
jb
aam
sbb
jo
stos
mov
cmc
jg
imul
call
test
xchg
cwde
rcr
shr
cmp
repz
cld
cmp
repnz
ror
cmp
cmps
xor
jle
outs
and
adc
mov
sbb
loop
loope
push
mov
adc
(bad)
outs
xor
adc
sub
sti
in
xchg
adc
pop
out
cs
ins
mov
cmp
and
jae
inc
movs
and
mov
jl
out
imul
adc
loope
fstp
lods
xor
mov
mov
pop
out
arpl
(bad)
push
sti
test
and
dec
out
jecxz
adc
in
jns
or
inc
push
add
mov
call
pop
or
mov
pop
pop
(bad)
mov
xchg
rcl
mov
or
jge
mov
aam
out
clc
test
in
ret
imul
dec
sbb
xor
add
adc
pop
ret
and
mov
pusha
and
jg
adc
adc
in
add
jmp
cwde
add
xchg
jbe
clc
sbb
sub
rcr
(bad)
pusha
mov
fild
pop
mov
into
ror
or
test
mov
leave
rcl
push
shr
into
call
ret
leave
in
mov
fsubr
repz
mov
imul
sahf
push
jb
fs
lds
sub
add
mov
xchg
rcl
loopne
push
sbb
lock
pop
pop
mov
and
cs
fwait
push
fcmovnbe
push
pop
loopne
popf
test
xchg
aam
mov
mov
aaa
in
and
outs
sbb
dec
or
(bad)
or
mov
sbb
dec
mov
add
pop
fiadd
lods
ret
adc
mov
and
xchg
dec
pop
mov
xchg
sahf
adc
jae
xor
cwde
lods
in
enter
imul
les
dec
gs
pop
pop
sbb
jbe
test
(bad)
pop
jno
mov
retf
xor
(bad)
sub
jle
mov
out
adc
jmp
lock
jae
push
jle
idiv
pop
repnz
shr
or
jp
in
jmp
hlt
stos
pop
popa
inc
dec
mov
jb
test
xor
out
xchg
ins
bound
cmp
xchg
sti
xchg
adc
add
jg
ficom
push
xchg
not
pop
cli
add
mov
rcr
mov
push
js
ret
pop
outs
iret
jge
loop
pop
add
ja
pop
int
popf
cs
cmps
xchg
in
test
xchg
sbb
ret
in
je
dec
in
aas
(bad)
dec
jo
ins
or
mov
test
cmps
fld
push
or
mov
shl
xor
lock
jbe
cdq
fst
jg
xchg
cmp
jl
add
or
stos
adc
es
(bad)
idiv
mov
call
das
mov
jg
pop
push
into
sub
inc
xor
bswap
xchg
mov
loope
dec
in
rcr
mov
cmps
bound
push
dec
sub
push
outs
xchg
push
pop
ds
jle
mov
push
(bad)
cmc
test
xor
jne
push
test
pop
cli
lods
push
push
pop
push
mov
cmps
push
and
pop
loop
pop
repz
add
dec
xchg
mov
loop
cmps
into
mov
pop
and
mov
lock
imul
jns
mov
xlat
and
(bad)
mov
std
sbb
imul
xchg
scas
int3
nop
push
repnz
pop
push
adc
(bad)
push
fisubr
push
rsm
jg
out
jmp
ret
mov
mov
mov
les
dec
retf
xchg
jmp
sub
mov
addr16
inc
pop
dec
fdivp
out
ret
retf
mov
mov
out
lds
out
sti
lods
loopne
fdivr
gs
pop
stos
movs
xchg
push
push
mov
jge
bound
inc
pop
rcr
mov
test
movs
aas
pop
test
add
ja
sub
in
addr16
imul
xchg
pop
shr
pop
clc
mov
mov
mov
(bad)
mov
jmp
adc
cmp
loopne
mov
or
mov
push
mov
jae
sub
mov
push
dec
dec
aaa
cmc
xchg
inc
and
sbb
mov
ror
(bad)
jmp
test
inc
jne
and
lahf
cmc
pop
mov
mov
mov
stos
xchg
mov
and
movs
jne
loope
sbb
ficom
gs
jecxz
fild
push
inc
mov
movs
push
fisttp
ins
xchg
adc
or
mov
out
mov
and
cli
lods
ret
movs
xchg
in
xor
push
ret
push
mov
or
inc
inc
adc
pusha
jle
xchg
xchg
(bad)
mov
loopne
nop
test
fdiv
in
jmp
rol
cmps
fsubp
repz
je
pop
xor
fs
mov
sbb
cdq
in
inc
adc
mov
mov
sbb
or
loopne
sub
or
je
enter
jle
aad
shr
jo
mov
mov
cmp
sbb
and
and
jne
je
pop
jecxz
cmp
fwait
add
inc
dec
cwde
sar
or
scas
repz
mov
pop
(bad)
pop
lds
ror
imul
push
sub
sub
cwde
enter
ins
mov
stos
dec
movs
push
push
xchg
mov
jl
inc
gs
repz
xor
fisttp
cmc
inc
inc
adc
in
sub
jbe
lds
adc
jl
leave
call
cmp
sahf
cmp
dec
dec
ja
mov
xor
cli
stos
out
or
popf
test
cmps
xchg
pop
cs
cwde
push
mov
jp
out
dec
arpl
sbb
repz
div
xchg
inc
xor
or
cmp
(bad)
fidivr
shl
dec
mov
lods
lods
and
je
xchg
adc
xchg
dec
xlat
dec
push
in
pop
pop
push
mov
mov
bound
xor
sahf
cli
dec
mov
jmp
xor
test
icebp
pop
imul
test
xor
stc
gs
jge
pushf
pop
pop
jae
sbb
mov
and
stos
(bad)
mov
nop
das
lea
mov
mov
stos
and
sbb
cli
adc
mov
mov
add
dec
arpl
and
sub
cs
(bad)
mov
cmp
xlat
dec
shl
jne
pop
ss
adc
int
mov
adc
outs
add
jmp
aaa
xor
test
dec
dec
cmpxchg
cmp
mov
lods
xchg
sbb
call
push
fdivr
jb
ret
out
xor
or
push
sbb
outs
out
(bad)
add
add
dec
neg
cmc
lahf
sar
pop
xchg
mov
xor
int
sub
cwde
std
imul
push
jbe
cmp
lods
std
sbb
int3
jmp
gs
dec
dec
mov
jbe
sub
mov
sbb
xchg
jns
or
push
mov
pop
jle
scas
fs
lock
push
push
fwait
xor
test
scas
pop
xlat
retf
lahf
fnstcw
scas
mov
jg
adc
vmovntdq
mov
xchg
pop
and
test
mov
adc
inc
imul
push
fisttp
shl
jmp
loop
add
(bad)
cld
sub
jae
daa
mov
ret
std
sahf
xor
out
cwde
or
sub
ror
jne
out
inc
arpl
jle
nop
or
mov
mov
inc
out
xor
dec
add
fdivr
mov
aaa
pushf
fcom
pop
pusha
mov
adc
push
lds
ds
dec
mov
hlt
lods
and
and
aad
xor
xchg
push
xchg
dec
out
push
(bad)
jge
mov
ins
mov
fiadd
lods
cmp
fistp
push
and
pushf
retf
or
fmul
mov
jmp
pop
inc
hlt
sbb
adc
fist
jle
hlt
arpl
lods
cmp
mov
fcomp
ins
sub
pop
add
cmp
out
cld
pop
xchg
cwde
jnp
call
and
and
cmps
inc
mov
test
mov
mov
mov
das
push
dec
cmps
dec
aas
mov
mov
jp
adc
cmps
(bad)
dec
stos
add
add
js
nop
ficomp
popf
pop
pop
aam
into
retf
sub
je
fwait
shl
idiv
cld
mul
mov
aam
scas
popf
arpl
pop
loope
fwait
aas
stos
loope
and
aad
bsr
cmps
mov
xchg
xchg
mov
test
add
jecxz
sbb
adc
stos
aad
frstor
js
jecxz
fst
rcl
dec
xchg
ret
or
ffree
inc
lods
inc
pop
mov
out
mov
cwde
hlt
push
leave
hlt
shr
addr16
jbe
hlt
retf
push
push
(bad)
dec
xchg
gs
xor
sbb
imul
xchg
dec
mov
or
(bad)
fdiv
pop
pop
or
pop
cwde
mov
div
mov
dec
add
inc
push
mov
xor
imul
mov
arpl
mov
div
push
cmp
scas
iret
das
and
(bad)
xchg
lea
xchg
push
arpl
repnz
and
stc
mov
or
mov
dec
ffree
test
dec
dec
sub
loopne
mov
mov
adc
mov
out
xchg
inc
push
fmul
das
nop
in
jge
mov
(bad)
mov
or
cmp
popf
inc
mov
stc
push
pop
push
into
sub
jnp
push
dec
sub
mov
xor
jl
ret
jg
movs
je
leave
dec
cmp
add
xor
sbb
fisub
cmp
daa
or
ficom
xchg
fcomp
pop
mov
mov
in
mov
xchg
xlat
enter
push
mov
repnz
call
push
xchg
shr
fcomp
push
pop
push
les
cmp
push
add
sbb
pop
and
fisttp
fisttp
data16
mov
pop
xor
mov
xchg
aas
and
pop
cmp
ror
ror
hlt
add
movs
mov
push
cmp
pop
jle
xlat
daa
cmp
pop
clc
push
repz
sbb
push
pop
inc
push
jns
jae
mov
xchg
in
and
jg
jl
cdq
pop
dec
jg
lahf
push
in
mov
stc
fwait
mov
imul
cdq
jp
lock
add
add
fmul
sahf
ins
ja
xchg
(bad)
push
fcmove
adc
sub
pminsw
xchg
fld
not
inc
mov
mov
or
add
fld
xchg
mov
dec
ror
test
pop
outs
sbb
sub
mov
cs
push
int
inc
jno
push
dec
adc
lahf
inc
in
cmp
push
inc
xlat
push
sub
xor
jbe
pop
push
ror
addr16
in
mov
ds
xchg
or
add
call
and
mov
aaa
xor
cmc
mov
mul
jecxz
jnp
(bad)
inc
icebp
out
mov
jp
mov
mov
mov
gs
and
sbb
mov
int3
adc
lock
call
std
ds
mov
jnp
push
adc
xchg
dec
xor
ds
(bad)
fdiv
cmps
mov
and
cdq
mov
fwait
pusha
ret
jbe
sbb
xor
into
fdiv
push
sbb
sbb
scas
fiadd
imul
repz
das
mov
pop
popf
adc
leave
pushf
sub
cmp
push
movs
jae
add
ins
pop
repz
sub
sub
fdivr
cmc
ficomp
jns
aam
pop
aaa
shl
fadd
inc
sbb
je
cvtps2pi
stos
cmp
stos
movs
fs
xlat
int3
scas
mov
add
test
scas
popa
jle
stc
ins
nop
push
sub
jb
bound
or
cmp
cdq
in
mov
pop
popa
cmc
out
shl
jbe
adc
push
xor
jne
pop
sbb
pop
add
mov
stc
retf
aas
addr16
adc
cmp
xor
cwde
inc
aas
push
cmp
mov
fs
stc
cwde
fstp
test
movs
pop
stc
cdq
jl
mov
push
xor
popa
pop
sbb
enter
cmp
mov
mov
xchg
mov
push
jnp
add
mov
cmp
dec
mov
retf
movs
(bad)
in
sahf
push
cs
out
jno
add
imul
mov
aad
jo
sub
ins
push
jbe
mov
and
and
out
mov
scas
mov
sbb
sub
push
dec
inc
inc
(bad)
arpl
ds
ficomp
pop
aaa
xchg
cmp
mov
mov
loope
and
(bad)
(bad)
fisttp
pop
scas
xor
repz
test
mov
pop
mov
xor
add
xchg
loope
jp
aad
rcr
inc
sbb
cmps
popf
test
jg
xchg
inc
mov
adc
outs
enter
lea
test
xchg
dec
sub
mov
add
adc
(bad)
fwait
jae
mov
inc
push
xchg
outs
cmc
jbe
mov
xor
or
pop
clc
jns
popa
xchg
mov
cmp
fsub
inc
int
lea
pop
sar
push
inc
mov
push
dec
mov
movs
mov
jnp
loopne
jecxz
sbb
mov
sbb
mov
jne
mov
ds
outs
mov
mov
push
fwait
daa
mov
xor
or
into
push
mov
sub
xchg
mov
mov
jmp
movs
cmp
adc
inc
arpl
int3
ins
nop
fiadd
push
ja
or
lea
xor
jmp
mov
sub
cmp
and
and
sbb
ja
xor
push
imul
xchg
sub
bound
push
and
dec
xchg
and
or
aam
pop
cdq
ins
jo
clc
dec
(bad)
mov
dec
dec
das
mov
in
in
jl
out
in
lods
addps
in
pop
cmp
clc
mov
and
shl
mov
test
mov
add
int3
test
rcr
nop
call
jnp
jno
xlat
jo
call
fwait
bound
lahf
stos
mov
scas
add
aaa
scas
cmp
cmp
mov
das
pop
stc
mov
frstor
inc
arpl
shl
sti
sbb
jg
ins
inc
out
ret
adc
mov
lods
mov
pop
or
fisub
dec
daa
cmp
dec
bswap
cmp
mov
xor
mov
jp
push
fninit
ret
adc
pop
out
sbb
or
les
pushf
push
xor
aaa
push
call
push
xor
xchg
mov
sbb
sub
xchg
outs
mov
mov
popa
fimul
pop
cmps
pop
mov
lock
xchg
sub
pop
add
sub
sahf
ret
xchg
out
test
xor
add
xor
icebp
test
push
mov
dec
in
js
sub
or
daa
dec
dec
jb
push
cmp
leave
aas
mov
repnz
iret
xlat
neg
pop
cwde
adc
fwait
or
dec
sub
mov
fsub
add
xchg
clc
mov
cmp
sbb
or
jp
in
in
loopne
push
(bad)
xchg
into
dec
mov
push
mov
cmp
out
mov
xchg
xor
rcl
adc
jge
inc
push
adc
nop
push
push
ja
adc
push
int
jne
sub
cmps
inc
mov
sbb
ficomp
loop
cwde
(bad)
and
or
mov
ins
xchg
inc
dec
mov
les
inc
dec
ins
(bad)
int
xor
popa
clc
lea
dec
sti
mov
adc
push
enter
stos
mov
push
into
dec
inc
and
add
daa
cmp
sub
jmp
fs
push
(bad)
fwait
jo
in
adc
mov
dec
or
(bad)
mov
jno
push
jmp
push
imul
jne
and
sbb
sbb
pusha
dec
addr16
pop
cdq
(bad)
in
cmp
mov
cwde
icebp
xchg
and
data16
std
ja
cmc
sub
mov
fadd
ja
sub
popf
pop
hlt
jl
lds
pop
das
sub
jo
mov
dec
or
cld
adc
(bad)
adc
setge
mov
mov
jns
cmp
faddp
xchg
or
jmp
and
cwde
ret
adc
imul
test
push
movs
or
dec
shr
xchg
gs
add
test
mov
cs
xchg
(bad)
enter
and
mov
and
fcomp
jb
retf
es
cmp
jmp
cmp
cdq
lock
fdiv
and
push
mov
outs
sbb
inc
pop
mov
push
loopne
jecxz
sbb
xor
arpl
mov
aas
jb
out
sbb
addr16
cwde
daa
push
push
cmps
pop
push
cmp
push
xchg
repnz
cmp
aad
add
inc
inc
sbb
dec
jno
loop
inc
lock
xlat
xchg
push
popf
sbb
sbb
xchg
jle
pop
out
mov
add
add
ret
in
cld
and
clc
push
mov
test
cmc
add
fnstcw
xor
mov
into
and
dec
jmp
call
retf
aad
xor
mov
imul
aam
repz
call
xchg
cdq
int3
fstp
pop
and
mov
ret
mov
jecxz
std
ins
mov
mov
ja
ficomp
or
jno
clc
jns
sub
ins
dec
scas
pusha
jle
xchg
add
sbb
iret
(bad)
or
fiadd
pop
les
pop
or
ss
mov
scas
in
test
arpl
arpl
stos
mov
ror
sbb
out
mov
push
rcr
loopne
(bad)
(bad)
ins
and
out
pop
mov
int3
cmp
cs
addr16
xor
or
cdq
ret
jae
cmp
sti
push
mov
dec
iret
fsub
push
(bad)
dec
sbb
lods
cmp
scas
or
rol
aad
dec
int3
and
mov
out
mov
cld
inc
or
xchg
test
mov
dec
loopne
mov
nop
jbe
add
xchg
jno
xor
mov
mov
mov
adc
repnz
mov
dec
lods
ss
inc
sbb
add
pop
ror
add
inc
movs
xchg
aas
es
movs
sar
retf
sbb
xor
mov
xor
ds
mov
adc
push
sbb
jl
or
icebp
jno
jns
pop
pop
movs
add
or
mov
div
xchg
and
aam
mov
cmp
(bad)
xor
imul
dec
pushf
push
ror
add
cwde
ror
fmulp
outs
xchg
pop
outs
mov
int
in
adc
(bad)
inc
jno
mov
in
xor
mov
cld
daa
ss
lea
cmc
pop
pop
and
(bad)
dec
bound
cdq
push
cmps
mov
jecxz
xchg
mov
arpl
fld
pop
sub
or
jnp
jl
ins
add
rcr
sbb
pop
mov
cdq
mov
xchg
pusha
clc
imul
outs
mov
pop
(bad)
jns
xchg
ins
xor
mov
imul
mov
int3
push
clc
nop
mov
jmp
xor
or
push
retf
xor
xchg
push
mov
jns
rcl
mov
and
fadd
pop
enter
push
enter
sub
repnz
jns
adc
sbb
data16
xchg
pop
jg
pop
mov
call
das
shl
cmp
cmp
lock
sbb
loopne
xchg
xchg
xor
stos
pop
shl
cmps
data16
call
scas
sub
xchg
bound
mov
xchg
mov
shr
push
push
jp
nop
pop
(bad)
and
int
sbb
mov
(bad)
xchg
mov
push
xchg
push
xor
cld
int3
call
call
dec
push
push
fsubr
in
add
dec
(bad)
mov
mov
cli
test
out
gs
mov
jns
mov
xor
aaa
lds
pushf
sub
sbb
cmp
pop
and
lock
rol
mov
stos
out
hlt
and
jmp
ja
push
and
pop
ss
icebp
test
int
xlat
ret
lods
inc
adc
pcmpeqw
jg
(bad)
cmc
fidiv
xlat
adc
mov
push
inc
and
pop
jle
pop
inc
inc
add
jnp
pop
pusha
sbb
mov
jns
cs
stos
pop
inc
pop
push
xor
sbb
movs
in
pop
mov
or
movs
jp
push
inc
push
(bad)
xor
sub
push
xchg
jmp
shr
ret
ret
inc
fwait
hlt
or
mov
fistp
sub
(bad)
(bad)
mov
test
fistp
ins
sub
or
adc
test
sbb
inc
xchg
call
mov
out
mov
hlt
mov
xchg
shr
out
or
push
add
(bad)
jge
ss
inc
cmp
push
dec
xor
push
(bad)
sar
emms
outs
fwait
mov
push
mov
xchg
aad
iret
fst
dec
fwait
xor
data16
test
pop
adc
cmp
lods
sbb
mov
mov
loop
or
sar
push
push
imul
iret
and
in
and
retf
push
mov
(bad)
test
pop
sbb
xchg
loope
mov
inc
pop
sub
bound
inc
sbb
fmul
lods
mov
mov
mov
mov
test
in
xor
add
jne
(bad)
pusha
add
fadd
call
push
test
dec
clc
add
mov
cli
adc
xor
xor
adc
xor
mov
inc
and
gs
xor
sar
push
in
or
js
pop
sti
sub
mov
call
jmp
xchg
push
or
scas
loope
out
xchg
(bad)
je
mov
in
loopne
out
pop
cmps
jno
pop
ds
out
movs
test
push
aam
dec
pop
mov
stos
sub
or
add
pop
xchg
aam
int
jmp
xor
xchg
mul
test
push
popw
add
pop
nop
popa
icebp
loop
std
(bad)
and
jns
add
rcr
inc
dec
stos
mov
(bad)
repnz
cmp
mov
fcmove
mov
shl
inc
aas
and
sub
jno
lods
push
inc
xchg
jae
clc
jmp
inc
fbld
xchg
push
jge
shl
adc
push
xchg
inc
mov
lock
inc
mov
push
movs
in
iretw
xchg
iret
sbb
sahf
sub
sar
and
jp
pop
cwde
jmp
out
jmp
iret
add
mov
jp
aam
pop
jge
aad
xchg
or
jns
lds
movs
fwait
xchg
mov
popa
fcom
mov
jo
cs
lods
jb
call
add
mov
sbb
pop
xchg
(bad)
or
scas
xchg
movs
cwde
xchg
xor
in
sbb
dec
mov
push
lods
pop
mov
xor
scas
sub
iret
push
push
cld
xor
xchg
jnp
pop
push
mov
xor
aam
call
pop
data16
fild
pop
inc
retf
ja
sub
mov
pop
gs
mov
(bad)
jle
add
mov
and
jge
dec
mov
push
fwait
rcr
aad
clc
inc
iret
daa
sar
rol
popa
push
shl
cli
addr16
jo
popf
mov
jl
clc
or
sbb
sbb
outs
xchg
mov
sub
mov
ins
sbb
dec
dec
call
lahf
jecxz
xor
imul
rcl
mov
push
imul
jbe
cmp
jae
cmp
pop
xor
xchg
mov
mov
call
nop
inc
(bad)
ins
dec
xchg
sbb
jno
dec
push
mov
inc
dec
push
mov
and
lods
pop
and
cs
mov
adc
loope
int
push
and
cmps
mov
pop
push
enter
xor
cld
mov
mov
rcl
pop
repnz
cmp
xchg
jne
xchg
cmp
pop
or
adc
cmp
mov
add
leave
bound
addr16
jle
or
jo
pop
cld
pop
test
sbb
mov
inc
fist
add
sbb
stos
aam
or
jbe
in
add
stc
xchg
cmp
jmp
xor
outs
xchg
inc
ror
cmp
fsubr
ret
paddw
mov
jnp
(bad)
test
cmps
int3
int3
int3
push
in
cdq
jecxz
outs
js
inc
mov
cwde
fadd
les
ret
or
pushf
mov
sar
or
xor
cmp
xor
or
bound
push
inc
mov
or
daa
iret
fdiv
dec
addr16
loopne
jnp
rcr
loope
push
call
mov
and
mov
and
add
adc
hlt
shl
or
addr16
test
jns
jecxz
popf
imul
pop
retf
mov
aad
push
ins
mov
mov
jl
out
dec
or
cli
dec
dec
movs
pop
dec
ficomp
or
sub
loop
out
popf
sub
mov
mov
shr
or
out
and
xor
jmp
repz
xchg
outs
cmp
fisubr
xchg
adc
movs
arpl
movs
mov
jle
xor
nop
mov
sbb
fstp
xchg
fninit
mov
add
sbb
call
rol
out
cmps
or
xor
and
lahf
das
mov
mov
ins
clc
sub
sahf
push
add
iret
add
mov
gs
adc
div
inc
fs
les
std
sbb
sbb
lods
pop
inc
sbb
jl
fdivp
add
push
xor
mul
repnz
jbe
stos
jae
mov
sub
les
(bad)
in
dec
mov
stc
inc
loope
inc
out
pop
std
dec
jp
cmp
stc
adc
dec
clc
sahf
fs
int
jnp
mov
enter
loop
xrelease
mov
js
sti
mul
cli
outs
test
adc
cmp
cli
pop
sub
add
jg
jbe
lods
jmp
mov
imul
sbb
gs
push
xchg
mov
dec
(bad)
loop
add
movaps
(bad)
jmp
fidivr
stos
mov
lahf
nop
sysenter
inc
enter
sbb
pop
mov
push
arpl
rol
in
ins
ins
inc
xor
movs
push
inc
sahf
jmp
fild
mov
stos
pop
and
adc
hlt
xor
(bad)
jbe
test
jle
or
dec
pop
pop
pop
mov
push
call
cmp
retf
sahf
fdivr
push
xchg
js
(bad)
pusha
mov
daa
daa
and
rcr
mov
aas
imul
pop
add
jns
stc
add
hlt
cmp
mov
push
or
les
test
sbb
pop
sbb
inc
jns
adc
sbb
xchg
sub
inc
inc
aad
fcomp
mov
test
adc
mov
pop
int
dec
mov
jle
jo
jg
xor
lds
dec
imul
call
retf
sub
repnz
push
loop
lods
fmul
add
div
mov
ins
pop
push
test
and
jmp
push
out
and
inc
jnp
adc
fimul
or
cmp
add
(bad)
xor
jl
in
inc
aaa
out
int
das
fs
xor
adc
jo
inc
jle
(bad)
movs
jecxz
jg
cmp
enter
jmp
es
adc
mov
sub
in
mov
xor
jmp
mov
xchg
add
pusha
inc
xchg
addr16
jb
lock
leave
int
mov
mov
inc
jl
cmp
shl
xor
mov
jmp
movs
pop
retf
add
lods
sahf
pop
sbb
sub
popf
mov
xchg
and
and
mov
fimul
aas
cmp
adc
inc
or
xor
loope
dec
xchg
cld
ds
mov
icebp
pusha
pop
ins
imul
fisttp
les
fnstsw
ins
stos
push
dec
adc
dec
lea
jle
call
fisub
cld
xchg
addr16
add
retf
out
inc
xchg
ret
imul
push
pop
inc
cld
cli
retf
sub
and
cmps
mov
retf
push
loope
mov
sub
sub
mov
int
sbb
cmp
xor
xchg
test
sbb
or
rcr
xchg
pop
mov
cmp
pop
fdiv
fmul
xor
cmp
adc
xor
pop
mov
sbb
pop
push
(bad)
mov
sahf
fiadd
cld
shl
xor
xchg
jp
outs
xor
xor
(bad)
loopne
inc
movs
jns
mov
xchg
(bad)
mov
mov
fidivr
push
int3
and
mov
mov
mov
int
ret
jmp
xor
fxch
sti
enter
mov
push
test
pop
lds
mov
adc
stos
ficomp
scas
fst
clc
je
loop
cwde
lahf
dec
inc
dec
sub
xchg
add
jmp
push
xor
(bad)
gs
xor
mov
lods
jae
iret
mov
cmp
dec
fiadd
outs
inc
add
xchg
icebp
retf
je
xchg
out
mov
mov
call
lds
pop
jns
mov
test
iret
in
test
sub
and
sahf
mov
std
enter
shl
(bad)
mov
fbld
jns
in
dec
mov
test
js
inc
fnsave
lea
sbb
fsubp
ret
sbb
ins
jo
jb
xchg
sbb
call
retf
mov
adc
xor
fidivr
and
push
xor
and
js
ficomp
mov
pop
das
fst
jmp
cdq
js
inc
icebp
mov
or
leave
popa
jle
mov
mov
jbe
ret
cmp
popa
ret
jmp
(bad)
shl
xchg
out
push
(bad)
ffreep
mov
dec
xchg
jecxz
(bad)
movs
sbb
imul
mov
lock
cmp
xor
dec
imul
popf
xor
jno
adc
imul
popf
out
aas
or
stos
inc
xchg
xor
push
sub
or
push
xlat
push
movs
push
mov
sub
aad
aad
fwait
mov
cmc
jl
add
lods
xor
fwait
inc
pop
xchg
in
sub
jae
mov
xor
fld
popf
lods
test
sub
std
pop
pop
test
stos
push
daa
out
cmp
inc
aaa
pusha
xchg
fiadd
add
in
xor
and
mov
mov
jp
add
mov
out
cld
and
or
add
xor
mov
mov
(bad)
jmp
js
dec
or
sti
lods
ficom
add
int3
dec
pop
sbb
sti
and
out
cmp
leave
imul
imul
pop
psubd
xlat
cli
shl
rol
push
sbb
fisttp
sbb
jmp
faddp
call
adc
fisubr
or
nop
dec
imul
mov
pop
cmp
jb
hlt
and
cmp
add
scas
das
or
dec
pop
cmp
lahf
and
mov
cmps
pop
in
test
cmp
pop
out
xchg
lahf
pop
and
lods
rcr
jns
data16
mov
inc
mov
fs
and
test
je
call
ss
popa
sar
xor
xor
sub
push
dec
add
fucomip
and
shl
mov
call
xchg
nop
sbb
outs
mov
push
pop
arpl
leave
mov
sub
clc
dec
mov
and
inc
jmp
retf
mov
sti
popa
ins
add
push
test
aam
xchg
lock
cmp
dec
dec
in
jecxz
xchg
push
sbb
cs
in
ret
movlps
aad
jo
xor
scas
nop
cld
fild
into
lods
or
push
push
fild
mov
mov
mov
cs
daa
repnz
xor
fimul
test
push
(bad)
fcmovb
sti
test
cwde
sahf
xor
test
out
fist
or
or
sti
retf
push
adc
in
lea
in
sub
daa
xchg
xor
xchg
jns
jae
hlt
fs
ja
sbb
pop
mov
push
rol
in
jmp
mov
(bad)
stos
hlt
add
in
push
mov
or
mov
adc
cmp
mov
popf
rcr
sbb
and
in
ins
push
dec
mov
mov
aas
push
pop
daa
call
lea
sub
pop
lods
adc
gs
aam
imul
adc
stos
cmp
out
bound
mov
inc
mov
push
lahf
mov
push
(bad)
fmul
fs
jp
clc
mov
jbe
ret
ret
jae
sti
add
pushf
xchg
adc
mov
cld
jge
cld
imul
mov
jl
pop
pop
loopne
dec
pusha
sti
jbe
sub
mov
sub
ficom
push
lds
aaa
or
mov
xchg
pop
(bad)
shl
sar
or
xor
cld
or
fldcw
out
fs
cmp
or
cmps
iret
and
js
push
push
jmp
out
dec
in
scas
addr16
inc
add
sahf
fisub
mov
es
(bad)
ja
xor
jl
enter
icebp
retf
not
cld
cmp
(bad)
repnz
inc
gs
sbb
jo
push
ja
lahf
into
test
enter
fistp
imul
jp
jmp
pop
inc
fmul
adc
push
mov
mov
mov
jns
loopne
int
push
dec
sub
dec
aam
scas
mov
jmp
inc
out
pushf
inc
fnstsw
aad
mov
jecxz
in
arpl
pop
cmovne
dec
push
icebp
lds
arpl
cld
add
mov
clc
xor
cmc
ficomp
dec
shl
fwait
ins
push
inc
popf
ins
shl
ins
cmp
fst
sbb
int
push
push
mov
jo
popf
sub
or
stc
enter
test
mov
inc
add
(bad)
ss
sbb
pop
and
idiv
pop
or
mov
out
push
jmp
mov
sub
out
fdiv
stc
xchg
pushf
call
cmovp
add
sub
push
call
(bad)
(bad)
ror
add
test
sbb
mov
adc
fnsave
test
clc
push
fstp
sbb
cmp
pop
add
out
ret
xor
jmp
dec
icebp
mov
repz
daa
mov
dec
pop
mov
clc
jb
jno
push
jp
loopne
idiv
xchg
jmp
shl
mov
test
jne
push
adc
pop
push
mov
push
xchg
dec
rcr
call
sar
pop
mov
mov
cmp
sar
imul
mov
mov
jp
inc
scas
jmp
and
out
cdq
add
mov
test
or
mov
ffree
jmp
mov
xchg
adc
xor
rcr
repnz
ror
mov
scas
mov
dec
pusha
mov
mov
int
pop
call
stos
pop
or
movs
push
lods
xor
sub
jp
pop
pop
rol
stc
test
fwait
sahf
fsubr
in
adc
mov
out
jmp
iret
sbb
jp
jecxz
js
ja
test
ja
call
push
nop
inc
(bad)
push
movs
lods
rol
inc
push
es
push
shl
mov
jb
(bad)
cmp
add
aaa
dec
mov
adc
xchg
jp
xchg
pop
mov
jge
dec
and
pop
imul
call
fisttp
mov
dec
addr16
add
mov
clc
inc
sbb
mov
xor
call
fwait
sbb
cmp
jb
inc
mov
or
aam
mov
cmp
ret
push
sbb
icebp
jge
lahf
jge
mov
rcr
cmps
cmc
ret
imul
call
mov
daa
shl
mov
cmp
push
inc
push
aas
push
test
int3
lea
and
(bad)
jp
push
jecxz
inc
push
jae
xlat
fst
sbb
xchg
into
push
(bad)
or
or
or
fcom
dec
imul
mov
lahf
add
(bad)
icebp
push
aam
xor
int
pop
add
jne
sbb
ins
daa
jnp
xor
out
ret
pop
ret
aas
and
call
xchg
and
(bad)
jno
fdivr
xor
mov
add
or
push
das
cmp
and
xchg
jge
adc
lea
scas
inc
mov
dec
xor
jecxz
cmp
out
sub
add
mov
and
and
inc
(bad)
sbb
retf
adc
mov
in
or
xor
aam
jne
xchg
jmp
imul
stos
sub
push
push
outs
call
ficom
mov
cli
push
popfw
or
push
dec
add
xchg
xor
frstor
shr
push
xchg
inc
cmp
push
cli
pop
adc
jle
pop
in
icebp
rcl
into
push
or
sbb
clc
shl
call
sbb
idiv
jae
bound
mov
cmps
pop
adc
push
sub
mov
(bad)
rcr
push
or
shl
retf
repz
fisttp
adc
xchg
jmp
mov
iret
imul
bound
mov
ror
sti
cld
add
push
mov
mov
mov
xor
jmp
add
push
mov
div
inc
test
push
in
pop
cmps
retf
out
popa
sub
ins
xchg
mov
mov
dec
lods
xor
gs
xor
mov
sbb
xchg
sbb
add
ins
cdq
mov
fwait
pushf
cmp
movs
jae
add
sbb
movs
inc
mov
mov
mov
jne
lss
sbb
adc
lods
jae
call
icebp
and
pop
idiv
(bad)
(bad)
inc
stos
cmps
xchg
adc
pusha
or
popf
jecxz
jns
sub
sub
xchg
jb
out
pop
sbb
fdiv
mov
(bad)
mov
add
pop
and
jmp
mov
imul
arpl
mov
cmp
or
sbb
cdq
mov
aaa
mov
dec
jle
sub
inc
dec
lods
cmp
pop
rcr
jbe
das
cmp
xor
leave
loope
pop
fbld
les
push
xchg
pop
mov
pop
push
fidiv
sub
push
push
mov
int
ret
sbb
pop
sub
outs
pop
sbb
mov
jge
popf
test
in
add
push
cdq
inc
add
push
xor
or
loope
push
mov
(bad)
sub
popf
pushf
pop
fidiv
vcmppd
test
mov
aaa
mov
mov
or
push
xchg
cmp
jbe
adc
in
outs
repz
fsub
dec
mov
mov
bnd
push
fisubr
mov
(bad)
das
ds
dec
xlat
push
mov
cwde
dec
push
daa
fs
sbb
call
sti
ret
mov
ret
xor
xor
test
adc
mov
jg
inc
ss
mov
stc
(bad)
mov
ss
popf
jbe
cmp
cmp
test
stos
inc
in
and
adc
(bad)
xchg
fmul
(bad)
jnp
bndstx
push
repnz
sbb
cs
bound
nop
push
loope
push
xor
add
mov
or
out
rcl
and
inc
or
jb
popf
dec
xchg
jae
popa
add
cld
in
jnp
mov
mov
jb
or
js
jnp
add
loope
jmp
ins
loopne
ret
mov
jnp
xor
rol
data16
push
outs
lods
(bad)
pop
pop
cmp
add
cmp
int3
or
jns
or
lock
jmp
nop
out
inc
test
push
clc
mov
pop
dec
outs
(bad)
sub
dec
mov
xor
lods
push
push
stos
shl
inc
inc
cmp
cmps
in
or
retf
cmp
add
rol
test
cs
mov
jb
(bad)
lahf
sub
dec
add
ror
lods
dec
mov
fcomi
ja
xor
sbb
xchg
jp
pop
push
fucomi
loopne
xchg
sar
sahf
call
test
adc
sbb
rol
jae
enter
add
adc
sub
sbb
or
mov
into
sub
sbb
in
cli
and
or
xor
sub
push
mov
pop
call
mov
(bad)
aam
scas
loope
test
mov
(bad)
pop
cwde
sub
add
stc
xor
mov
mov
iret
out
rcr
sub
in
lods
push
xchg
mov
in
into
iret
daa
scas
jns
sub
mov
addr16
mov
fs
ja
push
xchg
mov
(bad)
aas
mov
cmp
or
loope
pop
arpl
mov
stos
call
clc
rcr
sbb
lods
bound
ins
test
adc
mov
in
xor
pop
out
fist
fld
idiv
cmp
adc
ja
sbb
inc
add
imul
mov
sbb
lods
aas
sbb
addr16
das
cmp
xor
daa
out
mov
push
std
fnstenv
mov
stos
call
or
nop
add
push
into
add
jo
cmc
loope
cmp
movs
(bad)
jmp
mov
xchg
(bad)
dec
adc
div
xchg
loopne
mov
sub
jne
mov
mov
push
mov
ror
addr16
outs
mov
ret
js
mov
call
inc
mov
pop
aad
xor
test
inc
adc
xor
cmp
lea
lods
ficomp
mov
popf
(bad)
sub
out
inc
es
jl
(bad)
inc
inc
out
pop
stos
jge
or
add
fmul
push
mov
fcmovne
pusha
lods
xchg
mov
jg
mov
push
rcl
or
stos
mov
repz
test
imul
xchg
jecxz
sahf
mov
movs
jle
sahf
sbb
push
push
aaa
cmps
test
movs
mov
sub
ins
pusha
inc
jo
sub
xor
dec
pmullw
xchg
stos
sbb
add
aaa
shl
pushfw
fwait
sub
jg
ins
outs
jmp
je
mov
or
enter
stos
test
icebp
not
and
inc
inc
mov
movs
add
adc
push
cmp
and
pop
lock
add
aad
in
mov
jbe
mov
adc
repz
adc
mov
stos
sub
ret
xor
sub
or
cs
mov
push
in
xor
or
fst
adc
mov
mov
xchg
sti
fcom
int3
jmp
ret
dec
aas
sar
js
jne
jo
movs
xor
std
cli
mov
adc
movlhps
daa
mov
sub
(bad)
ficomp
shl
lahf
popa
in
jnp
xchg
mov
aas
jl
push
xchg
pop
xchg
xor
js
push
aam
inc
fnstenv
mov
mov
dec
jecxz
cmps
push
bound
cdq
mov
xor
jp
add
nop
sub
(bad)
into
push
ret
xchg
data16
dec
mov
bound
loopne
cs
cld
dec
retf
pop
add
stos
mov
ret
dec
fwait
mov
mov
cmps
bound
fs
call
add
dec
iret
clc
dec
out
pop
shl
inc
pop
mov
mov
das
enter
xchg
xchg
push
cmp
pop
inc
jecxz
sbb
mov
sbb
test
jb
cmp
xor
pop
jne
out
out
mov
add
pop
dec
daa
push
push
(bad)
sbb
test
int
fidivr
lods
fwait
and
into
sbb
sub
int3
ins
jg
aaa
pop
nop
inc
cmps
in
and
and
sar
inc
repz
mov
add
sub
xchg
sbb
enter
lods
pop
fld
xlat
adc
mov
pop
leave
iret
mov
push
jg
or
lods
loope
(bad)
push
jnp
xchg
test
sub
enter
lods
xchg
lods
fisttp
ret
stos
push
aaa
ss
cmp
dec
cmp
cmp
mov
xor
mov
test
call
jbe
in
sbb
xchg
(bad)
push
je
int
call
or
push
in
mov
(bad)
ss
push
or
xor
jp
push
mov
dec
push
(bad)
adc
aaa
fcomp
es
loope
xchg
into
ins
sub
cmp
ins
les
aaa
jno
imul
daa
dec
push
pusha
and
xchg
xchg
jae
xchg
mov
or
xchg
lahf
out
shr
(bad)
mov
inc
adc
cmp
pop
(bad)
xchg
xchg
push
mov
cs
mov
lods
and
xchg
pop
xchg
outs
ins
push
pop
push
push
ja
jne
push
or
xor
into
dec
ins
push
jbe
iret
mov
push
add
inc
in
loop
fistp
mov
dec
pop
repz
jle
push
das
push
aaa
std
pop
gs
outs
fwait
push
push
pop
test
hlt
inc
xor
and
popf
mov
ret
idiv
(bad)
mov
(bad)
idiv
pushf
or
imul
inc
call
in
lahf
call
jnp
xchg
xchg
int
sub
sti
jp
(bad)
cs
sahf
adc
sti
movs
jae
sbb
pop
or
out
aad
or
cmp
sub
and
iret
add
call
js
loopne
test
pop
mov
mov
test
scas
test
jp
fldcw
out
add
jbe
cmps
cmp
jae
outs
adc
xor
test
fs
add
mov
dec
cmovb
mov
dec
mov
pop
jp
jl
cwde
mov
fsub
xchg
cmp
cli
dec
fst
xchg
ret
movs
xchg
cmp
mov
mov
jno
push
jl
movs
or
dec
sub
pop
or
iret
cs
pop
pop
xor
ret
in
sub
ficom
test
test
lods
nop
mov
pop
in
pop
shl
data16
sbb
jg
in
arpl
scas
add
(bad)
sub
inc
shl
fistp
icebp
mov
outs
mov
leave
cld
hlt
sti
inc
inc
or
fucomip
int
stos
ror
jne
fistp
inc
inc
push
xlat
mov
movs
adc
sub
jmp
(bad)
or
bnd
pop
dec
call
and
mov
jb
or
jo
adc
pop
push
stc
popf
ds
pop
cdq
cmps
mov
(bad)
outs
movs
and
mov
mov
and
fistp
mov
pop
or
out
inc
xchg
outs
fidiv
sub
stc
ins
loop
dec
jmp
in
ja
ss
mov
pusha
bound
jmp
adc
sub
sbb
mov
mov
mov
xchg
pop
or
sbb
movs
arpl
stos
pusha
mov
and
adc
mov
mov
arpl
push
xor
jg
sahf
cmp
es
jp
das
sub
ret
adc
inc
xor
dec
fs
pop
cmp
pusha
push
test
or
mov
xchg
jmp
stos
pop
and
neg
xchg
mov
imul
sub
test
test
call
cwde
push
and
sub
jge
ds
push
stos
arpl
push
fwait
mov
cmps
mov
sub
inc
ins
frstor
sbb
(bad)
jmp
mov
out
das
cmp
push
loopne
pop
retf
xor
out
call
or
in
dec
sbb
lds
pop
cmp
scas
lock
cld
out
push
(bad)
jl
lahf
fisttp
ffree
(bad)
adc
in
mov
dec
icebp
mov
sub
jp
dec
jno
call
inc
or
sahf
movs
push
adc
dec
xchg
fwait
stos
push
ds
adc
leave
rol
mov
mov
jecxz
and
retf
sbb
mov
cmps
pop
int3
and
or
lea
jb
mov
stc
loop
retf
nop
cld
addr16
or
(bad)
les
cmp
cmp
push
not
call
cli
mov
pop
test
sbb
mov
stc
cmp
mov
cmp
jp
xor
xchg
stos
xlat
(bad)
push
sbb
mov
enter
pop
sub
push
push
icebp
aas
jmp
mov
out
std
rol
cs
cmp
test
xor
jge
(bad)
cmps
jb
addr16
and
out
add
mov
sar
pop
div
add
and
jmp
mov
xchg
or
cmp
mov
sar
pop
out
mov
mov
pusha
dec
jle
jae
pop
test
int
outs
cmp
dec
dec
fwait
sbb
and
mov
aam
shl
mov
loop
(bad)
stc
mov
shl
in
inc
mov
xchg
scas
or
int
test
call
in
xlat
add
sahf
and
add
sbb
stc
pop
jg
(bad)
jg
es
inc
ret
cmp
mov
test
mov
int
retf
pop
jp
jmp
or
cmp
and
sahf
es
sti
dec
movs
pop
pop
ins
sub
cmp
imul
sti
rcr
loope
les
sub
pop
aad
fs
mov
js
dec
cs
mov
fisttp
fcomp
cmp
pusha
stos
enter
daa
popf
inc
rol
mov
adc
dec
cmp
out
inc
push
fisttp
add
push
pushf
mov
aad
mov
arpl
int
repnz
enter
push
les
mov
push
test
bound
cwde
cdq
fstp
movs
jle
ins
daa
pushf
shl
call
(bad)
fcom
stos
ret
pop
loope
xchg
js
xchg
mov
fistp
or
enter
adc
out
(bad)
or
mov
push
popa
sti
sub
movs
fndisi(8087
loopne
and
mov
dec
ret
push
shl
jmp
and
mov
adc
clc
mov
xchg
(bad)
(bad)
jbe
xor
and
dec
movs
sub
fbld
dec
popa
imul
push
jle
icebp
mov
fisttp
sub
push
jne
adc
xchg
and
xor
push
dec
and
mov
repnz
je
and
add
dec
mov
scas
je
fidivr
sub
mov
leave
push
call
aaa
mov
sbb
rol
inc
xor
xchg
jmp
pop
fsubr
les
pushf
xor
jp
mov
xchg
jp
xchg
ret
adc
out
push
lea
mov
icebp
test
adc
(bad)
push
jmp
and
in
and
or
std
add
idiv
mov
cdq
mov
mov
xor
mov
loopne
mov
push
dec
lea
(bad)
dec
gs
push
stos
gs
out
fcom
xchg
out
retf
lods
or
push
or
(bad)
pop
mov
inc
mov
xchg
jno
ja
push
pop
add
lods
inc
stos
cli
dec
mov
xchg
mov
xchg
mov
movs
mov
(bad)
jp
mov
dec
aas
add
lods
and
fisttp
aad
mov
div
call
(bad)
and
arpl
rol
pop
(bad)
(bad)
xchg
movs
push
out
cs
add
or
loop
das
test
aas
rol
mov
jmp
fstp
repz
iret
jecxz
inc
rol
idiv
loope
mov
das
(bad)
push
adc
dec
jge
popa
retf
jge
sub
cmp
test
push
call
out
cmp
cmps
adc
or
mov
repz
pop
aaa
(bad)
rol
test
xchg
leave
int
jb
mov
imul
(bad)
cmps
pop
iret
stc
jl
cdq
push
cmps
mov
mov
stos
or
mov
mov
and
sbb
ja
cdq
jne
jle
pop
mov
sub
das
retf
or
add
xchg
jg
enter
scas
mov
test
pop
jecxz
jmp
xchg
push
sub
xor
cmp
maskmovq
imul
repnz
ss
call
dec
adc
nop
cmp
or
pop
add
mov
retf
push
dec
adc
mov
gs
sub
test
daa
out
push
hlt
(bad)
cmps
push
fs
fimul
lea
adc
pop
test
adc
scas
and
and
bound
outs
xchg
das
cdq
call
rol
jg
add
mov
scas
xor
jecxz
loope
or
loopne
pop
and
push
mov
daa
imul
call
aam
add
mov
or
mov
mov
xchg
(bad)
xcrypt-cfb
cmps
loop
pop
gs
mov
jge
and
cmp
add
sub
cld
jb
xchg
test
gs
cli
out
fwait
or
mov
add
jmp
ret
js
jae
mov
outs
pop
sub
cli
mov
pushf
call
push
fwait
push
xlat
out
test
aaa
enter
or
mov
jge
cs
lods
jmp
push
mov
push
pusha
(bad)
call
xchg
adc
jg
push
push
ret
lods
loop
iret
scas
movs
in
int3
mov
rol
lock
loop
stos
dec
sub
bound
sub
aas
jle
(bad)
movs
mov
in
fs
jl
sbb
dec
movs
daa
jg
or
and
jb
or
jmp
gs
mov
inc
push
mov
inc
and
pusha
test
push
sub
in
ins
mov
out
shr
dec
idiv
jnp
pop
cdq
cmp
cmps
(bad)
shr
sbb
inc
das
clc
xor
repz
in
les
nop
cmp
fwait
mov
cmp
icebp
dec
push
dec
call
(bad)
mov
retf
push
mov
jae
and
jge
add
adc
sbb
cmp
jecxz
xor
adc
xor
sar
mov
jno
sub
hlt
je
jns
mov
ins
inc
(bad)
mov
(bad)
push
(bad)
xchg
pushf
mov
mov
push
retf
jno
push
jo
or
cli
mov
sets
ss
cmp
adc
dec
xor
aad
dec
test
sub
add
add
(bad)
jb
fwait
mov
test
jae
jae
lock
ror
leave
adc
test
inc
push
adc
out
jae
int3
dec
in
aam
sbb
fwait
(bad)
stc
jmp
or
nop
add
xchg
xor
sar
(bad)
sbb
and
sbb
scas
sahf
rol
out
dec
js
mov
ss
fwait
cmp
aas
jo
aam
xor
jg
stos
cwde
aad
xchg
jmp
xor
push
pop
lods
in
pop
shl
icebp
mov
adc
jp
mul
jle
cmp
or
cmp
push
inc
arpl
shl
adc
jl
mov
mov
je
icebp
(bad)
or
mov
enter
out
inc
scas
lds
mov
nop
adc
sub
inc
ja
or
inc
adc
in
fwait
sub
lea
adc
fidiv
pusha
xchg
mov
cwde
in
shr
neg
call
or
jmp
mov
test
sbb
inc
push
pop
addr16
clc
mov
aad
fnstsw
(bad)
pop
test
inc
xchg
out
inc
sbb
jnp
je
aaa
or
aam
push
fstp
cmp
push
test
push
lahf
out
sub
jno
(bad)
scas
int
out
jl
mov
push
xchg
lods
and
sub
movs
lock
aam
call
inc
fistp
aaa
lea
repnz
or
cmp
imul
fisttp
(bad)
xchg
in
jbe
add
cmp
aad
mov
adc
xchg
cwde
inc
xchg
out
mov
xor
lods
xchg
scas
xchg
ror
jge
(bad)
mov
sub
pop
adc
pop
lods
dec
popf
sbb
ins
into
int
out
mov
imul
stos
push
pusha
push
iret
mov
xchg
mov
test
push
in
push
push
cld
icebp
leave
jb
add
imul
in
jge
xor
pop
fmul
mov
cmp
push
push
in
jb
adc
mov
jns
loope
repz
movs
inc
lods
(bad)
(bad)
cli
xor
dec
add
or
fwait
xor
jp
mov
test
sub
jne
leave
cmc
xchg
mov
enter
leave
mov
loop
cdq
sub
mov
scas
push
push
push
xor
or
sar
push
xor
mov
jmp
push
repz
xor
mov
std
and
and
lahf
xor
or
stc
inc
icebp
pop
inc
jns
pop
jb
ja
mov
test
lods
stc
push
and
rcr
lods
(bad)
jge
fwait
and
in
xor
scas
nop
pop
cli
pop
mov
ror
mov
(bad)
sub
imul
popa
(bad)
jmp
or
fsubr
jmp
mov
inc
jmp
pop
or
int
push
and
jl
test
sbb
fist
push
lock
sbb
es
out
ja
mov
adc
mov
mov
fldcw
inc
movs
push
(bad)
outs
fsubp
in
adc
mov
cmp
cmc
js
ret
movs
xchg
iret
ja
sub
stc
adc
es
xchg
mov
xchg
(bad)
jmp
into
popw
shr
jmp
add
paddusb
out
pop
mov
xor
pop
add
push
(bad)
sti
test
mov
shl
out
scas
xchg
dec
scas
sbb
pop
repnz
push
out
jmp
push
pop
jl
dec
xor
out
rol
xchg
in
sbb
(bad)
std
(bad)
inc
bound
inc
into
outs
nop
or
cmp
mov
nop
pminsw
dec
std
call
cs
dec
fwait
xchg
fnstcw
ret
dec
sbb
or
add
pusha
mov
mov
xchg
test
sub
arpl
ins
xchg
dec
(bad)
mov
mov
cmps
jns
and
test
inc
push
repz
dec
repz
mov
and
xchg
mov
fs
sbb
and
enter
sub
not
jbe
loope
mov
xor
ror
retf
fistp
aam
cmps
mov
or
pavgb
test
push
push
sub
jae
or
inc
fsub
nop
pop
push
xor
mov
mov
out
and
dec
mov
inc
and
mov
ret
test
pop
data16
ds
pushw
imul
and
and
cld
nop
fsubr
(bad)
cmps
dec
xlat
bound
call
shl
inc
sub
pop
test
mov
rcr
aad
imul
dec
repz
add
dec
sbb
add
out
loopne
pop
iret
ret
and
mov
js
ret
gs
stos
sti
xchg
and
je
push
pop
call
nop
popa
cmps
pop
add
xchg
pop
inc
jns
or
aam
out
push
out
leave
test
adc
mov
and
xchg
outs
pop
leave
xor
and
add
mov
adc
jns
xor
or
push
pop
pop
add
push
mov
push
sbb
icebp
cmp
test
jp
adc
lock
jp
add
add
fmulp
retf
jb
push
mov
cmp
gs
test
rdpmc
int3
jle
add
add
outs
out
xchg
push
test
or
push
adc
fwait
outs
movs
cmp
aad
aam
(bad)
in
fisttp
data16
add
repz
or
sub
pop
shr
ret
addr16
sub
add
fs
or
cmp
retf
test
push
jb
std
sbb
ret
cs
adc
mov
xchg
sar
mov
mov
jg
pop
jae
pop
pop
inc
in
or
and
call
fiadd
cmp
inc
sub
fldenv
fcomp
mov
in
or
test
div
in
jno
ret
repz
movs
jns
repz
inc
mov
pop
push
les
mov
ja
inc
sar
inc
gs
nop
jnp
lock
shl
or
ror
ror
xor
mov
pop
cmps
shl
sbb
sub
xchg
sbb
jge
in
push
mov
lods
mov
mov
fild
jle
out
iret
stos
mov
sti
push
call
shr
inc
icebp
or
push
hlt
or
cs
ja
mov
mov
xchg
pop
mov
cmp
sbb
lods
cmp
(bad)
shl
mov
add
mov
mov
push
and
out
fwait
ds
adc
sbb
retf
add
call
cmps
out
scas
xchg
ret
test
xor
sub
lds
sbb
out
clc
pop
fucomi
push
or
pop
ror
(bad)
or
test
jo
fdivr
and
jmp
clc
bnd
dec
into
psrlq
cmp
add
pop
into
pop
fistp
push
into
popf
sub
jbe
ret
xor
mov
xor
cmp
xchg
xor
adc
in
lea
jmp
sbb
aam
call
mov
clc
sahf
ficomp
xor
jmp
data16
cmp
push
add
(bad)
stos
sub
mov
int3
mov
pusha
fwait
test
cwde
sbb
jl
popa
and
in
in
inc
or
imul
pusha
mov
loope
xchg
cmps
jne
and
(bad)
inc
pop
dec
dec
push
cmps
aam
xchg
js
imul
inc
or
sbb
pop
sbb
lods
pushf
fisttp
repz
sub
dec
lahf
jo
rcl
sbb
repnz
cmps
pop
jge
push
add
popf
and
(bad)
mov
popa
retf
xor
cmps
loope
xor
jl
push
mov
iret
imul
adc
das
jp
pop
xor
xchg
or
dec
ffreep
into
push
outs
lds
inc
xor
fisub
movs
shl
mov
sub
dec
scas
dec
mov
les
jmp
pop
sub
dec
inc
add
push
sbb
loopne
xchg
mov
push
inc
stos
mov
lods
out
add
clc
iret
in
sub
cmp
sub
out
in
sbb
repz
pop
loope
push
cmps
push
mov
mov
xlat
or
and
push
mov
clc
or
add
dec
pop
cdq
call
mov
adc
pop
das
jnp
mov
(bad)
pushf
inc
add
fiadd
(bad)
dec
and
dec
adc
dec
fistp
in
jge
in
mov
mul
xchg
jbe
mov
inc
push
jo
fmul
setp
rcr
or
in
test
jo
mov
inc
ret
mov
pop
lock
jns
fdivr
add
fld
mov
leave
cwde
xor
xchg
in
sbb
push
push
push
dec
and
adc
pop
enter
mov
xchg
and
(bad)
retf
mov
rcl
(bad)
cmc
sbb
test
dec
mov
adc
fucom
mov
and
pop
popf
test
(bad)
adc
mov
xchg
aam
pop
mov
jge
pop
cmc
aad
pop
mov
setb
std
fsub
sbb
arpl
adc
(bad)
in
or
mov
sti
pop
and
and
and
stos
cmp
pusha
dec
imul
test
fbstp
out
cmove
es
and
dec
push
clc
dec
into
mov
sbb
xor
inc
(bad)
cmp
movs
frstor
int3
xor
outs
mov
fsubr
fnstsw
loop
add
fwait
call
call
hlt
fidivr
pop
jl
fcom
cmp
adc
imul
mov
sbb
test
mov
fcmovnb
shl
mov
xchg
jne
scas
(bad)
fisttp
add
jg
sbb
push
or
push
dec
cmc
pop
add
out
stc
stos
pop
aas
push
mov
test
lods
aam
push
pop
ins
sbb
mov
xor
aas
mov
movs
lds
cmc
adc
and
pop
sbb
sub
ins
cmp
gs
sbb
dec
cmp
jo
out
adc
mov
pop
push
pop
mov
mov
jae
std
jmp
mov
jns
sahf
ret
or
cmp
mov
push
xor
fild
call
jns
pop
mov
frstor
mov
sub
outs
add
ins
inc
dec
pop
mov
sbb
push
ficom
inc
add
lahf
dec
js
and
fs
jl
and
les
push
popf
dec
ret
out
ins
mov
mov
push
inc
pop
adc
shl
cli
sbb
push
dec
(bad)
hlt
inc
mov
mov
movs
xchg
or
mov
and
(bad)
ffree
jbe
lods
imul
aas
icebp
jne
ds
enter
jmp
push
adc
in
sahf
lds
sub
sahf
fs
jge
lea
dec
lock
(bad)
addr16
sbb
cmc
pop
xchg
cmp
jle
jo
sbb
in
mov
mov
lods
dec
les
neg
ss
fdivr
shl
add
jmp
hlt
mov
jae
cmps
out
imul
mov
push
lahf
mov
(bad)
jmp
pop
repz
cmp
cld
cmp
jo
aaa
and
stos
popa
lahf
sbb
or
cmps
rcr
cwde
jp
jmp
xor
loopne
mov
xor
lahf
mov
popa
inc
xor
mov
and
inc
push
mov
enter
push
mov
icebp
retf
inc
cmps
lea
xor
adc
mov
adc
scas
xchg
pop
add
pop
push
mov
in
mov
movs
call
dec
xchg
ins
shl
sbb
sti
or
jbe
jmp
inc
pop
iret
pop
or
inc
xchg
nop
inc
add
cmps
mov
and
rol
inc
scas
(bad)
adc
int
sar
mov
outs
das
jmp
sar
mov
icebp
sti
inc
rcr
dec
push
push
cmp
push
ret
jecxz
or
cmp
adc
xbegin
retf
add
int
inc
pop
into
out
inc
das
pop
sbb
xchg
ja
sbb
in
adc
addr16
in
pushf
push
sub
xchg
mov
fld
push
jp
or
sub
sbb
mov
aad
pusha
jg
sbb
mov
sub
xchg
mov
xor
pop
stos
and
inc
imul
shl
leave
lods
ror
pop
xchg
and
daa
sub
add
scas
test
retf
sbb
neg
repnz
cli
enter
fld
out
imul
cmp
fsub
jb
jmp
mov
stos
pop
add
cmp
and
and
add
mov
sar
ja
rol
pushf
jae
ss
ror
push
ret
in
fwait
rol
movs
lock
mov
mov
mov
and
aaa
xchg
outs
pcmpeqd
out
jb
loopne
adc
pop
mov
je
jg
cmp
jns
imul
sbb
movs
mov
add
lea
lds
jle
out
mov
addr16
popa
or
pop
fbld
push
aas
xchg
aas
xchg
jno
neg
ret
xchg
shl
clc
cli
and
jecxz
lods
sbb
dec
ds
jmp
icebp
sbb
fisub
push
sbb
jge
imul
fisttp
xchg
in
ss
call
adc
fadd
aas
xchg
adc
call
jle
xor
pop
sbb
pop
imul
pop
cmps
xor
sbb
push
jmp
test
inc
sbb
mov
daa
add
lods
pop
idiv
(bad)
fimul
call
outs
movs
es
and
(bad)
mov
push
(bad)
xchg
push
scas
stos
mov
popf
adc
(bad)
jo
and
push
test
jg
ja
(bad)
jecxz
sbb
dec
or
inc
lds
shl
arpl
xchg
cs
in
dec
mov
xchg
in
mov
sub
and
stos
jmp
mov
les
ds
in
mov
nop
dec
fdivr
nop
imul
add
loopne
ja
dec
xor
jnp
movs
adc
outs
retf
cli
mov
dec
push
fidiv
nop
in
or
rol
cld
dec
jle
mov
and
pop
retf
mov
fcomip
cmp
mov
inc
mov
jmp
clc
sub
imul
xor
pop
test
shl
add
sti
xchg
fs
mov
(bad)
test
jecxz
push
test
mov
push
jb
inc
lock
clc
rcr
nop
add
mov
adc
mov
das
pop
test
ds
lods
mov
in
fistp
xor
mov
inc
inc
out
push
je
inc
mov
popa
adc
ins
(bad)
fst
jge
ins
jo
xchg
pop
push
fadd
inc
lea
mov
ds
jmp
push
inc
push
xchg
fsub
jecxz
in
push
fs
mov
xor
fcom
push
jp
call
outs
push
xlat
sub
(bad)
movs
ins
in
nop
adc
mov
push
mov
pop
outs
loope
push
lods
fild
dec
fs
bound
popf
jns
dec
ja
xor
jnp
sahf
cmp
cmc
lods
mov
ret
inc
inc
inc
iret
cs
push
push
int
mov
dec
cdq
movs
push
push
ret
jno
ret
xor
jmp
adc
out
mov
mov
xchg
jbe
iret
adc
fldenv
fisub
inc
sbb
adc
mov
cs
inc
aam
inc
cmp
or
outs
xor
call
jne
mov
or
push
mov
popf
cmp
fnstsw
lods
pop
clc
int3
std
lahf
xchg
mov
jmp
mov
movs
arpl
jbe
adc
cmp
and
ror
movs
adc
add
sub
adc
out
imul
or
pop
out
(bad)
or
sub
pop
push
add
sub
outs
mov
inc
push
icebp
cmps
lods
arpl
and
pop
push
push
and
mov
mov
or
xor
mov
mov
push
xchg
aam
scas
out
int
or
adc
mov
dec
fst
cmp
sti
ss
repz
scas
addr16
jbe
dec
sub
mov
mov
sbb
and
sbb
int3
outs
call
cmp
in
mov
test
cmp
mov
cmc
ror
repz
cmp
sbb
mov
xor
in
in
loop
imul
mov
hlt
jae
gs
mov
stos
stos
ret
mov
ficom
lods
sub
mov
test
aad
jp
mov
adc
add
retf
popa
scas
and
aas
pushf
xchg
pushf
cmp
push
dec
pop
cdq
ret
cmp
ins
pop
mov
jmp
les
cdq
lea
outs
jne
or
pop
mov
ja
mov
sub
and
je
sub
fistp
jno
sub
sbb
repnz
jnp
daa
nop
aam
rol
xchg
dec
(bad)
pop
xchg
push
aaa
mov
(bad)
stc
aas
sbb
push
pop
sub
pusha
add
push
xchg
imul
addr16
add
xor
cmc
cdq
(bad)
dec
dec
clc
loope
test
pop
cdq
and
dec
push
daa
aas
test
sahf
mov
mov
mov
fs
mov
int
inc
inc
jecxz
out
movs
pusha
ins
or
aaa
ins
and
adc
mov
xor
jne
inc
adc
mov
stos
jmp
dec
dec
loopne
cmp
xchg
adc
imul
lds
imul
in
shl
jmp
dec
pushf
xor
inc
mul
jnp
pop
popa
ss
sub
gs
fimul
push
les
pop
ret
sbb
std
inc
or
loop
jo
xlat
clc
dec
push
xchg
ins
push
inc
mov
ja
sbb
repnz
mov
pop
sub
nop
pop
push
xor
pop
inc
add
int3
stos
xor
imul
rol
scas
stc
icebp
mov
adc
jmp
movs
fnsave
(bad)
int3
add
sbb
mov
loopne
int
movs
push
daa
adc
sbb
cmp
fistp
retf
imul
pop
or
mov
and
mov
pop
pop
mov
fistp
mov
fwait
push
mov
loop
icebp
dec
pop
in
dec
(bad)
outs
lock
jle
adc
(bad)
cdq
imul
sub
or
mov
clc
and
inc
ror
fisub
scas
je
mov
sub
mov
adc
daa
imul
sub
push
call
loopne
xchg
jmp
mov
sbb
imul
gs
into
jg
sbb
jl
mov
jno
sbb
mov
ret
push
xlat
movs
sbb
and
cmps
sti
je
(bad)
jg
stc
inc
mov
ins
mul
mov
loope
mov
mov
out
xor
jbe
(bad)
sub
mov
das
bound
push
mov
sbb
icebp
inc
mov
inc
push
loop
add
cwde
push
mov
ret
dec
retf
jmp
js
push
push
pop
jae
ins
ins
pop
dec
inc
push
cdq
cwde
or
xlat
cdq
mov
add
aaa
jl
fsubrp
and
outs
ins
sub
(bad)
bound
inc
mov
dec
(bad)
cli
inc
adc
sbb
xchg
sbb
push
enter
push
icebp
shl
pop
mov
dec
shr
fwait
test
dec
xchg
sub
fidiv
mov
xor
aam
push
pusha
xchg
lods
xchg
adc
fld
unpcklps
add
aas
mov
dec
mov
jg
adc
scas
adc
adc
repnz
sub
inc
and
cmp
push
push
inc
push
cmps
adc
ins
sbb
mov
leave
or
mov
and
cs
jl
shr
dec
push
fs
fld
aam
lods
dec
out
mov
mov
add
out
jecxz
inc
xchg
push
pop
imul
fnsave
mov
and
mov
jle
push
cmp
xor
sbb
jne
cmps
or
stc
jmp
aaa
ins
popf
leave
mov
gs
sub
(bad)
test
iret
fmul
mov
mov
mov
retf
cli
push
sbb
ins
xchg
inc
fdivr
or
loope
xchg
out
jecxz
dec
dec
iret
mov
jp
pop
mov
inc
inc
dec
movs
xor
(bad)
jg
jg
fdivrp
stos
cmc
rcr
sub
ret
dec
aad
int3
mov
pusha
mov
loope
xor
mov
jnp
adc
push
mov
dec
and
retf
jge
adc
and
pop
dec
pop
inc
adc
jmp
push
mov
(bad)
aam
test
stc
push
movs
stc
cld
imul
xor
cs
repz
std
outs
mov
mov
repz
jge
enter
fwait
xor
cmps
mov
mov
xchg
scas
xor
popf
cmc
les
out
or
dec
retf
mov
sahf
cmps
mov
and
add
or
daa
xchg
or
inc
pushf
aad
fcomp
int3
rcr
aas
dec
jns
jb
fnsave
enter
out
(bad)
aad
test
jo
and
mov
add
mov
jmp
jg
in
push
xchg
int
out
test
in
mov
vunpckhpd
dec
jae
out
(bad)
int
ins
push
jge
jbe
adc
pop
rcl
lds
das
sbb
ret
dec
gs
aam
mov
sbb
ret
popf
out
imul
inc
or
mov
mov
mov
jae
jmp
mov
mov
adc
push
mov
test
cmc
mov
mov
jns
jp
xchg
outs
inc
int
and
mov
adc
sub
dec
sub
sub
jo
jns
sbb
fidivr
push
sub
xchg
dec
bound
divps
sub
sahf
add
leave
mov
pop
rol
jg
mov
pop
cmc
pop
nop
rol
add
in
dec
retf
or
push
lea
(bad)
in
inc
bound
out
leave
call
dec
shl
es
jbe
loopne
xlat
sbb
aaa
sub
and
loop
in
daa
or
adc
ins
lock
pop
jecxz
pop
dec
outs
dec
mov
or
mov
retf
inc
jl
outs
stc
inc
movs
mov
int
stc
mov
hlt
bts
sub
sub
addr16
ds
lods
cwde
fmul
sbb
push
pop
cs
in
popf
mov
adc
dec
iret
int
fs
into
add
xchg
mov
hlt
adc
dec
add
xchg
mov
icebp
jo
cwde
or
icebp
inc
xchg
pop
or
fcmovnu
mov
inc
inc
mov
fld
push
loope
fcomip
xor
jno
adc
lahf
cmps
jg
cmc
jge
movs
dec
cld
sbb
imul
push
int
ins
ds
add
inc
leave
out
pop
and
daa
inc
rol
in
sbb
and
rol
mov
jbe
jnp
test
nop
fnstsw
leave
pop
mov
push
xchg
(bad)
(bad)
xor
mov
test
jge
arpl
and
ins
mov
and
dec
xchg
adc
sti
push
inc
xchg
mov
(bad)
mov
sub
sub
out
pop
out
xor
rol
add
push
icebp
movs
or
cdq
dec
bound
cwde
cdq
(bad)
mov
dec
bound
jmp
jecxz
mov
cdq
ror
out
(bad)
test
adc
ja
cld
cmp
mov
adc
sbb
adc
outs
aad
imul
dec
xor
in
jmp
imul
push
xor
inc
adc
jo
mov
cld
dec
cwde
ja
cmps
ins
neg
enter
xchg
add
mov
scas
arpl
(bad)
sbb
iret
lahf
lahf
dec
pop
jge
jg
popf
das
pop
in
sti
mov
cmc
ins
psubw
xor
inc
mov
sub
adc
inc
sub
push
call
adc
or
jg
mov
ret
test
data16
or
xlat
pop
cmps
out
scas
push
neg
sub
je
mov
or
(bad)
sbb
xchg
int
(bad)
fnstcw
mov
ins
sub
sbb
mov
xchg
retf
xchg
lds
mov
std
push
jmp
dec
dec
das
adc
(bad)
cmps
jle
cld
xchg
aad
stc
pop
jg
mov
mov
rcl
sub
sti
lds
mov
imul
ror
lds
mov
sub
stos
xchg
dec
push
xor
sahf
retf
jb
lods
cmp
pop
inc
adc
jle
pusha
repz
iret
add
(bad)
dec
in
inc
mov
add
ins
fnsave
pop
aas
pop
test
or
inc
enter
aad
jns
imul
mov
cmps
jne
fisttp
test
xor
xchg
jl
imul
pop
retf
loopne
addr16
ret
stos
cmp
gs
xor
popa
jge
push
mov
(bad)
jmp
fs
xlat
arpl
hlt
mov
aam
jl
sbb
cli
sbb
sbb
fs
push
adc
call
and
addr16
dec
cmps
add
int
sbb
jnp
push
or
outs
jl
jnp
xchg
mov
push
jo
gs
retf
adc
xchg
bound
frstor
(bad)
daa
ror
(bad)
ins
sbb
pop
push
call
pop
dec
scas
mov
push
rol
cmp
retf
xchg
xor
lods
in
or
push
mov
xor
fdivr
lock
jg
out
xor
test
xchg
std
jg
mov
dec
dec
ds
jmp
les
inc
shr
retf
push
pop
repnz
popf
inc
test
xchg
leave
arpl
mov
cmp
inc
sub
sbb
sub
pushf
pop
pop
std
jg
mov
das
lods
pop
pop
adc
push
je
xor
cmc
pop
popf
and
mov
or
stos
loopne
and
mov
sbb
inc
mov
jecxz
test
and
mov
pusha
int
dec
push
xor
xchg
cld
sub
inc
sbb
dec
sbb
fcom
movs
mov
jmp
ror
mov
test
xor
sub
movs
jne
xor
lods
mov
loopne
call
jle
mov
pop
(bad)
push
and
mov
ds
test
pushf
jmp
into
outs
inc
xchg
outs
movs
inc
dec
push
inc
mov
ror
nop
nop
adc
mov
in
xchg
(bad)
inc
jecxz
mov
(bad)
clc
movs
fldpi
mov
push
scas
imul
fistp
stos
pop
xchg
xchg
xor
mov
pop
into
rol
fld
dec
jge
int
dec
stos
cmp
mov
mov
(bad)
call
shl
or
stos
test
(bad)
in
push
es
dec
dec
xchg
ret
jecxz
fadd
mov
mov
out
fdivr
push
loopne
loopne
mov
outs
(bad)
fcmovb
jno
mul
aad
ds
popf
jb
xchg
jp
push
xchg
mov
push
mov
retf
mov
lahf
or
fwait
jmp
cmp
popa
add
cs
xchg
mov
int
in
inc
sub
mov
sbb
jbe
cmp
xor
dec
idiv
jmp
ins
fwait
dec
test
and
jp
push
ret
adc
aas
jnp
adc
cmps
paddusb
dec
and
cs
stos
je
ficom
jle
mov
adc
inc
pushf
nop
outs
pop
fldcw
adc
fs
repnz
jns
jge
xor
cmp
std
sahf
xor
(bad)
test
jl
scas
popa
xlat
xchg
shr
xchg
sub
jmp
call
lea
push
bound
arpl
mov
xor
out
cs
jae
dec
ret
ss
mov
and
lods
sbb
retf
(bad)
mov
ss
xchg
mov
inc
pushf
fs
fidiv
xchg
in
dec
test
add
push
std
out
hlt
nop
add
fidivr
push
retf
sbb
add
idiv
push
dec
cmc
mov
add
sub
aas
add
repnz
sbb
xchg
jae
(bad)
and
and
sbb
xchg
mov
imul
push
out
pop
into
lea
inc
aaa
jl
mov
aaa
in
ss
ror
cmp
test
mov
and
ds
push
rcr
pop
inc
push
cmp
or
hlt
mov
fwait
push
add
push
lock
push
movs
or
jbe
or
and
dec
mov
sbb
in
mov
sbb
sub
in
aad
xchg
mov
iret
pop
push
cmp
loopne
xlat
pop
ja
(bad)
ficom
jno
inc
push
(bad)
xchg
je
jmp
jne
push
loop
outs
mov
imul
imul
lods
and
xchg
jge
push
int3
cmp
pop
cmp
je
retf
jp
call
icebp
call
mov
xchg
dec
sbb
xor
test
ds
dec
inc
mul
push
or
loopne
jnp
dec
push
ins
inc
out
mov
sbb
push
fadd
int3
lahf
sbb
adc
js
aaa
mov
(bad)
sub
cmp
rcr
jg
xor
pop
sbb
push
inc
int3
add
pushf
mov
cwde
out
data16
call
adc
idiv
xor
sbb
ret
std
jl
mov
dec
xor
pop
mov
jae
push
aaa
popf
sbb
xchg
pop
xchg
ins
xchg
adc
aaa
jne
dec
lods
sbb
pop
jb
imul
int3
jbe
(bad)
jno
lods
aaa
or
jno
mov
leave
imul
xchg
out
push
int3
pusha
fcom
mov
push
out
add
imul
jle
pusha
fs
pop
pop
push
sbb
(bad)
jb
jno
cli
adc
cdq
call
pushf
pop
aad
leave
lods
push
or
mov
inc
dec
loope
cli
dec
(bad)
fsubr
inc
push
in
jmp
dec
ins
push
xor
lods
mov
outs
fwait
dec
ins
bound
pop
pop
jl
lahf
daa
add
jo
loopne
retf
push
movs
mov
mov
cmps
mov
push
popf
or
sub
icebp
xchg
loopne
mov
lock
or
sub
jae
pop
arpl
and
lock
jmp
lea
movs
scas
sub
and
int3
add
lods
or
or
xchg
div
sub
inc
pop
inc
push
int3
xor
xchg
xor
cmc
push
push
(bad)
mov
std
cmp
bound
xor
push
mov
lods
popf
imul
rcr
xchg
xor
or
daa
xor
repz
into
cs
aas
cmp
pop
repz
repz
push
test
or
sub
mov
daa
or
mov
xor
mov
xor
xchg
lods
and
adc
test
mov
xor
int3
or
sbb
pusha
add
sbb
inc
inc
and
fnstcw
inc
mov
enter
push
fidiv
leave
mov
add
loope
mov
out
outs
pop
(bad)
iret
dec
jg
xchg
mov
mov
inc
jbe
mov
jmp
aad
add
bsf
aad
mov
mov
dec
out
add
and
in
imul
(bad)
sub
inc
sub
inc
xor
je
das
mov
pop
aaa
pop
ret
loop
jbe
mov
fidiv
rcr
push
ror
jecxz
or
or
cmp
icebp
jmp
stos
pop
add
test
rcl
les
shl
and
pusha
mov
mov
shr
(bad)
pusha
cmp
sbb
mov
hlt
or
mov
aaa
adc
jns
aaa
cwde
pop
xchg
test
(bad)
sti
mov
jnp
fcomp
mov
int3
inc
add
ja
div
retf
push
jno
das
inc
inc
mov
xor
hlt
cmps
jmp
pop
movs
fcomp
popf
sbb
add
std
adc
jo
loopne
sar
mov
sbb
and
fisttp
mov
inc
jecxz
inc
mov
jg
adc
lods
sbb
arpl
je
out
or
mov
inc
pop
inc
inc
xchg
out
mov
imul
and
inc
or
mov
fnstsw
shl
cmp
cmp
and
mov
jle
enter
add
cs
xor
das
shl
outs
xchg
cmps
jecxz
hlt
jno
fsubr
aam
lods
pop
mov
push
sub
mov
mov
repnz
test
push
pushf
retf
lods
fidivr
or
push
ins
dec
mov
lods
xchg
rol
xchg
jg
addr16
push
imul
leave
mov
lods
std
mov
xchg
xchg
push
call
(bad)
in
jecxz
js
test
push
shr
pop
jns
pop
mov
jecxz
int3
(bad)
fstp
jge
or
dec
ins
sbb
shl
mov
int
loope
mov
daa
enter
mov
and
test
popa
xor
aad
out
inc
cs
inc
addr16
mov
sbb
xchg
and
sbb
mov
jecxz
mov
inc
xor
test
movs
adc
sub
shl
adc
mov
jb
movs
mov
mov
dec
push
call
mov
gs
mov
mov
cmps
jo
jle
fsubr
stos
sub
stos
stos
fs
jl
dec
pop
fdiv
int3
mov
ja
and
jmp
inc
leave
cdq
inc
(bad)
iret
mov
ror
cmp
or
xchg
push
movs
xor
mov
add
xchg
pop
int
pop
sub
sbb
adc
sub
dec
mov
ror
mov
pop
jmp
(bad)
out
retf
mov
pop
(bad)
add
xor
inc
cs
xchg
lahf
add
loopne
mov
pop
xchg
outs
repz
test
outs
sub
div
pop
push
pop
imul
cwde
dec
sub
sar
or
or
addr16
leave
popa
jl
dec
das
int
in
rcl
std
push
cmp
jbe
aaa
bound
mul
mov
lea
and
push
fdivrp
cmp
mov
pop
das
cwde
sub
sub
stos
mov
fnstenv
sub
and
int
stos
icebp
xchg
inc
and
xlat
repnz
dec
hlt
out
mov
adc
loop
ds
retf
xchg
sub
rol
call
inc
enter
gs
cmp
pop
push
mov
shr
xor
enter
push
idiv
in
(bad)
bound
aas
and
ror
dec
lahf
mov
test
test
(bad)
ja
cmp
lods
or
ret
push
dec
cmc
xor
inc
cmp
ds
push
das
add
push
cmp
xchg
cmp
or
icebp
pop
aaa
fild
sub
arpl
repz
pop
pop
adc
xchg
mov
cmp
or
mov
mov
lea
xchg
shr
sbb
pusha
loop
mov
ds
data16
inc
(bad)
nop
out
mov
aam
(bad)
in
adc
add
mov
inc
cmp
int
(bad)
(bad)
loop
or
out
push
hlt
retf
pop
inc
loope
mov
movs
and
aam
fcomip
jge
hlt
imul
mov
ins
cs
test
dec
xor
jbe
add
xchg
sbb
xchg
pop
test
add
xor
stos
fwait
shl
pop
nop
fcomp
loop
and
mov
fcomp
stc
mov
and
pop
inc
jmp
push
popa
or
and
adc
dec
out
add
test
shl
fstp
or
sbb
scas
dec
fdivr
xor
xor
movs
push
jnp
jmp
mov
xor
push
pop
adc
mov
jge
lock
mov
mov
inc
pop
mov
cmp
inc
pop
bound
mov
xor
nop
inc
inc
xchg
aas
dec
mov
xchg
adc
int
ds
imul
js
mov
add
jnp
loopne
ja
jbe
div
jne
mov
(bad)
mov
jge
inc
cmc
loopne
ins
mov
in
sub
jo
call
or
mov
aaa
add
pop
inc
fsub
and
jne
pop
adc
mov
fld
xchg
cmp
xor
shr
int3
pop
movlps
shr
test
push
out
xor
mov
cmp
mov
jne
ss
shr
int
dec
movs
pop
in
rcl
dec
dec
ret
(bad)
jno
push
push
mov
mov
jns
aaa
(bad)
xor
mov
cs
sub
mov
inc
(bad)
retf
xor
mov
or
mov
cmp
pop
sti
cmp
mov
mov
and
inc
sub
jg
jne
lahf
ss
mov
jbe
js
cs
xchg
or
fs
es
adc
nop
repz
xchg
adc
adc
out
fbld
int3
cmps
lods
and
lods
(bad)
sbb
push
push
out
sub
and
scas
es
aam
cmp
mov
sbb
arpl
mov
push
add
xchg
jge
push
push
push
mov
rol
test
mov
retf
jecxz
inc
add
pop
push
es
xor
mov
pop
mov
stc
aam
fsub
test
inc
imul
push
ret
int3
in
cmp
sar
adc
add
in
ds
mov
push
pushw
cdq
mov
xchg
rcl
cmps
cdq
jno
mov
cmp
sbb
bound
int
inc
mov
out
retf
dec
and
dec
mov
mov
xchg
mov
xchg
ss
out
lods
ins
xor
push
(bad)
pop
out
arpl
jnp
inc
sbb
or
movs
cli
loope
sti
hlt
sahf
sub
xchg
cmps
cs
cwde
fstp
cmp
bnd
mov
cmp
mov
imul
sub
mov
ins
test
pop
sub
fwait
js
inc
cwde
add
or
xchg
push
js
rcr
add
mov
cs
cmp
inc
jae
jl
loop
test
popa
pop
popf
cli
jo
push
aad
mov
sbb
pop
popf
ret
test
movs
or
stc
sub
mov
jl
and
lahf
xchg
xchg
jmp
sub
jl
add
jmp
cmc
add
mov
cmp
add
mov
cmp
dec
bound
cmp
or
sbb
jl
push
dec
sub
fcmovbe
xchg
add
mov
div
adc
fcmovbe
jge
mov
cmp
xchg
xchg
iret
outs
scas
popf
jb
fs
je
dec
jge
mov
hlt
loope
repnz
in
addr16
push
dec
or
cmp
dec
cmp
sub
mov
sub
dec
inc
inc
ror
in
dec
clc
inc
bound
adc
xlat
push
aas
cmp
das
sub
pop
mul
sbb
rcr
in
pop
nop
cmps
test
out
cmp
fisubr
inc
xlat
fidivr
adc
popa
fistp
jp
push
cdq
cwde
cmc
in
and
and
fwait
imul
jmp
dec
loopne
jle
dec
mov
stc
dec
and
jmp
push
cmps
sahf
sar
ins
mov
mov
mov
scas
xchg
push
xor
push
mov
out
iret
xchg
test
repnz
mov
stc
je
lods
cs
imul
xor
gs
xchg
fist
stos
sar
cs
push
in
sub
ss
icebp
jmp
adc
inc
mov
inc
pop
mov
dec
loope
fild
jnp
xchg
cmp
cwde
and
in
aaa
or
lea
jl
adc
cli
sbb
xchg
jmp
push
sbb
fisubr
mov
or
fnstsw
sub
dec
rol
shl
cmp
and
inc
dec
sbb
jb
arpl
dec
push
int
in
popf
and
sbb
mov
shl
fidivr
loop
mov
lods
add
jbe
ror
lods
jns
lods
test
cs
popf
xlat
shl
sub
push
add
enter
idiv
push
pop
mov
std
mov
sbb
cmps
pop
adc
and
mov
mov
outs
setns
sub
js
xchg
cli
loopne
cmp
not
loopne
sub
mov
mov
cmp
mov
mov
shr
mov
pop
xchg
mov
gs
cmp
ds
adc
in
rcl
add
cmp
pusha
repnz
mov
sub
rcr
mov
imul
or
lahf
lds
mov
dec
or
mov
jmp
nop
test
pop
jno
jecxz
loop
or
cmps
ja
jl
outs
add
adc
loop
bound
in
mov
jecxz
inc
mov
out
sbb
adc
pushf
popa
xor
test
xchg
shr
stos
pop
ret
pop
xchg
aad
inc
sbb
stos
xchg
out
xor
xor
push
xor
or
mov
jmp
iret
and
dec
mov
add
pop
jne
push
pshufw
stos
xor
cdq
or
sub
popf
iret
or
mov
push
rcr
jbe
xor
xchg
jb
pop
mov
int
xchg
xor
push
cli
icebp
(bad)
lahf
js
and
sub
dec
in
dec
xor
retf
inc
and
jmp
cld
fwait
out
pop
ins
fnstsw
pop
sub
data16
pop
scas
popf
xchg
sub
ret
mov
xor
xor
mov
call
and
(bad)
cmps
cmp
clc
or
xor
push
mov
lahf
or
push
push
aaa
cld
push
into
call
mov
hlt
stc
je
(bad)
int
add
shl
(bad)
ja
fisubr
stc
xchg
out
je
cli
jmp
aad
xchg
out
data16
push
fsubr
push
inc
adc
xchg
aam
frstor
push
repnz
mov
add
mov
gs
xchg
cmp
stos
mov
enter
iret
add
stos
xor
aam
pop
daa
push
ret
hlt
ret
push
scas
cld
daa
add
in
lahf
mov
aaa
das
xchg
leave
stc
aas
ins
mov
movs
cmp
fiadd
call
jo
ins
jl
cli
test
fnsave
wrmsr
mov
inc
ret
mov
out
mov
cld
jae
pop
adc
xlat
mov
in
sbb
mov
lds
inc
mov
xor
call
jo
pop
clc
mov
push
adc
mov
cmps
loope
dec
mov
shl
pop
not
inc
mov
pop
cmps
js
test
inc
movs
bound
sub
ds
mov
pop
dec
inc
push
das
xchg
ins
and
sbb
mov
data16
pop
cwde
inc
xchg
loope
mov
sti
mov
shl
dec
inc
clc
lahf
loope
popf
loop
leave
dec
ja
jl
lods
mov
mov
xor
pusha
inc
retf
(bad)
retf
add
sti
data16
(bad)
pusha
stos
xor
inc
sbb
adc
xor
movs
add
sub
fistp
and
xchg
test
push
addr16
arpl
out
data16
test
nop
dec
push
lock
(bad)
pusha
in
inc
fcmove
imul
scas
out
iret
pop
cmp
test
out
jmp
jo
enter
adc
cmp
add
mov
adc
ins
(bad)
dec
jno
sbb
in
sbb
inc
push
es
shr
mov
or
loope
aaa
inc
push
fisub
or
ins
xor
sahf
push
in
xlat
mov
call
mov
retf
xchg
daa
bound
add
data16
cmp
xor
mov
xor
lea
or
jge
mov
and
fnstsw
call
cmps
jmp
popa
test
loopne
outs
add
and
jbe
mov
mov
or
outs
in
cld
aad
stos
test
sub
mov
mov
stos
in
cmp
sahf
out
xchg
mov
add
std
ret
and
adc
pop
xlat
dec
popf
xor
jl
popa
stos
ss
out
pop
add
arpl
js
sbb
add
cmp
pop
mov
mov
adc
jmp
jmp
clc
and
add
sbb
repz
stc
out
aad
rol
dec
inc
out
sub
enter
je
fcom
cwde
adc
jl
mov
in
sahf
add
push
cdq
jg
and
clc
mov
jg
(bad)
or
fcomp
lock
inc
xchg
mov
shl
repnz
ret
retf
sub
movs
nop
sub
jnp
cli
inc
xchg
dec
out
fisttp
out
adc
xor
mov
mov
add
cli
fsubr
sahf
(bad)
test
lds
xor
std
shl
inc
cld
jns
repnz
dec
push
ret
cmp
cld
add
push
or
mov
idiv
mov
mov
bound
xor
stos
sub
rcr
inc
pop
cs
adc
inc
or
pop
outs
cld
or
jbe
or
pop
xor
add
or
and
push
add
jno
inc
sub
lods
stc
xchg
lods
bound
or
mov
dec
mov
cmp
jp
push
jo
ds
ins
bound
and
mov
jmp
add
dec
cdq
(bad)
jge
mov
push
rcr
and
mov
dec
push
mov
sbb
jno
sub
gs
loopne
jge
(bad)
lods
and
rcr
ret
pushf
jmp
mov
dec
test
clc
test
jmp
xor
push
xchg
jo
xchg
sub
and
mov
sbb
sbb
and
cmp
inc
pop
xlat
jp
jmp
or
and
push
mov
jnp
mov
int
xchg
ror
addr16
fdivr
aaa
dec
in
out
xor
movs
stos
add
and
sbb
imul
mov
jbe
xor
test
mov
mov
shl
repz
ret
outs
inc
sahf
mov
lods
adc
mov
xlat
or
jno
inc
cmps
dec
mov
test
dec
inc
jp
in
daa
and
call
mov
mov
xchg
pop
cmovg
stc
pushf
lods
inc
scas
pusha
dec
mov
fcom
dec
push
bt
pop
jo
push
pusha
xor
add
adc
jge
in
stos
out
pusha
daa
push
hlt
pop
aas
jl
mov
jp
js
loop
push
adc
enter
retf
xchg
lahf
test
ret
sub
popa
test
std
xchg
ror
std
mov
jp
call
xor
lock
inc
add
out
mov
xchg
inc
movs
jns
push
push
stc
lahf
mov
and
sbb
jge
sbb
mov
pop
push
out
stos
ret
mov
jmp
xchg
sar
pop
inc
hlt
cmp
test
jne
(bad)
imul
cmps
add
in
popa
addr16
cdq
aas
int3
xchg
mov
cmp
out
ficom
sub
mov
pop
in
pop
or
mov
(bad)
mov
shr
mov
mov
fmul
es
and
and
mov
imul
imul
or
ins
sbb
adc
stos
mov
add
mov
push
mov
ficomp
mov
inc
sub
(bad)
aad
retf
add
retf
and
sbb
xor
cmp
or
in
aad
add
bound
xchg
cld
push
test
push
out
loope
xchg
mov
push
out
(bad)
ins
cmp
imul
scas
dec
and
int3
adc
or
xor
dec
addr16
loop
adc
xor
xor
ror
sub
or
(bad)
adc
shl
shl
adc
xchg
neg
cmps
mov
mov
pop
sbb
mov
test
mov
jp
dec
out
mov
ficomp
mov
test
mov
dec
and
push
outs
es
ror
push
aam
sbb
(bad)
inc
test
sub
sbb
aas
and
sbb
fwait
lea
push
cmp
movs
lods
daa
div
push
sti
mov
shl
cs
push
sbb
es
cmc
aaa
adc
loop
or
and
cmp
outs
sti
xor
inc
in
xchg
xor
xlat
nop
push
in
movs
push
cmps
test
push
cmc
loopne
adc
retf
repnz
sbb
sar
ds
sti
sub
es
dec
sub
fs
sub
int3
jne
dec
imul
pop
mov
ror
ins
dec
dec
fstp
inc
mov
mov
mov
push
pop
push
mov
mov
mov
scas
bound
push
sbb
ins
mov
pop
push
xor
int
stos
cld
(bad)
pop
xchg
mov
cmc
sub
das
test
xchg
fild
arpl
mov
dec
or
dec
rcr
mov
sbb
sbb
movs
aad
sbb
jne
cmp
les
ficomp
pop
jns
inc
es
fs
xor
mov
sbb
mov
xor
sbb
adc
jmp
and
mov
stos
ret
cmp
mov
and
dec
into
outs
in
sbb
and
cmc
xor
or
add
and
leave
xchg
movs
or
sub
leave
xor
mov
pop
bound
pop
cdq
xor
sbb
xor
cmp
std
pop
lock
add
mov
mov
jne
pop
mov
test
mov
xlat
xchg
and
call
iret
xchg
imul
fist
inc
call
and
aas
and
sbb
push
pop
push
push
lahf
inc
push
pop
(bad)
or
sar
loop
cld
add
gs
adc
(bad)
inc
jle
out
mov
sbb
popf
jmp
ret
cli
jecxz
fcmovbe
mov
test
adc
rol
out
cmps
pop
inc
mov
cdq
mov
adc
xor
xchg
sbb
cmp
lock
and
pop
cmp
outs
sub
mov
mov
push
inc
xor
jno
mov
pop
or
lods
mov
dec
pop
push
retf
(bad)
sbb
hlt
fcom
lods
(bad)
not
xor
lahf
in
xchg
hlt
adc
daa
jp
xchg
je
push
stos
cmps
mov
push
jmp
inc
xchg
inc
test
dec
cmc
inc
push
jne
cmp
jb
and
push
loopne
scas
outs
loopne
jmp
push
xchg
jno
sbb
dec
inc
sub
pop
mov
cdq
and
jmp
sti
mov
inc
pop
add
xor
and
xor
pop
mov
fiadd
cmp
jle
pop
cmp
outs
pop
in
jne
pop
lods
pop
rcl
adc
fs
imul
stc
push
push
jne
xor
pop
(bad)
mov
jge
cmp
dec
inc
adc
retf
sbb
mov
repnz
mov
adc
mov
cmovo
icebp
adc
(bad)
xor
xchg
aam
add
jecxz
cmp
xor
scas
mov
in
or
shl
inc
stos
stc
xchg
push
jl
mov
int3
mov
movs
les
test
or
xchg
cmp
push
aas
fs
(bad)
faddp
add
xchg
cld
mov
outs
aam
and
popa
fidiv
sahf
xchg
inc
mov
scas
scas
jg
xor
test
mov
mov
int
jns
std
inc
ss
(bad)
jle
rcl
and
idiv
cmp
xor
scas
(bad)
add
lock
je
fisttp
imul
mov
arpl
dec
scas
jl
jo
jno
movs
inc
mov
pop
inc
and
movs
xchg
push
lds
jmp
cli
ret
push
cmc
cmp
xor
fild
mov
xor
mov
xlat
jns
jne
movs
outs
inc
daa
out
cs
sbb
mov
push
test
addr16
pop
mov
pop
mov
adc
imul
ins
idiv
std
jge
movs
sub
xchg
loop
push
sub
gs
out
imul
jo
pop
lahf
xor
mov
cdq
sub
div
js
mov
lods
xor
and
lods
(bad)
in
push
xor
mov
fcomp
in
xor
inc
fcmovnb
xchg
aad
and
sub
js
sbb
jmp
in
je
scas
jmp
pop
sub
xor
or
stc
push
dec
out
mov
(bad)
jno
sub
push
lods
les
cdq
add
shr
pop
inc
or
adc
or
fimul
dec
pushf
mov
inc
jmp
push
xchg
test
pusha
add
cmp
imul
jbe
push
stos
xor
pusha
aas
or
test
imul
xor
(bad)
dec
inc
and
ret
sti
xchg
call
pop
inc
xchg
pop
jae
sub
std
ret
cmp
movs
popf
imul
icebp
in
xor
push
mov
sub
xchg
sub
cmp
jle
inc
in
xor
push
aaa
test
int
addr16
mov
pop
sub
aaa
loopne
dec
sub
xor
pop
test
add
jno
cdq
xor
push
fisubr
jecxz
add
inc
arpl
test
jp
and
in
test
jns
push
das
movs
inc
xor
xor
xchg
and
pusha
aam
dec
mov
push
dec
and
ret
rol
mov
push
cld
int
mov
dec
mov
in
jmp
leave
(bad)
lea
add
mov
lock
xor
sbb
or
push
dec
int3
out
cwde
fstp
mov
push
mov
xchg
push
lock
cwde
adc
xchg
out
pop
(bad)
call
mov
lods
xchg
adc
sbb
mov
out
cmp
pop
adc
xor
sbb
stc
sbb
loope
and
rcr
jb
mov
and
addr16
sbb
iret
pop
adc
sub
or
clc
jmp
mov
sub
aas
sub
cmps
add
dec
movlhps
cmp
mov
mov
pop
pushf
ror
mul
dec
inc
in
adc
sub
aam
data16
inc
popa
jo
call
mov
ins
dec
lods
xchg
movs
ins
aaa
inc
sub
(bad)
out
shr
or
sub
shr
mov
cmps
into
cs
call
mov
xchg
sbb
test
mov
mov
sub
mov
jmp
jg
push
jbe
rol
loop
loopne
or
cmp
sub
and
out
push
sbb
inc
mov
xchg
and
outs
pop
retf
int3
inc
mov
sub
in
fsubr
push
stos
test
mov
mov
jecxz
mov
add
mov
test
popf
and
sbb
cmp
mov
(bad)
cli
sar
mov
iret
dec
lods
push
cmc
push
sub
ret
out
fs
inc
xchg
push
(bad)
mov
enter
popf
sbb
sub
cli
cs
lods
addr16
add
mov
mov
jmp
(bad)
jae
push
xchg
inc
adc
dec
xchg
sub
test
sbb
popf
gs
enter
dec
mov
pop
mov
push
xchg
or
int
call
loope
into
push
or
aam
int
pop
ret
cmp
(bad)
dec
pop
lea
or
push
mov
inc
lds
or
mov
lds
cmp
out
ret
sub
cmp
mov
inc
ret
mov
imul
ret
cmp
xor
popf
add
inc
enter
xchg
xchg
aam
cmp
mov
imul
out
cld
pusha
add
cli
ds
cli
or
ins
or
in
popa
jb
pop
pushf
add
sbb
adc
(bad)
adc
ds
push
arpl
cmovo
je
or
out
sub
call
or
lds
pop
mov
fild
adc
into
adc
mov
push
loop
fadd
mov
rol
ss
pushf
xchg
cmp
imul
and
scas
inc
cmp
fldl2t
call
sub
inc
lods
sbb
cs
dec
cmp
add
and
jae
add
xchg
bnd
jae
cmp
mov
xchg
mov
cmp
xchg
inc
fld
stc
cli
jmp
icebp
vandnps
or
repz
cwde
mov
iret
jp
in
jns
sahf
clc
les
cwde
cmps
jbe
popa
dec
inc
inc
sti
jp
add
sti
je
sahf
dec
adc
add
movs
mov
adc
clc
repnz
sub
aam
cld
daa
push
adc
sahf
addr16
and
(bad)
mov
sbb
dec
ds
test
pop
or
imul
outs
and
jge
xchg
cmp
popf
(bad)
mov
jle
fwait
push
push
mov
fistp
arpl
xor
popf
dec
xor
xor
xor
fs
jmp
and
xchg
xor
mov
jmp
dec
adc
in
pop
scas
mov
ds
jecxz
cmc
(bad)
jmp
cmp
(bad)
sbb
fwait
out
lds
ds
ret
xchg
inc
iret
mov
clc
add
or
sar
add
jnp
sbb
test
cmc
or
jmp
mov
pop
pop
add
jns
xchg
push
ds
in
push
dec
and
xor
and
mov
(bad)
or
dec
adc
fcom
mov
call
add
mov
rcr
loopne
fstp
and
fcmovu
int
jmp
test
movs
xchg
je
lock
stc
jp
js
and
jns
inc
or
lock
jge
sub
inc
fdiv
das
dec
(bad)
push
adc
adc
mov
gs
jno
cmp
xchg
pop
setns
jg
mov
sub
mov
ror
idiv
xchg
ror
sub
push
mov
jns
frstor
mov
mov
cmps
call
mov
push
test
(bad)
int
fstp
mov
or
dec
mov
mov
arpl
xchg
fadd
fild
fcomip
loopne
hlt
fwait
loope
jo
movs
cmc
(bad)
scas
dec
mov
sti
jle
test
std
mov
fsubr
(bad)
repz
in
leave
xor
(bad)
in
fld
xchg
sub
push
push
add
lods
xchg
pop
nop
loopne
mov
inc
leave
lods
pop
rcr
enter
stos
jl
push
frstor
outs
mov
sbb
jnp
pop
mov
movs
fild
arpl
pop
popa
inc
xchg
aas
outs
pop
jmp
add
sub
cld
movs
gs
dec
jecxz
sar
jg
xor
daa
inc
add
nop
mov
fwait
(bad)
or
clc
leave
test
dec
ss
in
adc
(bad)
std
mov
pop
add
js
(bad)
jmp
aad
sar
fwait
xor
mov
jmp
adc
enter
fild
daa
cmps
xchg
(bad)
xorps
call
jp
aas
sbb
repz
test
mov
or
xchg
inc
jecxz
shl
(bad)
mov
xchg
push
push
xor
or
sbb
dec
iret
push
mov
and
stc
sub
pop
cmc
lea
adc
je
or
pop
ins
cmc
lods
mov
add
cmp
test
jecxz
ret
popf
mov
sti
jbe
jnp
cmp
rcl
lock
mov
int3
popa
shl
and
and
fimul
cli
jns
jmp
arpl
sbb
inc
fwait
mov
xchg
int
xchg
out
retf
data16
dec
leave
and
and
jl
sub
xchg
mov
mov
loop
scas
push
or
push
dec
ror
push
sar
ss
xchg
loopne
pop
dec
cmp
out
jbe
pop
jnp
ret
mov
sbb
xor
call
adc
stos
sar
mov
outs
mov
mov
ins
or
stos
fwait
ss
ja
popa
scas
mov
sbb
ret
(bad)
in
sbb
rol
sbb
cmps
test
ret
push
scas
rcl
mov
ret
test
jo
aad
in
pop
shl
dec
dec
mov
mov
push
pop
and
jmp
clc
pop
data16
xchg
mov
outs
push
push
imul
adc
jae
in
pop
cld
test
dec
mov
loope
rcr
cli
arpl
arpl
xor
add
nop
out
and
pop
xor
addr16
and
sar
jae
fsub
push
stos
es
fdivr
sar
xchg
mov
lahf
int
aaa
fcom
out
cli
jecxz
loop
mov
mov
and
inc
and
mov
outs
aam
dec
mov
mov
mov
mov
or
dec
add
mov
add
mov
addr16
sub
icebp
pop
push
xor
adc
fwait
inc
pop
retf
add
mov
test
inc
(bad)
fisttp
enter
and
in
(bad)
aam
rol
popf
js
(bad)
dec
stos
sub
retf
push
cmp
inc
sar
fild
stc
sbb
(bad)
shl
adc
adc
outs
inc
sbb
jmp
jecxz
mov
sbb
pop
enter
test
pop
ret
xlat
mov
std
inc
mov
test
stos
mov
cmp
jmp
rol
mov
or
dec
sbb
xchg
mov
outs
(bad)
xor
les
or
loop
cmc
data16
sbb
aaa
mov
(bad)
(bad)
dec
in
or
mov
lea
adc
repz
ror
push
(bad)
loop
pop
les
lahf
outs
push
int
ss
inc
out
retf
and
(bad)
mov
sar
mov
mov
dec
jbe
(bad)
cmp
popa
or
inc
mov
mov
jge
int3
push
repz
aad
ins
(bad)
call
dec
popf
daa
fisttp
dec
sahf
pop
cs
in
loopne
into
fild
dec
outs
rol
(bad)
mov
cdq
jo
test
in
fs
dec
cmp
lock
mov
push
ret
fmul
sbb
xchg
jns
xchg
inc
loop
(bad)
loop
and
adc
sub
iret
dec
jno
dec
cmp
inc
pop
push
mov
test
add
jg
xchg
xor
es
les
imul
dec
std
jg
xor
mov
jns
xor
ja
jle
mov
mov
cmp
pop
(bad)
fnstsw
xchg
jbe
cmp
ins
inc
addr16
push
pop
mov
push
and
jae
outs
popf
lahf
arpl
lods
lods
jbe
daa
or
sub
les
lock
cli
int3
cmps
push
lea
ins
out
test
outs
sahf
dec
(bad)
bound
fisttp
push
lods
dec
jnp
adc
aam
shl
mov
add
xor
(bad)
sbb
icebp
pop
into
jne
cmps
push
(bad)
jb
loope
sub
call
sbb
stc
fnsave
mov
dec
mov
fdivr
add
(bad)
adc
icebp
pushf
jle
call
and
(bad)
pop
sbb
mov
in
xchg
mov
sub
mov
mov
enter
daa
inc
les
(bad)
test
push
xchg
mov
jl
jne
xchg
cmp
(bad)
cmp
mov
xchg
loope
xchg
inc
cld
idiv
retf
or
xchg
push
mov
mov
adc
(bad)
xchg
push
icebp
frstor
mov
adc
cwde
push
cwde
ror
inc
mov
push
mov
out
push
shr
(bad)
mov
mov
test
adc
movs
sub
adc
xchg
cmp
pop
test
test
pop
fcom
xor
and
clc
or
xchg
dec
sahf
add
xchg
or
and
fmul
ret
mov
add
mov
ss
mov
push
in
inc
sub
or
add
cs
pop
mov
sbb
mov
jo
sbb
xchg
mov
enter
xchg
sub
mov
lds
inc
pop
mov
scas
sar
shl
add
in
mov
out
out
retf
cmp
in
and
add
xchg
jmp
add
cmp
jae
iret
xor
mov
je
mov
adc
mov
xor
add
outs
scas
ret
shl
ins
retf
addr16
retf
pop
retf
mov
xor
push
and
cmp
and
(bad)
out
pop
add
and
mov
int3
shufps
dec
jns
jle
pop
sub
add
adc
cmp
mov
scas
shr
cmps
iret
(bad)
call
sar
test
jne
std
dec
(bad)
(bad)
test
ret
repnz
pop
out
push
clc
rcr
into
in
cmps
test
call
repz
shr
mov
imul
inc
mov
(bad)
rcl
xor
repnz
push
loop
sbb
sar
cli
scas
lea
jle
fdiv
push
add
add
es
mov
imul
dec
and
aas
jno
lods
jmp
outs
scas
mul
into
lahf
jle
mov
js
jp
outs
sub
push
jno
addr16
mov
sub
cmp
mov
sbb
out
sbb
rol
xor
add
dec
imul
sbb
jmp
cs
retf
pop
xchg
out
jecxz
pop
cmps
mov
jno
mov
jne
mov
push
sahf
mov
xchg
sbb
gs
dec
(bad)
lods
cmp
sahf
jmp
sub
shl
popf
add
or
sbb
or
or
add
pop
int
push
pop
jo
sbb
jns
dec
jbe
daa
and
fsub
cmp
push
inc
daa
pop
mov
fisttp
push
ret
pop
mov
arpl
xchg
in
movs
mov
idiv
dec
pusha
inc
popa
xchg
cmp
fisub
(bad)
sbb
and
xor
cmp
loope
add
or
idiv
cmp
xchg
inc
bnd
inc
pop
and
pop
test
sbb
ret
push
sti
clc
push
mov
or
(bad)
in
cmp
and
and
movs
cmp
xchg
xor
pushfw
(bad)
push
inc
clc
rol
and
rep
test
jp
and
rcr
push
inc
call
mov
xchg
add
(bad)
ret
fnstcw
icebp
push
out
push
dec
call
in
into
cmp
rol
enter
cli
sahf
cmp
bound
mov
ins
pop
lea
enter
aad
push
stos
xor
pop
cli
push
out
xlat
mov
das
xor
loope
bound
dec
retf
and
es
sahf
or
inc
test
jmp
jecxz
mov
and
mov
add
les
shr
jbe
sbb
sub
les
ja
lock
cmp
xchg
xchg
fistp
bound
pop
ja
(bad)
mov
popf
dec
xor
mov
aad
outs
out
jns
mov
rol
mov
xchg
arpl
lds
sbb
xchg
test
push
sbb
(bad)
out
sbb
loop
es
jmp
sbb
int3
test
mov
cs
cmps
test
shl
mov
(bad)
mov
(bad)
cdq
inc
fild
(bad)
scas
test
popa
sahf
out
sbb
jbe
push
in
js
sbb
jle
fdivr
iret
cmps
adc
push
rcl
stos
leave
add
sbb
(bad)
jmp
ret
or
inc
adc
ja
inc
and
in
xor
dec
out
cld
jb
cmp
mov
sub
in
mov
in
scas
popa
or
mov
jno
xor
sahf
ror
fs
xchg
rcr
dec
add
mov
dec
xor
test
cwde
cmp
sub
(bad)
test
hlt
in
pop
sbb
xor
push
inc
loopne
cmp
mov
pop
(bad)
push
retf
ret
in
das
inc
dec
or
mov
daa
sbb
int
les
mov
imul
scas
or
aam
mov
mov
mov
cdq
test
sbb
inc
cmp
dec
inc
mov
sti
xchg
dec
push
sbb
mov
inc
pop
ss
lods
fimul
out
mov
inc
jno
scas
add
movs
aam
add
mov
jmp
je
push
and
jg
dec
mov
adc
cmp
or
mov
mov
(bad)
or
mov
xor
add
inc
enter
push
mov
int3
or
push
mov
aaa
inc
mov
push
test
jl
std
xchg
jo
repz
or
ja
cs
sbb
jecxz
cmp
mov
test
inc
cmp
dec
fisttp
add
ds
adc
fs
push
cmp
test
icebp
push
imul
push
nop
das
jns
lock
pop
call
icebp
mov
jo
outs
inc
in
or
dec
pop
mov
test
in
xor
into
push
cmp
and
pop
xchg
inc
(bad)
push
pop
jg
ss
cld
push
jb
xor
mov
jl
ins
push
cmp
aam
shr
ins
aad
pop
cli
jns
xor
jbe
sbb
leave
in
pusha
sbb
mov
add
jp
test
push
loop
inc
mov
pop
mov
(bad)
pop
addr16
mov
jl
mov
mov
aaa
out
cwde
sub
inc
nop
loope
mov
lods
ja
mov
mov
aas
cmovle
mov
ficomp
paddusb
leave
jb
xchg
ins
(bad)
fucomp
cdq
icebp
cmp
in
mov
and
and
repnz
xor
pop
xchg
ss
jmp
repnz
or
fpatan
pop
or
sub
rcl
fsubr
push
scas
arpl
dec
xchg
jae
xor
clc
xor
pop
add
cmp
rol
adc
jmp
push
cmp
mov
push
cmp
adc
call
ss
repnz
jl
test
sub
(bad)
pop
int
out
mov
sub
aad
dec
aam
cdq
rcr
fst
push
xchg
stc
push
mov
or
(bad)
sti
adc
outs
sbb
dec
sbb
push
pop
enter
test
or
(bad)
into
cli
pop
xor
mov
and
lds
loop
add
daa
mov
mov
xor
add
fcomi
xlat
shl
idiv
pop
add
dec
lods
fs
mov
mov
aaa
ret
ficom
(bad)
movs
xchg
div
add
adc
lea
retf
rol
xchg
push
mov
adc
mov
and
lock
and
mov
cmp
aaa
call
mov
add
mov
and
fwait
imul
out
ins
xor
jo
or
lods
push
or
pop
test
(bad)
dec
mov
or
test
cmps
sbb
fidiv
pop
mov
mov
leave
pop
push
push
test
cmp
ror
call
mov
je
cdq
(bad)
out
push
xchg
das
cmps
(bad)
adc
mov
aad
cwde
pop
call
push
sar
sub
mov
adc
jg
mov
scas
pop
push
(bad)
mov
xchg
adc
std
jmp
test
mov
dec
movs
pop
mov
lds
popf
jecxz
xchg
aaa
or
cmp
xor
xor
adc
(bad)
mov
xchg
mov
sub
pop
pop
or
xor
test
add
push
mov
adc
shr
aaa
outs
dec
fldcw
jle
outs
std
les
mov
lods
or
mov
or
clc
shl
(bad)
pop
(bad)
out
je
bound
or
jmp
inc
sub
dec
cmps
jge
nop
mov
dec
xor
and
jns
mov
xchg
push
or
sbb
sti
lds
stc
bound
dec
pop
lahf
xchg
xchg
loopne
add
and
inc
mov
out
push
and
mov
and
scas
cmp
int
pop
in
sub
sub
(bad)
in
mov
or
ds
and
cmp
adc
scas
inc
test
add
cmps
in
add
mov
mov
popa
adc
es
js
test
push
call
or
add
pop
jne
and
jns
mov
cmps
pusha
pop
mov
add
mov
(bad)
aam
xchg
add
pop
sbb
xor
pop
or
rcr
imul
in
lea
inc
cli
fwait
sahf
fisubr
mov
xor
mov
lea
ss
mov
adc
mov
and
data16
xor
sub
and
movs
inc
mov
or
pop
pop
dec
ret
pop
cmp
pop
add
mov
cdq
rcr
aas
adc
inc
aam
fist
stos
mov
sbb
and
mov
mov
sti
iret
test
mov
jp
and
or
out
jmp
js
cmc
cvtpi2ps
sbb
push
cmp
xchg
ret
imul
call
mov
dec
mov
hlt
std
dec
ins
push
mov
pop
push
adc
stos
dec
sub
test
inc
test
cmp
mov
in
jmp
shl
aaa
push
stos
in
fucomip
lods
pop
mov
or
cmp
mov
ficomp
(bad)
cmp
hlt
add
pusha
mov
cmp
inc
jmp
sub
pop
pop
cmc
or
test
pop
cmps
xchg
loopne
lock
mov
lds
pop
xchg
sub
out
loopne
outs
mov
in
mov
fld
icebp
push
cmps
in
in
out
mov
add
fmul
xchg
mov
add
fcom
push
scas
pop
(bad)
ins
push
cli
retf
imul
mov
mov
push
mov
popa
aam
icebp
jne
ins
jmp
sub
adc
ret
push
and
retf
popf
xor
and
add
jb
mov
bound
out
push
shl
push
fwait
cdq
adc
mov
jb
outs
enter
push
in
imul
or
jno
jb
int
sub
and
dec
jge
pop
in
xchg
jb
sar
mov
add
sbb
mov
test
es
sbb
test
cmps
aam
mov
das
or
xor
jg
je
mov
loopne
enter
mov
jge
es
sub
leave
je
and
scas
cmp
ins
push
inc
or
xchg
adc
xchg
inc
jae
scas
je
adc
cmp
cmc
add
pop
mov
cmps
cmps
fistp
rol
call
enter
adc
pop
les
sbb
mov
or
mov
cmp
ret
mov
inc
hlt
(bad)
fist
xchg
lock
mov
inc
(bad)
sbb
sub
mul
js
mov
adc
dec
mov
(bad)
sti
cli
in
cwde
xor
in
add
sub
inc
add
aaa
mov
int
sub
mov
and
out
outs
xchg
add
sbb
nop
sub
(bad)
daa
iret
mov
mov
hlt
pop
cld
adc
and
popa
inc
ret
xor
mov
sub
jmp
mov
out
cs
sbb
outs
cmps
mov
fimul
bound
sub
mov
in
fistp
int
dec
push
lods
test
ins
inc
xchg
xor
call
out
mov
aaa
push
or
mov
add
fisubr
loopne
adc
inc
jle
mov
dec
mov
sub
jo
xchg
ret
cmps
rcr
or
(bad)
jne
ret
and
dec
add
sub
xor
xchg
add
test
test
push
pop
dec
cmp
dec
mov
sbb
out
out
dec
mov
mov
or
shl
cwde
xchg
pop
or
mov
inc
cmp
repnz
dec
mov
je
ret
scas
push
fdivr
and
retf
les
rol
cwde
pop
inc
jl
dec
stos
ds
inc
xchg
and
xchg
inc
in
(bad)
pop
dec
and
sub
or
clc
pushf
movs
mov
fdivr
or
and
clc
pop
popf
add
inc
clc
xor
pop
rol
dec
jle
mov
add
pop
and
in
or
fldcw
popf
adc
xor
push
cwde
movs
push
adc
jmp
stos
sub
ds
xchg
add
mov
out
jle
(bad)
xchg
shl
test
jb
inc
int
and
je
push
adc
mov
and
je
retf
dec
inc
xor
mov
inc
and
sti
ret
stos
fidivr
scas
mov
adc
jl
mov
clc
jne
js
mov
jne
xchg
aad
and
in
mov
je
adc
sahf
mov
or
rol
xor
jp
das
test
inc
inc
pop
ins
stc
mov
inc
xchg
push
dec
mov
jo
xor
(bad)
mov
mov
cmp
add
cld
and
imul
cmp
xor
in
push
dec
addr16
mov
dec
(bad)
addr16
mov
xor
mov
adc
clc
add
cld
sub
shr
sti
pop
daa
movs
enter
rol
mov
(bad)
popf
cmp
neg
cmp
call
adc
inc
imul
jecxz
jnp
xchg
xchg
aaa
push
ins
xor
mov
ror
dec
shl
push
inc
cmps
add
aam
fadd
sar
call
jle
test
setle
cli
mov
cmp
stos
cmp
inc
cmp
adc
pop
push
jno
inc
inc
std
cwde
les
pop
mov
xchg
sub
sub
lds
push
mov
mov
fild
(bad)
ss
xchg
fwait
adc
fbstp
pusha
sbb
hlt
jl
or
push
xor
sub
pop
(bad)
xchg
ins
mov
int3
sbb
(bad)
mov
mov
outs
repz
cwde
or
cmps
retf
lahf
fs
int3
icebp
outs
test
stc
lea
pop
mov
stc
iret
xchg
jl
stos
xchg
cmps
(bad)
pop
and
sbb
cmp
mov
loopne
rcl
addr16
push
and
adc
lods
xchg
or
push
std
idiv
popa
fsubr
movs
mov
stos
dec
cmp
and
fwait
xchg
js
arpl
(bad)
push
add
jno
mov
inc
adc
mov
and
and
sar
dec
pop
adc
fdiv
fstp
fnstcw
clc
shr
cmps
daa
fwait
inc
jge
clc
lods
and
dec
out
mov
jne
mov
popf
repz
(bad)
mov
mov
int
inc
mov
out
sbb
adc
lock
inc
and
pop
fisttp
(bad)
cmps
mov
add
or
in
mov
push
dec
or
jmp
jg
fst
jle
das
fcom
into
ror
mov
adc
and
outs
inc
or
(bad)
sahf
push
mov
neg
fistp
push
pop
push
mov
lea
jae
mov
jp
icebp
sbb
out
cmp
in
push
jnp
fistp
jno
(bad)
ins
inc
mov
sbb
cs
pusha
fwait
mov
stos
xor
push
mov
mov
xchg
scas
into
jecxz
mov
pop
rol
rcl
dec
nop
in
xlat
pop
sar
xor
or
int3
adc
out
ret
dec
rcl
dec
push
mov
sub
movs
out
fstp
pop
mov
push
pop
sub
dec
and
pop
cmp
xor
cmp
and
and
into
popa
imul
stos
arpl
imul
xor
nop
test
inc
(bad)
scas
push
or
loop
in
sar
push
mov
sub
jae
sub
repnz
es
hlt
push
fild
adc
cmc
xor
cmp
cmp
and
push
js
mov
repz
mov
mov
pop
mov
cmp
pop
sub
xchg
int3
ror
inc
rol
daa
mov
out
rcl
push
lock
inc
mov
xchg
push
lahf
adc
sub
adc
cli
(bad)
(bad)
push
and
stos
and
jae
push
outs
xor
jb
pop
fcom
pushf
icebp
push
fmul
fwait
rol
call
addr16
retf
sub
cmps
and
jmp
inc
adc
loope
mov
inc
push
das
aam
in
inc
iret
imul
sahf
es
scas
enter
add
pop
test
mov
and
das
mov
sub
aad
inc
push
fadd
mov
jp
retf
in
mov
cmp
sub
mov
xor
sahf
stos
in
cwde
out
shl
dec
mov
jns
xchg
(bad)
ja
outs
inc
pop
jmp
stc
mov
pop
leave
pushf
push
jns
and
jle
ret
ja
in
pop
aaa
sub
add
es
call
mov
leave
sbb
and
sub
dec
movs
sub
push
xchg
mov
mov
or
enter
xchg
adc
add
dec
sbb
inc
push
cld
into
mov
or
push
push
bound
test
add
shl
leave
in
fst
cmp
out
xor
dec
mov
stos
int
je
mov
xchg
mov
mov
adc
jno
test
jnp
pusha
or
or
loopne
test
push
sahf
cmps
push
test
test
inc
gs
fisttp
mov
pop
(bad)
out
xor
movs
mov
cmp
fnsave
dec
arpl
pop
pop
ja
arpl
push
out
ret
mov
into
jg
in
mov
push
out
mov
scas
adc
pop
inc
push
or
das
mov
mov
dec
cmp
cld
mov
inc
sub
js
loop
cs
add
das
aas
cwde
cmp
inc
or
mov
mov
add
pop
sub
ret
test
dec
pop
test
movs
add
outs
adc
pop
retf
enter
inc
aas
mov
xchg
ins
mov
adc
xor
xchg
adc
push
shl
add
retf
lods
adc
inc
and
sbb
daa
pop
fimul
sbb
adc
mov
jl
lea
inc
jle
dec
in
leave
cmp
es
adc
and
dec
cmp
mov
jecxz
xor
mov
out
int3
imul
ins
loop
or
lahf
loopne
or
mov
call
lds
cmp
loope
jge
out
pop
sub
cmps
push
sbb
sbb
and
dec
sbb
ins
fisub
push
inc
cmps
xchg
fwait
mov
stos
add
xchg
adc
sub
arpl
jge
cmp
int3
sub
je
in
mov
sub
add
dec
adc
pop
and
nop
mov
pop
mov
retf
stos
nop
fwait
xor
and
jno
fdivr
or
out
xchg
adc
mov
mov
mov
popa
inc
loopne
imul
add
lock
aad
adc
pop
xchg
cld
test
mov
lds
add
pop
mov
lahf
adc
rol
test
inc
or
out
cwde
mov
dec
into
jnp
pop
nop
pop
jae
mov
ret
ins
mov
dec
and
mov
ins
loop
mov
mov
sbb
outs
xor
fsqrt
mov
je
mov
out
es
ret
pop
mov
out
popf
or
pop
mov
sub
in
test
ror
mov
cmp
mov
or
sbb
cmc
cmp
fcmovnb
loope
cmps
cs
popf
xchg
in
scas
lea
js
or
sti
test
pop
iret
cmp
rol
fwait
sbb
stos
xor
sbb
jp
add
pop
jmp
add
cmps
es
movs
jae
jp
mov
pop
(bad)
stos
rcl
retf
fdivr
sti
lea
xor
dec
inc
or
mov
push
repz
mov
mov
std
sti
loopne
add
(bad)
push
mov
outs
dec
daa
data16
pop
jl
int3
jns
(bad)
mov
xchg
ret
(bad)
mov
xor
mov
(bad)
and
out
pop
xor
fmul
pop
pusha
inc
cmp
mov
push
xchg
nop
in
lods
jecxz
dec
shr
js
std
mov
or
out
dec
sbb
leave
mov
xlat
dec
pop
rcr
jno
mov
lock
mov
or
popa
in
mov
fwait
or
not
daa
arpl
rcr
ficomp
into
imul
xor
cmps
mov
cmp
mov
mov
shl
jp
into
cwde
jns
push
addr16
call
xor
dec
imul
leave
xchg
jmp
hlt
test
xchg
addr16
lahf
fist
fwait
pop
cmp
leave
aaa
add
cmp
ins
and
enter
mov
es
adc
or
into
pop
or
push
daa
sahf
push
pop
mov
ror
call
bound
xor
push
cmps
jmp
shl
mov
stos
ret
out
mov
jo
jecxz
call
and
popf
jb
mov
std
sahf
mov
jb
clc
pop
mov
test
mov
pop
xchg
shr
cli
cmp
cmc
retf
arpl
sahf
xchg
add
fnsave
scas
cmp
sub
jno
pop
out
pop
sti
jbe
cmp
and
loope
mov
shl
jns
xor
jnp
outs
dec
jmp
cmp
mov
scas
in
cli
out
sti
(bad)
ja
dec
mov
push
pop
pop
push
rcr
mov
popf
jl
sbb
mov
add
or
cld
sub
push
mov
jecxz
scas
adc
ret
inc
loope
pop
jmp
and
or
inc
dec
sar
fcom
jmp
lock
lds
out
jo
sahf
mov
adc
push
enter
loop
mov
jae
mov
mov
jb
test
dec
and
pushf
enter
sbb
dec
arpl
jns
mov
lods
enter
add
pop
in
bound
test
inc
nop
xchg
pop
mov
jp
les
jo
(bad)
iret
leave
jg
xchg
pusha
push
pop
mov
stos
or
dec
adc
jbe
push
add
pop
xchg
mov
xchg
push
dec
and
pop
pop
mov
imul
loope
push
push
inc
gs
xlat
sbb
pop
sbb
sbb
mov
cmp
jmp
dec
push
mov
sub
test
pop
data16
mov
cld
mov
adc
cmps
pop
(bad)
jecxz
adc
inc
ror
mov
loopne
idiv
and
je
test
loope
jb
push
shr
aam
mov
inc
stc
das
scas
xchg
jbe
imul
xor
sbb
mov
not
jecxz
cmc
sbb
mov
jl
mov
sbb
(bad)
and
cmp
pop
dec
sub
(bad)
mov
dec
ins
push
sbb
sahf
or
dec
push
arpl
push
jb
aas
lea
lock
inc
xlat
xchg
mov
hlt
add
push
call
out
inc
cmp
mov
push
cmc
loop
shl
dec
add
addr16
stos
mov
xor
das
push
sbb
xchg
lods
arpl
sbb
les
mov
outs
fwait
inc
cmps
pop
mov
ficomp
ret
fs
xlat
mov
mov
jge
add
mov
in
adc
push
imul
mov
je
jnp
cmp
rol
clc
fcom
xchg
popf
out
adc
in
xchg
gs
out
mov
or
mov
out
jns
mov
rcr
fmul
sbb
push
adc
fmul
mov
movs
adc
fsubr
mov
idiv
fidiv
dec
sbb
and
movs
add
sub
fisttp
add
mov
in
fs
in
jge
inc
push
(bad)
movs
inc
mov
fwait
mov
in
mov
dec
gs
adc
call
or
mov
adc
mov
aad
shl
cmp
cmps
aas
jecxz
cmp
and
jns
lods
in
inc
je
xor
sar
mov
xor
mov
mov
inc
inc
and
push
jb
cmp
sbb
jnp
dec
inc
fwait
loop
mov
or
mov
add
test
arpl
mov
int3
fld
and
or
int
mov
out
dec
cmc
or
adc
mov
sbb
and
cli
fisttp
push
inc
pop
pop
add
movs
xor
ja
inc
repnz
pop
rcl
inc
sbb
push
hlt
dec
sub
and
pop
test
pop
test
push
jae
xor
inc
cmps
xlat
push
mov
cmps
sub
push
lock
add
fsub
pop
sub
test
jge
jl
sub
xchg
mov
scas
push
pop
sahf
push
das
xor
(bad)
ror
mov
add
inc
(bad)
xor
popf
mov
pop
pop
cmp
pop
and
popa
dec
daa
dec
inc
xor
sbb
stos
out
mov
test
aad
dec
xchg
add
push
outs
inc
ja
mov
dec
push
(bad)
lea
jae
or
test
jge
cmp
dec
in
fstp
daa
cmps
inc
cmp
xchg
mov
enter
xchg
movs
or
(bad)
stc
sbb
dec
jmp
leave
and
mov
fwait
icebp
repz
cmp
sar
push
pop
push
std
test
fild
and
dec
in
aaa
aad
jg
cdq
inc
dec
jge
or
pop
jecxz
or
pop
jbe
xchg
fs
inc
xor
inc
pop
cld
mov
fcomp
jmp
mov
stos
xchg
cwde
jmp
mov
adc
adc
popf
push
scas
sub
data16
(bad)
dec
stc
adc
and
sti
jl
or
adc
jmp
mov
iret
nop
bound
fsub
pop
sar
mov
rcr
sbb
or
lods
pop
push
and
pop
fistp
fsubr
fs
xor
cmp
pop
sbb
mov
fisttp
aad
iret
pop
jnp
fcomp
mov
in
xchg
inc
mov
adc
xor
sub
xchg
sub
pop
or
jmp
xchg
test
sbb
xchg
jg
push
cmp
jb
aad
mov
sbb
pop
mov
das
pop
push
xchg
dec
pusha
xchg
inc
pop
sub
adc
cmp
dec
xchg
push
popf
and
cmp
out
paddusb
dec
iret
lods
popf
sbb
aam
pop
sbb
repz
xlat
mov
adc
cs
or
ret
jle
fadd
mov
sbb
add
xor
push
mov
inc
loopne
mov
stos
xchg
shr
mov
addr16
push
sub
mov
or
cmp
retf
xor
rcl
jo
int3
jl
popa
lods
add
jge
dec
outs
mov
jl
fidiv
cld
retf
aam
dec
ret
maxps
xor
loop
mov
lahf
popf
scas
lods
out
fs
dec
dec
xor
popf
test
xchg
cmp
ins
sub
jo
add
in
dec
inc
adc
xor
jno
pop
mov
jno
cmp
adc
mov
mov
cmp
sbb
pop
dec
xchg
xchg
loopne
inc
or
out
ror
mov
sub
das
mov
xlat
push
scas
dec
jbe
jle
call
add
pop
xchg
rol
xchg
add
lds
pop
lods
sahf
dec
test
xchg
mov
mov
push
out
jo
xor
stos
push
mov
sbb
adc
xchg
cwde
loope
add
mov
test
sub
ss
add
inc
daa
je
pushf
inc
cmp
jbe
or
loope
test
test
mov
ror
cdq
cwde
sub
push
mov
mov
fimul
lahf
pushf
push
ja
push
lods
out
or
and
inc
mov
into
popa
bnd
outs
jecxz
mov
push
retf
push
push
jbe
in
or
int3
(bad)
int3
ins
cs
ffree
out
lahf
add
ret
call
mov
iret
call
lods
mov
neg
pop
fidivr
sbb
adc
push
adc
xor
push
(bad)
dec
pop
xacquire
shl
les
cmp
lds
sbb
sub
pop
aaa
fwait
test
ss
cs
mov
jl
fxch
popa
xor
dec
arpl
sahf
dec
xchg
dec
cmp
jne
pop
pop
xchg
(bad)
repz
push
es
xor
mov
lods
int3
and
out
cs
fild
call
fist
imul
sbb
cmp
xchg
int
xchg
mov
lods
pop
add
ret
pop
add
stos
aas
mov
mov
or
and
adc
enter
dec
adc
jo
mov
push
sub
adc
adc
pushf
push
push
xchg
pop
jne
loopne
or
push
cmp
fcomp
mov
xchg
mov
inc
repnz
ror
push
cmps
xor
adc
(bad)
jecxz
jmp
xor
js
mov
aas
and
das
ins
add
or
addr16
(bad)
jmp
inc
add
in
pop
xor
rcr
sbb
stc
cmp
mov
mov
xchg
(bad)
push
or
push
scas
dec
dec
je
xor
xor
call
out
cmps
test
and
and
sbb
push
cdq
(bad)
aas
pandn
inc
les
test
test
ja
jo
or
enter
enter
loope
adc
pop
sbb
and
out
je
inc
movs
out
in
int3
imul
data16
icebp
mul
imul
popa
int
daa
stos
jne
mov
pop
jecxz
inc
add
retf
mov
cmc
imul
lahf
sbb
pop
jb
pop
pop
sub
jno
pusha
or
mov
pop
mov
retf
sub
outs
xchg
mov
bound
xchg
xchg
jo
xor
push
(bad)
pop
adc
push
sbb
fist
out
arpl
cs
jmp
ret
addr16
and
(bad)
pop
(bad)
cli
arpl
fmul
mov
aaa
push
xchg
cmp
lahf
loope
push
int3
sbb
sbb
pop
mov
aaa
push
jmp
mov
dec
xlat
pop
add
mov
das
js
inc
lods
iret
xor
pop
imul
cmps
mov
jp
mov
jo
retf
out
push
adc
xchg
movs
and
push
add
mov
dec
adc
mov
sub
es
dec
adc
cld
xchg
call
jo
push
stc
dec
sbb
rcl
mov
inc
push
inc
mov
push
nop
pop
mov
loope
xchg
jmp
jg
outs
rol
and
fdivr
push
xchg
jge
sub
xor
add
xchg
inc
mov
movs
into
popf
add
mov
out
lea
pop
inc
std
add
mov
sbb
and
test
adc
loopne
outs
and
jmp
repnz
fwait
cmp
call
sbb
xchg
outs
lock
pop
xchg
loope
cdq
mov
pop
out
pop
ror
xlat
sbb
cwde
push
and
hlt
sub
loopne
push
lahf
push
dec
sub
fs
or
add
jle
loop
xor
cs
nop
imul
aad
sahf
push
and
push
and
push
sub
mov
int
and
mov
inc
jge
push
test
jmp
arpl
inc
ret
sub
mov
mov
je
mov
cmp
mov
push
mov
adc
sbb
test
xchg
ror
neg
jge
jg
dec
cwde
cmp
je
ret
pusha
and
test
fmul
dec
sub
push
jbe
xor
inc
xor
push
lock
and
ret
push
jge
popf
cmc
mov
push
retf
mov
aas
je
ret
mov
popf
std
popa
mov
lods
pusha
xor
ins
cmp
push
cdq
and
arpl
call
xchg
icebp
hlt
inc
xor
movs
inc
mov
jp
addr16
jecxz
add
loopne
sub
push
int
mov
mov
push
and
push
jmp
xor
ret
rcl
inc
mov
int
push
jmp
push
cdq
push
sbb
add
sbb
cmc
cwde
cdq
mov
mov
sbb
xchg
movs
test
sbb
arpl
test
jg
push
sub
out
sbb
inc
xchg
pop
mov
mov
cld
int
out
or
lods
pop
sub
fsub
mov
mov
pushf
add
xchg
cmp
and
ins
sbb
xor
ss
mov
mov
sbb
push
sbb
jnp
adc
ins
pop
xor
mov
outs
mov
mov
jo
pop
pop
xchg
test
dec
adc
mov
xor
and
jbe
or
mov
jmp
sbb
adc
pop
(bad)
and
mov
sbb
dec
std
loop
mov
das
xchg
test
movs
mov
xor
fwait
mov
add
mov
add
pop
loopne
mov
cmp
dec
lds
idiv
rol
int
and
jecxz
arpl
inc
fld
jmp
mov
mov
bound
inc
and
or
add
fsub
dec
and
sbb
ds
inc
loop
in
sub
lods
nop
mov
inc
fdiv
sar
push
shl
std
jne
ja
mov
call
(bad)
movs
aaa
dec
xchg
jne
not
fsub
jecxz
inc
es
lods
dec
gs
shr
ret
outs
mov
xchg
cld
sbb
inc
mov
aam
in
aam
sbb
jo
pusha
cmp
jl
sbb
adc
or
pushf
mov
or
or
mov
add
dec
retf
imul
dec
xchg
sahf
retf
ins
ins
fs
or
push
xchg
cmp
jp
arpl
fistp
jecxz
pop
cmp
add
adc
and
cs
mov
xchg
aam
pushf
mov
mov
inc
lds
mov
(bad)
fild
aad
(bad)
add
pop
icebp
test
sahf
and
mov
test
ret
loop
lock
and
retf
aaa
push
xor
add
jb
loop
into
cmps
sub
ins
cmp
lods
cli
cmps
xor
or
lods
ret
ss
mov
lock
cmp
fisttp
jns
and
stos
jge
outs
iret
jmp
into
pusha
adc
je
mov
clc
imul
in
mov
sbb
mov
imul
pop
test
mov
mov
in
mov
aas
add
nop
mov
das
fdivr
xlat
cdq
clc
add
sub
mov
mov
xchg
cld
sub
push
push
inc
pop
rol
adc
fild
call
jp
int3
test
cmps
jmp
xor
pop
mov
cmp
(bad)
or
mov
arpl
lds
sub
cwde
jne
push
arpl
shl
mov
es
repz
xchg
daa
jne
push
push
mov
jg
das
and
aas
add
aam
pop
mov
mov
sbb
xchg
mov
rol
cmp
repz
jmp
pop
jb
cwde
ins
xchg
push
adc
push
sub
pop
inc
sti
xchg
out
enter
in
cmps
inc
pop
dec
xor
cld
test
pop
pop
cmp
push
and
lods
out
stos
xchg
bound
movs
rcl
nop
adc
cwde
adc
push
sbb
xor
ins
cld
xchg
sbb
mov
adc
movs
xor
mov
and
dec
push
mov
push
ret
lea
mov
icebp
lock
mov
gs
jb
mov
push
jmp
daa
test
inc
mov
sbb
cwde
int3
jecxz
into
xor
jns
stos
mov
pop
rep
sub
pusha
and
pushf
in
iret
or
jns
inc
cmps
cmp
mov
cwde
ins
enter
retf
popf
jle
neg
cmp
stos
jb
dec
addr16
lea
adc
(bad)
in
mov
(bad)
mov
xchg
repnz
push
dec
mov
or
loopne
call
fmul
je
popf
fwait
ins
xor
mov
jl
mov
add
add
cmp
push
mov
mov
mov
and
test
jge
test
mov
inc
(bad)
mov
jle
fld
cwde
das
mov
out
lea
arpl
push
sbb
inc
cmp
(bad)
rcr
push
adc
(bad)
or
pop
sbb
mov
or
pop
mov
push
cmp
or
adc
das
or
sub
xchg
mov
lds
ins
(bad)
gs
ds
and
pop
mov
jmp
imul
mov
push
jbe
xor
ins
add
pop
jecxz
xor
or
push
neg
xchg
les
arpl
push
dec
mov
fimul
or
pop
push
push
add
jecxz
mov
mov
jae
enter
push
xor
hlt
adc
int3
sub
bound
sub
pop
rcl
ds
in
sub
test
ins
shl
ja
inc
shr
pop
retf
(bad)
mov
in
int3
lods
sub
lock
xlat
popf
sbb
and
jbe
mov
cwde
sbb
dec
and
test
aam
mov
and
sbb
and
(bad)
push
sar
mov
pop
cmps
(bad)
jl
nop
bound
sar
dec
mov
jmp
push
loopne
sbb
xchg
out
mov
xchg
xor
push
retf
shr
scas
and
fstp
sar
mov
mov
or
dec
push
stc
ficom
cmps
xchg
mov
in
cmp
or
daa
ret
cs
xor
(bad)
adc
xchg
cli
jnp
jns
push
or
int3
ja
xchg
adc
retf
xchg
jno
lea
mov
les
cs
in
out
sub
scas
(bad)
xor
add
pop
inc
repnz
dec
cs
xchg
mov
mov
scas
xchg
rcr
push
lock
in
jb
jmp
xchg
js
test
push
ret
retf
sbb
mov
clc
mov
or
and
aas
adc
cmps
xchg
add
xor
add
mov
or
adc
outs
(bad)
add
inc
jae
fisubr
pop
sbb
pop
or
int3
jecxz
jl
mov
xchg
cmps
xchg
inc
jle
call
or
mov
mov
mov
cli
enter
int
movs
jmp
mov
dec
iret
push
mov
pop
sub
xor
xchg
mov
adc
or
ror
xor
push
les
pop
xor
xchg
inc
(bad)
(bad)
jno
repz
inc
(bad)
mov
mov
retf
cmp
retf
in
fwait
and
lahf
je
jo
mov
iret
ds
cld
loopne
add
inc
push
mov
dec
inc
enter
push
pushf
mov
mov
jmp
ret
jns
xchg
repz
(bad)
rcr
dec
dec
jmp
mov
add
jbe
jae
pusha
or
mov
shl
mov
repnz
lea
jns
mov
je
ret
cwde
sbb
rol
bound
aam
mov
push
imul
loope
shr
ja
test
and
into
out
test
(bad)
adc
mov
mov
mov
push
mov
adc
or
mov
mov
mov
not
dec
mov
push
jnp
sub
xor
sbb
inc
ror
sbb
jmp
outs
(bad)
ins
push
add
aas
fwait
push
out
sub
out
adc
jno
inc
into
pop
pop
push
mov
retf
shr
int3
aam
cmps
sbb
out
push
loop
fwait
xor
test
loope
push
movs
je
pop
(bad)
adc
cmp
sti
retf
pusha
pmaddwd
imul
xor
jg
stc
add
push
test
cmp
fbstp
push
setae
cwde
and
loope
(bad)
leave
call
add
add
cwde
pop
(bad)
(bad)
jae
cmps
mov
mov
loop
cmp
xchg
xor
mov
lds
adc
mov
jnp
push
sub
xchg
adc
pop
xchg
bound
ret
gs
mov
push
aam
mov
frstor
mov
add
adc
adc
ja
inc
xor
repz
sbb
enter
fldenv
popa
iret
jle
(bad)
in
scas
or
add
jmp
mov
and
add
loop
xor
jbe
add
rdmsr
repz
shr
mov
ins
sbb
pushf
xor
ins
clc
jo
sub
popa
pop
fldcw
dec
icebp
add
movs
xchg
in
add
scas
push
cmc
mov
jne
(bad)
scas
and
xor
cmps
fild
or
adc
std
jecxz
push
pushf
add
cwde
or
outs
aas
dec
jo
mov
gs
movs
push
xchg
mov
xor
push
aam
mov
push
inc
fidiv
or
pop
dec
jl
xchg
ja
scas
dec
jg
lock
and
fdivp
cmp
fucom
in
add
add
adc
xor
daa
xor
inc
jb
in
sbb
or
bound
xchg
dec
dec
adc
(bad)
cmp
stos
std
adc
inc
scas
iret
inc
jnp
ins
sub
add
cmp
ret
test
hlt
fs
mov
fstp
mov
loop
adc
cmc
dec
lods
xchg
pop
xchg
in
jmp
mov
call
cmps
pop
or
pushf
dec
in
pop
jmp
dec
popa
pop
pop
mov
(bad)
sub
loopne
lea
ds
sub
mov
pusha
or
ins
xor
loop
(bad)
inc
mov
add
ins
out
mov
popa
dec
inc
sub
mov
adc
outs
jmp
and
int3
xchg
scas
xor
cmp
je
pop
das
mov
sub
aas
sti
std
xlat
lods
mov
mov
sbb
sbb
xor
pop
pushf
jne
push
repz
out
sbb
dec
dec
ds
jnp
or
push
inc
or
(bad)
(bad)
icebp
mov
popa
fisubr
pop
jns
lods
fcom
xor
test
stos
push
arpl
xor
out
and
mov
stc
inc
addr16
cmp
fld
jle
fdivr
hlt
es
dec
mov
test
xchg
fdivr
mov
xlat
jno
lahf
imul
cmps
sti
push
nop
test
jno
js
and
lahf
mov
stos
jmp
or
mov
loope
rcl
jg
push
xchg
nop
mov
loop
ret
mov
push
adc
test
test
enter
jecxz
push
cmp
loope
add
push
cdq
dec
movs
je
movs
and
add
sbb
xchg
test
gs
cmp
xlat
rol
pop
jle
add
outs
pop
adc
in
out
into
stos
repz
pop
loop
xchg
xor
xor
(bad)
les
xchg
neg
push
leave
mov
mov
mov
sub
(bad)
clc
lds
inc
ins
dec
sbb
mov
adc
and
pushf
dec
daa
js
mov
seto
jl
iret
jns
arpl
push
or
dec
push
repz
jp
xchg
xchg
add
aam
and
sub
mov
xchg
popf
and
movs
push
cmp
xor
cmp
sbb
movs
ins
sar
test
ret
imul
jbe
sbb
inc
into
retf
sbb
push
add
mov
xor
mov
out
(bad)
in
rcl
xchg
xor
pop
cmp
(bad)
mov
pop
loope
dec
iret
mov
shr
add
xor
sbb
dec
xor
je
jecxz
repz
jbe
fcomp
ins
xor
retf
push
pop
nop
mov
lahf
repz
dec
scas
pop
std
xor
xor
xor
sti
es
psrad
outs
push
add
das
scas
lock
jno
pop
out
sub
mov
and
mov
inc
inc
loop
cmp
cmp
dec
mov
xchg
stos
jp
push
cmp
fistp
mov
mov
cmp
adc
pop
adc
push
push
mov
sub
add
neg
jmp
jge
ss
sbb
xchg
lea
or
in
shl
push
fld
out
dec
lds
test
test
inc
hlt
js
(bad)
and
aad
xchg
inc
xchg
pop
mov
fcomp
jge
push
sbb
add
bound
bnd
addr16
jne
shl
sahf
gs
data16
xor
xor
sub
shr
clc
jne
and
mov
jae
push
pop
mov
xor
int
mov
lods
(bad)
xor
loopne
mov
cmc
pop
ror
inc
jnp
gs
jge
xchg
mov
jnp
lahf
jle
(bad)
pop
push
mov
cwde
sti
lods
retf
mov
(bad)
(bad)
and
mov
xchg
xchg
xor
das
test
fidivr
jns
add
shl
pop
repz
inc
jmp
cmp
lea
sub
or
xor
out
add
or
xchg
mov
xchg
sub
add
rcr
(bad)
push
sbb
or
shl
sahf
sub
push
lods
or
movs
fmulp
push
jmp
shr
cmps
and
int3
mov
retf
stc
mov
push
mov
lods
loop
fbstp
or
shl
test
cmp
sar
lds
adc
xor
dec
(bad)
stos
xchg
xchg
xor
icebp
(bad)
iret
mov
lds
lods
test
inc
or
pop
jno
xor
dec
in
jbe
mov
jne
mov
mov
pop
xchg
pop
cld
int3
cmp
inc
add
outs
sahf
in
into
mul
sbb
xor
inc
sub
or
iret
or
loope
and
mov
add
(bad)
pusha
inc
dec
pop
sub
shr
xchg
loop
lock
jge
jo
ins
mov
fst
mov
shl
push
lods
xchg
mov
cmp
dec
or
dec
or
inc
xlat
out
imul
test
aas
pop
shl
mov
sub
pushf
xchg
mov
neg
fsub
mov
mov
cmc
loop
clc
call
add
xor
push
pop
mov
mov
fdivp
pop
mov
push
popf
leave
aas
jmp
xlat
addr16
sub
nop
imul
cli
jae
loope
mov
or
mov
pop
scas
scas
loopne
scas
jp
and
repnz
dec
aad
scas
push
jp
add
rcr
jmp
loopne
aaa
inc
scas
outs
and
adc
mov
mov
test
xchg
repz
inc
jp
out
xchg
iret
ins
sbb
fs
not
cdq
inc
outs
clc
adc
mov
movs
clc
mov
xchg
mov
add
pop
(bad)
in
push
and
bound
jge
shl
xor
jns
push
push
push
pop
ror
ret
mov
aad
(bad)
jmp
jae
fwait
movs
retf
stos
retf
aam
daa
aaa
mov
push
mov
repz
fwait
xchg
scas
adc
lahf
fisubr
xor
dec
stos
out
ja
sbb
dec
out
push
sbb
sub
inc
dec
loopne
xchg
cld
cmp
into
les
out
fld
rcl
cmp
mov
lock
rol
cdq
jbe
jp
sub
and
test
push
sbb
inc
xor
ins
mov
mov
mov
out
sub
sub
xchg
pop
push
imul
dec
pusha
lahf
leave
stos
std
mov
sbb
imul
dec
ror
rcl
movs
lods
scas
outs
test
xchg
dec
ret
cmp
jb
daa
shl
adc
adc
cmps
dec
push
cmps
jne
xchg
adc
mov
or
inc
mov
and
sub
xor
(bad)
mov
mov
into
sti
(bad)
in
lods
push
mov
aad
xor
or
push
push
xchg
add
iret
jg
or
mov
xor
scas
ret
jns
lahf
and
and
or
out
dec
iret
cmp
mov
jmp
fmul
inc
fs
movs
xchg
test
dec
out
ins
test
pop
inc
leave
xchg
stos
cwde
rcl
test
push
arpl
repz
out
in
rol
dec
jbe
jecxz
lea
mov
cmp
and
mov
ret
js
push
stc
hlt
mov
adc
add
inc
int3
loopne
jmp
inc
jge
cwde
cmc
js
stc
mov
pop
test
shr
xchg
mov
or
pop
popf
das
sub
mov
xchg
cmp
push
mov
int3
data16
ss
sbb
lock
mov
jge
cli
cmp
push
enter
push
dec
shl
gs
dec
pushf
jo
jg
xor
rol
cmc
xor
lea
xor
in
mov
test
pop
sbb
xor
test
fld
jmp
test
push
pop
out
fcom
nop
inc
xchg
mov
adc
sub
cwde
jl
sub
fwait
not
mov
retf
std
movs
outs
stos
adc
je
or
inc
cmp
inc
dec
(bad)
out
inc
shl
fldenv
daa
and
pop
test
add
mov
pop
inc
sub
push
pushf
cmp
aaa
aas
shl
aad
cld
push
pop
cmp
cmp
(bad)
imul
fiadd
sar
mov
lods
fidivr
sbb
and
arpl
fstp
dec
mov
push
pop
ins
mov
push
in
jo
lods
adc
ss
and
movs
mov
jle
je
dec
enter
cmp
icebp
mov
or
out
mov
fstp
pop
dec
pop
lea
addr16
and
movs
sub
xchg
adc
inc
adc
push
test
sub
jne
test
mov
repnz
jmp
jle
xchg
iret
out
jecxz
out
xor
aaa
jmp
sbb
adc
mov
or
(bad)
int
dec
push
dec
xchg
dec
jb
or
and
dec
push
retf
pusha
or
cld
lahf
int
(bad)
into
ins
mov
(bad)
mov
mov
mov
jp
sub
sbb
cmps
xor
imul
fcom
fcom
icebp
mov
and
mov
test
inc
nop
mov
pop
mov
outs
adc
cli
scas
xchg
mov
adc
test
in
call
mov
out
sub
fcos
les
pop
pop
jno
lock
in
lods
movs
cmp
mov
push
jmp
fild
sbb
jnp
out
mov
out
pop
nop
gs
mov
outs
and
in
dec
imul
test
iret
inc
ror
xor
adc
or
push
fdivr
inc
cmp
dec
xor
les
sbb
lods
int3
inc
inc
cmps
sub
jecxz
or
repz
push
add
pop
daa
or
fidivr
and
or
cmps
outs
sbb
pop
inc
mov
mov
pop
pop
add
mov
jb
icebp
fstp
xchg
pop
stos
mov
retf
ficom
xor
aas
sub
jmp
sbb
out
cmp
sbb
loopne
push
mov
sbb
push
xchg
adc
dec
lds
dec
push
cmp
cmc
(bad)
hlt
cs
jo
addr16
addr16
and
fdiv
lea
xor
mov
push
mov
or
mov
(bad)
outs
mov
dec
int
inc
jb
jmp
mov
pop
cmps
sub
jne
jp
cmp
push
arpl
pop
lahf
mov
mov
cli
or
mov
and
(bad)
adc
cmps
mov
mov
xchg
out
ins
mov
iret
add
or
sbb
leave
adc
cmps
shl
mov
or
push
xor
icebp
fmul
out
push
cmp
loop
cmp
repnz
mov
lods
out
in
cmp
push
push
into
and
or
xchg
jbe
lea
sub
imul
sub
push
mov
push
xchg
mov
inc
outs
ret
imul
sub
or
neg
ficom
inc
xor
pop
je
jp
(bad)
test
(bad)
xlat
xchg
mov
leave
ficom
pop
rcl
setge
sbb
call
and
test
add
lds
adc
adc
add
jmp
push
in
jb
clc
lahf
mov
data16
jl
sbb
fcmove
cmp
bound
test
jg
jg
je
xchg
out
xor
push
mov
mov
mov
mov
cmp
sti
sub
cmp
sub
jmp
stos
in
jge
nop
push
(bad)
div
sub
nop
mov
add
pop
in
jno
add
jp
cmps
push
xor
ja
pop
sub
mov
les
inc
jns
and
es
xchg
jae
imul
(bad)
and
add
icebp
mov
pop
(bad)
push
mov
mov
icebp
adc
pop
sahf
push
inc
aad
stc
jmp
pop
mov
add
cmps
(bad)
xor
aas
mov
bound
aam
fnsave
or
lea
inc
std
in
xor
pop
aaa
les
push
fidivr
mov
pop
sub
push
mov
sbb
jecxz
ja
lea
adc
sbb
add
dec
test
jmp
dec
stc
mov
inc
sub
cmp
mov
mov
xor
dec
mov
repz
add
xchg
fild
pop
lahf
int
loope
inc
pop
pop
ret
jg
fwait
rep
jge
aaa
popf
out
pop
stc
inc
ds
ins
xchg
ret
inc
test
stos
adc
xor
cmp
retf
xor
xor
inc
imul
adc
inc
add
idiv
mov
fnstsw
jge
rcl
sbb
xchg
cs
jbe
add
movs
sub
ss
jnp
stc
dec
xchg
pop
mov
pop
test
xchg
sbb
mov
ret
outs
cli
ret
call
sbb
push
pop
mov
fadd
mov
scas
cmp
and
stos
pop
xchg
lds
mov
dec
cmp
mov
pop
or
dec
call
inc
rep
loop
jp
out
int
(bad)
pop
jo
adc
xor
mov
add
retf
call
aas
je
jge
pop
loopne
push
(bad)
stos
add
out
shl
(bad)
and
stos
fstp
gs
and
std
(bad)
mov
jmp
dec
fiadd
xchg
shr
cdq
out
xor
in
jno
das
gs
cdq
mov
or
xchg
cmps
ret
cdq
mov
adc
mov
and
mov
push
xchg
or
or
push
inc
sub
sub
mov
jg
mov
lahf
loopne
add
mov
test
mov
xchg
push
mov
pop
dec
cdq
sbb
xchg
aas
or
fwait
std
adc
test
push
adc
pop
rcl
mov
pop
(bad)
pushf
call
add
jbe
jbe
xchg
retf
mov
stc
inc
aas
xchg
shl
cld
(bad)
mov
out
cmps
pop
js
sub
outs
mov
sub
sub
push
cmp
arpl
into
inc
jmp
jg
cld
hlt
aam
sbb
xchg
adc
mov
fwait
ds
lods
retf
cs
jno
rcl
sub
(bad)
push
shl
xor
test
xor
sbb
push
cli
test
and
int
and
push
cmps
xor
ret
fisttp
(bad)
or
inc
cmp
jl
(bad)
stos
loop
rcr
push
int
stc
jae
jno
cmc
mov
aam
mov
mov
dec
nop
lea
sub
xchg
cli
cmps
push
dec
mov
mov
test
pop
cmp
cdq
xlat
jl
fs
add
mov
mov
cmp
cli
(bad)
mov
jae
stos
in
mov
aaa
inc
stos
out
pop
xor
push
dec
sub
retf
mov
fisttp
push
pop
rcr
and
mov
aad
ins
adc
out
push
sar
and
jns
mov
inc
mov
inc
jmp
mov
add
sbb
in
push
lock
into
ins
pop
sub
mov
xchg
fsub
cmp
jne
xchg
retf
xchg
jmp
push
jno
and
xchg
xchg
not
data16
imul
xchg
popf
mov
(bad)
in
sbb
cmp
add
ret
pop
jo
in
data16
pop
out
xchg
test
pop
xor
and
unpcklps
neg
ret
lods
push
pop
nop
dec
jl
fild
cmc
lahf
repnz
ins
mov
and
adc
push
std
mov
shr
nop
outs
adc
and
movq
ret
dec
neg
sub
mov
adc
dec
lock
cmp
leave
pushf
push
cmp
ds
shl
outs
imul
(bad)
sub
and
or
push
push
pop
or
mov
bound
mov
cmp
dec
movs
dec
mov
ret
inc
popa
js
sub
outs
movs
sahf
mov
pusha
jb
cs
fadd
jnp
cwde
mov
jb
outs
clc
pop
pop
in
mov
(bad)
or
imul
mov
les
pop
add
push
sbb
ror
addr16
jmp
(bad)
lock
in
inc
pop
(bad)
sti
sub
and
dec
mov
ins
call
mov
imul
mov
mov
mov
fistp
or
mov
jge
shl
xor
(bad)
ins
sti
les
(bad)
call
popf
or
mov
scas
movs
popf
mov
jo
adc
push
dec
lds
inc
mov
cmp
sbb
push
retf
cs
pop
sbb
adc
sbb
pop
cmp
pop
aas
xchg
xor
and
xor
sub
aas
movs
mov
add
cmp
push
mov
in
icebp
sub
aad
inc
and
pop
into
in
sbb
imul
repz
mov
imul
pop
dec
inc
test
(bad)
dec
je
pop
adc
jg
out
push
in
cmp
out
inc
mov
adc
rol
push
lods
xor
xchg
mov
jecxz
ja
icebp
in
xor
xor
into
clc
ins
xor
repnz
ins
jg
jecxz
div
fucomip
adc
sub
neg
mov
mov
jo
cwde
xor
xor
mov
push
mov
gs
add
fist
pop
push
sbb
xchg
mov
inc
movs
sub
gs
inc
out
cmp
(bad)
fdiv
jecxz
mov
mov
xor
sub
les
cmp
test
aaa
xlat
pop
push
ss
iret
rcl
loop
jbe
aam
pop
fadd
pop
mov
loopne
xor
or
stos
add
cmp
stos
adc
push
call
push
xchg
dec
sub
jl
call
movhps
mov
sti
imul
inc
inc
daa
xor
add
inc
jle
aad
rcl
mov
add
data16
sbb
cmp
push
adc
inc
sub
inc
fmul
(bad)
enter
dec
into
jl
sbb
inc
sbb
and
lea
icebp
sahf
arpl
rol
and
jge
daa
sbb
adc
ror
mov
pop
call
(bad)
idiv
jle
ret
fbld
dec
jo
sub
lods
outs
dec
lahf
test
dec
lods
ror
sub
(bad)
stos
inc
in
jb
arpl
cmc
push
shl
fstp
xchg
and
and
lds
fdivr
jmp
loop
test
mov
mov
push
jmp
mov
xor
dec
and
xchg
sbb
push
jmp
aad
in
inc
icebp
inc
ficom
stc
repnz
xor
mov
adc
int3
daa
mov
mov
adc
out
sti
cmp
pop
sbb
inc
mov
mov
sub
pop
pop
ins
stos
cmove
pop
stos
inc
mov
push
push
adc
leave
xlat
rcr
xor
not
lds
sub
in
xchg
loop
jmp
sbb
cmp
adc
cmp
xchg
xchg
adc
push
add
mov
sub
sub
(bad)
mov
imul
sub
loope
mov
gs
out
pop
and
adc
fs
add
cs
mov
adc
sti
mov
and
mov
adc
aad
dec
out
push
clc
push
mov
sub
test
adc
jg
enter
das
es
or
mov
movs
(bad)
mov
clc
dec
or
cmp
inc
jnp
test
sbb
(bad)
inc
sub
data16
push
jp
les
pop
jge
leave
cmp
cmp
fsubp
xor
test
push
fs
inc
shl
xchg
push
inc
jo
pop
adc
(bad)
sahf
pop
push
xlat
xchg
imul
pop
cmp
leave
paddsw
push
pop
jmp
int
cmp
xchg
popf
popf
popf
mov
mov
sub
lahf
jle
sar
xchg
adc
mov
sbb
pop
cli
je
movs
rol
xchg
in
ret
adc
les
adc
jns
rol
xor
and
adc
xchg
pop
adc
sub
or
call
pop
stos
mov
inc
scas
jmp
jns
lea
jl
scas
sahf
jmp
push
push
mov
or
cmc
iret
jle
aam
pop
aad
dec
iret
out
jmp
les
pop
retf
aaa
cmps
iret
movs
adc
sub
xlat
lods
add
jle
movs
rcr
shl
cmc
and
xchg
(bad)
stos
xchg
repnz
psubusb
test
es
test
repz
adc
sbb
mov
enter
or
daa
add
inc
mov
cmp
fimul
add
sbb
inc
sub
repz
cmp
int3
fild
outs
push
in
test
adc
inc
out
pop
int
fcmovne
add
mul
(bad)
mov
sub
push
cmp
xchg
out
ds
or
jne
fdivr
cmp
ins
and
iret
sub
or
jge
inc
add
ret
lods
aas
xchg
outs
loope
mov
clc
push
bound
(bad)
mov
mov
loope
jno
push
push
push
in
popa
ss
cmp
loop
nop
call
loopne
popa
pop
call
daa
mov
mov
fistp
mov
adc
lock
add
sub
movs
mov
sar
iret
pop
movs
es
sub
jecxz
jecxz
cmp
in
movs
sub
div
lods
je
add
imul
rol
mov
test
mov
adc
sahf
jnp
mov
movs
jle
sbb
mov
retf
inc
mov
imul
(bad)
scas
and
dec
xor
je
jmp
fsqrt
das
add
in
loopne
lahf
cmp
xor
push
sbb
jp
les
cs
cmps
and
cdq
jno
out
(bad)
jne
fstp
scas
(bad)
into
jbe
mov
int
repz
jne
cwde
push
cmps
sahf
xor
mov
pop
sub
add
clc
dec
icebp
mov
add
jmp
jl
leave
jb
cdq
adc
sbb
or
pop
xchg
repnz
iret
add
mov
inc
mov
scas
pop
xchg
push
mov
jae
pop
xor
dec
push
jl
mov
(bad)
jmp
push
cmc
in
repz
cmc
jp
movs
pop
and
xor
je
push
or
fadd
je
movs
jb
jmp
lods
add
dec
sahf
inc
ficom
call
sub
sbb
push
loope
arpl
into
mov
fs
jbe
not
fwait
and
mov
les
cmp
(bad)
mov
into
clc
into
jg
and
(bad)
out
push
cmp
cmp
cld
sbb
in
dec
mul
shl
and
sbb
adc
push
imul
leave
cwde
push
xor
in
jp
ss
leave
mov
cmp
or
dec
xchg
inc
call
adc
arpl
push
fnstenv
ss
xchg
sub
gs
cs
dec
inc
test
or
ficom
ret
jae
movs
shr
mov
pop
add
push
inc
retf
mov
sbb
pop
push
ins
sti
or
lods
jp
int3
repnz
out
fmul
xchg
mov
sbb
sub
into
in
addr16
push
mov
mov
sub
loopne
dec
jmp
test
test
addr16
lea
sub
imul
mov
jae
mov
lahf
fs
inc
mov
adc
xor
adc
iret
mov
inc
push
in
push
cmps
das
gs
stos
daa
dec
add
mov
sbb
call
inc
fwait
retf
jmp
cli
add
aad
mov
mov
inc
mov
ret
out
and
call
push
(bad)
adc
jno
fstp
inc
pop
adc
cli
shl
fwait
pop
test
jl
sub
dec
bnd
cmp
loop
cwde
loopne
or
scas
jb
sub
hlt
mov
cmps
mov
sub
inc
es
dec
cdq
dec
inc
and
loope
out
stos
mov
movs
call
jecxz
dec
and
push
mov
pusha
xchg
jle
int3
jge
test
mov
test
inc
or
mov
sub
pop
fld
lock
cmp
fwait
jle
pop
ror
ret
sahf
sbb
and
int3
adc
imul
pusha
dec
mov
lahf
aam
xacquire
rol
scas
jg
pop
hlt
popa
push
jbe
mov
lods
mov
jb
and
leave
dec
xchg
leave
rcl
lock
or
call
clc
xor
rcr
add
dec
inc
loope
or
shr
int
rol
je
push
or
bound
inc
cld
shl
inc
ins
push
sub
inc
pop
leave
push
call
es
adc
mov
pushf
(bad)
mov
aaa
or
call
cmp
push
mov
scas
mov
fild
sub
movs
pop
mov
nop
clc
ror
daa
adc
leave
cmps
aas
inc
pop
test
sub
adc
popa
push
imul
imul
push
popa
inc
jmp
adc
scas
pop
mov
imul
pop
cmps
mov
pop
outs
adc
jp
or
mov
sahf
add
mov
repnz
int
rol
and
pop
sub
cmp
stos
out
clc
or
das
mov
lds
mov
shr
sub
sbb
cmp
push
aaa
retf
nop
(bad)
out
int
fmul
cmp
mov
xchg
mov
jo
cli
sar
aaa
push
push
add
cmp
es
push
cmp
fwait
sbb
pop
or
stc
pop
pop
imul
cmp
test
gs
inc
fild
out
xor
iret
sbb
in
jl
ins
or
aad
outs
scas
jecxz
ret
or
aas
mov
sbb
pop
out
jno
xor
push
out
out
(bad)
(bad)
cmp
mov
aas
stos
fbstp
prefetch
daa
call
(bad)
data16
push
add
push
add
pusha
mov
lds
xor
mov
retf
scas
outs
cmp
push
sub
(bad)
pop
outs
push
popf
xor
mov
sub
sub
icebp
add
pop
in
fild
aad
les
push
xchg
mov
xor
cs
ss
inc
inc
jb
inc
shl
das
dec
nop
aam
pop
fcom
sub
sbb
push
imul
mov
mov
sbb
fwait
arpl
jo
inc
or
pop
into
mov
jbe
or
jne
cwde
fld
or
jns
scas
mov
sub
xchg
ja
xchg
out
cmp
in
or
or
imul
inc
mov
cmp
sbb
mov
jecxz
or
ret
jmp
add
addr16
fstp
mov
pop
aaa
sub
xchg
shr
mov
push
mov
outs
or
xor
or
out
push
push
or
mov
notrack
and
cs
mov
sub
push
dec
push
xchg
xor
xlat
pop
out
mov
gs
cli
cmp
test
add
cli
add
aas
sbb
mov
scas
jmp
movs
push
or
inc
hlt
mov
(bad)
fcos
jecxz
mov
cmp
xor
pop
(bad)
mov
ror
popa
sbb
lock
fld
jge
sub
int
adc
mov
or
(bad)
ins
mov
loop
or
or
mov
inc
sub
arpl
in
sbb
popf
rol
rcr
adc
or
(bad)
fsubr
addr16
adc
mov
or
push
xchg
(bad)
je
or
adc
xchg
shl
jl
fmul
in
inc
and
mov
push
push
add
jle
out
cli
je
in
or
or
fldenv
pop
popa
xchg
dec
dec
pop
jge
sbb
xchg
in
xchg
out
pop
jp
test
adc
mov
add
mov
popa
jecxz
mov
push
sbb
cs
fisttp
pop
adc
repz
sar
aad
mov
out
push
cmps
jge
jb
rcl
imul
out
retf
push
cdq
frstor
adc
push
sub
cmc
hlt
add
jbe
je
mov
fstp
sbb
(bad)
test
and
push
ret
inc
sub
fwait
xchg
pop
out
movs
daa
inc
pop
dec
inc
mov
rol
(bad)
fldl2e
stos
neg
push
fimul
jl
cmps
push
mov
fsub
je
jmp
adc
je
bound
out
push
xchg
pop
jmp
dec
rcr
dec
pop
fcomp
and
dec
loope
rcl
aas
test
pop
iret
(bad)
pop
dec
test
cdq
retf
scas
or
xor
repz
movs
pop
dec
and
loopne
in
dec
das
ror
push
inc
rcr
add
pop
lods
addr16
scas
inc
dec
out
cmps
mov
dec
push
sar
ret
int
cli
adc
cmp
and
in
outs
jbe
jle
sbb
stos
in
and
add
fisubr
xor
mov
push
in
stc
mov
mov
pushf
push
adc
and
jmp
mov
dec
ins
jnp
mov
and
frstor
(bad)
dec
pop
in
mov
rol
or
stos
mov
add
jg
dec
pop
popf
add
(bad)
cmp
shl
not
aaa
pop
mov
ds
xor
enter
push
(bad)
cmc
mov
jne
pop
xchg
cld
fs
dec
jge
cmp
pop
ret
jmp
int3
and
dec
test
sub
out
shr
inc
int3
mov
dec
pop
out
hlt
jmp
in
int
lods
mov
enter
stc
inc
xor
mov
xchg
cld
icebp
imul
das
sub
je
adc
(bad)
jmp
mov
xchg
mov
xor
ror
icebp
mov
inc
movs
push
inc
cmp
xchg
lods
nop
hlt
jmp
mov
test
mov
sti
adc
scas
test
je
sti
mov
jns
iret
lods
push
dec
and
sbb
dec
(bad)
sar
mov
push
pop
and
mov
outs
pop
adc
jmp
and
fsubr
dec
ins
popf
xchg
pop
mov
in
cmp
and
and
mov
cwde
call
imul
xchg
mov
inc
leave
test
mov
rol
cdq
inc
stos
mov
sahf
inc
xchg
mov
mov
cmp
ja
sub
fcmovnb
les
rcr
fyl2xp1
mov
cmp
das
es
dec
mov
adc
or
mov
stos
mov
jl
iret
mov
xor
lds
xor
cmp
cmp
xchg
std
add
dec
movs
xlat
cli
cmp
jge
aam
mov
in
jg
sub
loope
inc
mov
in
pop
fisttp
mov
enter
xor
xor
movs
dec
mov
pusha
imul
pop
inc
mov
test
lahf
xlat
cmp
add
jno
inc
jbe
jns
and
gs
dec
mov
push
pop
adc
mov
adc
arpl
(bad)
fild
ficom
fwait
xchg
mov
in
popf
jg
imul
bswap
and
inc
mov
xchg
(bad)
pop
sar
pop
test
mov
ss
xor
xchg
or
into
ffree
sub
pop
fdivr
addr16
stos
adc
jo
sbb
xor
cmp
fwait
jl
push
pop
cmp
test
or
(bad)
popf
xchg
sbb
inc
xor
mov
minps
and
push
dec
clc
int
ss
rcl
leave
bound
mov
push
dec
dec
cmc
jne
pop
shl
inc
ficomp
mov
pop
and
dec
sbb
push
add
add
fwait
mul
call
and
gs
mov
jo
fcom
cmp
jb
in
bound
inc
stos
mov
lods
icebp
js
scas
outs
add
jge
add
jl
or
lahf
fld
lahf
lea
cli
unpckhps
(bad)
es
cdq
pop
ins
daa
adc
inc
mov
cmp
aad
aad
ds
fwait
repz
ds
popa
pop
sub
adc
jns
jb
vunpckhpd
lahf
jmp
retf
out
or
idiv
fiadd
mov
cli
pushf
mov
mov
pop
mov
jp
rcl
stc
inc
bound
inc
sub
fs
bnd
xor
lods
xchg
xchg
stos
test
dec
nop
cmp
cmp
jl
(bad)
movs
mov
pop
sbb
xchg
and
cmc
repz
xchg
repz
(bad)
sub
test
adc
lods
or
cmp
(bad)
ror
popa
imul
push
(bad)
jns
push
mov
mov
shr
bound
das
push
lock
cmp
or
hlt
jns
in
jmp
mov
fst
mov
or
loope
sbb
pop
add
mov
push
add
imul
cmp
sub
jge
dec
iret
mov
jno
sbb
shl
mov
cld
mov
jg
loopne
(bad)
xor
push
push
clc
jl
ficom
pushf
xor
mov
adc
ja
cmp
cli
pop
not
pop
call
scas
xchg
mov
mov
pop
call
adc
sub
pop
neg
call
test
popf
cs
xchg
jl
lock
cmp
jle
aaa
out
mov
(bad)
fs
out
retf
mov
pop
(bad)
scas
in
jmp
outs
retf
mov
xor
sub
xor
or
jns
es
loop
cmp
cwde
dec
ror
or
(bad)
arpl
fisttp
add
xchg
push
xor
sub
push
mov
sbb
stos
repnz
(bad)
rcr
lods
adc
adc
dec
in
test
sbb
inc
loop
or
jmp
scas
movs
sub
hlt
inc
iret
imul
dec
jge
test
lea
xchg
test
aam
jae
push
mov
in
jo
jae
cvtpi2ps
mov
xchg
push
pop
cmps
xchg
ss
mov
push
cmps
add
imul
pop
jno
cs
jb
imul
sbb
push
jne
push
add
mov
pop
int3
mov
mov
and
jmp
jo
mov
fidivr
out
js
inc
add
xor
inc
scas
es
mov
stos
push
daa
dec
add
xchg
xchg
push
inc
dec
or
sbb
jg
dec
stc
push
or
pop
into
movs
stc
pop
mov
sbb
popf
or
or
je
fistp
(bad)
call
dec
push
hlt
xchg
mov
retf
loopne
sbb
push
loopne
sub
mov
add
mov
(bad)
aam
mov
push
mov
sbb
out
stc
cmps
dec
mov
out
mov
xchg
std
push
sahf
sbb
cmps
jmp
jae
jmp
sbb
jl
sub
mov
lahf
mov
cmp
xchg
(bad)
mov
mov
sub
jp
aaa
je
dec
es
in
adc
fsub
jmp
mov
mov
ins
dec
(bad)
outs
mov
push
xor
test
xor
jge
mov
lods
sbb
jecxz
aam
sub
pop
imul
in
jno
mov
cmp
ret
out
fidivr
loope
dec
add
loopne
add
or
pop
sbb
inc
call
sub
stos
sub
repnz
mov
jae
(bad)
loope
push
or
call
jo
into
scas
or
rcl
sub
fadd
repnz
fbstp
cmp
div
nop
hlt
mov
jo
inc
addr16
adc
pusha
test
xor
sahf
leave
dec
sub
and
in
outs
test
ds
pop
sti
ss
xchg
dec
push
xor
xor
(bad)
jg
sub
ds
iret
and
ins
xlat
into
leave
mov
(bad)
pop
pop
mov
xor
or
in
push
not
movs
in
cmc
and
jo
dec
setnp
popf
ins
pop
jno
data16
xor
(bad)
push
xchg
mov
fbld
cld
xor
and
adc
vfmaddsub213pd
cmp
adc
sbb
or
imul
xor
dec
cdq
pop
xlat
and
mov
mov
imul
(bad)
sub
ror
xor
adc
pop
xchg
sub
sub
sbb
xor
stos
(bad)
cmc
retf
daa
mov
lea
repz
sbb
outs
pop
dec
dec
ja
fcomp
add
inc
popa
sbb
lods
loope
or
push
push
retf
pop
retf
cmp
sti
je
jne
loopne
pusha
mov
fist
icebp
(bad)
mov
pop
call
adc
mov
mov
gs
xor
push
adc
in
pop
cmp
push
dec
test
and
add
ins
sub
fisttp
test
out
adc
int
mov
pop
mov
jmp
xlat
mov
or
adc
push
test
cwde
cmp
xor
cmp
and
retf
fsub
or
enter
sub
in
lods
cmp
addr16
cdq
jp
mov
push
fistp
sbb
pop
jb
add
in
fisubr
mov
mov
stc
arpl
adc
imul
sbb
and
push
idiv
sub
dec
pop
inc
shl
mov
pop
fldenv
sbb
sub
outs
outs
cmp
popf
retf
pop
pop
in
pop
ret
push
lds
mov
xor
scas
stos
add
jmp
fwait
xor
pop
(bad)
cmp
mov
fs
or
add
pop
push
jge
mov
aad
sbb
inc
je
sub
jnp
mov
jnp
shr
retf
fsubr
inc
repz
aam
jle
iret
push
jg
out
pop
lods
inc
icebp
mov
stos
retf
xchg
arpl
or
daa
in
jle
jbe
and
lds
hlt
sbb
cmps
hlt
mov
push
(bad)
cli
fsubr
sbb
push
std
fstp
pusha
dec
adc
repnz
xor
pop
test
xor
ret
test
jl
fld
(bad)
sbb
scas
and
xor
mov
cmp
call
lock
(bad)
mov
iret
pop
sub
es
fdivp
dec
(bad)
in
stc
and
cmp
push
cli
ret
xlat
and
jb
pop
push
in
sbb
cld
imul
or
call
or
lea
leave
cmps
sub
jl
pushf
sbb
cmc
cli
out
(bad)
iret
inc
iret
fadd
fucomip
xor
nop
dec
inc
sub
xchg
ja
cmps
fwait
mov
mov
pop
loopne
ror
ror
call
outs
xchg
inc
pop
aam
outs
cmc
in
daa
mov
jbe
jmp
ins
jbe
jbe
imul
sbb
pop
jg
cld
dec
add
repz
adc
ja
test
stc
mov
repnz
mov
sub
push
xchg
or
and
mov
in
cmp
jbe
out
out
mov
lods
mov
add
sub
clc
mul
mov
sbb
imul
add
je
jl
repz
outs
(bad)
fild
ss
popa
dec
daa
jle
cmp
js
int
arpl
pop
fs
push
loopne
shr
add
je
cmp
cmp
inc
ja
dec
cs
pop
xchg
dec
fnstenv
loopne
push
push
push
mov
mov
(bad)
adc
mov
inc
dec
add
inc
in
mov
xchg
daa
adc
aad
fiadd
add
mov
fiadd
in
data16
push
mov
push
cmps
push
pop
jmp
and
stos
adc
or
push
xor
mov
cmp
gs
(bad)
leave
pop
push
push
and
dec
mov
int3
ins
pop
daa
push
pop
loope
sub
push
call
mov
mov
(bad)
(bad)
mov
daa
ds
jae
mov
ror
js
cmp
dec
push
mov
ja
add
mov
and
test
pop
pop
sbb
or
sti
rol
push
repz
dec
mov
scas
jg
push
adc
cdq
setge
xchg
or
test
sbb
sub
call
xchg
mov
adc
pop
(bad)
ds
stos
cmps
(bad)
push
out
xchg
push
mov
cwde
sbb
lea
in
jae
push
mov
mov
mov
mov
fld
das
out
in
leave
adc
fist
push
and
popa
xor
leave
fs
push
daa
call
comiss
int
mov
push
icebp
sbb
or
and
je
sbb
(bad)
push
push
(bad)
sbb
movs
out
ds
sub
mov
inc
push
or
and
into
jno
loop
and
rcl
mov
std
loopne
mov
stc
in
mov
(bad)
outs
std
popf
adc
mov
test
pusha
shr
arpl
sbb
cmc
aas
fs
adc
leave
call
mov
inc
pop
pop
pop
pop
sub
arpl
mov
mov
dec
leave
jno
aam
xor
xchg
jp
mov
into
adc
jg
test
(bad)
scas
loope
inc
inc
outs
sbb
ds
cmc
push
mov
(bad)
jmp
jo
jmp
push
sbb
xchg
fistp
pop
into
dec
push
mov
adc
int3
in
cmp
jle
add
and
ss
push
sbb
dec
out
jbe
lock
pushf
jecxz
cmp
inc
mov
fistp
(bad)
lock
mov
mov
cdq
adc
and
sub
sbb
pushf
shr
mov
pop
inc
adc
inc
pop
xor
fild
ficomp
sahf
sub
(bad)
lds
fild
mov
and
mov
je
dec
mov
push
xchg
pop
push
xchg
add
imul
inc
mov
es
shl
xor
mov
lea
adc
outs
mov
(bad)
out
push
cmove
xchg
outs
test
retf
or
xchg
das
pop
mul
xor
icebp
in
call
mov
sub
shl
sbb
in
(bad)
cmovp
addr16
(bad)
div
mov
pop
sub
xor
lea
cmovnp
test
dec
sub
mov
loop
sub
sbb
xlat
xor
cs
out
sub
xor
mov
mov
mov
int
fnstsw
mov
mov
pop
or
jno
pop
add
or
sti
cwde
sub
cmp
mov
sbb
(bad)
push
ror
pop
scas
or
scas
pop
(bad)
pop
jno
std
shl
inc
or
push
push
jb
stos
mov
mov
mov
add
cmc
cdq
cmp
add
call
xor
out
xchg
push
test
gs
and
pop
jns
xchg
jbe
nop
daa
stos
push
sbb
(bad)
cs
data16
or
mov
xor
outs
call
add
test
inc
xorps
xchg
vmwrite
les
xchg
xor
mov
pop
add
push
ja
lock
shl
adc
es
stos
inc
cmps
adc
stos
mov
adc
cs
dec
fs
dec
(bad)
ss
jg
dec
jp
(bad)
fnsave
bound
(bad)
scas
push
jbe
cmp
or
adc
add
or
loop
dec
sti
pop
stos
out
or
mov
int3
pop
jp
retf
and
in
rol
arpl
jo
inc
pop
jecxz
(bad)
iret
loop
lea
jmp
sub
jb
inc
jns
or
popf
test
pcmpeqb
add
push
sbb
push
push
mov
jmp
add
aaa
mov
loope
cmp
shl
leave
aas
fdivp
fidiv
sub
fisubr
or
(bad)
pushf
jo
sub
ja
jg
repnz
sbb
xor
push
mov
pop
mov
fdiv
sub
inc
out
mov
aaa
inc
(bad)
pop
ins
inc
and
out
mov
je
and
cmp
mov
adc
cmp
retf
les
add
dec
xchg
inc
mov
push
ins
pop
retf
ret
jno
dec
push
sbb
cmp
jmp
add
pop
xor
ds
dec
adc
std
ins
mov
sbb
cs
in
mov
cmp
pop
and
popf
adc
scas
push
aam
xlat
dec
or
jmp
fist
xchg
js
loope
aad
lahf
inc
lahf
dec
in
call
mov
and
pusha
jmp
xchg
and
and
fcmovnbe
sub
pop
dec
ja
aas
fsub
adc
imul
pop
adc
or
cwde
xchg
mov
aad
mov
outs
add
mov
push
and
mov
aam
dec
add
xlat
lods
and
pop
mov
cmp
inc
loop
hlt
fnstcw
leave
pop
test
mov
ret
mov
add
pop
or
movs
(bad)
imul
mov
mov
jmp
mov
lods
pop
and
out
stos
jo
popf
imul
setns
jmp
add
push
and
xor
mov
scas
loopne
fwait
ds
sub
test
jecxz
add
outs
mov
in
(bad)
lahf
mov
lods
out
popf
lds
fcom
adc
gs
test
pop
mov
mov
cmp
ss
ret
or
mov
inc
or
fwait
push
xchg
xor
in
sub
not
mov
xor
pmuludq
rcr
scas
hlt
je
jg
ret
jp
jne
repz
(bad)
sub
les
pop
clc
add
sub
push
out
mov
xor
in
mov
mov
xor
pop
xor
es
push
or
aas
les
or
fwait
dec
ss
(bad)
xchg
ret
movs
ds
dec
xchg
repz
mov
xlat
cmps
xchg
sbb
gs
lock
int
repnz
sbb
outs
(bad)
cmc
push
xor
lods
lods
mov
and
adc
sub
(bad)
mov
into
inc
jmp
push
aaa
cmps
in
add
mov
push
stos
int
stos
cmp
or
jg
fs
dec
lods
sti
into
hlt
test
cmps
jbe
outs
int3
(bad)
dec
repnz
ret
mov
push
leave
jp
or
ss
in
shr
lock
ins
xchg
mov
lods
dec
and
jnp
mov
pop
sbb
aas
mov
js
fucomp
cmp
pop
lds
test
or
repz
jmp
push
dec
repz
pop
mov
int3
sbb
jmp
(bad)
rcl
jnp
scas
test
cld
jl
or
mov
adc
int
enter
xor
or
lods
aam
cmp
js
xor
xor
and
pop
dec
mov
fild
jg
leave
aad
push
rcl
out
inc
mov
and
into
xchg
mov
ds
jg
fadd
jae
mov
or
and
(bad)
cmps
adc
push
mov
inc
mov
xchg
loopne
jbe
movs
push
cli
imul
in
sbb
js
popf
pop
mov
pop
lods
pop
mov
imul
xor
(bad)
stos
sbb
mov
mov
scas
lahf
mov
mov
mov
mov
gs
sbb
pop
scas
xchg
adc
neg
jnp
add
dec
shr
out
in
adc
or
dec
arpl
test
cmp
loopne
(bad)
adc
inc
push
sub
cs
push
sub
clc
fadd
lea
outs
adc
pop
fiadd
bound
inc
cmps
xor
ficom
mov
and
inc
mov
rcr
and
and
test
leave
iret
push
jl
jecxz
nop
and
scas
fstp
aad
add
xor
add
(bad)
add
loop
sub
mov
in
jecxz
push
or
sbb
sbb
bound
jmp
push
jmp
icebp
aas
push
(bad)
enter
aaa
mov
rol
icebp
mov
psubq
leave
mov
dec
les
(bad)
jmp
jge
(bad)
mov
add
jp
movs
jmp
inc
dec
or
push
(bad)
enter
mov
in
cmp
cmp
xchg
rcl
lods
test
xchg
sbb
out
xchg
or
or
mov
mov
daa
xor
sbb
enter
shl
out
dec
jb
js
dec
rol
jl
push
in
sbb
lock
cmp
js
cmp
mov
cmp
add
(bad)
mov
rcl
enter
and
mov
mov
xchg
in
push
sub
jmp
inc
fwait
pop
scas
or
dec
ins
stos
sahf
sbb
lahf
(bad)
jmp
es
mov
popf
or
(bad)
retf
ins
pusha
pop
scas
lea
jmp
mov
pop
js
pop
inc
(bad)
xchg
dec
jmp
shl
add
mov
ins
stos
mov
jno
fisttp
jmp
out
xor
inc
leave
sbb
cs
push
out
ja
inc
in
adc
inc
and
or
sub
arpl
cmp
sbb
call
sub
jb
mov
or
mov
mov
rol
add
push
(bad)
call
jge
xor
sbb
jmp
test
popf
les
fs
retf
stos
repnz
dec
xor
imul
mov
movs
scas
dec
xor
out
jle
xor
cmp
mov
add
hlt
fcomp
cmp
stos
jecxz
cs
jno
pop
ins
inc
push
(bad)
sbb
cld
(bad)
jb
out
retf
bound
ret
mov
push
leave
inc
jp
test
jle
call
adc
mov
xchg
jnp
xor
dec
ss
sub
movs
jne
add
push
test
pop
pop
nop
sti
xchg
xchg
lahf
add
sub
fidivr
push
xchg
adc
aaa
push
in
jne
arpl
pushf
pop
jae
je
loopne
dec
in
loope
push
(bad)
sbb
push
fisub
jecxz
sbb
cwde
mov
fisttp
dec
sti
mov
es
xchg
test
push
xor
sbb
jb
jns
mov
inc
aad
sbb
int
fisttp
push
bound
adc
inc
pop
cwde
(bad)
cmp
mov
xchg
dec
(bad)
fild
and
lods
push
sar
(bad)
adc
dec
sub
in
jno
cmc
shr
sub
jle
clc
sub
mov
push
es
mov
mov
sub
imul
mov
(bad)
dec
mov
inc
sahf
inc
retf
mov
call
jp
lds
xor
add
mov
outs
cmp
mov
inc
ss
fisttp
in
enter
dec
fcmovne
cmp
or
aas
add
mov
sahf
lods
loop
push
outs
stc
cmp
jl
and
inc
xor
loop
js
pmulhuw
sbb
out
cwde
jnp
aad
jecxz
jecxz
xchg
(bad)
mov
adc
cld
pop
sti
xor
ja
repz
mov
dec
mov
cmp
movs
jne
vmwrite
sbb
mov
jmp
call
dec
and
mov
ins
xchg
add
or
scas
test
adc
popf
cmp
mov
nop
push
jmp
lds
std
ins
add
mov
pop
cmps
lods
adc
add
mov
enter
sbb
pop
shl
sbb
mov
sub
cmp
ds
mov
jo
test
je
sbb
inc
or
imul
add
out
pop
mov
dec
cs
or
aaa
or
sti
mov
xor
aad
shl
mov
sti
jbe
sbb
mov
add
ja
lahf
jb
repnz
push
jmp
(bad)
inc
push
push
xchg
icebp
dec
shr
(bad)
data16
mov
cmp
(bad)
mov
push
imul
cs
dec
jno
pop
ins
je
adc
ins
in
pop
in
push
cmp
add
inc
adc
add
dec
lea
inc
xchg
mov
scas
into
mov
cmp
(bad)
lahf
cmp
sub
sub
push
arpl
mov
add
and
daa
movs
rcr
dec
inc
dec
hlt
aas
xchg
pop
mov
(bad)
fld
cwde
lea
pop
mov
std
je
mov
test
and
mov
neg
or
xor
inc
jo
pop
mov
pop
pop
sub
sbb
and
or
mov
mov
sub
inc
mov
outs
jmp
and
cmp
ins
inc
sub
add
fs
mov
pop
sar
ins
xchg
sub
out
fs
mov
fdivrp
cmps
sahf
iret
mov
jns
cmp
scas
xlat
stos
inc
rcl
data16
je
in
(bad)
add
popa
adc
in
sub
jbe
push
cmp
pop
push
out
sbb
add
push
cmps
jo
xchg
movs
ja
mov
enter
fwait
push
xor
pop
mov
mov
push
add
push
lds
or
mov
test
jge
mov
das
xchg
dec
xchg
cmps
aaa
pcmpeqb
inc
mov
jmp
and
add
inc
xchg
loopne
rcr
aam
and
rol
mov
jge
push
mov
fnstcw
xlat
loop
rcr
retf
or
cmps
aas
gs
mov
or
lods
xchg
outs
and
fs
push
cmp
cmps
mov
ja
nop
rcl
stc
mov
push
cdq
mov
and
sbb
xchg
scas
imul
dec
cmp
sahf
sub
dec
jmp
scas
jp
inc
pop
push
(bad)
adc
pop
stos
inc
retf
jnp
fild
push
cli
pop
mov
std
pop
and
add
and
mov
jns
xchg
mov
or
adc
sahf
sub
mov
jne
sub
sub
repz
or
jnp
dec
mov
jmp
pop
scas
push
xchg
sbb
sbb
jbe
daa
(bad)
retf
les
mul
idiv
lods
cmp
scas
and
adc
loopne
shl
es
shl
pop
(bad)
xlat
add
jecxz
mov
sahf
jle
stos
mov
int
mov
les
lods
push
dec
aam
arpl
jns
fcom
scas
sti
mov
jno
sar
inc
imul
add
mov
mov
stos
loope
into
and
or
xchg
push
jb
mov
mov
out
pop
imul
movs
loope
push
push
(bad)
ret
mov
xor
add
xor
ins
push
mov
push
inc
out
xchg
dec
call
lods
pop
dec
cli
inc
leave
sbb
inc
ds
inc
js
call
icebp
call
call
cwde
cmp
mov
xchg
add
mov
mov
shl
sbb
sahf
xor
jge
push
pop
pop
jle
iret
iret
sbb
xchg
cli
jmp
or
xchg
(bad)
in
fst
scas
loopne
or
outs
mov
mov
mov
xchg
push
inc
inc
pusha
cmp
dec
jbe
mov
aas
stos
ror
icebp
adc
mov
adc
cwde
hlt
(bad)
cmp
push
fstp
pop
in
jmp
mov
push
daa
mov
inc
cmp
lods
adc
add
ja
push
les
mov
or
or
mov
xor
xchg
cmps
inc
in
and
loop
sbb
sbb
loope
stc
jne
aam
(bad)
dec
fisub
test
(bad)
movs
cmp
sub
and
mul
lock
mov
stos
sub
xlat
mov
leave
xchg
jp
xor
xchg
mov
push
fmul
mov
inc
imul
inc
add
sub
in
ror
rcl
adc
mov
inc
stos
add
pushf
push
pop
push
cmps
pushf
push
or
(bad)
mov
inc
aam
or
cmp
xchg
pusha
add
movs
xchg
xchg
adc
(bad)
int3
dec
mov
jo
sbb
mov
(bad)
pop
imul
call
push
repz
cmps
je
leave
out
test
leave
fld
fbstp
ss
aam
inc
adc
sbb
pop
xor
sbb
outs
lock
adc
int3
jecxz
outs
and
push
aas
jl
sbb
pop
sub
mov
es
aas
sub
mov
rcl
fdiv
mov
(bad)
(bad)
ins
sub
gs
jo
mov
(bad)
mov
daa
jbe
or
mov
mov
daa
js
rol
inc
adc
jb
scas
add
call
test
push
sar
ds
addr16
scas
stc
adc
js
aaa
sbb
jge
ins
or
mov
add
int
sub
and
lods
dec
jmp
lock
mov
xchg
cmps
jp
out
dec
inc
stos
aam
push
inc
inc
mov
lods
push
fistp
push
xchg
sub
add
fs
mov
addr16
xor
and
mov
lock
add
or
jg
shld
add
pop
sub
test
clc
cld
lea
test
xchg
cmp
fwait
pop
pop
lahf
mov
mov
outs
sub
mov
mov
inc
and
and
retf
fmulp
jg
jbe
jg
cmp
and
mov
mov
pop
into
outs
fdivr
int
cld
cwde
std
sub
sbb
dec
test
sub
cmp
lahf
sbb
inc
mov
cmps
movs
in
push
dec
add
sbb
adc
repz
int
addr16
push
sbb
cs
(bad)
test
cmps
dec
or
mov
xor
repz
in
stos
test
out
add
lods
lock
fnsave
jp
repnz
call
mov
data16
inc
xchg
bound
jbe
mov
add
pop
outs
cwde
mov
sahf
mov
aad
ror
cmp
sub
pop
pop
pop
lock
cmc
shr
jns
ss
cmp
xchg
jl
mov
sub
mov
cmp
xor
and
jge
dec
les
test
xor
lock
clc
sbb
xor
test
pop
adc
pop
add
cdq
cwde
loop
pop
sbb
pop
ss
sbb
pop
(bad)
hlt
stos
ins
cmps
or
or
jno
sub
lods
(bad)
jb
mov
push
ds
repnz
sahf
sub
mov
ja
adc
jge
sub
retf
fs
lock
xchg
or
in
shl
loope
imul
das
xchg
jo
cmp
and
jae
jae
fdivr
pop
test
enter
bound
js
pop
retf
push
push
sbb
mov
fs
xchg
mov
in
nop
adc
cmp
sub
paddsb
iret
xor
adc
ret
jmp
pop
pop
inc
sbb
add
adc
and
shl
data16
mov
in
cmps
out
movs
inc
xchg
fdiv
shr
pushf
sub
retf
bound
push
je
inc
pushf
and
mov
hlt
daa
lds
dec
in
mov
push
lods
mov
std
sbb
push
push
fisttp
sbb
jae
push
mov
sbb
call
jecxz
ret
inc
push
push
xchg
adc
xchg
mov
fidiv
mov
js
les
cmp
jl
retf
sbb
test
scas
nop
cmp
xor
xchg
and
call
dec
in
addr16
js
add
cmp
call
xor
out
mov
adc
in
stos
cli
out
mov
push
push
mov
jle
(bad)
or
mov
pop
mov
jbe
cdq
xchg
retf
push
pop
in
sbb
adc
outs
addr16
fcmovnbe
xor
repz
cmc
ret
cmp
push
push
cmps
inc
neg
mov
sti
mov
loope
mov
cmps
call
mov
cmp
push
and
sbb
das
lea
mov
and
aam
ins
xor
scas
add
fwait
enter
jmp
inc
cdq
lea
xor
cmp
push
mov
pop
daa
cmp
sub
xchg
jp
sbb
mov
bound
sti
cdq
sub
test
push
dec
or
mov
aam
test
imul
sbb
sbb
or
loop
aam
popa
adc
stos
sar
les
test
push
or
cmp
daa
call
mov
pop
xor
jae
clc
nop
xchg
jmp
or
es
lods
add
sub
cmp
rol
xchg
dec
popa
test
and
jmp
repz
fmul
jae
dec
loopne
stc
and
sub
pop
mov
mov
and
mov
push
add
pop
inc
je
adc
add
mov
push
xor
pop
mov
in
mov
leave
xchg
mov
add
bound
mov
mov
sub
inc
jecxz
je
xchg
adc
jnp
ret
inc
ja
xor
or
push
jnp
inc
stos
mov
stos
sbb
push
lock
sub
jmp
adc
pop
sub
pop
(bad)
xchg
mov
inc
xchg
mov
mov
rol
pop
cmps
push
xor
jp
push
in
xlat
cs
inc
out
xchg
add
jbe
pop
adc
and
mov
pop
jg
or
jg
outs
xchg
addr16
mov
xor
xchg
or
xor
xchg
adc
cli
pop
pop
shr
add
cmp
inc
dec
cmp
or
rcr
daa
add
lds
and
xchg
adc
jnp
cmp
push
jbe
inc
cmc
hlt
jae
shl
push
hlt
out
adc
lods
xchg
dec
aaa
cmp
fwait
enter
xchg
mov
push
adc
mov
cmc
imul
jns
je
xor
loope
fisubr
push
inc
or
xor
pop
test
cmp
push
retf
rcl
mov
retf
cmp
mov
adc
add
(bad)
(bad)
aam
nop
mov
ret
jbe
inc
sub
xchg
in
or
lds
jae
jbe
test
dec
dec
movs
cmp
ret
aas
(bad)
jg
mov
pop
mov
test
or
push
mov
mov
fs
test
xchg
call
mov
ret
scas
push
sbb
adc
mov
and
fsub
jmp
retf
xor
lods
cmp
movs
jp
rcr
jg
repz
jp
(bad)
(bad)
dec
sub
cmp
call
cmp
inc
push
rcr
pop
(bad)
mov
mov
aas
fsubr
sub
loopne
idiv
jle
mov
push
test
lds
out
push
inc
pop
imul
outs
cli
outs
inc
dec
push
or
cmp
test
add
test
es
dec
jge
pop
arpl
xchg
jecxz
sar
or
jno
add
dec
add
mov
daa
push
cwde
(bad)
adc
mov
jl
adc
jg
and
mov
push
sahf
ror
shl
cld
imul
in
rcl
mov
arpl
mov
fsub
ja
stos
inc
movs
jecxz
movs
lea
loope
dec
push
add
pop
sbb
popf
push
or
out
xchg
clc
lea
and
mov
std
fs
xchg
leave
pop
adc
adc
cmp
mov
std
dec
push
cmps
rcl
mov
imul
mov
cmp
out
jmp
pop
clc
xchg
sub
repz
dec
popa
sar
sub
xchg
inc
xchg
into
into
inc
xchg
mov
cmp
push
jno
push
inc
hlt
mov
ja
in
dec
call
pop
or
ret
cmp
fdivr
and
ret
call
cwde
sahf
test
cdq
pop
jns
or
mov
cmp
pop
xchg
mov
outs
enter
mov
xchg
mov
mov
mov
add
push
iret
aam
or
ret
xchg
xlat
ret
jl
add
xchg
inc
addr16
cmp
mov
inc
xchg
push
fstp
mov
sub
stos
xchg
rcr
jl
stos
mov
rcl
cmp
push
dec
and
xor
jb
mov
retf
scas
lock
cmp
mov
int3
and
xchg
jle
stos
movs
dec
div
sub
outs
add
push
in
mov
in
lahf
call
cmp
jl
xchg
mov
and
test
sbb
stos
lea
or
clc
popf
(bad)
sbb
push
out
add
cmp
push
jl
and
scas
mov
add
jo
xor
push
xor
int3
inc
ins
or
call
adc
aam
stos
lods
sub
sbb
mov
jp
shl
xchg
jae
aad
mov
jle
ror
pop
je
ja
inc
inc
inc
leave
mov
xchg
jne
fnstsw
in
aaa
add
push
es
push
inc
jns
in
add
or
pcmpgtd
adc
les
sbb
inc
inc
push
push
or
imul
xor
pop
inc
xchg
outs
jae
int
jbe
sbb
std
fild
xchg
sub
or
inc
shl
outs
into
outs
and
ret
mov
jecxz
(bad)
repz
fwait
add
mov
push
cmp
fdiv
fnstsw
jo
jle
inc
repnz
popf
fdiv
xchg
imul
dec
aam
sar
and
jae
add
leave
std
shr
adc
dec
loope
es
sub
dec
push
pop
mov
fcmovb
leave
xchg
mul
xchg
sub
scas
inc
(bad)
rol
test
addr16
xchg
retf
movs
jmp
cdq
icebp
mov
mov
jg
add
test
lds
in
and
loopne
pop
adc
dec
xor
jecxz
ins
push
cmp
xor
pop
test
ins
xor
mov
push
mov
mov
fld
cmp
out
pop
into
popa
xor
aam
push
fcmovnu
jmp
add
xchg
enter
enter
sbb
das
sbb
mov
into
int
jle
jbe
add
div
pop
and
(bad)
call
js
in
fld
push
scas
mov
(bad)
clc
test
sub
sbb
fistp
jmp
inc
xchg
outs
inc
dec
idiv
cmp
les
ds
lock
push
fsub
jmp
jmp
test
ror
xchg
fwait
inc
cmp
and
push
xchg
mov
pop
xchg
mov
outs
mov
mov
adc
or
pop
sub
xor
xlat
inc
scas
call
daa
lahf
in
test
lds
adc
push
xor
push
call
fisubr
not
mov
mov
outs
addr16
fdivr
push
les
jno
dec
ss
cld
mov
add
and
dec
out
dec
stos
cmp
test
jo
jo
dec
retf
sbb
daa
aas
mov
pop
jae
ins
addr16
test
and
push
dec
dec
mov
cld
jge
shl
mov
and
ret
outs
or
out
jp
jno
int3
jge
(bad)
sub
test
mov
test
pop
sub
rol
inc
loope
(bad)
jg
xor
cs
and
and
cmp
mov
and
mov
popa
push
jmp
pop
xchg
xor
inc
sub
mov
xor
aad
push
mov
and
and
movs
sub
jg
push
andps
sahf
ret
sbb
jp
sbb
cwde
test
inc
nop
es
cs
ret
adc
pop
mov
add
jbe
test
sub
mov
cmp
jmp
loopne
mov
cmp
test
push
pop
pop
out
mov
cmp
jl
gs
and
out
xchg
dec
xchg
dec
cmps
aaa
enter
mov
jno
xchg
inc
dec
cmp
push
or
(bad)
sbb
mov
mov
xchg
scas
and
xchg
repnz
jbe
cdq
inc
das
dec
in
cmc
jae
mov
test
fisubr
neg
ror
cmp
xchg
loopne
fdivp
dec
arpl
jle
xchg
push
adc
or
movs
or
dec
ja
xchg
in
imul
add
scas
sti
rcl
cdq
jns
mov
das
sahf
in
add
(bad)
xchg
test
or
sub
(bad)
cmp
mov
add
ret
shl
jecxz
inc
(bad)
push
mov
cld
ins
jg
fmul
scas
mov
je
jg
adc
clc
je
dec
pushf
xor
(bad)
imul
push
mov
pushf
in
scas
inc
sbb
cmp
mov
xchg
push
fs
adc
or
repnz
clc
aaa
push
xor
stc
out
mov
inc
mov
xchg
jnp
rcr
add
push
inc
fisttp
push
inc
pop
dec
push
sub
pop
test
push
test
add
jmp
shl
test
aad
mov
cwde
(bad)
jmp
push
stos
xchg
sbb
lds
imul
xchg
push
or
and
xor
mov
rol
popf
mov
cmps
(bad)
sbb
data16
inc
sub
je
inc
mov
mov
out
movs
test
repz
mov
std
push
hlt
fsub
js
pop
fnstenv
jbe
ins
pop
movups
ss
jg
and
in
into
sbb
inc
dec
inc
mov
xchg
or
movs
cwde
fsub
sldt
jo
inc
js
xchg
aaa
inc
pop
xchg
ins
push
mov
dec
(bad)
sar
pop
and
and
aam
mov
mov
aaa
pop
inc
inc
(bad)
push
fcom
aam
push
clc
pop
pop
push
addr16
dec
enter
lock
ret
sbb
loope
iret
mov
(bad)
daa
les
push
into
mov
mov
in
jno
push
add
fucomip
test
add
mov
xor
cmp
lods
adc
stos
repnz
popa
mov
sti
xchg
xor
imul
cdq
in
(bad)
pushf
sbb
repnz
enter
pop
jg
xchg
ret
or
or
pusha
and
test
call
lds
popf
adc
addr16
xchg
(bad)
pop
pop
push
jecxz
pusha
aaa
inc
push
outs
lds
inc
cmp
adc
dec
xor
inc
iret
sbb
mov
and
movs
data16
add
ret
popa
sar
jecxz
and
dec
sub
pop
imul
add
fwait
pop
imul
outs
xlat
pop
scas
fisttp
inc
jae
in
mov
out
jno
or
cdq
pop
std
dec
stc
push
aas
pop
jl
push
test
jg
loope
add
test
push
inc
fsubr
scas
leave
mov
inc
mov
adc
inc
pop
and
mov
jge
pop
sub
sbb
out
lods
dec
xchg
and
les
cli
mov
popf
sub
add
movs
sbb
cmp
add
push
adc
fidivr
ins
je
shr
out
leave
out
xchg
mov
(bad)
or
inc
xor
cmp
xchg
outs
push
jp
adc
lock
pop
aas
push
pop
and
inc
mov
stos
xchg
adc
ins
mov
xchg
out
push
in
inc
call
int3
stc
xchg
xor
int
out
popa
call
retf
(bad)
and
cmps
push
movs
out
pop
inc
push
aaa
pop
cmp
pop
push
jnp
or
mov
pop
test
test
hlt
ins
fnstcw
sub
shr
in
lock
aaa
scas
mov
add
and
cmps
mov
retf
sub
inc
les
cmps
addr16
push
mov
or
dec
inc
cmp
sbb
push
add
pop
inc
push
ja
or
mov
out
into
mov
(bad)
jae
mov
inc
xor
xor
xchg
daa
adc
xchg
inc
loop
jl
sbb
inc
fisub
mov
(bad)
push
inc
dec
inc
scas
inc
xor
add
cmp
dec
sbb
push
ret
cmp
lods
push
adc
mul
mov
push
jo
adc
or
mov
mov
inc
inc
or
or
dec
arpl
imul
lea
mov
arpl
pop
adc
pop
pop
ficomp
inc
sub
lds
aaa
lds
mov
gs
push
mov
inc
xor
cmp
scas
lea
xchg
xor
mov
adc
mov
and
popf
sbb
and
mov
in
and
jmp
ret
dec
dec
loopne
cmp
(bad)
cli
por
rol
out
in
mov
mov
mov
aaa
sahf
xchg
shl
imul
je
shr
pop
test
dec
adc
push
cmp
(bad)
inc
or
loop
xor
int
dec
movs
sbb
jl
aam
jp
xor
cmp
call
add
sub
sahf
(bad)
test
cli
sbb
aad
imul
push
add
pop
test
scas
into
ret
adc
adc
(bad)
out
sub
test
adc
shr
mov
xchg
call
pop
ret
mov
add
mov
adc
pushf
fcom
mov
add
or
cld
(bad)
mov
add
and
lods
pop
add
push
sbb
adc
mov
mov
mov
pusha
sub
and
mov
inc
xlat
addr16
mov
ror
icebp
loope
xchg
adc
stos
push
cmp
scas
jae
loope
pop
imul
inc
out
push
mov
cmc
pop
ds
and
scas
call
xlat
adc
in
pop
or
fst
aas
mov
and
jl
repnz
ins
jb
push
retf
lea
add
je
and
mov
inc
test
int
scas
pop
mov
jg
and
mov
jmp
sbb
stos
fdivr
adc
out
lea
mov
xchg
cmps
jbe
inc
jmp
neg
loop
jnp
or
push
mov
push
or
ret
lds
ss
mov
dec
nop
clc
scas
test
pushf
pop
sbb
dec
add
ret
sbb
imul
int3
(bad)
shl
shr
ja
stc
inc
ins
jmp
xor
mov
adc
fnstsw
sub
leave
rol
(bad)
mov
mov
adc
xor
mov
loopne
jb
ja
ins
enter
bound
lea
mov
sbb
xor
sub
ds
mov
ins
and
dec
call
xchg
aaa
mov
jle
aaa
rcr
imul
mov
pop
mov
mov
jne
mov
cwde
cld
js
fstp
enter
repz
xor
clc
out
nop
or
lods
jno
jmp
xor
push
cld
(bad)
push
sbb
sub
setno
mov
pop
shr
xchg
xor
imul
and
cwde
retf
pop
das
and
mov
jg
sbb
cmp
or
add
aam
mov
mov
and
test
jae
sar
jle
pop
aad
sbb
xor
push
mov
xor
cmp
push
icebp
adc
shr
aaa
sub
aas
clc
lods
cmps
inc
fs
mov
adc
jne
mov
mov
inc
les
mov
pop
icebp
sahf
loope
cmp
into
and
inc
frstor
fistp
out
adc
mov
mov
mov
into
sub
xchg
in
into
out
lahf
dec
cli
fnstenv
inc
rol
jae
push
or
and
jge
ret
std
inc
mov
rcl
push
jecxz
addr16
jmp
mov
call
xchg
mov
daa
push
push
fstp
inc
xor
add
outs
xchg
cmps
mov
cmp
pop
sar
xchg
or
ficom
jo
sub
sar
rol
inc
clc
dec
mov
xchg
mov
mov
(bad)
pop
adc
mov
ins
(bad)
mov
cmps
jle
test
gs
fnstsw
scas
rol
xchg
xor
mov
xchg
scas
mov
adc
movs
mov
dec
shl
mov
div
ds
add
add
sti
xchg
retf
sbb
ficomp
mov
fst
push
jmp
mov
cmps
fidiv
call
(bad)
int3
mov
psubsw
or
test
adc
xor
cmp
pop
adc
and
and
enter
retf
xor
push
sahf
sub
mov
dec
aas
jle
in
loop
cmps
adc
jge
popf
fs
push
in
inc
xchg
sub
lahf
push
adc
cmp
cmp
jbe
cmps
jg
push
aad
push
popa
rcl
lds
xor
cmp
pusha
jnp
cli
fist
test
sbb
or
inc
fldcw
aam
or
cdq
sbb
sub
(bad)
clc
cmc
jmp
xchg
mov
scas
call
rcl
fild
cli
mov
sub
push
mov
mov
push
mov
cs
ja
push
mov
fdiv
ins
add
pop
movs
not
mov
out
scas
icebp
inc
dec
int3
repnz
ret
adc
xlat
xor
mov
fnstsw
into
enter
out
jmp
fistp
ins
sub
sbb
iret
or
adc
inc
adc
rol
and
sti
aas
mov
cs
shl
stc
(bad)
mov
cmp
mov
in
pop
push
lods
(bad)
mov
inc
test
(bad)
xor
xor
and
retf
jnp
pop
test
imul
sti
xor
div
out
cmps
outs
mov
add
shr
ja
or
cmp
(bad)
sub
mov
fadd
cs
jo
xor
pop
out
cwde
add
mov
call
repz
fcomp
push
shr
loopne
leave
pusha
js
adc
stc
loop
and
mov
test
mov
(bad)
xor
loope
pop
lock
addr16
mov
sbb
pop
popf
push
jmp
xor
jecxz
(bad)
in
mov
cmp
aam
jg
loop
add
jnp
add
jle
mov
inc
stos
xor
pop
pop
call
sub
jmp
jmp
push
aaa
jae
jge
pop
xchg
sar
ficom
pop
test
jecxz
lea
gs
inc
pop
push
push
inc
rcr
xchg
or
add
mov
sbb
in
mov
frstor
mov
cmp
mov
popf
fst
cmp
sar
pop
and
sbb
cld
pop
push
ja
pop
push
jbe
aas
ret
lods
jae
shl
mov
hlt
jp
in
sahf
adc
sub
push
nop
out
repnz
sbb
hlt
lods
test
les
xchg
mov
cdq
xor
cmp
cmp
push
das
repnz
fs
or
pop
out
adc
inc
jae
mov
inc
test
movs
mov
and
das
movs
data16
loopne
cmp
loopne
outs
add
outs
jmp
adc
std
pop
shl
pop
mov
bound
retf
sub
pop
fs
hlt
test
jp
scas
mov
xchg
(bad)
push
addr16
ret
add
push
fld
jno
or
lds
in
fnsave
jge
out
lds
stc
imul
lea
inc
xchg
stc
outs
outs
xor
jns
les
out
mov
adc
add
sbb
pop
pop
pop
data16
cld
mov
cmc
mov
repz
sub
and
jg
jmp
cmc
enter
cdq
adc
or
(bad)
cli
xchg
mov
inc
outs
rcr
xchg
adc
pop
cdq
push
sub
and
loop
xchg
sahf
clc
jge
dec
mov
inc
(bad)
pop
lea
and
mov
pop
jle
nop
movs
or
daa
mov
mov
add
sub
in
cld
pop
dec
mov
xchg
retf
iret
rcl
cmp
ficom
sbb
callw
(bad)
adc
push
mov
pusha
dec
xchg
mov
dec
sti
xchg
ror
ins
mul
sbb
rcl
inc
pusha
test
test
push
jmp
jg
or
xchg
sbb
inc
mov
or
cmps
retf
or
jg
pop
inc
sub
adc
repnz
cmovns
(bad)
retf
mov
jg
(bad)
frstpm(287
cmp
sahf
cmp
push
and
mov
cmc
sbb
adc
mov
shr
inc
(bad)
and
add
cmp
dec
iret
lock
jne
retf
xor
adc
call
mov
int
cmps
inc
push
cwde
repz
mov
sub
shl
popa
or
pop
mov
xor
mov
mov
push
xor
mov
lahf
xchg
ds
or
add
mov
cmps
data16
dec
scas
mov
push
push
lahf
jge
add
rcl
mov
sub
cmp
out
movs
fild
pop
jnp
sti
xor
test
into
add
fadd
pop
iret
pop
sub
mov
jg
xchg
iret
mov
mov
mov
push
adc
fbstp
ror
xor
push
fdiv
jmp
cmp
mov
xor
loope
imul
and
shl
int3
dec
mov
shl
lods
sub
cld
(bad)
out
add
test
cs
cli
jle
fcomp
mov
ja
pop
mov
test
mov
push
outs
repnz
and
push
jae
dec
in
int3
inc
imul
fs
sub
loopne
fsub
imul
push
xchg
mov
inc
(bad)
and
(bad)
pop
adc
sub
in
in
jo
jle
movs
mov
push
hlt
scas
fidivr
mov
jne
mov
into
aas
inc
loop
inc
sub
push
ss
(bad)
inc
pusha
dec
jbe
(bad)
fwait
push
inc
sbb
sbb
pop
pop
gs
stc
fs
and
cwde
into
into
pop
loop
lods
fsub
fidiv
and
(bad)
and
jnp
xchg
dec
ins
inc
lock
mov
jb
cmc
daa
xchg
mov
int3
lods
scas
or
mov
dec
movs
call
das
loop
or
adc
cmp
jb
jmp
inc
test
(bad)
sub
in
imul
nop
mov
inc
int3
xchg
push
mov
xchg
loop
leave
loope
sbb
push
cdq
in
xor
push
addr16
cdq
pop
retf
not
pop
and
in
xchg
jno
sahf
or
lock
les
xchg
push
(bad)
xchg
push
cwde
lods
dec
fld
push
int3
and
sbb
xchg
in
xchg
dec
aaa
jmp
mov
mov
dec
(bad)
jne
test
ds
sbb
in
jl
outs
adc
dec
xchg
sub
sbb
test
imul
std
dec
retf
cmp
pop
out
add
xor
xlat
jge
add
xchg
retf
xchg
xor
sub
jge
xchg
sub
add
loop
push
int3
call
mov
or
cmp
xchg
repnz
dec
je
add
add
mov
fwait
fs
sub
mov
fistp
and
push
pushf
push
cmps
cs
sbb
and
lahf
xor
push
int
fld
arpl
popw
xchg
adc
fs
and
mov
lods
lods
push
mov
test
ins
test
push
pop
inc
(bad)
and
pop
push
jmp
xor
add
rol
mov
sub
jne
ins
mov
jns
shl
std
or
push
xchg
ficomp
movs
push
push
fist
(bad)
hlt
mov
and
xor
ror
hlt
pop
dec
shl
loopne
sbb
and
fcmovnb
xchg
inc
jg
adc
xchg
in
ret
mov
or
jns
and
repz
lods
sub
lods
mov
xor
js
(bad)
mov
xlat
add
sbb
xchg
jl
lods
adc
(bad)
mov
adc
lock
icebp
call
cs
mov
cmp
retf
jbe
push
fmul
adc
xor
mov
mov
adc
fs
push
fst
test
mov
xchg
mov
lds
mov
outs
out
out
pushf
mov
std
stos
cmp
cmp
fcom
std
mov
lods
mov
inc
jo
add
dec
push
cmps
lods
sbb
pusha
jno
or
add
mov
sbb
jae
les
into
cmp
iret
push
mov
out
dec
in
int
fadd
ror
add
pop
dec
(bad)
in
pop
gs
or
shr
fucom
or
mov
push
dec
mov
(bad)
in
neg
cwde
loope
gs
mov
xor
inc
das
xor
jae
xor
push
mov
jmp
hlt
sub
mov
rcl
adc
adc
repz
mov
std
lods
nop
inc
and
add
jbe
call
inc
inc
mov
loope
jns
sbb
mov
cwde
push
and
jecxz
xor
fsubp
inc
dec
add
add
out
push
push
in
and
push
adc
sti
data16
cmps
cmp
rcl
cmc
imul
mul
lock
rcr
jno
jg
sbb
je
loopne
stos
mov
push
sub
adc
fwait
push
and
cld
adc
ja
sbb
and
push
jge
add
scas
outs
icebp
bound
in
xchg
dec
ror
mov
xor
pop
pop
cmp
repnz
push
or
retf
push
jmp
aas
ins
cmp
cmp
jmp
adc
adc
je
jl
cmp
movs
hlt
push
dec
imul
or
and
jge
adc
mov
mov
in
push
out
jle
and
mov
cdq
(bad)
in
push
cmps
jb
das
cdq
out
sub
and
pop
add
scas
sbb
cwde
mov
push
cwde
or
stc
lods
push
in
fsub
aaa
stos
xchg
add
in
inc
push
sar
sub
mov
repnz
jg
cdq
sub
mov
add
jl
lods
rcr
in
dec
xor
pop
std
sar
mov
inc
sub
and
(bad)
xor
inc
mov
in
stos
cs
bound
(bad)
mov
les
mov
dec
fbstp
popa
shl
rcr
movs
shr
lods
call
inc
pop
jmp
ror
sub
pop
sub
xor
nop
retf
sbb
dec
ins
(bad)
dec
sub
lea
xchg
in
dec
cmp
cmp
and
je
sub
push
mov
dec
mov
imul
mov
jp
mov
push
in
inc
cmp
fild
jns
arpl
outs
in
fcmovb
push
xlat
pop
mov
jmp
inc
cmp
mov
lds
and
jmp
push
(bad)
repz
ficom
hlt
int
shl
push
sbb
je
xor
hlt
inc
cmps
or
jecxz
push
jmp
xor
fldcw
or
mov
retf
(bad)
fcomp
lods
mov
push
push
lds
xchg
sub
xor
inc
mov
shr
retf
cmp
jle
mov
pop
add
ret
mov
inc
adc
in
jno
sub
inc
push
rcl
scas
inc
mov
pop
xor
(bad)
imul
mov
pop
in
mov
sbb
daa
stc
add
aam
adc
mov
addr16
mov
inc
loopne
xchg
cwde
lods
retf
hlt
imul
mov
std
test
or
dec
add
scas
adc
add
add
pop
dec
scas
cmp
inc
sbb
call
adc
or
cmps
pop
pop
mov
push
add
or
dec
test
dec
pop
imul
leave
ror
sbb
jbe
inc
lahf
clc
adc
call
sub
pop
dec
test
xchg
jmp
adc
xchg
jmp
push
inc
out
xchg
call
jge
cmove
pop
int
inc
out
adc
jb
(bad)
retf
sbb
cmp
aam
mov
mov
fbld
fcom
xor
push
jns
push
or
fdiv
sub
jns
leave
xchg
pop
hlt
ins
idiv
neg
cmp
retf
cmp
sub
jae
jno
cld
js
test
daa
pusha
dec
imul
fisubr
ds
mov
(bad)
scas
test
inc
jns
rdtsc
int
xor
jmp
mov
test
scas
fisub
ror
xlat
pop
test
outs
test
sbb
pop
neg
lahf
pop
mov
xchg
push
adc
mov
call
push
pushf
cmc
mov
jmp
adc
mov
loopne
scas
(bad)
xor
loopne
and
pop
mov
in
lods
jb
inc
push
aam
aaa
ret
shr
mov
test
jo
inc
mov
jo
push
push
xchg
sub
pop
xor
jge
dec
out
sub
xor
or
fidiv
fistp
pop
dec
or
aad
pop
ins
or
mov
(bad)
in
and
jg
add
xchg
lods
jns
aas
jmp
adc
sub
push
add
data16
ret
mul
out
lds
mov
pusha
retf
sbb
adc
mov
xor
or
fxam
jb
mov
or
push
and
push
push
xchg
jl
rcr
mov
je
xchg
dec
or
outs
enterw
mov
lahf
cs
gs
shl
mov
(bad)
jmp
scas
pop
addr16
pop
rcr
mov
addr16
mov
sar
leave
lea
repz
mov
inc
dec
ret
sub
repnz
mov
cmp
iret
mov
daa
xor
fdivr
scas
repnz
cmp
push
ins
xor
push
inc
out
test
bound
inc
and
cmp
sar
dec
jmp
mov
das
xor
je
ss
lods
or
xchg
das
inc
loope
aaa
ja
or
in
jecxz
in
xchg
dec
and
fcmovnu
sar
cmp
xor
stos
mov
or
add
xchg
(bad)
lds
fxch
imul
jg
icebp
inc
mov
aas
jg
cmp
(bad)
aad
les
sub
(bad)
push
jl
icebp
sbb
call
lock
(bad)
rcl
sbb
jmp
std
loopne
ffree
imul
jl
adc
and
push
xchg
outs
sub
mov
and
faddp
movs
adc
add
mov
pop
xchg
ins
push
jno
hlt
js
inc
bound
in
xor
or
inc
test
jl
sbb
add
adc
mov
jge
ret
add
push
sbb
jbe
je
xor
cmp
or
scas
arpl
scas
pop
hlt
call
lahf
daa
cmc
sar
mov
fs
mov
xor
jge
sbb
adc
sub
in
dec
ss
inc
movs
cdq
addr16
vmovdqu
mov
or
jg
mov
xchg
cmp
mov
jmp
shr
pop
mov
int3
aas
add
cdq
cld
clc
push
mov
inc
je
ins
mov
mov
xchg
in
(bad)
mov
sub
sbb
lahf
call
jo
mov
cdq
mov
push
mov
sbb
lock
sub
pop
sbb
xchg
daa
in
in
rcr
mov
cmp
inc
inc
ror
daa
sbb
(bad)
rcl
pop
and
and
push
ret
mov
jle
xchg
fst
mov
push
adc
push
and
mov
mov
push
mov
outs
push
mov
jmp
ins
xor
and
rcl
daa
lea
jo
dec
jmp
and
imul
sub
or
add
xchg
cmp
adc
and
(bad)
jl
rol
push
push
cmps
(bad)
sbb
push
xchg
shl
cmp
gs
nop
push
push
and
sub
xor
ins
pop
and
iret
pop
adc
dec
aas
xor
sub
(bad)
fbld
in
sbb
cmps
cs
cmc
push
mov
repz
xchg
test
lahf
push
mov
(bad)
stos
jg
add
mov
call
fist
sub
jmp
adc
sub
mov
les
sar
dec
dec
mov
pop
cmp
out
hlt
stos
fdivr
jbe
dec
fs
add
and
movs
ret
mov
(bad)
push
pop
sbb
leave
sub
dec
cmp
int3
dec
imul
inc
pop
mov
xchg
inc
add
mov
scas
fmul
cmp
sbb
jbe
or
sub
push
jns
push
push
nop
rcr
(bad)
imul
inc
repz
sbb
inc
in
jge
loopne
dec
daa
pop
pop
mov
xchg
lods
test
push
or
iret
(bad)
fldenv
xor
push
sbb
shl
arpl
sahf
fild
je
push
and
push
loop
hlt
adc
(bad)
cld
repz
mov
xchg
ret
xchg
dec
stos
cmp
dec
mov
inc
and
mov
pop
aaa
cwde
jg
mov
cmp
mov
jmp
mov
adc
or
(bad)
cmc
inc
mov
in
out
pop
pop
jmp
std
inc
add
sbb
dec
dec
dec
addr16
adc
mov
lds
test
jmp
cmp
jno
call
mov
aas
aaa
inc
dec
scas
add
jmp
and
push
push
hlt
call
je
push
mov
aam
into
cmp
test
(bad)
test
or
inc
iret
inc
adc
pop
int
xchg
je
inc
cmps
daa
push
imul
cmp
retf
fisub
mov
cmp
dec
test
sbb
imul
sbb
xchg
fidivr
repz
jecxz
push
es
hlt
cmp
movs
fst
aas
push
inc
fild
pop
mov
retf
jne
and
mov
sbb
push
test
mov
sub
push
mov
xor
push
and
dec
icebp
xchg
pop
into
sahf
retf
and
ficomp
add
mov
ja
mov
and
inc
xor
mov
cmp
mov
inc
call
test
(bad)
in
loope
stos
cmps
dec
sti
add
es
repz
std
or
ins
out
jmp
push
fcomp
loopne
fmul
fdivr
or
ins
jb
add
cli
dec
stos
add
fisttp
daa
cmp
out
(bad)
loopne
movs
xor
pop
test
xchg
mov
adc
inc
ds
or
add
add
mov
cmp
jmp
mov
popa
pop
sti
mov
jg
nop
iret
dec
adc
cmps
jmp
sbb
adc
std
mov
loopne
jl
mov
adc
add
cmps
cmp
jnp
cmp
or
push
fstp
ret
xor
into
ret
xor
jno
push
popf
(bad)
cld
mov
loopne
in
into
add
cwde
inc
fmul
and
cdq
mov
sub
add
jns
mov
adc
loope
or
cwde
dec
mov
rcl
iret
jne
imul
jle
inc
mov
cmp
pop
pop
cmps
js
sbb
mov
xlat
push
out
addr16
pop
inc
mov
sbb
dec
jbe
mov
cmp
ins
ja
lock
xchg
push
mov
(bad)
xchg
pop
or
dec
jg
jg
jno
cmps
adc
lods
jmp
(bad)
(bad)
lds
fsubr
xlat
jle
sbb
mov
or
rol
sar
and
dec
fcomp
cmp
mov
add
icebp
ins
pop
addr16
or
jl
pop
(bad)
shl
popf
inc
stos
call
lahf
or
add
and
or
mov
jb
fist
dec
lock
(bad)
mov
cmp
sub
test
or
das
and
frstor
int
popa
cld
shr
ins
mov
adc
out
stos
jns
xchg
in
retf
fisttp
xor
aam
dec
xor
sbb
pop
mov
sbb
lods
pop
je
out
stos
push
adc
mov
pop
add
aaa
mov
mov
sti
retf
dec
aad
cmp
mov
scas
stos
or
jb
mov
div
pop
jnp
fistp
cmps
inc
cmp
push
jb
jnp
rol
xor
adc
add
stc
out
xchg
hlt
sub
cdq
fbld
adc
mov
push
inc
lahf
les
nop
fimul
(bad)
push
mov
pop
test
cmp
dec
mov
sub
(bad)
nop
jg
push
mov
gs
mov
pop
xchg
sti
or
cwde
sbb
sbb
cs
mov
jmp
(bad)
sub
sahf
cmc
xchg
jecxz
aaa
pop
das
xor
das
dec
mov
adc
leave
call
repz
push
or
rcr
add
sahf
jb
retf
cmp
push
dec
pop
adc
xchg
nop
imul
push
jle
xor
adc
(bad)
fdivr
xchg
idiv
das
and
mov
in
jnp
and
jecxz
jbe
outs
mov
fild
leave
push
pop
mov
xchg
stos
jmp
inc
icebp
(bad)
into
push
popa
pushf
hlt
jns
sbb
adc
fisub
das
mov
mov
push
arpl
outs
dec
lods
add
mov
scas
fsubr
repnz
pushf
dec
xlat
cmp
call
mov
stos
jmp
out
call
iret
pop
test
or
ret
add
rcr
fdiv
out
xchg
pop
jp
rol
sbb
jg
xchg
stos
test
dec
fwait
mov
std
fadd
cmc
adc
add
cmc
fs
dec
cmp
sub
shl
in
movs
or
stc
into
clc
mov
adc
cmc
pop
xchg
mov
rcr
fstp
sub
fucom
push
(bad)
sar
lock
iret
xchg
sub
and
xor
pop
mov
scas
imul
and
ds
ins
cmp
mov
rcr
or
xor
div
ror
mov
adc
cld
mov
cmp
(bad)
dec
sti
mov
and
xchg
xchg
or
sahf
sbb
js
add
fwait
add
mov
fcomip
ins
xor
test
retf
mov
in
(bad)
push
jnp
xor
adc
inc
loop
ret
mov
cmps
pop
scas
outs
stc
scas
xchg
in
pop
mov
dec
call
xchg
cmp
or
nop
mov
sti
xor
arpl
je
mov
imul
fwait
push
adc
movs
dec
mov
cmp
out
cmps
movs
inc
aad
mov
lock
aaa
push
pop
dec
inc
ror
add
bound
test
mov
scas
cmp
xchg
in
add
lahf
test
mov
cld
xchg
ins
aas
aad
ss
mov
dec
mov
arpl
or
inc
jl
in
arpl
xor
mov
mov
movs
mov
and
fstp
xchg
fisubr
sbb
outs
pop
push
js
mov
ins
fsubrp
dec
jg
mov
cwde
aad
lods
aad
sbb
outs
shr
gs
imul
clc
aad
stos
sbb
sub
mov
daa
(bad)
lahf
call
in
ja
lock
push
aam
or
mov
enter
inc
mov
fwait
xor
mov
cmp
das
es
out
mov
ss
xchg
mov
(bad)
out
mov
stos
xor
out
push
pop
xchg
adc
add
scas
ss
jp
cmp
push
jmp
(bad)
xor
sbb
jg
jmp
aam
ja
pop
jl
mov
or
cmp
and
ror
adc
lahf
sub
and
movs
fstp
sbb
stc
adc
inc
adc
aam
mov
jmp
xlat
aas
aad
pop
mov
enter
call
add
jno
arpl
jecxz
retf
xchg
(bad)
ror
jae
aaa
call
mov
and
jns
pop
xchg
(bad)
cmc
jp
xchg
jbe
jg
rcl
mov
mov
sub
jmp
fcom
xchg
mov
xor
pushf
(bad)
mov
bound
sar
shr
scas
dec
or
pop
bound
nop
hlt
repz
(bad)
pop
xchg
sbb
outs
div
push
mov
out
sub
out
sub
xchg
sbb
jmp
push
leave
shl
scas
inc
mov
addr16
out
sti
xchg
rcr
mov
mov
fdivr
in
in
sub
fisttp
jmp
rol
sti
clc
fwait
adc
inc
pop
stos
jb
cld
mov
or
pop
leave
xor
sub
test
dec
stc
js
pop
ret
cmp
stos
cli
pop
jmp
push
sbb
lods
xor
xor
enter
div
ret
mov
add
sub
repz
stc
push
jo
lea
or
xor
xor
int
and
jb
sub
xchg
mov
pop
adc
cmps
sub
mov
mov
sahf
inc
clc
cmp
sub
and
movs
jb
out
mov
shl
lahf
xchg
adc
or
push
pop
dec
ds
or
arpl
or
rcl
xchg
mov
ret
push
rcr
push
push
leave
inc
ja
imul
dec
mov
pop
sti
mov
in
into
push
leave
daa
xor
pop
jne
inc
ins
aaa
loope
sbb
int3
test
cmps
lock
stos
adc
adc
das
mov
cwde
dec
sub
sub
cmp
xchg
mov
cwde
add
gs
or
repz
iret
fisttp
sbb
cs
push
fs
jbe
mov
pushf
push
pusha
push
outs
add
mov
cmps
loop
jmp
repz
cmp
fadd
repnz
cld
pop
out
mov
shl
fwait
cmp
jp
rcr
ins
mov
and
cwde
int
and
add
rcr
fcmovb
retf
mov
pop
dec
mov
popf
ret
dec
stc
sbb
leave
ds
sbb
push
sbb
loop
jg
sbb
ret
test
(bad)
cdq
sub
loop
add
ins
das
cmp
icebp
xchg
adc
adc
adc
(bad)
xchg
and
lods
in
cmps
mov
scas
push
sti
and
es
push
dec
call
add
mov
(bad)
stc
pop
lahf
std
out
fwait
jecxz
mov
xchg
inc
ret
loope
into
push
test
mov
ror
outs
or
mov
mov
lods
cmp
div
fsubr
xor
les
cmp
call
mov
xchg
nop
xchg
(bad)
fisttp
cdq
jo
inc
push
add
fwait
in
out
cs
sbb
inc
xor
stos
arpl
xor
cld
and
lahf
cmc
stos
ret
mov
pop
mov
mov
aam
sub
inc
jbe
or
out
scas
push
push
in
sbb
leave
cmp
xor
iret
mov
mov
int3
mov
xchg
jno
push
clc
push
push
inc
and
mov
sub
popa
sub
imul
daa
adc
dec
adc
ds
xlat
int3
in
push
and
sar
pop
cmps
add
jae
int3
mov
pop
add
div
cld
inc
fwait
and
(bad)
jne
inc
mov
cmp
cmp
jns
lods
lea
push
or
clc
jg
adc
cmp
adc
jge
add
add
mov
jb
fmul
test
add
or
sbb
jno
cmp
retf
je
mov
icebp
lea
adc
add
sub
dec
cmp
inc
pop
cmp
inc
sub
sbb
mov
inc
or
jbe
adc
mov
adc
xor
daa
mov
xor
sub
sti
bound
jns
inc
(bad)
and
inc
cmp
fsubr
loope
out
(bad)
nop
or
cwde
addr16
daa
mov
add
ins
or
add
xchg
cmc
dec
xchg
dec
movs
adc
cwde
sbb
(bad)
push
inc
adc
inc
xchg
cs
push
or
mov
ds
jae
jmp
rol
xor
and
xchg
nop
sub
mov
xor
jb
dec
fistp
mov
xchg
adc
add
cld
je
jge
repz
popf
inc
mov
xchg
jmp
gs
daa
xchg
mov
inc
stos
in
daa
inc
jmp
(bad)
cmp
jge
scas
xor
popf
sub
cmp
xchg
push
mov
dec
cmc
ins
push
mov
dec
out
jl
mov
dec
imul
les
xchg
adc
mov
dec
daa
push
or
jo
in
enter
sti
jmp
outs
xchg
xor
scas
bound
mov
scas
adc
data16
retf
scas
sbb
pop
pop
adc
test
movs
dec
mov
fistp
pusha
(bad)
in
add
sbb
add
mov
dec
jae
jmp
jns
and
repnz
cmp
int
cmps
ss
xor
repz
lds
mov
addr16
adc
jmp
sahf
mov
test
arpl
inc
fcom
lds
pop
adc
enter
std
push
adc
out
into
repnz
lea
in
pop
sbb
jge
loopne
(bad)
out
in
or
icebp
sar
sbb
mov
cwde
ficom
push
hlt
pop
scas
mov
mov
push
inc
cmp
xor
sbb
jecxz
pushf
pop
sbb
(bad)
cmp
jne
aaa
push
inc
sub
cmc
cli
inc
dec
push
in
scas
outs
(bad)
fild
sbb
test
and
xchg
pop
jmp
je
(bad)
ds
xchg
cmp
(bad)
or
xchg
push
gs
adc
ret
jmp
xchg
mov
dec
ret
mov
mov
adc
cld
or
test
sbb
or
jne
rcr
jbe
or
xchg
mov
xor
jb
and
fidivr
hlt
test
push
ins
icebp
ins
cmp
fdiv
fcomi
adc
mov
and
jns
mov
cdq
jbe
hlt
push
arpl
stc
movs
es
sub
push
push
scas
and
fnstenv
cmc
(bad)
sbb
xchg
dec
mov
scas
mov
stc
xchg
sub
add
daa
and
or
cdq
cmp
in
pusha
icebp
mov
shr
sub
add
ror
ds
ja
pop
iret
add
xchg
sbb
inc
xchg
pop
sbb
gs
and
pop
rcl
push
jecxz
test
jecxz
call
movs
aaa
mov
and
repnz
cmp
jae
inc
stos
xchg
pop
imul
ds
inc
cwde
enter
clc
fiadd
push
ror
fwait
mov
inc
(bad)
mov
retf
pop
fsub
std
loop
clc
dec
mov
test
aaa
fstp
push
leave
fwait
ins
repnz
and
fldenv
mov
lods
test
inc
push
retf
retf
inc
retf
mov
xchg
jmp
push
jl
inc
test
fldenv
aam
pushf
cli
inc
push
jmp
sub
int3
sti
jge
cmp
ret
sbb
call
call
daa
pop
cld
dec
and
add
retf
jbe
push
in
cmp
sbb
in
shl
shl
adc
mov
inc
fisub
and
jo
xchg
jl
fistp
xchg
jo
cmp
jmp
loop
repnz
dec
fnsave
gs
lea
clc
movs
adc
in
fadd
jae
dec
(bad)
stc
fidiv
ss
popf
out
and
int
jl
inc
sti
push
lahf
popa
push
lock
bound
lea
faddp
jle
jl
or
pop
shr
xchg
adc
mov
or
int
jecxz
pop
add
jbe
inc
pop
adc
mov
in
sub
fimul
sbb
cmp
pop
xchg
fimul
fisubr
lods
cli
sub
rol
xchg
mov
aas
push
mov
xchg
and
in
jb
fs
addr16
je
shr
ret
mov
fs
sbb
add
sbb
(bad)
stc
movs
shr
mov
out
jns
lahf
sbb
mov
jae
in
int3
add
inc
cwde
inc
add
call
test
daa
imul
adc
mov
jns
arpl
cmp
bound
cmp
fcmovb
mov
lahf
and
xchg
xor
div
xchg
(bad)
fs
das
loope
dec
(bad)
cmp
push
scas
xchg
ss
js
cld
mov
into
test
mov
xchg
push
mov
mov
push
sub
adc
shr
cmp
jo
sbb
imul
arpl
sar
pop
or
xchg
pop
dec
mov
scas
movs
cmp
cmp
fimul
cpuid
enter
jl
mov
or
jmp
sbb
xchg
cmp
bound
fnstcw
mov
stos
jmp
xor
jne
sbb
and
js
sbb
test
ret
stos
xchg
popf
into
int
int
in
dec
(bad)
ss
inc
and
pop
mov
mov
out
push
add
call
and
jo
ror
sub
das
inc
call
ins
add
add
xlat
std
lock
jmp
sub
dec
rcl
nop
sub
ret
dec
ror
adc
enter
cdq
call
adc
aam
out
jb
xchg
pop
repnz
add
cmp
add
sti
mov
ret
jmp
in
(bad)
cmc
adc
aaa
cli
popa
dec
popf
lods
aas
push
movs
sbb
mov
movs
popa
jge
xchg
pushf
mov
sbb
cwde
out
jge
xor
push
lds
jmp
mov
loope
mov
js
mov
je
sar
sar
(bad)
jmp
jmp
aad
mov
dec
jae
push
and
dec
mov
stos
and
xor
das
xor
mov
cmps
add
jp
faddp
jmp
pop
xor
ror
pusha
inc
not
(bad)
push
xchg
daa
mov
js
adc
sub
hlt
adc
sbb
popf
lods
xchg
mov
(bad)
cmp
retf
inc
adc
adc
jne
mov
out
ins
or
outs
xchg
xchg
daa
push
push
loop
and
ja
xchg
mov
sbb
xchg
(bad)
loope
sbb
rdpkru
pop
mov
adc
(bad)
push
fild
or
leave
dec
ds
xchg
sub
and
sub
stos
xchg
ins
ins
cwde
test
xor
push
xor
xor
sbb
fldenv
nop
fadd
retf
mov
repnz
mov
or
cs
fyl2x
repz
(bad)
movs
imul
adc
lahf
fs
sti
ficom
aam
cmp
lahf
scas
push
iret
cli
jmp
push
pop
and
xor
scas
xor
cmps
xchg
mov
shl
data16
cmps
hlt
push
mov
mov
scas
out
scas
js
mov
(bad)
sbb
or
loop
sub
xchg
(bad)
cld
lahf
imul
ficom
jno
repz
xor
scas
cmp
cmp
pop
push
icebp
sbb
cmp
add
rcr
shl
test
(bad)
push
add
mov
icebp
mov
retf
add
and
cmp
add
xlat
les
pop
fdivr
cmp
outs
mov
sub
hlt
jnp
inc
je
mov
dec
loope
test
(bad)
(bad)
clc
xchg
out
add
retf
jg
fsubrp
mov
not
test
scas
sbb
pop
fwait
fwait
aaa
mov
mov
cmc
mov
es
mov
xor
test
into
mov
cmp
stos
adc
xor
jecxz
outs
xor
sbb
icebp
mov
dec
stc
adc
ds
stc
mov
inc
pop
frstor
inc
hlt
rcl
jae
inc
push
ja
and
xor
jno
repz
call
adc
fimul
xor
pop
test
mov
push
push
mov
ja
xchg
cmp
adc
inc
sar
or
ss
adc
adc
dec
out
stos
shl
shr
sbb
mov
cmp
movs
call
daa
in
cmp
inc
dec
sti
rcr
cmp
jl
mov
outs
jmp
or
mov
dec
or
icebp
xor
(bad)
pushw
sub
jmp
mov
icebp
ss
mov
xchg
add
or
scas
div
call
repnz
xor
rcr
mov
adc
rol
pushf
(bad)
cld
push
fdivp
sahf
jns
mov
ret
mov
addr16
adc
add
lods
jp
pop
lods
out
sbb
icebp
daa
jbe
or
add
ret
cmp
clc
shl
fadd
std
or
jno
jns
dec
(bad)
mov
pop
test
sub
rcl
mov
out
pop
jmp
stos
test
aaa
mov
ja
out
mov
push
cmp
mov
pop
test
adc
pusha
mov
std
(bad)
pushf
add
aad
imul
sbb
stos
aaa
xor
push
pop
lea
inc
jmp
lahf
xchg
push
and
outs
into
add
jle
fs
xor
je
pop
xor
mov
pop
xor
sub
add
dec
adc
gs
sub
fadd
xor
sar
sbb
add
sbb
aaa
adc
adc
shl
mov
je
loope
cmps
and
mov
mov
movs
jns
mov
add
sub
cli
jb
in
fs
bound
test
jo
(bad)
sbb
(bad)
out
pop
mov
fbld
pop
mov
push
cld
push
pop
pop
mov
and
sti
jno
rcr
pusha
dec
push
and
ds
mov
rol
stos
jne
repz
lahf
js
add
sub
jnp
mov
loope
xchg
(bad)
(bad)
test
pop
fstp
popf
fild
imul
jno
pop
push
fdiv
sbb
pop
mov
jae
cwde
stos
mov
push
(bad)
popf
push
pop
fwait
lahf
xchg
retf
fnstsw
pop
(bad)
loop
mov
loopne
ins
in
mov
test
jb
scas
jo
out
ins
adc
xchg
mov
retf
mov
(bad)
mov
movs
imul
pop
icebp
jnp
ret
nop
leave
mov
mov
jb
or
cmp
or
xor
xor
cdq
out
mov
and
mov
adc
rcl
shr
js
jnp
aam
jb
nop
loope
add
ja
xor
jg
test
cmp
popf
pop
sub
inc
sahf
cwde
imul
addr16
xchg
push
jp
sbb
jns
js
inc
add
inc
jbe
cdq
dec
inc
outs
sub
lock
adc
cmp
xchg
xchg
fisub
aad
xchg
call
scas
xor
dec
loope
or
out
retf
data16
push
mov
cmp
dec
out
pusha
cmp
jge
xchg
push
call
mov
inc
fistp
push
(bad)
fild
adc
inc
push
sbb
or
sub
icebp
mov
call
jle
jno
outs
sbb
xor
inc
call
pop
rcl
imul
leave
jae
arpl
loopne
pop
push
mov
dec
pop
cdq
sti
push
dec
sub
and
mov
mov
sbb
push
sbb
pushf
pop
das
stos
js
pop
fld
mov
jb
and
scas
jo
je
sar
repnz
(bad)
jl
and
imul
inc
fist
popf
aam
lahf
(bad)
in
cs
daa
out
push
iret
arpl
sub
or
pop
(bad)
pop
cwde
and
add
xor
in
mov
jno
adc
xlat
and
sub
pop
or
retf
xor
pop
inc
push
dec
sar
add
fisttp
mov
mov
dec
xchg
pop
pop
pop
movs
fcom
add
call
test
in
loope
add
xor
mov
jmp
or
push
adc
and
dec
mov
jge
sbb
cmp
out
data16
jae
out
repz
into
inc
stos
push
stc
rcl
int
ja
ds
std
call
pop
push
pushf
xchg
mov
stos
mov
pushf
sahf
stos
push
cwde
addr16
or
iret
sar
in
push
test
xchg
and
leave
or
jge
(bad)
sbb
cmp
outs
hlt
ret
inc
jl
sbb
jp
xchg
push
mov
mov
movs
loop
mov
(bad)
loopne
lods
inc
scas
cmc
pop
cmp
aas
xor
and
mov
test
in
push
sub
lock
jno
lods
(bad)
mov
movs
inc
xchg
icebp
movs
cwde
jg
jge
push
movs
xor
pop
and
je
and
lahf
cmp
mov
sbb
xchg
shl
sbb
and
sub
mov
arpl
mov
add
adc
push
xchg
inc
aam
pop
sub
dec
lds
xchg
cld
out
je
mov
popa
in
dec
push
int
cmp
xchg
pop
inc
sbb
pop
pop
retfw
movs
or
and
leave
fwait
rcr
add
aam
push
xor
mov
pop
xlat
adc
pop
xor
cmp
pop
fisubr
loopne
shl
cli
cmp
sbb
bnd
cmp
sbb
aaa
mov
pop
mov
jnp
and
(bad)
std
ficom
push
shr
xor
test
stos
sbb
fsubr
xchg
push
inc
aam
sub
xor
test
mov
inc
jl
inc
in
pop
in
jmp
outs
jg
mov
cs
or
mov
test
and
pop
aaa
xchg
adc
push
test
mov
in
(bad)
xchg
mov
adc
xchg
aad
mov
(bad)
sub
arpl
dec
std
fs
mov
lods
xor
test
das
ret
sbb
dec
daa
sub
xchg
imul
pop
fld
arpl
imul
jo
xchg
push
inc
push
inc
and
test
leave
mov
jno
mov
dec
fucomp
dec
inc
mov
out
gs
pop
inc
in
jno
jno
jbe
xor
dec
loope
jmp
and
into
pop
sbb
fs
lock
mov
jmp
pop
jae
xchg
and
mov
sbb
mov
and
cmp
fst
sbb
and
std
mov
into
loop
cmp
out
enter
rcl
adc
rcl
pop
test
aas
out
xchg
xchg
jg
ins
(bad)
jns
push
fcom
movs
dec
or
dec
(bad)
sti
test
mov
and
pop
lahf
push
ja
retf
es
(bad)
cmp
sub
xchg
pop
push
mov
imul
movs
cmp
and
add
dec
jp
mov
push
aas
dec
(bad)
out
icebp
lock
jmp
pop
mov
sub
and
inc
mov
push
cmp
jne
jecxz
cmps
sbb
jae
adc
mov
popf
(bad)
cld
sbb
sub
aas
icebp
sub
in
js
daa
out
and
mov
jns
cmp
inc
lods
sbb
test
xchg
lods
add
dec
push
push
fsubr
jae
inc
in
fnstcw
inc
cmp
fstcw
movs
cmp
mov
cmps
das
into
sbb
mov
test
push
xor
mov
mov
or
xchg
fldenv
adc
adc
cld
popa
imul
xchg
outs
mov
aas
cli
and
push
fs
mov
push
fistp
inc
mov
mov
xlat
sbb
pop
add
sbb
xchg
icebp
add
push
xor
retf
mov
fadd
das
aam
imul
dec
(bad)
mov
cmp
ror
add
imul
cmc
mov
xchg
(bad)
mov
jno
retf
xor
push
int
imul
(bad)
ret
and
pop
push
cmp
xor
and
cmp
mov
dec
ja
in
cwde
mov
mov
lods
cmps
pop
pop
clc
cli
ds
mov
mov
out
fnstsw
xor
std
(bad)
add
dec
daa
test
xor
adc
mov
nop
cmp
sub
push
adc
mov
pop
neg
loopne
mov
adc
les
popa
mov
mov
(bad)
ja
xlat
jnp
xor
movs
mov
push
add
lods
daa
jmp
stos
jnp
int
outs
jmp
jecxz
call
xor
fild
nop
push
(bad)
sar
movs
test
pop
loope
add
lahf
(bad)
push
pop
fiadd
xor
psubsb
(bad)
push
test
cmp
adc
mov
test
int3
jmp
in
movs
xchg
iret
jl
xor
call
jge
mov
and
cmps
out
and
loopne
pop
icebp
lock
cld
retf
lods
lods
shl
(bad)
shl
pop
test
cdq
loop
ret
(bad)
xchg
sbb
sub
std
mov
not
sti
imul
je
int3
add
(bad)
int
outs
jne
leave
dec
sar
test
push
fsubr
add
sbb
sar
jmp
jns
dec
(bad)
loopne
add
fcmovne
imul
add
nop
or
ja
add
imul
shl
xchg
aas
out
or
add
adc
ror
mov
sbb
int3
add
dec
inc
dec
sub
push
lds
aam
ja
inc
push
jbe
es
dec
xor
aad
mov
inc
xchg
mov
and
push
push
fdivr
inc
push
lahf
xor
lods
pop
ins
loopne
mov
test
into
xchg
dec
xor
push
imul
push
std
xchg
mov
jns
loope
adc
sub
jle
mov
sub
mov
jo
push
push
loop
aas
add
pop
in
iret
clc
mov
fbstp
lds
pushf
fs
adc
fsubrp
fcomp
out
scas
cmp
ret
aaa
repz
shr
add
dec
leave
push
cmp
xchg
or
jecxz
dec
loope
jp
and
inc
and
ss
mov
scas
aam
push
into
adc
jp
(bad)
rep
rol
retf
cmp
and
cmp
je
das
mov
push
mov
lods
xor
adc
in
cli
stos
mov
je
mov
adc
add
(bad)
cmc
sbb
cmps
out
mov
push
pop
mov
ret
(bad)
mov
outs
sub
xchg
cli
in
or
push
cmp
cmc
aam
lea
pop
add
dec
mov
xchg
and
sub
and
or
bound
dec
pop
inc
int
pop
ins
xchg
push
enter
push
cmp
ins
or
cmps
cmp
dec
inc
clc
adc
fldenv
into
(bad)
cmps
test
nop
loope
jns
int3
add
pushf
dec
test
adc
int
push
imul
cwde
es
push
int3
or
fbstp
xchg
mov
les
gs
sub
ror
das
test
and
add
and
push
and
sbb
dec
lds
fwait
imul
out
push
pop
inc
mov
sbb
add
jp
jmp
mov
sub
std
in
lock
dec
or
sub
outs
mov
push
mov
cmp
jmp
stos
push
call
shl
sub
stos
push
pop
call
(bad)
push
mov
pop
scas
pop
jle
inc
add
jb
gs
dec
mov
js
cdq
push
inc
sub
pop
xchg
mov
add
movs
iret
push
arpl
sbb
jl
dec
inc
and
nop
(bad)
outs
pushf
push
adc
ins
mov
enter
cmc
mov
test
shl
iret
mov
data16
ret
inc
sbb
sbb
inc
loop
pop
fistp
pop
fcomp
sbb
ficomp
je
repz
push
popa
sbb
call
jns
mov
dec
test
cmp
outs
and
iret
jae
daa
add
jns
xchg
iret
test
pushaw
icebp
or
mov
std
add
cmp
jecxz
xchg
sub
sbb
sbb
movs
pushf
or
push
std
outs
in
mov
dec
xor
lea
xor
dec
rol
ret
fild
mov
or
sbb
jae
sub
in
ds
xor
fsubrp
dec
pushf
in
test
int3
loope
aaa
xor
add
lock
xchg
xchg
jmp
ficomp
jge
or
je
jmp
ret
enter
or
imul
adc
dec
test
into
dec
or
push
pop
mov
pop
outs
js
fucomi
cmc
and
test
push
mov
jbe
inc
add
inc
xchg
loop
outs
xchg
mov
xchg
and
mov
movs
ds
jmp
cli
and
dec
mov
sub
mov
cli
jmp
movs
stc
ret
ins
fwait
ret
(bad)
js
stos
dec
movups
sbb
push
dec
into
sti
rcl
mov
jb
add
and
fwait
mov
push
out
nop
nop
cmp
int3
outs
push
rcr
es
push
or
je
call
scas
repz
jle
pop
in
jno
jae
and
jg
xor
push
dec
dec
inc
inc
xor
in
aam
ret
xor
sbb
icebp
loope
enter
ins
cld
aaa
bnd
jge
sub
ret
inc
mov
xchg
imul
int3
push
fdivr
or
imul
pop
mov
and
sbb
mov
popf
les
sub
movs
xchg
loop
pop
in
push
dec
imul
icebp
sbb
and
lods
jecxz
jns
jl
add
pop
out
ins
lods
jge
mov
cdq
or
jle
sbb
inc
adc
jg
push
mov
test
imul
into
inc
aad
cmps
sbb
mov
fs
fistp
outs
fmul
mov
inc
sub
fsub
mov
cmp
and
dec
adc
inc
out
sub
ins
pop
pop
mov
imul
cmp
adc
push
es
mov
pop
ins
mov
sbb
jb
test
outs
ins
(bad)
vpcmpeqd
or
ret
neg
mov
xchg
xchg
mov
jne
pop
ss
retf
inc
fld
lods
inc
mov
(bad)
mov
loopne
cdq
xor
cmp
jmp
nop
movs
pop
pusha
fisttp
jo
in
not
and
and
std
cmps
movs
ret
mov
sahf
pop
jb
mov
inc
mov
mov
xor
adc
stos
sub
xlat
push
rol
cli
in
mov
mov
xor
arpl
aad
pop
or
xchg
sbb
js
push
shr
cmps
ds
scas
jo
lds
jmp
test
call
ret
movs
xor
aam
inc
pop
mov
jb
gs
cmp
mov
add
jae
and
out
daa
sbb
inc
add
jge
cli
push
sub
adc
fs
and
ret
add
push
push
std
xchg
xchg
xor
mov
fs
mov
das
sbb
out
iret
frstor
fisttp
out
push
popf
popf
popf
(bad)
and
inc
jmp
jmp
jmp
ins
sbb
aad
repnz
cmp
scas
test
mov
fwait
jle
out
cmp
add
(bad)
int3
fisttp
and
or
fsubr
dec
mov
clc
push
lea
mov
je
lds
call
int3
push
mov
xchg
jecxz
jmp
mov
and
lahf
int
(bad)
fnstenv
dec
dec
dec
stos
leave
imul
mov
hlt
push
mov
add
aad
push
hlt
outs
data16
lods
seta
and
sbb
leavew
jmp
xchg
das
and
pop
xchg
inc
sub
test
mov
add
clc
mov
jl
jl
arpl
sbb
pop
das
lds
stos
xor
jmp
or
or
(bad)
repz
dec
sub
call
cmp
sbb
mov
loop
or
sub
sbb
add
cmp
fadd
jmp
adc
nop
retf
and
les
iret
jge
out
shr
mov
add
adc
leave
inc
fstp
xchg
mov
sub
(bad)
js
aam
gs
js
das
retf
(bad)
lahf
or
test
push
mov
aad
and
add
adc
jle
push
cmp
or
ds
(bad)
cdq
push
movs
int3
dec
aam
cdq
loop
dec
(bad)
cmp
or
icebp
push
out
push
fnstenv
or
mov
(bad)
loop
je
dec
inc
mov
jb
loop
jge
repz
cmp
out
dec
mov
aam
cdq
jae
xchg
dec
or
fsubr
xchg
xor
jo
xor
daa
xchg
xchg
push
add
and
push
retf
gs
add
pop
add
cmp
and
jle
and
mov
xchg
cdq
ins
mov
and
pop
enter
outs
js
ins
xchg
call
pop
pop
xchg
cmp
push
xchg
or
and
xchg
clc
or
xchg
xchg
mov
mov
mov
pusha
shr
or
mov
xor
add
ret
xlat
lea
xchg
int
or
(bad)
jge
push
mov
mov
add
mov
je
scas
sub
push
popa
mov
ds
xor
sbb
mov
imul
jmp
pop
and
pop
mov
push
gs
jle
mov
in
div
inc
and
xor
fdivr
add
sub
(bad)
push
(bad)
adc
mov
xor
imul
xchg
pop
ins
dec
iret
sbb
and
je
fisttp
retf
cmp
jno
dec
aaa
div
setne
push
pop
pause
das
push
dec
popf
stc
mov
pop
retf
mov
mov
loop
retf
int3
add
das
and
sub
dec
mov
dec
outs
mov
icebp
sbb
push
mov
xchg
cmp
or
pop
gs
and
or
jne
mov
nop
xchg
popf
and
out
mov
adc
mov
repz
loope
jge
push
mov
mov
pop
mov
ja
int
das
stc
pop
mov
jo
sbb
adc
jne
gs
add
int
mov
mov
mov
jge
adc
jae
add
sub
int
xor
push
mov
mov
push
inc
int3
adc
cmps
pusha
cmc
iret
hlt
cmp
out
cmps
icebp
mov
lods
push
test
xchg
dec
jne
pop
arpl
sub
cmp
jg
loope
dec
cli
adc
test
ds
stos
push
enter
inc
lds
scas
rol
sbb
aad
loope
out
jo
cmps
mov
mov
popf
xchg
(bad)
cmc
jl
jmp
mov
ss
sti
mov
add
lahf
int
and
xor
mov
(bad)
sbb
jb
sub
cmps
lods
sbb
xchg
mul
test
jmp
test
push
mov
pusha
sti
dec
xor
push
xchg
inc
cs
mov
(bad)
and
into
mov
sbb
xor
xor
dec
xchg
pusha
arpl
xlat
stos
stos
aad
xchg
repnz
out
lahf
aas
pushf
jae
clc
ds
mov
aaa
sub
jmp
mov
pop
je
xor
or
cmp
aam
sahf
call
or
and
jmp
mov
aaa
xor
daa
push
(bad)
imul
int
cli
dec
mov
repz
out
jp
test
xchg
mov
xchg
rcl
pop
popf
out
xchg
cli
inc
adc
jb
inc
in
push
(bad)
ds
sti
lea
push
scas
xchg
inc
icebp
enter
mov
addr16
push
sub
cmp
sub
xchg
push
enter
das
std
push
je
jbe
pop
mov
sti
dec
xor
inc
popf
pop
cdq
or
sbb
xor
inc
fstp
call
inc
pop
and
test
nop
loope
sbb
test
add
ins
sar
mov
mov
mov
mov
sahf
outs
sbb
push
inc
inc
aad
test
fucom
mov
test
ds
adc
out
lahf
xchg
int
jmp
jns
xchg
outs
add
cmp
cmp
mov
in
popa
neg
xchg
cli
sub
and
ss
inc
out
ins
adc
bound
push
rcr
cmc
sub
repnz
hlt
dec
jecxz
mov
pop
repz
or
xor
sub
adc
test
and
outs
sbb
data16
aam
retf
(bad)
retf
test
clc
sub
mov
ror
dec
lahf
push
movs
dec
test
push
cld
push
icebp
icebp
push
inc
push
retf
out
xchg
cmp
jp
xor
adc
leave
call
xor
or
or
(bad)
outs
(bad)
jmp
aas
aas
or
xchg
adc
xor
add
push
push
repz
sahf
les
or
out
aad
daa
push
sbb
dec
loopne
mov
mov
mov
ins
ins
(bad)
push
in
in
pop
xchg
xor
lods
out
fcomi
jp
pop
xchg
push
add
nop
cmps
add
mov
rcl
push
scas
fimul
outs
ret
shr
cmp
add
(bad)
in
rcl
leave
mov
in
lods
ja
push
push
fcomp
aas
jb
mov
or
and
inc
mov
cmp
jne
and
mov
out
adc
and
aad
pop
push
xor
clc
dec
xchg
jp
in
lods
dec
dec
xor
inc
mov
test
adc
shr
(bad)
mov
je
push
jecxz
mov
add
adc
cmps
shr
jno
push
jnp
push
mov
out
sbb
sbb
mov
out
repz
in
mov
cs
lahf
test
imul
jg
pop
jp
lahf
push
sbb
sbb
or
adc
daa
mov
sub
cmp
(bad)
fsubr
test
rcl
enter
inc
jo
push
jbe
out
dec
mov
scas
adc
outs
bswap
(bad)
ror
mov
test
mov
je
sub
sub
add
jo
fsub
pop
cwde
pop
sub
dec
push
mov
cmc
pop
add
sub
push
aad
dec
jg
cmps
add
sub
mov
data16
clc
pop
movs
rcl
add
je
add
aad
mov
cs
in
pop
fld
mov
mov
pop
sub
jl
pop
pop
ret
push
stc
mov
(bad)
mov
cmp
jns
call
jl
sub
adc
pop
adc
mov
test
or
test
push
js
(bad)
scas
in
add
gs
jb
add
rcr
sti
dec
loope
daa
pop
inc
jbe
pop
or
sbb
fistp
mov
jmp
addr16
sub
dec
fwait
stos
sub
ds
or
int3
push
out
cmp
cmp
cmp
push
lods
push
mov
mov
cwde
lahf
sub
add
mov
inc
sbb
scas
inc
shl
stc
daa
mov
fiadd
in
es
mov
lods
pop
inc
and
and
sub
mov
aaa
jmp
adc
mov
adc
cmp
xchg
cli
jmp
sub
jp
sbb
stc
std
int
loopne
sbb
dec
ins
mov
dec
movs
cli
out
sbb
add
les
test
mov
in
inc
pop
repz
int3
movs
xchg
arpl
jmp
or
sub
in
mov
pop
aaa
fild
(bad)
xor
jge
xlat
xchg
jl
sbb
pushf
xor
pop
das
(bad)
retf
(bad)
iret
sub
xor
jl
mov
fdiv
mov
(bad)
fmul
jbe
test
mov
pusha
retf
lea
jno
mov
pusha
stos
dec
xor
sbb
retf
pop
dec
daa
and
ficom
cmp
dec
jbe
dec
or
mov
ror
fwait
movs
cdq
sbb
clc
stos
cli
jbe
gs
jns
lods
mov
je
and
push
test
inc
sbb
xchg
(bad)
dec
iret
js
sar
retf
sbb
movs
test
cmp
imul
pushf
dec
movs
les
fwait
mov
push
imul
add
hlt
jae
shl
push
push
pushf
in
xor
cs
sahf
int3
jecxz
bound
mov
test
inc
rcr
sbb
pop
ficomp
in
pop
jmp
push
xor
mov
lods
call
mov
lea
push
and
xchg
pop
or
out
xchg
ins
shl
retf
cmps
ja
addr16
(bad)
pop
mul
inc
fdivrp
cmp
push
adc
xor
mov
inc
push
mov
add
out
sub
mov
adc
sub
or
mov
adc
lahf
stos
sbb
add
dec
mov
out
push
inc
pop
xchg
imul
pop
xchg
cmp
lods
scas
xchg
fwait
je
lds
dec
cmp
scas
in
xor
sbb
sbb
je
retw
shl
out
pusha
or
add
mov
xchg
adc
sar
shl
test
jge
jg
sti
movs
adc
loope
lods
inc
xchg
mov
jecxz
ja
sti
xor
and
push
mov
dec
popf
jg
or
out
es
adc
(bad)
xor
jge
mov
ja
push
pop
into
inc
ficom
cmps
xor
loopne
sbb
add
jne
movs
cli
jmp
sub
pop
xchg
lods
(bad)
rcr
fmul
adc
cmp
xchg
(bad)
pop
daa
mov
arpl
cmp
pusha
jns
cmp
movs
sub
movs
mov
or
add
cmp
or
mov
lock
imul
xchg
dec
cmp
imul
pop
push
icebp
sub
pusha
jbe
adc
outs
leave
in
jnp
xchg
mov
addr16
(bad)
lahf
mov
mov
jne
jbe
adc
mov
mov
(bad)
stos
and
adc
cmps
bound
ret
aam
sbb
inc
cmps
push
jl
mov
or
stos
adc
cdq
sbb
mov
xchg
adc
push
int3
or
repnz
mov
clc
inc
(bad)
xchg
pop
popa
hlt
(bad)
sbb
pusha
rcr
shl
inc
adc
shl
push
ins
jmp
adc
ja
xor
(bad)
stos
outs
test
popa
jg
adc
xchg
jmp
loop
mov
mov
sti
add
sub
lds
int3
inc
imul
sub
stc
shl
push
sahf
out
test
and
dec
push
xor
loope
mov
and
sbb
pop
aaa
push
fs
jns
sbb
fwait
pop
xchg
inc
pop
hlt
push
xchg
pop
call
jno
repnz
mov
pop
cdq
adc
xor
test
lods
daa
es
jge
scas
xor
push
popf
push
scas
leave
mov
lds
fs
cmp
add
inc
xlat
cs
mov
mov
and
and
fwait
mov
push
sbb
jmp
sti
out
inc
int
ret
mov
dec
sbb
(bad)
scas
and
push
nop
out
stc
adc
jo
out
std
add
add
pop
xor
and
enter
inc
cmps
int
pop
sub
add
cmp
in
inc
loope
nop
stos
aam
mov
test
and
jo
or
sub
push
dec
imul
dec
nop
arpl
and
mov
pop
pop
in
into
jmp
cmp
fwait
and
jb
xchg
stos
pop
cmp
(bad)
xchg
adc
inc
mov
xbegin
adc
cs
mov
cli
push
adc
adc
mov
aam
setb
mov
xor
cmp
mov
push
mul
pop
inc
or
pop
imul
add
clc
xchg
test
cs
in
addr16
jno
and
sub
adc
out
cmp
cmp
call
lea
and
not
inc
jecxz
jmp
mov
jmp
cmc
push
push
adc
test
daa
cmps
js
push
sti
enter
lea
push
dec
test
sub
xchg
xchg
fbstp
jp
jg
jne
xor
ret
sub
fidiv
sub
inc
fstp
movs
xchg
icebp
sbb
jb
std
rcr
mov
pop
aam
movs
jmp
ficomp
sub
push
test
dec
or
data16
repnz
mov
adc
shr
jns
out
cmp
mov
jl
rcl
in
or
fadd
das
(bad)
(bad)
pop
inc
dec
stos
sbb
dec
jo
and
mov
loopne
adc
cmp
jl
into
iret
rcl
and
jmp
push
iret
leave
iret
jno
sar
pop
loop
mov
stc
sub
adc
sub
sub
add
push
or
shr
test
fidiv
ss
into
arpl
gs
cmp
jbe
gs
lods
(bad)
jno
jecxz
push
stos
jo
enter
int
add
jnp
loope
stos
jae
sbb
(bad)
mov
shr
push
push
fst
movs
mov
stc
sbb
add
rcr
adc
out
push
xchg
retf
(bad)
(bad)
adc
shl
dec
sbb
fstp
es
dec
add
scas
iret
ins
jbe
clc
mov
lods
cli
pop
sub
loope
push
adc
add
(bad)
cs
in
ds
and
jns
js
call
sub
stos
adc
or
popf
mov
stos
push
sti
mov
sbb
cmp
inc
jbe
jo
jae
(bad)
cld
test
aad
repz
pop
iret
inc
jl
pop
xchg
sub
mov
out
cwde
iret
call
sahf
cmp
lock
mov
stos
retf
loopne
push
call
mov
cmp
mov
xlat
call
cmps
stos
push
cdq
ins
mov
push
(bad)
cmps
push
mov
rol
pop
xchg
imul
and
and
xchg
fnsave
adc
inc
mov
push
dec
daa
inc
mul
pop
loop
add
xchg
dec
xchg
cwde
and
cmp
or
sar
test
dec
aam
sbb
mov
leave
into
cmp
fild
mov
pop
fs
mov
es
in
jmp
jmp
xchg
or
fcom
or
shl
test
or
sbb
sub
fisub
xchg
and
sub
cmp
sub
jne
es
dec
loopne
aad
fild
mov
pop
call
cs
jl
push
lds
cmc
fild
mov
ins
and
fcmovbe
xchg
add
sub
mov
dec
je
fdiv
aas
jae
inc
dec
test
mov
adc
ja
and
in
loopne
jmp
stos
arpl
dec
cmps
mov
jg
cmp
mov
inc
mov
push
push
xlat
cmp
jp
add
cmc
jle
pop
outs
mov
mov
fnsave
mov
add
push
lock
add
(bad)
jne
jns
fidivr
nop
jmp
shl
dec
push
icebp
movs
movs
add
sbb
shl
sub
mov
daa
cmova
add
pop
add
sbb
mov
mov
jmp
ds
mov
div
stos
rcl
ret
sub
jae
or
mov
pop
mov
sbb
add
jle
mov
imul
mov
ficom
fcom
call
loop
cmp
stc
inc
ficom
lds
add
dec
cmp
ss
adc
(bad)
push
jp
lods
xchg
sahf
inc
cmps
sbb
int3
sar
mov
pop
fldcw
aaa
lock
cmp
mov
or
dec
mov
pop
dec
adc
sbb
jns
fsub
aam
xchg
and
movs
dec
lods
aaa
jbe
push
jp
aaa
and
gs
xor
dec
retf
adc
pusha
aam
pusha
pop
cmc
fs
test
pop
xchg
std
mov
mov
push
ja
push
inc
dec
pop
mov
mov
pop
retf
iret
in
lea
(bad)
fcomp
pop
or
mov
cmp
nop
or
sti
inc
and
ins
out
outs
scas
aad
xchg
mov
xchg
out
adc
pushf
xor
inc
xchg
mov
mov
mov
lods
mov
inc
sar
xchg
addr16
push
xlat
inc
test
mov
and
in
sti
pop
pop
xchg
sub
les
cs
jg
(bad)
in
cmp
jmp
add
into
call
pusha
inc
stos
outs
add
inc
adc
xor
inc
div
mov
and
in
lahf
xchg
and
dec
xchg
mov
iret
js
mov
xor
iret
inc
jmp
pop
je
out
or
outs
idiv
mov
push
jns
jae
push
sub
sbb
mov
cmp
(bad)
xchg
(bad)
jecxz
ficom
ins
cmps
sub
test
or
adc
out
push
mov
dec
add
aad
fdivr
test
leave
sbb
cdq
jg
sbb
sub
cmp
xor
xchg
and
jg
xor
xor
or
xchg
stc
fincstp
(bad)
xlat
icebp
ja
cmp
lods
outs
add
mov
repz
push
arpl
add
push
xor
cmp
push
nop
mov
fsub
jnp
pop
(bad)
jp
cmps
je
leave
and
popa
loopne
dec
mov
adc
ins
call
push
or
aad
dec
jmp
retf
loop
mov
out
cs
fsubr
pusha
repz
cs
shl
sar
xchg
fmul
jo
cmp
inc
es
sub
cmc
neg
aam
mov
ja
mov
pop
ja
idiv
jle
jns
mov
inc
int
ror
test
mov
push
xor
jnp
pop
imul
pop
dec
daa
movs
cdq
jle
and
adc
lds
mov
std
jle
add
mov
test
cmp
cmp
repz
sub
and
jno
cmps
sti
mov
nop
xor
mov
pop
cmp
jmp
sbb
mov
cmps
imul
shl
sbb
push
and
in
neg
mov
xor
xor
(bad)
mov
clc
sbb
mov
lahf
mov
sub
mov
jg
push
push
push
mov
xchg
sub
les
xchg
ficomp
test
clc
cmp
inc
and
xor
leave
jmp
jbe
popf
leave
push
jns
adc
shr
pop
dec
aas
adc
lahf
mov
in
sub
mov
pop
xlat
or
and
or
sub
lods
scas
and
popa
sti
sbb
int
push
push
pop
cmp
xor
and
mov
mov
adc
jno
push
push
call
jg
je
cmps
or
jmp
shl
es
jae
add
je
mov
lea
dec
inc
inc
ins
inc
mov
lea
cdq
and
and
test
and
add
cmc
in
loop
and
inc
cli
xchg
mov
jl
addr16
mov
push
aas
pop
mov
mov
or
ficom
and
cmp
out
lahf
iret
dec
push
sub
fisubr
call
mov
adc
fcom
sub
pop
sbb
xchg
(bad)
int3
jno
repz
push
xchg
mov
xor
inc
mov
ins
push
inc
es
mov
pusha
int3
jo
jns
mov
sbb
popa
(bad)
iret
rcr
inc
push
sbb
and
cmp
ds
pop
faddp
cdq
ror
xchg
or
dec
sbb
cmp
out
or
movs
je
jge
popf
and
add
adc
sub
push
sub
mov
jo
and
sbb
adc
sub
push
mov
adc
or
imul
mov
sub
scas
in
cmps
jbe
or
add
(bad)
icebp
cdq
inc
push
pop
mov
imul
ret
and
sub
sbb
aad
aam
dec
mov
adc
sti
mov
adc
mov
push
inc
daa
sti
push
adc
sbb
mov
ins
pop
cld
mov
mov
je
int
push
repz
in
or
je
mov
pusha
imul
xor
dec
imul
sub
pop
mov
sbb
jno
outs
dec
jns
stos
add
push
mov
retf
repnz
xchg
repz
or
iret
pop
fist
cs
fnstcw
in
lock
sub
clc
retf
test
jmp
push
lea
jo
fs
imul
xor
jl
lock
pop
or
dec
mov
cmp
and
cwde
mov
jbe
(bad)
gs
mov
cmp
in
add
repnz
mov
iret
imul
ret
scas
icebp
rcr
sbb
add
retf
jo
pop
adc
mov
push
jne
mov
and
(bad)
mov
es
xchg
out
(bad)
push
or
mov
inc
(bad)
ror
cdq
pop
and
jmp
and
(bad)
inc
jnp
push
in
pop
cli
loopne
push
loope
dec
sub
frstor
add
push
scas
jle
neg
in
cmp
int3
jb
push
jmp
pop
push
sub
aam
lea
sahf
cmp
fldenv
daa
or
adc
cmp
js
arpl
fld
loop
adc
daa
test
and
out
lods
dec
stos
(bad)
or
imul
add
je
in
mov
jl
cli
lahf
stos
cs
aaa
pop
pop
inc
mov
pushf
xchg
mov
shl
mov
in
push
jp
hlt
call
cwde
lods
mov
xor
mov
jne
test
xor
jae
jmp
cmps
es
xor
lds
mov
sbb
scas
or
test
cmp
add
stos
sub
mov
jmp
add
mov
fidiv
rdpmc
mov
aam
sbb
adc
cmp
sbb
pop
xchg
aam
sahf
xchg
popf
arpl
fdivp
lea
add
iret
pop
mov
mov
xor
pop
scas
sbb
mov
jmp
mov
xor
or
stos
cld
aad
iret
lock
ss
and
outs
mov
mov
xor
bound
cmp
(bad)
mov
(bad)
mov
and
ret
or
call
test
sar
inc
rcl
and
pusha
mov
fist
test
pop
mov
and
xchg
sub
xchg
pop
retf
out
push
adc
fdivr
loope
call
sub
adc
mov
pusha
xchg
cmps
adc
shl
(bad)
cli
dec
mov
cmp
rol
pop
push
outs
ins
call
fcom
adc
in
and
and
xchg
ror
aas
pop
add
mov
push
push
fsub
sub
movs
(bad)
cmp
fcom
cld
aaa
adc
int
clc
xchg
ret
repz
dec
dec
xchg
pop
out
(bad)
dec
push
mov
xchg
adc
in
adc
pop
std
out
mov
fld
aam
jle
cs
shl
out
test
or
xlat
inc
mov
inc
push
and
(bad)
in
sbb
enter
jae
sub
push
stc
mov
bound
mov
leave
ins
aad
js
pop
in
and
sbb
cld
ins
movs
(bad)
lods
add
mov
cmp
sub
xlat
repz
or
adc
lahf
jmp
mov
lds
in
mov
fstp
jnp
pop
inc
push
sbb
stos
std
push
add
mov
sub
sbb
inc
pop
scas
xor
in
cmp
jne
lods
xchg
jp
int3
ins
data16
cmp
xor
les
sub
in
repz
sbb
push
ret
retf
cmp
gs
out
xlat
and
sbb
mov
arpl
mov
cmp
stos
add
outs
jmp
shr
leave
fwait
xor
test
dec
or
dec
inc
(bad)
bound
(bad)
lea
outs
sti
jae
clc
scas
mov
sbb
xchg
dec
inc
stc
popf
mov
mov
fstp
lea
pop
sbb
push
push
outs
lods
mov
sahf
sub
inc
jmp
push
ret
popf
sti
xchg
mov
mov
pop
icebp
jle
sbb
dec
loop
(bad)
sbb
pushf
popf
pop
jp
push
lods
shl
fcmovnb
loopne
adc
push
stos
in
inc
mov
sbb
xchg
push
xchg
push
sbb
add
in
adc
jne
cmps
jmp
cdq
dec
das
in
ret
int
cmp
sub
ret
cmp
push
or
fs
retf
jbe
xor
enter
pop
leave
loop
add
jno
jl
jns
or
ss
adc
(bad)
xchg
jbe
adc
arpl
push
cmps
inc
jge
jmp
imul
cmp
xchg
aad
dec
jmp
mov
xchg
inc
jle
loopne
mov
push
fild
(bad)
lahf
and
and
lds
je
in
dec
out
mov
pop
push
hlt
inc
imul
test
fsubr
adc
xor
sub
repz
cmc
into
adc
fimul
inc
jne
pop
out
or
or
xchg
dec
xchg
sub
fcomp
pop
fsubr
add
xchg
mov
sbb
ins
sbb
das
or
fwait
pop
adc
pop
dec
enter
scas
pop
das
out
push
mov
adc
leave
into
inc
into
jne
mov
pop
push
inc
addr16
inc
(bad)
es
sbb
mov
xor
movs
sub
ss
ins
cmps
and
nop
movs
enter
ins
push
aaa
add
out
sbb
fist
mov
pop
rol
iret
and
mov
dec
fild
and
bound
dec
ret
lods
sub
in
call
or
push
dec
movs
cmp
das
out
pop
pusha
mov
test
sbb
push
fcomp
adc
ja
aaa
sahf
cli
jne
ret
inc
in
add
outs
sub
into
iret
inc
cmp
adc
stc
sbb
dec
scas
pop
test
inc
xchg
pop
mov
leave
dec
add
mov
aaa
ret
inc
mov
cmp
fiadd
adc
jo
lds
cmps
stc
mov
or
aas
push
push
movhps
aaa
mov
mov
mov
inc
or
pop
(bad)
mov
addr16
sub
outs
ins
fst
in
jp
aas
leave
xbegin
dec
pop
adc
lds
ret
jns
popa
inc
and
jecxz
ins
mov
mov
push
jb
or
adc
movs
in
icebp
or
and
pop
sub
inc
stos
mov
mul
es
cmp
call
jno
aad
push
mov
ficom
mov
sub
(bad)
push
es
mov
nop
pop
int
jge
fist
mov
jge
or
cdq
mov
pop
aaa
pop
in
sub
mov
sar
xchg
rcr
ss
or
sub
ror
and
into
push
jae
out
cmp
pop
mov
std
dec
jno
lahf
mov
xchg
hlt
adc
in
sub
popf
mov
imul
daa
shl
enter
cmps
mov
(bad)
aaa
jae
adc
push
stos
add
dec
imul
jns
dec
lock
(bad)
cmps
nop
fidivr
mov
jns
(bad)
and
push
(bad)
(bad)
jno
(bad)
push
outs
je
pop
adc
cmc
sub
jne
sub
sti
sar
add
icebp
ret
gs
out
call
xor
movs
adc
inc
movs
mov
imul
mov
push
in
(bad)
out
stos
jl
in
(bad)
dec
add
lods
jg
inc
(bad)
data16
outs
pop
and
lods
jb
jo
jbe
shl
push
sub
or
inc
jg
enter
fs
sbb
mov
or
aas
sbb
jle
neg
stos
add
jo
push
lock
leave
outs
ds
fnstsw
pop
aaa
sbb
jge
fsub
out
xchg
data16
lods
xchg
pop
lahf
movs
int
jae
add
cdq
es
je
jecxz
imul
add
outs
jg
es
repz
push
add
movs
mov
fild
rol
movs
lods
dec
mov
push
imul
dec
mov
sbb
shl
dec
cmp
call
mov
mov
jo
fsub
sub
rcr
push
jecxz
pop
mov
mov
into
pushf
or
or
fcomp
mov
push
inc
sub
hlt
push
movs
jns
dec
pop
cmps
jp
add
outs
cli
mov
or
pop
add
loope
jne
cmp
xchg
fsubp
xor
jmp
mov
dec
sub
int
cwde
ss
lock
jb
add
mov
(bad)
mov
mov
scas
ret
jmp
sbb
popf
sub
jo
pop
inc
mov
cmp
push
es
and
adc
dec
cmp
call
cli
stos
in
pop
call
pop
mov
cmps
sub
mov
and
popf
mov
mov
lds
and
(bad)
fisubr
call
jmp
jo
pop
fwait
adc
inc
sbb
push
add
fbstp
jnp
cld
xchg
jecxz
(bad)
mov
dec
add
cld
xchg
dec
neg
repz
sbb
ds
xchg
add
loopne
pushf
jmp
(bad)
mov
repnz
fidiv
push
inc
xor
pusha
imul
xor
retf
mov
inc
es
xchg
jb
mov
pop
sub
cmp
jecxz
adc
pop
adc
push
or
sub
cmps
push
push
ins
fisubr
cmp
in
data16
sahf
fidiv
sbb
push
sbb
rol
pop
mov
jmp
add
retf
daa
push
push
dec
mov
mov
add
(bad)
cmp
test
mov
cli
retf
imul
mov
ficomp
pop
gs
sub
pop
push
cmp
jnp
jl
adc
mov
push
inc
adc
or
fucompp
or
inc
and
mov
inc
int
adc
and
cmp
in
and
jnp
into
mov
push
cmp
mov
xchg
movs
push
mov
adc
test
jo
and
fiadd
jne
mov
test
jmpw
add
mov
fwait
xchg
arpl
mov
scas
movs
jnp
bound
sub
dec
mov
add
sub
push
mov
scas
sub
and
fcmovnbe
mov
push
xchg
and
sti
fwait
jae
das
cmc
scas
mov
retf
mov
fldenv
push
rol
adc
icebp
stc
push
push
in
int
mov
mov
cmps
test
adc
mov
outs
sub
fild
add
add
mov
inc
mov
or
call
mov
jb
jo
std
aam
sbb
jb
pop
pavgw
sbb
inc
dec
mov
cmp
cmp
jo
out
test
pusha
push
mov
fild
fiadd
ret
cdq
ficom
mov
push
adc
inc
stc
inc
fdiv
adc
outs
inc
fmul
jb
fcom
cmp
hlt
xor
cmp
or
(bad)
fld
mov
sub
popf
mov
xlat
sbb
or
or
in
cmp
cmp
mov
bound
arpl
and
pop
cs
js
scas
cmp
test
es
test
stos
(bad)
inc
inc
pop
enter
dec
nop
fsub
push
pop
pop
fs
into
mov
mov
mov
(bad)
mov
retf
push
dec
dec
popf
jo
stc
pop
(bad)
pushf
pop
cld
jnp
fidivr
mov
imul
pop
inc
fiadd
sahf
arpl
dec
cmp
fstp
pop
in
fidivr
xchg
push
rcr
or
nop
xchg
aam
and
cmp
lds
outs
jnp
mov
push
lods
push
fidiv
cld
lock
cmp
xor
call
jo
out
test
mov
cwde
and
mov
fcomp
ss
leave
add
sub
and
pop
sbb
adc
retf
leave
jmp
push
adc
push
mov
or
sub
int3
not
pusha
adc
adc
pop
mov
scas
arpl
imul
(bad)
int3
xor
fwait
aaa
scas
fimul
daa
and
cmp
inc
movs
mov
cmp
mov
mov
sbb
sub
addr16
ret
push
xchg
add
cmc
lock
cwd
pusha
repz
xchg
fidivr
mov
clc
jecxz
inc
dec
sbb
push
lods
and
lods
jge
pop
shr
xor
(bad)
jge
movs
cmp
sbb
popf
xor
imul
hlt
int
fistp
dec
pop
xor
shl
outs
jae
jae
outs
pop
fld
inc
out
push
dec
cs
fs
sahf
ins
imul
adc
into
fnstcw
jo
mov
repz
sahf
add
xchg
jns
mov
xchg
push
es
mov
mov
rcr
call
loopne
pop
sbb
push
jns
cwde
mov
and
fs
or
fmul
cmp
mov
lods
outs
and
ja
loope
test
mov
in
cmps
test
dec
mov
fadd
fisub
lods
push
jnp
cmp
adc
inc
dec
dec
inc
retf
lea
test
cmps
es
mov
mov
(bad)
cdq
das
mov
cmp
push
push
out
arpl
or
xchg
xchg
out
pop
repnz
add
pop
jns
lock
cmp
cdq
jmp
popf
test
(bad)
repnz
sub
xchg
in
stos
cmovg
xor
out
lds
jge
out
stos
popf
jp
lods
add
addr16
je
jns
jmp
popa
mov
pop
retf
pop
add
mov
or
nop
cmp
xchg
xchg
out
jo
jnp
leave
cmp
push
push
loopne
and
sbb
faddp
retf
inc
in
ss
ds
out
jo
pusha
push
sub
out
into
pop
out
mov
xor
cli
rcl
pop
loope
adc
sahf
adc
dec
cmp
aad
xchg
test
pop
sub
xchg
inc
fcmovnb
add
nop
push
or
cmp
pop
mov
cmps
pop
mov
xchg
or
xchg
pop
or
stos
pop
outs
cs
adc
cmp
ret
push
mov
call
jge
xlat
test
pop
add
(bad)
jb
rcl
push
sti
add
dec
jnp
jno
mov
in
ds
popa
imul
dec
fs
jecxz
ins
ja
jno
sub
jb
jg
(bad)
add
ds
mov
push
hlt
cmp
xor
int
mov
xor
sahf
mov
loopne
mov
pop
mov
(bad)
lock
jmp
adc
or
add
mov
cmp
jl
xchg
fnstenv
jmp
jb
repz
mov
push
jl
and
sbb
or
pushf
sub
adc
test
movs
sbb
fwait
retf
or
xor
imul
adc
mov
push
aas
mov
push
sar
xchg
dec
fst
adc
xchg
rcr
(bad)
add
pop
ins
add
aam
jmp
push
push
lock
out
mov
int
mov
stos
loopne
mov
stc
repz
pop
mov
stc
fbstp
dec
bound
enter
inc
sub
imul
pop
inc
adc
or
pop
mov
sbb
call
xchg
lods
and
aas
cmp
xor
stos
jg
jo
pop
mov
cmp
shl
and
mov
mov
(bad)
cld
inc
jnp
mul
mov
mov
pop
out
ret
cdq
cmps
adc
jae
int
sbb
sahf
faddp
and
cmps
or
add
dec
fdivr
jb
test
ret
outs
mov
fmul
dec
xchg
loope
daa
popa
mov
enter
mov
cmc
outs
in
icebp
jb
jb
cmp
mov
xor
shl
push
jl
imul
repz
addr16
lds
daa
rol
jae
mov
arpl
mov
ins
nop
shr
mov
jl
inc
xor
jmp
stos
adc
jns
ins
cmp
retf
pop
ds
mov
inc
in
and
xor
stos
push
out
ret
shr
hlt
xchg
inc
xchg
int3
mov
stos
repz
xlat
and
inc
dec
pop
xchg
mov
imul
and
ins
add
popf
dec
(bad)
cld
pop
js
or
cld
mov
push
mov
xor
call
mov
fisubr
sbb
inc
shr
xlat
test
mov
push
pushw
retf
jecxz
mov
cmps
in
mov
out
or
xchg
mov
out
mov
pop
in
daa
in
add
or
loop
cli
pop
pop
push
out
retf
jo
push
sub
xchg
dec
retf
mov
jecxz
(bad)
popa
mov
test
mov
es
pop
inc
sbb
shl
xchg
stc
pop
in
pop
icebp
outs
(bad)
leave
out
dec
rol
xchg
test
pusha
add
retf
mov
or
adc
or
cld
ds
push
jne
jmp
(bad)
sbb
repz
je
mov
lahf
push
sar
aad
rol
pushf
dec
adc
daa
ins
hlt
jmp
scas
or
mov
push
and
mov
cmp
cld
ja
ja
(bad)
cli
test
dec
cmp
pop
sub
and
add
xor
fs
push
fisttp
jp
pop
xlat
fwait
xor
stos
mov
out
xor
push
mov
xor
push
fld
popa
test
pop
data16
lods
in
and
(bad)
scas
adc
jp
cmps
sub
push
mov
and
cmp
mov
mov
sbb
and
fwait
mov
sbb
xchg
push
pop
xchg
pop
or
mov
xor
not
pop
retf
push
cmp
sub
clc
je
inc
adc
call
jg
sahf
aam
adc
mov
pop
push
fisttp
fwait
mov
sbb
and
sbb
enter
out
mov
ror
stc
(bad)
call
cwde
jnp
int
cli
xor
pop
imul
sahf
neg
ins
jecxz
cmp
sbb
cmc
imul
lods
jg
jge
or
mov
mov
and
add
mov
ins
test
cld
push
add
test
cli
ss
jae
xor
xor
out
jle
pop
mov
fisttp
push
pop
inc
push
mov
dec
sub
sbb
out
mov
shr
and
(bad)
fldenv
shr
mov
mul
fisttp
dec
push
sar
call
push
mov
fwait
xchg
pop
inc
and
in
jno
mov
movs
iret
call
jmp
xor
sub
pop
mov
adc
and
dec
xor
fnsave
mov
scas
sbb
adc
pop
and
and
sbb
ss
clc
iret
xor
out
adc
jmp
(bad)
daa
(bad)
pop
xchg
repz
and
xchg
cmps
pop
mov
pop
jbe
mov
jmp
add
pop
inc
inc
repz
jmp
out
cmp
(bad)
std
outs
mov
mov
imul
adc
bound
ror
pusha
stos
xchg
add
rcr
outs
shl
ds
mov
aas
repnz
cmp
les
in
xor
xchg
sbb
xor
test
mov
jge
dec
xor
push
inc
fcmovb
and
push
mov
mov
enter
add
cmp
mov
mov
add
sti
and
leave
out
push
or
popf
xor
lds
jns
mov
in
mov
mov
sar
and
repnz
mov
cmp
in
sub
sbb
das
mov
adc
xor
ds
cli
mov
jns
add
rcl
sahf
jbe
fisttp
dec
(bad)
xchg
xor
sbb
push
or
daa
mov
adc
leave
or
push
sbb
dec
ret
mov
mov
push
call
dec
add
pop
(bad)
stc
or
icebp
movs
std
jne
mov
cmp
out
jo
gs
mov
and
test
in
pop
push
xor
fs
outs
and
out
cmp
push
or
(bad)
adc
mov
pop
add
outs
push
add
sbb
or
call
mov
cmp
retf
sahf
fidiv
or
dec
mov
sbb
mov
mov
gs
inc
cmps
lahf
xchg
dec
repz
aas
push
push
sbb
(bad)
push
mov
jnp
(bad)
mov
fsub
pop
ds
stos
jmp
dec
sbb
mov
mov
add
div
or
jno
mov
adc
sub
movs
xor
or
mov
push
mov
adc
xchg
cmp
cmp
pop
(bad)
xchg
pop
out
pusha
dec
fcomp
inc
pushw
sbb
iret
(bad)
cmp
push
inc
jl
mov
je
lahf
sti
call
or
fcmovne
xor
repz
data16
sti
ficom
xchg
imul
aam
jp
(bad)
aam
aam
jns
clc
jnp
xchg
std
nop
(bad)
shl
test
pushf
mov
lahf
repz
jmp
fwait
pop
jge
in
or
cmp
int3
and
inc
adc
jecxz
mov
fmul
jg
imul
aas
mov
mov
in
ret
mov
nop
jecxz
stos
mov
fucomip
sub
retf
outs
call
mov
stos
cli
cmc
fistp
dec
xor
leave
into
loope
mov
mov
ins
mov
sub
shl
mov
sub
jle
inc
fist
lds
jecxz
(bad)
mov
cmp
and
push
and
movsx
ficom
mov
dec
push
pop
cmps
sub
xchg
mov
sbb
ds
or
adc
retf
inc
jmp
shl
sahf
inc
call
mov
cmps
add
fnstsw
push
push
jns
lods
push
cwde
loope
mov
aas
jae
jmp
mov
lods
jnp
or
ss
leave
imul
test
shl
stc
aas
movs
adc
(bad)
(bad)
ins
cld
or
xchg
pop
sub
aad
aad
sti
dec
test
add
mov
adc
jbe
push
fidiv
dec
or
sub
shl
pop
mov
xchg
ss
js
pop
dec
mov
pop
out
jg
pop
xor
rcl
xor
mov
mov
lods
mov
push
leave
mov
sbb
int3
fisub
mov
xor
lods
ins
jmp
idiv
xor
stos
pop
fnstcw
pop
test
xor
in
or
xchg
jp
test
or
inc
and
or
mov
cs
in
sbb
cs
fcmovu
xor
xchg
xor
data16
test
cmp
and
add
pop
lods
stos
push
lahf
scas
xor
call
pop
sbb
outs
cld
ror
push
cmp
adc
fadd
sahf
mov
js
pop
je
sar
dec
aas
add
push
sar
cld
gs
push
pop
lahf
xor
mov
inc
outs
fcmovne
add
xor
fsub
jae
and
add
retf
call
cli
pop
pop
aas
bound
(bad)
(bad)
inc
push
mov
rol
sti
jp
fistp
adc
pop
adc
cld
xchg
addr16
xlat
inc
cmps
sub
mov
mov
push
ja
sbb
cpuid
fbld
and
(bad)
fstp
push
mov
adc
es
repz
shr
mov
(bad)
xchg
(bad)
in
mov
je
enter
mov
pushf
jle
daa
xor
repnz
test
push
les
mov
lds
retf
jge
inc
adc
jno
dec
push
or
inc
xchg
pop
jmp
push
(bad)
(bad)
pop
(bad)
sub
movs
jg
xchg
imul
popa
cmp
xchg
push
jl
retf
xlat
mov
lock
push
fimul
push
jae
ficom
idiv
xor
lods
imul
inc
ror
or
mov
xacquire
push
and
aaa
lods
rol
ins
mov
stc
sub
movs
mov
fsub
mov
xlat
xchg
pop
and
inc
cwde
pop
fwait
cmp
jecxz
inc
test
and
fld
lods
mov
out
fwait
sub
jle
ror
mov
in
mov
cmp
cld
jno
fiadd
lods
jp
in
ds
fisub
adc
imul
mov
xchg
cmp
shl
call
hlt
cmc
adc
(bad)
int
mov
dec
cmps
hlt
push
loop
es
nop
sub
in
push
pop
mov
clc
dec
mov
push
jecxz
aam
outs
sbb
sbb
inc
gs
push
jno
mov
ins
adc
nop
pop
into
adc
idiv
retf
ins
movs
xchg
rcr
clc
inc
push
mov
jno
ins
add
nop
cmp
mov
push
pusha
(bad)
xchg
dec
leave
(bad)
mov
loop
ret
and
adc
clc
inc
daa
(bad)
mov
retf
call
inc
ror
loop
(bad)
(bad)
rol
cmp
xchg
out
pop
xlat
into
cmps
in
sahf
ret
push
mul
(bad)
fst
cs
dec
pop
or
repz
cmp
add
sbb
inc
add
ss
imul
mov
and
mov
mov
pushf
xchg
loopne
sbb
je
pop
pushf
cmp
inc
xchg
ror
into
mov
sub
push
fcom
jl
push
pop
jns
push
sahf
loop
sub
add
xor
fstp
mov
in
cmc
dec
fist
movs
pop
xor
imul
mov
push
xor
lods
pop
push
xor
push
and
jmp
push
enter
pop
(bad)
out
scas
loope
pop
ins
jmp
mov
aaa
arpl
fisubr
jo
xchg
push
cld
and
ret
inc
lods
hlt
inc
inc
pop
or
cmp
and
fidiv
pop
and
xchg
inc
mov
repnz
inc
in
jg
mov
or
lds
pop
xor
jae
shl
sbb
lahf
jp
mov
je
push
dec
inc
movs
dec
popf
loope
inc
fild
inc
sbb
pop
pop
mov
or
adc
mov
mov
push
xchg
pusha
inc
cmp
into
shr
xchg
cmps
and
dec
nop
call
(bad)
inc
add
idiv
mov
and
add
and
inc
popf
pop
ja
pop
in
ret
push
sbb
xchg
jmp
xchg
pop
mov
adc
or
push
adc
movs
cmps
sbb
mov
jae
adc
or
dec
lock
push
pop
fwait
pop
inc
(bad)
int
in
pop
frstpm(287
scas
pop
leave
jle
rol
out
jnp
sbb
mov
test
aam
(bad)
xchg
enter
fwait
dec
sub
inc
rcr
jo
xchg
mov
mov
jecxz
test
sbb
pop
lds
sub
outs
scas
popf
aam
adc
pop
test
fimul
sub
ins
cmc
adc
popf
pop
sbb
mov
dec
and
push
cmps
adc
push
neg
mov
dec
dec
or
add
lock
push
fmul
dec
pop
cvtps2pi
jo
jmp
xchg
mov
mov
popf
(bad)
jmp
ds
pop
scas
cmp
jb
fld
nop
jmp
xchg
adc
not
jno
pop
dec
hlt
shl
mov
test
adc
mov
imul
pop
jns
clc
ss
rol
mov
addr16
mov
adc
or
xor
dec
sbb
lock
imul
ins
(bad)
jno
test
fldz
imul
xchg
jmp
mov
int3
aaa
xor
call
dec
mov
mov
in
jg
lock
sti
inc
int
adc
add
mov
sub
mov
rol
cwde
mov
inc
cmp
lea
mov
pushf
xor
jmp
in
(bad)
sub
push
out
pop
xor
int
cwde
and
lahf
and
sbb
adc
mov
jae
rol
mov
scas
lods
repz
adc
shl
and
fist
shl
cmp
jle
call
js
mov
scas
stc
movs
sub
aad
inc
add
es
sub
pop
inc
stos
cmps
mov
mov
mov
fs
cmp
xchg
dec
sbb
fcomp
(bad)
jmp
out
lods
mov
mov
cmc
inc
push
retf
sub
or
in
jge
mov
mov
jmp
fcomp
rcr
setne
mov
sub
xchg
movs
jmp
rol
mov
push
adc
lock
in
cli
int3
cmps
dec
and
jbe
add
ret
push
mov
jge
lods
push
fcmovb
pop
or
jnp
sbb
mov
xor
pop
mov
sahf
push
pop
inc
xchg
xchg
popf
ror
sbb
jl
or
xlat
add
cmp
ret
cmps
ja
gs
push
rcl
rol
add
push
mov
hlt
sub
push
hlt
jae
test
sub
pop
sbb
fcmovbe
xor
xchg
neg
icebp
js
ficom
bound
xlat
cmp
popf
adc
in
jecxz
mov
mov
loopne
inc
(bad)
pop
ins
xlat
popf
cmp
(bad)
push
xor
out
daa
xor
or
imul
cli
jge
xor
cmc
and
mov
lods
pop
ins
mov
or
push
shr
push
pop
pop
jmp
pop
and
dec
les
jne
in
push
xchg
enter
(bad)
scas
cmp
push
not
cli
shl
enter
inc
mov
cmp
fisubr
loop
adc
sbb
repnz
add
or
dec
adc
stos
arpl
sub
xchg
lods
(bad)
repz
xor
cmp
push
mov
sub
push
inc
and
je
shl
data16
cmp
jno
hlt
sub
popf
xchg
nop
je
pushf
js
out
aas
rcr
das
sub
pop
arpl
adc
stos
dec
seta
call
aaa
mov
sub
ret
xchg
pop
into
rcl
push
xor
or
div
and
jle
stc
(bad)
shl
iret
pop
mov
dec
mov
std
imul
sbb
fldcw
mov
cwde
jmp
dec
mov
mov
sub
loop
loope
icebp
sbb
inc
out
pop
add
add
mov
das
push
jp
call
jg
jmp
ror
push
jb
test
pop
or
cdq
cs
dec
daa
mov
test
inc
sub
ffree
xor
(bad)
(bad)
push
xchg
and
mov
inc
push
sbb
xor
rcr
out
and
(bad)
out
jmp
xchg
std
cmp
stc
xor
retf
push
push
leave
mov
mov
mov
stos
pop
stc
lahf
ret
inc
loop
jo
outs
mov
lock
cmp
mov
sbb
repz
dec
sub
xor
std
jmp
cs
mov
les
fistp
xchg
add
add
out
adc
mov
mov
in
dec
aad
data16
iret
jl
scas
mov
and
in
jb
xor
xchg
test
dec
inc
cld
cdq
lods
mov
jo
movs
arpl
jbe
daa
imul
sar
movs
(bad)
fisttp
test
pop
xor
push
sbb
cld
xor
aas
(bad)
jae
dec
pop
es
ins
aam
iret
int3
mov
push
inc
fwait
lds
sti
mov
mov
sti
mov
xor
and
mov
out
jp
or
es
cmps
or
loop
sbb
in
xchg
jg
and
push
sub
mov
jl
aaa
loopne
mov
adc
mov
lods
jnp
js
jp
xor
sbb
xlat
sbb
pop
dec
xchg
(bad)
fsincos
mov
stos
add
call
xor
sahf
popf
into
pop
mov
xchg
setns
dec
out
pusha
inc
ret
in
xchg
pop
nop
(bad)
arpl
mov
sahf
dec
shr
mov
or
shl
loop
mov
mov
in
jns
and
mov
pop
jno
pop
dec
cmp
arpl
sbb
stc
mov
mov
add
xchg
mov
ins
enter
sub
int
pushf
cmp
fisttp
jbe
pusha
pop
xchg
pop
push
xlat
add
or
dec
and
aas
adc
inc
mov
in
mov
aad
cmps
or
(bad)
jecxz
inc
xor
dec
fidivr
sub
ror
fwait
sub
dec
lahf
test
mov
mov
pop
inc
mov
add
test
pop
xchg
popf
mov
or
arpl
ret
jns
push
rcr
cmps
gs
jmp
push
inc
inc
das
ficomp
fisttp
in
les
jns
cmps
pop
shl
popa
dec
icebp
out
inc
push
lock
lock
push
mov
mov
mov
push
push
jmp
sbb
imul
mov
test
xchg
jne
in
add
movs
dec
adc
rcr
mov
sbb
jp
cs
jle
xchg
movs
push
int3
jg
add
pop
mov
push
jo
outs
jmp
xor
sbb
sbb
cmp
mov
gs
inc
je
mov
inc
xor
add
cmp
retf
sbb
or
push
mov
rcr
psrlq
in
lahf
imul
clc
leave
or
into
shl
pop
sbb
push
add
mov
sti
cld
addr16
pop
leave
sub
jns
add
dec
repnz
imul
add
call
fdiv
bswap
push
xchg
fisttp
enter
rcr
xor
cmps
sub
test
stos
xchg
imul
sahf
(bad)
jmp
push
inc
xor
xor
jb
fild
test
pop
std
into
pop
retf
inc
call
jge
and
retf
add
imul
ds
pusha
lahf
shr
aaa
pop
xor
mov
aam
sti
iret
fsub
mov
push
cmp
nop
inc
loope
dec
popf
xor
fld
repnz
cli
push
aaa
sbb
sub
add
pushf
sbb
dec
scas
les
mov
mov
imul
ret
or
in
popf
fstp
in
sub
and
inc
dec
cmc
jl
xor
repz
pop
push
(bad)
in
xchg
cwde
xchg
push
mov
mov
dec
fldenv
jp
and
pop
fdivrp
and
int3
das
jge
fisubr
cmps
pop
jge
dec
cmp
add
lods
inc
mov
add
xchg
mov
mov
popf
stc
shl
jne
jmp
std
les
inc
sbb
into
cmp
dec
push
sti
pushf
inc
add
lock
aam
dec
lods
fiadd
mov
pop
(bad)
fnstsw
dec
sub
sub
nop
add
neg
xchg
mov
pop
sbb
inc
sub
xchg
nop
or
push
push
adc
ds
mov
sbb
xchg
ror
std
enter
inc
jecxz
xor
cs
sub
scas
push
fdivr
and
push
mov
out
pop
mov
adc
and
les
not
les
push
shr
dec
mov
xor
loopne
mov
aas
add
cs
ss
sbb
es
sub
jbe
ins
cmp
ret
xchg
pop
xchg
push
ins
mov
rcr
repnz
(bad)
rcr
xchg
mov
xor
push
cdq
int3
mov
(bad)
cli
sbb
jbe
dec
cmps
xchg
sbb
cmps
int3
sbb
test
aad
test
jg
mov
ins
add
fcomp
adc
sub
hlt
sti
jmp
mov
mov
pop
into
cmp
jg
movs
mov
fstp
test
pop
mov
call
aam
mov
adc
(bad)
jmp
push
jb
and
aad
ror
or
imul
cmps
fwait
add
adc
dec
jno
mov
(bad)
loope
div
add
and
xchg
call
popa
or
pop
ins
sar
mov
test
(bad)
jno
loop
in
mov
add
in
pop
mov
inc
or
hlt
xchg
jo
add
fwait
loop
lea
push
lock
arpl
adc
jmp
cmp
inc
jmp
mov
imul
cli
mov
mov
adc
aas
fidivr
(bad)
loop
jbe
enter
inc
push
fisttp
and
jns
ja
mov
mov
and
mov
lea
in
pop
cmp
add
and
mov
xchg
std
pop
test
mov
xor
jle
push
mov
and
pop
jne
icebp
inc
pop
ret
aam
adc
test
xchg
add
and
lahf
mov
stos
jbe
pop
jmp
inc
ja
scas
cdq
int
dec
nop
aam
rcl
cmc
cli
jl
or
in
xchg
aaa
xor
or
jg
lea
movs
cwde
push
jae
mov
or
xchg
xchg
sub
xor
xchg
aas
sbb
stos
add
jns
adc
adc
inc
ss
fisubr
shr
sbb
scas
sub
or
leave
sahf
loopne
add
xchg
repnz
jno
dec
stos
pop
xchg
popa
lods
sar
cmps
pop
pop
addr16
sahf
pop
in
push
addr16
sub
sbb
mov
jae
pop
das
jb
inc
dec
sub
mov
fbld
daa
inc
fidiv
mov
or
rcr
js
adc
fadd
or
pushf
jmp
test
ror
(bad)
popf
push
pop
adc
nop
adc
and
sbb
fwait
push
in
cmp
mov
sub
cmp
jnp
jecxz
dec
not
pusha
add
or
mov
mov
push
in
push
jnp
movs
cdq
test
jecxz
push
cmps
or
mov
test
sub
out
dec
ficomp
stos
cmp
pop
outs
rcl
jmp
icebp
lds
shr
mov
cmp
aad
ins
cmp
dec
ins
xchg
xor
push
pop
inc
retf
jg
mov
or
sub
mov
mov
xor
or
push
cmp
add
adc
popa
pusha
adc
mov
cs
pop
imul
and
push
or
xor
dec
out
in
outs
ret
cmp
push
or
xchg
adc
dec
gs
inc
or
jmp
je
(bad)
push
(bad)
inc
mov
mov
sub
mov
jp
jno
mov
clc
int
shr
movs
lahf
pop
mov
and
push
cs
xor
adc
je
ss
and
hlt
cld
inc
sub
pop
xchg
inc
imul
xchg
add
into
je
mov
ror
sbb
dec
ds
ds
jp
push
push
daa
cmps
dec
cmp
aaa
in
mov
pop
pop
pop
push
mov
fidivr
pop
mov
jmp
jne
inc
dec
into
mov
xchg
movs
push
jns
mov
inc
das
into
push
aaa
out
int
out
aad
xchg
pop
aad
dec
mov
pop
(bad)
xor
xor
cmp
pop
popf
ret
push
push
jns
neg
fs
add
jno
lock
imul
mov
add
cmp
popa
dec
movlps
xchg
jmp
mov
and
iret
pop
jns
es
adc
cmp
or
stos
dec
fwait
push
pushf
xchg
adc
mov
jp
call
pop
mov
in
ds
or
cmps
and
fild
or
aas
int3
inc
xlat
and
and
add
xor
nop
push
add
mov
inc
cli
adc
jbe
lahf
fnsave
imul
movs
mov
nop
mov
push
hlt
cdq
mov
aaa
jnp
outs
or
and
sbb
xor
xor
popf
xchg
add
add
dec
ja
mov
(bad)
pop
dec
xlat
lea
cdq
in
inc
movs
popf
mov
aad
pop
dec
inc
adc
and
outs
and
xchg
push
scas
xchg
lahf
mov
shr
cmp
xchg
(bad)
gs
int3
dec
xor
mov
loop
fist
add
leave
lock
test
fidiv
push
cmps
test
lahf
cmp
or
cmp
stos
push
adc
pop
pusha
rcl
popa
nop
inc
fdivr
jp
xchg
ds
daa
(bad)
imul
push
mov
scas
push
into
push
mov
jp
lea
(bad)
dec
adc
(bad)
lea
xlat
icebp
cmc
mov
jp
mov
xor
out
xor
rcl
(bad)
fld
xor
and
mov
xchg
gs
xchg
add
mov
dec
mov
call
in
in
or
dec
add
pushf
jb
mov
inc
mov
pop
rol
jmp
dec
jns
xor
pushf
std
pop
adc
lods
int
cmp
inc
lock
ds
sub
cmp
jle
call
push
into
das
xchg
enter
add
mov
pop
push
out
leave
cmp
adc
xor
(bad)
and
or
push
sub
inc
or
cmp
pop
es
xchg
scas
pop
jle
in
cmp
loop
test
add
ret
retf
xor
aam
or
das
in
inc
test
inc
(bad)
cmp
mov
in
add
sub
push
sub
cdq
adc
mov
mov
pop
or
imul
jge
(bad)
sti
mov
xor
call
das
mov
mov
std
repnz
call
mov
jle
sub
push
sbb
dec
mov
hlt
ja
mov
ret
inc
hlt
inc
cld
push
ror
dec
xor
push
inc
call
sti
fmul
mov
pop
outs
push
cmp
scas
mov
ins
hlt
jo
and
xchg
lock
xor
out
fcomp
dec
inc
push
add
loop
dec
mov
call
pop
retf
mov
adc
das
push
cmp
sub
mov
retf
dec
aad
call
pop
mov
jbe
sti
mov
adc
jne
mov
adc
push
pop
mov
sti
jmp
sbb
inc
retf
dec
dec
pop
outs
inc
sbb
jle
fimul
mov
fwait
test
cs
ret
jle
popf
test
push
push
gs
inc
mov
push
sbb
daa
ins
push
shr
mov
or
xchg
into
mov
in
repnz
rol
out
jp
movs
or
push
test
inc
jmp
stos
outs
shl
loopne
push
push
enter
scas
cmp
gs
xor
aam
jmp
dec
jg
add
xchg
xor
xchg
adc
sbb
aaa
aam
dec
xchg
xor
jmp
fldenv
aas
mov
lar
mov
imul
gs
and
je
push
sti
imul
add
or
repz
jmp
mov
add
hlt
loope
sbb
jne
out
cwde
jl
repnz
into
add
data16
ret
test
cmps
pop
pusha
or
jo
sar
pop
inc
cwde
dec
inc
hlt
sub
call
mov
mov
dec
xor
mov
jns
cli
sbb
stos
sbb
icebp
shl
mov
in
cmps
sbb
ins
sbb
jb
retf
pop
in
jle
pop
push
add
mov
js
or
fild
mov
jae
adc
aam
sub
je
sbb
adc
mov
and
mov
imul
dec
push
popa
int3
xchg
cs
push
xchg
or
adc
jp
pop
out
xchg
pop
add
aam
sbb
and
bound
rol
mov
jae
pusha
call
loop
rcl
sbb
sub
adc
lahf
in
scas
loopne
js
adc
or
int3
lock
xchg
jmp
mov
sahf
sub
adc
dec
jp
dec
mov
rcl
sbb
xchg
lds
fcom
sbb
dec
cmc
pop
or
cdq
mov
cld
or
xchg
add
leave
sbb
retf
push
mov
gs
add
sbb
shl
dec
int
jns
sbb
addr16
iret
pusha
mov
push
fcmovnbe
jno
loopne
and
fist
dec
sbb
lods
sbb
cli
push
cwde
sub
push
pusha
ins
call
movs
shl
jno
fbld
mov
push
jno
(bad)
mov
aam
sub
jle
push
or
rol
les
or
stos
dec
mov
mov
pop
dec
xchg
pop
inc
add
or
ja
inc
test
push
adc
and
test
cmps
xor
ds
fcom
xchg
jae
push
lds
mov
and
inc
push
pop
sar
and
adc
and
out
add
jl
arpl
push
inc
outs
or
test
scas
ffree
mov
cmp
cmc
pop
cs
mov
sub
test
stos
mov
mov
cdq
pop
in
push
jne
daa
sbb
movs
adc
jle
(bad)
aam
es
imul
dec
test
sub
loop
adc
xchg
dec
fcomp
dec
jbe
cwde
mov
mov
jns
adc
pop
into
inc
imul
test
xor
cmp
adc
stos
and
sbb
mov
arpl
scas
or
push
and
in
leave
xchg
xchg
ja
inc
sbb
stc
(bad)
sbb
arpl
into
jle
xchg
icebp
cmp
push
xor
xchg
add
mov
ror
mov
xchg
xchg
shl
cs
or
and
movs
sbb
push
sub
xchg
jo
push
pop
call
lock
pop
inc
xchg
dec
sbb
cmp
xor
stc
test
rcl
xor
sbb
ja
cdq
pushf
loop
ins
add
sti
mul
ins
vmovntps
mov
mov
push
push
(bad)
mov
mov
mov
cmp
nop
jae
sub
xchg
ins
add
neg
mov
sahf
retf
mov
sbb
imul
call
fadd
leave
sbb
push
jns
cld
push
sub
jne
stos
call
add
into
test
mov
add
jg
gs
fdiv
std
mov
(bad)
in
(bad)
stc
and
mov
jp
add
push
inc
test
xor
movs
enter
mov
test
xchg
fwait
ins
iret
pop
mov
stc
mov
jmp
push
add
pop
mov
mov
adc
out
cmp
pop
inc
imul
sbb
loop
mov
and
daa
lahf
inc
adc
icebp
call
adc
and
push
mov
cwde
dec
and
in
fadd
fcomp
iret
(bad)
in
or
ficom
push
inc
push
repnz
(bad)
pop
xchg
in
test
cmp
sub
(bad)
lods
setno
dec
jno
fwait
(bad)
add
mov
mov
cmp
mov
inc
outs
push
fnstcw
sbb
sbb
sbb
shr
sar
xor
ret
in
jecxz
and
cwde
iret
or
movs
inc
or
rcl
pop
imul
scas
imul
cmp
inc
test
xor
pushf
sahf
fisubr
cmp
addr16
lods
idiv
psrad
mov
out
stc
sbb
ret
retf
fs
dec
mov
ins
mov
rol
pop
xchg
or
outs
mov
jmp
iret
dec
xchg
enter
lods
arpl
das
iret
xchg
jns
push
adc
pop
shl
jl
sub
mov
arpl
stos
add
imul
inc
xor
jno
das
outs
push
add
and
inc
lds
xor
popa
dec
arpl
fisubr
aad
sbb
push
xchg
ds
inc
and
addr16
lock
mov
xor
jl
push
sub
fisub
fstp
rol
push
fstp
sub
xor
push
loop
pop
fwait
add
ins
ss
dec
mov
repz
jp
stc
ja
adc
and
pop
rcr
scas
xor
inc
repz
or
in
sub
sti
xor
pop
and
outs
or
sub
sbb
cmps
push
sub
cdq
xchg
(bad)
xchg
sub
jb
out
pop
das
ret
pop
rcr
ins
and
cwde
aam
jge
sbb
movs
adc
or
into
mov
fnstcw
test
mov
push
fiadd
inc
ror
mov
pushf
int
mov
hlt
(bad)
jg
test
inc
add
aam
sbb
nop
sar
sbb
inc
push
inc
stc
adc
xchg
(bad)
pushf
inc
stos
cdq
out
sub
stos
pop
jge
jmp
outs
inc
or
sub
jo
stos
push
xchg
push
lds
push
pop
jns
test
rcr
hlt
dec
retf
dec
add
and
jnp
pop
shr
inc
pushf
xchg
test
stos
push
(bad)
fdiv
inc
mov
inc
push
std
mov
adc
pop
inc
xchg
inc
sub
xchg
cmp
addr16
jbe
jg
call
inc
pop
div
jp
inc
push
loopne
(bad)
dec
(bad)
arpl
lahf
jle
mov
add
push
sahf
fisub
into
in
mov
fmulp
movaps
push
outs
js
loope
out
mov
(bad)
fdiv
stos
shl
mov
push
inc
call
inc
in
mov
push
adc
jl
xchg
pusha
push
mov
jmp
jb
xor
fnstcw
mov
sub
movs
stos
xor
sbb
ss
stc
pop
test
jae
jg
daa
dec
bound
cwde
ret
jbe
scas
fistp
dec
jne
inc
bound
sbb
mov
enter
add
ins
test
mov
and
push
xchg
mov
jle
addr16
inc
into
stc
movs
and
cmp
sub
cmp
xchg
mov
xor
or
loope
movs
mov
ret
ret
push
and
shl
inc
out
out
pop
add
push
mov
aam
xchg
mov
cmps
bound
dec
mov
dec
in
jg
lods
jnp
daa
sbb
push
add
in
lock
nop
(bad)
pop
mov
fdiv
mov
(bad)
jno
mov
jno
mov
sbb
sub
adc
xchg
sbb
pusha
sbb
push
mov
pop
and
fadd
cmp
dec
pop
test
(bad)
ds
jno
mov
push
lahf
jmp
push
mov
adc
in
ret
jb
call
addr16
rcr
add
push
mov
pop
das
jmp
pop
jo
je
or
mov
xor
scas
jo
jmp
test
call
lods
add
xchg
push
sub
repnz
pop
xchg
nop
xchg
repnz
sar
lock
imul
sbb
jo
ins
xchg
push
jge
mov
dec
xchg
mov
mov
push
cdq
ins
lea
or
fistp
pop
add
cmp
pop
sub
nop
adc
aam
mov
dec
push
test
mov
inc
xchg
mov
fsub
pop
jmp
mov
dec
jo
scas
and
sbb
xchg
pop
ja
mov
sbb
hlt
mov
int3
jns
xor
jns
lahf
loopne
inc
jae
int
lahf
loope
inc
xchg
ret
mov
ror
popa
cli
mov
pop
pop
mov
popf
jae
div
inc
aas
jbe
das
stc
sbb
mov
and
add
inc
inc
fmul
sti
and
fld
aas
lods
retf
inc
pushf
cmps
or
cli
jp
ins
push
cmp
call
stos
push
popf
mov
jnp
mov
(bad)
and
inc
(bad)
fcmovu
gs
retf
inc
pop
rol
lods
inc
dec
not
xor
sub
in
sbb
movs
add
and
inc
pop
int3
mov
and
pop
sub
iret
je
clc
ror
add
push
das
pop
jl
push
(bad)
jns
add
xor
ret
pop
jl
ds
adc
sub
les
push
aas
push
xchg
jns
imul
add
repnz
mov
or
push
sub
cmps
add
fwait
xchg
mov
xlat
out
and
pop
int
inc
rcr
lock
adc
loopne
add
dec
repz
push
je
push
xor
imul
mov
jno
ins
lods
adc
lahf
xor
adc
inc
ror
lods
push
xchg
sbb
lods
sub
adc
(bad)
push
cmps
mov
scas
inc
stos
mov
or
sbb
dec
fwait
dec
call
(bad)
mov
and
or
sub
sahf
call
pop
lods
sub
and
xchg
lea
repz
sbb
mov
outs
mov
xor
data16
add
fisttp
jo
dec
push
xor
push
adc
aam
ja
or
je
cmp
pop
cli
sbb
clc
xlat
sbb
jecxz
xlat
imul
jle
fdivr
fcom
mov
jp
push
jno
ds
cmp
push
push
out
xchg
jl
in
ret
test
sub
and
clc
xchg
or
mov
test
sub
jecxz
popa
test
call
jecxz
xor
jns
pause
iret
enter
ss
fnstsw
jnp
cmps
inc
in
into
lods
ret
dec
sub
xchg
lods
xchg
xchg
pop
mov
fdiv
mov
pushf
clc
jo
push
out
and
pop
(bad)
mov
lds
iret
out
or
mov
cli
cmp
or
loop
jmp
push
in
test
add
cmp
nop
popf
pop
ror
lahf
test
or
out
push
pushf
daa
icebp
enterw
cdq
sbb
inc
xor
and
sahf
jg
adc
idiv
outs
lds
mov
call
retf
pusha
xchg
xor
or
sub
out
(bad)
addr16
sub
addr16
out
cwde
pop
popf
mov
pop
add
inc
or
(bad)
mov
jb
icebp
sbb
push
retf
imul
(bad)
jp
pop
jl
std
xor
adc
int
adc
jl
inc
scas
xor
inc
inc
push
xlat
lds
cld
into
in
push
arpl
and
dec
pusha
es
jbe
dec
out
xor
adc
xchg
and
pop
(bad)
or
das
fidivr
ror
out
mov
mov
outs
inc
cmp
aas
fadd
sbb
(bad)
fdivr
push
lea
aas
jecxz
sbb
or
add
mov
sub
mov
pop
jmp
jmp
stc
sti
int3
lock
cli
fdiv
add
rcl
dec
pop
mov
adc
lods
lds
xchg
lock
sar
push
xor
(bad)
xchg
adc
jl
scas
std
fnop
cld
ins
mov
dec
sahf
push
mov
xor
lods
fistp
data16
(bad)
mov
xor
push
xchg
sbb
rcl
sub
add
mov
ror
enter
das
fs
test
mov
dec
lock
sbb
add
adc
push
jo
test
(bad)
push
ss
stos
cmp
jno
sub
and
std
dec
pusha
push
mov
jnp
xchg
mul
test
adc
sub
xor
call
fld
lahf
or
retf
and
mov
pop
cli
lahf
push
sub
and
or
jbe
daa
jb
shl
aam
imul
mov
push
cvttps2pi
sub
stos
movs
test
xor
mov
nop
pop
mov
inc
mov
push
mov
cmp
jp
jl
arpl
stos
mov
dec
loop
cmp
jne
lock
pop
xchg
adc
and
xchg
call
xor
popf
cmp
test
mov
rol
pop
fcomi
jp
add
xchg
shl
lods
test
lea
cli
aam
xchg
dec
sti
mov
mov
cmps
or
fld
std
dec
es
fisttp
mov
mov
ror
add
ds
xor
jno
out
or
push
xchg
push
cld
gs
repz
add
jge
jl
iret
mov
dec
(bad)
jge
xchg
pop
inc
mov
bound
mov
ret
sar
test
retf
cmp
push
cmp
test
icebp
jne
dec
shl
xchg
pusha
in
shl
(bad)
cmps
xor
jo
or
outs
pusha
adc
loopne
xchg
push
push
or
or
lea
int3
mov
inc
push
mov
inc
loopne
es
(bad)
add
dec
pop
shr
dec
sbb
or
inc
dec
scas
shl
pop
mov
sahf
sub
pusha
pop
lahf
mov
mov
inc
jno
repz
xchg
or
sbb
pop
movs
dec
cmp
mov
(bad)
pop
pop
xor
ja
sub
add
and
cmp
dec
ss
(bad)
inc
adc
and
(bad)
or
mov
(bad)
jae
sub
sub
fiadd
bnd
(bad)
and
push
cs
mov
mov
cmp
pop
pop
imul
test
lds
in
jmp
sbb
jle
mov
lahf
into
(bad)
ficom
mov
fld
or
add
cmp
mov
mul
jno
cmp
sbb
fcomp
mov
in
ret
jno
leave
sub
dec
(bad)
jbe
mov
adc
or
loope
int
stos
ins
cwde
call
jne
gs
test
ins
out
or
mov
lods
push
xchg
pop
mov
xchg
mov
ds
xor
int3
adc
pushf
cwde
test
xchg
cmc
movs
inc
loopne
pop
push
out
test
shl
push
mov
mov
sub
test
or
stc
xor
fcmovbe
mov
pop
das
into
lahf
cmp
pop
inc
ret
aaa
xchg
stos
test
push
mov
jle
pop
xchg
sub
enter
in
adc
in
aaa
in
fdiv
xchg
not
sub
dec
das
test
xor
idiv
div
faddp
fwait
mov
clc
adc
call
mov
popa
add
xchg
dec
adc
jmp
mov
jecxz
ins
cli
test
mov
sbb
pop
leave
fisub
bound
jg
jge
mov
les
out
aad
loop
xor
sti
adc
in
cmp
je
out
jl
pop
in
add
mov
jne
jge
outs
(bad)
das
fwait
test
mov
inc
dec
movs
out
pop
mov
add
or
push
jg
fs
imul
push
jmp
lods
or
mov
xchg
jns
pop
sbb
in
loop
jl
mov
int3
pop
mov
mov
dec
push
out
outs
push
cmp
and
jns
stc
lods
(bad)
fsubr
mov
mov
mov
sub
in
sub
xor
stos
retf
sbb
xchg
cwde
pop
lea
xlat
ror
das
or
adc
shr
xor
stos
dec
and
sahf
popf
cmp
mov
call
(bad)
hlt
lds
dec
xor
shl
pop
dec
push
arpl
cmps
(bad)
icebp
call
in
stos
xor
inc
dec
fwait
mov
pop
or
movs
jg
clc
scas
inc
hlt
mov
in
scas
fdivr
(bad)
dec
jmp
push
les
retf
push
mul
mov
sub
mov
div
loop
mov
mov
bound
mov
frndint
jle
ret
xchg
xchg
or
push
out
adc
mov
sub
xor
aaa
popa
sti
mov
adc
add
mov
inc
(bad)
sub
movs
adc
or
lods
cdq
mov
movs
fmul
call
mov
pop
jnp
push
pop
sub
dec
mov
ins
sahf
xor
pop
jbe
lea
or
fsubr
add
and
xor
(bad)
and
stos
bound
xor
enter
pop
mov
mov
sbb
mov
sub
or
out
enter
adc
sub
sbb
in
xchg
sub
cmp
arpl
call
jne
jp
mov
aaa
xor
(bad)
icebp
push
into
pop
lods
pop
mov
add
add
(bad)
mov
cdq
pop
or
out
pop
push
dec
xchg
popa
mov
cdq
push
push
ja
adc
cmps
push
repz
icebp
xchg
icebp
fist
mov
out
mov
leave
mov
mov
out
mov
out
or
fst
neg
xchg
stos
aaa
push
mov
retf
imul
outs
push
ins
les
retf
shr
mov
or
fcmovnu
ja
cmp
xchg
adc
ins
les
push
jno
jg
xlat
xor
xchg
leave
je
mov
loop
addr16
(bad)
cmp
inc
outs
jle
call
int
out
fsubr
sbb
les
cld
pop
sub
stos
aad
inc
mov
(bad)
cwde
sbb
jmp
or
xor
ficom
pop
xor
mov
push
push
ss
clc
ins
int3
inc
loope
dec
mov
iret
lds
loope
or
cmp
fidivr
mov
or
aaa
mov
scas
int
add
mov
dec
fs
mov
cmp
test
cmp
mov
iret
adc
jae
dec
outs
or
mov
imul
data16
and
or
sub
push
cmc
mov
loope
pop
test
lds
lea
addr16
aaa
lds
adc
sbb
lods
cmps
aam
ins
sub
fnstcw
in
xchg
sbb
cld
jmp
(bad)
cmp
fdivr
sbb
push
sbb
inc
aad
pop
add
push
adc
xchg
cmps
sbb
push
sub
fld
lods
adc
dec
arpl
cmp
or
jle
jmp
mov
adc
xchg
ds
sub
and
adc
jnp
adc
sbb
mov
mov
inc
mov
test
ret
or
mov
pop
dec
fwait
test
retf
and
adc
jmp
sbb
cmps
mov
ss
aam
lods
or
dec
loop
stos
dec
mov
ja
push
fiadd
lea
xor
stos
les
and
cmps
cli
dec
mov
aaa
xchg
dec
mov
rcl
xor
lds
xchg
and
in
pop
push
and
mov
inc
out
inc
fstp
aas
mov
add
bound
adc
inc
fcom
int3
pop
out
jp
or
dec
xor
xor
sub
cmp
lds
jp
cdq
mov
sahf
pop
pop
xor
jo
add
inc
dec
inc
leave
jb
xchg
and
mov
leave
rep
pushf
dec
mov
jo
out
cmp
test
and
in
fwait
push
pop
(bad)
ins
stos
push
rol
shr
push
aad
(bad)
xchg
xor
fnstsw
inc
cmps
test
ds
xor
stos
push
mov
sti
or
xor
test
scas
pop
sub
scas
sbb
enter
mov
add
(bad)
ficom
jae
add
cmps
ror
mov
sbb
dec
pop
aaa
bound
scas
in
popf
imul
jae
push
add
and
inc
fnstenv
(bad)
in
mov
iret
pop
xchg
stc
pop
cmp
mov
fs
dec
dec
inc
dec
enter
and
mov
dec
aaa
cdq
out
es
imul
call
mov
sub
adc
add
dec
out
pop
stos
pop
cli
pshufw
das
int3
dec
dec
frstor
aam
inc
push
jmp
and
pop
mov
je
arpl
movs
imul
popf
adc
or
loop
add
mov
imul
xor
push
shl
leave
cld
jo
add
lahf
das
mov
fcom
imul
dec
or
fs
shr
pop
dec
int
jp
mov
xor
ss
sbb
mov
cdq
neg
clc
sbb
mov
imul
fscale
mov
pop
cmp
inc
or
dec
push
daa
mov
push
sub
pop
push
aas
xchg
rol
xor
hlt
call
lea
adc
pop
xor
mov
mov
sub
lock
bound
push
fdivr
push
pop
push
push
xchg
cmp
popf
lds
mov
call
stc
push
aam
or
jmp
pop
loopne
and
sbb
mov
mov
xchg
pop
shr
sub
push
dec
fbld
outs
push
mov
std
call
rcr
fs
pop
dec
loopne
push
lods
sbb
pusha
xchg
gs
addr16
pusha
sar
push
dec
adc
xchg
cwde
shr
lds
ins
inc
inc
mov
fimul
sbb
icebp
dec
push
cwde
inc
push
mov
xor
adc
arpl
mov
(bad)
in
cld
js
clc
jge
(bad)
scas
jge
out
mov
pusha
enter
push
vphaddubw
daa
stos
cmp
mov
dec
popf
sub
(bad)
aad
movq
fwait
inc
lods
aas
jbe
jb
push
fisttp
push
repnz
retf
ja
loopne
and
inc
xchg
and
dec
pop
scas
in
mov
fistp
pushf
hlt
test
ret
jp
imul
push
mov
jp
into
and
lds
or
xchg
sbb
push
out
mov
test
aas
jp
fsubr
and
dec
outs
cdq
in
mov
in
and
jae
dec
mov
inc
mov
sub
jg
(bad)
loopne
call
scas
xchg
mov
jp
sub
xor
aam
cld
jge
fcmovnb
(bad)
and
dec
jb
mov
add
mov
jno
cdq
mov
ror
mov
call
lea
adc
dec
sbb
mov
inc
pop
cmps
imul
test
imul
stc
jmp
js
xor
sub
and
xor
inc
sub
xor
xor
add
popa
daa
pop
scas
cmp
cmc
mov
repz
cmp
dec
(bad)
lea
js
xlat
dec
ins
(bad)
dec
sub
add
cmp
xor
inc
jl
inc
std
mov
and
mov
mov
imul
and
out
mov
aad
cmps
adc
(bad)
xchg
repz
call
sti
fsub
push
pop
leave
clc
aam
retf
popf
or
and
push
mov
mov
retf
in
loopne
out
pop
jmp
xor
mov
fadd
mov
cmp
mov
aaa
shr
cli
lock
jne
jg
lods
(bad)
push
sub
stos
fwait
sbb
push
push
inc
xor
cmp
gs
push
xor
cmp
in
loopne
dec
stos
sti
and
inc
push
(bad)
fs
mov
test
sub
pusha
jno
lea
push
rol
inc
sub
dec
idiv
outs
push
push
and
cld
rol
push
frstor
lea
popf
outs
jg
mov
or
in
ja
lods
enter
adc
xor
mov
xchg
dec
ror
adc
pop
xchg
jp
push
add
mov
jg
gs
mov
or
jnp
mov
aaa
adc
in
pop
mov
das
pop
sbb
aam
iret
push
cmp
mov
outs
and
jne
iret
lods
scas
out
test
ret
not
mul
gs
add
cmp
xor
ret
(bad)
dec
push
and
pusha
mov
aaa
aad
pop
sbb
inc
jg
scas
push
sbb
push
jne
xor
ins
idiv
mov
pushf
push
sbb
call
ror
arpl
pusha
jge
pop
fst
push
xchg
popf
push
dec
mov
add
div
adc
nop
xor
push
imul
add
dec
popf
hlt
gs
and
mov
mov
mov
dec
inc
cmp
or
movs
jmp
or
dec
sahf
jmp
das
mov
imul
mov
cmc
ror
aaa
mov
cmp
jne
pop
daa
adc
fisttp
les
gs
int
xor
jne
loope
(bad)
push
cli
pop
aaa
pop
ficomp
jnp
jl
lods
mov
sbb
jns
in
xchg
mov
inc
not
push
mov
adc
cmp
push
lahf
fidivr
xchg
mov
cmc
pusha
popa
pushf
jbe
and
adc
movs
in
jns
mov
push
cli
test
cli
jo
push
stos
out
xchg
in
dec
push
mov
ins
lods
and
add
stos
or
xlat
mov
repnz
jg
sar
shl
pusha
xchg
sub
adc
repz
loop
adc
clc
mov
pop
cdq
xchg
sub
dec
mov
add
jo
pop
fs
mov
pushf
ficomp
inc
ficomp
push
xchg
ss
jmp
mov
cmp
outs
add
inc
out
push
mov
xor
cmps
jp
add
dec
adc
mov
sti
mov
jno
neg
in
std
cli
push
mov
fnstsw
mov
ficom
xor
mov
mov
std
jg
xchg
jo
inc
adc
push
or
mov
adc
call
in
sbb
or
inc
pop
nop
aaa
xlat
xor
movs
sub
jg
int
(bad)
and
test
sti
jno
or
mov
mov
ins
jb
test
sbb
out
adc
dec
ins
in
cmp
mov
dec
ja
or
rol
add
mov
adc
sub
ins
cmp
sub
test
je
imul
cmp
cmp
sbb
cdq
test
mov
jmp
pop
daa
push
out
test
push
mov
mov
inc
add
int3
call
push
test
mov
(bad)
mov
test
aam
and
jle
dec
mov
push
sbb
scas
test
push
push
shr
aam
push
push
sub
push
dec
sub
adc
xor
cmps
lock
mov
ret
call
sbb
jp
aaa
add
aas
(bad)
xor
mov
(bad)
cmp
push
add
cmp
call
sbb
and
add
adc
or
cwde
arpl
or
jne
pop
jo
stos
loop
and
cmc
(bad)
fnstsw
add
cwde
cs
inc
adc
jge
jl
add
mov
ret
out
push
push
adc
les
push
lods
xor
or
pop
mov
fbld
nop
xor
sbb
cmp
push
sbb
inc
cmp
cmp
lahf
loop
xor
(bad)
out
dec
(bad)
sti
repnz
test
mov
aaa
xchg
xchg
cmp
lods
fisttp
xchg
lahf
or
(bad)
ins
sub
inc
jmp
xchg
ins
jb
push
xchg
popf
or
push
cdq
pusha
sbb
ja
fwait
add
jnp
rcr
inc
(bad)
std
jg
call
add
in
shr
js
mov
cdq
xlat
mov
aam
jp
xor
xchg
or
adc
push
mov
std
mov
xchg
jg
scas
adc
dec
or
js
dec
cmp
jns
adc
and
sub
out
movs
pop
push
sbb
or
push
sbb
call
shl
out
xchg
cmp
scas
dec
add
(bad)
sahf
movzx
cmp
xor
ins
test
lods
int3
ror
mov
xchg
adc
push
lock
dec
sub
add
test
mov
cmps
xor
mov
mov
and
sbb
mov
mov
ror
out
cmp
pusha
retf
jnp
xor
mov
dec
sbb
sbb
gs
and
loopne
push
fldenv
cmp
stos
xor
jae
ds
or
shl
sbb
stc
sub
inc
and
xchg
cmp
cmp
in
pop
mov
sbb
ds
inc
(bad)
test
dec
xchg
lods
retf
retf
pusha
fstp
test
call
jge
mov
push
adc
adc
idiv
and
cmp
xor
cld
loop
enter
sahf
mov
or
mov
add
mov
call
rcl
sub
fwait
sbb
cmps
enter
pop
hlt
xchg
sar
imul
dec
shl
mov
fstp
js
sub
jmp
retf
lock
aad
adc
aam
pop
xlat
or
mov
inc
and
dec
movs
xchg
popf
mov
movs
into
cwde
push
ins
sti
mov
and
aad
push
xchg
sub
hlt
pop
adc
lods
sbb
push
or
(bad)
in
jg
aad
inc
scas
(bad)
jno
jbe
repnz
cmp
pop
stos
and
out
test
mov
pop
push
sub
add
movs
int
jne
push
mov
das
push
dec
loop
loop
outs
nop
mov
jns
cwde
fwait
and
pop
popf
or
(bad)
push
sub
jmp
outs
icebp
pop
in
dec
add
lods
psubb
fdiv
pop
sub
xlat
inc
cdq
or
stos
cmps
lds
add
jge
(bad)
(bad)
mov
cs
mov
push
hlt
into
jno
nop
adc
xchg
and
mov
bt
movs
outs
inc
out
cmp
out
or
fwait
ja
or
push
inc
out
test
xor
call
and
arpl
inc
sqrtps
or
xchg
jo
cmp
add
in
lods
xchg
mov
pop
ins
push
popf
repz
xchg
sub
push
int3
jne
mov
xor
and
add
push
push
lgs
test
sub
movs
aas
out
xchg
mov
sbb
xchg
hlt
mov
sbb
jl
add
xor
repnz
adc
pop
div
ds
pop
pop
leave
push
sar
pop
xchg
repz
fist
jmp
ret
mov
cwde
xchg
(bad)
cmp
sahf
sub
sub
std
out
dec
add
ss
imul
fs
cmp
fisubr
loop
lahf
cmps
xlat
push
pop
xlat
add
and
test
cmps
push
and
pop
mov
fidivr
push
dec
jo
jecxz
and
ja
rol
stos
imul
xchg
jge
(bad)
fistp
bound
addr16
rcr
pop
sub
shl
or
in
fwait
jecxz
and
shl
sub
push
sub
add
leave
xchg
ror
dec
add
push
jo
xchg
lds
pop
xchg
push
add
lds
push
pusha
stc
repnz
inc
cmp
xor
popa
movs
xor
or
enter
es
and
mov
mov
mov
sbb
stos
dec
loope
(bad)
pop
xchg
adc
call
sbb
mul
out
adc
std
test
xlat
jp
not
or
xchg
dec
dec
pop
cmp
push
xor
fiadd
or
cld
std
inc
sub
push
nop
mov
test
cmp
mov
test
jge
shr
cmp
push
mov
(bad)
aas
arpl
cs
jge
jo
and
inc
enter
mov
(bad)
cmps
push
push
add
push
cld
out
lods
inc
add
push
repnz
xor
push
jecxz
pop
mov
into
dec
mov
shl
mov
inc
and
inc
or
jmp
popf
adc
mov
dec
mov
fistp
mov
and
int3
mov
aad
pop
mov
and
jmp
addr16
test
dec
pop
in
cmp
int
(bad)
mov
cmp
push
ja
add
fisttp
or
jns
mov
(bad)
sti
imul
sub
(bad)
jno
sub
enter
lock
jp
popf
push
and
sub
popf
retf
cmp
imul
fimul
add
and
xchg
mov
mov
and
jl
in
mov
fidivr
jl
ds
jae
push
pop
cmps
xor
add
pop
cmp
ret
shl
mov
aas
add
dec
popf
fs
mov
gs
ror
(bad)
mov
les
or
sub
push
or
loope
cmp
out
jg
xchg
(bad)
cmp
lods
sar
jecxz
mov
fwait
jmp
ins
lea
mov
jle
not
push
jecxz
jno
mov
cmp
sub
test
add
push
mov
outs
mov
aam
xchg
jle
gs
loopne
xchg
std
xor
lahf
int
daa
adc
add
cmp
clc
jne
mov
scas
ss
(bad)
cli
inc
cmps
rcr
test
mov
cld
push
aad
pop
mov
and
outs
adc
pop
(bad)
fisub
or
mov
(bad)
xor
jnp
les
adc
dec
fwait
mov
and
cmp
pavgb
sub
adc
lods
add
das
stos
jle
pop
cmps
lea
push
xor
mov
icebp
das
or
repz
jp
mov
cld
into
mov
(bad)
jmp
sti
push
xor
stc
retf
iret
lods
pop
jmp
test
(bad)
iret
in
pop
bound
addr16
xor
cmp
(bad)
pop
ret
pop
pushf
js
sub
retf
push
jg
lahf
sbb
push
sbb
call
jge
ds
mov
rol
sbb
test
sub
retf
retf
fnstsw
ins
add
inc
jo
mov
sub
push
pop
and
mov
retf
rol
mov
sti
add
inc
arpl
div
movs
int3
sbb
xchg
sub
shl
push
sbb
lock
fstp
test
test
(bad)
sbb
cwde
xchg
leave
pop
mov
sti
mov
cmp
jg
jmp
cmp
mov
ret
add
adc
xchg
call
in
xor
pop
adc
ret
cmp
(bad)
fst
jns
loop
jae
push
sub
mov
pop
imul
cmp
mov
inc
cdq
les
aas
dec
sbb
cli
rcr
add
add
out
jae
popa
jb
pop
inc
aaa
and
mov
lods
push
ror
adc
cmp
mov
jno
out
out
cmp
pusha
jnp
cmp
jle
(bad)
and
sbb
sub
inc
mov
cdq
cs
adc
xchg
push
in
lahf
test
loopne
mov
add
xchg
xlat
and
pop
mov
mov
inc
shl
loopne
cmc
dec
xlat
xor
mov
imul
push
jo
and
ficomp
jp
pop
shl
mov
sub
xchg
cmp
int
jge
pop
data16
cmp
out
ins
dec
stos
jmp
pop
popa
mov
push
pop
xchg
jb
inc
or
jo
and
adc
mov
xchg
daa
in
push
mov
cli
mov
jo
jmp
enter
push
add
and
jmp
inc
gs
je
fwait
sahf
(bad)
xor
adc
loop
inc
addr16
aad
popf
lock
dec
jle
retf
pop
xchg
jmp
or
ret
addr16
xchg
mov
push
mov
stos
cli
mov
mov
cmp
jmp
int3
lea
(bad)
stos
das
sub
leave
add
xor
sbb
and
pop
inc
adc
mov
adc
(bad)
mov
jmp
mov
ins
aas
out
dec
idiv
test
jb
pop
push
shr
mov
(bad)
outs
dec
ret
pop
dec
(bad)
xlat
outs
ss
mov
sahf
out
xor
outs
mov
cmps
inc
lods
loope
out
inc
jle
pop
dec
dec
nop
ret
jnp
push
and
adc
lahf
or
xchg
lods
adc
adc
in
out
hlt
ficomp
ret
dec
imul
shl
mov
xor
pop
sbb
les
movs
xchg
mov
push
(bad)
mov
sbb
xchg
rcr
sbb
mov
retf
sub
mov
dec
pop
mov
call
cs
test
cmp
xor
(bad)
sbb
xchg
jb
xor
push
ret
jno
inc
test
out
sub
lods
adc
imul
jo
imul
dec
adc
and
adc
int
cmp
mov
sub
movs
pminub
cmp
xchg
jbe
iret
call
sub
pop
enter
cmp
add
mov
jo
push
pop
push
mov
lods
sub
or
aad
sbb
aas
sti
pusha
fwait
sub
xor
loopne
bound
out
retf
jns
jo
(bad)
pop
adc
sar
push
xchg
test
cwde
movs
enter
mov
mov
enter
or
mov
sar
sub
mov
and
jmp
int3
call
adc
push
add
cli
(bad)
jp
mov
mov
jecxz
adc
xchg
cmp
mov
cmc
and
enter
ror
jecxz
stc
(bad)
js
cld
outs
lods
test
repnz
mov
push
mov
daa
int
fnstcw
mov
jno
inc
sti
sar
les
pop
push
movs
push
pushf
jp
lods
adc
mov
xchg
cs
dec
gs
jmp
call
sub
das
dec
mov
mov
dec
dec
ins
add
jp
std
(bad)
xchg
das
test
cwde
dec
sub
movs
ret
imul
mov
jbe
or
pop
xchg
sub
das
push
rcr
fsub
dec
in
inc
cmp
inc
jnp
je
mov
jns
stos
in
test
aad
movs
sbb
hlt
lods
retf
fcomp
mov
push
jno
inc
bound
lods
das
sub
mov
pop
(bad)
sbb
jle
inc
xor
or
mov
stc
jecxz
adc
aaa
stc
sahf
repz
retf
nop
inc
sub
dec
cmps
call
jo
sub
xchg
xor
sbb
aad
inc
dec
add
dec
pop
xchg
int3
loope
in
sub
push
mov
mov
inc
cdq
pop
(bad)
sbb
stos
add
cmp
ins
movs
gs
enter
jmp
dec
jp
jne
icebp
and
add
cdq
xchg
lods
jge
cmp
and
add
xchg
mov
push
mov
or
inc
(bad)
fsub
test
iret
inc
cmc
les
mov
jecxz
(bad)
sbb
cmp
ret
loopne
xor
bswap
inc
sbb
pop
inc
lods
pop
push
or
sbb
fmul
xchg
out
aaa
mov
test
jae
add
mov
dec
adc
das
jns
gs
push
fwait
jnp
(bad)
sbb
std
xor
das
or
pop
jo
xchg
scas
adc
adc
cmps
sub
movs
jb
movs
lods
inc
popf
mov
add
mov
out
lock
add
push
rcr
push
xor
mov
sti
pop
cmp
daa
pop
popf
push
pop
data16
shl
jnp
adc
loopne
pop
test
test
or
sub
out
xor
cmp
or
cmps
dec
dec
arpl
jo
push
ins
ins
push
pop
icebp
pop
push
sbb
ins
lods
xchg
sub
test
sbb
ja
mov
xor
cmps
inc
out
sahf
pop
dec
data16
mov
test
loop
pop
mov
inc
mov
cli
add
retf
aam
leave
in
and
or
in
out
mov
mov
dec
mov
inc
mov
(bad)
xchg
push
mov
fiadd
ss
xchg
mov
pop
cmp
cli
ror
mov
dec
ret
fs
enter
fst
repnz
pop
cmpxchg8b
hlt
mov
push
adc
js
addr16
push
ins
stos
fld
outs
ret
xor
pop
inc
cmp
inc
inc
xchg
inc
retf
pop
shl
je
mov
aaa
xchg
movs
imul
cmp
mov
jp
movs
addr16
test
ins
dec
xor
inc
xchg
popf
cmp
mov
push
out
pushf
mov
mov
int3
and
repnz
inc
mov
mov
adc
fstp
cmp
(bad)
dec
xchg
push
fidivr
sbb
jmp
sub
aaa
movs
arpl
xchg
pusha
test
je
lods
jns
fsub
mov
mov
inc
cmp
inc
adc
or
ret
scas
dec
mov
es
jmp
push
jb
pusha
std
imul
das
mov
pushf
push
or
inc
test
xchg
out
pop
adc
sbb
retf
add
xor
arpl
xchg
or
loop
das
jmp
push
inc
(bad)
mov
out
call
push
push
xor
scas
adc
sbb
imul
daa
jns
adc
movs
pop
out
jne
int3
bound
jb
push
les
lea
rcl
jae
not
lods
add
mov
pop
or
call
js
repz
ins
jle
not
xchg
retf
js
jmp
adc
mov
test
(bad)
jmp
iret
cdq
and
inc
jno
inc
imul
xor
push
dec
and
test
inc
sbb
lods
push
sar
push
push
(bad)
fisub
jno
jo
outs
add
in
pop
push
es
pop
xor
ret
mov
gs
fidivr
jge
test
sbb
xor
xor
mov
push
or
jns
xchg
nop
push
inc
xchg
(bad)
aaa
xchg
sbb
dec
lods
mov
jmp
hlt
and
cmp
cmp
xchg
xor
neg
repnz
xchg
movzx
xor
mov
jmp
in
(bad)
dec
mov
retf
shl
inc
inc
inc
and
add
arpl
fimul
pop
xchg
xchg
stos
rol
aas
xchg
arpl
mov
adc
dec
(bad)
adc
push
add
sub
leave
nop
dec
inc
mov
jge
lock
mov
push
push
sbb
pop
jp
out
sbb
pop
mov
pop
(bad)
cmp
inc
stos
(bad)
adc
rol
xor
repz
pop
push
xor
sbb
ss
cmps
mov
xchg
hlt
add
sbb
jecxz
sahf
out
nop
dec
lods
out
xlat
add
outs
jb
out
outs
inc
mov
sub
inc
movs
retf
pop
mov
sub
sbb
int3
fbld
arpl
inc
add
stos
xchg
in
je
pop
push
call
gs
into
cdq
pop
pushf
out
jge
cwde
sub
jns
add
scas
push
daa
jmp
xchg
adc
jbe
push
push
leave
jl
pop
sub
mov
(bad)
xchg
cmp
test
ins
jmp
cmp
pop
add
mov
sub
repnz
mov
inc
(bad)
and
inc
movs
(bad)
(bad)
in
adc
repz
sbb
mov
outs
(bad)
enter
pop
mov
jg
loop
cdq
(bad)
into
in
or
sub
xchg
js
xor
repz
jnp
jbe
or
dec
cmp
jb
icebp
rcr
and
dec
mov
lods
or
or
(bad)
ficom
jecxz
stos
sub
lods
ins
aam
and
mov
or
sbb
or
add
jb
es
repnz
mov
or
add
mov
sar
adc
ins
retf
mov
inc
(bad)
pop
mov
clc
cmp
or
leave
cmc
sub
sbb
mov
mov
movq
shl
gs
push
ret
icebp
retf
fstp
ds
adc
outs
xor
adc
xchg
nop
rcr
les
fild
inc
cdq
ftst
adc
cmps
cmp
out
rcl
ret
xor
out
and
lock
mov
int
jecxz
(bad)
pop
inc
xchg
setae
push
jmp
cmp
and
mov
cmp
jo
cld
fmul
dec
pop
push
addr16
mov
pop
sbb
ins
je
in
sbb
push
and
mov
add
add
mov
fwait
ror
imul
es
mov
push
ror
popf
das
(bad)
scas
pop
mov
inc
or
cmp
nop
jge
test
fadd
dec
loope
jmp
dec
pop
mov
xchg
ja
je
pop
mov
inc
fs
adc
pop
mov
stos
mov
ss
mov
mov
mov
xchg
rcl
in
sbb
xchg
sub
pop
sti
xchg
les
lds
cmp
dec
out
push
adc
or
inc
cli
daa
jg
xchg
imul
mov
adc
mov
cmp
jb
adc
pop
fnstcw
adc
clc
mov
mov
repnz
mul
sahf
jecxz
loopne
mov
sbb
jg
in
adc
mov
jnp
loope
(bad)
into
xchg
mov
test
and
leave
or
dec
call
cmps
jle
(bad)
popa
dec
aad
cmc
movs
inc
sbb
out
in
idiv
repz
test
xor
push
cmc
rcl
and
and
dec
lea
cmp
mov
jl
retf
pop
pop
pop
xor
adc
jmp
mov
push
fxch
call
fiadd
push
fucomi
in
repz
add
dec
push
and
out
sahf
sar
jge
mov
dec
lock
jmp
or
lods
mov
pusha
or
js
pop
frstor
or
dec
cmp
push
mov
aam
fidivr
pop
call
and
mov
add
xchg
adc
sub
sbb
ret
push
cmp
xchg
leave
pusha
movs
push
ins
ins
sbb
scas
adc
ins
fild
outs
sahf
ja
arpl
outs
repnz
jo
arpl
outs
lds
stc
sbb
cli
sub
in
cmp
shr
sub
adc
imul
cmps
jge
pop
fnstcw
sub
push
(bad)
sub
cdq
or
mov
pop
mov
add
repnz
xor
adc
shr
pop
sbb
xchg
sbb
and
out
dec
inc
add
retf
or
sub
dec
or
arpl
or
inc
pop
lods
nop
(bad)
xchg
add
test
xchg
pop
push
xlat
hlt
xor
push
mov
and
mov
add
adc
adc
paddb
and
add
push
sub
inc
add
push
add
mov
cmp
cli
inc
sub
mov
test
mov
rol
adc
and
dec
(bad)
leave
push
enter
or
das
pop
dec
sti
mov
stos
mov
xchg
and
mov
mov
sbb
pop
aad
jno
cmp
add
add
sbb
stos
loopne
xlat
and
xchg
sbb
inc
mov
ret
mov
and
out
sub
xchg
inc
sub
cmp
in
js
sbb
jmp
sbb
shl
jns
jbe
mov
rol
aam
or
add
pop
(bad)
icebp
and
push
dec
fnstsw
dec
(bad)
push
adc
dec
outs
mov
pop
cmps
dec
adc
icebp
into
pop
jle
out
es
imul
pop
inc
or
out
je
pop
cmps
xor
dec
sub
rcl
jp
mov
jae
pop
push
aam
xlat
movs
fwait
fwait
cmc
leave
push
test
ss
ds
add
aaa
adc
pop
out
and
vpsadbw
jmp
outs
gs
div
lea
pop
shr
inc
(bad)
aas
out
add
mov
das
adc
pop
or
cs
enter
jne
xchg
retf
mov
les
push
in
pop
enter
mov
fdivr
mov
xchg
xchg
lock
cmp
(bad)
icebp
popf
test
adc
sub
dec
sbb
jge
test
jg
jge
dec
cmp
sub
sub
mov
mov
dec
pop
popf
mov
or
or
sbb
sub
push
mov
call
test
(bad)
ins
cmp
mov
jbe
frstor
sbb
mov
push
and
cmp
aas
sbb
popa
movs
adc
mov
outs
shl
adc
in
sar
mov
xchg
jge
dec
aam
mov
jne
xlat
or
stos
xchg
loope
pop
push
fdiv
cs
sbb
inc
into
in
dec
in
in
xor
jns
ins
push
fs
int
mov
gs
retf
les
fild
sbb
ds
mov
(bad)
fcom
sbb
xor
pop
mov
push
mov
mov
mov
retf
pop
xor
cmp
loope
das
aas
fs
adc
(bad)
int3
(bad)
into
mov
and
mov
pop
movs
and
dec
pusha
pop
aam
jns
jno
sub
push
or
mov
sar
cld
cli
push
pop
or
mov
jno
cmp
(bad)
stc
xchg
push
mov
rol
dec
sub
and
push
icebp
push
xchg
pop
mov
dec
(bad)
jecxz
sti
add
push
(bad)
push
idiv
or
sub
in
div
adc
cmp
cwde
cmp
and
lods
fbld
into
push
std
das
int3
neg
movs
mov
and
push
repnz
mov
call
push
and
mov
scas
mov
add
fsubp
jl
sub
mov
sbb
or
jg
inc
xchg
inc
pop
mov
jns
fadd
jne
inc
retf
loope
pop
out
popf
xlat
xlat
mov
movs
int
jb
jge
mov
call
cmp
nop
rcr
mov
outs
push
add
add
loopne
inc
aaa
shl
in
add
cs
mov
and
fwait
cmps
lea
ins
adc
fbld
outs
mov
loope
test
jle
mov
loop
sub
mov
sbb
push
test
and
int
rol
push
xor
xor
cs
(bad)
mov
add
dec
sbb
sbb
and
push
xor
imul
xor
aam
xor
xchg
int3
mov
sub
popf
mov
xor
jae
push
xor
(bad)
sbb
ret
push
neg
mov
loop
adc
ins
ror
dec
pop
in
mov
cmc
(bad)
push
and
dec
cmp
into
fninit
or
and
add
adc
lock
cli
enter
in
push
pop
imul
popa
adc
lock
inc
mov
push
mov
jnp
aas
out
(bad)
sub
jns
into
jp
leave
mov
sbb
and
imul
cmc
mov
in
and
test
sbb
ds
lods
es
mov
adc
ds
mov
test
nop
movs
rol
jp
sbb
jecxz
jnp
mov
retf
push
cmp
pop
fmul
cs
adc
inc
aad
xor
jp
dec
call
jnp
arpl
pushf
xchg
pop
sub
call
seta
lea
(bad)
rol
aaa
fs
dec
jecxz
out
mov
xchg
or
xchg
sar
xchg
iret
jmp
pop
fisubr
pop
sub
lds
test
scas
inc
xchg
pop
jg
sbb
jnp
adc
mov
push
pop
int
iret
out
dec
add
jo
cmps
lods
popa
neg
add
cwd
inc
(bad)
or
jg
repz
test
mov
push
add
mov
jnp
add
pop
(bad)
imul
mov
or
out
mov
dec
jno
in
jb
push
add
mov
sbb
jno
and
ss
mov
lahf
or
cmp
xchg
std
aas
out
sbb
shl
int
adc
pop
sbb
mov
shr
scas
mov
test
test
mov
ror
int3
xchg
imul
imul
ret
adc
fadd
fwait
mov
div
ds
push
enter
inc
dec
jnp
fisttp
jmp
fiadd
fadd
int3
nop
dec
pop
mov
jmp
in
and
mov
push
fmul
cmp
repz
adc
add
or
or
push
js
dec
inc
jl
sbb
(bad)
sbb
mov
pop
and
neg
inc
mov
sub
jg
mov
jmp
dec
and
push
push
imul
adc
push
test
fldcw
push
out
shl
jle
mov
out
sub
add
dec
fmul
or
aad
imul
jmp
and
push
and
pop
jno
cmc
stos
fsubr
cdq
xor
into
cmp
dec
jo
dec
sbb
sbb
xchg
pop
test
pop
mov
push
adc
shl
inc
(bad)
mov
xor
inc
sbb
xchg
call
add
inc
shl
shl
loope
push
test
inc
mov
bound
sub
pop
sahf
movs
push
(bad)
ret
xchg
and
sub
dec
inc
xor
push
inc
ja
mov
push
jae
outs
imul
fwait
add
xchg
xchg
sti
and
cmp
or
out
lea
arpl
add
cmp
sbb
xlat
xchg
hlt
addr16
adc
cmp
adc
mov
jmp
cmps
loope
push
retf
std
and
cmc
add
int3
xchg
sub
jp
(bad)
lods
call
imul
push
pop
push
(bad)
arpl
(bad)
arpl
outs
movs
call
scas
mov
xchg
add
mov
shl
or
cmps
pop
outs
or
cli
xchg
pop
jp
data16
hlt
mov
mov
push
sbb
fdivr
scas
xchg
bound
(bad)
add
(bad)
xor
arpl
push
or
push
fist
icebp
aad
lods
mov
adc
int3
mov
(bad)
fsub
sbb
je
addr16
mov
rcl
sbb
mov
retf
gs
mov
add
fist
push
pop
ret
mov
lods
ds
iret
xor
lock
inc
arpl
out
loope
arpl
add
or
jns
sub
stc
or
inc
or
mov
shl
test
sub
push
test
mov
loope
icebp
jne
cs
push
in
dec
cmp
pop
fs
lods
jns
loopne
jmp
inc
fsubr
leave
push
adc
add
inc
sub
push
adc
push
ds
or
(bad)
mov
scas
in
leave
stc
and
xor
sub
ins
aam
mov
shr
jbe
(bad)
cmp
mov
xchg
dec
xor
loope
sbb
dec
xor
xor
inc
add
or
mov
mov
gs
push
cli
icebp
push
sub
mov
sbb
stc
popf
and
dec
or
sub
adc
out
shl
mov
inc
push
xchg
daa
adc
mov
and
push
(bad)
push
sub
jns
imul
jl
mov
cwde
rcr
cmp
xchg
icebp
scas
test
xchg
mov
sti
mov
xchg
fstp
ss
in
aaa
loop
adc
and
pop
cwde
sbb
add
std
pop
push
xchg
add
in
icebp
or
test
leave
into
xor
mov
mov
cs
or
lds
retf
sub
iret
mov
sub
stc
fild
(bad)
inc
js
aam
fnstcw
aad
jmp
inc
out
cwde
cmp
sar
fld
fisub
mov
add
adc
cs
or
mov
jge
loop
out
nop
adc
call
clc
push
sub
jnp
scas
inc
xchg
push
imul
sub
jmp
mov
push
jno
ss
sub
(bad)
retf
into
and
lods
add
cmps
not
mov
shl
and
mov
add
fwait
ss
mov
push
std
mov
je
rcr
call
sub
call
and
or
xor
(bad)
sar
movs
inc
imul
in
mov
add
push
iret
sbb
test
jge
rcl
sub
in
dec
fsubr
out
lods
jns
push
adc
bound
scas
and
inc
stc
inc
es
xrelease
jae
xchg
mov
popa
cs
(bad)
jne
mov
icebp
fstp
xchg
dec
test
sub
push
ds
or
ret
scas
aam
inc
pop
xchg
stos
jbe
(bad)
xlat
sbb
cdq
dec
outs
dec
dec
cwde
jae
jmp
(bad)
dec
cld
mov
in
mov
lods
sar
pop
lea
xchg
cmp
adc
or
neg
mov
add
push
leave
mov
test
in
aaa
outs
or
test
cmp
mov
enter
fidivr
pop
ds
xor
es
inc
jno
scas
pop
inc
adc
push
push
jge
dec
xchg
pop
cmc
pop
xchg
xchg
ja
imul
sub
idiv
and
test
xchg
xlat
scas
mov
push
outs
mov
popf
inc
(bad)
dec
pusha
test
das
push
sub
add
push
pop
add
out
sbb
jae
mov
sbb
xchg
add
out
cmp
push
lahf
jae
or
test
std
add
xchg
ins
sbb
(bad)
inc
mov
or
ins
inc
cmp
or
fst
push
test
jne
jo
dec
xchg
fwait
mov
or
ret
or
iret
jae
push
sub
cmp
jnp
add
jmp
mov
mov
fcomp
and
xchg
out
mov
jnp
loope
mov
call
mov
xchg
js
dec
sbb
(bad)
xchg
outs
push
dec
and
adc
sbb
inc
inc
ins
dec
pop
shl
movs
mov
adc
dec
cmp
mov
mov
or
call
popf
inc
(bad)
mov
cmc
fmul
(bad)
ss
and
fldenv
mov
mov
xor
push
adc
fiadd
out
jmp
or
shl
adc
data16
stc
cmp
sub
iret
ds
pop
or
adc
int3
or
mov
loop
cmps
jl
inc
cmps
aad
(bad)
and
push
cmp
cmp
addr16
loopne
test
xor
xchg
inc
jno
mov
add
cmp
out
and
mov
cmp
retf
cmp
dec
dec
ss
sub
mov
addr16
jmp
xchg
add
fwait
ins
jle
jns
nop
out
sbb
lods
adc
loopne
and
in
mov
cmps
repnz
xchg
push
cmp
mov
fbstp
imul
inc
repz
xchg
adc
jg
cdq
es
ficomp
in
shl
(bad)
and
xchg
sbb
mov
das
das
xchg
mov
lock
cmp
popa
rcr
or
mov
sub
push
sahf
sbb
aas
cs
scas
inc
pusha
jle
iret
repz
sbb
pop
mov
and
sti
popf
mov
mov
inc
pop
mov
lods
add
stos
mov
movs
pop
lods
mov
std
stos
cmp
loope
lods
call
mov
push
leave
ss
cmps
sub
je
test
mov
ror
mov
retf
sbb
imul
loop
sub
cmp
and
fstp
or
sbb
sbb
mov
repnz
or
or
shl
jmp
test
pushf
and
adc
sub
lds
stos
push
cmp
push
(bad)
stos
(bad)
cmp
jnp
lods
adc
stos
clc
inc
xchg
xor
adc
ret
push
pop
shl
cwde
mov
call
sti
push
aad
xor
pusha
jne
jbe
mov
dec
cdq
xchg
scas
xlat
xchg
jnp
mov
neg
mov
dec
das
mov
cmp
xchg
inc
test
cmp
stos
addr16
sbb
imul
in
sub
gs
lods
in
push
cmps
or
(bad)
and
out
jmp
and
mov
int3
movs
mov
test
rcr
aas
int3
and
inc
gs
mov
mov
push
cmps
mov
jmp
jns
leave
nop
sbb
add
addr16
fcomi
cli
(bad)
out
and
cmp
pop
sbb
pop
ja
call
jl
cmps
cmp
(bad)
in
mov
clc
(bad)
jo
ret
jg
or
mov
xlat
cmp
mov
inc
xor
and
test
pusha
outs
cmps
xchg
cli
lods
pop
xor
(bad)
mov
xor
mov
dec
push
adc
repz
(bad)
mov
or
xor
xchg
or
inc
pop
pop
jbe
adc
mov
mov
jno
shl
movs
inc
fstp
loop
mov
push
jb
xor
inc
jecxz
fnstcw
in
cmp
mov
mov
fmul
jmp
pop
mov
adc
mov
xchg
add
(bad)
add
mov
and
mov
ret
iret
in
ja
fistp
push
je
cmove
and
adc
int3
xlat
push
xchg
cmp
xchg
cmp
out
mov
shl
cmp
dec
push
mov
rcl
dec
addr16
cdq
jecxz
clc
aaa
adc
retf
loopne
inc
in
jl
dec
imul
push
xchg
jb
cwde
fs
or
inc
pop
add
addr16
fimul
mov
jno
push
sub
mov
sub
cmp
daa
lods
inc
inc
fdiv
adc
gs
mov
mov
and
(bad)
pop
clc
in
mov
xchg
inc
add
cld
cdq
jnp
adc
sbb
mov
retf
retf
sti
rcl
mov
out
push
movs
(bad)
adc
dec
cmp
sbb
fdiv
and
outs
mov
add
outs
call
shl
not
mov
rol
jns
inc
aam
je
push
push
mov
jmp
sub
nop
les
inc
cmp
mov
sti
pop
jnp
sti
loop
xor
and
repnz
lods
and
jne
clc
scas
fcmovnu
cmc
int3
ret
pop
dec
jno
out
sbb
repz
and
xchg
jge
nop
mov
xchg
and
daa
mov
adc
inc
jmp
iret
jbe
adc
add
js
es
xchg
jl
or
add
xchg
push
cmp
hlt
fstp
pop
sbb
aaa
imul
xor
cdq
mov
cwde
cmp
ss
retf
fwait
mov
add
push
mov
mov
mov
xchg
lea
mov
ror
jecxz
dec
mov
mov
hlt
mov
and
call
xchg
(bad)
xchg
and
add
cmp
adc
sub
scas
fnclex
cmps
xchg
sub
or
aas
pushf
push
dec
jge
addr16
(bad)
pusha
dec
movs
cmp
xchg
fidiv
das
sbb
pop
jmp
add
pop
mov
bound
inc
add
push
ins
fcomip
imul
xor
in
(bad)
cmp
inc
aad
mov
inc
imul
xlat
and
fidiv
out
jle
repnz
test
nop
imul
outs
lds
cld
sub
sub
xchg
mov
dec
cmp
mov
add
inc
sahf
dec
mov
push
jne
xchg
add
(bad)
sbb
jnp
xchg
sub
rcr
movs
sbb
cdq
add
aaa
fld
cmp
(bad)
in
or
das
cmp
push
scas
xor
and
int
mov
mov
add
mov
icebp
outs
xchg
or
test
xor
fmul
imul
and
xchg
scas
js
sbb
xchg
fcom
pop
jno
lock
pop
cdq
retf
push
cmp
cmp
loopne
jmp
xchg
rol
or
mov
pusha
inc
fstp
xor
test
pop
xchg
aas
outs
gs
stos
jo
sar
pop
adc
ficom
nop
or
adc
and
icebp
mov
iret
retf
jl
and
mov
mov
jmp
xchg
or
dec
ins
mul
inc
xor
shr
(bad)
xor
jno
pop
(bad)
in
popa
rcl
das
xchg
sub
int
pop
push
push
push
sub
and
cmp
sbb
int
adc
sub
enter
cdq
inc
jbe
adc
cmp
fwait
movs
hlt
(bad)
(bad)
sbb
jbe
mov
mov
std
lods
fdivr
push
dec
inc
sub
mov
dec
shl
fild
lahf
ins
ret
in
xor
pop
(bad)
loope
les
fmul
add
sbb
add
pop
dec
jae
jl
adc
jmp
xor
add
pusha
sub
sahf
and
xchg
pushf
dec
imul
fld
cwde
data16
sub
ins
dec
pop
icebp
sub
push
test
jge
scas
pop
xchg
dec
in
inc
rol
and
movs
pop
mov
mov
stos
and
inc
cs
mov
cmp
inc
pop
cmp
adc
popf
pop
loope
sub
aas
retf
mov
gs
push
pop
cld
sbb
imul
(bad)
loop
push
adc
into
gs
mov
imul
inc
nop
ror
jp
sbb
adc
frstor
push
(bad)
xor
jge
jno
jp
sti
mov
push
cs
nop
sub
lahf
inc
clc
ror
movs
scas
xchg
or
mov
enter
pusha
repz
lea
xor
sbb
pop
loopne
popa
repz
push
sbb
sub
ja
mov
stos
pop
mov
imul
(bad)
sub
popa
loope
xchg
lock
fisubr
scas
iret
cmp
aad
(bad)
bound
fsubr
mov
jg
dec
and
cmps
xor
lods
inc
jbe
push
sub
mov
in
mov
mov
pushw
lods
neg
(bad)
scas
outs
pushf
jle
push
fbld
iret
adc
pop
mov
pop
(bad)
sar
in
rcl
mov
sub
ret
or
xor
lds
cmc
mov
xchg
or
add
push
in
aad
mov
adc
int
adc
mov
and
or
xor
rcl
jb
pop
sbb
mov
and
shr
les
out
push
xor
fucomi
mul
out
test
dec
inc
loop
dec
ret
retf
xchg
dec
movs
mov
or
scas
cmc
push
test
jo
ret
out
lea
(bad)
cld
fnstcw
lock
cmp
and
add
out
mov
sbb
add
add
out
fld
imul
ror
jo
int3
fisubr
add
mov
pop
out
ins
rol
mov
shl
int
inc
mov
mov
lods
fisubr
cli
jbe
pop
mov
adc
push
enter
pop
adc
sbb
mov
pop
pop
nop
ins
xchg
jmp
adc
mov
pop
sbb
pop
adc
xor
pop
sbb
inc
cmp
shr
fcmovnbe
xchg
sub
lods
iret
mov
or
pushf
jns
sub
sbb
movs
bound
fwait
test
mov
and
out
addr16
repz
inc
in
test
mov
js
les
outs
mov
cmp
cmps
icebp
aad
std
mov
int
call
imul
jg
stos
fsub
or
mov
popf
(bad)
cld
shl
cdq
je
jo
iret
rcl
mov
mov
push
dec
int
mov
jns
pop
mov
xchg
test
push
bound
inc
fadd
mov
cdq
ds
pop
test
sbb
scas
sbb
and
push
sti
ja
test
jl
pop
and
jmp
test
inc
xor
xor
xor
or
push
jb
gs
ja
retf
add
shr
loop
sbb
test
pop
pop
mov
sub
aam
add
ds
pop
(bad)
mov
popf
mov
cs
lods
js
imul
or
inc
push
adc
pop
stos
xchg
ret
stos
lds
xchg
sbb
mov
lahf
jne
inc
test
(bad)
int
test
push
add
pop
inc
aam
add
xchg
ror
dec
fwait
aas
test
cli
push
cmp
into
push
stos
sbb
pop
sub
jno
pop
sahf
rcl
imul
push
mov
sbb
in
fadd
sub
pop
mov
jg
inc
sbb
test
sbb
mov
jge
xchg
xor
dec
inc
lods
and
sbb
in
or
and
outs
aam
dec
ror
or
scas
lahf
aaa
sti
loopne
cdq
sbb
(bad)
xlat
cmp
mov
jne
in
in
fstp
packuswb
shr
or
inc
ins
shl
enter
in
loopne
pop
push
daa
je
mov
out
movs
inc
xor
and
es
jp
xor
cli
dec
adc
jp
not
mov
push
(bad)
jecxz
and
std
and
fisub
push
imul
xor
das
movs
dec
data16
mov
retf
mov
push
xchg
sar
fst
sub
out
data16
inc
push
push
inc
adc
scas
jmp
addr16
mov
sub
jp
cmps
(bad)
push
fld
in
clc
pop
cli
aaa
add
cmp
xor
push
and
add
sub
cmp
pop
jae
out
mov
(bad)
mov
pusha
push
out
inc
push
dec
push
dec
out
call
cmp
es
inc
bound
(bad)
call
aam
std
push
cwde
pop
mov
outs
and
std
mov
arpl
movs
add
push
inc
pop
bound
jge
es
fidiv
dec
jmp
pop
int3
push
ja
push
lea
js
imul
(bad)
ins
jns
pop
cmp
fsubr
repnz
adc
xchg
xor
in
sub
out
dec
dec
pusha
cld
pop
dec
(bad)
setle
sbb
add
test
call
lods
enter
pop
jo
xor
inc
fwait
lods
inc
mov
stc
jb
jecxz
mov
outs
mov
sub
push
dec
neg
mov
xchg
push
lods
(bad)
fwait
test
push
cdq
rol
push
retf
add
aaa
dec
shl
cwde
inc
inc
xchg
scas
and
cmps
mov
cmp
(bad)
jmp
dec
(bad)
mov
dec
aas
or
outs
sbb
xor
jmp
stos
jmp
call
bound
pop
cwde
rol
jbe
mov
dec
dec
inc
add
xor
mov
xchg
mov
sub
add
(bad)
cmp
outs
mov
daa
int3
ins
mov
xorps
(bad)
adc
lahf
popf
(bad)
ss
cmp
pop
not
dec
push
sahf
or
mov
push
cmps
scas
mov
call
push
adc
push
cmp
retf
(bad)
pop
dec
xor
test
ins
or
aas
stos
fiadd
in
jns
ins
jg
hlt
push
cmp
nop
push
stos
call
ins
cld
loopne
(bad)
cmp
in
xchg
nop
mov
adc
mov
jb
jns
pop
xor
mov
rcl
rol
das
sti
loopne
fmul
xchg
push
pop
xor
cdq
sub
push
(bad)
push
inc
lahf
retf
jnp
dec
push
mov
adc
loopne
xchg
push
in
xor
inc
and
test
js
xor
push
in
loope
jo
pop
paddq
push
add
xchg
lahf
inc
out
mov
mov
stos
test
mov
push
pop
enter
sbb
xor
jbe
xlat
pop
jbe
mov
sbb
adc
or
mov
gs
add
pop
bound
and
add
ror
mov
cmps
mov
jle
inc
xor
test
clc
hlt
pusha
push
jmp
js
retf
sub
mov
test
jno
cmp
pop
neg
lock
es
fst
sti
inc
call
rcl
int
jnp
push
inc
mov
fmul
push
mov
repnz
inc
fisubr
(bad)
jl
xlat
into
inc
xchg
outs
push
fdivp
pop
shl
adc
pop
fadd
mov
or
push
xchg
mov
adc
mov
nop
xor
int
ins
call
cdq
and
mov
and
aad
(bad)
in
call
adc
xchg
fisttp
mov
(bad)
daa
stos
jo
jmp
dec
cli
and
adc
es
sub
fstp
xchg
call
inc
int
int3
sbb
jl
jnp
ret
pop
movs
push
push
push
sub
push
xor
fld
jecxz
std
mov
std
jns
sub
in
jno
imul
push
or
addr16
xchg
(bad)
jmp
sbb
xchg
das
(bad)
aaa
out
dec
mov
cmp
cwde
push
imul
imul
call
sub
adc
push
jmp
and
stc
mov
xchg
xor
pop
repnz
ror
push
movs
cmp
pop
loop
aas
mov
or
xor
cmp
dec
das
call
inc
mov
jbe
cld
aas
adc
std
or
mov
mov
call
push
mov
pop
mov
and
aaa
mov
popa
add
push
stc
(bad)
xadd
sti
mov
pop
repz
cwde
add
xchg
out
ds
pop
mov
iret
push
int3
lock
out
fst
lock
(bad)
iret
psraw
jnp
out
xchg
cdq
push
ja
sub
adc
loope
jae
cmp
mov
out
xchg
in
xchg
mov
shl
popf
icebp
or
jg
cmp
daa
clc
cli
rol
das
je
aad
and
jmp
xor
scas
pop
push
pop
sbb
(bad)
repnz
push
mov
pop
lock
int3
mov
dec
sub
lea
xor
into
(bad)
bound
repnz
dec
shufpd
(bad)
movs
fwait
cmp
mov
lock
sbb
mov
retf
jecxz
jo
cs
xor
cwde
pop
jno
xchg
lods
push
mov
mov
xor
mov
mov
or
adc
sbb
sub
dec
or
test
xor
lahf
fmulp
and
ja
and
out
and
shl
test
add
and
ret
and
pop
sub
mov
aaa
jno
scas
xchg
cmps
(bad)
xlat
xor
xchg
pop
pop
repz
add
push
add
xor
mov
and
mov
inc
(bad)
dec
shr
adc
push
in
adc
bound
ins
div
fst
ret
push
push
jecxz
xor
sahf
(bad)
pop
cmp
out
jb
xor
je
test
retf
imul
outs
test
push
sub
retf
bound
push
xchg
shl
aam
or
jmp
xor
mov
pushf
or
or
(bad)
mov
jnp
sub
data16
in
iret
sti
mov
mov
pop
stc
or
or
popf
mov
or
inc
sahf
adc
and
inc
(bad)
call
retf
mov
iret
add
cmps
pop
push
or
inc
inc
mov
pop
add
sar
repnz
xchg
mov
dec
sub
inc
add
lods
imul
addr16
mov
mov
xchg
cmp
dec
movs
in
pop
and
push
into
(bad)
(bad)
cmp
sbb
adc
push
pop
scas
test
inc
xor
pop
dec
out
sbb
test
add
aam
or
jae
mov
stos
popf
inc
xor
rcr
sub
test
pop
pop
xor
sub
fbld
xchg
in
test
mov
mov
leave
sbb
jmp
and
lahf
push
repz
cmp
pop
mov
cmp
jmp
xlat
loope
ret
popa
clc
dec
lds
add
push
mov
xor
sub
xor
add
pop
jne
dec
sbb
stmxcsr
dec
fist
sbb
imul
push
lea
(bad)
out
popf
fisubr
jns
ss
mov
icebp
push
dec
cmc
inc
pop
or
test
popa
cmp
cli
or
loop
ret
retf
in
jb
mov
and
movs
pop
pop
icebp
imul
xchg
mov
push
xchg
and
sar
push
mov
cmp
repz
adc
lock
(bad)
int3
pop
cmp
ret
int3
inc
xlat
inc
repnz
clc
icebp
movs
add
enter
add
sti
icebp
scas
jmp
pop
inc
popf
mov
ins
shl
pusha
push
jb
lods
mov
aaa
pop
sub
mov
push
and
inc
mov
in
jnp
mov
loop
mov
lods
sbb
xor
fmul
inc
dec
sub
adc
gs
inc
loop
and
ins
pushf
ss
ret
add
xor
in
rcr
fisttp
repnz
sbb
out
jnp
fsubr
cli
sahf
sub
fdivr
pop
loop
mov
jmp
xor
mov
mov
in
je
mov
ss
movs
xchg
push
clc
mov
cli
les
aad
push
jmp
stos
pop
ror
xchg
jne
test
jge
xchg
std
sar
aaa
in
loopne
mov
(bad)
jmp
sar
mov
test
scas
stos
push
or
shl
in
pop
mov
jnp
push
in
inc
bound
call
movs
clc
xchg
mov
ins
out
popa
mov
mov
mov
mov
int
jg
loope
sub
push
fisub
mov
int
pop
nop
addr16
mov
out
adc
dec
fadd
adc
loope
out
loope
pop
xlat
xchg
ret
mul
jns
int
in
add
and
stos
int
imul
stos
(bad)
popa
gs
sub
cmp
and
es
repnz
adc
sbb
mov
ja
iret
loope
inc
mul
xor
xlat
xchg
jecxz
push
and
ja
out
mov
fcomp
loope
mov
fistp
scas
xchg
sbb
clc
sbb
pushf
xchg
ins
js
test
stos
scas
pop
xchg
push
stos
psrlw
or
or
cmp
cmp
mov
inc
jne
xor
pop
fld1
mov
dec
nop
adc
les
sub
rcl
mov
adc
push
xchg
cwde
add
shr
push
aaa
pop
jecxz
jecxz
loop
sbb
and
mov
movs
sbb
push
cmp
ds
jo
pop
pop
or
pop
jg
test
xchg
ror
sbb
jge
jo
retf
inc
mov
sbb
and
(bad)
cmps
sbb
cld
rol
ret
mov
adc
inc
lds
retf
arpl
inc
stos
pop
cdq
leave
addr16
push
mov
add
cmp
rcl
shr
aam
clc
inc
jmp
and
(bad)
dec
mov
push
pushf
jmp
cmp
mov
lahf
or
dec
outs
bound
pop
ss
mov
jp
adc
pusha
jmp
nop
out
ja
xor
pop
sub
fs
fwait
iret
push
dec
or
fadd
in
into
lods
out
push
push
loopne
cli
sbb
inc
int
mov
mov
xchg
cmp
rcr
sar
cs
les
js
call
fisttp
xchg
dec
jo
jmp
adc
lods
stos
add
push
push
shr
or
frstor
sub
add
dec
xchg
and
enter
ret
inc
push
mov
inc
sahf
mov
push
xlat
jmp
aam
sbb
in
cld
(bad)
rol
or
in
stc
enter
dec
dec
sub
fisub
jne
scas
mov
mov
mov
fcmovnb
das
outs
aad
pusha
xchg
js
into
outs
cmp
jle
sbb
sub
pop
movs
rol
or
popf
cmp
cs
ror
lahf
pushf
fcom
push
into
xor
aam
and
test
xchg
pop
jnp
aam
in
mov
cmp
or
pop
int
mov
in
xor
pop
(bad)
sbb
and
cwde
jp
push
push
int3
cli
push
mov
outs
outs
in
retf
test
sub
xchg
call
int
mov
inc
add
mov
stos
in
sahf
mov
and
fnsave
iret
nop
mov
mov
mov
int
xchg
pop
jns
push
stos
test
pop
pop
aad
je
add
scas
movs
push
in
fld
and
ds
xor
cli
pop
mov
or
enter
cwde
push
ja
jmp
xchg
lds
je
cs
mov
or
jns
push
fdivr
iret
rol
out
xchg
push
pop
dec
popa
clc
shr
sbb
sbb
ror
push
xchg
aad
jmp
mov
data16
daa
xchg
jg
scas
popf
dec
mov
call
int3
and
inc
jl
jp
out
clc
xchg
inc
jmp
push
cld
sub
pusha
add
mov
movs
(bad)
dec
ficom
pop
jge
sub
outs
jge
aaa
sbb
mov
retf
aam
cmp
je
mov
jmp
es
enter
push
fld
inc
aam
stos
mov
mov
(bad)
loopne
scas
or
add
fwait
pop
push
push
push
cmp
outs
iret
jno
popf
je
mov
adc
adc
jl
mov
push
test
and
xor
jle
fisub
inc
sahf
xor
sbb
cwde
daa
(bad)
cmp
enter
sub
sar
xchg
push
loope
call
push
lods
ja
mov
sbb
mov
or
jno
jnp
push
inc
or
adc
jb
jnp
out
cli
dec
dec
inc
push
pushf
cmp
mov
and
or
cmp
aad
push
outs
fidivr
add
(bad)
lods
dec
pop
jnp
pop
mov
call
and
add
add
mov
pop
int
jnp
sbb
gs
xor
cmps
sub
mov
cmps
pushf
push
cmp
and
sub
in
rol
cmp
in
sti
adc
push
adc
daa
jg
loop
push
xchg
add
xchg
movs
add
gs
in
jno
jp
test
mov
push
(bad)
mov
out
fucomi
dec
jecxz
in
jg
dec
xchg
stos
jo
lds
shr
adc
mov
mov
or
int3
or
xchg
(bad)
jmp
(bad)
iret
adc
or
inc
into
adc
push
add
dec
and
cli
jge
xor
push
jle
scas
and
mov
mov
cmps
data16
movs
ds
and
(bad)
in
and
xor
and
js
dec
push
xor
outs
pop
or
xor
daa
sub
jns
arpl
xchg
shl
xor
loopne
shr
out
popf
pop
inc
pop
dec
retfw
dec
rcr
test
or
out
scas
inc
and
cli
mov
pusha
mov
outs
jg
int
sti
into
aas
xor
add
push
fld
mov
mul
nop
popa
xor
jae
sbb
mov
and
mov
xor
jmp
ins
into
jno
cmp
jne
shl
and
xchg
jmp
loop
and
xchg
pop
arpl
sub
mov
les
jmp
ret
or
in
push
inc
cdq
inc
clc
fmul
push
adc
or
leave
(bad)
jns
pop
int
sub
pop
mov
je
ds
cmp
pop
mov
and
adc
ja
call
retf
scas
pop
sub
pusha
push
mov
out
in
push
xchg
push
push
ret
inc
cli
cmp
mov
mov
(bad)
pop
ds
outs
sbb
imul
and
les
push
ficomp
(bad)
jp
fist
stos
pop
(bad)
enter
ficomp
mov
mov
push
inc
ficomp
outs
aaa
rcl
push
push
sbb
or
cmp
pop
mov
mov
imul
jmp
mov
or
jmp
xlat
(bad)
ins
outs
push
popf
and
mov
inc
rcl
jmp
adc
push
out
mov
jbe
in
ret
mov
xchg
mov
mov
repz
cmp
sti
mov
daa
shl
push
sub
pop
jp
pop
sbb
cmp
and
cmps
ds
pop
cdq
shl
and
xchg
dec
ror
nop
arpl
dec
mov
sub
sub
and
imul
ja
fs
cld
xor
cmp
inc
push
loope
mov
mov
xor
jne
pop
stc
jo
sbb
popf
arpl
or
cli
popa
and
jo
jp
pop
push
mov
js
(bad)
pop
mov
mov
push
xor
pop
sbb
scas
jno
loop
dec
jmp
enter
xchg
cmp
push
mov
add
cld
into
sub
dec
outs
dec
pop
xchg
pusha
in
ds
retf
jo
je
mov
rcr
rol
mov
scas
add
dec
ret
xor
out
icebp
iret
push
jne
fistp
adc
push
fwait
jno
mov
fmulp
lock
retf
mov
mov
jg
out
xchg
push
pop
or
add
pop
nop
fsubr
cmp
mov
pop
sub
push
cdq
ss
mov
repnz
pop
push
(bad)
pop
sub
push
mov
mov
lds
mov
mov
aaa
push
jo
mov
inc
fstp
lea
fwait
js
sub
push
and
ja
mov
pop
pop
popa
iret
std
and
ins
je
mov
mov
hlt
adc
jp
fld
mov
jmp
js
push
jg
add
in
pop
and
pop
jae
add
out
int
dec
xchg
pusha
xchg
cmp
loop
cmp
inc
sub
adc
and
jbe
daa
xchg
loop
push
push
ins
lods
sub
push
and
mov
mov
cwde
fidivr
sub
lods
data16
das
loop
mov
add
pop
push
mov
add
xchg
cwde
add
pusha
inc
mov
scas
pusha
mov
pop
dec
mov
fwait
cli
push
mov
imul
mov
mov
push
dec
adc
(bad)
cdq
lahf
std
mov
lock
mov
enter
push
fmul
cmp
dec
aam
hlt
idiv
movs
push
std
inc
xchg
mov
dec
lahf
out
push
sti
repz
std
push
mov
bound
mov
add
ror
fmul
push
and
xchg
movs
jl
or
fwait
jmp
or
pusha
popa
dec
lea
fstp
xchg
into
push
out
adc
xchg
sub
dec
or
inc
int3
and
movs
or
mov
xchg
clc
dec
adc
in
addr16
xor
jmp
test
or
scas
data16
aad
add
add
arpl
(bad)
mov
xchg
mov
or
mov
(bad)
rcr
in
inc
ds
mov
jne
adc
cmp
rcr
leave
les
pop
icebp
lea
bound
fiadd
adc
jns
imul
nop
leave
jo
pop
mov
inc
cmp
ins
pop
movs
sbb
or
xor
arpl
adc
xlat
cmp
pop
dec
outs
sub
jp
das
arpl
inc
and
data16
push
dec
pop
(bad)
push
sbb
addr16
scas
je
sbb
call
icebp
pop
ins
(bad)
lods
dec
dec
shl
sub
jl
push
jne
retf
rol
push
pop
fnsave
dec
gs
mov
xor
dec
or
push
sub
inc
ror
mov
dec
ss
imul
mov
and
bound
les
pop
push
add
pop
in
push
retf
inc
inc
fstp
push
fnstcw
lea
cmps
or
mov
dec
ret
dec
mov
and
and
cmp
push
inc
jo
in
or
(bad)
loope
mov
push
in
mov
out
and
fisub
js
in
jle
adc
std
mov
shl
(bad)
(bad)
adc
dec
jg
fidiv
sub
mov
not
mov
icebp
fidivr
xchg
inc
jl
in
dec
pop
ret
aam
popa
pushf
fst
sahf
pushf
adc
cmp
loop
xchg
and
test
ret
add
repnz
push
movs
rcr
push
call
out
add
mov
pop
enter
xchg
pop
lods
push
xor
dec
cmp
leave
xchg
imul
push
sbb
mov
lds
add
enter
gs
movs
dec
inc
dec
repz
mov
in
fldenv
sbb
inc
add
pop
dec
sub
jbe
or
pop
or
ins
mov
mov
ds
daa
in
mov
mov
shl
xchg
dec
out
sub
or
iret
pushf
ss
bound
add
mov
dec
fidiv
add
push
fdivr
mov
dec
shr
jmp
test
cs
into
dec
call
mov
test
call
mov
pop
pop
int3
daa
ror
fisttp
cmp
dec
icebp
sbb
fist
test
add
sbb
int
ret
or
cmp
xchg
lock
push
repnz
mov
xchg
or
(bad)
enter
push
test
xchg
xchg
mov
pop
nop
pop
push
pop
bound
fsubr
std
push
shr
and
(bad)
fidivr
xor
mov
popa
arpl
test
mov
pop
clc
xor
adc
dec
mov
inc
loopne
push
fld
loope
push
fidiv
imul
and
add
pop
xor
mov
inc
loop
or
clc
cmp
shl
std
cmps
dec
int3
and
pop
or
or
unpcklps
aaa
mov
mov
(bad)
push
mov
jmp
jno
scas
fnstcw
mov
mov
jns
lods
cmp
loop
icebp
dec
lock
retf
mov
sbb
sbb
or
push
push
into
inc
pop
clc
mov
push
popf
fs
xor
jbe
mov
xchg
or
push
mov
jmp
adc
(bad)
push
jl
int
sbb
dec
es
cmc
sahf
jmp
jne
sar
(bad)
outs
add
pop
pop
stc
sar
hlt
push
or
(bad)
sbb
mov
xor
inc
leave
pushf
test
int
sti
mov
movs
mov
sub
fcom
ins
adc
rol
rol
push
mov
mov
pushf
aam
fimul
inc
mov
fisubr
xor
daa
inc
and
test
cmp
test
int3
mov
mov
push
loopne
mov
movs
pop
pop
ins
mov
popf
push
mov
call
and
xor
or
sub
loopne
gs
pop
adc
xchg
jge
mov
arpl
fbstp
and
rcr
std
xchg
mov
mov
mov
pop
in
stc
pop
sub
xchg
jl
ret
dec
aam
ins
shl
cmp
push
leave
sub
push
jmp
lods
inc
xor
fisttp
jmp
sub
push
xor
loopne
sbb
mov
pop
cmp
xchg
xlat
or
(bad)
sub
sub
mov
pop
push
call
cmps
inc
ss
pop
cli
jnp
pop
sbb
pop
shl
fxch
dec
pop
sub
jne
mov
xlat
lea
sub
data16
sub
in
mov
sub
lea
mov
iret
add
xor
pop
js
test
jl
xchg
pop
outs
mov
dec
sub
and
lds
pop
mov
inc
jnp
push
cs
call
inc
sub
loop
repz
xchg
push
ds
cmp
(bad)
or
or
retf
test
sub
loopne
and
jge
inc
movs
jno
ja
mov
and
in
mov
push
jne
test
ficomp
xor
loope
hlt
clc
push
movs
out
adc
mov
inc
pop
xlat
xor
add
test
dec
lds
xor
mov
and
psubsw
cmps
js
ins
inc
rcr
inc
pop
jns
out
retf
sub
pop
mov
add
(bad)
or
pop
sub
inc
or
mov
and
dec
fimul
out
outs
mov
jne
xchg
cmp
sbb
test
test
stc
sub
shr
push
sub
add
scas
ret
xlat
cld
int
pop
pop
pusha
inc
rcr
in
xchg
loop
cld
and
and
fistp
dec
dec
lods
xchg
or
cli
(bad)
pop
adc
add
xor
stos
dec
and
dec
mov
fcom
fsubp
jmp
ret
pop
rcl
popfw
mov
lods
cwde
xchg
movs
cmp
rcl
addr16
jle
aaa
sbb
cmp
ficomp
dec
jecxz
imul
imul
xor
push
sub
inc
out
cmp
inc
and
leave
inc
jle
scas
cmc
xor
scas
jbe
aaa
mov
and
int
add
(bad)
jo
scas
mov
pop
dec
lods
add
jmp
xchg
xor
mov
jmp
xor
mov
xchg
cmp
fs
mov
xchg
push
cmp
ja
mov
sub
xor
into
hlt
cmps
and
dec
and
enter
sub
loop
in
out
pop
loop
sub
fsubr
mov
cli
inc
cdq
stos
pop
aas
leave
mov
mov
(bad)
lods
add
inc
push
inc
cmps
shr
add
iret
mov
rcl
aad
repnz
sbb
or
adc
mov
ficomp
push
xor
call
push
jl
ja
fsub
dec
imul
sbb
pop
addr16
push
push
out
fisttp
jno
adc
in
addr16
sbb
or
mov
adc
dec
inc
test
push
ja
fidiv
mov
and
add
mov
jl
retf
mov
(bad)
in
arpl
lock
inc
xor
lock
xor
adc
stc
fsub
add
xchg
jbe
les
ins
clc
cmp
push
pop
outs
sub
sbb
test
mov
pushf
mov
push
pusha
out
jmp
scas
sar
sub
mov
jns
cld
mov
mov
jo
xor
adc
jmp
cmp
leave
aam
mov
mov
or
jno
test
mov
cmp
rcl
inc
xchg
xchg
pop
loope
mov
sbb
mov
mov
pop
aam
repnz
test
outs
dec
inc
dec
cmp
ins
pop
call
xchg
mov
addr16
inc
cmp
(bad)
cdq
sbb
mov
mul
mov
sub
es
lock
data16
inc
pop
out
xor
dec
or
lds
xor
(bad)
leave
dec
dec
ficomp
(bad)
lahf
mov
jb
(bad)
js
mov
jg
jge
mov
sub
(bad)
in
shr
out
jge
xor
imul
je
ret
movs
xor
push
int
lds
xchg
xor
inc
ja
and
push
leave
aas
pop
mov
mov
daa
movs
mov
pop
shl
mov
jecxz
lods
lods
out
cmp
fidivr
push
sbb
(bad)
imul
pop
xchg
fwait
jmp
and
dec
dec
xchg
xchg
or
sbb
mov
pop
ss
outs
jecxz
dec
mov
push
jno
dec
fimul
mov
pop
sar
ror
test
test
(bad)
mov
lds
std
out
pushf
push
sbb
mov
xor
leave
stos
rol
call
arpl
popf
les
mov
lahf
test
pop
es
mov
cli
pop
mov
and
loope
clc
mov
(bad)
mov
push
mov
or
mov
jmp
push
fild
push
sbb
ds
pop
xchg
frstor
int3
fisub
enter
ror
repnz
out
cmp
sti
nop
inc
stos
(bad)
dec
push
in
push
dec
xor
jmp
mov
adc
cmp
add
xchg
neg
dec
mov
mov
int3
inc
add
and
pop
cmps
jbe
cmp
das
add
mov
(bad)
std
inc
dec
lods
cwde
pop
sub
adc
aad
jmp
push
or
pop
out
pop
lods
adc
jmp
sub
xchg
loopne
sbb
cmp
add
aad
fwait
cmp
xchg
cmp
mul
fdivr
mov
das
pop
inc
aam
fisttp
(bad)
push
jp
jmp
sub
bound
jb
clc
xor
cli
je
add
mov
mov
push
push
fwait
pusha
cmps
push
dec
dec
jbe
xchg
pop
arpl
out
xchg
leave
or
jmp
shl
mov
add
and
out
xor
int
cs
xchg
mov
sbb
out
xor
add
and
xchg
imul
repz
bound
test
jmp
and
or
sbb
mov
mov
mov
(bad)
lock
pop
push
ds
pop
xlat
scas
pop
(bad)
push
out
push
addr16
call
stos
(bad)
adc
(bad)
sqrtps
mov
sar
jmp
sub
pop
(bad)
hlt
out
inc
inc
or
ins
into
mov
xor
les
(bad)
fsubr
dec
daa
pusha
gs
int
lock
fwait
ds
sbb
inc
dec
cmp
xchg
cmc
mov
push
xor
sbb
test
or
call
add
and
das
mov
and
dec
inc
ret
call
hlt
xchg
test
in
xchg
add
mov
pop
adc
out
jb
sbb
das
mov
cs
ds
mov
mov
inc
push
adc
sbb
repnz
call
pop
loopne
(bad)
dec
xchg
pop
push
(bad)
xchg
inc
data16
adc
rcr
lea
rcr
stc
and
das
jle
xor
push
jbe
or
sti
pusha
in
scas
ret
cmp
inc
clc
stc
es
jmp
je
aad
aad
bound
cmps
mov
outs
mov
int
ss
add
jp
xor
jnp
js
sbb
pop
sub
not
jmp
pop
call
test
pop
les
mov
and
mov
jg
jecxz
ret
in
jp
sbb
mov
adc
dec
int3
fdiv
fwait
push
sub
(bad)
repnz
shl
(bad)
call
shr
lods
ror
pop
out
push
pop
lods
or
sar
(bad)
fst
lods
mov
retf
lods
jbe
or
mov
or
jae
mov
ins
dec
dec
sti
push
push
in
sub
mov
lock
call
inc
aam
xchg
aas
out
inc
xor
stos
mov
mov
aam
mov
xchg
adc
fwait
test
inc
mov
or
pop
lds
ror
adc
rcr
fdivr
(bad)
setle
std
ja
retf
adc
add
jbe
mov
dec
(bad)
lods
cmp
push
push
mov
sbb
in
fadd
sbb
out
jns
mul
cli
and
and
sbb
fcom
loopne
push
push
cmps
adc
add
xlat
inc
sbb
ins
repnz
fild
pusha
push
mov
stc
sbb
outs
jg
cld
dec
mov
mov
xor
pop
pop
sahf
pop
or
fidiv
loopne
and
leave
sbb
test
mov
out
mov
(bad)
pop
xor
push
push
add
push
clc
aaa
bound
gs
leave
dec
sub
out
and
pop
xchg
in
lods
mov
movs
mov
pop
xchg
imul
imul
test
clc
and
add
lods
shl
or
rcl
jae
and
sbb
xor
jmp
jnp
xchg
sti
lock
xor
mov
cld
mov
xchg
mov
dec
jmp
in
(bad)
das
sub
(bad)
mov
je
stc
jno
cmp
mov
sub
in
inc
mov
add
(bad)
push
ror
test
out
(bad)
mov
std
shl
and
sahf
jne
and
or
nop
retf
aam
fcomp
(bad)
lods
rcl
and
call
sbb
mov
jp
jmp
pop
xchg
lea
stc
nop
ins
sub
cmp
fadd
retf
xchg
lds
adc
mov
push
xchg
cmp
cmp
xchg
or
mov
pop
cmp
cmp
iret
sbb
pop
aaa
add
test
pusha
outs
jmp
jle
cmp
mov
fisub
xchg
mov
and
pop
je
mov
pop
add
or
jb
xchg
mov
(bad)
pop
sub
pop
sar
dec
push
pop
call
(bad)
sub
pop
fwait
push
mov
push
push
jne
mov
lods
(bad)
in
mov
dec
out
aad
movs
fild
mov
jge
push
push
inc
and
test
ficomp
mov
adc
vpsubb
push
mov
xchg
mov
jb
push
inc
adc
push
sub
push
jecxz
jmp
clc
add
add
out
cmps
std
mov
mov
push
sbb
pop
cs
call
xlat
mov
clc
sbb
push
out
hlt
mov
test
mov
add
cmp
js
pop
fwait
clc
sbb
pop
nop
adc
jo
aam
and
xchg
inc
pop
xlat
lock
lods
ds
xchg
cmp
or
nop
adc
cld
test
cmp
jno
fdiv
dec
jnp
addr16
or
adc
test
sub
push
jecxz
pop
xor
add
movs
dec
jbe
mov
mov
pusha
arpl
fldcw
popf
test
loop
clc
mov
(bad)
push
sahf
fidiv
lods
xor
jg
repnz
jb
nop
ds
sbb
iret
pop
mov
mov
fwait
mov
imul
mov
retf
jmp
(bad)
mov
lock
mov
into
jne
adc
mov
adc
(bad)
add
cmp
ret
out
jbe
cli
movs
or
mov
int
sub
cmp
in
enter
mov
sbb
repnz
inc
shl
mov
outs
or
add
xchg
and
xor
scas
leave
dec
(bad)
cmp
cmps
cmps
push
inc
outs
add
sub
adc
dec
jmp
jb
lds
sbb
jecxz
cmp
clc
adc
push
(bad)
imul
in
adc
cmp
dec
js
xor
in
dec
retf
mov
sub
clc
addr16
retf
and
add
push
push
shl
fisubr
sbb
dec
daa
in
adc
not
adc
test
adc
stos
clc
push
loopne
pop
push
test
shl
inc
and
xor
mul
shl
mov
xchg
cld
fist
stc
call
pop
pop
outs
leave
dec
inc
(bad)
aaa
stc
or
or
jne
stos
lock
sbb
push
cmps
aaa
and
cmp
jle
jns
add
in
data16
fucomip
xlat
daa
das
adc
sub
(bad)
sub
(bad)
ins
xchg
dec
test
shr
test
inc
mov
push
pusha
(bad)
xchg
adc
jmp
sti
jmp
neg
inc
adc
pop
adc
rcr
mov
jnp
into
mov
shr
mov
or
xchg
pop
pop
adc
int3
xor
mov
mov
cmps
lea
mov
out
aaa
cdq
and
fisttp
mov
mov
lods
sbb
mov
or
add
lea
push
iret
cli
cmp
xor
in
inc
outs
dec
add
sbb
pop
mov
push
cmp
pop
add
(bad)
dec
inc
mov
test
int
out
lods
call
test
(bad)
or
push
jle
jl
iret
or
or
mov
mov
retf
fst
or
xor
mov
mov
ja
stos
jle
mov
xchg
sbb
and
push
ret
jae
xor
mov
in
movs
jle
jg
sar
xor
lods
fisubr
mov
push
and
scas
pop
sub
fstp
cs
popa
mov
imul
mov
ret
xor
cld
hlt
dec
ds
dec
and
retf
inc
(bad)
pop
or
out
sbb
das
xor
pop
push
clc
shr
jne
jmp
mov
ror
call
sub
inc
movs
fsubr
fcom
push
sbb
jb
mov
or
mov
pop
and
sahf
push
aas
lahf
and
hlt
ins
push
pop
or
pop
sub
push
rol
loope
or
test
cmps
not
sub
js
jmp
push
mov
pop
cld
ret
mov
clc
dec
outs
inc
adc
cmp
jmp
push
test
(bad)
imul
mov
cmps
ins
add
add
pop
dec
cmps
or
imul
mov
neg
xor
pop
loope
not
and
jge
(bad)
mov
stos
mov
jecxz
jg
and
push
and
outs
xlat
cmc
xor
mov
ss
jp
mov
inc
jae
xor
add
sub
xchg
out
mov
mov
loop
mov
repz
and
or
or
neg
push
imul
push
jge
and
push
mov
cdq
out
or
dec
fst
cmps
outs
sbb
and
test
xor
and
int
inc
jo
xchg
int
adc
addr16
out
mov
jecxz
sub
add
fsubr
movs
lds
sbb
popf
pop
leave
and
loopne
mov
xchg
xor
lds
stc
mov
mov
adc
mov
add
xor
retf
or
movs
(bad)
movs
cmp
dec
fsub
iret
and
sub
retf
jno
stos
jae
xchg
inc
sbb
jb
and
ror
in
ror
stos
add
lds
mov
adc
dec
mov
cmp
test
fcomp
int3
fwait
aaa
ret
push
lock
lds
int
inc
aaa
in
or
pop
ret
add
pushf
int
aas
jl
test
out
jle
mov
scas
bound
or
pop
test
int
mov
jb
adc
in
jns
sbb
xchg
ret
mov
jo
adc
bnd
in
sub
inc
sbb
addr16
int3
mov
js
and
push
add
sahf
mov
sub
in
dec
repnz
mov
in
cmps
shl
(bad)
loope
or
mov
dec
test
mov
xlat
cmp
push
pop
std
push
retf
mov
mov
sar
dec
aas
sub
push
xchg
loop
or
in
xchg
test
inc
sbb
cld
retf
dec
pop
sbb
xor
test
adc
imul
popa
push
xor
or
hlt
dec
xchg
dec
scas
inc
in
(bad)
inc
sub
cld
(bad)
adc
xchg
inc
sbb
xchg
dec
loopne
repnz
sbb
out
data16
int
pusha
push
or
test
xor
sub
jo
push
lods
inc
mov
fs
adc
mov
dec
imul
mov
jnp
mov
ins
sbb
jmp
inc
mov
jl
lock
outs
push
sbb
adc
(bad)
in
cmp
cli
in
repnz
or
cs
retf
mov
cmp
call
jp
pop
aaa
dec
xor
adc
add
inc
or
fldcw
stc
adc
xor
inc
inc
or
fidivr
jne
aas
sar
dec
ins
push
mov
fist
push
dec
jmp
jne
icebp
pusha
inc
neg
dec
pop
cmp
push
test
(bad)
cmc
mov
arpl
cmc
js
inc
lods
adc
cli
xchg
in
pop
inc
mov
ja
fdivr
call
mov
sub
gs
mov
dec
aas
sub
jl
lds
scas
mov
mov
ins
outs
call
std
cmp
fneni(8087
hlt
inc
xor
xor
adc
test
adc
clc
pop
outs
jne
push
fadd
lea
add
xlat
movs
loope
rcl
dec
loope
stos
mov
pop
ret
pushf
shl
cmp
fs
fdivp
cli
inc
add
cmp
(bad)
test
mov
and
sub
mov
rcl
sahf
and
inc
outs
js
movs
cmps
dec
pop
fwait
jne
mov
iret
inc
gs
xchg
pop
imul
pop
lea
add
cs
add
ret
mov
imul
lods
(bad)
mov
movs
inc
add
aaa
outs
loopne
pusha
sar
mov
inc
sub
loope
mov
push
popf
lods
add
inc
ds
(bad)
mov
mov
in
mov
repnz
mov
jns
xor
test
cmp
stc
ret
cmp
inc
jg
sbb
jo
inc
jmp
or
nop
xor
add
mov
pop
out
mov
imul
lahf
xchg
scas
push
pop
data16
in
movs
jp
pop
add
or
fistp
and
test
cmp
call
cmp
push
jecxz
test
das
enter
mov
xor
jb
or
pop
pop
into
das
in
gs
pop
scas
adc
rcl
push
call
xchg
push
and
cmp
aas
repnz
(bad)
shl
mov
stos
mov
add
pusha
pop
pop
into
xor
add
jmp
add
mov
mov
mov
ror
push
dec
adc
inc
(bad)
lahf
pusha
bound
mov
retf
mov
jae
push
hlt
sahf
bound
cmc
cs
pop
sbb
cwde
sub
test
dec
jmp
inc
xchg
aaa
imul
shr
int
out
inc
sbb
pop
adc
aam
jbe
out
into
test
adc
movs
std
movs
sbb
imul
push
xchg
jo
push
jge
and
popf
dec
push
loope
shl
push
push
fstp
repnz
punpckhdq
int
leave
popf
icebp
mov
rol
into
std
xor
nop
lods
mov
(bad)
push
dec
cld
das
push
fstp
and
inc
cmp
mov
aaa
dec
pop
push
mov
lods
sbb
and
lods
inc
adc
push
xor
out
jnp
out
cld
enter
xor
imul
push
adc
mov
xchg
adc
adc
retf
or
push
jbe
xchg
sahf
push
loopne
pop
out
sub
stc
cmps
outs
enter
jl
sbb
das
jb
xor
retf
cmp
push
inc
inc
dec
jl
popf
mov
ins
psrld
jle
pop
xor
clc
pusha
mov
(bad)
ins
loope
xchg
ins
stos
push
push
sub
dec
cmp
fsub
int
jns
xchg
mov
shr
mov
rol
out
mov
cli
out
shr
sub
mov
xchg
and
fs
test
xchg
in
mov
cmc
aas
mov
mov
mov
int
sub
(bad)
pop
shl
mov
and
aas
popf
cdq
inc
lock
sahf
fnstsw
sbb
es
or
add
pop
(bad)
mov
(bad)
xlat
jmp
test
mov
test
jnp
(bad)
mov
jae
mov
(bad)
imul
push
call
add
aad
fcomp
mov
push
in
sahf
loope
push
xor
fsubr
dec
iret
pop
ins
pop
test
adc
call
sbb
iret
push
ins
xchg
add
sbb
jge
mov
push
in
jo
aad
inc
add
cmp
out
int
or
and
bound
mov
retf
cwde
test
mov
test
fdivr
fld
push
out
fadd
icebp
dec
jns
pop
jo
js
sbb
aad
into
xor
jae
adc
outs
ins
dec
adc
ret
ins
jle
pop
cmc
(bad)
popa
push
push
sub
popf
es
mov
sbb
xchg
pop
mov
push
das
fisttp
jmp
dec
xor
pop
bound
inc
cmps
pop
icebp
js
in
cmps
xor
mov
js
into
adc
push
outs
mov
sbb
push
pop
jns
mov
pop
fistp
pusha
outs
inc
sti
scas
xor
fbstp
fnstsw
adc
xor
jns
pop
imul
pop
dec
inc
rcl
xchg
pop
int
jnp
jae
jo
xor
sub
and
mov
dec
icebp
push
pop
jle
lods
rcr
lds
cmp
mov
dec
or
popf
sbb
adc
xchg
stc
mov
sbb
leave
sti
sub
and
or
cmp
popf
jae
push
call
in
(bad)
in
adc
and
push
retf
dec
test
dec
xor
xchg
out
iret
lahf
push
bound
cmp
(bad)
mov
and
add
(bad)
mov
xchg
or
cmps
scas
cld
neg
mov
addr16
jge
mov
adc
inc
jp
adc
stos
call
loope
pop
jno
movs
fiadd
(bad)
into
sub
ins
das
pop
cmp
call
sbb
(bad)
in
adc
fdiv
push
call
es
push
adc
add
mov
dec
movs
cmp
mov
fistp
inc
repnz
leave
int3
jp
fistp
aad
pop
pusha
push
jne
jle
pop
jle
iret
daa
loopne
mov
adc
int
repz
dec
push
ins
pop
mov
adc
add
test
shl
sbb
and
push
stos
mov
mov
icebp
jp
test
and
jmp
hlt
fs
fwait
mov
ror
mov
add
mov
inc
fistp
sbb
sub
inc
loopne
mov
xor
fist
mov
jmp
outs
jmp
les
ds
lahf
pop
xchg
loopne
ins
and
sbb
and
test
jmp
cmp
rcr
pusha
movs
cmc
cld
lea
push
stos
xor
leave
cdq
mov
mov
ret
(bad)
sar
shl
mov
in
sbb
clc
inc
(bad)
mov
dec
mov
and
add
jecxz
sti
mov
dec
clc
mov
aad
es
pushf
cmp
or
rcr
cdq
cmp
jb
and
stos
mov
aad
cmp
test
xor
fnstenv
mov
push
push
jge
jne
stos
cmp
lahf
iret
and
shl
jp
imul
daa
dec
and
add
mov
loope
ror
xor
aam
in
mov
sbb
add
shl
sbb
pop
cmp
sub
arpl
cmc
mov
or
inc
popa
mov
test
xor
call
xchg
outs
(bad)
je
int
mov
xchg
cmp
jns
mov
ins
arpl
sbb
scas
xchg
mov
stos
mov
sbb
hlt
xchg
aad
dec
fcmovnbe
in
mov
ret
mov
es
in
clc
shr
fst
mov
mov
scas
in
scas
inc
loope
dec
or
fyl2xp1
lock
xchg
movs
cdq
(bad)
int
ss
mov
mov
mov
arpl
arpl
add
popa
movs
out
xchg
inc
out
jo
and
push
shl
dec
inc
xor
mov
mov
bound
adc
pop
repnz
adc
loope
fcomip
in
lahf
ret
fnstcw
add
adc
shr
mov
loope
int
cmp
cli
adc
inc
and
push
sbb
xchg
dec
add
jo
add
mov
js
mov
mov
int
mov
fsubr
mov
ja
fwait
and
sub
jb
test
pop
adc
ret
sub
dec
scas
or
dec
mov
mov
xchg
adc
dec
inc
cmove
test
pop
pop
mov
mov
fist
mov
std
shr
cmp
pop
pop
xchg
cmp
pop
mov
mov
sbb
pusha
mov
dec
mov
pop
pop
mov
into
mov
outs
daa
mov
ficom
jns
js
adc
addr16
shl
sub
jl
mov
aam
(bad)
inc
in
mov
out
jmp
mov
movs
mov
cmp
mov
rcl
jne
xchg
or
sbb
jp
shl
lock
inc
pusha
test
rol
(bad)
test
inc
sub
mov
sub
xchg
addr16
jp
xor
test
mul
add
(bad)
jae
rol
push
loope
nop
in
mov
jnp
fisub
inc
idiv
xor
out
mov
imul
jno
je
scas
jnp
jns
std
test
jg
dec
and
retf
dec
scas
inc
ret
enter
movs
fiadd
mov
call
jnp
push
retf
ret
aam
xor
lahf
stos
xchg
sahf
addr16
in
mov
adc
iret
call
(bad)
shl
fidiv
shl
lds
fst
jecxz
aad
rcl
fmul
fidivr
adc
int3
cmps
fdiv
icebp
xchg
adc
jae
mov
fucomip
push
pop
adc
xlat
fisubr
(bad)
fist
xchg
xor
gs
fisttp
js
cdq
mov
popf
inc
cmp
add
outs
je
movs
cmp
jmp
dec
fwait
or
pop
inc
call
pop
pop
out
bound
in
push
inc
into
push
stos
push
dec
arpl
xor
cmp
jb
jne
inc
mov
push
ret
cmp
adc
mov
mov
mov
jns
retf
jg
ret
adc
mov
mov
mov
out
pop
sub
sbb
aad
icebp
pop
dec
fsubp
push
(bad)
push
das
popf
xchg
daa
inc
add
pop
test
jae
add
mov
pop
jecxz
xchg
dec
fdivp
jecxz
mov
les
xor
daa
and
(bad)
cld
xchg
xchg
stos
test
retf
xchg
in
das
in
out
(bad)
mov
in
test
adc
ins
add
(bad)
xchg
cmp
pop
mov
outs
pop
dec
stos
loop
lods
jl
pop
sbb
shl
xchg
jmp
cmp
scas
stos
into
and
in
dec
jl
outs
inc
sar
push
jb
sbb
movs
push
movs
add
dec
(bad)
test
sub
pop
mov
mov
imul
push
cmp
fiadd
add
add
stos
mov
popf
jne
shl
inc
js
mov
xor
mov
cmp
into
push
les
pusha
mov
sbb
das
loope
mov
(bad)
arpl
and
dec
shr
lods
fwait
xchg
sub
cmp
outs
jmp
push
dec
aaa
mov
pop
mov
data16
xlat
adc
enter
jo
lock
cmp
std
jno
mov
jle
in
xchg
add
jnp
fs
jp
mov
scas
dec
jle
or
pop
mov
mov
sahf
add
out
fadd
sub
aad
fstp
retf
hlt
in
pop
aas
xchg
mov
jae
pop
dec
rcr
popf
(bad)
mov
mov
mov
arpl
push
sbb
pop
out
popa
mov
aad
int3
xor
dec
icebp
aad
jbe
ja
jmp
cmc
cmpps
mov
fdivr
xor
rol
adc
enter
les
out
add
(bad)
dec
sbb
je
mov
xor
mov
fbld
int
mov
mov
sub
and
xchg
in
jne
mov
push
mov
pop
shl
adc
xchg
aam
fwait
jmp
add
outs
test
mov
push
or
or
loopne
cmc
and
sub
sub
dec
div
test
in
jmp
mov
ins
aam
cmp
sbb
mov
push
mov
cmp
mov
or
push
sti
sti
dec
lods
jle
and
pop
sub
pop
cmp
leave
arpl
daa
shl
loop
mov
cmps
lock
mov
div
aaa
lock
shl
loope
cmp
test
sahf
jp
iret
jp
mov
fdivr
lods
in
xchg
pop
int
pusha
retf
jg
dec
scas
sar
shr
mov
push
cmp
scas
sbb
or
add
cmp
movs
and
cdq
lahf
xchg
jge
(bad)
rcl
iret
gs
cdq
enter
in
shl
daa
cmp
dec
mov
aad
out
jmp
jns
xchg
cld
xor
sbb
jns
adc
jbe
xchg
test
popa
div
add
and
jo
lods
mov
xchg
mov
dec
mov
pop
jmp
xchg
pop
aas
mov
rol
cmp
ins
xchg
pusha
sahf
bswap
fimul
jmp
xor
xchg
mov
js
outs
and
test
cmp
jns
cmps
jno
mov
dec
stc
shl
add
pop
fcmovnu
rcl
hlt
mov
out
cmp
repnz
jg
add
mov
mov
aad
mov
fild
mov
aas
and
cmp
fidiv
emms
test
pusha
sbb
cmps
adc
ret
cmp
cmp
ret
jae
cmps
mov
jno
js
push
icebp
cmp
fwait
push
dec
(bad)
mov
mov
cli
jno
imul
xchg
jae
or
ins
mov
call
and
mov
rol
or
mov
push
mov
adc
sbb
sbb
cmp
jmpw
loopne
lods
sbb
xlat
mov
retf
lahf
and
dec
dec
inc
push
pop
or
stc
xchg
push
(bad)
cmps
mov
pop
adc
and
xor
push
or
call
sub
lea
(bad)
out
mov
xchg
std
or
sub
dec
in
stos
test
int
popa
movs
xor
ror
mov
gs
jecxz
inc
lods
nop
sub
arpl
mov
push
mov
push
mov
sbb
cmc
and
(bad)
inc
cld
cli
mov
push
jb
mov
outs
das
lods
and
data16
sbb
mov
xor
adc
or
hlt
je
icebp
aad
lock
jne
pop
retf
push
mov
mov
and
cmps
pop
bound
xor
xchg
dec
jg
inc
push
sub
dec
xor
cdq
mov
enter
xchg
pusha
ds
in
int3
js
xor
inc
mov
fdivrp
mov
cmc
dec
xor
xor
mov
into
sub
in
xor
inc
cmp
scas
fwait
mov
add
out
add
and
add
and
xor
and
push
and
sub
cs
push
pop
(bad)
inc
test
call
imul
outs
xlat
ins
xor
adc
mov
out
ins
vsubss
imul
pusha
lahf
push
in
dec
fs
jmp
aam
mov
add
das
rcr
gs
xor
xchg
js
push
ret
out
add
sbb
out
cmps
mov
movs
push
sub
cwde
xor
mov
lock
sti
test
jge
stos
scas
add
add
xlat
mov
inc
pop
push
icebp
jae
pop
and
xchg
out
(bad)
sbb
mov
div
jbe
cli
out
lahf
into
lea
out
sbb
mov
lods
fild
xchg
cmp
sub
call
frstor
inc
add
lds
dec
ret
lea
in
stos
and
fsubr
mov
cmc
bound
pusha
jb
faddp
adc
or
adc
icebp
and
mov
pop
mov
inc
mul
lods
sub
loop
out
into
jle
pop
xor
sbb
pop
jne
mov
fst
xchg
mov
sub
cmps
mov
jbe
pop
ret
or
push
mov
(bad)
fadd
adc
stc
pop
mov
lods
dec
cdq
ds
mov
mov
in
mov
movs
(bad)
sar
movs
push
or
sbb
(bad)
jmp
inc
sub
add
loop
sub
in
push
adc
scas
jmp
xor
add
clc
jmp
rol
xor
shl
mov
jecxz
adc
fist
out
ret
sub
aas
lods
sahf
jns
push
ret
push
fst
pop
push
dec
aam
rcr
sbb
cmp
inc
rcr
push
pop
int
or
stos
outs
sub
fcom
adc
lea
inc
or
into
movs
jge
repz
inc
mov
pusha
mov
loope
test
pop
ds
push
or
aaa
inc
out
push
hlt
push
data16
test
dec
into
xchg
mov
pop
iret
ror
lods
cld
call
push
cmps
(bad)
ja
adc
cmps
pop
dec
push
add
inc
and
cli
mov
push
inc
out
mov
pop
xchg
out
mov
es
sahf
cwde
adc
xchg
or
clc
cli
push
xor
xchg
pop
push
add
popf
loop
jmp
fmul
(bad)
cmp
(bad)
das
(bad)
icebp
inc
test
sbb
mov
push
(bad)
fdivr
fidivr
jmp
mov
xchg
iret
test
cwde
loopne
sub
add
inc
fs
or
add
ja
in
scas
xchg
cwde
das
pop
sbb
out
push
sub
xor
scas
inc
add
pop
push
imul
add
push
in
xchg
popf
dec
fwait
mov
mov
mov
cmp
mov
dec
fs
(bad)
arpl
enter
jl
fwait
sti
inc
pop
repz
xchg
pop
lds
sahf
sbb
mov
outs
add
popf
lahf
dec
in
shr
ins
push
cdq
mov
call
mov
push
retf
out
and
push
xor
mov
(bad)
jae
jns
push
and
push
pop
call
sbb
mov
scas
xchg
lock
hlt
push
and
loope
mov
call
in
cmp
pop
(bad)
in
aas
in
cli
(bad)
ins
mov
jno
cwde
sbb
cs
cdq
pusha
stos
cmc
aam
dec
push
sub
mov
in
leave
or
into
lds
into
out
enter
cdq
movs
gs
sbb
std
in
or
outs
ins
jle
xchg
sub
or
rcr
xchg
jb
mov
addr16
repz
mov
lahf
adc
fisub
push
xor
mov
(bad)
imul
retf
test
aaa
push
cmps
jbe
jns
mov
mov
push
and
dec
addr16
sub
out
jg
push
repz
jecxz
adc
(bad)
sbb
das
popa
cmp
pop
inc
out
cmps
adc
hlt
(bad)
sub
inc
jae
and
mov
adc
ror
jno
mov
retf
cdq
jo
xchg
inc
and
std
mov
mov
or
sbb
inc
dec
es
mov
cmp
into
fcmovnu
xchg
imul
cli
adc
push
cmp
add
data16
out
pop
call
mov
sub
fdivr
loop
out
stos
add
adc
loopne
hlt
mov
bound
xor
xchg
clc
shl
jl
bound
xlat
sbb
xchg
jg
mov
jmp
inc
pop
jbe
movs
test
neg
arpl
addr16
pop
dec
cwde
inc
mov
lock
xor
push
loope
inc
pop
xor
aad
mov
retf
xchg
sbb
sub
xor
gs
cmps
xchg
fld
je
int
inc
pusha
inc
int3
out
shr
lea
xor
push
retf
mov
sti
ret
inc
inc
in
imul
mov
dec
pushf
popa
div
shr
push
mov
cmc
inc
add
jecxz
pop
and
dec
in
in
fidiv
jnp
retf
sbb
xor
(bad)
iret
sar
mov
addr16
sti
or
imul
jp
cmc
mov
bound
hlt
jg
jb
mov
mov
stos
pop
push
retf
push
(bad)
fdiv
in
add
jge
sub
mov
test
ss
add
or
mov
retf
pop
inc
ds
out
and
je
jg
sub
mov
fwait
sub
repz
cmps
loop
call
test
lea
dec
iret
inc
test
icebp
mov
jmp
arpl
pop
pop
fisttp
mov
lea
ret
ins
les
cmp
sub
inc
push
adc
jmp
or
stc
or
push
js
mov
add
mov
lea
lahf
mov
out
xor
mov
mov
push
push
xor
jne
sbb
inc
stc
test
into
add
push
push
jae
cmp
and
dec
repz
sub
mov
lods
cs
stc
xchg
mov
mov
imul
pop
dec
shr
push
popf
daa
in
mov
les
sbb
xchg
xor
aaa
mov
mov
mov
push
mov
shl
mov
imul
xchg
cmp
push
push
or
xchg
xchg
mov
aas
mov
push
jle
sbb
xor
add
pop
mov
push
shl
lds
dec
movs
sub
cmp
pop
xchg
fnstcw
cdq
jnp
retf
ret
mov
loope
idiv
xlat
push
pop
(bad)
fild
repz
cmp
fst
aad
pushf
(bad)
mov
push
nop
into
ins
(bad)
aad
cmp
ror
pop
lds
mov
xchg
out
pusha
das
cmps
les
xchg
cmp
cmp
inc
loopne
cmp
repz
(bad)
xchg
bound
adc
scas
xor
add
inc
bound
ins
and
rcr
mov
sar
xchg
pusha
clc
les
fbld
inc
rcl
jne
ror
imul
or
(bad)
or
out
pop
mov
and
neg
jns
stc
data16
push
sbb
inc
cmps
loopne
cmps
pop
int
mov
cdq
pushf
inc
shr
mov
mov
mov
iret
cli
xchg
ret
jg
jne
imul
sbb
cdq
enter
mov
add
js
cmps
or
neg
out
call
cmp
and
aam
cmp
inc
cs
jbe
inc
les
and
xchg
dec
jge
add
dec
fchs
jbe
mov
jl
pusha
sbb
imul
mov
imul
xor
pop
cwde
inc
mov
lea
jecxz
retf
sbb
sub
or
movs
mov
inc
push
cmps
and
int
adc
xor
jle
mov
repz
(bad)
retf
push
and
movs
inc
or
outs
xor
jo
fdivr
out
ja
(bad)
and
cs
pop
pop
hlt
jbe
addr16
xor
ds
and
mov
shl
sbb
xchg
pop
jae
jae
push
mov
dec
pop
xchg
in
sbb
push
jo
in
push
fcom
clc
(bad)
daa
dec
push
cmp
out
sar
out
cdq
aaa
sar
mov
shl
adc
aaa
test
xlat
push
mov
idiv
pushf
rol
inc
out
jb
popf
adc
mov
mov
fs
jmp
jle
popf
sub
bound
loop
aam
rcl
add
add
mov
mov
or
cmp
in
jge
loope
movs
out
add
stc
adc
and
pop
mov
dec
stos
stos
xchg
mov
and
fisub
icebp
out
and
sub
outs
dec
int
(bad)
push
jecxz
ja
bound
mov
jg
push
scas
ret
fxch
outs
gs
pop
xor
pop
xlat
mov
mov
jmp
aas
jno
call
sub
mov
pop
pushf
(bad)
xor
jno
out
lahf
mov
movs
shl
int3
dec
pop
inc
push
clc
pop
pop
fisubr
call
imul
pop
or
outs
pop
xchg
dec
pop
xor
jecxz
mov
bound
ret
pop
adc
add
jge
or
adc
jb
ja
daa
mov
neg
into
pushf
inc
mov
mov
adc
es
aam
hlt
ficom
add
bound
cdq
psubw
mov
xlat
sti
and
add
out
cmp
cwde
ins
adc
sbb
or
(bad)
sub
xor
mov
mov
repnz
imul
shl
mov
aad
gs
and
mov
xchg
loope
inc
(bad)
jo
dec
push
jo
aaa
inc
and
call
and
aad
addr16
in
rcr
push
fwait
and
pop
sub
sub
es
pop
inc
mov
jge
pop
(bad)
enter
adc
ss
add
inc
inc
dec
inc
sub
sub
fdivr
fadd
ins
push
inc
jbe
pop
popf
cmp
repz
push
inc
(bad)
sub
movs
pop
dec
xor
leave
jecxz
push
arpl
cmps
sub
test
repnz
dec
mov
inc
pop
aad
and
jl
or
std
inc
push
sbb
jb
push
fnstsw
cmp
cs
sbb
pop
pop
stos
ror
sub
ror
dec
push
fild
add
sbb
loope
mov
adc
and
out
ss
sub
sahf
sahf
cdq
ret
sbb
dec
mov
adc
les
sbb
movs
stos
je
int3
mov
mov
in
xlat
jge
mov
ret
rol
les
in
cmp
loop
repnz
xchg
cmp
addr16
pop
pop
jno
lods
mov
pop
stos
outs
gs
pop
jmp
fs
inc
sti
shl
push
loopne
pusha
add
test
shl
dec
outs
adc
xchg
ja
(bad)
mov
xor
xchg
cs
jmp
sti
cmp
jg
retf
and
leave
xchg
xchg
pop
mov
mov
jb
push
dec
xchg
push
ret
mov
adc
add
adc
out
out
mov
ins
dec
cmc
adc
out
(bad)
dec
ja
not
fsub
mov
fdiv
std
aad
or
xor
in
push
repnz
push
adc
pop
add
dec
retf
jnp
cdq
mov
leave
jae
inc
popf
pop
ror
lods
loop
outs
cdq
(bad)
cmp
inc
jae
and
ficomp
in
mov
or
in
mov
shl
add
data16
xor
sub
mul
lods
push
add
aaa
mov
adc
loop
gs
mov
cmp
pminsw
xor
bound
inc
sbb
(bad)
mov
add
stc
lahf
jno
push
je
es
push
add
mov
xor
(bad)
and
dec
mul
inc
jmp
pop
pop
inc
adc
out
sti
add
(bad)
fisub
or
fadd
cmp
call
ret
jne
ss
vmovlhps
pop
push
loopne
xchg
out
cmp
mov
mov
push
retf
aam
inc
sbb
or
ins
int
xchg
jo
pop
or
rol
cmp
jl
sbb
jae
inc
cmp
and
cld
in
mov
iret
push
sar
pop
(bad)
xor
ror
push
push
in
js
jl
mov
inc
pop
push
(bad)
aas
ds
(bad)
or
addr16
ja
jns
in
ror
test
or
ins
mov
xor
retf
ins
mov
or
adc
popw
pop
ret
or
scas
sub
mov
(bad)
int
stos
mov
pop
mov
sub
jmp
gs
adc
xor
pop
pusha
xchg
test
mov
or
push
jg
xor
xchg
adc
xchg
in
inc
pop
xchg
mov
rol
out
xchg
xlat
les
jg
popa
stc
lea
mov
or
in
jns
fs
stc
jp
popf
neg
lea
dec
cmp
pop
test
in
aad
lods
or
ret
xchg
mov
push
fs
enter
cmps
arpl
push
fs
hlt
jb
retf
mov
ret
out
or
xchg
sub
mov
in
pop
xchg
add
je
pusha
xlat
cwde
xchg
leave
pop
lds
enter
stc
xor
les
test
movs
in
loope
mov
sub
jge
adc
fimul
sbb
test
ret
mov
inc
cmp
jmp
sti
cmp
clc
cld
es
rol
iret
mov
mov
mov
test
hlt
std
fldenv
pop
mov
cmps
rol
aas
jne
fwait
inc
lods
xchg
xlat
ds
dec
xor
mov
add
fadd
jbe
fs
xcrypt-cfb
cmps
cmps
enter
xlat
ret
pop
mov
jmp
sub
shl
movs
push
sbb
xchg
in
inc
xchg
cdq
jno
inc
pop
push
dec
pop
and
and
out
jl
mov
dec
sub
jnp
gs
or
mov
ret
jo
cmp
pop
or
adc
stos
xor
sahf
iret
test
rol
repz
pop
in
stc
loop
data16
or
xchg
shr
sahf
cld
popf
std
jno
jbe
fimul
jnp
inc
loopne
ret
jp
mov
hlt
out
mov
push
cmp
cmp
nop
or
add
push
inc
push
and
xor
outs
mov
mov
je
lock
jle
or
push
aam
sbb
xor
xchg
pop
xor
ret
(bad)
adc
repz
enter
rcr
adc
lods
test
inc
test
gs
movs
xor
shl
push
retf
and
mov
out
sub
pusha
xchg
test
out
fs
out
call
mov
mov
sub
jns
jno
out
cmc
fistp
or
mov
sbb
ds
fstp
pop
pusha
scas
shr
ins
jno
inc
test
push
mov
push
jmp
push
movs
mov
push
xlat
(bad)
cdq
pop
sbb
in
lea
jecxz
out
(bad)
jle
jge
sub
jle
xchg
add
sbb
mov
inc
outs
shl
imul
mov
cmc
pop
cld
xor
aas
cmps
fcmovne
dec
xor
enter
(bad)
push
ins
dec
or
push
pop
cld
pop
pop
sbb
fdiv
dec
cmp
mov
cmp
jne
adc
dec
add
inc
lods
push
popf
jge
lea
je
out
and
inc
push
cmps
iret
jae
outs
leave
push
and
pop
pop
sbb
and
out
and
and
xchg
pop
dec
pop
stos
jmp
stc
or
sbb
mov
lods
and
ficomp
mov
loop
push
fistp
repnz
or
xor
mov
pop
and
maskmovq
test
lea
rcl
ficom
ds
loopne
cdq
ret
cwde
test
fsubr
out
xor
stos
stc
jnp
push
imul
not
cmp
loopne
aad
(bad)
inc
mov
inc
pop
arpl
dec
mov
aaa
cmp
jmp
jmp
jo
push
dec
shl
xchg
(bad)
lahf
clc
xchg
cmp
sbb
scas
cmps
outs
aaa
xchg
cmp
aam
lods
pusha
mov
loope
mov
xor
or
movs
out
xchg
jl
push
lea
xchg
and
pop
mov
fwait
push
adc
jno
adc
jae
cli
rcl
test
out
loope
jp
add
push
lods
and
fsubr
sahf
cmp
mov
call
mov
call
int3
out
js
cmp
cmp
stos
and
inc
inc
pop
xchg
jmp
mov
cs
lock
adc
jg
gs
pushf
clc
loope
loop
pop
stos
mov
loopne
inc
or
pop
inc
mov
std
(bad)
jge
jle
mov
xchg
jl
and
xlat
add
scas
call
not
dec
data16
push
cdq
sub
imul
in
sti
std
adc
sbb
inc
sub
push
pop
aas
(bad)
std
xor
adc
push
mov
add
jmp
xchg
lahf
jmp
sbb
adc
mov
icebp
mov
fcom
jmp
and
jmp
aam
jnp
pop
pushf
sub
cs
xor
adc
and
jbe
jno
push
cmp
inc
test
mov
cmp
cdq
jo
xchg
dec
shl
cmp
test
cmp
pop
test
sub
xchg
mov
pop
(bad)
aas
adc
push
inc
lods
push
add
push
mov
shr
push
mov
(bad)
in
int3
xor
xchg
sub
sub
(bad)
lahf
adc
adc
loope
call
and
mov
lds
sti
fild
rcl
pop
call
mov
and
mov
pop
push
cmp
aad
mov
stc
mov
aam
loopne
and
xor
pusha
dec
sahf
retf
in
(bad)
cmp
rol
sub
dec
leave
jno
movs
mov
les
arpl
movs
mov
xor
push
xor
push
aad
pop
(bad)
cmp
rcr
mov
mov
nop
cs
popf
repnz
icebp
add
inc
ret
push
mov
add
adc
js
stos
test
fisub
sti
ins
repz
jbe
sub
push
mov
into
sub
push
movs
dec
jmp
inc
add
pop
jb
ds
scas
pop
ret
fwait
xchg
mov
inc
loop
fcom
faddp
add
shl
or
sub
xor
jbe
push
cli
sbb
pop
inc
pop
xchg
and
cli
data16
mov
jecxz
into
aas
inc
ja
or
sbb
call
aam
es
mov
lahf
loope
jge
loop
ins
pop
leave
mov
sub
fwait
test
mov
ss
mov
movs
fisubr
hlt
adc
or
clc
lock
dec
adc
daa
cmp
icebp
aas
out
and
gs
inc
pop
sti
test
dec
jl
mov
int
out
loope
adc
push
rol
mul
inc
daa
mov
imul
sub
retf
pop
sbb
adc
or
adc
push
and
lock
scas
or
jne
popf
sub
mov
push
jb
out
push
and
mov
int3
xchg
adc
data16
iret
out
movs
int3
movs
sub
jbe
retf
out
and
outs
jle
add
inc
test
xchg
and
jbe
(bad)
xor
mov
dec
cmp
mov
mov
jmp
inc
ror
mov
add
pop
out
jp
pop
cmp
cmp
pop
arpl
mov
xchg
adc
pop
sub
push
inc
xor
sub
sub
mov
jmp
push
mov
daa
out
push
sub
(bad)
rol
and
push
sbb
jp
xchg
xor
jmp
or
retf
movs
mov
aas
and
in
outs
js
iret
test
and
mov
out
test
pop
jmp
data16
xchg
mov
icebp
xor
sub
mov
sub
pop
mov
add
in
cwde
fwait
push
xchg
mov
mul
mov
sub
fsub
inc
and
pusha
inc
mov
repnz
imul
div
jp
pop
xchg
and
cmc
or
shr
cmp
fstp
push
add
mov
sbb
aad
retf
mov
lea
mov
cs
repz
outs
mov
mov
in
push
in
inc
cs
call
pusha
outs
xchg
sar
xchg
xor
outs
sar
mov
inc
inc
jmp
into
xchg
dec
sbb
enter
(bad)
jl
popa
out
pop
push
mov
xchg
aam
adc
fs
data16
scas
mov
xchg
retf
(bad)
cmp
pop
int3
xchg
aam
(bad)
(bad)
out
xchg
clc
fstp
cmp
jmp
lea
xor
jp
and
xor
lds
push
sbb
pop
into
daa
arpl
xor
into
in
fwait
push
test
into
pop
add
loopne
adc
cmp
cwde
lea
cwde
fadd
jmp
stos
mov
lea
xchg
popa
adc
mov
jmp
fstp
pop
pop
sub
lea
xchg
xor
jle
mov
je
inc
fsub
aam
test
push
mov
push
in
xchg
movs
es
or
xchg
cmc
shl
ret
nop
cmps
push
aaa
inc
dec
push
inc
in
and
dec
lods
int3
xchg
ror
jno
scas
cmps
fild
cmp
rcr
gs
in
ss
pop
outs
data16
popa
fstp
lock
daa
je
test
jecxz
xchg
les
mov
test
out
retf
mov
push
push
je
mov
or
xor
push
sub
daa
in
not
jb
aad
mov
add
stos
outs
push
jno
inc
loop
lock
lods
sub
(bad)
mov
or
fild
jl
jnp
aaa
clc
jg
cmps
add
fsubr
mov
xchg
in
mov
cli
sbb
mov
mov
inc
add
mul
mov
sub
inc
cmc
cmps
xchg
xchg
jge
lds
xlat
sbb
test
xchg
xchg
inc
and
dec
imul
sub
pusha
push
xchg
call
push
add
ficom
jno
ins
add
jg
xor
push
rcl
test
cmp
cld
adc
cmp
jne
dec
pop
dec
imul
retf
xor
xchg
dec
cs
inc
inc
adc
sahf
cli
push
mov
adc
scas
movs
push
cli
fucomp
sub
repnz
(bad)
int3
sti
inc
sbb
add
in
xor
inc
sub
cmps
push
pop
bound
sub
mov
push
xor
xor
adc
and
mov
lahf
inc
imul
lock
test
sbb
dec
test
ss
int
jge
ja
rcr
out
imul
pushf
xchg
jmp
push
xchg
sti
(bad)
hlt
das
xlat
mov
stos
cmp
and
adc
call
aaa
clc
neg
push
and
mov
cmovp
out
dec
fmul
pop
iret
outs
dec
push
push
jp
dec
stos
enter
repnz
cmps
dec
(bad)
sahf
dec
push
add
mov
leave
out
dec
cmc
fild
cwde
push
test
xchg
add
jnp
or
push
pop
xor
mov
jle
cmps
jns
cdq
adc
pop
enter
fmul
push
lock
ins
outs
mov
ins
or
inc
mov
xchg
loope
sbb
inc
movs
adc
jle
(bad)
test
adc
mov
aam
clc
sbb
and
rcl
or
nop
push
or
mov
retf
cmps
jb
jnp
push
xchg
rol
jmp
mov
xor
sub
add
aam
repnz
and
jae
cmp
in
cs
inc
cwde
stos
leave
lea
sbb
xchg
pushf
adc
ja
pop
cmp
mov
push
push
jne
dec
adc
scas
les
es
mov
mov
and
call
nop
arpl
icebp
or
dec
sbb
retf
inc
sbb
jnp
sub
ret
xor
push
(bad)
ror
push
pop
rcl
popa
pushf
cld
es
std
mov
pop
dec
ss
and
rcr
stos
and
fdivp
push
outs
fdivr
loop
repnz
dec
and
test
(bad)
push
mov
add
jg
or
mov
lahf
cli
inc
mov
ins
pop
rcr
mov
mov
scas
mov
dec
ret
dec
mov
mov
push
push
mov
dec
into
sbb
repz
sub
pop
push
retf
data16
xchg
jns
cmp
imul
cwde
cmp
cmp
push
outs
pop
jmp
jb
daa
imul
xor
sti
cmp
in
jle
clc
mov
ja
rcr
cmc
ret
jge
jl
int3
sub
das
pop
mov
in
xchg
adc
push
push
aam
inc
scas
jno
icebp
xor
(bad)
jbe
inc
les
ja
test
cmp
fmul
lea
jb
add
sub
retf
sbb
aad
mov
stos
adc
aaa
push
mov
mov
nop
mov
out
adc
or
les
sbb
xor
aaa
outs
xlat
loope
sar
nop
imul
scas
jle
pop
cmp
std
xor
xor
retf
je
mov
pop
pop
in
mov
test
enter
mov
aaa
out
mov
lods
or
popf
lahf
sub
in
mov
or
sahf
fs
mov
or
cmp
push
bound
stc
popf
mov
push
stos
inc
aad
fld
add
mov
sbb
push
push
jmp
sbb
dec
out
xchg
push
or
add
inc
jmp
push
sbb
out
xor
pushaw
mov
mov
inc
sub
jb
rcr
fsub
outs
jg
push
add
adc
icebp
inc
adc
cmp
movs
pop
adc
jb
out
das
cmps
push
or
push
push
add
jns
sub
loope
(bad)
xor
sbb
ins
mov
imul
leave
jl
mov
sub
xor
iret
xchg
ret
xlat
jae
push
cli
push
jge
push
jg
outs
pop
retf
jge
jle
xor
ss
sub
add
retf
call
fsubrp
mov
jae
jns
ret
scas
aam
push
jge
push
pop
rep
sbb
sub
adc
loop
mov
or
jo
sbb
cld
xor
sub
mov
test
sbb
sbb
add
and
cmp
nop
nop
jle
add
(bad)
xor
add
dec
stos
jns
mov
shl
call
jae
(bad)
ret
daa
js
xchg
sub
(bad)
cmc
cmc
or
sub
mov
lahf
mov
dec
cs
fist
add
dec
cs
fld
jbe
jne
leave
or
scas
and
dec
xor
sub
mov
adc
mov
fdivr
test
and
ins
popf
xchg
mov
xor
mov
out
and
cdq
adc
pop
add
fsin
out
xchg
loope
mov
sbb
sub
and
mov
mov
loope
pop
(bad)
pop
xchg
jecxz
fstp
jo
outs
mov
out
gs
mov
mov
dec
cmp
in
mov
pop
test
add
push
jae
lods
mov
shl
lea
and
add
test
fisttp
fidiv
xchg
push
in
mov
loopne
ins
inc
stos
cld
xchg
jne
push
xor
lods
lds
(bad)
sahf
push
imul
push
jb
ins
leave
ss
xchg
xor
or
mov
mov
jle
aad
mov
pusha
dec
scas
xor
xor
mov
mov
outs
das
inc
stos
sub
pop
xchg
xor
dec
(bad)
leave
push
cs
jmp
je
mov
xlat
ja
jg
inc
jae
mov
repz
fidivr
mov
inc
ins
icebp
and
ffree
push
sub
cmp
das
push
in
adc
inc
cmp
imul
xor
dec
ret
pop
cs
inc
mov
out
imul
out
jp
lods
inc
lea
mov
push
sbb
mov
jle
std
movs
push
pop
sti
xor
or
cmc
jnp
nop
xor
rcl
iret
leave
dec
in
jmp
(bad)
movs
imul
inc
in
mov
and
dec
div
cmp
sbb
and
jl
jnp
popa
push
or
sbb
dec
add
push
jnp
ins
pop
or
fstp
add
js
adc
push
add
(bad)
dec
in
stc
mov
push
sub
mov
pop
fdivr
outs
lahf
call
mov
cs
cmps
repnz
push
jmp
imul
les
pop
or
jecxz
add
push
sub
shr
mov
sbb
iret
or
push
jnp
or
mov
jmp
fdiv
jecxz
jbe
lahf
sub
cmps
cmps
adc
std
test
in
jae
cmp
adc
fidivr
daa
mov
xchg
push
lods
sub
xchg
ret
dec
inc
sahf
(bad)
ss
lock
gs
sbb
mov
nop
popa
cmp
(bad)
xor
jno
jne
mov
cdq
and
in
push
lds
mov
clc
in
or
jnp
dec
dec
mov
add
jbe
inc
ret
xchg
cmps
(bad)
mov
and
fmul
pushf
icebp
dec
sub
mov
clc
push
adc
and
xor
out
jnp
xor
cmp
call
xor
pop
ret
xor
mov
pop
stos
enter
or
adc
loope
ficom
lods
cs
push
mov
add
pop
data16
push
sub
outs
jl
repz
mov
push
xor
xor
stos
outs
mov
ror
and
or
dec
nop
mov
sub
xchg
retf
sub
(bad)
cmp
sar
outs
fld
adc
lds
or
xor
push
pop
add
call
test
jl
xchg
es
jmp
and
idiv
pop
(bad)
and
sub
ret
(bad)
pusha
cmp
push
sub
pop
fadd
push
jle
and
or
test
or
adc
pop
arpl
in
sub
push
mov
inc
mov
add
jl
mov
jecxz
imul
cdq
ret
out
fcomi
fsubr
fisubr
(bad)
mov
shl
arpl
jl
jge
mov
push
retf
loopne
push
dec
mov
mov
jge
ret
sub
pop
dec
mov
shl
xchg
rcl
test
cmp
es
scas
dec
test
mov
mov
retf
(bad)
jmp
lods
mov
or
mov
mov
outs
mov
cs
inc
out
xchg
sahf
cmps
jmp
jbe
mov
lods
lds
xor
xor
dec
push
outs
loop
jo
(bad)
hlt
inc
push
(bad)
sub
inc
cmp
loop
push
xlat
or
mov
popf
mov
std
xchg
(bad)
sub
cs
and
sbb
pop
mov
pop
cmp
mov
xor
xchg
or
mov
sbb
or
jno
dec
cld
out
mov
pop
js
mov
dec
mov
popa
sbb
pop
inc
cld
add
dec
movs
add
std
jb
icebp
sbb
xchg
inc
xchg
push
lods
stc
je
(bad)
lea
mov
jmp
sub
and
or
ficomp
xlat
inc
add
mov
enter
mov
xchg
xor
push
and
xchg
jmp
sbb
leave
jne
cmp
fisttp
ficom
not
xchg
aad
daa
xchg
das
fnstenv
xlat
call
dec
out
push
jae
push
xor
cmp
pop
pop
jle
inc
xor
add
inc
cmps
stc
mov
push
into
mov
mov
mov
xor
repz
cdq
in
push
fcmove
out
cmp
mov
popf
cmc
mov
das
mov
leave
ins
repnz
js
dec
test
retf
nop
pusha
cmp
xchg
adc
es
xchg
in
dec
add
push
(bad)
ror
mov
xchg
sub
and
arpl
add
(bad)
cwde
std
pop
aaa
adc
mov
in
jne
addr16
into
enter
sar
loop
add
push
and
xchg
xor
jnp
mov
jl
mov
fwait
ret
ja
cdq
and
out
fsubrp
idiv
daa
and
sahf
inc
outs
into
into
enter
mov
out
mov
(bad)
sub
mov
xchg
and
fstp
into
mov
cmp
sbb
mov
stos
jle
(bad)
arpl
leave
fidivr
ins
jmp
imul
xchg
push
jg
or
push
or
es
sub
div
inc
sub
sbb
jnp
scas
out
jle
out
lahf
iret
fptan
pusha
les
mov
bound
test
aam
sbb
add
(bad)
sub
mov
movs
mov
pop
and
or
jb
rcr
aas
int3
mov
cs
div
pop
addr16
or
lds
mov
pop
jae
sbb
mov
sahf
dec
jbe
push
jb
rol
xor
jbe
pop
sbb
out
icebp
adc
push
clc
dec
pop
cmc
shr
cdq
xchg
ins
outs
cmp
jbe
push
pop
in
jno
cmc
dec
push
cmp
xchg
movs
pop
aam
stos
aas
fdiv
out
outs
mov
lock
sbb
outs
iret
movs
std
push
nop
iret
or
dec
pushf
cmp
xchg
ror
lods
aaa
jecxz
push
add
(bad)
lea
in
add
cmp
mov
(bad)
mov
leave
ja
lds
and
fadd
pop
aaa
int3
dec
out
fcom
jbe
pop
lods
clc
test
daa
leave
sub
cwde
ins
pop
loop
xchg
mov
xor
adc
adc
int
xchg
cmps
loopne
clc
inc
cmp
test
lea
test
xchg
push
in
xchg
xchg
dec
sahf
pusha
push
(bad)
neg
jmp
push
or
push
popa
pushf
mov
jmp
jo
ficomp
jle
sub
push
pop
popf
fs
sahf
(bad)
inc
lahf
lds
fidivr
and
dec
xchg
mov
fisttp
dec
les
stos
jnp
jp
add
sbb
mov
psrlq
mov
xor
mov
cmc
pop
jecxz
sbb
jmp
inc
ret
cs
std
(bad)
sub
iret
mul
push
imul
add
cmps
pop
pusha
inc
fcomp
movs
cmp
int3
sbb
mov
cmp
mov
mov
(bad)
in
inc
ins
cdq
js
in
jne
in
or
jns
out
jo
cli
jmp
jo
xor
or
dec
push
shl
sti
std
retf
jnp
mov
inc
cdq
leave
lods
inc
mov
movs
push
push
lods
mov
cli
add
xchg
retf
shr
ja
sbb
pop
mov
rol
add
and
mov
add
fmul
mov
mov
push
rol
inc
push
bnd
mov
mov
retf
cmp
test
es
or
retf
leave
jb
(bad)
sbb
push
sbb
in
jmp
fadd
jno
inc
imul
xor
mov
and
int
pop
sbb
and
clc
sbb
cmp
xchg
cmp
fld
ret
jecxz
xlat
addr16
cmps
les
xor
push
cld
sub
and
cmp
and
xchg
scas
test
push
or
push
xor
ins
mov
out
test
mov
cmp
aam
jg
jg
dec
popa
sti
jg
adc
cmp
mov
dec
sub
movs
pop
out
dec
aas
jmp
cmps
and
pusha
inc
cmps
mov
and
mov
addr16
sbb
xchg
xchg
sbb
sub
ficom
fdivp
jle
adc
lock
sbb
shr
mov
sub
(bad)
and
cmp
loope
lds
ins
pusha
cmc
ds
in
add
inc
scas
add
add
inc
cmp
mov
scas
aaa
dec
popa
enter
and
push
lods
daa
sub
xor
es
xchg
mov
ja
lea
in
or
repnz
lahf
jo
xor
jo
cmp
mov
jle
add
cmps
(bad)
out
ja
fisub
nop
cwde
shl
push
adc
jnp
out
push
fld
jae
cwde
movs
jmp
or
fdiv
cmp
mov
sbb
pop
es
rol
in
imul
adc
div
sti
adc
or
subps
daa
retf
fld
imul
mov
and
sbb
(bad)
mov
sar
(bad)
push
rcl
mov
cmp
(bad)
jbe
sub
sub
cmps
mov
cdq
or
pop
hlt
or
push
and
scas
mov
sar
shl
adc
movs
ret
fbld
hlt
sbb
push
mov
pop
push
sbb
cmp
es
daa
inc
adc
lods
imul
icebp
pop
ret
or
add
pop
pushf
sbb
faddp
scas
xchg
stc
inc
cmc
gs
lds
xchg
(bad)
mov
mov
rol
mov
xchg
inc
push
lock
aam
clc
push
inc
mov
xor
into
idiv
ret
pop
pop
sub
pop
or
add
dec
loop
push
sbb
aaa
adc
jg
pop
imul
sti
sti
pop
retf
mov
retf
ficomp
int
mov
add
inc
sbb
mov
jl
imul
pop
mov
add
inc
jg
dec
jbe
sub
jne
fsub
jmp
xchg
xchg
mov
jae
add
(bad)
into
(bad)
fsubr
cld
arpl
pop
pop
sub
scas
push
pop
(bad)
test
or
sub
aam
aad
add
pop
add
mov
ds
or
daa
sub
fs
cs
push
aaa
push
pop
pop
inc
std
jmp
test
data16
pop
mov
loopne
xchg
out
or
mov
push
fadd
jno
cdq
dec
shl
stos
loope
xchg
push
loopne
or
pop
out
xor
je
sub
push
xchg
data16
sti
xchg
arpl
jb
jns
mov
pop
retf
cmps
add
movs
jp
(bad)
xchg
xchg
in
(bad)
ins
cld
pushf
fs
mov
iret
nop
cmp
mov
ficomp
sbb
scas
cmp
mov
and
repz
call
shl
push
jecxz
lds
outs
push
mov
out
push
pop
ja
mov
loope
or
add
(bad)
movs
dec
loope
mul
and
cmps
adc
(bad)
in
xchg
mov
adc
gs
mov
add
outs
ins
movs
add
cmp
push
push
scas
mov
or
aaa
loopne
pop
(bad)
(bad)
adc
xchg
leave
idiv
jg
leave
push
cld
call
inc
outs
call
inc
inc
cmp
pop
fabs
cmps
test
repnz
jbe
and
jmp
or
retf
dec
mov
mov
rcr
mov
and
addr16
and
xor
jne
xor
test
mov
nop
cmps
fldenv
xchg
xchg
aaa
das
mov
xchg
call
rcl
ror
sub
(bad)
mov
mov
ret
fstp
and
jp
movs
xchg
jg
dec
jmp
push
aas
mov
imul
out
lods
not
mov
jno
sub
push
(bad)
cmp
cmp
sub
xchg
fs
sub
leave
adc
mov
retf
imul
fild
sahf
xor
xchg
stos
mov
push
pop
repnz
icebp
sbb
add
out
jo
add
mov
pop
push
mov
repnz
stos
xor
sbb
inc
div
xchg
or
inc
shl
cmp
push
jae
test
sbb
pop
xlat
cld
mov
mov
and
push
sbb
mov
sbb
int
mov
xor
dec
xchg
ja
dec
test
fadd
js
idiv
(bad)
in
mov
cmc
loop
add
int3
add
push
addr16
jp
mov
lahf
imul
push
sub
leave
dec
or
cmp
xor
ficom
push
lods
sar
lahf
cmp
xor
xor
dec
lds
or
pop
adc
scas
call
repz
cmp
loopne
mov
call
and
stos
jg
mov
in
dec
pop
mov
leave
ds
aaa
fdivr
sbb
mov
mov
mov
jg
call
add
mov
cmp
imul
inc
and
adc
shl
push
ins
sbb
inc
shl
xchg
sbb
mov
sti
iret
mov
jp
pusha
rol
mov
adc
mov
fcomip
and
stos
or
loopne
xchg
add
les
(bad)
mov
jp
dec
dec
in
mov
hlt
pop
jg
mov
add
loope
jle
add
jno
xor
out
mov
mov
(bad)
lods
gs
push
mov
sub
test
cdq
call
and
or
enter
neg
jne
mov
or
pop
aas
mov
jb
dec
fisubr
push
mov
jmp
jmp
mov
jne
popa
test
mov
enter
loop
rol
shl
jmp
dec
pop
nop
adc
add
(bad)
and
bound
dec
lahf
jno
xlat
in
or
pushf
cmp
mov
aam
daa
add
pop
pusha
(bad)
call
mov
push
outs
hlt
test
mov
pop
pop
pop
sbb
and
or
mov
cmc
les
ds
mov
das
stos
out
movs
add
cmp
outs
mov
test
mov
aam
cs
dec
push
adc
mov
xor
and
xor
lahf
cli
jnp
lods
outs
cmp
in
(bad)
mov
shl
jno
into
ret
inc
push
test
daa
mov
cmp
arpl
sti
or
dec
fadd
sub
addr16
out
mov
xchg
mov
loop
fwait
xchg
sahf
push
mov
loope
xchg
mov
ds
push
pop
imul
fcmovnu
lds
mov
retf
pop
push
int
rcr
xor
into
lds
add
xor
es
ja
mov
jge
mov
push
rol
dec
(bad)
aam
mov
mov
stc
dec
lds
dec
xlat
push
xor
xor
cli
cmps
inc
stos
mov
dec
(bad)
push
dec
ins
sub
sub
or
push
stos
cmp
cmps
arpl
movs
idiv
fidivr
adc
xor
jg
stos
pop
cmp
leave
or
outs
inc
push
rcr
les
(bad)
(bad)
in
push
xchg
sbb
sbb
retf
adc
imul
ror
mov
jne
mov
(bad)
test
gs
(bad)
xchg
mov
xchg
mov
movq
sub
push
sbb
das
cdq
ins
inc
jg
nop
sbb
fdivr
pop
daa
ds
adc
xor
mov
xor
xor
push
pop
xor
out
stos
add
pop
imul
cmp
pushf
push
pop
outs
pop
mov
popa
mul
cld
addr16
sbb
push
mov
mov
push
pop
cmps
(bad)
jl
jo
sbb
xchg
ficom
xchg
xor
mov
jnp
cmp
les
addr16
dec
jmp
push
push
shl
push
mov
xchg
or
jecxz
mov
imul
sub
retf
cmp
leave
jb
xor
xchg
(bad)
inc
adc
jno
jle
std
icebp
mov
xlat
adc
push
mov
je
sti
mov
arpl
jmp
ins
add
pop
out
dec
mov
push
pop
loop
mov
add
and
pop
adc
push
aam
or
ds
xchg
pop
mov
push
jg
inc
or
mov
cld
pop
mov
mov
adc
clc
in
mov
sbb
adc
xchg
jo
inc
jmp
mov
neg
mov
sti
scas
xchg
and
pop
loope
xor
jnp
jae
xchg
push
pop
mov
dec
lea
cmp
xor
iret
mov
and
push
lods
pop
jle
push
pop
daa
popf
push
jns
daa
clc
scas
inc
push
stc
lds
aaa
or
out
mov
movs
inc
arpl
or
cmp
sub
shl
sub
scas
cmp
mov
mov
xchg
lock
push
dec
cmp
(bad)
inc
push
(bad)
pop
retf
adc
fcom
xchg
stc
test
cmp
ss
mov
(bad)
mov
jne
dec
faddp
popf
lfs
xor
add
or
arpl
pop
out
jl
retf
dec
mov
jns
xchg
inc
add
push
pop
outs
mov
jmp
call
mov
jne
stos
push
out
mov
bnd
inc
mov
sub
loopne
fsubr
clc
cmp
sar
cs
call
inc
test
sub
or
cmp
shr
adc
retf
xchg
pop
in
rcl
adc
ror
jbe
xor
(bad)
clc
test
push
icebp
push
sbb
and
iret
out
movs
mov
and
in
jp
sbb
retf
push
sbb
pusha
lea
imul
cmp
mov
jl
mov
add
loop
cmp
sub
jmp
jg
(bad)
loopne
leave
add
jg
in
and
push
les
xchg
dec
daa
jbe
adc
mov
bnd
call
push
adc
jmp
bound
mov
in
sahf
mov
stc
xchg
jl
jmp
imul
xchg
sub
ins
into
jecxz
adc
aam
push
mov
xchg
adc
fdivr
inc
call
shl
(bad)
fadd
mov
adc
jae
ret
movs
mov
test
iret
shr
cmp
fs
int
out
pop
mov
xchg
pop
gs
js
test
jo
or
lods
shl
fsubr
jle
push
scas
pop
mov
dec
mov
jo
xchg
dec
push
fldcw
xor
inc
aam
dec
repnz
xor
sub
enter
popa
adc
or
outs
sbb
fisub
mov
cmp
add
add
std
mov
into
pop
jae
int
das
in
or
or
fld
push
pop
push
retf
cmps
or
loop
(bad)
push
lea
mov
rcl
or
mov
fisttp
imul
inc
retf
fild
cmp
or
jge
inc
js
adc
popa
cmps
fcom
movs
data16
imul
and
test
pusha
mov
push
cld
imul
sbb
out
cmps
loope
sbb
xchg
test
ins
sub
loopne
sub
ficomp
and
push
xchg
test
and
pop
popf
mov
mov
test
call
lods
(bad)
imul
mov
arpl
loopne
mov
mov
dec
xchg
add
xor
and
addr16
lahf
enter
call
inc
je
push
mov
mov
in
int
pop
sbb
xor
outs
(bad)
adc
fist
scas
jle
inc
add
cwde
cmp
mov
cmp
lahf
sbb
retf
dec
ds
push
sbb
jae
dec
sbb
sub
xor
popf
adc
pop
sbb
pop
mov
sub
ds
adc
mov
and
icebp
xchg
(bad)
jp
cwde
or
push
dec
mov
sti
loopne
mov
outs
inc
push
aad
rcr
xchg
xor
loop
cmc
ror
sub
(bad)
stos
retf
loop
dec
xor
push
cmp
nop
push
jg
fwait
adc
dec
add
pop
arpl
dec
cld
ins
cdq
push
aaa
mov
xor
cld
pop
xchg
inc
push
pushw
call
dec
jbe
pop
pop
push
adc
xlat
xor
stos
adc
and
adc
sub
push
lods
adc
sbb
or
aas
cld
xor
cmp
inc
into
icebp
lock
cmp
cmp
inc
jns
shl
cwde
push
ds
sub
pusha
jmp
stos
(bad)
aad
aad
dec
pop
adc
sbb
pop
jnp
aas
inc
xor
mov
fadd
mov
or
outs
or
iret
int
and
gs
pop
jmp
cmps
mov
adc
cmps
cwde
push
fistp
pop
shl
hlt
adc
mov
popa
pop
sub
dec
push
pop
inc
jmp
xchg
push
pushf
sti
in
mov
add
pop
ror
rcr
mov
jns
lea
add
leave
aad
xchg
rcr
push
je
add
repz
bound
enter
xchg
imul
test
fimul
jnp
test
fs
nop
jmp
js
aaa
or
sti
mov
and
dec
imul
(bad)
fwait
pop
test
cmp
stos
fisttp
lea
popf
add
xchg
push
push
cmp
push
icebp
jbe
(bad)
scas
xchg
cdq
ret
into
sbb
pop
push
jmp
xor
ficomp
jle
(bad)
sahf
or
es
dec
push
dec
pop
fild
push
push
push
and
mov
inc
mov
pop
pusha
add
fadd
imul
add
and
(bad)
jo
les
jl
aad
or
push
and
(bad)
adc
inc
xor
add
mov
fisubr
mov
pop
push
xchg
inc
jecxz
in
cli
loop
sbb
int
sub
sub
push
pusha
jns
retf
adc
cli
leave
jmp
mov
sti
outs
inc
mov
dec
or
mov
addr16
popf
je
push
inc
xchg
ins
add
popa
mov
bound
fcom
mul
push
(bad)
das
mov
jecxz
out
pop
xchg
sahf
hlt
(bad)
lds
out
ret
fld
ja
fidivr
in
leave
mov
retf
jnp
jbe
and
sub
jae
push
loope
dec
push
xchg
jmp
xchg
push
dec
push
scas
pslld
pop
sub
ss
push
pop
scas
jl
fldenv
mov
je
xor
out
scas
ja
in
pop
mov
jecxz
fsubr
pushf
cli
movs
sub
or
and
out
mov
jo
imul
mov
or
adc
loop
jne
sub
adc
pop
inc
push
sar
cmp
jl
pop
push
or
adc
retf
push
dec
dec
in
push
push
sbb
out
push
loope
xchg
ret
sbb
nop
ss
pop
cmp
sub
shl
xchg
pop
fst
adc
shl
retf
arpl
cs
int
mov
test
jb
iret
mov
call
push
scas
cmp
xchg
pop
mov
shl
push
sbb
ins
out
nop
int3
pop
mov
cmp
mov
lds
es
fdivr
inc
sti
dec
jb
mov
adc
or
dec
cld
inc
pop
ret
cdq
dec
dec
adc
or
or
jle
push
dec
dec
sbb
mov
and
shl
in
mov
sti
cdq
inc
inc
push
(bad)
ins
hlt
in
mov
into
imul
jae
cld
pop
sbb
sar
dec
or
pop
mov
ficom
loop
push
cld
mov
cld
out
outs
mov
mov
(bad)
sti
repz
mov
imul
fwait
add
mov
xchg
maskmovdqu
neg
pop
imul
push
adc
mov
sbb
shl
xchg
pop
cmp
jb
repz
repnz
in
add
cmc
cmp
xor
or
cmp
stos
retf
int
mov
mov
loop
int
and
xor
pop
(bad)
xchg
(bad)
inc
in
push
retf
(bad)
(bad)
stos
jns
(bad)
mov
inc
mov
mov
test
xor
cmp
movs
in
fild
jo
outs
lods
sti
aaa
and
adc
inc
or
mov
push
in
lds
iret
ret
push
(bad)
and
and
repz
or
in
in
mov
call
inc
mov
cmc
and
mov
movs
shl
out
popa
push
inc
or
sbb
sub
or
and
lds
push
cs
je
mov
inc
sbb
ds
jno
inc
in
cmp
shl
dec
or
push
mov
push
(bad)
pop
fnstenv
(bad)
out
jbe
ins
fstp
ret
outs
out
add
mov
inc
push
adc
in
or
fwait
mov
and
sbb
jne
cwde
bound
inc
mov
xchg
adc
jmp
mov
in
arpl
pop
call
inc
iret
inc
pop
xor
xor
push
sbb
bound
add
xchg
enter
or
inc
add
in
sub
outs
aad
out
inc
(bad)
xor
and
popf
adc
ffreep
paddb
aam
dec
xchg
inc
mov
stos
cdq
repz
or
xchg
std
movs
(bad)
xchg
push
mov
cmps
cwde
scas
jb
(bad)
mov
(bad)
fs
push
test
loope
push
inc
data16
call
shl
scas
add
shr
js
ror
mov
push
aaa
or
cdq
loope
mov
stc
dec
pop
adc
ds
shl
mov
add
(bad)
mov
add
dec
or
(bad)
adc
adc
out
dec
jns
mov
push
loopne
movs
cld
mov
inc
pop
xor
fdivr
in
arpl
jb
call
cmps
fst
lock
push
fisttp
jne
scas
fisttp
adc
push
or
fs
lods
push
cs
pop
cs
dec
sahf
daa
dec
je
mov
cs
popf
inc
sub
(bad)
or
push
add
into
xchg
and
test
add
pop
pop
inc
mov
adc
cmp
aad
dec
xchg
ja
rol
dec
cmp
outs
pop
in
or
int3
fiadd
cmp
pop
push
mov
mov
add
stos
int
scas
in
sbb
lods
scas
sahf
scas
xchg
pushf
enter
push
sub
ja
out
push
push
hlt
nop
je
dec
xchg
fwait
xchg
cld
bound
in
push
pop
sbb
movs
mov
jle
jns
add
jecxz
das
adc
push
inc
sbb
pusha
cmps
jl
mov
push
push
mov
inc
push
sbb
xchg
push
xlat
stos
push
sub
push
inc
mov
and
ret
inc
dec
mov
cli
jecxz
xchg
imul
xor
jo
or
addr16
pusha
xchg
movs
or
repz
and
std
push
hlt
sub
repnz
scas
ds
dec
adc
sbb
(bad)
or
(bad)
jae
(bad)
repnz
stos
pop
sti
cli
jmp
jl
dec
or
xchg
jcxz
mov
mov
daa
ror
xchg
sbb
retf
mov
lods
lahf
cmps
sbb
xchg
nop
sub
outs
dec
retf
add
js
mov
add
cmps
mov
pusha
(bad)
jmp
sub
pop
or
in
(bad)
mov
stos
lea
(bad)
retf
movs
repz
dec
cmc
or
pop
retf
push
shl
aas
push
jb
sbb
shr
mov
sub
shl
(bad)
sti
test
push
push
adc
mov
mov
push
mov
jmp
xchg
pop
sahf
fidiv
mov
mov
push
retf
test
mov
sti
ins
addr16
aaa
cmps
sub
mov
dec
or
xor
xchg
mov
mov
mov
push
xlat
xchg
(bad)
aas
(bad)
sbb
push
add
mov
int3
xor
cs
fisub
out
pop
das
jae
and
psrad
mov
add
pop
sbb
into
pop
inc
retf
dec
sbb
jp
lahf
xchg
rcl
leave
sub
and
retf
xchg
xlat
push
xor
fld
dec
or
and
icebp
pop
lods
xor
inc
push
add
lea
xor
inc
ss
sub
cmp
stc
pop
inc
xchg
push
pop
fs
sar
sbb
sub
imul
cmps
retf
sub
or
or
adc
int3
movs
mov
int3
sahf
popa
test
fnstcw
dec
ins
daa
aam
cmps
mov
mov
call
dec
or
push
out
jo
into
test
enter
push
mov
ror
lea
fstp
xchg
dec
xor
and
cdq
mov
pop
out
sub
adc
adc
or
stos
inc
aas
icebp
cmp
cmps
idiv
adc
inc
cmp
or
add
pop
jmp
or
mov
pop
aas
cli
in
jns
pop
fisttp
lahf
aas
sbb
sbb
leave
inc
push
fcomp
(bad)
mov
ins
mov
(bad)
bound
fwait
cld
pop
mov
idiv
jle
and
inc
mov
cmp
jg
push
fs
(bad)
mov
sti
movs
dec
inc
aad
aas
or
push
in
fidivr
popf
out
(bad)
rcr
dec
add
pop
xchg
jb
movs
loope
push
and
mov
ss
adc
cli
and
mov
and
mov
pop
das
or
sub
cmp
stos
or
mov
xor
and
cdq
sbb
lds
sbb
mov
ret
mov
or
jnp
int
push
jno
jb
sti
in
inc
push
in
les
or
mov
ficom
cmp
(bad)
fwait
jle
xor
xchg
scas
jns
mov
and
arpl
in
mul
fsubr
cli
jnp
daa
fwait
or
cmp
mov
mov
add
mov
in
imul
sub
or
adc
xchg
and
add
bound
sub
add
cli
pop
jl
dec
popf
sub
mov
ins
movs
lods
cmp
sub
push
(bad)
mov
push
lods
ficomp
xchg
aas
cs
add
fxch
test
mov
adc
adc
je
sbb
jo
sar
push
mov
call
cmp
std
in
loope
xchg
lds
lea
or
cmp
pop
and
push
icebp
jecxz
(bad)
add
mov
fldcw
dec
mov
dec
fmul
test
pop
xlat
cmp
push
ja
repz
cmps
and
gs
adc
sbb
inc
mul
cmp
bound
and
sub
fstp
sub
sahf
mov
push
or
cdq
push
mov
mov
cmp
mov
mov
(bad)
jmp
retf
(bad)
xchg
mov
ins
jne
shl
out
jbe
add
mov
pop
xor
cmp
movs
or
in
aas
mov
(bad)
xchg
mov
movs
mov
cmp
icebp
repz
mov
leave
xor
jo
daa
jp
xchg
out
fadd
xor
cmp
mov
pop
inc
lods
retf
imul
and
xor
out
xor
add
mov
push
es
out
pop
add
or
call
cmc
mov
push
pop
cmp
and
(bad)
cmps
(bad)
aaa
movs
movs
stos
cs
push
(bad)
mov
cmp
nop
jp
mov
repz
push
mov
cmp
xchg
jnp
jo
or
retf
mov
push
aaa
lods
inc
sbb
mov
mov
pop
rcl
sbb
das
std
dec
retf
dec
push
jb
xor
movs
outs
test
ret
jecxz
push
test
aam
fiadd
inc
pop
clc
cmps
fidivr
inc
sub
(bad)
into
dec
mov
loope
cs
mov
mov
mov
add
ret
fucom
xchg
jmp
sub
mov
rcr
gs
fisub
sti
pop
lods
pop
adc
in
jae
dec
sahf
adc
sbb
fwait
and
xchg
iret
cmp
loope
add
fisubr
xchg
movs
fisub
out
(bad)
into
addr16
je
rcl
push
mov
(bad)
cld
xor
cwde
lods
daa
mov
test
dec
xlat
and
sub
xchg
or
enter
fs
out
sub
jne
xchg
jle
jp
pop
cmp
xlat
mov
icebp
(bad)
int
xor
mov
pmaddwd
mov
fdivr
lds
mov
out
loop
fdiv
push
in
mov
cld
lock
stos
jecxz
mov
and
adc
jne
sub
aaa
nop
and
pop
mov
icebp
jbe
lods
cmp
sub
in
sub
inc
push
popf
es
lds
jp
sub
xchg
jmp
or
adc
sub
call
sub
or
xchg
sub
mov
sbb
jo
xor
lods
xchg
call
bswap
call
sbb
push
inc
iret
inc
mov
les
sti
test
xor
aaa
cmp
int
mov
xchg
cwde
pop
push
mov
mov
or
adc
div
sub
ds
add
and
xor
idiv
mov
xor
fild
frstor
xchg
sub
push
jl
push
mov
sub
test
and
imul
loopne
add
js
pop
or
dec
dec
mov
lds
(bad)
div
sub
in
lds
aam
mov
imul
scas
sbb
cld
imul
sti
xchg
mov
dec
dec
add
xchg
retf
push
dec
cwde
in
out
cmp
mov
add
push
jbe
cwde
push
jge
adc
ss
mov
rol
in
cmp
imul
lahf
add
in
push
aam
stos
and
ins
mov
push
enter
dec
xor
stc
lds
jo
push
popa
ret
cli
pop
pusha
shl
pop
call
ins
xchg
shr
cdq
xor
sub
push
(bad)
in
in
mov
call
(bad)
pop
adc
inc
mov
sub
es
cwde
call
imul
lea
push
ss
ret
shl
test
test
shl
xor
lahf
mov
pop
or
jge
sbb
mov
bound
mov
mov
int
pop
hlt
push
mov
fisubr
sbb
out
add
sbb
int3
push
mov
ror
mov
xor
shl
pop
mov
mov
es
pinsrw
aam
repz
sbb
dec
inc
jne
pop
adc
es
or
jb
add
cmp
xchg
xchg
mov
stc
mov
in
and
xchg
mul
pushf
xchg
cmp
lods
div
pop
and
out
and
push
stc
popf
fnsave
jle
jecxz
mov
add
shl
and
leave
fucom
dec
pushf
sbb
in
arpl
retf
mov
pop
and
xchg
adc
cmp
pop
sub
ins
mov
mov
jmp
xchg
dec
int
int3
mov
sahf
adc
loop
dec
mov
mov
add
cld
dec
cmp
jecxz
stos
test
fdivr
aaa
xor
jns
loopne
mov
inc
fdiv
sbb
push
xchg
loopne
jnp
test
xlat
and
xor
or
xchg
ds
mov
(bad)
sbb
aad
dec
jge
mov
adc
btc
cmps
test
les
setno
jae
hlt
dec
adc
cmp
mov
pushf
cmp
cmp
xlat
sub
stos
ss
movs
xor
nop
mov
dec
in
xor
adc
push
mov
and
imul
cmp
leave
xchg
cmp
cmp
adc
push
push
and
test
cwde
scas
xchg
ret
inc
int3
aad
xchg
and
mov
push
ins
clc
jno
dec
push
mov
js
ins
lahf
popf
mov
add
hlt
lea
jmp
nop
push
rcl
mov
add
cmp
sbb
and
int
shl
xor
jo
push
fs
loop
nop
movs
lods
fisttp
into
cmp
push
fmul
xchg
inc
arpl
enter
fxch
out
sub
stc
out
jno
test
loop
fist
call
jmp
loopne
ror
cmp
sbb
fcmove
push
mov
dec
test
mov
mov
jl
test
retf
and
pushf
stos
or
in
les
ss
jp
inc
mov
(bad)
dec
nop
mov
out
add
shr
jmp
(bad)
pop
movs
sbb
inc
(bad)
js
inc
xchg
sbb
mov
jg
movs
leave
mov
out
jge
clc
jmp
(bad)
mov
and
mov
mov
loopne
sahf
nop
push
addr16
movs
xor
sahf
xchg
mov
mov
loopne
ss
or
jmp
inc
pop
ror
jmp
enter
push
loopne
outs
loopne
pop
jecxz
xchg
pop
call
mov
enter
inc
adc
dec
loopne
mov
arpl
xchg
mov
fistp
jp
cld
jmp
inc
pop
push
int3
int
mov
bound
xchg
clc
jp
fstp
popf
pop
lods
mov
push
loopne
in
les
mov
xchg
add
mov
rcl
std
int3
xchg
xchg
imul
push
loopne
jle
leave
call
test
xchg
data16
jmp
idiv
jle
out
lea
pop
push
in
mov
movs
pop
repnz
jb
mov
stc
cs
mov
lds
frstor
pop
adc
pushf
arpl
add
push
mov
adc
popa
or
xchg
push
inc
cwde
fwait
mov
loop
mov
push
add
jl
sti
and
xor
nop
mov
test
out
push
xor
or
(bad)
cwde
fstp
hlt
inc
out
xchg
mov
lods
sbb
xchg
mov
xchg
in
pop
loope
int3
stos
or
jb
cmc
in
push
test
cli
push
fadd
inc
cmp
xlat
mov
mov
mov
ret
or
call
repz
xor
(bad)
inc
or
adc
inc
outs
out
and
mov
add
imul
into
adc
jae
in
lods
cld
and
mov
aas
xchg
(bad)
outs
in
pop
lods
cld
mov
pop
loop
imul
pop
popf
movs
mov
push
shr
mov
ss
push
(bad)
aad
or
popa
sub
push
movs
adc
js
push
lldt
mov
pop
push
in
pop
sti
ret
jecxz
sub
jb
cli
jle
(bad)
and
jne
stos
out
jge
(bad)
in
pop
mov
sub
fimul
jge
xchg
call
(bad)
pop
adc
retf
icebp
and
sbb
ins
push
cmp
sbb
mov
jo
dec
enter
lods
into
xor
cwde
sbb
jg
cmps
lods
pop
inc
xor
hlt
sub
pushf
loope
jmp
sbb
pusha
dec
push
mov
test
movs
jb
jge
jnp
les
dec
out
test
pusha
cli
jns
loop
mov
loope
repz
adc
mov
popa
push
add
add
call
dec
or
(bad)
jge
cmp
add
gs
(bad)
out
call
int
fwait
xor
adc
and
jb
nop
push
(bad)
(bad)
out
xchg
xchg
scas
popa
sahf
hlt
pop
jle
mov
cmp
outs
cwde
push
cmp
(bad)
fmul
fmul
xchg
jo
mov
jmp
add
push
mov
or
sbb
sbb
fstp
push
jb
test
std
ret
cs
fabs
xor
xor
inc
xchg
push
pop
out
js
ficom
scas
dec
add
sub
(bad)
leave
lods
clc
cli
mov
into
les
test
mov
mov
xchg
sahf
sahf
dec
pop
fwait
dec
sbb
mov
mov
pop
push
xor
add
jl
ins
jns
adc
js
mov
imul
aad
mov
fcom
stos
adc
stos
sub
inc
pop
shl
jae
mov
nop
jle
test
mov
loope
pusha
fiadd
cmp
int3
data16
loop
mov
call
push
ja
mov
enter
int3
mov
ins
cs
sub
sbb
mov
arpl
jnp
push
sar
push
test
mov
jle
sub
fstp
xor
and
add
loopne
add
scas
fistp
test
test
(bad)
or
gs
sbb
cwde
test
outs
les
xor
mov
pushf
repz
ds
sub
xchg
ret
out
and
pop
pushf
nop
xor
(bad)
div
push
out
adc
xor
imul
pop
and
clc
jb
ficom
ror
ret
das
jecxz
jb
call
mov
lods
ret
xchg
(bad)
dec
jmp
lahf
add
(bad)
clc
adc
sub
shl
pop
jne
inc
(bad)
into
jo
ds
inc
icebp
mov
les
cmp
jl
and
imul
pusha
in
push
sub
add
push
(bad)
gs
push
jg
cmp
add
repnz
mov
aam
call
push
daa
js
outs
sub
out
and
stos
lea
sub
test
test
jae
jb
je
nop
aas
or
call
mov
je
xor
or
out
test
cdq
data16
test
scas
jo
push
push
add
jmp
(bad)
(bad)
ins
or
sbb
dec
add
xchg
fist
push
nop
sub
loope
jmp
xor
call
inc
inc
fdiv
movs
int
rcr
cdq
daa
add
jp
sub
mov
dec
sub
add
cmp
mov
mov
mov
jl
lock
hlt
adc
ret
mov
shl
cs
xor
mov
jo
shr
xor
pop
sub
push
ins
mov
imul
cmps
fcomp
je
gs
xchg
or
mov
imul
xor
sub
rcr
mov
mov
(bad)
cli
fisubr
pop
test
leave
fs
dec
stos
(bad)
in
outs
dec
pusha
aam
mov
mov
sbb
sbb
xchg
sbb
bound
fidiv
pusha
dec
addr16
sub
xchg
aad
jo
xor
pop
loope
inc
xor
pop
stos
jne
test
jns
movs
mov
(bad)
xlat
pop
movs
jo
and
dec
push
mov
call
dec
cwde
in
mov
sbb
test
mov
adc
cmp
fs
jp
jne
push
popf
xor
jmp
ror
adc
sbb
ins
ds
idiv
test
dec
mov
or
out
sub
jns
xor
imul
es
ret
push
xor
cmp
jbe
xchg
inc
cld
xchg
stos
(bad)
jle
fwait
enter
push
sbb
ficomp
mov
xchg
adc
mov
fidiv
jns
pop
xchg
mov
adc
int3
and
inc
adc
addr16
popa
jecxz
cmc
or
xor
repnz
stos
cwde
stos
inc
mov
inc
or
adc
ins
cmc
aad
lahf
pusha
test
out
cs
in
jp
pusha
fs
shl
fld
pop
int3
pop
push
shr
js
out
or
jae
ins
xlat
int
or
push
jge
mov
lods
lock
fnstsw
xor
arpl
jle
jne
mov
sbb
cld
repz
or
cwde
out
movs
shl
push
mov
dec
inc
shl
jg
fwait
aaa
int3
fiadd
int
xor
jo
mov
int
xchg
sub
ss
mov
inc
pop
mov
(bad)
mov
jns
mov
dec
pop
pop
xlat
or
enter
mov
adc
test
xchg
inc
mov
(bad)
push
ds
inc
jmp
fnstcw
mov
sub
push
out
repnz
call
sbb
hlt
inc
mov
xor
mov
xor
pop
mov
push
gs
jg
mov
jmp
ret
test
clc
sbb
fs
call
fistp
add
cdq
xchg
ins
jge
pop
push
push
adc
cmp
mov
into
pop
push
jbe
xor
ins
std
xchg
cmp
in
in
sub
jbe
ss
loope
ret
pop
xor
in
sbb
popf
fimul
mov
test
shl
mov
jnp
je
das
pop
fidiv
cmps
pop
and
xor
outs
jp
je
jo
or
into
jp
out
mov
xchg
xchg
xor
jp
add
and
jnp
jb
xor
shr
mov
mov
adc
jo
pop
imul
retf
mov
retf
dec
inc
push
adc
pop
ins
nop
sti
pop
ss
test
xchg
dec
les
cs
push
lds
mov
cs
dec
sub
push
aam
cs
out
adc
xor
xor
jge
push
scas
fld
(bad)
mov
mov
cdq
xchg
mov
add
cmps
test
call
mov
adc
adc
gs
stc
lds
mov
adc
and
xor
mov
fld
scas
dec
popa
jno
cmp
mov
mov
cli
mov
leave
pop
adc
inc
lds
sahf
cmp
sbb
rol
or
fwait
cmp
fistp
(bad)
not
xor
arpl
mov
add
es
xchg
ror
push
fidivr
adc
mov
cmp
or
mov
or
(bad)
jne
sub
sar
add
fiadd
in
mov
mov
dec
leave
cli
push
leave
fs
ins
jns
lock
inc
js
jge
or
test
and
cld
shr
jae
fs
(bad)
iret
mov
cmp
loop
inc
mov
daa
jp
das
xchg
dec
or
mov
or
xor
inc
in
retf
fisubr
test
cmp
rcl
push
fiadd
xor
cmps
mov
ret
das
nop
xchg
push
mov
stos
das
bound
pop
movs
inc
push
or
call
je
js
jp
mov
mov
dec
sbb
gs
or
push
push
icebp
mov
hlt
shl
popf
xchg
mov
lods
sbb
sbb
shl
jns
xlat
stos
xchg
mov
leave
cmp
or
and
jp
fiadd
mov
push
ins
mov
popf
outs
jl
sti
mov
fadd
mov
aas
sbb
(bad)
mov
dec
cmp
popa
movs
pusha
adc
cdq
sub
lods
or
xchg
pop
nop
loopne
mov
fnstcw
mov
push
not
dec
sub
mov
mov
pop
fwait
rcr
popf
pop
int
in
sub
inc
(bad)
sbb
cld
mov
in
(bad)
push
jl
dec
mov
sbb
and
aas
mov
push
rcl
imul
sub
jmp
movs
mov
(bad)
loopne
ins
xchg
and
lods
cwde
mov
xchg
sbb
sub
out
xor
jae
mov
cmps
repnz
inc
loop
mov
cwde
and
add
inc
adc
push
lods
fild
sub
scas
cmc
dec
cmp
in
std
dec
inc
inc
mov
xlat
not
fs
mov
cmp
jbe
(bad)
aas
mov
sbb
cmp
dec
dec
jecxz
sub
sub
shl
int
out
movs
in
jmp
hlt
lea
adc
cmc
xchg
into
into
xor
scas
mov
add
and
mov
outs
mov
mov
pop
or
mov
inc
lods
jge
test
mov
inc
sbb
mov
cs
aam
out
pop
call
mov
xchg
fld
lods
sbb
xchg
test
xchg
inc
jecxz
dec
and
ret
cld
dec
or
xor
dec
das
stos
scas
cmp
add
jns
(bad)
shl
mov
cmp
movs
cmp
lea
inc
loope
cmps
or
outs
pop
sbb
mov
sbb
and
ja
and
push
fucomip
out
fcmovbe
cmp
and
dec
ret
ds
mov
xchg
inc
dec
popf
test
or
(bad)
push
in
out
imul
movs
pop
adc
mov
(bad)
mov
imul
imul
(bad)
arpl
mov
add
mov
xchg
inc
adc
or
jno
xor
pop
or
jnp
sub
(bad)
sub
fwait
(bad)
fdivr
add
xchg
(bad)
pop
mov
push
adc
cs
(bad)
jecxz
xor
push
add
pop
or
mov
mov
push
inc
sbb
pop
cmc
mov
call
sbb
dec
ja
cmp
adc
cmp
pop
add
jg
jle
xchg
daa
add
jge
xor
jp
add
sub
movs
add
inc
mov
jecxz
stc
push
sbb
cdq
jno
int3
xchg
test
fadd
maxps
sub
sub
or
fidivr
fld
clc
or
(bad)
or
adc
in
dec
in
push
push
cmps
push
movs
call
pop
mov
retf
pop
aas
dec
push
adc
sbb
xchg
and
mov
sbb
xlat
jns
data16
ror
xchg
mov
sub
and
dec
mov
(bad)
and
int3
cwde
mov
arpl
push
inc
mov
mov
fdivr
hlt
or
repz
(bad)
out
call
in
mov
jne
(bad)
jl
cs
sub
popaw
outs
adc
or
outs
dec
or
inc
xchg
mov
xchg
xchg
jge
dec
test
mov
fild
in
aad
popf
push
mov
fcomp
push
jbe
lea
call
add
cmp
jbe
add
in
pop
push
jecxz
sub
pushf
mov
dec
pop
pop
or
fiadd
shr
xchg
repnz
pop
push
mov
mov
rol
xchg
fild
icebp
mov
mov
pop
std
pushf
sub
push
ins
js
xor
gs
jp
jl
xor
xchg
jns
push
sbb
stos
hlt
cwde
and
clc
ss
and
sub
lods
addr16
scas
mov
xor
cmp
stos
add
xor
repz
rol
je
push
in
sub
push
xchg
mov
xor
in
and
mov
cmp
xor
shl
or
scas
aam
addr16
in
xchg
sbb
sar
cwde
mov
jmp
mov
sub
xor
dec
dec
add
add
xchg
rcr
pop
adc
pop
add
aam
loopne
mov
mov
popf
aas
js
mov
cmps
mov
or
pop
mov
fistp
mov
not
push
jl
mov
pop
or
daa
fstp
inc
sub
push
lds
inc
mov
dec
leave
and
jne
adc
sub
push
popa
ins
xor
popa
or
fs
int3
push
cmp
loopne
fs
mov
xor
xchg
jecxz
repz
sbb
sub
xchg
outs
(bad)
(bad)
sub
jge
mov
jo
push
addr16
int
sub
and
stc
in
jbe
jmp
and
pop
aas
arpl
mov
bound
outs
adc
jmp
mov
mov
ins
add
out
rol
fsubr
es
fs
push
into
out
es
mov
jns
sbb
adc
je
rcr
dec
je
mov
xor
jno
icebp
lods
pop
push
pop
not
mov
iret
cmps
adc
mov
(bad)
sbb
push
or
call
shr
jmp
fdiv
enter
dec
nop
mov
out
xor
retf
sbb
stos
popf
add
imul
xor
or
pop
inc
cmp
mov
mov
inc
std
mov
out
(bad)
out
fcmovnb
or
and
ror
or
xchg
test
loopne
inc
pop
jl
push
fwait
xchg
and
jg
push
mov
mov
push
mov
xor
retf
cmc
enter
mov
cwde
adc
js
rol
dec
cdq
mov
add
adc
dec
ror
mov
cmp
je
dec
cli
fwait
inc
sub
inc
pop
test
mov
test
scas
outs
es
xlat
ret
fwait
and
mov
jecxz
mov
stos
pop
lods
jl
js
sub
jb
repnz
jns
mov
test
and
lock
mov
(bad)
sub
adc
jp
lock
ins
aaa
dec
jno
jne
add
aas
xor
js
mov
stc
mov
fild
dec
cmp
xor
pusha
push
dec
in
inc
fs
add
pop
push
xchg
mov
pop
adc
mov
popa
cmc
stc
fisub
clc
push
push
dec
cdq
mov
mov
sbb
jg
xchg
fidiv
xlat
pop
fwait
leave
mov
and
mov
out
out
mov
stos
fsub
imul
cld
mov
pop
jg
int
mov
sub
js
jo
mov
adc
mov
jns
clc
jb
add
sub
push
xchg
mov
nop
or
jmp
sub
(bad)
(bad)
pop
loopne
xor
cdq
jns
aaa
mov
icebp
out
pop
outs
jle
mov
sbb
mov
adc
dec
loop
jle
test
loopne
or
arpl
cmps
pop
loope
aas
jo
fwait
leave
jo
sub
repz
lea
mov
ss
scas
sar
pop
and
and
test
pop
in
inc
mov
push
mov
ja
push
cmps
mov
lea
mov
add
adc
adc
repnz
pop
sahf
mov
cmp
icebp
outs
fs
(bad)
test
repz
or
pop
out
(bad)
push
int3
adc
out
xchg
cld
pop
aaa
push
mov
jne
pushf
jno
sub
sub
sub
xlat
add
fs
xlat
jae
mov
cmp
cmp
loopne
push
inc
ins
in
adc
cmp
inc
xchg
int3
cs
xor
jmp
into
xor
sbb
or
xchg
cmp
adc
das
lods
es
(bad)
mov
or
xor
(bad)
adc
fwait
mov
(bad)
cdq
inc
cmp
neg
xor
pusha
sub
mov
cli
rcl
xchg
push
cmp
ss
xchg
xchg
out
cmp
and
shl
sbb
stc
je
mov
test
ja
rol
mov
loopne
movs
and
call
sub
(bad)
push
add
lds
(bad)
sahf
add
in
mov
inc
jno
adc
dec
sub
sub
retf
mov
pop
imul
clc
add
or
pop
adc
cmps
cmp
or
push
xlat
mov
(bad)
mov
cmp
stos
in
mov
adc
dec
sbb
jge
mov
loopne
aaa
xchg
sahf
xchg
xchg
push
in
dec
mov
sbb
jno
std
in
call
jge
(bad)
xchg
gs
cmp
fistp
fwait
loop
icebp
dec
cmp
push
cs
xlat
xchg
fidivr
js
or
aad
push
mov
pop
cdq
imul
cs
and
mov
ror
inc
push
ja
pop
outs
fwait
push
into
(bad)
push
icebp
mov
das
xchg
fadd
idiv
mov
mov
mov
out
dec
push
dec
dec
mov
data16
(bad)
int3
sub
in
test
add
add
ja
(bad)
mov
mov
cmp
mov
jns
fcmovb
or
stos
jae
sti
pusha
stos
pusha
fucomip
lahf
add
add
push
mul
iret
mov
mov
lods
pop
mov
leave
(bad)
retf
jbe
add
lahf
jo
push
ja
xchg
inc
ins
push
dec
push
mov
(bad)
mov
repz
add
and
in
push
sbb
pop
jb
adc
xchg
div
cmps
jp
imul
sar
int3
mov
pop
xor
sub
inc
sub
pop
inc
daa
scas
fs
mov
jg
mov
add
repnz
inc
jb
dec
lods
mov
test
push
add
jmp
enter
(bad)
int3
fdivr
out
xchg
add
adc
or
loopne
cmps
pop
test
mov
ret
fld
pop
outs
imul
push
mov
sbb
hlt
push
and
fnstenv
(bad)
lock
push
ins
mov
movs
shl
cmp
aas
push
xchg
add
jle
cmp
and
cmp
cmp
dec
call
mov
fcmovb
lock
sbb
ins
and
das
xlat
xchg
pop
push
add
add
mov
lahf
jae
push
jmp
pop
mov
cld
lods
sbb
inc
sub
pop
xchg
lods
shl
sbb
adc
sub
mov
inc
add
add
pop
mov
mov
mov
add
test
fadd
stc
call
imul
pop
pop
pop
dec
data16
ins
call
enter
mov
rcl
call
and
mov
push
loopne
jo
sbb
xor
xchg
cmp
out
outs
push
(bad)
stos
jl
mov
xor
out
movs
(bad)
pop
retf
dec
ret
test
ss
mov
push
or
cmps
cmp
jne
dec
pop
mov
mov
(bad)
loopne
ror
add
jae
fimul
xchg
fsub
fisubr
or
sub
sbb
cs
test
in
test
test
xlat
mov
in
jns
sti
inc
bound
mov
xchg
jo
and
xor
jb
mov
sar
cmp
adc
aaa
jae
push
ins
and
imul
jp
adc
pop
fldenv
mov
sti
or
(bad)
jge
fmul
jnp
out
neg
pop
mov
daa
dec
mov
xor
je
xor
js
shl
sbb
push
pop
ds
leave
adc
or
call
in
dec
xor
push
std
popa
popf
test
adc
add
pop
adc
sbb
iret
mov
push
sbb
loopne
ficomp
mov
dec
les
xchg
les
mov
cmp
dec
mov
xlat
fldcw
dec
stc
inc
pusha
mov
out
sahf
lea
mov
es
and
std
and
pop
xchg
xchg
cwde
stos
cld
movs
lock
ret
or
pop
dec
sbb
sbb
mov
in
nop
xchg
jg
pop
sub
add
sub
mov
scas
xchg
movs
push
mov
into
mov
push
nop
aam
repnz
cwde
sahf
cmps
mov
mov
pop
mov
jg
in
mov
xchg
ret
fisttp
sub
cmp
mov
pop
(bad)
jmp
das
mov
fisubr
and
fadd
pop
lods
(bad)
shr
mov
int
add
cmp
sub
mov
addr16
hlt
push
add
outs
pushf
into
call
and
repz
jmp
sti
pslld
fs
addr16
retf
jb
pop
call
stc
scas
pop
cli
sub
add
test
(bad)
lahf
push
shr
sbb
popf
xor
jecxz
jo
xor
pop
imul
mov
dec
mov
test
(bad)
mov
ror
frstor
jmp
mov
imul
retf
pop
rcr
push
sub
gs
cdq
call
icebp
xchg
shl
jb
scas
lock
stos
gs
clc
js
or
xchg
retf
test
jmp
add
shl
jge
(bad)
and
sub
mov
aam
js
and
mov
mul
cli
inc
push
bts
int3
fwait
ret
adc
call
ss
mov
arpl
mov
retf
cwde
cmps
in
mov
in
fwait
sub
mov
push
pusha
dec
into
mov
daa
(bad)
or
into
add
cmp
loop
inc
or
loopne
or
rol
push
das
push
dec
pusha
and
int3
data16
fimul
cmp
mov
repnz
mov
in
call
push
jns
add
movs
enter
jge
imul
or
pushf
cdq
sub
js
neg
mov
scas
mov
mov
mov
push
push
xchg
mov
and
push
pop
dec
rcl
xor
test
cmc
and
sahf
in
dec
pop
cmp
sbb
ins
test
iret
xor
cmp
push
push
fmul
ror
inc
inc
mov
pop
hlt
in
inc
es
fdivr
jmp
and
aaa
sahf
sub
ja
mov
mov
mov
cmps
loop
fstp
jmp
lea
sbb
add
add
xor
xor
leave
push
push
in
mov
fstp
pop
fidivr
in
mov
push
int3
leave
inc
add
mov
add
stc
inc
mov
adc
adc
rcr
mov
imul
dec
lock
adc
ret
gs
cmp
sub
shl
inc
and
pop
dec
mov
lea
cld
sti
enter
xor
adc
cmps
adc
inc
mov
push
or
dec
mov
(bad)
fcomp
mov
arpl
or
hlt
aas
pop
jns
mov
data16
pop
cmp
daa
adc
call
imul
and
es
(bad)
mov
int
pop
sub
rcr
sub
adc
dec
mov
std
mov
jne
sbb
sbb
or
adc
add
push
nop
jge
cmc
pop
dec
nop
lahf
add
movs
lahf
mov
inc
fild
rcl
inc
mul
or
and
pop
std
cmp
adc
cwde
inc
push
or
cmp
stos
and
pop
push
retf
cwde
loopne
mov
ins
enter
(bad)
popf
and
push
mov
(bad)
ss
cmps
xchg
mov
js
lock
div
(bad)
mov
fs
and
inc
adc
adc
dec
and
xchg
inc
fs
push
or
or
fidiv
rcr
mov
jg
imul
lea
adc
and
dec
inc
push
dec
(bad)
scas
cld
aam
mov
and
xor
lock
loope
xor
imul
push
mov
(bad)
inc
call
jge
dec
sbb
xor
mov
adc
mov
jns
shr
jp
mov
out
out
jge
sbb
jne
out
scas
fs
cli
xchg
cmp
mov
cwde
and
pop
out
repnz
pop
jmp
pop
ins
pop
jb
jg
sbb
cmp
add
(bad)
jmp
fs
push
jb
dec
das
add
jbe
lea
xchg
inc
(bad)
jge
fcom
stc
pop
in
adc
cld
jne
movs
xchg
rcl
cmp
mov
mov
pop
lods
jge
jge
rol
sub
lods
pop
loop
xor
inc
scas
dec
cdq
in
jmp
ror
add
fstp
jp
daa
mov
pop
(bad)
push
loope
mov
mov
xor
push
bound
movs
or
push
pop
jmp
add
hlt
test
adc
mov
pop
mov
xchg
xchg
lea
out
jb
adc
inc
xor
inc
ret
sbb
cmp
ss
nop
fiadd
xor
iret
push
cmp
outs
xchg
ss
jb
and
xor
dec
mov
push
(bad)
jl
loop
(bad)
stc
pop
pop
ror
dec
add
rol
push
pushf
adc
pop
ss
jb
jge
mov
mov
mov
into
mov
repz
fisub
dec
loop
fwait
sbb
(bad)
pop
scas
pop
or
jnp
jmp
out
push
jb
pusha
call
pop
add
das
or
in
jge
cs
pusha
lods
inc
test
int3
push
sub
sub
lock
sti
pushf
cmps
pusha
daa
mov
pushf
ins
mov
inc
push
cmp
cmc
fdiv
xchg
pushf
dec
daa
int
push
add
add
add
adc
mov
sbb
cmp
scas
mov
ins
cli
sub
push
scas
fcmovnbe
(bad)
into
inc
pop
or
jb
icebp
mov
sbb
dec
jecxz
repz
mov
mov
sub
test
lods
shl
clc
idiv
fild
or
push
sti
jg
fsub
dec
mov
cmp
mov
sbb
out
in
lods
pop
pop
mov
jne
enter
dec
arpl
mov
push
ins
mov
sbb
in
cli
aaa
jl
je
mov
jl
data16
xchg
or
call
retf
adc
gs
jnp
bound
mov
push
pop
stos
mov
pop
out
cmps
scas
jnp
ins
in
test
pop
sbb
lahf
push
(bad)
hlt
sar
push
adc
aaa
aad
scas
xchg
aad
shl
not
xchg
mov
and
ss
rcl
push
xchg
nop
pop
ret
jo
ficomp
jmp
js
cdq
mov
sub
aas
jae
nop
sub
cwde
fidiv
stos
jp
scas
sub
cmp
leave
into
jg
es
xchg
clc
lods
push
std
daa
cmps
cdq
adc
mov
mov
sbb
out
xchg
jp
mov
inc
jns
pop
leave
aaa
cmps
mov
xchg
xchg
xor
mov
push
fdivr
fdivr
sub
ret
(bad)
sbb
sub
data16
jae
jb
loope
jmp
ucomiss
loope
and
popa
push
dec
aam
stc
aas
and
or
out
lock
add
adc
imul
push
cmp
dec
leave
xor
xor
sub
cmp
mov
(bad)
out
jecxz
in
inc
hlt
repnz
add
stos
push
repz
setl
sub
pop
sar
sub
push
mov
add
mov
add
ret
ins
push
push
ins
add
pop
dec
inc
xor
and
mov
mov
push
mov
and
adc
sub
cmps
(bad)
lods
sbb
pop
ror
adc
inc
adc
cs
push
test
mov
mov
adc
clc
push
jmp
push
jmp
fst
sub
aas
xchg
push
das
pop
fdivr
xor
sub
imul
inc
mov
int
xor
pop
pop
data16
nop
inc
xor
sbb
mov
lea
adc
mov
int
inc
rcl
je
xchg
jb
pop
push
xlat
xor
sub
dec
shl
and
xchg
and
lods
add
jp
adc
xchg
mov
js
cmp
fist
outs
jge
xchg
mov
sub
sbb
dec
ds
repz
out
inc
inc
shl
div
dec
pop
inc
push
sbb
jg
add
stos
cmps
add
sub
push
mov
popf
out
mov
push
jmp
outs
xor
int3
cdq
shl
inc
out
fcomp
xor
pop
enter
leave
pop
jne
xchg
xlat
and
ins
cdq
or
aas
pushf
mov
mov
int
jnp
jle
enter
mov
add
sbb
sub
pop
push
sub
xchg
add
mov
pop
mov
fsub
xor
outs
and
push
add
shr
pop
adc
retf
mov
xchg
push
cmps
out
or
in
ins
ins
sub
jno
dec
iret
int3
cli
mov
push
daa
test
mov
mov
cmp
mov
dec
add
dec
jg
in
das
jl
jnp
stos
ss
jp
out
and
and
data16
ret
jmp
inc
scas
icebp
leave
inc
mov
jl
out
mov
mov
popf
sbb
clc
out
stc
mov
add
hlt
ret
in
call
leave
fisub
push
sub
jnp
outs
cmps
jle
mov
cwde
jns
xchg
in
pusha
aad
inc
sti
push
into
jecxz
ds
hlt
xor
pop
movs
pop
push
fidiv
aas
(bad)
movs
in
xchg
lahf
cli
sti
ret
jnp
rcl
sub
(bad)
aas
jbe
cmps
xor
les
call
cs
push
addr16
sub
add
inc
jo
xchg
rol
sub
mov
in
mov
sbb
ror
rcl
fidiv
jne
jg
popf
clc
xchg
fs
mov
test
arpl
sub
test
mov
pop
sbb
sbb
jbe
or
inc
das
(bad)
jmp
(bad)
outs
addr16
and
mov
out
retf
and
dec
dec
mov
mov
mov
call
aas
loope
push
inc
inc
lods
call
arpl
xchg
jge
psubb
sub
jo
repnz
mov
cmp
stc
fld
pop
call
mov
neg
out
pop
and
jno
adc
xchg
dec
mov
rcl
(bad)
mov
mov
(bad)
fld
(bad)
data16
adc
xchg
xlat
sub
pusha
sub
push
pop
cmps
ins
jle
enter
out
aaa
ret
fadd
push
inc
clc
cmps
sbb
ins
adc
stos
sbb
cmp
sti
loopne
in
test
dec
rcl
call
xchg
xor
cmp
cmps
dec
cld
pusha
daa
push
mov
or
in
cmc
fs
jne
fisub
(bad)
popa
leave
lea
arpl
movs
pop
jnp
mov
mov
aam
lahf
fsubp
fistp
out
mov
mov
push
xor
scas
sub
dec
test
push
sub
arpl
cmp
aaa
xchg
inc
jbe
ja
inc
in
test
(bad)
shl
shl
test
jmp
push
push
jae
adc
and
lock
test
mov
in
imul
xchg
and
pop
adc
scas
pop
jmp
adc
jge
not
xor
movs
sbb
sbb
cmc
mov
js
shr
(bad)
loope
iret
jl
dec
in
(bad)
retf
and
fcomp
popf
mov
out
mov
add
lahf
xor
scas
adc
repz
sahf
push
popa
jl
dec
arpl
ja
ret
push
sub
inc
inc
cmp
loop
ja
pop
adc
das
les
fild
mov
in
aad
mov
xchg
imul
stos
rcl
in
and
(bad)
inc
shr
sbb
mov
cli
clc
ret
das
int3
xor
dec
push
adc
dec
(bad)
sti
add
mov
jmp
pop
inc
add
add
cmps
add
(bad)
ja
ins
sbb
xchg
rcl
shl
adc
(bad)
clc
dec
cmovb
pavgb
dec
mov
cmps
jmp
stc
mov
mov
icebp
icebp
pop
adc
xchg
or
inc
daa
imul
xchg
mov
mov
rol
ds
cwde
leave
cwde
xchg
pushf
clc
mov
and
adc
lock
in
jge
dec
ins
jge
push
or
in
std
and
sbb
push
call
mov
pop
js
(bad)
sub
pop
sbb
dec
or
movs
mov
pop
xor
mov
cwde
ret
sbb
dec
or
stos
pop
mov
jbe
adc
jnp
lods
sbb
rcl
(bad)
inc
dec
jns
(bad)
inc
xchg
dec
ja
and
out
sar
push
test
mov
xchg
shl
cld
jmp
xchg
adc
pop
add
leave
xchg
jmp
mov
shr
js
or
inc
jbe
mov
(bad)
fisttp
add
in
(bad)
sub
mov
or
mov
mov
xor
mov
movs
cwde
(bad)
repz
adc
std
daa
lea
jb
sub
pop
pop
fisub
push
hlt
(bad)
dec
loopne
jp
and
iret
cs
fs
rcl
pop
sbb
inc
(bad)
ficom
push
push
rol
repnz
mov
push
dec
mov
sub
das
add
mov
pop
sbb
and
push
add
sbb
sbb
sbb
sub
and
mov
(bad)
push
lods
xchg
mov
mov
sbb
cld
mov
pop
push
shl
hlt
sub
shl
jmp
lods
mov
mul
int3
pusha
and
out
push
jns
pop
mov
cmp
push
icebp
sub
pop
sahf
xchg
and
inc
jbe
stc
inc
and
lahf
mov
xchg
mov
pop
lods
cmp
aad
adc
loopne
jmp
loopne
mov
mov
cwde
leave
inc
xlat
in
mov
cmp
rol
test
xor
inc
inc
fwait
adc
xor
add
and
pusha
fst
xchg
mov
lock
enter
add
adc
lea
ret
lods
addr16
push
fadd
inc
not
out
or
and
imul
std
or
ret
cmc
pop
cmp
jl
dec
dec
push
xor
sar
add
xchg
lahf
out
and
scas
ror
inc
rcr
adc
outs
add
sahf
pop
jne
xchg
aam
mov
repnz
cmp
mov
adc
(bad)
imul
dec
rol
dec
repnz
rcr
or
jmp
(bad)
int3
cdq
mov
fild
mov
push
jmp
int
fsub
paddd
imul
add
(bad)
addr16
inc
push
outs
jb
int3
dec
pop
(bad)
test
jns
in
cmc
stc
imul
pushf
mov
lods
mov
leave
test
out
cli
outs
enter
fidiv
sahf
xchg
xchg
jg
push
test
(bad)
stos
cmp
inc
stc
or
inc
imul
adc
sub
push
add
inc
sbb
sar
ds
ret
lods
rcl
ret
mov
inc
imul
std
jmp
add
stos
add
daa
jb
pop
mov
pop
clc
imul
push
out
push
scas
in
in
(bad)
push
push
dec
fdivr
inc
xchg
mov
jl
fldenv
fs
mov
mov
bound
in
jecxz
mov
xchg
lds
jmp
retf
out
cmps
popa
js
dec
adc
mov
test
xlat
mov
inc
in
add
fnstsw
sti
std
js
stos
push
jmp
mov
fst
mov
imul
imul
nop
mov
xchg
pop
push
pop
lds
inc
mov
jno
(bad)
dec
arpl
push
jbe
cdq
jo
mov
xlat
mov
stos
or
xchg
shr
jle
fidivr
mov
xchg
pushf
cmps
out
call
popf
mov
xchg
ds
mov
cmp
daa
mov
jnp
jl
iret
inc
add
repz
jge
adc
loop
sub
rcl
and
sub
push
and
mov
pusha
lahf
add
call
mov
dec
jno
jle
push
mov
ret
mov
add
push
lahf
sbb
push
sbb
cmps
inc
jmp
inc
inc
cld
ins
jb
test
sti
aad
scas
push
popf
inc
stos
pop
arpl
out
fistp
dec
sbb
lods
out
or
rcr
in
int3
add
cmp
data16
pop
pop
mov
pop
adc
dec
popf
mov
scas
ror
in
mov
nop
or
arpl
jg
push
dec
xchg
in
cmp
out
loop
(bad)
mov
sub
mov
fst
dec
adc
or
inc
aas
loopne
jge
xchg
sbb
rol
retf
jg
mov
mov
loope
test
sbb
pusha
xor
ds
mov
xlat
leave
pop
fld
jle
inc
xor
cmps
dec
iret
aam
sbb
xchg
dec
push
mov
xor
cmp
ins
leave
aad
inc
add
dec
dec
cmp
hlt
jbe
out
packsswb
and
test
aaa
inc
cs
ins
bound
sbb
les
enter
mov
jae
out
in
loop
mov
dec
push
xor
dec
pop
jle
pop
loop
repnz
fcmovb
dec
add
scas
add
push
jns
(bad)
mov
test
clc
(bad)
cs
mov
pop
jmp
call
xchg
int
icebp
dec
xor
jmp
ds
loope
retf
retf
lds
xor
ja
jno
fisttp
or
mov
cli
lods
sbb
in
adc
mov
mov
push
or
sub
jae
jb
in
jmp
out
pop
xchg
xor
daa
pop
sbb
add
jg
(bad)
cmc
mov
mov
retf
std
gs
out
shl
lods
leave
cmp
fs
jnp
movs
nop
pusha
pop
shr
push
dec
cmp
out
repnz
call
in
in
retf
stos
lods
jbe
sub
(bad)
lods
mov
psrlq
js
loopne
cs
(bad)
idiv
add
xchg
fucom
popa
mov
pop
cld
pop
and
fistp
sub
or
inc
inc
jp
add
enter
test
sbb
dec
(bad)
xor
ds
int
ret
mov
sahf
icebp
xchg
aam
fwait
(bad)
fsubr
clc
enter
mov
sbb
cdq
push
test
test
jp
add
mov
lods
sub
(bad)
outs
loop
dec
lea
aaa
pop
std
cmp
jge
cmp
adc
outs
and
or
stos
(bad)
jnp
jmp
outs
(bad)
popa
cs
mov
push
fcomp
loopne
push
iret
xchg
(bad)
in
or
mov
test
inc
shl
jne
inc
(bad)
scas
fadd
push
or
jmp
push
and
retf
test
push
popf
cmp
out
(bad)
fiadd
sub
shl
mov
and
inc
or
jb
daa
mov
test
pop
cmp
jmp
inc
push
mov
jne
not
adc
test
ret
cmp
and
pop
adc
and
xor
add
call
(bad)
cmps
(bad)
fmul
lods
cld
jae
dec
scas
adc
rcpps
inc
cmc
jnp
xor
jmp
repnz
jge
add
ins
cs
add
popf
(bad)
mov
jmp
or
push
in
es
dec
mov
jecxz
mov
add
pop
cld
lods
adc
xor
push
jns
cmp
jl
inc
gs
add
aaa
sbb
loope
push
xor
xor
jns
cmps
bound
push
sub
scas
inc
add
push
fdivr
push
pop
shl
sbb
loope
(bad)
pop
pop
sbb
pop
popa
pusha
aas
movs
mov
loopne
xor
bound
cmp
add
popa
cmp
push
dec
and
call
xor
pop
sub
inc
iret
mov
loop
loop
jmp
in
fild
inc
test
dec
int3
sub
mov
cmps
dec
add
loopne
mov
inc
cmc
dec
dec
push
jmp
mov
push
lods
jmp
clc
enter
popa
and
pop
inc
repz
aaa
lods
stos
aad
xlat
ins
mov
sbb
push
xor
in
paddq
fwait
scas
stc
mov
lods
clc
mov
sbb
xor
xor
arpl
gs
jmp
call
xor
inc
jbe
(bad)
fidivr
inc
pop
mov
aas
sar
jg
sar
fs
imul
out
inc
pop
in
pop
fcomp
and
hlt
mov
xchg
or
sti
lahf
xor
test
in
push
ins
js
pusha
pop
jecxz
movs
std
(bad)
icebp
test
lds
xchg
repz
cmp
(bad)
or
ja
jmp
jle
sbb
ins
aaa
push
and
rcl
pop
jnp
pop
mov
ja
jns
mov
dec
lahf
mov
sbb
jle
mov
inc
(bad)
and
test
pop
and
mov
or
movs
or
mov
dec
add
ret
shl
bound
mov
mov
push
test
jo
and
xor
(bad)
movs
push
div
mov
cmc
in
gs
pop
es
repnz
cli
add
jmp
inc
pop
or
pop
fimul
sbb
hlt
mov
mov
int3
pushf
xchg
push
dec
mov
dec
cmp
jb
inc
jbe
jp
jne
je
adc
xor
fsub
push
mov
fdiv
xchg
cwde
neg
push
mov
pop
mov
fadd
mov
jp
int3
and
gs
hlt
mov
adc
adc
mov
cmc
xchg
jbe
cmp
or
shr
xchg
lahf
stos
jle
enter
mov
or
pop
push
int3
addr16
rcl
aaa
dec
lods
mov
and
lock
jmp
adc
and
movs
xor
mov
out
iret
outs
lods
sti
ds
pusha
add
aam
inc
pop
iret
adc
fist
ins
nop
aas
das
xor
inc
adc
lea
fdiv
imul
rol
pop
fmul
xor
dec
push
jo
adc
jb
mov
mov
or
sbb
fild
mov
xor
(bad)
nop
mov
and
je
das
sbb
mov
pop
test
or
(bad)
loop
das
lds
mov
ss
in
pop
dec
je
mov
int3
add
dec
or
jae
add
cmc
lods
retf
jecxz
sbb
mov
hlt
sub
or
rol
dec
mov
std
push
(bad)
aas
pop
sbb
imul
scas
pop
repnz
outs
into
inc
sahf
sub
test
xor
add
xor
adc
push
shr
add
in
sub
xchg
adc
or
(bad)
popf
mov
popf
iret
or
jne
add
mov
mov
adc
repz
xchg
fwait
mov
idiv
pop
test
outs
mov
push
and
adc
js
retf
test
int3
mov
leave
cli
mov
xchg
cmp
and
mov
push
mov
xor
cli
adc
fst
jge
cmps
test
es
mov
js
push
xchg
mov
pushf
pop
leave
ror
push
sbb
mov
pop
cmc
mov
or
mov
sub
ds
jae
cli
sti
ret
cmp
or
or
and
dec
pop
cmp
(bad)
adc
retf
and
push
in
or
fistp
add
mov
sbb
in
sbb
ror
add
adc
pop
mov
aas
ins
jbe
scas
or
lock
dec
fbld
mov
mov
ja
out
mov
push
int
fs
and
test
adc
movs
push
lock
aas
fistp
mov
sub
call
dec
sub
mov
jmp
shl
jle
mov
repnz
xchg
scas
je
inc
lods
bound
pop
jge
stc
add
sbb
ss
fist
and
iret
mov
sbb
mov
nop
fcmovbe
cmp
sbb
imul
fcmovu
bnd
lea
jmp
sub
test
test
test
mov
int3
jnp
lods
bound
cmps
and
cmp
dec
cmp
jnp
(bad)
push
or
xor
cmp
loope
lods
retf
aam
retf
scas
ja
xchg
xchg
adc
fcom
mov
mov
or
in
int3
nop
popa
or
xor
sbb
arpl
cmp
sub
sub
push
mov
popf
xlat
and
xlat
popf
jmp
mov
(bad)
mov
rcl
sti
es
pushf
dec
jbe
mov
dec
je
adc
repnz
cmp
pop
or
shl
push
(bad)
jo
push
cmp
mov
and
test
add
clc
int3
cmp
cwde
inc
fs
call
cmp
push
dec
pop
retf
pusha
or
cmp
rcr
mov
scas
and
jmp
sbb
clc
mov
movs
cs
shl
jle
das
mov
enter
les
rol
shl
sahf
inc
mov
inc
outs
fmul
bound
pop
dec
and
dec
mov
out
xor
sbb
xor
ds
test
sub
iret
push
cld
dec
pusha
imul
mov
iret
vorpd
mov
xor
fst
add
pop
sbb
and
in
daa
mov
xchg
cld
stos
in
dec
frstor
mov
jl
test
ret
div
jmp
xchg
adc
xor
mov
prefetchw
xchg
xchg
enter
pop
not
mov
xchg
adc
pop
nop
sbb
push
mov
and
adc
xchg
adc
mov
cmc
jp
hlt
mov
jge
arpl
push
mov
xor
jmp
inc
xchg
mov
rcr
sbb
es
outs
fcomp
fwait
loop
call
cmps
mov
(bad)
push
aas
inc
(bad)
(bad)
repz
mov
mov
pop
leave
mov
jne
cmp
lods
pop
inc
nop
xchg
mov
jno
mov
add
add
in
push
in
(bad)
fcmovnb
lahf
jmp
cmps
xor
push
xchg
push
sbb
test
movs
pop
inc
adc
mov
push
add
arpl
jns
jge
test
jle
mov
pusha
loopne
lds
fisttp
sbb
pop
nop
jg
or
cmc
aas
mov
out
add
adc
and
inc
(bad)
cmp
mov
jmp
and
fld
xchg
cmp
(bad)
inc
sub
adc
pop
enter
hlt
or
cmp
int3
dec
ret
out
ficomp
in
imul
xor
stc
or
mov
push
add
hlt
xor
sub
mov
adc
pop
xor
inc
fdiv
or
push
jp
or
add
movs
(bad)
test
je
dec
call
mov
mov
outs
mov
push
pop
mov
adc
dec
lds
mov
jg
push
xlat
aaa
gs
xchg
jo
and
lods
mov
sbb
pop
(bad)
in
loopne
or
arpl
dec
leave
inc
cmp
stos
push
push
add
jmp
(bad)
xor
sub
adc
outs
pop
jle
(bad)
cdq
leave
mov
xchg
retf
dec
mov
or
mov
cld
fcomp
and
repz
frstor
fild
fadd
push
sti
push
stos
sub
jmp
cs
mov
fbld
mov
add
sbb
jmp
(bad)
scas
not
movs
cmps
into
pop
adc
adc
ror
push
add
push
repnz
fst
push
xor
in
cmp
mov
stos
cmps
stos
fwait
leave
scas
push
xor
pushf
popa
adc
mov
fcomp
adc
(bad)
or
and
jp
addr16
rcl
fstp
xchg
xchg
and
and
bound
xchg
lods
xchg
inc
addr16
rcr
pop
push
mov
sub
loop
jno
or
ret
repz
loopne
jmp
xchg
inc
jmp
in
cmp
out
adc
stos
jl
mov
adc
jecxz
or
pop
mov
jge
movs
fwait
or
std
mov
xchg
xchg
cli
add
pusha
nop
dec
or
call
retf
stos
ins
sub
outs
push
mov
pop
and
inc
loop
jae
call
jmp
xchg
push
dec
call
lahf
daa
jmp
pop
add
add
and
je
mov
enter
repz
pop
in
pop
rcr
stc
pop
xor
xor
pop
loope
jbe
jmp
sub
push
push
mov
mov
jno
adc
test
out
repz
jmp
std
aaa
xchg
int
adc
inc
pop
lea
mov
sub
scas
shl
lds
inc
imul
out
inc
js
out
stos
retf
and
sbb
cmps
loop
mov
pop
xor
fstp
and
shl
clc
inc
ret
adc
lea
and
fdivr
test
mov
mov
adc
leave
xchg
dec
xchg
jo
dec
dec
mov
push
push
xor
hlt
or
outs
jno
fstp
repnz
(bad)
dec
dec
cwde
xchg
popf
fidiv
shl
imul
pop
ins
int
adc
fst
xor
sti
jnp
repz
xchg
mov
aad
inc
xchg
mov
mov
add
inc
xchg
sar
leave
mov
(bad)
fimul
or
jbe
mov
test
fwait
(bad)
lock
mov
jno
cmps
fmulp
pop
inc
ss
push
cwde
test
movs
add
pop
cmp
adc
icebp
stos
in
std
shl
addr16
and
out
sub
add
pop
cmp
aam
or
sub
xor
ret
mov
and
ffreep
cli
push
and
dec
sar
push
ror
adc
jecxz
mov
pop
dec
dec
jo
xchg
push
daa
sbb
call
dec
dec
loop
mov
jo
mov
jne
or
(bad)
loopne
popa
psrad
mov
aad
and
xchg
mov
cmp
xchg
jnp
out
pop
mov
pop
test
ds
leave
sub
pminsw
push
fimul
fwait
out
das
inc
adc
out
sub
cmp
adc
clc
lods
loop
dec
addr16
and
mov
add
inc
outs
cld
mov
or
cmp
jg
mov
out
adc
mov
or
cwde
sub
push
ja
cwde
repnz
ja
in
fst
xor
pop
cmp
mov
call
xor
outs
ror
imul
das
ja
push
jmp
fs
adc
cmp
add
popf
xlat
or
jp
and
push
or
mov
add
pop
push
dec
jno
jno
hlt
and
leave
ret
loopne
fsub
addr16
pop
xor
nop
das
mov
out
push
ss
imul
out
and
rsqrtps
push
or
or
pusha
into
loopne
push
sbb
repz
sbb
mov
outs
jno
mov
mov
adc
ficomp
mov
out
mov
and
out
cmp
loope
inc
jmp
cmp
aad
push
sti
xchg
xlat
xor
cmps
xor
ret
shl
and
pop
push
movs
pop
imul
fsub
js
cmp
mov
xchg
mov
aas
cdq
mov
add
cmp
push
jo
jmp
push
imul
loopne
dec
(bad)
pop
movs
cli
data16
stc
hlt
adc
jnp
into
call
or
jp
(bad)
leave
fwait
xor
xchg
mov
xchg
repnz
scas
or
popf
adc
or
or
sbb
inc
pop
shl
fwait
adc
pop
xor
aas
jne
inc
or
jnp
stc
imul
and
ins
movs
mov
sub
dec
mov
pop
inc
shl
lock
out
or
dec
in
push
add
jne
cwde
inc
retf
sub
pop
call
imul
pop
(bad)
mov
mov
push
add
cmp
cmp
loope
cmp
je
mov
stos
mov
rcr
scas
cmp
jmp
popa
es
stos
pop
bound
dec
xchg
fs
jno
sti
inc
shl
sub
fwait
jl
inc
sahf
mov
out
mov
sar
xchg
mov
(bad)
popa
mov
lahf
xchg
daa
fisub
mov
adc
mov
repz
cwde
(bad)
mov
mov
fs
adc
fdivr
popf
pop
xor
add
sub
bound
clc
imul
out
stos
xchg
cmc
lods
fsub
push
in
push
xchg
cmp
shr
mov
sbb
pusha
(bad)
xor
adc
cwde
mov
call
adc
cld
shl
call
aaa
jae
out
sbb
push
dec
js
outs
jp
push
(bad)
and
sub
loope
(bad)
retf
mov
aad
push
pop
dec
add
mov
in
enter
std
adc
xor
pop
jmp
outs
adc
xchg
(bad)
gs
sub
lock
imul
(bad)
ror
xchg
mov
jmp
mov
clc
fs
iret
jmp
cmps
inc
je
and
sub
stc
and
jo
mov
pop
sbb
les
inc
inc
subps
inc
cmp
movs
out
fbstp
loope
sbb
in
loop
push
mov
mov
fs
loopne
mov
mov
xor
ffree
fwait
sub
in
mov
ret
imul
jecxz
push
ror
call
rcl
into
cmp
ror
test
jg
jb
lds
or
(bad)
add
out
jnp
mov
jae
ret
scas
js
adc
fcomp
xchg
xchg
(bad)
push
outs
cdq
pop
iret
mov
sbb
int3
xchg
pop
mov
add
xchg
push
cmp
jl
xor
in
(bad)
mov
cdq
fwait
sbb
addr16
call
inc
inc
mov
(bad)
xchg
addr16
repz
(bad)
mov
jmp
ror
leave
add
pushf
cmc
lahf
mov
pop
es
adc
hlt
mov
sti
mov
jecxz
rcl
adc
std
jle
jno
cmp
out
les
jb
pop
add
xor
daa
push
aas
adc
ins
jmp
xchg
mov
outs
jmp
cld
call
shl
rol
loope
(bad)
int3
jmp
xchg
test
inc
out
jmp
sub
dec
cmp
jg
inc
imul
icebp
rol
add
call
jmp
cli
pop
xchg
mov
mov
int
sbb
(bad)
mov
nop
xor
ret
adc
sti
out
xor
dec
aad
dec
dec
xor
fist
cld
mov
xor
adc
pop
in
jno
in
xchg
xchg
bound
sahf
iret
ins
xchg
sar
and
mov
std
fwait
pop
jle
in
push
cs
nop
pop
mov
pop
pop
push
out
pop
scas
or
xchg
jae
into
aad
movs
add
fnstcw
cli
sahf
cld
jbe
mov
fnstcw
outs
adc
jno
pusha
repz
out
ret
scas
jo
cmp
hlt
mov
dec
es
clc
jbe
popf
mov
(bad)
das
and
pause
movs
pushf
mov
mov
sub
ret
jge
rcl
aad
pop
adc
push
jbe
add
test
inc
push
loope
jns
mov
sbb
dec
mov
(bad)
and
fnstenv
retf
sbb
not
sub
daa
std
and
jns
push
arpl
xchg
sbb
cmps
cs
mov
jns
(bad)
xchg
fsub
into
int
or
sub
inc
into
dec
sub
aam
ficom
jbe
inc
mov
fbld
xlat
and
loope
cmps
xor
(bad)
jnp
fild
mov
sub
fild
jg
jmp
sbb
xchg
bound
bound
mov
mov
fwait
mov
shl
mov
pop
mov
pop
and
outs
call
and
ins
(bad)
fwait
push
jae
sbb
call
imul
xchg
aaa
mov
dec
cmp
jno
or
fsubp
daa
or
push
push
div
in
mov
enter
rcl
mov
push
js
jle
dec
out
dec
cli
push
cmp
mov
loopne
sbb
shr
sub
mov
hlt
adc
repnz
imul
mov
xchg
jb
lock
mov
xor
dec
leave
lods
ror
pop
inc
stos
and
inc
fwait
dec
mov
imul
ds
add
movs
push
out
xchg
add
xchg
pop
pop
push
mov
je
jmp
and
mov
jo
dec
mov
mov
xchg
pop
or
cli
ret
jmp
fs
lahf
jns
add
jmp
out
test
mov
jno
les
xchg
mov
sub
jg
test
ss
mov
xor
repnz
or
mov
fwait
jge
in
fiadd
jbe
in
fist
icebp
loop
sar
xchg
push
lods
cmps
jo
mov
mov
stos
pop
pop
and
add
sub
(bad)
outs
mov
(bad)
mov
test
mov
cdq
movs
add
aad
dec
cli
jnp
pop
imul
sbb
or
aam
sub
enter
int3
xchg
adc
push
sbb
in
xor
mov
jo
test
add
repz
sub
aaa
xchg
sbb
ja
cmps
adc
add
add
mov
add
ds
loope
and
jecxz
(bad)
je
xchg
cmp
mov
jb
(bad)
mov
adc
add
in
push
or
adc
gs
scas
mov
cmp
bound
scas
inc
fbstp
inc
jno
jge
cli
dec
arpl
pop
sti
jae
cmc
and
lods
push
lock
xor
dec
mov
stc
out
popa
fprem1
repz
fstp
ret
push
test
mov
dec
mov
mov
mov
repz
int3
xchg
pop
or
xor
pop
sub
mov
stos
es
push
int3
mov
adc
into
adc
mov
dec
das
mov
or
inc
xor
nop
stc
pop
mov
setae
stc
sub
sub
push
or
jns
sbb
xor
inc
sbb
mov
aam
cmc
aas
inc
outs
jae
dec
sbb
lea
in
loope
into
(bad)
jmp
test
lds
(bad)
push
mov
in
ins
mov
and
shl
push
aad
cmp
pop
mov
cmp
daa
cmp
sub
sub
inc
or
adc
stos
mov
enter
ret
(bad)
dec
sahf
or
jnp
mov
lea
sbb
outs
pusha
push
retf
sub
xlat
mov
fimul
jmp
call
popa
adc
and
(bad)
pop
(bad)
das
leave
mov
sti
xor
cmp
push
nop
aam
outs
cld
mov
xlat
stc
ds
or
clc
(bad)
(bad)
loopne
scas
pop
push
movs
adc
cmp
in
dec
dec
mov
xor
jmp
fwait
jno
and
lods
push
(bad)
add
retf
fs
xor
push
fwait
xchg
les
test
aam
jbe
or
cmc
dec
jecxz
in
in
movs
stos
aam
loopne
sar
pop
mov
mov
in
movs
jmp
int
les
sahf
stos
jns
aas
mov
jg
adc
xchg
aaa
or
jmp
pop
sbb
pop
push
ficom
add
adc
mov
mov
pop
ffreep
pop
cmc
push
test
ror
popa
jmp
pusha
lods
adc
xchg
mov
fld
xchg
inc
ja
pop
jmp
cmp
mov
push
and
pushf
mov
dec
repz
(bad)
or
in
(bad)
lock
outs
in
icebp
adc
punpckhbw
or
in
les
stos
jae
or
push
cmp
(bad)
and
fwait
mov
into
xchg
retf
div
or
mov
inc
clc
push
out
mov
sub
push
xor
mov
add
dec
fwait
into
aad
fdivr
fcomp
push
inc
sub
fadd
push
mov
daa
mov
xor
xor
xchg
jecxz
call
into
xchg
push
pusha
cmp
pop
mov
jge
call
sbb
pop
adc
jnp
ret
cmps
pop
dec
jb
fwait
sbb
test
and
dec
cmp
xchg
les
cmps
jl
dec
aaa
or
out
xchg
sbb
enter
rol
in
(bad)
pop
fs
sbb
dec
xchg
push
mov
jb
pop
ror
lods
xor
cmp
dec
(bad)
mov
cdq
imul
out
sbb
fist
loop
fstp
jns
fisubr
mov
lahf
int3
jp
mov
mov
inc
push
jo
nop
mov
mov
sub
sti
push
mov
xlat
fld
lds
mov
nop
in
ret
scas
mov
adc
add
and
stos
mov
sahf
nop
cld
scas
jae
and
jmp
dec
mov
adc
cld
fdivr
jmp
cmps
(bad)
fiadd
call
fwait
mov
mov
loopne
pop
xor
and
pop
xor
or
mov
and
enter
dec
movs
ins
sub
jo
scas
int
dec
icebp
pop
scas
ins
or
mov
or
out
stc
shr
jg
movs
in
(bad)
cmp
jbe
rcr
mov
push
adc
mov
lock
in
pop
inc
dec
lea
or
push
pop
repnz
push
cmc
ret
push
aas
or
or
inc
call
into
es
mov
cmp
rcr
test
mov
(bad)
mov
mov
push
add
test
int
mov
data16
xlat
jecxz
dec
cdq
nop
pop
iret
shl
mov
lods
pop
xor
dec
pop
stos
cmc
fldcw
das
fild
mov
lods
ror
fbld
icebp
sahf
xchg
cwde
adc
mov
(bad)
push
inc
mov
or
mov
jl
adc
daa
enter
adc
push
cwde
test
pop
cdq
leave
gs
jnp
mov
cmp
cld
add
outs
sub
pop
shl
inc
out
stos
adc
or
loop
add
dec
jg
inc
sub
fidivr
pop
add
cmp
or
jl
les
sbb
mul
int3
sar
xor
stc
test
push
and
outs
push
enter
xor
mov
add
pop
pop
adc
jns
xchg
inc
mov
mov
fsubp
mov
rcr
cld
into
pop
ret
inc
retf
pop
xlat
pop
das
mov
add
retf
sub
push
call
xchg
test
je
sbb
call
push
dec
in
mov
lds
jg
in
lds
add
inc
xor
lds
jp
mov
(bad)
jmp
out
or
mov
jecxz
aaa
inc
inc
add
lods
ins
add
mov
mov
mov
mov
cwde
and
jno
mov
adc
call
je
sbb
xor
add
jnp
stos
cmps
jns
mov
ins
ret
repnz
mov
shl
int
pop
rcr
in
std
add
js
int
pop
or
push
adc
(bad)
out
mov
push
ret
sub
data16
out
and
and
stos
or
scas
rcl
ss
daa
xchg
adc
jbe
pop
xchg
or
inc
dec
scas
jge
mov
sub
push
and
pushf
js
scas
ds
adc
pop
mov
xchg
xchg
mov
mov
xlat
mov
movs
mov
pop
test
ss
(bad)
fstp
lahf
add
loopne
std
loopne
jl
mov
pop
vpsraw
adc
(bad)
sbb
pop
fcmovb
mov
imul
xor
jb
sbb
inc
cmp
push
mov
mov
mov
add
cwde
loopne
inc
movq
mov
js
lahf
cs
and
hlt
repz
push
loop
ins
mov
and
pop
inc
retf
xor
and
nop
iret
inc
cmc
cmps
fwait
in
or
dec
js
pushf
into
jg
addr16
pushf
out
lods
jnp
push
cmc
in
adc
jae
jno
xchg
mov
iret
repz
int
add
stos
cmc
js
lds
push
je
ins
sbb
ss
mov
pusha
pop
sti
lea
cmps
and
or
icebp
pusha
cmps
std
aad
mov
clc
and
jmp
mov
push
jecxz
fld
pop
ret
sbb
sbb
ret
test
lahf
push
and
pop
mov
push
xlat
out
ins
pop
adc
sbb
pop
int
add
mov
jge
(bad)
mov
mov
(bad)
(bad)
pop
add
dec
fdiv
push
xor
jl
daa
lahf
inc
add
cmps
mov
or
xor
xchg
pop
fdiv
icebp
xlat
pop
or
pusha
sbb
dec
fst
and
sub
js
mov
xor
dec
lahf
shl
cmp
adc
inc
std
out
test
stos
es
sbb
mov
push
fld
inc
fistp
add
mov
fist
jne
push
loope
mov
pop
xlat
xor
dec
add
pop
sbb
outs
lods
(bad)
mov
xchg
jnp
stos
push
mov
and
jmp
int
hlt
jl
mov
loopne
daa
or
pop
outs
cmp
idiv
retf
call
ja
es
and
imul
fldlg2
mov
sbb
lock
dec
mov
icebp
scas
cli
and
frstor
mov
lods
mov
mov
or
jns
adc
lea
call
push
xchg
(bad)
jl
and
icebp
cli
push
test
outs
add
addr16
or
xchg
add
or
mov
mov
adc
xlat
mov
scas
pop
mov
aam
xor
out
xor
jae
mov
jmp
cwde
loop
and
loopne
iret
cli
jbe
mov
adc
sub
dec
and
cmp
mov
mov
mov
mov
(bad)
pusha
das
jb
pop
retf
jmp
mov
or
mov
sub
sbb
add
cmc
cmp
sub
push
in
and
test
jl
xor
adc
neg
mov
cmp
push
push
retf
push
sub
sub
test
ret
xor
add
int3
mov
add
aas
(bad)
push
dec
xor
and
pop
cld
ficom
xchg
clc
xor
push
push
cmp
push
add
xchg
pop
mov
mov
xchg
jle
lods
addr16
xor
add
outs
popf
into
sahf
iret
std
pop
mov
in
sub
jg
repnz
xchg
lock
cli
inc
and
inc
fcom
mov
cmps
xor
call
add
or
sub
adc
xor
ins
dec
(bad)
jle
jp
test
std
rcl
jg
aad
(bad)
mov
add
(bad)
fsubr
(bad)
xchg
push
mov
int3
nop
mov
add
cmp
sahf
es
mov
push
push
add
xchg
fdiv
push
jge
test
fistp
xor
ins
sub
in
std
dec
mov
pop
push
jne
jle
dec
pop
icebp
mov
loopne
scas
cdq
jmp
ss
(bad)
jg
sbb
jge
push
dec
leave
addr16
(bad)
sbb
xchg
sub
int
rcr
or
ret
jg
outs
jo
xchg
cmp
div
xchg
mov
fist
or
pop
and
movs
xchg
addr16
mov
pop
mov
sub
fisttp
adc
push
adc
and
fs
push
int
std
out
cmp
mov
ins
ds
ds
scas
push
xor
hlt
sbb
movs
jecxz
shr
or
sub
std
mov
jmp
pop
push
mov
xor
stos
dec
and
cmps
cmp
push
add
sti
mov
pusha
scas
sub
pop
pop
dec
cmps
xor
jmp
popa
or
in
jp
sahf
test
inc
xchg
jg
mov
scas
xchg
xor
outs
push
jns
sti
mov
loopne
sub
and
cmp
mov
retf
mov
retf
push
sbb
dec
push
and
je
(bad)
in
hlt
(bad)
outs
lahf
mov
lods
mov
out
push
sbb
sub
shl
inc
push
jg
dec
imul
adc
fsubr
aad
and
shr
xchg
mov
out
call
lea
cmp
rcr
nop
and
bound
inc
mov
pop
or
stc
lds
sbb
or
push
(bad)
ja
cmp
xor
icebp
loope
sub
fs
dec
out
push
dec
repz
rol
adc
lock
inc
daa
mov
adc
adc
sbb
pop
jae
and
sar
lods
add
lock
enter
lock
xor
aad
mov
out
sbb
xor
or
inc
cmp
fist
dec
ss
push
adc
scas
mov
dec
ret
mov
mov
jo
and
dec
test
xlat
addr16
out
jle
nop
in
xor
inc
cs
test
test
outs
cmp
cmc
mov
cli
pop
xchg
les
stos
mov
inc
add
sar
add
or
sbb
mov
push
xor
cmps
or
mov
pop
push
out
inc
popf
cmp
mov
or
and
adc
(bad)
hlt
pusha
inc
(bad)
jnp
das
les
mov
out
sub
pop
jno
stc
pop
dec
mov
mov
xchg
daa
adc
scas
pop
pop
shl
cmp
pop
sub
xchg
xor
sbb
dec
push
cs
jno
jae
xor
inc
scas
neg
cli
xor
jg
mov
jae
stc
out
or
cmps
pop
mov
cmps
loop
psubw
adc
scas
mov
dec
inc
lock
int
addr16
or
adc
int3
or
fsub
pushf
add
and
add
mov
add
or
inc
lahf
add
arpl
sbb
scas
and
fpatan
fdiv
loopne
(bad)
test
aas
ret
lea
xchg
jg
popf
or
mov
jle
shl
sahf
(bad)
loope
or
les
cmps
scas
sar
push
sub
lds
stos
dec
xchg
into
repz
mov
test
fsubr
inc
int
shr
inc
dec
xchg
data16
xlat
or
mov
call
add
pop
or
mov
xchg
and
(bad)
retf
icebp
movs
jp
clc
xchg
nop
add
xor
cmp
xor
ins
mov
push
(bad)
dec
fidiv
jbe
jmp
(bad)
ror
jns
in
xor
fs
cmp
or
mov
lods
(bad)
add
xor
cmp
cs
sbb
dec
push
pop
sub
xchg
push
mov
mov
xor
das
xor
xor
scas
out
add
mov
add
jbe
rol
mov
fiadd
push
inc
dec
call
adc
lods
test
popf
ret
or
sbb
add
ret
aaa
sbb
push
xchg
outs
out
push
adc
jbe
xchg
and
lods
dec
inc
test
test
xor
sbb
push
mov
outs
push
outs
adc
(bad)
lahf
mov
inc
adc
cmp
(bad)
addr16
int3
mov
pop
xchg
and
xchg
mov
nop
adc
mov
xor
mov
adc
jbe
lock
fcmovnb
sar
loopne
jp
aaa
js
mov
dec
div
push
in
out
(bad)
out
retf
stc
push
cmp
pop
and
lahf
test
out
inc
(bad)
jg
pop
cwde
and
and
outs
loope
call
inc
rol
ret
jae
jge
cmp
push
je
fldcw
sar
xor
and
inc
cmp
cmp
dec
call
add
aam
and
into
dec
xchg
in
gs
and
and
jmp
loope
inc
cmp
xchg
xor
mov
daa
fstp
test
push
mov
sub
dec
jo
addr16
fbld
or
jno
imul
inc
ins
push
or
inc
out
test
add
fldcw
mov
and
std
in
xor
retf
sahf
or
ds
test
mov
stc
cli
cmc
mov
test
cmp
aaa
dec
repnz
sbb
inc
sahf
popf
pushf
cmc
sbb
push
fcomp
pop
push
push
gs
movs
rcr
xchg
pop
push
pop
or
(bad)
into
cdq
sub
jae
push
xchg
mov
pop
mov
ret
inc
rcr
pop
mov
test
cmp
pop
fiadd
adc
xchg
mov
fcomp
leave
(bad)
jno
inc
mov
sub
(bad)
pop
gs
sahf
mov
add
pop
push
xchg
pop
pop
cdq
pop
fstp
sub
push
loopne
adc
cmps
imul
jne
push
test
sub
cmps
pop
std
es
adc
ror
test
std
xchg
call
mov
lods
test
out
(bad)
push
call
(bad)
idiv
loope
inc
mov
inc
and
in
in
ja
ror
push
add
mov
gs
and
push
push
out
mov
or
sahf
(bad)
push
push
adc
xchg
sar
xchg
bnd
push
iret
inc
loop
dec
adc
or
pusha
icebp
call
lock
call
mov
out
xchg
dec
in
fwait
mov
imul
ins
mov
test
mov
mov
int3
loopne
loope
shl
das
jge
mov
jb
push
cmp
adc
iret
je
add
in
loope
dec
jbe
mov
ret
stc
mov
scas
mov
add
out
rcr
(bad)
je
mov
popa
adc
loopne
(bad)
cld
lods
push
xchg
data16
xor
cmp
dec
div
(bad)
mov
and
nop
stc
gs
lods
arpl
fs
nop
sahf
sub
adc
(bad)
cmp
pop
xor
inc
paddb
dec
arpl
sahf
loope
or
inc
inc
adc
mov
pop
test
mov
jnp
mov
and
(bad)
xor
shr
jle
add
or
adc
xchg
in
stos
xchg
loopne
arpl
data16
(bad)
popf
out
jns
(bad)
xor
pop
retf
or
mov
and
push
sbb
and
shl
in
dec
out
fucom
xchg
test
outs
retf
aas
shr
inc
push
sti
dec
in
int3
lds
mov
push
out
mov
nop
sbb
(bad)
sbb
mov
xor
add
and
(bad)
sbb
fdivr
cmp
jb
or
xor
pop
push
out
xor
jecxz
ret
lods
out
mov
mov
outs
dec
into
cmps
push
pop
enter
mov
psllw
add
add
xchg
cmp
push
cmp
sub
mov
dec
push
cmp
pop
or
sbb
mov
inc
add
pop
mov
call
movs
xor
mov
mov
cmp
mov
popf
dec
push
aas
les
or
sub
inc
mov
xchg
fucomip
lods
dec
mov
mov
xchg
mov
daa
lods
arpl
cmp
jb
call
jne
ss
push
push
sbb
sar
inc
xchg
das
push
cmp
mov
mov
les
retf
cmp
loop
xchg
cmps
and
add
xor
jge
mov
call
and
sub
fst
ret
push
pop
jbe
sub
pop
ror
adc
in
mov
pop
ins
sahf
cmps
sub
ror
dec
in
test
xor
adc
iret
sbb
dec
enter
arpl
leave
mov
xor
mov
xchg
adc
in
pop
int
xlat
int
pop
xchg
retf
add
ds
or
xor
xor
cmp
cmp
and
ss
(bad)
pop
cmp
push
add
sbb
sub
cmc
pop
mov
push
out
ins
mov
(bad)
fbstp
mov
enter
sub
mov
sub
jl
pushf
push
mov
mov
dec
push
xchg
mov
js
adc
cmp
add
mov
fsubr
test
setno
add
stos
loopne
clc
aam
mov
cmp
popa
cmps
jne
jl
in
dec
pop
xor
out
push
mov
mov
add
lea
repnz
and
push
sahf
pop
sbb
xor
jecxz
mov
pop
cmps
jbe
push
adc
nop
add
shl
pop
daa
and
add
jmp
pop
mov
ror
icebp
popf
dec
leave
int
adc
jle
data16
out
fisttp
push
mov
jbe
(bad)
movs
repz
lahf
rcl
fs
inc
push
in
lods
ret
and
sahf
in
sbb
pop
js
test
cmp
popa
inc
adc
bound
(bad)
mov
js
xchg
cmps
gs
gs
mov
pop
dec
in
pop
retf
addr16
inc
in
ss
dec
cli
xor
adc
ret
stos
call
scas
movs
ret
cmp
nop
add
ins
mov
je
in
sub
and
adc
shr
jg
sahf
sub
(bad)
jne
mov
mov
arpl
ror
lds
(bad)
mov
mov
or
fwait
repnz
xchg
xor
mov
mov
adc
ins
scas
cmp
push
sub
inc
xchg
(bad)
and
push
fsub
hlt
(bad)
(bad)
repnz
ins
cld
push
jbe
(bad)
les
mov
in
ror
pop
cmp
push
push
push
outs
xchg
dec
sbb
mov
fdiv
push
(bad)
enter
imul
psraw
xor
popf
xchg
xor
repnz
add
retf
fdiv
xor
sub
dec
pop
add
mov
sahf
jnp
dec
xchg
adc
gs
xor
ret
inc
xchg
(bad)
jno
cmp
cld
hlt
cmp
adc
or
jno
nop
add
jmp
sbb
imul
ja
and
test
retf
popa
ja
sbb
jne
je
sbb
jno
and
inc
jno
addr16
cmp
inc
std
test
inc
pop
fstp
mov
(bad)
pop
xor
call
ret
popa
pop
xchg
push
lods
or
jo
in
(bad)
cmp
push
sahf
shr
sub
mov
(bad)
jg
retf
mov
xor
mov
inc
pop
in
push
sbb
pop
sbb
cld
aad
movs
hlt
push
dec
push
pop
push
and
arpl
cmp
pop
or
call
sti
movs
and
inc
(bad)
jecxz
hlt
(bad)
sbb
and
push
xor
or
shl
pusha
es
out
int3
in
bound
shr
mov
cli
jne
dec
xor
fst
jnp
rcr
dec
mov
repnz
and
movs
ins
out
mov
dec
xor
sbb
jle
add
gs
and
repnz
push
loopne
mov
xchg
loop
xchg
sar
movs
rcl
cs
in
inc
jns
sub
mov
and
lods
out
stos
inc
ds
cmp
outs
repnz
rdmsr
ins
lahf
cs
or
push
sub
sub
loopne
cmc
xor
test
repz
arpl
pop
hlt
add
cmps
int3
in
mov
or
fisttp
inc
jle
es
xor
rcr
arpl
mov
push
and
push
push
fiadd
outs
mov
or
push
xchg
add
sub
jo
add
test
sub
enter
mov
enter
mov
mov
jle
shl
jecxz
adc
stos
inc
mov
test
mov
push
jnp
ins
mov
jbe
mov
pop
daa
in
dec
dec
sbb
jp
jp
call
jmp
pop
dec
enter
xchg
lea
ror
stc
xor
push
aas
les
push
xor
loop
(bad)
cmp
inc
sbb
inc
xchg
aas
push
adc
sub
mov
jbe
inc
xchg
cmp
cdq
je
shr
sbb
and
scas
add
int
pop
mov
gs
jo
pop
aam
and
pop
rol
dec
in
mov
jno
cld
aas
jp
pop
sub
jl
aad
xor
std
cdq
stc
bnd
in
jmp
retf
xchg
stos
sub
xor
push
push
inc
xchg
leave
push
ins
dec
and
mov
sub
mov
nop
data16
mov
movs
test
movs
cmp
and
ins
popf
adc
ds
imul
ror
push
dec
cmp
sbb
xor
inc
iret
loop
mov
xchg
es
mov
dec
xchg
pop
scas
push
inc
or
jne
int3
pop
push
mov
push
xchg
sbb
pop
adc
out
mov
cdq
adc
xchg
and
fisttp
mov
js
rol
jge
pop
clc
sti
div
sahf
add
jbe
and
dec
inc
fsub
xchg
out
xor
jns
stc
daa
stos
jg
out
stos
sahf
int3
xchg
mov
imul
cmp
sbb
and
loop
mov
or
mov
add
mov
jns
jg
in
daa
push
mov
mov
jb
(bad)
cld
sub
push
(bad)
and
out
adc
mov
pushf
cmp
rol
push
sub
aas
or
sbb
push
cmp
aad
and
and
mov
adc
sub
mov
cmp
dec
test
aas
cld
test
mov
mov
push
jns
movs
jno
lahf
mov
adc
adc
out
ja
xchg
push
in
jmp
imul
mov
leave
gs
jmp
mov
sbb
push
ins
mov
dec
(bad)
(bad)
in
repz
pop
xor
out
lahf
popf
das
sub
imul
pop
outs
gs
iret
addr16
xchg
push
cs
int3
sub
test
push
pusha
and
sbb
repz
fisttp
cmovp
adc
cmps
out
mov
ror
dec
jno
dec
push
ror
mov
rcl
out
mov
mov
adc
xchg
fadd
mov
outs
(bad)
dec
outs
pop
jae
jns
fisttp
mov
sbb
imul
or
dec
cmp
mov
push
aaa
push
(bad)
sbb
adc
pop
push
xchg
stos
mov
mov
or
push
movs
(bad)
lds
clc
or
dec
outs
dec
pop
js
mov
(bad)
pop
cmp
xor
dec
fdiv
cmp
dec
int3
arpl
out
adc
cmp
mov
cmps
or
xor
mov
cmp
aaa
daa
cmp
cmp
fwait
push
jl
mov
icebp
icebp
and
dec
push
aam
repnz
inc
and
sbb
(bad)
loope
stc
jg
xor
adc
imul
add
cli
ds
push
or
cmp
fisttp
cmp
enter
mov
popf
dec
or
jns
les
data16
sahf
pop
mov
lea
test
aaa
and
and
cmc
xchg
pop
sbb
push
pusha
lods
les
pop
mov
fistp
lea
inc
jmp
shr
pop
inc
lds
pop
loope
(bad)
mov
jbe
xor
push
ret
imul
pop
clc
sub
mov
movs
push
or
dec
fwait
lea
xchg
dec
popa
adc
shr
cs
dec
es
out
dec
out
mov
in
push
ret
adc
outs
pop
pop
jecxz
outs
test
movs
pusha
sti
inc
xchg
addr16
cld
rcr
(bad)
ja
ins
test
(bad)
xor
sbb
ss
cs
(bad)
pop
loop
jmp
test
jle
lahf
(bad)
sti
ror
xor
pusha
dec
fstp
adc
aam
mov
xchg
push
add
into
and
and
jo
pusha
mov
or
aad
rol
movs
pushf
cmp
in
sub
dec
xchg
fcmovne
out
icebp
add
stc
ja
dec
fadd
ror
(bad)
pusha
sub
pop
and
or
sub
leavew
push
test
xor
xchg
or
xchg
jl
push
clc
jae
mov
jp
ret
mov
(bad)
jg
mov
cld
fiadd
xchg
pop
pop
xchg
sub
jbe
pop
add
pop
dec
xlat
xor
and
mov
dec
jns
(bad)
add
sub
lea
repnz
and
cdq
mov
and
aas
mov
push
mov
call
aam
aam
jb
test
jmp
fdiv
mov
xor
cmp
bound
push
imul
xchg
jg
adc
mov
adc
jl
cmp
or
jle
push
push
mov
sbb
pushf
fbld
inc
inc
dec
push
sub
add
dec
cmp
dec
pop
(bad)
std
std
aaa
mov
mov
test
mov
std
mov
xchg
xchg
mov
xor
int
out
inc
cld
cmp
push
scas
cmp
lds
out
or
push
cmps
aad
(bad)
jne
idiv
and
xor
and
adc
inc
xor
sbb
push
rcr
fucomip
test
sbb
add
fcmovne
es
shl
out
ins
cld
mov
repz
imul
mov
mov
push
or
mov
inc
(bad)
in
pop
jne
pop
dec
mov
cwde
xor
retf
je
mov
dec
rcr
cmps
jb
repnz
addr16
movs
cs
push
pop
dec
sub
push
sbb
ja
adc
fisubr
mov
icebp
aas
div
(bad)
sub
cwde
xchg
push
pop
mov
test
loope
pop
enter
xchg
mov
clc
xor
xchg
mov
sti
repnz
or
ja
cs
aas
nop
pop
or
fwait
xchg
fwait
cmc
sub
icebp
dec
jp
into
ret
loope
inc
adc
inc
dec
shl
popa
push
fisubr
cmp
into
push
cli
pop
or
les
mov
or
pop
emms
std
mov
stc
imul
cmp
lock
cmc
das
add
xor
hlt
loop
cwde
inc
dec
fist
xchg
cmp
inc
sub
test
sub
dec
mov
inc
sub
outs
push
add
pop
sub
loopne
sub
mov
fisttp
jp
test
pop
push
mov
ret
push
shl
sub
loope
aaa
cwde
retf
fisubr
push
test
pop
iret
pop
jmp
loope
push
movs
or
fild
mov
aaa
add
popa
sbb
sbb
mov
imul
outs
adc
fs
out
ds
je
fistp
inc
fimul
popa
jae
(bad)
pop
jae
push
push
push
es
xchg
jmp
inc
xchg
mov
mov
outs
ret
push
loopne
mov
fld
sbb
mov
div
push
mov
out
ins
dec
sub
mov
mov
out
pop
(bad)
push
push
mov
dec
cmp
loope
lahf
mov
popa
jb
and
sub
cmp
ror
jmp
pop
and
lahf
mov
add
hlt
jmp
mov
call
inc
pop
mov
fwait
in
xor
jp
call
fist
(bad)
fs
jge
adc
mov
jno
pushf
sbb
add
add
sahf
scas
and
cdq
and
push
cdq
arpl
fndisi(8087
sbb
add
sahf
pop
xchg
jno
(bad)
mov
inc
jb
aam
leave
hlt
out
fild
pusha
nop
lahf
sahf
jb
dec
xchg
mov
mov
and
sbb
nop
mov
bound
fild
adc
popf
push
in
push
sar
not
jb
js
or
les
or
jno
jecxz
sub
jne
ds
mov
ds
pop
mov
ins
jne
jecxz
mov
cmp
mov
inc
xchg
add
inc
mov
or
dec
inc
mov
sahf
cmp
daa
shr
addr16
xor
inc
pushf
jle
cwde
inc
es
movs
add
lea
or
int
rcl
pop
inc
out
pop
push
jns
jmp
dec
push
aaa
dec
mov
ins
loopne
or
jae
(bad)
push
mov
jns
jle
(bad)
test
lods
adc
mov
inc
inc
sub
xchg
ficomp
(bad)
pop
repz
xor
xchg
xchg
jno
int
test
outs
xor
cmp
mov
xchg
xor
dec
cld
pop
push
(bad)
ja
fcmovb
adc
mov
(bad)
xchg
jbe
xor
shr
and
push
mov
push
in
mov
dec
cld
ret
push
scas
xchg
fidiv
push
fidivr
sar
(bad)
push
jns
call
push
jmp
mov
dec
xchg
out
test
mov
stos
call
(bad)
cld
sbb
mov
js
(bad)
cdq
push
shr
and
div
sub
mov
(bad)
push
pop
xchg
jecxz
icebp
scas
push
arpl
(bad)
jg
fstp
adc
xor
cs
test
(bad)
popa
cmp
loopne
cli
iret
or
hlt
xchg
sti
push
shr
scas
xor
test
ret
push
cs
mov
mov
cmp
mov
mov
xchg
or
xor
lahf
xor
in
mov
test
inc
and
js
push
loop
je
sar
sbb
xor
jne
retf
push
mov
ret
mov
sbb
dec
and
inc
in
pop
jno
cmps
cmc
push
aaa
(bad)
push
dec
mov
cwde
dec
leave
ror
popa
jge
inc
jo
(bad)
loope
and
daa
shr
in
jno
sub
imul
popf
loopne
jle
aam
loopne
shr
test
inc
dec
jle
js
(bad)
mov
jns
cld
shr
adc
jne
or
add
nop
daa
retf
pop
int
div
sbb
hlt
inc
sub
ins
iret
repz
xlat
push
rol
jo
adc
aas
lock
ins
or
(bad)
ins
adc
test
jnp
lods
jno
adc
scas
stos
bound
call
push
(bad)
xchg
xor
mov
cli
and
lea
jbe
mov
jmp
xor
nop
(bad)
fnstenv
mov
or
out
out
inc
inc
aas
pop
addr16
outs
pop
fdiv
mov
mov
xchg
lock
jnp
inc
mov
aam
sub
xchg
cmp
bound
int
popf
imul
or
sub
mov
push
fcom
xchg
pop
nop
pop
dec
xchg
or
inc
push
lock
xchg
and
out
push
or
mov
mov
rol
fimul
fmul
cmc
jae
ins
or
scas
ret
das
inc
push
mov
pop
xor
or
(bad)
or
jp
(bad)
test
add
pop
dec
cmp
ret
dec
les
pop
in
cdq
int
xor
dec
ret
sub
rcl
mov
sub
outs
push
inc
inc
int3
inc
pushf
(bad)
gs
mov
cmp
jge
dec
fs
add
mov
or
ror
mov
jge
dec
jle
movs
(bad)
jg
loopne
loop
fdiv
clc
mov
clflush
loope
fwait
js
push
aaa
mov
mov
clc
push
inc
dec
stos
add
jmp
or
jge
and
ret
shr
aad
mov
push
call
repnz
pop
sbb
sub
es
mov
cwde
mov
push
jge
push
stc
sbb
add
call
aaa
dec
(bad)
shl
int3
cli
push
push
aaa
(bad)
ret
aad
jnp
inc
les
clc
int
mov
sbb
popf
dec
mov
mov
in
cmps
fld
fld
jp
pop
sbb
repnz
(bad)
inc
dec
daa
mov
jp
mov
cmc
adc
ror
push
cmp
int
mov
stos
jge
jno
mov
dec
retf
mov
jmp
cld
test
pop
xchg
mov
dec
or
gs
push
ds
and
mov
xchg
and
dec
jo
sub
scas
sbb
and
add
cmps
pop
sub
lahf
mov
std
inc
nop
mov
and
dec
add
movs
jae
mov
ror
sbb
push
dec
and
mov
xchg
push
push
ins
xor
cmp
(bad)
fld
mov
mov
xchg
cmps
out
test
inc
mov
repnz
jp
idiv
sbb
movs
sub
xor
inc
adc
in
adc
out
test
ss
mov
(bad)
dec
push
clc
cwde
cld
fcom
jnp
das
sbb
aam
cmp
js
imul
icebp
mov
test
xchg
adc
xchg
inc
jb
cli
xchg
shl
sbb
push
scas
fimul
sub
shl
popa
dec
and
into
jmp
sub
pop
loop
arpl
shr
cdq
pop
bound
sub
je
mov
jle
and
fdiv
xchg
and
mov
add
dec
fs
xchg
push
mov
and
fsub
test
sub
shr
std
arpl
push
mov
and
das
cmp
sbb
bound
imul
cmp
push
popf
aaa
fdivr
lock
inc
(bad)
inc
sbb
adc
jge
ins
ds
outs
xchg
inc
shr
pop
lods
xlat
mov
mov
test
stos
mov
cmp
xor
clc
enter
push
hlt
push
fndisi(8087
movs
jo
push
sub
aam
mov
(bad)
jl
or
lea
sub
les
mov
scas
push
push
sbb
(bad)
mov
jmp
mov
std
test
mov
jb
(bad)
mov
sub
fwait
dec
add
inc
cdq
jne
aad
ret
sub
jo
fisttp
dec
mov
hlt
pushf
in
fdivr
jl
cld
sti
mov
sbb
adc
in
test
inc
xor
outs
dec
int
mov
or
mov
mov
xchg
dec
ror
cld
jmp
or
xor
test
scas
mov
int
xchg
popa
add
sub
jge
dec
stos
cdq
mov
dec
fnsave
sbb
sar
sbb
push
(bad)
adc
cmp
cmps
mov
xchg
push
pop
je
pushf
mov
aaa
clc
mov
inc
and
retf
fst
fldlg2
xor
and
and
jge
sub
jmpw
mov
xchg
mov
push
(bad)
icebp
xchg
adc
mov
outs
sbb
lods
bound
xchg
ss
fiadd
(bad)
xchg
adc
out
push
in
sub
in
push
xchg
mov
mov
into
aam
xchg
mov
scas
into
fs
xchg
cli
lock
inc
out
pop
(bad)
fimul
xor
lds
jno
mov
jns
adc
enter
daa
loope
sub
(bad)
in
test
in
dec
lods
(bad)
scas
sbb
cmps
out
fsubr
push
rcr
dec
pushf
(bad)
retf
ds
movs
inc
sbb
and
dec
div
push
cmp
dec
mov
shr
ss
mov
adc
mov
imul
daa
mov
xor
nop
in
xor
and
jnp
xchg
das
in
adc
mov
in
xchg
mov
fisub
cmp
arpl
dec
or
push
retf
push
std
mov
(bad)
lock
xchg
out
call
sbb
jo
int3
pop
mov
cmps
aas
jmp
ror
ret
xor
loopne
test
fnstenv
inc
arpl
lods
popa
ins
cmp
add
push
sub
fwait
mov
jle
add
ds
and
push
inc
add
test
push
push
fs
rcl
clc
cmp
add
push
jmp
push
sbb
(bad)
scas
add
inc
sub
jg
mov
add
dec
mov
call
inc
mov
shr
fisttp
mov
mul
mov
(bad)
fild
mov
call
lods
jmp
sub
dec
std
lea
mov
push
fwait
lods
cmps
lea
fistp
mov
scas
scas
or
dec
fwait
jle
xchg
inc
cmc
nop
movs
adc
mov
or
in
rcl
add
add
push
daa
pushf
adc
out
push
sub
jmp
or
push
add
arpl
ins
fistp
pop
mov
js
inc
outs
repnz
pop
jle
retf
cdq
sar
aam
out
ja
push
jne
lods
neg
mov
push
daa
(bad)
stc
push
rcl
adc
push
push
stos
fsub
lods
pop
xchg
iret
sbb
scas
xlat
lahf
sub
shr
das
test
pop
sbb
cmps
shr
jg
scas
xchg
dec
clc
sub
and
fst
push
rcr
cmp
aam
jbe
push
and
in
(bad)
imul
sbb
out
das
pop
cmp
leave
dec
mov
dec
fbld
pop
sub
repz
fstp
add
pop
popf
clc
cli
sar
xchg
xchg
jmp
dec
xchg
test
rcr
nop
add
fwait
loopne
xor
int
jns
ja
in
mov
lea
retf
je
xchg
push
mov
ja
std
sar
and
out
pop
lea
dec
inc
pop
movs
cmp
dec
mov
mov
cmp
lea
cmp
inc
mov
pop
or
loop
mov
dec
sub
push
add
push
pop
iret
jnp
cmps
rcr
mov
pop
lods
push
movs
sub
arpl
mov
sbb
push
outs
dec
sub
mov
mov
out
xchg
retf
mov
adc
scas
pop
pusha
or
add
ds
leave
cmc
fwait
in
std
stos
push
inc
(bad)
sbb
mov
xchg
cmp
and
jg
addr16
scas
jecxz
jmp
adc
sahf
jp
or
int
mov
cmp
stc
fst
fstp
(bad)
cli
cmc
addr16
push
and
in
sbb
pop
mov
lahf
clc
sar
dec
jbe
and
ds
xor
jae
and
mov
test
sbb
dec
int
stos
jle
add
jnp
nop
mov
enter
pop
pop
jnp
cmps
cmps
mov
add
ret
aas
hlt
pop
fild
or
test
xor
das
leave
xchg
jo
sbb
push
push
aas
inc
inc
fcom
xor
adc
fdiv
leave
jne
dec
out
add
daa
sbb
sbb
sub
jge
rcl
stos
jo
dec
out
cmp
jp
fstp
ds
inc
ds
adc
loope
das
lock
xchg
js
pushf
mov
mov
sbb
ret
cld
(bad)
stos
adc
imul
push
dec
push
dec
xchg
aam
bound
retf
bound
inc
sbb
inc
sub
adc
cmp
mov
sti
sar
mov
xchg
sub
repz
test
dec
ret
bnd
retf
pop
pop
int3
dec
fisub
mov
sub
pop
imul
cmp
enter
jno
dec
dec
scas
xor
cld
pop
mov
push
cs
(bad)
push
sbb
leave
adc
pop
(bad)
jmp
or
sub
and
sbb
jmp
and
pop
adc
mov
retf
into
add
fs
aad
xchg
(bad)
pop
mov
test
rol
add
cs
jne
pop
cmp
aad
ret
(bad)
dec
repz
xor
fwait
push
adc
or
scas
mov
fadd
adc
pop
pop
cli
out
lods
test
cld
cwde
push
adc
inc
scas
imul
repnz
mov
push
ret
sbb
nop
mov
xlat
ficomp
aad
fnstsw
mov
mov
push
daa
in
mov
add
ret
inc
inc
repz
adc
popf
test
jecxz
das
adc
sub
loopne
scas
inc
cmps
sar
push
aas
mov
outs
cld
mov
aam
lods
dec
sbb
dec
ds
xor
push
neg
jbe
lods
or
jne
and
mov
popa
inc
idiv
dec
daa
loopne
out
ret
stc
loop
div
shl
cmp
in
pop
arpl
nop
test
or
pop
fistp
loop
pop
sbb
shl
cmp
fadd
mov
pop
test
icebp
mov
out
mov
pop
pop
dec
xor
fs
dec
jecxz
shl
jne
inc
fcmove
dec
pop
sar
iret
mov
(bad)
in
loop
inc
xchg
sbb
mov
push
sbb
or
out
cmps
xchg
inc
sub
call
dec
pop
out
int
sbb
jg
stos
push
cmc
rcr
jg
test
sbb
xchg
sub
aam
mov
inc
add
bound
out
enter
mov
test
inc
fwait
retf
aaa
scas
and
out
das
mov
repnz
cmp
cmps
sar
es
iret
mov
(bad)
push
xlat
jae
aas
int3
adc
mov
in
mov
ret
and
mov
xor
(bad)
mov
pop
test
outs
add
push
add
sub
push
in
sub
js
fisubr
imul
sbb
aas
add
mov
and
cmp
push
(bad)
in
test
jns
(bad)
fnstenv
xor
fnstsw
mov
fdivrp
test
xchg
fs
sbb
(bad)
loopne
or
sar
jae
aaa
dec
test
cmp
push
and
in
xchg
(bad)
sbb
cli
and
mov
pop
jmp
adc
cdq
pop
xor
jecxz
retf
ins
retf
fistp
jbe
sbb
jb
mov
jmp
fcomp
xchg
mov
dec
jo
pop
push
dec
xor
mov
or
in
pusha
push
mov
sub
dec
push
inc
lea
mov
cmp
jns
sbb
pop
pop
fldenv
add
mov
dec
and
fstp
push
mov
retf
scas
mov
cli
outs
xor
mov
leave
xor
lock
mov
cmps
adc
hlt
xchg
cmc
or
xchg
pop
jl
lahf
jle
cmp
(bad)
jmp
fcomp
bnd
cmc
inc
leave
mov
mov
push
inc
mov
cmc
adc
mov
es
stos
dec
push
loopne
push
jb
push
dec
mov
gs
das
add
add
sbb
(bad)
imul
inc
pop
sbb
push
or
or
sbb
iret
mov
(bad)
dec
push
dec
cli
and
push
aaa
mov
xchg
push
push
mov
call
sahf
fdivr
daa
dec
push
pop
push
(bad)
(bad)
mov
mov
ror
jle
aas
shl
adc
(bad)
or
lods
xchg
ds
sbb
shr
ins
clc
cmp
and
(bad)
test
cld
jmp
call
adc
fs
lods
imul
scas
xchg
push
or
xchg
imul
jp
test
inc
sbb
stos
enter
add
stc
mov
or
test
pop
fs
add
pop
out
call
cmps
push
dec
jnp
fidivr
enter
std
sbb
jle
jns
popa
cmp
int
push
test
cs
push
jns
adc
sbb
pop
pop
push
into
and
adc
or
shr
mov
xchg
lds
adc
xor
jb
inc
retf
cwde
or
mov
jmp
jle
in
fcomp
rcr
test
mov
dec
xor
push
xor
jle
cmp
push
fs
mov
push
jmp
ret
push
arpl
sbb
data16
cmp
stos
pop
mov
lds
imul
jne
xchg
lock
add
movs
jno
(bad)
mov
(bad)
lock
gs
mov
aad
jmp
push
fst
ret
cmps
xor
sub
dec
lods
jno
fs
sar
push
mov
inc
ror
jns
outs
js
test
pop
mov
cld
sub
push
cmc
outs
sbb
stos
xchg
mov
sbb
jae
sar
jge
mov
inc
(bad)
sbb
cmp
add
add
mov
add
iret
pop
xchg
stc
(bad)
mov
sahf
lods
fld
shr
xchg
repz
leave
ja
and
dec
inc
pusha
xchg
xchg
mov
in
adc
pop
iret
imul
cmps
popa
mov
mov
jb
mov
and
xchg
fdivr
test
push
push
inc
pop
(bad)
mov
xchg
cmp
fstp
push
mov
outs
mov
adc
stc
int3
sbb
fsub
jb
xchg
and
add
in
dec
pop
adc
push
push
cmps
xchg
mov
push
js
push
(bad)
imul
sub
in
test
popa
adc
push
xchg
sub
or
les
aaa
sbb
cmc
pusha
adc
add
pop
pop
movs
pop
test
sbb
in
cmps
mov
mov
out
jbe
es
pop
jp
jcxz
dec
sub
xchg
xlat
push
mov
(bad)
mov
dec
sbb
cmp
jb
jmp
jne
(bad)
movs
sub
add
ret
out
pop
lock
test
jbe
into
(bad)
popfw
adc
out
mov
add
test
mov
push
jo
frstor
imul
push
jb
test
in
push
lea
sbb
ret
add
jnp
mov
sub
jg
jmp
adc
sbb
(bad)
mov
(bad)
jns
xchg
mov
pop
dec
push
fisubr
sub
dec
into
sbb
call
dec
sbb
mov
arpl
out
(bad)
idiv
daa
shl
xor
mov
loop
xor
jno
xchg
jbe
and
jmp
lods
ret
shr
inc
jns
jge
lahf
cdq
mul
adc
and
ja
movs
pop
call
movs
sub
adc
div
mov
xor
test
add
xor
ficom
and
icebp
xchg
pushf
pop
(bad)
dec
bound
repz
inc
and
mov
push
stos
sbb
and
imul
js
adc
loopne
cmp
clc
fwait
pop
iret
and
fwait
xlat
cld
mov
cld
push
icebp
aad
push
pop
sahf
jns
push
adc
aas
ret
popf
sbb
neg
push
push
and
sub
outs
cli
cld
mov
sbb
imul
test
inc
lods
loop
popa
push
fdiv
lahf
jl
jmp
outs
sub
mov
scas
adc
les
xchg
pop
mov
(bad)
and
shl
sbb
into
or
jne
ret
pop
mov
(bad)
je
pop
(bad)
clc
ficom
xchg
ins
jmp
add
popf
ficom
imul
fldenv
sbb
pop
ds
dec
pop
xchg
scas
in
jbe
and
fnsave
push
or
cmp
adc
mov
loope
cli
mov
call
std
inc
sub
push
jnp
outs
mov
int3
mov
or
sbb
pop
retf
and
je
sbb
inc
gs
jo
out
push
sahf
(bad)
jge
in
and
lock
lea
outs
jmp
in
rcl
paddusb
fsubr
std
int3
adc
or
aam
mov
mov
(bad)
cli
sbb
out
iret
push
retf
nop
xchg
cli
scas
ret
inc
jo
shl
push
pop
sar
inc
addr16
inc
loopne
int
cli
add
cmp
sub
sbb
in
xchg
mov
imul
js
and
cwde
mul
ins
pop
dec
jo
mov
outs
and
pushf
sbb
add
test
clc
test
adc
jns
stc
jmp
cmp
dec
ins
test
jecxz
cmps
cld
and
sbb
stos
fisttp
fimul
xor
mov
pop
std
sbb
push
mov
sbb
push
cmp
push
jmp
out
dec
inc
mov
or
ret
scas
mov
(bad)
sub
push
std
fimul
inc
and
and
stos
and
jne
fdiv
out
lahf
test
sbb
adc
into
add
mov
xchg
sub
(bad)
rcl
or
ins
cdq
sahf
adc
lea
push
mov
in
and
fcom
pop
xchg
sar
xchg
ror
inc
sub
jne
in
dec
push
in
or
dec
adc
ret
loope
sti
inc
imul
and
sub
sti
fldenv
stos
mov
mov
lahf
(bad)
adc
(bad)
push
aaa
je
lea
lock
fiadd
push
inc
dec
sub
xor
stos
pop
push
sbb
loop
pop
mov
sbb
fwait
mov
js
mov
ins
dec
inc
ss
mov
adc
dec
jg
dec
aad
ds
test
jle
mov
mov
xchg
sbb
int3
or
bound
fcomp
and
stos
aam
xchg
sbb
mov
adc
cwde
fstp
xor
mov
pop
jmp
cmp
cmps
jno
ret
pop
dec
out
inc
mov
jge
add
les
arpl
or
fs
js
retf
scas
ds
lock
ret
add
test
movs
jge
cs
jp
xor
lds
pop
retf
adc
test
es
fs
(bad)
jne
je
inc
stos
xchg
xlat
pop
es
ja
dec
pushf
lea
sbb
in
loope
pop
add
ja
cmps
mov
or
pop
jnp
jmp
leave
jmp
call
loope
fisubr
pop
retf
rcl
xor
sub
clc
inc
ret
dec
xchg
push
or
push
in
sti
cmp
ror
das
int3
add
add
jae
fidivr
and
test
pop
iret
jne
int3
ror
gs
xchg
mov
mov
mov
(bad)
neg
push
cmp
stc
mov
sbb
xchg
std
nop
loope
xchg
and
xor
popf
jecxz
pusha
add
xchg
jbe
pushf
mov
xor
mov
xchg
in
aam
jge
and
adc
push
inc
aam
dec
(bad)
mov
js
sti
jo
sub
arpl
fsub
push
pop
sahf
dec
xchg
adc
adc
sub
mov
and
popa
xlat
mov
mov
adc
sub
and
fild
add
dec
cmp
pop
loopne
add
test
push
jo
jp
pop
sub
xchg
push
xor
lahf
outs
cmp
and
cld
ins
push
mov
pop
and
add
mov
adc
cwde
fist
jl
daa
iret
mov
in
xor
dec
and
shr
inc
aam
mov
jle
add
dec
(bad)
jno
ja
mov
mov
hlt
pop
out
cdq
outs
jne
pop
rcr
loopne
sub
sbb
inc
or
inc
leave
in
adc
sahf
imul
dec
(bad)
mov
ds
mov
xlat
push
pop
jmp
aam
das
js
push
test
std
jo
sbb
(bad)
dec
popa
dec
or
mov
inc
push
stos
or
xlat
iret
mov
pop
mov
lods
push
mov
xchg
xchg
or
push
repz
into
xchg
in
xor
in
mov
xor
jl
add
pop
mov
and
pop
pop
pushf
sbb
sbb
mov
(bad)
push
out
sbb
gs
imul
jo
test
dec
push
pcmpeqd
bound
jns
push
shl
mov
cmc
cmp
pop
sub
sub
in
add
sbb
(bad)
stos
fs
inc
fiadd
ins
or
fiadd
(bad)
jae
jb
mov
outs
jo
leave
and
test
sbb
cmc
xchg
and
jg
jae
xchg
in
cmp
jmp
mov
adc
pop
retf
arpl
jb
outs
add
repnz
fstp
add
and
dec
mov
mov
mov
or
cwde
jo
inc
ds
xchg
pushf
mov
fidiv
std
dec
cmp
movs
in
adc
(bad)
aas
cmp
and
lock
inc
out
cmp
bound
pop
adc
or
xchg
and
call
fldcw
je
pop
add
cmp
mov
dec
and
cld
lds
ficom
fstp
aad
pop
mov
gs
test
xor
mov
(bad)
js
ss
push
pop
sar
pop
fisub
mov
push
lods
sbb
clc
add
cs
call
clc
cmp
adc
outs
out
xor
cmp
mov
jae
loop
andps
cmp
sar
pop
stc
stc
push
fnstcw
dec
enter
xchg
push
push
fs
jns
push
in
cmp
test
out
jno
dec
js
arpl
movs
pop
icebp
fwait
loopne
adc
xchg
into
stc
sbb
pusha
retf
sbb
xor
sbb
mov
xor
outs
pop
mov
das
mov
icebp
fsubr
fcom
outs
mov
push
inc
pop
mov
stos
dec
cld
gs
pop
xor
das
test
pop
lock
jno
bound
outs
dec
loope
leave
out
adc
(bad)
jecxz
sti
mov
repz
js
bound
mov
test
and
loope
inc
bnd
(bad)
xor
lock
into
jns
inc
stc
pop
and
(bad)
cmp
fnstsw
gs
imul
push
jmp
inc
ret
das
mov
stos
lock
pop
fiadd
das
cld
out
retf
mov
xchg
test
mov
fsubr
add
cwde
stc
mov
cmp
sub
mov
sbb
cmp
cmps
repnz
pop
or
repz
push
add
cmps
cmp
fsubr
pop
cmc
rcl
es
jno
adc
sbb
adc
sahf
cmp
jns
mov
sbb
xchg
push
or
test
mov
xchg
or
icebp
push
xor
test
sbb
jmp
das
adc
cmps
add
cs
add
dec
gs
pop
mov
mov
ss
xchg
das
sbb
test
mov
nop
outs
icebp
adc
jl
xor
iret
movd
rcr
repnz
sbb
cmp
sub
stos
(bad)
push
in
cdq
inc
push
pop
aaa
in
jns
ss
out
or
adc
mov
and
(bad)
fadd
push
or
or
inc
test
jno
or
addr16
adc
xor
xchg
push
pop
push
pusha
fld
leave
or
or
sbb
aad
sbb
loope
stos
dec
into
fdiv
test
stos
cmp
sbb
and
xor
push
cld
push
mov
sub
push
jle
xchg
repnz
mov
shl
jbe
pushf
jmp
mov
cmp
inc
arpl
vpunpckldq
in
popa
xchg
push
sbb
rcl
inc
inc
es
inc
jnp
adc
movs
add
cli
aad
pop
inc
sahf
and
lea
pop
add
test
add
or
adc
fwait
xlat
xchg
aas
out
pop
test
daa
xor
fld
fsub
rep
pusha
push
or
pop
sar
jnp
xchg
sbb
(bad)
add
jl
stos
lea
repz
ret
mov
xchg
lods
fisubr
xor
cs
ret
mov
dec
test
leave
pop
adc
xchg
mov
addr16
bound
mov
xchg
mov
xchg
in
mov
push
cmps
sub
jle
cmp
pop
loope
dec
inc
jb
sub
fisubr
cmp
gs
add
xchg
push
add
sahf
cmps
mov
rcr
mov
and
xchg
leave
jns
shr
lea
mov
into
adc
mov
mov
dec
sbb
mov
mov
mov
jp
inc
ja
sbb
mov
retf
icebp
inc
icebp
dec
jp
psubq
mov
cmp
outs
and
sbb
pop
addr16
cmp
xor
dec
or
mov
adc
repnz
cmp
pusha
and
sbb
mov
fidivr
out
psubusw
mov
dec
outs
stc
dec
push
fistp
cmc
lahf
sti
data16
dec
mov
jae
dec
cmp
or
movs
jecxz
jmp
repnz
jns
mov
call
sbb
mov
arpl
lods
loopne
mov
or
inc
mov
out
outs
mov
xchg
ret
inc
jbe
retf
aad
es
cmps
cdq
xor
sbb
shr
dec
dec
movs
pusha
add
arpl
je
mov
adc
out
xchg
mov
push
mov
(bad)
mov
movs
test
push
adc
xchg
or
or
mov
out
lods
icebp
test
xor
cmp
ret
mov
test
jo
daa
xchg
and
aaa
repz
adc
cdq
fwait
mov
sub
xchg
adc
sub
ret
retf
loopne
and
mov
mov
jbe
(bad)
dec
add
popa
fwait
inc
js
in
pusha
lahf
push
minps
clc
inc
mov
stos
jmp
fcomp
ins
out
out
add
dec
ins
fidiv
je
ss
retf
mov
inc
dec
mov
cmp
and
pop
movs
lahf
outs
in
xchg
add
dec
ret
add
jmp
inc
ds
stos
adc
and
sbb
inc
xor
sbb
jbe
fs
push
int
(bad)
inc
mov
jae
pop
pop
dec
jecxz
jmp
int3
test
and
test
jno
iret
jo
xor
mov
jo
add
add
dec
(bad)
mov
pop
and
cmp
sti
and
popf
cli
and
and
xor
seta
stc
xchg
push
sub
leave
outs
mov
std
mov
and
stc
pushf
jbe
cmp
iret
cmp
js
sub
jle
enter
mov
das
int3
(bad)
pop
cmc
xchg
xchg
(bad)
(bad)
mov
aaa
push
jb
test
mov
cmp
pusha
mov
inc
out
aas
leave
clc
mov
jo
mov
sub
cmc
les
test
in
(bad)
xchg
jl
out
nop
retf
jg
mov
fst
mov
dec
stos
sbb
iret
int
lods
push
pop
add
cmp
add
pop
xor
cmps
pop
shl
and
add
icebp
or
cmp
mov
or
dec
int3
gs
rol
add
xlat
mov
jmp
xchg
mov
adc
(bad)
push
adc
sti
adc
and
popa
jecxz
arpl
sbb
sbb
sub
mov
call
xor
outs
retf
enter
and
jae
call
call
lea
int
mov
cs
inc
clc
mov
jmp
not
pushaw
ja
cli
leave
popf
cmp
jge
int
fsubr
mov
scas
adc
fxch
jb
adc
and
add
adc
jnp
fcomi
enter
jmp
jae
mov
xor
inc
cmp
lods
push
not
mov
xor
and
cld
loopne
mov
repz
sub
mov
scas
mov
outs
pop
icebp
add
pop
inc
push
inc
retf
inc
dec
imul
and
sub
enter
adc
mov
mov
test
xchg
lods
les
jo
cld
shl
in
inc
dec
sar
into
sbb
jle
or
cmp
movs
iret
test
mov
and
push
icebp
adc
ror
or
sub
out
mov
out
push
stc
cld
adc
aad
(bad)
push
rcl
(bad)
int3
push
movs
call
pop
jle
push
test
jecxz
and
lock
stos
pop
add
sbb
inc
and
dec
jp
add
push
stos
pop
xchg
mov
mov
popa
add
jl
inc
std
in
sub
pop
mov
loop
shl
pop
cdq
inc
sbb
popf
cs
movntq
or
xchg
xor
test
push
pop
dec
and
iret
push
sbb
data16
inc
ret
(bad)
jecxz
aam
jb
mov
jns
test
mov
sbb
jae
sar
in
push
stos
dec
ins
aaa
add
xchg
adc
ud1
loop
pop
adc
ds
bound
fidiv
(bad)
inc
xlat
adc
das
mov
lods
xchg
test
fimul
push
fisttp
xchg
xchg
mov
xchg
cmp
sbb
xor
mov
or
outs
data16
mov
inc
dec
ins
aad
leave
cmp
cdq
or
xor
sbb
outs
out
out
cs
xor
shl
(bad)
mov
ins
pop
inc
outs
aam
sbb
sub
popf
mov
mov
and
cs
test
outs
pop
inc
int
bound
jecxz
pop
xor
push
cmp
mov
sbb
neg
mov
mov
inc
jmp
outs
out
lods
xor
add
xor
adc
sub
push
push
xchg
pop
cmp
pop
xchg
dec
loopne
scas
lods
hlt
sbb
xor
mul
test
xor
sbb
sub
push
add
mov
xlat
push
mov
loopne
lods
and
sbb
mov
fisttp
aaa
into
mov
outs
lock
mov
cmp
add
jecxz
test
sbb
pop
lds
xor
mov
scas
ficomp
daa
adc
add
pop
jno
mov
sbb
in
in
pop
ror
sbb
mov
loopne
loopne
sti
lahf
cli
adc
aam
(bad)
mov
(bad)
cmp
mov
enter
rcr
push
call
push
push
jge
and
jg
mov
jl
cmp
dec
fld
inc
sbb
cwde
jg
sti
mov
daa
mov
retf
sbb
in
aad
cmp
cmps
movs
jbe
push
call
adc
pop
inc
add
adc
cwde
ins
xlat
jae
jmp
sbb
sub
leave
(bad)
outs
jnp
imul
xor
push
or
int3
add
add
aaa
jae
push
daa
stos
sti
mov
adc
mov
fcomp
push
in
jae
(bad)
cmp
push
loope
jb
push
inc
fisttp
mov
adc
add
inc
jmp
ret
sub
and
in
in
jae
inc
pop
loopne
push
aaa
cs
ficomp
aaa
add
xor
lods
pop
cmps
and
loop
or
inc
outs
mov
adc
adc
push
in
lods
mov
repnz
jno
fldenv
stos
and
fst
pop
add
enter
sbb
xor
stc
jmp
lock
out
test
push
add
call
push
shr
jecxz
(bad)
pop
fsub
sar
outs
xchg
or
pop
inc
push
cmps
cmp
cmps
cmp
sbb
lods
or
out
inc
in
xchg
adc
or
loop
int3
out
aaa
aaa
jbe
add
sbb
jmp
inc
xchg
loopne
push
bswap
popa
pushf
inc
not
ds
adc
mov
mov
stos
sub
cli
inc
std
pop
outs
pop
ds
call
mov
shl
mov
jbe
enter
adc
hlt
sbb
ret
inc
std
sbb
iret
adc
cmp
sbb
daa
imul
mov
fidivr
sbb
gs
repz
repz
sahf
loopne
nop
ret
push
mov
sub
sub
and
and
bound
out
push
ss
sub
inc
push
sbb
push
xchg
setge
and
cmps
out
sbb
or
xchg
ins
aad
shr
xor
call
ss
cmp
push
cld
enter
lds
ja
xor
pop
shl
sub
aas
dec
sbb
cmp
push
les
jne
inc
or
int3
mov
(bad)
rcl
leave
mov
hlt
in
pop
xchg
shl
pop
sbb
rcr
xor
inc
mov
fdiv
repnz
stos
xchg
jle
jb
stos
and
cmp
aam
(bad)
pop
scas
test
ror
fwait
pop
fisttp
mov
and
lods
and
lods
pop
xor
stos
pop
cwde
out
test
in
data16
jnp
xor
and
rol
test
jg
and
xchg
stos
mov
pop
mov
arpl
test
add
or
dec
aad
les
scas
(bad)
js
aad
pop
sbb
int3
out
xor
scas
push
mov
or
movs
call
xor
cmp
xor
and
clc
stos
inc
xchg
inc
cmps
lea
mov
mov
xor
dec
nop
mov
sub
je
or
add
loope
clc
pop
aad
fisub
(bad)
and
jns
sub
test
popf
push
in
pop
inc
mov
pushf
dec
aas
cmp
xchg
pop
leave
dec
fs
(bad)
imul
push
mov
dec
pop
jge
jne
pop
js
fwait
mov
inc
inc
jmp
mov
pop
ss
push
dec
fs
and
dec
mov
out
inc
dec
cmp
push
fistp
jbe
cmp
sbb
enter
out
mov
ret
js
sar
shl
mov
fisubr
dec
sar
(bad)
aas
loopne
(bad)
cwde
add
sbb
mov
adc
jae
mov
test
lea
nop
push
int3
xor
inc
and
jns
sub
mov
daa
xchg
enter
pop
mov
out
xor
xchg
mov
mov
sbb
inc
sbb
xchg
sbb
and
or
mov
jns
jge
retf
jecxz
jnp
jg
add
adc
mov
pcmpgtd
xchg
addr16
ja
(bad)
fidiv
mov
mov
lock
cmp
hlt
shr
in
add
scas
and
addr16
bound
fdiv
add
sahf
ret
jecxz
sbb
xchg
movd
xor
xor
mov
or
or
and
imul
or
and
outs
sbb
out
movs
lahf
rcr
or
gs
push
sub
xor
jbe
pop
outs
inc
outs
adc
fistp
lea
mov
in
pop
cmp
inc
jle
test
outs
pop
in
fucomip
in
mov
lods
and
and
push
xchg
adc
dec
jecxz
repz
mov
and
push
das
daa
dec
jmp
ficom
lods
gs
mov
mov
inc
jge
jmp
rol
clc
cmc
out
sar
cwde
jg
mov
pop
outs
popa
jp
(bad)
fs
add
pusha
imul
pop
test
test
sub
mov
hlt
and
or
lds
cmps
mov
dec
icebp
pop
mov
ficomp
jnp
lods
xor
pop
push
add
mov
push
mov
and
gs
out
int3
icebp
pop
push
jnp
test
xchg
mov
cld
cdq
stos
repz
sbb
rcr
cmps
and
add
neg
sahf
or
int3
imul
or
lods
clc
fst
pop
int
(bad)
mov
cs
or
stos
sahf
fimul
pop
shr
sub
loope
fdivp
fist
push
jecxz
xchg
(bad)
not
pop
loop
jecxz
lods
fdivp
pop
popf
retf
aad
ficomp
popf
sbb
mov
cmp
movs
(bad)
clc
(bad)
sti
in
add
ficom
dec
xor
lods
aas
inc
(bad)
push
push
aam
sub
xchg
aam
mov
cmp
scas
(bad)
(bad)
test
add
and
je
cdq
fcom
je
adc
sub
push
xchg
movs
xchg
imul
les
or
jle
daa
add
js
je
sti
mov
loopne
in
call
cmp
cmp
fxch
xchg
outs
mov
ins
jmp
jnp
jl
sbb
ins
push
arpl
push
inc
push
adc
pop
adc
and
in
add
mov
xchg
cmp
ret
add
add
out
jo
jg
mov
xor
push
retf
and
adc
or
push
add
in
test
js
or
sub
imul
and
scas
mov
neg
inc
inc
fs
jns
mov
fwait
sub
mov
call
mov
add
xor
or
adc
jae
jl
fadd
push
mov
sbb
cdq
(bad)
sbb
jo
sub
push
gs
into
push
and
sti
ds
ja
(bad)
adc
add
jle
pop
(bad)
ins
xlat
pop
xchg
pop
aaa
test
into
loop
pop
in
xor
xor
call
pop
or
inc
mov
pop
retf
jle
pop
jno
cmp
movs
push
cwde
jl
push
lds
jmp
popa
push
fist
mov
pop
mov
dec
popa
adc
sbb
(bad)
pop
rol
nop
mov
pop
out
pop
mov
je
adc
test
(bad)
push
std
mov
or
dec
sbb
out
jae
add
lods
movs
add
data16
fst
arpl
and
mov
ret
xchg
mov
xchg
or
mov
fst
jnp
adc
xlat
std
jg
mov
in
je
inc
xchg
mov
mov
shl
es
mov
inc
stos
sub
sbb
(bad)
push
sbb
mov
pop
mov
es
fmul
mov
jnp
dec
mov
mov
mov
clc
push
sub
add
fcos
es
imul
cwde
adc
and
add
adc
sbb
cmps
lds
ins
dec
icebp
mov
int
adc
fstp
out
push
sub
mov
sar
jecxz
aam
push
aas
add
cmps
or
and
push
in
jmp
push
lock
mov
enter
inc
jnp
push
push
fadd
repz
and
nop
xchg
add
jmp
adc
inc
mov
out
dec
dec
dec
pop
adc
push
loop
mov
addr16
addr16
ror
xchg
lds
fadd
imul
sub
and
or
lea
popf
out
and
sub
ud1
addr16
push
je
fld
sub
mov
lea
aad
dec
ror
pcmpeqw
pop
popf
lds
push
pop
push
inc
(bad)
jnp
fmul
into
sub
push
adc
stos
inc
scas
fwait
xchg
mov
inc
push
pop
inc
or
mov
jp
adc
test
daa
or
arpl
retf
inc
and
push
push
das
xchg
das
adc
out
jg
dec
dec
cmps
cmp
fisttp
mov
and
lock
xor
push
sub
call
sub
movs
call
and
lods
add
sbb
pop
icebp
push
pusha
or
iret
fs
cmps
jo
xchg
in
inc
jnp
into
shl
int
cmp
cmc
jl
jmp
(bad)
cmps
enter
mov
retf
xor
cld
or
sahf
scas
call
stos
idiv
or
lea
jg
pop
pop
in
mov
rcl
imul
seta
scas
xchg
hlt
jp
fcom
mov
mov
in
inc
mov
mov
jne
jp
push
ret
adc
mov
and
pusha
push
add
aad
adc
pushf
xchg
push
ror
and
movq
addr16
iret
into
sub
movs
stc
xor
jo
popa
and
out
cmp
in
jbe
mov
mov
xor
jmp
jns
pop
or
enter
jnp
dec
shr
xor
inc
push
into
pop
fidivr
mov
gs
cs
mov
loope
sub
ds
pop
sbb
imul
cmp
jmp
mov
jo
add
xor
pop
cwde
sbb
(bad)
(bad)
cmps
repz
jmp
push
inc
pop
add
mov
inc
jecxz
push
icebp
xor
push
inc
sub
mov
sbb
dec
scas
rol
fadd
mov
inc
enter
adc
(bad)
cmc
out
cli
mov
mov
jb
hlt
or
scas
scas
cld
add
cmc
aad
aaa
jno
bound
out
mov
test
cmps
jae
add
jmp
retf
test
cmp
cmc
aas
pop
push
sbb
out
in
dec
shl
loope
cmps
fucomip
ret
pop
in
outs
inc
cmp
hlt
es
fmul
aas
stc
pop
mov
les
adc
jge
mov
clc
add
cmps
push
enter
push
xchg
inc
adc
pusha
mov
xchg
xchg
rcr
mov
sti
in
loope
pop
(bad)
sub
xor
xlat
rol
gs
stc
sbb
in
(bad)
xchg
jp
or
xchg
cmps
bound
push
in
cmps
pop
adc
loopne
pop
and
out
cli
cmp
cmp
mov
mov
mov
push
in
fstp
stos
adc
xchg
test
pushf
push
xchg
mov
xchg
push
fstp
sub
xor
push
in
aam
rol
arpl
icebp
mov
ficomp
adc
cmc
in
pop
sub
(bad)
ror
mov
adc
fwait
out
les
(bad)
mov
fwait
push
push
in
jle
mov
mov
mov
stc
(bad)
out
dec
and
sub
mov
xlat
jbe
adc
jnp
mov
mov
jg
fucom
(bad)
aam
sub
jge
sbb
push
pusha
dec
sub
xor
adc
jmp
sahf
stc
jl
mov
stos
loope
fimul
mov
or
loope
jmp
test
out
cmp
ror
ins
loop
adc
or
retf
mov
out
adc
mov
mov
call
sti
(bad)
mov
aas
inc
dec
dec
mov
xor
fisttp
(bad)
clc
cmps
and
or
sbb
fldenv
test
push
jle
out
sbb
(bad)
test
jae
test
pusha
je
xor
cld
add
mov
div
aas
les
sub
jmp
xchg
and
pop
pusha
data16
lds
clc
xor
shl
lods
aam
dec
or
jmp
add
or
pop
push
dec
cdq
movs
mov
setle
mov
test
xlat
js
icebp
adc
mul
jnp
aas
ja
stc
sbb
push
sbb
or
fstp
loop
cmp
and
cli
push
sbb
lods
jmp
test
sbb
push
fwait
cmc
es
mov
xchg
ret
jge
pusha
jle
inc
ret
mov
stos
stos
sub
mov
inc
push
xor
sbb
and
repz
cli
or
sub
adc
mov
daa
cmp
sub
adc
gs
jns
pop
cwde
inc
(bad)
pusha
inc
inc
and
jl
cmps
cmp
adc
scas
mov
pop
adc
retf
lods
stos
pop
fistp
jg
scas
dec
loopne
out
das
pop
pop
xchg
int
mov
loop
cmps
jle
dec
sbb
inc
lea
mov
add
mov
cmp
xchg
aas
je
btc
mov
(bad)
xor
lods
test
aam
add
pop
out
out
iret
xor
aam
sahf
and
pop
push
in
pop
mov
xchg
add
push
jp
push
xor
sub
or
push
push
fmul
adc
mov
xor
cwde
ror
popf
loope
pushf
jle
adc
inc
gs
sub
sahf
and
outs
or
push
sub
cwde
mov
or
jae
cmp
lods
imul
adc
ins
std
and
and
or
sub
or
stos
pop
xchg
jge
sub
fdiv
add
jl
fwait
test
inc
ins
jno
clc
aas
iret
sbb
leave
mov
dec
pop
jp
es
inc
int3
xchg
(bad)
sbb
pop
imul
sbb
xor
leave
shl
jl
inc
mov
test
xor
rcr
pop
mov
mov
mov
cs
imul
loopne
push
push
pushf
xchg
cmp
xlat
and
aad
push
data16
fbld
rcl
add
mov
fld
sbb
xchg
hlt
lea
add
test
sub
cmp
test
stos
retf
mov
inc
clc
sub
sub
ret
int3
das
pop
icebp
mov
xchg
xchg
add
call
push
cmps
(bad)
mov
xlat
inc
cmpps
inc
inc
mov
(bad)
xor
dec
cdq
mov
xchg
shl
mov
adc
mov
std
push
push
add
dec
pop
inc
xchg
jp
push
and
test
sbb
inc
push
mov
mov
push
push
fild
add
jle
push
fcmove
mov
fcomp
sbb
mov
out
sbb
adc
imul
jmp
lea
or
xchg
repnz
addr16
mov
push
lock
sbb
dec
cmp
ins
dec
loop
mov
xchg
xor
adc
gs
hlt
or
addr16
(bad)
inc
iret
sbb
and
shl
adc
out
xor
adc
sbb
mov
out
mov
fdivr
les
clc
pop
clc
(bad)
push
jmp
lods
stc
or
aaa
jno
cmp
int
shl
cmp
and
pop
and
hlt
push
xor
mov
xchg
add
scas
mov
adc
test
mov
jbe
je
test
cli
cmp
cmp
setne
jecxz
ins
clc
repnz
push
sbb
xchg
dec
mov
and
cmp
jle
xchg
sub
or
jmp
mov
xlat
shl
loop
and
cmp
jmp
jno
sbb
je
(bad)
fld
mov
jns
hlt
jmp
sbb
push
ins
cld
sub
or
or
int
out
sub
mov
iret
loopne
xchg
pop
and
movs
mov
sar
vpminub
cmp
sti
mov
xor
jbe
xor
dec
mov
sub
inc
mov
cdq
mov
dec
and
int3
ficomp
mov
repnz
push
clc
ss
outs
(bad)
inc
dec
pop
adc
shr
mov
dec
cwde
pushf
mov
push
cli
jnp
(bad)
hlt
adc
stos
fimul
mov
shl
ficom
js
mov
pusha
int
sahf
inc
push
sbb
outs
mov
imul
call
mov
(bad)
fwait
inc
cmp
popa
and
int3
mov
pop
cmps
into
ds
lods
ret
fistp
xchg
ja
fstp
(bad)
pop
xchg
push
sub
xchg
xchg
mov
das
jg
mov
push
lods
sahf
mov
sub
out
cmp
inc
cdq
icebp
inc
loopne
jg
movs
mov
inc
pop
out
ss
pop
mov
dec
sub
mov
mov
in
es
mov
cmp
data16
in
test
pop
call
jb
sbb
jmp
or
pop
pop
test
jno
adc
add
sbb
fstp
xor
adc
xor
outs
aaa
add
sti
rol
mov
ret
fild
mov
dec
retf
fs
adc
push
outs
pop
lods
mov
mov
add
jo
(bad)
dec
jne
in
scas
lods
cmps
sub
dec
or
pushf
push
cmc
repnz
outs
jp
int3
mov
dec
int
rcr
mov
xchg
pushw
mov
inc
scas
dec
mov
jge
call
bound
sbb
inc
jbe
xor
or
(bad)
aam
retf
jp
pop
stc
call
dec
push
mov
pop
pop
cli
shr
fcmovne
repnz
or
stc
cmp
(bad)
add
call
das
pop
pop
xlat
xor
dec
mov
inc
cmps
add
in
scas
cmps
jbe
inc
pop
dec
call
mov
scas
outs
sti
add
clc
cmp
outs
xchg
pop
cmp
shr
inc
jge
mov
cs
inc
push
add
pandn
aam
sbb
mov
in
fucom
adc
jns
fidivr
popf
in
cmp
dec
adc
pop
mov
xor
(bad)
imul
pop
and
add
test
cmps
test
shl
adc
dec
and
sub
ret
mov
js
addr16
xor
xchg
fiadd
push
pop
push
push
sbb
sbb
dec
xchg
inc
xchg
mov
and
and
shl
adc
jae
scas
psadbw
sahf
icebp
inc
or
lods
pop
ss
enter
test
mov
pop
push
inc
mov
mov
push
fmul
out
inc
dec
add
(bad)
sbb
cwde
mov
loop
in
ror
xor
leave
(bad)
mov
dec
out
ss
cmp
iret
push
ins
xchg
push
xor
cld
adc
mov
mov
aas
push
mov
jns
mov
and
jnp
or
das
rol
inc
movs
rcr
xor
mov
and
call
fst
dec
movs
dec
je
xchg
aad
imul
in
or
xlat
imul
jae
inc
jbe
stos
gs
addr16
xchg
mov
clc
xchg
jae
das
mov
dec
(bad)
xor
sub
jge
gs
mov
bound
xor
sub
in
out
xchg
sbb
retf
mov
stos
jo
in
xor
ins
loop
xchg
mov
push
push
iret
push
jbe
inc
dec
or
inc
xchg
jmp
add
daa
cli
xchg
sub
mov
fidivr
popa
rol
mov
mov
sbb
sub
inc
repnz
cwde
pop
push
mov
mov
push
fisub
sub
cmps
jb
test
push
aad
fisttp
mov
lods
data16
arpl
mov
sti
mov
into
scas
mov
ret
add
and
mov
push
adc
mov
and
mov
adc
push
jbe
jns
xor
mov
fnsave
lock
shr
or
aam
stos
hlt
jg
jns
mov
call
xchg
in
iret
mov
les
push
add
xlat
ret
mov
or
lds
jp
adc
push
dec
pop
int
ins
ins
and
push
mov
(bad)
pop
inc
adc
add
repz
rcl
add
fstp
mov
repz
and
nop
cmp
cld
add
mov
test
in
pop
mov
cmp
lods
xor
test
sub
pusha
mov
and
jo
(bad)
std
sub
adc
leave
pushf
fild
push
sahf
test
clc
dec
jmp
jne
xchg
mov
fdivr
push
in
mov
or
mov
into
xor
cmp
xor
shl
iret
call
pushf
inc
loop
out
movs
dec
xor
push
not
push
cmp
mov
xchg
scas
shl
mov
xchg
movs
rcl
cld
mov
jl
ficomp
jae
bound
shl
in
ins
or
pop
push
nop
push
das
inc
pop
xor
mov
sahf
inc
lds
retf
cld
sbb
das
icebp
mov
sar
xor
push
sub
test
mov
and
cmp
and
mov
jle
test
sbb
mov
imul
and
out
rol
inc
retf
cmp
mov
int
sub
jnp
inc
lods
test
ret
aad
jecxz
mov
cmps
cmp
sub
cmc
mov
jo
cdq
xor
xchg
xlat
xlat
push
frstor
mov
fwait
jmp
dec
dec
js
(bad)
jmp
jl
mov
aad
lahf
aad
scas
xor
inc
push
pop
ret
test
scas
out
test
aas
retf
xor
(bad)
sub
mov
sub
out
mov
xor
xchg
outs
inc
inc
stos
pop
and
xor
sahf
or
pop
int3
jmp
adc
xchg
xchg
xor
jmp
dec
push
adc
stos
push
pop
popa
xchg
aam
mov
je
add
jnp
sub
dec
mov
cmp
push
mov
cs
dec
dec
push
xor
cli
adc
pop
cmp
cld
pop
jne
pop
cmps
jl
dec
push
jp
into
inc
popa
or
shr
xor
repz
mov
ins
xchg
icebp
jns
cmp
xor
mov
inc
ja
sbb
in
dec
and
aas
add
addr16
cmp
mov
xchg
std
sbb
inc
retf
jbe
mov
push
pop
sbb
mov
lds
or
cld
mov
push
push
cmps
fisttp
out
aam
test
and
ins
sti
aaa
repz
adc
xchg
cwde
mov
mov
or
jg
sbb
mov
mov
cmp
fwait
dec
stc
dec
popf
dec
(bad)
sbb
loop
retf
sbb
cli
movs
add
jecxz
jb
mov
xchg
mov
mov
aas
lods
jae
jge
inc
push
add
adc
cdq
adc
mov
and
mov
ret
test
pop
sub
adc
les
ss
pop
mov
out
cmps
jp
xlat
adc
aaa
inc
imul
mov
das
mov
enter
in
mov
int
mov
mov
push
mov
sahf
in
ss
ss
sub
fs
in
mov
push
in
outs
cmp
cmp
xchg
jo
xor
push
jns
inc
pop
lds
or
setnp
popa
icebp
adc
cdq
inc
mov
jl
(bad)
cld
cmp
imul
jne
fmul
pop
imul
out
cpuid
test
and
pop
dec
cmp
pop
psrld
daa
mov
add
rcl
out
ffree
movs
es
push
adc
add
in
lea
repz
aas
and
lods
pop
inc
in
stc
mov
inc
(bad)
push
mov
push
cmp
xor
imul
mov
loop
or
int
add
lahf
pop
hlt
xchg
and
adc
sbb
mov
sbb
pop
lods
cmps
xor
dec
icebp
sbb
xchg
pop
cmp
pop
or
mov
fwait
cmp
sbb
jp
xchg
mov
add
xlat
je
dec
(bad)
and
and
sub
and
adc
add
cmps
xor
stc
in
mov
adc
icebp
adc
mov
push
mov
scas
jno
(bad)
aam
cmps
sbb
ret
fs
push
dec
nop
sub
imul
ret
jp
fbstp
loop
dec
idiv
mov
sbb
jmp
jg
popa
dec
push
sbb
xor
jae
fabs
mov
mov
(bad)
addr16
aad
adc
push
and
aad
push
inc
je
adc
or
mov
mov
pop
mov
inc
out
and
cs
jbe
aad
mov
jno
add
jmp
enter
cmc
add
pop
cmp
imul
push
xchg
jl
lock
loopne
ss
nop
lahf
mov
jno
jmp
mov
ins
cwde
iret
retf
(bad)
jo
sar
xchg
and
push
jl
mov
repnz
adc
les
rep
cmps
push
jl
mov
aad
pop
or
jecxz
ins
sbb
jl
mov
cmp
(bad)
js
cmp
mov
fs
leave
test
adc
jb
mov
sbb
popf
sub
ret
push
jmp
adc
or
mov
in
aam
nop
dec
(bad)
jne
jnp
shr
cmp
mov
mov
pop
cmp
data16
outs
dec
lea
lea
div
jmp
stos
(bad)
sbb
test
cwde
clc
ret
lock
mov
leave
push
mov
push
jmp
not
hlt
mov
push
cli
fcomp
mov
jecxz
lds
imul
lods
push
push
mov
mov
mov
cmp
mov
pop
sahf
aas
jne
mov
ins
push
lahf
test
mov
or
inc
pop
jnp
and
or
cmp
pop
ret
adc
push
mov
inc
ins
retf
sub
adc
jb
popf
adc
sbb
popa
mov
pop
push
jg
shl
mov
dec
shr
jns
push
in
(bad)
jo
xor
cmps
jge
mov
mov
loop
fisttp
push
fimul
mov
nop
repnz
push
in
aad
call
in
mov
stc
cdq
shl
shr
lahf
pop
cs
ficom
xor
shl
mov
ret
test
inc
out
(bad)
jge
add
add
cld
push
push
add
add
add
mov
pop
pop
xor
xchg
js
sbb
inc
adc
loop
repz
ins
mov
inc
ins
and
call
sbb
ret
and
in
mov
sbb
shl
xchg
add
sbb
adc
fdivp
pusha
pop
inc
inc
call
cmp
dec
jno
lods
push
cmp
fs
dec
jne
ret
(bad)
loopne
xchg
in
sbb
sbb
cmps
add
enter
xchg
pop
cmps
push
and
inc
mov
xchg
mov
mov
xchg
sub
add
(bad)
repz
fild
add
inc
push
push
div
add
cmp
or
popa
addr16
mov
inc
cmp
leave
sbb
fadd
jmp
gs
rcl
jl
mov
cmp
lods
mov
cmp
sub
fld
push
dec
adc
sbb
pusha
pop
xchg
mov
hlt
xor
test
pop
or
sbb
pop
mov
inc
add
fwait
lods
mov
sub
aas
or
mov
sbb
sub
and
push
scas
jmp
in
dec
dec
cmps
xor
mul
(bad)
nop
inc
push
xchg
fs
push
mov
int3
xchg
and
inc
push
bound
hlt
icebp
inc
loope
stc
or
pop
mov
inc
adc
lock
adc
mov
iret
(bad)
repnz
xchg
inc
test
js
xchg
data16
jmp
cli
pop
adc
mov
xor
popa
ja
mov
sub
lock
sub
fcmovbe
cld
mov
xor
imul
xchg
outs
xlat
cmp
sub
movs
jmp
xor
cld
or
ss
out
fcomp
and
mov
test
fmul
mov
inc
outs
mov
cmp
fsubr
mov
call
adc
ror
and
mov
sahf
dec
jg
ror
outs
popa
(bad)
aaa
sbb
popf
push
mov
sbb
rol
popa
retf
dec
ins
mov
xchg
hlt
push
(bad)
pop
pop
fld
es
das
inc
ins
fcom
mov
sar
and
cdq
arpl
mov
xor
in
add
push
repnz
jae
mov
sbb
add
jl
jno
(bad)
jle
jmp
adc
lock
sbb
and
test
xchg
les
adc
out
add
add
ficom
sbb
pop
cdq
scas
mov
in
es
test
dec
mov
loope
outs
mov
ror
mov
add
cmp
je
cdq
pop
fsub
mov
cmp
mov
sbb
xchg
mov
mov
mov
adc
pop
mov
cmc
imul
dec
das
jae
and
mov
xchg
sub
push
jmp
adc
mov
and
sar
jle
clc
(bad)
xchg
adc
stos
cmp
ins
push
movs
aaa
xchg
dec
shr
lea
or
(bad)
xchg
ss
sub
inc
in
jbe
and
sbb
lods
pop
sbb
jmp
xor
mov
call
xor
dec
stos
out
idiv
jno
adc
lahf
and
pop
inc
add
adc
loopne
xor
mov
or
jmp
out
cld
push
or
rcl
out
stos
div
push
cmp
cmp
mov
cmp
movs
test
je
or
jle
jg
retf
icebp
(bad)
xchg
aas
push
add
mov
cwde
push
xchg
adc
sbb
sub
ins
jg
cmp
cmp
push
sahf
int3
sub
hlt
not
push
sbb
or
mov
jmp
mov
cmps
xchg
neg
(bad)
ror
cmp
pop
mov
mov
aam
adc
xchg
stos
xor
icebp
adc
js
add
inc
lahf
pop
push
into
mov
ins
call
inc
cmp
push
sub
in
test
ret
pop
out
cmp
scas
xchg
in
push
and
sub
xchg
(bad)
cmp
jle
out
das
into
dec
mov
nop
jae
punpckhdq
(bad)
fsubrp
repz
mov
adc
mov
mov
shr
pop
not
jb
mov
add
push
and
call
fidiv
pop
stc
push
dec
adc
jmp
adc
rol
mov
cmc
int3
or
add
jmp
sub
and
ret
push
cmp
add
pop
push
or
out
std
lods
sbb
xchg
sbb
mov
add
inc
inc
lods
sbb
and
or
ds
jle
neg
in
test
xchg
jo
pop
and
pushf
pop
push
push
mov
cwde
ja
jp
mov
dec
jle
in
fisubr
cmp
jp
pop
bound
inc
push
out
fsubr
call
push
stos
cmp
mov
cmp
or
arpl
mov
les
in
mov
sub
push
push
pop
mov
into
push
cld
or
cmp
mov
pop
cmc
jbe
sahf
int
sbb
cmp
xchg
jp
retf
add
loope
mov
scas
mov
leave
rcr
xlat
jmp
mov
dec
rcr
imul
inc
jb
push
test
sbb
stc
out
jp
adc
adc
iret
or
call
adc
cmp
in
cmps
daa
bound
pop
jmp
jne
pop
fucompp
jns
lods
mov
pop
iret
ret
mov
xor
shl
jmp
retf
add
jmp
(bad)
sbb
ins
(bad)
outs
add
mov
push
scas
ins
cmps
dec
push
cwde
jecxz
retf
push
into
mov
push
loope
stos
data16
(bad)
sbb
sti
push
sahf
jg
sbb
imul
mov
jbe
or
popa
je
js
fstp
data16
mov
scas
add
jae
push
dec
in
sahf
sbb
xor
mov
cmp
and
jmp
or
mov
imul
and
daa
jl
cmp
push
push
shl
xchg
(bad)
out
out
retf
int3
jnp
xor
dec
jle
outs
aad
popf
outs
add
(bad)
ror
ds
jg
ja
inc
movs
cmp
sbb
gs
mov
popa
shl
sbb
fiadd
ds
data16
mov
adc
std
and
mov
xlat
xchg
fmul
pop
push
loope
mov
(bad)
xchg
push
arpl
call
xor
sar
in
loope
sub
es
xchg
je
sahf
loop
call
ret
outs
(bad)
jae
sbb
adc
jl
dec
wrmsr
mov
cld
fisubr
lods
ds
xor
dec
mov
leave
leave
mov
xchg
lahf
(bad)
into
mov
mov
movs
xchg
ins
dec
push
lods
outs
test
ret
(bad)
add
in
ficom
call
sub
cmp
pop
xchg
mov
inc
retf
and
neg
and
in
cmp
shl
cmp
cmp
sub
les
fst
out
mov
cmps
test
imul
add
mov
mov
arpl
mov
in
call
fst
test
out
test
lock
inc
push
jg
cld
jae
xchg
jge
mov
cld
cdq
lods
cmps
or
push
rcr
push
push
cld
outs
sti
jb
pop
sar
mov
cdq
mov
jae
scas
enter
cli
rol
push
hlt
push
xor
jno
out
movs
stos
sub
fadd
cld
sar
pop
fdiv
xchg
dec
out
pop
aad
in
jg
cmp
adc
jp
movs
pusha
jg
jmp
xor
imul
mov
jg
ficom
cmc
int3
out
ja
adc
mov
mov
cmp
es
(bad)
loopne
and
je
xchg
cmp
ds
sti
xchg
iret
push
or
pop
cmp
jne
ror
push
dec
and
jo
lahf
and
push
lock
test
scas
push
ret
enter
push
and
cmps
add
mov
lahf
cdq
or
inc
pop
je
inc
aaa
and
jne
lahf
or
pop
inc
xor
pop
jb
(bad)
cld
mov
sub
pop
aam
adc
jl
add
mov
mov
ja
xchg
inc
mov
sub
cs
data16
movs
jb
test
in
adc
hlt
loop
mov
scas
dec
dec
call
push
arpl
jecxz
sub
add
(bad)
out
js
xchg
mov
mov
out
out
neg
mov
mov
je
and
mov
jae
and
cs
xlat
xchg
aas
fld
loopne
inc
imul
hlt
mov
ins
in
or
jno
push
or
jg
jge
push
stos
sub
(bad)
inc
mov
inc
rcl
(bad)
dec
repz
jl
mov
scas
shl
rcr
mov
jmp
aaa
push
adc
int3
push
leave
mov
adc
(bad)
cmps
pop
dec
icebp
mov
test
dec
aaa
or
test
inc
adc
pop
(bad)
sbb
scas
push
xor
xor
jnp
dec
popf
jmp
pop
sub
or
inc
in
xchg
das
xor
cmp
pusha
cdq
jmp
out
push
(bad)
lahf
pop
test
call
ds
movs
jl
dec
sub
cld
jp
xor
pop
mov
fdivr
mov
mov
fsubr
pop
mov
data16
mov
mov
sub
lds
mov
push
pop
jb
cmp
mov
cmp
pop
pop
pop
sub
pop
xchg
(bad)
or
ret
test
mov
inc
stos
pop
xchg
xchg
js
mov
enter
enter
mov
jmp
daa
xor
and
fild
fcmovnb
in
add
xchg
cs
inc
ins
stos
test
pop
loop
dec
jns
mov
mov
cmp
push
push
test
fs
dec
pop
sub
cmp
mov
arpl
jae
outs
and
sar
inc
les
sub
inc
jnp
shl
xchg
pop
in
dec
aam
or
lods
mov
mov
mov
mov
push
mov
inc
jle
mov
sbb
cmp
ret
cdq
fucom
pop
sub
mov
ds
adc
int
sub
xlat
push
sbb
outs
mov
retf
pop
adc
mov
(bad)
dec
loopne
(bad)
addr16
sahf
mov
sub
addr16
mov
xchg
pop
loop
inc
push
pop
loop
dec
jg
or
xor
scas
mov
push
xchg
stos
jno
cmp
jno
jno
or
mov
ret
aam
scas
or
pop
call
add
gs
ins
xor
jns
push
xchg
loopne
out
jmp
test
mov
dec
xchg
xor
scas
mov
(bad)
jnp
fldlg2
push
add
push
inc
popa
jnp
sti
mov
shl
adc
xchg
push
sahf
lods
add
enter
sub
ins
adc
retf
(bad)
not
leave
add
xor
out
lea
xchg
shr
xchg
out
pop
inc
mov
sbb
outs
mov
sbb
cli
dec
sub
aas
push
and
int
push
push
test
je
pop
add
loopne
push
fiadd
cld
xchg
test
outs
sub
addr16
arpl
js
dec
mov
sbb
mov
pop
pop
daa
aas
add
xchg
push
(bad)
lods
(bad)
mov
ds
outs
pushf
ins
cmp
dec
add
mov
or
sbb
push
sar
mov
sub
jae
xor
pop
push
xchg
xor
xor
out
scas
leave
icebp
cmp
in
in
xchg
cmp
cld
hlt
or
ins
push
stc
push
fadd
fstp
jae
mov
ret
test
or
mov
ins
idiv
dec
(bad)
mov
into
ds
jmp
pop
adc
push
nop
dec
pop
aam
rcr
dec
sbb
lahf
jne
mov
sbb
add
cmp
sub
ret
arpl
vmovapd
xchg
cmp
je
clc
ja
jno
cdq
jl
retf
mov
es
(bad)
jnp
and
mov
jecxz
inc
and
es
movs
cld
lea
mov
mov
dec
xchg
mov
nop
jmp
scas
hlt
mov
out
cs
mov
adc
ss
or
cmp
jecxz
fnstcw
jg
xor
cmps
call
or
sub
ja
xchg
repz
push
mov
mov
and
fistp
fld
push
(bad)
scas
(bad)
sub
adc
mov
mov
in
push
or
neg
retf
stos
xchg
arpl
dec
outs
push
(bad)
cmp
popa
push
test
inc
rcl
sbb
dec
(bad)
stos
stos
inc
jnp
xor
sbb
adc
dec
test
test
xchg
pop
loope
jne
repz
es
cmp
sub
rcl
jno
or
or
clc
and
pop
inc
mov
xor
mov
xor
ret
test
(bad)
ja
jg
or
fstp
lock
push
inc
enter
ret
cmps
test
ja
lock
out
lahf
dec
jbe
ins
vpsubsw
cmp
inc
movs
xchg
inc
and
sub
xlat
out
test
xor
nop
lea
test
pop
cmp
xchg
stos
add
cs
rcl
(bad)
pop
cli
sbb
nop
jg
int3
jns
ins
(bad)
in
faddp
lahf
jge
dec
or
pop
mov
mov
mov
int3
ficomp
ret
sbb
mov
clc
pop
push
sub
mov
jno
jge
push
fimul
add
xor
int
jge
mov
retf
daa
cdq
xlat
pushf
ins
mov
fucomip
adc
arpl
push
jecxz
cmp
jns
pop
cmp
outs
sbb
aam
inc
std
imul
push
jns
xchg
fild
push
(bad)
cmps
jo
adc
and
jecxz
sti
scas
imul
xor
push
fimul
mov
dec
dec
jmp
aad
ret
ins
sbb
ret
adc
xor
add
inc
lods
mov
dec
xlat
mov
call
mov
sub
sub
ret
jae
enter
inc
mov
ror
mov
fdivr
add
cmp
out
pop
sbb
add
and
mov
popf
mov
mov
pop
jno
leave
jg
add
pushf
and
sbb
xchg
popf
call
data16
out
loopne
jmp
fbld
iret
dec
or
mov
das
arpl
mov
and
fs
dec
sub
movs
in
dec
clc
and
fcom
push
cmp
mov
adc
mov
inc
sub
movups
jae
cmp
mov
mov
call
shl
stos
adc
scas
dec
nop
js
es
and
inc
icebp
inc
pusha
mov
dec
sbb
daa
jg
and
dec
shr
aas
arpl
adc
lock
jg
inc
pusha
push
in
idiv
mov
in
push
stc
mov
xor
arpl
pushf
ins
nop
cmps
nop
add
sbb
lods
ret
es
mov
jo
add
gs
add
dec
mov
inc
pushf
inc
cmp
(bad)
jnp
dec
mov
jecxz
cmp
xchg
into
or
call
mov
pop
rcr
sbb
(bad)
cli
inc
(bad)
(bad)
xor
inc
bound
mov
cmp
jo
push
and
mov
jbe
cld
dec
maxps
add
push
mov
movs
xchg
call
jb
pop
js
mov
mov
pop
dec
daa
add
test
pushf
push
icebp
fmul
or
mov
and
lahf
out
mov
jo
and
shl
fwait
dec
clc
dec
mov
lock
in
cmp
fisubr
or
jb
mov
add
fadd
test
mov
loopne
ret
arpl
stos
add
xor
ja
jl
loopne
(bad)
pusha
stc
jnp
sbb
fcmovb
and
daa
mov
pop
jae
cmps
push
xchg
ret
into
stos
in
mov
ins
mov
int3
mov
mov
mov
dec
cdq
pop
cmp
adc
cmove
or
mov
fstp
inc
jnp
neg
ret
fnstsw
sbb
adc
ret
mov
mov
movs
(bad)
xor
(bad)
call
pop
dec
jl
push
push
jle
sub
movs
inc
aam
je
je
not
stc
pop
pop
or
(bad)
jl
dec
fwait
stos
shr
daa
mov
pop
and
jmp
and
scas
xor
and
test
mov
test
jmp
inc
cdq
gs
pop
sahf
popf
test
inc
push
out
xchg
pushf
and
xchg
pop
sahf
push
add
mov
(bad)
mov
leave
add
dec
cmp
jl
mov
nop
adc
ret
ficom
pop
pop
jle
and
rcr
mov
(bad)
sbb
fistp
push
daa
(bad)
jne
dec
inc
cld
sbb
mov
inc
xchg
jl
dec
or
(bad)
mov
jb
sbb
shl
popa
lahf
xchg
adc
and
or
gs
mov
xchg
in
jmp
mov
mov
mov
xchg
pop
lahf
xor
fs
sbb
lods
dec
add
mov
sub
mov
sub
xchg
movs
cmc
dec
add
fidivr
mov
arpl
mov
sub
pop
std
push
addr16
or
ins
push
mov
lds
cmp
test
jg
and
fidiv
xor
nop
rcl
ret
or
or
hlt
call
jns
push
cdq
dec
add
pop
fstp
into
push
dec
lahf
outs
icebp
fistp
or
jns
ret
dec
push
sbb
dec
in
push
cs
pusha
cmp
adc
cmp
add
mov
xchg
add
pushf
fdivp
xor
adc
xlat
imul
cli
inc
retf
or
xchg
scas
push
inc
push
jecxz
mov
jl
xor
add
call
ds
add
push
sub
jno
neg
neg
adc
push
mov
aad
pop
jl
add
out
enter
frstor
cmp
push
jbe
jo
loop
mov
inc
stos
and
pop
movs
fxch
add
xor
jecxz
test
cmp
repnz
mov
xchg
jno
daa
inc
xor
call
movs
jns
data16
movs
mov
loope
sbb
mov
in
or
(bad)
push
sbb
rcr
xor
jns
pop
(bad)
sbb
arpl
cdq
add
jno
inc
push
add
popf
pop
push
xor
cmp
in
or
jns
sti
test
jae
cdq
dec
inc
dec
sbb
int3
cmp
lock
out
pop
jle
arpl
das
popf
or
mov
test
mov
daa
cmc
rcl
push
les
jae
shr
in
mov
pop
inc
push
test
mov
push
pop
outs
test
into
stos
adc
xor
inc
mov
lahf
xchg
xchg
push
add
push
xchg
out
outs
push
cmp
add
imul
mov
and
fsubr
adc
inc
mov
fdivr
movs
or
sar
retf
or
stos
add
pop
fdivp
xchg
xchg
stos
popf
out
les
cmp
jo
retf
mov
jecxz
dec
lods
or
sbb
or
jmp
enter
xor
ins
add
dec
sub
add
sar
mov
mov
scas
sar
xchg
adc
aaa
ins
imul
(bad)
in
test
pop
out
fstp
outs
jmp
in
repz
adc
stc
xor
les
cmp
pop
(bad)
or
cli
pop
xchg
test
jae
(bad)
scas
fst
sbb
dec
stos
adc
sbb
inc
inc
sbb
dec
xchg
dec
retf
dec
sub
sti
mov
popa
lea
xchg
das
dec
dec
and
lods
cdq
cmps
fiadd
inc
rcr
adc
sub
cs
add
scas
lea
dec
inc
das
test
mov
stos
xor
xor
repnz
add
dec
sbb
out
movs
sbb
aaa
stos
fdivr
clc
test
xor
call
mov
mov
mov
movs
iret
arpl
test
mov
stos
xor
xor
ins
sub
sub
xor
mov
aad
sub
push
push
mov
adc
nop
xchg
cwde
mov
enter
repz
cmp
lea
or
or
push
in
mov
pop
adc
xor
leave
lods
into
scas
inc
or
repnz
shl
out
mov
call
and
mov
mov
and
std
mov
push
inc
cmp
stos
mov
clc
adc
arpl
adc
jle
push
repnz
mul
or
icebp
adc
ror
ss
pop
dec
xor
xor
sub
add
pop
sti
movs
stos
icebp
ror
xchg
sbb
pop
lds
movs
xor
out
or
jb
movs
pop
xchg
dec
cs
xchg
jmp
cmps
inc
push
or
retf
test
mov
and
in
sahf
pop
shl
pop
les
retf
adc
sub
mov
repz
push
inc
repnz
push
or
mov
stos
mov
jns
add
aas
fcmovbe
and
ins
mov
out
repnz
adc
jp
fs
rol
loopne
dec
push
sub
cmp
xor
out
call
lods
lahf
push
xchg
mov
xor
xchg
js
aaa
or
or
push
mov
imul
cmp
cli
div
inc
lock
mov
aas
call
popf
test
jmp
rcl
shl
or
imul
fistp
dec
aaa
sar
data16
mov
and
(bad)
cmps
add
leave
cld
pop
xchg
jae
cmp
out
push
adc
adc
stos
pop
(bad)
vpsrld
cmp
jmp
mov
jle
std
cld
xor
imul
lods
scas
jl
leave
mov
lea
lds
sub
xor
adc
pop
outs
je
data16
xor
push
scas
leave
sbb
pop
pop
mov
push
jae
test
lock
sub
and
push
rol
sub
cmp
scas
es
das
xor
lahf
push
sub
push
sub
hlt
mov
xchg
lahf
pushf
ffreep
sub
fidivr
imul
ss
inc
int
mov
push
ss
cmps
pop
xchg
aaa
adc
imul
(bad)
gs
movs
out
adc
pop
jge
inc
jg
cmp
fwait
movs
and
lss
xchg
dec
xor
dec
pop
sbb
fld
jbe
add
inc
pop
dec
std
mov
jl
jecxz
pop
pusha
xor
movs
fdivp
dec
out
and
or
sbb
jne
pop
pop
leave
jg
adc
mov
sbb
sub
pop
fwait
lods
aaa
in
add
data16
popf
in
sbb
xchg
cmps
not
mov
push
mov
xchg
(bad)
push
cli
mov
pop
pop
int3
retf
push
sub
pop
popf
and
shr
xchg
push
push
(bad)
dec
push
sar
push
std
cwde
std
mov
ret
and
sti
push
loope
(bad)
jle
xor
(bad)
xchg
jo
xor
sbb
mov
scas
jns
and
mov
test
outs
xor
(bad)
lods
ja
dec
xchg
ja
dec
pop
es
mov
(bad)
in
inc
mov
gs
push
and
pop
pop
pushf
out
leave
cmp
out
in
bound
enter
pop
call
mov
loope
ret
inc
jns
sub
jmp
cmp
push
lock
inc
and
lea
mov
test
push
stc
sub
icebp
and
out
jl
sbb
sti
retf
sub
mov
out
xchg
ss
push
xor
mov
mov
dec
(bad)
fisub
loopne
push
and
dec
enter
fwait
and
mov
push
mov
ror
xor
out
lods
imul
or
jnp
mov
pop
ret
cmp
shl
fidivr
push
out
rcpps
into
add
sub
fdivr
fcomi
scas
xlat
add
ss
cmp
mov
inc
imul
lahf
dec
mov
(bad)
jg
dec
ds
mov
arpl
into
push
jle
sbb
adc
push
dec
fnstcw
call
dec
xor
dec
inc
outs
int3
mov
mov
je
mov
retf
pop
call
add
(bad)
stc
in
push
sub
sub
sbb
fmul
loopne
pusha
sub
add
lea
repz
or
icebp
inc
sbb
das
xor
sbb
movs
pop
mov
cld
movs
xchg
dec
pop
fild
mov
cmp
retf
xchg
jge
loopne
test
mov
add
pop
pop
xchg
cmps
nop
sbb
push
mov
scas
cmp
test
adc
int
add
out
jle
and
cmp
js
in
pop
mov
jle
mov
(bad)
mov
push
fistp
mov
pusha
or
pop
cwde
les
movlps
mov
lahf
mov
or
or
daa
push
mov
fild
js
ror
sub
pop
scas
out
cmp
in
sbb
push
xor
fwait
jns
aaa
sub
cmp
scas
stos
pop
or
iret
iret
inc
mov
cmps
xchg
(bad)
shr
xchg
repnz
xor
stos
sbb
popa
add
or
pop
cmp
push
scas
sub
cmp
jp
sub
jle
mov
scas
pop
adc
jns
jmp
and
sub
inc
ror
cmps
pop
sbb
and
leave
xchg
and
xchg
mov
push
adc
sti
out
xchg
adc
ins
push
ss
das
mov
push
aaa
sbb
dec
push
aam
fld
mov
test
nop
pop
pop
adc
dec
out
cmc
mov
jbe
div
add
inc
jo
xchg
jo
div
xor
mov
push
mov
pop
mov
xchg
pushf
mov
inc
pop
loope
sub
ret
test
xor
sahf
jp
inc
sbb
sub
xor
js
push
and
dec
xchg
xchg
aaa
dec
pop
cmp
mov
lods
pop
pop
jl
jl
fucom
out
cmp
loop
inc
icebp
stc
(bad)
add
daa
cli
or
add
push
fidiv
fidiv
add
pop
pop
and
mov
xor
cdq
arpl
iret
cmc
sbb
ins
mov
data16
xchg
sti
mov
xchg
dec
jge
jge
cdq
cld
xchg
pusha
or
aam
into
dec
pop
jmp
lock
add
xor
xchg
test
rcl
dec
xchg
mov
aam
loop
mov
xchg
xchg
add
ins
push
syscall
fnstsw
ja
call
mov
xchg
xchg
fwait
adc
mov
adc
pop
mov
je
loopne
movs
xchg
fdivp
pusha
mov
and
dec
mov
mov
arpl
mov
pop
jns
dec
inc
xchg
push
push
cmp
ret
cdq
mov
fdiv
test
sbb
add
xchg
xor
cdq
jbe
popf
xchg
xchg
mov
dec
xor
popf
retf
mov
fisttp
sbb
test
sub
add
pop
xchg
xor
pop
(bad)
in
test
je
fiadd
push
add
sbb
test
nop
pop
gs
sub
test
mov
xchg
lods
mov
add
or
push
cmps
scas
pop
aas
and
cmp
jae
xlat
sahf
adc
push
jo
sbb
sub
xlat
adc
mov
inc
push
pushf
mov
ds
sub
or
daa
pop
int3
div
into
sahf
out
push
dec
cmp
cmp
adc
adc
inc
pop
outs
js
mov
dec
mov
inc
cmp
adc
(bad)
aad
jl
aam
lea
(bad)
rcr
cmps
lods
int
sub
cmp
lds
call
test
call
add
pop
xchg
test
fstp
fsub
retf
movs
xchg
pop
add
mov
loopne
sub
xor
out
inc
lods
xchg
pop
dec
xlat
jl
stc
popa
ret
movs
(bad)
cli
les
ds
jl
push
jbe
(bad)
je
inc
aad
addr16
repz
aas
out
popa
lahf
out
jae
ins
repnz
fld1
sub
je
nop
sub
pop
ja
in
cmp
imul
mov
cmp
(bad)
sub
cmp
push
cmp
sub
cmc
repnz
adc
jbe
add
hlt
mov
inc
pushf
cmp
push
out
cmps
mov
jmp
rcr
cmp
(bad)
pop
scas
icebp
popa
or
and
stos
or
mov
mov
in
fimul
scas
and
push
cmp
lods
xchg
jle
inc
daa
je
or
adc
dec
xchg
mov
es
pop
push
adc
xchg
push
sub
iret
sub
dec
push
(bad)
xchg
call
int3
jo
add
stos
ins
and
stos
or
mov
xor
loope
jle
pusha
mov
push
sbb
mov
mov
xchg
dec
mov
mov
xchg
rol
jbe
out
dec
int3
push
xchg
(bad)
es
add
lods
or
pop
lods
(bad)
ja
out
push
push
retf
test
loopne
push
xor
cmps
int3
aad
nop
cmp
fst
idiv
fcom
add
lods
arpl
xlat
icebp
add
(bad)
xchg
add
cld
in
cs
mov
fcmovnu
xor
ins
in
mov
pop
push
push
sti
daa
sbb
daa
sub
cmp
xchg
xor
xchg
fidivr
cli
ret
test
pop
push
(bad)
and
scas
jp
(bad)
ficom
adc
xchg
js
fdivr
sub
xor
adc
xor
or
push
or
push
ret
push
enter
mov
add
loope
add
in
mov
sbb
(bad)
fwait
shl
stos
sbb
int3
cmp
xchg
jbe
in
cwde
js
mov
rcr
and
mov
in
outs
pop
xor
pop
test
or
(bad)
xor
jnp
std
imul
sti
int
scas
inc
out
mov
mov
out
in
fsub
sub
mov
add
iret
xchg
sub
inc
inc
mov
pop
pusha
pop
dec
jae
pop
pop
sahf
mov
sysenter
imul
clc
xor
(bad)
jno
add
(bad)
pop
aad
pop
push
leave
enter
mov
jmp
out
jo
stc
aas
data16
jge
fst
jmp
dec
and
lahf
mov
(bad)
lahf
mov
or
rcr
xor
push
jns
out
cdq
adc
lahf
das
retf
cmp
or
sbb
jmp
repz
or
and
fstp
xchg
jmp
lods
inc
inc
cmp
push
add
test
mov
inc
rol
and
gs
fcomi
dec
shl
popa
inc
xor
push
adc
add
aas
mov
pusha
jae
and
(bad)
mov
pop
outs
jecxz
jno
mov
sar
pop
dec
cmp
iret
add
dec
jle
inc
cmp
and
mov
jne
inc
push
jge
lds
push
js
mov
dec
fs
mov
ret
add
sub
mov
sbb
push
sbb
aas
gs
stos
mov
inc
dec
cli
xor
lods
sub
mov
and
add
xor
mov
into
mov
outs
mov
push
push
push
cwde
jno
mov
mov
pop
inc
and
les
enter
mov
enter
cld
fcmovne
jns
push
mov
rcr
inc
mov
dec
mov
or
push
arpl
push
fld
mov
repnz
in
out
pop
sahf
mov
and
push
test
mov
fwait
fs
mov
lahf
popf
(bad)
cmp
push
inc
inc
cmps
(bad)
cmp
xchg
lea
fsub
mov
popa
test
inc
jge
lds
scas
jmp
dec
dec
pop
das
cs
lahf
cmp
sti
or
rcr
fwait
cmp
ret
mov
je
mov
adc
pop
jns
js
cmp
cmp
pop
(bad)
fsubr
adc
push
es
pop
aas
leave
stos
or
sub
xchg
gs
imul
and
push
xchg
aas
cli
xchg
mov
test
std
pop
ss
mov
xor
mov
jmp
shr
(bad)
xchg
mov
or
cdq
push
or
loop
dec
pop
jle
sub
fisttp
sqrtps
cld
rol
addr16
ret
cmps
adc
or
mov
cmp
push
in
sub
lods
xchg
add
test
lea
out
mov
add
fld
pop
je
xchg
mov
das
jbe
loop
pop
adc
clc
div
sbb
jg
lea
pusha
sti
ins
jmp
fsubr
es
test
cli
jge
dec
lahf
daa
cmp
clc
push
mov
push
jbe
clc
inc
cwde
mov
jg
dec
jo
ja
fucomip
mov
or
stos
adc
cdq
sbb
push
out
push
cmps
cli
sbb
ficomp
bound
test
xchg
dec
(bad)
rcl
jl
ror
pop
push
js
sbb
push
int3
addr16
or
xchg
retf
sahf
cmp
pop
arpl
test
aaa
dec
scas
jb
cli
fwait
(bad)
js
cmc
jns
cmc
loopne
xor
push
cmp
jae
outs
in
jnp
js
jecxz
xchg
loope
icebp
sar
dec
repz
repz
in
movs
into
in
sbb
out
cmp
jge
mov
stc
test
xor
popf
inc
cmp
pop
lods
cmp
add
dec
test
mov
sbb
add
(bad)
xor
ja
shl
addr16
mov
pop
sbb
icebp
add
scas
outs
in
cdq
mov
add
inc
xor
dec
jge
sub
xlat
call
xlat
stos
lahf
sbb
test
pusha
cmp
inc
push
fbstp
idiv
xchg
dec
mov
jmp
das
sub
es
xchg
xchg
imul
bound
pop
inc
push
cwde
mov
and
icebp
jge
sbb
push
int
push
lahf
push
neg
loop
loope
stc
int3
ror
das
push
retf
pop
jecxz
xchg
in
adc
cdq
out
or
xchg
scas
fsubr
pusha
aas
xor
stos
sbb
mov
ins
or
add
push
sbb
xchg
cmp
pushw
fisub
lahf
mov
sbb
adc
std
neg
rcl
adc
sub
xchg
cld
adc
mov
dec
cmp
dec
out
push
lods
cmp
add
test
xor
jno
mov
clc
in
lahf
repz
aaa
lds
mov
jne
neg
sub
adc
out
or
sub
repnz
pop
dec
jecxz
jp
xor
xor
xchg
add
add
cmp
jmp
push
loopne
sub
imul
xchg
fild
sbb
jg
repz
pusha
int3
fst
or
ins
and
call
mov
push
sub
xor
movs
(bad)
(bad)
bound
popa
push
pop
hlt
fiadd
pop
add
gs
cmova
and
retf
mov
ss
mov
sub
out
jg
test
dec
fild
inc
fs
cmp
out
(bad)
adc
inc
fcomp
lahf
jae
mov
push
mov
mov
ror
sub
push
adc
rcr
xchg
aaa
outs
fcmovne
leave
or
sbb
popw
dec
repz
or
push
lock
jbe
sahf
dec
cs
or
xchg
mov
arpl
add
inc
sub
icebp
cs
push
cld
pop
jg
mov
aas
cmp
test
xchg
fldenv
and
movs
pop
aam
out
jmp
test
mov
nop
cmps
int3
cmps
fstp
fsubp
scas
ins
or
sub
add
movs
in
(bad)
call
into
lods
mov
xchg
out
clc
push
mov
fcom
dec
sub
aam
push
push
pop
cmp
push
jmp
mov
adc
xchg
call
mov
in
dec
and
dec
and
ficomp
call
fistp
out
push
cmp
add
pop
xchg
sbb
les
jae
sar
js
xchg
iret
cmp
dec
sub
mov
xchg
xor
add
mov
(bad)
and
aad
cs
xchg
add
xchg
mov
retf
(bad)
pop
psrlq
mov
(bad)
cmp
push
xchg
jae
pop
out
add
enter
out
pop
ds
jge
sbb
pop
std
adc
adc
mov
xor
sbb
ret
rcr
dec
ficom
popf
and
cmps
cmp
pop
cmp
(bad)
xlat
shl
adc
xor
jge
lds
xchg
mov
add
mov
push
es
mov
pop
mov
mov
outs
dec
fisubr
scas
bound
test
scas
and
jb
mov
xchg
imul
sti
dec
xchg
mov
in
lock
sub
call
pop
cdq
jb
test
(bad)
mov
jae
(bad)
cdq
xchg
out
lods
mov
or
sub
and
pop
div
(bad)
popa
loopne
dec
cli
ss
arpl
js
jb
mov
jl
aaa
jbe
xchg
in
pop
sbb
aaa
mov
pop
cs
dec
addr16
ficom
cmps
lods
dec
(bad)
rcl
fadd
mov
push
add
sti
in
sub
push
jns
call
out
inc
jl
fild
mov
xchg
pop
jmp
out
sbb
int3
in
fidivr
and
out
mov
test
dec
sub
mov
sbb
stos
mov
cmp
lea
mov
(bad)
cmps
das
daa
dec
and
inc
scas
popf
xor
rcr
(bad)
cmp
(bad)
rcl
mov
push
pop
mov
cdq
add
addr16
xchg
(bad)
add
pop
ret
dec
es
int3
sbb
sbb
sar
and
adc
pop
repnz
out
lahf
xor
sbb
sub
loopne
daa
sti
push
push
mov
call
shl
repz
xchg
pop
scas
cmp
inc
arpl
mov
rol
retf
or
jl
in
cwde
imul
mov
movs
mov
mov
ffree
cmc
frstor
shr
cdq
in
lock
aaa
mov
rcr
bound
pop
ret
ror
xchg
imul
inc
cld
xlat
xor
stos
and
adc
push
loop
mov
test
pushf
fcom
scas
xchg
sbb
nop
mov
add
mov
in
lods
rcl
push
les
inc
or
fidiv
dec
cmp
rcr
jne
int3
out
loop
cmp
xor
out
loope
leave
sbb
push
mov
sbb
jmp
adc
or
sbb
jae
sar
add
std
inc
pop
add
sub
jp
sub
xor
push
mov
fisubr
(bad)
adc
(bad)
push
std
in
imul
adc
aam
add
pop
push
adc
dec
pop
hlt
fbstp
mov
out
repnz
sbb
cld
shl
arpl
cmp
or
out
dec
mov
inc
dec
push
lock
into
mov
cmp
lock
adc
pop
(bad)
fs
pop
imul
and
dec
mov
fs
sbb
test
rcl
push
mov
cmc
imul
movs
sbb
fwait
rcl
aad
repz
mov
ja
or
addr16
rcl
jae
mov
cmps
std
icebp
fisub
not
idiv
adc
inc
stos
or
div
adc
(bad)
xor
mov
mov
jecxz
mov
mov
(bad)
jne
push
out
nop
pop
cmp
clc
pop
cmp
pop
pop
pop
add
retf
stc
enter
into
cmp
jecxz
dec
add
adc
aad
popf
pop
jne
xor
xchg
les
or
push
jmp
pop
in
clc
stos
enter
stos
(bad)
arpl
(bad)
aam
int3
and
or
cdq
xchg
add
mov
add
sbb
(bad)
mov
call
imul
pop
add
outs
push
popf
mov
ds
fs
fimul
xor
xor
retf
fs
xchg
mov
sbb
cmp
loope
sub
xor
jle
inc
out
jns
mov
xor
fmul
jle
lea
sahf
jmp
std
enter
mov
pop
and
sub
in
retf
pop
icebp
or
sar
adc
mov
pop
cmps
mov
lods
xor
call
in
mov
sbb
lds
pop
jle
ja
pop
inc
mov
add
fcomp
aaa
ss
inc
pop
and
mov
ja
fwait
ror
iret
mov
adc
mov
outs
retf
sahf
or
mov
sbb
(bad)
mov
leave
daa
lods
out
xor
daa
pusha
mov
push
pushf
aas
mov
sub
cmp
mov
and
adc
into
dec
loopne
push
vpshuflw
mov
cmp
inc
jnp
std
dec
pop
mov
loopne
mov
xchg
(bad)
aam
cmc
push
jmp
inc
js
pop
pushf
dec
inc
adc
cli
pop
jmp
call
imul
mov
cmp
ror
(bad)
mov
mov
xchg
jle
pop
mov
and
fsubr
xor
push
shl
mov
and
sahf
cmp
mov
dec
and
pop
xor
adc
sub
jmp
aam
out
push
jno
out
sub
mov
stc
cmp
cmp
pop
mov
imul
arpl
jle
xor
mov
jmp
or
pop
repz
lock
in
aas
xor
or
jae
sbb
jp
jnp
enter
push
outs
repz
mov
call
mov
push
mov
sahf
bound
mov
mov
popa
add
sbb
pusha
out
pop
stos
and
das
sub
stos
cs
pop
xchg
dec
xor
fucomip
push
mov
daa
ss
jge
sub
and
xchg
fist
cwde
enter
xchg
test
je
pop
cmp
pop
dec
xor
popa
shl
retf
adc
push
cdq
sbb
repnz
inc
mov
jae
xchg
push
and
pop
out
jge
push
mov
push
inc
loopne
jnp
jecxz
test
mov
cmps
and
push
popa
cmc
ret
das
inc
lock
je
xchg
mov
inc
xchg
jecxz
xchg
repnz
adc
jmp
inc
mov
xchg
or
cmp
sbb
mov
push
dec
xchg
sub
nop
pop
scas
lods
in
shl
in
popa
outs
mov
xchg
mul
mov
pop
iret
add
repnz
ja
sbb
cs
movs
jnp
repz
add
inc
popa
sbb
dec
ret
mov
(bad)
je
daa
movs
push
fstp
dec
(bad)
loop
add
dec
gs
or
imul
inc
jns
pop
test
xchg
stos
ret
data16
push
mov
add
mov
js
bound
pop
call
adc
fild
cmp
dec
lods
cmp
mov
and
ror
xchg
push
shl
fs
out
mov
pop
push
pop
fbstp
aas
ds
(bad)
inc
cmps
arpl
not
sub
jmp
push
or
fld
xor
data16
ret
mov
(bad)
pop
std
cmp
adc
push
jno
ror
mov
loop
int3
jae
(bad)
xor
and
mov
js
mov
fidivr
adc
call
sub
push
jmp
jmp
add
pop
push
pop
mov
xlat
hlt
xchg
xor
repnz
data16
dec
lea
xchg
test
dec
jne
xchg
adc
jnp
jno
push
jo
xchg
icebp
sbb
push
imul
xchg
in
pop
jl
ret
(bad)
ins
dec
cmp
push
dec
push
mov
and
push
mov
inc
(bad)
mov
hlt
jnp
retf
out
call
xor
jmp
(bad)
mov
or
mov
jb
dec
pusha
test
pop
int3
adc
ror
repnz
xchg
xor
shl
inc
test
inc
push
test
inc
cwde
(bad)
or
inc
xor
cli
retf
shr
test
dec
lods
cmp
das
jmp
push
(bad)
lahf
inc
das
test
sahf
cmp
(bad)
dec
int
pop
adc
jp
mov
ins
ds
retf
test
cdq
cmps
adc
out
out
arpl
jo
or
or
scas
gs
or
mov
ja
popa
mov
(bad)
jge
rcr
mov
inc
xor
sti
inc
fisub
cli
outs
push
lahf
adc
mov
outs
shl
test
jmp
les
prefetch
je
ss
jns
jo
test
mov
mov
call
cwde
scas
test
(bad)
sbb
mov
ins
xor
mov
fwait
fwait
lahf
lock
xchg
lods
and
inc
scas
mov
loop
jl
test
(bad)
mov
scas
mov
fsub
pop
jne
mov
sub
add
pop
sbb
adc
loop
jns
test
add
stos
jle
push
jb
sub
iret
sbb
xchg
lods
aad
fdivr
(bad)
loopne
test
test
ss
(bad)
fild
lahf
scas
paddq
(bad)
in
(bad)
pop
add
mov
xor
xor
and
add
pusha
mov
xchg
test
stc
scas
scas
cmps
les
mov
aam
out
xor
cld
adc
dec
outs
fdivr
hlt
fsub
jnp
cwde
mov
push
sbb
sti
pop
xchg
sbb
js
fsubr
aaa
or
cld
adc
shl
jns
push
cld
stc
xor
mov
sar
movs
push
sub
fwait
mov
aam
or
pushf
dec
lds
xchg
aam
aas
xor
or
pop
pop
mov
aad
push
mov
mov
aas
sahf
js
scas
int
jae
gs
mov
sub
test
fild
retf
inc
loopne
jb
or
add
cmp
or
ret
xor
mov
arpl
lods
pop
ja
in
test
out
stos
pop
repz
push
push
cmp
mov
or
dec
repz
mov
mov
jge
std
sti
xchg
ror
cmpxchg
add
or
mov
hlt
movq
clc
sbb
into
adc
sahf
jne
mov
sbb
mov
mov
(bad)
fmul
into
iret
xor
enter
clc
xor
in
std
xchg
shl
cmp
into
cmps
test
dec
jmp
add
pop
jmp
ins
jns
ss
fcomp
push
add
ror
xchg
ins
jl
mov
mov
(bad)
sub
loop
adc
mov
cmp
arpl
xchg
dec
cmp
dec
and
dec
repnz
push
mov
and
jmp
dec
lds
call
data16
dec
xchg
inc
mov
dec
cmp
push
int
sub
cwde
pop
mov
nop
pop
push
adc
sbb
mov
sbb
fmul
dec
scas
pop
xchg
sbb
bound
or
fs
xchg
jns
sub
maxps
jmp
stos
test
sbb
ret
pop
jge
shl
sti
push
das
ja
adc
sahf
jbe
xor
or
fidiv
sub
aas
mov
pop
js
mov
ret
data16
cmp
dec
jg
cwde
mov
shr
jb
leave
add
loop
(bad)
sub
je
or
cmp
cmc
push
loope
sahf
call
cmps
jno
push
call
mov
xlat
jecxz
leave
sti
cmp
(bad)
sbb
loop
or
movs
add
xchg
dec
inc
pushf
sub
jbe
fild
cmp
out
push
stc
mov
lods
dec
aaa
xor
ret
jns
sub
pop
outs
sub
fs
or
sub
push
and
clc
xor
arpl
cmp
adc
xor
cld
pop
mov
fisub
mov
and
aam
fs
mov
(bad)
or
aaa
repz
xchg
bound
xchg
ss
ret
xchg
lods
pop
(bad)
fmul
out
mov
mov
mov
pop
test
lds
jg
cdq
cmp
daa
cs
shr
pop
jecxz
sub
fld
stc
dec
(bad)
add
stc
rol
push
adc
(bad)
push
fcmovbe
sub
mov
call
xlat
stos
jmp
dec
lea
repz
into
xchg
fidivr
sbb
adc
cld
mov
jbe
fistp
and
je
lods
inc
inc
dec
call
xor
xchg
(bad)
lods
retf
aam
sub
push
xchg
stc
xchg
lock
xchg
push
sti
arpl
sar
cmps
jg
jmp
lea
mov
cmp
adc
in
lsl
sub
mov
ds
mov
sti
push
aam
cdq
ja
sbb
icebp
cs
cmps
mov
jnp
call
inc
push
in
jo
dec
pop
test
aas
cmps
pop
dec
ret
lea
test
fimul
ret
rcl
sub
int
cmps
jae
add
dec
adc
pop
call
adc
(bad)
aam
sbb
scas
leave
ins
(bad)
pop
add
mov
dec
push
or
inc
retf
adc
mov
test
mov
pop
xchg
inc
fsub
stos
dec
mov
loopne
xchg
in
ret
or
mov
retf
or
xor
adc
or
add
out
aaa
arpl
sbb
fcom
mov
jg
or
mov
add
rol
fisubr
icebp
loop
mov
jo
js
shr
jno
into
retf
repnz
in
mov
mov
mov
jmp
ins
lods
sbb
das
xchg
xor
add
jns
inc
push
cmp
fidiv
cmc
outs
inc
inc
enter
mov
cmp
dec
adc
sbb
lea
mov
iret
and
pusha
cwde
mov
retf
inc
stos
cli
cli
pop
or
scas
cmp
cmp
jge
sti
jb
fucomip
cwde
add
ins
popf
mov
gs
imul
(bad)
inc
jp
test
loopne
pop
adc
retf
(bad)
loop
or
lods
or
cwde
in
in
xchg
cmp
mov
dec
add
sub
jae
call
leave
mov
push
mov
inc
je
sbb
adc
jge
add
test
int3
stc
sbb
repnz
stos
or
pop
mov
retf
call
mov
sbb
mov
adc
pop
inc
add
dec
or
lahf
std
mov
dec
es
in
inc
jl
shr
push
into
push
mov
in
xchg
xor
retf
or
fs
lea
iret
jb
repz
pop
mov
outs
or
aad
mov
and
out
and
gs
adc
mov
or
dec
retf
ins
inc
inc
mov
mov
xchg
fcmovnbe
aam
daa
adc
mov
xor
and
sub
and
xchg
adc
xor
stos
repz
inc
test
and
in
(bad)
mov
nop
mov
sti
es
ret
scas
cwde
idiv
mov
nop
push
or
adc
sub
inc
stos
mov
ror
lea
adc
out
sub
call
or
adc
mov
aas
inc
movs
mov
call
ror
int
dec
je
jg
push
js
int3
pop
out
push
ss
jmp
pop
test
xor
jle
sar
adc
fs
mov
cmp
mov
sbb
mov
iret
sub
lods
adc
(bad)
or
adc
add
out
es
cmp
sar
fldenv
lahf
inc
in
mov
retf
pushf
das
mov
sti
push
mov
dec
cld
mov
out
jg
sub
jmp
jge
bound
mov
popf
mov
mov
push
mov
pop
inc
outs
dec
sub
ins
in
jle
les
(bad)
js
jnp
or
pop
mov
cwde
push
lds
mov
scas
loopne
or
xor
pop
xchg
sar
fst
cwde
xor
leave
sahf
rcl
fwait
(bad)
icebp
jnp
ins
mov
inc
je
dec
test
mov
jle
mov
add
in
test
pop
dec
mov
inc
rol
rcl
leave
pushf
xchg
add
movs
dec
gs
mov
icebp
call
ficom
jecxz
jmp
aaa
(bad)
ror
mov
movs
lods
sub
jge
inc
scas
ror
pop
loop
cmp
repnz
jns
and
daa
or
mov
dec
pop
leave
mov
cwde
iret
add
dec
cmc
xchg
add
mov
inc
xor
sar
mov
sub
mov
and
mov
mov
popa
das
mov
(bad)
(bad)
pop
dec
jnp
add
fsub
das
sbb
mov
test
dec
mov
push
jno
sub
fdiv
jne
daa
mov
xchg
sbb
aaa
int3
retf
pusha
lods
int
pop
mov
push
mov
out
or
xchg
cmc
inc
mov
or
dec
sbb
arpl
fs
sbb
scas
data16
cmps
pop
sar
mov
pusha
mov
sub
dec
outs
leave
jmp
dec
or
mov
cmc
outs
jmp
fs
mov
test
nop
pusha
and
stos
dec
stc
inc
lock
inc
in
ret
push
mov
retf
sbb
test
scas
sar
pusha
mov
push
xchg
addr16
xchg
(bad)
adc
pop
jae
aas
scas
in
xchg
adc
or
jb
aaa
or
aam
and
or
mov
pop
jne
xor
xor
add
fwait
xor
jge
fs
addr16
push
sti
div
(bad)
xor
call
push
mov
sar
call
test
cmp
jl
div
ret
jecxz
in
xor
rcl
into
addr16
aaa
es
loop
retf
push
iret
and
icebp
pop
push
sar
sbb
sbb
fstp
pushf
and
call
push
test
mov
sbb
fmul
xchg
lods
lods
pusha
sbb
js
mov
icebp
push
popa
and
cwde
lea
ret
lods
xor
push
dec
push
shl
add
mov
adc
(bad)
sub
mov
cli
jbe
das
lahf
sbb
imul
xor
or
int
div
cmp
ds
fnstcw
ds
sub
call
adc
hlt
adc
hlt
mov
scas
inc
in
fcmovnb
inc
cld
push
jo
xor
stos
jb
pop
sub
(bad)
lahf
cli
pop
jecxz
cwde
outs
out
fistp
add
or
sbb
xchg
cs
jmp
mov
push
dec
(bad)
push
push
and
jo
int
jnp
xor
test
pop
ss
ins
into
mov
sub
leave
sar
sub
xor
push
mov
fsub
int
int3
call
outs
dec
mov
aam
jmp
(bad)
push
jl
imul
loope
or
(bad)
push
mov
pop
cmp
fisub
jg
aas
xchg
dec
scas
xlat
mov
adc
fs
movs
cs
cmp
mov
jo
jecxz
xor
dec
call
pushf
rcr
retf
xchg
inc
cmp
sub
mov
jne
mov
clc
iret
aaa
sub
fneni(8087
and
enter
add
int3
call
xchg
push
jmp
jo
aam
ins
xchg
daa
pushf
mov
lods
jmp
ficom
in
dec
js
not
sub
ins
call
push
iret
out
ror
sub
pusha
ja
call
xor
and
test
dec
fist
test
in
add
cmp
in
cmp
stos
rol
sbb
mov
inc
sbb
push
xor
fld
lods
popa
out
sub
popa
(bad)
xchg
ins
jnp
scas
sbb
enter
aas
cmp
pushf
test
scas
dec
fsubr
icebp
pop
shl
cmp
gs
cld
xchg
push
mov
jnp
ins
and
pop
fidivr
jecxz
icebp
mov
(bad)
enter
icebp
dec
adc
jno
ret
iret
into
pop
addr16
inc
mov
and
mov
cli
mov
xchg
test
mov
inc
outs
(bad)
in
loopne
dec
push
scas
mov
xchg
jb
mov
xor
mov
loope
add
add
mov
outs
xchg
mov
or
jno
daa
cwde
ror
test
test
(bad)
inc
cli
test
hlt
pop
mov
dec
mov
pop
rol
sub
pop
adc
(bad)
jge
cmp
rcr
sub
(bad)
lea
pusha
repz
mov
mov
call
js
fisttp
cmp
lods
fstp
test
mov
jecxz
xchg
adc
xchg
jb
call
pop
xchg
icebp
cs
repnz
dec
sti
int3
and
stc
push
out
dec
(bad)
js
loop
mov
sub
int
ins
adc
scas
jmp
int
stos
aad
xchg
add
mov
(bad)
std
retf
aam
ins
mov
adc
pop
jg
xor
lock
fstp
inc
scas
pop
div
pop
inc
je
dec
mov
(bad)
or
call
call
mov
(bad)
cld
sub
cmp
mov
cmps
sub
fidivr
cmp
jmp
mov
ret
push
cwde
xchg
pop
xchg
push
fnstsw
or
aad
repnz
(bad)
fnsave
mov
push
xchg
push
and
cmp
imul
(bad)
movs
hlt
out
das
xlat
outs
mov
fisubr
xor
ret
sbb
(bad)
fstp
pop
inc
xor
push
popf
(bad)
test
adc
(bad)
test
retf
push
jbe
(bad)
mov
jp
xchg
and
sbb
in
pop
pushf
test
jns
inc
push
ins
out
adc
test
ret
je
add
ds
fwait
inc
call
stos
stc
adc
out
aad
ins
pop
cmps
pusha
int3
xor
aas
mov
ins
mov
inc
inc
add
nop
cmps
jmp
xlat
adc
lahf
in
adc
mov
cmp
xchg
imul
popf
cwde
pushf
stos
mov
inc
xchg
cwde
call
xor
loope
jb
iret
out
call
push
leave
mov
in
movs
iret
hlt
sar
jo
adc
aas
mov
mov
rcr
add
jl
xchg
in
mov
scas
xor
or
mov
mov
sub
int3
push
xor
mov
retf
jnp
xchg
ret
add
pop
aaa
adc
in
shl
push
hlt
jns
jecxz
fs
test
int3
pop
xchg
and
in
xchg
or
push
inc
dec
sub
dec
fld
xor
leave
rcr
cmp
mov
adc
clc
push
mov
ja
mov
daa
int
mov
dec
xor
cmp
dec
or
mov
pushf
push
lea
outs
inc
mov
pop
and
push
mov
sbb
inc
lds
mov
lods
adc
test
push
jo
adc
adc
or
(bad)
push
pop
cmp
call
jecxz
popa
clc
jecxz
jmp
out
lahf
cmp
aad
or
push
and
sub
cmp
mov
jmp
and
into
add
cmps
(bad)
lea
mov
pop
jo
sbb
scas
pop
push
adc
cli
cld
push
ja
loop
push
in
cdq
fidivr
xchg
ds
jmp
loopne
cmc
cld
sub
loopne
scas
ins
mov
inc
ja
or
cwde
and
daa
test
dec
dec
aad
dec
adc
test
inc
push
inc
xchg
out
and
outs
fwait
mov
pop
push
lods
(bad)
add
retf
or
or
test
aam
jle
jp
int3
mov
ret
sbb
rol
lahf
mov
ret
rcl
sahf
inc
int3
xor
pop
bound
inc
mov
call
and
xchg
sbb
pusha
arpl
dec
fs
das
in
popf
jmp
rcr
mov
inc
call
rcl
add
pop
jno
inc
outs
push
fs
stos
mov
pop
lahf
push
aad
mov
xchg
leave
popa
test
pop
xlat
pop
dec
push
out
fistp
jg
movs
inc
mov
(bad)
cs
into
inc
mov
std
stc
or
stc
fistp
not
xor
and
jl
out
mov
jge
and
mov
xchg
mov
push
xor
(bad)
inc
les
and
ret
ret
int3
xchg
test
add
out
dec
lahf
stos
jb
xchg
or
cld
sub
cmp
repnz
adc
add
stc
xor
mov
jmp
mov
data16
push
retf
push
daa
xchg
daa
test
mov
push
fcmovb
xchg
imul
pop
mov
loope
lods
mov
mov
sub
adc
lea
and
add
mov
adc
pop
out
sub
jo
sar
into
or
lock
fs
repz
pop
jbe
adc
iret
test
mov
jbe
or
mov
xchg
aas
mov
bound
fisub
push
lea
add
xor
popf
and
mov
add
mov
(bad)
jp
data16
ss
mov
aam
xor
jle
imul
mul
outs
or
ror
sar
popf
dec
lock
arpl
inc
mov
(bad)
call
stos
mov
or
jp
sub
add
pop
mov
add
sub
sbb
sub
popa
rcr
inc
out
sub
mov
jmp
int3
adc
cwde
rcl
xchg
out
cmp
fbstp
cld
add
mov
arpl
les
inc
jbe
je
inc
sbb
xchg
mov
pushf
retf
clc
pushf
cmp
daa
inc
jl
int
ins
pop
xchg
lods
sbb
mov
dec
mov
jae
mov
mov
test
clc
add
fcomi
es
pop
push
add
aad
call
pop
xchg
jae
sbb
retf
pop
imul
xor
cwde
in
and
jle
adc
test
lods
add
add
cmp
hlt
scas
pop
(bad)
pusha
mov
adc
dec
(bad)
dec
xor
pushf
sbb
cli
and
les
adc
push
xor
sub
pop
cld
fdivr
pmaxsw
pop
mov
repz
in
cwde
sub
push
or
pop
jmp
inc
mov
js
mov
iret
jmp
adc
jl
add
out
jae
ja
ja
inc
inc
lahf
mov
in
out
mov
aam
xor
outs
ficom
or
fstp
ret
dec
out
gs
dec
adc
sub
xor
loop
mov
fsub
add
cmp
or
fist
fadd
or
cdq
xchg
repnz
sbb
rcl
cmp
pop
clc
aas
(bad)
scas
ret
fisubr
xchg
repz
mov
pop
xor
je
test
xchg
and
add
(bad)
and
and
and
cmp
dec
sbb
pop
sbb
push
fbstp
adc
repz
add
pop
sub
iret
jb
mov
jnp
ja
(bad)
pop
bound
retf
mov
jge
jo
push
stos
adc
dec
mov
push
into
in
fstp
pusha
sub
fdiv
shr
xabort
push
stc
leave
iret
mov
jmp
and
adc
push
retf
mov
add
and
out
test
sbb
add
jmp
mov
test
push
or
sub
jne
enter
fstp
rol
mov
mov
leave
mov
fwait
ins
outs
dec
cmps
mov
sub
inc
test
push
mov
in
inc
js
cdq
cmp
inc
lods
and
int
das
je
test
inc
fmul
aaa
or
xchg
mul
pop
sub
shr
ja
mov
sub
ss
addr16
cmp
icebp
jb
je
ins
int3
jns
(bad)
xor
mov
mov
mov
mov
inc
repnz
ror
push
loopne
jge
mov
mov
fwait
push
jae
test
dec
retf
retf
inc
lds
sti
dec
out
adc
loope
hlt
push
mov
(bad)
and
outs
xor
xchg
add
retf
pop
sbb
push
mov
jmp
rol
les
add
xor
lods
js
mov
adc
mov
xchg
xchg
add
mov
icebp
movs
loope
icebp
inc
mov
adc
test
test
cwde
and
inc
dec
loop
(bad)
ror
dec
je
or
xor
mov
dec
and
js
sbb
adc
xor
mov
mov
scas
add
loope
scas
into
ret
mov
pop
push
leave
in
sti
jmp
sub
cmp
sub
push
arpl
(bad)
inc
inc
and
loopne
mov
sub
mov
sub
xchg
pop
cli
cmp
sbb
adc
movs
in
mov
fisub
mov
inc
dec
sbb
cwde
xor
cmps
shr
gs
int3
inc
xor
movs
mov
popa
lea
adc
imul
or
outs
pop
dec
ret
sbb
sar
dec
or
hlt
iret
sub
xchg
add
lds
pop
inc
sub
jmp
jecxz
mov
loop
inc
ret
pop
ds
ret
fmul
fnstsw
mov
(bad)
out
push
and
fisubr
das
movs
fiadd
call
xor
mov
ror
stc
xor
in
sub
inc
sub
inc
mov
or
ins
push
pusha
jp
lea
cdq
add
arpl
(bad)
add
test
(bad)
mov
sub
aaa
adc
or
jnp
mov
dec
sbb
or
xlat
gs
push
dec
jo
dec
scas
pop
dec
repnz
pop
xchg
mov
icebp
sub
push
jg
scas
push
pop
or
mov
mov
sbb
dec
into
xor
xlat
jecxz
repz
(bad)
adc
jge
fs
std
lods
nop
push
or
sbb
rcl
pop
outs
(bad)
adc
(bad)
adc
out
jl
jl
repnz
xor
addr16
imul
mov
aaa
int3
and
aad
test
sub
test
inc
inc
ins
test
cdq
inc
push
sub
xchg
ins
fbld
sbb
outs
cs
pop
mov
lds
popf
xor
pop
xchg
popf
sub
daa
js
and
movs
iret
xchg
mov
inc
inc
xor
jns
inc
xor
mov
lea
mov
sbb
push
fwait
and
(bad)
jmp
sbb
cmc
inc
femms
add
sbb
jle
js
out
xchg
mov
dec
xchg
adc
mov
movs
and
in
pop
movs
xor
push
sbb
call
adc
sbb
add
out
cmc
sbb
icebp
aam
and
(bad)
mov
(bad)
test
mov
pop
inc
aaa
aaa
lahf
cs
popa
imul
inc
imul
sbb
push
imul
hlt
je
mov
retf
call
popf
jmp
dec
pop
push
mov
clc
dec
mov
retf
xor
mov
lock
mov
dec
sti
and
mov
mov
scas
adc
cmp
dec
mov
xchg
(bad)
jle
call
adc
dec
addr16
dec
outs
cmp
in
pop
cmp
mov
push
call
stos
jmp
test
lock
pop
loopne
fcom
lea
jnp
mov
gs
fst
scas
cmps
aad
fcom
retf
addr16
and
movups
jb
mov
bound
sub
(bad)
dec
push
cdq
cld
push
push
clc
sub
jno
mov
fdiv
mov
out
sbb
add
sub
sub
frstor
xchg
adc
(bad)
mov
dec
arpl
sub
movhps
push
add
mov
cli
bound
add
adc
push
or
test
mov
scas
shr
enterw
adc
sub
je
pop
adc
mov
retf
jbe
push
outs
xchg
and
hlt
xor
or
xchg
sub
xor
push
sbb
mov
add
jae
sar
mov
push
dec
add
scas
or
mov
test
or
dec
icebp
stos
pop
les
cmp
es
mov
leave
sbb
shl
test
ja
or
enter
call
test
push
or
xchg
push
(bad)
enter
(bad)
xchg
loopne
jp
sar
out
aad
out
xchg
xchg
cmp
pushf
pusha
popa
jmp
adc
movs
push
cmp
pop
jb
add
imul
jle
out
dec
jg
push
out
push
dec
bound
js
push
test
and
or
ficomp
les
xchg
sbb
jp
mov
mov
xchg
imul
push
out
in
aas
scas
jbe
cwde
and
(bad)
call
cmc
jmp
mov
xlat
push
ja
bts
push
lods
or
pop
das
repz
in
loopne
and
pop
mov
jge
adc
pop
cmp
lods
neg
mov
or
fs
jp
adc
mov
arpl
ins
pop
mov
mov
mov
cmp
adc
ja
sbb
mov
mov
fcom
stos
sub
bound
mov
cs
pop
xchg
aad
xchg
aas
fcom
not
add
js
(bad)
sub
lahf
mov
push
xor
pop
in
sbb
inc
or
pop
mov
scas
mov
cmp
das
xor
adc
movs
sbb
(bad)
stos
push
dec
dec
in
addr16
cmp
rcl
pop
jno
add
es
dec
ret
call
inc
pushf
gs
in
test
(bad)
adc
bound
test
adc
loop
mov
or
xchg
mov
inc
call
push
push
out
add
nop
popaw
stc
call
nop
xchg
mov
aam
jbe
cmp
sub
mov
sti
les
push
xlat
pusha
arpl
scas
or
adc
mov
str
dec
mov
xor
mov
xchg
cli
mov
lods
dec
aas
dec
hlt
xor
gs
clc
inc
enter
cmp
or
test
icebp
mov
jl
data16
dec
xlat
adc
mov
sub
push
js
out
dec
push
sbb
sbb
adc
fsubr
ret
cmp
es
pop
les
cmps
movs
loopne
stos
xchg
test
stos
sbb
(bad)
dec
sbb
loope
(bad)
ins
pop
ja
inc
and
mov
and
mov
fstp
mov
xchg
imul
dec
sub
loope
and
inc
mov
mov
mov
jae
xchg
out
sub
dec
mov
inc
xlat
pusha
stos
enter
adc
adc
dec
iret
xchg
push
outs
repz
rcl
add
out
iret
xor
cmp
lea
inc
sub
fistp
dec
cwde
movs
push
retf
or
cmp
ret
ja
inc
sbb
fistp
mov
and
mov
inc
(bad)
sahf
push
mov
in
idiv
cmp
sub
pop
pop
push
mov
sub
push
jle
jmp
jmp
arpl
jg
or
mov
mov
shr
jbe
inc
out
sar
xchg
ins
cmps
out
mov
sub
inc
add
ret
shl
vpshad
xchg
mov
loopne
sahf
inc
rcl
jae
xor
dec
fisubr
test
dec
cmp
out
test
inc
or
pop
cmp
sub
loopne
ret
cmc
or
fwait
or
call
xchg
(bad)
cmps
jb
xlat
ror
(bad)
ret
mov
daa
aas
mov
out
gs
hlt
or
iret
jp
adc
lea
bound
cmc
mov
inc
cs
adc
xor
sbb
pusha
adc
jnp
pop
shl
mov
jb
rol
adc
sbb
stc
xchg
icebp
inc
cmp
les
adc
cmp
(bad)
jp
bound
push
mov
adc
add
add
std
ins
lods
jo
in
aad
and
xor
cmp
mov
jb
aaa
in
jg
jecxz
lods
add
push
fdiv
inc
add
dec
mov
cmp
sbb
pop
cmp
jmp
dec
sbb
xor
add
sub
xchg
inc
outs
add
jnp
iret
outs
(bad)
push
mov
sbb
std
scas
int
dec
popa
jo
jmp
sar
mov
mov
ror
cmps
bound
and
sti
pushf
inc
bound
je
jo
outs
jno
bound
inc
mov
mov
fcom
fs
push
daa
aam
(bad)
cwde
pop
mov
fwait
xchg
mov
ss
or
outs
pop
cmps
add
cmc
jno
repnz
test
jg
mov
(bad)
push
cmps
repnz
dec
cmp
aad
push
push
sub
sbb
xchg
aas
loop
and
xor
jns
sar
(bad)
shl
pop
xchg
test
push
stos
cli
xchg
push
(bad)
mov
xor
dec
out
test
aad
add
push
jnp
lahf
push
scas
(bad)
call
outs
xor
xor
jge
xchg
arpl
mov
fnstcw
push
retf
or
pop
cdq
inc
and
xchg
arpl
adc
(bad)
push
sub
dec
pop
sub
fnstenv
xor
jle
add
mov
xchg
das
push
inc
mov
inc
push
mov
cmps
xchg
sar
pop
cmp
push
out
lahf
rcr
xor
push
lds
mov
gs
cdq
add
mov
mov
pop
xchg
jae
leave
sub
js
cmps
and
cmps
(bad)
xchg
sub
aaa
ds
imul
les
scas
cmp
sub
push
mov
inc
xor
pop
sbb
cmp
into
pop
jne
lods
xchg
xchg
cwde
lea
call
test
pop
rol
(bad)
pushf
lahf
adc
jmp
push
cli
sti
loopne
fld
add
xchg
(bad)
fmul
lods
or
push
ror
dec
call
push
push
bound
retf
stos
jbe
xchg
push
fisubr
and
mov
(bad)
jmp
adc
jno
out
mov
mov
loopne
sub
xchg
lods
jecxz
mov
jb
push
xor
push
jle
push
pop
inc
push
iret
ins
xchg
mov
hlt
fmul
mov
push
cmp
jne
aam
ins
fst
(bad)
mov
add
mov
rol
bound
mov
mov
loop
lahf
lds
sahf
arpl
inc
shl
in
mov
lahf
jg
jno
or
dec
lds
xchg
int3
sti
cmp
xchg
mov
arpl
jae
xor
push
or
push
adc
sbb
sar
xchg
sub
push
dec
ds
xchg
add
inc
inc
std
mov
add
(bad)
push
loop
pop
cmc
ins
retf
sahf
fld
pop
mov
pop
cld
(bad)
mov
ds
call
jg
mov
dec
fstp
leave
cli
fisttp
mov
shl
cmp
fstp
neg
mov
pop
cmp
jecxz
dec
or
in
(bad)
cmp
mov
adc
out
push
(bad)
jl
xchg
xchg
xchg
xchg
jmp
bound
jnp
(bad)
cmp
sar
das
loope
adc
jmp
push
lahf
or
mov
pop
shr
fldcw
mov
and
cdq
fmul
cmps
pop
(bad)
push
push
sbb
and
sub
(bad)
retf
cmp
ret
add
fisubr
aad
dec
pop
gs
lds
mov
mov
imul
outs
leave
sub
sub
stos
mov
mov
add
sar
or
inc
sbb
stos
adc
cld
pop
cmp
imul
(bad)
push
xor
pop
xor
shl
pop
es
pop
lods
push
loop
es
inc
mov
or
xor
sub
inc
retf
pop
push
add
data16
jle
hlt
jae
inc
fxch
sub
fs
test
mov
and
movs
and
mov
in
(bad)
xchg
jmp
and
pop
int3
(bad)
and
fs
mov
xchg
jg
test
pop
std
add
lock
das
xchg
jno
leave
and
fdivr
popa
xlat
movs
jno
sub
sub
arpl
call
sub
xchg
call
out
loope
pop
inc
retf
aad
loop
and
ficomp
cmp
sbb
mov
and
test
neg
jnp
jbe
add
scas
aaa
lods
inc
scas
outs
xchg
nop
test
ds
imul
adc
lea
push
sub
rol
loop
push
push
xchg
(bad)
pop
mov
call
mov
outs
mov
rol
in
rcr
outs
sub
cmps
cmp
xchg
mov
push
adc
sub
in
movs
and
pop
xchg
jmp
fstp
add
sub
pop
xchg
inc
mov
adc
jmp
loope
popf
jbe
test
push
call
lahf
pop
outs
clc
cmp
das
push
fsub
(bad)
adc
popa
mov
mov
loope
ds
es
jbe
xchg
mov
in
push
sub
jmp
inc
add
lods
push
push
mov
dec
imul
lahf
mov
xor
dec
mov
cli
(bad)
dec
sub
sub
push
stos
sti
nop
inc
fbstp
mov
adc
(bad)
rcr
pop
push
(bad)
or
pop
mov
jle
mov
add
in
push
loop
push
sub
inc
adc
mov
fcomp
leave
sbb
xor
jmp
push
sbb
jmp
out
call
into
arpl
jmp
dec
mov
and
or
add
add
ds
xchg
(bad)
adc
cmp
aad
dec
(bad)
xor
pop
(bad)
cmp
(bad)
cmp
push
lock
inc
fimul
lahf
cmp
mov
fmul
and
cmp
mov
cdq
and
dec
mov
int
rol
jmp
ds
scas
out
fs
cmp
daa
pusha
push
clc
ret
(bad)
or
fild
mov
movs
mov
push
inc
cmp
dec
xchg
movsx
mov
xchg
sub
mov
cmp
xor
pop
push
push
inc
out
sbb
push
inc
pop
call
stc
jo
mov
and
cmp
out
cs
mov
fcomp
pop
sbb
xchg
mov
pusha
inc
in
and
in
and
fs
sti
adc
aam
inc
xchg
jb
outs
retf
jmp
push
cmp
test
mov
and
out
or
or
sbb
push
dec
xchg
loopne
push
call
movs
fidivr
mov
or
sbb
test
push
nop
out
(bad)
dec
loope
cmp
inc
xchg
push
cmp
push
js
dec
(bad)
jnp
enter
mov
jle
push
popa
pop
(bad)
lahf
mov
mov
arpl
fdiv
sbb
arpl
add
int3
cmp
inc
lods
scas
jmp
dec
mov
in
sub
lods
pushf
and
add
ret
inc
mov
pop
data16
pop
movs
sub
mov
push
outs
push
mov
clc
push
into
xchg
sti
dec
sbb
adc
mov
out
mov
xchg
cli
push
int3
ret
sub
popf
mov
mov
mov
mov
fdivp
movs
std
cmp
vmovupd
sbb
sti
pop
sub
pop
cmp
xor
enter
test
pop
push
xchg
and
jl
fistp
jno
movzx
cmp
mov
push
sti
sbb
shl
in
out
adc
gs
push
jp
outs
outs
inc
pushf
shr
or
jmp
sub
add
xor
adc
int3
pop
sub
in
xlat
adc
dec
push
rcl
cmp
mov
lods
pop
adc
jns
(bad)
out
lods
inc
movs
call
mov
xor
cld
loopne
(bad)
pop
push
push
jb
push
push
mov
push
xchg
out
or
or
and
mov
pop
mov
aam
and
leave
daa
fcmovne
mov
shl
dec
mov
test
hlt
mov
xor
add
out
mov
push
sahf
pop
cld
mov
loope
sbb
fadd
xchg
cs
xchg
fs
popa
sub
retf
movs
xchg
sbb
and
push
sub
dec
mov
(bad)
add
stos
jle
bound
xchg
mov
out
(bad)
xor
adc
xor
inc
push
pop
sar
loop
xchg
lock
in
fdiv
mov
mov
sbb
mov
retf
sub
and
lock
sti
pop
imul
or
dec
push
mov
fidiv
dec
aas
xchg
add
push
add
dec
test
(bad)
int3
cdq
nop
or
outs
jl
std
ss
icebp
lock
daa
jnp
and
mov
loopne
adc
div
scas
cmps
and
sub
pop
sahf
(bad)
mov
mov
das
push
(bad)
repz
adc
push
and
pusha
mov
or
ins
sub
sbb
sub
sub
inc
jg
sbb
xor
sbb
fsubr
and
sub
inc
add
loopne
repz
mov
inc
imul
sbb
dec
dec
push
sti
mul
stos
dec
call
xchg
push
cmc
outs
bnd
mov
inc
inc
icebp
push
jnp
xlat
jmp
and
test
or
ret
jns
sbb
mov
mov
movs
scas
mov
mov
dec
call
cmps
shl
inc
in
inc
pop
push
and
jno
sti
out
jge
mov
int3
lahf
(bad)
sub
fldcw
fs
dec
loopne
hlt
mov
hlt
int
stc
or
push
movs
fs
mov
mov
aas
jne
jno
mov
cld
add
push
adc
dec
gs
cmp
std
pop
adc
xchg
mov
lahf
dec
in
sbb
sub
jg
fnsave
repnz
hlt
nop
dec
cmp
lock
arpl
and
cld
pop
xchg
and
fucomp
push
pop
(bad)
cmp
mov
(bad)
jb
xchg
aad
add
clc
inc
pop
xor
(bad)
in
enter
fidivr
cld
(bad)
jmp
pop
xor
mov
lods
sub
inc
and
hlt
lahf
sub
std
arpl
test
jmp
or
push
cmc
test
mov
inc
loope
mov
dec
push
test
dec
mov
pushf
inc
popa
and
mov
je
xchg
icebp
inc
cmc
xchg
sub
push
adc
sbb
loope
push
xchg
(bad)
out
pop
stc
inc
lock
ret
test
cli
ss
mov
and
cld
mov
cmc
or
movs
cmps
jae
clc
es
jl
ds
add
data16
jne
imul
retf
outs
loope
dec
sub
(bad)
int3
mov
sub
cwde
adc
fdiv
cmp
mov
add
inc
dec
and
pushf
out
push
scas
in
imul
jo
mov
adc
(bad)
mov
fld
mov
shl
ja
push
outs
sahf
jae
pusha
adc
push
sub
lahf
fdiv
call
mov
jbe
or
shl
addr16
shr
gs
cwde
inc
sub
lods
add
sbb
cmps
mov
pop
inc
scas
iret
out
adc
rol
xchg
sbb
xlat
es
mov
or
cmp
push
add
lods
dec
call
or
xor
ja
lds
adc
fld
les
(bad)
mov
push
jecxz
fsub
ins
shl
pop
inc
addr16
outs
inc
out
mov
sub
loop
xchg
outs
pop
stos
adc
lds
(bad)
pop
mov
int
adc
xchg
dec
aas
nop
stos
leave
outs
out
ja
mov
fstp
sub
jbe
jle
xor
(bad)
xor
jg
outs
les
mov
and
int
movs
jge
js
pop
xlat
mov
sub
nop
push
in
sbb
dec
mov
push
mov
rol
cmp
sbb
outs
gs
sub
adc
outs
lds
pop
and
mov
push
rol
call
mov
je
mov
pop
sbb
(bad)
loop
mov
mov
pop
imul
or
stos
out
mov
dec
mov
cmp
iret
ds
es
mov
inc
stos
cld
test
cmps
cmp
xlat
icebp
std
dec
pop
xor
jge
adc
pop
mov
mov
inc
rcr
cs
push
cmp
enter
mov
add
xchg
mov
(bad)
pop
add
xor
scas
int
push
movs
jns
push
ss
leave
icebp
ins
cmp
ret
rol
lds
add
xchg
push
gs
xor
lods
les
div
jmp
cmp
scas
cmp
call
jnp
test
inc
je
jnp
jge
dec
sub
xor
add
adc
or
xor
inc
sbb
xor
fs
jmp
push
std
mov
jge
fst
dec
ins
pop
cmp
(bad)
mov
arpl
iret
(bad)
mov
xchg
cs
stos
pop
aad
aad
push
inc
lahf
rol
push
cmp
daa
add
or
aam
and
sqrtps
adc
push
in
mov
mov
pop
icebp
(bad)
retf
les
mov
mov
clc
and
push
mov
jne
int
jg
sub
pop
leave
jae
mov
test
repz
cli
out
xor
push
stc
mov
repnz
pop
lods
sbb
pop
les
(bad)
and
in
out
ffreep
add
jl
cli
mov
xchg
push
pop
push
cmps
xchg
add
jecxz
jns
popf
sti
cmp
movs
fwait
or
cmc
sub
addr16
mov
mov
sub
(bad)
fmulp
les
sbb
jb
mov
sbb
sbb
bnd
out
push
sbb
scas
lock
mov
loopne
dec
mov
daa
mov
and
stos
ja
outs
mov
pop
mov
sbb
sbb
add
cs
daa
ficom
test
into
pop
xchg
repnz
cmc
mov
stos
adc
aad
mov
mov
test
sahf
or
mov
sub
sbb
cmp
cmp
(bad)
mov
push
pop
test
jb
push
gs
sub
jl
mov
(bad)
ret
mov
xchg
rcl
in
mov
inc
mov
dec
test
and
sbb
fdiv
or
or
mov
fnsave
xchg
aaa
in
in
lahf
cmp
dec
pop
mov
nop
xchg
nop
push
in
jp
pop
adc
pop
pop
cmp
or
lock
xor
fcmovnbe
into
sub
fwait
mov
gs
sbb
mov
jl
ja
jmp
sub
cmp
dec
mov
daa
stos
push
pop
imul
mov
call
sbb
inc
shr
jp
jno
and
imul
add
pop
pop
push
inc
mov
push
leave
push
mov
inc
jmp
loopne
loop
dec
dec
clc
inc
xchg
push
xchg
cmp
ins
cmp
add
repz
mov
mov
clc
or
add
mov
push
pop
(bad)
ins
and
stos
inc
and
xchg
jmp
jle
fdiv
xor
fs
popa
pusha
into
adc
(bad)
(bad)
les
jecxz
xor
test
push
push
mov
jle
xor
pop
jo
lahf
xchg
addr16
dec
sub
(bad)
sbb
inc
and
fisttp
ins
jmp
call
jl
daa
mov
clc
mov
mov
ins
push
sahf
sub
scas
sub
add
or
mov
jge
pmulhw
inc
add
jecxz
movs
(bad)
loope
add
pop
dec
aas
retf
sahf
inc
mov
jne
retf
data16
push
cmp
enter
aad
push
mov
sbb
je
retf
jne
movs
shr
xor
xchg
jae
mov
xor
and
repz
enter
clc
out
fldpi
jo
fstp
out
adc
xor
mov
adc
jp
retf
sbb
pusha
and
push
les
call
out
std
icebp
sbb
cmp
int
inc
inc
cmps
adc
in
aas
(bad)
mov
mov
pop
rol
xor
sub
dec
mov
mov
push
adc
stc
les
push
dec
cmc
cmp
hlt
div
xchg
mov
push
xor
jmp
mul
sbb
jecxz
inc
iret
pop
test
sbb
(bad)
fld
mov
into
pop
outs
imul
cs
jo
call
ror
or
and
mov
int
or
and
add
sub
repz
cmp
std
das
les
je
scas
sahf
mov
jno
lea
pop
adc
add
push
inc
mov
and
mov
in
fsubr
cmps
mov
scas
jno
imul
mov
and
pop
cmp
sub
lods
outs
pop
push
fs
in
and
mov
fidiv
and
retf
call
xor
cmp
sbb
xor
cmp
cmp
aaa
mov
or
retf
mov
add
test
add
daa
mov
sti
sub
das
out
mov
mov
fisubr
(bad)
addr16
and
jle
mov
jo
imul
cmp
out
push
mov
xor
sbb
and
xor
jle
add
jae
mov
dec
inc
mov
xchg
adc
dec
jle
mov
or
jmp
dec
and
push
mov
daa
(bad)
inc
sbb
popf
mov
ret
stos
xlat
and
shl
fwait
sub
loopne
jmp
push
shr
or
dec
dec
(bad)
adc
push
movs
add
test
mov
jnp
push
or
stc
xor
xor
jle
sub
ja
rcr
push
xchg
fnstcw
ja
pop
xor
mov
xor
adc
in
test
out
in
inc
int
rol
dec
test
rcl
iret
jbe
cwde
lahf
mov
popa
(bad)
jp
je
scas
mov
and
xlat
dec
inc
jns
fnstcw
mov
pop
(bad)
shl
faddp
stos
pop
pushf
mov
mov
cmp
out
jle
repz
xor
fs
jl
push
jae
jae
lds
neg
pop
clc
nop
adc
pop
call
sub
scas
dec
dec
pop
addr16
imul
out
pop
push
fwait
pusha
aas
sub
outs
out
pop
cs
pop
std
pop
dec
cmp
pop
mov
dec
out
(bad)
cld
mov
cs
pop
sub
xor
call
sbb
shl
xchg
movs
call
mov
in
jbe
push
and
pushf
es
out
dec
shl
es
mov
out
mov
pushf
xor
mov
adc
jae
mov
fnsave
fwait
xchg
iret
xor
jg
shr
pop
xor
enter
ss
dec
dec
xchg
mov
imul
inc
inc
retf
imul
pop
pop
ins
jge
dec
retf
or
mov
outs
add
outs
mov
xchg
cs
(bad)
div
jno
pop
pushf
mov
mov
inc
int
sub
lock
push
or
ror
adc
addr16
xlat
jbe
mov
repnz
(bad)
call
cmp
sub
pop
inc
out
cmp
je
pop
in
mov
pop
jp
je
in
pop
or
or
sbb
mov
jg
dec
or
and
inc
mov
out
rol
fsub
inc
pop
scas
in
push
retf
sbb
cmp
sub
xchg
(bad)
jnp
push
inc
adc
fcom
add
cmp
popf
pop
test
pop
push
loopne
jl
mov
inc
outs
fs
adc
dec
cmp
sbb
repz
outs
adc
fwait
shl
mov
mov
mov
mov
push
mov
push
imul
xor
cmps
mov
scas
adc
pop
sub
(bad)
jae
push
xchg
scas
jmp
outs
outs
test
push
pop
or
dec
addr16
sbb
sti
imul
imul
sub
mov
jnp
shl
sar
shl
inc
rcl
(bad)
pusha
lds
jb
imul
and
sbb
xchg
adc
xor
jecxz
inc
out
in
leave
test
outs
xor
in
cld
test
jne
arpl
inc
lods
adc
xchg
pop
push
push
or
xlat
mov
dec
pop
jmp
and
data16
clc
(bad)
in
cmp
in
sub
cdq
test
(bad)
xchg
cld
stos
(bad)
clc
push
mov
push
adc
cmp
call
jecxz
add
xchg
adc
loop
retf
jo
mov
jbe
(bad)
xchg
sub
in
mov
push
loop
adc
scas
or
test
mov
std
mov
xchg
stc
in
fwait
adc
jns
fidiv
loop
push
shl
push
rol
xchg
arpl
jp
iret
inc
imul
cmp
(bad)
jmp
jg
mov
cli
aas
mov
inc
inc
enter
ret
xchg
loop
push
inc
sub
jno
add
inc
nop
add
xchg
or
cdq
mov
mov
add
test
repnz
(bad)
push
lock
cdq
mov
aaa
fwait
repz
fld
out
ret
push
push
pop
fxch
xor
lea
add
fisubr
sbb
mov
push
pop
adc
loopne
and
mov
pop
and
push
jno
ret
sub
sbb
stc
mov
xchg
xor
dec
mov
stc
repz
test
mov
push
outs
loopne
mov
lods
xchg
scas
bound
out
test
cmps
test
push
mov
icebp
add
ins
or
hlt
mov
jg
mov
xchg
pop
(bad)
neg
pop
icebp
ins
and
fbstp
movs
fdivp
mov
call
mov
cmp
sahf
xchg
dec
mov
cdq
inc
sbb
add
mov
sub
mov
fisub
es
sti
ror
ret
mov
push
xchg
sub
xlat
das
leave
jmp
or
fidiv
imul
sbb
xor
mov
mov
inc
(bad)
daa
add
mov
ret
ret
js
cld
add
aaa
pusha
mov
cli
jp
xor
pop
push
mov
pop
sar
std
test
loop
sub
enter
ror
mov
inc
stos
jns
cdq
mov
les
out
push
jle
js
push
inc
or
call
das
or
add
retf
imul
pushf
push
pop
mov
out
movs
aaa
push
lock
cmp
inc
movs
mov
shl
rcl
jno
push
sbb
add
scas
stos
ins
repnz
or
jno
arpl
dec
inc
or
lock
push
jl
xchg
retf
xor
inc
xlat
xor
sbb
push
in
test
push
add
outs
pop
mov
cmps
pop
imul
je
sbb
fbld
rol
or
xchg
lds
pop
jne
out
imul
ret
sub
mov
inc
mov
sbb
mov
jmp
and
xchg
rcr
or
enter
push
scas
push
loop
jae
retf
fldcw
je
popa
push
lods
push
inc
or
shr
repz
repnz
inc
push
aad
pop
fld
pop
aas
popa
inc
xchg
lea
ins
nop
mov
sub
push
jecxz
movs
push
inc
mov
mov
and
push
pop
xor
fisttp
popf
and
rol
and
jl
mov
fidiv
iret
in
inc
fld
xchg
ficom
gs
jecxz
(bad)
sbb
dec
movs
stos
adc
or
push
or
les
js
xchg
clc
fucomip
xor
ds
imul
adc
xor
dec
lods
sub
dec
out
fmul
mov
mov
data16
in
xor
ret
add
mov
arpl
xchg
inc
and
test
fnstsw
jbe
es
cmp
cli
lods
or
out
cs
les
sbb
adc
jmp
and
xor
adc
in
jmp
add
pusha
rcr
je
inc
leave
mov
fs
sbb
paddd
sub
jbe
mov
jnp
sti
pop
loope
sub
sub
movs
stos
push
lock
inc
push
dec
inc
pop
lea
xor
cld
xor
jge
xor
retf
popa
shl
mov
icebp
out
fwait
(bad)
pop
icebp
fadd
js
dec
fbld
ret
mov
jle
jnp
test
inc
and
call
sti
jg
xor
mov
scas
cmp
(bad)
jnp
ror
xor
fimul
idiv
(bad)
pusha
arpl
pop
outs
seto
stc
js
outs
fcom
cmp
imul
push
hlt
and
rol
fstp
leave
or
mov
rol
(bad)
cmps
add
sub
out
sti
jnp
pop
xchg
mov
push
adc
push
push
(bad)
fild
ss
cmp
mov
das
cmp
jmp
push
mov
pop
adc
les
lahf
addr16
jge
mov
das
es
cs
sbb
inc
in
sar
aaa
inc
mov
pop
ret
pop
jb
cmp
in
adc
retf
cmp
pop
iret
mov
call
mov
stos
fcmovu
pusha
mov
xchg
push
popf
faddp
fld
sbb
inc
int
sbb
shr
dec
shl
add
pop
jle
cld
mov
dec
sbb
sar
jns
or
inc
popf
mov
xchg
or
sahf
jmp
loop
popa
inc
mov
xor
push
pop
cmp
push
dec
push
inc
(bad)
jmp
xchg
pop
rcl
jo
push
mov
xchg
push
cmps
(bad)
popf
scas
fstp
lods
in
adc
and
pop
xor
sbb
push
imul
jecxz
ja
retf
and
push
dec
(bad)
push
add
dec
mov
das
pushf
stos
dec
retf
imul
mov
cmc
dec
sub
inc
test
adc
mov
xchg
sbb
add
sbb
push
inc
pop
or
das
push
pop
xor
adc
popf
pop
fnstenv
aam
mov
dec
push
mov
jbe
and
repz
cmp
scas
push
iret
cld
xchg
aad
xor
call
lock
xor
scas
jl
push
dec
stc
jge
out
movs
(bad)
mov
pop
(bad)
push
jl
out
dec
loope
stc
cmp
gs
test
xchg
and
out
jecxz
jle
and
add
or
ret
or
ja
arpl
mov
mov
retf
push
push
lahf
sbb
dec
(bad)
out
add
add
fwait
cmp
imul
xor
cmp
test
in
jge
cmp
dec
and
jg
push
cld
loop
mov
mov
pushf
and
mov
mov
fistp
mov
push
pop
cmp
push
(bad)
dec
push
xor
test
lea
xchg
es
mov
adc
imul
enter
leave
push
xchg
mov
push
jmp
jmp
in
pop
or
sbb
sbb
scas
lods
nop
(bad)
xor
ficomp
retf
jns
push
ins
call
and
sahf
add
pop
test
repnz
sbb
mov
xchg
pop
(bad)
xchg
jle
getsec
ds
ja
mov
pushf
mov
inc
inc
sbb
adc
scas
les
add
xor
add
lahf
adc
imul
jmp
dec
inc
jl
(bad)
jl
pop
push
mov
shl
mov
sub
stc
sbb
cmp
sub
ror
iret
add
(bad)
xlat
xor
loope
xor
xchg
jae
cmp
mov
sub
push
fdivr
jle
mov
push
not
lods
mov
mov
xor
and
dec
pop
and
into
pop
or
or
inc
mov
push
fld
jbe
std
adc
cwde
imul
mov
add
mov
out
out
int3
mov
jmp
mov
cmp
mov
cmps
mov
inc
das
mov
je
adc
mov
add
or
ja
pop
xor
adc
dec
jmp
jp
cld
xor
stos
jnp
mov
je
ret
retf
loop
mov
xor
and
xor
cmp
aad
fsubr
xor
in
sahf
cmps
retf
jbe
and
test
mov
in
cmp
sbb
jp
(bad)
or
push
fwait
pop
cld
pushf
ja
adc
ss
jmp
push
mov
scas
cld
mov
aaa
or
jns
ror
shl
ins
xchg
sbb
fstp
fadd
scas
sti
jge
fadd
hlt
mov
push
std
fdivp
gs
sbb
dec
push
add
fwait
jne
or
scas
(bad)
std
mov
mov
jg
mov
je
vpaddsw
sbb
and
xchg
ins
std
imul
jae
mov
jmp
pop
imul
mov
pop
call
push
cwde
mov
add
test
push
jmp
inc
pop
ins
lahf
add
enter
repz
daa
outs
jg
pop
(bad)
js
mov
push
in
sbb
fmul
fild
enter
(bad)
cmp
call
dec
inc
inc
loope
nop
adc
dec
das
inc
add
(bad)
lods
push
adc
fnstenv
mov
mov
cmps
and
xchg
fnstcw
push
shl
addr16
(bad)
movs
inc
test
push
sub
ja
js
mov
cmp
fcom
or
mov
xchg
dec
in
pop
arpl
mov
and
add
add
jns
vhsubpd
pushf
sub
mov
mov
cmp
cmp
rcr
inc
pop
fstp
loope
leave
xchg
in
inc
inc
push
bound
jb
jns
aad
push
imul
test
push
mov
ror
loope
bswap
test
es
out
gs
xlat
and
sub
mov
add
or
jbe
push
cwde
sbb
add
sbb
in
or
pop
rol
ret
push
sub
pop
loopne
mov
aam
pop
lods
xor
aad
enter
xor
scas
jns
stos
inc
cmp
pop
call
test
pop
jmp
fadd
inc
mov
ins
xor
mov
mov
lahf
and
pop
mov
xchg
dec
sub
test
mov
and
cmps
mov
push
inc
mov
loopne
sahf
aad
sbb
mov
mov
aas
mov
enter
pusha
cmp
outs
sub
clc
adc
inc
syscall
xchg
jb
mov
dec
inc
jge
sbb
movs
fsub
imul
add
lods
add
or
xor
retf
jo
mov
inc
(bad)
xor
mov
add
fild
xor
leave
jge
inc
mov
popf
js
or
movs
iret
ficomp
push
enter
cmp
inc
push
or
xchg
data16
int3
outs
add
jecxz
jns
mov
push
push
cmp
or
sub
call
gs
jmp
gs
mov
cmp
add
out
pushf
das
mov
mul
fild
mov
xchg
enter
push
sub
loop
xor
xor
push
mov
xor
cmp
mov
dec
js
lods
mov
ret
mov
ins
jae
aas
cmp
push
ins
(bad)
mov
adc
or
pop
push
inc
or
enter
aaa
rcl
inc
cmp
mov
sub
imul
pop
shl
dec
push
ret
icebp
out
lods
stos
xchg
test
push
mov
sbb
in
or
jle
or
inc
inc
add
lock
cld
dec
pop
and
or
cmp
cmp
mov
ins
add
jg
iret
lea
retf
dec
mov
arpl
push
dec
jmp
dec
mov
xchg
push
cmp
aaa
iret
mov
push
daa
and
scas
xor
sbb
mov
bound
bnd
jo
fldcw
ror
ss
push
and
gs
pop
(bad)
dec
pop
mov
dec
jmp
add
pop
cmps
js
xchg
sub
test
icebp
or
test
add
fs
jo
mov
aas
fiadd
inc
inc
sti
xchg
mov
xchg
pusha
xor
cmps
ficomp
and
xchg
jb
and
aas
pushf
fstp
loop
lock
inc
xchg
mov
adc
dec
xlat
jecxz
inc
imul
mov
sub
outs
sahf
jg
xchg
pop
test
add
lods
sti
xor
push
fdiv
idiv
mov
adc
jg
mov
dec
push
dec
ret
push
lods
hlt
sub
iret
lods
inc
mov
and
test
test
inc
aaa
les
or
push
jnp
add
lock
add
test
pushf
jge
xor
sub
jl
fsubp
jae
aam
aas
add
ja
loopne
lods
repnz
mov
aas
add
sahf
sbb
lock
and
(bad)
out
push
(bad)
fistp
call
and
mov
stos
mov
xchg
enter
outs
(bad)
in
icebp
stc
scas
outs
call
hlt
rol
push
pop
inc
inc
fld
mov
xchg
jo
push
nop
mov
pop
in
sub
outs
adc
les
call
jae
or
mov
iret
inc
mov
data16
into
adc
sbb
stos
sbb
call
retf
mov
or
fdiv
xor
xchg
mov
in
mov
jnp
lock
es
arpl
arpl
pop
inc
bound
dec
mov
stos
push
ret
inc
inc
push
inc
xchg
mov
jnp
arpl
xchg
mov
enter
and
sub
hlt
sub
and
adc
jne
test
jo
ror
inc
adc
nop
ret
mov
(bad)
pop
aam
adc
add
xor
ss
in
lods
sub
xor
fadd
jmp
nop
jl
retf
dec
add
add
lods
out
xchg
add
ss
lds
mov
fidiv
stos
jmp
dec
popf
push
cmps
or
test
cmp
mov
dec
sub
rcr
jns
shl
sbb
pop
sbb
pop
add
cmp
aaa
stc
aam
js
imul
jl
enter
jb
loope
imul
jmp
push
imul
dec
sbb
dec
add
sar
mov
and
icebp
sub
cld
cmp
dec
cmp
loop
push
imul
mov
cmp
pop
jg
adc
lahf
data16
jbe
xor
mov
xor
sysret
jns
fnstenv
clc
cmps
push
sub
into
pop
enter
mov
aas
pop
lods
test
aam
sub
dec
je
pop
ret
fmul
or
cmp
mov
(bad)
(bad)
jns
mov
or
mov
xchg
shr
jne
dec
popa
enter
push
out
sar
cs
loopne
mov
fld
mov
dec
inc
ja
mov
xchg
popa
pop
rcl
inc
adc
fldenv
(bad)
(bad)
(bad)
sti
sub
pop
imul
pusha
xchg
out
adc
xchg
pop
pop
push
out
js
retf
jne
int3
pop
mov
inc
dec
sub
aam
mov
ret
sbb
(bad)
cmp
idiv
jae
cdq
jns
jnp
inc
sbb
pop
lods
sub
mov
stos
pop
xlat
or
xchg
mov
or
stos
xchg
inc
sub
and
adc
in
in
mov
mov
stos
imul
mov
mov
test
cmp
repz
jmp
inc
or
in
pop
(bad)
rol
pop
sub
inc
lods
push
add
ins
in
inc
adc
add
mov
test
add
into
add
xor
lea
(bad)
fistp
xor
repnz
(bad)
or
mov
pop
and
mov
test
dec
pop
dec
cwde
loopne
push
mov
test
jg
push
ret
retf
push
mov
inc
xor
lods
in
fst
cli
stc
sub
call
ret
add
and
add
imul
ficom
sub
fmul
pop
jmp
jb
and
jne
xor
pusha
ja
cs
xlat
xor
mov
pop
test
jbe
xchg
ficom
mov
in
int
add
in
nop
ror
push
jbe
(bad)
mov
mov
jnp
lea
xchg
inc
fsub
(bad)
mov
push
dec
cmp
xchg
jnp
pop
js
shl
sbb
and
or
and
adc
(bad)
in
xchg
inc
and
inc
inc
pop
fcmovne
cdq
enter
adc
sub
mov
mov
loope
jecxz
shl
xchg
out
add
pop
pop
out
mov
xor
jo
shr
test
lock
mov
fst
push
lea
push
and
pop
mov
pop
pop
loope
jmp
aam
cmp
fist
sti
(bad)
mov
sahf
xchg
iret
mov
enter
in
xor
sbb
in
push
ja
pushf
aas
movs
jns
or
or
aad
outs
jmp
cmc
(bad)
aam
(bad)
(bad)
adc
mov
rcl
std
xchg
dec
nop
ds
add
into
inc
nop
pop
sub
pop
xchg
adc
out
mov
or
jmp
js
xchg
xchg
cmp
adc
mov
cmp
add
inc
movs
push
inc
cmp
repnz
mov
or
call
mov
pop
jl
retf
fs
jle
adc
mov
movs
shr
cmp
popa
mov
aaa
xchg
jo
and
xchg
je
fst
sti
dec
and
dec
xor
add
add
popa
jl
or
mov
push
fisttp
test
dec
cmc
mov
xchg
outs
or
lds
sbb
lods
push
cdq
stos
in
in
xlat
and
lock
imul
or
loope
mov
jns
sbb
push
ja
adc
pop
out
xor
js
or
jmp
xchg
nop
mov
shl
jl
sti
js
mov
shl
push
and
icebp
pop
or
ffree
in
test
aas
mov
xor
mov
pop
cdq
xchg
push
ins
mov
cmp
fnsave
pop
xchg
jmp
neg
adc
xor
daa
jno
push
pusha
pop
js
sub
das
mov
adc
pop
xchg
cmp
mov
add
dec
fs
xchg
xchg
mov
push
ins
jns
fmul
adc
xchg
clc
mov
retf
outs
icebp
push
sub
clc
or
dec
jne
xor
bnd
in
(bad)
push
push
mov
dec
mov
push
xor
push
pop
push
(bad)
retf
mov
jbe
sub
push
sub
out
aam
jecxz
repz
sub
add
nop
jle
test
cdq
mov
leave
dec
out
cmp
(bad)
std
push
dec
bound
stos
leave
in
xor
pop
or
inc
mov
xchg
inc
repnz
(bad)
clc
push
jb
daa
mov
rcr
pop
dec
stc
test
out
xchg
scas
shl
pusha
push
xchg
jo
ret
jle
leave
and
fwait
js
sbb
popa
cwde
(bad)
dec
sahf
xor
dec
ficom
cmp
call
jbe
out
pop
and
jbe
xchg
stos
push
xor
outs
mov
cmps
cmps
pop
pushf
jmp
mov
push
aaa
fiadd
stos
popa
adc
push
mov
je
cmps
add
ds
and
cwde
clc
rcl
stos
or
push
(bad)
adc
data16
cmp
inc
cdq
(bad)
xor
dec
mov
jmp
sbb
mov
out
adc
stos
and
(bad)
adc
pop
aaa
adc
jno
mov
addr16
or
mov
dec
sub
and
fst
and
iret
cmps
pop
out
push
into
stos
sub
xchg
lea
sti
mov
or
sahf
mov
movs
(bad)
jecxz
lock
sub
cs
jbe
ins
int3
mov
xor
fiadd
add
aad
mov
fidivr
stos
ins
jb
dec
jp
aad
pop
imul
shl
repz
mov
xchg
mov
pop
aas
and
push
loope
mov
pushf
loop
and
cmp
pushf
pop
sbb
mov
fbld
call
cmp
push
or
adc
loopne
jle
imul
test
fist
push
and
lods
mov
cmp
and
jge
js
add
jb
sub
mov
mov
and
add
pop
adc
push
je
pop
iret
mov
and
in
das
sub
jns
lods
cmp
outs
(bad)
cmp
mov
or
pop
mov
add
repz
and
fucom
xchg
mov
inc
fstp
xchg
ds
popa
mov
push
and
cmc
int
mov
xchg
gs
pop
repz
mov
jle
push
sti
ret
pop
mov
sbb
mov
jge
aas
jns
and
es
addr16
push
fnstenv
je
clc
fidivr
(bad)
cdq
pop
sbb
cmc
pusha
jae
or
ins
pop
push
pop
iret
inc
ret
bnd
dec
and
sub
ficom
add
fld
cmp
inc
xchg
adc
inc
cwde
cmc
addr16
mov
out
cli
ins
outs
push
fsub
test
xor
daa
sub
outs
dec
mov
popa
fsubrp
jp
lea
shl
retf
fstp
idiv
loop
(bad)
mov
cmp
cmp
pop
xor
xchg
adc
sbb
lea
cmp
(bad)
leave
mov
cmp
jne
or
xchg
sub
sub
dec
mov
ins
push
and
loope
lds
or
mov
xor
inc
gs
push
sbb
mov
and
xchg
mov
(bad)
mov
xor
inc
fnstcw
cmp
mov
imul
mov
jl
push
inc
pop
fisttp
(bad)
fistp
xor
jp
push
mov
and
or
push
xlat
outs
idiv
neg
mov
dec
into
mov
jno
div
add
je
adc
mov
push
mov
ins
(bad)
into
or
fiadd
push
retf
jg
outs
xchg
shr
popa
cmps
add
repz
sbb
and
mov
inc
popa
sub
mov
push
mov
sub
jae
aad
adc
xor
sbb
mov
inc
push
sti
mov
or
sub
cmp
aaa
and
scas
adc
test
popa
int3
xchg
scas
pop
mov
out
(bad)
cmp
dec
adc
enter
inc
daa
jl
cwde
pop
in
push
and
sbb
rcl
inc
popf
mov
lods
popf
ds
data16
sbb
ss
stc
cs
xchg
add
jae
or
call
inc
pop
aad
inc
dec
in
adc
mov
(bad)
ss
aas
lock
mov
ja
cmps
in
jbe
pop
hlt
loope
lds
push
xchg
and
adc
pushf
sbb
mov
or
fstp
clc
sub
mov
(bad)
dec
cmp
sti
ins
icebp
adc
push
jp
int
jge
out
push
and
hlt
jbe
addr16
push
jl
dec
add
push
cmps
pop
fs
int3
clc
aam
dec
add
jp
push
and
outs
scas
and
bound
mov
push
dec
push
inc
rcr
push
scas
push
sbb
int
in
ja
xchg
ror
enter
(bad)
in
loopne
aad
stos
dec
adc
gs
cld
pop
std
fisttp
xor
xchg
cmp
and
jo
mov
adc
fcmovnbe
jne
mov
test
jle
int
pop
int
inc
cmp
in
or
sar
call
add
xor
add
push
mov
std
and
jb
bound
cmp
jbe
test
sahf
cli
jmp
sti
cli
jno
out
sahf
std
jb
or
add
clc
and
int3
cmp
scas
lods
retf
push
mov
(bad)
fs
mov
arpl
add
outs
repnz
add
xchg
adc
out
pop
adc
dec
(bad)
loop
add
pause
stos
adc
add
sbb
(bad)
fist
xlat
es
add
pop
imul
add
aaa
xor
sub
jmp
shl
gs
fiadd
cmp
add
loop
sbb
push
test
cmp
data16
push
dec
xor
xor
add
xchg
cwde
adc
cmp
es
aad
sbb
mov
(bad)
sti
retf
mov
push
mov
outs
clc
cmp
pusha
lods
sub
ds
ss
xor
dec
adc
and
push
mov
fiadd
or
out
inc
fdivp
test
not
sbb
jp
xchg
jns
mov
jecxz
sahf
lea
and
mov
sbb
cmp
call
mov
addr16
sub
or
lds
into
loop
repnz
xchg
out
pop
push
lods
push
cmp
adc
sahf
jmp
jbe
lods
icebp
and
cmp
aad
jecxz
jno
lods
dec
mov
add
or
mov
out
dec
sub
(bad)
js
mov
ret
ins
ds
cwde
sub
clc
or
int3
std
outs
xor
mul
mov
mov
fwait
neg
jbe
cmp
(bad)
loope
(bad)
add
gs
cmp
jp
shl
lea
push
push
lock
sub
dec
jge
or
dec
int3
cwde
and
leave
jbe
aam
xor
jmp
xchg
call
jnp
cmp
iret
jnp
fisubr
xchg
lock
push
fnstenv
push
out
mov
xchg
fdivr
jbe
outs
mov
js
hlt
(bad)
das
cmp
add
pusha
xchg
stc
bound
nop
inc
std
push
out
mov
loop
int3
push
movs
push
adc
(bad)
inc
push
mov
pop
adc
call
inc
jmp
adc
pop
sub
xchg
out
lods
shl
push
fwait
ds
les
loopne
xchg
pusha
clc
mov
rol
test
(bad)
iret
add
scas
(bad)
or
scas
repnz
movs
add
fdivr
frstorw
out
xchg
dec
sbb
test
pop
inc
and
ja
ins
(bad)
mov
dec
fdiv
in
mov
ss
or
xchg
sbb
jge
adc
test
(bad)
sbb
mov
pop
inc
(bad)
jb
pop
jmp
mov
ret
mov
mov
and
mov
stc
fnstcw
movs
push
neg
xor
xchg
xchg
adc
fstp
call
push
sahf
xchg
ret
rcl
out
inc
pop
push
cdq
or
into
or
cli
(bad)
jg
push
int
enter
and
ins
cmps
mov
inc
cmp
mov
imul
enter
mov
cmp
adc
push
pop
xchg
stc
xchg
(bad)
push
call
dec
retf
push
loopne
adc
leave
fiadd
jmp
sbb
es
sti
out
or
aaa
adc
imul
test
mov
inc
repz
pop
frstor
loope
mov
ja
xlat
adc
mov
cwde
sahf
ret
or
xchg
out
sbb
js
mov
inc
mov
rcl
not
retf
ror
rcr
pop
mov
fsub
nop
pop
and
push
inc
mov
fdiv
mov
out
ins
call
mov
mov
cmp
test
dec
inc
cs
idiv
dec
mov
sahf
pop
mov
mov
push
movs
sbb
lods
outs
(bad)
ds
jmp
aas
stos
or
fbstp
in
lods
push
movs
jl
addr16
xor
or
or
pop
jno
pop
sbb
cmp
fnstenv
push
jp
fimul
rol
sub
and
aam
movs
jecxz
push
ss
xor
jbe
mov
shr
push
jmp
push
fwait
dec
sbb
add
pop
pop
dec
rol
outs
mov
xchg
aaa
repz
(bad)
xor
aas
jns
jbe
jmp
xor
inc
shl
push
das
push
inc
fucompp
into
lea
cld
adc
adc
jge
mov
mov
or
loopne
imul
arpl
mov
xchg
adc
mov
daa
or
idiv
aaa
mov
arpl
add
fwait
loopne
dec
cmps
out
push
dec
sub
sub
push
mov
call
mov
push
cs
out
test
xor
adc
add
mov
daa
sub
loop
repnz
push
pushf
xchg
add
push
call
push
push
addr16
cmp
jnp
in
fwait
data16
jg
loopne
push
jae
push
fwait
ins
cdq
sub
(bad)
and
imul
sub
int
sbb
sahf
xor
pop
mov
xor
icebp
or
or
add
sti
sbb
sbb
retf
xchg
inc
leave
xchg
jns
aad
call
js
adc
call
inc
jp
mov
test
xchg
loopne
mov
add
repz
sbb
loopne
fld
push
xlat
sbb
stc
pop
mov
push
repz
das
push
cli
out
add
pushf
imul
popf
sub
inc
cwde
(bad)
int3
dec
jle
js
loopne
add
mov
cmp
pop
mov
loope
rol
(bad)
arpl
call
into
inc
ja
sbb
int3
mov
push
push
push
and
dec
mov
aas
icebp
(bad)
adc
mov
lock
mov
repz
fs
jle
mov
std
int3
xor
gs
mov
lea
xor
jl
loopne
xchg
dec
sbb
sahf
dec
xchg
adc
mov
fistp
or
cld
mov
lods
or
stos
data16
test
sub
pop
sbb
pusha
or
xchg
xor
ja
mov
pusha
outs
loope
icebp
mov
out
xlat
dec
xor
cli
dec
pop
mov
jnp
leave
or
jo
sub
int
add
cwde
inc
ret
and
outs
push
leave
pop
lahf
dec
call
call
imul
dec
fdivr
test
adc
not
ror
mov
xchg
or
push
stc
cs
mov
dec
xchg
jge
jp
inc
sti
mov
jmp
je
or
int3
pop
addr16
xchg
fiadd
sub
push
shl
loope
scas
loopne
addr16
dec
lods
pop
imul
ds
sub
in
adc
test
stos
dec
mov
push
sub
and
ss
adc
not
mov
push
gs
std
sbb
scas
fcom
sbb
pop
adc
or
jle
test
pusha
dec
cmp
lods
int
mov
xor
dec
sar
mov
cmps
pop
cwde
in
dec
enter
test
sub
in
pop
loope
mul
mov
and
sbb
popa
mov
pop
test
dec
into
jo
retf
popf
pop
cmps
scas
xor
jp
xor
add
jne
adc
push
lds
or
sbb
mov
shr
push
bswap
xlat
and
fstp
or
imul
pushf
in
neg
imul
call
rol
shl
dec
adc
cmp
mov
out
xchg
sub
push
jecxz
add
mov
fnstcw
lds
test
mov
js
fs
pop
test
jp
(bad)
arpl
test
lds
xlat
ret
inc
xor
xor
bound
lahf
add
sub
cmp
or
push
aaa
movs
dec
retf
inc
hlt
test
sub
fild
rcr
gs
cmp
fs
dec
mov
xor
add
test
xor
retf
adc
xchg
enter
or
sub
sub
cmp
jmp
jmp
sub
sub
mov
cmp
pusha
fcmove
and
arpl
retf
lods
in
jns
jmp
retf
xlat
idiv
and
sbb
cmps
jne
jbe
xor
and
es
aas
mov
popf
es
jno
jne
cmp
or
out
js
push
daa
test
add
or
dec
into
dec
sub
stos
fdiv
jecxz
out
cwde
jmp
cmps
mov
pusha
xor
repnz
push
movs
push
mov
cmp
enter
outs
fwait
aaa
nop
xchg
imul
mov
push
dec
out
pop
push
jmp
aam
xchg
inc
ja
out
sub
sbb
adc
adc
enter
je
cmp
clc
or
jmp
ret
sub
out
sbb
pop
pop
ja
or
cld
(bad)
sbb
bound
sub
and
aam
loop
imul
mov
and
adc
imul
imul
push
mov
inc
repz
push
lods
xor
cmpxchg
mov
lahf
jecxz
cli
xchg
xchg
sbb
push
das
mov
adc
out
add
in
rol
es
pop
popa
push
sbb
retf
leave
and
cmps
sbb
mov
jmp
imul
xor
inc
cwde
or
movs
push
cdq
dec
in
sahf
xchg
dec
loopne
movs
cmc
(bad)
ror
inc
cwde
and
js
cmp
dec
inc
lock
pop
jle
cmp
pop
push
out
mov
cli
cmp
pop
retf
movs
and
sbb
int
mov
jmp
add
test
mov
data16
retw
ffree
call
icebp
xor
and
stos
dec
punpckhdq
jbe
add
fist
fwait
rcr
imul
fs
add
pop
(bad)
icebp
mov
mov
mov
dec
out
lahf
jmp
push
jbe
push
push
popa
(bad)
cmc
dec
retf
fs
lahf
or
and
(bad)
in
jmp
imul
int3
inc
sahf
test
scas
lea
inc
gs
out
add
dec
sub
addr16
adc
add
push
push
addr16
(bad)
xlat
data16
mov
xchg
sbb
out
ds
push
mov
adc
dec
in
sub
leave
pop
jmp
outs
mov
cmp
bound
cmp
sbb
sub
dec
inc
not
sub
cmps
mov
dec
adc
ss
add
adc
in
lea
icebp
scas
dec
ror
sbb
mov
popa
mov
mov
xor
dec
push
pop
sbb
sbb
jmp
push
icebp
ss
jae
fisttp
add
inc
jl
ror
sub
ss
fnstcw
dec
mov
add
push
xor
sbb
cli
mov
and
jno
sbb
cld
loope
loop
xchg
sub
lods
scas
inc
ror
cli
mov
fisttp
mov
stos
cmp
mov
adc
mov
mov
daa
call
inc
sahf
fst
dec
loopne
mov
outs
mov
mov
sar
(bad)
lds
push
clc
fistp
test
fwait
ror
dec
jno
in
cmp
stos
push
je
aam
sbb
fisubr
sbb
out
push
retf
mov
fwait
imul
xor
into
dec
pop
jp
jno
retf
pusha
and
jae
mov
mov
test
(bad)
mov
push
mov
sbb
cs
add
int3
sub
mov
mov
jo
add
lahf
and
stos
arpl
out
mov
sahf
sti
(bad)
std
lock
cmp
and
mov
call
sbb
or
popa
popf
fbstp
fldcw
pop
push
pop
fmul
cmps
push
pop
fs
mov
mov
iret
xor
jb
jo
sbb
and
add
jne
mov
pop
dec
(bad)
lds
mov
cmps
inc
add
mov
shl
dec
mov
in
test
sub
adc
mov
ss
outs
mov
cs
mov
inc
daa
call
xchg
pop
pop
jle
xchg
pop
lods
inc
dec
sbb
mov
mov
popf
push
cmc
sub
into
in
imul
sub
jmp
mov
mov
cli
mov
(bad)
int
std
or
dec
popa
les
leave
xor
cmp
push
pop
xlat
mov
(bad)
call
fdivr
test
ud2
ror
jmp
mov
addr16
and
lock
push
lds
cdq
jg
repz
inc
(bad)
(bad)
bnd
inc
jnp
and
dec
add
mov
push
mov
jp
or
inc
bnd
cmp
dec
out
cmp
dec
(bad)
lds
retf
in
fisttp
cmps
cwde
int
cmp
add
mov
sub
popf
loope
fist
jmp
and
scas
mov
pop
lods
ret
lea
mov
arpl
sbb
pop
(bad)
mov
in
pop
mov
xchg
cmps
push
test
pop
mov
test
mov
aas
pop
ret
addr16
mov
iret
iret
mov
mov
loopne
and
mov
out
nop
shl
pop
xor
inc
mov
pop
jnp
mov
add
fdivr
pop
sbb
cmp
es
adc
mov
xchg
(bad)
mov
call
je
sti
mov
dec
nop
cmp
out
mov
jle
pop
(bad)
push
sbb
xchg
jmp
lods
mov
adc
pop
sub
or
cmps
adc
sbb
retf
inc
push
ja
int
push
inc
jp
cs
mov
scas
sbb
push
movs
mov
jl
mov
fwait
sub
mov
stos
int
xchg
inc
push
mov
sub
inc
bound
xchg
or
pusha
dec
xchg
cmp
pusha
je
pushf
and
mov
sbb
test
imul
and
movs
mov
mov
sbb
movs
xor
sub
mov
push
inc
hlt
or
dec
and
pop
movs
into
mov
sbb
push
inc
cmp
push
out
mov
sub
jae
xor
jmp
mov
push
scas
out
cmps
inc
mov
inc
pusha
sub
gs
sub
cmc
lods
shl
and
jmp
and
jge
xchg
jmp
inc
(bad)
(bad)
call
push
(bad)
mov
bound
or
or
mov
pop
jecxz
mov
lods
dec
mov
outs
ins
mov
repnz
push
add
(bad)
cmp
ja
jbe
in
sti
or
sahf
xor
mov
enter
icebp
jle
enter
sbb
data16
adc
jo
jle
inc
inc
xchg
add
adc
cmp
mov
inc
xchg
add
aas
hlt
pop
jl
cwde
push
jne
ins
inc
pop
(bad)
stos
dec
push
xor
aam
idiv
pop
mov
jo
into
repz
inc
shl
or
sub
(bad)
jmp
movs
push
ss
std
dec
jae
dec
popa
adc
jmp
cmp
jne
fst
sub
test
cmps
push
fst
loope
aad
jo
adc
push
or
int
cmp
sbb
retf
sbb
sti
or
dec
jle
test
adc
shr
pop
shl
xor
cmp
jmp
dec
xchg
cmc
push
sbb
or
fcom
addr16
retf
xor
jp
and
loope
and
push
sar
icebp
call
outs
lock
fcomp
push
call
imul
popf
(bad)
call
fcmovb
xor
dec
dec
or
pop
(bad)
jle
mov
sbb
arpl
movs
inc
int3
push
lea
bound
fisubr
int3
and
push
jmp
mov
and
scas
xor
neg
and
popa
lds
or
jno
out
mov
jne
enter
sbb
jb
rcr
sahf
test
sub
test
mov
popf
repz
push
mov
dec
mov
or
cmp
or
imul
mov
jg
mov
neg
xor
jno
clc
mov
xor
sub
cmp
mov
jno
sub
add
(bad)
test
inc
jp
retf
outs
xor
mov
adc
dec
popf
push
mov
lea
jns
cdq
adc
inc
out
pop
ja
movs
stc
lods
lock
sub
pushw
fisubr
jmp
enter
or
aad
dec
(bad)
fidiv
xlat
ds
lea
cwde
dec
push
xchg
push
pop
xor
cs
stos
test
movs
int3
push
hlt
aas
lods
mov
loope
add
adc
ror
gs
(bad)
leave
lds
xchg
mov
rcr
ja
mov
or
ins
xchg
in
retf
pop
inc
push
in
dec
into
imul
and
and
stc
jge
fld
push
mov
loope
cmp
push
push
jge
cwde
add
jge
cmp
pop
imul
sub
sbb
mov
idiv
inc
loop
adc
cmp
sub
sar
xor
jmp
jae
push
cmp
add
mov
xchg
je
pop
iret
int
fstp
ins
cld
sbb
cmp
lea
mov
out
cmp
push
xor
sbb
not
cli
repnz
repnz
xchg
hlt
test
ins
jecxz
cmp
rol
push
out
mov
shl
mov
push
ins
in
push
int
nop
sub
repz
sbb
pop
je
call
popa
call
mov
adc
inc
or
and
lock
test
and
jp
gs
icebp
repz
inc
dec
push
(bad)
test
(bad)
adc
adc
jnp
xchg
mov
das
adc
in
push
add
mov
aas
aad
jo
loope
dec
sbb
and
inc
(bad)
rcl
push
add
fwait
mov
inc
cmps
or
lock
lahf
in
pushf
cmp
xor
ror
sti
and
adc
daa
cmp
jle
js
xchg
mov
fdivr
xor
xlat
and
xor
pop
push
aaa
jb
mov
or
cld
div
dec
cmp
or
sub
call
retf
xchg
out
addr16
(bad)
jge
cs
pcmpeqb
retf
in
adc
mov
sub
push
daa
mov
add
lock
stos
in
repnz
jns
aaa
mov
loopne
push
test
xor
cmp
jg
ret
sbb
xchg
repnz
std
aaa
inc
cld
in
arpl
int3
adc
mov
fsubr
int
(bad)
sbb
xchg
xchg
pop
mov
adc
inc
push
cmp
xor
jns
cmps
repz
addr16
jle
aad
xchg
mov
xchg
and
dec
dec
rol
xchg
sbb
int
push
jo
cdq
xor
sub
mov
jp
out
and
cmp
sub
sar
data16
mov
fld
push
sbb
sub
mov
daa
mov
imul
(bad)
retf
or
mov
dec
mov
(bad)
xchg
fwait
test
sub
cmps
sahf
mov
push
xlat
mov
rcl
push
push
or
push
sar
std
arpl
ins
jnp
repnz
sbb
sbb
addr16
cdq
jno
mov
gs
fisttp
neg
icebp
repz
jb
js
call
(bad)
rol
or
add
(bad)
call
fnstcw
pop
enter
push
(bad)
aas
sti
add
dec
cs
stos
sbb
sbb
fld
mov
push
mov
mov
movs
inc
dec
mov
cmp
sub
pop
cmp
xchg
or
mov
(bad)
test
sub
mov
add
xchg
jle
jge
loopne
out
add
jg
push
push
mov
ret
and
push
push
aaa
call
mov
xlat
sub
adc
pop
push
push
sbb
movs
iret
jae
(bad)
pop
sti
xor
sub
xor
enter
inc
arpl
outs
out
mov
inc
setbe
push
jbe
mov
jp
test
into
and
or
aaa
push
hlt
dec
mov
cmp
or
(bad)
mov
or
push
or
mov
gs
pop
jo
es
je
pop
cmp
stos
jg
loope
cmc
fidiv
mov
adc
ret
and
xor
aam
pushf
sub
push
push
cmp
pop
rol
push
push
lock
data16
mov
enter
xor
ror
test
push
pop
inc
mov
push
sub
shl
and
ins
jmp
out
add
push
xchg
jno
in
dec
sbb
jecxz
(bad)
into
pop
add
out
cwde
or
scas
(bad)
sbb
xchg
pop
push
fst
xchg
and
mov
call
outs
ret
hlt
cmp
icebp
mov
test
jb
aad
ss
ja
pushf
jb
mov
pop
mov
adc
shr
jno
arpl
sbb
xchg
mov
lods
cld
int3
mov
mov
dec
fist
dec
add
cld
adc
jno
lea
mov
js
sbb
push
add
sbb
inc
bound
lock
or
dec
pop
int3
xchg
push
cli
mov
std
out
outs
mov
mov
repnz
enter
aad
lock
scas
pop
adc
mov
in
or
sbb
lahf
pop
dec
sub
or
bound
pop
addr16
xchg
mov
mul
test
test
pop
imul
popa
dec
pop
jmp
adc
ja
in
loope
imul
sbb
ins
pop
hlt
pop
sbb
dec
(bad)
mov
iret
aad
fxch
retf
out
out
nop
inc
xor
sbb
pop
into
jbe
js
and
leave
jl
push
mov
iret
mov
cmp
mov
xchg
out
sbb
and
push
(bad)
stos
xchg
adc
mov
push
adc
or
sub
mov
pop
das
add
mov
push
xor
inc
shl
add
int
movs
lds
sub
dec
ret
xor
inc
test
jle
rol
pop
xchg
pop
mov
xchg
not
aas
dec
das
jne
rol
xchg
scas
jmp
mov
or
(bad)
cdq
jmp
leave
retf
inc
dec
mov
add
(bad)
push
ja
lahf
retf
pop
inc
jge
push
fild
movs
inc
pop
pusha
jns
lahf
xor
(bad)
push
test
and
fisubr
fisttp
mov
enter
push
add
in
sub
stc
pop
push
mul
out
popa
in
clc
call
cmp
or
jle
dec
xor
push
(bad)
shl
push
sub
xchg
jb
repz
test
ins
mov
(bad)
fst
(bad)
in
js
call
mov
sbb
retf
pop
cs
enter
lods
cmp
mov
push
addr16
mov
fimul
pop
jp
addr16
lahf
pop
mov
push
mov
jp
dec
pop
mov
push
out
cli
xchg
sub
clc
stc
out
es
in
xlat
cmps
les
int
inc
fisttp
jo
sbb
out
aad
dec
mov
int
xchg
sub
mov
shl
jmp
cmp
xchg
loopne
pop
out
mov
xor
push
pop
aas
jge
inc
jne
aad
xchg
jge
test
int3
mov
lea
add
sti
enter
adc
outs
lock
jo
xor
dec
pop
ins
mov
and
in
push
mov
cmps
pop
sbb
and
dec
or
mov
dec
mov
int
cmp
or
xchg
inc
stos
jg
sbb
nop
jbe
sub
sub
rcr
loop
jb
pop
loope
inc
lock
dec
cmps
fisub
int
sar
push
jnp
scas
out
dec
and
fist
push
pushf
rcr
cmp
jge
jg
add
adc
call
std
pop
mov
sbb
in
cmp
push
mov
mov
ins
sbb
int
or
stc
xchg
rol
jnp
fbstp
or
push
ds
movs
jbe
ds
imul
push
shl
mov
fbld
ja
je
pop
cli
outs
movs
cs
jge
xchg
ret
stos
push
mov
sbb
leave
pop
dec
addr16
xor
push
push
repz
pop
arpl
mov
(bad)
aaa
add
into
imul
rcr
stc
xor
dec
inc
int
jp
movs
sbb
cmp
mov
cmc
shl
mov
mov
pop
pop
test
cs
jp
jae
mov
(bad)
stos
mov
popf
cwde
adc
jecxz
js
ja
jecxz
jle
push
adc
scas
lock
retf
pop
jns
mov
into
mov
fs
sbb
and
add
ficom
adc
sub
loope
arpl
xchg
cdq
stos
mov
sub
mov
dec
sbb
popa
arpl
fcmovu
xchg
jns
shl
mov
or
jmp
push
sti
or
scas
xchg
ret
xchg
mov
stos
mov
pop
(bad)
std
fstp
test
dec
mov
mov
stos
bound
fdivr
mov
jns
es
jmp
(bad)
das
pusha
call
sbb
std
jae
cmp
or
pop
adc
shl
int3
out
and
xchg
inc
xchg
cwde
in
sbb
mov
aam
pop
sar
push
aas
mov
and
push
repz
push
mov
popf
js
(bad)
mov
aad
dec
xchg
cdq
cld
cdq
movs
and
cmp
test
shr
xchg
dec
mov
mov
lds
retf
(bad)
pop
ds
out
and
mov
dec
xchg
scas
scas
pop
les
or
inc
push
and
ins
test
loope
cld
mov
xchg
pop
jns
jbe
pop
mov
(bad)
jae
in
sub
jbe
std
xchg
ja
mov
cdq
pop
inc
jbe
int3
pushf
and
sahf
adc
lea
and
sub
(bad)
ds
jno
adc
adc
mov
jecxz
sub
mov
outs
dec
shr
xor
dec
mov
dec
or
push
mov
out
push
outs
xchg
or
shl
iret
cmp
leave
inc
(bad)
cmp
pop
xor
mov
(bad)
jns
inc
mov
mov
jl
push
mov
push
sub
(bad)
fcomp
hlt
(bad)
rcr
jno
or
leave
jge
das
sbb
pop
(bad)
cmp
push
xchg
mov
xor
jb
ds
inc
shl
cs
outs
xchg
ins
add
in
ja
imul
pop
add
or
fdivr
stc
xchg
push
jl
stos
pop
js
sub
sbb
push
jnp
mov
mov
(bad)
fstp
stos
sbb
aam
test
xchg
push
mov
shl
dec
push
push
push
cmps
lds
inc
fs
cmp
test
sar
lahf
es
repnz
fs
jae
inc
jne
push
mov
sbb
add
hlt
sbb
jge
jb
or
push
loopne
mov
ins
mov
sub
or
sub
shl
mov
daa
sub
arpl
push
and
adc
adc
mov
pop
imul
mov
push
(bad)
aad
pop
push
fiadd
adc
xor
mov
xor
sbb
in
aad
popf
and
je
dec
mov
shl
cmps
and
cmp
leave
call
dec
inc
mov
cmp
xchg
pop
add
push
rol
ins
aaa
test
int3
mov
imul
call
mov
or
jl
pop
loopne
call
mov
jo
sbb
inc
mov
sub
es
pop
jmp
pop
pop
cmp
xor
sti
sar
xchg
ds
sbb
and
ret
xor
js
sti
jb
leave
loop
popa
call
jg
jle
fiadd
or
gs
xchg
push
and
and
jle
xchg
aad
jp
or
and
jb
pushf
push
inc
xor
inc
jecxz
(bad)
fld
(bad)
or
jle
shl
fidiv
fsubr
push
mov
mov
xor
popa
jmp
rcl
cmp
mov
stc
in
mov
loop
jnp
sub
xchg
pop
outs
outs
cli
sbb
repnz
fucomip
shl
fnstenv
mov
add
add
fisub
mov
adc
cmp
and
ret
cmps
mov
fmul
cmp
mov
mov
iret
pusha
jmp
push
int3
je
aaa
add
xor
test
lds
add
or
loope
pop
mov
jle
or
jno
sub
sbb
lods
jle
jae
jp
adc
loopne
outs
fs
mov
lds
or
push
dec
sar
jb
scas
iret
add
jmp
arpl
inc
(bad)
cs
ja
outs
mov
xor
mov
jg
jle
sub
xchg
pop
(bad)
push
popa
retfw
mov
add
pop
cs
cwde
xor
cmc
mov
mov
stc
fst
push
cmps
push
jo
add
push
fidiv
loop
rcr
jne
nop
shr
inc
adc
mov
mov
imul
add
fld
sub
and
jl
dec
push
pop
sti
jno
es
sahf
stc
nop
jae
pusha
pop
xchg
inc
cmp
mov
pop
mov
adc
jbe
fldcw
mov
(bad)
mov
in
jl
ret
in
ins
or
adc
cmp
js
push
movs
out
aaa
outs
xchg
pop
mov
(bad)
xor
popf
push
aam
movs
pop
add
dec
cmc
stos
mov
sbb
shl
(bad)
popf
fs
les
pop
(bad)
xor
push
adc
add
sub
dec
sub
sub
lea
fidivr
push
mov
ss
cmp
cmp
inc
add
(bad)
shr
clc
fimul
xchg
sub
xrelease
adc
xchg
xchg
cmps
imul
bound
fst
cmp
push
stos
add
mov
mov
aas
sbb
xchg
and
dec
dec
adc
and
loopne
mov
fiadd
mov
jge
mov
cmp
or
sub
push
inc
adc
lds
inc
fiadd
sti
cmp
dec
xor
ja
jo
out
retf
outs
jecxz
in
lock
repnz
inc
sub
add
popa
xchg
cli
xchg
pop
push
arpl
cmps
jg
pop
ffreep
xor
sbb
movs
cmps
xor
jo
mov
sub
lahf
inc
loop
jmp
jnp
or
sub
mov
into
mov
jbe
out
cld
pop
sbb
ss
pop
pop
aas
xchg
xor
std
mov
inc
mov
xchg
cmc
div
inc
adc
lahf
bound
mov
sbb
test
inc
jne
call
fstp
dec
in
pop
mov
add
fsubr
ret
lods
xor
mov
imul
out
add
mov
and
mov
ret
adc
mov
test
es
mov
movs
stos
fistp
dec
rcr
dec
aad
fmul
xor
sub
mov
inc
push
fwait
and
out
cmps
je
shl
aaa
rcl
enter
and
leave
xor
cld
sbb
sbb
lods
in
mov
pop
hlt
aad
repz
inc
mov
dec
fild
mov
ret
sahf
clc
js
aad
sbb
outs
and
outs
test
inc
popa
es
nop
adc
push
jmp
cdq
pop
call
jae
sub
addr16
sbb
test
adc
adc
sub
outs
pop
movs
push
movs
pusha
(bad)
push
inc
popf
(bad)
fstp
aam
adc
stos
fadd
arpl
or
mul
sub
fcmovnu
xchg
dec
add
in
adc
jle
hlt
test
mov
jecxz
mov
lock
inc
leave
arpl
jg
in
xor
mov
lods
call
(bad)
fwait
sbb
mov
sub
sbb
add
rol
cs
rcl
mov
call
sbb
shl
stos
xor
push
jle
rcr
jnp
fcomp
cmp
add
pop
add
ja
push
cmp
mov
(bad)
shr
jge
hlt
stc
add
out
sub
retf
cmp
cmp
(bad)
bswap
ins
mov
or
jmp
bound
xchg
inc
add
mov
daa
xor
nop
or
lea
inc
lahf
int
sub
enter
icebp
xchg
mov
stc
inc
push
and
dec
mov
push
mov
mov
mov
xor
pop
and
xchg
cli
lahf
neg
jb
mov
retf
sbb
les
sbb
ret
or
out
sbb
or
loope
not
mov
je
sbb
inc
pusha
out
and
and
or
pusha
sub
cwde
mov
jp
jmp
adc
push
daa
rol
add
sbb
sub
cmps
sti
cdq
dec
aaa
fucomp
adc
sti
mov
mov
out
xchg
lods
add
and
cmc
fld
movs
or
mov
imul
mov
hlt
jnp
stc
jmp
fld
sub
and
mov
popf
pop
mov
retf
movs
adc
hlt
out
push
pop
sbb
mov
push
data16
or
adc
shl
mov
xor
xchg
mov
daa
sub
adc
cmp
and
jbe
push
les
adc
sahf
xlat
dec
imul
out
ret
fld
adc
retf
mov
leave
ror
lods
and
lds
or
cmp
movs
shl
mov
aad
push
add
jbe
xor
imul
and
movs
push
lock
or
mov
fisub
sbb
xor
add
repz
push
cmp
adc
add
popa
outs
lds
pop
stos
cmp
adc
test
mov
loopne
lds
pop
into
push
sti
sub
ins
and
xor
jg
pop
mov
mov
ins
push
push
push
mov
gs
fdivp
jne
push
inc
loopne
lea
dec
push
and
ror
(bad)
(bad)
pop
and
repnz
add
les
ins
add
cmp
push
mov
(bad)
cmp
jl
hlt
stc
loop
cwde
outs
dec
repz
push
enter
aad
pop
pop
ja
mov
mov
mov
add
mov
or
adc
gs
and
xchg
std
push
dec
icebp
mov
movs
push
xchg
icebp
pusha
mov
mov
xor
cmps
mov
mov
mov
dec
scas
pushf
scas
mov
xor
je
jns
addr16
in
retf
add
push
jp
and
(bad)
jmp
in
bound
int
test
inc
pop
rol
inc
arpl
test
fcom
mov
lea
cmp
cwde
retf
fsubr
jns
scas
fiadd
iret
(bad)
push
out
dec
outs
pop
sub
packsswb
rol
xchg
xor
(bad)
rol
jno
in
xor
jmp
ins
daa
dec
scas
fidiv
and
sar
enter
push
fcom
add
and
aaa
xor
add
fbld
test
cmps
mov
xor
xor
out
sub
lock
out
arpl
mov
inc
loop
sub
xor
pop
movs
test
cli
iret
add
movs
(bad)
cld
add
mov
xor
std
sti
in
adc
xor
std
cmc
push
xchg
mov
push
cld
adc
lods
nop
scas
cwde
mov
ds
sub
inc
xchg
mov
sbb
dec
jnp
nop
xchg
(bad)
inc
std
push
pop
xchg
(bad)
bound
jno
mov
mov
(bad)
fst
mov
dec
cmps
xchg
mov
pop
adc
xchg
inc
fild
adc
pop
mov
or
mov
and
xor
pop
fld
jge
(bad)
mov
retf
test
or
cs
(bad)
aam
(bad)
jae
mov
outs
dec
jbe
leave
pop
loop
ficom
loopne
mov
call
out
inc
push
test
inc
xchg
cmp
call
call
pop
popa
out
pusha
adc
ja
push
pushf
adc
es
and
jg
mov
pop
pop
test
dec
enter
and
dec
add
int
stc
in
loope
test
inc
aas
outs
das
fs
inc
jecxz
int3
arpl
mov
adc
or
stc
jno
pop
mov
cmp
aad
cmp
push
cmps
(bad)
jb
(bad)
popa
js
lods
push
jno
xor
lock
jns
mov
and
arpl
shl
mov
scas
dec
cs
cmp
mov
xlat
scas
adc
inc
mov
inc
sbb
rcr
test
adc
test
sti
inc
int3
mov
aad
dec
or
push
movs
test
or
add
int3
mov
adc
inc
mov
aad
hlt
cs
xlat
lods
retf
sbb
cs
push
push
cmp
jl
dec
cmps
fcmove
fs
xor
(bad)
mov
lahf
or
add
inc
dec
or
dec
ins
(bad)
fst
cli
cli
loope
jl
pop
ret
retf
int
jge
mov
push
pop
cmp
and
daa
xlat
cmp
sub
outs
call
movs
cwde
jo
fnsave
mov
mov
jle
retf
and
push
test
rol
cmp
js
push
ret
pop
out
test
mov
jle
js
enter
dec
add
sbb
push
adc
iret
xchg
(bad)
cs
jnp
std
pop
aaa
adc
repz
dec
and
hlt
and
(bad)
lock
shr
xor
les
pop
pop
or
push
mov
das
mov
dec
or
pop
in
leave
xchg
sahf
mov
push
add
sahf
dec
sahf
sbb
sbb
rol
push
cmps
and
mov
inc
lods
or
push
test
out
jns
or
imul
push
sar
or
push
jns
js
retf
rcl
dec
shl
stos
jbe
popa
lods
inc
hlt
push
sub
pop
out
sbb
or
daa
adc
in
jae
mov
icebp
pop
fisub
mov
lods
or
aaa
sbb
ficomp
add
sbb
pop
in
push
sub
shr
aam
mov
jo
inc
or
cmps
sub
and
sbb
nop
jb
test
add
push
xor
shr
xor
in
sub
shl
test
hlt
pop
aam
not
sbb
or
sbb
aas
js
and
lods
aas
mov
pushf
cmps
out
ja
pop
inc
enter
xchg
mov
int3
scas
mov
mov
aam
jns
lods
ja
dec
cmp
mov
jbe
jle
adc
add
xor
xchg
cmp
cdq
pop
xchg
fistp
(bad)
popa
in
(bad)
and
xchg
xchg
sbb
movs
pop
punpcklwd
stos
pop
cmps
dec
sahf
cld
mov
fimul
fbstp
test
fwait
dec
stc
add
sar
xchg
leave
add
pop
retf
call
cmp
movs
or
add
add
mov
pop
out
ins
push
mov
inc
icebp
inc
bound
or
mov
push
mov
inc
sub
push
or
and
push
fdiv
fwait
or
daa
ror
mov
pop
mov
cmp
into
jecxz
(bad)
leave
cmp
and
sbb
shl
cmp
hlt
sub
js
push
stos
sub
lock
(bad)
call
xchg
or
loop
push
and
mov
gs
add
inc
mov
add
shl
dec
xor
sub
xchg
xor
call
inc
push
xor
dec
adc
cmp
mov
xor
dec
pop
cmp
imul
lahf
pop
mov
push
dec
push
loopne
mov
mov
cmp
or
pmaxub
sbb
xchg
(bad)
arpl
dec
in
ret
xor
stos
and
aam
mov
push
js
push
dec
push
lds
pusha
xor
mov
adc
dec
fadd
cdq
jle
mov
adc
xor
in
in
loope
aas
pop
adc
repz
in
ret
cs
pop
loopne
ds
retf
cmp
mov
cmp
in
jns
ret
xchg
test
icebp
jns
sbb
sbb
push
lahf
mov
dec
add
movs
lock
arpl
sti
lods
adc
ret
mov
stos
(bad)
mov
or
cmps
xchg
test
xor
mov
push
dec
inc
adc
clc
rol
jmp
sbb
retf
aad
sub
inc
jno
xchg
push
imul
fadd
imul
setns
jae
or
frstor
adc
cmc
loope
cwde
out
sub
int
nop
lods
pop
(bad)
fdivr
daa
leave
movs
leave
in
enter
scas
call
pop
and
or
scas
ins
inc
icebp
pop
imul
mov
xchg
std
(bad)
call
in
and
daa
xor
jb
pop
and
xchg
xchg
inc
push
cmp
in
cmp
pop
out
int
cmp
in
addr16
cmp
inc
or
mov
push
out
adc
je
cdq
xor
mov
jne
add
mov
mov
mov
imul
mov
sbb
sub
or
jbe
xor
pop
cmp
push
jae
sbb
fisttp
xchg
xchg
shr
mov
popf
sbb
push
mov
push
ins
xor
int
mov
and
inc
sbb
xor
jp
ret
pusha
nop
and
nop
inc
aas
xchg
sub
pop
sahf
(bad)
xchg
pop
xor
sub
and
jp
dec
and
pop
scas
mov
pop
(bad)
mov
sub
mov
bound
retf
xchg
sbb
enter
dec
lods
cdq
mov
ffree
push
cld
stos
jmp
mov
loope
mov
ja
je
daa
and
imul
pop
sbb
arpl
es
(bad)
jnp
jecxz
fdiv
loop
dec
jg
adc
cmp
push
and
push
fsubr
sti
cmp
dec
inc
(bad)
lahf
test
or
sub
lods
(bad)
or
jle
mov
jno
push
mov
lahf
xor
xchg
sar
out
dec
jb
repnz
jae
pop
or
stos
mov
and
or
fidivr
pop
nop
cmp
or
inc
mov
xchg
mov
inc
nop
outs
inc
jbe
add
or
mov
or
dec
cmp
inc
sub
cmc
sbb
xchg
loope
push
pop
into
xor
xor
js
loop
out
cmc
outs
test
mov
int
sbb
aas
clc
nop
in
scas
jecxz
(bad)
mov
ins
repz
retf
je
push
idiv
cmp
mov
adc
jns
xor
add
hlt
cmps
or
enter
add
xchg
sbb
imul
test
mov
ds
shl
lahf
shld
cmp
sbb
jns
outs
pop
(bad)
outs
cli
xchg
mov
mov
cmp
sub
cmp
jmp
shl
add
dec
pop
ret
mov
outs
or
mov
cdq
sbb
popa
sbb
cmps
in
cmp
inc
pop
mov
and
xor
jmp
inc
movs
jl
scas
ror
jae
sti
adc
push
mov
mov
cwde
xchg
jae
mov
mov
mov
dec
push
sub
loopne
test
push
inc
in
scas
push
pop
out
pop
or
xchg
fidiv
js
addr16
and
jmp
sub
loopne
add
in
xor
mov
inc
mov
and
cmp
adc
bound
bound
fmul
jmp
int3
jmp
call
call
js
push
leave
inc
and
jae
sub
(bad)
int3
mov
in
sbb
fnstenv
mov
jle
daa
popf
lahf
in
mov
xchg
xor
std
mov
mov
mov
adc
inc
(bad)
pop
mov
aas
les
stc
fbld
mov
xor
(bad)
lds
inc
sti
sbb
test
mov
ret
aaa
inc
cmp
inc
iret
fisttp
ja
add
mov
jnp
stos
test
push
ret
movs
rcl
stos
enter
dec
movs
or
mov
push
mov
inc
popaw
dec
call
push
rol
fcmovnu
inc
ret
xlat
xor
push
out
dec
in
rcr
loop
ins
ret
inc
or
xchg
xchg
or
mov
or
(bad)
in
cmp
lods
push
inc
lea
or
sbb
enter
pop
inc
add
lods
(bad)
cs
mov
or
cmp
and
into
mov
jmp
rcl
xor
outs
adc
or
adc
(bad)
mov
dec
push
lods
hlt
loope
push
movs
(bad)
psrlq
jae
jae
test
fs
xlat
je
push
(bad)
sbb
loopne
cmp
push
push
jnp
imul
idiv
adc
or
pop
lahf
push
adc
cmp
pop
inc
push
aad
daa
adc
ret
retf
pop
mov
cmp
movs
popa
loop
or
stc
pop
aas
bound
cmp
cmps
mov
sbb
into
inc
pusha
test
in
xchg
cmp
retf
jle
hlt
xchg
mov
or
imul
cmps
pushf
jbe
jecxz
mov
xor
stc
(bad)
das
mov
repz
inc
repnz
clc
mul
jge
shl
jmp
inc
loopne
mov
add
test
shl
(bad)
jmp
xor
dec
leave
sub
das
push
adc
imul
pop
mov
gs
xor
xchg
pop
jo
aaa
mov
xchg
imul
stos
nop
or
fbld
(bad)
jo
shl
(bad)
push
fld
out
pop
and
cmps
jmp
lods
sub
mov
adc
out
iret
ja
outs
mov
xchg
push
mov
push
jg
jl
stos
dec
inc
adc
mov
rol
retf
pop
dec
sub
imul
dec
and
mov
jmp
cld
les
loope
inc
sar
xlat
jo
lea
pop
ins
mov
std
mov
push
pop
(bad)
sub
ror
dec
and
add
push
sti
xchg
pushf
aas
mov
cmove
jb
(bad)
bound
hlt
mov
bound
enter
sub
out
ds
mov
xchg
and
enter
fmul
add
xor
test
imul
jmp
or
daa
addr16
jbe
fwait
dec
lods
sahf
xchg
push
js
je
cmc
and
call
arpl
ins
imul
loopne
sbb
test
call
push
and
jmp
push
or
pop
les
adc
mov
xchg
fdiv
(bad)
and
pop
adc
enter
test
or
xchg
push
cmp
fwait
rcl
xlat
clc
xor
pop
inc
jae
es
fwait
jmp
or
sbb
or
loope
div
outs
cmps
std
ja
push
ror
enter
iret
and
(bad)
dec
mov
jmp
mov
xchg
pusha
ret
pop
cmp
movs
xchg
xchg
repnz
test
push
ins
nop
sub
and
pop
shl
icebp
mov
mov
int
add
test
clc
lods
aas
mov
inc
stos
shl
mov
in
imul
mov
xor
jmp
stos
push
inc
push
loop
pop
inc
cmc
pop
mov
fld
jo
sub
dec
fcmovu
jb
leave
in
(bad)
rol
dec
std
imul
and
shl
popa
dec
dec
sbb
imul
ds
dec
mov
xchg
stos
jmp
pop
mov
inc
xor
inc
sub
lahf
fwait
pop
icebp
sub
xchg
cmp
mov
scas
sub
or
jecxz
xchg
nop
pop
sti
adc
xchg
sbb
out
xchg
std
fs
js
or
ja
pop
or
pop
push
xchg
test
idiv
and
(bad)
xchg
in
inc
push
fisub
test
inc
xchg
xchg
and
aad
and
xchg
hlt
jge
adc
jb
ins
dec
iret
xor
adc
mov
mov
sub
iret
jbe
ins
aaa
sbb
dec
dec
aaa
pop
fdivr
jb
add
movs
in
aas
in
mov
sub
adc
jne
movs
retf
add
outs
gs
adc
inc
int
or
mov
or
das
fdiv
stos
dec
xchg
jmp
mov
jg
int
jp
jge
push
daa
rcr
fadd
fild
clc
jmp
ins
out
mov
jns
add
xor
mov
ret
(bad)
mov
adc
les
(bad)
and
loope
ss
in
or
int3
div
inc
and
sbb
cmp
jg
iret
jge
dec
lock
sub
dec
cvtps2pd
fistp
(bad)
repnz
pop
ja
rcr
outs
jns
stos
gs
pop
std
jb
mov
ds
pop
hlt
xor
call
xchg
sub
or
imul
mov
mov
inc
xchg
push
add
int
int
inc
inc
gs
std
or
push
lea
out
sub
mov
jae
or
das
sbb
lods
pusha
pop
jo
xchg
ss
jl
mov
ds
xor
and
or
jp
xchg
mov
rcr
cmp
pop
jecxz
sbb
mov
xchg
aas
aas
leave
add
lahf
inc
mov
xchg
jbe
sbb
(bad)
pusha
mov
cdq
push
xchg
pop
cmp
inc
mov
nop
push
mov
ja
cmp
(bad)
or
xchg
sub
fmul
movs
test
jns
fidiv
call
mov
ror
mov
mov
ins
in
inc
pushf
cs
sbb
inc
std
popf
pop
pop
cli
js
and
push
(bad)
outs
loopne
sahf
xor
push
add
leave
sub
lea
fldenv
test
sahf
dec
ins
push
inc
pop
ror
push
add
mov
cmc
or
push
mov
mov
cli
mov
arpl
fcomp
pop
(bad)
loopne
push
sbb
pushf
pop
sub
add
in
jp
ds
loop
fmul
pop
loopne
rcl
add
dec
ret
adc
or
scas
(bad)
aad
sbb
push
sub
outs
mov
jecxz
aam
lods
(bad)
pop
jp
test
rcl
mov
movs
mul
arpl
fpatan
jmp
(bad)
push
jp
fisttp
(bad)
add
lods
cmp
sub
xchg
stos
sbb
cmps
push
daa
das
or
inc
push
mov
mov
mov
int3
xchg
mov
shl
or
fwait
enter
mov
mov
jmp
cmp
inc
jns
lahf
xchg
(bad)
push
inc
cld
mov
xchg
cmp
push
mov
push
push
jae
shl
into
stos
add
dec
xchg
fimul
mov
js
clc
add
mov
stos
push
mov
jp
or
and
mov
test
sbb
out
dec
in
xor
pop
mov
jo
cli
rcl
mov
mov
les
xlat
imul
cmps
in
mov
xchg
push
pop
xor
push
pop
adc
dec
cmps
adc
imul
cmp
inc
inc
retf
push
sbb
jmp
stc
shl
leave
sbb
data16
loop
call
lods
xchg
add
out
or
push
jmp
sub
inc
neg
adc
xor
setp
mov
pusha
mov
stos
out
neg
int
fisubr
movlps
push
aas
mov
mov
cmovle
pop
jp
mov
add
(bad)
cmps
fwait
nop
push
pop
ret
jecxz
(bad)
cwde
sub
bound
loope
jbe
lods
cmp
xor
pop
jae
ins
adc
scas
movs
add
std
push
sub
pop
fsub
sbb
(bad)
xchg
stos
popa
adc
add
jge
inc
stos
(bad)
sbb
mov
ja
pop
dec
jb
lock
add
pop
mov
cmp
arpl
adc
es
or
(bad)
(bad)
push
rol
stos
or
fcomi
adc
jns
mov
out
xor
adc
(bad)
xchg
mov
cmp
push
xor
aad
cmp
imul
nop
xor
xor
or
clc
push
sbb
add
push
add
xchg
push
cld
mov
cmp
fs
adc
inc
retf
clc
jnp
movs
outs
cmc
mov
(bad)
fdiv
sahf
mov
aam
adc
aaa
lds
mov
jbe
call
inc
loop
jmp
fnstsw
mov
sub
fdivr
pusha
fnstenv
movs
scas
repnz
jle
ins
movs
add
aad
ds
mov
adc
inc
iret
mov
icebp
fimul
and
sbb
sub
jns
loopne
sbb
xchg
shr
and
xchg
mov
push
jae
(bad)
cdq
(bad)
movs
std
cmp
pop
ret
mov
dec
add
push
xor
dec
or
inc
adc
neg
push
movs
popf
dec
(bad)
inc
or
(bad)
je
shr
mov
add
vmwrite
clc
cmp
call
imul
outs
je
pop
adc
int
push
lods
es
daa
sbb
mov
push
rcr
fs
and
pop
jl
mov
mov
mov
retf
js
sbb
rol
ds
ret
jns
xor
push
arpl
cmovl
jecxz
xor
mov
jmp
push
ret
mov
cmp
dec
sub
pusha
pop
inc
mov
jp
push
pop
dec
(bad)
push
mov
addr16
mov
xchg
pop
sti
rcr
adc
push
mov
inc
or
js
sbb
jl
mov
hlt
out
xchg
scas
in
mov
push
sub
mov
fdivr
aad
movs
inc
(bad)
jmp
xlat
cdq
xchg
and
dec
loopne
arpl
loope
fild
(bad)
sub
xchg
pushf
jp
lock
nop
call
push
(bad)
and
mov
jmp
sar
cli
inc
ja
push
scas
sbb
outs
fwait
push
emms
test
pop
cdq
inc
js
(bad)
xor
sub
xor
push
or
call
jb
jg
aad
sti
xchg
and
movs
arpl
or
sub
stos
inc
mov
mov
sbb
cmp
fnstsw
popf
or
cwde
imul
mov
lods
rcr
sti
mov
outs
sub
xor
mov
or
ja
pop
test
jp
jmp
mov
xor
sar
cs
pop
cmps
int
adc
inc
inc
mov
(bad)
ret
lea
imul
cmp
xor
sub
imul
push
arpl
mov
cmp
push
ins
je
dec
imul
aam
push
js
add
shl
movmskps
push
leave
daa
sub
repnz
sbb
and
xchg
dec
sub
push
test
sbb
addr16
pop
mov
sub
jg
leave
(bad)
or
sbb
xchg
sahf
and
mov
in
sub
fs
dec
inc
test
jp
in
(bad)
icebp
and
popa
fs
cmovo
push
mov
cmp
sahf
enter
cmp
test
loopne
jecxz
fbstp
arpl
xlat
outs
dec
sahf
stos
adc
and
jp
repz
pop
jnp
xchg
iret
imul
sub
movs
inc
add
push
fisttp
push
inc
outs
xchg
sbb
retf
jo
enter
mov
adc
sbb
pop
cmp
xchg
xchg
mov
sti
xor
daa
mov
mov
mov
div
or
inc
hlt
jbe
mov
loopne
cdq
jecxz
or
das
fnstsw
retf
xlat
or
cmps
mov
lods
pop
push
push
and
sub
aaa
jne
fs
jg
or
pop
sub
pop
rol
aaa
sbb
and
jmp
jnp
loop
or
sub
fist
pop
jmp
jl
ss
dec
retf
in
xchg
daa
pop
arpl
xor
mov
ins
xor
pop
lods
push
pop
inc
fisttp
outs
outs
test
in
mov
mov
mov
cs
(bad)
push
mov
cmp
jle
inc
sahf
push
dec
jo
adc
inc
std
sbb
movs
jmp
enter
add
addr16
pop
pop
lods
fmul
movs
aad
arpl
outs
adc
sahf
ins
inc
stos
bound
sbb
mov
clc
int3
pusha
sbb
and
scas
xchg
xor
jns
imul
popf
mov
int
loopne
outs
mov
inc
sub
es
push
push
clc
pop
cmps
jae
repz
popf
in
xor
mov
neg
movs
stos
cmp
add
cmps
pop
data16
(bad)
dec
pop
scas
lods
push
sub
xchg
jo
fsqrt
cdq
arpl
fiadd
adc
jmp
push
or
popf
and
arpl
test
mov
lock
mov
jnp
scas
mov
sqrtps
cmp
into
les
mov
lock
push
and
cmc
lahf
fstp
iret
xchg
enter
mov
leave
fdiv
imul
jle
push
push
dec
int3
jle
pop
icebp
fwait
(bad)
(bad)
out
mov
imul
jbe
inc
mov
loopne
iret
xchg
push
in
mov
adc
sbb
or
push
cmp
es
pop
and
fnsave
and
mov
ret
push
test
xlat
fild
in
nop
retf
push
xor
push
cmp
mov
mov
and
inc
aas
adc
es
(bad)
fidiv
xor
loop
jge
push
fs
or
or
cmp
imul
push
add
adc
dec
dec
mov
out
dec
hlt
jae
js
pop
das
mov
mov
jmp
(bad)
clc
repnz
fsubr
aam
test
jp
hlt
ins
or
dec
adc
or
push
in
dec
push
ins
mov
add
bound
inc
mov
mov
(bad)
popf
mov
addr16
movs
aaa
xor
and
mov
push
jg
aas
idiv
mov
retf
add
shl
xchg
push
adc
xchg
xor
test
div
jmp
xor
dec
fnstsw
sub
xchg
cvtdq2ps
bound
cmps
xchg
add
inc
shl
and
mov
loop
dec
pop
or
inc
or
mov
aaa
das
jno
cmps
jne
dec
scas
ins
out
pop
lds
sti
test
(bad)
cmp
mov
add
nop
retf
adc
mov
lds
xor
sti
data16
xchg
mov
pushf
loop
xlat
push
fwait
pop
jbe
fiadd
mov
imul
sub
or
mov
jmp
das
adc
xlat
out
test
push
dec
shl
arpl
test
nop
pop
jno
out
cmp
fidiv
retf
jb
push
ins
aam
push
or
cmp
push
mov
cwde
retf
adc
mov
int
mov
iret
push
adc
adc
or
int3
or
int3
cwde
fucomp
mov
cdq
mov
fisub
sub
mov
inc
xchg
jns
sbb
into
out
aaa
hlt
scas
in
repnz
test
pop
sbb
test
xchg
sbb
pop
xchg
cli
and
dec
and
sbb
add
cmps
pop
fs
jmp
xchg
ficom
shl
pop
outs
cmp
dec
inc
aaa
std
in
push
and
lods
lods
inc
sub
xchg
jp
mov
jo
or
pop
pop
data16
xchg
add
outs
jmp
cmp
pop
movs
mov
xor
jbe
xchg
mov
outs
inc
add
lds
mov
adc
fidivr
or
inc
and
lock
add
dec
push
push
retf
sub
pop
push
scas
pusha
fwait
mov
sbb
stos
jmp
and
sub
cmp
sbb
mov
jo
std
loope
dec
test
sub
icebp
add
lea
pop
inc
mov
aad
sub
les
push
enter
lds
sbb
lea
pop
jecxz
jo
lods
das
mov
sbb
or
test
mov
sub
out
cmp
retf
sbb
out
imul
(bad)
sub
pop
jae
and
mov
or
test
ror
and
ss
cmp
mov
mov
push
push
or
(bad)
jl
xor
dec
add
aam
sub
inc
mov
push
lock
retf
mov
sbb
in
push
mov
push
aaa
xchg
push
jbe
call
enter
cmp
ins
mov
hlt
xchg
xchg
jl
inc
test
mov
mov
movs
dec
sahf
ins
mov
ret
dec
iret
cmps
not
cmc
popa
xor
jnp
leave
and
dec
mov
xchg
mov
and
add
add
stos
dec
loopne
pop
jp
mov
enter
scas
and
dec
jmp
out
test
mov
inc
cmc
jb
dec
imul
mov
ds
jg
sub
adc
cmc
call
test
adc
sub
xchg
arpl
mov
or
ins
sub
sbb
loopne
cmp
lds
(bad)
jo
xor
jo
sub
ins
sub
sti
push
dec
xor
adc
pop
inc
cmp
mov
movs
push
push
xchg
sbb
dec
mov
pop
lods
leave
and
out
loop
push
push
sar
sbb
jnp
shl
test
add
jle
or
and
cs
inc
ret
repnz
mov
cld
or
mov
pop
sbb
lds
xor
ds
push
arpl
aaa
add
cwde
inc
pop
push
into
mov
pop
pop
add
ror
sbb
out
cmc
xchg
dec
jno
jmp
inc
iret
div
repnz
push
(bad)
cli
and
cwde
jp
dec
movs
jbe
clc
shl
mov
mov
sub
lahf
in
ja
or
ja
test
data16
sbb
xchg
std
push
fild
jns
inc
mov
mov
dec
pop
cmp
mov
xor
data16
add
out
out
jne
mov
in
iret
push
ret
pop
pop
dec
mov
inc
jg
sbb
lods
scas
fsubrp
call
dec
dec
jo
push
sub
fild
jecxz
repnz
retf
add
and
aam
pop
or
frstor
xor
dec
fistp
push
jb
lss
dec
mov
in
push
mov
or
ja
rol
iret
cdq
rol
lock
dec
jo
adc
int3
mov
js
sar
sbb
and
ins
or
jmp
stos
imul
call
mov
sbb
push
aas
ret
sub
sbb
add
xor
sbb
sti
sub
mov
add
call
lea
sub
fcmovu
adc
cmc
add
fs
outs
mov
imul
jae
adc
mov
push
test
pop
cld
repz
mov
lods
in
int
mov
aad
shl
stc
test
nop
sub
scas
cld
cmp
daa
retf
ret
mov
xchg
jae
stc
push
or
cmc
mov
mov
loopne
pop
loop
xchg
xchg
mov
push
popa
je
(bad)
mov
dec
les
les
jl
stc
imul
push
cmps
and
(bad)
sub
adc
add
push
xchg
test
pop
cld
(bad)
rcr
rcl
fwait
(bad)
sahf
sbb
rcr
call
or
(bad)
lods
dec
lahf
mov
mov
out
popf
ja
loop
cmp
xchg
neg
imul
cmps
(bad)
mov
pop
pop
xchg
fcmove
in
jmp
mul
aad
push
cmp
adc
std
push
mov
gs
retf
mov
loope
shl
and
lds
inc
mov
mov
bndldx
rcr
jl
jno
mov
pop
dec
leave
mov
pop
mov
stos
cmps
(bad)
jecxz
jl
data16
nop
push
fcomp
(bad)
pop
(bad)
ss
xchg
mov
ins
add
data16
inc
es
xor
in
not
jbe
das
mov
inc
mov
fistp
mov
or
int
neg
add
loop
mov
repz
jbe
ror
jecxz
iret
int3
jmp
mov
dec
inc
and
mov
sub
sbb
outs
or
mov
ret
mov
out
in
or
sub
pop
into
jmp
jge
shr
test
xchg
test
mov
mov
les
cmp
loop
cwde
cmp
in
and
in
jl
push
das
cwde
jecxz
mov
adc
cmp
fisttp
repnz
jge
jl
les
xchg
rcl
test
pusha
and
(bad)
sbb
sub
jb
mov
shl
ss
lds
pop
in
stos
stos
ffree
add
fdiv
es
enter
adc
xchg
rcr
cmps
mov
inc
add
xchg
pop
push
pop
add
mov
push
cmp
sub
addr16
shr
cmp
and
in
mov
mov
fild
mov
inc
out
loopne
out
and
push
imul
ins
mov
gs
jb
jmp
inc
neg
shl
push
dec
fstp
xchg
outs
div
push
mov
nop
push
std
fs
jmp
mov
jmp
sub
sub
repz
jecxz
test
add
push
fucom
popf
sub
jmp
outs
jg
or
test
shl
xchg
movd
popf
movs
scas
aas
cmp
stos
jg
fisttp
test
and
inc
shl
aam
sbb
mov
(bad)
xchg
pop
fidivr
xchg
push
pop
inc
daa
and
and
adc
xchg
sbb
mov
adc
retf
dec
sub
push
adc
mov
mov
xchg
clc
movs
cmp
movs
sar
sar
(bad)
sub
cmp
mov
mov
sbb
or
cmp
je
fs
and
add
cmc
leave
mov
jb
scas
jnp
(bad)
gs
hlt
(bad)
dec
cmp
sbb
sahf
mov
adc
lods
push
into
movs
adc
fs
cli
jae
call
popa
pop
cmps
mov
test
dec
pushf
test
out
in
xchg
cli
retf
push
push
(bad)
mov
pop
leave
jp
push
jae
pop
rcl
jb
clc
loop
jmp
xor
pop
outs
add
mov
sbb
das
adc
mov
and
fwait
mov
pop
cmp
jns
fidivr
dec
fs
xchg
ins
pushf
pop
test
mov
mov
test
dec
cmp
(bad)
out
fsub
or
adc
out
or
xor
mov
movs
cmp
stos
add
jmp
push
and
movs
movs
jne
fwait
mov
clc
sbb
mov
xchg
jbe
push
ficom
pop
xchg
cmc
in
cdq
push
add
sub
hlt
pand
jge
pusha
cmps
mov
pop
sahf
mov
hlt
xchg
mov
movs
das
push
test
nop
jne
add
jecxz
retf
arpl
cmp
sub
and
mov
cmps
pop
inc
ret
add
(bad)
and
out
ss
xor
jbe
xor
aam
test
xchg
jg
xchg
xchg
(bad)
and
jnp
pcmpeqw
out
sub
jge
out
(bad)
mov
mov
shl
jg
loop
xor
mov
push
call
dec
scas
loopne
in
inc
pop
pop
jne
outs
shl
push
xlat
paddd
lahf
idiv
bound
(bad)
xor
ss
retf
fist
mov
jb
stc
in
or
into
fiadd
imul
cmp
pop
cmp
jmp
(bad)
add
stos
mov
add
xchg
mov
jecxz
ret
cli
aam
mul
add
fcom
push
outs
xor
cmp
dec
sbb
jle
pop
mov
icebp
dec
xchg
xchg
in
inc
cmp
cdq
loopne
cmp
mov
scas
popf
mov
sub
int
sub
fnstsw
xor
test
pop
xchg
cli
cs
stos
pop
icebp
mov
xchg
jmp
cmps
mov
hlt
cdq
mov
aas
dec
jae
and
pop
out
cmps
mov
push
(bad)
in
in
les
mov
inc
popa
leave
adc
push
daa
fisub
pusha
add
adc
xor
sub
sub
outs
sub
loopne
call
adc
push
scas
test
mov
cli
(bad)
in
jae
(bad)
jl
sbb
mov
push
xchg
mov
jmp
and
or
mov
add
inc
mov
pop
nop
sub
mov
daa
lods
pop
cs
shl
push
cmp
inc
sbb
rcr
sbb
cs
xor
push
in
sbb
mov
mov
sub
fucomip
adc
rcl
add
mov
xlat
inc
retf
scas
or
mov
add
scas
xchg
imul
shl
sub
xor
test
inc
or
fwait
jmp
dec
inc
xchg
mov
mov
pop
jle
mov
mov
xlat
mov
cmc
cmp
not
mov
push
inc
mov
sbb
mov
stos
pop
jo
mov
mov
iret
jp
ret
aam
mov
xchg
jmp
retf
jmp
pop
cs
pop
sbb
es
cmps
ds
jmp
shl
dec
test
pop
ret
lahf
pop
sub
adc
repz
(bad)
clc
lock
pop
(bad)
jmp
inc
cmp
shr
lods
push
adc
jb
ficomp
cs
add
and
pushf
fnstenv
dec
and
clc
sbb
das
pop
arpl
fwait
mov
xchg
push
inc
or
nop
jecxz
pop
sbb
dec
in
jl
sub
in
inc
jo
mov
jl
fs
sub
jle
push
std
jmp
lods
jge
arpl
mov
push
add
cmp
jp
mov
scas
scas
leave
jo
xchg
ret
rol
test
pushf
in
mov
xchg
(bad)
dec
sbb
xchg
mov
inc
test
jg
push
xor
cmps
and
mov
cdq
test
scas
pop
fs
and
jno
std
pop
dec
call
add
xor
mov
dec
cli
(bad)
mov
xor
ret
mov
inc
jp
mov
xor
xchg
call
lods
test
adc
mov
dec
popa
mov
mov
cmp
xchg
loop
push
jg
scas
enter
ds
inc
add
fucomip
sub
test
add
jbe
jl
(bad)
cmp
je
jno
outs
mov
mov
ffreep
ret
mov
rcr
push
push
fs
add
pop
mov
sti
pop
and
sahf
mov
mul
call
jno
cmps
sahf
scas
fs
clc
lea
jns
sub
push
outs
jno
xchg
jne
pop
dec
inc
jo
sbb
out
syscall
add
and
cmp
(bad)
into
outs
in
test
fld
jle
lods
mov
cwde
pusha
scas
mov
je
xchg
jmp
mov
jl
fld
gs
pop
aam
shr
bnd
nop
jmp
leave
inc
dec
popf
ja
(bad)
jl
dec
and
xchg
sbb
or
das
popa
push
jge
push
rol
stos
cmp
cmps
add
clc
aam
test
jns
sbb
mov
push
sub
sub
je
add
or
cld
sbb
xor
xlat
rcl
lds
dec
gs
jp
adc
mov
lds
xchg
shr
push
xor
dec
shl
mov
mov
mov
mov
gs
bound
jno
(bad)
push
aas
(bad)
test
das
sbb
js
mov
fwait
push
inc
popf
ss
loopne
push
movs
jg
jno
sub
cld
pop
jmp
xor
mov
je
mov
dec
push
cmps
ja
pop
leave
mov
dec
or
mov
movhlps
mov
inc
outs
adc
push
movs
arpl
add
leave
call
and
(bad)
inc
or
mov
lea
(bad)
retf
pop
add
fwait
jns
and
cwde
and
xchg
pop
sbb
pop
sbb
jae
(bad)
pop
and
into
movs
int
inc
inc
dec
dec
movs
cli
imul
dec
or
pushf
enter
retf
fst
dec
test
pop
cdq
xchg
test
jo
adc
jb
mov
icebp
cmp
shl
mov
jmp
fnsave
or
mov
mov
push
jecxz
pushf
(bad)
fucom
xchg
or
push
adc
faddp
dec
dec
loope
iret
xchg
test
aad
adc
xchg
arpl
imul
inc
(bad)
or
bound
sub
ret
rol
fstp
and
hlt
retf
stc
arpl
and
pusha
int3
jle
faddp
pop
pop
jo
aaa
dec
jl
bound
mov
sub
pop
ja
inc
xor
in
fcom
mov
bound
daa
daa
mov
mov
xchg
retf
sbb
ja
js
dec
out
mov
or
movs
inc
in
lock
and
scas
sub
jle
dec
mov
mov
sbb
adc
jne
and
shl
xchg
mov
lea
cld
cmp
loopne
push
in
push
add
mov
cmp
stos
shl
inc
xchg
or
rcl
xchg
iret
inc
aaa
popa
popa
xor
jno
adc
fs
jne
mov
mov
mov
or
test
out
xchg
test
and
ficomp
mov
add
cmp
and
inc
jb
xor
loop
xchg
mov
or
add
and
jp
retf
dec
pusha
jecxz
mov
push
ins
mov
mov
push
mov
and
jns
ss
push
mov
jns
rcl
adc
fadd
xchg
popa
dec
lds
push
(bad)
scas
aad
push
jg
retf
mov
(bad)
ss
aaa
out
ja
fnsave
popa
fmul
inc
jbe
cld
lds
loopne
std
mov
cmp
cmps
sbb
mov
outs
mov
add
mov
or
pusha
mov
je
add
popa
(bad)
(bad)
push
scas
adc
std
jle
pushf
push
movs
push
mov
sbb
mov
call
push
sub
jbe
push
test
xchg
fistp
push
(bad)
pusha
ins
inc
neg
int
jl
dec
test
mov
jnp
(bad)
iret
aas
or
or
aam
adc
dec
pop
xor
jbe
faddp
scas
test
test
jnp
js
call
aam
mov
and
pop
pop
test
sar
add
cmps
or
ds
movs
test
xchg
xchg
scas
mov
jmp
pusha
xchg
(bad)
ror
xchg
mov
popf
into
test
adc
dec
ss
dec
loopne
jnp
mov
test
jnp
add
(bad)
pop
jmp
mov
mov
test
xchg
imul
test
sub
out
sub
xchg
scas
aaa
dec
out
stos
leave
(bad)
movs
(bad)
ins
hlt
fisttp
pop
inc
sbb
sbb
xchg
leave
icebp
xor
or
or
push
adc
gs
jl
bound
push
ja
in
add
sahf
aad
add
outs
inc
mov
push
je
movs
jno
mov
jg
hlt
repz
test
iret
dec
cwde
fs
mov
xor
fld
add
cmc
fwait
into
sub
(bad)
pushf
inc
rcr
(bad)
stos
out
jmp
xchg
xchg
mov
sub
and
jb
sub
popf
xchg
test
in
push
inc
ja
sbb
adc
xchg
xor
retf
jge
inc
add
pop
push
mov
loope
xor
adc
(bad)
in
repnz
add
(bad)
fsincos
xor
test
and
ja
sub
mov
add
adc
mov
mov
mov
xor
cmp
push
push
pushf
cmp
aaa
jg
lahf
or
loope
sbb
mov
pop
xlat
ss
xor
fsubr
mov
out
xchg
sub
fmul
mov
xor
mov
fs
push
push
and
in
and
cmp
test
dec
jmp
cwde
pop
retf
add
sti
add
mov
add
push
(bad)
in
dec
dec
imul
lods
cmps
(bad)
es
(bad)
ss
js
adc
mov
adc
dec
imul
cs
sbb
dec
and
shl
repz
(bad)
mov
cld
pop
mov
and
xor
inc
or
xchg
mov
test
xchg
sahf
xchg
jo
stos
aaa
push
pop
push
imul
push
movs
xchg
or
shl
mov
jbe
jg
dec
movs
cmp
inc
bound
(bad)
lahf
mov
or
(bad)
jecxz
jb
mov
push
daa
push
xchg
mov
mov
xchg
jno
jb
nop
dec
fmul
and
xor
xchg
outs
cmp
pop
inc
aam
xchg
mov
fwait
mov
mov
xor
rol
jmp
dec
into
addr16
cmp
inc
aas
adc
test
aaa
dec
dec
ss
adc
mov
fadd
add
push
clc
and
nop
xchg
pop
xor
popa
outs
sti
sbb
call
retf
icebp
adc
xchg
mov
mov
hlt
inc
fwait
xor
jb
sbb
add
(bad)
and
(bad)
mov
jp
mov
mov
add
sub
jmp
jge
stos
xor
mov
adc
arpl
xor
clc
rol
sub
push
jmp
jno
dec
(bad)
mov
push
out
adc
cmp
mov
das
and
mov
das
push
xor
sbb
outs
aam
and
jno
aam
rol
ja
clc
es
inc
sub
push
add
sbb
scas
bound
mov
test
inc
mov
mov
adc
aas
xor
retf
fsub
mov
jp
jmp
scas
cmc
mov
jge
jmp
aam
push
(bad)
push
mov
or
jmp
les
add
pushf
or
add
pop
sub
lea
inc
pop
rcr
sbb
dec
inc
(bad)
cli
(bad)
or
clc
test
jns
mov
out
ins
leave
shld
mul
psubw
sbb
(bad)
sbb
cmps
mov
cmp
stos
mov
push
dec
jle
cmp
pop
and
popa
sub
sub
jmp
push
xor
or
add
inc
test
mov
mov
lods
jp
fimul
in
cmp
jle
push
(bad)
pop
mov
je
mov
mov
xor
call
and
mov
lock
sub
pop
clc
pushf
scas
lock
das
jmp
sar
outs
jl
repnz
push
(bad)
inc
sahf
push
xchg
shr
and
leave
loopne
cdq
pop
ins
icebp
and
push
pop
rcl
cdq
and
xchg
mov
xchg
dec
lods
mov
mov
iret
leave
(bad)
fnstenv
jl
rcl
ins
bound
mov
push
mov
cmp
xlat
je
add
rol
les
bound
xchg
push
mov
jbe
fcom
inc
push
jb
mov
inc
push
jb
nop
inc
sbb
popa
(bad)
mov
in
mov
dec
cmp
fisub
in
xor
mov
cmp
es
mov
jne
ins
inc
jbe
lahf
lock
xchg
pushf
js
cmp
cdq
idiv
add
pop
stos
fdiv
and
popa
pop
or
xchg
fyl2xp1
sbb
sub
icebp
(bad)
leave
xchg
js
cs
ror
cdq
ja
clc
push
add
aas
or
jmp
pop
cmp
test
aaa
sbb
test
into
sbb
push
(bad)
add
fsubrp
pop
add
nop
sub
test
nop
sti
xchg
adc
(bad)
outs
leave
push
and
inc
ds
addr16
pop
in
out
test
(bad)
inc
ret
fstp
xchg
inc
jle
in
cmp
sub
push
je
push
addr16
or
jae
inc
add
mov
addr16
mov
popf
add
cli
jne
xchg
mov
or
pop
out
repz
es
fs
or
sub
and
and
std
pop
xor
(bad)
addr16
jecxz
rcl
jmp
jg
rcr
ja
fist
xchg
and
movs
dec
xor
cmp
outs
movs
fs
and
dec
jae
outs
jno
inc
or
jbe
inc
retf
fld
and
cmps
inc
push
sub
stos
ins
xchg
xor
mov
pop
sti
push
ret
sahf
sbb
add
icebp
in
jp
cmp
push
int3
mov
ja
pop
or
cmp
enter
ins
test
stos
jo
xchg
dec
cmp
push
add
push
inc
in
mov
inc
pop
jb
ss
inc
mul
and
add
cmps
mov
jbe
add
cmp
xchg
jne
fisttp
dec
push
xchg
mov
ins
pop
xor
and
mov
jnp
xchg
fisub
jmp
jbe
push
add
out
fsubr
(bad)
mov
lds
fld
fild
sub
jle
hlt
push
(bad)
outs
ds
jnp
cmp
leave
mov
and
aaa
sbb
arpl
mov
lea
sub
mov
(bad)
loopne
jae
cmp
outs
jb
xchg
es
sar
mov
test
lods
xchg
adc
cdq
push
push
push
push
cs
sbb
leave
and
inc
in
mov
test
add
inc
jmp
test
adc
ins
xchg
mov
rcl
cld
and
jo
xchg
inc
or
fst
ins
mov
push
outs
pop
cmps
repnz
inc
and
pushf
in
cmp
shl
sti
hlt
push
cmp
sbb
stos
pop
pop
cmc
sub
fwait
mov
mov
in
sbb
shl
test
in
jecxz
sub
ds
sbb
pop
ins
and
enter
and
push
stos
add
push
gs
sbb
add
imul
repz
test
push
shl
nop
cwde
inc
ret
stc
test
aad
push
dec
push
les
jg
push
pusha
jecxz
inc
or
ds
enter
in
loopne
iret
adc
in
and
gs
dec
lds
(bad)
loope
pop
mov
movs
or
scas
xor
xchg
or
pop
cmps
out
test
mov
(bad)
sub
cdq
aaa
adc
mov
push
shl
xchg
push
outs
pop
cmp
fadd
outs
stos
in
jl
cwde
add
jmp
push
mov
xchg
or
out
mov
rol
stos
test
sub
sbb
out
leave
mov
out
nop
test
sub
mov
mov
add
paddq
xor
mov
gs
pop
or
dec
mov
sar
mov
out
mov
push
test
push
les
popa
dec
add
lods
mov
xchg
in
popf
movs
shr
mov
lds
gs
mov
or
hlt
bound
fbld
(bad)
adc
pop
jg
cmps
and
push
inc
dec
enter
cmp
mov
mov
dec
popf
(bad)
dec
ds
outs
in
or
push
cld
in
add
and
cmp
hlt
(bad)
lods
push
adc
push
xor
daa
sub
sbb
cdq
and
mov
inc
push
adc
aas
daa
loopne
adc
mov
jmp
frstor
fwait
dec
ja
cdq
xchg
les
hlt
test
mov
ds
ins
fcom
adc
ds
xchg
push
mov
adc
add
mov
cmps
addr16
inc
mov
in
aad
xlat
je
int3
cli
jmp
ret
jge
adc
aaa
out
pop
jmp
arpl
xor
sahf
dec
test
loop
scas
(bad)
int3
cwde
push
stos
mov
pop
repnz
add
outs
push
jmp
xor
ret
pushf
mov
call
jle
dec
mov
pop
les
cmps
jnp
mov
xchg
out
and
push
jmp
mov
aad
cmps
pop
cmp
xor
jae
cld
in
mov
imul
cmp
dec
jns
push
aas
addr16
xchg
stos
scas
mov
and
mov
or
repnz
sub
inc
pop
ficom
fld
lods
shl
sbb
dec
test
sbb
xor
or
aad
leave
push
pop
jmp
jnp
cmp
jmp
cmps
mov
jmp
xchg
in
lock
cmps
outs
js
ss
mov
les
xor
out
outs
mov
sar
enter
push
or
cwde
mov
jge
cmp
pop
enter
sub
and
xor
cld
mov
pop
push
dec
fcomp
fdiv
jmp
cmp
or
and
cs
in
les
iret
or
add
pop
stos
(bad)
jmp
gs
adc
push
das
mov
or
adc
retf
std
aam
xor
mov
dec
mov
xor
xchg
jbe
sub
adc
imul
dec
or
lods
cmp
mov
nop
push
popf
call
rol
call
paddq
mov
dec
sub
jmp
pop
(bad)
loopne
xchg
mov
fdivr
les
or
arpl
call
or
and
add
into
push
xchg
not
ret
or
sub
fidiv
fbstp
cmc
leave
sub
or
jnp
inc
retf
xor
and
aam
adc
push
fistp
mov
push
adc
scas
or
pop
pop
dec
lea
xlat
test
lea
or
dec
ret
stos
ficomp
inc
shl
mov
cmp
loopne
clc
jb
aas
dec
scas
clc
xor
adc
scas
cmp
clc
sti
or
mov
jle
push
fdiv
pop
int
cmp
inc
add
dec
int
push
jecxz
daa
pop
test
push
outs
mov
xchg
pop
lahf
(bad)
ficom
stc
dec
push
or
add
icebp
scas
test
sbb
inc
retf
les
push
jns
mov
and
sub
lahf
add
dec
imul
movs
imul
xchg
or
mov
xor
ins
pop
pop
adc
ins
ret
sbb
addr16
mov
inc
fld
or
(bad)
out
scas
mov
mov
xchg
sbb
ror
les
or
mov
shl
test
and
lock
mov
aas
adc
repz
sub
ss
inc
enter
adc
enter
mov
adc
js
pop
gs
ret
(bad)
dec
cmp
dec
pop
loop
loope
inc
cmp
xlat
aad
mov
ret
jo
inc
aaa
lods
test
repnz
loope
mov
sbb
scas
lahf
iret
cmp
add
mov
cs
xor
clc
push
jo
int
lds
sub
push
outs
fisub
mov
mov
lods
std
in
retf
dec
cli
in
sbb
xor
xor
mov
imul
xchg
faddp
cmps
(bad)
xchg
sbb
jmp
jp
test
pusha
adc
push
cmp
dec
jbe
(bad)
popa
mov
push
pop
push
push
int3
xlat
xor
mov
test
xlat
xchg
cmps
cmps
add
or
call
cdq
inc
test
out
aam
fs
pop
dec
push
pusha
adc
daa
mov
sbb
push
push
add
les
test
sahf
dec
cmp
movs
call
(bad)
adc
icebp
xor
(bad)
push
test
rcr
sub
mov
ror
lods
pop
shl
adc
gs
xchg
fnstcw
stos
dec
aam
xchg
pop
(bad)
dec
arpl
aas
dec
rcr
xor
je
dec
retf
and
or
inc
pop
fs
sbb
les
pop
jne
iret
(bad)
xchg
sbb
dec
mov
mov
call
pop
out
add
cdq
jmp
and
gs
mov
jp
sahf
push
sbb
or
pop
mov
out
retf
pop
xchg
mov
or
mov
scas
icebp
enter
xchg
adc
push
cmp
jns
or
mov
xchg
mov
pshufw
retf
aad
(bad)
lock
push
sbb
in
movs
hlt
ja
xchg
mov
fisubr
push
or
inc
mov
sbb
and
pop
push
add
cmp
mov
mov
pop
cdq
push
fimul
cmp
sub
cmp
mov
fnsave
(bad)
aad
xor
pushf
(bad)
aas
cwde
leave
int3
xchg
jno
ins
mov
xor
mov
or
int
jo
jle
mov
pop
(bad)
aad
test
shl
leave
inc
cld
test
sub
scas
pop
dec
push
scas
into
add
std
xlat
xchg
add
mov
adc
and
sbb
int3
dec
in
(bad)
sti
cmp
inc
pop
push
stc
or
bnd
outs
(bad)
jne
stos
in
mov
add
xor
mov
adc
stc
mov
ja
daa
mov
dec
pop
inc
pop
cld
(bad)
stos
push
arpl
sbb
mov
cmc
xor
stos
dec
movs
push
pop
mov
xchg
das
call
jge
imul
jnp
jns
inc
adc
jg
and
inc
arpl
dec
ss
pop
xchg
push
xchg
and
dec
je
(bad)
dec
push
adc
int3
inc
push
nop
jecxz
nop
mov
aas
mov
jge
mov
fsubr
lea
int3
add
adc
adc
out
pop
xor
or
mov
jecxz
psrlw
rcr
out
jae
add
je
popa
jno
mov
mov
fbld
mov
icebp
mov
push
sar
lods
ja
test
adc
cmps
hlt
lea
dec
sbb
adc
and
mov
test
call
sbb
popf
push
lods
mov
xchg
std
paddusw
hlt
sbb
repz
sbb
(bad)
dec
(bad)
adc
and
mov
mov
sub
sub
xlat
in
mov
sub
jmp
jle
mov
xchg
mov
adc
jb
(bad)
in
add
std
sub
xchg
jge
call
mov
dec
jle
or
js
xchg
int
test
pop
xchg
xor
pop
bndldx
enter
test
and
aaa
sbb
ret
pop
enter
popa
mov
mov
gs
out
add
and
sbb
sub
xchg
sti
jmp
xchg
jno
call
sbb
adc
ins
test
xchg
int3
xor
fwait
ret
shl
push
mov
dec
mov
xchg
pop
cdq
retf
dec
jnp
loope
add
movs
les
int3
rol
sub
(bad)
imul
or
push
test
icebp
mov
pop
jno
and
add
(bad)
call
(bad)
and
adc
ds
lds
adc
push
out
push
dec
mov
shl
or
adc
fidivr
fsubr
popf
lods
mov
inc
xchg
inc
dec
mov
cmc
sub
lds
adc
dec
sahf
gs
stos
imul
out
jae
xor
test
dec
or
mov
pop
cli
daa
(bad)
sbb
int
jo
movs
fdivr
inc
sub
popf
inc
aas
addr16
or
imul
pop
push
rcl
lock
ficom
les
(bad)
inc
push
xchg
mov
jnp
sbb
ins
ror
sbb
rol
mov
and
mov
push
pop
loope
scas
loope
call
sahf
cmp
jg
leave
inc
in
mov
adc
and
jno
sub
push
mov
enter
ficomp
xchg
mov
or
jle
push
fsub
leave
fcom
cmp
(bad)
jns
mov
mov
daa
cdq
jg
xchg
ror
in
jns
test
stos
aad
inc
mov
push
cmp
popf
icebp
adc
into
je
pmaxsw
xor
push
test
jmp
(bad)
loope
pop
test
mov
pop
inc
mov
sub
cmps
or
stc
std
or
cmp
jo
shl
cmps
shl
mov
pop
mov
addr16
jge
push
push
dec
clc
hlt
retf
and
outs
jge
jmp
lea
xchg
xchg
add
sub
adc
xchg
and
retf
mov
aaa
sbb
xchg
lock
cwde
add
sub
mov
sahf
vpcmpeqd
dec
(bad)
xchg
fdivr
imul
pop
(bad)
out
stos
loopne
loope
ror
daa
int3
add
loop
shr
dec
add
mul
cld
sbb
push
mov
pop
das
xchg
mov
test
mov
dec
xchg
call
cwde
ds
jns
sub
push
addr16
push
ds
call
sub
fst
aaa
xchg
xchg
sbb
ror
(bad)
mov
fimul
cmps
test
mov
sbb
inc
mov
retf
pop
push
in
push
sar
add
dec
stc
xchg
inc
and
dec
inc
dec
inc
inc
adc
add
cmp
ss
push
mov
cwde
cld
sbb
sub
jmp
std
xchg
mov
inc
arpl
cmps
popa
int3
int3
aas
sbb
fld
les
or
test
pop
xchg
cdq
iret
mov
retf
pop
sahf
and
mov
and
push
sbb
mov
mov
mov
sub
retf
scas
std
ss
fist
dec
xor
xor
dec
idiv
dec
jbe
xchg
sbb
jl
inc
or
mov
div
aad
sbb
cmp
and
push
mov
sub
pop
jae
dec
nop
and
cmp
sbb
cmp
pop
dec
stc
inc
push
and
pushf
cmp
jmp
in
adc
call
dec
xchg
das
push
mov
dec
xchg
xchg
cld
loop
lahf
clc
mov
movs
shl
cdq
test
aad
or
inc
loope
cmp
cwde
xchg
outs
cs
push
arpl
icebp
or
mov
mov
stc
mov
cmp
push
mov
adc
into
pop
pop
and
lea
xor
jbe
mov
pop
cmp
mov
jg
or
inc
int
iret
sahf
int
loop
pop
xchg
push
add
mov
jmp
mov
xor
scas
shl
aam
lahf
dec
push
fst
xlat
sbb
inc
fsubr
pusha
add
test
out
pop
dec
fwait
neg
sub
xchg
push
pop
in
jecxz
cli
mov
ret
sbb
push
test
lahf
jp
jp
leave
jne
mov
cmc
mov
xchg
and
xchg
ss
dec
mul
into
imul
shr
repnz
add
fadd
leave
pop
push
add
mov
push
outs
fbld
fwait
xor
cmp
and
aam
push
mov
or
dec
test
in
mov
jecxz
(bad)
jp
xor
fnstcw
push
inc
xchg
adc
pop
inc
inc
sbb
pushf
add
stos
lds
mov
(bad)
test
push
popa
sbb
jmp
daa
mov
in
repz
sub
(bad)
mov
neg
add
rcr
xchg
out
mov
cmp
or
pusha
adc
jae
jbe
adc
inc
fnstsw
mov
xchg
cdq
das
adc
and
imul
jb
(bad)
loop
movs
loopne
xor
adc
jmp
jmp
nop
mov
in
scas
sub
inc
(bad)
sbb
push
lahf
(bad)
rcl
jecxz
loope
fwait
mov
pop
mov
cmp
push
or
sbb
xor
loop
aam
inc
repz
in
repz
ja
inc
xor
xchg
dec
xor
bound
push
test
mov
sub
or
int3
stos
in
mov
outs
dec
imul
gs
push
inc
sub
inc
jle
data16
inc
ja
out
mov
out
or
pop
sbb
imul
dec
xchg
xor
loopne
dec
inc
dec
rol
iret
mov
ins
mov
cmp
cs
jp
xchg
mov
sbb
out
or
stc
xchg
push
and
fst
lea
clc
adc
add
das
adc
pop
(bad)
inc
mov
or
out
add
int3
sahf
sbb
sbb
inc
cmp
jno
inc
cmp
cmp
cmp
movs
std
call
pop
dec
xor
fs
mov
aas
pop
fcomp
arpl
hlt
into
sbb
ret
outs
cmp
jbe
sar
call
add
loopne
cmp
xor
xchg
push
(bad)
fnstcw
and
pop
pop
(bad)
lock
adc
(bad)
push
mov
mov
pop
ret
inc
push
adc
dec
push
je
lahf
jge
ins
test
dec
repz
mul
fidiv
dec
pop
pop
retf
call
jo
iret
jl
adc
ret
outs
bnd
cld
mov
test
jne
mov
sbb
push
pop
fcomp
std
jmp
sbb
cli
fbstp
leave
hlt
mov
fnstsw
push
fs
xchg
(bad)
push
in
aam
mov
into
daa
or
repnz
cli
pushf
shl
addr16
or
push
popf
push
les
sbb
in
and
push
imul
stos
lds
shr
dec
mov
rcl
out
lods
test
inc
lock
mov
repz
sub
inc
movs
movs
psubq
int3
jge
in
popf
aad
xchg
imul
pop
push
cli
imul
lods
test
mov
or
daa
loopne
loopne
dec
in
jecxz
mov
das
fst
xlat
inc
cs
pop
pop
dec
out
and
jb
cmp
xor
fs
jp
pop
sub
mov
inc
sar
and
popa
jecxz
pop
(bad)
pop
les
sti
pop
jns
push
cmp
or
add
daa
or
inc
aam
and
pop
stc
xchg
jns
leave
aam
aam
shl
or
or
xchg
int
hlt
das
mov
cmp
popa
nop
int
push
inc
ins
sti
(bad)
push
add
cmp
fwait
into
shr
push
retf
fdiv
je
xchg
jnp
out
out
aad
out
int3
nop
adc
fsubr
arpl
jne
les
dec
inc
in
push
mov
jnp
(bad)
fsub
movs
inc
push
jl
es
div
in
push
int
add
lock
lods
mov
and
(bad)
mov
mov
int3
movs
sti
lods
pop
and
fldl2e
push
ret
cmps
ja
push
jg
cmp
inc
ret
xor
adc
mov
fild
ror
or
stos
test
inc
adc
inc
fdiv
(bad)
les
retf
pop
repnz
add
lds
sub
xlat
adc
cmp
loope
enter
push
ror
jbe
or
out
xor
jmp
icebp
cmp
dec
(bad)
xchg
xor
mov
cmp
lods
add
push
xlat
jns
mov
pushf
outs
shl
xlat
cs
jmp
scas
out
dec
in
xchg
(bad)
not
call
and
mov
add
cmp
jne
jno
xor
pop
mov
push
dec
or
mov
jg
and
ss
clc
ds
test
add
or
(bad)
enter
enter
push
sbb
and
push
movs
pop
lds
cmp
push
or
and
mov
pusha
in
in
or
pop
inc
jg
pop
sub
inc
test
mov
adc
sbb
sbb
jmp
cdq
jo
loopne
dec
cmp
sub
jno
shr
push
push
cmc
mov
in
cmp
ins
jo
lods
shl
int3
call
retf
or
sbb
sti
sbb
mov
ret
fs
outs
in
sub
cwde
jge
push
xor
outs
hlt
mov
push
adc
div
jns
scas
fimul
cmps
pop
push
sti
outs
ja
adc
mov
adc
mov
cmc
out
shl
jge
push
push
mov
movs
push
adc
cdq
push
data16
pop
inc
jnp
leave
push
call
sbb
pop
or
adc
pushf
and
or
(bad)
mov
fldcw
mov
mov
sbb
retf
fwait
mov
aas
imul
push
jle
jo
xor
sub
mov
je
les
shl
cmp
pop
sbb
data16
or
push
add
mov
stos
call
call
push
imul
movs
inc
(bad)
adc
jge
iret
and
repz
scas
mov
or
sbb
add
in
repz
pop
or
cmp
dec
lea
cmp
out
adc
inc
cli
and
je
pop
inc
sbb
ins
nop
leave
icebp
add
ds
neg
ins
xchg
out
fdivr
call
inc
aas
jle
daa
bswap
cld
pop
out
xchg
inc
scas
jnp
cmps
inc
jno
xor
ror
iret
mov
push
shl
movs
dec
cwde
imul
ins
aas
jecxz
retf
sub
add
dec
sahf
repz
dec
sub
cmp
add
outs
adc
outs
or
mov
push
pusha
ja
outs
push
retf
mov
jmp
movs
sub
mov
in
sub
jnp
(bad)
mov
imul
xchg
and
mov
mov
pop
mov
lods
mov
jl
ss
mov
add
jg
das
sub
sub
int
fnstcw
xor
jno
jno
xchg
into
cs
or
mov
sti
shr
nop
aaa
(bad)
jnp
mov
cmc
xchg
not
sub
cs
int3
movs
les
js
fcmovnu
outs
sub
mov
adc
call
ret
dec
cmps
mov
in
fwait
gs
lds
sbb
iret
xor
push
xchg
or
lods
sbb
lahf
shr
(bad)
test
adc
popa
pop
mov
int
cmp
(bad)
jmp
aad
mov
mov
int3
or
push
mov
fwait
add
(bad)
imul
cmp
or
cwde
push
rcl
cs
in
xlat
inc
vcvtss2sd
cli
jo
pop
inc
js
cmp
je
movs
pop
push
push
or
sbb
call
repnz
stos
sub
xchg
mov
sbb
cmp
cmp
cld
call
and
push
inc
not
inc
jbe
inc
jecxz
push
bound
fild
(bad)
scas
movs
imul
fnsave
or
pop
(bad)
adc
xchg
jl
mov
xchg
mov
or
jmp
lea
adc
push
cmc
jmp
pop
arpl
je
inc
stos
int
jl
mov
xchg
shl
sbb
mov
into
scas
data16
xlat
adc
xchg
xor
ret
add
fs
jge
mov
and
(bad)
leave
in
ret
adc
adc
xchg
scas
mov
pushf
xchg
sbb
loop
fst
push
and
enter
clc
repz
mov
imul
lea
call
and
or
push
xchg
xchg
cmc
mov
jmp
sub
es
xor
jg
out
inc
and
xor
in
mov
jmp
jne
test
retf
jl
pop
out
popa
arpl
jmp
shl
fisubr
outs
out
std
cmp
xchg
add
data16
xchg
bound
les
xchg
retf
push
cli
call
rep
xor
ret
xor
xor
in
int3
mov
mov
jle
or
inc
enter
dec
ficom
push
push
mov
jl
sbb
and
or
inc
(bad)
(bad)
in
pop
in
fidivr
outs
div
aas
dec
mov
outs
das
and
outs
xchg
push
fld1
dec
xchg
(bad)
and
enter
cmp
leave
jnp
jge
fwait
cmp
loop
mov
(bad)
fild
fld
inc
add
cmp
in
lea
pop
adc
cmp
or
jb
bswap
enter
jbe
loop
sub
xchg
mov
ja
rcl
inc
push
(bad)
mov
dec
outs
push
and
and
add
movs
lahf
pop
outs
mov
aam
or
cs
or
or
in
sub
iret
pop
jnp
shl
lods
pop
clc
jmp
sub
dec
adc
mov
jge
xchg
std
enter
scas
mov
fsub
stc
pop
jbe
retf
mov
xchg
cmp
cmp
cdq
sbb
out
call
inc
aam
mov
adc
scas
mov
adc
mov
fmul
xor
add
or
push
outs
jmp
inc
mov
les
bnd
imul
and
in
jo
add
adc
dec
and
sbb
(bad)
xchg
sahf
xor
inc
fwait
sbb
add
fsubr
into
shl
add
outs
sbb
sar
dec
aaa
and
mov
cmp
cli
movs
stos
xlat
je
nop
mov
push
retf
mov
mov
xor
addr16
mov
movs
pusha
xchg
push
in
mov
inc
outs
shl
hlt
enter
jo
cli
sahf
and
xor
jne
lea
xchg
pusha
mov
xor
(bad)
jbe
mov
stos
mov
jg
movs
aas
mov
inc
pop
mov
(bad)
pop
dec
or
test
xor
inc
es
dec
pop
out
inc
xchg
mov
(bad)
jb
mov
test
and
(bad)
ficomp
cmp
inc
and
xor
inc
mov
pop
das
push
or
pop
in
adc
mov
imul
retf
cmp
int
jg
sbb
xor
mov
pusha
xor
add
mov
leave
jl
int
mul
inc
add
fwait
clc
stos
ret
outs
popf
adc
shl
in
daa
cli
into
ds
stc
mov
ja
out
js
push
pop
loop
cmc
pop
aam
jno
push
cld
ja
cmp
jo
xor
out
or
jnp
js
out
pop
sbb
inc
mov
cmp
and
inc
jnp
mov
mov
in
xchg
mov
nop
sbb
jmp
push
repz
fbstp
pop
or
shl
(bad)
xor
ror
mov
mov
sbb
sbb
mov
add
cs
sti
sbb
or
or
or
(bad)
xor
jae
pop
xchg
inc
jnp
pusha
dec
pop
pushf
in
out
sbb
popf
mov
out
mov
sbb
lds
sahf
sbb
pop
fwait
xor
adc
mov
sbb
mov
pop
mov
xlat
daa
cs
cdq
mov
popa
pop
inc
xor
ins
mov
loopne
retf
xchg
adc
aam
push
sbb
and
push
loopne
gs
shl
div
add
(bad)
xchg
rol
pop
ja
cli
dec
adc
inc
jns
inc
sbb
pop
add
inc
ja
ins
fsubr
std
inc
inc
adc
test
pop
js
ret
(bad)
xchg
lahf
pop
pushf
or
mov
aaa
pop
and
and
popa
dec
outs
xchg
xor
fdivr
cmp
std
mov
mov
dec
cmc
rcr
push
mov
inc
sub
mov
call
pop
icebp
call
dec
rol
sbb
pop
std
mov
push
sub
mov
push
in
lods
repnz
sub
in
push
push
inc
aaa
loope
mov
cmps
ins
js
popa
data16
sbb
and
mov
(bad)
and
aad
mov
jnp
dec
call
js
mov
mul
fld
aad
jnp
mov
jno
pop
add
lods
dec
pop
test
push
pop
jo
inc
cdq
sub
ror
add
(bad)
push
inc
cmc
push
lods
rol
(bad)
mov
lds
jecxz
ins
sub
cld
cmp
xchg
addr16
pop
and
test
sub
neg
xchg
cmp
aas
jmp
jg
jge
outs
ins
mov
and
dec
pop
pop
repnz
xchg
pop
movs
adc
sar
retf
pop
push
mov
push
mul
inc
in
inc
aam
stc
sti
imul
add
test
mov
push
ss
xlat
push
in
jo
ret
cmc
cmp
and
dec
ret
dec
imul
sub
daa
daa
(bad)
data16
out
outs
movs
or
jmp
pushf
jecxz
jo
push
jb
scas
sub
sub
mov
leave
pop
aad
pop
cmps
mov
lods
pop
xor
arpl
fwait
xor
push
mov
pop
imul
mov
pop
icebp
pop
push
cwde
xchg
mov
cmp
repnz
xor
repnz
pop
xchg
adc
push
jns
mov
repz
cdq
mov
loopne
pop
pop
mov
not
jecxz
mov
stc
into
(bad)
es
test
enter
pop
or
inc
aam
rcr
xchg
mov
push
jno
inc
jnp
and
adc
inc
leave
sbb
mov
pop
icebp
idiv
inc
int
inc
dec
adc
pushf
xchg
int
cs
and
leave
mov
pusha
push
inc
loope
in
mov
adc
pop
mov
cdq
retf
mov
push
data16
sub
imul
and
adc
jl
addr16
mov
rcl
cld
pop
ficomp
dec
mov
nop
sub
imul
movs
adc
push
lock
out
add
or
cmp
pop
cli
test
or
imul
xchg
dec
pusha
ret
in
and
inc
dec
sbb
add
es
iret
xchg
mov
dec
outs
pop
sub
das
cmp
cdq
cmp
outs
rcr
mov
jge
es
popf
mul
jmp
xchg
or
xor
(bad)
in
sub
mov
pop
push
in
dec
imul
fcomi
inc
mov
jmp
jo
(bad)
or
or
imul
push
pop
imul
addr16
in
and
lods
(bad)
mov
(bad)
mov
repnz
jb
lds
call
mov
and
fnstsw
lea
rcr
cmps
mov
fndisi(8087
hlt
test
lods
dec
test
icebp
fdivr
call
and
cmp
shl
pop
mov
js
call
add
mov
fstp
iret
popa
lock
test
xor
inc
or
mov
cwde
push
scas
fcomip
fimul
shl
imul
outs
xlat
mov
fisub
mov
sub
test
fstp
stos
dec
sbb
push
in
and
mov
lahf
inc
xchg
jb
rep
cmp
jnp
mov
cwde
pop
lds
movs
ret
sahf
cwde
pushf
push
dec
mov
push
test
jmp
push
xlat
adc
movs
mov
ja
and
jne
js
std
out
add
xchg
lea
mov
loopne
push
imul
pop
xchg
add
es
lea
jno
xchg
jae
out
pop
xor
stos
inc
shr
js
pop
bound
sub
sti
cmp
jmp
mov
sub
imul
dec
fsub
jl
jmp
imul
inc
jmp
icebp
jne
ret
je
imul
sub
add
mov
pop
pop
cwde
jle
mov
xchg
xchg
pop
fdiv
out
test
lock
lahf
mov
adc
or
jmp
add
push
lods
mov
and
popf
push
call
add
cmp
inc
popa
jl
pop
loopne
aas
sub
mov
ret
inc
add
in
pop
or
jo
imul
data16
push
(bad)
out
pop
cmp
shl
pop
(bad)
call
push
(bad)
adc
ret
aaa
push
fild
(bad)
ss
inc
dec
cs
push
aaa
push
repnz
mov
push
lods
mov
push
mov
hlt
mov
pop
and
ror
jle
mov
jge
inc
aas
fmul
outs
cmp
push
lahf
mov
jne
xor
stos
sbb
pop
rcr
(bad)
jb
je
or
jnp
and
xor
jg
xchg
jmp
cmp
pop
fiadd
js
sub
mov
inc
(bad)
xchg
push
cwde
add
sub
mov
sbb
cs
fistp
ror
mov
xchg
push
loop
dec
pop
in
scas
aas
lds
add
adc
gs
das
inc
push
clc
pop
adc
movs
ror
es
bound
stos
mov
adc
ficomp
mov
(bad)
dec
and
imul
rol
cwde
push
shr
or
sub
jbe
in
rol
je
icebp
fwait
cmp
jp
jns
jle
pop
scas
xchg
sub
pop
fs
jae
xchg
fstp
jo
jmp
in
in
imul
dec
adc
sub
mov
leave
out
and
aas
jnp
push
test
std
or
mov
bound
leave
sub
addr16
imul
jnp
call
test
mov
push
fs
repnz
jmp
pop
enter
rol
sar
cmp
ss
scas
loopne
(bad)
outs
cmp
sub
xchg
xchg
mov
aas
lea
pop
sub
xor
push
mov
xchg
xchg
cld
adc
sbb
xchg
and
pop
sbb
daa
cmc
mov
popa
jle
jmp
fstp
(bad)
jle
xor
arpl
call
jae
dec
adc
sub
mov
push
xor
xor
dec
push
popa
int
sar
movs
push
test
or
ss
retf
pop
cwde
pusha
stos
sbb
mov
rcr
add
cwde
aam
movs
in
leave
jecxz
mov
or
push
inc
cwde
sbb
add
push
clc
(bad)
push
ret
mov
aas
loopne
shl
dec
mov
sub
es
push
push
retf
fidivr
push
xchg
sbb
hlt
xrelease
(bad)
dec
sbb
mov
mov
popa
lods
sbb
cmps
or
std
or
mov
add
push
mov
jge
adc
hlt
pop
adc
mov
aad
push
add
sbb
and
pop
mov
cs
imul
dec
jmp
pop
out
leave
popa
xchg
es
loop
aam
inc
icebp
ja
xor
add
xchg
mov
mov
fisubr
jb
stos
cmps
loop
jno
mov
mov
pop
(bad)
cmp
cwde
xchg
pop
enter
cld
adc
jecxz
jmp
fs
and
jmp
frstor
adc
inc
ss
inc
pop
pop
btr
sbb
pop
cmps
arpl
aaa
test
int3
mov
cmps
aaa
jmp
rcl
xor
lods
jno
xchg
mov
xchg
push
call
and
add
out
sbb
call
(bad)
push
aaa
shl
adc
ss
mov
pop
push
mov
or
sti
mov
ret
and
jns
in
fisubr
adc
test
add
mov
jne
cmp
mov
add
push
retf
and
pop
add
jb
push
out
sbb
(bad)
(bad)
aam
inc
in
add
inc
div
add
fwait
push
xor
adc
pop
(bad)
test
stc
pop
push
ja
mov
popf
add
pop
mov
in
lock
pop
jle
fstp
pop
or
xchg
in
shr
cdq
xor
(bad)
push
into
dec
pop
dec
leave
les
cmp
das
pushf
out
cmc
sub
push
in
cli
jle
into
ret
pop
ss
sub
lods
popf
bound
cmp
aaa
pop
inc
sti
nop
mov
or
mov
add
pop
outs
dec
imul
sbb
adc
(bad)
call
fst
aas
fs
cwde
push
imul
jnp
mov
sbb
sub
out
addps
nop
test
push
js
cs
pop
es
leave
push
ret
test
jae
sbb
or
int3
dec
fist
jb
or
sub
sub
in
repnz
stos
add
cmps
mov
dec
aad
(bad)
cmp
int3
pop
pop
outs
dec
mov
sar
mov
shl
test
ror
repz
mov
call
xor
pop
mov
inc
cld
and
int3
int
stc
aad
adc
inc
out
mov
push
mov
jmp
rcl
cmp
pop
cmp
and
test
movs
int
addr16
or
test
cmps
int3
std
pop
loop
aad
mov
or
repz
sub
fst
cmp
sbb
mov
push
aam
dec
dec
stc
dec
cmps
cmps
xor
icebp
je
sub
icebp
add
push
xlat
pop
hlt
test
iret
jecxz
retf
sbb
dec
enter
jecxz
xor
cmp
mov
repnz
xchg
jb
dec
pop
push
sbb
mov
gs
sub
add
lock
mov
mov
outs
ins
loope
sub
ret
not
js
popf
dec
mov
mov
in
rcl
mov
add
cmp
xchg
mov
shr
cmp
movs
les
dec
push
int
(bad)
fld
and
lods
pop
repz
clc
les
mov
mov
mov
cmp
mov
inc
cmp
add
cmps
mov
xor
or
xor
outs
mov
push
mov
retf
shl
inc
stos
jmp
icebp
div
add
fs
rol
fst
sub
or
sub
popa
loopne
add
adc
pop
inc
dec
pop
scas
adc
push
jno
stos
cmp
test
inc
cdq
mov
rcr
aam
ss
in
popf
or
pop
cmp
dec
cs
sbb
pop
cmp
adc
jg
out
sbb
lea
cmc
dec
adc
daa
(bad)
stos
mov
ficomp
cmps
ja
inc
adc
ins
fidiv
sub
(bad)
adc
cmp
shr
pop
pop
inc
fs
dec
dec
mov
sub
xchg
stos
lds
data16
addr16
xchg
aaa
into
cs
dec
inc
mov
jp
add
mov
xor
mov
adc
xor
inc
dec
test
xor
adc
jmp
jp
shl
rcr
xor
fadd
cmp
dec
push
mov
loope
mov
cmp
xlat
sbb
leave
sbb
adc
push
rcr
out
iret
mov
les
out
or
in
pop
xchg
jmp
sahf
inc
mov
mov
aam
cwde
xchg
dec
mov
or
call
hlt
dec
inc
xchg
stos
jno
jno
(bad)
push
test
xchg
rol
fistp
mov
dec
nop
and
pop
ss
pusha
ss
mov
dec
ins
out
or
cmps
push
aad
js
out
dec
dec
xchg
inc
dec
cmc
pop
xor
scas
aas
sti
dec
cmc
and
and
stos
rol
sbb
fdivr
popa
neg
mov
pop
(bad)
aaa
pop
leave
sub
cs
cmps
idiv
cmc
sbb
inc
jle
imul
pushf
mov
in
loop
push
inc
fcom
(bad)
dec
out
jmp
mov
dec
div
cmp
fcomp
loopne
cmp
daa
js
ret
leave
inc
sub
push
mov
pop
mov
sbb
mov
not
scas
arpl
jbe
xchg
jl
scas
repz
adc
xchg
repnz
dec
adc
test
stc
clc
mov
lahf
adc
mov
adc
adc
mov
push
add
or
movs
popf
or
pop
pop
out
jp
bound
mov
je
btr
pop
sahf
daa
xchg
pop
gs
loop
inc
push
popf
out
test
dec
(bad)
sbb
pop
out
(bad)
ds
es
iret
inc
fsub
mov
retf
les
or
mov
sbb
stos
cmp
test
fwait
retf
test
xor
push
cs
mov
xor
lods
add
out
ret
xchg
cmp
pop
add
sbb
and
inc
mov
enter
fs
out
push
into
sub
pop
call
add
add
test
xlat
inc
inc
lods
or
pop
scas
mov
jp
dec
pop
leave
aad
mov
dec
dec
call
inc
in
jecxz
mov
add
adc
pop
cmp
mov
enter
dec
arpl
lea
inc
out
fdivr
je
adc
cmp
or
mov
add
sub
lea
mov
call
xchg
sbb
outs
adc
mov
and
mov
cs
dec
sahf
sti
xor
pop
pop
je
push
call
mov
sete
mov
mov
cs
out
dec
mov
ins
jl
test
xchg
add
push
jg
retf
fdiv
stos
pop
enter
cld
add
jp
pop
mov
add
std
imul
gs
sbb
add
sahf
sar
mov
cld
jle
imul
pop
repz
je
icebp
outs
mov
dec
inc
dec
xchg
sub
cdq
jl
cmps
movs
out
xor
rcr
pusha
out
in
mov
adc
xchg
jle
(bad)
lock
stos
jl
shl
push
or
and
mov
ins
jmp
ja
jae
xor
rcl
fwait
mov
mov
mov
pushf
movs
into
xor
xor
outs
or
rcl
daa
popa
(bad)
cmp
dec
aas
xor
js
inc
mov
adc
ins
mov
imul
pusha
push
imul
aas
stos
sub
test
jg
and
sub
pop
mov
ficomp
lea
out
mov
std
xor
not
and
stos
mov
or
into
ss
xchg
js
push
lahf
cmps
sbb
or
stc
jbe
inc
cmc
sbb
imul
jg
lods
mov
clc
mov
cmp
fistp
pop
in
leave
add
and
xchg
sahf
adc
sbb
and
pop
sbb
in
inc
popf
xor
(bad)
retf
xor
or
outs
mov
addr16
gs
cmp
adc
dec
out
add
pop
stc
mov
pop
dec
mov
or
push
jnp
cmp
pop
xchg
addr16
iret
push
mov
lds
in
lds
cmps
rol
loopne
adc
data16
sar
stos
or
mov
loope
adc
lock
inc
push
(bad)
(bad)
mov
shl
mov
mov
or
add
fbld
call
nop
add
mov
mov
and
aam
push
(bad)
cmps
sub
mov
mov
adc
or
mov
adc
dec
cmp
in
pop
or
mov
dec
inc
cwde
test
dec
adc
mov
sub
movs
(bad)
std
pop
pusha
mov
pop
mov
pop
scas
rcl
ret
enter
xlat
sbb
in
or
mov
popa
push
push
shl
(bad)
out
fsubr
inc
ja
sbb
xchg
sysenter
pop
jmp
fst
mov
xor
sbb
dec
imul
pop
cdq
xor
mov
jnp
mov
adc
adc
jns
inc
cli
or
es
shr
(bad)
rcl
adc
add
cmp
(bad)
aam
ds
inc
ficom
jno
push
repz
dec
out
mov
sub
jno
push
fs
repnz
dec
aas
jns
jo
add
adc
retf
jmp
xchg
xor
fst
clc
mov
adc
inc
iret
and
stos
jnp
js
jg
pop
pop
jg
js
test
scas
xchg
sub
lds
adc
push
or
jmp
(bad)
jae
stos
mov
mov
jae
out
std
and
push
inc
jp
popa
push
lahf
fstp
mov
movs
mov
loop
cmc
jnp
(bad)
rol
div
jg
pusha
int
dec
xor
loope
je
mov
xchg
pusha
xchg
retf
stc
pop
js
mov
sub
mov
sbb
movs
xchg
in
out
not
rcl
mov
adc
adc
vmaxss
aad
gs
ror
int
inc
push
and
call
(bad)
lds
sbb
jp
push
jecxz
shl
xchg
cwde
pusha
or
icebp
out
mov
xor
inc
lahf
push
pop
scas
inc
jg
xchg
or
dec
adc
js
(bad)
movs
pop
daa
fidivr
test
pop
jae
or
mov
call
pusha
sahf
stc
mov
cdq
cdq
push
sbb
inc
int
pop
adc
cmp
xchg
lods
ret
jmp
call
sub
test
ss
enter
add
out
mov
repnz
call
pusha
scas
les
and
mov
inc
and
xor
add
rol
mov
les
stos
js
(bad)
mov
js
pop
sbb
sub
movs
mov
push
jp
jb
mov
and
repnz
mov
adc
fldcw
fimul
neg
imul
adc
fsubr
sbb
pop
adc
push
xchg
push
mov
add
pusha
cmps
cld
clc
dec
jmp
dec
in
mov
mov
and
fcomp
dec
aad
mov
test
(bad)
lock
ret
cmp
ficom
stos
xor
in
mov
sub
int
aas
dec
xor
shl
cmp
enter
out
popa
xchg
int3
retf
fwait
cmp
sbb
in
or
shr
psadbw
int
cdq
xchg
jecxz
xchg
outs
mov
test
sbb
add
mov
(bad)
jo
inc
xchg
or
popa
push
ficomp
cmps
jno
jno
ffree
push
arpl
outs
add
push
mov
dec
add
fcmovbe
sbb
out
(bad)
shl
sub
xlat
test
xchg
push
ret
cld
aad
dec
test
lds
mov
sbb
add
mov
sub
shl
sbb
(bad)
jmp
aaa
icebp
jecxz
cwde
jmp
xor
inc
jge
retf
xor
sub
mov
push
out
pop
fsub
dec
inc
inc
mov
push
xor
xor
pushf
cmp
fimul
int
pop
test
mov
mov
fwait
shl
out
gs
push
and
or
(bad)
cwde
sahf
jo
fild
or
(bad)
sbb
lahf
inc
aas
sub
jmp
xor
std
and
inc
jge
ficom
ror
mov
jns
jmp
stos
arpl
out
imul
or
sti
test
mov
not
or
aaa
stos
fcmovne
fcomp
icebp
push
mov
push
lods
pop
push
movs
mov
and
nop
pop
mov
and
in
pop
sub
rcl
hlt
mov
shl
mov
inc
pop
lods
arpl
xchg
xor
std
dec
jge
lahf
cdq
mov
lahf
sbb
aaa
push
jbe
aas
push
cdq
dec
xchg
adc
and
fdiv
pop
not
retf
ret
or
shr
outs
inc
jno
dec
in
inc
xor
mov
retf
mov
sub
loope
test
nop
cmps
pop
ficomp
mov
shl
pop
sbb
xlat
cwde
shl
and
(bad)
and
mov
mov
adc
add
jl
xchg
fwait
push
push
rol
sbb
cmps
pop
add
mov
pop
pop
adc
cwde
iret
shr
int
mov
out
jmp
sbb
mov
cli
inc
sbb
xlat
mov
xchg
test
push
lods
sbb
pusha
mov
add
(bad)
out
mov
dec
xchg
arpl
xor
daa
push
pop
sub
lock
test
xchg
out
rcl
and
pop
loop
cmc
inc
xor
mov
mov
es
mov
retf
loope
jge
movs
daa
cmp
mov
jns
mov
push
icebp
repnz
stc
jbe
xor
shr
inc
rcl
scas
stos
dec
or
scas
xchg
cmc
jbe
pop
mov
xchg
sub
inc
sbb
or
sar
mov
and
outs
or
or
daa
mov
cmp
in
pusha
mov
dec
neg
inc
dec
sub
pop
arpl
xchg
retf
cmp
jecxz
xchg
shr
adc
out
xchg
fs
retf
mov
sets
mov
pop
popa
mov
out
repnz
aas
mov
xchg
div
out
ja
push
cmp
loopne
inc
dec
adc
inc
ds
adc
stos
stc
adc
xchg
fwait
imul
into
test
push
pop
mov
xor
xchg
je
jne
mov
pushf
out
jle
addr16
je
cmp
fidiv
xchg
aad
out
(bad)
xor
push
sub
mov
fwait
shl
push
mov
mov
pop
jmp
add
aad
neg
mov
ds
sbb
jmp
(bad)
and
les
and
pop
lods
cli
int3
push
ret
sub
lods
jmp
(bad)
hlt
cmp
clc
je
fmul
xor
sar
shl
js
clc
stos
cli
cmc
aam
cmp
(bad)
loope
xchg
cld
add
ins
xchg
int
fsubr
mov
adc
adc
push
xchg
lods
inc
mov
sbb
dec
test
popf
jl
addr16
outs
and
mov
js
retf
fs
inc
xlat
mov
sbb
xchg
dec
sbb
lds
jb
movs
push
jbe
cmps
dec
push
pop
adc
ror
push
daa
push
push
or
psrlw
popa
cdq
jae
adc
pop
leave
pop
mov
stos
sub
dec
mov
retf
out
(bad)
fdivr
or
xchg
shl
dec
shl
in
cmc
or
repnz
outs
cmp
sbb
ins
fisub
cld
fstp
sub
and
sbb
out
xor
sub
add
movs
fmul
call
xchg
out
mov
pushf
pushf
lds
shr
or
in
xor
xchg
cmp
sbb
and
cmp
out
mov
or
inc
(bad)
jecxz
and
rcl
xchg
cmps
out
inc
jmp
jb
cli
jnp
jo
and
neg
xchg
jnp
adc
ss
mov
jo
pop
loope
mov
test
sar
pop
xor
xchg
ror
shl
repz
(bad)
adc
ja
xor
and
or
push
or
or
ret
aaa
test
imul
adc
xchg
and
mov
test
ror
dec
lea
push
dec
adc
sub
mov
push
dec
xchg
push
stos
and
fmul
mov
int
sub
inc
xchg
push
pop
jg
push
mov
fs
aad
dec
fistp
(bad)
mov
clc
ja
lahf
retf
or
sbb
loope
retf
cli
push
push
and
mov
mov
test
mov
dec
xor
imul
jmp
push
int3
ins
call
movs
lock
adc
inc
pop
jb
sti
push
xchg
std
mov
pop
addr16
int
jbe
jmp
cmp
int
and
sbb
add
add
pop
test
mov
loop
push
mov
sub
adc
cmp
and
(bad)
imul
fcomp
pop
or
mov
mov
fld
ds
or
jo
fdiv
xchg
aam
push
push
scas
cmp
out
and
lods
xchg
fwait
mov
cdq
push
mov
test
fwait
inc
dec
push
ds
cwde
or
test
(bad)
daa
xor
mov
je
or
scas
outs
xchg
pushf
xchg
mov
and
xor
jmp
ja
pop
std
or
shr
fs
xor
mov
ror
dec
hlt
xchg
hlt
test
dec
add
(bad)
xlat
movs
and
xchg
jo
pop
and
dec
inc
clc
iret
in
or
sub
or
sbb
add
jmp
stos
shr
mul
or
inc
xchg
sub
addr16
jae
(bad)
mov
cli
js
sahf
jo
mov
push
sbb
xchg
repnz
das
sbb
cli
out
push
jae
cmps
add
mov
fst
inc
push
push
mov
add
mov
mov
mov
lea
inc
push
adc
mov
popa
jnp
or
cld
and
push
sbb
jmp
cmp
nop
cmp
mov
pusha
call
in
sub
inc
mov
cmp
loopne
pop
test
hlt
mov
jbe
xchg
xsavec
call
lods
int
lock
lds
dec
imul
add
mov
or
or
push
nop
enter
mov
ret
clc
sbb
pusha
jmp
enter
cdq
push
or
xchg
sbb
sbb
ret
and
pushf
mov
cmp
loop
and
pushf
stos
mov
push
sbb
xor
data16
or
inc
or
xor
xchg
jle
jo
jl
mov
xor
fmul
sbb
pop
shr
xchg
cdq
xor
pushf
ss
cmp
(bad)
xchg
iret
jmp
add
enter
ins
push
mov
sub
inc
lods
sbb
xchg
ja
xchg
mov
cmp
pusha
arpl
retf
ror
je
stos
out
mov
fisttp
cld
pop
rol
cmp
ret
outs
inc
jno
sbb
std
js
xchg
int
jae
pushf
(bad)
push
clc
addps
xchg
cs
fistp
xchg
sub
adc
and
xchg
add
call
ins
imul
mov
cmp
into
sti
in
test
pop
jb
aad
push
repz
jae
ficomp
cmp
into
adc
out
pop
js
std
dec
std
idiv
popf
dec
xchg
pop
push
jnp
push
sahf
cmps
loopne
jno
add
shr
pop
push
adc
or
push
mov
xor
inc
jp
sahf
fild
cmp
retf
lea
jmp
je
sub
mov
int
inc
into
add
(bad)
and
in
add
sbb
sub
jnp
cmp
inc
imul
dec
add
daa
jno
lods
mov
nop
(bad)
test
test
movs
dec
int3
sbb
push
sub
push
retf
jecxz
stos
mov
jmp
scas
int3
popa
xchg
adc
xchg
inc
adc
lds
inc
jmp
pop
mov
test
and
mov
jnp
jmp
imul
sub
hlt
test
mov
dec
and
pop
push
inc
mov
gs
jge
dec
loopne
outs
jns
fdivr
test
lock
into
adc
rol
iret
shl
(bad)
xchg
loope
push
mov
fdivr
movs
mov
xor
scas
dec
in
xlat
leave
xchg
xor
mov
jns
retf
add
setae
ds
sub
lea
cli
in
push
ds
xor
mov
dec
fbstp
pusha
ret
xor
ins
add
stos
pop
imul
jl
shl
jbe
mov
and
(bad)
mov
jno
in
sahf
gs
or
out
sub
push
jb
push
pop
dec
cmp
add
xor
adc
cmp
lea
gs
cdq
nop
adc
sbb
out
rol
cmps
jne
shl
push
push
jge
pop
imul
shl
ror
jge
sbb
push
ret
out
push
or
stc
test
pop
mov
(bad)
sub
xchg
popa
sbb
fstp
scas
outs
xor
mov
std
jno
push
mov
popf
push
dec
inc
cmp
push
js
xchg
pop
mov
xchg
xchg
jmp
loopne
pop
or
pop
frstor
jp
lds
cmp
popf
pop
push
cmp
adc
jg
xor
cwde
sbb
adc
mov
xor
rol
test
aad
push
pop
mov
jge
dec
into
scas
sub
aas
retf
lods
shl
iret
aaa
push
dec
fcomp
xchg
push
pop
fsubr
lods
xchg
int3
fsub
test
fdivp
xor
inc
in
aam
adc
sti
loope
push
xor
mov
mov
mov
test
cs
shr
rcl
mov
movs
int3
jp
mov
arpl
dec
jle
enter
xchg
std
sub
jmp
jmp
add
imul
mov
aas
out
xor
popa
jne
div
xlat
push
test
and
movs
ins
stos
mov
jle
fnsave
dec
dec
sbb
inc
fistp
push
fstp
and
test
in
fwait
pushf
or
jecxz
test
jecxz
lds
shl
mov
js
xor
movs
xor
jne
das
sub
std
dec
mov
xchg
cmp
push
fcomp
inc
cld
jmp
je
loopne
je
mov
out
lock
pop
scas
adc
xlat
clc
gs
xor
mov
push
repz
add
stc
popf
repnz
stos
fmul
adc
mov
pop
pushf
jl
lods
xchg
lods
mov
xor
nop
jp
sbb
stos
push
jns
xor
lock
mov
sub
xchg
mov
push
mov
dec
cmp
push
xor
push
mov
xchg
xchg
cmp
pop
inc
jmp
iret
and
nop
test
jmp
inc
or
pusha
add
arpl
test
and
inc
lahf
push
nop
push
popa
mov
sub
xor
pop
and
xchg
xchg
fisttp
ja
sbb
int3
cmp
adc
cmp
mov
aas
fidivr
jns
stos
xor
mov
inc
addr16
sbb
add
inc
nop
call
mov
fimul
(bad)
call
mov
lods
xchg
sbb
pop
xor
push
fmul
add
add
jno
shl
clc
push
sbb
jae
imul
js
mov
cli
or
movs
mov
pop
fxch
pop
mov
xchg
mov
xchg
rcl
and
mov
shr
pop
(bad)
cmp
jle
cmps
push
retf
mov
inc
inc
adc
dec
test
mov
ds
or
xor
xor
jae
xchg
xchg
mov
rcr
fistp
sbb
out
inc
or
js
cmps
movs
inc
out
cmp
jmp
add
arpl
aam
cmc
icebp
cdq
mov
or
and
mov
and
sub
mov
ja
push
add
cmp
dec
clc
mov
or
es
inc
dec
loop
xor
push
jno
inc
add
movs
mov
add
adc
imul
movs
pop
movs
loopne
xchg
es
mov
hlt
in
xor
jg
mov
fwait
mov
in
sbb
jg
inc
lock
sub
jecxz
mov
fs
test
std
xor
adc
and
call
pop
adc
(bad)
(bad)
call
test
jp
loop
in
xor
adc
cld
xor
ins
rcr
cdq
xor
xor
pavgw
mov
loope
dec
mov
mov
or
stc
add
ins
call
lea
loop
imul
aas
mov
cwde
xor
call
inc
sub
add
and
adc
mov
xlat
adc
ret
lahf
push
dec
stos
scas
clc
mov
pop
bound
pop
push
aas
or
jecxz
daa
add
pop
fwait
loop
xor
inc
inc
xor
pushf
mov
or
inc
or
sbb
adc
dec
inc
jnp
mov
push
add
mov
mov
aas
jl
js
dec
jmp
push
push
jne
sbb
popf
call
mov
dec
adc
push
inc
and
jl
stos
dec
cmc
xchg
and
add
push
adc
nop
fcom
or
mov
leave
jge
repz
sbb
aad
sbb
mov
add
(bad)
and
sub
aaa
pop
xor
pop
fwait
and
cld
in
sbb
es
jbe
aaa
icebp
rcl
or
sbb
rcr
inc
dec
pop
out
imul
push
xlat
push
imul
add
adc
stos
cmp
ror
pop
ret
mov
enter
enter
jns
shr
ret
out
imul
add
iret
arpl
mov
repz
fcomp
and
mov
mov
fcom
push
ret
stc
fist
int
mov
lock
leave
push
cs
outs
or
rol
mov
ss
xlat
push
mov
aas
jnp
pop
push
xchg
mov
cmp
pop
mov
cmc
fdiv
inc
mov
jb
loope
mov
sbb
add
mov
ror
cmp
pop
enter
and
add
call
sub
sbb
sbb
mov
mov
cmp
(bad)
xchg
int
test
push
push
mov
jae
push
or
clc
dec
xor
shl
fwait
push
pop
arpl
js
sub
mov
pusha
add
rol
jno
cdq
or
mov
out
lds
aas
xchg
ror
dec
ss
into
lock
jle
jbe
or
push
pop
inc
sbb
shl
or
pop
gs
fadd
into
pop
pop
xchg
and
inc
je
fwait
lock
into
cwde
sbb
daa
arpl
ret
xor
cmp
ss
jmp
mov
pushf
fs
jb
(bad)
int
in
xor
outs
mov
fadd
pop
addr16
ins
sbb
mov
add
iret
xchg
lods
(bad)
cld
stos
stos
rcr
je
retf
push
cmp
mov
and
and
movs
aad
outs
mov
stos
addr16
movs
(bad)
sub
jmp
cmp
or
jne
push
pop
pop
sbb
fwait
je
call
xchg
and
movs
add
retf
and
inc
mov
mov
push
add
repz
std
mov
aam
test
out
add
mov
mov
mul
add
inc
sbb
fst
jecxz
repz
adc
inc
fnstsw
xor
out
shr
inc
pop
scas
ret
daa
ss
cmc
shl
and
jbe
sar
ds
inc
ins
ins
xor
rcl
inc
add
push
cmps
ins
jg
mov
lea
dec
(bad)
retf
(bad)
push
jle
mov
or
and
mov
fucomi
repz
sbb
and
dec
pop
cmps
(bad)
cmp
mov
in
mov
pop
push
and
in
sub
sub
cmps
mov
mov
in
mov
loop
enter
xor
std
fimul
pop
dec
ja
and
jle
loope
dec
pop
cmp
fild
(bad)
or
popf
jecxz
push
movs
sbb
xchg
nop
dec
mov
ret
loop
mov
inc
or
stos
movs
mov
push
adc
fnstenv
(bad)
push
sbb
loop
xchg
addr16
adc
dec
add
test
cli
test
xor
(bad)
sub
jmp
test
pop
cmps
add
icebp
mov
adc
gs
jg
stos
ja
pop
js
pop
cmp
test
cdq
adc
push
jmp
jnp
lods
clc
scas
cmp
fs
dec
fwait
dec
mov
cmp
mov
xchg
retf
sub
daa
imul
call
out
jecxz
int3
dec
sbb
add
test
js
js
push
(bad)
movs
repz
mov
pop
pop
and
add
or
inc
or
das
mov
xchg
push
inc
sbb
sbb
nop
les
xor
cmp
fsubr
scas
sbb
call
int
mov
push
outs
and
pop
push
or
popf
jae
jg
arpl
mov
adc
imul
xchg
mov
out
fcomp
push
sbb
(bad)
adc
jb
outs
sti
mov
push
fsub
push
and
sbb
pop
push
xchg
xor
ins
sbb
cmp
add
sub
jne
imul
outs
and
jmp
aam
mov
loope
or
mov
cmp
cwde
push
or
sar
jecxz
outs
into
icebp
lds
loopne
pop
mov
mov
xchg
aad
adc
ficom
jecxz
pop
jge
push
pop
rsqrtps
pusha
sub
sbb
push
aaa
xor
ja
inc
mov
xor
nop
push
mov
xchg
mov
jecxz
test
fwait
sbb
stos
jmp
pop
(bad)
outs
pop
push
sub
lds
mov
fsubr
jp
jmp
or
xor
repz
push
push
mov
loop
enter
pusha
loope
push
lahf
push
test
xchg
pop
rcl
fist
icebp
mov
in
bound
push
add
loope
xchg
push
and
idiv
je
adc
mov
jns
ins
rol
add
and
pop
jp
arpl
gs
mov
sbb
ins
sahf
xchg
push
inc
pop
pop
mov
rol
xchg
bound
sbb
mov
xchg
dec
int
in
adc
mov
repnz
xchg
nop
(bad)
js
cmp
ss
or
lock
jmp
scas
cld
mov
pop
fst
push
pop
jle
jge
xor
icebp
mov
mov
sbb
sub
push
cmp
test
stos
inc
xor
mov
adc
mov
test
rcl
mov
shl
fsub
dec
mov
imul
pop
cmp
adc
out
retf
aaa
jb
xor
ror
adc
stc
cwde
or
sahf
in
cmps
dec
test
imul
pop
jmp
dec
mov
lahf
and
xchg
lods
sti
lahf
ds
inc
mov
shr
or
fadd
dec
xor
outs
shl
stos
pop
add
call
or
fstp
mov
xchg
sbb
mov
mov
bound
fadd
cmps
(bad)
push
lahf
dec
pop
mov
mov
add
push
setne
xchg
fwait
mov
dec
adc
loop
push
call
scas
xchg
mov
jno
das
push
xor
xchg
aam
jg
leave
xor
cmp
xchg
mov
dec
push
loope
stos
sbb
jb
mov
in
fdiv
int
mov
sub
stos
and
and
out
in
sub
xchg
pop
jmp
sar
mov
cld
sub
sbb
lods
or
sahf
int3
adc
adc
jnp
mov
push
sub
push
adc
ficomp
pusha
sub
pop
(bad)
mov
shr
push
fild
(bad)
dec
cmp
arpl
xor
out
or
or
inc
push
test
or
jno
cmp
call
pop
shr
pop
jno
dec
fnstcw
jnp
mov
and
hlt
js
dec
ror
or
sti
and
and
jmp
cmp
ds
push
cmps
out
push
xor
xor
retf
sbb
scas
pop
sub
jl
fmul
int
jmp
push
xchg
not
jo
into
icebp
mov
jp
push
mov
rcr
pop
mov
(bad)
shr
sub
adc
xchg
jge
add
(bad)
out
dec
dec
lods
adc
mov
inc
cmp
mov
pusha
jl
rol
fs
shr
iret
enter
push
cmp
adc
or
and
or
push
push
sar
add
stc
cmp
xor
mov
push
jmp
and
pop
mov
lahf
xor
imul
xor
ret
add
jmp
imul
div
adc
mov
ret
push
add
pop
push
sbb
inc
pop
fwait
dec
push
sbb
loope
iret
cmp
loop
fcomp
mov
retf
or
popa
jns
daa
gs
pop
hlt
ror
iret
ror
inc
les
dec
cmp
or
jmp
es
(bad)
cli
lods
fisttp
rcr
sub
push
push
mov
bound
sub
push
mov
cmp
ror
stos
sub
and
jae
add
push
cmps
pop
sub
pop
cmp
int
mov
popf
pop
leave
sbb
jns
cmp
popa
push
xlat
jecxz
(bad)
neg
lahf
jecxz
into
das
jmp
xchg
test
dec
mov
inc
ret
sbb
mov
or
lock
dec
sub
jle
jmp
mov
adc
jno
dec
jb
cmp
sbb
cmp
cmp
sub
fdivr
sub
mov
push
sub
add
out
push
stos
test
loopne
ins
popf
imul
sahf
add
outs
mov
(bad)
rol
mov
xor
inc
add
xchg
loop
and
xlat
pushf
mov
imul
aam
lock
push
sahf
out
ins
ins
dec
ror
inc
or
or
jge
lds
imul
and
cdq
add
jnp
lods
add
pusha
sbb
fucomi
test
xchg
aas
sbb
jns
cmp
dec
repz
xor
in
fwait
xchg
push
int
jnp
or
fistp
out
loope
retf
outs
icebp
mov
jnp
retf
aaa
and
aaa
(bad)
inc
xchg
push
xor
add
xchg
and
stos
das
shl
and
push
cs
sbb
sti
clc
cmp
nop
sbb
jno
push
pop
stc
push
les
loop
outs
xchg
or
mov
adc
sub
movs
adc
pushf
fild
jo
push
out
into
(bad)
lods
addr16
frndint
and
add
aaa
mov
push
neg
les
jb
aam
cmps
jb
jbe
ret
cmc
pop
arpl
mov
retf
ss
push
aad
mov
ud0
lock
enter
mov
test
fild
sbb
loopne
data16
sub
ror
sub
inc
nop
sub
or
scas
stos
int3
dec
mov
dec
rcr
ja
loope
sti
(bad)
cdq
adc
add
inc
add
mov
xchg
or
fwait
mov
dec
(bad)
shl
pusha
out
mov
(bad)
js
je
(bad)
pop
and
rol
xor
(bad)
or
gs
mov
rcr
in
lods
sar
scas
sub
(bad)
cmp
mov
(bad)
or
pop
jmp
push
inc
clc
dec
aaa
cdq
pop
add
dec
loope
pop
mov
push
sbb
mov
shl
push
out
push
cmp
leave
mov
inc
or
add
sub
mov
into
xchg
out
pop
pop
nop
je
test
fwait
dec
adc
xor
xchg
pushf
add
(bad)
sub
and
push
push
pop
and
dec
add
lock
cmp
pop
das
lods
adc
xor
pusha
pop
mov
mov
std
call
ins
and
sahf
dec
push
(bad)
pop
or
js
dec
(bad)
cmp
sub
jo
cs
cmp
addr16
das
or
jae
sbb
cdq
mov
hlt
les
hlt
mov
xor
in
mov
add
sti
pop
mov
retf
xchg
sbb
das
xor
cdq
push
ror
xor
not
or
pop
shl
retf
add
and
sub
lahf
ror
mov
iret
nop
mov
scas
aad
mov
cld
pop
add
xchg
fst
out
mov
xchg
scas
sbb
push
xchg
xchg
scas
scas
in
out
sbb
loope
enter
(bad)
ficom
pop
dec
mov
and
imul
sar
int3
push
test
clc
mov
fld
xchg
cmp
adc
adc
and
mov
sbb
dec
cld
shl
mov
rcr
les
cmc
fsub
push
jge
or
mov
js
shr
ss
stos
jge
mov
ds
repnz
test
mov
or
xor
mov
add
into
cs
jmp
cmp
bound
mov
test
pop
mov
aas
or
pop
push
jo
lods
jne
lds
sub
stos
dec
imul
out
xchg
pop
sub
(bad)
jmp
pop
mov
aas
(bad)
sbb
shr
push
and
adc
cmp
jnp
sahf
inc
cmp
aas
cmp
lds
je
dec
out
scas
pop
cmps
cld
and
jno
xlat
test
aam
(bad)
sub
pop
sbb
aad
jno
mov
shl
int
scas
dec
neg
fs
jle
xchg
aam
loopne
out
aaa
cmc
(bad)
outs
inc
sub
adc
cwde
adc
sar
fdiv
fild
add
fwait
imul
sub
sub
mov
add
mov
cs
into
fisttp
jmp
out
lock
aam
leave
(bad)
(bad)
movs
inc
jp
xor
(bad)
mov
stos
mov
jle
xchg
daa
rol
pop
ja
xor
ja
jmp
movs
xor
enter
ffreep
sub
adc
ja
mul
lock
mov
ret
scas
jnp
jge
jno
mov
xor
dec
ins
add
movs
js
loope
push
mov
bound
loop
cli
outs
mul
mov
cli
xchg
inc
outs
js
jns
enter
push
sbb
cmp
bound
lods
jle
dec
ret
cmp
scas
cld
test
das
add
dec
add
dec
stc
cmp
adc
xchg
xchg
ds
or
sbb
jl
and
pop
and
add
cwde
inc
mov
rcr
mov
push
ret
xchg
rcl
and
cpuid
rcl
mov
mov
sbb
and
jmp
pop
iret
fstp
stos
sub
mov
outs
popa
cli
inc
pop
sub
add
ins
repnz
or
rcr
xchg
leave
jno
jbe
out
push
sbb
sub
add
movs
jge
and
dec
adc
xor
jnp
std
data16
push
and
cmp
fwait
cmp
jg
push
pop
add
gs
rcr
or
retf
xor
scas
(bad)
jnp
and
sub
aam
xor
gs
cmp
cmps
mov
int
lock
xchg
ins
pop
loop
xor
cmp
and
add
cmps
add
mov
xor
das
xchg
and
sbb
cmp
mov
dec
xor
aaa
dec
xor
and
retf
pop
scas
xor
push
cmps
ins
xor
mov
mov
inc
and
fisubr
cmps
mov
test
pop
jns
adc
ins
cmc
out
adc
jae
aad
sbb
test
sub
xor
add
cdq
jne
cmp
push
mov
jecxz
push
and
sahf
pop
aad
sub
movs
sub
cmp
xchg
(bad)
fcomp
pop
and
cmp
push
pop
inc
(bad)
jbe
and
mov
inc
inc
fucom
jecxz
mov
les
daa
mov
das
sub
test
retf
push
fcomp
pop
sbb
cld
mov
xor
or
lahf
and
mov
retf
jp
mov
jecxz
(bad)
cmp
dec
lods
shl
loop
adc
dec
mov
xor
xchg
mov
out
cmp
cmps
ins
jmp
(bad)
jp
ret
jnp
hlt
scas
das
sbb
add
push
pop
les
clc
or
pop
daa
mov
push
sbb
mov
xchg
mov
push
sar
jbe
xor
push
mov
mov
mov
mov
aad
iret
mov
test
inc
jmp
repnz
jmp
sub
xor
fidivr
pop
sar
int
bound
mov
cmp
pop
std
jp
in
mov
pop
aam
in
add
jge
rol
dec
ss
movs
sbb
mov
test
or
push
rcl
out
mov
iret
xlat
push
inc
call
mov
inc
dec
out
ret
das
mov
xor
ins
mov
bound
jbe
cli
mov
jb
mov
add
mov
repz
cmps
nop
dec
ret
dec
gs
cmp
push
stos
fiadd
add
cmp
adc
cli
ins
dec
fdivrp
push
sar
jnp
add
(bad)
jmp
mov
ins
pop
sbb
pop
dec
jae
iret
pop
add
std
test
and
stc
ja
shl
adc
mov
mov
cmp
fcomp
icebp
jnp
pusha
(bad)
mov
cld
and
jmp
test
test
push
sbb
xchg
push
out
scas
mov
dec
cmp
lea
pop
ss
push
sbb
jecxz
pop
cmp
sub
test
sbb
inc
repz
xor
loopne
sahf
mov
stos
push
scas
pop
jge
mov
mov
jns
loop
xchg
cwde
sbb
dec
mov
mov
test
sbb
out
cmp
fdiv
dec
sbb
xchg
ds
jg
add
lock
cvtps2pd
xchg
data16
and
aas
xor
jmp
outs
inc
scas
retf
push
pop
dec
inc
push
xor
iret
pushf
loope
ins
sti
and
jo
sub
pop
stc
push
ja
jbe
mov
push
or
xor
xchg
pushf
call
pop
and
inc
outs
out
(bad)
enter
call
push
mov
dec
sub
push
enter
jle
mov
xlat
inc
movs
ss
arpl
sbb
and
mov
mov
inc
and
fsubrp
jae
in
sub
pop
inc
jbe
aad
sbb
test
lds
lea
call
mov
(bad)
call
repz
dec
ret
sub
std
sbb
mov
pop
retf
xchg
mov
inc
pushf
popa
inc
fsubrp
(bad)
jmp
sub
mov
js
push
jecxz
dec
sub
and
out
xor
push
cld
pusha
cli
call
lods
ucomiss
cwde
pop
add
xchg
fwait
dec
mov
cmps
jl
mov
inc
outs
pop
in
adc
shl
addr16
ret
cmp
inc
inc
mul
mov
add
repnz
mov
into
aad
dec
dec
test
or
adc
add
cmc
mov
push
ficomp
daa
or
(bad)
sub
lea
shr
dec
mov
test
fsincos
push
or
push
scas
jne
mov
and
mov
retf
ds
sahf
sbb
pop
stc
idiv
aas
dec
cli
add
or
add
dec
push
dec
jne
dec
js
sahf
sub
and
fdiv
mov
jno
inc
lods
and
pop
xlat
pop
rcl
mov
mov
loop
xor
pop
(bad)
(bad)
mov
cld
dec
xor
fcomp
(bad)
sub
pop
push
in
(bad)
mov
sub
popf
scas
(bad)
mov
inc
sbb
ret
jp
in
add
jb
movs
mov
inc
fwait
test
mov
fst
dec
cmp
sar
or
fadd
addr16
ja
(bad)
sub
dec
(bad)
leave
clc
pop
xor
sbb
and
cmp
leave
and
mov
mov
mov
daa
es
enter
jg
adc
pop
push
neg
mov
dec
jo
cs
dec
mov
mov
out
int3
pop
shl
scas
inc
mov
pop
cmp
jne
neg
loope
ds
jmp
mov
daa
pop
cmps
xor
push
js
pop
test
add
loopne
adc
or
in
mov
jae
jb
pavgb
stos
enter
retf
rol
xchg
(bad)
mov
fild
xor
mov
cmps
pop
test
js
sbb
mov
das
and
cmp
in
mov
clc
push
mov
mov
nop
mov
jecxz
adc
repz
pop
mov
xor
dec
fmul
aam
sar
lock
dec
inc
cli
outs
fnstenv
sbb
xor
sub
out
mov
inc
inc
jo
dec
cmc
in
push
push
or
dec
pop
push
out
xor
jae
push
jmp
and
int3
or
leave
pop
ins
pop
xor
imul
js
xor
jle
stos
jo
lods
dec
jno
daa
js
push
mov
fisttp
mov
xor
shl
into
imul
add
fnstsw
std
add
push
retf
mov
movs
cmp
lea
cmps
loopne
test
jge
jb
mov
jl
sub
popa
dec
mov
pop
sub
jnp
jmp
xchg
test
xor
or
je
cmps
sub
mov
or
out
jmp
push
sub
fld
cmc
sahf
mov
fsub
push
sbb
mov
sub
adc
into
or
cmp
push
mov
dec
xchg
lock
test
call
loopne
mov
push
jle
movs
push
out
ret
fdivr
jmp
adc
inc
xor
inc
cmps
aad
inc
scas
je
mov
sbb
sub
jg
jbe
xchg
cdq
sub
mov
int3
je
sub
adc
mov
jecxz
jno
mov
(bad)
push
(bad)
iret
mov
or
xor
dec
sbb
add
push
mov
mov
xor
inc
mov
jnp
or
xor
(bad)
mov
test
clc
jp
sub
cmp
pop
ins
shl
jae
cmp
inc
pop
push
repz
bound
scas
and
in
cmps
lea
xchg
rol
sub
ins
jl
aas
mov
inc
inc
dec
ins
inc
inc
pop
lods
cmps
add
imul
mov
jae
rcr
xor
sbb
out
jbe
enter
js
push
repz
jno
xor
mov
sbb
js
adc
div
lods
(bad)
loope
das
(bad)
int3
mov
std
mov
addr16
push
mov
lods
fnsave
data16
or
sahf
xchg
shl
stc
fbstp
dec
push
ficom
pop
pop
popa
dec
aaa
sub
and
sub
nop
push
jle
dec
xchg
gs
inc
hlt
outs
lods
sahf
ret
mov
jbe
jne
sub
mov
test
cli
stos
push
mov
inc
fcmovb
out
lahf
loope
jae
adc
push
out
push
sub
push
imul
add
in
sti
stc
scas
ror
js
pusha
(bad)
xlat
rol
cs
mov
pop
xlat
add
cli
jle
outs
mov
or
sub
and
test
xor
and
jns
jmp
fcompp
pop
xlat
sbb
push
int
push
xchg
jae
dec
mov
add
daa
mov
repnz
movs
dec
sbb
jmp
ret
sbb
cmps
lea
pop
les
pop
xchg
push
ja
push
pop
shl
mov
push
gs
ret
jle
cmps
push
(bad)
pop
retf
or
inc
rol
mov
pop
sahf
or
sub
lods
stos
and
sbb
inc
jge
enter
mov
outs
xor
in
out
gs
inc
pop
movs
dec
stos
mov
sub
push
cmp
sub
jbe
add
sahf
push
mov
stos
ret
dec
and
adc
popf
inc
(bad)
fwait
jo
or
dec
(bad)
mov
sbb
mov
repnz
(bad)
inc
push
and
movs
mov
nop
add
xor
je
(bad)
ror
mov
sbb
(bad)
mov
cdq
inc
sub
jmp
in
fstp
not
jle
shl
out
sbb
out
sbb
dec
nop
arpl
std
ja
add
cwde
enter
aaa
inc
test
and
sbb
dec
ins
inc
(bad)
dec
lahf
jno
push
ror
daa
adc
out
jnp
dec
pushf
add
mov
mov
les
jmp
xchg
mov
add
pop
adc
mov
sbb
or
ret
movs
scas
in
ror
inc
adc
sti
jns
movs
jmp
and
pop
mov
dec
jl
push
out
call
pop
adc
call
leave
and
cmps
inc
into
xor
out
jbe
fs
jmp
ret
test
loop
xlat
mov
mov
leave
fwait
xchg
(bad)
xor
cmc
cmp
pop
xchg
nop
hlt
inc
dec
push
in
inc
or
(bad)
add
dec
ja
xor
jnp
lds
fdiv
fucomp
aas
rcr
jmp
and
push
push
fmul
xor
ret
fmul
and
jne
(bad)
icebp
(bad)
push
push
psraw
je
mov
xor
fucomi
mov
push
mov
addr16
or
or
pop
xor
pusha
lock
xchg
jecxz
test
std
lahf
and
xchg
imul
fbld
fild
rcl
popf
and
nop
std
cdq
cli
cmp
pop
cmp
lock
repnz
mov
rcr
push
test
pop
inc
jne
push
fisubr
cwde
gs
fdiv
jg
in
out
cs
jmp
add
xor
cmp
lods
mov
mov
cli
and
pushf
fabs
mov
and
loopne
push
mov
inc
popa
jge
les
lods
xchg
sub
test
jl
lods
inc
adc
mov
ret
sti
js
std
ror
ja
cmp
jb
xchg
xchg
ins
xor
or
call
jmp
pop
bnd
arpl
cs
icebp
mov
push
cmp
data16
jnp
mov
pop
out
mov
sub
push
pop
cmc
in
fidivr
xor
sub
adc
aad
shl
cmps
in
pop
xor
push
aam
(bad)
push
mov
pop
es
adc
jnp
aam
fild
xor
pusha
aam
adc
sub
ds
mov
inc
outs
cli
js
jg
retf
inc
in
pushf
pop
fucomip
cmp
fld
pop
dec
jle
mov
clc
sub
cli
retf
sub
push
cmp
arpl
push
mov
fsubr
mov
or
jb
mov
mov
mov
lahf
and
sbb
and
xchg
pop
push
jp
inc
dec
stos
and
cli
shr
ins
cmp
or
cs
ret
rol
lea
mov
push
loopne
and
icebp
add
and
pop
dec
aad
nop
push
lods
pop
test
sbb
retf
icebp
lds
xor
jae
adc
mov
sub
sbb
(bad)
paddusw
ficom
fwait
pop
std
daa
add
daa
scas
rol
outs
and
jbe
push
outs
cmp
push
cmp
adc
push
sbb
jnp
mov
ja
rol
cmp
inc
int
dec
stos
ins
cmps
sti
xor
and
aad
xchg
repz
addr16
and
fnsave
scas
cmp
sahf
sub
icebp
sahf
iret
jmp
xor
sub
and
jl
mov
in
jp
or
jae
stos
push
dec
inc
test
stos
push
data16
mov
sbb
sub
loop
sbb
dec
sbb
pop
loope
call
(bad)
repnz
nop
mov
jecxz
mov
test
(bad)
gs
xchg
imul
bnd
mov
mov
and
adc
out
in
movs
push
pop
sar
leave
clc
and
ror
outs
jl
push
(bad)
pop
pop
mov
pop
pop
call
or
push
pop
mov
inc
imul
std
mov
call
stos
sub
xor
cmp
clc
cmp
dec
adc
(bad)
xchg
or
jne
sbb
pop
ss
hlt
test
push
push
cmp
into
data16
pop
pop
(bad)
retf
and
test
std
int3
outs
cs
sbb
sub
xor
cmp
fmulp
push
in
xchg
mov
cmps
xchg
and
or
popf
xor
cmp
xchg
sbb
jne
pop
les
rcl
pop
inc
imul
cdq
int
xchg
in
ja
lock
push
fsubrp
cmp
movs
pop
scas
gs
jmp
mov
sub
fisub
arpl
mov
cdq
mov
adc
adc
xlat
xchg
bound
xchg
shl
test
les
out
push
mov
dec
(bad)
in
pop
frstor
cwde
icebp
or
mov
inc
push
mov
bound
rcl
fild
int3
movs
jnp
ror
ja
and
pop
movs
stos
jno
pop
mov
pop
inc
rcr
push
rol
pop
push
push
push
dec
mov
mov
cmps
adc
scas
outs
imul
ds
shr
push
push
jl
pushf
or
out
sbb
mov
xchg
mov
dec
sub
mov
adc
push
mov
jl
add
aad
pop
test
and
cmps
mov
mov
imul
push
jmp
ss
xor
mov
push
ret
pop
bound
lods
adc
movs
in
push
leave
out
test
xor
(bad)
adc
push
lods
lock
push
mov
pop
xchg
mov
pop
cld
js
cmp
push
addr16
pop
push
add
mov
push
add
retf
add
jmp
mov
js
rcr
shr
pop
jge
inc
pop
imul
adc
cmp
push
push
inc
hlt
push
mov
add
scas
dec
retf
mul
repnz
ja
cmp
or
pop
push
xchg
hlt
sbb
mov
cmps
popa
lds
sbb
mov
neg
mov
scas
xlat
in
rcr
les
jae
fs
lods
mov
mov
clc
cmp
jmp
mov
or
das
mov
pop
cmp
outs
xchg
xor
cmp
loopne
dec
cmp
in
ret
cmps
lahf
sub
sub
push
lds
jo
scas
stos
and
paddsb
inc
dec
add
ss
stos
mov
dec
pushf
retf
(bad)
out
repnz
fwait
clc
mov
push
jge
jbe
dec
jle
xor
mov
sub
pushf
das
movs
sub
inc
sbb
adc
jno
inc
jge
jae
fisubr
adc
cmc
inc
adc
adc
xchg
daa
sar
jo
jb
iret
or
rcl
rcl
cli
repz
cmp
inc
fs
pop
xchg
pop
push
pop
aas
jp
sahf
std
mov
sbb
jecxz
jnp
sub
jb
sbb
movs
pop
cmc
fnstenv
cmps
sub
shl
les
or
test
sub
xchg
in
imul
scas
inc
int3
mov
push
imul
daa
mov
cmp
xlat
pushf
cmp
in
fbld
sub
fs
xchg
push
or
pop
cmps
and
bound
in
mov
xchg
and
xor
ins
xor
iret
push
mov
(bad)
jo
cmp
mov
repz
sbb
es
ja
mov
cs
add
jmp
xor
mov
shl
sbb
loop
inc
imul
sub
and
xchg
pop
jmp
or
rcl
jno
adc
add
cmp
mov
pop
rol
dec
retf
ins
cli
shl
fmul
ds
cmp
repnz
stos
mov
add
popf
movs
lahf
mov
or
aam
pop
cmp
pop
test
adc
ins
inc
sbb
jg
pop
adc
jp
stos
push
mov
sub
dec
popf
mov
fimul
punpcklwd
dec
dec
lods
xor
mov
ins
cmp
jecxz
jae
icebp
lods
aas
cmp
inc
not
loope
xor
popf
push
sbb
sbb
lahf
cmp
sub
je
lahf
dec
sbb
xchg
push
out
sbb
outs
rol
ja
repnz
stc
hlt
mov
aad
and
inc
jg
push
sub
dec
jge
mov
bnd
sbb
push
pop
mov
and
in
or
mov
push
xor
pop
fdiv
lock
mov
pop
cmp
or
dec
scas
retf
adc
movs
aad
mov
cmp
dec
leave
inc
loop
lods
ror
jg
lahf
fcmovu
pop
dec
inc
pop
and
jae
add
mov
mov
dec
aad
jo
mov
cdq
sbb
sbb
ret
adc
movs
push
pop
int
jno
cdq
jb
aam
xor
repz
or
mov
aad
or
bound
imul
push
loopne
pop
xchg
or
jnp
leave
pop
pop
inc
or
aad
dec
movs
retf
inc
xchg
aaa
xor
test
xchg
fcmove
std
mov
add
or
sub
push
stc
mov
add
pop
sbb
and
push
add
cmp
xor
sbb
and
mov
shl
cdq
sbb
xchg
fbld
fsub
(bad)
inc
pop
std
xchg
cmova
pop
inc
cmps
out
aaa
cmp
mov
loop
mov
push
movs
adc
sbb
xor
ja
lods
sbb
loopne
retf
arpl
imul
in
ret
push
jo
rol
or
shr
sub
sub
icebp
ins
push
push
ins
mov
mov
pop
xchg
adc
xor
pushf
sti
(bad)
pop
push
mov
test
and
lods
ja
xchg
gs
sbb
push
into
adc
loopne
adc
and
fdivr
xlat
sbb
sbb
or
call
jmp
mov
sbb
adc
outs
mov
cmps
gs
push
(bad)
es
push
lea
aaa
and
pop
gs
loop
inc
push
adc
xchg
dec
mov
xchg
in
mov
mov
fidiv
xor
sbb
neg
add
jno
loopne
enter
pusha
cmp
mov
push
adc
mov
scas
xlat
out
jecxz
int
stos
(bad)
push
cmps
(bad)
stc
outs
push
sub
inc
js
push
(bad)
ficomp
mov
and
xor
push
sahf
and
xor
std
in
inc
outs
pop
imul
push
nop
inc
adc
mov
jl
fcom
push
shl
aad
(bad)
xchg
test
xor
sti
in
jbe
dec
push
pop
add
test
fimul
in
lods
call
adc
xor
mov
stos
jbe
push
mov
mov
sti
mov
fcmovb
mov
pushf
xchg
jecxz
inc
push
dec
mov
loop
pop
xor
xor
ret
and
inc
inc
popa
test
icebp
sub
jl
mov
jecxz
popf
jmp
sub
adc
fisttp
dec
bound
fld
cmp
push
inc
xchg
xor
sub
(bad)
(bad)
cmps
pop
das
xchg
adc
push
mov
imul
dec
sahf
inc
pop
ret
jl
pusha
and
sub
cmp
pop
jmp
inc
fnsave
in
cmp
aaa
inc
jbe
mov
xchg
and
pop
out
mov
inc
xchg
enter
push
pop
ins
ret
std
(bad)
scas
mov
or
mov
test
xor
stos
int
inc
dec
pop
in
retf
sub
cmc
dec
int
push
sub
(bad)
aad
imul
out
cmp
sti
pop
push
out
dec
jnp
icebp
stos
pop
sbb
sahf
pop
mov
xor
xor
fsubrp
cmp
sbb
mov
jge
(bad)
std
and
lahf
retf
sub
rol
(bad)
push
mov
fistp
movs
inc
xor
mov
mov
mov
scas
jp
xor
jne
push
xchg
int3
popa
cmc
xor
icebp
fadd
and
shl
xor
sar
nop
jbe
sub
sbb
sub
fimul
or
int3
push
dec
sbb
ins
sub
xor
xchg
ds
xlat
mov
pop
shr
jle
js
hlt
push
mov
icebp
(bad)
xchg
mov
sub
mov
xchg
rol
xor
(bad)
cdq
add
dec
imul
mov
das
stos
fidivr
sbb
daa
xchg
cli
push
xor
pop
pop
mov
fsub
dec
aam
cmp
movs
mov
inc
cwde
xor
xchg
push
out
mov
push
outs
retf
adc
inc
mov
imul
inc
bound
lea
sbb
clc
ja
fucomi
arpl
(bad)
mov
cmc
push
fadd
cwde
mov
adc
ins
mov
enter
push
stos
jne
add
push
aam
mov
cmp
cli
(bad)
scas
cmps
or
jmp
mov
int3
scas
les
xchg
movs
repnz
dec
xor
and
call
push
in
popf
les
sbb
inc
pop
dec
ficom
cmc
mov
mov
jmp
or
mov
mov
mov
ror
adc
out
and
(bad)
pop
pop
jnp
out
push
mov
int
xor
push
rcr
neg
jecxz
lods
int
mov
and
cmp
cmp
imul
clc
mov
sbb
cmp
sbb
cmp
pop
shl
sbb
mov
pop
xlat
mov
xlat
mov
addr16
ret
test
add
add
pop
adc
lea
leave
jns
sub
inc
call
stos
push
mov
jmp
inc
jb
add
sbb
cmp
fiadd
enter
add
mov
ret
cli
push
dec
stc
mov
jnp
jo
pushf
pushf
jb
sub
int
mov
or
cmps
into
shl
or
push
nop
test
and
sbb
mov
pop
cli
clc
pop
scas
sar
fsub
push
mov
jno
out
pop
fnstsw
mov
push
test
mov
cwde
repnz
push
movs
in
aad
sbb
fild
xor
loopne
inc
sbb
lods
push
mov
lods
cmp
aad
int
aaa
nop
test
lods
dec
int
mov
mov
xchg
repnz
adc
scas
push
sbb
push
xchg
jge
xchg
jecxz
ss
ror
sub
loop
jl
lods
or
or
imul
rcl
pop
xor
sbb
test
fstp
dec
lock
jge
stos
stos
(bad)
imul
cmp
fimul
mov
retf
ins
add
cli
pop
xchg
into
sahf
push
or
stos
pushf
inc
cmp
cmps
ret
rcr
cs
push
lahf
dec
stc
or
cdq
hlt
std
and
mov
les
lods
call
mov
inc
adc
int3
outs
mov
(bad)
mov
outs
jbe
test
movups
mov
pop
sahf
cmp
repz
fldcw
ja
pop
test
dec
jge
ds
movs
dec
mov
push
mov
adc
scas
out
push
mov
data16
cdq
push
xchg
and
mov
cdq
lods
int3
sub
enter
mov
xchg
jne
sub
push
test
adc
ror
mov
push
pop
xchg
iret
push
cmp
adc
ret
add
jmp
mov
je
cmps
stos
xor
mov
or
adc
loopne
stos
popa
shl
lahf
jp
xchg
mov
aaa
pushf
pop
adc
pop
dec
jmp
sbb
mov
sub
dec
push
or
js
jge
adc
push
retf
xor
ret
xchg
cmp
fsubr
adc
das
out
or
xor
fisttp
mov
enter
aad
dec
ins
lods
mov
add
scas
mov
rcr
dec
ss
pop
adc
fld
ins
(bad)
mov
aam
rcl
pop
xor
jae
retf
jle
leave
or
sar
movs
daa
cld
stc
mov
scas
cs
mov
mov
mov
iret
mov
outs
inc
and
test
mov
or
aaa
pusha
adc
mov
jle
push
imul
xor
push
mov
adc
in
bound
aam
out
imul
jo
inc
test
ins
test
pop
push
shr
loope
repz
rcl
jecxz
jne
inc
dec
data16
test
xchg
xlat
mov
test
inc
addr16
mov
mov
fld
adc
xor
(bad)
jmp
imul
inc
inc
inc
dec
xchg
push
int3
adc
add
push
lods
jmp
fmul
mov
lds
pusha
sbb
mov
daa
push
rcr
push
sbb
inc
outs
iret
xchg
icebp
dec
mov
mov
add
or
ins
dec
sbb
imul
inc
imul
cmp
ss
add
popf
xor
xchg
inc
aam
mov
fwait
int3
push
out
stos
sbb
dec
cmp
push
xchg
inc
loop
inc
mov
hlt
mov
mov
or
and
imul
sub
inc
sub
or
jb
inc
fistp
rcl
cwde
in
adc
rcl
add
xchg
xchg
jo
jb
iret
sahf
clc
add
sub
push
fstp
leave
xchg
xchg
or
fmul
pop
pop
dec
dec
xchg
repz
inc
dec
arpl
ins
enter
cmp
fucomip
and
inc
test
into
fdiv
shr
mov
xchg
cdq
cmps
fadd
jnp
mov
test
xchg
xchg
cli
jge
fwait
jo
cdq
out
enter
and
fistp
mov
lods
pop
lods
pop
push
xchg
mov
pop
daa
push
or
js
xor
lahf
cmp
data16
movs
push
dec
pop
test
aad
cmp
inc
add
jns
cmp
pop
fwait
cmps
mov
or
cmp
les
call
mov
retf
cmc
shr
retf
jle
in
add
mov
rol
pop
loop
sub
pop
jl
sub
in
mov
cmps
test
arpl
xor
jp
or
jb
fs
loop
pop
int
je
test
sbb
ds
sbb
loope
push
cmp
(bad)
mov
mov
adc
addr16
jae
push
in
xor
pusha
jno
fwait
xor
gs
js
sti
dec
jg
cmps
dec
popf
xchg
fmul
adc
xchg
add
jg
xchg
jmp
in
jp
jge
ins
iret
aas
mov
ret
test
mov
jnp
lahf
cld
and
cli
lock
enter
lods
sub
cmp
(bad)
std
popf
inc
pop
cmc
pop
mov
inc
test
aaa
xchg
in
add
push
shr
push
sahf
jmp
push
in
push
and
test
js
mov
outs
push
ret
fwait
aas
push
jmp
xchg
rol
mov
jecxz
mov
ins
repnz
rol
lods
hlt
xlat
aad
add
jp
or
adc
inc
int3
push
mov
mov
jge
dec
dec
int
jae
xchg
add
fwait
rcr
ret
stos
adc
out
scas
mov
cwde
sub
sti
push
fldenv
arpl
push
mov
xchg
cmp
adc
dec
push
dec
dec
jnp
dec
xchg
add
jle
cmp
or
xor
jecxz
int3
xchg
call
inc
mov
jmp
mov
mov
inc
addr16
xor
loopne
ja
or
sub
std
int3
mov
frstor
mov
mov
test
out
mov
mov
mov
mov
aad
mov
idiv
push
ret
leave
adc
dec
dec
jno
jbe
(bad)
mov
sbb
ret
out
ret
push
daa
lods
jge
push
jle
addr16
mov
sub
data16
rcr
cmp
dec
mov
retf
mov
pop
pop
or
dec
jmp
scas
push
sbb
sbb
jno
ds
mov
add
jmp
adc
sbb
inc
in
in
pop
inc
push
adc
adc
inc
sbb
pop
fiadd
and
jg
inc
xor
mov
lds
mov
aam
mov
cli
mov
rol
pop
addr16
fnstcw
xchg
mov
push
push
dec
neg
jne
les
fwait
lea
dec
aas
and
add
scas
sti
addr16
xchg
test
jbe
fsub
or
retf
scas
sbb
mov
pop
popf
xor
enter
(bad)
ins
sbb
leave
push
inc
js
mov
or
mov
call
jmp
push
std
jne
popf
inc
adc
outs
repnz
sub
add
pop
in
xor
dec
mov
shl
and
sub
mov
loop
(bad)
mov
sti
pop
movs
push
push
xlat
xor
xor
jne
pusha
pop
es
add
sub
and
inc
das
pop
dec
lock
stc
push
arpl
outs
add
jo
pop
int
mov
sub
outs
adc
and
test
sbb
popa
or
and
loopne
mov
or
mov
test
popa
(bad)
(bad)
out
lods
icebp
adc
jno
std
jnp
pop
(bad)
pop
icebp
mov
and
es
sub
arpl
out
inc
mov
hlt
out
sub
jbe
dec
pusha
jns
rcr
xchg
sbb
lea
and
out
lods
outs
mov
cmp
std
cdq
mov
xchg
ficom
mov
sub
push
ret
push
push
call
sub
daa
xor
in
jb
out
retf
aad
push
jae
movs
(bad)
mov
aaa
jle
pop
mov
xchg
mov
sub
sub
fcmovbe
xchg
mov
aad
out
cli
or
loopne
inc
imul
ss
push
outs
adc
dec
ficomp
or
xor
call
xchg
out
out
gs
fwait
loopne
jns
aam
mov
or
inc
pop
popa
add
pop
jle
fnstcw
dec
je
ss
mov
xor
(bad)
pushf
fadd
loope
or
rcl
xlat
fisub
mov
push
shr
add
loope
mov
loopne
mov
ja
or
sub
shr
sub
jno
imul
pop
xor
test
sub
ja
sub
js
dec
in
cmp
or
inc
add
xchg
aaa
fcmovne
inc
sbb
fnstcw
rol
lahf
repz
retf
in
dec
add
(bad)
adc
sbb
or
lock
inc
lahf
aam
bound
add
or
rcr
mov
fistp
pop
cmp
or
push
ret
jl
mov
jmp
xchg
fs
in
add
add
add
sub
and
sub
rcl
into
or
stos
xchg
loope
dec
push
jno
js
icebp
adc
cmp
jb
cmps
loop
lods
cs
leave
add
and
ss
push
lock
cmp
cmps
push
jle
mov
xor
or
lea
pop
mov
sub
mov
cmc
pop
enter
das
dec
loope
jg
test
pushf
jmp
jb
jnp
push
adc
xchg
mov
ins
sti
arpl
xchg
mov
push
repz
sar
ins
xor
outs
xor
popa
das
lock
jo
pusha
inc
pop
mov
or
stc
into
mov
push
pop
jo
or
unpcklps
arpl
aad
pop
pop
ret
push
pop
mov
aam
mov
hlt
sbb
push
sub
aad
xchg
outs
inc
(bad)
loop
dec
ror
into
into
aam
scas
cmc
sbb
add
pushf
iret
stc
imul
and
div
mov
push
fnsave
ss
mov
(bad)
imul
arpl
mov
in
stos
inc
mov
out
cmp
sti
cs
or
and
popf
or
fxch
imul
test
sti
inc
pop
(bad)
in
dec
jno
push
jne
jp
ins
and
dec
enter
(bad)
dec
mov
(bad)
dec
(bad)
mov
js
cmp
and
cmp
or
sbb
adc
(bad)
cs
rcr
or
arpl
push
jmp
int3
mov
adc
(bad)
and
pop
push
pop
and
adc
sahf
mov
fstp
or
adc
retf
mov
and
lods
pop
repz
jg
mov
fmul
mov
(bad)
pop
pushf
pop
inc
mov
mov
xchg
daa
cmp
and
jnp
pushf
add
cmp
dec
fcmovu
mov
stos
jo
or
inc
jno
imul
jecxz
stc
sbb
hlt
push
dec
movs
xchg
rcl
xbegin
sub
pusha
addr16
mov
mov
and
inc
dec
pusha
jl
mov
xor
cmp
popf
js
or
mov
inc
push
int3
lods
sbb
sti
loop
sub
xlat
loope
popa
pop
mov
jmp
push
pop
add
sub
(bad)
adc
sbb
dec
xchg
jae
mov
mov
mov
test
rcl
or
cmp
and
popa
mov
sbb
jmp
add
mov
les
mov
aam
out
ss
push
lods
nop
out
(bad)
ins
rcr
ret
cmps
jmp
sar
dec
mov
cli
pop
(bad)
fcomp
in
mov
imul
or
test
cwde
enter
inc
jl
and
inc
ins
inc
cmps
add
in
dec
mov
loopne
jb
sub
imul
jne
dec
push
sar
xor
mov
add
retf
(bad)
mov
cld
add
clc
(bad)
xchg
fistp
pushf
add
jno
mov
mov
push
mov
out
aam
sub
es
xchg
daa
sub
ins
cs
push
jo
call
jmp
jne
cmp
add
lahf
adc
dec
xchg
jle
leave
mov
mov
ror
jp
or
lea
test
fcmovnb
adc
nop
pop
jno
movs
pop
pop
add
pop
std
cmp
mov
xchg
jg
call
xor
dec
or
push
and
xor
lods
cs
mov
outs
xchg
js
stc
mov
add
sbb
and
adc
adc
inc
retf
cmp
popa
in
jb
loope
gs
mov
sbb
xchg
fstp
cmp
or
push
dec
call
std
ror
das
jne
inc
in
sub
cmc
mov
mov
sub
xchg
jmp
rcl
nop
mov
push
cld
dec
mov
and
xchg
int
dec
cwde
push
xor
sbb
and
sbb
mov
ins
gs
(bad)
mov
bound
dec
ret
hlt
arpl
inc
pusha
ins
push
pop
jl
sbb
sbb
add
(bad)
fidivr
call
fidivr
js
cmp
enter
jmp
and
dec
mov
mov
call
pop
ret
and
aaa
dec
in
arpl
xchg
test
adc
jp
xchg
push
fsub
aaa
and
pop
aad
repz
cmp
add
sbb
ret
(bad)
xchg
aad
sub
xchg
add
mov
dec
jmp
cs
not
outs
rol
xor
add
test
sbb
mov
leave
and
push
or
push
push
icebp
mov
sub
push
cmp
add
fxch
mov
or
cs
sub
mov
xor
mov
mov
dec
push
clc
imul
jne
into
test
dec
add
jl
pop
loope
call
(bad)
xor
inc
push
shl
dec
push
fnstenv
sub
adc
arpl
out
dec
add
(bad)
mov
cmp
cwde
and
jae
lock
cmp
mov
inc
fs
mov
fbld
xor
arpl
jp
xlat
push
inc
fisubr
sub
mov
in
imul
fnstenv
lods
iret
lock
adc
pop
lods
jmp
es
pop
add
mov
rcl
cmp
pushf
sbb
pusha
jae
adc
inc
(bad)
xchg
test
adc
sub
inc
xor
mov
les
int3
loope
stos
jecxz
les
loopne
ret
movs
pusha
lahf
cs
or
add
or
enter
jg
add
cld
mov
iret
and
sbb
xor
daa
fld
pop
mov
inc
jmp
in
fnstenv
je
mov
les
rcl
push
(bad)
daa
inc
xor
mov
xchg
cmp
hlt
xor
leave
mov
arpl
push
mov
mov
pop
xor
je
or
add
out
stos
push
fadd
stc
leave
dec
add
retf
and
jb
lods
xor
sti
out
inc
ins
dec
cs
in
jne
dec
dec
jl
call
jno
push
sbb
sub
idiv
popa
daa
popf
cmp
and
fwait
neg
jmp
data16
dec
jp
lahf
stos
adc
sahf
repz
mov
div
addr16
mov
movs
push
int
sbb
pop
loope
sbb
pop
ret
sub
aad
fs
jl
ds
mov
stos
cmp
cmps
in
pop
int
adc
xor
cs
cli
iret
and
sbb
(bad)
jbe
outs
stos
test
inc
(bad)
mov
push
fbld
push
jg
pushf
movs
lods
pop
xchg
fisttp
test
ins
inc
cmps
push
clc
stos
add
fldln2
mov
xor
(bad)
push
fwait
lds
jp
mov
push
mov
outs
(bad)
call
xor
mov
movs
rcr
cmps
xor
adc
test
cdq
jno
call
sub
imul
aam
ins
dec
inc
and
and
add
push
mov
mov
retf
vunpcklps
adc
mov
or
inc
bound
call
pop
hlt
jmp
rol
pop
push
pop
xor
sub
inc
and
outs
cmp
lds
les
movs
push
clc
fimul
(bad)
retf
adc
mov
mov
mov
pop
ss
jo
(bad)
aaa
(bad)
cmp
xchg
shr
fldcw
sub
add
test
or
adc
rol
and
cs
addr16
xchg
inc
jmp
xchg
arpl
das
pop
jmp
push
lahf
xchg
adc
cld
sub
push
jmp
or
pop
mov
inc
scas
aaa
xor
add
push
test
ror
xor
icebp
mov
dec
enter
scas
pop
adc
jl
dec
push
dec
cmp
adc
cmp
pop
xchg
daa
ins
xchg
sub
movs
mov
jno
mov
fwait
xor
loopne
out
out
cwde
cmps
dec
in
or
sub
fs
aad
in
mov
jns
mov
daa
ja
mov
inc
ins
push
and
into
cmp
fstp
add
adc
ins
int3
jo
scas
outs
retf
xor
test
push
dec
test
rcr
jno
mov
adc
imul
mov
mov
dec
sbb
arpl
es
in
outs
cli
mov
or
or
cld
lahf
add
adc
fsubr
dec
mov
sub
or
sub
push
push
add
inc
and
psubq
fbld
lods
dec
es
dec
(bad)
in
(bad)
push
jecxz
mov
scas
lock
mov
xchg
lahf
outs
lea
mov
mov
or
mov
(bad)
jo
jae
ja
sbb
std
jbe
jmp
fcmovb
push
push
daa
(bad)
iret
jb
fmul
cs
push
movs
rcr
(bad)
mov
jns
xchg
adc
xor
lahf
xchg
test
leave
cmps
das
std
in
pop
sbb
retf
inc
push
gs
lds
sub
pop
or
lock
ret
pop
fnstsw
inc
dec
out
std
push
pcmpgtw
jno
push
xor
out
test
inc
push
mov
xor
rol
mov
or
push
sub
aas
bound
sub
das
and
sub
xor
mov
je
imul
arpl
fs
sub
pop
movs
xor
jmp
jle
lahf
mov
jns
ins
stc
push
hlt
jnp
push
fstp
sar
mov
ret
pusha
je
xlat
inc
(bad)
pop
outs
adc
dec
jge
cmp
jl
movs
jmp
addr16
test
push
mov
jno
xchg
and
jbe
jo
psraw
fisttp
bound
jle
mov
pop
ins
in
shr
mov
inc
fs
pop
lahf
test
(bad)
push
or
in
push
inc
xor
ja
cs
mov
inc
inc
fs
lds
jmp
fdiv
jb
icebp
mov
cmps
lock
pop
sti
mov
inc
daa
push
shr
aad
jns
dec
out
mov
rol
ret
sbb
jl
jns
mov
dec
mov
adc
fld
and
push
mov
ror
pop
aas
outs
hlt
mov
lods
por
or
pushf
repnz
out
cmc
ja
cmp
add
add
test
(bad)
or
dec
adc
stc
in
or
into
bound
sub
mov
push
adc
retf
jmp
dec
sub
mov
out
in
push
mov
jp
out
sahf
jns
add
and
and
add
fucom
repnz
shl
std
cmp
dec
hlt
cdq
push
push
and
add
fs
jno
clc
cmp
aaa
pop
outs
(bad)
lods
jmp
inc
xor
inc
mov
retf
arpl
ret
shl
rol
jg
daa
das
enter
ficom
ret
dec
dec
shl
scas
dec
push
outs
out
out
int3
aaa
xchg
and
or
adc
dec
fwait
pop
sbb
movs
sbb
ja
rcl
cmp
mov
adc
ja
mov
cld
or
stos
imul
loope
inc
scas
stc
mov
test
das
shr
xor
dec
fcomp
ss
stos
ja
and
enter
jnp
sbb
jecxz
xor
dec
push
rcr
adc
ret
jbe
repz
loop
loopne
lahf
idiv
mov
mov
xor
or
jmp
and
or
shl
push
adc
lds
cmp
adc
call
jae
and
and
nop
and
das
(bad)
xchg
xor
push
lock
aam
mov
ds
mov
aam
adc
out
mov
in
dec
fdiv
sar
mov
data16
cmps
mov
jmp
iret
jmp
push
dec
xchg
mov
fwait
ins
in
mov
and
xchg
mov
fsubr
xchg
popa
add
push
adc
inc
dec
jbe
lock
hlt
or
test
cmp
push
(bad)
loope
xchg
nop
(bad)
pop
jne
imul
xor
shl
inc
cmp
mov
sub
jmp
pop
in
mov
jmp
sbb
inc
and
les
popf
adc
fldenv
ffree
(bad)
frstor
outs
lahf
cmc
movs
inc
xchg
jnp
mov
scas
retf
push
sub
jl
dec
xor
scas
jmp
mov
or
icebp
mov
dec
scas
mov
fwait
das
ins
inc
pop
dec
and
daa
in
arpl
repnz
cs
dec
jecxz
mov
jl
sahf
mov
sti
(bad)
aaa
je
adc
sub
inc
or
mov
xchg
xor
pop
js
jo
nop
cli
pop
jbe
out
cmp
pop
push
add
adc
mov
sub
mov
and
xlat
ja
cmp
sbb
ror
test
in
inc
int3
test
sub
arpl
enter
mov
(bad)
fstp
xor
popf
adc
pop
fdivr
inc
lock
mov
aam
scas
(bad)
sub
push
lock
and
shl
movs
push
lahf
lds
push
mov
icebp
dec
aaa
lock
stos
in
push
ins
cmp
and
ds
push
scas
sub
xchg
add
add
jl
lea
xor
fwait
js
lea
or
jge
imul
fxtract
push
dec
lods
sub
push
inc
sub
data16
push
pop
xchg
jle
repz
cwde
iret
in
shl
fnstcw
imul
rcl
mov
ins
pop
jne
mov
pop
dec
mov
add
outs
ja
jg
sbb
cmp
cmc
call
push
loope
shl
push
cmp
dec
dec
jecxz
xchg
outs
shr
stc
(bad)
nop
mov
loope
push
push
xchg
and
jae
sbb
icebp
ins
pop
vpmacsdql
ins
mov
daa
out
retf
pop
jae
(bad)
push
mov
lahf
sbb
adc
mov
je
inc
pop
frstor
jbe
in
mov
pop
xchg
mov
jecxz
jnp
cmc
add
movs
(bad)
jno
cdq
shr
bound
mov
cmp
fbld
movs
push
ror
dec
bswap
pop
daa
mov
pushf
in
mov
mov
add
push
adc
hlt
jg
sti
mov
pop
xor
mov
es
jmp
dec
repz
imul
test
loop
jp
retf
dec
sub
cdq
xchg
scas
cdq
std
dec
xchg
mov
sar
mov
xor
add
and
ds
cmps
leave
xor
add
(bad)
imul
push
sub
stos
jg
cmps
push
mov
fadd
loope
sar
cmp
stos
inc
mov
loopne
rcr
xor
into
sub
add
pop
lods
cdq
pop
iret
in
xor
dec
and
(bad)
mov
dec
enter
add
add
xchg
push
cmps
out
cmps
repnz
add
rcl
arpl
ret
xor
sub
dec
xchg
addr16
push
or
cmp
dec
cmp
xchg
call
xchg
pop
xchg
adc
mov
scas
push
mov
inc
es
pop
fdivr
jle
mov
inc
data16
aad
sub
dec
add
test
ret
sbb
jecxz
push
bound
loop
rcl
lods
lds
nop
push
and
retf
lods
xchg
push
mov
cld
inc
inc
in
hlt
lds
sbb
dec
les
mov
imul
iret
movs
call
adc
aad
pushf
cmp
pusha
cmp
or
rcr
leave
push
mov
mov
aaa
xchg
dec
sbb
xchg
dec
jle
jbe
retf
test
cmps
mov
push
mov
fidivr
pop
xchg
imul
pcmpgtd
mov
xor
mov
stos
push
add
mov
jg
leave
sbb
loopne
push
(bad)
jns
cld
aad
mov
mov
retf
int3
stos
loop
popa
pop
xchg
iret
xchg
xor
pop
mov
aam
xchg
sbb
mov
jmp
sbb
dec
loopne
aaa
and
sbb
mov
xor
inc
cmp
xchg
cmc
and
addr16
cmp
inc
inc
neg
mov
fdivp
xchg
sub
xchg
cmps
mov
push
xchg
xchg
fisub
adc
xlat
jae
adc
mov
pop
into
call
sbb
sub
and
cmp
aam
mov
leave
arpl
rol
call
sub
sbb
mov
repnz
jae
xor
int3
sbb
ds
sbb
aaa
mov
das
ror
stc
call
dec
repnz
xor
repnz
add
ss
mov
out
movs
ss
add
(bad)
aam
adc
enter
div
mov
xchg
(bad)
and
xchg
aas
ins
mov
fwait
jns
fld
pushf
pop
movs
neg
jo
idiv
leave
mov
inc
xchg
int3
ins
xchg
or
jbe
mov
(bad)
push
shl
and
dec
out
sar
lods
or
dec
push
xchg
dec
pop
in
cmp
xchg
loop
dec
inc
loopne
test
cmp
cwde
cmp
sub
rcl
inc
or
xor
mov
ror
lods
in
dec
sub
jne
daa
dec
jnp
int3
retf
arpl
and
fdiv
sub
out
mov
mov
lahf
int3
fmul
jo
neg
(bad)
enter
inc
lock
inc
xor
inc
ds
adc
mov
outs
xor
inc
jae
sti
in
enter
(bad)
sub
pop
mov
inc
cmp
std
push
lahf
and
stc
aaa
fldenv
gs
bswap
call
push
jno
or
dec
(bad)
push
jne
(bad)
jae
cmp
mov
cli
pop
out
(bad)
pushf
pop
ins
(bad)
xchg
fs
mov
nop
pop
pop
aas
sbb
fld
pop
cmp
mov
int
pop
xor
fstp
ror
in
movs
push
dec
sub
sub
lock
cmp
mov
xchg
xchg
(bad)
fnstsw
in
add
shl
sbb
test
pop
cdq
xor
add
pop
jnp
sub
ret
mov
popf
dec
inc
scas
div
and
mov
cmp
in
fistp
mov
iret
dec
(bad)
std
mov
dec
rol
dec
pushf
jl
cmps
out
sub
std
cmp
cmp
leave
ins
sbb
mov
test
and
mov
mov
lea
scas
sub
ins
mov
push
sbb
sbb
std
into
adc
adc
call
repz
cmp
adc
aad
iret
outs
jl
pop
out
daa
lds
and
add
push
dec
sbb
pop
xchg
push
push
jmp
and
hlt
xchg
add
xor
call
adc
lods
adc
mov
outs
xor
adc
fstp
pushf
xchg
jp
xchg
jo
out
jecxz
and
retf
sub
or
mov
pop
xchg
mov
xchg
inc
inc
xchg
out
bound
xor
mov
popf
js
pop
cmps
mov
dec
pop
cmp
scas
or
sbb
xor
addr16
ins
mov
retf
inc
sub
in
cmp
loopne
inc
and
dec
push
mov
inc
leave
imul
cmps
in
test
stc
add
dec
enter
repnz
int
movs
jbe
daa
out
mov
mov
test
and
add
int
jecxz
dec
cli
sub
div
jo
inc
int3
and
shl
mov
imul
push
xchg
fwait
fwait
add
or
pop
fisttp
dec
retf
jo
cmp
inc
xor
pushf
ficomp
inc
loop
push
or
xchg
imul
adc
gs
aaa
or
sub
cdq
mov
push
icebp
mov
or
retf
xchg
sub
mov
pop
stos
out
dec
fistp
inc
retf
cwde
ss
retf
rol
mov
mov
jg
outs
push
xchg
and
and
cmp
mov
std
fisttp
mov
sub
out
mov
jmp
aam
cmp
sbb
(bad)
shl
das
repz
sti
push
dec
cmp
cmp
mov
imul
loope
sbb
and
stc
pop
ins
shl
and
sbb
dec
ret
setle
push
jmp
jno
out
sub
xchg
jg
dec
sub
xlat
add
xchg
ins
and
push
ins
int3
xchg
pop
jae
popa
mov
cmps
rcr
xchg
adc
mov
adc
mov
jle
or
adc
addr16
and
push
outs
nop
out
push
push
cmps
jbe
lea
jg
test
or
rcl
cmp
cmp
xor
sub
(bad)
nop
cmp
in
js
fst
scas
jle
push
imul
shl
retf
mov
imul
xchg
clc
int3
jmp
in
pop
imul
call
fcmovnbe
repz
jnp
movs
xchg
loope
ds
scas
mov
pushf
sbb
mov
pop
stos
lea
stc
jl
into
out
(bad)
jo
push
je
out
jl
outs
and
cmp
stos
aaa
sub
in
call
xor
or
or
inc
fsubr
sub
and
aam
imul
xchg
sbb
xor
inc
adc
add
add
sub
fwait
shl
mov
push
popf
and
cmps
dec
mov
dec
dec
lock
movs
and
rol
repz
jmp
fdivr
pop
pushf
ret
or
jecxz
test
adc
ja
clc
aam
adc
push
mov
pusha
and
cmp
sbb
mov
arpl
call
add
and
cmps
out
lahf
scas
sar
ins
add
(bad)
mov
mov
daa
jmp
hlt
es
mov
std
adc
push
std
js
shr
cmps
sub
stos
sub
xchg
sbb
out
test
idiv
or
ins
retf
pop
out
mov
stc
add
sub
cmp
and
mov
dec
mov
(bad)
xor
jp
adc
out
rcr
cmp
setg
out
mov
pop
repz
inc
popf
ret
sbb
and
add
outs
popf
pop
lea
scas
dec
add
xchg
je
clc
adc
mov
push
push
push
(bad)
imul
add
bound
rcl
rcl
push
ss
repz
aam
add
test
push
add
fwait
and
push
cli
sub
mov
xor
cli
cmc
mul
push
jo
mov
inc
mov
dec
pop
jecxz
xchg
aaa
mov
repnz
jbe
stos
mov
lea
push
daa
imul
retf
jmp
out
jmp
and
inc
call
(bad)
and
inc
xchg
mov
dec
inc
jno
inc
mov
xchg
mov
mov
mov
shl
or
inc
test
out
pop
fistp
jle
inc
ds
or
dec
repz
repnz
add
dec
aad
pusha
pop
cwde
cmp
push
and
jne
pop
div
xor
add
les
mov
in
ds
fst
dec
sti
inc
test
(bad)
loope
dec
push
cmp
lahf
jnp
inc
addr16
add
jmp
cmp
pop
cmp
jp
mov
out
call
adc
and
inc
fist
mov
inc
pusha
jp
mov
sbb
mov
jmp
xor
bnd
and
scas
pop
push
add
add
test
ret
cmp
sbb
dec
shl
ret
adc
shl
fisttp
imul
add
jae
ss
jecxz
sbb
push
inc
mov
out
mov
pop
add
jne
jmp
mov
jae
inc
adc
lods
in
test
leave
(bad)
cmp
sub
jmp
jb
push
fs
nop
ins
dec
ins
or
aas
adc
cwde
jbe
call
push
call
mov
pop
fisttp
stc
lds
mov
pop
or
scas
mov
loop
or
aaa
cmp
sub
push
xor
sub
mov
call
xor
js
mov
dec
pusha
jmp
in
add
mov
ins
add
and
pop
(bad)
mov
jns
push
arpl
add
ret
outs
pop
ds
xchg
stc
icebp
(bad)
pop
jnp
xlat
movs
(bad)
daa
inc
sbb
mov
into
test
mov
shl
sahf
ret
das
iret
jle
cwde
out
fisub
into
sub
push
adc
int
cld
inc
mov
lds
imul
dec
jl
mov
(bad)
jae
jnp
dec
aas
sub
jns
push
int3
loopne
xor
adc
push
adc
jbe
pop
push
mov
jb
dec
xor
jns
jne
add
pop
nop
fs
xchg
(bad)
pop
das
std
int
fild
pop
xchg
mov
mov
in
ficom
inc
xchg
gs
(bad)
rol
mov
pushf
ds
out
or
sub
test
or
popa
mov
xchg
ficomp
mov
push
dec
add
push
dec
jle
push
sbb
cld
std
shl
or
push
data16
shl
hlt
xchg
in
and
movs
cli
movs
sbb
scas
loope
push
in
shr
or
jb
sub
in
inc
out
lea
clc
clc
ins
repnz
aas
retf
sbb
std
bswap
adc
mov
xchg
loop
add
pop
pop
mov
psrlw
mov
psubw
jns
pop
cs
push
and
or
xchg
les
scas
cmps
nop
dec
in
and
bound
pop
add
loope
jbe
fcom
pop
dec
or
or
mov
bound
in
push
(bad)
jmp
outs
xchg
repz
ror
adc
rol
pop
ret
dec
push
js
mov
xlat
inc
stc
jl
iret
push
icebp
mov
loopne
aaa
out
xchg
jl
fwait
jbe
push
idiv
cmp
call
sub
mov
fldenv
je
add
ja
data16
fstp
xchg
popa
ins
inc
stos
add
pop
cs
xchg
xchg
psubq
cli
cmp
sti
js
in
loopne
or
aaa
mov
xchg
(bad)
jle
aam
dec
mov
xchg
inc
cmps
mov
nop
rcr
sub
scas
mov
sbb
jg
mov
jb
pop
inc
dec
les
mov
mov
lds
mov
out
inc
jb
adc
loopne
ret
repz
dec
push
repnz
dec
repz
popf
xor
jge
out
and
pop
jmp
sub
inc
stos
ins
xchg
je
fdivp
mov
cdq
adc
and
pop
push
jecxz
xor
inc
jns
cmps
dec
fst
ins
xchg
add
jmp
add
xchg
cwde
sbb
popf
cmp
mov
ret
ds
fidivr
stos
(bad)
(bad)
bound
mov
movs
xchg
retf
dec
and
lds
add
adc
call
adc
ins
(bad)
xchg
inc
add
jecxz
add
mov
mov
(bad)
aam
jns
loop
mov
test
das
xor
mov
out
pop
test
cwde
data16
inc
sbb
retf
cld
pushf
mov
mov
jmp
rcl
xchg
sbb
es
out
sub
(bad)
cmp
sti
sub
loope
inc
adc
mov
fsub
jne
pusha
hlt
(bad)
pop
sti
out
es
scas
int3
push
out
rol
frstor
out
in
jp
mov
jns
(bad)
(bad)
cli
jnp
popa
or
cmp
and
pop
push
call
push
and
in
adc
push
add
icebp
pop
test
sahf
fidiv
bound
push
dec
xchg
xchg
push
push
and
repnz
pop
je
scas
clc
cli
stos
cmp
add
jmp
fsubr
push
dec
cmp
aam
and
mov
dec
ret
fucom
in
adc
inc
mov
pusha
jno
and
dec
iret
fst
mov
sub
xor
sub
icebp
fild
aam
sahf
sub
inc
or
xchg
bound
push
imul
loopne
in
imul
jle
inc
lods
mov
nop
add
or
pop
add
iret
in
xchg
(bad)
rol
xor
sub
inc
bound
mov
test
mov
mov
out
xor
cmps
push
in
xchg
dec
sub
dec
cmps
fwait
xchg
cwde
dec
or
retf
ret
aad
loopne
cs
cmps
mov
inc
push
and
ins
call
lahf
mov
clc
or
std
cld
(bad)
dec
fs
pop
dec
pop
pop
jg
repnz
cmps
repnz
dec
out
out
cmps
sbb
das
cli
das
call
jecxz
or
popa
mov
fisttp
push
cmc
fisub
(bad)
push
fidivr
test
or
jge
inc
test
data16
cmp
dec
fisttp
push
xchg
push
dec
push
cmc
jns
ret
mov
(bad)
cmp
fs
adc
jg
fnstsw
cmps
sub
pop
xchg
cmps
push
es
data16
fiadd
ins
rol
cmp
push
jno
loop
mov
jmp
mov
sub
xchg
cdq
mov
mov
mov
pop
fstp
inc
mov
aas
push
xor
xchg
push
adc
push
fiadd
(bad)
cli
dec
loopne
shr
(bad)
bound
mov
push
cli
inc
enter
iret
push
mov
xlat
outs
jge
fadd
cld
pop
add
xor
and
mov
dec
jmp
iret
cli
outs
and
add
pop
jmp
sar
ins
popa
ins
movs
(bad)
jl
aam
outs
into
test
sbb
mov
stc
sar
jmp
aaa
mov
push
jnp
jns
jns
addr16
popf
ss
lea
sub
mov
cmp
scas
dec
jo
pop
dec
in
push
pop
jo
dec
outs
mov
push
aad
nop
(bad)
jl
outs
and
add
(bad)
adc
mov
pushf
cmps
push
sub
sub
test
sub
cmp
repz
sahf
(bad)
shl
cs
loopne
xchg
xchg
dec
and
xchg
pop
pop
jne
dec
or
retf
push
xchg
push
lods
int
mov
fsub
mov
adc
jg
adc
dec
stos
(bad)
push
jae
xor
pop
jle
mov
daa
fwait
mov
mov
jbe
jmp
sbb
clc
push
and
popf
ds
test
cmp
mov
stos
cli
mov
imul
data16
stos
mov
sub
adc
xchg
push
in
repnz
into
jecxz
es
jecxz
cmp
jmp
call
mov
pop
pop
loop
ins
nop
or
dec
or
push
dec
outs
int
pop
cmps
outs
sbb
mov
sbb
lods
call
out
faddp
aam
xor
lods
not
mov
jecxz
mov
fstp
and
mov
or
and
std
mov
popf
test
mul
sub
sub
int3
ret
aam
lahf
sbb
pop
ffreep
or
sub
pushf
mov
rcl
mov
repz
test
stc
shr
sbb
mov
cmp
cwde
movs
fstp
loope
inc
dec
xor
mov
sub
fcomp
ins
pop
sbb
xchg
mov
sbb
sar
mov
sbb
xor
stos
xor
rol
xor
in
mov
push
adc
adc
inc
popf
lods
jae
cmp
mov
lea
(bad)
frstor
add
sti
push
inc
bound
or
cmp
cli
call
popfw
lock
leave
in
fmul
mov
xor
les
ins
push
jb
or
and
aaa
stos
ds
fsubr
(bad)
(bad)
or
std
es
sbb
les
out
pop
jmp
mov
nop
cwde
in
jne
into
jle
stos
xchg
cs
jp
cmp
jle
xor
int3
rcl
popf
push
mov
push
cmps
neg
mov
pop
push
mov
outs
test
mov
(bad)
xor
retf
jbe
repnz
pavgb
and
mov
and
out
ins
mov
cwde
cmp
nop
call
nop
test
dec
ins
shl
mov
fmul
inc
movs
mov
adc
add
cmps
jmp
pusha
mov
pop
pop
adc
ret
fadd
iret
xor
add
(bad)
inc
call
lock
outs
add
push
jns
and
mov
mov
push
push
and
movs
mov
push
jb
adc
xor
ins
xor
dec
pop
dec
data16
rcr
and
and
inc
mov
rcr
xchg
xchg
mov
sub
test
pop
add
out
or
pop
dec
daa
shl
cmc
mov
sbb
cmp
callw
sbb
sub
jmp
repz
push
ja
popa
jbe
pop
out
pop
int3
jge
xchg
in
mov
ja
mov
adc
mov
scas
fisub
shl
add
jecxz
inc
stc
mov
inc
aam
inc
lahf
les
jg
adc
daa
inc
sbb
jmp
mov
lahf
lds
dec
ins
fld
aad
bswap
sub
shl
out
(bad)
pop
mov
sub
gs
mov
bound
popa
xor
js
sti
test
push
push
out
cmp
jmp
sti
jmp
fnstenv
clc
ins
ret
inc
jmp
cmp
sbb
dec
shl
ja
push
lock
xor
(bad)
bnd
jge
and
ds
mov
jbe
mov
push
add
xchg
mov
movs
outs
das
mov
cmp
or
into
mov
fcom
xchg
test
cmp
cs
loop
ins
mov
dec
fst
xchg
xor
imul
adc
push
pop
jmp
movs
fcomp
(bad)
inc
imul
mov
push
jl
add
pop
cmc
or
imul
mov
daa
add
push
out
or
and
jno
push
stos
xchg
add
push
mov
pop
pop
in
sbb
add
test
adc
xor
mov
cmps
inc
stc
scas
sbb
or
call
or
cmc
ds
jmp
cmp
in
push
mov
xor
rcl
push
stos
cmp
into
mov
xchg
add
cmp
nop
fxch
jo
sbb
sub
sub
(bad)
lock
cld
and
mov
cmps
push
sbb
pop
mov
and
(bad)
jmp
sub
xchg
xchg
pop
aam
fnstenv
jecxz
call
rcl
or
mov
cmc
(bad)
call
push
movs
movs
mov
out
jns
mov
sbb
into
dec
sbb
push
xor
push
mov
cmps
aas
mov
cmp
nop
sub
adc
or
pop
repz
or
sbb
add
call
add
inc
repnz
xchg
sbb
popa
or
jg
pop
jmp
jg
jne
jmp
nop
test
movs
mov
sti
hlt
arpl
pop
and
loope
push
popf
mov
cmp
movs
mov
into
in
(bad)
jno
push
(bad)
xchg
out
inc
push
sub
mov
mov
mov
test
jl
xor
popa
sub
xchg
scas
pop
push
push
test
inc
xchg
test
cmp
mov
mov
cli
std
out
cdq
jmp
cli
and
push
stos
repz
call
jo
fadd
sbb
mov
ret
je
adc
ja
sahf
fadd
ja
int3
mov
push
mov
sub
or
fdivr
mov
hlt
in
inc
ins
(bad)
sbb
add
test
fsubr
jl
xchg
stos
sahf
fs
mov
sbb
lods
adc
call
nop
inc
add
sub
in
lahf
xor
jl
push
ds
(bad)
test
cmp
dec
dec
fs
lods
jns
jl
pop
sub
pop
rol
daa
gs
gs
jmp
sti
mov
gs
cmp
inc
mov
movs
in
jns
sahf
aas
neg
xchg
push
cs
jmp
inc
mov
test
cmc
sbb
icebp
out
popf
popf
mov
dec
mov
dec
xlat
inc
daa
nop
xchg
push
jle
popa
repz
adc
pop
or
push
mov
test
mov
sbb
sbb
xchg
sub
stos
cs
enter
lock
xchg
cli
gs
std
cmp
nop
int3
gs
repz
addr16
sar
cmp
jmp
outs
dec
clc
mov
inc
ret
stc
fs
mov
or
jmp
clc
xor
ud2
lods
cmp
push
jmp
in
dec
sub
ins
inc
pop
aam
addr16
inc
pushf
(bad)
and
imul
or
je
adc
fst
xlat
dec
mov
outs
stos
mov
jae
aas
movs
dec
loope
push
in
cmovge
cdq
std
push
and
retf
mov
or
mov
(bad)
sub
cwde
sti
and
and
mov
mov
rcl
adc
clc
call
xchg
sti
dec
aad
and
pop
mov
jge
adc
and
mov
movs
mov
xchg
popa
fcom
mov
movs
xchg
pop
mov
adc
call
push
push
or
jmp
jne
repnz
mov
iret
xor
mov
adc
aas
test
jbe
add
push
jle
mov
sbb
arpl
scas
in
cmp
mov
jne
push
mov
push
popa
sbb
imul
push
xchg
jae
(bad)
xor
rcr
loopne
scas
mov
dec
in
push
aas
dec
fist
add
pop
stos
ins
xlat
sub
jmp
pop
sub
pushf
add
jno
or
xchg
mov
sti
fld
inc
jmp
xchg
add
pop
adc
ss
and
adc
dec
push
scas
mov
xchg
pop
scas
and
dec
(bad)
rol
ficom
cmps
popaw
adc
inc
in
(bad)
nop
cmp
push
push
(bad)
xor
sbb
xchg
fld
xchg
mov
clc
fcmove
fwait
sub
xlat
iret
iret
fwait
inc
mov
pop
mov
sbb
js
cmp
loopne
mov
mov
or
ins
pop
pop
repz
(bad)
enter
rcr
push
pop
adc
sbb
cwde
xchg
scas
ret
mov
pop
outs
out
xchg
mov
xor
push
pushf
lock
test
sub
xchg
je
xchg
pusha
call
lods
out
mov
inc
daa
pusha
(bad)
loopne
pop
outs
jnp
sbb
dec
push
sahf
sbb
mov
xor
imul
ins
repz
enter
cmp
inc
or
mov
sbb
or
pop
adc
xchg
inc
out
push
inc
xchg
(bad)
into
mov
mov
les
mov
mov
add
add
mov
enter
div
lds
pop
nop
mov
ins
movs
mov
dec
push
rol
int
pop
icebp
jb
ss
mov
adc
or
out
pop
sbb
call
shl
cmp
sub
push
lock
sub
dec
and
int
pop
test
iret
cmp
cmp
dec
lods
pusha
stos
inc
fs
pop
int3
fcom
in
aad
xor
cmc
mov
mov
ret
push
mov
in
imul
repz
rcr
push
adc
test
inc
not
xchg
and
xor
push
hlt
mov
mov
test
fndisi(8087
rcl
fidiv
loop
pop
les
xor
add
repnz
or
sbb
ret
lahf
xor
sub
fidivr
xchg
push
jmp
add
jge
pop
sbb
scas
and
mov
cmp
or
pop
pop
js
push
jecxz
add
push
inc
inc
mov
in
add
in
in
pop
mov
add
jmp
mov
mov
(bad)
lahf
push
aas
sub
xor
adc
pop
pop
dec
xchg
movs
test
imul
mov
add
in
js
inc
cmp
movs
loop
fucomip
mov
imul
call
pop
jp
jnp
leave
shl
sub
push
jb
dec
jmp
fld
xchg
mov
rol
cmp
mov
mov
pop
lods
ret
mov
xor
nop
pusha
inc
clc
push
repz
mov
xlat
(bad)
ret
lods
rcr
xor
xchg
dec
mov
xchg
fadd
out
cld
int3
lea
pop
jbe
addr16
sbb
fidivr
xchg
jb
push
fistp
(bad)
pop
test
rcl
dec
add
ss
(bad)
pop
xlat
fild
jmp
in
out
popf
inc
inc
scas
movs
dec
jae
sbb
jmp
(bad)
jmp
loopne
int
mov
retf
push
shl
xchg
push
adc
mov
and
add
leave
cmp
out
out
out
inc
ins
out
cwde
inc
xchg
dec
and
movs
or
out
sahf
lock
jp
cmps
cdq
add
sub
sub
xchg
je
mov
(bad)
mov
push
pop
or
leave
or
mov
sub
jl
pop
add
retf
cmp
daa
fisubr
cmc
ss
jmp
adc
jp
(bad)
fistp
(bad)
pop
inc
das
popf
jbe
xor
rcr
fdivr
or
popa
and
dec
push
xchg
jp
dec
clc
repnz
call
es
push
adc
or
xchg
sbb
and
sbb
cmp
clc
int3
cmps
sub
dec
iret
sbb
mov
xchg
mov
dec
dec
add
pop
popf
into
mov
sahf
sbb
adc
jl
sbb
mov
(bad)
jno
pop
inc
dec
jmp
add
jmp
retf
inc
pop
pop
cli
jo
inc
pusha
cmps
jg
mov
adc
dec
adc
mov
ja
sub
dec
pop
mov
and
fidivr
cdq
aas
hlt
sbb
xor
add
je
adc
pop
sbb
lods
dec
mov
push
sti
adc
and
sub
sub
cmp
es
mov
dec
mov
inc
rcr
or
movs
mov
xor
pop
sub
(bad)
std
cmc
pop
popa
into
push
add
in
jmp
mov
fcom
idiv
ror
mov
sub
xchg
push
mov
add
retf
lock
fbstp
lods
add
cmps
je
shr
add
mov
std
sub
lock
or
shl
sub
stc
test
cmp
sub
xor
push
out
int3
mov
adc
jns
(bad)
fcomp
std
pop
push
fcomp
cmp
add
test
jg
lods
jae
push
add
mov
scas
lds
(bad)
ins
jb
test
stos
cmp
cmp
jg
mov
mov
fldln2
mov
imul
lods
mov
mov
aam
and
mov
shr
xor
or
int3
push
xchg
adc
jmp
push
cs
pop
dec
data16
ins
push
pop
add
leave
iret
push
or
outs
xor
adc
jp
mov
xchg
jmp
fbld
repnz
or
or
popf
inc
dec
pop
xchg
nop
and
xchg
aad
jnp
mov
mov
xor
aam
in
pop
daa
out
out
xchg
jne
es
add
or
or
push
xor
arpl
and
fsub
repnz
outs
xchg
sahf
jmp
add
or
pushf
std
popf
ret
fimul
icebp
std
mov
(bad)
cdq
adc
mov
sub
inc
fbld
adc
bound
inc
js
in
push
mov
push
add
sbb
lods
push
shl
and
xchg
jae
dec
daa
mov
cli
sbb
nop
(bad)
push
gs
push
fbld
(bad)
push
sbb
mov
mov
ret
leave
je
sub
pop
xor
inc
fs
bnd
xchg
out
dec
cmp
ds
ss
xchg
add
fcomp
mov
dec
or
push
cli
faddp
call
mov
sub
pop
ins
sub
stos
addr16
lea
mov
loope
push
in
mov
add
pop
cmp
aas
adc
pop
mov
mov
(bad)
jge
sbb
mov
cmp
jge
fisub
cwde
dec
dec
inc
iret
enter
rcr
pop
popa
test
add
retf
mov
and
lea
out
xor
test
inc
lock
scas
and
xlat
and
je
sbb
cmps
mov
scas
push
(bad)
test
ins
retf
movs
loop
outs
fucomi
stos
sub
mov
fadd
xchg
cmp
lock
jnp
mul
loope
mov
inc
add
popf
jl
push
dec
push
ins
lds
jl
xchg
test
ja
pushf
icebp
xchg
test
in
push
sub
jno
scas
daa
xor
mov
mov
fild
jbe
push
cdq
push
mov
ret
sbb
or
xchg
fist
adc
mov
stos
call
mov
mov
push
or
in
(bad)
lahf
in
retf
mov
jle
in
inc
pushf
add
pop
dec
dec
dec
mov
nop
mov
sub
mov
cmp
test
inc
sub
sub
int3
cmp
xchg
mov
fwait
mov
inc
in
adc
ret
sbb
ret
scas
jecxz
xor
aad
movs
xchg
cmp
adc
repz
(bad)
retf
push
add
in
into
fcmovnb
push
(bad)
cmps
int3
mov
dec
add
fcom
pop
sbb
mov
(bad)
xchg
mov
pop
in
js
xchg
ss
aad
movs
mov
shl
inc
jns
shl
stos
mov
pop
mov
(bad)
pop
test
and
pop
dec
pop
out
pushf
stos
mov
(bad)
fsubr
lods
dec
(bad)
mov
movs
push
pop
xor
cwde
push
retf
daa
and
xor
push
outs
or
jp
inc
into
popa
or
inc
and
sbb
(bad)
xor
lea
sbb
mov
push
test
loope
jl
aam
jg
pop
pop
xor
inc
icebp
hlt
push
cld
cmp
dec
jmp
inc
mov
fsubr
push
jecxz
loope
imul
hlt
aam
push
jmp
sbb
ror
add
cmp
jns
pop
sti
test
ficom
aaa
jne
aad
xor
dec
mov
mov
sub
mov
bound
mov
inc
into
inc
addr16
add
sar
pushf
dec
pop
xchg
xchg
ja
gs
mov
test
jl
adc
out
shr
pop
aaa
push
jb
pop
sub
add
mov
jmp
adc
shr
daa
cmps
test
jno
je
std
rcl
(bad)
push
aad
repz
jl
pop
push
xchg
push
xchg
daa
stc
xor
not
pop
call
dec
cli
adc
mov
xchg
jnp
inc
jns
pop
(bad)
cmp
out
int3
dec
sti
inc
xor
push
fimul
lds
movs
pop
mov
les
jbe
lock
inc
mul
in
imul
pop
cs
jecxz
jbe
pop
fwait
dec
(bad)
fdiv
je
fsubr
inc
imul
scas
push
mov
outs
into
push
retf
mov
mov
or
inc
mov
outs
push
sahf
clc
js
fwait
dec
mov
mov
ins
imul
ror
into
stos
in
cmps
pop
mov
push
scas
imul
cmp
hlt
sbb
xchg
icebp
int3
cmp
stc
mov
dec
nop
and
mov
iret
int3
pusha
add
mov
or
dec
adc
daa
es
push
inc
jbe
in
inc
movs
xor
lahf
(bad)
push
push
push
sbb
sti
movs
ja
iret
inc
pop
in
loop
mov
hlt
outs
cmps
lods
cwde
lds
popf
adc
ficom
or
sahf
or
hlt
and
xchg
xchg
mov
adc
add
push
inc
jbe
mov
and
pusha
fild
push
or
xor
push
ins
adc
mov
lea
push
jnp
lods
leave
jnp
jno
addr16
cld
xchg
fimul
fcmovne
mov
shr
movs
scas
xor
xor
push
cli
gs
mov
add
popw
iret
mov
push
sbb
xchg
outs
repnz
adc
inc
fcom
test
aaa
adc
cs
ficom
in
sar
cmps
mov
les
and
and
call
xchg
sar
jb
lods
push
popa
fisubr
cmp
not
jecxz
adc
adc
addr16
not
jecxz
mov
mov
sub
enter
push
aaa
jecxz
idiv
pusha
push
loope
sbb
cdq
ror
int
cmp
inc
into
call
ror
fist
popa
push
mov
pop
(bad)
out
cmp
int
cmp
dec
sti
shr
icebp
mov
cdq
sub
call
scas
pop
dec
cmp
push
mov
cmc
dec
ins
pop
adc
push
mov
cmp
or
popa
mov
jnp
out
adc
dec
rcl
cwde
test
cmp
lahf
ins
in
cli
inc
xor
test
retf
rol
inc
jp
adc
jecxz
adc
sbb
cdq
retf
mov
arpl
jb
pop
movs
daa
dec
fidiv
dec
aas
and
les
rcr
add
mov
inc
idiv
push
and
leave
mov
pop
or
jmp
icebp
aam
imul
fadd
push
repz
xchg
and
mov
test
add
push
pop
adc
and
xchg
fmul
push
mov
jmp
ins
(bad)
call
dec
outs
add
push
mov
cmp
jmp
pop
dec
inc
adc
int
sub
cmp
cmp
add
sbb
leave
xchg
retf
stc
cmp
lahf
mov
fidivr
aad
std
pusha
fcom
pushf
loop
js
mov
clc
cmp
inc
pop
mov
bound
in
dec
fcom
inc
cld
aaa
push
ins
xchg
inc
rcr
cmp
sub
dec
mov
push
lods
mov
push
stos
out
jg
inc
sti
mov
ins
and
add
inc
jb
pushf
cmp
jecxz
sbb
out
hlt
mov
movs
gs
idiv
mov
xchg
xchg
cwde
fsubr
cmp
mov
cmp
jecxz
rol
stos
in
cmp
sub
mov
add
and
into
frstor
sub
mov
pop
pop
ja
or
jmp
les
add
lock
xchg
push
and
jae
lods
xor
icebp
or
dec
cli
jno
sti
data16
fdiv
je
mov
mov
in
or
movs
cmp
adc
rcr
imul
out
addr16
push
outs
fwait
jnp
sbb
mov
daa
int
and
into
arpl
push
and
push
sar
pop
mov
mov
lods
fwait
sbb
pop
xchg
repnz
mov
inc
xchg
in
mov
fs
and
push
mov
nop
js
ss
mov
pop
sub
and
arpl
imul
dec
and
movs
cmps
xor
popa
out
pop
pop
es
data16
jne
cmp
mov
call
fiadd
icebp
fsub
push
dec
push
pop
in
sbb
cmp
xlat
push
(bad)
dec
mov
mov
std
je
aas
jge
push
jb
sbb
ss
inc
xor
scas
(bad)
sar
pop
mov
in
xchg
iret
jbe
add
repz
or
add
pop
int3
mov
add
push
sbb
xchg
ins
out
imul
xchg
stos
and
(bad)
sub
(bad)
ret
sub
dec
lods
icebp
mov
out
and
sub
push
aaa
or
clc
ret
enter
out
sub
icebp
retf
rcr
cli
sbb
cs
pop
cmps
(bad)
mov
call
test
push
loop
sbb
pusha
dec
stc
push
dec
pop
jo
and
inc
dec
or
mov
cwde
daa
retf
inc
xchg
ins
(bad)
not
sub
or
ficomp
(bad)
hlt
sub
js
test
xchg
sub
jmp
pop
nop
stos
lahf
pop
and
pop
jg
sbb
aad
sbb
inc
jmp
pop
data16
dec
fnsave
add
push
nop
data16
clc
adc
mov
les
in
fstp
xchg
(bad)
pop
retf
mov
clc
scas
mov
mov
outs
int
out
pop
loope
sbb
add
jb
mov
(bad)
(bad)
jns
pop
or
and
ds
mov
inc
jp
cmp
xor
btr
jecxz
dec
cmp
repnz
cld
sbb
jecxz
(bad)
cmp
test
cmp
test
mov
rol
cmp
xchg
inc
test
xor
sti
mov
jns
cmp
or
cwde
test
cmps
mov
nop
shl
rcl
push
ins
das
das
push
lods
jl
cmp
aas
jmp
mov
fld
mov
pop
(bad)
pop
les
ror
lods
stos
aas
mov
adc
push
adc
ja
and
enter
enter
mov
jmp
dec
push
test
xchg
test
cld
neg
pop
aas
ds
div
pop
push
xchg
xor
or
lds
les
shrd
jmp
gs
xchg
out
(bad)
arpl
mov
xor
push
adc
jne
adc
add
mov
jbe
aam
mov
cmp
mov
(bad)
jecxz
xchg
inc
and
add
xor
test
fcomip
pop
fisub
ja
outs
repnz
xor
retf
adc
xor
dec
xor
xchg
push
xlat
and
(bad)
mov
dec
sbb
or
sbb
dec
xor
cmc
outs
ret
sbb
and
fs
add
fbld
mov
mov
nop
lea
adc
add
adc
xchg
dec
and
dec
rcr
pop
mov
cwde
clc
or
rcl
sbb
retf
pop
out
add
push
mov
mov
arpl
aam
enter
pop
aad
xchg
data16
pop
loope
scas
pop
jecxz
aam
lods
jb
inc
dec
cmp
lods
imul
dec
mov
dec
sub
cdq
jae
mov
test
nop
fimul
shl
add
loop
not
mov
cmps
cmp
adc
add
jp
push
sbb
imul
iret
and
pop
outs
les
div
sbb
pusha
sbb
xchg
dec
xchg
fisubr
jns
fbstp
mov
sbb
xor
ror
mov
mov
jmp
cmp
add
das
loope
sub
xor
lea
jge
dec
pop
addr16
enter
dec
bound
out
add
and
mov
cmc
int
mov
fdiv
ds
or
add
add
push
xor
jbe
push
neg
inc
adc
retf
jne
das
mov
(bad)
or
les
lahf
loop
out
jns
sub
mul
inc
add
mov
sub
xchg
cli
push
and
in
scas
aam
add
(bad)
mov
mov
out
(bad)
es
or
pop
add
sub
sub
sub
cmps
jns
lods
push
adc
jle
adc
leave
out
xchg
icebp
and
retf
fdiv
das
inc
mov
out
push
adc
fcom
cmps
mov
mov
inc
xor
mov
out
movs
movs
sub
enter
cmps
and
outs
xchg
or
mov
sbb
into
fadd
push
mov
lods
(bad)
jnp
ins
sub
dec
cwde
push
sub
jb
pop
jo
cmp
rol
(bad)
ds
loope
mov
add
jge
add
dec
sub
outs
(bad)
loopne
in
adc
gs
cmp
cs
mov
cld
pop
pop
sti
adc
shl
out
or
outs
out
push
sub
dec
sbb
call
mov
cmps
neg
fwait
xchg
and
test
and
sub
pop
enter
sbb
push
std
jl
inc
hlt
pusha
data16
xchg
mov
into
lods
adc
daa
inc
jo
cmp
sti
add
jno
inc
sti
push
mov
daa
lods
push
sub
movs
sub
adc
nop
xor
mov
mul
push
les
xor
lds
pop
adc
int3
(bad)
aad
data16
test
add
pop
std
sti
mov
or
mov
push
aaa
imul
(bad)
mov
push
adc
jno
sbb
ins
sbb
jl
imul
imul
imul
dec
push
sub
pop
push
push
push
mov
bound
cmp
mov
jmp
or
scas
and
lock
xchg
fs
xchg
loop
out
cdq
sbb
popa
pop
outs
pushf
or
call
xor
(bad)
out
push
pop
push
jae
std
in
xchg
rcr
test
arpl
push
bnd
jmp
and
rol
mov
pushf
mov
clc
cmp
mov
xchg
mov
push
data16
push
lds
cli
std
ret
xchg
cli
daa
outs
js
jns
mov
jno
mov
in
aam
xor
stos
mov
fsubr
(bad)
mov
and
(bad)
push
sub
push
stos
mov
(bad)
cmc
loope
jnp
sbb
(bad)
movs
mov
ds
push
call
nop
enter
adc
cmp
pop
sub
jmp
cmps
jl
not
ja
jl
inc
fwait
in
cmps
clc
dec
cmps
xor
sub
jmp
add
mov
mov
jle
mov
cmps
mov
shl
movs
shl
cli
(bad)
cmps
aam
dec
gs
iret
into
mov
jge
jge
adc
push
aad
mov
gs
cli
rol
push
stc
add
dec
dec
mov
and
xchg
sbb
sub
icebp
daa
or
fimul
jge
ret
mov
push
jmp
outs
inc
push
pushf
fs
int3
and
dec
or
dec
mov
mov
pop
xor
out
out
(bad)
fs
pop
fidiv
daa
fsubr
adc
cmp
loope
mov
xor
add
dec
mov
jb
daa
ss
pop
(bad)
icebp
pop
popa
cdq
inc
stos
je
cmps
jbe
icebp
out
mov
aad
jmp
jmp
cdq
inc
lock
jl
or
ins
add
sar
mov
fwait
adc
mov
clc
not
sbb
test
mov
add
test
push
inc
out
sbb
jb
xor
daa
cmp
cmovg
mov
xor
mov
push
ja
loopne
xor
fcmovu
mov
push
lods
fnstcw
movs
pop
gs
arpl
xchg
loope
cld
iret
push
fwait
xchg
xchg
add
je
into
or
sub
fisttp
xor
sub
pop
scas
repz
fidiv
jbe
push
cs
popf
int
imul
lock
stos
xchg
xchg
sbb
cmps
add
add
call
jno
mov
(bad)
xor
fadd
(bad)
jmp
out
fdivp
pusha
jnp
jge
retf
mov
sti
xchg
fwait
xchg
bound
out
mov
call
lock
daa
repz
enter
cmp
xchg
sub
mov
push
pop
cmp
lahf
add
imul
mov
dec
mov
push
pop
jge
and
mov
stc
dec
push
sbb
sbb
pop
mov
into
ja
xchg
jecxz
enter
out
mov
pop
sar
loope
je
push
sbb
addr16
je
out
in
lods
ss
pop
mov
adc
jb
and
test
jo
xlat
jle
clc
sbb
lds
jl
push
shr
imul
xchg
pop
and
push
ret
xchg
fld
cmp
dec
or
shr
xchg
pop
lds
gs
xor
xchg
xor
push
test
iret
xor
sub
mov
hlt
outs
dec
loop
add
xor
ins
stos
ret
sbb
outs
cmc
movq
cmp
inc
mov
pop
shr
mov
lods
cmp
cli
fwait
adc
xchg
arpl
or
push
ror
xchg
jle
fisttp
rol
or
adc
xchg
xchg
xchg
xchg
rcl
cmps
rol
fld
sbb
outs
test
mov
(bad)
sub
test
ds
imul
jle
ja
mov
cwde
repnz
mov
inc
mov
push
ins
add
mov
imul
jmp
jl
sbb
cmc
stos
mov
push
sbb
fs
dec
lahf
fcom
inc
or
mov
jmp
fimul
jae
rol
jns
loope
sbb
mov
ret
int
into
scas
jle
div
mov
sbb
imul
movs
test
sti
retf
xchg
pop
push
cdq
mov
mov
mov
adc
mov
popa
mov
jne
aad
or
inc
xor
pop
inc
lods
and
test
test
je
mov
cli
and
mov
inc
pop
inc
dec
jnp
jns
jge
leave
mov
bound
(bad)
daa
rcr
push
mov
sbb
mov
push
rol
push
clc
add
test
push
fldcw
add
cmps
dec
mov
push
jmp
or
adc
adc
pop
jmp
add
xor
popa
bound
test
out
ss
in
dec
call
retf
mov
xchg
xor
xor
jno
sbb
dec
in
sbb
xchg
ds
addr16
sub
pop
xchg
addr16
fidiv
fwait
lock
lods
xchg
call
mov
inc
cli
pop
cwde
cld
out
jecxz
dec
cmp
in
ins
dec
sub
iret
addr16
arpl
jp
push
push
retf
pushf
aaa
sbb
(bad)
xor
int3
jp
cdq
stc
pop
ss
stc
ins
loopne
(bad)
fmul
loope
sbb
outs
lea
sbb
adc
popa
inc
jecxz
mov
or
ss
xchg
mov
nop
aaa
mov
arpl
jae
fwait
les
test
sub
inc
add
cs
mov
retf
out
in
inc
(bad)
sub
cli
mov
mov
cvtdq2ps
push
jp
adc
data16
jne
xor
mov
push
lods
jle
pop
stos
mov
xchg
inc
push
loope
cs
mov
inc
les
mov
mov
jge
push
mov
pop
xor
cmc
xor
lahf
mov
xchg
cmp
xchg
mov
loope
mov
mov
sahf
lods
mov
add
mov
adc
mov
sti
xor
push
js
idiv
call
adc
cmp
dec
push
sub
fisttp
mov
adc
dec
add
rcl
push
and
cmp
or
fwait
push
call
xor
xchg
outs
xor
inc
data16
lea
ja
push
lods
cmp
pop
ins
xchg
inc
dec
sbb
jno
sbb
or
cwde
cld
in
pusha
(bad)
add
add
mov
jg
sub
push
nop
icebp
sub
or
or
not
gs
daa
push
push
sbb
cli
data16
jmp
pop
cwde
cld
jmp
xor
mov
call
mov
adc
mov
nop
xchg
add
inc
xchg
push
pop
inc
in
cmp
movzx
les
inc
shl
cmp
push
cmps
ret
xchg
stos
call
adc
js
pop
ret
loop
dec
mov
sbb
iret
push
jmp
push
sbb
mov
fdiv
loopne
rcr
std
or
sbb
pushf
daa
mov
and
push
jns
retf
jne
movs
cli
mov
data16
fist
and
and
mov
aam
jge
outs
test
jae
jo
add
jg
pop
inc
aas
add
cmp
cmc
pusha
fsub
frstor
jge
sbb
xor
xchg
inc
bound
push
xor
shr
iret
icebp
dec
xor
cmp
add
fs
mov
push
mov
pop
imul
enter
cmps
in
sbb
popf
mov
mov
pop
scas
mov
cmc
pop
in
and
jecxz
push
dec
xor
xchg
shl
(bad)
in
xchg
retf
sbb
jbe
mov
sar
addr16
push
mov
lahf
arpl
into
icebp
fdiv
repz
push
add
repnz
arpl
in
mov
adc
sub
ja
push
es
push
xchg
add
mov
cmove
sub
jne
jg
(bad)
enter
dec
in
push
cmc
call
jno
std
pop
dec
adc
push
pop
mov
jns
xchg
shl
fstp
jge
sahf
or
(bad)
(bad)
jmp
in
push
or
(bad)
mov
jecxz
cmps
pop
pop
retf
scas
js
and
sbb
rol
mov
or
pop
jmp
xchg
out
aaa
rcl
repnz
test
mov
dec
mov
xor
mov
leave
pop
and
mov
sub
push
aas
xor
pop
mov
push
leave
lods
or
and
xchg
jg
cdq
fwait
xchg
cli
into
out
mov
sub
(bad)
jne
cmp
or
out
ror
aas
mov
repnz
sub
mov
jo
cmovg
ins
call
mov
popf
pop
leave
setno
jns
das
and
fwait
mov
ret
icebp
test
out
push
lahf
(bad)
aas
aam
sbb
cmp
jno
call
fistp
inc
outs
sbb
push
(bad)
pop
xchg
inc
fistp
(bad)
mov
xlat
jbe
mov
movs
int3
call
xchg
shl
mov
cmp
adc
repz
clc
repz
mov
mov
xor
scas
cli
(bad)
ret
mov
jmp
std
inc
sub
dec
les
pop
sbb
mov
sbb
movs
xchg
adc
xchg
popf
aam
jb
push
(bad)
mov
mov
pop
fcom
(bad)
pop
jae
push
adc
popf
into
jp
ror
dec
pop
adc
into
add
nop
loope
add
pop
mov
pop
dec
sub
test
sub
stos
sub
push
cmp
adc
cmp
adc
dec
les
xchg
fbstp
test
and
mov
jle
into
rcr
std
mov
mov
or
add
jmp
mov
ss
lock
pop
dec
(bad)
mov
add
add
jne
call
fnstenv
loopne
fadd
xor
mov
lods
mov
mov
inc
sar
pop
out
scas
xchg
cld
loope
mov
cmp
pop
out
out
arpl
fisttp
(bad)
fist
lods
out
dec
adc
mov
int3
push
sahf
mov
dec
sub
dec
cmp
adc
mov
pop
ror
cmps
sar
xchg
nop
les
shl
lock
adc
adc
loop
rcl
bound
ss
sub
and
ret
fiadd
hlt
push
nop
mov
cmp
cmps
push
mov
mov
out
popf
mov
movs
adc
sahf
mov
retf
sbb
pusha
pop
inc
adc
mov
out
sahf
(bad)
call
loopne
rcr
cmp
push
shl
inc
xchg
clc
icebp
stos
mov
cmp
fadd
dec
mov
sar
ret
movs
mov
xchg
adc
pop
aaa
clts
xor
leave
adc
mov
jo
test
sbb
out
push
cmc
ins
jg
(bad)
sub
xor
mov
pushf
hlt
ret
and
retf
cli
sbb
mov
inc
adc
adc
mov
or
(bad)
xor
stc
xchg
fcmovnbe
lahf
adc
test
lock
fwait
push
push
pop
pop
icebp
icebp
stos
lock
hlt
mov
fidiv
inc
and
mov
cmp
aaa
sub
aaa
stos
mov
(bad)
out
add
jle
and
sti
jb
dec
es
fbstp
dec
out
and
test
sub
jns
xchg
push
in
test
inc
mov
cld
sbb
cmp
inc
jp
inc
fst
fist
nop
jp
mov
bound
in
retf
jnp
xor
sbb
mov
push
jb
stos
xor
out
dec
or
and
sub
sbb
mov
mov
pop
in
dec
sar
shl
aad
and
sub
sti
or
sub
push
sar
cmp
scas
cmp
or
inc
cs
nop
js
mov
cs
out
sub
dec
push
mov
mov
push
loopne
clc
push
xchg
sbb
outs
nop
jmp
loop
in
iret
xchg
shl
mov
xor
gs
sub
enter
(bad)
cmp
or
inc
push
leave
push
push
pop
data16
lea
iret
mov
or
sti
cmc
mov
iret
in
mov
rol
sub
mov
inc
cmp
inc
or
add
outs
inc
sahf
ds
xchg
xchg
in
cld
call
lds
xor
gs
inc
add
dec
and
fdivr
ja
xor
mov
into
cld
pop
sbb
mov
sbb
inc
aam
sbb
fild
and
fst
loopne
mov
lahf
inc
jb
ins
jbe
mov
fldcw
sub
mov
jno
inc
mov
add
pop
repz
ficom
outs
push
xchg
cmps
xor
cli
sbb
(bad)
mov
js
lods
inc
dec
retf
les
sbb
aad
int
sub
ret
sub
(bad)
push
jmp
sti
sub
add
loop
inc
xchg
rcl
or
dec
jl
aaa
scas
push
mov
xchg
inc
fistp
sub
cld
mov
jbe
sar
lock
outs
dec
sbb
mov
(bad)
lods
hlt
cmp
add
movs
out
jo
retf
add
popf
ret
ret
ins
pop
add
mov
jmp
addr16
test
sbb
cmps
adc
sbb
cmp
(bad)
dec
scas
pop
outs
add
pop
pop
int3
call
popf
add
jmp
mov
sub
and
add
mov
mov
cmp
mov
jge
pop
inc
lods
mov
mov
jecxz
or
movs
ins
in
into
mov
xchg
cmp
add
ins
fsub
mov
pop
adc
sbb
mov
or
xchg
sub
cmp
(bad)
pop
jne
mov
add
adc
xchg
xchg
out
fstp
mov
jo
cmp
lock
repnz
xchg
mov
xor
push
xlat
mov
and
icebp
adc
jnp
or
in
sub
dec
rcr
xchg
pop
dec
xchg
dec
pushf
add
jbe
enter
pop
and
dec
xchg
cmps
sub
pshufw
xor
mov
jmp
fbstp
out
(bad)
fsubr
outs
pop
nop
or
rcl
in
pop
imul
xor
retf
cmp
sbb
mov
test
lods
cmc
mov
test
dec
and
lea
push
retf
jo
loop
outs
or
ins
lds
ret
cmps
pusha
and
sbb
jmp
popa
stc
ror
mov
je
test
ja
inc
pop
test
push
sbb
wbinvd
xchg
cld
adc
loop
retf
add
repz
std
mov
fisttp
inc
fwait
ins
cmps
ja
push
cld
push
dec
out
xor
sub
dec
xor
mov
pop
xor
pop
cdq
cmp
cmp
cmp
xor
and
add
xchg
movs
(bad)
xchg
cmc
ja
push
dec
cmp
nop
gs
or
pusha
(bad)
mov
das
clc
outs
outs
jo
and
fst
(bad)
arpl
pop
inc
or
pop
test
loope
repnz
and
xor
hlt
push
pop
jae
jne
xchg
cmp
xor
rcr
mov
fstp
in
lds
scas
push
call
aas
das
lea
sub
das
(bad)
ds
and
test
test
sub
popf
stos
xchg
out
mov
daa
movs
nop
xchg
jl
cmp
cdq
movs
aam
(bad)
mov
stos
jmp
push
fxch
fnstcw
test
inc
xor
(bad)
adc
mov
xor
mov
fisub
retf
or
movs
adc
loope
mov
in
inc
and
adc
ss
sub
and
cmps
out
sub
idiv
or
push
ret
xchg
cmp
xlat
lahf
gs
pop
push
jle
sbb
retf
jne
sbb
jae
rol
xchg
push
sub
int
cmp
xchg
inc
ret
jne
adc
jnp
scas
inc
and
jno
loop
addr16
dec
and
or
sbb
gs
(bad)
adc
scas
hlt
mov
adc
out
sbb
mov
sbb
add
mov
popa
in
loop
(bad)
mov
mov
(bad)
fcmovbe
test
popf
lock
and
sub
aaa
fnsave
mov
(bad)
sbb
ror
or
or
push
mov
dec
jmp
fldenv
scas
ins
out
call
mov
(bad)
fisub
movs
xor
push
imul
stos
and
bound
jo
push
rcl
dec
sub
pusha
sbb
jno
adc
jge
sub
jne
mov
retf
sub
fs
mov
cmp
sbb
pop
call
rcr
ret
adc
jbe
ret
cld
push
rol
out
clc
mov
mov
cwde
rol
xor
sub
pusha
ins
mov
retf
lock
xor
sti
push
leave
xchg
push
neg
(bad)
cld
ins
clc
mov
jno
movs
or
xor
in
or
mov
out
scas
cwde
nop
add
ss
hlt
cmp
scas
cmps
and
mov
aas
or
sub
jle
mov
das
es
cmp
mov
mov
push
fdiv
ins
ins
mov
movs
pusha
sub
pop
mov
in
in
inc
inc
fidiv
stos
pusha
fistp
push
pop
mov
js
or
mov
or
psubq
fs
test
xor
repnz
ficomp
rcl
retf
mov
in
pop
push
xor
xor
(bad)
movs
aas
push
and
mov
pop
dec
iret
and
dec
shl
js
or
adc
jp
lahf
mov
into
xor
(bad)
cmp
jl
adc
and
jp
jmp
cmp
mov
push
sub
div
jb
jns
int
xor
jmp
push
daa
ds
and
mov
inc
ds
repz
ret
inc
jge
mov
mov
inc
mov
in
lods
xchg
and
sar
push
mov
sti
out
fld
out
pop
in
outs
seto
jmp
hlt
aam
xchg
cmp
ret
mov
sub
xchg
out
ss
cld
mov
sub
sbb
adc
nop
inc
cdq
lods
mov
mov
ror
dec
inc
add
sbb
mov
in
adc
out
jae
sahf
mov
aas
icebp
int3
add
dec
pop
inc
out
pop
cdq
mov
cmps
inc
add
sub
xchg
sub
cmc
pop
sub
inc
cmp
outs
adc
inc
dec
cmp
mov
xchg
shl
(bad)
sub
clc
std
pop
iret
loopne
xchg
cmp
not
popa
mov
lods
xchg
pop
sbb
dec
xchg
lock
ins
xor
aam
sub
shr
sti
inc
repnz
bound
pop
jl
inc
jl
movs
add
es
pop
cmp
mov
int3
fldcw
xor
pop
(bad)
shr
jmp
cmc
fwait
stc
dec
clc
push
jns
shl
in
lea
jmp
xchg
(bad)
jp
adc
loop
dec
cmc
popa
cli
inc
xchg
push
sti
fidiv
icebp
jno
add
add
cmp
out
sete
jg
mov
sub
sbb
(bad)
mov
in
dec
dec
fs
cdq
rcl
cmc
div
mov
aad
adc
das
dec
mov
mov
gs
mov
jno
ins
push
pop
gs
jns
and
and
or
cdq
add
jecxz
lahf
add
mov
jl
test
cmc
add
cmp
push
jmp
xchg
std
not
retf
and
fwait
add
out
out
fcom
xor
imul
mov
xchg
xor
sbb
inc
daa
sbb
jmp
xchg
(bad)
xor
inc
icebp
std
cmp
int3
mov
je
jns
xor
inc
dec
clc
arpl
pop
lods
popf
ds
sub
movs
sub
gs
ins
(bad)
fild
jnp
push
mov
xlat
jmp
cli
push
jle
pushf
js
lods
cld
jecxz
nop
pop
ins
and
enter
jae
or
jmp
mul
inc
mov
sbb
in
shl
pop
pop
mov
popf
dec
jp
iret
(bad)
push
sub
mov
mov
mov
sbb
mov
cmp
cli
dec
mov
jge
add
jp
gs
mov
cwde
ins
popa
cmp
lock
int3
pop
push
fstp
loopne
sbb
mov
fwait
dec
or
mov
lock
pop
out
fmul
mov
jg
xchg
pop
jnp
mov
cmp
cwde
sub
dec
xchg
nop
push
loopne
aad
pop
xchg
(bad)
mov
inc
fimul
pop
icebp
or
add
jecxz
loopne
dec
mov
(bad)
sbb
cli
inc
fisttp
jg
(bad)
loope
xchg
fisub
pop
std
repnz
or
ret
popa
sub
pop
loopne
mov
loopne
mov
add
cmc
rcr
pop
adc
fbld
pop
(bad)
lahf
jle
ucomiss
mov
cmp
adc
add
(bad)
loop
icebp
aas
ja
mov
xor
std
mov
lods
call
sahf
mov
jbe
sbb
test
aam
mul
out
or
in
sub
add
xchg
das
iret
jb
and
jae
or
mov
mov
pop
cmps
cwde
jo
mov
test
cmp
add
mov
cmp
outs
test
mov
jnp
mov
int3
cli
cmp
or
or
xchg
pop
mov
inc
mov
sub
cmp
sub
sbb
xchg
cdq
cmp
ins
dec
cmp
jl
xchg
cwde
nop
mov
icebp
scas
ins
mov
and
xor
stos
call
jle
je
inc
mov
stc
ins
xchg
dec
fsub
xchg
es
pop
ror
mov
outs
pop
ret
imul
mov
fcmovnu
mov
std
lea
mov
dec
mov
jnp
cli
addr16
stos
outs
out
cmp
gs
sbb
(bad)
mov
jo
inc
jmp
push
cdq
push
mov
fild
mov
cmc
iret
mov
add
aam
sbb
add
and
inc
hlt
popa
mov
scas
pop
enter
lock
shl
fdivr
or
pop
test
cmp
fwait
loopne
mov
push
js
jne
pusha
mov
fcmovne
mov
dec
jg
in
sub
lock
push
xlat
(bad)
in
clc
repz
xor
in
adc
pop
imul
jl
mov
or
cmp
mov
cmp
add
push
sub
lea
sbb
cmp
cmps
lahf
sub
cli
mov
test
data16
xchg
mov
test
add
inc
pop
push
mov
jmp
fnstcw
adc
adc
inc
cmp
int3
(bad)
or
movs
nop
ret
inc
ja
mov
dec
(bad)
cmp
push
fild
push
push
push
aas
jmp
pop
pushf
test
outs
test
xchg
sub
test
ins
popf
aas
adc
xchg
lods
icebp
mov
cli
popa
dec
sub
sbb
movs
mov
mov
fistp
ret
clc
mov
int
xor
inc
int
jmp
xchg
mov
je
ficomp
fcom
pop
(bad)
mov
sbb
ja
cwde
(bad)
cmc
push
dec
cmps
mov
call
pop
cmps
(bad)
retf
pop
xchg
ret
pop
(bad)
xor
or
xor
xor
push
cmps
icebp
push
mov
ins
dec
test
and
pop
scas
or
outs
or
and
jno
adc
dec
pop
mov
or
jmp
fisttp
push
dec
xor
shl
mov
data16
popa
add
inc
pushf
outs
in
mov
ins
movs
and
pop
(bad)
and
retf
call
into
shl
xchg
jae
jns
xchg
cli
pop
jae
fst
and
popf
mov
pop
add
dec
sbb
ror
jbe
xchg
push
xchg
shr
xor
inc
adc
fdivr
pop
aaa
push
add
(bad)
repnz
loope
mov
(bad)
loope
imul
pop
push
push
cdq
or
dec
addr16
outs
lods
mov
add
pop
xlat
xor
stc
mov
cmp
mov
and
sbb
jmp
std
test
sub
(bad)
lods
sub
inc
aaa
mov
jp
sahf
mov
call
jae
popa
ins
inc
in
sti
pop
sti
cmps
out
xlat
add
jae
cmovo
mul
dec
mov
xchg
xchg
ret
push
mov
daa
dec
nop
int
pop
xor
xchg
sub
fwait
out
addr16
into
pop
iret
cld
rcl
shr
test
jmp
ret
pop
mov
and
retf
push
(bad)
inc
and
push
push
sub
hlt
adc
xchg
stc
sub
gs
mov
pop
and
loopne
pop
sbb
outs
dec
and
jo
bound
sub
xchg
aad
add
jmp
xchg
mov
mov
jnp
mov
sbb
fldln2
aad
mov
jnp
enter
push
scas
sbb
out
dec
icebp
sbb
mov
or
mov
mov
lods
xchg
repnz
cmps
push
aam
sub
pushf
je
push
jnp
(bad)
repz
sahf
push
mov
out
fidiv
xlat
cs
loop
fld
and
aam
push
push
sbb
push
adc
lods
loopne
cmp
mov
stos
repnz
pop
loopne
xchg
pop
mov
and
mov
and
call
in
outs
xlat
xchg
xor
fdivr
adc
enter
xor
add
sahf
sbb
outs
rcl
adc
pop
ret
stos
add
and
xchg
loope
out
fstp
(bad)
ds
add
dec
in
jp
xor
adc
inc
mov
rcr
test
jno
xchg
(bad)
mov
push
enter
dec
xchg
lea
hlt
and
out
mov
test
daa
adc
xchg
mov
add
xor
fist
push
lahf
(bad)
mov
cmp
bnd
add
out
xchg
xor
push
mov
inc
xchg
pop
push
enter
(bad)
push
pop
lahf
gs
sbb
and
repnz
jge
inc
dec
xor
daa
sub
je
jecxz
jge
retf
shld
mov
rcr
lahf
(bad)
sub
cmp
test
sub
push
lock
sub
xor
dec
fist
test
mov
dec
gs
fcmove
pop
aam
cs
fisttp
loop
stc
in
fwait
jmp
(bad)
jge
jl
xchg
mov
sbb
mov
sub
(bad)
int
xchg
dec
xor
icebp
push
mov
pop
jo
jo
loop
stc
fild
mov
sbb
(bad)
imul
out
stos
sub
add
jmp
sbb
out
int3
or
repz
jmp
xchg
and
(bad)
fs
outs
cmp
or
imul
mov
jmp
mov
sub
push
inc
jo
fnsave
mov
leave
out
fisttp
sbb
jbe
retf
adc
cwde
fadd
lea
je
aad
mov
push
xchg
mov
sti
mov
sub
pop
pop
data16
cli
ja
fdiv
inc
mov
(bad)
aad
xor
jne
pop
xor
xadd
and
mov
fdiv
fbstp
push
inc
jl
sub
mov
test
sub
aad
std
jae
mov
cmps
dec
mov
and
out
mov
pop
xchg
repz
in
fld
ins
sti
ss
int
sbb
hlt
jle
mov
test
xchg
or
pop
pushf
fwait
mov
jle
lods
jbe
jmp
inc
aad
cwde
inc
mov
data16
mov
dec
jmp
cmc
jns
lods
out
(bad)
fs
mov
sub
xchg
data16
mov
pushf
or
aas
cdq
push
int
cli
(bad)
shl
cmps
jp
mov
jmp
jmp
sbb
out
or
fs
pop
mov
sub
cs
dec
retf
push
xlat
repz
pop
mov
lods
jp
and
and
pop
dec
es
loope
fnstenv
mov
(bad)
jmp
jmp
add
dec
mov
pop
sbb
push
sbb
add
js
les
lea
jecxz
inc
pop
(bad)
adc
call
pop
adc
sbb
test
inc
test
jbe
pop
stc
pop
mov
jae
cli
lea
outs
jns
(bad)
es
or
pop
icebp
hlt
add
mov
mov
cli
mov
inc
pop
imul
cwde
inc
and
shr
sub
mov
retf
pop
cld
jns
and
mov
pop
fistp
ins
push
dec
sub
sub
int
xor
or
mov
mov
add
scas
and
mov
and
into
out
dec
pop
pushf
dec
mov
inc
enter
fcmovb
lahf
je
pop
cmps
add
mov
clc
mov
int
movs
jae
pop
je
sub
sbb
pop
jnp
stos
icebp
pop
loop
or
cmc
dec
pop
pop
rcl
xchg
jecxz
inc
data16
pop
and
sbb
psrld
or
or
push
sti
push
xchg
arpl
ds
rol
dec
cdq
imul
popf
push
scas
inc
or
xor
test
mov
sub
cdq
add
xchg
inc
cs
cmp
aam
addr16
fsub
fnsave
push
out
pop
inc
push
out
adc
psubsw
mov
push
jl
cs
add
mov
pop
rol
push
xor
or
xchg
es
(bad)
jns
pop
popf
out
movs
fdivr
cmp
mov
pcmpgtw
xor
or
dec
adc
cmps
clc
test
pop
inc
fcomp
jmp
imul
inc
nop
adc
mov
pop
test
in
loope
cmp
and
sbb
xchg
rol
test
aas
add
loopne
inc
dec
jbe
pop
sub
cmp
cmp
pop
nop
hlt
dec
cmp
lahf
je
pop
jae
fnstcw
dec
or
and
fadd
rcr
fnstcw
in
and
add
and
and
xchg
movs
daa
adc
sbb
mov
pop
imul
jnp
add
int3
pop
retf
div
xchg
mov
push
jne
mov
imul
xor
bound
mov
jg
je
cmp
shl
jge
add
mov
es
mov
loope
push
inc
sub
push
(bad)
jmp
stc
movs
sbb
das
adc
mov
out
lea
mov
mov
push
xor
jnp
push
cmp
jbe
ds
xor
(bad)
retf
sub
loop
mov
push
imul
mov
out
out
and
test
js
bnd
push
pop
fwait
nop
inc
inc
inc
in
dec
es
jle
cmp
jmp
inc
loope
inc
cmp
mov
xchg
lock
inc
and
test
pop
stos
cmp
jmp
test
xchg
out
enter
adc
xor
call
test
cdq
jae
mov
retf
not
aam
pop
sub
push
enter
jmp
dec
punpcklwd
lds
ss
dec
mov
dec
iret
aas
in
clc
inc
mov
stos
mov
retf
and
pop
add
jecxz
imul
psllw
dec
ret
mov
loop
lods
push
push
push
lods
xor
ror
movs
pop
push
hlt
lods
nop
mov
(bad)
movs
sub
fcom
(bad)
shl
sub
out
push
adc
sub
pop
(bad)
loop
mov
inc
pop
jne
mov
dec
pop
retf
repnz
jnp
stos
inc
movs
ins
fucom
movs
(bad)
mov
(bad)
cmp
(bad)
mov
xchg
and
cmp
and
(bad)
cmc
fdivr
cmp
test
jmp
mov
sahf
es
mov
jmp
(bad)
test
add
mov
lahf
ss
and
jge
pop
xchg
or
or
stos
inc
mov
pop
cdq
add
imul
pop
pop
mul
lods
mov
xchg
out
and
adc
mov
push
jmp
xor
inc
inc
repz
xchg
dec
rol
pop
dec
(bad)
dec
and
inc
and
std
and
dec
mov
fist
push
xlat
jne
mov
and
add
add
(bad)
enter
dec
xchg
push
sub
pushf
dec
aam
pop
cmp
mov
ror
mov
cli
cmp
shl
push
outs
es
mov
xchg
in
(bad)
in
clc
pop
outs
and
inc
inc
sub
scas
sbb
push
push
(bad)
test
imul
push
das
or
dec
fs
sar
out
ja
dec
pop
jbe
sbb
sbb
std
jo
hlt
mov
movs
lods
aam
xchg
shl
or
fcmovnb
repz
(bad)
aad
(bad)
cmp
push
(bad)
sti
add
push
push
aaa
(bad)
push
popa
mov
sbb
add
and
push
pop
vpmacsdd
pop
popa
cdq
xchg
iret
in
in
cmp
and
das
pushf
pushf
sub
jo
xor
mov
sar
pop
jae
dec
sub
inc
add
sahf
and
jp
pop
sbb
mov
(bad)
call
inc
push
popa
inc
retf
loop
mov
inc
bound
movs
or
cmp
repnz
push
fldcw
or
push
mov
cmp
jns
or
cwde
adc
push
pop
pop
shr
fisubr
xor
pop
xchg
dec
sbb
pop
ficom
ins
movs
mov
jb
jg
pushf
pop
clc
fs
and
cdq
mov
sub
or
fistp
mov
jb
xor
sbb
adc
popa
arpl
mov
sbb
test
push
cmp
add
fcmove
push
das
out
mov
sub
add
rol
jno
outs
rcl
xchg
mov
ror
xchg
xor
xchg
jbe
mov
mov
outs
mov
sbb
pop
inc
or
xchg
inc
cmp
fist
stos
jge
popa
pop
movs
cmp
or
pop
icebp
xor
mov
push
and
push
imul
shr
test
shl
fistp
xchg
mov
adc
(bad)
call
dec
xor
cld
mov
xor
inc
mov
mov
(bad)
lock
ret
aad
fdivr
push
xchg
push
addr16
popa
jle
fwait
test
and
scas
leave
mov
dec
adc
push
dec
cmc
sahf
arpl
jecxz
push
jmp
jle
mov
sar
loop
inc
mov
aas
inc
imul
or
or
lods
(bad)
mov
into
fistp
test
outs
adc
dec
mov
mov
or
inc
add
ficomp
out
sahf
aas
push
les
popa
out
repz
sar
jg
mov
mov
clc
push
jecxz
mov
dec
outs
in
dec
das
daa
daa
out
das
out
cld
cmps
inc
test
outs
inc
out
(bad)
jl
mov
xchg
mov
push
adc
or
xor
imul
or
and
push
push
jno
in
push
lds
or
add
mov
gs
fmulp
push
ficom
push
cdq
jmp
push
mov
out
pop
stc
lea
fild
out
mov
dec
push
xchg
ret
pop
test
inc
inc
cmps
fimul
cmp
sti
scas
inc
or
stos
mov
ins
iret
inc
and
add
in
in
xor
shr
jne
mov
movs
mov
lods
xchg
adc
or
aam
jmp
fldl2t
fnstcw
shl
xchg
icebp
push
adc
and
pop
cmp
arpl
inc
ds
shr
sbb
in
(bad)
and
sub
dec
jecxz
jo
loop
test
dec
lock
loope
imul
pop
pop
fs
and
ss
rep
fst
mov
fstp
push
or
in
sub
mov
mov
xor
aad
aad
push
movs
(bad)
movs
mov
or
inc
push
or
nop
sub
adc
loopne
mov
popa
inc
bnd
jl
loopne
or
stos
push
cmps
mov
xchg
cmc
test
movs
jg
and
mov
lods
inc
jp
sub
(bad)
cs
mov
es
pop
pop
push
dec
xchg
ficomp
xchg
jle
lock
pop
push
push
cmps
int
jmp
ja
cwde
bound
out
pop
xor
leave
pusha
dec
movs
jge
imul
mov
stos
sbb
and
xor
cmp
jne
push
mov
or
jbe
fmulp
jmp
sbb
call
loope
inc
jnp
imul
lea
mov
aam
jmp
dec
mov
cmp
imul
icebp
cmps
imul
sub
clc
es
push
or
movs
(bad)
cdq
and
jo
or
xchg
aas
push
rcl
push
push
int3
ds
mov
mov
mov
imul
ins
inc
mov
rcr
mov
and
mov
cmps
cmp
cmc
imul
and
inc
cdq
lods
outs
lock
xchg
inc
icebp
retf
jp
mov
cld
jo
push
cmp
into
mov
imul
mov
iret
mov
inc
inc
repz
(bad)
dec
fucomp
shl
xchg
(bad)
in
or
icebp
xor
add
push
imul
fldenv
loopne
mov
in
addr16
ret
cdq
ficom
ret
push
or
xchg
cmps
jns
push
jecxz
push
mov
(bad)
sbb
xchg
ret
movs
pop
mov
xchg
cld
(bad)
inc
adc
rol
clc
lds
mov
add
xor
rol
or
sbb
inc
imul
jge
(bad)
cmps
jae
push
les
loope
in
or
pop
cmp
jo
mov
pop
mov
pop
xchg
popa
inc
mov
rcr
je
cmps
out
das
and
and
scas
rol
int
pop
jb
stos
rcr
jnp
clc
mov
mov
mov
addr16
xor
dec
cdq
pop
cmp
sbb
mov
cwde
sti
(bad)
hlt
(bad)
retf
popf
xlat
div
scas
or
lods
inc
adc
push
inc
inc
inc
movs
bound
jle
jae
jnp
xchg
push
std
mov
test
add
out
mov
imul
xchg
push
pop
jp
popf
scas
adc
fdivr
adc
and
xchg
jae
sbb
cli
out
gs
or
ins
mov
sub
das
js
jb
xor
xor
int
imul
aaa
(bad)
adc
xchg
mov
call
sub
inc
call
sbb
in
cmp
mov
xchg
adc
and
test
mov
dec
ins
add
xchg
cmps
xor
stos
ins
pop
push
jmp
outs
mov
retf
jmp
push
mov
les
mov
outs
fsubrp
pushf
dec
movs
mov
adc
std
push
loope
(bad)
arpl
neg
les
cli
mov
aas
mov
(bad)
pop
lea
xlat
popw
push
out
in
inc
popf
pop
sbb
push
sub
inc
pop
fcom
push
sahf
rol
stc
daa
mov
bound
les
pop
dec
mov
retf
into
push
outs
inc
sbb
sbb
push
fwait
inc
(bad)
sub
fsubr
mov
js
bound
inc
fbstp
pop
mov
mov
jle
mov
add
cmc
sub
push
push
repnz
or
out
cmps
jno
repnz
in
add
gs
cmp
ins
(bad)
stos
jno
inc
test
das
mov
jle
mov
repnz
sbb
rcl
jne
scas
mov
(bad)
fisub
push
mov
pusha
mov
adc
add
jne
ja
adc
cli
cmp
inc
in
sbb
mov
shl
rcr
add
and
mov
xor
mov
bound
add
jg
inc
lds
icebp
aam
cmc
cld
nop
loope
inc
arpl
dec
xchg
dec
pop
mov
mov
call
pop
sbb
pusha
out
out
push
sub
(bad)
xchg
and
lock
sub
xchg
dec
sub
mov
jbe
or
add
je
(bad)
or
push
leave
add
push
lods
mov
retf
xchg
addr16
pop
push
loopne
js
aam
sar
and
shl
xchg
lods
lods
lods
push
xor
repz
xor
add
mov
jl
push
sahf
pushf
mov
inc
je
add
add
sahf
jmp
and
adc
xchg
lods
in
stos
jnp
xor
xor
xor
fsub
inc
and
mov
mov
fist
push
mov
popa
into
repnz
mov
je
pop
(bad)
rol
xchg
pop
mov
sub
add
mov
in
push
lock
sbb
ins
rcr
pop
mov
data16
sbb
pop
bound
mov
fld
cli
jo
lds
nop
jb
add
sbb
fistp
mov
aas
cmps
push
mov
inc
jmp
out
push
dec
adc
movs
scas
(bad)
lahf
out
movs
repnz
(bad)
(bad)
jle
push
inc
fisubr
stos
sub
push
sbb
jmp
rcl
sub
and
test
cmp
cmc
mov
dec
loop
addr16
inc
test
movs
push
add
cmps
in
jmp
scas
cld
xor
movs
aas
ret
pushf
out
rcr
jmp
jp
sub
out
mov
mov
cmps
movs
cmp
movs
push
pop
test
cmc
aam
mov
mov
push
lods
fiadd
mov
sbb
aad
les
adc
aad
sub
xchg
loope
js
lods
nop
shr
cmp
add
imul
mov
outs
push
dec
mov
repnz
sbb
pop
fiadd
in
jmp
iret
mov
xchg
xor
mov
adc
push
sbb
scas
add
push
inc
add
int3
adc
adc
movs
jp
mov
mov
cmc
rcr
push
pop
or
sub
mov
sub
mov
and
add
and
stc
(bad)
int3
xor
retf
sahf
fcom
nop
movs
xchg
mov
dec
loop
int3
mov
inc
pop
xor
mov
mov
pop
loop
ret
mov
adc
gs
pop
inc
shl
pop
push
sti
enter
sub
fld
jne
lock
push
sti
loopne
mov
(bad)
pop
ins
push
rcl
call
add
lods
push
and
push
lds
clc
inc
dec
push
daa
xor
aas
pop
or
data16
mov
push
or
jno
retf
mov
adc
call
gs
shr
or
loopne
cmps
xor
and
inc
shl
sbb
pop
add
xor
mov
popa
mov
mov
mov
sbb
dec
imul
sbb
mov
cli
retf
or
jp
pushf
inc
scas
loopne
(bad)
add
xchg
adc
mov
ins
inc
fadd
cmp
mov
cmc
(bad)
mov
test
cs
add
retf
mov
add
jo
dec
sbb
aas
mov
cmps
pop
aad
adc
enter
or
nop
lods
cdq
fdivr
(bad)
enter
leave
stc
dec
sbb
pushf
pop
enter
lock
mov
nop
clc
cmp
lds
xor
mov
call
ret
aaa
mov
test
js
jae
das
jle
xor
movs
les
aam
dec
mov
ror
adc
loop
idiv
hlt
jae
lods
mov
out
xchg
mov
jmp
in
xchg
fisttp
mov
or
stc
sti
dec
mov
(bad)
push
or
nop
cmp
jbe
push
movs
and
aam
test
addr16
cli
cdq
xchg
movs
xchg
ja
cmps
adc
fidivr
jno
dec
call
mov
push
aam
jmp
retf
cdq
out
mov
sub
xor
xchg
in
xor
xor
cmc
vreducess
jne
push
dec
mov
dec
push
imul
repz
popa
jb
add
loop
xlat
ret
call
xor
sahf
test
sbb
mov
shl
xor
inc
imul
xor
lds
xor
fstp
div
cmp
aaa
frstor
fs
cmp
adc
add
lods
sbb
pop
jle
mov
test
popa
cmp
xor
jge
fild
ss
arpl
push
xchg
cdq
pop
mul
std
bound
(bad)
ret
int
push
sub
icebp
call
push
test
and
adc
fisttp
test
or
ret
clc
fsub
lea
into
mov
xchg
mov
cmp
cld
rol
movs
jbe
jae
jge
sbb
les
jg
jmp
out
outs
xchg
or
mov
dec
lods
push
scas
jnp
inc
out
jecxz
je
jbe
mov
cwde
add
inc
push
xor
ins
or
pop
mov
sub
ret
mov
sbb
inc
mov
sbb
out
stc
out
leave
mov
mov
hlt
pushf
pop
pop
daa
(bad)
cwde
sub
push
(bad)
aaa
pop
(bad)
mov
sub
imul
cmp
pop
jns
xor
sbb
aaa
(bad)
xchg
push
sbb
and
xchg
das
cmp
out
je
test
fist
popf
push
xchg
add
outs
mov
test
sbb
sar
daa
push
das
xor
dec
mov
push
cmps
and
pop
sub
popa
mov
add
lock
iret
std
(bad)
sti
jne
xor
pop
push
shl
icebp
rcl
lahf
in
inc
(bad)
xor
call
mov
mov
push
jnp
push
jmp
or
int3
mov
into
call
cmp
cmp
aas
pop
mov
jae
push
and
pop
add
in
dec
or
mov
outs
mov
push
lock
pusha
leave
(bad)
shl
and
stc
cwde
fs
lods
js
enter
pushf
enter
outs
bnd
clc
xor
je
or
xchg
mov
mov
ja
sahf
lods
jnp
(bad)
cmp
fbld
inc
inc
(bad)
push
fcomp
outs
fbstp
or
xor
mul
add
adc
mov
out
xor
and
mov
or
hlt
ja
xchg
ins
mov
mov
mov
setl
arpl
pusha
push
(bad)
(bad)
out
repnz
pop
scas
push
into
or
mov
push
or
adc
or
pop
icebp
adc
mov
mov
jle
test
xor
push
(bad)
(bad)
enter
aad
rcr
mov
adc
neg
jge
fadd
aam
in
or
mov
jo
scas
movs
and
(bad)
ficom
sahf
jb
jno
mov
inc
movs
sub
retf
das
xor
push
push
js
(bad)
push
jb
sub
js
xor
lea
cmp
idiv
js
xchg
inc
mov
popa
leave
pop
enter
push
mov
ret
or
retf
inc
stc
push
es
sbb
xchg
add
jl
push
fwait
adc
mov
xchg
jmp
sub
(bad)
out
mov
inc
lock
dec
add
dec
inc
xor
ss
mov
pusha
mov
bound
push
jno
pop
fisttp
and
pushf
test
loope
(bad)
nop
pusha
cmp
cs
cmp
fs
xor
mov
inc
in
and
mov
loope
div
ret
sub
xor
jp
in
add
sub
sub
inc
push
addr16
sbb
sbb
mov
adc
mov
mov
leave
mov
mov
xchg
mov
adc
jmp
or
call
frstor
outs
push
test
pusha
inc
mov
inc
cs
inc
mov
push
int
imul
cmp
jmp
xchg
leave
retf
dec
inc
cdq
dec
push
jae
fs
out
pushf
xchg
ss
les
(bad)
sar
push
test
pop
or
jg
lods
sbb
scas
mulps
(bad)
daa
xor
sbb
movs
jnp
fld
cmp
inc
gs
test
mov
stos
lods
ror
adc
sbb
or
(bad)
adc
push
push
xchg
in
xchg
aas
sub
arpl
add
xor
adc
sub
push
lods
cmp
ss
push
jmp
cmps
or
in
mov
movsx
popa
xor
fisubr
in
(bad)
cld
push
scas
mov
dec
cmp
mov
cmps
mov
xchg
mov
and
out
fwait
and
out
inc
adc
sub
es
lds
pusha
xchg
adc
int
out
jp
sub
xor
inc
fdivr
jb
mov
pop
bound
mov
icebp
jge
lea
call
fwait
std
ds
lods
pop
sub
addr16
adc
adc
jno
jl
je
xor
retf
xchg
jecxz
cdq
or
fcmovnb
dec
lahf
dec
mov
scas
inc
fild
rcr
cmp
or
pop
pop
inc
sar
cmps
sub
jb
jmp
jl
dec
push
loop
or
retf
mov
add
sub
clc
dec
add
in
jbe
push
(bad)
and
inc
inc
in
lods
call
pop
xchg
lahf
cli
mov
arpl
sar
inc
shr
mov
test
ror
sub
in
cwde
inc
add
inc
and
and
jnp
xchg
jp
pop
and
pop
outs
lock
sub
cmc
add
outs
int
or
adc
ret
sbb
repnz
add
add
cwde
pushf
stos
cmp
push
jmp
lods
shr
outs
pop
push
sub
sub
sub
pop
push
hlt
sbb
lods
arpl
sbb
cdq
lds
pop
leave
fwait
add
mov
pop
xchg
or
cmp
cmp
inc
call
xchg
retf
add
pusha
mov
int3
jae
repnz
push
mov
pop
fistp
push
cmp
adc
int3
imul
mov
mov
aas
mov
shl
popf
or
retf
push
ins
aad
popf
xor
je
outs
mov
fadd
dec
xchg
test
mov
imul
adc
cmp
sbb
in
sub
inc
dec
dec
or
data16
inc
loopne
push
mov
jmp
out
jmp
test
jo
push
cmps
adc
es
sub
xchg
push
fisttp
or
xchg
ror
lock
pop
loop
jbe
push
popa
sbb
pop
aam
je
adc
pop
or
int
out
cli
in
es
pusha
push
iret
sub
push
retf
mov
push
or
inc
push
pop
dec
cs
inc
pop
sbb
or
gs
int
movs
clc
push
lahf
arpl
add
adc
in
stc
dec
loop
adc
(bad)
fnstsw
rol
aas
mov
lea
fst
sbb
mov
xor
xchg
sub
aas
or
xchg
cmp
mov
loop
ret
fbstp
int3
mov
scas
mov
sbb
add
jae
jmp
add
cmp
je
jecxz
enter
inc
lock
fsub
lods
add
imul
push
ret
popf
int3
inc
jb
jne
retf
sub
inc
scas
shl
push
push
mov
mov
cmc
inc
pop
push
and
mov
or
(bad)
nop
popa
jge
mov
jecxz
add
jnp
mov
(bad)
popf
shl
xchg
mov
mov
lea
and
mov
mov
outs
(bad)
mov
push
idiv
popf
dec
push
push
push
js
loopne
push
iret
call
fwait
call
mov
mov
or
dec
call
pop
outs
xchg
pop
bound
jo
pop
xlat
mov
icebp
and
into
rcr
dec
(bad)
xor
cdq
ins
fdivr
ins
cmc
or
inc
adc
in
sub
pusha
sub
jecxz
sub
inc
fild
inc
mov
(bad)
nop
and
mov
push
aas
mov
stos
icebp
shl
cmp
fisub
sahf
dec
mov
mov
push
jecxz
(bad)
fstp
pushf
fbstp
jno
rcr
or
and
sahf
adc
(bad)
cmp
push
cmp
pop
js
loop
imul
scas
mov
es
mov
xor
(bad)
jae
inc
inc
push
(bad)
pop
jmp
arpl
movs
cmp
xor
push
jno
xchg
pop
sub
into
cmp
je
repnz
jge
or
int
clc
(bad)
test
pop
inc
(bad)
push
mul
jno
fnstenv
std
xchg
and
jbe
scas
cmp
inc
add
push
popf
inc
shl
int3
add
loop
movs
xor
cs
and
push
sub
inc
test
imul
push
loop
add
dec
add
dec
adc
pop
mov
jns
mov
add
xor
sbb
push
sub
adc
fistp
outs
ins
imul
adc
push
mov
inc
retf
out
cmps
sahf
test
sub
xchg
stc
push
pop
xchg
cmps
fst
stc
dec
inc
pop
xor
into
fbld
(bad)
shr
jbe
cmp
xchg
(bad)
sub
fdivr
pop
ins
jmp
movs
fcomp
jmp
or
cmps
jp
mov
inc
mov
sbb
adc
lds
cmps
lea
movs
outs
(bad)
mov
dec
cmp
mov
dec
jg
imul
xor
mov
jle
std
movs
push
repz
dec
cmp
mov
and
add
imul
or
ss
ret
xlat
jne
push
repz
test
push
sub
arpl
push
test
jg
push
and
ret
popa
mov
aas
sbb
or
fs
mov
gs
push
out
mov
int3
hlt
ins
jge
in
bound
pop
dec
jg
cmp
mov
jecxz
and
out
jb
(bad)
xchg
dec
adc
add
cmp
cmp
lahf
je
dec
int
mov
sbb
xchg
cdq
adc
(bad)
sbb
loopne
inc
js
lock
(bad)
fldenv
rol
pop
and
cld
in
inc
clc
aam
fdiv
sar
je
sbb
inc
mov
dec
or
sbb
dec
sahf
arpl
mov
push
xor
cmps
jg
ret
mov
xchg
fsub
fld
xchg
mov
ja
fcomip
or
jg
adc
push
jo
mov
push
sbb
jp
and
push
stc
ja
das
(bad)
out
loop
sub
nop
nop
fs
mov
outs
xchg
lock
mov
fild
cmp
sahf
add
sub
je
popa
and
test
inc
retf
inc
js
or
inc
scas
int
stos
mov
mov
fisubr
lods
push
or
(bad)
ja
daa
popf
ins
data16
push
cdq
push
push
and
xchg
ja
shl
jo
(bad)
fst
or
and
pop
imul
shr
sbb
gs
nop
imul
out
adc
inc
movs
jno
xchg
push
cmps
jl
rol
sub
jmp
inc
add
inc
and
pop
fxch
mov
mov
sub
xor
scas
repz
iret
repz
mov
push
push
jle
sub
inc
xchg
mov
ds
gs
add
cmp
call
div
in
mov
fwait
(bad)
xor
test
add
iret
jecxz
in
fisub
(bad)
loopne
fistp
nop
js
xor
xchg
repz
lds
inc
xchg
pop
in
je
pop
in
jmp
dec
pop
ret
stc
test
sbb
xor
jae
call
shl
lods
add
(bad)
sbb
xchg
arpl
mov
popa
outs
xchg
dec
mov
nop
test
push
retf
ins
mov
sub
pop
pop
fdiv
mov
add
iret
scas
push
cld
pusha
sbb
mov
sbb
aad
push
fild
aaa
mov
fsub
(bad)
aas
mov
fsubp
outs
ins
inc
mov
jp
mov
sub
ss
ja
aad
scas
or
retf
rcr
daa
xor
outs
jb
sub
mov
outs
sub
test
fcmovnb
inc
adc
sbb
adc
mov
pop
outs
mov
jbe
add
mov
mov
aam
imul
dec
in
test
stc
mov
cmp
mov
aam
je
push
ja
in
mov
je
fwait
movs
mov
jmp
fdivp
push
adc
dec
pusha
jo
out
adc
mov
xor
outs
js
fs
jns
push
cmp
cs
inc
cmp
xor
retf
retf
push
scas
sbb
mov
adc
mov
fldenv
xchg
aas
mov
outs
sbb
sbb
out
and
dec
(bad)
pop
jno
jae
add
push
add
gs
mov
cli
mov
mov
imul
fnstcw
mov
xchg
mov
shl
fs
out
jno
cld
dec
test
sub
cmp
cmp
and
ja
xchg
retf
xlat
ins
lods
jg
pop
bound
repz
je
movs
fist
push
mov
out
jge
push
int
xchg
fldcw
js
or
fld
and
add
in
jae
sbb
mov
sbb
hlt
pushf
outs
push
lahf
xor
adc
mov
pushf
pop
mov
lahf
add
les
lods
push
xor
psubw
and
(bad)
rcr
pop
pop
or
sub
sbb
jmp
xchg
jg
dec
shl
fldenv
xchg
inc
jnp
pop
jns
leave
mov
gs
int
mov
stos
(bad)
xor
sbb
jae
ret
mov
inc
popa
mov
sbb
mov
dec
repz
push
cmc
or
mov
leave
addr16
retf
arpl
call
dec
lock
jae
push
nop
inc
add
mov
ins
mov
out
sub
and
rcr
daa
push
push
xor
or
dec
sub
test
sbb
mov
popa
mov
xor
jae
dec
(bad)
icebp
(bad)
cmp
xchg
into
add
out
rcr
rcr
or
scas
pop
loopne
(bad)
in
mov
mov
daa
push
jb
rol
retf
cmp
pop
pop
jne
sub
(bad)
(bad)
ins
test
dec
call
adc
sbb
pop
ss
repz
mov
and
ret
mul
dec
jno
adc
adc
cmp
lahf
push
cmp
jp
sbb
out
jecxz
cmc
mov
adc
ja
std
pop
xor
xchg
jne
call
sbb
bound
loopne
cmc
inc
imul
js
push
push
aaa
add
sub
aas
sub
xchg
aam
adc
pushw
cmp
mov
jno
mov
loop
xchg
push
popf
inc
inc
lds
cmc
mov
std
inc
dec
nop
lds
sbb
lods
pop
(bad)
cdq
sub
pusha
xchg
pushf
mov
push
xchg
mov
dec
push
addr16
xchg
movs
jne
xchg
cs
add
xchg
dec
call
shr
push
xlat
push
xchg
cmc
push
add
cdq
add
cmp
lea
sub
scas
xor
xchg
mov
out
push
sbb
mov
pop
mov
jmp
mov
mov
xor
(bad)
sbb
dec
imul
cmp
ror
call
test
shl
popa
add
test
sbb
cmp
iret
fs
icebp
sti
retf
sbb
push
jge
ja
iret
inc
push
wbinvd
jae
mov
mov
xor
in
adc
enter
or
and
push
push
fisubr
or
stc
cwde
fsubr
hlt
xor
pop
jno
aaa
pop
push
cmc
sub
push
dec
and
lahf
fwait
sbb
and
push
shl
mov
sub
in
xor
push
mov
xchg
jo
shr
ins
mov
xchg
mov
jmp
rcr
add
sub
dec
sub
fsub
mov
pop
jmp
mov
dec
cmp
imul
xor
and
adc
pusha
dec
imul
outs
mov
add
stos
lods
out
inc
mov
inc
imul
rcl
dec
cmc
or
or
jp
fnstcw
cdq
adc
test
ins
adc
(bad)
pop
mov
shl
or
in
pop
hlt
outs
in
jb
add
popf
mov
test
jnp
and
icebp
adc
shr
sub
sti
retf
loope
retf
dec
jb
test
mov
call
adc
call
stos
fs
pop
or
cmp
xchg
mov
setp
sbb
and
out
cwde
cli
inc
out
movs
sti
jge
scas
xchg
mov
or
or
pop
jnp
fs
push
pusha
adc
mov
jne
cmp
enter
es
loopne
add
mov
inc
lock
sub
jnp
mov
dec
nop
inc
aad
lahf
lock
(bad)
dec
sar
and
push
sub
inc
int3
jge
popf
sub
scas
mov
mov
iret
cmp
scas
inc
les
retf
mov
inc
jae
stos
and
mov
and
pop
mov
fldenv
sbb
cmp
(bad)
test
cmp
mov
inc
ror
neg
fst
xchg
iret
cmps
(bad)
in
jge
xor
out
or
addr16
or
xor
jp
rcr
sbb
clc
test
jns
cwde
stos
fmul
out
push
inc
adc
addr16
xchg
inc
pop
daa
dec
icebp
ins
iret
ja
sbb
xchg
int
sub
iret
mul
je
fstp
arpl
dec
inc
xor
mov
movs
cmp
addr16
leave
push
mov
ds
xchg
test
or
(bad)
jmp
jmp
(bad)
mov
icebp
ss
sub
mov
jns
cdq
(bad)
(bad)
fidiv
and
pcmpeqd
sar
call
test
movs
add
inc
rcr
test
jg
dec
mov
mov
rol
add
fmul
cli
and
sti
inc
xchg
(bad)
(bad)
repnz
xchg
cdq
idiv
mov
push
repnz
bound
(bad)
sbb
mov
push
aas
mov
and
adc
int3
hlt
pusha
or
movs
pop
xor
test
test
mov
cmps
ja
inc
adc
or
xor
dec
fsub
sub
push
aaa
outs
adc
xchg
repnz
inc
or
push
test
clc
lods
mov
daa
mov
add
jmp
dec
fldenv
mov
loope
cmp
fdecstp
sub
dec
xchg
push
stos
mov
js
mov
(bad)
std
mov
dec
mov
xchg
out
and
jae
xchg
mov
sbb
xor
or
in
adc
cmp
pushf
mov
retf
jmp
or
(bad)
out
pushf
retf
outs
aaa
int
test
mov
lock
mov
dec
inc
dec
sub
dec
test
ror
mov
enter
pop
int3
jmp
in
fld
jge
and
data16
retf
es
lahf
jne
mov
jne
sbb
fnop
xlat
mov
fwait
xchg
lea
pop
test
mov
dec
test
leave
sub
gs
ss
pop
push
retf
mov
call
xchg
or
jecxz
xchg
push
into
push
jo
jle
sbb
rcr
dec
push
cdq
adc
gs
sub
inc
jmp
repz
rol
dec
sub
xor
jbe
cmp
xor
xor
sub
jp
dec
xchg
fwait
fs
mov
xor
jge
mov
dec
pop
test
mov
xchg
jecxz
jns
xchg
adc
int3
jnp
cmp
mov
adc
cmps
xor
or
fistp
mov
xor
jo
and
jne
mov
shl
(bad)
imul
push
mov
mov
inc
neg
and
popf
push
push
jge
lods
sar
mov
push
imul
add
sbb
pop
test
mov
fistp
(bad)
lock
lods
sub
mov
xchg
fs
inc
push
clc
ss
mov
push
push
fwait
xor
retf
retf
push
(bad)
scas
pop
mov
ror
sbb
mov
out
mov
arpl
int3
aam
sbb
cmp
cmc
call
xor
mov
lahf
rol
aas
cwde
mov
stos
rol
test
stc
and
mov
test
fistp
jb
ins
push
push
stos
pop
fnstsw
and
pop
ss
rdtsc
imul
ins
das
inc
jg
push
dec
add
bound
pushf
fnstsw
loopne
jmp
movs
or
adc
ret
nop
outs
je
mov
ret
sub
sub
jb
gs
ret
ret
push
push
and
mov
aad
or
cmps
mov
stc
scas
fld
pop
das
add
int3
leave
jbe
mov
xchg
cmp
arpl
sub
jo
enter
pop
ins
aas
movs
pop
cmp
out
lods
dec
std
es
adc
mov
xor
rcr
or
pop
mov
mov
(bad)
inc
mov
xchg
test
mov
jle
jns
fisttp
(bad)
hlt
lods
add
mov
and
fwait
(bad)
sbb
iret
pop
mov
fwait
test
into
add
test
lods
dec
lods
and
into
inc
xchg
arpl
add
pusha
push
jge
iret
jae
dec
and
(bad)
shr
stos
out
js
(bad)
push
mov
cmps
dec
or
pop
daa
jmp
mov
mov
mov
add
and
and
nop
out
hlt
sbb
movs
ss
pop
cmc
or
repz
inc
add
ins
sub
fwait
ror
into
test
dec
mov
push
sub
es
jae
xchg
call
sub
jle
out
inc
rep
sub
in
adc
sub
mov
cmp
xchg
out
xor
imul
jae
retf
sti
jmp
cmp
push
(bad)
mov
ins
mov
stc
fmul
jmp
sbb
aad
icebp
xor
or
inc
mov
(bad)
jno
out
pushf
mov
loopne
sbb
jmp
push
shl
movs
call
fwait
aas
mov
push
jmp
dec
jmp
pusha
adc
jmp
jne
and
rol
inc
adc
sbb
sub
out
leave
add
and
(bad)
xchg
cld
cwde
(bad)
jle
dec
dec
int3
jl
(bad)
mov
enter
(bad)
call
xor
add
fnstcw
adc
repnz
dec
mov
stc
mov
fsubrp
pop
push
ret
or
push
not
cmp
test
jle
pop
add
cmp
idiv
in
ret
add
idiv
push
xchg
(bad)
call
adc
pusha
addr16
(bad)
xchg
inc
pop
jmp
sbb
pop
(bad)
imul
push
push
(bad)
stos
xchg
aaa
jmp
xchg
adc
aaa
aam
int
jmp
iret
jae
lea
in
(bad)
popf
(bad)
mov
xchg
and
jb
jp
xor
xchg
pop
sti
xchg
hlt
scas
mov
push
outs
retf
add
mov
cld
sub
jg
xor
inc
movs
mov
inc
adc
mov
in
jecxz
movs
and
les
mov
loopne
mov
ret
add
out
cdq
(bad)
cmp
mov
add
inc
pop
xchg
mov
fdiv
pop
inc
fcom
xor
mov
add
test
adc
cmps
adc
pop
push
rcl
jmp
loope
cmps
adc
xor
adc
xor
or
push
and
xor
mov
cmps
mov
retf
loopne
jmp
push
clc
jmp
mov
test
cmp
test
dec
mov
or
outs
in
sti
adc
ror
ins
mov
cmp
ins
mov
add
push
js
jp
xor
sub
mov
ins
pop
jbe
repz
jbe
lods
push
shr
mov
cmp
ror
xlat
dec
sbb
pop
call
pop
mov
push
data16
sbb
add
xlat
daa
and
dec
lea
loopne
lock
jne
loopne
cli
fcom
cld
pop
cmp
(bad)
pop
mov
pop
mov
and
mov
mov
outs
imul
mov
jl
push
test
fwait
sbb
cmps
sbb
movs
loopne
pop
sahf
cmps
xlat
cmp
mov
bound
push
ins
xchg
jns
or
fsubr
addr16
icebp
mov
jecxz
sbb
(bad)
xchg
jmp
mov
cdq
jg
push
js
push
fwait
mov
jns
pop
hlt
inc
mov
hlt
and
(bad)
mov
inc
jnp
sar
mov
sub
enter
mov
jo
mov
test
(bad)
out
icebp
adc
dec
fist
jle
mov
jmp
dec
xor
aad
pop
dec
add
or
dec
mov
sbb
add
or
(bad)
shl
jmp
repnz
aas
movs
repz
push
adc
jle
inc
jge
pop
jg
push
aaa
adc
pop
xor
mov
lea
cmp
cmp
in
fnstsw
stos
inc
int
leave
xor
adc
push
mov
pusha
xor
stc
mov
pop
pop
ret
dec
cmps
inc
pop
xor
xor
cmps
(bad)
cmp
aas
int
xchg
pop
mov
fadd
xor
popf
outs
clc
popf
jne
sub
xchg
ins
cmps
aad
stos
xor
pop
fs
js
jle
(bad)
sar
mov
(bad)
mov
jl
cmp
mov
dec
pop
xor
ins
stc
gs
call
fldenv
retf
fild
xor
stc
xor
ret
dec
loope
in
cmc
sub
or
mov
mov
jo
xchg
lea
add
push
out
das
fsub
icebp
(bad)
pop
mov
sahf
aaa
js
icebp
std
mov
rcl
arpl
jns
sub
lods
int
sar
sub
jns
and
fidiv
daa
lods
call
gs
push
sbb
jb
add
cmps
sbb
adc
ror
jmp
mov
push
je
ins
sbb
push
pusha
lods
sub
xor
dec
dec
ret
lds
dec
pop
rcl
pop
std
or
sub
sbb
frstor
into
popa
fisubr
adc
jnp
adc
retf
mov
or
pop
dec
outs
lea
mov
push
scas
test
aas
fcom
and
aaa
adc
fmul
sbb
shl
(bad)
repz
in
xchg
fucomip
(bad)
mov
fimul
aaa
push
push
push
pop
sbb
adc
sbb
xlat
cld
lahf
jo
shr
fild
fadd
lds
cwde
test
push
mov
jecxz
adc
xor
movs
mov
pop
repz
call
movnti
adc
adc
inc
cwde
arpl
mov
cmp
pop
push
ins
lea
sub
sbb
jno
cmp
fadd
call
mov
call
call
test
sub
adc
mov
sub
leave
das
(bad)
out
int
jg
add
fst
(bad)
jo
jg
cmp
pop
ja
pusha
inc
pop
hlt
sub
and
push
jl
dec
outs
cli
cmps
push
mul
test
sub
sbb
scas
outs
and
popa
movs
stos
out
lods
xchg
xchg
ficom
inc
mov
pusha
and
xchg
outs
js
or
gs
lods
pop
imul
mov
cmp
fidiv
int
adc
mov
mov
stos
sbb
mov
and
jmp
adc
and
stc
jle
scas
inc
iret
aad
fadd
push
(bad)
xor
fwait
sub
fnstenv
push
mov
pop
les
cmc
bound
fmul
out
call
and
jbe
xor
outs
sahf
and
imul
aaa
shr
retf
leave
xchg
dec
or
mov
jo
cmp
add
inc
out
or
ror
popa
aas
call
jne
pop
sub
add
cld
repnz
aaa
adc
xor
adc
xor
cmp
jae
dec
in
push
fwait
pmovmskb
rcr
and
cmp
jae
leave
inc
jo
mov
inc
pusha
mov
mov
push
nop
mov
jle
sbb
push
xchg
(bad)
popa
jecxz
pop
xchg
scas
out
stos
push
pop
div
xor
cld
rol
jbe
mov
or
shl
sub
inc
dec
cmp
gs
scas
and
sbb
xchg
daa
in
jmp
stos
or
add
lea
xor
fiadd
or
inc
mov
mov
in
dec
jne
inc
bound
leave
movs
(bad)
fadd
in
mov
addr16
ds
ficom
mov
add
lods
mov
cli
jno
push
sbb
push
adc
jo
push
push
sbb
pop
pop
xor
dec
jmp
or
fldenv
sbb
xlat
inc
mov
mov
lea
push
mov
mov
cwde
arpl
cmp
sar
ds
movs
jp
ds
popa
and
fidivr
pop
or
cmp
pushf
mov
adc
jmp
rcl
mov
cmp
sbb
(bad)
not
fucomp
(bad)
sbb
mov
in
pop
adc
xor
repnz
(bad)
in
out
out
sbb
cs
pop
push
dec
arpl
fsubr
sbb
push
mov
scas
loop
xchg
lahf
sub
lds
and
inc
test
pop
movs
or
mov
fadd
icebp
inc
fwait
cmp
fiadd
push
aam
popf
sbb
and
inc
sub
mov
jno
pop
int3
call
jp
mov
cmp
cmp
mov
mov
mov
int
ja
cli
daa
sub
scas
imul
(bad)
daa
push
popa
imul
xchg
and
out
xor
hlt
in
test
in
mov
(bad)
std
ret
push
jae
mov
ss
and
push
mov
mov
xchg
leave
push
ficomp
adc
imul
jmp
mov
fnstsw
cmp
stos
aas
fnstenv
mov
scas
dec
mov
xchg
mov
pop
or
cmp
cmc
jl
jle
inc
ficom
xor
nop
sbb
sub
loope
add
hlt
movs
pop
dec
in
cmp
test
fcomp
adc
ja
sar
sbb
xor
mov
test
cmp
jmp
cmp
xchg
or
pop
cmp
int
rcr
xchg
push
repz
addr16
daa
js
sub
mov
fild
jae
lods
jmp
sub
xor
not
jb
sbb
movs
jnp
fild
inc
push
mov
iret
sbb
inc
out
cdq
data16
mov
xchg
out
daa
test
pop
and
pushf
xor
mov
fidivr
xchg
aaa
fsubr
xor
fst
ss
add
cwde
xchg
in
pusha
or
jle
add
lahf
adc
call
repz
ss
jmp
xor
ds
repnz
stc
pop
cmp
imul
ret
dec
loop
bound
cld
mov
sbb
xchg
pop
mov
fs
jecxz
dec
or
sbb
icebp
mov
and
push
sbb
les
cmps
shl
lahf
xor
ja
dec
push
push
dec
enter
dec
lahf
or
pop
jecxz
cs
xor
(bad)
repnz
idiv
xlat
add
dec
or
mov
outs
or
(bad)
stc
arpl
stc
rcr
cmps
mov
inc
mov
int3
inc
repnz
xchg
push
shl
push
push
xor
sbb
push
gs
scas
pop
fs
dec
jmp
mov
sub
jmp
repnz
cmps
mov
adc
mov
add
push
aas
ja
dec
pusha
lahf
jmp
inc
movs
scas
or
push
jnp
(bad)
out
shl
sbb
inc
pop
xor
jl
aad
sahf
rol
leave
std
lea
test
pop
jmp
bound
jg
xor
pop
or
mov
sbb
and
inc
adc
and
xor
sbb
sahf
inc
ror
or
or
bound
inc
dec
std
xchg
mov
(bad)
or
xor
icebp
(bad)
xchg
enter
mov
cwde
jg
sbb
test
xor
cmp
and
(bad)
shl
fmul
adc
add
cdq
inc
call
xchg
call
ret
popaw
inc
pop
call
outs
movs
mov
xor
fnsave
and
imul
out
jmp
aam
adc
shr
repz
push
or
xchg
mov
adc
ret
fisub
pop
inc
fsubr
imul
add
lods
adc
and
gs
jmp
jp
cld
hlt
stc
ret
sbb
ja
fsubr
call
sbb
mov
add
test
sub
cmp
ins
enter
mov
pusha
adc
mov
and
xor
jb
mov
out
aam
das
in
xchg
test
sar
retf
and
cmp
and
adc
pop
xor
das
add
repnz
add
jno
cdq
push
in
in
mov
sub
add
out
movs
mov
int3
nop
cmc
sahf
fcom
rol
cld
xor
mov
push
push
mov
and
movs
jns
dec
fs
imul
leave
retf
jg
sbb
fidivr
call
(bad)
cmp
sub
(bad)
rcr
jns
(bad)
jge
sub
imul
mov
adc
mov
jno
mov
sub
push
stos
rcr
cld
jp
test
pusha
sub
mov
lods
push
jmp
push
cli
daa
push
xchg
xor
adc
pop
pop
mov
enter
cmc
out
sbb
jge
sbb
push
xor
push
jb
ds
mov
div
pop
inc
nop
cmp
lock
sbb
shl
in
ins
xlat
std
cmps
pop
mov
pop
cmc
retf
and
jl
icebp
add
mov
aaa
rcl
and
cmp
fadd
clc
imul
leave
cmp
(bad)
fcom
mov
lea
xchg
sub
movs
in
ret
dec
dec
in
out
psubd
les
jmp
fs
enter
jb
pusha
iret
adc
dec
(bad)
jmp
sbb
push
xchg
repz
iret
jmp
cmps
or
or
fprem1
cmp
sub
xor
je
pop
dec
mov
or
arpl
adc
sbb
std
mov
retf
mov
adc
popf
jp
mov
dec
mov
push
inc
das
or
pop
sbb
fnsave
mov
sar
nop
adc
inc
pop
sub
lods
inc
or
cli
fist
into
and
push
int
xchg
or
adc
pop
pop
fist
cmp
arpl
(bad)
or
loop
retf
lahf
sbb
cmp
mov
lods
scas
xor
jg
add
mov
or
call
aam
jg
mov
outs
inc
mov
mov
sub
popa
add
loope
iret
shl
cwde
in
adc
xchg
ja
push
jae
stc
lods
xor
add
call
add
sti
(bad)
imul
xchg
ss
mov
xor
in
fldenv
gs
ficomp
fwait
retf
add
or
stos
fsub
stc
adc
xlat
(bad)
out
sahf
cmp
jp
push
fisttp
sub
retf
adc
ja
cmp
mov
inc
mov
arpl
xchg
popf
inc
sbb
(bad)
call
sub
dec
fwait
scas
xchg
add
rdmsr
sbb
aam
in
sbb
cmps
sub
mov
or
push
nop
fistp
xor
cmp
fist
pusha
fucomi
pop
push
adc
mov
add
mov
jae
retf
adc
int3
dec
outs
mov
adc
std
test
bound
nop
sub
bound
cmp
ficomp
shl
pop
hlt
push
or
pop
pop
push
sbb
mov
aad
xchg
je
lds
push
js
or
jo
or
sbb
fcom
or
aad
mov
test
in
sub
(bad)
out
call
aas
adc
in
out
retf
sub
outs
(bad)
std
vshufps
mov
mov
repnz
mov
mov
int3
sub
jmp
mov
sub
dec
mov
jg
xlat
in
fisttp
lds
add
cmp
xor
and
pop
cmp
movs
sub
push
mov
push
inc
rol
nop
into
xchg
inc
(bad)
movs
push
pop
pop
iret
mov
repz
mov
cmp
or
fistp
jo
iret
push
xor
sbb
mov
addr16
pop
dec
mov
mov
or
ret
xor
mov
cmps
cmc
or
test
jg
xor
sub
and
jge
push
aad
and
mov
jmp
cld
pop
fwait
sbb
outs
lea
mov
rol
sti
adc
movs
ret
pushf
mov
aad
dec
pop
pop
daa
(bad)
sub
mov
jl
jle
push
jmp
jmp
xor
test
shl
fisubr
mov
cmp
cmp
pop
sbb
call
fld
imul
jmp
sub
movs
outs
sbb
inc
mov
mov
cmp
loope
mov
inc
dec
jle
jb
or
sub
pop
(bad)
xchg
call
fcom
loope
gs
mov
sub
sbb
pop
jne
(bad)
push
xchg
call
add
inc
shl
or
adc
(bad)
ror
xor
in
lds
pusha
dec
lock
pop
aas
cli
mov
mov
scas
xchg
push
imul
mov
(bad)
xchg
(bad)
enter
jae
gs
ss
adc
scas
jae
push
lea
lock
loope
imul
jbe
push
pop
lock
add
stos
xor
scas
cli
scas
dec
popa
mov
xchg
les
ss
lods
out
and
nop
sbb
mov
jp
dec
mov
outs
pusha
movs
rcl
push
mov
push
dec
shl
cmp
es
test
push
in
sbb
push
das
imul
call
push
xchg
pop
jmp
int3
jne
adc
pushf
call
fdivr
inc
das
scas
xchg
add
xlat
mov
xor
jle
mov
xsha256
cmps
pop
int3
xor
lahf
fs
mov
repnz
sti
sub
jge
ret
cs
pop
add
ret
retf
shl
push
mov
xchg
lods
inc
rol
je
pop
sbb
inc
cld
xchg
or
add
out
inc
inc
ficom
push
cmp
popa
ss
cmp
pop
out
xchg
in
aas
xor
push
jg
jmp
cmp
sbb
cmp
scas
(bad)
je
pop
mov
pop
imul
mov
xchg
data16
iret
in
inc
outs
pop
dec
add
jae
inc
int3
call
cmps
xchg
loope
or
imul
in
xchg
gs
fsub
lock
dec
sar
mov
movs
sahf
fwait
cdq
dec
mov
mov
out
adc
jb
leave
mov
dec
stos
dec
gs
call
pop
mov
cmp
jnp
inc
dec
fwait
test
xchg
cmps
and
cmp
loop
js
hlt
adc
jmp
inc
sub
mov
mov
push
add
mov
adc
sbb
push
loopne
jle
mov
xor
jmp
cmp
or
dec
xor
or
addr16
movs
stc
mov
rcr
xchg
cmp
mov
jmp
or
imul
sbb
sub
xchg
inc
adc
and
jnp
out
ret
inc
inc
sbb
addr16
xor
cmp
in
mov
push
pop
shl
sbb
inc
pop
call
add
es
fisub
shl
push
push
add
addr16
jle
mov
pushf
es
pop
or
or
shr
jno
fnstcw
inc
cmps
icebp
cdq
pop
and
or
fwait
push
sbb
(bad)
in
ja
add
fiadd
inc
arpl
fwait
or
fild
pop
push
push
dec
inc
retf
inc
addr16
scas
pop
mov
jmp
add
fstp
neg
retf
popf
cmp
ds
mov
dec
xor
data16
int3
mov
mov
sub
data16
out
aaa
adc
enter
loopne
cwde
sbb
adc
int
add
sti
loope
xor
daa
fcomp
jmp
dec
adc
cmp
push
jb
jge
scas
mov
xchg
stos
test
and
inc
push
push
push
int
movs
or
jbe
push
xor
leave
fs
jne
test
mov
test
mov
out
lock
shl
clc
shr
sub
sahf
shr
sub
dec
add
xchg
fdivr
mov
retf
lods
ret
or
push
push
jmp
(bad)
cmp
dec
adc
xchg
inc
inc
xchg
xchg
sub
out
repnz
test
push
fstp
push
or
push
das
sub
xchg
lods
mov
sti
jo
and
je
mov
and
mov
lods
movs
inc
test
ficomp
call
stos
jg
cmps
jnp
push
lahf
push
sbb
dec
(bad)
sub
je
popa
jmp
std
lods
cmp
out
icebp
das
(bad)
push
mov
fs
cmp
xlat
xchg
cmp
gs
add
addr16
and
ret
mov
add
push
jnp
mov
pop
hlt
shl
mov
(bad)
stc
outs
adc
pop
adc
fcomip
jl
mov
mov
and
hlt
popa
sbb
mov
mov
or
mov
retf
shr
and
(bad)
std
sub
cmp
test
xor
sbb
push
stc
lods
aam
repz
xor
mov
arpl
loope
aad
jno
xchg
outs
frstor
adc
lock
or
cmp
call
xchg
mov
add
or
and
inc
jb
mov
and
and
push
loopne
mov
jp
sub
cmp
leave
repz
add
les
mov
iret
gs
jae
mov
lods
(bad)
mov
lahf
jb
loope
dec
retf
out
(bad)
push
cmp
fdiv
(bad)
sub
sbb
dec
mov
jge
fwait
or
mov
or
repz
int
pop
push
(bad)
idiv
or
out
push
sub
push
lock
sub
std
cwde
add
xor
(bad)
jne
in
cwde
pop
sub
retf
mov
xchg
(bad)
leave
add
mov
mov
(bad)
cmp
xor
xchg
dec
out
mov
adc
movs
push
xchg
cmp
popf
xchg
mov
int
inc
mov
dec
movs
mov
dec
cmp
push
jle
ret
loopne
sub
cmp
mov
lahf
adc
out
mov
out
mov
rol
dec
out
ss
mov
xor
sbb
cs
mov
test
sub
dec
sbb
rcl
dec
ja
in
mov
mov
cmp
and
mov
xchg
inc
pop
in
ficomp
pop
dec
mov
xlat
scas
mov
ss
ins
jmp
jmp
xchg
inc
cmps
dec
or
cmp
xor
popf
add
sti
push
iret
pop
or
icebp
aad
aaa
sbb
shr
adc
fs
into
je
je
mov
add
adc
mov
inc
mov
mov
out
mov
push
aas
jl
into
ins
mov
adc
push
jnp
mov
addr16
push
repz
jb
and
pop
sub
mov
inc
or
daa
push
gs
cmp
retf
(bad)
loopne
mov
aad
out
pop
push
mov
or
gs
sub
mov
ins
outs
xlat
adc
pusha
push
ret
mov
jae
cli
mov
cmp
push
mov
push
xchg
mov
pop
dec
cmc
mov
cmp
iret
arpl
clc
fxch
add
mov
push
cmp
mov
and
push
xchg
mov
clc
aad
cmp
popf
mov
test
imul
xlat
(bad)
test
dec
push
mov
push
test
xchg
jbe
dec
mov
stos
push
leave
fild
xchg
mov
mov
mov
es
iret
in
sbb
retf
xchg
test
sub
jns
jg
repnz
sbb
xor
jmp
dec
pop
fcmovnb
shr
jl
lods
cmp
push
lods
pmulhuw
jg
sahf
lods
jmp
mov
sbb
xchg
xor
scas
cmp
clc
test
das
mov
int3
iret
inc
xchg
out
push
out
cmp
loop
fwait
xchg
out
scas
out
inc
retf
ss
xlat
popf
mov
into
sub
sub
test
xlat
xchg
mov
sti
dec
jns
movs
mov
mov
movs
adc
adc
lea
push
repz
mov
sub
cmp
fild
lahf
add
jecxz
cmp
pop
out
fmul
jne
xacquire
adc
mov
mov
adc
sub
and
out
dec
mov
pop
adc
test
cmp
mov
popf
leave
sub
add
ds
adc
or
mov
lea
scas
ret
and
stos
cld
jne
xor
jno
fdiv
fld
xchg
and
push
ja
fld
(bad)
push
ds
arpl
sbb
lea
outs
sbb
je
ror
adc
sar
push
and
mov
repnz
jl
inc
leave
(bad)
stos
aam
cmp
mov
mov
cmp
loop
pop
mov
pop
jb
push
ret
push
sub
lds
test
(bad)
jp
pop
mov
push
lds
sub
sahf
aaa
ins
out
rcr
sbb
or
cmp
push
js
sbb
cld
mov
adc
push
push
cmp
fld
push
hlt
pop
sub
test
std
fidivr
sub
and
ret
arpl
(bad)
(bad)
dec
cs
pop
xchg
aad
out
pop
inc
xchg
and
mov
sar
sub
div
mov
test
inc
push
inc
sub
inc
push
jl
push
lea
sbb
enter
pop
fdivr
shl
out
adc
and
out
sahf
ins
mov
xchg
sub
ficom
ret
jnp
inc
inc
cld
cs
push
jge
xchg
pop
xor
adc
stos
pop
jg
xchg
pop
push
add
jp
sub
dec
call
cmps
mov
repnz
mov
jecxz
xor
xchg
xor
shl
pop
ds
sbb
sti
fs
pop
push
jecxz
jno
adc
pop
dec
pop
sub
add
sbb
add
adc
hlt
repz
test
or
and
cmp
(bad)
stos
jnp
mov
jle
dec
pushf
mov
cmp
repz
cmp
inc
inc
adc
mov
cmps
in
jecxz
mov
mov
mov
jnp
inc
and
xchg
xchg
in
dec
inc
xor
outs
inc
sbb
mov
aad
lea
push
inc
mov
xlat
daa
fidiv
dec
push
mov
stos
mov
lea
cmp
pop
loopne
add
or
out
sbb
sbb
cli
sbb
jl
add
ins
mov
adc
sbb
push
retf
xchg
sub
bound
pop
pop
lods
cmp
das
sbb
add
gs
xor
cmp
iret
mov
fistp
jns
in
rol
int
add
mov
push
jecxz
shl
lahf
(bad)
adc
jne
mov
add
lahf
out
(bad)
mov
and
mov
add
add
and
pop
(bad)
popa
jnp
dec
mov
push
add
iret
ret
(bad)
xchg
lock
test
mov
push
mov
mov
xlat
out
mov
das
sahf
jecxz
and
loopne
ficomp
sub
pop
je
mov
nop
xchg
or
xchg
fidivr
js
inc
loopne
pop
xchg
adc
data16
js
adc
mov
mov
push
fisubr
cld
lar
inc
stc
call
loop
fistp
or
loopne
hlt
push
xor
cmp
shr
cwde
sbb
mov
imul
sahf
sbb
jl
jnp
sbb
sub
jbe
sbb
push
mov
js
movs
pop
push
rcr
mov
dec
aaa
xchg
jns
sbb
adc
mov
push
xchg
jp
cmps
fiadd
cmps
neg
push
(bad)
sahf
and
pop
popa
cmp
inc
daa
in
fidiv
pop
cdq
imul
div
out
xchg
cmps
pop
clc
and
jne
ins
jle
cmp
jbe
push
cmps
xor
icebp
dec
(bad)
(bad)
push
fs
mov
out
and
add
sbb
jl
js
sbb
rol
test
push
dec
imul
repz
daa
stos
arpl
push
imul
adc
packuswb
lods
and
and
or
cld
(bad)
stos
xchg
and
aad
ret
dec
push
mov
out
es
iret
cmp
daa
sbb
jns
or
movs
test
adc
push
sbb
(bad)
out
jno
jnp
mov
in
dec
or
cli
sub
push
mov
mov
shr
cmc
pop
lods
cmp
push
lods
xchg
or
in
add
push
and
xor
xor
mov
inc
mov
mov
mov
cmp
dec
fisttp
mov
mov
mov
push
jns
(bad)
(bad)
aad
mov
lock
scas
push
push
js
sub
fisub
sub
and
pop
rol
inc
movs
adc
(bad)
test
jnp
cmp
add
test
mov
inc
xor
lds
rol
pop
fs
int3
das
mov
jmp
repnz
cwde
aaa
xor
addr16
ret
(bad)
ja
xor
fwait
xchg
ds
cmp
jae
jp
jb
mov
repnz
sub
push
in
or
pop
outs
xor
cmc
adc
push
mov
inc
scas
inc
cmp
jns
or
mov
adc
imul
adc
cs
aas
shl
mov
aam
pop
aas
rol
push
lock
out
pop
xchg
inc
out
out
adc
enter
(bad)
aaa
icebp
jecxz
cmp
std
adc
jge
adc
scas
xor
mov
pushf
inc
hlt
scas
and
mov
push
xlat
sbb
scas
repnz
cmps
into
xchg
sub
xlat
pop
gs
or
xchg
(bad)
ja
and
shl
fucomip
push
enter
mov
xor
mov
pop
cli
movs
and
in
inc
dec
pop
test
push
les
movs
mov
and
xor
mov
test
cmp
and
push
adc
or
mov
scas
mov
or
inc
xor
pop
push
pop
into
in
jne
movs
add
and
dec
cmp
add
movs
jl
fisttp
out
rcl
adc
jmp
icebp
mov
cmp
mov
mov
and
mov
mov
fld
stc
jp
sub
push
(bad)
sub
fcomp
int
cmp
mov
mov
icebp
jmp
fcom
xor
mov
into
jne
(bad)
retf
jp
xlat
pop
enter
daa
push
sahf
xchg
jl
inc
xor
or
test
dec
enter
imul
imul
jmp
rcr
mov
jl
neg
xchg
mov
iret
adc
in
pop
sbb
int
leave
movs
dec
out
mov
mov
xchg
ja
sbb
sti
les
mov
mov
shr
cmp
dec
not
pusha
cmc
mov
mov
pop
jnp
add
xchg
cmp
push
int3
sub
ins
cmps
and
popa
sbb
imul
cmc
out
mov
add
jns
xchg
dec
inc
jl
or
xchg
sub
ret
stos
mov
mov
mov
bound
xor
mov
(bad)
clc
jb
pushf
mov
data16
fadd
jae
gs
dec
xor
loopne
movs
xor
clc
push
mov
test
jne
cmp
call
mov
imul
inc
or
popf
mov
mov
adc
sub
inc
dec
jo
je
aaa
in
mov
lods
xor
dec
push
cmc
ja
sbb
scas
xchg
mov
jns
add
add
lahf
daa
out
xor
sub
sahf
pop
mov
test
fdiv
mov
mov
dec
mov
jmp
(bad)
aas
mov
iret
cmp
imul
leave
push
mov
xor
test
mov
mov
jns
lods
sahf
cmp
scas
sub
(bad)
dec
shr
jne
sub
arpl
adc
xchg
int
ror
idiv
fwait
xor
add
adc
fiadd
fmul
xor
out
xlat
inc
cld
or
xchg
dec
ret
fbld
fadd
inc
aaa
movs
in
icebp
dec
fadd
mov
mov
lods
jb
add
mov
je
outs
mov
push
push
fwait
idiv
xor
xchg
inc
cmp
loopne
adc
mov
push
dec
mov
jae
sbb
leave
into
lahf
cmp
inc
xor
inc
push
sti
addr16
mov
daa
xchg
mov
mov
retf
sub
rdmsr
xor
repnz
add
neg
cmp
(bad)
sbb
fs
inc
lock
jp
sub
add
mov
inc
lods
jbe
scas
jp
call
ret
in
inc
jb
push
mov
xchg
popf
adc
cmc
jecxz
scas
sbb
arpl
es
push
add
mov
call
stos
mov
leave
rol
jo
scas
clc
inc
int3
adc
in
outs
aad
cs
movs
data16
aam
mov
mov
pop
and
idiv
sbb
lea
fdiv
jno
test
lods
in
leave
dec
mov
retf
or
addr16
out
push
dec
mov
loop
cmps
pop
jae
clc
cli
cdq
in
lahf
dec
in
imul
lea
mov
cmps
xor
and
sar
jl
pop
push
mov
adc
in
loopne
sub
(bad)
outs
js
addr16
nop
jbe
cwde
dec
and
je
add
dec
retf
mov
xor
xchg
loopne
cmp
(bad)
bound
cld
add
in
pop
xor
xchg
mov
(bad)
inc
(bad)
out
cdq
add
inc
xor
ficom
sbb
std
call
daa
xchg
nop
sub
jecxz
clc
xor
fldenv
mov
int3
or
int3
sub
das
jl
sub
cmps
xchg
mov
pop
dec
cmp
push
shl
pusha
or
popf
dec
pusha
sub
pusha
int
sub
cdq
mov
inc
mov
mov
mov
push
cmps
push
sahf
jg
jbe
xchg
es
cmp
je
cmp
pop
sub
push
lock
movs
(bad)
idiv
fild
int3
fs
mov
shl
push
popf
les
xchg
cmp
mov
jecxz
push
in
mov
stc
pushf
and
pop
popa
mov
mov
push
mov
mov
mov
xchg
lods
xor
sub
jmp
mov
xchg
shl
mov
pop
push
test
test
sub
push
push
mov
add
imul
fsub
in
and
fstp
lea
retf
in
idiv
scas
or
ret
xlat
inc
out
leave
push
adc
in
xor
imul
arpl
cmp
mov
loopne
xchg
or
aaa
dec
dec
inc
or
loop
mov
and
out
mov
jae
mov
(bad)
xlat
dec
bound
movs
mov
clc
mov
aas
outs
xor
pop
imul
test
push
outs
cs
test
popf
add
bound
jmp
cld
mov
inc
out
cmp
cmp
mov
xchg
mov
push
movs
retf
cmc
lds
adc
and
jb
push
push
cmps
ins
stos
movs
(bad)
adc
leave
dec
sub
test
lea
inc
das
dec
jne
les
imul
cmp
std
adc
and
rol
jbe
dec
and
out
fucom
and
gs
adc
add
std
data16
push
aad
fadd
pop
fstp
sar
out
nop
adc
loopne
fcomp
inc
xchg
movs
clc
mov
sbb
push
inc
lahf
pop
mov
mov
inc
in
sahf
xchg
ret
(bad)
cmp
rcr
inc
out
mov
pop
in
or
jle
and
(bad)
std
retf
fisubr
(bad)
add
jl
xchg
jnp
jne
or
add
and
cmp
call
fs
lods
jno
jno
pop
inc
push
pop
jp
fnstcw
add
push
xlat
xor
imul
leave
inc
or
cmp
fbstp
add
add
nop
out
push
scas
mov
mov
ja
jo
and
scas
out
sbb
in
sbb
mov
jmp
int3
dec
lods
or
nop
outs
sbb
sahf
(bad)
pop
into
add
outs
(bad)
xor
mov
addr16
out
add
push
mov
pop
popf
aad
ror
test
neg
pop
scas
mov
cmp
dec
inc
loopne
ins
iret
movs
call
push
(bad)
mov
cmp
and
retf
scas
imul
add
jno
dec
enter
ins
lds
fst
dec
jle
popa
or
push
in
into
jl
mov
push
pop
in
ins
fdiv
jmp
xor
or
xlat
test
rcl
dec
pushf
xor
mov
mov
aaa
jmp
pop
add
mov
add
mov
or
jge
sahf
out
jmp
pop
mov
and
pop
or
or
xchg
cli
out
add
scas
sbb
cmp
jne
loop
cmp
mov
jmp
xor
cli
and
sbb
jecxz
cmp
xchg
sbb
mov
xchg
jge
daa
jmp
cld
ins
or
xor
test
inc
les
push
out
int
xchg
test
in
mov
jno
jbe
sub
scas
stos
pop
push
and
mov
rol
movs
pop
or
jo
inc
rcl
pop
xor
jns
push
fldcw
call
cwde
shr
aas
imul
in
adc
(bad)
cwde
stos
adc
inc
mov
aam
xor
je
pop
ins
ins
jg
pushf
dec
push
mov
inc
mov
mov
xchg
stc
stos
inc
sbb
std
pop
mov
int3
xchg
cwde
add
inc
stos
add
or
je
imul
div
mov
sbb
iret
in
pmullw
jg
dec
inc
stos
fisttp
int
loopne
aaa
aam
ja
add
ror
aad
xor
push
fild
xchg
mov
xor
jge
call
shl
or
scas
aad
out
or
inc
push
lds
push
push
out
imul
cmp
jns
or
rcr
int
arpl
mov
in
and
cmp
jge
idiv
ret
sbb
aam
fcom
cmc
jne
push
cli
pop
sti
jmp
jno
ret
push
cmc
sub
dec
adc
jne
or
pop
xchg
mov
dec
pop
ficomp
imul
out
or
popf
or
xchg
shl
lock
adc
test
or
fidiv
jge
pop
scas
cdq
pop
and
pmaxsw
xchg
adc
es
mov
mov
add
xor
loop
call
xor
les
xchg
aam
int3
mov
sbb
adc
xlat
jmp
jge
mov
fs
(bad)
fcomi
call
add
pop
jo
dec
and
or
dec
test
(bad)
ja
lock
sub
mov
pusha
mov
sbb
push
inc
fsub
jmp
repnz
jg
xchg
pop
test
push
(bad)
adc
scas
(bad)
or
(bad)
xor
cmp
shr
dec
push
(bad)
ins
add
stc
cli
stc
(bad)
fdiv
add
lea
aas
push
retf
int
push
movs
retf
ds
jge
sub
retf
pop
xchg
(bad)
cdq
mov
mov
push
std
mov
xchg
dec
in
xchg
add
and
jb
rol
test
hlt
mov
mov
jp
lods
ffreep
lods
lods
enter
sahf
xchg
jmp
or
xor
outs
loop
pop
aad
(bad)
fidiv
dec
pop
pusha
sbb
sub
mov
sbb
pop
cmps
pop
mov
mov
dec
loope
sbb
loope
push
cdq
xchg
(bad)
dec
adc
sub
lahf
call
push
daa
retf
xlat
cli
dec
pop
dec
cmps
push
rep
movs
mov
pop
dec
sbb
in
cdq
adc
sbb
inc
(bad)
inc
shr
jmp
inc
dec
and
jl
aaa
sub
inc
and
cmps
hlt
inc
jno
cmc
in
das
adc
push
sub
jne
mov
test
or
xlat
push
mov
clc
add
xchg
or
ja
mov
ficom
xchg
inc
pop
mov
push
outs
cmp
xchg
mov
ins
jnp
or
loopne
jns
push
cmp
ins
loope
out
test
sbb
test
div
scas
dec
lahf
or
jae
dec
aaa
mov
loope
pushf
and
leave
popa
or
retf
(bad)
stc
and
or
sub
dec
sahf
jmp
fimul
je
pop
push
jecxz
outs
jecxz
test
sbb
std
push
cli
hlt
adc
loopne
mov
jp
jmp
lahf
es
adc
or
push
mov
xor
or
mov
cdq
ins
cmp
test
sbb
rol
inc
jne
xor
fnstcw
jns
jmp
lods
idiv
dec
inc
in
mov
pop
into
enter
cmps
lods
icebp
jmp
xchg
mov
xor
xchg
mov
ret
xchg
ss
inc
sbb
dec
push
dec
cli
sub
shr
mov
push
adc
std
add
cmp
sbb
push
xlat
jle
add
cmp
pop
test
fld
cmp
inc
sub
xchg
dec
loopne
dec
mov
jmp
div
or
sbb
inc
add
push
sub
or
dec
call
mov
or
mov
pop
aad
lahf
clc
and
in
inc
ds
sahf
jge
cs
ds
mov
into
outs
push
ss
(bad)
(bad)
bound
cmp
xchg
das
xchg
rcr
cwde
addr16
push
inc
cmps
call
imul
mov
sbb
adc
and
sbb
dec
call
scas
dec
mov
mov
inc
ret
add
fwait
jge
icebp
ss
ja
ja
cmp
jnp
inc
adc
mov
pop
int3
or
into
ss
dec
(bad)
mov
jns
mov
pop
(bad)
mov
test
sbb
ins
xor
push
(bad)
mov
js
cmp
push
fst
pushf
push
jle
leave
fsub
xlat
ds
popf
shl
inc
and
int
cmp
mov
cdq
stos
xchg
stos
mov
or
sti
push
sbb
test
mov
jo
scas
fcmovb
movs
test
inc
fisub
data16
sbb
fld
bound
fs
mov
clc
mov
icebp
and
xchg
popa
xchg
hlt
lods
sbb
ja
cwde
icebp
xchg
push
sbb
lods
shl
test
add
pushf
xor
clc
mov
mov
xchg
adc
sub
ss
add
cmp
mov
jg
mov
push
popa
xchg
mov
push
pop
sti
jo
pushf
or
sub
adc
cwde
sbb
fstp
mov
sbb
loope
sbb
jle
cmc
retf
cmp
push
mov
jbe
and
and
xor
cli
cld
pop
pop
push
pop
mov
mov
inc
xchg
call
mov
scas
shl
not
movs
inc
hlt
or
and
in
add
and
std
bound
sbb
xlat
dec
mov
sub
test
(bad)
or
mov
and
shr
mov
sub
pop
rcl
dec
mov
leave
call
mov
and
ret
inc
cmp
add
jmp
lahf
loope
(bad)
fist
mov
add
xor
cmp
sub
(bad)
sbb
(bad)
movs
cmp
sub
jb
leave
jge
xcrypt-cfb
cmps
out
push
and
cmp
dec
adc
jae
(bad)
mov
pusha
mov
push
cmps
adc
or
sbb
pop
movs
ss
es
ss
pop
xor
push
test
jbe
push
je
in
push
mov
in
push
sub
rol
xchg
ins
dec
inc
xrelease
mov
out
push
loop
inc
pop
or
or
dec
cmp
pop
das
xor
mov
fwait
pusha
add
jge
or
pop
out
mov
lods
imul
(bad)
mov
(bad)
inc
aaa
mov
popf
cmps
mov
loopne
movs
mov
jmp
dec
or
mov
pop
cmp
xchg
or
and
mov
add
ins
int
adc
inc
stos
(bad)
pop
xchg
lods
cmp
ds
pop
push
sub
addr16
aam
inc
inc
xchg
cli
dec
mov
mov
fstp
pop
out
mov
inc
cmc
test
jae
cmp
syscall
out
and
inc
jmp
mov
hlt
inc
daa
mov
enter
pop
sbb
mov
shr
adc
ins
jecxz
aam
in
sar
pop
inc
aaa
jg
call
lea
push
dec
fs
mov
mov
stc
in
lock
fs
loopne
inc
sbb
fsubr
sbb
cmc
add
adc
test
pusha
mov
pop
mov
sub
ss
sbb
scas
push
jl
pop
icebp
jmp
cmp
out
xchg
push
cmc
mov
sar
mov
jg
pusha
push
push
xchg
or
sbb
das
cdq
pop
addr16
mov
xor
gs
push
xchg
add
mov
out
stos
cmps
xor
call
add
in
shl
stos
sbb
xchg
fild
jnp
leave
mov
push
dec
(bad)
lea
ret
and
lods
fld
call
pop
(bad)
hlt
dec
arpl
aaa
ret
int3
pop
sar
dec
dec
or
jmp
shl
movd
test
fst
nop
test
nop
or
dec
addr16
sbb
call
movs
mov
or
mov
jmp
jbe
jae
cli
dec
mov
inc
lock
xchg
mov
mov
ffree
repnz
test
pop
add
mov
les
cmps
sbb
out
(bad)
sub
mov
out
(bad)
arpl
sbb
mov
dec
inc
jb
adc
in
adc
(bad)
std
mov
ret
pop
or
rcl
test
outs
mov
xor
xchg
xor
jmp
and
shr
push
iret
lock
and
push
add
lods
bound
cs
or
push
mov
xchg
jmp
xchg
xchg
jns
xor
inc
ins
jmp
popf
arpl
mov
xchg
mov
cmp
dec
iret
retf
adc
xchg
adc
inc
xchg
mov
icebp
lock
push
mov
adc
or
gs
mov
js
sbb
push
in
push
int
stc
dec
ins
(bad)
push
mov
cwde
xchg
adc
pop
call
mov
ret
xchg
jae
pop
or
push
sbb
jbe
mov
sub
inc
aaa
xor
sbb
les
(bad)
ins
aad
fcom
ins
mov
adc
add
pop
dec
mov
lahf
and
mov
je
icebp
sbb
out
lock
stos
es
cmp
add
xor
jbe
dec
add
mov
add
(bad)
popf
push
jmp
and
adc
xlat
xor
pop
idiv
adc
push
xchg
ror
mov
in
jnp
(bad)
icebp
pop
xchg
inc
mov
dec
ja
fincstp
sub
add
mov
enter
pop
xchg
fwait
hlt
mov
cmps
scas
test
(bad)
push
dec
cs
fneni(8087
mov
sbb
out
in
sti
test
hlt
test
jmp
leave
sbb
cmp
adc
in
fist
jle
clc
xchg
or
jnp
loopne
sbb
ret
sub
popf
scas
dec
mov
out
inc
sub
jns
cmp
cmps
rol
xor
adc
cmp
add
push
mov
ret
out
adc
mov
sub
fcmovb
mov
adc
rol
pushf
(bad)
sub
push
add
cmp
jne
repnz
pop
pop
adc
gs
xchg
(bad)
pop
test
xchg
push
mov
push
pop
mov
test
sub
test
iret
cmp
mov
pop
loope
mov
ins
stos
test
movs
adc
fs
dec
push
fadd
int
inc
test
addr16
test
ret
cmps
stos
push
in
fsubr
pop
pop
lods
dec
jle
mov
add
ins
pop
adc
xor
lods
(bad)
cmp
test
xchg
fsub
dec
dec
rcl
xchg
imul
aaa
loopne
mov
nop
pop
cmps
aaa
jp
adc
cmps
xchg
fisubr
jmp
xor
jecxz
dec
sub
push
add
rol
mov
push
pop
and
movs
mov
lods
cmps
adc
xchg
pop
mov
cli
sbb
(bad)
push
lds
lds
ja
je
std
add
dec
psubw
mov
dec
stos
mov
loop
cli
lds
and
sti
sbb
nop
cs
not
jmp
in
mov
cli
mov
dec
fisub
inc
sub
inc
(bad)
daa
mov
add
fucomp
xchg
adc
ins
leave
daa
test
cmps
ss
sub
mov
sub
mov
inc
jno
jle
sub
clc
cmp
sbb
dec
xor
xchg
shl
pop
lods
aad
or
xor
imul
inc
pop
in
sub
sub
sub
lock
(bad)
cmp
and
(bad)
pop
dec
aaa
out
out
add
adc
inc
xchg
or
inc
test
dec
ds
sbb
sub
ret
sub
pop
clc
jge
sub
ja
and
fidiv
add
cmps
or
add
pop
scas
push
push
adc
sbb
push
stc
div
pop
dec
cli
popf
mov
inc
or
xor
in
adc
mov
jno
in
(bad)
mov
and
mov
jl
mov
pop
jne
enter
pop
fs
test
imul
out
popa
lds
xor
jo
or
jne
aas
pop
rcr
mov
xor
fcmove
push
xchg
call
push
push
dec
out
mov
in
cli
mov
xor
xchg
int
stos
pop
jg
xchg
or
jae
lds
xor
in
dec
add
fcomp
mov
(bad)
pop
adc
test
pusha
pop
in
rcr
fmul
call
jg
leave
pusha
cmp
add
addr16
inc
daa
pop
in
mov
pop
(bad)
xchg
push
mov
dec
vmread
cdq
or
sub
call
mov
add
and
dec
repnz
jle
mov
mov
add
adc
xor
std
inc
out
lock
sub
rcr
mov
mov
clc
mov
fxam
aad
ror
mov
jg
xchg
dec
and
jmp
mov
lods
cmp
inc
mov
pushf
push
movs
test
sub
daa
aaa
ins
adc
mov
stos
cmp
retf
pop
dec
pop
and
mov
mov
dec
sub
ficomp
int
outs
sbb
ins
enter
jmp
sub
lea
ret
adc
fidivr
adc
cdq
pop
and
cmp
ss
jno
mov
lea
cmp
sbb
aaa
mov
jg
mov
rcr
popa
xlat
int
and
mov
sbb
mov
imul
pushf
pop
xchg
in
sub
dec
jge
mov
std
xchg
sub
push
dec
clc
xor
fisubr
mov
adc
cwde
inc
arpl
adc
mov
xchg
fist
mov
cmc
add
xor
jg
scas
xchg
xchg
jp
mov
jl
push
imul
and
mov
test
jmp
push
cmp
pop
scas
jle
add
xor
cmp
push
or
pop
push
pop
cmps
aad
sub
jbe
fild
out
adc
(bad)
stos
jle
js
gs
mov
clc
xor
setg
jbe
loope
ds
add
js
loop
xchg
aaa
pushf
sub
shl
add
aad
aaa
mov
ret
jl
xor
ret
jae
inc
jle
scas
lahf
push
(bad)
ins
pop
xor
jnp
sar
call
into
or
or
or
mov
dec
adc
shld
out
cmp
adc
sbb
sub
pop
out
shld
adc
stos
xchg
cld
mov
retf
mov
rcl
inc
jmp
fiadd
lock
fsubr
dec
ret
sub
call
aaa
xchg
(bad)
inc
pop
xchg
and
xor
dec
neg
ss
aaa
mov
lock
xchg
inc
je
dec
cmp
add
jbe
jmp
in
mov
lods
jo
pusha
ss
xchg
out
adc
sbb
ror
pop
or
sub
pop
cmps
mov
jmp
pop
cld
jge
aam
mov
int3
add
out
xor
sbb
jmp
lods
test
sub
mov
xchg
sbb
jae
xchg
ffree
push
mov
data16
dec
daa
xchg
xchg
mov
retf
jmp
fwait
inc
sub
pop
in
add
dec
out
(bad)
adc
mov
pop
sbb
cmp
push
adc
retf
test
ds
adc
ja
test
sub
bound
bound
inc
and
test
dec
ja
dec
inc
adc
(bad)
push
rol
cld
and
push
stos
sub
shl
cmps
imul
imul
out
mov
lds
sbb
push
clc
std
xor
mov
pop
bound
fild
xchg
out
cli
in
es
cmps
add
jge
jns
jle
xor
push
js
js
mul
pop
xor
test
pop
add
sbb
(bad)
xor
or
jmp
mov
xchg
inc
sub
and
lods
sbb
or
dec
xor
test
jp
pop
xor
std
mov
sbb
lea
std
xor
and
fcom
push
icebp
inc
ret
mov
sbb
xchg
sub
push
iret
leave
xchg
test
jmp
int
jae
and
mov
pop
out
lahf
xor
outs
jp
push
or
pop
mov
and
adc
out
imul
mov
add
sar
xchg
jge
(bad)
outs
push
push
jg
arpl
addr16
adc
call
jmp
sbb
stos
test
or
out
add
or
(bad)
lock
inc
or
aad
xlat
ret
inc
and
mov
xor
out
or
shl
scas
jg
and
inc
test
add
xor
pop
inc
pop
adc
mov
xchg
sbb
mov
repz
sbb
mov
sti
mov
jmp
jmp
xchg
bound
adc
inc
mov
mov
jmp
(bad)
jbe
sub
repnz
test
arpl
sbb
mov
cmp
cmp
cmp
jbe
test
test
mul
sub
jle
xchg
adc
inc
out
shr
leave
push
mov
adc
add
imul
inc
test
lahf
cld
dec
hlt
pop
jb
int3
bound
sbb
push
inc
movs
and
push
es
pusha
cmp
pop
enter
mov
pop
or
xor
scas
std
jbe
add
ficom
cmp
and
sbb
shl
xor
adc
jecxz
xor
jl
outs
clc
pushf
push
jne
jmp
mov
aad
push
mov
cmp
mov
mov
xchg
push
sub
xchg
cmp
stc
mov
fucomip
push
jecxz
sbb
sub
cmp
(bad)
xchg
mov
clc
fisubr
sbb
dec
retf
push
dec
mov
cs
stc
fs
or
sub
sub
adc
inc
inc
cdq
sbb
das
scas
imul
xor
push
sub
and
xor
mov
inc
or
int
dec
mov
xor
adc
sbb
in
std
push
popf
daa
movs
shl
in
in
jo
or
scas
add
xchg
aad
nop
add
or
cmp
(bad)
gs
ret
dec
xchg
std
push
dec
mov
mov
dec
int
jecxz
push
fld
retf
push
fnstenv
in
aad
jns
div
sub
ins
movs
cmp
in
ret
pop
bound
inc
push
aaa
xlat
rol
mov
fisttp
xrelease
cmp
xor
jne
push
push
test
push
sub
loopne
arpl
lock
add
add
cmc
mov
daa
inc
mov
lods
aas
fiadd
jmp
test
lea
stc
pop
test
inc
icebp
push
xchg
jecxz
js
sub
xchg
lds
inc
dec
icebp
dec
sahf
jno
dec
jae
inc
pop
xchg
(bad)
and
and
ret
xchg
jb
push
push
jg
and
loop
pushf
gs
pop
in
popa
jbe
mov
sub
and
scas
lods
mov
xor
adc
data16
cwde
and
leave
push
pop
pop
in
cmp
jb
out
sbb
into
and
je
shl
call
xchg
adc
or
and
xchg
dec
mov
addr16
or
not
sti
cmp
jge
dec
es
push
or
dec
dec
mov
outs
rcr
les
mov
fcom
dec
and
and
popa
push
push
pop
(bad)
(bad)
jae
xor
ja
js
push
std
and
add
push
(bad)
xchg
jl
mov
or
sub
mov
xchg
sbb
sub
outs
jp
fs
fwait
shl
pop
lahf
push
sbb
dec
out
cli
xchg
addr16
es
test
sahf
mov
popf
mov
cdq
push
mov
pop
out
add
icebp
test
mov
sub
mov
xchg
pop
scas
mov
lea
fcomp
add
adc
inc
dec
bound
pop
jo
lahf
or
fldenv
daa
les
inc
out
test
aad
cmp
or
in
cmps
dec
fistp
adc
jmp
adc
mov
popf
je
push
nop
aad
mov
loope
xlat
cmp
dec
into
movs
sub
jmp
cmc
jb
(bad)
pop
inc
in
cmps
jo
xor
popf
push
loope
outs
jae
sub
call
fdivr
add
mov
addr16
retf
mov
push
into
sub
push
and
jne
sub
mov
out
jnp
mov
jno
aaa
cmp
sbb
push
xchg
jl
or
jno
add
fisub
div
jnp
jmp
mov
jg
retf
rol
scas
push
mov
add
(bad)
mov
and
test
jmp
and
popa
popa
(bad)
adc
mov
pop
shl
fisttp
push
inc
sub
jge
js
inc
mov
mov
pop
rol
fsub
aad
jnp
xor
aas
jle
bound
add
mov
dec
mov
push
sbb
je
push
ret
or
xor
jecxz
xchg
outs
dec
(bad)
mov
cmp
and
loope
ins
mov
jnp
jnp
dec
push
cmps
test
cmp
je
xchg
mov
mov
outs
fist
add
inc
mov
enter
inc
test
clc
jmp
lea
(bad)
stc
push
ja
cmp
lods
retf
(bad)
out
cmp
in
ror
mov
adc
dec
cmps
pop
cwde
retf
adc
into
mov
dec
(bad)
dec
pop
lods
out
inc
aas
cmc
ss
rol
inc
leave
mov
not
imul
ins
sbb
scas
xchg
nop
clc
repnz
in
lods
ds
inc
pushf
xor
out
push
sub
lods
xchg
sub
out
dec
rcl
mov
les
rcr
sub
call
or
mov
sub
aaa
and
mov
push
aad
fs
sub
imul
xchg
mov
pop
dec
cmps
ror
or
rcl
jb
aaa
pop
dec
repnz
xor
sahf
shl
mov
jns
addr16
and
inc
lahf
dec
retf
pop
push
hlt
inc
or
je
std
fist
in
popf
cmp
push
test
popf
aas
mov
ret
dec
mov
inc
push
push
or
push
scas
test
cmp
pop
push
loope
jbe
fwait
and
fcomp
mov
in
pandn
pop
movs
cdq
jmp
cwde
dec
stos
adc
out
(bad)
sbb
sar
ret
mov
push
shl
mov
jmp
int
or
cwde
pop
mov
jae
jb
inc
xchg
cmp
imul
mov
fstp
dec
sub
mov
cmp
push
lods
mov
and
jbe
add
loope
dec
stos
xchg
xor
repz
jmp
cmp
xor
mov
pop
mov
cwde
pop
mov
or
mov
add
(bad)
pusha
ror
pop
adc
push
aad
movs
push
(bad)
sbb
pop
lea
arpl
ror
fwait
lods
jns
or
sub
cld
fs
mov
sbb
repnz
xor
sub
(bad)
jmp
in
sub
dec
outs
sub
shl
ret
mov
mov
ret
xchg
jecxz
scas
pop
int
and
fstp
sub
mov
pop
or
retf
pop
mov
sbb
pop
call
hlt
mov
rcl
movs
clc
fcomp
scas
int
outs
xor
or
nop
popa
push
imul
cmp
pop
js
cwde
cs
sbb
dec
pop
sbb
std
lahf
arpl
inc
cmps
and
mov
cwde
inc
mov
push
xor
(bad)
dec
inc
cwde
std
push
leave
call
not
xor
push
adc
lahf
stc
movs
xchg
out
(bad)
or
idiv
cmp
jmp
xor
sbb
dec
push
xor
inc
bound
ret
outs
popf
add
scas
in
cmps
push
and
or
mul
mov
sub
xor
in
stc
sahf
(bad)
mov
pop
das
call
lock
mov
fist
imul
mov
int3
shr
adc
movs
in
repz
sub
mov
jne
sbb
bound
in
or
sub
inc
cmc
stc
cdq
push
inc
sub
inc
cmp
fstp
dec
sbb
mov
mov
sbb
dec
and
mov
sbb
cmp
xor
push
ret
mov
jae
mov
or
dec
iret
retf
sbb
(bad)
(bad)
xor
lahf
mov
cmp
cmps
popa
(bad)
add
jo
and
pop
out
or
mov
aaa
call
adc
pop
fs
test
cli
push
sub
jns
imul
std
shl
dec
rol
pushf
cmp
push
fiadd
xchg
mov
push
push
push
inc
xor
or
stos
pop
iret
or
sbb
or
call
mov
xchg
jmp
mov
mov
add
(bad)
(bad)
mov
xor
pusha
mov
or
adc
pop
add
cmc
ret
pop
sbb
icebp
imul
pop
mov
loop
xchg
pushf
and
cmp
xor
mov
sub
test
fild
xor
cmp
dec
inc
sbb
bound
dec
mov
pop
adc
or
jnp
mov
or
xor
jl
mov
sub
adc
inc
rcl
lods
pop
bound
and
(bad)
movs
fbld
es
jmp
push
ja
movs
adc
push
cmp
retf
(bad)
fnstenv
cld
sar
mov
bound
in
pop
ret
fsub
stc
jg
adc
cdq
and
retf
inc
push
gs
jne
int3
std
jmp
fcmovne
in
push
addr16
loope
(bad)
and
sti
mov
fisttp
aam
aad
shl
test
imul
and
cmp
mov
call
repnz
xchg
mov
xchg
cld
inc
adc
sbb
in
test
es
enter
es
fld
adc
cli
mov
and
add
cli
popf
aas
test
mov
jecxz
sbb
and
into
or
jge
gs
pop
and
sar
and
add
adc
mov
dec
mov
inc
mov
lock
sbb
mov
pop
test
in
ret
mov
mov
xchg
jno
stos
stc
xor
sbb
and
call
xchg
dec
mov
test
xchg
frstor
dec
mov
daa
rol
inc
into
adc
les
xchg
dec
add
(bad)
shl
pop
je
(bad)
out
aam
fisub
call
icebp
sbb
frstor
push
imul
jmp
mov
dec
dec
fstp
hlt
inc
jb
clc
push
gs
in
mov
and
fs
add
cld
fiadd
sub
add
into
pop
adc
mul
push
pop
push
or
inc
pushf
and
dec
imul
mov
cmp
adc
dec
push
cmc
repnz
ficomp
leave
mov
cmps
into
jno
pop
rcr
cmp
cwde
mov
lock
shl
(bad)
pop
repnz
out
or
cmp
dec
adc
fs
inc
out
push
jp
enter
cmp
addr16
adc
(bad)
shl
and
add
jecxz
mov
je
cdq
pusha
dec
add
sbb
inc
aas
loope
stc
lahf
(bad)
shl
call
cmps
test
sbb
adc
outs
mov
stc
sar
xor
pop
sbb
dec
mov
test
adc
inc
mov
push
inc
push
cmc
xchg
mov
push
jo
cli
jl
jl
movs
cmc
inc
cli
retf
adc
in
jl
sbb
push
inc
xchg
scas
repnz
fcmovu
push
push
push
shl
out
sub
or
mov
jnp
or
sbb
mov
xor
shl
aam
shl
stos
inc
xor
xor
dec
aad
sub
data16
imul
idiv
mov
xor
mov
stos
out
jmp
add
hlt
dec
jle
add
dec
nop
pushf
(bad)
sti
mov
in
push
xor
adc
mov
stc
jbe
rcr
inc
sbb
push
lods
fisttp
pop
xchg
mov
shl
and
ins
test
cmp
add
mov
sar
repnz
stos
aaa
sub
outs
push
add
popa
mov
mov
cli
hlt
jmp
aad
pop
and
fldcw
dec
adc
mov
(bad)
std
(bad)
std
lea
sub
xlat
pop
movs
push
(bad)
xchg
and
vorpd
mov
push
and
cmp
jge
dec
(bad)
jns
test
push
mov
leave
mov
sbb
call
push
repnz
imul
push
push
sbb
imul
mov
fs
outs
adc
pop
mov
cmps
popf
test
ficomp
ret
xchg
xor
call
sbb
scas
dec
rol
loope
call
into
ret
inc
les
mov
mov
xchg
pop
inc
jno
in
into
or
ror
or
ins
dec
inc
pop
cmp
rcr
fcom
outs
repz
or
jo
(bad)
dec
inc
push
in
jnp
xlat
push
xchg
mov
iret
adc
std
fstp
jp
jo
pop
inc
outs
push
fs
jmp
jb
cmps
test
lods
pop
or
sti
movs
aas
or
and
div
retf
ffreep
cdq
push
jo
loop
fidivr
xor
fcom
pusha
mov
add
idiv
test
xchg
dec
sbb
dec
(bad)
loopne
mov
(bad)
and
sti
(bad)
fist
repz
(bad)
ret
sub
loope
mov
daa
jae
mov
pusha
out
sbb
mov
pop
stc
sub
xchg
push
mov
in
test
fbld
inc
sub
jmp
push
das
aad
pop
(bad)
xor
or
mov
aad
add
push
jnp
cld
mov
int
dec
xchg
mov
or
dec
sahf
arpl
js
xchg
add
jns
dec
sbb
sbb
fisub
adc
icebp
movs
jmp
fist
add
ins
call
repnz
arpl
ds
dec
loope
lea
and
mov
adc
cdq
call
xor
loop
out
jbe
mov
ja
in
push
aad
jnp
js
push
dec
add
fsubr
test
adc
repz
push
add
or
cmps
sti
or
data16
push
sar
(bad)
aas
jp
mov
fild
mov
mov
xchg
dec
jl
ret
retf
xchg
pop
mov
ins
or
push
adc
std
cdq
or
and
test
pop
shl
push
inc
gs
fsub
jle
sahf
aas
cdq
pop
stos
arpl
push
xor
adc
jecxz
mov
stos
test
inc
hlt
or
idiv
scas
neg
mov
or
jbe
(bad)
mov
daa
push
push
fidivr
xlat
aam
stos
retfw
sub
popf
mov
xor
jmp
jno
cmps
lock
and
mov
fdivp
dec
rol
rcl
popf
je
clc
and
hlt
mov
xchg
mul
pusha
leave
jg
cmp
jl
or
inc
or
mov
lods
inc
cmps
clc
cmp
push
scas
repnz
ret
and
shl
mov
fwait
cmc
jmp
pop
fcomp
sbb
xor
mov
pop
mov
add
mov
and
xor
sbb
arpl
sbb
iret
repnz
and
popa
jl
xor
cmp
mov
aam
js
mov
mov
leave
retf
mov
cmp
nop
mov
popa
jecxz
mov
cmp
test
pop
and
jnp
xor
sub
and
pop
jmp
lods
out
stc
inc
cmp
jae
xchg
sbb
bound
inc
cmc
lods
and
and
mov
jmp
jmp
das
pop
adc
arpl
retf
xchg
int3
jl
das
dec
aad
cs
or
cmp
fwait
lds
test
push
or
mov
jo
pop
dec
outs
scas
mov
es
ins
xchg
test
xchg
push
sub
push
data16
mov
jecxz
std
imul
xor
dec
lods
add
arpl
dec
daa
mov
call
sbb
jle
adc
or
push
sbb
mov
mov
add
push
jp
mov
xchg
sub
and
je
add
ja
jae
sub
popa
sub
sub
cmps
push
shl
mov
inc
sti
cmps
mov
ds
add
jmp
jae
inc
mov
ss
jne
cmp
(bad)
jmp
jg
dec
mov
out
imul
cdq
xlat
lods
stos
add
cld
push
dec
and
repnz
dec
js
clc
aad
aad
fild
sub
and
and
daa
add
sar
fucomp
add
mov
into
dec
enter
repz
out
sbb
push
adc
retf
adc
dec
int3
jecxz
das
pusha
jno
ins
shl
cdq
jmp
pop
rcl
adc
add
xchg
out
and
in
loop
sar
movs
xchg
ficom
xchg
inc
ja
(bad)
sahf
pushfw
sbb
or
adc
xor
stos
jnp
mov
pop
sbb
sbb
cmp
xchg
xchg
bnd
mov
mov
repz
cli
jg
jp
outs
dec
les
icebp
sbb
addr16
mov
adc
rol
imul
cmp
and
imul
pop
outs
xlat
jle
ins
and
repnz
pop
fistp
adc
stc
and
cs
inc
mov
adc
or
pop
sub
dec
pop
rcl
adc
lods
and
adc
test
xor
and
ja
arpl
int
int3
inc
sbb
lds
shl
outs
mov
pop
pop
dec
add
pop
cmc
inc
push
sbb
aad
fiadd
sbb
retf
loopne
jmp
scas
xor
aad
push
xor
sbb
add
retf
dec
push
movs
mov
sbb
xchg
mov
or
add
sub
ja
lods
adc
addr16
and
bound
lock
cmp
push
popa
cmp
rcl
mov
aas
cmp
out
push
adc
sub
jg
neg
stc
or
adc
xchg
test
retf
aad
adc
jnp
and
dec
test
push
push
add
adc
push
lahf
outs
cmp
(bad)
dec
adc
cmps
inc
hlt
adc
out
push
cmps
fldcw
push
test
pop
push
or
out
retf
ins
mov
cmp
pop
adc
xchg
jo
fdiv
sub
mov
inc
les
aam
mov
mov
dec
out
or
add
fwait
gs
inc
cmp
push
loopne
and
add
push
jmp
xchg
cmp
popa
je
repz
retf
into
adc
movs
jae
pop
jge
ins
cwde
(bad)
mov
test
xchg
inc
xor
addr16
scas
test
mov
repz
outs
pop
dec
add
lahf
dec
cwde
cld
mov
push
xor
push
mov
fwait
dec
push
and
dec
xor
xchg
sahf
mov
je
and
add
push
inc
icebp
mov
fstp
cmps
bound
xchg
mov
cwde
cmp
mov
into
pushf
cmp
push
mov
(bad)
mov
cmp
aas
dec
xor
cmp
xchg
mov
or
xor
and
sahf
iret
xchg
mov
fist
int3
lods
sbb
repz
dec
int3
jmp
add
popa
xor
scas
mov
fisubr
inc
cmp
or
jns
xor
mul
rep
lock
outs
mov
pop
mov
push
nop
xchg
stos
jb
cdq
adc
lods
das
cmp
daa
push
sub
clc
mov
movs
push
xchg
mov
jl
in
cli
push
push
shl
or
stc
mov
call
test
fstp
sub
jmp
or
jns
scas
pop
inc
inc
dec
sbb
test
cdq
adc
popf
hlt
jnp
movs
das
retf
pop
(bad)
call
sbb
int3
std
inc
cmp
inc
and
push
popf
push
and
jbe
loopne
addr16
mov
dec
pusha
jecxz
popf
jno
ja
mov
iret
push
dec
imul
and
stos
and
rol
ss
dec
sbb
popa
dec
push
(bad)
sti
aam
mov
sbb
inc
pand
outs
mov
cmp
sub
xor
cmp
ret
test
das
ss
pop
fdivr
add
sbb
and
adc
push
mov
push
cld
rol
cli
adc
push
mov
sbb
cld
stos
mov
cmps
cmp
inc
mov
jo
cmp
pavgb
stos
fmul
jne
mov
inc
fisubr
in
jno
aad
dec
aas
push
(bad)
cmp
int3
aaa
aad
lods
jmp
adc
in
jg
int
jg
pop
mov
enter
ss
js
xor
stc
and
xchg
pop
mov
mov
popa
retf
cmp
pusha
push
seto
int
adc
clc
(bad)
pop
pop
jp
inc
into
mov
jns
int3
mov
push
pop
dec
lea
dec
jnp
lea
jmp
fadd
and
jge
push
cli
mov
mov
sub
xchg
movs
mov
push
mov
gs
or
push
mov
clc
mov
or
jmp
shr
or
movs
imul
rol
outs
dec
xchg
rol
scas
cmc
ins
xor
das
mov
pop
cmp
ins
cmp
push
popf
jo
(bad)
dec
pop
pop
into
cmps
add
rol
mov
int3
or
add
movs
jae
mov
jmp
in
gs
mov
xlat
iret
xchg
add
sub
add
out
fwait
cmp
ret
adc
addr16
ret
and
fild
jnp
fcomp
mov
sar
pop
cli
jp
test
jp
aas
and
(bad)
cld
ror
ins
ins
sbb
dec
cmp
mov
xor
shl
shr
dec
retf
aas
mov
cmp
xchg
ss
mov
xchg
xor
cwde
or
pop
loopne
or
ss
stos
cmps
sub
shr
enter
lds
sub
sub
xor
xchg
inc
push
mov
popa
sbb
dec
bnd
enter
sbb
pop
mov
call
iret
das
add
lds
ja
push
out
es
ja
ins
retf
sub
sub
push
shl
and
int3
inc
ja
gs
arpl
dec
mov
ins
fcom
or
sbb
cwde
lock
(bad)
hlt
outs
into
sete
std
aam
xlat
cld
iret
into
mov
inc
into
cmps
dec
jns
mov
(bad)
xchg
aas
mov
dec
pop
sbb
xor
adc
jne
retf
jecxz
cli
pushf
scas
div
cmps
(bad)
adc
hlt
int
jmp
jno
ins
test
dec
jl
dec
push
pushf
push
inc
add
ret
pop
jbe
mov
adc
xor
cmc
enter
push
push
jl
jo
enter
rcl
fst
mov
cdq
outs
inc
push
lods
mov
in
les
retf
stos
pop
xor
scas
les
mov
xchg
pop
sbb
dec
out
cmc
jmp
popf
lods
arpl
test
loop
test
add
lods
xchg
out
sub
xchg
mov
pop
out
ror
not
inc
lods
js
outs
xchg
xchg
out
inc
dec
push
cld
pop
fidivr
mov
cwde
hlt
push
pop
jmp
dec
xchg
xor
push
cmp
mov
push
ds
scas
inc
dec
aad
dec
adc
add
test
test
in
cwde
mov
sub
les
rcl
xor
sub
mov
ret
in
outs
mov
inc
jmp
mov
pop
stc
mov
cs
cwde
ret
cld
inc
cmp
cdq
inc
ins
rep
dec
push
add
movs
(bad)
aam
div
pop
xlat
sar
out
sar
xchg
inc
shl
push
push
jge
push
(bad)
cli
mul
add
jle
repz
std
test
adc
mov
hlt
int3
lods
out
mov
push
jmp
(bad)
adc
outs
and
into
jle
(bad)
and
cmp
push
xor
outs
(bad)
pop
push
jns
pop
loopne
ret
clc
aas
fidiv
pop
push
inc
add
xchg
inc
mov
ins
test
xor
mov
fmul
mov
add
popa
push
mov
mov
(bad)
xor
sub
int
and
ret
mov
addr16
or
sar
xchg
push
cmps
ins
std
or
stos
jecxz
mov
cmp
(bad)
dec
pushf
out
js
xor
popf
in
sub
fnstcw
stos
pop
iret
dec
push
retf
push
jmp
push
cwde
sbb
mov
movs
enter
pop
cmp
addps
mov
dec
test
stc
mov
jmp
cmps
jg
adc
xchg
xchg
adc
sbb
sub
push
pushf
mov
mov
jne
add
loopne
mov
mov
in
cmp
inc
mov
arpl
and
ret
adc
mov
ret
fdiv
adc
loop
stos
iret
or
mov
xchg
ins
(bad)
lock
sub
xor
push
inc
ret
inc
or
jg
cmc
das
or
int
mov
mov
push
or
mov
pop
inc
adc
setge
mov
pop
jmp
loopne
xchg
cmp
push
in
in
sub
shl
call
and
xchg
int3
cmp
sar
jp
shl
push
enter
push
add
mov
jno
xor
dec
jmp
push
jge
(bad)
es
sbb
cmps
mov
or
lods
add
inc
dec
jbe
enter
out
mov
add
xor
xor
loope
jno
mov
or
(bad)
cmc
shr
int3
hlt
jmp
push
push
jb
or
xchg
mov
cld
mov
or
push
push
pop
jbe
mov
inc
xor
call
xor
xchg
jnp
fldcw
nop
loop
rol
outs
jne
add
push
dec
mov
xchg
cmp
addr16
xchg
mov
mov
inc
mov
xor
jmp
mov
pop
xlat
shl
sub
xchg
inc
jnp
cmp
dec
pop
movs
adc
xchg
sub
arpl
scas
push
dec
xor
pop
add
adc
int3
daa
xor
rcl
repz
xor
mov
jne
imul
cmp
call
mov
push
pusha
hlt
jecxz
add
jno
into
cmps
inc
adc
in
mov
xor
(bad)
adc
sbb
(bad)
fidivr
adc
mov
jl
xchg
test
sbb
dec
mov
adc
data16
xor
in
xchg
sub
pop
shl
push
bound
clc
fidiv
test
jbe
fstp
mov
mov
or
mov
leave
int3
xchg
mov
jle
mov
sbb
rol
(bad)
hlt
addr16
and
and
jp
mov
push
mov
jb
repnz
shl
pop
in
and
movs
iret
jne
push
sbb
mov
mov
cmp
mov
adc
(bad)
repnz
mov
or
add
add
and
(bad)
lahf
inc
test
inc
aad
imul
sub
pop
or
push
dec
mov
out
cmp
aad
jmp
pop
xor
arpl
xor
int3
cli
and
fiadd
in
dec
cmp
mov
dec
scas
push
sahf
out
stos
clc
dec
mov
mov
mov
ror
gs
stos
out
and
sub
xor
or
call
repnz
gs
mov
ret
jp
jmp
lea
iret
sbb
sbb
mov
pmulhuw
push
push
add
(bad)
push
imul
mov
cs
stos
xchg
js
int3
not
test
dec
pop
gs
loopne
mov
aam
cmp
js
sub
push
pop
fs
or
ret
outs
stc
imul
lods
ds
and
fldenv
jmp
push
loope
jecxz
xchg
frstor
mul
femms
add
pushf
pop
push
out
ja
in
loopne
fbstp
xchg
(bad)
ja
or
or
loopne
sub
fadd
fs
shl
ds
and
or
mov
xchg
call
movs
xchg
adc
cwde
or
xor
popf
xlat
inc
ds
and
in
in
cmp
add
mov
add
mov
xchg
retf
adc
and
lods
jp
mov
jbe
mov
jae
cmp
inc
and
dec
xor
cmp
jb
out
loop
cmp
retf
cmp
or
pop
imul
pop
mov
sub
sub
shr
xchg
push
or
cmp
and
bound
mov
out
jle
int3
pop
mov
xor
jl
movs
adc
(bad)
leave
retf
dec
sbb
xor
leave
or
adc
jnp
xchg
add
pusha
fcom
imul
out
xor
push
lock
es
mov
retf
repz
cmp
sub
sbb
cs
xor
adc
ins
pop
dec
and
xlat
adc
test
jge
dec
xchg
xor
aaa
ss
fsub
(bad)
icebp
cmps
inc
les
stos
cmp
ins
rol
lods
rcl
cdq
push
scas
sub
push
lds
ins
jge
fadd
out
pop
pop
rcr
leave
into
in
or
pop
dec
jb
push
push
dec
jmp
cs
ss
(bad)
mov
xlat
hlt
shr
int
pop
and
sbb
fst
and
rol
loope
rcl
shl
add
(bad)
jg
les
test
xlat
mov
inc
mov
and
sbb
jmp
sbb
test
cs
push
das
repz
xchg
repz
or
pusha
call
pusha
mov
mov
sbb
and
jge
cld
xchg
push
ss
mov
sqrtps
out
fcom
call
mov
adc
popa
retf
jb
dec
cmp
push
cdq
aaa
in
sbb
jae
out
and
fcmovb
mov
cmc
xchg
push
sub
aaa
add
add
neg
pop
imul
aam
pop
out
lock
lods
test
add
stos
jns
repz
or
sub
jo
cmps
add
sub
or
scas
push
leave
sub
out
push
inc
imul
cs
faddp
bswap
mov
aam
push
xchg
mov
imul
cmp
push
in
lahf
clc
push
scas
or
sub
xchg
dec
popa
lds
xor
aas
arpl
sub
sbb
jge
pcmpgtb
jo
mov
mov
inc
push
aad
add
xchg
out
push
popa
jmp
inc
mov
imul
mov
sub
bound
mov
add
retf
mov
stos
lds
test
or
mov
scas
sbb
cmp
icebp
cdq
fldenv
cdq
mov
rcl
pop
jle
inc
out
ins
in
sub
mov
push
jle
or
mov
cmps
adc
mov
int3
rol
xchg
inc
jae
mov
(bad)
loope
out
pusha
and
pop
sbb
popf
outs
fidiv
mov
mov
xor
pop
test
jno
cmp
pop
or
adc
mov
adc
push
jl
repnz
or
mov
push
stos
xchg
mov
cld
out
gs
push
hlt
loop
mov
test
pop
fs
ja
into
jnp
mov
inc
push
stos
mov
jmp
jl
add
and
retf
les
sub
sbb
sbb
jg
sub
ret
(bad)
xor
movs
mov
push
shr
cmp
shr
cli
pop
cmps
scas
gs
inc
mov
sahf
popf
aad
stos
(bad)
out
lahf
sub
shl
(bad)
pop
ins
sub
jno
rcr
push
mov
inc
sbb
jg
inc
loope
jmp
sub
jno
xor
mov
cmps
or
adc
mov
cmp
push
aaa
icebp
pop
adc
cld
and
mov
xchg
xor
or
icebp
push
stos
push
mov
push
out
and
retf
ins
mov
test
mov
sbb
pop
mov
cmp
rcl
ss
(bad)
pop
mov
jge
and
dec
push
mov
adc
mov
jmp
test
jmp
jno
push
icebp
cmps
outs
jnp
dec
inc
lods
mov
repz
mov
sub
xchg
outs
push
mov
fmulp
or
mov
(bad)
jbe
lods
test
loope
ins
pop
nop
pop
gs
or
xor
(bad)
into
shl
hlt
cmp
les
or
xchg
fisub
sub
jb
add
clc
push
ret
inc
scas
fadd
xchg
inc
dec
xor
(bad)
mov
pop
arpl
cld
push
dec
mov
in
mov
and
das
pop
pop
ss
or
enter
dec
test
mov
sub
lahf
or
add
std
xchg
out
popf
ins
mov
repz
cdq
and
popf
adc
lods
push
ret
or
idiv
inc
sub
neg
pop
fs
fsub
xchg
adc
fldcw
enter
aaa
xor
push
fisub
cmp
in
in
popf
repz
jo
fwait
cmp
leave
stc
fwait
xchg
fistp
push
mov
sbb
add
shr
cld
sar
fisttp
test
jmp
stos
cs
inc
neg
into
ins
adc
sub
cmp
sub
test
gs
inc
mov
push
xor
xchg
jo
jno
push
mov
cwde
mov
(bad)
in
call
mov
fdivr
lods
sub
pop
mov
push
mov
sub
xchg
pop
mov
fld
mov
mov
int
cmc
sbb
mov
ret
fwait
stc
jnp
adc
jns
stos
pop
loop
retf
shl
mov
pop
cmp
cmp
mov
outs
mov
jle
jmp
mov
lahf
arpl
mov
(bad)
jns
popa
sbb
fisubr
mov
jg
lss
xor
out
cs
dec
mov
or
in
js
retf
out
mov
cmps
test
stos
stos
in
pop
inc
mov
fmul
(bad)
ins
icebp
ret
stos
sub
std
inc
xchg
sub
loop
fsub
retf
ret
pop
(bad)
fucomip
inc
js
cdq
jnp
movs
pop
(bad)
fidiv
xor
push
retf
push
jb
adc
scas
dec
int3
sub
xlat
fwait
push
xchg
sbb
and
arpl
int
mov
jae
(bad)
add
and
mov
mov
aam
inc
sbb
push
cs
xor
push
mov
pop
inc
scas
xor
mov
pushf
out
sbb
cmp
xchg
ss
add
add
xchg
mov
pop
mov
xchg
adc
(bad)
movntq
push
xor
mov
in
jb
mov
fs
fisttp
pop
adc
in
inc
inc
iret
fisubr
in
retf
jl
cmp
inc
adc
cdq
gs
out
popa
cmps
test
in
inc
xchg
dec
sub
jb
mov
in
pop
fsubr
pop
lock
stos
imul
loope
cmp
inc
mov
jl
test
out
push
ds
jle
outs
pop
or
inc
mov
and
xchg
call
and
jno
or
dec
cmp
mov
js
(bad)
int
mov
or
xchg
or
pop
or
stos
jge
(bad)
int3
mov
fs
das
and
aam
dec
inc
dec
mov
cmp
sahf
ds
aas
pop
and
and
or
jmp
bound
call
scas
sub
fwait
mov
xor
dec
pop
into
jne
sbb
or
int
xchg
(bad)
mov
jmp
scas
lahf
es
mov
std
jnp
sbb
fneni(8087
clc
cli
xor
push
daa
jns
mov
inc
sbb
and
arpl
cmc
(bad)
popf
stos
jnp
xchg
nop
inc
call
frstpm(287
fidivr
loope
inc
in
call
shr
mov
sbb
mov
add
jle
or
call
dec
xchg
mov
pushf
sub
mov
stos
dec
popa
ret
shr
jle
sbb
pop
sbb
cmps
sti
adc
push
sbb
sbb
jne
in
pop
xor
cwde
lock
popa
or
push
push
add
dec
push
mov
mov
outs
add
mov
je
mov
mov
pusha
xchg
or
pop
mov
fs
pop
sub
in
paddusw
das
imul
test
lds
mov
mov
cwde
mov
std
aad
push
pop
lods
sub
repz
stc
mov
push
dec
push
pop
ret
outs
test
icebp
xlat
or
inc
mov
add
fs
lock
inc
aad
stc
in
out
push
and
(bad)
test
shr
or
dec
iret
(bad)
lahf
call
add
mov
mov
mov
ror
push
sub
mov
or
jae
push
push
out
inc
sbb
jmp
daa
xchg
dec
push
or
(bad)
sub
pop
cmp
(bad)
pop
add
int
nop
add
push
daa
clc
and
sub
inc
ror
shr
sub
popa
pop
daa
pop
in
(bad)
pop
test
pop
xor
sub
pop
fst
js
adc
stc
lea
daa
and
fbstp
xchg
imul
pop
iret
idiv
daa
fcmovb
mov
mov
push
pop
lods
les
inc
cmps
cmp
retf
jb
cmps
xor
and
mov
or
mov
pop
push
or
inc
unpckhps
cmps
pushf
sub
add
fild
inc
test
int
movs
dec
xor
cmp
pop
mov
inc
mov
cmp
inc
cld
mov
cmp
repz
cli
dec
(bad)
js
dec
xchg
cld
(bad)
aam
xchg
and
repnz
aam
aas
push
cmp
and
retf
sub
pop
pop
push
xchg
(bad)
sub
inc
mov
repnz
shl
cmps
out
pop
pushf
xor
(bad)
lahf
mov
and
(bad)
fwait
(bad)
dec
pop
ror
aas
push
inc
jae
(bad)
dec
addr16
cmp
in
out
mov
lods
inc
push
call
out
loope
out
cmp
popf
movs
mov
lea
add
shr
clc
div
jge
test
(bad)
std
xor
jb
cmp
jmp
pop
xor
cmp
add
xor
ja
repnz
pusha
call
stc
lahf
mov
es
aas
bound
data16
fld
out
mov
sbb
sbb
sub
test
cli
icebp
out
and
(bad)
cld
pop
in
mov
dec
jp
push
movs
div
fucomi
jne
add
sti
cmp
iret
cmps
lock
jmp
inc
adc
sbb
nop
movs
ins
(bad)
lods
mov
mov
pop
or
clc
sub
clc
adc
mov
lock
stos
jae
jo
cmp
mov
xchg
pop
jae
hlt
mov
ds
repnz
ins
pop
fmul
in
ins
mov
or
(bad)
retf
lds
add
shl
mov
add
(bad)
cmps
inc
push
sbb
fcom
icebp
xrelease
frstpm(287
movs
push
out
xor
add
in
mov
dec
dec
scas
jmp
shl
cmps
dec
or
outs
sub
imul
pop
push
xchg
lds
fisubr
pop
and
inc
les
fs
push
jmp
push
mov
xchg
mov
pop
mov
adc
mov
jns
mov
popa
xor
retf
hlt
mov
sbb
ins
mov
ret
ins
les
inc
lahf
xchg
fsub
sub
or
in
loope
push
jno
xchg
sbb
xchg
pushf
pop
jle
in
(bad)
js
adc
(bad)
aaa
push
aaa
mov
pushf
mov
stos
push
sbb
out
fld
leave
es
pop
adc
test
mov
fdiv
rol
push
cmp
imul
pop
push
enter
shl
stc
mov
in
adc
(bad)
andps
fcomip
pop
repz
cmp
sub
mov
or
aaa
sar
pop
and
pop
mov
xor
outs
shr
lahf
pusha
xor
(bad)
das
dec
jb
push
pop
shl
dec
inc
jmp
fsub
push
test
sbb
dec
lahf
push
push
mov
mov
ficomp
push
dec
inc
repz
shl
test
cmps
sub
adc
sub
pop
mov
and
or
jb
jge
cmc
add
pop
push
add
mov
(bad)
aam
int
cmp
pushw
test
xor
out
fsubr
out
xchg
jnp
je
jae
popf
and
jg
ins
hlt
jbe
in
ins
sbb
push
jne
xor
into
push
(bad)
cld
jo
jp
or
pushf
jl
jp
dec
cmp
fdivr
mov
jmp
fisttp
pop
xlat
ret
std
push
ret
imul
mov
adc
movs
stos
add
inc
daa
pop
inc
xchg
mov
loope
mov
(bad)
mov
in
scas
adc
adc
mov
add
movs
adc
pop
cmp
sub
mov
nop
add
push
ret
and
in
mov
sbb
cmp
or
jl
pop
dec
loope
or
xor
or
sub
int
add
cld
fistp
sub
or
pusha
pop
dec
push
dec
enter
cli
pop
pop
and
mov
jne
sbb
push
sub
enter
sbb
enter
icebp
ret
xchg
add
inc
cmp
dec
cmp
addr16
add
jns
xor
adc
pop
cmp
in
popa
mov
fs
(bad)
(bad)
test
lods
xor
pop
es
ja
or
or
adc
jle
nop
mov
fld
push
inc
pop
ins
popa
xchg
pop
jle
retf
push
sub
pop
shl
sahf
jecxz
or
(bad)
mov
(bad)
fabs
push
rol
or
scas
xchg
xor
cli
sub
dec
cdq
mov
or
mov
sub
test
call
popf
lods
and
dec
neg
scas
(bad)
out
mov
dec
jmp
sbb
jae
jp
inc
inc
push
mov
xchg
add
jg
pop
sub
fldenv
test
mov
cmp
xchg
outs
or
sti
xlat
push
clc
mov
popa
fs
std
pop
jg
and
cmps
movs
add
mov
mov
(bad)
fdivr
pop
and
movnti
jg
pop
out
mov
es
hlt
in
dec
icebp
push
ret
sti
shr
lea
aaa
dec
xor
cmp
add
rcr
dec
add
pop
cmps
lock
adc
gs
push
mov
jne
add
pop
das
mov
xor
pop
adc
outs
loopne
mov
fwait
jecxz
xchg
and
bswap
es
xchg
jns
popf
inc
cs
stc
push
xchg
and
retf
jmp
mov
adc
repz
push
lods
dec
xchg
jp
pop
(bad)
jp
ins
dec
loop
xchg
sub
call
hlt
cmps
add
fcomp
mov
jae
mov
adc
push
adc
outs
iret
cwde
movs
and
jmp
or
(bad)
in
(bad)
mov
push
sar
xor
int
ins
xrelease
gs
jmp
cmp
test
data16
jle
in
xchg
lock
test
add
es
mov
add
les
adc
int
dec
iret
stos
clc
dec
xchg
aaa
fmul
mov
mov
push
push
fisub
mov
push
sub
push
into
sub
cmc
pop
sbb
inc
adc
(bad)
call
fidiv
sbb
movs
mov
out
aaa
xor
(bad)
pop
out
xor
push
xor
outs
lods
push
push
and
add
bound
mov
fwait
test
add
pop
out
mov
xchg
jmp
nop
xchg
call
scas
or
adc
mov
loopne
mov
mov
test
and
mov
xor
sub
jns
xor
push
mov
lods
arpl
mov
sbb
pop
stos
mov
pop
cli
mov
sahf
shl
mov
sbb
in
out
ins
sbb
mov
dec
adc
jo
and
add
sub
jl
int
sbb
jo
fdiv
(bad)
out
add
adc
or
sbb
aad
sbb
inc
push
shl
mov
jnp
sbb
inc
outs
hlt
in
imul
xchg
xchg
and
inc
jp
push
lock
mov
daa
sub
imul
fwait
adc
jb
lea
jb
iret
mov
mov
enter
aaa
and
int
push
fs
push
xchg
xor
mov
mov
stc
fisub
or
mov
lea
movs
arpl
adc
jmp
dec
cmc
test
lahf
dec
lods
test
mov
adc
outs
ja
push
sub
pop
cs
enter
jg
mov
shr
and
nop
sub
xor
icebp
aaa
push
mov
xchg
div
mov
(bad)
or
mov
ret
sub
jmp
mov
mov
adc
loop
add
call
popf
test
pop
adc
cmp
cld
or
or
shr
inc
and
ins
pop
js
push
push
out
std
retf
sti
pop
mov
aas
aas
inc
ins
test
outs
cld
or
pop
jl
dec
fnsave
movs
outs
popf
mov
inc
loope
movs
pop
cmps
fdivr
sub
xor
dec
push
sub
clc
or
and
std
enter
call
ins
frstor
inc
xchg
push
iret
add
(bad)
cmps
pop
sub
popa
jo
jl
jmp
sahf
pmullw
stc
les
pop
or
push
jb
adc
nop
(bad)
cmc
ins
mov
adc
sub
shr
ss
push
add
sbb
pop
push
sbb
and
setp
arpl
adc
lahf
inc
pop
xchg
cmc
jae
sbb
cmc
add
test
ins
push
stos
movs
icebp
push
sbb
fcom
lods
xchg
dec
lds
or
fnsave
and
icebp
ds
jae
adc
pop
and
test
sub
xchg
sbb
shl
xchg
inc
inc
or
xchg
push
in
add
mov
loop
jecxz
jnp
loopne
jmp
adc
in
lds
arpl
retf
aaa
out
hlt
mov
int3
lock
add
sbb
aas
imul
gs
mov
xchg
pop
jp
add
cmc
test
jecxz
cs
inc
and
mov
jp
inc
add
cld
mov
inc
xor
sub
sub
or
sti
outs
(bad)
xchg
and
sbb
xchg
ins
ja
pop
into
sub
rcr
test
ret
rcr
lock
and
fwait
retf
leave
sbb
(bad)
dec
adc
mov
call
add
jge
std
push
cli
lahf
shl
adc
sub
sbb
or
xchg
and
je
sar
jg
sbb
aaa
imul
inc
ds
mov
xlat
pop
sbb
sub
cmp
bound
sbb
inc
iret
xchg
xor
gs
mov
mul
shr
push
push
bound
dec
xchg
repnz
cmp
xor
in
or
cmps
cmp
xchg
and
sub
jp
push
loope
jmp
jecxz
inc
repz
push
(bad)
mov
jne
ins
outs
push
mov
pop
pop
mov
aad
or
fcom
push
jo
arpl
cmp
adc
add
pop
or
sub
addr16
nop
mov
movs
mov
fld
clc
and
call
js
lods
icebp
outs
div
cdq
(bad)
xlat
dec
jmp
ins
inc
nop
or
xor
out
mov
inc
xor
outs
push
xor
mov
xchg
lock
xor
mov
adc
aam
and
addr16
cmps
cmp
cs
inc
fwait
(bad)
(bad)
and
and
pop
pop
mov
clc
clc
ret
add
push
pop
repz
dec
int3
popa
out
repnz
xor
lea
popa
jecxz
hlt
cmc
in
(bad)
in
inc
add
and
in
les
mov
dec
fbstp
(bad)
out
jb
retf
pop
pop
not
out
into
ror
or
(bad)
or
xor
pop
xchg
fdivr
pop
adc
push
aas
xor
cmps
dec
and
jae
in
pop
repnz
push
pusha
inc
sti
out
ins
mov
pop
and
jbe
int3
fld
cwde
mov
out
push
add
inc
in
and
adc
(bad)
sbb
std
icebp
loopne
dec
mov
(bad)
fwait
jb
jo
push
adc
sbb
push
push
test
addr16
loopne
mov
mov
add
cmps
or
jns
in
int3
sub
leave
retf
sub
dec
(bad)
lock
imul
and
jmp
or
jp
loop
mov
jnp
popa
aad
sbb
fstp
pushf
jge
add
call
imul
sub
xchg
ins
ins
mov
jle
shl
aas
je
retf
mov
in
das
fst
inc
jecxz
xor
fidiv
stos
mov
sbb
into
cmp
xlat
in
cmps
pop
jmp
and
fldenv
push
retf
push
into
fwait
add
mov
(bad)
xchg
mov
popa
mov
mov
push
adc
and
jo
popf
or
imul
test
mov
push
push
and
inc
in
dec
fwait
test
aad
mov
data16
xchg
push
mov
in
pop
ds
je
test
dec
cwde
jg
iret
mov
(bad)
clc
ja
test
or
sahf
mov
push
dec
mov
pop
push
ja
in
mov
lock
sub
lock
inc
outs
je
lahf
stos
sti
cwde
(bad)
shl
(bad)
js
inc
cld
mov
imul
and
mov
test
push
ins
shl
pop
mov
ins
mov
ins
or
jbe
cmp
lahf
into
push
xor
mov
xor
retf
cmps
jmp
movs
into
imul
popf
xchg
and
hlt
inc
xchg
cmp
daa
(bad)
and
test
mov
mov
test
pop
pop
arpl
iret
out
pop
shl
mov
hlt
ret
out
mov
(bad)
je
xchg
adc
mov
xchg
and
(bad)
je
push
ret
inc
dec
mov
bound
xchg
sar
cmp
daa
push
or
xchg
sbb
ret
mov
mov
xor
ret
pop
out
clc
ror
jp
or
mov
ret
push
out
fs
push
and
mov
pusha
add
add
sbb
js
jge
add
push
dec
mov
adc
addr16
xor
and
and
clc
xor
jle
movs
in
test
ret
cmps
cmps
cmp
mov
addr16
pop
jne
out
retf
inc
fbstp
out
fcmovnbe
loope
sahf
daa
fst
mov
dec
repz
aas
pop
jmp
jnp
dec
scas
(bad)
push
stos
repnz
mov
xor
push
push
(bad)
outs
mov
lods
lods
inc
jmp
ret
cmps
ins
in
fstp
loopne
jp
adc
and
cmp
rcl
lea
mov
pop
std
outs
pop
mov
jne
cld
nop
bound
clc
mov
fs
xchg
dec
xchg
into
aaa
fiadd
pushf
les
data16
inc
inc
mov
cmp
fistp
jle
jo
sar
add
addr16
es
adc
popf
mov
pop
imul
cmp
sbb
pop
inc
cmp
loope
sbb
int
push
int3
cdq
push
push
mov
es
data16
lock
outs
adc
stc
retf
retf
dec
xchg
inc
jl
add
cmp
push
pop
mov
ins
xor
inc
cmps
mov
sub
jmp
cmps
inc
loop
inc
push
cwde
jae
or
lods
stos
int3
jae
cmp
shl
movs
mov
mov
nop
ja
adc
dec
mov
xor
and
cmp
jno
call
rcl
das
push
aaa
call
ja
pop
mov
xor
scas
(bad)
addr16
rcl
mov
in
pushf
pop
mov
fcmovnu
loope
neg
xchg
inc
repz
jb
add
mov
icebp
add
lds
arpl
inc
push
push
add
jmp
mov
adc
add
fidivr
mov
jge
mov
ins
stc
mov
popa
lods
push
mov
xor
fbstp
adc
xor
in
ret
out
fsub
jg
jno
jl
cld
xchg
(bad)
jle
jnp
xchg
push
repnz
stos
leave
jle
(bad)
mov
mov
loop
(bad)
pusha
sub
cmp
mov
call
daa
sub
jbe
dec
fs
stc
jg
ret
xor
fmul
rol
out
arpl
aas
cmp
jp
cmp
pushf
leave
loop
sbb
mov
rol
repnz
fisubr
mov
aaa
pop
pop
stos
in
jp
mov
fnstcw
loopne
and
cmps
(bad)
pop
sti
add
mov
and
sub
lock
mov
ja
shl
mov
push
xor
mov
js
cmp
and
push
shl
loope
and
daa
push
and
loope
push
daa
rcl
fsub
mov
nop
jmp
jo
mov
and
dec
sbb
(bad)
jle
inc
clc
mov
add
pop
(bad)
push
pop
cmp
rcl
movs
data16
jne
xchg
ftst
mov
stc
lods
cmp
mov
jnp
jmp
rol
inc
or
mov
cld
pop
mov
inc
aad
shl
cmp
jp
fdivp
std
mov
shr
add
push
popa
aas
cmps
aad
xor
fisub
sti
pop
jne
and
les
push
and
sub
sub
rcr
sub
add
int
dec
pop
inc
dec
pop
sar
(bad)
push
or
inc
jmp
jne
inc
sub
retf
mov
inc
shl
mov
out
in
cld
loope
dec
sar
mov
or
adc
and
xchg
arpl
in
jno
std
in
popw
and
int
rcr
cld
cli
sar
das
adc
scas
sahf
fcomp
cmps
inc
jecxz
xchg
jne
repnz
shl
mov
popf
das
push
jmp
nop
push
adc
sbb
scas
mov
cmps
pop
cmp
adc
retf
xchg
jp
lock
out
pop
jp
pop
icebp
xchg
add
and
ss
or
mov
sub
lds
push
int3
data16
leave
and
rol
inc
setnp
push
ins
daa
hlt
mov
std
jmp
inc
fild
jns
div
test
out
jle
mov
cmp
add
mov
push
loope
jmp
pop
xchg
mov
adc
add
loop
and
push
clc
sbb
fsub
and
pop
cmc
jp
pop
dec
ja
cld
jbe
pop
repnz
add
scas
cld
shr
pop
pop
cld
pop
add
pop
mov
imul
retf
leave
mov
or
push
ret
popa
mov
push
dec
jg
mov
sub
add
scas
cmc
loopne
jl
pop
call
xor
(bad)
jne
fsub
jge
dec
hlt
retf
dec
cmp
loop
sub
and
scas
sub
aaa
jns
ja
aad
pop
ins
push
lock
dec
adc
cmp
xchg
dec
jmp
xor
cmc
out
call
mov
dec
fucomp
(bad)
std
nop
add
neg
movs
push
jp
inc
sahf
add
icebp
in
cmps
mov
sti
stos
xchg
call
cmp
xchg
mov
icebp
or
sub
dec
in
lock
jbe
dec
add
ret
ins
sbb
and
cmp
rcr
sbb
mov
lods
xlat
push
sub
jnp
ja
cmp
add
iret
sub
ins
test
adc
ins
cmp
jg
inc
adc
in
jb
xchg
(bad)
pop
and
(bad)
and
lahf
popa
sbb
cmp
hlt
aaa
jg
add
lea
pop
sar
adc
test
fcomi
jmp
mov
xor
outs
pop
call
movs
ret
pop
sbb
fist
sub
(bad)
or
fwait
add
sbb
xchg
daa
in
sub
inc
sbb
addr16
(bad)
jmp
imul
sbb
aas
mov
and
test
sbb
and
lea
mov
adc
and
clc
pushf
dec
mov
or
lahf
loopne
xchg
sbb
inc
add
push
pop
xchg
adc
jmp
mov
hlt
pop
in
sub
add
mov
lahf
add
inc
addr16
retf
imul
pushf
movs
ins
push
mov
inc
push
(bad)
stos
jnp
popf
pushf
daa
mov
aad
push
xchg
pop
push
add
mov
pusha
xor
cmps
mov
xchg
aaa
mov
dec
cwde
rcr
repz
std
in
xor
add
jp
pop
and
loope
leave
out
pushf
xor
xor
xchg
mov
in
pop
addr16
ins
es
fcomp
es
gs
xchg
and
cli
mov
inc
mov
jo
cli
mov
scas
jo
cdq
xor
cmp
add
out
add
sar
ret
hlt
mov
sbb
in
mov
clc
jno
stc
pop
sub
cli
mov
imul
and
cmp
sbb
shr
jmp
out
mov
icebp
lds
push
shl
add
push
inc
popa
jle
test
and
and
fld
jb
aad
cmp
push
scas
fadd
cmps
(bad)
int
mov
(bad)
shr
jl
rcl
mov
pop
ins
lds
jl
pop
int3
addr16
sub
mov
adc
sti
mov
cmp
popf
out
add
sar
call
repz
push
(bad)
std
cli
xor
repz
cmp
in
les
mov
sar
sbb
rcr
sub
add
xchg
cmp
xor
xchg
pop
push
cld
les
mov
sbb
mov
pop
arpl
jb
leave
push
rol
push
ret
sub
and
imul
or
or
or
cli
sbb
xchg
pop
or
(bad)
pusha
xlat
push
mov
and
ret
mov
pop
jge
jae
ret
xchg
aaa
adc
xchg
es
cmp
push
mov
sahf
out
xchg
retf
ins
dec
mov
xor
ins
xor
lods
fwait
rcl
mov
std
idiv
mov
jb
jmp
cdq
std
xchg
adc
and
sbb
mov
inc
cdq
jae
int
data16
aaa
push
add
inc
les
mov
and
adc
inc
inc
xor
jg
fsub
dec
outs
les
push
dec
add
add
mov
pop
push
call
sub
aas
repnz
pop
jnp
stos
les
pop
cwde
add
(bad)
adc
scas
adc
fdiv
fucomip
sub
push
dec
mov
aad
ret
mul
sbb
fsubr
mov
fisttp
cmc
jb
fnstenv
lea
(bad)
sahf
jmp
dec
pop
jno
ds
inc
fisub
mov
push
xchg
lea
out
bound
pop
ja
cli
adc
lock
push
das
ficom
inc
and
(bad)
mov
mov
stos
and
lock
iret
mov
push
mov
push
or
ds
pmulhuw
sub
cmp
mov
retf
es
icebp
repnz
mov
int
sahf
cmp
lock
cdq
stc
adc
dec
pop
push
mov
push
push
cmp
popa
push
adc
dec
jle
or
add
fadd
push
outs
in
pushf
inc
movs
ja
dec
cli
mov
mov
pop
jmp
int
jecxz
mov
cld
movs
repz
test
push
daa
mov
div
and
int3
fmul
mov
outs
inc
sub
mov
daa
jp
stc
pop
or
jecxz
addr16
pop
(bad)
inc
mov
sbb
movs
dec
sar
push
push
push
or
add
fs
nop
jne
in
shr
jecxz
clc
sbb
dec
imul
dec
jle
mov
loope
mov
jno
retf
sti
mov
push
ffree
ror
cmc
jne
mov
in
mov
push
sti
push
mov
in
in
int3
inc
mov
dec
xchg
cmp
sub
jno
xchg
or
loop
retf
jae
and
xchg
fwait
add
rcr
popf
mov
and
mov
pop
or
xchg
dec
xchg
ret
mov
dec
xchg
cs
jne
xchg
sub
fst
(bad)
lahf
xchg
cmp
jns
inc
pop
xchg
xor
mov
dec
push
sub
outs
inc
cmp
fisubr
ficomp
or
and
(bad)
fidiv
add
and
cmp
(bad)
arpl
mov
ret
sbb
pop
mov
lds
jb
cmp
lods
cmc
jecxz
cmp
dec
mov
jmp
popa
retf
pop
fs
cs
push
dec
sub
pop
mov
adc
and
rcr
dec
imul
pusha
jecxz
dec
mov
mov
mov
enter
int
xchg
sub
and
int
adc
out
push
push
fnsave
jmp
aam
push
dec
mov
sub
lahf
mov
(bad)
jp
loopne
push
push
test
push
dec
lock
ins
(bad)
jo
mov
jmp
cmps
(bad)
push
mov
retf
daa
adc
or
or
pop
fdiv
cwde
ss
sti
loope
aad
dec
sub
retf
adc
sbb
mov
loop
repnz
pop
(bad)
jmp
jp
test
js
scas
(bad)
popa
(bad)
xor
cmps
lods
es
cmp
cmps
pop
repz
mov
dec
jnp
(bad)
xor
xchg
data16
jnp
dec
sub
mov
sub
arpl
sti
ss
outs
movs
dec
in
jae
adc
xor
lods
daa
adc
pusha
(bad)
and
scas
ret
fistp
jno
pop
push
arpl
pop
xchg
mov
sub
mov
cmp
sbb
mov
or
cmp
mov
cmp
sub
xchg
and
jmp
sbb
sti
cmp
adc
inc
mov
jge
(bad)
dec
pop
call
out
leave
pop
es
ja
push
sub
xchg
lea
addr16
fdivr
data16
push
fadd
popf
mov
dec
(bad)
adc
icebp
and
mov
mov
cmc
stos
lods
in
lds
and
call
outs
xchg
cwde
in
push
mov
(bad)
lock
fcom
fs
pop
xor
popf
test
mov
in
jmp
ins
jl
fild
addr16
or
and
push
xchg
ja
or
punpckhwd
mov
xchg
xor
mov
jmp
dec
xchg
jae
addr16
jecxz
js
fcom
mov
hlt
pop
or
stc
mov
out
mov
pop
mov
mov
jmp
jns
scas
nop
rcr
jb
jnp
ins
fstp
push
rol
jl
and
int3
movs
loopne
sub
xor
xchg
enter
pushf
mov
sbb
mov
fnstenv
cld
dec
jge
jge
in
mov
dec
popf
sub
call
icebp
ret
fs
fbld
jne
push
lea
sub
shl
xchg
pop
out
imul
test
test
pop
leave
jns
push
cmp
add
adc
sbb
movs
gs
inc
xlat
ds
pop
fstp
mov
push
fs
add
cmp
jle
mov
jg
in
xchg
add
pop
sub
push
cmp
cld
add
inc
jns
push
(bad)
lock
movs
and
pop
or
dec
cmc
or
xchg
sahf
inc
shl
dec
xor
popf
push
and
fsubr
sahf
dec
jmp
cs
aam
and
xchg
sub
cld
popf
mul
sub
fisttp
pushf
(bad)
aad
xchg
mov
cmps
mov
mov
int
add
mov
ja
ins
call
movs
sbb
xchg
sbb
stos
adc
in
mov
gs
pop
out
popa
jno
movs
pop
jp
add
aam
je
inc
aaa
cs
xor
call
inc
or
(bad)
(bad)
cmps
mov
fwait
sbb
imul
sbb
loop
jmp
mov
jns
dec
ror
in
cmc
cmc
stos
xor
fistp
mov
iret
xchg
(bad)
sti
pop
jge
push
inc
ins
cmp
call
jmp
adc
in
sub
or
sub
mov
and
(bad)
aam
mov
in
fs
test
repz
adc
ds
or
test
push
cmp
inc
aad
imul
das
mov
fdiv
out
jle
iret
xchg
or
repnz
pop
jo
fsub
jecxz
inc
sbb
rol
xchg
out
enter
add
add
stos
inc
arpl
add
int3
clc
jne
call
outs
sub
loopne
ret
pop
dec
xor
mov
jo
pop
clc
and
cli
neg
ror
push
cmc
(bad)
fild
aaa
stos
setae
sub
and
mov
mov
cmpxchg
loop
xchg
not
rcl
fst
adc
nop
ins
inc
jg
aas
mov
in
rcl
inc
mov
xor
addr16
add
add
push
pop
or
test
addr16
xor
and
inc
push
dec
out
jnp
pushf
popa
dec
and
mov
test
mov
out
adc
inc
mov
push
stos
fstp
push
test
lock
cmp
lock
popa
mov
shr
and
inc
stc
mov
and
push
lock
mov
or
mov
sar
mov
scas
jge
or
out
add
lea
mov
adc
adc
jb
sbb
fldcw
sbb
push
in
cdq
pop
mov
jl
push
out
pop
xor
jbe
cwde
aad
sbb
dec
scas
jl
(bad)
bound
xchg
cmp
push
push
test
jle
jp
outs
and
scas
xor
xor
xchg
out
popa
scas
mov
push
mov
pop
inc
push
inc
push
jno
dec
stc
test
sar
sti
sbb
dec
sbb
addr16
xor
mov
or
inc
test
getsec
std
lahf
nop
out
in
and
or
std
adc
(bad)
retf
in
mov
mov
pop
cld
jns
icebp
jae
add
test
das
lea
dec
mov
outs
fcom
sub
jo
test
adc
stc
pop
mov
je
mov
pop
cmp
push
test
dec
imul
dec
and
jmp
add
cwde
es
mov
fwait
xor
fwait
aad
loopne
cld
push
sub
jbe
cmp
call
jmp
xor
dec
stc
lea
pop
popa
xor
mov
dec
mov
dec
adc
xchg
enter
ins
jns
xor
jnp
call
cmp
or
mov
mov
mov
jb
jno
pop
mov
stos
int3
mov
and
pop
xchg
pop
iret
gs
rol
pop
xor
je
iret
jno
mov
and
push
jecxz
into
mov
and
mov
ds
cmp
mov
icebp
jmp
mov
sub
fs
mov
mov
sbb
push
push
in
adc
push
sub
pop
nop
mov
xor
push
repnz
ret
aam
jno
movs
mov
into
hlt
jns
clc
jmp
ja
cmp
mov
test
fbld
ds
cs
ret
xchg
fstp
adc
in
inc
add
dec
mov
fstp
test
dec
cmps
jg
mov
rcl
dec
inc
inc
push
ss
sub
ret
pop
xchg
mov
hlt
nop
daa
xor
rcl
xchg
fucomp
lea
sub
add
in
retf
jb
mov
rcl
xchg
mov
lea
into
addr16
mov
rol
push
push
pop
in
dec
add
mov
mov
add
ins
or
pop
imul
fs
fs
scas
or
repz
cmp
pop
arpl
cmp
cmc
push
ror
inc
mov
xchg
pop
in
dec
pop
sub
xchg
int
add
(bad)
mov
inc
xchg
sub
cmp
pop
jbe
sub
and
mov
mov
popf
aam
jae
xor
outs
sub
fwait
jmp
clc
xchg
mov
jle
cmp
xchg
rcr
adc
dec
shl
or
mov
dec
cmp
fiadd
aaa
mov
pusha
ret
mov
pop
stos
cli
scas
mov
add
pop
hlt
inc
xchg
xchg
in
xchg
jo
lahf
test
div
or
or
or
je
loopne
adc
pop
adc
mov
jb
into
pushf
mov
imul
test
push
rol
push
inc
out
mov
pusha
jmp
fsubr
shr
push
pxor
pop
mov
enter
jge
popf
aad
cmp
dec
or
xchg
sub
lea
sbb
(bad)
jecxz
test
stos
mov
(bad)
add
loop
test
out
in
and
iret
sbb
js
dec
lods
add
aam
mov
jnp
ss
xor
cmps
inc
pop
inc
dec
jb
adc
repz
mov
inc
das
mov
inc
cmp
jne
push
shr
sub
lods
dec
test
xchg
cld
pop
inc
jmp
push
mov
test
mov
js
lock
pop
sar
and
sbb
rol
std
add
and
(bad)
(bad)
cwde
jne
add
mov
dec
rcl
mov
pop
fcom
movs
sub
jg
inc
pushf
add
pop
pop
mov
add
in
leave
(bad)
in
clc
jae
test
cmp
jne
adc
mov
shr
jb
xchg
sbb
(bad)
call
mov
pop
shr
retf
dec
cmp
call
jl
push
xor
mov
add
cdq
in
lock
dec
retf
(bad)
addr16
push
lea
fdiv
and
dec
sbb
xchg
jl
sub
xor
cmp
fdiv
mov
fmul
outs
fs
popa
sub
popa
adc
fmul
jns
test
cmp
nop
sti
sbb
cmp
fldenv
hlt
out
push
push
sbb
sub
(bad)
sahf
js
add
sub
(bad)
scas
cmp
das
push
movs
fmul
call
psraw
dec
mov
push
bound
jbe
(bad)
adc
sbb
rcr
aam
inc
xchg
repnz
jl
sub
pop
add
sbb
jno
lods
call
add
(bad)
push
es
out
out
inc
xchg
ret
pop
ja
or
lods
lea
mov
(bad)
adc
mov
fnstcw
inc
sbb
push
push
xlat
add
test
ins
add
dec
iret
dec
int3
pushf
repnz
les
sub
xor
rcl
inc
pop
cmp
popf
jbe
aam
xor
xor
mov
mov
(bad)
cmp
mov
pop
push
and
push
popf
inc
jo
call
xlat
mov
cmp
test
ins
arpl
fnstenv
stos
jb
in
inc
mov
(bad)
outs
jmp
lods
and
or
cmp
xor
adc
loop
std
shl
loop
cmp
movs
test
xchg
sahf
loopne
xchg
or
adc
call
mov
mov
mov
sbb
repnz
inc
in
adc
cwde
fisub
gs
nop
jecxz
stos
sti
adc
push
std
inc
cmp
cli
cmp
daa
add
push
int3
pop
aaa
mov
clflush
dec
mov
cdq
dec
cmp
add
xchg
test
sub
mov
mov
xchg
out
imul
push
enter
xchg
rcl
pusha
je
xchg
sbb
in
dec
jnp
cvttps2pi
js
outs
add
fadd
jle
push
bound
add
(bad)
xchg
out
pop
pusha
sub
rcl
test
lods
and
mov
add
sub
in
pop
jno
test
cld
test
jno
(bad)
fdivr
hlt
jnp
outs
mov
aad
xchg
add
fcom
pextrw
jg
clc
or
jle
bound
pop
jl
or
xchg
test
ds
lods
std
push
adc
mov
dec
pop
jmp
idiv
jg
jo
pusha
(bad)
push
stc
or
in
or
nop
push
mov
add
adc
mov
or
scas
add
in
and
lods
int
mov
mov
xchg
xor
bound
jns
inc
adc
ror
stc
int
sar
mov
test
sub
scas
enter
test
repnz
mov
xchg
dec
mov
jbe
mov
sub
mov
inc
popf
cmp
cmp
ficom
(bad)
mov
fsub
fnstsw
pop
mov
imul
mov
xor
mov
mov
daa
fistp
mov
pop
cs
mov
popf
cmc
dec
aam
mov
mov
retf
mov
(bad)
fisubr
shl
idiv
cli
mov
cdq
add
add
adc
outs
mov
mov
sub
mov
jl
stc
(bad)
(bad)
xor
mov
mov
xor
pop
shl
dec
jg
stc
mov
psubd
lea
(bad)
fldenv
jecxz
ror
inc
loope
jno
call
in
fdiv
loop
les
out
mov
outs
lods
aas
cmp
(bad)
imul
xchg
icebp
stos
jp
lock
ins
mov
bound
imul
jmp
call
mov
stos
popf
(bad)
in
xor
sub
pop
xchg
xor
aas
xor
retf
mov
lds
loopne
cmp
mov
mov
stos
dec
pop
sub
cmp
ss
pcmpgtd
jbe
push
xchg
adc
cmp
repz
loope
shl
clc
sahf
sahf
std
sbb
mov
xchg
push
out
mov
scas
push
neg
push
fild
mov
jmp
adc
repnz
es
or
loop
mov
mov
popf
movs
inc
mov
movs
or
int
es
mov
test
cmp
fnop
dec
xor
cmp
sti
dec
outs
mov
sti
leave
mov
xchg
out
jl
jno
std
cmp
mov
js
ins
mov
jecxz
mov
pusha
dec
retf
(bad)
push
andnps
iret
icebp
mov
into
mov
ja
xor
and
shr
adc
sbb
test
lods
ds
sbb
dec
inc
pusha
fwait
int
jae
test
cmps
inc
add
fnstcw
addr16
std
jmp
xchg
loope
mov
mov
jne
dec
in
cmps
push
fmul
sub
stc
push
dec
push
cmp
scas
cmc
cmc
adc
popa
xchg
jp
lds
mov
push
(bad)
jns
push
daa
pushf
(bad)
fild
loop
fs
scas
fsub
adc
cmp
fcmovb
sub
icebp
ins
push
push
push
mov
outs
rcl
loop
mov
cli
mov
dec
popf
scas
xor
mov
cmp
shl
push
mov
push
test
cld
pop
xlat
mov
add
imul
clc
in
shl
mov
dec
and
or
sbb
inc
icebp
leave
scas
mov
mov
sbb
jmp
and
and
cmps
ja
out
movs
inc
loopne
jb
addr16
aas
mov
pop
outs
mov
mov
fcom
sti
or
mov
repnz
lods
add
sbb
cmps
clc
pop
test
cld
mov
lods
add
mov
movs
test
ins
js
fldcw
fxam
loopne
fdivr
mov
outs
adc
mov
test
in
pop
les
and
leave
stos
and
sub
lea
in
mov
shl
mov
add
sbb
cs
das
enter
and
lahf
stos
pop
push
jmp
add
jp
outs
out
fisub
push
out
mov
mov
fst
rcl
pop
cwde
arpl
(bad)
int3
bound
inc
mov
jmp
add
in
lods
icebp
add
(bad)
and
mov
sub
push
sbb
sbb
jmp
je
sahf
jg
jne
sbb
fiadd
sub
jecxz
ins
movs
fimul
pop
pusha
cmc
jb
adc
push
test
sbb
out
inc
call
ret
jmp
stc
into
cmp
mov
repnz
dec
dec
aad
sub
jo
call
div
jmp
(bad)
pop
pop
test
mov
stos
inc
fild
inc
inc
mov
fcom
inc
popw
mov
(bad)
pop
pop
out
inc
push
mov
sub
scas
imul
ss
push
mov
pusha
xchg
adc
jae
out
ret
xor
out
(bad)
sub
jp
(bad)
or
lds
sar
mov
mov
cmc
adc
lahf
xchg
pop
gs
pop
jle
mov
ret
aad
cli
sub
hlt
fmul
pop
inc
mov
and
popf
das
adc
adc
xlat
sub
cdq
sbb
cmps
lds
jl
ins
mov
adc
fsubp
loop
aas
sub
lods
cmp
or
sub
push
and
or
mov
ret
sar
addr16
fwait
or
push
jge
cmp
nop
pushf
push
mov
pop
daa
lds
jmp
stos
in
test
inc
mov
adc
loope
popa
mov
mov
rol
sub
xchg
pop
lahf
out
jle
push
inc
cmps
enter
cmps
es
out
push
es
adc
mov
lods
or
pop
(bad)
pop
call
sub
cmp
paddusb
nop
sub
inc
jne
adc
and
out
ins
cdq
xchg
leave
les
add
and
(bad)
int
jp
dec
jne
or
div
push
fs
clc
(bad)
(bad)
jle
shr
xlat
rcr
cs
jge
leave
mov
pushf
inc
xor
test
sbb
(bad)
mov
sub
mov
pop
inc
out
push
fild
fst
sub
outs
in
inc
and
mov
cld
(bad)
push
in
mov
scas
add
sbb
and
add
sti
dec
stos
ror
fcmovbe
test
jg
ret
jl
pop
cmp
sub
imul
jp
mov
(bad)
jg
inc
adc
nop
cli
scas
lahf
leave
adc
push
inc
add
add
and
(bad)
in
repnz
in
out
pop
inc
jmp
adc
shr
into
jp
inc
fld
hlt
call
pop
je
fmul
push
jl
xchg
ja
and
adc
iret
cmps
pop
xchg
sub
xor
sbb
lock
mov
jbe
iret
adc
pop
jmp
loope
jno
addr16
sub
cdq
cmp
dec
sub
push
repnz
imul
lea
rol
sahf
ret
cmc
ds
mov
std
test
mov
cmc
lods
fcom
outs
sub
inc
mov
ins
test
fsubr
cmp
inc
js
fiadd
fisubr
loopne
adc
outs
and
jle
adc
mov
stos
and
sub
sahf
push
pop
mov
adc
cld
ret
stos
fs
jb
dec
ja
mov
xchg
in
and
cmc
jmp
and
add
cmc
aaa
shr
into
push
cmc
mov
fistp
bound
inc
es
jns
outs
inc
xor
xor
aad
rcl
or
arpl
xor
pop
in
int3
enter
add
sub
ficom
mov
inc
xchg
pop
test
jnp
push
or
je
idiv
out
dec
dec
mov
and
adc
sub
pop
mov
(bad)
(bad)
mov
add
loop
mov
fstp
call
clc
mov
xlat
xor
xor
add
out
in
pop
cmp
xor
loope
mov
cwde
jbe
push
push
push
mov
arpl
shl
arpl
fnsave
pop
push
dec
mov
or
or
cmp
and
outs
(bad)
nop
daa
mov
in
pop
popf
outs
stos
inc
cmps
shl
adc
or
(bad)
lahf
dec
mov
test
push
adc
pop
mov
sbb
dec
mov
dec
push
inc
and
fs
cld
test
repnz
push
retf
rcr
jecxz
jne
mov
stc
mov
cs
add
stc
add
outs
mov
test
cmp
inc
ja
mov
out
cwde
aas
xor
ret
dec
stos
jecxz
xchg
scas
cmp
(bad)
sbb
lods
and
retf
fisubr
pop
mov
jno
sub
adc
std
and
call
out
lock
daa
sbb
mov
inc
sbb
popa
in
movs
and
and
adc
jb
cmp
shl
xchg
pop
jmp
(bad)
in
repnz
shl
gs
repnz
lahf
or
jge
and
(bad)
in
mov
mov
icebp
mov
pop
and
enter
jo
cli
jl
and
jmp
div
cmp
mov
jl
aam
into
dec
mov
lods
dec
push
js
outs
daa
outs
idiv
stc
sar
(bad)
aad
(bad)
call
cdq
into
xchg
sub
cli
xchg
lahf
lock
cmp
cmp
lahf
les
cmp
ins
adc
push
addr16
pop
adc
jge
rol
add
mov
mov
rol
fbld
int
ja
cmp
jnp
iret
push
in
mov
xchg
cmps
out
lea
enter
(bad)
pop
dec
adc
dec
mov
sbb
mov
(bad)
lahf
cli
pop
mov
mov
inc
out
adc
pop
iret
out
sbb
(bad)
cmp
and
jmp
out
inc
xchg
add
std
lea
int
dec
sar
adc
and
sbb
lock
cmp
jg
mov
jg
pop
stos
xchg
addr16
adc
dec
stos
rsqrtps
add
mul
adc
iret
sub
xor
xchg
lods
ror
outs
adc
cmp
inc
loopne
scas
jmp
cmps
xor
out
sub
mov
shl
sbb
in
or
add
into
sub
adc
jae
cmp
dec
(bad)
sub
jns
mov
push
push
arpl
sbb
rcl
out
push
les
xor
out
sbb
arpl
hlt
inc
xor
and
mov
dec
cmps
mov
mov
mov
out
rol
gs
inc
out
mov
jae
or
xchg
es
mov
sbb
dec
ds
repnz
jb
inc
leave
push
in
dec
mov
push
pop
adc
(bad)
pop
rol
fimul
or
jecxz
push
outs
and
add
adc
jns
sbb
cmp
jmp
shr
xchg
rol
mov
xor
pop
mov
test
fld
push
leave
dec
rcr
je
ret
dec
mul
pop
mov
loop
test
enter
add
test
cmp
add
cmps
out
inc
cdq
mov
push
or
dec
ss
jge
pop
ret
fs
mov
mov
mov
popa
cmp
call
ret
adc
push
pop
pop
outs
add
push
jl
cmc
push
dec
js
xor
push
int3
sub
test
push
nop
in
pop
in
leave
mov
jle
jne
sub
outs
loop
mov
inc
cld
dec
mov
in
xchg
lods
dec
fadd
mov
aaa
cmp
aaa
xor
mov
scas
mov
xor
inc
add
into
mov
xchg
pop
es
pop
xor
les
jne
xchg
pop
pop
cmp
jecxz
rol
mov
mov
bound
cmc
out
xchg
sub
repnz
sbb
mov
adc
adc
nop
xchg
cmps
out
(bad)
sahf
mov
stos
adc
js
inc
dec
jnp
lock
into
and
and
das
js
gs
or
adc
jl
call
(bad)
stos
iret
pop
loope
fidivr
test
rcr
aam
les
sahf
fdiv
fld
cmc
lahf
retf
push
cli
sbb
lock
adc
sbb
xchg
mov
cmp
push
mov
daa
push
fcom
scas
xchg
jecxz
mov
sub
scas
nop
cmp
sub
sbb
sbb
and
arpl
inc
rcr
es
mov
cmp
push
adc
inc
jge
ins
(bad)
jg
sub
push
jae
mov
sbb
test
ret
jne
or
popa
and
and
out
mov
inc
sbb
cs
test
imul
mov
and
les
shl
lahf
add
xor
cmp
mov
jmp
(bad)
into
cld
and
cmp
(bad)
movs
lods
test
jge
adc
sub
fdivr
pop
daa
jmp
inc
mov
data16
jo
mov
sub
jmp
xchg
push
pop
lock
cld
mov
pop
repz
mov
xchg
mov
inc
cmp
mov
cwde
pushf
ja
jecxz
ss
push
xor
sub
je
sahf
dec
push
pushf
push
loopne
jg
retf
in
xor
lds
xchg
xchg
enter
mov
addr16
or
add
jg
lods
dec
sbb
jns
fcomp
ss
(bad)
pushf
pop
xchg
clc
popa
push
add
jge
ins
or
nop
les
inc
xchg
jno
push
retf
cmp
ja
jns
mov
jge
inc
shl
pop
shr
mov
jb
add
ja
imul
(bad)
in
mov
push
add
enter
enter
cwde
push
mov
and
pop
cmp
adc
repz
test
xor
xchg
pop
sbb
pushf
fiadd
outs
mov
movs
cmps
sub
pusha
hlt
int3
mov
das
sbb
out
sub
pop
dec
data16
aam
rcl
push
imul
daa
int
pop
lds
pop
hlt
push
inc
and
cdq
xchg
mov
movs
adc
dec
ds
daa
sar
push
mov
mov
mov
xor
sar
mov
or
std
daa
jbe
xor
in
jl
test
int3
rcl
ret
ss
push
push
(bad)
bound
jbe
inc
lahf
jnp
cmp
jmp
add
ja
test
xor
dec
pop
(bad)
and
add
lock
iret
pop
inc
mov
xlat
pop
jmp
cld
adc
in
pop
jae
mov
jp
(bad)
xchg
adc
sbb
ja
mov
push
mov
lahf
xlat
mov
cli
cmp
jno
xchg
clc
sbb
rcr
pop
pop
aad
in
shl
sub
std
cmp
add
inc
sub
cmp
cmps
bswap
xor
inc
mov
out
fcomip
and
rcr
not
ret
stc
scas
pushf
mov
loop
inc
adc
sbb
cli
lahf
out
or
out
(bad)
jmp
call
inc
xchg
pop
sbb
aas
ds
jp
push
and
out
push
cmps
stos
mov
ins
mov
sbb
or
pop
push
retf
inc
dec
push
sahf
pop
ss
ret
xor
std
inc
mov
ficomp
aad
mov
cmp
imul
pop
pop
out
inc
and
jg
push
jo
in
daa
mov
push
mov
adc
pop
push
xchg
dec
hlt
push
dec
pop
dec
adc
mov
sbb
out
lock
in
movs
and
jne
repz
push
mov
fidiv
into
xor
test
push
sub
pop
mov
daa
xchg
sub
loopne
pushf
dec
outs
jp
(bad)
pop
jl
or
cmp
fndisi(8087
sti
lods
pop
jb
push
je
neg
(bad)
repz
add
jne
aas
cli
ret
xchg
xchg
sbb
sub
add
hlt
shl
test
(bad)
repnz
mov
in
dec
xor
xor
test
xlat
sbb
outs
or
dec
sar
pusha
scas
iret
cmc
(bad)
xchg
mov
mov
aaa
loop
dec
sub
and
push
add
popa
mov
in
data16
and
xor
repnz
lods
call
pop
pop
pop
sbb
fpatan
add
lock
add
or
sbb
mov
daa
fucom
test
test
mov
retf
repnz
inc
adc
out
jl
push
sbb
push
test
mov
mov
mov
jns
push
icebp
xor
mov
fwait
pusha
test
jge
scas
lds
dec
inc
lsl
jae
push
lahf
retf
push
loop
jmp
push
pop
add
mov
push
mov
adc
pop
jo
movs
arpl
xchg
scas
mov
in
ins
mov
add
imul
dec
xchg
cmp
clc
add
jae
push
mov
int3
jne
es
js
out
ss
or
shr
retf
sbb
call
inc
xchg
pop
jbe
xchg
pop
daa
mov
jne
sub
sub
into
or
xchg
stos
adc
jl
jle
cmp
sahf
enter
push
inc
es
sti
loopne
das
ds
cmc
stos
jg
adc
out
xchg
inc
inc
outs
bound
xor
aam
xlat
dec
mov
les
push
stos
sub
inc
(bad)
jcxz
inc
cwde
adc
xchg
xchg
stos
sbb
inc
or
stc
dec
xchg
xlat
pop
dec
scas
lock
outs
sbb
repnz
xorps
repz
inc
scas
aas
movs
mov
int
cmp
fdivrp
fmulp
pop
lock
stos
das
xor
cld
or
sbb
push
pop
call
xchg
shl
test
(bad)
out
mov
arpl
pop
push
xor
fld
movs
xchg
dec
nop
out
sahf
mov
and
dec
jnp
stos
inc
cmc
in
push
mov
inc
mov
jmp
gs
mov
shl
(bad)
repnz
xchg
jno
mov
xor
sahf
jb
push
cmps
stos
jle
dec
dec
mov
or
sbb
test
movs
test
shr
dec
aam
movs
or
dec
mov
addr16
cmps
int3
or
iret
push
jo
pop
push
popf
call
mov
lods
mov
xor
sbb
pusha
dec
mov
out
adc
cwde
hlt
dec
mov
out
int
mov
mov
add
ror
inc
and
lahf
sahf
mov
xchg
in
add
mov
pop
cmp
push
push
cmp
sbb
inc
xchg
fsubr
shr
in
cmp
and
(bad)
mov
xchg
adc
pop
xchg
pop
movs
mov
xchg
mov
mov
push
xor
jle
xor
in
neg
cld
and
shl
sahf
pop
xor
leave
mov
jns
repnz
fsub
loop
out
les
cs
push
push
(bad)
ins
adc
outs
push
(bad)
fild
sub
shl
scas
pop
(bad)
pusha
fidiv
das
fistp
arpl
dec
cmps
and
retf
ds
outs
int
dec
mov
mov
mov
xchg
test
ret
addr16
or
push
sub
xchg
cld
cmps
(bad)
mov
ret
dec
push
fwait
push
cmps
ds
and
nop
cmp
les
repz
std
(bad)
push
sub
xlat
fisttp
xchg
nop
xchg
adc
das
sbb
cmp
test
add
pop
sub
outs
mov
das
cwde
push
clc
test
test
loopne
jecxz
out
xor
repnz
push
and
dec
pop
jmp
push
dec
fimul
xchg
or
sbb
lea
pop
mov
sbb
cdq
or
imul
pop
cmp
add
push
cs
loopne
xchg
ins
shr
mov
cmps
shl
xchg
shl
fisttp
outs
pop
lods
xchg
loope
retf
ja
jecxz
sbb
sbb
fwait
cmp
clc
mov
mov
retf
inc
xor
cwde
pop
mov
cmps
mov
dec
mov
cmc
adc
pop
lds
(bad)
ficomp
mov
dec
cmps
jg
out
sbb
adc
sub
repnz
jp
ret
(bad)
div
xchg
mov
fimul
push
movs
cmp
cmp
mov
xchg
mov
in
icebp
fist
aaa
repz
sar
push
sbb
out
xor
or
out
mov
hlt
push
fs
pop
lods
inc
push
test
fild
xlat
cmp
jge
xchg
fsubr
adc
lea
fbstp
fucomi
dec
out
pop
mov
imul
mov
lods
mov
mov
outs
cld
jmp
data16
(bad)
xchg
and
in
inc
test
push
mov
ja
cdq
and
add
aad
pop
or
cwde
push
xchg
cmps
jno
lea
push
adc
hlt
sbb
xchg
pop
rcr
mov
clc
imul
jg
or
xchg
xchg
lods
mov
mov
ret
sbb
mov
and
push
shr
and
push
push
dec
out
mov
imul
xor
xchg
push
dec
loopne
movs
inc
rcl
or
mov
or
sub
add
mov
or
inc
jae
jge
test
ds
and
jle
shl
mov
dec
adc
mov
fwait
lahf
ror
xlat
xchg
adc
loopne
fwait
repz
inc
fisttp
adc
(bad)
bound
je
dec
pop
jg
xchg
mov
adc
jl
aaa
arpl
pushf
push
cmp
or
add
fdiv
adc
and
or
outs
lods
adc
inc
test
ins
dec
popf
mov
push
lahf
in
jp
ja
retf
(bad)
stc
push
sbb
add
push
inc
mov
push
mov
adc
imul
popf
pop
adc
or
test
dec
mov
xchg
aad
jmp
pop
rol
cdq
sahf
xchg
cmps
movnti
cs
enter
xchg
cmc
xchg
(bad)
iret
icebp
(bad)
sub
ret
mov
or
mov
cmp
mov
adc
int
xchg
xor
xchg
mov
ja
mov
mov
mov
int
add
and
in
nop
or
fsub
sub
xor
xchg
cli
cmp
mov
sbb
out
pop
dec
jp
mov
(bad)
mov
test
cld
call
(bad)
dec
inc
mov
dec
loop
(bad)
mov
fadd
in
mov
dec
fwait
mov
int
imul
and
sar
scas
scas
aaa
jl
mov
mov
loop
jge
addr16
pop
push
outs
int3
cmp
dec
(bad)
pop
cmps
pushf
dec
mov
aam
shl
inc
jmp
iret
inc
mov
test
idiv
mov
sbb
dec
dec
leave
fisubr
sub
ins
xor
sbb
sbb
jne
cwde
xchg
mov
iret
push
call
(bad)
stos
cmp
xchg
mov
ret
stc
xor
loope
or
add
int3
lods
(bad)
cmp
jge
pop
sub
jle
aam
mov
out
and
pop
int
mov
fist
div
mov
jmp
inc
sub
je
mov
jb
adc
stc
popf
loop
pop
nop
xor
out
inc
aas
lahf
lods
add
out
pop
and
rcr
add
fldenv
sub
bnd
inc
in
push
xor
shl
pop
stc
xchg
test
push
ret
std
imul
call
push
das
and
out
stos
aas
ja
mov
scas
dec
mov
push
cmp
(bad)
or
sar
dec
loopne
add
scas
loopne
movs
addr16
jb
xor
dec
and
xchg
nop
push
lock
nop
scas
test
xchg
cmps
dec
aas
jo
(bad)
cdq
and
inc
add
cld
cmc
push
cmp
push
add
hlt
call
js
aam
stc
sbb
xchg
mov
mov
aad
aam
add
in
loop
mov
movs
dec
pop
pop
xor
xchg
popa
mov
xchg
jecxz
enter
jns
test
cmps
mov
pop
ret
mov
add
fwait
cmc
daa
cdq
xor
mov
or
jo
(bad)
mov
dec
jne
xor
leave
sbb
add
xor
inc
or
fimul
push
lods
fimul
ud2
leave
mov
cmp
jg
mov
pushf
sub
sti
sets
adc
(bad)
mov
mov
fwait
int3
sub
ja
xchg
pop
movs
and
add
mov
push
and
cs
and
mov
cs
push
loop
sub
cmc
push
xchg
push
in
xchg
push
mov
nop
and
xchg
add
mov
retf
jle
(bad)
jae
mov
mov
shl
push
add
jbe
(bad)
std
pop
cmp
pop
push
jae
leave
sar
jno
jg
stos
ins
or
stos
and
sar
or
aam
cmp
add
out
push
stos
dec
xchg
add
mov
rol
adc
mov
cmps
out
leave
aas
xor
out
dec
cld
shr
push
add
inc
inc
je
div
retw
jl
lahf
cdq
das
or
cmp
or
mov
fadd
pop
push
icebp
mov
jp
into
stos
cmp
pop
jg
cld
jb
call
je
dec
test
(bad)
push
push
push
pop
jp
xchg
mov
adc
hlt
jne
jnp
aam
nop
ror
ins
pop
dec
xor
push
adc
shl
sub
pusha
popf
sub
sti
push
js
pop
outs
out
mov
push
or
cmps
push
(bad)
dec
jae
and
or
pop
sbb
ss
mov
lock
mov
xchg
jne
cld
mov
push
jp
adc
mov
pusha
push
lds
rcl
lock
stos
(bad)
mov
jno
test
mov
imul
es
arpl
out
adc
adc
mov
cli
sbb
movs
mov
movs
gs
jmp
jmp
sbb
scas
js
lahf
and
movs
cmp
popa
out
dec
push
retf
dec
aad
imul
push
mov
jb
fdiv
icebp
pop
add
cmps
jae
dec
test
cmp
xor
jne
aas
cmp
xchg
jb
push
inc
sbb
(bad)
fld
jmp
push
loopne
popf
pop
xchg
xchg
add
push
xor
ja
stos
or
dec
(bad)
aad
dec
stos
js
lods
and
push
and
pop
dec
cmps
lods
jno
add
pop
fdivr
shl
das
adc
push
test
inc
jmp
sub
xor
jns
movs
mov
outs
cld
cwde
xchg
stos
push
jns
adc
daa
or
leave
ficom
mov
xchg
test
inc
push
test
(bad)
popf
(bad)
mov
pusha
dec
fstp
push
neg
inc
and
enter
leave
add
mov
mov
mov
mov
test
mov
sub
add
xor
add
inc
out
jns
cwde
pushf
mov
xchg
jo
(bad)
shl
ror
xor
rol
inc
push
mov
and
jb
dec
call
(bad)
js
xchg
sub
addr16
cmc
xor
cmp
out
adc
mov
fisttp
cmp
in
dec
mov
out
ret
test
add
js
lods
in
mov
jno
pusha
jbe
mov
adc
imul
adc
lods
dec
iret
loopne
inc
adc
in
js
stos
push
ror
cmps
fsubr
cli
mov
xchg
scas
stc
mul
jecxz
jno
sub
add
inc
mov
jbe
sbb
sbb
(bad)
in
test
xchg
mov
cmp
aas
mov
je
add
adc
sub
jb
clc
shl
sub
addr16
sbb
sub
aad
or
or
dec
inc
xchg
(bad)
fbstp
jnp
dec
jb
mov
sub
pushf
(bad)
fld
dec
mov
push
lods
push
out
das
mov
inc
xlat
push
fistp
pop
jecxz
adc
push
add
mov
sbb
repnz
stc
adc
lea
jecxz
in
sub
xchg
xor
sbb
mov
pop
cmc
aaa
dec
adc
and
mov
add
in
and
repz
jmp
xchg
mov
scas
xchg
sbb
inc
dec
mov
pop
repz
dec
mov
mov
dec
mov
popf
fnstsw
mov
lea
loope
jo
jmp
pop
sahf
(bad)
in
mov
inc
push
xchg
push
jmp
les
adc
xchg
out
lods
add
xor
call
cdq
push
inc
retf
lahf
jno
dec
push
adc
adc
rol
dec
mul
and
pop
clc
mov
sub
xchg
cld
inc
pushf
mov
clc
fwait
adc
mov
fwait
sub
add
adc
jl
fs
mov
cmps
aam
clts
and
(bad)
pop
jmp
push
loopne
arpl
pop
dec
retf
cld
jl
scas
out
dec
ret
mov
push
mov
xchg
or
sbb
es
mov
mov
(bad)
and
mov
imul
dec
mov
push
xchg
ins
or
lea
fnsave
mov
in
cdq
ja
dec
repz
or
inc
sahf
js
mov
fs
ins
or
push
fnsave
mov
repnz
outs
sub
ins
jecxz
add
aad
popf
mov
jle
shl
ss
(bad)
inc
lods
inc
push
dec
(bad)
adc
icebp
mov
into
iret
jb
jp
dec
std
lea
in
out
add
fisttp
or
ficomp
in
or
adc
dec
imul
aaa
out
adc
popf
repnz
push
lahf
cmps
sti
cmp
mov
les
imul
mov
aam
cli
and
pop
mov
dec
mov
sub
and
imul
pop
(bad)
or
or
adc
sbb
jnp
lods
(bad)
adc
movs
es
rcl
sahf
xor
out
mov
in
jg
push
mov
mov
(bad)
int3
in
dec
ror
cmp
xor
xchg
pop
dec
leave
xor
xchg
lahf
cmp
mov
scas
xor
mov
mov
mov
dec
xchg
mov
pop
bound
push
fldenv
not
rcl
fist
aam
retf
sbb
ins
dec
pop
and
or
int
ss
je
arpl
pop
lahf
fsubp
fcmovnbe
push
xor
out
xchg
aam
inc
ror
dec
dec
adc
pop
push
inc
and
mov
jge
aas
jge
call
xchg
sbb
scas
daa
loop
add
icebp
cmp
into
xchg
mov
adc
xchg
dec
enter
xor
imul
push
or
xchg
test
rol
xlat
hlt
lock
cmps
inc
cmp
jp
dec
lds
hlt
dec
outs
cmp
jmp
leave
nop
sbb
cmp
lahf
mov
lock
aaa
push
mov
fdivrp
dec
dec
adc
sbb
je
xor
pusha
(bad)
push
inc
pop
jmp
outs
pop
mov
out
les
(bad)
cmp
mov
stos
inc
(bad)
mov
rol
outs
add
xchg
cmps
cmc
or
jl
cmp
aaa
bound
xchg
xor
(bad)
mov
jge
in
fidivr
inc
mov
mov
neg
out
mov
inc
repnz
cmp
pop
clc
repnz
sub
jne
jns
or
mov
dec
mov
push
mov
arpl
and
jle
ror
and
or
jns
sub
jle
sub
outs
or
mov
sbb
fstp
and
mov
dec
pop
mov
jecxz
aam
arpl
add
arpl
jns
add
fistp
sub
mov
push
retf
hlt
or
jle
leave
or
fnstcw
jbe
fistp
(bad)
popf
dec
fdiv
rol
sbb
repz
hlt
cmp
fcmove
sbb
(bad)
cli
pop
imul
pop
mov
aad
cvtdq2ps
cmps
dec
out
(bad)
add
dec
dec
push
(bad)
movs
xchg
mov
sub
dec
jl
sbb
les
jmp
mov
jno
jne
dec
dec
add
mov
and
lahf
cmp
scas
stos
mov
fnstenv
mov
js
retf
add
cmp
jmp
(bad)
xchg
(bad)
stos
adc
add
jne
xor
mov
test
jl
push
xor
sub
or
jg
push
test
inc
data16
sub
in
pusha
mov
pushf
jb
mov
test
popf
mov
(bad)
and
icebp
adc
(bad)
adc
and
jne
ficom
or
shr
push
or
sbb
shr
mov
gs
mov
jbe
xchg
mov
jle
cld
dec
scas
in
xchg
dec
fisub
ficomp
outs
pop
xchg
inc
fimul
cmp
push
sahf
mov
les
into
aam
xor
rcr
rcr
fwait
jo
pop
xchg
sbb
xor
ss
and
xchg
cli
scas
sbb
pop
dec
mov
mov
(bad)
ins
loope
fnsave
sbb
cmp
push
loope
xchg
dec
(bad)
idiv
jo
or
inc
stos
cmc
call
xor
test
jnp
cmps
in
xor
mov
cmp
cli
stos
into
xchg
or
sub
push
sar
mov
sbb
bnd
xor
push
jl
fs
adc
mov
mov
outs
imul
retf
repz
popf
cmp
mul
repz
fadd
xchg
push
icebp
mov
dec
inc
and
and
mov
aaa
adc
push
lods
daa
shl
not
jnp
dec
sbb
(bad)
mov
dec
or
fisttp
stc
xchg
mov
stc
aaa
repnz
add
push
fisub
adc
pop
pop
test
xchg
stc
sub
popa
dec
mov
push
jno
(bad)
and
xlat
bound
inc
mov
pop
dec
pop
push
sbb
adc
mov
xchg
sub
inc
dec
cmps
sbb
rcr
inc
(bad)
mov
shl
inc
ins
std
jp
jp
iret
movs
not
mov
fwait
mov
sub
mov
aas
lods
loopne
dec
jb
enter
cmp
mov
jne
jl
mov
add
das
inc
outs
mov
mov
arpl
xor
cdq
mov
dec
jecxz
cmp
(bad)
in
test
cmc
out
jo
dec
push
pusha
pop
mov
jge
imul
lea
cwde
or
(bad)
push
and
push
adc
adc
xor
xchg
jo
mul
add
adc
or
xchg
addr16
push
sahf
sbb
dec
imul
pop
jbe
loope
adc
dec
jb
xchg
sub
jae
div
mov
pusha
jne
mov
inc
jnp
lods
cld
and
mov
pop
inc
adc
daa
mov
xor
dec
(bad)
fstp
cmps
jnp
xor
inc
(bad)
push
and
popf
xchg
inc
out
jb
xchg
call
imul
mov
sbb
dec
add
adc
sbb
push
mov
(bad)
fnstcw
imul
popa
rcl
loop
(bad)
mov
test
mov
push
push
lds
inc
fbld
dec
jne
adc
adc
sbb
mov
xor
outs
mov
mov
or
inc
pop
sbb
lds
sub
jle
loop
pop
pop
xchg
leave
mov
jp
sub
sbb
popa
push
idiv
hlt
xchg
push
sub
shl
and
ror
cwde
jns
push
dec
ds
cmp
add
inc
lods
ja
dec
xchg
jecxz
dec
stos
ins
add
and
inc
jno
push
mov
fstp
and
jbe
leave
pop
(bad)
fisub
ret
pop
arpl
adc
cmp
jbe
repz
repz
int3
pop
loop
sti
and
stc
jp
das
pop
aas
lea
das
and
xlat
shl
neg
pop
add
xchg
ins
adc
lds
push
jecxz
hlt
ins
add
dec
out
jmp
ja
mov
ins
jae
retf
pop
dec
push
xchg
shl
xchg
add
clc
out
jmp
cmp
shr
xchg
and
test
xor
shr
mov
and
ret
rol
xor
das
add
test
aas
sbb
jle
inc
pop
(bad)
xor
ins
loop
mov
push
loop
fwait
mov
(bad)
cmp
push
push
add
fisttp
inc
dec
fdiv
or
pop
adc
mov
rcr
push
rcr
mov
nop
scas
gs
xor
ficom
ins
out
imul
imul
xor
mov
add
in
inc
movs
lea
loopne
mov
iret
adc
mov
cmp
sbb
clc
stos
pop
mov
les
mov
adc
mov
jmp
cmps
imul
mov
dec
xchg
lock
cmp
cmp
leave
pop
cmps
js
jmp
push
(bad)
dec
or
or
mov
ss
adc
adc
and
xchg
add
test
outs
jmp
sub
call
(bad)
pop
adc
or
call
rcl
cdq
jmp
dec
gs
mov
movs
retf
retf
(bad)
jmp
arpl
aam
jae
retf
jmp
sub
push
sbb
pop
out
popf
inc
pop
stos
fisub
xchg
add
and
dec
adc
xor
aaa
fmul
adc
es
addr16
push
rol
jns
xor
xchg
ss
fs
inc
(bad)
mov
enter
push
call
push
adc
(bad)
in
cmps
fimul
add
xchg
js
outs
mov
xchg
lods
xchg
and
fimul
lock
push
sbb
jae
mov
inc
sbb
shl
add
aas
mov
arpl
cmp
mov
jge
pop
mov
loop
push
int3
pop
pop
inc
push
pop
add
call
fisttp
jo
pop
(bad)
mov
(bad)
or
out
adc
add
es
mov
and
sti
(bad)
repz
fild
sub
mov
pop
sbb
sub
leave
sub
in
inc
jl
and
pushf
cmp
xlat
in
cmp
fadd
mov
push
jb
mov
or
jl
jecxz
out
sub
(bad)
adc
(bad)
pop
or
pushf
push
add
(bad)
out
int3
adc
fild
movs
cdq
in
popf
(bad)
cs
adc
mov
or
xor
ror
popf
add
lea
in
sub
and
xor
dec
test
sub
enter
pop
cwde
pop
mov
xchg
xor
call
mov
xchg
repz
mul
fst
fcmovu
aad
jnp
ficomp
sti
jecxz
cmp
or
jo
out
xchg
xchg
aaa
pusha
dec
sbb
or
jle
adc
mov
shl
loop
dec
aas
scas
lods
push
pusha
enter
xor
push
retf
movs
cmp
les
mov
loopne
repz
leave
or
out
retf
sbb
pop
(bad)
lahf
imul
call
inc
out
inc
in
cmp
push
jo
mov
(bad)
sbb
inc
into
cs
inc
sahf
inc
pop
push
(bad)
xchg
cli
outs
jecxz
cmp
push
out
jmp
(bad)
dec
push
xor
push
aam
sar
dec
ficom
jno
inc
das
mov
or
pop
pop
stos
mov
mov
movs
push
xor
cmp
sub
xor
test
push
jns
dec
mov
mov
(bad)
in
ficomp
imul
jbe
js
add
iret
leave
and
mov
mov
sbb
pop
pop
iret
dec
pushf
push
push
jae
sub
outs
inc
and
sub
repz
jb
ret
sub
test
shl
xor
or
dec
add
add
jp
fsub
xor
or
popf
or
adc
cmp
xchg
push
xchg
outs
adc
mov
and
xor
fdiv
or
aam
or
cmc
adc
shl
imul
imul
add
rcr
push
jnp
lods
fild
lock
les
and
jo
retf
push
in
inc
pop
xchg
push
sbb
out
iret
jb
ficomp
(bad)
dec
inc
iret
sti
and
sub
or
stos
(bad)
mov
pop
cmc
mov
xor
and
gs
aas
inc
mov
icebp
stos
call
sub
in
push
jle
jp
sbb
dec
test
test
or
xor
test
std
inc
mov
xchg
jo
(bad)
jns
icebp
mov
cld
outs
test
js
lods
push
or
jb
gs
add
jb
jg
sbb
sbb
mov
add
int
sub
mov
sbb
jno
iret
(bad)
xor
pop
je
sub
hlt
push
jecxz
or
jno
pop
push
nop
mov
ret
sbb
mov
dec
pop
cmc
es
in
dec
iret
pusha
dec
cmps
nop
push
mov
or
add
mov
jne
mov
mov
enter
mov
and
outs
xchg
mov
sbb
or
jmp
adc
mov
std
leave
xor
out
pop
out
adc
pop
mov
jmp
jo
push
xchg
xlat
cdq
push
arpl
sub
cld
dec
cmp
(bad)
jb
and
and
in
retf
mov
lods
sti
mov
or
addr16
mov
shl
sub
sbb
dec
add
push
pop
pusha
stos
fnstsw
cmp
or
not
cmpxchg
xor
pop
out
jbe
cli
hlt
or
adc
nop
lock
rcl
push
dec
mov
or
data16
mov
mov
pop
aam
jae
dec
push
js
outs
push
loope
sbb
pop
(bad)
sbb
or
dec
and
cmps
call
xchg
call
mov
xor
mov
sbb
add
jp
push
and
jmp
cmp
int3
cdq
or
and
and
sar
mov
xchg
retf
jmp
jbe
int
std
popf
popa
aaa
in
pop
sub
inc
dec
mov
sub
and
pop
hlt
aam
pop
pop
and
cmp
leave
sti
jl
mov
fwait
add
in
xchg
dec
retf
cmp
xchg
gs
test
mov
stos
(bad)
inc
or
and
or
nop
mov
div
ss
(bad)
sub
(bad)
adc
push
mov
out
mov
jp
inc
movs
jp
jb
test
add
test
imul
sahf
push
fs
aam
jno
adc
mov
shl
mov
or
inc
stos
mov
hlt
push
sbb
aam
das
xchg
push
ficomp
popa
mov
cmps
xor
and
adc
mov
jns
sahf
sbb
aam
sub
out
sub
adc
test
gs
out
popa
and
mov
pop
sbb
fsub
mov
leave
ret
fisttp
inc
push
sbb
push
push
icebp
push
pop
ja
loope
sbb
xchg
retf
jno
pop
jae
and
adc
cvtdq2ps
lods
jae
cmp
rep
jl
xor
push
mov
int3
mov
inc
cmp
pop
push
inc
pop
pusha
mov
mov
ins
sti
sbb
and
ret
les
cwde
mov
jge
cmc
pushf
jbe
fwait
mov
rol
stos
pop
dec
adc
dec
dec
lods
push
mov
add
ins
leave
(bad)
pop
sbb
dec
out
sub
xor
into
(bad)
fnstenv
or
or
cdq
jl
scas
push
push
div
data16
push
mov
jecxz
imul
movs
mov
xlat
xchg
pop
jmp
iret
cmp
repz
lock
push
mov
xor
pop
mov
aaa
jmp
stos
cli
xor
les
inc
and
dec
adc
mov
xchg
mov
daa
out
shr
dec
jbe
adc
and
push
adc
dec
cmps
ret
cmps
add
xchg
mov
or
test
repz
or
cli
dec
pop
sub
outs
cdq
push
mov
or
pushf
iret
aas
add
adc
sar
sub
sub
mov
mov
xchg
call
loope
jg
stos
sar
jb
push
add
je
in
pop
movs
dec
jnp
icebp
loope
dec
add
ins
or
rol
imul
jl
sbb
clc
cmp
jne
ror
outs
xchg
mov
out
arpl
call
int3
jl
test
and
fsubrp
add
add
mov
jbe
mov
add
retf
fs
pop
je
inc
in
mov
add
sub
dec
jne
push
stos
pushf
mov
pop
jp
mov
xchg
jg
mov
hlt
int
mov
(bad)
fisttp
arpl
(bad)
loopne
adc
mov
into
sahf
outs
mov
mov
push
xchg
pop
xchg
inc
and
fadd
push
outs
sub
xor
ficom
cwde
jb
mov
stc
xchg
mov
rcl
push
jo
jmp
clc
or
sbb
fs
(bad)
int
dec
sub
xchg
sbb
or
mov
cwde
rcl
and
push
sbb
daa
inc
inc
mov
inc
jmp
addr16
lods
fwait
pop
add
fld
icebp
pop
stos
test
push
mov
xor
mov
loop
(bad)
outs
icebp
jp
push
(bad)
out
mov
or
push
addr16
push
xlat
jo
adc
push
inc
test
retf
pop
sti
jmp
loop
add
cmps
pushf
pop
cmc
push
jmp
push
mov
jb
mov
xchg
mov
xchg
repz
push
cmps
bound
jne
mov
jo
mov
xchg
push
and
mov
push
xchg
fstp
sbb
mov
mov
js
inc
inc
or
out
out
pushf
pop
cmps
cmp
mov
outs
push
bound
(bad)
cdq
call
jnp
dec
call
call
rcl
and
mov
push
ret
sar
retf
lds
cmps
mov
sbb
mov
jle
fld
mov
mov
ins
mov
fcom
dec
pop
in
aas
sub
inc
pop
jno
cmps
loope
add
xchg
and
push
sbb
movs
retf
inc
retf
xlat
mov
into
adc
push
push
lahf
repnz
xchg
fild
aaa
xor
cmp
xchg
xchg
xchg
push
aas
clc
push
and
dec
mov
mov
adc
movs
xor
imul
arpl
leave
rcl
mov
fbstp
xor
mov
sub
dec
jecxz
pop
dec
(bad)
and
call
dec
mov
or
hlt
aam
push
and
(bad)
xchg
ds
cmp
fs
cmp
cmp
aam
mov
and
sti
add
and
jmp
lock
test
int
cmps
cmc
push
inc
add
jbe
sti
adc
int
add
popf
das
mov
sub
pop
push
stc
fldcw
loopne
and
out
cmp
dec
movs
mul
stos
or
out
dec
dec
and
ret
pop
or
sub
icebp
cmp
in
pop
fcomp
ds
addr16
(bad)
ja
xor
inc
cmps
inc
push
cld
imul
push
ficom
jae
mov
bound
dec
and
pop
add
cmp
inc
dec
int3
mov
lods
out
cmc
retf
sbb
push
dec
mov
dec
icebp
fimul
pop
inc
loopne
sub
xor
mov
ret
push
lock
adc
shl
push
sahf
mov
push
in
je
mov
or
outs
retf
clc
push
mov
mov
or
adc
mov
and
outs
mov
xchg
xor
add
jne
xchg
cwde
inc
and
jae
jge
jbe
jecxz
xor
xor
sub
test
pop
js
movs
pop
dec
inc
pop
cmps
fidiv
mov
xlat
mov
inc
push
dec
and
sbb
sub
les
mov
loope
scas
pop
adc
pushf
pusha
jg
cmps
int
sub
fnsave
in
sbb
stos
lods
ror
pop
addr16
pop
dec
fwait
push
add
dec
mov
cmps
aam
dec
sti
popf
retf
push
dec
icebp
loopne
push
mov
ss
xchg
mov
gs
sub
imul
pop
iret
pusha
fnstsw
dec
ins
mov
cmc
inc
in
lds
mov
adc
mov
xchg
nop
push
sub
mov
pop
aad
imul
jne
pop
xchg
and
jae
sahf
retf
ss
sub
ins
fldcw
mov
clc
cmp
repz
out
dec
je
jmp
push
jmp
test
adc
in
(bad)
int3
push
jo
or
sbb
cmp
xchg
fisubr
mov
aam
dec
push
scas
adc
in
inc
cmp
adc
retf
cmps
jge
pop
jg
mov
add
push
push
out
and
mov
enter
push
inc
mov
dec
clc
jno
jo
js
and
sub
cmp
sbb
mov
add
dec
std
dec
xchg
inc
xor
fld
ins
rol
shr
and
int3
or
mov
mov
add
cmps
inc
mov
repz
movs
fsubr
mov
pop
xor
jecxz
hlt
les
loope
(bad)
pop
(bad)
push
sti
add
mov
jno
frndint
fidivr
cs
dec
xchg
dec
mov
(bad)
fwait
inc
(bad)
imul
push
pop
cmp
loopne
out
mov
cmp
xor
push
jmp
push
mov
outs
dec
jnp
in
out
and
fst
mov
push
daa
jae
push
icebp
lds
and
pop
pop
cdq
jns
pop
push
pop
push
adc
sub
mov
daa
pop
stc
push
push
bound
cmc
das
adc
neg
in
pop
mov
sub
pop
or
ins
leave
adc
mov
outs
push
and
sub
in
retf
jmp
pop
adc
ja
adc
cmps
dec
ja
mov
push
pop
cld
and
xor
push
xor
dec
enter
jl
add
mov
into
repnz
xor
dec
push
push
adc
xchg
ret
or
scas
cmp
jne
push
xor
mov
js
cs
mov
imul
or
iret
loop
popf
out
and
push
add
enter
and
iret
cdq
mov
jno
out
call
dec
adc
(bad)
sbb
(bad)
jmp
push
out
mov
mov
pop
sub
popf
cmp
ja
add
push
sub
das
rol
mul
ins
in
push
shl
dec
xchg
sub
sti
mov
clc
sub
arpl
sti
dec
sbb
int3
inc
push
test
call
mov
sbb
cmp
cmp
call
lods
mov
call
out
dec
out
fcomp
add
push
push
or
dec
(bad)
call
lock
clc
xor
xor
bound
cmp
pop
adc
popa
inc
jno
dec
ja
cmp
pop
pop
pop
stos
xchg
or
mov
cdq
ret
fbld
sub
jle
adc
or
les
jl
xchg
dec
adc
(bad)
xor
xchg
loop
mov
int3
cmp
rcr
xor
xchg
push
rol
js
sbb
mov
push
jno
sub
mov
cmc
add
movs
scas
(bad)
xor
sbb
aam
jno
aam
bound
bound
xor
cwde
rol
(bad)
pusha
add
lds
dec
push
push
cmp
push
aad
inc
scas
sbb
ja
(bad)
ss
dec
and
scas
inc
mov
mov
adc
sar
loopne
mov
xchg
sbb
stc
pop
ds
nop
and
push
cmp
fist
jl
sub
enter
inc
test
inc
xchg
test
adc
int
rol
(bad)
fild
test
cmp
push
adc
jne
test
(bad)
jnp
add
pop
sbb
mov
out
mov
aaa
pop
jmp
push
mov
push
mov
pop
aas
into
mov
repnz
pop
mov
cld
sbb
cld
arpl
dec
dec
jnp
lods
pop
or
cld
pop
test
push
ins
outs
and
or
sbb
mov
sub
aaa
jmp
ret
fs
sub
jbe
mov
add
(bad)
repnz
out
xchg
mov
jle
sub
add
rcl
aaa
add
mov
(bad)
in
in
cdq
sub
jae
aad
push
sub
mov
mov
fdiv
dec
test
test
out
pop
push
push
out
sbb
enter
mov
shr
jecxz
(bad)
mov
inc
mov
jl
(bad)
pop
out
test
sbb
frstor
lock
and
cdq
cli
dec
bound
out
outs
(bad)
adc
add
push
add
test
lods
outs
int3
je
adc
fsubr
scas
inc
push
in
pop
sub
or
test
pop
jecxz
in
xor
and
cld
and
lods
xchg
jnp
pop
mov
shl
pop
fucom
push
jo
jno
(bad)
mov
cmp
mov
outs
jmp
clc
xchg
and
pop
push
xor
shr
imul
in
push
xchg
popf
in
pop
mov
movlps
mov
sub
jl
das
lods
nop
mov
pop
mov
sub
daa
jnp
shl
pop
cs
enter
test
ja
pop
fs
push
mov
(bad)
push
mov
sub
hlt
call
cdq
test
in
sub
xchg
add
pop
fistp
shl
movs
xchg
jbe
sti
add
push
(bad)
rep
adc
inc
dec
mov
(bad)
out
mov
sbb
mov
xchg
aas
cmp
outs
inc
push
dec
mov
inc
outs
mov
xchg
gs
movs
mov
mov
pop
cmp
inc
and
aaa
retf
rcr
stos
xchg
push
(bad)
vmread
sub
ins
jl
sbb
xchg
sub
into
adc
dec
sub
sbb
in
add
ss
sub
call
fsub
cmps
jecxz
hlt
out
mov
(bad)
call
(bad)
cmps
js
xor
dec
jb
mov
jno
mov
movs
adc
fisttp
jp
test
and
and
cld
inc
mov
mov
sub
add
aad
push
inc
or
data16
push
jp
add
pop
int3
cld
ficomp
lods
(bad)
in
rcl
and
sub
ror
add
bound
aas
in
mov
std
xor
leave
add
jns
lods
jmp
pop
test
cmp
xchg
scas
or
cmps
in
daa
sahf
mov
adc
cwde
mov
shl
adc
fidivr
cmp
sbb
push
sbb
inc
retf
dec
into
or
jns
loope
imul
ret
adc
cwde
pop
outs
push
mov
or
mov
fsubr
lea
pop
mov
xlat
dec
push
stos
inc
call
les
dec
dec
pushf
pop
retf
dec
pop
es
mov
mov
jmp
rcr
xchg
and
xchg
adc
push
mov
jle
stc
dec
pusha
fcmovbe
cmp
idiv
pop
jnp
xor
fucom
add
icebp
pop
ss
fcomp
or
data16
stos
cmp
std
stos
mov
pop
mov
jp
pop
push
stos
das
or
push
outs
repz
repz
sar
add
in
neg
fs
adc
pop
xor
fsubr
ds
and
xchg
pop
iret
dec
enter
push
repnz
sahf
pcmpeqb
pop
xchg
inc
lock
out
mov
xor
(bad)
sbb
pop
ds
ret
mov
and
gs
push
dec
push
dec
inc
xlat
xchg
cwde
lea
cmp
ins
sar
ja
ins
stos
sbb
in
aad
push
out
sti
fsubr
jecxz
lods
in
fld
add
bound
cmp
(bad)
mov
or
test
sahf
iret
jp
and
(bad)
aad
lahf
mov
sub
lahf
fnstsw
mov
inc
mov
not
and
in
inc
fmul
add
aas
dec
xor
movs
mov
add
cdq
jb
test
or
mov
(bad)
mov
cs
ror
mov
mov
xchg
push
popf
sbb
fisttp
pop
cli
xchg
pop
and
lock
pop
cmp
arpl
dec
popa
and
sbb
pop
and
add
xor
clc
add
out
cld
mov
jmp
or
fist
or
(bad)
fcom
(bad)
scas
and
mov
ds
xchg
jecxz
arpl
sub
(bad)
dec
call
dec
fsubr
test
imul
push
jne
imul
or
lods
adc
nop
push
icebp
lahf
jo
and
mov
ror
xchg
fnstenv
test
xchg
out
push
dec
or
jns
inc
rcr
call
push
pushf
jns
jmp
mov
mov
and
(bad)
hlt
pop
fadd
mov
xchg
xchg
xchg
std
ror
arpl
and
in
jmp
mov
mov
aad
rol
ficom
inc
cmp
sub
jg
xor
lea
das
xchg
mov
in
movs
jnp
or
cmp
or
arpl
(bad)
mov
xor
sbb
les
outs
cmp
fdivr
xor
popa
mov
icebp
aam
add
rcr
push
mov
mov
mov
inc
pop
movs
mov
das
mov
jp
or
int3
aaa
sbb
call
xor
jecxz
ins
cld
test
mov
fst
xor
sahf
pop
ins
xor
je
or
leave
adc
das
test
push
push
clc
add
cmp
(bad)
call
call
call
inc
loopne
fistp
sbb
xor
retf
imul
sub
pop
sbb
mov
(bad)
and
mov
bound
cdq
jno
std
add
jo
push
imul
jle
pop
test
neg
push
and
(bad)
cmc
push
xchg
jle
sbb
mov
(bad)
shl
hlt
enter
push
inc
clc
movs
dec
daa
xor
lahf
mov
rcr
pop
xlat
ins
(bad)
cmc
into
(bad)
test
cli
add
rcr
int
pop
inc
push
pop
sbb
mov
jmp
(bad)
dec
xchg
imul
fsubr
and
ficom
mov
in
std
stc
aaa
or
or
movs
fnstcw
mov
js
shl
or
sar
repnz
fwait
movs
mov
sub
jo
movs
jbe
xchg
or
pop
jp
fsub
jns
fld
arpl
pop
jge
and
or
cdq
mov
jle
pop
cli
outs
adc
dec
adc
cmps
pop
inc
pop
shr
or
fdiv
mov
retf
lock
pop
bound
push
pop
push
push
pop
loope
scas
add
movs
mov
add
mov
ins
lea
imul
pop
aaa
push
push
or
mov
js
les
inc
out
pop
mov
mov
fwait
cmp
push
(bad)
xor
mov
cmp
mov
movs
sub
or
jnp
cmp
iret
xchg
in
lds
ins
icebp
arpl
sbb
(bad)
mov
data16
mov
jnp
adc
mov
dec
retf
push
fstp
movs
imul
adc
mov
js
inc
adc
jecxz
xor
jo
inc
iret
sbb
add
nop
adc
add
fisttp
sbb
(bad)
xchg
push
mov
imul
mov
or
push
repz
clc
xchg
cmp
mov
test
cs
jle
leave
pop
sub
mov
mov
sahf
sub
fnstsw
and
push
sbb
fs
gs
out
dec
pshufw
or
jg
xor
pop
aad
std
jg
and
xor
jmp
js
movs
xchg
cdq
test
or
mov
adc
call
mov
mov
mov
retf
sahf
imul
jae
(bad)
jae
and
inc
or
sub
push
push
or
cmp
gs
or
jp
and
jle
xlat
aaa
scas
adc
gs
jbe
ds
pop
sub
jne
inc
mov
add
add
mov
lods
push
push
dec
jle
add
pop
icebp
gs
test
mov
int
out
mov
mov
dec
and
es
mov
pop
jnp
or
call
or
outs
cmc
mov
mov
movups
mov
imul
inc
xchg
pcmpeqw
mov
shr
xor
jns
mov
pusha
and
mov
push
fsub
xchg
jp
test
sar
movs
clc
jmp
sbb
movs
sub
stc
adc
mov
dec
inc
and
add
popf
out
das
mov
sub
adc
push
bound
arpl
push
adc
out
pushf
xchg
mov
les
cmp
shr
pop
pop
push
dec
xchg
repz
and
add
ja
shl
out
add
add
or
ss
ins
sub
sar
dec
jnp
mov
arpl
cs
arpl
xor
cmp
sub
aad
pop
stc
xor
cmp
jb
scas
mov
test
(bad)
jl
je
enter
call
pop
scas
mov
xor
inc
push
mov
inc
add
xchg
and
add
xor
mov
xchg
in
adc
movzx
mul
nop
mov
js
adc
daa
pop
pop
xor
jns
shr
xchg
xor
fnstenv
jle
iret
dec
(bad)
mov
xchg
int3
aam
xor
xchg
std
pushf
inc
inc
push
adc
push
add
fisttp
or
mov
push
or
call
jp
xor
push
dec
clc
push
add
sub
cmp
fidivr
mov
mov
dec
scas
and
bound
xor
(bad)
push
enter
jns
pop
(bad)
push
ror
pop
out
std
mov
shl
ss
lods
pop
iret
shr
sbb
and
cli
jae
js
je
jg
inc
arpl
inc
mov
in
push
xchg
hlt
pusha
(bad)
jbe
int3
popf
lahf
push
sti
mov
push
outs
out
enter
ja
lds
int
cmps
pop
push
add
xlat
std
stos
dec
or
int
mov
sub
jl
and
aas
inc
lahf
cmp
mov
cmp
cmps
cmc
pop
or
pop
shl
push
push
int
(bad)
imul
inc
stos
jnp
adc
mov
dec
movs
cmps
shl
iret
xor
retf
push
aaa
clc
cwde
jb
sbb
xor
mov
push
mov
mov
cwde
adc
adc
fucom
pop
nop
shr
loope
loope
adc
xchg
adc
adc
dec
out
jnp
inc
add
repnz
or
icebp
mov
test
std
rcr
adc
cs
cli
sub
movs
dec
rol
sbb
ror
xchg
cmp
or
shr
add
inc
push
ins
test
jae
push
cmps
dec
sbb
lds
sub
mov
cmp
into
dec
sub
sbb
jno
mov
retf
imul
sbb
mov
mov
aaa
loope
push
mov
or
jns
inc
mov
dec
mov
ins
xor
call
xchg
push
pop
xor
push
sbb
mov
xchg
pop
add
push
fsubp
cmp
call
xor
leave
adc
mov
addr16
mov
jge
pop
aas
mov
int
fist
jno
fwait
adc
(bad)
xchg
push
jmp
cmps
fstp
pop
cdq
repnz
stos
aas
dec
je
int3
sbb
mov
in
dec
xchg
sbb
xchg
test
jne
jecxz
cmp
inc
mov
or
xchg
inc
pop
cdq
mov
mov
inc
in
or
adc
push
lds
pop
sub
sar
je
sar
add
pop
mov
jo
and
sbb
je
xor
push
sub
xor
je
mov
pop
ins
ins
add
cmp
push
out
adc
add
cmp
pop
pusha
mov
jge
gs
or
jns
aas
jl
adc
test
test
fisub
mov
adc
mov
(bad)
cmp
jo
repnz
mov
cmps
pop
jnp
test
jge
cs
jmp
push
into
fcomi
movs
inc
fadd
or
adc
add
(bad)
(bad)
out
or
aam
inc
je
pop
test
call
mov
mov
push
dec
stos
std
cld
dec
fild
pusha
pusha
arpl
pop
sar
push
jp
cmps
stos
aad
or
scas
mov
xchg
mov
sbb
mov
inc
mov
mov
sti
(bad)
xor
loopne
mov
out
adc
pop
mov
ins
add
pop
or
mov
lods
jo
fild
cmp
mov
test
lahf
cmp
mov
inc
xlat
(bad)
xlat
mov
movs
rcl
sub
mov
mov
rol
sbb
call
hlt
dec
or
fwait
jle
pop
push
jo
push
(bad)
fldcw
mov
outs
in
mov
je
sub
adc
jae
loopne
mov
out
mov
stos
xor
adc
pop
(bad)
push
or
shl
or
push
mov
outs
call
mov
mov
mov
call
jecxz
lds
in
xchg
pop
icebp
gs
(bad)
ror
(bad)
fild
ret
cdq
fld
pop
add
data16
mov
stc
icebp
push
sbb
mov
outs
aam
sahf
sbb
adc
pop
aad
in
movs
dec
push
rcl
ja
fdiv
or
sub
jo
inc
call
pop
mov
aaa
not
dec
stc
call
adc
out
push
sub
les
jno
inc
mov
cmp
dec
adc
or
inc
jno
sub
imul
push
in
bound
shl
xchg
push
push
sti
xchg
in
mov
mov
sbb
xchg
(bad)
adc
inc
xchg
aas
lahf
push
in
sub
retf
test
(bad)
call
out
sbb
test
xlat
pop
dec
adc
stc
add
jns
sar
test
or
jp
mov
jo
push
outs
and
inc
fnstsw
aaa
sar
repz
sar
ss
shl
and
daa
pop
retf
push
mov
rol
and
cmp
mov
sahf
hlt
cmp
das
mov
nop
test
jo
xchg
mov
(bad)
std
clc
loop
(bad)
sub
sub
mov
sbb
sub
imul
movs
cwde
out
push
jb
lods
hlt
ja
sbb
sub
fmul
cmp
add
hlt
adc
pop
mov
test
jbe
test
adc
xchg
cwde
fsub
adc
daa
div
jl
push
shl
mov
mov
dec
xchg
es
xor
sub
mov
mov
xor
jecxz
call
ss
aad
mov
sub
ds
mov
and
mov
es
rcr
pop
push
dec
push
ins
into
mov
or
mov
pop
inc
pop
adc
xor
xchg
nop
idiv
mov
mov
xchg
stos
fiadd
cdq
leave
mov
cmps
push
add
xchg
jecxz
sub
adc
sub
add
or
(bad)
sub
cmp
sbb
adc
mul
jecxz
sub
mov
xchg
mov
push
arpl
inc
call
movs
sbb
rol
out
mov
fst
sbb
pop
inc
xchg
mov
adc
into
adc
and
repnz
push
inc
mov
stos
test
mov
xchg
dec
xchg
sti
lds
xor
aad
hlt
and
push
dec
push
and
mov
(bad)
retf
cmp
lods
push
or
add
cmp
pop
lahf
add
inc
fcomp
loop
xor
test
daa
jmp
add
movs
adc
pop
leave
js
loope
jge
push
lahf
and
mov
dec
add
add
daa
jae
push
call
out
push
mul
sti
out
(bad)
pop
bound
jg
push
sub
or
lds
pop
mov
mov
rol
mov
call
lds
cs
mov
mov
pop
fadd
in
out
out
xchg
repnz
aad
mov
pop
arpl
sub
sub
adc
jg
jmp
dec
pop
pop
push
sbb
out
outs
into
push
clc
(bad)
ds
cmp
sti
neg
rcr
inc
imul
pop
dec
pop
inc
cld
add
loop
cmc
nop
out
int
jecxz
sbb
mov
pop
lds
inc
or
movs
sub
bound
sbb
push
fistp
test
add
lahf
cmp
pop
(bad)
mov
bound
pop
mov
enter
aad
(bad)
cmps
pop
imul
call
xchg
push
pop
and
ficomp
xchg
repz
sbb
jg
retw
popf
xor
sbb
mov
inc
jae
js
mov
xor
inc
fldenvw
xchg
push
retf
(bad)
pushf
sbb
not
popa
gs
mov
loope
add
cs
push
inc
cmp
fidivr
das
xchg
out
pop
mov
fst
or
and
push
std
adc
add
pop
ins
out
inc
aas
cmp
loope
(bad)
pop
mov
add
jge
pop
aam
mov
inc
scas
shl
lods
and
stos
scas
mov
pop
dec
sbb
(bad)
in
mov
lods
test
xor
int
pop
ror
xor
mov
loopne
pop
add
bound
mov
sbb
add
and
xor
movs
fcomp
add
mov
cdq
push
xchg
dec
dec
add
sbb
add
in
xchg
pop
mov
aas
aam
cmc
jmp
push
inc
mov
jg
add
out
js
sbb
inc
pusha
jno
ss
pop
pop
outs
sub
lahf
stos
cwde
xor
mov
push
je
into
cmc
push
fadd
jl
or
pushf
into
mov
test
pop
push
leave
cmp
mov
or
add
ins
cmp
es
std
cmp
push
xor
cwde
cdq
inc
xchg
pop
xchg
cmp
fstp
leave
(bad)
shl
neg
xchg
sahf
sub
es
(bad)
dec
cmp
adc
lods
movzx
mov
xor
push
push
xchg
popf
gs
sbb
enter
pop
gs
das
out
mov
outs
push
leave
or
pop
add
push
or
jno
push
dec
movs
shr
ins
jns
adc
sub
and
std
jl
add
lea
dec
xchg
outs
mov
sub
cmc
add
mov
jnp
ret
mov
shl
loop
pushf
or
aas
push
or
mov
cs
repz
dec
(bad)
movd
pop
test
fmul
shl
dec
hlt
neg
adc
cmps
in
int
sbb
jns
stos
pop
inc
inc
popa
mov
imul
mov
inc
dec
xor
jbe
mov
or
stos
jb
and
sbb
mov
stc
sbb
fild
repnz
inc
ins
cmp
gs
ror
xchg
in
xor
out
scas
cmc
inc
mov
ret
outs
out
call
in
inc
xchg
sub
jge
repz
cmc
loopne
imul
bound
sub
xchg
dec
pop
add
push
jp
sbb
pop
sbb
xor
mov
jle
lock
movs
(bad)
mov
movd
inc
mov
sti
sub
aad
cmp
fdiv
test
push
xchg
push
sub
push
gs
pop
(bad)
sbb
jg
xchg
mov
sbb
mov
fs
mov
jmp
lods
inc
xchg
jno
sahf
(bad)
fnsave
loope
out
fnstsw
outs
retf
fmul
push
hlt
popa
loopne
fistp
dec
retf
or
jo
aas
inc
ror
mov
dec
(bad)
outs
movs
jl
data16
test
in
retf
mov
xor
mov
loopne
xlat
mov
or
mov
nop
jns
hlt
(bad)
dec
add
(bad)
mov
movs
push
int
mov
fcomp
xlat
xchg
xchg
scas
inc
mov
cdq
jl
cmps
mov
imul
jno
in
mov
jp
in
xor
js
inc
cmp
daa
addr16
mov
xchg
rcl
dec
fisub
pop
adc
in
xchg
int3
push
sbb
fcom
loop
rol
mov
pop
icebp
xchg
dec
scas
inc
jmp
call
mov
mov
adc
in
clc
into
mov
mov
das
popa
mov
cmp
mov
arpl
iret
cld
leave
(bad)
add
shr
jle
repz
ins
pop
and
pop
or
pop
pop
dec
xchg
(bad)
dec
test
cmps
(bad)
cmp
mov
xor
popf
dec
cld
mov
pop
test
push
(bad)
cmp
inc
sbb
int
retf
daa
cmp
xor
sub
rcr
mov
mov
dec
push
xlat
pop
xchg
aam
mov
shr
cmps
popf
addr16
in
and
test
loopne
inc
outs
outs
pusha
sub
rcr
sub
mov
lea
enter
(bad)
gs
imul
sbb
inc
out
and
push
xor
xchg
popa
dec
xor
aaa
cmp
fxch
or
mov
mov
mov
and
ja
push
sbb
add
test
test
dec
imul
stos
ret
das
xlat
dec
movs
xor
mov
out
xor
pushf
jmp
push
mov
xor
gs
mov
jg
retf
dec
out
push
retf
in
outs
retf
jmp
push
mov
mov
add
(bad)
sbb
cmc
icebp
pop
cmps
hlt
push
rcl
jns
jmp
test
popf
dec
outs
sub
aad
inc
xchg
ret
inc
xchg
ins
sub
xchg
outs
mov
ret
in
jnp
mov
imul
push
dec
jnp
adc
xor
add
shr
mov
add
pop
icebp
inc
or
into
ret
xor
das
and
aas
sbb
sub
aas
add
imul
cmc
jne
rcr
dec
jne
jae
or
sub
fnstsw
mov
adc
or
daa
mov
test
jne
adc
nop
xor
bound
icebp
fcmovnu
xor
ins
stos
sbb
lds
sbb
fisubr
dec
mov
cmp
dec
and
stc
inc
sbb
or
adc
adc
add
pop
cmp
jb
adc
loope
xchg
mov
mov
cs
mov
mov
aaa
xor
popf
clc
js
sti
mov
gs
pop
(bad)
sub
scas
in
daa
cmc
inc
mov
and
les
loope
and
xor
int
xchg
mov
aas
ret
imul
pushf
popa
mov
test
jne
daa
scas
adc
pop
adc
in
jl
imul
jae
add
jp
fild
aas
jne
cdq
outs
inc
dec
xchg
xor
push
into
fldlg2
cdq
mov
pop
(bad)
jmp
and
fld
aaa
pop
dec
gs
mov
jge
jp
mov
and
retf
push
sti
(bad)
mov
jno
mov
jns
ret
ret
adc
stos
mov
fmul
add
sbb
jle
sub
aaa
(bad)
arpl
rcr
out
adc
pop
inc
jne
and
loope
loop
fsubr
xchg
pushf
mov
pop
dec
pop
sub
dec
into
out
imul
xor
outs
dec
cmp
icebp
dec
gs
bound
jmp
test
loopne
popf
push
jg
and
push
jnp
stos
sar
outs
rcl
loop
dec
js
jg
xor
aam
add
jl
cmp
and
movs
es
popf
and
in
(bad)
pop
pop
cwde
cmps
fldenv
adc
and
pop
ret
cmp
pop
int3
ins
std
mov
(bad)
es
xor
mov
adc
test
lahf
retf
and
pop
mov
fs
add
cdq
mov
add
call
outs
rol
xor
or
sbb
mov
sahf
loop
sub
xchg
cli
cdq
icebp
jmp
aaa
sti
out
loop
pop
push
shl
out
faddp
stc
xor
repnz
cmp
fisub
cmp
sub
sbb
repz
inc
sub
sub
pop
cmps
push
hlt
bound
movs
movs
lods
or
mov
xchg
push
mov
inc
or
repnz
aas
push
mov
stos
xor
mov
mov
les
pop
loop
sub
xchg
pop
cmc
or
inc
cvttps2pi
inc
adc
add
(bad)
in
sub
pop
cmp
popa
mov
mov
bound
es
stos
mov
xor
(bad)
and
stos
add
arpl
jge
aam
loope
lock
add
(bad)
push
shl
xchg
dec
jne
sbb
xchg
clc
inc
or
scas
dec
fdiv
arpl
xchg
mov
push
dec
fstp
push
add
dec
xor
cmps
and
repz
sub
cmps
loope
cmp
inc
sub
out
scas
pop
arpl
push
ret
ds
jnp
push
shl
test
div
jno
jmp
data16
dec
inc
inc
mov
adc
sar
push
shr
in
pop
jp
out
xlat
add
outs
call
jg
mov
lods
ficomp
push
int3
vmptrld
dec
pop
xchg
(bad)
push
cmp
adc
outs
test
stos
fldenv
add
clc
inc
bswap
mov
test
and
sub
push
cld
xor
and
xor
out
mov
dec
pop
std
push
dec
pop
fbld
mov
adc
das
mov
cmps
cmovb
pop
(bad)
repz
mov
mov
lahf
and
iret
dec
test
jb
cmovle
adc
xor
mov
(bad)
push
in
daa
ins
stos
jmp
ja
nop
jp
xchg
or
sub
dec
xchg
add
das
(bad)
in
xchg
push
pop
dec
pop
fcmovne
pusha
iret
into
push
and
sbb
imul
lods
mov
inc
xlat
or
pop
inc
test
jns
scas
and
jb
cmps
push
sbb
and
jo
push
mov
jge
adc
test
popa
outs
cld
dec
push
add
daa
pop
pop
mov
pop
push
pushf
fs
dec
lods
mov
dec
adc
sbb
(bad)
stc
(bad)
adc
outs
cli
dec
test
aad
cmps
sbb
pop
loope
(bad)
shl
call
cli
lahf
(bad)
ins
sbb
ins
xlat
mov
inc
shl
ds
cmps
test
add
call
je
jecxz
mov
add
add
or
fidiv
xchg
inc
inc
xor
stos
xchg
sbb
add
stos
pop
inc
test
sahf
sub
scas
and
cmp
add
pop
test
add
pop
jecxz
sbb
pop
sub
int
sub
daa
sub
fbstp
jae
scas
call
out
jmp
js
pop
dec
pop
sub
inc
sub
xchg
(bad)
loop
add
mov
ret
mov
fdiv
xchg
xor
(bad)
aad
enter
cmovle
aam
div
je
adc
pop
jmp
stos
(bad)
cmc
retf
pop
adc
icebp
out
mov
aas
inc
mov
loopne
dec
dec
dec
xor
(bad)
mov
sub
sub
rol
(bad)
arpl
das
lea
adc
dec
fnsave
call
xchg
adc
mov
mov
std
cmp
push
out
out
fstp
fidivr
mov
mov
fwait
pusha
imul
sub
adc
adc
jmp
call
push
push
or
pushf
(bad)
ret
clc
dec
and
out
jbe
loop
ja
popf
cmp
jb
imul
mov
or
iret
add
out
jo
iret
dec
shl
push
adc
mov
push
in
aas
cmps
cmp
retf
out
pop
test
(bad)
xchg
mov
xchg
out
into
aas
arpl
push
std
adc
iret
sbb
push
dec
sbb
fld
add
aad
dec
or
and
xor
sbb
push
lahf
push
into
cli
lock
std
arpl
and
jl
cs
push
mov
dec
stos
and
dec
xor
hlt
pushf
jle
pop
and
adc
cmp
dec
jg
fwait
pop
mov
xchg
push
popa
cmp
into
and
add
popa
call
shl
rol
mov
in
fcom
aaa
cmp
into
clc
and
mov
xor
cmps
cmp
sub
jno
push
int3
add
pop
in
jmp
inc
sbb
hlt
mov
jp
cmp
mov
push
xchg
out
addr16
sbb
repz
in
aad
lahf
mov
pop
out
loopne
je
lock
and
rol
pop
ins
ins
lods
inc
shl
mov
cmc
repnz
xor
jl
das
into
push
ss
imul
cli
xchg
push
and
retf
stos
adc
sub
dec
hlt
push
sbb
pop
or
gs
add
pop
les
xor
in
int3
fst
and
outs
(bad)
sahf
sbb
out
loop
sbb
and
jne
fcmovnu
xchg
sahf
loopne
dec
fdiv
(bad)
loopne
ins
pop
dec
inc
inc
push
jnp
sbb
(bad)
popa
push
jnp
lea
in
pop
jbe
data16
jae
std
xchg
jo
add
rol
mov
(bad)
ret
mov
sahf
(bad)
ins
loope
aas
out
(bad)
loop
je
add
mov
popa
push
(bad)
mov
add
sub
in
jmp
shl
xlat
pop
gs
fwait
push
jecxz
popf
push
aad
shr
and
sbb
bound
xor
pop
cmp
aam
repnz
pop
xor
ret
xchg
loopne
jno
loopne
push
xor
fisub
gs
mov
sub
call
lods
add
adc
adc
mov
pop
sbb
rcl
xor
scas
aam
cmp
sub
dec
fstp
jge
in
push
in
push
xor
cwde
jmp
inc
mov
sti
lds
stos
repnz
push
outs
dec
or
xor
lock
dec
xchg
push
sbb
dec
pop
(bad)
xchg
or
or
fwait
js
stc
sbb
aas
sbb
out
outs
sub
lea
sub
dec
jne
push
xchg
or
cld
sub
and
adc
or
test
inc
shl
lea
jnp
pop
rcl
mov
call
out
lock
xchg
mov
lods
inc
xchg
ins
arpl
xor
fisub
shl
cmps
jg
aad
xlat
jmp
into
paddq
pop
cwde
int
fs
sub
push
sahf
dec
mov
dec
sub
jnp
in
jge
dec
daa
and
out
ins
mov
adc
xchg
pop
sub
mov
enter
iret
gs
mov
fdecstp
mov
mov
xlat
out
sub
rcl
mov
adc
clc
int3
dec
push
in
loope
nop
nop
fld
fistp
pop
and
outs
xchg
mov
pushf
sub
cmp
dec
stos
push
call
retf
or
dec
xor
movs
aad
pusha
mov
psubusb
mov
and
push
frstor
inc
mov
out
add
pop
aaa
lods
jmp
call
dec
mov
pop
(bad)
jp
mov
loope
outs
ror
(bad)
fwait
retf
imul
jl
inc
add
add
fnstenv
in
aad
shl
fmul
nop
mov
push
int3
lea
fbld
or
fmul
mov
xchg
das
scas
in
mov
popa
repnz
mov
ins
cmp
ror
xor
add
inc
xor
xchg
lods
mov
jns
jne
fwait
xchg
out
aaa
ret
leave
inc
inc
push
jle
fisttp
cdq
lods
adc
xor
or
out
ror
push
ins
shl
ror
jnp
jb
jmp
pop
lds
div
(bad)
cmps
mov
jl
mov
sbb
jmp
pop
push
push
rcl
mov
iret
push
inc
xchg
jo
cld
enter
sub
push
add
pop
inc
or
jle
jmp
movs
mov
add
sub
test
(bad)
sbb
cmps
(bad)
fwait
in
outs
xor
(bad)
xor
dec
mov
and
inc
out
test
ins
inc
mov
scas
fist
loop
add
mov
and
lods
jmp
aam
neg
icebp
aad
rol
scas
sub
sbb
stc
mov
cmp
adc
or
xchg
mov
xchg
cli
inc
mov
nop
shr
(bad)
les
jl
xchg
and
and
scas
jne
cmp
mov
xchg
inc
aaa
xchg
hlt
dec
inc
adc
pop
fyl2x
xlat
or
popa
sbb
jecxz
das
out
jge
fsubr
mov
mov
je
lahf
inc
ret
ret
jmp
into
sub
sbb
jge
outs
xchg
adc
(bad)
pop
lods
cmp
int3
add
xor
fucomi
jns
loope
xchg
mov
lahf
icebp
push
leave
mov
add
xor
in
test
jmp
cmp
jo
sar
aam
cmps
adc
mov
xchg
cld
outs
mov
bound
div
mov
sbb
popa
push
xor
jmp
loop
push
sub
int3
sub
cmp
mov
mov
scas
imul
mov
retf
bound
sti
lahf
div
iret
popa
test
imul
int3
lds
add
or
mov
mov
not
cmp
dec
inc
scas
jne
rcl
ror
mov
fabs
dec
arpl
in
jmp
cwde
xchg
sub
out
imul
fcmovb
shl
jbe
lds
mov
or
pop
pop
add
cwde
in
push
ins
inc
mov
pusha
sbb
std
adc
pusha
dec
mov
sbb
mov
int
jb
cmps
iret
mov
mov
fcmove
adc
mov
imul
daa
les
es
mov
xor
adc
xor
(bad)
jmp
seta
paddw
inc
pop
push
dec
outs
shr
test
jg
rcl
pusha
mov
dec
out
inc
mov
fmul
sbb
xlat
test
adc
pop
retf
or
add
add
inc
mov
or
popf
inc
rcr
push
repz
pop
mov
lods
ret
xor
jns
gs
add
mov
xor
ret
outs
ret
call
out
mov
sbb
fwait
es
mov
pop
inc
or
loopne
xor
(bad)
and
mov
push
dec
xchg
xchg
bound
fsubrp
jl
loop
add
xchg
push
test
dec
iret
xchg
mov
and
lds
inc
and
push
stc
mov
nop
push
and
mov
cmps
pushf
jnp
popa
mov
das
ret
xor
xchg
sbb
ins
xor
mov
movs
dec
fs
call
and
cmp
movs
jbe
retf
mov
push
scas
clc
das
mov
push
stos
pop
dec
or
sub
mov
dec
push
bound
add
pop
jl
hlt
movs
add
xchg
loop
xlat
pop
aad
push
mov
push
cmc
jo
push
jmp
sahf
fadd
jecxz
lods
movs
and
test
lock
jg
js
pop
jl
add
push
dec
or
fbstp
fadd
jbe
mov
cmp
fisttp
xor
sub
int
ss
push
xchg
ins
inc
popa
shr
or
fwait
movs
cwde
dec
sub
js
xor
rcr
push
cs
sbb
stos
push
mov
or
dec
movs
repnz
(bad)
or
pop
xor
xor
mov
add
loopne
(bad)
daa
mov
xchg
jae
sbb
push
mov
pushf
xchg
add
jl
js
icebp
nop
inc
mov
mov
les
dec
out
enter
mov
mov
test
or
ficomp
call
mov
mov
(bad)
cmp
sub
mov
ret
dec
xchg
aas
add
mov
lods
frstor
mov
retf
sub
in
retf
jecxz
out
add
das
lods
(bad)
cmc
sbb
xor
or
bound
xor
loope
cmp
pushw
cmp
dec
sbb
call
hlt
sbb
mov
or
call
hlt
cmps
scas
nop
ds
scas
mov
fisub
icebp
adc
pop
or
retf
out
retf
test
push
push
jmp
outs
xchg
mov
(bad)
or
xor
addr16
test
sub
imul
and
and
jmp
gs
mov
sbb
xchg
pop
(bad)
sbb
mov
mov
aaa
loope
sub
mov
rsm
jecxz
xchg
add
sbb
and
retf
fstp
inc
jp
setbe
or
retf
push
stc
imul
sbb
jbe
fmul
xchg
jne
xor
mov
test
out
mov
dec
leave
retf
gs
pusha
not
mov
xor
add
dec
sbb
sbb
or
push
xor
jmp
xor
je
lea
vcvtps2dq
(bad)
into
pop
or
(bad)
lahf
pop
aam
jb
(bad)
pop
mov
nop
xlat
test
and
fcmovu
push
mov
lods
ins
movs
test
ja
cwde
sub
mov
mov
adc
xor
mov
shl
push
test
or
adc
mov
hlt
nop
adc
mov
pop
jns
mov
jbe
push
mov
inc
stos
out
jg
pop
loop
mov
mov
iret
jbe
jns
jae
aam
xor
jmp
inc
in
enter
or
add
push
jp
mov
add
mov
stos
xlat
rcr
mov
pop
sbb
push
or
push
icebp
or
xor
sbb
xor
and
mov
loope
cmp
enter
jnp
mov
dec
push
ss
mov
or
or
jecxz
leave
fldcw
or
cmp
mov
jge
and
or
mov
sbb
sbb
rcr
ret
lods
or
cwde
mov
jns
mov
mov
lea
adc
sub
mov
sbb
dec
into
mov
cdq
out
(bad)
push
into
mov
(bad)
xor
pushf
inc
mov
ret
push
inc
call
sbb
jne
xor
sbb
scas
fidiv
jns
imul
pop
push
and
icebp
enter
imul
sub
pop
or
ins
aaa
mov
(bad)
jmp
shr
mov
stc
test
jmp
fmul
iret
(bad)
paddsb
xchg
mov
movs
xchg
ret
mov
shr
pop
into
lahf
push
pop
in
rep
leave
ja
push
ret
add
fstp
scas
jmp
add
(bad)
push
scas
(bad)
adc
mov
cmp
fadd
jne
push
outs
clc
dec
and
stos
cwde
lahf
(bad)
ror
rol
scas
and
adc
dec
xor
jle
test
mov
not
mov
std
lods
inc
ins
jp
jmp
fistp
jns
add
test
in
or
mov
out
popa
sub
pop
pop
mov
stc
call
push
sub
add
add
aad
and
mov
sahf
stc
xchg
xor
or
fucom
xor
and
pop
icebp
mov
int3
enter
add
push
jno
fld
sti
ins
out
xchg
lock
mov
addr16
adc
xor
dec
push
jmp
sub
mov
jecxz
div
xchg
xchg
add
push
(bad)
xchg
das
push
inc
aam
mov
leave
push
inc
dec
ss
cdq
xchg
mov
lea
or
aaa
push
aad
cdq
xchg
cmp
ret
mov
sbb
or
inc
pop
aam
arpl
rol
(bad)
ds
jno
dec
gs
test
int3
jne
adc
jo
jne
clc
sti
movs
adc
lea
mov
aaa
ror
cmp
movs
jge
jns
ins
xchg
imul
pop
test
scas
gs
xchg
push
in
mov
push
enter
or
mov
dec
lock
dec
pusha
fdiv
ins
mov
dec
gs
call
sbb
inc
cmp
jecxz
xchg
cmps
sub
xchg
mov
ins
fcomp
rcl
call
lds
add
pushf
mov
es
call
outs
daa
aad
push
pop
pop
fnstsw
mov
mov
mov
push
enter
in
sub
sub
call
sahf
fadd
sbb
mov
inc
or
ret
(bad)
(bad)
fnstcw
sti
jnp
sahf
mov
(bad)
cmp
das
iret
ja
or
ret
lahf
mov
fs
sbb
dec
inc
lock
enter
pop
adc
mov
mov
xor
cdq
movs
icebp
inc
xor
sub
cmp
push
inc
out
sbb
(bad)
int3
jae
scas
outs
pop
mov
or
pop
gs
add
xor
mov
jns
in
and
repnz
dec
ins
jbe
shl
std
mov
addr16
and
add
push
lods
jo
cmps
xchg
jmp
(bad)
pop
clc
xchg
(bad)
nop
lock
push
cmp
jl
jge
cwde
or
imul
inc
ss
or
xlat
cs
arpl
mov
scas
loopne
stos
cmps
mov
and
call
dec
test
xchg
inc
rcr
mov
jmp
or
out
fimul
adc
sub
stos
js
mov
retf
cdq
jo
imul
jp
ds
(bad)
cmp
sub
sbb
pop
scas
ins
cli
jbe
(bad)
push
inc
dec
nop
sub
stc
pop
push
pop
push
je
jno
mov
pop
cs
leave
or
xchg
dec
hlt
xor
scas
xor
push
das
dec
ja
xchg
and
scas
push
adc
mov
xor
out
nop
and
into
enter
fistp
xor
mov
cmp
mov
ja
(bad)
bound
es
pusha
push
test
xor
mov
jmp
jmp
mov
mov
jne
mov
or
ins
cmp
fisub
(bad)
in
scas
movs
cld
pop
outs
mov
scas
(bad)
or
iret
fucomi
ss
pop
xor
les
movs
cwde
and
fldcw
sub
lahf
or
xchg
mov
sti
or
bnd
outs
cmp
das
sbb
call
retf
push
jnp
jl
inc
sub
inc
aas
not
outs
or
dec
cmp
mov
jle
les
jle
test
lods
test
fcomip
pushf
dec
stos
popf
aas
pop
or
hlt
jne
jp
(bad)
jno
pushf
dec
cdq
fwait
shl
sbb
test
scas
jno
pop
inc
dec
or
lea
ffree
jns
aas
stos
lods
or
popa
mov
jno
int3
cmp
jb
dec
frstor
retf
ds
leave
mov
xchg
cld
neg
aas
xchg
sub
xor
jno
movs
lahf
mov
bound
ret
test
in
stos
mov
jge
jl
mov
or
inc
shr
cmps
fwait
cmp
fimul
mov
dec
loop
cmp
mov
in
mov
inc
in
dec
pop
or
mov
fs
mov
movs
loope
popa
(bad)
stc
cld
push
jge
mov
(bad)
dec
fldcw
dec
mov
and
call
jnp
xor
mov
es
je
popf
pop
adc
pop
xlat
pop
jno
enter
out
dec
xrelease
xor
add
and
ins
pusha
and
lds
mov
int3
pop
int
loop
ficomp
loope
cmps
mov
push
std
sahf
in
aad
sub
iret
sub
or
or
mov
jle
pop
mov
repnz
mov
pop
mov
test
je
(bad)
push
cmc
out
cwde
nop
xor
gs
cs
cs
pusha
xor
inc
arpl
xchg
or
sahf
adc
(bad)
cmc
in
(bad)
or
mov
bound
cmp
pop
pop
sbb
pop
div
mov
xor
sti
test
adc
stos
test
xchg
add
mov
or
gs
sahf
pop
(bad)
aad
imul
das
scas
pusha
ret
sbb
pop
push
in
jmp
or
jmp
sbb
pop
mov
repnz
cmp
idiv
sbb
mov
aad
mov
sub
fimul
test
jmp
mov
gs
arpl
push
pop
sub
jecxz
inc
das
jmp
dec
idiv
push
inc
cwde
cs
stc
lea
les
add
adc
inc
mov
dec
inc
pop
add
rcr
and
mov
xor
enter
inc
pushw
repz
mov
lods
mov
dec
mov
lahf
adc
mov
mov
pusha
bound
push
call
pop
xchg
push
mov
push
and
test
(bad)
jecxz
cmc
sbb
xor
push
out
(bad)
and
retf
xor
int3
repnz
(bad)
addr16
lods
cs
out
cwde
jno
xor
ret
or
push
push
daa
xchg
pop
outs
push
cmp
push
pop
xchg
mov
jmp
xchg
push
cmp
adc
arpl
xchg
std
jg
retf
push
mov
in
nop
aad
dec
push
add
cmp
add
sbb
cmp
and
adc
push
sub
add
imul
mov
mov
lds
inc
lock
sti
cli
and
jo
inc
push
call
in
xchg
dec
mov
cmc
mov
mov
jmp
push
pop
pop
jge
adc
imul
jbe
test
xchg
mov
mov
neg
xor
add
jo
mov
clc
call
inc
dec
inc
(bad)
push
and
fist
test
mov
xchg
ins
jmp
jno
mov
rcr
stos
cmp
mov
mov
adc
fimul
aad
mov
xchg
repz
add
pop
ficomp
cmp
clc
(bad)
sbb
popf
out
retf
es
adc
cld
xchg
test
out
aam
cmp
pushf
jmp
sahf
jae
and
xchg
das
popa
sbb
pop
in
adc
inc
rsqrtps
sar
icebp
inc
sub
xchg
mov
sub
and
shl
dec
fs
cmp
add
pop
pop
test
fisttp
mov
sbb
into
add
jge
mov
sub
fisubr
arpl
inc
xchg
mov
mov
dec
dec
ror
test
inc
xchg
cmc
add
js
xor
inc
cmp
lea
ins
cmp
aad
pop
in
(bad)
jmp
sar
bound
cmps
xchg
(bad)
jae
cmp
retf
adc
and
das
mov
aam
or
inc
pop
lock
clc
add
add
std
mov
and
lods
in
jno
cmp
dec
fdivr
push
and
mov
inc
adc
sbb
call
inc
(bad)
sbb
cwde
jo
mov
into
cli
push
(bad)
push
inc
xchg
popf
push
aas
not
jg
sbb
xchg
lock
aam
dec
xchg
je
mov
pop
fistp
pop
in
push
inc
(bad)
enter
not
shl
scas
mov
mov
add
js
fwait
mov
mov
cmp
adc
cmp
sub
mov
sub
fisttp
xlat
shl
mov
xchg
outs
add
cmps
and
in
xchg
xchg
test
mov
pop
cmps
add
mov
pop
loop
jb
int
pushf
cli
scas
inc
xchg
mov
cmps
sub
mov
fcomp
xor
mov
in
and
out
and
scas
mov
and
pushf
jmp
cmp
fwait
in
inc
pusha
and
jle
sbb
pusha
(bad)
in
pop
xchg
ins
push
test
mov
sub
pop
cmp
xlat
sub
outs
mov
inc
mov
sbb
xchg
pop
or
xor
sub
mov
push
and
in
xor
push
fwait
add
mov
ins
arpl
iret
pop
ins
retf
in
mov
aas
fcmovnb
inc
in
mov
sub
sub
in
arpl
arpl
arpl
or
mov
fdivr
int3
jae
xchg
fadd
xor
add
icebp
and
ds
ret
retf
push
clc
pop
xor
movs
rcl
cdq
dec
fnstcw
jae
inc
mov
sahf
loope
sbb
xchg
cld
push
add
add
inc
les
xchg
bound
and
adc
dec
add
clc
shr
mov
aaa
pushf
fwait
xchg
inc
jns
sub
int
sbb
jns
or
repnz
lahf
jb
fcom
ss
adc
inc
mov
lods
dec
pop
or
dec
mov
jle
loope
aad
push
test
xor
out
stos
(bad)
jg
iret
scas
enter
sbb
shr
dec
cmp
pop
call
popf
cmps
dec
(bad)
cmp
mov
lods
and
jne
mov
out
cld
cs
fld
jno
cmp
shr
cwde
jecxz
es
push
arpl
and
ins
(bad)
ins
push
pop
enter
add
mov
inc
add
test
fcom
jbe
lea
(bad)
aad
or
xchg
jns
or
lock
outs
mov
adc
mov
adc
inc
fisttp
sub
aad
std
fbld
daa
and
jmp
xchg
inc
scas
mov
inc
and
imul
inc
mov
sub
mov
push
shl
inc
push
xor
shr
sub
loopne
(bad)
mov
loopne
das
add
adc
fldenv
mov
shr
mov
mov
loope
mov
ins
call
add
int3
jp
sub
je
jmp
inc
sub
jp
add
mov
sub
jno
popf
bound
push
lock
mov
mov
adc
cwde
inc
ss
add
ds
push
pop
xor
sahf
adc
inc
sub
inc
and
aaa
pop
cmp
les
cmps
movs
clc
sbb
dec
movs
fild
in
jns
sbb
(bad)
sti
leave
jns
cli
adc
or
pop
xor
and
sub
push
aas
push
fiadd
push
sar
in
add
in
cdq
gs
push
loopne
loopne
(bad)
mov
dec
les
mov
and
adc
stos
test
hlt
pop
jo
jmp
inc
pusha
jge
stos
repnz
rcl
repz
inc
sbb
lds
and
cmp
or
add
cmp
jae
pushf
dec
retf
and
lea
jge
into
popa
sbb
movs
loop
push
imul
inc
int3
xchg
out
sti
shl
push
mov
mov
scas
push
or
std
inc
dec
mov
out
inc
fistp
pop
dec
sub
or
push
jge
rol
mov
mov
cmp
jno
pop
mov
cwde
and
sahf
imul
push
jmp
stos
sbb
ret
lock
push
add
mov
shr
xchg
pop
and
fistp
sub
mov
or
ins
dec
pushf
sub
lock
fsubr
cs
in
je
inc
pop
inc
cli
push
test
sub
pushf
jmp
push
add
call
ins
xor
push
and
jmp
fadd
(bad)
push
adc
inc
ror
call
pop
mov
bswap
sbb
gs
jae
pop
xor
and
stos
jmp
pop
xchg
sbb
fmul
jne
sbb
cld
sub
in
or
and
mov
(bad)
rol
test
movs
xchg
mov
dec
dec
clc
mov
test
in
mov
inc
cdq
(bad)
push
sbb
mov
pushf
aad
call
(bad)
cmp
mov
sbb
lods
lods
retf
ins
sbb
call
jp
push
inc
and
mov
dec
pop
out
scas
cdq
into
test
push
xor
nop
mov
sbb
das
mov
or
cmp
cmovns
dec
ret
leave
jno
jb
or
mov
cmp
jb
push
push
inc
outs
loopne
rol
and
ins
mov
test
mov
xor
mov
pop
xor
hlt
out
dec
xor
popf
adc
(bad)
repz
add
out
dec
(bad)
call
mov
cmp
add
and
cdq
xchg
(bad)
hlt
mov
add
adc
cmp
cmp
jbe
iret
sbb
daa
out
push
sub
je
fnstenv
call
sbb
push
push
mov
repnz
mov
cli
pop
scas
ud2
and
scas
in
mov
mov
mov
fidiv
movs
sub
fld
push
fcmovne
cmps
and
(bad)
xchg
and
mov
mov
xchg
sub
sub
mov
add
jno
push
jns
mov
mov
out
enter
icebp
or
dec
retf
jns
push
pop
adc
ret
or
lock
test
fistp
outs
test
jne
les
js
loop
mov
sbb
pop
jo
(bad)
sbb
mov
cli
test
imul
stc
fld
sar
and
je
addr16
or
fbstp
in
jmp
push
xchg
scas
std
arpl
(bad)
in
cmp
scas
xchg
or
push
adc
mov
add
inc
out
scas
and
popa
push
clc
nop
push
xchg
mul
lods
dec
sbb
mov
out
jg
cmp
adc
loopne
(bad)
fimul
sub
pop
mov
addr16
test
xor
mov
mov
sbb
mov
lods
jne
mov
xor
pushf
mov
pop
xor
mov
in
test
xor
int
rcl
ficom
lods
stc
mov
mov
add
mov
and
xor
adc
imul
cmp
sub
push
es
jne
add
xchg
nop
rep
and
scas
xor
pop
adc
cli
pop
in
bound
push
shr
nop
ror
jp
stos
dec
pop
add
sub
ds
xchg
sub
stc
(bad)
retf
stos
scas
mov
mov
fidivr
jl
and
test
inc
lahf
pop
inc
int
push
jb
pushf
cs
push
pop
cmp
mov
fisubr
es
mov
fs
jae
and
jle
rcr
or
pop
test
mov
leave
fisubr
inc
jnp
(bad)
leave
fnstenv
in
call
mov
imul
xchg
fcmovbe
mov
xor
stos
ins
ror
dec
aam
outs
mov
cwde
sbb
cmps
adc
jle
jb
mov
repz
xor
bswap
mov
call
cmps
and
mov
fucomip
dec
int
xchg
mov
cmp
dec
out
or
aaa
xchg
mov
inc
mov
mov
xchg
pusha
jbe
pop
fidivr
xchg
inc
mov
jns
pop
fwait
dec
popa
jecxz
lock
(bad)
mov
xor
pop
popf
adc
pop
sub
mov
sub
ds
and
scas
dec
fadd
jnp
mov
adc
leave
dec
jg
test
icebp
dec
loope
jne
jns
mov
loop
cmc
or
or
pop
out
cmps
mov
add
jns
hlt
adc
inc
xor
retf
pop
add
xchg
fs
ins
adc
pop
rcr
imul
add
fsub
jl
ins
inc
out
lea
xor
mov
addr16
icebp
push
jns
aas
jl
retf
mov
(bad)
aas
repnz
les
int
mov
ja
aad
cmps
push
lods
cmp
fs
xor
in
cmps
xor
addr16
outs
ret
sbb
sbb
xor
push
je
repnz
clc
sub
mov
lds
push
addr16
test
les
push
addr16
and
xchg
popa
xor
cmp
inc
xor
adc
(bad)
jle
pop
dec
inc
or
leave
sub
cmp
jno
stos
cmp
adc
in
out
jb
aaa
mov
cmp
pop
xchg
xchg
pop
mov
adc
or
je
test
add
cmp
scas
xlat
xor
test
dec
mov
les
rol
or
mov
sar
les
(bad)
in
loope
fild
aaa
mov
gs
data16
gs
icebp
out
inc
enter
pop
xor
pop
scas
xchg
je
out
and
std
jge
(bad)
fdivr
or
rcr
int3
daa
cmps
cmc
inc
sub
loop
inc
mov
imul
(bad)
cs
fs
sub
mov
push
mov
aam
retf
lods
sar
je
mov
in
lods
mov
out
sub
mov
sbb
jb
pop
pcmpeqd
push
test
loopne
xchg
pop
leave
in
or
adc
jp
std
mov
push
out
ror
retf
jno
pop
push
push
imul
jge
mov
jecxz
and
fnsave
dec
stc
fcmovb
push
scas
push
jno
sahf
out
retf
xor
and
mov
push
mov
sar
mov
add
xor
stos
repz
jmp
xchg
add
in
cmp
imul
add
sub
pop
adc
stos
sti
push
add
jg
fsubr
test
repz
sahf
ins
ja
jmp
pop
sar
mov
add
das
dec
in
aam
inc
xchg
jmp
cdq
pop
mov
mov
sub
ss
fcom
jmp
sti
loopne
ret
jne
pop
int3
lods
pop
add
sub
jbe
or
sbb
jne
mov
dec
lods
stos
sahf
sub
loopne
fisttp
popa
jmp
popw
pop
push
push
pop
mov
jg
mov
sbb
movs
invd
xchg
dec
fmul
jl
fsubrp
aas
xor
inc
pop
in
lock
pushf
ret
and
loopne
cmps
xor
popa
sub
sahf
mov
not
fwait
push
out
xchg
xchg
pop
aam
retf
mov
pushf
mov
iret
xchg
and
xchg
mov
or
cmp
test
mov
sub
retf
cmp
cmc
xchg
jo
stc
mov
push
xor
cmp
add
xchg
aas
not
and
jnp
mov
push
xchg
ins
xor
test
mov
mov
push
cwde
and
dec
or
push
xlat
jge
loope
lods
inc
repz
mov
lods
dec
cdq
jp
push
add
mov
retf
sub
cmp
lods
xor
fs
arpl
inc
mov
loopne
popa
jg
es
cmp
add
adc
iret
push
cmc
cmps
gs
imul
das
add
adc
(bad)
sbb
cmps
fild
cmp
(bad)
js
loop
aam
arpl
mov
aam
shr
push
(bad)
jmp
dec
mov
retf
(bad)
inc
mov
call
xor
pop
sar
int3
ds
cmp
cmp
fimul
mov
add
adc
lahf
sbb
pop
adc
call
nop
cmp
in
(bad)
cmps
cli
inc
pop
push
sbb
lock
ins
(bad)
inc
add
xor
mov
cmp
mov
add
div
int3
or
cmp
fdivr
in
sub
fwait
aas
mov
mov
and
sub
and
pop
repz
add
or
lds
mov
mov
fldlg2
sar
test
pop
sahf
into
inc
fnstcw
fmulp
test
pop
xlat
(bad)
imul
imul
inc
out
popw
xchg
(bad)
jne
cmp
adc
xor
jns
and
jns
ret
push
and
das
add
cwde
aas
outs
cmp
sub
fwait
inc
push
mov
mov
(bad)
and
push
cmps
in
ja
pop
pop
test
loop
scas
test
fdiv
je
leave
pop
mov
dec
or
and
mov
mov
mul
jb
jg
pop
sti
imul
mov
lods
cld
ficom
jb
(bad)
sahf
add
dec
js
fdivrp
mov
iret
cmc
xchg
mov
pop
cmp
(bad)
fisubr
in
das
pusha
inc
or
xchg
loopne
jl
xchg
jge
rcl
jnp
fidivr
sub
pusha
lds
sbb
fidivr
pop
pop
xchg
adc
xor
out
mov
jnp
cmc
dec
xchg
and
add
adc
aad
retf
add
or
imul
mov
jg
xchg
clc
cwde
dec
jp
je
cld
sub
xchg
and
ss
loop
cmp
push
xor
fbstp
ffreep
and
jne
dec
dec
xor
jb
lahf
pop
push
mov
out
pop
mov
out
aad
outs
(bad)
sub
jno
sub
test
retf
inc
pop
and
imul
sub
mov
xor
push
push
out
jne
cwde
jp
pusha
and
into
mov
fwait
outs
fst
fst
jge
mov
mov
fisub
mov
mov
mov
nop
out
cdq
ret
pop
push
inc
fiadd
js
adc
cmp
repz
int3
push
cmp
iret
mov
mov
mov
or
imul
out
ret
push
repz
mov
dec
adc
dec
neg
mov
sti
(bad)
ret
push
cmps
ficom
mov
out
xor
adc
fldenv
out
push
push
pop
outs
mov
cmps
mov
add
fistp
and
mov
pusha
(bad)
add
popa
push
leave
scas
imul
movs
jae
in
std
add
loop
xor
jmp
push
nop
mov
mov
or
cdq
cmp
cdq
(bad)
fisttp
daa
jnp
adc
fs
mov
ins
das
xchg
cmp
xchg
cmp
jns
xor
push
xchg
ret
mov
aas
cmp
mov
cli
sbb
cdq
lods
retf
mov
pusha
jecxz
stos
fst
cmc
mov
mov
aam
iret
outs
mov
stc
dec
in
test
fdivr
xchg
add
sbb
and
cmps
bnd
es
sub
iret
xchg
pop
shl
mov
jno
cdq
jecxz
lods
(bad)
out
lods
lea
fsub
pop
call
fsubr
xchg
call
add
add
sbb
sbb
pop
sbb
movs
(bad)
not
aas
pop
in
ficom
iret
ss
dec
dec
pop
sub
adc
sbb
add
fild
cs
sbb
add
pop
xchg
xchg
out
push
and
retf
and
js
or
ja
ja
gs
mov
mov
and
cli
pushf
push
mov
iret
pop
repnz
cmp
jmp
int3
cdq
fistp
cmp
test
mul
push
icebp
and
jbe
cmp
repnz
xor
(bad)
cmp
loope
(bad)
shl
xchg
cdq
xor
jg
jle
mov
cs
sar
shl
dec
cdq
lods
js
jmp
or
inc
dec
and
mov
inc
addr16
cmp
mov
mov
push
mov
dec
adc
retf
lods
fistp
mov
jo
sbb
int
pop
and
jge
pop
(bad)
lock
cmps
lods
or
idiv
jl
inc
repnz
repz
pop
fwait
and
xchg
mov
xor
call
in
cmp
sub
add
rol
and
mov
in
sbb
sbb
sbb
cmps
pop
jns
or
cmp
and
mov
xchg
and
inc
in
pop
sub
arpl
loope
lahf
or
scas
lahf
ror
test
xlat
adc
or
sub
loopne
add
add
sahf
xchg
arpl
sti
mov
stos
fisttp
push
popa
pushf
(bad)
data16
xchg
mov
mov
mov
rcl
popa
mov
jns
dec
sub
outs
fdivr
or
xor
addr16
outs
test
jl
iret
mov
inc
into
or
xchg
xor
ss
ret
jo
and
cmps
mov
push
dec
inc
cmp
lahf
pop
jmp
js
jb
jl
mov
sahf
pop
fdivr
(bad)
cmp
pop
cmp
push
test
push
ror
pop
gs
pop
xor
xchg
xor
xor
xchg
xor
or
test
shl
repz
cdq
mov
jo
(bad)
call
adc
mov
pusha
iret
fld
je
adc
jns
mov
mov
sahf
mov
sahf
xchg
and
xlat
pop
jl
jg
sub
mov
mov
popf
dec
hlt
movs
lods
push
retf
push
aas
xchg
mov
repnz
leave
lock
or
mov
test
loopne
adc
repz
out
es
push
lea
push
icebp
mov
ss
xor
mov
mov
lea
jl
iret
jne
and
dec
test
pop
mov
adc
retf
inc
jno
jle
es
nop
enter
lahf
dec
inc
test
sub
neg
out
cmp
and
xchg
setns
aaa
ja
mov
sbb
mov
and
adc
push
jnp
mov
pop
nop
ins
cmps
jns
add
ficom
sbb
addr16
xor
outs
sar
iret
or
fistp
loope
pop
mov
pop
(bad)
call
frstor
lods
in
je
push
mov
inc
scas
push
ss
mov
dec
sbb
cmp
scas
pop
jae
mov
xor
add
mov
jne
int3
and
mov
pop
cmp
xchg
jp
jecxz
mov
iret
call
add
movs
xchg
mov
dec
imul
pop
scas
mov
(bad)
fiadd
lds
lods
push
sub
add
test
jb
mov
cmp
lea
test
mov
jg
ins
arpl
in
dec
inc
mov
cmp
jmp
adc
arpl
aas
addps
imul
push
repz
mov
scas
xor
pusha
push
adc
outs
js
aad
pop
rol
wrmsr
pop
hlt
imul
xlat
outs
fld
add
and
bound
inc
push
imul
add
mov
add
(bad)
fnsave
test
mov
pusha
xchg
mov
mov
pop
xchg
cmp
scas
popf
push
imul
adc
fs
iret
jge
in
ins
leave
jecxz
sahf
bound
leave
fsubr
adc
bound
cmp
xlat
retf
xor
jecxz
adc
in
and
mov
mov
pop
xchg
ret
imul
pand
pusha
mov
sahf
pusha
cli
pop
sub
jg
xlat
pusha
pop
scas
cmp
jge
xor
popa
mov
icebp
call
lods
push
daa
pop
cs
rol
push
ret
adc
add
aam
bound
or
aaa
mov
mov
add
push
lods
mov
mov
gs
rcr
mov
es
into
inc
push
adc
mov
jl
div
fsubr
add
xchg
push
adc
and
scas
lds
or
cld
jne
shr
mov
xor
push
int
xor
lock
xchg
xchg
shr
test
not
sub
loope
(bad)
rol
or
xchg
jnp
or
xadd
and
aas
xor
xor
fild
cmps
mov
leave
lahf
or
pop
aaa
pop
sbb
aad
rcl
dec
(bad)
icebp
das
scas
inc
inc
xchg
sbb
xchg
inc
sub
sahf
mov
jle
push
loop
or
add
xor
mov
push
pop
adc
popa
loopne
jmp
push
fsub
(bad)
mov
jge
pop
lods
retf
call
frstor
hlt
stos
or
dec
dec
add
push
or
ret
retf
sub
sub
xor
xchg
in
or
shr
inc
sbb
pop
fild
cld
lea
jmp
push
in
bound
mov
jge
shl
cwde
psubd
xchg
or
jmp
ins
xchg
mov
mov
dec
mov
xor
adc
pop
into
(bad)
(bad)
hlt
mov
adc
sbb
das
mov
popa
scas
out
mov
xchg
stos
out
cmps
clc
push
jo
fwait
and
stos
imul
or
jb
ds
fistp
hlt
pop
adc
unpcklps
sbb
cli
add
mov
in
mov
and
adc
ins
call
xchg
dec
imul
(bad)
sbb
int
add
inc
shl
dec
out
cwde
sbb
mov
push
xor
gs
push
pop
sub
dec
in
jp
xchg
and
xlat
lahf
inc
push
push
xor
call
aas
call
(bad)
fucom
out
cld
fild
in
sub
jno
pop
mov
loop
sub
adc
pop
sar
xchg
adc
scas
sar
lods
call
bound
mov
xlat
hlt
into
xor
imul
popf
or
icebp
dec
add
cmp
adc
movs
push
aas
js
fwait
cli
js
call
mov
mov
popa
into
sti
mov
sbb
retf
les
mov
loopne
push
pop
xor
xchg
or
outs
cmps
dec
add
ja
test
test
mov
cs
fcom
xchg
xchg
inc
ins
mov
mov
mov
cmps
xor
cmp
in
rcl
dec
div
xor
mov
push
mov
mov
cmc
rol
xor
pop
jmp
pop
add
pop
push
and
mov
test
push
xor
mov
push
mov
or
sub
test
dec
inc
add
mov
inc
xchg
ins
mov
leave
jl
cmps
inc
sub
fisttp
cmp
mov
xor
jb
div
push
cmp
cmp
lods
fld
sub
or
out
mov
inc
mov
test
sub
mov
rcr
jb
popa
or
push
gs
mov
popf
jb
and
rcl
adc
out
or
cli
ror
mov
inc
dec
sbb
or
mov
pop
push
xchg
aam
aad
push
imul
xchg
(bad)
and
cmp
jmp
add
es
mov
add
jno
sti
xchg
mov
shl
pop
ret
cmp
push
cli
inc
(bad)
aas
xchg
mov
pop
sbb
loopne
aad
jo
pop
push
lahf
enter
cmp
pop
push
fdiv
pop
mov
out
jl
das
and
call
and
loope
gs
cmp
jmp
sub
sub
rcl
push
add
jne
mov
inc
dec
es
stos
xchg
adc
pop
add
imul
mov
data16
mov
shl
jp
(bad)
lods
std
pop
sahf
fild
int
retf
sub
daa
adc
lods
pop
sbb
(bad)
shl
out
cmp
xchg
jne
sbb
mov
adc
dec
lahf
out
in
push
gs
pop
sahf
jp
sub
pop
(bad)
pop
je
sbb
sbb
jno
add
repz
add
and
mov
add
cmp
pop
(bad)
fnclex
xlat
push
out
call
xchg
and
cmc
mov
mov
inc
sbb
or
pusha
js
in
daa
in
inc
xchg
adc
imul
add
(bad)
out
movs
in
mov
fstp
xor
jae
jmp
cmp
sub
mov
pop
test
xchg
movs
jb
mov
inc
clc
es
jle
sbb
(bad)
mov
les
(bad)
pusha
and
jmp
std
jmp
cmc
loopne
jecxz
mov
inc
daa
mov
aas
cmp
inc
bound
and
mov
adc
cmps
adc
shr
xor
mov
cmp
push
mov
scas
adc
mov
sbb
inc
jp
dec
loope
pop
mov
jecxz
dec
pop
hlt
xor
mov
pop
mov
repnz
cmps
jecxz
adc
popa
cmp
ins
(bad)
sub
cmp
mov
fdivr
scas
movs
into
dec
pop
test
fimul
push
fistp
cdq
fwait
mov
aad
call
jns
push
test
pushf
xlat
add
fwait
xor
cmp
cdq
cmp
sub
sub
ins
es
shl
push
sub
lods
push
mov
mov
pop
out
stos
outs
loopne
mov
inc
lahf
sbb
mov
shr
pushf
push
xchg
addr16
fwait
inc
movs
xchg
sbb
adc
daa
dec
pop
retf
outs
jle
sahf
pusha
jbe
sub
cmp
dec
dec
movs
cwd
mov
in
xchg
pusha
mov
push
dec
inc
outs
mov
mov
clc
mov
inc
inc
fdiv
cdq
pushf
jnp
pop
and
mov
dec
mov
inc
scas
mov
and
test
fcomp
sahf
or
xor
pop
(bad)
mov
sti
inc
inc
cmp
adc
dec
stos
pop
int
push
dec
in
inc
mov
dec
(bad)
xchg
movs
ins
aas
mov
push
or
sbb
in
das
lahf
jno
call
mov
sub
loopne
inc
mov
dec
add
stos
xor
stos
pop
(bad)
pop
xor
pushf
xchg
push
enter
cmps
dec
ss
repnz
adc
das
jle
cli
push
push
inc
outs
scas
or
inc
movs
lods
pop
ficom
pop
shl
adc
xchg
scas
repz
adc
movs
addr16
mov
fist
ret
lods
mov
dec
retf
pop
push
mov
push
xlat
btr
jb
ss
cli
imul
aaa
pushf
js
cmp
pop
call
mov
sbb
or
shl
cmp
scas
dec
stc
fsub
lea
mov
outs
push
xlat
mov
scas
jno
call
aam
mov
inc
push
push
ja
hlt
sti
xchg
or
lods
fadd
xlat
pop
fdivr
fincstp
out
fld
test
add
popa
and
popf
movs
scas
pushf
sbb
into
stc
call
pop
dec
fdivr
push
dec
cmps
sbb
and
xor
fcom
ins
enter
out
frstor
loope
ds
jge
(bad)
jne
mov
inc
jns
fld
(bad)
sahf
mov
cmp
or
adc
cmps
mov
xor
xchg
pop
repnz
cmp
lock
in
ror
cmp
in
in
(bad)
pop
retf
test
sub
add
jb
fisub
cmps
out
cmp
dec
lods
adc
xor
add
aam
(bad)
outs
repnz
sar
cld
ins
mov
pop
mov
outs
pop
imul
or
push
and
gs
and
jo
push
sub
popa
xor
jecxz
sub
div
cmp
jge
pushf
shl
mov
ja
pop
jmp
int
mov
pushf
sar
cdq
rol
cli
or
sbb
test
ins
mov
add
movups
mov
stc
dec
sub
imul
pushf
pop
dec
daa
retf
pop
stos
add
aaa
cvtdq2ps
pop
sub
jno
enter
out
addr16
pop
arpl
inc
repnz
mov
or
mov
std
bound
in
cwd
icebp
xor
(bad)
push
inc
sub
or
mov
fild
loopne
test
push
sub
xchg
out
pop
movs
call
(bad)
sbb
push
fisttp
xor
rol
shl
pop
sub
hlt
cmc
xchg
mov
xor
sbb
xchg
dec
and
pop
(bad)
dec
jmp
adc
test
add
push
jecxz
aas
cli
sub
(bad)
xchg
mov
adc
and
loop
enter
std
pusha
in
inc
mov
rcr
inc
ror
clc
cld
push
fld
shl
push
movs
xor
arpl
movs
add
jne
cdq
pop
lods
imul
mov
call
push
adc
pop
leave
scas
int3
pop
mov
jmp
push
in
mov
das
jae
sub
icebp
imul
push
and
or
das
or
xchg
and
xlat
fsubr
scas
aaa
iret
repz
xchg
sub
in
push
mov
mov
mov
sub
call
or
pop
jns
push
push
adc
adc
int3
mov
mov
xor
mov
sar
jmp
ins
arpl
xchg
and
cli
les
inc
stos
jp
dec
rcr
xchg
push
pop
push
dec
add
rcl
pop
ins
popf
pop
mov
or
daa
sub
ret
out
and
je
or
(bad)
std
jo
pop
mov
loope
xlat
mov
xchg
mov
and
and
adc
xlat
lds
mov
push
mov
mov
add
jl
retf
sub
mov
or
inc
inc
cld
lods
lea
fmul
out
retf
jle
in
in
mov
adc
inc
fwait
push
call
(bad)
sbb
or
mov
dec
mov
lods
mov
mov
sub
xlat
dec
gs
mov
push
inc
xchg
fdiv
cdq
lea
pop
pop
pop
adc
es
xor
sbb
xchg
into
jno
test
ja
test
mov
ret
pushf
jno
call
clc
pushf
push
sbb
call
jnp
popf
int3
outs
cmp
imul
xchg
(bad)
xchg
aam
rol
loop
jb
fist
lea
jp
xchg
sub
repnz
pop
or
pusha
cwde
xchg
ss
jecxz
xor
shl
sub
push
push
clc
sub
jno
xor
pop
or
movs
inc
retf
sub
push
jmp
ds
adc
mov
xchg
push
xchg
(bad)
mov
shr
not
push
add
out
std
movs
push
sub
xor
push
les
mov
and
pop
ins
jecxz
mov
cmp
xchg
mov
cmps
push
xor
cmp
inc
mov
enter
call
gs
mov
imul
dec
xlat
push
fist
push
ins
lock
dec
mov
xor
fiadd
push
pop
sbb
out
imul
loopne
mov
imul
fucom
pop
xchg
cdq
dec
jno
psraw
adc
add
cmp
mov
inc
outs
xor
mov
pop
inc
test
or
out
imul
jp
and
push
push
test
mov
lahf
sub
cmps
jno
ds
aas
ret
stc
rcr
or
out
stos
cmp
bound
aad
mov
mov
adc
mov
adc
mov
test
out
push
pusha
mov
fcom
shr
loop
ds
dec
jmp
inc
and
fwait
mov
lock
in
loopne
cld
js
pushf
or
sbb
call
call
mov
jg
pop
dec
xchg
pusha
mov
imul
les
(bad)
scas
mov
xor
out
movs
scas
ficom
mov
mov
lds
jo
das
inc
aas
aas
xor
inc
stos
loop
sbb
push
or
nop
ret
mov
lods
call
cmp
call
push
pop
push
push
jbe
sub
add
push
sbb
and
out
fcom
dec
stos
hlt
mov
ret
and
dec
or
sbb
int3
push
sub
inc
mov
xchg
cmps
ror
xor
and
push
and
xor
mov
cmp
dec
mov
xor
jecxz
push
jecxz
aas
mov
sub
dec
mov
popa
and
xchg
dec
mov
mov
add
mov
stos
ins
inc
leave
or
mov
cld
pusha
cmp
fild
cld
fldcw
xor
cli
pop
sbb
jnp
lods
sbb
dec
in
bound
xchg
mov
mov
es
mov
popa
repz
dec
mov
xor
sbb
imul
fsub
jb
cmc
dec
or
(bad)
push
push
sbb
fisubr
cmp
pop
and
dec
mov
into
loopne
es
cmp
mov
jmp
call
push
aaa
scas
or
or
mov
adc
jae
dec
adc
int3
pop
les
outs
rcl
imul
cmps
mov
dec
xor
ins
shl
pop
push
sar
jae
mov
movs
stos
mov
sub
push
fdiv
mov
sbb
mov
dec
cmps
imul
pop
adc
aad
lea
int
mov
sbb
test
add
jno
xchg
scas
addr16
xor
das
aad
cmp
mov
and
(bad)
popa
rcr
fs
fs
fs
inc
cdq
mov
sbb
jecxz
ret
add
xchg
(bad)
es
addr16
mov
rol
retf
(bad)
and
aas
jge
xor
fistp
loop
fcomp
pop
jecxz
mov
fstp
pop
pop
retf
or
xchg
dec
add
rcl
and
into
(bad)
jl
sbb
xlat
jnp
cwde
xor
mov
fwait
sbb
cwde
cmc
(bad)
sbb
movs
test
cmc
and
popa
jo
popf
pop
int
test
push
jmp
je
push
das
jl
mov
jns
mov
add
or
xlat
and
icebp
jb
mov
cmp
jbe
aam
pop
push
inc
cli
arpl
fadd
mov
cli
repnz
(bad)
test
push
lock
and
popa
sbb
xchg
sahf
mov
or
scas
lea
jne
jl
adc
and
pop
mov
(bad)
retf
pop
jl
(bad)
sbb
jno
js
test
cmp
sti
push
test
sti
fiadd
sub
mov
movs
xor
enter
add
jns
jp
sti
cmp
sbb
mov
jge
out
scas
les
sub
cmp
mov
pusha
ins
shl
push
add
dec
dec
sar
pop
imul
pop
pop
rol
jbe
mov
ds
aad
loopne
ins
push
es
scas
push
xchg
sahf
jae
fdiv
xchg
mov
fmul
mov
mov
add
lahf
ds
add
bswap
idiv
fdiv
clc
or
ja
jp
test
lea
adc
push
mov
xchg
sub
test
push
pop
jo
rcr
push
ds
sti
jns
and
retf
(bad)
pop
in
adc
rcr
xor
mov
and
test
adc
mov
mov
call
xor
cmps
jle
sbb
pop
das
les
fisttp
fcomi
repnz
or
out
daa
cwde
pop
(bad)
dec
sub
xchg
(bad)
out
mov
outs
(bad)
and
les
mov
mov
add
cmc
or
enter
push
(bad)
sbb
inc
daa
test
retf
cs
cld
int3
inc
dec
cmp
iret
mov
cli
mov
out
dec
jecxz
xlat
icebp
sbb
(bad)
sti
(bad)
inc
dec
add
mov
jmp
and
xchg
fsubr
jnp
add
mov
add
ret
adc
xor
add
loopne
push
ins
cwde
pop
lock
or
pop
mov
data16
out
push
jg
sbb
cmc
(bad)
in
test
mov
or
or
pop
inc
xor
psubb
(bad)
or
pop
aas
pop
xchg
or
popa
inc
or
fsubr
popa
in
cmp
xchg
mov
mov
xor
dec
lock
test
jle
in
mov
push
xor
pop
lds
or
mov
psllq
dec
repz
jmp
or
sbb
inc
rol
mov
out
movs
push
mov
ret
adc
sbb
movs
hlt
test
inc
scas
and
pop
jne
mov
or
stos
or
add
(bad)
sub
mov
pop
loopne
jecxz
jns
sub
push
inc
xor
pop
sub
es
pushf
sbb
sar
add
adc
pop
loope
push
std
xchg
mov
add
idiv
(bad)
pop
mov
sub
retf
dec
push
adc
(bad)
out
sbb
fwait
push
add
fst
aam
ror
shl
ins
(bad)
cmp
shl
inc
or
xlat
push
xchg
pop
mov
les
aas
ret
jb
popa
adc
mov
je
mov
lahf
jae
xchg
fs
mov
mov
daa
inc
pop
(bad)
iret
and
inc
pop
push
cmp
test
in
es
sbb
pop
and
sbb
pop
adc
jmp
ret
bound
xchg
bound
push
pop
nop
mov
int3
mov
sbb
sti
jle
pop
jmp
add
out
xchg
push
adc
in
xor
ds
jmp
add
adc
push
fistp
mov
inc
jnp
jl
repz
jb
and
jmp
pop
sbb
div
adc
mov
xor
mov
dec
call
push
dec
xchg
hlt
repnz
repz
fldenv
(bad)
pop
sub
faddp
ins
(bad)
mov
cmp
iret
sti
adc
push
xchg
or
mov
xchg
sbb
sub
sub
inc
mov
mov
mov
dec
mov
mov
mov
das
and
(bad)
repz
cdq
mov
dec
pop
jnp
pop
shl
shl
leave
and
and
jbe
dec
or
repnz
cs
scas
or
jl
sbb
cli
or
lds
xchg
or
popa
pop
pop
xchg
jle
xchg
stos
cmp
shl
mov
push
arpl
pushf
jo
push
xchg
sbb
call
popa
ja
xchg
xor
dec
lods
lea
jnp
pushf
(bad)
dec
scas
xchg
imul
xor
lods
xor
jo
push
or
sbb
xor
fmul
nop
adc
aas
cld
mov
out
sub
sbb
mov
mov
jle
xchg
repnz
outs
adc
sbb
out
loop
call
add
add
ss
das
test
not
hlt
jmp
retf
test
cmp
mov
icebp
adc
push
push
pop
mov
pop
mov
pop
xlat
pushfw
inc
fcmovne
and
sub
adc
jl
or
movs
fsub
out
out
and
or
(bad)
push
(bad)
enter
test
inc
fstp
and
test
pop
mov
loopne
icebp
inc
cmc
js
dec
(bad)
sub
dec
sub
jge
fnstenv
repnz
push
pop
or
mov
je
cmp
outs
adc
inc
fsubr
enter
scas
jns
(bad)
sbb
imul
outs
push
dec
cs
jp
pop
clc
pop
inc
dec
sbb
sahf
inc
xor
sbb
add
jp
pop
and
sbb
nop
out
xor
push
(bad)
add
or
cmp
xchg
dec
pop
(bad)
ror
cdq
pop
add
pop
sbb
sbb
inc
test
cmc
(bad)
cld
outs
idiv
movs
push
stos
les
sbb
ror
cmp
mov
sbb
mov
jl
cs
sub
test
dec
push
(bad)
sbb
shl
(bad)
jns
mov
and
fsubr
jnp
dec
inc
cwde
mov
jp
inc
xchg
in
xchg
(bad)
jp
inc
sahf
rcr
out
sbb
cwde
data16
jbe
cmc
ins
xor
sbb
mov
or
not
mov
and
inc
jl
dec
in
xchg
mov
and
mov
fbld
sbb
mov
adc
les
pop
test
fidiv
pusha
repz
and
mov
jg
jns
xor
cmp
scas
(bad)
fidivr
mov
mov
mov
pop
pop
loop
mov
outs
xor
xor
into
ret
adc
cmp
repz
cs
(bad)
paddusb
add
lock
pop
scas
je
and
jmp
xchg
out
shr
push
push
cdq
push
mov
push
fisttp
rcr
out
int
sub
jne
out
in
daa
repnz
jae
xchg
xor
outs
clc
adc
mov
(bad)
cmc
popf
add
scas
popf
sub
loopne
or
cmp
mov
div
test
or
xor
nop
push
cmp
pop
xchg
ja
out
(bad)
stos
push
in
mov
dec
mov
mov
cmp
movs
dec
stos
or
jecxz
cdq
inc
(bad)
xchg
mov
nop
repz
add
xchg
repnz
push
jns
mov
cmp
jmp
adc
rol
sub
hlt
das
jns
pop
shr
(bad)
hlt
cmp
cdq
lods
pop
repz
and
sub
aas
mov
mov
(bad)
outs
and
add
pop
pop
push
ins
pop
lods
inc
sbb
xor
xor
(bad)
out
push
sub
call
ins
sbb
nop
mov
jb
movs
and
and
(bad)
fmul
hlt
push
leave
dec
mov
jae
mov
xchg
inc
jns
sbb
(bad)
retf
in
sub
xor
xor
clc
cmps
test
adc
cmps
inc
shl
dec
xchg
cmps
ja
add
scas
push
das
mov
add
mov
(bad)
mov
sahf
lods
dec
lea
push
mov
jmp
mov
adc
sub
push
aas
xor
sbb
jge
sub
shl
sahf
pop
push
push
or
retf
aad
mov
push
mov
jno
xchg
stos
sbb
repz
nop
lods
mov
jle
jmp
xchg
dec
shr
inc
jno
inc
(bad)
fist
mov
mov
mov
(bad)
call
sar
arpl
mov
cmp
and
pop
xchg
jbe
aam
adc
pop
test
lea
out
sar
sbb
sub
das
sar
cmps
je
sub
xlat
sbb
aaa
(bad)
leave
or
or
mov
cmp
shl
mov
mov
xchg
popf
loopne
fs
mov
push
repz
cld
and
xchg
push
sub
mov
and
shl
lea
push
lds
sbb
pop
jb
je
scas
pusha
out
ret
jecxz
out
xchg
shl
bound
add
pop
pop
cmp
adc
out
inc
pop
call
cmp
push
in
cmp
inc
xchg
jmp
push
and
nop
jecxz
mov
fnstenv
movs
inc
add
push
lods
mov
add
xor
cmp
jbe
mov
pusha
rcr
push
xchg
scas
mov
add
cdq
xor
or
aaa
and
inc
outs
cmps
push
enter
jno
add
pop
jg
fs
(bad)
push
nop
adc
stos
shl
push
je
out
add
and
mov
jecxz
call
bnd
push
aad
iret
mov
imul
leave
add
nop
lods
imul
ret
mov
out
push
ss
int
cmps
idiv
arpl
xchg
sub
cwde
jnp
push
mov
shl
mov
lock
out
retf
xor
fist
mov
hlt
pop
sub
adc
(bad)
xchg
icebp
ins
jb
mov
jg
add
mov
jne
fxch
aaa
fsub
sub
mov
jno
xor
cld
movs
loop
lahf
fsubr
cmp
cdq
sub
fwait
arpl
in
pop
and
jecxz
add
(bad)
push
adc
fs
shl
jp
setle
cmp
cmp
sbb
add
popa
aad
ret
jge
mul
inc
loopne
pop
cmps
cmp
stos
scas
add
inc
pop
lock
push
sbb
jo
push
std
jge
sub
add
pop
jecxz
sbb
sub
test
fistp
push
push
ficom
(bad)
lahf
mov
or
xor
daa
fs
loope
rcl
and
sub
cli
or
sub
aam
sahf
(bad)
xlat
mov
jmp
dec
pop
iret
push
(bad)
cmp
ficom
into
xlat
int
test
push
arpl
stos
call
push
inc
add
adc
push
xchg
and
mov
add
and
sbb
cli
test
aas
stos
outs
imul
mov
fdivr
imul
iret
or
pop
jp
inc
dec
imul
dec
jmp
pop
aad
mov
(bad)
ins
in
xor
xlat
push
hlt
(bad)
cmc
sti
sub
cmp
inc
mov
xchg
cs
sub
push
xchg
xor
call
test
hlt
sbb
mov
loopne
adc
gs
std
cmps
push
jmp
add
shl
jg
repz
lea
rol
sbb
out
inc
sub
outs
cmp
xchg
fisttp
push
mov
out
out
(bad)
push
jo
dec
(bad)
test
push
sub
aaa
pop
call
cmps
push
jecxz
mov
icebp
scas
pop
dec
pop
sbb
pop
cmp
mov
scas
jg
dec
jns
mov
jnp
std
sbb
push
mov
mov
cmp
push
sar
enter
fmulp
push
mov
mov
and
ror
into
mov
jl
fisttp
dec
fild
not
pop
dec
pop
push
sbb
mov
cmp
pusha
adc
jle
xchg
es
pop
and
imul
jecxz
out
jl
dec
daa
dec
(bad)
inc
test
sar
popf
jbe
fcomp
call
dec
sbb
mov
inc
dec
sbb
and
and
call
addr16
xor
push
inc
mov
(bad)
out
sbb
mov
mul
xchg
adc
jl
es
gs
hlt
ror
adc
popa
mov
jl
inc
mov
and
xchg
mov
stos
icebp
sbb
lods
mov
in
mov
loopne
pop
mov
jmp
adc
and
push
neg
rcr
call
cmc
scas
add
int3
shr
jnp
mov
xchg
ins
mov
xchg
mov
mov
or
mov
std
or
gs
dec
addr16
inc
mov
popa
mov
sub
outs
out
cdq
mov
adc
jmp
into
fwait
rol
dec
sub
push
xchg
cwde
mov
cmc
test
shl
push
lahf
mov
repnz
enter
stc
jg
outs
xor
dec
pushf
dec
into
out
pop
hlt
outs
pop
loope
retf
dec
pop
mov
and
mov
pop
add
fs
shr
inc
mov
js
cmp
out
rol
jb
push
dec
in
ja
sub
aaa
scas
movs
sub
fidivr
mov
dec
mov
pop
sbb
push
js
jo
jo
add
and
sbb
aam
push
fs
ret
call
sbb
cmp
mov
cmp
in
mov
push
add
ins
movs
mov
or
mov
leave
sbb
ret
xchg
std
pushf
or
mov
iret
ds
mov
push
ss
fild
add
aad
jl
fs
pop
dec
stc
jno
xchg
add
xchg
inc
loopne
push
adc
shl
les
pinsrw
test
hlt
adc
xor
push
sub
inc
or
cld
mov
sbb
mov
ins
lods
inc
iret
mov
test
and
mov
push
pop
cmc
(bad)
cwde
push
and
mov
push
cmp
test
adc
es
(bad)
std
pop
inc
in
inc
pop
xchg
stos
sbb
mov
mov
pop
and
xor
ret
pop
(bad)
lea
imul
dec
dec
jmp
xchg
sbb
call
xor
push
mov
mov
push
shl
mov
cli
mov
push
js
push
pop
inc
out
inc
inc
add
xlat
dec
loop
cmc
icebp
xor
adc
adc
addr16
fist
fs
arpl
lods
ds
test
push
adc
imul
loope
mov
and
cmps
xchg
loop
pushf
scas
sbb
out
mov
pmaxub
out
push
pop
stos
add
nop
hlt
mov
mov
xchg
mov
fld
in
jo
into
pop
mov
movs
aam
lahf
pop
jnp
mov
pop
retf
push
popf
and
adc
sahf
and
mov
dec
and
fst
cmp
xchg
sub
bnd
mov
xlat
and
add
inc
lahf
aas
in
rcl
fild
adc
les
in
bound
or
inc
jne
(bad)
and
push
pop
loope
and
cs
lods
stos
lock
cmc
(bad)
nop
fnsave
aam
loop
mov
mov
and
out
push
dec
(bad)
das
into
jmp
enter
popf
bnd
add
push
sbb
lahf
sbb
xor
icebp
loope
sub
xchg
lods
xchg
mov
xchg
push
xor
sub
add
aam
push
add
xor
pop
fldenv
sti
cmp
jbe
inc
(bad)
cmp
push
jb
cld
pop
loope
fsub
and
(bad)
(bad)
xor
inc
push
js
add
jg
sub
mov
xor
stos
es
mov
cs
iret
push
sbb
into
iret
int3
ins
pusha
movs
pop
out
test
popf
ins
rcr
jle
shl
push
(bad)
fdivr
push
out
scas
or
inc
jl
stos
cli
(bad)
outs
test
pop
sub
push
(bad)
repnz
adc
icebp
jecxz
adc
sbb
fcomi
and
push
mov
in
hlt
(bad)
lods
loopne
push
fiadd
sahf
or
push
mov
xor
pop
popa
movs
jb
fadd
mov
fild
(bad)
pop
xchg
repz
jns
(bad)
dec
dec
div
iret
pusha
dec
push
fisub
fs
mov
mov
(bad)
cs
(bad)
pusha
lea
bound
dec
imul
xchg
ins
daa
out
add
sub
sub
ret
jne
mov
push
mov
sbb
jl
inc
xor
outs
mov
aaa
mov
xchg
mov
xchg
adc
or
movs
mov
sub
jb
(bad)
sti
lods
test
sub
loop
loop
jp
test
sbb
retf
xchg
data16
cmp
cli
mov
inc
inc
stos
jae
(bad)
or
cmps
or
pop
ds
call
out
rcr
fsubr
scas
repnz
(bad)
movs
test
iret
inc
scas
dec
rcr
es
rol
movs
xchg
cmp
and
out
ja
or
pop
inc
movs
mov
scas
adc
inc
jne
and
lock
lock
sub
sbb
test
ins
jg
int
and
lds
and
adc
dec
mov
pop
mov
mov
dec
sub
arpl
pusha
dec
imul
inc
pop
add
cmp
sub
jg
add
fwait
or
fcmovb
xchg
xor
cmp
jbe
or
xor
sbb
sub
les
xor
pop
ret
push
in
nop
sub
add
js
or
xchg
jne
call
and
fdiv
cli
sub
or
sbb
loopne
test
int
push
jns
cmp
loop
pop
xchg
xor
adc
add
cdq
aad
hlt
sbb
sbb
call
sub
inc
pop
cmc
add
pop
imul
test
aaa
retf
imul
adc
push
sub
fldcw
inc
add
in
stos
cs
jmp
aaa
push
push
ins
popa
aam
idiv
dec
mov
sub
and
mov
sub
sub
sub
loopne
sub
sub
inc
(bad)
shl
and
inc
xor
cmp
fstp
mov
dec
sbb
shl
xor
mov
xchg
hlt
pusha
add
adc
div
nop
push
sub
call
xor
sbb
push
ss
sbb
mov
mov
out
imul
xchg
adc
ins
sbb
pop
fmul
sbb
mov
dec
jb
cld
addr16
adc
hlt
shl
inc
aas
push
dec
iret
adc
shr
cmp
sbb
ret
or
xchg
jp
(bad)
cmp
std
dec
retf
add
jns
add
enter
pop
iret
out
emms
or
movs
out
mov
pop
jge
jmp
cwde
repnz
xlat
xor
lods
sub
xlat
xchg
es
mov
mov
loop
jmp
mov
dec
mov
test
rcl
pushf
ds
mov
mov
repnz
adc
stos
mov
and
fiadd
mov
sub
or
iret
jb
jb
retf
cld
pushf
adc
or
and
pop
pusha
push
cmps
jne
pop
pop
cli
gs
mov
sub
iret
mov
adc
mov
ja
push
xor
fs
sahf
idiv
call
aas
stos
or
dec
jmp
mov
imul
sub
retf
sub
cwde
dec
sub
je
(bad)
cs
test
jl
and
(bad)
sbb
adc
dec
js
rcr
fistp
ja
test
jnp
jl
int3
out
cs
clc
test
cmp
push
loop
adc
mov
dec
and
stc
mov
aad
cli
mov
fistp
loopne
test
push
test
cmc
mov
mov
ffree
retf
mov
mov
mov
fiadd
adc
push
sbb
dec
mov
or
jbe
xchg
lock
enter
jb
stos
das
or
cmp
adc
adc
rcr
inc
call
sbb
adc
ficom
rcl
pop
pop
mov
dec
pop
add
cmp
sbb
int
mov
stos
cs
adc
aas
cmp
fadd
mov
leave
mov
inc
aas
push
sahf
adc
popf
movs
inc
mov
addr16
inc
cwde
inc
jbe
push
and
dec
fimul
or
push
jnp
test
dec
or
cmc
inc
jno
mov
aaa
inc
mov
clc
lea
(bad)
call
inc
sub
out
out
jnp
jg
dec
mov
push
jne
mov
mov
xchg
inc
add
iret
hlt
rcr
cmp
push
je
and
and
scas
xor
es
shr
stos
mov
xchg
dec
jo
mov
sub
rol
stc
sbb
mov
int3
in
arpl
out
(bad)
repz
mov
or
lock
cmp
jns
add
outs
stc
lds
leave
in
cmp
sbb
mov
sbb
aas
add
fiadd
xchg
lds
ja
jmp
imul
cmp
ins
(bad)
test
cmp
(bad)
stc
inc
or
cbw
lods
inc
daa
sbb
or
sub
(bad)
shl
mov
jl
clc
dec
dec
sahf
fild
xchg
movs
sub
and
arpl
dec
xchg
jnp
push
(bad)
pop
ds
cdq
fcom
mov
xchg
sbb
sbb
int3
hlt
retf
inc
push
mov
sub
mov
fld
and
adc
fcomp
add
mov
adc
xor
mov
push
mov
cdq
mov
pop
mov
repnz
mov
pop
cmp
stc
jmp
fidiv
sbb
aas
fld
inc
cwde
push
and
lea
xor
and
int
adc
adc
call
call
stc
inc
xchg
cmc
mov
(bad)
iret
ss
shr
and
in
xchg
dec
push
jno
cld
xchg
pop
or
and
fisttp
dec
lods
(bad)
aad
push
loopne
fdivr
shr
gs
sub
stos
inc
mov
mov
sbb
lea
mov
push
sbb
sub
inc
xchg
and
xchg
pop
mov
mov
jne
sti
add
add
or
pushf
sbb
pop
in
rcr
stc
scas
cmp
xor
cdq
fisttp
jmp
jno
mov
jo
div
jl
push
mov
push
jne
cmc
add
sbb
repnz
cmp
xchg
dec
in
mov
jecxz
outs
out
fsubr
lds
dec
pusha
scas
or
retf
cmps
pushf
jmp
mov
in
mov
adc
test
or
push
jl
leave
xor
mov
sub
and
sub
mov
int3
mov
fcmovbe
imul
jl
or
test
mov
and
mov
adc
cmp
and
retf
inc
jmp
sbb
add
sahf
repnz
pop
ret
jle
ret
shr
ss
rcr
push
mov
loopne
mov
add
and
pop
add
retf
xchg
fadd
loope
aam
xchg
clc
fbstp
ins
sbb
movnti
pusha
mov
pop
sbb
add
xor
jp
lds
out
add
je
mov
rcr
jmp
pop
fidivr
loop
and
retf
(bad)
cmp
repnz
lods
lods
shl
add
xor
fwait
test
pusha
js
dec
push
jbe
push
js
sbb
cmc
das
ss
xchg
(bad)
xlat
call
inc
pop
fst
jns
dec
neg
cld
rol
hlt
and
lds
clc
shr
adc
jmp
mov
xor
jbe
cmp
push
push
out
add
add
or
xlat
lods
cmp
leave
add
sbb
data16
ret
out
xlat
cs
mov
pop
aad
ror
jbe
rcl
jl
pushf
pushf
loop
imul
fcom
int
or
or
sbb
mov
and
loopne
clc
int3
cmp
inc
and
mov
retf
cmp
cli
ss
mov
rcr
pusha
mov
fprem1
enter
shl
aas
mov
(bad)
fild
je
sub
xor
pop
xlat
int
xchg
sub
fstp
lea
dec
mov
push
mov
push
or
cmps
push
fmul
cmp
outs
icebp
sub
push
push
sahf
xchg
xchg
pop
lea
stos
mov
push
push
mov
inc
xchg
fs
lods
dec
or
js
add
push
sbb
cmp
scas
aaa
sbb
cmps
scas
(bad)
popa
xchg
push
ins
rcr
xchg
pop
fdivr
fidivr
jl
lods
jl
and
test
ds
add
push
(bad)
dec
sar
int3
mov
mov
test
inc
add
loop
imul
and
jecxz
(bad)
cmps
mov
sbb
sbb
fldenv
xchg
call
pop
std
mov
adc
push
mov
xchg
cld
test
cwde
(bad)
inc
xchg
jmp
jecxz
sub
stos
xor
inc
pop
cmp
cli
sub
adc
mov
dec
jecxz
adc
call
movs
jg
add
stos
mov
ror
cmp
rcl
in
mov
xchg
xchg
lahf
jmp
mov
mov
retf
push
adc
cmc
std
rol
loopne
cmp
in
outs
adc
sub
mov
scas
test
stos
push
pop
rol
add
xchg
sub
aaa
(bad)
or
(bad)
or
adc
fdiv
inc
cmps
in
sub
dec
iret
and
imul
cs
das
out
in
mov
sub
mov
jbe
mov
(bad)
xor
lods
sahf
adc
inc
(bad)
push
sbb
mov
adc
hlt
mov
adc
cld
pop
in
pop
retf
and
dec
stos
dec
and
pop
clc
daa
arpl
or
xchg
add
scas
inc
mov
inc
adc
aas
lock
and
imul
sbb
xchg
pop
mov
and
leave
jnp
loop
(bad)
sub
popa
adc
fcmovne
dec
xchg
push
hlt
fwait
lds
dec
sub
push
xor
inc
mov
test
ret
sub
fsub
push
stc
sbb
sub
xchg
jp
frstor
mov
push
mov
mov
loope
jmp
sub
mov
jae
loope
xchg
je
dec
iret
dec
cmp
fld
(bad)
jmp
dec
cmc
inc
push
xchg
mov
mov
(bad)
sub
xor
xchg
jle
mov
into
mov
shl
jmp
sub
jne
imul
popf
xchg
out
aam
add
aas
pop
mov
int3
cmps
cld
mov
into
test
mov
stos
mov
inc
test
fdivr
mov
sbb
pop
sti
adc
(bad)
cmp
imul
inc
or
das
mov
sahf
mov
mov
mov
scas
sub
retf
lds
push
dec
jge
push
(bad)
inc
mov
int
add
cmps
dec
lahf
jo
add
cmp
cmp
inc
mov
xchg
lds
and
sar
push
jmp
push
loop
fldenv
(bad)
xchg
call
data16
push
xor
imul
inc
adc
sub
aad
xor
push
mov
or
mov
and
jle
int
dec
mov
adc
sub
dec
add
das
jmp
int
leave
xchg
or
lods
cmp
mov
nop
dec
sub
fdiv
jmp
push
fidivr
loope
jmp
dec
cmc
jne
push
and
inc
ret
cdq
add
movs
dec
pop
cmp
hlt
xor
imul
jecxz
mov
jmp
sub
gs
jmp
xchg
ror
dec
sbb
xchg
fs
mov
aam
push
add
call
sbb
test
sbb
sar
xchg
or
cli
jl
cmp
push
jno
das
jmp
pop
clc
aas
jae
cld
mov
and
stos
and
inc
rcr
sub
jmp
stos
push
fwait
ins
xlat
sub
jno
jo
fs
xchg
add
jno
jne
mov
rol
add
aaa
retf
mov
call
or
and
dec
and
repz
xchg
stos
mov
cmp
and
and
or
push
mov
or
inc
jge
fwait
jbe
inc
fstenv
imul
mov
mov
mov
ds
cmp
mov
xchg
cdq
pop
into
and
les
inc
lahf
dec
cld
mov
sbb
cmc
or
mov
fadd
call
cmc
adc
push
ds
push
aam
stc
lods
mov
hlt
ror
mov
mov
out
icebp
ja
call
inc
adc
sub
stc
adc
lods
aas
ret
mov
jne
xor
outs
dec
xor
mov
mov
add
adc
cmc
imul
test
imul
jp
mov
sub
fs
push
rol
test
and
mov
ins
push
outs
pop
push
xor
iret
xchg
aas
lds
dec
mov
sahf
xor
scas
xchg
xchg
pop
push
cdq
dec
aas
sbb
test
mov
sahf
push
mov
mov
and
(bad)
retf
outs
jecxz
lods
mov
and
inc
sub
mov
dec
test
cld
in
movs
stos
retf
(bad)
lea
cmc
retf
cdq
and
and
push
aad
inc
retf
xlat
aas
pop
das
xor
movq
xchg
fmul
enter
imul
xchg
js
sbb
test
test
mov
mov
push
jle
xchg
xchg
stc
scas
push
int
test
es
cwde
fist
sub
mov
mov
addr16
mov
dec
stc
mov
or
xchg
pop
adc
pop
mov
sar
dec
mov
push
sub
push
xchg
push
dec
fdivr
outs
scas
loope
push
inc
idiv
push
arpl
imul
into
jne
pop
xchg
cmp
xchg
jmp
xor
xchg
popw
push
or
ds
mov
pushf
pop
lock
(bad)
scas
cmps
jp
loopne
pop
pop
bound
dec
aas
fld
jmp
jnp
add
cmc
in
neg
nop
loope
xor
rol
sub
in
sub
pop
not
push
int3
(bad)
rcpps
ins
xor
mov
pop
xchg
pop
mov
hlt
mov
aad
jl
call
xchg
pop
(bad)
gs
or
lock
clc
sbb
call
xchg
inc
retf
pop
fsubr
pop
push
xlat
pop
push
mov
cwde
add
lods
or
sti
in
dec
push
ror
adc
adc
nop
adc
mov
test
aad
mov
cmp
push
shr
push
imul
movs
ficomp
mov
addr16
mov
clc
inc
aas
(bad)
mov
sub
sub
outs
scas
inc
iret
fcom
jnp
icebp
or
jae
cdq
pop
cwde
jo
or
xor
ins
stos
imul
jmp
mov
mov
movs
ret
(bad)
out
cmp
push
sbb
loope
or
xchg
and
sbb
mov
adc
out
idiv
push
jmp
aas
sbb
call
xchg
in
movs
xchg
data16
lds
adc
adc
cld
pop
inc
xor
bound
test
jb
inc
xchg
pop
icebp
inc
and
in
(bad)
xor
mov
pop
xor
push
fld
les
inc
retf
add
inc
cmp
sub
and
sub
aaa
fistp
or
mov
xor
adc
fwait
lahf
dec
and
xor
mov
outs
mov
push
and
cmps
mov
repz
(bad)
cmp
jl
xchg
sbb
add
cdq
shl
ret
xor
fsub
xchg
aad
scas
pop
popf
push
popa
and
retf
lock
adc
add
std
repz
lods
aad
or
adc
push
sub
fwait
xor
fs
xchg
out
lock
clc
xor
lds
cmc
add
ss
aad
icebp
aaa
jns
sub
mov
sub
std
xchg
ret
retf
fstp
sub
int3
pop
sbb
mov
ss
int
push
in
jne
push
jno
pop
loopne
xchg
jl
sbb
cmp
or
loope
sbb
mov
xor
arpl
push
or
lock
pop
out
fcmove
jle
push
mov
popf
push
pop
out
call
jg
adc
jmp
aad
mov
inc
jnp
test
or
xlat
mov
test
xor
or
out
sub
test
into
outs
pop
or
movs
pop
shr
push
dec
repnz
shl
(bad)
mov
sub
and
dec
push
jl
xchg
out
xor
lahf
dec
or
mov
(bad)
in
pop
inc
pop
aam
ret
ficomp
repnz
pop
mov
mov
clc
mov
mov
lea
jnp
pop
daa
pushf
or
xchg
call
ja
mov
in
cmp
cmp
stc
(bad)
jl
das
ds
pushf
outs
push
test
icebp
xchg
cdq
fwait
(bad)
mov
dec
add
std
push
aas
pop
pusha
rcr
aaa
bound
push
add
loope
hlt
das
pop
sub
out
jae
js
icebp
fwait
mov
sub
retf
movs
data16
lock
rcl
sbb
or
push
imul
test
mov
data16
nop
mov
xchg
enter
in
cmp
mov
and
push
fild
push
out
loop
adc
xor
and
sub
push
mov
cdq
pop
pop
adc
loopne
loop
shl
(bad)
int
sub
push
jne
adc
push
lahf
mov
dec
mov
sbb
jge
mov
stos
imul
cmp
jl
cmovle
std
push
pushf
mov
jmp
retf
or
je
dec
mov
xor
or
sbb
sbb
in
cld
cs
sub
cli
stos
jb
sahf
js
xchg
cmp
in
in
int3
repz
dec
aaa
pop
cmps
aas
cld
dec
call
pop
lods
es
xor
dec
mov
pusha
jns
clc
mov
test
xchg
inc
ins
xchg
ins
xor
leave
xchg
mov
sub
cmp
mov
sbb
or
push
fbstp
je
test
(bad)
arpl
sub
fistp
or
adc
sub
mov
xor
stc
icebp
or
jle
push
and
add
xchg
jb
jbe
add
pop
out
inc
sub
inc
fcmovb
sub
xor
stos
mov
repnz
inc
mov
mov
(bad)
in
in
(bad)
pop
xchg
and
stos
fldenv
mov
jo
stc
sub
fisub
daa
mov
imul
scas
(bad)
out
sub
rcr
jl
adc
sub
dec
lock
add
shl
inc
sub
es
mov
loop
arpl
mov
icebp
mov
jb
push
pusha
mov
push
xchg
ss
lea
xor
mov
daa
push
loop
and
xor
push
cs
pop
xchg
pop
(bad)
inc
data16
sbb
inc
cmp
call
in
sbb
ins
loope
pop
cli
(bad)
div
rol
retf
jge
pop
loope
dec
pop
nop
jg
imul
in
xchg
fwait
push
fsub
dec
outs
jmp
fld
pop
and
in
adc
push
inc
stos
sbb
adc
mov
int3
js
ins
and
das
ret
or
push
and
xchg
out
call
and
bound
and
test
fldcw
rcl
mov
xchg
xor
mov
addr16
xor
bound
inc
test
mov
mov
sahf
dec
loope
inc
pop
cmp
sbb
hlt
(bad)
push
add
mov
bound
(bad)
imul
and
sahf
sbb
mov
imul
sbb
cwde
dec
mov
inc
push
xchg
test
sbb
pushaw
fistp
mov
leave
dec
shl
push
sbb
dec
ins
lea
adc
(bad)
sub
fisttp
daa
(bad)
add
jns
push
loope
jae
push
jnp
xchg
sbb
lds
shl
ret
mov
jge
dec
stos
and
and
jp
icebp
lock
dec
adc
cmp
jecxz
push
jns
int
fadd
mov
inc
fcomp
mov
imul
pop
pop
mov
jno
js
adc
mov
push
dec
ret
(bad)
mov
int3
or
pusha
out
cli
sub
mov
sahf
add
sar
fsub
add
loope
adc
arpl
xchg
idiv
(bad)
jle
loope
ja
mov
stos
lahf
imul
sub
pmaxsw
sbb
nop
pop
inc
sub
ins
xlat
mov
scas
xchg
jne
sub
mov
scas
lahf
mov
test
pop
shr
cwde
or
(bad)
test
popf
out
hlt
sahf
(bad)
jg
retf
cmp
pop
fcmovb
int3
dec
sub
out
pusha
sti
in
inc
retf
jecxz
mov
sub
jmp
pop
and
retf
inc
sub
(bad)
cmp
xchg
or
add
dec
movs
ret
jnp
cmp
jns
(bad)
jmp
repz
mov
xor
xchg
xchg
das
scas
and
xor
lock
in
inc
push
mov
neg
sar
daa
jecxz
popa
mov
pop
sahf
clc
sub
jmp
mov
not
fld
sbb
retf
stc
ret
sbb
dec
gs
jmp
adc
sbb
add
cld
push
cmps
fdiv
aas
aaa
ret
loope
sbb
cdq
fsubr
adc
mov
push
jno
xor
(bad)
mov
dec
sbb
ret
xchg
clc
add
(bad)
push
and
sub
add
pop
xchg
pop
rcr
aad
and
cwde
cmps
aam
fisubr
push
out
mov
cmps
lods
punpckhwd
jns
add
in
bound
test
out
ja
mov
data16
ja
out
test
jg
mov
les
mov
out
dec
mov
inc
int
inc
scas
cmc
mov
jne
xchg
hlt
dec
movs
jle
pop
mov
sbb
les
outs
or
cld
or
mov
and
xchg
ins
sub
ss
das
inc
hlt
icebp
add
stos
scas
retf
mov
and
sub
gs
repz
int
xchg
icebp
sbb
ins
dec
xchg
int3
dec
ret
sbb
adc
add
ja
icebp
cld
add
addr16
fs
(bad)
jg
jb
mov
(bad)
sbb
push
psrlq
inc
dec
jns
retf
(bad)
(bad)
loopne
repnz
xchg
mov
daa
pop
cmps
out
div
sti
xchg
lea
stos
push
hlt
outs
mov
or
cmc
in
test
dec
push
xor
(bad)
ja
or
mov
(bad)
rcl
pop
ret
rol
or
in
cmps
and
enter
jle
mov
(bad)
test
mov
ss
jmp
(bad)
les
xchg
or
fs
pop
rcr
aas
and
scas
dec
(bad)
fmul
and
movzx
mov
mov
xchg
cli
or
add
push
scas
mov
ins
loopne
out
inc
mov
inc
fucomi
push
push
dec
lods
dec
adc
int
cmp
popa
pop
icebp
(bad)
mov
push
arpl
fist
mov
imul
rcl
test
xlat
mov
test
cs
das
int3
fstp
call
sar
xor
addr16
cdq
xchg
jae
lods
aad
push
hlt
jno
xchg
jno
ret
imul
pop
cmps
movs
(bad)
push
in
mov
arpl
xor
enter
push
sbb
imul
loope
dec
cli
retf
(bad)
std
push
adc
outs
sub
pop
je
or
gs
iret
imul
and
xchg
ja
jmp
adc
lds
popf
in
push
scas
adc
sub
pop
outs
adc
cmp
scas
sub
mov
xchg
movs
jl
scas
mov
mov
adc
push
mov
(bad)
call
adc
adc
stc
sub
xchg
in
(bad)
movs
jg
add
rcr
ja
or
sbb
adc
and
xchg
call
in
pop
int3
dec
jno
lods
les
js
xchg
retf
cli
adc
shl
jb
das
ins
fnstsw
or
push
mov
adc
loop
cmps
mov
enter
out
pushf
daa
mov
dec
xor
repz
xor
fstp
out
adc
adc
mov
pop
loope
mov
push
dec
sbb
push
cs
lods
sub
lock
jl
jne
inc
push
xor
in
or
lds
retf
mov
(bad)
dec
push
or
cwde
loopne
cmp
mov
aas
sbb
clc
leave
xchg
mov
xchg
jecxz
pop
cmp
push
(bad)
test
inc
cs
mov
scas
hlt
sub
and
retf
scas
jae
xlat
retf
nop
push
stos
aam
adc
cli
dec
div
mov
das
test
test
sti
push
dec
int
sub
ins
fbld
mov
repnz
xchg
fild
mov
cmp
aas
xor
xor
push
mov
or
daa
test
fs
retf
adc
mov
ficom
inc
sbb
out
sbb
sub
inc
dec
cwde
(bad)
and
dec
dec
ror
mov
xchg
add
sbb
jge
lds
pop
addr16
out
retf
adc
xor
hlt
cdq
mov
mov
push
adc
mov
cmps
test
popf
outs
mov
mov
inc
ret
pop
nop
or
test
pop
jne
adc
push
ss
dec
cld
push
adc
cwde
sti
mov
test
pop
and
xor
(bad)
fisttp
loop
pop
jge
pop
fld
lahf
loopne
xchg
mov
jmp
mov
mov
lods
or
xor
leave
adc
inc
iret
ins
or
aas
cdq
add
inc
out
sub
mov
movs
adc
xchg
cmp
and
inc
xchg
shl
test
mov
jno
out
push
add
mov
jle
sub
shl
mov
cmps
push
inc
test
or
jbe
inc
ins
inc
xchg
(bad)
fdiv
mov
lods
hlt
popa
lock
imul
lock
cld
sub
aas
or
scas
mov
dec
das
mov
xor
inc
xor
loopne
jmp
cmp
jmp
push
mov
int3
push
fild
shr
mov
sbb
cmp
idiv
sub
mov
push
and
call
jno
pop
jl
adc
lea
push
aad
jae
jae
push
mov
xor
adc
aaa
push
daa
gs
or
xchg
sti
pop
rol
add
push
add
xchg
xchg
inc
ins
xchg
dec
cdq
jbe
sub
in
icebp
xor
in
mov
adc
adc
sub
adc
imul
jae
xlat
imul
imul
shr
xlat
mov
and
xor
add
out
dec
js
aaa
movs
or
(bad)
jmp
add
(bad)
pop
cli
cmp
pop
mov
cli
popf
ds
inc
xchg
and
imul
and
into
cmp
jns
in
pushf
or
mov
sub
push
pop
inc
in
dec
test
jmp
pop
jge
xchg
mov
int
jae
xchg
jno
mov
(bad)
pop
stc
push
xlat
dec
add
sbb
xor
sar
dec
xor
scas
lahf
mov
jae
cmps
inc
call
push
mov
into
ja
in
stos
xor
pop
pop
xchg
cmps
pusha
xchg
js
test
sahf
jbe
pushf
imul
fcmovnb
or
xchg
fnstsw
es
xor
mov
ins
xchg
shl
sar
(bad)
in
mov
mov
test
mov
repnz
out
cmp
jne
jge
aaa
test
lods
fcmove
movs
sub
fwait
scas
lods
jecxz
fnstenv
daa
sbb
mov
sbb
adc
cmp
gs
jge
push
xor
mov
inc
push
inc
and
sti
fld
cmps
dec
inc
jecxz
mov
adc
out
inc
(bad)
mov
(bad)
sbb
inc
stc
ins
add
lods
push
mov
rcr
push
daa
clc
fst
push
sbb
shl
pop
sub
mov
hlt
add
mov
pop
pop
mov
jae
sub
add
or
and
fs
retf
ret
fwait
test
jg
mov
adc
pop
inc
lds
mov
add
fadd
gs
jp
cwde
sbb
mov
(bad)
cdq
adc
adc
test
daa
inc
loop
xchg
mov
lds
int
mov
addr16
mov
or
mov
(bad)
aas
(bad)
sbb
fcomp
cmp
mov
dec
add
inc
clc
mov
mov
xor
or
fwait
cmc
aaa
or
cmp
xor
(bad)
lods
pop
push
imul
repnz
adc
jge
in
ss
js
mov
call
inc
pop
pusha
jbe
and
aad
fs
mov
or
jo
mov
call
or
mov
loop
fdiv
mov
adc
hlt
pop
push
out
jle
or
jmp
lock
sbb
adc
cmps
jns
adc
repnz
stc
iret
outs
hlt
out
ins
iret
cmp
rol
mov
into
xor
pop
sbb
pop
mov
jmp
ficom
push
dec
nop
xor
test
jns
dec
movs
cmp
pop
icebp
cmp
sar
jge
out
and
or
inc
and
or
sahf
push
mov
pop
jo
jbe
pop
ret
or
fwait
mov
mov
cmp
xlat
ret
imul
mov
and
add
fisttp
add
icebp
cmp
mov
or
cmps
popf
sti
fcomp
mov
es
ja
das
cs
dec
cwde
sub
cdq
or
jbe
ficom
retf
add
jecxz
xor
jbe
les
jmp
aaa
and
and
stos
sbb
mov
test
mov
sub
inc
dec
mov
fwait
out
test
mov
xor
jle
aad
cli
mov
cwde
xor
xor
cdq
sub
jmp
mov
scas
and
mov
adc
push
xlat
xchg
dec
adc
push
adc
test
or
icebp
shr
xor
out
xor
mov
xlat
cmps
xor
fbld
adc
add
mov
pop
pop
jns
js
cmc
mov
mov
pop
mov
adc
test
ss
(bad)
ret
mov
fldenv
in
fwait
jae
dec
push
or
sti
es
xchg
sahf
mov
mov
cli
push
sbb
cmps
sbb
addr16
and
xor
repnz
scas
ins
xor
push
out
in
push
mov
push
outs
pop
jmp
mov
adc
fadd
rcl
ror
lds
add
sub
jg
call
bound
push
adc
xchg
into
add
and
je
fcomp
pop
test
addr16
mov
sub
outs
clc
std
mov
adc
sub
fimul
add
outs
pusha
pop
sub
int
std
push
clc
in
mov
in
dec
test
test
inc
push
xor
jno
pop
jg
nop
mov
mov
dec
mov
jp
add
add
ja
mov
xchg
push
sub
and
jle
lods
jns
inc
push
pop
mov
cmc
out
cmp
or
push
retf
js
mov
test
stos
pop
gs
rcr
lds
mov
test
push
lods
int3
lea
imul
ins
inc
inc
ins
xor
nop
jl
jnp
(bad)
or
hlt
adc
aas
js
ins
retf
les
popa
das
repnz
jo
cdq
adc
sub
jp
mov
ins
imul
int
lahf
push
jns
repnz
fmul
fisub
enter
or
js
dec
mov
sub
out
jo
sti
push
fldl2e
mov
je
test
loop
push
adc
sbb
pop
sti
into
push
cmp
js
int
hlt
jmp
sub
inc
loope
jbe
call
scas
aam
mov
mov
jmp
mov
xchg
xor
push
aam
adc
sub
jge
ja
loopne
aaa
int
mov
pop
rcr
ja
mov
push
jmp
fidiv
mov
out
sti
mov
inc
dec
cmp
add
hlt
cld
(bad)
pop
sbb
movs
popa
test
add
jb
sahf
jecxz
enter
push
lahf
leave
adc
xor
push
jnp
cmp
leave
mov
(bad)
and
dec
std
call
adc
jge
push
push
push
outs
retf
cmp
arpl
mov
lods
adc
dec
out
xchg
add
pop
cmp
sti
mov
cld
cdq
sbb
lahf
fisub
cmp
(bad)
repnz
sub
add
xchg
test
mov
fstp
mov
adc
repnz
cli
push
xlat
mov
call
lea
data16
rol
xchg
and
or
jne
movs
mov
inc
mov
sar
ss
mov
mov
fistp
test
xchg
cmp
cmps
arpl
call
dec
sub
outs
pop
sub
call
pop
xor
in
jno
repz
sub
ror
mov
xchg
mov
sti
bound
add
icebp
pop
push
sbb
(bad)
das
(bad)
js
jo
push
cmovae
aaa
fbld
int3
inc
mov
adc
(bad)
sbb
aaa
jno
push
mov
xchg
outs
loop
add
xchg
(bad)
pusha
pop
sub
xchg
push
xor
inc
outs
mov
mov
or
shl
lds
push
push
fs
adc
sti
lods
jg
out
xor
sbb
xor
fisttp
jmp
int
daa
mov
lahf
mov
mov
jns
fsubr
mov
xchg
ficom
cmp
dec
xchg
or
fnsave
add
out
nop
inc
mov
fs
inc
call
fs
imul
pop
pop
mov
loope
cmp
imul
mov
pushf
jbe
imul
sub
jmp
mov
dec
call
stos
cmps
iret
or
movs
sti
clc
test
jl
push
sbb
add
sbb
shl
loopne
cmc
and
sahf
xchg
(bad)
lahf
jle
test
and
xor
mov
rcr
les
das
mov
pop
mov
jo
sbb
jns
mov
cmp
and
mov
push
leave
jns
mov
(bad)
cmps
out
cmp
ins
mov
shl
(bad)
(bad)
(bad)
dec
js
jg
xor
cmps
pushf
in
dec
dec
test
rcl
rcl
lods
inc
xor
ss
push
aaa
or
and
cmp
mul
dec
mov
out
jmp
fldcw
mov
pop
pop
icebp
sbb
push
sub
movs
or
cdq
mov
mov
add
dec
cmp
in
inc
sbb
in
cmp
jecxz
mov
jnp
je
(bad)
ds
add
aam
dec
or
lods
cwde
into
pop
mov
dec
xchg
mov
jb
and
rcl
rol
fcom
adc
inc
fidivr
adc
mov
jbe
out
fnstenv
into
pop
das
and
xchg
push
int3
jnp
jecxz
out
addr16
adc
mov
mov
push
loopne
cmc
jbe
jae
fld
loop
push
js
sub
call
int
icebp
sub
xchg
mov
ss
sub
mov
adc
mov
inc
sub
(bad)
cld
xor
xchg
lods
ds
cmp
lods
ja
mov
bound
test
inc
out
xlat
dec
repz
jmp
cmp
mov
sub
ror
aad
add
fwait
jp
sbb
or
mov
xlat
jmp
jle
sub
mov
ror
hlt
dec
outs
mov
pop
scas
or
fs
xchg
rol
loop
nop
mov
dec
lods
mov
cmp
int3
mov
jp
pop
imul
cmp
(bad)
cli
xchg
lahf
push
mov
sub
jo
cmp
pop
mov
jne
pop
fistp
jg
repnz
mov
pusha
and
ss
inc
push
dec
dec
sbb
dec
xchg
pop
dec
add
cmps
inc
sahf
jne
cmps
sahf
sub
(bad)
mov
dec
or
mov
fcomp
call
(bad)
popf
push
fidivr
mov
mov
xchg
mov
in
inc
in
loopne
in
inc
push
ins
jno
cli
dec
test
mov
cmps
ins
in
mov
push
sti
into
lock
jb
dec
dec
jecxz
loope
xor
cmp
inc
sbb
or
lahf
adc
jmp
sbb
jne
(bad)
cmp
fadd
test
jns
sub
xlat
pop
test
pop
jl
bound
mov
mov
jl
mov
idiv
jae
cli
std
adc
pop
call
popa
inc
inc
shr
cdq
sub
clc
in
mov
dec
test
jle
push
push
mov
xchg
mov
pushf
jns
jbe
ds
jb
add
test
std
movs
repnz
sub
sti
cmps
clc
mov
sbb
in
mov
jno
aaa
mov
imul
pusha
shl
icebp
jns
sahf
or
push
dec
ret
push
es
adc
sub
pop
nop
mov
ss
addr16
leave
pop
shr
and
pop
or
call
fmul
pop
outs
(bad)
in
sbb
sbb
mov
mov
jb
std
adc
call
(bad)
shl
sub
xor
inc
mov
loope
mov
and
mov
or
add
dec
retf
push
rcr
call
cmps
xchg
or
loop
xlat
xor
jmp
cmp
cmp
xchg
sbb
out
test
shl
iret
cdq
pop
mov
push
pop
inc
pop
mov
int3
mov
mov
scas
cs
fidivr
outs
dec
add
xchg
call
add
jo
mov
into
lods
retf
cwde
dec
sbb
adc
cld
mov
shr
adc
bnd
jecxz
retf
jb
mov
adc
and
out
mov
xchg
inc
jbe
pop
cmp
add
jle
jb
and
inc
ret
arpl
repz
pop
xor
sbb
push
mov
test
clc
sbb
dec
jmp
or
and
pop
fdiv
ja
or
jmp
mov
jge
push
iret
pop
fnstenv
icebp
adc
push
xlat
mov
push
jge
push
xor
les
fisub
lahf
div
add
dec
movs
and
test
je
js
mov
xor
dec
mov
pop
jmp
rcl
dec
cmps
mov
pop
ds
xor
xchg
nop
shl
retf
int
sbb
lods
adc
or
sahf
push
sbb
xchg
sbb
outs
push
adc
xchg
sbb
inc
sub
mov
(bad)
js
cmp
fstp
xchg
addr16
outs
ds
int
div
xchg
xor
xchg
sbb
xchg
inc
(bad)
arpl
mov
mov
jmp
cmp
dec
push
inc
push
add
add
(bad)
jmp
in
mov
push
mov
ds
retf
in
xchg
aas
out
dec
cs
or
cmp
ins
lock
push
rol
fs
sub
push
(bad)
xchg
mov
xchg
push
push
dec
cmps
adc
jp
mov
adc
jbe
sub
add
scas
sub
in
adc
cmp
(bad)
mov
cli
not
xchg
mov
mov
xor
pop
adc
iret
jbe
and
mov
inc
scas
sbb
dec
xchg
or
call
add
imul
cmp
sbb
push
aaa
aas
jecxz
popf
push
jo
stos
jecxz
xor
(bad)
test
lods
xor
cmps
and
clc
xchg
rcr
push
pop
lods
cwde
ins
(bad)
sbb
dec
mov
nop
inc
jmp
adc
or
mov
adc
sub
in
bound
sbb
jg
les
add
popa
xchg
ret
sahf
aas
jl
iret
add
xchg
pushf
or
push
xlat
fadd
mov
sub
shr
call
pop
push
mov
ins
or
pop
dec
div
push
sub
gs
(bad)
stos
(bad)
(bad)
push
sub
or
out
xor
push
or
clc
lds
dec
shl
addr16
sub
adc
jl
sbb
mov
add
jbe
ret
pop
ficomp
es
mov
jecxz
jecxz
(bad)
stos
push
int
adc
movs
jb
sar
js
popa
push
adc
ja
mov
cwde
out
pop
aas
fild
shl
or
pop
aaa
(bad)
aam
cmps
push
sbb
mov
cmc
aad
mov
mov
mov
xchg
(bad)
sub
retf
movs
xchg
jp
cdq
mov
dec
dec
jmp
mov
or
jmp
cmp
imul
jmp
fldcw
daa
into
mov
push
sahf
mov
loopne
and
sub
icebp
sbb
mov
fistp
int3
in
mov
jmp
in
sub
cs
lods
cmp
les
mov
in
fsub
dec
push
je
scas
sbb
aaa
or
popf
inc
mov
xor
(bad)
or
inc
xchg
das
xchg
int3
mov
cmc
dec
mov
test
sbb
jmp
loop
hlt
ins
not
jno
les
lods
ss
mov
fcmovnbe
fdivr
retf
pop
imul
add
inc
mov
add
or
sar
fbstp
pop
add
ret
jmp
xlat
xchg
jp
das
test
mov
jg
cwde
cli
and
dec
dec
mov
outs
scas
push
cmp
(bad)
fcmovb
sbb
inc
and
les
cmc
mov
mov
scas
lock
shr
loopne
scas
ins
call
mov
mov
pushf
fcom
(bad)
fs
ret
movs
ret
loope
mov
add
push
(bad)
repnz
or
scas
leave
in
and
movs
cdq
jae
cmps
mov
addr16
int3
inc
outs
dec
xchg
jmp
movs
mov
sbb
jecxz
cmp
aaa
cmp
nop
pop
leave
aaa
loope
aaa
mov
mov
fiadd
test
dec
ret
cmp
sub
cs
call
xchg
cmp
scas
push
imul
test
pop
dec
dec
mov
jl
in
outs
cld
pop
push
xlat
fptan
scas
ins
test
fisttp
fmul
popa
std
int
je
jmp
loop
mov
dec
cmp
or
inc
std
jbe
push
pusha
pusha
stos
adc
jp
dec
push
jg
bound
inc
jle
frstor
aam
jne
inc
shl
inc
sbb
fwait
mov
xor
or
outs
add
fistp
push
fwait
adc
jae
pop
xlat
adc
rol
add
loop
sub
leave
dec
adc
mov
cmp
xor
add
rol
ins
inc
push
xor
nop
gs
and
inc
or
(bad)
cmp
vpmovsxwq
or
mov
push
mov
sub
fs
cmp
xchg
jo
jmp
cmps
icebp
addr16
test
mov
pop
call
dec
xchg
add
lahf
lods
add
das
enter
in
sahf
mov
test
fdivr
pop
loope
cdq
push
shl
loope
movs
mov
movs
mov
aaa
mov
mov
popf
int3
and
rcl
pop
add
mov
(bad)
cli
repz
imul
das
or
xor
in
std
cmp
mov
sub
adc
cmp
mov
mov
jbe
scas
(bad)
sub
inc
out
ins
or
push
adc
xchg
adc
sub
pusha
in
cdq
inc
sti
inc
ss
aaa
sti
aas
pop
data16
imul
mov
mov
rol
mov
int3
iret
inc
sub
mov
shl
aaa
add
jnp
int3
leave
adc
hlt
pop
sti
imul
das
shr
into
push
cmp
pop
cmps
and
and
dec
mov
test
cmp
push
mov
retf
jno
xchg
in
mov
aas
mov
(bad)
call
aaa
jge
cmps
sbb
or
daa
inc
out
fsub
sbb
pushf
pop
sbb
push
adc
or
test
call
pop
rol
xchg
or
aas
add
sti
dec
lds
mov
bound
cmp
idiv
stc
add
push
pop
fwait
sbb
sbb
pop
xchg
jmp
pop
sub
test
inc
int
stos
sar
jg
(bad)
ficomp
xchg
imul
mov
test
lock
mov
stos
(bad)
enter
pop
adc
dec
cmp
(bad)
xchg
mov
lds
clc
and
and
nop
jb
cmp
in
popa
xor
or
add
mov
dec
arpl
lock
ss
mov
pop
int3
pop
popa
ds
int3
popa
inc
leave
push
xlat
lods
dec
dec
xchg
rol
xlat
cmp
in
push
pop
arpl
mov
jno
ror
test
rol
cwde
fwait
or
pop
retf
cmp
ds
jl
iret
inc
dec
push
push
mov
hlt
and
dec
xchg
mov
pop
jae
scas
shr
into
leave
sub
ja
jmp
xor
add
push
push
adc
dec
out
pop
in
cdq
pop
jmp
mov
or
dec
cmp
nop
add
sub
sub
pushf
repnz
ins
and
cld
rol
jno
jecxz
pop
lahf
leave
jmp
and
mov
dec
cmp
inc
loopne
stos
dec
jecxz
test
xor
push
shr
pushf
mov
out
xchg
in
mov
mov
icebp
mov
jns
jno
or
scas
inc
push
jno
pop
and
inc
jecxz
ins
retf
mov
icebp
jns
outs
rcr
shl
mov
jo
js
pop
aad
aam
fisub
mov
xchg
xchg
and
jmp
and
iret
jmp
sub
add
jo
popa
ja
pop
dec
and
sub
out
add
and
clc
push
test
and
or
sbb
nop
jmp
jb
inc
sahf
scas
mov
stc
lods
mov
mov
xchg
inc
dec
mov
aad
xchg
cmp
repz
call
sub
mov
gs
or
daa
push
pop
movs
aam
movs
pop
imul
sbb
cmp
in
jb
push
movs
out
push
pop
mov
pop
aad
clc
pop
dec
xor
icebp
pop
jb
out
or
out
fst
aad
das
dec
inc
or
shr
mov
mov
xchg
or
mov
rcr
arpl
mov
pusha
sbb
repz
stc
push
ret
test
es
fsub
xor
rol
les
mov
cmps
or
adc
imul
xor
loope
cmp
and
leave
dec
mov
ins
cmp
adc
call
xchg
stos
out
jo
jecxz
mov
cdq
pop
add
xor
idiv
jno
rcr
mov
mov
pop
sbb
adc
or
and
push
retf
retf
or
push
sbb
inc
loop
xchg
cmp
jmp
dec
adc
adc
pop
cmp
push
ret
jp
pop
cmp
cmp
push
push
shl
stc
jge
enter
mov
retf
push
or
inc
inc
mov
rcl
neg
pop
adc
push
syscall
fwait
mov
pop
scas
xor
xor
daa
(bad)
cmp
mov
sar
stos
pushf
mov
fnop
stos
pop
fld
push
ins
rcr
dec
jmp
push
shl
jne
inc
cmc
mov
movs
lods
in
out
jg
pop
pop
xor
sbb
mov
xor
mov
adc
add
cmp
aaa
dec
jp
xor
xchg
fnsave
mov
xchg
fstp
iret
adc
xor
pop
mov
ret
adc
xlat
jb
xchg
mov
push
sbb
inc
mov
mov
or
jmp
mov
dec
loopne
jmp
test
ja
push
les
cwde
(bad)
popf
aaa
jg
jecxz
push
ret
scas
mov
jo
push
pop
push
das
xor
inc
ins
fldcw
and
mov
pop
xlat
test
xor
add
push
test
push
fmul
xchg
mov
lahf
out
leave
adc
sbb
mov
add
xchg
call
fwait
ret
mov
add
icebp
sub
jmp
loop
or
gs
jbe
std
cmp
dec
test
add
or
xor
mov
mov
sbb
dec
push
popa
xchg
fstp
pop
mov
ss
adc
int3
aad
dec
add
scas
add
cli
pop
shr
cs
xor
pop
jne
addr16
cmps
sub
jecxz
dec
inc
and
xchg
sar
mov
int3
sbb
neg
inc
fist
and
cs
fmul
sub
push
scas
add
lea
(bad)
addr16
sub
cmp
add
adc
rcl
mov
outs
or
or
jns
mov
adc
mov
div
clc
xor
dec
pop
iret
cmp
sub
adc
neg
clc
pop
jb
fs
push
jg
adc
jnp
dec
push
cmp
inc
outs
stc
inc
ss
jo
and
inc
(bad)
pushf
push
ret
mov
push
shl
sar
and
(bad)
push
je
jbe
adc
cwde
idiv
and
repz
mov
loop
adc
xor
mov
sbb
inc
adc
or
rol
jl
cmps
xchg
cmps
mov
retf
dec
dec
imul
outs
imul
stos
ficom
iret
adc
(bad)
dec
into
jno
jnp
mov
jecxz
add
movs
popa
fmul
dec
or
fld
cdq
and
jmp
mov
and
pop
xchg
xchg
arpl
movs
dec
shl
mov
daa
(bad)
retf
pop
pop
mov
pop
rcr
(bad)
and
jl
mov
arpl
jecxz
xor
jl
(bad)
(bad)
or
jno
jo
lahf
fmul
call
mov
je
push
xchg
push
js
sub
mov
es
fstp
in
jnp
push
js
(bad)
push
loop
sbb
arpl
in
push
xchg
cwde
xchg
cmp
cmp
in
push
imul
iret
fs
and
xor
add
mov
clc
pop
push
in
and
cmp
sub
nop
fisttp
or
mov
retf
xor
sbb
xchg
pop
adc
mov
imul
cmp
push
jle
sub
loope
(bad)
shl
sbb
mov
jmp
loopne
xor
push
sbb
inc
aad
adc
add
cmp
inc
das
cdq
cmps
pushf
mov
ror
xchg
xchg
pop
and
push
test
loop
out
loopne
and
adc
push
daa
xchg
loopne
jb
sbb
stos
or
(bad)
mov
pop
bound
adc
ins
scas
and
xchg
xchg
push
rcr
jl
inc
out
jmp
xchg
xchg
nop
pop
pop
cmp
dec
dec
fs
adc
pop
adc
mov
jo
(bad)
mov
iret
leave
rcr
push
ins
loopne
(bad)
lods
xchg
mov
mov
stc
xchg
fstp
cmc
das
sahf
jge
mov
sub
cld
retf
mov
fcom
dec
dec
adc
xor
cmp
cmp
aas
xchg
fbld
inc
xor
ret
stos
(bad)
(bad)
(bad)
repnz
sub
test
or
xchg
pop
clc
iret
je
repnz
mov
movs
xor
lods
dec
xor
shr
push
dec
rcr
xor
in
mov
jle
dec
pop
jge
xchg
jg
jge
je
gs
hlt
imul
cmp
mov
inc
imul
ret
lahf
push
mov
das
mov
je
pop
test
sbb
jl
add
aas
out
xor
jns
ins
or
xchg
repz
mov
inc
test
push
movs
cmp
or
gs
(bad)
cmp
adc
xchg
push
cmp
sbb
repz
fpatan
movs
loopne
hlt
and
jbe
push
shl
clc
test
and
test
xor
in
mov
mov
mov
fisubr
out
in
icebp
mov
mov
scas
xor
imul
dec
lds
jmp
xor
and
cdq
push
push
ins
dec
or
popf
ja
loope
ja
mov
cs
pop
imul
lods
xchg
xchg
rol
test
mov
ret
inc
das
pop
call
add
rcl
adc
mov
jb
pop
pop
test
popa
ret
icebp
lods
jns
dec
popf
int3
cmp
daa
adc
sub
pop
bound
outs
pop
pop
call
sbb
xor
ficomp
sub
mov
jg
outs
push
mov
mov
mov
(bad)
and
mov
jle
retf
rcl
add
push
push
push
mov
and
repnz
test
pop
or
icebp
lods
ins
test
dec
cwde
mov
es
shl
not
jecxz
(bad)
in
daa
loope
je
jecxz
dec
mov
adc
xlat
add
iret
fild
fs
fcomp
or
jmp
jg
or
mov
mov
ret
rol
sahf
loope
popf
daa
jae
popw
fcom
daa
movs
test
jb
mov
cmp
and
dec
and
pop
mov
xor
pop
and
push
inc
jl
jge
inc
push
mov
jb
stc
in
pushf
inc
fld
jne
stos
pop
out
xchg
ret
sbb
or
inc
stos
vpunpckhqdq
ins
push
loop
es
sbb
cs
xchg
push
pop
adc
div
xor
das
adc
pop
movs
and
scas
aaa
inc
add
add
or
or
jmp
adc
call
lods
retf
cmp
add
out
mov
xchg
imul
jae
adc
or
adc
shr
into
frstor
out
jno
add
mov
and
add
jae
jg
xlat
xchg
push
fild
add
repz
sbb
lea
sbb
loop
and
ret
or
and
je
cwde
add
(bad)
xor
arpl
inc
adc
call
retf
add
clc
mov
jp
and
dec
sub
cmps
jl
out
jae
shl
mov
fmul
dec
mov
mov
stos
cld
fs
xchg
test
adc
int3
sbb
xchg
push
cdq
xchg
sub
xchg
(bad)
adc
lea
jbe
ins
sbb
das
loope
je
or
addr16
or
gs
xchg
mov
jp
call
dec
leave
and
xor
(bad)
es
outs
sahf
outs
and
rcl
arpl
jle
cmp
push
test
fwait
mov
jo
out
mov
mov
adc
xor
add
pusha
push
mov
loope
cmp
push
das
fcomp
clc
sbb
sti
xabort
test
add
shr
mov
jp
inc
out
adc
not
xor
sti
add
sbb
pop
sar
retf
cmps
gs
jecxz
into
iret
stos
cs
inc
cwde
adc
xchg
(bad)
or
loop
mov
cmp
fnstsw
int
inc
test
cmps
and
cmps
jmp
xor
adc
test
sub
mov
ins
test
ins
jecxz
aaa
or
xchg
leave
cmps
and
dec
ds
sub
les
out
mov
xchg
pop
icebp
cmps
xlat
mov
push
ss
push
xchg
pop
add
sub
sbb
into
and
dec
mov
das
fild
jmp
enter
repz
adc
enter
cmp
cli
pop
out
(bad)
popf
fiadd
ins
mov
jno
gs
sub
dec
rcr
mov
mov
push
add
out
push
push
movs
call
sub
xor
xor
div
nop
(bad)
push
mov
repz
xchg
test
add
xchg
je
ret
xor
je
outs
movs
xchg
push
pop
push
js
adc
idiv
jbe
jb
aas
xor
iret
jns
push
sub
jge
and
ins
pop
cmc
ret
mov
xlat
sti
bound
xor
and
and
scas
xlat
pop
xchg
mov
stc
scas
rol
mov
rcl
jne
hlt
ins
lock
dec
xor
xlat
imul
push
ins
mov
loop
sti
pop
scas
mov
ret
push
cmps
xchg
or
dec
push
cwde
fiadd
lea
xor
scas
add
aam
and
test
pop
add
int3
lea
jno
mov
xchg
and
inc
push
xchg
and
pop
xor
mov
mov
dec
adc
in
pop
and
test
jno
adc
test
ss
dec
jmp
mov
or
push
and
sub
data16
(bad)
lods
int3
mov
xlat
jmp
lods
test
outs
adc
sub
fucomi
aad
(bad)
shr
add
inc
or
cmp
aaa
mov
(bad)
inc
gs
and
in
loopne
jmp
add
fwait
popf
bound
adc
fcmove
or
add
mov
mov
mov
daa
fist
movs
push
inc
jnp
or
jns
data16
mov
add
sahf
jbe
adc
sbb
mov
push
rol
inc
or
into
(bad)
mov
jmp
jno
xchg
mov
(bad)
and
and
data16
push
cmp
or
pop
adc
inc
pop
int3
icebp
test
mov
pop
ds
mov
or
cmps
and
outs
add
mov
call
xchg
mov
(bad)
jae
add
aaa
(bad)
mov
jo
mov
fwait
push
sbb
adc
out
and
xor
push
pop
fist
lds
cld
jge
adc
xor
sti
push
push
stos
mov
sub
sub
ror
or
push
and
and
ret
cs
cmp
sbb
inc
mov
bound
cmps
movups
xor
into
ret
dec
stos
cli
push
jl
cmp
jmp
out
add
fcomi
stos
mov
imul
jecxz
ror
inc
leave
xor
jmp
fcmovnu
call
mov
je
shr
mov
push
xor
add
in
jns
cmp
shl
and
sbb
shl
gs
popa
jg
retf
std
jmp
dec
adc
add
add
es
and
pop
and
cmp
in
sub
nop/reserved
iret
lar
lods
sbb
mov
lds
mov
frstor
repnz
test
mov
pusha
or
push
and
mov
push
inc
iret
jge
mov
pop
jl
xor
cli
fdiv
clc
mov
sbb
ja
xor
pop
pop
faddp
sbb
inc
cmc
sbb
push
das
ins
cmp
cmp
and
dec
cmps
mov
pop
jle
js
ror
sbb
repz
xchg
bound
stos
jg
push
mov
sub
fist
sbb
adc
lock
mov
mov
(bad)
mov
push
dec
or
and
mov
int3
inc
push
dec
push
xchg
test
adc
jmp
repnz
inc
daa
jge
lea
into
xchg
enter
div
cmc
xchg
pop
or
aam
movs
sub
xchg
mov
sub
mov
sahf
sti
addr16
lods
(bad)
dec
inc
repnz
xor
aad
push
ins
jae
data16
and
jecxz
cli
inc
loop
mov
mov
in
aaa
push
push
adc
adc
repnz
aas
fsubrp
push
sahf
or
push
cmps
les
test
push
cs
pop
or
sub
dec
int3
into
lods
(bad)
inc
cmp
(bad)
jmp
mov
sar
sub
in
jl
or
cmp
cld
mov
and
das
lea
imul
loope
mov
and
fs
jp
inc
mov
cld
jmp
xchg
(bad)
sar
std
push
outs
jmp
std
add
leave
je
xor
out
cmp
(bad)
js
movs
xor
xchg
inc
fidiv
ret
xlat
sbb
fst
push
xchg
or
jge
scas
push
test
jle
sbb
and
iret
jg
and
sbb
popa
mov
in
jge
and
inc
loop
cld
in
shl
shl
pushf
jmp
ins
xor
mov
adc
ds
shl
pop
jge
pop
sub
loope
mov
dec
mov
add
dec
add
xchg
scas
das
add
and
sbb
push
ins
cmp
or
inc
mov
dec
rol
inc
gs
xchg
xor
movs
lods
cwde
cmp
cld
loope
aas
jg
pop
dec
dec
(bad)
xor
inc
ja
jl
es
pop
and
fild
sar
add
(bad)
mov
xchg
mov
and
js
out
ds
inc
add
shl
mov
pop
or
mov
mov
icebp
or
shr
add
pop
call
ja
les
addr16
and
mov
mov
inc
mov
mov
ret
mov
lods
or
(bad)
int
xor
xchg
and
inc
mov
or
ror
aam
es
lods
ins
sub
dec
jle
dec
inc
inc
aas
into
mov
cmps
inc
nop
ud1
ret
jecxz
sar
jae
sbb
mov
dec
and
jge
cmp
adc
aaa
int3
xor
add
loop
xchg
sub
xchg
stos
fsubr
dec
and
out
ret
popf
adc
cmp
push
sbb
imul
and
sahf
or
mov
sbb
cli
ficom
adc
xor
dec
out
fs
mov
and
inc
sti
test
xchg
inc
ret
jg
adc
add
in
pop
nop
out
mov
icebp
or
test
sbb
test
(bad)
fdivr
or
in
lock
bsr
fnop
mov
jle
fwait
sub
xchg
or
sbb
add
into
gs
xlat
mov
imul
nop
test
xor
xchg
sbb
jno
in
hlt
loope
xchg
mov
stc
call
js
jae
bound
adc
test
fdivp
sub
mov
sub
adc
jnp
retf
ins
and
idiv
mov
aaa
scas
jnp
ss
loope
ins
mov
jae
arpl
inc
(bad)
mov
mov
mov
stos
cs
jo
fidivr
ds
ret
jb
add
dec
and
push
dec
sar
test
fld
inc
pop
arpl
jno
stc
fldenv
sbb
jmp
ins
xchg
clc
(bad)
das
fsubr
fwait
lea
mov
sbb
dec
sbb
lea
xchg
jae
inc
ins
and
jo
test
mov
cmp
pop
aam
dec
shl
gs
ja
mov
retf
repnz
pop
fadd
mov
je
loope
arpl
dec
addr16
mov
int3
aam
or
xor
jg
loope
cdq
sbb
push
sbb
push
(bad)
xchg
in
add
sbb
or
sub
inc
push
cmp
imul
es
std
add
jecxz
xchg
inc
or
sar
jecxz
rcl
popf
(bad)
icebp
popf
cmps
lods
pop
int
mov
aad
xor
mov
nop
js
loope
push
aas
popf
lods
fs
dec
sbb
femms
stos
pop
sbb
in
mov
sti
xchg
ins
in
stc
cwde
mov
dec
xchg
cmp
mov
call
push
ins
ja
or
and
cdq
push
or
clc
in
xor
out
mov
dec
cdq
je
fnstenv
xor
dec
pop
lock
mov
loopne
xor
dec
(bad)
movs
mov
pop
hlt
nop
and
dec
(bad)
iret
xor
std
push
cmp
shl
lods
(bad)
mov
mov
pop
pop
push
in
xor
inc
bound
jle
dec
lds
ins
call
int
scas
lods
mov
mov
loopne
cmps
sub
add
adc
dec
mov
in
mov
push
iret
push
push
add
add
or
xchg
stc
loope
sahf
sub
mov
or
pushf
jg
iret
and
aam
je
or
test
(bad)
jg
ret
cmps
mov
xor
or
lahf
(bad)
sti
icebp
and
push
mov
scas
push
sbb
jmp
out
fcomp
mov
or
mov
fimul
dec
(bad)
enter
mov
retf
mov
adc
xor
rcl
mov
and
mov
imul
rcr
adc
in
push
retf
mov
aas
mov
call
mov
mov
jp
out
xor
ss
pop
dec
leave
out
mov
jbe
adc
add
movs
xchg
sar
mov
cdq
jle
add
xchg
adc
dec
xor
add
lods
rcl
into
push
add
es
iret
aas
fxch
repz
popa
cmc
pop
sbb
arpl
test
mov
xlat
jge
jb
xor
xchg
cmp
mov
aad
test
icebp
int3
dec
js
cmp
add
retf
cmp
mov
aas
sub
mov
and
retf
push
fs
sub
xchg
stc
jbe
addr16
pop
fbstp
jno
aas
xchg
pushf
dec
jmp
mov
inc
or
add
cmp
arpl
ja
or
pop
ret
add
(bad)
lods
les
std
inc
adc
jb
in
mov
inc
(bad)
cmps
in
push
clc
xor
gs
mov
popf
hlt
mov
ja
loope
sbb
popa
jne
retf
mov
inc
mov
push
loope
aad
(bad)
je
jp
and
jg
loopne
bound
dec
and
(bad)
cmp
imul
movs
xchg
jg
add
pop
js
lock
cld
mov
or
in
(bad)
ret
xor
jne
lock
rcr
in
jge
cmp
out
movmskps
xor
pushf
inc
push
clc
xchg
adc
inc
jae
(bad)
jmp
fst
outs
ja
mov
ror
mov
imul
push
add
sub
iret
adc
cmp
pop
mov
stos
(bad)
push
test
fldln2
sbb
sar
adc
push
out
or
mov
xor
push
cld
lahf
frstor
pusha
pushf
jnp
jmp
xchg
cmps
xchg
mov
cmps
outs
pop
inc
mov
jb
sti
fnstcw
cmp
fcomp
outs
shl
inc
(bad)
sub
dec
jne
clc
and
in
xor
adc
mov
imul
mov
cmp
pop
add
push
stc
fwait
out
jnp
fild
fcom
nop
jmp
scas
mov
mov
xor
outs
rcr
cdq
test
sub
mov
cmp
ds
lea
mov
mov
stos
retf
aas
in
and
sbb
fwait
ret
push
icebp
jmp
test
sub
ins
jmp
sub
adc
das
sbb
push
jno
stos
sbb
movs
xchg
out
test
lahf
push
sbb
adc
mov
xor
cs
mov
sbb
adc
scas
pslld
into
sub
jnp
and
push
xchg
adc
movs
rcr
jl
sahf
(bad)
(bad)
enter
and
push
retf
fs
mov
int
fisubr
fisub
sub
rol
pop
xchg
pop
lods
mov
fs
iret
imul
jmp
cmp
adc
aaa
fs
xchg
or
retf
in
xor
ds
fwait
mov
fs
mov
jno
jmp
sbb
dec
out
or
xor
mov
cmps
pushf
sub
in
push
sti
jbe
out
imul
xchg
lds
cli
mov
pop
gs
xchg
dec
and
pop
mov
stos
in
jl
pop
int3
mov
push
hlt
inc
ret
jp
adc
in
xchg
pop
mov
in
mov
cdq
mov
and
(bad)
imul
push
out
daa
outs
inc
retf
or
movs
xchg
mov
mov
inc
adc
cmp
push
pop
or
mov
push
ins
push
adc
sub
dec
mov
cmp
sbb
imul
hlt
and
sbb
imul
cli
cmp
inc
adc
retf
imul
mov
dec
loop
dec
xchg
cmps
aas
lahf
fs
dec
adc
cmc
mov
(bad)
cmc
jnp
aas
adc
push
call
enter
inc
cdq
pushf
in
ins
(bad)
(bad)
fsubr
iret
fbld
inc
mov
cmp
mov
jno
loop
jp
xor
loope
inc
inc
push
dec
arpl
shl
ins
test
out
cs
xor
inc
dec
addr16
scas
dec
or
and
add
dec
adc
jg
outs
inc
xor
jb
push
cwde
mov
xchg
arpl
shl
mov
lahf
bound
and
pusha
jmp
dec
in
mov
xchg
loop
jnp
push
pop
push
adc
pop
sbb
popa
retf
jg
das
add
(bad)
cmp
xchg
adc
xor
sbb
xchg
and
mov
mov
or
adc
aas
popf
or
xor
xor
in
adc
and
shl
gs
scas
jmp
add
(bad)
icebp
mov
xor
cmp
loope
rcr
inc
retf
(bad)
adc
xchg
ret
jg
jmp
mov
adc
xor
inc
pop
test
xor
fstp
cmp
cmp
iret
jecxz
scas
popa
inc
mov
ret
lea
mov
fwait
jnp
call
aam
and
mov
jecxz
aaa
jp
push
ins
cli
fst
fcom
adc
movs
(bad)
les
pop
pop
repnz
data16
pop
sbb
daa
out
push
je
int
sbb
add
xor
pop
jnp
ret
xchg
inc
or
aam
add
push
push
or
jmp
popf
pmulhuw
outs
sbb
int3
sub
mov
cs
lea
xchg
sub
and
lds
(bad)
mov
ds
fs
pop
sbb
ja
rcr
aaa
into
popa
gs
dec
mov
inc
jg
adc
les
mov
bound
outs
xor
add
lahf
call
rol
mov
leave
push
mov
mov
pop
sub
mov
mov
inc
pop
and
cmp
push
push
and
push
rcr
fld
dec
sti
sbb
sub
sbb
xchg
dec
mov
jbe
jno
push
mov
fld
in
adc
add
or
inc
mov
or
mov
mov
xor
pop
pop
jmp
push
xchg
push
(bad)
adc
pop
mov
inc
jl
mov
or
mul
mov
xor
xchg
out
pop
stc
xor
clc
std
sahf
pop
jle
(bad)
int3
int3
push
pop
dec
ss
vphaddbw
and
addr16
ds
or
or
pushf
frstor
jle
jmp
dec
ret
imul
push
ret
loop
(bad)
fs
mov
and
stc
cmp
(bad)
adc
xchg
cdq
pop
rol
add
inc
clc
(bad)
adc
sub
aaa
jne
xchg
jnp
jb
das
dec
inc
(bad)
lods
inc
sub
mov
jg
and
push
sbb
jmp
and
sbb
or
call
test
daa
scas
call
push
add
scas
xchg
sub
lods
adc
fdivr
movs
pop
sbb
inc
int
sub
xchg
pop
in
icebp
or
inc
ret
fwait
mov
cmp
cmp
cwde
cli
dec
mov
xor
dec
push
jbe
cmp
jp
dec
imul
push
imul
lods
mov
and
cmp
push
mov
es
sbb
js
mov
or
jle
in
sahf
pusha
adc
js
in
xlat
push
cmc
rcr
mov
arpl
jl
sbb
cmps
scas
jg
mov
dec
mov
popf
cmc
mov
icebp
pop
das
into
das
lods
dec
xor
adc
cli
loop
mov
mov
ss
(bad)
xchg
mov
lods
sub
jmp
loopne
lods
fstp
enter
mov
stos
sbb
sbb
je
and
xor
loope
sub
jle
inc
mov
sub
jmp
or
mov
jl
ficom
(bad)
lds
adc
lods
sbb
(bad)
lods
add
fidiv
inc
jecxz
aad
aaa
lahf
cli
sub
lea
xor
enter
fs
leave
mov
or
xor
out
and
dec
jbe
popa
jp
cmp
push
retf
xor
cli
scas
inc
xchg
arpl
push
jno
stos
pop
pop
cld
js
(bad)
cs
push
in
(bad)
fnclex
repz
push
je
cmp
push
(bad)
fild
push
mov
sub
lahf
imul
pop
clc
push
loope
xchg
imul
sub
ja
clc
gs
nop
imul
rcr
fs
rcr
mov
push
adc
dec
push
pop
retf
cmc
xchg
inc
stos
jle
add
out
and
sbb
mov
push
ds
mov
sub
xchg
int
clc
and
mov
fs
fcom
jo
out
in
jmp
adc
mov
xor
dec
xor
jmp
(bad)
fistp
push
aam
xlat
ja
add
mov
cmp
xchg
shr
fistp
mov
and
pop
mov
xor
add
pextrw
jo
jle
pop
cmp
and
inc
adc
pushf
push
pusha
mov
popf
stos
ja
mov
or
nop
jo
and
dec
push
out
bound
aad
loop
retf
pop
cmp
inc
inc
test
in
iret
and
in
call
js
int3
mov
sub
movs
adc
js
fcom
jl
stc
clc
(bad)
mov
sub
mov
add
fstp
jb
xlat
(bad)
push
inc
sti
sar
mov
(bad)
dec
jb
stos
inc
jbe
or
aad
and
popf
test
and
cmp
sub
std
or
stc
or
jg
imul
movs
xchg
pusha
and
sub
psrld
pusha
mov
rcr
xor
fldenv
adc
mov
inc
mov
add
sahf
aaa
sbb
push
jne
dec
dec
ins
and
mov
push
ror
seta
push
push
div
les
pop
mov
fcomp
je
push
mov
cmc
and
xchg
imul
pop
out
add
int3
int
jns
dec
mov
cwde
adc
jp
scas
imul
mov
jbe
cwde
or
hlt
push
cmp
push
into
mov
adc
adc
sbb
cmp
mov
es
lds
cmps
dec
imul
cld
push
test
pop
pop
ja
mov
push
clc
jo
aas
sbb
loope
test
xchg
rol
and
sub
push
lods
lods
jle
arpl
dec
sbb
push
push
movs
arpl
xchg
(bad)
pushf
inc
clc
xchg
sbb
inc
or
or
out
sbb
adc
xchg
mov
xbegin
inc
jmp
xor
pop
lods
dec
xor
sbb
xor
lods
js
pop
pop
mov
xchg
jb
ja
ins
sahf
inc
add
xor
xchg
mov
jge
add
or
call
adc
mov
into
sbb
je
xchg
mov
push
xchg
pop
fmul
fcomp
cmp
inc
fs
jb
and
lods
(bad)
in
push
adc
push
cmp
push
fisttp
mov
mov
xchg
jg
mov
push
adc
mov
call
dec
and
push
fild
fnstcw
xchg
mov
call
sbb
repz
inc
adc
adc
aad
inc
sub
sub
xor
test
retf
mov
not
mov
loop
scas
or
mov
adc
mov
in
leave
mov
sbb
and
dec
(bad)
mov
sti
ins
cmp
cwde
mov
sets
mov
lahf
jmp
push
xchg
xor
push
push
inc
add
jnp
inc
xchg
dec
adc
lods
aad
(bad)
adc
loope
call
out
out
mov
jbe
je
sti
(bad)
xchg
mov
sbb
out
pop
push
fwait
shr
sahf
inc
out
cmp
sub
xchg
mov
xchg
push
leave
daa
cmp
(bad)
jg
xchg
je
cld
pop
sub
push
mov
dec
loopne
jmp
repz
ins
in
xchg
ins
ret
les
dec
sub
mov
xor
fistp
push
xor
iret
in
hlt
sbb
mov
add
lea
repz
int3
stc
mov
mov
cmp
loope
jnp
(bad)
cmp
cmps
push
sbb
es
mov
ins
lods
jp
int3
call
cwde
inc
pop
cli
mov
in
pop
test
mov
lods
sub
shl
(bad)
movs
cmps
jo
rcl
mov
pop
inc
movs
xor
sbb
fsubr
push
push
movs
mov
stc
mov
xor
sub
nop
das
out
enter
mov
sbb
out
out
out
in
inc
aaa
add
and
pop
dec
add
cmp
add
test
pop
adc
add
xchg
int
lds
sbb
sbb
or
fiadd
mov
test
xchg
shld
aad
shl
cmc
push
push
push
jp
rcr
test
out
arpl
fstp
pop
push
out
jo
loope
shl
mov
in
push
pushw
mov
xchg
test
mov
pop
fs
int3
push
pushf
clc
cmps
loopne
sub
dec
outs
sbb
xor
lods
add
xor
sub
dec
jl
fiadd
push
popf
(bad)
lds
xchg
fsubr
nop
jns
enter
(bad)
pop
sub
in
xchg
cmp
sbb
sbb
inc
out
push
imul
mov
dec
es
lods
call
out
and
pop
sub
icebp
mov
mov
rcr
jmp
(bad)
in
push
sub
push
adc
mov
adc
movs
call
sub
fiadd
cmp
jmp
mov
(bad)
fistp
lods
xchg
mov
lds
mov
ins
add
pop
mov
add
add
or
ja
inc
pusha
cdq
inc
xlat
daa
in
je
leave
mov
aam
inc
lea
push
dec
cmp
add
jb
call
mov
add
gs
sub
enter
mov
push
and
add
inc
test
push
mov
stos
jmp
xchg
sub
xchg
xchg
in
ss
mov
fcomp
xchg
cmc
in
int3
pusha
inc
push
loop
and
outs
cld
dec
into
jne
mov
adc
gs
out
(bad)
int
outs
mov
cmp
fist
lea
adc
or
jmp
jne
imul
icebp
mov
loopne
adc
icebp
xchg
addr16
fistp
push
adc
jge
or
push
test
add
ret
add
mov
fdivr
cmc
adc
mov
mov
and
fwait
cld
inc
inc
push
add
cmc
pop
adc
push
test
cmp
cld
int3
mov
push
hlt
pop
icebp
movs
jge
fld
add
pop
sar
sbb
sbb
adc
cmp
je
mov
test
ins
retf
lahf
jne
mov
inc
cmp
lods
push
mov
ins
mov
es
xchg
aaa
in
pop
pusha
dec
xchg
fs
inc
stos
mov
adc
out
test
fadd
aam
sbb
clc
pop
shl
lahf
int
addr16
push
sbb
cmp
test
xchg
and
sub
clc
inc
sub
xchg
sbb
iret
pop
cwde
std
ds
inc
mov
hlt
call
enter
out
xchg
inc
push
cli
popf
cmp
and
ins
jo
sbb
jnp
mov
gs
in
ret
test
fiadd
sub
and
add
pop
movs
xor
es
mov
cmp
jno
dec
and
xchg
xor
leave
sub
fst
in
xor
xor
dec
push
jne
(bad)
xor
movs
and
inc
xchg
push
popa
jns
leave
mov
cmp
std
jp
mov
lea
ret
fcom
into
sbb
inc
sbb
daa
xchg
push
push
pop
or
cmp
dec
cmps
rol
sbb
jmp
xor
call
imul
xchg
out
pop
loopne
(bad)
mov
inc
pusha
(bad)
sti
shl
and
xor
xchg
mov
movs
jg
cmp
ja
push
ror
mov
xor
jge
out
sub
inc
mov
sub
jns
mov
cmp
xchg
sub
(bad)
xchg
dec
mov
push
jge
loop
push
int
jo
repnz
pop
sbb
xchg
stos
sub
mov
into
mov
sbb
nop
enter
cwde
add
outs
mov
xchg
jo
in
movs
outs
xchg
aad
add
or
jne
into
cmps
or
inc
leave
aas
jmp
mov
mov
sar
out
xor
fimul
ret
xor
mov
clc
rol
dec
or
test
scas
out
adc
push
iret
dec
jb
jne
mov
xor
sub
sbb
leave
pop
sub
push
sub
shr
inc
inc
mov
xchg
xchg
push
and
mov
sub
add
jo
mov
jmp
cmp
cmps
lods
call
stos
icebp
mov
xchg
test
clc
je
jmp
pop
retf
mov
mov
(bad)
mov
ret
imul
enter
jl
add
std
dec
aaa
sub
mov
sub
popa
in
pop
dec
test
and
pop
popa
outs
push
push
jns
movs
and
pusha
or
fadd
js
das
fldenv
xchg
inc
leave
dec
adc
pushf
idiv
push
push
cmp
sub
push
push
(bad)
ds
mov
stos
mov
jnp
ins
in
adc
sahf
cmp
ss
mov
popa
icebp
aaa
push
icebp
mov
add
push
jmp
mov
je
jmp
push
inc
test
mov
aad
or
fwait
bound
mov
aaa
xchg
(bad)
dec
push
adc
adc
das
cs
in
lahf
and
imul
add
xchg
lods
xor
test
mov
cmp
pop
and
push
mov
mov
sub
jp
dec
out
dec
(bad)
test
ins
imul
call
cmp
(bad)
clc
stc
add
in
xor
(bad)
rol
adc
mov
mov
jno
clc
push
and
add
shl
adc
repnz
imul
or
out
inc
call
push
xchg
enter
inc
jp
or
in
add
jmp
jo
or
lea
aaa
scas
jmp
and
mov
mov
mov
add
adc
mov
call
fwait
xchg
pop
gs
movs
ja
mov
popa
fwait
push
out
ins
jge
jl
xor
dec
cmc
shl
psubb
xor
clc
mov
inc
mov
daa
cwde
fisttp
adc
out
bound
repnz
push
mov
cld
or
push
icebp
je
enter
cmp
push
jmp
push
jae
cmp
sub
scas
mov
loopne
jmp
lods
mov
lahf
fisubr
bound
(bad)
loop
push
dec
mov
dec
pop
(bad)
iret
scas
jne
mov
push
pusha
add
adc
or
push
lock
mov
fwait
mov
test
cmp
pop
xor
xor
adc
repnz
aam
rcl
sahf
sahf
push
in
and
or
mov
or
in
xchg
stos
imul
clc
sub
cdq
sub
sbb
hlt
cmp
pop
mov
fld
pop
mov
xor
dec
(bad)
push
leave
sub
ja
stos
add
pop
xchg
xchg
ret
push
dec
mov
cmp
dec
pop
retf
xor
pop
ins
inc
gs
pop
xor
movs
out
cwde
popa
jp
jmp
jno
mov
mov
in
loope
sub
enter
ins
inc
std
cli
jae
arpl
sti
and
mov
pop
pop
pusha
dec
cmp
sbb
inc
sbb
adc
inc
retf
jg
test
movs
add
jne
iret
fadd
sti
iret
mov
mov
adc
push
(bad)
lods
adc
bound
jmp
and
popa
xchg
hlt
mov
mov
jnp
adc
inc
push
dec
and
loop
retf
dec
bound
cdq
ja
mov
sbb
div
push
jbe
outs
test
adc
fucomp
retf
dec
scas
cmps
jg
mov
neg
xchg
leave
(bad)
jmp
hlt
push
test
das
pop
ja
jae
stc
stc
xchg
mov
add
xchg
pop
cmp
cwde
lea
retf
add
jmp
pop
sub
sub
aad
push
mov
pop
and
push
aas
inc
jmp
lock
or
sbb
out
mov
pushf
mov
cmp
inc
mov
inc
sub
aaa
lahf
add
jo
out
sub
lahf
ror
inc
pop
xor
mov
mov
out
xchg
mov
or
jno
pop
mov
xchg
bound
adc
stc
ret
lds
xchg
cmp
iret
ret
sub
scas
cwde
cmp
pop
cdq
gs
push
mov
dec
shl
aas
cmp
mov
xor
jne
dec
jle
int
das
jnp
out
mov
mov
pushf
or
push
and
add
hlt
push
gs
retf
jecxz
inc
xor
inc
retf
sub
call
retf
test
clc
aam
mov
movs
arpl
cli
gs
push
repnz
or
mov
jge
ror
imul
sub
scas
dec
ror
and
int
jecxz
inc
out
(bad)
push
xchg
jae
dec
sub
test
test
dec
add
shr
cmp
pop
enter
pop
addr16
or
call
mov
arpl
cmc
fcmovu
jle
fcomp
jno
push
mov
sbb
pusha
jnp
adc
adc
pop
cs
fs
mov
int
(bad)
into
shr
cli
dec
and
add
dec
push
shl
inc
push
out
lods
cmp
(bad)
xlat
dec
dec
mov
ror
or
inc
and
ret
dec
inc
pop
mov
into
push
cwde
outs
loope
dec
and
pop
or
nop
mov
xchg
mov
dec
rcr
mov
pop
pop
stos
call
mov
mul
ins
sti
call
aas
sbb
jmp
int
mov
mov
(bad)
fneni(8087
ret
pop
jno
mov
or
adc
out
fcomp
inc
pop
(bad)
pusha
adc
fs
mov
jnp
xchg
dec
ret
fdiv
aam
inc
ins
repnz
mov
into
dec
ins
icebp
sbb
add
call
and
cmp
sbb
mov
adc
call
mov
fisttp
add
cmps
xor
ins
and
test
mov
pop
pop
loope
adc
shr
loope
add
xor
push
and
popf
sbb
adc
cmp
mov
push
adc
dec
in
push
dec
js
out
sbb
(bad)
ins
cmps
and
mov
xor
lods
nop
ror
mov
sub
mov
jbe
sbb
(bad)
das
fistp
repz
xchg
dec
ins
adc
add
add
in
xor
outs
add
pusha
mov
cmp
sub
mov
test
mov
cmp
shr
sbb
sbb
add
mov
pop
ror
rcr
and
sub
push
or
fst
dec
fist
dec
pop
mov
daa
add
xor
add
adc
dec
int
adc
fst
dec
inc
lahf
fwait
and
lahf
mov
push
in
icebp
rol
mov
or
add
arpl
xor
test
stc
push
adc
pop
pop
mov
mov
repnz
pop
nop
sbb
stos
mov
shl
pop
stos
cwde
cmp
mov
mov
rcl
or
xor
loopne
icebp
(bad)
push
sbb
icebp
mov
push
or
sbb
inc
push
(bad)
dec
sub
sbb
mov
addr16
(bad)
mov
gs
mov
xor
test
jo
sbb
inc
push
cli
pop
sbb
cdq
rol
or
adc
jmp
mov
push
xchg
push
jl
pop
jle
and
pop
dec
xchg
loope
jp
and
xchg
jecxz
xor
cmp
call
jg
inc
and
dec
loope
in
mov
call
sub
inc
jle
mov
pusha
dec
js
xor
sub
dec
xor
xchg
mov
adc
jno
push
fst
sub
push
dec
add
dec
mov
add
sbb
repnz
in
pop
mov
fild
mov
mov
int
push
lods
dec
imul
cmps
push
int
xor
push
fcmovb
jmp
in
bound
push
cmp
stc
mov
arpl
or
xor
dec
push
mov
pop
ret
inc
or
in
sub
and
mov
test
js
adc
(bad)
shr
imul
cli
sbb
cmp
imul
(bad)
jmp
sbb
or
out
sbb
jmp
xchg
jae
push
mov
dec
jns
xchg
(bad)
in
or
lods
jge
push
daa
mov
jnp
pop
popa
ds
bnd
jecxz
pop
sub
mov
retf
clc
fcomp
cmp
popf
add
push
and
fstp
push
stc
push
mov
or
push
dec
pop
call
jg
mov
stos
mov
xor
gs
int
stos
in
mov
add
in
mov
jae
sbb
and
ds
stc
mov
adc
jg
sub
or
adc
pop
imul
and
(bad)
cld
xchg
inc
xchg
dec
mov
lahf
fadd
out
dec
adc
pop
sbb
and
sbb
stc
aad
adc
loop
mov
pop
ds
or
and
fcom
push
push
(bad)
(bad)
(bad)
dec
jp
jmp
ja
jae
jnp
aad
dec
mov
mov
ja
jge
in
xchg
sbb
add
push
dec
sub
stos
in
bound
out
xchg
loop
add
mov
or
inc
sub
lods
fdivr
and
jmp
test
repnz
mov
cmp
fidiv
jns
push
loopne
xchg
in
dec
xor
sub
gs
test
push
xchg
jmp
mov
cmp
jno
ins
sub
cmp
sub
push
hlt
imul
mov
jp
test
inc
call
sub
mov
clc
xchg
xlat
xor
and
xchg
test
sub
call
push
(bad)
cmp
pusha
in
shl
jge
jg
xchg
cmp
sub
stc
in
stc
xchg
ins
pop
jmp
sub
(bad)
add
dec
ficomp
jl
and
imul
call
inc
(bad)
mov
push
jne
pop
add
je
cmp
(bad)
(bad)
add
loope
imul
mov
ds
neg
sbb
js
mov
and
hlt
shl
push
xchg
jne
xor
xor
jbe
mov
int3
out
dec
popf
xor
nop
es
jns
sbb
outs
lods
stos
imul
mov
pop
call
and
add
sbb
push
inc
pop
fnstsw
dec
out
mov
out
xchg
sub
nop
mov
push
test
rcr
in
(bad)
add
dec
xor
aaa
test
pop
xchg
xor
jmp
leave
mov
or
add
stos
jne
hlt
std
test
mov
into
shr
daa
sbb
pusha
ffreep
add
in
jp
into
out
cmp
stc
repnz
pusha
push
cld
sbb
jp
push
sbb
jns
xchg
arpl
jge
je
fwait
into
push
sti
mov
fprem
dec
cmp
pop
retf
cmc
aad
mov
mov
ret
sbb
xchg
xchg
jecxz
push
sahf
repz
xchg
bnd
test
retf
int3
jp
rcr
ja
les
call
push
xor
adc
fisttp
add
dec
jmp
add
fidivr
push
push
sbb
repnz
dec
shr
jle
xchg
das
mov
push
fs
fdivr
push
and
dec
fnstenv
in
dec
mov
jp
jecxz
push
int3
or
mov
leave
test
test
lea
nop
or
dec
or
(bad)
and
xchg
(bad)
fdiv
jns
(bad)
arpl
xchg
adc
(bad)
dec
test
test
sub
and
int
push
jnp
mov
test
jbe
stos
inc
stos
imul
mov
or
mov
push
out
ja
(bad)
sbb
daa
xor
mov
shr
mov
add
ret
cmp
outs
dec
rol
cmp
into
repz
cmp
pop
mov
lods
xchg
fmulp
jl
inc
idiv
and
push
fsubrp
jge
imul
adc
mov
cmp
xor
scas
mov
push
inc
repz
mov
rcr
jns
dec
into
ins
jnp
add
xchg
push
call
sub
xchg
or
mov
push
call
(bad)
pop
cmp
jp
mov
bound
(bad)
js
in
imul
lds
imul
movs
and
lds
and
int3
rcl
pushf
jmp
sub
out
dec
or
xor
pop
lahf
das
mov
stc
xchg
iret
addr16
mov
movs
mov
shr
test
call
mov
pop
imul
push
push
pop
inc
push
jmp
dec
sub
inc
out
fstp
daa
mov
push
dec
daa
adc
push
clc
arpl
jno
clc
push
push
sbb
enter
sbb
outs
into
hlt
popf
xchg
loopne
loopne
(bad)
or
or
add
sar
int3
sub
leave
test
fmul
adc
xor
jmp
pop
stos
pop
ret
test
sti
push
inc
loopne
pop
cmp
mov
xchg
jg
pop
mov
xor
jg
adc
jno
popa
xchg
mov
mov
push
pop
std
and
xchg
mov
pop
dec
sar
ss
adc
cmp
cmp
pushf
lods
push
popf
inc
mov
inc
shl
int
test
push
or
push
mov
xchg
jbe
jg
shl
loop
popf
pop
xchg
add
push
mov
xchg
push
and
sbb
test
js
lds
jne
popf
in
cwde
in
ss
inc
cmc
sub
popf
cmp
not
int3
dec
ins
fcomp
cwde
ret
mov
mov
das
test
xchg
aaa
inc
push
scas
inc
in
push
sar
loope
add
sbb
jge
dec
push
sub
scas
ret
inc
fwait
cmp
les
loope
xor
jae
dec
mov
jecxz
ja
aad
arpl
adc
out
adc
mov
int3
test
and
and
pop
(bad)
cmp
jmp
push
fsub
sahf
mov
push
xchg
mov
mov
ja
mov
fbld
mov
aam
out
inc
dec
int
ret
adc
or
mov
stos
and
and
ret
ror
adc
mov
lods
(bad)
jmp
push
popf
pop
fst
xchg
inc
or
push
push
add
jmp
mov
das
not
pop
outs
cmp
cmp
mov
pop
mov
stos
mov
imul
mov
test
imul
jge
jne
xchg
push
cmp
push
inc
imul
sbb
push
ja
sub
rcl
mov
cld
sbb
in
pop
shufps
je
xchg
jg
jmp
imul
sub
scas
pop
cmp
or
ret
test
sub
ins
mov
pop
mov
fidiv
xchg
mov
pusha
mov
in
sti
sbb
int3
sub
ror
loop
pop
in
cld
std
sub
leave
inc
push
sar
jns
push
sub
fcomi
test
out
adc
inc
in
xchg
aam
imul
out
int3
pop
js
adc
popf
or
aam
ss
xor
lds
fisttp
xor
sub
push
inc
shl
lods
pop
(bad)
sub
xor
jg
or
cmps
fistp
xchg
fisub
xchg
fidivr
xor
push
sbb
add
push
jnp
bound
iret
jno
mov
xor
out
and
sbb
inc
and
mov
test
jmp
inc
inc
int
xlat
sti
das
xor
test
repz
mov
ret
in
mov
das
dec
add
adc
lea
bound
xor
dec
mov
(bad)
fcomp
sbb
mov
add
mov
xchg
jns
sub
fnstenv
adc
xor
xchg
and
dec
(bad)
std
test
mov
loop
cmps
mov
test
(bad)
imul
fild
(bad)
adc
leave
mov
ret
sub
rol
mov
push
hlt
mov
ins
repnz
dec
xchg
call
movs
sub
inc
inc
aam
pop
movs
xchg
sub
jne
xchg
mov
std
es
push
mov
xchg
sbb
sahf
stos
pop
sub
int
retf
daa
fsub
sbb
std
xchg
lock
test
cmps
clc
jae
cmps
sbb
jg
outs
test
jns
jp
push
xor
pop
movs
and
cdq
mov
cli
(bad)
jo
jp
in
out
cdq
fwait
xor
addr16
inc
and
mov
(bad)
out
mov
cdq
lea
jno
bound
test
xchg
outs
xchg
mov
rol
push
xor
fs
push
adc
xor
push
pop
fwait
sub
add
mov
hlt
xor
mov
jl
push
(bad)
inc
sub
aad
test
popa
jge
cwde
call
inc
jb
xchg
mov
cs
mov
pop
aas
mov
int3
retf
push
aaa
push
sti
sbb
test
(bad)
mov
cdq
adc
or
push
push
jnp
mov
lahf
add
jl
bound
ins
inc
inc
int
xchg
fiadd
in
push
lods
das
dec
scas
cmps
rol
sub
xor
sar
xlat
sbb
fdiv
xor
les
pop
mov
pop
mov
xchg
and
add
aam
sub
pop
xchg
push
dec
cmp
mov
xor
popa
xor
dec
adc
and
jne
mov
ja
adc
cmp
mov
mov
push
scas
sub
outs
in
push
in
outs
imul
add
xchg
in
fmulp
hlt
les
pop
jnp
jmp
pop
js
fadd
push
xor
push
xlat
mov
retf
mov
fimul
and
xlat
pop
into
aas
adc
mov
cdq
lods
push
les
rol
cmps
mov
cwde
mov
shl
adc
and
push
dec
std
loop
mov
push
adc
outs
xor
ror
mov
xchg
pop
or
fwait
adc
in
mov
push
(bad)
xchg
add
cmp
arpl
mov
sbb
cdq
bound
les
cmps
mov
addr16
in
push
mov
push
lods
mov
push
sbb
cmp
and
fwait
dec
imul
(bad)
mov
sub
aad
mov
lock
(bad)
jmp
jbe
inc
adc
xor
into
retf
add
or
dec
daa
ins
push
jae
mov
xor
sub
pop
loopne
repz
mov
call
sbb
cmp
cmp
js
push
in
pop
xlat
mov
in
push
jb
xor
rol
pop
stc
(bad)
shr
sbb
add
mov
pop
mov
add
(bad)
mov
faddp
xor
pusha
outs
pushf
jle
jne
mov
shr
sub
and
inc
xchg
push
mov
inc
adc
jo
jae
mov
xchg
xchg
mov
push
iret
cld
adc
test
clc
imul
inc
(bad)
rcl
or
movs
mov
(bad)
iret
pop
sbb
jmp
lods
xchg
mov
icebp
in
xor
mov
or
xor
xchg
cmp
daa
sbb
mov
mov
inc
and
pop
out
xchg
or
cwde
mov
aas
cmp
xchg
pop
call
retf
push
test
sbb
sar
jb
jl
jns
addr16
jg
add
sub
(bad)
int3
inc
cmps
mov
xchg
jo
dec
(bad)
and
fcom
sar
push
ja
push
cmp
call
js
adc
xchg
retf
adc
not
push
jnp
jo
xor
pop
and
out
cmp
pop
retf
jne
xchg
clc
inc
dec
pop
cmp
aaa
inc
ds
sub
enter
pop
neg
ficom
and
xor
(bad)
push
or
sub
outs
jg
pop
lds
pop
outs
cs
xchg
ja
ins
cmps
pop
jecxz
add
mov
adc
lahf
sub
mov
(bad)
stos
jmp
ss
shl
cmc
sbb
outs
into
stos
add
push
retf
scas
call
mov
jns
std
in
adc
test
sbb
repz
push
pop
cld
dec
add
inc
add
test
gs
ficomp
out
dec
fs
push
rep
mov
mov
movs
inc
push
sub
mov
adc
(bad)
sub
aas
fs
daa
sti
gs
icebp
call
jno
or
inc
pop
push
dec
dec
aas
fs
leave
xor
mov
or
jns
push
pop
cld
dec
inc
out
mov
stc
mov
sbb
stos
pusha
sbb
push
xchg
in
pop
fld
sub
es
push
icebp
sub
imul
cli
stos
push
sbb
mov
setb
adc
rcr
mov
retf
addr16
and
ds
ret
sub
aam
dec
mov
icebp
cmp
mov
xchg
xchg
pop
dec
inc
movs
fnstenv
xchg
adc
inc
jno
inc
fadd
ficomp
mov
pusha
rol
faddp
pop
fucomi
pusha
mov
mov
dec
push
sbb
or
js
mov
xchg
les
mov
mov
add
ins
lock
sti
or
out
popf
inc
push
sub
iret
in
pop
push
mov
sbb
popa
cmp
dec
test
mov
test
push
into
pushf
sbb
jno
or
inc
int
out
mov
mov
cmp
sub
pusha
mov
or
scas
lds
or
mov
xor
dec
mov
std
sahf
jecxz
or
movs
pop
fidivr
xchg
lods
dec
fidiv
(bad)
push
hlt
je
call
arpl
jge
ja
or
adc
xor
jns
mov
shl
pop
cmp
stc
sysexit
test
jb
jg
(bad)
dec
mov
ss
xor
fild
push
rcr
xchg
in
mov
outs
out
xlat
popf
sahf
and
test
mov
rcr
inc
adc
cmp
dec
(bad)
stos
lds
imul
nop
xor
pop
arpl
imul
cwde
outs
(bad)
cmp
idiv
je
ins
test
push
fsubr
into
jp
push
aad
push
jle
or
sub
mov
arpl
mov
push
push
scas
and
stc
and
sub
sub
hlt
movs
adc
jo
jbe
sub
or
dec
and
and
inc
cld
les
in
fs
push
or
(bad)
mov
sar
or
dec
jp
into
mov
test
xchg
mov
and
ins
rcr
iret
mov
mov
or
mov
pop
pop
mov
cdq
iret
add
lods
movq
jmp
popf
daa
sti
lds
inc
add
jns
mov
pop
xchg
jnp
aas
out
cdq
push
push
sbb
pushf
pop
movs
cmp
shl
mov
mov
jo
sbb
and
cs
inc
in
cs
or
mov
pop
pop
mov
pop
loopne
adc
push
push
aad
lods
mov
in
pop
xchg
pusha
mov
jmp
mov
mov
outs
push
in
fisub
mov
stos
dec
pop
es
and
in
inc
xchg
cmc
adc
aas
data16
or
imul
loope
int3
or
push
sbb
cld
xor
xchg
mov
jl
xchg
repz
jb
jae
xchg
push
xchg
xor
fld
or
shr
and
xor
or
fnstenv
arpl
push
xchg
pop
pop
lock
pushf
mov
(bad)
into
inc
dec
cmp
pop
dec
mov
sbb
or
dec
push
sbb
mov
jns
lods
push
rcl
test
mov
xchg
dec
sbb
lods
das
cmp
sub
leave
dec
out
jp
into
sahf
call
mov
jle
iret
inc
lods
mov
inc
sub
and
into
xchg
ins
mov
jg
adc
mov
xor
pusha
neg
jl
leave
mov
jecxz
shl
imul
das
sbb
push
jbe
out
popf
ja
mov
das
sbb
jns
pop
sub
jp
mov
cmps
dec
add
test
xchg
and
adc
and
addr16
fdivr
mov
in
adc
inc
outs
test
xchg
or
mov
js
cld
and
mov
stc
and
mov
aas
or
dec
js
mov
int3
sub
int3
les
mov
mov
loope
push
rcl
imul
lods
sahf
xlat
cmc
pop
pause
in
test
imul
stos
shl
test
fimul
jns
mov
push
mov
mov
cmp
fstp
mov
adc
inc
and
(bad)
movs
stos
xor
mul
pop
sub
push
inc
mov
adc
out
mov
cmp
outs
aaa
repz
cmp
push
push
and
in
dec
imul
adc
(bad)
xor
ffree
fst
pusha
sub
push
iret
fxch
popa
jbe
and
daa
mov
cs
retf
or
loop
cli
(bad)
ror
mov
push
xor
loopne
jmp
sahf
cmp
icebp
push
mov
dec
aas
sub
sbb
mov
push
or
jnp
into
dec
cmp
cmp
pusha
(bad)
pop
xchg
mov
cmp
out
mov
scas
dec
outs
push
mov
test
(bad)
adc
das
jle
xor
pop
xor
(bad)
fisttp
push
(bad)
sbb
mov
push
ins
movs
inc
adc
dec
jp
cvtps2pi
std
stos
push
div
jo
js
fwait
sub
mov
mov
jecxz
push
ja
dec
cld
dec
cmc
mov
and
imul
xor
call
sub
sub
cld
sub
push
arpl
add
inc
add
push
add
mov
shl
adc
fadd
enter
ret
pusha
cmp
cli
or
mov
inc
(bad)
push
sub
out
mov
inc
shl
mov
mov
cs
xchg
add
mov
es
jo
pop
das
dec
ror
and
popa
shr
scas
call
push
fdiv
addr16
add
mov
xchg
jmp
sub
dec
int3
inc
ins
ret
push
stos
lahf
movs
daa
adc
xchg
test
cmps
xor
or
fbld
shl
pop
jecxz
cmp
xor
jmp
inc
call
inc
fisttp
and
repnz
out
in
cli
and
mov
push
adc
test
or
pusha
lock
mov
ret
push
lock
jns
(bad)
mov
sub
dec
(bad)
(bad)
loope
push
add
call
push
test
xor
or
sub
jmp
fstp
imul
pop
sbb
lock
sub
outs
pop
aaa
jae
es
dec
out
adc
fsub
ja
xchg
ret
pop
jl
test
test
dec
mov
adc
cmp
clc
add
dec
(bad)
and
fimul
xor
mov
sar
xchg
popa
loop
retf
jo
outs
mov
dec
repnz
add
ss
lods
sbb
(bad)
aad
adc
xchg
pushaw
sti
sub
loope
gs
cdq
fistp
ins
out
mov
sub
into
out
sub
xchg
or
jmp
jae
sub
(bad)
cdq
sar
jmp
imul
mov
aas
je
popa
movs
dec
add
outs
pop
jge
call
test
js
jb
or
int
push
out
int
mov
mov
clc
dec
ds
loopne
dec
adc
mov
leave
mov
out
jl
enter
popf
std
mov
addr16
lods
mov
mov
aam
cmc
xlat
and
cmp
movlps
xor
adc
mov
fild
sahf
addr16
test
in
mul
sub
xor
xlat
fxch
mov
ins
gs
jns
jle
xor
mov
stos
mov
(bad)
ret
call
xor
adc
inc
gs
mov
adc
popf
xchg
xor
mov
inc
mov
mov
sub
cdq
lods
xchg
inc
aam
or
sbb
in
mov
lds
push
sub
pop
cmp
mul
inc
jl
jmp
scas
dec
leave
xor
fs
jl
arpl
jns
movs
adc
pop
xchg
out
(bad)
std
push
mov
lea
jno
push
retf
sbb
sbb
inc
imul
cmp
out
js
add
push
jns
out
cld
cmp
adc
fnstcw
enter
mov
pop
xchg
aaa
repnz
fs
(bad)
jo
es
in
cmp
jg
rcl
mov
out
scas
mov
imul
stc
cwde
jnp
sbb
mov
jmp
inc
in
loope
xchg
clc
push
mov
cmp
pop
or
push
or
pop
outs
imul
jmp
aad
cli
pop
in
xchg
mov
loopne
(bad)
fist
(bad)
js
inc
jl
ins
test
push
jno
dec
pop
scas
stos
mov
cmp
pop
inc
inc
sbb
rol
(bad)
repnz
push
retf
gs
and
add
mov
cmc
ret
das
xor
ins
cmps
imul
movs
push
cmp
hlt
mov
jge
adc
jmp
and
ror
xor
shl
adc
cmp
dec
test
jno
scas
fidiv
ffreep
pop
pop
sbb
jns
iret
cmps
jp
or
psubusw
fmul
(bad)
sbb
pop
clc
ins
push
sbb
(bad)
out
(bad)
fst
ret
iret
les
jns
cli
dec
ds
ja
sub
sbb
mov
cmps
repnz
jmp
sub
pop
jne
loope
scas
sar
popa
sbb
call
push
mov
daa
push
sub
gs
jo
dec
inc
sub
idiv
and
std
in
bound
jge
xor
sahf
stos
or
jae
jmp
out
inc
xchg
push
cmp
ins
sub
push
rol
jbe
jmp
sbb
rcl
inc
je
adc
xor
push
xor
mov
adc
leave
shl
movs
xor
mov
(bad)
mov
inc
aaa
mov
push
inc
or
cmp
mov
sahf
mov
sar
mov
pop
lea
sbb
js
mov
cmc
mov
xchg
mov
scas
xchg
mov
mov
fistp
mov
sub
push
je
loopne
mov
xchg
mov
lahf
in
pop
por
and
xor
stos
cmp
daa
dec
add
and
(bad)
pop
push
pop
outs
cmp
inc
data16
(bad)
sbb
mov
je
adc
arpl
shl
imul
jge
sbb
mov
cmp
fst
inc
xor
ins
data16
movs
adc
lahf
and
popa
xchg
jl
inc
sbb
xchg
or
shl
cmps
add
retf
test
push
or
jmp
cmp
pop
fild
add
xchg
xchg
div
mov
xor
pop
jo
mov
sub
pop
xor
je
nop
and
xchg
stos
mov
cmp
cdq
aas
ins
sub
mov
pop
loop
dec
push
jo
or
add
in
pop
stos
gs
je
xchg
xor
rcl
mov
or
or
test
les
pusha
cmp
mov
cmp
jp
movs
movq
jnp
ror
pushf
aaa
rcr
in
(bad)
out
ror
out
cli
inc
add
ins
ret
and
xchg
jmp
mov
jg
and
and
mov
mov
fwait
mov
fidivr
xchg
fcom
pop
xchg
pop
js
icebp
shl
or
ja
add
sub
adc
mov
push
shr
std
adc
repz
dec
push
pop
(bad)
mov
leave
test
popf
mov
ds
pusha
adc
rcr
sub
cli
ss
aaa
outs
add
stos
mov
pop
xor
stos
mov
fistp
add
bnd
pusha
test
add
mov
adc
rcl
shl
ret
aad
pop
bound
or
int
xor
mov
cwde
in
out
ss
xchg
dec
dec
mov
cmp
lds
gs
sahf
scas
push
mov
lods
(bad)
sbb
(bad)
push
les
push
adc
pop
jnp
aam
jp
xor
xor
movs
fs
jae
and
cmps
adc
(bad)
iret
mov
pop
xchg
lahf
out
or
stc
iret
inc
(bad)
test
repnz
test
sub
mov
ret
loopne
mov
jns
pop
mov
or
das
add
sahf
jne
test
inc
imul
jo
mov
fisubr
sub
arpl
inc
pop
mov
out
mov
jle
mov
in
inc
adc
xchg
inc
push
fyl2x
xor
gs
dec
push
xchg
scas
stos
ins
cmp
and
pop
rol
dec
add
arpl
ja
addr16
and
imul
les
pushf
test
lods
popa
inc
jno
out
ret
pop
pop
add
push
mov
mov
and
push
pop
push
fst
stos
stc
outs
add
inc
hlt
pop
inc
mov
stos
sub
inc
cmp
js
pop
hlt
lea
inc
dec
popa
push
shl
pop
xor
mov
popf
jno
movs
jmp
xor
adc
adc
push
test
out
push
clc
mov
sub
aaa
xchg
xor
or
outs
div
dec
and
int3
pop
cmps
push
dec
(bad)
pop
icebp
iret
xchg
aad
mov
jne
jnp
sti
jno
add
imul
adc
jae
icebp
je
cmp
lea
dec
jl
sub
retf
popf
shr
(bad)
scas
and
inc
xchg
push
xchg
xchg
xchg
pop
xchg
and
xlat
push
rol
jne
mov
arpl
and
sub
mov
ss
ret
sbb
xor
movzx
imul
into
iret
and
sub
test
dec
push
cmc
mov
and
popa
out
fwait
retf
pop
mov
je
sub
sbb
jb
push
mov
push
xchg
rol
jbe
add
push
cmp
loopne
fucomip
xor
or
out
fistp
cmps
adc
adc
xchg
call
shl
add
scas
loope
jae
xor
or
mov
test
stos
cmp
cmp
scas
hlt
shl
movs
cli
cmc
in
rol
ins
test
mov
ror
cwde
test
xchg
push
add
mov
jle
sbb
push
push
inc
dec
cs
add
xor
sub
popf
and
lods
mov
lods
mov
ror
xlat
aad
ret
bound
or
xor
jg
in
icebp
jb
pop
sbb
mov
(bad)
stc
sub
pop
arpl
push
mov
sub
jl
fidivr
jle
div
scas
call
push
lock
popf
das
pop
mov
out
cwde
lods
dec
or
imul
das
jge
adc
(bad)
jbe
(bad)
popa
push
or
aas
xchg
lahf
lock
mov
(bad)
lock
les
ins
pop
and
jg
enter
mov
std
cmps
loope
xchg
mov
push
xchg
popa
fcomp
cmc
outs
pop
jns
cmps
mov
sub
or
loope
adc
(bad)
icebp
xchg
jge
jecxz
sbb
xlat
sahf
pop
punpckhwd
dec
ss
lds
repnz
xchg
push
loop
or
shl
pushf
mov
ret
push
sub
pusha
cmp
xor
xchg
push
aam
xor
ins
cmp
imul
and
pop
sbb
aam
bound
xor
jp
adc
fcmovbe
lahf
mov
clc
adc
ret
dec
add
sub
mov
inc
cdq
ja
test
pop
mov
hlt
dec
jg
push
jl
out
stc
cmps
or
xor
or
mov
jbe
ds
mov
fwait
lahf
aam
and
xchg
ror
shl
imul
(bad)
in
and
shl
pusha
cmp
cmc
hlt
inc
jmp
xchg
mov
gs
cmp
xor
dec
hlt
fild
out
(bad)
std
pop
cmp
xor
jmp
xor
stos
push
mov
scas
pop
add
inc
les
xor
sub
inc
neg
ret
jae
imul
cld
(bad)
mov
and
add
pop
jb
dec
into
inc
pop
adc
bound
jecxz
mov
nop
mov
imul
push
daa
cmp
inc
inc
xor
sar
ret
pop
cmps
idiv
jbe
and
(bad)
xchg
out
cli
xchg
fld
ins
push
loopne
push
(bad)
std
movs
(bad)
sahf
push
jecxz
call
jmp
dec
xor
add
and
xchg
mov
aam
fwait
pusha
mov
nop
in
mov
mov
adc
push
jmp
shl
pop
fisubr
in
popa
adc
retf
outs
pusha
arpl
push
mov
and
icebp
jl
loopne
xor
ret
retf
pop
add
jbe
mov
and
sbb
cmp
inc
add
jmp
(bad)
sti
loop
jae
pop
xchg
fdiv
ds
jb
mov
arpl
and
sbb
inc
mov
cmp
jb
popf
pop
arpl
popf
adc
and
mov
in
neg
into
(bad)
adc
aam
cs
imul
ja
aaa
jo
push
jb
mov
loop
in
dec
dec
fs
(bad)
xor
in
addr16
out
or
mov
mov
arpl
pop
sar
or
mov
xlat
dec
cmp
xor
mov
push
retf
add
xor
add
push
mov
mov
loope
dec
test
dec
fs
push
repz
push
pop
and
popf
push
test
dec
and
data16
mov
mov
xor
push
add
jle
mov
add
scas
and
or
add
jmp
jl
cmp
and
repnz
push
stos
not
inc
add
xchg
aaa
jmp
lds
fnstcw
out
ds
sbb
pop
lock
jg
dec
mov
xchg
xchg
pop
cmps
or
xlat
fisttp
push
call
or
lock
(bad)
test
jle
mov
outs
cld
pop
xor
mov
shr
clc
jnp
into
icebp
add
loopne
and
inc
xor
xchg
jbe
ret
pop
and
movs
dec
dec
popf
inc
sub
js
cmp
cmps
push
in
(bad)
mov
xchg
jmp
pop
inc
stc
inc
adc
pop
xchg
jg
and
cmp
dec
bound
push
adc
inc
push
xor
push
jne
ret
and
cmp
shr
aam
inc
cmps
movs
movs
push
mov
int
retf
stos
mov
fsub
jmp
ficomp
add
js
or
fsubr
repnz
jecxz
cvtps2pi
cmps
ja
xlat
out
rol
movs
pop
or
(bad)
pop
jnp
jge
cmp
fsubr
xchg
ins
stos
pusha
jbe
jge
iret
sti
aaa
arpl
jne
mov
aas
add
popf
stos
mov
dec
fs
push
pop
dec
xor
fmul
pop
repnz
loopne
push
clc
xor
sbb
and
adc
bswap
sbb
inc
cmps
iret
or
or
dec
imul
mov
adc
shl
cmp
pop
pushf
fcmovbe
(bad)
sbb
cs
cmps
fsubrp
jnp
mov
out
pcmpgtd
mov
cmps
scas
jb
mov
pop
enter
nop
fwait
loopne
daa
inc
mov
or
sbb
jae
xchg
aas
add
ret
add
das
cwde
mov
xor
sbb
int3
add
ret
sub
je
aam
mov
jecxz
sbb
dec
movs
sub
jg
fisubr
test
cmc
cld
lahf
cmp
jnp
rcl
add
leave
and
push
(bad)
mov
ret
(bad)
add
in
faddp
mov
retf
push
(bad)
mov
(bad)
out
xchg
and
mov
sbb
jo
sub
and
jge
les
fwait
or
push
jge
ss
scas
retf
imul
sbb
inc
mov
jle
leave
aas
rol
dec
mov
pop
out
jne
adc
fcom
cs
or
mov
push
(bad)
cwde
xchg
(bad)
adc
and
push
push
sbb
xchg
aam
movs
(bad)
fcom
call
pusha
xchg
inc
pop
(bad)
mov
pminsw
ins
repz
mov
mov
and
cmp
shr
cmp
xor
inc
arpl
scas
mov
ds
and
adc
pop
push
mov
and
daa
cld
enter
outs
dec
and
add
inc
fld
jmp
add
adc
repnz
cmp
fimul
in
aam
mov
mov
stos
cmp
imul
mov
mov
out
dec
mov
push
imul
stos
sub
fwait
in
xchg
sahf
dec
aas
jnp
xlat
push
mov
out
inc
gs
jl
adc
jmp
xor
dec
stc
test
mov
aas
adc
push
fisubr
mov
mov
ret
xlat
jb
test
test
(bad)
ret
add
clc
cld
into
and
or
mov
scas
jmp
call
sbb
dec
and
pop
sbb
ss
cmps
jmp
inc
xchg
fdiv
push
or
movs
push
psllq
xor
xchg
hlt
outs
or
jecxz
pop
ficomp
loop
jnp
push
pop
into
pop
dec
inc
sti
mov
iret
cmp
mov
sbb
sbb
cs
xor
adc
xor
call
ins
dec
ds
fs
out
or
in
movs
and
(bad)
jl
or
(bad)
xor
(bad)
test
lods
inc
aad
popa
pushf
js
test
(bad)
xor
rcl
sub
movs
call
adc
not
or
mov
xchg
nop
and
jg
or
push
cmc
icebp
and
mov
push
cmp
daa
pop
daa
sbb
xor
adc
aas
arpl
retf
mov
mov
stc
jecxz
in
mov
in
lods
xchg
mov
xchg
sbb
sub
jno
mov
jmp
mov
cdq
ficom
push
enter
rcr
push
and
sub
shl
fcomp
pushf
lods
lods
out
int3
mov
scas
nop
iret
retf
dec
mov
nop
jae
pop
loop
adc
jl
std
cld
retf
jecxz
add
jae
int
clc
cmp
scas
pop
add
sub
adc
add
das
(bad)
int3
fs
hlt
push
push
fldcw
push
outs
jnp
mov
mov
or
mov
xchg
int
adc
mov
add
outs
push
jnp
ret
pop
sub
(bad)
js
loope
out
mov
or
jmp
aaa
jnp
adc
sub
dec
aam
push
sub
jge
cmp
mov
ins
icebp
jnp
out
fbstp
pop
sahf
xor
cmp
es
imul
rcr
dec
xor
mov
adc
lods
sub
ins
outs
out
adc
imul
mov
fs
hlt
mov
push
shl
retf
xor
retf
inc
xor
sub
repnz
sub
and
cmp
push
cmp
xchg
sub
mov
sub
jne
or
sti
push
pop
mov
xchg
fstp
sbb
or
xchg
sbb
nop
shl
pop
mov
int3
shl
or
lods
pop
xchg
dec
cmps
mov
cmp
out
and
add
test
cmc
push
and
mov
lock
mov
in
sbb
cld
mov
mov
inc
ins
scas
adc
cmp
sbb
movs
loop
cmp
pop
sub
xor
mov
test
aam
sub
mov
fs
pop
sahf
jecxz
jle
stos
pop
mov
mov
popa
push
fdivp
mov
retf
mov
es
clc
cld
adc
bnd
clc
push
hlt
lea
dec
mov
mov
sahf
jle
add
inc
pop
enter
mov
fcmovne
dec
mov
sbb
std
sub
lock
add
or
pop
sub
shr
out
call
sbb
jns
pop
jmp
rcr
and
mov
out
xor
inc
fucomi
push
dec
(bad)
push
cmps
push
(bad)
pushf
add
add
rol
mov
xchg
adc
iret
lea
pop
cmc
(bad)
jl
and
scas
cmp
int
jnp
sbb
cdq
cmc
xchg
or
icebp
cmps
jnp
inc
and
cmp
adc
mov
sub
movs
jg
sbb
ret
fs
(bad)
xchg
jmp
pop
xor
out
or
and
iret
xchg
cmp
dec
adc
sbb
loop
and
out
inc
jmp
mov
sbb
imul
scas
cmp
inc
shl
cmp
call
inc
out
pop
mov
mov
fidiv
sbb
int
dec
sub
mov
xor
sbb
mov
cli
jge
mov
pop
add
out
pop
call
xchg
mov
add
push
stos
ret
sti
push
pushf
push
scas
(bad)
mov
js
out
retf
mov
adc
rcr
dec
sub
xor
ins
movs
nop
gs
ret
ds
xor
add
cld
jbe
dec
mov
das
push
pop
adc
rcr
adc
mov
call
into
sti
ret
cmp
rcl
shr
xor
pop
jae
bound
outs
pushf
jne
std
and
out
call
daa
je
xchg
mov
sysexit
adc
retf
dec
imul
mov
xchg
jmp
xor
or
aam
add
imul
add
sti
inc
jmp
sar
dec
(bad)
xchg
out
jo
pop
std
clc
int3
and
mov
sub
rcr
and
das
cld
ret
in
call
mov
mov
in
jb
or
test
inc
fadd
sub
(bad)
hlt
mov
clc
xor
(bad)
and
dec
or
js
jbe
xchg
cdq
hlt
out
mov
es
push
mov
sub
adc
lods
mov
cmp
add
sub
loop
out
mov
xor
les
in
(bad)
mov
nop
mov
xchg
lock
bound
and
movs
adc
push
pop
stos
jmp
sub
sub
jns
mov
fdivr
mov
iret
pop
in
jg
mov
cmp
mov
iret
nop
or
out
out
mov
or
cmp
adc
sub
mov
lods
xchg
lea
xlat
addr16
dec
stc
add
clc
add
xchg
mov
stos
jbe
outs
mov
iret
xor
test
loop
adc
fsub
sbb
push
aam
add
(bad)
arpl
fiadd
push
mov
test
adc
jmp
mov
hlt
retf
jle
les
scas
fsubr
or
push
xor
in
iret
jmp
pop
out
fdivr
(bad)
push
inc
mov
jne
cmp
dec
(bad)
sbb
cdq
mov
dec
nop
add
or
inc
pop
inc
shl
jmp
xor
loop
movs
(bad)
jle
test
jle
mov
ret
add
and
add
pop
sub
aad
(bad)
mov
add
xor
or
ss
jp
xchg
mov
mov
xchg
int3
enter
or
pop
ret
repnz
mov
sbb
repz
mov
push
jmp
jge
push
pop
push
outs
(bad)
bound
push
movs
push
dec
jbe
mov
mov
inc
cdq
mov
pop
scas
push
cmc
jb
mov
pop
pop
cmp
enter
repnz
push
mov
fadd
mov
out
pop
dec
pusha
inc
in
test
(bad)
or
cmps
es
inc
xchg
mov
inc
cdq
test
test
mov
pop
adc
(bad)
mov
dec
jle
push
pop
xchg
rol
cmp
pop
ins
cmp
aaa
mov
inc
rol
or
mov
jle
lods
xchg
das
sub
(bad)
std
or
sbb
xchg
jle
mov
mov
sbb
mov
add
addr16
jbe
retf
shl
idiv
dec
retf
pop
xor
add
jae
cmc
pusha
dec
jp
mov
cmp
(bad)
mov
xchg
mov
jb
out
mov
sahf
scas
inc
es
dec
cmp
stc
mov
mov
rcr
mov
fwait
mov
bound
cs
inc
sahf
lock
push
jmp
sbb
loop
popa
or
cdq
test
jbe
imul
cmp
xchg
cmp
or
out
aad
pop
push
div
out
ins
sti
adc
cmp
test
inc
lds
(bad)
fpatan
jmp
fild
pusha
mov
dec
sbb
ret
add
mov
mov
and
xor
dec
or
lods
push
stos
imul
shl
mov
mov
pop
sub
stc
dec
movs
push
and
xor
cmp
inc
jmp
or
fist
cmc
xchg
pop
pop
and
sub
sbb
xchg
inc
mov
mov
cli
inc
xchg
loopne
jecxz
inc
inc
dec
stos
add
adc
int3
ins
stos
mov
cmp
idiv
sti
stos
xlat
jmp
add
pushf
fmul
pop
cli
je
retf
loop
retf
cwde
cmc
loop
cld
cmp
and
cli
jmp
xchg
adc
clc
jae
in
ficomp
inc
mov
pop
retf
ret
sbb
pop
mov
jo
inc
adc
adc
aaa
pop
sbb
nop
pop
les
mov
fstp
and
add
jp
add
cmp
cmp
rol
ret
out
sbb
xchg
test
jle
inc
lods
iret
ja
or
xchg
xor
repz
inc
js
mov
ret
cmc
pop
jmp
sbb
jp
je
lods
mov
stos
and
cmp
push
repz
mov
pop
dec
icebp
das
in
aas
popf
mov
cld
hlt
cmp
ins
aam
cwde
push
pop
pop
addr16
and
and
jmp
mov
mov
cmp
scas
lods
inc
das
pop
shr
adc
jl
daa
ret
fwait
pop
add
aas
fidivr
push
xchg
pop
in
pop
sti
adc
pop
cwde
lods
sbb
out
mov
or
push
mov
inc
inc
pop
lods
add
loop
push
outs
out
call
neg
inc
jo
retf
mov
aam
cmp
mov
xor
sub
xor
cmc
xchg
fstp
lock
(bad)
fimul
push
dec
push
and
push
cli
xor
sti
int3
pop
push
inc
fidiv
dec
cmp
movs
rcl
and
jbe
sbb
imul
fwait
aad
lahf
mov
and
bound
push
retf
xchg
imul
loope
xor
jge
xor
or
popf
sub
ret
cmp
inc
mov
ret
xor
xor
imul
push
cli
call
imul
push
es
dec
jmp
cdq
(bad)
cmps
(bad)
and
sub
scas
xchg
aas
stos
clc
cmp
mov
lock
pushf
ret
add
jmp
and
push
mov
cmps
and
jmp
jmp
les
mov
loopne
dec
inc
shl
scas
dec
mov
mov
js
data16
cld
xchg
js
push
inc
add
push
int
rol
xor
cmp
enter
retf
jnp
or
inc
and
and
cmp
rol
cld
stc
mov
popf
mov
js
dec
sub
dec
std
jge
adc
ret
mov
push
cmp
ds
not
mov
or
dec
pop
sbb
add
ins
(bad)
in
sbb
outs
push
sbb
imul
jbe
fwait
or
into
loop
aaa
sar
jmp
and
jle
add
jle
shl
fld
mov
push
sub
xor
ds
push
mov
pop
mov
and
mov
and
mov
sub
add
retf
mov
jg
mov
cmps
pop
and
cwde
retf
je
int
cmp
nop
jbe
sbb
pop
ror
pusha
sbb
das
add
imul
xchg
(bad)
ins
mov
mov
jbe
xchg
sbb
lock
and
call
sub
lods
outs
mov
mov
inc
and
ins
cmp
sbb
or
xor
je
test
into
sub
movs
test
mov
dec
inc
push
ret
or
pop
push
int3
mov
cmp
and
pop
xlat
movs
lds
arpl
jecxz
push
mov
xlat
pop
cs
fs
test
fld
mov
jg
test
gs
mov
leave
pop
push
repnz
hlt
mov
out
cmp
icebp
jl
mov
mov
push
adc
sub
test
in
jge
pop
arpl
fisub
push
push
(bad)
dec
pop
movs
jle
xchg
jbe
(bad)
ror
xor
adc
pop
add
jle
retf
mov
and
sub
push
push
inc
repz
icebp
or
cmps
xchg
ss
sub
dec
loope
test
mov
pusha
int
adc
sar
fdivr
jecxz
sub
je
(bad)
xchg
test
pop
cmc
inc
sub
cmc
stos
pop
push
mov
(bad)
pop
inc
cmp
push
jmp
or
jg
addr16
push
fcomp
mov
js
jl
ja
push
loop
mov
jns
inc
inc
add
and
sbb
inc
adc
fmul
fmul
xor
sbb
aas
xchg
fmul
test
xlat
push
jecxz
and
not
add
adc
push
pop
dec
inc
popa
leave
outs
out
pop
outs
pop
jle
adc
test
sub
cmp
jecxz
aam
dec
mov
pop
bsr
dec
ret
mov
fcmovnu
mov
mov
fdiv
adc
jle
sub
rcr
sub
fidiv
leave
jae
xchg
jmp
out
mov
jno
ret
dec
test
inc
pop
sbb
imul
inc
lahf
aad
jbe
mov
in
jge
inc
test
or
test
adc
movs
out
mov
add
mov
loopne
scas
bound
out
ins
popf
mov
call
call
push
fsub
fs
popa
cmc
pop
hlt
dec
mov
cli
aad
enter
test
arpl
jnp
pop
and
xor
aas
rol
mov
xchg
dec
(bad)
xchg
hlt
inc
dec
push
sbb
outs
fmul
add
xchg
inc
jnp
outs
cmp
cli
dec
outs
ds
inc
cli
pop
jmp
xchg
daa
repnz
std
xchg
jno
adc
test
int3
or
pushf
mov
stos
push
push
bound
or
int3
xor
mov
jg
and
aam
pop
sub
jmp
jle
pop
(bad)
out
xor
clc
enter
popa
adc
mov
jl
iret
cmc
pop
dec
cmps
xor
(bad)
mov
jge
inc
pop
jbe
inc
add
stc
ss
in
hlt
xchg
dec
pop
xor
mov
push
xor
xor
mov
inc
dec
dec
outs
pop
repnz
xchg
inc
in
pop
sbb
rcl
cmp
inc
stc
imul
sbb
xor
push
outs
mov
xchg
shr
(bad)
or
push
ja
cmp
push
xor
mov
test
jae
clc
movs
lock
pop
xchg
shr
adc
bound
cmp
xor
imul
push
xchg
pop
pushf
inc
fild
cmp
sub
dec
inc
jg
pop
dec
aad
in
adc
adc
xchg
add
push
daa
sub
lock
sbb
push
test
jo
cwde
push
inc
cmps
div
es
stc
test
xor
enter
leave
inc
in
xchg
mov
inc
jns
pushf
retf
aas
adc
pop
mov
hlt
sar
xchg
pop
test
and
in
hlt
sub
ror
(bad)
out
jb
and
dec
movs
xchg
or
pop
fld
sbb
(bad)
ja
pushf
cmp
and
mov
cwde
push
dec
(bad)
xchg
sub
inc
jp
repz
mov
pop
test
xor
mov
cmps
fcomi
mov
jmp
sahf
mov
int3
jmp
mov
inc
out
push
les
sub
jnp
adc
sub
ds
rol
sti
icebp
inc
gs
add
cld
jo
cmc
dec
pusha
movlps
inc
outs
out
dec
cmp
cmps
inc
(bad)
inc
out
pop
dec
test
sub
cmp
xor
jmp
call
neg
xor
xlat
test
add
mov
loope
mov
shl
or
and
ret
leave
add
outs
jl
pop
pop
xchg
mov
lock
lds
icebp
cmp
shl
jge
test
push
pop
adc
adc
clc
sahf
outs
jmp
out
es
sbb
and
jp
mov
mov
fisub
(bad)
call
(bad)
inc
mov
sub
add
adc
or
movs
das
shl
mov
xor
int3
inc
std
add
loop
pop
push
std
sbb
rcl
and
inc
push
push
cmp
and
or
push
mov
mov
add
test
popa
iret
(bad)
and
rcl
push
xor
ja
jecxz
cmp
push
add
daa
arpl
jns
clc
popa
movs
mov
or
xor
shl
fisub
test
jne
push
cmp
xchg
(bad)
popa
inc
or
add
push
jmp
es
jns
sbb
add
dec
jns
or
push
add
add
jo
push
cmps
int3
xor
cli
into
rol
je
pop
cmp
dec
cmps
stos
push
dec
pop
push
adc
mov
pop
jmp
ja
fmul
add
lods
in
cdq
pop
sbb
clc
pusha
cmp
mov
xchg
mov
or
xor
sub
aas
rcr
jp
mov
in
mov
fs
fwait
aad
imul
(bad)
xchg
dec
mov
stos
jne
xchg
cmps
mov
daa
mov
inc
pop
call
out
dec
clc
sbb
dec
xchg
mov
push
cmps
xor
(bad)
mov
in
mov
inc
pop
cli
aas
dec
lods
or
test
stos
xchg
rcr
dec
out
dec
das
test
push
pop
in
mov
cs
leave
lods
add
or
sbb
aam
xchg
or
(bad)
cmp
xlat
cs
lods
sbb
jno
das
push
or
ins
inc
sbb
push
outs
jae
pop
jbe
dec
mov
popa
mov
cmc
pop
add
lods
xchg
inc
aas
dec
loope
rcl
cmp
pop
mov
pop
std
(bad)
repz
aaa
or
cld
and
shr
icebp
pop
aad
das
lds
sub
(bad)
jmp
push
push
dec
jnp
std
xchg
icebp
in
cmps
xchg
pop
and
sahf
dec
outs
popf
lock
mov
or
hlt
xlat
aad
mov
cmps
fs
leave
ins
mov
mov
cmp
mov
ds
popa
and
aas
dec
push
ins
pop
xchg
clc
jl
out
ins
loop
jae
jbe
inc
ror
inc
pop
cmp
cmp
mov
js
mov
nop
gs
rcl
retf
ins
into
mov
or
enter
stos
xor
push
mov
cmp
or
xchg
mov
int
into
cmp
add
jl
call
jmp
xchg
push
ja
arpl
arpl
lea
ret
or
aad
push
cwde
test
lods
int
jbe
mov
xchg
sbb
push
lea
mov
push
shl
xchg
out
fisub
jmp
mov
mul
xchg
mov
adc
xor
mov
xchg
in
sub
mov
mov
jbe
push
push
jmp
call
loope
cli
jbe
ret
and
sub
or
outs
xchg
out
sar
sar
lock
loope
fwait
push
jmp
cmp
stos
ds
pop
das
dec
mov
mov
nop
sbb
stos
dec
add
mov
repz
pop
lock
rol
sub
xlat
sti
cli
es
adc
pop
test
call
das
xor
aaa
iret
jp
dec
cld
cmp
push
push
aad
sbb
jae
mov
add
out
int
xor
sub
shl
out
stc
div
icebp
imul
int
adc
xchg
ins
shl
fsubrp
inc
mov
inc
ret
mov
daa
jecxz
(bad)
and
jle
jb
lods
and
dec
(bad)
rcl
cmp
repz
fistp
jg
add
dec
sti
popf
mov
xor
ss
movs
pop
hlt
mov
ret
out
jno
mov
and
push
push
mov
hlt
jle
int3
xlat
lods
cmp
mov
mov
div
xlat
xor
mov
push
cli
cmp
xchg
aaa
inc
push
mov
fucomp
sar
ins
imul
fs
mov
enter
jo
adc
jp
retf
mov
ds
xor
mov
mov
push
xor
stos
jb
sub
icebp
jp
lock
sbb
aaa
in
pop
add
add
pop
mov
ret
mov
inc
cmp
clc
idiv
jge
adc
and
jae
dec
add
add
jp
pop
xlat
retf
cdq
stos
add
add
adc
pop
cmp
mov
(bad)
sub
pop
movs
push
out
pop
mov
push
inc
fcom
or
inc
cwde
mov
adc
cli
inc
pop
mov
jnp
xlat
push
sar
dec
push
push
fs
movs
test
nop
stos
cmps
out
mov
push
dec
mov
mov
mov
popf
xchg
into
cmps
(bad)
cmp
leave
fsub
out
push
aam
movs
inc
mov
xor
adc
push
xchg
dec
shl
test
iret
hlt
xchg
xchg
imul
mov
mov
jmp
or
push
fwait
inc
nop
pop
je
imul
jae
icebp
fild
ss
sub
mov
mov
sbb
sbb
es
sbb
ins
(bad)
push
adc
dec
shl
imul
mov
jp
hlt
add
cmp
mov
adc
cmp
mov
sub
(bad)
fidivr
fwait
popf
and
leave
mov
jl
call
mov
push
rol
inc
addr16
in
dec
mov
fprem1
dec
stos
shr
dec
enter
scas
outs
rcr
sbb
sub
scas
or
mov
icebp
cmp
jmp
inc
inc
dec
es
xor
cli
cmp
push
dec
(bad)
lods
mov
cwde
call
xor
test
lock
mov
push
fwait
cdq
pop
lock
add
cmps
aas
cli
xor
sub
lahf
fld
xchg
sub
and
push
add
mov
xor
pusha
mov
mov
push
iret
std
iret
imul
dec
and
out
aaa
enter
daa
adc
cmc
iret
and
mov
adc
imul
add
jp
out
xor
outs
test
fwait
aas
push
je
fisub
aaa
pop
pop
mov
cmp
adc
bound
jae
es
xchg
retf
sub
cld
outs
dec
icebp
(bad)
int
push
out
mov
mov
pop
cmp
clc
int3
mov
loope
or
fs
imul
cs
push
add
popf
sbb
cdq
ret
and
neg
mov
adc
add
jb
sub
xchg
rol
in
stos
(bad)
stos
cmp
mov
repz
packuswb
sbb
test
push
loope
in
jl
push
lahf
mov
loopne
sar
cmp
cmps
jge
sbb
out
cmp
jbe
sub
loopne
pop
push
mov
mov
xor
aaa
mov
cld
mov
mov
(bad)
aam
mov
xlat
fs
sub
mov
sbb
ficom
cdq
sub
pop
inc
adc
mov
mov
mov
jbe
(bad)
cmp
arpl
sub
hlt
mov
sub
cs
int
sbb
jno
ret
cmp
or
hlt
mov
int3
arpl
ret
add
imul
mov
int3
push
xchg
das
rcl
pop
push
test
aas
repnz
and
cmp
xor
sub
call
and
call
dec
xor
or
xchg
out
daa
xchg
aad
out
repz
or
int
and
call
int
push
adc
dec
mov
jb
idiv
(bad)
mov
sbb
mov
mov
sbb
or
add
mov
lea
mov
mov
loopne
sub
sub
lahf
xchg
sub
xchg
loopne
jmp
cmp
repz
xchg
bound
or
in
xchg
adc
rcr
fdivr
sbb
xchg
outs
cld
call
inc
pusha
call
push
adc
dec
or
push
cmp
push
js
scas
jg
fsubr
sti
mov
mov
pop
les
jbe
fisubr
pop
or
call
add
mov
cmps
dec
outs
cmp
add
push
cmp
xor
daa
rol
inc
dec
cmp
dec
pop
jecxz
sbb
jmp
jl
jno
sahf
jle
pop
pop
adc
(bad)
jmp
das
jmp
mov
adc
jle
dec
out
cmp
in
retf
inc
pusha
and
dec
out
dec
pop
into
rol
loopne
cdq
repnz
cmp
arpl
ret
mov
scas
dec
jnp
mov
cmc
les
xlat
loopne
dec
fwait
jns
cmp
or
push
mov
jae
sbb
cmp
xor
scas
repz
jmp
adc
jmp
sbb
loope
dec
adc
in
or
pop
outs
imul
and
xor
stc
adc
fisub
sti
ss
outs
xor
xor
jmp
sbb
pop
test
popf
and
popa
not
mov
inc
push
and
repz
jecxz
into
cdq
inc
inc
out
lods
and
out
or
adc
push
sbb
loopne
jmp
mov
sbb
jl
add
add
jno
lea
scas
or
dec
sbb
dec
ret
fimul
fwait
push
mov
sbb
xchg
in
push
out
das
xor
call
dec
out
dec
xchg
push
xchg
push
xlat
sbb
mov
mov
aad
inc
mov
stos
cmp
sbb
test
cld
stos
mov
adc
in
retf
loope
fnstsw
scas
and
mov
(bad)
mov
sbb
ret
xchg
dec
pop
sub
aad
sub
sub
and
jne
push
movs
clc
cmps
out
mov
loope
sub
or
test
repnz
out
popf
push
sbb
cld
dec
mov
add
repnz
ds
mov
movs
rcr
int3
arpl
push
jg
and
adc
mov
adc
jmp
add
push
cs
clc
shl
cmp
xchg
(bad)
jmp
int3
adc
popa
cmp
int3
das
mov
sub
xchg
fld1
jb
add
adc
jp
push
movs
cmc
inc
and
cld
lahf
ins
mov
xchg
push
aaa
cmc
mov
add
outs
pop
int3
cmps
pusha
or
loopne
imul
dec
call
jp
test
add
mov
retf
imul
jecxz
lock
or
jle
mov
push
add
jnp
sti
aam
out
(bad)
cmp
inc
push
hlt
jmp
cld
fstp
rcr
out
pushf
cmp
or
mov
or
mov
inc
loop
sub
int3
lock
pushfw
mov
es
add
aaa
add
adc
jecxz
pop
imul
sub
(bad)
xchg
pop
push
fdivp
push
stos
xor
pop
aam
pop
test
jns
jo
or
pop
xchg
inc
pop
and
movs
dec
test
jmp
mov
int3
mov
test
jg
arpl
add
or
movs
adc
fisttp
ds
mul
rcl
mov
ins
fwait
retf
push
ret
in
test
hlt
sub
add
test
adc
xor
add
push
mov
cld
fsubr
mov
sub
sbb
sbb
or
mov
jl
icebp
jg
clc
xchg
add
out
or
nop
mov
stos
cmp
iret
push
push
ret
fucomi
ss
inc
aaa
cwde
push
pushf
add
imul
sbb
(bad)
push
data16
mul
cmp
xor
sbb
pop
add
aad
jne
dec
inc
or
dec
cli
fs
call
push
mov
lahf
jmp
in
fbld
inc
add
out
ins
push
(bad)
pop
repz
xor
and
cmp
sub
cmp
add
add
sbb
xchg
xchg
fs
loopne
inc
dec
pop
mov
adc
cmp
mov
div
out
out
ret
shr
aas
push
adc
mov
or
add
aaa
mov
pop
push
push
inc
pop
out
mov
call
addr16
pushf
mov
retf
jae
dec
iret
mov
adc
jl
ss
stos
retf
dec
push
data16
add
aas
addr16
cs
cmp
ret
fisub
mov
push
or
ins
dec
add
mov
xlat
xchg
or
add
inc
outs
ret
xor
not
and
mov
sbb
cmc
xlat
and
and
dec
dec
mov
pop
ret
mov
lea
push
xor
or
sub
data16
pop
stos
shl
xchg
bound
sub
jge
sub
adc
mov
imul
ins
pop
xchg
pop
(bad)
lahf
clc
stc
jae
mov
pop
xor
shl
shl
stos
jp
fwait
aas
jb
test
mov
scas
jecxz
ss
add
in
mov
fisttp
or
push
adc
movs
jmp
std
inc
mov
outs
push
(bad)
cld
test
adc
and
call
and
xor
ss
sar
mov
pop
dec
pop
mov
enter
mov
sub
aam
ins
cmp
repnz
mov
leave
adc
jmp
popa
mov
inc
sub
push
repz
push
popf
dec
sub
jo
mov
xor
in
loope
ror
fs
fidiv
cmp
push
popa
push
jge
popf
cmp
jb
mov
ret
test
xchg
or
or
xor
out
lock
cdq
pop
loopne
adc
sahf
sbb
mov
fdivr
mov
retf
lock
mov
xor
hlt
hlt
or
push
add
fnstenv
jmp
mov
mov
int
pop
push
out
push
pushf
xchg
mov
pop
fwait
jb
mov
push
xor
sub
and
mov
fiadd
mov
mov
pop
push
retf
xchg
cmp
mov
add
pop
adc
mov
and
fimul
jno
inc
pop
je
test
jmp
aas
out
xor
inc
shr
ins
inc
mov
or
mov
out
mov
ret
push
pop
out
mov
into
pop
sbb
pop
test
call
je
mov
data16
jmp
daa
add
mov
sbb
popa
out
mov
mov
and
sbb
cmp
(bad)
cmp
call
scas
data16
and
(bad)
cmp
push
into
push
xchg
unpcklps
div
mov
dec
inc
outs
mov
inc
sbb
sbb
and
add
das
mov
mov
or
outs
stc
icebp
gs
lods
mov
mov
js
mov
inc
cli
mov
stos
loope
ss
jp
sbb
cmps
or
test
or
popf
xchg
push
push
dec
pop
push
ret
jb
dec
adc
push
xor
xor
mov
cmp
lods
(bad)
(bad)
fisub
fbstp
dec
add
pop
sbb
xor
test
and
dec
add
mov
mov
loopne
add
pop
inc
cmp
sbb
cs
jl
lds
lahf
mov
sub
leave
mov
push
xor
cmp
mov
add
mov
lahf
inc
pusha
dec
jbe
scas
rcl
jmp
hlt
xchg
mov
pop
adc
mov
out
mov
ins
jmp
not
mov
data16
xor
and
adc
jno
inc
std
sbb
test
xchg
push
jmp
push
aas
gs
fdiv
cld
push
mov
stos
iret
mov
jmp
fld
jge
xor
mov
mov
lock
sbb
add
cmp
dec
std
push
mov
push
or
pop
ja
repnz
push
cmp
push
std
clc
adc
pushf
sub
stc
cmps
(bad)
sub
stos
jp
scas
push
cmp
ret
jge
cmp
es
jns
jmp
jmp
sbb
jne
add
push
inc
jp
sbb
dec
call
push
mov
cmp
sub
sbb
rol
hlt
hlt
pusha
push
repz
es
lods
or
inc
adc
test
daa
sbb
enter
and
shr
mov
enter
adc
push
mov
xchg
in
dec
sbb
lock
stc
and
sub
ret
ds
aaa
and
push
(bad)
repz
lods
popa
popf
sub
sar
xor
xchg
sub
aad
or
push
or
nop
xor
or
sub
imul
jns
and
ds
cmc
test
sub
mov
jecxz
jb
ror
arpl
je
sti
mov
js
retf
sti
jno
das
adc
mov
pusha
scas
pop
and
inc
call
sti
push
jg
xor
ret
lds
lea
mov
daa
mov
jns
aas
xchg
hlt
mov
push
push
pop
popf
jbe
in
arpl
and
and
lahf
jb
mov
or
and
aaa
adc
loop
in
loope
or
std
add
scas
mov
test
inc
push
inc
jnp
push
mov
sti
push
push
test
mov
into
ret
addr16
rcr
sbb
push
mov
mov
adc
test
cmp
mov
xchg
and
cmp
lea
jmp
cmps
mul
rep
dec
sub
call
daa
push
cmp
ret
mov
sub
aad
mov
jns
out
pop
xor
sub
mov
or
rcl
cmp
sahf
movs
icebp
aas
loopne
adc
xor
jns
inc
add
hlt
(bad)
and
arpl
lods
cmps
lods
bound
inc
cs
sub
ffree
or
(bad)
xchg
sbb
push
fisttp
sub
popf
adc
mov
sbb
jecxz
jae
das
dec
xchg
add
and
test
in
call
adc
push
outs
outs
cmp
pop
pop
mov
jno
xchg
pushf
daa
retf
call
dec
imul
or
jmp
xlat
mov
push
shr
mov
sbb
xor
outs
mov
mov
xchg
dec
scas
or
stos
xchg
mov
popf
fadd
rcr
ins
cmp
jecxz
xor
ret
mov
push
add
ds
push
loopne
mov
scas
add
ss
ret
js
mov
clc
mov
push
mov
or
imul
dec
mov
adc
je
mov
push
imul
adc
scas
mov
call
mov
sahf
ficomp
and
leave
mov
add
mov
leave
lods
mov
enter
pop
ins
cs
mov
repnz
sbb
daa
test
push
cmp
sar
push
pop
sub
mov
fsubr
sar
add
push
add
pop
mov
movs
and
sbb
ss
test
jmp
ins
pop
jbe
cmps
xor
movs
xchg
sbb
pop
daa
xchg
or
aam
dec
shr
dec
sub
loopne
scas
sahf
pop
in
jge
lds
jp
mov
sar
(bad)
lods
cmp
add
cmp
ins
in
jmp
pop
out
and
dec
pop
test
pop
sbb
cld
xchg
or
sbb
adc
shl
ret
sub
adc
pop
aas
enter
xchg
cmp
ficom
cdq
mov
mov
sub
pop
test
ja
pop
push
push
mov
test
dec
jne
mov
stos
dec
sbb
mov
movs
adc
adc
pop
inc
push
xchg
cmp
aas
out
mov
dec
hlt
sahf
in
mov
mov
mov
lea
movs
fsub
push
mov
or
scas
stos
call
sub
fwait
imul
mov
sbb
or
xlat
jno
jecxz
push
and
mov
aas
loopne
xor
loopne
inc
call
(bad)
ins
cdq
inc
data16
mul
out
push
lock
push
mov
add
sti
push
fldenv
dec
aaa
add
iret
lods
(bad)
test
ret
test
adc
mov
push
fisub
xchg
mov
pop
ins
mov
add
mov
int3
pushf
cmp
sbb
mov
and
imul
jae
mov
sti
fwait
xchg
xchg
(bad)
xchg
mov
mov
ss
dec
inc
xchg
hlt
stos
pop
dec
adc
sbb
jmp
jmp
out
fs
call
test
sbb
or
fxch
push
and
dec
inc
mov
pop
popf
movs
jb
mov
pop
in
aad
or
popf
ret
or
mov
shl
cvttps2pi
cs
push
sub
pop
jge
fdivp
lods
mov
pop
out
aas
sbb
and
icebp
mov
(bad)
and
mov
mov
dec
sar
cmp
in
cmp
xor
dec
outs
mov
and
test
adc
sbb
ror
jmp
fild
lods
(bad)
popf
(bad)
mov
mov
rcl
out
iret
(bad)
jle
mov
mov
adc
fisttp
sub
imul
aam
ss
jle
adc
es
dec
adc
js
mov
sub
and
aaa
fucomp
les
push
mov
push
mov
(bad)
and
cld
pusha
out
push
pop
cmps
imul
sbb
scas
jge
in
mov
mov
jge
out
pop
mov
pop
and
dec
inc
jp
mov
fidiv
mov
jb
test
xor
mov
inc
in
sub
push
stc
retf
sub
lds
add
test
pop
pusha
fisub
or
add
hlt
out
mov
sti
shr
ja
jmp
aam
rcl
and
adc
fstp
aam
dec
scas
fst
fdivr
addr16
shr
push
in
scas
inc
pop
mov
xor
les
stos
lods
rcl
dec
mov
mov
xor
jmp
rcl
cdq
jne
inc
lea
stos
mov
cmc
stos
movs
cmp
inc
arpl
test
ins
mov
xchg
and
repnz
push
mov
imul
and
xor
(bad)
sub
adc
push
inc
stos
dec
cli
addr16
mov
and
ret
xchg
sub
les
out
mov
cwde
icebp
jmp
mov
cmp
push
mov
shl
cmc
mov
test
imul
pop
loop
and
or
retf
or
add
jb
and
ret
xchg
lods
pop
cmp
adc
jae
aad
lods
stos
xchg
shl
cli
dec
mov
push
mov
js
mov
inc
push
loope
stos
mov
inc
cmp
shl
rcl
jecxz
inc
movs
sbb
les
loopne
pop
or
loop
lea
push
cmp
in
cmps
push
and
mov
xchg
cdq
in
mov
sbb
fsubr
stos
or
dec
in
fcom
cmc
into
adc
xor
sbb
xchg
jle
pop
inc
icebp
ins
rcr
cmp
jmp
out
fdivr
(bad)
out
int3
cs
into
loopne
xor
scas
or
call
inc
sub
(bad)
mov
jmp
pop
imul
pop
das
inc
add
(bad)
movs
lahf
push
inc
mov
aas
loopne
inc
aas
inc
dec
push
or
add
or
(bad)
inc
mov
fldenv
xchg
das
nop
lds
mov
pop
jb
inc
xchg
outs
bound
stos
rcl
test
dec
pop
scas
adc
sub
int3
fiadd
or
mov
push
pop
push
retf
and
xchg
inc
cs
sbb
lock
dec
mov
addr16
pop
mov
loop
movs
mov
stos
pop
or
push
ret
pop
and
pop
sub
lahf
jne
jbe
mov
inc
rcr
xlat
rcr
ds
adc
inc
mul
das
cmp
sub
out
lods
push
dec
xchg
adc
dec
test
mov
jne
adc
stc
dec
mov
mov
jae
in
inc
je
int3
cdq
mov
xchg
rcl
mov
cmp
dec
in
fld
pop
(bad)
pop
mov
add
jmp
repz
gs
sbb
dec
ret
(bad)
push
push
imul
call
mov
jbe
in
out
outs
mov
jne
mov
jp
(bad)
cli
(bad)
imul
ins
scas
addr16
mov
jne
dec
std
and
jo
mov
jecxz
jg
popf
xchg
packsswb
inc
mov
das
mov
test
push
mov
mov
jg
neg
das
mov
imul
shl
hlt
and
popa
push
fild
sbb
icebp
adc
outs
addr16
repnz
xchg
pop
pop
cmp
out
push
jg
pop
cs
loop
lahf
push
test
mov
ret
push
mov
loopne
xor
fidiv
xlat
inc
inc
repz
shr
mov
xor
push
cld
sbb
dec
aad
outs
push
adc
daa
jp
sub
mov
call
mov
call
enter
test
jl
mov
push
call
iret
xchg
xchg
sub
leave
lods
cmc
mov
inc
popa
ds
mov
popf
pop
cmc
retf
sbb
mov
fdivp
(bad)
dec
adc
retf
icebp
push
adc
movs
sub
xor
push
mov
imul
les
push
or
movs
inc
xor
pop
addr16
and
clc
dec
ss
mov
mov
test
rcr
fwait
adc
mov
or
pusha
enter
stos
cmp
popa
pop
enter
xor
sbb
cld
push
jae
inc
adc
les
pcmpeqw
pop
jl
push
ds
(bad)
adc
push
add
aaa
push
scas
in
mov
mov
cmp
push
hlt
mov
popa
movs
add
fmul
mov
outs
xor
sar
push
dec
clc
mov
sub
(bad)
and
push
retf
pusha
jnp
cmps
inc
inc
push
inc
and
xchg
rol
inc
nop
movs
jle
and
jae
push
addr16
test
mov
or
pop
loope
mul
fadd
pushf
xchg
xchg
cmp
cdq
out
test
loopne
mov
push
test
xor
loop
ficomp
adc
xor
int3
xchg
mov
cmp
jecxz
es
and
das
inc
sti
and
ret
xchg
add
das
xor
sbb
(bad)
test
push
xchg
movs
mov
cmp
xlat
xchg
jp
cmp
lock
add
cmps
(bad)
adc
jns
sub
jmp
and
xor
shl
sbb
xchg
lock
fild
test
addr16
xor
jns
es
fistp
sub
data16
fwait
mov
sbb
cmps
or
push
jle
stos
ret
mov
jae
cmp
fs
jle
pop
pop
js
xor
data16
adc
iret
mov
push
jns
pop
and
pop
pushf
add
or
pop
lds
pushf
out
mov
xchg
aad
shl
pushf
push
mov
jno
lods
int
sbb
and
aaa
push
inc
in
inc
push
dec
jb
dec
in
cdq
dec
bound
mov
xchg
(bad)
pusha
mov
inc
xchg
xchg
fnsave
jmp
test
push
dec
cli
xchg
ret
arpl
out
mov
hlt
clc
ret
ins
fisttp
cmp
aas
mov
in
pop
test
mov
xchg
fld
je
imul
jo
push
pop
push
mov
pop
mov
jecxz
xor
add
push
pop
shr
mov
rcr
jecxz
fcmovb
fisttp
adc
das
loope
mov
iret
test
outs
inc
fsub
or
ja
cmc
mov
add
in
mov
out
xor
mov
fild
mov
push
pop
dec
cmp
cmc
cmp
pop
(bad)
mov
push
inc
arpl
or
push
mov
(bad)
mov
jecxz
sbb
cmp
mov
sbb
pop
or
dec
outs
test
(bad)
int3
xor
popa
(bad)
adc
jo
sti
sub
int
xor
xor
call
(bad)
cli
retf
in
sahf
adc
or
mov
mov
js
test
cmp
mov
imul
fidivr
mov
loop
in
fsubrp
retf
jae
pop
repz
xchg
pushf
test
pop
mov
or
loope
inc
(bad)
push
fistp
cmp
add
sub
sti
xchg
or
es
push
out
and
sbb
pop
in
jge
dec
xchg
jl
jmp
adc
test
das
pusha
xchg
outs
lahf
cmps
pop
fld
cmp
push
mov
sub
cld
jb
add
sbb
xchg
aad
jp
fidiv
je
ins
fimul
jo
jp
in
arpl
fisttp
and
adc
fistp
js
pop
div
dec
jg
test
xor
idiv
(bad)
pmulhuw
movs
lods
mov
out
or
adc
pop
inc
adc
cmp
rol
in
(bad)
fcom
mov
inc
jo
aam
jecxz
pop
gs
xor
inc
add
js
imul
rol
push
clc
aam
jns
mov
lods
popa
neg
adc
mov
cdq
add
and
sub
aad
mov
xchg
cmc
aam
xor
xor
das
mov
jo
dec
add
call
sbb
pop
xchg
mov
inc
rol
push
fsub
xchg
pusha
aas
arpl
repnz
lea
sub
inc
inc
inc
mov
test
adc
push
shl
push
cmc
or
or
push
loop
jne
lods
push
and
mov
setl
stc
adc
lods
cmp
test
in
pushf
xchg
pop
or
or
push
ins
sub
and
test
sbb
neg
popa
push
test
fsub
test
xchg
push
outs
repz
push
push
lock
adc
scas
outs
fdivr
push
adc
and
mov
jle
arpl
out
add
pop
ror
mov
cmc
shl
xchg
push
jmp
xchg
mov
mov
(bad)
cli
outs
push
dec
fistp
adc
pop
stos
out
mov
je
inc
repnz
dec
cli
repnz
(bad)
(bad)
or
pop
jge
xor
sbb
sahf
sti
cld
nop
mov
mov
fsincos
sahf
bnd
mov
mov
dec
dec
vmovapd
ins
retf
fiadd
and
je
inc
cmps
fwait
leave
pop
addr16
push
jns
nop
aas
nop
dec
inc
adc
shl
stos
cmps
mov
fnstsw
sbb
pop
dec
and
xor
jb
stc
inc
mov
test
lea
in
jne
xor
jle
imul
xchg
cs
add
sub
xchg
leave
dec
outs
push
lods
or
jl
jge
adc
cmp
sar
aad
sub
mov
shl
inc
out
icebp
ins
fnstsw
jp
stc
jle
pop
xchg
arpl
inc
scas
cmp
xor
xchg
sub
pop
jne
cmps
fild
push
in
and
sbb
stc
adc
loop
outs
dec
inc
adc
pop
adc
jnp
bound
mov
imul
test
cmps
out
push
loopne
aad
inc
or
xor
xchg
inc
mov
test
popa
into
inc
pop
cdq
loop
sub
mov
dec
mov
loop
test
push
mov
cmp
arpl
icebp
dec
or
or
dec
inc
pextrw
add
bound
fisttp
xor
inc
fs
push
inc
lods
push
mov
call
imul
push
imul
pop
es
jp
loopne
jne
sub
mov
cli
fsub
mov
call
fld
jo
lds
and
jne
jp
xor
cmp
add
add
add
fistp
int
sub
adc
mov
xchg
dec
cmps
rcl
add
pop
or
pop
mov
pop
fcmovnb
leave
outs
out
bound
aad
jp
out
cli
mov
jl
retf
pusha
idiv
idiv
ins
and
pop
rcl
das
sub
ret
dec
test
ror
dec
and
push
fmul
xlat
dec
(bad)
or
xchg
pop
cmps
sbb
movs
mov
fcmovnbe
cld
jb
stc
push
fstp
and
jbe
stos
jbe
repz
jns
fadd
les
mov
popa
(bad)
push
dec
rcr
and
test
je
push
jmp
fild
xchg
ja
test
sbb
adc
jp
pushf
icebp
jl
cmp
jp
ins
(bad)
mov
or
or
aam
sbb
mov
pop
sub
and
adc
fwait
adc
mov
imul
pop
mov
add
popa
add
jl
imul
rcr
jg
fiadd
iret
lea
xchg
jmp
or
add
fwait
mov
add
fwait
pop
es
ret
cmp
push
test
jns
shl
adc
add
push
xor
adc
fucomi
xchg
repz
test
hlt
aaa
(bad)
cmp
cmp
ins
mov
in
fdivr
data16
sbb
mov
ss
popf
ficom
pushf
push
loopne
in
inc
pop
inc
outs
aaa
shr
pop
jp
pusha
inc
hlt
mov
add
xlat
sub
in
xchg
ret
test
outs
add
inc
inc
mov
mov
sti
lods
aaa
lds
mov
xchg
jl
xchg
and
pusha
test
push
push
inc
dec
ins
push
arpl
jmp
call
or
ds
inc
or
(bad)
in
dec
mov
push
inc
test
inc
jbe
data16
or
cmp
xchg
sbb
xchg
(bad)
push
fstp
xchg
iret
stos
and
ds
sub
neg
jbe
xor
into
dec
dec
daa
cmp
std
inc
pushf
mov
addr16
cli
test
sar
sahf
fidivr
jp
sbb
retf
aas
dec
adc
test
jg
mov
movs
pusha
ss
fsub
ror
inc
mov
sub
pop
jecxz
icebp
mov
or
pop
mov
ret
(bad)
or
push
mov
adc
iret
bound
lahf
add
push
sbb
mov
fcmovu
add
jecxz
mov
xchg
adc
push
div
ins
mov
sti
xor
sbb
shl
mov
dec
je
push
pop
sub
dec
pop
inc
xchg
mov
arpl
cmp
inc
pop
cmps
scas
or
imul
dec
and
mov
mov
mov
sub
lods
sbb
push
fyl2x
mov
test
addr16
daa
das
sub
add
scas
pop
(bad)
movs
push
sbb
test
pop
sbb
scas
outs
test
dec
outs
in
rcr
mov
stos
clc
sbb
mov
pop
xchg
dec
push
push
ror
sbb
xchg
dec
mov
cwde
cmps
movs
dec
cmp
movs
aad
push
test
pop
and
bound
(bad)
sbb
dec
mov
int
and
test
push
retf
test
cmp
popa
aad
push
or
or
lods
mov
cwde
mov
xor
sub
loopne
xor
ds
pop
dec
mov
lea
cdq
push
mov
push
mov
inc
mov
std
test
push
jb
stos
fs
fwait
xchg
aas
push
repnz
shr
fdivr
adc
xchg
mov
sub
int
xor
mov
jmp
mov
jle
add
out
mov
outs
add
cmp
retf
stos
and
jnp
add
add
adc
mov
cwde
mov
test
and
jg
inc
loope
cmps
movs
pop
cmp
sbb
cdq
in
(bad)
add
int
or
sub
fiadd
inc
push
lods
enter
xchg
scas
pop
and
push
rcr
add
lea
das
push
shl
loopne
xchg
cmp
sub
mov
(bad)
aad
cmps
mov
add
mov
cmps
out
outs
aad
and
sahf
push
and
push
sbb
xchg
and
das
cmp
sbb
push
ins
mov
popa
push
and
mov
push
aas
mov
fs
or
out
cld
cmp
dec
pop
mov
sub
(bad)
lods
inc
or
leave
out
sub
push
ret
call
dec
add
mov
mov
and
out
push
adc
dec
imul
adc
mov
xor
adc
es
out
sbb
loop
in
icebp
fcom
daa
and
jbe
adc
pop
push
jb
xlat
or
jno
adc
bound
mov
mov
clc
push
adc
lods
mov
or
movs
sub
stc
in
mov
xchg
adc
xchg
faddp
push
push
pop
push
mov
es
das
in
sbb
push
mov
mov
push
fs
retf
fbstp
je
rol
inc
popa
xor
jge
inc
mov
add
add
cmc
scas
dec
jb
inc
sar
and
xchg
sub
xchg
add
jb
or
mov
cmp
jmp
xor
and
loope
leave
pusha
mov
pop
pop
fcomp
push
jae
jecxz
dec
mov
ins
pop
retf
xor
loope
retf
xor
dec
popf
leave
cmps
ja
lea
jmp
pop
ficomp
(bad)
and
mov
stos
sub
cld
ret
mov
adc
dec
out
mov
sahf
pop
inc
test
mov
cli
pop
xchg
imul
mov
imul
adc
add
jl
retf
cmp
xor
(bad)
mov
push
jmp
mov
rdmsr
dec
mov
jno
leave
push
(bad)
jmp
inc
gs
mov
mov
ficomp
sbb
ret
adc
test
repz
mov
ret
out
xchg
fsubr
sbb
xchg
popa
out
add
enterw
in
out
pop
jg
add
or
call
(bad)
pop
mov
push
or
test
pop
pop
nop
sbb
movs
adc
add
fs
pop
dec
std
mov
cmp
mov
push
and
pop
mov
jl
mov
add
or
sub
push
cmps
popa
dec
outs
(bad)
sub
mov
inc
mov
out
push
and
push
cmps
into
xchg
fsub
je
add
fwait
dec
mov
cmps
test
dec
(bad)
jmp
nop
jnp
rol
sar
push
or
sti
mov
loop
xchg
inc
fwait
push
push
ins
xchg
js
mov
js
sbb
repz
cwde
pushf
or
(bad)
dec
adc
shl
cld
adc
enter
test
test
or
mov
adc
mov
or
adc
daa
cmp
or
inc
out
adc
jns
(bad)
movups
add
pop
dec
pop
cmp
stos
loope
jmp
test
or
mov
test
inc
xor
jnp
fsub
in
cmp
xchg
mov
dec
xchg
outs
sbb
xor
lock
(bad)
jp
pushf
mov
xchg
jl
or
data16
cwde
ss
sbb
jo
cmps
xchg
(bad)
and
and
mov
pop
fdivr
fild
mov
mov
test
pop
lea
movs
cmp
ds
jmp
fwait
add
and
and
inc
leave
mov
stos
fisub
mov
retf
aam
adc
xor
push
je
inc
pop
out
out
mov
(bad)
psubb
mov
dec
popf
aas
dec
mov
jbe
pop
test
retf
jne
sub
gs
loop
into
leave
test
adc
and
ret
hlt
and
inc
cld
add
mov
mov
jno
and
mov
pop
mov
or
int
xchg
cwde
stc
xchg
js
mov
sub
or
adc
xor
xchg
xchg
sbb
push
and
mov
jle
or
ret
sub
mov
lods
adc
mov
jnp
daa
ret
sbb
pop
cmps
sub
or
mov
mov
mov
xor
xor
aad
aam
aaa
add
cmp
jbe
sub
scas
jmp
ins
mov
and
sub
out
push
test
rcr
loope
je
stos
movs
outs
(bad)
leave
xchg
cmp
add
test
xor
popa
test
mov
arpl
pop
mov
shl
xor
stc
xchg
mov
call
mov
retf
inc
ror
outs
adc
mov
mov
movs
jp
sub
(bad)
add
or
mov
push
enter
pop
dec
sub
mov
cs
mov
lds
test
cmps
inc
lds
sti
sub
sub
fstp
pop
inc
push
inc
icebp
push
daa
jmp
fmul
fwait
dec
test
mov
test
test
sub
inc
add
fimul
mov
pop
add
and
adc
ins
xlat
xchg
push
or
repz
mov
mov
mov
push
int3
or
sbb
movs
inc
loop
jb
mov
loop
push
mov
lahf
in
xchg
inc
fwait
hlt
les
fcomi
fnsave
dec
sbb
mov
(bad)
shl
sub
setbe
fs
js
mov
push
repz
ds
sbb
cmps
sub
fadd
pop
(bad)
xchg
(bad)
dec
fs
fsubr
in
in
cwde
sub
cli
jg
mov
push
xchg
stc
rcl
mov
data16
sar
test
jmp
adc
sub
sub
test
stos
add
(bad)
sub
or
xchg
ret
shr
inc
jle
mov
rcr
outs
stos
xor
push
je
jnp
sahf
ds
cmc
sub
ss
mov
mov
sbb
pop
gs
jmp
push
or
nop
xor
aad
mov
bnd
mov
mov
test
xchg
sbb
push
xchg
ficom
inc
fisub
ds
lds
ret
imul
sub
gs
aas
pop
or
fdivr
push
mov
adc
push
pop
mov
push
dec
dec
cwde
test
add
es
pop
mov
xor
inc
sub
push
mov
pop
ins
pop
in
adc
add
push
lock
jmp
or
ins
xor
(bad)
jl
in
fisubr
mov
inc
adc
ins
inc
jmp
loop
fst
js
das
test
mov
sub
dec
mov
sub
sub
push
cmp
dec
jne
shl
cmp
sbb
shl
inc
enterw
mov
cs
mov
lock
in
int3
sahf
cmp
cmp
adc
cmps
stos
sar
push
xchg
adc
mov
aas
pop
sbb
pop
jb
fwait
mov
mov
call
(bad)
imul
mov
mov
idiv
inc
std
gs
sbb
cld
xor
stos
cmp
dec
ror
jb
pop
mov
and
jecxz
pusha
sub
rcl
push
rcr
out
repz
xor
xchg
dec
inc
rcr
(bad)
aas
bound
imul
aam
aam
xchg
sbb
sub
pop
das
fisttp
xor
mov
or
lods
add
push
inc
lods
in
and
sbb
sbb
lods
add
in
pop
xchg
add
push
push
clc
mov
and
ins
sub
cmp
push
popaw
mov
aam
out
or
push
lds
xlat
and
mov
pop
loopne
push
ficomp
jge
adc
push
mov
push
xchg
xor
mov
sub
inc
ss
push
and
das
call
sbb
add
test
popf
dec
mov
in
jp
mov
leave
jp
int3
push
in
mov
fisub
dec
xchg
cwde
and
int
enter
ins
dec
xchg
cmp
dec
adc
mov
jp
mov
rol
mov
xlat
or
sbb
out
xchg
sahf
daa
pop
loopne
int
inc
mov
mov
data16
shr
data16
fbld
scas
retf
sub
mov
jb
retf
jno
imul
scas
sbb
movs
sbb
ds
cmp
ffree
loopne
pop
inc
nop
clc
mov
gs
test
push
loope
dec
in
dec
xor
fisub
test
leave
push
int
fsub
(bad)
call
xchg
push
adc
mov
dec
sub
jno
inc
mov
xchg
cdq
and
or
jno
pop
lock
es
jl
(bad)
lds
push
adc
loopne
mov
arpl
retf
add
stos
cmps
je
xchg
xchg
es
popf
ret
xor
daa
cmc
pop
pop
jmp
addr16
ins
push
clc
pop
xlat
pushf
mov
out
push
lods
mov
mul
lock
lock
push
aaa
dec
sbb
(bad)
sub
cmc
inc
les
cmc
inc
dec
xchg
idiv
inc
pop
aam
pop
add
lods
iret
jecxz
fs
push
mov
test
mov
cmp
adc
xchg
aam
lds
hlt
repnz
or
xchg
retf
test
xor
mov
xor
jmp
sbb
mov
(bad)
pop
(bad)
mov
mov
xor
loope
jge
jg
inc
ficom
mov
adc
popf
push
cmp
cmovl
lds
pushf
mov
adc
dec
cmp
cmc
cs
jle
pop
test
cmps
(bad)
sub
mov
jle
sub
inc
dec
sub
jg
mov
inc
jo
pop
mov
adc
mov
hlt
push
jae
mov
push
or
clc
push
(bad)
cld
inc
add
jp
sub
push
sbb
shl
add
sub
sub
cmp
inc
push
out
clc
sar
mov
dec
popa
mov
movs
mov
es
push
and
loopne
mov
mov
mov
jge
idiv
clc
aam
dec
pop
js
mov
test
jae
cwde
shl
pop
jge
sub
repz
push
cwde
mov
jne
jo
mov
jo
jmp
call
adc
cmp
xchg
call
aad
or
out
add
sahf
scas
inc
add
jnp
cmp
pop
dec
scas
dec
sub
imul
or
fs
into
xchg
add
pop
inc
add
aad
jmp
xchg
leave
mov
inc
shl
mov
call
jno
ss
or
jg
and
into
push
mov
sub
bound
into
and
iret
or
pop
fs
sbb
xchg
mov
lock
jne
hlt
aam
icebp
mov
mov
pcmpgtw
mov
xor
addr16
fucomi
cdq
or
add
or
jbe
push
fwait
add
or
repnz
clc
(bad)
fnstsw
imul
push
(bad)
imul
es
shl
pop
(bad)
cwde
ss
rcl
sbb
out
cmp
inc
push
mov
nop
enter
dec
sub
daa
sbb
mov
dec
stc
cli
cmp
aad
js
int3
xchg
aaa
imul
sub
repz
sbb
ficomp
out
pop
ja
cld
cmp
(bad)
movs
fcomi
xor
dec
dec
inc
stc
mov
pop
sbb
push
fidiv
mov
mov
bound
fild
jmp
popa
cmps
aad
mov
or
jp
aam
sbb
push
div
add
scas
outs
outs
shl
lock
scas
dec
sub
dec
sbb
mov
sbb
lea
dec
pop
or
rcr
mov
xchg
fimul
cmp
sti
call
or
xchg
das
or
mov
mov
xor
mov
sar
call
and
adc
scas
xchg
and
mov
imul
mov
sub
or
loop
push
ret
adc
jg
push
push
cvtpi2ps
mov
loop
dec
stos
xchg
xlat
sar
fdivr
out
test
inc
call
cmps
cmp
stos
cmp
scas
dec
pop
inc
mov
out
xor
pop
and
push
div
js
cmp
inc
bound
mov
std
inc
bound
add
rcr
xor
pop
rol
mov
add
std
ds
popf
dec
push
(bad)
loop
mov
fiadd
inc
push
test
fcom
cmp
cmp
push
pop
sub
push
sahf
sbb
adc
xchg
push
mov
push
dec
lock
cmp
and
imul
movs
and
xchg
ins
cmp
aaa
cmps
cs
mov
mov
push
pushfw
cmp
and
sbb
xchg
movs
retf
pushf
call
(bad)
sbb
jmp
(bad)
ficom
icebp
mov
rcl
fwait
cmpxchg
inc
mov
(bad)
xor
ret
ins
cmp
jge
ins
xchg
sub
mov
aas
fs
mov
pop
sub
sbb
lds
fist
sub
popa
outs
mov
cmp
(bad)
hlt
aam
mov
pop
dec
shl
clc
push
test
dec
int3
fcom
int
xor
repz
pop
jle
es
fcmovb
shl
xchg
cmp
fldenv
(bad)
fldcw
xchg
jmp
adc
push
sbb
adc
push
mov
out
jmp
aaa
lods
push
pop
mov
pop
aas
pop
adc
add
test
out
mov
loope
jl
mov
jg
sub
pop
inc
cmp
paddusb
push
call
js
jg
mov
scas
jns
iret
bound
mov
adc
iret
sbb
cld
or
cmp
in
mov
out
pop
or
sub
pop
fpatan
sub
dec
fbld
mov
dec
mov
mov
push
(bad)
jbe
cs
or
jne
test
xor
shl
add
dec
jno
sbb
and
sub
addr16
enter
jb
xchg
sub
adc
jbe
mov
rcl
xchg
cwde
sub
sahf
mov
lods
xchg
out
jbe
movs
lea
sub
cmc
mov
push
arpl
jne
std
ret
lock
fimul
icebp
cwde
fucomip
dec
popa
xor
ja
shr
sahf
sahf
shr
sahf
adc
xlat
mov
(bad)
loopne
jb
dec
mov
iret
inc
out
rcl
jmp
test
es
push
iret
xchg
sub
call
mov
add
shl
mov
lds
scas
hlt
(bad)
mov
xchg
mov
mov
cld
cmp
fisttp
xchg
pop
fist
mov
or
sbb
out
mov
mov
and
push
pop
out
(bad)
in
call
mov
pop
pusha
ja
xchg
movs
dec
ror
nop
xchg
pop
je
fist
mov
int3
cli
pop
test
sub
cmp
int3
sub
and
cmp
enter
icebp
jecxz
xor
sbb
aam
js
adc
repz
(bad)
jle
xchg
fst
test
pop
xor
rcr
xchg
jb
xchg
pop
push
lods
mov
pop
sub
fsubp
sbb
and
scas
movs
mov
cli
xchg
and
adc
stos
fcomi
(bad)
push
mov
pusha
pop
mov
pop
in
retf
mov
add
(bad)
stc
ins
sbb
(bad)
sub
es
sahf
jnp
fisttp
enter
lods
daa
rcl
jae
scas
push
movs
test
mov
nop
outs
sub
or
pop
cmps
adc
pop
scas
aas
ret
jmp
data16
adc
stos
push
adc
std
jecxz
inc
add
stos
mov
dec
mov
or
ins
mov
jmp
(bad)
mov
loope
fstp
ds
pop
dec
int3
cmc
mov
popf
popf
repnz
retf
mov
or
mov
sbb
retf
movq
add
lea
jo
cmp
dec
cmp
pop
test
dec
call
xchg
(bad)
popf
mov
and
outs
out
inc
adc
call
xchg
inc
(bad)
call
mov
leave
ret
in
adc
or
xor
jb
mov
in
inc
xor
shl
cmps
xor
cwde
jns
mov
in
and
mov
lea
retf
das
dec
mov
adc
sahf
call
pop
xchg
retf
gs
adc
and
xchg
je
or
cli
inc
(bad)
cmc
mov
cmps
aad
xchg
dec
ins
pop
pusha
cmp
hlt
sbb
loop
inc
mov
pop
push
test
mov
lods
rcl
or
popa
loope
loope
inc
sub
mul
std
ins
xor
sub
outs
daa
or
xor
mov
push
dec
jbe
jb
cmp
xchg
xchg
(bad)
sbb
pop
xchg
jae
jl
xchg
inc
adc
enter
jecxz
je
jmp
sahf
adc
inc
push
jne
jle
(bad)
mov
sbb
rcl
scas
ins
inc
int
fs
jb
fwait
out
mov
jo
and
ja
dec
fiadd
movs
icebp
jne
or
cwde
fstp
jne
push
neg
fcomp
pop
push
mov
jnp
ss
outs
lods
outs
not
mov
sbb
push
enter
inc
retf
mov
and
adc
inc
add
add
sbb
pop
mov
xor
cdq
clc
xchg
and
xor
and
adc
sti
jnp
test
sub
fist
mov
cmp
fwait
push
pushf
test
sbb
mov
fistp
sahf
mov
jle
(bad)
mov
jno
sbb
dec
fidivr
adc
sbb
add
or
adc
jmp
imul
sbb
push
idiv
bound
scas
jno
(bad)
mov
add
inc
hlt
sbb
pushf
stos
mov
mov
jmp
or
add
movs
call
push
cli
lock
mov
dec
movs
mov
xor
adc
hlt
scas
inc
jnp
xchg
std
stos
(bad)
imul
xchg
pop
call
call
imul
sbb
int
bnd
sar
cli
ret
in
jns
hlt
jecxz
add
cwde
scas
add
movs
jb
jns
xchg
fisttp
mov
cmc
rol
mov
les
sub
pop
inc
je
dec
call
ja
jne
dec
add
rcr
push
sti
pop
scas
jns
mov
adc
out
adc
adc
gs
pop
pop
ds
mov
shr
hlt
jg
lea
and
cmp
adc
repnz
sar
xchg
dec
cmp
les
(bad)
cmp
pop
scas
xor
sbb
sub
fs
ss
(bad)
ret
fld
mov
aas
inc
jle
push
push
mov
jle
(bad)
add
pusha
pop
les
add
(bad)
ja
mov
sub
fsub
and
call
mov
cmps
cli
push
and
jle
xchg
jmp
mov
pop
or
fwait
mov
daa
ret
rol
and
or
push
sub
jno
add
dec
xor
dec
das
mov
xor
ret
jo
add
lahf
mov
repz
in
out
and
add
dec
add
dec
inc
sbb
std
pop
lahf
cmps
cmp
jmp
add
out
or
icebp
push
pop
xchg
or
xor
shl
push
pop
cmp
and
call
xchg
add
dec
and
mov
movs
int3
mov
sti
jecxz
out
or
ficom
lock
stos
and
adc
xor
jbe
mov
inc
push
fucomip
ficom
dec
adc
mov
mov
test
mov
mov
stos
or
mov
stos
shr
add
push
arpl
mov
imul
pushf
xchg
iret
mov
rcr
sti
cwde
aas
stos
sub
int
ss
add
and
std
xchg
pop
jb
fnstsw
movs
mov
mov
clc
stos
pop
(bad)
stos
dec
cdq
pop
imul
inc
test
call
sub
adc
adc
xor
mov
dec
xor
ss
adc
pusha
outs
adc
jns
xchg
lahf
js
and
jae
inc
push
pushf
mov
test
pop
xor
cmps
pop
(bad)
retf
push
dec
loopne
adc
push
stos
mov
call
(bad)
adc
sbb
(bad)
jge
push
push
call
lds
not
data16
arpl
inc
dec
pushf
pop
neg
push
int3
sbb
dec
(bad)
jg
gs
xor
or
mov
repz
cmp
rcl
dec
dec
jp
add
stos
fucomi
lahf
cmps
ror
fwait
mov
pop
jmp
xchg
fnsave
mov
std
mov
sub
jb
sbb
mov
scas
adc
xchg
test
xchg
jmp
jns
cmp
adc
add
xor
je
or
or
mov
push
cmp
cmp
xor
or
mov
push
jmp
inc
dec
push
xor
repz
pop
cmp
cmp
outs
mov
(bad)
pusha
xchg
inc
mov
push
retf
(bad)
aas
xor
jmp
push
outs
rcl
xchg
das
retf
jge
aaa
fsin
imul
mov
int
push
fs
lock
mov
mov
and
mov
xor
sub
jo
sar
out
pusha
cmp
daa
pop
jae
or
imul
cmp
test
rol
stos
loop
les
in
or
cmp
lods
je
imul
jp
repnz
pushf
(bad)
fld
push
push
xor
lods
xor
jb
inc
adc
xor
int3
push
jno
enter
aad
pushf
fidivr
test
add
jae
jmp
ret
ss
mov
les
(bad)
enter
repnz
dec
pop
or
push
mov
fcmovu
and
dec
shr
pop
push
int3
mov
out
fadd
mov
push
adc
push
movs
sti
mov
add
cld
loopne
push
int
jnp
jge
mov
aad
pusha
popf
add
inc
cdq
or
out
dec
xor
xchg
in
test
mov
pushf
add
xor
lods
lods
xor
out
mov
je
fst
nop
mov
(bad)
adc
push
jg
aam
loope
xchg
ficomp
pop
pop
test
fs
iret
sub
cmp
aam
fidiv
push
pop
or
sub
imul
lds
jb
dec
push
fnsave
out
retf
popf
shl
retf
or
(bad)
push
in
dec
xchg
jmp
add
mov
dec
iret
xchg
jb
cmc
cmp
out
daa
scas
rcl
xor
mov
iret
rcr
mov
loopne
jbe
mov
mov
adc
ficomp
fcom
jmp
cmc
sub
jl
mov
mov
add
stos
dec
xor
add
sub
in
test
loopne
mov
dec
pusha
popa
mov
arpl
imul
dec
pop
(bad)
std
xchg
or
(bad)
fwait
xchg
and
mov
aas
cld
jge
fs
add
mov
or
out
jbe
or
pop
iret
and
fmul
push
fsubr
push
sub
sbb
ffree
and
sbb
cli
ins
fs
ss
mov
frstor
aas
mov
int
push
mov
dec
cmp
mov
pop
repnz
rol
mov
loope
test
test
sbb
sub
dec
jle
loop
aam
rol
dec
addr16
jbe
js
jb
add
sar
xchg
jae
dec
and
rcl
cdq
mov
pop
fimul
div
cmp
stos
lods
into
mov
xor
pop
(bad)
pop
ret
lock
or
ins
cli
shr
cli
mov
inc
mov
cmp
pop
pop
add
jnp
into
fst
ret
fstp
sbb
int3
pop
mov
sbb
or
jae
adc
xchg
retf
cmps
or
mov
retf
dec
pop
mov
rcr
nop
es
push
push
mov
or
sub
outs
mov
pusha
inc
mov
sub
adc
call
sti
dec
xlat
jns
inc
sub
add
div
cmp
xchg
push
jecxz
push
aas
adc
nop
adc
loopne
adc
outs
mov
outs
popa
out
mov
or
cmp
pop
psrld
lahf
jmp
fld
pop
jnp
adc
pop
add
or
pop
mov
push
cwde
pop
mov
or
sbb
jmp
xor
mov
stc
inc
inc
pushf
popf
es
fcomp
or
scas
popf
jp
mov
popa
fbld
imul
into
xchg
gs
sbb
(bad)
into
retf
out
loopne
jle
enter
arpl
jmp
xor
jp
clc
dec
jbe
mov
push
dec
mov
(bad)
mov
push
or
arpl
push
xor
xchg
sbb
or
ror
mov
mov
shl
mov
xchg
sub
and
lods
(bad)
jge
sti
mov
repz
(bad)
lock
push
jnp
inc
mov
loopne
cld
cmp
(bad)
std
int
cmp
push
repz
movs
mov
cmps
xchg
mov
call
mov
fwait
push
cdq
push
movs
cli
push
mov
popf
aad
push
or
push
push
stos
mov
dec
sar
pop
sahf
pop
xchg
ds
pop
sub
repnz
jo
ja
clc
and
inc
js
mov
inc
clc
sar
ins
dec
mov
fistp
(bad)
cmp
add
std
movs
jmp
mov
gs
mov
stos
cmc
xlat
das
xchg
inc
sub
lock
div
inc
jmp
lock
jl
fnstsw
scas
div
mov
dec
jnp
sbb
xchg
fsubr
lahf
jmp
outs
in
inc
in
lods
pop
pop
xchg
(bad)
clc
and
cmp
lea
push
ja
sbb
pop
xchg
push
std
(bad)
cld
pusha
mov
movs
loopne
add
in
add
popf
jecxz
pop
movs
mov
jmp
js
test
inc
pop
dec
xchg
add
and
cmps
push
jmp
push
dec
jg
adc
aad
out
cmp
and
mov
rcl
inc
fcomi
ficomp
sbb
fld
dec
push
mov
mov
adc
aaa
push
sub
or
pop
mov
cmp
dec
adc
fwait
cmp
mov
idiv
leave
ds
mov
inc
mov
cmp
idiv
xchg
push
push
pop
test
pcmpgtb
js
adc
adc
cwde
mov
mov
adc
enter
mov
adc
mov
add
inc
retf
jbe
in
push
adc
out
dec
push
ins
nop
outs
mov
mov
pop
inc
in
sub
repnz
cmp
sub
add
clc
sub
popf
sahf
repz
and
gs
push
daa
fild
mov
movs
cdq
stos
inc
add
stos
mov
fwait
in
lods
push
test
dec
mov
or
rol
pusha
pop
cmp
test
int3
jmp
pusha
fmul
inc
ret
iret
pop
ror
jecxz
loop
pop
sub
imul
ds
mov
lahf
scas
fiadd
xchg
cmc
adc
aaa
stc
mov
std
jmp
add
fwait
mov
jb
mov
sub
out
or
mov
jle
adc
ins
inc
mov
or
fld
inc
xor
xchg
jg
jmp
cs
mov
jl
push
mov
test
lahf
xchg
sub
scas
sbb
jo
fidivr
mov
mov
add
inc
and
and
idiv
dec
not
xor
add
nop
pushf
movs
sub
cmp
lods
addr16
push
adc
add
and
mov
add
cmp
enter
call
and
dec
adc
out
xchg
xor
inc
or
mov
pop
cs
xlat
mov
inc
sub
test
repz
xor
cwde
mov
ja
outs
pop
sbb
adc
test
je
sbb
iret
in
popf
aas
jge
fs
cmp
mov
inc
mov
test
scas
data16
inc
ins
bnd
clc
outs
sti
lock
outs
push
repz
shl
xchg
rcr
movs
call
xchg
adc
mov
push
js
or
test
std
fistp
loop
sbb
shl
xlat
add
call
outs
sahf
pop
pop
jae
scas
adc
pop
ss
retf
fild
pop
pop
mov
lea
jl
test
or
lods
sub
aad
fucomi
dec
jle
jb
inc
cld
jns
clc
jb
fmul
cmp
mov
in
jg
scas
mov
movs
xlat
es
and
aam
cmps
jne
jge
sub
(bad)
sub
cmps
cdq
sub
mov
test
std
ins
add
push
cdq
shr
daa
push
(bad)
and
out
mov
ret
inc
sub
and
cdq
xchg
mul
sub
gs
push
or
es
add
stos
fidivr
xchg
dec
pop
out
add
mov
es
into
loopne
outs
loop
and
fadd
xlat
mov
push
js
fstp
ss
out
fisub
adc
inc
fidivr
cld
jns
hlt
sbb
add
loope
push
add
sub
dec
mov
jecxz
ins
inc
retf
mov
aad
das
iret
xlat
push
xor
gs
in
and
mov
jmp
rcl
int3
sbb
cmp
inc
sub
pop
inc
fdiv
daa
mov
stos
push
js
jmp
test
fcom
(bad)
jb
mov
jle
mov
add
(bad)
cli
mov
xchg
xchg
sub
cs
mov
cdq
inc
cwde
push
ss
push
adc
clc
(bad)
fist
movs
cli
sbb
mov
enter
ins
adc
cmp
dec
imul
xchg
hlt
setp
int3
mov
call
and
ror
sbb
pop
dec
test
or
fwait
inc
mov
ret
inc
xchg
cmc
jne
ret
xchg
inc
pushf
mov
push
dec
mov
out
clc
pop
jno
lock
add
mov
movs
in
sbb
xchg
lds
adc
mov
push
cmc
pop
and
push
adc
loope
mov
jne
or
inc
sbb
mov
sub
mov
adc
aas
xchg
xor
mov
jl
or
and
(bad)
aaa
xchg
test
les
add
or
pop
push
inc
xor
cwde
shl
xchg
mov
std
gs
mov
pop
cmp
cmp
je
iret
or
mov
sbb
and
mov
push
sub
pop
jp
imul
jmp
cdq
ins
das
xor
xchg
pop
xor
aam
mov
xchg
(bad)
lods
cmp
add
shl
dec
jmp
imul
xor
cmp
mov
out
mov
push
ins
les
into
add
stos
cmc
mov
into
leave
in
add
mov
sub
in
inc
aam
push
out
call
jmp
xchg
sbb
ss
mov
and
out
movs
repz
outs
jg
das
sub
mov
jmp
push
mov
mov
mov
sbb
sbb
bound
mov
fstp
(bad)
mov
add
arpl
and
and
fiadd
push
xchg
adc
ins
or
sahf
fsubr
jb
rcr
xchg
sar
inc
into
aas
mov
sbb
ins
jne
or
aas
jge
(bad)
daa
push
aas
dec
mov
cmp
popf
popf
fs
ror
or
xor
mov
xchg
mov
or
daa
and
or
cmp
add
cdq
push
jns
retf
push
fsub
int
retf
cmp
iret
push
jg
jle
rcr
(bad)
out
scas
leave
or
mov
enter
js
sti
mov
xor
jg
ja
mov
xchg
sub
test
add
into
dec
icebp
mov
loop
jmp
xor
sti
sahf
out
ret
cmp
in
jae
aad
ret
xchg
push
mov
popf
inc
dec
adc
xor
ret
xor
ror
loop
sbb
(bad)
pop
mov
inc
xchg
inc
jp
call
loop
outs
call
fisub
cmp
sahf
popa
push
xor
jo
jl
mov
jecxz
adc
or
cld
mov
add
ins
sbb
inc
jbe
sbb
or
sar
(bad)
in
call
adc
or
adc
add
add
fild
pusha
in
mov
dec
push
mov
sbb
mov
or
dec
xchg
call
mov
and
out
xchg
or
jmp
inc
mov
mov
ss
mov
mov
imul
and
cmps
xor
add
pop
mov
pop
xlat
jl
popf
sub
cdq
inc
mov
inc
dec
jbe
scas
aaa
repnz
ret
jmp
cmp
sbb
fidivr
fnstsw
dec
mov
dec
mov
out
fst
ins
sub
in
mov
lods
pop
dec
xor
(bad)
sub
mov
mov
inc
jmp
pop
pop
sub
cmove
pop
fidivr
fisttp
aad
jmp
in
inc
cmp
xor
adc
xchg
push
sub
and
test
loop
xchg
jge
jge
cmc
cmp
loop
fcmove
inc
mov
push
jnp
push
or
jp
movs
loope
cmp
(bad)
fwait
cmp
call
in
mov
rcr
dec
push
test
not
mov
in
ret
mov
add
jge
cli
sub
jnp
loope
pop
lahf
arpl
icebp
enter
popf
push
push
and
xchg
cmp
xchg
push
xor
(bad)
mov
sbb
xor
mov
cmp
out
sub
fs
xchg
sahf
retf
into
stos
nop
repnz
dec
or
xor
in
sub
addr16
mov
imul
or
push
push
xor
ja
sbb
adc
into
aas
xchg
cdq
mov
stos
mov
loopne
mov
push
inc
add
mov
ss
scas
loopne
loope
xor
pop
jnp
xchg
cmp
jmp
sub
push
ret
mov
sub
(bad)
hlt
clc
mov
jl
or
cwde
stos
(bad)
je
and
cmc
mov
jo
jnp
in
xor
add
xor
mov
fs
ja
ins
stos
je
shr
(bad)
cmp
rcl
je
clc
mov
push
add
aaa
neg
in
push
test
das
adc
retf
bswap
cwde
movs
dec
cmp
xchg
int
cmp
sub
clc
mov
ficomp
inc
pop
lds
jno
aaa
stos
add
mov
push
sahf
inc
bound
sbb
loope
loopne
js
mov
push
enter
mov
ins
int
lods
jmp
je
adc
popa
inc
movs
lea
stc
and
or
aad
sub
cmp
push
mov
dec
xchg
mov
mov
pop
fist
lods
and
dec
push
cmp
shl
push
inc
jmp
das
push
push
xor
dec
jl
imul
cdq
mov
pop
push
xchg
and
into
int3
shl
adc
mov
add
jecxz
test
fwait
out
aas
pop
add
or
test
outs
test
inc
rol
out
cmc
mov
push
movs
clc
inc
repz
repz
adc
ja
or
(bad)
pop
sub
push
das
lahf
ret
push
add
and
ja
cmp
pusha
push
test
mov
xchg
(bad)
inc
push
aad
sub
(bad)
jmp
xor
or
fsubr
mov
popa
icebp
and
sbb
push
jl
out
xchg
fisttp
jmp
mov
jp
clc
mov
pop
or
pop
lahf
pop
sbb
ror
rcr
shl
iret
mov
or
outs
jp
ins
pop
xchg
jo
test
inc
jl
xchg
adc
das
push
test
or
call
test
call
xchg
jecxz
push
cdq
iret
inc
fmul
mov
push
out
xchg
adc
cmp
mov
fiadd
stos
xchg
xchg
and
call
fnstenv
lea
cs
pop
retf
jae
sub
jecxz
inc
adc
xchg
fdiv
mov
inc
jmp
mov
and
push
mov
cmc
hlt
mov
outs
lock
fsub
in
jg
icebp
lahf
iret
stos
pop
retf
mov
(bad)
icebp
push
jnp
je
sub
hlt
jae
add
mov
cmp
(bad)
rcl
movs
xchg
jno
mov
pop
mov
sub
ds
fwait
scas
inc
pop
loopne
shl
mov
push
cld
sub
sbb
inc
sub
stos
sub
mov
mov
and
mov
inc
xor
aad
inc
ret
stos
pop
cmp
mov
lods
sti
cmp
adc
inc
sbb
in
jmp
adc
movs
jno
dec
dec
outs
movs
adc
cmps
sti
ror
rcr
add
test
aam
cld
inc
cmps
adc
bound
into
scas
push
push
in
lock
jmp
inc
push
in
imul
aaa
mov
mov
jmp
test
jnp
push
arpl
jmp
cmp
hlt
icebp
repnz
sub
scas
lahf
push
in
out
loop
sahf
nop
push
xor
jo
jge
or
sub
mov
pop
rcl
cli
or
cmp
mov
xor
mov
sub
inc
mov
movs
fidivr
pop
and
shl
enter
fwait
outs
loop
or
pop
pop
cwde
loopne
mov
dec
jmp
out
mov
fcmovu
inc
cmp
mov
push
xor
aad
dec
lds
adc
push
and
and
dec
xor
int3
push
in
std
retf
xor
xchg
jno
push
pusha
(bad)
mov
mov
mov
cmps
repz
jae
mov
bound
mov
xchg
sbb
xchg
adc
and
rol
cmp
daa
repnz
int3
push
sti
sahf
fst
dec
ins
and
push
sub
dec
(bad)
fnsave
inc
or
out
jg
and
icebp
dec
xor
aaa
mov
ret
je
shl
mov
fdivr
pop
aam
cmp
push
fnsave
dec
adc
lods
xor
inc
arpl
lds
mov
push
adc
les
mov
adc
ds
aam
ins
rol
repnz
push
pop
adc
xor
sbb
ins
ficomp
repz
arpl
or
mov
je
mov
mov
loop
popf
in
xchg
mov
(bad)
int
sti
ja
pop
jge
sub
xchg
sub
sbb
xchg
push
js
ret
je
or
cmp
sub
push
dec
les
inc
ror
inc
dec
dec
js
arpl
adc
and
jbe
mov
fwait
pop
sti
bound
jle
dec
mov
jl
cmps
pop
push
ins
scas
adc
fs
and
fwait
push
dec
test
es
sahf
repz
mov
pop
cmps
or
add
pushf
inc
into
call
lock
fwait
int
mov
loop
hlt
pop
and
outs
sbb
and
ins
xchg
adc
test
out
loop
jl
and
imul
data16
std
xor
ins
sar
fadd
call
lahf
out
xchg
cdq
shl
mov
adc
jle
(bad)
dec
dec
mov
ret
pusha
cdq
inc
clc
ficom
outs
cwde
adc
arpl
xor
pcmpeqd
xchg
sbb
adc
sub
push
dec
dec
imul
scas
mov
push
dec
outs
push
jl
nop
xor
mov
push
loop
cmp
sbb
mov
pop
xchg
aam
add
sub
hlt
dec
mov
int
jge
mov
call
(bad)
xchg
inc
test
pusha
cs
hlt
ss
mov
push
mov
pop
adc
xor
fcom
repz
mov
cwde
fidivr
or
dec
jmp
add
rol
push
outs
adc
mov
mov
(bad)
call
nop
or
adc
cmc
imul
shl
jmp
sbb
aas
or
leave
xor
jl
pop
inc
fiadd
jnp
or
add
jge
leave
sbb
int
jb
adc
inc
je
lods
mov
mov
push
pushf
in
push
leave
std
push
fwait
aad
leave
(bad)
jne
push
xchg
sub
(bad)
mov
xchg
sub
jl
mov
add
das
mov
test
les
mov
ffreep
mov
pop
sbb
movs
stos
mov
fs
(bad)
jae
push
nop
cmp
ins
xchg
or
sbb
cdq
mov
mov
in
dec
fst
arpl
movs
std
jmp
xchg
mov
std
ds
sbb
lods
imul
shl
and
xchg
and
sbb
mov
ror
pushf
repz
mov
aad
(bad)
enter
es
(bad)
sub
loopne
fild
repz
sub
iret
push
out
and
stos
popf
lahf
aad
xchg
dec
ficomp
ja
lods
jmp
jl
jmp
add
adc
xchg
push
call
mov
xor
mov
fcomip
jmp
inc
dec
mov
mov
adc
addr16
mov
sbb
stc
jmp
cmc
jb
push
rcr
loopne
cmp
hlt
int3
jle
sbb
jnp
adc
test
dec
sbb
cmp
cs
int
sahf
add
sahf
icebp
das
or
fdivrp
mov
cmp
pop
adc
test
mov
cmp
sbb
pop
popa
fdiv
push
fcomp
inc
jmp
iret
xchg
lock
cmp
pop
scas
ret
and
jb
fwait
mov
aam
jle
add
jg
test
or
jmp
fisttp
and
(bad)
mov
or
push
leave
sbb
(bad)
cmps
xchg
inc
and
or
scas
dec
or
xor
xchg
loopne
adc
imul
mov
fs
cmp
xor
push
or
test
int3
xchg
sbb
xor
imul
add
rcl
xor
gs
int
xor
xchg
ja
daa
out
and
xchg
jmp
and
inc
dec
arpl
call
xor
jo
icebp
sbb
mov
call
retf
enter
rol
call
jo
add
mov
aas
popa
std
pusha
cmp
fld
xchg
in
loopne
xchg
jmp
call
leave
inc
xchg
dec
dec
lea
mov
fucomp
je
dec
pop
or
movs
sub
mov
pop
out
arpl
mov
out
cdq
and
ins
and
jns
mov
push
jbe
push
lods
dec
and
sub
jp
iret
xor
pop
mov
retf
dec
mov
in
into
mov
cdq
sbb
stos
dec
fcmove
loopne
repnz
add
cmc
sbb
(bad)
jg
into
sbb
add
jmp
add
dec
push
ss
adc
push
pop
mov
mov
movs
cwde
and
int
or
js
ss
xchg
pop
pop
loopne
xchg
and
sbb
or
mov
dec
lods
jl
ja
push
sahf
ficom
sahf
ret
sbb
mov
pop
mov
les
das
in
mov
stc
mov
push
lds
sub
jae
ja
jmp
repnz
jge
xor
cmc
inc
test
mov
jmp
std
add
jg
mov
movs
dec
gs
scas
inc
mov
(bad)
push
int3
and
sub
retf
xor
in
fstp
fidiv
std
leave
das
xchg
push
mov
(bad)
jno
das
out
in
xlat
mov
fistp
mov
sub
int3
in
aas
xchg
imul
pop
jb
dec
icebp
add
cmp
lods
sub
push
pop
mov
(bad)
dec
jbe
mov
mov
imul
cld
push
les
stos
sub
pop
retf
cli
(bad)
push
lea
dec
mov
and
mov
xor
jl
push
jbe
fldcw
inc
dec
and
adc
je
and
mov
mov
dec
ds
cwde
sub
cld
fldenv
cmp
jae
gs
stc
jle
cmp
sbb
pushf
js
jmp
inc
sub
add
xor
mov
fld
mov
test
in
mov
fidiv
pop
fdiv
fld
adc
in
mov
sbb
or
adc
add
jle
fdiv
push
inc
cld
xor
dec
push
fcomp
cvttps2pi
jnp
test
outs
inc
adc
imul
cmc
xchg
test
hlt
push
lods
fisub
dec
(bad)
std
pop
ins
push
test
add
push
das
push
leave
lods
(bad)
mov
call
push
cs
dec
mov
in
loopne
stos
xlat
inc
in
sbb
bound
mov
icebp
pop
inc
mov
jp
cdq
(bad)
push
and
dec
int3
movntq
and
push
push
fnstcw
pop
xlat
inc
lahf
je
add
in
xor
loopne
or
cmps
push
xor
arpl
rep
cdq
ja
lds
inc
pop
(bad)
xchg
repz
push
jo
or
addr16
xchg
inc
clc
inc
inc
cld
and
(bad)
repnz
stos
aam
(bad)
aas
pop
scas
mov
fiadd
rcr
and
sti
ficomp
pop
jno
cmp
cwde
loop
mov
add
lods
in
shl
sub
loope
inc
jge
jns
cs
push
xor
stos
ins
mov
in
jno
jl
push
mov
adc
sbb
mov
adc
cmp
cli
adc
adc
imul
outs
pusha
(bad)
aam
add
outs
jb
adc
es
cmp
and
unpcklps
mov
sub
setl
push
jp
mov
popa
es
pop
enter
xchg
jae
lock
xchg
leave
mov
ficom
or
pop
icebp
mov
cmp
pop
pop
jnp
pop
pop
inc
fidiv
fwait
js
lock
sahf
xor
sar
xor
push
outs
inc
dec
inc
fisub
xlat
outs
pushf
out
xor
mov
cli
mov
inc
fsub
dec
pop
pop
push
rcr
jp
and
lahf
push
push
sbb
stos
add
int3
pop
push
cmps
call
mov
retf
jecxz
in
test
add
and
sar
loopne
dec
loop
fwait
adc
sub
sub
adc
fisttp
(bad)
fcomp
jno
or
jb
push
addr16
out
je
xchg
pushf
dec
sub
fistp
push
fisttp
jno
push
adc
(bad)
cdq
pop
int3
xchg
addr16
xor
sub
adc
sub
sbb
xor
sbb
push
dec
sub
adc
ds
push
(bad)
or
into
shl
not
gs
cmps
and
fcom
cmp
and
mov
outs
or
inc
inc
stc
movs
cwde
out
repnz
out
pushf
scas
mov
hlt
bound
call
dec
loope
shl
sub
je
popa
mov
cmp
frstor
enter
push
cmp
cmc
stos
aaa
lods
stc
dec
xchg
data16
adc
cld
lods
mov
add
cmps
cmps
push
cld
cdq
repz
jne
mov
add
(bad)
js
push
in
or
add
loopne
mov
cmps
xchg
repz
sub
mov
call
cmps
fcomp
sub
dec
mov
int
xor
sbb
je
dec
(bad)
int3
mov
cmp
mov
paddusw
hlt
cmp
ja
lods
jp
(bad)
xchg
jbe
lods
pop
cmp
push
jnp
cmp
loope
jbe
sub
adc
pop
lahf
add
jle
in
sbb
(bad)
cmp
daa
pop
fimul
imul
dec
jg
sbb
fimul
mov
mov
std
lods
ss
rcr
xchg
data16
lahf
seta
add
jae
lods
jnp
stos
inc
es
sbb
addr16
ins
cld
out
aaa
xlat
push
sbb
rol
mov
out
ret
or
fdivr
shr
shr
cmp
xchg
pop
fist
fisttp
mov
in
push
inc
ret
jo
imul
xor
mov
lods
std
adc
div
inc
test
movs
mov
jno
jns
pop
sbb
mov
aad
xchg
lea
out
or
or
mov
adc
ins
sbb
dec
pusha
xchg
loope
scas
lahf
or
into
arpl
pop
mov
loope
dec
jge
sub
jo
enter
and
test
or
push
popf
jmp
scas
cmp
jae
cmp
xchg
xchg
xchg
pop
fadd
fisubr
fidivr
fwait
pop
movs
pop
(bad)
sbb
lahf
scas
stc
cmps
mov
ror
pusha
xor
jl
fyl2x
mov
out
cwde
inc
imul
movs
daa
out
ins
cmp
pop
bound
sahf
or
mov
mov
mov
push
or
dec
push
stos
mov
mov
stos
sub
xchg
popa
jmp
je
mov
fs
in
jbe
adc
jae
mov
inc
or
mov
imul
sbb
pop
out
loopne
jl
call
repz
jmp
jecxz
cmp
(bad)
int3
pop
push
(bad)
shl
xor
icebp
or
mov
rol
fnstsw
sub
mov
xor
cld
sbb
in
mov
push
dec
in
xchg
xchg
sub
sub
adc
call
cmp
pusha
add
scas
jg
cmp
add
sbb
cmp
imul
jo
(bad)
mov
inc
jo
inc
cmp
ret
mov
push
mov
mov
test
es
pushf
adc
mov
jb
mov
adc
adc
xchg
shl
nop
lods
push
clc
call
and
mov
xchg
pop
and
xchg
std
out
mov
sbb
cs
mov
xor
ficom
cmp
enter
dec
jmp
call
leave
(bad)
out
pop
jnp
inc
fidivr
loope
das
in
scas
ret
mul
nop
push
and
test
sbb
out
add
lea
xchg
sub
aad
mov
inc
pop
and
inc
mov
push
pop
add
mov
cmp
nop
push
mov
sahf
lahf
xchg
mov
aas
adc
mov
je
cmp
inc
sub
add
add
cmp
jmp
mov
daa
test
push
xchg
bound
xchg
(bad)
and
push
out
or
xor
sahf
xor
icebp
xor
push
call
xor
pop
int3
dec
test
repnz
out
push
jge
sub
cwde
cmp
jae
(bad)
popa
in
or
test
jo
mov
lea
(bad)
jle
jmp
fwait
inc
xor
push
pop
sbb
pop
in
sub
xchg
fsub
int
sub
jmp
inc
push
dec
iret
fwait
sar
(bad)
lods
test
bound
into
or
dec
mov
rol
mov
mov
push
adc
push
mov
lods
ficom
stos
lea
add
xchg
sbb
dec
xchg
jmp
and
xchg
loopne
sbb
jb
pop
hlt
xor
sbb
(bad)
lods
scas
mov
sar
repnz
sahf
sub
push
sub
frstor
retf
mov
jmp
stos
stc
jnp
lock
add
ins
adc
or
cld
cmp
inc
sub
shr
mov
push
stos
jne
(bad)
retf
shr
sub
loope
or
data16
or
add
in
adc
retf
xchg
dec
scas
in
and
add
lock
cmc
test
jl
adc
jecxz
xor
mov
imul
lahf
mov
dec
and
push
mov
ins
jl
or
dec
and
shl
mov
add
pmaxsw
adc
popa
ret
out
mov
inc
out
xor
icebp
sbb
hlt
rcr
arpl
xor
dec
dec
xchg
jp
sbb
fcom
je
fs
or
fsub
(bad)
loope
arpl
adc
xchg
pshufw
out
cmp
push
mov
mov
lahf
out
fisubr
xor
pop
jg
pushf
or
loope
ret
ret
add
dec
mov
cmc
cmp
inc
int3
add
xor
sub
push
jle
ins
mov
sub
(bad)
das
adc
ds
lock
(bad)
fcmove
lods
push
das
into
jle
leave
aas
outs
add
jmp
sbb
icebp
add
xchg
push
out
ds
loopne
mov
not
mov
sbb
and
dec
dec
sub
xchg
jb
sub
das
stos
aad
iret
out
rcl
rcl
cmp
shr
mov
int
call
icebp
jg
jb
or
jne
xchg
jmp
je
adc
jp
dec
and
jmp
or
mov
jmp
xsha1
cmps
int3
test
je
(bad)
xlat
mov
add
(bad)
out
push
add
dec
jo
xchg
push
mov
dec
repz
(bad)
sbb
pop
(bad)
adc
mov
cs
mov
outs
pushf
pop
adc
mov
scas
jbe
in
fcmovu
pop
and
fsubr
or
iret
push
imul
addr16
lea
outs
jecxz
dec
(bad)
(bad)
sbb
dec
iret
xor
and
lea
or
fdiv
xor
(bad)
dec
xchg
and
pop
inc
jmp
mov
mov
imul
arpl
stos
or
sbb
add
or
jg
pop
into
rcl
sub
mov
jns
pop
test
and
jae
bnd
pop
fisubr
sub
and
loope
call
and
jno
mov
or
push
inc
add
xor
fsub
mov
mov
repnz
mov
sbb
outs
je
dec
(bad)
call
aam
jnp
adc
mov
cwde
outs
dec
sar
and
mov
bound
jns
(bad)
xchg
lods
movs
sub
fild
mov
loope
xor
cmps
stos
dec
jl
mov
jae
dec
jmp
ins
or
into
inc
std
retf
or
jbe
adc
rcr
and
pop
int3
push
add
mov
xor
sub
sub
push
in
sbb
mov
cmp
and
enter
aam
lock
scas
pop
mov
cmp
xor
mov
in
lock
adc
and
cmps
fcom
fsqrt
sub
push
enter
icebp
lds
jnp
fstp
push
nop
add
adc
xlat
push
and
mov
and
(bad)
cwde
sub
inc
rcl
pop
pusha
adc
sub
lock
sti
push
ins
jl
xchg
fisub
jns
ret
mov
movs
popf
data16
shl
pop
xor
adc
fstp
jb
jmp
out
adc
mov
mov
nop
mov
pop
or
pop
jno
mul
test
aas
(bad)
test
mov
(bad)
jo
fst
cmp
jne
loopne
push
lds
ror
(bad)
cmp
fsub
pop
lea
xor
iret
fwait
ja
bound
je
push
in
adc
iret
adc
pop
je
movs
xor
or
push
cmp
add
pop
dec
mov
shl
movs
xchg
call
jp
or
jbe
cld
pop
repz
adc
daa
or
(bad)
cmp
pop
sub
call
mov
scas
(bad)
enter
imul
jmp
push
add
mov
and
clc
mov
and
xor
sbb
push
adc
and
sub
jmp
mov
pop
inc
jbe
ds
std
test
xlat
lea
ret
xor
fs
int3
pop
repz
or
dec
cmps
(bad)
call
pop
jnp
loop
and
jne
xchg
je
adc
xchg
pop
arpl
retf
jp
inc
jae
or
pusha
push
rep
movs
(bad)
or
call
cld
xchg
mov
mov
and
xor
arpl
in
test
and
cmp
push
jo
ins
push
lds
push
test
(bad)
iret
nop
imul
ins
iret
xchg
or
lds
mov
imul
jns
inc
cmp
pop
dec
and
adc
je
test
repz
cmp
or
retf
outs
xchg
jb
rcr
sbb
adc
sbb
out
jecxz
repnz
loop
shr
popa
mov
xchg
push
dec
test
adc
fadd
cmp
xchg
jmp
push
pushf
jmp
jbe
mov
push
pop
fld
cs
mov
push
leave
or
scas
(bad)
xchg
jo
mov
mov
lea
dec
mov
aaa
xchg
sub
and
push
sbb
and
lods
sub
call
adc
aas
into
mov
and
xchg
ret
mov
mov
outs
cs
and
push
out
loope
jle
and
ficom
pushf
cmps
gs
mov
adc
fistp
cli
fnstsw
jl
push
test
mov
pmaxub
mov
and
jbe
ret
inc
jle
popf
xchg
or
xlat
jbe
(bad)
cmps
cmp
outs
inc
push
dec
fsub
dec
adc
sub
or
jmp
pop
sbb
js
jbe
fs
ror
sbb
mov
repz
js
dec
or
and
xor
adc
adc
mov
mov
dec
int
cmc
sub
aam
push
lea
imul
inc
and
out
jbe
xchg
cmc
mov
pop
dec
xor
fadd
cmps
pop
out
cmps
sbb
mov
stc
add
push
pop
pop
stos
scas
cmps
out
dec
sub
jbe
or
jo
dec
xor
pop
mov
pop
xor
dec
ins
push
ret
ret
push
ins
adc
push
test
xchg
inc
lds
sub
not
leave
push
jb
push
cld
data16
jno
pusha
pop
jecxz
xchg
in
cmp
iret
fbld
cdq
cmp
cmp
adc
jmp
or
sub
jge
popa
neg
cmc
popa
(bad)
clc
inc
enter
add
hlt
pop
xor
jae
mov
and
fnsave
outs
fst
xor
mov
adc
mov
or
into
in
int
pop
add
sahf
jno
sbb
test
pop
cli
sub
popf
gs
movs
cmp
mov
nop
stos
fisttp
inc
ds
nop
push
shl
ss
lods
fs
int3
jmp
int
enter
mov
xor
xchg
addr16
je
sub
pop
adc
or
mov
out
cwde
inc
jne
jno
mov
mov
cmps
adc
mov
inc
add
repnz
adc
dec
(bad)
test
xor
sbb
inc
ret
scas
xchg
outs
lahf
jno
aaa
popf
cmc
ja
inc
push
push
pop
fstp
cli
add
js
aam
in
mov
and
mov
fisub
iret
inc
shr
adc
aam
push
pop
loop
and
sub
scas
inc
xor
mov
ja
push
jl
xchg
pop
inc
jl
in
xor
out
and
std
pop
pop
jne
and
pop
stos
jb
cli
jl
into
lods
mov
sahf
stos
or
mov
popf
jns
push
lods
xor
cmps
fisttp
add
pop
dec
movs
bound
pop
(bad)
neg
pop
jbe
test
outs
in
lock
and
sbb
test
repnz
retf
pop
lods
adc
rdtsc
add
mov
cmp
pop
mov
mov
icebp
fs
xchg
cs
outs
xchg
sar
pop
es
or
inc
sub
sar
pop
ds
add
jle
jo
sbb
push
xchg
add
movs
mov
out
pop
test
iret
jne
xor
fwait
fwait
(bad)
sub
adc
dec
sbb
loopne
ins
aad
sbb
add
lds
or
push
add
daa
loopne
cli
jp
push
jg
ss
pop
lea
sbb
cmp
mov
push
loope
pop
and
adc
mov
adc
mov
test
fadd
sbb
pop
mov
lods
addr16
cmp
push
repnz
dec
leave
lds
inc
inc
popa
adc
xchg
inc
or
je
sub
or
xchg
enter
mov
aas
or
ficom
xlat
ds
mov
mov
jl
jbe
jecxz
(bad)
scas
jge
xor
and
or
daa
gs
push
call
repz
push
loop
and
cmp
sub
and
push
out
mov
dec
sahf
adc
pop
inc
enter
pop
outs
adc
mov
mov
and
dec
clc
jmp
les
pop
repz
ja
fistp
jecxz
sbb
jne
pop
cmp
mov
(bad)
and
cmp
pop
mov
idiv
mov
mov
push
jo
mov
push
mov
int
ja
popf
dec
bound
loope
jnp
mov
inc
test
leave
sbb
and
mov
imul
pop
mov
mov
sbb
gs
fnsave
test
adc
hlt
xchg
out
mov
call
add
lahf
(bad)
call
inc
xchg
jmp
jnp
pop
jae
or
jmp
jle
pop
pop
add
dec
test
xchg
loopne
xchg
popa
imul
mov
jb
inc
hlt
dec
ror
push
addr16
mov
xor
mov
lea
cwde
or
jmp
mov
xchg
shr
jne
clc
xchg
mov
adc
add
cwde
or
jns
mov
dec
cmp
movs
gs
cmc
pop
xor
hlt
cmp
jecxz
gs
or
loop
dec
les
inc
aad
retf
retf
jno
jmp
sub
add
je
jp
mov
ja
ds
and
jb
outs
push
mov
adc
or
outs
and
push
loope
aas
nop
lea
adc
jmp
fsub
or
ss
repnz
loopne
mov
pushf
add
pushf
and
(bad)
int3
add
arpl
test
lock
dec
gs
jmp
out
jp
mov
rep
pop
jle
ja
adc
pop
mov
aas
cs
ror
dec
adc
dec
mov
xor
push
add
ror
add
jbe
and
loop
stc
xchg
in
pop
fldenv
mov
mov
xor
aaa
adc
mov
push
mov
or
fstp
fdiv
sbb
cmc
call
in
mov
nop
inc
cmp
imul
pop
dec
adc
cdq
jbe
mov
data16
mov
xlat
adc
push
jge
(bad)
je
mov
fcom
pop
mov
jne
push
ja
lods
leave
mov
fcomp
cmp
stc
add
hlt
dec
pop
inc
inc
in
xchg
cmp
loopne
in
aas
aad
mov
arpl
imul
shl
pop
sub
jle
push
mov
pop
sahf
mov
retf
outs
mov
sub
imul
imul
push
dec
sahf
(bad)
fisubr
push
sub
adc
clc
je
sub
mov
les
dec
adc
or
cmp
or
adc
ins
loope
and
fidivr
xlat
inc
mov
mov
arpl
sbb
cmp
xor
rol
dec
inc
in
inc
(bad)
out
mov
jg
stos
in
xchg
xchg
lea
test
sub
cmp
call
dec
fcomp
shl
lods
std
xchg
test
out
mov
ror
das
hlt
adc
sbb
pop
mov
in
popf
in
ret
add
aaa
aas
lahf
dec
adc
adc
stc
jbe
fnstenv
jmp
sub
jecxz
inc
hlt
cmp
fnstenv
jle
adc
ret
mov
sbb
repz
mov
lods
js
and
call
add
pop
jnp
test
cmc
sbb
movs
cs
out
pop
adc
in
cmp
ret
mov
imul
es
xor
jns
inc
scas
sbb
inc
fnstsw
pop
xchg
adc
mov
mov
test
sbb
repnz
xor
xor
in
stos
imul
sbb
adc
arpl
ret
repnz
sbb
xchg
dec
sub
into
mov
daa
add
jo
sbb
cli
mov
jmp
in
stos
not
lods
fisttp
pushw
push
imul
jnp
stc
xchg
or
or
mov
neg
pop
aam
or
ss
cs
stos
add
jb
jmp
pushf
(bad)
xchg
(bad)
(bad)
jp
imul
hlt
add
imul
cmps
data16
sub
push
rcr
cmps
xor
sbb
jne
out
(bad)
add
pop
mov
loop
lds
ja
push
sbb
xchg
or
xchg
sbb
sahf
inc
pop
push
and
pushf
std
fisubr
push
cmp
scas
mov
jae
mov
jne
sub
add
jp
(bad)
pop
push
hlt
mov
loope
push
jmp
adc
mov
jmp
xlat
push
lods
or
std
add
fwait
xchg
and
xchg
push
aas
xor
sub
imul
cmp
das
jmp
or
add
frstor
shr
mov
inc
(bad)
mov
mov
inc
xor
sahf
xchg
and
aas
push
call
pop
mov
jnp
xchg
inc
mov
xlat
xor
add
les
jnp
outs
(bad)
sbb
xchg
push
mov
sbb
jae
xchg
sbb
xor
je
sub
or
sbb
jno
lea
cmp
leave
dec
rcr
dec
sbb
scas
inc
cvtps2pi
test
push
jmp
pop
inc
inc
dec
sbb
mov
cmp
pop
test
jl
add
in
push
je
ret
sar
sub
in
test
cmc
or
into
cmps
retf
ret
jmp
pop
imul
push
cmp
imul
lea
adc
ret
fistp
pushf
push
jecxz
cwde
sti
(bad)
out
outs
sahf
icebp
and
push
bnd
or
mov
sub
ror
xor
std
cmp
in
hlt
shl
sbb
outs
ret
imul
mov
test
lock
fs
pusha
sbb
rol
mov
dec
stos
pop
ja
jae
cdq
pop
xchg
jnp
pop
or
mov
jle
bound
repnz
arpl
loop
es
add
xchg
adc
jne
lods
cmp
mov
inc
cmp
loopne
adc
jae
(bad)
stc
cs
outs
retf
mov
mov
xor
popa
(bad)
fistp
adc
loope
test
repz
jno
dec
fbld
adc
push
call
inc
or
daa
addr16
jle
cmc
(bad)
jmp
sbb
retf
int3
out
pop
dec
cmc
mov
mov
aas
cmps
and
pop
call
sub
jns
push
idiv
push
daa
sti
dec
adc
ds
adc
fiadd
pop
(bad)
test
or
add
loop
stos
jnp
mov
and
cmp
dec
push
pop
iret
retf
add
xchg
inc
(bad)
and
sbb
jb
push
adc
push
pop
cmp
sub
fwait
jno
repz
xchg
sub
mov
push
adc
inc
fbstp
ret
ins
mov
mov
adc
rcr
dec
push
test
xlat
call
div
xchg
xor
jo
ror
int3
nop
cmp
pop
js
fwait
inc
push
test
rcr
cdq
jne
jo
sbb
jmp
hlt
ret
push
sub
in
cmp
add
cmp
imul
jmp
dec
jmp
cmp
imul
push
das
mov
and
ret
mov
mov
mov
gs
xor
in
jp
or
int3
jmp
fisubr
jg
fdiv
adc
arpl
pop
mov
lods
pusha
fwait
xchg
ja
push
inc
sbb
or
add
or
dec
cmp
into
sti
data16
jp
pop
inc
push
(bad)
fild
mov
call
fiadd
lahf
movs
lahf
(bad)
fwait
pop
sub
fsubr
jb
cmp
mov
jo
repnz
push
cmp
in
ret
ins
mov
mov
mov
push
xlat
std
lods
and
adc
fdivr
mov
fsub
jmp
jae
push
retf
cmp
add
test
pop
push
adc
and
aaa
bound
adc
mov
retf
jo
sub
dec
lahf
fld
out
fnstenv
test
add
adc
(bad)
sub
inc
sub
jno
cmp
push
mov
sub
push
ins
or
push
mov
mov
mov
lds
iret
(bad)
jmp
sub
dec
cmp
mov
(bad)
bound
pop
xor
ins
xor
scas
and
mov
sbb
adc
sub
je
scas
es
adc
je
or
xor
xor
test
aaa
loop
mov
xchg
int3
xor
sbb
add
xchg
fsubrp
test
or
cs
in
hlt
popa
xlat
int
and
out
mov
dec
jo
shl
bound
jno
and
call
sub
in
pop
adc
or
iret
add
xchg
retf
shr
lds
inc
sbb
sub
cdq
push
(bad)
mov
(bad)
jb
icebp
repnz
repnz
push
call
push
(bad)
adc
test
adc
dec
fwait
aad
cmc
mov
xchg
xchg
adc
movs
movs
inc
mov
sgdtd
test
es
xchg
std
addr16
mov
shr
loop
dec
inc
jmp
leave
jb
jbe
mov
mov
push
add
int3
push
retf
sbb
inc
add
mov
lock
mov
(bad)
je
std
jne
or
fsub
jle
sub
out
xchg
es
inc
pop
add
jnp
fcomp
sar
and
pop
mov
dec
add
add
jle
loop
jnp
jp
push
fmul
ret
adc
arpl
xchg
ret
cmp
pop
ret
or
jo
inc
push
sub
dec
dec
bound
dec
pop
(bad)
inc
xchg
lea
adc
push
mov
fldcw
ret
xor
cwde
mov
loop
pop
pop
adc
pop
retf
ins
js
lods
mov
cmp
pop
retf
mov
cmp
into
jg
push
mov
lds
xchg
test
jge
and
inc
into
cs
and
es
and
pusha
cmps
jmp
mov
aaa
or
fstp
jp
cmp
adc
sub
movs
(bad)
and
xchg
xor
leave
(bad)
cmp
mov
push
iret
pop
xchg
sar
push
cmp
jae
pop
sahf
xor
loopne
ficom
xor
sbb
xor
adc
cli
clc
pop
cmp
bound
cmp
dec
loopne
loop
clc
mov
dec
repnz
pop
lods
add
(bad)
cmp
xchg
scas
sub
push
enter
mov
fwait
jmp
pushf
arpl
sbb
popf
stos
ficomp
and
pop
sub
jno
mov
xchg
push
sbb
ret
sbb
inc
les
mov
mov
bound
push
sub
mov
outs
ss
das
add
adc
in
fild
data16
in
or
jge
mov
sub
or
out
out
(bad)
(bad)
je
mov
aaa
adc
ret
scas
xchg
mov
fnstsw
loope
pusha
adc
xchg
mov
rol
inc
jb
xor
in
or
xchg
dec
jp
xor
adc
fcomp
cdq
loopne
inc
sub
xor
loope
jmp
mov
(bad)
retf
mov
cld
lahf
mov
or
jo
vcvttss2si
ins
dec
in
jns
aam
int
push
and
jp
add
cs
sbb
sti
hlt
push
jge
std
dec
xor
call
int
jb
jbe
pop
ret
jecxz
sbb
ins
mov
pop
inc
inc
aaa
pop
push
repz
(bad)
stos
sub
je
add
mov
sti
pop
adc
add
dec
inc
inc
aas
sbb
pop
push
mov
cmps
pop
daa
lea
cmp
retf
sub
fmul
jns
imul
adc
adc
add
inc
test
cli
jbe
pop
ds
addr16
inc
clc
sub
and
mov
or
(bad)
cmp
mov
outs
dec
adc
mov
ret
add
push
jne
pop
push
lock
xor
cmp
inc
mov
out
ins
inc
xchg
test
leave
dec
cmps
cmp
push
fst
push
xchg
mov
cmp
in
or
shl
mov
sbb
(bad)
loope
dec
jbe
cmps
mov
out
sbb
(bad)
aas
sbb
mov
adc
pop
inc
add
pop
jne
fstp
cmovo
add
mov
loop
retf
add
mov
mov
aam
sub
test
pop
sbb
in
cmp
sar
cmps
stc
xor
cdq
enter
dec
inc
mov
sub
mov
cmp
adc
xchg
push
shl
movs
mov
adc
lds
pop
xor
add
sti
xor
mov
test
sbb
sti
popf
fs
sbb
sub
mov
push
ror
test
cmps
sub
mov
cdq
push
fist
ret
pushf
cdq
xchg
dec
test
fcom
push
push
out
sti
adc
jge
inc
clc
iret
xor
dec
mov
adc
outs
stc
(bad)
ja
(bad)
test
cmp
popa
lahf
adc
jg
push
shl
sahf
inc
mov
push
cmp
xor
xchg
ins
mov
pop
ss
cdq
jnp
lea
push
rol
xchg
call
xchg
mov
adc
mov
cmp
mov
and
and
enter
mov
xlat
daa
sbb
ja
and
lahf
repnz
cmp
jle
out
jmp
lods
jecxz
or
rcr
sbb
aaa
ja
test
jmp
je
popa
cmp
sub
cmp
(bad)
sbb
jo
cmps
arpl
aad
jecxz
sub
jnp
ss
jbe
out
ja
dec
pop
dec
sub
mov
test
or
sub
mov
scas
adc
outs
xor
data16
mov
(bad)
stc
pop
imul
leave
push
inc
out
pop
addr16
ds
mov
pop
jne
test
shl
pop
push
jno
in
(bad)
fmul
adc
test
push
xchg
jl
sbb
int
test
test
and
lods
jg
rcr
or
pop
rol
xor
fbstp
int
pop
icebp
retf
lods
es
jmp
adc
cld
push
lods
jmp
dec
jecxz
loope
sar
mov
enter
mov
js
push
fsub
iret
imul
dec
mov
(bad)
jmp
imul
scas
in
lds
pop
inc
scas
sar
(bad)
imul
ins
cmc
jecxz
and
aad
inc
lods
sbb
jb
xchg
icebp
out
lds
xchg
(bad)
sub
jb
push
cld
cmp
adc
lock
sbb
test
fucom
loope
push
pop
lods
imul
or
xor
cmc
outs
fld
shr
mov
inc
int
cmp
adc
cmp
push
int
adc
mov
adc
and
rol
sub
xchg
pop
mov
push
cld
push
jno
addr16
shl
jmp
inc
loope
and
dec
jmp
stos
ins
aaa
pusha
push
call
pop
sub
retf
jmp
lods
das
mov
xor
retf
stc
cmp
(bad)
sar
retf
int
push
test
cld
sahf
cmp
mov
repnz
in
call
aaa
push
hlt
(bad)
jno
cmps
push
lds
vmwrite
xchg
stos
add
divps
ds
xlat
xchg
(bad)
call
iret
rol
jecxz
add
push
xor
mov
and
xlat
cmc
cmp
mov
mov
pop
addr16
add
push
adc
mov
into
push
push
pop
xchg
sbb
cmc
lods
add
sti
loope
cmp
jle
int
rol
jecxz
push
cmps
mov
push
int
mov
in
cli
sbb
mov
lahf
(bad)
fcomp
(bad)
out
mov
mov
fist
jmp
push
inc
mov
test
inc
adc
cmc
sub
jns
les
or
dec
lods
or
loopne
stos
push
ins
cmp
mov
xlat
xchg
nop
test
push
mov
jne
push
mov
push
pop
sub
dec
mov
leave
add
or
in
std
sbb
xchg
pop
add
xor
(bad)
stc
cmps
ins
push
ret
nop
jne
std
ficom
and
sti
lock
add
push
(bad)
movs
xchg
push
test
ins
cdq
sahf
push
pop
dec
les
out
out
mov
lods
or
sub
mov
test
lock
dec
mov
fcmovnb
leave
test
xchg
pop
adc
fadd
nop
xchg
sub
ror
inc
pusha
push
sbb
pusha
popf
xor
inc
shr
cmc
mov
fdiv
push
aad
mov
dec
jg
std
and
and
xchg
mov
push
fsubr
inc
sbb
leave
jge
inc
jp
xor
scas
imul
fcom
(bad)
lods
dec
hlt
ins
cmp
cmc
shr
mov
in
inc
dec
lock
scas
add
ret
sub
stc
bound
add
cli
(bad)
sub
(bad)
cmp
xor
mov
jns
outs
ins
mov
mov
jnp
mov
jecxz
inc
loope
jns
mov
and
xor
jp
or
cmp
iret
push
out
jno
inc
push
outs
clc
or
sub
into
imul
stos
or
and
cmp
pop
dec
adc
pop
xchg
and
sub
xchg
inc
ja
aam
sub
xor
xor
sub
push
fsub
inc
push
mov
jno
push
cwde
xchg
mov
mov
sub
mov
or
ret
lea
cmp
jno
inc
sar
jmp
test
jecxz
mov
adc
pop
xor
fnstcw
rcl
std
sub
adc
sub
sub
cmp
lods
cmp
dec
mov
stos
xor
lea
cs
ja
es
sar
mov
nop
daa
xchg
shr
and
and
test
sar
ror
sbb
dec
fwait
xchg
fdiv
or
push
pop
cmp
push
frstor
fbld
jne
xor
enter
sar
mov
push
stc
add
jns
or
dec
push
or
add
pushf
rcl
pop
pusha
arpl
jl
hlt
jmp
mov
and
outs
mov
(bad)
sbb
cmp
sub
fisttp
adc
and
jecxz
push
mov
stos
popa
mov
sbb
fcmovnbe
call
pushf
mul
ret
in
xor
dec
or
sbb
retf
pop
or
test
inc
les
outs
mov
cmp
or
fwait
mov
adc
icebp
push
(bad)
jp
cwde
lods
jmp
test
js
daa
pop
jbe
cmp
xchg
sub
clc
ja
pop
inc
or
sub
and
in
add
jp
gs
mov
sub
adc
xchg
aam
or
fstp
jmp
outs
lds
sbb
cmp
(bad)
adc
or
ret
and
mov
fstp
(bad)
in
nop
sbb
jmp
outs
mov
pop
push
push
sbb
mov
clc
jno
jg
adc
lock
je
inc
cmp
scas
pop
sbb
dec
cld
adc
lods
lods
add
xchg
shr
sti
push
pop
retf
pusha
inc
mov
ror
sub
cmp
inc
sub
push
(bad)
(bad)
bound
(bad)
ds
sub
sbb
fsubr
jle
iret
daa
cli
clc
test
mov
ja
jle
dec
arpl
mov
dec
popa
adc
aam
movs
out
imul
pop
push
xor
xor
popf
fimul
fs
or
mov
popf
push
pop
lock
sub
(bad)
jge
ret
sub
mov
xor
aaa
ficomp
test
scas
mov
stc
in
bound
icebp
mov
arpl
out
cld
nop
pop
sub
ja
pop
push
jecxz
mov
xchg
mov
les
and
push
es
xor
push
fild
stos
fdivr
mov
mov
push
push
cmc
sbb
int3
add
clc
mov
mov
sub
inc
push
sbb
mov
mov
adc
xchg
sar
xchg
movs
je
cs
inc
lock
inc
int
xor
fisub
lahf
mov
push
and
mov
add
es
jns
or
popf
test
jb
inc
mov
shl
cmps
mov
cmc
and
sub
sub
and
push
push
mov
das
out
adc
xchg
call
jnp
mov
int3
push
mov
cmp
inc
inc
adc
leave
xchg
jecxz
push
aaa
jnp
cmps
(bad)
loopne
xchg
cld
or
adc
inc
rol
enter
push
ficom
cmp
adc
lods
mov
push
jno
mov
xchg
cmps
mov
add
fidivr
es
and
push
pusha
pushf
xchg
push
sbb
jo
push
jae
das
add
adc
jl
xor
cmp
push
pop
pop
push
mov
ss
aad
popf
or
ss
fstp
mov
test
xor
xchg
sti
pop
and
dec
xor
push
(bad)
push
das
shr
mov
inc
cmps
in
fs
xchg
xchg
lock
cmp
sub
std
mov
je
pushf
push
imul
inc
(bad)
loope
into
push
mov
icebp
push
pop
into
add
out
aaa
(bad)
or
dec
shl
mov
call
popa
test
cmps
push
sub
or
mov
xchg
js
sbb
(bad)
into
add
mov
adc
call
fnstcw
daa
inc
mov
rcl
inc
mov
loope
jp
mov
push
adc
xchg
outs
div
inc
fwait
or
pusha
and
fld
js
mov
out
pop
adc
and
adc
mov
stos
cmp
fsub
(bad)
fsubr
mov
pop
add
push
or
es
xor
inc
push
inc
add
in
out
adc
pop
in
mov
idiv
repnz
(bad)
push
cmp
je
mov
in
push
lahf
inc
add
inc
xor
inc
jne
ret
je
call
cmp
bsf
repz
out
call
xlat
mov
dec
jle
scas
xor
sbb
gs
jbe
push
push
jmp
adc
imul
ja
ins
mov
imul
add
les
retf
mov
ret
outs
int3
loopne
sub
in
loope
push
jecxz
pop
mov
cmps
(bad)
jle
sbb
je
xchg
inc
in
mov
pop
push
or
push
daa
or
sub
sub
lea
scas
fcomip
gs
outs
aas
or
adc
sbb
push
and
xchg
movs
xchg
xchg
div
daa
fnstcw
fistp
cmp
test
enter
fdiv
mov
test
std
div
outs
jmp
xlat
je
cmc
mov
ret
pop
icebp
xchg
jb
cmp
mov
xor
jo
and
jne
dec
push
adc
loope
xor
add
arpl
(bad)
out
sub
mov
shl
cwde
mov
mov
cmp
sbb
sbb
cmp
push
jge
inc
mov
aaa
test
sbb
adc
xor
int3
push
push
xlat
mov
(bad)
dec
scas
or
aam
cld
mov
inc
mov
sbb
push
adc
cld
lock
sbb
fs
cwde
xchg
jae
dec
pop
ret
aas
aad
out
sub
and
sbb
enter
jb
cmp
fwait
and
lods
xor
fdivr
stos
idiv
inc
fs
pop
mov
push
popa
inc
adc
push
mov
(bad)
aaa
pop
(bad)
in
jg
xor
in
ret
add
call
cld
pop
test
frstor
add
repz
add
cwde
pop
dec
mov
sbb
shl
or
adc
mov
out
jae
dec
in
adc
test
cmp
aas
or
sbb
jg
mov
mov
xor
xchg
repz
mov
ss
out
call
movs
mov
mov
cdq
std
adc
scas
jmp
stc
ins
jge
pop
lahf
add
mov
mov
xor
imul
sahf
nop
inc
jp
popa
cld
fnstcw
inc
push
cmp
sub
icebp
xor
xchg
xchg
xchg
out
push
fisubr
mov
push
push
mov
cs
scas
jl
jno
les
xchg
mov
jo
mov
push
xchg
popa
mov
lods
ins
mov
xor
cld
iret
mov
sbb
pop
and
sub
and
out
sub
push
pop
ss
add
xchg
sub
mov
sub
stc
int3
cli
pop
in
dec
movs
xor
(bad)
jp
jecxz
xor
arpl
sub
arpl
cwde
das
pop
jl
mov
dec
nop
pop
cmp
cdq
in
mov
mov
repnz
jge
push
jno
ja
ret
fisubr
std
xchg
sti
test
cmp
xchg
mov
in
push
je
and
ins
dec
mov
ret
inc
test
and
xchg
jae
and
xor
loop
jge
into
mov
pop
into
and
dec
das
mov
jns
sub
xor
stos
out
push
jge
aas
jb
adc
es
mov
addr16
add
cmps
or
stos
rol
stos
stos
(bad)
cmp
loopne
leave
cmp
enter
sub
mov
call
and
mov
in
jno
retf
sahf
rcr
jecxz
mov
retf
inc
sti
sbb
mov
mov
mov
je
and
sbb
outs
(bad)
pop
aas
mov
cmp
cmc
movs
outs
enter
cmp
sbb
sub
xchg
test
cld
or
add
jnp
cmp
mov
push
lahf
jns
mov
jae
push
call
xchg
stos
inc
pop
xchg
xchg
in
cmp
inc
andnps
(bad)
mov
sbb
and
(bad)
pop
inc
xchg
idiv
popa
jecxz
add
xchg
enter
or
scas
daa
jecxz
stos
fst
loop
sub
cmp
jle
push
push
pop
arpl
ins
inc
push
je
stos
push
xchg
rcl
xchg
fwait
bound
cmp
mov
nop
movs
xor
sbb
(bad)
mov
or
jl
pop
retf
call
and
ins
fidivr
mov
(bad)
sbb
push
add
ins
nop
pop
xor
xchg
aaa
imul
inc
pop
xor
and
adc
pop
rol
jne
pop
cmp
cmc
cmp
push
xchg
js
daa
call
es
mov
jb
movs
outs
sbb
std
retf
mov
pop
sub
mov
sbb
xchg
cdq
hlt
xchg
or
sbb
sub
fcom
mov
xchg
dec
mov
cmp
or
adc
cld
cli
xchg
push
test
pop
xchg
sub
jo
add
daa
push
jecxz
xor
sbb
and
pop
pop
fidivr
pop
mov
xchg
mov
add
repnz
or
push
mov
repnz
pop
jge
test
ret
add
and
cmps
or
mov
les
xor
test
ret
dec
xor
mov
mov
sahf
add
mov
mov
pop
push
test
pop
xor
adc
xchg
mul
int
mov
xor
lahf
xor
sub
jmp
jo
nop
or
jl
test
and
and
leave
sub
pop
or
cmp
inc
cli
dec
sbb
xor
cmp
sub
sbb
adc
leave
mov
mov
ja
pop
sub
imul
jl
fnstenv
lods
dec
sub
cld
cmp
fild
mov
cli
test
(bad)
sub
dec
enter
sbb
stc
aas
xchg
cmp
xor
aas
movs
xor
loope
adc
call
mov
sti
fld
cmp
dec
enter
adc
data16
mov
add
out
ins
(bad)
outs
arpl
fs
xor
int3
inc
and
fst
or
sub
inc
cs
ins
in
dec
or
es
xor
cmc
cwde
arpl
jmp
in
mov
xchg
(bad)
adc
mov
fisubr
jbe
mov
pop
fmul
and
lods
shl
add
arpl
add
movs
xor
inc
jne
push
add
pop
jae
or
inc
mov
mov
das
loopne
push
mov
pop
bnd
xor
loop
sbb
pusha
dec
cmp
inc
pusha
arpl
inc
lea
dec
jp
inc
mov
cwde
pop
movs
out
inc
cmc
adc
push
hlt
pop
cli
lahf
loopne
xor
adc
and
movs
mov
fs
cmps
and
xchg
mov
pop
fild
jge
cs
(bad)
cli
out
sub
(bad)
ret
jmp
inc
dec
mov
inc
fwait
hlt
push
jmp
mov
pop
xchg
push
sub
cmp
push
popf
pop
pushf
pop
idiv
(bad)
cmp
xor
push
mov
ficom
mov
stos
sub
ins
ja
add
mov
add
(bad)
pushf
aaa
sub
(bad)
lods
les
mov
out
push
mov
retf
test
and
lea
sbb
jno
movs
(bad)
aad
movs
jg
je
mov
add
xchg
ins
daa
mov
pop
ins
fcmovbe
into
(bad)
test
push
inc
sti
pop
aas
dec
mov
sbb
shl
pop
jmp
xchg
xchg
mov
cmp
jne
sub
ja
push
sub
cmovge
pop
adc
ds
icebp
pusha
xchg
movs
cmp
xlat
enter
shr
add
dec
mov
mov
pop
enter
(bad)
das
fdivp
lock
mov
xor
stos
retf
pop
call
pop
out
loopne
pop
popa
and
add
mov
cli
clc
popa
fwait
imul
stc
adc
cmp
xchg
cwde
(bad)
into
jnp
inc
mov
fidiv
shl
ror
iret
ficom
aad
bound
dec
inc
adc
sub
fisttp
jl
hlt
push
adc
bound
iret
fsubr
and
rol
in
fwait
nop
sbb
cmp
add
adc
cmp
pop
push
sbb
ss
imul
(bad)
in
mov
ins
enter
pop
jb
arpl
int3
cdq
push
mov
add
add
mov
pop
xor
add
dec
fld
cmp
xor
rcl
pop
xor
cmp
cmps
mov
lods
stos
fstp
std
dec
push
shl
xor
sbb
outs
loop
dec
movs
push
aad
push
inc
cdq
pop
push
push
sub
movs
jle
fwait
add
setge
jmp
mul
icebp
push
pop
or
jp
retf
gs
movs
iret
add
cmc
and
iret
lea
inc
mov
cmp
xchg
mov
out
mov
mov
fnstcw
stos
jbe
sti
mov
mov
sbb
or
jp
sbb
dec
cmp
inc
push
shl
sub
add
mov
cmp
aaa
xor
les
cmps
push
xchg
mov
xchg
das
jp
mov
add
movs
in
mov
pop
push
jns
bsf
ret
jo
adc
dec
and
retf
std
pop
add
pushf
xchg
stos
cmc
mov
rep
pop
inc
xor
adc
push
inc
mov
lods
sbb
cmp
ins
pop
imul
push
sub
inc
push
das
test
sti
push
int
cs
xor
adc
retf
mov
inc
mov
xchg
test
hlt
cmc
jnp
mov
sbb
jae
int
sub
cmp
retf
jnp
lods
mov
push
add
dec
mov
add
sbb
leave
mov
das
cmp
dec
fsubr
nop
int
pop
pop
cmps
and
push
cmc
and
out
cmovle
into
out
mov
pushf
xor
jnp
inc
xor
mov
sbb
mov
retf
push
dec
jge
add
mov
push
xor
inc
cmc
push
inc
fnstsw
ret
inc
dec
dec
ds
imul
out
jle
xor
and
in
lahf
sbb
test
sahf
cld
mov
fs
add
mov
repnz
retf
mov
into
dec
mov
push
inc
out
jmp
pusha
div
inc
adc
ret
stos
cmps
repz
xor
aad
sub
nop
inc
push
loopne
test
xchg
push
daa
aad
nop
scas
cwde
cli
lds
stos
cmp
sbb
cmps
arpl
(bad)
rcl
repnz
push
neg
aaa
mov
sub
shl
icebp
xchg
out
hlt
pusha
sub
mov
jnp
(bad)
mov
jle
mov
mov
xor
mov
adc
out
sbb
fmul
xchg
jae
dec
aad
mov
xchg
mov
mov
stos
mov
mov
test
xor
je
cli
out
aas
xchg
adc
popf
push
int3
imul
pop
jp
mov
push
ja
jno
jl
jmp
aaa
fnsave
pop
stc
mov
arpl
push
jmp
jle
mov
sub
pusha
mov
stc
aam
mov
sub
push
add
xchg
add
sbb
xchg
xchg
push
mov
or
mov
mov
or
adc
cmp
mov
pop
sub
je
xor
mov
push
mov
or
sub
cli
xor
fcom
xchg
call
push
mov
mov
sbb
adc
cli
push
push
cmp
push
cmp
movs
pop
and
sbb
jmp
push
pop
xchg
bound
pop
cli
xchg
mov
xchg
adc
xchg
test
inc
dec
mov
cmp
dec
jle
jae
icebp
jne
inc
or
xchg
fisubr
jne
xchg
mov
lods
push
in
imul
lahf
inc
ins
mov
pop
call
sti
in
xor
xchg
and
ss
leave
add
call
xor
jnp
jl
cld
add
out
push
arpl
push
(bad)
dec
jo
ss
xchg
scas
mov
das
xchg
inc
ins
out
mov
sub
(bad)
adc
das
ins
pop
sub
or
mov
hlt
pusha
push
xor
inc
dec
stos
mov
mov
dec
iret
jb
or
xchg
inc
mov
and
stc
sub
inc
mov
add
js
imul
gs
iret
mov
js
mov
test
or
cwde
repnz
jg
jmp
xchg
lods
dec
ret
xchg
inc
adc
stos
cmc
add
jbe
mov
test
lock
lock
sbb
adc
stc
mov
dec
fild
shl
rcr
xor
xor
cs
xchg
or
push
mov
pop
mov
cmp
retf
inc
mov
sbb
adc
inc
xchg
push
cmps
push
jecxz
sub
xor
jnp
or
sbb
ret
js
inc
mov
sar
xchg
jmp
test
sti
jmp
adc
sbb
test
retf
sub
out
movs
(bad)
ss
loop
sub
jne
test
mov
mov
or
mov
mov
hlt
xor
fisubr
(bad)
lock
fwait
jo
out
test
xor
ds
sub
xor
jle
and
mov
inc
jne
enter
fcmovu
jno
dec
mov
push
or
mov
into
popf
and
sbb
xor
pusha
movs
mov
movs
xor
fsubr
push
xchg
imul
shl
out
fimul
clc
mov
fstp
dec
push
aad
fs
(bad)
int3
and
fsubrp
and
ret
cmp
aas
cmp
ja
jge
call
icebp
push
jmp
out
xchg
pop
jmp
jmp
lods
sub
xor
mov
imul
inc
sub
dec
or
call
ror
(bad)
push
mov
mov
fcom
adc
push
push
aaa
xchg
ror
inc
pop
mov
add
jle
retf
xchg
sbb
mov
sub
enter
dec
or
mov
mov
addr16
cmp
loopne
dec
loop
add
mov
inc
adc
enter
push
sbb
ret
repz
mov
mov
and
scas
(bad)
push
jge
stos
mov
retf
data16
jecxz
pop
and
popf
and
out
sbb
or
adc
call
mov
cmp
mov
sbb
imul
sbb
aam
cmp
dec
pop
fwait
data16
adc
add
std
int3
add
jno
loopne
movs
xchg
sbb
popa
mov
mov
fwait
and
(bad)
jb
rcr
ds
imul
aaa
shl
pop
dec
mov
dec
stc
dec
fadd
push
dec
inc
inc
inc
and
fiadd
fiadd
add
cmp
test
xchg
dec
jae
cmps
imul
pop
xor
xchg
fldenv
cmp
out
push
push
stos
pop
sub
push
call
xchg
jle
(bad)
ss
dec
popf
pop
pop
jg
add
pusha
or
(bad)
jmp
dec
repnz
xor
lea
pop
pop
mov
cs
mov
push
mov
adc
mov
or
scas
or
push
fwait
jmp
jg
or
ins
test
push
cmp
mov
mov
sti
xchg
push
icebp
cmp
pop
fld
add
fild
inc
rol
cmp
fisubr
scas
xor
aad
pushf
adc
dec
ror
inc
cli
aaa
imul
cmps
sahf
rcl
xor
(bad)
in
and
movs
mov
push
add
inc
xchg
jae
jo
mov
add
push
fcomp
dec
adc
rcl
push
pop
scas
add
mov
jl
rcl
lods
(bad)
outs
popf
loop
mov
inc
or
push
scas
or
(bad)
test
xchg
stos
addr16
xor
mov
pushf
shl
jle
popf
pop
les
and
ror
or
mov
int3
aas
test
push
call
adc
and
cmp
mov
loop
pushf
xor
mov
and
nop
(bad)
repnz
mov
mov
shr
in
mov
mov
xchg
ins
stos
add
movs
outs
pop
dec
stc
das
dec
inc
sbb
icebp
psubb
sub
push
icebp
mov
inc
jl
inc
cli
jbe
adc
inc
jp
and
push
jo
(bad)
ror
push
pop
pusha
mov
cdq
stc
mov
and
shl
push
stos
ds
pop
jg
pop
pop
leave
int
daa
jp
cdq
dec
cmp
sub
dec
in
push
mov
mov
xchg
test
pop
(bad)
jbe
dec
in
and
pushf
outs
jecxz
loope
xor
retf
cdq
mov
adc
(bad)
cdq
fs
push
adc
xchg
out
mov
inc
add
or
jae
(bad)
mov
cmp
out
pop
sub
inc
cmps
inc
cmps
jne
mov
lahf
push
or
ds
je
call
xchg
into
mov
popa
dec
xchg
xor
nop
test
jl
push
jb
js
(bad)
sub
scas
jmp
(bad)
adc
dec
aas
lods
in
repz
push
xlat
cs
mov
jmp
out
mov
adc
mov
jae
lods
fwait
shl
add
sbb
pop
push
cmp
test
inc
test
ins
mov
xor
gs
mov
(bad)
push
adc
adc
dec
adc
retf
imul
stos
stc
rcl
je
aam
push
sub
ja
pusha
ins
dec
mov
push
or
mov
retf
cmps
pushf
(bad)
mov
jecxz
pop
adc
jmp
aas
jae
jo
pop
mov
test
cmp
outs
std
repnz
popf
push
mov
jb
mul
das
int3
addr16
add
retfw
test
icebp
sbb
addr16
push
push
cmps
push
mov
push
les
pop
mov
das
lea
adc
jns
xchg
lahf
mov
mov
cwde
int3
in
loopne
jle
lods
leave
xor
loop
dec
loopne
ins
mov
mov
cld
jbe
je
gs
sbb
push
inc
mov
push
push
jge
aam
out
sub
out
inc
mov
lahf
add
cmp
sub
xor
add
or
sbb
jbe
pusha
inc
iret
fisttp
inc
fwait
dec
test
popf
cld
hlt
call
cmp
mov
mov
or
stc
sbb
sahf
xor
push
dec
repz
sub
jb
push
shl
out
addr16
ja
call
add
fyl2xp1
jbe
dec
jg
mov
test
gs
scas
data16
mov
jno
(bad)
mov
jnp
cmp
repnz
xlat
cmp
sbb
retf
or
movs
aam
fadd
cmp
loope
dec
aam
scas
or
mov
adc
inc
mov
repz
and
or
test
loop
ficomp
dec
ins
sub
cli
lock
dec
out
lea
xchg
or
cld
jae
clc
mov
mov
jno
pop
shl
mov
sub
test
hlt
fld
sbb
mov
and
cmc
push
and
mov
lods
mov
add
cwde
or
adc
cld
inc
inc
jb
inc
out
shl
(bad)
mov
mov
mov
loopne
add
dec
rcl
jmp
not
clc
imul
fsub
movs
sbb
add
imul
mov
jp
pop
or
xchg
pop
xchg
mov
fild
imul
xor
cmp
in
inc
adc
and
cmp
mov
inc
jecxz
add
in
xchg
cld
sub
je
jnp
in
inc
out
inc
shr
in
inc
or
imul
loopne
push
dec
pop
xchg
dec
xchg
fst
scas
pusha
loopne
push
mov
lods
data16
cs
iret
push
stc
jns
xchg
inc
push
xchg
aaa
aam
jp
mov
and
or
sbb
mov
leave
outs
dec
enter
cmp
scas
loope
or
push
jns
pop
push
pop
mov
(bad)
ja
cmp
loopne
repnz
loope
pop
lods
inc
add
xchg
jne
and
sbb
(bad)
mov
lea
xlat
fwait
in
mov
and
loopne
cmc
mov
enter
sub
les
test
sub
clc
aam
cld
push
cmp
push
adc
mov
xor
in
or
sub
jl
aad
pop
test
add
fmul
sbb
ss
push
aas
scas
jmp
push
int
ja
test
mov
dec
mov
xor
and
push
adc
mov
mov
pop
ins
scas
sub
call
mov
inc
sti
mov
ds
push
addr16
jno
mov
add
add
push
repz
push
mov
push
mov
sahf
mov
mov
and
repz
mov
pop
mov
mov
and
retf
dec
enter
add
aas
inc
shr
mov
imul
test
inc
(bad)
add
int3
std
mov
lea
out
push
arpl
or
loope
push
(bad)
loopne
jb
cmp
sub
pop
mov
xchg
pop
sub
push
push
(bad)
xor
in
xchg
lods
test
shr
mov
mov
inc
stos
mov
into
push
xchg
and
xlat
mov
int3
mov
pop
cmp
jnp
sub
and
stos
jae
in
sub
or
mov
dec
movs
jp
gs
add
loope
mov
fmul
jp
out
xor
lock
inc
or
gs
std
mov
fldenv
mov
mov
sub
popa
mov
sub
test
jne
jmp
clc
pop
jbe
xor
xor
out
sub
rcl
jl
repnz
sub
jge
in
pop
shl
test
outs
pop
and
je
sub
movs
cdq
xor
dec
je
(bad)
fdivr
dec
jg
jno
stc
cmp
xchg
adc
pop
imul
cmp
retf
cmp
pop
jg
mov
fistp
push
imul
fldenv
cld
sbb
daa
mov
test
imul
xlat
movs
hlt
fsub
ins
inc
ins
dec
inc
les
ins
push
pop
fisubr
push
popa
adc
push
xor
mov
mov
call
call
int
xcrypt-ofb
cmps
jmp
or
push
and
aad
lods
adc
jge
xchg
and
scas
or
sub
push
loop
mov
push
imul
cmp
int3
jp
xlat
mov
dec
rcl
lds
(bad)
icebp
add
mov
pop
push
ficomp
pop
arpl
aad
pop
test
adc
fdiv
aad
mov
ret
fbld
cdq
push
mov
inc
pushf
retf
fwait
dec
shr
stc
mov
mov
or
lea
or
sbb
into
pop
inc
int3
pop
mov
add
popa
sar
test
fnstcw
mov
mov
clc
loop
data16
and
sub
cli
cs
sub
sub
adc
cld
xchg
out
push
cmps
dec
adc
ficomp
push
cdq
xor
sub
jl
nop
jo
aaa
push
out
sub
add
adc
cmps
leave
pusha
ret
dec
popa
jmp
push
je
or
mov
dec
pop
ret
rcr
xchg
xchg
jbe
xchg
mov
dec
or
retf
xchg
mov
mov
pop
add
shl
push
outs
mov
retf
shl
(bad)
pusha
push
fnstenv
lahf
fnstsw
adc
pop
data16
dec
mov
or
je
cmp
int
leave
add
mov
inc
test
jae
not
hlt
sbb
or
call
retf
sbb
scas
mov
push
outs
and
mov
xor
adc
push
test
movs
sub
jl
and
fst
ret
or
add
test
mov
push
ret
sbb
fldpi
retw
adc
stos
fcomp
cmp
scas
sbb
xchg
les
data16
loop
cdq
mov
mov
test
add
iret
inc
inc
mov
inc
fcomp
sub
dec
cs
push
or
mov
and
cmp
sbb
popf
test
cmp
pop
inc
ds
mov
cmps
sahf
xor
pop
enter
mov
loop
retf
rol
clc
sbb
push
adc
sub
sar
aad
dec
adc
retf
dec
xor
int
xchg
xchg
rcr
cs
inc
xor
mov
cmp
loope
dec
(bad)
push
aas
sbb
cmp
ins
retf
push
fdiv
les
cmp
mov
push
push
clc
call
fild
daa
fstp
add
pushf
cmp
inc
inc
loopne
jnp
xchg
pop
add
mov
xchg
aas
dec
push
push
inc
dec
enter
aas
mov
int
fcom
cli
push
(bad)
std
stos
dec
pop
mov
xchg
cs
xlat
outs
sti
(bad)
dec
or
mov
add
adc
movs
mov
xlat
mov
jb
stos
xor
or
(bad)
shl
out
push
ss
jb
into
scas
in
stc
ret
push
dec
add
test
mov
pop
xlat
iret
mov
jmp
imul
in
in
in
loope
sbb
xor
shl
jae
int3
and
mov
das
stos
jg
shl
sub
cmp
jmp
stos
jmp
jle
dec
cs
and
rol
add
cmp
fadd
sub
stos
arpl
jns
push
pop
or
or
adc
cwde
retf
loope
mov
sbb
jno
adc
jmp
xor
dec
and
ror
or
test
push
test
sti
dec
dec
(bad)
xchg
retf
sub
dec
ror
add
ret
mov
mov
ret
cmc
sbb
in
and
sbb
das
test
leave
clc
mov
dec
cs
cld
test
xchg
mov
xchg
cmp
aas
hlt
push
out
add
mov
lea
push
icebp
enter
jl
adc
sti
pop
leave
popa
inc
mov
mov
dec
inc
adc
pop
sbb
mov
mov
sub
je
sub
mov
xchg
imul
or
outs
add
xor
xchg
es
mov
lods
mul
and
jp
stc
inc
mov
jnp
mov
rcl
js
shl
cmp
adc
test
fwait
mov
mov
pop
dec
sub
aad
adc
pop
xchg
pop
sub
jl
inc
cli
loope
cmp
into
fcmovne
adc
and
cmp
je
mov
xlat
sbb
cmps
add
sub
dec
and
jns
push
jl
pushf
push
or
jb
jmp
jmp
inc
cmp
test
xchg
in
mov
fbstp
xor
call
xor
cmp
adc
fist
and
loopne
sbb
ror
mov
(bad)
(bad)
xchg
xchg
xchg
pushf
aaa
pop
jno
mov
push
adc
jmp
inc
out
xchg
rcr
mov
pop
repnz
dec
jne
add
movs
cmp
cmps
ds
mov
mov
mov
jle
dec
or
mov
cdq
or
scas
inc
stos
scas
sbb
inc
xchg
in
cmp
jg
les
mov
push
lea
sub
dec
xor
data16
fs
push
sub
xor
and
ret
pop
jmp
in
icebp
sbb
jecxz
pop
mov
fld
lock
push
mov
push
scas
sbb
pop
repnz
pop
push
dec
and
ror
test
push
and
js
mov
(bad)
fnsave
call
inc
dec
mov
pushf
ds
inc
loop
mov
add
mov
jl
imul
rol
xor
aas
mov
adc
lock
popa
jl
retf
cld
or
adc
popf
cvtps2pi
ss
outs
sub
test
ins
(bad)
sub
inc
or
into
shl
imul
adc
or
in
imul
mov
shl
aad
imul
sahf
jg
mov
stos
addr16
(bad)
xor
and
cwde
dec
sbb
outs
and
sub
fwait
scas
(bad)
shl
call
popa
mov
mov
dec
in
into
(bad)
neg
ret
jl
std
in
nop
inc
nop
call
clc
loopne
mov
pop
mov
dec
loop
cmp
(bad)
jno
dec
je
inc
fs
adc
pop
cmps
pushf
int3
jmp
fld
stos
dec
daa
xchg
pop
xchg
pop
pop
mov
cmps
push
fistp
idiv
xchg
neg
test
mov
ret
push
sbb
sub
mov
ret
adc
ror
popf
and
test
ficomp
push
fisubr
js
sbb
sti
ja
stos
add
push
jp
fiadd
ficomp
sub
sbb
jno
sbb
je
lods
jno
mov
push
add
cmp
inc
jno
rol
hlt
add
cmp
cs
xchg
mov
stos
push
pop
outs
and
xor
and
dec
rol
push
xchg
outs
inc
add
and
mov
cs
and
outs
xor
call
imul
js
inc
add
pop
xchg
pop
add
adc
jo
pop
movs
xchg
ret
jbe
sub
js
sbb
pop
add
and
cld
xor
shl
shr
add
mov
adc
aas
scas
sub
daa
imul
hlt
sahf
aad
ss
dec
dec
retf
scas
je
rcr
in
fcomp
enter
xchg
or
push
pop
lea
inc
xchg
imul
fs
ja
fdivr
dec
inc
loope
or
inc
les
cmp
mov
jg
mov
push
and
or
xchg
std
stos
into
dec
ss
sbb
stos
jae
push
push
(bad)
jae
and
dec
repnz
or
scas
imul
pop
jne
sti
pushf
and
add
mov
mov
ret
(bad)
aad
int
mov
push
cwde
cmps
les
aad
sbb
addr16
imul
ja
mul
mov
xchg
mov
rol
fist
and
sahf
loop
mov
sahf
ja
icebp
jmp
adc
ret
scas
jg
rol
xor
inc
test
pop
push
out
inc
xchg
jecxz
xor
xchg
pop
mov
int3
loopne
mov
call
ror
mov
mov
out
xor
xchg
mov
push
mov
push
lahf
inc
mov
xchg
daa
and
add
dec
dec
iret
outs
pop
repnz
or
(bad)
mov
sbb
push
mov
jle
push
imul
or
enter
xchg
or
push
inc
xor
stos
(bad)
pop
movs
sub
mov
sbb
sbb
sbb
out
or
push
in
pop
pop
repnz
out
jo
jge
cmps
icebp
pop
movs
bound
(bad)
pop
out
es
xor
je
inc
js
icebp
imul
and
mov
inc
leave
mov
mov
and
leave
sbb
sbb
add
mov
or
ins
and
test
mov
cdq
loope
inc
pop
sub
fsubr
push
stc
les
loopne
add
f2xm1
dec
dec
aas
push
fwait
mov
shr
in
inc
and
popf
xor
rcl
and
test
arpl
mov
fwait
jmp
mov
cmps
mov
in
call
push
les
fadd
test
(bad)
in
add
sbb
push
test
lahf
retf
out
xlat
mov
ror
inc
dec
mov
inc
xor
and
or
out
repnz
out
sbb
pop
outs
push
in
xor
sbb
fs
push
in
add
mov
mov
icebp
bound
sub
ret
sbb
mov
lahf
mov
std
push
push
jmp
enter
push
mov
push
dec
push
jo
jge
xor
sub
daa
and
cmp
pushf
mov
out
mov
in
or
mov
hlt
push
stos
xchg
or
imul
add
xchg
out
pusha
xor
xchg
cmp
int3
lods
or
xor
adc
les
ja
sbb
repnz
sbb
scas
jno
or
push
pop
jp
inc
(bad)
out
repz
push
push
add
jns
xchg
push
jge
in
js
xor
sub
inc
ss
clc
pop
out
xchg
push
in
pusha
push
inc
outs
or
cmp
test
retf
jbe
xchg
pop
and
add
mov
inc
sbb
fsubr
xor
lods
ror
clc
add
es
(bad)
xchg
nop
dec
pushf
mov
mov
aam
js
ja
into
adc
jmp
mov
and
pop
loop
xchg
cmc
sub
mov
sbb
iret
in
mov
mov
xor
mov
cmp
sub
jne
loopne
sahf
jns
inc
shr
jle
xchg
cmps
mov
pop
mov
sbb
call
out
hlt
lea
xor
pop
out
or
repnz
movs
cmps
pop
sub
movs
stos
add
stos
enter
jle
bound
inc
ja
fsubr
in
jo
mov
or
(bad)
loope
movs
add
(bad)
lds
add
and
xor
cmp
daa
push
adc
and
fs
dec
adc
(bad)
in
ss
inc
mov
fndisi(8087
pop
rcl
xchg
inc
hlt
pop
pop
stos
and
dec
(bad)
cmc
ror
(bad)
jl
add
out
lahf
or
pusha
sbb
pop
pop
call
add
shl
scas
push
ja
and
dec
sti
jo
addr16
sub
scas
pop
and
popf
mov
ja
cs
test
retf
nop
pop
or
push
addr16
ja
mov
sar
push
ds
retf
(bad)
pop
lods
sbb
iret
ins
das
int3
cmp
push
scas
jno
mov
(bad)
jnp
stos
rol
cs
fwait
stos
and
mov
out
pop
push
(bad)
xor
cwd
add
dec
popa
cmps
clc
sbb
cmp
jge
jge
adc
ror
adc
in
test
mov
jae
scas
fcom
enter
cdq
jo
out
and
enter
jnp
clc
xchg
and
xchg
jl
sar
ret
icebp
movs
mov
stos
jl
in
fwait
daa
cmp
dec
test
inc
sub
sbb
neg
(bad)
mov
inc
out
test
repz
or
fistp
jno
adc
sbb
sbb
add
outs
push
jmp
(bad)
sub
dec
jae
outs
adc
push
inc
pop
ds
retf
idiv
in
stos
(bad)
(bad)
cmp
aas
cmp
pop
sti
ret
test
rol
xor
push
mov
cmp
xor
(bad)
mov
je
jbe
es
jne
in
sbb
icebp
mov
js
adc
cmp
ds
movs
mov
adc
icebp
outs
jg
adc
call
dec
pop
(bad)
cld
pop
mov
outs
and
sub
addr16
aas
fisttp
pop
mov
scas
pop
std
xchg
sbb
call
retf
scas
mov
data16
add
jae
xor
adc
sahf
jne
aam
std
ficom
out
push
nop
cmc
leave
push
xchg
add
pop
outs
and
mov
adc
mov
fwait
in
retf
xchg
les
add
inc
cmp
pusha
mov
pop
cli
dec
xchg
dec
push
xchg
aas
repz
jnp
mov
jmp
fmul
push
sub
cwde
pop
sub
jmp
enter
xchg
gs
mov
xor
scas
rcl
push
fistp
pushf
inc
pushf
retf
movs
jb
mov
aas
out
call
pushf
popf
mov
cmp
in
fisubr
and
nop
sub
mov
fnsave
xor
fwait
push
push
sbb
loop
or
pop
into
or
dec
push
and
icebp
push
or
(bad)
dec
(bad)
int
xor
cmp
pop
ficomp
add
loopne
inc
jl
and
add
or
push
fsubr
xor
push
pop
pop
push
adc
pop
dec
xchg
or
jmp
pop
repnz
dec
xor
and
int3
xchg
fprem
push
jmp
es
fiadd
jmp
push
sbb
dec
(bad)
in
sub
push
sbb
enter
sar
(bad)
hlt
adc
(bad)
pop
mov
mov
(bad)
inc
push
(bad)
push
imul
mov
out
sar
pop
pop
add
(bad)
xlat
push
inc
shl
fisubr
jl
call
xlat
lahf
jnp
cmp
mov
cmc
xchg
adc
or
or
push
mov
scas
ret
outs
inc
sub
dec
ins
aam
or
inc
bound
xor
inc
xor
loop
pop
aas
add
dec
xchg
movs
in
lock
out
out
sbb
aaa
addr16
out
xor
xchg
jmp
and
pop
xor
mov
adc
lea
addr16
jmpw
jns
call
mov
out
dec
test
sub
adc
aaa
mov
(bad)
push
push
sub
pop
jns
test
or
xor
cmp
leave
dec
jmp
daa
dec
mov
xlat
xor
jecxz
js
mov
(bad)
inc
cs
dec
push
fcomp
add
mov
add
cmp
movs
pop
cmp
adc
push
or
push
push
mov
mov
jmp
mov
add
ror
sub
ds
dec
jne
push
cmp
ds
inc
jno
sub
push
xchg
jmp
inc
and
jns
stos
sbb
or
stc
lock
std
xchg
adc
bound
fidivr
ror
loope
dec
cdq
or
leave
pusha
addr16
jnp
sar
leave
pop
push
in
xchg
imul
lahf
or
pop
fisubr
out
adc
test
xchg
pop
loope
jo
dec
fidivr
fist
push
sbb
pop
rol
les
xlat
hlt
(bad)
sbb
sbb
in
call
mov
call
lea
outs
retf
cmps
icebp
and
xchg
sub
mov
cwde
jmp
jbe
add
mov
clc
jno
mov
jmp
add
ja
(bad)
out
xlat
mov
adc
stos
inc
jnp
mov
loope
in
push
mov
sbb
xchg
pop
mov
jle
or
leave
inc
adc
es
pop
fbstp
mov
or
jmp
pop
cwde
sar
lss
sbb
neg
pusha
or
int3
cmp
(bad)
pop
xor
test
jno
xchg
add
cmp
pop
ins
cmps
mov
fcomp
dec
fwait
push
daa
js
xchg
out
pop
sbb
jl
out
mov
xchg
adc
rcr
sti
push
(bad)
into
xchg
ja
dec
mov
sbb
sahf
sti
leave
sub
scas
es
pop
sub
xor
xchg
(bad)
mov
xor
cdq
es
push
inc
adc
sub
inc
fsub
jo
lods
call
movq
ret
adc
mov
push
pcmpeqd
mov
js
sub
jge
mov
in
push
and
mov
push
ret
push
fadd
int
mov
es
jbe
pop
mov
add
lock
jmp
das
cmp
and
loope
mov
test
cmps
rcr
jl
sub
jb
(bad)
icebp
add
icebp
hlt
retf
dec
xchg
mov
pop
dec
cwde
loope
jge
jnp
adc
sti
popf
pop
push
dec
addr16
push
mov
out
fs
xor
or
adc
xchg
test
shl
aam
cmp
inc
stc
and
pop
mov
jno
lahf
rol
xchg
scas
fwait
sar
mov
inc
repnz
out
pop
test
jbe
dec
pop
js
inc
outs
xchg
pushf
mov
cmps
cmps
repnz
loope
xchg
or
add
inc
xchg
cmc
dec
add
int
mov
cs
pushf
push
ret
mov
mul
aad
sub
mov
jp
mov
stos
stos
ins
dec
sub
fwait
(bad)
scas
ja
pop
repnz
adc
push
sbb
shl
jae
test
xor
add
(bad)
jmp
lea
rcl
test
fild
(bad)
mov
icebp
pop
and
imul
inc
test
and
jmp
dec
cwde
test
sub
sti
jl
repnz
sub
push
mov
popf
retf
in
mov
sub
shl
out
das
sbb
ror
mov
adc
sbb
or
inc
inc
mov
pop
cs
(bad)
and
mov
sbb
sbb
aas
dec
mov
adc
aaa
push
ret
ins
icebp
(bad)
pop
push
into
mov
outs
rol
cmp
or
mov
mov
pop
(bad)
loop
xlat
mov
jl
and
imul
cli
or
out
inc
sbb
push
jo
pusha
fimul
or
loopne
sub
mov
add
mov
or
pop
and
es
in
cdq
mov
ret
dec
push
jmp
jbe
mov
pusha
push
shr
or
xor
sub
add
addr16
xor
cmp
xor
clc
(bad)
xchg
addr16
jmp
add
ficom
shl
mov
inc
mov
xchg
fcomp
jo
inc
das
dec
xchg
call
mov
inc
jb
repz
rol
int
call
push
ret
push
cmp
adc
mov
or
inc
ret
test
push
add
jp
xchg
xchg
not
leave
dec
push
inc
out
mov
aas
sbb
add
cli
pop
test
and
mov
mov
cld
data16
sub
adc
jecxz
aaa
push
movs
test
lea
sbb
jbe
xchg
jg
adc
pop
fs
cmc
out
push
out
adc
retf
stc
fild
xor
std
lods
fnsave
outs
inc
dec
cmp
sbb
lea
hlt
push
and
mov
test
or
mov
frstor
xchg
pop
mov
mov
cmovnp
mov
shl
pusha
sub
and
add
mov
mov
dec
jae
(bad)
int3
imul
(bad)
add
fldenv
push
dec
fimul
add
cdq
dec
imul
xor
and
lock
aad
fdiv
push
imul
std
(bad)
lock
(bad)
mov
(bad)
hlt
push
(bad)
mov
es
ds
ins
sub
mov
fist
xchg
ins
(bad)
xchg
push
mov
mov
mov
dec
mov
add
inc
outs
push
loope
xlat
pushf
xchg
adc
in
adc
jg
sbb
mul
mov
test
and
jecxz
and
lahf
jo
xchg
sar
mov
or
and
ret
call
jno
imul
arpl
aaa
enter
cmp
lods
int3
xchg
jmp
test
stos
enter
daa
aad
inc
inc
aam
xor
icebp
bound
pusha
xor
icebp
cs
mov
movs
mov
dec
loop
leave
push
dec
rcr
pop
out
scas
push
mov
cld
dec
push
movs
inc
lock
adc
sbb
bound
lods
shl
jno
add
inc
inc
aas
scas
jo
jne
adc
fucomi
repnz
mov
inc
or
mov
mov
int
jmp
mov
adc
loop
mov
sbb
sub
sbb
rcl
out
call
das
fimul
mov
sahf
imul
loopne
cmp
int3
xchg
xor
pop
(bad)
jmp
jg
inc
sti
and
pop
cmps
mov
(bad)
fcom
push
out
xor
and
test
push
or
icebp
and
push
inc
push
xchg
or
shl
push
xchg
test
cs
daa
xor
gs
jle
hlt
sub
fsub
pushf
dec
nop
sbb
test
sbb
xchg
push
jbe
test
or
loopne
jne
pushf
int3
fcom
jp
clc
cmp
mov
or
rol
inc
mov
jns
ins
sub
mov
hlt
data16
or
je
or
push
jae
sub
repnz
movs
js
jmp
mov
imul
dec
aad
xchg
mov
xchg
mov
ret
sub
lods
or
dec
test
into
dec
hlt
mov
out
scas
xchg
mov
mov
sbb
jo
les
inc
inc
test
ja
or
dec
push
movs
push
jecxz
push
cmp
mov
in
(bad)
clc
mov
loope
in
xor
dec
sbb
loop
(bad)
fmul
mov
jnp
int
std
pop
sbb
mov
and
adc
not
jl
mov
cli
mov
aad
(bad)
add
cdq
push
sub
xor
stos
xchg
call
xrelease
push
or
xor
lods
jno
pop
sub
ss
aam
fwait
jg
cmc
retf
jle
sub
iret
cmp
fdivr
pop
pop
mov
imul
std
(bad)
mov
mov
es
push
inc
ror
cmp
test
jnp
scas
mov
mov
jmp
or
fxch
retf
mov
mov
sbb
pop
or
ret
test
test
and
or
pop
(bad)
sahf
adc
push
call
or
add
cmps
sbb
out
push
cmp
div
test
and
adc
cmps
or
arpl
xchg
and
mov
mov
push
in
(bad)
or
dec
push
jae
arpl
sub
sub
cld
stos
dec
or
das
adc
inc
repnz
jbe
adc
and
fadd
xchg
fld
movs
fisub
jle
jl
fucomip
sbb
out
xor
xor
fs
pop
(bad)
call
mov
fs
rcr
pop
dec
add
sub
add
and
loopne
into
sub
jns
(bad)
and
jl
cmps
daa
cdq
out
out
xchg
and
xchg
sahf
in
mov
and
lods
adc
adc
fiadd
jmp
out
aam
add
movs
sub
out
scas
push
mov
imul
add
je
(bad)
mov
rol
ret
jge
sub
mov
push
add
scas
adc
sbb
adc
retf
cli
cdq
movs
mov
aas
ins
push
out
dec
dec
add
mov
inc
cwde
xor
xchg
sbb
inc
xor
into
cmp
sbb
or
scas
add
cmc
into
mov
cmp
fstp
stos
scas
xor
data16
inc
aam
and
pop
data16
sbb
stc
arpl
mov
imul
lahf
test
add
and
mov
cmp
pop
or
and
adc
stos
xchg
dec
dec
movs
retf
icebp
shr
or
mov
pop
mov
jmp
fiadd
(bad)
retf
js
mov
push
arpl
stos
jle
pop
in
sub
clc
adc
inc
xchg
das
push
call
enter
adc
fwait
and
xchg
xor
mov
lock
ins
pop
adc
pushf
add
call
sub
cmps
or
ds
dec
add
push
inc
cmc
lock
cmp
movntq
cli
loopne
sub
and
mov
movs
push
int
imul
jo
or
mov
imul
inc
fsubr
pop
mov
fstp
xchg
je
imul
jp
movs
or
xchg
mov
mov
loopne
int
es
fisttp
xchg
cmp
inc
es
xor
in
pop
pop
sub
xchg
popa
mov
or
mov
cmp
fisubr
fadd
cmc
test
jo
jg
imul
adc
popa
hlt
jb
ret
dec
jmp
or
push
sub
xchg
cmp
vunpckhps
add
cmp
test
test
mov
movs
sbb
jo
or
ds
jmp
imul
test
(bad)
and
out
dec
jno
loope
mov
or
lods
cmc
jnp
stc
add
cmp
in
out
cmp
push
sbb
lods
xor
mov
sti
in
mov
push
test
addr16
ins
out
add
mov
stos
iret
push
mov
jbe
cmp
or
es
cmps
or
popf
fldcw
cld
fsubr
sub
or
int
jmp
add
adc
pop
jne
out
fwait
jg
mov
xor
jge
(bad)
neg
sbb
dec
(bad)
fsub
sar
jle
dec
adc
cs
xlat
fmul
xor
repz
int3
inc
outs
mov
pop
push
mov
aas
or
nop
std
aaa
test
dec
cmps
pop
sbb
or
sbb
and
js
jae
push
and
data16
cwde
clc
fcmovne
or
stos
push
pusha
data16
dec
outs
push
shl
xchg
outs
popf
mov
adc
push
jnp
imul
dec
out
retf
jnp
add
or
or
lahf
(bad)
jmp
loope
cwde
xlat
push
lods
xchg
outs
inc
and
pop
push
arpl
es
aam
test
inc
pop
cmps
jecxz
sar
sub
stos
lds
and
adc
xchg
rcl
pop
push
mov
mov
or
in
ss
or
push
(bad)
scas
xor
mov
outs
jbe
adc
pop
xlat
sub
iret
int
dec
imul
inc
pusha
jbe
aas
shl
mov
(bad)
(bad)
push
xor
add
jl
(bad)
movs
add
or
aas
jno
imul
sar
in
dec
int
xchg
pop
adc
sbb
mov
mov
jne
and
mov
cmp
cmp
fidiv
out
int3
sar
in
jl
scas
adc
movs
add
les
sbb
inc
or
call
nop
retf
hlt
xor
and
nop
jge
fimul
dec
or
call
cmp
shl
enter
ret
mov
add
icebp
outs
adc
(bad)
ja
pop
es
sub
sbb
mov
stos
std
stc
retf
inc
lods
and
nop
ja
cmp
(bad)
loopne
pop
xor
inc
inc
leave
add
sub
jo
xchg
loop
cmps
lock
jmp
test
xchg
rcl
add
int3
pop
out
les
inc
pop
xor
add
sub
test
jmp
jmp
mov
shl
icebp
sbb
or
out
out
fucom
(bad)
js
xor
dec
adc
push
sar
shr
imul
or
cmp
xor
push
xchg
seta
loop
mov
call
cdq
retf
test
test
stos
mov
mov
pop
jo
leave
test
(bad)
push
jmp
ds
or
sbb
out
pushf
jmp
into
shl
ja
mov
mov
pop
clc
xchg
iret
push
mov
xchg
and
lock
sub
test
loop
sahf
push
daa
jg
out
shl
pop
fbstp
cmp
cmps
sbb
lods
pop
inc
mov
or
dec
cmp
adc
inc
gs
and
xor
lods
arpl
in
dec
xchg
les
sbb
sub
ins
sar
in
mov
cld
int
and
fcomip
ror
ret
cli
pop
dec
cmps
fstp
jnp
aam
aad
jns
or
scas
jmp
mov
mov
ret
mov
push
daa
mov
xchg
xor
sub
popa
retf
xor
sub
stos
adc
mov
(bad)
mov
xlat
jb
cs
and
bound
shr
enter
dec
dec
xchg
iret
dec
xor
mov
rcl
and
(bad)
or
xor
imul
cmp
int3
jbe
fsubr
lea
(bad)
jge
(bad)
push
sub
cmp
icebp
fiadd
cli
cmps
fadd
sti
mov
enter
adc
popf
xor
lods
data16
fucomip
addr16
ins
(bad)
retf
enter
xchg
jmp
div
sbb
xchg
je
sbb
cmp
cld
mov
cmp
rcr
icebp
mov
inc
cmps
push
push
iret
jl
mov
mov
mov
arpl
(bad)
mov
bound
test
(bad)
xchg
mov
xlat
(bad)
ins
pop
imul
imul
or
mov
pop
or
into
sbb
shr
sbb
jp
and
call
pusha
cmp
scas
out
test
inc
retf
je
or
outs
movs
ds
ss
movs
js
rcl
push
adc
xchg
mov
adc
sbb
mov
adc
(bad)
xor
mov
movs
fwait
(bad)
jge
fwait
sbb
and
dec
jno
inc
sub
sbb
retf
and
mov
and
popf
pop
fadd
ror
jo
or
mov
adc
push
ret
xchg
(bad)
sti
push
sar
mov
add
jmp
int
pushf
sbb
mov
enter
pusha
retf
mov
(bad)
and
movs
aam
xor
out
cwde
jg
dec
adc
adc
es
inc
dec
cmp
idiv
in
add
xor
(bad)
ficom
mov
inc
inc
dec
fst
pop
pop
or
fdivrp
jo
cmp
rcr
daa
or
pop
call
mov
outs
mov
std
imul
lods
ds
data16
sub
daa
pop
aad
xchg
popf
jb
out
sbb
mov
or
stc
pushf
les
push
js
pusha
aam
mov
mov
push
cmp
xor
iret
call
dec
xor
jns
pop
fmul
jp
test
sub
cmp
scas
clc
push
leave
lahf
jns
mov
adc
pop
xchg
inc
mov
imul
and
xor
inc
repz
and
inc
jbe
jne
mov
sub
ds
sahf
hlt
mov
adc
mov
and
xor
cmp
push
dec
ins
pop
mov
rcl
ins
mov
adc
xchg
cmp
inc
push
mov
icebp
jmp
mov
cmps
shr
xchg
loop
leave
dec
mov
ficom
and
movs
pop
sub
or
or
dec
add
out
out
xor
sbb
cli
jmp
sub
mov
call
mov
icebp
pushf
int
mov
icebp
mov
xchg
fdivr
xor
jecxz
push
mov
xchg
cld
inc
aas
aam
mov
out
jl
inc
fbld
(bad)
cmps
fiadd
inc
pmullw
mov
pop
aad
sub
out
ret
clc
js
repz
pop
mov
js
mov
push
add
sahf
push
adc
mov
in
aam
pop
and
mov
inc
add
pop
sbb
arpl
mov
xor
push
das
addr16
jmp
mov
mov
and
shl
(bad)
fsubr
add
jmp
pop
add
cmp
xor
add
mov
cli
ret
inc
mov
push
loope
xchg
aad
fistp
cli
repnz
sub
aas
icebp
sbb
pop
pop
inc
mov
cmovbe
jp
jbe
add
mov
push
jmp
cs
sbb
movs
cmp
inc
or
adc
out
sbb
enter
in
xor
mov
dec
dec
aas
cmps
neg
and
adc
mov
pushf
inc
js
xor
dec
mov
dec
cdq
jp
xchg
xchg
sbb
and
pop
sbb
jg
addr16
frstor
ja
xor
xchg
lock
je
iret
stos
ror
aaa
imul
add
jp
add
xchg
inc
mov
rcr
push
jnp
scas
scas
fwait
jae
addr16
push
jo
hlt
sbb
pop
test
jp
scas
out
inc
ficom
xor
pop
adc
adc
and
aam
loope
or
enter
cmp
mov
or
out
pop
xor
je
hlt
mov
xchg
les
ds
and
not
dec
sub
mov
outs
outs
sar
inc
(bad)
xchg
inc
ss
jae
mul
sub
repz
outs
ficom
jl
dec
inc
pop
aam
out
and
sahf
(bad)
mov
push
mov
rcl
push
mov
xchg
jge
(bad)
mov
hlt
call
xor
bound
adc
jns
or
sub
int
ja
xlat
dec
add
mov
mov
sub
jmp
xor
pop
test
mov
test
call
xchg
clc
add
pop
lock
(bad)
push
mov
ins
sub
jae
addr16
cmc
cmp
pop
cmp
mov
dec
ins
pop
test
hlt
adc
pusha
and
sbb
ffreep
sahf
data16
dec
mov
pop
pop
xchg
cmps
int
and
mov
sbb
neg
xchg
leave
pop
ror
cli
adc
xor
imul
xor
std
leave
jecxz
jmp
mov
outs
stos
sub
ins
les
fmul
bnd
sbb
cmp
aaa
scas
jnp
push
scas
movs
cwde
mov
lods
into
sub
imul
adc
sub
fstp
push
push
dec
movs
dec
gs
push
push
push
int
test
cmp
lds
outs
stc
not
xchg
push
pop
std
mov
ror
mov
mov
push
xchg
daa
or
div
das
and
xchg
call
je
mov
add
aam
add
mov
pushf
in
mov
in
lahf
(bad)
cdq
not
sahf
sbb
mov
xchg
stos
jns
loope
dec
(bad)
fist
mov
cmps
hlt
ins
sbb
aas
inc
arpl
sahf
test
pushf
(bad)
fcmovb
ffree
jl
xchg
rcl
arpl
ja
out
aaa
mov
or
addr16
fs
jnp
mul
popa
fs
and
mov
loopne
daa
in
push
cli
gs
xchg
push
push
mov
lds
imul
adc
sub
loopne
jg
jno
push
mul
dec
sbb
pusha
rol
out
test
hlt
pop
mov
jmp
adc
in
mov
adc
xchg
pop
call
dec
popf
jbe
dec
or
call
shl
iret
add
jns
jle
(bad)
xchg
cmp
pop
add
hlt
push
ins
sbb
test
lea
push
push
adc
xor
retf
sbb
pop
jecxz
dec
(bad)
jmp
movs
add
pop
adc
mov
mov
(bad)
hlt
out
sub
jl
xor
and
out
add
sbb
mov
aad
xchg
(bad)
les
mov
les
adc
in
shr
mov
and
js
jl
inc
icebp
sbb
fwait
pop
cwde
adc
stc
enter
dec
in
outs
jb
mov
cmps
stos
sbb
mov
pop
add
stos
jl
lea
bound
mov
and
cmp
aam
jecxz
out
push
daa
mov
xchg
jl
movs
mov
add
std
inc
mov
inc
es
adc
aad
ins
icebp
xchg
jle
sbb
pop
in
test
addr16
inc
ins
xor
into
scas
ins
push
cmp
sub
stos
xor
xchg
adc
sbb
push
and
mov
jae
mov
pop
sbb
in
xchg
pusha
aaa
neg
cs
sbb
xchg
xchg
and
in
mov
fadd
jge
push
mov
add
or
cmp
inc
mov
shl
or
push
mov
pop
aas
push
and
aad
cmp
(bad)
jmp
in
mov
retf
loopne
or
rep
inc
sbb
and
or
(bad)
push
inc
cdq
in
xchg
lea
pop
push
cdq
sub
fdivr
mov
in
adc
in
jae
stc
sbb
fsub
push
add
xlat
(bad)
dec
and
add
frstor
adc
or
cmp
icebp
inc
imul
fwait
mov
inc
fwait
xchg
push
cmp
add
mov
ins
mov
or
call
inc
bound
xor
cmp
sbb
out
jle
rol
adc
mov
pushf
nop
jno
mov
nop
jmp
cmc
or
pop
fimul
daa
js
mov
jno
mov
dec
loope
jl
fyl2xp1
add
jge
scas
adc
mov
mov
dec
data16
jecxz
xchg
jmp
jg
stos
shl
push
inc
jecxz
jp
cs
inc
test
mov
outs
repz
inc
push
push
xchg
mov
test
popa
push
or
mov
and
std
mov
jecxz
jecxz
pop
mov
push
xor
xchg
or
icebp
and
inc
daa
push
dec
je
pop
jmp
dec
pushf
outs
adc
test
push
push
cmp
icebp
retf
adc
mov
and
mov
sub
inc
sbb
call
sahf
stos
out
mov
xor
inc
iret
fsubr
add
rol
leave
pusha
cmp
sar
std
xlat
mov
add
and
adc
adc
xchg
xchg
or
mov
cmc
mov
inc
dec
ds
(bad)
adc
popa
mov
addr16
fidivr
lahf
adc
in
mov
jmp
repz
add
movs
aad
pop
in
ins
(bad)
sub
aam
mov
loopne
sub
outs
dec
clc
leave
in
out
mov
pop
xchg
sbb
adc
in
imul
int
add
xor
sub
fiadd
pop
shl
js
mov
jae
xchg
pop
jg
xchg
push
jae
add
loopne
ror
xor
aam
jg
inc
rol
jle
out
sar
cmp
adc
scas
push
lods
sub
mov
jl
jmp
jp
jb
cmps
sub
lods
or
stos
in
push
fsubp
jecxz
(bad)
std
xor
jmp
cmp
data16
mov
scas
imul
push
jecxz
inc
sbb
jns
fisub
inc
mov
(bad)
stc
mov
mov
jmp
call
add
xor
jno
arpl
aaa
and
popf
add
stc
test
inc
push
in
mov
bsf
or
es
movs
jle
outs
mov
jmp
dec
cmp
or
clc
cmp
inc
push
fwait
dec
aas
mov
or
jge
sbb
imul
out
mov
sahf
int3
push
fdivr
(bad)
pop
mov
jae
imul
outs
test
cmp
out
fcmove
mov
xchg
nop
sub
jns
adc
xor
and
fild
or
repnz
sub
ror
inc
pop
push
inc
sub
add
cs
lahf
std
imul
jae
cld
jb
int3
sbb
je
popa
(bad)
stos
dec
push
(bad)
lods
jmp
jmp
lea
or
int
mov
sbb
outs
dec
jb
mov
adc
in
in
jle
jno
cli
les
scas
das
mov
inc
in
sub
repnz
push
push
leave
adc
inc
in
outs
lea
bound
xchg
inc
fwait
mul
dec
rcl
mov
add
movs
ret
retf
inc
adc
push
es
cmps
mov
adc
fidivr
push
cld
cmp
das
(bad)
xchg
mov
retf
pushf
scas
lahf
mov
xchg
popf
in
jns
push
icebp
pushf
push
sub
(bad)
adc
mov
jb
sub
push
cmp
xor
push
cmp
(bad)
pop
loopne
mov
pop
jmp
dec
nop
xchg
push
out
fs
in
lea
cmc
or
jecxz
popf
xor
jge
sub
data16
mov
add
lds
dec
push
xchg
test
push
mov
nop
xor
outs
sbb
jae
icebp
sub
inc
dec
loop
sbb
mov
and
aam
jne
pop
clc
inc
push
leave
out
cmp
sub
inc
lds
addr16
into
fst
jecxz
mov
push
xor
lock
and
daa
sbb
sub
je
add
xor
jne
loopne
xchg
push
clc
dec
outs
call
sub
jmp
sar
iret
jmp
mov
mov
lods
idiv
es
sub
add
shl
adc
mov
xor
lods
leave
lds
das
mov
into
push
push
pop
addr16
adc
cwde
inc
or
adc
xor
mov
mov
adc
lds
(bad)
sbb
gs
push
or
push
jns
sbb
(bad)
cmp
movs
cmp
or
cmp
cmp
or
adc
adc
data16
sub
cmp
inc
jp
in
dec
mov
jb
(bad)
mov
lea
pop
mov
je
aaa
jnp
and
or
mov
shr
jbe
lods
(bad)
mov
and
call
jae
js
fistp
mov
xchg
jle
pop
xchg
sub
dec
les
mov
pop
mov
pop
mov
dec
js
adc
push
adc
pushf
dec
and
call
inc
clc
std
sbb
out
xchg
inc
jl
dec
inc
ins
repz
cmp
hlt
fcom
xchg
cmp
lock
inc
mov
mov
jns
jge
ss
test
rcl
mov
and
dec
cmc
fstp
int
lods
es
adc
pop
out
mov
leave
add
push
in
and
loop
cmps
out
pop
aas
xchg
inc
mov
les
cmc
sar
out
dec
dec
daa
push
jge
mov
fisttp
push
addr16
(bad)
imul
or
push
inc
out
lods
loop
(bad)
popf
pop
push
dec
mov
loop
shl
es
ret
mov
retf
adc
xor
icebp
or
xchg
sahf
mov
aas
sub
test
in
push
fidivr
ja
sub
fld
out
call
fadd
jg
maxps
cmp
mov
push
push
idiv
cmp
fcom
cmp
aad
mov
and
pop
add
push
cmp
movs
mov
xor
fmul
lahf
pop
retf
add
repz
mov
sbb
mov
in
and
mov
cmps
imul
arpl
mov
mov
mov
fadd
sbb
or
in
test
add
xor
jnp
pop
leave
push
mov
mov
vdivsd
aad
adc
iret
enter
cmp
push
pop
cli
rcl
(bad)
mov
jno
mov
cwde
jecxz
adc
push
aaa
sbb
jae
(bad)
jb
pop
cdq
fsincos
inc
cli
mul
inc
push
and
in
and
cmp
sbb
out
jno
ins
pop
inc
fidivr
mov
push
xor
aam
jge
mov
cli
mov
push
cmp
jno
xchg
mov
xor
pop
aad
jmp
mov
fcom
loopne
mov
imul
shr
push
jge
pop
in
call
repz
aas
(bad)
nop
jne
jg
sub
and
pop
jmp
int3
cmp
mov
das
cmp
dec
xchg
(bad)
cmp
adc
aaa
lahf
push
jne
and
loopne
cld
dec
ins
mov
sbb
cmps
xor
push
shr
cs
sub
movlps
mov
mov
dec
push
aad
fidivr
loope
mov
fcom
jb
cmps
xor
stos
add
dec
out
fs
lock
out
(bad)
push
sub
ja
cmp
js
mov
(bad)
xchg
loope
shl
or
fimul
jp
dec
aas
loop
popf
mov
add
test
(bad)
retf
inc
xor
iret
imul
mov
fs
lea
ds
pushf
inc
ds
ret
fcom
pushf
aam
xlat
mov
mov
imul
xor
xchg
mov
les
fimul
add
dec
aaa
dec
add
xor
dec
add
mov
rcl
sbb
mov
push
bound
mov
dec
mov
arpl
cmp
enter
popa
dec
test
lods
repnz
pop
out
ds
scas
jnp
sbb
sub
dec
inc
pop
mov
and
les
sar
fcomi
(bad)
loop
mov
aad
popf
xchg
outs
and
bound
pop
les
call
test
cwde
cmc
push
inc
or
lahf
dec
xor
fstp
movs
retf
push
push
gs
dec
jne
or
loop
fbstp
cmp
or
xchg
xor
adc
mov
jae
xor
cmp
cmc
repz
out
pop
jmp
pop
mov
mov
sub
xor
inc
fwait
out
leave
cmp
mov
mov
sbb
(bad)
mov
cmp
es
and
push
pusha
add
xchg
aad
ret
jns
jno
inc
or
ficom
mov
push
sbb
ds
(bad)
mov
mov
sub
pshufw
inc
pop
push
adc
pop
mov
xchg
push
push
pushf
xchg
movs
popf
test
addr16
cmps
push
and
push
dec
rcl
and
int
add
xchg
ss
out
imul
ins
ret
vpsubq
cmps
pop
movs
sub
in
xchg
xchg
pop
out
(bad)
jge
(bad)
xchg
loope
mov
xor
add
les
adc
fidiv
adc
lds
dec
ret
data16
imul
pop
xor
xlat
stc
fs
dec
xlat
push
dec
movs
lea
mov
xchg
or
pusha
scas
(bad)
not
hlt
dec
popa
arpl
aaa
and
pop
jno
inc
dec
retf
shl
(bad)
int3
jge
popa
ficom
(bad)
cmp
mov
sub
adc
ja
retf
inc
pop
inc
fs
xor
or
adc
sar
repnz
or
fnstcw
mov
aas
out
xor
retf
and
mov
and
sub
jge
xchg
inc
cmps
inc
jl
lea
repnz
pop
mov
inc
mov
getsec
dec
push
retf
xor
xor
xchg
sub
aaa
push
dec
pop
arpl
ds
(bad)
inc
dec
jmp
or
push
scas
pop
stc
sub
pop
call
pop
push
jmp
stos
inc
adc
inc
inc
cwde
push
mov
es
test
inc
inc
mov
or
(bad)
pop
adc
or
dec
nop
imul
lahf
and
out
int
mov
cmp
mov
sahf
stc
jl
sbb
push
(bad)
stc
pop
mov
(bad)
std
push
fsubr
fnstenv
outs
push
shl
gs
xor
test
dec
cmps
add
or
mov
add
fsubr
mov
ret
fs
dec
cmps
inc
cmp
inc
dec
xor
or
jmp
cmc
pushf
mov
mov
ret
add
sub
cmp
(bad)
push
mov
push
into
sar
mov
rcr
inc
sub
aam
add
rcr
inc
jl
pop
push
pop
add
not
cmp
data16
jmp
rol
cli
retf
(bad)
ficom
lods
cld
ds
pushf
lsl
test
or
xchg
sar
inc
into
dec
push
cmp
and
inc
mov
cmp
fmul
lea
jmp
dec
mov
adc
jno
add
xchg
inc
pop
bound
and
adc
pop
lods
outs
xabort
sub
xchg
sub
jno
fnsave
cli
lock
test
xchg
fisubr
sub
test
movs
cmp
and
xchg
int3
add
call
mov
adc
jmp
inc
xlat
aas
fwait
int
ja
mov
adc
cmp
aam
xlat
pusha
pop
stos
repnz
and
push
inc
clc
test
pop
(bad)
jns
(bad)
jb
inc
pop
inc
std
es
je
push
lods
cs
test
jo
mov
lods
mov
mov
int3
out
add
into
fisttp
pusha
pop
loop
add
pop
int
sbb
mov
out
in
xchg
clc
mov
shl
in
(bad)
mov
inc
and
xor
and
fidivr
aaa
retf
jns
xor
cs
icebp
hlt
mov
es
adc
cmpxchg
push
data16
ss
or
jo
fucom
ins
retf
or
sub
pop
icebp
or
inc
or
cld
inc
xlat
test
sub
mov
jmp
out
inc
ret
or
cmp
pop
sub
inc
sbb
inc
jbe
out
jns
movs
je
shl
and
pop
xchg
and
test
push
jle
mov
pop
in
in
shl
jge
add
mov
jl
sbb
movs
and
leave
adc
inc
mov
(bad)
movs
mov
add
cmp
pop
pop
test
jl
addr16
daa
sub
pop
mov
or
enter
fwait
(bad)
push
mov
outs
in
fbstp
dec
fwait
xchg
nop
xlat
push
mov
pop
(bad)
ds
jo
adc
adc
cmps
cmp
push
inc
pop
pusha
mov
lahf
pop
std
sti
jp
push
call
in
sbb
cmp
cmp
sbb
dec
movs
cld
dec
mov
ror
xor
jecxz
ja
jp
mov
out
xor
push
loop
add
xchg
dec
clc
jmp
push
imul
gs
cmps
mov
stos
dec
(bad)
icebp
mov
mov
test
fs
sbb
xor
dec
jg
xor
jb
lahf
and
add
retf
mov
ins
mov
push
(bad)
sbb
and
jecxz
sbb
pop
push
aam
mov
enter
cmp
mov
enter
lea
repnz
cdq
daa
loopne
pop
fstp
aaa
and
mov
and
sub
add
fwait
out
addr16
jl
jecxz
stos
pop
sbb
add
ror
push
pop
jmp
adc
xchg
jle
mov
jns
and
push
jmp
sbb
cmp
jle
inc
push
adc
adc
sub
xchg
rcl
mov
aad
inc
xor
push
test
inc
inc
and
sti
pop
cmp
push
jmp
je
ins
and
xchg
and
mov
ret
imul
or
jo
ret
dec
test
outs
enter
sub
cmps
cli
add
lahf
add
or
jle
ins
fs
imul
in
push
sar
pop
inc
push
retf
aam
or
inc
and
pop
das
aas
mov
enter
mov
add
call
bound
cdq
mov
imul
iret
or
je
adc
mov
sub
inc
xchg
fdiv
jmp
pop
jg
sub
jne
pusha
lea
mov
add
test
jge
push
clc
jge
and
test
bound
je
ret
enter
mov
pop
push
jo
pop
les
mov
add
jecxz
or
pop
ds
sub
cmp
movs
adc
xlat
xchg
cmps
and
inc
call
sub
scas
dec
mov
adc
sbb
fwait
xor
mov
push
xor
loop
movs
pop
int
sub
adc
or
push
sub
mov
ja
scas
sbb
adc
cld
outs
pop
icebp
sbb
ins
xor
fisttp
sti
out
adc
jae
pop
imul
ret
sbb
push
retf
fstp
ror
or
push
shr
push
addr16
adc
cdq
xchg
js
jne
push
cdq
adc
sbb
jns
js
imul
jmp
xchg
in
inc
or
dec
(bad)
rcl
popa
mov
xor
iret
ret
jno
shr
js
fwait
push
scas
jnp
(bad)
mov
push
ja
sub
std
jge
jns
out
xor
pop
test
shl
stc
fsubr
xor
add
mov
push
pop
or
das
inc
sub
leave
movs
js
add
repnz
sub
fsubr
xchg
mov
(bad)
aaa
retf
icebp
retf
dec
and
mov
mov
inc
pop
fisub
enter
adc
jecxz
adc
mov
xor
(bad)
add
jge
jl
pop
push
imul
xor
mov
mov
push
(bad)
or
xchg
mov
rcl
pop
imul
aam
or
adc
mov
or
and
popa
(bad)
mov
dec
stos
mov
push
adc
in
retf
cli
xchg
nop
test
mov
push
cmp
adc
xchg
retf
vmread
sbb
mov
and
xchg
add
jp
push
mov
jnp
ja
mov
out
js
and
stc
sbb
movs
sbb
sbb
aas
cld
out
cmps
sub
scas
jnp
test
jmp
not
lds
jge
mov
stos
sbb
pop
inc
push
pop
sbb
inc
movs
out
jl
daa
xor
(bad)
mov
js
nop
in
not
enter
adc
das
aam
fld
mov
fs
sub
and
ret
pusha
mov
mov
cmp
sub
inc
add
shl
test
enter
(bad)
jge
gs
ja
mov
push
cmp
ret
sub
loope
mov
push
xor
mov
fimul
div
sbb
(bad)
stos
nop
adc
pusha
jne
pop
mov
sbb
aas
outs
xchg
push
adc
mov
mov
cmp
add
push
es
adc
cmp
cwde
(bad)
int3
pop
cmp
cs
xchg
scas
xchg
pop
bound
jae
ins
in
add
jmp
mov
or
push
xor
ret
xor
mov
loopne
inc
into
mov
stos
dec
jno
pop
add
push
mov
pop
ss
pop
test
(bad)
mov
fld
add
jno
fucomip
popa
pusha
or
adc
inc
ss
mov
mov
fwait
mov
mov
xchg
pushf
jae
ins
pop
pop
xor
aad
inc
mov
inc
into
cmp
lahf
cdq
inc
adc
stos
ja
mov
xor
loope
sub
fdivr
inc
push
mov
sbb
out
dec
ins
add
sbb
retf
adc
or
sbb
and
or
dec
xor
mov
iret
loope
out
es
(bad)
xor
sub
shl
das
fwait
mov
xchg
cmp
movs
lea
je
mov
push
mov
out
fsubr
outs
xor
shl
cmps
mov
mov
sbb
ret
std
jnp
repz
add
sub
in
les
push
inc
push
les
mov
cli
adc
jecxz
ja
dec
pop
adc
aam
test
cmps
cld
pop
jns
mov
dec
pop
sub
lods
push
add
inc
shl
loop
aaa
int3
mov
lock
fnsave
xchg
call
shr
pop
push
and
fistp
cwde
lds
ficom
dec
pop
dec
mov
je
adc
dec
ficom
dec
shl
fnstenv
imul
inc
rol
xor
fbstp
fxch
jp
aaa
ret
test
popf
(bad)
adc
jno
sahf
xor
retf
mov
adc
add
adc
or
(bad)
push
adc
jp
jle
aaa
sbb
jmp
jbe
mov
mov
les
xchg
sub
sbb
jp
test
stc
f2xm1
push
mov
ss
fidiv
jmp
or
movs
into
inc
mov
fucomp
cmps
(bad)
out
push
mov
adc
jecxz
xchg
dec
jmp
sub
ins
outs
sbb
cwde
ret
daa
cmps
shl
hlt
hlt
aam
lahf
mov
push
shl
dec
mov
or
jg
int
cmc
cdq
js
pop
and
test
sbb
dec
jne
fucomi
cld
scas
inc
add
sub
mov
test
push
fwait
shr
and
rcr
popa
pop
and
sbb
fsub
movq
mov
fisubr
stos
ret
lock
ss
dec
inc
xchg
dec
clc
(bad)
cmp
clc
xor
pop
(bad)
pop
jl
sbb
es
call
cmp
pop
sahf
sub
push
sbb
daa
pushf
xchg
sbb
sub
mov
mov
movs
imul
test
lods
sti
lahf
and
out
adc
dec
pop
push
sub
inc
hlt
outs
push
adc
mov
pushf
sub
mov
push
add
cmp
dec
mov
add
sub
sti
mov
adc
data16
cmp
mov
ja
push
inc
jno
and
xor
in
and
xchg
and
sbb
add
fstp
push
xchg
(bad)
loope
inc
push
push
fidivr
push
repnz
ret
int3
aaa
and
push
add
pop
inc
jno
sbb
inc
clc
test
fst
jl
loop
mov
popa
int
sbb
jne
mov
fcomp
and
mov
pop
lahf
je
fs
cmps
pop
in
arpl
fcomp
adc
mov
(bad)
stc
mov
inc
(bad)
iret
cmp
mul
aas
push
adc
shl
jecxz
mov
jae
cdq
inc
push
and
xchg
ds
jmp
fsubrp
mov
vpsubb
ret
mov
pop
ds
push
fild
sub
cmp
(bad)
jmp
pushf
fnsave
sbb
repz
pop
jbe
in
dec
nop
cdq
mov
add
mov
test
and
xchg
dec
cmc
mov
test
xor
repnz
icebp
sbb
sar
dec
popa
xchg
jmp
mov
fwait
sub
cmps
mov
bound
cmp
dec
sbb
mov
mov
cwde
mov
test
cmp
ins
repnz
lds
sar
out
ret
lock
inc
(bad)
dec
mov
popf
(bad)
lds
push
ins
ror
in
dec
xchg
fbld
pop
ret
pop
inc
ins
cwde
sahf
push
shl
hlt
inc
scas
stc
mov
sbb
xchg
ja
pop
mov
jbe
in
das
aad
ins
push
dec
(bad)
cmp
cmp
push
xchg
lods
mov
add
shl
ret
or
dec
inc
scas
int3
jecxz
pop
mov
cld
fimul
cwde
fsubrp
cmp
ins
jns
sub
rol
push
aas
cwde
xchg
nop
adc
enter
pop
scas
stc
pop
sub
sbb
xchg
loop
lahf
dec
dec
mov
or
in
sahf
push
inc
sahf
jg
mov
cmp
sahf
fist
cmp
mov
fdiv
xor
aam
or
fcomp
mov
push
xchg
repnz
mov
sti
sub
fld
repnz
nop
xor
mov
push
in
popa
pop
neg
push
add
ds
scas
(bad)
in
xchg
xchg
xor
jmp
bound
imul
repnz
sub
mov
out
push
xor
lods
xor
pop
inc
mov
cld
sbb
nop
jecxz
pop
push
jge
(bad)
cmps
jnp
add
rcl
push
adc
mov
loope
ins
xchg
sbb
xchg
sbb
mov
push
(bad)
shl
pop
inc
jb
dec
adc
xor
push
add
jb
push
fsubr
mov
ins
loope
xlat
adc
ror
inc
sahf
mov
push
or
jnp
in
jb
adc
sar
fild
push
nop
mov
mov
adc
fucom
cmp
nop
loopne
mov
push
push
push
adc
popa
dec
lods
sbb
inc
call
popf
xchg
jmp
(bad)
mov
stos
test
and
pop
and
mov
(bad)
outs
pop
adc
push
cmps
movs
sbb
div
inc
mov
cmp
mov
xor
cmp
dec
xchg
stos
mov
popf
jmp
push
mov
retf
test
xchg
sub
xor
ds
stc
adc
xor
sub
ds
lods
loope
xlat
not
pop
sbb
jmp
and
in
jg
fst
jecxz
(bad)
icebp
pop
cmc
shl
clc
pop
cdq
dec
std
int3
and
rcl
and
inc
add
pop
jge
push
test
mov
cs
out
mov
out
dec
inc
inc
pop
std
shl
add
jmp
jb
mov
and
ficom
ja
pop
ss
loope
ds
mov
(bad)
or
jae
jecxz
xlat
je
hlt
cmp
repz
sub
pop
jmp
int
repz
cmp
push
vucomiss
std
adc
mov
xlat
(bad)
sbb
or
sahf
jle
mov
sub
cdq
and
push
or
dec
sbb
arpl
xchg
cdq
xchg
mov
inc
mov
pop
clc
cs
or
mov
fucom
add
cwde
sbb
jno
cdq
stos
mov
pop
push
mov
add
(bad)
cmps
mov
aad
mov
pop
out
in
daa
push
push
aad
sbb
and
repz
aam
lods
out
add
sbb
pop
mov
add
inc
jb
and
shl
dec
mov
push
je
(bad)
pop
fistp
div
jmp
add
lahf
mov
push
out
aas
das
or
and
sbb
ror
or
sbb
and
sub
mov
xchg
inc
in
dec
mov
loop
mov
add
jno
jns
jle
scas
ss
jge
mov
ja
xor
push
cmp
push
push
pop
nop
sub
xchg
lods
ins
imul
add
mov
sbb
sbb
retf
and
test
jae
xchg
cmp
sbb
aad
fdiv
or
ins
imul
jae
pop
pop
ret
xchg
jmp
add
iret
sti
xor
dec
arpl
loop
ins
mov
addr16
add
add
out
jmp
sub
loop
push
test
adc
push
jbe
xchg
jne
ret
cmps
idiv
in
xor
outs
inc
neg
xor
and
jbe
data16
push
scas
retf
ins
test
ins
cmp
cdq
xchg
sti
and
mov
cmp
mov
fcmovbe
mov
or
jle
pop
lahf
test
mov
mov
mov
lahf
sub
jecxz
lahf
xchg
sub
ss
fbld
mov
arpl
jo
inc
sub
mov
jecxz
daa
sahf
sbb
dec
loope
retf
aad
cdq
nop
pusha
js
pop
(bad)
mov
fsub
and
dec
sub
inc
ret
gs
(bad)
sahf
(bad)
dec
inc
cmps
inc
in
mov
inc
fsubr
call
cld
mov
aad
(bad)
cwde
mov
adc
pusha
jnp
(bad)
pop
(bad)
adc
or
pop
bound
or
call
inc
cmp
mov
xchg
mov
ds
inc
sbb
mov
mov
popa
jns
dec
daa
xchg
mov
movs
inc
movs
(bad)
popa
dec
rol
sahf
xor
imul
out
push
or
gs
sbb
out
leave
je
mov
adc
mov
jbe
push
xor
jne
lods
dec
addr16
and
sbb
test
or
aam
ss
pop
bound
repz
ins
stc
int3
out
mov
f2xm1
xchg
rcl
out
into
jmp
(bad)
out
add
mov
int
in
sbb
in
dec
fisub
add
bound
mov
sub
inc
addr16
popa
sub
hlt
xchg
fisubr
mov
push
push
adc
inc
mov
dec
mov
pop
test
pop
sti
fwait
sbb
(bad)
jl
data16
xchg
dec
dec
popa
add
popf
pop
inc
sub
das
cs
pop
fwait
xchg
xlat
mov
xchg
aaa
repz
or
cld
into
mov
dec
leave
inc
leave
fs
shl
dec
lods
xor
aaa
adc
push
repz
jno
mov
cs
mov
(bad)
or
outs
lock
and
adc
retf
cwde
adc
pop
jb
add
(bad)
mov
and
lds
retf
lods
arpl
push
dec
aaa
xchg
scas
sbb
adc
sbb
dec
mov
popf
imul
mov
ins
adc
mov
and
mov
imul
sbb
jnp
and
iret
jmp
push
pop
push
fimul
sbb
cmc
call
jge
xor
fucomip
xor
int3
mov
cli
jmp
jge
mov
and
or
inc
std
xchg
dec
pop
xchg
fimul
std
arpl
aaa
lods
cmp
pop
push
ins
or
test
jg
xchg
or
outs
push
imul
loopne
mov
in
push
or
fstp
jp
pop
add
mov
or
scas
dec
push
pop
add
mov
in
mov
stc
mov
sub
rcr
arpl
stc
adc
stos
push
aad
test
dec
fist
test
int
cli
loop
out
inc
or
call
movs
adc
pop
mov
shl
ins
and
imul
repz
(bad)
shl
xchg
cmps
jmp
and
and
xor
xchg
pop
ret
cwde
jmp
mov
sbb
adc
scas
jmp
inc
(bad)
repz
xor
call
mov
cwde
pop
pop
mov
push
out
pop
rcl
pop
test
nop
or
or
sub
push
rol
mov
das
mov
(bad)
jns
and
imul
push
cmp
lods
mov
xchg
or
push
mov
pop
retf
js
movs
push
mov
pop
das
jbe
pop
sar
hlt
dec
adc
adc
je
repz
or
(bad)
mov
pop
cmp
dec
leave
mov
or
fstp
mov
cmp
or
sub
in
dec
loop
xor
mov
pop
dec
mov
(bad)
int3
pop
adc
cmp
rsqrtps
clc
push
mov
clc
and
aas
ja
sar
out
pop
shr
push
out
sub
adc
mov
movs
stos
cdq
inc
fistp
mov
xchg
mov
push
sbb
mov
adc
aad
(bad)
fsub
jnp
mov
pop
push
lock
aaa
cmps
hlt
call
and
aas
in
data16
pop
test
scas
mov
dec
js
(bad)
sub
mov
adc
dec
movzx
mov
xchg
jp
(bad)
scas
sbb
jle
fmul
int
inc
pop
outs
pop
mov
pop
xchg
cmp
cli
mov
mov
inc
stc
jnp
jae
clc
retf
rcl
fistp
xchg
js
mov
and
int3
loope
(bad)
sbb
bound
inc
xchg
stos
cmc
mov
ss
jmp
les
mov
leave
cmp
cmp
bound
jno
inc
pop
mov
ja
outs
fidiv
popa
pop
addr16
data16
xchg
xchg
and
mov
push
call
or
fimul
loop
loope
push
jmp
mov
xlat
(bad)
shl
cmp
scas
sbb
jno
dec
call
jge
and
(bad)
jmp
cdq
mov
aas
popf
and
iret
push
sub
test
jecxz
sub
pop
sub
cmps
shr
dec
mov
rcr
inc
ja
jl
xor
push
sub
and
or
sbb
popa
add
cmp
dec
call
lods
std
not
push
scas
xor
adc
or
adc
cli
test
cmp
out
pop
dec
fiadd
push
(bad)
int3
loopne
mov
and
test
loop
xor
xchg
js
mov
pop
ficomp
dec
dec
enter
or
sti
(bad)
dec
movs
shl
ins
push
mov
sti
sbb
test
ss
test
push
ins
cdq
push
retf
and
and
jnp
enter
popa
cmp
pop
push
push
cmp
ret
mov
push
jae
push
jnp
sbb
xchg
adc
inc
jg
es
(bad)
cdq
jmp
push
out
sub
push
mov
ins
dec
inc
cmp
push
data16
out
ror
xor
jnp
out
sub
jne
push
xchg
cmp
shl
test
push
sbb
pop
ret
xor
pop
lods
ret
ins
xchg
inc
sbb
unpckhps
mov
rcr
(bad)
cld
jge
cmc
dec
xlat
daa
fild
nop
retf
js
adc
mov
mov
cld
sti
out
das
cli
ficomp
pop
inc
ror
jno
push
mov
dec
les
and
inc
sahf
test
cdq
pop
leave
adc
cmp
stos
iret
popa
inc
mov
cmps
mov
cmp
fsub
cld
sub
cwde
or
loop
pop
and
xor
gs
or
popa
pop
inc
enter
jns
cmps
dec
add
xchg
stos
cmc
fsubr
jp
xchg
aam
jno
int3
outs
std
add
mov
pop
das
stos
mov
sbb
inc
dec
fcmovnbe
jno
out
es
cli
adc
mov
adc
(bad)
test
jmp
sbb
jbe
aaa
pop
jecxz
jns
jg
fist
mov
or
mov
xlat
add
clc
xchg
popf
mov
mov
pop
mov
mov
jmp
int3
aam
cmp
push
xchg
stos
mov
jg
jb
(bad)
(bad)
stos
aam
push
cld
mov
dec
push
cmp
push
pop
xchg
cmp
dec
jecxz
mov
push
icebp
mov
clc
add
sub
ins
mov
out
scas
ds
fucomip
in
cmp
ret
xor
jmp
sar
enter
cli
test
and
fisubr
xlat
imul
or
ret
sahf
inc
add
lock
leave
cmps
jg
sub
mov
cld
xor
add
push
cmc
mov
add
mov
push
mul
mov
jns
pop
mov
cwde
mov
cmp
cmp
mov
(bad)
fadd
hlt
(bad)
sar
in
adc
jnp
rcr
out
cmps
adc
mov
shr
aad
sub
jne
jnp
cmc
inc
mov
push
jbe
call
add
nop
inc
movs
movs
inc
test
fist
cli
push
sbb
sub
mov
mov
iret
ja
xchg
push
retf
(bad)
shl
ss
mov
jg
pop
js
jl
jmp
inc
cmps
in
fwait
mov
daa
icebp
dec
jno
adc
push
xchg
mov
test
push
push
(bad)
adc
add
adc
xchg
iret
test
in
mov
mov
(bad)
clc
jnp
lock
xor
jmp
shl
push
add
push
xlat
add
push
sbb
lds
movs
retf
mov
push
mov
sub
mov
test
jp
das
cs
bound
mov
dec
or
sbb
adc
sahf
stos
inc
sbb
pushf
mov
fild
ins
cmp
int3
and
adc
data16
pop
test
jecxz
arpl
cld
xchg
stc
xor
xor
(bad)
xchg
xor
xchg
jae
push
cmp
jle
out
in
adc
sahf
fwait
xchg
loopne
jae
sub
cld
push
inc
(bad)
push
popa
shr
scas
outs
inc
pop
into
add
jbe
mov
dec
jmp
out
ss
aam
retf
dec
pushf
(bad)
or
fsub
out
call
cmp
and
inc
pop
pop
xchg
iret
mov
daa
cs
add
adc
mov
adc
out
cmp
push
mov
and
push
std
adc
pop
es
jg
iret
(bad)
jno
mov
shl
mov
stc
test
sbb
jnp
cs
dec
loope
fiadd
hlt
imul
dec
cld
dec
jmp
dec
lock
ficom
es
shl
outs
cld
adc
push
shr
js
sbb
in
in
hlt
nop
ret
test
daa
or
cmp
dec
dec
outs
push
gs
jnp
jae
sbb
shl
dec
jmp
jg
(bad)
(bad)
leave
call
or
fbstp
faddp
sbb
jle
jb
inc
lds
push
cmps
and
jmp
arpl
dec
pop
cmc
jno
into
mov
inc
out
(bad)
loopne
fwait
jmp
fs
mov
std
dec
push
js
or
call
jmp
xchg
and
pop
mov
xchg
in
ins
ins
pop
aam
pop
out
push
(bad)
lds
cmp
ins
imul
bound
sub
inc
sar
inc
and
cwde
je
mov
aas
jo
adc
aas
in
inc
add
push
mov
jns
(bad)
xlat
or
xor
sbb
jle
jmp
jns
shl
(bad)
lods
hlt
cmp
ret
dec
mov
fmul
je
sbb
gs
repz
sti
imul
or
leave
xchg
rol
xchg
pop
ds
div
and
call
jmpw
mov
push
sub
and
cmp
in
pop
and
mov
lock
lock
fcmove
outs
sbb
leave
movs
mov
aaa
xor
jmp
cmps
(bad)
ret
cmp
add
jne
sbb
pop
in
dec
mov
pop
xchg
push
xor
gs
fdiv
ret
inc
adc
xor
sub
repz
push
push
adc
(bad)
cmp
and
imul
jge
lods
jno
cmp
or
retf
inc
pusha
pop
fldenv
rol
sub
outs
les
mov
sub
xor
test
mov
dec
mov
ds
mov
jbe
loope
push
inc
scas
cmps
push
lods
shl
jae
call
bound
out
jne
(bad)
pop
int3
cld
clc
hlt
mov
cmp
rol
in
stos
pop
(bad)
xor
popa
ja
mov
jnp
pop
int
sub
mov
pop
aaa
sbb
mov
jmp
faddp
sbb
retf
sbb
adc
bound
in
jl
loopne
dec
mov
sbb
dec
into
pop
pop
push
mov
pop
fst
push
ins
fcmovnu
(bad)
mov
push
sub
retf
fcom
adc
pop
sub
repnz
lods
and
inc
cwde
mov
cli
retf
pop
jmp
sbb
mov
ss
and
aad
mov
js
leave
sbb
adc
stc
test
(bad)
out
mov
ins
fdiv
ins
imul
or
mov
aaa
addr16
and
sar
mov
xchg
in
mov
adc
jg
test
fld
dec
pop
cmp
mov
mov
and
jmp
cmp
mov
rcl
add
(bad)
xchg
push
sbb
sti
jg
stos
pop
pop
outs
repz
xlat
push
rcl
(bad)
rcr
cwde
iret
push
adc
enter
ins
ret
les
xchg
arpl
cmps
push
and
lods
push
sub
in
xor
inc
xchg
jge
and
inc
add
pop
nop
test
inc
jo
ins
pusha
cmp
mov
icebp
cmp
std
xchg
cmc
xchg
repz
pushf
cld
in
inc
test
(bad)
mov
xchg
mov
movs
push
push
(bad)
mov
(bad)
push
jnp
pop
mov
(bad)
fiadd
fnsave
cmps
(bad)
mov
je
bound
das
shl
int
fwait
jae
push
jnp
mov
je
out
fldenv
movs
lea
stos
pop
dec
(bad)
or
call
lds
jmp
or
daa
das
icebp
mov
icebp
mov
arpl
repnz
mov
setns
push
pop
ret
push
mov
aam
mov
or
and
and
xchg
jle
push
shl
pop
retf
add
xor
sub
push
mov
mov
xchg
xchg
pop
stos
out
pop
and
xor
data16
inc
test
mov
data16
cmp
fs
sti
jbe
in
sbb
or
daa
or
mov
pop
ins
pusha
pop
mov
dec
dec
cmp
movs
or
jp
enter
in
mov
das
in
mov
stos
cld
push
mov
push
and
push
out
xchg
cmc
das
(bad)
outs
xchg
jne
dec
push
jnp
out
std
push
sub
daa
mov
cmp
dec
pushf
fiadd
test
hlt
adc
pop
cmp
add
les
loopne
out
stos
fdivr
fnstsw
xchg
and
sub
xchg
and
icebp
mov
inc
sbb
retf
mov
stos
enter
imul
add
aaa
sbb
xlat
cs
movs
out
sbb
cmp
jg
call
inc
js
dec
cmp
add
dec
data16
out
or
lods
jp
bound
or
push
jge
sub
dec
jp
sub
clc
fs
je
push
push
pop
push
cdq
dec
jne
jno
or
cmp
push
gs
and
mov
inc
sub
daa
dec
xor
push
(bad)
inc
(bad)
pop
mov
xchg
sbb
cmp
jmp
mov
fisubr
nop
jle
add
mov
or
test
imul
push
mov
sbb
fs
xchg
inc
mov
push
and
stos
fwait
pop
pusha
daa
ins
daa
mov
xchg
clc
sti
cmp
xchg
adc
pop
mov
ret
and
inc
adc
imul
loop
shl
fdivr
daa
pop
test
dec
or
das
mov
shl
test
add
mov
xchg
and
pop
inc
fstp
iret
jno
mov
pop
test
cwde
mov
push
xchg
and
rol
adc
ins
dec
push
pop
add
lea
xor
in
rcr
dec
inc
mov
mov
and
mov
je
or
sub
mov
rcr
ja
sbb
arpl
push
ror
cmp
int3
xchg
cmps
push
adc
mov
mov
test
dec
pop
js
sbb
cmps
dec
nop
cmp
fisttp
sub
or
ret
push
push
add
xor
adc
push
in
sub
repnz
mov
nop
leave
push
inc
dec
mov
mov
mov
and
test
push
sar
lock
lock
mov
and
pushf
xor
ds
inc
fs
xor
xchg
dec
xchg
sbb
sub
inc
out
and
(bad)
int
inc
out
dec
shl
sub
imul
xor
imul
xor
sub
icebp
jle
mov
dec
movs
push
stc
xchg
sbb
sub
fwait
outs
xchg
add
mov
xor
dec
test
fnstsw
repnz
xor
add
push
cs
cld
lahf
ds
xor
pop
in
xor
xor
pop
ja
sbb
sbb
rol
mov
sbb
push
jbe
call
add
xchg
(bad)
cld
xchg
cld
cli
ret
inc
xchg
pop
and
cmc
sbb
sbb
in
inc
cld
xchg
pop
dec
pop
add
je
jecxz
mov
sbb
mov
mov
jg
jg
adc
loop
and
popf
pop
scas
and
data16
cmp
arpl
and
test
out
mov
mov
psraw
bound
pop
es
pop
add
and
pop
jbe
leave
retf
mov
les
test
mov
push
pop
test
mov
or
movs
fsubr
cs
dec
dec
cmps
fisttp
push
add
sbb
or
shr
adc
jge
xlat
adc
sub
sbb
arpl
jge
enter
fist
mov
jne
push
xor
mov
or
mov
fmul
sahf
fsub
fsubr
loopne
push
xor
fisttp
mov
push
dec
adc
jecxz
pop
add
mov
jae
xor
call
lahf
ins
jp
xchg
xlat
pushf
sub
mov
lahf
mov
jg
clc
push
fcomp
inc
or
jo
loope
mov
fiadd
inc
push
adc
fmul
jmp
imul
sbb
sub
xor
inc
mov
mov
jmp
retf
inc
sub
cmp
lods
push
cld
mov
les
push
cmp
scas
xchg
cmps
xchg
hlt
inc
adc
shl
shl
scas
xor
mov
retf
stc
dec
jl
ja
wrmsr
out
push
movs
aaa
popf
jp
mov
push
repnz
sub
repz
rsqrtps
add
mov
adc
dec
mov
push
inc
ret
je
and
int
(bad)
push
aam
hlt
mov
(bad)
out
mov
pop
push
jle
xor
or
repz
test
pop
dec
stc
sub
(bad)
jae
jne
jbe
cld
mov
pop
dec
repz
sbb
cmp
xchg
and
out
or
shl
and
pop
psllw
and
mov
or
xor
mov
xchg
or
mov
push
in
mov
mov
mov
xor
add
mov
mov
cmp
cmp
aaa
aas
ss
popa
inc
das
or
inc
add
fisttp
and
pusha
ret
fisttp
and
mov
(bad)
stos
(bad)
popf
mov
outs
dec
and
mov
jmp
das
mov
mov
(bad)
(bad)
mov
or
add
mov
data16
clc
jns
test
mov
aas
add
jle
push
(bad)
jo
sti
aad
scas
loopne
cmp
movs
push
xchg
leave
shl
loopne
push
js
lds
dec
hlt
inc
repnz
mov
les
clc
mov
shl
xor
arpl
fcmovne
sbb
loop
and
jae
mov
and
aam
outs
or
lds
test
mov
cmp
call
(bad)
pop
loop
mov
in
adc
and
cdq
das
pushw
pop
dec
out
gs
cmp
and
adc
gs
out
test
mov
imul
and
adc
and
mov
in
mov
(bad)
and
ror
xor
xchg
mov
pop
mov
xchg
and
gs
cli
cmp
adc
fdivr
les
inc
push
rcl
pusha
dec
mov
into
mov
jb
inc
and
xchg
push
push
imul
mov
mov
xchg
test
ins
pushf
test
fstp
loope
push
dec
xchg
stc
inc
fwait
lahf
xor
imul
repz
adc
(bad)
mov
adc
push
push
xor
imul
loopne
inc
pop
mov
cmp
(bad)
cmps
sub
push
in
mov
nop
sbb
mov
sbb
test
mov
push
sbb
or
je
ins
test
add
test
xor
jle
add
lock
push
sahf
push
je
pop
or
fistp
rol
cli
fs
mov
mov
jp
and
jne
rep
sahf
in
out
sbb
xchg
cld
pop
add
sub
jae
push
cmp
out
lods
cld
inc
pop
add
and
mov
or
mov
stos
es
mov
mov
sub
add
sbb
mov
sar
cdq
in
or
add
push
mov
jbe
jle
jmp
movs
addr16
or
cmp
adc
mov
jmp
xchg
or
fist
jb
dec
push
adc
(bad)
and
mov
jns
jno
popf
in
ja
(bad)
jp
fisttp
adc
jmp
mov
dec
add
loope
push
jae
cmp
cdq
pop
loop
nop
fwait
ja
leave
lahf
xor
loop
dec
mov
outs
stc
xor
imul
hlt
sub
push
movs
mov
pmulhuw
daa
stc
inc
sbb
add
inc
(bad)
js
xchg
xor
mov
sar
in
ins
adc
sub
mov
iret
push
push
cmp
xchg
cmps
sar
jecxz
fst
push
pop
push
push
mov
fisub
dec
enter
xchg
or
cmovns
mov
jns
mov
push
call
into
cmp
repnz
test
loope
mov
outs
repnz
mov
fadd
and
sub
inc
xchg
cdq
and
cwde
xor
mov
dec
jno
and
mov
cmp
jmp
inc
cmps
lods
mov
xchg
fstp
scas
and
cli
ret
in
je
or
mov
dec
test
mov
ret
mov
mov
pop
jl
fst
xchg
ret
push
es
fistp
mov
scas
mov
cmp
or
int3
xchg
pop
sub
sub
fiadd
daa
jmp
fcomp
pop
fbld
mov
retf
leave
iret
lahf
imul
push
xchg
mov
test
cld
xchg
fyl2x
xchg
mov
daa
idiv
test
popa
pop
xlat
ins
pop
dec
icebp
into
test
inc
inc
push
lods
inc
fild
xchg
jp
daa
test
(bad)
in
sub
test
cmps
loopne
int3
std
xor
dec
push
clc
xchg
shl
aam
loopne
and
aas
push
cli
(bad)
rcr
imul
inc
test
or
test
int
xor
xchg
test
ret
and
or
mov
and
or
aas
mov
jne
pop
(bad)
movs
call
in
inc
test
cmps
add
adc
call
mov
dec
adc
and
out
test
cmp
inc
pop
arpl
data16
push
cld
and
scas
rol
adc
daa
fs
popa
bound
rol
pusha
pop
hlt
push
std
add
push
and
loop
xlat
or
jae
stc
and
cmp
fdivrp
push
sub
mov
push
push
mov
cmp
xor
and
mov
sub
and
xchg
xor
add
mov
int3
mov
mov
sahf
(bad)
cli
aas
cli
jbe
or
aaa
sub
js
sub
xor
movs
cmp
push
ins
xchg
inc
push
arpl
nop
push
inc
into
cwde
cmp
and
jmp
shr
fisttp
cwde
or
mov
adc
ja
stos
loope
cmp
inc
sbb
xor
in
jbe
cmp
push
repz
cmps
pop
mov
bound
mov
mov
ss
mov
stc
mov
sbb
add
out
clc
in
sbb
add
inc
or
ins
test
inc
ss
pop
dec
fwait
mov
adc
sbb
push
push
and
ret
popf
mov
cmp
fisub
stc
jnp
dec
sahf
push
xor
xchg
(bad)
stc
dec
std
mov
retf
retf
je
js
stos
jl
pop
iret
xchg
rol
les
cmp
pop
mov
gs
imul
mov
js
inc
sti
sub
mov
(bad)
sbb
js
imul
mov
in
mov
scas
jne
push
fild
mov
mov
es
pop
aad
sbb
cs
in
ins
lods
dec
push
push
mov
xor
add
sar
dec
pop
or
movs
add
push
pop
xchg
aaa
fistp
sar
sub
and
outs
cmps
repnz
adc
jbe
inc
and
in
ins
mov
repnz
movs
mov
lods
xchg
(bad)
xor
out
cmc
iret
aad
rcl
xor
(bad)
dec
dec
and
xchg
leave
out
add
xor
int
stos
addr16
pusha
mov
les
sub
add
inc
jp
or
mov
std
mov
mov
jg
fnsave
aaa
jno
mov
push
jno
not
test
pop
cmp
push
sbb
stos
inc
xor
(bad)
adc
mov
push
rol
(bad)
int
rol
jge
pop
sub
loope
imul
xchg
into
sbb
push
mov
movs
ja
movs
outs
or
inc
loop
or
lds
in
adc
(bad)
sub
jmp
push
mov
out
jg
jge
cmp
test
sbb
push
fcom
js
aad
sar
and
mov
xchg
int3
push
retf
dec
xor
xor
inc
pop
and
push
pop
add
call
mov
pop
add
loope
loop
push
mov
pop
push
pop
add
dec
loope
mov
fiadd
in
xchg
sbb
adc
ror
inc
rol
jne
fwait
lahf
adc
aas
mov
or
add
adc
ret
fdiv
adc
mov
jb
imul
and
dec
(bad)
dec
popf
dec
adc
push
pop
pop
sbb
mov
icebp
add
inc
(bad)
dec
jne
mov
sahf
push
mov
jecxz
adc
or
addr16
push
mov
mov
dec
ret
xchg
jecxz
repz
fstp
xchg
mov
pop
test
dec
adc
push
arpl
(bad)
sub
ds
add
adc
mov
xchg
fisttp
push
cmp
retf
mov
out
(bad)
clc
in
cmp
jge
mov
lahf
mov
xor
test
push
xchg
sti
ins
aad
(bad)
out
dec
neg
mov
add
shl
stos
mov
sbb
std
jne
repz
cmp
pop
lods
out
pop
jno
mov
(bad)
jl
pop
test
sbb
push
push
loopne
mov
hlt
inc
mov
rol
retf
xchg
jl
movs
push
mov
pushf
push
shr
out
xchg
add
xchg
lahf
aas
push
popf
xchg
jle
call
int
ss
cld
sbb
mov
mov
and
cli
jle
xchg
out
inc
retf
xchg
ret
add
push
mov
or
add
dec
fucomi
jbe
pop
enter
dec
add
and
fidiv
stos
mov
pop
scas
and
dec
dec
sbb
xor
movs
neg
cli
jns
jne
mov
fst
cs
mov
push
pop
sbb
cmp
cld
push
add
(bad)
in
out
sbb
and
jle
stos
pop
push
pushf
mov
in
sub
xor
stos
mov
scas
push
or
xor
adc
out
(bad)
dec
xlat
in
xchg
call
test
call
call
jecxz
push
aad
lock
loope
and
fldcw
pop
popf
jmp
xchg
bound
xchg
or
int
stos
xchg
cmps
stos
xlat
repz
inc
outs
fwait
sbb
test
sti
test
lahf
jae
xor
jmp
dec
xchg
popf
call
mov
pop
aam
inc
pop
sub
fisttp
pop
cmp
inc
mov
mov
stc
mov
jb
xchg
ret
and
lock
inc
(bad)
ror
repz
das
sub
xchg
aad
pop
cwde
lods
popf
cmp
jg
aas
call
(bad)
mov
fadd
jecxz
stos
pushf
es
pop
xor
pop
hlt
mov
jecxz
mov
add
pop
inc
pop
xchg
(bad)
xlat
pop
adc
sub
call
cmc
invd
iret
fcom
lods
jle
xchg
mov
imul
jp
popa
push
jl
mov
xor
out
sbb
sar
sbb
dec
iret
pop
shr
sub
xor
cwde
add
adc
or
sbb
push
mov
mov
ret
aas
inc
or
fld
lods
cs
aam
(bad)
or
inc
jbe
pop
imul
or
or
and
xchg
mov
and
gs
mov
pop
(bad)
ret
add
dec
mov
pop
add
sbb
push
dec
pusha
mov
jns
push
xor
add
pop
frstor
loop
mov
jmp
scas
push
adc
and
mov
lea
cmp
add
and
and
pop
outs
cmp
xchg
icebp
jg
aam
xor
or
sti
mov
inc
setae
and
or
fmul
mov
outs
mov
xchg
out
(bad)
push
push
js
sub
mov
xchg
inc
mov
xor
int
sub
je
je
xlat
mov
lahf
stc
xchg
mov
mov
sub
or
xor
jge
hlt
inc
push
inc
test
(bad)
int3
inc
xor
mov
and
jl
not
add
cmps
push
mov
in
xor
jmp
pop
shl
push
sbb
in
add
in
test
mov
inc
inc
pop
sbb
mov
mov
call
mov
push
mov
rcl
inc
stos
and
push
adc
nop
xchg
mov
out
or
icebp
outs
xchg
sub
lea
jnp
mov
pop
xchg
jns
repz
hlt
fisttp
jne
test
xor
imul
sbb
jl
push
xor
jo
cmp
push
into
(bad)
(bad)
and
daa
cmp
outs
stc
stos
popa
dec
test
or
jnp
sbb
clc
sub
cmc
aaa
imul
ficomp
test
(bad)
sbb
call
fstp
inc
ss
jg
hlt
outs
out
mov
sub
lds
mov
(bad)
mov
xchg
adc
lea
fld
mov
mul
cmp
int
sbb
xlat
adc
inc
cmps
in
out
hlt
mov
push
(bad)
dec
imul
mov
sbb
rcr
mov
mov
push
cmp
pop
popa
jge
in
out
out
and
aam
lods
imul
or
aaa
(bad)
sbb
push
jle
inc
ret
and
cmp
or
shr
sahf
lods
and
xchg
lahf
addr16
sti
ins
jns
inc
mov
fcom
sbb
shr
xchg
sahf
fadd
sbb
call
mov
ss
das
push
std
int3
fstp
(bad)
inc
repz
and
adc
dec
retf
push
cmps
daa
(bad)
cwde
dec
fbstp
in
xor
(bad)
retf
mov
or
add
push
pop
jg
enter
(bad)
dec
add
out
std
aad
jmp
in
(bad)
sbb
push
and
xchg
imul
add
add
dec
rol
js
mov
dec
sbb
jnp
rol
or
adc
retf
or
dec
push
push
jmp
je
nop
adc
sub
call
push
ins
add
fcomp
es
je
leave
lahf
cmps
dec
lds
out
shl
add
inc
sbb
or
dec
jbe
call
mov
jno
iret
jmp
jl
popa
pushf
ins
sbb
cwde
std
loope
mov
adc
sub
(bad)
sahf
sti
pop
lds
inc
aad
dec
add
dec
mov
inc
mov
and
inc
cmps
jne
pushf
jns
push
adc
push
test
shl
push
iret
mov
inc
inc
mov
in
or
mov
nop
inc
add
lods
cdq
data16
icebp
push
das
fist
ror
call
xchg
fcmovu
shr
sbb
sbb
cld
jb
fldcw
jge
mov
push
sbb
out
ret
hlt
out
ret
ret
push
mov
lea
cmp
scas
lock
sub
icebp
je
adc
or
jo
imul
jae
sbb
xchg
(bad)
repz
retf
jns
ja
xchg
cs
cmp
seto
popf
mov
sbb
push
lahf
cmp
mov
in
and
mov
fnstenv
jecxz
pop
inc
push
mov
iret
xor
mov
dec
cld
push
cmc
mov
and
dec
das
std
jns
cmps
cmps
mov
fcomp
dec
(bad)
imul
mov
sbb
mov
pusha
outs
loopne
fadd
cli
xchg
mov
sub
mov
aam
ins
out
pushf
test
jl
jno
cmp
xor
xchg
out
fidiv
mov
scas
ins
jmp
mov
and
neg
sbb
pop
fldcw
in
xchg
jmp
inc
fwait
mov
adc
and
pusha
(bad)
lods
outs
ret
arpl
push
pop
shl
and
sbb
add
jns
and
or
jns
sbb
(bad)
(bad)
shr
das
int
dec
cdq
and
or
stos
push
pushf
mov
scas
cdq
mov
lahf
ltr
sbb
pop
out
stos
xor
cmp
mov
push
(bad)
push
inc
aas
or
std
adc
and
enter
sub
loope
loopne
mov
(bad)
xlat
fs
cli
repz
cmp
pop
jge
mov
inc
sub
out
add
xchg
push
pusha
mov
mov
into
dec
xor
or
in
jnp
cli
mov
(bad)
stos
xlat
xchg
pop
and
ins
dec
pop
mov
aam
pop
cmp
or
shr
push
push
ins
fstp
add
ret
jns
imul
fsubr
mov
sbb
clc
jno
lds
jbe
ss
inc
ins
rcl
xor
mov
mov
dec
shr
mov
out
(bad)
repnz
(bad)
retf
push
repz
out
movs
and
test
pop
sub
sbb
nop
aam
fsubr
and
sahf
sub
xor
iret
ror
rcr
retf
jae
pop
mov
inc
cli
mov
popa
push
popa
add
mov
mov
mov
sbb
dec
and
cmp
inc
xlat
xchg
xchg
clc
mov
(bad)
push
mov
das
cmps
aas
inc
daa
fisub
jnp
out
push
lods
leave
in
rcr
fimul
test
test
xor
movs
inc
pop
test
in
pop
sub
xchg
into
inc
mov
dec
adc
test
jmp
inc
(bad)
cmp
or
inc
leave
jae
push
fimul
jae
xor
scas
adc
jp
cdq
and
ja
inc
enter
hlt
outs
(bad)
mov
ret
out
adc
pop
fisub
sti
xchg
stos
pop
ret
dec
add
sub
or
sub
jbe
enter
inc
cwde
fs
test
mov
mov
mov
dec
clc
dec
or
shr
(bad)
shl
add
inc
movs
push
ins
and
ja
(bad)
push
mov
cmp
jl
cmp
loopne
ins
test
sahf
(bad)
neg
mov
fild
ins
shl
pusha
cld
loope
fdivr
and
pop
mov
adc
shr
scas
jl
pop
call
pushf
dec
(bad)
aaa
adc
mov
push
cmp
pusha
adc
shl
inc
mov
retf
es
jns
sbb
dec
push
jmp
mov
dec
and
jns
jb
sub
push
xor
xchg
mov
and
xor
pop
mov
push
xchg
cmps
mov
aad
sbb
cs
inc
jae
adc
movups
pushf
repnz
xlat
gs
fiadd
(bad)
cmc
call
dec
adc
pop
lahf
pop
and
sar
xchg
jnp
int
xchg
sub
jnp
pop
sar
mov
adc
sub
fidivr
or
push
lds
repz
mov
test
xor
(bad)
and
push
test
repnz
gs
push
or
cmp
imul
sbb
aaa
repz
jecxz
mov
(bad)
outs
cs
(bad)
dec
xor
ror
mov
mov
aad
xor
dec
test
outs
call
lods
scas
scas
cdq
fxch
xchg
shr
fnstcw
fbld
sbb
jbe
std
mov
sbb
pop
sahf
push
mov
xor
ja
pop
fbld
ins
mov
rol
jle
rol
push
adc
xchg
dec
gs
mov
out
adc
jmp
push
(bad)
not
adc
xchg
stc
and
(bad)
fdivr
aaa
and
aam
add
inc
outs
pop
es
jecxz
std
aad
xor
test
mov
test
lods
(bad)
rcr
jns
mov
out
sub
in
dec
(bad)
inc
mov
jns
mov
jns
lods
mov
mov
mov
cmp
dec
fninit
sub
lods
lods
mov
push
out
data16
cmp
loope
aas
int
ret
outs
gs
ror
push
call
add
(bad)
sbb
pop
xor
xor
(bad)
jbe
gs
imul
fidiv
sub
inc
ins
jp
cmp
and
mov
cmp
pop
dec
push
cmps
test
stos
xor
aaa
cwde
call
test
pop
mov
nop
xor
inc
pop
cmc
pop
jecxz
adc
pop
add
mov
pop
out
call
lods
xchg
in
add
add
nop
inc
sbb
dec
clc
cwde
mov
sahf
or
pushf
jge
mov
push
aaa
mov
lea
add
or
loope
movs
lahf
xor
dec
inc
dec
repnz
outs
xchg
dec
cmp
test
cmp
cmp
call
stos
data16
pop
push
movs
cmp
xchg
jle
add
loope
dec
add
outs
into
out
jo
fsubr
lahf
nop
xlat
pushf
test
fwait
in
push
test
cwde
cli
push
cmps
sub
fbld
mov
adc
cmp
cmc
into
sti
xchg
or
and
icebp
xor
mov
(bad)
sub
pop
pop
mov
cmp
sub
sub
dec
les
jg
inc
pushf
inc
push
loop
into
enter
xchg
div
xchg
loop
outs
mov
retf
pop
fild
inc
stos
sub
sbb
div
mov
push
cmps
movs
dec
retf
imul
fcmovnu
mov
stos
leave
push
cmc
mov
and
cld
mov
cmps
push
jo
aas
and
sub
xor
jl
xchg
fst
bnd
movs
xchg
nop
int3
loopne
leave
and
push
(bad)
or
jbe
mov
into
inc
xchg
les
jg
dec
add
sub
shl
in
inc
ss
mov
fcmovu
inc
jo
rcr
jge
daa
mov
sbb
pop
sbb
inc
cmp
xor
out
rcr
cmc
inc
jnp
ret
setns
adc
loope
xlat
dec
retf
mov
rcr
movs
popa
jp
jmp
into
inc
xlat
inc
into
pusha
cmp
jmp
outs
or
mov
adc
pushf
push
ret
jnp
xchg
(bad)
mov
jbe
cli
push
lods
jecxz
and
inc
ret
mov
mov
mov
int
inc
pop
mov
cmp
sbb
cmc
jnp
and
or
cmp
cdq
jmp
daa
mov
bound
pavgb
xchg
pop
test
inc
sar
jmp
mov
in
and
push
cmp
jne
inc
icebp
(bad)
adc
sub
stos
push
mov
in
and
sahf
sub
pop
adc
dec
mov
push
xor
pop
add
add
xor
aas
xchg
pop
and
cmp
inc
xchg
loop
int
fidivr
cmp
outs
xor
std
mov
fcmovnu
sub
shl
push
jecxz
ds
adc
pop
int3
icebp
mov
xor
mov
jle
jp
xor
fstp
push
jmp
sbb
xchg
adc
mov
push
xchg
inc
lock
lea
jle
jg
dec
cmp
and
xchg
mov
in
adc
xchg
arpl
cmp
jge
call
pop
sti
std
xor
pop
sbb
pop
xor
cdq
mov
imul
inc
sub
mov
adc
jp
ret
mov
cs
push
lock
mov
(bad)
cmps
jo
bound
sub
jmp
ins
cmp
sbb
mov
fidiv
scas
adc
adc
push
sub
push
bound
stc
movs
lahf
imul
mov
sub
dec
jbe
fst
cs
add
lock
sbb
cli
xchg
sar
sahf
jmp
pop
xor
push
cmp
imul
fbstp
(bad)
jmp
mov
pushf
mov
icebp
sub
ins
pop
je
sbb
xchg
in
ror
mov
inc
sbb
xchg
xchg
jns
mov
aas
ds
xchg
adc
sbb
xor
xor
scas
popf
cmc
jae
jnp
inc
jp
pop
test
jo
ss
je
in
push
push
inc
and
dec
push
test
xchg
pop
inc
jle
cmps
push
mov
xchg
test
xchg
inc
jp
or
data16
test
shr
inc
pop
sar
retf
push
pop
sbb
(bad)
mov
gs
and
dec
scas
cmp
mov
clc
ins
das
mov
ss
add
dec
xor
inc
mov
lock
xchg
or
add
aam
adc
pushf
and
les
adc
xchg
scas
outs
fcomp
push
sub
push
jp
jge
in
cmp
in
shl
daa
and
inc
sbb
mov
xchg
cmp
push
jbe
inc
repnz
push
xchg
jg
push
xchg
push
js
mov
mov
sbb
jl
arpl
push
mov
mov
lock
fimul
mov
jne
dec
cmps
data16
jo
aad
call
sub
add
ins
mov
jge
jmp
or
adc
xchg
sub
inc
xor
dec
sub
fcomp
imul
xor
push
or
add
xchg
add
pusha
sbb
stos
sub
or
or
and
popf
fcom
jns
cmps
inc
xlat
rol
stos
hlt
dec
push
xor
mov
mov
std
loope
mov
aaa
into
sbb
lods
pop
xor
mov
ins
mov
jg
push
and
mov
mov
mov
int
cmp
(bad)
mov
xchg
sbb
retf
dec
test
loop
cld
adc
mov
sbb
int3
xchg
jo
mov
mov
add
(bad)
cs
lds
shl
dec
movs
div
bound
mov
dec
int3
pop
movs
xor
xor
sub
dec
mov
test
xchg
adc
shl
jne
mov
icebp
lahf
call
fadd
aaa
jne
test
hlt
inc
shl
cmp
xchg
in
ins
adc
pop
xor
mov
and
inc
sub
je
inc
jae
pop
inc
rcl
mov
scas
lods
leave
ss
mov
pushf
mov
aaa
jg
fbld
dec
(bad)
sub
not
adc
xchg
sub
pop
mov
dec
xor
movs
vpmovsxbw
xor
add
leave
sahf
in
cmp
mov
mov
jb
mov
dec
test
outs
(bad)
cmc
cli
fistp
sti
jae
fisttp
add
pop
mov
call
test
jae
mov
and
cs
loopne
neg
inc
clc
out
lahf
jl
mov
(bad)
sub
mov
sbb
jne
fcom
mov
xchg
jns
xchg
scas
xchg
pop
shr
fisttp
sub
rol
int
fadd
lock
sub
mov
mov
jo
mov
cmc
xchg
stos
mov
cmps
add
pop
hlt
mov
jp
mov
push
loopne
mov
xor
es
test
pop
jno
jle
aas
cmps
mov
shr
mov
cmps
pop
push
lds
pop
mov
push
mov
inc
fsub
sbb
xchg
mov
inc
pop
outs
lds
xchg
sub
mov
xchg
inc
cmp
nop
jo
pop
stc
icebp
push
mov
div
cs
icebp
loop
mov
nop
cs
adc
popa
sbb
inc
movs
add
xchg
les
xor
test
sbb
fnsetpm(287
inc
push
ds
mov
test
push
mov
mov
aam
jno
push
adc
out
fwait
pop
sbb
adc
bnd
and
adc
pop
mov
jne
jno
dec
call
lods
xchg
mov
pop
push
scas
mov
les
cld
fisttp
lods
ss
mov
jecxz
jecxz
pop
shl
fisttp
lea
cdq
cs
adc
mov
movs
mov
(bad)
add
pop
dec
mov
(bad)
xchg
fbstp
mov
sub
scas
push
daa
sbb
push
push
adc
lods
fcom
cmps
cli
ins
mov
mov
and
pop
inc
nop
add
pop
and
nop
addr16
xchg
sub
aam
div
mov
push
push
xchg
aaa
adc
stos
xchg
test
sbb
icebp
dec
sbb
popa
xor
xor
push
dec
mov
cmps
aam
jmp
xchg
mov
pop
dec
into
xor
jb
jbe
(bad)
mov
and
ret
ds
imul
int
shl
pop
aad
retf
mov
push
mov
mov
dec
cmc
pop
dec
jo
das
sbb
add
scas
shr
pusha
and
sbb
into
mov
retf
mov
xchg
popa
aaa
sbb
and
inc
push
lock
std
inc
sub
daa
pop
sub
aaa
mov
retf
push
in
inc
ret
xlat
or
push
ret
sub
jecxz
popa
push
dec
mov
or
in
inc
push
add
xor
jbe
ins
sub
dec
iret
(bad)
inc
hlt
push
xor
jno
jge
mul
push
adc
cwde
sbb
dec
jmp
pop
sbb
xor
pop
push
cmc
and
clc
cmp
cmp
mov
mov
loope
test
ins
ds
(bad)
pop
movs
test
mov
xor
stos
adc
jbe
push
or
and
mov
loope
fistp
sub
dec
pop
push
movs
inc
fsub
mov
push
mov
out
and
movs
xor
lds
sub
xor
loopne
stc
push
loop
lock
hlt
cmps
dec
xor
movs
lods
pop
call
mov
pop
les
sbb
jecxz
sub
out
mov
ja
retf
in
dec
sub
push
xor
inc
xchg
mov
adc
mov
and
dec
and
xor
daa
call
(bad)
inc
add
(bad)
out
pop
iret
ss
add
rcl
push
mov
sub
or
add
jp
or
(bad)
test
dec
movs
dec
(bad)
outs
add
fmul
fnsave
lds
movs
cmp
cmp
push
hlt
jecxz
jae
add
inc
cwde
stos
cmps
(bad)
ds
push
movs
cmp
cmp
xlat
out
out
in
and
adc
xchg
sub
xchg
mov
test
stos
sub
push
aad
std
adc
imul
cld
out
mov
popa
xor
inc
mov
inc
or
sar
ret
hlt
push
cmp
inc
div
xor
imul
xlat
mov
loop
and
inc
and
loope
aas
(bad)
in
and
lds
mov
scas
dec
jle
jae
shl
fmul
sub
jmp
fwait
xchg
fnsave
sbb
sti
fs
pop
dec
mov
pop
out
jo
cmp
pop
out
add
jne
pop
ret
push
xor
xor
out
xchg
imul
loop
cs
div
jg
push
sbb
inc
dec
shl
in
add
sar
cwde
pop
mov
add
mov
jnp
xchg
sub
pop
cmc
push
xor
pop
stos
loopne
in
inc
dec
retf
xchg
mov
ret
jnp
fcomp
lock
dec
call
in
xor
jmp
lods
mov
in
test
jmp
iret
gs
add
fwait
std
xor
jno
adc
xlat
jne
gs
mov
lahf
sbb
pop
mov
outs
and
fbld
shl
dec
adc
rol
ds
mov
sar
loopne
pop
adc
push
add
ss
jb
retf
outs
shl
push
arpl
or
movs
out
push
fs
or
enter
leave
call
xlat
push
push
fisttp
sbb
mov
sub
gs
ss
(bad)
pop
push
sbb
cdq
adc
mov
jmp
lea
lahf
popf
ficomp
inc
mov
mov
pop
leave
loop
fwait
cmp
cmps
in
out
test
adc
jmp
inc
mov
std
push
mov
in
pusha
icebp
inc
in
shr
and
(bad)
std
dec
inc
jmp
add
(bad)
aad
push
jle
or
test
xor
cmps
push
lahf
xor
cmp
vmovq
sbb
jecxz
xor
out
in
retf
and
(bad)
int3
sub
inc
sub
std
xchg
push
scas
jne
or
lock
popf
and
outs
arpl
sbb
js
jne
fcomip
cmc
enter
call
push
loopne
int3
outs
loopne
xor
pop
das
pop
and
(bad)
cmc
retf
in
sbb
je
push
std
test
cmp
(bad)
push
(bad)
lock
push
and
into
lods
cmps
addr16
fnstcw
xor
loop
pop
pop
jle
fsubr
faddp
ret
mov
ins
cmp
cld
out
lea
fxtract
(bad)
pop
jmp
loopne
retf
pop
dec
jae
pushf
ret
cmc
mov
jmp
fsub
mov
inc
inc
arpl
fs
adc
push
loop
or
loop
mov
outs
pop
push
je
bound
sbb
std
ins
loope
ret
xor
pushf
xor
ds
(bad)
scas
lock
sar
out
sbb
in
pop
sub
imul
sbb
adc
jnp
adc
jno
add
xchg
movs
fsub
adc
popf
or
inc
aaa
push
xchg
xor
aam
mov
or
xchg
movs
push
(bad)
jmp
pop
ror
dec
popf
lods
inc
or
jne
sub
hlt
push
and
rcl
or
adc
int
test
jo
jg
xchg
jg
jp
mov
and
and
xlat
or
sub
inc
inc
test
xor
mov
movs
add
(bad)
mov
ror
pop
repnz
mov
pop
mov
repz
sahf
fimul
repnz
and
loop
ds
and
stc
and
jge
and
pusha
dec
jbe
adc
xor
push
(bad)
repnz
or
movs
push
adc
rcl
in
popf
or
mov
xchg
ja
arpl
std
sub
xchg
xchg
fidivr
lahf
cmp
lods
fist
cld
lods
test
call
dec
loopne
xchg
mov
xlat
mov
fisttp
pushf
lods
and
jbe
jmp
stc
dec
aaa
inc
gs
mov
mov
test
mov
shl
mov
xchg
xor
cs
mov
cmps
xchg
cwde
xchg
les
gs
mov
mov
xor
out
neg
js
add
push
mov
adc
pop
cmp
xor
movs
nop
iret
dec
inc
daa
jp
xor
lods
pop
mov
pop
adc
ss
adc
movs
mov
jne
fsub
in
loop
mov
sti
pop
rcl
pop
pop
pushf
inc
dec
mov
xchg
(bad)
jno
in
adc
les
and
mov
sub
stos
xor
xchg
jae
mov
xchg
ficom
adc
ror
xlat
or
bound
jl
or
mov
xchg
xchg
sti
rcr
packuswb
push
jmp
jle
stos
icebp
dec
jns
mov
jae
cli
mov
sub
sub
sub
cmp
push
sti
inc
pop
lahf
adc
xchg
test
mov
cmp
mov
sti
push
fisub
jo
jns
dec
or
xor
(bad)
movs
cld
mul
pop
scas
dec
bswap
cdq
fistp
mov
and
ins
pop
xchg
loope
fidiv
shl
pop
fnsave
test
cmps
addr16
dec
cmp
jns
mov
jle
xchg
xor
mov
jo
jne
cld
mov
xor
mov
mov
mov
cmp
push
sub
or
das
pop
or
jae
mov
outs
jge
and
pop
(bad)
je
shr
cmp
pusha
mov
enter
or
ficomp
clc
inc
pusha
jl
shr
push
pop
jne
push
dec
scas
popf
aaa
dec
imul
xchg
mov
push
out
sar
push
mov
dec
ins
sub
sbb
dec
xlat
push
jecxz
retf
xchg
stos
inc
inc
push
mov
push
test
pop
shl
push
xchg
(bad)
sub
sub
pop
xor
mov
lods
sahf
retf
test
and
cmps
stc
sbb
das
stos
test
(bad)
cmp
mov
in
ror
fldenv
sahf
push
push
(bad)
sbb
dec
test
sahf
pop
inc
aas
and
push
fisubr
xchg
lods
call
add
out
fcom
iret
dec
(bad)
aas
xor
inc
fidivr
mov
int
xchg
adc
and
pop
fs
rcl
cmp
xchg
data16
repnz
add
jbe
pop
pop
bound
pop
jp
jmp
sub
sbb
push
xchg
cdq
pop
ret
dec
add
ret
imul
test
cmps
jns
mov
call
cmp
adc
stos
adc
int
inc
inc
cwde
loope
scas
neg
out
sub
loope
ds
arpl
mov
movs
add
loop
cmp
jo
fdivr
xor
mov
ins
in
outs
sbb
out
loop
push
ret
popa
add
adc
stc
aaa
sbb
push
rol
data16
daa
and
lods
lods
cs
rcr
xor
ret
loope
mov
sbb
push
(bad)
pop
xchg
cld
inc
add
mov
sbb
inc
xchg
aad
mov
shl
and
dec
or
cmc
shl
pop
repz
dec
and
je
repnz
and
cmp
sbb
shl
mov
xor
adc
sti
jnp
pop
or
and
scas
dec
je
sub
jb
shl
retf
out
jmp
test
or
xchg
xlat
retf
cmp
retf
cwde
push
mov
hlt
and
rol
xor
pusha
inc
jbe
arpl
jl
push
add
(bad)
jae
lods
imul
int3
cmp
push
inc
push
mov
jne
cmp
and
ja
fbld
(bad)
push
rcr
imul
cld
pop
adc
add
fwait
test
cdq
dec
pop
nop
jnp
stos
or
cld
test
ds
dec
xor
mov
fwait
inc
out
push
and
xor
pop
pop
out
mov
dec
push
push
stos
mov
mov
push
es
pop
daa
dec
dec
clc
cwde
ds
pop
mov
push
pop
(bad)
push
jns
aas
mov
sbb
cmp
jnp
stos
or
sub
jge
mov
leave
xchg
sar
mov
push
ja
stos
cld
push
daa
pop
in
(bad)
mov
ja
das
fst
test
jmp
or
(bad)
cdq
or
pop
mov
test
xchg
or
dec
out
ss
sbb
pop
cld
add
lock
stc
fiadd
mov
mov
mov
pop
xlat
dec
arpl
aas
push
fs
cmp
test
pop
movs
jne
and
pop
mov
mov
sar
pop
and
cmp
adc
jecxz
add
popf
into
cmps
cli
outs
mov
(bad)
mov
pop
and
xchg
ja
fisttp
sub
fs
push
pop
cmp
inc
mov
add
retf
mov
inc
sub
in
xchg
mov
mov
lds
fld
mov
inc
out
sub
jno
dec
lahf
aam
into
into
push
mov
mov
lock
fild
dec
lock
pop
call
jmp
(bad)
sbb
pop
dec
mov
call
and
ret
mov
cdq
fdiv
push
test
ss
test
pop
cmps
js
fwait
lods
pop
sub
aaa
sar
iret
fistp
adc
clc
sub
cmps
stos
dec
enter
dec
fcomip
jle
jno
ja
inc
and
hlt
imul
ins
ins
cmc
dec
loop
inc
jecxz
dec
stos
jo
add
xor
lods
push
sti
or
(bad)
dec
mov
adc
stos
mov
test
push
xor
or
jge
jns
inc
jmp
shl
cmp
fldcw
repz
stc
and
xchg
imul
rcl
clc
mov
xchg
or
lahf
xor
movs
add
xlat
(bad)
enter
pushf
aad
and
and
in
jge
mov
or
mov
adc
or
cmp
cdq
or
in
xchg
mov
jnp
xchg
test
inc
int3
addr16
stc
repnz
push
sub
icebp
or
mov
xor
xchg
into
xchg
fisubr
jbe
jmp
lea
push
jae
mov
stos
shl
cs
add
adc
ret
mov
loop
in
pop
mov
add
shl
inc
and
mov
dec
sbb
(bad)
loop
(bad)
and
xchg
xor
xchg
ds
dec
pop
inc
add
and
(bad)
jmp
iret
cmp
sub
sti
out
jg
add
in
aaa
jmp
cmp
pop
fisubr
sub
lea
mov
xchg
outs
xlat
loop
cmps
mov
jae
cmp
cli
loope
ss
and
add
outs
stos
xor
mov
sub
xchg
xchg
adc
sub
test
cmp
out
fisttp
mov
cs
pop
jp
mov
test
push
ins
cmps
mov
or
daa
mov
scas
outs
shl
and
call
arpl
xchg
clc
push
sbb
xor
in
dec
mov
adc
jmp
add
pop
dec
mov
int3
sbb
xchg
push
fcomp
sbb
outs
add
add
cmps
xchg
inc
push
adc
pop
call
jl
data16
mov
xchg
sbb
mov
mov
int3
fisub
sbb
nop
imul
dec
mov
in
fs
jno
dec
mov
loop
inc
push
jmp
inc
(bad)
adc
inc
imul
sub
inc
cmps
mov
lods
mov
pop
inc
adc
ret
bound
retf
or
loopne
in
mov
mov
call
clc
stos
fst
push
mov
int
bound
push
push
mov
ja
push
mov
jae
bound
cli
rcr
pop
iret
retf
inc
mov
mov
sti
out
add
fwait
jmp
dec
mov
jno
sbb
xor
aaa
dec
retf
in
(bad)
aad
push
test
mov
cdq
imul
xchg
mov
ffreep
in
fwait
push
xchg
ret
xchg
mov
or
arpl
cmps
sub
mov
or
loopne
mov
test
xor
cmc
in
mov
jns
or
fs
mov
xor
jmp
dec
aam
mov
clc
test
mov
in
inc
push
add
call
mov
push
jbe
mov
rol
aas
js
lahf
xchg
inc
vldmxcsr
frstor
aam
push
and
sub
adc
xor
call
inc
xchg
icebp
in
inc
dec
jb
inc
jmp
scas
jne
xchg
test
pusha
outs
gs
cmp
dec
aam
or
nop
push
fdiv
xchg
dec
xlat
cmps
sbb
arpl
shl
movs
retf
inc
jl
cmps
dec
loopne
pop
cmp
std
popa
fs
into
loopne
loope
sub
nop
push
retf
mov
cmp
xor
cdq
add
cli
ja
xchg
jle
mov
xor
jmp
jge
push
es
cmp
clc
ds
pushf
popf
fistp
dec
mov
or
cdq
cdq
hlt
popf
into
scas
dec
fld
pushf
mov
imul
in
jmp
push
pop
xor
cmps
and
sbb
cmps
mov
rcr
ss
lock
pop
xchg
pop
aam
xchg
adc
xor
push
xchg
nop
pop
jae
jl
jo
(bad)
sbb
pushf
sti
sti
cmp
mov
into
in
mov
cmp
add
bound
xlat
je
scas
jl
mov
pop
jecxz
push
(bad)
mov
cdq
jle
iret
imul
call
pop
ins
dec
int3
push
cld
cwde
cmp
mov
inc
movs
stos
dec
jo
inc
cld
mov
sbb
xchg
xchg
add
add
ins
mov
dec
cmp
pop
dec
add
mov
mov
mov
mov
mov
ds
dec
adc
addr16
aam
jbe
jl
mov
sbb
jmp
(bad)
inc
jle
jno
sbb
test
enter
dec
lea
mov
iret
push
jno
(bad)
enter
stos
inc
fdivr
pop
push
mov
nop
push
fldenv
add
sar
in
(bad)
stos
mov
push
fstp
shl
push
mov
inc
ret
test
int
xchg
mov
and
push
outs
cmp
and
inc
sbb
push
jae
into
push
aam
dec
xor
mov
fs
mov
in
repnz
cld
cdq
cmp
rcr
dec
cmc
push
test
lea
pop
jne
fwait
in
aas
not
or
push
jno
mov
push
lods
jmp
in
out
cmp
cmp
test
or
test
and
cs
daa
in
mov
cmp
inc
sbb
mov
stc
(bad)
mov
popf
inc
(bad)
sahf
outs
es
sub
xor
sahf
js
mov
jl
repnz
sub
bound
mov
push
outs
inc
sbb
push
(bad)
sub
cli
aaa
sbb
outs
xchg
ror
aaa
stc
pusha
test
xchg
outs
or
int
cmp
std
dec
pop
dec
(bad)
push
(bad)
loopne
inc
aas
sbb
adc
inc
lods
mov
fwait
icebp
jne
in
dec
dec
in
shl
ret
outs
pop
dec
aad
imul
mov
loope
pusha
aam
lock
cmp
add
mov
shl
sar
(bad)
lock
sub
popf
fcomp
push
outs
sub
movs
sbb
adc
adc
retf
lea
in
setno
mov
mov
(bad)
mov
shr
inc
xchg
adc
hlt
sub
jle
stos
or
fbld
movs
fbld
sbb
xchg
jno
jo
xor
cmps
mov
mov
movs
and
shr
push
cwde
repnz
pop
add
iret
(bad)
ins
xor
sbb
sbb
and
or
rcr
out
xchg
jno
in
inc
push
in
leave
std
push
push
les
dec
or
xchg
dec
dec
cmps
or
lods
jle
jo
sar
sub
mov
mov
bound
dec
dec
push
add
xchg
lahf
or
sub
lea
jmp
xor
xor
or
popa
dec
data16
jmp
push
or
movs
mov
push
(bad)
iret
ds
mov
arpl
loopne
mov
daa
jmp
mov
push
mov
adc
sub
push
xlat
xor
imul
pushf
lds
push
mov
mov
iret
mov
dec
data16
lock
cmps
mov
sub
(bad)
mov
in
sub
jo
rcl
pop
sbb
cmp
call
xchg
dec
call
leave
mov
test
pusha
jnp
fwait
or
outs
aam
jge
(bad)
jae
sub
fs
jno
sub
nop
sar
dec
test
aas
(bad)
mov
adc
fwait
lahf
xlat
jb
inc
vpackssdw
into
sub
cmp
jnp
fiadd
sub
inc
push
push
fmul
lea
jp
ins
retf
leave
cmp
cs
mov
cmp
jnp
fcomip
out
fcmovb
loope
ret
loop
lds
mov
rcl
(bad)
sbb
cmps
(bad)
(bad)
das
xchg
rcl
ja
shl
pop
cmp
and
jae
jp
mov
ss
fimul
sub
aad
mov
pop
mov
mov
ja
repz
mov
in
dec
mov
into
xor
stos
mov
fwait
ja
cmp
call
cli
add
sbb
dec
pop
loop
(bad)
cmc
pop
daa
dec
cwde
jne
mov
jbe
(bad)
xchg
int3
xor
sub
ja
fild
ficom
fsub
neg
ror
cmps
and
dec
pushf
mov
pop
push
imul
popa
fmul
shl
and
xor
ja
fst
mov
cmovnp
lahf
sbb
cmp
jp
call
push
push
test
ds
ror
(bad)
push
xchg
ror
cmp
jg
mov
or
jbe
mov
mov
mov
mov
push
jmp
(bad)
cmp
cmp
push
cmps
call
lahf
cli
mov
and
lods
icebp
and
push
xor
xchg
lods
mov
push
inc
xor
mov
sti
test
jno
cmps
mov
jg
imul
div
jae
xchg
dec
mov
nop
stos
stos
int3
daa
out
or
pushf
add
stc
mov
xor
pop
push
jbe
jmp
lock
lahf
pop
dec
aam
xlat
jns
push
and
jbe
lahf
repz
fwait
inc
loopne
fxch
jl
fdiv
jl
lods
mov
sbb
dec
cmps
shr
addr16
enter
xchg
mov
push
add
int3
push
ins
pop
in
sub
test
stos
clts
outs
stc
outs
jb
ror
fld
mov
adc
push
add
mov
push
mov
fs
gs
pop
mov
loop
lea
cmp
nop
in
and
aam
leave
mov
pop
push
les
and
call
dec
push
mov
test
scas
cmp
in
pop
push
es
ins
enter
dec
sub
jecxz
mov
fcmovnb
cmp
cld
jp
clc
pop
mov
cld
add
ins
fisttp
mov
sub
cmp
mov
lahf
out
psllq
sub
lahf
cmp
leave
test
cdq
pusha
xchg
pop
push
pop
les
addr16
movs
inc
jbe
sub
sbb
loop
sub
inc
packuswb
pop
fdivp
pop
cmp
cmp
jle
adc
in
inc
pop
pop
jb
cmp
shr
dec
fcmovb
xchg
mov
add
pop
adc
xchg
sti
ret
mov
inc
add
add
inc
ss
jb
lds
pop
and
fisttp
sbb
aad
or
or
mov
add
ret
jmp
mov
and
dec
inc
ss
lahf
or
movs
idiv
inc
hlt
addr16
idiv
and
ret
das
mov
out
ret
cmp
ja
lods
in
xor
ds
xlat
xchg
cmp
call
enter
mov
push
cld
addr16
mov
shr
out
bound
imul
inc
cmp
daa
cwde
outs
sbb
outs
or
pop
push
sbb
aaa
pop
pop
fdiv
cmc
ret
xor
xchg
aas
rcr
xor
inc
addr16
dec
in
popa
add
push
popa
jns
loop
mov
loope
(bad)
pop
xchg
cmps
leave
das
cmps
jge
fadd
pop
leave
outs
mov
and
cdq
outs
sub
dec
adc
xchg
fdiv
movs
aas
dec
xor
hlt
sub
and
(bad)
test
cmp
push
repz
xchg
adc
add
sbb
push
push
push
inc
inc
lock
inc
dec
stos
out
aam
stc
lods
enter
add
push
es
jb
ret
loop
int
call
cmps
mov
inc
inc
push
fmul
ins
(bad)
inc
imul
sbb
sbb
and
std
(bad)
pusha
out
aaa
movs
imul
adc
dec
pop
push
jnp
dec
cmp
xchg
inc
sar
fimul
dec
stos
jmp
jg
cs
sahf
adc
in
push
test
aad
arpl
fmul
jge
fstp
cmp
rol
mov
sbb
loop
in
leave
push
test
mov
fs
or
dec
fild
inc
inc
mov
pop
cld
add
lds
mov
xlat
hlt
cmp
mov
repnz
or
aad
ret
fs
iret
(bad)
retf
in
cld
and
sbb
dec
pushf
mov
into
xlat
fwait
push
push
jmp
xchg
jmp
sbb
inc
inc
mov
stc
int
and
xchg
cmps
or
sub
enter
ret
mov
test
mov
inc
out
sub
mov
mov
xchg
clc
rol
cwde
loopne
inc
lods
dec
jmp
and
hlt
and
fwait
ret
sub
pusha
into
sub
adc
nop
std
stos
sub
xchg
(bad)
or
stos
pop
xor
xchg
pop
(bad)
(bad)
test
es
movs
cs
lea
or
and
xchg
xchg
imul
je
and
outs
pop
or
(bad)
cmp
jnp
xor
fld
adc
loop
rcl
mov
dec
mov
xor
shl
cmp
gs
jmp
std
xchg
push
imul
repz
clc
xor
dec
pop
scas
push
jbe
dec
test
jne
add
push
mov
mov
and
loop
sub
aas
dec
clc
lods
adc
ror
pop
js
pop
mov
pop
jne
inc
ja
mov
loop
xchg
lods
and
loope
mov
adc
inc
dec
loopne
(bad)
dec
dec
(bad)
test
sar
or
pusha
shl
dec
add
shr
adc
lahf
mov
jge
shl
(bad)
push
dec
fist
xor
jp
faddp
or
enter
xlat
pop
imul
fcom
lods
push
pop
test
inc
pusha
fs
fprem1
leave
add
push
cwde
mov
loope
stos
lods
mov
nop
cmp
outs
(bad)
mov
fcomp
sub
sbb
in
pop
or
push
xchg
push
xchg
cmp
dec
push
pop
mov
pop
pop
pop
loopne
mov
iret
pop
add
cmp
or
push
mov
pop
emms
rep
vsqrtsd
imul
in
sbb
das
mov
pop
cmp
jbe
arpl
sbb
mov
mov
push
and
in
fimul
mov
mov
ins
push
mov
xlat
cmp
mov
lods
jo
les
(bad)
fcom
inc
mov
pop
inc
rcr
mov
sbb
jnp
sub
int
sbb
and
jno
pop
and
sahf
repz
pop
mov
sahf
and
ss
mov
je
adc
fsubrp
sub
jp
rcr
sub
out
add
jns
imul
xlat
test
(bad)
pop
xor
cmp
jmp
fadd
ss
(bad)
int3
and
dec
cmp
adc
mov
mov
pop
push
adc
mov
jno
fnstcw
or
lds
je
xchg
(bad)
stos
retf
test
jno
mov
fidivr
push
fs
or
mov
out
repnz
jbe
mov
out
jb
xchg
je
cdq
mov
int
or
cmp
cs
xor
jns
inc
(bad)
int
(bad)
(bad)
lods
xchg
or
xchg
ror
push
lahf
test
push
mov
xchg
mov
bndldx
nop
xchg
xor
mov
mov
in
mov
mov
call
mov
mov
rol
lock
int
fdiv
mov
xchg
ins
ror
aaa
stc
stc
add
or
fwait
inc
clc
in
sahf
out
cmc
int3
(bad)
in
xor
mov
push
and
mov
jns
imul
sahf
sbb
sub
cmp
lock
mov
push
test
jmp
jp
mov
enter
mov
and
push
cmps
lea
outs
xchg
adc
fs
int
or
and
cmp
jae
and
ins
sti
mov
mov
inc
hlt
cmps
aad
mov
mov
mov
pop
or
or
pop
std
ds
sub
mov
lods
sbb
push
add
sbb
data16
addr16
push
in
xchg
jb
nop
or
mov
sbb
ret
or
push
mov
fimul
dec
out
add
(bad)
rol
mov
test
aaa
aad
aas
mov
xchg
fcomp
(bad)
xor
cmp
dec
cmps
bound
cmp
jmp
jp
or
or
jae
fst
cmp
cmp
jp
push
fistp
or
inc
mov
lock
sub
sti
and
dec
div
and
mul
pop
imul
push
out
jbe
rcr
mov
aad
stos
js
or
pop
js
pop
arpl
js
sub
jl
mov
lahf
repnz
in
add
out
xor
jne
mov
arpl
(bad)
mov
test
xor
outs
cmp
cld
dec
jbe
retf
or
add
push
xchg
push
pusha
aam
fbstp
out
cmp
mov
mov
jmp
int
push
icebp
jbe
popf
mov
sahf
sub
fsub
dec
mov
jle
addps
sub
mov
push
pusha
mov
jne
cmp
sub
pop
or
movs
aaa
mov
out
adc
ret
or
stos
(bad)
je
fchs
pop
sub
movs
cmps
es
mov
add
jge
popa
aaa
dec
add
ins
push
inc
xor
inc
loop
dec
lods
xor
je
and
push
bound
mov
pop
aam
rol
test
shl
jo
mov
sub
fstp
adc
or
pop
dec
adc
xchg
mov
loope
clc
jle
cli
sti
pop
cld
mov
or
inc
pusha
mov
mov
lea
adc
cmps
retf
(bad)
or
sti
mov
sbb
adc
cmp
je
enter
push
jle
aad
loopne
std
clc
fwait
in
mov
mov
mov
lea
outs
inc
push
cmp
je
mov
in
test
jns
rcl
(bad)
push
sub
jbe
dec
addr16
mov
xchg
popf
or
xor
push
mov
test
pop
mov
aam
xchg
inc
or
sub
test
push
ss
jne
push
jno
cwde
lea
lods
std
push
out
ds
push
jge
aam
imul
jmp
xor
xchg
xchg
push
in
movs
fcom
adc
inc
imul
aaa
inc
adc
mov
jmp
ss
imul
cmc
adc
cmp
xor
xchg
out
icebp
ins
mov
ins
sub
inc
rcl
lock
in
adc
cmp
call
sahf
lods
mov
movs
dec
fld
retf
dec
cmp
sti
cld
xchg
sbb
in
pushf
loop
ret
test
mov
pop
icebp
shr
addr16
inc
popf
pop
mov
push
xor
pop
fsubr
psubd
cmps
inc
sbb
mov
xor
lahf
aad
mov
inc
pop
je
std
jmp
pop
adc
or
and
xor
gs
sub
jae
dec
push
test
sub
and
mov
ret
jo
fcom
jnp
sub
inc
loopne
sub
pop
push
popa
mov
stc
cmp
hlt
movs
xor
mov
add
out
dec
out
push
sbb
(bad)
jno
sbb
in
in
inc
or
(bad)
enter
sbb
mov
cmp
pushf
add
test
jmp
call
or
(bad)
fxam
sbb
in
and
push
int
mov
cmps
fcmovnb
push
lea
cmp
sbb
jnp
adc
repnz
add
loopne
mov
jne
sub
ins
xchg
xlat
into
imul
iret
dec
pop
or
add
push
nop
cmp
push
adc
adc
mov
dec
dec
and
imul
dec
mov
add
idiv
push
inc
push
loopne
hlt
cs
cmc
fidivr
dec
ret
mov
pop
test
cmps
ret
pop
repnz
fldenv
pop
fwait
ret
(bad)
mov
fisub
out
dec
clc
rol
shr
xchg
pop
jbe
mov
sbb
dec
pop
push
sbb
jp
or
jle
(bad)
pop
sub
(bad)
push
or
cdq
jmp
xor
neg
lods
in
pop
shr
mov
mov
dec
push
inc
push
test
imul
and
and
push
std
mov
fwait
mov
mov
pop
push
lahf
inc
aad
add
rcl
cdq
mov
mov
std
jl
inc
daa
test
cmps
and
pop
(bad)
test
imul
sti
jl
jl
sahf
sub
cmps
ja
cmp
dec
popa
retf
mov
and
inc
mov
movs
scas
or
push
adc
jbe
aad
loope
enter
test
inc
test
xchg
xchg
cmp
jbe
or
js
mov
jg
xor
dec
inc
or
xchg
xor
push
push
js
xchg
ja
(bad)
movs
(bad)
std
or
lock
mul
mov
inc
sub
xor
arpl
dec
je
(bad)
call
and
pop
xchg
sub
out
in
addr16
test
mov
mov
repnz
mov
outs
movs
jno
fisttp
adc
in
cmp
in
xchg
addr16
in
ins
cmps
cmps
bound
xchg
retf
mov
int
or
clc
fsub
cwde
cmp
mov
xor
lahf
sub
cmps
lahf
jp
test
add
out
repnz
mov
ror
and
outs
(bad)
add
test
mov
jecxz
movs
arpl
dec
push
cmc
and
and
ss
mov
dec
cmps
movs
pop
xor
into
(bad)
xchg
data16
test
jge
cmp
jno
and
scas
(bad)
outs
or
mov
pop
hlt
pop
imul
je
dec
cli
fisttp
or
or
xor
aam
mov
sbb
jo
cmp
adc
push
adc
cmp
daa
jne
add
pop
mov
aad
outs
lods
pop
jecxz
in
xchg
mov
cwde
stc
stc
in
inc
xor
les
mov
xchg
sub
xor
jns
mov
mov
pop
jae
add
push
mov
into
sub
mov
pop
mov
loopne
pop
retf
add
adc
or
inc
pop
jmp
dec
loop
and
cvtdq2ps
xchg
ja
dec
ds
dec
loope
leave
inc
xchg
test
mov
mov
movs
adc
ret
mov
fstp
lahf
dec
lods
addr16
sbb
push
ins
dec
ret
fisttp
xchg
aaa
dec
ss
lea
and
and
(bad)
icebp
cmp
test
stos
ficomp
inc
xchg
out
inc
popf
pushf
cwde
mov
dec
jge
(bad)
cmp
mov
jb
pop
mov
fs
std
push
push
iretw
repnz
jns
movs
mov
jno
xchg
inc
test
add
dec
(bad)
and
daa
mov
mov
lods
xor
jecxz
lods
lahf
jecxz
enter
xchg
fistp
sub
and
stc
dec
jg
aas
push
test
mov
mov
xor
fisub
add
mov
and
iret
cmp
neg
add
jmp
inc
pushf
push
pop
(bad)
(bad)
cli
out
mov
sbb
in
out
dec
add
call
btc
ins
add
xor
xor
add
gs
sub
cmp
push
addr16
fs
push
add
out
ds
addr16
sub
xor
push
es
xchg
xchg
add
mov
mov
aaa
lds
test
pop
cdq
(bad)
fcom
rol
fidiv
dec
adc
lods
push
idiv
ret
test
push
shr
push
mov
dec
rcl
call
xchg
jb
mov
lahf
shl
test
pop
iret
or
add
inc
fwait
pop
or
repz
or
push
fwait
add
call
mov
test
jmp
fnstsw
das
pop
call
ds
outs
push
sub
aaa
out
push
xor
sub
int3
(bad)
fidiv
jmp
pop
(bad)
mov
sub
(bad)
xor
aam
fcomp
mov
test
sar
or
ret
shl
ins
push
cmp
test
out
out
arpl
sub
cs
xor
sub
inc
mov
push
sub
sub
outs
sbb
mov
lock
mov
dec
push
pop
inc
push
loope
and
jns
pop
retf
mov
fwait
mov
mov
jge
jne
jo
jnp
lods
dec
sub
adc
shl
call
fwait
adc
xor
adc
mov
add
xchg
jmp
es
dec
neg
adc
sbb
ins
pop
outs
lock
xchg
je
popf
and
and
xchg
stc
mov
lea
push
pop
clc
aas
sar
das
jns
(bad)
push
iret
ins
imul
rcl
jmp
lock
dec
stos
std
ins
cmp
push
xor
(bad)
mov
das
ror
cwde
or
and
cmp
in
lods
stc
add
xchg
push
gs
mov
loop
pop
clc
ret
loopne
aas
pop
or
hlt
pop
loope
retf
call
add
mov
pop
popa
mov
inc
push
fs
sti
jecxz
jmp
cmp
pop
sbb
mov
push
jo
pop
addr16
jle
jl
inc
cs
cmp
std
lea
and
mov
sub
mov
push
shl
pop
pop
loop
dec
fst
aaa
pop
stos
sbb
push
push
cmp
mov
mov
movs
adc
leave
out
pop
in
pop
push
or
fnstcw
jecxz
dec
jmp
mov
loop
shl
and
sbb
pushf
dec
jb
retf
and
stos
in
sbb
stc
ror
ret
cmps
aaa
or
mov
xchg
adc
outs
xor
int
cli
adc
pop
scas
rol
cmps
pop
int
pop
sub
cmp
mov
out
daa
test
das
sbb
pop
js
leave
inc
lods
outs
or
inc
lods
pushf
movs
nop
inc
mov
je
call
adc
pop
ins
retf
ja
cmp
faddp
dec
mov
jns
dec
xchg
aam
adc
jne
lods
popf
xchg
sbb
dec
mov
xchg
inc
fst
and
outs
cmp
je
jo
fisubr
loop
out
ret
outs
jl
dec
xor
push
push
sar
mov
push
pop
push
jl
aad
faddp
rcr
xlat
push
or
jmp
xchg
xor
stc
lahf
dec
mov
lock
jne
xchg
outs
or
pop
sbb
push
and
mov
mov
cdq
fwait
push
mov
mov
xor
adc
hlt
or
bound
cli
xor
stos
int
dec
dec
xchg
daa
push
cmp
and
mov
adc
pop
popa
xor
xor
sub
xchg
xor
sbb
or
cmps
push
mov
push
dec
adc
cli
and
fwait
repz
and
or
outs
(bad)
pop
dec
std
and
sub
dec
in
cmp
sub
cdq
cmps
mov
fcomp
mov
jl
adc
jle
and
fisubr
(bad)
mov
sbb
adc
cmp
xchg
out
loope
mov
gs
popa
sub
sbb
and
pop
out
sub
loopne
aaa
sbb
xchg
xor
clc
jae
fist
pop
(bad)
xchg
pop
(bad)
out
outs
push
push
retf
pop
add
jns
in
mov
xchg
and
cmp
pusha
stc
arpl
out
pop
jmp
daa
and
push
(bad)
ds
int3
neg
jno
pop
cmp
in
scas
mov
rol
outs
jg
mov
ds
dec
pop
(bad)
mov
fsubr
jge
mov
or
out
xor
rol
dec
scas
(bad)
sbb
stc
inc
ja
es
inc
loope
fsubp
ja
shl
adc
fistp
mov
hlt
js
cmc
scas
shl
inc
cmp
out
push
or
push
shr
ds
into
xchg
call
adc
jb
addr16
add
shl
es
in
into
sti
dec
dec
js
cmp
jne
call
aaa
mov
mov
rcr
jmp
cmp
push
xchg
in
add
jmp
add
gs
fsub
cld
scas
std
sar
xor
add
add
add
push
jno
or
ins
adc
mov
xchg
lods
leave
inc
(bad)
aam
pop
aad
push
xchg
add
jmp
jge
and
add
fadd
and
call
cmp
clc
not
imul
stc
push
(bad)
push
(bad)
repz
je
push
(bad)
(bad)
jecxz
out
sub
xor
aam
pop
shl
jmp
inc
ror
les
mov
in
ror
push
call
aad
jno
sub
cmp
push
push
data16
pop
xchg
jmp
jo
enter
xor
jg
jnp
popa
jo
mov
and
icebp
push
mov
mov
cmp
dec
loop
out
sbb
fcom
je
ret
ins
int3
xlat
in
or
outs
outs
push
adc
mov
mov
ret
ror
mov
stos
mov
aam
ja
ins
sbb
ins
ins
mov
out
xchg
or
cmp
rol
mov
push
cmp
push
aad
std
aas
or
sti
pusha
scas
pop
xor
jmp
mov
xor
push
mov
and
sbb
xchg
retf
test
ja
push
add
cld
mov
dec
ret
retf
add
test
jno
xchg
fwait
jbe
inc
mov
js
and
sub
fldcw
(bad)
xor
mov
loop
in
out
xor
jbe
lock
sbb
pop
and
test
mov
xchg
adc
mov
inc
jmp
rcl
sahf
push
mov
sahf
mov
jno
retf
or
sbb
jae
gs
dec
in
cld
jne
ins
popf
arpl
and
xor
out
(bad)
ror
clc
(bad)
jecxz
fistp
pop
jnp
imul
scas
pop
sti
shl
mov
jno
or
(bad)
pushf
imul
arpl
lahf
jecxz
aas
jg
cdq
or
or
aam
ds
repz
xchg
loope
push
or
in
sub
arpl
inc
push
out
xchg
pop
jl
xor
adc
fs
enter
stos
jbe
add
mov
mov
inc
shr
inc
jnp
test
out
adc
fdiv
shr
mov
fldpi
sti
pusha
fadd
push
mov
into
sbb
xchg
jl
movs
cdq
ja
jae
mov
sbb
aaa
jmp
les
push
jae
repz
ins
ss
sub
fidiv
adc
popw
sbb
rcl
je
fimul
inc
pop
cmps
and
sbb
jg
lea
xchg
mov
or
and
xor
push
jb
movs
adc
addr16
popa
(bad)
adc
pop
jmp
in
sbb
dec
inc
lds
mov
pop
clc
xor
imul
dec
mov
repz
movs
pop
pop
into
push
into
jmp
add
ret
adc
mov
(bad)
rcl
xor
cld
push
jbe
call
sbb
pop
push
call
add
cmp
fmul
(bad)
push
cdq
add
add
js
pop
aad
mov
push
add
pop
loop
addr16
pop
test
movs
retf
jl
add
jae
in
(bad)
cmp
sahf
fisttp
or
sub
jmp
mov
push
cmp
push
inc
stos
popf
xor
dec
xor
and
cwde
imul
std
call
xchg
jmp
fdivr
call
xor
out
adc
aam
in
dec
mov
popa
cs
in
ret
mov
das
mov
enter
xchg
cs
mov
cwde
sbb
push
scas
int
gs
xchg
bound
(bad)
lods
adc
push
sbb
pop
dec
sar
lds
xor
ss
adc
lock
retf
inc
jo
sub
mov
jl
ror
test
imul
mov
aad
js
push
mov
mov
cmp
je
pop
movs
or
test
ss
dec
sub
movs
loope
sbb
js
enter
sar
movs
shl
sti
(bad)
imul
in
add
loope
and
adc
stos
sub
daa
mov
rdtsc
fabs
mov
mov
cmps
xor
or
mov
mov
push
and
loope
inc
mov
push
mov
mov
push
dec
sub
and
mov
fnsave
fsubp
push
xor
sbb
xchg
mov
ror
bound
cmp
aad
rcl
ror
jae
rcr
sub
jne
or
inc
xchg
xchg
jmp
inc
cmp
shl
sbb
and
sub
movs
and
and
sbb
in
nop
inc
aaa
xor
into
inc
inc
sbb
shr
ds
out
popf
mov
add
in
lods
repz
test
mov
cmp
inc
jmp
outs
int
movntpd
or
ret
inc
cmp
imul
xor
lahf
pushf
inc
xchg
sahf
inc
or
pusha
pop
pop
mov
push
call
mov
daa
xor
dec
sub
ror
aam
cmp
xor
dec
mov
es
rol
lods
jmp
add
or
or
in
jmp
stc
clc
fwait
add
or
push
(bad)
movs
inc
adc
int
pop
scas
sbb
fs
jnp
rcr
ins
cmp
push
ins
je
mov
inc
ret
dec
sub
out
ret
xor
jmp
push
mov
fidiv
and
add
mov
mov
or
pop
and
movs
fs
sbb
adc
out
cld
push
outs
pop
mov
in
seto
jo
pop
fs
jmp
push
lahf
sti
xchg
cdq
jnp
push
mov
fstp
pop
(bad)
retf
lods
adc
mov
add
push
ins
mov
lods
hlt
xchg
inc
ret
sub
xchg
mov
add
cdq
sub
in
imul
fs
sub
sub
push
push
iret
pop
shr
dec
jne
fsubr
mov
dec
(bad)
push
lea
sbb
int
and
arpl
dec
je
aas
or
in
add
movs
cld
jns
add
repnz
xchg
retf
cmps
imul
jns
shr
xchg
adc
pop
jmp
out
inc
clc
(bad)
test
xchg
mov
ss
sti
mov
pop
ins
fnstenv
rcl
fabs
push
mov
retf
int
mov
mov
dec
arpl
jmp
dec
aad
push
leave
outs
(bad)
pop
or
aas
clc
mov
sbb
mov
call
push
pop
movs
mov
shr
(bad)
popf
xor
pop
das
sub
mov
jno
push
fld
ss
cmp
mov
call
fcomp
mov
mov
pushf
lock
ins
and
xor
xor
mov
fild
sar
jg
xor
xchg
dec
rol
pop
cmp
fist
gs
pop
aam
mov
imul
mov
pop
lsl
add
and
out
xchg
sar
in
out
mov
sub
retf
jnp
in
arpl
push
xchg
sub
div
shl
jb
mov
cdq
mov
xchg
jbe
fadd
inc
jmp
addr16
add
in
ins
sar
and
add
add
loopne
mov
in
jnp
add
xlat
shl
in
add
mov
pop
fistp
icebp
mov
push
push
das
mov
or
shl
arpl
or
sbb
(bad)
adc
sbb
cmp
or
or
ror
nop
and
test
xor
daa
push
cmp
dec
rol
dec
add
mov
retf
idiv
xchg
push
(bad)
sub
xchg
sbb
add
jnp
int
and
lea
pop
push
call
call
scas
jle
popf
push
pop
add
test
shl
pop
mov
pop
repnz
std
push
xchg
test
cmp
loop
(bad)
loope
shr
cmp
push
shl
push
xchg
push
and
or
sbb
add
ins
xor
repnz
stc
sahf
jns
movs
(bad)
leave
jmp
pop
ss
out
and
sub
jmp
cmps
jo
xchg
les
iret
ret
fcomp
inc
leave
imul
test
adc
mov
xor
pusha
into
imul
outs
xchg
dec
fwait
mov
sahf
test
push
stos
adc
mov
jbe
enter
ret
or
retf
ins
inc
mov
movs
das
cwde
jg
mov
jmp
cmp
fucomip
ret
jecxz
cmp
outs
pop
adc
cmp
cmp
arpl
mov
xchg
loop
cmps
pop
scas
sbb
inc
icebp
in
push
push
imul
jno
mov
fstp
aam
xchg
add
pop
hlt
adc
bound
jmp
icebp
das
mov
retf
scas
pusha
retf
and
movs
sub
xchg
xlat
cmps
mov
mov
mov
cli
sbb
xchg
movs
pushf
jns
out
cmp
sahf
mov
jl
add
std
fld
pop
stos
xor
lahf
in
sub
push
mov
cmpxchg
or
xor
call
and
cmp
sub
jo
xchg
fld
ret
pop
pop
and
cs
in
mov
mov
int
in
lods
call
scas
imul
jmp
lods
push
out
ret
enter
mov
stos
cmp
xlat
cmp
retf
mov
mov
sbb
out
mov
jp
xchg
xlat
je
loop
sar
mov
loope
out
mov
out
sbb
push
int
sbb
dec
cmps
xchg
mov
and
test
clc
sbb
clc
xchg
mov
out
in
push
mov
in
dec
jp
mov
push
lds
adc
mov
lea
rcr
mov
xor
popf
xchg
or
jmp
mov
mov
mov
xor
nop
xchg
aaa
lahf
je
arpl
xor
ret
sub
cwde
daa
cmp
jmp
shl
sub
lods
dec
xor
xchg
sbb
mov
xor
jmp
mov
pop
sbb
mov
jle
pop
sbb
adc
add
push
xchg
jge
je
mov
jmp
mov
cmps
mov
ror
retf
imul
rol
les
pusha
jae
cmp
or
jl
inc
inc
cld
push
fwait
repz
arpl
outs
bound
(bad)
sbb
arpl
ret
stos
pop
dec
dec
cwde
mov
stos
ds
push
bound
push
sbb
dec
dec
inc
shl
dec
rcr
arpl
cmp
pusha
adc
mov
cmc
je
add
adc
push
test
aas
mov
div
addr16
inc
test
push
xchg
test
push
push
pop
out
dec
ret
push
adc
out
test
ficom
add
fsubrp
cmp
loope
call
mov
fsub
mov
dec
dec
xchg
mov
mov
iret
nop
bound
mov
pop
ret
push
jecxz
out
xchg
(bad)
rcl
mov
push
iret
adc
cmps
xchg
jg
mov
jge
movs
shl
pop
clc
jg
pusha
add
repnz
dec
pop
jb
push
sti
mov
add
cmp
ret
push
add
scas
or
leave
ret
popf
ret
or
mov
sbb
mov
outs
ftst
fldpi
jge
pusha
dec
and
cmc
jae
push
push
push
mov
mov
sub
mov
adc
sbb
push
add
inc
mov
not
aas
arpl
es
mov
movs
xchg
enter
jo
and
in
(bad)
push
(bad)
xchg
add
cmps
xor
mov
push
sbb
xchg
jns
inc
and
cmp
push
cmps
jno
js
out
and
jge
dec
loop
int
mov
or
xchg
icebp
test
xchg
aam
jg
(bad)
inc
repz
cmp
dec
pop
mov
ins
jle
jns
aad
pusha
test
mov
fwait
cmp
fisttp
dec
movs
addr16
cdq
fscale
invd
mov
push
mov
and
add
sbb
push
inc
rcl
sub
push
push
sar
(bad)
shr
sub
arpl
lahf
adc
xor
fidiv
fcmovbe
jne
(bad)
nop
push
pop
pushf
pop
and
mov
xchg
fwait
xor
pop
das
lds
pop
jl
clc
daa
push
mov
adc
pushf
adc
jmp
pop
pop
lods
jecxz
outs
dec
pop
sub
js
hlt
sar
out
xchg
sub
or
sbb
xor
or
test
ret
jmp
aad
jae
retf
push
push
and
cmps
mov
mov
xchg
pop
adc
xlat
xchg
xor
sbb
mov
jmp
sbb
inc
ficom
dec
jbe
jmp
cs
mov
popf
(bad)
or
int3
sbb
adc
inc
push
fadd
mov
mov
fmulp
aas
jg
aad
(bad)
adc
out
daa
and
retf
cmps
cld
aad
and
xor
mov
icebp
cld
mov
mov
push
or
jnp
aas
in
cwde
pop
mov
mov
mov
inc
mov
or
and
dec
les
lock
add
jg
add
imul
test
xor
es
cmps
int
jle
daa
push
pushf
jns
mov
addr16
fucompp
and
out
adc
push
inc
out
mov
popa
and
xchg
bnd
int3
into
rcr
and
int
jnp
fbstp
or
cmc
dec
xchg
lahf
sbb
ins
lea
test
sbb
ja
(bad)
ins
xchg
xchg
test
outs
push
loopne
adc
test
mov
push
sbb
cli
movs
iret
mov
test
pop
popa
inc
ins
imul
sbb
cli
push
pop
mov
xchg
in
push
lds
loope
mov
call
inc
pop
xor
std
out
stc
(bad)
inc
adc
adc
push
xchg
ret
or
pushf
(bad)
in
sar
push
test
or
cs
fsub
jnp
je
jecxz
adc
int3
int3
inc
mov
test
lahf
inc
retf
cmp
cwde
pop
in
pop
es
add
rcl
push
add
push
into
jmp
mov
rol
cmp
cld
mov
in
movs
adc
(bad)
mov
jp
or
and
xchg
pop
neg
or
rcl
out
loop
jmp
cs
and
cmp
popf
ds
push
cmp
inc
jecxz
movs
aad
in
ficom
mov
and
ret
ss
and
stos
mov
mov
int3
and
nop
mov
xor
call
cmps
xchg
dec
inc
sub
test
and
aas
dec
aam
sub
dec
stos
popa
mov
dec
aad
jp
lea
add
sub
ds
out
repnz
sahf
or
fstp
inc
lahf
aaa
add
inc
rol
jle
mov
add
int
add
pop
in
icebp
adc
pop
data16
adc
cdq
out
(bad)
dec
or
loop
out
mov
popf
out
ret
or
jnp
sti
cmp
repz
xor
loop
sbb
call
pop
push
scas
adc
ss
fwait
xor
fst
cmc
pop
out
mov
daa
dec
sbb
cmp
jns
push
daa
lods
popa
mov
adc
scas
adc
inc
cdq
push
jmp
and
clc
fidivr
aam
(bad)
lahf
xor
xor
aaa
nop
lods
scas
add
sbb
xchg
mov
inc
add
fld
mov
scas
leave
and
sbb
mov
enter
mul
shl
test
push
pusha
lock
shl
ret
sub
lahf
sbb
ror
test
add
xchg
and
xor
mov
jbe
movs
out
and
call
stos
mov
jne
push
push
ja
pop
or
out
neg
mov
or
cmp
cdq
rol
cmp
lds
fiadd
ss
lea
mov
mov
std
mov
cwde
lahf
mov
in
xchg
pop
in
fsub
jo
lods
and
and
pop
jne
xchg
lahf
mov
int
nop
jmp
je
cmp
and
stos
sbb
xor
mov
movs
mov
jmp
bound
xchg
shl
inc
popf
dec
repnz
add
lods
xchg
mov
or
and
sub
sub
shl
xor
jmp
jp
jp
mov
int
pop
(bad)
lock
xchg
inc
outs
loope
sub
dec
lods
popf
push
into
fimul
fcomi
loope
ins
xchg
add
push
push
(bad)
mov
test
sbb
(bad)
dec
jmp
pop
mov
(bad)
leave
mov
and
push
inc
inc
sbb
movs
out
(bad)
jns
out
inc
and
dec
fstp
sbb
ins
mov
xlat
push
mov
mov
push
rcl
popa
mov
sbb
xchg
pop
mov
cdq
mov
pop
push
stos
mov
cmp
imul
fidivr
shl
repz
adc
cmps
imul
mov
adc
cs
add
cwde
pop
bound
push
jge
stc
jecxz
sub
or
retf
add
jb
dec
pop
sar
push
ret
xchg
cmps
xchg
cld
ins
or
sti
aad
std
rcr
mov
inc
adc
mov
into
int
pop
adc
push
loopne
adc
shl
stos
out
js
das
rcr
repnz
add
gs
pop
(bad)
or
add
or
cdq
(bad)
movs
out
mov
fs
xchg
mov
xor
ret
dec
jl
retf
jmp
mov
or
arpl
or
mov
mov
cmc
push
js
psubd
xor
and
int
jge
iret
jg
test
sub
call
call
sub
pop
mov
lock
enter
repz
add
nop
mov
aam
inc
push
cli
adc
push
adc
dec
cdq
sbb
div
int
aas
dec
mov
hlt
(bad)
call
inc
add
dec
add
xor
repz
xor
mov
jmp
sub
mov
fstp
pop
movs
pop
mov
movs
mov
cmp
scas
loop
mov
mov
popa
xchg
xchg
add
mov
pop
repz
cmc
and
and
cmp
xchg
xchg
push
outs
shl
push
imul
push
pop
or
mov
(bad)
pusha
clc
outs
sbb
test
int
mov
fcomp
pushf
rol
mov
outs
fldenv
lds
and
(bad)
out
and
xchg
pop
stc
push
dec
outs
push
push
push
movs
push
pop
mov
add
dec
rcr
mov
pop
sub
inc
xor
(bad)
push
cmp
daa
and
jns
mov
rol
jbe
imul
mov
lds
int3
jp
shl
sub
pop
not
sbb
pop
sar
pop
inc
call
out
add
push
repnz
jno
jnp
add
add
and
pop
push
in
jmp
mov
in
inc
aam
mov
cmp
jbe
out
add
mov
mov
add
data16
jecxz
inc
jne
push
clc
pop
imul
(bad)
jne
pop
adc
sar
adc
inc
cmps
pop
jge
cmps
into
inc
das
mov
inc
sahf
aad
xor
mov
div
dec
enter
data16
or
mov
sub
sub
pop
mov
and
sbb
popa
pop
mov
retf
or
bound
fstp
scas
inc
ror
pop
dec
test
mov
aam
push
stos
rol
fnstcw
out
cwde
or
pop
mov
push
mov
push
cmp
adc
ja
xchg
mov
dec
mov
cwde
jmp
sub
sbb
cmp
dec
push
mov
imul
pop
dec
outs
or
sub
fs
pop
fdivr
ja
push
or
scas
push
jmp
sbb
add
mov
call
jmp
add
mov
mov
scas
push
and
cld
mov
loop
sbb
add
jae
pop
cdq
adc
out
popa
inc
jbe
jne
mov
int
fild
shl
arpl
xchg
scas
jmp
jle
dec
popf
xchg
std
test
mov
imul
or
mov
fisttp
and
(bad)
xchg
pop
and
inc
push
neg
aaa
int
int3
mov
jns
xor
dec
sbb
shl
pop
push
out
cmps
movs
xchg
sbb
retf
mov
inc
and
push
out
into
and
popa
jge
arpl
or
push
inc
push
sub
mov
adc
das
and
cli
stc
cmp
pop
pop
fucom
data16
mov
push
jmp
mov
mov
add
and
ffreep
xchg
out
push
fdivr
loopne
into
pusha
pop
xchg
inc
inc
xor
sar
mov
mov
mov
call
push
test
add
push
jbe
adc
mov
xchg
jmp
cmp
or
add
rcl
dec
mov
xchg
fnstsw
rcpps
lahf
mov
mov
rcl
inc
jl
inc
jge
ss
mov
inc
mov
ret
aad
sar
push
leave
fs
scas
adc
lahf
jmp
adc
dec
sub
sar
lahf
mov
mov
jo
aam
call
push
mov
jnp
test
push
xlat
cmp
or
retf
shl
mul
sbb
(bad)
jg
pushf
jle
ins
addr16
ins
push
sub
bound
imul
imul
scas
add
sub
mov
repz
fidivr
jmp
std
aad
xor
xchg
jbe
sub
test
hlt
lock
pushf
dec
xor
into
into
xchg
xchg
int
and
fmul
mov
mov
ja
test
jg
inc
pop
pusha
je
mov
sahf
cdq
and
loopne
in
imul
(bad)
pop
push
repnz
test
retf
sbb
shl
xchg
aam
ret
stos
rcr
int3
je
pop
or
dec
and
xchg
aaa
cli
cmps
ins
(bad)
cmc
gs
jne
and
dec
sbb
pop
inc
jl
stos
mov
adc
dec
stos
aam
loopne
aas
sub
test
and
leave
jmp
test
std
inc
fucomp
bound
fcomp
ret
xor
xlat
je
xchg
add
pop
mov
push
pop
sbb
in
jns
mov
jg
sbb
add
call
and
mov
cmp
out
(bad)
clc
(bad)
movs
jmp
xchg
mov
pop
sub
push
fistp
sub
jg
push
mov
imul
pusha
int
jle
dec
stos
sub
int
inc
rcr
out
xor
push
popa
sbb
aam
push
sub
nop
into
add
imul
(bad)
out
adc
cmps
dec
fisttp
push
(bad)
mov
fsubrp
(bad)
mov
gs
ins
dec
pop
dec
mov
call
(bad)
sbb
mov
add
repnz
sbb
dec
les
push
shr
gs
pop
and
mov
xchg
pop
(bad)
xchg
sbb
jge
xchg
jbe
arpl
jl
mov
(bad)
mov
dec
fstp
test
xchg
les
jp
int
push
pop
inc
dec
stc
and
pop
pop
and
dec
neg
rol
cld
pop
push
jmp
call
jmp
sub
jns
mov
bound
or
bndstx
xchg
mov
mov
or
outs
sub
sub
mov
or
xor
xchg
xor
and
aas
sub
jb
(bad)
fnstcw
in
and
aad
loop
push
popf
xchg
jae
cld
jmp
push
xchg
mov
loopne
les
stos
xchg
jnp
jae
mov
fiadd
sub
icebp
dec
out
mov
arpl
scas
jne
test
hlt
mov
adc
pop
loope
push
xor
out
inc
jle
daa
retf
mov
push
sbb
add
mov
mov
push
pop
arpl
stos
repz
(bad)
out
cdq
test
cmp
sub
adc
mov
clc
outs
ret
jbe
scas
xbegin
jmp
(bad)
adc
or
push
jl
out
ins
dec
jne
mov
add
in
scas
lds
push
mov
std
(bad)
pop
inc
inc
pop
ds
add
mov
add
cmp
xor
cmp
in
add
outs
jne
leave
fcom
inc
out
cmc
mov
ret
xor
xchg
shl
loope
enter
dec
xchg
cwde
add
pop
add
and
sbb
fsubp
mov
pop
(bad)
cmp
mov
dec
cmps
lds
xor
and
sub
jno
push
xchg
push
jmp
adc
inc
push
hlt
sbb
jmp
test
jmp
fldcw
in
leave
(bad)
and
or
cmpxchg
outs
inc
imul
lods
xchg
mov
xchg
repz
or
sub
pop
ss
in
scas
push
and
xchg
loop
repz
jmp
pop
jb
pop
lock
inc
mov
inc
rol
dec
jns
icebp
cmp
mov
scas
push
sub
sub
jmp
sbb
sub
add
jne
push
pop
lea
test
fbstp
(bad)
loopne
jae
loope
mov
mov
dec
call
xor
fld
sbb
shl
fs
xor
repz
rol
out
stc
xor
sub
imul
inc
icebp
(bad)
pop
sbb
adc
inc
push
dec
jmp
add
lods
inc
cmps
in
dec
in
in
mov
shr
es
jl
mov
jae
in
test
(bad)
add
dec
jge
(bad)
imul
sub
adc
pop
lahf
mov
pop
jo
sar
cmps
xchg
dec
jmp
fstp
cmp
adc
lock
or
ins
jmp
ss
mov
das
or
inc
mov
jbe
aaa
jmp
xchg
add
fisub
gs
(bad)
push
cs
sbb
adc
ds
stc
push
inc
outs
mov
movs
adc
sbb
sub
cmp
xchg
test
into
daa
add
or
jmp
jecxz
sub
scas
jnp
sub
loopne
arpl
mov
bound
test
popa
(bad)
adc
icebp
add
add
fbstp
cmp
xchg
out
inc
adc
xchg
jno
rcl
fld
shl
inc
loop
jg
out
push
ja
push
dec
jp
outs
and
ins
or
js
xor
(bad)
sub
jne
out
xor
mov
or
inc
mov
push
mov
test
sahf
mov
ficom
mov
scas
mov
jmp
test
data16
shl
xor
mov
cs
mov
adc
inc
xchg
popa
pop
mov
sar
pushf
aad
sbb
outs
mov
ins
shr
mov
and
(bad)
and
jns
xor
xor
retf
jb
retf
push
not
cdq
and
mov
sub
imul
out
xchg
mov
xchg
cmp
in
sub
int3
dec
imul
cmps
xchg
rol
leave
cmp
push
(bad)
or
sub
sbb
adc
xor
add
xchg
sbb
fbstp
scas
aas
xchg
cmp
add
and
mov
not
or
add
mov
cmc
xchg
jbe
lods
pop
outs
sub
bound
dec
push
hlt
mov
(bad)
call
das
mov
lods
mov
movs
pop
sub
cli
xor
ja
in
cli
pop
cmp
push
mov
mov
stos
setle
mov
icebp
mov
mov
aam
and
dec
lds
jne
sbb
pop
ja
push
xor
jle
jae
sbb
sbb
fwait
shl
add
loop
call
or
adc
aam
push
out
mov
out
mov
sbb
ins
xchg
add
xchg
xor
ss
aaa
imul
xor
int
push
sahf
fcom
xor
loope
test
fwait
retf
sbb
cmp
mov
out
push
cmp
mov
mov
ja
cmps
cmp
cwde
popa
test
aas
arpl
and
js
pop
int3
in
cmc
inc
cli
call
loopne
push
xor
mov
xchg
inc
xor
js
bound
mov
repz
out
(bad)
stc
popf
inc
loop
repnz
add
pusha
dec
in
aam
ins
int
jmp
xchg
sbb
jmp
push
(bad)
outs
mov
sub
shl
mov
mul
mov
mov
xor
xchg
or
xlat
mov
mov
push
sbb
cmps
outs
xchg
repz
push
loope
(bad)
or
in
leave
jbe
repnz
and
stos
(bad)
cmp
fdivr
lods
loop
movs
ja
dec
adc
sbb
push
xchg
js
je
outs
dec
mov
ins
test
outs
push
jmp
xchg
test
jmp
fld
and
dec
test
or
cs
dec
sbb
mov
in
test
pop
cmps
and
dec
push
cmp
sahf
cmp
inc
dec
and
data16
adc
pop
push
or
test
es
jns
jmp
push
div
movs
hlt
cmp
int
push
inc
movs
push
jae
hlt
push
xor
test
dec
ja
adc
nop
in
cdq
and
les
hlt
bound
fdiv
loope
add
(bad)
jecxz
and
ins
or
jno
and
mov
pusha
das
jnp
hlt
add
jne
inc
repz
call
(bad)
sbb
sub
mov
mov
jmp
das
sbb
and
scas
repz
fucomp
call
movs
ror
mov
mov
jp
pop
dec
ins
int
jmp
popa
ret
mov
mov
xor
push
push
enter
mov
test
xchg
adc
outs
imul
adc
mov
jbe
sub
jno
xchg
lock
sub
adc
in
fld
pop
(bad)
shr
clc
rcr
dec
lods
push
inc
call
add
jmp
cwde
jnp
stos
push
push
inc
mov
stos
sbb
push
movs
sar
and
enter
sbb
xor
rol
es
lea
ret
cmp
mov
mov
mov
leave
xor
pushf
adc
mov
sbb
or
inc
ret
adc
movs
add
sub
mov
jp
pop
jb
lahf
adc
mov
test
xchg
or
outs
hlt
addr16
inc
sub
fisubr
arpl
or
loope
pop
push
ror
cli
sbb
repnz
and
shl
out
sub
mov
cmp
(bad)
mov
imul
add
sub
(bad)
push
stos
leave
ja
pop
rol
sub
adc
mov
lods
rol
jp
or
faddp
pop
ins
mov
and
push
out
punpckldq
sbb
cli
pop
outs
jmp
xchg
sbb
test
jb
fdivr
cmps
add
xor
fist
sahf
sahf
mov
fldenv
pushf
sub
dec
popa
jmp
sub
mov
aam
dec
jmp
mov
dec
mov
in
and
mov
fisttp
into
scas
push
arpl
and
test
add
push
ds
or
add
xchg
aaa
and
aam
fsubr
addr16
lods
xor
ret
jnp
call
add
es
jle
jnp
fwait
push
fwait
(bad)
into
inc
das
ret
jmp
jp
or
fcmovnbe
ja
loop
or
leave
mov
popa
fst
sar
in
inc
xchg
jmp
pop
test
or
sub
or
imul
(bad)
je
xchg
mov
sub
sbb
scas
xchg
sbb
test
enter
fwait
cmp
arpl
push
sbb
fs
ret
cmps
mov
inc
push
fwait
ja
loope
cmp
adc
add
xchg
xchg
sahf
rcr
retf
xlat
adc
jle
cmc
push
rcr
stc
jle
stos
mov
stc
sub
mov
loop
mul
out
punpckhwd
adc
gs
cmp
in
and
repnz
jle
dec
cdq
xor
retf
fsub
dec
ret
loopne
and
cmc
fisub
inc
dec
and
(bad)
xor
lods
and
mov
cwde
cmp
enter
or
jo
movs
or
test
push
fbstp
rcr
rcr
je
sar
lods
stc
xchg
movs
iret
push
xor
jecxz
sahf
sahf
adc
jle
mov
into
cmp
stos
arpl
dec
xchg
ret
inc
ret
sahf
push
movs
lea
ja
inc
(bad)
mov
ins
or
add
pop
mov
sbb
aas
sbb
and
jne
fistp
or
mov
scas
adc
dec
mov
or
sub
nop
or
mov
fisttp
mov
iret
cmc
(bad)
push
pop
pop
test
cmp
dec
xor
or
test
(bad)
pop
mov
or
in
call
add
retf
add
cmp
scas
dec
ret
popf
pop
out
(bad)
push
retf
lock
out
jne
sbb
test
adc
xor
adc
mov
(bad)
mov
stos
test
xor
out
mov
int
and
sar
ins
pop
jo
and
hlt
in
ja
mov
jp
xor
push
sbb
cmps
cmp
sahf
cmp
retf
jo
xchg
pop
call
movs
jl
push
div
rol
lock
or
inc
sbb
xchg
fwait
cmps
adc
push
push
shl
jns
fwait
pop
(bad)
cli
pop
sub
xor
dec
and
mov
mov
ror
iret
lock
mov
movs
pop
cmp
fincstp
adc
mov
into
les
leave
inc
cmps
stos
lds
(bad)
pusha
cmps
lea
popf
cmps
xchg
scas
add
mov
lahf
mov
jecxz
call
std
mov
ret
into
(bad)
arpl
icebp
mov
adc
stos
sbb
ins
cwde
pop
popa
cmp
lahf
adc
jmp
pop
or
out
pop
pop
cmp
movs
or
mov
mov
ror
sub
mov
test
std
cmps
push
xor
imul
jl
pop
scas
sbb
(bad)
mov
int3
jecxz
jbe
rcr
push
imul
pop
scas
cmp
adc
xchg
pop
retf
into
pushf
repnz
xchg
push
inc
push
in
adc
xchg
mov
xchg
add
or
cmps
stc
jmp
pop
jmp
jo
lock
xchg
div
inc
jnp
sti
xor
inc
mov
adc
xor
jge
fsubr
and
mov
test
aam
fwait
stc
sbb
mov
addr16
xchg
push
pop
push
xor
dec
or
sbb
push
jmp
gs
xor
push
fisttp
sbb
sbb
sbb
and
mov
es
scas
sbb
imul
aas
mov
pop
pop
adc
dec
mov
out
push
jnp
mov
push
jne
mov
mov
out
push
dec
or
mov
xlat
xor
push
imul
lds
cdq
xor
pop
in
cdq
push
cmp
lock
iret
pop
or
pop
stos
daa
mov
xor
les
call
push
(bad)
rcr
xchg
lods
jbe
and
or
stc
enter
out
ins
or
dec
popa
test
add
out
(bad)
enter
add
cli
dec
dec
fsubr
mov
mov
add
bound
or
shl
push
imul
mov
cli
pop
xchg
movs
call
scas
ret
mov
ret
adc
sub
popf
out
mov
sub
or
and
stc
stc
paddsw
mov
mov
scas
mov
arpl
shr
fsqrt
in
not
mov
(bad)
pop
mov
pop
jmp
stos
dec
xor
lods
dec
sub
xchg
xor
cdq
sub
lea
push
xchg
pop
mov
fwait
pop
jo
xor
xor
fadd
cmc
out
push
cmp
pop
jns
out
xor
data16
pop
add
pusha
(bad)
xor
jmp
jg
in
test
div
repz
in
int3
test
jp
mov
adc
sbb
xchg
jp
mov
ds
(bad)
push
test
sub
mov
xor
xchg
push
add
jno
das
aas
cmps
loop
shl
dec
mov
or
and
call
addr16
mov
cmp
lds
sbb
xchg
arpl
jp
clc
icebp
mov
or
movs
adc
lds
pop
xchg
xor
int3
pusha
fs
inc
xchg
call
clc
pop
lods
cmps
movs
lods
dec
push
rep
ins
call
push
and
inc
sbb
imul
cmp
cmc
mov
jg
les
(bad)
lock
ja
push
mov
imul
add
call
iret
fistp
int
aad
pop
leave
inc
xchg
icebp
fisubr
mov
push
call
mov
mov
mul
nop
(bad)
(bad)
popf
xor
ja
mov
xor
daa
outs
push
xchg
bound
inc
mov
inc
xchg
ds
adc
mov
lahf
dec
(bad)
xchg
cmps
mov
test
call
out
add
test
mov
mov
pop
dec
shl
dec
lock
pop
sbb
mov
mov
and
shr
mov
hlt
jle
dec
adc
rol
fisub
ds
outs
fsub
mov
pop
add
popf
jle
loop
bound
imul
sti
cmp
fld
add
sub
add
movs
aam
repz
mov
sbb
add
sbb
(bad)
ss
mov
jle
mov
sub
cmp
(bad)
pushf
ret
jecxz
call
mov
inc
sub
ret
jge
stos
scas
adc
xchg
js
push
cmc
fmul
mov
inc
daa
mov
pop
mov
sar
cmp
jecxz
cmp
shr
bound
adc
xor
fcom
sub
push
pop
push
push
nop
add
fs
or
or
shl
push
scas
xchg
pop
xchg
sub
ficom
test
sub
ret
push
test
mov
adc
movs
aaa
mov
fwait
jne
(bad)
mov
ja
shl
sbb
ds
in
mov
adc
mov
mov
pop
dec
aaa
rcr
xchg
dec
sub
add
fidivr
je
gs
call
shl
xchg
cmps
mov
sub
mov
jle
(bad)
ss
xor
imul
or
xchg
xor
adc
pop
inc
ret
adc
mov
jnp
outs
pop
push
iret
xor
in
aas
aaa
into
mov
jle
dec
cmc
add
lea
push
mov
in
sbb
aas
xchg
sub
or
hlt
retf
in
mov
sbb
push
pop
dec
es
mov
sub
mov
sub
lods
sub
test
in
shl
popa
fst
popf
cld
sahf
cdq
xor
ret
rep
push
mov
retf
pop
fwait
sub
call
ret
out
fld
inc
inc
mov
call
rol
mov
lock
dec
pop
sub
sbb
adc
mov
popf
fwait
inc
jae
outs
or
adc
scas
or
out
sub
lock
stos
add
jmp
add
aam
cmp
pushf
mov
sub
ins
jge
daa
inc
mov
jmp
xor
fild
inc
sar
sub
xchg
xchg
mov
jge
fsave
xchg
mov
jmp
mov
mov
aas
dec
mov
fdiv
add
aaa
sub
fisttp
mov
test
ins
arpl
jp
push
add
lahf
add
pop
and
add
ror
xchg
data16
(bad)
not
add
daa
dec
push
push
inc
out
retf
mov
mov
retf
repz
and
xor
and
test
xchg
mov
xchg
cmp
cmp
sahf
test
(bad)
ja
pop
(bad)
mov
nop
aad
xchg
sub
pop
ins
and
ffree
ins
cmp
pop
dec
stos
fcmove
loope
push
repz
inc
pop
jecxz
mov
xchg
sbb
sbb
stos
les
cmp
stos
mov
mov
or
adc
or
adc
jae
push
push
dec
sahf
and
push
inc
mov
sbb
aaa
movs
jbe
js
int
ja
test
(bad)
call
fld
adc
fwait
mov
push
(bad)
daa
or
mov
mov
xchg
lahf
shl
sbb
jl
pop
adc
(bad)
mov
rcr
test
cs
es
mov
add
or
sbb
hlt
xchg
and
jecxz
jmp
inc
mov
dec
dec
data16
rcr
xchg
xchg
push
sub
inc
dec
call
jnp
adc
add
mov
sahf
and
sbb
in
shl
jbe
add
jle
ss
std
mov
push
rcl
push
sub
pop
mov
inc
dec
mov
and
inc
out
mov
inc
hlt
xor
addps
cwde
pop
pop
adc
pop
fwait
jg
xchg
data16
aad
inc
cmp
push
loop
jno
(bad)
jne
(bad)
scas
xor
fsubr
ins
inc
ficom
imul
outs
iret
sbb
add
lock
idiv
sub
loopne
call
push
add
inc
mov
jle
cli
ins
mov
shl
js
sub
out
in
sub
pop
mov
lea
inc
push
dec
dec
xor
mov
fsubp
jns
data16
lods
or
out
and
shr
and
test
(bad)
mov
mov
cwde
mov
shl
sbb
dec
popf
sbb
or
loop
daa
cmp
pop
add
adc
xchg
pop
clc
cmp
lea
push
scas
aas
iret
nop
xchg
jecxz
xchg
pop
cmp
jmp
jmp
pushf
cmp
jmp
arpl
ret
mov
pop
fidivr
cmp
xchg
jnp
aam
inc
in
mov
lahf
bts
int3
leave
movs
(bad)
sbb
jecxz
adc
lock
mov
adc
and
cmp
lea
fst
push
dec
in
(bad)
add
xor
mov
add
pop
packssdw
mov
sub
xlat
xor
cmp
mov
in
xchg
call
movs
cwde
cs
hlt
ret
(bad)
xor
xor
jns
sbb
test
jmp
stos
xchg
cld
rcr
sub
jno
les
fsubr
pop
cmps
cmp
xchg
add
mov
mov
mov
jnp
mov
jo
and
test
out
pop
ds
addr16
cdq
xchg
adc
and
out
ret
div
loopne
mulps
into
lea
push
out
rcl
mov
and
cmc
fwait
inc
jl
(bad)
movs
or
pop
lock
cwde
mov
retf
bound
xor
jge
rcl
fnstcw
mov
addr16
dec
inc
dec
aam
jge
sbb
(bad)
pop
vxorpd
mov
mov
sbb
adc
fwait
icebp
push
jmp
cwde
popa
or
adc
xchg
mov
not
lea
fisttp
ret
jmp
fs
and
call
test
pop
jg
add
dec
adc
jo
push
mov
mov
movs
xlat
imul
je
(bad)
sahf
push
xchg
xor
jl
pop
dec
push
mov
cmp
in
cld
cmps
rcl
imul
add
and
xchg
adc
push
(bad)
cmp
jbe
mov
sub
outs
jnp
and
cmc
int3
xchg
rol
iret
in
cmps
sbb
call
jge
mov
sub
or
scas
or
aaa
xor
pop
movq
rcl
and
sti
ds
ins
mov
enter
mov
mov
ret
data16
mov
pop
(bad)
or
popa
xchg
pop
xor
ret
pop
stos
das
enter
std
leave
iret
outs
pushf
(bad)
outs
call
mov
or
(bad)
inc
xchg
sbb
or
inc
fsub
xor
mov
jecxz
mov
(bad)
jae
outs
pushf
arpl
push
mov
addr16
popa
(bad)
(bad)
clc
inc
sbb
bound
mov
js
int
ja
mov
retf
pop
jb
in
fsubr
and
cmp
setg
(bad)
fstp
jp
sbb
jb
cmp
in
movs
retf
mov
not
cwde
xchg
je
xchg
pop
and
xchg
fnsave
mov
sbb
mov
mov
push
mov
push
adc
or
inc
and
pop
cmp
or
test
mov
call
xchg
je
push
test
jo
sub
mov
(bad)
push
push
xchg
inc
mov
mov
add
jecxz
pop
(bad)
cmc
xchg
shl
adc
add
xor
aaa
push
xlat
fidivr
jecxz
dec
jl
jno
test
jmp
mov
inc
xchg
popa
jge
mov
mov
add
xchg
jbe
gs
inc
pop
js
mov
jns
push
dec
adc
shr
and
fdivr
cmps
push
(bad)
xor
lock
loope
retf
pop
or
loopne
cdq
jno
push
retf
or
jl
fisubr
mov
jge
outs
js
les
xchg
lock
sar
out
mov
sar
pop
cmp
fst
mov
ds
and
inc
pop
push
sub
mov
outs
sub
in
inc
cmps
dec
shl
dec
inc
xchg
and
pop
mov
int3
inc
icebp
mov
add
lods
cmp
add
in
lods
or
xor
dec
and
sti
cld
into
and
and
cmp
cmp
jg
pop
xor
clc
lahf
cmp
pop
jmp
std
or
add
out
dec
push
inc
neg
in
push
inc
punpcklwd
ds
dec
hlt
cli
xchg
add
das
adc
push
inc
or
(bad)
arpl
dec
in
dec
or
aaa
sub
neg
push
mov
movs
jle
fdiv
jns
add
fsub
rol
cmp
add
or
shl
mov
pop
push
ds
aad
jle
adc
lods
mov
pushf
fadd
sbb
adc
jl
push
cmps
pop
addr16
mov
and
stc
into
xchg
test
(bad)
daa
test
cmc
loop
shl
sbb
in
push
sub
inc
xchg
in
ja
or
inc
ficomp
mov
pop
mov
cmp
xchg
dec
cmp
sub
jb
je
call
fisubr
imul
cmp
int
xor
(bad)
enter
out
sub
inc
jmp
(bad)
(bad)
pop
pop
loopne
jl
xlat
xchg
pop
imul
outs
in
imul
fs
loopne
fcom
daa
jp
xchg
int
inc
mov
add
jno
mov
cmovg
cwde
call
and
mov
outs
repnz
(bad)
in
cmp
je
mov
retf
in
lods
or
mov
sub
inc
out
data16
imul
not
cmp
cs
ja
shl
dec
adc
xchg
cmc
movs
jmp
ficom
mov
(bad)
jns
outs
xchg
in
mov
mov
fisub
fadd
(bad)
cmp
sbb
pop
xor
jmp
pop
int
iret
ret
lahf
(bad)
add
pop
stc
call
mov
cmc
mov
add
mov
or
ds
and
adc
ja
nop
inc
int
icebp
cmp
sbb
loop
adc
mov
(bad)
icebp
push
arpl
mov
adc
and
je
cmp
in
cmp
push
ror
cmp
push
iret
std
dec
xchg
or
arpl
or
inc
inc
jle
inc
jmp
xlat
or
jge
and
lea
fs
dec
pop
ins
mov
fwait
sub
cmps
ja
or
dec
jns
adc
mov
mov
ja
adc
add
mov
or
mov
test
pop
xchg
push
xor
bound
out
mov
push
or
sub
test
(bad)
jae
ret
cmp
dec
jg
test
or
cdq
jb
mov
loope
je
out
xor
div
mov
fwait
push
pop
inc
fcomp
mov
not
push
test
jne
and
daa
ds
add
mov
jmp
dec
ja
in
out
push
frstor
mov
push
dec
and
test
mov
push
mov
dec
retf
cmp
stc
pop
inc
sub
(bad)
or
rol
mov
dec
mov
dec
scas
mov
stos
adc
push
jnp
or
push
xlat
push
lds
popf
(bad)
out
jmp
adc
or
sub
out
inc
rcl
cs
mov
sti
sub
gs
sub
(bad)
adc
scas
pop
out
xor
dec
inc
push
mov
mov
xor
js
repz
xor
and
scas
in
clc
mov
das
movs
loop
mov
push
ret
imul
mov
mov
mov
sbb
shr
inc
mov
cwde
mov
adc
mov
mov
ror
ret
cs
and
cs
pop
sbb
pop
imul
pop
add
and
or
jp
icebp
add
sub
push
add
cmp
es
mov
sub
cmp
dec
sbb
lods
inc
pop
push
and
stos
mov
xor
cmp
repnz
aam
das
loope
bound
dec
lock
pop
add
pusha
fist
data16
lds
and
je
popa
je
jecxz
cmp
scas
cmp
cmp
cs
pop
push
nop
sub
les
cli
ret
jl
sub
int
mov
pop
mov
dec
not
in
xchg
pop
push
push
jns
cmp
daa
in
sub
ds
inc
sahf
and
mov
jo
in
das
mov
sub
pop
xchg
lock
adc
xor
ror
fldz
xchg
push
push
jmp
xchg
jl
mov
ret
or
add
fs
adc
inc
popf
mov
retf
cmp
in
cdq
clc
in
fisub
xor
add
pop
sub
ins
push
push
js
dec
jl
push
jae
outs
cmp
jmp
test
cmp
dec
enter
rcl
add
jl
adc
inc
nop
mov
pop
js
aaa
(bad)
dec
ins
jecxz
das
inc
popf
cmp
xchg
push
or
mov
(bad)
xor
cld
int
adc
mov
dec
lods
mov
push
pop
jmp
adc
js
aam
scas
pop
mov
fcom
push
jbe
shl
add
xchg
cmp
or
ins
add
retf
mov
xor
jge
les
sub
in
inc
mov
je
imul
fstp
mov
add
scas
inc
dec
inc
leave
ror
xchg
(bad)
daa
pop
push
sbb
test
into
adc
js
push
pop
adc
fadd
jne
repnz
cdq
mov
push
mul
adc
shl
adc
sar
cmp
cmp
mov
lock
pop
sbb
cwde
cmp
xor
call
cmp
sahf
inc
mov
mov
xlat
js
inc
push
cli
outs
jmp
lea
adc
pop
sub
pop
pop
lds
js
out
cs
test
(bad)
les
inc
inc
adc
scas
jmp
or
ja
push
push
add
(bad)
loopne
sahf
xchg
vcvtpd2dq
call
ret
push
repnz
inc
data16
cmp
xchg
push
ret
test
add
push
das
lock
inc
xchg
call
mov
or
ins
out
xor
aad
xchg
inc
push
mov
fdiv
add
test
inc
adc
mov
ja
xchg
mov
test
pop
repz
and
xor
test
jb
shr
cmp
fisubr
in
pop
icebp
push
pop
pop
and
in
or
cmps
push
or
ins
js
es
add
ins
xor
adc
mov
mov
jecxz
pusha
mov
push
std
pushf
mov
mov
rol
test
lahf
pop
push
adc
in
test
dec
xor
xlat
outs
mov
nop
mov
sti
xchg
jg
or
jg
sar
adc
fistp
sahf
outs
fld
js
jns
call
aam
(bad)
fldcw
and
test
fdiv
mov
in
adc
mov
stos
xor
pop
pop
jnp
arpl
mov
mov
jmp
call
les
movs
sbb
fiadd
neg
shl
cmp
xchg
fist
xchg
and
jns
mov
xchg
sub
inc
fst
mov
mov
test
push
stos
fs
mov
push
jne
sub
je
(bad)
mov
pop
enter
(bad)
cli
pusha
dec
xor
test
cmps
mov
icebp
sub
cwde
xchg
jbe
sub
cmp
(bad)
mov
jecxz
jno
add
out
outs
and
das
loope
loop
pop
cmps
adc
leave
xchg
pop
sar
mov
cdq
aas
lock
fisttp
add
mov
push
popa
xsavec
cmp
mov
jp
or
sti
inc
test
(bad)
and
stc
je
sbb
test
dec
jg
pop
and
adc
ror
call
test
out
and
prefetchwt1
aad
xchg
inc
scas
shl
aas
ins
mov
loope
and
mov
jg
int3
mov
loope
sbb
test
movs
adc
hlt
(bad)
mov
jecxz
inc
lods
xchg
nop
fsub
xor
mov
inc
enter
pushf
movs
scas
retf
fldln2
mov
mov
or
scas
pop
icebp
push
mov
std
pop
imul
cld
mov
bound
jnp
pop
cmp
icebp
and
push
add
lock
mov
jb
hlt
aam
enter
clc
fld
leave
pop
jb
jge
sbb
xchg
mov
add
add
fcomp
cmc
call
cmps
add
ss
movs
dec
or
ficom
(bad)
sahf
repnz
(bad)
sbb
push
call
and
inc
retf
out
ja
and
test
push
add
inc
test
dec
sbb
mov
loop
jge
lock
xor
fdivr
fwait
xor
lea
imul
repz
movs
xchg
test
jmp
ret
ss
(bad)
cmc
add
mov
loop
aas
movs
iret
shl
cmp
fdiv
xchg
and
inc
call
mov
xor
cmp
test
pop
inc
stc
mov
mov
mov
and
push
stc
fwait
or
jbe
mov
(bad)
pop
(bad)
sub
jge
add
xchg
sbb
mov
push
push
test
nop
rcr
aad
call
test
push
sbb
data16
inc
(bad)
sbb
pop
dec
sahf
add
or
xor
mov
add
call
add
shl
cmp
xor
mov
jb
ins
xchg
outs
pop
jo
aas
or
mov
dec
addr16
jp
inc
jg
test
test
call
bound
fidivr
imul
mov
or
rol
xlat
sbb
aad
lahf
push
retf
aam
jmp
imul
int3
or
jp
repnz
lock
fs
clc
lahf
or
mov
bound
inc
inc
mov
pop
call
mov
aad
movs
push
outs
xchg
mov
xchg
adc
fmul
mov
or
iret
mov
popa
sbb
jp
sti
mov
inc
scas
and
in
dec
and
push
mov
xlat
shl
add
push
push
lods
xor
jmp
in
xchg
inc
movs
ret
aad
sub
or
add
ret
aas
out
call
dec
xor
rep
out
inc
add
jbe
jge
mov
mov
popa
pop
mov
jle
push
test
push
das
popf
retf
xchg
out
mov
fwait
mov
xor
aam
xor
jle
mov
pop
(bad)
cmps
mov
fld
rcr
sti
popa
sbb
scas
ins
scas
push
or
out
jmp
retf
and
std
out
arpl
jl
cmps
jecxz
xor
int3
pop
push
call
repz
imul
sbb
loopne
lahf
dec
lods
stos
test
dec
or
leave
and
sbb
mov
dec
xchg
jl
stos
enter
inc
pop
ret
add
shr
cmp
imul
push
adc
shr
rol
mov
lea
xlat
aaa
cli
sbb
jb
ror
fwait
inc
mov
adc
call
sub
addr16
inc
scas
cld
jmp
pop
push
sbb
fdivr
pop
es
push
and
imul
jns
xor
jae
cli
lods
sbb
(bad)
aas
add
stos
bound
pop
xchg
movs
test
mov
dec
xor
pop
inc
adc
cmp
push
daa
mov
jp
repz
and
movs
je
out
mov
loopne
rol
dec
pop
mov
mov
mov
xchg
ins
daa
movs
jecxz
push
sub
jns
mov
or
(bad)
les
std
rcr
in
jecxz
scas
cmc
xor
sbb
(bad)
mov
jl
sbb
scas
add
sbb
push
rcl
mov
mov
and
std
lea
sub
lods
sub
retf
cmp
popa
and
cmp
cmc
and
(bad)
push
icebp
sub
aam
xor
jp
xor
xchg
xchg
adc
add
mov
mov
mov
loopne
mov
jo
fbld
iret
cmp
pop
test
ja
adc
ja
out
sub
inc
test
sbb
scas
jne
mov
and
loopne
test
push
mov
imul
fdivr
mov
hlt
mov
fmul
int3
inc
mov
xchg
mov
retf
jecxz
jmp
cli
sub
loope
fmul
ret
lahf
mov
jns
fnstsw
xchg
inc
inc
stos
push
js
push
icebp
push
cs
out
or
retf
sub
(bad)
xchg
cmp
div
sbb
xchg
or
push
test
in
push
stc
mov
pop
add
les
inc
mul
and
jg
fsubr
inc
(bad)
outs
adc
das
sbb
lock
mov
and
imul
xor
jnp
and
push
xchg
cmp
xchg
inc
and
leave
push
push
repnz
and
adc
adc
xor
scas
pop
mov
sub
cli
cmp
call
or
add
dec
scas
sbb
cmp
or
xor
js
sub
xor
mov
mov
(bad)
fild
call
add
pop
das
xor
movs
outs
push
sbb
aad
jle
repnz
lahf
div
cmp
xor
push
mov
pmovmskb
lahf
lea
push
jo
sbb
jp
xchg
pop
lods
or
movs
jl
cmp
cmp
cmp
lock
or
stos
push
hlt
idiv
pusha
dec
mov
nop
std
loope
xchg
ins
inc
xor
repz
xchg
neg
fisubr
dec
or
push
(bad)
int3
sahf
xchg
jne
mov
cmp
mov
inc
mov
and
sub
out
and
sbb
loope
mov
icebp
ret
push
xchg
dec
data16
in
ss
mov
sub
xor
mov
ret
cmps
add
arpl
add
mov
adc
push
arpl
cmc
adc
daa
mov
arpl
loopne
fwait
jmp
icebp
sub
dec
leave
shl
inc
inc
aaa
daa
clc
addr16
fsub
inc
xchg
sbb
push
cmp
xchg
dec
test
mov
push
push
fst
(bad)
dec
sub
xor
shl
pop
(bad)
cmps
cmp
(bad)
jmp
lahf
pop
xor
or
adc
mov
in
mov
mov
es
mov
pop
mov
inc
and
adc
outs
(bad)
pushf
ror
sub
or
dec
mov
daa
(bad)
je
mov
iret
in
jns
dec
lahf
cld
add
ins
shl
jl
add
gs
imul
into
sbb
dec
mov
into
or
cmp
mov
cmps
pop
mov
arpl
sahf
xlat
mov
adc
mov
into
jecxz
push
fiadd
jmp
sbb
mov
(bad)
xor
sbb
cmp
fdivr
jo
mov
in
and
or
mov
shr
jecxz
pop
lds
fld
inc
(bad)
add
lahf
fwait
xor
mov
outs
fcmovu
das
in
sahf
outs
(bad)
and
test
dec
mov
push
mov
mov
xchg
repnz
pop
pop
sbb
jne
std
add
cld
dec
cmp
xchg
sub
adc
or
lea
and
push
lock
and
clc
mov
call
cmp
mov
arpl
mov
and
or
ja
inc
test
and
fwait
jne
repnz
cld
push
stc
add
jge
shl
pop
neg
(bad)
xchg
shr
adc
add
dec
sbb
aad
push
fld
xchg
lock
cmp
in
jp
les
movs
ins
stos
push
xchg
adc
jle
push
push
bnd
jb
mov
sub
stc
jae
cmc
pop
jno
int3
mov
retf
inc
mov
sti
or
mov
mov
adc
ja
jg
jl
push
in
(bad)
dec
mov
adc
dec
daa
retf
aaa
out
data16
push
ja
ds
dec
push
jl
mov
outs
xor
add
stos
mov
mov
adc
loopne
inc
pushf
aam
pop
ret
mov
pop
and
outs
xor
ds
jmp
ret
pop
leave
fsub
lods
xor
and
pop
dec
sti
mov
sub
jp
push
xlat
rep
pop
pop
out
int3
shl
aad
inc
iret
xchg
mov
cmp
stos
push
inc
cmp
(bad)
repz
push
mov
push
ret
jp
mov
stos
pop
mov
xor
xchg
sbb
add
sbb
dec
cld
iret
pushf
sub
jb
sub
jb
adc
jbe
outs
push
sub
xchg
fstp
xchg
jmp
gs
loopne
jmp
ret
add
cmps
adc
and
in
cmps
add
dec
imul
jmp
and
ins
mov
xlat
imul
loope
daa
(bad)
fidivr
imul
xchg
iret
retf
nop
or
mov
(bad)
scas
loopne
xchg
add
adc
fdiv
ret
inc
fistp
xlat
jmp
and
pop
xchg
into
mov
jge
cmp
dec
std
jle
idiv
push
sbb
scas
(bad)
inc
xlat
fwait
mov
xchg
int3
cmp
xchg
jmp
inc
aam
ds
and
jecxz
inc
xchg
sub
mov
jp
push
dec
push
push
outs
es
xchg
test
cmc
inc
and
outs
rcl
lods
jns
add
das
inc
inc
loop
mov
rcl
cmc
les
out
and
test
imul
mov
jmp
sbb
sbb
loopne
rcr
int
dec
sub
idiv
inc
adc
xor
dec
cli
sti
mov
xchg
sub
sub
fucom
add
push
movs
fiadd
sbb
cmp
dec
je
cli
out
xchg
cwde
test
mov
cdq
pop
push
mov
adc
rcl
and
enter
dec
or
out
(bad)
and
sub
shl
add
sbb
fwait
jne
xchg
dec
les
leave
push
pop
or
and
mov
jecxz
jecxz
imul
shl
xchg
das
adc
aaa
push
jl
fcomp
pop
push
adc
daa
or
adc
mov
push
and
adc
(bad)
dec
cvtps2pd
inc
inc
lds
ret
or
mov
jno
stos
dec
test
nop
ins
gs
(bad)
and
xor
mov
xchg
pusha
pushf
stos
outs
pop
jb
mov
push
shl
lods
mov
outs
scas
ins
mov
inc
icebp
or
dec
push
xor
shl
mov
and
lock
jns
into
gs
ds
cmp
adc
in
dec
cwde
repnz
add
ja
aam
hlt
sahf
scas
sbb
push
les
mov
dec
xor
int3
mov
lods
push
adc
cmp
and
adc
sub
in
js
imul
inc
sbb
jae
mov
pop
push
inc
pop
pusha
imul
shl
int3
popa
dec
adc
cld
stos
dec
jmp
jmp
mov
or
jge
push
and
dec
xchg
xchg
and
icebp
sbb
or
fisub
jne
push
outs
shr
push
xor
imul
clc
enter
adc
mov
push
xchg
std
div
cli
andnps
dec
in
leave
jge
shr
lahf
or
mov
daa
lods
retf
and
fidiv
nop
add
mov
add
movs
shl
cmp
cmps
cli
jnp
mov
sbb
mov
mov
add
xchg
add
(bad)
(bad)
aas
xlat
fisttp
pop
or
sub
push
dec
pop
push
pop
ins
push
data16
hlt
fisttp
fwait
jns
out
retf
dec
jmp
sar
imul
(bad)
in
cmc
or
mov
sbb
ins
sub
adc
sahf
arpl
xor
test
mov
and
ins
popf
xchg
shl
cld
leave
dec
dec
fistp
xchg
mov
mov
leave
jb
jne
sub
inc
call
dec
enter
push
push
out
retf
adc
sbb
sbb
movs
jae
out
mov
hlt
repz
cmp
adc
xor
nop
stos
in
jne
mov
sub
xor
test
and
and
and
lods
or
and
dec
pusha
add
mov
xor
stc
pop
(bad)
out
adc
mov
inc
mov
or
repz
push
fs
daa
cmp
cwde
mov
dec
mov
repz
loop
dec
jbe
jno
jle
mov
jg
xor
push
fsubr
fcmovb
dec
clc
mov
push
push
mov
or
mov
test
aas
into
inc
js
cmp
jecxz
call
jno
das
rcl
fwait
enter
sbb
in
retf
lods
adc
movs
mov
les
sbb
cmps
jne
inc
sub
icebp
push
ret
dec
(bad)
sub
adc
ret
test
jae
loop
aad
outs
fsub
pop
mov
aad
push
daa
inc
dec
cmc
sub
out
pop
inc
imul
sar
mov
add
mov
cmp
dec
outs
jo
sub
in
fiadd
enter
sub
std
mov
movs
pushf
mov
movs
cmps
stos
outs
loop
out
in
mov
stc
retf
jge
fcmovnu
add
add
pop
pop
and
push
cmp
mov
fdivr
mov
xchg
adc
daa
mov
push
pop
mov
sbb
push
jecxz
pop
inc
aam
in
xor
adc
pop
add
mov
leave
and
mov
add
outs
xor
stos
and
and
add
inc
sub
jno
dec
jno
jns
cmp
(bad)
adc
dec
mov
jnp
cwde
dec
icebp
clc
mov
xchg
lods
std
jno
repnz
and
pop
div
loop
test
retf
fidivr
mov
fs
test
inc
dec
pop
std
(bad)
xor
loopne
mul
rcl
repnz
fimul
movs
xchg
sar
mov
mov
dec
sti
jno
sub
inc
imul
mov
dec
clc
mov
inc
xor
rol
leave
push
sbb
add
loop
mov
pop
sbb
dec
icebp
sub
xchg
lods
xor
in
enter
pop
mov
inc
in
not
mov
loope
lods
ins
push
sahf
retf
in
cs
and
xchg
push
xchg
pand
mov
fsub
inc
and
xlat
loop
shl
fimul
cmc
add
(bad)
das
dec
clc
cdq
xor
in
sbb
add
adc
push
pop
cmp
dec
into
mov
adc
mov
(bad)
scas
or
lahf
inc
sub
lods
dec
xor
mov
mov
mov
movs
stos
fcom
push
xchg
sbb
dec
pusha
sub
xor
push
or
out
stc
push
dec
stc
int3
dec
xchg
adc
mov
cld
mov
pop
inc
enter
sbb
ins
outs
mov
xchg
lds
adc
loop
cmp
sbb
loope
pop
sub
nop
jno
jecxz
push
mov
aam
or
adc
inc
movs
fs
lahf
xor
int3
jl
int
mov
ins
cs
es
repz
arpl
and
iret
jg
jo
cli
or
push
bound
shl
push
jo
inc
push
jg
mov
dec
pop
dec
pop
adc
lods
dec
cmps
fs
or
cdq
push
push
adc
(bad)
fst
shld
mov
push
lock
retf
pop
xor
mov
adc
pop
sub
lahf
adc
sti
dec
cmp
pop
ins
div
ins
adc
jge
mov
mov
add
jg
or
dec
push
into
mov
mov
sbb
cmp
jnp
jnp
dec
pop
and
into
aaa
(bad)
xor
xor
add
loop
push
pop
aaa
pop
or
adc
push
mov
mov
and
icebp
iret
mov
ds
bound
xor
jb
inc
js
popa
stc
mov
mov
jne
out
mov
and
and
ficom
data16
leave
leave
gs
inc
or
gs
test
out
stos
test
pop
aad
imul
mov
cmp
mov
fs
js
fldenv
icebp
inc
mov
inc
pop
lahf
dec
fldenv
push
(bad)
(bad)
cmp
push
cmp
push
push
push
out
mov
mov
dec
jmp
rcr
xor
jmp
imul
mov
and
sub
mov
inc
mov
xchg
sbb
pusha
pusha
cmp
repz
lahf
ins
out
cmp
jecxz
xor
mov
jns
mov
mov
loop
aad
or
jnp
mov
adc
dec
mov
jo
in
mov
inc
mov
int
mov
mov
xchg
(bad)
iret
sbb
xor
sbb
pop
mov
fldenv
and
xchg
repz
or
dec
std
pusha
ins
std
outs
pop
mov
ins
int3
in
xlat
lahf
les
mov
mov
jns
xor
into
jle
sbb
mov
outs
jo
xchg
aad
es
jmp
cld
cmp
or
clc
push
shr
push
push
outs
inc
pop
sbb
loope
pop
inc
jae
test
inc
pop
jmp
adc
xchg
push
out
sbb
or
jnp
jnp
dec
adc
aaa
sbb
and
rol
enter
js
call
add
enter
ja
out
mov
add
bound
ja
push
dec
movs
test
popa
outs
ficomp
push
aam
movzx
push
fdivr
bound
and
jbe
outs
or
xchg
sub
ficom
popa
popa
bound
out
out
mov
retf
in
and
mov
xor
push
jbe
stos
scas
cmp
mov
aam
push
pop
stos
jl
je
call
xchg
(bad)
jnp
sar
and
inc
fwait
push
stos
adc
fwait
mov
lods
jbe
pop
xchg
jl
es
add
sbb
scas
jecxz
sbb
jbe
stos
push
retf
xchg
sub
sbb
call
call
lds
xor
xchg
retf
cmps
or
nop
dec
fst
jmp
pop
pop
or
aas
jnp
push
or
xlat
add
cli
(bad)
push
mov
sub
lods
and
sub
lds
add
push
std
xor
(bad)
imul
inc
scas
lea
xor
jae
(bad)
test
pop
sub
sub
fistp
cld
dec
bound
in
pop
cli
rol
jmp
sbb
xchg
fisubr
es
push
push
mov
shl
jbe
cmp
mov
test
or
xchg
pop
(bad)
sub
arpl
push
sbb
push
xor
adc
add
and
es
sub
inc
push
pop
xor
push
enter
cmps
scas
sub
add
les
bound
sub
aas
pop
out
pop
sub
dec
bound
adc
out
and
or
bound
or
imul
enter
inc
add
jno
sbb
pop
adc
mov
sbb
xor
fidiv
outs
add
call
movs
dec
push
outs
cmp
iret
fwait
xor
cmc
lods
inc
sbb
mov
int3
dec
cmp
pusha
fcmovnu
pop
add
std
pop
push
ror
xchg
push
xor
cmp
gs
stc
push
addr16
out
loop
aam
push
push
cmc
adc
and
cld
nop
mov
loopne
mov
mov
cmp
(bad)
adc
sub
inc
retf
dec
or
ins
xchg
and
test
je
push
clc
cdq
arpl
in
(bad)
and
stos
out
jg
push
sbb
and
sub
adc
out
mov
cmp
ds
cld
aam
and
(bad)
mov
mov
pop
cmps
mov
jno
int
mov
inc
mov
inc
inc
outs
mov
sub
mov
and
std
or
out
sub
adc
add
retf
ror
jno
sub
shl
je
push
rcr
neg
mov
mov
adc
mov
in
shl
xlat
jnp
imul
mov
in
fdiv
mov
xor
mov
jecxz
aam
adc
(bad)
push
mov
fiadd
jns
(bad)
sub
xchg
lea
test
and
pop
xor
inc
mov
push
xchg
mov
mov
mov
mov
sbb
(bad)
in
dec
push
mov
or
sti
outs
cdq
push
add
or
stc
push
movd
daa
rcr
out
pcmpeqb
out
leave
inc
sbb
xchg
retf
pop
inc
repz
jmp
lahf
xor
mov
mov
adc
sar
fisub
(bad)
inc
test
dec
sub
and
adc
push
mov
pop
scas
out
outs
adc
aad
and
call
mov
jb
pushf
shl
frstor
xor
add
popa
fwait
cdq
fisttp
mov
xor
xor
outs
inc
sbb
loop
xchg
or
lock
sar
ret
cmp
imul
dec
adc
mov
dec
push
lods
sub
rcr
popf
pushf
out
out
and
aam
add
repnz
cmps
arpl
xchg
xlat
and
ss
or
xchg
pop
aam
sbb
movs
or
adc
xchg
fsubr
retf
add
mov
sbb
pop
sub
fild
sbb
mov
push
fdivr
mov
loop
jo
xor
jp
(bad)
int
push
jnp
mov
stc
dec
sti
mov
loopne
mov
cli
ror
fwait
push
pop
pop
addr16
jbe
mov
movs
mov
pop
adc
icebp
dec
fwait
mov
mov
mov
inc
mov
stos
mov
jmp
lock
neg
sbb
jns
push
retf
cmp
dec
cmp
or
vsubpd
and
(bad)
sub
lds
xor
stos
fiadd
sbb
jns
push
jmp
in
mov
xchg
cmps
jmp
cmp
call
mov
pop
std
shl
add
mov
xchg
and
ins
das
add
jmp
std
mov
jmp
sbb
retf
jp
jl
cdq
cmp
push
int3
mov
mov
enter
lds
test
cmps
mov
imul
push
imul
and
inc
jle
in
sub
ror
addr16
loopne
xor
daa
and
jge
ja
jne
or
inc
jge
ja
clc
lock
mov
jl
scas
xchg
cli
neg
lea
pop
jae
jl
js
ss
push
sub
lods
sahf
mov
pop
retf
jns
gs
xchg
dec
arpl
mov
xor
mov
xor
or
sbb
sub
hlt
ret
push
test
push
ins
xor
pushf
cs
dec
ret
sbb
fs
jge
jbe
pop
sar
xlat
jle
ret
and
inc
push
mov
call
xchg
xor
mov
fwait
mov
jne
push
jmp
inc
daa
xchg
aas
jne
push
clc
add
ds
repz
pop
sub
mov
inc
lock
mov
les
sub
and
add
fnstcw
(bad)
daa
jae
cmc
mov
clc
arpl
int
jae
(bad)
cmp
scas
fcomip
dec
push
mov
arpl
stos
and
fisttp
lds
lea
in
ja
push
jbe
dec
pusha
cmp
das
(bad)
clc
xor
es
cmp
retf
dec
scas
outs
rcl
add
xlat
push
xor
retf
mov
xor
add
test
nop
mov
mov
retf
(bad)
(bad)
mov
inc
xor
xchg
sbb
add
add
shr
or
mov
in
xchg
xchg
add
sbb
fs
cmps
adc
jmp
jns
out
cmp
xlat
mov
sub
fisub
dec
rcr
push
gs
pop
outs
fwait
lods
cld
pop
(bad)
fstp
je
aaa
lods
jg
std
repz
cmps
movs
sahf
xor
inc
rcr
cmp
or
dec
cmp
inc
or
lods
repnz
mov
xrelease
jecxz
stos
arpl
in
dec
repnz
push
and
sub
push
xor
ja
sub
sbb
daa
retf
xor
bnd
cmp
jnp
fnsave
div
imul
pop
mov
sbb
mov
retf
push
imul
ins
les
pop
bound
lar
mov
add
movs
cmps
pop
pop
and
(bad)
and
jbe
pop
and
lock
add
xchg
movs
iret
outs
and
sbb
mov
fld
(bad)
ins
xchg
mov
mov
test
pop
pop
ins
push
mov
inc
or
and
in
retf
cwde
fcmovnu
out
cmps
jne
cmovp
xchg
jo
cs
or
cwde
mov
jle
mov
inc
call
adc
sub
ret
test
scas
add
add
push
pop
and
xchg
jo
push
push
mul
add
jecxz
xor
retf
aad
cdq
cmp
ins
iret
mov
fisubr
sar
dec
fild
add
jnp
pop
mov
and
xchg
in
dec
mov
jl
pop
es
aaa
xchg
(bad)
icebp
or
jo
lods
xor
sbb
movs
sbb
jno
xchg
jnp
adc
ret
test
dec
dec
xchg
addr16
or
mov
mov
pop
push
push
and
ds
push
(bad)
scas
xchg
add
cvtpi2ps
out
pop
sub
aad
pusha
mov
xchg
or
(bad)
loopne
fstp
mov
sar
stos
inc
leave
lds
sub
jp
adc
pop
mov
out
sub
push
push
ret
or
cmp
mov
xchg
gs
aam
sbb
and
rol
pop
xchg
fst
ret
add
in
push
loopne
cmps
ins
mov
push
mov
not
push
mov
ss
sub
mov
ins
je
pop
xchg
fisttp
loopne
or
mov
mov
std
fild
fimul
data16
inc
jp
push
fisttp
and
jbe
shl
int3
jbe
cli
adc
pop
sbb
and
inc
out
jb
pop
(bad)
bnd
cmp
leave
fbld
mov
fidivr
pusha
inc
outs
leave
shr
pop
ret
mov
xchg
ret
inc
sbb
adc
cmp
ret
and
xchg
(bad)
cdq
cmps
xlat
(bad)
mov
dec
sti
(bad)
aad
or
mov
lods
dec
mov
test
sti
mov
shl
fcom
cmc
or
popf
push
mov
lock
adc
ds
test
lds
shl
xchg
cmc
inc
(bad)
iret
mov
mov
mov
mov
xor
or
inc
add
inc
pusha
in
xor
jbe
ss
push
pop
jnp
or
cld
and
inc
sub
add
sbb
pop
aaa
and
in
cmp
sub
scas
jne
je
test
or
dec
sysexit
stos
sub
dec
cwde
or
mov
(bad)
jns
pop
sbb
not
mov
fcom
dec
fimul
add
inc
cmps
cmps
retf
stos
inc
fdivr
cmp
xor
fs
push
push
cmps
or
sbb
xchg
clc
pop
mov
imul
push
add
sbb
jb
ins
mov
or
sahf
jo
dec
(bad)
nop
in
leave
inc
in
mov
das
adc
in
inc
mov
int
(bad)
mov
movs
xchg
dec
data16
xchg
es
mov
in
mov
adc
adc
dec
sbb
mov
jmp
imul
data16
mov
in
daa
fisttp
xchg
add
sbb
getsec
mov
cmps
inc
add
sub
mov
sar
stc
aas
imul
mov
xor
or
jp
push
push
xchg
mov
mov
xlat
and
cmp
adc
mov
arpl
ret
movs
mov
fdiv
fld
int
xchg
test
xchg
xor
sbb
cmp
loope
shl
and
movs
and
push
in
(bad)
mov
ror
out
adc
mov
adc
aad
popf
sub
ja
push
mov
lahf
push
nop
movs
sbb
cmp
rol
ret
and
rol
ins
lods
add
add
sar
ja
sbb
xchg
jg
sub
inc
cmp
and
and
xchg
pop
or
xor
(bad)
stos
fs
xor
scas
loopne
pushf
mov
mov
add
clc
xor
mov
jg
loop
and
mov
jl
and
ficomp
out
scas
mov
mov
outs
mov
cmp
jne
test
adc
pop
sar
pop
mov
mov
sbb
jne
aad
stos
je
add
loope
enter
arpl
out
mov
xor
stc
and
jmp
cli
cmp
xor
int
mov
adc
cmc
or
(bad)
js
jge
xor
pushf
dec
arpl
cs
retf
add
lds
push
retf
les
inc
xor
stos
cli
push
sbb
popa
jno
push
jecxz
int3
outs
cmps
fisttp
add
pop
add
std
push
mov
pushf
xchg
outs
jmp
(bad)
int3
or
(bad)
dec
das
(bad)
push
in
aas
bound
xor
pop
mov
ja
lods
loop
dec
fidiv
mov
out
xchg
push
adc
push
pop
pop
pop
mov
or
nop
fs
and
dec
ss
movs
pop
inc
add
into
js
add
pop
loopne
loope
out
inc
sahf
push
xor
mov
inc
fbld
dec
mov
jle
xchg
enter
and
aas
xchg
je
mov
das
ret
mov
jnp
call
xor
mov
and
fs
pop
call
movs
jmp
xchg
or
popf
jmp
and
fwait
icebp
sbb
loopne
inc
frstor
test
sar
sar
dec
jecxz
loopne
pushf
mov
cdq
cld
cmp
mov
scas
mov
nop
stos
pop
pop
sbb
ja
test
mov
xchg
jbe
sbb
clc
call
xor
push
jecxz
ret
dec
sub
dec
mov
xor
dec
icebp
mov
xor
mov
jmp
arpl
xchg
jbe
sbb
scas
lahf
jno
mov
cs
loopne
pop
movs
std
push
es
jge
mov
nop
ret
sbb
jmp
je
ss
int3
(bad)
out
mov
sub
xchg
fisttp
xlat
push
(bad)
jmp
or
daa
sbb
(bad)
aam
ins
retf
je
rol
rcr
ret
cmp
pop
movs
lods
push
nop
fimul
fistp
fisttp
xchg
mov
adc
inc
xchg
mov
and
jo
jmp
or
outs
ret
mov
cmps
pusha
mov
jb
add
pop
pop
lock
push
adc
addr16
fwait
sbb
pop
push
cmc
outs
lds
sub
jns
xor
setl
rcr
in
xor
mov
cld
stos
pop
jp
enter
jl
push
push
mov
and
add
aaa
jbe
push
sbb
loop
aam
(bad)
(bad)
pop
dec
(bad)
leave
ss
mov
mov
loopne
lds
stc
aad
adc
or
gs
and
pop
clc
pop
xchg
jmp
iret
repnz
repz
bound
fiadd
jb
sbb
daa
int
inc
call
xchg
xchg
or
in
push
shl
mov
pop
aad
cwde
mov
rcl
and
inc
(bad)
jg
out
popf
scas
rol
push
xor
cdq
rcr
mov
xchg
cmp
inc
imul
in
mov
fcomp
ret
xchg
enter
sub
inc
and
jbe
push
enter
fcmovnbe
stos
push
test
ins
(bad)
xor
sub
pop
xchg
mov
sub
(bad)
pusha
dec
xor
fwait
aad
pop
inc
fcmovne
stos
sahf
pop
mov
push
ins
xchg
jge
sbb
or
imul
mov
ror
cmp
dec
cmp
stos
or
xor
jne
xchg
jp
cmp
int
std
push
xor
sub
scas
adc
push
inc
out
add
fs
cli
mov
lock
outs
mov
cmp
lea
inc
mov
push
rol
movs
por
test
add
cli
daa
cmc
xor
imul
jbe
xor
jmp
push
daa
cmp
xchg
inc
sub
xchg
ret
lods
jg
mov
pop
fldcw
popf
pop
in
scas
mov
out
fwait
les
je
fistp
iret
mov
repz
clc
jo
out
out
mov
loope
call
mov
mov
cmp
xor
ins
xor
div
arpl
scas
jnp
popa
mul
not
std
xor
or
jmp
out
out
mov
push
push
test
out
xchg
push
mov
pop
test
sub
pop
dec
fld
xchg
push
cmp
repz
mov
pop
rcr
bound
xor
or
addps
stc
pop
add
inc
jmp
js
mov
push
inc
inc
ror
push
clc
push
(bad)
clc
mov
in
sahf
ror
cmp
jmp
push
pop
adc
enter
nop
repz
call
xchg
in
nop
je
call
popf
sti
jne
inc
and
movs
push
test
fdivr
xor
out
and
hlt
out
jmp
stos
cmp
aad
push
enter
movs
movs
ret
lods
sbb
test
pop
adc
jl
jnp
arpl
lods
adc
xor
xchg
(bad)
sahf
movs
xor
mov
mov
movs
out
stc
(bad)
mov
(bad)
jo
jl
(bad)
fcom
mov
mov
dec
pop
fidiv
push
jle
jmp
aad
jbe
jnp
loopne
mov
sub
das
sub
dec
cmps
adc
and
or
cs
or
stos
enter
shr
inc
pop
sahf
dec
repz
push
jnp
dec
sbb
gs
mov
popf
sub
fmulp
push
add
sahf
pusha
(bad)
jg
mov
cmc
bound
mov
and
cld
das
add
pop
loopne
gs
jns
jle
scas
stos
push
arpl
(bad)
out
push
je
shl
mov
nop
pop
lods
add
jbe
or
ret
xchg
inc
adc
jae
inc
push
pop
dec
mov
jg
shl
push
lods
retf
fld
sub
sub
mov
cmps
into
or
test
dec
mov
aaa
shl
mov
fst
mov
out
sub
xor
jno
aaa
ret
mov
pop
enter
pop
aaa
cmps
scas
jne
jmp
or
and
or
mov
aam
xchg
movs
inc
adc
adc
xor
loopne
mov
out
popa
push
mov
out
aad
cdq
or
mov
or
movs
fdivr
xor
into
cmp
arpl
jmp
movs
push
das
lahf
sar
mov
lods
and
and
adc
cmp
rcr
ror
sbb
mov
push
sti
cmps
jecxz
cs
fcmovb
add
loopne
inc
fistp
fld
sub
pop
inc
mov
push
mov
(bad)
in
add
sub
xchg
xchg
pop
add
retf
jp
jnp
mov
xor
cmps
inc
dec
push
inc
sub
fcom
mov
fstp
mov
adc
test
fstp
mov
cmp
jmp
mov
and
mov
leave
std
cwde
shr
mov
lods
rcl
test
and
lods
mov
into
scas
mov
push
sbb
cmp
call
add
stos
call
cmp
shr
stos
push
fbstp
jp
(bad)
and
fwait
test
fcom
mov
hlt
mov
xchg
dec
or
popa
imul
cmp
retf
ret
rcr
sbb
and
retf
daa
ss
adc
pop
int3
or
dec
or
rcl
adc
cbw
xor
xchg
or
out
sbb
inc
mov
addr16
data16
nop
pop
mov
iret
add
aad
xor
push
js
cs
das
out
fdivr
ins
stos
imul
xor
(bad)
jns
xchg
pop
xchg
enter
adc
iret
jae
js
mov
in
repz
push
jle
fndisi(8087
pop
mov
push
xchg
push
(bad)
das
sar
inc
sar
jnp
mov
adc
xchg
xor
xor
(bad)
retf
mov
hlt
ja
push
out
push
mov
jl
lods
inc
xor
jo
xor
pop
xchg
(bad)
ficom
cmp
repz
fnstenv
lods
inc
mov
sbb
jae
cld
rol
inc
hlt
cli
mov
pop
xchg
xchg
shl
mov
leave
bound
daa
int
shl
mov
fmul
jb
repz
dec
xor
in
push
push
stos
aas
iret
sahf
in
push
movs
pushf
popf
mov
into
jmp
add
(bad)
fisubr
scas
aam
call
jmp
arpl
popa
(bad)
repz
inc
push
mov
cmc
push
cli
(bad)
inc
ror
mov
pop
jp
inc
push
pop
adc
xchg
sar
cwde
outs
fucomi
mov
mov
sub
pop
dec
(bad)
inc
(bad)
leave
iret
adc
mov
lods
jmp
pop
mov
fs
mov
mov
mov
in
xor
pop
fcmovb
mov
cli
and
retf
inc
add
adc
bound
rol
cmp
call
ins
jns
out
(bad)
jae
gs
aaa
pushfw
xchg
shl
xchg
dec
xchg
push
arpl
out
dec
jno
pushf
sub
retf
pop
dec
sbb
sub
pop
dec
xor
into
adc
pop
(bad)
jmp
and
sub
sbb
stos
jge
jae
hlt
pop
lods
mov
aad
cmc
movs
dec
rcl
scas
pop
aas
xor
clc
push
xor
les
adc
je
ret
stos
dec
mov
bound
loop
sti
dec
ins
adc
cmp
movs
jnp
test
(bad)
mov
leave
(bad)
push
push
addr16
push
(bad)
jl
test
mov
ja
mov
jl
xchg
lahf
and
in
aaa
inc
mov
test
add
sbb
sub
ffreep
push
outs
sar
ds
clc
(bad)
ret
stos
push
mov
movs
test
movs
and
(bad)
mov
lea
jmp
xchg
pusha
cdq
dec
ficomp
sti
out
scas
in
lock
pop
dec
inc
jmp
mul
mov
mov
jmp
je
(bad)
in
jne
or
(bad)
sbb
sti
dec
mov
cwde
inc
jecxz
inc
stos
nop
in
jmp
dec
sbb
stos
or
xchg
mov
fdiv
xchg
xor
xchg
xor
fisttp
add
xchg
sbb
pop
jnp
jl
xor
cs
int3
or
pslld
aad
stos
and
dec
push
jo
pop
push
aas
add
jns
mov
jmp
jbe
into
popa
push
popf
imul
int3
(bad)
daa
and
xor
dec
mov
jmp
and
hlt
call
pushf
fs
mov
mov
ret
lods
and
cmp
jmp
outs
sbb
dec
xlat
jno
outs
add
lock
dec
mov
add
and
(bad)
aam
dec
xchg
mov
out
jmp
retfw
push
retf
test
adc
adc
mov
mov
mov
call
sub
ds
jl
stos
mov
repz
push
mov
or
jne
sub
pop
push
jbe
adc
in
or
cld
pop
rol
xor
mov
or
mov
ret
ins
dec
(bad)
or
repz
add
movs
push
pop
es
ins
mov
mov
inc
push
xor
movs
jle
push
mov
test
mov
ret
inc
add
mov
popf
xchg
add
cs
lea
shl
or
and
adc
leave
(bad)
imul
scas
in
sar
jns
test
xor
adc
push
cmps
jmp
js
mov
jl
shl
movs
cwde
in
adc
jb
and
sti
inc
push
fnsave
push
mov
and
inc
les
pop
aaa
aad
loopne
sub
ret
push
jae
or
stos
and
mov
sub
jns
iret
mov
adc
pop
mov
add
xchg
mov
mov
jbe
add
dec
and
pop
and
jns
(bad)
add
mov
retf
cmp
sbb
test
aaa
dec
jp
or
xchg
dec
sub
ins
mov
cmp
cmc
arpl
int3
jns
stc
mov
ds
push
mov
sbb
add
clc
popa
test
and
mov
lods
pop
iret
loop
xchg
ins
lahf
cmps
daa
fdivr
adc
push
int3
sub
lea
int3
sub
jo
es
daa
mov
popa
jnp
push
pop
aad
scas
pop
(bad)
sub
cdq
retf
imul
mov
jmpw
sbb
mov
in
iret
pop
sbb
loop
mov
mov
pushf
push
loop
jae
call
and
dec
sub
jecxz
ret
out
loop
stos
gs
add
cdq
cmp
adc
mov
in
stos
fidivr
retf
sbb
aad
jmp
push
jecxz
iret
push
sub
ins
push
jno
stc
xchg
push
sub
jbe
add
jno
jmp
in
(bad)
lods
aam
in
das
jns
sub
cmp
ja
(bad)
repz
inc
leave
dec
(bad)
adc
pop
rol
dec
or
test
in
(bad)
fisub
xchg
inc
enter
ins
sbb
jp
jge
sbb
std
sbb
push
es
ins
into
mov
nop
xchg
shr
cld
pushf
cmp
sub
sbb
out
pop
neg
outs
out
sub
test
pop
adc
imul
std
aas
sub
add
dec
das
fs
sbb
dec
xor
sbb
pusha
retf
cmps
push
sbb
adc
xchg
sbb
movs
and
adc
outs
lock
sbb
cmp
test
mov
cdq
fiadd
or
je
add
sbb
mov
mov
(bad)
ret
call
into
cwde
(bad)
repnz
dec
xchg
fcomip
push
(bad)
mov
xor
pushf
aaa
lods
stos
leave
dec
pop
cli
push
leave
sub
or
push
jo
stos
cmp
or
inc
imul
fadd
test
aam
sub
daa
and
ds
xlat
cmc
add
mov
xchg
ins
sbb
mov
loop
and
xor
push
sahf
or
sbb
rcr
pop
pop
push
push
jmp
jnp
cli
pushf
push
or
ins
add
xor
outs
inc
mov
xlat
cmp
jno
mov
bound
jl
add
mov
push
clc
sbb
xor
lds
dec
(bad)
mov
call
push
outs
outs
call
mov
imul
call
hlt
test
pop
adc
push
dec
retf
arpl
jne
or
mov
rcl
pop
cld
sbb
(bad)
fwait
outs
call
mov
mov
dec
push
adc
cmps
jmp
cmp
add
mov
pop
mov
dec
(bad)
pop
or
xor
retf
cmp
mov
aas
retf
pop
fsubp
mov
scas
push
pop
adc
adc
in
and
xchg
out
std
jae
aam
ror
or
pop
ror
aam
inc
aam
sub
les
mov
and
fdivr
push
jae
movs
cmps
dec
cwde
push
adc
push
pop
imul
jmp
into
(bad)
gs
add
dec
jle
xchg
sub
cli
cmp
jle
sub
push
add
jl
push
(bad)
lods
jle
xchg
mov
xchg
jg
xchg
jle
dec
outs
sub
fdivr
mov
scas
push
bnd
push
xor
stos
jbe
addr16
pop
xlat
push
repnz
mov
mov
imul
add
shl
cli
cmc
lahf
push
out
push
in
or
jnp
cmp
in
leave
adc
iret
jp
adc
nop
inc
and
jp
jbe
jo
push
sub
jecxz
sub
popa
and
push
stos
pushf
cli
push
ins
stos
mov
add
or
pop
fwait
cmp
(bad)
jb
add
jecxz
movs
ret
stc
push
jnp
sti
aaa
mov
and
test
fcmovb
lock
test
sub
mov
test
push
xchg
jmp
iret
mov
mov
in
xor
sar
xchg
dec
int
mov
mov
sbb
xlat
push
xor
xchg
pop
jmp
push
neg
adc
in
jle
stos
or
iret
mov
inc
dec
and
inc
fwait
jmp
mov
dec
dec
sub
jno
fild
in
pop
mov
loope
inc
test
lock
fwait
add
inc
int3
adc
fild
retf
add
out
mov
or
pop
push
add
jbe
and
xlat
adc
inc
sbb
mov
xchg
pop
lock
fsub
mov
adc
inc
es
in
ins
es
pushf
cmp
ret
adc
cmp
adc
add
call
sub
sbb
push
leave
inc
gs
dec
push
mov
mov
jne
cmp
inc
ja
es
fidiv
jle
test
lahf
out
push
nop
xchg
neg
xchg
sbb
mov
jmp
jle
sbb
and
jg
lahf
jae
aad
and
aas
sub
add
in
imul
push
ins
dec
fimul
push
sahf
jg
jmp
scas
sbb
in
lea
mov
adc
pop
enter
and
(bad)
es
not
sbb
or
cwde
stc
xor
mov
sbb
sub
jp
jmp
(bad)
inc
lods
js
dec
mov
std
mov
dec
bound
aad
inc
mov
jecxz
xchg
imul
ss
pop
inc
add
lods
sti
adc
les
and
fs
inc
adc
test
mov
dec
mov
xor
push
loope
in
cs
and
retf
and
adc
inc
xchg
aad
ucomiss
jmp
mov
pop
sub
test
mov
aad
and
push
arpl
add
sub
popa
xor
and
xor
ins
push
and
lods
shr
inc
jae
ficom
lea
das
push
je
sub
in
std
xor
add
mov
je
xchg
out
inc
cli
xchg
xchg
pop
ror
pop
stc
adc
rcr
jb
xchg
jg
stos
xor
bound
gs
cmp
jle
jecxz
inc
out
mov
pusha
or
cmp
xchg
pop
div
scas
cmp
ins
retf
aas
popa
mov
hlt
imul
and
and
ret
or
lea
push
and
jnp
pop
mov
out
sbb
push
lahf
sahf
fldenv
jecxz
xor
xchg
cmp
xchg
push
out
test
and
pop
jg
push
mov
cwde
mov
dec
dec
idiv
cmp
inc
xlat
movs
shl
sub
pop
dec
fsub
repnz
push
push
fs
jle
push
int
mov
pop
in
push
mov
adc
dec
je
pop
sub
inc
push
mov
push
dec
pushf
dec
add
pop
jl
cmc
sbb
fimul
and
dec
js
add
test
jns
loop
dec
mov
cmp
fdivr
add
movs
mov
xor
(bad)
out
bound
popf
adc
mov
je
adc
add
mov
cdq
push
aad
cmp
dec
adc
xor
mov
sahf
jno
cmp
cs
mov
sti
shr
push
lahf
aaa
icebp
aad
(bad)
lods
add
das
popa
fdivr
popa
push
mov
jo
(bad)
aam
lods
add
pop
inc
out
sub
mov
pop
loopne
jmp
adc
cmp
sub
or
cdq
pop
(bad)
shr
mov
fsub
cwde
ins
xchg
inc
sbb
xor
mov
iret
xor
dec
adc
sub
inc
cmp
xchg
or
enter
jmp
pop
leave
lahf
test
data16
push
push
add
push
popf
cld
adc
inc
pop
jb
add
gs
jle
fcomi
pushf
rcr
mov
stc
cli
inc
rcl
fstp
popa
outs
enter
ds
adc
retf
xchg
and
push
jb
cli
cmp
cdq
gs
outs
sti
mov
jl
loopne
cmp
sbb
jb
jl
jno
test
pop
mov
nop
in
jne
jmp
xchg
pop
sbb
or
dec
jg
fwait
lds
sti
pop
push
lea
xchg
rcr
and
sbb
jmp
fnstsw
(bad)
pushf
test
push
iret
outs
cmc
mov
inc
push
ficomp
inc
xor
mov
sub
xchg
inc
ins
push
pop
push
xchg
out
mov
sbb
out
jle
stc
scas
push
mov
ins
xor
pop
fs
sbb
jae
add
out
pop
adc
aad
ja
push
pmulhw
inc
clc
and
cmp
adc
add
jnp
mov
out
dec
mov
(bad)
mul
mov
ja
inc
or
repz
xor
or
mov
jb
stos
lods
sub
dec
int
add
fild
adc
push
and
pop
test
stos
mov
bound
test
or
pop
add
shr
fsub
mov
(bad)
fisub
fwait
sahf
and
adc
sti
cmp
adc
xchg
ins
popa
add
sbb
leave
repnz
inc
shr
adc
call
mov
and
enter
pop
into
dec
cs
retf
xor
repz
sbb
mov
adc
push
pop
cmp
inc
pop
push
push
pop
adc
push
dec
xchg
mov
and
xchg
test
jle
jmp
stos
and
jno
dec
rcl
stos
xor
dec
loop
aas
xchg
xchg
mov
loopne
add
or
xor
imul
mov
dec
dec
fwait
lods
cmp
fcom
inc
pop
add
mov
sub
cmps
ja
lds
push
add
inc
ins
push
lods
add
leave
adc
addr16
sahf
dec
pop
(bad)
mov
stc
or
mov
nop
dec
and
mov
xor
and
retf
loope
xor
fldcw
movs
(bad)
mov
js
ret
add
mov
movs
adc
adc
aas
dec
sub
popa
jmp
cld
shr
rcl
fld
pop
icebp
sbb
jg
fcomp
pop
jmp
pop
xor
mov
sbb
or
pop
cmc
mov
jb
lea
fwait
jmp
jecxz
xor
xor
test
xchg
cs
ret
mov
dec
cmp
jmp
repnz
jnp
sbb
mov
jb
or
stc
shr
shl
fwait
inc
cmp
sahf
into
add
mov
stos
mov
psubusb
in
pop
adc
xor
test
jg
cmps
fnstenv
dec
aam
test
jmp
outs
in
or
(bad)
jmp
ja
mov
cwde
xchg
dec
jmp
jg
retf
xor
sub
and
arpl
movs
retf
mov
push
jae
push
xor
xchg
stc
ficom
sub
cmp
mov
adc
int3
rcl
sti
(bad)
xor
int
pop
jo
mov
and
shr
sub
pusha
ror
les
push
sbb
pop
fsub
ror
test
mov
mov
mov
jle
push
push
mov
repnz
push
xor
shl
(bad)
push
xor
inc
dec
sbb
add
rcl
push
mov
outs
ficom
clc
icebp
add
(bad)
sbb
mov
xor
mov
call
push
add
cmp
hlt
int3
add
dec
jb
jge
or
neg
lock
das
test
cmps
gs
fidiv
mov
inc
sub
mov
xchg
mov
mov
int
jecxz
xchg
ja
cmp
sti
loope
mov
pop
mov
test
stos
call
sub
xchg
test
xchg
loopne
aas
sbb
push
or
sub
or
in
add
in
jne
sti
scas
mov
push
pop
dec
push
ret
dec
enter
jae
jg
adc
cdq
ds
sub
sub
push
test
add
mov
sbb
and
sub
xchg
sub
jmp
dec
sub
add
push
cmp
mov
lea
jb
and
sar
aas
and
cs
cmp
ins
sub
mov
cmp
outs
outs
or
add
jle
leave
adc
mov
mov
sahf
dec
mov
fistp
adc
sub
lods
xor
arpl
xor
and
adc
or
inc
inc
push
mov
leave
mov
jecxz
sahf
imul
mul
jge
jne
adc
push
push
pop
add
jmp
cmp
ds
pop
sub
sub
in
jno
in
mov
sbb
add
mov
dec
(bad)
cld
adc
outs
sub
xchg
pop
in
aad
xor
push
xchg
dec
inc
sub
inc
shl
popf
lahf
mov
stc
or
mov
mov
jno
cmc
jecxz
inc
and
stc
dec
daa
movups
in
mov
inc
add
xor
loop
loope
inc
and
iret
stos
test
jno
pop
push
lods
sbb
ficomp
dec
push
jno
sub
aaa
sar
dec
mov
sbb
(bad)
icebp
jo
aad
mov
fist
bound
scas
cmp
xchg
imul
out
jnp
mov
cmp
xor
mov
push
sub
push
cmps
pop
jge
mov
call
pop
std
adc
xor
jle
in
aad
fwait
add
pusha
shl
gs
mov
mov
xchg
fmul
mov
out
in
pop
call
enter
jle
fimul
test
outs
mov
(bad)
mov
xchg
movs
xor
stos
inc
aam
mov
popf
ss
add
cdq
mov
gs
dec
js
xchg
ja
xchg
xor
add
dec
fsub
mov
mov
and
xor
sti
or
adc
lock
sbb
jecxz
je
xor
adc
sub
mov
stc
mov
mov
add
js
and
adc
and
cmp
mov
or
out
sub
jo
in
imul
mov
(bad)
inc
imul
pop
push
(bad)
rcl
outs
mov
sbb
dec
in
lea
xchg
stos
push
dec
mov
mov
dec
ds
add
daa
or
xchg
sbb
loop
shl
jecxz
je
sbb
sar
hlt
jns
(bad)
sub
fst
aad
cmp
and
scas
jae
inc
mov
addr16
fidivr
cwde
clc
mov
loopne
push
pop
ja
fwait
(bad)
dec
test
dec
mov
or
xchg
sti
addr16
adc
fwait
sahf
xchg
dec
mov
out
push
sahf
bnd
ret
jp
ins
fadd
rol
xchg
dec
jmp
popa
sti
(bad)
xor
or
stos
enter
jo
call
inc
sbb
arpl
jge
push
cmc
and
mov
or
and
push
retf
shl
ins
scas
push
pusha
cli
and
leave
aaa
and
vaddps
stc
arpl
cmps
xchg
and
xchg
gs
xchg
pop
int3
add
sbb
or
xchg
inc
outs
inc
loop
push
stos
cwde
dec
inc
mov
jle
pusha
or
xor
ret
and
add
xchg
popa
push
inc
inc
push
cmp
sub
or
push
or
out
stos
lds
scas
js
sub
inc
xchg
jnp
dec
jg
ins
dec
adc
dec
sub
sbb
dec
adc
sub
lock
xchg
mov
and
xchg
ins
int3
cli
and
cmp
adc
pop
into
nop
xor
hlt
jl
mov
test
pop
mov
push
mov
in
sbb
ret
ja
mov
rcl
aad
jp
mov
adc
xor
cmp
cwde
neg
mov
movs
mov
sub
xchg
into
sbb
(bad)
jbe
add
or
std
stos
jmp
sbb
push
lock
sbb
push
in
(bad)
adc
sub
shl
aas
aad
add
sub
inc
sar
in
outs
jmp
jbe
mov
shl
cdq
xor
ss
cld
repz
xor
fsub
(bad)
fwait
jne
push
push
mov
xor
mov
repz
sbb
xchg
fsubr
(bad)
(bad)
dec
jl
repz
or
aaa
push
daa
inc
lods
adc
sub
jmp
ja
call
cmp
cmps
mov
inc
xor
or
xchg
xor
jmp
and
sbb
adc
(bad)
lea
fild
or
mov
pop
fild
inc
dec
inc
dec
hlt
xor
(bad)
ja
scas
xchg
out
sub
pop
pop
in
out
inc
sbb
and
call
push
test
lock
mov
test
cmp
pushf
imul
in
stos
dec
sbb
mov
data16
iret
cmp
sti
clc
jp
(bad)
retf
and
test
xor
pop
pushf
in
cmc
dec
jnp
push
nop
sti
je
mov
inc
jno
call
inc
ins
retf
addr16
rcr
dec
js
sbb
imul
add
lds
sub
imul
lods
add
jl
add
icebp
xchg
sub
mov
into
mov
xor
jb
sub
pop
data16
pop
in
inc
push
ja
jg
lods
cli
and
xor
jp
mov
shl
mov
hlt
sub
popf
adc
stos
dec
or
xchg
ins
xor
jb
mov
or
int
fdiv
cmp
sbb
push
xchg
sbb
outs
int
fcmovb
js
mov
dec
and
jg
call
xor
mov
cmc
mov
loopne
lods
ja
mov
mov
push
xor
pop
pop
jmp
lahf
sbb
loop
inc
call
push
or
mov
jbe
or
imul
loopne
arpl
rcr
aam
xor
push
popf
pop
outs
sbb
jp
push
in
push
xor
push
test
fiadd
ja
rcr
cli
cmp
rcl
jae
xor
outs
dec
fs
push
mov
jno
repz
or
add
scas
call
dec
mov
and
pop
(bad)
out
jns
inc
movs
cmp
daa
cdq
mov
out
test
adc
stc
jecxz
mov
xor
lods
jnp
and
cmps
es
adc
adc
sub
ja
cli
ret
dec
cmp
ffreep
mul
pushf
add
(bad)
in
sub
xor
inc
push
(bad)
cli
lahf
sbb
push
mov
pushf
mov
mov
ja
pop
inc
push
clc
aas
mov
sti
jae
int
(bad)
test
mov
fnstenv
adc
inc
jl
mov
int3
js
or
add
or
out
sub
(bad)
(bad)
pop
lahf
cmp
inc
out
(bad)
jmp
sub
push
rol
mov
jg
pop
sar
xchg
jle
bound
dec
mov
loope
mov
mov
pop
mov
(bad)
jb
adc
(bad)
lods
pop
out
shl
arpl
dec
xor
mov
das
cs
mov
bnd
loopne
xor
sti
xor
push
and
stos
lahf
stc
jle
fs
mov
push
jecxz
aaa
(bad)
enter
js
int3
jnp
test
cmp
sub
mov
aaa
dec
test
je
mov
movs
aaa
sub
dec
or
popa
add
call
mov
aam
es
sub
sub
sahf
and
bnd
push
(bad)
test
cmp
repnz
pop
int
push
loope
fisttp
push
clc
mov
frstor
sub
sub
arpl
icebp
outs
lods
dec
mov
in
(bad)
sub
call
cmc
jmp
repz
mov
test
lea
cs
call
out
ja
or
ins
dec
stc
fist
pop
push
mov
lods
js
mov
outs
repnz
out
dec
in
lds
fnsave
aaa
adc
sbb
xlat
xor
or
mov
pop
cs
das
repz
in
add
push
imul
aad
xchg
mov
mov
jno
scas
scas
cwde
xor
mov
retf
push
int3
jb
bswap
xchg
jmp
cmps
ins
lea
pop
inc
ss
dec
mov
mov
pop
dec
cmps
push
lea
sahf
mov
ficom
cmc
and
mov
fidiv
add
test
sbb
mov
sbb
xor
and
or
mov
push
sub
add
and
and
addr16
(bad)
xchg
pop
mov
cdq
retf
jg
(bad)
pop
mov
pop
push
cmp
nop
push
jo
ins
enter
mov
leave
mov
xchg
pop
push
or
popa
cmp
push
out
cmp
xchg
test
mov
push
pop
movs
cmps
add
loope
add
add
xor
fist
pop
cmp
lea
mov
aas
addr16
or
pop
fcomi
pusha
in
sub
cwde
cld
jle
icebp
jle
cmp
jnp
lea
or
int3
pushf
aas
(bad)
dec
cmps
std
adc
xchg
mov
or
call
(bad)
adc
fisub
(bad)
dec
les
scas
jbe
cmovne
scas
pushf
(bad)
dec
bound
add
push
pop
xlat
add
cmps
or
push
mov
cmp
xchg
and
jp
inc
hlt
jp
mov
sbb
popa
pop
jp
imul
sti
xor
adc
pop
shr
jae
add
enter
mov
sar
shr
push
and
cmp
rcl
icebp
aad
lock
call
jnp
test
push
xchg
xor
ins
inc
movs
mov
sub
gs
adc
push
cmp
adc
call
xor
and
jecxz
mov
xor
(bad)
mov
(bad)
stos
push
xchg
mov
push
movs
sbb
inc
dec
xor
rcr
and
mov
mov
(bad)
or
push
(bad)
sar
outs
data16
adc
push
cmps
lea
sub
adc
inc
cmp
leave
stc
dec
add
inc
pop
mov
jae
xor
and
xchg
jg
lea
pop
les
mov
lock
daa
mov
mov
or
mov
fisubr
adc
jl
jmp
pop
mov
sbb
push
(bad)
inc
retf
cmp
sub
xlat
pop
jne
add
and
inc
and
or
mov
push
xchg
cdq
sbb
mov
push
or
cmps
int3
inc
js
(bad)
int3
push
bound
jmp
fidiv
and
jne
sbb
cwde
in
jp
stos
cmps
mov
and
pop
sub
call
lock
mov
cmp
test
rcr
jmp
out
jne
imul
add
inc
add
repnz
push
data16
movs
sbb
movs
daa
xor
dec
and
jb
jne
inc
cwde
loop
pop
xor
mov
mov
pop
mov
mov
pop
jae
not
(bad)
aaa
inc
mov
xchg
out
and
sbb
nop
icebp
and
dec
adc
les
sbb
lock
imul
inc
and
in
inc
dec
movs
jbe
shl
cmp
scas
(bad)
mov
or
in
jnp
cld
aaa
push
sub
and
mov
inc
sti
in
or
pop
cmp
jmp
imul
and
xchg
adc
loop
jmp
imul
cmps
mov
fcom
or
dec
cmc
sub
call
in
test
add
sub
test
icebp
ins
jno
push
or
nop
scas
sub
pop
xchg
and
mov
dec
push
add
sahf
mov
or
out
shr
sbb
(bad)
adc
cdq
adc
xor
lods
sub
jge
mov
fmul
add
leave
xchg
jl
push
push
sahf
ret
clc
pushf
sbb
clc
mov
icebp
inc
outs
jl
push
jb
idiv
push
cmp
sub
aad
inc
std
stos
adc
sub
popf
stc
fist
xor
scas
mov
int
pop
mov
fisubr
jmp
add
cmp
inc
inc
ficom
movs
add
fadd
ror
hlt
test
push
xor
(bad)
imul
adc
int
nop
rcl
inc
jmp
(bad)
(bad)
mov
jnp
lods
jle
loope
(bad)
dec
div
(bad)
ins
movs
nop
or
arpl
sbb
xchg
fwait
aaa
das
arpl
es
xchg
jno
test
adc
adc
and
jle
ror
aam
imul
xor
aad
or
mov
fst
and
std
mov
(bad)
movs
sub
jo
shufps
adc
mov
mov
fwait
in
push
jo
sbb
add
sbb
push
pop
sub
xor
fwait
test
fdivr
lds
pop
mov
arpl
mov
das
fwait
stos
das
push
mov
inc
mov
lds
retf
mov
mov
icebp
add
add
dec
imul
popf
test
enter
daa
pop
leave
std
mov
sub
pop
fs
jg
imul
repz
ja
inc
cmp
mov
add
cmp
repnz
or
jne
pop
lea
jae
inc
cmp
jecxz
outs
fsub
pusha
mov
call
icebp
retf
fnsave
adc
mov
fbstp
add
push
fist
mov
cmc
repnz
push
mov
lea
jo
cli
adc
push
js
ret
xor
pop
lods
addr16
lock
lods
repnz
dec
cld
mov
xor
fcomp
add
fisubr
stos
adc
out
dec
rcr
fs
adc
pop
test
push
sub
adc
xchg
sti
fnstsw
mov
shl
(bad)
aad
or
inc
ror
mov
cmp
or
arpl
out
in
xor
jo
pushf
fstp
add
mov
fwait
xchg
sub
pop
mov
fs
shr
jle
pop
addr16
pop
mov
cld
push
popa
adc
std
fcmovb
pop
and
sbb
aas
int3
jp
or
cmps
shl
mov
xor
jno
sub
mov
inc
int3
stos
or
and
in
jno
sub
cmc
fbld
ss
cmps
sub
mov
aam
retf
jo
pop
out
pushf
retf
or
ficom
scas
jo
and
pop
ja
(bad)
in
in
(bad)
mov
es
jp
and
mov
dec
mov
cmc
mov
sbb
(bad)
xor
mov
pop
fiadd
ja
retf
aad
push
dec
out
gs
and
dec
add
sub
ss
pop
adc
xchg
aad
sbb
hlt
mov
fs
or
mov
add
jmp
inc
imul
scas
loop
stc
mov
sbb
ss
or
xchg
adc
cmp
fs
xchg
mov
fucom
popa
out
dec
mov
test
pop
dec
(bad)
bound
imul
pop
push
mov
ins
out
inc
rcr
jl
popf
push
pop
inc
dec
and
retf
mov
mov
mov
cli
adc
pop
mov
push
stos
jns
mov
xchg
ja
sub
lds
jnp
test
jg
or
cs
and
mov
mov
and
fidivr
retf
mov
call
ins
xchg
fwait
out
xor
inc
jae
fs
jge
in
les
jmp
outs
gs
xor
movs
dec
pop
and
(bad)
es
mov
push
adc
pop
mov
ret
cmp
lds
pop
jo
cmp
or
jl
icebp
jne
(bad)
jge
pop
pushf
test
cmps
fistp
mov
sbb
test
gs
rep
add
nop
cmp
fs
stos
dec
push
inc
loopne
sbb
imul
out
scas
ficom
or
xchg
stc
and
nop
xchg
mov
mov
mov
xchg
mov
cwde
jmp
adc
fcomi
mov
push
adc
inc
or
xor
es
push
in
arpl
or
sbb
push
ja
int
push
(bad)
outs
xor
shl
cmp
fcom
ins
jecxz
pop
call
leave
push
xlat
cmps
ret
test
jnp
add
fidiv
mov
test
push
adc
stos
ds
sbb
bound
loope
mov
dec
cli
(bad)
ins
jne
xchg
xchg
(bad)
dec
pop
push
pop
sbb
cld
repz
add
es
mov
aad
or
fldcw
add
mov
cs
pop
add
mov
repz
out
sub
mov
retf
shl
dec
jge
jo
pop
mov
sub
push
ins
retf
stos
(bad)
and
cmc
bound
mov
mov
mov
sub
or
cmp
push
mov
add
lea
aas
pop
pop
(bad)
jge
les
push
dec
or
mov
mov
cmp
jmp
pop
retf
mov
loopne
mov
dec
mov
sub
add
dec
xlat
lods
pop
call
push
or
icebp
shr
mov
test
sbb
fnsave
pop
push
mov
mov
or
inc
pop
add
or
movs
pushf
add
and
in
xchg
lods
into
ret
sub
mov
dec
popa
push
and
in
inc
retf
ss
or
mov
pop
data16
in
test
xor
(bad)
icebp
mov
jae
mov
mov
ret
cmp
pop
into
mov
test
xor
cmp
(bad)
dec
push
xchg
or
mov
jne
push
ret
dec
add
gs
push
cmps
sbb
fild
cmp
shr
icebp
icebp
movs
jmp
xchg
js
add
adc
cmp
imul
in
(bad)
icebp
xlat
in
popf
jp
jge
pop
pop
jns
(bad)
mov
or
xchg
cmps
inc
mov
inc
test
inc
ret
out
data16
fnstsw
sahf
iret
popa
out
leave
jge
inc
mov
ins
loopne
or
jg
setp
out
jmp
jns
cmp
es
and
repnz
mov
loope
dec
test
test
or
dec
inc
cmc
ins
mov
shl
mov
repnz
and
pushf
fistp
fcmovnu
out
sub
rcl
mov
mov
push
push
data16
loop
pop
mov
mov
inc
imul
std
adc
jae
sub
bound
addr16
enter
ins
add
lods
sbb
pop
repnz
inc
test
dec
mov
sbb
xor
xchg
inc
das
push
add
xchg
and
jb
dec
call
(bad)
cmp
test
add
dec
ins
mov
push
adc
jmp
dec
xchg
add
imul
mov
loopne
mov
mov
push
hlt
mov
pop
stc
ins
xchg
xor
jmp
fninit
loope
cmp
outs
mov
mov
pop
rol
pushf
(bad)
push
push
push
sub
(bad)
outs
das
sbb
sar
jo
loop
(bad)
test
jg
cmps
push
dec
sub
xor
cmps
and
icebp
jo
adc
test
int3
and
xor
mov
and
lods
cmp
repnz
or
je
shl
lock
mov
pop
pop
or
mov
jmp
xor
sub
js
cld
pop
jge
shr
repz
mov
fnstenv
int
jmp
and
cwde
mov
inc
ins
sar
adc
mov
and
push
cmp
add
cmps
lock
stc
in
lods
sbb
adc
(bad)
cmps
sbb
add
sub
inc
mov
lea
mov
fstp
imul
cmp
mov
push
out
and
ins
cmp
dec
imul
pop
mov
shr
pop
movs
or
jne
adc
int3
popf
inc
push
cdq
jae
cmp
mov
dec
scas
mov
(bad)
fsub
movs
cmp
adc
dec
into
setge
out
add
(bad)
and
adc
pop
clc
mov
repz
cmps
dec
sub
cmp
cmp
loopne
dec
in
jne
movs
pop
ins
mov
cmp
lods
xor
retf
mov
pop
ror
xchg
ss
add
fcomp
ja
mov
xchg
mov
scas
mov
(bad)
mov
adc
(bad)
and
ja
sbb
adc
in
sub
mov
pop
xadd
ds
inc
adc
cmp
add
push
pop
pusha
jae
jp
in
adc
ss
movs
sub
xchg
xor
pop
(bad)
jmp
sub
pop
repnz
ret
sahf
xchg
xchg
sahf
shl
(bad)
jnp
repz
mov
mov
pop
dec
mov
mov
out
mov
mov
iret
sub
or
adc
into
mov
(bad)
cmps
sub
and
mov
cmp
stos
mov
pusha
ins
adc
pop
jb
ins
sub
push
jbe
dec
ds
jmp
movs
adc
add
cmp
cli
cli
cmp
dec
cmp
adc
pop
rcl
leave
ins
call
sti
dec
pop
sbb
jbe
jae
push
int3
jo
jae
in
(bad)
cmp
lods
mov
sub
in
into
aad
jmp
xlat
jne
and
push
mov
cmp
hlt
xor
je
inc
adc
dec
and
stc
and
adc
arpl
mov
jg
push
sub
xchg
jbe
sti
add
mov
aas
mov
fisttp
adc
xor
dec
adc
mov
pop
(bad)
int
mov
adc
dec
js
lds
sbb
nop
adc
fstp
je
fwait
cmp
and
icebp
adc
leave
arpl
popa
or
pop
repnz
(bad)
mov
adc
in
(bad)
push
pop
adc
dec
or
sub
xchg
push
lods
push
push
pop
pusha
loope
aam
stos
adc
push
push
test
xchg
mov
fadd
ficom
das
movs
xor
loop
mov
fldcw
push
out
pop
mov
in
or
(bad)
daa
xchg
xlat
test
jg
sti
enter
pop
je
adc
pop
cmp
jge
std
xor
pusha
dec
or
lds
outs
push
pop
sbb
out
js
adc
lahf
(bad)
rcl
arpl
mov
mov
aam
push
inc
aam
into
mov
pop
test
call
inc
retf
adc
(bad)
adc
jnp
popf
dec
adc
test
jb
mov
and
pop
dec
das
enter
leave
fbld
inc
dec
xor
outs
jmp
aad
push
jl
xor
push
pop
add
scas
add
stos
and
push
(bad)
js
inc
retf
fisubr
and
mov
aas
inc
leave
dec
stos
push
fldcw
data16
xchg
cmp
imul
sbb
mov
mov
or
adc
xor
fist
xor
dec
outs
ret
test
mov
mov
pop
mov
xchg
movs
xor
loop
jg
into
mov
cmp
xchg
mov
jb
aas
add
xchg
inc
fmul
jae
cmp
stos
sub
aad
je
imul
in
fild
pop
mov
mov
dec
push
sbb
cmps
popf
test
dec
mov
sub
stos
enter
xor
xor
lods
jl
add
in
inc
or
hlt
fild
mov
jg
cmps
fucomp
mov
inc
cmps
movs
cdq
and
pop
or
push
cmp
or
lock
popa
dec
mov
pop
ret
sub
xor
movs
or
push
and
(bad)
dec
cwde
push
cmp
stos
sub
jns
cmp
push
sahf
or
xor
ds
or
mov
ret
dec
in
mov
adc
add
cmp
sub
test
data16
xchg
adc
fsubr
sahf
cmp
aam
lea
and
ins
push
jnp
ds
add
aas
push
sub
mov
adc
xchg
and
cmp
retf
xchg
fist
sar
adc
pop
stos
dec
jmp
xor
adc
(bad)
cli
in
xchg
dec
mov
pop
jne
fcomip
shr
cmp
(bad)
lahf
cmps
test
xchg
ins
popa
and
(bad)
dec
int3
dec
shr
jecxz
jg
jns
xchg
add
add
and
mov
fs
or
int3
outs
push
push
sahf
test
jb
aas
or
xchg
mov
dec
loopne
pop
push
mov
addr16
fmul
shr
out
mov
cmps
stos
mov
inc
mov
daa
push
dec
jae
xchg
adc
call
stos
pop
(bad)
les
xchg
fwait
in
cs
scas
repz
adc
(bad)
mov
dec
mov
and
icebp
sar
leave
test
add
sbb
jge
neg
ret
push
xor
push
or
ficomp
enter
sub
mov
sbb
xor
into
jb
cdq
or
out
add
xor
push
shr
es
stc
add
mov
scas
pop
dec
(bad)
jns
fsubr
mov
adc
sub
push
dec
push
push
dec
je
hlt
add
sub
cwde
cmps
xor
mov
or
pop
out
pop
std
and
cmp
pop
loopne
cmps
leave
scas
ins
push
lahf
adc
(bad)
fsubp
sbb
mov
aad
jmp
mov
mov
and
jne
ins
jne
xchg
sub
jl
push
sbb
(bad)
outs
adc
push
sub
add
hlt
xor
or
movs
std
movs
xor
and
(bad)
out
shl
and
test
ins
xchg
inc
enter
push
(bad)
mov
mov
into
imul
(bad)
xchg
out
mov
xchg
pop
mov
out
and
mov
xlat
pop
sub
fld
or
xor
inc
xor
bound
dec
jns
push
call
xchg
test
push
fimul
mov
mov
cwde
cmp
popf
repz
js
out
inc
pop
sti
pop
and
push
(bad)
sbb
adc
inc
shr
outs
dec
or
add
scas
add
xlat
mov
xchg
retf
push
stc
sbb
lock
and
xchg
outs
inc
sbb
fisttp
jns
(bad)
pop
inc
cwde
lods
test
repz
stos
cmovo
ja
loop
mov
repz
in
adc
adc
xchg
xchg
or
repz
adc
les
adc
mov
fnsave
aaa
push
int3
sbb
stos
and
jmp
aam
add
or
or
dec
fucom
cmps
(bad)
aam
pop
mov
in
xchg
fldenv
push
dec
inc
repz
fisub
adc
ja
mov
cli
bound
push
les
jle
xor
fcomp
xlat
and
dec
rol
psubsw
pop
add
pop
dec
pushf
jae
inc
xchg
and
fiadd
into
icebp
sbb
add
adc
test
(bad)
jge
inc
aam
add
jmp
push
inc
arpl
adc
cdq
pusha
mov
ror
ret
scas
mov
xchg
mov
(bad)
pop
sub
pop
aam
and
popf
cmp
dec
sbb
push
pop
stc
addr16
ja
fstp
iret
mov
mov
ret
and
cdq
retf
or
mov
adc
std
div
xchg
enter
lahf
push
nop
sbb
pop
fild
fidiv
add
aad
xor
jmp
into
gs
stos
out
in
add
mov
retf
inc
(bad)
ror
pusha
push
or
pop
pop
xor
loope
and
test
aad
adc
imul
movs
popa
push
add
loope
js
imul
std
pop
hlt
mov
push
adc
inc
leave
push
mov
mov
loopne
pop
cmp
jb
mov
cdq
push
fsubr
loopne
add
xchg
fmul
movs
out
xor
aas
imul
xchg
jb
inc
mov
jg
mov
int3
and
sub
enter
cmp
imul
dec
or
jmp
and
push
mov
jmp
dec
or
fdiv
test
inc
xchg
mov
sar
sahf
push
stos
and
cs
push
sbb
dec
leave
ja
push
out
out
inc
mov
dec
mov
(bad)
loope
stc
loopne
add
pop
enter
push
fmulp
cmps
jmp
xchg
arpl
sti
addr16
repz
pop
jg
cmp
mov
stc
inc
ja
pop
jne
aam
xchg
xchg
xchg
pop
add
cdq
das
lods
jmp
je
mov
add
add
push
xchg
mov
cs
push
jmp
popa
mov
call
fistp
cmp
and
xor
leave
test
mov
fild
pop
xchg
xchg
mov
mov
xchg
test
inc
jne
ss
es
not
es
repz
push
sub
dec
mov
pop
pop
push
or
inc
test
les
sub
(bad)
fstp
mov
les
jg
retf
call
xor
or
lds
test
or
add
dec
pop
and
stos
pop
ja
js
push
pop
nop
ficom
jno
mov
or
pushf
mov
adc
pop
mov
and
out
fcmovb
nop
je
push
cmp
je
or
sub
add
jmp
or
imul
pop
fwait
inc
push
loop
xor
std
in
inc
sub
pop
xchg
mov
sar
(bad)
imul
out
mov
dec
stos
dec
fs
mov
movs
pop
inc
sti
cmp
jge
div
push
test
dec
lods
call
dec
sub
ficom
div
xor
pop
mov
push
sbb
aad
jno
add
cmps
je
sbb
mov
cmps
jno
leave
cmps
or
adc
jbe
arpl
push
(bad)
fwait
pop
sbb
push
movs
iret
mov
adc
dec
pop
xchg
mov
ins
int3
int
mov
sub
or
and
sbb
mov
(bad)
in
xor
add
js
add
mov
dec
adc
sub
sub
inc
xlat
add
fwait
inc
mov
popf
push
dec
out
hlt
or
inc
and
je
sub
jl
das
ror
mov
xor
jg
stc
sbb
push
mov
push
or
dec
popa
loopne
add
(bad)
xor
or
shr
aad
ins
leave
das
shl
mov
jge
push
mov
jl
pop
push
(bad)
fcom
popf
jnp
or
jne
retf
fild
cmp
xlat
cmp
clc
xor
sbb
ds
shl
xor
push
into
add
(bad)
xchg
add
(bad)
dec
jns
and
mov
dec
imul
and
pop
idiv
jl
movs
fisttp
clc
jno
lds
pop
jbe
and
aam
sbb
xor
pop
dec
push
rol
lock
cmps
or
xchg
mov
inc
or
out
ins
js
stos
mov
fiadd
fdivr
mov
fidiv
iret
sub
int3
sbb
push
push
and
sub
aam
pop
mov
mov
fisub
add
sub
pop
addr16
fistp
push
stos
inc
push
lds
ins
(bad)
jae
lods
retf
ins
pop
mov
jecxz
inc
fs
cmps
mov
nop
add
icebp
lods
push
sbb
cld
das
fisub
fsubrp
mov
(bad)
or
add
int
add
mov
jmp
add
xchg
outs
int
jg
xchg
xchg
and
mov
mov
jbe
rcl
retf
or
inc
xor
lods
add
push
push
(bad)
(bad)
loope
push
movs
push
shl
enter
pop
shl
push
mov
push
call
sbb
push
dec
cmps
bsf
or
xchg
mov
scas
and
sahf
inc
push
sar
jmp
mov
mov
push
xchg
and
loopne
adc
and
test
pop
xchg
in
push
push
push
cmp
rol
call
mov
idiv
popa
psrlw
sbb
pop
repnz
mov
scas
pop
push
sbb
jne
pop
iret
jg
mov
mov
shr
dec
push
xchg
xor
lds
mov
mov
push
aas
jge
or
into
fist
stos
movs
cmp
pop
call
sub
sub
fnstenvw
leave
add
call
pushf
pusha
dec
les
adc
pop
cmps
into
jae
rcr
out
(bad)
(bad)
stc
push
inc
sub
mov
not
movs
push
adc
pop
shrd
add
jae
mov
xor
scas
std
mov
cmp
loop
popa
call
lods
mov
cmps
ret
sub
inc
and
add
xor
mov
sar
ds
pop
aam
(bad)
pop
ins
dec
(bad)
xchg
xlat
out
enter
call
mov
xor
cli
fs
xchg
scas
or
lods
mov
lock
push
sti
mov
jbe
jg
mov
or
shl
jne
cmp
jno
das
test
pop
push
outs
push
mov
adc
cmc
fcomip
jmp
lock
out
or
dec
shr
inc
mov
cwde
pop
xlat
push
sub
jbe
(bad)
jo
stos
hlt
and
gs
and
cli
pusha
ret
push
outs
push
cmp
adc
es
out
das
xchg
cwde
jge
add
hlt
nop
push
mov
sub
jae
fld
arpl
gs
sbb
ror
test
mov
cdq
arpl
rcr
fsub
cmp
mov
push
mov
dec
jne
int3
sub
sbb
enter
fisttp
(bad)
test
(bad)
or
ficomp
icebp
pop
pop
mov
ja
scas
ret
push
adc
push
add
mov
in
push
call
jecxz
mov
xor
or
pop
mov
icebp
test
mov
add
hlt
xor
jne
xor
in
mov
pop
paddusb
add
and
les
leave
xor
call
aam
push
jb
dec
js
fcmovu
fistp
mov
and
xchg
ror
cmp
push
pop
stc
mov
xchg
add
scas
dec
stc
popf
stos
mov
sub
in
jne
pop
mov
cmp
das
push
je
sbb
aaa
push
add
cld
sub
add
add
pop
cdq
in
adc
pop
ror
push
and
(bad)
fiadd
out
or
add
das
dec
aad
push
imul
loopne
jmp
push
cs
sbb
mov
jecxz
pop
lahf
shr
jmp
sti
cmp
pop
xor
pop
jecxz
in
aaa
pop
scas
std
rol
mov
aas
imul
jae
push
addr16
daa
int
ret
mov
and
bound
jae
jl
retf
xor
inc
lds
inc
add
scas
pop
pusha
test
aas
loop
fcomi
test
stos
push
call
mov
out
mov
outs
cwde
mov
mov
push
mov
into
lds
pop
std
lods
or
mov
cmp
pop
(bad)
jl
fidivr
sbb
std
push
aam
int
sbb
push
mov
jns
pop
cmp
mov
in
pop
sahf
popf
dec
nop
jl
into
or
dec
data16
les
not
pop
fist
(bad)
or
xchg
fwait
xchg
mov
and
xchg
cmp
pusha
hlt
adc
push
es
je
xlat
and
(bad)
mov
loop
leave
lods
push
pinsrw
mov
or
(bad)
cmp
cmp
in
cmp
call
xchg
cmp
and
sahf
icebp
fldcw
add
sbb
ins
ins
fidiv
sub
test
fsubr
hlt
cmp
jb
cmps
jle
(bad)
jbe
xor
sbb
or
dec
scas
call
inc
jl
and
lea
push
push
aas
push
loope
fs
shl
mov
sbb
mov
imul
fwait
jle
jo
ret
fsub
or
and
xor
je
push
lods
test
lahf
xchg
cld
aaa
fild
mov
dec
outs
ss
inc
jecxz
cmp
out
into
jns
jmp
or
and
retf
pop
add
jno
cmp
pop
mov
mov
lahf
ins
xor
fucomi
xchg
imul
xor
jns
retf
arpl
lods
scas
and
mov
ret
cld
dec
fadd
jle
fld
nop
lock
sub
sub
ja
mov
pusha
xor
ja
xchg
test
cdq
adc
in
jle
mov
out
cmp
into
ds
pop
lock
pop
push
sahf
imul
xor
xchg
out
xchg
dec
ins
push
mov
cmps
repnz
and
rol
add
add
repz
push
cmp
or
dec
cmps
popa
pop
push
ins
xchg
scas
sbb
stos
int3
inc
iret
jmp
call
popf
jae
push
adc
push
test
push
call
pop
mov
xchg
jg
int3
ds
mov
mov
fdiv
je
popf
in
xchg
jge
adc
jno
in
cld
mov
jecxz
pusha
jecxz
push
inc
and
fwait
sahf
js
repz
and
rcl
and
push
xor
out
or
xchg
clc
lods
mov
dec
ror
repnz
and
pop
dec
jp
jbe
xchg
out
cli
xchg
or
jnp
pop
cld
das
cmps
imul
ja
adc
outs
sub
data16
dec
fsubr
stc
aam
jb
stos
pop
jecxz
scas
xor
stos
and
out
push
popa
sqrtps
lock
pop
icebp
mov
mov
dec
mov
mov
sbb
jp
and
inc
xor
pushf
movs
fnsave
ins
xchg
icebp
xlat
fadd
pop
jge
inc
(bad)
push
out
add
and
pop
cmc
jae
imul
shl
xchg
jnp
cmp
inc
in
js
xchg
and
sub
int3
sbb
mov
jae
jmp
mov
sar
fcmovbe
push
test
mov
lds
frstor
jecxz
mov
push
sbb
sub
clc
adc
mov
push
aam
(bad)
call
and
cld
or
imul
adc
pop
repnz
jae
(bad)
inc
outs
scas
mov
dec
imul
cmp
mov
inc
arpl
pop
ins
nop
or
fist
test
js
mov
in
and
push
test
ss
mov
xchg
fild
adc
push
pop
pop
pop
dec
or
fmul
dec
out
dec
xor
das
jo
dec
jp
push
(bad)
pusha
into
ins
cmp
jno
pop
inc
ss
xor
dec
retf
and
mov
js
jmp
data16
into
jmp
pop
cmp
ins
add
pushf
jmp
clc
and
(bad)
xchg
dec
jg
jae
cli
loop
xchg
cmp
daa
jne
jge
cmp
mov
shr
xor
mov
fidivr
test
out
std
lahf
hlt
push
sbb
pusha
hlt
test
leave
xchg
ins
iret
inc
pop
mov
lods
dec
xor
xchg
test
out
and
das
shr
inc
or
sub
dec
fidivr
or
cdq
xchg
jg
xor
and
xlat
pop
jecxz
in
hlt
cmc
add
xchg
or
sub
(bad)
(bad)
lea
jge
out
xchg
dec
push
and
iret
sbb
(bad)
jne
adc
out
xor
adc
aaa
hlt
jb
into
or
outs
repz
(bad)
and
adc
stc
sbb
retf
mov
dec
movs
add
test
jecxz
pop
pop
jae
clc
fadd
cmp
call
cmps
sti
popa
cmps
sbb
ja
adc
test
test
fdiv
pop
mul
mov
out
das
mov
jecxz
push
or
repnz
xlat
mov
fmul
sti
ret
push
shl
call
add
loope
pop
addr16
mov
es
scas
gs
cmp
in
adc
out
fs
adc
es
jbe
iret
out
cmp
xchg
test
xor
mov
or
inc
sti
xchg
sub
neg
mov
inc
and
fidiv
mov
inc
cs
push
not
mov
repnz
cmp
(bad)
repnz
out
in
mov
xlat
sti
mov
pop
pop
aas
adc
dec
mov
sbb
imul
inc
or
sbb
test
dec
mov
int
test
inc
test
in
sbb
push
push
fld
retf
clc
mov
push
dec
stos
in
push
repz
add
es
scas
and
dec
xchg
pushf
clc
arpl
inc
ins
sub
loope
or
imul
sbb
add
cdq
jge
retf
stos
push
imul
out
call
seto
jecxz
and
or
adc
pxor
dec
(bad)
inc
repnz
cld
les
mov
loop
cmc
xor
iret
clc
out
push
xchg
dec
mov
(bad)
ficomp
out
iret
mov
xchg
mov
test
std
cmp
adc
mov
loopne
imul
test
mov
mov
or
push
jae
pop
push
hlt
mov
pushf
pop
inc
ja
repz
cmp
mov
xchg
mov
daa
cwde
xchg
dec
(bad)
outs
rep
sbb
mov
jnp
push
xchg
enter
repnz
ficom
sar
push
test
push
pop
push
clc
outs
mov
fcomp
cmps
and
scas
push
popa
cmp
icebp
repnz
mov
shl
sub
clc
(bad)
push
jns
fdiv
fidiv
jp
xchg
push
push
xchg
into
sub
fstp
hlt
xor
sbb
xchg
fwait
xor
pop
jae
repz
inc
pop
(bad)
inc
fs
adc
sar
adc
push
mov
dec
cmc
repz
repnz
mov
xlat
sub
sbb
int
xor
push
push
sbb
xchg
sahf
fs
retf
mov
push
stos
pushf
out
imul
mov
lock
rcl
jmp
xchg
adc
push
(bad)
dec
sub
pop
or
lock
pop
add
(bad)
xor
dec
stos
adc
or
sub
push
adc
call
gs
jmp
inc
clc
leave
sbb
sbb
mov
jno
mov
daa
outs
mov
cli
add
xor
pop
cmp
sub
jmp
jns
push
mov
cmp
sbb
mov
pusha
scas
js
ret
frstor
lds
xchg
(bad)
pop
imul
push
cmp
and
into
test
aas
mov
pop
xchg
mov
(bad)
aad
outs
in
(bad)
xor
popf
push
or
adc
mov
enter
jb
jg
ror
jbe
cdq
cmp
push
fnstsw
shl
sub
jecxz
icebp
jmp
cmp
cmp
or
loop
push
aad
fnstcw
fidiv
sub
rcr
stos
lock
and
lods
add
hlt
arpl
mov
lock
retf
icebp
mov
mov
jns
xor
jae
call
jae
mov
or
push
test
sbb
outs
pop
push
cmp
retf
inc
out
ss
xor
fldenv
mov
jae
rcl
push
xor
(bad)
adc
xlat
xchg
iret
and
clc
mov
mov
popf
xchg
lds
shl
inc
rcl
mov
push
retf
fbstp
pop
pop
sub
cmp
iret
mov
cmp
call
dec
push
cdq
jbe
inc
loope
lods
push
imul
call
pop
mov
pop
or
mov
push
shl
jo
scas
inc
lods
ins
iret
fldenv
adc
js
faddp
ins
jbe
or
pop
rol
(bad)
xlat
popf
adc
push
cld
pop
mov
pop
lahf
adc
std
dec
lea
add
mov
jmp
out
shl
pop
or
mov
sbb
mov
je
cmp
jno
ss
cmp
scas
mov
cs
inc
lds
into
adc
push
jle
cmp
jmp
fcom
sbb
inc
jb
push
iret
mov
sbb
push
and
push
mov
inc
mov
xchg
or
sbb
call
test
mov
jp
call
mov
bound
jmp
dec
test
push
xlat
and
bnd
push
outs
popf
les
jo
ror
xchg
jmp
cmc
gs
cmp
in
pusha
mov
int3
adc
sub
push
mov
pop
jle
cmp
shr
adc
adc
leave
and
pop
mov
cdq
(bad)
mov
adc
pop
scas
or
(bad)
lods
mov
jp
repz
aas
and
scas
cwde
cmp
adc
jo
js
pop
dec
pop
push
ret
popa
or
and
inc
ds
dec
sbb
cwde
fiadd
cli
pushf
aas
or
dec
loope
xchg
stos
dec
adc
adc
fldcw
cs
or
cmc
push
outs
jp
add
(bad)
repz
sub
mov
ins
xor
dec
pop
sbb
mov
xor
std
movs
inc
cmps
ret
adc
sbb
lds
(bad)
pop
in
adc
jae
dec
fldenv
cmps
adc
jg
push
mov
adc
lods
fisttp
push
push
cwde
adc
inc
pop
mov
popf
mov
mov
jae
mov
cmps
or
aas
scas
cmps
cmp
push
imul
ins
iret
xchg
mov
hlt
jmp
pop
(bad)
nop
add
call
imul
push
fldenv
cld
push
ds
das
loope
push
push
arpl
leave
pop
(bad)
cwde
repz
push
dec
fisubr
retf
sub
jb
out
nop
(bad)
add
or
sub
adc
xor
(bad)
adc
cmc
jne
adc
add
ins
test
repz
(bad)
xchg
aam
mov
jo
es
(bad)
add
repnz
daa
or
leave
clc
adc
fs
fwait
rol
les
mov
int3
imul
adc
stc
add
mov
mov
or
mov
and
and
sub
sbb
(bad)
test
xor
int3
lea
je
sbb
(bad)
adc
pop
jno
out
jl
push
xor
test
adc
xchg
jle
inc
push
mov
inc
adc
fdiv
mov
aad
jecxz
xor
xor
in
xchg
add
sub
mov
call
push
lock
rcr
cmp
arpl
xchg
cmp
ss
pop
xor
cmps
nop
cs
push
jnp
mov
in
fwait
dec
(bad)
sti
jno
ds
sti
push
xchg
xor
xchg
sbb
mov
mov
daa
push
cmp
jl
fwait
cmp
xchg
ss
inc
pop
icebp
pop
popf
ins
mov
jne
or
sub
sbb
jle
xchg
cmp
push
je
data16
adc
test
xchg
aas
dec
push
pop
inc
mov
inc
aam
repz
jle
mov
and
ins
cmps
adc
aaa
cmc
stc
mov
add
xor
add
movs
mov
sti
inc
pop
and
fxch
ret
mov
lock
push
(bad)
mov
arpl
mov
mov
test
mov
in
push
push
inc
xor
neg
aam
or
mov
mov
arpl
push
xor
mov
cmp
pop
sbb
xchg
stos
mov
cld
inc
mov
outs
sub
push
adc
mov
push
(bad)
inc
outs
out
out
mov
(bad)
in
mov
call
add
pop
(bad)
mov
rcl
lock
ds
dec
dec
shl
push
inc
js
cmp
mov
scas
xor
inc
push
fwait
mov
fwait
ret
xchg
cmp
bound
adc
jl
mov
out
mov
xchg
minps
inc
ds
and
stc
ret
mov
push
cwde
sti
or
sub
fidivr
ret
jb
mov
pop
nop
retf
shl
idiv
das
fstp
add
out
fwait
push
fidivr
or
xchg
stc
aam
int3
and
and
jo
cmc
mov
jnp
pop
mov
ret
sbb
ror
ret
retf
repnz
and
mov
lea
popf
mov
jl
les
ds
inc
cs
aaa
fisttp
mov
add
(bad)
ja
out
xchg
arpl
es
dec
lds
mov
div
adc
pop
xor
mov
ret
sbb
ds
pop
jge
adc
xor
or
and
imul
call
xor
mov
cdq
jne
jle
dec
mov
jecxz
jae
pushf
call
(bad)
jae
ss
mov
adc
xchg
cmps
and
lea
fsub
mov
movs
add
mov
nop
int
xchg
sbb
mov
add
lea
popf
movs
(bad)
mov
or
jno
mov
sar
mov
adc
mov
ds
repnz
xchg
arpl
adc
cmp
cmp
cmp
sbb
jge
push
test
mov
mov
push
mov
sbb
mov
jnp
xchg
les
jmp
pop
sbb
imul
push
ret
or
imul
lds
cmp
sub
mul
mov
xor
or
test
and
jo
leave
test
scas
mov
push
shl
fnstsw
jl
je
sub
cld
cmps
push
dec
loop
adc
adc
popf
cmp
sbb
int
ins
adc
popa
ret
hlt
xchg
sahf
shl
or
shl
int3
les
loop
jno
in
jns
fdiv
xchg
out
lea
cmp
dec
mov
daa
cmc
jno
nop
push
gs
jl
sub
xchg
sar
push
gs
aam
sti
and
xchg
mov
xchg
push
ret
xchg
push
mov
cmp
pop
or
cld
xor
xlat
and
stc
cli
ret
pop
cmp
popa
mov
out
stos
jmp
add
push
and
int
sbb
jecxz
push
mov
adc
fidivr
sub
sbb
add
cmp
jns
push
retf
add
imul
ins
in
mov
sbb
inc
adc
inc
adc
mov
loope
aas
rcl
nop
(bad)
inc
mov
std
xor
cmp
push
repnz
jno
clc
push
pop
call
mov
jmp
mov
inc
dec
dec
int
xor
lock
pop
fsub
jns
inc
(bad)
fmul
mov
cmp
(bad)
sub
jecxz
ins
mov
mov
retf
cld
cmp
mov
xchg
inc
pop
xlat
and
cmp
push
out
sub
and
data16
adc
hlt
test
push
jecxz
arpl
and
into
push
sub
mov
pop
lds
mov
fwait
daa
adc
xlat
fistp
clc
rcr
or
or
outs
sahf
addr16
stos
push
xor
jno
mov
repnz
pop
(bad)
mov
or
or
mov
stc
clc
bound
mov
add
jb
(bad)
clc
sub
adc
sbb
xchg
jns
iret
or
add
loop
xor
stos
lods
jl
jle
and
popa
jmp
(bad)
sbb
call
loop
mov
iret
push
je
mov
mov
rol
lods
daa
(bad)
les
loop
lahf
fld
jnp
sbb
cli
mov
call
adc
or
adc
int3
imul
cmp
dec
push
aaa
cmc
mov
bnd
pop
shl
push
push
stos
pxor
jbe
mov
mov
add
test
outs
add
rcl
adc
sti
jno
fist
outs
push
mov
jg
mov
xor
fldenv
xchg
out
or
aas
(bad)
pop
popa
out
mov
cli
xchg
fwait
cmps
repnz
scas
lahf
cmps
les
sahf
fld
pop
inc
cmp
push
cmp
xor
jmp
das
jmp
div
mov
xor
stc
sub
adc
scas
adc
push
mov
imul
pop
das
lahf
ins
pop
push
xchg
movs
jecxz
push
cmc
repnz
and
test
popa
mov
mov
stos
add
inc
loop
cmc
push
mov
add
sar
mov
push
pop
sbb
mov
mov
adc
movs
mov
or
sub
sub
jecxz
jecxz
in
mov
ins
aad
jp
mov
sbb
cmp
ror
pop
or
dec
repz
ret
inc
in
jg
dec
jnp
adc
pop
dec
call
in
rcr
cmp
push
mov
adc
cmc
ins
out
lods
cmp
in
pop
out
inc
adc
bound
arpl
sub
outs
adc
stos
xor
stos
mov
dec
ds
jl
int
jle
paddsw
retf
inc
mov
sub
retf
jae
mov
(bad)
aaa
in
test
lahf
aam
xor
sub
ds
sbb
mov
cwde
int
leave
shr
mov
call
fidiv
fild
dec
dec
add
push
ins
div
dec
fiadd
sub
into
adc
mov
sbb
mov
lock
xor
ins
not
addr16
(bad)
push
int
jmp
and
mov
cmp
sub
fstp
scas
loopne
add
sub
dec
aam
dec
repnz
dec
call
cmc
(bad)
shl
push
dec
inc
mov
or
and
aas
sahf
cs
sub
retf
mov
pop
dec
pop
mov
cwde
not
pusha
(bad)
mov
iret
pop
mov
imul
popa
test
lods
mov
ret
rcl
mov
cs
dec
cmp
dec
scas
sbb
es
xlat
fs
inc
loope
pop
dec
jl
or
or
dec
cmp
outs
dec
hlt
jns
jbe
fcomip
mov
pop
add
dec
add
xchg
pop
xchg
mov
gs
push
dec
and
mov
fcomp
icebp
sbb
sbb
lahf
mov
sbb
popf
mov
fwait
and
mov
aad
je
(bad)
test
cmc
test
sub
mov
xchg
mov
pop
loope
xchg
imul
add
jo
xor
add
mov
mov
push
add
ss
dec
mov
mov
in
and
and
mov
in
fs
iret
aas
jle
pop
mov
shl
sbb
dec
mov
or
les
add
push
jnp
cmps
std
sbb
lea
pop
cmps
mov
mov
sbb
jno
xor
pop
xor
lock
add
hlt
adc
or
neg
jb
idiv
mov
and
les
shr
push
enter
retf
rcr
sub
pop
cmp
(bad)
pushf
mov
sbb
loope
or
adc
loop
rol
out
rcl
add
daa
cmp
adc
push
and
ins
dec
stos
add
xor
push
(bad)
mov
ja
cmps
push
inc
sub
jb
add
mov
add
adc
pop
add
clc
call
(bad)
data16
call
cmp
inc
add
lods
mov
xchg
inc
cmp
xchg
test
pop
jae
das
fnstcw
shl
sbb
es
stc
fisubr
push
xchg
pop
sbb
pop
pop
xor
xor
je
dec
out
outs
jbe
and
pop
bound
ins
(bad)
push
ins
xchg
int
sub
sbb
cmp
pop
(bad)
cld
shl
je
int
jbe
into
dec
and
hlt
pop
int
inc
dec
sbb
mov
and
cmp
cmp
push
xor
mov
(bad)
jge
pop
cmp
enter
pop
mov
add
iret
or
cmp
push
movs
cdq
jbe
outs
jg
dec
pop
and
outs
cld
cmc
cld
arpl
pop
sbb
pop
adc
cmp
(bad)
pop
ror
rcl
mov
das
mov
ret
movs
gs
pushf
repz
and
popf
mov
and
cwde
int
pop
adc
and
cmps
les
fld
jp
push
sbb
push
adc
jne
aaa
imul
cmp
fmul
inc
out
(bad)
ror
fcmovnb
fsubr
and
or
int
hlt
sbb
xor
mov
mov
inc
fnstsw
push
mov
xor
pop
sub
sbb
out
jl
in
int
repz
or
xchg
outs
or
jb
adc
add
mov
ds
pop
xchg
aam
xlat
cli
xlat
outs
mov
hlt
dec
fadd
sahf
fcom
inc
cmp
sbb
mov
ss
ret
push
mov
sub
xchg
cli
(bad)
pushf
mov
ret
pusha
mov
mov
xchg
(bad)
sti
ja
outs
(bad)
cmp
pushf
add
int
stos
cmp
cld
xchg
jo
cmps
shr
xor
mov
cwde
or
mov
cmp
add
shl
fnstenv
lds
mov
push
cmp
mov
pop
fisub
pop
fcomi
daa
cmp
pop
dec
mov
jmp
xchg
in
push
gs
cwde
dec
cmp
pop
shl
stc
adc
mov
and
and
sub
scas
cmp
ret
call
in
stc
stos
xchg
sar
scas
adc
push
out
pop
int3
inc
sbb
call
and
sub
fild
push
or
lock
xchg
xor
inc
shr
fstp
sbb
adc
jnp
retf
jbe
clc
push
hlt
jp
stc
enter
stos
(bad)
xchg
(bad)
ja
enter
mov
sub
push
cmp
dec
out
xor
retf
retf
and
or
leave
inc
jae
pop
mov
jnp
lahf
call
test
iret
push
mov
adc
sbb
es
shr
dec
stos
cwde
mov
sar
(bad)
sti
adc
jg
sub
sbb
jp
sub
sub
les
dec
mov
out
call
lock
push
fcomi
data16
xlat
stos
xchg
aaa
add
push
mov
in
cmp
mov
fist
add
lods
add
lods
add
repz
inc
fsubr
ins
mov
cmp
cmp
js
jge
ss
pop
jge
pop
jmp
scas
jo
pusha
sub
mov
out
cdq
inc
pop
pop
adc
(bad)
ja
shl
cmp
aad
cld
jle
jg
int3
test
push
jle
sbb
mov
jle
add
and
in
or
ds
mov
retf
ins
mov
and
xor
shl
cmp
inc
fsubr
sbb
cmp
out
inc
push
cmp
popa
out
std
int3
or
aas
div
adc
mov
mov
xor
sbb
mov
mov
imul
jmp
(bad)
std
sahf
sbb
shld
mov
dec
test
mov
xchg
shl
stos
xchg
pop
popa
mov
cmp
(bad)
jmp
fdivp
sub
mov
mov
mov
sub
dec
pop
jne
lods
push
(bad)
cs
ds
fbstp
arpl
mov
js
int
mov
aam
loope
jbe
sub
xor
pop
sbb
jmp
pop
pop
xor
inc
mov
push
int3
adc
lock
ins
xchg
sbb
push
cdq
out
movs
clc
clc
push
rep
fstp
out
or
retf
imul
mov
jbe
or
ds
arpl
or
(bad)
mov
shl
cdq
add
mov
or
iret
lock
and
pop
mov
daa
gs
add
sbb
mov
xchg
fs
leave
pop
sbb
sub
call
fst
not
lock
mov
mov
icebp
cli
sub
xor
inc
dec
test
xor
jmp
mov
mov
inc
jmp
and
mov
stos
and
xor
movs
stos
sahf
dec
mov
dec
int
sbb
jns
jne
add
imul
fisttp
push
call
xor
dec
jmp
cmp
xchg
loopne
cmc
ret
pop
adc
enter
sbb
mov
(bad)
repnz
adc
xchg
mov
retf
mov
xchg
movs
sbb
mov
mov
jne
xchg
(bad)
js
mov
add
cmp
inc
dec
cmp
mov
mov
pop
or
sbb
jne
arpl
push
push
(bad)
dec
jne
cmps
add
pop
add
imul
pop
adc
mov
fisubr
pop
push
(bad)
pop
inc
mov
or
or
fsub
sahf
xchg
cs
mov
cdq
cwde
jecxz
jp
imul
push
mov
mov
iret
sbb
shr
fnstenv
inc
mov
push
idiv
sub
xchg
pop
cmp
add
push
add
nop
xchg
adc
push
jecxz
cmps
js
mul
dec
sbb
push
and
scas
(bad)
dec
mul
dec
dec
arpl
mov
sub
sub
mov
xor
je
pushf
out
out
cmp
jns
js
dec
pop
imul
imul
pop
xor
jns
in
js
fdivr
shr
mov
leave
add
jo
xchg
hlt
ficomp
sub
pop
cdq
inc
adc
cdq
cmp
pop
dec
xchg
xchg
adc
popa
push
cmp
pop
retf
lods
xor
cmp
dec
bswap
mov
add
mov
xchg
cld
jno
adc
dec
jo
fisttp
sub
cld
sahf
ror
inc
add
dec
add
shl
pop
arpl
sbb
fwait
test
jo
xchg
stc
mov
repz
mov
sbb
leave
repz
hlt
inc
aaa
fcomp
pop
mul
out
ss
sbb
cli
scas
popa
repz
test
add
popf
imul
sub
and
adc
mov
fldcw
loope
addr16
xchg
sti
sub
aam
pop
cmps
mov
jno
xchg
aaa
outs
call
sbb
in
dec
jno
daa
dec
ficomp
mov
push
int3
pop
fdivr
push
and
or
cmp
mov
xor
cmp
repz
xchg
fs
loope
xor
xor
dec
adc
icebp
push
fistp
sbb
in
out
rcl
cwde
mov
not
push
jns
das
sub
jns
iret
pop
xor
and
ret
ins
cmps
or
sub
stos
mov
and
retf
(bad)
out
inc
and
cdq
je
mov
shl
pop
out
cmp
retf
lods
daa
mov
lahf
je
test
pop
test
or
hlt
sahf
push
pop
push
or
sti
xchg
das
jb
cmp
cld
mov
jecxz
inc
fdivrp
daa
mov
int
mov
xchg
lods
inc
xchg
or
push
out
sub
cld
out
xchg
pop
xchg
rcl
shr
outs
sbb
sub
arpl
ficom
jg
pop
push
scas
loope
sub
ror
(bad)
movs
fwait
cwde
ds
mov
in
aas
pusha
or
mov
(bad)
cmc
aaa
and
test
in
and
ror
xor
xlat
jne
jge
into
ret
inc
jno
jl
add
lahf
in
pop
test
xchg
stos
daa
xor
jmp
inc
push
fs
jl
stos
mov
sahf
cmps
mov
sahf
xchg
inc
(bad)
out
adc
jno
add
test
fcomp
out
fcmovbe
into
and
mov
or
cli
stc
mov
addr16
fwait
adc
stc
push
ds
into
xor
stos
dec
jg
(bad)
out
jle
into
call
pop
pop
movs
mov
jb
xchg
cwde
or
mov
push
sahf
cmp
sub
shr
adc
dec
outs
pop
inc
cld
stos
jg
ds
push
rcl
pop
cmp
es
jmp
jae
jle
xor
cmc
outs
add
neg
and
lds
dec
add
pop
or
inc
add
jbe
adc
mov
mov
or
fstp
jecxz
icebp
mov
mov
mov
push
adc
xchg
imul
mov
(bad)
in
cmp
ror
cmp
mov
(bad)
mov
push
pop
(bad)
jo
(bad)
jnp
in
ret
mov
dec
mov
out
test
and
dec
in
push
mov
(bad)
xlat
nop
int3
in
jnp
dec
int3
imul
push
sub
inc
xor
popa
adc
adc
arpl
icebp
cs
iret
dec
out
aam
mov
push
repnz
icebp
clc
arpl
push
mov
jno
pop
loope
cmp
ins
scas
push
add
jbe
lds
arpl
shl
dec
rcl
movs
jo
pushf
xor
dec
push
and
iret
rcl
scas
fisttp
(bad)
mov
sub
mov
sub
pusha
repnz
push
sahf
in
gs
xchg
in
and
cwde
cmp
(bad)
dec
xor
rol
jg
sub
push
mov
pop
pop
xor
sub
add
fstp
ror
pop
jle
lock
(bad)
fcmovnbe
je
and
xor
into
mov
out
push
xor
test
fisubr
dec
jge
movs
jge
rcr
(bad)
xchg
adc
mov
aaa
xchg
push
sub
cmp
mov
outs
push
mov
in
pop
jg
clc
pusha
sbb
and
fst
dec
test
movs
clc
aaa
stc
rcr
aad
inc
sub
clc
inc
xlat
sbb
jnp
fstp
dec
ds
sub
cmp
and
adc
or
mov
out
inc
dec
add
sub
xchg
xor
sbb
lods
mov
push
(bad)
adc
stc
mov
mov
mov
ficom
aad
cmps
ss
dec
mov
add
nop
test
lods
inc
(bad)
cmp
inc
div
cmps
ror
enter
aad
ss
jmp
cmps
in
sub
inc
es
push
shl
hlt
add
mov
movs
xor
pop
out
xchg
push
and
test
push
movs
inc
adc
aam
scas
fadd
cmp
pop
jg
mov
push
fstp
dec
clc
ret
or
xchg
adc
or
icebp
mov
jg
and
xlat
loopne
pop
or
xchg
sbb
in
in
les
and
push
test
pop
or
stc
and
jecxz
sahf
pop
and
xor
ficom
int
and
neg
mov
jle
xchg
and
add
popa
dec
or
popa
lods
imul
xor
xor
lds
push
dec
xor
sub
mov
dec
test
mov
mov
push
add
out
push
mov
jmp
jecxz
mov
in
mov
mov
sahf
jp
mov
mov
and
sti
daa
es
cmc
adc
out
add
jmp
and
pop
rol
(bad)
xor
shl
mov
cmc
in
clc
(bad)
movs
shl
call
xchg
lods
aaa
mov
inc
mov
pop
int
cs
mov
push
inc
pop
mov
fnstsw
pop
lock
addr16
movs
in
add
movs
and
fld
mov
in
cdq
adc
(bad)
push
adc
jae
add
mov
fwait
sbb
ret
in
adc
mov
fld
aaa
test
in
shl
mov
(bad)
jecxz
idiv
(bad)
xor
int
repz
(bad)
jg
push
bound
mov
das
dec
mov
sahf
cs
sar
cwde
cmps
xchg
pop
jbe
jb
xchg
dec
pop
pop
es
inc
imul
sar
adc
dec
repnz
pop
neg
stc
cmps
xor
inc
test
(bad)
push
popf
xchg
(bad)
jmp
push
and
test
jne
dec
leave
(bad)
push
sahf
xchg
(bad)
(bad)
arpl
jbe
rol
push
push
jne
add
lock
loope
repz
adc
ins
push
cs
mov
jl
rol
outs
xchg
or
add
push
xor
dec
jp
jns
pop
xor
in
lock
test
jmp
test
ror
repz
imul
xchg
xchg
add
rcl
add
test
and
mov
sbb
sti
jb
xlat
pop
fistp
js
adc
pop
rol
out
mov
out
and
jo
movs
adc
fcomp
retf
mov
inc
test
pop
ds
mov
es
lods
mov
pop
fadd
cmp
mov
push
add
mov
inc
in
enter
pop
jle
movs
fisttp
push
mov
and
icebp
jge
ror
jo
(bad)
aam
and
aam
ins
cmp
inc
jle
test
adc
pop
js
(bad)
jne
shr
push
and
add
cmp
loopne
iret
mov
lock
test
les
and
nop
push
or
sub
sub
cli
ins
sbb
pusha
ss
sbb
ins
inc
icebp
or
xor
mov
aaa
mov
ret
dec
push
add
das
iret
test
mov
test
adc
pop
(bad)
adc
xchg
stos
repz
not
mov
es
cmp
scas
dec
sbb
dec
iret
cmp
in
and
dec
shl
aam
xor
aaa
cld
or
jmp
cmp
xor
sti
call
movs
mov
and
push
out
into
(bad)
mov
and
sub
loope
sti
das
mov
inc
adc
pop
in
dec
mov
popa
adc
cmp
cmp
cmc
mov
popf
or
push
cmps
xor
jb
bswap
mov
test
stc
sti
mov
or
push
add
fild
jmp
push
xchg
cmp
scas
inc
adc
ds
out
rcr
dec
fldcw
lods
sahf
pop
dec
sub
in
test
or
jge
adc
mov
ins
jae
sahf
(bad)
frstor
fbld
xchg
cs
mov
or
jns
push
add
std
outs
xor
es
cmps
mov
mov
xchg
in
sub
fwait
in
jmp
ja
pop
in
int
daa
out
or
and
out
inc
sub
jnp
jbe
sub
mov
cmp
jmp
cwde
(bad)
cmp
repz
mov
pop
mov
inc
mov
inc
xchg
add
inc
cwde
lods
out
loopne
mov
mov
mov
std
hlt
enter
in
push
pop
fwait
scas
xlat
ja
outs
lds
pop
test
xor
sub
jbe
in
cmps
add
clc
cmp
ror
(bad)
std
sti
std
pusha
inc
mov
inc
sub
into
jbe
pop
xchg
jecxz
xchg
xchg
pop
and
jmp
stc
add
mov
pop
fld
jnp
out
aad
cmps
std
pcmpeqw
push
loope
inc
mov
shl
test
pop
jno
cwde
fst
in
jecxz
les
stc
jno
inc
and
or
mov
int3
mov
das
and
mov
int3
movs
push
xor
adc
mov
std
fistp
arpl
icebp
jae
out
in
mov
fdivr
pop
adc
push
in
call
mov
jg
sbb
(bad)
in
js
cwde
sub
inc
out
or
popf
div
sbb
sub
jnp
cmp
int3
leave
fsub
cs
mov
clc
inc
pop
cmp
fisttp
or
adc
scas
or
call
xor
push
lock
cmp
(bad)
call
repnz
jecxz
push
scas
repnz
jl
pop
pusha
pop
fcmovnu
add
dec
ds
jo
mov
mov
aas
in
loope
mov
jns
sbb
scas
xor
push
push
sti
and
popf
cmp
ret
push
aad
push
mov
or
aaa
mov
xchg
stos
out
inc
xchg
push
cmc
addr16
lds
inc
icebp
rcl
pop
pushf
inc
ins
jp
and
cmp
das
push
clc
push
les
dec
adc
aas
push
push
inc
rcr
setnp
movs
popf
dec
jno
sbb
adc
jmp
xor
ins
mul
in
call
push
push
int3
pop
xchg
ror
xchg
jo
sbb
xchg
arpl
cdq
jo
mov
pushf
sub
test
aam
scas
inc
mov
xchg
in
jp
adc
stos
out
inc
pop
fistp
cmps
repz
les
mov
popa
retf
lods
mov
jnp
push
pusha
fwait
adc
mov
xor
sbb
movs
cli
xchg
mov
or
or
mov
add
jle
sbb
mov
loopne
movs
pop
push
adc
cmp
cmp
lock
dec
fnstenv
add
in
ja
push
adc
out
cmps
mov
aaa
dec
cwde
mov
push
scas
jmp
movs
fcom
imul
lea
ja
pusha
mov
ins
cmp
dec
lds
mov
popf
adc
jne
sbb
pop
frndint
jno
in
and
std
adc
jo
repz
sbb
add
in
pop
fs
rol
push
gs
fadd
sub
fchs
cmp
cdq
bound
mov
mov
fdiv
nop
sub
test
pushf
mov
(bad)
pop
jle
(bad)
adc
mov
mov
or
arpl
mov
es
xor
lock
js
sbb
stc
and
pop
mov
inc
jp
adc
fild
cdq
pop
push
cmc
push
add
xchg
jl
push
jecxz
repnz
aas
dec
stos
dec
shl
adc
mov
cmp
lock
scas
cmps
mov
xrelease
mov
(bad)
fstp
add
mov
das
call
jmp
addr16
push
mov
pop
jp
dec
pop
sub
mov
push
pop
and
out
cwde
loopne
and
jg
shr
mov
and
or
pop
pop
add
test
fwait
and
mov
imul
das
xchg
and
add
icebp
dec
dec
out
arpl
(bad)
jle
xor
pop
push
cmovl
fcomp
sahf
xor
fcomp
adc
movs
xchg
xor
test
in
sub
(bad)
jmp
push
cmp
test
mov
mov
(bad)
cli
out
cmps
add
enter
mov
sub
fist
inc
dec
out
add
std
fadd
jnp
dec
mov
stos
scas
les
in
loope
mov
stos
pop
std
jnp
mov
jge
push
repz
sub
mov
test
pushf
xchg
pop
arpl
je
out
lods
addr16
hlt
pop
jne
sub
inc
push
aad
mov
cmps
and
or
fmul
hlt
pop
and
mov
pop
pop
pop
xor
jns
test
stos
and
pop
ds
push
loope
cmp
lds
mov
les
or
adc
xor
stos
pop
mov
mov
inc
jbe
jmp
fld
inc
dec
sub
push
mov
fadd
hlt
ret
push
push
inc
ret
loop
mov
(bad)
test
adc
add
inc
das
into
add
inc
push
sub
or
xlat
adc
jle
and
sbb
inc
sub
fcom
dec
aam
loop
pop
loope
jge
(bad)
stos
fstp
lahf
call
sub
pushf
pusha
jmp
in
popf
pop
outs
add
out
retf
clc
and
mov
scas
std
out
fcomp
ss
imul
or
cmp
std
arpl
cmp
add
sbb
out
cmps
repz
xchg
test
xor
or
cmp
xor
dec
mov
ja
(bad)
jne
push
adc
ins
xor
mov
push
inc
loop
ds
je
lea
std
sti
(bad)
cmp
xchg
or
mov
mov
retf
push
xor
aas
movs
data16
fs
mov
es
xchg
dec
dec
jno
or
popa
inc
lock
xchg
in
and
int3
mov
popa
popa
add
ja
in
lea
sub
mov
jnp
add
mov
retf
int
(bad)
aam
leave
sbb
pop
jl
adc
(bad)
pop
add
inc
adc
sbb
pusha
fmul
test
mul
(bad)
mov
ret
mov
xchg
(bad)
xchg
(bad)
out
addr16
inc
das
stos
jmp
arpl
or
int3
sar
pop
push
in
xchg
pop
cmps
aad
mov
push
stos
jmp
pop
xchg
jmp
inc
aad
push
aad
add
push
int3
sbb
xor
hlt
mov
sub
mov
xlat
jae
repz
out
sti
nop
bound
das
xor
aas
push
add
les
out
or
data16
sub
jmp
fst
push
sar
(bad)
in
hlt
stc
xor
add
imul
and
inc
(bad)
adc
mov
mov
jb
mov
mov
in
adc
jae
retf
shl
add
shr
xor
fld
xor
xor
iret
dec
adc
aaa
stos
mov
test
shr
stc
sti
stos
and
lds
adc
or
pop
sub
les
popf
rcl
sub
mov
sbb
adc
add
dec
nop
les
shl
stc
sub
loopne
jp
mov
sbb
repnz
mov
pop
xlat
in
cmp
mov
pop
mov
jmp
push
pop
dec
xor
fimul
test
inc
nop
dec
xchg
std
aas
rol
push
mov
dec
addr16
jge
xchg
jnp
shr
mov
jmp
(bad)
mov
test
mov
pop
push
adc
mov
aas
inc
push
adc
shl
cmp
(bad)
stos
jae
push
scas
popf
sahf
push
pop
xchg
mov
js
ja
test
fdivr
xor
adc
mov
inc
jecxz
aas
and
push
(bad)
adc
int
and
jge
sub
sub
jnp
lods
loope
outs
icebp
cmp
in
mov
jbe
inc
lahf
sbb
jl
ret
jle
xchg
shr
into
pop
adc
xlat
loopne
adc
loop
mov
scas
inc
mov
dec
jns
mov
mov
push
jne
out
cli
and
mul
(bad)
addr16
mov
jle
fwait
add
shr
jle
out
and
inc
in
or
sbb
push
ror
iret
(bad)
jle
xor
repz
das
mov
cmps
cli
xchg
retf
mov
push
dec
xchg
je
cmp
mov
pop
(bad)
fcomp
out
outs
test
gs
adc
call
adc
inc
push
and
popf
aas
fwait
push
or
fistp
icebp
repnz
inc
inc
stos
push
int3
out
shl
ret
push
adc
cmp
cmps
pusha
imul
xor
shr
movs
(bad)
mov
sub
cmp
or
cs
in
cmp
ret
in
(bad)
bound
cmps
js
pop
pop
adc
xchg
pop
push
in
or
pop
stc
sub
jbe
lahf
aad
xchg
loope
ret
push
lea
or
dec
mov
icebp
loop
sub
out
or
out
pop
(bad)
push
adc
and
fist
aaa
xor
(bad)
push
std
ss
mov
add
mov
icebp
out
push
jecxz
pop
pop
ins
(bad)
loope
xor
cmps
cld
and
es
loopne
scas
lock
iret
aad
pop
mov
cmp
sbb
arpl
(bad)
mov
into
cdq
jmp
jle
rol
icebp
pop
ins
inc
pop
leave
mov
adc
xor
cmp
sub
addr16
add
sbb
pop
jbe
rcl
into
xchg
rcr
cld
jle
std
mov
ret
shl
nop
lahf
jb
leave
cmp
nop
jbe
test
cmp
xor
lahf
or
in
inc
sbb
push
int3
movs
or
fidivr
push
push
sti
or
and
aam
leave
aaa
jge
xor
or
adc
pop
and
pop
cmp
sbb
call
loop
js
xchg
enter
cwde
retf
xchg
inc
aam
stos
aad
fst
mov
cwde
pop
xchg
gs
dec
xchg
and
dec
les
or
jno
adc
push
add
xchg
push
push
add
pop
ins
pusha
xor
aad
dec
pop
mov
adc
jge
add
xchg
(bad)
sbb
adc
mov
dec
xchg
movs
ror
test
or
imul
jg
jo
jb
sbb
mov
jmp
adc
fld
repz
inc
and
fnstsw
add
inc
pop
inc
dec
mov
ins
xchg
push
cld
std
mov
enter
jmp
cld
cli
gs
or
jno
xor
mov
push
pop
pop
and
and
call
or
(bad)
or
test
inc
clc
add
mov
(bad)
int
pop
ret
mov
or
enter
js
fist
dec
daa
inc
lods
in
ds
xor
repnz
shl
ret
movs
ja
(bad)
inc
(bad)
jnp
cmp
jnp
clc
mov
mov
or
add
lods
mov
push
(bad)
out
shl
xchg
or
cwde
es
icebp
lock
js
mov
xchg
add
push
in
push
or
mov
jge
retf
outs
mov
call
lea
add
call
ds
xchg
xchg
test
popf
sbb
das
fisubr
ja
jno
ficom
(bad)
jecxz
test
std
add
pusha
aas
bound
outs
ds
cmp
(bad)
retf
aam
cmp
sti
cs
call
inc
imul
xchg
jnp
imul
sbb
test
lahf
pop
int
addr16
pop
das
push
push
sub
sbb
jecxz
and
sub
mov
xor
jmp
cmp
pop
xor
lea
outs
shl
mov
cmp
call
movs
call
loope
jg
mov
shl
call
ins
pop
mov
push
sbb
push
jno
shl
adc
lods
mov
push
stc
fild
popa
fs
mov
out
repnz
jmp
dec
cwde
mov
cmp
in
lods
and
aam
mov
test
dec
mov
dec
outs
(bad)
aaa
dec
sub
sbb
cmps
scas
(bad)
je
out
mov
daa
xchg
jno
(bad)
aaa
ss
mov
add
retf
pop
(bad)
push
rcl
ds
mov
mov
hlt
gs
std
sbb
sbb
shl
add
int3
mov
cli
das
dec
sbb
sub
call
add
jnp
pop
jge
lea
jg
retf
ficom
je
mov
sbb
add
imul
cld
inc
out
into
sbb
idiv
pusha
test
into
jne
mov
stos
bound
popf
shl
mov
inc
and
xchg
neg
rcl
not
inc
loopne
cmp
inc
and
fcom
mov
repz
cmp
sbb
xchg
stc
and
push
aam
popf
jns
dec
sar
(bad)
fmul
lea
jge
mov
mov
aad
movs
(bad)
retf
aaa
mov
sub
mov
fist
xchg
repnz
adc
cmp
(bad)
cmp
loopne
inc
add
and
pop
jae
(bad)
sti
fwait
outs
jns
xchg
out
sbb
shr
pop
repz
sub
mov
inc
sub
fcom
mov
sub
addr16
bound
ins
inc
loopne
pop
xor
sub
in
mov
adc
mov
pop
call
stos
add
cld
pop
out
lahf
xor
div
movs
dec
sub
adc
push
idiv
sbb
and
xlat
lock
(bad)
data16
and
fdiv
pop
and
test
xchg
mov
arpl
push
repz
inc
cmp
std
adc
pop
add
rcr
pop
mov
test
outs
inc
and
sbb
mov
dec
pop
jns
out
dec
fbld
push
out
ins
pop
fcmovb
cdq
pusha
aas
lods
into
and
inc
or
cwde
mov
add
mov
out
dec
sar
rol
mov
mov
or
test
(bad)
sbb
mov
jle
ins
jmp
xchg
mov
stos
rcl
xor
jns
lds
(bad)
rcr
xchg
sti
repz
cmp
pop
or
shr
cmps
rcr
xlat
jmp
lds
and
(bad)
ror
xchg
mov
ja
mov
adc
sahf
(bad)
cmp
or
out
jne
push
xor
add
dec
lds
(bad)
aad
cmps
push
repnz
outs
sbb
and
xor
sbb
and
sbb
cs
or
in
rol
mov
not
xlat
dec
sub
ds
ror
imul
into
push
and
mov
add
fidiv
cs
ds
pop
mov
aas
(bad)
jmp
mov
fistp
fiadd
sub
push
mov
(bad)
nop
and
cwde
nop
cmps
data16
movs
push
fdivp
jl
mov
dec
aas
loope
or
cmp
or
inc
xchg
push
(bad)
xor
mov
out
stos
(bad)
xlat
xor
inc
into
int3
dec
cli
test
ins
xchg
pop
shr
add
pop
pop
jmp
in
or
test
xor
cwde
pop
psllw
pop
mov
aad
jno
scas
cmp
sahf
arpl
pop
arpl
xchg
fisubr
shr
dec
sahf
fwait
adc
add
pop
xchg
ds
out
pop
ror
ror
arpl
dec
xor
sub
out
or
dec
pop
js
fwait
or
leave
jo
xor
adc
repz
cmps
leave
ffreep
shl
mov
jbe
in
cli
sub
call
in
shr
xchg
gs
jno
in
add
sar
fstp
adc
outs
push
jne
or
mov
cmp
pop
push
inc
dec
pushf
icebp
fcom
xchg
sub
mov
xchg
out
lds
jae
test
jbe
adc
jnp
xchg
xchg
mov
mov
jmp
addr16
shr
stc
rcl
out
jbe
add
push
or
(bad)
xchg
push
test
pop
cmp
xchg
out
dec
sub
stos
retf
inc
js
or
cmp
push
push
jb
xor
(bad)
cli
jae
mov
(bad)
jnp
cmp
sahf
lahf
and
mov
sbb
mov
loop
xchg
shl
xor
nop
scas
in
mov
adc
push
sub
xor
and
or
cli
retf
sbb
and
dec
mov
jo
lods
dec
sbb
jl
and
bnd
stos
xchg
test
cmp
call
pushf
test
push
jo
ret
cwde
test
pmulhw
jne
jmp
xlat
hlt
dec
stos
cs
popf
jg
inc
test
sbb
inc
sti
xchg
jecxz
imul
in
sub
dec
adc
pop
jmp
lds
gs
ret
or
rep
nop
mov
ret
shl
mov
(bad)
lea
fisub
enter
pop
psubsb
(bad)
mov
mov
cli
adc
xchg
dec
dec
fcomp
jl
lods
mov
test
clc
sub
push
push
stos
mov
retf
test
cmp
sbb
pushf
dec
ja
mov
loope
lds
mov
mov
cmp
push
xchg
test
loopne
data16
test
xlat
pushf
nop
and
mov
shl
mov
clc
retf
sti
es
push
pop
add
cmp
popa
mov
mov
dec
ds
push
or
sahf
pop
pop
pop
push
data16
cld
sahf
and
add
in
jno
rcl
jp
dec
scas
cdq
rcl
shl
or
dec
xor
push
imul
mov
dec
div
(bad)
jmp
or
daa
cmp
jg
lods
lods
mov
pop
ss
test
leave
jg
aam
repz
mov
jle
inc
push
mov
jl
cwde
lea
repz
push
jge
jge
lea
cmp
mov
and
or
loop
dec
push
or
dec
xchg
mov
pop
or
add
fld
or
push
or
xchg
lods
sbb
js
mov
repz
ficom
sub
dec
shl
mov
mov
jp
stos
mul
jle
and
addr16
arpl
mov
fstp
mov
ret
pushf
clc
psraw
push
xchg
mov
test
pop
cwde
cmp
jne
jae
aaa
xchg
inc
arpl
xchg
and
(bad)
and
and
cmp
idiv
xchg
xor
or
adc
shl
mov
xlat
fstp
push
std
aad
lods
popf
add
push
and
data16
stc
or
scas
xlat
pop
(bad)
push
(bad)
(bad)
iret
xlat
scas
or
cmp
aas
gs
in
or
mov
nop
inc
sub
stos
cs
retf
inc
mov
jecxz
loopne
(bad)
xor
or
movs
movs
ret
fnstsw
sbb
loopne
call
push
jle
mov
out
jne
mov
dec
jns
ja
and
out
nop
jbe
and
sbb
lods
xchg
pop
nop
popf
and
test
mov
dec
mov
mov
inc
loopne
inc
adc
gs
fsub
jae
out
out
sub
gs
jp
and
mov
inc
jge
test
(bad)
out
test
push
pop
and
test
repz
jle
push
clc
pop
inc
dec
xor
xchg
jno
into
adc
bound
in
jbe
mov
sub
fisubr
fs
test
mov
xlat
xor
std
inc
mov
inc
mov
daa
adc
ror
jl
mov
mov
mov
stos
xchg
into
cmp
jg
pusha
fsubr
mov
loop
int3
mov
aaa
sub
or
sbb
mov
pop
inc
test
adc
and
cmp
or
(bad)
dec
loope
jo
push
push
pop
enter
outs
inc
dec
in
fidiv
mov
scas
xchg
ins
dec
cmp
pop
or
test
cmp
in
pop
xchg
lods
retf
in
js
push
pop
lock
mov
addr16
in
pop
loop
xor
mov
ins
pusha
push
out
outs
inc
xor
mov
pop
sbb
and
stos
(bad)
xchg
repz
sbb
and
inc
xchg
cld
mov
jle
mov
repnz
leave
(bad)
jg
outs
jge
shl
imul
mov
push
pop
leave
add
mov
mov
dec
push
aaa
popa
(bad)
sub
mov
jge
sbb
int3
hlt
loop
push
std
add
in
cmp
jmp
xor
std
xor
jo
xchg
(bad)
jp
in
adc
adc
(bad)
call
dec
dec
sbb
or
lods
rcl
jae
pusha
dec
push
xchg
arpl
mov
enter
(bad)
data16
nop
jecxz
jo
cmp
retf
inc
stos
(bad)
push
jg
sbb
inc
(bad)
mov
retf
adc
fcom
cld
fisttp
mov
mov
push
lock
pop
mov
jge
pop
push
push
lahf
lods
sub
fcomp
lea
cmove
in
and
fcom
mov
dec
ret
push
add
cmp
test
xchg
push
dec
pop
icebp
sub
jae
or
adc
das
cmp
loop
(bad)
jb
adc
int
xor
ins
push
ficomp
ficomp
jl
dec
(bad)
adc
and
adc
mov
(bad)
loope
lods
retf
pop
cld
fcmovne
mov
test
sub
in
test
dec
mov
ret
fld
xchg
dec
addr16
pop
pop
mov
out
ins
out
sub
iret
in
pusha
and
push
push
(bad)
into
xor
push
cwde
in
add
jno
inc
mov
aam
jmp
jbe
mov
jbe
pop
push
xchg
aad
inc
dec
jbe
sbb
gs
push
pop
push
sahf
cmp
pop
pop
sub
cdq
and
xor
out
shr
xchg
pop
fwait
pop
sub
add
(bad)
aam
sbb
mov
pop
add
fdivr
push
pop
daa
push
test
hlt
ja
lock
inc
aaa
jle
arpl
scas
inc
scas
jge
push
mov
enter
cmc
jmp
pop
push
cmp
dec
lods
xchg
jmp
pop
repz
mov
stos
(bad)
punpckldq
js
stc
inc
rcl
pop
shl
and
adc
mov
stc
mov
jl
inc
jle
cli
arpl
int
retf
enter
push
es
jl
xchg
(bad)
mov
and
cmp
mov
iret
dec
jo
pop
mov
dec
lea
rcr
adc
xchg
jmp
mov
jae
popa
gs
in
les
xor
adc
xor
adc
pop
dec
inc
push
inc
idiv
jmp
aad
and
xor
pusha
jmp
mov
jbe
mov
ins
sar
jmp
into
repnz
into
dec
stc
mov
ins
pop
sbb
aas
mov
adc
ror
test
dec
push
pushf
(bad)
out
aaa
dec
push
test
enter
in
add
or
mov
ror
dec
(bad)
fsubr
cmp
in
das
pop
aam
sub
stos
dec
neg
cli
test
popf
sub
ficom
xchg
mov
mov
jae
nop
(bad)
and
(bad)
and
cmp
sub
fiadd
(bad)
cmp
dec
mov
xchg
fst
xor
fsubr
mov
push
data16
(bad)
cmp
mov
cmp
fcom
jp
add
imul
shl
jmp
jno
cmc
xlat
adc
or
pop
and
bound
pop
aas
sub
pusha
or
sub
mov
add
retf
mov
pushf
pop
sbb
retf
(bad)
cs
pushf
adc
fwait
gs
aas
cmp
retf
js
push
pusha
dec
(bad)
mov
fadd
dec
cmps
or
ja
mov
inc
cdq
xchg
(bad)
xchg
jnp
test
mov
fdivrp
fisttp
cld
sahf
movs
call
ret
shl
in
fiadd
or
test
sub
dec
popf
cli
pop
mov
fst
test
test
cmp
outs
or
ret
test
ins
lods
test
mov
in
dec
adc
cld
jl
push
(bad)
sahf
sbb
out
lock
fistp
and
cmp
int
stc
add
mov
call
mov
es
retf
mov
sub
je
cmps
or
outs
psubb
jno
adc
push
aam
mov
sbb
and
sub
sbb
pop
out
cmp
cmp
cs
lds
rcl
push
and
push
je
mov
jb
cwde
retf
fst
pop
std
stc
mov
or
popf
stos
jnp
cdq
sti
call
out
(bad)
iretw
jp
hlt
sbb
aad
cmp
out
push
pop
inc
adc
fild
add
test
aam
lods
jb
add
aad
cmp
dec
mov
mov
sbb
mov
mov
sub
mov
rcr
xor
mov
stos
jns
pop
xor
fs
sahf
xchg
sti
dec
xchg
aaa
mov
inc
add
in
jbe
xor
cmp
mov
jno
pop
sub
das
mov
in
pop
inc
lea
or
jge
loop
and
sub
jns
mov
hlt
loopne
mov
add
jb
movs
imul
ret
cld
imul
add
pop
fwait
leave
ins
fld
jnp
dec
fisubr
push
jmp
cmp
lods
and
push
and
stos
lods
cmp
pop
into
xor
jo
sub
push
inc
sub
clc
xor
dec
dec
pop
sub
pop
test
add
call
inc
sar
(bad)
add
cmp
add
cmp
push
push
sbb
outs
sub
fwait
mov
ins
int
adc
add
add
(bad)
push
scas
mov
mov
xor
sub
pusha
push
clc
movs
inc
cli
xchg
hlt
push
mov
rcr
push
in
scas
push
or
or
lahf
inc
cmp
and
test
add
mov
repnz
dec
into
sub
xor
nop
jp
inc
pop
mov
inc
adc
push
jno
dec
xchg
(bad)
iret
push
dec
ss
sar
cmp
cdq
push
xchg
push
or
mov
in
jmp
xchg
lea
movs
xlat
mov
mov
dec
clc
pop
sbb
mov
jecxz
loopne
and
add
jmp
push
sub
call
xor
jge
dec
hlt
pop
dec
out
fcomp
xchg
sub
rcr
ja
test
fwait
add
sub
sbb
inc
dec
jnp
xor
ss
daa
lods
(bad)
inc
inc
(bad)
jmp
mov
lea
pop
imul
jecxz
inc
xor
adc
pushf
aam
ficomp
sti
iret
ret
xchg
inc
dec
jne
and
pop
and
bound
fwait
and
mov
or
icebp
add
mov
cli
pop
mov
pop
mov
xchg
loop
neg
xor
xor
lds
(bad)
(bad)
xchg
and
cmp
loope
xor
or
(bad)
das
retf
pop
sahf
add
aam
mov
push
std
ins
fiadd
ss
sub
mov
and
addr16
js
mov
mov
pop
pop
(bad)
inc
mov
inc
xchg
aaa
inc
adc
jg
xchg
test
hlt
inc
int
mov
mov
cmps
push
rol
xor
pop
push
xor
jmp
fisubr
rol
sub
mov
or
add
xlat
and
stc
cs
addr16
cmps
stc
mov
movs
xchg
mov
cld
and
aad
sbb
adc
adc
in
push
adc
mov
sbb
adc
cmp
stos
shr
test
jbe
int
inc
add
or
(bad)
jmp
jae
push
jo
outs
gs
and
or
push
cld
lahf
leave
jne
dec
addr16
adc
jne
mov
pop
pushf
fcom
mov
sub
mov
neg
outs
mov
inc
jne
test
cmp
push
pop
cld
xor
fistp
test
jp
pop
inc
ret
(bad)
fadd
jmp
call
movs
rcl
inc
js
daa
data16
mov
cmp
mov
inc
repnz
iret
sub
(bad)
popf
enter
popa
loop
pushf
std
jg
jmp
aaa
or
movs
sub
adc
adc
and
aam
pop
mov
adc
push
aad
pop
xor
(bad)
pop
mov
loopne
lods
jecxz
iret
out
push
xchg
inc
adc
pop
inc
aas
dec
mov
xchg
sbb
inc
jo
iret
mov
rcl
add
aaa
dec
fisttp
adc
lahf
pop
inc
add
mov
jnp
jmp
push
shr
ficomp
or
push
adc
aas
inc
mov
cmps
ds
outs
ret
lods
test
aas
jge
(bad)
sti
sub
push
jae
fsubr
xchg
sub
and
test
std
sti
adc
mov
lods
stc
pop
out
add
repz
xchg
xor
je
xchg
push
outs
xchg
sbb
xchg
and
pop
push
lods
jno
pop
cmp
inc
imul
cli
lahf
xor
mov
shr
xor
push
arpl
adc
add
sub
cmp
out
jl
sub
sti
ss
fst
jmp
mov
xor
adc
adc
lods
mov
adc
sub
dec
jne
mov
sbb
sbb
imul
mov
jp
mov
mov
jb
cmps
jmp
ret
fnstsw
xor
cmps
es
push
cmp
push
imul
in
adc
fs
into
jns
shr
xchg
mov
gs
loopne
fadd
cmps
popa
cmps
fwait
push
xchg
cdq
push
mov
sub
jmp
kmovw
sar
or
add
(bad)
jle
sbb
adc
sbb
popf
cmps
clc
cmc
push
jnp
mov
in
cld
xchg
jmp
cdq
jne
test
out
mov
jg
repz
push
jg
mov
jo
mov
test
xor
ror
clc
cwde
dec
jbe
adc
inc
mov
lahf
inc
xor
mov
pop
(bad)
pop
idiv
xor
adc
jge
xor
or
sub
jge
mov
jg
fsub
adc
fcomp
into
fist
push
cmp
or
sbb
fidivr
cwde
fs
ds
push
mov
jno
dec
ins
out
pop
mov
aaa
mov
cmps
inc
jge
pop
ret
lds
mov
or
dec
xchg
adc
add
data16
or
inc
cmps
dec
mov
or
dec
sar
mov
add
fisubr
jno
or
aam
sbb
pop
jae
dec
test
push
fadd
pop
scas
xchg
pusha
cmp
enter
ret
ja
jbe
jl
xchg
mov
(bad)
test
or
int
mov
sub
inc
sbb
push
mov
aam
push
adc
jle
cmp
movs
shl
cmp
cld
retf
sbb
inc
gs
xor
push
fcmovnu
push
inc
jbe
cmp
outs
scas
mov
xchg
push
shl
inc
addr16
int
and
in
sub
push
and
cmp
mov
mov
bound
sub
addr16
cmc
int3
inc
outs
adc
sbb
xchg
out
add
scas
in
bound
sha1msg1
or
clc
pop
rcr
or
sub
movs
add
mov
lock
icebp
adc
mov
ds
pop
cmp
add
imul
out
cmps
sbb
stc
push
cmps
pop
cmp
lea
jmp
push
sub
fdivr
pop
pop
daa
dec
and
sbb
xor
add
(bad)
test
mov
dec
stos
daa
scas
adc
jno
sti
sub
push
pop
xor
dec
mov
or
xchg
xor
jecxz
add
adc
inc
stos
aas
shl
hlt
pop
and
shl
iret
jno
mov
and
inc
fwait
lea
js
in
and
call
les
jmp
or
pop
(bad)
jbe
retf
jo
adc
fisttp
in
mov
out
das
or
lds
into
or
or
ret
xchg
mov
pop
push
sti
fs
(bad)
fadd
xlat
retf
mov
gs
mov
rol
aaa
scas
std
ins
jmp
aad
fdiv
es
sub
sub
je
ror
ret
cld
push
ja
repnz
in
sub
(bad)
jae
push
push
stc
pushf
cs
aas
(bad)
xchg
cmp
ss
xchg
mov
push
stos
or
add
loop
loop
or
aas
out
imul
sub
enter
sub
stos
retf
dec
cwde
lock
movs
pop
out
cmp
cs
cmp
or
add
(bad)
push
lds
push
jmp
mov
xchg
cmp
fucom
fimul
cmp
mov
(bad)
hlt
ja
stos
xchg
sti
imul
mov
retf
pop
mov
int
mov
push
out
pop
scas
mov
lods
xchg
div
cmp
rol
fnsave
pop
hlt
sti
push
xchg
inc
pop
ret
dec
xor
std
dec
retf
mov
pop
inc
loopne
js
mov
or
shr
test
test
call
in
dec
les
out
je
jbe
add
retf
pop
(bad)
jnp
(bad)
ret
jne
ffreep
rcl
or
iret
xor
inc
cmp
movs
adc
dec
push
ss
xchg
or
mov
or
and
mov
jb
xchg
pop
inc
shl
dec
or
jp
loope
jmp
int
mov
mov
or
inc
mov
mov
ret
movs
adc
(bad)
aaa
loop
imul
stos
gs
aas
mov
adc
and
add
lods
adc
xchg
jno
loopne
mov
leave
push
inc
out
and
rol
mov
dec
ror
cmps
sbb
shl
mov
ja
adc
repz
pop
ret
cmps
fcom
or
lods
popa
jecxz
fidivr
lods
and
jns
cmovbe
cmp
bound
push
sbb
ret
xchg
imul
sub
popf
out
in
mov
mov
cmp
sbb
mov
dec
sub
shr
cmp
mov
lea
mov
push
dec
bound
je
in
cmp
call
outs
sti
mov
jns
cmc
mov
xchg
mov
mov
test
add
mov
jnp
fdivr
mov
push
ret
sub
mov
lock
mov
mov
std
adc
push
in
xor
mov
sbb
pop
repnz
outs
or
push
aam
inc
mov
stc
jmp
aaa
outs
xchg
adc
sbb
inc
push
popa
enter
or
imul
push
adc
mov
mov
hlt
out
in
clc
xor
jnp
jno
inc
ins
push
sbb
arpl
jae
sbb
arpl
(bad)
xchg
or
mov
add
mov
adc
jnp
cmp
and
dec
stc
ror
add
test
mov
bound
int
inc
neg
jmp
stos
xchg
test
rep
test
sahf
jmp
and
clc
inc
mov
ret
gs
jnp
sar
xchg
jg
push
adc
cmp
push
mov
or
inc
ret
(bad)
dec
inc
out
popa
sbb
clts
mov
add
movs
jno
ret
xor
mov
fsub
into
fcom
call
pop
pop
ins
jle
mov
scas
jne
cmp
lea
js
or
(bad)
and
jmp
jl
push
dec
inc
cmp
sbb
pop
inc
adc
call
jmp
add
scas
clc
jmp
retf
repnz
sbb
jmp
push
cmp
popa
mov
aaa
ins
movs
xor
stc
fsubr
jle
or
push
cdq
add
rcl
jbe
and
mov
xchg
xchg
ret
xlat
sbb
pop
push
push
cwde
jb
xor
jecxz
lods
sub
pop
or
push
add
daa
dec
shl
add
out
out
mov
test
pusha
enter
loopne
int
push
xchg
sbb
xchg
ficom
and
(bad)
and
or
std
cmp
ficomp
adc
fcmove
pop
xor
nop
(bad)
adc
rol
xor
sbb
pop
cmp
ror
leave
aad
shl
call
(bad)
mov
stc
mov
retf
call
jg
in
or
(bad)
call
in
shr
pop
xchg
jmp
test
cmp
fs
cmps
sub
and
jmp
fimul
mov
cmp
out
dec
or
dec
xlat
mov
fisub
lock
ret
dec
xchg
(bad)
ins
scas
gs
cli
loopne
dec
push
and
xor
xchg
shl
push
mov
rcl
pushf
shl
push
pop
push
(bad)
out
fsub
push
retf
add
push
std
xchg
ja
pop
sar
loopne
jbe
stos
sub
dec
push
loopne
pop
mov
sub
xchg
mov
sub
push
or
paddsb
imul
lods
xor
data16
fdivr
repz
je
adc
sub
pusha
sub
(bad)
add
fdiv
stc
inc
fistp
xor
sbb
cmp
mov
jne
clc
out
jecxz
inc
pop
jns
dec
not
repnz
inc
es
outs
adc
dec
jl
ret
shr
or
inc
in
les
into
mov
(bad)
or
shr
sahf
add
xor
fnstsw
(bad)
dec
rcl
pop
xor
into
mov
push
push
scas
leave
mov
mov
iret
xchg
imul
and
push
adc
into
jle
push
pop
sbb
retf
mov
and
mov
rol
mov
loope
xchg
sbb
adc
fnclex
bound
test
sub
dec
outs
add
add
or
(bad)
fiadd
(bad)
ja
bnd
sbb
xchg
sahf
popf
jns
mov
lock
dec
repnz
pop
sub
mov
aad
xchg
sahf
inc
inc
sub
imul
ins
ins
arpl
pop
adc
ins
test
shl
cmp
jbe
in
jge
jl
pop
cmp
in
and
cmp
mov
inc
addr16
sar
dec
cmp
mov
xor
cmp
xchg
push
rcr
imul
sahf
in
and
cwde
scas
ins
inc
icebp
stos
icebp
stos
pop
cmp
(bad)
call
pusha
and
pop
stos
push
js
push
inc
ret
jg
jbe
imul
std
outs
aam
or
jae
cld
mov
sti
lock
test
call
mov
repnz
cmp
loope
movs
sub
push
xchg
mov
inc
mov
sub
fwait
inc
out
cld
fist
jp
(bad)
rdmsr
add
mov
gs
inc
inc
inc
dec
add
sub
ins
mov
mov
xor
sbb
jl
or
or
nop
jp
or
mov
lea
inc
inc
aad
addr16
outs
lods
ja
cmp
inc
jae
inc
xor
xchg
leave
hlt
in
push
inc
ja
sub
jge
ror
in
cmp
mov
cdq
cmp
mov
mov
xchg
mov
pop
cmp
pop
pop
dec
cmp
mov
jecxz
inc
mov
pop
cmp
xchg
mov
sbb
xor
xor
into
retf
pop
dec
jnp
dec
jmp
das
push
dec
jg
popa
mov
mov
out
and
ds
add
inc
pushf
mul
bound
push
inc
sub
jg
cwde
xor
jno
mov
push
aas
add
into
test
push
mov
mov
inc
dec
mov
and
test
mov
jne
mov
pop
jmp
adc
pop
sbb
rcl
in
pushf
jbe
jmp
repnz
push
add
mov
test
sbb
cmp
mov
stos
pop
out
shl
mov
(bad)
lods
icebp
div
sbb
addr16
jnp
test
sbb
pop
mov
dec
fisub
outs
xor
cdq
stos
mov
cmp
or
mov
mov
jmp
jmp
jne
and
out
int
sbb
es
ins
sbb
push
fstp
sahf
test
xchg
nop
xchg
sbb
retf
or
(bad)
mov
xchg
(bad)
pop
into
fsubr
int
mov
dec
pushf
push
scas
shr
or
push
xor
js
push
test
sbb
cld
fiadd
outs
call
or
mov
scas
xchg
cdq
repnz
add
sahf
pop
or
add
or
xor
loopne
xchg
stc
cld
packuswb
mov
pop
and
jp
or
inc
movs
stos
sbb
or
(bad)
jmp
dec
xchg
clc
jl
aam
(bad)
sub
retf
mov
inc
psrlq
loopne
dec
add
pxor
rol
ss
adc
adc
pop
cwde
pop
arpl
retf
cmp
into
rcl
lock
ret
out
clc
xchg
enter
and
rcl
pusha
jae
add
lods
rol
push
test
cli
sahf
jle
lods
xchg
je
and
add
jmp
and
sbb
xchg
pop
(bad)
outs
jns
dec
lahf
mov
sub
rol
inc
jg
mov
aad
leave
in
mov
fbld
es
cdq
cmc
retf
mov
movs
jbe
lahf
mov
mov
stos
cmp
sub
and
push
sbb
int3
test
or
jecxz
jbe
sbb
sub
sti
call
repnz
aam
push
popa
in
push
lea
imul
push
pop
mov
ds
in
retf
push
sub
push
sub
(bad)
and
jg
xor
lods
call
xor
icebp
mov
test
ja
sbb
std
ds
call
xor
fistp
dec
out
imul
pusha
add
popf
lahf
or
pop
data16
retf
pushf
addr16
adc
cmp
mov
inc
jbe
fild
mov
jg
fs
xchg
pop
inc
jge
stos
loop
inc
and
sub
mov
push
(bad)
ins
das
add
(bad)
iret
fisubr
mov
push
cmp
pop
pop
pushf
loopne
mov
pusha
push
xor
mov
cmp
dec
and
out
mov
ret
adc
xor
sub
lea
add
mov
aas
push
enter
mov
hlt
test
dec
pop
ss
aaa
cmps
out
call
rol
(bad)
sub
add
popf
xchg
and
mov
fldenv
adc
call
jnp
lods
fstp
mov
cmp
aad
les
push
mov
lock
arpl
in
mov
xchg
inc
add
retf
frstor
test
adc
in
out
loopne
js
jmp
outs
lea
cmps
aam
xchg
jmp
mov
pop
call
push
mov
and
sbb
dec
mov
cmp
and
les
sti
cmps
mov
push
lods
ret
fild
sub
(bad)
cwde
sbb
adc
xchg
xchg
adc
shl
xor
rcr
movs
int3
fst
adc
dec
dec
or
jle
push
pop
and
ds
ror
and
fnstenv
push
dec
adc
es
iret
rcr
test
test
mov
push
push
sbb
push
(bad)
mov
mov
cwde
push
xchg
mov
cmp
cmps
iret
repz
ja
fnsave
mov
outs
cld
test
mov
add
test
pop
adc
sub
stos
sub
cmp
add
inc
cmp
xchg
sbb
aam
sbb
xor
lods
push
mov
mov
repnz
xchg
add
mov
sub
jecxz
cmps
outs
or
test
adc
dec
mov
xor
mov
out
xchg
lar
xchg
imul
push
sahf
enter
out
dec
ins
lock
repz
popa
inc
arpl
add
aas
xchg
fwait
out
lods
adc
xor
mov
cs
jne
(bad)
int3
push
mov
mov
inc
push
mov
xchg
(bad)
imul
add
xor
ds
adc
nop
data16
mov
cmp
inc
lods
and
sub
mov
ret
ja
inc
iret
add
sar
shl
mov
gs
mov
fs
std
jle
call
popa
sub
pop
pusha
jg
and
mov
(bad)
movs
popa
dec
mov
inc
ja
ret
push
sbb
arpl
sub
mov
div
xchg
xor
lock
es
sbb
sub
cmp
cmp
retf
ret
sbb
mov
dec
xor
inc
add
xor
mov
push
push
xchg
mov
adc
pop
jno
daa
xlat
or
xchg
pushf
bound
lea
adc
push
cmp
ins
or
push
and
adc
int
xchg
jl
jmp
int3
cmp
sti
add
in
(bad)
aam
push
out
inc
shl
cmp
pushf
jnp
mov
mov
cmp
imul
xor
jb
popa
in
dec
dec
(bad)
xor
pop
and
and
dec
into
xchg
out
sub
neg
rcl
fsub
sar
sbb
sbb
inc
sahf
xor
cmp
inc
sbb
inc
lods
jmp
loope
jno
sahf
pop
xchg
retf
movs
iret
or
call
or
(bad)
call
xchg
rcr
(bad)
sub
(bad)
das
mov
je
sbb
jecxz
or
pop
aas
sbb
sub
adc
and
fs
stos
cmp
push
ret
shr
jge
mov
out
popf
inc
jo
dec
not
not
daa
outs
jle
pop
mov
jge
das
xchg
push
mov
fld
test
mov
xor
outs
popa
mov
jb
retf
jb
xor
fisttp
call
adc
cmp
mov
or
nop
xchg
jg
outs
sti
pop
dec
cdq
push
sub
xor
in
sub
ins
jae
xchg
add
inc
iret
push
adc
nop
lea
mov
sub
mov
mov
outs
and
(bad)
jne
xor
mov
jb
pop
shl
jne
in
clc
movs
mov
inc
push
stos
or
and
sub
add
test
(bad)
imul
test
fcmovnb
jecxz
push
xchg
sbb
sar
xchg
cmps
test
mov
stos
and
clc
sub
in
push
or
xchg
test
fwait
jp
mov
hlt
out
movs
xchg
push
rcl
jge
xchg
inc
pop
mov
les
imul
clc
adc
xor
in
dec
stc
test
rol
mov
fnop
xchg
movs
jl
jno
hlt
add
xchg
lock
sub
xchg
jns
jp
jns
xor
lds
arpl
xor
sbb
enter
pop
ret
or
mov
lahf
popa
outs
push
sbb
dec
shl
adc
xor
xchg
lea
in
push
hlt
and
mov
enter
add
push
shl
imul
stos
lea
pop
mov
mov
nop
outs
or
adc
push
xchg
mov
rol
aam
pop
xlat
fdivp
jo
sbb
xor
push
or
dec
movs
arpl
mov
push
sahf
and
pop
adc
mov
or
in
je
aam
aad
jg
int3
add
inc
icebp
add
mov
stos
cwde
bound
ds
xor
loop
adc
pop
cmc
sahf
or
xchg
xchg
mov
out
int
and
adc
sub
cli
(bad)
mov
shl
js
xor
popa
add
mov
sub
out
xchg
int3
mov
(bad)
push
loope
adc
mov
in
jmp
add
std
sbb
icebp
cdq
fistp
and
mov
pop
push
es
xor
and
push
or
xor
mov
aam
xchg
fnstenv
fldenv
mov
cdq
jp
fidiv
(bad)
adc
rcl
daa
into
in
and
xchg
cmp
sahf
ja
mov
stos
cmp
icebp
cli
ds
int3
fsub
xor
mov
add
jnp
sub
fistp
fidivr
repnz
ins
cdq
cmp
adc
pop
inc
mov
call
jb
bts
ret
test
mov
add
repz
add
fsub
sahf
cmps
scas
adc
mov
mov
inc
lea
inc
jmp
arpl
push
int
(bad)
mov
jne
pusha
ja
dec
or
push
fwait
xchg
cmps
jmp
cmc
mov
mov
jns
sbb
or
out
stc
ins
dec
into
ror
rol
jnp
mov
fld
ror
cmp
div
xchg
mov
push
jne
sub
call
mov
mov
addr16
mov
pop
ins
(bad)
xchg
mov
fwait
cmps
sbb
mov
lds
jno
jbe
cmps
pop
test
js
mov
fs
fucomip
fisub
lds
(bad)
pop
jl
sub
xor
push
or
rol
add
sub
aam
sbb
push
es
sub
push
push
pop
jle
sti
out
sub
and
rcl
and
sub
mov
int3
mov
cmc
mov
mov
cmp
mov
xor
es
and
retf
fimul
fidiv
repnz
pop
in
lods
stos
cmp
es
push
add
iret
xor
mov
inc
inc
test
jle
sub
ss
dec
mov
fsubr
fild
call
ins
mov
mov
pushf
push
cmp
jb
push
out
fild
shl
les
sub
shr
inc
sbb
mov
popf
pop
or
sbb
sub
pop
mov
nop
jnp
movs
gs
adc
inc
popa
fsubp
je
or
add
(bad)
mov
icebp
or
inc
mov
sbb
in
add
call
clc
xchg
jne
sbb
icebp
dec
loope
test
ror
hlt
xlat
push
and
pop
dec
mov
sbb
cmp
jmp
xchg
fnsave
lahf
cmc
aaa
pusha
jmp
xlat
xchg
inc
jne
jle
add
sti
or
outs
mov
mov
sbb
pop
ins
xchg
push
add
inc
(bad)
lahf
popf
sbb
mov
xchg
sbb
imul
pop
dec
pop
push
dec
cmp
cld
mov
cmp
ss
inc
adc
loopne
ficom
ja
ins
and
jae
enter
aas
add
test
in
retf
mov
mov
inc
fidivr
adc
mov
pop
cli
inc
xor
cmp
jmp
push
xchg
add
fisttp
into
mov
repnz
in
out
xor
xor
(bad)
cmp
in
and
mov
mov
loopne
xchg
jmp
jne
or
leave
xor
cmp
adc
jnp
nop
(bad)
(bad)
je
stos
xor
fidivr
adc
xor
ja
or
fs
sahf
pop
mov
(bad)
push
xor
push
push
push
arpl
adc
call
mov
repnz
adc
aad
sbb
loopne
je
mov
les
cmp
int
mov
adc
and
(bad)
test
nop
loope
xchg
push
jmp
mov
xor
das
xor
rol
cmps
add
outs
out
nop
leave
lds
fidivr
lods
popa
xor
adc
(bad)
je
or
mov
dec
sbb
pusha
div
mov
jl
popf
call
loopne
xor
dec
pusha
or
sub
xchg
loop
mov
popa
jno
or
outs
jno
pop
pop
pop
push
es
fcom
xchg
or
mov
dec
(bad)
mov
mov
mov
lods
fisub
ss
retf
in
in
jmp
imul
cmp
retf
aam
aad
mov
retf
iret
out
js
mov
inc
lods
dec
push
and
sbb
cmp
mov
xor
add
xlat
leave
gs
sar
loopne
mov
sti
jnp
pusha
pop
jp
jg
(bad)
(bad)
js
hlt
xchg
inc
add
xchg
push
cmps
dec
inc
and
lea
retf
inc
pusha
and
dec
pop
mov
push
aam
or
inc
jnp
aaa
dec
add
push
mov
dec
adc
cdq
push
dec
out
sbb
xchg
xchg
jmp
fsubr
(bad)
jmp
call
clc
(bad)
cmp
(bad)
xchg
mov
add
rcl
sar
ss
sub
mov
adc
rcr
call
(bad)
movs
pusha
jnp
push
hlt
fs
cmp
imul
jo
scas
dec
pusha
sub
mov
clc
xor
push
xor
or
cwde
fist
and
aaa
add
fwait
xor
push
xor
and
shl
shr
push
xchg
jle
pop
dec
call
div
adc
sub
xchg
pop
daa
stc
ret
cmps
out
test
gs
jmp
add
daa
call
test
out
jl
cmp
pop
scas
nop
and
(bad)
cli
out
out
mov
adc
jecxz
in
sub
retf
loop
aam
cmc
sub
cmc
adc
sbb
ja
xor
enter
jo
loopne
cwde
xor
mov
mov
arpl
xor
push
cwde
xchg
loopne
sub
int
xor
inc
sub
js
xor
mov
mov
stc
pushf
jge
mov
lods
gs
cwde
sbb
cs
push
in
mov
mov
out
cmp
fwait
lea
mov
out
jp
fstp
aam
shr
add
mov
es
pop
test
adc
mov
jmp
or
lahf
int
pop
enter
adc
sti
push
xchg
pop
jge
ins
inc
ins
mov
test
call
lahf
cli
jp
retf
pop
ficomp
pop
jno
call
int
xor
or
mul
repnz
jno
hlt
in
mov
cmp
sar
pop
mov
and
fs
ficom
push
push
cmps
in
mov
cmp
pop
nop
popf
xchg
xchg
pop
into
bound
out
les
add
jnp
aas
retf
inc
lea
(bad)
push
cld
add
mov
daa
sbb
adc
call
sbb
xlat
or
jp
push
cwde
faddp
(bad)
lgs
jno
test
in
inc
add
push
or
jae
gs
xor
inc
fisttp
pop
sub
and
jnp
fimul
stos
mov
inc
loope
test
adc
lea
push
in
jp
mov
push
or
pop
mov
addr16
dec
lahf
gs
pop
push
outs
xchg
stc
rol
mov
lds
jbe
imul
sbb
xchg
div
adc
inc
hlt
in
repz
or
(bad)
xor
cmp
dec
lods
cdq
add
test
mov
mov
(bad)
push
in
sbb
rol
repnz
pop
jmp
sbb
jae
out
inc
mov
hlt
xor
and
fcomp
outs
gs
pusha
ins
inc
sbb
test
es
mov
mov
push
nop
test
cmp
fld
retf
fwait
dec
inc
jbe
or
call
and
jne
pop
push
ss
cmc
push
xchg
push
pop
mov
vpxor
inc
mov
inc
daa
movs
test
outs
and
inc
cli
push
adc
leave
pop
sbb
inc
scas
test
loope
xchg
add
pop
add
jns
push
add
les
cmp
mov
shr
push
lea
inc
xor
(bad)
popf
cdq
mov
jae
stc
sbb
adc
out
fdivr
mov
push
mov
retf
fwait
inc
lock
xor
loop
test
mov
dec
out
cld
cmps
sbb
int
out
dec
fild
xchg
clc
es
rcl
inc
dec
je
fisub
sbb
jbe
test
xchg
inc
fs
(bad)
jb
mov
or
in
div
fimul
repz
pop
add
push
setle
fld
sbb
jbe
icebp
fsub
add
xchg
pop
mov
daa
out
sahf
(bad)
stos
xlat
nop
adc
jo
jecxz
call
dec
add
jge
popa
jp
adc
jbe
retf
and
cmps
jb
mov
loop
adc
mov
sub
rcl
xor
inc
fwait
movs
mov
add
mov
nop
xchg
cmc
jo
cmp
adc
out
daa
imul
fldenv
in
aas
inc
push
mov
pop
enter
inc
xor
test
xlat
inc
sbb
push
mov
aam
push
xor
ins
aas
push
movs
pusha
call
adc
pop
push
xor
dec
scas
retf
aam
mov
push
push
jbe
in
in
ins
adc
add
and
imul
pop
dec
shl
mov
leave
daa
mov
mov
jne
out
sbb
inc
or
sub
sub
cld
jo
mov
stc
cmps
ja
sub
ins
inc
mov
ds
fcmovb
mov
std
adc
xchg
push
sub
outs
jl
in
mov
mov
inc
mov
push
call
and
mov
pop
mov
sbb
mov
out
icebp
mov
push
xchg
push
(bad)
pop
inc
inc
mov
loop
in
add
das
sub
push
lods
jp
out
mov
dec
popa
add
mov
stos
out
imul
(bad)
cmp
mov
jp
movs
lea
inc
push
sub
push
cmps
mov
call
adc
sbb
movs
jle
lock
data16
xor
pop
mov
pop
dec
out
jg
(bad)
sub
sahf
fnstenv
push
test
aad
sub
mov
mov
repnz
cmp
mul
lahf
and
(bad)
push
in
mov
div
sbb
iret
xor
dec
cs
and
fdivr
lods
xor
xor
dec
mov
test
sbb
ror
loope
movs
orps
pop
ficomp
mov
inc
xchg
dec
data16
clc
xlat
xchg
jno
fsubr
cmp
repnz
or
jno
mov
pop
jne
int
push
ror
test
pop
jbe
(bad)
jecxz
inc
aam
adc
mov
les
mov
icebp
ret
shl
(bad)
in
dec
or
repz
sub
inc
fst
js
sahf
jns
jbe
jnp
dec
jnp
xor
cmp
add
jl
xchg
int
cmp
lea
pop
pusha
and
jae
dec
push
ja
xor
repz
addr16
pop
mov
int
cs
mov
nop
ffreep
xor
pushf
(bad)
iret
pop
jg
push
pop
clc
push
call
pusha
mov
fs
push
push
or
jne
gs
push
push
je
mov
push
fst
je
out
lods
cmps
cmp
fldenv
xor
ja
push
push
sbb
push
adc
cmp
mov
mov
aaa
jo
jne
sub
jae
sbb
pop
xor
sub
imul
mov
clc
mov
repz
lods
push
add
je
fs
out
div
shl
inc
add
ret
jecxz
dec
xor
imul
pop
cwde
or
into
dec
jns
push
das
xchg
and
imul
out
ds
rol
push
cmps
mov
xlat
out
aas
cmps
in
in
out
out
pop
adc
in
(bad)
inc
mov
sbb
loope
mov
inc
hlt
mov
dec
rol
popf
shr
push
int3
mov
sahf
ror
fs
mov
mov
pop
repnz
adc
rcl
xor
cmp
pop
mov
inc
pop
mov
imul
ja
outs
jle
sub
cmp
in
mov
lods
div
jge
stos
je
cld
inc
in
jb
mov
aam
scas
call
inc
(bad)
std
xchg
movs
pop
sti
and
sti
ficomp
pop
jb
cdq
test
sub
adc
push
mov
std
stos
xor
sbb
das
pop
mov
inc
pop
sub
mov
xchg
jle
pusha
fs
inc
mov
cmp
jbe
dec
mov
bound
test
dec
jb
inc
xor
cmp
outs
mov
fadd
rcr
cli
lods
cmp
pop
jge
or
mov
adc
pop
repz
sub
xchg
cwde
xchg
pop
push
add
dec
fiadd
add
lods
daa
in
pop
adc
popf
pushf
aaa
cmps
(bad)
adc
nop
pop
cmp
out
pop
cmps
movs
fsub
push
add
cmps
test
xor
outs
adc
mov
sub
lock
push
fsubr
xchg
loop
jge
mov
ret
shl
mov
sbb
sahf
cld
stos
nop
and
(bad)
jl
mov
xor
outs
mov
popf
xchg
mov
add
mov
add
data16
pop
xlat
dec
test
(bad)
retf
dec
jle
mov
mov
lods
fnstsw
test
call
xor
jmp
xchg
mov
sub
push
cld
adc
std
or
and
fsubp
xchg
sbb
ret
sbb
push
ret
dec
outs
jbe
dec
enter
ds
sub
pushf
(bad)
mov
std
mov
cld
test
loope
and
in
mov
test
into
add
push
mov
pop
cmp
jae
mov
call
shl
pop
clc
cmp
mov
jmp
loopne
lods
pop
dec
xor
dec
add
test
xchg
or
mov
out
leave
dec
das
and
jl
dec
mov
stos
push
jecxz
popa
xchg
out
add
or
(bad)
in
loop
push
imul
jl
stos
push
sbb
(bad)
enter
xchg
mov
imul
sahf
lahf
hlt
dec
xchg
nop
jmp
lahf
test
dec
sub
cmps
retf
sub
pop
inc
and
push
mov
fsin
sbb
dec
mov
inc
shl
in
or
mov
jo
mov
sub
mov
add
pop
cmp
or
call
loopne
imul
das
inc
push
push
ds
ficom
xchg
cmp
sbb
jae
cli
push
add
mov
pop
sub
xchg
jmp
push
dec
mov
jns
mov
xor
push
nop
mov
mov
stos
cmp
in
in
aad
xchg
(bad)
xor
xchg
pushf
add
dec
sub
and
cmp
arpl
not
cmc
lds
jle
lock
jmp
push
out
jne
movs
cld
xor
xchg
fnsave
stos
push
mov
jge
imul
push
and
test
scas
jge
xlat
lock
ret
imul
jb
out
gs
mov
rol
push
jle
xchg
sub
das
add
jg
mov
fstp
cmp
push
pop
dec
push
or
cmps
mov
out
inc
xor
dec
push
repz
push
push
cmp
lods
pop
cmp
fadd
or
and
or
js
nop
jbe
(bad)
jns
mov
cmp
jecxz
data16
push
jno
dec
push
jg
inc
pop
push
xchg
mov
(bad)
inc
inc
test
xchg
mov
in
ss
outs
imul
xor
aam
cmps
je
jg
lds
retf
jnp
dec
mov
mov
xchg
(bad)
mov
or
shl
loopne
(bad)
fdivr
daa
or
cmps
ins
jne
sub
inc
mov
jae
lahf
sub
lock
retf
mov
(bad)
dec
pop
popa
cmp
out
and
pop
push
pop
fistp
cs
jg
xchg
mov
call
icebp
xor
mov
sbb
inc
or
xchg
xchg
or
add
sahf
sbb
adc
sub
scas
or
fstp
pop
gs
push
jnp
xchg
cdq
add
(bad)
in
cmps
sub
push
scas
call
out
das
sti
lods
popf
xchg
imul
test
mov
mov
rol
sub
mov
jnp
(bad)
pop
cwde
popa
and
test
add
mov
retf
fmul
mov
jne
retf
lods
adc
sub
scas
mov
xchg
adc
dec
pushf
jg
jbe
retf
gs
jg
das
imul
inc
dec
push
sbb
xchg
pop
mov
or
dec
add
ror
jge
bnd
inc
add
xchg
mov
inc
scas
fs
(bad)
ja
cld
mov
xchg
outs
dec
pop
and
add
std
aas
(bad)
in
and
imul
stos
dec
or
xchg
loope
add
cmp
movs
sub
sbb
cmp
retfw
pop
aad
jae
std
outs
shl
jno
xor
shr
sbb
mov
or
jg
mov
pop
inc
xchg
ret
pop
push
jmp
frstor
lea
or
lahf
retf
iret
sbb
cs
retf
aas
jns
add
cmp
imul
cmp
or
adc
sub
lods
push
push
push
xchg
xor
stos
in
fs
fist
movs
(bad)
pop
push
in
mov
cmps
sub
shr
mov
jnp
jno
cmp
or
(bad)
pop
add
adc
pop
(bad)
sub
xchg
fst
and
fsub
xlat
fsub
and
in
mov
imul
mov
aam
ja
outs
daa
or
outs
fmul
addr16
fcom
xor
pop
push
ret
fisub
dec
scas
addr16
fwait
push
(bad)
hlt
xchg
mov
xor
repnz
mov
ret
out
repz
adc
or
mov
fstp
mov
add
je
cdq
xor
xor
mov
xchg
das
mov
repnz
out
jp
mov
push
or
rol
ins
xor
xor
sbb
mov
add
mov
cmp
stos
sbb
loope
das
cmp
xchg
pop
xchg
or
jne
mov
push
mov
add
cmps
je
fdivr
cmp
sbb
push
push
outs
xor
cmp
jmp
inc
icebp
mov
ins
fisttp
gs
stos
pop
push
jmp
sub
lods
pop
sbb
xlat
cmp
shl
sbb
sub
fsubr
push
mov
add
add
jo
ss
mov
jl
in
push
in
mov
loop
pop
cmp
(bad)
sbb
cmc
fwait
mov
outs
mov
pop
fs
dec
inc
adc
jl
pusha
fisttp
mov
push
jb
cmp
sub
repnz
mov
push
hlt
dec
icebp
jl
sub
adc
in
not
add
test
push
test
pop
retf
dec
inc
inc
imul
pop
xchg
rcl
mov
cmps
aaa
xlat
push
pop
sbb
cmps
movs
jns
ja
mov
inc
jge
jmp
cmp
mov
loopne
adc
ds
mov
js
mov
into
cmps
add
xchg
icebp
mov
test
in
fldenv
loopne
movs
inc
adc
test
dec
js
mov
stos
push
aad
in
sub
sub
das
mov
jo
test
mov
mov
xor
cmp
sub
jno
pusha
scas
jp
into
rol
out
adc
cld
xchg
dec
retf
aam
aaa
mov
mov
push
dec
push
fadd
and
xor
mov
fimul
in
xchg
pop
push
in
cmps
rol
(bad)
push
jns
shl
icebp
inc
test
cmp
fist
adc
dec
adc
aaa
adc
add
fs
sbb
inc
xor
mov
mov
xor
pop
push
fnstcw
xchg
iret
sub
out
mov
lock
sub
ja
cs
pusha
cmp
ds
jp
hlt
xchg
cmp
add
sub
fs
sbb
cmp
pop
das
call
add
mov
mov
dec
addr16
cmps
cdq
pop
xchg
in
fld
add
cmc
popf
iret
jge
inc
jmp
fcomp
out
add
dec
fnstcw
cmc
xor
push
add
ins
add
xor
(bad)
fldenv
push
mov
xchg
sub
fisttp
fild
xlat
ja
cdq
pop
or
cdq
cmp
jmp
dec
jnp
pop
mul
jmp
mov
cmc
inc
push
xchg
cmp
les
inc
out
daa
call
(bad)
jmp
cmp
test
mul
std
pop
and
mov
iret
outs
inc
and
sbb
inc
adc
cmp
mov
jnp
les
mul
push
add
jns
xor
mov
jge
shl
(bad)
stc
lods
dec
inc
(bad)
cmp
mov
cmc
repz
or
or
aaa
or
fwait
retf
sbb
xor
test
out
adc
hlt
cmp
std
sub
inc
je
shr
std
fmul
fsubr
pop
sbb
sbb
xlat
loope
call
cmp
mov
outs
pop
hlt
xchg
push
fwait
int
mul
movs
pop
adc
dec
(bad)
mov
outs
ror
test
icebp
jle
(bad)
out
xor
pusha
inc
pop
cmps
mov
jnp
add
mov
(bad)
push
retf
or
int
dec
fdivr
clc
inc
cs
dec
xchg
xchg
hlt
imul
pusha
out
outs
fisttp
push
inc
pushf
xchg
pushf
or
aas
es
fadd
push
push
retf
sar
cmp
jg
and
xchg
ror
push
in
pop
push
mov
jg
pop
rcl
lods
xor
and
add
test
and
jg
jecxz
(bad)
rol
ins
push
fs
call
test
xchg
inc
call
inc
stc
jecxz
add
in
and
cmp
mov
rcl
and
inc
imul
jge
mov
adc
movs
xchg
in
jge
cmp
cmp
fwait
enter
sbb
push
js
push
clc
push
ret
inc
call
jmp
cmps
outs
aaa
push
cmps
mov
out
(bad)
push
add
lahf
jo
in
inc
adc
outs
adc
lods
xor
ret
and
loop
loope
adc
jl
push
das
(bad)
fmul
pop
jle
ss
jp
movs
xor
push
jnp
pop
aam
call
out
mov
jle
mov
push
jne
lahf
loop
add
ror
push
dec
out
pop
push
rcl
jo
test
mov
jmp
retf
cmp
fisttp
or
adc
pop
sub
ins
shl
jno
clc
inc
in
lods
test
xlat
nop
mov
sbb
push
fstp
sub
movs
pop
push
jle
in
cmc
mov
scas
sti
ins
pushf
loope
push
mov
dec
in
ret
fimul
stos
xor
push
pusha
clc
sbb
adc
add
xchg
loopne
adc
mov
sbb
ret
pushf
not
fild
das
hlt
mov
pop
xchg
inc
repnz
sbb
fist
mov
push
test
call
or
push
cs
cmps
stc
sbb
mov
int
and
mov
push
or
jb
jbe
and
dec
inc
push
es
jmp
adc
mov
mov
adc
in
mov
loopne
fwait
pop
sbb
dec
enter
fidivr
adc
inc
int3
addr16
inc
rcr
mov
or
jns
aam
xor
gs
icebp
pop
icebp
xchg
mov
or
xor
rcr
neg
xor
fadd
jmp
and
sbb
jge
out
movs
add
mov
pop
ins
or
data16
(bad)
int
sbb
sbb
cmps
xchg
cld
(bad)
and
sub
lahf
add
les
inc
adc
adc
sbb
std
add
ins
adc
add
dec
imul
vpsubb
pop
or
sub
jl
shl
test
xor
iret
icebp
jmp
stc
cmc
pop
jb
xchg
cli
inc
imul
xor
pop
nop
xlat
data16
ret
xor
mov
sbb
dec
mov
js
mov
shl
adc
fs
or
add
pop
dec
push
imul
fnsave
and
xor
jg
cdq
sub
test
int3
shl
push
int
adc
outs
xor
mov
or
jge
and
dec
pop
sbb
cmp
in
inc
pop
ret
test
retf
xchg
mov
lahf
xchg
in
push
and
in
rcl
mov
arpl
add
sub
pop
xor
sti
cmp
or
mov
inc
imul
lods
sahf
xchg
fs
or
aad
pop
pop
cmp
jb
xchg
out
lds
cmp
jb
cmp
inc
mov
cmp
test
out
add
dec
and
shr
repz
push
pusha
add
sub
push
sbb
in
add
iret
(bad)
(bad)
fidivr
jnp
mov
shl
xchg
jmp
or
ins
test
fucomi
int3
adc
mov
pop
fiadd
dec
pop
cmp
mov
mov
mov
dec
fisttp
jo
bound
pop
lods
das
es
or
sbb
je
fadd
xchg
adc
inc
ret
fldcw
fninit
jmp
xchg
arpl
add
cmp
enter
or
add
push
mov
repz
add
das
jns
cmp
fist
cmp
push
add
push
clc
dec
pop
mov
fld
outs
lea
jns
inc
cmp
jle
rcl
mov
movs
mov
rcr
push
fdivr
pop
mov
aas
mov
push
pop
jo
mov
xchg
jge
icebp
xchg
xlat
mov
adc
mov
push
cli
rol
mov
xor
inc
loopne
mov
sub
push
or
cwde
jecxz
cmp
pop
xor
inc
das
jle
xor
or
xchg
mov
mov
test
xchg
pop
int3
jae
stos
in
sbb
mov
lahf
sbb
je
dec
push
stc
ret
and
mov
mov
je
imul
adc
xor
pop
add
push
sbb
ss
movs
jecxz
mov
(bad)
mov
lods
push
push
shr
jmp
das
loopne
ins
pushf
mov
call
push
fmulp
mov
bound
icebp
scas
cld
aad
xchg
test
lods
sub
test
leave
pop
pusha
loop
test
call
and
imul
jno
out
or
fs
and
or
adc
rol
xlat
mov
popf
inc
stos
ins
ret
xchg
sbb
push
jne
int
inc
movs
test
add
add
mov
cli
add
and
adc
cmps
test
outs
mov
shr
leave
lea
cs
stos
xor
retf
mov
push
(bad)
ds
daa
push
mov
outs
lock
fisubr
sbb
movs
add
aaa
adc
jae
jmp
xlat
dec
inc
and
arpl
push
cdq
jno
jb
outs
inc
les
into
jg
dec
mov
icebp
fwait
add
mov
push
sbb
cdq
aad
xchg
or
xor
pop
jno
sahf
movs
ds
sbb
dec
mov
rcr
add
sti
(bad)
xchg
push
into
or
inc
adc
xlat
add
lods
or
sbb
loop
pop
sbb
shl
cs
out
lds
(bad)
push
(bad)
mov
out
mov
retf
(bad)
js
mov
out
adc
adc
out
mov
sbb
pushf
xchg
les
cmc
sub
repz
cmp
inc
dec
mov
push
xor
sbb
outs
out
cmps
push
mov
adc
add
sub
in
jmp
jnp
sbb
or
dec
jl
xchg
jae
jecxz
sbb
bnd
jb
add
fistp
sub
pop
push
lahf
pop
and
xchg
lods
mov
pop
and
lahf
add
ret
les
sub
sbb
test
mov
out
inc
cmp
int3
dec
mov
test
mov
test
push
pusha
and
mov
jl
dec
adc
jmp
popf
dec
xor
cmp
iret
leave
and
inc
dec
cli
cmc
pop
(bad)
jecxz
push
jbe
mov
pusha
push
(bad)
mov
fcmove
push
outs
mov
sbb
(bad)
(bad)
xchg
sub
mov
retf
in
cmps
outs
adc
scas
pushf
cmp
inc
mov
aad
in
ds
(bad)
push
mov
sub
(bad)
nop
mov
or
mov
push
dec
inc
xchg
xchg
xor
add
inc
(bad)
popf
retf
inc
dec
mov
xchg
push
cmp
cs
inc
leave
pop
(bad)
xor
pushf
push
jmp
adc
add
xchg
mov
mov
daa
sbb
out
movs
lahf
cmp
mov
adc
test
pusha
or
stos
inc
pop
test
pop
dec
jbe
cmp
push
out
rol
xor
push
jne
xsave
mov
mov
leave
mov
jl
(bad)
aas
adc
jp
cli
inc
jns
in
dec
cmps
sar
je
mov
mov
push
div
ret
or
sub
not
sub
inc
scas
in
or
aas
(bad)
aam
cmps
mov
inc
data16
inc
aad
ins
xchg
jb
movs
movs
dec
and
out
jb
js
loope
stos
add
push
outs
add
loopne
cli
mov
jne
rcr
mov
test
and
fnstenv
or
adc
aad
lock
pop
loopne
sbb
call
adc
stos
jmp
or
mov
cmc
mov
pop
jae
jle
mov
gs
mov
lea
scas
addr16
mov
push
sar
dec
shl
loop
rcl
mov
outs
push
cmps
adc
jmp
and
cmp
jle
jo
sbb
jl
int3
push
sub
or
scas
xor
add
sbb
or
shr
adc
push
mov
shl
frstor
jb
loopne
fidiv
xor
xor
jge
or
fld
leave
jl
ss
mov
xor
retf
pop
xchg
fnstsw
push
lods
add
mov
xchg
bound
cmc
clc
push
(bad)
jl
stc
in
inc
shr
addr16
or
cmps
xchg
in
pop
fistp
or
lods
mov
dec
jns
jb
sub
mov
in
jns
ficomp
adc
inc
ret
leave
or
pusha
and
inc
cli
adc
outs
push
imul
mov
fiadd
sbb
leave
xor
xlat
ds
push
sbb
dec
adc
mov
inc
movs
inc
fistp
mov
inc
fist
sbb
jge
push
add
xor
mov
adc
test
mov
ins
stos
popf
xchg
jl
fcomp
cld
call
enter
stos
and
cmp
jb
ins
setae
inc
inc
popf
push
mov
mov
imul
pop
dec
fisttp
jle
push
fwait
aaa
xor
jb
shl
daa
push
loopne
inc
rcr
jge
aad
jbe
int3
dec
jns
sub
mov
fs
xchg
stc
cmc
push
ins
or
repnz
sbb
jo
in
jnp
in
cmp
out
xchg
ins
push
push
push
dec
inc
xchg
fsubr
mov
outs
and
ins
jae
in
shl
dec
xor
add
inc
or
loop
push
scas
cs
clc
mov
inc
add
ins
test
xchg
inc
cmp
fdiv
adc
fwait
cmp
int
mov
(bad)
cld
adc
pushf
pop
retf
push
in
mov
mov
call
popa
cld
push
jnp
mov
xor
ins
(bad)
cmc
test
lea
jge
xchg
add
push
fld
imul
xor
sbb
out
sub
adc
popa
cld
in
int
sbb
jae
push
ins
mov
jae
pop
(bad)
scas
es
xchg
dec
push
xchg
mov
outs
mov
fwait
(bad)
ins
push
in
or
rcr
push
std
and
cmps
inc
mov
and
dec
add
cdq
cmp
jns
push
test
sbb
ret
mov
outs
iret
cmp
call
dec
jo
leave
in
(bad)
movs
das
dec
push
xchg
gs
lods
cdq
scas
pusha
(bad)
in
xchg
push
enter
enter
(bad)
fadd
mov
stos
jmp
cmc
mov
and
mov
mov
xor
out
popa
lods
or
mov
cmp
movs
cmc
test
xor
jae
and
in
movs
cmp
mov
jmp
sbb
jp
xor
cdq
add
leave
and
mov
sbb
not
and
rol
movs
mov
and
mov
push
in
push
loope
mov
mov
mov
inc
fcomp
loopne
out
mul
jns
outs
push
loop
and
add
mov
inc
fs
sar
jo
jmp
sbb
fldcw
or
outs
mov
adc
mov
popf
stc
or
dec
loop
jmp
adc
push
mov
aaa
ss
shl
add
int
in
jp
jae
push
mov
cmps
fistp
imul
mov
je
fwait
lock
out
or
aad
fimul
popa
pusha
sub
jo
push
dec
inc
fbstp
add
mov
sbb
aaa
and
pop
leave
fwait
inc
push
(bad)
mov
je
inc
mov
dec
in
loope
repz
loopne
es
jmp
jae
mov
call
div
inc
adc
cmps
jae
out
not
adc
and
mov
dec
ret
rol
sbb
mov
in
mov
xchg
inc
aad
(bad)
(bad)
mov
and
call
adc
je
mov
rol
fsubr
or
or
in
aad
retf
and
mov
xlat
sbb
loop
gs
jmp
cmp
in
aas
jle
rcl
rcr
dec
add
mov
loope
clc
pop
push
push
and
gs
ret
ror
fist
retf
daa
push
sub
rol
dec
in
stc
add
popa
cmp
mov
and
stos
inc
pop
icebp
call
adc
pop
or
stc
push
inc
or
push
mov
xor
out
sub
(bad)
xchg
fs
sbb
pop
inc
(bad)
stos
inc
je
jmp
and
dec
out
sub
xchg
inc
retf
ret
xor
(bad)
leave
lea
sbb
in
cmp
inc
mov
in
jbe
out
fidiv
ins
cmp
lds
inc
inc
bnd
fist
arpl
mov
dec
jg
fdiv
out
sbb
rcr
mov
jmp
and
xchg
je
aam
jbe
mov
hlt
mov
(bad)
ficomp
ror
mov
dec
je
jbe
ins
pop
jne
or
sbb
adc
shl
pop
sahf
int3
and
push
inc
cwde
inc
mov
or
xor
xchg
ret
test
xchg
inc
mov
xchg
lds
mov
ret
push
pop
pop
icebp
pop
jle
ficom
pusha
cs
jo
into
mov
xor
popa
pop
cmc
xchg
sar
jb
cmp
xchg
dec
std
push
adc
mov
pop
or
(bad)
rcr
and
sub
cli
fwait
aaa
xchg
sub
sar
or
add
fs
out
outs
add
dec
inc
adc
and
(bad)
scas
gs
lock
inc
es
jb
das
mov
pop
pop
cwde
cmp
cmp
inc
mov
ret
mov
mov
stos
lds
retf
call
xor
and
and
sub
aas
xchg
add
in
ss
fcom
clc
mov
daa
outs
or
pop
pop
mov
jo
xchg
mov
jae
cs
xchg
mov
dec
rcl
dec
and
outs
pusha
scas
mov
mov
in
or
call
mov
xor
imul
test
mov
retf
imul
pop
xor
arpl
fisttp
fdivrp
xchg
adc
(bad)
rcr
leave
inc
dec
sub
adc
outs
enter
fcmove
push
mov
pop
cmp
shl
(bad)
push
xchg
out
xchg
jle
daa
outs
rol
cmc
sub
jns
sti
(bad)
mov
loope
jecxz
lods
cmp
arpl
sbb
sbb
dec
scas
add
dec
add
pusha
(bad)
lock
xchg
(bad)
vpandn
pop
aaa
(bad)
enter
sbb
aas
stc
sbb
sti
mov
add
xor
sub
call
scas
xor
adc
xchg
xor
jp
mov
sti
mov
mov
setb
out
adc
int3
mov
pop
or
sub
pop
push
aad
(bad)
push
lahf
pushf
xchg
out
adc
popa
movs
lds
int3
in
(bad)
and
mov
mov
loopne
fcomp
adc
popf
xchg
inc
or
push
push
movs
int3
mov
movs
(bad)
inc
in
outs
mov
pop
jnp
repnz
xchg
inc
jno
and
and
xor
repnz
push
mov
xor
dec
fs
test
into
aaa
inc
or
(bad)
push
ins
mov
cld
dec
in
ins
xchg
xor
cmp
out
jmp
jae
mov
sub
dec
fild
retf
and
and
std
pop
shl
mov
xlat
adc
dec
inc
cmp
jg
fbld
loopne
mov
ds
clc
xchg
adc
js
cmp
fwait
sub
retf
xchg
cmps
add
push
jno
sbb
add
push
dec
cmps
pop
es
adc
(bad)
loope
or
ja
push
jp
or
ret
mov
and
jmp
fwait
sub
pop
sahf
outs
sub
outs
imul
inc
and
in
retf
push
les
enter
add
call
js
jecxz
and
adc
ds
stos
add
sbb
sub
push
in
sub
loop
xor
scas
or
cmp
mov
aam
xchg
lock
out
dec
leave
adc
clc
aam
adc
retf
dec
retf
test
bound
push
jne
popf
sti
xor
data16
or
scas
dec
sbb
jmp
sbb
jo
adc
add
cli
add
or
(bad)
call
or
jmp
ds
fist
add
mov
stc
icebp
sbb
div
mov
in
jp
test
fistp
inc
inc
loop
push
mov
jno
xchg
sub
mov
xor
add
ss
jae
stos
mov
add
lds
aas
loopne
stos
out
ret
pop
jmp
iret
cs
xchg
mov
mov
pop
test
sub
mov
dec
test
adc
aam
std
push
sbb
and
repnz
int3
iret
dec
fdivr
in
inc
cmp
outs
shl
push
out
sub
pop
sbb
sbb
cmp
xchg
ror
mov
das
xchg
not
data16
lock
mov
xor
adc
xor
mov
mov
imul
pop
scas
sub
push
out
gs
(bad)
ror
add
adc
aad
inc
add
aam
jbe
imul
xor
xchg
dec
mov
dec
gs
and
mov
jle
test
mov
cmp
arpl
test
repz
out
fwait
push
int
daa
push
call
cmp
(bad)
(bad)
and
stos
out
inc
sub
js
or
rcl
cmp
test
sbb
sub
clc
xchg
fwait
mov
lods
or
mov
rol
test
dec
ficomp
mov
pop
push
(bad)
cmps
addr16
loopne
pop
fdivr
xchg
lods
jno
and
dec
loope
pop
xchg
xor
pop
cwde
push
(bad)
add
lahf
sbb
les
jb
and
jbe
movs
xor
cmp
jne
mov
int3
es
jbe
sti
stos
dec
idiv
cmp
rcr
push
and
push
repz
out
inc
xchg
inc
movs
xchg
xlat
or
sahf
cmps
outs
pushf
dec
cmp
loop
sub
or
pop
dec
cmp
add
xor
imul
dec
add
cmp
jo
mov
adc
mov
inc
jmp
dec
jl
fstp
inc
cmp
iret
sub
pop
(bad)
in
adc
(bad)
mov
je
neg
adc
push
call
test
adc
jae
xor
and
(bad)
nop
pop
mov
adc
popa
std
pop
mov
adc
ret
jae
mov
push
mov
dec
out
inc
pop
cmp
xchg
test
mov
cmp
in
shl
ror
push
cli
shl
(bad)
idiv
fs
mov
sub
sbb
movs
xor
xor
shr
daa
repz
in
outs
mov
dec
push
sub
mov
mov
sbb
jnp
rcr
add
sub
shr
mov
cmp
dec
popf
pop
aaa
js
sub
pop
and
mov
addr16
push
call
push
shl
ret
shr
stos
mov
stc
out
push
dec
in
pop
int3
(bad)
jno
ror
std
(bad)
push
mov
(bad)
adc
cs
mov
pushf
ja
scas
les
push
mov
enter
cmp
cmp
les
aad
xchg
xchg
cmp
jbe
jbe
xchg
jle
lds
dec
and
mov
ss
ror
fbld
rcr
and
aaa
loope
pop
cwde
fwait
aas
mov
ins
imul
movs
mov
push
pop
add
ja
add
xor
mov
jmp
jne
xor
fist
lods
shl
sti
dec
add
pop
jo
xor
mov
fld
lods
test
stc
xor
push
or
sbb
data16
or
pusha
and
inc
push
pop
scas
cs
aas
vpsubw
nop
enter
jge
inc
push
inc
inc
jle
mov
aad
pop
arpl
cmp
inc
(bad)
ss
or
inc
xor
(bad)
mov
loope
int
ins
aam
xchg
adc
into
add
mov
cmp
mov
popf
lea
and
int
inc
aad
pop
jle
jg
inc
not
pop
mov
xlat
cmp
push
cs
jns
dec
add
push
retf
lods
xor
push
fldenv
dec
push
icebp
fstp
xchg
call
(bad)
test
xchg
(bad)
sub
mov
xchg
inc
cmp
es
ds
fld
dec
dec
add
xlat
fnstenv
loop
ret
xchg
bnd
sub
pop
ret
sbb
sub
movs
aas
mov
xchg
scas
cmp
(bad)
adc
in
sub
les
movs
call
daa
mov
or
movs
push
jb
jmp
xchg
pop
mul
sbb
(bad)
mov
pop
out
or
mov
mov
dec
retf
xchg
mov
inc
aad
pop
push
jo
adc
or
add
pop
adc
frstor
mov
xchg
shr
ins
fwait
sar
cmp
clc
test
(bad)
cmc
mov
pop
dec
xor
xchg
out
and
or
mov
inc
pushf
int3
repz
sub
in
xor
sbb
xor
push
test
lods
push
xor
mov
loop
test
xor
sbb
retf
call
inc
call
pop
adc
ret
add
inc
inc
or
xor
repz
push
(bad)
cmc
in
jl
mov
cmp
neg
rcr
mov
je
aad
pop
xlat
std
pop
fdiv
add
dec
sbb
int
cmp
outs
xchg
mov
cmps
outs
xchg
add
icebp
cmps
mov
ja
jmp
fist
inc
fimul
es
sub
pop
cld
div
adc
jmp
dec
mov
ss
xchg
dec
fild
or
mov
repz
sar
mov
sbb
or
cmp
ins
xchg
inc
push
adc
repnz
rcl
test
xor
adc
std
mov
mov
je
jg
mov
fild
sub
add
scas
sbb
sub
cmp
xor
inc
rcl
loope
fistp
add
mov
cs
repnz
enter
dec
lock
movs
sbb
add
pop
hlt
and
inc
popf
mov
loope
xlat
out
leave
sub
cli
ja
std
inc
mov
arpl
xor
pop
mov
clc
add
lea
jg
xor
fidiv
dec
mov
idiv
fld
(bad)
in
scas
jne
mov
add
xchg
pop
cmp
inc
test
sub
fs
xor
shr
fs
outs
inc
pusha
ja
dec
sub
and
test
mov
adc
dec
and
fcmovne
test
sub
and
mov
in
add
leave
push
fucomi
inc
popa
clc
jg
cdq
in
pop
and
fld
bswap
(bad)
gs
xchg
bound
cmps
adc
fwait
push
jb
cld
ins
ds
cs
adc
jnp
fsubr
out
jns
push
das
xor
mul
dec
loopne
loopne
and
inc
out
push
enter
shr
hlt
das
pop
sbb
es
ja
xor
mov
push
das
cmp
fnstenv
mov
inc
cmp
sbb
mov
dec
dec
movs
sti
test
test
push
xchg
cli
pop
push
test
sti
aaa
cmp
push
push
add
inc
mov
enter
pop
lods
jns
std
sbb
out
fnstsw
fidiv
jecxz
mov
mov
or
xor
mov
clc
jb
jmp
mov
pop
adc
rcr
in
shl
push
std
sti
mov
or
imul
push
sub
fldenv
jae
mov
adc
dec
ins
pop
cmp
cmp
cmp
xchg
fs
loop
repnz
stos
test
cs
(bad)
sub
pop
and
scas
and
mov
add
lods
sub
mov
adc
out
push
pushf
mov
neg
dec
xchg
inc
xchg
imul
or
enter
mov
cld
xlat
add
idiv
fcmove
jo
popf
mov
setnp
out
pop
sub
add
adc
mov
jo
cmps
loopne
xchg
push
cmp
ret
add
mov
test
push
sbb
jo
jae
fidivr
mov
mov
jmp
into
jae
loop
push
and
xor
jae
(bad)
pop
fist
test
outs
pop
adc
cmps
call
int
mov
fs
mov
mov
jns
les
push
je
in
inc
cs
adc
cdq
scas
mov
inc
ins
push
sahf
mov
hlt
inc
(bad)
jne
mov
dec
sti
lea
adc
rol
ins
mov
jl
ins
jae
push
xchg
sub
lea
(bad)
mov
push
and
cmp
ffree
(bad)
or
mov
jmp
sub
inc
shl
loop
rol
jmp
ss
fisttp
add
adc
fsubr
or
xor
pop
out
pop
jp
bound
ficom
mov
movs
dec
add
jl
and
call
xchg
mov
outs
in
inc
bound
outs
mov
out
imul
call
xchg
xlat
loop
jge
adc
or
jns
pusha
adc
xor
adc
das
out
sahf
out
into
dec
add
or
cdq
ins
xchg
loope
push
mov
loopne
mov
stos
pop
rcl
jmp
test
add
leave
push
jmp
mov
add
and
fsub
(bad)
int3
outs
add
inc
ror
jl
add
es
rcl
adc
or
call
dec
ss
push
xchg
(bad)
cmp
jecxz
loop
call
addr16
in
xor
inc
mov
jmp
adc
jg
push
xchg
or
adc
sar
mov
retf
and
addr16
xchg
out
in
xchg
jb
in
sbb
adc
call
out
and
mov
push
xchg
mov
add
push
jne
(bad)
ins
sbb
movs
jne
test
push
lods
jl
xchg
scas
sti
out
add
aam
add
dec
push
cld
test
sbb
in
mov
pop
popf
inc
cmp
inc
jmp
cmps
pop
cmp
cmp
aad
adc
int3
jp
out
movs
cmp
sahf
adc
fiadd
fcmovu
or
daa
gs
sbb
mov
scas
adc
jns
jno
fadd
push
push
cmp
cwde
(bad)
retf
das
arpl
ret
call
jp
cmps
inc
dec
lea
das
in
lods
mov
pop
dec
shr
daa
retf
cmps
adc
imul
inc
cld
xor
fiadd
or
in
stos
add
fld
xchg
inc
(bad)
out
int
xchg
adc
push
in
(bad)
out
rol
ret
cmps
in
xchg
mov
sbb
cmp
jae
inc
cmc
xor
and
dec
retf
pop
dec
lahf
pop
nop
jno
repnz
push
icebp
pop
dec
pop
push
ret
adc
jl
sbb
push
and
not
xor
mov
push
in
into
dec
push
int3
add
out
(bad)
cmp
sub
in
mov
xchg
out
cmp
xchg
aam
clc
ins
jmp
xor
ja
add
outs
jnp
add
push
mov
not
aaa
push
add
sbb
sbb
les
cmps
mov
ins
cmp
outs
cli
xchg
add
cdq
ds
xor
les
stos
mov
nop
je
fisub
mov
dec
pop
popa
pushf
ss
jge
push
add
dec
pop
mov
rol
dec
mov
xchg
(bad)
scas
pop
mov
mov
cmp
push
xlat
jb
cmp
xor
pop
call
cs
sahf
and
lock
inc
xchg
push
outs
hlt
stos
(bad)
ja
xor
lods
retf
aad
add
xchg
pop
xor
or
aaa
out
loop
les
adc
enter
in
loopne
hlt
and
push
outs
imul
push
js
mov
adc
jmp
mov
mov
int3
xchg
mov
push
mov
daa
popf
cwde
jecxz
mov
outs
inc
xchg
(bad)
sbb
leave
cmp
sbb
cmp
inc
add
pop
mov
inc
or
aad
jbe
lods
or
cwde
lea
retf
lock
lods
and
pop
push
into
pop
mov
rol
push
ds
(bad)
lds
cmp
daa
jmp
or
jle
add
dec
repz
jae
or
retf
dec
sbb
je
mov
xor
clc
(bad)
(bad)
call
jle
jae
hlt
sub
aam
sbb
sub
inc
retf
js
mov
cmp
xor
addr16
pop
(bad)
hlt
push
push
dec
jp
xor
fnstsw
cmp
shl
ss
cs
rcl
in
ss
dec
hlt
(bad)
mov
and
fdiv
push
sub
jmp
jg
jmp
hlt
(bad)
lahf
sub
loopne
push
mov
mov
(bad)
xchg
js
test
xchg
and
movs
dec
nop
fild
(bad)
(bad)
ins
mov
mov
outs
cwde
sub
push
or
repz
xchg
jo
ficom
(bad)
movs
scas
dec
cld
data16
in
jns
xor
push
cmp
mov
(bad)
rcr
arpl
repz
fucomi
or
xlat
inc
or
add
leave
ins
jp
mov
repz
lods
or
inc
scas
(bad)
pop
loopne
pop
jge
mov
and
es
jecxz
dec
adc
repnz
pop
cmp
and
and
xor
mov
pop
pop
sbb
add
inc
xor
pop
inc
mov
pushf
sub
lahf
mov
jle
cmps
mov
mov
cmps
push
movs
jmp
gs
outs
push
inc
adc
inc
dec
xor
or
inc
adc
add
xor
push
je
not
mov
sbb
mov
add
aad
loop
and
sub
dec
repz
ins
ja
xchg
sbb
pushf
lea
xchg
xchg
adc
and
out
lods
cmp
inc
mov
scas
data16
cmp
pop
pop
inc
and
clc
inc
psubsb
mov
mov
test
lock
outs
mov
cmovle
mov
or
call
dec
retf
push
add
js
fwait
sbb
lods
lods
mov
sbb
cmp
jl
mov
aad
xor
add
dec
sbb
add
dec
or
inc
jb
xchg
pop
mov
add
xchg
das
bound
es
pop
jmp
xchg
pop
xchg
bound
jmp
sti
in
cmps
fdivr
push
sar
retf
dec
sbb
jno
(bad)
xor
mov
inc
movs
xchg
hlt
lods
or
push
bound
xchg
jle
inc
ds
and
xchg
or
dec
sbb
or
sbb
xchg
xor
mov
mov
add
out
or
test
aaa
xor
add
bnd
daa
sub
mov
movs
xchg
lea
das
mov
inc
aaa
mov
fistp
jne
int
(bad)
xor
mov
inc
xchg
inc
jmp
loope
not
lds
adc
scas
scas
stos
xor
jb
in
pop
adc
into
sbb
sub
dec
ret
push
test
mul
addr16
adc
add
scas
ror
rcl
lods
cmp
call
std
dec
(bad)
dec
aad
pop
push
fwait
xchg
stos
pushf
(bad)
bound
pop
inc
xor
popf
add
pop
stos
sub
hlt
pop
ja
or
push
sub
lods
pop
das
push
cmp
imul
jnp
ins
in
mov
fwait
loop
imul
jle
sub
jmp
pop
dec
mov
xchg
rcr
leave
cwde
jecxz
jae
stc
fcomp
and
push
fsubr
xchg
call
aad
push
adc
sub
int3
mov
mov
fs
mov
pop
int3
inc
mov
sbb
fld
mov
rcl
mov
test
hlt
out
gs
mov
mov
mov
cmp
test
lds
out
shl
call
lock
adc
xlat
cwde
xor
sbb
jno
out
icebp
push
cld
int3
sahf
or
dec
pop
movs
ds
pop
pop
in
shl
jge
sbb
dec
retf
aaa
adc
std
aam
mov
xchg
add
mov
jmp
and
and
sbb
enter
adc
ret
aam
sahf
outs
addr16
mov
test
stos
scas
push
in
leave
cmps
cmp
das
call
jmp
es
(bad)
int3
loop
add
(bad)
out
bound
xchg
jbe
push
mov
inc
out
cmp
lahf
push
test
ins
jl
retf
mov
pop
adc
loope
dec
xchg
cmp
add
and
inc
inc
popa
mov
jmp
sub
test
iret
push
scas
push
das
enter
cmps
data16
jge
pusha
stos
add
inc
loope
aad
pop
(bad)
(bad)
adc
fdiv
int
xor
jge
out
xchg
je
or
mov
movs
rol
cmp
mov
adc
cwde
outs
cmp
inc
ret
ss
gs
sub
xchg
jmp
int3
adc
xchg
xchg
jp
das
pusha
or
(bad)
fwait
sahf
or
imul
rcl
fdiv
pop
push
mov
and
adc
das
out
sub
cdq
fwait
cs
and
and
adc
xor
fwait
popa
adc
retf
into
mov
push
hlt
inc
in
leave
or
iret
out
push
call
push
push
sbb
mov
mov
int3
ins
mul
dec
and
and
fstp
pop
mov
pop
sub
cmp
push
jmp
jnp
mov
jae
push
and
int3
pop
stc
or
ja
movs
popa
dec
xchg
xchg
push
scas
outs
scas
pop
cmps
xchg
in
pop
add
sar
lock
lock
ins
push
and
pop
pop
or
out
pushf
mov
add
test
aaa
enter
jne
jle
jg
xor
dec
push
jbe
movs
push
mov
call
punpckhbw
pop
jns
fwait
push
movs
lahf
jg
lods
inc
pusha
lar
xor
in
jle
pop
mov
jecxz
(bad)
out
mov
adc
xchg
push
push
aad
sub
rcl
outs
(bad)
mov
out
adc
lds
(bad)
and
outs
loopne
jo
test
jl
test
ins
ja
sub
xchg
jae
retf
test
cmp
sbb
xchg
pop
pop
stc
dec
pop
aas
jbe
push
aaa
mov
adc
xchg
xor
sbb
les
cmps
jmp
(bad)
mov
mov
int3
call
and
dec
mov
or
sar
or
push
add
add
add
in
pusha
fadd
cmps
(bad)
fdiv
ss
sub
push
sub
dec
mov
sbb
mov
or
ror
lds
ds
cld
xchg
call
out
sbb
aam
sbb
dec
cmp
sahf
(bad)
push
shl
test
mov
adc
cs
mov
mov
inc
inc
aas
out
daa
sbb
lds
cmps
ins
dec
and
mov
mov
xchg
cdq
popa
add
mov
pop
and
aam
ds
aad
cmp
mov
in
mul
adc
xchg
mov
aam
mov
out
mov
xchg
lahf
pop
jbe
push
cmp
cmp
mov
xor
or
pop
ins
cmp
mov
inc
mov
push
or
call
xor
dec
or
and
stos
cmp
mov
xor
bswap
jbe
pop
mov
mov
mov
lock
mov
in
retf
sbb
mov
scas
mov
ret
test
xchg
mul
cmp
daa
hlt
out
sub
(bad)
dec
aam
fadd
rcl
ret
das
and
lock
lods
lods
in
shl
gs
retf
inc
push
dec
test
pushf
or
cmp
imul
mov
and
dec
sti
imul
repz
lock
and
stc
ror
xchg
in
int
inc
dec
lock
sti
and
lock
inc
xor
mov
les
inc
outs
dec
fst
pop
inc
cmp
adc
cld
arpl
push
jl
adc
mov
jl
jb
repz
xlat
fsubr
sbb
jae
jmp
adc
iret
fbld
or
loop
mov
mov
bnd
sub
daa
fimul
jo
mov
xchg
addr16
lahf
mov
or
and
sub
loopne
mov
mov
fldenv
sar
popf
ins
xchg
xchg
inc
fdivr
lods
inc
(bad)
mov
jge
mov
mov
inc
out
or
and
add
ss
cmps
jb
lods
shr
call
sub
xchg
sbb
fisttp
pop
pushf
stos
nop
arpl
ret
fild
cmp
pushf
fidivr
jmp
adc
cs
jnp
inc
mov
test
call
push
scas
sub
ss
adc
dec
mov
fdivrp
inc
inc
mov
fbstp
push
mov
sbb
ins
jmp
mov
cli
test
aaa
push
stos
fisubr
outs
repz
pusha
rol
sar
imul
jp
jp
sbb
into
pusha
add
adc
mov
cs
mov
mov
ins
xor
dec
xor
movs
(bad)
fdivr
mov
jecxz
in
dec
cmp
push
jnp
adc
mov
mov
aam
in
and
xor
xor
and
mov
dec
lea
out
aam
jg
mov
mov
push
mov
add
loop
(bad)
jg
out
add
mov
call
addr16
pop
sbb
test
add
lock
les
sub
inc
ja
ja
inc
ret
mov
push
push
imul
inc
push
bound
pop
and
rcl
add
mov
cmps
dec
cmp
mov
jns
add
push
adc
aam
xor
add
inc
in
jno
dec
adc
xor
xchg
jnp
pusha
rcr
push
test
arpl
es
test
adc
leave
mov
jmp
sbb
aad
jg
call
xchg
jge
nop
(bad)
icebp
mov
rol
dec
retf
in
test
mov
div
xor
pushf
imul
inc
out
inc
mov
fdivp
xchg
and
mov
dec
mov
sub
mov
mov
adc
gs
or
jmp
xlat
std
call
sbb
rcr
mov
push
inc
rcr
pop
cld
fst
nop
mov
movs
aam
xlat
jne
xchg
(bad)
pause
std
bound
cdq
and
jmp
cmp
in
lds
cmps
add
ins
dec
xchg
jmp
call
into
mov
fnsave
test
test
dec
push
pop
pushf
adc
xor
xor
jle
dec
fcomp
pop
cmp
fwait
pop
sbb
or
jle
pop
add
xchg
jb
jge
icebp
hlt
ja
in
mov
pop
mov
stos
lock
in
popa
rol
bound
repz
fcomip
fbstp
mov
mov
cli
ds
push
in
(bad)
xchg
repz
lea
inc
push
in
jmp
mov
pop
jne
retw
dec
hlt
sbb
and
enter
and
lea
mov
aas
stc
mov
xchg
jmp
stos
inc
and
test
test
nop
jp
jne
sti
sub
cwde
cvtdq2ps
shr
cmp
lods
mov
leave
and
mov
in
dec
sbb
fdivr
cmp
sbb
or
fwait
(bad)
std
jl
and
fst
or
mov
sti
dec
fidivr
cmps
cmp
aas
(bad)
in
or
outs
pop
bound
in
mov
mov
scas
mov
movs
rol
imul
adc
jmp
xchg
jp
loope
mov
shl
jmp
imul
or
bound
lahf
ja
movs
int
mov
inc
sahf
adc
add
sub
add
push
in
fmul
xor
jmp
xchg
test
cmp
aaa
mov
xchg
neg
movs
(bad)
bound
push
sbb
inc
outs
je
mov
(bad)
nop
xor
dec
cmps
mov
fwait
mov
xor
fcom
popa
movs
ss
inc
int3
leave
movs
cs
or
cdq
sub
clc
fcomp
ret
push
pop
add
out
mov
mov
fistp
mov
shl
cmp
xor
and
pushf
mov
std
xchg
xlat
xor
test
fisttp
pop
dec
fmul
inc
outs
dec
enter
out
test
mov
int3
out
ja
das
frstor
enter
mov
retf
into
imul
out
lea
out
mov
out
daa
icebp
cmp
jge
std
adc
or
(bad)
xchg
gs
fstp
jl
push
cmp
lock
cli
retf
add
mov
push
(bad)
stos
jns
push
sbb
push
jmp
sbb
push
xor
loope
aad
out
push
jb
inc
mov
lock
pop
ja
in
clc
outs
shr
movs
test
mov
into
inc
cmc
mov
mov
mov
fimul
ret
xor
mov
bound
add
cmp
rol
xor
out
or
outs
sbb
push
pop
push
aaa
mov
cmp
fnstsw
mov
popf
mov
scas
inc
xor
(bad)
mov
pop
sti
mov
std
push
jo
stc
scas
jnp
in
mov
and
icebp
jae
lea
jecxz
scas
stos
jns
jo
imul
fisubr
pop
add
adc
mov
add
pop
dec
jg
sub
aaa
fmul
pop
stos
(bad)
popf
fwait
dec
add
cmp
sbb
rcr
sub
jno
je
loope
lahf
dec
ja
inc
jl
sbb
mov
sbb
push
xchg
sbb
out
outs
push
xor
into
cmp
lock
mov
test
out
jl
dec
aad
push
lahf
sbb
sbb
mov
loope
sub
stc
cmc
adc
sti
je
ret
jne
push
jns
pushf
inc
fdivr
repnz
test
mov
or
shr
and
xchg
jp
jno
ss
stos
cmp
and
push
cmp
xchg
pop
mov
mov
xor
ins
mov
sub
jle
mov
sbb
mov
inc
pop
push
adc
sbb
push
sbb
hlt
nop
lds
or
popf
xor
cmp
sbb
inc
mov
sbb
call
stos
test
add
leave
jecxz
adc
sbb
mov
push
mov
dec
out
retf
add
addr16
je
dec
adc
sahf
dec
movs
xchg
xor
aaa
pcmpgtb
adc
shl
jns
(bad)
lahf
inc
pop
push
shl
scas
in
fsubrp
jo
ja
js
leave
add
nop
loope
mov
mov
push
adc
inc
mov
mov
clc
dec
retf
pop
xor
ins
retf
inc
cmp
mov
pop
fiadd
int3
mov
push
cmp
push
out
add
loop
enter
out
in
test
cmp
outs
ret
add
icebp
cwde
push
sbb
add
sub
mov
shr
dec
mov
mov
cdq
daa
test
push
and
pop
cmp
or
mov
bound
jecxz
push
mov
aas
adc
sub
xchg
cmp
mov
lds
(bad)
and
nop
inc
mov
imul
sahf
test
adc
das
sar
xchg
adc
jmp
loope
push
cmps
sbb
dec
jmp
fild
sub
jmp
inc
cmp
add
pop
xor
mov
loope
ins
sti
mov
push
or
jge
jle
cli
dec
out
xchg
neg
loop
pushf
xchg
(bad)
aam
call
les
cmp
clc
shl
dec
jnp
dec
jl
dec
adc
ss
test
cmp
lds
gs
int
lea
stos
sbb
dec
xchg
jle
bound
loopne
mov
(bad)
fs
or
push
add
sbb
popf
mov
mov
xchg
lods
nop
xchg
call
mov
loop
mov
and
and
or
inc
inc
xchg
xor
gs
xchg
data16
cmp
inc
popf
push
xor
xor
lds
xchg
mov
push
and
enter
js
add
(bad)
jnp
mov
nop
(bad)
in
scas
jecxz
inc
fmul
icebp
mov
cmps
inc
push
xor
shl
pop
(bad)
hlt
push
andps
fcomi
mov
dec
aad
push
add
push
cmps
dec
add
jecxz
sub
mov
xchg
cmp
or
cs
jecxz
mov
pushf
adc
xchg
outs
les
stos
and
pop
jmp
mov
loop
or
out
or
or
mov
push
or
cmp
or
jo
dec
js
xchg
dec
mov
jge
mov
jl
push
pop
jmp
mov
mov
jmp
pop
fwait
sbb
shr
mov
jbe
pop
adc
or
and
stos
jbe
mov
cdq
movs
sub
sbb
es
scas
xchg
bound
addr16
mov
or
dec
pop
xor
lods
xor
xor
call
sbb
cmp
nop
xchg
cmp
xchg
jnp
mov
mov
push
adc
mov
sahf
push
push
mov
ret
(bad)
jae
mov
sub
mov
xchg
cld
xor
(bad)
scas
jp
aam
xor
ja
imul
je
stc
jge
fst
mov
add
test
jl
cmp
cwde
in
mov
add
xchg
add
jp
mov
les
jnp
scas
adc
cmp
fs
in
aas
mov
and
inc
mov
inc
pop
loope
test
push
mov
cmps
repz
dec
adc
sub
mov
dec
pop
inc
and
dec
int3
inc
daa
lods
or
imul
jns
aas
inc
lock
and
shr
jle
cdq
mov
mov
sub
cld
not
xchg
mov
outs
and
lock
mov
sbb
cs
out
addr16
adc
or
xchg
mov
sub
pop
movs
shl
scas
push
ror
dec
and
addr16
daa
jge
std
or
mov
out
neg
dec
push
ins
xchg
ret
shr
gs
pop
sar
shl
scas
daa
cmovs
ret
test
sub
dec
sub
sub
push
xor
(bad)
aad
inc
xchg
pop
jb
outs
addr16
call
and
out
fcmove
stos
pop
adc
out
pop
shr
push
mov
push
and
mov
xchg
aad
inc
fmul
shr
push
enter
jp
inc
aad
adc
dec
(bad)
call
cmp
rcl
ja
jb
inc
inc
es
pop
cmp
and
(bad)
retf
mov
(bad)
dec
mov
jmp
adc
push
scas
jl
mov
add
dec
dec
dec
loop
das
add
pusha
cmps
sbb
inc
fucom
mov
cmp
cmps
push
scas
into
clc
call
into
and
out
aad
pop
call
loope
loopne
mov
sbb
popf
push
iret
jp
xchg
pop
add
out
icebp
push
cs
add
mov
imul
ret
stos
sbb
jno
xor
cwde
cmp
jb
dec
mov
sub
push
das
mov
shr
lahf
gs
int
lahf
jecxz
imul
xlat
out
(bad)
retf
std
call
jmp
das
add
hlt
pop
movs
inc
stos
je
je
std
mov
stos
xlat
push
(bad)
xchg
xchg
or
dec
inc
mov
mov
sbb
push
cmp
(bad)
sub
je
data16
add
jge
dec
jle
or
sbb
inc
pusha
pop
add
or
icebp
scas
mov
mov
sbb
sub
or
hlt
push
vmovq
xor
cmc
adc
fwait
loopne
xchg
mov
add
mov
inc
or
or
pusha
cwde
test
inc
es
cmp
test
or
mov
pop
xor
mov
or
pop
enter
dec
push
fs
dec
xchg
bound
in
mov
ins
push
popa
mov
cdq
gs
gs
stc
rcl
xchg
pop
out
ret
pushf
cmp
out
mov
and
sti
dec
push
gs
fcmovb
push
(bad)
(bad)
adc
sbb
loope
add
jmp
ins
cli
sub
ins
call
arpl
in
inc
cmp
iret
dec
pop
movs
xlat
ret
mov
fwait
mov
(bad)
je
pop
pusha
out
js
jbe
or
ret
lds
cdq
or
das
jnp
lods
test
push
test
xor
(bad)
jns
arpl
dec
mov
xchg
shr
int
pop
arpl
icebp
dec
fucomp
jbe
std
movs
mov
mov
les
sbb
sub
into
jl
jb
mov
xchg
mov
stos
ret
movs
out
std
daa
inc
or
out
pop
fwait
pop
imul
mov
js
ret
mov
iret
(bad)
inc
sbb
adc
mov
clc
pop
inc
in
fsubr
push
cmp
fild
mov
pop
xor
mov
rcl
inc
pop
push
cmps
loope
sub
scas
pop
sbb
stc
dec
test
xchg
jmp
cmps
fiadd
sub
sub
push
jl
or
sbb
mov
adc
(bad)
jecxz
or
sub
mov
mov
inc
fwait
pop
(bad)
das
stos
and
mov
push
jns
mov
cli
in
js
ds
aam
pop
in
cs
jno
cmp
jo
add
pop
push
xchg
lds
les
mov
inc
dec
sahf
fsubr
inc
scas
adc
std
push
call
mov
pop
retf
add
mov
lock
add
cmp
jle
sbb
std
inc
sbb
jl
sar
and
dec
fisub
arpl
ja
scas
repnz
pop
pop
sub
fst
pop
mov
int3
push
ror
pop
xchg
xor
lods
(bad)
mov
sti
mov
sub
(bad)
(bad)
pop
loopne
data16
xor
mov
cmp
sahf
call
lods
and
xchg
dec
pop
and
push
mov
add
retf
retf
test
popf
in
scas
cmps
out
or
mov
loopne
jmp
mov
or
dec
aaa
sahf
rol
inc
jp
fld
in
jg
punpcklbw
ss
sbb
fcmovnu
pop
mov
ret
xor
sub
xchg
adc
hlt
add
xor
icebp
pop
das
sbb
fild
scas
push
xchg
fnstsw
ror
outs
lods
into
cmp
xchg
mov
cmp
cdq
cmps
jp
popf
mov
cld
(bad)
mov
mov
xchg
mov
push
or
dec
retf
ins
fsubr
pop
mov
jbe
fwait
movs
sbb
aas
aas
in
sbb
inc
mov
retf
xchg
out
ja
out
(bad)
sub
mov
(bad)
loopne
xchg
(bad)
das
and
out
xlat
mov
mov
lods
cmp
or
dec
retf
or
leave
inc
sbb
mov
push
mov
xchg
jmp
jne
mov
mov
sbb
mov
and
js
ins
add
ja
mov
jg
js
(bad)
sub
imul
cmp
sub
arpl
sbb
mov
mov
leave
xor
shl
test
fstp
lds
push
jmp
shl
loopne
adc
rol
ror
dec
ret
dec
vpcmov
fs
lahf
(bad)
test
sbb
jle
cmps
push
inc
arpl
rcr
jb
dec
repz
ins
push
xchg
sar
add
inc
ins
sti
fld
loop
pusha
push
pop
les
sbb
and
mov
jmp
inc
stc
pop
xchg
sub
pop
mov
fcomp
(bad)
sub
movs
fld
xchg
xlat
fst
addr16
inc
(bad)
cld
in
xchg
stos
and
and
mov
sub
loopne
stc
xor
fsubr
retf
jbe
ins
jl
retf
sub
out
in
(bad)
std
and
inc
cmp
fcmovb
pop
scas
jno
mov
adc
mov
cmps
inc
scas
add
sub
mov
sub
cld
out
mov
adc
and
test
inc
cs
fmul
jnp
loopne
xlat
or
mov
pop
pop
jmp
sbb
xor
retf
pop
and
mov
mov
ins
inc
imul
and
add
(bad)
fisubr
dec
cmp
pop
jo
mov
or
mov
xor
call
dec
(bad)
or
(bad)
sbb
idiv
inc
sbb
sahf
mov
pop
jo
sbb
jl
add
push
pop
(bad)
jg
ins
add
ds
pop
outs
push
cli
addr16
outs
rol
icebp
lea
xor
mov
adc
adc
cs
sti
fwait
ret
push
(bad)
(bad)
jle
(bad)
xchg
sahf
or
iret
leave
out
sub
jmp
pop
pop
jno
inc
je
int
rcl
sub
iret
mov
in
jae
ins
add
mov
add
stos
cmp
int
pop
mov
enter
jb
mov
sub
pop
jb
(bad)
lock
hlt
mov
dec
mov
xchg
icebp
in
cld
pop
jne
mov
add
xchg
or
and
mov
xchg
nop
bnd
cmp
div
push
aaa
jbe
clc
push
mov
jo
xor
inc
aas
test
std
mov
push
enter
scas
mov
adc
nop
fs
mov
pop
jge
pop
enter
mov
cwde
sbb
inc
add
mov
sub
inc
jp
test
xlat
cmp
icebp
mov
inc
outs
out
dec
dec
xchg
xor
jecxz
mov
dec
cdq
and
out
dec
mov
xor
in
xor
jno
push
pop
es
inc
daa
cli
repz
push
or
sub
frstor
fmul
xchg
call
out
pop
push
lods
(bad)
imul
or
push
xor
pop
or
data16
mov
adc
sahf
mov
aas
fbld
sbb
into
dec
jb
cmps
jbe
outs
and
inc
push
sub
and
sahf
aaa
push
aaa
lea
sbb
add
cmps
mov
adc
jb
add
test
inc
call
iret
cmp
jbe
push
mov
mov
sbb
mov
aam
out
xchg
popa
aam
scas
jae
loope
(bad)
fmul
xor
sbb
(bad)
jge
and
stos
movs
push
cmp
and
mov
add
sbb
and
fs
cli
mov
rcl
test
jmp
or
xor
and
js
adc
xlat
fistp
push
add
ds
mov
sti
imul
xor
mov
mov
sbb
ret
inc
int3
fnstsw
sbb
jp
pushf
(bad)
mov
les
or
jge
bnd
xchg
sbb
push
xor
push
cmp
inc
mov
popa
add
push
stc
retf
cmp
jbe
sub
in
test
jne
push
mov
bound
inc
or
fld
daa
xor
in
mov
mov
xor
push
and
ficomp
fisub
add
fimul
mov
pop
push
test
lahf
pushf
xchg
inc
dec
mov
sub
ins
test
dec
mov
or
inc
pop
outs
xor
pop
out
and
xor
xor
dec
jecxz
jne
mov
bound
pop
or
dec
div
adc
dec
aad
cmps
popf
jno
ja
xchg
into
setl
fstp
(bad)
adc
lea
lea
cmp
mov
jne
xor
frstor
pop
or
and
movs
sub
jbe
je
rol
enter
cmp
inc
cmp
mov
(bad)
es
cs
aas
addr16
in
jp
fimul
iret
es
push
arpl
mov
mov
ins
pop
xchg
aad
gs
call
icebp
out
js
mov
adc
cmp
repz
fdiv
popa
add
inc
outs
ins
pushf
jno
pop
in
pop
ror
pusha
jae
jb
push
sahf
mov
inc
lds
rcr
xchg
out
fild
nop
jmp
or
fidiv
xor
dec
scas
(bad)
cmp
push
mov
cmps
adc
test
sub
jecxz
(bad)
jmp
rcl
outs
mov
bound
jmp
rcr
test
push
push
jecxz
retf
cdq
xchg
and
and
jo
xchg
scas
cmp
sbb
rcr
mov
xchg
outs
push
jae
jmp
ret
js
test
call
out
xchg
jnp
push
cs
or
push
fdiv
out
pop
repnz
and
mov
push
add
jns
mov
sub
fyl2x
mov
int3
mov
lods
mov
add
fimul
mov
loope
inc
cld
xlat
das
pop
jmp
inc
std
in
out
cwde
(bad)
jge
jle
and
xchg
add
sub
mov
push
cmp
das
addr16
into
pop
imul
aaa
retf
data16
leave
sbb
dec
rcl
cmps
aas
jb
sar
jmp
(bad)
pop
lods
inc
ss
sub
popf
movs
div
sub
popa
dec
adc
hlt
push
jne
and
sub
cmp
mov
sar
ret
xor
cwde
xor
adc
push
add
xchg
rol
daa
sbb
jecxz
int3
xchg
xchg
adc
jecxz
pop
and
xchg
and
call
test
(bad)
imul
cmp
iret
aam
jecxz
je
push
mov
enter
inc
aam
or
inc
xchg
push
inc
dec
jo
xchg
mov
adc
push
add
jno
stos
shr
jecxz
sahf
ror
jne
cwde
xlat
out
fcomp
shl
mov
pop
ror
sahf
xlat
adc
dec
out
mov
outs
add
push
js
sub
jp
repz
div
stos
(bad)
shr
push
push
je
scas
cli
test
fadd
push
out
js
stc
cmp
out
out
push
fs
(bad)
data16
mov
cdq
cmp
out
mov
mov
adc
retf
and
xlat
(bad)
cdq
stos
jo
fdivr
mov
neg
or
add
pop
stos
fistp
loop
cmp
cmp
icebp
cmp
bswap
adc
lea
arpl
jo
test
pop
mov
mul
jmp
loopne
(bad)
sbb
jb
test
mov
scas
lods
lods
je
mov
push
outs
in
xor
jmp
movs
add
mov
je
sbb
in
pop
rcl
pop
arpl
(bad)
in
rcl
xor
sub
pop
in
in
icebp
xor
sub
cmps
sub
jmp
ja
push
or
xchg
test
addr16
(bad)
call
cld
arpl
das
jl
in
int
sar
xchg
dec
aam
test
cmp
lods
mul
into
xor
out
mov
retf
and
inc
arpl
jmp
fnstsw
inc
hlt
icebp
mov
add
jbe
jge
jo
cmp
xor
sbb
and
xlat
loopne
(bad)
cwde
xor
jns
add
ss
es
aas
push
out
inc
or
cmps
xor
es
test
inc
jp
fistp
pop
adc
cwde
xor
iret
psubq
xchg
jle
inc
dec
cmp
inc
inc
mov
push
cmps
add
and
nop
or
mov
les
jb
(bad)
add
xchg
mov
xchg
adc
jno
sti
test
fcom
mov
mov
dec
add
(bad)
or
fistp
dec
scas
rol
mov
add
or
sahf
test
cmp
sar
lods
mov
xchg
sbb
icebp
mov
ja
sbb
test
(bad)
mov
cs
scas
fst
loope
xchg
fld
sbb
mov
repz
xlat
mov
jmp
std
icebp
or
and
sbb
nop
sbb
daa
stos
sub
mov
inc
das
jo
fidivr
je
lods
jno
sbb
sbb
loop
dec
mov
inc
ins
daa
xchg
out
ins
dec
inc
jmp
dec
mov
mov
sub
ins
mov
cmc
popf
push
pop
xchg
cdq
push
pop
test
adc
jmp
sar
fs
push
cmp
mov
ficomp
inc
mov
fcomp
xchg
cdq
dec
mov
ficom
jmp
cmc
sbb
mov
inc
sbb
adc
pop
mov
out
jmp
aad
ins
arpl
mov
rcr
and
das
out
mov
popa
sub
and
add
and
in
mov
loop
rol
xor
ins
addr16
cmps
xor
push
push
mov
aas
sub
in
movs
test
and
retf
mov
out
aas
nop
popf
pop
jmp
cwde
and
hlt
dec
dec
(bad)
push
repz
div
xlat
das
outs
pop
cmp
mov
adc
je
xchg
ds
xor
mov
sti
inc
(bad)
aaa
jg
dec
jbe
ret
std
cli
mov
mov
mov
lods
mov
int
mov
inc
cmp
sbb
add
call
cmp
cmc
fwait
lds
sub
lock
jp
(bad)
fldenv
(bad)
sub
in
mov
push
lods
inc
mov
pop
cdq
and
sti
clc
out
repz
jl
sub
(bad)
ss
pop
rcr
js
shl
or
lahf
(bad)
ret
(bad)
mov
jge
xchg
push
pop
jmp
daa
xor
mov
xor
and
xchg
mov
mov
(bad)
pop
loopne
pop
add
pop
sub
mov
pop
sti
jnp
mov
or
pop
cmps
adc
sbb
sub
lods
sbb
xchg
std
add
xchg
cmc
sub
xor
pop
(bad)
in
mov
sbb
in
leave
sub
dec
(bad)
aas
(bad)
and
dec
dec
adc
hlt
shl
xchg
lock
sbb
fdivr
and
repz
mov
inc
rcl
cwde
pop
sti
cmps
push
int3
cdq
push
popa
jns
(bad)
push
dec
mov
xchg
ds
pop
pop
jo
mov
sub
adc
fcom
xor
push
in
ins
out
xor
mov
push
inc
add
scas
mov
pusha
mov
inc
clc
fs
inc
add
cmp
bound
in
adc
sbb
(bad)
aaa
adc
jmp
sub
pop
jnp
fcom
xchg
add
gs
adc
shr
mov
(bad)
cmp
or
lds
mov
rcl
jmp
inc
sbb
hlt
mov
jno
shr
aad
aas
dec
outs
sbb
mov
jp
mov
std
les
mov
bound
jg
ss
lahf
mov
inc
fstp
pop
gs
mov
daa
inc
jle
push
sub
test
jmp
xchg
mov
mov
mov
clc
out
loop
inc
sbb
xchg
sbb
ret
ss
inc
es
or
imul
retf
cld
pop
xchg
sub
pop
add
clc
retf
cmps
jecxz
or
and
ja
das
mov
add
add
or
retf
cli
ins
dec
loop
push
push
adc
dec
jp
push
mov
inc
scas
mov
stos
jnp
adc
popf
mov
fiadd
cdq
add
sbb
enter
lods
sub
adc
out
out
adc
pushf
or
pop
cmp
shl
iret
push
add
add
sahf
xor
dec
push
xor
push
(bad)
pop
or
mov
(bad)
imul
jecxz
cmps
adc
add
add
sbb
lahf
jg
lods
stos
xlat
push
ror
ins
inc
mov
xor
repnz
jle
ss
les
mov
xor
cli
xchg
inc
fs
push
fnsetpm(287
test
sub
and
cmp
repnz
retf
repnz
mov
pop
push
pop
bound
jae
push
retf
mov
stc
shr
pop
std
mov
rcl
jmp
xor
mov
sub
jbe
shl
ins
cdq
fidiv
pop
cmovge
cli
xlat
sub
sbb
cmp
lock
pop
int
dec
adc
fnstenv
jmp
div
mov
(bad)
xor
ror
xchg
mov
out
adc
sub
(bad)
adc
mov
and
jb
jmp
in
enter
mov
add
ins
ret
xchg
retf
ss
mov
repz
mov
and
inc
arpl
add
mov
cs
test
iret
bound
pop
pop
aaa
and
mov
push
imul
imul
in
imul
into
xor
lea
inc
fwait
jmp
lods
inc
cmps
int
jp
mov
popf
es
out
fcomp
(bad)
mov
loopne
dec
xchg
cmps
movs
inc
xor
jecxz
imul
cmp
cmp
push
jmp
cmps
cld
xchg
mov
dec
dec
sahf
int
mov
pop
mov
cwde
mov
out
ror
jns
dec
xor
mov
iret
scas
xchg
loope
std
pop
jno
xchg
iret
adc
and
push
push
mov
xchg
or
into
mov
aam
adc
out
sub
cmps
shl
js
ss
inc
cdq
movs
xchg
mov
inc
pop
cmp
aaa
jbe
popf
call
cs
leave
jbe
dec
add
mov
cli
mov
xadd
push
retf
mov
ja
(bad)
xchg
mov
or
cmp
or
mov
aad
push
out
xchg
sbb
ins
not
ins
pop
mov
shl
in
fwait
cwde
push
imul
ds
cmps
mov
xchg
jne
sbb
inc
lods
xchg
fisttp
lods
sub
and
je
shr
inc
jmp
mov
fidivr
ret
mov
mov
pop
in
ret
lahf
mov
mov
in
mov
pushf
sub
add
nop
nop
jae
mov
arpl
mov
pop
mov
jecxz
bound
push
mov
(bad)
aaa
cmps
lods
mov
pusha
lods
lock
in
sub
sahf
pop
out
in
imul
add
mov
and
daa
add
cwde
ret
cmp
xor
pop
in
xchg
jbe
nop
ja
xchg
pop
es
sbb
or
xlat
nop
in
cmps
mov
outs
out
(bad)
push
cld
call
in
sti
dec
js
mov
xchg
scas
out
test
push
daa
jecxz
aaa
sbb
sbb
mov
cli
nop
fdivr
sbb
outs
push
xchg
pop
push
sub
jmp
cli
jl
fcomp
xchg
xchg
div
scas
jns
les
xchg
(bad)
repnz
mov
jno
ja
and
or
xchg
push
imul
cld
rol
add
out
in
dec
add
and
sbb
or
pop
data16
cmp
popf
nop
lods
cmp
inc
cld
(bad)
push
retf
lods
mov
call
clc
sub
sub
in
cli
cs
push
adc
mov
push
inc
movs
sbb
ror
sti
cdq
outs
mov
mov
nop
adc
dec
test
push
cmc
jp
cdq
(bad)
int3
push
fidiv
popf
inc
sbb
jb
xor
aas
sub
stc
int3
mov
pop
retf
aad
test
into
sbb
test
and
fwait
in
cwde
push
imul
mov
(bad)
fwait
cmp
inc
mov
mov
fs
mov
sbb
sbb
in
jbe
(bad)
cmps
stos
mov
mov
push
mov
call
aam
out
mov
dec
dec
retf
mov
cmp
dec
sahf
ficomp
out
std
add
push
sbb
and
repnz
f2xm1
jl
shl
test
(bad)
scas
xor
out
and
push
or
mov
xlat
xchg
lods
outs
mov
mov
or
xor
ins
call
imul
mov
mov
or
loope
xor
sbb
fs
dec
enter
daa
(bad)
shl
mov
add
in
push
test
xor
push
mov
xor
mov
(bad)
pop
adc
xchg
mov
stc
sbb
push
dec
inc
ins
mov
in
or
(bad)
add
arpl
xor
(bad)
add
jecxz
cmps
mov
sbb
fild
cmc
sti
nop
shr
xor
xor
aas
inc
xchg
xchg
ficom
stos
and
pop
fimul
shl
je
loope
rcr
daa
in
push
fidiv
jg
pop
ficomp
in
xchg
pushf
jl
scas
out
aad
outs
sbb
out
inc
sbb
mov
cmp
dec
call
sub
xchg
and
stc
jno
dec
and
push
ja
call
imul
sub
mov
loop
push
dec
jmp
add
outs
mov
mov
inc
aas
(bad)
je
sub
xchg
adc
sub
lds
and
jmp
je
repz
add
mov
mov
jnp
push
push
push
jmp
mov
dec
repnz
adc
push
mov
cmp
hlt
rcr
lock
in
mov
fucomi
xchg
(bad)
cmp
push
sar
xchg
retf
xlat
mov
and
(bad)
scas
and
sub
cli
adc
fistp
adc
pusha
nop
push
cwde
xor
scas
addr16
push
out
pop
mov
mov
push
xchg
sbb
add
ret
ds
arpl
test
repz
xchg
int
mov
and
or
and
jb
xchg
push
cmps
hlt
jae
mov
push
setae
jg
fisubr
push
cmc
mov
int
xchg
gs
and
push
mov
fucomip
mov
aas
xor
mov
xchg
xchg
xchg
lods
mov
pop
sbb
(bad)
in
ficom
scas
sar
leave
ret
mov
and
mov
and
jns
inc
cli
fidiv
inc
aam
sahf
cmp
cmps
ret
mov
or
sbb
xlat
push
cwde
jg
sbb
and
fcmovu
test
arpl
pop
xchg
les
inc
add
aam
and
adc
call
cmp
jae
test
mov
lock
mov
pop
stos
xor
and
xchg
popa
es
in
pop
outs
mov
scas
xchg
xor
in
fidivr
test
inc
mov
aad
js
mov
sbb
(bad)
test
std
outs
dec
clc
sbb
add
push
pop
(bad)
xchg
sar
adc
ret
rcl
dec
ja
inc
bound
jne
dec
in
pop
out
jne
fucomi
xchg
dec
imul
or
mov
and
repz
xchg
outs
shl
ja
mov
dec
dec
or
mov
xor
cwde
pop
inc
fsubr
mov
es
adc
push
scas
fdivr
cmp
(bad)
mov
push
aad
and
sar
cmp
dec
push
nop
push
mov
pop
call
xcrypt-ecb
cmps
dec
add
mov
or
push
mov
xor
hlt
out
lock
mov
sbb
or
cmp
sub
ret
sub
(bad)
fild
in
jecxz
dec
dec
sub
clc
jecxz
adc
dec
adc
mov
bnd
push
jae
ret
lock
inc
stc
pop
mov
clc
imul
cwde
dec
in
sbb
iret
mov
mov
push
mov
in
and
cmc
and
cmp
add
xor
adc
adc
add
mov
aam
cmps
push
retf
or
clc
adc
fsub
(bad)
mov
imul
add
dec
pushf
ror
stc
jecxz
jne
xor
sbb
cli
and
in
xchg
mov
jno
inc
(bad)
jg
or
mov
pop
jo
imul
fld
sbb
aad
inc
push
add
lods
pop
or
(bad)
mov
and
(bad)
ror
aas
mov
mov
push
mov
sbb
retf
push
shl
(bad)
mov
in
and
nop
addr16
fidiv
xor
xchg
cmp
test
mov
mov
inc
inc
mov
push
sar
mov
inc
dec
lea
sbb
stos
and
hlt
in
(bad)
xlat
pop
cmp
mov
xchg
sbb
cmp
in
mov
lods
xor
data16
push
mov
sbb
mov
mov
movs
retf
test
popa
rcl
adc
jno
stos
mov
mov
call
popa
fwait
cmps
mov
shr
ins
les
test
(bad)
jo
aaa
mov
sbb
jae
fbstp
aam
in
pop
jle
xor
cmp
lods
sub
nop
pop
pop
jns
sub
popf
push
inc
sbb
inc
out
or
push
sbb
ss
(bad)
jns
push
mov
push
(bad)
and
add
lds
push
rcl
mov
sahf
shr
push
push
loope
cmp
add
daa
cdq
popa
mov
mov
js
xor
jb
and
jno
add
add
add
or
adc
xchg
fistp
jmp
neg
pusha
push
in
stos
push
sub
icebp
mov
lea
pop
imul
mov
adc
aas
cmps
sbb
in
jge
pop
ret
mov
mov
pop
ret
jle
and
imul
jp
jg
mov
shl
retf
lock
dec
mov
popf
imul
sbb
sub
xlat
mov
leave
pop
(bad)
clc
dec
cmp
xchg
mov
in
mov
call
ins
mov
retf
sub
push
mov
dec
push
pop
rcr
fsub
dec
cli
aaa
mov
adc
daa
or
pop
xchg
enter
xchg
lds
stos
sub
test
cmp
imul
add
idiv
xor
sbb
and
out
popf
jne
adc
test
je
outs
pop
les
cmc
aas
outs
adc
xchg
dec
mov
fldenv
cwde
outs
or
mov
imul
fwait
in
fadd
pop
pop
loop
test
mov
call
and
rcr
add
pop
arpl
mov
or
pop
(bad)
imul
daa
push
data16
xor
loopne
sbb
adc
bound
or
fdiv
xchg
dec
mov
or
adc
shl
mov
add
sbb
sbb
pusha
movs
sbb
(bad)
mov
and
cmp
fwait
xchg
or
mov
mov
jae
dec
shl
pop
adc
jl
inc
adc
aam
std
cmp
lea
mov
sub
sub
pusha
xor
mov
mov
pop
mov
xor
mov
lds
ror
ror
dec
mov
in
cmp
xchg
ret
aam
and
mov
ret
popa
ja
imul
cdq
lds
neg
mov
jg
cmp
pop
stc
aaa
rcr
xor
movs
(bad)
or
pop
shl
cmc
xchg
mov
mov
fs
mov
push
jge
ret
addr16
jae
add
ins
dec
jmp
adc
inc
sub
call
push
dec
arpl
mov
mov
push
sbb
dec
outs
cli
and
mov
mov
leave
imul
sub
or
or
and
jno
and
pusha
call
dec
adc
lds
ds
aaa
lods
and
push
or
(bad)
fwait
dec
push
or
lds
push
xor
mov
fldcw
cmp
add
inc
dec
mov
mov
ds
mov
mov
aad
inc
add
clc
adc
add
mov
jmp
sbb
xor
pushf
movs
sbb
ret
js
ret
test
call
jecxz
mov
icebp
shr
xor
jno
xlat
fild
push
push
inc
dec
icebp
test
fdiv
inc
add
xchg
in
xchg
inc
and
jns
hlt
imul
inc
imul
daa
repz
and
push
pop
dec
cwde
adc
imul
pushf
mov
jl
jmp
jmp
sar
fdiv
add
or
jmp
mov
cmps
or
mov
xchg
xlat
jle
fiadd
cmps
xchg
scas
inc
bound
adc
sub
xor
retf
jecxz
jle
es
loopne
dec
outs
pop
mov
fdivrp
pushf
add
mov
inc
and
push
mov
adc
mov
adc
mov
(bad)
push
aad
loope
shl
mov
aaa
test
inc
or
add
dec
int
mov
jg
or
pop
out
fisttp
scas
inc
push
repnz
fwait
mov
ja
inc
xor
fist
mov
mov
(bad)
cmps
mov
mov
loopne
xchg
xor
and
scas
je
les
(bad)
arpl
fcomp
out
jmp
lods
sbb
mov
xor
pop
add
aad
and
adc
mov
push
das
mov
sub
pop
or
lods
(bad)
frstor
jo
cmp
sbb
push
mov
movs
adc
lahf
popf
in
jbe
mov
sub
dec
xchg
jecxz
mov
out
mov
out
out
pop
lods
sub
sbb
out
(bad)
xchg
bound
inc
cmps
inc
and
pushf
inc
bound
dec
clc
hlt
pop
mov
imul
fsub
cli
out
xor
inc
popw
and
jbe
arpl
or
not
xor
je
test
stos
stc
dec
xlat
rol
inc
cmp
aas
jmp
cmp
mov
sbb
jmp
and
pop
(bad)
fsub
pop
or
cmp
sbb
or
or
std
xchg
je
xlat
and
call
xor
daa
daa
and
mov
and
es
xchg
stos
retf
popf
xchg
lds
aam
lods
mov
fmul
jl
xchg
loopne
and
nop
dec
test
pop
out
add
fcomp
jb
aaa
jno
hlt
mov
lock
mov
cmp
adc
std
mov
dec
shl
mov
push
push
das
stos
mov
ins
rol
add
shl
dec
sar
sbb
push
adc
sbb
add
mov
jb
xchg
pusha
retf
lock
mov
sub
out
out
in
mov
sub
dec
daa
aas
ud1
pop
add
scas
xchg
sub
iret
int3
cmp
ja
cdq
daa
pop
or
jo
push
shl
cmps
data16
pop
in
ins
inc
or
pusha
sbb
adc
ss
jae
add
loop
xor
in
mov
movs
sub
addr16
lea
rcr
in
push
das
loope
mov
imul
push
push
lahf
xor
test
test
sbb
cmc
movs
scas
mov
sub
cmp
fist
shr
push
dec
xchg
jmp
mov
(bad)
mov
or
xchg
lods
xor
dec
rcr
arpl
dec
out
ja
cwde
pushf
(bad)
stc
mov
scas
push
pop
dec
stos
aam
ret
arpl
addr16
dec
inc
fwait
popf
mov
rcr
or
clc
lahf
mov
dec
push
cld
loopne
push
lahf
pop
or
cld
push
adc
or
dec
xor
adc
xchg
leave
cmp
and
mov
sub
aad
xor
xor
lahf
sub
xchg
push
lea
das
mov
cmp
imul
sbb
outs
je
mov
jge
adc
push
pop
jo
adc
imul
aas
mov
call
and
jnp
mov
add
add
cld
int3
aas
les
xor
or
add
mov
mov
fsub
call
xchg
stos
das
aaa
jo
ficom
into
jmp
jmp
add
mov
or
jg
aad
ret
shl
fisub
pop
shl
test
xchg
scas
in
test
jno
(bad)
test
xchg
add
dec
push
jmp
push
xchg
stc
inc
stos
out
in
lods
cmp
jmp
sub
adc
sbb
push
test
shl
push
sbb
mov
jmp
je
js
push
ins
movs
mov
sub
fld
rcl
call
inc
lods
jbe
mov
push
cmps
mul
mov
pop
mov
mov
shr
std
scas
test
dec
pop
into
add
adc
iret
loope
stos
push
push
sub
sbb
(bad)
scas
lock
mov
mov
mov
dec
push
jbe
call
xchg
jbe
jecxz
mov
dec
push
xchg
mov
inc
adc
push
aaa
xchg
enter
retf
jge
aam
leave
fbstp
leave
mov
call
adc
out
or
sbb
pop
out
out
add
pop
mov
pushf
mov
adc
xlat
call
fwait
push
jbe
jg
jne
cmc
or
loope
xor
xchg
std
into
retf
test
pop
in
loop
fnsave
loop
shl
mov
daa
mov
inc
inc
outs
gs
push
pop
sub
hlt
pop
jl
or
(bad)
cli
dec
and
inc
xchg
push
(bad)
and
push
cwde
inc
sub
jg
xlat
fs
mov
sbb
clc
sar
mov
nop
popa
or
xor
mov
adc
add
xchg
pop
sub
sti
push
cwde
rcr
inc
jge
jne
xchg
sub
or
sub
push
mov
repz
shr
xor
mov
out
push
add
mov
xchg
sbb
js
scas
pop
pusha
in
sub
xchg
xchg
into
add
xchg
and
lock
mov
test
(bad)
rcl
shr
jno
jbe
jl
aas
pop
add
ret
jo
jo
repnz
scas
gs
nop
fst
pushf
daa
fsubr
or
sbb
addr16
mov
xchg
imul
pop
lods
jle
mov
sahf
mov
xchg
adc
lea
xor
loope
test
mov
ins
jb
iret
dec
push
add
jmp
mov
inc
pop
scas
aad
xor
cmp
pop
mov
ss
dec
(bad)
cs
pop
dec
mov
sbb
pop
sbb
fwait
sbb
ins
out
int
jmp
(bad)
aad
or
jno
retf
adc
mov
pop
(bad)
sar
ins
mov
add
pop
xor
out
mov
imul
daa
into
(bad)
jg
mov
xor
retf
jno
scas
jp
mov
jbe
cmp
jae
lahf
in
imul
bnd
inc
outs
sbb
push
xor
fs
shl
popf
pushf
dec
icebp
out
sti
scas
dec
push
ret
jbe
stc
push
jnp
mov
(bad)
cmp
cmc
jb
std
fnstsw
pop
out
stos
cwde
sub
in
mov
and
cld
movs
and
mov
cli
dec
push
test
stos
dec
inc
add
hlt
dec
cdq
fwait
and
aas
je
pop
in
cmp
sbb
ror
mov
(bad)
adc
js
daa
mul
jb
mov
adc
inc
in
pop
or
sub
jbe
and
push
mov
(bad)
mov
sbb
mov
mov
daa
pop
ret
hlt
ficom
icebp
mov
push
push
mov
lds
mov
stos
jno
outs
add
in
mov
pushf
mov
movs
outs
xor
and
adc
outs
sbb
push
or
nop
imul
sub
div
xor
jmp
or
jbe
int3
fwait
js
test
push
shl
ja
mov
sbb
inc
ret
test
mov
out
bound
js
test
or
stc
cs
dec
fstp
and
push
(bad)
mov
fldln2
enter
scas
sub
sbb
retf
mov
outs
(bad)
mov
add
sub
test
mov
cs
test
fimul
mov
scas
sub
jp
xor
ins
mov
enter
shl
leave
sbb
cwde
mov
push
enter
inc
cs
cdq
ror
add
jmp
jmp
(bad)
push
out
or
add
dec
stos
xchg
pushf
xor
lods
jnp
pop
shr
ja
mov
cmc
sti
sub
mov
or
xchg
jbe
fdiv
hlt
js
mov
or
adc
push
inc
jge
sub
ja
and
ja
sti
ins
cld
out
dec
stos
jmp
dec
adc
fwait
(bad)
aaa
pop
jmp
jnp
jmpw
push
arpl
cmp
outs
aad
adc
(bad)
pop
jbe
push
hlt
clc
jns
sbb
cmp
xchg
inc
or
cmp
push
xchg
pop
retf
movs
lea
aas
sbb
inc
out
lds
mov
pop
jmp
dec
xor
push
rcl
and
and
scas
adc
inc
(bad)
xchg
push
shr
cmp
scas
push
xchg
mov
cmp
xlat
xchg
cmps
outs
out
push
add
cmp
mov
xchg
mov
fwait
sbb
inc
jmp
sbb
sub
gs
loope
inc
stos
push
fadd
or
cmp
adc
lods
outs
add
stc
scas
xor
pusha
pop
fld
inc
sbb
mov
retf
test
in
adc
movs
jl
xor
imul
pop
mov
pop
and
lock
call
sub
popf
ins
dec
xor
cli
inc
mov
sub
mov
sbb
add
ror
outs
push
ret
cli
jae
adc
lock
xchg
dec
sar
lss
test
push
fadd
dec
leave
enter
fwait
xor
mov
hlt
add
sbb
repnz
dec
repnz
jge
ja
xor
or
xor
imul
int
jns
inc
out
aaa
and
test
out
sub
inc
cdq
inc
aaa
dec
out
pop
xchg
rcl
arpl
popf
ret
out
int
retf
gs
retf
mov
call
xor
push
neg
push
xor
jmp
mov
jg
fld
jnp
add
mov
loop
push
jb
and
mov
mov
jg
sub
and
mov
das
push
inc
lea
jmp
retf
adc
popf
cmp
sub
outs
retf
pushf
push
mov
shr
mov
mov
inc
or
xchg
pusha
push
js
mov
cmp
leave
aaa
nop
into
fs
dec
mov
adc
sub
pop
cmc
xor
bound
nop
in
xchg
adc
mov
jbe
mov
rcr
lea
adc
mov
pop
outs
repnz
out
rcr
in
es
mov
icebp
mov
shl
jne
add
div
adc
jl
into
outs
mov
daa
jmp
daa
retf
loopne
mov
xor
lods
(bad)
popa
mov
(bad)
push
and
and
mov
int3
mov
push
es
leave
xor
jns
sbb
push
xor
xor
xlat
test
adc
stc
push
xor
jno
push
out
or
ret
push
fsub
push
dec
retf
xor
cmp
dec
mov
pop
jne
daa
(bad)
movhps
inc
jne
aas
or
sub
dec
xor
jmp
retf
dec
pop
test
clc
pop
push
pop
dec
fcomip
iret
mov
sbb
pop
(bad)
loop
push
sub
lods
jecxz
cdq
push
dec
cmp
xor
call
cmc
or
dec
and
mov
adc
and
push
popa
inc
or
dec
push
cmp
jp
adc
push
shl
pop
xchg
dec
aam
push
repnz
mov
jae
ja
sub
adc
jecxz
pop
sub
fmul
les
enter
gs
mov
dec
xor
in
fstp
stc
jae
scas
inc
xor
add
xchg
(bad)
(bad)
sbb
ins
les
(bad)
jno
adc
and
popf
icebp
adc
aad
lods
enter
fwait
cld
leave
hlt
jae
(bad)
push
imul
xor
mov
push
in
or
xor
hlt
add
dec
test
adc
in
sub
fwait
xrelease
xchg
mov
vmwrite
movs
out
cdq
mov
cmps
fwait
mov
out
mov
outs
xchg
ffree
popa
(bad)
das
call
fxam
cmpxchg
pop
sahf
mov
mov
cmps
cmc
iret
xor
in
mov
mov
and
jge
aaa
fistp
imul
push
jno
fs
sahf
in
cmp
ss
push
hlt
retf
push
inc
loopne
aam
fisubr
out
lahf
add
mov
bound
jnp
lods
shl
out
sbb
sbb
cli
test
shl
std
xchg
or
cmp
mov
push
dec
dec
stc
pop
scas
xchg
mov
shr
add
stc
sub
aaa
retf
and
out
xchg
jnp
adc
movs
push
pop
and
inc
shl
pusha
(bad)
mov
in
ins
pop
inc
xlat
xor
aas
outs
or
adc
ins
sub
xchg
sub
and
dec
out
(bad)
(bad)
mov
xor
sbb
mov
clc
and
dec
cmp
lea
pop
out
nop
cmps
mul
popf
adc
xchg
cmps
iret
sbb
xchg
gs
lock
push
out
dec
jg
inc
mov
call
inc
(bad)
loope
push
jbe
sub
add
pop
add
(bad)
imul
xchg
cmps
mov
out
inc
stc
sti
adc
gs
inc
push
pop
es
jmp
sub
mov
sub
xchg
iret
adc
bound
push
or
or
pushf
lahf
(bad)
cmc
jecxz
push
in
sub
cmp
adc
pop
pop
outs
mov
mov
xchg
push
jno
lock
cmp
ficomp
int
sti
cdq
jns
xchg
jae
retf
movs
ret
xor
sti
and
and
xor
push
jg
ror
shl
jmp
cmps
daa
xchg
push
arpl
shl
jg
mov
sub
shl
push
sub
les
imul
and
retf
mov
test
aas
inc
cmp
and
jecxz
inc
xor
imul
scas
std
sar
(bad)
jb
stos
jae
inc
ins
shr
adc
cs
jns
outs
jbe
(bad)
jg
sar
mov
push
mov
jno
shl
mov
cmp
inc
fmulp
jns
in
inc
aad
push
test
adc
fisttp
and
mov
cli
jp
mov
push
clc
dec
enter
out
in
rcr
nop
popf
repz
or
jno
push
or
jp
push
repz
lods
rcr
mov
aaa
push
popf
outs
test
xchg
outs
mov
pop
push
and
arpl
sub
mov
mov
mov
inc
test
xchg
popf
mov
inc
xchg
cmp
call
pop
dec
imul
(bad)
cs
sub
pusha
lock
popa
lods
retf
jge
push
shr
cmps
xchg
xor
push
cmps
push
cmp
ja
cld
int
rcr
jns
sbb
cdq
shl
sti
fistp
cmps
call
sub
mov
and
cmp
xlat
lods
fimul
bswap
dec
sbb
loope
push
push
mov
sub
test
push
cmp
pop
(bad)
hlt
mov
iret
clc
cmps
xor
push
dec
call
dec
imul
test
mov
push
or
adc
add
jnp
add
scas
sahf
(bad)
popa
cdq
das
outs
adc
cmps
lds
mov
pop
pop
and
xor
jecxz
outs
push
imul
inc
fiadd
add
arpl
sar
test
leave
pop
test
push
cmp
ret
adc
lods
mov
cmps
sahf
gs
pop
ins
xor
(bad)
mov
dec
stos
inc
test
fadd
push
leave
or
pop
push
loopne
and
fidiv
dec
or
mov
icebp
mov
lea
cmp
dec
ds
fcomp
inc
and
call
arpl
and
adc
aaa
xchg
mov
movs
outs
in
mov
adc
mov
loope
icebp
mov
aad
mov
sub
mov
mov
add
pop
push
jmp
inc
push
retf
js
push
sbb
rol
mov
rcl
fs
das
cli
xor
in
and
mov
xchg
imul
xor
sbb
rcr
mov
ja
or
sbb
xchg
mov
and
add
cmp
push
push
adc
or
and
js
cli
mov
loopne
pop
and
sti
in
and
or
test
fs
repz
sbb
leave
fild
or
mov
push
fnsave
dec
adc
sub
add
mov
sbb
mov
lds
in
push
out
test
in
adc
cmp
cmps
cmp
jle
loope
test
shl
mov
mov
pusha
xor
sbb
push
dec
rol
retf
scas
mov
xor
push
mov
icebp
mov
pushf
inc
lods
jl
stc
in
inc
sbb
dec
inc
adc
sub
sub
ffreep
or
outs
mov
repnz
jb
mov
mov
pop
cld
push
adc
adc
test
cmp
xor
and
test
jecxz
sub
xchg
rcr
mov
mov
(bad)
div
pop
sbb
xchg
jmp
call
add
mov
pop
add
jo
data16
jb
add
mov
je
pushf
nop
pushf
call
xchg
(bad)
mov
xchg
push
and
(bad)
movs
cmc
jp
stos
cmp
or
push
adc
das
inc
dec
adc
aam
sbb
aad
repz
and
aam
dec
pop
sbb
out
sub
push
cmc
add
call
inc
arpl
push
jo
mov
test
push
idiv
fisttp
in
cmp
push
jmp
xor
or
xchg
retf
lea
xor
cwde
jb
iret
rol
outs
(bad)
fistp
push
das
rol
mov
int
add
enter
test
add
jle
les
aaa
push
lea
mov
cmp
mov
lods
imul
jg
inc
ror
(bad)
sub
xor
out
pop
push
add
(bad)
push
ret
cli
jb
or
mov
(bad)
xchg
xchg
(bad)
ins
dec
cmps
xor
xchg
cmp
mov
and
mov
leave
cmp
mov
mov
or
mov
iret
push
push
and
jns
dec
cwde
bound
add
jmp
sbb
shl
jno
retf
popf
(bad)
pop
xchg
xor
jge
bound
sbb
into
pusha
aaa
cdq
and
or
adc
cwde
adc
xchg
adc
fmul
fisubr
dec
mov
retf
mov
push
fstp
sub
or
fcomp
test
jl
sbb
push
mov
dec
dec
sahf
mov
cs
adc
mov
shl
ret
xlat
loope
push
inc
sbb
aad
adc
inc
mov
ja
imul
or
mov
int
retf
enter
int3
dec
mov
repnz
repz
aad
sbb
ror
xchg
or
jne
adc
dec
jns
jo
inc
gs
rcr
sbb
cdq
aaa
mov
arpl
xor
cmps
mov
xchg
mov
mov
mov
mov
ret
inc
add
cmp
stc
ret
out
arpl
out
les
jb
and
sbb
scas
ds
out
movs
ds
jns
(bad)
test
les
mov
or
clc
mov
or
scas
and
(bad)
call
int
xor
add
add
sub
lods
call
xchg
mov
mov
lock
sub
in
push
sub
cld
cmc
dec
pop
adc
pop
add
xchg
(bad)
jmp
test
dec
test
popa
fsub
xor
push
je
push
or
jb
add
fwait
mov
inc
iret
jae
mov
cmp
pushfw
push
fucomi
or
jns
jbe
loop
test
jle
mov
sub
inc
adc
popa
ror
cmp
lahf
dec
mov
sbb
xchg
sbb
icebp
rcr
(bad)
aaa
lods
adc
imul
popf
inc
in
jns
mov
inc
cmp
gs
push
shufps
cmc
and
stc
cmp
mov
(bad)
adc
rol
pop
jae
adc
aas
stc
js
xchg
inc
sti
stos
(bad)
jmp
je
mov
xchg
pop
xor
imul
loop
xor
rcl
(bad)
fcom
pop
push
push
adc
mov
jno
sbb
jge
jns
mov
xor
pop
jge
push
in
in
jno
mov
cs
or
fwait
mov
adc
(bad)
ror
std
inc
push
bound
mov
stos
icebp
into
jae
retf
mov
fmul
sar
aas
ins
test
sti
and
jle
jne
push
pop
sub
ins
xchg
jnp
dec
sbb
les
js
repz
mov
fimul
cmc
movs
repz
ja
jmp
imul
fdivr
in
lock
or
push
outs
sbb
aas
jns
pop
mov
pop
pushfw
pop
add
test
imul
inc
fistp
push
cmp
in
shr
or
dec
dec
xchg
(bad)
aam
push
pop
and
ds
loopne
inc
add
jne
out
and
addr16
loope
mov
pop
lock
and
test
xor
popf
daa
cdq
in
add
push
lahf
lea
add
popa
ret
enter
adc
add
inc
lods
dec
test
mov
push
xor
adc
xlat
xor
push
aad
sub
std
lahf
xchg
or
adc
out
sub
sbb
dec
mov
call
pop
push
adc
pop
inc
push
and
push
mov
stos
xchg
or
rcr
movs
pusha
mov
out
ret
cmp
mov
das
mov
fs
aad
jne
outs
sub
lods
xchg
js
loop
inc
mov
and
js
mov
les
js
pop
fwait
cwde
imul
jge
fwait
(bad)
sub
popf
push
mov
add
pop
clc
push
(bad)
or
jge
xor
push
sub
ret
retf
push
sub
(bad)
mov
push
pop
hlt
push
mov
sub
inc
rcl
jnp
adc
rcl
nop
push
xor
or
xor
dec
mov
jmp
bound
daa
xchg
es
dec
nop
mov
pop
imul
push
daa
jle
in
pop
and
sub
mov
dec
and
icebp
int3
mov
jbe
mov
movs
dec
or
add
mov
aad
iret
pop
cmp
cmp
scas
mov
in
movs
adc
scas
stos
cmc
sub
outs
dec
adc
ds
nop
pop
xor
sub
dec
add
push
mov
je
sub
jae
in
cmp
add
scas
aam
or
retf
add
cdq
pop
sub
cmp
es
mov
cmps
or
dec
popf
mov
jne
xor
add
jge
icebp
pop
add
or
out
push
test
repz
das
lock
cmp
dec
xchg
mov
outs
xor
loop
leave
jmp
aad
or
dec
lods
loopne
xor
mov
dec
or
loope
sbb
pushf
rol
mov
ja
or
adc
jnp
ins
mov
shl
push
enter
mov
sub
mov
int3
(bad)
inc
inc
aaa
add
ret
adc
mov
shl
adc
test
dec
test
jb
push
xor
rcr
and
jmp
mov
into
in
dec
and
jno
into
das
test
daa
inc
pop
jo
data16
fdivr
xchg
jmp
push
dec
mov
out
repz
jne
add
fwait
push
out
fild
and
inc
sub
retf
in
scas
jb
xchg
cmp
shr
xchg
mov
xor
mov
jno
popa
dec
or
mov
jmp
cmp
pop
stos
xchg
xchg
fwait
mov
ss
(bad)
in
xchg
into
pop
or
fdivr
call
sbb
dec
cli
int3
xlat
xchg
not
and
not
fisttp
push
mov
xchg
mov
dec
add
inc
ret
adc
outs
scas
add
sar
xlat
cmp
shl
mov
test
lods
pop
stos
add
sbb
mov
push
or
mov
loope
sti
gs
lods
pop
or
pop
test
pushf
pop
cmp
xor
leave
ja
pop
cmps
mov
adc
leave
and
ss
jbe
sub
mov
adc
clc
fst
dec
push
fisub
fmul
or
jmp
jmp
pushf
sar
cmps
sub
fwait
movs
dec
dec
cmc
in
dec
test
sbb
je
pop
aaa
loopne
mov
cmp
(bad)
fld
outs
scas
inc
mov
cmps
mov
call
rcl
out
cdq
push
xchg
cmps
(bad)
cmp
push
cmp
jb
stos
mov
xor
add
pop
pop
sahf
lds
xlat
jb
neg
cdq
call
popf
add
or
push
xchg
adc
cld
call
(bad)
pop
inc
sti
mov
pop
lods
(bad)
mov
pusha
jg
cs
cld
retf
jmp
sbb
xchg
push
cmps
mov
adc
inc
mov
pop
outs
test
dec
cmp
sbb
adc
xor
or
loop
js
test
fadd
(bad)
ret
push
mov
sar
mov
sbb
pushf
aaa
and
loopne
mov
in
cmc
jns
fidiv
mov
jmp
lahf
fcomp
pop
adc
push
cmp
nop
pop
inc
test
jg
in
fsubr
mov
div
lods
repnz
cld
call
push
xchg
shl
outs
sub
and
iret
int
mov
fld
cmps
sub
pop
push
(bad)
dec
pop
ja
into
repnz
add
loope
push
mov
dec
inc
push
cmps
pminub
pop
test
inc
xor
fimul
ins
dec
push
loop
jg
pop
stos
loopne
xchg
push
je
jb
ffreep
xchg
imul
push
lds
dec
or
xor
xchg
jmp
stos
dec
mov
sub
daa
test
mov
out
and
daa
add
push
inc
icebp
sar
and
jne
mov
push
nop
rcr
(bad)
mov
cmp
pop
sub
push
and
and
add
sub
ja
dec
push
sti
adc
xor
out
sbb
xchg
pop
in
(bad)
mov
mov
push
jge
das
jo
pop
fbld
je
mov
mov
movs
inc
aaa
scas
mov
push
cli
mov
repz
cdq
mov
pop
cmp
aam
fnstcw
repz
mov
(bad)
out
std
sbb
or
xchg
xchg
push
mov
xor
scas
lock
test
repz
aas
les
sbb
lea
xor
in
dec
mov
push
cmps
test
sub
jns
push
mov
(bad)
daa
loop
dec
stos
jbe
shr
jbe
inc
mov
mov
push
fs
das
inc
and
movs
dec
sbb
in
scas
(bad)
cli
xchg
jge
pusha
sub
ror
mov
jb
and
add
jne
nop
movs
dec
icebp
sti
fsubrp
out
inc
mov
into
jno
(bad)
cwde
mov
push
stos
mov
sub
in
std
jo
test
aas
cmps
idiv
sub
stc
ret
jge
and
hlt
mov
das
pop
out
test
fdiv
add
jo
call
pushf
add
fcmovb
adc
fisttp
xor
fsub
adc
(bad)
jmp
pop
xor
movs
mov
mov
loope
pop
and
out
pop
shr
sub
or
adc
push
hlt
aad
mov
push
xchg
popf
mov
ins
stc
cmc
inc
xchg
or
in
lods
inc
arpl
ror
cdq
retf
jg
pop
test
cmp
arpl
stos
ja
mov
popa
retf
xchg
jmp
movs
dec
or
jbe
aas
jge
add
out
test
je
xor
push
fwait
or
dec
adc
scas
add
js
xor
adc
mov
inc
loopne
mov
dec
mov
ins
les
pusha
pop
fdivr
and
add
mov
aad
dec
test
aaa
jae
sbb
add
cdq
cmps
icebp
cmp
push
cmp
xor
ins
fcmovbe
aad
aad
(bad)
(bad)
jae
inc
stc
das
test
mov
imul
xor
mov
stc
push
stos
pop
sbb
xor
mov
sar
stc
or
and
xchg
(bad)
cmp
dec
test
xor
fsubr
mov
scas
jno
sub
test
pop
xor
push
mov
xor
imul
xchg
xchg
je
imul
sbb
ins
shl
and
pop
fisttp
mov
int
mov
mov
sbb
hlt
call
ret
js
loope
push
add
adc
addr16
mov
stos
cmp
xor
fistp
das
rcl
pop
push
xor
cmc
jmp
pop
fnstenv
xchg
adc
leave
cmp
mov
(bad)
sti
popf
bound
mov
push
mov
mov
sbb
jmp
aam
mov
push
jge
stos
lods
adc
and
ins
push
jne
dec
and
stc
cmp
sub
cmps
inc
idiv
sub
mov
aad
rcl
cli
out
mov
lods
or
enter
jns
dec
jmp
mov
sub
sbb
xchg
jmp
out
cmc
das
in
dec
cdq
xchg
mov
les
sbb
jecxz
sar
fld
call
enter
arpl
mov
add
imul
push
sbb
pushf
mov
mov
inc
into
jne
test
addr16
xchg
lods
dec
xchg
dec
dec
nop
test
cmp
push
xor
call
add
push
fs
jne
dec
xor
sub
inc
pop
adc
aaa
adc
pop
pop
sahf
jl
sbb
sbb
out
and
cmps
inc
sub
iret
arpl
leave
imul
add
lods
in
or
into
ins
jnp
sub
mov
and
xor
bound
lahf
fldenv
int
call
xchg
push
pop
das
jg
and
and
lods
inc
mov
jmp
test
push
xchg
sub
daa
dec
int3
xchg
xor
cmc
mov
ja
pusha
xchg
sub
jecxz
pop
lea
aas
adc
idiv
fnsave
push
sub
iret
pop
aad
fmul
mov
stos
mov
sub
movs
dec
push
out
fistp
sub
adc
repnz
jns
sahf
int
cmps
mov
inc
pop
push
and
stc
sbb
mov
pop
mov
mov
mov
lahf
aad
shl
sub
adc
mov
jle
fistp
xchg
cmc
mov
mov
(bad)
push
mov
pop
pop
mov
mov
mov
pop
sub
adc
sbb
sbb
dec
pop
(bad)
jbe
data16
retf
lea
mov
add
mov
ss
adc
mov
push
cmp
add
jb
jge
test
loopne
jbe
(bad)
hlt
add
xor
pop
add
in
xor
aas
inc
push
ds
repnz
test
push
mov
clc
inc
push
sub
jb
js
(bad)
adc
pop
and
inc
bound
(bad)
mov
std
cmps
mov
cmp
sbb
cmp
add
mov
aas
mov
ror
xor
call
lahf
addr16
adc
adc
jno
pusha
div
adc
pop
add
sub
dec
push
inc
out
fst
push
mov
mov
imul
sti
sub
or
jmp
scas
cs
fwait
lods
mov
add
jmp
sub
(bad)
in
(bad)
and
lds
inc
cmp
aam
mov
jb
adc
sbb
or
mov
or
das
adc
aas
pop
add
pop
jmp
es
jbe
or
mov
lds
jns
cmp
sub
jne
out
and
xchg
push
jb
dec
cli
pushf
sbb
retf
mov
xchg
sar
jecxz
imul
or
dec
jg
sar
enter
mov
mov
pop
ds
xchg
scas
pusha
retf
dec
xor
sar
or
jns
xlat
bound
mov
add
push
stos
ss
mov
pop
stos
movs
ss
jp
fsubr
cwde
ss
mov
push
cmp
pop
inc
jecxz
call
lods
xor
dec
xor
pusha
popf
lahf
pop
je
push
mov
push
(bad)
fcom
jb
xchg
inc
aaa
shl
shl
pop
cmc
sbb
pop
lock
shr
mov
mov
xor
xor
sbb
into
popa
adc
mov
jecxz
mov
test
inc
jecxz
stos
cmps
repnz
popa
js
jb
retf
xchg
push
test
dec
retf
mov
mov
imul
mov
daa
and
je
pushf
(bad)
rol
loop
xchg
jns
lods
int
lahf
lods
aaa
jbe
pop
xor
daa
xlat
sbb
test
inc
test
xor
or
in
push
xor
repnz
jnp
mov
mov
inc
mov
adc
cdq
stc
inc
sti
mov
or
fld
push
dec
add
xchg
xchg
mov
fild
aam
jl
mov
arpl
sub
dec
sti
and
iret
or
retf
std
(bad)
mov
cmc
pop
jne
outs
and
and
push
pop
inc
popf
jle
mov
cwde
ret
dec
xchg
pop
sbb
or
inc
test
add
add
inc
clc
pop
loope
or
cli
sahf
loop
sbb
loopne
call
fcomi
mov
or
mov
pop
and
stc
int
jp
xlat
pop
jp
or
add
jnp
mov
push
jge
push
pop
aad
sbb
mov
sub
mov
jno
mov
push
dec
loope
clc
leave
and
arpl
imul
or
add
mov
cmp
retf
ret
test
cdq
sub
push
icebp
xlat
or
mov
adc
dec
jns
jle
aaa
fisub
test
mov
add
fwait
sti
cmp
mov
aaa
inc
mov
mov
mov
aas
jae
in
stos
ins
stos
or
out
mov
(bad)
sub
xchg
test
push
ins
jns
shl
add
mov
loopne
push
(bad)
jmp
and
iret
pop
imul
cmc
xchg
sub
les
std
int
mov
push
ret
add
test
or
movhps
jbe
add
jo
int
dec
jecxz
sub
push
repz
lahf
sub
stos
loopne
xchg
and
pop
pop
fdivr
inc
cmp
pusha
test
and
mov
hlt
sbb
std
pop
inc
xor
xor
fwait
jbe
pop
ret
arpl
movs
js
push
(bad)
jne
shl
aad
nop
stos
std
je
add
sti
lahf
cmc
jmp
repnz
mov
sbb
retf
sahf
pop
xchg
jg
pop
inc
xchg
(bad)
movs
test
icebp
fwait
pop
jb
enter
cmp
xchg
sbb
adc
mov
dec
std
in
dec
aas
inc
cmp
cmp
xor
pop
sub
ret
test
dec
and
ror
(bad)
jns
inc
int3
dec
out
and
sub
test
imul
and
outs
pop
and
sub
xchg
mov
push
js
sub
test
imul
push
dec
cmp
xchg
add
std
ss
fucomi
sbb
mov
xchg
stc
ins
pop
inc
ins
add
mov
test
int
in
adc
mov
mov
aaa
out
int3
adc
lea
stos
ret
add
data16
iret
or
xchg
cmp
rol
or
(bad)
xor
rcr
stc
es
xchg
dec
dec
mov
nop
fadd
mov
(bad)
lea
pop
mov
add
outs
out
inc
cmp
pop
aam
jno
adc
mov
hlt
xchg
int3
cmp
sub
ins
jbe
and
push
xor
data16
add
mov
sbb
shl
hlt
and
mov
lock
xchg
sahf
cmp
nop
retf
int3
mov
sbb
jmp
test
jae
adc
sahf
xchg
iret
cpuid
shr
xchg
jno
jb
lock
adc
fiadd
and
xor
mov
cmps
jp
mov
clc
arpl
mov
aas
daa
pop
cmc
out
inc
xlat
pop
inc
outs
loope
mov
xor
ficom
test
stc
or
add
enter
(bad)
clc
or
dec
fnstenv
or
std
pop
or
dec
mov
sub
jge
pop
pop
pop
(bad)
loope
push
cmp
push
neg
fidiv
nop
test
aaa
inc
or
cli
dec
scas
imul
jbe
mov
out
movs
rol
shr
mov
scas
sub
out
nop
movlps
ret
cmp
and
and
or
rcl
pop
fbstp
fwait
cs
in
inc
iret
enter
ss
nop
pop
(bad)
hlt
ins
retf
data16
rcr
xor
jbe
imul
out
arpl
shl
cmp
mov
movs
mov
dec
(bad)
std
aas
pop
jo
and
xchg
int
xor
ret
push
xor
jmp
daa
push
cmp
jl
ret
mov
stos
xchg
mov
inc
inc
push
mov
shl
emms
mov
mov
pop
sub
test
jo
lods
popa
popa
enter
std
dec
dec
inc
ins
mov
das
jb
pxor
xchg
mov
fnstcw
jo
dec
sub
(bad)
dec
mov
outs
xabort
cmp
mov
dec
shl
inc
les
cdq
loope
outs
dec
push
dec
std
out
jp
jns
gs
jmp
xchg
mov
xchg
or
cmp
jmp
das
add
pushf
cs
mov
mov
or
cmp
mov
xor
shl
scas
xor
pushf
jmp
pop
loope
cmp
mov
push
mov
sub
mov
or
sbb
xchg
shr
rcr
mov
cmp
sub
fnsave
repnz
into
add
mov
jmp
sub
call
cli
mov
loop
push
shr
pop
mov
add
fmul
and
inc
daa
cwde
loopne
sbb
sbb
(bad)
out
lods
inc
adc
or
or
stc
mov
sar
(bad)
shl
jnp
cmp
sub
outs
mov
and
scas
sbb
push
cmp
out
movs
push
retf
dec
cmp
out
fnstsw
ins
sbb
mov
test
stos
push
mov
popa
nop
adc
or
mov
dec
shl
sbb
adc
pop
lock
fdivr
add
and
(bad)
cmps
or
and
jl
imul
ficomp
rcr
clc
shl
adc
sahf
sbb
sub
hlt
add
jle
std
adc
jmp
enter
xchg
pop
hlt
push
js
(bad)
iret
push
dec
in
in
inc
cmp
outs
out
and
xor
mov
sub
cmc
xchg
add
pop
xchg
pop
jno
das
cmp
lea
ret
and
outs
xor
cmp
sub
xchg
cmp
cmp
xchg
mov
out
enter
fisttp
cmc
dec
jecxz
push
sub
popf
dec
call
cmp
ret
icebp
(bad)
add
dec
inc
hlt
stos
or
sbb
jnp
jne
out
rcl
push
inc
pop
outs
xor
scas
sbb
cmp
pop
cs
pop
sbb
dec
test
sub
pop
mov
cs
shl
add
pop
mov
cwde
leave
lods
mov
hlt
fcom
dec
(bad)
jmp
shl
mov
adc
jne
or
clc
add
and
sti
(bad)
sbb
and
ret
dec
sub
mov
inc
adc
adc
inc
sbb
out
push
adc
push
sub
or
sbb
push
xor
ins
call
les
sahf
add
ins
pop
icebp
cwde
xchg
adc
jmp
outs
jb
scas
push
inc
push
jbe
data16
push
mov
and
sub
enter
retf
or
sub
fstp
cmp
repz
outs
push
sbb
jge
fs
shr
cmp
test
scas
mov
or
mov
xchg
jle
jg
jmp
cmp
cmps
add
jge
clc
mov
out
xchg
std
or
test
call
inc
xor
xor
rcl
sub
mov
xor
out
bound
enter
fnstcw
sbb
retf
cmp
or
lea
iret
dec
add
mov
aad
ficomp
cli
jle
add
dec
add
jno
push
xchg
pop
fcomp
mov
push
or
mov
cmps
and
mov
inc
mov
js
ret
mov
popa
lods
pop
iret
dec
test
cdq
sbb
dec
mov
sti
mov
mov
cld
fstp
test
sbb
and
sti
jnp
jmp
in
pop
or
ret
and
mov
aad
sub
test
je
push
add
lahf
pop
inc
pop
jae
xchg
shl
fwait
xor
mov
mov
xchg
pusha
in
cdq
add
sbb
mov
and
cmp
pop
pop
leave
sar
fld
inc
int
div
mov
jmp
into
cmc
jno
stos
sub
or
dec
call
ret
dec
xchg
and
jno
push
push
xchg
sti
dec
shl
repnz
in
cmc
rcl
push
ret
out
cdq
int
xchg
pop
cmps
into
pop
xchg
test
mov
cmp
lea
retf
dec
cdq
popa
adc
add
aaa
es
jecxz
jle
sbb
call
arpl
int
sbb
mov
xchg
sbb
in
dec
fdivr
int
aaa
sbb
cmp
pop
(bad)
cld
aaa
and
cmc
jge
cmp
cmp
mov
pushw
cdq
sti
call
cmp
mov
fnstenv
mov
jg
(bad)
stos
js
jge
gs
bound
bound
nop
or
sub
add
add
daa
mov
and
sti
sub
pop
ss
mov
inc
mov
dec
mov
xor
mov
mov
jns
and
jge
pop
ins
mov
and
sbb
push
scas
adc
inc
mov
and
xchg
jg
jl
das
mov
push
push
pop
inc
imul
(bad)
loope
dec
pop
add
cwde
jecxz
push
out
dec
(bad)
test
daa
scas
(bad)
or
xchg
push
jl
call
mov
push
lea
aad
ds
sar
xchg
mov
mov
test
jno
jmp
nop
clc
pop
adc
out
test
mov
mov
iret
mov
xlat
(bad)
pushf
push
dec
pop
push
pop
mov
jae
and
in
jb
inc
push
aaa
inc
xchg
add
sub
call
ret
adc
xchg
(bad)
es
bound
add
loop
jbe
fdiv
repnz
mov
sahf
push
pushf
repz
ror
or
pop
push
in
in
pop
in
jns
sti
aaa
faddp
jae
mov
jb
pop
repz
inc
pop
xor
and
stos
shl
xchg
jecxz
fistp
mov
stos
out
mov
lock
sub
adc
ret
ins
cli
mov
mov
add
(bad)
out
sub
dec
in
inc
arpl
mov
xor
mov
xor
pop
aas
loope
and
dec
imul
jmp
mov
push
inc
aas
xchg
xor
mov
retf
cmc
rol
mov
mov
fisubr
pushf
add
mov
cmp
imul
adc
fadd
and
dec
movs
cwde
hlt
jo
(bad)
dec
popa
jmp
pop
sbb
jb
xor
fiadd
xchg
xor
test
sbb
ss
mov
adc
jmp
cli
(bad)
(bad)
fmul
addr16
pop
aaa
shl
popa
dec
pop
into
outs
jbe
add
call
push
jbe
jl
adc
(bad)
jmp
(bad)
fstp
int3
pop
add
or
sbb
adc
lds
adc
xchg
rol
inc
mov
fstp
gs
mov
repnz
xchg
jp
inc
xor
sar
sbb
lods
jbe
mov
xchg
adc
push
pop
sub
push
dec
adc
sbb
jmp
add
mov
xchg
mov
mov
pop
jg
aas
fst
dec
sahf
mov
xor
(bad)
mov
test
push
and
mov
adc
mov
mov
mov
push
outs
mov
fbstp
cs
or
out
in
xor
or
js
xchg
mov
adc
es
stc
jecxz
adc
(bad)
dec
adc
jmp
mov
gs
pusha
jl
data16
adc
cmps
test
iret
call
je
mov
push
out
fwait
adc
sbb
cmp
clc
pop
jo
int3
into
fwait
fwait
out
hlt
stos
mov
in
jle
xor
clc
mov
lods
cdq
aam
lock
pop
inc
add
sbb
push
mov
sbb
sub
jp
or
add
mov
inc
push
ins
retf
repz
or
push
inc
dec
and
mov
stos
cld
movs
test
test
ret
imul
rol
inc
std
mov
inc
push
lock
test
fwait
adc
in
dec
mov
add
sbb
cmps
fs
add
xchg
adc
pop
ret
mov
mov
or
mov
gs
inc
pusha
pop
cmp
stc
rcl
or
(bad)
pop
sbb
cmp
push
adc
push
rcr
mov
cmc
add
sti
dec
xchg
test
ficom
dec
jnp
outs
sub
dec
mov
mov
add
daa
dec
cmp
pop
adc
jp
movs
fidiv
lods
dec
dec
lock
inc
jmp
add
adc
jle
add
stc
int3
int
xor
push
clc
and
ds
push
fcomp
(bad)
outs
test
mov
scas
shl
es
and
cmp
loop
mov
(bad)
push
arpl
dec
repnz
sysret
sbb
popf
scas
mov
xor
in
in
sub
cli
clc
and
jne
dec
popa
jnp
or
inc
movs
jecxz
push
inc
iret
or
jo
out
push
(bad)
lahf
jmp
adc
xor
jg
mov
dec
and
rcl
cmps
cmp
pop
sub
mov
dec
stos
sub
into
es
adc
jns
ror
loop
add
pop
pop
ret
dec
jb
mov
retf
pop
fisttp
hlt
scas
pop
or
mov
add
inc
and
mov
or
mov
pop
push
clc
mov
sub
scas
pop
hlt
sahf
mov
mov
gs
dec
std
or
mov
adc
xchg
mov
ret
add
sub
mov
dec
movs
push
xchg
cmc
ss
ror
repz
fcomi
scas
add
sub
jae
jecxz
(bad)
cmps
inc
xchg
push
loopne
fld
mov
add
mov
inc
sti
push
jo
xchg
jl
add
ss
ret
cmp
(bad)
(bad)
sub
xor
sahf
arpl
cmp
outs
mov
xchg
jp
fld
xchg
dec
and
or
dec
div
ret
(bad)
js
pop
movs
sub
add
fs
sub
js
stos
push
stc
inc
ret
cdq
jmp
mov
aas
add
cmc
les
pop
cli
xor
xchg
aam
pusha
loop
test
popf
pop
add
pop
add
inc
dec
pop
test
das
mov
popa
sub
xchg
mov
inc
cwde
aam
gs
int
sbb
mov
ins
in
cmp
in
inc
mov
and
shr
into
outs
arpl
pop
mov
test
mov
scas
mov
adc
das
and
fwait
lods
loope
sbb
pop
mov
or
dec
sbb
add
leave
mov
ds
in
les
mov
push
xor
sub
cmp
xor
dec
cwde
ret
lods
adc
or
or
daa
out
and
outs
xchg
ja
out
lods
out
ss
jnp
add
ss
bound
adc
(bad)
sub
and
adc
(bad)
and
retf
or
in
cmp
adc
nop
jmp
mov
lds
in
pusha
dec
cs
sbb
mov
loopne
(bad)
xchg
push
xchg
leave
mov
adc
push
jne
jae
sub
adc
jmp
std
xor
loopne
cmps
dec
in
mov
call
inc
pushf
adc
xchg
cmp
sbb
xchg
cli
mov
lods
enter
loope
inc
push
idiv
xor
std
mov
mov
aas
loop
xor
sub
out
push
and
adc
ins
push
jae
xor
imul
sbb
mov
cs
or
ror
mov
repz
in
mov
mov
xor
jbe
sub
push
(bad)
lods
mov
(bad)
icebp
hlt
jmp
adc
cmp
push
mov
into
das
jl
xor
cs
lock
je
inc
mov
push
repnz
ret
mov
push
xchg
sar
ins
icebp
xlat
iret
outs
fadd
into
cmps
mov
cmps
(bad)
rcr
scas
cmp
push
movs
xor
fistp
lahf
inc
jmp
cmp
lahf
adc
in
jne
mov
mov
jg
sbb
mov
dec
push
push
or
xlat
jl
mov
mov
dec
xor
add
fsubr
ds
dec
dec
push
imul
xor
in
mov
pop
rol
jge
fs
add
adc
inc
in
les
js
xchg
xchg
movs
jb
jp
dec
loopne
and
xchg
retf
jp
or
xchg
xchg
shr
xchg
jmp
xchg
inc
fwait
cli
in
xor
clc
xchg
push
hlt
and
pop
mov
xor
push
imul
mov
and
ins
mov
push
mov
or
mov
daa
rol
adc
xor
mov
inc
adc
in
mov
mov
push
cdq
fiadd
lahf
jbe
(bad)
loopne
ja
aaa
cmp
mov
out
ds
push
push
mov
push
inc
shl
enter
sbb
retf
mov
mov
jge
mov
mov
cmps
jo
pop
sbb
int3
jl
cmp
cmp
lods
ja
rol
mov
cmps
fs
inc
inc
cmps
and
and
rcr
xor
sbb
add
jmp
jns
mov
cmp
sub
test
cmp
mov
or
pop
(bad)
dec
add
test
shr
inc
mov
cmp
push
push
(bad)
adc
jae
imul
js
sbb
pop
push
fcom
jne
mov
adc
call
scas
outs
dec
neg
cwde
(bad)
mov
das
neg
jl
test
or
inc
retf
fadd
inc
sub
add
lods
inc
lods
xor
rcl
sub
push
loope
add
mov
and
(bad)
mov
(bad)
fdivr
shl
adc
pushf
add
gs
sub
pop
ss
cs
inc
sti
shl
sub
pop
out
std
das
jmp
cdq
lock
mov
ror
loop
adc
sub
outs
adc
push
into
loopne
jg
icebp
bound
sub
or
arpl
dec
and
shr
pusha
clc
inc
je
cli
sub
push
popa
hlt
push
xor
jecxz
lahf
or
int3
pop
mov
push
or
mov
dec
mov
mov
clc
jbe
js
xchg
xor
lods
sbb
movs
jnp
fld
les
leave
or
and
pop
add
jb
xchg
lea
sub
push
rol
in
pop
in
sahf
into
or
es
mov
and
mov
push
add
mov
lea
dec
mov
xchg
dec
aaa
(bad)
jmp
nop
jns
jmp
mov
daa
jb
xor
rcr
leave
fsub
jne
fsubr
cmps
daa
xchg
es
in
adc
mov
pop
test
push
(bad)
fadd
push
push
into
pop
shr
push
std
out
addr16
jge
inc
jecxz
xchg
push
pop
or
or
lock
mov
lea
and
or
cmp
outs
inc
xchg
rcl
cmps
cmp
loope
or
pushf
and
and
and
fisub
sub
jb
cmp
mov
shl
push
dec
(bad)
mov
pop
push
nop
ret
outs
shl
jb
icebp
push
inc
out
push
sbb
outs
js
(bad)
icebp
xchg
jo
cvtdq2ps
or
pop
arpl
pushf
adc
push
adc
std
loope
xor
adc
out
repz
int3
stc
mov
lea
js
mov
loope
gs
mov
pop
mov
cmc
enter
jp
cld
fs
push
and
popa
addr16
inc
xchg
call
push
add
bswap
mov
cdq
lock
mov
xor
shr
test
into
jbe
add
jns
add
push
int3
cmp
loope
mov
xchg
mov
repnz
push
dec
fistp
cs
jmp
lods
inc
cmps
in
mov
push
pop
push
sbb
scas
ffreep
call
mov
dec
inc
inc
cmp
sbb
call
add
pop
jp
mov
push
jne
data16
inc
sbb
sub
inc
mov
repz
repz
mov
cwde
vunpcklps
aas
cmp
xor
jge
shl
adc
mov
mov
mov
lock
call
jb
pop
mov
lock
xor
push
or
sti
neg
cmps
pushf
outs
and
mov
mov
out
int
push
scas
mov
das
leave
not
mov
mov
ss
jno
loop
mov
loopne
xlat
jg
(bad)
sub
jmp
push
test
int3
rol
jmp
sbb
add
xchg
fimul
fisub
inc
imul
jb
xor
mov
popa
and
xchg
aad
ja
inc
fidivr
fmul
test
bound
addr16
mov
test
(bad)
mov
inc
(bad)
push
scas
outs
pusha
xchg
gs
icebp
dec
fs
mov
sbb
inc
dec
iret
popf
aas
inc
es
inc
ficom
push
loope
push
syscall
pop
rcr
(bad)
or
cmp
dec
push
ficom
(bad)
dec
xchg
ds
ss
mov
loop
cmp
addr16
enter
test
dec
lock
(bad)
push
mov
data16
mov
arpl
add
jmp
pushf
outs
(bad)
test
shl
cmp
in
mov
xacquire
or
mov
mov
cmp
(bad)
aam
popf
or
push
test
jnp
fcomp
nop
fdiv
lock
add
push
(bad)
xor
outs
dec
push
(bad)
leave
lods
lahf
repz
jo
jecxz
mov
and
jne
lahf
jmp
pop
call
inc
shl
push
and
cmc
stos
stc
pop
cmp
dec
adc
cwde
xor
bnd
imul
and
pop
push
mov
iret
jb
xchg
cli
jns
xchg
mov
test
and
repz
jo
in
jnp
and
xor
mov
cmp
dec
mov
xor
cli
stc
inc
dec
rcr
dec
test
cmp
imul
mov
inc
lahf
ja
outs
out
cmps
sbb
sub
ds
push
and
movs
cld
es
mov
lods
ins
cmp
inc
mov
adc
dec
xchg
xchg
cmp
in
dec
mov
(bad)
outs
cld
iret
push
pop
ficom
sub
and
lea
and
arpl
sub
adc
movs
mov
mov
(bad)
jo
ss
jmp
mov
shr
jno
scas
xor
mov
in
jmp
xchg
jmp
in
loop
ins
mov
push
sbb
push
ja
loopne
hlt
lahf
push
mov
xor
cmc
dec
loope
add
in
loop
mov
or
adc
mov
lea
aas
push
mov
inc
call
retf
das
xor
js
jmp
stos
jmp
cs
xchg
push
int3
repz
mov
pop
push
jnp
adc
pop
mov
dec
add
gs
mov
jae
std
mov
and
or
jne
repz
sbb
rcl
push
adc
and
leave
test
retf
add
pop
adc
dec
or
das
ss
in
jae
adc
dec
popa
test
or
test
mov
call
int
push
push
nop
pop
test
xor
dec
xor
out
inc
call
dec
enter
cmc
sahf
hlt
and
lods
xor
xchg
test
jmp
mov
pop
ret
outs
in
jp
jnp
lahf
data16
fxch
daa
xchg
bound
sar
lea
idiv
fdivr
jbe
lock
xor
retf
lock
jae
cmp
push
js
mov
ja
fmul
dec
test
add
fstp
cmp
call
ins
pop
aaa
aad
sub
or
(bad)
jmp
fidivr
add
push
jmp
and
xchg
jns
inc
pop
scas
jnp
xchg
lea
pop
clc
adc
inc
mov
xchg
ins
test
xor
leave
rcr
and
mov
inc
gs
jmp
rol
cs
mov
sub
inc
push
neg
mov
jmp
cmp
xchg
cmc
inc
dec
mov
push
jg
cs
int3
loopne
out
mov
push
loop
sub
lods
xchg
and
adc
xor
stos
dec
mov
in
and
push
sbb
pop
push
cli
stos
mov
and
ret
arpl
ret
int3
into
jecxz
ds
retf
jno
nop
(bad)
cmp
ret
stos
xchg
pop
(bad)
arpl
dec
dec
mov
xchg
add
sub
cmc
movs
jbe
in
jb
stos
mov
xor
outs
je
out
inc
test
loop
push
inc
fistp
inc
sahf
dec
push
cdq
hlt
rcl
dec
jbe
cmp
imul
es
inc
xor
sub
jmp
cdq
ins
in
jbe
rcl
push
xor
jle
cs
and
or
mov
ss
movs
mov
jmp
int3
mov
and
sbb
add
ja
aas
sub
xor
cmp
adc
inc
repnz
sub
jp
inc
pop
repz
mov
jns
dec
add
es
fisub
jp
lods
fwait
enter
push
test
sub
iret
mov
push
mov
scas
xchg
add
jb
inc
sub
daa
mov
popf
sub
adc
xor
xchg
ret
inc
aas
sahf
rcl
out
sbb
aad
jge
xor
dec
and
jns
cmp
pop
push
shl
mov
mov
int3
and
outs
mov
fdivr
aam
mov
lea
or
cli
cmc
cmps
fwait
xchg
scas
sub
scas
mov
test
test
mov
add
fdiv
or
(bad)
hlt
xor
test
out
push
and
push
outs
mov
xchg
and
popf
sub
popa
into
nop
fwait
mov
sub
cli
cmp
sbb
dec
mov
sbb
push
stos
adc
push
stos
(bad)
and
test
jg
aam
bound
add
jmp
loop
xchg
ror
arpl
ret
ret
call
pop
into
ins
inc
scas
cmp
in
inc
add
(bad)
jmp
aam
cmps
retf
into
mov
and
pop
or
iret
push
cmps
mov
dec
mov
lds
fadd
rol
xor
sub
in
rcr
cmps
sbb
sub
inc
add
jo
push
bound
jnp
call
loopne
and
(bad)
jmp
sbb
out
outs
pop
shr
xor
(bad)
mov
test
add
mov
mov
retf
cmps
test
out
or
xor
sbb
xchg
retf
pop
mov
int
adc
jb
push
jns
fadd
xchg
push
in
sti
mov
mov
dec
cdq
lods
rol
int3
mov
mov
mov
xor
pop
or
cdq
jne
in
dec
or
fs
mov
aad
in
cmp
jne
dec
cmp
or
stos
sub
xchg
ret
jbe
push
and
ret
xchg
ffree
loopne
mov
pop
scas
(bad)
or
sub
mov
dec
and
(bad)
pushf
scas
cmp
inc
lock
jmp
aas
cmp
cli
and
mov
and
hlt
imul
(bad)
cmc
mov
call
or
pop
bound
mov
mov
cdq
test
test
nop
frstor
sar
jp
mov
jno
sbb
in
inc
add
push
mov
int
leave
mov
pop
test
xchg
xchg
test
mov
pop
scas
dec
push
pusha
mov
push
or
or
int
pop
outs
jmp
js
outs
or
fs
ficomp
and
mov
in
inc
xchg
iret
retf
fadd
add
or
movq
xchg
je
rcr
in
push
push
xchg
(bad)
fwait
dec
mov
push
xor
in
xchg
fstp
das
push
add
jmp
pop
xchg
icebp
xlat
push
sub
xchg
faddp
aam
push
inc
shl
jbe
pop
ret
jns
dec
mov
jmp
xchg
mov
mov
xchg
test
int3
pop
pop
rcr
inc
dec
data16
aas
stos
and
js
nop
jle
test
(bad)
adc
jmp
(bad)
in
jb
das
es
add
xchg
inc
pop
adc
shl
mov
xor
xor
adc
push
lods
mov
sub
lods
clc
and
push
stos
dec
mov
rcr
and
rol
sahf
pop
mov
or
push
pop
jns
xor
std
fcmovnu
retf
fidivr
enter
mov
jmp
xor
(bad)
add
push
in
nop
repz
sub
dec
push
dec
jo
and
sub
mov
jns
das
ja
mov
xchg
jle
outs
cdq
pop
leave
mov
mov
xor
imul
(bad)
mov
mov
xor
cmp
sub
xor
jl
shr
jns
adc
dec
jno
add
sahf
das
fimul
jb
mov
or
adc
dec
mov
xchg
or
ret
xlat
adc
sbb
adc
pop
push
lods
retf
js
push
cmp
xor
xlat
fcom
enter
cmp
mov
daa
fwait
mov
xor
or
int
jp
sub
sub
mov
pop
jne
inc
fmul
xchg
and
cmps
mov
push
dec
enter
mov
pop
or
out
retf
pop
dec
mov
(bad)
mov
jae
adc
adc
dec
jl
ins
inc
test
out
inc
inc
cwde
sar
aaa
sub
sar
std
jbe
scas
out
cdq
mov
shl
push
add
idiv
sbb
xchg
jmp
sbb
jmp
test
es
test
movs
movs
cmc
jae
imul
sti
(bad)
cli
iret
sub
scas
cwde
inc
mov
push
mov
cmp
(bad)
clc
js
sub
ror
inc
rol
in
lahf
jae
ds
mov
jge
or
inc
or
jo
adc
xchg
sar
movs
mov
retf
iret
ret
nop
pop
gs
push
cmp
ss
shr
xchg
cmps
push
test
cmp
in
fcmovbe
pop
les
add
add
add
adc
mov
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
lea
lea
push
xor
stos
pop
dec
push
push
push
call
popa
lea
push
cmp
jne
sub
jmp
jmp
push
mov
cld
lods
test
je
push
pop
push
loop
call
jmp
pop
ret
add
add
dec
ins
add
dec
ins
add
sti
addr16
dec
ins
add
