mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
outs
or
mov
and
pop
sbb
mov
ins
not
scas
xlat
jo
cmps
sub
cmps
push
cmp
iret
cmp
scas
dec
fst
mov
mov
aam
(bad)
ror
icebp
inc
jne
je
loop
imul
dec
daa
xchg
jne
out
les
xchg
(bad)
stc
jae
and
div
add
mov
cmp
jmp
cmp
scas
inc
or
in
arpl
les
jbe
(bad)
pop
jmp
imul
setnp
pop
mov
out
enter
cmp
mov
popf
loop
xchg
scas
out
jb
jmp
fucom
add
jle
out
mov
cdq
pop
dec
dec
enter
push
jg
fwait
and
ins
adc
cmp
sbb
ins
xchg
stos
aas
xchg
inc
enter
in
sbb
aaa
fcmovnb
cld
jmp
lock
(bad)
pop
mov
sahf
mov
jg
(bad)
jae
pop
jns
inc
cdq
ror
les
pop
fisubr
and
jg
jmp
mov
arpl
xchg
cmp
in
xor
(bad)
sbb
jg
ficom
lods
(bad)
mov
xchg
int
xor
in
dec
push
stc
push
mov
mov
mov
mov
mov
sub
and
mov
es
mov
sub
push
mov
les
in
or
xchg
aam
mov
nop
pop
push
jbe
lds
or
cmps
add
test
pop
mov
jg
cmp
or
movs
dec
lods
ds
loopne
sbb
add
sbb
push
mov
add
pop
push
mov
push
adc
pop
retf
test
push
push
sbb
fnstenv
xchg
push
scas
jge
xchg
daa
inc
popf
cmp
daa
or
pop
adc
retf
popa
sbb
(bad)
shr
imul
icebp
out
mul
out
movs
sub
mov
repz
(bad)
push
cmp
push
out
dec
push
in
dec
movs
loopne
rcr
xor
xor
xchg
out
adc
mov
loop
movs
or
xchg
mov
lds
scas
mov
in
push
leave
or
jbe
mov
out
jmp
push
pop
iret
cld
add
ins
pop
call
popf
push
cmps
ins
add
jp
and
mov
test
das
shl
add
add
into
xchg
inc
inc
mov
inc
pop
and
push
clc
mov
outs
mov
mov
jns
lods
pop
or
inc
fisub
cdq
mov
out
jne
and
mov
add
test
pop
pop
call
sbb
dec
retf
ja
inc
dec
test
addr16
jge
mov
inc
shl
sub
ficomp
jb
sub
shr
jle
mov
(bad)
ins
pusha
xor
and
or
sub
lock
jecxz
ret
imul
stos
popf
jo
push
or
push
inc
lock
sub
mov
adc
pop
mov
inc
push
test
mov
xor
shl
cwde
xor
or
lock
xchg
add
xor
mov
jnp
aaa
dec
jns
inc
push
arpl
cmp
inc
cmp
(bad)
fidiv
daa
dec
sbb
into
mov
or
fucomi
idiv
call
jp
cmp
mov
ret
lock
stos
rcl
lods
sbb
push
out
mov
dec
and
call
lods
or
xchg
inc
and
xor
pop
ins
inc
es
out
mov
pop
retf
daa
lea
dec
push
push
sub
in
cld
(bad)
fild
ins
mov
cmp
or
(bad)
stc
jecxz
ficom
aam
inc
das
aam
lods
mov
cmp
les
scas
inc
test
retf
cmc
dec
icebp
add
mov
outs
sbb
loopne
sbb
mov
retf
push
dec
inc
bound
cwde
in
cmc
(bad)
fst
sti
sbb
jae
add
inc
out
jg
inc
mov
rcl
call
lock
mov
inc
aad
add
mov
loopne
ja
lods
shr
cmp
add
xor
call
pop
ins
mov
test
xor
push
rol
pop
imul
jnp
mov
sub
jge
cmp
fisttp
inc
mov
sbb
pop
jb
or
dec
in
and
jle
add
cmp
js
cdq
gs
ret
push
shl
retf
mov
cmp
in
sbb
repz
(bad)
addr16
es
or
pop
repz
pop
jecxz
push
push
dec
outs
lods
xchg
lods
pop
pop
leave
mov
xor
jle
das
es
out
mov
in
cmp
into
je
cs
inc
cmp
mov
test
sub
mov
mov
lahf
add
mov
out
aam
fld
xchg
xlat
test
add
pop
ja
ja
(bad)
push
inc
fmul
sub
jmp
sbb
dec
jb
mov
test
xchg
(bad)
xor
daa
xchg
push
push
bound
cmovno
test
lods
sub
fcmovu
lods
inc
mov
pop
mov
cmp
(bad)
sbb
hlt
imul
mov
or
imul
jge
test
pop
outs
out
jbe
jo
mov
enter
fstp
sar
fsubr
sbb
cmc
test
inc
sysret
ja
fdivr
bnd
das
dec
rol
stc
mov
push
lods
in
pop
cmp
or
popf
push
pop
pop
mov
iret
mov
mov
int
or
dec
jle
push
pop
adc
aad
fisttp
stos
xchg
ja
xchg
cld
sbb
outs
mov
and
jne
lock
mov
fsubrp
jg
test
mov
lahf
push
push
dec
das
out
jp
mov
ret
and
or
cmps
push
and
pop
push
dec
std
xchg
or
sbb
jbe
pusha
cmps
mov
int
mov
adc
je
mov
push
push
push
out
cli
pop
pop
push
cmp
int
sub
dec
push
mov
inc
xor
dec
(bad)
fld
int3
mov
mov
test
(bad)
mov
(bad)
cmps
push
ins
cdq
push
mov
add
push
sbb
inc
jl
mov
retf
inc
mov
mul
mov
jmp
jp
xchg
or
cmp
mov
push
sub
dec
xchg
inc
rcr
es
or
(bad)
mov
or
das
cmp
ins
fisubr
jge
scas
sbb
cmp
mov
add
pop
pop
or
mov
fimul
test
xchg
dec
jp
inc
data16
enter
cli
and
inc
arpl
ret
shr
adc
aad
or
in
inc
push
and
iret
pop
ins
jg
retf
mov
sbb
add
jnp
repz
gs
inc
aam
bound
push
mov
pop
enter
gs
lods
push
mov
or
mov
mov
pop
xchg
cmp
leave
int
out
jne
xchg
mov
inc
pop
in
js
cli
dec
into
push
push
repnz
es
push
dec
xor
or
pop
in
inc
je
xchg
fs
mov
xor
in
arpl
pop
cwde
fst
jns
bound
les
push
fwait
dec
cmps
arpl
(bad)
lock
inc
sahf
pop
sbb
retf
mov
ror
xor
mov
ds
add
sub
in
je
daa
retf
jnp
jle
ret
test
ss
popa
add
add
aad
mov
jg
inc
stos
push
jb
sti
dec
jno
or
jae
inc
cwde
xchg
lahf
dec
icebp
mov
(bad)
and
cmp
cli
pushf
and
mov
dec
push
sbb
(bad)
shl
iret
push
mov
js
sahf
add
dec
or
xlat
jne
mov
xchg
call
sti
cli
mov
push
aam
xor
test
pop
pop
or
dec
ja
jecxz
movs
adc
in
or
cmp
(bad)
xor
cld
int3
call
imul
scas
sub
dec
ret
push
ret
bound
arpl
and
(bad)
stc
push
jg
fst
xchg
dec
fbld
sbb
out
dec
retf
int
loopne
cmp
(bad)
out
push
cmp
mov
fcmovne
retf
popa
xchg
adc
leave
xchg
mov
lahf
pop
cmp
je
pop
fmul
scas
in
push
pop
add
add
dec
popf
hlt
jae
aad
es
fcomi
outs
into
shl
cmc
pop
dec
mov
push
mov
(bad)
addr16
push
inc
rcr
gs
imul
pusha
call
popf
or
js
(bad)
fstp
push
repnz
pop
mov
mov
jnp
in
mov
loope
popf
movs
pop
xchg
fwait
mov
mov
mov
leave
fs
mov
inc
and
sub
sbb
(bad)
call
xchg
mov
out
mov
bound
sbb
cmps
fs
mov
fsubr
icebp
out
outs
loop
adc
jl
lods
adc
xor
adc
loop
sar
jbe
and
adc
rcl
cmp
sbb
into
inc
call
jle
ret
cdq
stos
mov
jmp
sub
xor
or
and
sbb
ror
mov
inc
xor
jne
mov
jns
fistp
mov
or
mov
push
jno
mov
sti
mov
cmp
push
mov
dec
sbb
dec
jnp
lahf
int
aad
mov
jge
fisttp
jmp
mov
jbe
jp
call
xor
cwde
int
cmps
or
into
fimul
les
jnp
icebp
popa
cmc
addr16
int
mov
leave
cmp
dec
ss
pop
jb
stc
dec
mov
mov
fwait
push
add
ins
sub
ficom
cld
scas
xor
xchg
add
sahf
pop
call
mul
repz
or
dec
pextrw
test
inc
fisttp
das
das
jge
test
fs
mov
cmps
outs
push
jl
mov
lds
xchg
xchg
mov
push
and
add
pop
daa
aas
push
mov
ja
add
loopne
mov
mov
retf
ret
mov
(bad)
dec
cmp
jmp
clc
leave
jno
das
pop
pop
test
mov
pop
push
or
dec
xchg
mov
sub
imul
ret
ins
dec
mov
mov
sbb
xchg
pop
xchg
mov
cli
xlat
vprotw
ins
cmp
fld
nop
das
xor
inc
dec
jns
das
fbstp
outs
arpl
xor
sbb
dec
scas
adc
cmp
outs
add
xchg
int3
dec
add
enter
fstp
dec
and
call
pop
mov
aad
in
jae
xor
(bad)
jnp
shl
xchg
mov
cmp
(bad)
mov
jns
inc
jmp
mov
inc
call
out
stos
imul
xor
or
mov
sub
aaa
cdq
xor
and
jae
mov
out
adc
or
enter
cmp
dec
stos
scas
aam
in
mov
in
idiv
cmc
sbb
push
add
aam
xchg
movs
pop
mov
stos
daa
mov
lods
mov
sahf
adc
dec
xchg
jge
push
jg
mov
shl
and
stc
xor
sbb
stos
call
cmps
sbb
into
and
ror
adc
dec
in
pop
ror
stos
inc
pop
cmp
jge
pop
std
int3
push
push
gs
mov
sub
inc
out
std
add
sub
bound
xor
jl
cmp
xchg
xor
fdivr
jne
addr16
es
sub
inc
dec
popf
mov
ror
mov
inc
jle
aam
pop
adc
pushf
mov
stos
jbe
fld
xchg
cli
mov
pop
xor
stc
xchg
pusha
test
mov
mov
daa
(bad)
dec
rcr
fdivr
cmp
xchg
inc
and
clc
fidiv
fbstp
repnz
into
mov
ins
xchg
push
hlt
push
retf
(bad)
rol
in
aaa
xchg
pop
xor
leave
xor
les
bound
xor
int
ror
je
jns
push
jbe
clc
leave
je
pusha
cmp
imul
fs
push
les
inc
test
fstp
and
adc
je
sbb
push
mov
dec
dec
dec
cmp
sbb
dec
sahf
aas
(bad)
mov
test
add
hlt
outs
aaa
sbb
loop
cmp
mov
jg
popa
cmp
ja
pop
mul
in
xor
mov
cmp
push
into
rcr
mov
cmp
add
xor
lds
div
jbe
sub
fadd
add
xchg
not
lods
add
jmp
idiv
dec
nop
inc
push
and
mov
js
ins
push
rcl
push
stos
sub
mov
add
inc
lods
jae
stos
ret
out
ins
dec
add
xor
mov
int3
lock
and
imul
sbb
push
push
outs
(bad)
(bad)
ret
mov
iret
inc
mov
or
sub
adc
cmp
mov
sahf
push
add
das
add
mov
ds
retf
jns
push
(bad)
(bad)
push
jmp
lods
rcl
jae
mov
test
ret
repz
xchg
pop
iret
pop
cmps
sahf
cmc
add
pop
das
mov
xlat
push
push
out
xor
gs
xchg
jmp
sbb
fdivp
xchg
inc
and
add
iret
into
sti
pusha
push
add
shr
xchg
dec
jecxz
push
out
and
outs
enter
sub
pop
into
cdq
push
add
shl
call
sbb
(bad)
push
push
popw
jge
pop
and
into
inc
dec
icebp
pop
pop
hlt
xor
fsubp
les
lods
mov
mov
nop
dec
adc
dec
sahf
sub
mov
cmp
idiv
test
lock
and
cmps
out
fld
xchg
sub
or
push
mov
push
cmc
das
xor
and
dec
mov
mov
mov
mov
xor
or
mov
aaa
out
xor
pop
call
mov
mov
dec
add
pusha
sub
cmp
fcmovnu
ss
inc
cmps
pop
inc
sub
mov
and
xor
push
out
pop
lahf
xlat
add
into
or
fucomp
gs
repz
push
into
inc
js
ins
dec
and
xor
out
das
test
fbstp
adc
scas
scas
mov
xchg
call
mov
shl
mov
adc
dec
fwait
aam
add
mov
cwde
cwde
mov
cmp
into
pop
cli
aaa
dec
push
fucomi
arpl
or
jb
clc
sbb
pop
daa
jno
mov
scas
jecxz
pushf
les
repnz
jns
adc
push
shl
loop
in
mov
add
mov
dec
push
add
pop
inc
clc
pushf
adc
add
push
xor
adc
fld
or
push
cld
mov
xchg
mov
icebp
aad
lea
add
iret
popa
dec
add
jmp
in
pop
fist
out
shl
cmp
fwait
mov
jle
and
imul
or
mov
xchg
rcr
int3
mov
mov
call
cmp
aas
mov
hlt
cmp
ret
xchg
in
mov
sub
sbb
cmc
push
call
mov
int3
lahf
cmp
jmp
es
stos
jmp
repnz
jne
fld
push
int
push
xchg
push
ins
xlat
(bad)
jb
mov
(bad)
jg
hlt
sar
mov
add
out
mov
and
outs
int
or
adc
pop
ror
fsubr
xlat
jl
cmp
popa
jo
pop
jo
jle
and
xor
(bad)
popa
repnz
retf
push
mov
mov
scas
mov
and
xor
addr16
stos
ror
mov
icebp
jmp
cmp
dec
repnz
(bad)
fcmovne
mov
mov
lahf
das
mov
rol
mov
inc
stc
jb
cld
jle
inc
iret
inc
push
retf
or
(bad)
fs
jecxz
pop
cli
add
adc
xor
mov
xor
pop
adc
and
mov
add
jne
pushf
mov
stc
push
imul
test
pop
mov
retf
adc
lods
fild
sti
mov
dec
cmp
inc
pushf
and
cmp
mov
xchg
pop
add
mov
mov
mov
inc
adc
pop
or
idiv
rcl
inc
lds
les
pop
(bad)
mov
cli
push
and
cmc
xchg
adc
and
sub
jmp
lea
jmp
push
sub
and
mov
sbb
cmp
iret
fsub
cmc
mov
sub
xor
and
pop
rcr
sub
gs
pop
push
inc
pushf
sahf
or
cmp
or
cwde
(bad)
pop
loop
dec
das
aaa
pop
sti
fwait
enter
jbe
fwait
jbe
mov
mov
rcr
fdiv
sbb
scas
inc
aaa
pop
inc
ins
frstor
sub
mov
xchg
idiv
int3
push
jns
loop
test
test
aas
aad
xor
jo
popf
enter
pop
pop
test
in
fiadd
xor
aad
xor
cs
sti
inc
arpl
dec
int
std
xchg
int3
xor
imul
lds
imul
mov
mov
not
xlat
in
push
dec
sub
xchg
jle
ins
pop
mov
cmp
shl
ret
mov
ja
fild
push
jbe
loope
dec
push
sahf
inc
sti
lock
cwde
das
daa
sbb
mov
xor
adc
les
ds
xchg
test
jbe
pop
push
lahf
out
xor
xor
sub
cmps
mov
outs
and
test
std
lea
and
cs
xor
jo
ss
sub
cmp
scas
inc
lds
fld
xchg
ins
xor
fs
mov
scas
popf
fwait
pushf
fsubr
daa
push
dec
mov
int
ret
or
adc
out
push
lds
je
sub
xchg
ffree
fisubr
sahf
retf
mov
xor
out
scas
(bad)
adc
inc
xor
ror
outs
inc
out
cmp
adc
ds
lds
popa
mov
xchg
mov
clc
psubd
call
cdq
cli
sbb
les
inc
xor
(bad)
xchg
push
xchg
push
aad
xchg
and
cli
sbb
addr16
pop
mov
xchg
sub
test
cli
adc
push
pop
xchg
xchg
xchg
cmp
add
and
enter
adc
adc
(bad)
stc
sub
sub
rcl
icebp
loope
or
int3
mov
les
push
sahf
mov
mov
dec
gs
dec
shl
cmp
push
les
iret
sbb
imul
(bad)
scas
xchg
clc
fwait
or
jae
mov
lock
mov
jmp
or
dec
add
mov
js
jmp
mov
ins
imul
xchg
dec
cmps
fsubr
lahf
xor
jbe
ins
mov
repnz
mov
inc
sbb
inc
push
fnop
mov
jmp
push
pop
sbb
retf
movs
sbb
push
outs
sbb
(bad)
sbb
pop
(bad)
jno
out
cmp
call
and
mov
outs
cmp
xchg
sar
lahf
loop
xchg
dec
lea
sub
jmp
(bad)
xchg
mov
jo
iret
int
cmps
pop
or
sub
repnz
push
fsub
mov
mov
sbb
and
xor
mov
pop
xchg
cmp
pop
dec
in
and
pusha
fidiv
sub
jecxz
fcomi
movs
sub
xor
(bad)
fild
jnp
je
adc
retf
cwde
xchg
clc
push
and
add
cmps
push
pop
inc
add
ret
in
xchg
repz
push
in
jmp
xchg
rol
loopne
lahf
pop
push
into
jmp
pusha
mov
mov
push
mov
push
jp
sbb
es
push
mov
sbb
inc
es
repz
jnp
jnp
in
ret
dec
push
add
xor
jo
push
add
inc
into
aam
inc
lods
inc
push
and
pop
inc
cli
retf
add
out
fmul
call
repnz
cmc
bound
test
(bad)
mov
shl
psllw
fsubp
repz
mov
call
push
cmps
aad
push
xchg
jmp
mov
dec
dec
dec
movs
jae
sbb
inc
sub
pop
add
neg
pop
mov
test
pop
sub
push
and
cs
ret
(bad)
out
lock
lahf
add
jp
pop
retf
mov
xchg
and
mov
data16
adc
mov
adc
in
icebp
test
mov
ror
aaa
dec
jle
js
mov
outs
adc
push
or
cmp
inc
adc
clc
jmp
dec
cs
xchg
sbb
js
mov
hlt
jge
aam
pop
aad
jmp
dec
inc
push
fwait
dec
jne
inc
fcmovnb
mov
sti
test
xchg
pop
and
and
push
out
imul
push
ins
pop
cld
push
aaa
inc
pop
or
inc
pop
jns
xchg
add
cmp
jle
aam
ret
add
fstp
int3
cmps
add
mov
lods
xchg
sbb
mov
inc
fdivp
sahf
(bad)
clc
(bad)
pop
inc
mov
cwde
cmps
hlt
ins
mov
(bad)
jl
retf
fucom
mov
cs
ds
push
and
mov
jle
loop
loope
xchg
jmp
int
loop
cmp
lahf
dec
rol
push
sar
ror
mov
or
lock
or
sub
bound
mov
ja
add
add
fcom
or
sub
aam
movs
jg
adc
nop
push
xchg
ret
sub
sub
add
inc
mov
dec
test
lahf
shl
lea
jns
push
fstp
bnd
push
sbb
test
dec
stc
pop
mov
int
test
push
sub
out
das
mov
jo
jmp
adc
add
test
je
jp
adc
ss
dec
cmp
adc
sub
mov
arpl
out
mov
xor
and
xchg
mov
push
jbe
retf
stos
push
inc
cmp
mov
add
fwait
inc
push
add
jne
test
inc
enter
or
dec
je
cmp
push
rcl
pop
mov
or
push
sub
js
outs
lea
mov
jmp
mov
stos
int3
inc
mov
push
test
cs
mov
lock
xchg
fisub
enter
sahf
fst
xchg
in
loopne
push
ss
pushf
sub
sbb
popf
pop
mov
cmps
add
js
jmp
int
movs
fstp
mov
cwde
test
clc
mov
fisttp
outs
jnp
mov
mov
stc
sbb
cmc
fisubr
or
outs
xor
xor
sbb
shl
push
das
push
mov
jnp
inc
adc
jl
popa
mov
and
daa
retf
jne
jge
sbb
mov
dec
or
es
stc
xchg
(bad)
(bad)
mov
fstp
lods
stos
adc
jl
aas
aas
fcom
xor
jne
ss
xlat
out
jne
sbb
cmp
shl
jbe
pusha
out
out
fucomip
popf
test
mov
stc
test
lahf
hlt
adc
ja
leave
outs
call
xor
push
sbb
fcmove
nop
ret
in
fisttp
sub
(bad)
push
cmp
xchg
sar
sbb
cmp
xchg
in
punpckhwd
mov
into
jno
jmp
mov
and
mov
jns
pop
mov
xchg
jg
cdq
push
mov
jge
xor
dec
push
repz
syscall
dec
mov
jno
mov
cmp
stc
arpl
add
mov
inc
and
cmp
data16
inc
xor
inc
outs
pop
shl
mov
pop
ret
inc
fisttp
es
xor
addr16
push
jo
push
sub
mov
test
cli
nop
sar
iret
rcl
inc
inc
mov
cmp
nop
mov
ss
outs
mov
push
sub
cmp
ret
or
adc
and
in
in
push
ret
jl
mov
adc
pop
mov
jb
inc
dec
icebp
xor
cmc
inc
test
lds
sub
div
add
adc
xchg
repz
div
xchg
and
in
pop
jmp
mov
lds
aas
pop
and
or
lods
sar
ins
inc
or
imul
jmp
sub
xlat
inc
jo
jnp
aad
inc
dec
push
mov
cvtdq2ps
loope
xchg
sub
and
das
popa
aaa
push
mov
inc
repnz
dec
sub
sub
and
dec
fstp
aam
pop
hlt
in
mov
mov
outs
fwait
cmp
sub
or
loope
lods
lods
mov
mov
mov
xor
jle
pop
retf
push
push
or
sbb
sahf
jge
jno
dec
sbb
ins
(bad)
(bad)
int3
cmp
int3
ret
add
jbe
jnp
fwait
movs
sub
in
sbb
(bad)
push
sbb
pop
and
pop
jnp
ror
dec
adc
cli
jl
scas
rol
xchg
fbstp
mov
push
mov
inc
sub
in
mov
mov
sub
push
mov
stc
das
push
mov
fcomip
leave
pusha
mov
xchg
in
repz
cmp
inc
mov
push
fisttp
scas
sti
dec
xor
mov
jl
popa
pop
pop
dec
jno
out
dec
or
or
cmps
push
neg
mov
push
in
push
adc
dec
mov
xor
pop
and
or
pop
pop
arpl
ror
int
xor
test
repz
push
and
add
int
mov
in
leave
das
dec
ss
push
ror
xlat
sub
mov
xor
fs
ins
fld
mov
sub
xchg
in
mov
sbb
jl
mov
aas
ss
inc
mov
das
cwde
in
cld
push
(bad)
dec
ret
push
adc
lods
pushf
nop
iret
mov
xchg
xlat
pop
dec
rcr
pop
dec
jbe
pop
fcom
dec
mov
mov
in
rcl
xor
xchg
inc
xor
jmp
cmps
xchg
call
nop
push
mov
mov
test
add
push
mov
fbstp
lock
ss
ficom
mov
mov
push
fsub
add
mov
repnz
mov
pop
sub
fwait
cmps
inc
(bad)
and
and
dec
cmp
scas
fild
(bad)
push
xor
pop
and
div
pop
inc
mov
rcr
add
xchg
lds
xchg
cs
inc
loope
add
fsubr
jle
xlat
jns
cmp
push
iret
pop
pop
pop
sar
ds
and
clc
je
ret
jns
loope
sub
aaa
inc
pushf
fidiv
inc
rcr
adc
mov
adc
sbb
mov
pop
and
les
es
xchg
or
aad
adc
iret
leave
sbb
sar
(bad)
mov
hlt
jle
neg
pop
loopne
cmp
push
pop
cmp
xor
push
pop
lods
not
ret
scas
add
mov
int
and
jns
cmp
mov
dec
dec
mov
cmp
dec
xlat
push
sbb
(bad)
mov
adc
and
cwde
or
imul
inc
ja
sub
inc
nop
(bad)
lock
jg
test
gs
popf
add
or
xor
dec
iret
fldenv
push
out
adc
gs
std
scas
stos
inc
loope
xlat
pushf
pop
jecxz
jns
adc
cli
and
push
cli
push
ds
shl
inc
das
xor
and
stc
xlat
pop
dec
dec
adc
jecxz
pop
nop
mov
test
mov
mov
xor
mov
cld
dec
repz
rcr
push
and
icebp
push
cmp
or
cmps
xchg
scas
mov
push
(bad)
pop
jo
or
out
pop
int
mov
pop
in
jge
mov
inc
xor
add
xlat
xchg
sbb
xchg
mov
lods
xlat
adc
(bad)
test
ret
stc
push
or
and
xchg
jne
rcr
rol
ja
fsub
cdq
sub
add
inc
mov
cmovb
adc
outs
xor
adc
rcl
cs
cld
pop
inc
loop
lods
retf
nop
pop
data16
jb
in
and
das
ror
add
out
dec
out
push
iret
in
jmp
loope
call
xor
dec
dec
mov
and
lock
push
mov
lods
popf
mov
daa
dec
ffreep
mov
fdiv
push
addr16
pop
stc
scas
sub
stos
popa
push
js
arpl
shr
cmps
or
xor
jp
cmp
ja
loopne
push
mov
and
aad
push
xchg
mov
jae
int3
je
out
mov
push
idiv
xchg
adc
fs
push
push
out
sub
mov
std
or
pop
mov
test
add
cld
dec
dec
pop
mov
jo
mov
cmp
ret
and
cmp
pop
(bad)
sub
lea
cmp
add
test
fdiv
ret
dec
retf
xor
cmp
jmp
inc
sub
int
popa
test
add
mov
pusha
gs
(bad)
cmp
rcl
test
mov
push
cmp
shl
(bad)
adc
inc
inc
fidiv
les
add
adc
mov
sbb
mov
lahf
jecxz
mov
jnp
jmp
iret
mov
stc
jecxz
(bad)
dec
popf
pop
aaa
cmp
adc
adc
hlt
mov
sub
inc
jno
std
repz
hlt
jmp
jnp
adc
xchg
pop
in
xchg
jge
lahf
daa
fcom
movs
scas
pop
inc
sbb
push
inc
out
mov
mov
int
dec
jo
xchg
adc
cwde
jecxz
js
dec
and
mov
(bad)
outs
ja
adc
sbb
push
gs
xchg
mov
daa
sub
ret
add
inc
mov
rcr
cmps
mov
gs
sahf
out
cwde
lea
inc
shr
sar
std
add
mov
and
xlat
mov
lds
cdq
dec
adc
inc
popa
test
(bad)
cwde
sub
add
inc
icebp
mov
mov
or
out
ret
test
cli
xchg
fcmove
cmc
test
and
add
mov
and
int3
inc
out
xchg
hlt
and
pusha
push
or
mov
in
push
xchg
cwde
lock
jmp
aas
jo
(bad)
add
jo
adc
imul
out
int
mov
stos
jmp
addr16
pop
ds
sbb
iret
stos
stos
jecxz
xor
xlat
(bad)
icebp
aaa
cmp
jl
stos
jns
cmps
mov
(bad)
mov
out
nop
push
aaa
ds
sbb
mov
mov
ins
call
sub
call
popf
popa
pushf
push
out
sub
cmp
mov
retf
xchg
add
push
xchg
mov
push
fmul
retf
xlat
and
iret
mov
mov
add
dec
daa
dec
pop
mov
movs
fimul
pop
adc
sub
ins
shl
std
repz
loope
xchg
call
cmc
scas
sti
adc
mov
xor
imul
hlt
shr
cmps
jle
fs
inc
sbb
sbb
(bad)
sub
add
pop
movs
mov
aad
xor
sbb
loop
outs
inc
xor
adc
pop
pop
xchg
fnsave
retf
leave
scas
sbb
xchg
mov
or
ins
retf
out
xchg
fidivr
and
addr16
mov
movs
and
push
arpl
dec
mov
sbb
or
push
pop
and
stos
or
xchg
std
jno
int3
cli
js
retf
test
nop
mov
stc
inc
ja
aam
and
imul
int
mov
xchg
or
jl
push
xchg
xor
sbb
fdivr
jo
sti
pushf
test
popa
or
or
inc
or
leave
push
out
or
sbb
and
jmp
add
mov
mov
xor
mov
xor
mov
sbb
mov
dec
mov
jne
add
mov
sbb
or
sbb
cmp
aaa
add
add
mov
out
adc
fld
pop
xchg
fisttp
push
std
jle
add
sbb
fnstenv
mov
cmc
movs
fiadd
mov
mov
cdq
pop
movs
outs
jbe
inc
test
and
lods
clc
movs
xor
test
scas
mov
inc
sbb
add
mov
popf
inc
loop
pop
cwde
mov
icebp
out
pop
out
div
push
xor
push
dec
sub
mov
popa
pop
je
jmp
xchg
mov
stos
mov
scas
inc
inc
push
mov
inc
push
or
repz
dec
push
push
push
xor
icebp
add
fcmove
pop
repz
sbb
cmp
pop
imul
lds
imul
stos
pop
rol
xor
(bad)
push
pop
lea
xlat
in
rcl
xchg
ret
cmps
sar
scas
outs
cld
pop
jp
icebp
push
int3
dec
in
(bad)
test
pop
and
jecxz
js
mov
add
in
adc
mov
rol
mov
mov
imul
jb
in
push
jo
and
sub
pop
add
stc
push
cwde
cmp
inc
call
cmc
push
sbb
popf
inc
mov
push
pop
adc
and
stos
inc
outs
stc
adc
lahf
adc
aam
outs
mov
dec
repnz
adc
and
adc
mov
xor
scas
cld
add
test
xchg
(bad)
sbb
call
push
sub
jbe
leave
(bad)
jnp
inc
test
call
(bad)
std
add
pop
xor
and
mov
mov
rcr
aam
or
xchg
fisttp
xchg
(bad)
test
pusha
scas
pop
mov
in
push
xchg
(bad)
fisttp
cmp
fmul
outs
out
out
push
aad
push
push
add
dec
pushf
jle
xchg
sbb
not
dec
push
int
jb
fdivp
mov
(bad)
mov
outs
xchg
dec
sub
out
adc
push
pushf
ror
push
ret
pop
add
cmp
jge
and
nop
mov
pop
xor
fdiv
daa
adc
mov
pop
out
mov
sub
inc
mov
or
xchg
adc
mov
xlat
data16
repz
js
xchg
jae
outs
shl
mov
in
ja
xor
ins
mov
mov
push
adc
fisub
idiv
mov
sbb
dec
imul
xchg
cmp
aam
or
cmp
or
scas
sub
fnstcw
xchg
xchg
cmp
or
sub
xchg
icebp
sbb
and
sub
add
fcmove
jmp
ret
dec
stos
dec
leave
add
repnz
(bad)
xchg
push
fsubr
ins
loop
cmps
repnz
fisubr
nop
aad
jno
pop
fnstsw
push
xor
fnstenv
sbb
lods
pusha
pop
sbb
loopne
fidiv
js
or
ds
add
dec
xchg
stos
mov
push
mov
(bad)
mul
cld
dec
mov
xchg
xor
test
retf
sahf
mov
ja
retf
scas
fs
cmc
stc
loope
(bad)
mov
push
pop
cmps
cdq
hlt
adc
scas
fist
ss
movs
or
stc
jmp
jae
lea
mov
test
mov
push
fidiv
jp
mov
stos
sub
inc
sub
adc
push
mov
sbb
inc
out
xor
jno
cmp
popf
inc
mov
xor
xchg
xor
jb
pop
xlat
adc
pop
dec
xor
inc
mov
icebp
cmp
jmp
push
aas
xchg
cmp
mov
xor
nop
cs
xor
test
jecxz
stc
pop
mov
cdq
dec
push
hlt
cs
mov
sti
cwde
je
(bad)
stc
lock
mov
mov
es
pop
nop
add
iret
lods
mov
sub
(bad)
mov
retf
rcl
movs
adc
xor
jmp
outs
(bad)
test
cs
mov
cmc
int
inc
pop
popf
dec
hlt
scas
outs
mov
call
mov
xor
pop
and
sbb
xchg
pop
(bad)
xor
jg
pop
jecxz
adc
mov
das
call
(bad)
rcl
out
mov
sbb
call
sbb
mov
fild
inc
cmps
push
mov
cmps
mov
repz
in
stc
add
ins
loop
inc
fldcw
ret
mov
push
add
inc
and
jp
ror
loop
cmp
(bad)
pop
loop
xor
xlat
cmp
or
lods
scas
cld
lods
cmp
xchg
inc
pop
bound
push
ins
sub
ret
loope
sub
les
sub
pop
sub
call
push
(bad)
jmp
sbb
aad
jl
push
fld
push
gs
test
fisubr
mov
jp
mov
pop
or
lods
ja
outs
jno
mov
ss
and
daa
push
call
mov
mov
fsub
sub
cmp
inc
jno
jge
loopne
adc
xor
inc
adc
das
cdq
push
cmp
(bad)
mov
pop
or
mov
cmp
add
sbb
jmp
mov
push
mov
ret
cmp
mov
out
mov
(bad)
nop
push
repnz
jo
adc
dec
mov
or
pusha
push
in
test
jmp
jl
shl
jb
mov
popa
dec
mov
mov
or
in
jecxz
push
daa
das
jmp
popf
and
inc
mov
push
and
lock
sti
jp
aaa
in
hlt
jo
ins
(bad)
xchg
out
outs
mov
and
sub
repnz
imul
cmps
jmp
sbb
out
push
pop
ins
adc
sti
imul
push
aad
push
xchg
xor
cld
test
pop
mov
popf
mov
loop
cmp
or
push
jecxz
push
mov
xchg
cmp
stos
inc
aam
leave
pop
ror
pop
iret
adc
stc
pushf
or
pop
lods
sub
and
daa
(bad)
sbb
and
cdq
in
pop
push
ret
and
ror
add
inc
xchg
or
dec
adc
sub
push
test
movs
or
pop
in
test
or
mov
cmp
popf
mov
sub
mov
out
sbb
cmp
cmp
outs
jo
inc
(bad)
push
inc
popa
clc
js
out
adc
int3
int3
fild
lods
(bad)
ret
ret
ins
push
fnsave
dec
dec
es
dec
jne
mov
std
inc
and
add
call
lods
movs
jnp
inc
mov
dec
test
xor
and
sub
out
push
mov
mov
xchg
sub
popa
pop
stc
jae
fcmovnb
outs
jmp
mov
or
and
and
pop
cwde
addr16
(bad)
pop
sbb
cmp
int3
and
xor
mov
cmp
inc
ret
in
mov
popa
xchg
pop
test
mov
pop
mov
xchg
pop
(bad)
pop
iret
ss
jno
aam
rcr
ja
popa
add
push
mov
repnz
mov
jmp
sub
ds
sub
inc
cmp
movd
loopne
jmp
(bad)
pop
push
cmps
shl
aad
push
stos
jp
retf
cmp
adc
add
cmp
dec
xor
adc
mov
jl
dec
in
sub
cmp
call
stc
in
fisub
pop
loope
movs
pop
jg
(bad)
mov
dec
xor
sbb
jle
jnp
pop
out
pushf
sub
js
lods
sti
sbb
loopne
call
jnp
sbb
ss
mov
jno
pop
push
or
dec
fist
scas
out
cwde
and
mov
jmp
push
sbb
movs
add
fild
lahf
daa
sbb
sub
jp
pushf
bound
xor
sub
and
loope
xchg
lods
inc
fcomp
out
mov
fmul
inc
je
int3
mov
push
jae
mov
xor
push
out
je
lock
dec
cwde
mov
jg
mov
aas
jecxz
and
outs
mov
sub
mov
cwde
imul
jae
cmps
leave
inc
sub
jnp
cs
fsubr
add
adc
arpl
add
es
or
sub
fsubr
mov
push
xchg
sti
mov
sub
jo
out
mov
mov
jo
mov
add
fnstsw
jmp
push
test
xor
loop
pop
out
stc
add
iret
call
leave
sub
push
shl
js
and
cmp
cmps
(bad)
adc
aad
sti
sbb
mulps
jb
fistp
mov
xor
into
sbb
pop
add
xchg
shr
call
xlat
test
int3
mov
out
xchg
loope
test
lods
jmp
pop
xor
pop
jp
int3
repz
dec
movs
mov
(bad)
retf
xor
(bad)
and
pop
inc
cld
jecxz
push
sbb
ins
pop
pop
ds
in
fcom
outs
fdivr
outs
test
stc
fsub
push
jb
jecxz
inc
mov
stc
pusha
push
les
xchg
outs
aaa
sbb
in
daa
(bad)
fs
mov
pop
aad
mov
xor
outs
stc
stos
jecxz
push
(bad)
and
mov
imul
add
inc
out
push
ficomp
mov
ds
add
push
dec
data16
sbb
loop
movs
adc
call
clc
es
pop
(bad)
lods
xchg
jbe
push
inc
rcl
jmp
sub
jmp
sbb
adc
out
cmp
repz
dec
jecxz
mov
shl
rcr
xor
rol
movs
mov
jecxz
push
pop
pop
hlt
cdq
xor
(bad)
xchg
int
mov
xchg
or
cli
ss
add
xlat
cli
not
in
mov
iret
xchg
and
mov
sub
mov
or
es
fstp
es
xor
mov
adc
pop
pop
call
xor
xchg
sub
ins
out
adc
mov
addr16
and
pop
js
mov
lea
and
ins
cmp
cmc
retf
je
outs
ins
push
pop
cmp
(bad)
push
lods
inc
push
mov
(bad)
and
mov
inc
rcl
cdq
loopne
loopne
arpl
jmp
aaa
adc
sbb
aas
mov
xchg
inc
icebp
bound
out
mov
lock
ficomp
int
mov
cmps
jne
sbb
xor
test
sbb
repnz
cli
(bad)
push
dec
and
leave
inc
movs
add
jp
popa
xchg
pop
test
xchg
lock
gs
sbb
dec
outs
inc
and
mov
dec
mov
mov
xor
icebp
add
aad
adc
repnz
das
mov
adc
movs
into
popa
mov
push
cmp
call
ins
imul
clc
cmp
cmp
xchg
ja
mov
les
mov
fadd
jo
popf
xor
inc
lods
mov
pop
out
arpl
fwait
jge
adc
xchg
adc
mov
movs
(bad)
imul
and
mov
sub
fld
call
in
shl
outs
jmp
jne
jecxz
in
jge
dec
bound
data16
push
mov
bound
add
jbe
cmp
push
aad
dec
sub
rcr
push
mov
pop
movs
xor
mov
and
inc
scas
jecxz
mov
xlat
mov
push
minps
add
sbb
dec
nop
cmp
cmc
jp
and
mov
je
outs
or
cdq
fcom
dec
pop
icebp
xchg
aam
pop
rol
out
ret
lock
nop
jl
scas
sbb
mov
xor
cli
mov
add
cmps
push
inc
div
inc
test
cmc
pop
aas
jg
push
pusha
inc
cmps
xor
dec
and
xlat
lea
mov
dec
jge
mov
or
pop
aam
push
jmp
add
fadd
cli
into
mov
pop
imul
dec
cmp
dec
dec
les
dec
ins
inc
mov
cmc
inc
sub
push
loope
mov
pop
or
xor
mov
stc
cdq
xchg
sahf
aas
fsub
call
cmp
retf
xor
arpl
push
mov
jno
jns
shl
and
fild
inc
xchg
push
lods
fxch
(bad)
pop
daa
jp
jne
jbe
fcmovnu
fimul
lds
adc
es
jns
(bad)
test
cmps
mov
arpl
nop
or
sbb
mov
pop
lock
sti
ins
lock
je
(bad)
adc
loope
call
jnp
aas
mov
bound
pop
test
pop
adc
in
xchg
pop
movs
ret
mov
fwait
retf
into
adc
shl
add
loopne
mov
dec
(bad)
mov
mov
je
fadd
mov
(bad)
sahf
cmp
push
or
jns
das
lahf
lods
mov
loopne
push
add
fmul
pusha
pop
rcr
push
inc
push
bound
call
sbb
add
push
test
cld
xor
clc
retf
jge
in
gs
and
adc
imul
adc
(bad)
mov
ins
(bad)
outs
add
cmps
fadd
jno
cmp
mov
add
cmp
ja
fs
push
jo
fisub
fdiv
or
enter
in
push
arpl
push
nop
int
and
sub
fmul
cmps
pop
push
(bad)
test
jmp
mov
fidiv
bound
test
call
xor
or
mov
pop
and
or
sbb
aam
push
rcl
fs
repnz
daa
pop
mov
in
pop
cmp
inc
dec
movs
loope
int
das
xor
inc
dec
call
into
icebp
jmp
pop
adc
cmp
push
dec
(bad)
xor
test
repnz
sub
add
sub
(bad)
mov
cwde
xchg
aas
adc
gs
push
xchg
pop
and
add
xchg
dec
ret
xor
xchg
loop
xchg
daa
je
and
or
adc
rcl
lods
dec
pop
jmp
mov
jbe
scas
dec
arpl
or
mov
daa
es
pop
outs
add
add
aam
out
push
xor
test
aaa
idiv
fisub
out
shl
mov
test
and
jbe
call
repnz
and
aad
sbb
fisub
imul
adc
xor
leave
lods
inc
pop
into
or
lds
pop
in
pop
jno
push
mov
and
cdq
out
je
pop
fdiv
mov
stos
xor
(bad)
mov
dec
out
adc
sub
mov
js
aad
add
iret
shl
loope
sahf
outs
xlat
retf
cmp
or
adc
icebp
inc
add
xchg
pop
push
jg
lds
add
pushf
inc
fstp
add
xor
mov
cmp
popa
fmul
or
mov
pop
lea
pop
pusha
int3
test
into
mov
xor
loop
jno
mov
(bad)
mov
and
jnp
mov
(bad)
in
outs
adc
ret
xor
in
cmp
(bad)
pop
aaa
in
cmc
scas
mov
into
popa
das
adc
rcr
stos
sub
test
in
dec
das
mov
inc
rcr
retf
iret
int
cmc
pop
imul
bound
xchg
pop
xchg
neg
xor
mov
push
mov
scas
into
adc
(bad)
dec
dec
addr16
pop
ins
dec
outs
cli
iret
push
fdivr
scas
push
mov
cmps
jmp
pusha
mov
(bad)
out
scas
loopne
xor
xchg
mov
adc
sub
mov
sbb
jne
push
nop
in
mov
mov
pop
mov
gs
lods
mov
ror
or
pusha
xchg
rcl
jo
xor
cmp
mov
cmc
fst
imul
jge
call
sub
outs
pop
add
cmps
xchg
add
or
arpl
imul
mov
and
loop
repz
add
add
mov
lds
xchg
dec
jp
lahf
fld
inc
stos
sub
mov
aad
movs
push
xchg
push
xor
pop
movs
rcr
fwait
mov
adc
ror
lods
scas
dec
arpl
test
in
lock
and
push
dec
mov
call
mov
(bad)
mov
add
mov
(bad)
mov
sub
int
pop
leave
push
push
push
pop
pop
int3
push
test
xchg
dec
int3
fisttp
pop
popa
pop
ret
(bad)
in
(bad)
loop
xchg
ret
(bad)
mov
cdq
mov
addr16
dec
rcl
cdq
nop
imul
les
in
or
std
cmps
ror
jnp
pop
inc
adc
icebp
repnz
call
sub
inc
cmc
lahf
jp
push
xor
lods
lods
cli
xchg
sbb
mov
scas
push
iret
retf
or
push
push
scas
repz
mov
and
inc
imul
sub
xor
(bad)
test
sahf
dec
jge
xchg
fimul
scas
fbld
fwait
xlat
fmul
xchg
stc
in
pop
test
movs
clc
retf
adc
out
xchg
dec
sbb
call
retf
jo
loopne
test
retf
fisub
xchg
add
fsubr
cmp
mov
(bad)
in
cwde
push
jg
mov
or
cmps
sbb
imul
test
inc
(bad)
mov
mov
rol
or
pushf
icebp
fist
pop
pusha
cwde
call
(bad)
pusha
fimul
mov
cmp
mov
mov
mov
xchg
data16
inc
push
loope
stos
ror
or
xchg
out
fwait
push
movs
pop
je
ret
jg
in
mov
sub
adc
movs
adc
ins
int
out
inc
push
sub
mov
jnp
shr
mov
rcr
pop
xor
retf
call
das
sar
(bad)
fild
pop
push
jmp
test
stos
lods
das
pop
cdq
sbb
fwait
gs
je
rcl
std
xlat
fdiv
or
cmp
mov
add
retf
xor
or
cmp
fstp
inc
aaa
ja
(bad)
loope
adc
inc
push
sbb
jbe
pop
mov
jg
test
addr16
pop
xor
and
push
sub
pop
retf
(bad)
loope
inc
lods
jo
les
rol
pop
xor
pop
xchg
loope
int
push
push
mov
in
cmp
loope
ins
retf
jns
aad
inc
icebp
add
mov
add
and
or
dec
pop
loopne
or
nop
jmp
jge
adc
(bad)
hlt
or
xor
inc
fnstenv
mov
cli
sbb
retf
mov
leave
int3
mov
ds
shl
sbb
cmp
popa
in
push
hlt
push
movs
pop
test
shr
sbb
sbb
push
imul
and
or
adc
cld
mov
xchg
scas
add
idiv
bound
sbb
sbb
fsub
dec
inc
cmps
loopne
jl
loop
sub
(bad)
fadd
mov
mov
loopne
imul
or
mov
dec
rcr
lea
jne
dec
xchg
sub
cmps
push
cmp
mov
pop
iret
sbb
cli
xor
xchg
fild
fistp
loopne
mov
ffreep
push
fdivr
xchg
jg
cmp
push
push
lods
and
jae
lds
loop
inc
dec
sub
sub
call
arpl
dec
sti
fwait
(bad)
in
test
and
jns
add
aad
ss
xor
cmp
fmul
bound
push
mov
jle
cli
pusha
pop
and
cmp
iret
aad
pop
addr16
mov
cmp
mov
xor
inc
inc
out
outs
pop
adc
mov
pushf
fiadd
sbb
(bad)
imul
sub
add
lods
push
push
aad
lock
dec
imul
in
and
fnstenv
fsubr
shl
dec
loop
push
dec
mov
xchg
imul
cmp
jp
push
in
jmp
pop
clc
sub
hlt
mov
cmc
jae
repz
fcom
xchg
stos
les
or
or
mov
pop
mov
rol
add
(bad)
xlat
popf
mov
aam
sbb
rcl
arpl
sub
loop
or
push
push
add
aad
out
inc
sahf
add
mov
push
or
push
(bad)
fucomip
jae
stc
mov
stos
sahf
imul
ror
bound
imul
jnp
pop
shr
xchg
out
cmp
sbb
mov
mov
pusha
out
sub
arpl
mov
mov
and
sub
pop
outs
lds
pop
jle
pop
jle
mov
or
aad
repnz
or
movs
clc
inc
cdq
addr16
cmps
and
xchg
jbe
push
jne
mov
je
sub
aam
mov
ins
push
mov
out
xor
xchg
xor
xor
adc
pushf
xor
fwait
popf
or
adc
jle
fst
scas
(bad)
aaa
fiadd
add
push
aad
(bad)
mov
mov
or
stc
js
dec
inc
mov
pop
mov
push
shl
inc
sbb
push
push
xor
push
inc
popa
scas
pop
sub
mov
nop
mov
daa
sub
leave
mov
loop
inc
sbb
enter
call
sbb
(bad)
dec
mov
(bad)
sahf
mov
jb
fmul
cmp
mov
gs
imul
sub
or
sbb
mov
mov
adc
lock
cmp
popf
cmp
adc
cmp
outs
xchg
gs
or
xchg
shr
xor
add
inc
adc
not
xor
int
add
add
(bad)
mov
pop
add
stos
cwde
out
jne
js
in
arpl
xor
mov
or
inc
xchg
aad
in
push
fwait
lods
push
fisub
repnz
daa
addr16
and
and
sti
ret
in
test
dec
mov
sbb
ins
(bad)
mov
adc
adc
push
shl
mov
dec
loopne
xor
cs
repnz
icebp
jecxz
mov
push
(bad)
idiv
inc
mov
sbb
cmp
sub
call
mov
outs
inc
stc
pusha
pop
push
mov
cwde
js
xor
div
int
xor
sbb
push
fstp
dec
adc
dec
popa
cdq
and
fidivr
arpl
cmc
xchg
test
into
jns
cmps
lods
adc
cmp
not
inc
xchg
sub
ss
inc
mov
jno
cmp
push
inc
mov
mov
out
adc
push
cld
xchg
pop
loop
inc
sbb
mov
xchg
rcr
jo
test
ins
pushf
inc
in
jge
(bad)
jnp
shld
(bad)
dec
fild
adc
push
and
rcr
retf
fdivr
cli
loop
popa
pop
mov
sub
dec
movs
mov
sub
sbb
mov
(bad)
pusha
push
mov
xor
mov
mov
out
mov
ins
dec
retf
repz
shl
out
jnp
mov
popf
jno
adc
push
push
push
shr
fnstenv
mov
and
xchg
pop
cmp
shl
gs
pop
inc
mov
adc
xchg
test
outs
jmp
jbe
xor
xor
cmps
(bad)
icebp
push
cmp
dec
imul
movs
xor
js
push
(bad)
pop
sti
das
movs
ss
jb
loop
pop
jmp
ret
in
pop
cdq
std
dec
xor
fild
iret
xchg
mov
in
popf
(bad)
call
shr
pop
mov
imul
lods
pop
xchg
popa
shl
or
addr16
mov
out
pop
xchg
(bad)
jmp
sbb
leave
mov
scas
stos
pop
in
test
push
adc
add
sbb
test
cwde
test
mov
mov
imul
cmp
neg
inc
retf
cmp
or
xchg
adc
int3
mov
push
mov
cmp
jl
dec
(bad)
test
repz
or
fstp
xor
jmp
ficom
sub
rol
cmp
dec
ja
mov
jne
push
(bad)
dec
inc
pop
mov
xor
pop
or
sub
xchg
(bad)
in
push
adc
adc
idiv
sar
adc
test
xor
or
andnps
pop
in
mov
cmp
push
dec
mov
fwait
adc
push
ret
or
cmp
add
out
out
outs
xchg
mov
xchg
fdiv
mov
leave
stc
shl
inc
xor
test
outs
or
cmp
cmp
mov
mov
xchg
arpl
ins
push
mov
dec
sar
or
retf
and
cmp
aas
aad
inc
repz
xor
mov
out
cmp
lods
mov
jno
sbb
mov
push
mov
inc
pop
xchg
inc
xor
repnz
inc
sbb
data16
fsubrp
fistp
scas
cmps
es
xchg
xor
movs
inc
fsubr
inc
outs
push
and
mov
sub
stos
sbb
clc
xor
retf
cmp
outs
push
xor
dec
push
dec
(bad)
(bad)
loop
adc
adc
or
mov
mov
xlat
ds
pop
mov
or
sti
push
jl
out
mov
jecxz
not
mov
scas
xor
sub
ja
sub
add
mov
punpcklwd
retf
cs
jle
add
stos
xor
dec
jge
(bad)
push
push
jecxz
test
in
jmp
cld
jae
push
in
sahf
inc
mov
stc
stc
jmp
data16
les
repz
dec
repz
leave
fs
pop
sbb
lock
out
sub
shr
loop
in
and
inc
xor
stos
test
mov
pop
xor
xor
or
xor
mov
cmp
jmp
test
add
mov
mov
pop
push
pop
out
lock
pop
movs
in
pop
movs
outs
std
nop
sub
sahf
inc
xor
and
push
pop
jae
or
jno
add
leave
test
jb
sbb
sbb
sub
inc
adc
fwait
pushf
stos
test
pushf
mov
leave
(bad)
leave
out
sub
jnp
mov
scas
xor
jp
mov
jmp
enter
lods
cs
jmp
shl
lock
pop
rcl
add
xchg
into
xchg
push
add
jmp
sub
aaa
out
xor
imul
mov
fwait
imul
popf
into
adc
xlat
loope
mov
add
dec
push
add
in
jg
cmps
mov
sar
dec
mov
mov
ja
push
add
fsubr
sub
inc
outs
mov
outs
fidiv
test
aas
push
popf
aad
mov
ins
inc
push
inc
or
fs
test
xor
call
cdq
fisttp
jg
cmp
mov
es
outs
push
sti
mov
inc
push
xchg
(bad)
stos
lods
stos
jns
mov
nop
cld
fisubr
fisubr
adc
test
stos
add
inc
jnp
je
neg
sub
retf
scas
sub
mov
(bad)
aaa
push
cmp
inc
push
rcr
dec
div
jge
dec
popf
jle
into
sbb
pushf
in
aam
fistp
int
xchg
fld
js
and
fnsave
dec
lea
adc
out
and
lahf
fisttp
imul
rol
jp
push
iret
or
test
scas
sbb
adc
xor
jmp
jl
sahf
pop
pop
bound
pop
push
inc
repnz
test
mov
lods
shr
leave
or
or
sub
mov
es
jmp
xchg
push
or
test
pop
lock
aam
jae
xchg
or
push
pushf
enter
repnz
fistp
dec
or
sbb
lds
(bad)
pop
ret
fwait
add
les
je
xchg
daa
pop
int3
and
mov
lds
push
shl
dec
cmp
or
lock
dec
adc
jmp
(bad)
scas
out
ret
jne
xlat
aam
dec
push
dec
retf
sbb
cmp
sar
push
pop
jecxz
sar
add
(bad)
mov
jl
cmps
imul
imul
outs
hlt
clc
idiv
sub
xor
push
sub
xorps
addr16
cmp
lock
(bad)
daa
jle
icebp
retf
shr
cmp
dec
jl
repz
mov
dec
push
push
sub
nop
xchg
lds
pop
dec
stos
add
mov
sar
aaa
scas
mov
adc
pop
jp
movs
jg
add
scas
jecxz
cdq
mov
mov
outs
lahf
and
mov
retf
cmp
dec
addr16
stc
mov
arpl
cmc
fbld
add
xchg
shr
aam
icebp
test
enter
push
mov
pop
push
jo
xchg
scas
pop
hlt
mov
push
inc
push
cmp
cld
ss
pop
add
mov
sar
in
sbb
xor
imul
jle
in
lods
cdq
push
and
rcr
mov
xchg
and
xor
aas
aad
pusha
push
inc
xchg
cdq
addr16
nop
ins
imul
inc
jmp
mov
call
pusha
and
enter
loop
add
mov
iret
aam
xchg
pop
sar
in
adc
fimul
xlat
icebp
es
sahf
push
lock
inc
jo
fild
in
popf
xor
xor
lds
gs
push
and
or
fcmovu
fsub
in
js
mov
or
out
adc
fisttp
jnp
push
xchg
stos
push
xchg
clc
jmp
stc
pop
add
inc
std
dec
pop
mov
sbb
daa
sub
mov
sub
movs
jno
add
movs
jno
aad
mov
push
(bad)
push
push
mov
jno
mov
retf
lods
pushf
push
dec
ja
cmp
xchg
mov
jo
das
lods
mov
int3
jmp
call
imul
in
outs
xchg
push
(bad)
cmp
push
test
inc
cli
je
xchg
pushf
in
js
push
cmp
fld
jne
xor
jo
mov
sbb
fdivr
cmp
mov
mov
xor
jp
ret
mov
mov
popa
into
xchg
mov
cmc
mov
ja
in
mov
int
xor
loop
fdiv
pop
adc
rol
mov
add
sbb
xchg
popf
adc
ins
xor
mov
add
les
cmp
or
bts
cs
and
cmp
xor
or
fiadd
clc
push
dec
jge
xchg
xor
sbb
add
out
push
hlt
test
dec
js
clc
pop
fwait
(bad)
fucomi
sub
les
jp
nop
pop
into
push
inc
jns
stc
dec
add
addr16
(bad)
fcom
rcr
cdq
add
imul
stos
sbb
and
or
jle
xor
jle
push
mov
pop
hlt
mov
mov
push
sbb
int
pop
jp
gs
fcomp
push
jp
cmp
add
loopne
in
fdiv
retf
ja
jnp
jmp
popa
imul
dec
cmp
pop
mov
movs
movs
dec
pop
cmps
mov
mov
or
adc
mov
addr16
loop
ins
loopne
fstp
xlat
inc
cdq
cmps
push
imul
lds
add
out
pop
std
aaa
fisttp
test
xor
iret
xchg
mov
dec
popa
and
jb
jmp
cmove
sub
repz
sub
sub
(bad)
push
push
xor
ror
or
imul
mov
das
leave
repz
rol
(bad)
retf
cmp
outs
repnz
xor
cmp
sub
daa
inc
daa
ret
push
add
arpl
repz
aad
les
or
lods
cmp
sbb
lock
cmp
dec
pop
push
neg
jb
adc
fstp
cmp
test
push
cmp
mov
dec
das
push
loope
into
push
mov
rcl
lahf
xor
fisub
pusha
loopne
mov
mov
mov
push
in
pop
mov
adc
sbb
in
sbb
rol
mov
mov
push
mov
into
stos
cdq
ins
jae
js
mov
add
mov
ficomp
adc
rol
or
jge
(bad)
xor
or
pop
dec
call
inc
aas
xor
cvttps2pi
test
push
and
hlt
sub
ja
jmp
and
or
xchg
repnz
pop
std
cmp
loopne
(bad)
out
xor
je
daa
add
in
push
cmp
mov
dec
adc
fist
xchg
xchg
out
call
adc
jmp
nop
mov
mov
mov
mov
outs
aad
xchg
movs
into
nop
ds
mov
inc
cmc
dec
push
in
leave
sti
jg
loopne
in
in
add
(bad)
mov
ficom
sbb
enter
movs
fld
fs
and
popa
lock
mov
ins
fimul
pop
xor
jle
push
fiadd
fs
and
sub
sbb
mov
fstp
push
add
into
mov
fs
ja
jnp
lods
xchg
rcr
rcr
inc
push
jg
cmps
lahf
fcom
jmp
or
xchg
pop
scas
push
or
xchg
sti
cli
hlt
mov
push
cmp
in
xlat
xchg
pavgb
mov
add
cs
jne
dec
or
dec
inc
outs
sub
add
cmp
clc
sbb
sub
cmp
das
jbe
mov
push
je
add
push
retf
pusha
gs
jb
ins
push
sub
xor
repnz
repz
stc
sbb
cmp
dec
add
int
lds
ja
xchg
jae
dec
or
cmp
(bad)
repz
dec
mov
cmp
inc
pushf
xchg
pop
sub
xchg
sbb
retf
jne
push
mov
dec
push
mov
xchg
or
or
mov
pop
out
add
push
or
mov
jle
mov
clc
or
cwde
add
or
lahf
sbb
sbb
mov
sbb
sub
shr
into
aaa
popa
or
into
dec
jmp
popf
push
cmp
and
cmp
jne
cld
aam
mov
jnp
call
inc
fwait
(bad)
push
add
pop
push
cmp
jecxz
ins
mov
cmp
ins
xchg
test
jmp
retf
daa
xchg
jb
test
bnd
inc
push
jns
gs
neg
ret
in
rol
mov
adc
jno
and
lods
(bad)
sahf
push
loope
and
test
fistp
outs
push
dec
jg
or
test
test
add
push
or
aad
sbb
sbb
out
push
mov
push
lahf
inc
or
fcom
add
dec
out
and
cmps
pop
sbb
ret
aas
rcr
emms
ret
shr
cmp
cmp
cmp
jae
mov
dec
dec
cmps
loope
(bad)
loop
mov
and
icebp
inc
out
cmp
fadd
pop
jge
inc
jae
push
mov
test
mov
ror
fdiv
sub
mov
in
mov
aaa
inc
gs
mov
cmp
adc
(bad)
cs
retf
mov
add
je
jo
pop
push
jns
and
ss
in
sbb
scas
sub
mov
aaa
ret
loope
push
jno
in
cwde
mov
push
mov
bound
mov
test
imul
push
ins
pusha
add
sahf
das
dec
jno
pop
aaa
loope
sub
mov
jae
ret
add
push
jbe
loopne
retf
adc
arpl
push
js
push
call
dec
test
adc
(bad)
outs
inc
inc
jmp
inc
cld
repz
div
jne
and
pop
mov
pop
out
das
div
in
call
repnz
mov
adc
test
dec
dec
jns
test
popa
bound
add
pop
scas
or
mov
fsub
in
movs
mov
popf
imul
cmp
cmc
data16
sub
lds
inc
out
mov
div
sub
adc
inc
repz
push
inc
dec
inc
inc
rol
xchg
aam
ins
rcr
sub
in
xor
cmps
sbb
ffree
xchg
(bad)
scas
retf
mov
shl
jb
scas
adc
or
je
inc
jp
je
xchg
fcomp
mov
xchg
test
test
jb
xchg
and
adc
rol
ins
(bad)
outs
mov
or
rcl
mov
retf
jge
and
mov
pop
scas
cmp
out
xchg
mov
sbb
pop
retf
xor
sti
(bad)
retf
or
iret
inc
mov
xor
sahf
(bad)
ja
dec
push
add
mov
in
pop
ins
pop
sbb
in
addr16
imul
shl
xor
ja
out
out
sti
sbb
sub
or
or
sbb
fistp
arpl
mov
pop
mov
pop
js
sbb
or
outs
adc
imul
cmp
or
int3
dec
sbb
int3
inc
mov
jp
mov
dec
xchg
xchg
stos
dec
xchg
push
(bad)
pop
bound
or
cld
iret
fcmovnu
and
mov
push
xchg
cmp
mov
adc
push
int3
cld
lods
cwde
sbb
sub
jnp
test
repz
push
cmp
out
push
outs
pushf
adc
or
cmp
inc
or
mov
call
data16
jmp
jne
loope
push
imul
cmps
mov
aaa
xor
shr
mov
mov
xchg
xor
ss
cmps
test
adc
dec
out
xor
pop
ins
retf
stos
pusha
or
xchg
addr16
push
mov
mov
mov
mov
jp
and
test
lods
adc
hlt
mov
jo
nop
fisub
sbb
push
mov
sub
icebp
iret
add
pop
pushf
inc
outs
movs
cmp
fisttp
adc
imul
mov
out
mov
sbb
pop
or
ret
lea
fadd
xchg
adc
stos
pop
call
loopne
clc
out
inc
lock
push
push
pop
lahf
xor
jle
call
sbb
in
pop
popf
cmp
jecxz
outs
push
int3
push
sub
adc
ins
xor
push
std
gs
adc
out
pop
sub
adc
mov
push
fucomi
xchg
fild
push
xchg
outs
push
mov
jge
clc
shl
das
lods
or
ret
adc
or
mov
jae
adc
sbb
dec
call
jecxz
cmp
test
fistp
ins
or
adc
xchg
mov
int3
ins
xchg
(bad)
loop
shr
(bad)
jecxz
stos
add
push
jnp
xchg
push
mov
outs
aad
lods
xlat
fisttp
dec
and
cmp
adc
cmp
pusha
sub
(bad)
dec
push
int
push
inc
and
sub
mov
inc
std
(bad)
adc
jbe
xor
add
dec
cmp
dec
xor
outs
shl
add
xor
jbe
add
icebp
inc
push
pop
gs
xchg
push
jbe
adc
cmps
repnz
cld
(bad)
mov
sbb
push
dec
or
pop
mov
or
mov
loop
mov
aas
sub
cmp
rcl
xchg
scas
div
xor
retf
jae
adc
int3
cwde
stc
fimul
sub
and
inc
sub
xchg
sub
test
bound
mov
pand
push
(bad)
jl
in
jp
cwde
int3
pop
std
imul
xchg
mov
in
mov
enter
sahf
test
call
push
push
jge
lahf
cld
aas
xor
pop
mov
sbb
and
enter
out
mov
scas
mov
shl
cmp
sbb
div
xchg
mov
sub
movs
and
or
add
popf
mov
out
aaa
lahf
fwait
xchg
jg
jne
mov
or
or
mov
iret
jg
retf
out
mov
call
enter
adc
popa
pop
sahf
mov
sbb
aaa
inc
pop
enter
mov
sahf
retf
pop
mov
mov
movs
scas
cmp
pop
es
cmps
xchg
lahf
fdiv
sti
ins
popf
les
push
sub
cmp
sbb
arpl
fbstp
sbb
jmp
pop
iret
cmc
mov
jg
sub
ret
xor
jg
dec
icebp
lea
clc
xlat
rol
popa
(bad)
sub
push
sbb
ror
adc
jo
outs
in
cmp
je
xchg
movs
cdq
pop
mov
pushf
push
ds
int
adc
mov
dec
pop
daa
sbb
cmp
out
pop
mov
les
xlat
xor
bswap
call
sbb
loop
mov
mov
lock
ja
scas
cmp
adc
pop
hlt
in
shl
aaa
in
adc
or
push
out
(bad)
sub
test
mov
pop
mov
je
out
retf
xor
mov
enter
out
push
adc
mov
pusha
cli
sub
xchg
aaa
sbb
lods
test
adc
fs
dec
jb
jmp
fwait
cli
es
imul
test
mov
mov
pop
cmp
(bad)
in
push
mov
pop
cmp
(bad)
xlat
addr16
idiv
add
(bad)
fcmove
movs
push
shl
iret
in
push
in
sub
xchg
mov
es
imul
(bad)
retf
sbb
xchg
mov
(bad)
outs
mov
loopne
jb
and
rcr
(bad)
std
mov
pop
or
jmp
aad
adc
pop
pop
pop
cwde
mov
das
cmp
jno
loope
repz
int
mov
xor
dec
mov
xor
ss
and
push
out
add
ins
cwde
xor
ins
jne
inc
pop
jg
inc
adc
and
outs
cdq
and
lods
aad
cmp
loop
dec
or
push
movs
add
test
pop
mov
fmul
mov
sbb
mov
push
ins
out
shr
retf
bound
sbb
jae
mov
sub
ins
pop
stos
cld
cmp
mov
aad
arpl
inc
retf
inc
mov
mov
movs
jmp
lods
out
push
pushf
into
jmp
sub
add
cli
push
pop
xchg
dec
mov
cmp
pop
call
(bad)
pop
push
push
pop
imul
push
mov
es
pop
ins
fidivr
in
cmps
pusha
fldcw
and
push
add
mul
imul
xor
xchg
in
clc
dec
mov
retf
repz
les
mov
pop
mov
(bad)
mov
imul
xor
adc
cmps
mov
dec
fstp
iret
in
and
das
int3
pop
sahf
fimul
jle
lahf
or
enter
adc
inc
push
mov
sub
cmp
pop
rcl
fldenv
sub
leave
into
add
cdq
jle
push
mov
jmp
mov
clc
jl
cmp
enter
movs
add
pop
adc
push
(bad)
and
xchg
jge
retf
imul
mov
xor
ins
lods
shl
repnz
sbb
(bad)
push
xchg
stc
push
mov
iret
lahf
or
pop
pop
scas
movd
xor
stos
scas
out
mov
aad
lds
stos
mov
repnz
mov
loop
push
xchg
push
jbe
cdq
retf
in
jl
shr
and
xlat
jmp
int3
and
and
pop
xor
mov
cld
inc
jmp
loop
out
inc
xchg
push
pop
scas
dec
loop
or
rcl
dec
inc
mov
inc
adc
pop
inc
sbb
mov
push
cmc
shr
xor
test
leave
rol
jl
jns
aam
(bad)
fwait
sub
xor
mov
jbe
(bad)
push
cmps
dec
jecxz
xor
cmp
sub
test
loopne
and
rcr
mov
inc
sbb
jge
test
shl
sub
addr16
or
sbb
mov
sti
sub
mov
jecxz
pop
fist
push
mov
sub
aaa
jp
shr
ja
sahf
nop
sub
pushf
int3
aam
mov
xchg
leave
stos
xor
popf
sbb
pop
enter
pop
test
jns
fisttp
mov
lock
cmp
movs
xchg
mov
test
loopne
cmp
xchg
inc
jae
or
scas
aas
enter
lahf
int3
add
daa
sti
push
mov
mov
xchg
inc
loop
lds
das
or
mov
mov
mov
xchg
das
fcom
inc
arpl
(bad)
pushf
fcmovnb
jo
movs
out
es
aam
jb
dec
mov
jne
dec
and
(bad)
adc
lahf
pushf
pushf
pop
add
out
add
push
or
out
mov
dec
(bad)
es
add
in
cwde
jne
(bad)
stc
test
inc
cmp
pop
cmp
lock
fcmovu
sub
push
retf
pop
jo
dec
loope
push
pop
xor
cmc
mov
and
jmp
lds
add
aam
mov
xchg
cmc
push
cmp
mov
pop
pop
and
jp
cdq
(bad)
pop
mov
aad
push
pop
shl
xchg
sbb
dec
je
nop
add
mov
pop
fwait
push
enter
xor
sbb
inc
xor
dec
jnp
lods
inc
or
dec
xor
loop
test
jl
repnz
jmp
cli
mov
std
pop
emms
inc
das
inc
ds
jge
outs
cli
sub
lea
pop
cmp
add
in
fcomp
pop
out
jg
fimul
call
jne
fld
cmp
cmc
mov
call
and
out
push
int
mov
mov
loopne
lods
js
cwde
lods
pop
stos
xchg
aam
and
pushf
(bad)
xchg
cmp
retf
into
jbe
push
sub
ret
scas
lods
push
pop
std
adc
cmp
in
dec
das
sbb
out
outs
ins
dec
rcr
jg
inc
mov
adc
or
ja
push
push
dec
cmp
adc
fldcw
xor
cdq
sub
sub
dec
in
xchg
sar
cwde
inc
repnz
adc
ror
aaa
test
mov
popa
mov
jb
imul
jge
aas
mov
push
cmp
or
jns
iret
popa
aad
jmp
scas
mov
js
leave
stos
cmc
sub
pop
lods
aad
(bad)
xchg
shr
sub
mov
addr16
outs
popa
dec
rcr
xor
aam
pop
fsubr
fs
mov
fs
test
lahf
addr16
or
fistp
data16
mov
dec
loopne
push
jmp
mov
iret
f2xm1
enter
push
(bad)
sbb
adc
icebp
scas
push
cld
movs
fwait
mov
cmps
icebp
push
data16
cmp
add
xor
cli
jmp
jg
out
shl
pop
sub
mov
jmp
sar
or
stc
xor
fisttp
dec
cdq
mov
addr16
mov
xchg
(bad)
imul
aad
jecxz
(bad)
fisub
ss
in
xor
fild
cmps
cmp
arpl
sub
scas
mov
cmp
sub
mov
or
int
call
mov
jo
mov
leave
das
sti
fldcw
cmp
xchg
leave
jne
jnp
dec
shl
fldcw
icebp
cdq
xor
push
add
fnstenv
dec
push
retf
mov
push
cmp
dec
pop
mov
loope
add
ret
jecxz
add
push
mov
mov
adc
fwait
inc
retf
repnz
jmp
aad
push
aaa
sbb
aaa
sub
mov
enter
sbb
retf
jle
cmps
jge
dec
std
push
mov
sub
(bad)
dec
int3
das
lds
dec
xor
sbb
enter
fbld
cwde
aaa
or
jge
add
dec
lea
retf
pop
jns
clc
inc
in
inc
stos
mov
(bad)
cld
daa
adc
sbb
sub
sub
les
bound
cmp
cmp
push
lock
mov
sbb
pop
cld
inc
mov
dec
cmovae
fidiv
(bad)
icebp
in
dec
pop
imul
fild
jmp
sub
hlt
pop
cli
inc
shl
sbb
xor
xor
sbb
inc
into
mov
cmps
test
aas
popf
pop
inc
jecxz
push
xchg
js
mov
cmp
push
lods
pop
jl
push
sbb
or
sub
shr
in
dec
pop
pop
ret
push
lods
xor
rcr
cmp
xchg
int3
inc
out
jp
cmp
shl
icebp
sahf
retf
into
jb
and
mov
jno
iret
mov
adc
stos
and
leave
push
nop
dec
mov
test
out
xor
or
mov
pusha
jbe
ror
daa
cmp
lahf
adc
push
xor
jb
and
sar
dec
stos
enter
xchg
neg
sub
outs
ja
int3
pop
fwait
adc
inc
leave
sub
or
jno
(bad)
xchg
ficom
inc
inc
in
ret
cmp
xchg
ss
ins
xor
sbb
movs
xchg
pop
rol
or
in
pop
dec
fxam
loopne
ror
shr
jecxz
loopne
push
dec
pushf
lea
mov
aad
mov
dec
enter
xor
add
xchg
mov
and
cmp
mov
mov
xchg
test
jle
sbb
sahf
jb
jmp
mov
test
ret
sub
je
das
cmp
cmp
mov
mov
push
mov
or
jecxz
dec
cwde
leave
dec
ins
leave
push
aas
(bad)
inc
jbe
mov
hlt
retf
jp
push
aas
stos
scas
in
scas
mov
jge
dec
imul
lods
mov
dec
pop
jg
and
pop
sbb
sti
push
aam
cmp
js
ss
xor
das
gs
cmc
push
xor
adc
movs
not
jl
dec
sti
pop
jmp
add
nop
xchg
mov
cmp
scas
mov
cmc
xor
out
sub
mov
mov
dec
or
cdq
jp
fsubr
ins
lods
pop
out
sub
arpl
xor
jge
mov
mov
movs
inc
div
cmp
in
imul
adc
ret
fwait
xor
push
mov
xor
dec
xchg
xchg
push
cld
xor
cmps
outs
xchg
jge
inc
jbe
jg
push
xor
jmp
mov
js
mov
cdq
mov
leave
ins
mov
pop
rol
cli
jecxz
imul
lahf
pop
mov
out
xchg
push
mov
pop
xchg
sbb
or
loope
movs
shl
and
inc
pop
es
lahf
retf
cwde
cld
sahf
mov
not
fwait
(bad)
call
xchg
mov
sahf
fcomi
mov
fld
ret
xchg
daa
mov
out
ins
pop
jae
fdiv
dec
dec
cmp
test
mov
shr
inc
out
push
sbb
test
add
es
test
jl
fnstcw
into
clc
call
add
pop
inc
repnz
lock
outs
xor
js
jle
movs
add
mov
lahf
inc
cmp
movs
fdiv
mov
test
dec
sbb
and
add
push
add
out
repz
mov
xchg
ficom
mov
mul
in
push
pop
int
mov
push
add
adc
out
int3
sub
mov
ret
cmc
and
xchg
int3
out
sbb
rcr
push
xor
dec
xor
loope
sub
xlat
rcr
inc
test
xchg
scas
sub
leave
ins
scas
outs
rdtsc
(bad)
fisttp
lods
scas
mov
push
(bad)
push
dec
int3
repnz
inc
cmp
(bad)
in
sbb
cld
xchg
xchg
push
mov
(bad)
sti
jg
xchg
idiv
pop
xchg
stos
out
or
shl
ret
rol
and
xchg
mov
nop
cli
gs
push
scas
jno
and
or
adc
or
test
inc
push
into
xor
clc
xchg
pop
or
mov
xchg
jns
sti
lods
dec
push
push
add
jle
ret
xor
mov
mov
xchg
cwde
push
mov
mov
out
inc
push
jle
aam
into
mov
lock
pop
mov
and
xor
inc
stos
or
fisubr
pop
adc
pop
outs
sub
or
jecxz
iret
retf
push
inc
cmp
jns
je
mov
(bad)
sub
push
mov
xor
xor
pop
and
or
scas
fwait
movs
mov
ret
xor
push
mov
test
xchg
ja
movs
cli
mov
fs
push
int3
inc
add
ror
jle
cdq
popa
(bad)
xchg
jecxz
fld
test
retf
repz
cli
das
cmp
fs
in
inc
mov
add
mov
mov
ret
sahf
dec
jp
xchg
(bad)
js
sbb
xor
push
mov
pop
in
adc
mov
shl
int3
or
mov
jno
jae
data16
scas
out
sbb
lahf
in
in
xchg
loope
mov
xor
test
xchg
xor
sbb
cmp
jp
in
dec
jmp
(bad)
mov
retf
mov
js
pusha
ds
(bad)
ins
out
sub
repnz
mov
push
jecxz
mov
sub
pop
stos
cmp
jo
pop
sub
mov
fist
cmp
jo
fwait
retf
xor
sahf
jbe
and
loop
dec
jbe
shl
mov
xor
int
xor
cdq
xor
test
nop
mov
jecxz
rep
pop
and
dec
jb
test
cmc
loop
pop
pusha
dec
mov
jecxz
xor
mov
dec
ja
jns
inc
lea
call
lea
add
add
lds
push
dec
xchg
add
mov
shr
lock
in
cli
call
cli
and
imul
pop
imul
and
lahf
or
jnp
fst
mul
(bad)
test
aas
xchg
not
(bad)
sbb
dec
shl
xor
test
xchg
xchg
jae
ret
fmul
dec
push
call
push
dec
xor
movs
retf
aad
daa
push
(bad)
(bad)
add
in
cmp
call
fcom
or
mov
mov
out
inc
cmp
ja
(bad)
xor
fbstp
pop
cdq
(bad)
retf
lds
xor
and
lock
pop
sub
push
mov
inc
cmp
mov
scas
ss
sub
(bad)
jecxz
xchg
cmp
aad
sub
std
call
enter
xor
fild
cmp
cmp
lods
addr16
ficom
dec
pusha
mov
mov
mov
adc
stos
ret
mov
arpl
es
mov
fild
sar
push
and
dec
movs
mov
je
jp
pop
aaa
jbe
push
xchg
shr
and
mov
dec
aas
mov
inc
outs
pop
and
shl
enter
data16
rcr
inc
cdq
cmp
pop
cmp
das
adc
paddw
cmp
dec
test
call
imul
cli
dec
or
mov
or
cmp
fsub
data16
out
cmps
pop
enter
loop
aas
mov
arpl
stos
bound
mov
icebp
push
xor
out
retf
mov
dec
sub
aaa
enter
adc
(bad)
call
iret
mov
and
mov
imul
mov
pusha
fsubr
rol
push
aam
fsubr
inc
or
pop
and
jmp
and
test
push
fucomp
pop
ja
pop
data16
xor
or
cdq
jmp
jle
dec
cmp
std
mov
push
retf
lods
lods
js
mov
int
add
jns
loopne
dec
mov
sub
imul
mov
movs
xchg
xor
mov
pop
fild
xor
xchg
mov
mov
push
pop
mov
cmp
adc
pop
shl
retf
loope
loope
cmp
or
mov
jecxz
out
and
mov
shr
(bad)
jmp
call
int
cmp
data16
sar
mov
outs
fcmovnu
adc
xlat
(bad)
mov
xor
adc
adc
mov
out
fst
out
mov
mov
int
out
repnz
je
add
int
cli
sbb
rcr
and
in
sub
es
lahf
xchg
retf
scas
mov
sbb
shl
in
and
add
call
jno
sub
nop
enter
adc
gs
mov
mov
stos
and
pop
dec
inc
ins
jo
mov
jecxz
and
js
js
sub
ret
xchg
sbb
pop
mov
jmp
cdq
icebp
js
sbb
and
xor
mov
je
mov
sahf
mov
dec
test
dec
mov
mov
push
(bad)
mov
sub
mov
sbb
sbb
int3
sub
mov
add
sub
cmp
je
scas
xor
or
jno
cmp
sbb
mov
and
js
fstp
xchg
gs
jge
ds
stos
aad
cmp
jno
ins
es
push
push
and
rol
jle
lods
cwde
test
sbb
retf
cdq
mov
mov
add
xlat
in
inc
pop
jns
addps
out
(bad)
push
movs
sub
test
inc
jb
jo
outs
and
push
add
fisttp
jle
(bad)
xchg
test
imul
clc
dec
dec
lock
pop
test
mov
add
cmp
push
add
fsubr
dec
call
sti
int3
outs
sub
jno
xchg
add
xor
cs
jbe
cwde
sub
push
adc
int
(bad)
shl
mov
xchg
out
push
stos
pop
inc
xchg
repz
inc
bound
fwait
sti
test
repz
mov
or
xor
cmp
fimul
pop
dec
sahf
adc
sar
inc
mov
sub
out
ss
mov
fwait
shl
mov
int
icebp
mul
add
ret
sub
push
push
dec
shr
add
xchg
fidivr
xchg
cdq
(bad)
ss
or
jl
xor
mov
test
and
(bad)
nop
(bad)
jp
stos
dec
iret
dec
(bad)
mov
jo
xchg
jo
and
pop
imul
push
mov
(bad)
out
jl
inc
mov
aas
push
push
nop
dec
mov
add
push
inc
std
sub
cmp
rcl
cs
push
and
inc
movs
cmp
sahf
popf
sub
ja
mov
out
sti
repz
adc
mov
test
(bad)
fmul
adc
jge
and
xchg
add
adc
jg
out
outs
mov
push
fwait
out
xchg
cmp
pop
in
stos
test
fild
sub
jecxz
jno
mov
sbb
xchg
lock
xchg
pop
add
sbb
test
mov
sub
mov
jnp
out
xor
cmc
rcl
icebp
(bad)
fadd
ds
sti
mov
jnp
inc
push
pop
dec
pop
xchg
mov
sar
ror
int3
in
das
mov
xchg
mov
jb
pop
jno
ret
imul
jl
ja
adc
and
stos
mov
(bad)
test
not
sub
addr16
(bad)
or
add
pop
fcmove
jb
shr
sub
mov
adc
jmp
mov
adc
stos
mov
retf
out
popf
ret
ret
loop
inc
cmp
inc
sub
cmps
mov
mov
xor
sub
adc
cmp
sbb
popf
mov
push
ss
cs
jp
dec
mov
das
repz
jmp
pop
rcr
jmp
js
dec
jmp
int
pusha
(bad)
cmp
dec
imul
lock
(bad)
jno
hlt
jne
lock
test
adc
push
cwde
aaa
mov
or
inc
jnp
ret
push
nop
arpl
and
or
jb
pop
cdq
pop
adc
ins
sub
dec
outs
mov
ja
into
mov
pop
mov
(bad)
mov
inc
dec
(bad)
cmp
push
pop
pop
push
push
cmps
mov
mov
test
es
jae
cmps
adc
jecxz
and
(bad)
mov
cmp
lock
sti
inc
cdq
dec
jnp
mov
jnp
cmp
sub
jle
bound
scas
mov
ja
cmc
scas
(bad)
push
mov
cmp
sub
enter
xchg
idiv
mov
mov
test
xor
aam
xor
xchg
xchg
daa
lds
lds
pop
dec
fild
push
fwait
movnti
jg
je
sub
jb
in
jl
rcr
(bad)
or
push
imul
shl
ret
or
add
xor
pop
xchg
add
mov
mov
imul
pop
pop
loopne
jmp
imul
jp
test
cmp
daa
pop
pop
rep
fistp
cmp
pop
jns
loope
fmul
sub
hlt
push
mov
imul
rcl
fld
dec
dec
rcr
mov
mov
jne
xor
icebp
xchg
scas
lods
jnp
loop
test
and
and
inc
mov
or
pushf
xchg
sub
call
test
push
inc
push
sti
sti
stos
mov
dec
sahf
mov
xchg
mov
loope
mov
sub
outs
cmc
mov
xor
add
cs
push
aam
jmp
in
in
mov
out
ja
mov
sbb
push
mov
mov
fs
and
(bad)
mov
test
xchg
pop
fs
fild
adc
push
mov
cmp
fwait
test
jnp
jne
sbb
inc
fist
enter
and
push
jb
shl
or
add
imul
retf
std
push
loop
shl
outs
jle
sbb
cmps
xor
je
call
stc
in
shl
out
mov
mov
sbb
xor
ja
add
and
mov
mov
adc
jl
xchg
popa
in
inc
loope
(bad)
ficomp
sti
sti
xor
and
jo
popa
fild
sub
xchg
popa
cmps
test
dec
mov
sub
jge
bound
je
shr
cmps
sti
pusha
data16
and
popa
jno
adc
add
mov
rcr
sub
cs
dec
pop
jb
lods
jne
sar
stc
dec
retf
hlt
repz
xor
add
mov
arpl
pop
dec
outs
jle
dec
and
loopne
loope
and
or
jns
in
inc
sbb
xor
xor
dec
pop
lock
rcr
retf
neg
cwde
leave
imul
push
jnp
dec
and
sbb
data16
jp
mov
aad
jnp
jmp
(bad)
push
mov
push
int3
fs
in
(bad)
mov
movs
retf
push
adc
je
aad
jae
test
sbb
and
jmp
scas
cmp
jb
cmp
or
sub
popa
cmp
mov
xchg
xchg
sub
(bad)
dec
mov
sub
imul
add
dec
leave
and
rol
jno
cmps
int3
add
enter
dec
jo
js
popa
lea
jmp
jmp
xchg
mov
adc
clc
loope
ins
call
xchg
mov
retf
cmp
xlat
cmp
dec
jmp
ret
stos
call
pop
pushf
out
push
mov
sub
xchg
bnd
stc
cmp
push
xchg
das
out
adc
or
enter
sbb
scas
sti
mov
fld
mov
(bad)
jae
mov
mov
leave
das
inc
push
mov
arpl
outs
cmp
(bad)
ja
arpl
push
xchg
out
xchg
push
mov
out
cdq
jno
pusha
dec
ds
mov
neg
inc
xchg
inc
pushf
adc
scas
push
mov
or
push
aaa
rcl
pop
lea
aas
(bad)
pushf
stc
mov
pop
jne
cmp
retf
adc
in
xor
cmc
loop
and
test
lods
and
test
rol
test
retf
(bad)
ins
xchg
jmp
(bad)
or
lods
and
push
ins
ins
inc
jmp
jp
sub
mov
pop
xor
xor
lods
int
(bad)
aam
mov
into
mov
mov
inc
call
stos
clc
mov
out
push
ror
pop
or
jnp
into
in
dec
sbb
cmps
ds
jb
ss
arpl
add
pop
sub
fisub
adc
dec
dec
and
mov
imul
sbb
xor
xchg
add
or
push
mov
inc
jno
push
movs
push
add
je
add
sbb
imul
cwde
sub
mov
jns
rcl
and
adc
jge
xchg
push
push
mov
sbb
push
xchg
fs
jmp
xchg
jns
inc
sbb
ret
and
adc
jg
cmp
cmp
pop
shl
rol
das
mov
cmp
movs
aaa
push
dec
imul
jnp
cdq
lahf
popa
ds
(bad)
cmp
mov
stos
retf
dec
push
outs
sbb
add
mov
add
jb
cs
fsubr
jbe
push
arpl
dec
test
adc
and
xor
test
cmps
jle
jb
popf
inc
mov
fidivr
mov
pop
loope
fistp
into
pop
sub
lock
test
push
push
outs
or
xor
push
pop
xor
stc
or
lea
sbb
push
inc
ret
sbb
xor
inc
push
test
jmp
and
(bad)
jmp
mov
cli
in
addr16
dec
lahf
ja
mov
mov
sbb
outs
dec
(bad)
xor
push
dec
jns
mov
mov
aam
xchg
jge
add
push
cli
mov
pop
shr
pusha
cdq
lods
dec
out
lds
ins
cwde
inc
lods
ss
sub
fwait
mov
nop
push
enter
clc
retf
(bad)
rcr
jae
mov
xlat
mov
xor
jns
out
in
fdivr
pop
test
inc
repz
popa
jg
adc
(bad)
shr
and
pop
xlat
je
cmps
lods
int
cwde
adc
ret
fisub
pop
jmp
xchg
lahf
mov
aaa
inc
es
mov
mov
or
sbb
bound
je
rcl
stc
repz
pushf
adc
out
pop
inc
popa
cmp
icebp
push
add
cmp
clc
dec
inc
and
fist
and
cdq
xor
push
(bad)
sub
lahf
jmp
pop
sbb
popa
ss
dec
(bad)
clc
imul
scas
mov
or
into
ror
or
ss
stos
nop
push
stos
mov
and
pop
jl
push
fmul
push
dec
aaa
ins
data16
dec
lea
loope
out
adc
push
mov
aad
in
loop
or
aaa
push
sbb
jb
jmp
sub
adc
mov
jno
repz
adc
fiadd
das
mov
stos
sub
out
mov
fisub
ss
int
das
xor
scas
push
scas
mov
add
in
iret
lods
mov
mov
cdq
xchg
mov
jns
or
adc
jne
mov
aam
ja
sbb
xor
dec
push
xlat
ins
xchg
mov
imul
lea
aaa
add
inc
scas
or
xchg
xor
movs
xor
sub
clc
fucomp
or
test
inc
imul
hlt
call
gs
mov
test
or
leave
mov
inc
cmp
or
test
ins
inc
mov
in
pop
mov
test
in
icebp
shl
pop
sbb
adc
dec
(bad)
shrd
sar
inc
or
sar
out
xchg
pop
loopne
sbb
jmp
xlat
test
xor
ret
adc
ins
cld
pop
jbe
jp
fstp
or
pop
aas
fnstsw
pushf
push
movs
xor
jl
enter
stos
call
es
mov
inc
mov
dec
stos
sar
xor
lods
push
dec
mov
call
pop
mov
dec
xchg
sti
shr
dec
jb
(bad)
mov
mov
push
or
in
pusha
shl
cmps
cmps
call
(bad)
pushf
mov
sub
aas
pop
fstp
fidiv
pop
or
jmp
push
cmp
pop
and
repnz
mov
cwde
enter
out
xchg
fisttp
enter
mov
jle
add
mov
scas
jo
adc
je
cld
(bad)
sub
mov
add
cmp
icebp
mov
les
int3
adc
lahf
loopne
mov
dec
jl
stos
repz
mov
add
or
in
bound
sub
scas
mov
fs
push
(bad)
repnz
int
fisub
(bad)
cmps
inc
mov
pop
call
and
adc
jne
test
and
adc
or
xor
jae
add
push
lahf
sub
adc
or
mov
xchg
in
lods
fadd
out
add
test
outs
xchg
jns
push
ss
inc
pop
push
test
xor
sub
and
mov
imul
jmp
fld
xchg
outs
add
push
pushf
dec
lea
outs
mov
cli
adc
and
arpl
jno
or
xchg
aaa
lock
scas
cdq
cmp
div
inc
inc
push
stc
sub
push
enter
push
movs
sahf
mov
movs
or
ins
inc
mov
repz
pop
js
in
xor
out
xchg
fsubr
push
movs
cmp
add
ss
push
(bad)
push
and
popa
pop
iret
sub
cmp
sub
fild
es
out
sub
test
mov
lock
inc
jns
adc
xchg
push
jmp
out
mov
fistp
inc
inc
add
je
sbb
and
dec
sbb
outs
sub
aaa
stc
xlat
lods
pop
and
imul
icebp
pop
inc
pop
popa
mov
fld
pop
retf
ss
test
mul
call
inc
pop
(bad)
hlt
scas
popf
pop
inc
scas
data16
xlat
retf
retf
stos
lds
std
xchg
or
mov
dec
sub
inc
xor
xchg
std
cmp
or
in
jns
sti
jnp
fstp
lock
test
cdq
mul
xchg
popa
shl
and
pop
stos
loopne
sub
movs
mov
add
retf
aam
push
mov
adc
dec
xchg
mov
sar
mov
enter
jl
das
jo
iret
out
cmp
mov
movs
loop
enter
movq
sub
sbb
cmps
adc
sbb
leave
loop
or
mov
ins
pop
popf
fsubrp
mov
jmp
(bad)
inc
push
mov
fcomp
dec
fs
cmp
dec
pop
jg
sbb
shr
fistp
xchg
retf
dec
jl
rcr
test
dec
enter
ins
push
fisub
jns
xor
add
inc
pop
mov
sub
or
and
aad
mov
cmp
mov
mov
mov
repnz
sbb
sbb
lea
jge
inc
mov
arpl
and
test
pop
loope
mov
mov
popf
inc
fsub
mov
loopne
mov
xor
cmp
jo
or
add
stc
adc
aad
lods
cmp
ficom
bound
cwde
test
out
aaa
dec
sub
xor
mov
xchg
mov
jge
mov
pop
xchg
fisub
mov
and
ret
cmp
mov
fcom
stc
mov
sbb
rcr
fwait
retf
push
pop
sub
add
inc
push
imul
dec
inc
mov
iret
adc
xor
sub
fwait
mov
cmp
outs
nop
mov
into
es
jb
leave
mov
adc
sbb
inc
push
adc
pop
adc
mov
dec
retf
and
ins
pusha
sti
pusha
jl
fst
mov
jl
(bad)
jo
cld
shr
inc
or
jle
call
lods
fcmovnbe
loopne
pop
call
jle
or
ins
fcomp
out
mov
inc
xchg
or
xor
test
shl
adc
mov
push
fxch
loope
mov
not
dec
pushw
stos
stc
aaa
inc
aas
fs
adc
adc
sbb
enter
loope
cmp
fs
ins
loope
in
mov
das
js
mov
or
pop
dec
or
icebp
sbb
dec
push
fldcw
jle
ins
loop
cmps
fldenv
adc
jge
das
dec
rcl
out
cmc
sub
mov
movs
and
mov
fsubr
and
cmps
fstp
adc
pop
rcr
and
shl
ss
or
and
call
xor
cmps
cmps
loope
mov
lods
mov
out
mov
aam
jb
inc
xor
mov
mov
lock
sbb
sahf
pop
outs
inc
xchg
fld
push
pop
(bad)
lahf
fwait
adc
add
xor
inc
mov
loope
mov
(bad)
aas
xchg
scas
pop
or
or
cmps
mov
movs
xchg
cmp
inc
fmulp
out
enter
adc
xchg
dec
push
dec
test
inc
in
and
xor
test
movs
hlt
xor
xchg
das
inc
sbb
push
mov
pop
adc
mov
inc
das
or
sub
pop
sbb
call
(bad)
repz
adc
popa
bound
jo
or
repnz
inc
cmps
lods
stos
sar
loope
sti
in
xchg
xchg
dec
test
jl
mov
xchg
mov
or
jecxz
cli
ins
jns
cmps
xchg
and
inc
and
cmp
cmp
les
xchg
mov
fiadd
push
loop
out
jmp
cmps
fs
jmp
test
popa
or
das
jmp
test
mov
jmp
cmps
not
or
xchg
nop
movq
xchg
and
adc
push
or
pop
cmp
clc
outs
sbb
sti
dec
mov
into
xor
sub
cld
mov
mov
sub
fs
clc
stos
test
je
ret
sub
enter
jae
clc
and
mov
mov
shl
mov
and
cmp
pushf
inc
xchg
add
out
jae
test
dec
xor
mov
stc
in
es
dec
or
add
out
jnp
into
es
ret
inc
cs
cli
push
rcr
shl
cld
mov
pop
jg
sub
pop
clc
xlat
test
ds
test
jmp
std
and
adc
mov
mov
or
sti
xchg
mov
shl
ins
mov
mov
mov
mov
ret
jge
dec
pusha
stc
lock
mov
jns
div
ins
cmps
popa
mov
cmp
enter
push
jb
add
loop
dec
sar
ins
cs
sbb
(bad)
ror
xchg
rcr
aam
dec
cmp
and
(bad)
(bad)
sar
lods
xchg
inc
test
mov
push
push
sub
lock
pushw
(bad)
adc
pop
leave
add
jecxz
pushf
ins
mov
and
out
xor
jmp
fnstenv
je
sub
pop
lods
xchg
arpl
out
gs
rcl
retf
loopne
push
rol
call
xchg
mov
xor
(bad)
mov
jle
jg
in
shl
sbb
ja
cld
shr
js
inc
call
stc
movs
jnp
imul
adc
dec
aaa
push
inc
lods
push
push
mov
lds
xor
mov
xor
scas
test
int
adc
(bad)
out
push
push
xchg
mov
neg
add
fimul
jmp
arpl
loope
mov
jg
repz
mov
test
and
cdq
fsubrp
sbb
jl
(bad)
test
xor
pop
mov
(bad)
fadd
cs
test
stc
stos
rol
loopne
repnz
jge
sbb
push
sub
loope
scas
push
jecxz
and
push
cs
out
and
mov
push
out
popf
outs
test
mov
jns
jecxz
inc
repnz
sub
bound
int
push
cmp
or
cmp
je
mov
inc
call
sub
and
sub
sbb
(bad)
fstp
mov
dec
lods
enter
dec
fdivr
dec
add
adc
or
fwait
pop
and
cmp
xor
cmp
mov
aad
stc
cmps
pusha
sub
mov
push
xor
outs
sbb
xchg
fist
movs
pop
je
push
mov
push
adc
(bad)
cmp
add
out
sbb
shl
or
cmp
cli
pushf
jbe
and
rol
jl
int
inc
sub
icebp
mov
xchg
fwait
sub
mov
dec
in
cld
enter
arpl
sahf
adc
shl
push
aaa
or
xor
jbe
cmp
aad
imul
jle
fiadd
and
shl
sub
outs
sub
(bad)
push
clc
dec
pop
sub
sbb
(bad)
arpl
mov
push
mov
push
jp
xchg
test
pushf
mov
retf
and
cli
ficomp
mov
dec
add
sub
mov
push
xchg
mov
cmc
xchg
or
dec
pop
not
cs
dec
pop
lock
mov
lahf
movs
push
retf
adc
imul
das
sub
cs
add
repnz
sub
test
cmc
jp
mov
cmp
jae
jae
sub
xor
mov
add
pop
inc
mov
mov
cwde
sub
lds
retf
jns
js
ja
xchg
in
and
test
daa
inc
dec
sub
fs
dec
xchg
loope
mov
dec
iret
loopne
mov
aad
mov
push
ret
fnstsw
and
(bad)
mov
inc
xchg
pop
jmp
iret
mov
jnp
std
scas
into
out
repnz
ret
test
mov
pusha
xchg
hlt
je
sub
out
xor
mov
in
popf
or
or
imul
inc
and
cmp
pop
scas
jmp
mov
ja
in
xor
push
popf
leave
jo
sar
sahf
xor
push
leave
lds
jmp
dec
mov
sub
add
loope
mov
nop
mov
das
dec
pusha
xchg
(bad)
iret
ja
mov
adc
cmp
rcl
repnz
orps
jecxz
(bad)
fst
inc
sbb
cdq
xchg
mov
loope
xor
arpl
or
enter
mov
scas
hlt
fcomp
adc
sbb
jne
and
xchg
in
mov
scas
or
out
cmp
mov
jb
(bad)
adc
or
sbb
or
mov
or
mov
sahf
pcmpgtw
pop
or
xchg
adc
push
inc
loope
jmp
nop
xchg
mov
lods
push
xor
cmp
and
aas
mov
pop
mov
stc
shl
je
ins
mov
xchg
ins
mov
ja
sub
hlt
js
push
add
jp
mov
mov
dec
aas
dec
arpl
push
aam
outs
jnp
int
std
sbb
popa
sar
pop
test
mov
cmps
fs
cmp
xchg
in
cmp
repz
cs
shld
pop
lods
ins
ret
or
shr
push
mov
push
cli
cli
shr
in
jnp
inc
cmp
mov
push
data16
ret
pop
mov
mul
loope
sysexit
imul
adc
xchg
xchg
imul
es
repz
xor
jmp
arpl
in
stc
and
test
fst
ins
adc
loop
xor
sbb
imul
aam
ins
dec
push
sub
dec
mov
push
jp
inc
ror
cmp
mul
daa
test
fcom
movs
cmp
add
push
cli
(bad)
mov
xlat
ret
pop
mov
push
outs
(bad)
mov
fsub
add
jmp
push
inc
shl
and
js
das
leave
fnsave
pusha
jl
push
cwde
add
pushf
mov
xlat
adc
inc
and
fcmovbe
adc
add
mov
les
out
rcr
or
jbe
sar
xchg
pop
sub
or
movs
pop
sub
dec
dec
jmp
test
mov
inc
(bad)
mov
shr
xor
pop
sub
or
xchg
jmp
lods
xor
jmp
push
sbb
push
and
mov
dec
mov
inc
adc
mov
cmp
int
fidivr
and
cld
ror
cdq
stc
dec
inc
enter
inc
xchg
mov
fs
idiv
mov
cdq
(bad)
shl
ret
and
cmp
xchg
push
bound
dec
adc
push
addr16
stc
sub
dec
(bad)
push
aam
repz
mov
out
ret
or
lock
jb
sub
xchg
push
or
add
dec
popa
pop
call
push
pop
mov
sbb
cs
fcom
cmp
pop
mov
mov
sti
mov
xor
inc
mov
add
shl
and
cwde
aaa
dec
adc
push
cld
mov
movs
iret
cmp
pop
cmp
test
jmp
push
std
dec
sub
xor
mov
movs
jno
cmp
dec
pop
inc
push
(bad)
call
and
mov
lahf
pop
ficom
(bad)
int
push
popf
dec
push
xor
test
stos
loop
addr16
xor
fild
cmp
mov
mov
(bad)
js
jnp
bswap
repnz
mov
dec
dec
sub
cmps
int
sub
lock
mov
inc
push
imul
call
add
push
jl
jnp
fwait
enter
in
pop
push
sub
mov
jne
mov
xchg
mov
dec
cmp
stos
dec
ss
mov
jnp
mov
mov
pop
test
sbb
mov
neg
dec
ja
pop
dec
pop
push
add
or
sbb
cmp
shl
push
aaa
(bad)
cmp
add
dec
(bad)
test
popa
js
pop
(bad)
cmp
imul
dec
adc
(bad)
push
inc
sub
jmp
cmp
pop
pop
add
loopne
or
mov
inc
sub
lahf
in
add
icebp
pop
retf
sub
scas
mov
popa
fldenv
loop
jl
xor
jne
(bad)
mov
sbb
out
or
movs
mov
mov
xchg
cmps
cmp
imul
rcr
adc
call
pop
xor
ret
lea
mov
xor
push
sbb
dec
loope
jmp
add
sbb
add
jns
nop
dec
aaa
push
leave
jmp
jg
adc
daa
shl
and
popf
mov
movs
push
jg
movs
cmps
push
clc
jge
call
(bad)
rcr
sahf
rcl
or
test
inc
xor
and
(bad)
std
jb
mov
(bad)
mov
jno
add
(bad)
popf
js
cmps
aam
leave
cli
sub
mov
adc
(bad)
xor
stc
add
push
xor
mov
out
adc
cmc
jl
jge
lods
mov
mov
dec
mov
or
pop
out
pushf
clc
(bad)
pop
xchg
and
cdq
loopne
out
jno
jo
fbld
repz
inc
scas
mov
js
push
addr16
xor
push
xchg
sbb
mov
mov
cmps
push
jno
or
cmp
and
cmp
lods
jno
or
mov
sahf
loope
jecxz
adc
add
data16
daa
dec
ds
mov
pop
mov
xchg
inc
js
xchg
push
lahf
fsubr
adc
(bad)
sbb
push
pop
sbb
in
xchg
je
outs
and
or
leave
cmp
sub
jbe
jp
std
mov
xor
fst
nop
add
mov
xor
clc
bound
test
ss
inc
not
xchg
add
mov
mov
add
xchg
xor
xchg
test
std
hlt
jnp
loope
test
inc
jo
dec
push
xor
push
cli
push
in
retf
sub
adc
or
(bad)
sub
or
loop
pop
push
movs
xchg
lock
mov
fcmovb
sub
xor
add
add
inc
(bad)
push
xchg
xchg
outs
mov
ret
mov
inc
sbb
les
xchg
outs
aad
lods
div
sbb
in
in
test
pop
jge
(bad)
or
pop
xchg
mov
bound
push
pop
ins
mov
or
das
pop
sub
call
push
inc
sub
pop
rcr
jl
sbb
and
mov
and
push
sub
data16
cmp
cmp
mov
repnz
mov
lods
pop
pop
xor
call
jg
inc
dec
jg
pop
out
enter
loope
mov
popf
add
push
pop
(bad)
popf
data16
xor
mov
fsub
imul
pop
imul
(bad)
cmovl
jno
aam
jge
sahf
dec
call
jo
into
pop
xchg
xor
out
fldenv
je
mov
call
imul
lds
mov
xchg
in
bound
lods
inc
cld
call
xchg
add
and
push
push
mov
cmc
xor
adc
or
xchg
mov
xor
mov
cmps
std
adc
xchg
pop
je
test
fsubr
adc
and
inc
das
out
and
inc
pop
repz
mov
xor
sbb
sbb
rol
ret
out
dec
ja
js
cli
ret
adc
sti
sub
mov
daa
mov
xchg
lods
and
pop
popf
clc
rol
jle
cmc
les
pop
stc
icebp
int3
mov
cmps
fcom
adc
popf
outs
rcl
inc
cmc
rol
mov
(bad)
jbe
adc
or
test
jo
scas
adc
or
rcr
push
pop
mov
jmp
mov
fld
aas
push
pop
daa
push
bound
or
push
ja
shl
dec
cs
mov
(bad)
jg
add
inc
adc
rol
mov
inc
(bad)
sub
jb
pop
inc
and
stos
adc
fwait
add
out
xor
jnp
retf
les
ja
lock
pop
cld
jae
mov
add
std
or
jge
or
jecxz
cdq
leave
add
sahf
inc
mov
icebp
pop
fiadd
loope
ins
out
push
add
cmps
ficomp
lock
pop
mov
jp
adc
jae
(bad)
xlat
jmp
pusha
int
mov
sti
fadd
ds
or
add
(bad)
fcmovbe
dec
jp
or
sub
mov
popf
jo
jmp
repz
xor
xor
fcomp
test
(bad)
retf
mov
sbb
mov
jmp
pop
pusha
jg
jbe
adc
iret
add
scas
popa
adc
xor
hlt
jo
fadd
std
stos
rcl
ror
dec
sbb
out
fmul
mov
jg
mov
and
or
ss
jp
or
loop
sar
push
and
sahf
xor
sub
lods
sub
mov
jmp
movs
jne
(bad)
mov
xor
xchg
(bad)
out
fdivr
xchg
or
mov
imul
pop
rol
inc
push
or
mov
imul
ins
call
das
(bad)
pop
ror
repnz
fucom
adc
lods
mov
xchg
xchg
mov
movs
loopne
cmps
(bad)
push
inc
out
pushf
xchg
xlat
cld
push
add
xchg
xchg
jns
xor
pushf
push
cs
mov
imul
lahf
push
sub
es
in
(bad)
pusha
dec
inc
pusha
inc
add
mov
add
call
(bad)
shl
loop
(bad)
mov
inc
mov
nop
icebp
sub
adc
out
imul
in
and
sub
jge
dec
xchg
js
stos
movs
repz
xor
loop
and
push
(bad)
mov
and
dec
inc
shl
(bad)
sub
jmp
mov
movs
push
mov
or
test
pop
mov
fsub
iret
ficomp
jle
ins
cs
jbe
pop
imul
jne
adc
xor
xchg
(bad)
jae
sub
xor
bnd
test
sbb
shl
xor
xchg
nop
ror
lds
inc
sti
mov
mov
hlt
mov
outs
shl
call
mov
pop
sub
cmc
push
jae
xchg
or
call
clc
push
mov
ss
movs
or
push
cmps
cmp
scas
and
fst
jno
pop
sub
pop
cmp
and
mov
test
jle
jmp
(bad)
mov
dec
imul
sub
cmp
out
xor
fstp
aas
and
out
sub
pop
fistp
lods
aaa
popa
add
addr16
add
sub
cmp
test
and
add
mov
dec
mov
dec
cmp
adc
or
xor
push
mov
pop
add
push
loope
mov
mov
adc
inc
add
movs
xor
pop
xchg
mov
dec
push
pop
into
xor
iret
mov
(bad)
jnp
sbb
mov
xchg
leave
cmp
fld
and
loopne
cmps
fadd
loope
movs
ret
dec
call
imul
lods
dec
cmc
imul
pop
loopne
(bad)
lods
ja
xor
inc
cmp
ins
mov
test
loopne
dec
lds
add
fmul
and
mov
stos
test
and
jmp
xchg
cld
fcmovu
jae
or
out
adc
rol
dec
in
lods
das
iret
push
popa
out
cmp
push
xchg
sub
out
and
or
mov
fdivr
push
jl
push
ins
lods
loope
jno
popa
push
outs
das
add
idiv
or
cwde
xor
push
add
lods
push
sub
pop
adc
mov
cwde
pop
push
imul
dec
sbb
sti
sbb
mov
jne
loop
mov
imul
lods
das
xchg
xchg
push
loopne
mov
mov
mov
das
(bad)
mov
imul
cmps
scas
and
test
mov
(bad)
jo
outs
jnp
fs
test
call
push
int3
mov
sahf
fld
xchg
test
and
pop
dec
push
sub
or
aad
cld
mov
stc
(bad)
rol
es
ror
arpl
repz
or
jo
std
sbb
daa
cmc
div
rcl
loopne
cmp
mov
xchg
jg
mov
push
xor
sub
hlt
stc
pop
std
arpl
addr16
mov
pop
(bad)
pusha
test
push
sub
push
ds
loopne
adc
and
jge
pop
rol
out
das
outs
xor
adc
test
mov
inc
pavgb
mov
retf
outs
sbb
xchg
sub
fstp
ret
sti
push
movs
or
cmp
pop
fild
out
pop
sub
xchg
push
push
imul
dec
mov
lods
jne
cli
jmp
fiadd
test
nop
and
pop
mov
scas
addr16
sbb
jl
jmp
mov
out
jp
aaa
jmp
xchg
int3
pop
mov
mov
cwde
fnstcw
retf
out
cmp
push
sbb
inc
fdiv
mov
je
adc
ins
loope
sub
mov
out
gs
stos
adc
xchg
dec
push
sti
icebp
sub
rcl
scas
fstp
daa
sbb
dec
int
mov
jne
xor
push
pop
push
inc
add
and
jbe
push
sub
sahf
aaa
cmp
cli
or
xchg
lock
pop
cli
dec
fcmovnbe
cvttps2pi
icebp
push
inc
pop
adc
(bad)
in
jmp
aad
pop
aam
xchg
repnz
imul
in
sub
int3
sbb
sar
loop
pop
cmc
test
jne
inc
mov
(bad)
mov
aaa
leave
push
jo
xor
lods
lods
test
pushf
mov
pop
inc
adc
loopne
lea
cld
pop
sar
xchg
add
ins
call
sub
fstp
add
mov
dec
xor
adc
add
imul
push
dec
dec
bound
lea
jmp
pop
cmp
icebp
cwde
std
mov
and
mov
add
xchg
pushf
fxch
xor
aaa
fild
inc
push
aaa
push
push
lods
int
repnz
aad
out
shl
fs
xchg
js
in
bound
sbb
sub
xor
ins
add
mov
retf
mov
aaa
std
dec
dec
fmul
cmp
imul
outs
test
sub
call
cwde
mov
dec
pop
cwde
jp
jg
pop
xchg
outs
add
sub
in
xchg
sbb
mov
pop
adc
inc
(bad)
adc
dec
stos
(bad)
sbb
add
cmps
pop
fdiv
enter
sbb
test
jle
test
cmp
mov
adc
cmp
jp
enter
pop
jns
xor
test
adc
pushf
iret
push
add
jecxz
sahf
pushf
or
pop
hlt
es
mov
pop
stc
dec
mov
hlt
mov
in
out
sbb
arpl
dec
addr16
mov
xchg
test
xor
sbb
cmp
addr16
enter
pop
cld
sub
xchg
jns
inc
stos
call
cli
mov
ret
jg
fsubr
sub
icebp
cmps
sub
out
mov
pop
cmp
fincstp
in
mov
sub
movs
aaa
push
fldpi
lock
bound
bound
cmp
push
int
mov
cmp
pop
xchg
mov
mov
shl
cli
mov
push
jnp
lds
arpl
pop
mov
push
jno
xchg
inc
inc
out
ins
retf
(bad)
pop
inc
mov
rcl
pop
sub
les
cld
inc
call
xchg
loope
retf
dec
fs
out
xor
or
(bad)
gs
cmp
inc
mov
or
or
clc
pushf
shl
loopne
mov
fidiv
push
or
push
aaa
cld
pop
mov
call
bound
out
mov
pop
icebp
pop
fimul
aas
jne
push
mov
mov
pop
add
fstp
mov
jecxz
sub
jne
jns
std
mov
or
mov
or
jg
mov
xlat
xchg
xchg
movs
out
mov
out
pusha
js
dec
and
jmp
mov
sbb
mov
cmp
fisttp
mov
shl
or
cmps
xchg
sar
push
pop
xchg
repz
push
lods
xor
xlat
fstp
cmp
rcl
fwait
in
imul
jmp
mov
cli
ss
cmp
pop
push
push
push
mov
into
rol
lods
cli
aad
scas
ror
add
dec
sysenter
jnp
cmps
mov
(bad)
das
xchg
loopne
xchg
xor
loop
pop
sub
mov
xchg
ret
leave
sti
sahf
ins
into
ret
mov
sub
xlat
xor
int3
cs
adc
dec
pop
(bad)
xor
sub
(bad)
pusha
fidiv
ins
daa
sbb
bnd
jns
stos
fs
or
dec
scas
(bad)
js
fst
inc
push
sbb
sbb
popa
jne
adc
xor
sbb
cmps
jne
jo
fs
cmp
int3
inc
dec
add
seto
mov
test
popf
scas
dec
mov
fs
push
std
mov
jns
ins
outs
scas
push
jl
retf
or
repz
and
xlat
cli
outs
xchg
push
cmp
mov
int3
xchg
inc
sub
dec
xor
push
cmps
or
pop
bound
repnz
ja
mov
repz
outs
mov
adc
fistp
cs
aad
jo
pusha
mov
gs
mov
aad
inc
push
test
inc
imul
(bad)
mov
xor
push
stc
and
or
mov
sbb
(bad)
aas
in
pop
arpl
fwait
add
inc
sbb
rol
xchg
jp
loop
fbstp
call
sbb
jle
dec
sub
mov
ret
fucomi
sti
jno
(bad)
dec
dec
add
pop
imul
push
mov
pop
xor
lds
jns
add
daa
dec
mov
scas
dec
test
mov
dec
mov
aaa
xor
pop
xchg
push
rol
cmp
jp
jne
cli
jle
es
adc
mov
mov
push
shl
pusha
pop
dec
outs
ss
pop
and
cmp
mov
jnp
(bad)
call
dec
rol
addr16
retf
or
cwde
shl
retf
out
mov
xchg
push
push
dec
cmc
jae
loope
ja
ins
jle
mov
cmp
out
sub
fcmovnbe
jl
clc
dec
push
cmp
bound
jge
outs
or
test
aaa
leave
setp
mov
mov
mov
mov
shl
push
sbb
fisubr
and
lock
jle
pop
lods
addr16
arpl
push
cmps
lahf
into
test
dec
cld
adc
js
enter
loope
jg
adc
ds
inc
movs
aas
(bad)
push
xchg
add
cwde
push
fild
dec
fs
or
retf
(bad)
jmp
pop
cmp
or
test
inc
mov
out
stos
sbb
test
mov
push
das
ins
lods
fstp
shl
retf
pop
and
sub
call
popf
push
(bad)
push
cmps
add
fldl2e
xchg
and
xchg
ficomp
jl
rol
xchg
nop
loope
pushf
mov
iret
mov
mov
les
popf
and
sbb
fdiv
dec
pop
pmaxsw
dec
dec
rcl
and
test
ret
and
xor
mov
adc
mov
in
jmp
repnz
call
addr16
test
movntps
ss
inc
fisttp
retf
ror
add
int
xor
xchg
mov
pop
mov
imul
pop
adc
mov
jae
or
cmp
jae
ins
(bad)
mov
ins
adc
ins
dec
pop
pop
ror
or
std
call
cld
cmp
out
dec
or
jg
cmp
ret
fcom
shl
mov
jno
pop
sbb
test
cmps
push
cmp
push
daa
fidivr
push
fs
popa
fistp
test
dec
fbstp
or
xor
sbb
dec
cmp
lds
jecxz
inc
add
jle
jbe
stos
cmp
inc
xor
loope
inc
pop
sub
scas
pcmpeqd
aad
in
mov
mov
test
add
push
cmp
mov
inc
lock
ins
dec
pop
sbb
repnz
call
cmp
mov
fs
and
dec
aam
(bad)
jge
xchg
inc
xchg
(bad)
push
push
mov
pop
addr16
test
inc
into
mov
mov
aam
adc
adc
ins
jns
pusha
push
add
loopne
add
loopne
mov
loopne
mov
mov
mov
clc
(bad)
leave
addr16
adc
enter
inc
aaa
aad
shl
rcl
outs
(bad)
inc
daa
xchg
shl
ror
(bad)
push
int3
xchg
and
fst
adc
sub
(bad)
data16
adc
dec
addr16
ds
sub
ficom
sub
out
(bad)
cmp
push
aam
sub
mov
stos
dec
rol
xchg
fisubr
mov
jle
sbb
push
dec
sub
and
cmp
fdiv
or
sar
xchg
push
push
outs
sahf
push
cdq
mov
push
les
add
cli
sahf
and
mov
adc
xor
cwde
inc
xchg
adc
xchg
jae
xchg
pop
mov
and
scas
adc
sub
lds
lods
leave
push
cmp
mov
(bad)
jmp
dec
pushf
push
pusha
jo
fnstenv
jge
cld
pop
mov
and
scas
add
aas
push
lds
psubd
inc
jg
jb
hlt
mov
stc
push
push
sub
out
mov
xchg
je
in
int
fsubr
outs
pusha
push
xor
jnp
sbb
retf
(bad)
xchg
es
mov
and
mov
cmp
outs
int3
sbb
xor
cmp
inc
repz
inc
test
je
shl
adc
in
repz
(bad)
jbe
ins
repnz
loopne
xlat
jmp
iret
xchg
adc
fmul
inc
sub
adc
jb
add
sbb
popf
cmp
pop
dec
out
in
cmc
(bad)
int3
test
fst
movs
call
mov
rcl
cmp
xchg
aad
adc
out
(bad)
fidiv
rcl
xchg
scas
inc
(bad)
loopne
cli
lds
push
mov
es
scas
mov
shl
xchg
mov
ror
push
rcl
imul
dec
bound
cmp
xor
xor
aas
lock
in
add
fbld
sub
in
mov
push
mov
aas
ret
push
sbb
int3
scas
cmp
xlat
imul
pushf
pop
push
out
inc
into
rcr
retf
adc
js
popf
(bad)
ds
push
rcr
mov
(bad)
add
aaa
xchg
dec
mov
fisubr
cld
(bad)
call
xlat
mov
out
bound
gs
mov
jmp
mov
adc
loop
loopne
sar
jmp
mov
daa
fild
fstp
imul
test
push
inc
inc
sub
mov
mov
jnp
imul
pop
lods
push
out
rcl
ret
pop
sub
add
shl
or
lods
adc
jbe
inc
mov
int
setl
leave
dec
add
dec
aam
add
push
push
push
jg
jp
dec
imul
int3
xchg
mov
add
add
outs
push
loopne
pop
out
push
inc
lds
sub
pop
pop
hlt
mov
add
pop
(bad)
push
mov
adc
movs
push
inc
sbb
sbb
shl
xchg
pop
push
popa
call
sub
aad
xor
or
adc
pop
jmp
rol
ins
retf
push
pop
push
jmp
pop
js
imul
or
in
adc
xor
ret
cmps
fadd
dec
rcl
or
shl
enter
jmp
mov
mov
test
shl
retf
xor
mov
lods
fwait
push
ret
call
aad
xchg
(bad)
sub
dec
mov
xchg
push
push
adc
ficomp
cli
cmp
jmp
fisubr
push
addr16
popa
push
pop
loope
ret
mov
xchg
sub
pop
aas
jnp
xor
adc
push
rol
or
xchg
vpminsw
cmp
mov
sub
mov
scas
das
addr16
pop
cmp
cmp
cmp
adc
in
in
adc
mov
pop
arpl
mov
push
push
retf
retf
lahf
gs
inc
stos
cmps
retf
scas
imul
test
mov
shl
adc
push
adc
movs
sub
push
pusha
and
add
ins
push
adc
sti
add
cs
enter
xchg
cmp
adc
inc
pop
mov
dec
arpl
jno
xor
adc
push
mov
push
and
sub
inc
aad
cld
adc
sbb
and
ins
jecxz
pop
test
jb
popa
adc
fld
aad
les
test
push
je
js
loopne
mov
xor
sbb
jno
xchg
cmp
sbb
(bad)
std
and
xchg
mul
mov
fadd
(bad)
pop
jae
in
loopne
fisub
add
iret
ret
scas
pop
dec
fisttp
loop
mov
cmps
sub
xor
fisub
cld
not
sbb
shl
jns
pop
or
mov
loopne
js
lods
cmp
jbe
lock
(bad)
push
ret
in
jg
dec
add
lahf
mov
inc
sahf
xchg
leave
pop
jb
and
ins
mov
cmp
jae
les
mov
icebp
dec
or
stos
push
mov
lea
and
fist
and
mov
mov
out
push
cmc
push
inc
cld
push
movs
xor
ja
ja
les
pand
outs
mov
shr
push
in
cmc
pop
sbb
mov
mov
xchg
mov
ror
(bad)
mov
xchg
and
jecxz
stos
add
leave
imul
cmc
mov
scas
push
ret
mov
imul
sahf
ror
nop
mov
or
inc
inc
fsub
xlat
mov
icebp
repnz
fwait
mov
xor
push
into
push
int3
mov
xlat
inc
arpl
jle
jg
pop
mov
fcmovnu
mov
mov
or
sahf
ins
mov
cmp
sub
cmps
div
pop
and
push
xor
pop
call
mov
in
dec
push
push
loop
xor
mov
mov
jb
push
and
adc
xchg
adc
jae
call
scas
les
cdq
adc
fimul
pop
out
cmc
xchg
loop
int
xchg
add
(bad)
adc
call
ins
into
arpl
or
cmc
jge
and
mov
out
and
clc
sbb
xor
xor
gs
shl
inc
inc
dec
repz
movs
inc
loope
stos
in
rcr
aam
movs
inc
jne
push
add
push
fcmovu
out
push
sub
mov
sahf
stos
sbb
js
sahf
dec
lock
or
arpl
mov
xor
jo
mov
push
inc
mov
adc
xor
inc
and
out
sahf
fstp
out
xchg
arpl
repnz
mov
push
pop
shr
stos
sbb
bound
cmp
add
push
movs
cmp
dec
pop
inc
jge
sub
sub
cmp
push
int3
(bad)
mov
mov
add
sbb
call
mov
fucom
dec
popa
mov
push
call
xchg
sbb
pop
stc
loopne
and
mov
pop
xchg
shl
cmp
xor
mov
fdivrp
cmp
out
call
inc
stos
cmp
cld
rcr
jb
fisubr
bnd
bound
push
xchg
test
sub
xlat
movs
push
push
out
(bad)
sub
xchg
out
pop
sub
(bad)
loopne
push
or
mov
ror
(bad)
call
test
pop
dec
rcr
out
pop
xlat
cmc
add
(bad)
jmp
add
mov
das
ret
mov
sbb
sub
sub
ret
cdq
pop
dec
ja
push
dec
pop
or
ret
pop
fidivr
les
sub
aad
ins
(bad)
mov
data16
sbb
sbb
arpl
mov
xor
imul
jp
jb
and
ja
mov
imul
jl
aaa
(bad)
out
xchg
nop
cmp
jmp
pushf
pop
xchg
aad
hlt
push
adc
add
int
pusha
out
push
mov
mov
jno
fdivr
dec
mov
add
jmp
aam
loope
test
jmp
push
mov
cmp
sbb
xchg
call
xor
int3
xor
pushf
mov
and
adc
cld
ja
int3
cmp
cmp
mov
aaa
jg
inc
push
outs
test
call
mov
jl
xchg
arpl
dec
test
adc
mov
dec
shr
adc
add
mov
cwde
cmp
je
int
xchg
paddusw
into
ins
sbb
xlat
call
lods
ss
xor
(bad)
into
or
cmps
dec
push
lahf
sub
frstpm(287
dec
out
pop
and
in
cld
das
dec
repnz
mov
(bad)
icebp
aad
cmps
push
jl
mov
jmp
cs
dec
cmp
shl
idiv
mov
stos
inc
sbb
pushfw
xor
retf
cmps
mov
movs
xor
bnd
cmp
aaa
or
les
push
xor
jecxz
sbb
ja
cmp
in
push
xchg
mov
fs
mov
es
sahf
sub
leave
mov
jecxz
outs
dec
mov
jnp
sub
mov
movs
inc
pushf
adc
and
lock
or
or
stos
dec
(bad)
add
iret
pop
pop
pusha
lea
and
cmps
inc
in
and
mov
push
mov
cmps
repz
hlt
nop
das
mov
arpl
leave
xor
rol
ja
add
inc
jae
loopne
aad
xor
stc
lahf
sub
inc
(bad)
lock
sahf
adc
jmp
fwait
mov
arpl
or
hlt
pop
retf
mov
mov
mov
gs
fsubr
test
leave
out
les
addr16
cmps
mov
or
sti
sbb
arpl
push
pop
es
test
mov
or
push
inc
aaa
push
add
repz
in
pop
cmp
pop
out
push
pop
out
push
cwde
dec
shl
push
mov
pop
out
repz
push
test
add
add
lahf
pop
cmc
ins
ss
push
cmp
adc
inc
xlat
xchg
(bad)
push
fistp
in
mov
shl
ins
sub
rol
loop
cmp
xor
inc
pop
retf
fadd
repz
icebp
les
push
cdq
pusha
dec
mov
repz
(bad)
jb
xchg
pop
inc
scas
inc
int
imul
imul
aad
cld
pop
aam
push
or
mov
push
jecxz
xchg
(bad)
adc
dec
cmp
into
mov
pop
cwde
lds
and
sti
and
push
(bad)
retf
jo
(bad)
in
sub
xor
(bad)
sbb
and
dec
shl
xor
ficom
mov
xchg
and
adc
pop
jno
dec
xchg
mov
inc
cmp
ins
jp
mov
in
jg
xchg
mov
cmp
rol
adc
dec
mov
enter
stos
(bad)
movs
inc
xor
nop
sub
add
scas
xchg
stos
(bad)
shl
mov
adc
mov
ret
rcr
fsub
imul
int3
jb
push
ja
iret
pop
setnp
mov
in
adc
mov
jae
inc
mov
mov
aaa
in
push
and
mov
ins
popf
dec
adc
sub
sub
movs
dec
loopne
xor
ss
sbb
jecxz
sub
mov
inc
add
add
pop
scas
fs
jle
jo
dec
mov
xlat
rcr
sub
inc
push
push
rcr
ret
mov
and
addr16
jge
cmp
mov
aam
sbb
outs
pop
das
(bad)
push
sbb
pop
adc
push
shl
nop
rcl
and
dec
jnp
pop
adc
scas
(bad)
popf
inc
xchg
adc
fcomp
cdq
inc
xor
jmp
xor
movs
test
test
scas
imul
adc
lock
jecxz
repnz
and
hlt
xchg
adc
inc
add
and
jo
out
inc
add
inc
ins
add
in
jecxz
fmul
std
xchg
in
addr16
xor
cs
and
aaa
push
jbe
js
mov
mov
sbb
call
dec
out
(bad)
aaa
xor
cmp
imul
sub
pop
jl
and
push
jl
add
adc
xor
mov
mov
cmp
out
std
or
test
pop
nop
jmp
dec
jns
in
mov
iret
lds
mov
and
in
das
mov
jp
cmps
mov
stc
bound
or
in
dec
sbb
cld
pop
les
lahf
mov
(bad)
loop
pop
push
push
push
jno
popf
xor
mov
adc
loopne
mov
fs
sbb
repz
xor
or
xor
enter
adc
xchg
mov
outs
bound
retf
mov
mov
xor
xor
cmps
pop
xchg
sub
inc
adc
xlat
mov
mov
inc
(bad)
stos
data16
ja
xor
sbb
xchg
push
mov
clc
xchg
push
cmp
rcr
cmps
dec
mov
xchg
or
pop
pop
inc
or
mov
push
pop
retf
das
and
xlat
adc
shl
(bad)
repz
mov
sti
test
cmp
pop
scas
push
lea
mov
jne
add
jp
pushf
(bad)
fwait
xchg
mov
cmps
inc
loopne
push
pop
inc
in
cs
xor
daa
push
(bad)
sti
pop
push
nop
pop
addr16
cdq
repz
push
shr
mov
push
hlt
leave
inc
add
in
mov
pop
lds
sub
fild
jmp
hlt
imul
stc
imul
inc
test
mov
lods
adc
jb
xchg
xlat
and
jmp
mov
scas
adc
les
(bad)
mov
inc
add
cdq
push
mov
sahf
test
or
scas
cdq
lahf
aad
mov
int
dec
fcom
pushf
(bad)
cmp
pop
lahf
dec
lods
int
sbb
mov
bound
xchg
jl
ficom
test
mov
pop
xchg
jb
(bad)
inc
dec
fst
call
inc
ror
mov
xor
inc
sub
push
and
cmp
jnp
mov
adc
or
sbb
repz
sbb
repz
enter
mov
push
adc
add
xchg
gs
cmp
push
cmp
inc
and
add
jb
neg
jnp
loope
movs
cs
mov
leave
mov
(bad)
xor
aas
retf
rcr
mov
mov
je
in
adc
dec
scas
sub
(bad)
lds
imul
or
nop
adc
inc
sti
push
div
dec
loop
in
div
std
retf
and
outs
dec
sbb
jle
cmps
cmp
sbb
addr16
ins
push
cmp
movs
or
jle
clc
std
mov
in
mov
mov
cmp
inc
mov
mov
mov
xor
out
(bad)
stos
rcr
mov
fisttp
shl
test
gs
dec
mov
je
xchg
mov
jl
int3
aad
mov
fidivr
mov
push
cdq
std
push
cld
push
mov
or
mov
mov
add
mov
and
data16
push
mov
rol
test
dec
mul
sub
aad
or
inc
mov
inc
mov
xchg
sub
int3
push
pushf
daa
lds
aad
jmp
test
add
xor
mov
pop
and
movs
ret
push
or
push
nop
daa
imul
add
popa
xor
ret
stos
ror
pushf
fistp
icebp
xor
jge
dec
rcl
loop
aaa
xor
inc
sbb
push
mov
repz
retf
repnz
pop
dec
repz
das
push
sbb
pop
mov
lods
mov
popf
retf
sbb
pop
sub
in
test
dec
cmp
sahf
xor
sahf
xchg
jge
enter
cli
fisttp
pusha
pop
gs
stc
test
mov
sub
add
(bad)
sub
and
xchg
push
sbb
(bad)
out
cmc
fwait
mov
mov
imul
mov
test
inc
ret
xor
inc
adc
daa
pop
faddp
push
scas
in
xchg
paddb
lods
adc
jnp
sbb
outs
sub
(bad)
adc
enter
jle
out
jns
outs
pop
xchg
mov
(bad)
in
retf
mov
es
cmp
movs
mov
in
xor
jecxz
outs
mov
jae
pop
dec
jns
(bad)
mov
cmc
hlt
sbb
dec
jle
push
outs
popf
xchg
mov
xor
pop
xchg
leave
adc
pop
das
sub
mov
in
ins
jmp
xlat
mov
pop
xor
cmc
lods
fwait
mov
mov
dec
mov
scas
pop
int3
test
jno
jge
aam
or
xchg
enter
inc
mov
and
pusha
int3
aas
pushf
sub
rol
jnp
out
js
jnp
or
add
ret
xchg
data16
aas
call
cmp
repnz
sbb
dec
cld
sbb
dec
mov
pop
xor
adc
jae
push
aad
stos
jnp
sbb
aaa
loope
xchg
xchg
repnz
retf
xchg
mov
jp
dec
js
ins
xor
xchg
mov
xor
imul
xlat
outs
and
xchg
movs
xchg
(bad)
jbe
fidivr
cwde
add
push
mov
movs
scas
mov
cmp
inc
push
dec
inc
push
icebp
cli
adc
xchg
aam
jne
adc
outs
dec
and
shl
push
cmps
not
adc
es
pop
fcom
repz
jae
pop
pop
inc
mov
imul
sbb
ds
in
mov
ret
jmp
in
mov
sbb
add
retf
xchg
and
clc
mov
loop
sub
jae
call
cld
pop
fistp
pusha
frstor
push
push
and
lods
cmp
jg
ss
cmp
push
jge
cdq
inc
cmc
rcr
out
push
fbld
jl
xchg
int
test
jecxz
ins
nop
mov
and
and
and
icebp
fsubr
sub
ret
das
cmp
xchg
retf
inc
cmp
mov
jae
rol
out
jae
ds
fs
imul
aad
lahf
sbb
iret
outs
jmp
cmc
aaa
enter
jge
jmp
pop
iret
add
sbb
mov
inc
jb
inc
push
push
fdivr
add
mov
jne
cmp
cmps
cmp
push
pop
outs
cmc
mov
mov
(bad)
ret
pop
xchg
rol
inc
bound
sbb
sar
shl
call
or
mov
jne
mov
je
or
jl
in
xchg
xor
inc
jno
iret
mov
lds
xlat
cmp
sti
inc
ret
pop
push
shl
ret
add
jnp
shl
xor
jecxz
popf
fs
inc
cmp
xchg
push
dec
stos
xchg
in
push
mov
mov
nop
rcl
jg
jge
push
and
mov
inc
jne
xchg
leave
cmp
add
test
ja
in
cs
add
cmp
mov
outs
nop
(bad)
pop
retf
or
aaa
outs
(bad)
mov
out
out
ja
dec
mov
mov
call
xor
jbe
jmp
shl
(bad)
mov
loopne
pop
int3
add
jb
and
add
pusha
movs
lds
ins
sbb
xor
loopne
pop
rcl
daa
mov
adc
dec
mov
sar
mov
repz
mov
xchg
mov
fiadd
push
lock
std
or
clc
jmp
imul
cmp
test
cmc
or
cmps
mov
mov
or
sbb
inc
sbb
or
and
outs
loopne
fld
fwait
jp
sti
mov
(bad)
or
dec
add
fisubr
ret
rcl
xor
cmp
mov
call
bndldx
test
stc
jge
ja
push
cwde
aaa
scas
push
stc
sub
dec
inc
stos
pop
push
rol
call
push
data16
sub
enter
xchg
call
cmps
jb
mov
out
shl
push
les
js
cmp
(bad)
test
scas
cmps
lods
fadd
xor
jmp
xchg
mov
movs
or
(bad)
stos
push
aaa
and
dec
mov
and
popa
push
add
outs
jge
aad
sahf
push
sbb
ins
stos
adc
xchg
mov
inc
jmp
push
in
jnp
je
cs
mov
lea
cmp
jge
mov
into
in
les
or
add
fimul
and
dec
mov
mov
sub
aas
rcl
push
pop
dec
out
push
xor
or
push
cmps
push
add
(bad)
mov
in
pop
mov
push
mov
push
mov
sbb
jb
scas
arpl
inc
or
adc
movs
mov
push
ds
mov
or
fwait
test
pop
cmp
sub
jl
test
in
xor
std
jge
mov
(bad)
in
jo
lea
or
xchg
sbb
sar
push
mov
mov
adc
nop
dec
xchg
and
xchg
push
aam
cmp
fwait
pop
popf
out
out
outs
ds
inc
jle
push
jmp
loopne
and
and
cwde
fsubr
inc
inc
(bad)
stos
ja
xor
out
jnp
mov
sub
arpl
arpl
fcmovbe
arpl
add
pop
or
stos
adc
jmp
dec
outs
aaa
jmp
cmps
sbb
pop
sub
rcr
hlt
aas
fild
mov
shl
inc
mov
pop
push
imul
mov
xchg
sub
clc
adc
movs
dec
and
pusha
cmp
loop
mov
fisub
adc
add
sbb
js
test
es
pop
and
xchg
jp
(bad)
fucomi
popf
pop
jb
mov
push
dec
mov
enter
(bad)
in
inc
popa
mov
adc
fsubr
lahf
adc
fwait
out
clc
pop
and
rol
les
sar
ficomp
(bad)
mov
dec
rcl
inc
pop
fidivr
lods
repnz
pop
push
cmp
shr
and
cdq
cdq
aas
sar
jl
xlat
xlat
and
xchg
xor
xchg
stos
jmp
rcl
nop
bound
mov
loope
test
push
fdiv
push
addr16
popa
pop
in
std
test
pop
movs
ins
cmc
mov
push
xor
push
add
mov
cmp
outs
movs
setbe
mov
lock
retf
(bad)
jle
ficom
push
je
neg
fwait
mov
inc
cmp
push
sub
xchg
mov
daa
dec
int3
push
xor
jne
aas
test
push
fistp
inc
jmp
sub
repz
xchg
push
fdiv
out
add
(bad)
in
int3
test
scas
cmp
and
or
jmp
jge
mov
stos
mov
out
js
xchg
sub
adc
mov
jne
mov
rol
imul
pop
inc
rol
in
push
sbb
jecxz
xlat
aad
(bad)
mov
fdivr
icebp
les
mov
add
jns
adc
adc
mov
data16
sub
hlt
ss
into
jmp
scas
mov
jns
or
int3
jmp
mov
pushf
mov
cmp
xor
jb
mov
ret
or
and
and
mov
test
mov
aaa
leave
fcmove
pop
in
retf
mov
out
test
ja
inc
js
mov
sti
imul
mov
leave
pop
mov
xor
aam
mov
fnstcw
inc
xchg
and
int
pop
cmp
fmul
hlt
dec
mov
dec
inc
add
xor
aam
hlt
cmp
dec
jae
xchg
scas
inc
cmove
fisub
adc
pop
dec
add
sub
stos
mov
dec
cmp
lods
test
sub
sahf
fild
mov
add
sbb
sbb
jnp
loope
and
rcr
sub
dec
xchg
fist
xor
and
add
mov
xchg
into
dec
gs
sbb
push
sbb
push
mov
ret
sub
pop
mov
xchg
push
(bad)
xchg
imul
in
inc
dec
lods
out
call
pushf
pop
ret
mov
fcmovu
mov
shr
movs
popa
test
mov
es
in
cmp
fsub
sub
jnp
ins
mov
jno
jmp
in
xchg
into
xchg
out
neg
xchg
xor
push
lods
jo
jo
xchg
pop
sub
xchg
or
jb
push
mov
push
mov
push
test
xor
gs
adc
inc
push
pop
nop
mov
xchg
push
sbb
fcmovnb
out
add
mov
sub
pop
pusha
pop
ds
push
xor
mov
test
(bad)
outs
sbb
xchg
call
shl
test
mov
retf
imul
fisub
ror
jnp
aad
cli
inc
jle
cmp
sub
or
jecxz
fwait
add
inc
push
mov
dec
adc
inc
nop
xchg
in
and
adc
sar
dec
dec
dec
sbb
jl
retf
fwait
or
test
test
add
stc
cmps
data16
gs
lock
and
mov
(bad)
jmp
cmps
pop
xor
in
es
adc
xchg
(bad)
dec
dec
iret
pop
jg
in
jno
and
xor
in
cmps
imul
xor
movs
fcom
mov
mov
int3
xchg
aaa
retf
cmc
cmp
or
ror
xor
mov
jge
push
xor
(bad)
stc
pop
ins
cmp
jne
mov
fs
xchg
mov
mov
xor
pop
cmp
popa
add
mov
mov
stos
rol
stc
(bad)
cmp
imul
pop
movs
leave
sbb
cmp
pop
or
xchg
jno
ja
cmps
test
jmp
add
push
push
xor
mov
add
jmp
and
pop
aad
sub
cmp
push
or
or
aam
jne
rcr
xor
pop
test
outs
adc
cmp
push
jnp
arpl
push
shl
jbe
gs
sub
test
fisubr
movs
jle
adc
push
mov
outs
xchg
mov
stos
sbb
popf
(bad)
icebp
cmp
cmp
jge
dec
ja
and
push
neg
and
fmul
mov
clc
cmp
or
add
(bad)
ins
cdq
pop
mov
or
jno
das
pop
les
iret
jl
mov
fsubr
ss
pop
xor
cwde
xchg
aad
fsubr
scas
jne
cdq
aam
das
dec
rcl
jnp
and
div
pop
jmp
in
dec
or
cmp
xor
outs
sub
xchg
imul
jmp
xchg
sub
jb
sub
and
mov
sbb
iret
stos
out
arpl
pop
or
jae
jecxz
jns
pop
std
sub
sahf
push
aad
pop
mov
xchg
ins
adc
out
das
ss
mov
(bad)
fcmovu
mov
rol
gs
dec
loope
inc
cmc
sbb
cmp
and
cli
mov
mov
dec
gs
xchg
int
pop
xor
out
aad
sub
inc
cdq
and
mov
ret
outs
mov
mov
xor
mov
sub
mov
sub
or
cmp
movs
loop
mov
cmp
pop
test
loopne
rcr
jnp
aaa
sbb
xor
pop
ror
out
xchg
aas
mov
mov
fisub
fwait
dec
je
xchg
sar
sbb
jbe
sbb
jb
xchg
cwde
fdivr
sti
add
lds
xchg
mov
sub
mov
and
es
stc
sub
stos
lock
loop
add
cwde
adc
popa
xchg
push
xchg
sub
mov
fistp
dec
inc
or
in
aas
add
add
dec
sbb
ret
push
in
pop
add
xchg
rol
or
jne
mov
lods
jae
std
mov
inc
xchg
outs
adc
test
aas
jae
or
mov
ins
(bad)
xor
pop
jge
shl
jmp
in
popf
js
movs
mov
mov
ins
imul
imul
ret
test
add
adc
xchg
shr
leave
push
sub
iret
dec
ins
mov
aas
adc
sbb
rcr
stc
push
retf
dec
add
retf
and
ret
mov
cli
mov
in
rol
push
sahf
cld
cs
and
jmp
dec
pop
int3
push
call
mov
clc
jne
retf
inc
push
adc
sub
and
jae
dec
cmps
sar
(bad)
fwait
pop
jp
and
hlt
sbb
in
push
iret
cmp
test
add
adc
(bad)
xchg
or
stos
sbb
push
hlt
push
dec
mov
test
into
out
or
iret
and
adc
mov
in
mov
xchg
cmps
pop
shr
push
lods
jg
cli
repz
jbe
rol
mov
mov
ds
test
les
mov
dec
cld
pushf
arpl
inc
mov
jo
rcr
mov
mov
loopne
fstp
xor
cmp
or
cmp
or
jae
ror
ror
pop
test
jbe
mov
mov
jmp
ss
and
outs
push
mov
pop
push
mov
inc
cdq
sub
or
sbb
adc
mov
ja
outs
xchg
bound
pop
jnp
xchg
mov
mov
push
sbb
push
scas
mov
sub
jno
push
repnz
call
pushf
pop
scas
cmp
sub
xor
sbb
inc
(bad)
jne
cmp
jecxz
dec
repz
dec
out
into
dec
cmp
mov
call
dec
retf
icebp
dec
test
fiadd
ficomp
pop
push
xchg
int
or
jo
push
xchg
fcomi
out
inc
cmps
cmp
inc
jne
jae
loope
fst
sti
outs
adc
mov
mov
lahf
cmps
xchg
jmp
pop
inc
add
neg
call
cmc
dec
mov
xchg
fmul
add
fwait
leave
mov
xor
mov
jb
nop
push
cmp
sub
xor
bound
xchg
not
ja
mov
push
ins
ja
pop
outs
ficom
jle
dec
xchg
push
lahf
adc
pop
sub
outs
leave
shr
popa
fwait
outs
sbb
sbb
loopne
add
fdivr
dec
outs
add
or
mov
add
out
jmp
push
popa
adc
cmps
in
jns
(bad)
call
mov
fs
jmp
mov
rcl
sbb
mov
in
ficom
or
jno
jle
sub
adc
cmp
push
(bad)
dec
pop
push
mov
pushw
aas
int
neg
push
xchg
jmp
in
hlt
sbb
outs
jecxz
and
fnstsw
pop
dec
jae
mov
adc
and
in
enter
call
mov
inc
inc
cli
jle
jp
sahf
cli
shl
push
fsubr
shl
jnp
or
pop
nop
push
arpl
cli
aas
mov
outs
adc
push
jle
aaa
aam
push
sbb
add
dec
jl
mov
repz
mov
mov
repnz
push
das
rol
das
mov
(bad)
test
movs
lea
(bad)
sub
call
test
adc
and
(bad)
(bad)
aam
fcmovne
inc
xchg
adc
add
xlat
or
ds
mov
lods
nop
push
dec
jecxz
add
mov
and
(bad)
and
push
sub
jecxz
jo
leave
and
sbb
rcr
push
sbb
and
pop
mov
test
ins
mov
sbb
jne
pop
dec
int
jle
fnstcw
fld
call
out
jb
and
inc
mov
and
adc
cdq
mov
jmp
push
pop
jmp
dec
inc
cmp
jp
and
cmps
and
fwait
xor
and
jno
or
int3
cli
inc
push
ins
ror
mov
and
fsub
ss
paddq
cdq
sub
xor
pop
mov
pop
retf
out
fstp
jle
into
(bad)
(bad)
out
or
xchg
push
mov
mov
dec
out
gs
lods
mov
dec
push
dec
push
pop
jb
cmc
test
scas
sbb
gs
out
fnstsw
(bad)
(bad)
mul
jno
and
cmp
and
xor
dec
mov
xor
std
push
leave
sub
mov
inc
jle
mov
mov
mov
add
pusha
xor
or
cmp
loop
stos
in
outs
int
cmc
pop
ret
cld
push
ds
xchg
mov
push
fisubr
push
dec
push
jb
lds
or
adc
lods
xchg
mov
fidiv
jmp
movs
fst
xor
xor
mov
retf
mov
mov
jecxz
dec
xor
jecxz
popf
cs
call
adc
mov
pop
sbb
(bad)
jle
sar
inc
jnp
lock
sub
ds
adc
dec
fstp
or
sti
mov
jb
xchg
jne
pop
jmp
push
mov
mov
inc
mov
push
xchg
(bad)
xchg
addr16
xchg
mov
adc
xor
out
sbb
mov
dec
cs
jne
sub
and
into
adc
in
sub
mov
stc
dec
(bad)
ins
xchg
pop
xlat
pop
int
sbb
clc
mov
lods
dec
mov
sbb
ins
push
jmp
fisubr
xchg
test
test
test
ds
jmp
sub
sbb
cmp
outs
movs
pop
cmp
ret
adc
arpl
int
pop
retf
pop
fst
pop
push
sbb
std
dec
ins
jge
or
pusha
sbb
lods
cmp
imul
ins
push
mov
out
lock
outs
sbb
jge
add
add
shr
xchg
cmp
shr
outs
push
loop
adc
retf
mov
in
mov
add
xchg
push
or
push
sbb
lahf
bound
imul
addr16
sub
push
std
bound
dec
mov
add
adc
fcom
in
das
lock
enter
movs
xor
xlat
add
mov
mov
pop
cmp
repz
cli
bound
xor
js
or
push
adc
push
dec
fs
mov
push
movs
mov
lock
add
stos
ins
jecxz
bound
cs
jo
mov
shr
call
test
dec
addr16
inc
mov
fimul
out
pushf
and
das
xchg
cwde
or
stc
fmul
ficom
into
xchg
sbb
sub
and
mov
mov
imul
call
imul
lahf
retf
cmp
popf
dec
mov
mov
pop
pop
iret
dec
fcomp
ja
(bad)
and
add
pop
stos
push
loopne
mov
cmps
push
add
push
jo
retf
sbb
mov
cld
xor
inc
stos
pop
mov
pop
ds
stos
rcl
adc
or
dec
adc
push
fsub
jns
push
test
pop
fsub
arpl
lods
mov
sbb
pop
xchg
pop
and
aas
(bad)
adc
push
xor
lock
xor
aaa
je
int
sbb
lods
(bad)
fstp
jge
inc
jmp
rcl
push
popa
jnp
les
fidiv
add
rcl
pop
call
pop
(bad)
mov
das
xchg
cmps
fs
cmps
rol
out
sub
sub
mov
xchg
jmp
(bad)
jne
sub
adc
xchg
out
xor
outs
dec
loop
pusha
popa
mov
aam
sub
adc
mov
and
(bad)
mov
enter
cmp
lock
jl
repnz
jo
into
and
push
cmp
add
fcomp
mov
test
ins
enter
retf
sub
mov
je
lods
push
imul
je
add
das
and
add
cli
sbb
jle
xor
dec
cmp
(bad)
cwde
test
pop
test
inc
popf
push
ins
sbb
xchg
push
daa
ret
fnstenv
fnstenv
retf
and
jp
mov
xor
sub
mov
jle
ret
pop
add
int3
and
sbb
fs
pop
or
mov
mov
aam
push
fwait
je
mov
rcr
loope
cmp
and
cmp
push
int3
mov
jbe
scas
leave
jae
test
sbb
and
adc
push
lock
fbstp
dec
cmps
or
mov
cmps
dec
mov
mov
inc
(bad)
adc
mov
xchg
cmp
cwde
mov
nop
call
add
fldcw
sbb
cdq
mov
xchg
popf
or
cli
inc
pop
int3
adc
and
dec
adc
pop
pop
jne
iret
xor
ja
fbstp
adc
xchg
pop
imul
dec
push
mov
jb
fild
jbe
mov
scas
push
xlat
dec
xchg
jl
movs
jmp
jns
xor
dec
mov
adc
leave
adc
adc
mov
pop
ins
mov
adc
inc
pop
loop
jmp
and
vpmaddwd
cdq
out
cmp
pop
cli
shl
push
adc
ss
adc
mov
popa
dec
lods
mov
mov
ins
ins
mov
div
popf
ss
aad
jnp
fadd
sahf
lock
sub
and
js
xchg
push
push
jecxz
xchg
in
daa
adc
jp
mov
push
je
push
aaa
(bad)
imul
dec
push
or
(bad)
pushf
test
mov
xchg
aaa
lods
mov
add
ds
dec
ins
shr
jne
xchg
ret
add
clc
shl
loop
movsx
fstp
add
fs
add
and
cmps
push
and
add
out
lock
add
call
dec
pop
and
xchg
sahf
scas
mov
cs
std
jno
or
or
popf
stos
test
push
in
jno
out
pop
push
retf
stc
cld
outs
fbstp
iret
sub
push
inc
loope
inc
inc
(bad)
out
sbb
pop
aad
imul
(bad)
jmp
mov
push
pop
adc
sbb
xchg
clc
dec
push
jno
int3
outs
call
mov
add
pop
icebp
mov
inc
out
sahf
sub
inc
ins
xor
cmp
or
add
mov
pushf
popf
fwait
or
dec
mov
sahf
xor
mov
add
test
outs
jnp
ds
jl
or
ins
pop
xchg
(bad)
xchg
ja
clc
fisubr
xor
nop
sahf
iret
ror
adc
rol
adc
fist
repnz
(bad)
pop
in
loope
repz
not
mov
je
sbb
push
sub
bound
push
jb
fistp
jb
shl
popa
out
jbe
je
xchg
test
dec
xchg
sbb
icebp
stos
adc
sub
cmp
mov
retf
loopne
dec
push
test
hlt
xor
pushf
pushf
ret
jp
dec
sbb
leave
(bad)
push
and
scas
int
cs
push
sub
call
sbb
test
out
aad
dec
pop
mov
xchg
xchg
sub
lods
stos
sbb
or
push
aas
xchg
pop
jb
fisttp
and
adc
(bad)
xor
add
arpl
jl
icebp
shl
icebp
popf
jne
sub
retf
inc
add
push
cs
pop
adc
mov
arpl
jns
popf
xor
jmp
fld
mov
popf
out
push
shl
js
xchg
loop
and
imul
shl
mov
shr
adc
iret
fst
dec
fwait
je
jo
enter
pop
mov
retf
and
mov
or
add
adc
pop
cmc
lock
fmul
push
or
shl
call
popa
loope
mov
jl
push
(bad)
ja
pushf
mov
xchg
mov
mov
add
je
mov
mov
dec
lds
fiadd
inc
push
aaa
daa
mov
mov
fld
arpl
sahf
shl
inc
iret
sbb
add
mov
cmps
cmps
xor
fldl2e
nop
jne
ret
mov
pop
lds
mov
mov
xor
jp
aaa
and
xor
sub
sbb
lahf
cmps
pop
std
xchg
jno
or
sti
cli
mov
add
add
mov
enter
(bad)
mov
xor
call
daa
fcom
mov
es
out
call
stos
ficomp
xor
cmp
adc
sub
ins
movs
mov
add
sti
ret
jmp
sub
inc
xchg
hlt
(bad)
sbb
sbb
jns
iret
loop
mov
out
ja
mov
mov
sar
xchg
lahf
shr
and
mov
out
call
lea
mov
shl
or
push
mov
popa
in
xchg
dec
cmps
dec
out
popa
fisub
sbb
jns
or
xor
cmp
lods
mov
adc
pop
pop
jns
(bad)
ja
outs
call
daa
rcr
lods
xchg
push
fld
xchg
std
mov
add
fisttp
inc
imul
dec
jmp
lds
int3
in
xor
adc
jge
sub
sub
imul
test
add
call
aaa
imul
fsubr
jecxz
sub
dec
mov
movs
stos
inc
sub
addr16
add
fisubr
inc
xor
in
cld
jno
pop
sub
in
sbb
mov
push
fistp
stos
mov
inc
pop
push
fwait
pop
jno
imul
jecxz
push
push
dec
call
out
cwde
out
nop
icebp
xchg
icebp
and
outs
call
inc
ret
xchg
mov
ret
mov
outs
adc
inc
push
mov
shl
and
adc
xor
mov
xchg
sub
pop
push
aad
mov
or
mov
scas
mov
inc
invd
popa
jl
or
enter
pop
test
xchg
dec
sub
outs
mov
pop
sub
mov
fdivr
pop
addr16
dec
shl
out
test
scas
lods
dec
jge
mov
daa
mov
vcvtps2pd
xor
push
dec
aam
in
add
pop
test
loop
enter
ins
pop
mov
icebp
jle
stos
mov
lods
(bad)
adc
dec
add
dec
adc
sub
xlat
adc
push
or
dec
sahf
mov
sub
test
or
add
adc
sbb
test
mov
cmc
lods
push
sub
xchg
clc
or
aaa
and
push
iret
inc
cmp
sub
inc
cwde
inc
mov
clc
xchg
test
add
mov
push
int
mov
inc
push
add
movs
pop
jbe
popa
aaa
(bad)
iret
icebp
cmc
cmp
scas
(bad)
fs
rcr
sbb
scas
inc
scas
xlat
sbb
xor
int
out
int3
jl
leave
movs
out
pop
loop
sub
and
clc
and
call
das
add
cmc
pop
jmp
cld
test
dec
pop
dec
sbb
mov
das
jmp
pop
mov
mov
mov
dec
ficom
loope
mov
pusha
js
fisub
or
imul
jmp
cld
sahf
or
ret
mov
lea
in
cdq
mov
inc
pop
ret
int3
fwait
popa
repnz
mul
lahf
inc
(bad)
xlat
(bad)
adc
out
sub
and
mov
call
push
sbb
and
jl
sbb
lock
sti
dec
data16
div
int
add
aas
pushf
xor
adc
int
fcmovnb
(bad)
(bad)
lock
stos
repz
jns
mov
pop
push
mov
ja
pop
sub
sub
fimul
cwde
pushf
out
repnz
fmul
or
call
std
xor
xchg
push
jno
repz
inc
fwait
dec
sbb
mov
je
add
mov
(bad)
sub
in
mov
and
ror
add
push
push
add
movs
xchg
pushf
dec
xor
and
add
(bad)
push
mov
jae
mov
mov
xchg
sti
mov
pop
les
or
retf
outs
mov
rol
sbb
in
push
mov
xlat
add
int3
xor
lods
ds
dec
test
pop
ins
mov
jecxz
imul
push
rol
pop
mov
mov
or
cmp
cli
xchg
scas
pop
jmp
sar
inc
ds
ffree
dec
adc
pop
clc
inc
cmp
dec
lds
fwait
cmp
test
sbb
push
adc
jle
mov
adc
iret
retf
mov
lahf
(bad)
imul
fiadd
cmp
jmp
popa
out
jne
out
std
jp
lods
repz
adc
xchg
pop
mov
push
pop
jne
pop
mov
jne
jno
nop
loop
vpsrad
mov
outs
out
bound
sbb
push
jmp
add
cmps
adc
pop
cmp
or
push
and
jg
cmp
xlat
out
scas
add
rol
xchg
or
test
sahf
cmp
in
clc
out
int3
std
nop
jecxz
mov
and
cmp
enter
mov
mov
xlat
in
add
mov
loopne
(bad)
dec
add
dec
movs
jle
rcl
rol
mov
popa
xor
icebp
jo
scas
mov
jne
retf
test
add
popf
icebp
cmp
loopne
mov
fcom
xor
loop
imul
mov
pushf
and
dec
cli
das
or
xor
hlt
fidiv
pushf
pop
in
div
outs
not
inc
sbb
adc
int
mov
repnz
mov
ss
mov
xchg
jp
add
icebp
ja
arpl
mov
imul
or
mov
jg
pushf
fs
inc
repz
scas
lahf
daa
adc
shl
(bad)
(bad)
popa
sub
dec
loope
xchg
(bad)
sbb
xor
jle
sub
add
stos
out
(bad)
mov
in
mov
add
cmp
ret
pop
jle
stos
hlt
or
int3
fadd
cdq
out
aam
(bad)
mov
imul
mov
ret
push
mov
jmp
mov
fnstsw
cmc
ins
xchg
ret
outs
aaa
pop
mov
adc
or
jnp
dec
(bad)
stc
mov
mov
adc
scas
(bad)
lock
mov
(bad)
cmp
les
jne
push
pop
push
shl
loop
sbb
stos
cmp
mov
push
je
jo
or
rol
stos
xchg
pop
pop
cmp
popf
or
icebp
mov
mov
pop
inc
sar
fiadd
xor
sti
mov
pop
ds
retf
std
sbb
scas
mov
mov
pop
mov
adc
out
cmp
pop
repz
leave
(bad)
push
sar
shl
mov
scas
addr16
mov
outs
pop
push
loopne
add
xor
stos
test
jno
or
aas
adc
loop
or
mov
adc
clc
xchg
pusha
sub
(bad)
jg
cmp
pop
test
or
je
or
pop
push
xor
repz
std
pop
js
int
outs
pop
cmp
(bad)
(bad)
or
mov
xor
sub
sbb
aad
fbld
fsubr
jbe
test
add
inc
xor
pop
push
sub
inc
or
sbb
xchg
push
xor
mov
test
xor
jge
jns
mov
pop
pop
out
jl
(bad)
inc
test
mov
cmp
mov
aam
rep
fs
mov
inc
pop
jmp
and
loope
push
cmp
sti
push
cli
or
dec
hlt
pop
lds
jb
scas
popa
rol
repz
jns
sbb
jecxz
push
inc
ss
outs
cld
add
loope
std
adc
xor
dec
inc
xchg
cmps
mov
push
mov
push
mov
cmps
adc
push
enter
(bad)
fld
mov
addr16
sbb
add
test
aam
cmps
sbb
loope
add
push
inc
mov
mov
ds
dec
inc
pusha
rcr
cmp
(bad)
dec
xor
inc
imul
cmc
jns
add
pop
aaa
loopne
xchg
pop
jle
jae
ret
sub
lods
popa
cmps
loope
int
loop
shl
(bad)
in
mov
pop
sahf
push
xchg
std
and
and
mov
lods
mov
xchg
dec
popf
xor
leave
stos
out
outs
pop
into
outs
cmp
push
(bad)
jg
xchg
jle
out
jbe
xchg
mov
int3
mov
push
sub
mov
or
cld
lods
xchg
jbe
or
imul
mov
out
pop
jne
pop
add
or
adc
(bad)
lods
mov
mov
sti
les
cmp
and
addr16
repnz
sahf
out
pop
pop
and
cmp
jmp
dec
ds
add
sub
jp
cmp
adc
and
movs
jge
cmp
xchg
icebp
adc
ds
pop
dec
neg
jl
cmp
and
loope
shl
out
es
clc
lods
push
std
add
cdq
aaa
mov
xchg
jns
movs
sub
fxch
int3
mov
out
xlat
imul
iret
ss
pop
outs
jb
cmc
imul
dec
sar
or
(bad)
xchg
xchg
je
aaa
mov
add
sbb
dec
stos
cmp
shl
sahf
jb
gs
hlt
push
mov
rcl
xor
xchg
loopne
jne
mov
or
sub
call
xlat
popf
xor
xchg
jge
push
push
adc
cmp
clc
loop
jne
xor
jns
movs
nop
jns
popf
adc
adc
imul
jae
inc
arpl
add
imul
pop
cmp
lea
repnz
inc
mov
mov
dec
cmp
cmp
scas
mul
and
stc
je
cmp
xchg
arpl
xor
xor
add
sbb
(bad)
aaa
sub
inc
ds
call
mov
je
sbb
fwait
(bad)
loopne
mov
jbe
sbb
sbb
daa
aam
mov
retf
pop
xchg
xchg
retf
(bad)
rol
cld
dec
cmps
ss
loope
jb
cmp
push
and
shl
scas
fninit
add
cdq
test
out
out
stc
outs
popa
xchg
rol
mov
(bad)
fwait
xchg
out
imul
inc
loop
aaa
push
movs
test
imul
out
js
mov
mov
outs
ins
rol
frstor
cmp
mov
lock
call
or
das
add
mov
adc
adc
dec
lods
inc
les
xchg
jne
out
bound
jge
std
(bad)
cwde
fmul
dec
pop
jno
adc
sub
adc
cmp
mov
vmwrite
xlat
mov
mov
inc
jae
add
dec
lds
and
fdiv
dec
push
cmp
push
ja
nop
sub
push
iret
mov
jo
inc
jmp
jnp
mov
loopne
lds
dec
shl
push
mov
stc
xchg
es
inc
fs
mov
xor
jnp
pop
cmp
cmp
add
and
adc
out
mov
inc
repz
jle
pop
je
jnp
inc
cld
cli
mov
ror
loope
fistp
dec
aad
ja
push
mov
push
pop
xchg
imul
cli
ja
adc
xchg
test
dec
mov
jae
cmp
mov
push
gs
mov
mov
push
movs
jge
mov
daa
xlat
pushf
push
mov
aam
jne
shl
add
mov
scas
or
mov
js
rol
jge
jne
icebp
daa
push
leave
stc
mov
xchg
js
dec
jl
ins
sub
sub
shl
or
xchg
inc
das
(bad)
push
mov
adc
dec
mov
push
xchg
clc
and
sbb
push
jo
and
ins
push
xor
pop
stc
sbb
ret
inc
xor
retf
movs
aaa
or
xchg
(bad)
xlat
pop
sahf
jge
leave
out
mov
mov
mov
lds
dec
adc
xchg
jg
push
mov
imul
mov
cmp
adc
pop
sahf
shl
add
adc
pop
mov
mov
out
pop
push
adc
loopne
sahf
mov
arpl
sahf
lahf
or
rcr
aad
push
adc
dec
fisub
clc
mov
inc
jns
xchg
les
or
jne
out
hlt
scas
(bad)
sub
fimul
cmps
xchg
dec
fdiv
pop
dec
push
cmp
mov
push
cmps
shl
stos
add
push
in
jmp
cld
stos
sbb
jne
loopne
in
in
or
mov
xchg
add
mov
inc
stos
rol
jno
nop
je
scas
jae
adc
jmp
ret
(bad)
imul
dec
add
jae
push
or
xchg
dec
bound
push
mov
xlat
sbb
call
xchg
hlt
movs
pop
shl
adc
ins
pop
adc
int
pop
idiv
add
pop
xchg
adc
scas
lahf
ja
dec
cmp
xchg
inc
cmc
push
push
es
pop
cdq
in
stos
adc
push
fmul
inc
rcl
test
dec
aaa
jg
dec
pop
lahf
pop
push
je
push
mov
mov
cwde
retf
gs
ficom
sub
push
and
in
mov
jno
or
inc
es
add
outs
ret
lock
pop
mov
into
inc
ja
outs
mov
push
fs
neg
out
jmp
test
mov
movs
cs
outs
and
out
into
sub
fsubp
cmp
add
sub
shr
cli
dec
inc
rcr
sub
int
dec
pop
or
sar
sbb
mov
xor
jmp
lock
fwait
push
inc
mov
inc
mov
add
inc
fistp
mov
mov
test
pushf
pop
or
scas
cmp
scas
iret
push
loop
lock
cld
call
loop
scas
dec
rcl
push
cmp
nop
ins
nop
or
dec
icebp
inc
jb
mov
mov
xchg
jge
adc
rcr
sar
clc
arpl
xchg
sub
push
movs
and
sub
sub
or
cwde
ret
jnp
mov
xor
add
ss
push
call
out
les
rcr
push
lods
inc
out
dec
and
cmp
enter
sahf
imul
jge
mov
lods
xor
dec
sub
sbb
dec
jbe
ss
aas
inc
cmp
mov
popf
sbb
into
dec
add
sbb
cwde
(bad)
sbb
mov
ret
adc
fidiv
push
push
and
xchg
mov
sub
jns
imul
and
cdq
adc
lds
mov
xchg
xchg
lea
aad
and
xchg
add
pop
dec
cmp
fdiv
ja
pop
iret
sbb
jnp
mov
xchg
rol
and
push
pop
(bad)
in
popa
cmc
(bad)
xchg
fwait
lods
and
or
xor
mov
push
ins
adc
jge
push
ins
push
inc
sub
xchg
push
inc
push
repz
arpl
fdivp
retf
xchg
test
loop
add
add
sbb
out
fmul
jle
aam
xchg
pop
lahf
sar
rcr
scas
xchg
lea
jne
dec
adc
xlat
loopne
xchg
(bad)
std
inc
out
xchg
pushf
adc
adc
mov
mov
xor
movs
add
sub
sahf
loop
pop
sub
(bad)
and
inc
(bad)
pop
mov
xor
mov
mov
cmp
xchg
push
xlat
xchg
dec
sub
xchg
sbb
out
addr16
aas
fldenv
inc
fdivr
mov
xchg
jl
pop
xchg
das
leave
jo
and
pop
sbb
in
mov
add
ins
jb
xor
mov
dec
mov
pusha
push
add
add
xchg
test
sete
sbb
mov
out
dec
jns
mov
sub
adc
push
xchg
scas
(bad)
ja
sti
out
sti
mov
retf
and
(bad)
scas
shl
and
xchg
(bad)
icebp
jmp
push
xchg
pop
adc
pusha
outs
dec
add
frstor
ds
adc
and
(bad)
aam
push
cld
not
sub
mov
test
adc
push
lahf
jecxz
shl
xor
lds
in
xchg
sahf
sti
or
ja
pushf
enter
dec
mov
fimul
mov
add
jne
not
call
mov
inc
add
or
jp
pop
xor
mov
push
add
push
xlat
cdq
mov
jle
jb
push
or
push
shr
mov
repz
jbe
jg
push
xchg
cmc
pop
aam
xchg
lods
enter
pop
in
js
fbstp
loopne
mov
retf
or
les
jg
pop
xchg
das
and
push
ins
jo
int
dec
push
inc
pop
in
mov
repz
iret
add
loop
aad
sbb
movs
fist
xlat
adc
stos
adc
fs
movs
fadd
into
pop
jno
ficomp
pop
dec
test
lods
test
(bad)
fnstsw
pop
cwde
stos
loop
dec
sar
mov
xor
sti
sbb
test
or
std
xchg
inc
mov
mov
fwait
lds
mov
shl
xor
stos
or
loope
retf
jmp
gs
stc
jbe
(bad)
jmp
clc
ret
lahf
(bad)
bswap
aas
retf
ins
scas
fldcw
push
mov
or
fstp
jmp
or
adc
push
bound
fwait
xor
adc
jb
int
fild
sbb
mov
(bad)
ret
pushf
mov
jno
cmps
inc
adc
mov
adc
retf
cmc
mov
ficom
jbe
jl
and
test
add
dec
push
pop
and
int3
jmp
mov
jns
popf
push
or
or
xlat
mov
dec
les
dec
sub
cmp
mov
cmps
std
(bad)
pop
add
sbb
or
outs
cmp
ficom
pop
sub
mov
mov
pop
lods
add
jmp
iret
xchg
das
mov
jae
pop
shl
ss
ja
es
(bad)
int
xor
fcomip
dec
jo
push
cli
pop
cmps
xlat
adc
cdq
test
outs
in
xchg
pop
je
fidivr
ja
out
inc
ds
fs
push
mov
adc
pop
test
xor
cmp
or
stc
add
fild
not
cwde
clc
std
imul
xor
mov
lods
mov
test
mov
repz
add
(bad)
fnstenv
stos
jmp
fdivr
mov
mov
push
mov
cmps
(bad)
scas
stos
and
int
lods
pop
outs
test
adc
inc
pop
stos
cmp
bound
or
ins
xchg
adc
xor
xchg
stos
jl
mov
cs
and
sub
or
cmps
ss
add
rdmsr
push
push
popf
inc
shr
popa
aaa
push
push
mov
dec
jmp
stc
shr
bound
es
std
clc
(bad)
icebp
ss
out
out
dec
sub
mov
into
fstp
xor
test
sti
inc
cmp
mov
pop
fisttp
mov
addr16
mov
lock
xchg
ret
hlt
mov
sbb
sub
call
push
or
xor
fbstp
xchg
daa
lods
imul
xor
scas
enter
enter
pop
in
and
clc
loopne
or
add
jo
(bad)
retf
(bad)
and
retf
fdivr
fcom
dec
jge
or
popa
fucomip
stos
fcom
xor
jl
stc
inc
sub
(bad)
xchg
popa
mov
mov
sub
or
in
pusha
push
jmp
and
xchg
jo
out
call
jp
xchg
enter
lahf
sbb
pop
push
(bad)
loopne
mov
cli
pop
push
push
mov
mov
add
mov
loopne
pop
adc
mov
add
cmp
cmp
daa
test
ror
cmp
iret
push
ja
sbb
fiadd
lods
and
addr16
cmp
mov
push
jo
sub
pop
mov
mov
xchg
sub
leave
fndisi(8087
hlt
cli
adc
test
sti
push
int3
jo
popf
cdq
xor
lods
dec
sub
pop
and
and
lea
lock
fimul
adc
xor
xchg
fwait
inc
arpl
lds
pop
pushf
add
fsub
call
fldenv
out
inc
pop
mov
scas
(bad)
ins
enter
xor
(bad)
scas
or
ror
loop
mov
(bad)
aaa
cmc
sahf
xor
imul
sbb
mov
cmp
stos
xor
push
mov
inc
xchg
dec
out
push
dec
aam
xor
loop
enter
sbb
dec
sub
pop
(bad)
(bad)
aam
int
mov
push
push
push
sbb
jmp
dec
cmp
adc
into
ret
call
adc
sbb
or
xor
popa
or
out
pusha
(bad)
mov
ret
rep
push
fwait
sar
loop
or
bound
cmp
mov
imul
iret
outs
push
cmp
pop
or
bound
bound
and
je
cmp
sub
repnz
and
xor
push
in
push
xor
div
iret
xor
xor
cmps
out
or
ror
sahf
test
jp
cli
test
and
or
and
add
fwait
pop
dec
xchg
pop
push
cmps
mov
push
push
pop
outs
mov
cmc
popa
mov
mov
mov
push
rcr
or
cmps
test
loope
out
test
loop
cs
cli
repnz
int3
mov
pushf
dec
out
loop
ficomp
loopne
cld
int3
(bad)
(bad)
loopne
int
cmp
sbb
xor
fnstcw
(bad)
sbb
or
xchg
sbb
cs
test
addr16
lods
mov
cmp
inc
mov
fwait
aaa
jno
xlat
das
mov
rcl
hlt
cmp
pop
and
or
push
mov
lods
jo
ret
fidivr
cmps
fistp
test
repz
sbb
or
fs
mov
jmp
stos
mov
cmc
mov
test
pop
aas
pushf
std
(bad)
push
add
scas
test
lahf
mov
test
test
cmp
inc
or
lds
adc
popa
es
add
and
xlat
mul
adc
cmc
retf
mov
xchg
je
cwde
and
(bad)
adc
push
and
mov
sub
jecxz
in
addr16
jecxz
dec
retf
dec
push
xchg
and
loope
jo
push
mov
jo
in
cmp
icebp
jg
cs
pop
push
div
mov
jl
repnz
bound
dec
cmp
aad
dec
jbe
jae
cmp
inc
add
aas
push
push
repz
mov
add
sar
sbb
movs
orps
pop
xor
jne
add
out
jb
push
and
sbb
xchg
jnp
out
mov
jge
gs
jl
pop
and
test
cmp
xchg
es
into
jp
mov
stos
xchg
xchg
inc
dec
mov
sbb
aad
cmps
icebp
pop
add
cld
(bad)
sub
stos
sbb
(bad)
jno
(bad)
mov
dec
mov
jae
and
adc
and
sbb
fidivr
test
aaa
in
repz
pop
adc
push
push
xlat
xor
(bad)
push
push
inc
and
out
jne
dec
cmp
out
xchg
add
dec
jo
mov
inc
loope
dec
jge
(bad)
jg
xchg
test
jge
addr16
push
xchg
cmp
out
sub
popa
fild
pop
mov
fdiv
retf
and
mov
cmps
mov
jno
pop
arpl
sahf
mov
xchg
lods
movs
test
out
add
sahf
js
mov
(bad)
cmp
and
mov
in
or
movs
dec
xchg
dec
add
mov
add
mov
or
in
sbb
scas
and
push
jae
jmp
rcr
mov
pushf
jb
mov
pop
loopne
sbb
lds
retf
pop
outs
mov
add
dec
jmp
mov
jb
add
or
and
inc
aad
scas
retf
pop
mov
out
xchg
sbb
mov
test
pusha
dec
rcr
jno
mov
xor
push
shl
sub
cmc
sub
cmp
in
div
mov
daa
inc
sub
inc
loope
push
mov
pop
outs
clc
fst
int
mov
test
mov
mov
pop
xor
cmp
jmp
and
xchg
fbld
cmp
clc
clc
jo
push
cmp
call
loop
gs
imul
cmp
inc
xchg
jbe
dec
pop
mov
pop
rol
xor
test
xor
enter
imul
xchg
or
popa
or
(bad)
dec
ror
and
call
in
push
stos
les
test
out
pop
sub
push
mov
loop
aad
xlat
cli
adc
jmp
adc
pushf
out
je
and
outs
jmp
in
outs
xor
in
(bad)
fisttp
sahf
int3
fistp
xlat
ja
dec
cmp
mov
test
stos
push
sar
pop
xchg
and
adc
jge
cmp
(bad)
mov
iret
loope
(bad)
loop
sub
jmp
ins
shl
nop
fbld
push
pop
popf
retf
mov
iret
call
sub
sti
(bad)
xchg
pop
aam
push
or
mov
fimul
mov
xor
jno
push
inc
sahf
xchg
imul
push
mov
pop
nop
arpl
xchg
ja
add
sbb
sbb
fwait
out
inc
inc
inc
ds
repnz
or
mov
and
fcom
ror
aas
arpl
push
int3
ins
push
mov
mov
gs
push
jp
pop
cmp
fld
inc
jnp
jge
mov
test
mov
add
pop
or
push
int3
mov
sbb
add
psraw
(bad)
sbb
sbb
retf
pop
aad
movs
shl
lea
movs
das
jmp
mov
ds
lock
fxch
ja
mov
push
iret
or
cmps
mul
push
aas
test
and
sub
(bad)
call
inc
(bad)
fisttp
pop
movs
pop
mov
mov
mov
(bad)
push
inc
push
popf
retf
jb
xor
in
cli
(bad)
and
in
test
cli
sti
xchg
jecxz
aam
aaa
dec
inc
imul
jb
dec
sub
aad
or
shr
xchg
out
ffreep
xchg
in
cli
mov
adc
pop
shr
adc
repnz
fidiv
push
push
sbb
sahf
movntps
test
cmp
clc
(bad)
js
jmp
cmp
ins
pushf
iret
jl
and
cmp
in
xor
mov
jg
jb
mov
xor
aaa
test
ficom
in
fcmove
ret
add
sub
inc
sub
cmc
inc
(bad)
mov
mov
loopne
stc
nop
mov
dec
loop
pop
mov
mov
(bad)
aad
mov
imul
(bad)
jle
adc
inc
mov
cwde
data16
js
arpl
pop
std
jp
xor
inc
out
sbb
and
ds
adc
xchg
and
mov
cmps
pop
mov
and
xchg
adc
cmps
push
push
in
add
and
push
test
and
in
das
hlt
imul
or
push
(bad)
xor
pop
ins
into
inc
mov
adc
dec
adc
ret
push
jecxz
sahf
cmp
div
ds
int
mov
pop
jmp
mov
adc
test
lock
(bad)
hlt
(bad)
(bad)
rcl
idiv
(bad)
jp
push
(bad)
aad
xor
add
loope
pushf
scas
popf
pusha
mov
sub
jmp
jo
or
enter
adc
aad
hlt
and
ins
lahf
sbb
mov
mov
icebp
push
js
and
xchg
pop
bound
pop
mov
mov
cmp
dec
cmp
and
outs
in
les
ins
data16
call
inc
shl
enter
daa
xor
pusha
in
jge
mov
ret
fnstenv
fcmovu
xor
sbb
push
mov
push
pop
ds
and
test
pop
xor
pop
add
sbb
or
in
outs
test
popf
pop
mov
mov
xchg
dec
ret
call
into
xchg
aaa
stos
and
test
sub
pop
mov
push
imul
stos
inc
loop
data16
xchg
mov
mov
xor
sbb
clc
jmp
scas
sub
leave
in
enter
cmc
sub
push
jle
push
mov
fwait
in
or
faddp
xchg
es
jg
into
ins
cmp
out
or
fist
or
int
cmps
lods
sub
mov
popf
mov
adc
not
cdq
push
je
mov
cmpxchg
mov
bt
and
jl
imul
jmp
adc
mov
mov
add
mov
sahf
(bad)
leave
add
bound
jl
pop
xor
test
scas
lock
test
add
test
jb
aaa
aaa
test
dec
std
gs
test
xor
shl
inc
gs
push
mov
repnz
sub
(bad)
cmps
jns
sbb
(bad)
shr
mov
test
popf
cmp
fistp
inc
mov
stos
sub
mov
push
neg
sub
fsubr
xchg
sbb
push
xchg
fcomp
adc
(bad)
sbb
xchg
push
je
dec
loopne
sbb
aas
scas
inc
and
icebp
cmp
retf
(bad)
adc
fistp
xor
(bad)
in
test
mov
movs
hlt
push
adc
ins
movs
cmps
aaa
sub
inc
xlat
xchg
inc
cmc
pop
out
pop
xchg
fidivr
jmp
xchg
stc
xor
jmp
and
inc
adc
mov
pusha
in
cmc
adc
test
or
outs
sub
bound
test
cmp
jl
add
jnp
mov
les
ror
popf
fneni(8087
aad
mov
cwde
lods
mov
mov
rcl
fneni(8087
pushf
inc
xor
push
jecxz
dec
xchg
jae
mov
cmovo
mov
jnp
das
lock
mov
cmp
push
outs
dec
pop
adc
shr
add
in
dec
xchg
mov
movs
dec
dec
aam
cmp
clc
pop
xchg
out
mov
inc
sbb
push
and
jae
fxch
sub
cmc
ficomp
inc
sub
push
in
mov
out
stos
out
jle
nop
clc
stos
bound
pop
add
(bad)
cmp
or
cmp
xor
mov
push
shl
sub
jbe
jp
pop
mov
fwait
imul
xlat
or
inc
push
xchg
and
ficomp
xor
mov
inc
fstp
sbb
test
mov
xlat
ins
and
sub
cwde
push
dec
inc
sahf
scas
fistp
std
(bad)
pusha
stc
gs
retf
aaa
popf
loop
xchg
lea
(bad)
call
jle
add
mov
add
mov
icebp
stos
pop
add
aaa
out
stos
inc
lds
out
int
xor
in
push
mov
and
mov
(bad)
scas
xchg
ss
pop
or
test
or
push
cmp
add
dec
dec
push
fs
dec
sbb
fld
xchg
xchg
or
mov
movs
sahf
sbb
pop
xchg
cmc
scas
std
cmp
xor
repnz
gs
mov
clc
xchg
ja
push
xlat
bound
xor
hlt
xchg
jae
imul
jae
(bad)
out
mov
inc
inc
push
xor
es
xlat
imul
test
pop
mov
aaa
push
int
fld
test
pop
fistp
cmp
fisttp
and
loope
sbb
dec
bound
(bad)
test
loop
jge
mov
fidivr
mov
inc
dec
(bad)
imul
sbb
add
lds
adc
mov
or
retf
in
and
mov
push
sub
xchg
and
push
push
ins
das
addr16
sub
mov
pop
popa
xchg
out
dec
mov
push
(bad)
push
loope
jl
mov
sub
cmps
in
or
and
dec
jecxz
into
adc
cs
dec
push
and
or
ja
cmp
ins
inc
mov
loope
jno
scas
repz
shr
test
mov
mov
jae
cmps
fdiv
adc
les
xor
jo
cmp
dec
adc
popa
cli
pop
call
ret
cdq
repnz
cld
adc
add
sbb
(bad)
push
xor
(bad)
jns
push
rol
xlat
int3
ficomp
out
push
stos
xlat
movs
add
sub
jg
mov
or
xlat
sbb
ins
sub
ja
xor
jmp
jmp
retf
cmc
imul
cs
push
pusha
or
dec
push
and
pop
popa
and
push
dec
inc
inc
dec
fincstp
jae
pop
es
push
or
lock
xor
inc
ds
xor
mov
cmp
jns
enter
mov
(bad)
push
dec
retf
(bad)
cs
dec
xchg
fxch
xchg
mov
inc
cmp
mov
mov
cld
add
test
shr
sti
xchg
stos
jp
pop
loop
sub
test
ret
lea
mov
enter
les
pop
fadd
sub
push
and
js
outs
bound
jecxz
xchg
mov
jecxz
xor
xor
and
xchg
clc
add
jo
mov
mov
(bad)
(bad)
mov
sahf
mov
xchg
in
sbb
bound
xchg
mov
test
add
inc
call
mov
mov
push
into
xchg
cmps
pop
jmp
mov
les
xor
jecxz
cmp
loope
gs
outs
ffree
and
mov
in
push
je
imul
cmp
cmps
dec
leave
(bad)
popa
repz
sahf
xor
jg
call
cs
popf
cmp
cmps
sbb
rcl
imul
out
or
lds
es
sub
aaa
mov
and
outs
lea
jmp
xor
fst
outs
adc
lock
(bad)
int
cmp
or
add
mov
repz
movs
dec
ss
mov
sub
and
aas
sar
xchg
mov
cmps
sub
xor
retf
stos
lds
lds
push
push
sbb
mov
rcl
in
cmp
xchg
mov
push
and
dec
xchg
ret
fwait
inc
ss
dec
sbb
adc
xor
dec
aaa
mov
or
enter
ror
inc
inc
xchg
nop
push
imul
outs
xor
outs
or
daa
imul
inc
push
movs
pop
xor
std
int
les
xor
test
test
push
xor
ror
jb
or
dec
lock
pop
sti
iret
test
imul
stos
xlat
push
cmp
lock
adc
or
fsubr
and
mov
in
in
jno
xor
pop
pusha
hlt
cmc
int3
mov
bound
add
add
inc
dec
cmc
std
pop
sbb
cmp
or
out
mov
push
out
retf
fstp
add
icebp
stc
mov
pop
sbb
shr
iret
and
shr
and
add
push
pushf
daa
push
popf
in
(bad)
mov
xor
int
or
xchg
push
jl
leave
adc
out
xor
xchg
sti
pop
test
dec
popa
(bad)
int3
or
or
and
cmp
inc
fnstcw
cmp
test
sub
scas
outs
imul
adc
and
inc
push
bound
fisttp
or
mov
inc
mov
or
push
lods
pop
cmp
test
mov
arpl
mov
mov
stc
jbe
mov
fwait
jnp
das
adc
push
rcl
or
lahf
mov
ror
dec
outs
push
xchg
mov
xchg
mov
mov
stos
test
popf
retf
stc
mov
inc
popf
sbb
pop
les
loop
ja
cmps
sub
inc
and
sub
mov
adc
xor
loopne
adc
jle
stos
push
and
div
ins
jmp
jge
call
dec
imul
iret
popa
mov
xor
(bad)
jne
xor
sub
cmc
(bad)
dec
add
pusha
push
sbb
xchg
pop
mov
mov
repnz
in
fsubr
clc
push
into
inc
rol
xor
adc
xor
hlt
sub
shl
sbb
mov
(bad)
mov
sbb
pusha
dec
outs
jb
int
nop
push
adc
(bad)
cmp
test
push
add
push
jnp
out
sub
xchg
push
leave
push
mov
fnstcw
jmp
xchg
and
cmps
adc
mov
ss
les
inc
mov
or
scas
xchg
pop
pop
dec
mov
and
mov
in
aas
aas
fisubr
cmp
pop
add
clc
pop
bound
daa
sub
ins
cmp
xchg
repz
lds
inc
add
sub
mov
mov
push
mov
mov
pop
outs
in
aas
adc
out
mov
adc
mov
cdq
icebp
call
sub
dec
js
pop
push
in
ins
mov
fcomp
mov
push
retf
je
jo
bound
out
fcmovne
pop
aas
push
adc
and
(bad)
fimul
sbb
sbb
sbb
out
mov
mov
xchg
(bad)
leave
lds
xchg
inc
ror
inc
cli
jbe
scas
xor
cdq
sub
pop
add
in
jns
shl
div
addr16
sub
cmp
dec
add
iret
data16
fdivp
je
mov
ret
push
mov
iret
das
xor
jecxz
aam
icebp
scas
aad
add
push
dec
arpl
scas
mov
mov
pop
jecxz
jg
outs
xchg
push
sbb
repnz
mov
je
dec
cli
inc
xchg
inc
paddsw
pop
repz
pop
mov
and
out
and
dec
adc
pop
mov
popf
(bad)
sub
add
clc
push
es
enter
mov
sbb
adc
aas
cmps
xchg
push
xchg
pop
push
add
xlat
sbb
push
jl
cmp
ss
mov
pop
imul
in
in
sbb
(bad)
dec
es
in
cwde
out
or
push
mov
(bad)
add
es
shl
xchg
neg
inc
mov
fadd
xchg
(bad)
ror
xchg
or
rcl
rcr
sub
adc
inc
fs
add
push
xor
xor
out
and
mov
sahf
rol
loop
dec
sbb
int3
retf
gs
mov
jmp
scas
or
mov
sti
mov
sbb
push
cs
es
jecxz
xchg
fnsave
call
out
xchg
jmp
pushf
jmp
mov
xchg
inc
push
pop
or
jb
mov
pop
cmp
aas
jl
loope
dec
dec
test
rcr
xor
inc
and
pop
leave
(bad)
arpl
fucomp
leave
cmp
repnz
mov
and
mov
pop
and
ins
cmp
jbe
jecxz
mov
mov
push
xchg
sahf
xor
ror
cmps
mov
rcr
mov
nop
jmp
lds
push
mov
or
mov
mov
cmc
aaa
xchg
scas
dec
in
shl
scas
movs
add
mov
mov
jl
ds
xchg
adc
dec
fwait
les
xchg
adc
scas
nop
repnz
mov
xor
pop
xor
ss
dec
xchg
inc
(bad)
std
push
pop
mov
mov
inc
inc
mov
xlat
sahf
call
dec
int
sar
imul
nop
arpl
iret
inc
pop
shl
or
call
and
cmp
pusha
jb
mov
test
add
mov
fcom
mov
sub
sub
xchg
sub
out
stos
test
and
sbb
cdq
cmps
mov
fs
scas
add
int
cmps
fist
cmp
adc
ja
cmp
(bad)
and
mov
in
bound
push
out
cld
mov
sbb
cmps
aas
js
inc
mov
pop
loope
hlt
push
call
repz
adc
inc
sub
adc
push
push
xchg
xor
leave
adc
fidiv
xor
adc
xor
cs
add
sbb
movs
mov
fisub
lods
push
mov
xor
das
cld
mov
inc
xor
sub
sbb
push
sbb
dec
mov
nop
loope
fmul
or
and
data16
bound
aas
add
mul
xchg
push
(bad)
mov
idiv
push
push
mov
mov
jmp
push
pusha
retf
jno
repnz
nop
ds
dec
push
jae
in
addr16
fs
add
jecxz
mov
cdq
les
sbb
sub
push
repz
js
shl
(bad)
(bad)
jmp
pop
rcl
mov
dec
sub
mov
mov
cmc
cmp
je
outs
dec
out
push
dec
or
popf
adc
in
or
adc
repz
dec
add
jge
adc
std
inc
dec
fcomp
pop
pop
ds
iret
cmc
xchg
aaa
inc
(bad)
xchg
(bad)
lock
(bad)
dec
std
fdiv
sahf
(bad)
mov
push
imul
jns
cs
dec
sub
mov
cmp
mov
dec
scas
fadd
mul
pop
retf
les
mov
jmp
add
inc
mov
push
sbb
sub
fnstenv
cmp
sar
out
inc
xor
lods
push
loopne
mov
cmp
in
shl
fwait
mov
(bad)
push
sbb
mov
and
pop
retf
scas
dec
sub
js
inc
stc
ret
mov
aas
sbb
sbb
arpl
stos
loope
xor
pop
shl
ins
loop
xlat
push
das
in
xchg
jns
cmps
sbb
inc
scas
out
popa
div
lods
stos
outs
mov
(bad)
jmp
fisub
sahf
push
push
mov
add
adc
aam
(bad)
js
push
movs
(bad)
add
cmp
and
xchg
pop
xchg
inc
push
mov
inc
scas
jne
mov
ins
add
dec
push
test
fdivr
out
aaa
inc
pop
mov
mov
mov
mov
add
adc
or
retf
add
fadd
rol
out
cmps
imul
mov
shl
jge
push
or
pop
lea
js
dec
leave
adc
(bad)
push
in
loop
fidiv
pop
push
stos
mov
xchg
pop
fs
adc
imul
or
je
xor
es
push
mov
and
sub
push
movs
(bad)
hlt
pop
fimul
mov
jmp
test
or
call
ins
stc
hlt
jne
das
add
sahf
lods
scas
inc
inc
jle
push
mov
xchg
in
repz
loopne
hlt
xor
mov
ret
(bad)
js
ja
jne
addr16
movs
icebp
lods
repnz
mov
jg
dec
xchg
jmp
mov
mov
mov
out
fwait
xor
mov
mov
and
ror
lahf
ss
fiadd
in
shr
test
xchg
shl
out
ins
stc
and
cmps
je
cmp
add
in
dec
adc
fdiv
dec
pop
jb
add
xchg
call
mov
jno
mov
sar
cmp
sub
pop
aad
mov
out
sub
or
mov
mov
(bad)
add
jb
pop
sbb
jl
cmp
test
pop
test
aas
retf
jp
mov
cmp
sub
aaa
pop
shl
mov
fild
addr16
sbb
leave
or
enter
rcr
adc
fdiv
ret
ins
mov
int
dec
movs
xor
push
and
ss
xor
mov
sbb
retf
cmp
sub
ret
jle
mov
pop
jns
mov
pop
or
jb
sub
es
std
adc
inc
pop
push
adc
cmps
popa
ins
xor
push
stos
mov
xchg
pop
jo
sub
mov
pop
cmc
inc
hlt
add
das
xchg
rcr
ins
and
sbb
or
jecxz
xchg
out
fst
ds
aad
adc
(bad)
cmp
xchg
cmp
clc
test
call
shr
add
inc
pusha
inc
stos
in
les
jl
inc
jmp
xchg
xor
and
xchg
inc
jle
pop
xchg
add
or
cmp
sub
jge
mov
loope
(bad)
lock
dec
in
jecxz
mov
ret
and
pop
xor
or
test
jns
mov
sti
mov
dec
push
or
push
fwait
hlt
pop
mov
dec
fistp
cmps
sbb
not
rol
data16
add
and
ja
mov
arpl
xchg
or
fist
(bad)
and
into
and
cmp
push
mov
pop
loopne
test
rcl
ins
sub
and
sub
clc
xchg
mov
movs
(bad)
std
add
movs
into
sahf
inc
dec
pop
cmp
stos
pop
dec
into
mov
(bad)
rcl
adc
test
movs
(bad)
dec
sub
mov
retf
sbb
mov
push
stos
div
dec
jae
adc
fidiv
test
and
jbe
pop
loopne
mov
in
(bad)
cdq
out
add
inc
dec
lock
xor
jp
xor
pop
out
or
fwait
xchg
vpunpckldq
imul
push
int3
sub
jecxz
jnp
mov
pop
les
mov
xchg
sbb
ja
sti
xchg
push
mov
or
sar
dec
xor
add
xchg
popa
and
jmp
gs
add
pop
dec
and
push
enter
push
popf
jbe
arpl
cmp
fld
inc
mov
mov
sbb
dec
les
dec
and
add
or
inc
lods
loopne
mov
rcl
nop
dec
sti
cmp
cmps
dec
xor
aam
jg
call
inc
sbb
fiadd
retf
lds
or
inc
ins
xchg
inc
inc
out
or
pop
and
loopne
pushf
and
mov
inc
jae
cli
pop
imul
xchg
mov
mov
clc
test
clc
cmp
cld
cli
pop
sbb
(bad)
mov
mov
adc
inc
and
mov
push
cmp
pop
jbe
sbb
(bad)
adc
add
jp
jp
or
out
fistp
lods
mov
or
add
pop
call
int
in
shr
es
or
mov
push
or
stos
out
push
add
test
or
cmp
stos
mov
sub
push
jns
dec
push
ficom
mov
bound
adc
loop
push
mov
pop
ret
mov
lods
sub
retf
add
test
in
or
adc
(bad)
jmp
jge
dec
nop
out
pop
int
xor
xchg
pop
mov
mov
aam
pop
lock
push
lahf
xor
jns
xor
mov
movs
cli
fist
lods
xchg
out
ss
push
cmp
add
pop
add
add
sub
nop
imul
xor
cld
stos
mov
or
mov
xchg
dec
mov
cmp
mov
sbb
sub
or
xlat
fstp
jmp
or
cmc
sub
push
daa
sub
fcom
push
mov
outs
aad
mov
aam
outs
fldenv
test
dec
aad
xchg
fdiv
adc
mov
inc
out
xor
mov
xchg
jecxz
neg
fsub
das
cmc
xchg
sub
rcr
jecxz
sahf
cmps
cmp
lahf
rcr
mov
in
cmc
data16
neg
loop
push
ss
ret
fldenv
jno
ds
push
dec
sbb
pop
jp
mov
(bad)
cli
dec
mov
jmp
cmp
pop
jnp
sub
imul
xor
leave
sub
mov
dec
dec
stos
push
sub
movs
push
cmp
loop
cmp
adc
mov
xchg
or
and
aad
add
push
iret
pop
cmp
stos
mov
cmp
add
sbb
ins
popf
cwde
xor
fnstsw
ret
push
aam
loop
or
out
and
mov
add
mov
cmc
sub
repz
inc
and
or
hlt
xor
mov
repz
mov
push
adc
lds
int
es
mov
pushf
lahf
mov
nop
mov
dec
xor
cmp
std
retf
call
inc
pop
jecxz
push
jge
cmps
push
dec
scas
cmp
pop
in
xchg
icebp
mov
xchg
test
scas
inc
mov
daa
nop
(bad)
popf
push
or
pop
ror
test
gs
xor
sbb
push
loope
cmp
add
and
aam
pop
pop
cs
fisub
fdivr
or
repnz
sbb
xchg
cmp
(bad)
xchg
outs
adc
fisubr
sub
bound
sub
adc
pop
(bad)
les
aas
ds
adc
clc
popa
addr16
cmp
cmp
jl
jg
in
xchg
push
loope
data16
call
rcr
nop
lods
cmp
stos
dec
in
test
sbb
les
pop
aas
xchg
push
lods
mov
sbb
ss
(bad)
mov
in
push
fs
add
jno
inc
mov
ins
(bad)
and
inc
push
add
imul
mov
adc
retf
fdiv
push
out
cdq
jg
mov
aaa
ret
rcl
inc
sub
mov
mov
xor
out
jae
or
rcr
int3
jno
test
rol
ins
push
call
mov
pop
mov
hlt
mov
add
mov
int
fcomp
out
jge
sbb
dec
repz
loope
pop
arpl
jns
sbb
clc
(bad)
out
in
(bad)
ret
pop
push
sub
cmp
fisub
ins
sub
add
in
dec
loop
jb
enter
aas
xchg
push
repnz
iret
xchg
and
in
mov
addr16
jbe
inc
add
jae
xor
push
mov
mov
jae
or
std
jno
xchg
jmp
jns
jp
outs
out
scas
pop
out
gs
test
(bad)
(bad)
push
cmp
mov
dec
sub
das
fld
arpl
add
dec
xor
and
loopne
add
aas
es
mov
and
and
call
and
jp
out
mov
sahf
(bad)
(bad)
or
push
(bad)
add
mov
jp
in
inc
call
cmp
fmul
jp
call
push
movs
inc
jo
mov
fs
mov
xchg
jmp
push
js
push
sbb
stc
jmp
pop
xchg
dec
xlat
enter
xchg
enter
cmc
fldz
sbb
sub
mov
std
mov
iret
mov
mov
jecxz
out
bound
adc
fidiv
(bad)
je
mov
aad
pop
mov
gs
jge
int
cli
push
push
(bad)
mov
repz
or
jge
sbb
cmc
and
neg
sub
icebp
jo
add
das
adc
xchg
sbb
push
cmp
scas
ds
sub
loope
cmc
jg
push
pop
inc
shl
popf
ja
test
imul
ds
xor
dec
mov
jmp
or
dec
fld
and
push
pop
js
mov
(bad)
mov
pusha
ror
(bad)
neg
orps
fsubp
or
add
ror
arpl
push
and
out
jae
not
mov
jle
cmps
inc
cmps
popf
fidivr
mov
pop
lea
pop
sub
cs
iret
lahf
mov
jmp
and
ret
xlat
mov
sbb
dec
shr
xlat
sti
outs
nop
lods
and
inc
pop
jl
mov
rcr
xor
add
leave
xor
mov
not
scas
je
pop
push
les
iret
sbb
inc
mov
mov
add
sbb
xor
and
sbb
ins
cmp
mov
xchg
or
leave
jae
sar
repnz
scas
ins
and
fadd
mov
gs
jno
lock
push
jecxz
pop
cmp
mov
rol
not
fadd
cmp
arpl
sbb
push
ins
jmp
mov
mov
jnp
xor
jmp
sbb
push
imul
popa
pop
aaa
inc
xor
mov
das
loopne
ja
out
rep
mul
push
jge
call
ds
fs
sub
mov
dec
ja
push
pusha
pop
mov
aaa
(bad)
stc
scas
scas
fscale
stos
mov
xchg
cli
inc
adc
loopne
ins
jg
leave
jns
cmp
out
fisubr
push
or
sub
cmps
inc
pushf
retf
mov
fstp
inc
sbb
out
repz
pusha
out
mov
push
mov
ds
mov
fisubr
xchg
cdq
sub
jecxz
sbb
test
ds
xor
stos
sub
icebp
mov
mov
push
adc
shl
imul
test
hlt
cmp
gs
dec
loopne
je
pop
sbb
add
push
lods
aaa
push
jg
arpl
adc
mov
(bad)
inc
adc
cmp
(bad)
jl
mov
push
retf
clc
dec
pop
mov
rol
sbb
pop
out
jns
pop
iret
bound
pop
cmp
call
pop
and
push
add
scas
push
cli
pop
daa
push
inc
fsubr
lock
mov
sub
dec
or
retf
loopne
jge
pop
int
mov
(bad)
(bad)
sub
inc
sbb
inc
repz
sar
(bad)
jmp
cmp
addr16
ds
out
xchg
xor
addr16
out
cmps
push
pop
in
outs
cmp
sbb
adc
pop
rcr
jae
push
jne
(bad)
(bad)
pop
mov
mov
in
sbb
jmp
fldenv
inc
cwde
jl
fcmovnu
xchg
xchg
addr16
xchg
push
(bad)
lds
scas
and
inc
cmps
sbb
aam
adc
mov
xor
push
cli
pop
ins
scas
(bad)
ss
xchg
fidiv
pop
fimul
mov
mov
ss
xor
add
in
adc
arpl
dec
mov
add
scas
stos
das
fld
lock
pop
pop
fisub
push
div
pop
aas
movs
sbb
xchg
daa
sbb
lock
outs
dec
retf
pushf
inc
mov
pusha
mov
mov
lods
inc
sub
packsswb
or
pop
ret
test
in
add
and
movs
in
scas
enter
cdq
pop
xchg
dec
loop
add
adc
(bad)
dec
shl
sti
std
aas
adc
test
pop
xor
sbb
xor
test
(bad)
cmp
loope
out
sbb
mov
out
test
add
jcxz
xor
ins
jge
(bad)
in
xchg
push
sub
cwde
in
xor
sbb
xor
add
cmc
outs
retf
pop
mov
cmp
jmp
mov
add
inc
call
stos
add
xchg
into
adc
fwait
out
and
repnz
aas
push
dec
retf
jmp
jge
popa
jmp
inc
pop
scas
and
into
in
stos
pop
aam
jp
into
jnp
mov
ds
xchg
lahf
and
mov
xchg
jo
scas
jle
pop
add
sub
and
leave
mov
mov
push
adc
jmp
or
outs
mov
pushf
push
stos
(bad)
retf
xchg
sub
hlt
rol
mov
inc
outs
shl
retf
cld
cli
and
mov
adc
(bad)
loope
inc
ror
and
mov
add
xchg
mov
pushf
add
shl
add
mov
and
inc
adc
push
push
sbb
es
rcl
(bad)
inc
bound
daa
inc
cmp
cmp
or
stc
shl
xchg
aaa
pop
xor
out
fist
xchg
push
xchg
sub
fisub
push
idiv
pop
loopne
mov
and
or
repz
test
ins
pop
push
nop
inc
sti
push
sar
dec
loop
enter
in
adc
int
rcr
in
xchg
cmp
xchg
out
xor
inc
jmp
jno
sub
push
jmp
not
sub
in
imul
shr
adc
lds
sbb
mov
inc
outs
into
lods
sahf
scas
xchg
mov
aad
lock
push
pop
jp
aas
cs
sbb
and
xchg
clc
sbb
scas
mov
add
jbe
sub
sahf
inc
pop
pushf
sbb
sbb
into
jb
sub
(bad)
cmps
sbb
mov
add
jge
cmp
test
xchg
iret
test
adc
xlat
(bad)
cmps
lods
test
mov
pushf
rcr
nop
mov
push
call
pop
inc
xchg
mov
sbb
jmp
sbb
lods
push
(bad)
jmp
repz
arpl
movs
or
cmp
xchg
sub
mov
xchg
mov
retf
push
ret
jg
mov
add
cmp
inc
pop
push
sub
inc
(bad)
sbb
movs
stc
lea
mov
cmps
psllq
popf
jmp
sbb
push
sbb
dec
mov
repnz
(bad)
dec
xchg
jo
lods
mov
jae
fsub
mov
dec
jnp
xor
jmp
ror
adc
xor
add
jp
xor
scas
fist
je
and
pushf
or
aam
sbb
jno
add
pop
jo
pop
sub
and
mov
jne
js
and
lock
in
cmp
ret
mov
jge
fst
cmp
jle
push
hlt
sbb
mov
xlat
pop
inc
dec
add
push
retf
sub
ins
loopne
imul
xchg
aaa
dec
inc
mov
add
icebp
push
stc
outs
aaa
(bad)
dec
ficom
and
dec
sub
ins
push
jb
gs
mov
xchg
int
inc
jecxz
cli
addr16
rcr
push
inc
and
out
mov
stc
cmc
and
das
shr
mov
mov
mov
inc
xor
popf
inc
mov
sbb
cmps
mov
dec
icebp
mov
cmps
pop
ret
ror
es
(bad)
jmp
adc
lea
mov
outs
addr16
jnp
pop
daa
pusha
xchg
inc
ret
div
xor
pop
(bad)
adc
(bad)
mov
jmp
(bad)
push
je
shl
cdq
movs
add
mov
inc
out
jns
cdq
call
xor
push
jecxz
add
mov
test
xchg
sub
arpl
cwde
fwait
retf
stos
cdq
cmp
xchg
adc
pop
bound
push
mov
scas
lds
push
or
dec
maxps
push
adc
dec
sbb
sbb
cwde
stos
cmovs
and
xor
jne
xchg
int3
movs
pop
adc
inc
pop
inc
loope
jbe
jle
lock
retf
loop
or
push
stos
int
jl
cmps
inc
out
push
mov
cmp
test
mov
dec
mov
mov
call
and
inc
mov
leave
jno
cs
adc
add
push
adc
or
mov
and
and
xor
adc
or
dec
xchg
shr
pop
rcr
inc
mov
dec
movs
xor
call
enter
rol
frstor
pop
daa
(bad)
sub
out
inc
push
mov
sbb
ds
cld
aaa
mov
sub
jne
aam
pop
ins
mov
cmp
inc
adc
jnp
test
(bad)
fld
sahf
add
add
sahf
inc
sbb
leave
xchg
mov
jno
ret
inc
test
call
jmp
(bad)
ins
sub
sbb
daa
or
pop
inc
ds
cmp
popf
loope
out
popa
xlat
mov
jl
mov
sub
mov
retf
pusha
retf
test
sub
add
mov
sub
scas
les
mul
pop
jl
push
out
out
jl
xchg
and
(bad)
daa
(bad)
adc
mov
dec
pop
ja
jmp
pop
adc
stos
scas
cmp
ins
xchg
cmp
stos
mov
cmp
rcl
clc
inc
popf
cmps
push
dec
test
ja
outs
in
test
cmp
cmp
sar
mov
sub
jg
dec
ins
adc
push
test
xchg
jl
arpl
repnz
jecxz
cmp
clc
xchg
(bad)
fnsave
(bad)
sbb
dec
pop
or
xor
inc
or
or
lods
pop
cli
xor
pop
and
jge
or
js
ficomp
(bad)
(bad)
lods
retf
add
test
mov
or
add
mov
or
dec
push
push
bound
inc
not
xchg
push
xchg
adc
push
test
sbb
or
cmp
fisubr
cmc
enter
adc
xlat
mov
cwde
hlt
out
call
or
fst
sub
mov
lds
mov
jg
(bad)
data16
enter
dec
sub
push
mov
mov
sbb
int3
fild
call
lods
cwde
leave
call
retf
adc
hlt
dec
in
mov
mov
jecxz
ret
jo
jl
outs
sub
adc
pop
cli
cld
jl
pop
cmps
nop
outs
mov
push
imul
push
fstp
mov
int3
add
out
je
pop
cmc
icebp
int
arpl
mov
ss
jl
mov
sahf
xor
daa
or
xchg
mov
imul
mov
push
mov
pop
shl
add
and
jb
sbb
pop
mov
xor
fistp
adc
pop
cmps
inc
jecxz
int3
adc
jle
mov
jno
pop
inc
jnp
lahf
cmp
mov
mov
cli
sub
popa
dec
pop
mov
xor
data16
cmp
pop
rcl
es
mov
(bad)
pop
inc
sar
mov
inc
sahf
das
mov
std
rol
fimul
imul
adc
ror
inc
or
or
popf
stos
xor
frstor
xchg
daa
xor
jl
adc
mov
loop
dec
jae
lds
retf
arpl
not
sub
(bad)
loopne
mov
push
adc
pop
lods
mov
scas
lock
movs
ins
jbe
sbb
cmps
inc
rol
or
inc
mov
push
(bad)
sbb
mov
outs
mov
test
pop
cmp
adc
pop
push
sahf
lock
rcl
mov
mov
xlat
adc
shl
cmp
std
fwait
imul
fld
jl
sti
jmp
xchg
pop
mov
int
xor
inc
push
inc
adc
cmp
xor
into
xlat
aas
push
mov
mov
loop
es
ins
pop
(bad)
and
gs
outs
push
inc
sahf
pop
xchg
in
sub
xchg
shl
icebp
ret
xchg
inc
lea
xchg
(bad)
out
inc
mov
mov
fild
adc
in
sub
xchg
stos
jbe
jo
ror
retf
sub
sub
cmp
xchg
pop
and
das
loope
bound
inc
sub
sbb
cdq
imul
daa
inc
cmp
jae
sbb
inc
adc
adc
dec
lods
shl
mov
mov
ja
mov
cmp
jle
call
lock
test
or
xor
dec
cmp
inc
xchg
dec
(bad)
pop
ret
add
add
fs
cwde
push
shl
aad
outs
fadd
adc
jo
mov
inc
xor
(bad)
int3
xchg
xchg
mov
outs
push
ds
push
pop
or
nop
mov
push
adc
adc
cdq
ins
pusha
sar
sub
sub
and
gs
mov
sub
repnz
mov
and
pusha
jnp
inc
mov
and
add
in
xchg
test
and
or
test
shl
test
fcom
xor
jae
xchg
sub
jns
push
mov
push
add
shl
jmp
xor
xchg
sar
test
ins
cmp
mov
xor
fisttp
fsub
add
inc
add
cmp
std
call
jle
xlat
add
or
(bad)
cdq
test
dec
fsub
xchg
into
xor
(bad)
push
pop
rol
dec
sbb
imul
add
dec
(bad)
fistp
in
pop
arpl
lods
mov
fsub
out
neg
jge
sbb
je
adc
in
and
push
cwde
imul
push
mov
movs
neg
aas
daa
test
jae
add
nop
mov
mov
mov
xchg
inc
outs
push
pop
mov
sbb
mov
dec
jp
sbb
cdq
sub
repz
or
mov
mov
and
xchg
pop
(bad)
mov
inc
sub
jno
stos
dec
(bad)
aad
loopne
lds
cmp
es
xchg
inc
or
xor
mov
outs
cmp
fldcw
mov
rep
cmp
js
rol
in
dec
in
fisubr
imul
ror
xor
aas
xchg
mov
add
retf
cmp
or
dec
lods
inc
js
repz
in
ja
mov
sbb
push
inc
cmp
or
mov
xchg
inc
cli
xor
cli
mov
jl
xor
xchg
hlt
xlat
fisub
mov
add
xchg
sub
aas
jg
out
adc
stc
and
push
mov
retf
hlt
ins
pop
sbb
fnstcw
push
sahf
cs
retf
cmp
outs
fs
lods
and
jg
out
jge
loop
mov
dec
xor
call
out
in
ss
loop
xchg
mov
sbb
add
fs
cmp
aam
adc
cmp
cmps
(bad)
sub
mov
rcl
inc
pop
xor
jecxz
imul
bound
xchg
mov
add
sti
stos
fs
ins
inc
leave
cmp
outs
cmp
out
dec
jae
hlt
xchg
mov
cli
or
(bad)
sub
inc
call
cmps
xchg
lods
mov
in
in
jge
add
out
cmp
jne
inc
pop
fldpi
lea
fsubr
fwait
ins
add
mov
mov
popf
dec
repz
adc
aad
cmp
enter
and
xor
cmps
test
fmul
xor
push
ret
mov
mov
sbb
dec
ror
jbe
enter
fwait
inc
stos
mov
in
mov
and
and
pop
js
rol
popa
push
pop
comiss
and
jne
mov
pushf
retf
xor
aaa
xchg
sub
je
cwde
cs
inc
das
pushf
sbb
imul
sbb
jle
sub
and
and
push
push
daa
inc
fsubr
jne
mov
jg
movs
imul
repz
cmps
lock
push
jbe
pop
fs
aas
imul
xchg
mov
pop
in
mov
or
scas
fs
inc
cld
pop
adc
loopne
mov
aas
jp
add
pop
int
call
outs
lea
out
lds
popf
shr
bound
(bad)
aad
dec
cmp
test
(bad)
sti
(bad)
into
and
(bad)
repz
(bad)
iret
or
lods
add
jmp
mov
adc
cld
xor
xchg
pop
int3
adc
adc
les
xchg
cmps
add
add
sbb
pop
adc
leave
sbb
mov
loopne
imul
addr16
dec
sub
jbe
imul
jne
test
mov
js
sbb
lock
test
push
and
mov
rol
shl
test
cmp
inc
and
or
sub
cdq
daa
leave
outs
push
and
add
je
fwait
inc
sub
xchg
adc
dec
call
dec
mov
jmp
ja
imul
sub
and
(bad)
in
mov
push
inc
ret
ret
pop
pop
jmp
aam
out
lahf
sahf
clc
and
pop
cs
jns
stos
out
inc
adc
adc
addr16
adc
ds
aad
test
ret
je
xchg
xchg
cmp
mov
dec
xchg
arpl
outs
adc
test
ror
xchg
mov
xchg
push
in
ficom
sbb
(bad)
outs
push
sub
xlat
pop
jmp
push
dec
sub
cmps
jle
jnp
rcl
xchg
enter
stc
cmp
and
or
inc
hlt
sahf
or
fist
idiv
push
mov
jns
gs
sahf
sub
mov
xchg
mov
sbb
fcom
xor
jbe
pop
aad
push
ror
fwait
pop
adc
lods
push
push
scas
cmp
jb
inc
push
cmp
das
dec
mov
jns
push
cmp
and
or
ins
fstp
mov
sbb
icebp
pop
cmp
adc
cmps
add
mov
mov
sbb
dec
and
and
mov
scas
pop
repnz
inc
mov
mov
popa
mov
cli
leave
xlat
ret
mov
inc
and
sbb
cdq
inc
jle
hlt
sbb
data16
repz
push
nop
aas
mov
adc
into
(bad)
mov
out
(bad)
lea
neg
mov
cmps
mov
scas
loop
push
lock
lds
dec
sub
cmovnp
jecxz
pop
xchg
push
or
mov
(bad)
in
dec
sub
imul
call
fwait
jmp
or
div
test
ss
mov
mov
or
xlat
out
(bad)
jb
in
and
outs
psraw
loopne
loope
cmp
call
inc
push
mov
push
and
sub
data16
dec
pop
inc
sub
pop
mov
cmp
or
stos
mov
mov
push
cs
sahf
rcr
push
mov
and
mov
aad
mov
add
fisubr
add
jns
jp
jl
fisttp
imul
adc
inc
fild
retf
outs
xchg
into
enter
movs
xor
mov
mov
aaa
mov
add
aam
inc
jecxz
mov
aam
stos
sub
leave
jnp
cli
in
fnsave
lock
ds
hlt
movs
cmps
sub
test
sbb
xor
jle
pop
lahf
in
sbb
addr16
dec
mov
xchg
int3
dec
mov
sub
scas
rep
shl
jbe
pop
jp
mov
into
push
push
shr
es
pop
sahf
push
aam
mov
popa
mov
add
jmp
mov
inc
and
aam
pop
mov
fist
hlt
add
sar
pop
mov
leave
cmp
not
jns
push
gs
jne
xchg
gs
push
xor
sbb
sbb
jp
inc
and
xchg
in
sub
mov
test
push
xlat
lock
fimul
in
xor
std
rol
cs
mov
(bad)
aaa
dec
in
push
clc
mov
push
in
cmp
cmp
arpl
imul
scas
leave
jb
pusha
lds
cdq
sbb
push
jge
sub
stos
cs
fdiv
dec
pop
popf
es
adc
pop
add
mov
sbb
shl
mov
leave
or
sbb
fs
shl
push
retf
inc
push
mov
dec
mov
sub
cmp
and
inc
rol
mov
imul
enter
mov
add
pushf
push
push
jb
aad
ss
test
test
push
cmp
mov
jnp
loop
xchg
mov
cli
fld
(bad)
call
sbb
in
dec
add
mov
jmp
mul
shl
add
dec
ret
in
adc
aaa
pop
or
dec
fwait
inc
pop
dec
xchg
xor
sbb
push
cli
sub
sar
mov
sbb
adc
and
jno
add
in
sbb
mov
mov
(bad)
xlat
daa
and
test
ja
mov
xchg
jl
sbb
sahf
or
ficomp
add
pop
fld
popf
test
loopne
movs
popf
mov
lds
add
arpl
xor
inc
jmp
das
and
mov
mov
jno
xchg
jmp
repnz
xchg
jno
or
add
arpl
pop
mov
mov
mov
jo
inc
mov
xchg
jge
out
mov
sbb
add
mov
cmp
mov
mov
retf
jo
popf
or
daa
pop
fisubr
xchg
mov
xor
das
xlat
(bad)
repnz
out
cmc
div
jb
arpl
test
cmps
aaa
lock
sub
call
or
ins
movs
add
cmp
jne
loope
inc
jmp
dec
mov
and
call
mov
and
ret
lds
pop
and
(bad)
iret
lock
int3
pop
mov
out
shl
ret
sub
daa
out
pushf
ret
fst
mov
ret
cmp
push
dec
inc
ds
cmp
adc
cli
adc
xor
sub
ss
sbb
pop
inc
mov
leave
sbb
mov
pop
sbb
cmp
fdivr
hlt
repnz
mov
xchg
gs
in
xchg
jmp
fld
sub
mul
lea
iret
ds
mov
adc
mov
push
cmp
and
push
out
cmp
push
shr
add
rcl
mov
sub
not
push
and
inc
ficom
outs
push
icebp
jbe
xor
mov
mov
lds
adc
inc
or
into
sbb
add
enter
or
inc
cdq
push
movs
retf
sub
out
fs
rcl
fisttp
or
jne
push
call
lahf
loopne
addr16
outs
push
mov
adc
(bad)
fcmovu
inc
xor
cmp
sub
inc
into
sbb
pop
rol
js
arpl
loope
js
xchg
mov
dec
pop
fstp
sub
aaa
dec
dec
mov
movs
mov
mov
mov
mov
leave
fwait
jb
cmp
pop
ins
inc
sub
sub
or
aaa
imul
sahf
outs
xchg
lds
(bad)
fdivr
stos
jmp
dec
xchg
push
sbb
pop
xchg
retf
mov
psrld
mov
mov
cwde
sub
ja
sahf
ja
inc
fsub
adc
pop
imul
lods
fs
mov
mov
test
nop
outs
stc
adc
push
cdq
pop
test
add
movs
outs
cdq
xor
retf
jns
or
jae
mov
div
jne
mov
jge
inc
pop
xchg
adc
(bad)
cmps
les
mov
push
jmp
cmp
push
loop
inc
enter
movs
stc
js
adc
sbb
out
cmp
inc
cwde
pop
push
into
imul
leave
call
ins
call
fisttp
mov
sar
cmp
or
and
je
outs
call
jae
dec
stos
cmps
dec
push
xchg
popf
push
or
xchg
xor
add
jnp
cmc
dec
in
xlat
ins
icebp
jle
push
or
pop
dec
sbb
jmp
and
sbb
add
ds
sbb
sub
inc
pop
or
(bad)
cmc
cli
stos
scas
test
lahf
imul
ficomp
sbb
lock
push
pusha
(bad)
add
stos
cmp
xor
test
fisttp
lea
call
or
call
xchg
push
jg
shl
inc
arpl
add
call
fwait
jnp
cmps
stc
jno
scas
pop
mov
add
shl
sub
gs
sbb
mov
mov
jp
fadd
out
and
je
dec
test
in
leave
int
add
and
aas
pop
mov
in
dec
dec
iret
mov
inc
pop
pop
dec
pusha
dec
jns
mov
sar
dec
dec
jnp
push
mov
xor
and
int3
cmp
sub
test
push
ror
jg
lods
pop
jg
jbe
bndldx
or
fadd
icebp
loopne
inc
add
cmp
xor
pusha
mov
mov
fdiv
cdq
ss
jmp
arpl
mov
es
push
cld
mov
adc
or
add
jmp
sub
jle
addr16
cmp
xchg
ret
jb
sub
adc
cmp
sub
add
call
dec
rol
lahf
test
clc
in
xchg
and
and
cdq
cmc
xor
aas
out
jmp
mov
mov
pop
push
mov
or
cmps
inc
das
sar
cdq
add
push
cmp
inc
jl
adc
inc
add
xchg
adc
xchg
sub
pop
in
loope
enter
mov
fwait
out
sar
jae
push
sbb
pop
xchg
add
pop
repz
add
std
das
inc
cmc
pop
imul
mov
mov
sbb
add
sahf
pop
mov
pop
shl
xchg
push
aad
out
mov
shl
cli
dec
movs
retf
(bad)
sbb
nop
fiadd
sub
mov
push
adc
int3
sub
add
into
loope
dec
gs
sti
lods
repz
adc
fwait
push
mov
icebp
mov
cmp
push
jns
dec
and
aas
(bad)
outs
inc
xor
fwait
pop
fisub
xor
test
inc
cs
shl
xchg
jbe
jmp
out
rcl
popf
test
popf
xor
pop
les
mov
mov
or
sar
xlat
cmc
cwde
jo
jle
inc
lea
out
xor
pop
dec
test
mov
pop
sti
sbb
nop
xor
xor
popf
iret
in
dec
sub
pop
into
repz
cwde
adc
jp
add
pop
dec
pop
pop
xor
sub
push
cmp
rdmsr
pop
mov
and
shr
lahf
mov
stos
and
mov
ret
outs
jg
fisttp
sub
arpl
fimul
(bad)
pop
mov
gs
jns
mov
xor
fstp
mul
out
jnp
cmps
xchg
adc
jmp
xor
jne
and
fimul
sub
xchg
popf
out
loope
cmp
imul
pop
xchg
or
ret
loopne
adc
sti
xor
mov
cmp
mov
loopne
cmp
clc
push
push
ror
xor
mov
in
dec
push
and
fdiv
mov
in
shl
loope
mov
outs
mov
push
mov
jae
xor
out
int3
arpl
sub
out
std
push
adc
ror
retf
add
fiadd
test
lahf
(bad)
ja
sbb
jbe
push
inc
mov
adc
mov
clc
mov
mov
int
int3
adc
(bad)
fcomp
je
ins
dec
push
in
neg
sbb
cli
(bad)
inc
push
jge
jg
xor
icebp
test
mov
xor
mov
call
call
js
pusha
xchg
mov
cli
in
(bad)
mov
xchg
bound
xor
push
mov
fwait
jo
es
arpl
pop
aam
les
push
inc
mov
in
xor
sbb
in
(bad)
pop
mov
icebp
push
pushf
sbb
into
jb
leave
bound
mov
js
mov
mov
ror
mov
sar
push
add
cmp
(bad)
sar
cmp
xchg
pop
cld
cli
cdq
loopne
(bad)
sub
mov
in
or
dec
ret
adc
xchg
jae
fisub
sub
sar
cmp
shl
sbb
dec
pusha
jb
push
adc
cmp
pop
add
sbb
jle
mov
shl
fbld
shr
mov
cdq
jbe
out
pop
into
in
fs
jge
data16
mov
aam
add
sub
fimul
imul
lods
pushf
push
nop
stos
cmp
mov
mov
push
(bad)
enter
pop
pop
les
inc
rcl
dec
mov
outs
mov
leave
bound
and
cs
lea
sbb
and
ficomp
push
loop
mov
xchg
cwde
xchg
mov
lahf
test
mov
adc
psubd
and
loopne
fisub
in
dec
jnp
daa
aas
popf
cmps
(bad)
cli
pusha
pop
jmp
push
mov
and
jle
sub
or
sub
mov
ficom
cmp
and
xchg
mov
or
push
pop
push
mov
pop
in
lods
add
pop
dec
jae
mov
inc
xchg
je
popa
mov
jmp
xchg
and
retf
jae
sub
test
inc
cmps
les
pushf
adc
xchg
out
jae
mov
mov
mov
cmovg
ins
mov
pop
mov
int3
imul
mov
adc
dec
loope
(bad)
cmps
mov
pop
push
mov
mov
in
inc
jnp
dec
cmp
rcl
inc
sub
mov
dec
cld
push
inc
test
movs
mov
jns
addr16
jmp
arpl
xchg
adc
add
fimul
retf
and
iret
or
mov
and
loop
ss
test
or
mov
xchg
movs
call
(bad)
push
fcmovbe
add
retf
add
xor
movs
sub
xor
push
dec
test
pop
in
inc
aaa
stos
inc
pop
xor
dec
and
shl
adc
pop
or
inc
cmp
jo
or
sar
imul
pop
lock
jbe
sub
push
(bad)
pushf
mov
sbb
sub
pop
sub
add
pop
and
or
xchg
aas
clc
and
rcl
xchg
jle
mov
repnz
or
mov
push
les
jg
and
xor
imul
sub
jae
pushf
push
push
mov
sbb
out
inc
cmp
or
sbb
scas
scas
jnp
mov
mov
and
xchg
outs
icebp
sub
add
mov
mov
aad
jmp
repnz
call
push
icebp
and
jmp
ds
xchg
inc
call
ss
in
push
ds
dec
(bad)
dec
repnz
pop
cdq
or
aaa
jbe
mov
fisub
sub
fwait
mov
mov
outs
fild
dec
sub
jmp
xor
jno
hlt
push
xchg
mov
sub
xor
gs
mov
xchg
dec
loop
inc
lea
cmps
test
push
(bad)
dec
(bad)
fsubr
jmp
push
sub
aas
ds
xor
daa
rol
ret
ins
mov
out
push
(bad)
repz
fistp
pushf
into
test
leave
xor
inc
adc
ds
fidiv
adc
scas
rcl
out
dec
sbb
pop
push
or
cdq
adc
ret
dec
in
mov
cmp
xchg
jmp
out
mov
jge
dec
push
arpl
scas
lods
mov
aad
sbb
fs
cmp
jp
adc
mov
dec
cdq
je
out
daa
scas
popf
sar
and
xchg
(bad)
cmp
lds
gs
daa
mov
bound
lea
call
or
mov
lahf
lahf
ret
xchg
scas
es
cmp
fisttp
cmps
popa
loope
es
sahf
sbb
mov
shl
bound
inc
push
jle
jg
jmp
jp
aas
inc
jp
cmp
scas
mov
xchg
icebp
inc
out
repz
out
fiadd
mov
xchg
out
adc
pop
adc
mov
xchg
sar
cmp
xor
(bad)
icebp
pushf
and
xchg
xchg
pop
jg
add
adc
call
stos
push
lods
push
mov
aad
repnz
loope
cdq
pop
xor
inc
imul
adc
pop
rcl
xchg
jge
adc
arpl
inc
pop
outs
outs
clc
das
pop
mov
fidiv
pop
xor
or
scas
and
sti
jbe
adc
mov
mov
adc
push
mov
imul
pop
jns
mov
mov
sbb
mov
push
jmp
mov
in
mov
inc
aam
inc
mov
js
pusha
outs
push
mov
jmp
mov
adc
xor
movs
movs
scas
scas
js
adc
neg
pushf
cli
xlat
dec
aam
cld
push
dec
xor
pop
xchg
dec
ficomp
mov
out
push
aas
ret
(bad)
pop
inc
cld
mov
in
mov
sub
test
sub
dec
ror
fnstenv
fcomp
rol
xor
cs
jb
inc
test
cmp
dec
rol
push
cmc
mov
mov
mov
push
push
jo
jl
shr
mov
retf
xor
adc
sub
mov
into
xlat
xor
and
ss
cmp
dec
add
out
adc
xchg
pop
lahf
in
in
sbb
push
hlt
mov
and
push
pop
and
out
mov
(bad)
neg
sbb
cmp
add
push
ss
enter
xor
arpl
int
test
jno
outs
out
in
cmp
lahf
(bad)
je
cmp
push
inc
sahf
sbb
popa
rcr
aad
test
inc
out
outs
addr16
dec
jo
imul
sub
test
in
adc
mov
mov
pop
xlat
aas
cmp
push
and
out
and
and
test
jmp
cmps
rcr
pusha
mov
jmp
xor
(bad)
jl
jb
mov
js
clc
mov
ffree
jp
test
xchg
std
stos
bound
xchg
mov
mov
inc
or
cli
repz
ins
jae
push
or
je
mov
sbb
mov
enter
mov
and
jnp
pop
add
mul
and
(bad)
push
(bad)
cmc
add
inc
mov
xchg
sub
push
jno
mov
jnp
push
jns
cmp
aas
or
cmp
int3
arpl
xchg
es
aam
mov
xlat
sbb
std
into
fcom
xchg
fprem
and
jle
sbb
add
out
in
rcr
cmp
dec
sbb
or
pusha
adc
jo
dec
push
(bad)
pop
and
dec
push
jne
aaa
inc
mov
mov
iret
pop
mov
adc
add
test
aam
(bad)
loopne
add
loopne
jl
mov
xchg
mov
imul
jmp
or
sub
cmp
xchg
stos
cmp
sti
jecxz
or
push
cmp
out
dec
jnp
ret
rcl
test
inc
jp
sahf
cmp
test
xchg
push
das
je
clc
jns
cdq
mov
xchg
push
jnp
(bad)
retf
es
cs
(bad)
repnz
fist
add
add
leave
je
cwde
mul
sub
cmp
aam
cmp
cmps
int
popa
shl
pushf
fld
or
aas
xor
mov
aaa
test
sbb
sub
adc
mov
test
or
xor
push
mov
retf
mov
xor
(bad)
call
sub
into
aam
dec
mov
fs
aas
or
cmp
push
jbe
enter
movs
js
repz
out
movntps
cmp
xchg
leave
mov
xor
out
and
call
jnp
cwde
mov
inc
cmp
xchg
(bad)
loop
mov
les
out
rcr
fs
pop
jne
adc
(bad)
cmc
test
push
es
daa
mov
xor
(bad)
or
or
mov
into
ret
xor
push
sub
or
xlat
clc
(bad)
lea
out
mov
loopne
mov
pop
pop
xchg
sub
pop
pop
jns
jno
push
inc
daa
in
inc
dec
aam
push
and
ds
aaa
imul
(bad)
mov
inc
je
mov
cmp
js
into
sbb
rcl
jmp
push
neg
in
mov
aas
and
fwait
sahf
imul
das
jo
into
sub
add
mov
mov
push
sub
sbb
das
gs
shr
adc
dec
iret
mov
scas
loop
ins
jecxz
test
dec
push
mov
mov
and
retf
xchg
mov
adc
inc
mov
mov
jecxz
add
xchg
das
mov
jp
ret
mov
dec
inc
(bad)
addr16
gs
imul
adc
mov
xchg
loop
lods
add
int
cwde
inc
mov
xchg
js
adc
xlat
stc
xchg
cmps
adc
sub
ret
inc
sbb
fidivr
pop
jge
or
jp
cmp
imul
pop
inc
rcr
dec
(bad)
dec
(bad)
stc
push
xchg
sub
retf
mov
jmp
cmp
mov
xchg
jo
pop
jbe
(bad)
or
ds
ja
es
xlat
rcl
xor
iret
cs
aam
sbb
pusha
jp
adc
icebp
cmps
clc
(bad)
(bad)
or
jp
clc
lock
ficom
sbb
out
(bad)
adc
push
sub
sbb
pushf
mov
inc
inc
and
mov
fbstp
xor
lds
xchg
jmp
xchg
jb
sub
push
or
icebp
inc
push
das
outs
fild
imul
lods
stos
mov
mov
cmp
cli
retf
shl
sub
frstor
lea
gs
pop
mul
dec
push
retf
mov
retf
pop
xchg
leave
pop
lods
jl
mov
test
inc
test
test
loopne
adc
(bad)
iret
mov
mov
call
adc
mov
dec
jnp
fs
rol
push
and
pop
sti
inc
xchg
jge
cmp
dec
shl
xchg
or
pop
jne
mov
jg
pop
into
and
pop
jg
(bad)
jg
clc
adc
lods
imul
dec
lods
add
adc
loope
pop
mov
nop
int3
shl
push
jmp
pop
lahf
test
jecxz
or
stos
cmp
sub
mov
rol
push
mov
mov
ins
stos
push
xchg
sbb
xor
dec
adc
rol
icebp
rcr
and
push
loop
or
pop
retf
mov
int
mov
dec
push
arpl
dec
sbb
or
pop
ror
jmp
ds
pop
push
mov
xchg
pop
lock
shr
or
mov
pop
inc
adc
lea
mov
adc
dec
test
fiadd
lds
(bad)
add
push
sub
add
xchg
xchg
jo
mov
rcr
test
sub
xchg
(bad)
loopne
mov
push
xor
xchg
mov
and
mov
retf
in
sub
adc
adc
aaa
pop
pushf
dec
inc
push
dec
mov
mov
(bad)
(bad)
jp
arpl
cmp
xchg
cmps
dec
mov
dec
pop
jno
add
adc
jle
mov
sub
in
jle
push
es
xor
lea
mov
clc
or
fmul
adc
es
out
nop
xchg
push
add
sub
cmp
into
push
or
jl
ret
sbb
scas
sbb
cmp
push
ja
cmc
or
lods
mov
inc
dec
and
shl
sub
les
xchg
sbb
idiv
sub
or
imul
add
loop
push
movs
mov
pop
adc
mov
aas
mov
sub
outs
clc
dec
pop
pop
out
call
pop
sbb
fs
add
and
add
aam
cmp
call
neg
fcomip
(bad)
movs
shl
mov
adc
dec
stc
bound
dec
ret
jl
mov
mov
ret
sahf
sar
pop
xor
out
repnz
jmp
int3
das
sub
push
xchg
or
cmp
test
lods
iret
jae
xor
test
jb
je
mov
jl
adc
inc
lahf
mov
stos
mov
out
add
imul
stc
mov
pop
mov
dec
or
fbstp
pop
jmp
add
or
push
ret
arpl
adc
imul
sbb
push
test
int3
mov
mov
pusha
pusha
add
clc
sbb
ins
push
pop
and
into
repnz
in
aaa
and
std
stc
fdivp
push
jae
push
add
pop
add
sti
mov
punpcklwd
sub
or
aam
mov
xor
sbb
dec
push
mov
xor
sub
or
(bad)
ret
mov
in
(bad)
into
xor
test
aam
adc
jne
mov
mov
out
fcom
cs
mov
sbb
push
sbb
out
push
(bad)
xchg
jb
dec
adc
mov
sbb
sub
retf
(bad)
pop
mov
xchg
arpl
dec
icebp
(bad)
clc
cmp
mov
inc
push
in
lods
(bad)
cmp
stos
retf
ins
repz
stos
in
lea
int
mov
rcr
mov
jecxz
adc
fnstcw
jbe
in
jbe
out
nop
loop
pop
pop
xlat
das
js
nop
mov
inc
mov
pop
add
nop
outs
fst
jae
pop
push
sub
leave
jmp
jl
jl
jg
adc
or
xchg
push
xchg
mov
repz
cmp
add
out
mov
mov
int
outs
in
xor
int
les
lock
jecxz
ret
cs
aas
gs
test
push
push
xchg
push
fmul
(bad)
jae
mov
sub
inc
dec
add
test
pop
mov
push
mov
sar
(bad)
jl
add
or
fisub
movs
xor
pop
jmp
sbb
xchg
movs
mov
sub
movs
dec
sar
adc
loop
ret
mov
(bad)
jl
inc
popf
and
int
dec
mov
int3
inc
mov
pop
rol
mov
pop
clc
or
push
lea
sbb
in
jg
or
jno
icebp
test
dec
xchg
jne
xchg
cli
or
fdivr
cld
mov
mov
test
out
adc
push
mov
mov
pop
aaa
xor
shr
jbe
push
add
cmp
cli
pop
fstp
inc
loop
dec
fist
in
ins
cld
bound
call
shrd
push
jnp
push
lahf
pop
dec
push
repnz
pop
inc
xchg
xchg
dec
rol
push
lahf
pop
rep
repnz
icebp
dec
jmp
fcom
ss
movs
bound
inc
push
inc
mov
ins
aad
jae
lods
adc
out
and
ret
xchg
jne
out
add
stos
js
aad
jecxz
les
add
out
sbb
cli
out
or
push
cmp
call
push
lods
push
imul
push
adc
dec
add
pop
cmc
xchg
pusha
(bad)
dec
xchg
das
pop
(bad)
fnsave
rcl
fst
leave
aam
popf
lock
push
push
dec
out
sub
ss
fbstp
outs
jl
icebp
mov
mov
dec
stos
inc
in
inc
sbb
mov
ror
rcr
(bad)
xchg
pop
sub
push
lahf
into
cmp
and
cdq
test
add
mov
push
retf
cwde
movs
icebp
sbb
ja
cmps
mov
dec
add
inc
cdq
iret
or
jp
ret
lock
jmp
add
mov
stos
clc
add
loopne
xor
cmp
push
mov
in
and
cmp
jecxz
in
js
cmp
pop
jecxz
cmps
icebp
push
fimul
icebp
cmp
test
(bad)
cmp
stos
push
or
gs
icebp
mov
inc
lds
ret
xchg
loope
(bad)
scas
sbb
push
cdq
or
push
or
cdq
sbb
mov
push
jb
xor
cmc
(bad)
jg
inc
enter
sbb
fucom
ficomp
or
call
add
jge
push
int3
adc
jns
add
loop
cdq
repnz
mul
mov
dec
jmp
enter
in
xchg
mov
mov
jl
mov
in
pop
test
jae
mov
adc
push
dec
mov
cmp
mov
pop
inc
mov
sahf
mov
inc
dec
adc
add
mov
jne
mov
adc
in
pop
ins
xor
dec
xchg
ret
imul
jne
ret
jns
ret
fdiv
inc
push
int
lahf
cmp
mov
push
fcmovne
test
out
loop
inc
fcmovnb
inc
scas
xor
call
push
jle
rol
cmc
ja
sub
mov
sub
adc
loope
mov
pinsrw
retf
dec
xor
adc
pop
jmp
ss
and
movs
adc
inc
pusha
test
pop
in
push
dec
fnstsw
inc
repz
jno
push
fstp
mov
pop
cmps
mov
or
test
ja
imul
jnp
int
xchg
xchg
xchg
(bad)
push
mov
daa
mov
fisttp
into
fadd
movs
jmp
cmc
mov
mov
inc
jbe
cdq
iret
adc
jge
lods
jne
pop
mov
fisttp
pop
mov
neg
mov
scas
aas
hlt
pop
inc
pusha
jmp
stos
mov
sub
aas
cmps
ss
jno
shl
sub
cs
out
repnz
xchg
inc
mov
retf
pop
mov
sar
jle
test
mov
aas
push
lods
xchg
enter
dec
mov
pop
shr
js
and
das
mov
inc
mov
gs
popf
aam
cmps
adc
add
mov
imul
pop
and
adc
pop
inc
adc
dec
fs
mov
pop
xchg
xor
fiadd
call
xchg
stos
inc
jmp
push
mov
xchg
jg
jmp
mov
in
in
repnz
and
xor
call
ret
sbb
in
call
push
mov
in
push
jbe
push
shl
sbb
fs
lock
and
dec
dec
popf
cmp
call
inc
cwde
and
or
push
xchg
xchg
in
fimul
jg
in
ja
dec
jo
jmp
mov
addr16
cmp
jge
cmp
push
sbb
daa
daa
jl
jno
(bad)
dec
pop
ins
mov
add
xlat
jmp
sahf
adc
or
sbb
ret
or
iret
fidivr
inc
xchg
jne
dec
in
loop
imul
int
pop
(bad)
leave
outs
inc
cli
mov
jge
int3
scas
fmulp
mov
fnsave
push
mov
fs
ficomp
fistp
mov
sub
rol
adc
nop
mov
shr
push
xor
das
(bad)
cmp
xchg
cmp
inc
xor
mov
push
into
xor
call
inc
scas
sub
pushf
in
loope
stos
pop
outs
push
mov
js
mov
cdq
or
sar
inc
xchg
imul
mov
data16
pop
sbb
or
dec
adc
xchg
es
outs
fnstcw
fs
clc
and
sub
mov
push
dec
daa
jmp
fld
add
jl
or
ins
fwait
popf
cmps
adc
in
or
add
pop
out
inc
mov
icebp
push
aaa
stc
push
sar
mov
dec
mov
push
cmps
jae
push
mov
jno
adc
(bad)
jmp
adc
cmps
or
iret
dec
xchg
movs
xor
add
mov
sub
sbb
ss
gs
sar
movs
push
mov
scas
jle
lahf
je
bound
mov
cwde
cmp
add
mov
lea
xchg
add
leave
aas
aad
sti
imul
dec
add
(bad)
mov
cmp
ins
add
jmp
rcr
retf
and
or
fisttp
jnp
mov
adc
jmp
push
or
xchg
xchg
inc
dec
pop
das
fwait
jp
pusha
add
retf
xor
std
or
imul
pop
test
leave
arpl
or
(bad)
loopne
out
or
retf
add
in
add
cmp
rcr
cmps
lahf
jp
int
push
enter
add
pop
jnp
sub
jnp
mov
xor
jmp
mov
popa
fucomip
dec
cwde
cli
out
in
nop
sbb
fidiv
stc
ficom
jno
ja
hlt
mov
push
add
cld
loopne
int
jmp
mov
(bad)
std
in
xchg
aad
and
les
push
icebp
xchg
adc
loop
clc
add
idiv
jmp
outs
pop
lahf
lahf
pop
dec
mov
das
xor
int3
sbb
pop
inc
hlt
out
retf
jbe
mov
(bad)
enter
inc
pop
sbb
pop
fidivr
xor
cmp
(bad)
sub
ins
xchg
inc
aam
movs
pop
lahf
push
pop
out
add
jmp
call
cmp
das
sbb
cmps
xor
mov
aam
push
stos
outs
inc
pop
leave
std
aam
push
push
aas
sahf
in
or
fdivr
out
adc
and
ficom
stos
inc
outs
shl
dec
xchg
pop
jge
ins
cmps
push
test
cs
inc
ss
inc
mov
mov
inc
dec
shl
fnstenv
jl
mov
push
pop
pop
fisubr
mov
mov
scas
push
mov
retf
pop
or
or
addr16
add
jmp
jne
fild
cs
scas
repz
(bad)
je
into
cmc
fmul
stc
aaa
sub
hlt
dec
adc
je
or
inc
push
inc
mov
in
xor
js
daa
scas
js
(bad)
sbb
push
gs
ror
push
xchg
adc
nop
jno
ins
outs
mov
(bad)
mov
add
xchg
aam
adc
xchg
test
ror
loope
hlt
jo
adc
loop
push
pusha
movs
pop
out
aad
jle
in
fstp
out
mov
cmp
(bad)
jae
sbb
loopne
jle
fwait
pop
mov
add
vaddsubpd
cdq
add
adc
add
dec
scas
inc
and
cld
sub
mov
aam
dec
arpl
jmp
in
out
pop
cmp
jl
sbb
xor
xchg
mov
xchg
in
and
aam
dec
das
fisttp
and
movs
xor
retf
xchg
bound
call
xchg
push
pop
cmps
push
nop
push
js
mov
cmp
leave
sub
mov
mov
pushf
or
std
adc
imul
mov
fidiv
ficomp
dec
test
sti
or
add
or
sti
arpl
dec
(bad)
aaa
lock
addr16
stc
adc
shl
aas
(bad)
fstp
mov
mov
xchg
das
inc
pop
stos
inc
(bad)
pop
test
adc
icebp
xchg
mov
mov
mov
rol
mov
fnsave
jge
jo
fsubrp
push
adc
pop
repz
mul
in
leave
pusha
loop
jmp
popf
sub
les
mov
ret
imul
mov
and
lahf
retf
fimul
imul
push
mov
mov
ins
and
fild
stos
popf
cmp
mov
dec
jno
imul
mov
add
mov
in
scas
mov
push
pop
inc
stos
xor
mov
aaa
inc
add
pusha
test
and
xchg
xchg
out
jne
clc
popa
adc
mov
add
leave
dec
mov
ret
stos
and
inc
pop
mov
dec
jnp
adc
jne
fstp
xchg
scas
adc
mov
add
arpl
add
mov
or
call
js
dec
pop
sbb
int
sbb
mov
mov
jmp
cmp
sub
in
cs
ss
mov
call
sbb
jl
lods
cmp
cmp
mov
je
mov
sbb
xor
push
jno
cmp
sbb
in
xor
pushf
stos
dec
mov
outs
and
and
je
dec
cmps
test
pop
and
pop
inc
outs
add
movs
cli
add
jg
scas
mov
retf
retf
lods
sub
pushf
popa
stc
adc
xchg
jae
dec
push
or
lahf
enter
mov
xor
jbe
icebp
in
cmps
mov
popa
outs
ret
retf
ins
in
scas
or
sbb
outs
mov
pop
pop
jbe
inc
sbb
mov
cli
mov
popf
push
lahf
fcmovnbe
push
repz
jle
js
jno
mov
xchg
test
test
daa
jp
and
mov
dec
retf
cmp
pop
std
adc
sti
mov
test
adc
in
inc
movs
cmp
adc
add
inc
pop
or
sub
ja
out
popa
and
mov
or
imul
add
sub
movs
jmp
aam
sbb
and
test
jnp
inc
ja
movs
test
jl
mov
xchg
(bad)
cmp
adc
(bad)
lods
push
ficom
jge
mov
stos
mov
push
mov
ror
sub
loopne
ss
xor
mul
imul
push
adc
repnz
in
jns
mov
mov
adc
fadd
(bad)
retf
mov
xor
rol
push
mov
pusha
jle
push
fidivr
and
(bad)
pop
mov
or
xor
scas
lods
cmps
(bad)
mov
and
mov
je
inc
fstp
adc
dec
mov
repz
into
pusha
lock
pop
mov
push
mov
lods
inc
inc
dec
repz
and
out
push
xchg
call
inc
in
int
mov
ret
sub
imul
and
pop
push
popf
xchg
and
test
or
cmps
sbb
or
sbb
mov
dec
retf
xor
xchg
cmp
xor
inc
push
adc
dec
sbb
jmp
add
lock
or
xchg
and
(bad)
das
inc
aas
mov
jmp
dec
mov
and
sub
push
retf
out
out
or
xchg
sahf
(bad)
stos
fstp
fsubr
jg
ret
imul
xor
sbb
add
les
xor
pop
shl
cmps
stos
dec
repz
ins
(bad)
ret
fcom
or
rcr
inc
imul
into
fisubr
clc
dec
fdiv
lea
mov
cmps
cld
mov
and
rcr
mov
add
xor
xchg
shl
addr16
mov
in
and
mov
and
mov
mov
into
mov
cmp
das
sub
call
ss
jmp
mov
jnp
jecxz
loopne
ret
arpl
clc
jecxz
outs
or
sub
jp
stc
xor
or
(bad)
or
mov
sbb
ins
mov
inc
xchg
xor
ja
test
xchg
or
mov
dec
or
das
adc
ror
cmp
mov
mov
mov
add
mov
jno
dec
(bad)
fdiv
pop
das
inc
sbb
xchg
(bad)
jge
and
mov
div
mov
es
jmp
out
xchg
adc
jo
or
(bad)
mov
pusha
push
repnz
imul
adc
cli
int3
xchg
int
cli
pusha
sahf
fmul
stc
mov
inc
pop
mov
mov
pop
pop
fs
xchg
sub
enter
push
mov
sub
push
xor
pop
jmp
xchg
stos
call
outs
cmp
movs
aam
lock
fsub
fild
push
or
pop
lds
stos
cmps
call
jns
cmp
add
jo
cmp
jl
xor
stos
mov
or
mov
movs
mov
test
mov
cmp
in
mov
fimul
scas
shl
(bad)
lds
or
sbb
into
jb
jno
pmulhw
fsubr
adc
test
loopne
adc
dec
pop
mov
xchg
jl
mov
mov
pop
jp
(bad)
out
gs
cld
or
mov
pop
rol
dec
std
or
imul
lds
adc
dec
fs
shl
jmp
push
into
adc
sti
arpl
sub
add
clc
push
sbb
dec
lods
das
aad
cmp
stos
and
sahf
fdiv
push
repz
mov
pop
or
shl
cmp
dec
pop
jl
lahf
mov
jnp
jecxz
pop
call
push
inc
into
ja
mov
outs
scas
repnz
ins
add
ins
stos
fdivr
fwait
ret
shr
dec
ficom
stos
fs
mov
push
push
test
fldenv
dec
or
pop
sbb
push
pop
adc
mov
(bad)
stos
rcl
push
xor
xor
stc
gs
xchg
data16
jmp
lock
ja
out
push
jnp
cmovl
push
rcr
(bad)
jne
sbb
ss
aad
cmp
test
ficomp
mov
out
and
ins
lds
push
scas
ja
adc
xchg
mov
sbb
rol
fsubr
pop
fisttp
mov
retf
mov
imul
div
pop
inc
int
sub
xchg
scas
xchg
les
pop
and
sub
or
sbb
or
add
fnstenv
inc
test
mov
xor
int3
pop
xchg
sub
mov
cli
clc
scas
fsubr
jecxz
scas
jne
mov
into
xchg
rcr
fadd
or
cmp
cld
mov
mov
aam
in
addr16
aad
dec
dec
cwde
fcom
and
test
or
jp
lods
lods
push
cmps
retf
fs
rcr
xchg
mov
loope
cli
mov
and
loop
adc
loop
and
fild
shufps
inc
inc
pop
sbb
and
cmp
cdq
outs
neg
retf
jae
dec
test
iret
in
stc
mov
pop
stos
scas
mov
xchg
out
nop
cmp
mov
mov
mov
add
neg
or
push
jecxz
cmps
scas
mov
pop
fldcw
inc
stos
and
test
push
adc
(bad)
call
enter
idiv
and
jle
jbe
and
sbb
shr
(bad)
in
repz
jmp
lea
out
les
adc
cmp
clc
fldenv
xchg
popf
test
fs
aad
stos
mov
inc
sbb
cmp
dec
daa
xchg
pop
push
(bad)
jae
mov
aas
loope
mov
or
cmps
cmps
std
movs
jno
push
push
ja
int
gs
popa
shl
lea
sbb
pop
xchg
inc
jl
out
pop
mov
push
adc
sbb
xor
int
fld
push
fs
(bad)
jb
push
cmp
imul
pop
(bad)
cmc
add
inc
and
arpl
test
in
ret
jns
outs
cmp
popf
inc
xchg
inc
pop
mul
inc
jo
call
xor
test
mov
aam
or
and
adc
mov
data16
and
cwde
adc
mov
jnp
dec
call
push
jnp
je
mov
pop
mov
mov
das
rcr
inc
jno
test
ins
mov
mov
jl
fmul
stc
sub
(bad)
mov
and
outs
xchg
ss
mov
shr
cmp
xor
and
xchg
(bad)
sti
neg
mov
push
adc
mov
dec
mov
xchg
lods
push
mov
pop
out
or
jns
out
fstp
out
push
dec
cs
and
xchg
inc
sub
stos
dec
jge
mov
scas
cmp
xor
retf
jae
or
test
sub
cmp
and
push
mov
icebp
pushf
sbb
(bad)
(bad)
inc
push
jnp
mov
in
cmp
add
mov
int
cmp
popa
(bad)
cmps
fs
mov
cmp
dec
push
cmp
jne
out
dec
pop
push
push
mov
pop
and
mov
xor
adc
dec
(bad)
in
cwde
ss
or
aas
jmp
test
out
jecxz
lahf
mov
test
jo
mov
pusha
aas
lods
retf
sbb
dec
mov
push
mov
push
inc
or
mov
mov
out
pop
jp
(bad)
jmp
je
fldcw
push
push
push
js
cmp
mov
(bad)
in
retf
adc
or
imul
or
sub
imul
pop
xchg
loop
jp
jmp
jne
xchg
icebp
xchg
aad
pop
jne
cmp
xor
mov
(bad)
or
sbb
cmps
les
cdq
jmp
or
pop
jmp
jo
sbb
dec
arpl
push
sahf
leave
imul
mov
mov
das
call
(bad)
adc
imul
jae
inc
push
push
add
movs
and
mov
sub
inc
leave
shr
cdq
lock
mul
mov
jnp
frstor
aad
mov
std
adc
inc
push
and
adc
fsub
out
stc
dec
xlat
push
ins
pop
clc
pusha
pushf
jle
mov
adc
aaa
aam
inc
cmp
imul
dec
test
jo
pop
push
int3
inc
mov
mov
shl
add
inc
or
ins
inc
pop
dec
outs
sub
cmp
sbb
jno
retf
cwde
out
jle
clc
sti
and
push
xor
xchg
inc
mov
cmp
leave
push
pop
rcl
scas
jg
cmps
jmp
mov
xchg
je
pop
aas
aaa
arpl
pop
fist
fdiv
push
jae
popf
push
jge
pop
into
iret
lds
push
inc
and
cwde
xchg
push
adc
mov
jbe
pop
or
test
js
dec
push
cmp
out
add
xor
adc
aam
mov
test
dec
aam
mov
(bad)
inc
stc
mov
xchg
dec
fmulp
nop
push
jmp
sbb
pop
icebp
dec
movs
adc
test
xor
sub
xchg
test
adc
inc
and
mov
xlat
out
rol
or
ds
dec
jne
test
adc
adc
push
mov
inc
ins
test
pushw
add
movs
inc
rol
mov
cmc
xchg
fs
mov
cmps
movs
and
jmp
ror
cmp
mov
sbb
pushf
push
push
mov
xor
push
sbb
inc
stos
mov
retf
xchg
(bad)
and
inc
test
int
push
mov
mov
sahf
mov
(bad)
pop
dec
inc
push
(bad)
and
push
cmps
mov
in
jns
cmc
pop
out
pop
mov
lods
adc
sub
cmp
xchg
mov
sbb
test
shl
jbe
int
div
inc
call
fwait
gs
mov
mov
and
js
xor
xchg
lock
shl
mov
xchg
mov
clc
dec
sbb
inc
dec
aad
(bad)
mov
sti
jbe
shr
loope
adc
and
test
ret
sub
mov
cmps
in
retfw
xchg
bound
add
popf
nop
gs
xchg
dec
pop
stos
or
adc
outs
ficomp
das
iret
ret
adc
xchg
xor
outs
imul
xor
into
mov
fsub
mov
cli
scas
repz
cli
and
in
dec
pop
jo
shl
popa
ins
cwde
stos
ret
cmps
mov
cmps
cwde
jecxz
sub
mov
inc
nop
add
and
out
mov
sbb
dec
xchg
rol
xchg
mov
xor
stos
ds
mov
stos
sbb
je
popf
xor
enter
cwde
push
(bad)
push
popf
jb
add
sbb
rcl
adc
ja
and
pop
js
adc
push
jo
shr
leave
mov
mov
test
(bad)
aas
es
push
mov
leave
xor
mov
ja
or
fidiv
xchg
scas
pushf
(bad)
xchg
dec
cwde
sbb
mov
lea
(bad)
cli
shl
push
sub
pop
mov
push
gs
mov
cdq
nop
arpl
xchg
xchg
sub
fld
jg
repz
mul
iret
fmul
outs
out
sub
push
fst
(bad)
aas
les
pop
test
shl
ins
shr
mov
jle
cld
loope
imul
inc
pop
add
in
pop
mov
cmp
iret
adc
and
in
inc
push
in
jb
dec
test
and
sub
push
or
pop
fsubr
in
jge
dec
fcmovu
pusha
or
dec
loopne
mov
inc
scas
pop
dec
or
call
pop
or
rcl
mov
cld
add
pavgb
adc
pop
into
sub
push
icebp
fs
dec
sbb
pop
or
pop
jae
jge
pop
outs
add
or
sub
sbb
jmp
sbb
xchg
sbb
mov
mov
push
rcl
mov
(bad)
adc
mov
adc
loopne
mov
scas
pushf
add
add
jl
retf
repnz
imul
mov
mov
sbb
lods
push
test
jne
movs
aas
retf
jno
xchg
pusha
mul
movs
(bad)
in
jp
mov
push
jecxz
iret
lods
and
xchg
add
aad
mov
dec
(bad)
jbe
and
ins
cmp
jl
fiadd
mov
jns
jmp
icebp
(bad)
mov
fdivr
pop
add
fist
cmps
jbe
push
inc
jnp
dec
loopne
cld
out
fimul
(bad)
test
in
gs
out
mov
or
sahf
rcr
add
(bad)
sahf
xor
sti
sahf
add
movs
sbb
lock
outs
mov
imul
mov
mov
dec
sub
mov
dec
imul
cs
popf
das
cmp
or
xchg
cmp
cmps
inc
lahf
and
outs
push
es
fist
pop
shr
out
call
sbb
push
mov
retf
xchg
xlat
out
call
daa
into
cmp
int3
fs
sub
jo
cmc
aas
adc
pusha
cmp
mov
stos
mov
arpl
sub
xchg
fimul
adc
int3
test
pop
ret
(bad)
fisub
sub
fisttp
arpl
in
mov
retf
pop
mov
popa
in
inc
shl
gs
add
lea
je
inc
sub
jnp
push
shl
out
call
stc
sahf
daa
inc
bound
test
(bad)
outs
add
(bad)
cdq
icebp
xchg
fisttp
mov
jg
dec
xlat
inc
pusha
mov
iret
das
movnti
je
out
(bad)
pop
xlat
and
jge
rol
pop
xor
lds
mov
fidivr
lods
mov
mov
and
mov
mov
retf
(bad)
movs
ror
(bad)
jg
pop
mov
and
daa
cmps
das
or
(bad)
mov
add
cmp
into
out
popa
mov
xor
cmp
cld
cmp
cli
dec
frstor
mov
int3
jb
sbb
lods
test
not
out
push
push
out
ret
sub
mov
push
fild
cmp
sti
retf
xor
mov
sub
lock
outs
div
lea
sti
into
inc
comiss
xchg
dec
fild
inc
push
sar
xlat
daa
loop
out
dec
call
jne
fstp
les
outs
add
call
test
out
pop
bound
pushf
inc
int3
mov
xor
in
imul
loop
test
das
scas
punpckhdq
repnz
sub
in
(bad)
popa
or
push
push
mov
test
xchg
rcl
mov
cmp
stos
sbb
shl
shr
dec
or
add
dec
adc
adc
push
mov
fist
and
cmp
shr
iret
lahf
test
and
hlt
or
int
mov
je
aaa
push
bound
pop
add
cmp
retf
jg
int
mov
push
lea
sbb
and
jmp
xor
pop
ret
and
(bad)
and
(bad)
fld
push
fnstenv
fsubr
test
mov
dec
in
pop
pop
mov
adc
lea
jge
adc
jge
dec
mov
pop
cli
ins
dec
leave
lock
pop
ins
push
mov
jl
(bad)
inc
jg
cmps
into
out
imul
nop
test
xor
or
sbb
(bad)
mov
or
cmp
fild
ret
outs
stc
lahf
mov
add
lock
sbb
jae
jmp
js
adc
shl
int
xchg
dec
outs
push
mov
fs
cld
jge
leave
addr16
adc
pop
ja
adc
jbe
add
retf
cmps
lods
or
sub
inc
mov
and
jl
je
cmp
cdq
movs
cli
aam
mov
cmps
dec
jl
xor
mov
scas
(bad)
ins
jge
shr
ds
jne
push
and
test
jns
mov
pop
or
push
jge
test
xchg
out
and
scas
retf
movs
sub
xor
or
xor
aas
enter
(bad)
out
jnp
pop
push
adc
jl
mov
cmp
cld
push
xor
mov
inc
push
mov
or
push
add
adc
xchg
cmps
sub
mov
jmp
xor
mov
sbb
scas
adc
xchg
test
or
in
ror
test
jecxz
pop
jle
cmps
(bad)
cmp
sbb
push
sbb
mov
(bad)
cwde
ss
stc
out
movs
std
cdq
mov
ja
jmp
xor
push
push
enter
retf
lods
jns
jp
jmp
repz
mov
js
add
cmps
add
add
fild
inc
pop
jmp
cmp
out
movs
(bad)
mov
bound
dec
call
imul
add
mov
inc
addr16
enter
jns
jo
xchg
ficomp
xchg
or
fcomip
pop
and
fsub
mov
xor
xor
ret
sub
mov
mov
cmp
loop
sbb
mov
ss
dec
loop
sbb
fistp
inc
ss
clc
ficom
mov
(bad)
push
dec
(bad)
iret
sbb
xor
adc
ret
popf
or
sub
fild
cmp
mov
dec
and
xchg
out
mov
xchg
into
mov
std
mov
mov
xchg
out
repz
push
iret
adc
sbb
sub
add
jg
add
in
imul
aam
lds
sub
dec
add
mov
jns
pop
cmp
xchg
(bad)
jge
sub
jecxz
jno
and
xor
jle
add
(bad)
jl
push
cmc
imul
xor
shr
test
fstp
and
scas
icebp
(bad)
das
arpl
stos
jae
jecxz
add
xchg
adc
das
xchg
sbb
mov
sub
dec
sbb
push
sbb
aas
mov
addr16
addr16
mov
jne
pop
or
outs
jg
call
and
ror
sahf
pushf
mov
shl
cwde
push
fild
push
jbe
cmp
sub
imul
out
call
cwde
adc
mov
cmp
fst
and
test
ins
ds
aam
int3
movs
ret
mov
add
daa
pop
sbb
out
push
(bad)
pop
push
xchg
sub
cmc
nop
int
push
aaa
and
les
in
jg
cmps
ins
or
adc
iret
or
mov
cmps
loop
(bad)
movs
mov
push
ds
jnp
icebp
int
aas
ins
add
xchg
inc
cwde
and
sahf
js
jns
mov
das
push
sub
movlps
and
mov
push
mov
pop
mov
out
iret
mov
jo
aas
cdq
mov
dec
sub
mov
inc
pop
jecxz
or
mov
int3
inc
repnz
push
clc
scas
cmp
sbb
xor
stos
pop
mov
add
dec
pop
and
sub
mov
inc
pop
mov
stos
pop
retf
add
xor
imul
ret
xor
jno
inc
xor
sub
mov
int3
xor
clc
bound
rcr
loopne
movs
jle
movs
outs
shl
dec
or
xlat
cwde
(bad)
jns
repnz
pop
ja
push
sar
cmc
iret
jmp
cmc
dec
fldcw
call
(bad)
mov
mov
js
pop
out
rcl
pop
lock
sbb
and
xor
hlt
push
or
ds
jmp
sbb
dec
sti
add
adc
push
xchg
pop
mov
sub
push
add
jle
stos
mov
cmp
(bad)
repz
out
sub
test
fnstsw
inc
shr
loope
jb
ret
jnp
ins
mov
push
out
loope
stos
or
sub
mov
gs
fsub
scas
jno
(bad)
xchg
test
fadd
pop
xchg
mov
icebp
lds
pushf
or
shr
mov
mov
aad
test
scas
ins
xor
cmp
pushf
clc
jecxz
sub
push
addr16
jmp
or
cmp
cld
cmps
mov
jb
das
mov
jnp
or
pushf
push
pop
test
icebp
jge
leave
pop
sub
call
mov
pop
jg
pop
sub
sub
sub
fimul
pop
push
adc
inc
cmp
xchg
repnz
sti
dec
mov
push
mov
pop
xlat
xchg
mov
jp
push
inc
ins
lock
xor
xchg
hlt
sub
into
aaa
outs
pop
loope
les
adc
mov
and
ss
mov
test
ins
jecxz
add
ins
sbb
movs
iret
mov
pusha
jecxz
outs
push
mov
daa
in
cmps
and
fbstp
mov
jbe
(bad)
and
mov
(bad)
scas
xor
mov
xchg
mov
psllw
fnsave
cmps
test
xor
pop
push
sti
addr16
inc
test
add
loopne
mov
push
data16
inc
mov
dec
or
push
sbb
push
xor
mov
loope
mov
jnp
cmps
pop
lds
js
arpl
dec
xor
dec
aaa
lods
test
mov
mov
bound
sub
mov
jns
cmps
in
and
dec
inc
stos
scas
lods
and
xchg
xor
rcr
jmp
push
(bad)
int
test
xlat
sbb
lock
std
pop
repnz
inc
adc
jb
dec
lods
pop
xor
mov
ja
imul
mov
ss
mov
sub
mov
xchg
fwait
scas
xchg
out
icebp
out
idiv
dec
enter
fadd
je
mov
repz
lods
(bad)
fadd
jge
(bad)
jmp
xchg
mov
xchg
ins
ins
push
mov
xchg
ret
xchg
cmp
aaa
jecxz
pusha
dec
inc
stos
sbb
mov
daa
sbb
mov
scas
pop
rcl
mul
nop
in
repnz
sbb
adc
mov
lea
fcmovbe
fcmovbe
mov
(bad)
repnz
lock
mov
(bad)
jbe
inc
xor
sub
inc
sbb
pushf
jns
out
cld
dec
je
ins
in
jge
ror
adc
int3
(bad)
or
ins
push
std
bound
add
cmp
movs
inc
push
int
jecxz
lods
lahf
dec
or
pop
dec
daa
mov
adc
daa
add
out
pop
pop
mov
pop
cwde
cmp
fidivr
push
aam
fs
mov
pop
cdq
and
mov
mov
popf
inc
or
mov
adc
call
push
adc
je
mov
mov
adc
fist
mov
test
dec
jecxz
jle
sbb
add
xchg
sar
movs
cli
js
pop
adc
scas
push
inc
cwde
jle
and
repz
aad
out
xchg
jb
mov
das
pusha
cdq
lea
push
cmp
stc
adc
jb
xchg
or
xor
mov
repz
cmp
inc
std
mov
in
leave
fsubr
inc
ins
test
xchg
cmp
je
shl
enter
push
lock
mov
fist
not
push
cmc
les
das
xor
dec
mov
ds
pop
inc
pop
or
mov
push
cmps
les
loopne
js
test
jnp
jnp
xchg
push
int3
inc
xlat
or
iret
inc
cwde
jae
std
repz
lods
pop
(bad)
repz
or
add
pop
loop
scas
jne
pop
(bad)
aad
jb
or
adc
xchg
imul
pop
enter
xchg
jbe
and
adc
test
loope
jecxz
out
mov
test
lahf
ficom
movs
inc
adc
cmp
int
sar
mov
jnp
add
popf
push
push
bnd
ins
repnz
inc
push
call
les
lods
imul
push
out
stc
inc
or
sub
lods
in
jo
pop
sub
mov
inc
jl
in
xlat
dec
scas
inc
ja
fsub
call
or
jg
and
(bad)
cwde
mov
inc
ja
(bad)
sub
shr
bound
imul
mov
fbld
dec
dec
cmp
adc
push
pop
daa
mov
mov
push
add
sub
int
jg
mov
sub
(bad)
add
out
jno
dec
test
mov
mov
jbe
das
cmps
or
mov
adc
(bad)
sbb
jecxz
dec
xor
sbb
es
or
ins
and
mov
popa
dec
sti
les
retf
fnstenv
cmc
out
push
popf
ret
mov
xor
sub
shr
push
add
fstp
stos
mov
ins
cmp
stos
xchg
sahf
fsub
cdq
jb
or
ja
cmp
inc
sbb
lods
mov
test
aas
cmc
movs
xor
outs
test
inc
inc
cmps
retf
mov
aam
jne
cmp
dec
pop
retf
cmps
aam
push
out
mov
push
in
ficomp
push
add
pop
js
and
out
pop
arpl
sub
arpl
idiv
stos
sub
dec
mov
mov
and
push
and
pop
cmps
mov
push
mov
bnd
test
shr
pop
inc
inc
lahf
jmp
xor
pop
xchg
fnstenv
pop
mov
pop
enter
push
addr16
loop
mov
imul
imul
into
call
jecxz
xor
retf
in
daa
fcomip
and
adc
sbb
fs
jp
adc
retf
or
pop
adc
cmp
mov
retf
out
add
fbld
xchg
mov
sbb
push
sbb
xchg
xchg
push
mov
call
push
or
inc
fistp
jmp
cmp
fisubr
jbe
cmp
push
jmp
fild
and
call
jle
xor
inc
jmp
cdq
mov
int3
dec
sbb
ds
push
push
sub
or
ins
lods
outs
inc
bound
mov
ins
cmp
xor
mov
leave
movs
sar
xchg
cmp
jae
das
xchg
jmp
imul
int
add
test
mov
hlt
jmp
cld
xchg
xor
adc
push
loope
pop
jns
ss
or
imul
jno
xor
pop
pop
lods
data16
inc
daa
mov
in
sbb
pop
dec
jb
imul
out
xchg
in
das
xchg
xchg
add
add
pop
ret
adc
sahf
fucom
gs
jae
lods
out
(bad)
xor
(bad)
int
hlt
shl
adc
shl
dec
aam
pop
xor
test
(bad)
cmp
sar
adc
push
xchg
ins
fiadd
int3
popa
out
cmp
in
bnd
cmp
mov
sbb
mov
xchg
(bad)
fidivr
xchg
repnz
popa
xor
popa
aam
xor
ds
cmp
fdiv
into
pushf
out
adc
imul
cmp
lods
pusha
push
stc
push
leave
stos
inc
and
lods
dec
ins
and
ja
jae
cwde
dec
or
sahf
ucomiss
pop
lds
inc
or
jnp
sbb
jl
jecxz
add
push
pop
sub
ror
or
mov
xor
fld
arpl
mov
pop
ret
xchg
fsubr
jae
or
(bad)
imul
dec
or
push
lea
int
inc
stc
sub
jns
mov
sar
dec
or
pop
pop
pop
or
push
lods
cmps
adc
fwait
cmp
lods
jle
rcl
dec
sub
movs
cdq
jno
cs
cmps
out
push
cmp
outs
out
jg
dec
shr
(bad)
stos
pop
sub
mov
sbb
dec
dec
(bad)
cmp
cmp
mov
ror
jp
sti
push
shr
je
xchg
mov
jg
mov
jl
inc
adc
inc
pop
jnp
sbb
push
enter
xchg
pop
pop
xchg
pop
push
in
and
push
jbe
jae
int3
push
(bad)
push
(bad)
cmps
cmc
in
movs
ja
inc
xchg
mov
sbb
fld1
ret
jmp
pop
fincstp
das
pushf
ins
lahf
xchg
mov
bound
std
data16
pop
pop
xchg
adc
dec
push
xchg
(bad)
dec
add
or
(bad)
push
sbb
mov
ret
mov
xor
fwait
movs
pop
pop
mov
(bad)
lea
fsub
push
dec
test
ins
out
movs
push
add
fdivp
pop
enter
icebp
add
loopne
aam
retf
inc
icebp
lock
mov
dec
adc
ins
sbb
mov
cli
inc
movd
add
pop
test
add
dec
hlt
lods
mov
les
das
ret
stos
adc
push
shl
fiadd
lods
sbb
xor
aaa
fdiv
jmp
fidiv
dec
loop
sub
push
pusha
bound
(bad)
std
push
mov
vcvtpd2dq
sbb
imul
xor
mov
xchg
idiv
xchg
cmp
cmp
cld
outs
mov
cwde
sub
out
xchg
sub
in
test
add
enter
pop
jle
pop
cmps
stc
push
fst
jp
out
jo
cld
repnz
popf
push
xor
pop
movs
out
fst
lock
sub
jae
loop
jl
xchg
cs
ret
test
mov
inc
mov
sbb
sbb
inc
xchg
inc
dec
sbb
inc
test
arpl
mov
gs
js
rol
pop
sbb
xchg
adc
out
push
cwde
pusha
in
pop
jl
(bad)
fdiv
pop
shl
fiadd
xchg
pop
sbb
push
jmp
std
stos
mov
cmp
es
or
aaa
xor
ja
mov
pop
stos
icebp
dec
test
test
push
adc
push
neg
sub
outs
sub
loope
and
mov
pop
xlat
dec
fisttp
and
rcl
push
jmp
xor
pop
scas
sbb
xor
leave
cmp
js
fs
das
jns
popa
rcr
je
adc
daa
in
outs
sbb
mov
ror
add
mov
sub
push
je
pop
push
push
scas
mov
cmp
lahf
movs
add
inc
adc
test
(bad)
(bad)
fsub
inc
les
jae
jae
mov
ins
jl
out
outs
ret
dec
nop
test
push
mul
ret
dec
mov
(bad)
ror
pop
mov
dec
sbb
xor
sub
add
out
fisttp
rol
sbb
cmp
fcmove
pop
jl
icebp
rcl
retf
pop
loope
adc
sbb
xchg
dec
mul
mov
icebp
(bad)
push
scas
adc
mov
fwait
push
pop
jae
mov
ret
call
cmp
push
push
pop
scas
or
repz
lock
fs
inc
lahf
ror
sub
jns
push
stc
xor
(bad)
hlt
push
retf
iret
jbe
aam
push
mov
pop
pushf
cmc
enter
dec
sbb
cmps
loope
imul
fcmovne
pop
ja
dec
push
mov
stos
push
xor
mov
jbe
mov
lods
pop
mov
(bad)
and
fsub
push
shr
dec
jmp
adc
cmp
adc
mov
outs
jecxz
pop
sub
leave
in
dec
aas
add
jne
push
dec
adc
push
(bad)
fs
push
loop
pop
jne
add
bound
sti
mov
adc
mov
(bad)
cs
sti
xchg
adc
stc
int
and
repz
sbb
xchg
cmp
pop
mov
fwait
ins
aas
repz
arpl
fiadd
cli
pop
and
add
xlat
xor
shr
out
ret
fucomi
ja
cdq
aaa
loop
ja
xchg
popa
movs
rol
(bad)
cwde
fsub
jle
pop
mov
out
lock
mov
cmp
retf
cmps
pop
or
cli
inc
sub
aad
mov
data16
into
clc
lea
mov
pop
leave
or
or
xor
xor
cwde
mov
frstor
fiadd
mov
xor
daa
push
lods
aas
stos
adc
adc
xchg
leave
dec
test
test
loop
ss
sub
jle
fist
and
adc
mov
cdq
xchg
lea
leave
out
adc
test
movnti
cwde
dec
into
mov
ins
add
mov
adc
pop
sub
adc
pop
jbe
es
xor
fabs
std
scas
rcr
mov
(bad)
inc
add
xor
inc
add
cmp
into
stc
js
xchg
mov
sbb
std
bound
xor
les
mov
mov
test
xchg
xchg
pop
adc
(bad)
popf
call
std
int3
mov
fs
sub
xlat
inc
cmp
fiadd
movs
inc
mov
loopne
cmp
pushf
clc
cwde
fadd
or
push
pop
pop
jge
add
ins
mov
pop
adc
dec
or
movs
mov
xor
sub
mov
dec
loopne
adc
mov
mov
adc
rcr
or
sbb
jl
jb
lea
lods
stc
mov
dec
fwait
leave
dec
xor
mov
out
adc
repz
adc
sbb
mov
adc
mov
popf
xor
stc
je
xor
pop
in
(bad)
xchg
xchg
inc
dec
ret
mov
icebp
xchg
fstp
jne
dec
xor
loopne
lods
xchg
jo
ins
hlt
mov
sbb
jmp
adc
mov
js
cmp
mov
adc
mov
inc
test
dec
test
cmp
call
call
out
inc
(bad)
out
in
popf
(bad)
(bad)
sub
dec
jbe
sub
jb
in
ret
and
loop
out
mov
mov
xor
jns
push
mov
test
sub
mov
lods
pusha
lds
xchg
inc
sbb
add
xlat
mov
fdiv
inc
fdivr
cmp
mov
shl
ret
pop
pop
(bad)
fistp
mov
pop
push
repnz
cmp
dec
cmps
inc
iret
icebp
sbb
dec
std
sbb
outs
adc
mov
ror
hlt
sub
jmp
clc
adc
retf
and
mov
call
mov
pusha
lea
mov
add
mov
sbb
lahf
mov
les
lds
dec
retf
call
cmps
xor
mov
into
xor
mov
jg
dec
mov
mov
imul
frstor
ss
dec
lods
fld
cmp
es
jbe
test
cmps
test
(bad)
in
cs
mov
sti
shl
popf
add
xchg
repz
outs
push
ds
popa
inc
enter
jno
scas
or
or
repz
mov
and
sbb
or
sbb
fwait
outs
mov
jle
fdiv
xor
sti
cmp
cdq
xchg
mov
stc
pusha
sbb
pushf
cdq
mov
pop
test
mov
pop
inc
imul
enter
add
lock
nop
push
adc
mov
dec
inc
push
adc
iret
mov
or
inc
std
fs
push
xchg
add
pop
push
mov
fist
icebp
add
mov
and
lds
pop
leave
aam
inc
and
dec
jl
and
inc
sub
mov
sbb
push
les
cmp
mov
adc
test
add
(bad)
in
xchg
lahf
mov
mov
loope
out
ins
add
mov
pop
es
cmp
out
add
mov
sub
icebp
and
dec
cmp
push
or
jne
add
gs
mov
aas
sbb
test
dec
sbb
in
adc
out
mov
(bad)
push
inc
cld
inc
pop
movs
jmp
mov
dec
push
rol
cmovbe
dec
jne
pop
sub
jb
test
and
xchg
dec
mov
xor
ins
or
add
cmp
pop
test
lods
mov
leave
jo
ficomp
xlat
pop
loop
retf
je
imul
ret
jmp
clc
rcr
xor
jl
icebp
stos
adc
mov
rcr
fisubr
sahf
mov
push
xor
push
mov
ficomp
sbb
iret
mov
xor
call
test
jg
sub
ds
inc
test
ins
(bad)
in
push
pushf
mov
cmp
push
or
gs
inc
sbb
mov
jecxz
or
in
cld
adc
add
push
sub
pushf
(bad)
and
aad
adc
or
lods
push
fs
sti
dec
xchg
fcmovnbe
or
pop
dec
or
in
jb
and
inc
sbb
xchg
in
push
movs
retf
repz
loop
mov
pop
inc
mov
(bad)
jno
ins
and
inc
sbb
xchg
aas
ficom
inc
mov
retf
jmp
shl
mov
sahf
dec
fwait
and
ret
mov
addr16
scas
stos
jge
dec
xor
aad
xchg
cmps
out
mov
or
fdivr
stc
push
fwait
(bad)
sub
aam
inc
sub
fld
cmc
ja
cmp
inc
mov
(bad)
push
jns
imul
sbb
int
out
pop
pop
sets
popf
mov
push
cmp
aaa
sahf
xor
cs
repnz
cmp
aaa
push
jle
dec
cmp
cmc
int
clc
mov
adc
jmp
adc
bound
pusha
sbb
cmp
pop
gs
aad
sar
xor
or
push
or
dec
ret
xor
shr
dec
jbe
in
shl
xchg
sbb
sbb
retf
or
cwde
inc
aas
jmp
inc
mov
xchg
push
(bad)
ins
sub
mov
test
dec
(bad)
xor
mov
add
sub
dec
mov
fadd
mov
bound
push
sbb
adc
repz
cmp
aas
stos
sbb
pop
sbb
ss
or
int
aam
std
inc
and
inc
dec
xchg
jecxz
pop
push
movs
ror
mov
and
or
pop
push
fistp
push
dec
xchg
(bad)
mov
ret
js
add
arpl
repnz
test
mov
cmc
jo
test
and
in
fwait
in
jmp
repz
pop
aam
or
inc
jmp
scas
push
out
scas
inc
ins
call
mov
retf
adc
stc
pop
call
add
cwde
mov
dec
mov
adc
addr16
(bad)
mov
stc
dec
fdivr
sub
xor
push
inc
jmp
jmp
sub
lahf
cmp
jne
push
lahf
in
cmp
or
jbe
xchg
jae
leave
push
loop
cmp
(bad)
cmp
pop
adc
jno
leave
retf
adc
xchg
xchg
adc
and
jg
mov
lock
mov
sahf
stos
sahf
xchg
jbe
push
dec
mov
outs
or
cmp
xchg
aaa
fs
jne
in
mov
imul
lea
outs
jno
dec
jmp
(bad)
data16
icebp
ins
and
loop
mov
pop
pop
(bad)
mov
mov
cmp
inc
fucomi
aam
and
mov
(bad)
jg
mov
jl
push
pop
sub
enter
rol
cmp
pushf
pop
mov
adc
pop
dec
test
inc
hlt
lods
addr16
inc
addr16
adc
jg
add
jmp
cmps
pop
repnz
fisttp
retf
mov
out
adc
out
aam
inc
and
inc
into
scas
jns
pop
pop
xchg
retf
fld
xchg
push
jge
cmp
in
inc
add
dec
inc
mov
lods
daa
sbb
cmp
sub
cmp
jnp
jns
dec
xchg
test
pop
cmp
dec
jl
jmp
jne
outs
les
bound
pop
test
pop
cmp
mov
in
xor
rcl
mov
dec
cwde
fisttp
sub
mov
push
lea
scas
adc
cmps
xor
imul
das
inc
push
cmc
push
in
jmp
add
mov
stos
fimul
sbb
pop
jo
xor
or
xchg
jl
ror
mov
cdq
xchg
xor
or
xlat
dec
(bad)
mov
dec
mov
(bad)
jns
pop
xor
loopne
(bad)
xchg
icebp
jp
or
add
iret
test
neg
out
mov
in
mov
rol
mov
cmp
stos
int3
sbb
lahf
mov
and
test
jo
xor
sub
out
push
aad
rep
rcl
xchg
xor
mov
jp
cli
xor
std
pop
iret
std
cmp
pop
int3
mov
dec
pop
cld
bound
cmp
jge
jge
jecxz
pop
add
sbb
stos
cli
imul
clc
mov
stos
jle
pop
pop
lods
shl
mov
mov
xor
lods
test
cmp
retf
loope
sub
pop
cmp
add
loope
dec
cs
lods
jmp
jbe
inc
fld
dec
(bad)
add
dec
or
out
mov
push
xor
not
pop
push
gs
sti
xor
push
(bad)
retf
sbb
sbb
push
mov
imul
pop
data16
cmps
cmps
dec
inc
push
(bad)
in
mov
pop
xor
pop
cmp
sahf
push
xor
cmp
sub
mov
call
cld
cwde
popa
gs
add
push
jecxz
mov
mov
xchg
pop
pop
pop
adc
inc
adc
call
push
and
ret
jo
pop
aas
jae
and
shr
mov
mov
cmps
add
inc
inc
ins
dec
repz
ins
je
adc
or
mov
int3
dec
jp
int
cmp
xor
mov
int
mov
and
sub
xchg
or
lds
add
iret
out
lea
outs
loope
add
cmp
sbb
in
mov
test
cli
xchg
dec
sbb
call
aas
xor
lods
dec
loopne
mov
loop
ins
mov
dec
mov
retf
jp
jp
push
adc
and
push
xor
scas
das
and
pop
adc
in
jmp
dec
dec
jmp
int3
fwait
pop
sti
sub
outs
xor
retf
mov
push
std
mov
xchg
fs
(bad)
jecxz
adc
int
aaa
push
cdq
iret
into
outs
arpl
popa
xor
or
shl
cmc
sub
cmp
adc
bnd
std
ss
inc
in
mov
push
pusha
mov
fxch
jnp
mov
div
pop
cs
call
lods
and
shl
aad
or
dec
push
push
xchg
mov
dec
ins
(bad)
jae
shr
push
je
ret
pushf
scas
dec
add
and
and
mov
out
ins
jle
cmovnp
add
dec
loope
xchg
enter
xchg
sub
inc
pop
ins
jp
mov
push
pop
dec
cmps
mov
or
fdivr
(bad)
aad
xchg
loop
int
stc
jnp
iret
and
push
(bad)
dec
sti
mov
mov
mov
jns
ins
aad
mov
cmp
fmul
call
sti
jecxz
mul
inc
mov
adc
test
dec
test
xchg
loope
jmp
icebp
xchg
push
pop
mov
dec
xchg
xchg
and
cmp
mov
mov
pop
mov
push
cmp
mov
push
in
mov
iret
xchg
jne
dec
xchg
mov
cld
dec
pop
cmp
add
sub
gs
xchg
jle
ficomp
inc
or
add
aaa
xor
jmp
pop
dec
mov
sbb
fldcw
and
stc
inc
jmp
sbb
fxch
call
loopne
les
in
xchg
mov
push
xchg
inc
mov
dec
xchg
retf
sbb
cs
aaa
mov
sbb
inc
cmps
xchg
lock
mov
pusha
cdq
pop
xchg
repnz
sub
push
sar
adc
jnp
popa
adc
fwait
sub
loop
sub
ret
ret
pop
enter
cmp
jp
cmps
mov
lea
mov
xor
xor
jge
sub
stc
jns
enter
js
fcomp
mov
stos
inc
mov
js
hlt
or
sar
pop
add
xor
cmp
lahf
pop
stc
lds
sub
fisttp
in
cwde
jb
rcr
mov
(bad)
fcmovu
inc
inc
test
add
inc
pop
adc
or
mov
or
adc
call
adc
rcl
mov
sub
pop
arpl
cld
repz
sbb
movs
cmps
fst
retf
lods
xchg
inc
inc
fcom
je
dec
add
(bad)
movs
scas
mov
and
test
xchg
push
xchg
jnp
adc
and
sub
iret
jnp
ins
dec
pop
ds
retf
into
xor
outs
jno
jne
mov
std
xchg
sbb
and
mov
xchg
in
popa
jo
jg
rol
adc
test
data16
daa
mov
adc
out
fwait
js
mov
shr
hlt
pop
push
adc
or
jecxz
dec
pop
cmp
push
push
fiadd
sbb
inc
pushf
and
(bad)
(bad)
jp
adc
jns
or
add
clc
jge
or
in
pusha
test
pop
outs
out
shl
fldenv
in
enter
adc
mov
pop
outs
stos
jg
push
sar
inc
mov
cmps
mov
push
(bad)
in
xchg
mov
jle
and
(bad)
fwait
mov
inc
pop
aas
or
or
jnp
test
push
cmp
retf
cmp
iret
or
sbb
inc
movs
jns
out
jmp
rcr
mov
sub
rcr
mov
cmp
push
fs
dec
imul
adc
cli
dec
sub
sbb
mov
xchg
mov
mov
dec
call
fs
sub
les
stc
(bad)
pop
sahf
mov
scas
add
mov
test
cs
fcmovb
jo
nop
cmps
int3
pop
bswap
int3
jg
pushf
retf
js
bound
jno
and
pop
shl
push
addr16
repz
add
xor
mov
out
pop
push
test
inc
movs
lahf
into
sub
rcr
out
mov
sbb
lods
cld
sbb
lds
ror
sbb
inc
push
or
lahf
aam
dec
das
xor
ret
jb
jnp
jmp
aas
pop
inc
push
pop
and
add
cmps
cmp
mov
jne
js
xor
push
bound
adc
and
mov
ins
push
call
repz
neg
sbb
aaa
(bad)
call
add
mov
mov
cwde
jo
lea
sub
mov
std
push
mov
inc
pop
dec
sub
(bad)
mov
loopne
mov
cmp
mov
dec
das
jno
js
jge
adc
(bad)
dec
repnz
pushf
push
dec
sbb
mov
in
cli
repz
mov
fld
lea
jmp
dec
xor
sub
cmp
mov
clc
pop
mov
imul
push
or
lds
sub
and
dec
inc
adc
push
je
pop
mov
inc
cmp
and
stos
or
push
(bad)
lods
lods
cmp
mov
icebp
pop
xor
mov
and
das
in
xchg
fld
inc
in
jle
cmps
xchg
lea
dec
push
cmp
mov
stc
mov
mov
nop
sbb
js
pop
inc
add
mov
sub
out
pop
and
addr16
iret
sbb
pop
and
mov
xor
jmp
adc
add
gs
jmp
adc
cld
sub
or
inc
push
nop
push
xor
push
test
mov
jmp
xor
or
cwde
adc
sub
pop
cmps
jbe
ja
mov
cmps
ins
aad
pop
sub
xor
les
outs
push
sub
loop
pop
fs
pop
out
rol
stc
xor
jnp
out
mov
jp
call
push
cs
dec
pushf
xchg
sub
push
cmp
or
sbb
cmp
jns
sub
rcr
(bad)
sbb
(bad)
push
jge
pop
aaa
in
push
(bad)
cmc
frstor
jmp
mov
inc
pop
jge
mov
mov
mov
or
xchg
jae
out
(bad)
out
outs
outs
xor
push
fld
out
push
std
add
lahf
ss
repnz
sbb
(bad)
sub
sub
pushf
push
jmp
cdq
popa
xchg
inc
jg
fs
inc
xor
sub
or
lahf
or
ins
xchg
cmp
lahf
push
loope
mov
or
(bad)
or
and
or
cmp
aaa
mov
xchg
cmp
mov
mov
mov
cmps
pushf
and
inc
cmc
mov
pop
scas
xor
cmps
and
ret
(bad)
or
popa
repnz
adc
popf
sbb
(bad)
fild
mov
jmp
popf
ja
mov
(bad)
fld
fs
adc
in
mov
loopne
(bad)
shl
xchg
cwde
lahf
push
mov
mov
scas
mov
int3
push
sbb
icebp
xor
and
inc
push
sbb
movs
test
inc
push
sub
ins
jmp
push
movs
rcl
(bad)
out
sub
add
sbb
push
cdq
jecxz
gs
push
sbb
and
std
jns
jns
stos
inc
push
xor
mov
sbb
repz
or
dec
cdq
mov
(bad)
into
mov
fsubr
shl
add
dec
sub
fild
je
(bad)
into
retf
jmp
inc
div
int
jl
xchg
sub
aas
push
sbb
add
mul
xor
sub
or
cmp
outs
push
cld
xor
arpl
jl
in
push
jb
(bad)
(bad)
std
repz
mov
es
add
add
or
xlat
sbb
fs
jmp
cld
xlat
pop
(bad)
mov
jne
ror
mov
push
mov
lods
lea
xor
retf
jae
das
pop
sbb
sbb
jb
in
jl
cmp
into
push
add
mov
lock
mov
or
and
test
popa
mov
call
pop
rcr
jle
push
cmp
fcomp
fisubr
cmps
cld
jne
inc
leave
mov
inc
mov
bound
cmp
lea
daa
and
pop
std
push
movs
cwde
sbb
cwde
cmp
outs
jb
mov
pop
push
push
jge
pop
fisttp
lods
lods
add
les
cmp
mov
or
(bad)
(bad)
mov
hlt
ret
jo
sub
inc
and
xor
sahf
cdq
jnp
mov
dec
add
(bad)
xor
inc
or
ret
pop
and
icebp
mov
sti
in
(bad)
sbb
sub
mov
inc
sub
push
or
xchg
(bad)
and
xchg
pop
mov
sti
std
outs
ja
ds
out
les
out
fsub
jns
mov
ret
psubusb
test
xor
imul
(bad)
mov
imul
mov
dec
mov
sub
call
or
sub
mov
sbb
popf
in
retf
jle
movs
xor
cmp
scas
cmps
ror
stos
movs
mov
push
ja
in
bound
stos
je
mov
adc
dec
stc
ror
(bad)
mov
xor
dec
mov
cmp
test
xchg
lods
jb
bound
sub
pop
xor
inc
jns
sqrtps
jecxz
mov
nop
mov
add
push
dec
pop
inc
fild
clc
bound
shl
mov
push
cld
jno
retf
les
mov
inc
mov
jle
test
loope
retf
add
xor
pop
inc
jae
jle
inc
mov
push
or
das
call
dec
fldenv
adc
fadd
mov
fist
dec
cmp
call
pop
ret
adc
xor
xchg
ja
rol
sub
xchg
imul
retf
sbb
gs
push
inc
ret
cmp
mov
test
xor
xor
cmp
jge
test
stc
das
int3
jbe
dec
fnstsw
mov
xor
out
mov
inc
xor
mov
jns
add
push
sub
(bad)
arpl
fmul
arpl
cmp
adc
jnp
stos
int
xor
cs
mov
or
adc
push
aam
pop
mov
xor
lods
jp
imul
shl
push
fwait
push
xchg
mov
es
lock
mov
les
mov
mov
push
into
jmp
adc
cmp
mov
jp
test
adc
popf
jo
cs
dec
cmp
add
dec
popa
adc
or
and
pop
stos
pop
jns
dec
add
dec
dec
ins
in
adc
mov
cmp
mov
inc
clc
fsubr
movs
add
inc
in
xchg
scas
dec
xlat
fdiv
sub
push
leave
test
xor
add
cmp
xchg
push
es
xchg
pop
ins
push
xchg
idiv
scas
fnstcw
jb
inc
popa
push
pop
mov
aam
mov
inc
outs
dec
cmp
sbb
lock
out
mov
out
cmps
clc
das
neg
or
outs
pop
mov
arpl
in
xchg
inc
xlat
cmc
sbb
call
je
ds
mov
or
xor
add
int3
sbb
xor
iret
addr16
test
sub
xchg
push
mov
jae
inc
loopne
push
in
mov
pop
(bad)
mov
pop
sub
test
inc
pop
and
mov
pop
inc
push
add
add
inc
imul
pmaxub
push
scas
iret
in
xchg
mov
clc
jnp
and
add
xor
dec
movs
add
test
xor
vpsrad
adc
push
mov
into
mov
xchg
cmp
push
xor
inc
test
ds
loope
jmp
lods
mov
xchg
(bad)
mov
mov
in
mov
rol
sti
xor
mov
test
xchg
mov
cmp
test
addr16
sbb
push
dec
popa
fild
mov
pop
sti
loopne
rol
loopne
addr16
je
or
cld
inc
jno
into
(bad)
inc
pop
sub
cdq
daa
shl
push
adc
add
outs
fldpi
dec
sti
enter
add
call
mov
inc
out
pop
hlt
ret
sbb
mov
push
add
adc
ins
sti
mov
mov
inc
mov
iret
rol
ins
leave
mov
cli
jnp
sti
cmp
jne
sbb
popa
push
adc
fmul
jmp
mov
pop
fisub
mov
mov
aad
add
mov
pop
lds
pop
xchg
jecxz
or
sub
add
pusha
sbb
add
jae
fisttp
fistp
mov
mov
jge
sub
rol
sahf
not
xor
push
and
sbb
mov
mov
push
into
mov
jo
repnz
icebp
add
fmul
fst
inc
nop
sti
xor
jp
inc
imul
jp
(bad)
fistp
hlt
sub
mov
jmp
inc
pop
lock
mov
pop
jmp
or
test
sub
mov
mov
(bad)
sahf
push
fs
ret
mov
in
dec
scas
push
dec
mov
out
scas
loop
mov
loope
fadd
test
cmp
ret
lahf
xchg
movs
dec
call
lds
sar
or
movs
inc
cmp
jp
adc
test
ins
or
xor
xchg
cmp
enter
inc
or
clc
and
popf
pop
mov
lea
jp
cmc
dec
xchg
fs
push
ja
rcl
jg
stc
cdq
pop
enter
push
mov
and
pop
pop
popa
push
aam
icebp
call
shl
call
repz
aaa
ins
add
je
rcl
dec
les
loop
sbb
loopne
paddw
inc
movs
lods
fwait
call
mov
push
in
je
test
xor
ins
jmp
lods
mov
pop
shr
dec
mov
dec
cmp
xlat
jb
in
pusha
sbb
adc
(bad)
mov
out
pop
add
mov
jbe
push
mov
mov
es
inc
adc
or
popa
adc
adc
sub
mov
adc
cld
lds
mul
retf
inc
fstp
mov
cld
in
gs
in
or
pavgw
shl
pop
daa
lahf
fdivr
inc
gs
shl
xchg
cmp
shr
mov
add
fcmovbe
xchg
and
ins
push
push
cmp
jl
fucom
sbb
or
ja
pop
or
scas
mov
jp
pop
arpl
pop
xor
mov
inc
pop
clc
movs
enter
ret
adc
pop
xlat
sti
xlat
scas
into
cmp
ins
mov
or
repnz
push
mov
test
outs
push
add
push
cmps
xor
jae
fdiv
jmp
fcomp
cdq
mov
xchg
ret
cwde
jbe
stc
movs
xchg
pusha
push
push
sbb
xchg
pop
jl
outs
inc
sbb
inc
sub
lods
push
mov
js
rcr
and
bound
jbe
xchg
inc
pop
inc
(bad)
lock
mov
retf
popa
mov
es
in
gs
inc
retf
sti
push
dec
or
jecxz
cmps
sahf
das
dec
sub
scas
into
xchg
and
dec
mov
add
cmp
jno
adc
jle
ret
movs
int3
xchg
jg
stos
push
xor
scas
out
fistp
lods
(bad)
fcomp
xchg
pop
dec
inc
pop
inc
aaa
pop
test
mov
push
mov
or
cmp
inc
push
add
lds
(bad)
sbb
pop
idiv
add
push
nop
lods
push
mov
adc
fist
push
cli
fdivr
in
leave
cmp
fwait
mov
mov
sbb
adc
stos
sti
xchg
pop
lods
leave
add
ja
push
sbb
jmp
js
int
adc
sub
sub
mov
mov
dec
pop
jae
fistp
aas
enter
and
jle
das
jecxz
(bad)
mov
xchg
cld
pop
sub
cmps
ror
cmp
sbb
and
or
or
add
in
mov
mov
retf
and
js
adc
sub
adc
push
sbb
call
les
mov
pop
cmps
imul
inc
imul
cmp
adc
cmp
shl
xor
jmp
push
int
stos
ficomp
jb
xchg
jg
fsubr
lea
pusha
dec
loopne
js
pop
mov
mov
dec
and
loop
sbb
jo
je
fidivr
mov
inc
shl
xlat
stc
lds
dec
mov
arpl
cld
inc
mov
shl
pop
cmp
or
inc
push
mov
pop
mov
push
ror
scas
sbb
and
rol
movs
and
mov
js
(bad)
lahf
stc
push
add
in
pop
cmp
fidivr
mov
sub
scas
and
adc
xchg
push
add
xor
(bad)
iret
test
jecxz
jle
das
sbb
lods
jp
rcl
imul
or
mov
adc
pop
and
jmp
dec
mov
cli
ret
and
xchg
add
mov
cmp
add
jnp
and
jmp
mov
in
adc
jo
shl
sbb
out
pop
call
addr16
cmps
mov
lea
rcl
mov
pushf
loope
(bad)
adc
sti
xor
test
in
inc
std
sahf
ss
sbb
iret
sbb
aam
aad
mov
ret
lds
inc
icebp
xlat
clc
fwait
out
xor
cmp
in
add
push
sbb
xlat
retf
jl
jnp
mov
xlat
inc
xchg
jmp
push
sbb
cmp
mov
adc
adc
in
xor
(bad)
popa
xor
cs
jmp
sub
pop
mov
ret
add
add
(bad)
mov
dec
pop
outs
jle
das
cmps
inc
imul
enter
and
lahf
adc
mov
je
inc
push
add
cmp
mov
and
imul
in
mov
shr
xchg
jg
add
je
mov
pop
mov
push
(bad)
call
pop
mov
or
jae
push
inc
fwait
or
popa
mov
clc
(bad)
mov
outs
das
pusha
xor
jbe
ret
sbb
mov
and
mov
adc
es
mov
jmp
fptan
xor
ffree
leave
call
jge
mov
sbb
push
or
shl
mov
clc
shl
inc
push
dec
and
std
xchg
lahf
and
nop
push
les
rcr
cmp
push
fcmovnbe
into
inc
inc
(bad)
sbb
ret
and
adc
jmp
cs
xchg
pusha
pop
test
or
jl
pop
adc
mov
pop
ja
fsub
mov
retf
leave
stos
cdq
add
mov
arpl
jae
shr
jbe
and
lds
xor
aas
adc
jge
iret
xchg
sar
cmp
fld
call
add
bound
jmp
adc
(bad)
cld
and
xor
loope
cdq
sbb
or
sub
outs
sub
push
ins
repz
push
sub
pop
daa
sub
pushf
das
xor
cmp
cmc
ja
(bad)
and
mov
pushf
xor
jb
loop
jbe
add
jae
and
fdiv
mov
inc
movs
push
hlt
mov
popa
mov
sub
lds
dec
jl
mov
das
or
stc
pop
fwait
pop
mov
enter
mov
js
add
or
or
nop
pop
clc
lahf
sub
bound
mov
stos
leave
dec
cmp
ins
(bad)
nop
push
mov
cli
jmp
jnp
xor
or
jb
jae
daa
mov
xor
inc
fnsave
bound
xchg
jae
and
xchg
or
or
mov
mov
pop
pop
xor
mov
mov
es
push
xor
mov
jo
pop
cmp
fcom
in
inc
inc
clc
ss
sar
xor
dec
xlat
enter
loop
mov
rol
inc
sbb
xchg
xchg
aaa
push
push
icebp
lahf
ins
pop
retf
loope
cmp
jge
outs
outs
jbe
and
and
pop
in
cli
inc
or
jmp
cmp
inc
ret
and
aad
call
lds
push
cmp
xor
imul
pop
lock
retf
mov
pop
mov
xchg
add
fnstcw
popf
test
scas
and
xor
cmp
ins
and
in
leave
cs
xor
mov
pop
jl
inc
adc
mov
int3
cwde
int3
mov
in
cmp
fmul
mov
outs
scas
fisub
loopne
pop
push
inc
mov
lods
js
leave
loopne
out
cdq
dec
sar
les
dec
scas
scas
add
hlt
lods
mov
jl
or
jnp
nop
in
push
adc
(bad)
or
and
xor
mov
iret
inc
xchg
adc
aad
lahf
pop
xchg
dec
adc
es
mov
sub
out
pop
cwde
sbb
shr
int
mov
or
or
test
jle
xchg
js
nop
fstp
sub
out
mov
pop
cmp
jmp
call
scas
and
and
push
test
sub
pop
push
sti
and
int
cli
js
aam
pop
sbb
fild
mov
pop
push
sub
add
pop
jns
int3
cmps
pop
scas
push
xchg
in
dec
inc
sbb
lods
ret
sbb
mov
or
mov
loopne
adc
nop
jo
add
adc
aad
cmp
mov
mov
xchg
mov
ins
add
push
imul
push
mov
pop
test
and
xchg
cld
retf
movs
scas
mov
call
inc
int3
inc
outs
sub
pop
adc
arpl
(bad)
push
pop
xor
ja
out
(bad)
gs
mov
loope
(bad)
sbb
scas
(bad)
paddq
jnp
add
ins
dec
push
fstp
xlat
add
(bad)
pop
and
leave
shr
mov
inc
fistp
mov
cmc
jl
daa
adc
hlt
jl
in
jb
push
clc
add
push
movq
aad
xor
mov
xor
stos
lahf
repz
mov
outs
pop
fisubr
xchg
cmps
sar
pop
pop
pop
pushf
inc
jecxz
xor
outs
pop
pushf
aad
inc
cwde
fld
in
mov
ins
sahf
stc
jmp
dec
cmps
test
xor
aas
add
(bad)
xor
mov
test
xlat
dec
ja
idiv
and
daa
xchg
js
sub
mov
cmps
outs
pop
inc
cmp
mov
sub
aaa
out
add
cmp
cmp
cmps
repz
fldcw
sub
(bad)
mov
inc
mov
mov
xchg
jb
icebp
xchg
jno
div
gs
add
jb
ja
test
inc
mov
xor
jmp
sti
xchg
test
in
pop
mov
(bad)
gs
cli
call
mov
cmps
call
test
jno
sti
jecxz
push
bound
dec
mov
in
imul
fidivr
pushf
dec
mov
pop
xchg
dec
js
and
pop
je
cmc
pushf
in
pop
add
xchg
leave
leave
pop
aam
loop
jns
sbb
lea
mov
jg
aad
xor
out
jmp
cmp
stos
cvtps2pi
data16
pop
pop
retf
jmp
adc
push
out
xchg
(bad)
mov
popa
cmp
xor
or
and
inc
out
dec
pop
sub
pop
scas
sbb
mov
iret
push
test
in
(bad)
adc
test
xchg
pop
(bad)
retf
sti
pop
xor
and
dec
xlat
adc
dec
into
lahf
mov
jae
dec
adc
pop
add
fucom
call
add
xchg
or
cmps
sub
and
fdivr
push
xchg
test
xor
push
pop
push
or
mov
push
cmp
adc
movs
push
movs
pop
xchg
inc
aaa
jecxz
lods
sbb
or
in
outs
adc
(bad)
and
xlat
test
xchg
inc
lods
retf
aas
cmp
mov
sub
add
fs
and
mov
int3
xchg
rol
xor
fcmovne
xchg
or
add
repz
and
inc
xchg
ret
xchg
adc
out
xchg
dec
lea
(bad)
mov
xor
dec
and
pop
cmps
mov
mov
dec
outs
test
fidiv
pusha
and
sbb
adc
mov
sub
stc
push
push
aad
aam
and
aad
out
jge
dec
push
dec
retf
aad
les
gs
adc
fdiv
sub
ja
adc
push
rcr
popa
xor
int
inc
fld
xchg
xchg
pusha
add
and
inc
mov
in
fiadd
pop
imul
popf
ficom
ins
add
fldenv
jb
dec
cs
(bad)
std
xchg
int
aad
pop
aam
jns
ss
arpl
pop
cmp
mov
jp
pop
or
arpl
xchg
jmp
mov
cmp
adc
xor
ja
mov
sbb
adc
icebp
mov
movs
push
xlat
mov
mov
stos
in
imul
jmp
xchg
jp
and
xor
push
sbb
pop
xchg
int3
test
scas
dec
fwait
inc
or
(bad)
mov
mov
mov
add
cld
fistp
sbb
imul
jp
dec
pop
(bad)
mov
mov
imul
cdq
sub
adc
int3
add
xor
xchg
push
push
xchg
mov
icebp
ins
loop
daa
and
mov
ins
mov
loop
ss
ins
(bad)
inc
jo
les
mov
ds
gs
out
inc
je
inc
push
(bad)
fst
scas
das
sbb
fmul
cmc
xor
(bad)
xor
mov
pop
adc
xchg
cmp
test
cmp
dec
stc
sbb
xchg
mov
inc
rcl
xor
add
loopne
rol
out
ds
lock
mov
cmp
xchg
ins
cmps
cmp
in
sbb
adc
mov
arpl
out
and
pop
in
das
iret
add
push
jmp
cdq
pop
stc
rcr
es
jb
jl
out
leave
add
imul
push
push
cdq
sbb
xor
xchg
jo
mov
retf
pushf
pop
loopne
or
inc
(bad)
xor
push
imul
in
cmps
or
jp
pop
ret
pop
sub
jmp
lock
aad
sub
jns
jmp
mov
test
jae
cld
mov
ror
add
mov
or
mov
jne
mov
mov
jmp
mov
inc
popf
pop
jns
test
in
or
fistp
mov
and
mov
outs
mov
or
int
xor
inc
sbb
mov
mov
aad
iret
pop
cld
mov
test
cmps
test
pop
add
inc
mov
pop
adc
and
sub
mov
mov
in
inc
aad
cmp
sbb
loopne
add
rol
cmps
daa
rcr
inc
inc
mov
mov
shr
xchg
ret
lock
aam
icebp
pop
stos
cmp
lea
jae
shl
adc
sub
adc
dec
stos
lods
js
xchg
mov
loope
mov
dec
xchg
sar
adc
idiv
sub
jae
aad
adc
inc
enter
cmp
fs
inc
mov
mov
xor
sub
imul
cmp
je
cmps
mov
inc
add
out
adc
stc
pop
in
imul
rcr
ret
mov
mov
adc
jmp
mov
mov
mov
or
pop
push
mov
mov
pop
call
retf
gs
jb
sub
es
jge
mov
push
xor
imul
sub
(bad)
lods
lahf
(bad)
cmps
cli
jo
inc
cmp
mov
retf
ficomp
mov
xor
sahf
mov
and
aam
loope
or
adc
ja
dec
mov
add
sub
add
push
or
ins
hlt
fisubr
push
mov
xor
cmps
inc
paddusw
pop
sbb
call
jg
imul
xor
std
add
inc
jecxz
fwait
das
js
das
mov
jb
push
jb
jmp
test
xchg
mov
cmovg
xchg
mov
shr
sub
sbb
mov
push
xor
xor
popa
xchg
or
lock
pop
scas
into
and
dec
fdiv
mov
mov
cmp
fdiv
mov
cmp
add
adc
idiv
inc
xor
dec
sub
movs
(bad)
addr16
xor
daa
xchg
pushf
and
pushf
inc
cwde
dec
mov
ja
repz
mov
ret
mov
fidiv
pusha
push
or
clc
fbld
arpl
dec
push
int
test
pop
fimul
push
pop
push
daa
cmc
add
scas
and
inc
stos
jbe
push
shl
sahf
sub
jp
scas
add
jno
data16
sub
or
clc
jae
lock
sub
jb
add
rep
jl
gs
in
sub
clc
push
add
pusha
aas
ss
push
mov
jnp
jecxz
in
adc
cmp
sub
and
inc
ins
out
clc
cs
cwde
xor
repz
add
xor
push
xchg
pop
shr
mov
push
xchg
xlat
aam
stos
mov
dec
or
xor
pop
daa
in
stc
dec
fdivr
in
mov
and
in
cmc
and
sahf
out
jae
inc
cwde
sub
dec
inc
test
cli
and
cmc
cli
lods
push
jmp
sbb
outs
or
adc
pusha
fistp
pushf
jb
aam
and
mov
jbe
mov
xchg
jmp
push
and
pop
fistp
mov
mov
stos
sbb
pop
mov
inc
fimul
sub
or
cmps
lea
jecxz
scas
jns
cwde
xchg
adc
stos
repz
in
fild
jmp
hlt
cmp
xor
cmc
ffreep
out
rcl
ja
fldl2t
imul
push
xor
lea
dec
daa
test
frndint
mov
push
mov
push
push
xchg
scas
es
cmp
sahf
pop
push
add
pop
mov
jb
cmp
jns
or
pop
sub
es
lods
dec
fnsave
dec
repz
fdiv
mov
dec
xor
fisub
mov
jnp
bsf
loop
imul
lock
xor
jmp
les
inc
or
ja
add
dec
dec
(bad)
cwde
ja
(bad)
cmc
cmc
stos
rcr
add
loopne
mov
(bad)
fiadd
or
rdtsc
xor
dec
test
cwde
inc
rcl
jecxz
pop
pop
cmp
pop
pop
lds
outs
ror
bound
out
mov
dec
ins
arpl
or
sub
out
in
ins
sbb
adc
add
sbb
sti
lds
mov
pop
xchg
and
stos
enter
dec
inc
mov
inc
or
nop
fisttp
fadd
call
movs
push
test
inc
xchg
(bad)
int
mov
jecxz
jmp
ss
mov
sub
pop
jnp
setns
inc
push
add
rcr
clc
xchg
movs
sub
ror
aaa
aas
aaa
mov
cwde
mov
mov
mov
mov
imul
fs
lea
mov
in
pop
clc
xor
or
sbb
je
mov
xchg
jbe
add
aad
mov
push
push
mov
and
imul
mov
movs
sbb
or
pop
aam
sbb
fs
daa
mov
push
dec
movs
xor
inc
aam
pop
in
cmp
sub
retf
mov
call
test
dec
ret
push
cld
xlat
or
jecxz
mov
hlt
ja
and
xchg
arpl
cmp
fst
mov
sub
jae
cmp
test
(bad)
int3
lods
btc
mov
xor
in
mov
cmp
out
xchg
in
xor
aas
push
repz
push
mov
add
iret
inc
aad
jle
js
cli
push
xor
stc
sbb
sbb
sub
movs
jp
and
pop
mov
bound
xor
sbb
loope
adc
bnd
xchg
push
mov
sub
popa
dec
fbld
sub
xor
push
mov
fs
fwait
mov
les
das
ret
ja
mov
cmp
jmp
push
mov
pusha
sbb
lods
add
dec
ins
adc
inc
mov
cwde
mov
out
and
fadd
pushf
lock
pop
data16
shl
jnp
jne
cmp
jmp
les
pop
das
mul
and
mov
jmp
pop
jnp
mov
inc
sub
jmp
jno
sub
test
ret
imul
xchg
call
jne
and
fwait
push
dec
pop
dec
cmp
loope
not
adc
sbb
mov
cdq
shl
push
dec
mov
mov
sub
aaa
(bad)
bound
inc
or
mov
sub
pop
and
sahf
mov
lods
adc
data16
ins
xor
adc
pop
add
pop
mov
xchg
test
dec
ss
xchg
ins
jbe
jmp
sub
(bad)
icebp
scas
xchg
push
push
fsubr
cwde
xchg
sub
bound
jg
cmp
mov
mov
sub
or
test
dec
sub
loop
inc
push
outs
stc
adc
mov
pop
fldcw
inc
hlt
xor
mov
adc
jno
dec
mov
push
or
das
jb
push
fld
jo
sar
dec
ds
rol
xchg
push
test
push
add
lds
aad
pop
pusha
popa
scas
lods
xchg
jbe
outs
cmp
jmp
out
cmp
push
std
js
pop
inc
jns
test
mov
out
int
stos
in
loopne
fmul
and
arpl
and
pop
in
sbb
sbb
sub
mov
dec
jbe
shr
mov
das
mov
je
pop
or
mov
and
cdq
imul
push
and
fs
add
cmps
push
sbb
push
inc
int3
mov
sub
push
scas
jnp
push
into
out
iret
push
mov
pop
push
inc
jl
stos
fist
es
jmp
xor
jp
cmps
cmp
cld
mov
stos
pop
gs
out
xor
cmp
cmc
mov
sub
ret
mov
popf
push
xor
aad
stos
(bad)
jmp
lock
mov
(bad)
out
mov
std
into
jmp
loope
clc
add
dec
fldenv
add
adc
pop
sub
xlat
cdq
push
jbe
clc
fisttp
mov
call
out
loop
movs
inc
pop
idiv
adc
clc
mov
mov
out
mov
cmc
ins
ins
cld
outs
jae
sar
mov
mov
and
cmp
out
mov
jnp
loop
imul
or
or
cdq
mov
test
sub
adc
push
fstp
pop
gs
sbb
dec
mov
mul
mov
cmp
mov
mov
repnz
sub
test
jne
fdivr
push
cdq
sbb
push
aad
(bad)
scas
lods
cmp
jl
lods
sbb
imul
pop
movs
stos
test
repnz
mov
stos
sbb
js
sub
test
and
sbb
fistp
test
hlt
mov
das
push
mov
push
sti
int
mov
(bad)
sub
pushf
icebp
jne
lock
div
mov
push
inc
sub
adc
sub
xchg
sti
dec
test
loop
jg
dec
ret
pop
test
xchg
and
jmp
ror
cmp
in
lock
lods
sub
rcl
fcmovb
adc
loop
pop
fisubr
sub
and
xlat
sbb
lock
enter
adc
fadd
ror
sbb
fwait
stos
cld
stos
rcl
rol
mov
jmp
mov
test
and
adc
and
imul
mov
add
cmp
lock
push
sub
jmp
gs
jg
jbe
lds
sub
jge
cmc
into
enter
cdq
xor
(bad)
sbb
sbb
cmp
stc
jmp
cld
mov
gs
mov
pop
mov
xchg
lea
cld
or
stos
sub
dec
cmp
push
scas
data16
cmp
lods
push
loopne
into
loopne
popa
add
cmp
or
enter
test
aaa
test
push
out
int3
sub
int
jp
cld
xchg
or
or
retf
mov
sub
xchg
cmps
jl
pop
add
cwde
gs
pushf
sbb
bound
mov
push
adc
adc
push
addr16
inc
xchg
scas
sti
pushf
js
sahf
fadd
mov
push
or
jge
popf
push
pop
jmp
out
ds
out
outs
push
jns
out
test
(bad)
mov
add
pusha
int3
loope
inc
jmp
inc
inc
push
mov
add
mov
push
add
mov
into
pop
dec
dec
pusha
stc
ret
test
inc
fdivp
sbb
ret
xchg
loope
mov
(bad)
fldcw
(bad)
out
mov
dec
aad
dec
mov
out
pop
jb
mov
sar
xsha1
cmps
or
cld
sub
mov
movs
dec
fdiv
mov
dec
pop
pop
outs
xor
and
in
jo
inc
cmp
mov
dec
sti
out
push
xchg
sub
test
xchg
(bad)
out
pop
adc
shl
repz
or
je
dec
jae
stos
pop
cmps
loope
mov
xlat
data16
sar
push
mov
pop
mov
ds
sbb
cli
cli
and
sub
fwait
cwde
mov
jb
and
jbe
pop
std
lock
dec
sbb
sub
aaa
out
dec
sbb
lods
pop
add
js
mov
mov
lods
(bad)
xchg
or
jle
mov
mov
shl
fnop
fld
pop
aam
rcr
jnp
test
call
sbb
ja
popa
xlat
mov
xor
idiv
sbb
call
xchg
loopne
lds
jge
push
push
push
sub
sbb
rcr
push
daa
mov
cmps
pushf
push
je
cmp
sbb
jns
add
dec
lahf
and
mov
pop
and
repz
inc
outs
inc
jp
gs
and
pop
jo
inc
adc
jmp
dec
inc
jmp
and
jle
js
push
inc
cmp
sbb
aad
pop
popf
mov
mov
out
mov
sbb
cmp
std
pop
push
out
cdq
mov
loope
scas
push
(bad)
xor
retf
adc
mov
ja
iret
das
stc
sbb
aad
mov
ror
pop
jmp
jge
jge
and
push
psrlw
add
arpl
pop
scas
mov
xchg
dec
cmps
je
inc
mov
xchg
in
jp
ss
ja
push
mov
call
sbb
clc
sbb
shl
ins
imul
scas
adc
ret
mov
(bad)
fst
nop
fnsave
popf
jnp
xchg
mov
dec
cmp
aas
mov
pop
sbb
aam
or
addr16
mov
lahf
stos
aaa
mov
call
cmp
sbb
test
sub
pop
fs
push
adc
not
fs
dec
push
and
enter
icebp
mov
inc
push
pop
scas
(bad)
loop
movs
xchg
mov
mov
pop
ss
outs
xor
sub
xchg
pop
xor
mov
bound
inc
jbe
popf
mov
cmps
dec
mov
dec
inc
test
sub
enter
out
mov
outs
xchg
and
movs
addr16
sub
pop
pushf
aaa
jg
clc
mov
cmp
cld
jno
scas
mov
data16
pop
test
stc
ret
jae
iret
test
jmp
imul
retf
stos
fisttp
and
scas
push
punpckhbw
(bad)
mov
xchg
in
repnz
mov
jmp
scas
pop
repz
imul
mov
push
and
mov
(bad)
lea
(bad)
shl
hlt
sbb
es
in
inc
cmp
and
fisubr
jae
jge
dec
pop
mov
cmp
sbb
cmp
push
fs
dec
jno
js
comiss
imul
js
add
push
repnz
mov
jmp
add
rol
push
push
aam
nop
outs
push
sti
out
pop
add
aas
add
shl
push
repnz
ins
dec
adc
sti
clc
push
idiv
fcmove
push
add
cdq
popf
add
sub
test
mov
movd
lea
push
arpl
or
outs
mov
es
sbb
and
mov
or
dec
adc
xor
cmp
sub
push
cli
retf
fld
mov
jns
imul
enter
sub
cmp
aad
jmp
pop
and
and
sub
xchg
fisubr
das
stos
mov
add
mov
call
jne
mov
xlat
mov
pop
bound
test
bound
ret
sub
mov
fwait
xor
push
jae
or
or
mov
loope
in
sub
inc
inc
adc
jp
xor
pop
cli
sbb
dec
jl
sub
loope
or
loope
or
sahf
push
inc
test
mov
in
sti
lods
xchg
adc
or
lahf
test
repnz
cwde
dec
pop
dec
push
das
xchg
jmp
jp
sbb
push
jle
sbb
retf
sbb
fld
inc
and
xchg
jmp
popf
call
iret
sbb
add
not
xchg
push
fisubr
jbe
mov
movs
pop
mov
clc
ja
mov
push
mov
(bad)
push
push
xchg
repnz
xor
sub
(bad)
dec
mov
jo
cmp
ja
cmp
mov
cmp
inc
jno
push
call
add
cwde
pop
jnp
cmps
dec
push
bound
shl
fmul
rol
fs
adc
das
jmp
pop
pop
inc
adc
xor
les
adc
pushf
jb
repnz
out
(bad)
in
mov
adc
stos
jo
or
pusha
out
mov
and
in
and
mov
adc
cmp
xor
sbb
inc
jmp
stc
sub
mov
cmp
shr
call
inc
bound
or
fild
xor
popf
or
(bad)
in
imul
movs
mov
cmp
in
sub
add
shl
test
sub
mov
adc
ret
mov
jne
outs
call
pop
jae
es
int3
cdq
ror
sbb
mov
dec
cmps
sub
fistp
jmp
cld
mov
cmp
xor
jb
imul
mov
cmp
mov
push
sbb
push
jmp
mov
push
dec
sub
retf
cmps
cmp
add
or
sub
mov
mov
add
sbb
sbb
or
fld
lods
xor
rcr
rcr
push
(bad)
(bad)
out
adc
sbb
dec
xor
xlat
inc
sbb
test
add
bound
loop
shr
or
in
pop
enter
and
mov
outs
and
(bad)
pop
dec
ja
lds
or
pop
repnz
lea
add
xor
inc
pop
iret
inc
and
call
adc
and
jecxz
dec
ins
mov
sbb
and
lock
xchg
xchg
ret
sub
adc
fucomip
movs
cmp
ja
mov
mov
mov
ret
pop
js
not
or
sub
cmp
sbb
call
scas
js
dec
mov
add
xchg
scas
xor
xor
repnz
hlt
cld
jmp
sub
rcr
int
mov
mov
push
call
call
jo
int
cmp
in
mov
mov
sbb
mov
adc
jle
scas
sbb
sbb
pop
int
jp
mov
imul
push
std
shl
cmp
jae
out
call
sub
xor
call
les
adc
out
sbb
adc
mov
fwait
outs
mov
cmp
mov
fsubr
mov
jg
clc
cmp
retf
rol
mov
(bad)
daa
mov
pop
push
xor
lahf
xor
loopne
stos
adc
mov
adc
inc
mov
dec
loopne
push
adc
pusha
movs
out
sar
gs
sub
dec
into
jns
mov
sbb
cdq
scas
ss
retf
jmp
les
ror
(bad)
add
inc
outs
xchg
and
test
movs
mov
std
ret
ret
cmps
mov
ficomp
das
gs
xlat
cmc
and
inc
or
gs
int3
dec
or
mov
rcl
sti
das
fcomp
sbb
shl
gs
(bad)
xor
retf
in
dec
cmp
arpl
fidivr
pop
sub
pop
fbstp
out
jg
repz
jbe
push
mov
cs
ss
mov
xor
and
(bad)
shl
aad
cmp
mov
adc
lds
inc
jns
mov
shr
pop
jle
mov
gs
cmp
and
gs
fild
pop
fwait
mov
loopne
cmp
and
push
cmps
std
xchg
cld
xchg
fisttp
pop
xchg
sahf
or
mov
mov
push
stc
test
mov
shr
fstp
push
mov
or
inc
fidiv
pop
dec
lea
aas
sbb
sbb
adc
leave
xor
and
pusha
int3
inc
push
pop
sahf
imul
xor
inc
dec
loopne
ins
mov
add
(bad)
arpl
xchg
xor
pop
xchg
xor
movs
cmp
sbb
mov
loop
ret
repz
std
iret
stc
add
pop
(bad)
inc
(bad)
fisub
inc
dec
jnp
xchg
stos
ror
mov
std
loop
add
scas
mov
mov
jae
mov
dec
sbb
inc
xchg
shr
pop
inc
ja
or
pop
sbb
cmp
cmp
std
xchg
fldenv
(bad)
mov
call
mov
cld
arpl
xchg
cdq
cmps
test
lock
sbb
jecxz
mov
mov
cmps
aam
scas
lahf
add
dec
xor
neg
(bad)
cmp
add
js
inc
xchg
push
aas
jno
add
push
push
bound
push
je
jge
add
retf
(bad)
cmp
es
test
mov
test
xchg
mov
movs
push
cs
mov
push
xchg
add
imul
push
das
vpminsb
adc
dec
repz
ret
bnd
fdiv
or
test
imul
repnz
(bad)
push
mov
jae
dec
enter
outs
lahf
and
and
ja
or
mov
mov
and
fwait
mov
xchg
movs
mov
sbb
xchg
push
aaa
(bad)
ret
pop
mov
in
int3
mov
clc
mov
bound
rol
jg
outs
stos
enter
mov
ror
ret
pop
dec
rcr
mul
(bad)
bound
aam
adc
mov
sbb
or
and
mov
inc
jge
into
inc
ins
pusha
call
clc
cwde
pop
and
pop
fst
push
repz
pop
mov
adc
(bad)
or
xchg
adc
xchg
pop
and
loop
in
push
sbb
(bad)
out
out
add
test
test
sub
ds
popa
fs
sbb
lock
sbb
inc
pushf
outs
stos
js
xchg
loopne
in
sub
push
jnp
sub
fisub
ins
and
mov
sbb
push
or
(bad)
retf
adc
jmp
sbb
xor
and
inc
aad
fimul
xchg
ss
(bad)
cmp
adc
or
cmps
jns
push
xlat
mov
xchg
popf
iret
lds
in
in
add
jno
or
pop
dec
inc
js
or
pop
in
cmp
push
xchg
ja
call
pop
push
push
repnz
clc
pop
call
sti
adc
jecxz
jg
(bad)
pop
pop
popa
mov
mov
test
outs
or
movs
(bad)
adc
mov
std
xor
shr
call
fs
test
je
stos
sbb
jnp
or
sar
push
mov
mov
test
jle
or
std
cdq
cmc
xor
icebp
push
push
and
pop
push
out
imul
test
mov
dec
jg
jo
mov
or
push
adc
adc
mov
call
lods
push
pop
and
adc
pminub
inc
and
adc
xchg
xchg
and
adc
sub
xchg
nop
push
cmp
jmp
fsub
xor
or
push
pop
out
or
adc
sti
push
into
cmp
jle
sub
fsubr
jle
pop
cmc
xchg
(bad)
addr16
cmps
ret
and
div
jge
xor
dec
cmp
and
fstp
dec
dec
inc
mov
push
fst
loopne
cdq
jmp
in
inc
lods
mov
dec
rcl
out
push
xlat
pop
fadd
ins
call
inc
pop
out
cmp
xor
mov
mov
mov
jne
or
clc
inc
je
and
popf
xchg
push
xchg
sbb
hlt
rcl
hlt
pop
loopne
or
dec
jbe
dec
cld
mov
push
(bad)
push
aaa
rol
retf
mov
arpl
dec
cdq
pop
inc
adc
adc
into
loopne
adc
movs
mov
and
into
into
fnstenv
into
ds
dec
aam
jecxz
jecxz
movs
scas
inc
stc
dec
adc
adc
mov
movs
adc
inc
adc
or
pop
sahf
stos
lds
cmp
ret
fstp
leave
mov
lods
aad
add
cmc
hlt
fs
hlt
sti
data16
call
mov
bound
pop
(bad)
or
fnstsw
fist
sub
out
mov
fs
mov
pop
mov
scas
xchg
out
lahf
pop
into
(bad)
fst
retf
test
mov
lea
jp
out
ins
dec
gs
out
test
adc
dec
push
jo
push
xor
in
enter
out
cmps
cmp
(bad)
les
mov
mov
loope
stc
and
inc
mov
jnp
je
call
scas
pop
nop
jns
fisubr
and
mov
xchg
add
pop
pop
sbb
mov
ret
push
or
mov
add
cmp
int3
cmp
iret
sbb
ins
adc
lods
inc
pop
cli
(bad)
sub
shr
cmps
push
inc
sar
(bad)
fild
sbb
daa
mov
loope
rcr
addr16
push
xor
test
fst
cdq
inc
test
pusha
test
sbb
mov
jbe
arpl
add
jo
fstp
jmp
and
inc
pop
scas
loopne
iret
fist
popf
pop
add
jmp
repnz
sbb
pop
jne
repz
push
ja
adc
fld
xchg
inc
jp
fstp
mov
stc
xchg
test
inc
ret
or
scas
pop
push
or
js
push
adc
fistp
push
sbb
dec
(bad)
fmul
cmps
add
pop
cmp
cdq
or
ret
or
in
xor
ja
jae
and
push
std
mov
cmp
xchg
jne
push
pop
daa
mov
adc
clc
ret
push
jno
movs
mov
and
dec
inc
or
je
mov
dec
adc
out
or
push
xor
fidivr
push
push
jbe
gs
popf
or
add
xor
sub
(bad)
retf
lods
jnp
mov
cwde
mov
arpl
xor
cmps
psubd
sub
dec
cmp
or
fnsave
sti
mov
push
pop
and
xor
ins
rol
sub
ja
out
fld
movs
stos
mov
imul
retf
push
or
clc
daa
das
(bad)
int3
push
lahf
xchg
mov
iret
inc
xchg
outs
xor
adc
dec
js
cmps
rcl
(bad)
jg
pop
nop
fwait
aad
inc
pop
and
sbb
lea
call
sbb
(bad)
ficom
lahf
leave
adc
imul
shl
xchg
adc
es
jne
retf
sbb
clc
fisttp
inc
sub
xchg
mov
push
icebp
cmps
arpl
sub
movs
in
addr16
inc
in
jno
lock
loopne
jnp
inc
jmp
lds
mov
aas
neg
xchg
adc
pushf
sbb
sub
push
mov
mov
sbb
ud2
fcomp
loopne
push
jmp
fcomi
outs
sub
pusha
and
sub
add
pop
xchg
pop
jecxz
(bad)
loope
mov
and
or
inc
inc
jo
loop
js
mov
jmp
shl
mov
sbb
xchg
je
sub
push
mov
leave
sti
pop
mov
fiadd
cli
mov
push
add
gs
lods
mov
lds
mov
mov
sbb
mov
popf
rcr
jp
fwait
mov
mov
lahf
xor
cmp
mov
push
pop
sahf
pop
aad
shr
sbb
cs
scas
in
cmp
adc
mov
mov
xchg
dec
inc
or
rol
pop
mov
xor
cdq
ror
test
dec
jl
aad
inc
inc
or
pusha
dec
push
aaa
push
push
cmp
cmc
mov
sbb
stos
mov
add
jle
push
out
jmp
inc
sbb
add
jno
aaa
sub
and
call
jmp
adc
js
bound
xlat
ins
js
addr16
mul
xor
sub
jp
xchg
xchg
add
mov
dec
xor
(bad)
in
jmp
add
cmc
mov
push
out
js
retf
fwait
mov
push
jb
adc
push
inc
pop
jmp
xchg
inc
and
les
push
dec
fdiv
punpckhbw
iret
push
add
cmc
or
scas
mov
repnz
adc
jbe
fwait
iret
js
adc
mov
repz
ror
xchg
sub
stc
repz
inc
fild
sub
xchg
inc
adc
pop
xor
lds
sbb
out
adc
pop
pop
jmp
jmp
aas
fwait
mov
ins
mov
mov
add
cmp
outs
mov
rcl
shl
ds
push
js
xchg
test
aad
lods
mov
cdq
not
shl
retf
sub
jmp
jecxz
mov
(bad)
add
or
arpl
push
push
pop
popf
push
mov
xchg
iret
pop
push
in
xor
retf
stos
xchg
xchg
jmp
pusha
ja
scas
pop
jge
cmp
jmp
ins
cld
or
xchg
stos
dec
mov
ror
cli
daa
pop
push
imul
dec
push
xchg
dec
dec
push
jecxz
add
add
movs
pop
out
and
ret
es
xor
push
retf
inc
cmp
sub
xchg
pop
dec
repz
out
mov
test
(bad)
cmp
mov
adc
jns
jmp
(bad)
xlat
lock
(bad)
retf
push
std
call
hlt
adc
jmp
into
lock
ja
out
test
cld
lock
and
out
popa
dec
pop
sub
outs
dec
leave
movs
xchg
mov
out
inc
xor
repz
and
push
pop
lods
fist
mov
ds
pop
lock
loopne
mov
and
adc
lahf
and
inc
test
push
xchg
arpl
sub
and
les
sub
retf
iret
dec
je
(bad)
test
push
or
pinsrw
rol
or
mov
rol
jne
in
aad
add
mov
mov
adc
iret
or
mov
sahf
mov
cmp
xor
xchg
sar
retf
daa
rcl
sahf
mov
daa
scas
fs
mov
lahf
ds
scas
or
push
int3
jg
adc
xor
fmul
out
or
dec
std
(bad)
cmp
pop
pop
xchg
std
fist
jo
ds
jo
sub
out
cmps
push
dec
pop
xor
out
push
popa
mov
jae
inc
jnp
mov
cmc
aaa
es
pop
xor
fsub
popa
in
(bad)
(bad)
pop
lahf
add
cmps
idiv
wbinvd
dec
repz
into
sahf
bound
cdq
test
ins
js
inc
or
push
aad
test
(bad)
sub
cmp
lods
jg
push
xor
sub
jns
sar
popf
mov
je
mov
push
inc
sahf
lahf
(bad)
aam
xor
neg
iret
fsubr
mov
imul
pop
mov
pusha
dec
subps
mov
xchg
sti
ds
addr16
jmp
fidivr
jo
mov
mov
stos
inc
popf
mov
add
jb
or
cmp
repnz
dec
lods
out
out
mov
mov
(bad)
vorps
adc
jl
std
call
and
cmp
movs
into
movs
mov
js
push
and
cld
and
xchg
mov
ud1
rol
std
jp
mov
push
mov
mov
dec
test
xchg
scas
inc
(bad)
fucomi
cwde
fwait
stc
push
lods
pop
mov
aas
in
jb
mov
sar
cmp
aaa
mov
sahf
add
mov
inc
add
inc
clc
fbld
popa
call
xor
jmp
scas
dec
cmp
shl
sub
dec
sti
jmp
not
pushf
mov
jnp
and
xchg
out
dec
enter
outs
jecxz
cs
adc
jp
shr
cmp
pop
xchg
loope
lods
cmps
enterw
jno
and
int3
inc
add
xor
dec
push
add
jl
fdiv
fwait
push
cmp
inc
(bad)
nop
arpl
xchg
jbe
push
int3
xchg
push
add
arpl
test
adc
cs
dec
hlt
es
pushf
rol
sti
repz
jg
jmp
out
retf
xchg
push
ficom
test
sar
sbb
mov
movs
pop
into
and
jb
xor
sbb
jns
outs
jb
xchg
out
mov
mov
mov
dec
and
jge
or
ss
iret
test
adc
mov
push
jmp
lea
mov
and
jno
lea
pusha
rcl
outs
jbe
arpl
in
jle
xlat
fadd
inc
and
xor
sub
inc
jbe
pop
mov
jmp
jo
pop
and
sbb
mov
push
js
imul
rcr
test
inc
mov
aas
sbb
sbb
inc
xchg
and
cvtdq2ps
(bad)
retf
inc
out
push
outs
xchg
add
push
xchg
push
mov
and
mov
mov
sub
loope
sldt
fwait
pop
cmp
stc
rcr
sbb
xor
popf
xor
cmp
cmp
and
inc
retf
jb
mov
mov
cmp
pop
lds
in
xor
cmc
loop
mov
xor
xchg
xor
mov
pop
jp
sti
(bad)
jbe
mov
mov
enter
xor
add
adc
lods
mov
cli
and
adc
ret
sbb
daa
je
fs
in
lahf
(bad)
sbb
leave
mov
retf
lods
xchg
retf
(bad)
fmul
(bad)
mov
jmp
retf
into
retf
popf
outs
push
rol
mov
leave
(bad)
push
imul
shl
lods
pop
add
push
mov
inc
call
mov
cmp
ins
push
inc
xchg
rcl
mov
jbe
mov
xchg
cdq
fs
out
pop
xchg
ds
push
sar
sub
xchg
add
or
adc
inc
sbb
pop
in
cmp
stos
xor
icebp
jl
cwde
rcr
cmps
(bad)
pop
add
or
jo
push
and
xchg
movs
mov
ins
cmp
mov
ins
ror
jle
js
pushf
push
ja
pop
pop
adc
mov
cmps
sub
scas
aas
xor
push
cdq
adc
(bad)
jmp
or
cmp
in
ret
in
inc
lock
xchg
sti
and
(bad)
fdiv
add
test
xor
rol
mov
(bad)
pop
ret
aaa
push
push
add
pusha
aad
jne
mov
jge
ins
in
nop
hlt
jp
or
(bad)
lds
mov
mov
jmp
push
sbb
(bad)
sub
fild
out
push
or
mov
pusha
xor
mov
xchg
mov
js
push
mov
mov
lfs
sub
stc
mov
mov
or
mov
fwait
cmp
sbb
lock
add
mov
add
inc
in
fs
cdq
mov
mov
sbb
dec
add
or
loop
fnsetpm(287
adc
mov
aas
add
jns
fisttp
repnz
adc
sub
adc
and
fdiv
das
jl
push
xchg
mov
and
dec
jbe
out
mov
(bad)
test
mov
test
push
loope
pop
aam
fild
fadd
bound
repnz
sub
cwde
mov
mov
and
aam
mov
push
dec
mov
call
adc
pop
push
(bad)
xlat
xor
add
ds
add
nop
sub
rcl
jmp
mov
mov
arpl
push
sub
xor
or
test
adc
aas
js
or
xchg
lahf
dec
aad
mov
data16
lds
iret
adc
cmc
and
sub
mov
out
std
adc
adc
dec
and
and
mov
push
adc
push
test
cmp
xor
out
adc
int
dec
sti
adc
xor
aad
or
cdq
dec
sub
mov
aam
mov
lods
mov
dec
cmp
jmp
xchg
mov
cmp
iret
and
mov
out
inc
fldln2
mov
leave
sub
iret
jp
xor
aam
int3
bound
int
pxor
cmp
mov
in
sbb
pop
jns
or
cs
jle
mov
xchg
inc
sub
mov
call
or
xchg
in
stc
loop
pop
sub
xor
cmps
mov
inc
nop
cmp
push
dec
pop
or
inc
pop
jnp
mov
fwait
dec
retf
xchg
cmp
sbb
xor
add
ror
shr
dec
adc
or
cmps
fistp
push
fisub
adc
stos
outs
cmp
cmps
mov
adc
call
rol
(bad)
repnz
cmp
dec
je
and
mov
xor
xchg
mov
mov
es
push
push
cs
mov
jae
xchg
outs
lods
pop
inc
outs
cwde
pop
mov
dec
pop
and
fadd
inc
sbb
lahf
mov
cmps
jp
imul
test
in
mov
adc
cmps
vmovsd
leave
shl
jbe
dec
xchg
cli
dec
cld
cmc
js
mov
mov
inc
sbb
retf
ins
xchg
es
dec
and
dec
lahf
scas
inc
scas
out
cmp
inc
loope
sbb
cmp
call
mov
inc
xchg
push
dec
inc
(bad)
sbb
push
and
js
retf
or
(bad)
bound
(bad)
sub
lods
xchg
mov
aad
mov
rol
movs
in
push
jmp
fsubr
in
pextrw
inc
and
mov
inc
sub
push
mov
sub
push
xor
inc
mov
in
cmp
out
enter
ds
cld
xchg
push
nop
jb
in
test
fisub
adc
sub
add
mov
sbb
cli
and
dec
pop
into
ffree
stos
leave
test
icebp
adc
popf
mov
push
call
frstor
shl
mov
movs
inc
lahf
clc
div
shl
hlt
mov
push
add
xor
cmp
mov
mov
popa
pop
ds
idiv
mov
mov
push
xchg
push
das
jnp
aas
mov
test
mov
adc
jmp
inc
push
(bad)
mov
cmp
push
xchg
push
xor
dec
(bad)
stc
and
push
mov
dec
xor
(bad)
call
int3
xor
fld
int
dec
adc
and
xor
hlt
data16
jp
mov
ja
enter
iretw
jae
mov
pushf
sub
adc
shl
dec
push
ret
imul
pushf
paddsb
popf
and
push
sub
xchg
pop
adc
sub
add
call
repz
lahf
dec
inc
xchg
sahf
add
xchg
aas
add
sub
scas
jb
stos
mov
enter
pushf
xor
adc
or
cdq
push
mov
mov
add
xchg
inc
mov
aad
in
mov
call
jo
add
adc
stc
stos
icebp
(bad)
pusha
push
xchg
bound
push
and
push
(bad)
or
shr
xchg
inc
dec
jno
jmp
and
sbb
xor
or
idiv
nop
sbb
clc
ins
xor
sbb
cs
pop
loopne
aaa
jecxz
mov
inc
js
rcl
test
or
xor
(bad)
test
jbe
repz
loope
and
or
push
pushf
jge
sahf
mov
movs
test
mov
outs
dec
daa
clc
sbb
or
mov
fadd
adc
jg
dec
adc
push
mov
dec
cs
xchg
aas
jge
retf
sahf
pop
pop
ret
jo
jmp
push
lock
mov
clc
test
mov
sbb
xchg
adc
fld
adc
mov
or
pop
not
fst
dec
ins
or
mov
sbb
cmp
dec
loopne
push
lock
jl
jnp
add
pop
xchg
xchg
ja
mov
adc
adc
sbb
popa
sar
sub
sbb
jo
mov
stos
test
mov
push
jbe
mov
or
pushf
stos
daa
dec
bound
loop
jmp
(bad)
ss
aam
arpl
mov
push
xor
(bad)
dec
sti
sbb
sub
repnz
sahf
pop
adc
add
push
add
nop
adc
dec
add
mov
bound
mov
and
sbb
les
xchg
test
sub
adc
sub
pop
lock
push
push
or
xchg
cwde
leave
and
lahf
inc
js
lahf
adc
in
xor
cwde
and
mov
mov
jg
jo
rcl
test
sbb
sub
mov
push
out
add
sub
sub
test
jmp
xchg
rcr
in
popf
mov
out
repnz
cld
loop
inc
jmp
test
sub
mul
cmp
add
test
push
test
cmp
inc
dec
mov
jns
rcr
ss
dec
xlat
fs
push
xchg
dec
pop
movs
dec
jno
popa
mov
and
dec
lods
mov
stos
adc
mov
cmps
push
aaa
jg
jle
repz
les
jl
(bad)
les
sub
(bad)
loop
outs
je
push
mov
jge
jle
jmp
lahf
or
add
lahf
push
xor
cwde
stc
mov
leave
xchg
add
cdq
adc
xor
dec
jnp
add
dec
pop
adc
mov
mov
jecxz
cmp
jne
push
push
jb
aam
mov
push
xchg
sub
int
mul
jp
xchg
sar
mov
add
sahf
das
lahf
scas
clc
cmp
dec
sub
adc
or
and
sub
fstp
outs
iret
or
loop
out
mov
pop
mov
push
sub
adc
lds
or
sbb
adc
mov
and
div
jmp
fisub
xchg
pop
xor
mov
stos
pop
sub
lods
movs
mov
int
inc
fwait
inc
aam
sbb
mov
xchg
sbb
adc
loopne
push
mov
out
ja
arpl
jne
mov
ret
pop
gs
inc
out
loope
sub
(bad)
ds
jecxz
out
sti
jbe
adc
das
push
shl
mov
xlat
sub
dec
fadd
push
jecxz
lds
lods
xchg
xor
and
aaa
push
pop
cmps
ret
inc
jecxz
dec
in
lfs
outs
add
(bad)
lock
lock
int
pop
dec
adc
pop
cmc
stos
pop
xor
jb
arpl
add
sbb
aad
popa
mov
std
and
xor
jb
fild
sbb
test
out
jmp
xor
sahf
aad
push
lods
ja
cld
hlt
sub
mov
dec
jmp
push
rcl
scas
aam
mov
sub
cwde
xchg
fxch
scas
jno
in
dec
mov
jb
adc
out
xchg
cmps
fisub
mov
add
sbb
adc
pop
mov
cmp
punpckhbw
cmp
cmp
sbb
fwait
jno
pop
or
inc
pop
fdiv
cli
or
out
cmp
inc
fstp
xchg
and
mov
push
je
loopne
ja
int
fidiv
popa
(bad)
mov
lods
sahf
mov
mov
jg
je
pop
adc
ror
xor
call
xor
stos
dec
pop
test
clc
sbb
repnz
int
xchg
sub
in
in
fistp
out
(bad)
jmp
cli
in
jp
mov
mov
sbb
ins
leave
pop
fwait
gs
jne
jns
mov
push
hlt
mov
lock
xor
add
in
bound
into
pop
mov
mov
inc
xchg
dec
outs
daa
mov
mov
push
add
mov
idiv
loop
or
inc
mov
std
pop
or
lahf
push
test
mov
mov
sub
xchg
adc
lods
jp
gs
(bad)
stc
ss
cmp
jo
jnp
mov
mov
es
add
adc
inc
repz
adc
adc
imul
fild
mov
sahf
js
mov
stos
and
sbb
fs
xchg
fucomip
fisub
dec
cs
cdq
pop
cli
jmp
fcomp
pop
mov
das
into
test
mov
cdq
sub
sbb
pop
mov
add
fisub
std
retf
jl
cdq
test
fidiv
ins
xor
lock
(bad)
cmp
push
push
fstp
xor
inc
sbb
dec
mov
std
sub
xor
pop
pop
dec
dec
hlt
adc
ficom
shl
ss
push
cs
and
pop
ret
jne
inc
and
(bad)
shl
enter
call
call
or
pop
jg
push
test
loopne
push
fmul
adc
fs
fcom
loope
sbb
jmp
pop
cli
jne
fwait
nop
fdivrp
cmp
scas
dec
mov
pop
add
mov
jne
dec
aam
fsubr
mov
mov
js
cmp
popf
jle
pcmpeqw
lea
push
fcmovnu
inc
add
xchg
outs
fnstsw
fadd
xor
lods
xchg
cdq
fild
repnz
inc
xchg
call
fbld
pop
mov
cs
and
mov
or
or
lahf
enter
sti
or
adc
lock
adc
fadd
test
das
push
mov
jecxz
push
or
fcmovbe
xchg
sub
ins
push
jmp
push
divps
push
mov
aas
out
and
in
mov
cmp
pop
fild
ror
push
movs
pop
push
loopne
inc
icebp
cmp
fsub
sub
add
mov
xchg
gs
fwait
add
aas
test
dec
jmp
sub
in
sar
clc
xchg
cs
sub
dec
mov
pop
out
push
mov
ja
push
cmc
iret
mov
shr
out
add
pop
cwde
inc
jp
movs
or
pop
mov
jae
sub
push
pop
mov
je
pop
mov
xchg
pop
xchg
outs
fild
fld
fwait
in
adc
jmp
mov
loopne
(bad)
nop
ins
mov
in
adc
pushw
stos
xchg
mov
aaa
fimul
stos
call
push
ins
jne
shl
or
aam
adc
mov
xlat
push
mov
ret
push
cmc
test
dec
mov
cmps
cdq
pop
lahf
or
inc
scas
dec
pop
mov
push
popa
lods
retf
sub
es
daa
add
mov
adc
icebp
mov
repz
or
or
mov
add
lods
mov
adc
add
pushf
add
popa
cwde
movs
std
adc
mov
push
cmp
jecxz
mov
stos
pop
sbb
stos
hlt
aam
pop
ins
aas
daa
into
adc
jne
xchg
and
xor
pushf
rcl
fmul
jmp
cmp
mov
push
adc
movs
sub
fstp
xor
mov
rcr
ret
mov
cs
xchg
enter
bound
pusha
xlat
in
push
push
stc
loope
loopne
mov
pop
mov
add
ins
xor
sub
xchg
retf
inc
stos
data16
repz
imul
cwde
mov
mov
cli
in
mov
stc
sar
jo
int
push
dec
xchg
mov
inc
pop
adc
daa
jns
dec
push
mov
cmp
iret
and
cmp
retf
rcl
dec
in
jmp
jnp
jns
cmp
xchg
xchg
popa
xchg
or
xor
xchg
iret
push
xchg
shl
movs
sbb
push
cmp
test
aas
cwde
nop
fcom
mov
pushf
imul
mov
inc
and
cmc
mov
repnz
rol
sub
nop
icebp
adc
and
jno
fisttp
pop
leave
ss
(bad)
sub
fyl2x
xchg
ins
mov
in
mov
dec
mov
mov
pop
inc
pushf
pop
mov
mov
push
pushf
dec
loop
add
pop
test
and
inc
mov
cli
out
and
loope
dec
xchg
sub
or
addr16
cdq
imul
mov
jecxz
jmp
mov
sbb
cld
lds
data16
scas
iret
jae
std
loope
cmp
lods
xor
sti
inc
add
xor
push
mov
out
stos
mov
adc
rcl
cmp
daa
mov
jp
cmc
add
sahf
sub
push
and
cmps
fild
aaa
inc
mov
jmp
cmpxchg
push
hlt
inc
popa
jmp
cmp
lahf
scas
mov
jecxz
adc
sbb
and
shr
sar
mov
test
sar
pop
sbb
jecxz
fimul
dec
pop
pop
test
jg
(bad)
mov
sub
sub
or
pusha
fcmovne
loopne
ret
and
jecxz
popf
add
xlat
sar
push
test
xor
loope
imul
sub
mov
div
sbb
jnp
retf
pop
cwde
xchg
dec
mov
nop
jecxz
ins
push
ss
inc
or
aas
in
ins
test
stos
inc
mov
mov
rcl
mov
jno
leave
push
scas
mov
xor
mov
or
adc
add
icebp
scas
xor
adc
pop
mov
jnp
(bad)
xchg
xor
cmc
push
cmps
mov
pop
inc
jge
fild
jp
jmp
mov
push
jmp
adc
or
sbb
jnp
dec
xor
sub
and
mov
mov
movs
jns
xchg
scas
cld
lea
lods
dec
mov
or
rcr
fucomp
(bad)
and
push
pop
mov
jge
leave
ja
test
xchg
xor
pop
retf
ss
mov
scas
mov
sahf
jl
or
xor
xlat
xor
jg
inc
sbb
cs
popf
int3
or
dec
xchg
bnd
pop
pop
mov
mov
lahf
jecxz
ds
sub
mov
or
ret
push
push
mov
fiadd
(bad)
jge
dec
arpl
(bad)
cmp
repnz
inc
dec
shl
shl
cmps
dec
sar
mov
je
sbb
jno
pusha
xchg
scas
fisub
mov
cli
cmps
movs
lock
in
or
xor
loopne
dec
aaa
shr
call
lock
cmp
cmp
mov
mov
xor
loop
nop
add
mov
not
lahf
push
lahf
in
jnp
pushf
cmp
sahf
fild
add
push
sub
inc
das
pop
mov
fwait
clc
repz
add
pushf
sub
mov
mov
fwait
nop
fldcw
mov
inc
sub
pop
sar
(bad)
or
adc
jo
push
cmp
pop
loopne
retf
pop
xchg
rsqrtps
pop
xchg
sub
or
mov
hlt
inc
cmp
hlt
ins
adc
push
xchg
cwde
sbb
icebp
retf
jmp
ret
inc
sbb
(bad)
sbb
jnp
loopne
adc
(bad)
cmp
test
cs
(bad)
lahf
jecxz
pop
sbb
and
xchg
cmp
test
xor
popa
sub
retf
jbe
rcr
sub
pop
push
dec
dec
pushf
fcmovbe
in
fmul
dec
xchg
imul
cmp
pop
adc
popf
jmp
mov
mov
add
and
mov
mov
and
mov
fisttp
aam
lahf
mul
mov
adc
jnp
mov
pop
js
and
fdiv
stc
or
jecxz
out
(bad)
ja
dec
mov
mov
xchg
daa
les
cmc
into
cli
xor
stos
rcl
pop
push
jge
pop
sub
je
out
cmp
mul
sbb
xor
push
jle
test
scas
and
sub
pop
and
scas
ret
pop
inc
xchg
sahf
nop
jp
cmps
test
data16
inc
push
mov
xchg
cmc
pushf
in
nop
push
jnp
xor
sti
sub
sub
enter
add
loope
aam
mul
nop
inc
pop
hlt
mov
in
movs
mov
imul
cdq
imul
push
mov
stos
pop
mov
(bad)
enter
stos
and
loope
xor
sub
(bad)
xor
fisttp
push
mov
adc
xchg
inc
mov
and
add
and
adc
loop
fwait
jecxz
xchg
movs
push
pushf
xor
retf
dec
sub
jg
enter
sub
popa
pusha
inc
dec
push
test
cs
jl
xor
sub
cmc
lock
cli
mov
cmp
mov
jo
xor
stos
or
sbb
jle
jl
or
(bad)
cwde
ret
xor
in
cmp
jmp
repnz
jmp
outs
les
addr16
ja
mov
ror
cmp
pop
outs
mov
xchg
pop
mov
sub
test
mov
hlt
xchg
out
repz
mov
mov
mov
cmp
loope
inc
(bad)
stc
fwait
adc
cmps
or
push
or
and
and
xor
clc
jne
(bad)
push
add
icebp
shl
sub
hlt
inc
or
(bad)
fdivr
mov
(bad)
jnp
pop
push
mov
inc
dec
pop
add
jmp
or
rcr
mov
in
rol
or
cmp
stc
sub
inc
or
retf
fldenv
ror
shl
std
cdq
jns
add
ret
repz
daa
cmp
mov
xchg
push
push
dec
sub
xor
mov
jge
dec
lds
cmp
and
outs
mov
bound
sahf
push
mov
xor
mov
aas
pop
jnp
pop
jns
popa
callw
shr
femms
repnz
sbb
or
int
push
mov
loop
and
mov
pop
mov
ret
into
inc
and
and
cmc
xchg
outs
fld
xchg
xor
(bad)
push
xor
mov
fdiv
fld
sbb
leave
ror
fs
outs
fmul
jl
pushf
(bad)
ror
ins
aam
sub
gs
inc
mov
add
sti
mov
das
stc
push
es
push
xor
push
xlat
ficom
inc
mov
cld
push
jae
sbb
and
arpl
adc
pop
pop
neg
in
push
push
out
adc
cmp
in
outs
ds
xor
test
push
out
lea
and
sub
push
sbb
xor
dec
adc
inc
popa
push
ins
das
test
pop
aaa
push
pop
jge
arpl
mov
mov
mov
xor
fwait
rcr
inc
pushf
pushf
pop
mov
fild
push
jecxz
sbb
mov
mov
inc
adc
lahf
js
sub
cmps
pop
mov
fstp
push
or
mov
aas
sub
leave
push
add
add
mov
jp
scas
mov
mov
xchg
adc
or
lea
sbb
aaa
mov
mov
es
fwait
pop
scas
icebp
popa
pop
jmp
or
(bad)
xchg
mov
jp
sub
pop
push
push
cmp
retf
sti
cld
fidiv
shl
inc
lds
in
mov
mov
(bad)
loop
sbb
rcl
and
cwde
cmps
pop
iret
xor
xchg
loop
pop
cmps
mov
mov
arpl
out
hlt
loope
out
cmp
test
data16
rcl
pop
enter
xchg
out
xchg
mov
stos
or
push
adc
popa
cmp
into
jl
xor
pop
mov
add
mov
fbstp
fcmovu
jmp
dec
std
div
pop
and
or
pop
retf
aad
ret
fnstcw
xchg
mov
mov
inc
ror
cmp
xlat
jg
inc
xchg
cdq
add
push
outs
dec
and
out
dec
movs
mov
xchg
pop
mov
pop
ins
mov
xchg
push
es
add
retf
push
dec
gs
dec
outs
push
mov
xor
popf
imul
hlt
mov
adc
aad
jbe
fdivr
(bad)
sub
or
test
mov
mov
aas
stos
xor
sti
dec
(bad)
mov
iret
nop
adc
sbb
xchg
fisubr
leave
mov
mov
inc
or
inc
stos
arpl
int3
out
mov
pop
inc
ja
and
gs
imul
sbb
clc
xor
test
adc
stos
clc
(bad)
cmp
rcl
mov
scas
dec
and
fwait
dec
jbe
xchg
mov
push
aad
push
ins
bound
adc
movs
dec
ins
test
sbb
adc
pop
in
sbb
test
call
or
test
loopne
das
sbb
into
sbb
sub
inc
mov
retf
fdiv
(bad)
jmp
shl
or
sahf
inc
push
es
fcmovnu
inc
push
(bad)
mov
test
or
xchg
cmp
inc
mov
arpl
cmp
cmp
div
mov
push
add
or
pop
imul
jno
sar
outs
fs
imul
movs
lods
cwde
cmps
sahf
pop
loop
add
pusha
inc
shr
js
cli
mov
xor
add
push
test
jle
es
mov
jl
cmps
cmp
ror
dec
push
mov
test
enter
xor
(bad)
lods
push
and
jno
cmp
imul
or
shl
ins
lods
jl
sahf
sbb
out
push
sti
jge
ret
ins
mov
jns
ss
int3
pop
cmp
les
cmp
sub
and
enter
xchg
imul
push
sub
push
fstp
cmp
lahf
stos
or
cmp
push
and
push
or
lods
ffreep
or
mov
(bad)
sar
stos
mov
add
inc
cmp
mov
push
xchg
dec
pop
fsub
xor
in
push
fsubr
(bad)
sub
sub
clc
add
cwde
outs
jle
arpl
mov
sbb
sbb
push
gs
push
sbb
push
(bad)
into
outs
fdivp
(bad)
cld
jo
push
xor
xor
mov
dec
pop
shl
loop
in
cwde
repz
test
mov
sahf
sbb
xchg
mov
add
call
push
xor
inc
dec
lahf
mov
and
cmp
or
mov
dec
inc
fmul
mov
iret
and
inc
ffreep
icebp
xchg
mov
scas
es
rcl
mov
(bad)
cmc
pop
fs
sub
in
out
jno
sbb
jno
bound
outs
jo
or
add
(bad)
push
sbb
and
cmp
jb
mov
sti
int
jno
mov
ds
(bad)
enter
call
ret
jecxz
clc
fidiv
adc
iret
movs
push
sbb
sti
setle
lahf
jnp
inc
call
in
stos
mov
das
push
sub
std
push
add
jnp
push
sub
rcl
xchg
and
cmp
dec
dec
add
dec
sbb
je
xchg
push
out
sbb
pop
lea
rol
jg
add
cdq
lds
popf
xor
adc
and
sti
rcl
or
repz
adc
ss
bound
repz
add
pusha
mov
mov
in
in
out
push
mov
pop
retf
or
dec
push
shl
xchg
xchg
into
mov
call
add
mov
xor
inc
in
out
ja
test
push
pop
pop
scas
cmp
mov
cli
pop
sar
ret
push
jmp
int
sub
div
sbb
dec
push
(bad)
out
ret
ror
add
fwait
cmp
fwait
inc
mov
mov
cmc
add
mov
loopne
loope
inc
pusha
rol
lahf
mov
scas
jle
jl
sub
pop
add
and
fisubr
pop
push
pushf
je
les
clc
cmps
push
cmp
dec
inc
(bad)
fwait
mov
jge
mov
fdiv
retf
cdq
or
in
jl
sti
mov
rol
or
cmps
push
ins
idiv
jbe
sub
fistp
outs
add
jmp
cmp
pop
loopne
hlt
inc
pop
mov
or
xor
call
sub
leave
stos
xchg
mov
push
push
in
jno
sbb
jmp
gs
or
mov
mov
daa
add
call
sahf
push
enter
or
lahf
sub
xchg
stos
enter
mov
not
jnp
jbe
lds
retw
mov
sbb
mov
mov
fdivr
pop
jb
sbb
jp
in
add
ds
outs
or
mov
jae
inc
push
jmp
dec
and
jmp
sar
test
arpl
fiadd
outs
in
push
and
lock
loope
fmul
outs
sahf
push
sub
addr16
push
movs
cli
leave
or
adc
sub
sub
inc
es
mov
add
pop
fcmovbe
dec
js
aaa
mov
xchg
lods
fist
dec
jb
lds
push
ret
sbb
test
mov
mul
pushf
shr
xchg
(bad)
cs
pop
inc
in
in
and
mov
fcomp
adc
into
mov
test
in
jne
xor
adc
add
push
fcomp
ror
cmps
je
imul
pop
shl
jl
cmps
pop
inc
jg
outs
outs
cli
xchg
(bad)
cli
out
sbb
ror
and
inc
xchg
es
int
xor
mov
call
repnz
bound
into
imul
jp
mov
cmps
retf
jge
push
movs
cmps
jp
out
fnsave
test
jg
and
scas
popf
popf
daa
in
retf
imul
popf
push
pushf
xchg
pop
sbb
(bad)
and
mov
icebp
cmp
loope
push
shr
(bad)
mov
adc
and
add
push
popa
into
ficom
loop
inc
xchg
repz
ss
iret
cmp
add
jne
xor
loopne
xor
lds
mov
mov
jo
cmp
addr16
pop
es
ret
je
and
sar
or
push
adc
xchg
addr16
mov
into
cmp
push
push
jp
sub
movs
jecxz
ficomp
pop
icebp
out
push
sbb
aam
cmp
add
cli
dec
scas
in
test
fld
xchg
inc
out
xchg
sbb
push
test
mov
or
sbb
sub
enter
ror
add
add
addr16
popf
pop
sbb
movs
ret
lock
repnz
xor
fiadd
jne
pushf
add
cmp
mov
xor
mov
imul
pop
mov
loopne
(bad)
sub
mov
adc
xor
jmp
ss
rcl
pop
ins
add
je
movs
jmp
repnz
jae
loop
movs
inc
cwde
xchg
cmp
iret
fdiv
fwait
mov
cmp
push
ficom
push
sbb
hlt
push
and
sub
bound
jmp
pop
dec
gs
sub
lea
sbb
add
lods
sbb
addr16
add
xchg
add
mov
loope
aas
xchg
adc
ror
fst
(bad)
repz
stc
arpl
pop
jnp
fsubr
mov
push
mov
sub
jae
pop
and
mov
inc
inc
aam
ja
ds
rcr
fnsave
ins
lahf
mov
cmp
jmp
gs
popa
loope
and
jmp
jmp
fcomip
sbb
pop
sbb
lahf
cmps
les
in
ror
adc
sub
xchg
inc
jno
imul
(bad)
pop
rcr
push
add
rol
int3
dec
sbb
pop
xlat
leave
dec
xor
repz
daa
adc
enter
(bad)
cmp
mov
pop
sbb
addr16
ins
mov
shl
sahf
stos
push
test
xor
cmc
scas
pop
jecxz
(bad)
push
sti
call
pop
in
or
test
test
add
sahf
cmps
push
out
stos
mov
cmp
and
add
jne
inc
adc
mov
arpl
not
cdq
add
scas
and
pop
mov
xor
xor
cmp
cmps
mov
or
(bad)
xchg
jge
lahf
pop
daa
jnp
fld
sahf
mov
xchg
jl
js
loope
mov
xor
adc
into
gs
ret
cwde
lea
adc
mov
lds
jge
shr
arpl
xchg
out
std
mov
inc
out
daa
sti
aam
mov
mov
sbb
mov
mov
leave
dec
dec
retf
ret
jmp
out
and
sbb
outs
pusha
and
les
fcom
pop
retf
sbb
push
dec
daa
mov
adc
cs
(bad)
cmp
stos
lea
push
aas
fnstcw
sbb
xor
ror
xchg
pop
retf
lods
pop
(bad)
jge
mov
inc
mov
xor
inc
jb
fwait
test
aaa
popa
mov
sti
dec
dec
xchg
xchg
dec
push
or
xchg
dec
aas
mov
and
and
pop
bound
and
cmps
cld
test
xchg
(bad)
shl
xor
dec
or
lds
xor
sbb
jle
test
inc
mov
sbb
inc
imul
sub
out
(bad)
fcomp
jecxz
popf
mov
and
loope
jmp
jl
mov
imul
imul
or
jl
in
and
jns
fstp
enter
rcr
test
mov
aas
add
out
nop
pop
std
xor
mov
sbb
mov
and
sar
test
sub
inc
stos
movs
test
and
jnp
inc
cmp
rcl
movs
hlt
in
xchg
or
pop
adc
cmp
dec
rol
jmp
popf
je
loopne
mov
pop
enter
ret
je
jo
adc
js
shr
adc
and
add
addr16
cmc
and
dec
pop
pop
neg
sub
dec
fs
sub
or
test
pop
test
addr16
pop
pop
mov
inc
xchg
xchg
std
mov
push
sub
lea
sub
pop
push
or
popa
add
push
mov
adc
xor
jle
(bad)
pop
arpl
add
adc
dec
cdq
retf
pop
push
ret
mov
stos
mov
push
aaa
pop
data16
hlt
cld
popa
add
imul
inc
into
push
mov
mov
dec
loopne
adc
out
std
iret
sbb
cmp
aad
movs
inc
add
cmp
icebp
adc
ins
sahf
pushf
adc
push
cdq
addr16
cmps
scas
mov
adc
jmp
and
es
or
pop
out
shl
mov
pop
ins
mov
sar
xor
movs
mov
xor
jp
mov
cmp
adc
mov
push
out
xlat
(bad)
push
mov
shr
pop
jmp
stos
mov
stos
(bad)
mov
loop
mov
(bad)
cmc
mov
dec
adc
mov
mov
popa
or
retf
or
popa
push
push
nop
pop
outs
es
mov
xor
out
pushf
pop
mov
loopne
js
mov
inc
xor
xor
dec
imul
cmps
adc
scas
jle
cld
mov
rcr
stos
cmp
mov
test
outs
mov
jnp
call
pop
(bad)
cmp
test
imul
sahf
fmul
jecxz
add
ds
in
(bad)
ins
push
xor
adc
or
cli
sbb
test
cdq
pop
pop
fwait
stc
aad
mov
aas
pop
mov
je
int
jmp
xlat
outs
fiadd
push
adc
or
inc
shl
pop
mov
cdq
push
xacquire
adc
test
cmp
mov
pop
das
pop
mov
mov
jecxz
fsubr
mov
inc
ins
ror
call
pop
popf
je
clc
mov
jo
inc
xchg
cmp
ins
add
fs
cmps
mov
mov
push
xor
loop
adc
add
mov
test
out
jl
call
sub
sar
pop
les
sub
and
jmp
loope
sbb
test
int3
mov
mov
test
ins
xor
ins
or
jae
popa
jl
jl
ret
fisub
(bad)
std
mov
sub
adc
pop
adc
pop
mov
or
hlt
mov
je
inc
and
aas
and
(bad)
fst
es
dec
iret
pop
and
jl
pop
je
jae
or
sbb
sbb
imul
ins
jmp
out
dec
adc
lods
fimul
sbb
rcl
adc
mov
shl
fist
pop
add
call
cwde
popa
les
out
push
cwde
xor
mov
xchg
mov
xor
movs
sub
jb
into
fcomp
jno
call
std
ficom
ror
xchg
sbb
jno
sbb
ror
(bad)
aad
xor
mov
cmp
mov
push
out
iret
les
push
rcr
aad
sub
enter
inc
push
push
jnp
adc
stos
scas
nop
rcr
iret
aaa
bound
mov
rcl
sub
pusha
pop
sbb
xchg
push
ins
mov
sbb
mov
xchg
daa
shl
mov
mov
mov
sti
imul
out
fbld
inc
cmp
out
retf
adc
dec
pop
pop
push
mov
loope
shl
test
jp
out
lds
xchg
mov
ins
fsubr
out
call
adc
jp
cli
xchg
aam
cmps
inc
icebp
cmps
xchg
cwde
pusha
outs
xchg
fs
popa
inc
(bad)
cdq
add
add
adc
cwde
inc
enter
(bad)
hlt
loop
pop
into
cmp
js
rcl
int
repz
out
inc
sbb
sub
leave
fstp
mov
fstp
xlat
mov
mov
jg
mov
inc
test
mov
pusha
das
jge
and
ds
out
jmp
mov
cmp
push
cmp
mul
int3
xor
push
ja
test
lahf
dec
jp
sub
fisub
push
sub
mov
jbe
push
jecxz
shl
mov
daa
or
sbb
or
ret
shr
push
movs
stc
and
(bad)
imul
lahf
dec
xchg
pop
iret
xchg
xchg
in
outs
add
jle
popf
out
xchg
lds
or
out
push
idiv
push
call
outs
cmp
xchg
test
dec
xchg
mov
push
add
fld
scas
aas
adc
sub
cmc
adc
scas
jmp
inc
push
inc
jecxz
or
int3
mov
int
nop
imul
xchg
dec
in
pop
sbb
xchg
jecxz
(bad)
ins
fld
test
dec
sbb
mov
fcmove
aas
pop
scas
cdq
fwait
mov
mov
jnp
nop
rcr
dec
(bad)
mov
push
int
jmp
sub
push
sub
mov
mov
mul
rcl
xor
cs
mov
mov
iret
sub
push
pop
inc
out
call
inc
fdiv
mov
xor
pop
mov
mov
mov
push
push
jnp
mov
into
add
lock
dec
xor
cmp
adc
je
test
mov
sub
(bad)
jae
xchg
mov
ds
js
inc
push
idiv
sbb
jno
in
pop
inc
lahf
cld
push
cmc
dec
out
rcl
hlt
jo
pop
lods
scas
mov
sub
pop
ins
inc
mov
retf
leave
fwait
cmp
inc
mov
scas
fs
sar
mov
scas
lock
loopne
jns
in
(bad)
imul
mov
call
push
xor
jge
xchg
mov
pop
mov
mov
fisubr
arpl
push
add
inc
mov
test
jne
ror
pop
xchg
mov
arpl
jne
adc
mov
cli
enter
retf
mov
push
inc
push
dec
loop
push
push
dec
imul
push
jmp
arpl
fnsave
out
(bad)
test
adc
or
xchg
in
nop
push
retf
dec
cli
imul
ret
xchg
and
les
repnz
cmp
pop
cmp
ds
xor
leave
xchg
call
mov
lods
aas
jg
mov
xchg
mov
movs
ja
jb
outs
fs
jmp
dec
and
imul
xchg
xchg
push
and
mov
xchg
dec
sbb
mov
and
dec
mov
add
push
push
mov
movs
push
imul
jmp
mov
push
iret
inc
neg
mov
adc
dec
nop
call
push
daa
jne
je
call
inc
ins
push
daa
in
mov
or
xor
and
fimul
shl
mov
sahf
shr
push
stos
je
mov
inc
jg
jb
sub
dec
push
pop
outs
jecxz
call
sbb
cmp
push
sbb
sub
adc
call
das
xchg
cwde
aaa
ins
sahf
or
fistp
sbb
call
xchg
ret
mov
inc
not
adc
jne
sub
jge
sub
dec
cli
addr16
lea
inc
cmp
xor
iret
xor
das
mov
retf
cld
addr16
adc
(bad)
jmp
cmps
jbe
push
jbe
loopne
xchg
mov
adc
(bad)
pop
xchg
mov
std
or
jmp
xchg
mov
aam
loop
enter
push
xchg
sub
mov
ss
jmp
dec
fidivr
xchg
mov
mov
out
call
out
daa
and
ins
or
mov
dec
jle
test
pop
xor
fwait
jnp
and
pop
fimul
js
pop
cdq
ds
pop
ins
nop
stos
inc
jnp
mov
call
dec
pop
pop
jnp
shr
hlt
rol
cmp
retf
js
fisub
and
xchg
sbb
jmp
and
cs
push
and
nop
imul
and
dec
clc
call
inc
mov
jbe
mov
push
xchg
call
stos
cmp
jns
imul
pop
mov
adc
xor
imul
cmps
pop
stos
nop
sub
ins
test
fcom
jnp
daa
fcomp
idiv
add
shl
jno
test
jns
sub
ds
arpl
xchg
loopne
imul
inc
icebp
stos
inc
in
push
or
mov
sar
popf
lea
add
pop
imul
daa
retf
adc
in
inc
sti
cmp
sbb
mov
sbb
jmp
cdq
or
mov
jp
rcr
push
aas
inc
xor
hlt
mov
movs
inc
dec
cmps
adc
cli
sbb
jp
inc
ds
sbb
sub
mov
jmp
push
outs
xor
jmp
mov
xchg
in
dec
xchg
das
les
mov
movs
pop
push
shl
hlt
rol
jb
xor
stc
out
mov
es
mov
add
pushf
aam
call
clc
jg
xlat
enter
inc
sub
xor
cmp
(bad)
idiv
mov
xlat
adc
mov
jne
test
fcmovu
(bad)
sti
mov
and
ss
pop
hlt
scas
ret
repnz
jnp
pop
mov
xchg
arpl
mov
test
cmp
imul
fmul
sbb
jbe
test
out
movs
mov
mov
iret
adc
xor
pop
popa
xchg
push
retf
jmp
adc
sbb
and
test
or
aas
pop
sbb
cmp
adc
dec
loopne
repnz
sbb
mov
jns
enter
ret
aas
dec
pop
mov
mov
mov
lahf
lds
outs
dec
adc
cdq
push
push
xor
lahf
add
mov
pop
mov
mov
mov
mov
das
scas
xchg
add
leave
fisttp
sar
lock
and
in
cmps
rcl
dec
scas
loope
jmp
adc
adc
or
cmc
repz
mov
(bad)
sahf
(bad)
sbb
popf
jo
mov
mov
push
out
enter
jmp
sbb
sub
fild
or
adc
lahf
adc
push
das
sahf
imul
mov
les
cmp
cdq
push
das
xchg
mov
inc
inc
(bad)
mul
dec
mov
in
sti
jmp
mov
mov
or
lods
cmp
stos
adc
jae
stos
and
sahf
in
stos
xor
les
xchg
cmp
in
movs
inc
mov
jb
test
add
outs
shl
call
movs
mov
pop
add
scas
shr
lods
int3
dec
cli
gs
jmp
push
fidivr
and
imul
pop
push
and
inc
push
bound
aad
mov
mov
dec
fld
xchg
sub
sbb
mov
(bad)
sbb
fstp
push
cmp
call
pop
sbb
je
test
shr
add
jne
pop
loopne
cmps
les
push
xlat
fdivr
je
jae
js
and
xchg
ja
push
rcr
fcomp
sub
pop
scas
daa
nop
dec
sbb
or
int3
mov
mov
ret
xchg
pop
push
int
mov
mov
xchg
mov
mov
lahf
ror
jns
and
aaa
in
outs
int3
mov
daa
dec
lock
test
mov
mov
cmp
cmp
fwait
call
jp
push
lea
adc
aaa
stos
cli
adc
rol
je
sub
clc
xor
cmp
(bad)
or
mov
enter
into
outs
fisttp
shl
retf
nop
ret
jbe
sub
lock
call
test
dec
jmp
jne
or
xchg
sbb
mov
fnstcw
fsubr
fnstenv
movq
mov
or
jg
inc
xor
mov
test
add
sbb
ret
shr
shr
xor
jmp
out
jo
outs
cmp
stos
int3
repnz
shl
cmp
push
hlt
mov
lea
in
pop
fwait
sub
popa
dec
test
outs
(bad)
push
fnstcw
sbb
xor
ds
not
imul
lods
js
inc
jne
cmovs
push
adc
jbe
addr16
pop
cmp
shl
mov
cmps
cmp
idiv
lods
icebp
or
xor
inc
adc
xchg
push
je
mov
inc
push
dec
mov
jns
push
mov
out
ins
dec
mov
ja
sbb
(bad)
test
adc
stc
push
mov
pop
push
or
test
or
adc
pop
pop
xadd
inc
test
push
xchg
jbe
xor
push
mov
pop
ficomp
dec
adc
xchg
cmp
xor
dec
xchg
and
cmp
sub
das
std
or
cmc
inc
xor
gs
fnsave
mov
cmp
inc
ins
inc
shl
jne
jge
xchg
sbb
movs
inc
lds
jo
aam
outs
(bad)
dec
pop
mov
push
push
into
jecxz
jae
dec
add
jbe
adc
mov
not
pusha
lods
xchg
lahf
in
mov
and
ins
mov
js
loope
int3
pop
xor
cmc
in
ins
(bad)
dec
inc
adc
xchg
movs
push
test
pop
call
out
pop
inc
and
addr16
out
fs
xchg
mov
inc
mov
jb
sar
imul
in
in
les
in
push
sub
xchg
sbb
enter
add
cmp
sbb
mov
adc
cmc
inc
dec
popf
push
shl
das
aaa
jo
lods
jge
add
jmp
jecxz
mov
jae
repz
push
mov
or
in
xchg
xchg
pop
out
and
popf
xchg
(bad)
movs
test
and
in
dec
lods
(bad)
data16
xchg
jecxz
pusha
cdq
xchg
stos
shr
shr
xchg
xchg
(bad)
adc
int3
lods
pushf
int
adc
shr
mov
stos
sub
dec
and
pop
fdiv
rcr
cdq
jo
or
sti
pop
sbb
cmp
arpl
or
enter
pop
push
out
cmps
ret
aas
cdq
mov
clc
pop
cmc
add
retf
(bad)
pop
addps
mov
(bad)
mov
xchg
les
and
push
leave
stos
mov
inc
push
or
or
add
pushf
pop
imul
dec
lds
int
ret
stos
push
lds
pop
or
push
push
arpl
dec
adc
mov
jmp
or
sub
popa
test
pusha
mov
push
xor
push
sbb
xchg
arpl
mov
movs
ja
mov
jg
cmps
(bad)
in
pop
iret
call
out
fild
sbb
rol
(bad)
popf
not
dec
shr
rcl
mov
xor
sub
in
xchg
mov
aad
xor
sar
mov
shl
jg
push
and
jecxz
out
inc
cmc
sti
dec
je
push
xor
sub
xor
jmp
fldcw
sub
sar
mov
dec
jge
sub
mov
sub
push
retf
pop
xor
pop
sub
adc
and
mov
imul
jge
fsubr
(bad)
sub
and
neg
aas
inc
les
in
lods
add
jnp
dec
ffree
xlat
movs
mov
adc
addr16
test
add
shl
xor
sub
movs
sub
lock
test
mov
(bad)
sahf
or
js
ins
jne
stos
jmp
jne
mov
pop
pop
jnp
aam
cmp
mov
xchg
fild
or
cmp
cmp
sub
mov
jno
cmc
and
push
jnp
mov
repz
jns
bound
push
daa
pusha
mov
cmp
lods
fstp
jge
test
rcl
or
in
mov
movs
ins
jmp
popf
push
adc
stos
test
nop
sbb
push
aas
inc
mov
sub
(bad)
dec
inc
movs
mov
bound
cmp
sbb
pop
cmp
inc
aaa
out
mov
into
inc
mov
out
jne
dec
cmp
cmps
test
fnsave
outs
mov
sbb
push
xchg
out
inc
pop
mov
movs
push
push
(bad)
xchg
xchg
push
mov
repnz
pusha
push
xor
pop
das
pop
pop
mov
inc
outs
adc
mov
test
adc
js
call
add
dec
mov
push
in
jge
dec
retf
sub
(bad)
jecxz
(bad)
mov
pop
cmps
ins
call
js
push
and
or
call
iret
adc
push
mov
test
inc
jge
lahf
cwde
lea
push
and
in
push
test
adc
data16
mov
jns
jmp
int
inc
xor
mov
loope
mov
call
xlat
add
sub
sub
cmp
and
push
das
xchg
sub
rcr
bound
push
retf
jb
mov
(bad)
push
icebp
inc
test
lods
adc
add
loopne
pop
pop
into
hlt
rcr
out
mov
cmc
and
imul
sbb
pop
add
outs
stos
test
cmc
and
adc
(bad)
imul
jge
ins
jecxz
push
mov
and
je
ret
mov
call
mov
test
aas
mov
je
loop
jnp
cld
xor
movs
and
jns
iret
jp
loope
jno
fwait
mov
inc
cli
add
cmc
sub
outs
shl
push
daa
cdq
pushf
jmp
stc
adc
sub
aam
jae
mov
mov
sti
rol
mov
add
cmps
and
fwait
lock
pop
sbb
mov
xchg
les
cmc
lahf
fisubr
jb
jp
mov
mov
lods
sub
cmp
fbstp
jl
or
addr16
fucom
push
mov
fsubr
or
adc
adc
mov
je
data16
jge
inc
mov
inc
icebp
adc
enter
mov
mov
mov
or
test
call
ins
sbb
inc
jge
test
in
aad
push
sbb
into
inc
(bad)
(bad)
jecxz
stos
xchg
adc
jp
mov
jecxz
cld
mov
add
outs
in
stos
or
pop
ins
xchg
mov
int3
jne
pop
mov
loope
iret
xor
mov
and
fisttp
jbe
inc
fst
inc
mov
scas
dec
dec
xchg
out
call
jo
in
fcomp
adc
xor
xlat
in
mov
out
dec
fstp
out
enter
adc
and
xchg
pop
push
in
inc
mov
stos
(bad)
fidiv
lods
mov
pop
and
mov
adc
pop
leave
mov
adc
les
ins
test
neg
inc
pop
cwde
jmp
jnp
xor
test
addr16
xchg
cmp
cmp
xor
arpl
adc
sbb
popf
icebp
mov
mov
daa
jne
call
sahf
sub
xor
mov
cli
jne
jg
pop
push
and
adc
jnp
push
pop
shr
daa
ds
jo
dec
push
ins
mov
xchg
aas
mov
fptan
popa
ret
out
aad
xchg
int3
test
push
std
imul
or
imul
mov
fnstsw
out
adc
push
aaa
hlt
adc
(bad)
or
dec
call
cmp
loop
inc
and
jnp
and
push
dec
push
rcl
lds
inc
in
leave
popa
cmc
jg
jp
sbb
sub
dec
sbb
ja
mov
pop
dec
pop
imul
or
adc
push
sbb
test
fwait
lahf
pop
lods
ja
push
xchg
retf
(bad)
aad
jmp
add
lahf
pop
mov
ss
and
sbb
sub
ret
pop
adc
or
je
inc
add
in
xlat
push
arpl
cmp
repz
fbld
hlt
and
fidivr
call
add
retf
cld
retf
gs
mov
idiv
ss
xor
jns
icebp
cmc
mov
jmp
ror
xchg
shr
int3
cmp
hlt
inc
jecxz
jbe
pop
xchg
loop
mov
push
cwde
outs
fmul
jg
inc
sbb
jge
nop
mov
mov
cmps
jecxz
jg
sbb
mov
xchg
adc
rcl
dec
add
push
fwait
push
mov
cmc
xor
aad
loopne
xchg
jmp
xor
cmp
fistp
xor
jno
int
push
jbe
xchg
xor
stc
dec
xor
test
or
push
cmp
mov
loop
xchg
sbb
rol
cld
jp
or
and
imul
jno
and
jb
and
sub
pusha
ret
mov
sub
outs
sub
dec
fidiv
maskmovq
mul
ficom
and
leave
(bad)
aam
test
aam
mov
cmp
fdivr
les
call
movs
push
jge
mov
int
out
nop
mov
imul
je
cmp
adc
lock
shl
movs
push
loop
test
xor
xchg
and
dec
retf
repnz
stc
cmps
cmps
dec
js
mov
inc
push
(bad)
jae
mov
in
lea
jnp
outs
movs
popf
fld
loopne
or
ficom
call
or
and
int
xor
jmp
xor
(bad)
stos
out
stos
and
or
cmps
addr16
cmps
xor
add
and
cmps
mov
mov
sbb
mov
push
ret
lea
fild
add
test
ficom
xor
or
dec
cld
push
arpl
xchg
test
and
xor
mov
repz
(bad)
or
sti
clc
push
or
sbb
out
jns
shl
(bad)
in
cdq
xchg
data16
add
sub
xor
jecxz
cmps
test
xor
repz
mov
jmp
xor
mov
xor
inc
stos
or
inc
outs
add
outs
inc
mov
out
xchg
xor
je
int
cs
lea
call
inc
push
mov
repz
or
out
stos
lahf
mov
xor
jno
push
out
outs
sbb
fbld
test
movs
push
xor
or
jnp
mov
fcom
jl
ss
mov
xchg
inc
jmp
nop
mov
jo
ret
out
retf
xchg
outs
cmps
xor
dec
ret
mov
outs
pop
dec
mov
aaa
mov
xor
inc
retf
adc
fnsave
pop
add
push
push
or
xchg
ja
adc
dec
jbe
add
xor
mov
xor
mov
xchg
xor
das
xor
and
out
mov
movs
pop
add
dec
push
fstp
mov
add
jecxz
fmul
leave
push
cld
repz
enter
fs
je
xor
lahf
or
jp
dec
add
push
inc
mov
jae
pop
and
mov
enter
push
xor
inc
push
les
add
fbld
mov
lahf
ds
repz
and
pop
(bad)
fld
cmp
fidivr
inc
sub
dec
fsub
mov
mov
dec
neg
lods
xor
jl
cmp
inc
inc
jmp
out
popf
and
repnz
nop
inc
daa
jno
pop
call
dec
or
fisubr
add
nop
fdiv
call
mov
rcl
shl
stos
inc
mov
shl
hlt
popa
fstp
push
xor
lahf
sub
ds
rcr
(bad)
mov
mov
arpl
(bad)
jbe
sub
dec
(bad)
data16
mov
dec
cld
jno
xlat
outs
addr16
leave
dec
outs
(bad)
mov
out
out
or
cmp
cmp
ss
adc
call
popa
xor
lea
jge
xchg
(bad)
fucomi
stos
mov
cs
lods
jg
cmp
adc
ror
xchg
imul
jo
inc
sahf
es
int3
hlt
mov
jl
pop
lahf
adc
and
pop
push
mov
gs
daa
xchg
cmp
fistp
cmp
mov
fdivr
inc
in
lock
add
adc
dec
and
loope
(bad)
adc
sbb
inc
or
sbb
lods
fmul
in
mov
into
mov
hlt
out
push
call
jg
int
imul
cmp
cmp
lds
sbb
push
dec
mov
fwait
pusha
push
imul
call
pop
int3
ins
adc
cs
xchg
leave
arpl
sub
test
mov
add
cmp
sahf
cmps
scas
loop
xchg
push
fidivr
and
std
mov
jl
scas
xchg
jnp
xor
data16
or
loopne
xchg
and
mov
pop
scas
clc
lea
xchg
dec
dec
mov
adc
push
stos
pop
out
add
frstor
mov
and
es
shl
(bad)
adc
in
xchg
and
jns
sbb
cdq
ja
adc
mov
jg
push
sub
mov
test
add
mov
or
xor
xchg
ins
pop
in
xlat
aaa
push
cmps
lods
mov
aam
daa
dec
scas
push
mov
ins
sahf
mov
xchg
ss
mov
jg
mov
jnp
iret
push
rcl
imul
je
push
loopne
shl
pop
out
fsubr
cmps
fucom
test
addr16
or
and
mov
das
jb
or
cmp
test
push
fimul
mov
adc
sub
sbb
sbb
addr16
push
pop
fdiv
ins
mov
out
fistp
mov
sub
add
neg
outs
nop
adc
push
mov
pusha
daa
movups
leave
test
or
popa
das
scas
icebp
push
push
cmp
inc
mov
mov
cwde
test
retf
clc
pop
cmp
lods
sub
in
cmp
jge
xor
and
stc
icebp
jmp
dec
dec
push
mov
or
mov
leave
icebp
stos
out
loopne
dec
xlat
sbb
scas
and
adc
ds
jecxz
out
scas
and
jno
int3
aaa
scas
movs
das
inc
and
mov
psllw
fcomp
inc
sti
xor
mov
mov
push
lock
add
xor
(bad)
adc
cmps
pop
mov
add
(bad)
sub
add
scas
xor
fstp
sbb
dec
aas
sub
nop
cli
cmp
inc
jno
iret
retf
inc
out
jmp
pop
mov
movntps
mov
std
jb
or
and
cmp
sbb
idiv
push
dec
xor
add
xor
les
nop
xlat
les
cld
data16
or
push
or
int
push
xchg
test
retf
in
fisub
add
dec
push
pushf
and
jge
aad
pop
and
add
daa
arpl
jno
sub
pop
cmp
xchg
fiadd
and
sbb
cli
mov
ret
mov
lods
and
in
jmp
mov
inc
pop
aad
cs
mov
in
dec
sub
pop
xor
mov
das
dec
or
(bad)
int
and
add
cmp
push
mov
scas
dec
ds
push
mov
scas
dec
xchg
stos
test
mov
cld
iret
loopne
das
loope
push
into
push
ret
sbb
test
mov
scas
retf
lods
jge
dec
dec
xor
push
sub
inc
int
cmp
mov
or
jnp
popf
lods
dec
fst
test
icebp
retf
xchg
cld
jl
or
out
outs
jbe
aad
and
cli
dec
bswap
jns
push
xchg
sbb
xchg
push
scas
mov
iret
adc
sbb
mov
test
cmp
fisub
mov
jae
std
jmp
jg
(bad)
movs
pushf
push
test
mov
loope
jno
xchg
sbb
fsubr
rcl
es
out
or
test
pushf
mov
cmp
jp
movs
mov
ret
call
es
jge
pop
jmp
fidivr
cmp
xor
push
jno
fdiv
dec
into
test
sbb
jmp
ins
lahf
cdq
dec
sub
(bad)
cmc
gs
shr
pop
pop
cwde
or
repz
int
add
adc
xchg
ret
xchg
sub
loop
aad
(bad)
jmp
jmp
stos
int
lds
inc
push
test
inc
std
inc
call
or
add
aas
jns
(bad)
das
mov
out
mov
or
pop
xor
into
inc
jmp
adc
sti
or
sbb
(bad)
imul
push
test
div
lods
xor
mov
(bad)
pop
retf
mov
fsubr
adc
nop
rcr
movs
movs
inc
inc
mov
mov
shl
js
adc
mov
shr
(bad)
jae
popa
inc
sbb
jo
inc
rol
(bad)
mov
leave
arpl
jns
push
push
cmps
fst
xchg
xor
adc
retf
and
add
sar
sahf
and
clc
mov
xchg
xor
mov
inc
xor
rcr
mov
push
stc
pop
jp
jns
idiv
sbb
sbb
pop
out
cmp
xchg
xor
dec
adc
push
mov
push
mov
dec
xchg
movs
outs
jae
add
call
cdq
and
sub
inc
jbe
mov
xchg
dec
mov
data16
ss
mov
enter
cmps
aaa
mov
ins
adc
inc
dec
sub
cmp
push
stos
ret
push
dec
ja
add
in
xor
pop
sub
(bad)
(bad)
sti
jle
pusha
data16
and
jmp
mov
cmps
ins
cwde
inc
test
lahf
ds
jb
test
ja
dec
xchg
(bad)
and
popf
xor
or
jge
out
daa
sbb
mov
mov
outs
mov
mov
daa
into
test
inc
or
loop
sub
ficom
(bad)
fimul
cmps
in
dec
into
pop
pop
in
inc
cwde
xor
mov
xor
xchg
xchg
sub
shl
in
jo
mov
add
sbb
mov
popf
cmps
std
xor
shl
push
xor
loope
ret
xor
push
push
ins
cwde
dec
inc
mov
movs
(bad)
mov
call
mov
jb
stos
cmc
in
inc
ret
jno
ss
push
cdq
in
sti
ss
call
scas
call
add
adc
mov
sti
inc
call
dec
pop
adc
mov
sub
into
adc
sbb
sub
repz
add
cmp
mov
xor
stos
adc
pop
sub
lods
jge
inc
arpl
enter
out
in
das
xchg
jecxz
cmp
(bad)
aad
mov
addr16
xor
je
lahf
fadd
push
or
test
cli
ret
in
leave
cwde
mov
sub
sbb
test
xchg
scas
jbe
fdivp
jae
retf
xor
pusha
hlt
(bad)
push
dec
div
push
and
addr16
xor
shr
rol
cmp
mov
dec
scas
cmps
int
dec
xchg
mov
mov
call
stos
mov
into
not
in
cwde
jns
inc
or
lods
dec
push
xchg
dec
push
js
xor
adc
in
cmps
addr16
pop
adc
out
mov
dec
add
gs
retf
(bad)
in
jp
sub
es
addr16
jmp
jne
push
sti
pop
cmc
cmps
xchg
pusha
and
outs
sbb
mov
aam
mov
push
pop
cs
in
dec
lock
sub
cmp
out
stos
mov
mov
mov
inc
xchg
xchg
inc
jmp
mov
movs
add
jle
adc
addr16
arpl
jnp
dec
repz
jmp
or
(bad)
inc
loopne
add
dec
add
fistp
scas
stos
iret
(bad)
mov
loop
fcmovnb
push
dec
repz
xor
xchg
sbb
jp
inc
jl
pop
int3
sbb
js
mov
addr16
xchg
mov
jg
clc
cmp
fbstp
adc
shl
aam
icebp
out
frstor
in
and
mov
ds
jno
aad
int
jbe
jl
mov
addr16
xor
mov
cmp
push
(bad)
shl
mov
pop
xchg
or
rcl
dec
mov
ds
cmp
mov
jmp
(bad)
mov
fdivrp
cmc
and
and
dec
imul
stos
dec
pop
icebp
ret
add
dec
or
or
dec
pop
pop
aaa
pop
xchg
pop
pop
test
cli
mov
mov
fst
(bad)
out
xlat
call
and
adc
cwde
fisub
call
mov
gs
dec
push
add
push
out
mov
stos
adc
nop
push
mov
test
enter
hlt
jae
push
fstp
sbb
int
mov
test
inc
pop
ins
into
xchg
inc
fldcw
rol
ds
rcr
clc
out
or
add
mov
lods
dec
inc
jmp
push
adc
aam
pop
sbb
mov
call
cmp
fcomp
mul
das
stc
je
lds
scas
cld
js
addr16
dec
push
adc
out
inc
fsubr
pop
(bad)
sbb
loopne
stc
les
jbe
adc
adc
pop
jns
repnz
imul
(bad)
ja
int3
aad
mov
ret
mov
adc
mov
sbb
cli
xchg
inc
test
fnstsw
aaa
imul
mov
jmp
jo
pop
clc
dec
adc
shr
mov
sbb
cli
sub
shl
add
lds
sub
add
cmp
not
push
or
sub
push
jp
ds
pushf
(bad)
(bad)
(bad)
sbb
ret
fsub
movs
mov
pop
mov
pop
push
fdiv
xchg
pop
push
test
mov
adc
pop
movs
sbb
ds
leave
adc
adc
clc
es
jae
cs
cmp
pop
mov
jbe
out
sub
push
imul
push
mov
aad
adc
in
push
pop
pmulhw
pop
(bad)
cmp
inc
push
mov
xchg
and
div
xchg
jge
pop
xchg
gs
mov
sub
js
push
inc
cmp
call
or
jge
xor
lods
mov
push
pop
push
mov
dec
(bad)
or
jmp
xor
push
xchg
pop
and
add
dec
jl
bound
addr16
test
sbb
jl
push
push
mov
mov
sub
xor
mov
cmps
and
mov
sahf
cld
(bad)
repnz
xchg
sti
jle
sub
sbb
(bad)
cld
and
mov
mov
dec
mov
mov
mov
lea
xor
aas
shl
popf
into
add
(bad)
fistp
mov
mov
xchg
out
or
cli
out
sar
mov
xchg
sbb
ins
xchg
hlt
pop
fs
adc
daa
aaa
ss
cdq
dec
xchg
(bad)
into
enter
outs
loopne
and
cdq
pop
cmp
xchg
jmp
repnz
fiadd
mov
pop
push
popf
mov
cmps
push
hlt
into
mov
pushf
loopne
mov
dec
fistp
shr
jb
leave
inc
and
(bad)
shl
cld
xor
(bad)
xchg
adc
xor
lock
cmc
sub
jns
(bad)
clc
sbb
in
int3
mov
push
pop
int
jmp
xchg
in
cmps
addr16
fdivr
cmp
dec
loop
mov
out
cmp
imul
mov
xor
test
jmp
sub
mov
cmp
cmp
retf
(bad)
jp
and
push
fmul
in
push
mov
adc
jmp
aad
repz
rol
fstp
sbb
jnp
xor
or
(bad)
data16
mov
aad
and
jo
imul
js
mov
jmp
and
std
mov
lahf
ret
pop
push
mov
jo
mov
mov
in
rol
pop
call
(bad)
shl
add
cmp
ins
adc
fldcw
mov
rol
imul
ins
jl
mov
adc
scas
shl
jmp
jno
shl
(bad)
jmp
(bad)
push
mov
fidiv
cmc
jb
inc
test
outs
pushf
jns
fwait
xchg
test
imul
cli
in
sub
fwait
push
call
cwde
pop
dec
(bad)
fcom
mov
ret
push
int
push
and
sbb
add
xor
enter
test
adc
js
adc
(bad)
push
and
jecxz
xchg
xchg
push
or
ds
push
cmp
add
test
adc
mov
out
lds
cmp
in
xchg
push
ins
or
sub
pop
test
popa
ds
xlat
not
test
push
stos
or
mov
mov
or
or
fisubr
cmp
mov
dec
add
mov
jae
je
adc
mov
call
dec
lods
push
or
add
adc
xchg
sahf
xor
push
jae
(bad)
xchg
xor
xchg
mov
or
loope
ret
aam
lea
inc
mov
pop
(bad)
cs
sti
pop
cmp
pop
ret
adc
xor
pop
imul
mov
es
jmp
stos
pusha
add
fidivr
sbb
retf
inc
jl
sub
int3
cwde
bound
push
cmp
pusha
jns
add
sbb
add
and
add
push
push
(bad)
loopne
sub
loope
clc
(bad)
mov
and
xor
xor
aad
and
xchg
xchg
add
mov
fxch
sub
push
jmp
jge
dec
mov
push
inc
jae
pop
push
and
mov
and
jmp
mov
aad
and
push
xor
mov
or
sbb
sar
aad
loop
mov
mov
fwait
sub
sub
in
inc
and
or
sub
xchg
cdq
(bad)
out
icebp
dec
(bad)
sbb
cdq
fcmovbe
mov
xchg
lods
xchg
dec
xchg
imul
sbb
(bad)
int
cdq
fld
jnp
imul
cmps
(bad)
std
xor
sub
inc
mov
jae
inc
pop
into
sar
retf
add
sti
mov
test
ins
mov
xlat
aaa
out
pop
mov
adc
and
and
fs
imul
cs
mov
cwde
aas
(bad)
mov
pushf
in
cmp
cmc
cmp
mov
sub
dec
ds
inc
mov
push
aas
std
aad
inc
push
pop
mov
push
sahf
icebp
mov
inc
hlt
add
mov
js
mov
fwait
xor
das
jp
sti
iret
sbb
or
aaa
ins
xor
jbe
(bad)
adc
xor
cmp
into
mov
inc
pop
mov
jae
fsubr
sti
mov
addr16
mov
mov
xchg
fsub
xchg
(bad)
push
sub
std
imul
fst
cld
dec
or
mov
mul
je
jbe
lds
jge
and
sub
mov
ja
push
mov
mov
mov
dec
jp
mov
leave
cs
mov
sub
test
push
push
xchg
sub
pop
xchg
jmp
jno
lods
mov
inc
ins
push
sub
fisttp
popa
mov
pusha
jle
pop
retf
adc
mov
test
dec
xor
dec
or
lods
or
outs
jecxz
xchg
sub
into
pop
cdq
retf
retf
push
push
mov
add
adc
sub
lds
mov
mov
add
push
mov
xchg
int3
xchg
xor
mul
jb
dec
gs
adc
mov
pop
movs
outs
fnstenv
int
(bad)
jp
xchg
pop
stos
mov
pop
xchg
les
in
pop
imul
mov
movs
movs
pushf
jg
fcmovb
(bad)
arpl
xor
lea
sub
into
xchg
dec
dec
adc
add
push
push
clc
xchg
inc
and
mov
aam
cwde
pop
pop
out
xchg
leave
jecxz
gs
mov
sar
cdq
stos
or
aaa
jb
bound
push
outs
xchg
sbb
cmp
cmp
pop
xor
xchg
lods
xchg
mov
dec
cdq
jb
in
sbb
or
(bad)
movs
(bad)
adc
jp
loop
dec
dec
cmp
imul
cmc
test
mov
pop
je
pusha
push
dec
inc
in
je
or
fild
xchg
sar
pusha
out
sub
call
adc
pop
push
repnz
aam
mov
xor
je
std
xor
into
in
add
sbb
div
jnp
push
hlt
in
xchg
xor
and
pop
stos
pop
mov
or
retf
test
inc
sti
fs
(bad)
inc
mov
movs
jb
pop
mov
dec
push
or
adc
mov
dec
or
mov
push
es
jl
or
mov
test
or
retf
sub
cmp
sbb
push
xchg
inc
retf
(bad)
shr
dec
rol
lahf
movs
xchg
mov
jp
adc
into
xchg
mov
adc
icebp
outs
movs
adc
out
sub
je
sub
cs
add
sbb
xor
add
idiv
pop
add
dec
sti
fwait
dec
lea
aas
out
add
out
xor
pop
xchg
(bad)
pop
cwde
or
lock
push
fld
mov
imul
gs
ret
adc
cmove
xchg
popa
imul
mov
or
push
sar
out
ins
call
nop
aad
shr
pop
pop
dec
add
add
pop
mov
cmp
pop
adc
mov
xor
mov
jmp
test
mov
sbb
mov
dec
popf
data16
sub
pop
clc
sbb
lods
rcl
cs
loope
push
mov
ja
outs
out
sahf
jno
arpl
cmp
jle
jmp
adc
jnp
dec
lock
fdivr
jne
inc
lds
jae
and
loopne
out
inc
fnstsw
pop
lahf
pop
pusha
add
mov
jl
call
and
xchg
loope
mov
hlt
jo
out
sbb
mov
xchg
retf
iret
push
pop
mov
popf
popa
mov
or
adc
cmps
loopne
aas
int3
lahf
test
cmps
dec
push
ss
pop
or
mov
cmp
addr16
add
adc
jecxz
cmp
cmp
jbe
mov
mov
mov
movs
jb
and
or
jne
mov
jae
das
in
imul
enter
add
mov
inc
mov
mov
inc
adc
imul
clc
add
call
jp
and
cmovs
mov
lods
outs
movs
or
sbb
xor
cs
cdq
fwait
ins
cs
push
int3
inc
(bad)
repz
and
cmp
sbb
mov
cli
pop
cmp
and
stc
mov
xor
cmps
push
or
cli
jp
mov
adc
lds
mov
inc
lods
pushf
jecxz
mov
mov
jb
and
and
fiadd
mul
loope
push
mov
les
test
ss
leave
jb
or
addr16
ss
mov
cld
push
adc
fldcw
test
mov
stos
push
xchg
or
mov
push
and
dec
shl
cwde
std
inc
popa
pop
arpl
stc
xchg
dec
gs
popf
sub
xchg
fcom
fnstenv
(bad)
js
cmp
fisub
cmp
jl
repz
dec
push
mov
lods
sar
adc
pop
ins
daa
dec
jecxz
(bad)
cmp
cmp
aam
xchg
pop
mov
jmp
loopne
(bad)
lahf
xor
push
(bad)
pop
push
pushf
fld
xor
dec
sub
mov
jmp
push
out
add
cld
ins
push
cmp
xor
mov
jb
and
out
xlat
cmc
and
ja
repnz
addr16
test
and
inc
iret
xor
imul
xchg
ror
jne
inc
ds
ins
and
cmp
mov
mov
or
or
int3
adc
push
pusha
sahf
add
mov
call
(bad)
sub
rcl
xchg
sbb
aad
test
xor
adc
pop
dec
and
push
push
add
fnstsw
retf
add
shl
clc
push
pop
cdq
and
pop
loope
pop
dec
std
pop
daa
fisttp
pushf
popa
scas
rcl
adc
(bad)
pop
add
fwait
push
(bad)
pop
pop
xlat
or
popf
sub
leave
pop
shr
stos
test
add
(bad)
std
add
mov
push
ret
fdivr
ret
int3
div
imul
out
mov
pop
test
mov
and
out
mov
dec
aas
and
pop
mov
mov
fucomp
sub
or
fnstsw
inc
pusha
in
mov
call
std
(bad)
mov
jl
jmp
xchg
inc
push
adc
dec
mov
add
mov
mov
(bad)
adc
sbb
cmp
sar
in
out
repz
xor
call
loope
sub
push
lahf
xchg
mov
xor
xor
ret
cwde
mov
retf
mov
mov
fcmovu
jecxz
xor
xlat
mov
fsubr
lds
cld
mov
mov
cld
jmp
push
mov
fst
jb
dec
push
dec
pop
adc
addr16
sbb
sub
sbb
mov
mov
sub
popf
(bad)
imul
jo
test
imul
ins
lahf
imul
pandn
ret
fistp
xor
adc
aaa
mov
mov
sub
int
jns
loopne
(bad)
jne
mov
push
aad
movs
add
addr16
push
pmulhw
inc
pop
xchg
imul
xor
inc
mov
ins
xchg
sub
test
or
test
fs
inc
jmp
ins
scas
lock
popa
xchg
outs
or
xchg
sub
add
std
xchg
inc
jge
dec
scas
jno
sub
mov
cmp
leave
aaa
mov
ins
dec
dec
adc
idiv
add
aas
dec
mov
loop
lods
sbb
xchg
test
mov
pushf
sub
sti
inc
push
sub
dec
fsubr
sbb
das
inc
fistp
jae
mov
cli
inc
adc
mov
adc
aaa
sub
test
jns
rcl
xchg
ins
and
imul
arpl
je
repnz
arpl
xor
jge
mov
aas
push
pop
repz
fsub
popa
inc
cli
shl
jp
jnp
arpl
sbb
outs
scas
mov
repz
sti
xor
sbb
jne
cmps
retf
pop
scas
pop
fst
xchg
and
push
in
mov
sbb
test
cmp
cmp
retf
loopne
xor
fld
sar
pop
jo
sar
retf
adc
jbe
outs
out
mov
ds
stc
popf
pop
sub
pusha
lods
fild
pushw
call
lods
add
dec
cmp
push
scas
push
bound
xchg
push
and
jne
aad
pop
inc
mov
jge
mov
mov
xor
mov
movs
fistp
hlt
xor
loopne
dec
js
mov
adc
das
pop
aaa
neg
dec
scas
mov
mul
rcl
sahf
mov
mov
sar
add
shl
rcr
mov
pop
std
and
mov
xchg
stos
scas
and
pop
push
pop
xchg
push
or
das
sbb
aas
cld
(bad)
test
bnd
es
pop
test
sub
imul
pop
push
mov
pop
fstp
aas
out
mov
sub
mov
mov
adc
scas
sub
out
cdq
push
fsub
pop
mov
cmps
movs
shr
sub
mov
(bad)
aam
push
(bad)
mov
in
push
fisubr
inc
in
jbe
xchg
inc
add
add
fiadd
add
into
xor
dec
stos
retf
int
sub
pop
add
fmul
adc
push
repz
pop
pop
jns
loope
gs
mov
pop
ja
push
mov
outs
jbe
test
sar
mov
mov
adc
imul
aam
ret
out
mov
sbb
adc
pop
mul
lea
or
lock
mov
cli
in
outs
cwde
js
leave
pop
pop
js
xchg
aas
and
sbb
xchg
enter
jge
sbb
ss
shl
test
push
mov
into
xor
xor
cmps
(bad)
fsub
pop
and
popf
cmps
int
aaa
pop
jp
dec
jbe
xchg
mov
xor
cli
in
mov
popa
pop
iret
pushf
push
test
pushf
pop
xor
cli
xor
cmp
add
jnp
xor
(bad)
mov
cmps
aad
les
add
ins
fstp
aas
sahf
pop
arpl
cmps
jb
jge
mov
into
jnp
int
pop
jb
pop
out
in
loope
cmps
ret
int
jb
jmp
jmp
mov
out
out
mov
push
pop
mov
ins
cli
(bad)
popa
fs
sbb
jecxz
das
(bad)
add
xchg
scas
arpl
data16
cmp
inc
xchg
pop
push
test
outs
adc
adc
arpl
rcr
xor
jl
add
adc
xor
mov
aaa
(bad)
std
add
lds
pop
add
pop
fiadd
dec
sar
(bad)
rcr
and
fild
dec
je
jecxz
lods
aas
(bad)
pop
mov
test
outs
stos
mov
cdq
add
loop
xchg
test
jl
pop
in
xor
(bad)
cmp
cs
add
bound
pop
fwait
gs
bound
inc
push
ret
cmp
retf
call
add
mov
jns
xor
(bad)
or
fwait
cmps
test
sbb
push
mov
sbb
sub
adc
sti
mov
sub
add
cwde
jns
mov
cmp
ror
cmp
adc
das
rol
cmc
nop
test
mov
sub
or
cwde
xor
sub
icebp
jle
ffreep
lods
push
pop
add
in
xchg
mov
sahf
fdiv
call
sbb
xor
mov
dec
xor
daa
pop
and
retf
mul
push
xchg
mov
or
cmp
shl
mov
xchg
jb
fsub
xchg
repz
mov
adc
call
movs
stos
cmps
test
into
lahf
aas
jnp
mov
mov
outs
retf
mov
cmp
adc
iret
xchg
sbb
sbb
inc
test
dec
jl
mov
bound
neg
icebp
fidivr
mov
add
push
hlt
cdq
fnstcw
aas
into
cmp
fsubr
(bad)
sub
(bad)
inc
ss
out
cmp
out
and
mov
adc
push
mov
mov
push
fisttp
sbb
or
push
or
stos
mov
mov
stos
pop
int
mov
arpl
(bad)
int
adc
xor
out
test
jmp
mov
cmps
arpl
xor
aam
add
pop
adc
sbb
inc
lods
sub
sbb
mov
jmp
and
call
jb
pop
ret
out
xor
and
loopne
pushf
mov
or
repz
sub
adc
and
fwait
mov
dec
or
inc
adc
enter
lods
sar
data16
addr16
push
test
jnp
test
clc
sbb
mov
imul
dec
add
adc
jae
loop
dec
lock
in
cmp
enter
icebp
test
in
stos
in
loope
daa
and
push
cs
les
inc
aam
push
push
cmc
loop
pop
iret
(bad)
fsub
scas
and
loope
out
xchg
test
retf
dec
nop
push
rol
inc
mov
cmp
inc
ret
fs
daa
inc
cs
jmp
pop
fidiv
xchg
xchg
iret
cli
(bad)
pop
dec
imul
xchg
call
nop
pusha
pop
cmp
jnp
jecxz
sbb
(bad)
and
sbb
adc
int
sub
xor
pusha
add
push
jecxz
clc
push
pushf
dec
fcom
xor
inc
ins
sub
jae
and
shl
cmp
(bad)
xchg
mov
xlat
jmp
pop
mov
in
je
xor
cmc
and
jmp
or
test
scas
or
movs
jnp
cmps
cmp
mov
ret
(bad)
sbb
(bad)
push
add
xchg
add
into
add
lds
or
lea
std
mov
ds
push
add
(bad)
(bad)
or
bnd
and
inc
push
pop
add
add
add
cmp
xor
cld
push
add
in
jo
mov
lods
add
mov
pop
xor
(bad)
adc
xor
sbb
aas
test
clc
mov
add
(bad)
into
cmp
mov
mov
pop
fs
mov
fisttp
dec
(bad)
inc
cmp
mov
(bad)
pushf
jle
mov
dec
mov
fild
xlat
and
rol
mov
popf
addr16
and
lods
push
dec
pop
mov
adc
mov
xchg
bound
into
jmp
sbb
xlat
push
lea
rcl
repnz
(bad)
call
ret
outs
ins
and
jmp
pop
test
loop
push
xchg
pop
rcl
mov
jnp
jge
out
pop
dec
(bad)
dec
mov
lods
stos
in
mov
mov
or
icebp
mov
mov
push
push
mov
mov
sbb
jns
and
clc
ss
mov
inc
(bad)
lea
xchg
in
out
jns
sbb
ins
mov
arpl
jne
mov
adc
and
movs
(bad)
jnp
arpl
imul
sar
pop
mov
test
cmps
outs
jg
mov
or
sub
es
or
or
daa
retf
cmp
outs
je
scas
and
dec
retf
or
lahf
ficomp
jge
cmps
dec
xchg
in
in
or
xchg
dec
jns
call
inc
jne
xchg
movs
mov
mov
je
sub
push
cld
and
retf
mov
cmps
ja
into
je
clc
adc
inc
in
sub
lahf
push
xor
jl
mov
dec
adc
xor
ins
mov
adc
cld
xor
sbb
retf
fistp
pop
retf
outs
inc
cmc
cmp
mov
addr16
mov
mul
add
pop
jne
int
push
mov
sub
jb
adc
inc
inc
jne
jmp
cli
js
push
jecxz
mov
cmp
xor
in
mov
je
xor
call
mov
xchg
mov
sti
jno
shl
mov
push
mov
mov
fild
inc
int3
outs
mov
test
mov
seto
xor
inc
cmp
(bad)
fsub
mov
ds
inc
ds
mov
cli
push
sbb
lahf
fnstenv
arpl
adc
xchg
ror
test
or
sar
hlt
mov
pop
push
retf
imul
ficomp
jge
jle
test
fs
mov
adc
call
aam
cmp
and
jne
outs
mov
or
int3
rol
inc
ins
or
hlt
fnstenv
mov
rol
addr16
pop
rol
gs
mov
mov
or
test
inc
les
inc
and
int
setg
retf
cwde
mov
imul
mov
repz
jmp
push
adc
xor
sbb
push
and
xlat
test
xchg
cmps
les
cmc
enter
mov
sub
push
mov
shl
dec
ins
jne
outs
mov
xchg
shr
or
je
loop
aad
dec
cmp
shl
xchg
adc
cs
dec
jns
aaa
icebp
mov
cwde
mov
push
stos
adc
or
ret
mov
sub
add
cld
pop
repz
(bad)
dec
inc
hlt
adc
gs
sub
in
jnp
das
or
sub
aaa
mov
scas
cmp
scas
pushfw
sbb
add
imul
ins
push
cmp
xor
rcl
or
cmp
sub
lods
mov
or
dec
sub
push
test
add
adc
pop
dec
test
mov
sbb
std
fistp
jg
ret
leave
xchg
xchg
sub
inc
cmp
and
xchg
jne
xor
div
pop
test
not
int
fsin
adc
adc
mov
pushf
out
ss
mov
xchg
mov
retf
jmp
push
push
jle
fld
cmp
xchg
ror
jmp
pop
fnstcw
fs
outs
adc
sar
test
clc
cwde
push
fdivr
les
xchg
pop
jecxz
test
ret
js
in
lods
in
xchg
cmp
xchg
lock
sub
dec
mov
sub
ficom
(bad)
into
pop
push
int3
inc
cmp
or
mov
test
outs
bts
out
pop
lds
mov
out
ret
xor
inc
sbb
xor
fcom
jb
into
repnz
xchg
xor
in
or
mov
mov
mov
aam
inc
out
dec
popf
sbb
or
loop
pop
nop
dec
and
cmp
jecxz
xor
add
cmp
aas
gs
pop
enter
gs
push
lds
imul
jle
dec
out
mov
push
iret
call
movs
loop
arpl
cs
mov
dec
mov
adc
aaa
push
and
(bad)
cs
enter
fisttp
cmp
pop
out
pop
inc
les
inc
ret
movs
push
jo
ins
jb
push
fdiv
out
pop
pop
loop
push
fs
xor
iret
(bad)
ins
or
jo
add
push
ja
jo
xchg
mov
xchg
push
fistp
sti
cmp
das
sub
dec
call
je
out
(bad)
adc
mov
fnstsw
inc
mov
inc
(bad)
cwde
cld
sub
(bad)
pop
test
or
xlat
fistp
sub
pop
jo
dec
gs
push
das
jbe
not
and
lock
add
xchg
add
ror
adc
nop
cwde
cdq
pop
retf
stc
xor
test
test
add
cli
dec
mov
pop
pop
or
pushf
imul
cwde
and
stos
out
xchg
inc
sbb
add
adc
pop
arpl
ja
stc
dec
and
jns
lahf
jmp
xor
mov
dec
inc
dec
cmp
inc
mov
dec
mov
hlt
adc
loope
pop
mov
mov
xchg
inc
sahf
push
ins
mov
jno
inc
fdivr
aas
stos
pushf
dec
imul
popa
cdq
mov
es
sub
jle
mov
mov
je
or
repz
inc
dec
dec
jb
rcr
(bad)
cmps
push
pop
ins
out
lods
addr16
pop
loop
ror
(bad)
push
mov
outs
adc
int3
sbb
test
in
mov
mov
out
xor
(bad)
pop
and
mov
xor
movs
mov
pop
push
add
pop
cmp
adc
retf
dec
and
mov
(bad)
lods
and
xor
clc
cmc
xchg
pop
lods
dec
xor
cmps
cmp
test
dec
icebp
sub
jno
out
fdivr
or
mov
in
mov
add
or
imul
or
mov
mov
out
xor
mov
mov
jmp
mov
jmp
xchg
xchg
adc
xchg
aaa
pop
clc
inc
xor
fiadd
add
mov
pusha
movs
scas
dec
sbb
(bad)
sub
not
inc
bound
in
xchg
test
nop
and
mov
pusha
sbb
icebp
sbb
ja
pop
dec
sub
stos
sbb
fst
jns
repnz
popf
shl
ja
and
jnp
clc
(bad)
jl
and
imul
mov
pop
sar
cmp
retf
xor
or
xchg
leave
push
popf
out
and
pop
imul
mov
jle
mov
jae
mov
cmp
ror
xor
popf
aas
xchg
mov
mov
call
inc
xchg
xchg
rcr
pop
mov
lods
mov
xor
and
mov
inc
cdq
popa
test
addr16
test
or
aaa
movs
xchg
jg
jecxz
imul
into
sub
add
adc
mov
add
std
mov
and
clc
mov
push
lods
xchg
(bad)
dec
nop
jg
cli
retf
lods
in
shr
repz
sbb
ds
nop
retf
retf
push
xor
cmp
std
pop
or
out
hlt
scas
lods
in
xor
mov
cwde
cli
cmps
adc
lods
cmp
mov
in
jne
mov
inc
retf
ss
mov
add
inc
add
xlat
(bad)
stc
clc
loop
dec
sub
hlt
les
xor
push
add
sbb
or
cld
xlat
int
stos
xchg
push
and
pop
pop
pop
loopne
add
adc
push
int3
pop
sub
daa
jmp
rol
mov
add
jp
loopne
mov
jmp
jl
pop
or
jge
mov
push
aam
cdq
or
outs
inc
push
sbb
xor
cmp
fisubr
into
mov
jbe
mov
mov
leave
icebp
inc
jmp
mov
pop
(bad)
cmps
cmps
jmp
mov
out
popf
jle
inc
das
cdq
xor
fdivr
mov
xor
icebp
or
int3
out
push
lds
dec
fnstcw
mov
cmp
(bad)
clc
test
adc
pushf
int3
inc
int3
in
and
mov
out
loop
test
test
in
sbb
sahf
pop
mov
data16
ret
and
xchg
in
mov
in
mov
pop
fidiv
pop
xchg
mov
and
cmp
outs
jg
sbb
add
mov
jmp
pop
or
xchg
ds
jae
or
dec
mov
adc
or
dec
les
adc
sub
mov
jp
add
push
repz
cmps
scas
out
pop
(bad)
aad
or
jle
(bad)
jb
jne
pop
dec
bound
add
cmp
sbb
xchg
xchg
pop
inc
fwait
sbb
loope
aad
pop
sub
jnp
call
jbe
into
push
push
mov
sbb
jmp
pop
push
fdiv
out
shl
dec
push
cld
movs
daa
clc
hlt
loop
dec
fimul
das
scas
test
sbb
cmp
(bad)
pop
shr
sbb
push
mov
movs
clc
jo
xor
add
push
arpl
cmp
or
popa
inc
xchg
dec
sbb
xor
mov
xor
aad
movs
mov
pop
sti
es
loopne
cld
daa
inc
add
stc
(bad)
cmp
ret
arpl
sbb
psubusw
std
mov
loope
ds
jns
push
dec
and
js
sub
push
adc
dec
sbb
push
adc
push
lds
push
jns
lock
add
cmp
sub
retf
hlt
ss
xor
jns
jl
mov
in
xor
call
stos
movs
fcomi
aas
pusha
imul
ss
aam
add
std
sub
fstp
xor
es
jl
add
in
leave
pop
xor
fcmovbe
add
ins
add
fwait
jge
test
add
mov
pop
jl
mov
stos
push
fcom
fst
imul
rol
xlat
xor
lods
or
cmp
es
jbe
mov
mov
sub
or
mov
test
leave
jp
mov
int3
mov
push
leave
and
jmp
fnstcw
fdiv
cmps
sahf
cmc
pop
or
dec
jl
cdq
adc
dec
xchg
mov
fnstenv
cmp
cmp
loopne
cs
cmp
les
lock
out
mov
xchg
jno
stos
sti
pop
test
pop
xor
fsubr
xchg
xor
scas
out
mov
mov
movs
(bad)
mov
sbb
push
push
ins
inc
pop
loop
cmp
outs
sbb
pop
cld
mov
mov
pop
and
repnz
mov
div
movs
pop
inc
int
jnp
push
push
sub
add
mov
adc
sti
xchg
daa
in
les
xor
push
xor
icebp
in
cs
and
aam
xchg
lea
push
push
inc
int
jge
push
loope
inc
(bad)
jmp
dec
adc
das
ins
ds
mov
div
mov
stc
cli
cs
out
lods
xchg
jle
sbb
ret
repnz
js
inc
jmp
(bad)
ja
cld
(bad)
in
ret
cmp
and
fst
or
xor
cli
cmp
xchg
popa
(bad)
std
fld
jmp
aam
lock
cmp
cdq
or
retf
je
test
mov
cmc
hlt
hlt
and
stos
jae
or
pop
or
inc
sbb
or
add
scas
in
wrmsr
ds
jg
retf
je
jle
hlt
pop
mov
mov
pop
(bad)
imul
xor
xor
imul
int3
xchg
nop
mov
fstp
(bad)
dec
fwait
mov
movs
xchg
std
hlt
pop
rcr
sub
and
pop
jo
or
scas
repnz
fwait
test
aas
cmc
je
stc
ret
popf
jbe
push
xor
clc
sbb
inc
inc
push
out
jne
icebp
pop
cmp
inc
ds
mov
adc
push
jmp
ins
lock
jmp
pop
nop
jmp
cdq
and
jb
popa
and
pop
mov
cmc
mov
cdq
call
mov
and
aas
retf
jnp
or
sub
xchg
cmc
icebp
mov
iret
mov
add
xor
or
out
push
inc
fisttp
arpl
(bad)
push
sub
(bad)
and
loope
cmps
frstor
hlt
dec
sti
or
mov
cwde
adc
xlat
cmovb
gs
(bad)
retf
push
inc
pop
sbb
stos
xor
ins
pop
mov
sbb
dec
(bad)
je
add
xor
jnp
mov
(bad)
dec
nop
cld
xor
stos
xlat
push
mov
fsubr
jp
mov
cld
outs
shl
stos
jbe
cwde
(bad)
xchg
sbb
push
jmp
mov
and
jns
push
aam
fidivr
ds
jg
and
sbb
dec
mov
stos
mov
ds
mov
loop
jo
es
jp
jmp
aam
cwde
fcmovne
mov
scas
pop
mov
lahf
loop
out
ins
sbb
test
and
hlt
jne
cmp
push
in
jge
ret
mov
cmps
enter
xor
push
sbb
movs
in
push
cmp
repnz
mov
(bad)
cmp
jge
mov
sbb
sbb
mov
and
je
cdq
xlat
mov
adc
inc
movs
shl
fld
xchg
(bad)
(bad)
ficomp
adc
cmp
test
mov
jmp
pop
retf
mov
fst
xchg
pop
dec
inc
cmp
and
test
push
(bad)
mov
sar
fdivrp
adc
push
das
lods
inc
pop
dec
aam
sar
lahf
mov
add
dec
sub
push
jmp
outs
outs
int
jns
(bad)
adc
adc
and
dec
call
les
mov
add
inc
sar
and
repz
(bad)
jmp
fcmovnb
fwait
add
jp
bound
mov
add
sbb
xor
xchg
imul
js
and
dec
xor
jae
(bad)
(bad)
jmp
xchg
xchg
int
adc
mov
jo
jg
out
cmps
mov
xor
sub
pop
add
push
jbe
fstp
mov
xchg
push
mov
mov
movs
ss
xchg
ret
mov
in
xor
pop
adc
or
mov
(bad)
dec
shl
cmp
adc
rep
xlat
mov
mov
and
pop
dec
mov
das
xchg
inc
or
add
das
les
and
rcr
std
ins
add
pop
adc
inc
adc
dec
mov
xchg
jle
rol
add
inc
push
mov
sub
out
mov
rcr
push
fild
sbb
test
or
jecxz
adc
ja
sbb
ret
loop
adc
and
sti
clc
mov
and
aam
cdq
in
jno
push
mov
test
int3
dec
sub
jae
jb
push
xchg
mov
inc
jl
jge
cmc
jl
add
sbb
pop
mov
adc
sti
pop
sbb
aas
adc
dec
and
add
pop
mov
mov
dec
jp
inc
or
aaa
sbb
add
stc
lsl
neg
pop
scas
es
adc
adc
inc
popf
ins
(bad)
adc
aas
scas
jmp
pop
es
mov
clc
and
fwait
inc
stc
std
ins
sbb
inc
jns
push
mov
test
push
and
or
add
add
hlt
jge
inc
xor
or
mov
ror
push
sub
enter
jmp
shl
enter
dec
(bad)
test
push
xor
push
push
sub
cwde
clc
aam
push
add
in
mov
stc
retf
or
hlt
add
and
push
fistp
es
inc
mov
inc
mov
sbb
add
and
(bad)
pop
jg
out
mov
nop
and
sub
idiv
push
jbe
out
mov
imul
jmp
mov
mov
scas
sbb
(bad)
and
jmp
jle
gs
leave
and
add
repz
jmp
push
jecxz
popa
out
shr
rol
cdq
push
jmp
jl
retf
dec
xchg
aad
adc
dec
aas
add
mov
jle
ds
sbb
leave
aaa
fldcw
push
cli
and
mov
test
add
les
dec
gs
xchg
or
sahf
xor
cmp
or
pop
sbb
ss
cmps
mov
pop
inc
retf
mov
mov
add
int3
ja
imul
sub
inc
in
add
ins
test
lock
inc
xor
mov
jle
mov
jo
outs
sbb
xor
push
repz
aaa
(bad)
cmp
jnp
ret
mov
and
or
dec
pop
fst
xchg
lahf
into
je
mov
lahf
xor
std
inc
int
ret
xor
fnstcw
cwde
mov
es
mov
rcr
add
fwait
mov
mov
sbb
rcr
xchg
sub
aas
mov
lds
cmp
loop
inc
cdq
adc
inc
into
data16
push
and
into
rol
ins
fidiv
jns
sbb
out
mov
call
(bad)
xor
enter
repnz
outs
xchg
in
mov
cmps
jl
retf
mov
cdq
dec
imul
clc
mov
xchg
xor
sub
cmp
xchg
sbb
clc
dec
cmps
pop
(bad)
sar
fs
mov
add
imul
xor
push
mov
lds
jg
pusha
xlat
ins
mov
jns
lods
test
sub
mov
sahf
adc
mov
cmp
xchg
inc
adc
(bad)
data16
mov
jo
pop
push
rcpps
dec
adc
xor
mov
ins
sub
test
pushf
pop
repnz
popa
jb
push
sti
pop
sub
jecxz
jns
xchg
fldenv
xchg
xor
jge
mov
stos
push
mov
outs
inc
push
nop
xchg
enter
xor
xor
sbb
xchg
ret
mov
jne
sub
stc
in
fcomp
ins
fdivrp
xchg
cwde
popf
test
inc
xchg
popf
and
rcr
stc
add
jnp
mov
stos
out
fwait
jmp
in
mov
fldcw
into
xor
inc
pop
lds
push
imul
cmp
jns
sub
das
(bad)
leave
add
jbe
pop
push
add
xor
or
aam
stos
pop
xchg
repz
push
jp
pop
xchg
shrd
push
(bad)
stos
inc
inc
and
ds
ror
test
sahf
pop
fild
sub
cli
retf
and
jne
add
popf
fisttp
cmps
sub
les
pop
pushf
xchg
imul
stos
movs
push
jno
and
xor
inc
cs
mov
fwait
cmc
aas
xchg
shr
mov
xchg
jle
jmp
xlat
sti
icebp
push
scas
cmp
arpl
mov
int
sbb
sub
jecxz
mov
sub
sbb
int3
xchg
sub
push
cdq
jl
(bad)
push
jp
mov
repnz
outs
fist
pop
sub
call
pop
mov
push
xchg
xchg
movs
daa
movs
cmps
ins
bound
pusha
sub
ficom
mov
lahf
xchg
lods
jae
add
js
aaa
rcr
or
adc
cmp
sbb
enter
outs
daa
mov
mov
js
adc
lock
cmp
mov
sbb
pop
dec
loope
dec
(bad)
leave
pop
mov
test
push
es
call
push
in
in
int3
and
mov
sbb
and
inc
inc
or
cmc
fdivr
push
inc
pop
mov
push
dec
and
mov
mov
lods
add
xchg
sar
push
sti
xchg
cmp
cmp
inc
inc
pop
ror
jg
xchg
in
leave
outs
jmp
out
ds
in
push
ins
xchg
pop
push
cmp
sub
nop
add
jae
repnz
inc
enter
dec
dec
pop
xor
into
mov
aaa
stc
push
popf
outs
mov
mov
test
xlat
dec
repz
mul
xor
loopne
xor
cmc
mov
cmps
std
mov
adc
in
pusha
adc
xlat
call
dec
sbb
shl
adc
shr
mov
push
mov
je
jg
mov
out
daa
mov
or
dec
cmp
sub
jbe
add
cld
sub
imul
test
or
jle
mov
jmp
aaa
xchg
ins
sbb
scas
cmp
xchg
jmp
pop
push
cmps
out
mov
nop
inc
jecxz
or
xor
ins
cmp
fstp
mov
sbb
aad
dec
aas
mov
(bad)
push
and
push
sbb
fistp
cmp
pop
pop
mov
sub
inc
jnp
mov
popa
adc
mov
lock
jne
and
pop
and
pop
inc
out
lock
and
xchg
gs
pop
test
inc
arpl
cmp
stc
std
cmp
inc
mov
sub
ror
ror
cmp
or
adc
and
cmp
push
shr
add
mov
test
mov
hlt
cmp
call
mov
fwait
dec
adc
sahf
sbb
add
add
mov
jp
jecxz
xchg
scas
shl
jmp
data16
sar
cs
inc
jae
test
and
and
lods
(bad)
cmc
pop
dec
push
xor
int3
dec
xor
stos
xchg
(bad)
shl
fdiv
sbb
cmps
xchg
pop
adc
jmp
jge
(bad)
rcl
in
xchg
(bad)
test
out
(bad)
in
jbe
in
shl
or
push
jecxz
jecxz
mov
in
push
ss
push
dec
ss
(bad)
push
cli
cmp
jl
mov
mov
pop
or
fs
repnz
(bad)
lds
adc
clc
mov
pop
xor
inc
arpl
xlat
(bad)
repz
mov
mov
bound
retf
mov
mov
jne
inc
mov
pop
cld
repnz
pop
(bad)
sbb
xor
adc
fadd
jmp
stc
mov
(bad)
sub
fs
xor
or
pop
dec
(bad)
dec
adc
adc
adc
dec
cs
(bad)
shl
addr16
outs
popa
retf
add
mov
xor
jae
leave
dec
dec
mov
cli
in
jmp
dec
mov
pop
inc
xchg
fstp
jno
outs
rdpmc
mov
push
jae
dec
aas
cmp
sbb
jg
repz
outs
ret
adc
sbb
xchg
mov
int
cmp
xchg
out
cmp
add
hlt
jg
mov
jno
mov
cmp
out
into
shl
sub
sub
add
in
jmp
daa
int3
xchg
je
in
and
ss
add
loopne
fcom
fdiv
imul
xor
aas
sub
les
ins
push
dec
and
jae
lods
cs
mov
sub
(bad)
xchg
cmps
inc
mov
push
inc
cmp
dec
out
inc
repnz
jne
aad
mov
sbb
push
lahf
dec
call
sub
mov
pop
int3
rcr
sub
xchg
and
inc
or
dec
add
sbb
stc
push
js
cmp
add
dec
pop
xor
push
sbb
add
xchg
sahf
jbe
pop
mov
push
out
repz
mov
ror
in
pop
mov
dec
push
jl
mov
outs
xchg
add
dec
mov
cmp
icebp
(bad)
into
int3
clc
push
mov
dec
rcr
arpl
adc
mov
aaa
or
pop
imul
or
mov
call
out
repz
pop
push
xchg
push
xor
les
jbe
mov
mov
push
sahf
mov
outs
shr
sbb
mov
arpl
and
daa
jae
fnsave
popa
lock
inc
jge
xchg
sar
stos
(bad)
cmp
mov
into
ror
adc
daa
mov
test
das
shl
pop
cmp
or
or
bound
pop
pop
sub
xor
gs
jno
add
push
push
inc
and
push
shr
cld
push
out
mov
xchg
add
pop
pop
repz
lock
sub
sti
in
and
je
push
xchg
stos
outs
scas
sub
sbb
lods
jmp
movs
inc
inc
outs
repz
hlt
push
lock
js
push
les
dec
ror
xchg
mov
jo
test
mov
call
sbb
adc
es
stc
mov
int3
jmp
pop
push
(bad)
xchg
mov
icebp
sbb
dec
sbb
hlt
pop
stos
nop
daa
inc
dec
in
adc
dec
inc
shr
fxch
jmp
mov
aas
sub
xchg
inc
addr16
jo
push
movs
cmp
jmp
imul
fnstcw
mov
sub
xchg
mov
sub
call
repnz
retf
pop
mov
cmp
push
push
mov
out
outs
sbb
imul
inc
jae
cmp
pop
mov
pop
movs
jg
pop
in
mov
jb
adc
enter
shl
mov
cdq
inc
push
cdq
js
pop
bound
popa
sti
push
jbe
mov
adc
mov
push
mov
push
test
sbb
pop
inc
in
inc
bound
push
fild
shl
in
scas
test
mov
gs
add
inc
loope
sbb
bound
sub
xor
sar
xchg
leave
daa
inc
adc
outs
push
sbb
jmp
jmp
leave
fwait
xchg
sti
rcl
fiadd
dec
stos
idiv
enter
repnz
xor
dec
out
mov
jl
jne
push
jbe
loopne
cmps
shr
(bad)
or
test
mov
mov
outs
cmp
push
xor
or
je
rol
or
push
sbb
cmp
leave
push
dec
push
dec
test
inc
stc
mov
repnz
xchg
xchg
xchg
xor
inc
(bad)
push
fwait
mov
(bad)
js
push
pop
push
aas
push
and
bound
push
mov
mov
cmps
ror
ins
ins
into
int
imul
jb
std
lods
int3
jl
xchg
fst
test
pop
test
push
jo
pop
mov
enter
out
adc
ins
push
bound
and
add
test
mov
dec
mov
pusha
pop
scas
pop
add
jnp
mov
fcmovnbe
outs
scas
xchg
xchg
xor
popa
jb
jo
outs
jg
and
add
(bad)
loop
mov
inc
inc
or
fistp
(bad)
(bad)
cld
and
imul
xchg
in
popf
icebp
fsubr
sub
ins
pop
jmp
test
dec
pop
xchg
pop
inc
cmps
lods
add
shl
jns
push
mov
push
mov
mov
mov
mov
les
and
(bad)
rcl
inc
pop
add
xchg
scas
ja
pop
icebp
ds
jge
hlt
int
adc
clc
pushf
pop
jmp
mov
or
rol
inc
(bad)
lods
out
pop
inc
popa
addr16
xchg
sub
inc
repz
cdq
sbb
add
push
pop
add
mov
cmp
mov
adc
retf
ja
imul
push
push
nop
xor
ficomp
bound
out
je
lahf
retf
outs
mov
fwait
je
jns
(bad)
push
push
loop
mov
adc
push
mov
(bad)
cmp
xchg
mov
sti
sbb
or
xor
dec
or
loope
mov
out
sbb
(bad)
fbstp
pop
jnp
jmp
aam
ror
xor
cmps
pop
xchg
xor
rcr
dec
aad
mov
and
inc
retf
std
cs
leave
xor
inc
pop
rcl
cmp
mov
mov
or
ror
leave
popf
cmp
jbe
arpl
shr
mov
jae
inc
jg
mov
fnsave
push
pop
into
push
daa
dec
enter
lods
dec
sbb
lea
scas
dec
ds
int3
lds
mov
xchg
dec
cld
add
cdq
xor
xchg
or
imul
jmp
adc
fadd
xor
iret
inc
inc
dec
inc
jns
popa
mov
out
das
mov
or
cmp
push
sbb
sbb
pop
stos
pop
lds
mov
pop
pop
dec
icebp
sbb
and
pop
clc
rep
sbb
(bad)
mov
cmp
xchg
call
add
inc
cdq
mov
jbe
repnz
aam
(bad)
or
mov
cmp
shl
mov
out
inc
daa
mov
and
cdq
jmp
outs
inc
xor
dec
xchg
(bad)
nop
fsincos
imul
lods
push
dec
stc
(bad)
aaa
mov
jge
loopne
gs
lahf
push
fwait
test
lock
loope
inc
jmp
dec
jnp
hlt
ret
cs
xchg
cmps
test
rol
push
xor
(bad)
repz
or
jmp
pop
jae
popf
les
jmp
cmp
inc
hlt
es
sbb
xchg
mov
mov
xchg
ins
je
leave
jns
mov
cmp
jg
rol
adc
ret
and
(bad)
jno
(bad)
stc
push
xor
imul
test
call
popa
ss
(bad)
jg
mov
dec
ficomp
loope
sbb
sbb
stos
pop
mov
ret
sbb
test
push
jno
mov
lods
cmps
test
(bad)
push
gs
lahf
cmp
inc
dec
lahf
add
jbe
sbb
sti
int3
shl
mov
adc
mov
pop
ins
cli
pop
xchg
fldcw
pop
mov
retf
aas
lock
(bad)
stc
jge
adc
pop
je
scas
popa
stos
xor
ins
jmp
dec
aas
sbb
mov
shr
je
test
fcom
pop
adc
cld
jmp
sti
cmps
or
push
pop
xor
sbb
cmps
pushf
imul
pusha
push
inc
and
sbb
cmp
ins
out
add
sar
stc
push
(bad)
in
cs
test
sub
movs
add
xchg
push
ja
lock
and
push
pop
loopne
jge
cmp
out
push
jp
aam
jbe
loop
icebp
test
mov
lds
inc
push
add
mov
mov
(bad)
adc
xchg
pusha
mov
sub
push
lahf
cli
jnp
cdq
test
lock
xor
lahf
xor
cmps
mov
mov
mov
jno
popa
cmps
imul
(bad)
sbb
arpl
stc
cmps
fwait
hlt
or
dec
iret
inc
jno
pop
sbb
jb
adc
int
inc
inc
and
jo
sti
sub
(bad)
sbb
pop
cmps
mov
paddd
jns
jmp
or
rol
repnz
xchg
xor
inc
mov
in
push
jne
jmp
dec
adc
or
in
add
out
add
lods
or
push
jae
push
movs
add
sahf
(bad)
cmc
fwait
push
and
lods
cmps
pop
xor
jbe
sbb
int
jg
or
mov
loop
test
sbb
retf
push
aad
mov
(bad)
cmp
cmc
jl
adc
dec
xchg
nop
js
popw
ds
enter
add
and
lds
movs
(bad)
rcr
(bad)
xchg
sub
js
push
lods
xchg
sti
jo
cdq
call
cdq
fnstsw
cmps
add
das
aad
push
mov
fnstsw
mov
retf
ret
add
mov
cld
push
pop
test
dec
sbb
daa
pop
xchg
je
xlat
test
add
aad
add
jecxz
jmp
daa
pop
mov
xor
ret
jmp
adc
cmps
dec
push
push
cwde
adc
push
push
rol
(bad)
mov
popf
sbb
je
out
popf
pop
mov
jae
out
shl
cmp
or
jecxz
mov
jg
clc
xchg
cmps
int3
stos
xchg
pop
hlt
inc
leave
je
jle
loop
mov
push
add
fs
mov
int3
xchg
mov
call
(bad)
repnz
adc
popf
stc
push
ds
pop
dec
pop
loope
int3
fcom
cmp
es
jne
cli
adc
xchg
inc
adc
xchg
mov
sbb
call
popf
inc
call
and
pop
movs
movs
push
cmp
test
and
xor
xchg
popf
aam
cmp
jge
sub
repz
push
xchg
lahf
xor
jne
adc
mov
hlt
jns
movs
sti
or
sti
ins
mov
and
cmc
cs
dec
out
dec
lock
cmp
mov
mov
mov
pop
xlat
adc
rcr
hlt
mov
mov
mov
mov
dec
mov
test
adc
and
(bad)
adc
fucom
dec
test
add
call
push
pop
adc
mov
rol
cmp
stos
hlt
mov
push
sti
sub
and
popa
mov
sub
lods
mov
lds
(bad)
aaa
pop
ror
fsub
std
mov
mov
inc
cli
aaa
popf
aas
cmp
cs
mov
rol
ret
pop
xchg
jbe
loopne
repz
push
cmp
sub
pop
pop
rcr
imul
cmp
retf
(bad)
adc
sub
dec
adc
stc
scas
cs
cdq
(bad)
cmp
dec
push
gs
sub
es
or
ins
mov
or
sbb
mov
mov
xor
mov
xchg
or
sbb
stos
lock
int
pop
mov
push
xchg
movs
sar
xor
retf
mov
adc
rcl
jge
movs
or
je
mov
add
and
repz
push
(bad)
(bad)
sar
lods
adc
in
cmps
aas
mov
clc
sbb
fnstenv
fistp
push
repnz
pushf
add
push
mov
shl
xchg
in
jb
mov
inc
dec
arpl
xchg
enter
xchg
aas
xchg
push
test
jbe
jae
pop
icebp
stc
add
popa
fimul
repnz
js
test
xchg
int3
shl
inc
mov
inc
mov
and
cmp
adc
sub
ss
dec
adc
fwait
scas
pop
adc
jb
mov
jl
pop
mov
inc
inc
pushf
imul
and
cmp
sar
les
xchg
inc
xabort
pop
xchg
pop
adc
xor
xor
ss
jl
pop
sbb
cmp
sbb
push
ret
push
mov
push
test
push
sub
mov
in
cs
push
mov
xor
add
add
icebp
aad
pop
pop
in
xlat
mov
(bad)
out
and
fstp
ss
adc
mov
ret
jno
aas
std
retf
mov
inc
sti
pusha
or
cmp
ret
mov
shl
sub
popf
(bad)
cmp
cld
js
sub
adc
jno
adc
hlt
jmp
xchg
xchg
test
push
retf
jae
test
iret
out
jne
push
mov
dec
xchg
aad
push
das
ds
mov
test
inc
dec
int3
inc
pop
(bad)
ds
fsub
adc
add
mov
xchg
rol
sbb
enter
ds
xor
addr16
mov
inc
cmp
sub
mov
pop
cmp
lds
mov
sbb
into
es
ret
xchg
or
dec
outs
jbe
iret
out
lds
or
mov
mov
aam
sub
jbe
in
pop
or
jle
mov
mov
mov
pushf
std
add
sbb
daa
cmp
imul
(bad)
call
sub
imul
repz
mov
ss
push
and
cmp
sub
add
pusha
and
bnd
jbe
add
push
imul
aas
jmp
sbb
adc
cld
mov
push
stos
int3
sub
xchg
adc
(bad)
arpl
xor
ja
es
in
jecxz
pop
and
sub
repz
jbe
xchg
pop
xchg
sbb
dec
inc
jmp
xor
push
add
mov
sahf
pop
inc
jnp
and
mov
push
xor
out
mov
cmp
mov
jle
jge
fwait
ins
in
and
push
pop
mov
rcl
sti
xchg
js
pop
add
xor
pop
mov
lods
cmc
dec
retf
int
sbb
(bad)
ss
mulps
mov
mov
out
out
mov
add
ret
push
call
lahf
push
(bad)
(bad)
adc
into
ins
dec
sbb
(bad)
lods
enter
jnp
fadd
mov
mov
ja
inc
adc
push
in
sub
aad
loop
xlat
xor
or
inc
enter
add
sub
mov
cmp
cmp
cwde
in
jp
mov
repz
mov
dec
adc
mov
dec
and
lea
push
(bad)
mov
cwde
pop
jge
lea
xchg
call
inc
aaa
mov
jge
inc
mov
retf
pusha
aas
mov
jne
sti
mov
sub
jl
(bad)
mov
test
sbb
push
js
push
mul
xor
jb
sti
hlt
jb
push
shr
cwde
cmp
int3
jo
in
dec
xchg
ja
and
add
jl
mov
and
sub
cmp
loop
sbb
cmp
icebp
in
ins
adc
xlat
sub
lods
test
lock
push
jne
retf
inc
mov
mov
iret
sbb
inc
jp
jg
and
mov
push
pop
iret
fld
mov
inc
sub
arpl
repnz
jmp
mov
jnp
xchg
dec
cmp
jns
out
div
cmp
xor
in
dec
test
iret
mov
adc
jno
dec
aaa
and
pushf
xchg
pop
pop
jo
or
iret
ja
sar
inc
neg
xchg
lock
adc
aaa
dec
pop
mov
ret
test
sbb
push
mov
sbb
pushf
bsr
dec
dec
(bad)
ins
sti
retf
sbb
jg
xchg
sbb
fwait
cmps
shl
jle
shl
hlt
retf
inc
push
xor
loopne
call
fcmovu
jmp
mov
ret
dec
jmp
or
push
mov
pop
pop
test
leave
or
xchg
lods
loop
rol
sti
xor
shl
in
das
xor
push
leave
fdiv
lock
aaa
cmc
push
stc
lods
in
mov
pop
cli
(bad)
imul
jle
aaa
pop
dec
or
dec
mov
int
or
inc
inc
cli
sti
and
outs
xchg
loope
mov
add
aaa
add
pop
push
sub
fsub
push
push
leave
rcr
sub
mov
jnp
xor
addr16
in
(bad)
lods
mov
sahf
aaa
enter
pop
cmps
mov
cmp
faddp
add
mov
mov
std
pusha
pop
iret
sub
jb
xchg
cwde
pop
push
push
sub
mov
mov
scas
repz
dec
add
adc
jbe
inc
into
loopne
psrld
sub
xchg
sbb
jg
ror
sbb
call
push
pop
and
push
inc
pop
jb
xchg
or
push
xor
xor
daa
sub
pop
mov
xchg
dec
call
adc
rol
pusha
inc
das
xor
fidivr
imul
inc
jge
es
sub
or
in
xor
xor
cs
jne
icebp
fnstenv
scas
inc
xor
adc
inc
fnstenv
outs
popa
inc
ja
stos
pop
cwde
aad
inc
pop
push
mov
daa
cmps
rcr
xchg
fisub
cmp
ss
xrelease
fiadd
fmul
aas
mov
jbe
mov
movs
mov
rcl
pop
iret
xchg
jg
pop
sub
fld
mov
adc
push
pop
jne
movs
je
(bad)
fisttp
imul
jle
jo
push
lea
int3
inc
jmp
push
pop
sar
ins
retf
repz
inc
loopne
mov
jp
jo
out
(bad)
mov
mov
push
out
and
push
lahf
(bad)
jno
mov
jno
add
add
(bad)
dec
pop
test
mov
pop
pop
sbb
sub
inc
add
and
push
shl
popa
ficom
in
das
(bad)
es
adc
aam
clc
mov
idiv
inc
imul
xor
jnp
mov
imul
mov
jae
sar
adc
shr
test
pop
iret
lods
mov
and
movs
repz
ss
movs
arpl
add
mov
jns
imul
or
jbe
lods
sbb
add
push
xor
hlt
mov
sbb
ds
data16
mov
icebp
aas
(bad)
cmc
pop
ror
idiv
(bad)
pop
mov
jecxz
xchg
pop
xchg
repnz
mov
hlt
pop
ror
sbb
mov
and
nop
jb
pushf
mov
test
push
(bad)
cmps
sbb
cmc
imul
and
js
cmc
jb
imul
xor
pop
in
in
xchg
mov
cmp
mov
xchg
add
sar
test
shl
inc
cmp
in
inc
cs
dec
sbb
xor
das
xchg
or
mov
rol
xor
add
mov
or
xchg
arpl
inc
adc
test
xor
ds
(bad)
and
bound
je
out
mov
push
adc
inc
xchg
popf
aas
int
push
xchg
scas
add
xor
out
xchg
(bad)
jg
xlat
or
dec
ficom
les
sar
or
push
mov
ins
(bad)
aaa
jg
and
aad
in
in
fcmove
add
adc
retf
and
fcomp
inc
aam
xor
inc
xor
cmp
xor
(bad)
dec
loope
inc
xchg
xchg
stos
loopne
sub
inc
add
int3
and
sub
push
pop
out
mov
cmp
xlat
stc
push
nop
or
pop
add
pop
sub
(bad)
bound
xchg
adc
call
es
cmp
jge
ds
es
push
out
ret
outs
pop
mov
add
add
cs
das
jae
adc
xor
dec
add
sub
push
pop
stos
movs
push
pop
out
retf
sbb
push
repz
inc
outs
jecxz
or
cmp
lods
mov
(bad)
mov
sub
(bad)
jnp
sub
clc
into
ficomp
or
add
push
ss
cmp
(bad)
add
cmp
pop
les
mov
out
sub
in
sahf
mov
std
add
movs
std
lds
mov
or
dec
ret
xor
pop
in
add
xor
jmp
adc
dec
(bad)
sbb
inc
call
jg
imul
ins
scas
loope
mov
dec
push
add
fwait
or
jmp
les
int3
and
mov
retf
add
(bad)
fild
in
cmc
icebp
pop
lds
int3
push
cdq
mov
shl
mov
pop
stc
imul
xchg
test
jne
mov
rcl
push
dec
xor
pop
les
sub
sbb
pop
mov
outs
push
dec
out
lock
movs
mov
jnp
fmul
(bad)
call
popa
or
push
mov
jecxz
inc
(bad)
addr16
fcomp
(bad)
repnz
add
les
push
std
cmps
mov
loope
pusha
in
and
call
aam
mov
cs
sahf
add
mov
cmp
xchg
sub
call
inc
dec
push
(bad)
mov
(bad)
xor
push
pop
jmp
xchg
jne
jb
pop
call
dec
jmp
xchg
mov
xchg
cmp
pop
(bad)
jmp
enter
xor
dec
jl
add
fdiv
cli
js
in
fdiv
mov
push
pop
pop
mov
sahf
pop
repz
mov
pop
js
add
mov
test
inc
ins
push
jg
(bad)
adc
cmc
pushf
movs
jne
ror
pop
cmp
xor
movs
inc
sbb
js
cmp
aad
retf
push
sbb
mov
iret
into
adc
jle
xchg
fnstsw
xor
dec
into
jb
arpl
mov
push
movs
cmps
and
movs
repnz
sti
mov
xor
xor
dec
popa
(bad)
dec
or
push
adc
scas
pop
add
mov
lods
nop
shr
(bad)
or
inc
pop
mov
(bad)
and
jmp
adc
lods
loope
fst
add
sbb
sub
arpl
(bad)
aas
bound
cmps
aas
out
adc
push
mov
and
loop
neg
addr16
das
or
jnp
hlt
sbb
inc
lahf
neg
xor
push
ret
iret
adc
cmps
dec
and
xchg
mov
add
je
pushf
repz
jp
out
inc
push
and
(bad)
lods
or
lods
shl
ficomp
mov
xchg
daa
sub
push
xchg
xchg
repnz
mov
pop
repz
jne
adc
outs
(bad)
jg
jmp
adc
fdiv
ret
(bad)
bound
adc
fbld
adc
aaa
mov
xchg
sub
mov
in
add
jno
add
retf
inc
(bad)
out
mov
sub
mov
dec
scas
shl
cli
mov
(bad)
ror
ss
cmp
mov
iret
ins
and
mov
cli
xchg
jnp
stos
xchg
jge
xchg
and
add
std
ret
lods
pop
out
ins
xor
stos
gs
lds
or
shl
rcr
mov
jle
jae
gs
push
ins
add
or
rol
add
mov
dec
pop
cli
jmp
mov
pusha
xchg
cld
mov
pop
aad
jne
test
mov
sar
js
jae
jle
inc
adc
lock
xchg
out
mov
retf
(bad)
mov
cs
xchg
sub
jno
ins
(bad)
cmps
jl
adc
aad
scas
call
ja
xchg
mov
cld
cmp
mov
in
ins
int3
and
pop
lods
data16
jmp
in
scas
test
into
push
mov
arpl
(bad)
fucomp
pushf
push
leave
popa
mov
cli
retfw
inc
inc
ja
sub
sbb
outs
inc
jp
stos
out
pop
je
xor
sub
mov
and
stos
jb
addr16
addr16
dec
pop
sbb
cmp
ja
mov
sbb
dec
push
ds
dec
or
and
sbb
dec
dec
fs
pop
jnp
das
jmp
stos
int
mov
and
mov
jmp
push
cdq
xor
add
xlat
rol
aam
int3
daa
es
sbb
xor
or
retf
cmc
out
icebp
mov
sbb
pop
dec
jmp
rol
(bad)
outs
in
mov
jge
pushf
xchg
test
clc
mov
jmp
pop
ffree
mov
int
iret
mov
pop
fldcw
out
push
nop
mov
mov
and
push
push
stos
outs
add
test
jnp
arpl
leave
aam
jno
test
outs
jno
cwde
push
or
pop
out
xchg
xor
ss
fcomp
adc
sub
aas
mov
loope
add
xchg
jp
fnstcw
out
cmp
jnp
inc
cld
fwait
jge
fcomp
mov
push
psubb
mov
jae
push
(bad)
mov
sbb
jmp
pop
dec
mov
enter
mov
(bad)
iret
sbb
rcr
icebp
mov
movs
mov
ins
arpl
loope
call
pop
mul
aaa
xchg
(bad)
jmp
fst
jmp
retf
cmp
popa
sub
fsubr
cmp
loope
inc
jb
sub
ret
cdq
jo
(bad)
out
mov
mov
inc
ins
out
mov
jmp
shl
(bad)
icebp
add
lahf
cmovs
out
ja
aam
cmps
jmp
std
or
sub
mov
add
fdiv
loopne
push
lahf
jns
ins
fcmovnu
sar
push
jae
enter
jb
mov
iret
(bad)
hlt
xchg
pop
mov
and
sub
neg
cmps
push
retf
lods
jmp
sbb
shl
cs
cld
in
out
hlt
loop
js
push
daa
adc
sbb
mov
xchg
rcr
std
imul
pop
dec
adc
(bad)
std
in
jg
sub
imul
lahf
xor
mov
inc
push
sahf
outs
repz
retf
and
ucomiss
cmc
dec
or
ss
shl
push
push
push
in
nop
jecxz
cld
sbb
in
pop
sub
retf
xchg
and
clc
cmp
mov
lock
(bad)
popf
push
retf
or
pop
lods
xor
test
hlt
mov
popa
int3
popf
push
in
aas
sbb
xchg
sub
mov
sub
mov
leave
dec
and
push
rol
sub
je
xor
dec
loop
lods
adc
mov
fld
enter
cwde
pop
into
fdivp
adc
scas
out
jne
add
(bad)
mov
enter
lods
nop
dec
lds
pop
(bad)
int
mov
mov
push
and
pop
test
sbb
movs
jmp
xchg
and
jb
int
int3
xor
cld
pop
pop
xchg
test
imul
inc
ins
imul
sbb
xlat
push
mov
popf
pop
xchg
inc
mov
pop
into
push
mov
jne
in
mov
aas
add
outs
outs
dec
jno
and
enter
test
pop
push
mov
inc
push
test
or
xchg
push
ins
inc
and
(bad)
hlt
cmp
sbb
in
dec
cmp
in
ins
xor
retf
or
adc
mov
pop
repnz
sbb
std
mov
cmp
cmps
ins
js
xchg
adc
gs
jecxz
xchg
retf
pop
lods
push
push
mov
(bad)
mov
shl
(bad)
rol
hlt
mov
jb
jo
(bad)
aas
int3
mov
mov
jnp
cmp
cwde
push
bound
int
pop
cmp
mov
dec
stc
mov
inc
xchg
xchg
ja
mov
mov
pop
push
sbb
lods
rcl
pop
xor
push
test
push
pusha
lods
add
pop
cmp
mov
icebp
or
hlt
es
je
sbb
jmp
xchg
fmul
mov
(bad)
mov
inc
adc
push
xchg
icebp
outs
test
xchg
xor
sub
ret
imul
add
dec
push
fwait
mov
rol
mov
mov
lods
push
mov
inc
es
loop
jb
xchg
inc
ds
mov
adc
lahf
add
adc
xchg
xor
add
xchg
stos
lahf
js
xchg
leave
dec
mov
xchg
aaa
inc
push
(bad)
clc
sub
adc
inc
outs
int3
int
pop
xchg
xor
data16
fstp
retf
es
push
xor
cmps
fnsave
fdiv
pop
call
stos
cwde
mov
and
(bad)
cmc
imul
sub
into
test
addr16
and
add
add
pop
loope
jns
data16
sub
lahf
inc
jb
add
iret
fistp
mov
int3
jecxz
imul
push
sub
dec
nop
mov
mov
iret
test
popa
adc
xor
je
je
cmp
loop
(bad)
scas
pushf
mov
cwde
ss
(bad)
(bad)
sbb
fnstsw
test
jmp
je
call
lods
fisub
push
fscale
pop
mov
sub
in
xchg
mov
nop
sbb
imul
mov
mov
pop
lea
stos
push
inc
push
lods
fcom
(bad)
imul
pop
mov
test
das
pop
mov
call
sub
push
xchg
ror
fs
adc
mov
and
jne
outs
jnp
cmps
outs
push
icebp
aad
sbb
jl
mov
loop
xchg
push
and
inc
scas
call
test
outs
pop
je
add
xor
push
mov
mov
xor
xchg
jmp
jmp
adc
push
xchg
mov
(bad)
icebp
cwde
mov
add
jb
dec
and
in
clc
ins
add
or
mov
popa
push
xor
cmps
cld
lods
sahf
jmp
or
jecxz
or
xchg
jns
mov
xchg
sbb
xchg
and
into
(bad)
aaa
jg
test
leave
jno
test
adc
push
ret
dec
xchg
aas
xor
xor
lock
push
pop
daa
jb
sbb
xchg
pusha
inc
mov
pusha
retf
int3
outs
call
jb
test
and
retf
dec
outs
int3
pop
push
inc
in
std
in
sub
xor
jae
and
or
jg
in
test
mov
push
or
mov
pop
fidiv
and
add
in
pop
and
jb
push
jp
movs
mov
loop
and
adc
and
cmps
jl
and
cmp
test
push
sbb
loope
into
ds
push
dec
bound
lds
arpl
dec
aaa
jecxz
nop
mov
mov
dec
pop
jle
mov
dec
retf
sahf
adc
xchg
movs
mov
cmp
xor
mov
xlat
into
push
mov
xor
bnd
mov
mov
xor
mov
shl
daa
xor
jnp
pop
jns
setle
out
(bad)
call
add
and
jmp
inc
xor
in
cmp
loop
xchg
mov
mov
stc
loopne
push
push
and
stos
xlat
test
and
ficomp
xor
pop
and
rcl
retf
outs
aad
sbb
mul
inc
push
xor
inc
daa
leave
loope
pop
out
xchg
mov
cmp
out
push
int3
pop
xor
out
js
xchg
pop
xchg
lods
out
cmp
jns
mov
add
stc
stc
dec
xor
test
aaa
mov
pop
icebp
xchg
add
mov
aad
and
mov
movs
sbb
inc
mov
xlat
pop
mov
inc
out
xor
std
nop
inc
jno
ja
rcl
mov
mov
add
xor
movs
mov
sub
sti
ds
adc
(bad)
mov
sub
sub
jle
pusha
sub
mov
jecxz
pop
ret
mov
pushf
(bad)
js
idiv
mov
pop
jle
std
dec
stos
cld
push
(bad)
iret
fnstcw
pop
pop
cmc
lea
je
fwait
shl
and
xchg
push
mov
scas
and
push
mov
sub
cmp
mov
jb
movs
outs
fdiv
or
es
mov
enter
cli
jnp
jp
jne
test
ret
xor
jmp
mov
retf
sbb
test
fs
jmp
daa
loop
inc
mov
popf
test
(bad)
pop
push
xor
fiadd
add
clc
xchg
pop
push
dec
dec
int3
mov
add
out
pop
mov
dec
adc
pushf
out
sub
adc
(bad)
fstp
jmp
mov
aam
cmc
pushf
fiadd
jno
or
(bad)
out
jmp
lahf
push
mov
push
test
hlt
cmc
das
movs
std
push
out
and
sar
daa
mov
sub
js
mov
int
mov
out
in
out
pop
sub
pop
clc
rcl
das
or
data16
sti
push
ficom
mov
fwait
mov
arpl
xor
loop
push
sbb
popf
nop
inc
in
xchg
cdq
dec
adc
xchg
or
sahf
add
pop
inc
sbb
movs
inc
mov
pop
sub
call
xor
inc
mov
push
sbb
das
push
imul
ret
pop
loope
pushf
fadd
jnp
and
dec
xlat
inc
aas
sbb
out
stc
jecxz
shl
jmp
jl
sub
sub
pop
dec
sub
cmp
sub
(bad)
push
fidiv
mov
stc
inc
adc
xchg
jb
je
ds
add
int3
or
and
ret
stc
add
cmc
outs
es
dec
add
outs
repnz
pop
push
fstp
pop
inc
mov
mov
and
ins
mov
(bad)
in
sub
inc
fild
mov
push
pop
addr16
pop
push
test
cdq
in
ror
xor
neg
xchg
gs
retf
rol
or
repnz
mov
shr
lods
cs
pop
repnz
mov
mov
bound
aad
out
mov
jg
add
mov
mov
mov
sub
xchg
call
dec
push
jl
repnz
pcmpeqb
jo
dec
dec
(bad)
int
dec
add
(bad)
imul
dec
pop
and
leave
fwait
add
push
adc
and
push
add
pop
stos
inc
pop
out
sbb
ins
adc
popa
jp
xchg
push
setne
pop
dec
lahf
or
repnz
out
dec
cli
mov
rol
in
cmp
mov
out
test
jmp
add
je
dec
jb
lods
add
popf
lods
ret
fld
scas
(bad)
mov
pop
lds
or
mov
dec
ror
xchg
outs
sbb
push
(bad)
mov
in
popa
lods
inc
and
(bad)
dec
aas
outs
ficom
in
sub
sub
sub
pop
cmps
xchg
mov
jo
pop
(bad)
adc
mov
hlt
add
mov
pop
jg
mov
add
ds
mov
xchg
outs
mov
or
ins
mov
pop
push
sbb
loopne
out
or
je
inc
dec
jmp
xor
jle
adc
movs
lods
or
mov
jge
add
xchg
pusha
imul
or
add
sbb
and
pop
stc
mov
dec
or
lahf
movs
inc
push
or
fdivr
and
cmp
push
lock
cdq
xchg
retf
cmp
nop
test
dec
inc
push
iret
add
bound
aam
stos
or
xchg
cwde
mov
sub
inc
sbb
push
inc
enter
pop
cld
xor
fbld
(bad)
repnz
sahf
inc
mov
movs
cmp
stos
sub
sub
lahf
ja
data16
rcl
aam
jp
mov
sub
fild
or
sub
das
shr
in
push
gs
ins
fs
push
retf
xchg
(bad)
not
icebp
mov
xor
add
out
mov
xchg
cli
mov
jecxz
out
pop
stos
in
or
inc
shl
adc
js
and
inc
dec
out
mov
enter
xchg
mov
jbe
inc
ins
fsubr
pop
movs
lock
aas
pop
mov
sahf
jp
xor
popf
test
mov
xor
cmp
cmp
ins
cmp
dec
int3
stos
sbb
push
xor
lock
movs
gs
sbb
adc
add
ja
or
pop
out
push
xchg
mov
sahf
repz
mov
add
mov
sub
xlat
adc
cmp
jo
or
push
mov
cmp
es
cwde
in
mov
sbb
rcr
outs
pop
call
cmps
ficomp
loopne
mul
bound
jns
stos
stos
mov
push
pop
xor
in
inc
cmp
fistp
test
lods
rcl
inc
(bad)
(bad)
shl
js
and
stos
adc
retf
inc
add
scas
jo
mov
xor
cs
nop
cmc
imul
(bad)
movs
shl
xlat
popf
push
jp
mov
add
jmp
in
pop
mov
xlat
sub
sti
or
adc
xchg
jl
jmp
sub
push
iret
jmp
add
fild
adc
scas
addr16
sar
cmps
push
xchg
jmp
push
mov
loop
(bad)
add
xchg
test
cmp
sub
mov
mov
lahf
outs
and
rcr
adc
sub
xchg
imul
jno
inc
push
inc
mov
mov
fidiv
or
lods
sbb
cmp
pop
scas
xchg
pop
xlat
fiadd
cdq
jne
sbb
lds
adc
dec
shl
jb
push
pop
xor
rol
pop
out
lods
loop
or
xor
pushf
inc
sbb
xchg
xchg
xlat
ficom
test
pop
xor
adc
inc
xlat
xchg
push
mov
(bad)
mov
(bad)
data16
inc
stc
xor
inc
cmp
push
mov
mov
xchg
je
jo
cmp
mov
scas
mov
shl
enter
add
jne
cmp
fstp
jno
rol
(bad)
into
or
cdq
xor
mov
scas
repz
inc
into
aad
push
adc
sub
adc
push
loopne
push
aas
cmps
out
das
outs
inc
mov
pop
sahf
inc
in
(bad)
idiv
dec
add
shl
(bad)
push
add
hlt
push
lods
das
xchg
mov
test
cmp
fld
xchg
push
int3
sub
sahf
cmp
aaa
push
pop
jmp
sti
xchg
sub
jmp
(bad)
jg
jge
mov
and
(bad)
mov
addr16
ins
or
aas
stos
pop
pop
sbb
movs
das
push
sub
test
mov
mov
fcmovb
mov
jmp
sub
inc
sbb
sub
scas
imul
retf
cmp
mov
mov
and
sar
pop
inc
adc
lods
cld
scas
and
mov
fwait
repz
outs
in
sbb
shr
push
adc
fdiv
and
fwait
dec
lods
push
ret
mov
(bad)
div
dec
int3
mov
pop
in
retf
push
shl
(bad)
xchg
iret
repz
repnz
mov
clc
cld
in
and
cmps
xchg
push
xchg
pop
fmul
adc
mov
das
aas
dec
clc
push
push
stc
div
hlt
xor
inc
mov
cmp
inc
cmp
dec
fcomp
(bad)
es
xor
int3
dec
stos
push
inc
and
shl
adc
jge
pop
sar
xor
mov
fnstsw
nop
prefetch
xchg
add
cmc
int3
mov
xor
and
inc
ins
sbb
pop
in
mov
dec
lds
retf
sub
mov
cvtdq2ps
mov
or
iret
adc
push
mov
imul
pop
aam
sub
adc
aad
or
shr
jecxz
ins
or
fstp
int3
out
hlt
cs
loop
inc
js
fwait
rcl
or
push
data16
fnstcw
and
mov
lods
scas
lds
lods
cmp
rcr
and
pop
pop
xlat
(bad)
sub
pop
in
cmps
add
mov
add
mov
mov
or
sub
and
cs
xor
or
xchg
xchg
into
out
and
in
gs
mov
mov
adc
clc
and
sbb
mov
pop
sbb
fild
dec
ss
jmp
lods
(bad)
rcr
in
gs
adc
cwde
xchg
cmps
inc
xchg
imul
mov
mov
pushf
fmul
dec
rcl
mov
or
and
gs
add
mov
fs
ror
and
std
sbb
pop
jb
clc
dec
xchg
(bad)
das
push
xor
jmp
jae
(bad)
ins
ret
cdq
imul
mov
movs
not
mov
lods
sbb
jmp
mov
jno
call
adc
popf
mov
loopne
add
pop
popf
test
rcr
fwait
in
mov
data16
fiadd
nop
pop
jecxz
mov
jb
and
fwait
mov
test
pop
jo
lds
and
add
jmp
jmp
and
adc
add
je
and
lds
mov
sar
sbb
leave
cmc
mov
ins
(bad)
fbstp
out
pop
push
jle
lea
sbb
ret
mov
mov
mov
lahf
adc
xchg
jo
(bad)
(bad)
cld
in
pusha
aam
mov
add
shl
jnp
inc
sub
jge
fst
mov
jo
int
push
jp
mov
(bad)
mov
pushf
xor
sbb
pop
repnz
sar
leave
xchg
aam
movs
push
sbb
lods
ss
fdivrp
shl
icebp
stc
std
cdq
cmp
jmp
lods
ss
nop
mov
add
cs
mov
xor
mov
jmp
sub
shl
out
and
dec
xor
fnstsw
fidivr
call
jl
push
sub
iret
jbe
fisubr
int
lahf
cmp
mov
pop
repnz
(bad)
mov
push
push
movs
inc
jl
add
jo
ja
aaa
repnz
xchg
int
xlat
add
test
mov
sahf
je
out
ficom
sbb
and
sbb
shl
xor
mov
out
push
cmc
pop
jns
jmp
sbb
cmps
jl
cmps
(bad)
mov
pop
ins
test
loopne
fcmovnb
gs
mov
xlat
mov
pushf
add
call
fwait
pop
sbb
outs
mov
push
mov
jmp
pusha
sub
dec
mov
mov
cld
push
xor
std
dec
push
imul
sbb
div
mov
pushf
jne
les
xchg
cld
mov
adc
dec
xchg
pop
push
push
cmp
hlt
cmp
xchg
jbe
ror
es
mov
mov
and
jne
push
cmp
imul
xchg
push
pop
das
cmp
jb
pushf
lea
sahf
mov
jg
aas
jbe
sub
xor
in
popa
out
xor
or
out
inc
shl
fsub
push
sbb
adc
cli
pushf
fstp
iret
jp
movs
test
mov
sbb
push
cdq
xchg
aaa
les
sbb
xchg
push
sbb
das
xor
inc
mov
sbb
out
jl
sub
pop
fdiv
cdq
je
or
pop
mov
int3
addr16
xor
aas
mov
test
xor
out
jmp
and
pop
shl
sbb
push
mov
xchg
push
push
pop
imul
push
fdivr
xor
pop
cwde
sti
and
dec
setno
xchg
or
pushf
cmp
bound
and
int3
and
fs
push
dec
inc
in
rol
dec
fild
xor
lock
xor
sar
xchg
sbb
and
adc
retf
or
mov
aad
mov
mov
dec
xchg
xchg
dec
mov
fst
js
mov
mov
retf
loopne
daa
stos
popa
mov
popf
dec
mov
pop
popa
mov
mov
test
xchg
rcr
or
dec
push
add
mov
xchg
mov
rcl
jns
retf
test
xchg
sbb
lock
pop
xor
fsubrp
pop
xchg
xchg
or
out
sbb
jb
cmp
repnz
bound
jmp
mov
push
cmp
or
pop
(bad)
adc
jbe
or
xor
lods
iret
loop
div
js
not
lahf
sub
lods
fs
push
(bad)
gs
ins
inc
ficomp
and
mov
rol
test
ret
jecxz
jne
aad
fwait
sti
inc
push
xlat
mov
lock
and
outs
adc
mov
push
add
or
(bad)
loope
fisttp
mov
imul
mov
add
push
push
test
xchg
sub
cmps
xor
mov
ins
int3
xchg
mov
mov
aas
sub
ds
pop
into
es
add
xchg
hlt
push
or
jle
rcr
jmp
movs
out
(bad)
inc
inc
lahf
dec
mov
out
dec
imul
stos
sbb
test
enter
push
mov
jg
add
(bad)
xlat
mov
sbb
jb
loopne
outs
movs
lahf
mov
dec
adc
add
inc
mov
icebp
or
xchg
lahf
add
nop
loopne
enter
(bad)
clc
test
mov
loop
(bad)
out
icebp
inc
add
dec
xor
or
pop
sbb
xor
shl
mov
cld
pop
mov
lods
inc
mov
mov
xor
jae
(bad)
pushf
and
or
dec
mov
xlat
ficom
or
mov
xor
and
pop
jns
mov
cmp
fsubr
inc
lods
or
sbb
sub
stc
push
addr16
out
push
jmp
mov
inc
ins
rol
xor
stc
mov
arpl
or
dec
mov
push
push
push
test
fs
lea
test
ret
mov
cwde
retf
jns
sbb
in
(bad)
jnp
loope
cmp
mov
aad
es
movs
in
ja
in
movs
or
mov
test
pop
or
jb
js
outs
xlat
mov
pop
jb
stos
or
sub
add
push
ins
push
pusha
cmps
jo
adc
ss
sbb
(bad)
and
sbb
out
ja
jg
xchg
adc
lea
sbb
enter
inc
je
out
mov
mov
fisttp
pop
cmps
xor
(bad)
out
cwde
xchg
and
iret
sub
fdiv
shr
sub
(bad)
rol
jb
or
rcr
sub
sub
pop
lea
cmc
jl
(bad)
(bad)
xchg
pop
clc
mov
scas
push
and
test
sbb
les
ins
xor
jp
jge
call
add
jmp
cmc
add
fisub
mov
fmul
rol
(bad)
xchg
cmp
inc
cmps
jl
lea
jnp
sbb
lods
out
cli
sbb
jp
(bad)
xor
dec
mov
data16
or
pop
xchg
mov
xor
adc
jne
cdq
jecxz
mov
int3
call
push
xchg
fwait
sub
cmp
int
mov
sbb
sbb
icebp
fimul
ror
rcl
xor
mov
les
sbb
xor
jl
sbb
push
inc
outs
std
push
mov
repnz
pop
push
add
adc
ins
add
pop
lods
ins
pop
jb
popf
adc
clc
in
mov
ins
rcl
jg
out
lock
fst
(bad)
xchg
not
jecxz
cmp
mov
retf
fdiv
popf
xor
fstp
or
outs
push
xchg
sbb
ins
mov
push
sbb
inc
stos
and
adc
imul
pop
imul
mov
push
and
dec
sar
retf
ror
xchg
push
data16
mov
mov
mov
jmp
repz
cdq
and
pop
(bad)
or
xchg
fbstp
les
sti
adc
lock
cmp
in
mov
push
sbb
fldcw
shl
push
mov
inc
(bad)
sbb
(bad)
sbb
sub
dec
jle
cli
sbb
xor
ret
fcomp
push
and
lea
mov
clc
dec
push
ret
or
in
inc
fwait
xchg
push
xchg
sub
dec
aad
lahf
jmp
js
dec
rcl
push
jne
jmp
outs
mov
js
or
push
movs
mov
fcmovbe
in
sbb
inc
es
or
xchg
sti
lahf
retf
mov
cli
mov
rcr
and
adc
push
into
inc
packssdw
addr16
shl
ror
mov
jnp
test
mov
cwde
sub
sub
shl
jns
(bad)
push
inc
retf
lods
(bad)
lock
daa
push
sub
outs
or
sbb
fdivp
scas
mov
mov
ret
sub
out
pop
mov
daa
dec
mov
scas
pop
pop
sbb
push
js
and
xchg
mov
(bad)
dec
pop
inc
mov
js
pop
push
sar
jbe
jns
shl
push
mov
pop
dec
pop
push
mov
out
and
(bad)
sub
push
and
fld
and
or
push
and
mov
cwde
mov
sbb
out
dec
std
cmp
inc
dec
movs
clc
inc
cs
mov
mov
cli
test
mov
gs
jl
jmp
icebp
push
and
les
adc
and
lods
and
dec
xor
movs
out
(bad)
test
or
or
stos
pushf
(bad)
iret
push
adc
dec
mov
jno
cs
cmp
inc
inc
cmps
imul
jmp
add
psubsb
sub
sub
lods
cmc
mov
mov
dec
idiv
mov
push
dec
movs
jae
sub
test
repnz
out
push
lock
xor
outs
fiadd
mov
dec
push
xor
mov
imul
mov
loopne
ds
rcr
loopne
sub
and
xor
mov
mov
push
pusha
push
(bad)
cmc
mov
inc
dec
sub
sbb
xchg
cmps
cmp
std
jecxz
jmp
test
pop
add
ins
sbb
dec
es
mov
in
or
cwde
stos
sbb
mov
add
jns
das
frstor
loopne
jge
gs
aam
daa
(bad)
test
das
(bad)
sub
mov
mov
dec
pop
jno
adc
jmp
jmp
mov
dec
xor
nop
in
cmp
test
sbb
jmp
int3
movs
mov
add
(bad)
dec
mov
dec
pop
push
sahf
push
aam
dec
add
clc
xor
inc
and
or
mov
xchg
inc
jl
jmp
cli
bound
aad
jmp
dec
pop
jg
inc
std
aaa
popa
scas
adc
fsub
xor
mov
lods
rcr
mov
cmps
loop
(bad)
push
mov
sbb
sar
fsub
mov
pop
xchg
imul
cmp
dec
and
bound
(bad)
xchg
and
inc
add
aad
push
mov
ja
mov
inc
mov
mov
in
in
or
pop
push
inc
sbb
pusha
out
ja
pop
cwde
mov
mov
xor
cli
lods
cmp
loopne
jbe
and
xor
mov
pop
out
in
xor
shr
sar
fiadd
mov
adc
cmps
imul
out
jo
cmps
pusha
test
es
dec
popf
inc
into
pop
pop
mov
shl
fucomip
shr
jne
aad
cmp
xor
mov
pop
repnz
mov
fcom
adc
in
fld
or
cmc
inc
xchg
push
daa
push
pop
pop
adc
dec
js
pusha
and
mov
frstor
or
imul
test
bound
push
(bad)
mov
mov
lods
cmps
(bad)
xchg
sub
and
call
into
mov
(bad)
xor
lahf
xor
into
pop
sub
inc
mov
mov
or
retf
and
jecxz
(bad)
mov
(bad)
cmp
jns
test
shr
jecxz
dec
jp
mov
std
dec
or
mov
out
jl
dec
fcmove
jno
cmp
ja
fsubr
je
js
jae
cmps
sub
xor
inc
pop
mov
stc
mov
mov
push
mov
or
xchg
mov
push
pop
jns
rcr
sar
rcl
repz
or
sti
int3
sub
adc
jecxz
icebp
cmc
xor
add
fsub
cli
imul
out
out
push
in
shl
in
shr
mov
sar
mov
mov
mov
popa
cmps
loop
push
inc
add
xchg
and
scas
mov
jmp
in
aas
pop
inc
jb
mov
push
xchg
shl
cmp
push
retf
outs
pop
xor
cli
pop
iret
movs
cmp
fidivr
nop
or
imul
sti
bound
scas
mov
ins
iret
(bad)
bound
and
mov
sbb
sbb
jl
int3
push
fadd
sti
or
inc
or
add
jmp
pop
pand
popf
jle
aad
cdq
(bad)
lock
repz
mov
mov
jge
mov
call
lods
jmp
out
jne
rcr
data16
mul
pop
pushf
mov
lds
icebp
jge
sbb
pop
cmp
pop
and
rol
mov
xchg
adc
(bad)
cmc
cmc
jmp
jns
nop
and
dec
outs
xchg
mov
stos
inc
cmps
loopne
push
int3
adc
mov
fwait
fs
fistp
loope
shr
mov
retf
and
icebp
repnz
fcmovu
ss
iret
sbb
mov
xor
cmp
sbb
jnp
jmp
cmp
push
test
and
dec
jp
into
std
add
sub
cmps
inc
pop
xchg
dec
nop
inc
sub
mov
ret
xchg
jg
add
pop
inc
loope
dec
mov
cld
out
xchg
imul
jae
jmp
jp
inc
xchg
dec
push
inc
sub
push
lds
outs
adc
loop
cld
dec
test
mov
dec
mov
pop
popf
sub
pushf
dec
jb
scas
mov
xor
push
xor
int3
gs
xor
mov
mov
xchg
cmp
adc
mov
out
loopne
cmp
sub
sbb
add
loopne
imul
call
rol
pause
(bad)
ins
(bad)
jb
lods
sbb
sbb
cmp
out
fs
sub
mov
xchg
mov
mov
test
(bad)
dec
add
daa
daa
lea
fwait
mov
jmp
outs
jno
jo
add
sub
(bad)
clc
and
lods
mov
scas
sub
mov
xor
mov
sub
inc
retf
xchg
aad
or
fadd
cmp
jb
fistp
and
xchg
add
scas
add
and
mov
jns
inc
inc
cli
hlt
jmp
iret
adc
cmp
push
test
aad
cmp
or
jbe
daa
fadd
cwde
mov
imul
movs
push
pop
fmul
test
mov
sub
push
(bad)
hlt
and
int
mov
mov
test
out
push
push
cmp
cs
popf
cmp
dec
inc
shl
fstp
lds
mov
imul
int
pop
int
stos
pop
lods
ss
sub
sbb
mov
inc
je
loopne
pop
push
adc
adc
sbb
nop
mov
inc
ret
cmps
rcr
mov
lahf
push
push
pop
xrelease
sbb
jmp
sub
call
fdiv
ja
fmul
sub
push
xchg
lds
inc
arpl
movs
repnz
in
mov
push
fs
mov
das
cwde
xchg
jb
cmp
xor
pop
dec
sbb
xor
iret
cld
jl
cmp
addr16
mov
test
pop
sbb
(bad)
aaa
xchg
dec
cld
je
sar
movs
cmp
into
pop
ret
loope
mov
cmp
pop
add
add
in
adc
and
repnz
xor
mov
mov
xchg
in
push
sti
adc
dec
pop
inc
retf
je
jge
jo
dec
cmp
ret
cmp
stos
or
call
push
hlt
rcl
pop
sbb
js
and
retf
mov
adc
adc
ret
jo
jnp
inc
sti
xchg
stc
fsubp
ss
call
das
or
loop
in
aad
rol
jmp
neg
adc
mov
int
test
pop
jno
lock
xchg
push
into
pop
es
add
jg
push
push
pop
int3
add
mov
mov
das
xchg
jmp
mov
inc
cld
inc
popa
ret
xlat
loop
push
jb
enter
cmps
fcom
mov
adc
inc
div
loop
cmp
(bad)
and
push
sub
(bad)
jno
stc
add
and
sbb
sub
stos
xchg
mov
daa
cli
rol
push
arpl
cmp
arpl
lock
jmp
or
pop
jnp
dec
mov
mov
and
and
adc
xchg
in
mov
int3
div
aam
mov
cmp
ds
ficom
inc
test
hlt
add
adc
(bad)
cmp
add
jg
xor
cmp
popf
ret
daa
push
loope
dec
mov
and
push
sub
pop
or
rol
pop
xchg
in
or
into
jge
mov
mov
popa
mov
push
push
mov
sbb
mov
jo
mov
adc
pop
aas
jb
or
jecxz
call
mov
shl
sbb
and
mov
outs
or
sbb
adc
loop
or
sbb
mov
call
into
nop
cdq
jnp
and
pop
and
adc
pop
mov
sub
test
(bad)
pop
and
shl
or
ret
jge
jo
ins
cmp
sbb
jmp
hlt
mov
xor
push
xchg
jecxz
jmp
pusha
out
jg
(bad)
jbe
mov
data16
xor
in
mov
(bad)
fld
ret
mov
inc
inc
lods
cwde
lock
inc
mov
sub
js
mov
mov
movs
sbb
imul
enter
pop
pop
add
test
inc
mov
daa
(bad)
loop
push
ds
mov
dec
fsub
repnz
jo
inc
fs
add
jge
retf
fist
movlps
cmp
mov
rcr
test
add
fsub
mov
mov
scas
outs
xchg
jb
push
test
xchg
neg
and
retf
lahf
or
mov
sub
out
into
mov
es
in
out
pop
mov
sub
mov
imul
mov
lods
cmps
xchg
push
jmp
pop
stc
jae
neg
fild
cld
dec
cmc
shl
out
daa
lods
ins
(bad)
das
xchg
retf
fcomp
add
push
ss
sub
mov
movs
sbb
aaa
mov
lea
mov
fiadd
jno
popf
sbb
(bad)
std
clc
mov
dec
mov
jno
adc
lahf
mov
jl
push
ficomp
add
retf
fsubr
jno
outs
mov
loope
xor
xor
xor
in
xchg
inc
dec
cli
and
dec
scas
push
sub
(bad)
lods
clc
or
jle
out
in
pop
jg
or
rcl
xchg
ror
push
aaa
das
add
lods
fisttp
imul
mov
test
push
inc
sbb
xchg
add
dec
(bad)
in
and
lea
inc
dec
shr
stos
sub
fwait
scas
mov
jge
push
das
in
inc
test
aad
fsub
jmp
cmp
cmp
xor
inc
aaa
sub
ret
loop
add
cs
xor
stos
pop
xchg
xor
cwde
push
mov
adc
and
aas
scas
sub
dec
and
pop
stos
scas
mov
jp
scas
in
mov
or
(bad)
dec
mov
jmp
add
or
cmp
pop
inc
es
sbb
sbb
arpl
(bad)
idiv
pop
stc
pop
int3
cmp
cmp
add
sbb
loop
cmps
scas
nop
lds
push
hlt
push
jge
retf
es
cmp
adc
xor
add
jmpw
ss
or
add
mov
pop
aas
mov
jmp
xor
pop
lahf
sub
ins
(bad)
movs
mov
sub
jmp
dec
add
leave
pusha
pop
aas
ret
inc
xchg
or
and
mov
icebp
pusha
(bad)
mov
pop
repz
push
(bad)
not
jnp
pop
sub
dec
adc
or
mov
(bad)
data16
fsub
mov
sub
sbb
add
and
pop
(bad)
xchg
and
dec
cmps
imul
inc
or
mov
jg
push
sub
daa
fucom
xchg
jno
xchg
popf
push
les
mov
pop
sub
or
(bad)
movs
iret
push
mov
jg
push
mov
inc
inc
mov
cmp
mov
or
ins
hlt
cmp
int
mov
push
add
push
push
sub
mov
lea
add
pushf
(bad)
js
(bad)
fisttp
push
push
jle
or
mov
nop
add
(bad)
sub
jecxz
push
pop
or
in
out
fsub
or
(bad)
rep
inc
inc
inc
adc
bound
mov
jb
mov
popa
mov
adc
dec
mov
mov
loop
fdiv
pop
mov
mov
pop
mov
push
jle
dec
dec
dec
sbb
sahf
adc
scas
add
pushf
jge
lea
call
rcl
mov
cmp
test
ss
xlat
push
iret
adc
adc
repnz
pusha
sub
cld
fmul
fwait
rcr
fidivr
(bad)
push
xor
push
lahf
sbb
cmc
aad
test
xor
or
add
adc
dec
out
outs
sub
lds
inc
or
and
out
mov
xchg
(bad)
push
in
scas
mov
rcr
mov
jp
sub
xor
cmps
lods
jno
into
mov
pop
das
cmp
or
call
dec
cmp
inc
or
movs
mov
pop
mov
mov
mov
fadd
add
cmp
mov
stos
ret
iret
js
in
xchg
fs
in
sub
sbb
test
mov
test
js
mul
test
mov
hlt
sub
addr16
mov
mov
dec
shl
(bad)
int
mov
cdq
pop
xor
cs
daa
lods
lods
or
sbb
pop
jmp
lock
inc
mov
xor
sbb
mov
or
shl
scas
add
mov
jnp
shl
fdivr
into
(bad)
outs
jnp
pop
adc
dec
cs
push
mov
cmp
fisubr
inc
scas
shl
push
jl
add
sti
xchg
mov
popf
call
mov
jne
lods
jmp
push
aaa
bound
mov
arpl
cmp
ins
lds
and
mov
push
lods
imul
sbb
xchg
js
jge
push
cmp
imul
mov
cmp
cmp
dec
fld
movs
int
sub
inc
out
sub
(bad)
not
and
popa
fdiv
or
outs
dec
sub
leave
mov
xor
clc
adc
adc
scas
cmp
ins
iret
sub
mov
fstp
mov
push
nop
dec
in
not
mov
mov
test
xchg
jp
cmp
adc
lods
jbe
call
std
and
fisub
add
cwde
cmc
psllw
dec
jae
add
jae
hlt
test
cmps
dec
pop
cwde
push
xchg
(bad)
ss
in
shl
(bad)
arpl
push
adc
or
xchg
xor
or
inc
sbb
(bad)
int
pop
pop
jne
jg
movs
dec
cs
sbb
pop
xor
mov
jge
and
rcr
inc
sbb
hlt
js
xchg
popa
(bad)
or
into
push
or
adc
mov
sbb
mov
pop
ficomp
add
inc
jmp
adc
adc
arpl
and
cmp
push
imul
popa
(bad)
inc
pop
test
retf
aam
mov
repnz
sub
mov
xchg
stos
jl
movs
sub
lds
dec
out
jecxz
mov
adc
(bad)
mov
outs
cli
imul
fdivr
push
jnp
mov
mov
retf
fs
mov
and
aas
repnz
xor
dec
jae
and
(bad)
(bad)
pushf
sub
push
jmp
fidivr
outs
jae
dec
push
aaa
test
mov
loopne
mov
ficom
sub
mov
fld
adc
test
retf
je
pop
inc
addr16
xchg
es
and
jo
fs
out
sbb
scas
dec
lods
pop
fimul
or
push
inc
inc
sbb
test
mov
div
mov
pop
mov
inc
sub
(bad)
and
fdiv
int3
clc
jnp
movs
push
stc
and
xchg
add
mov
cs
cs
ret
push
xor
push
and
mov
mul
adc
int3
jmp
xchg
sbb
jbe
cld
cmp
pop
dec
mov
sub
push
push
jns
rol
hlt
stos
cwde
dec
sub
sub
jmp
xor
inc
not
lods
xchg
cmp
add
xlat
fist
jno
cmp
ja
shr
or
aas
sahf
popf
ret
push
mov
xor
fxch
cmps
movs
inc
gs
cmp
xor
fdivr
mov
jg
xor
pop
pop
fld
pop
pop
das
sub
mov
out
in
sbb
into
adc
xor
ss
inc
out
xchg
inc
fisubr
sar
ins
mov
retf
call
mov
leave
inc
rol
aaa
cld
and
inc
or
fistp
outs
and
pop
mov
in
loope
cmp
xchg
mov
mov
push
ins
sbb
sub
in
inc
shl
das
repnz
mov
sub
push
shl
jns
imul
inc
clc
ins
sahf
sbb
and
test
addr16
or
retf
adc
add
scas
xchg
ret
fwait
xor
adc
movs
ds
and
cs
inc
mov
es
mov
cmp
push
ret
xchg
in
xor
call
mov
xor
sub
in
push
(bad)
fistp
add
in
mov
push
mov
jno
into
mov
fsub
dec
test
jl
pop
(bad)
ins
mov
fwait
icebp
cs
xchg
fsubp
sbb
(bad)
out
jmp
xor
in
clc
sbb
dec
lods
movs
push
xchg
push
dec
mov
mov
inc
in
fwait
icebp
out
mov
xchg
(bad)
out
push
and
xor
push
xlat
jne
retf
mov
cmp
push
mov
xchg
mov
call
pop
enter
aaa
ins
daa
mov
popa
aam
rol
dec
dec
sbb
jns
stc
lea
lods
vpunpckhqdq
or
inc
mov
pop
mov
test
jle
(bad)
lods
push
dec
adc
cmps
add
jb
and
shl
fimul
jmp
sbb
jo
rcl
retf
push
sub
push
xchg
mov
adc
or
fwait
cwde
pop
mov
out
push
lock
cmp
cmps
add
sub
fst
fadd
dec
adc
jae
sub
xchg
push
pusha
leave
xchg
and
int3
fild
es
loope
sbb
lock
push
mov
inc
pusha
fldenv
cmps
sub
jnp
and
cwde
xor
or
fidiv
adc
rol
and
repnz
jg
xor
dec
pop
push
jp
or
cmc
xchg
int3
push
iret
cmp
aaa
adc
popa
outs
add
fmul
cli
mov
push
cmp
push
push
in
(bad)
in
(bad)
xor
cs
leave
xor
es
jp
adc
inc
test
das
mov
jno
data16
push
adc
(bad)
stc
dec
jb
and
inc
out
(bad)
loope
jmp
jne
xchg
in
add
leave
addr16
leave
or
lods
push
push
push
add
sub
dec
mov
and
ror
out
mov
mov
(bad)
mov
int
popa
mov
sub
mov
mov
imul
jmp
lds
sbb
(bad)
mov
xchg
mov
adc
jg
xor
ret
mov
outs
div
mov
ja
clc
xchg
mov
shl
ret
pop
fmul
dec
mov
(bad)
aam
or
repnz
out
mov
adc
inc
cs
ret
mov
rcr
jecxz
imul
cmp
jno
pop
mov
(bad)
stc
(bad)
pop
aad
inc
loope
(bad)
jnp
jge
dec
int3
out
loop
scas
adc
sbb
pop
pop
fadd
(bad)
xchg
int
lea
push
ret
adc
lock
test
adc
out
out
add
mov
pop
dec
xchg
dec
(bad)
(bad)
mov
addr16
pop
std
xchg
out
lock
mov
ja
push
inc
push
pusha
inc
pushf
xor
cmps
imul
xor
xchg
dec
rcr
mov
xchg
adc
out
pop
fcomp
in
aad
iret
adc
dec
inc
cwde
jl
push
cli
sub
inc
xchg
and
add
aad
mov
call
frstor
in
shl
adc
hlt
sti
jae
aam
inc
fnsave
dec
(bad)
shl
adc
fldcw
ficomp
dec
jno
cmp
and
xor
ds
ds
sub
lock
sub
mov
les
les
adc
mov
(bad)
mov
aas
cmp
push
popf
jnp
pop
leave
into
test
scas
mov
pop
ret
scas
push
push
es
mov
loopne
addr16
jb
push
inc
cwde
sub
cwde
sbb
xlat
push
imul
mov
inc
aad
test
aam
je
mov
scas
jge
adc
sub
mov
ror
push
push
mov
push
mov
cmc
and
ss
mov
(bad)
mov
rcr
push
dec
push
js
add
inc
dec
or
xor
call
cmps
ret
nop
cmps
fadd
jmp
mov
popa
ret
xchg
inc
xor
mov
xor
inc
adc
mov
mov
je
in
xchg
push
test
jo
jo
fist
repz
sbb
aaa
imul
dec
das
add
mov
mov
test
sbb
pop
(bad)
push
or
and
mov
sti
iret
pop
call
cmc
adc
add
adc
popf
xchg
imul
fs
and
ins
je
jo
mov
mov
mov
sbb
jo
inc
int
cmc
and
pop
repz
push
movs
mov
arpl
(bad)
mov
outs
jo
dec
pusha
movs
pop
lahf
lfs
lds
inc
cmc
pop
xor
ret
idiv
jl
hlt
fstp
dec
jne
pop
inc
adc
iret
shl
mov
cli
cmp
ror
lea
aas
jg
jnp
dec
cmp
adc
cdq
mov
add
call
inc
retf
lods
pop
cwde
adc
(bad)
test
test
sbb
mov
sub
or
pop
mov
fs
mov
js
dec
mov
movs
retf
or
inc
jmp
call
into
dec
(bad)
and
pop
fist
ror
cmc
int3
nop
repz
(bad)
in
mov
xor
jns
jne
push
xchg
stc
xchg
addr16
dec
add
ins
push
and
mov
outs
out
bnd
in
sar
cmc
xor
shr
fsub
iret
fmul
sub
fild
sub
addr16
cld
jmp
mov
cmc
jle
scas
xlat
sbb
test
(bad)
in
xchg
mov
ret
mov
and
xchg
outs
ins
push
loop
outs
in
ror
cs
div
inc
cmps
cmps
sub
push
outs
pusha
mov
push
test
fisub
xor
xchg
mov
aaa
ror
and
pop
adc
call
add
and
dec
(bad)
push
xor
fiadd
or
xchg
dec
jg
sar
mov
mov
pop
inc
jge
pop
sub
add
sti
xchg
mov
mov
(bad)
js
cmps
push
pop
adc
and
pop
push
out
loop
inc
xchg
sub
push
dec
scas
out
outs
and
int3
cmps
sar
cmc
arpl
push
xchg
sub
cmp
pop
adc
mov
push
fwait
nop
ds
loop
dec
or
not
push
xor
jecxz
mov
xor
xchg
(bad)
movs
cmp
jbe
(bad)
cmp
(bad)
push
fadd
fs
gs
jno
mov
sbb
(bad)
jno
aas
jmp
pop
sub
fs
stos
sbb
sar
pop
pop
or
xor
sbb
adc
mov
sbb
inc
pop
std
mov
pusha
pushf
mov
inc
xor
mov
mov
mov
xchg
fbstp
sahf
and
out
(bad)
or
jmp
add
stos
add
add
inc
xchg
push
test
sti
bound
cdq
loop
dec
sbb
cmps
dec
sub
(bad)
leave
or
jns
xor
sub
mov
fwait
and
jl
shl
pop
and
dec
pop
pop
xor
or
ret
mov
loopne
int
xchg
or
jnp
fs
lods
retf
inc
pop
ret
hlt
aas
cmp
xchg
loope
jns
pop
leave
mov
movs
(bad)
xlat
xchg
sub
ins
mov
cmp
(bad)
pop
rep
or
ror
sub
icebp
mov
aam
jge
inc
mov
test
fld
movs
gs
in
or
sti
repnz
mov
ss
(bad)
icebp
dec
push
mov
cmps
push
adc
jle
rol
arpl
fdivr
xor
sub
xchg
or
mov
(bad)
fdiv
in
adc
fidivr
add
sbb
xchg
call
xor
cld
mov
inc
cmp
jb
push
pusha
int
mov
and
mov
mov
pop
sub
cmp
popf
xchg
dec
xchg
aam
jmp
fimul
loope
(bad)
and
dec
xchg
stos
cwde
xor
(bad)
in
dec
popf
xor
xor
repz
and
ins
ja
jmp
mov
call
ins
fisttp
push
jb
add
aad
clc
ficomp
dec
mov
stos
mov
pop
daa
movs
push
mov
lock
scas
push
mov
repz
fiadd
stc
adc
mov
and
(bad)
mov
in
and
mov
xlat
inc
shl
idiv
aaa
pop
add
arpl
ins
pop
pop
leave
or
mov
push
iret
push
(bad)
mov
mov
mov
arpl
mov
cmps
add
ret
ror
xor
xlat
into
dec
nop
adc
xor
pop
mov
mov
add
stos
std
jl
int
pushf
sahf
ins
repz
jl
inc
sar
inc
repz
cmp
ds
sahf
bound
mov
sar
inc
rol
cmc
call
es
add
lock
mov
ret
imul
int
sbb
ficom
scas
cs
dec
pop
push
jb
mov
dec
test
scas
pop
push
push
es
push
daa
xchg
jecxz
mov
xlat
xor
mov
mov
movs
inc
push
gs
mov
and
mov
clc
stos
retf
(bad)
repz
xchg
fsub
or
ins
push
loope
fwait
adc
fsub
or
stc
call
sub
iret
sbb
jmp
movs
movs
or
(bad)
jo
push
cmps
lds
scas
or
cmp
(bad)
mov
ds
int
ficom
pop
mov
sub
aad
not
outs
frstpm(287
push
dec
fwait
cs
mov
(bad)
add
inc
scas
cmps
imul
test
mov
jmp
mov
mov
xlat
jge
jmp
xlat
js
push
arpl
mov
jno
adc
push
adc
rol
xor
mov
and
mov
adc
lea
lds
jmp
cmps
in
pop
sub
xor
(bad)
xor
inc
inc
or
loope
rcl
(bad)
dec
loope
jp
and
aam
test
pushf
nop
adc
xor
mov
pop
mov
out
lahf
add
mov
cli
cmp
adc
sbb
out
mov
mov
jbe
test
cmp
jns
sbb
popa
scas
sub
imul
push
mov
xor
lds
fcom
mov
fidivr
adc
test
stos
push
stos
test
bound
or
xor
add
out
in
push
mov
mov
or
int
and
std
push
mov
test
cmc
(bad)
push
add
mov
fsub
push
mov
ret
dec
sbb
popa
sbb
(bad)
gs
in
adc
fs
popa
fcmovu
cmp
mov
addr16
jge
pop
in
push
ficom
jle
adc
pop
xor
push
sub
dec
xor
push
cmc
rcl
push
gs
fadd
or
arpl
daa
out
mov
fs
cmp
mov
arpl
les
or
in
dec
pop
imul
sbb
imul
xchg
cmp
leave
mov
movs
pop
pop
jne
push
xchg
inc
cmp
mov
sahf
push
dec
or
jo
xor
sub
or
sbb
jb
loope
jne
cmovp
jb
push
in
sbb
and
lahf
sti
(bad)
stc
cmp
in
sbb
mov
fdiv
rcr
mov
into
iret
jg
rcr
sti
(bad)
cdq
pop
(bad)
in
xchg
push
test
(bad)
pop
sti
jg
je
jmp
push
cld
(bad)
fnstenv
mov
xor
inc
jno
xchg
fbstp
loop
inc
add
aas
cmp
or
test
test
js
out
xor
(bad)
jo
test
mov
cmp
xor
shl
(bad)
mov
dec
pusha
lds
jno
popf
jae
dec
mov
movs
fiadd
and
inc
mov
cs
push
sub
xor
sti
in
fcomp
(bad)
ror
push
push
test
stc
mov
movs
xor
shl
mov
xchg
inc
and
and
push
jg
not
mov
push
push
and
arpl
xchg
push
int
sub
stc
push
sub
or
jle
aaa
call
and
pop
push
(bad)
repz
mov
mov
jbe
dec
inc
ret
sbb
(bad)
out
mov
cmp
adc
mov
les
xor
ss
fnsave
push
add
fcmovnb
sub
ja
(bad)
out
mov
jmp
jae
inc
and
mov
iret
mov
adc
scas
and
jno
movs
pop
xor
adc
sbb
lods
ja
xchg
or
test
repz
adc
fist
push
add
sub
mov
pop
test
pusha
arpl
mov
jae
xchg
xchg
(bad)
push
xchg
add
aas
ficomp
movs
ins
xor
gs
aam
ins
cwde
pusha
lds
mov
xchg
ins
jbe
shl
imul
sub
js
jbe
shl
and
dec
sti
loop
pop
arpl
sub
aaa
inc
push
sbb
fsub
or
or
and
lds
xchg
or
sbb
neg
add
sahf
retf
xchg
jmp
fs
loopne
push
push
nop
xchg
fdiv
and
in
mov
pop
rol
mov
clc
es
sahf
xor
movs
pop
fidiv
mov
inc
lahf
mov
xor
es
xchg
ja
nop
ds
push
sbb
inc
test
(bad)
popa
push
xor
sbb
icebp
fwait
lods
retf
jmp
jl
fcmovnbe
jae
iret
mov
sub
rcr
mov
test
clc
pop
out
push
sbb
lea
cmc
xchg
ret
add
xor
jns
cmp
mov
repz
jbe
stos
dec
mov
mov
rol
pop
push
jno
test
mov
xchg
mov
mov
pop
pop
jmp
xchg
xlat
stos
retf
dec
movs
push
push
cmps
ja
je
push
in
mov
sbb
mov
(bad)
aad
and
inc
in
(bad)
out
xchg
dec
push
outs
pop
pop
and
jmp
mov
inc
cmp
sub
(bad)
jbe
out
std
adc
inc
sti
mov
mov
out
xor
mov
icebp
jno
xor
push
push
inc
cmp
inc
fnstcw
push
inc
sub
push
jno
cs
jo
ror
lock
leave
imul
and
xchg
dec
mov
int
je
push
xor
mov
mov
cdq
out
pop
lods
in
jb
mov
fucomp
sub
or
cmp
cmps
and
data16
dec
fnstenv
call
outs
in
cmp
lods
xchg
pop
leave
adc
xchg
push
in
enter
lahf
outs
sar
xchg
cmp
(bad)
std
movs
into
or
call
pop
pop
icebp
add
fcmovu
je
(bad)
xor
push
dec
pop
in
dec
cwde
icebp
fdivr
test
xchg
xor
xchg
or
mov
jne
aas
mov
out
push
gs
imul
pusha
ins
mov
pop
sbb
add
dec
shl
xchg
stos
(bad)
stc
fisttp
jae
sbb
cmp
cmp
enter
pop
je
mov
mov
push
jns
lock
xor
cmp
sbb
cmp
mov
movs
inc
out
pop
jle
int
aad
and
dec
stos
mov
test
jge
loope
pop
in
ds
pusha
add
les
mov
ins
pop
lahf
out
popa
(bad)
rol
fnstcw
stos
inc
push
mov
add
mov
imul
inc
jl
sub
xor
ror
mov
iret
repnz
or
push
enter
xchg
sar
mov
(bad)
adc
jae
call
shl
test
mov
cmp
idiv
fild
cmp
jmp
pop
cs
dec
xchg
xor
inc
gs
sbb
or
(bad)
stos
fild
(bad)
jne
(bad)
(bad)
mov
(bad)
xchg
(bad)
sbb
cmps
test
inc
bound
ins
enter
cmp
xor
out
ret
inc
(bad)
push
cmp
les
and
bound
ins
lahf
pop
imul
es
sub
int
add
in
cdq
inc
pop
xchg
mov
ja
jmp
les
in
and
add
sub
mov
mov
out
retf
mov
cmp
ins
push
loopne
xor
jmp
and
gs
push
shl
jae
inc
jne
xor
mov
sub
jbe
int3
xor
loop
mov
dec
call
dec
push
mov
(bad)
cmc
enter
ins
lahf
add
test
mov
nop
mov
clc
xchg
push
sbb
lods
popa
sbb
popf
cmp
jnp
xor
xor
lock
adc
cmp
fstp
jmp
ret
mov
push
aaa
jno
mov
enter
std
pop
pop
push
cmp
fcmovne
in
popf
or
popa
mov
adc
jno
dec
jecxz
shl
test
les
mov
outs
cmps
test
dec
inc
jns
dec
lods
cmps
sbb
call
in
jne
dec
bnd
test
imul
jle
cmps
aas
push
sbb
pop
xor
xchg
mov
les
pop
scas
fadd
cmp
sbb
mov
cmc
aas
les
mov
and
popf
outs
xor
cld
push
pop
mov
ins
xchg
out
xchg
or
enter
adc
popf
cmps
cmc
cmps
inc
xor
jle
loope
shl
push
and
xchg
outs
aas
mov
or
pusha
inc
jl
dec
sbb
sbb
xor
fcom
add
xchg
fwait
and
cmp
bound
icebp
xlat
pop
es
das
nop
ror
addr16
xor
mov
fs
clc
pop
adc
lods
push
dec
push
popf
sub
mov
lods
(bad)
out
lahf
jno
stc
dec
(bad)
mov
sub
and
push
dec
dec
fwait
mov
fsubr
sbb
lahf
or
jmp
clc
mov
adc
nop
push
lahf
adc
pop
mov
(bad)
(bad)
cmps
mov
std
mov
add
dec
mov
sti
mov
xchg
in
fld
sbb
cmp
mov
xchg
gs
icebp
xor
xchg
(bad)
mov
daa
cli
hlt
dec
jbe
(bad)
repz
scas
repnz
mov
inc
in
add
call
fdiv
xchg
add
fnsave
(bad)
mov
xor
mov
int3
xchg
jmp
je
lahf
xor
push
cmp
frstor
and
jns
test
cmp
xchg
push
mov
test
aas
adc
scas
(bad)
adc
push
test
idiv
fimul
push
mov
and
addr16
jl
in
cmp
adc
xor
sbb
call
mov
or
(bad)
in
xor
xchg
xchg
iret
scas
test
cmc
pop
mov
xchg
out
jmp
mov
mov
jnp
push
call
and
lea
(bad)
gs
cli
fwait
sbb
mov
and
aaa
pusha
jmp
mov
imul
xlat
inc
pop
inc
or
cld
mov
popa
push
aam
imul
sbb
ins
mov
dec
pop
pop
mov
mov
je
in
in
adc
xor
sub
div
(bad)
pushf
stc
or
push
mov
daa
addr16
js
xchg
icebp
lds
mov
cmps
adc
mov
mov
outs
movs
dec
adc
mov
mov
pushf
fld
scas
rcr
fisubr
iret
xchg
stos
add
jbe
adc
mov
imul
sbb
(bad)
lds
and
loopne
aam
imul
add
jp
xor
adc
popf
(bad)
and
cld
xlat
fist
mov
xchg
daa
pusha
ror
jb
(bad)
int
add
in
ss
out
mov
mov
int
pop
aad
mov
addr16
pop
pusha
push
mov
or
adc
mov
dec
out
in
imul
push
adc
mov
or
call
push
push
dec
xor
adc
outs
jecxz
dec
fsubr
and
pop
(bad)
sbb
pop
cmc
loope
sub
ror
(bad)
jnp
adc
xchg
imul
push
jno
out
je
pop
lods
ins
jae
mov
dec
jb
test
dec
lea
or
add
sub
xor
rol
int3
cmp
and
and
mov
ror
inc
or
push
pop
test
jns
add
imul
lods
imul
push
cmps
mov
pop
sti
dec
jl
dec
sbb
jae
xchg
dec
pushf
cs
push
ret
icebp
mov
sub
popa
push
jmp
ins
dec
mov
mov
scas
dec
mov
add
std
mov
rol
movlps
cs
sbb
call
pop
sub
std
mov
(bad)
mov
idiv
jnp
addr16
jnp
test
push
and
add
int3
mov
lods
clc
inc
cmp
test
inc
cs
cmc
in
or
jae
push
jmp
ficom
fwait
aas
mov
xchg
jmp
xlat
adc
xchg
sbb
clc
mov
repz
mov
sub
fwait
push
sbb
gs
addr16
lahf
dec
ss
push
mov
fstp
push
int
adc
idiv
push
imul
int3
sar
push
fcomip
jge
dec
cmp
arpl
push
arpl
mov
pop
sub
dec
mov
xchg
or
rcr
inc
push
(bad)
push
xchg
imul
imul
nop
pushf
inc
mov
out
ret
jnp
ja
mov
jp
sahf
loope
xor
mov
jb
fsubr
aam
hlt
jns
sub
pop
daa
out
dec
or
cmp
or
push
movs
stc
popa
in
cmp
jb
pop
push
outs
mov
retf
jl
pop
mov
cld
or
movs
xchg
adc
mov
xchg
ja
cmp
inc
enter
adc
ret
jmp
lock
movs
adc
xor
in
mov
sahf
jbe
rcr
dec
cdq
jmp
arpl
inc
inc
push
lock
test
dec
fsubr
fsubr
jge
ret
imul
push
icebp
xchg
icebp
rcl
hlt
adc
(bad)
pop
mov
jg
sub
loop
jno
bound
fcomp
cmp
jns
dec
(bad)
lahf
ja
mov
movs
push
popa
and
push
or
jecxz
jne
gs
call
fcmovnbe
fdiv
jae
(bad)
push
mov
xor
sbb
stos
xor
pop
sbb
repnz
les
cmp
pop
mov
sub
out
mov
gs
jmp
sub
and
cwde
ss
mov
out
mov
xor
in
nop
inc
fldenv
sar
out
push
cli
ret
call
in
ja
retf
push
xor
inc
retf
mov
or
stos
adc
lds
scas
add
cmp
jle
lods
push
mov
rol
fidiv
leave
pop
jle
add
mov
pop
cmp
adc
sahf
stos
cmp
daa
xchg
mov
cli
lahf
xchg
out
cli
mov
pop
dec
ds
or
jmp
cdq
out
js
jno
push
call
dec
cmc
push
push
icebp
int3
sbb
add
xlat
cmps
xchg
jmp
adc
das
sbb
daa
dec
scas
xlat
mov
jmp
pop
pop
scas
push
push
adc
push
mov
(bad)
es
in
xor
movs
in
adc
mov
jno
call
arpl
hlt
xchg
es
test
bound
mov
loopne
dec
cwde
jbe
mov
bnd
xchg
jno
pusha
mov
mov
dec
clc
movs
addr16
xor
sub
mov
arpl
(bad)
adc
repnz
call
mov
pop
mov
cmp
aaa
xlat
jp
xchg
cmp
jle
popa
jecxz
in
shr
popf
loope
std
lods
jl
arpl
popf
inc
stc
es
sub
push
sub
mov
sbb
outs
icebp
jmp
dec
adc
mov
movs
(bad)
outs
and
ins
cli
out
fsubr
scas
shl
sbb
outs
cmc
or
fisubr
jbe
imul
mov
pop
lods
mov
xor
push
sbb
mov
fwait
and
sub
sti
addr16
xor
mov
mov
push
pop
les
jne
inc
mov
xchg
or
jmp
test
jns
or
xchg
outs
out
stos
mov
pushf
leave
(bad)
pop
push
call
cmp
clc
xchg
bnd
jb
movs
std
imul
xor
mov
sar
in
adc
dec
push
mov
mov
rcl
add
ds
lods
jmp
addr16
bound
stos
add
mov
call
(bad)
cdq
outs
pusha
stos
ja
mov
movs
(bad)
jmp
jp
lods
test
popa
or
std
add
fwait
ins
mov
dec
adc
nop
stos
cmp
inc
in
inc
hlt
fld
pop
adc
call
stos
and
mov
xchg
jne
dec
mov
dec
data16
cmp
in
in
cmp
push
into
push
inc
les
adc
test
xchg
mov
push
and
in
int3
push
cs
sub
inc
fistp
push
jbe
cmps
in
mov
scas
dec
cli
jmp
push
mov
xchg
cmc
adc
je
dec
xchg
leave
cli
call
dec
xchg
out
add
in
scas
xor
jns
or
inc
sub
lea
dec
mov
mov
fild
outs
mov
jnp
jecxz
mov
mov
ret
shl
or
adc
loopne
xor
idiv
xor
aam
das
push
fwait
mov
xchg
div
xor
rol
leave
repz
or
jg
xchg
(bad)
ja
dec
or
in
out
or
mov
pop
int
cmp
das
dec
cmp
mov
add
dec
add
push
mov
leave
dec
add
mov
ret
adc
in
out
popf
popf
and
int3
data16
ds
lahf
add
fs
and
xor
ja
cmp
mov
dec
dec
jmp
or
movmskps
cmps
rcl
xchg
mov
out
cli
fmul
mov
ret
mov
lods
cmps
xchg
jp
(bad)
dec
push
lods
outs
rcr
mov
(bad)
mov
test
push
and
add
addr16
jp
jg
or
call
push
adc
iret
inc
fild
fnstsw
mov
add
inc
psubb
push
push
packuswb
out
push
retf
out
dec
jns
or
out
cdq
add
ins
popa
ret
adc
mov
push
out
push
xor
dec
adc
add
stos
pop
je
gs
ss
addr16
and
rcr
jl
and
movs
sahf
fist
dec
mov
and
push
fnsave
pop
push
mul
push
outs
test
adc
bound
add
movs
ret
fist
or
jecxz
sub
push
imul
add
or
mov
adc
cs
mov
mov
out
je
sahf
xor
rcr
scas
sbb
cmp
mov
int
pop
sbb
mov
outs
fbstp
es
popf
sbb
stc
fild
daa
sahf
enter
test
and
xor
push
mov
sub
pop
xchg
mov
out
rol
push
dec
add
repnz
out
ins
sub
sub
add
xchg
es
inc
sbb
xchg
sbb
sub
pushf
push
fdivr
add
nop
inc
cmp
cmp
cmp
jne
aad
inc
(bad)
mov
cmp
out
adc
jns
shl
bound
jmp
neg
xchg
mov
sub
addr16
out
jg
shl
sbb
(bad)
push
popa
stos
push
add
rol
in
imul
es
cmp
jbe
inc
jae
pop
mov
shl
dec
pusha
jp
ja
add
pop
and
std
add
or
and
es
sub
icebp
jnp
adc
mov
sub
jg
sub
(bad)
hlt
ror
imul
loopne
or
movs
ret
popf
push
mov
sbb
dec
retf
adc
arpl
ret
test
(bad)
or
test
pop
aaa
pop
gs
jmp
in
mov
add
adc
aaa
inc
mov
dec
call
mov
call
sub
test
push
into
lock
aaa
dec
jp
lahf
inc
das
or
pop
stc
jmp
in
popf
xchg
dec
sub
scas
aad
pushf
xchg
jle
icebp
push
or
cwde
rcl
mov
push
add
jge
aam
xchg
pop
enter
lods
and
xchg
popf
test
add
xchg
sbb
out
mov
imul
and
jb
cwde
cmp
xchg
jnp
jmp
pop
stc
mov
and
dec
jmp
arpl
xchg
retf
jae
retf
rcl
push
xchg
ja
or
int
stc
pop
jo
popf
mov
not
pop
sub
aad
sub
jae
pop
add
or
inc
sbb
or
or
pusha
in
iret
sub
fs
sub
retf
sub
fld
add
repnz
sbb
mov
loope
mov
fadd
fdivr
repz
loop
mov
jbe
hlt
scas
sbb
push
push
mov
xor
sub
call
pop
or
stos
cli
jnp
jg
loope
sbb
ret
mov
add
ins
fbld
(bad)
(bad)
cmps
xor
push
dec
jnp
mov
bound
or
cmp
jnp
jmp
xor
fcmovnu
js
ret
pop
inc
sub
fwait
sbb
jecxz
mov
retf
mov
jp
jp
test
arpl
adc
add
cmp
add
sbb
ficom
test
lds
mov
cmp
retf
mov
jae
lock
rol
push
or
pop
ss
fisttp
div
or
mov
xchg
and
push
aam
popf
jnp
adc
mov
xor
iret
outs
xor
(bad)
in
repnz
cmp
ss
ss
dec
clc
pop
test
push
(bad)
adc
je
mov
addps
pop
xchg
jmp
cdq
lds
cmp
xchg
mov
xchg
jmp
mov
push
mov
out
movs
and
jmp
pop
mov
daa
jmp
les
gs
fdivr
pop
cmp
popa
faddp
and
ret
jecxz
mov
and
pop
adc
xchg
imul
mov
enter
adc
dec
add
sub
cmp
xor
(bad)
pop
leave
or
mov
popf
dec
inc
push
jmp
xchg
or
leave
xor
or
mov
nop
imul
sbb
xchg
push
or
cmc
mov
loope
aad
outs
ds
std
addr16
push
loopne
cdq
pop
push
rep
push
cmc
push
out
jmp
cmp
psubusb
add
enter
sub
mov
add
lds
jne
pop
pop
push
sub
lods
je
clc
add
out
cmp
repz
push
daa
xchg
sar
mov
jbe
push
dec
mov
mov
js
cmp
pop
sbb
push
jne
xchg
ja
cld
add
movs
mov
movs
inc
jne
jns
cmp
aaa
out
fiadd
sub
xchg
cmova
stos
sub
and
sbb
adc
mov
xor
arpl
ins
cmp
aad
in
push
push
dec
sbb
dec
test
dec
sub
cmps
or
push
(bad)
jg
dec
sar
pop
dec
sbb
mov
ins
add
mov
xor
and
sbb
jecxz
rol
retf
mov
xchg
repnz
popa
out
sbb
pushf
shl
cmps
push
enter
inc
push
push
rcl
shr
(bad)
repz
push
fsub
mov
xlat
xlat
cmp
(bad)
out
mov
sahf
xchg
fstp
inc
mov
mov
aad
or
ret
sbb
add
pop
test
(bad)
pcmpgtb
and
inc
es
std
imul
push
bsf
fbld
pusha
(bad)
dec
xchg
and
lods
cdq
aam
mov
mov
add
mov
out
pop
cmp
jbe
cmp
inc
hlt
pop
rol
push
sbb
(bad)
pop
lea
sahf
inc
pop
ins
pop
sahf
popa
(bad)
rcl
mov
dec
push
mov
sbb
add
cmp
int
(bad)
in
xchg
jnp
out
and
rol
shl
jne
lea
sub
xor
jmp
sub
and
lea
cli
jae
pop
cld
add
fs
mov
xor
lahf
sahf
push
xchg
push
mov
mov
mov
sbb
stos
movs
stc
dec
mov
xor
adc
test
push
leave
mov
pop
fldenv
mov
push
mov
in
push
sahf
dec
ins
sbb
inc
clc
jmp
jle
jne
icebp
aad
jg
ror
fucomp
std
les
(bad)
fcmove
inc
jne
nop
add
pop
mov
add
lods
ja
mov
