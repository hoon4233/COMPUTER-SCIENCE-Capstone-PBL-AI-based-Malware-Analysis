mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
pop
sbb
mov
daa
lds
mov
dec
(bad)
mov
sbb
fs
cmp
ss
out
jecxz
lods
sub
hlt
mov
(bad)
pop
stc
sub
or
or
sti
add
add
(bad)
push
ja
and
mov
inc
xchg
in
mov
xchg
inc
dec
fistp
inc
xchg
pushf
dec
cmp
test
sbb
push
mov
or
sbb
mov
add
in
inc
mov
pusha
or
mov
bound
daa
test
mov
sub
sub
in
sti
pusha
aas
test
inc
dec
add
xchg
mov
mov
or
cmc
mov
adc
leave
hlt
push
and
cli
pop
rcl
hlt
sub
add
clc
hlt
pusha
inc
jno
add
int
cdq
(bad)
fsubr
and
nop
(bad)
js
xchg
in
retf
popf
sahf
std
jl
ret
jle
sbb
xchg
mov
inc
sub
repnz
div
cmp
sbb
movs
inc
call
lea
test
rol
xchg
adc
sbb
sub
sub
imul
push
cli
cdq
imul
jmp
or
jmp
shl
aaa
mov
js
pop
add
pop
add
jns
popf
call
pop
push
pushf
pop
xchg
xor
push
outs
mov
loop
sbb
jb
enter
adc
sbb
xchg
sahf
(bad)
mov
xlat
pop
dec
adc
pop
pushf
fimul
xchg
push
push
xlat
sbb
adc
push
mov
or
call
test
dec
in
xchg
out
and
add
and
add
push
ret
jne
adc
das
pop
scas
test
inc
cmp
adc
(bad)
aas
jb
cli
jne
sbb
outs
ficomp
pop
mov
fcomp
and
pop
cmp
pop
icebp
xor
jg
push
lods
jge
inc
cli
pop
jmp
fdiv
or
pop
dec
jg
push
sahf
adc
repnz
mov
aas
daa
dec
add
mov
in
and
jno
stc
pop
jl
push
movs
stc
shr
dec
mov
adc
ret
scas
inc
sub
out
xchg
jmp
std
push
in
or
mov
inc
ss
push
and
push
sahf
inc
scas
sbb
jno
pop
sub
dec
mov
push
scas
cdq
xchg
jp
add
cli
mov
data16
inc
push
mov
mov
and
dec
std
jnp
jmp
je
sbb
leave
jmp
xlat
add
icebp
push
popa
sub
xchg
cmp
adc
mov
or
mov
cs
movs
jmp
jl
mov
push
aas
ins
dec
lds
adc
cmps
xchg
(bad)
(bad)
cmps
mov
lea
hlt
sub
mov
pop
je
popa
adc
(bad)
stc
sti
cmp
sub
or
jle
jmp
int3
dec
js
add
ins
repnz
adc
adc
ja
or
lea
js
adc
xor
xchg
fdivrp
ret
(bad)
pop
inc
out
push
fisub
lock
xor
cdq
stos
(bad)
xor
jmp
rcr
inc
inc
inc
xlat
(bad)
xor
adc
ret
jmp
sub
jmp
push
lods
movs
xor
arpl
(bad)
hlt
and
or
shl
jno
jns
ds
sub
jge
fdiv
mov
scas
shl
mov
jns
test
mov
loop
enter
enter
movs
mov
cld
lea
mov
inc
push
or
mov
ins
or
mov
push
push
or
push
dec
or
cmp
mov
and
sub
sbb
arpl
daa
lea
call
mov
push
hlt
inc
aaa
shr
jle
add
aad
sbb
addr16
loopne
cdq
mov
aad
mov
in
mov
mov
pop
xchg
adc
inc
rcl
fs
jne
dec
jno
(bad)
cmc
jne
adc
cs
sub
ficomp
push
push
fcomp
aaa
cmp
outs
push
cs
sub
push
lods
mov
add
push
mov
ret
hlt
and
pop
loopne
mov
and
fwait
aad
retf
inc
sahf
out
xchg
test
and
cmp
bound
ret
or
lock
or
repz
jp
ja
(bad)
adc
or
cmp
push
fild
retf
icebp
scas
push
ret
idiv
(bad)
cmp
mov
dec
xor
xchg
jg
xchg
imul
push
popf
push
mov
or
inc
cwde
inc
sub
and
add
xor
lods
out
inc
outs
hlt
rcl
data16
and
sahf
aad
pushf
sub
test
inc
jae
push
pusha
arpl
shl
push
(bad)
clc
in
into
jbe
jecxz
pop
nop
retf
dec
inc
inc
xor
div
ret
rol
sbb
push
inc
scas
out
into
mov
stc
test
lahf
jae
inc
stos
jle
cmp
mov
nop
mov
pop
mov
mov
push
imul
adc
push
cmp
bound
rol
push
cmp
fld
mov
clc
mov
mov
pop
lahf
jge
lock
mov
lahf
psllw
pop
jae
and
ret
push
and
jnp
mov
inc
sub
cli
mov
les
mov
pusha
pop
xchg
cmp
cld
out
jmp
jne
and
js
mov
call
cdq
test
out
dec
ret
mov
in
hlt
retf
push
jmp
stc
aaa
fldlg2
and
bound
int3
out
pop
paddsb
or
inc
pop
or
je
jmp
pop
gs
inc
aas
repnz
test
inc
push
mov
xchg
push
rcr
fwait
dec
ja
popa
ror
out
ss
and
shr
div
lods
push
xchg
icebp
mov
sbb
cs
mov
pop
xchg
retf
sbb
cmp
sub
repz
dec
test
sub
mov
outs
jle
pop
sbb
hlt
mov
pop
js
cmc
sbb
movs
mov
(bad)
retf
mov
int
jmp
loopne
ret
push
cld
loope
jmp
dec
daa
jge
push
scas
gs
adc
jmp
add
jmp
in
sbb
add
adc
mov
dec
xchg
ds
xchg
les
arpl
or
(bad)
push
test
mov
inc
neg
push
repz
call
adc
cmp
repz
repnz
pushf
idiv
add
sub
add
jge
push
push
dec
pushf
xor
aaa
mov
sub
cmp
test
pop
mov
ds
loope
out
shl
xchg
rcl
add
cmc
loope
fcomp
add
loopne
cmp
mov
adc
and
in
dec
arpl
enter
inc
(bad)
push
mov
pop
test
neg
mov
aaa
inc
jmp
retf
jo
shl
pop
adc
or
in
jmp
xchg
shl
xchg
rol
and
jbe
ins
mov
pop
inc
mov
push
add
rcl
jmp
pushf
and
mov
(bad)
pop
mov
shl
(bad)
je
movs
push
mov
and
sub
xchg
sub
clc
(bad)
xor
and
mul
(bad)
ja
push
aaa
push
mov
pop
(bad)
sbb
out
lock
outs
mov
dec
mov
adc
xchg
scas
dec
das
(bad)
xchg
mov
jl
test
or
adc
xlat
test
pop
cmp
mov
xchg
mov
fsub
dec
xchg
fld
test
jl
(bad)
pusha
movs
fld
jge
mov
fwait
add
pop
jmp
bound
rcl
jmp
adc
jmp
xchg
sbb
mov
jg
dec
ins
inc
cli
xchg
or
ins
lods
(bad)
repz
xlat
or
dec
shr
cmp
mov
adc
or
or
sar
(bad)
fcomp
or
ret
cmp
sar
pop
test
mov
(bad)
fstp
(bad)
pop
or
jmp
(bad)
mov
push
(bad)
xor
js
popf
jp
add
out
sti
in
sti
sbb
sbb
and
in
(bad)
jmp
mov
je
mov
je
dec
in
frstor
aas
ss
cmps
sub
or
xchg
icebp
stos
xor
or
cmc
outs
mov
pop
push
push
dec
push
xor
loope
cmp
sub
div
pop
aaa
out
or
sub
push
hlt
lahf
jmp
std
mov
cmp
mov
cmc
xchg
push
leave
xchg
xor
and
xor
dec
dec
add
in
fstp
(bad)
or
pop
lea
or
push
call
jno
enter
sbb
jnp
jae
(bad)
(bad)
jle
jo
pusha
push
xor
icebp
sub
mov
es
stos
ss
mov
movs
rcr
xor
aaa
dec
in
ins
pushaw
(bad)
in
pusha
fsubr
mov
std
push
icebp
adc
sbb
aaa
xchg
add
sub
push
xlat
(bad)
xchg
jle
or
outs
sbb
ret
mov
sub
pinsrw
mov
push
or
sahf
inc
push
adc
pusha
sbb
mov
add
pop
jecxz
sbb
imul
popa
sub
xchg
inc
mov
lahf
or
ret
shl
in
cmp
arpl
ins
into
push
aam
xlat
je
dec
pop
adc
xor
shl
push
fnstsw
xor
scas
jo
inc
fcomip
in
push
push
xor
jge
mov
jge
xchg
sub
sti
es
inc
mov
pop
jne
outs
cmp
data16
sahf
fs
inc
shl
mov
push
gs
lods
jns
retf
and
mov
int
mov
sub
and
(bad)
ds
mov
(bad)
ss
xlat
mov
jle
stc
sub
mov
push
dec
hlt
push
popa
lds
and
pop
pminub
xabort
div
or
inc
xchg
ds
ret
add
lds
xor
arpl
or
or
mov
idiv
lods
mov
in
(bad)
cs
cdq
test
leave
sbb
pop
frstor
ja
sub
(bad)
adc
dec
push
mov
mov
push
in
push
rcr
call
adc
push
sbb
pusha
fisub
inc
push
mov
arpl
loope
cmp
cdq
push
lods
add
enter
dec
out
out
mov
xchg
xchg
popf
in
daa
icebp
fstp
out
stos
mov
arpl
adc
ficomp
cmp
pop
pop
sbb
outs
mov
repz
mov
outs
dec
icebp
movs
push
jl
dec
cmp
lds
jbe
xor
movs
add
mov
lahf
mov
fild
stos
mov
fcomip
enter
push
push
fwait
xchg
xor
arpl
mov
fstp
or
add
cwde
adc
sub
push
shl
ds
xchg
and
mov
mov
xchg
push
push
in
mov
jle
pop
loopne
rol
jae
shl
ficomp
xlat
popf
fist
test
pop
mov
jmp
mov
cwde
sahf
push
xchg
outs
int
push
(bad)
mov
popa
dec
push
and
aad
mov
jmp
xor
jmp
push
jno
sbb
pop
cmc
in
jmp
or
push
(bad)
fisttp
adc
inc
out
add
shl
sub
xor
pop
repz
and
mov
sbb
and
fwait
ja
pop
js
ds
nop
mov
jmp
mov
mov
fs
jno
lock
jnp
ror
inc
push
int3
push
fisub
sub
mov
out
sbb
jl
fdivr
and
in
ret
mov
cwde
shl
jmp
iret
jmp
sahf
and
mov
sub
cmps
je
sbb
push
arpl
and
shr
retf
outs
sbb
mov
jmp
daa
cli
add
push
push
repz
jno
dec
mov
aam
scas
inc
cmps
and
ret
or
mov
sbb
jmp
cmps
add
dec
add
jecxz
clc
stos
out
fwait
imul
scas
inc
push
cmps
popa
in
lock
adc
movs
cmps
popf
and
sbb
outs
dec
mov
mov
sbb
in
sti
cld
push
jb
push
push
cmp
jle
call
inc
add
dec
stos
hlt
mov
mov
and
fdivp
pop
dec
(bad)
call
lods
int3
ret
movs
std
inc
xor
add
enter
mov
and
ins
push
add
in
(bad)
dec
(bad)
out
addr16
inc
ins
mov
push
loop
ret
mov
mov
outs
push
movs
ror
(bad)
stos
daa
daa
and
retf
sbb
adc
pop
frstor
and
out
sbb
xchg
add
in
xchg
lds
pusha
retf
ror
add
in
aad
hlt
cmp
push
lods
jl
mov
pop
dec
add
mov
mov
in
mov
ins
mov
xor
ins
mov
mov
sub
push
aam
mov
lods
leave
rol
pop
push
pop
mov
add
out
xchg
push
loopne
sub
push
xchg
mov
mov
or
pusha
es
das
add
and
bnd
les
sti
ins
addr16
xchg
lahf
icebp
clc
(bad)
int
in
sub
out
rol
je
or
or
(bad)
ss
scas
shl
sti
enter
mov
mov
fsubr
ins
jnp
pop
in
adc
cmp
jle
pop
adc
ret
push
push
hlt
add
js
mov
jbe
and
mov
jmp
sbb
inc
or
nop
xchg
and
movs
je
outs
adc
stos
ja
loopne
and
sub
or
ror
cmps
adc
shl
scas
sbb
hlt
cmp
sbb
lock
scas
sub
lock
adc
test
jmp
in
mov
data16
test
call
ficomp
in
stos
fidiv
pop
loopne
mov
mov
dec
std
dec
cmp
mov
adc
pushf
add
mov
jno
sbb
adc
stc
push
stc
nop
mov
es
es
xor
sub
xor
add
adc
mov
ins
xchg
lea
outs
in
nop
nop
jbe
xor
fimul
dec
repnz
sub
and
pusha
mov
fwait
sbb
add
data16
fdiv
mov
into
pop
or
adc
push
mov
jne
jmp
xchg
sub
cmp
pop
sub
jne
sbb
(bad)
add
push
sbb
xor
dec
out
outs
ret
aas
or
inc
jg
js
clc
shr
adc
pop
xchg
add
add
jge
fwait
stos
pop
cmp
mov
loop
cmp
in
pop
dec
movs
aaa
outs
add
fbstp
int3
jl
outs
sbb
inc
and
mov
mov
adc
adc
repz
sbb
and
ins
jns
lods
mov
cmps
xchg
or
adc
jb
mov
sub
xchg
fimul
(bad)
mov
rcl
pop
vsubps
(bad)
addr16
pop
xor
mov
mov
inc
push
dec
in
call
cmp
clc
xor
hlt
pop
jno
cmp
adc
mov
mov
adc
rol
cmp
xor
xchg
push
(bad)
xor
retf
iret
or
adc
ret
aam
sbb
div
imul
arpl
push
mov
xchg
mov
mov
and
ret
enter
ins
in
pop
(bad)
in
fstp
nop
retf
push
cmp
push
and
out
repnz
ret
ret
scas
call
xor
into
sbb
ror
icebp
jecxz
arpl
jb
retf
jle
ds
pop
mov
pop
aaa
das
mov
adc
cdq
daa
popa
xchg
stos
or
into
mov
or
int3
inc
lock
in
cmp
js
jno
push
cmp
cdq
xor
mov
call
mov
dec
inc
sbb
js
xchg
or
add
jnp
(bad)
inc
inc
out
sub
mov
lods
mov
sbb
cmp
cmp
scas
inc
xor
xor
push
add
shr
(bad)
(bad)
xchg
xor
xor
hlt
pop
loope
dec
sbb
pop
push
cs
(bad)
fldcw
je
sahf
dec
add
mov
xor
pop
test
inc
mov
iret
popa
or
sub
cmp
ss
fdiv
xor
push
xor
ss
ins
mov
scas
ret
or
add
icebp
or
fstp
stos
jno
mov
add
test
fdivr
push
fs
pop
aam
jg
pop
jge
ins
stc
aam
pop
popf
xchg
ds
mov
mov
dec
jecxz
rcl
adc
dec
daa
pop
mul
aaa
in
pop
jno
pop
rcr
sub
dec
mov
mov
gs
sub
sub
fild
ins
jae
out
(bad)
stc
ret
(bad)
fstp
repnz
aad
pop
push
pop
adc
scas
jo
adc
mov
fucom
(bad)
mov
movs
rep
dec
outs
add
mov
sbb
mov
es
je
mov
clc
sbb
sbb
sbb
jns
adc
pop
cld
mov
in
aam
push
sub
pop
mov
and
aam
cmp
daa
iret
cmp
xchg
fistp
push
jle
sahf
adc
and
addr16
lea
out
sub
add
inc
ret
loop
jno
es
push
into
pop
pop
pusha
jo
and
jns
xchg
xor
add
mov
popf
ds
and
popa
out
mov
pop
not
adc
rol
jmp
mov
xor
fild
cmp
add
dec
ss
icebp
nop
idiv
sub
lahf
lods
rol
push
popf
in
push
in
pusha
pop
pop
xchg
repz
jns
jns
inc
push
ret
inc
mov
lahf
arpl
mov
loope
mov
xchg
sub
frstor
xor
ins
imul
jge
lods
mov
adc
push
div
test
xor
xor
add
xchg
rcr
sbb
inc
es
and
addr16
dec
push
sub
dec
loopne
mov
rol
sbb
ret
jmp
(bad)
mov
int3
jno
jbe
xchg
sbb
jmp
repz
test
sub
shl
mov
clc
ds
dec
fcmovu
push
in
(bad)
xchg
out
inc
push
xacquire
retf
push
aam
xor
xor
movs
mov
outs
stos
inc
sub
xor
rcr
sbb
test
cmp
pop
mov
(bad)
mov
xor
add
repnz
cmc
sub
test
pop
pop
pusha
inc
(bad)
je
ss
xor
jge
jne
pusha
xor
xor
movs
arpl
sub
jp
mov
(bad)
dec
pop
jb
xchg
rcl
popf
sub
push
mov
fsubr
or
add
jb
sbb
lock
pop
call
fist
mov
into
mov
mov
fcmovnbe
aas
adc
cld
repz
in
jp
or
clc
inc
dec
pop
jbe
int
int3
loope
leave
add
out
push
xor
loope
(bad)
or
popa
push
push
hlt
jge
xor
jns
sub
xchg
pusha
aas
(bad)
popf
cmp
push
popf
mov
pop
xchg
cli
push
mov
loopne
xor
xchg
nop
test
sbb
int
or
mov
call
(bad)
pop
mov
fs
es
call
mov
pop
arpl
repnz
pusha
push
and
push
scas
or
add
sub
inc
mov
dec
or
out
movs
in
and
(bad)
cdq
mov
xchg
movs
xchg
sti
loope
movs
loop
or
push
loopne
sbb
sub
sbb
push
repz
inc
test
xchg
imul
jl
or
adc
cmp
or
(bad)
and
mov
jno
add
jne
retf
rcr
mov
push
cli
cmp
jmp
dec
inc
mov
cld
test
das
jmp
loope
and
xlat
in
(bad)
enter
fild
inc
adc
dec
pop
ret
enter
push
nop
add
fincstp
inc
das
pop
sbb
aaa
and
repz
adc
jmp
adc
mov
mov
mov
aas
sbb
and
push
push
jo
shr
pop
daa
je
inc
push
repnz
dec
and
xchg
inc
and
ins
push
and
outs
(bad)
mov
ds
test
lock
mov
movs
shl
dec
push
fst
or
or
jno
push
xchg
cmp
jp
jb
inc
mov
aad
jp
dec
mov
adc
mov
bound
ds
repz
push
sbb
addr16
pop
or
in
inc
adc
call
aaa
add
xchg
lods
add
test
loope
pop
fst
iret
test
xchg
ret
jle
test
inc
test
jns
and
cmp
sbb
or
xchg
add
mov
jle
dec
dec
cmp
sbb
pushf
jmp
pop
hlt
inc
cmps
adc
push
dec
jp
imul
(bad)
js
push
xchg
fwait
ror
mov
mov
push
ret
scas
sub
dec
push
fs
jo
ficomp
pusha
dec
je
inc
sbb
fisttp
sub
les
daa
sti
test
pop
mov
movs
jae
out
or
stos
and
adc
xlat
das
sbb
dec
sbb
aam
mov
cmp
xor
aas
push
in
sub
mov
add
fmulp
inc
mov
shr
sub
mov
sbb
pop
xchg
movs
dec
pop
xchg
bound
shr
push
nop
ret
icebp
jbe
(bad)
fcom
shl
push
jp
gs
pop
jecxz
shl
das
push
iret
inc
aad
push
in
aas
ins
call
inc
ds
sub
mov
xor
jge
sahf
sub
test
fcomip
add
inc
or
push
sbb
fisttp
pop
pushf
jle
xor
xor
jge
imul
out
(bad)
jmp
stos
push
adc
into
enter
pop
push
jg
fld
mov
stos
nop
out
sub
pop
xor
and
cld
push
and
and
sar
mov
mov
lods
mov
outs
in
leave
xor
test
mov
mov
add
pop
and
adc
xchg
(bad)
sub
and
pop
mov
arpl
sub
xor
push
arpl
mov
cmp
(bad)
hlt
push
cdq
push
push
imul
cmp
inc
hlt
xor
cmc
dec
sub
or
cdq
cmp
cmp
dec
repnz
retf
cmp
adc
xchg
jnp
cmp
sbb
sar
add
dec
fdiv
mov
sbb
push
mov
xchg
sbb
jbe
xor
mov
cld
(bad)
mov
movs
cmc
stc
movs
xchg
test
inc
push
xor
inc
xlat
mov
mov
cmp
outs
(bad)
popa
xor
leave
dec
jge
fsubp
mov
or
mov
stos
out
pop
rol
push
into
or
inc
dec
jp
in
mov
popf
adc
cwde
push
cmp
jne
xchg
dec
mov
fwait
jne
cld
hlt
sub
test
dec
push
stos
mov
pop
add
lock
push
mov
mov
pop
(bad)
loope
stos
leave
lock
xchg
xchg
scas
es
shl
adc
fmul
inc
mov
fimul
mov
and
pop
push
sahf
pop
jmp
adc
lahf
lahf
and
(bad)
fmul
xchg
inc
inc
stos
ins
mov
or
sub
push
ja
addr16
push
cdq
daa
pop
sub
stos
pop
mov
fldz
mov
imul
and
push
leave
inc
test
jmp
mov
or
(bad)
not
xor
adc
mov
and
cs
hlt
cmps
cmp
jmp
jb
sub
xor
lea
nop
jo
dec
aas
add
fdivr
lock
and
cmp
jl
sbb
pop
in
mov
lock
and
xchg
or
push
adc
push
fistp
jae
fild
das
and
xor
inc
jle
mov
xor
fidivr
sub
ss
dec
pop
cmps
cli
popa
retf
outs
ins
test
arpl
ficomp
mov
ds
xchg
call
dec
lock
ins
adc
mov
sahf
mov
(bad)
mov
jp
and
add
mov
and
inc
fldcw
jl
in
mov
or
pusha
add
and
imul
sbb
cmp
popf
sbb
or
arpl
cld
jmp
scas
xchg
push
mov
(bad)
mov
cli
mov
lea
pop
ins
lds
mov
dec
loope
dec
mov
outs
push
pop
push
inc
jp
cmc
pop
in
pop
ins
jcxz
xchg
adc
loopne
xor
adc
xchg
out
out
jb
(bad)
fcomp
test
retf
mov
dec
mov
mov
xor
cdq
cmc
icebp
(bad)
loope
dec
movs
xor
imul
out
dec
dec
fwait
jecxz
and
iret
idiv
mov
cmp
cmps
xor
pop
cmps
daa
jo
xchg
sub
xchg
dec
out
inc
fisub
ds
retf
push
xor
enter
bound
imul
dec
hlt
fcomp
aaa
mov
cmc
sub
pop
scas
aam
jns
(bad)
sub
(bad)
sub
and
xor
jp
push
mov
sub
in
out
jns
dec
cdq
pop
fmul
or
out
cmc
popa
mov
inc
push
inc
xchg
xor
xchg
pop
add
mov
addr16
js
mov
fist
aam
mov
xchg
xor
mov
imul
cmp
push
cs
call
mov
scas
add
xor
cs
and
and
lods
mov
sub
mov
mov
outs
sbb
(bad)
dec
xchg
pop
adc
int
fcmovnu
cwde
or
inc
ins
bound
cmp
ret
clc
jecxz
jl
sbb
sbb
mov
sahf
outs
ins
xchg
hlt
inc
xchg
mov
ds
mov
push
addr16
push
ret
and
ja
pop
fsub
dec
rcr
(bad)
dec
mov
into
fwait
and
mov
sbb
(bad)
mov
gs
call
aad
les
call
lods
dec
sub
push
mov
sti
fwait
icebp
scas
test
xor
movs
push
int3
js
add
xor
inc
mov
xor
test
dec
dec
loop
adc
movs
out
inc
repnz
es
sbb
repnz
sbb
stc
xchg
or
test
je
pop
in
cdq
push
mov
test
mov
jno
dec
xchg
loop
fist
adc
adc
inc
xor
call
push
sbb
mul
je
inc
icebp
adc
mov
jae
ss
mov
adc
jno
out
dec
xchg
or
xchg
shl
loop
ror
or
cli
add
pop
hlt
loopne
and
xchg
pop
or
outs
mov
cmp
sar
or
dec
or
sti
sbb
bound
dec
push
test
repz
inc
mov
sahf
cdq
inc
mov
dec
repz
dec
mov
call
aad
fnstcw
cmps
inc
jge
xchg
(bad)
push
sbb
mov
inc
sub
inc
not
push
cld
cmp
mov
fcomp
add
movs
mov
sub
int3
mov
jne
push
xor
jecxz
gs
mov
(bad)
bound
mov
or
scas
sar
add
mov
sbb
cdq
aaa
daa
cmp
cmp
cwde
mov
fisubr
mov
push
push
cmc
mov
wbinvd
mov
stos
fdivr
xor
stos
inc
inc
test
inc
jno
pop
fisub
imul
sti
nop
inc
int3
loop
xchg
mov
mov
stos
and
das
(bad)
cmc
stos
pop
mov
bound
mov
mov
fisubr
cmps
jns
adc
push
data16
in
push
test
cmp
ret
(bad)
lahf
push
ret
out
jp
(bad)
pop
push
bound
mov
pushf
mov
iret
or
jno
in
or
stos
fcmove
retf
gs
mov
sbb
jmp
cmp
jp
sbb
inc
dec
push
popa
mov
xchg
push
jg
push
add
pop
cmp
xor
leave
out
into
push
ins
jb
xchg
inc
xor
mov
mov
or
mov
test
shld
out
outs
add
shr
test
adc
xor
pop
clc
pop
call
jl
xor
(bad)
stos
or
adc
pop
mov
fbld
sahf
shl
sbb
test
retf
scas
pop
xchg
test
dec
int
mov
dec
je
cmc
pusha
xor
lahf
lods
imul
(bad)
dec
in
loopne
xor
add
fsub
daa
xchg
pop
add
jge
mov
sub
push
adc
jecxz
dec
dec
mov
data16
jle
ds
sub
jo
pop
mov
ror
ins
cs
rol
imul
sahf
and
dec
mov
mov
jge
dec
(bad)
movs
cs
stos
cmp
sub
jnp
mov
dec
lea
pusha
sub
ret
xor
lahf
xor
ja
push
retf
sub
and
xor
cmp
int3
mov
jecxz
daa
mov
div
in
mov
gs
or
mov
sti
call
adc
retf
dec
cmp
and
fldenv
xor
add
loop
stos
pop
retf
xlat
loop
fwait
in
call
(bad)
sahf
adc
add
movs
and
(bad)
jge
gs
sub
inc
nop
loope
mov
push
popa
mov
enter
jmp
cmc
xchg
xchg
lahf
lock
mov
cmp
sbb
cmp
scas
xchg
ss
add
(bad)
mov
pop
and
and
retf
int
inc
push
stos
xlat
xchg
in
sub
ins
sti
imul
loop
or
cmp
(bad)
adc
xchg
mov
push
test
dec
iret
add
iret
dec
adc
movs
out
push
push
ins
mov
xchg
lock
dec
cmp
mov
xchg
mov
aaa
mov
mov
pop
prefetchw
or
jl
mov
mov
shl
xor
cmp
stos
adc
xor
jmp
inc
ud2
and
pop
mov
push
cmp
push
sub
xchg
jecxz
jmp
cmc
and
or
aaa
mov
xchg
dec
sbb
xchg
mov
adc
mov
push
jecxz
and
fwait
and
lea
jecxz
jne
ins
or
cli
sbb
pusha
cmp
cwde
pushf
(bad)
jns
in
mov
mov
(bad)
pop
jmp
(bad)
out
cs
mov
movs
push
sbb
in
mov
mov
cmp
sbb
mov
push
push
mov
outs
or
fucomip
jne
jmp
stos
or
gs
shl
adc
xchg
in
and
push
or
push
sbb
pop
js
mov
mov
(bad)
and
ins
jb
cdq
pop
imul
std
sub
pop
aas
lahf
pop
stos
add
out
dec
cmp
test
mov
add
or
pop
(bad)
cmp
xlat
outs
add
fst
shl
pop
cmp
xor
add
mov
and
and
das
addr16
aam
jae
xchg
adc
fistp
sub
loopne
mov
(bad)
mov
repnz
outs
js
cld
inc
cmp
test
(bad)
mov
jae
xchg
ds
ins
mov
xor
div
or
push
cmp
sub
(bad)
pushf
loopne
add
sub
jl
push
je
dec
mov
fwait
aam
adc
mov
fld
test
outs
cdq
fstp
ret
xchg
lods
mov
mov
lea
psubd
ins
mov
or
push
ds
cmp
out
or
loope
add
xor
aaa
sbb
std
fst
adc
cli
inc
shl
dec
imul
jns
and
xchg
adc
movs
das
rep
cmp
fadd
sti
pop
xor
xchg
loop
xor
xchg
jb
cmp
popa
or
js
(bad)
arpl
out
jge
pop
cld
dec
cmp
movs
sub
out
sbb
jne
stc
sbb
fsubr
xchg
dec
xchg
pop
mov
jne
dec
and
cdq
(bad)
repz
pop
or
push
jle
out
fs
xor
dec
or
ret
ror
outs
popa
xor
je
xchg
sub
mov
in
or
call
sub
ror
stos
xchg
hlt
dec
add
sbb
and
push
cmp
movs
call
adc
test
lock
aam
cdq
push
fnstenv
int
mov
dec
mov
ins
call
outs
call
addr16
bound
popa
(bad)
push
mov
fist
and
sub
clc
int
jae
mov
pop
jo
sbb
jle
(bad)
jmp
pusha
jp
jecxz
inc
push
or
mov
and
fwait
mov
mov
mov
mov
mov
test
pop
pop
sbb
push
mov
cmps
inc
into
push
cmps
ret
jmp
scas
retf
retf
push
test
jo
call
call
daa
adc
mov
dec
rol
dec
test
cmc
mov
call
mov
cmps
addr16
jae
in
les
dec
add
xchg
add
out
or
mov
sub
int
addr16
ds
hlt
loop
scas
jle
and
fsub
dec
fdiv
xchg
test
stos
xchg
jg
mov
mov
int3
sub
xor
adc
sti
mul
mov
scas
push
adc
aad
call
dec
icebp
aaa
pop
aam
pop
adc
(bad)
adc
inc
cmps
dec
sub
cld
push
fimul
xor
mov
fcom
pushf
leave
lds
stos
mov
mov
repz
(bad)
stos
lahf
jmp
jmp
or
push
aam
mov
jge
test
stos
xchg
jb
retf
lods
ins
in
cmc
fmul
fwait
call
jl
and
jle
adc
std
int
add
pop
sub
sbb
inc
adc
xor
xchg
sub
in
(bad)
cmp
movs
add
xor
sub
ins
cmp
and
jbe
mov
xor
outs
lea
mov
dec
sub
sar
cwde
clc
cmc
mov
sbb
retf
ds
inc
(bad)
cmps
fdivp
adc
push
or
jmp
pop
icebp
bound
ins
lods
(bad)
in
mov
mov
clc
sbb
sbb
stos
inc
scas
fidivr
xchg
xor
dec
imul
out
lods
daa
mov
xlat
fisttp
test
aad
ret
fsubp
test
adc
jmp
inc
out
xchg
sub
dec
sub
jb
ret
das
(bad)
leave
xor
sar
xchg
sti
and
scas
mov
cmp
or
out
push
sar
xchg
repnz
imul
and
inc
xor
jmp
in
call
push
xchg
and
pusha
clc
ret
or
and
xchg
cmp
rol
xor
repz
cmp
scas
jns
mov
xchg
dec
scas
mov
xor
(bad)
pop
jbe
pop
pop
push
call
mov
mov
push
inc
push
pop
xor
data16
push
aad
mov
call
ror
adc
shr
aam
and
pop
sub
adc
inc
fs
loop
scas
cmp
sti
xor
xchg
imul
ss
sub
clc
adc
fist
je
inc
mov
cmp
mov
retf
rcr
mov
aaa
xchg
jno
lds
and
jne
or
jle
imul
sbb
or
loopne
xor
or
(bad)
adc
sub
loop
and
add
in
dec
stos
out
test
add
daa
cmp
mov
xchg
adc
leave
shl
sbb
clc
mov
scas
cmps
fwait
jge
test
int3
ja
push
ret
repnz
push
cmp
dec
xchg
ss
mov
or
sbb
mov
jle
cmp
repz
imul
popa
movlps
call
(bad)
xor
loope
addr16
cld
and
add
rcl
sub
inc
mov
add
test
mov
imul
inc
jmp
cmp
aad
push
xchg
inc
fild
rol
xchg
sub
ins
inc
jmp
std
sahf
xor
in
cmp
mov
or
inc
fsubr
(bad)
scas
pop
xchg
int3
push
gs
mov
push
mov
push
adc
and
adc
bound
cdq
xchg
cs
(bad)
repz
adc
dec
and
int3
lea
cmp
dec
dec
clc
out
mov
in
arpl
or
or
push
mov
inc
clc
mov
inc
int3
pop
shr
adc
xchg
mov
mov
nop
movs
neg
and
imul
mov
(bad)
nop
test
add
or
repz
sbb
daa
lods
sub
ss
dec
fnsave
push
in
stc
cmps
inc
out
or
push
push
(bad)
retf
push
mov
add
and
push
ror
mov
inc
mov
jb
and
or
or
std
and
xor
js
dec
mov
stos
ficomp
mov
add
and
adc
pop
lea
inc
call
mov
jecxz
xor
xchg
cmc
popa
lahf
stc
xchg
test
cwde
or
or
mov
mov
lods
cmp
push
popa
adc
push
pop
jge
sub
stc
xor
mov
push
jne
sub
fmul
pop
mov
adc
xor
and
call
pop
bound
enter
js
mov
lods
adc
arpl
mov
mov
inc
cmps
add
mov
xchg
jbe
xor
imul
mov
push
(bad)
xchg
xchg
and
or
pop
adc
push
mov
je
imul
clc
test
shl
xor
lock
stos
adc
shr
cmp
icebp
jmp
fstp
pop
test
or
inc
adc
movs
(bad)
imul
or
das
jnp
(bad)
leave
retf
mov
pop
add
mov
loopne
and
stos
push
popa
xlat
inc
mov
clc
into
xor
mov
xchg
fadd
pop
scas
push
movzx
mov
xchg
sbb
retf
jb
inc
and
aas
xchg
inc
xchg
cmc
icebp
mov
mov
cmc
lock
xchg
sub
lods
ins
push
jns
push
cli
sbb
nop
or
pop
loope
aad
xor
cmp
test
mov
outs
or
sahf
xor
ret
scas
daa
mov
fstp
stos
adc
push
mov
out
movs
lahf
rcl
into
xchg
mov
out
inc
pop
mov
jnp
push
cmps
sbb
stos
cmps
jmp
ins
xchg
cmp
pop
scas
push
xchg
adc
mov
push
call
ret
call
dec
call
jmp
das
cdq
leave
sbb
push
sub
bnd
mov
test
pushf
out
(bad)
imul
mov
ins
scas
fstp
dec
push
retf
pop
stc
in
pop
pop
scas
out
xchg
push
pop
cmp
cwde
int3
xor
mov
cmp
aaa
sub
mov
mov
(bad)
push
adc
into
sbb
or
rcl
adc
fiadd
mov
sbb
movs
sub
arpl
xchg
xor
pop
jno
stos
and
retf
(bad)
bound
sub
sub
inc
icebp
pushf
mov
pop
inc
xchg
add
movs
xchg
mov
mov
repnz
cld
jge
xchg
mov
(bad)
fwait
(bad)
inc
in
test
(bad)
inc
cmovp
call
in
cld
sub
mov
ds
lods
mov
gs
fsubr
jae
cli
loopne
jbe
and
xor
pop
cmc
sti
adc
push
mov
mov
adc
xor
pop
mov
cmps
xor
inc
je
mov
mov
aad
mov
mov
jb
loopne
add
popf
cmc
movs
nop
pop
pop
loopne
push
std
sbb
sbb
aam
into
mov
jl
xchg
sti
retf
pop
xrstors
xchg
fbstp
cmc
rol
(bad)
popf
pop
inc
cwde
scas
add
repz
call
lds
mov
cwde
inc
push
movs
dec
stos
cmp
pop
sbb
jo
cmp
jmp
cmp
stc
xchg
jae
push
cld
int3
lods
adc
add
sub
mov
or
add
mov
clc
inc
and
outs
leave
sti
inc
popf
out
stos
outs
mov
jb
and
adc
dec
pusha
xchg
sbb
pop
add
cdq
and
inc
ins
mov
(bad)
repz
(bad)
pushf
pop
push
out
ss
out
pop
dec
js
mov
ja
inc
ret
dec
or
addr16
arpl
not
mov
retf
xor
addr16
mov
pop
stos
sub
ja
outs
lods
mov
in
stos
leave
js
xor
movs
movs
add
addr16
inc
call
imul
pop
gs
jns
fimul
sar
loopne
mov
int3
push
fwait
lods
jp
add
mov
jns
repnz
mov
inc
sbb
mov
inc
lds
dec
repnz
cmp
jmp
xchg
sbb
jg
mov
cvtdq2ps
jp
jle
or
mov
mov
(bad)
clc
bound
adc
mov
mov
push
dec
lahf
fimul
scas
shl
fcomp
jo
xchg
push
and
xchg
cmc
(bad)
push
pop
xchg
push
scas
dec
mov
push
dec
aas
mov
dec
jbe
retf
adc
push
push
dec
(bad)
and
adc
imul
shr
mov
cs
cmp
sbb
out
dec
aaa
mul
ins
outs
or
daa
sub
loopne
std
or
hlt
fxch
aaa
(bad)
imul
lahf
xor
or
cmp
jo
and
test
pop
popa
into
xlat
(bad)
and
(bad)
call
loop
dec
jge
ror
in
outs
(bad)
xchg
dec
push
call
dec
inc
cmps
add
js
pop
jnp
ret
mov
mov
pop
dec
scas
mov
and
dec
inc
push
add
jns
out
adc
bound
test
fdivp
aaa
and
xchg
ror
lods
xchg
mov
ss
icebp
movs
adc
gs
jp
dec
clc
sahf
loop
pop
mov
dec
out
mov
mov
jmp
neg
cmp
ins
adc
or
(bad)
std
dec
or
aam
shl
dec
cli
inc
rol
xchg
xchg
and
sti
pop
xor
clc
outs
mov
stos
mov
(bad)
jmp
ret
push
jge
cmps
jge
xor
iret
mov
mov
int
dec
jns
jge
cmp
fs
scas
pop
fdiv
outs
dec
mov
dec
test
mov
inc
shl
add
loop
mov
push
push
out
dec
retf
shr
movs
fidiv
ret
inc
outs
retf
and
inc
(bad)
mov
lods
sbb
pop
shr
mov
scas
jnp
ss
stos
add
leave
xor
(bad)
jg
xor
fistp
or
mov
jns
js
add
(bad)
or
daa
int3
jne
cmp
popa
pop
cmp
push
xchg
std
sbb
loope
sbb
xchg
jo
ret
cmp
jl
lahf
xchg
jp
pop
retf
pop
test
push
mov
pop
mov
mov
test
inc
sar
sbb
sub
fist
shr
cmp
cmp
mov
xlat
sahf
mov
aas
lea
pop
fdivr
mov
mov
mov
mov
push
lods
ds
xlat
and
stos
dec
inc
ins
leave
ds
or
push
pop
pop
fucomip
jo
sub
adc
cli
push
cld
int3
in
aam
jl
out
outs
cmp
popf
xchg
cwde
sub
or
fnstcw
lods
retf
jge
mov
(bad)
pop
ins
mov
adc
inc
test
(bad)
add
push
in
call
mov
xor
test
xchg
xchg
pusha
hlt
dec
inc
push
or
jnp
jecxz
mov
jp
and
stc
or
into
pop
or
jbe
lock
inc
imul
int3
pop
xor
cld
iret
das
cld
icebp
int3
out
mov
fucom
dec
sbb
fist
je
mov
inc
ja
mov
inc
sub
mov
std
call
loop
or
fld
fiadd
retf
dec
xlat
out
inc
and
lds
repz
dec
push
xor
xchg
cmp
cmp
scas
test
mov
sbb
(bad)
cmps
xor
shr
push
add
xlat
movs
inc
es
adc
dec
lods
jl
test
push
out
(bad)
outs
jno
mov
pop
fsub
ds
jle
aaa
sahf
into
jmp
sub
(bad)
jmp
ins
rcr
mov
rol
inc
push
idiv
(bad)
push
pop
bound
jp
adc
imul
push
les
mov
in
adc
out
xchg
jp
and
div
(bad)
sbb
scas
adc
ror
dec
pop
sub
addr16
and
jb
and
loop
inc
clc
mov
adc
xchg
enter
fs
hlt
xchg
(bad)
mov
push
pop
mov
lds
mov
mov
adc
jae
pop
stos
bound
(bad)
cwde
inc
xor
mov
(bad)
jo
inc
sahf
scas
lea
jg
fbld
pop
jnp
repnz
aas
adc
rcl
mov
push
jno
addr16
push
out
pusha
in
scas
mov
pop
out
aas
pop
cdq
xor
enter
dec
fcmovnbe
or
cdq
in
clc
mov
mov
jmp
pop
loop
cmp
xchg
call
pop
inc
hlt
push
movs
je
test
shl
shr
jg
dec
jnp
mov
mov
stos
mov
add
mov
jle
clc
inc
arpl
dec
xchg
lds
xchg
push
inc
xchg
cmp
inc
popf
xchg
add
std
cwde
int
movs
adc
enter
out
inc
ffreep
xchg
cmp
in
retf
je
mov
cmp
xchg
shr
mov
movq
out
or
std
jne
popf
dec
xlat
mov
leave
clc
outs
fsubr
mov
and
cli
jle
imul
fxch
mov
(bad)
fnsave
aas
xchg
dec
stc
or
inc
jp
iret
sub
(bad)
jge
mov
jecxz
pop
jb
sbb
mov
mov
or
inc
mov
outs
enter
sahf
xchg
xor
adc
jmp
pop
outs
fwait
repnz
out
mov
cmp
lahf
ror
jmp
imul
jo
or
cmps
jmp
cdq
pop
nop
pop
inc
pusha
loop
rcr
add
pop
js
pusha
ja
jp
mov
inc
retf
cmp
in
mov
stos
fdiv
aad
add
cmp
jns
icebp
mov
jl
(bad)
loopne
test
push
or
shl
imul
(bad)
ss
xchg
xchg
mov
loope
mov
test
lea
push
aas
xchg
pop
fs
dec
add
dec
mov
out
sbb
adc
push
lahf
inc
or
xor
cmps
push
mov
retf
dec
and
pop
ror
scas
pop
push
sahf
xor
inc
add
xchg
mov
sti
mov
add
in
sbb
pop
ret
sbb
lock
data16
data16
mov
or
shl
hlt
outs
cmp
jl
mov
jns
jns
sbb
mov
xchg
out
adc
cmp
(bad)
push
inc
lea
dec
in
cwde
inc
sbb
test
push
cmp
test
mov
jno
in
gs
mov
fstp
mov
sahf
pushf
int
cmp
retf
dec
mov
out
daa
js
mov
(bad)
stos
test
adc
jecxz
fldcw
pushf
(bad)
pop
(bad)
pop
(bad)
xchg
dec
mov
pop
aam
add
rcl
jb
sbb
pusha
mov
jae
hlt
push
and
out
fmulp
jecxz
jge
ror
fdivp
aas
jb
fisub
mov
sub
retf
xchg
jp
mov
shl
jge
cmp
xor
pop
jno
rcr
pop
jle
pop
and
gs
pop
mov
mov
dec
cwde
dec
stos
inc
test
imul
fdivr
inc
or
std
pop
and
jle
ds
mov
pop
int3
ins
loope
cdq
add
clc
mov
cmp
inc
jecxz
daa
cmp
adc
or
pop
inc
pop
cmp
pop
lock
jp
mov
cmp
cmp
push
popf
sub
stc
adc
aaa
rcl
int3
or
or
sub
popf
fstp
dec
mov
or
ret
xchg
cmps
sti
jno
mov
fild
mov
cld
pop
pop
inc
cmp
xor
outs
cmc
push
ins
xchg
adc
cmp
(bad)
mov
ins
js
add
mov
outs
mov
push
cmp
(bad)
pop
hlt
xor
retf
cmps
enter
out
xchg
sbb
sahf
push
push
jb
(bad)
xor
call
push
mov
push
sahf
not
dec
ret
cdq
add
lods
in
and
imul
ror
sub
(bad)
jp
iret
hlt
xor
cdq
xchg
cmp
inc
cmp
(bad)
mov
ja
pop
fcom
lock
push
movs
shl
xor
push
test
out
ret
or
das
lods
push
cmps
sub
fcom
jmp
int3
cmp
ss
test
xchg
jmp
aad
cmc
pop
lock
sbb
nop
dec
mov
or
dec
fwait
push
dec
adc
shl
aad
add
sbb
inc
and
stos
ds
jle
dec
or
clc
or
xor
ins
sub
mov
iret
or
pushf
shl
mov
xor
and
jns
stc
sar
mov
inc
lea
mov
mov
add
popa
xchg
lahf
mov
sbb
mov
sbb
mov
fstp
fimul
or
and
pop
es
das
jmp
call
push
jecxz
scas
(bad)
cmp
loop
jae
movs
inc
dec
aas
lock
ret
ins
sbb
add
push
xor
into
mov
dec
shl
jg
inc
inc
jb
dec
loop
mov
dec
xor
mov
or
bound
mov
loope
add
loopne
mov
lods
sti
xor
mov
sub
inc
sar
cmp
mov
daa
adc
jno
dec
mov
add
std
scas
or
(bad)
fld
inc
xor
or
and
(bad)
ror
aaa
repnz
add
lods
or
out
cmc
call
or
nop
jle
mov
cmp
cmp
aaa
sbb
jbe
mov
fwait
loopne
aam
and
aad
mov
outs
mov
hlt
int3
jecxz
adc
mov
jmp
out
cs
cmp
mov
mov
adc
daa
and
adc
cmp
gs
imul
ja
pop
(bad)
pop
add
dec
mov
mov
div
sbb
cmp
mov
push
movs
push
hlt
mov
fcmovne
adc
movs
jmp
pop
jle
stc
or
sar
mov
(bad)
mov
jecxz
out
or
cmp
adc
fadd
jp
call
test
jbe
scas
add
mov
sbb
and
aaa
je
cs
pop
or
and
sub
jae
addr16
mov
lahf
movs
and
sbb
enter
jne
mov
out
mov
cmps
add
inc
jge
fcom
icebp
lods
mov
adc
cli
cmp
cmp
push
ins
out
sar
inc
xchg
fidiv
and
and
pop
fcmovu
fiadd
inc
out
mov
ret
scas
stos
jmp
sbb
shl
xchg
lea
push
not
(bad)
mov
das
aas
ins
inc
inc
stos
fwait
xchg
xchg
out
inc
pushf
mov
xchg
cmp
jo
jmp
rol
out
push
dec
leave
add
jnp
lods
popf
push
mov
imul
mov
push
dec
jge
jo
icebp
sbb
dec
mov
arpl
cld
outs
shr
in
mov
adc
mov
std
retf
(bad)
mov
mov
pop
mov
pop
mov
clc
mov
push
cmp
int
dec
sar
movs
cmp
sbb
popf
and
cmp
xchg
adc
mov
retf
mov
xor
in
test
call
(bad)
call
mov
scas
out
ss
lea
addr16
ror
push
mov
in
sti
idiv
dec
out
imul
jmp
add
push
jge
pusha
outs
and
jnp
push
in
mov
ss
(bad)
mov
mov
fmul
pop
pusha
out
sub
ret
popf
int
push
rep
ins
sub
aad
movs
ror
or
pop
xor
lds
jp
jo
mov
retf
in
xchg
retf
mov
mov
test
int
cld
sbb
not
fdivrp
push
and
in
xchg
lods
je
das
dec
fsub
dec
fs
sub
nop
mov
jmp
shl
sahf
inc
outs
aam
sbb
repz
pushf
and
ja
push
loopne
test
xor
mov
dec
jg
mov
int
xchg
test
cmc
pop
mov
pop
jl
test
cmp
mov
aas
fstcw
fisubr
stos
jns
stc
nop
push
outs
and
add
cmp
stos
jae
dec
mov
and
add
xor
test
dec
push
cmps
sub
test
lds
push
add
inc
je
aam
mov
loope
jge
or
mov
adc
inc
mov
jnp
mov
mov
add
(bad)
xor
nop
(bad)
cmc
shr
xchg
pop
or
cmp
mov
push
mov
data16
mov
mov
mov
sahf
add
sub
mov
scas
mov
pop
dec
mov
fisubr
jo
mov
outs
or
adc
out
stos
sbb
or
mov
mov
xchg
dec
repnz
daa
in
jbe
rcl
pop
lea
(bad)
cmp
pop
cmps
xor
lods
aam
jnp
dec
add
fld
sahf
ja
pop
(bad)
rol
xchg
fcom
shl
fldenv
jnp
scas
lds
(bad)
sub
sbb
lods
lds
pop
inc
push
push
cmp
or
inc
adc
push
mul
fld
jb
xchg
fcmovnbe
popa
(bad)
xchg
push
push
cmc
(bad)
shr
sbb
pop
popf
ret
mov
test
mov
cmp
mov
inc
enter
mov
sbb
mov
or
fisub
mov
(bad)
sti
mov
dec
scas
out
stos
fcom
aam
xlat
movs
mov
mov
mov
mov
push
jg
sbb
add
aaa
popf
jmp
stos
lods
mov
xchg
push
mov
push
aam
sub
iretw
es
push
pop
loop
cli
or
xchg
mov
ret
push
jne
and
adc
jb
pop
test
add
test
push
xor
jns
add
neg
pop
inc
adc
cld
in
les
lods
imul
push
aas
scas
pop
cmps
add
push
int
inc
jne
jno
jmp
cmp
sti
inc
mov
shl
test
xchg
movs
lea
mov
mov
test
dec
cmp
(bad)
mov
xlat
push
adc
mov
rol
scas
std
jmp
jbe
jnp
pop
mov
xchg
pop
xor
jo
push
or
rcr
dec
xlat
xor
inc
loopne
mov
mov
ss
mov
dec
idiv
jno
xchg
sub
sbb
test
dec
push
test
jmp
repz
lods
and
sub
sbb
cli
xchg
(bad)
mov
sbb
leave
in
cmp
xor
movs
mov
push
pop
mov
sbb
cmp
retf
iret
and
and
jecxz
cmps
jo
xchg
push
xchg
jecxz
dec
retf
xor
jmp
mov
jmp
fild
outs
retf
xchg
repz
pusha
outs
push
push
dec
sub
pop
ins
sbb
xor
test
xchg
jp
pop
jle
bound
test
cld
mov
repz
and
outs
pop
(bad)
pop
in
jns
cmp
stos
mov
stos
cmp
(bad)
ds
inc
cmp
pop
xchg
dec
add
add
popf
sbb
inc
sbb
pusha
ror
daa
loopne
dec
and
add
lds
mov
pusha
jecxz
add
inc
pop
stc
lds
cmps
pop
sbb
mov
int
(bad)
mov
sbb
cmp
add
jle
xchg
es
cld
add
push
mov
dec
mov
xchg
ins
cdq
sbb
push
mov
or
jns
pop
shr
jne
nop
repz
mov
retf
loop
dec
sub
hlt
gs
mov
ja
push
test
lods
or
in
pop
jle
(bad)
or
jmp
jne
dec
or
cmp
xor
bound
scas
movs
lods
add
adc
dec
fsub
int3
mov
bound
inc
test
gs
lods
lods
xor
fdivr
ins
sar
jmp
mov
popf
push
jae
jae
pop
cmp
test
imul
lahf
sbb
lds
jo
dec
xchg
repz
inc
mov
out
add
push
ins
imul
in
dec
jns
clc
lds
cs
add
mul
frstor
cdq
arpl
cmc
repz
dec
fild
dec
ins
std
jo
imul
inc
ins
xchg
add
push
nop
outs
(bad)
out
and
jne
xchg
inc
sbb
mov
and
fst
or
push
pop
push
xchg
jge
fstp
mov
test
push
cmps
sub
mov
ror
xchg
xlat
enter
scas
aam
fidivr
xchg
ja
mov
cmp
xlat
mov
mov
test
aas
sub
pop
pop
gs
hlt
xor
push
out
ror
mov
or
mov
add
pop
cmps
nop
cmps
jmp
sbb
mov
adc
int3
lds
mov
xor
(bad)
fs
arpl
pop
call
fs
jno
and
mov
ret
fs
push
pop
(bad)
fnstenv
dec
or
cli
inc
aam
cmp
retf
cmp
loop
stc
retf
sub
scas
dec
xchg
xchg
mov
xchg
cmp
addr16
test
dec
retf
jno
fisttp
or
mov
mov
out
(bad)
fimul
sahf
dec
pop
in
sbb
pop
(bad)
or
mov
test
adc
xchg
icebp
stos
xor
movs
and
or
inc
in
or
add
ja
shl
pop
aas
or
jne
rol
cmp
sub
fwait
mov
pop
push
pop
jle
sub
fisub
out
mov
pop
push
xchg
stos
xchg
imul
test
cmps
imul
in
mov
push
movs
inc
sub
adc
movs
xchg
and
mov
adc
ret
sub
xchg
loope
dec
pop
hlt
ret
(bad)
xchg
pop
fiadd
pop
mov
xchg
jmp
daa
sub
sahf
adc
rol
xchg
jl
sub
mov
mov
cmp
mov
adc
pop
ins
xchg
in
out
nop
adc
fldcw
push
jp
adc
jb
push
xor
push
dec
sbb
adc
lods
fisubr
retf
sbb
mov
enter
cmp
mov
aaa
or
mov
xchg
pop
dec
push
cmp
jmp
das
sbb
cmp
xchg
inc
adc
cs
fadd
cmp
mov
fcomp
xor
inc
shl
test
inc
idiv
js
imul
pop
mov
icebp
out
sbb
add
jns
or
addr16
ficomp
in
mov
fiadd
cmp
xor
fadd
popa
repnz
test
mov
jmp
mov
or
xchg
std
jbe
int
xchg
add
xor
sub
loopne
and
inc
out
pop
xor
push
mov
sbb
jmp
cmp
(bad)
imul
int3
in
lea
adc
mov
push
scas
cmc
push
loopne
pop
jle
xchg
lock
jecxz
mov
(bad)
and
sub
jmp
aam
stos
push
js
mov
jbe
movs
dec
scas
leave
into
add
sub
xchg
popa
sar
mov
push
cmps
xchg
popa
add
loop
mov
inc
dec
push
lahf
or
in
setle
cmp
cmp
dec
inc
fmul
popf
rcr
ficom
xchg
mov
inc
(bad)
movs
add
mov
fnsave
jb
add
sub
mov
and
jb
mov
shl
out
inc
pushw
call
mov
shl
jne
(bad)
xchg
fidivr
daa
rol
int3
add
and
jnp
fneni(8087
ret
inc
push
pop
or
idiv
fld
adc
push
or
mov
push
push
rcl
add
mov
pusha
cmps
shl
push
sbb
dec
ficom
fld
inc
loope
jae
pushf
inc
adc
sub
loopne
scas
pop
test
mov
cmp
call
mov
sbb
cmp
stc
push
sahf
aaa
or
jno
sbb
fnstenv
out
jno
ins
lea
(bad)
dec
sar
push
aam
sub
cmp
dec
mov
lahf
dec
sbb
call
sbb
mov
dec
test
push
sub
and
add
adc
icebp
push
push
aad
cwde
nop
call
push
fwait
lock
rcr
leave
cwde
std
push
aad
mov
or
sub
sub
sub
in
adc
(bad)
out
jge
sub
outs
push
sbb
scas
fsubr
cmc
ret
shr
sbb
inc
(bad)
and
(bad)
iret
(bad)
pop
enter
sbb
aaa
lods
mov
nop
retf
adc
in
add
cmp
xor
xchg
adc
imul
sbb
cli
or
sbb
mov
mov
rcr
call
in
or
dec
pop
xchg
sub
cmp
scas
test
mov
movs
aas
popf
test
fs
jl
fistp
sub
and
stos
pop
mov
aas
aas
leave
push
or
mov
data16
arpl
inc
fistp
test
adc
fistp
aaa
test
dec
mov
enter
loop
sub
sete
pop
sar
retf
(bad)
into
sbb
icebp
out
jne
push
test
js
inc
cmovae
inc
mov
sbb
sbb
add
xchg
mov
mov
hlt
scas
xchg
sub
sar
xchg
icebp
pop
cli
sub
pushf
pop
outs
(bad)
push
add
les
(bad)
mov
add
call
jmp
pop
cmps
adc
push
xlat
dec
ret
adc
test
pop
inc
lods
repz
jecxz
cmp
lahf
in
inc
pop
nop
pop
leave
and
jecxz
out
data16
push
or
idiv
or
xor
jbe
mov
dec
push
gs
out
es
lds
mov
ins
jge
jbe
jb
aas
jmp
int3
fsubr
mov
daa
lahf
sti
cdq
mov
js
rcr
push
dec
shl
sbb
shl
pushf
push
call
pop
and
xchg
or
mov
outs
sar
adc
std
jae
sub
stc
sbb
outs
call
cmp
cmc
mov
xchg
les
cmp
mul
jle
add
jo
mov
les
push
adc
std
sub
jl
or
mov
and
pop
stos
retf
jnp
jbe
adc
clc
dec
aas
imul
pop
mov
jmp
stc
jns
jo
(bad)
and
cmp
aad
jle
sbb
sbb
cmp
jle
or
fidiv
int
sbb
jb
mov
sbb
cmp
inc
inc
ins
xor
jb
adc
fs
fldenv
cmp
inc
or
sub
outs
jnp
fadd
sahf
(bad)
data16
push
popf
lds
ss
xchg
test
or
push
mov
(bad)
repnz
es
add
fmul
and
data16
adc
cmp
test
int3
dec
out
push
dec
mov
sbb
ss
in
(bad)
mov
shl
mov
cmps
loop
loop
mov
movs
loope
sar
push
sbb
icebp
rol
in
jge
pop
fbld
cmp
fucom
movs
mov
je
mov
test
jb
mov
cld
mov
push
shl
fist
jne
cli
cmp
mov
outs
cld
push
and
dec
aam
push
adc
lock
mov
inc
cmc
stos
div
dec
inc
loop
retf
call
test
loop
or
jecxz
sub
stos
cwde
not
jbe
xchg
ins
or
pop
jae
xor
cld
int
out
sar
imul
daa
and
jecxz
jge
pop
call
mov
test
ss
or
out
dec
sub
bound
sar
or
sti
pop
imul
call
jle
out
dec
cmps
mov
xor
pop
hlt
ja
int
loope
and
pop
push
push
add
xchg
push
aas
jle
loop
inc
pushf
gs
push
jmp
add
add
jge
out
ins
xchg
push
dec
sbb
pop
push
sub
ja
ror
daa
scas
(bad)
jb
xchg
mov
aam
and
sbb
stc
(bad)
cmps
mov
ss
jne
push
mov
xor
das
xor
jne
call
stc
add
and
retf
lea
sub
lods
xor
inc
mov
sbb
popa
mov
adc
gs
daa
and
cmp
mov
jle
(bad)
enter
dec
stos
jl
ret
imul
dec
mov
fcom
cmp
xor
hlt
js
out
outs
cmp
dec
push
ficomp
cmp
xlat
adc
mov
bound
push
push
cmp
dec
cmc
fstp
outs
jb
pushf
sbb
pop
js
mov
dec
xchg
mov
xor
dec
sbb
(bad)
dec
push
inc
and
sub
mov
lds
jp
sar
(bad)
push
int
inc
inc
fisttp
xor
aam
outs
jge
jnp
in
movs
inc
mov
retf
into
call
or
call
call
mov
or
rol
scas
mov
dec
out
jp
outs
fld
mov
mov
jge
or
xor
pop
cmps
out
dec
inc
mov
and
add
fld
out
mov
pop
mov
loope
lea
outs
out
mov
push
das
xadd
stos
movs
sahf
std
push
mov
cli
pop
dec
add
sbb
(bad)
mov
cld
(bad)
pop
ins
and
xchg
xchg
pop
and
xchg
movs
rcr
imul
in
ss
rcr
js
in
out
lea
xchg
sub
xor
and
ror
sbb
imul
and
mov
clc
mov
sub
jmp
pop
int3
js
cmp
xchg
dec
push
fwait
outs
cmp
cmp
movs
mov
jno
mov
test
xchg
int3
(bad)
stc
mov
adc
mov
xchg
dec
mov
out
dec
es
repz
adc
sub
inc
imul
add
int3
adc
popf
adc
mov
scas
dec
and
js
fwait
jnp
icebp
loope
xor
xchg
inc
popa
xchg
lds
cmp
dec
xchg
push
arpl
push
mov
inc
shl
fild
inc
dec
ret
stos
jp
test
mov
jbe
lods
mov
cdq
jmp
test
mov
in
jmp
jge
jg
ja
add
pop
sbb
stos
out
push
ins
xor
aam
jnp
ret
mov
mov
in
cmp
push
pushf
dec
movs
push
scas
fidiv
ds
pop
lea
inc
ins
int
js
fsub
adc
cmc
test
jmp
inc
shl
hlt
(bad)
repnz
sub
sbb
add
ss
test
loopne
dec
ins
cmp
add
mov
shr
out
xor
sbb
mov
jge
pusha
pop
mov
adc
push
icebp
rcr
mov
sbb
push
jg
outs
xor
jecxz
cmps
das
jne
ins
xor
aam
adc
fidiv
mov
push
cmp
fisttp
aad
out
popf
jl
(bad)
(bad)
mov
push
and
repz
ins
outs
jno
mov
loop
jae
dec
mov
(bad)
push
retf
sbb
mov
fdivr
jne
add
xchg
pop
mov
mov
rol
sbb
mov
jmp
lds
fwait
out
cmp
sub
jnp
cmp
and
fcom
mov
mov
ret
(bad)
shl
adc
inc
mov
mov
movs
dec
movs
stos
or
in
in
in
jo
sti
rcr
mov
shr
fist
pop
sbb
pop
les
ret
pop
pop
xor
jo
pusha
scas
jmp
and
call
imul
loopne
push
jmp
call
and
jmp
adc
(bad)
mov
retf
inc
ret
xchg
fsubr
push
pop
mov
out
mov
sbb
mov
aam
and
sbb
loopne
cmps
(bad)
dec
jmp
mov
loope
in
inc
paddusw
jb
jmp
mov
js
cli
cmp
gs
jg
add
cli
jl
lahf
in
arpl
mov
push
in
xchg
push
cwde
or
add
cmc
sbb
jno
sub
hlt
shr
inc
pop
rcr
mov
neg
int3
aad
xchg
ror
or
lahf
xchg
dec
call
das
inc
pop
pusha
lahf
outs
nop
ret
nop
div
das
pusha
int3
push
add
fwait
or
jge
jb
dec
sub
stos
in
cmp
cmp
xchg
fs
inc
mov
ins
dec
in
push
or
inc
add
or
adc
popf
cmp
or
cld
mov
loopne
mov
inc
push
push
or
or
or
daa
and
fisttp
stos
sbb
addr16
jle
ins
and
sti
scas
test
cmp
or
cmp
sub
add
dec
out
out
mov
das
syscall
dec
xlat
fiadd
xor
inc
outs
aaa
xchg
cmp
fwait
mov
sbb
xor
fild
cs
cmc
pop
test
repz
jno
or
shl
mov
shr
not
jl
sbb
mov
test
add
(bad)
je
mov
rcl
inc
clc
or
jecxz
ds
jnp
dec
mov
mov
mov
cli
sbb
and
shl
dec
lods
inc
outs
jmp
mov
dec
out
loop
adc
cwde
fwait
jo
pop
jp
(bad)
das
mov
mov
mov
ja
xchg
xor
mov
sbb
pop
add
sti
pop
push
imul
(bad)
pop
lods
popf
addr16
push
mov
xchg
cmps
repnz
or
fisttp
jae
movs
push
xchg
or
popa
mov
xchg
add
push
sbb
mov
lock
jno
xlat
(bad)
xlat
mov
in
and
je
pop
sbb
pop
inc
out
repnz
push
mov
ds
xchg
imul
or
mov
cli
push
xchg
adc
add
xor
aas
cmp
xchg
sbb
jle
cmp
std
out
mov
ds
out
xchg
or
lahf
and
xor
movs
or
mov
pop
int3
jb
sub
stc
cld
mov
(bad)
cmp
iret
cmp
fild
jbe
or
fs
test
ins
mov
fwait
mov
les
xor
sahf
mov
pop
xor
out
push
andps
(bad)
fistp
dec
out
int3
push
add
push
cmp
icebp
and
pop
jns
bound
pop
dec
push
lock
sbb
(bad)
popf
enter
dec
movs
jo
xor
loope
pop
int
mov
or
inc
ins
aad
pop
dec
adc
push
(bad)
ror
mov
mov
sub
mov
imul
dec
or
imul
test
and
add
xchg
sbb
ins
xchg
retf
sub
(bad)
fsubr
jl
outs
pop
ss
shr
pop
hlt
(bad)
push
imul
shl
dec
in
inc
int
(bad)
inc
add
push
xchg
cld
dec
cmp
(bad)
fmulp
jl
pop
std
mov
pop
or
add
popa
aaa
fcom
lods
movs
or
cmps
lds
dec
push
dec
mov
mov
mov
sbb
cmps
leave
enter
sbb
jae
add
movs
mov
sbb
adc
mov
and
dec
jnp
test
(bad)
adc
dec
push
and
in
adc
(bad)
push
mov
ror
movs
aad
inc
lock
adc
out
jne
stc
fnsave
repnz
dec
sar
dec
mov
push
fsubr
adc
jp
lea
jg
lock
and
ror
and
push
pushf
xor
inc
dec
ror
inc
lods
js
mov
jle
dec
xor
fdivr
or
sub
lock
sbb
loopne
fwait
cmp
icebp
imul
push
(bad)
or
pop
pop
or
pop
test
xor
loope
iret
cmp
iret
not
dec
mov
mov
sub
sbb
push
adc
rol
adc
push
dec
dec
xlat
movs
pop
push
push
jmp
iret
adc
lock
and
dec
arpl
pop
in
cli
pop
jp
and
mov
loopne
mov
mov
cwde
shr
dec
mov
adc
in
arpl
mov
xchg
cmp
mov
mov
bound
(bad)
pop
fs
push
cmps
loopne
sbb
xchg
add
pusha
jmp
xchg
or
ret
adc
mov
mov
dec
mov
dec
sub
lods
mov
xchg
cmp
fld
inc
mov
in
jle
inc
std
sub
and
push
push
push
jmp
out
aas
jnp
ins
mov
and
mov
out
call
add
test
push
adc
jg
sbb
push
imul
dec
ins
stc
add
or
fsub
sub
mov
dec
clc
sbb
mov
adc
push
aaa
adc
xchg
dec
add
pop
sub
adc
sub
push
inc
mov
dec
sub
jae
ss
pop
and
push
outs
xchg
push
cmp
mov
pop
dec
inc
enter
push
nop
mov
mov
mov
rol
mov
xchg
add
pop
mov
mov
add
out
dec
repnz
out
mov
pop
or
adc
in
lahf
(bad)
retf
jl
cmp
bound
sahf
inc
call
in
lds
mov
inc
sbb
dec
dec
fnstcw
loopne
mov
sbb
pop
or
aam
pushf
shr
int3
mov
dec
or
imul
inc
sbb
jns
jmp
lock
jo
fucomi
xor
(bad)
aad
cmp
pop
push
mov
or
mov
dec
cmp
mov
push
pop
mov
fbld
es
inc
imul
ja
pusha
lahf
(bad)
gs
sbb
iret
mov
cmp
pop
sti
pop
or
retf
dec
sbb
rol
sub
cld
push
mov
pop
xlat
mov
int3
adc
rcr
sbb
cwde
mov
cs
jl
shl
jge
jecxz
test
xchg
ss
rcl
dec
fistp
mov
push
or
jp
or
pop
(bad)
aas
icebp
pop
(bad)
pop
jnp
xchg
popf
stos
inc
leave
jge
outs
push
xchg
frstor
movs
and
fcomi
retf
inc
das
sti
retf
xor
cmps
popf
jge
xchg
(bad)
std
rol
cmp
push
retf
gs
aas
inc
or
aaa
cmc
adc
dec
mov
les
out
lock
xchg
cmp
adc
rcl
fidiv
mov
retf
pop
popa
(bad)
inc
mov
or
ss
cmps
lock
jb
mov
ins
dec
push
jecxz
and
adc
jne
and
clc
enter
jmp
mov
mov
xor
cmp
xchg
not
pop
aad
aad
arpl
fld
fimul
push
repz
and
inc
bound
pop
into
cmps
ror
scas
add
mov
pop
push
pcmpeqw
aas
xchg
js
xchg
retf
fstp
test
push
push
cmp
popf
int3
dec
xchg
lods
in
shl
cmp
out
sti
sub
nop
pop
adc
add
repnz
xchg
pop
sub
cmc
ds
icebp
pop
sub
push
xchg
int
(bad)
push
sub
jnp
xor
stos
pop
adc
call
out
lea
aam
push
movs
mov
mov
xor
bound
ds
add
mov
clc
aad
pop
sbb
rol
in
sbb
lahf
pop
cmp
movs
mov
xchg
loop
enter
sahf
and
mov
push
inc
inc
mov
daa
mov
aad
rol
xchg
xor
ror
xchg
imul
or
mov
sub
sub
mov
enter
jne
push
xor
fidivr
outs
push
xor
mov
sub
jecxz
das
shr
and
or
push
in
popf
fwait
call
push
mov
dec
sbb
cmp
add
push
test
pop
out
sbb
sub
retf
mov
xlat
inc
jp
jno
mov
mov
iret
dec
fmulp
dec
sbb
mov
into
stos
push
ds
aam
pop
xor
xchg
mov
xchg
add
push
pop
pop
or
mov
mov
call
in
push
imul
mov
lds
cmps
pop
sub
or
(bad)
adc
xor
xchg
icebp
add
not
inc
sub
cli
or
outs
cld
push
ja
fsubr
pop
sar
int3
pop
aas
daa
jb
add
clc
bound
jnp
int
imul
in
addr16
sub
lods
add
sub
mov
and
mov
dec
pusha
iret
and
jl
shl
retf
gs
cmp
fidivr
pop
shr
and
mov
sbb
sub
jmp
inc
cmp
xchg
inc
popa
int
add
fbstp
sub
rcr
unpcklps
and
mov
xor
fdiv
dec
rcr
mov
in
dec
jge
test
jle
adc
jg
pop
aam
pop
mov
imul
inc
ret
mov
aad
mov
arpl
xor
xchg
add
test
add
popa
push
sub
or
jp
not
shl
mov
add
lods
inc
int3
and
push
or
sub
mov
mov
ins
mov
dec
call
ins
(bad)
fmulp
das
aam
xor
inc
daa
(bad)
rcr
jmp
push
iret
mov
mov
sub
aaa
cvtpi2ps
mov
pusha
fisttp
dec
and
jno
mov
ja
or
movs
das
aaa
dec
jb
popf
imul
dec
jbe
data16
jle
in
mov
imul
popa
movs
push
ja
sahf
push
test
push
stos
jno
or
push
cmc
in
pop
xor
addr16
cmps
push
scas
rcl
pop
ret
xor
mov
dec
fldcw
imul
adc
imul
push
or
fdiv
sub
aas
lea
in
test
fild
jg
aad
outs
lods
ja
lods
gs
stos
dec
adc
jle
(bad)
int
icebp
call
add
loope
ror
iret
sar
adc
mov
pop
xchg
aam
aas
mov
sub
(bad)
pop
adc
enter
pop
ins
sbb
xchg
mov
push
repnz
movs
and
cdq
mov
call
sub
pop
pop
aaa
push
add
jl
shl
int3
fdivr
push
sbb
sub
push
mov
jb
fwait
mov
sub
aaa
aaa
and
mov
mov
cmp
inc
fist
addr16
add
or
fdiv
je
sbb
xchg
int3
sbb
add
out
jge
pop
(bad)
jne
cmps
dec
sub
push
sbb
mov
dec
mov
mov
pushf
jae
movlps
inc
push
dec
lea
hlt
cdq
in
(bad)
ins
in
stos
xor
ficom
and
fwait
xor
push
lea
jmp
xchg
clc
and
repnz
in
add
sub
sbb
add
(bad)
out
fnstenv
jae
ret
sbb
icebp
add
aaa
jno
pushf
inc
lds
add
es
xor
xchg
loopne
outs
xchg
mov
cmp
lods
jns
test
dec
cmps
push
ss
pop
out
gs
jecxz
push
push
dec
hlt
hlt
ins
jg
dec
sbb
sub
aas
and
ins
daa
jnp
mov
inc
push
pushf
mov
mov
pop
adc
xchg
or
jle
add
jecxz
mov
xor
xchg
test
inc
out
mov
mov
loope
retf
outs
fdivp
popf
ja
xlat
push
cmps
aaa
xor
adc
sub
xor
mov
mov
ret
rol
rol
fnstsw
pop
movs
xor
fdivr
dec
lock
mov
nop
sbb
sub
test
xor
xor
movs
je
pusha
call
std
movs
pop
out
xor
push
fwait
mov
icebp
or
mov
call
je
xchg
pop
push
cli
cmp
mov
fistp
xchg
out
xchg
push
(bad)
add
cmp
retf
inc
int
popa
data16
lea
aad
pop
xor
push
loope
mov
fwait
add
cmp
nop
enter
sub
push
dec
ret
das
jnp
cmc
pop
jo
cld
cdq
jnp
mov
cdq
pop
rcl
std
inc
and
mov
aad
out
test
fmul
mov
test
push
pop
inc
outs
out
xchg
imul
jne
mov
pop
inc
xchg
inc
adc
jmp
push
pop
or
sbb
fs
dec
inc
and
fbstp
cli
inc
or
push
cmp
aad
jo
rol
pop
mov
push
(bad)
mov
sbb
(bad)
and
out
jge
les
outs
xchg
or
jge
mov
es
idiv
std
and
es
lods
cdq
push
cs
ja
outs
sbb
cmps
pushf
cmp
adc
int
call
cmps
cmp
inc
dec
lods
int
jb
ins
mov
nop
xchg
leave
sub
mov
jl
sbb
imul
push
cmp
cld
cwde
(bad)
sbb
lods
in
hlt
and
arpl
fcom
fbld
push
sbb
jmp
fisubr
pop
or
pop
clc
and
xor
inc
dec
stos
mov
inc
inc
xchg
ficom
inc
in
add
jp
sub
movs
dec
adc
xchg
mov
test
jbe
push
jl
loop
sub
xchg
fnstsw
jecxz
cdq
jp
cmps
stc
dec
retf
ret
cmp
xchg
or
xchg
fwait
cmps
ret
(bad)
xchg
and
ins
mov
add
push
mov
add
pop
pop
lea
cmc
sti
cli
mov
xchg
add
dec
push
xor
std
stos
stos
push
loopne
xor
into
cmc
jns
cmp
rcr
cmp
(bad)
and
(bad)
sub
xlat
aas
sub
add
sub
enter
add
cld
xchg
cmp
mov
push
pop
mov
mov
add
shl
sbb
jp
fwait
(bad)
mov
shr
push
adc
inc
adc
mul
mov
leave
rep
in
sti
stc
fbstp
outs
aad
nop
push
mov
mov
cdq
daa
push
pop
cwde
outs
stos
add
push
dec
or
addr16
push
cmp
cmp
dec
mov
push
cld
ret
cmp
mov
pop
mov
jl
(bad)
mov
jbe
lds
mov
retf
add
jno
xor
jmp
mov
pop
pushf
retf
sub
daa
int
stos
out
push
in
jp
pushf
mov
jbe
pushf
push
mov
rcr
mov
mov
jne
and
cdq
cs
sub
mov
in
test
push
pop
cmp
scas
test
sub
or
and
retf
lahf
addr16
icebp
mov
and
xchg
scas
xchg
adc
jnp
mov
xchg
jle
popf
push
inc
fidiv
mov
aas
pusha
ja
jae
inc
ds
imul
arpl
gs
pusha
and
popf
xchg
pop
shr
push
push
sub
in
cdq
mov
adc
stc
jl
clc
sbb
sti
test
iret
jns
pop
(bad)
loopne
mov
mov
mov
jl
or
push
push
jae
and
jae
add
cwde
dec
outs
mov
jnp
sti
pop
and
cwde
dec
cmc
xchg
(bad)
aas
ror
cmp
clc
xor
or
xor
aaa
mov
fcomip
pop
(bad)
psubd
cmc
cmp
xchg
add
rcr
sub
push
ret
inc
mov
mov
jle
push
inc
xchg
loop
mov
jne
std
iret
pushf
scas
clc
mov
stos
cdq
sbb
adc
mov
out
mov
loop
pop
or
mov
xchg
pop
test
mov
pop
inc
add
stos
ret
pop
das
fidivr
pushf
mov
sbb
add
push
sbb
adc
repz
psrad
loopne
jmpw
cmps
nop
cmc
lods
or
shr
sub
retf
inc
pushf
arpl
fstp
mov
and
pusha
pusha
xchg
lods
fistp
ret
movs
dec
mul
cmp
shl
and
xchg
sub
mov
and
fimul
push
fild
ins
cmc
fcmovnb
movs
jo
sbb
pop
pop
jl
adc
dec
mov
pop
movs
adc
aad
dec
in
mov
push
xor
(bad)
mov
test
ins
rcl
sub
clc
fwait
std
dec
push
call
out
arpl
add
add
clc
xchg
dec
lahf
test
sbb
js
out
ds
jl
retf
mov
dec
stc
pop
jmp
xchg
pop
aas
data16
or
test
dec
add
fnstsw
mov
fbld
mov
out
enter
xchg
and
adc
sbb
or
inc
mov
cs
cwde
and
out
cmps
fcmovbe
sub
prefetcht2
cmp
imul
push
(bad)
vmread
test
jmp
(bad)
push
pusha
fwait
mov
inc
ret
lea
aam
ins
enter
mov
push
or
adc
xor
pop
clc
inc
dec
dec
and
jnp
jle
jne
xchg
mov
outs
lods
pop
or
shl
test
repz
out
aas
add
outs
sub
xor
aam
out
adc
(bad)
cmps
pusha
das
pause
mov
mov
cld
test
repz
aaa
out
push
shr
imul
stc
jne
mov
or
es
cmp
lea
fwait
mov
daa
pop
adc
mov
jp
es
fwait
mov
enter
ret
jge
pop
shl
xchg
movs
mov
mov
jmp
and
mov
xlat
ss
add
push
ret
neg
fst
sbb
movs
fs
fidiv
mov
leave
jecxz
cld
int
xor
xchg
cmc
ja
mov
stc
xor
cdq
mov
push
in
or
mov
ret
and
clc
mul
inc
push
(bad)
in
or
pushfw
nop
cmp
pop
imul
int3
push
xchg
aam
addr16
in
scas
push
sbb
jmp
aam
fsubr
aas
pop
leave
push
adc
mov
imul
loop
outs
into
inc
int
add
leave
jecxz
push
pusha
jecxz
push
jecxz
lahf
frstor
dec
aaa
sbb
xchg
fsubr
jmp
pop
and
movs
int3
dec
mov
and
jbe
xchg
ds
jnp
mov
and
adc
stc
cmps
pop
movs
and
mov
fsub
jb
mov
sar
xor
pop
aaa
push
(bad)
jo
jecxz
(bad)
ins
push
fsub
xor
loop
push
shl
add
mov
or
sbb
mov
imul
aam
xchg
iret
mov
hlt
pop
pop
mov
mov
jl
ret
jp
sar
adc
mov
cmp
add
xchg
pop
xor
dec
data16
jmp
mov
mul
jg
pop
inc
out
das
je
xor
jecxz
mov
and
add
mov
fwait
stc
inc
stos
mov
sub
arpl
stos
jbe
xchg
jno
into
or
ror
std
retf
jmp
jg
jle
sti
stos
mov
lods
inc
pop
jmp
mov
add
sbb
dec
fsub
mov
lahf
or
cwde
jp
stc
mov
jne
ror
push
sub
dec
sbb
cmp
ins
mov
test
clc
icebp
not
sub
arpl
jg
clc
ret
pushf
retf
rcr
mov
or
repnz
xor
sbb
adc
mov
cmc
push
(bad)
dec
cli
idiv
sar
call
jbe
vprotq
les
xor
and
jmp
clc
mov
push
cmp
adc
lods
(bad)
inc
and
sub
jbe
cwde
fstp
sbb
mov
push
gs
rcr
jmp
bound
mov
sti
add
xchg
sub
sub
cwde
icebp
mov
and
lahf
movs
jmp
cmp
mov
dec
pop
div
fild
call
bound
sbb
jmp
jmp
std
jno
cdq
cmp
and
pop
or
adc
cwde
lds
adc
test
(bad)
cmp
pop
sbb
pop
add
mov
sbb
push
push
fnstsw
jns
sti
inc
(bad)
push
mov
jp
in
loope
sar
shl
retf
ins
test
sbb
icebp
imul
les
cld
mov
jne
es
xchg
ret
or
rol
int3
mov
xor
xor
mov
out
out
add
pop
test
ror
jne
dec
push
adc
movs
out
fstp
int3
sbb
mov
out
in
cmp
mov
sub
xor
pop
sub
mov
js
mov
call
jmp
mov
mov
jo
enterw
test
xor
dec
stos
adc
ud0
pop
mov
mov
jp
cmpps
and
push
ins
dec
daa
xchg
inc
lods
jl
aad
sti
lods
shl
pop
sbb
mov
dec
cmp
sub
sbb
xor
xchg
xchg
jmp
dec
inc
dec
dec
jb
mov
enter
jne
sbb
dec
and
les
adc
mov
std
jns
cmp
jg
imul
pop
punpcklbw
push
add
adc
xchg
arpl
inc
daa
not
dec
and
sub
add
test
mov
arpl
lods
je
mov
cmp
outs
call
pop
xor
not
mov
loop
sub
nop
dec
retf
dec
push
lea
call
push
push
inc
fcomp
add
jge
lods
sub
dec
(bad)
jnp
icebp
movs
or
bound
xchg
sbb
mov
sub
pop
ins
inc
mov
movs
(bad)
push
jle
jno
in
pop
mov
adc
fs
mov
mov
xor
mov
mov
dec
mov
aaa
cld
test
jo
movs
aaa
stos
mov
cmp
push
push
int3
xor
sti
push
fistp
push
(bad)
push
gs
mov
or
and
mov
cmp
ja
jno
cld
mov
or
(bad)
cmc
stos
mov
out
mov
neg
dec
sar
loope
mov
clc
xor
hlt
push
jp
icebp
mov
jl
popa
repz
jle
sub
hlt
dec
jns
mov
pusha
cmp
xor
test
jmp
sbb
push
or
sar
popf
adc
ss
dec
adc
xor
in
mov
popf
fwait
sub
cmc
loope
test
mov
outs
shr
mov
mov
arpl
sbb
inc
loop
mov
jmp
cmps
lock
jl
mov
xchg
mov
pop
sub
mov
(bad)
sti
jnp
movs
dec
pop
mov
(bad)
bound
jmp
push
test
out
adc
stc
sti
loop
push
ret
xor
push
xor
lods
xor
cmp
jmp
xor
cwde
inc
pushf
add
jno
in
sbb
jnp
js
jp
jb
add
xor
call
push
adc
retf
add
lds
push
sub
inc
leave
mov
sub
jno
push
push
idiv
je
mov
retf
xchg
aaa
movs
aam
dec
out
ret
outs
ins
test
or
or
into
ins
lahf
repnz
sub
out
repnz
lods
(bad)
jge
je
(bad)
stos
out
js
hlt
add
mov
(bad)
jl
in
lds
scas
inc
(bad)
ja
push
fs
push
ss
xlat
dec
jmp
ss
mov
add
dec
push
ins
mov
sbb
mov
arpl
out
ret
scas
mov
outs
mov
stos
cmp
adc
and
rol
mov
adc
dec
daa
cmp
mov
cmps
mov
or
adc
sbb
sbb
cli
gs
xchg
icebp
and
add
xchg
inc
or
imul
cmc
into
cmp
jecxz
aam
mov
ret
stc
xchg
in
push
pop
sbb
xchg
pusha
pusha
dec
inc
in
mov
mov
mov
js
lods
dec
out
imul
jae
xchg
adc
sar
iret
out
(bad)
stos
outs
push
jg
jle
lods
jo
push
cmps
cmps
xor
push
push
sub
fbld
xlat
aas
jmp
dec
je
loopne
ss
jmp
add
cmps
mov
repz
in
shl
mov
out
dec
leave
retf
add
or
mov
bound
imul
jmp
rol
imul
sbb
ret
add
dec
mov
adc
add
jp
cmps
ret
push
outs
or
in
pop
out
test
pop
dec
dec
adc
cmp
xchg
mov
mov
adc
push
mov
xor
cdq
(bad)
sbb
into
or
adc
sahf
and
mov
or
test
xor
loop
inc
enter
xlat
jge
cmp
xchg
mov
cmps
loop
jnp
mov
inc
out
mov
neg
ror
bound
out
inc
sub
mov
ss
push
daa
outs
shl
inc
in
ret
enter
cmp
xchg
jge
dec
or
outs
pop
das
test
loope
push
in
xchg
(bad)
scas
pop
mov
xor
(bad)
(bad)
pop
pop
repz
cwde
sbb
xor
in
and
and
popa
aad
dec
fs
mov
jnp
xchg
jmp
js
or
shr
xor
sbb
mov
clc
pop
add
lahf
jmp
dec
imul
daa
imul
cdq
mov
xor
in
pop
out
dec
jp
rcl
pop
pop
mov
and
pop
sub
fnstcw
push
bound
xchg
cmp
repnz
push
xor
and
in
mov
retf
lahf
add
sbb
pop
fistp
xchg
ror
pop
je
sub
retf
ror
leave
mov
cmp
fucom
and
push
dec
adc
clc
push
xchg
sub
(bad)
or
xchg
pop
cs
shr
mov
and
and
mov
xchg
out
mov
jl
imul
cmp
cs
xchg
cmps
call
dec
or
jg
xchg
cmp
aaa
or
popf
dec
and
cmp
scas
jo
test
jno
xor
das
dec
(bad)
jne
dec
bnd
fwait
int
retf
nop
out
xor
add
dec
jae
out
int3
and
call
mov
fbstp
in
sub
xor
mov
dec
call
adc
push
mov
gs
mov
std
mov
test
mov
in
ins
icebp
xchg
and
mov
leave
lods
mov
jmp
(bad)
sub
cld
push
leave
ror
inc
jl
mov
bound
inc
dec
and
cld
test
iret
ds
fadd
fisub
xor
imul
mov
outs
mov
ins
test
sub
jg
ja
sar
mov
add
clc
xor
inc
xchg
ds
push
shr
pop
pop
or
(bad)
mov
xlat
(bad)
stc
shr
pop
les
(bad)
repnz
aaa
inc
mov
inc
mov
mov
ret
jg
mov
jno
and
mov
adc
push
mov
sub
or
loope
stos
inc
add
icebp
add
mov
pop
icebp
test
dec
cmp
cdq
rcr
test
and
xor
dec
mov
xor
rcl
jg
or
jmp
cwde
sub
ja
and
call
mov
jae
push
je
adc
inc
push
cmp
mov
in
bnd
push
adc
jle
mov
(bad)
(bad)
arpl
cmp
in
pop
cld
xor
dec
ficomp
sbb
shr
imul
enter
or
pop
xchg
fdiv
sar
hlt
dec
dec
xlat
lock
enter
xchg
dec
add
psubsb
fld
mov
ja
pop
xchg
in
mov
xchg
jg
(bad)
sub
imul
pop
mov
add
xchg
push
test
rcl
into
adc
adc
sub
inc
jecxz
push
retf
popa
dec
xor
and
mov
hlt
inc
leave
jne
xchg
cmc
outs
fsubr
shr
lods
lea
inc
pop
movs
xlat
jns
pushf
rol
addr16
push
dec
test
mov
and
lods
test
lea
pop
outs
xchg
retf
xchg
js
out
cmp
add
jno
push
jmp
cmp
fld
stos
inc
aaa
(bad)
cmp
fwait
xchg
jmp
je
setg
xchg
xchg
repnz
mov
(bad)
test
neg
ret
add
rol
xchg
lahf
addr16
sbb
scas
jne
sub
les
lahf
(bad)
xor
stos
imul
imul
mov
sub
mov
jp
ins
jns
ret
aad
xor
retf
outs
jmp
test
aaa
pop
(bad)
jns
mov
pop
jmp
test
icebp
sub
adc
adc
pop
pop
mov
cwde
add
pop
pusha
jb
data16
cmp
pop
xchg
sub
int
push
push
outs
xlat
or
cmp
pop
mov
mov
out
cmp
xor
mov
imul
inc
or
pop
pop
loope
mov
jmp
and
rcl
dec
sbb
pushf
push
inc
mov
jb
add
mov
cld
sbb
push
popa
dec
dec
dec
out
test
fsubr
mov
xchg
jnp
and
sub
call
hlt
shr
dec
lea
daa
scas
and
jb
lock
test
dec
xchg
mov
mov
hlt
ror
mov
inc
pmullw
mov
rcr
stc
inc
cmp
inc
(bad)
minps
mov
and
test
fsubr
dec
inc
adc
nop
shr
mov
push
jmp
xor
mov
ds
sbb
or
sbb
jno
dec
xor
inc
adc
stos
inc
mov
inc
inc
ss
cmp
mov
xchg
into
pop
pop
jle
repz
daa
movs
lods
les
icebp
add
adc
and
and
dec
jnp
inc
cmps
mov
push
lods
popf
test
dec
(bad)
cmc
repnz
dec
aad
cdq
mov
test
xor
cmp
fist
call
inc
out
sub
fisubr
xlat
out
jae
je
add
retf
add
mov
jne
stos
fs
dec
retf
mov
sub
add
sbb
retf
xor
adc
push
inc
loop
mov
stc
and
adc
cs
stos
jmp
out
mov
push
outs
fst
push
push
dec
lds
icebp
fwait
vmread
mov
sub
daa
(bad)
jns
add
out
lds
dec
pop
test
sti
fstp
cmp
pop
xchg
mov
(bad)
cmp
mov
mov
pop
and
std
sub
stos
cmc
sub
sbb
adc
loop
int
push
and
sbb
pop
clc
xchg
(bad)
cmps
pop
(bad)
scas
push
ja
mov
xchg
aad
stos
test
mov
add
and
dec
xchg
push
cwde
iret
push
push
jle
mov
je
mov
aaa
pop
in
das
xchg
and
sar
fwait
out
jmp
enter
movs
loop
movs
test
sbb
jbe
ins
call
inc
mov
imul
pop
or
repnz
xchg
xchg
gs
into
sub
nop
movs
sub
jge
aam
xor
fwait
jmp
pop
and
push
dec
dec
pop
pop
mov
sub
icebp
sbb
xor
dec
int3
int
cmp
push
cmps
movs
pop
jecxz
cmp
fstp
fs
loope
lods
retf
shl
jp
mov
inc
ret
js
pop
repz
or
popa
sbb
xchg
xchg
pop
xchg
movs
pusha
cmp
lods
das
(bad)
iret
retf
dec
xchg
xor
jbe
retf
inc
jp
pop
(bad)
mov
rcr
add
mov
mov
inc
mov
stos
and
push
rcr
add
mov
ret
cwde
dec
inc
cld
rol
jae
sbb
mov
adc
adc
pop
(bad)
adc
movs
(bad)
jmp
inc
mov
add
xor
xchg
or
jne
stc
stos
in
and
inc
adc
retf
lods
pop
in
mov
xchg
jmp
cmp
sub
cs
es
jmp
adc
push
and
pushw
mov
lock
and
rcl
call
xor
and
jnp
dec
bound
and
call
pusha
mov
cmps
outs
scas
ins
popf
mov
dec
cmp
xlat
mov
sbb
jl
rcr
cmc
mov
(bad)
loopne
out
cmp
xchg
clc
xlat
fistp
imul
fcomp
dec
out
push
ret
add
push
ret
stc
mov
stc
mov
cmp
dec
add
jge
sbb
shl
ins
imul
xlat
test
and
jge
fldenv
movs
jne
popa
sbb
fs
and
jg
add
xchg
daa
lds
lahf
adc
mov
push
pushf
outs
loopne
ins
lea
nop
pop
push
(bad)
pop
push
movs
mov
(bad)
pop
jle
daa
xchg
add
in
mov
mov
popf
mov
push
xor
jo
mov
out
out
xor
dec
mov
add
dec
xchg
movs
cmp
int3
cmc
je
jge
inc
icebp
movs
ror
addr16
or
sub
pushf
aas
xchg
sub
dec
jle
ret
adc
movs
test
mov
sbb
ret
adc
sti
ret
jo
cmp
push
cli
cmps
outs
(bad)
repz
js
inc
cmps
movs
mov
sbb
mov
cs
mov
bound
or
sub
(bad)
out
fmul
popa
call
popf
and
outs
sbb
mov
(bad)
ds
nop
(bad)
bound
mov
mov
cmp
fisttp
inc
fadd
push
mov
cwde
daa
cmp
dec
mov
out
in
sbb
cwde
and
iret
sti
mov
fisubr
cs
xchg
inc
mov
out
outs
fbld
and
call
mov
movs
je
mov
(bad)
pop
mov
pop
sub
(bad)
mov
and
or
movs
mov
pop
retf
pop
arpl
cmp
addr16
and
mov
lea
outs
inc
std
sbb
pop
std
lods
imul
cdq
popa
sbb
jno
fist
popa
sub
into
icebp
push
or
not
cmc
jg
lods
ret
pop
xor
scas
adc
sbb
(bad)
retf
push
push
pop
nop
adc
jl
int3
in
cmp
and
fwait
das
mov
add
repnz
fnstenv
push
scas
mov
int3
add
pop
in
push
inc
aas
xlat
(bad)
ds
fldpi
ja
jne
inc
sub
in
sub
les
mov
mov
and
repnz
arpl
add
es
stos
jb
mov
ins
js
movs
jl
fs
bnd
pop
push
inc
test
fwait
sub
pushf
inc
ror
push
xchg
in
mov
sub
outs
xchg
(bad)
call
inc
dec
repnz
dec
jge
repnz
sahf
xor
jl
jle
mov
push
je
stc
ja
jae
imul
sub
mov
xchg
fnsave
xchg
inc
cmps
sub
or
jno
stos
in
mov
jge
outs
and
shl
call
hlt
inc
popa
xor
(bad)
jl
add
pop
push
mov
dec
sahf
mov
cmps
mov
xor
bound
push
mov
punpckhdq
adc
push
inc
mov
mov
clc
test
mov
imul
push
fiadd
test
(bad)
dec
je
mov
sub
shl
(bad)
jmp
dec
mov
daa
enter
push
cdq
push
xchg
and
xor
sbb
les
adc
add
mov
xchg
xchg
retf
xchg
out
adc
or
sub
jecxz
inc
push
mov
add
out
jae
and
xchg
cmp
ds
(bad)
xlat
(bad)
arpl
mov
mov
push
mov
jne
xor
retf
lods
jae
pop
sub
fbstp
cmp
repnz
cmp
sub
rcl
mov
xor
dec
loopne
mov
mov
test
lock
clc
or
test
leave
push
std
shl
dec
jle
pop
int3
addr16
pop
jge
xchg
ret
retf
clc
pop
xor
lahf
ss
push
addr16
retf
xlat
fstp
jo
inc
cmp
xor
cmp
adc
(bad)
jge
in
lahf
pop
je
xchg
sbb
test
loop
xchg
loop
mov
js
push
mov
out
xor
daa
dec
int3
xchg
or
sub
sbb
jns
(bad)
mov
test
fwait
xchg
inc
mov
stc
xchg
ror
mov
inc
stos
nop
sti
add
and
push
shld
cwde
push
imul
dec
jl
mov
mov
aam
adc
outs
xchg
retf
pop
inc
(bad)
push
aad
arpl
imul
fcomp
sbb
jbe
or
jno
cmp
mov
inc
cdq
stos
repnz
pop
mov
pop
sub
push
inc
in
push
push
iret
scas
data16
and
inc
xchg
xchg
xor
fild
or
out
into
sbb
sub
loope
add
jne
dec
jbe
data16
mov
mov
cmps
mov
push
retf
inc
rol
std
movs
ficomp
out
rcl
faddp
mov
(bad)
mov
xchg
out
int
mov
push
adc
lods
retf
jnp
xchg
je
sub
ret
cmp
push
rcl
inc
jp
aad
sub
or
int3
sti
inc
jmp
loope
pop
imul
test
je
or
test
fcom
mov
push
daa
enter
scas
sbb
cmp
ror
jp
mov
mov
lahf
sahf
push
jg
int3
mov
mov
lock
adc
pop
movs
stos
xchg
rcl
push
les
inc
or
aas
jb
and
mov
push
imul
or
stos
cld
ret
xor
adc
or
mov
std
lods
xchg
scas
in
inc
mov
push
xor
jle
jae
popa
pop
push
and
rol
rcr
xor
in
imul
test
ss
loope
out
sbb
jp
push
loop
cmps
mov
fild
mov
jmp
fnstcw
ret
stc
jmp
push
in
popf
inc
fisttp
sbb
adc
add
mov
sbb
push
xchg
jecxz
inc
or
push
es
push
mov
int
test
jmp
cmp
cmp
jp
stos
test
sbb
push
stos
mov
mov
fmul
fistp
sbb
gs
in
mov
mov
cdq
adc
xlat
push
jmp
arpl
push
dec
sbb
fld
adc
push
in
(bad)
ins
sbb
loope
or
arpl
outs
scas
mov
mov
inc
imul
sar
mov
mov
mov
or
(bad)
in
jmp
ret
mov
xchg
dec
in
push
cli
test
mov
and
inc
hlt
retf
dec
out
jg
icebp
xchg
dec
cmp
pop
out
xor
fistp
cmp
xchg
jnp
repnz
neg
lds
sub
(bad)
pop
ret
jp
pop
ja
cmp
dec
or
test
xchg
and
xor
or
retf
cli
(bad)
jg
fcomip
mov
add
hlt
lahf
mov
pop
ds
mov
dec
mov
fstp
dec
neg
inc
movs
movs
sbb
js
daa
mov
call
(bad)
call
data16
adc
sub
cmp
test
daa
add
adc
sub
xchg
cmp
daa
add
mov
jmp
fs
cmp
push
or
inc
jmp
ffree
dec
fidivr
cmp
push
cld
sbb
aas
sub
mov
test
cmps
imul
test
and
dec
mov
jns
push
mov
mov
add
daa
aam
and
sbb
dec
(bad)
imul
ins
clc
repnz
sbb
das
xor
jns
adc
arpl
call
in
or
xchg
inc
test
and
mov
into
jno
mov
ror
dec
call
mov
mov
sub
stos
mov
pop
cli
movs
adc
(bad)
into
push
jno
adc
xchg
das
xchg
xchg
imul
mov
push
lahf
in
ds
xchg
pop
cmp
fs
test
fisttp
inc
sub
push
or
movs
movs
xchg
es
test
bound
and
push
call
cmp
fwait
retf
cmps
inc
cmp
inc
push
pop
scas
mov
mov
jb
fwait
test
push
push
out
add
jle
xchg
push
shl
jb
in
mov
sbb
cmps
sub
cmps
pop
shl
movs
addr16
rcl
aad
shl
jmp
mov
shl
outs
dec
aad
shl
mov
and
or
frstor
adc
ret
cmc
imul
or
inc
mov
adc
add
outs
(bad)
pop
cli
bound
pop
xchg
popa
dec
xor
xchg
icebp
cmps
jo
push
jns
cwde
add
pop
xchg
and
cli
inc
inc
dec
sbb
ins
adc
sub
ror
push
das
das
setnp
mov
and
shl
push
or
pop
adc
jmp
movs
loop
dec
outs
mov
push
scas
shl
jecxz
xor
and
icebp
cmp
xchg
test
add
movsx
cmps
lds
int3
aam
adc
out
push
jecxz
mov
inc
or
cdq
push
int3
dec
fnsave
xchg
rol
sub
add
jo
xor
jl
cmc
sbb
mov
aaa
bound
retf
xor
icebp
pushf
fstp
loopne
xor
mov
xchg
js
ret
and
xchg
test
sbb
push
jmp
xchg
jae
cli
or
fwait
ss
iret
sar
add
test
ret
mov
mov
imul
ror
cmps
inc
(bad)
pop
arpl
xor
ret
imul
gs
retf
mov
rcl
scas
jne
push
adc
inc
dec
sub
psrlq
push
sti
dec
add
mov
sahf
pusha
imul
retf
pop
adc
mov
xor
imul
enter
jmp
(bad)
shl
hlt
lea
mov
out
push
mov
mov
(bad)
or
xchg
dec
popa
or
cld
sbb
retf
jmp
jle
jne
data16
and
inc
cli
sbb
mov
lea
imul
js
dec
xchg
imul
lods
jge
jg
ja
xor
mov
dec
push
ret
dec
push
(bad)
aam
cmp
mov
jle
push
ja
mov
fbld
adc
in
inc
or
arpl
pop
mov
xchg
lods
out
mov
sbb
push
imul
and
(bad)
mov
and
sar
push
test
dec
(bad)
mov
jle
xchg
retf
push
sbb
push
sbb
mov
icebp
push
push
dec
dec
shr
sar
push
(bad)
jp
or
xlat
jnp
outs
or
mov
mov
lds
in
jmp
lock
mov
repnz
mov
sub
jb
xchg
movs
enter
sub
popa
fld
ins
fs
inc
lods
je
lea
pop
jns
movs
pop
fisubr
call
(bad)
dec
dec
lea
ffree
imul
sub
mov
das
shl
ja
es
dec
mov
pop
dec
push
je
or
jle
sbb
sbb
sbb
jmp
jnp
xor
pop
movs
adc
push
out
test
cdq
in
xor
arpl
sti
fnstcw
cmp
pop
push
ret
push
into
div
push
mov
dec
iret
pop
inc
push
retf
add
nop
loopne
ins
sti
mov
mov
stc
cli
test
rcl
(bad)
imul
mov
jne
xchg
jge
aaa
jp
pop
add
dec
popf
sbb
lods
push
mov
test
add
fdiv
gs
jns
jno
mov
jge
aaa
inc
xchg
push
xor
or
pop
pop
push
stc
jge
push
jp
jl
test
(bad)
cmp
mov
cmp
movs
mov
out
sub
sahf
out
ins
push
div
repnz
clc
out
vpmullw
ror
pop
adc
add
jp
retf
ds
mov
stos
outs
push
scas
cwde
push
lds
pop
fwait
stos
aas
imul
mov
inc
std
sbb
push
xor
enter
ja
pop
leave
ret
ret
sbb
jno
sbb
int3
xor
int3
cmp
push
in
mov
dec
mov
icebp
gs
dec
lea
pop
jnp
adc
outs
cmp
call
xor
mov
aad
jmp
and
and
xlat
mov
daa
jecxz
mov
stos
(bad)
mov
aaa
and
xchg
push
(bad)
into
vphsubwd
aaa
jmp
and
jb
xchg
in
push
sar
or
dec
fsub
scas
and
sbb
shr
shr
xor
mov
and
into
sub
add
mov
push
call
jmp
mov
mov
mov
or
lock
arpl
test
sub
dec
enter
scas
push
outs
dec
mov
cli
xor
jge
inc
mov
ror
(bad)
jbe
adc
xchg
xchg
xchg
movs
cmps
xchg
mov
ja
push
xchg
inc
out
ret
pop
xchg
mov
lock
or
(bad)
sub
ds
dec
cmp
xchg
sti
daa
mov
neg
sub
mov
fidivr
jno
ret
mov
jo
pusha
mov
sbb
in
int3
repz
push
push
dec
add
push
cld
pushf
or
adc
pop
cmps
inc
cld
ss
or
mov
aas
mov
movs
fiadd
out
cmps
fbld
or
or
sbb
or
jns
loope
bound
sbb
or
mov
fimul
std
neg
xchg
sub
pusha
stc
sub
push
push
ret
xor
mov
rcr
cwde
mov
pop
or
push
mov
pop
ret
sbb
das
out
jmp
movs
jnp
dec
pop
jmp
pop
adc
in
mov
not
or
sbb
jg
popa
jbe
call
mov
xchg
lods
mov
movs
fstp
sahf
sar
test
mov
popf
cmp
push
mov
mov
push
sub
mov
mov
and
or
inc
push
mov
retf
loop
jge
nop
add
xchg
shl
imul
ret
in
pop
inc
daa
mov
std
add
or
fisttp
cmps
pop
xor
fnclex
dec
inc
(bad)
jmp
test
xchg
jns
xchg
xchg
and
mov
dec
aas
pop
mov
xor
int3
sub
sub
sub
shl
mov
ret
xor
push
jbe
movs
mov
aam
and
or
mov
dec
pop
into
psrld
jmp
dec
in
or
dec
lahf
and
aas
mov
xchg
shl
sbb
or
imul
push
mov
pop
fcomip
cmp
mov
xchg
xor
hlt
aaa
or
test
jne
test
push
xor
dec
dec
push
gs
mov
and
mov
jno
pop
daa
push
popa
outs
add
pop
pop
fld
mov
jb
mov
idiv
retf
cmp
dec
lods
scas
sub
(bad)
xchg
ins
sub
mov
jne
sti
push
(bad)
add
sub
sti
(bad)
cwde
scas
push
outs
call
push
mov
and
shl
adc
sbb
cs
pop
(bad)
push
and
and
imul
dec
out
js
std
js
adc
mov
lods
and
push
loop
sub
(bad)
fdiv
pop
sub
sbb
and
xchg
seto
(bad)
pushf
loopne
ror
pop
sub
or
daa
inc
inc
push
(bad)
scas
sbb
or
jp
push
iret
dec
into
xor
jne
inc
pop
xor
mov
cmp
jecxz
pushw
test
cmp
fistp
mov
bound
jecxz
xchg
pop
add
in
call
and
push
fistp
pop
dec
leave
jl
mov
shl
test
movs
fs
adc
inc
cmp
out
outs
add
std
imul
mov
retf
mov
mov
xor
and
and
xchg
xor
adc
cmp
cs
xlat
mov
pop
ror
stos
in
popa
inc
cmp
jno
adc
in
in
movs
push
outs
sbb
jle
pop
(bad)
lock
inc
add
clc
sar
sub
pop
ss
fcom
sub
sar
loopne
push
add
and
int3
in
push
retf
jle
aam
cmc
mov
xchg
dec
std
inc
adc
call
(bad)
ja
out
rcr
imul
in
rcl
mov
cdq
imul
pop
sbb
mov
push
inc
mov
data16
lods
imul
clc
sbb
aam
scas
je
mov
cmps
iret
int3
push
mov
into
iret
cdq
(bad)
fstp
sub
imul
push
(bad)
push
xchg
pop
hlt
jp
dec
fist
js
mov
pop
mov
add
rcr
jmp
js
outs
out
add
jecxz
mov
mov
cmp
sbb
in
jge
push
jnp
adc
packuswb
cs
mul
ins
(bad)
aam
sbb
addr16
lahf
mov
call
dec
iret
(bad)
mov
inc
nop
mov
dec
je
jns
xchg
test
pop
xor
push
add
div
lea
inc
and
lea
or
stc
xor
in
mov
mov
sar
jle
test
aas
cmp
in
add
mov
lea
out
addr16
(bad)
cmp
jmp
xchg
inc
out
mov
retf
xor
ins
push
inc
xor
xchg
aas
iret
inc
jge
retf
outs
jp
mov
or
mov
xor
jae
movs
inc
sbb
jb
push
dec
das
push
movs
and
into
aaa
add
jnp
lds
mov
or
cdq
scas
fcom
pop
add
sub
rcr
dec
bound
bound
ret
js
test
xchg
jae
mov
ss
bound
not
xchg
mov
add
sub
ds
xchg
fcomi
in
les
mov
les
lods
ret
mov
aas
dec
(bad)
nop
sbb
ja
cmp
mul
mov
aam
aam
cmp
adc
inc
add
cmp
clc
mov
sbb
jne
mov
mov
push
out
(bad)
jmp
pop
mov
cmp
inc
loop
xor
or
cmp
adc
cmps
gs
scas
jg
mov
cwde
pop
pop
pop
out
mov
xor
call
inc
loope
xchg
int
add
out
pop
mov
and
leave
xor
test
fsubrp
in
aam
xor
mov
hlt
push
int
sahf
js
pop
xchg
jne
ja
clc
loopne
xor
and
and
cmp
fwait
mov
xlat
call
retf
shr
icebp
mov
cmc
mov
xchg
test
add
fwait
add
jle
mov
shr
sub
(bad)
xor
das
leave
out
sbb
sbb
inc
xor
dec
outs
outs
pop
mov
jp
fst
mov
cs
mov
sub
icebp
hlt
dec
inc
jnp
(bad)
push
add
sbb
adc
bound
in
iret
or
xor
push
adc
inc
clc
retf
and
out
movs
retf
popa
mov
retf
enter
xor
int
punpcklbw
xor
clc
dec
call
jl
gs
dec
cli
das
stos
adc
xlat
sbb
add
xchg
sub
fimul
pop
jo
adc
fist
or
xchg
in
enter
ins
or
iret
inc
jmp
add
jbe
retf
cmps
out
ds
pop
(bad)
mov
mov
mov
dec
ret
test
hlt
mov
jb
adc
mov
shr
push
adc
cmc
dec
mov
call
push
mov
push
shr
push
sub
ja
jb
ins
jae
xchg
jge
mov
cmc
loope
mov
xchg
xor
jne
mov
lods
retf
and
lds
push
scas
pop
sub
push
mov
mov
and
mov
ja
js
pop
fcom
and
out
pushf
xchg
dec
push
push
mov
pop
es
cmps
jnp
clc
adc
and
pop
xchg
xor
mov
ins
push
jmp
dec
cli
xchg
push
xchg
cdq
fisub
pop
pop
xchg
popa
or
cmp
sub
jmp
pop
mov
mov
or
lea
cmps
jecxz
rcr
aam
ins
cmp
xchg
sbb
out
adc
movs
pushf
add
sub
xor
pop
pusha
repz
mov
dec
call
push
pusha
sub
imul
mov
outs
gs
jb
ss
dec
jne
mov
loop
dec
pop
mov
call
or
pop
(bad)
add
jmp
test
popf
arpl
adc
mov
mov
sbb
in
xchg
mov
push
pop
jle
enter
push
imul
jle
mov
jl
xchg
test
and
xor
inc
xchg
sbb
test
or
pop
push
pop
or
cmp
shr
push
es
pop
in
mov
xor
out
rol
inc
test
mov
sub
dec
call
xlat
into
(bad)
scas
test
add
jno
and
mov
stc
cs
inc
sti
stos
cmps
in
xor
mov
lods
cwde
popf
pop
adc
cmp
lahf
bound
push
dec
fist
out
sub
add
adc
out
inc
jne
jp
enter
push
cld
lock
push
add
dec
call
xlat
mov
aas
pushf
xchg
push
xchg
stos
stos
ret
hlt
pop
cli
int3
(bad)
push
mov
jae
push
xor
mov
shr
fild
sub
je
aas
xor
fstp
mov
rcr
mov
xchg
fmul
push
cld
rol
sub
jnp
fild
loop
push
out
(bad)
push
add
jns
ins
fild
sub
mov
push
(bad)
fwait
out
cld
(bad)
fild
xchg
mov
mov
push
retf
mov
adc
push
pop
jo
test
je
mov
xchg
or
ss
mov
pop
(bad)
(bad)
retf
inc
jmp
mov
imul
and
and
inc
jecxz
jl
mov
les
cmp
mov
sub
das
jno
sub
pop
xchg
shl
jp
cli
pop
push
clc
lea
imul
sti
in
fadd
arpl
shl
pop
pop
std
cmc
test
sbb
jae
daa
addr16
push
cdq
inc
loop
xchg
aam
aam
sbb
retf
in
and
inc
inc
and
cmp
xor
pop
icebp
mov
and
jle
into
push
mov
ss
fld
cmp
or
xchg
add
data16
pop
and
mov
sub
repz
and
pop
mov
mov
icebp
les
sbb
jecxz
or
(bad)
pop
imul
push
popa
enter
lock
or
fisub
les
push
jmp
jo
sbb
gs
pop
pop
rcr
mov
jo
test
xor
push
aaa
aad
enter
aam
add
lock
cmp
aad
je
in
cmp
cmp
test
lea
or
loop
rcl
repnz
pop
aad
arpl
mov
add
test
mov
addr16
fs
stc
ins
jno
cli
push
call
sahf
leave
test
xchg
mov
int3
inc
mov
or
push
xor
cmp
and
movs
icebp
js
ss
arpl
mov
jge
mov
stc
mov
push
xchg
mov
(bad)
gs
loopne
movs
xchg
sbb
loopne
jge
jp
mov
sbb
inc
add
add
retf
fcom
jecxz
inc
pop
sbb
jg
inc
adc
jg
pop
push
xchg
xchg
xchg
add
js
push
xadd
or
outs
jmp
loop
jle
cli
fiadd
jmp
sbb
mov
iret
xchg
pop
mov
fs
shr
cmp
dec
call
mov
imul
xor
shl
mov
jb
fisub
add
dec
jae
jbe
aam
push
dec
xchg
sbb
dec
inc
loopne
je
push
push
aas
(bad)
outs
mov
(bad)
pop
nop
cs
xor
pop
ret
pop
sub
add
inc
jecxz
jno
je
pop
mov
jmp
mov
cmps
mov
pop
jmp
nop
ins
cmp
(bad)
ret
outs
or
dec
and
dec
cmp
push
inc
dec
outs
fdiv
inc
xchg
int3
pop
mov
ficomp
mov
inc
ret
mov
inc
mov
dec
(bad)
sub
xchg
leave
mov
xchg
lods
lods
repz
retf
in
xchg
or
js
pop
push
mov
adc
xor
movs
cwde
fbstp
mov
xor
push
add
pop
cdq
js
popa
popf
cmps
loopne
adc
retf
fidivr
pusha
into
jmp
and
or
sbb
xchg
(bad)
dec
inc
mov
sbb
push
aam
mov
scas
inc
retf
add
mov
push
xor
adc
ror
(bad)
shr
pop
sahf
repz
push
mov
mov
xor
nop
xchg
(bad)
aam
enter
loopne
xor
fwait
sahf
sbb
jmp
(bad)
movs
add
mov
xchg
fcom
pop
mov
mov
push
xchg
idiv
push
ins
sbb
loope
lods
movs
data16
dec
imul
int
jp
jbe
push
pop
shl
push
cld
or
or
lock
jmp
ins
movs
xor
mov
add
test
scas
cdq
loop
push
pop
mov
xor
xor
stc
bound
stc
fisttp
ret
dec
or
int3
push
pop
push
mov
das
mov
cli
mov
mov
cmc
jp
lods
mov
cmp
xchg
jne
ds
popa
lds
call
or
or
mov
sbb
xor
(bad)
movs
(bad)
(bad)
sub
push
xchg
mov
sahf
dec
inc
test
push
sub
sbb
dec
(bad)
loope
test
iret
adc
addr16
into
xchg
addr16
inc
sub
sub
arpl
jae
mov
pop
movs
jmp
xchg
lds
lahf
dec
jo
cmp
pop
(bad)
jbe
addr16
push
shl
js
mov
aad
push
fwait
and
retf
or
div
addr16
je
cwde
repnz
ins
ds
and
push
ins
daa
aas
(bad)
mov
jne
sub
adc
pop
fimul
dec
repz
(bad)
popa
call
cmps
and
sti
icebp
in
mov
cmps
mov
mov
push
outs
ficom
pop
dec
mov
xchg
repnz
pop
sbb
out
out
imul
iret
call
test
pusha
sub
outs
push
test
lock
pop
inc
aas
xchg
loop
fadd
jnp
stc
pop
leave
cdq
xchg
dec
int3
(bad)
jmp
and
cmp
push
rcr
push
mov
mov
imul
int3
fcomp
push
dec
dec
fbld
ja
xchg
repnz
inc
dec
and
adc
push
and
adc
jmp
pop
pop
dec
jle
ror
test
repnz
shl
rcl
mov
mov
fldcw
je
push
sub
ja
cs
add
inc
pop
mul
sbb
xchg
clc
push
and
mov
ret
sti
cmp
out
lock
lds
xor
mov
mov
les
jp
aaa
jns
add
xchg
out
add
sub
pop
pushf
xchg
inc
or
jne
mov
xor
mov
mov
arpl
(bad)
sub
out
xchg
xchg
push
add
(bad)
rcl
outs
xor
sub
test
jne
or
movs
scas
sbb
(bad)
das
stos
adc
mov
push
clc
dec
dec
mov
dec
in
and
mov
mov
cmp
and
in
sbb
sbb
mov
jle
pop
cmc
sar
mov
sbb
fisubr
bound
pop
push
cmp
std
mov
icebp
add
or
mov
xor
out
dec
fadd
es
adc
inc
(bad)
jl
pop
sbb
dec
jge
jne
pop
mov
inc
mov
push
xor
sub
xor
sub
pop
add
mov
ins
out
in
xlat
js
inc
xor
and
mov
lds
mov
inc
cmp
pop
js
mov
mov
mov
loopne
sub
dec
push
push
or
test
xor
sub
push
xchg
das
leave
test
sub
test
jle
and
xchg
xor
cmc
push
addr16
sub
adc
push
and
and
aaa
mov
sub
xchg
jmp
sti
int
popf
or
mov
in
mov
ss
scas
or
movs
pop
rcr
sbb
imul
cmp
add
and
mov
mov
inc
scas
pusha
fdiv
in
mov
add
ins
mov
xchg
lahf
cmps
arpl
gs
dec
or
xchg
cmp
push
inc
inc
mov
mov
xchg
loop
mov
pop
sbb
dec
int
xor
pop
mov
shl
les
fcmove
dec
pop
push
fwait
mov
adc
mov
mov
daa
pop
(bad)
push
mov
scas
pop
test
push
mov
icebp
and
xor
std
and
inc
ins
adc
mov
test
cld
sbb
mov
sub
mov
push
mov
aad
pop
jae
imul
and
aas
sub
pop
or
in
and
(bad)
(bad)
sbb
dec
lock
xchg
push
cld
fstp
in
jns
add
mov
imul
fst
repnz
mov
call
add
push
lods
push
lahf
retf
enter
stos
mov
rcr
fiadd
pop
data16
sbb
lods
jb
scas
cmp
or
dec
xchg
xor
icebp
loop
mov
lods
add
mov
repz
aas
xor
cdq
fdivp
xor
and
jge
push
test
or
jnp
push
aad
jg
aas
repnz
mov
jb
lock
in
es
mov
retf
cmp
or
lds
xchg
and
call
and
(bad)
das
outs
scas
and
push
sbb
icebp
dec
push
mov
stos
mov
sahf
lock
sub
xor
jne
mov
mov
push
inc
or
sti
mov
dec
rcr
nop
in
bound
icebp
std
lock
cmp
fcomp
mov
daa
xchg
js
aaa
jl
loope
mov
pop
(bad)
sbb
jb
dec
out
adc
sub
test
movs
sub
xor
push
push
pop
cmp
(bad)
sbb
inc
ja
dec
mov
push
jbe
iret
xchg
movs
jo
out
jp
pushf
icebp
add
push
sbb
pop
xchg
(bad)
gs
add
dec
rol
rol
addr16
jge
or
out
adc
ret
daa
repnz
in
cmp
xchg
fs
data16
cmps
mov
jle
mov
fist
fsubr
into
cmp
pop
cmp
stc
jb
mov
arpl
sbb
mov
and
mov
sbb
iret
cmp
push
scas
and
xor
cmc
loop
push
outs
mov
or
in
jbe
xor
dec
sbb
pop
aaa
std
push
adc
dec
xlat
sbb
and
xor
shl
js
out
fldcw
cli
push
jb
mov
popa
jl
dec
inc
mov
push
sbb
mov
dec
inc
add
je
fsubr
cmp
or
(bad)
dec
inc
call
cmp
push
mov
lods
xchg
xchg
add
cmp
dec
ret
shl
fldcw
xchg
arpl
push
sbb
push
jmp
in
xor
push
das
inc
mov
xchg
sbb
inc
adc
sub
dec
and
test
jae
add
sub
sub
sbb
movs
adc
inc
push
shl
push
adc
push
push
mov
int3
inc
gs
je
in
data16
dec
ss
mov
sti
pop
shr
mov
inc
(bad)
outs
xchg
dec
xor
into
(bad)
mov
scas
xchg
push
into
jo
xchg
popf
in
xor
sahf
mov
clc
stos
push
mov
add
jbe
adc
xor
cmp
addr16
ret
xor
sub
ret
jp
stos
mov
mov
dec
add
jbe
mov
dec
(bad)
pop
xor
aas
cli
dec
dec
cmps
jns
push
(bad)
imul
sbb
add
jg
sub
jl
out
out
jg
nop
retf
fmul
xchg
gs
out
fwait
jne
adc
xchg
sbb
add
mov
mov
xchg
daa
mov
mov
fs
enter
aam
loopne
test
jecxz
movs
imul
popf
mov
test
or
movs
xchg
mov
xchg
loop
loope
and
or
(bad)
sub
adc
sbb
mov
mov
fs
sbb
mov
call
or
xchg
retf
sbb
jmp
cmc
into
fild
dec
or
xlat
xchg
pop
and
(bad)
loop
retf
aad
shr
inc
mov
fsubr
gs
adc
hlt
das
loop
ret
mov
inc
pop
mov
jno
pushf
jp
and
rcl
mov
mov
fld
jg
mov
pop
inc
ss
cld
rcl
in
add
mov
or
jnp
gs
push
jo
repnz
xor
mov
test
push
and
jecxz
sbb
out
bound
pop
sub
xchg
jl
xor
mov
fist
push
lods
cmps
xchg
cs
dec
jae
adc
out
mov
in
outs
dec
mov
addr16
or
mov
jae
push
icebp
mov
std
ss
or
pop
aam
mov
adc
fwait
scas
aad
jge
mov
sub
addr16
xor
adc
inc
out
sbb
add
mov
movs
add
in
lock
and
pop
inc
xchg
sub
fld
mov
ins
adc
sbb
in
dec
sub
cs
jnp
scas
fwait
cmp
mov
lds
inc
inc
adc
mov
fld
adc
mov
bound
inc
mov
int3
(bad)
mov
jnp
retf
dec
cwde
or
dec
ret
addr16
mov
fistp
jo
movs
cs
test
ret
cmps
mov
lahf
les
jge
sub
push
sbb
icebp
pop
dec
(bad)
mov
test
push
inc
hlt
sub
cmp
sahf
push
push
lods
xor
and
in
not
mov
not
clc
sub
pop
int3
ins
dec
mov
dec
out
xchg
addr16
add
mov
bound
inc
and
jnp
movs
xor
pop
cmp
test
scas
inc
sbb
dec
les
mov
fdiv
aam
jbe
jmp
mov
gs
sbb
out
or
stc
repz
inc
cs
ins
xor
sub
or
mov
imul
pop
pop
sbb
jg
pop
push
fcom
(bad)
xor
cmp
je
cmc
mov
js
lock
mov
lock
mov
xchg
js
dec
(bad)
call
sbb
sub
aad
mov
adc
imul
dec
in
xor
xchg
xchg
inc
xlat
cmp
jg
movs
(bad)
adc
in
xor
cmp
test
(bad)
aad
sub
jns
mov
ins
ja
fild
lea
sub
rcl
inc
repz
fdiv
xor
push
adc
enter
outs
dec
push
dec
or
test
mov
inc
and
in
call
pop
outs
pop
xor
test
sar
xchg
fcmovnb
stc
mov
push
jecxz
les
mov
mov
sub
adc
clc
cmps
mov
imul
scas
inc
pop
outs
adc
jnp
mov
pop
adc
in
stc
fcomp
nop
jne
test
ins
std
and
mov
std
cld
add
jmp
pop
lea
xchg
dec
out
xor
jae
(bad)
jecxz
sbb
cmp
popa
loope
or
adc
and
inc
fistp
daa
stc
sub
stos
push
pop
add
mov
mov
and
daa
sbb
and
stos
pop
jge
rcr
outs
test
imul
mov
or
pushf
pop
(bad)
clc
(bad)
adc
imul
inc
mov
cmp
(bad)
(bad)
ds
pop
ins
sbb
pop
inc
or
inc
rcl
stc
(bad)
inc
pop
xchg
call
cmp
pop
cdq
(bad)
rcr
xchg
fst
(bad)
dec
jb
jbe
push
bound
ja
shl
cmp
dec
les
pop
jo
call
js
fmul
inc
xchg
mul
imul
pop
mov
xchg
inc
mov
aas
mov
js
js
xchg
cwde
jns
jno
adc
push
mov
push
sbb
or
mov
cmc
mov
enter
mov
xchg
pusha
mov
stc
cmp
xchg
scas
mov
imul
xor
icebp
cmps
mov
push
add
xchg
in
je
data16
mov
in
or
in
mov
or
les
xor
push
xor
aam
imul
cld
cmp
movs
xchg
bound
jmp
or
mov
int
add
and
test
sahf
inc
sub
mov
mov
xchg
fwait
add
mov
fsub
mov
xchg
mov
fisubr
test
jg
and
cld
setae
cli
in
push
test
lds
(bad)
mov
jp
test
loop
pusha
js
pop
xchg
clc
adc
push
jg
or
fiadd
pop
xor
xchg
xchg
retf
add
ja
inc
enter
pushf
jl
xchg
mov
adc
pusha
xor
xor
sti
pop
pop
jae
in
pop
xchg
dec
adc
enter
sbb
rol
sti
test
shl
out
dec
xchg
scas
add
test
cmps
outs
dec
and
push
das
mov
push
xchg
sbb
lahf
sub
xor
sbb
or
out
xchg
dec
dec
ins
mov
push
push
mov
fldenv
rcr
push
xor
sar
fs
mul
push
stos
movs
adc
jo
outs
xchg
sbb
sti
sub
fbld
mov
ficom
sub
mov
fldcw
bound
imul
es
xchg
ja
neg
(bad)
(bad)
hlt
mov
pop
ficomp
mov
mov
sub
imul
addr16
dec
and
fist
sub
cmp
mov
mov
or
adc
mov
xchg
push
inc
nop
push
mov
mov
or
xor
lods
mov
cmp
sbb
add
and
data16
adc
(bad)
jle
push
aas
mov
xchg
ds
adc
leave
push
cmp
loope
xchg
(bad)
xlat
outs
pop
push
add
pop
je
push
cs
ret
imul
add
dec
mov
jl
or
lds
cdq
mov
es
sbb
and
mov
xlat
shl
add
fnstenv
push
add
gs
(bad)
and
cmp
data16
neg
mov
pop
or
mov
pavgw
sub
push
xchg
ja
repz
daa
je
mov
push
or
es
fwait
lahf
xchg
pop
push
fnstsw
and
loop
ins
push
push
ja
mov
aad
fcom
push
test
jmp
(bad)
sbb
mov
mov
stos
xchg
inc
sbb
clc
ds
cmp
inc
add
fcmovu
cmp
out
pop
jg
imul
mov
mov
mov
mov
(bad)
and
dec
lea
aam
lods
sbb
test
and
dec
sahf
addps
sti
int3
jle
idiv
pushf
inc
mov
call
pop
out
fwait
test
mov
mov
icebp
and
push
ror
repnz
mov
push
aas
fdivr
in
inc
and
pop
sbb
shr
cli
mov
ss
and
fimul
sbb
inc
sbb
xchg
pop
adc
jp
stos
icebp
test
out
xor
dec
int
rol
add
push
push
imul
lahf
in
js
dec
cli
lahf
or
div
clc
sub
jge
add
repz
inc
cmp
add
and
sbb
nop
sub
xor
xor
arpl
leave
(bad)
clc
dec
arpl
xchg
dec
lods
gs
cmps
pop
xchg
sub
jns
cmp
add
dec
loop
call
jmp
aas
push
cs
fbstp
mov
pusha
mov
jecxz
ret
call
sbb
(bad)
cmps
sub
push
cmps
xlat
cmp
mov
sbb
aad
nop
mov
and
adc
push
ss
pop
scas
retf
xchg
xor
loop
test
mov
dec
lock
outs
push
mov
push
jbe
mov
add
clc
jl
pushf
jo
xor
test
imul
outs
test
jnp
sbb
ficom
adc
push
sub
in
inc
push
mov
inc
addr16
div
add
inc
and
xor
daa
ret
enter
xor
test
daa
or
test
shl
push
retf
adc
fcomp
mov
aad
adc
cmp
out
and
jge
cmp
cmp
jbe
leave
jg
jmp
test
arpl
push
in
daa
jecxz
jns
add
das
leave
aam
push
sbb
push
imul
jnp
mov
pop
push
sub
int
or
or
xchg
or
pop
popf
dec
jns
jnp
test
sbb
push
pop
sar
bound
sbb
inc
sub
fisubr
cmp
shr
das
inc
mov
adc
movs
adc
xchg
and
xchg
or
jecxz
int
outs
lods
fimul
call
mov
repnz
sub
fs
cmp
jle
retf
push
sub
or
div
or
cmc
shl
adc
aas
mov
cmps
adc
outs
daa
ret
adc
jl
repnz
scas
pusha
pop
retf
xor
popa
loop
xchg
in
jne
cmc
shr
xor
dec
xor
jmp
adc
add
push
jge
push
xor
(bad)
scas
jle
pop
or
out
test
lea
pop
push
xor
lods
xchg
push
das
cmovle
test
mov
push
rcr
or
jnp
(bad)
xor
or
jmp
ud1
cmps
inc
cmp
jecxz
mov
mov
jns
mov
mov
jp
push
push
sbb
and
jae
in
in
lods
imul
jbe
ret
push
call
fdiv
sub
sbb
xor
jecxz
arpl
(bad)
cmp
jno
(bad)
mov
enter
and
or
not
scas
dec
xlat
and
jne
xor
inc
sub
fwait
and
pusha
add
add
push
loope
stos
es
dec
dec
push
mov
out
aas
outs
jge
cmp
cmp
push
sar
xor
inc
fiadd
mov
jo
in
adc
inc
jl
test
fcomp
repz
loope
jae
pop
cli
xchg
jne
pop
xor
stos
add
or
out
and
jns
xchg
add
scas
inc
pusha
popf
in
jecxz
or
push
sbb
mov
jmp
pop
dec
fisub
movs
mov
mov
pop
adc
arpl
dec
aaa
hlt
int
add
xor
jmp
cmps
adc
retf
dec
lds
inc
sar
sbb
pop
and
popa
pusha
add
mov
sub
add
sahf
and
and
xlat
mov
pop
call
ds
xor
push
bound
mov
out
push
(bad)
lahf
in
or
loopne
aad
and
clc
shr
pop
or
mov
div
into
(bad)
(bad)
aaa
pop
in
call
push
outs
mov
dec
das
mov
xor
mov
in
nop
add
and
ret
movs
xchg
aaa
movs
jae
inc
push
shl
or
xchg
xchg
or
or
jmp
add
ror
sbb
call
pop
cwde
inc
daa
inc
xor
cmc
pop
mov
xor
ins
and
mov
cmp
test
push
sub
add
int3
lds
movs
xor
into
inc
mov
jmp
mov
enter
pop
cmc
sub
mov
stc
push
mov
cli
cmps
jecxz
in
pop
scas
dec
inc
push
dec
and
mov
mov
mov
sar
xchg
(bad)
jb
out
push
jns
lea
and
ficom
and
imul
ficomp
xlat
jne
push
popf
mov
pop
in
mov
jge
es
cmps
daa
mov
sti
adc
xchg
into
shl
fidivr
aad
add
out
cli
dec
(bad)
fcom
adc
jmp
mov
fidiv
hlt
push
xor
xor
in
popf
cmp
aas
in
and
xor
push
sbb
sub
fs
push
arpl
pop
shl
movs
popa
jo
sti
mov
jl
sbb
mov
xchg
ror
lods
sbb
add
add
adc
movs
mov
call
pusha
cmps
xor
sub
popf
popf
retf
das
dec
cmp
fcmove
mov
jbe
(bad)
hlt
adc
cmp
inc
sbb
(bad)
(bad)
data16
into
lds
daa
adc
pop
cmp
outs
loopne
xchg
sub
and
loope
xchg
and
adc
rol
cmps
cmp
dec
in
pop
repnz
or
arpl
daa
inc
xchg
push
xchg
inc
mov
lahf
scas
test
pop
cmp
out
dec
push
mov
or
test
inc
scas
xchg
sub
in
arpl
mov
shl
sbb
dec
jmp
inc
aas
xchg
sub
sbb
mov
scas
or
adc
push
add
outs
jmp
xor
pop
inc
push
in
pop
jl
inc
xor
pop
dec
into
inc
mov
sub
mov
push
push
and
mov
inc
or
sbb
add
retf
call
stos
xchg
imul
or
retf
pop
adc
add
dec
int
push
daa
ret
add
or
lock
pop
add
cmps
xor
nop
rol
leave
aas
inc
dec
cld
imul
int
add
xlat
stos
stc
pop
and
jmp
cmp
in
sbb
cmp
jnp
cdq
push
cmc
mov
xchg
outs
push
jmp
pop
shr
(bad)
icebp
mul
clc
xor
jl
push
add
cdq
add
sti
test
fwait
lock
outs
out
xor
ss
repz
cmp
int
sbb
and
pop
cmp
ror
faddp
mov
pop
add
adc
shl
fwait
cld
int3
jae
aas
mov
dec
cmp
pop
xchg
dec
out
fcomi
fdivr
sub
mov
sbb
jnp
movs
(bad)
and
pushf
xchg
xor
es
inc
push
scas
push
data16
aaa
pop
cmp
cdq
fisttp
inc
xchg
sbb
cmp
mov
stos
sub
fs
sub
adc
xor
xchg
(bad)
test
repz
dec
pop
cdq
pop
cld
cmp
mov
add
xchg
scas
(bad)
cmc
cmp
sbb
mov
jle
fstp
xor
add
fisttp
xor
mov
dec
add
inc
imul
inc
inc
cmp
fdiv
out
xor
ds
or
iret
cld
dec
imul
and
outs
repz
imul
cdq
mov
aaa
or
or
(bad)
aam
push
adc
cs
enter
div
scas
addr16
push
xchg
pop
jmp
cld
enter
rcr
outs
add
push
and
jbe
adc
icebp
test
jno
mov
push
jle
rol
mov
jl
cmp
out
(bad)
cdq
mov
push
pusha
dec
mov
lods
jnp
xor
and
adc
mov
dec
movs
or
sub
adc
test
cmp
call
test
and
stos
jb
nop
sbb
ret
pop
div
or
cmp
dec
repz
jb
das
shr
jg
test
pop
bound
push
jge
dec
out
mov
call
cld
pop
mov
clc
or
add
inc
xchg
push
push
pop
dec
or
fwait
or
jp
loopne
push
pop
scas
(bad)
jno
mov
push
jg
mov
sbb
pop
test
movs
ins
dec
dec
and
int
xchg
and
das
dec
fnstsw
inc
(bad)
in
cmp
pusha
cdq
dec
adc
push
imul
popf
jmp
ror
mov
test
(bad)
xlat
pop
rcl
lods
inc
stos
mov
xchg
les
rcr
and
dec
aad
sbb
dec
js
int3
inc
imul
call
sub
sahf
jne
mov
pop
adc
cmp
xchg
ret
xlat
jns
push
stos
dec
pop
out
mov
xchg
mov
mov
daa
sub
cmp
xchg
add
cmps
iret
jecxz
mov
mov
add
xchg
enter
jmp
clc
movs
cmp
add
add
sub
adc
mov
call
mov
push
mov
pushf
in
inc
pop
int
scas
or
das
and
loopne
sbb
repz
fs
sub
rol
and
add
pop
sub
mov
ror
mov
loop
sub
sbb
call
add
pop
mov
pop
icebp
ins
sbb
leave
dec
aas
rol
or
pop
out
sub
ins
xor
fadd
pop
adc
cs
adc
xchg
add
call
add
loopne
pop
fsubr
add
jp
or
cs
jnp
sti
sub
in
sub
mov
pop
icebp
ds
mov
ret
outs
pop
fisub
sbb
pop
xor
retf
stos
lods
xor
sub
or
jns
push
mov
retf
pop
add
xchg
stos
cmp
cmp
pop
clc
popa
push
ficomp
ret
fnstenv
inc
xchg
(bad)
mov
in
mov
dec
popf
mov
call
shl
push
rcr
iret
stc
retf
inc
and
cli
fbstp
movs
push
fdivr
fdiv
cmp
stos
pop
or
mov
mov
(bad)
sbb
out
jmp
dec
mov
es
mov
mov
cmp
and
iret
add
add
mov
push
add
mov
cmc
or
inc
ins
mov
movs
scas
ret
mov
aad
out
or
sahf
sub
xor
mov
mov
inc
ret
das
adc
movs
add
in
push
(bad)
out
pop
out
push
xchg
adc
call
dec
sub
push
mov
add
stos
dec
stos
mov
stos
pop
mov
add
xor
loope
xor
test
popa
and
(bad)
cmc
sbb
jne
jge
inc
enter
inc
sub
sub
mov
adc
mov
mov
cwde
leave
scas
adc
cmp
sbb
jbe
in
xor
lods
shl
mov
out
adc
cmp
mov
xchg
loopne
fbstp
stos
fmul
fisub
mov
sub
push
mov
mov
fcom
or
movs
not
test
into
jnp
xchg
sbb
lods
mul
out
jmp
outs
aas
and
and
pop
dec
pop
or
jmp
shl
pop
or
call
fild
or
mov
js
or
xchg
xor
std
test
fiadd
std
retf
dec
hlt
pop
std
(bad)
mov
mov
addr16
stc
scas
shr
or
cli
call
aas
and
xlat
cwde
(bad)
mov
imul
mov
jb
jno
(bad)
(bad)
mov
jp
daa
ds
push
xor
sub
xor
nop
ss
aas
or
loop
fst
push
jmp
rcl
mov
inc
int3
inc
loopne
fistp
aaa
pop
cld
inc
les
pop
jmp
mov
cli
pop
nop
and
xchg
call
xor
push
lea
cmp
(bad)
std
push
mov
retf
mov
lods
add
pop
retf
sti
sub
popf
pop
cdq
daa
ja
or
sbb
rcl
cmp
jp
xor
in
pop
mov
inc
iret
js
ins
cmp
jmp
lods
mov
rcr
push
clc
test
pop
inc
or
add
dec
leave
ins
mov
and
loop
add
sub
add
add
enter
add
xchg
dec
sub
mov
in
dec
(bad)
cs
push
jl
pop
hlt
out
sahf
or
pop
cmp
add
(bad)
mov
add
or
in
mov
ret
aas
call
les
mov
ds
lods
lods
aaa
jb
(bad)
cmps
call
jbe
xchg
mov
retf
add
dec
gs
or
hlt
fadd
xor
ret
lock
push
out
or
mov
cli
sub
and
cmp
jl
sub
test
inc
mov
scas
add
test
test
dec
mov
jmp
(bad)
ret
outs
inc
dec
(bad)
xor
push
lds
and
cmp
ja
popa
test
add
xchg
ja
fwait
mov
jecxz
bound
fld
leave
mov
inc
jmp
test
cmp
pop
out
cli
add
out
mov
mov
xchg
and
or
mov
enter
mov
xor
mov
push
cli
cld
(bad)
cwde
jmp
adc
jbe
cmp
jno
sub
test
adc
mov
jns
dec
jmp
out
je
pusha
hlt
mov
loop
jno
sar
and
outs
aad
dec
mov
test
cmps
pop
sar
fnstsw
pop
sbb
mov
inc
jbe
out
stc
iret
loop
enter
mov
imul
add
dec
and
stos
(bad)
(bad)
test
loop
(bad)
mov
mov
je
fcomip
cmp
or
or
lods
idiv
in
sbb
push
out
add
mov
jo
cmps
neg
test
out
mov
jmp
or
mov
cmp
cmp
xor
jns
mov
int
inc
jns
jl
ret
add
stos
cmp
xor
mov
add
mov
dec
mov
fsubr
dec
push
aam
jg
popf
fs
or
(bad)
and
mov
(bad)
ja
jmp
mov
pushf
cmp
cmps
imul
push
mov
and
pop
and
jbe
(bad)
or
sub
cmps
int
in
hlt
sbb
rcr
out
cwde
mov
call
out
jmp
sub
pop
pop
in
sti
mov
jnp
jmp
rcl
in
sbb
and
sti
sbb
retf
(bad)
repnz
push
pushf
loope
gs
mov
pop
xchg
jne
sbb
or
and
jge
ror
jo
mov
mov
sbb
es
retf
jbe
fcomp
and
dec
push
mov
dec
aad
push
ja
lods
popa
inc
popf
pop
ins
dec
xchg
xchg
cmc
outs
int3
push
bsr
inc
out
mov
outs
push
cdq
adc
dec
test
arpl
push
xor
or
mov
cmps
push
or
cmp
push
xchg
cmp
into
mov
addr16
mov
stos
pop
movs
lds
aam
adc
mov
mov
aas
adc
clc
xor
pop
test
jge
dec
and
dec
fisttp
push
mov
jmp
sbb
mov
in
push
pop
inc
push
and
xor
arpl
je
retf
dec
stos
ja
xchg
(bad)
mov
cmp
and
jb
sub
rol
sti
fwait
pop
push
dec
dec
xchg
clc
jp
xchg
xor
or
jb
push
mov
cmps
push
call
dec
aas
sbb
je
mov
mov
jecxz
mov
(bad)
cmp
mov
cmp
xchg
ins
or
dec
fild
mov
mov
fwait
shl
call
or
out
stos
adc
pop
sub
add
jge
xlat
not
icebp
test
pop
jmp
popf
adc
inc
das
adc
cdq
cmp
iret
hlt
mov
aaa
xor
out
std
jo
test
pop
outs
xchg
inc
je
aam
sub
ror
xor
push
fcomip
fxch
and
out
inc
and
sbb
mov
shr
xor
or
mov
pop
or
cmp
sbb
xlat
fwait
fwait
ins
test
cld
repnz
test
call
cmp
xchg
push
adc
pop
jb
push
(bad)
mov
(bad)
outs
or
ficom
lods
scas
cs
lods
xor
imul
inc
shl
and
fadd
outs
mov
test
mov
push
cdq
push
xor
xor
adc
mov
lea
dec
data16
call
mov
push
lds
fyl2xp1
cmps
icebp
pop
pop
dec
imul
push
mov
aaa
aaa
and
jl
jp
jge
in
fistp
pop
out
xor
aas
ficomp
inc
out
repz
or
or
sub
mov
call
xor
mov
pop
jmp
mov
pusha
je
js
shr
fwait
add
pusha
jns
push
mov
jecxz
dec
ss
inc
mov
inc
pop
mov
inc
push
mov
pop
pop
inc
clc
retf
cmp
mov
retf
int3
mov
mov
(bad)
sar
ja
pop
rol
ins
mov
sbb
sub
mov
sbb
mov
push
inc
jne
cmp
cmp
cmp
cmp
lods
aad
mov
inc
inc
dec
jmp
hlt
or
(bad)
xchg
movs
(bad)
dec
add
icebp
ret
adc
shr
add
or
jmp
xor
idiv
inc
ja
pop
jmp
jecxz
add
loopne
sub
icebp
inc
xchg
popf
pop
hlt
push
push
fcomp
(bad)
js
or
(bad)
push
adc
push
cdq
ret
sbb
enter
inc
adc
xchg
mov
in
popa
xchg
ins
popf
cmp
sbb
push
inc
sub
sar
shr
ins
call
push
sahf
mov
mov
fimul
outs
xchg
pushf
adc
xchg
nop
les
clc
cdq
fidivr
repz
icebp
cmp
ret
push
adc
sbb
cmp
lods
out
and
int3
adc
jge
sbb
call
fs
cmp
xor
and
xchg
jb
jg
sub
xor
or
xor
icebp
pop
enter
xchg
mov
pop
repz
xlat
push
bts
shl
dec
ins
mov
hlt
push
popf
sahf
xor
sbb
sar
mov
sti
mov
ror
pop
and
mov
(bad)
cld
lods
mov
or
xchg
cvtps2pd
xor
sbb
xor
pop
jmp
xchg
mul
jecxz
(bad)
xor
aas
cmp
int3
push
out
jl
xor
imul
pop
(bad)
rcl
cdq
mov
sahf
dec
xlat
aam
test
xchg
(bad)
sub
mov
test
sbb
cwde
cmc
lds
stc
inc
inc
sbb
(bad)
(bad)
jl
retf
lahf
pushw
dec
or
repz
add
pop
movs
or
pop
rcr
dec
mov
ror
popa
ss
sbb
es
scas
in
mov
outs
sub
mov
pop
xor
jle
add
sub
and
(bad)
out
xor
dec
fwait
cmp
(bad)
fadd
mov
lods
(bad)
sbb
dec
mov
lock
popa
int
mov
push
ds
sub
push
pop
dec
icebp
inc
xchg
or
loop
mov
mov
(bad)
pop
adc
jae
dec
sub
addr16
inc
push
call
mov
es
(bad)
gs
push
ss
cmp
mov
xor
call
lea
inc
jp
dec
test
out
pop
ss
push
pop
or
add
add
pop
sub
in
(bad)
in
pop
ret
in
push
jmp
inc
sub
pop
lds
dec
call
xor
dec
call
sub
imul
push
xor
pop
dec
pop
inc
retf
add
mov
add
ds
and
mov
or
ss
mov
test
sub
js
out
sbb
inc
push
add
sti
outs
cdq
test
sbb
xor
pop
scas
pop
fcom
(bad)
xchg
and
mov
arpl
jb
scas
aam
xchg
add
repnz
pop
xor
xor
ret
fld
jmp
add
mov
lock
int3
push
jl
mov
and
loop
inc
add
add
pushf
lock
dec
push
gs
jle
xchg
inc
and
stos
sub
add
jo
jmp
jmp
inc
in
sti
inc
mov
inc
cmp
fwait
mov
stos
mov
push
cmps
mov
in
scas
cmp
sub
enter
jmp
mov
cli
sti
lods
dec
icebp
pop
cmp
mov
fwait
mov
mov
and
jns
inc
mov
mov
add
test
pop
stos
xlat
jno
jo
sar
pop
out
adc
in
cwde
push
pop
adc
cli
int
retf
cmps
dec
inc
cmps
lods
jmp
pushf
call
pop
mov
jmp
cmovge
adc
sbb
or
xchg
dec
ja
test
mov
push
hlt
loopne
in
sbb
nop
sti
movs
loopne
push
sbb
and
cmps
jg
arpl
inc
sub
mov
repz
mov
cdq
imul
hlt
xor
pop
enter
outs
push
adc
or
mov
test
push
dec
fist
cmp
xchg
inc
xchg
loop
jmp
sbb
sub
popa
sub
dec
or
les
lea
add
sbb
mov
mov
cmp
loopne
shl
xor
es
(bad)
inc
bound
push
mov
xchg
xlat
bound
sub
ret
and
leave
cmp
shl
sbb
jmp
es
xchg
call
add
add
inc
mov
test
push
adc
and
xchg
pusha
jb
ret
sti
add
cmp
in
jb
test
push
push
es
dec
fbld
mov
inc
cmps
adc
jg
sub
inc
adc
sub
cmp
xlat
ins
pop
enter
xor
sub
mov
mov
push
repnz
xor
arpl
cmp
(bad)
pop
pop
call
sbb
add
mov
stos
jle
(bad)
inc
loopne
(bad)
fsub
cld
inc
div
sar
mov
dec
xchg
repz
xchg
imul
or
lods
int
push
mov
loop
ss
ja
add
sbb
call
and
out
adc
popa
mov
pop
ins
cmps
inc
loope
cwde
or
jbe
mov
jno
jle
nop
sub
push
mov
cwde
jno
sbb
test
sub
(bad)
(bad)
jmp
aam
enter
dec
adc
xchg
add
adc
cmp
jecxz
mov
or
mov
inc
adc
adc
test
push
js
mov
add
les
loope
enter
jmp
scas
clc
push
push
imul
into
idiv
test
enter
call
dec
bound
aad
(bad)
jle
sub
(bad)
mov
or
adc
js
and
mov
stos
mov
(bad)
repnz
mov
push
xor
fistp
jne
mov
leave
out
sbb
jmp
or
xchg
cld
cmp
(bad)
add
(bad)
push
in
shl
push
jns
ror
xchg
aaa
in
xchg
add
(bad)
jae
movs
cmp
xor
loop
add
arpl
js
lods
jbe
adc
pop
pop
stos
jne
cmps
jbe
das
in
jecxz
sub
cmps
ss
movs
movs
ins
sbb
icebp
or
clc
and
jno
adc
xchg
repz
mov
mov
dec
cmp
or
mov
pminub
push
sahf
sub
inc
pop
push
sub
dec
pop
fisubr
ins
add
aas
aas
pop
scas
mov
call
shl
ffree
std
into
jb
loope
mov
stc
inc
cs
dec
cld
xchg
mov
gs
retf
jb
xor
clc
xor
xchg
ffreep
in
adc
push
jb
pusha
loopne
adc
sbb
pusha
fwait
inc
jb
xchg
cmps
jne
inc
inc
mov
push
mov
retf
and
sbb
mov
inc
push
inc
add
adc
mov
pusha
push
inc
adc
dec
(bad)
mov
repnz
cmp
jg
in
sub
xchg
xor
(bad)
add
jno
lods
sar
cdq
push
pop
sbb
xchg
jb
aaa
jge
jge
jle
retf
les
and
or
jbe
leave
push
addr16
test
jmp
mov
pop
cs
fs
les
shl
adc
cli
fst
mov
add
mov
out
adc
mov
inc
xor
(bad)
jp
mov
mov
sub
js
aaa
or
cmp
pop
push
xchg
dec
clc
jns
mov
sub
int3
ds
lds
pop
lock
jbe
mov
inc
add
jno
popa
adc
mov
adc
or
jmp
fcomp
and
cmp
xchg
jg
xor
or
push
in
(bad)
lods
mov
in
clc
jmp
lock
sub
into
and
test
push
inc
mov
pusha
xor
jle
adc
pusha
int3
scas
arpl
and
pushf
call
call
test
pusha
mov
data16
ret
sbb
or
cmc
sub
enter
enter
jbe
retf
jle
inc
scas
push
fld
xlat
pushf
mov
cld
test
lods
mov
test
sub
pop
mov
cmc
push
ret
rcr
pop
(bad)
and
xchg
out
and
and
inc
cld
push
push
xchg
daa
push
in
stos
loope
addr16
ins
nop
add
jae
sub
fnstenv
rcr
xor
shr
add
dec
add
mov
daa
stos
adc
gs
(bad)
adc
imul
mov
dec
jae
(bad)
shr
pushf
or
mov
pushf
pop
pushf
out
out
xchg
ret
xchg
fs
int
ds
neg
mov
in
test
pop
outs
inc
lahf
push
in
loop
cmp
ror
xor
bound
xor
xchg
push
add
mov
jns
mov
jne
sar
enter
shr
mov
fld
stos
adc
push
nop
jbe
sbb
mov
ins
pop
(bad)
mov
fucomi
icebp
mov
xor
pop
dec
das
inc
pop
in
push
fisubr
push
shl
in
dec
mov
xor
aam
test
ins
mov
popa
mov
fistp
mov
adc
ins
mov
adc
in
ja
ja
mov
mov
jle
sub
jle
jbe
in
call
mov
idiv
add
in
fisub
es
imul
xchg
and
jnp
inc
rcr
sbb
mov
outs
nop
imul
pop
mov
in
xchg
cmp
cs
sub
inc
stos
movs
repnz
int3
or
jmp
test
inc
jo
int
retf
inc
mov
call
pusha
sub
idiv
jbe
or
dec
mov
cwde
push
das
retf
pop
xchg
ffreep
sahf
in
and
hlt
mov
inc
clc
pop
inc
outs
ret
loope
rcr
pop
mov
push
ret
hlt
push
rol
add
repz
jle
jno
cdq
cmc
mov
dec
sahf
or
push
fwait
push
mov
imul
pop
dec
ins
mov
fcomi
cli
xchg
shl
in
cmp
mov
mov
je
aad
inc
jns
in
push
cmc
pushf
mov
mov
xor
mov
nop
retf
int3
in
fiadd
sbb
mov
mov
das
push
dec
aam
sub
push
mov
add
les
pop
daa
xor
pop
neg
adc
sbb
sbb
or
test
cld
call
xor
mov
lea
inc
jp
mov
push
ss
or
fadd
arpl
out
outs
rcl
rcr
(bad)
mov
call
inc
sti
cmp
aam
dec
imul
pop
sbb
sub
or
adc
iret
mov
cmp
out
(bad)
xlat
cmp
mov
adc
(bad)
mov
and
inc
es
icebp
sub
nop
mov
xchg
in
or
sbb
repz
push
(bad)
push
movs
out
popf
int
pop
push
mov
out
or
stos
into
fsub
shr
dec
dec
scas
inc
and
cdq
sbb
mov
sub
(bad)
pusha
inc
xchg
mov
xor
add
enter
pop
inc
adc
ja
lahf
or
mov
jl
inc
jmp
push
push
inc
scas
push
xchg
fisttp
retf
mov
fild
test
stos
xchg
in
scas
int
stc
dec
push
outs
mov
adc
jmp
nop
and
xor
stc
std
int3
sbb
push
js
fs
imul
push
push
xchg
iret
(bad)
popa
mov
jnp
aaa
data16
pop
imul
inc
ror
jmp
mov
mov
ds
lods
dec
jg
sub
jnp
mov
push
(bad)
fwait
ror
psllq
enter
add
push
out
xchg
mov
pusha
xchg
jmp
sbb
inc
pushf
cmps
int3
daa
sbb
xchg
(bad)
mov
push
xchg
xchg
jo
adc
push
outs
les
or
rcr
lock
fcom
outs
rol
out
test
add
mov
ror
clc
pop
inc
xchg
mov
(bad)
sbb
xchg
stc
xchg
dec
pop
adc
pop
push
cmp
cld
add
cli
ret
stc
xor
pushf
es
std
xchg
je
add
test
xchg
xchg
push
xchg
bnd
mov
in
inc
inc
dec
push
push
test
ins
in
and
mov
dec
ss
(bad)
xlat
cwde
clc
loope
nop
xor
dec
call
xor
sbb
ds
das
(bad)
xchg
ss
or
ret
cwde
imul
jl
(bad)
daa
or
inc
repz
nop
jp
mov
jbe
repnz
or
mov
sub
cmc
xor
pushf
gs
fstp
arpl
faddp
dec
sbb
and
xor
mov
push
inc
cmc
enter
inc
movs
inc
imul
jo
fisttp
fimul
les
push
lahf
add
jno
adc
into
pop
lahf
and
jae
repnz
mov
pop
jno
popf
ror
push
loopne
pop
sbb
lea
leave
mov
adc
sbb
(bad)
cs
pop
loope
ds
ret
jne
xchg
cmp
dec
add
mov
adc
or
xchg
and
dec
push
jo
sahf
mov
mov
rol
adc
sbb
clc
xlat
sub
lahf
jp
test
gs
stos
in
mov
mov
mov
jnp
mov
loope
add
jnp
daa
jno
movs
adc
xor
cs
sbb
ret
or
mov
jmp
(bad)
hlt
and
add
iret
retf
mov
ret
pop
lahf
mov
cmps
test
jl
sbb
sbb
mov
aas
repz
fst
jg
js
mov
and
mov
jmp
xor
cmps
jbe
pop
sbb
test
and
push
push
iret
xchg
inc
mov
and
pop
add
inc
inc
mov
dec
pushf
push
cmp
pop
xchg
adc
mov
mov
mov
mov
outs
sbb
das
outs
cmp
(bad)
adc
into
popf
or
int
pmullw
pop
xchg
mov
jns
das
pushf
dec
xor
cmps
dec
jae
cmp
xor
ins
mov
xchg
ja
mov
cmp
pop
je
call
div
mov
movs
cli
push
(bad)
dec
and
xchg
out
inc
in
popf
xchg
jae
test
add
dec
lock
ins
fist
xchg
in
pusha
imul
movs
call
or
xchg
leave
out
cli
movs
aam
cli
or
je
push
outs
pop
pop
sbb
ret
enter
retf
sub
push
ds
sti
or
ja
bound
mov
ins
dec
sbb
test
jnp
pop
ret
xor
test
mov
pop
scas
stos
xor
xor
adc
inc
lods
fwait
pop
shl
ins
mov
jge
data16
in
mov
mov
cdq
fld
pop
add
adc
mov
add
ins
mov
inc
sar
mov
push
mov
iret
push
push
mov
pushf
jg
jecxz
pop
int
fsubr
push
shr
(bad)
aam
mov
sub
cmp
add
cwde
and
and
jp
push
inc
mov
jp
mov
int
cmp
repz
jl
mov
lods
xor
mov
scas
call
sbb
jno
and
jnp
add
int3
fwait
dec
out
and
sbb
stc
xchg
fist
push
outs
ins
(bad)
outs
adc
mov
cli
xchg
dec
adc
test
adc
push
nop
mov
scas
retf
sti
push
mov
jb
ror
(bad)
mov
and
pop
or
xor
mov
xlat
addr16
fwait
xor
fnstsw
adc
pop
or
mov
aad
call
jo
or
fcom
xor
in
inc
push
dec
inc
retf
push
mov
push
pop
stos
icebp
loop
and
mov
and
fwait
xor
xor
adc
sti
arpl
push
inc
mov
add
pop
sub
push
mov
cmp
xor
dec
mov
fmul
xchg
jecxz
add
inc
and
jo
sar
scas
mov
sub
jns
fwait
xor
enter
xchg
fisub
jne
pop
adc
imul
cmp
sbb
sub
or
jns
sub
sbb
hlt
out
popf
mov
mov
sub
inc
fistp
jle
push
push
stc
dec
loopne
in
sbb
mov
or
cwde
add
inc
ret
xor
inc
push
inc
or
call
inc
fucom
add
cmc
xchg
cdq
imul
pusha
outs
lahf
aad
clc
stc
fadd
cmp
mov
fnsave
mov
cmps
push
mov
jns
mov
sub
repnz
inc
push
pop
inc
test
push
push
jne
jl
(bad)
jbe
aaa
add
jo
adc
xchg
sub
in
sub
sahf
ror
imul
inc
jnp
repz
inc
and
stc
int3
or
bound
push
dec
mov
push
das
and
mov
sbb
aad
xor
and
xlat
inc
les
fwait
stc
int
test
cmp
xlat
ret
or
shl
fwait
add
scas
jmp
sub
push
and
or
scas
scas
mov
stc
ss
dec
push
cmp
push
ror
xor
ins
pop
xchg
lds
das
ret
(bad)
sahf
sub
and
loop
fist
int
mov
inc
(bad)
mov
sbb
leave
stc
std
pop
cmp
loop
int3
ret
dec
popf
cwde
add
repz
and
xor
mov
push
push
cmps
mov
inc
lods
push
stc
fwait
mov
jnp
sub
pop
sbb
mov
push
add
xchg
popa
xchg
popa
sete
not
cmps
and
out
cmc
arpl
fcomp
push
fsubr
ins
mov
(bad)
xlat
sbb
xor
bnd
dec
call
sub
push
repnz
repnz
adc
mov
(bad)
jge
push
sub
dec
pop
add
dec
jecxz
inc
adc
dec
sbb
xlat
sub
call
in
or
sub
xlat
or
ret
fmul
xchg
es
ins
cmp
jp
xchg
js
and
ret
push
adc
xchg
mul
inc
push
jae
fidivr
dec
push
jno
mov
fadd
adc
fcomp
xchg
inc
lods
test
ins
movs
in
xchg
push
pop
ret
fst
jmp
and
mov
push
xor
ret
dec
jmp
inc
mov
mov
fst
ss
ror
daa
call
push
mov
(bad)
sbb
push
mov
mov
xor
pop
loopne
out
xor
inc
jne
test
add
mov
les
shr
jmp
push
es
mov
sbb
and
mov
out
jo
rcl
and
daa
ret
loopne
aaa
sahf
adc
dec
sbb
das
sub
out
fwait
and
push
sub
aam
mov
je
jnp
loopne
cwde
sbb
pop
push
inc
sbb
cmp
jl
jg
mov
in
lds
adc
and
nop
retf
leave
outs
push
pop
sahf
imul
mov
gs
or
cmc
ss
xchg
mov
cmp
and
cmp
mov
fcomp
and
push
mov
bound
or
add
or
mov
adc
imul
or
aam
(bad)
loop
mov
fmul
rol
sub
xchg
aam
stc
jecxz
setno
inc
pop
push
xchg
push
xor
test
stos
sbb
std
(bad)
(bad)
in
movs
fisttp
(bad)
cmps
mov
mov
mov
sub
inc
out
imul
sub
in
inc
sbb
scas
into
and
lahf
push
rcl
dec
test
add
inc
xor
out
jne
cli
push
pusha
xor
lea
mov
daa
pushf
cmp
push
push
popa
lods
sub
push
cmps
jmp
data16
scas
fdiv
xchg
(bad)
cmps
iret
jnp
mov
inc
ds
xchg
push
cmps
retf
mov
(bad)
aas
fcomp
or
das
inc
lods
icebp
adc
sub
loopne
mov
mov
or
fwait
loopne
repnz
cmp
ret
repz
in
xchg
lahf
aad
popa
das
int
push
iret
push
popa
cmp
cmp
xor
dec
and
pop
jb
xchg
ins
mov
dec
push
ins
xor
mov
aad
pop
stc
sub
inc
stos
lahf
aad
loope
cwde
mov
mov
adc
jle
ja
jbe
int3
fiadd
data16
aaa
outs
or
and
jp
mov
xchg
retf
push
out
mov
test
fnstsw
dec
lods
mov
cld
xchg
mov
jne
dec
jle
sbb
ds
fsub
lea
repz
dec
outs
push
js
lahf
dec
in
mov
xor
jge
adc
xlat
clc
mov
jg
push
push
and
cld
push
lahf
sahf
mov
and
arpl
and
in
inc
add
mov
fdiv
test
int3
push
(bad)
cmp
enter
or
rcl
xor
mov
mov
add
jl
mov
xor
jp
sar
mov
xor
loop
add
cdq
hlt
sbb
pop
in
mov
inc
push
out
pop
sbb
rcr
int
pop
mov
test
adc
xchg
xchg
nop
mov
out
mov
imul
retf
and
(bad)
jae
dec
cmp
push
mov
lahf
not
lahf
and
jmp
or
mov
arpl
push
sub
shl
(bad)
cmp
xchg
fsubr
call
daa
ffree
dec
aaa
shr
sub
jnp
sbb
dec
jbe
mov
xlat
sbb
xlat
leave
scas
bound
push
dec
add
je
aad
mov
add
jp
mov
outs
imul
fsub
jns
add
sbb
fdivr
clc
movs
inc
std
out
inc
xchg
stc
push
jne
fstp
mov
or
scas
gs
enter
adc
jl
adc
clc
push
test
jbe
into
test
cld
add
lods
(bad)
movs
dec
sbb
xlat
ins
enter
lock
mov
inc
mov
mov
mov
mov
(bad)
enter
test
pushf
jecxz
lds
push
pop
jecxz
pop
sbb
or
xchg
mov
in
lods
sti
pop
dec
sbb
out
push
retf
jnp
(bad)
pop
dec
outs
sbb
jno
inc
dec
sbb
pop
pop
cs
jns
or
add
loop
shl
in
mov
fist
ror
jge
dec
call
jecxz
jns
scas
out
xchg
add
sbb
sub
(bad)
aad
cmc
jmp
popf
xchg
cmp
xor
(bad)
xchg
cli
ror
xor
dec
inc
mov
adc
in
setae
imul
dec
xchg
out
ficom
popa
mov
das
and
fdivr
push
clc
jecxz
div
inc
mov
ret
lahf
test
pop
in
imul
gs
mul
bound
in
mov
leave
in
mov
faddp
and
retf
bound
xor
ins
mov
(bad)
sub
push
jg
int
test
xchg
sub
jns
outs
pop
and
mov
sbb
imul
cmp
push
loope
adc
repz
mov
mov
xor
jb
jle
mov
addr16
pop
mov
imul
add
mov
hlt
jmp
cmp
cmps
sbb
mov
inc
jp
test
cld
push
sahf
cmp
out
shr
xchg
ret
mov
(bad)
jmp
push
sub
add
xchg
dec
bound
mov
adc
mov
repnz
jno
push
div
ret
cwde
aas
cmp
jge
mov
sub
adc
sbb
xchg
adc
pop
shl
or
sbb
fwait
add
mov
into
mov
popa
xchg
add
cli
rcr
in
xchg
call
in
pop
sbb
xchg
movs
jae
cmp
outs
push
cdq
lahf
xor
dec
or
pop
xor
sbb
xchg
push
(bad)
ds
and
and
stos
mov
inc
push
hlt
inc
loop
cmps
loop
and
sbb
iret
jle
xor
and
loope
mov
sub
or
loope
movs
ds
lea
mov
cmp
js
mov
dec
mov
and
mov
inc
pop
aas
fucomip
push
xor
jmp
fnstsw
mov
out
sbb
cmp
ss
inc
dec
test
mov
test
cdq
jge
inc
nop
mul
ja
in
mov
(bad)
jnp
push
xchg
push
pop
test
jmp
push
push
test
ins
enter
sbb
movs
sti
fcomp
stos
jmp
mov
inc
sub
in
mov
addr16
push
push
jecxz
fldenv
(bad)
pop
test
push
push
xchg
cmc
je
mov
or
mov
out
ds
cdq
fst
sub
cdq
xchg
and
push
in
sub
inc
daa
mov
and
ret
dec
jne
jp
lea
in
div
(bad)
adc
dec
and
inc
add
mov
iret
loopne
(bad)
mov
inc
repz
repz
xlat
pop
fisttp
jnp
pusha
stc
cs
lea
out
fistp
pushf
xchg
ja
and
dec
ds
ja
sahf
ins
fmul
movs
aas
mov
inc
push
fadd
mov
loopne
fnstsw
sbb
shl
push
xor
faddp
popf
and
mov
push
pop
sbb
mov
pop
sub
add
(bad)
sub
adc
pop
pop
js
cmp
mov
and
aaa
mov
inc
jo
in
xor
mov
retf
cmc
push
in
lods
adc
mov
pop
xor
and
test
xchg
test
in
loop
mov
popf
xlat
or
inc
and
pop
xchg
or
lahf
mov
ret
push
ror
stc
rol
dec
sbb
xchg
jnp
jb
iret
ins
xchg
mov
pop
pop
jmp
pop
dec
mov
test
cmps
test
lahf
ja
ror
pop
pusha
cs
jmp
into
pop
cmp
sar
jmp
push
and
dec
ja
pop
shl
ss
int3
stos
push
ret
int3
push
adc
inc
sub
and
sbb
adc
jbe
or
mov
mov
repz
dec
rol
out
mov
mov
(bad)
jae
outs
jns
inc
add
add
adc
mov
xchg
dec
push
push
loope
inc
sar
add
push
inc
add
lods
test
ins
cs
fldenv
jb
js
pop
loop
sar
inc
fld
mov
mov
mov
daa
ror
fimul
mov
sub
mov
es
fwait
cwde
pushf
inc
add
xor
inc
mov
push
aam
xor
inc
mov
int
pop
sub
mov
add
ds
adc
in
add
test
stos
mov
lods
and
mov
push
in
lds
or
shr
sar
repz
(bad)
jmp
inc
mov
inc
fwait
mov
or
retf
aad
sub
push
lea
fistp
jmp
jge
mov
cmps
nop
out
movs
clc
and
jmp
ror
es
mov
and
add
ja
hlt
ret
inc
test
(bad)
retf
mov
mov
(bad)
and
(bad)
out
imul
sbb
dec
scas
push
pop
fwait
cli
push
popa
pop
fidiv
add
xchg
fld
vmwrite
dec
in
push
test
mov
mov
out
fdivr
aam
stc
pop
lds
aaa
(bad)
fmul
jmp
lds
or
aas
stc
sahf
and
xor
(bad)
(bad)
out
and
mov
out
mov
mov
mov
ret
mov
add
lods
adc
dec
out
mov
mov
push
not
(bad)
je
and
dec
imul
or
fcomp
dec
cmp
mov
jno
(bad)
cmp
loopne
cmp
clc
gs
scas
lods
fcom
push
rol
mov
jbe
xchg
jle
pop
adc
ins
mov
or
pop
aam
rcl
xchg
sub
xlat
jmp
das
ja
movs
inc
fcmovnbe
adc
stos
je
popa
push
jnp
daa
or
ret
mov
and
add
aam
jp
aam
sbb
mov
jbe
add
hlt
adc
pushf
and
stos
les
outs
jns
pop
mov
pop
mov
xchg
in
sub
retf
xor
add
rol
mov
inc
inc
jle
add
daa
pop
enter
outs
test
jle
test
push
loopne
(bad)
(bad)
rcl
scas
sbb
xor
cmps
jno
mov
and
in
outs
in
(bad)
sbb
movs
fisttp
retf
icebp
mov
sbb
hlt
adc
push
xchg
out
adc
out
aam
call
imul
jne
add
inc
xor
aad
fs
into
arpl
test
fidivr
pusha
pusha
xlat
xchg
out
or
sbb
push
mov
adc
mov
sbb
sub
outs
cmp
and
out
call
jmp
xor
xchg
inc
xlat
sahf
sbb
rcl
cmps
sub
sub
push
mov
(bad)
popf
and
xor
in
xor
cli
xchg
fxtract
and
pop
nop
mov
out
in
pop
cs
or
mov
pusha
jns
int3
sub
fwait
or
shl
jp
push
fidiv
popf
int
sub
sub
arpl
push
fwait
(bad)
arpl
aaa
dec
and
sub
mov
ins
or
aam
sbb
lds
ror
pushf
das
stc
(bad)
push
dec
cmp
dec
in
and
sbb
jbe
dec
mov
sbb
sub
xchg
dec
(bad)
inc
push
loopne
test
outs
mov
cmp
pop
leave
jbe
push
retf
push
fimul
mov
xchg
add
sbb
mov
cmp
dec
stc
into
or
and
sbb
jbe
shl
add
pop
in
rcr
into
jg
pusha
setns
xor
mov
jnp
xor
popa
bound
inc
out
ds
movs
lahf
mov
mov
inc
jno
sbb
lock
cmc
rcr
jge
pop
mov
not
mov
mov
jp
and
ins
xor
fild
inc
push
push
pop
xchg
sub
icebp
loop
sub
dec
and
shl
rcr
ss
pop
cli
hlt
mov
or
pop
pop
pop
sbb
fsubr
mov
(bad)
gs
xor
mov
dec
jns
jnp
xchg
fadd
outs
add
pop
outs
mov
icebp
loop
mov
mov
mov
mov
sub
scas
mov
(bad)
push
leave
ret
push
lods
xchg
inc
mov
mov
sbb
cmp
imul
jmp
ss
or
scas
mov
loopne
push
mov
inc
movs
push
xchg
icebp
ins
sbb
adc
and
jge
or
cs
cmp
out
inc
xchg
xor
sub
mov
xchg
fild
pop
stc
fisubr
mov
sub
mov
(bad)
or
or
dec
retf
or
nop
jmp
fcomp
mov
pop
inc
in
outs
xchg
mov
sbb
mov
daa
or
pushf
inc
cmovle
inc
and
jo
mov
or
adc
(bad)
xlat
lods
sbb
les
mov
aad
cmp
jno
cs
mov
sbb
stos
mov
mov
pop
movs
imul
loop
add
pop
add
outs
inc
retf
in
mov
sub
ins
and
jle
pop
push
inc
lods
sub
jno
ds
mov
(bad)
mov
fisttp
shl
jge
movs
xchg
in
mov
jnp
xchg
jnp
add
bound
nop
sub
inc
xor
in
xlat
mov
sub
repz
mov
push
dec
ror
dec
mov
das
inc
cld
sub
sbb
not
jmp
or
add
add
jmp
pusha
popa
xor
popa
sti
sbb
into
mov
or
sub
mov
stc
xchg
mov
les
inc
repnz
pop
push
daa
dec
ret
std
or
das
jnp
sbb
push
mov
jmp
fidiv
arpl
test
ret
sub
xlat
mov
sbb
(bad)
jle
cmps
sbb
sbb
dec
mov
fdiv
cmc
int
dec
adc
retf
jg
in
jp
mov
dec
sub
pop
mov
les
stc
les
sahf
inc
fcomp
mov
mov
cmp
sub
adc
repnz
js
loopne
jbe
jle
fadd
outs
je
dec
xor
ret
enter
add
xor
bound
std
scas
mov
call
retf
jg
xlat
(bad)
out
mov
in
xor
dec
or
das
test
jae
out
int3
pop
out
sub
inc
ret
cmc
push
inc
dec
jae
cs
add
jbe
xchg
dec
ds
sub
sub
leave
xchg
(bad)
push
lea
dec
push
push
leave
or
daa
fild
sbb
inc
xchg
add
(bad)
inc
mov
ss
xchg
addr16
call
xor
xchg
pushf
jae
jmp
and
jne
mov
stc
cmps
cmp
push
out
jecxz
cdq
mov
test
daa
jp
cmp
jae
(bad)
stc
fwait
enter
ret
sbb
(bad)
popa
add
xlat
sbb
pop
lea
in
pop
xor
xor
mov
in
xlat
fsubr
es
mov
inc
cmp
dec
pop
stos
and
in
jp
jp
ror
test
lea
jb
or
mov
pop
in
mov
pusha
sub
cmp
mov
sbb
aas
arpl
call
(bad)
(bad)
push
cs
test
add
dec
imul
fidivr
adc
fistp
jno
ds
mov
lea
xchg
and
bound
mov
push
ss
rcr
(bad)
cmp
xchg
inc
adc
(bad)
pop
mov
stos
add
jmp
dec
push
stos
mov
xchg
cdq
out
cmp
sbb
xor
mov
ficom
fcomp
std
clc
stc
pop
or
push
fsub
lahf
sub
cmc
in
dec
mov
sbb
ja
cli
xor
call
lahf
hlt
xor
xor
cmc
(bad)
jb
sbb
sub
or
ret
mov
dec
adc
inc
or
push
xchg
inc
cmp
aaa
repz
lfence
xchg
jne
fimul
in
out
cmc
test
sbb
daa
jno
pop
mov
mov
(bad)
sub
inc
pushf
xor
scas
lods
iret
sub
es
pop
push
aaa
jle
sbb
aas
cmp
test
inc
fmul
imul
cmp
xchg
xchg
dec
cmp
dec
mov
ins
je
adc
sbb
call
ss
lods
xlat
out
aaa
cwde
mov
fxch
dec
lahf
jbe
sar
je
or
movs
loop
ja
test
int3
test
hlt
jge
sub
jecxz
mov
cs
into
lea
cwde
jbe
ss
adc
push
add
adc
sub
mov
mov
pop
ret
jo
pop
push
jb
pop
lods
dec
or
inc
into
iret
xor
xchg
retf
adc
test
call
in
aam
aas
pop
je
or
movs
mov
or
in
ins
retf
popa
jbe
dec
shl
jae
or
popa
inc
pop
mov
rcl
mov
test
cmp
repz
gs
retf
and
mov
mov
call
es
mov
stc
cmp
and
int3
fdivr
mov
and
sbb
daa
das
mov
sbb
stc
xlat
dec
dec
sbb
or
or
ins
(bad)
mov
lea
add
mov
shl
out
call
lds
push
imul
out
lods
mov
call
and
hlt
mov
(bad)
jbe
or
dec
cmp
fwait
daa
push
outs
popf
adc
jle
into
xchg
and
xchg
mov
or
cmp
or
mov
fldl2e
pop
add
gs
jge
jb
mov
cmp
out
inc
and
sbb
mov
pop
jno
into
mov
and
imul
add
mov
sub
jbe
sub
int3
dec
jecxz
std
cmps
in
push
jno
test
jne
out
fsubrp
cmp
mov
jns
xlat
int
loop
popf
push
loope
(bad)
lock
aas
pop
int3
sbb
frstpm(287
adc
loopne
movs
inc
mov
mov
in
adc
out
xchg
or
dec
shl
cmp
jmp
cwde
mov
movsx
add
pop
fist
jl
xchg
loopne
jge
stc
cmp
imul
jp
cmp
(bad)
jle
and
sbb
mov
(bad)
mov
mov
xchg
xor
push
push
adc
mov
xor
jo
int
or
icebp
hlt
xchg
rcl
cmps
popa
cmp
iret
mov
or
in
push
pusha
add
imul
cmp
push
lods
jecxz
jmp
nop
sub
(bad)
cmp
(bad)
sbb
inc
mov
imul
clc
adc
and
mov
lods
leave
and
int3
jg
add
mov
lds
dec
push
arpl
jbe
sub
sub
mov
sub
shl
or
test
lea
add
pop
add
dec
or
and
ins
jne
retf
add
pop
aad
and
mov
imul
push
jae
pop
fs
(bad)
pop
push
je
add
jno
imul
(bad)
and
add
mov
repnz
mov
mov
int3
test
fld
fbld
jle
mov
in
cwde
scas
sub
add
(bad)
cld
jl
pop
cmp
or
mov
ret
cmp
pop
adc
cs
or
repz
(bad)
pop
or
das
add
cmps
mov
and
jo
mov
adc
dec
mov
fst
mov
adc
mov
push
sar
es
mov
ja
sbb
out
fwait
sbb
add
fisubr
cmp
lahf
fwait
pop
mov
xchg
pop
and
cmp
test
cmps
dec
pop
test
mov
inc
mov
in
mov
imul
(bad)
jge
ins
sbb
dec
(bad)
inc
imul
mov
dec
mov
lea
dec
(bad)
sub
pop
jbe
inc
loopne
adc
inc
mov
pop
imul
xor
ret
jbe
ret
xor
pop
aas
outs
daa
clc
sub
push
lock
bnd
outs
push
jp
mov
add
jmp
inc
add
(bad)
xchg
mov
push
mov
jo
fld
loopne
adc
arpl
jp
(bad)
cdq
inc
daa
add
ret
aaa
dec
leave
push
push
push
pusha
push
sub
xchg
add
push
jg
cmp
test
sbb
inc
test
jne
rol
scas
dec
vpexpandd
rcl
dec
(bad)
jb
pusha
movs
out
xor
mov
jne
cmp
out
jl
lds
pop
ret
cli
add
push
or
lods
pop
call
lea
retf
test
push
pop
retf
sbb
pop
fstp
jle
movs
xchg
sub
jle
push
cmp
leave
add
and
sbb
daa
ret
cmps
int3
jg
ins
jge
lea
cmps
lds
sub
inc
cwde
ins
aad
ret
adc
jae
scas
aad
push
sbb
pop
call
dec
jge
mov
mov
mov
jmp
out
jecxz
cmc
test
in
xchg
mov
pop
push
test
jmp
sub
xlat
outs
dec
xor
mov
sbb
sti
and
inc
fisub
cmovg
sbb
inc
sti
jnp
cmp
inc
rcr
imul
mov
icebp
shr
adc
outs
out
enter
stos
and
ret
mov
out
push
outs
mov
ds
fist
test
sub
pusha
in
inc
push
inc
jmp
ror
jb
sar
push
jmp
push
xchg
cmp
mov
inc
cmps
rcr
stc
aaa
addr16
mov
pushf
outs
(bad)
rcr
push
pop
push
jecxz
jmp
and
pusha
push
mov
loopne
adc
shl
pushf
mov
mov
into
je
jmp
cmp
inc
scas
data16
(bad)
add
sbb
in
xor
sbb
xchg
stos
push
js
test
pop
push
mov
push
pop
adc
adc
inc
dec
cs
push
xor
mov
in
int3
add
nop
sbb
dec
(bad)
ja
mov
fisubr
push
jl
test
in
push
fdivr
push
movs
fnstsw
cmp
jnp
xchg
adc
pop
push
les
or
rcl
fadd
and
sbb
jno
mov
xchg
jmp
push
jmp
cs
cmp
retf
adc
sbb
(bad)
je
ins
stc
aad
repz
test
rcl
jb
jg
add
inc
test
push
into
dec
pusha
scas
data16
inc
push
mov
in
jne
arpl
lea
into
or
fadd
loop
xchg
(bad)
out
mov
loopne
mov
loope
ftst
push
imul
cmp
xchg
cmp
mov
xchg
sub
daa
test
aas
dec
fnstenv
inc
inc
add
mov
dec
fcmovu
jo
sbb
or
push
mov
or
adc
mov
jne
push
or
jnp
rcl
call
adc
pop
cmc
out
mov
jl
loopne
imul
vpcmpgtb
in
push
shl
test
adc
mov
xor
pop
dec
fdivr
cmp
cmps
cmp
imul
inc
shr
push
cmp
jno
push
and
and
arpl
jecxz
push
mov
ss
in
push
pop
or
mov
lahf
mov
jp
jmp
inc
pop
scas
mov
add
scas
mov
mov
mov
or
in
retf
dec
inc
scas
pop
mov
test
test
nop
loopne
repz
cs
int
mov
mov
cmp
out
sub
pop
imul
cmps
inc
jp
inc
adc
test
ja
or
in
sahf
mov
cs
jb
cld
imul
lahf
mov
test
div
ja
push
lock
popf
jo
ror
mov
xchg
dec
shl
js
adc
(bad)
pusha
sbb
xchg
neg
fidiv
adc
push
out
arpl
jg
ret
add
popf
iret
mov
ret
retf
fld
adc
cwde
push
fidivr
jmp
dec
pop
(bad)
cmp
sbb
out
pop
test
sbb
lahf
jecxz
add
pop
push
add
sub
(bad)
cs
adc
xchg
sti
je
cmc
clc
sbb
int
in
aad
sub
mov
pop
jno
pop
xchg
js
jnp
test
ret
or
pusha
jb
out
add
mov
mov
sti
out
inc
mov
push
inc
mov
xchg
dec
jae
xchg
(bad)
mov
sbb
adc
jg
add
ret
ja
pop
(bad)
pop
repz
out
mov
dec
sub
cmp
shl
cmp
mov
pop
cmps
(bad)
cmc
pop
xor
add
sub
sahf
jbe
imul
xor
test
lock
adc
cs
xlat
enter
(bad)
fld
cmp
scas
xor
movs
push
push
loop
mov
fstp
inc
cdq
ror
ror
adc
sti
mov
and
movs
aam
sar
jnp
sbb
fcom
mov
shl
sbb
pushf
int
xchg
sub
mov
adc
mov
inc
add
retf
stos
repnz
mov
aaa
aam
dec
sbb
fdivr
or
pop
push
mov
or
lock
daa
mov
rcr
jg
movs
cmp
popa
mov
addr16
mov
scas
jge
jmp
popa
mov
inc
sub
mov
ret
sub
push
push
cmps
xchg
nop
popa
mov
adc
rol
mov
xor
or
popa
mov
sbb
push
or
jle
add
aam
dec
jmp
sbb
cwde
push
stos
dec
scas
clc
icebp
cld
aam
pop
jae
mov
add
outs
cmc
mov
call
cmp
mov
push
add
push
sbb
popf
add
imul
push
pop
(bad)
mov
adc
cmps
xor
sbb
jmp
outs
cs
dec
popf
jae
das
in
mov
ret
sub
arpl
popf
pop
imul
and
js
mov
dec
jecxz
out
(bad)
jns
dec
in
sub
and
loopne
pushw
xor
mov
xchg
ins
push
mov
(bad)
repnz
mov
push
clc
fwait
xor
or
retf
leave
std
test
in
cli
or
xchg
jno
imul
jae
mov
imul
cmp
or
(bad)
inc
out
lea
repz
out
sar
xlat
out
loope
xchg
inc
mov
inc
enter
bound
jecxz
fs
retf
sbb
ds
mov
clc
push
mov
adc
rcr
dec
loopne
pop
mov
fadd
jmp
out
shr
mov
xchg
inc
stos
ret
clc
(bad)
jnp
aaa
mov
push
inc
imul
retf
jmp
inc
cs
pop
ficom
lahf
mov
gs
fadd
add
sti
test
or
stos
jo
dec
icebp
xchg
imul
loop
iret
call
cmp
cwde
mov
cmps
(bad)
jecxz
jecxz
(bad)
jnp
jp
rcr
inc
sbb
shr
adc
(bad)
sar
dec
fld
mov
in
ret
cmps
sub
lods
retf
in
ret
xchg
out
jo
inc
mov
adc
adc
repnz
add
pop
push
sti
jne
ins
mov
push
and
or
or
xchg
xor
rcl
in
dec
or
push
sub
or
push
into
scas
outs
mov
cmp
call
call
mov
lods
or
fisub
pop
mov
sub
push
or
push
out
addr16
push
mov
in
add
enter
and
hlt
and
pop
cmp
jbe
mov
add
xchg
mov
adc
pop
xchg
scas
sti
out
pop
in
call
push
jle
pusha
or
jne
inc
mov
add
sbb
add
push
outs
cmps
pop
inc
push
std
cdq
mov
mov
xor
test
cwde
test
jo
stos
stos
dec
sbb
into
cmp
bound
call
gs
outs
shl
and
jb
mov
pusha
icebp
in
sub
fnstenv
sbb
xor
imul
mov
xchg
out
stos
out
jg
in
pop
jno
test
in
cmp
mov
not
test
in
push
adc
jmp
mov
jmp
es
mov
aas
ds
sub
outs
jbe
xchg
push
test
mov
fnstenv
jbe
push
mov
iret
popf
neg
xchg
sbb
std
inc
mov
sahf
std
mov
in
sbb
add
jne
ds
jl
xchg
cmps
rol
jmp
xor
arpl
push
sahf
xchg
arpl
(bad)
jnp
retf
push
mov
mov
sti
out
add
fisub
cwde
movs
inc
int3
loopne
inc
call
loop
xor
push
pusha
xchg
int
sub
dec
adc
stc
mov
push
leave
lahf
js
sub
sbb
in
cwde
mov
pop
ds
dec
sbb
cmp
movs
in
sub
retf
out
lods
adc
test
add
mov
in
add
outs
(bad)
adc
push
and
ins
ror
xor
loope
jmp
jp
out
mov
imul
lods
out
repnz
rcr
cmp
repnz
jb
into
push
in
lods
and
pop
vpcmpgtb
out
xor
imul
inc
lods
mov
xor
dec
lds
out
xlat
jmp
xchg
dec
inc
and
inc
pop
push
test
mov
xor
in
loope
pop
xchg
inc
les
out
jge
into
ret
xor
shl
jl
mov
test
and
xor
stos
mov
cwde
nop
xor
repnz
jbe
and
or
fnstsw
cmc
and
das
add
pop
loopne
pop
lds
push
and
mov
mov
xchg
mov
xlat
mov
inc
dec
cmp
add
sbb
fisttp
dec
clc
iret
inc
fmul
sbb
clc
or
adc
push
sub
mov
and
and
mov
or
cwde
push
xor
and
retf
xchg
fsubrp
js
xor
pop
inc
mov
shr
(bad)
fild
retf
jmp
sti
jno
pop
ss
sub
cs
xor
call
push
adc
mov
xchg
frstor
cmp
xor
add
inc
mov
out
mov
xor
sub
mov
push
leave
pop
fisub
add
or
enter
sub
xchg
sub
or
test
out
cmp
or
dec
mov
adc
ret
shr
cld
lahf
inc
cs
div
mov
loop
mov
test
xor
cld
pop
cwde
dec
(bad)
dec
push
dec
mov
push
cs
xor
repnz
push
sbb
dec
mov
and
mov
jae
or
push
(bad)
das
std
pop
and
outs
loopne
pop
jmp
nop
adc
mov
mov
mov
cs
pop
fs
imul
push
imul
jmp
jmp
pop
inc
outs
mov
add
cli
xor
xchg
lock
pop
rep
mov
mov
dec
dec
int
scas
ret
shufps
and
mov
dec
fldcw
add
fwait
aas
jo
jo
cld
mov
jb
mov
pop
imul
mov
add
adc
mov
mov
ss
lea
mov
addr16
hlt
jae
or
xor
cmp
push
cmp
les
fwait
popa
call
jns
(bad)
loope
inc
or
aas
mov
inc
adc
add
and
test
inc
(bad)
sub
in
into
stc
jge
pop
fcomp
add
xor
xchg
pop
bound
xchg
pushw
fsub
vmread
push
adc
mov
(bad)
ret
popf
mov
inc
scas
xor
mov
jg
test
mov
add
lea
xor
adc
pop
stos
cmp
push
mov
inc
outs
int
out
adc
repz
je
jnp
sbb
xchg
fadd
dec
ret
jne
push
xor
outs
mov
shl
cmp
lahf
ds
dec
shl
mov
imul
xchg
xor
popa
ins
repnz
sub
pop
mov
and
xchg
fisttp
loop
dec
sbb
jnp
inc
inc
cwde
das
mov
pop
inc
test
jg
pop
lock
mov
ss
mov
sub
push
pop
iret
jp
jmp
ror
mul
mov
(bad)
fsub
test
cld
mov
jne
pop
jl
push
jl
pop
push
scas
(bad)
into
gs
add
call
cmp
add
stos
sti
add
xchg
int3
pop
adc
dec
fidivr
or
and
jnp
fdiv
push
and
mul
push
lahf
mov
outs
ins
adc
pop
(bad)
and
jmp
sbb
or
in
pushf
fisub
adc
dec
sbb
or
stc
repz
pushf
dec
mov
adc
jg
sbb
loopne
cld
sti
jmp
arpl
fcmove
fist
ins
out
fstp
fsubr
popf
daa
shl
shl
mov
lods
xor
fwait
jnp
jecxz
cmp
xchg
inc
cwde
jmp
jle
jle
add
and
into
mov
lds
int
jbe
scas
add
sbb
mov
ds
adc
cmps
push
and
stos
out
test
mov
in
addr16
imul
dec
aaa
frstor
pop
add
stos
fst
mov
outs
pop
and
js
push
xor
jmp
pop
inc
cld
xor
(bad)
in
shl
jl
fiadd
idiv
mov
loope
mov
xchg
lods
cmp
int
sbb
pop
push
sub
and
dec
xor
rol
mov
cs
xlat
push
imul
and
lea
fild
(bad)
int
dec
out
or
sub
push
adc
loopne
dec
outs
mov
call
leave
push
adc
xor
xor
dec
xor
push
push
retf
cmp
out
cmp
or
push
xchg
sbb
rcr
mov
test
or
xor
xchg
xchg
sar
sbb
aam
add
loope
sti
push
jbe
xchg
sbb
cwde
out
gs
jbe
jmp
dec
mov
xor
sub
dec
xor
cwde
fist
mov
mov
int
arpl
pushf
lea
mov
pop
adc
sbb
and
icebp
clc
scas
repz
mov
cmp
test
inc
inc
push
mov
ror
add
push
inc
sbb
outs
jbe
ins
movs
xchg
adc
xor
pop
mov
cmp
push
fst
sub
lods
movs
pop
sti
mov
cld
mov
repnz
out
ja
or
ss
push
xchg
add
sub
sub
and
push
xor
stc
mov
in
and
fstp
adc
in
icebp
push
sbb
jne
out
mov
and
or
and
bound
pop
call
sbb
and
mov
and
ins
mul
sti
rol
shl
inc
fild
cmps
ds
jb
inc
inc
add
push
popa
jecxz
loop
ficomp
push
jle
add
ins
adc
test
jecxz
out
mov
pop
jecxz
pop
lock
xchg
ja
push
pop
fcom
mov
push
(bad)
cdq
inc
mov
push
xchg
push
add
and
sbb
scas
xchg
or
fs
adc
clc
sbb
sahf
adc
(bad)
sbb
cmp
push
push
add
mov
mov
arpl
jge
dec
out
xor
jp
sub
pop
cdq
cmp
sbb
add
or
mov
inc
mov
cli
inc
xor
mov
in
cs
shl
repz
daa
push
xor
mov
cwde
push
inc
jns
push
lds
sub
jmp
mov
mov
sub
cmp
mov
fstp
lock
(bad)
cli
and
or
pop
xlat
repnz
inc
mov
cli
(bad)
aaa
push
(bad)
retf
lods
outs
add
cmp
push
dec
in
shl
adc
aad
cmp
add
movs
push
sbb
add
aaa
add
aaa
push
out
pop
bswap
add
and
adc
pop
bound
and
dec
sub
add
xchg
das
mov
mov
ja
adc
cmps
rcr
mov
cs
pop
test
or
lds
pop
scas
(bad)
clc
cwde
jns
inc
push
sub
loope
sub
push
inc
dec
jecxz
jo
or
xchg
push
cli
mov
or
loopne
jl
fwait
pop
loopne
aam
out
rcr
lahf
mov
fwait
mov
add
sub
rcr
nop
stos
jg
cmp
ficom
and
cs
fldcw
js
jmp
mov
xor
inc
cmp
jno
mov
or
pop
mov
int3
mov
inc
jg
or
jne
fs
xor
push
cmp
jb
(bad)
dec
sub
addr16
mov
push
imul
pushf
fcomip
adc
dec
cs
dec
out
inc
ja
or
cs
cdq
cmp
xor
lods
retf
mov
mov
push
and
xor
pop
mov
je
mov
std
pop
sbb
jl
dec
cdq
test
popa
adc
xchg
jbe
(bad)
jne
xlat
sti
mov
jne
adc
int3
or
mov
inc
sub
daa
(bad)
clc
pop
std
outs
cmp
pop
ja
cmps
push
sbb
mov
jle
and
cmps
jmp
and
(bad)
stc
ret
sub
xchg
mov
jno
add
clc
add
ins
sub
stc
mov
ins
pop
fsubrp
lods
xrelease
cmp
dec
or
sbb
repz
adc
xchg
cwde
xchg
jne
sbb
jp
push
xchg
jl
fst
mov
jge
mov
push
outs
(bad)
pusha
xor
jnp
xor
push
enter
jmp
sbb
movs
and
xchg
pop
pop
xor
mov
cld
(bad)
stos
sbb
nop
repnz
cld
sbb
ret
xchg
movs
jbe
imul
icebp
mov
ins
inc
mov
push
push
adc
inc
add
aas
int
push
xor
or
(bad)
inc
push
int3
push
out
sahf
pusha
test
retf
(bad)
out
cmp
or
icebp
(bad)
or
push
inc
pop
call
mov
int
xchg
sbb
mov
push
jecxz
xchg
sbb
cmps
test
daa
loop
push
ja
jg
dec
pop
mov
fst
daa
test
test
push
cmps
pop
mov
sbb
push
mov
or
or
shl
inc
and
pop
xchg
(bad)
rol
or
push
shr
daa
out
inc
push
repz
and
jecxz
outs
mov
or
or
(bad)
mov
mov
mov
sbb
or
test
pop
sbb
cdq
mov
popa
add
pop
cmp
outs
or
mov
arpl
inc
das
pop
ins
pop
scas
push
dec
xlat
push
pop
sbb
fcmovnbe
sbb
or
out
movaps
cwde
xchg
xchg
xchg
mov
dec
jle
sub
or
sbb
mov
and
addr16
fild
dec
pop
and
ss
dec
fsub
adc
les
xor
mov
out
jg
push
dec
clc
repnz
cli
inc
add
and
push
pop
hlt
pop
adc
ret
push
retf
adc
dec
xchg
add
cmp
mov
and
or
nop
sti
pop
nop
fcomp
loope
mov
cmp
test
push
cs
mov
xchg
push
cmp
out
fsin
(bad)
aam
movs
aas
hlt
xchg
mov
add
lods
in
xchg
cmp
ficomp
stos
mov
push
lods
int
movs
sbb
jmp
push
call
lods
inc
pop
test
out
inc
xchg
sub
mov
push
mov
ins
ret
xchg
cwde
xchg
popf
or
sub
jnp
test
test
cmp
lock
mov
xchg
mov
xchg
aad
ficom
retf
cmp
in
sbb
dec
add
jnp
lods
push
and
fwait
mov
xor
shl
cmp
dec
lods
cmp
xchg
lods
mov
in
pop
cwde
inc
ins
sbb
or
jnp
pop
retf
mov
in
fdivr
das
in
dec
cmp
test
loope
out
mov
inc
in
aas
packuswb
pop
jne
inc
mov
cdq
mov
std
mov
jnp
pop
out
jle
das
mov
fcmovbe
(bad)
push
fwait
mov
bound
sti
jne
pop
in
and
imul
mov
mov
arpl
xchg
xor
sub
mov
out
push
shr
sub
fcom
or
jmp
je
xor
std
sbb
mov
push
xchg
ins
add
lahf
ins
add
mov
jg
push
push
and
adc
fs
test
dec
jno
dec
cwde
cmp
into
push
or
dec
xchg
sbb
and
movs
stos
sbb
sbb
loop
or
push
(bad)
lods
aam
jns
popf
xchg
test
push
je
fld
repz
mov
lods
xchg
xchg
add
dec
push
add
hlt
sbb
ret
gs
add
add
es
xchg
rcl
fisubr
aaa
std
inc
lahf
push
pop
(bad)
(bad)
mov
sub
inc
jbe
and
jmp
cmp
xchg
jnp
ja
clc
fild
jae
sub
(bad)
sbb
mov
mov
out
retf
or
out
(bad)
sti
(bad)
lock
mov
loope
in
jno
inc
jo
or
ret
cwde
aas
je
and
imul
add
lds
xchg
pop
js
dec
jl
addr16
test
mov
ror
sbb
aad
mov
and
adc
leave
push
sbb
lea
sub
adc
shl
mov
mov
mov
sub
mov
inc
or
xchg
jecxz
push
retf
jp
jmp
push
rol
mov
jne
int
out
sbb
xchg
sub
push
cli
icebp
(bad)
stos
mov
sbb
add
xor
sbb
inc
xor
add
lock
jecxz
mov
push
or
retf
call
xchg
pop
xlat
or
mov
dec
jecxz
movs
repz
sti
int3
sub
test
int
and
mov
shr
jbe
cmp
cmc
out
jo
cld
es
mov
mov
mov
add
out
jmp
or
jp
ins
das
mov
fild
imul
cdq
mov
inc
call
jmp
aad
mov
xchg
sbb
inc
or
jb
outs
sbb
cs
mov
jnp
adc
mov
lahf
loop
sub
mov
dec
loope
clc
cli
icebp
mov
daa
lods
mov
push
pop
xlat
test
inc
stos
fist
cmc
inc
outs
pop
cmps
push
and
and
je
dec
(bad)
(bad)
sub
push
sbb
jne
clc
mov
jb
adc
loopne
or
push
push
fwait
sub
movs
call
cmp
xchg
lds
test
ret
xchg
idiv
add
push
pop
(bad)
retf
push
mov
lock
not
sbb
pop
xchg
xchg
enter
fwait
pop
lahf
cdq
scas
cmp
stc
jnp
addr16
ins
das
retf
cwde
outs
xchg
adc
xlat
(bad)
mov
jae
dec
adc
or
and
outs
and
adc
mov
sahf
push
call
pop
shl
xchg
fldcw
out
ss
sbb
jmp
loop
call
loope
ror
xchg
jl
inc
loope
mov
and
jl
cmps
ret
jo
inc
inc
mov
clc
push
dec
ror
ror
jmp
stos
jle
xchg
pop
jmp
add
sub
dec
sti
mov
xor
add
popf
xchg
outs
push
inc
mov
or
mov
inc
lock
adc
sub
addr16
adc
mov
fidiv
adc
mov
mov
dec
sbb
mov
mov
mov
out
inc
fldcw
sahf
xchg
ss
pop
dec
mov
in
cs
push
sub
lea
mov
xchg
add
push
sbb
push
fld
in
aas
sbb
js
not
mov
icebp
loope
cmc
call
fs
jecxz
scas
xchg
mov
jl
push
outs
popf
js
(bad)
mov
cmp
rcr
xor
lea
movs
cmp
movs
xlat
inc
pop
xchg
and
jmp
fld
ds
pop
jmp
jp
mov
call
mov
mov
(bad)
(bad)
in
xchg
sub
push
stos
mov
pop
aam
sub
dec
inc
(bad)
cmp
sub
or
inc
pushf
test
jnp
jnp
out
pushf
int
mov
cmp
out
xlat
popa
sti
pop
cmp
dec
inc
ja
lock
and
xchg
test
mov
cmp
jle
repz
arpl
cli
add
call
sar
fdiv
xor
scas
sub
into
jnp
jns
mov
adc
(bad)
call
in
popf
test
or
and
(bad)
sub
fsubr
addr16
mov
push
jo
mov
mov
xor
inc
das
mov
mov
shl
scas
imul
and
cdq
ins
jo
out
add
inc
and
or
in
inc
scas
jns
or
xor
popa
add
xor
addr16
adc
rcr
push
fwait
inc
lds
mov
sahf
outs
(bad)
pop
(bad)
pop
add
jmp
push
outs
jmp
mov
cmp
shl
mov
jbe
xchg
call
mov
xchg
or
xchg
mov
and
inc
mov
mov
test
sub
gs
retf
repz
pop
mov
cdq
or
push
ds
call
and
aam
aaa
aam
dec
rol
lods
xchg
or
arpl
jns
addr16
sahf
sti
jmp
dec
mov
xchg
iret
es
(bad)
pushf
mov
push
dec
icebp
repz
rcl
mov
inc
inc
push
arpl
test
cmp
and
adc
dec
push
stos
push
mov
adc
adc
call
cmc
xchg
xchg
mov
out
mov
into
push
push
outs
hlt
pop
xor
and
mov
mov
hlt
dec
clc
ss
daa
xchg
test
cmc
push
push
xor
jp
imul
cdq
popa
dec
mov
jns
add
cwde
or
(bad)
lock
neg
sub
stos
sub
in
cli
mov
push
rcl
pop
sub
pop
jne
aas
ror
neg
jb
ror
aaa
hlt
xor
pop
push
gs
es
inc
or
and
nop
sub
cdq
and
sar
mov
(bad)
adc
or
scas
mov
(bad)
add
dec
(bad)
sbb
jp
cmps
lock
retf
xor
test
or
stc
std
mov
btc
scas
push
mov
cmp
sbb
adc
je
div
jno
xchg
(bad)
mov
push
fiadd
pop
dec
sar
outs
and
mov
or
jg
adc
ss
or
and
cmps
lods
sbb
push
sub
outs
out
mov
sub
js
dec
jmp
aaa
mov
pop
(bad)
jle
fst
pop
(bad)
pusha
loope
xor
xor
dec
cld
mov
push
push
jmp
pusha
mov
adc
xchg
das
inc
cmp
test
jmp
push
push
cmc
imul
ret
vmovsldup
jp
push
or
out
adc
fwait
mov
xor
jg
cmps
in
mov
ins
arpl
mov
cmp
dec
sbb
xchg
sub
fistp
ret
xchg
xor
ins
hlt
test
and
fwait
scas
popf
pusha
jne
inc
xchg
cmc
movs
mov
push
fist
add
and
hlt
clc
sahf
mov
mov
sub
shl
test
call
icebp
out
jo
sub
adc
test
leave
or
push
fld
popf
xor
clc
cmp
imul
jbe
jb
leave
mov
test
sbb
mov
push
pop
or
and
lahf
xor
loopne
cmps
imul
retf
xchg
pop
int
jo
retf
jecxz
popa
stos
jecxz
mov
jno
int3
jge
ss
aas
xchg
add
or
nop
sub
jnp
ret
test
sbb
push
fisttp
pop
push
inc
and
xor
pop
jo
mov
and
push
or
sbb
ret
or
inc
or
mov
test
div
and
inc
sbb
mov
call
or
sub
mov
dec
in
push
iret
fistp
mov
ror
scas
test
pop
sub
jo
sbb
push
(bad)
jecxz
std
fwait
inc
adc
xchg
aam
clc
cwde
out
dec
ret
call
pop
scas
push
movs
xlat
setne
mov
dec
cmp
cmps
aaa
xchg
int
adc
jp
cs
pop
jmp
shr
mov
out
push
lods
add
fdiv
out
pop
js
in
gs
ins
es
xchg
sbb
sub
jns
adc
(bad)
(bad)
mov
out
sahf
int
add
fwait
shl
xchg
(bad)
mov
push
popf
and
inc
push
mov
mov
lods
div
dec
cmp
and
push
aad
inc
mov
hlt
pop
or
mov
sbb
imul
mov
mov
retf
pusha
stos
inc
mov
rcr
mov
inc
outs
cmp
(bad)
add
or
lea
adc
test
pop
jg
scas
fld
stc
and
mov
fnstcw
call
jne
cwde
aam
or
vzeroupper
adc
(bad)
fidivr
xor
dec
sbb
call
fidivr
aas
psadbw
mov
cmp
into
cwde
call
jo
imul
inc
scas
not
xor
add
pop
cld
sysenter
ja
imul
in
inc
jg
sbb
sbb
xor
aaa
sub
xor
sbb
mov
sar
or
mov
popf
xchg
imul
test
push
sub
push
aas
mov
xor
data16
sbb
xor
add
xchg
cmp
mov
add
rcr
(bad)
sbb
mov
jmp
or
mov
and
adc
nop
dec
push
call
popa
ja
cmp
add
rcr
push
fbstp
xchg
jge
mov
in
adc
sbb
ins
jp
cmp
cli
sti
sbb
adc
mov
inc
imul
loopne
test
cmp
movs
jp
sbb
dec
dec
xor
loopne
das
sbb
adc
sbb
jmp
fdivr
and
loope
mov
and
mov
fistp
xchg
push
sub
pop
sbb
popf
ds
jmp
pusha
es
cmps
shl
fnstenv
sbb
inc
and
lock
stc
sub
xor
mov
arpl
fisttp
lock
aaa
mov
ror
rcl
push
lea
push
inc
xchg
retf
(bad)
pop
ficom
mov
cs
fimul
cdq
fist
clc
sbb
adc
int3
es
mov
jnp
cmps
cmc
pop
ins
ds
push
adc
out
cmps
stos
sub
cmps
cmp
repz
test
dec
in
adc
icebp
sbb
sar
cdq
xor
pop
sbb
jbe
pop
mov
sub
(bad)
rol
cmp
push
pop
loop
enter
imul
mov
push
xchg
fld
mov
imul
out
outs
mov
sub
jb
out
test
sbb
out
hlt
mov
scas
adc
jmp
pop
mov
pop
xchg
xor
sub
fisubr
lods
ret
movs
sub
dec
ja
pusha
cmp
std
ja
int
scas
in
mov
ins
mov
ret
jl
add
xchg
pusha
movs
inc
(bad)
sti
mov
sub
in
fdiv
popf
add
push
repnz
imul
jno
(bad)
adc
xchg
test
rcl
mov
in
mov
push
popa
clc
pop
fild
aam
enter
xchg
push
xchg
fwait
call
jle
cmp
stc
mov
or
mov
clc
mov
test
call
jecxz
or
out
inc
js
push
mov
inc
rcr
outs
cdq
sub
stos
aaa
xchg
loopne
aam
mov
xor
std
in
loopne
push
dec
xchg
mov
cs
inc
sahf
es
xchg
add
ja
pop
iret
dec
mov
xchg
jne
sbb
pop
repnz
xor
sub
mov
imul
(bad)
jbe
pusha
and
and
xchg
loope
inc
push
inc
dec
and
pop
xor
ret
scas
dec
outs
scas
mov
rcl
jbe
inc
adc
pop
adc
inc
fmul
xchg
dec
pushf
cli
icebp
(bad)
and
cmp
mov
dec
xor
push
mov
pop
popa
mov
mov
mov
sahf
pop
loopne
jns
dec
aam
cli
inc
call
sbb
ja
lods
(bad)
mov
es
dec
jecxz
dec
rcr
out
or
sti
cmp
pusha
outs
mov
xchg
hlt
scas
fs
lahf
pop
jge
inc
cmp
outs
mov
mov
mov
add
movs
pop
call
jno
cdq
cmps
dec
call
shl
inc
out
cmp
mov
aam
jmp
cwde
imul
repnz
push
sbb
adc
xor
cli
dec
xchg
ja
inc
movs
mov
test
mov
cmp
mov
fisub
push
pusha
and
stos
jp
or
xchg
sbb
fiadd
push
jmp
sbb
int3
std
loop
sbb
dec
add
adc
dec
hlt
jmp
or
(bad)
leave
sbb
pop
data16
out
push
scas
cmp
pusha
cmp
xlat
add
dec
aad
outs
mov
call
xor
xchg
loopne
arpl
cmp
jl
ds
xchg
inc
pop
or
std
outs
pop
xchg
xor
fistp
pop
xchg
jl
std
adc
mov
cs
cmp
xchg
dec
sub
movs
iret
test
pop
push
and
xchg
xchg
and
xchg
daa
mov
jecxz
inc
inc
jmp
popa
out
scas
jle
imul
(bad)
mov
or
sub
(bad)
icebp
fisub
jno
into
jbe
adc
stos
out
retf
cmc
cmps
out
xchg
mov
lock
jbe
repz
or
cmc
fstp
pushw
mov
xlat
int3
jmp
cmp
test
int
mov
std
mov
stos
mov
iret
out
fneni(8087
cmp
fstp
ror
inc
jecxz
mov
(bad)
js
mov
push
add
mov
in
cli
int
lods
lea
movs
xchg
js
iret
in
es
and
xchg
xchg
cmp
or
jle
dec
lods
test
jmp
fptan
dec
adc
mov
(bad)
out
(bad)
pop
test
jbe
mov
jo
shl
(bad)
xchg
and
ror
pop
inc
or
sub
(bad)
bound
push
(bad)
fnstsw
hlt
fld
pop
sub
cwde
(bad)
xlat
ror
inc
push
es
(bad)
fdivrp
xor
(bad)
jmp
clc
mov
aam
push
les
lods
mov
xor
ret
inc
stc
into
mov
nop
cmp
lea
ror
je
mov
xchg
mov
mov
push
jl
loop
mov
xor
xchg
pop
imul
stos
mov
std
jo
dec
adc
out
loopne
sub
xor
or
push
ins
dec
scas
jo
push
adc
jmp
xlat
in
int3
repnz
das
mov
and
lea
(bad)
cmps
sub
fbld
repnz
leave
call
adc
push
push
add
lods
aam
sbb
ss
mov
pusha
call
(bad)
in
xor
in
out
jo
icebp
add
xor
repz
enter
push
cmp
test
out
cld
jp
push
and
sbb
xor
inc
cs
mov
fwait
push
sbb
cmp
lods
retf
xchg
add
in
mov
movs
bound
sbb
imul
imul
mov
cmp
push
hlt
push
adc
xchg
lock
je
adc
aas
clc
xchg
out
retf
(bad)
in
outs
popa
fst
out
lods
cld
sbb
push
or
sub
and
push
sti
test
fisub
aad
and
cmp
(bad)
jnp
fdivr
in
xor
sahf
pop
push
mov
mov
ja
xchg
cmps
loope
sar
sbb
or
ja
mov
inc
aas
arpl
sbb
stc
mov
inc
in
xor
(bad)
mov
inc
bound
sub
xchg
adc
xchg
cmp
adc
sub
call
in
mov
dec
das
lds
call
pop
adc
(bad)
(bad)
jmp
xlat
sbb
dec
retf
mov
mov
fisub
call
outs
cld
rcr
(bad)
ins
xlat
push
out
out
xchg
in
stos
icebp
pop
ss
and
aad
imul
and
sub
test
xor
jmp
push
pushf
in
jbe
je
adc
imul
jge
cld
not
add
in
fld
push
mov
shr
test
lods
cli
xchg
jmp
jno
mov
pop
mov
repz
jns
xchg
jle
rcr
(bad)
pop
mov
cmps
retf
es
ja
hlt
pop
out
hlt
pop
mov
test
iret
or
inc
sbb
push
lods
or
int
mov
add
mov
mov
fisubr
mov
outs
sub
out
movs
jns
int
jns
mov
jecxz
outs
and
(bad)
cmp
movs
jecxz
xlat
and
ins
aam
(bad)
stc
add
fdiv
jb
repnz
or
mov
pop
fisttp
cmp
mov
add
inc
jle
pop
es
push
sub
pop
out
test
add
mov
shl
pop
sti
call
cld
(bad)
int
nop
cdq
xchg
sbb
bnd
nop
jns
xor
and
jmp
loopne
mov
push
push
push
movs
mov
mov
ret
fincstp
icebp
ror
mov
hlt
cmp
inc
mov
cmp
in
adc
int
test
inc
loop
xchg
mov
lods
cmp
int
shl
lock
imul
pop
and
cld
ja
dec
mov
mov
or
pop
mov
inc
push
pusha
sahf
stc
or
cmc
or
cmp
push
aam
jnp
retf
paddq
adc
push
jmp
aas
mov
dec
mov
inc
mov
and
fdiv
dec
xor
pop
jg
inc
scas
jno
into
jns
mov
repnz
pop
sbb
sub
sbb
xchg
mov
scas
push
or
sub
mov
and
repnz
dec
and
in
push
cwde
jo
mov
dec
jmp
and
push
inc
ds
movs
sbb
pop
adc
sbb
arpl
ret
sub
mov
jbe
stos
daa
aad
mov
xchg
stos
(bad)
mov
xchg
xor
fdiv
shr
push
jecxz
jmp
outs
cs
daa
test
stos
test
mov
cld
mov
cmps
inc
jmp
inc
pop
jbe
(bad)
xor
dec
cld
push
lods
das
jb
std
js
dec
pushf
xor
xchg
test
pop
pop
push
mov
xor
enter
xor
stos
stos
fidiv
mov
mov
aas
jae
jge
les
and
and
pop
sub
movs
loopne
or
lds
lea
and
add
or
int3
sub
mov
scas
out
xchg
push
xlat
stos
sub
fs
add
lahf
xlat
cdq
fstp
imul
call
rcl
movs
ret
jmp
mov
(bad)
fsubr
push
les
cmc
pop
cmp
(bad)
std
ret
or
jne
cmp
pop
cmp
je
pop
jno
mov
fimul
or
or
sub
mov
cmp
(bad)
fs
ja
inc
bound
out
mov
inc
jmp
mov
out
mov
push
mov
imul
jae
daa
adc
sub
add
mov
push
push
pop
cmp
cmc
xor
dec
jb
jmp
sbb
or
adc
fs
mov
int
jns
ret
add
xchg
cwde
jb
xor
inc
push
or
retf
adc
pushf
retf
call
hlt
in
jecxz
mov
push
pop
(bad)
mov
sbb
mov
xchg
clc
movs
retf
mov
bound
scas
jno
rcl
xchg
jb
into
and
scas
in
stc
adc
xor
btc
or
mov
call
sub
cmp
mov
xlat
jge
add
adc
push
push
lds
jnp
aas
inc
xor
loopne
push
and
inc
push
stc
shl
jb
rcr
in
xchg
jle
je
jno
clc
inc
adc
jge
sbb
cmp
ret
xbegin
and
adc
mov
mov
pop
jno
cs
cmp
push
sub
lods
jmp
mov
xlat
cmp
fsub
scas
in
mov
movs
add
sbb
loopne
imul
rcl
jp
mov
push
mov
stos
push
adc
mov
popa
out
push
push
sar
push
push
and
loopne
sub
push
aam
cmp
test
push
stos
aaa
mov
adc
dec
fisub
stos
xor
adc
mov
sub
dec
adc
push
pop
outs
jb
xchg
lods
call
mov
enter
fwait
mov
mov
mov
adc
cdq
adc
push
sbb
xchg
xor
cdq
rcr
mov
xchg
ins
out
stc
push
or
push
and
call
cmp
pop
or
pop
(bad)
jno
ficomp
sti
push
cmp
js
mov
lock
add
aad
and
xlat
xchg
push
push
adc
jno
push
cmp
outs
jnp
sbb
addr16
xchg
push
out
mov
mov
inc
and
cmp
mov
inc
call
jnp
daa
sub
jmp
jl
xchg
test
push
nop
xchg
into
iret
jae
stc
mov
dec
test
das
xchg
pushf
cmp
cmps
cmp
(bad)
cli
jnp
in
jmp
cmp
test
retf
sbb
fiadd
retf
es
das
sub
movs
test
ins
outs
inc
mov
hlt
pushf
iret
int
rcl
jle
sbb
dec
xchg
sub
std
jmp
mov
mov
mov
push
push
out
xor
jne
dec
add
or
shl
dec
mov
lds
push
cs
push
pop
adc
adc
movs
add
retf
(bad)
jl
test
push
out
inc
shr
sbb
and
lahf
lahf
rep
jg
xchg
mov
fdiv
ret
imul
(bad)
pushf
mov
add
and
pop
mov
outs
sbb
mov
mov
mov
inc
adc
stc
arpl
out
out
cmp
mov
loope
dec
cmp
xchg
mov
movs
ror
repz
push
mov
pop
pop
or
fistp
mov
add
jecxz
pop
call
cmp
push
cdq
fst
xor
sti
arpl
(bad)
jo
sbb
loopne
pop
fwait
in
mov
mov
cmp
out
popa
push
and
and
dec
jae
mov
or
sub
mov
js
jecxz
jl
add
sub
jmp
and
clc
int3
sahf
stos
aad
pop
sbb
pusha
sbb
sub
xor
sub
dec
sub
sar
sbb
(bad)
mov
push
inc
inc
imul
mov
jmp
dec
mov
mov
cs
(bad)
add
mov
mov
pop
push
ret
aas
pop
push
sbb
mov
aam
mov
out
into
add
mov
mov
pop
lods
jns
push
inc
pushf
data16
cdq
pop
repnz
inc
or
dec
cmps
mov
div
add
out
int
jo
push
add
jl
jmp
push
cdq
jle
push
mov
cmp
retf
mov
iret
les
in
and
repz
int3
sub
out
(bad)
or
inc
xor
cs
lods
mov
mov
pop
loopne
or
push
add
fild
or
in
push
adc
and
cmp
fsub
push
sar
daa
xchg
cmps
scas
mov
or
lods
fisub
and
int
sahf
add
pop
mov
daa
xor
cmc
push
iret
jle
sbb
clc
mov
imul
hlt
call
xchg
aas
dec
sbb
xor
push
sbb
fdiv
or
jp
adc
mov
mov
jle
mov
cvtps2pi
fs
mov
jbe
push
cld
test
daa
pusha
(bad)
fldcw
mov
mov
sbb
call
sbb
stos
mov
dec
push
pop
inc
aaa
mov
pop
xor
aaa
jo
xlat
mov
sub
cdq
rcl
pop
inc
jb
pusha
lods
(bad)
rcr
pop
push
sbb
cwde
ret
rep
test
repnz
movs
idiv
clc
imul
sbb
xlat
gs
js
stc
int
cli
jae
adc
stc
es
(bad)
(bad)
hlt
mov
outs
jmp
nop
jb
icebp
xchg
call
das
pop
xchg
ret
hlt
loope
or
push
in
fsub
xchg
dec
xor
idiv
fiadd
push
xchg
xor
test
lods
std
and
es
pop
and
out
pop
lock
pop
out
jmp
xchg
xchg
fist
mov
push
int3
mov
or
retf
(bad)
das
(bad)
fst
or
gs
dec
lea
and
dec
fiadd
mov
scas
dec
pop
daa
(bad)
les
mov
out
dec
sbb
sbb
cmp
(bad)
and
inc
mov
ror
jbe
jbe
or
cmp
outs
and
jne
pop
cmps
sub
test
popa
nop
ret
add
adc
stc
sbb
sub
lods
add
mov
or
pop
mov
cmp
sub
dec
mov
test
inc
or
arpl
into
rol
mov
sub
icebp
mov
pop
movs
div
ud2
dec
les
aaa
pop
xor
and
test
or
inc
adc
fcomp
pop
xchg
add
in
mov
iret
add
inc
inc
inc
push
rcl
lahf
sbb
leave
inc
xor
fwait
cli
add
loopne
jbe
imul
repnz
lods
pop
pop
push
push
retf
neg
fisubr
xchg
sbb
(bad)
or
sbb
test
sbb
pop
jecxz
loop
sahf
scas
adc
mov
ror
arpl
stos
sar
sub
bound
mov
addr16
ret
sahf
stos
dec
adc
fwait
minps
mov
scas
(bad)
push
or
and
retf
loop
je
mov
enter
lods
mov
mov
daa
cli
cmp
inc
jge
fwait
inc
add
mov
mov
enter
loopne
sub
(bad)
fadd
repnz
sub
in
adc
push
cwde
jnp
in
xor
and
push
dec
pop
mov
aad
mov
inc
fs
mov
fsubr
mov
je
outs
fs
in
xchg
icebp
and
or
(bad)
push
cmp
inc
cmp
xchg
aaa
test
xchg
ins
repz
and
jae
lea
xchg
mov
cmp
jecxz
js
jg
mov
mov
mov
cmc
je
jl
je
cmp
pop
xor
sub
xor
mov
(bad)
pop
cmps
and
pop
addr16
adc
or
sub
sbb
icebp
pop
pusha
push
into
lock
mov
fimul
fsub
lock
mov
(bad)
pop
push
call
repz
ja
xchg
outs
aam
push
stc
fwait
adc
mov
xchg
cmc
ins
or
cmps
mov
pop
inc
movs
call
adc
das
cmp
into
cmp
mov
fdivr
ror
jmp
(bad)
loope
push
(bad)
les
popf
mov
mov
enter
pop
jae
call
test
int
outs
enter
or
cmp
lock
gs
pop
sub
and
(bad)
nop
js
and
xchg
int
xchg
stc
xor
hlt
call
and
retf
cmp
cld
sub
sbb
jnp
leave
iret
cld
jae
das
dec
jns
ss
push
sbb
cmps
mov
and
push
fcom
jae
shl
sub
or
dec
dec
mov
cmp
pop
cmps
push
pop
mov
fs
ret
(bad)
dec
sahf
dec
and
in
push
cmps
inc
in
ficom
lahf
call
les
inc
cmp
dec
mov
inc
mov
aad
push
fcom
sub
fwait
ss
push
xchg
or
ss
fchs
xchg
add
jmp
dec
add
push
dec
arpl
daa
stos
push
shl
in
sti
push
sysret
sub
ja
pop
(bad)
mov
xor
and
(bad)
shl
ret
cmp
shl
xor
pushf
and
out
cli
stos
std
ja
jae
dec
pop
inc
(bad)
stos
loop
enter
jae
call
inc
or
sbb
fimul
pop
jecxz
fcmovnu
std
mov
das
xchg
in
dec
pop
fistp
sbb
jne
test
jne
lods
push
movs
sbb
ficomp
lahf
fld
js
mov
fidivr
outs
movs
and
loop
and
and
add
hlt
sub
xor
popa
mov
pushf
aam
and
ret
jbe
jne
xor
aas
mov
je
in
and
jmp
stc
jp
pop
cld
sub
scas
into
retf
inc
ret
aad
mov
mov
jnp
fst
pop
pop
outs
sub
fdivrp
fstp
in
adc
cdq
push
jle
test
mov
scas
nop
div
rcl
mov
sbb
repz
cmc
xchg
jp
sub
shl
push
gs
mov
cmc
xor
inc
cmp
mov
test
shl
std
sbb
call
or
mov
adc
data16
imul
mov
test
inc
ss
jne
fs
retf
adc
xchg
cmp
mov
adc
sub
pop
xchg
retf
xchg
mov
int
test
inc
fcomp
hlt
lea
das
xor
stos
repz
dec
sbb
(bad)
out
cmc
sbb
in
push
cmp
fldenv
sub
scas
int3
in
cmp
push
xchg
pop
(bad)
test
cmp
cmp
jns
enter
jns
ins
jge
test
xchg
cmc
and
(bad)
nop
sub
scas
xchg
mov
push
or
pop
jecxz
pop
cwde
mov
jle
sbb
rcr
daa
or
and
cwde
dec
dec
shr
call
sahf
xchg
jge
(bad)
call
or
ftst
lea
rcr
dec
or
in
pop
clc
pop
sub
fdiv
das
pop
jbe
and
test
(bad)
xchg
mov
and
bound
popf
test
aaa
fisub
jmp
das
rol
add
popa
mov
sub
jp
pop
xor
imul
out
and
and
enter
or
and
outs
sar
xchg
sahf
es
inc
int
inc
rcr
clc
pop
push
cmpxchg
and
test
push
mov
shl
out
cs
addr16
lahf
adc
jge
(bad)
dec
imul
dec
cdq
ss
and
mov
xchg
ret
sahf
cmp
loope
test
sbb
fs
push
clc
push
dec
xchg
xchg
mov
lahf
mov
mov
in
fwait
(bad)
rcl
mov
pusha
sbb
outs
ficom
add
or
loope
and
das
call
int3
mov
shl
adc
xor
mov
xor
push
cli
mov
and
dec
or
fidiv
mov
pop
jp
and
mov
cmp
femms
cmc
xor
xchg
push
and
pop
test
sbb
push
inc
das
mov
scas
pushf
leave
xchg
retf
rol
or
(bad)
mov
cmp
adc
movs
push
dec
stc
pusha
jnp
add
ret
or
xor
mov
int
push
arpl
cmps
and
out
jmp
repnz
pusha
inc
test
pop
ret
ins
rcl
xor
xor
or
adc
call
pop
push
adc
arpl
sub
mov
(bad)
mov
fdivr
je
in
xor
jne
int3
jge
stos
push
psubw
pop
push
jno
xchg
mov
les
and
(bad)
call
mov
sbb
mov
outs
test
icebp
adc
pop
iret
pushf
mov
cmp
pop
dec
pop
nop
push
sar
clc
repnz
daa
ss
cmps
sbb
int
scas
cmps
test
sub
bound
mov
sahf
fs
mov
into
sub
xor
jl
into
xchg
sub
lea
loopne
(bad)
fcom
adc
sbb
mov
stos
mov
mov
fld
je
psllw
mov
mov
jge
push
ds
xor
push
push
(bad)
or
into
pop
push
test
sbb
lods
push
cmp
jmp
push
call
xor
xchg
push
sbb
mov
inc
dec
std
pusha
sbb
inc
dec
mov
movs
jns
mov
or
clc
pop
addr16
push
xchg
push
into
inc
ficomp
xchg
xchg
daa
sub
cmp
(bad)
shl
and
(bad)
cmp
lods
lea
push
pop
cli
sub
and
mov
dec
out
sahf
je
dec
leave
inc
out
push
add
shl
data16
or
(bad)
out
push
and
mov
inc
std
fsubr
iret
bt
dec
xchg
test
out
fcomp
xchg
pushf
rcr
icebp
fsub
mov
mov
mov
movs
xchg
jge
ret
test
inc
push
ss
scas
mov
ret
xchg
mov
cmp
fs
push
jno
cmp
mov
xchg
rcl
pop
cmps
leave
sbb
das
lahf
daa
ficom
xor
lods
lea
fwait
jae
stos
mov
inc
push
inc
cmp
aaa
add
push
test
je
call
pavgb
mul
mov
push
mov
dec
out
lods
or
cmp
nop
jmp
sub
sub
inc
xor
pop
mov
mov
or
jle
cmp
or
cmp
xor
push
std
sbb
sbb
add
test
or
jae
xor
cmp
jae
ins
or
les
retw
nop
xchg
in
push
push
cdq
cmps
jmp
xchg
jge
cmp
out
(bad)
xor
pop
fdivr
cmp
or
sti
xchg
sbb
and
sub
mov
jne
mov
cld
dec
sti
fistp
mov
push
mov
push
dec
ret
dec
ds
rcl
hlt
mov
mov
mov
sbb
cmp
retf
mov
retf
adc
arpl
jo
add
stos
mov
mov
adc
xchg
pusha
xchg
ja
push
mov
jae
or
not
shl
cmp
hlt
cmc
ss
adc
cmps
sub
add
cmp
sub
xor
mov
js
inc
mov
adc
inc
out
leave
xor
out
movs
imul
aas
sbb
jl
mov
jmp
cmp
clc
sbb
jns
mov
xchg
(bad)
jae
das
jle
pop
aaa
ins
imul
jp
std
pop
fcomp
aad
push
in
adc
les
mov
sub
cmp
push
stc
sub
adc
adc
adc
or
push
inc
out
lock
xchg
inc
add
sbb
add
sbb
aad
mov
xchg
add
pop
into
adc
dec
add
aaa
jp
inc
jmp
jge
adc
jmp
(bad)
jecxz
aas
push
push
das
cld
inc
inc
call
repz
(bad)
cli
sbb
aam
cdq
inc
and
cmp
jecxz
dec
push
loope
jecxz
loop
nop
mov
or
pushf
or
repz
stos
test
mov
in
mov
hlt
push
pop
mov
in
lods
adc
jb
or
mov
jmp
xchg
into
mov
inc
pop
dec
std
mov
div
and
pop
arpl
mov
xchg
call
dec
adc
test
mov
fstp
fisubr
mov
jno
stc
enter
pushf
mov
pop
adc
mov
je
sub
xor
add
rcl
jg
inc
test
add
pushf
push
adc
sub
jle
mov
test
jbe
mov
xor
mov
adc
fsubr
jbe
jno
inc
ror
inc
and
adc
ret
push
fidiv
rcr
iret
mov
inc
shr
outs
clc
pop
lods
ds
in
lock
fst
mov
adc
mov
lea
iret
iret
aad
inc
imul
mov
jp
daa
fcomp
fnsave
jmp
lods
imul
xchg
sub
into
lea
stc
idiv
ss
jecxz
or
add
into
pop
xchg
popa
add
repnz
stc
mov
mov
mov
push
js
push
cmp
hlt
int3
xchg
call
mov
rol
xor
jo
cli
mov
pop
cmps
dec
nop
push
int
sub
std
push
cmp
sbb
(bad)
jl
shl
shl
in
mov
jecxz
jmp
mov
popf
add
jb
jnp
cmp
stc
scas
mov
ret
adc
jb
pop
cmps
inc
mov
(bad)
pop
jo
cmc
rcl
and
sbb
imul
arpl
mov
inc
mov
add
pop
push
and
lea
or
jl
test
jge
mov
aas
xchg
pop
adc
shl
and
neg
loop
push
in
mov
jecxz
xor
fadd
out
and
inc
xor
dec
in
fistp
xchg
in
xor
mov
sbb
dec
(bad)
scas
jmp
es
and
pop
sbb
retf
xor
jmp
jne
gs
mov
stos
jae
mov
sahf
mov
jecxz
fwait
pop
cmp
dec
mov
mov
in
int3
lods
sahf
pushf
call
pushw
jmp
sbb
mov
pop
or
nop
push
add
jbe
lock
dec
and
push
shr
mov
or
mov
cmps
(bad)
ret
push
dec
push
pop
arpl
and
lahf
cdq
add
into
cmps
jb
test
xchg
add
fisubr
mov
mov
out
std
repnz
xor
jge
dec
int
int
sbb
mov
das
inc
inc
xor
cmp
cli
sub
xchg
lods
push
cli
inc
sub
repz
adc
push
sub
cmp
xchg
shl
into
jl
xor
sub
loopne
jg
pop
mov
xchg
fild
jl
sub
leave
fs
sar
arpl
ror
neg
or
dec
sar
and
and
and
push
push
mov
cmp
test
fcomip
pop
aas
sub
loope
retf
and
lahf
or
xor
inc
push
jle
adc
xor
add
pop
mov
(bad)
cmp
push
test
and
leave
jo
loope
push
sbb
cli
sub
adc
jae
mov
das
fstp
mov
es
or
mov
push
mov
scas
push
jecxz
mov
pop
lock
ret
sbb
jmp
je
xor
cvtdq2ps
push
push
sub
xchg
mov
jg
jp
lock
scas
mov
pop
push
or
inc
fs
mov
(bad)
lock
shl
xchg
enter
sbb
xchg
mov
or
jne
cdq
xchg
outs
movs
stos
cmp
push
sub
test
and
pop
or
and
sub
adc
mov
jae
rcr
jle
push
mov
mov
cmp
in
(bad)
fimul
or
and
cmp
push
or
out
aaa
sub
dec
imul
jmp
sub
test
xchg
ja
mov
xor
mov
push
stos
sbb
mov
std
daa
adc
push
or
add
data16
jp
aaa
mov
jae
sub
loop
pusha
adc
and
pop
retfw
mov
popa
aaa
cmp
mov
into
mov
int
js
xchg
icebp
icebp
fild
imul
outs
add
(bad)
push
jg
fs
std
sub
in
ja
aad
ins
adc
pushf
xchg
pop
jl
lods
and
bnd
aaa
arpl
ret
and
rol
pusha
lds
mov
imul
out
ins
call
dec
out
ficomp
add
sub
rcr
pop
push
sahf
shr
jg
jmp
adc
xor
fild
dec
pop
sub
leave
ins
adc
cwde
push
cmps
or
nop
mov
jmp
adc
push
pop
inc
xchg
outs
push
jbe
dec
mov
sbb
jbe
mov
mov
cwde
xchg
jmp
or
ss
jmp
xor
xor
rcl
pushf
jle
inc
cld
pop
lods
jo
mov
add
inc
jmp
add
jb
loop
addr16
inc
aaa
mov
jne
sub
leave
jbe
or
adc
icebp
shl
enter
sub
adc
cmp
jmp
dec
push
mov
movs
in
fwait
xchg
pop
cmp
inc
and
test
loop
je
xor
xor
ret
mov
mov
ret
mov
loopne
push
cdq
add
xor
sahf
test
enter
cmp
jge
ret
repnz
aad
lds
or
pop
or
and
cmc
and
retf
xchg
sub
es
jecxz
and
pop
je
sbb
aas
mov
out
sub
(bad)
sti
popf
adc
frstor
out
mov
out
push
xchg
xor
in
mov
sub
loop
mov
enter
shl
xor
mov
sub
lods
push
xchg
jmp
xchg
iret
cwde
sar
pop
inc
fist
loopne
aad
mov
gs
sub
mov
pop
dec
push
adc
test
mov
call
xor
pop
outs
sub
or
aaa
jp
add
jns
into
mov
push
xchg
not
rcl
mov
pushf
dec
neg
loop
add
jmp
fst
or
dec
mov
xchg
lea
rol
jmp
cmp
les
add
daa
fcom
jl
cmp
sub
ffree
fcmovne
call
pop
popf
clc
loopne
retf
cmp
mov
or
mov
or
fidivr
(bad)
mov
mov
cmp
mov
mov
aad
es
cmp
push
adc
push
adc
jo
xchg
cmps
and
sbb
imul
(bad)
out
int
jb
iret
mov
inc
arpl
ret
popa
jb
add
stc
inc
shr
sbb
call
outs
cmp
icebp
jno
fwait
push
push
jecxz
mov
inc
or
pop
mov
jmp
mov
xchg
aad
ss
dec
xlat
lock
cmp
or
jbe
into
push
pop
sbb
in
jae
pop
mov
cmp
xor
test
in
into
cli
jle
cmps
cmc
push
pop
arpl
jbe
es
sbb
cld
lds
cdq
outs
push
es
popf
adc
or
dec
cmp
mov
sub
out
mov
sbb
jnp
push
dec
mov
ror
mov
out
jecxz
and
jmp
add
imul
jns
rcl
mov
sbb
inc
in
das
jp
cld
jbe
jne
or
push
mov
jne
dec
push
and
out
inc
cmp
lea
xchg
or
mov
aas
pop
cli
arpl
push
jmp
inc
xchg
pop
xchg
fdiv
cwde
sbb
push
pop
or
(bad)
lock
psadbw
jns
and
pop
push
mov
mov
shl
pop
retf
sub
cmp
sahf
and
gs
and
sbb
xor
inc
(bad)
or
or
and
sub
jle
jb
je
sub
adc
out
test
mov
cmc
push
xor
sub
in
pop
cwde
call
jecxz
rcl
dec
and
fisubr
or
ins
sbb
in
mov
ret
dec
jle
js
call
rcr
mov
cmp
jmp
cmp
cmp
inc
pushf
imul
call
xchg
cmp
shr
movs
leave
aaa
adc
push
dec
pop
mov
jecxz
test
stos
(bad)
(bad)
sbb
mov
jnp
aaa
jmp
(bad)
jl
test
pop
mov
repnz
adc
mov
mov
cld
xor
pop
data16
stc
ret
push
adc
dec
fucom
jg
hlt
(bad)
push
or
imul
ror
(bad)
cmp
mov
push
jne
aad
data16
xchg
rcr
sub
dec
lock
mul
sbb
jbe
(bad)
cmc
sbb
retf
sub
pusha
cmp
mov
or
int
(bad)
jp
in
jl
or
jle
cmp
xchg
or
pop
pop
stc
mov
retf
pop
or
in
jo
bound
outs
in
mov
sub
aaa
inc
dec
sbb
dec
and
imul
pop
sub
pop
mov
fidiv
dec
push
(bad)
jl
gs
leave
sbb
xor
lock
mov
cmp
test
jae
add
add
xor
mov
call
stos
repnz
mov
inc
adc
or
dec
adc
fidivr
xchg
sbb
call
push
mov
dec
jae
mov
fist
xlat
mov
push
inc
or
push
fcom
(bad)
inc
mov
and
xchg
popf
jmp
add
addr16
cmp
loope
rcr
inc
aad
outs
out
cli
pop
loop
fldenv
adc
ds
sbb
lahf
scas
dec
push
repz
xchg
or
push
push
hlt
fs
in
xlat
jns
in
fimul
inc
test
out
loop
push
sbb
xor
inc
lds
xchg
jg
aad
xor
or
xchg
and
dec
data16
xor
add
arpl
add
and
push
movs
icebp
adc
ins
test
fdivr
sbb
mov
sub
xchg
cmp
nop
mov
stos
jecxz
and
inc
in
push
sub
fisub
push
inc
loope
xchg
mov
xor
call
jg
cmp
ds
jg
mov
pop
pop
lea
rol
mov
dec
es
pop
fistp
jmp
add
mov
mov
test
(bad)
popf
retf
loop
pop
adc
sbb
xchg
xchg
push
adc
movs
jns
gs
call
xchg
jmp
xchg
ds
adc
add
aad
push
(bad)
aam
mov
dec
cmps
sub
mov
sbb
inc
xor
icebp
xor
stos
jo
call
jge
aam
inc
push
dec
adc
push
or
mov
int3
xchg
pop
jle
push
cmc
mov
pop
jg
cdq
mov
or
jne
inc
inc
push
push
mov
cmp
es
sub
mov
inc
pop
xor
into
jno
jns
icebp
js
out
add
retf
sbb
loopne
(bad)
cmp
sub
dec
lods
outs
(bad)
sbb
pop
loop
jnp
cmp
lds
out
cld
push
push
popa
mov
xchg
sbb
repz
xor
adc
cmp
sub
or
mov
and
dec
stc
mov
jle
push
out
sub
std
pop
gs
cmp
cmp
ror
stos
inc
jae
loopne
push
retf
adc
je
xor
mov
xchg
jns
les
jo
int3
retf
repnz
mov
fwait
jbe
ret
cmp
jo
arpl
aad
and
dec
mov
nop
in
in
sub
xchg
cmc
mov
pop
cmps
lods
push
and
mov
sahf
push
jns
fcomp
js
pmulhuw
xchg
sub
sub
jmp
pop
lods
retf
stos
push
imul
pop
repz
lds
pop
jbe
pop
scas
mov
mov
enter
scas
pop
sub
inc
daa
xchg
inc
xchg
push
xchg
lods
scas
push
test
dec
ficomp
fwait
ins
add
(bad)
push
jmp
push
arpl
and
mov
icebp
loop
xchg
nop
jp
add
nop
jle
mov
dec
jb
call
hlt
lea
or
ins
push
and
sbb
pop
push
pop
out
adc
push
jo
dec
imul
sub
push
loop
fistp
inc
xor
icebp
jg
mov
pop
shr
lds
shl
repnz
(bad)
inc
pop
in
jno
std
cmp
rol
ds
aam
pop
loop
fwait
popf
and
dec
pushf
inc
cmp
adc
div
ds
adc
push
push
cdq
cmp
test
cli
ficom
call
sub
sbb
dec
jmp
add
dec
xchg
add
imul
dec
cmps
mov
cs
or
jo
mov
jp
adc
lahf
jl
xor
fs
arpl
ja
cmp
pop
push
aam
and
push
int3
push
and
mov
je
fcomp
ret
ss
adc
outs
mov
inc
jmp
mov
jg
dec
and
sub
adc
aad
push
lahf
cmps
mov
in
mov
xchg
das
mov
pop
pop
cdq
xor
jbe
dec
dec
push
mov
mov
sbb
test
daa
stc
jae
xchg
retf
lock
stos
dec
cmp
xor
adc
mov
lods
push
lds
jp
test
ja
pop
stos
dec
lods
xchg
int3
mov
xchg
sub
in
scas
mov
or
arpl
aad
mov
data16
mov
pop
xchg
test
xchg
out
push
jae
ss
cmc
iret
xor
mov
mov
and
cmp
ja
xlat
and
push
out
xor
mov
push
push
nop
movs
xchg
pusha
xor
idiv
add
das
test
repnz
jne
dec
mov
test
fsubr
and
mov
pop
cmps
pusha
jmp
test
add
(bad)
xor
cmps
imul
adc
clc
fmulp
or
hlt
lahf
(bad)
mov
xchg
mov
dec
jo
retf
xor
cmps
add
pop
xchg
cmp
and
jg
fstp
cmps
bswap
ficomp
or
inc
add
rcl
xlat
adc
or
xchg
xchg
mov
fistp
xchg
enter
add
ins
test
sub
adc
add
in
pop
call
mov
data16
mov
xchg
sti
mov
dec
dec
mov
fild
pop
mov
mov
and
je
dec
cmp
mov
in
and
aaa
pop
sub
adc
test
push
test
call
fisttp
xor
dec
int
ror
jb
add
adc
cwde
sbb
fsubr
mov
mov
shl
sbb
xchg
push
pop
lods
js
mov
call
bound
sbb
jno
js
add
(bad)
fnstenv
(bad)
out
and
adc
jns
retf
adc
sbb
lea
test
pop
mov
mov
cmp
fst
mov
cdq
and
loopne
push
and
jmp
push
imul
mov
sbb
shl
sahf
mov
addr16
pop
adc
and
in
mov
sub
cmps
popa
mov
lods
loop
mov
cmps
xchg
dec
adc
or
dec
js
nop
cmps
pop
jb
aas
mov
movs
in
add
in
fs
aad
in
gs
add
sbb
cmp
mov
mov
sbb
adc
fwait
sahf
dec
movs
jl
adc
xchg
test
bound
cwde
pop
add
cmp
call
sub
jno
call
sbb
push
jge
mov
dec
mov
mov
pushf
pop
(bad)
mov
call
loope
jg
or
jns
cmp
ds
jg
cmc
jmp
or
cmp
sbb
cmc
jecxz
sub
jne
dec
out
imul
xlat
sub
cs
jmp
lods
loope
dec
sbb
mov
mov
mov
data16
cli
js
not
push
ror
daa
in
push
dec
js
and
or
sub
cdq
and
movs
mov
mov
adc
cld
mov
pop
std
ss
adc
addr16
aad
imul
pop
nop
imul
sub
xor
je
imul
push
in
mov
repz
adc
ret
pop
dec
pusha
ret
mov
jb
jge
lods
ja
mov
movs
in
(bad)
pushf
in
shl
test
paddsw
add
mov
out
iret
sub
mov
pop
call
mov
fist
add
sar
adc
and
push
rcr
jp
sbb
lea
cmp
xchg
test
addr16
test
add
jmp
fs
fimul
fsubr
jmp
pop
mov
data16
xchg
jno
inc
xchg
or
cwd
inc
dec
mov
lods
mov
xchg
mov
cmps
mov
mov
shl
jo
(bad)
adc
std
shl
cmp
jne
fldenv
jae
or
sar
hlt
ret
xchg
jo
into
movs
pop
sti
fsub
add
inc
xchg
mov
out
mov
js
idiv
les
cmp
rcr
or
sbb
lods
repnz
sbb
ins
mov
pop
pop
lea
or
cmp
cmp
cmp
in
pop
call
sar
enter
ror
jg
loope
cmp
shl
cmp
cmp
adc
lods
xchg
sub
and
jmp
(bad)
pop
add
mov
test
sbb
call
mov
std
arpl
inc
add
xchg
into
fimul
dec
out
sub
pop
arpl
retf
inc
cmp
out
cmc
imul
stos
and
push
addr16
push
mov
fnstenv
pop
dec
movs
add
sbb
adc
neg
dec
inc
add
loope
mov
aad
push
mov
test
cmp
jno
out
push
add
je
sahf
daa
xchg
mov
xchg
clc
add
outs
movs
push
or
jbe
call
add
mov
mov
mov
pop
jae
loope
mov
pop
inc
or
and
gs
imul
mov
outs
add
dec
shl
cmps
pop
pop
add
fstp
or
cmp
in
and
push
jnp
loopne
or
sar
cdq
push
lds
jne
cmps
mov
push
out
or
imul
addr16
mov
mov
bound
or
rcl
adc
pop
lods
cmp
jl
ret
push
cwde
sahf
or
xchg
retf
sbb
xchg
push
dec
nop
pop
dec
lahf
and
pop
inc
repz
(bad)
jge
mov
mov
mov
data16
stc
aam
scas
fdivr
mov
xchg
add
xor
fistp
leave
daa
mov
sbb
leave
jnp
xchg
jg
push
xor
mov
push
cmc
mov
nop
xor
cld
int3
sbb
test
aad
stos
shr
or
fwait
rcr
iret
cmps
and
arpl
mov
jmp
inc
jmp
js
fs
cli
push
out
sub
imul
shl
sub
loope
in
jae
mov
test
lods
movs
push
add
xlat
sub
sar
add
mov
cmc
lock
mov
(bad)
div
sub
es
push
data16
xor
and
and
retf
nop
lea
mov
and
mov
push
bts
xor
mov
in
ret
fcom
xor
psrlw
mov
repz
xchg
mov
test
cmps
and
push
xchg
cmp
lea
mov
pusha
and
push
jecxz
mov
and
and
sbb
pop
ret
pop
fstp
enter
cmc
add
popf
leave
scas
sub
stc
imul
pop
mov
repz
mov
scas
out
sbb
cmc
inc
outs
aas
lods
mov
adc
clc
sub
ds
xchg
xchg
cmp
imul
pop
fiadd
mov
ins
inc
movs
arpl
xchg
xlat
inc
movs
push
popa
das
scas
mov
cmp
mov
adc
sub
test
adc
and
inc
fwait
add
clc
dec
inc
cld
inc
lods
sahf
pop
xor
ins
adc
imul
in
push
xor
stos
add
mov
push
inc
jmp
push
call
or
sub
adc
or
test
xor
bound
scas
adc
ja
add
leave
out
dec
sbb
pusha
pop
or
ja
jl
jmp
(bad)
je
pusha
lods
jmp
xor
and
(bad)
lahf
imul
(bad)
rcl
sbb
dec
and
jecxz
inc
sub
ret
adc
mov
cld
fistp
dec
push
push
jmp
or
scas
mov
add
fmul
test
push
(bad)
outs
add
rcl
xchg
inc
sbb
jmp
pusha
rcl
dec
scas
sbb
xchg
rol
xchg
imul
jecxz
mov
ss
frndint
(bad)
popf
add
stos
dec
dec
pop
js
ds
call
xor
xor
add
and
and
cmp
xor
mov
sub
sub
imul
xor
mov
addr16
add
movs
mov
ret
hlt
aam
leave
adc
mov
mov
call
inc
out
(bad)
icebp
dec
enter
cmp
dec
jb
sbb
pop
mov
outs
sbb
int
scas
pusha
imul
mov
push
ins
sub
push
xor
dec
or
jle
or
inc
xchg
xchg
jae
cli
mov
sub
cmp
lods
push
push
jmp
ins
ins
sbb
cmp
pushf
pop
push
test
inc
test
repnz
jb
lds
dec
push
push
xchg
jns
gs
popf
adc
dec
push
(bad)
out
fsubr
pop
repnz
mov
inc
imul
rcr
xchg
stos
sub
dec
jae
cmc
aad
add
ficom
pop
jbe
or
loopne
pop
imul
push
mov
jmp
jmp
dec
nop
dec
retf
rcl
fisttp
push
int
xchg
mov
xor
mov
fstp
sub
add
xchg
les
jmp
add
or
inc
pop
jns
jl
out
movs
and
xchg
lods
xchg
xchg
in
loope
imul
imul
inc
pop
jmp
or
rcr
jl
lea
adc
rcl
outs
mov
mov
data16
cwde
xchg
je
push
inc
ror
inc
cmp
xor
sbb
push
ds
or
fidivr
jmp
jp
jo
sub
xor
pop
jbe
mov
gs
and
loop
sbb
add
iret
adc
dec
cmps
xor
outs
pop
mov
xchg
mov
not
pop
in
inc
nop
out
ss
fst
in
pop
mov
neg
pop
push
outs
mov
jg
test
pop
out
movs
fist
sbb
das
xor
pushf
pop
aaa
xor
es
in
aad
aaa
movs
cmps
sub
or
inc
enter
int3
jnp
aam
in
pop
pusha
cwde
aad
(bad)
and
mov
mov
test
mov
sahf
mov
pop
pop
xor
pop
or
jb
jns
(bad)
icebp
jmp
mov
outs
lock
push
into
inc
inc
fstp
or
dec
int3
or
mov
add
xor
mov
sub
mov
inc
mov
std
lods
mov
mov
or
(bad)
fadd
movs
add
push
add
fwait
inc
not
repz
into
cdq
cmp
or
bound
aam
sub
dec
into
lock
jcxz
in
(bad)
sub
jmp
cmps
dec
rep
jp
aas
mov
(bad)
cmp
inc
cli
adc
mov
jb
mov
(bad)
call
mov
ins
addr16
sti
lds
cs
(bad)
loopne
xchg
mov
out
dec
cmp
and
cmp
mov
retf
and
xchg
icebp
les
mov
push
mov
sub
cs
xor
sbb
sub
add
xchg
idiv
shl
inc
rcl
mov
jbe
repnz
and
pop
fs
adc
shl
and
jg
mov
iret
ins
inc
xchg
pop
rol
(bad)
loop
or
lock
aam
fiadd
pop
cmp
sub
sub
adc
xchg
sbb
cmp
das
sbb
sub
jmp
sbb
push
pop
sub
imul
(bad)
sbb
add
(bad)
pop
out
test
mov
lock
aaa
jg
push
mov
sbb
fisubr
adc
loop
jg
add
shl
add
rcl
aaa
outs
out
dec
dec
push
and
push
or
popf
cmp
in
movs
cmp
xor
inc
and
shl
mov
dec
push
ds
iret
add
mov
sbb
outs
push
sbb
cmp
sahf
xchg
push
sahf
jmp
ficom
push
std
jl
jb
push
mov
xchg
xor
add
bound
data16
inc
xor
(bad)
icebp
shr
inc
xor
mov
inc
mov
aas
cld
frstor
int3
pop
pop
movs
leave
push
mov
imul
cs
dec
int
mov
std
stos
loope
xchg
xor
nop
mov
rol
sub
(bad)
retf
test
sbb
shr
das
cmp
mov
aam
test
pop
lds
add
xor
add
cmc
(bad)
gs
adc
mov
push
idiv
sub
inc
sbb
jno
cwde
inc
gs
mov
mov
fnstsw
pop
or
aaa
cli
pop
inc
movs
jb
add
adc
sub
sar
nop
mov
mov
cmp
jb
repz
jne
jno
mov
es
mov
in
sar
pop
or
sub
and
jl
jecxz
add
cdq
nop
ja
mov
bound
scas
mov
sub
imul
gs
sbb
inc
jl
mov
dec
mul
pop
inc
dec
cmps
out
sbb
stos
mov
inc
mov
stos
mov
inc
out
mov
stos
mov
sti
sbb
fldcw
outs
xor
dec
addr16
mov
add
and
mov
(bad)
ins
fnstcw
push
dec
mov
push
scas
push
lahf
call
or
in
rol
lods
in
jle
cs
fsub
retw
mov
dec
call
cld
fnstsw
add
xor
cmp
and
sbb
xchg
jmp
push
icebp
fst
shl
push
mov
loopne
bound
(bad)
fld
loope
mov
mov
in
sub
jns
and
arpl
aaa
ss
inc
xchg
mov
rcl
test
sub
je
cmp
(bad)
stc
mov
mov
mov
mov
inc
rcl
xor
xor
dec
pop
retf
xor
ror
pop
dec
addr16
imul
dec
rcr
cld
dec
cmp
jne
cmp
and
cmps
stos
inc
ret
mov
sub
ss
sub
sahf
adc
jns
mov
mov
pop
mov
push
and
ja
aas
add
mov
xchg
inc
xor
add
rol
push
cmps
add
ins
push
fisttp
push
neg
movs
and
add
cs
enter
jns
mov
xchg
test
stos
dec
xchg
dec
adc
sbb
movs
sbb
jne
repnz
fld
push
mov
mov
lock
(bad)
mov
adc
add
fistp
sbb
push
fild
(bad)
jecxz
sub
aas
push
and
int3
xlat
xchg
fs
cdq
loopne
es
call
push
ds
pop
test
mov
push
int
adc
mov
mov
rol
mov
cmp
cmps
dec
cmps
iret
sbb
sbb
movs
xchg
sbb
test
sti
xchg
stc
inc
push
cmps
ror
inc
out
push
pop
mov
popa
mov
daa
loop
movs
sub
pushf
test
repz
arpl
xor
mov
fisttp
fistp
std
inc
add
fist
retf
jmp
dec
or
cli
add
mov
mov
jg
add
pop
lods
popa
jo
cli
repz
push
pop
cmp
add
leave
shr
sbb
nop
mov
push
lahf
push
out
xchg
jnp
stc
jg
cmp
dec
xchg
add
loop
pop
xchg
push
inc
cmp
out
inc
pop
xor
loope
fbld
lea
push
sbb
(bad)
sbb
sub
stos
sbb
and
shl
loopne
aaa
sub
jge
mov
ss
cmp
dec
aas
out
cmp
inc
call
call
lock
daa
neg
adc
mov
stc
stos
mov
mov
inc
dec
ror
fldpi
push
adc
daa
repz
aam
test
adc
add
add
sahf
jp
lds
adc
dec
adc
mov
les
xchg
sti
mov
movs
xchg
sub
pushf
std
jb
stos
and
test
stc
pop
push
jno
ficomp
loopne
pusha
pop
xor
and
jo
movs
and
mov
dec
push
(bad)
push
xor
sub
fisttp
repz
cmps
and
fisub
mov
and
mov
pop
ror
(bad)
or
mov
mov
adc
push
arpl
jb
aas
cdq
out
fucomi
xchg
sbb
push
in
sbb
mov
rcr
pop
inc
pop
jmp
and
inc
iret
hlt
mov
xchg
out
jmp
add
mov
fstp
dec
std
cmp
mov
pop
cmp
fimul
push
mov
pop
mov
dec
inc
shl
mov
sub
dec
cmp
push
adc
aaa
lods
lods
mov
or
lea
mov
push
push
jno
pop
pop
test
imul
pop
aaa
js
scas
or
mov
and
mov
jl
pop
cwde
adc
jnp
(bad)
(bad)
pop
idiv
and
mov
retf
lods
add
hlt
iret
cmps
fcom
int
lods
adc
cmc
jmp
push
(bad)
(bad)
rcr
outs
mov
jo
lahf
pand
ret
das
shr
sub
cmp
dec
sbb
and
cmp
dec
ja
fmul
dec
fdiv
test
mov
ins
pop
std
lods
in
xchg
fwait
(bad)
test
push
and
pusha
dec
xor
adc
mov
jp
daa
aaa
(bad)
or
enter
cmp
movs
arpl
(bad)
fst
and
pop
adc
pop
xchg
in
cmp
pop
push
mov
sub
daa
jp
xchg
popf
mov
jmp
xor
in
push
call
ss
sub
mov
mov
out
and
je
and
in
mov
jmp
aas
dec
dec
fbld
std
jae
fucomip
je
cwde
pop
pop
sbb
mov
dec
mov
or
jge
call
ror
stos
and
push
mov
mov
jo
das
scas
test
dec
mov
div
jb
dec
enter
mov
call
out
mov
or
inc
retf
xchg
shr
cmps
lock
sbb
out
pop
(bad)
jmp
shl
shl
inc
mov
icebp
mov
icebp
adc
cmp
fsubr
dec
out
(bad)
pusha
retf
shl
add
test
push
movs
inc
aad
jbe
push
jbe
jecxz
mov
sar
mov
cmp
mov
mov
mov
idiv
mov
bswap
pop
push
cs
add
addr16
sub
push
or
inc
jmp
je
imul
mov
ror
pushf
sub
mov
mov
and
dec
sub
xor
adc
dec
jle
pop
pmaxsw
ret
(bad)
xor
dec
fwait
rcl
imul
sbb
xchg
push
test
xor
sub
mov
cmp
or
sbb
fldenv
jp
sar
lock
sub
cwde
pop
popa
cmp
push
and
xor
les
sub
fwait
cwde
arpl
jbe
cld
mov
sar
sub
fisubr
outs
jbe
lea
in
cwde
test
push
push
imul
xchg
call
fs
cmp
inc
stos
xor
fcom
fs
xor
ja
push
inc
add
pop
test
outs
jne
sub
lea
mov
push
out
xor
scas
fwait
add
stos
mov
popa
inc
frstor
sub
cmp
scas
xchg
aad
std
sub
dec
aas
jl
ret
cld
mov
sbb
mov
jmp
and
mov
stc
xlat
push
xor
mov
fidiv
lahf
(bad)
mov
ror
int
std
int3
ret
xor
mov
push
dec
pop
js
sub
add
mov
(bad)
pop
inc
mov
jl
xlat
mov
or
pop
adc
lods
cmp
adc
or
push
pusha
stc
mov
fcmovnu
in
stos
mov
push
push
jb
cmp
jl
and
in
ins
fdiv
test
sub
pop
adc
cld
in
aaa
xor
adc
sbb
lock
sub
and
shr
test
push
pop
pop
ror
pop
lock
retf
or
cmp
iret
clc
or
or
loop
test
cmp
daa
mov
jns
jecxz
lods
cmc
mov
mov
adc
inc
xor
loop
lods
aas
iret
mov
sub
pop
aam
stos
sub
jecxz
xor
scas
je
jl
movs
cmp
(bad)
and
push
and
cmps
outs
je
outs
and
scas
mov
inc
or
ss
sub
(bad)
mov
shr
mov
movs
mov
mov
push
das
sbb
scas
pushf
(bad)
scas
jo
mov
add
int
les
and
fisub
lods
shl
push
ds
cmp
jne
mov
stos
in
jnp
dec
adc
fdivr
xor
cmps
(bad)
mov
test
rcr
mov
jmp
adc
inc
(bad)
mov
push
mov
fwait
ds
ror
std
push
pop
fs
loopne
aaa
stos
jbe
mov
xlat
lock
outs
outs
(bad)
adc
add
or
loop
ds
and
add
lods
pop
dec
ret
ror
mov
sub
retf
jg
clc
fdivr
mov
lds
jne
mov
jg
daa
mov
xchg
sbb
in
js
(bad)
xchg
push
lahf
adc
std
mov
push
retf
data16
add
xor
jnp
arpl
ss
(bad)
sbb
mov
jns
pop
fiadd
mov
push
sub
stos
in
jo
push
pop
xor
or
(bad)
pop
arpl
out
out
in
imul
add
xchg
mov
xor
push
(bad)
jecxz
shr
push
xlat
ret
adc
inc
mov
aaa
shl
push
in
xchg
cmps
push
cld
ret
push
in
xchg
mov
mov
hlt
inc
inc
mov
imul
lods
mov
sahf
xor
inc
test
sbb
xor
sti
daa
aad
sub
mov
push
lds
mov
lods
jge
cmp
je
stos
dec
cmps
push
push
or
ret
(bad)
fcom
jns
pop
rol
lea
pop
mov
sbb
repz
mov
sbb
push
mov
jmp
(bad)
aas
xchg
add
lock
add
adc
or
leave
pop
(bad)
sbb
xchg
enter
pop
fs
fisubr
inc
aaa
add
fistp
xchg
lods
hlt
out
shl
push
jle
or
lods
call
mov
pop
xor
cmp
xchg
mov
scas
loop
push
(bad)
jno
outs
in
data16
xchg
sub
mov
cmp
fmul
pop
gs
push
js
cs
ins
test
and
or
loope
outs
(bad)
movs
xor
sbb
sbb
and
cs
pop
iret
mov
adc
(bad)
mul
scas
jne
jae
sti
(bad)
dec
loop
icebp
ror
daa
and
test
xchg
mov
out
jg
xchg
push
lods
cld
jl
and
outs
ret
cmc
cs
jecxz
test
es
sub
jg
push
xchg
cmc
xchg
dec
movs
push
push
push
sub
pop
test
jbe
jg
mov
pop
fdivrp
mov
scas
mov
xchg
pop
mov
out
test
stc
sub
lea
movs
sahf
dec
stos
sub
lahf
aad
fld
fxch
push
or
std
stos
dec
fst
scas
xchg
popa
popa
rol
cmp
sub
movs
leave
rcl
push
je
hlt
loopne
pop
mov
lahf
enter
pop
es
adc
sbb
loop
jmp
cmp
sub
xor
push
mov
or
sar
jp
jbe
cmp
mov
sbb
xchg
dec
xchg
add
out
cmp
shl
jg
bound
js
and
retf
inc
js
inc
pop
in
push
bound
jb
inc
sbb
jnp
sub
push
or
and
mov
mov
sti
cmp
mov
pop
sti
inc
mov
ja
add
adc
hlt
push
retf
stos
repz
xor
cmc
jae
jge
fsubr
xchg
sbb
imul
or
xor
popa
mov
test
les
(bad)
xlat
imul
rcl
or
xchg
movs
push
retf
bound
retw
add
popa
test
cmp
(bad)
xchg
cmp
jle
ins
mov
mov
shl
mov
(bad)
dec
and
mov
in
lahf
dec
or
ins
ins
adc
retf
jb
mov
fdivr
fiadd
mov
(bad)
repz
jl
pslld
mov
mov
mov
das
fmul
cmps
mov
mov
int
inc
add
mov
test
(bad)
ja
xor
enter
inc
mov
inc
pop
rcl
sub
test
mov
pop
das
jle
push
jne
adc
sub
ins
push
sub
xor
dec
sbb
ret
inc
adc
push
in
cmp
pushw
or
inc
addr16
bound
in
xor
jb
test
mov
pusha
and
arpl
or
mov
and
pusha
add
ins
iret
retf
lea
xor
mov
shl
jb
or
adc
(bad)
repz
mov
(bad)
sti
jae
scas
call
retf
ins
pop
and
jne
(bad)
aam
vpcomuq
test
les
mov
xchg
sbb
pop
sub
add
iret
(bad)
xchg
mov
out
scas
rdmsr
dec
mov
iret
leave
mov
or
xchg
(bad)
dec
add
cmp
imul
call
ins
clc
adc
loop
in
sbb
clc
jne
aas
std
(bad)
mov
pop
ja
push
cmp
add
jge
or
jle
jae
(bad)
jne
lds
cdq
fnsave
xchg
or
fnstenv
mov
cmp
adc
retf
(bad)
out
mov
cmps
mov
cmp
pop
pop
and
addr16
test
js
fwait
in
mov
jns
inc
push
int3
xchg
mov
mov
and
xor
cmp
ins
ss
adc
test
inc
mov
push
lock
xor
sub
pop
xchg
and
mov
or
push
les
imul
scas
dec
push
jnp
dec
xor
rol
push
jbe
sub
das
cmp
mov
mov
cmps
movs
adc
rcr
mov
popa
inc
fisttp
scas
adc
xchg
int3
call
stc
mov
icebp
pushf
xor
mov
push
ds
sub
xchg
cmp
inc
inc
out
fidivr
and
mov
bound
(bad)
mov
dec
or
mov
mov
fs
xor
sti
mov
cmp
int
sbb
ret
(bad)
mov
pushf
mov
mov
add
loope
hlt
test
and
imul
add
cld
jnp
cdq
leave
int
(bad)
push
popf
add
pop
inc
and
jecxz
xchg
inc
adc
pop
aam
mov
shr
cmps
test
add
pop
inc
sub
mov
mov
inc
cs
push
aad
mov
add
mov
in
add
pop
sysenter
pop
push
dec
imul
mov
push
mov
ja
pop
idiv
mov
dec
inc
(bad)
ds
adc
sbb
sbb
mov
push
and
adc
inc
push
xchg
xchg
jno
cld
jne
adc
mov
push
jbe
mov
mov
icebp
mov
or
retf
sbb
mov
lods
inc
jne
xchg
push
cmps
mov
imul
rcr
jle
(bad)
or
les
xchg
xor
cs
(bad)
and
(bad)
pop
mov
test
cmp
enter
jmp
push
adc
repz
fmul
mov
mov
cld
mul
retf
ror
cs
dec
and
aad
dec
call
cmp
and
and
fdivr
test
dec
adc
cli
int
xor
test
jae
int
scas
stc
mov
nop
mov
sub
mov
push
inc
or
movs
cmp
xchg
and
dec
pop
adc
int3
sub
stos
in
test
mov
mov
stos
and
push
push
ror
in
sub
mov
loopne
pop
xor
adc
outs
mov
ss
mov
(bad)
enter
gs
jmp
inc
test
sub
xchg
fdiv
push
pop
xchg
arpl
jp
or
pop
inc
and
push
mov
mov
xlat
add
xlat
movs
dec
pop
sti
push
(bad)
pop
mov
dec
xor
jae
push
mov
mov
jnp
ds
xchg
ins
pushf
mov
jo
pop
adc
ror
shl
jns
out
jbe
ret
sbb
mov
mov
aam
pop
inc
inc
(bad)
aad
ds
clc
push
jl
mov
mov
enter
div
sahf
loope
sub
cmp
jg
mov
lds
aas
cmps
test
xchg
or
pop
dec
push
adc
mov
xchg
jecxz
jmp
leave
mov
inc
fild
repz
push
ds
sar
in
dec
scas
push
dec
jb
jo
add
mov
add
push
jle
shr
sbb
cmp
test
mov
mov
rcl
xor
xor
pop
outs
sub
pop
inc
add
sti
ins
retf
pop
into
sar
mov
cmp
push
sub
mov
dec
jmp
ins
cs
idiv
int
retf
xchg
les
test
push
xor
addr16
sbb
les
retf
xor
xchg
in
mov
ret
js
popa
neg
add
lds
and
mov
call
jb
push
xor
scas
jle
dec
fidivr
dec
xchg
jecxz
ret
outs
stos
ins
enter
ret
mul
pop
stc
and
lahf
cwde
popf
jge
into
scas
inc
pop
inc
(bad)
cmp
mov
out
ins
xchg
sbb
pop
sub
cmp
fstp
and
aaa
cmp
mov
cli
les
adc
or
movs
cmp
not
psubsw
add
cwde
fnstsw
gs
and
cmp
aaa
xchg
sbb
cli
and
mov
icebp
aad
jmp
gs
es
fsubr
mov
shr
mov
add
sbb
retf
mov
push
sbb
fs
enter
aad
retf
aad
mov
daa
div
imul
mov
mov
imul
mov
lods
and
jge
mov
push
aaa
xlat
stos
loop
pop
fsubr
daa
movs
and
add
(bad)
hlt
dec
(bad)
cmc
xor
xor
shl
jae
add
inc
jae
popf
xor
jne
inc
shl
sub
push
outs
test
fadd
leave
mov
scas
sahf
jae
enter
and
and
mov
mov
or
rcl
xor
icebp
aas
std
xchg
rol
pushf
xor
lods
loope
jmp
adc
mov
inc
pop
inc
jle
repz
xchg
adc
imul
and
packuswb
xlat
pop
push
movs
call
test
std
stc
pavgb
dec
xor
pushf
jb
mov
xor
adc
and
or
sub
and
add
dec
fldenv
mov
add
mul
fst
popa
xchg
and
cli
sar
bound
stos
das
and
or
jg
mov
out
pop
hlt
cdq
scas
push
jo
lods
dec
(bad)
cmp
sub
std
xor
push
fistp
lods
arpl
aaa
push
jmp
test
sbb
xchg
push
scas
dec
xor
scas
sub
in
(bad)
jno
xchg
pop
stos
cmp
mov
imul
xor
cld
hlt
movs
cs
pop
xchg
leave
cmp
out
dec
push
and
sbb
mov
dec
in
call
scas
adc
push
xchg
enter
mov
ss
xchg
(bad)
hlt
and
push
xchg
test
aas
and
sti
inc
fwait
pop
sub
push
and
imul
mov
dec
in
jae
lods
rol
test
inc
in
dec
xchg
xchg
into
cmp
gs
inc
xchg
jne
inc
mov
imul
rcr
jnp
scas
jmp
pop
or
jno
mov
inc
push
aaa
pushf
ins
sbb
vfmadd132ps
iret
adc
push
or
bound
and
or
pop
xchg
jecxz
pop
xchg
leave
pop
inc
daa
mov
cs
adc
pop
add
mov
mov
std
mov
retf
stc
lea
in
and
sbb
inc
xchg
int3
(bad)
inc
push
fst
mov
lahf
jl
loop
loop
(bad)
push
(bad)
icebp
push
leave
mov
(bad)
sysenter
xor
fsub
fcmovnb
push
sbb
dec
xchg
mov
adc
jae
fisubr
lea
add
rcl
inc
jnp
call
mov
stc
rol
mov
add
popf
jmp
cmp
push
mov
or
cld
pop
mov
and
mov
aaa
dec
test
mov
adc
mov
add
scas
je
outs
push
pop
retf
popa
jp
sbb
loopne
adc
xor
push
mov
push
test
fcomp
sbb
dec
xchg
outs
arpl
retf
ss
sbb
test
push
inc
xor
push
std
cmp
mov
inc
loopne
add
push
pop
iret
push
adc
fld
inc
xor
cwde
repnz
hlt
(bad)
adc
(bad)
(bad)
sar
std
lahf
mov
push
mov
stos
pop
nop
repnz
jne
cmps
jle
sub
push
push
xchg
jge
je
add
lahf
pop
adc
sbb
inc
ins
mov
ss
(bad)
add
pop
test
mov
dec
mov
push
sub
cmp
popa
fnsave
sbb
jecxz
les
xchg
(bad)
loope
out
sub
movs
dec
repz
fistp
sub
jbe
pusha
aam
rol
loop
xor
and
pop
jnp
and
ja
call
div
mov
mov
psubb
cmp
repnz
fisttp
cli
bound
neg
mov
inc
mov
pop
fs
jg
xchg
(bad)
and
sbb
mov
pop
test
retf
sahf
test
popa
sub
push
shr
fwait
sbb
push
popa
pushf
sbb
mov
fisub
inc
je
adc
shl
xchg
push
push
sub
sbb
test
push
test
add
(bad)
adc
add
mov
pop
cmp
pop
rcr
lea
push
jne
aam
sar
mov
or
push
les
mov
cmovl
adc
aas
jo
(bad)
push
mov
(bad)
mov
ja
sub
cmp
pop
mov
sbb
xchg
mov
jmp
mov
div
pop
outs
adc
lods
lods
mov
pop
daa
sbb
inc
hlt
push
mov
adc
mov
int
std
int3
movs
cmps
pop
int3
loop
xchg
leave
lods
imul
mov
popa
push
stos
push
mov
test
dec
stos
cmc
inc
jle
hlt
dec
std
pop
lahf
ins
push
jge
mov
or
xchg
xor
pop
addr16
shl
scas
dec
test
or
jno
add
dec
(bad)
mov
cld
push
cdq
scas
sbb
and
mov
mov
pop
sar
les
ficom
jne
mov
(bad)
cmp
xchg
sbb
mov
add
mov
imul
(bad)
dec
retf
jne
int3
lds
dec
mov
and
mov
in
push
jo
and
loope
jns
push
push
push
adc
mov
icebp
sub
mov
dec
ins
sti
stos
push
or
mov
sbb
mov
pop
add
or
rcl
je
sbb
xchg
loopne
jae
pushf
inc
fwait
sub
rol
es
or
jae
or
cmc
bound
push
into
popa
xchg
repz
push
outs
add
pop
pop
ret
(bad)
xor
clc
jg
retf
rol
adc
dec
mov
adc
pushf
mov
inc
ss
push
jecxz
dec
pop
xchg
sub
ins
ror
push
mov
inc
jle
and
adc
sbb
pop
push
xor
sub
push
movs
xor
jmp
dec
and
pop
bound
dec
push
ror
gs
sbb
push
cmps
ins
add
test
push
jnp
inc
test
fmulp
ja
pop
dec
(bad)
xor
repz
push
dec
mov
movs
push
stos
rcl
xor
jo
je
and
and
(bad)
leave
nop
jmp
dec
invd
adc
in
adc
pop
(bad)
outs
mov
jmp
xchg
ffree
push
inc
xor
je
pop
cmps
bound
jmp
sub
test
ret
sbb
addr16
clc
xchg
jge
mov
or
and
add
loope
jmp
shl
cmp
stc
add
xor
add
add
in
repz
cs
mov
xchg
or
out
mov
push
neg
ins
dec
jns
jne
push
and
adc
loope
repnz
outs
sbb
loopne
stos
mov
out
mov
push
jnp
mov
xchg
jbe
mov
or
cmp
sub
mov
add
fst
(bad)
(bad)
into
shl
fist
les
aaa
arpl
push
jne
adc
jecxz
daa
mov
jmp
ret
xor
push
retf
push
xchg
mov
cwde
adc
xchg
mov
cmps
pushf
mov
lds
xchg
aas
xor
mov
mov
cmps
out
inc
rcr
ins
pop
in
stos
fcomp
or
enter
xchg
jae
dec
jmp
daa
cmp
in
in
scas
or
cs
repz
xchg
or
adc
jbe
div
jp
push
gs
imul
jle
std
xchg
inc
xor
xor
xchg
pop
xchg
add
stos
es
fstp
and
mov
jnp
adc
lahf
cmp
loope
rcr
jo
lock
sahf
les
movs
dec
jmp
inc
mov
or
in
xor
add
stos
adc
push
xchg
mov
std
jg
push
fwait
inc
pop
pop
jns
adc
pop
fcom
dec
mov
mov
loope
and
iret
test
lds
dec
mov
(bad)
sbb
push
loop
jae
(bad)
fsubr
fwait
lods
sub
call
neg
cld
ins
dec
sbb
xchg
push
pop
fmul
jae
fwait
loope
aam
adc
dec
adc
xor
fdivr
adc
or
loop
adc
in
je
xor
push
lahf
dec
idiv
ds
and
cmp
xor
pop
xchg
ret
sbb
nop
add
imul
rcl
dec
in
scas
ret
xchg
test
sub
outs
scas
call
push
mov
outs
(bad)
movs
pop
loop
lock
mov
loope
aam
(bad)
gs
add
popf
scas
or
mov
mov
bound
push
jno
cmp
dec
mov
idiv
mov
cmp
mov
add
pop
popa
push
es
test
add
adc
(bad)
ds
addr16
pop
pop
leave
pusha
jo
loope
sbb
rcl
fwait
push
mov
adc
sbb
dec
cli
test
jns
cmps
lea
js
lds
xor
(bad)
out
xchg
lea
inc
or
mov
loopne
(bad)
mov
ds
std
movaps
mov
and
sbb
cdq
pop
xchg
mov
xchg
xor
inc
sbb
adc
mov
cmp
mov
jg
dec
shl
lea
stc
ds
cmps
sub
jnp
jns
test
jbe
js
lods
xlat
test
movs
(bad)
stos
out
sar
sbb
cmp
fldenv
clc
iret
cmp
fs
ins
call
(bad)
push
cmp
push
scas
jecxz
fidiv
aad
sub
xor
into
(bad)
adc
loop
mov
jbe
xor
and
test
inc
(bad)
mov
jbe
out
iret
push
movs
push
cmp
out
jg
cdq
retf
xor
xor
popf
repnz
mov
push
pandn
movs
aaa
shl
aad
jnp
stos
mov
lods
and
dec
push
loop
pop
sub
pusha
mov
in
lock
mov
adc
or
lea
sbb
stos
dec
push
push
fdivr
test
out
xor
pop
add
repz
xchg
dec
sbb
inc
outs
cmps
icebp
sub
rcr
add
bound
mov
out
cmp
je
jmp
idiv
les
sbb
mov
and
add
mov
clc
iret
dec
or
repz
lods
shr
ror
out
ss
jne
mov
push
mov
stos
es
(bad)
fisub
xchg
dec
int
xor
(bad)
push
jae
cmp
(bad)
call
enter
sbb
push
inc
push
js
mov
test
xchg
int
fild
je
(bad)
sbb
adc
bound
mov
dec
sub
jnp
lods
adc
sub
movs
xchg
and
or
cmps
idiv
sub
mov
push
jb
scas
sub
xor
call
inc
xor
sub
dec
(bad)
mov
test
add
sub
jnp
es
sub
movs
ret
not
ins
outs
bound
lahf
xchg
test
adc
and
sub
adc
mov
(bad)
mov
js
dec
adc
pop
cmp
dec
mov
jns
imul
pop
and
mov
push
stc
cli
cmp
xor
stc
mov
cdq
movs
xor
dec
dec
imul
sar
aam
call
or
xchg
push
outs
pop
aad
cmp
(bad)
js
mov
sti
add
sbb
jb
sbb
xchg
retf
ret
sti
sbb
mov
jbe
or
and
mov
jb
mov
inc
inc
sbb
and
inc
cmp
push
dec
arpl
add
cmp
and
mov
test
pop
sar
sbb
popa
and
in
sbb
fsubr
inc
mov
jnp
xchg
pusha
xchg
inc
inc
nop
jp
and
or
stos
leave
dec
out
xchg
arpl
pop
xor
mov
adc
pop
imul
sub
leave
sub
sbb
out
stc
cs
xchg
ror
jbe
jmp
test
imul
icebp
rcl
mov
inc
or
and
sub
data16
data16
inc
push
ret
cli
sub
and
xchg
push
sahf
gs
cld
shr
stos
xchg
clc
mov
inc
mov
imul
push
cmc
cmp
ja
cmp
mov
cmp
pop
inc
xor
shr
imul
jl
inc
ret
movs
repnz
in
jb
aaa
scas
out
push
xlat
loope
jl
pop
(bad)
xor
imul
mov
mov
mov
dec
lods
aaa
pop
mov
push
mov
mov
fcmovnb
inc
lods
iret
ins
inc
jb
(bad)
mov
mov
inc
push
test
dec
jecxz
jl
add
(bad)
mov
xchg
pop
cmps
dec
je
movs
ja
leave
into
or
xchg
jmp
fadd
outs
rcr
cdq
and
cli
shr
std
inc
lods
mov
xor
psrlq
inc
xlat
push
jecxz
xchg
cmp
push
inc
std
test
sub
fcom
iret
fadd
ret
mov
neg
dec
sub
adc
xor
out
xor
sub
adc
loope
(bad)
fcmovbe
mov
ins
std
test
pusha
shl
mov
test
xchg
clc
sub
or
hlt
out
sub
mov
and
pop
mov
mul
dec
stos
loope
pushf
sub
adc
dec
mov
fcomp
fs
jmp
fwait
and
(bad)
push
pop
sub
pop
(bad)
jb
int3
(bad)
and
out
xor
in
pop
mov
xor
push
dec
movs
mov
jp
fist
jns
out
dec
popf
(bad)
mov
sub
lock
cmp
aam
mov
(bad)
mov
cmp
stc
lods
dec
jmp
sbb
pop
push
dec
pop
lea
add
int
(bad)
mov
push
jbe
dec
stc
mov
jg
lods
ror
in
je
scas
dec
or
arpl
xchg
(bad)
outs
push
sub
scas
mov
nop
xor
jne
popf
push
ss
aad
leave
lds
popa
mov
cmp
aam
data16
jb
pop
and
arpl
push
rcr
pushf
push
sahf
mov
stos
out
int
lds
mov
dec
adc
mov
mov
pop
adc
xor
or
jp
(bad)
jl
mov
mov
or
sbb
push
pop
aam
mov
add
push
push
xchg
add
sbb
jmp
mov
cmp
sub
out
iret
mul
mov
fsubr
and
inc
push
jae
scas
add
pop
inc
adc
ins
jo
out
push
dec
in
shl
or
mov
xlat
(bad)
xchg
fsub
push
dec
dec
xchg
pusha
xor
out
xchg
cs
add
add
int
int
sub
dec
call
loope
movs
or
dec
add
push
push
mov
(bad)
add
add
repnz
inc
loop
mov
inc
cmp
add
sub
sub
pop
sbb
or
pop
ja
pop
outs
cmps
mov
call
scas
adc
out
mov
icebp
fbstp
out
or
xchg
mov
outs
jle
ror
dec
cmp
out
push
cmp
out
pop
and
push
or
fmul
pushf
inc
push
jl
fwait
outs
imul
inc
inc
add
mov
xchg
mov
jmp
fs
xor
mov
std
(bad)
and
shr
pop
retf
ja
jne
push
movs
ins
jnp
repz
lods
jne
mov
outs
add
pop
dec
mov
or
xor
or
sub
stc
cmp
push
xchg
adc
push
mov
mov
and
and
ret
xor
dec
cwde
ret
sbb
inc
pop
add
xchg
addr16
test
movs
sbb
(bad)
aaa
fcmovnbe
cmps
div
aaa
pop
lds
pop
test
adc
inc
shl
xor
push
mov
mov
sub
stos
arpl
mov
cmps
ror
fwait
xchg
mov
ins
icebp
cmp
or
inc
xchg
dec
aam
shl
(bad)
lods
push
std
movs
(bad)
js
aad
sub
fiadd
push
mov
mov
ror
dec
xchg
int
cmp
push
aad
js
mov
or
scas
xor
xor
mov
daa
sti
cdq
mov
add
and
lods
pop
mov
mov
pusha
sbb
adc
xlat
fwait
mov
retf
mov
cs
rcl
cs
fs
push
ficom
jg
pop
cmp
sbb
test
out
mov
je
mov
xlat
add
push
mov
shl
(bad)
add
das
cs
inc
test
cmp
ror
test
leave
inc
xlat
and
into
push
jle
mov
pop
sub
aas
in
repz
ror
and
pop
mov
push
ror
sub
pop
fdivrp
rol
in
inc
pop
inc
push
mov
mov
sqrtps
mov
jnp
mov
aaa
push
mov
sbb
je
push
sub
mov
cmp
jno
jo
jne
pop
dec
dec
iret
dec
sbb
mov
scas
int
lock
outs
pop
jmp
adc
pop
mul
and
enter
xchg
cli
dec
or
mov
aad
jae
mov
test
mov
and
mov
sbb
cmps
inc
mov
sbb
and
rcl
fld
sti
lds
or
xchg
pop
test
ja
rol
rol
lahf
lahf
xor
sub
lea
cmp
mov
adc
mov
push
mov
mov
test
inc
push
ds
sbb
popf
mov
mov
sbb
cmp
std
push
stos
xchg
inc
cmp
int
adc
cmp
rcr
out
(bad)
adc
mov
(bad)
cli
xchg
lods
out
pop
hlt
jl
mov
in
mov
in
sbb
fidivr
pop
leave
ret
pusha
xchg
xor
imul
or
fistp
cmp
mov
fld1
mov
imul
loopne
mov
clc
cmps
sbb
mov
dec
jae
push
pushf
stos
pop
mov
sbb
mov
ins
dec
fcomp
add
stc
lea
lds
cdq
jmp
bound
xchg
jg
jnp
test
mov
hlt
mov
mov
test
in
call
push
xor
sbb
push
jecxz
mov
ror
(bad)
jmp
in
xor
or
mov
lock
nop
clc
dec
hlt
cmps
ins
push
lahf
in
call
ror
hlt
loop
shl
(bad)
in
or
xchg
mov
sbb
adc
shl
add
in
jno
jg
loop
jmp
jnp
push
out
inc
adc
or
ja
dec
and
xchg
inc
pusha
repz
adc
push
cli
push
fisub
mov
xor
movs
dec
add
in
fild
push
test
push
aas
jnp
retf
mov
aam
or
mov
cmp
fidivr
pop
fst
jnp
inc
fdivrp
inc
and
and
mov
scas
mov
sbb
mov
and
sub
dec
or
pop
adc
fwait
dec
sar
jb
(bad)
aas
xchg
and
jmp
inc
adc
int
or
je
pop
pop
or
add
pop
cwde
dec
and
movs
scas
movs
rcl
add
sub
mov
scas
cli
mov
jbe
adc
pop
xchg
and
mov
mov
arpl
nop
pop
out
mov
dec
ror
test
dec
and
sub
pop
jno
xchg
rol
out
sub
pop
ins
test
jmp
not
sbb
xchg
pop
retf
repz
and
sar
sahf
xlat
push
int
xlat
dec
sbb
movs
cdq
mov
aas
mov
(bad)
in
pop
test
inc
sti
aas
movs
pop
mov
repnz
into
fdiv
push
add
mov
inc
add
cmp
pop
dec
(bad)
fcomp
and
lea
cwde
pop
xor
xor
sub
dec
cmc
hlt
sub
pusha
xchg
mov
xor
inc
jmp
int3
jge
(bad)
cmp
arpl
cs
aaa
stc
out
movs
pop
(bad)
call
es
jle
clc
mov
xor
and
fwait
int3
cmp
push
or
pop
dec
jbe
fisubr
jnp
cmps
loope
iret
dec
pusha
in
shl
dec
into
ss
cli
lds
xchg
pop
xor
jne
xor
sub
loopne
cmp
sbb
aad
inc
sub
push
popa
xor
dec
(bad)
aam
fadd
mov
jmp
pop
ret
and
adc
aaa
sbb
retf
pop
pop
pusha
and
ret
out
mov
mov
sti
pop
dec
popf
mov
test
gs
mov
sti
fcomip
lds
enter
mov
stos
dec
or
shl
fstp
or
inc
rcr
repnz
icebp
call
iret
mov
inc
push
cmp
push
pop
(bad)
sti
dec
dec
mov
mov
cs
cmps
adc
pop
clc
out
neg
stos
push
xor
repnz
xchg
imul
cmp
adc
loope
xlat
fcomp
jnp
out
lock
push
xlat
xor
push
cdq
adc
data16
or
mov
adc
lock
fcomp
push
mov
pop
mov
mov
fimul
aad
push
adc
cs
shl
icebp
call
jno
fbld
xor
mov
jecxz
and
xchg
ret
ss
retf
cs
addr16
lods
mov
xchg
movs
push
repz
push
xchg
pop
ret
sbb
out
dec
shr
or
cmp
shl
mov
adc
inc
in
in
add
push
push
mov
fstp
inc
add
fstp
popf
push
dec
(bad)
xchg
aaa
xchg
sub
dec
clc
cmp
out
cli
mov
aaa
pusha
loopne
jmp
mov
aaa
icebp
stos
xor
or
cwde
cdq
div
xor
and
adc
adc
shl
sahf
sar
into
mov
pushf
mov
js
test
xchg
pop
pop
cdq
cmc
hlt
mov
xor
mov
enter
and
xor
shl
fstp
and
jnp
mov
xchg
aad
jge
repnz
adc
inc
xor
sub
icebp
mov
jecxz
jbe
cmps
in
movs
jg
inc
bound
sub
stc
xchg
or
int3
rcr
test
test
pop
rcl
cmp
jp
dec
and
mov
pop
xchg
xchg
enter
(bad)
lods
push
xchg
mov
dec
pop
jb
push
fdiv
lock
push
add
popf
mov
out
mov
jbe
jmp
jg
push
add
aad
(bad)
in
movs
(bad)
jnp
sahf
pushf
ins
fisubr
seto
xchg
jmp
dec
js
push
test
push
mov
inc
(bad)
sbb
into
push
mov
push
cmps
pushf
mov
xchg
out
sahf
fstp
lds
hlt
fidiv
xor
inc
mov
or
mov
sbb
ret
out
jl
(bad)
nop
sbb
fild
cmp
sbb
cs
and
les
jecxz
or
cwde
add
adc
scas
pop
scas
dec
mov
aas
(bad)
pop
xor
mov
pop
(bad)
jl
push
adc
push
pop
cmp
cmp
clc
push
jecxz
jle
adc
mov
mov
push
xchg
mov
repz
xchg
fwait
test
retf
xchg
jg
add
jno
mov
push
(bad)
jbe
xor
repz
lgs
add
pop
push
push
xchg
sub
xchg
lods
fstp
lods
ja
shr
jno
mov
scas
jmp
shl
xor
call
hlt
aaa
xor
lock
mov
inc
push
push
and
pop
leave
xor
sub
pop
loop
popf
add
mov
scas
xchg
push
mov
jg
sub
push
pop
add
les
mov
cmps
fwait
rcl
and
iret
pop
inc
fistp
inc
ins
sti
pop
mov
or
cmp
retf
stos
cmc
push
add
das
lods
(bad)
(bad)
jmp
test
pop
movs
add
and
xchg
inc
push
xor
in
push
out
(bad)
sbb
pop
pop
mov
jmp
adc
js
dec
mov
es
mov
mov
mov
xor
and
bnd
and
xlat
lods
sbb
data16
das
xchg
out
jmp
mov
leave
out
and
sbb
cmps
add
test
loop
inc
inc
outs
push
pop
jmp
jns
cmp
cmp
(bad)
pop
inc
adc
cld
rol
fs
mov
jbe
cmps
sahf
das
push
pop
pop
sar
dec
xor
xchg
ret
xor
jbe
mov
pop
jl
dec
and
cdq
mov
mov
pop
sbb
sub
sub
scas
mov
pop
or
lods
stos
cmp
pop
in
inc
loope
sub
test
pusha
outs
pop
adc
or
pop
dec
leave
or
bswap
or
jne
adc
mov
xchg
in
cdq
jge
pop
inc
dec
push
inc
xchg
inc
ins
jne
test
movs
mov
push
pop
mov
movs
mov
push
and
mov
mov
adc
inc
mov
xchg
imul
(bad)
aad
mov
dec
sub
pushf
adc
jp
ds
loopne
mov
cmps
cmps
fdivr
cmps
jl
add
xchg
out
xor
xchg
nop
shl
aaa
sbb
stos
fcmovnu
add
aas
fstp
pusha
mov
inc
xchg
jnp
push
movs
sbb
pop
push
cmp
stos
ret
xor
mov
fld
and
push
jno
push
dec
cld
movs
jne
sahf
int3
clc
sbb
mov
movs
fdivr
lods
and
cld
js
and
inc
jne
mov
xor
imul
pop
inc
or
add
mov
sbb
xchg
sbb
in
mov
cmp
mov
mov
test
jns
fisttp
mov
cmp
into
mov
adc
cmp
mov
mov
push
(bad)
adc
jl
stos
cli
and
pop
outs
cwde
cwde
pusha
sub
push
pop
pop
add
test
push
mov
sbb
mov
mov
mov
test
test
ss
inc
loop
mov
stos
push
ret
jne
jecxz
sub
dec
ret
push
inc
xchg
push
mov
xor
push
mov
(bad)
fld
test
jmp
mov
push
repz
fcmovbe
es
cmp
pop
aad
movs
jnp
and
xchg
repz
xchg
in
les
repz
das
and
sbb
std
scas
gs
pop
shl
fnstsw
mov
mov
and
test
and
push
arpl
repz
sbb
ins
repz
mov
inc
xor
dec
jbe
in
and
xor
xor
jo
in
mov
int3
add
mov
adc
mov
je
mov
push
and
inc
add
jne
icebp
in
leave
ror
sbb
or
ret
cmp
lahf
sbb
adc
cmc
ins
pop
lahf
xchg
fiadd
pop
test
(bad)
cmp
nop
ja
jno
cmc
test
fld
sub
dec
jbe
inc
retf
add
push
std
aaa
sbb
or
adc
xchg
inc
cmp
sub
call
sbb
movs
out
dec
cmp
test
fwait
jl
push
cs
ficomp
sbb
sbb
lea
hlt
std
jae
cmps
sub
fcmovne
dec
fiadd
retf
ds
mov
xor
mov
or
enter
or
xor
pusha
xor
fwait
call
ret
xchg
mov
imul
jle
inc
iret
rcr
in
or
test
sbb
jge
bound
cdq
add
cmp
loop
arpl
dec
cdq
imul
and
(bad)
mov
and
and
sub
dec
sub
sbb
jb
mov
out
cmp
ret
push
dec
xchg
pusha
add
and
shr
outs
xchg
fisttp
mov
push
inc
iret
jbe
push
loopne
inc
adc
sti
cli
repz
ss
xchg
data16
pop
dec
arpl
mov
pop
jle
push
scas
dec
das
sub
clc
mov
mov
outs
mov
lock
mov
out
ds
into
and
push
sbb
adc
rol
or
bnd
xchg
inc
cdq
mov
jmp
push
jb
mov
scas
inc
nop
sub
sbb
adc
add
inc
sar
inc
mov
out
cmp
xor
addr16
pop
fidivr
push
push
lods
mov
dec
retf
fwait
mov
sub
and
mov
adc
(bad)
lock
clc
ret
mov
test
push
jge
test
xor
test
push
fcomi
and
add
adc
pop
inc
lods
(bad)
shr
or
jge
scas
push
mov
enter
sahf
sbb
jg
pop
push
in
imul
mov
add
xchg
ss
pop
in
add
test
into
push
xor
call
call
dec
mov
lea
arpl
cwde
or
retf
out
loopne
fwait
vorps
outs
out
jecxz
jmp
adc
xor
jmp
iret
aam
das
sub
sub
hlt
add
inc
or
cmp
out
imul
xchg
inc
fmul
sbb
and
bound
call
sbb
xor
mov
pop
leave
jno
sub
mov
xchg
outs
(bad)
cmps
sbb
(bad)
or
push
dec
add
jl
in
jae
jb
pop
dec
jge
fs
test
or
inc
push
popf
cmp
leave
ins
sar
pop
fwait
cli
xor
sub
xor
xchg
and
inc
cmps
addr16
(bad)
sbb
(bad)
call
popf
xchg
popa
data16
cmp
test
call
push
arpl
stos
imul
imul
loop
out
int3
inc
out
cmp
test
mov
int
mov
sub
xchg
iret
xchg
dec
std
push
aad
sbb
test
sub
jmp
push
sub
movs
or
or
lock
scas
out
dec
push
or
push
xchg
mov
daa
outs
pop
or
or
and
push
mov
xchg
je
inc
dec
jno
pop
pop
std
loopne
imul
jae
mov
dec
out
rcl
jb
retf
outs
mov
mov
int3
movs
sbb
addr16
data16
push
js
(bad)
mov
ds
push
cmp
mov
ins
daa
int3
xchg
arpl
dec
push
xchg
pop
or
mov
icebp
or
add
cmp
push
fnstcw
fbstp
(bad)
sbb
mov
stc
sbb
or
lods
mov
xchg
cs
clc
std
mov
hlt
arpl
ins
call
cli
bound
xchg
mov
mov
movs
push
pushf
and
lea
add
adc
psubq
dec
pop
push
movs
pop
sub
mov
pop
mov
cmp
mov
adc
sti
js
push
cwde
jg
adc
xchg
jmp
cmp
call
inc
shl
inc
aas
push
loopne
sub
in
dec
jmp
add
hlt
enter
loopne
pop
xor
(bad)
popf
lock
mov
mov
cdq
inc
loop
push
out
jl
mov
sub
int3
inc
sbb
sti
sbb
pushf
push
sub
jmp
call
pushf
aas
cli
fwait
cmc
jne
cmps
in
jecxz
mov
mov
pop
jb
pop
stos
loopne
ins
sbb
ret
shr
push
(bad)
enter
iret
and
sub
push
into
dec
je
lods
(bad)
mov
adc
push
aaa
inc
adc
mov
push
mov
xor
adc
and
add
aam
mov
adc
cmps
out
mov
push
test
and
inc
mov
fwait
and
xor
lock
cld
add
add
mov
push
xor
shld
aad
popf
mov
inc
mov
dec
call
fdivr
dec
mov
adc
in
jbe
xor
out
xor
jbe
pop
mov
mov
jle
sahf
push
ds
adc
stos
(bad)
cmp
jl
jp
test
or
xchg
push
jmp
aas
cmc
gs
in
xor
cmps
fs
mov
je
jmp
cld
sub
lds
fwait
pop
jno
cmp
(bad)
inc
lahf
dec
jnp
jp
das
cdq
jne
push
mov
sbb
push
js
push
repz
pop
call
sub
cwde
inc
pushf
test
cmp
xchg
stos
jno
jo
push
adc
scas
ss
mul
bnd
in
pop
ror
jg
stos
lods
sub
sti
push
xor
xchg
mov
mov
pushf
fadd
or
xchg
inc
(bad)
cmp
sbb
jge
fs
mov
dec
mov
loope
imul
test
inc
mov
fild
les
cwde
adc
mov
sbb
shr
sbb
fnstenv
dec
mov
add
loopne
(bad)
in
mov
out
or
add
adc
dec
fcomp
outs
push
daa
adc
mov
nop
jecxz
fwait
cmp
xchg
xor
call
sbb
cmp
jmp
mov
out
cmp
jns
cmp
rol
test
jle
jmp
inc
sbb
out
sub
mov
mov
int
pop
fld
dec
xchg
iret
pop
retf
push
mov
sahf
test
and
add
jnp
(bad)
dec
pop
cmp
add
adc
leave
retf
inc
test
test
cmps
fs
in
in
fldcw
ret
xor
outs
outs
iret
or
push
sub
push
rcl
ja
push
shl
call
jg
cmp
and
stos
clc
jb
push
add
and
and
cmps
dec
dec
sub
pop
scas
repnz
in
retf
std
lock
(bad)
sub
and
nop
iret
fwait
dec
ret
sbb
and
addr16
mov
and
push
call
iret
cmps
loopne
pop
shl
seto
mov
in
add
out
out
mov
cmps
push
out
jns
sub
push
add
cmp
in
pushf
scas
pop
in
es
cli
call
mov
push
push
es
jmp
mov
and
stos
addr16
fisttp
lea
add
ss
test
add
test
inc
pop
cli
js
xor
xchg
add
idiv
or
movs
aad
sbb
push
lods
(bad)
retf
sti
pop
jae
outs
inc
jo
ins
sahf
(bad)
out
test
test
imul
cdq
sub
sahf
mov
push
push
dec
arpl
jne
mov
(bad)
(bad)
cmp
or
rol
mov
imul
sbb
jb
xor
dec
push
xchg
das
xlat
fdivr
dec
or
aaa
pop
add
or
ss
mov
fcomp
pop
lock
add
popf
xchg
and
mov
cmp
push
dec
cdq
int3
nop
cwde
data16
cmp
mov
js
lahf
xchg
pop
push
scas
sbb
popa
mov
popf
out
int
cmp
xor
fsub
push
or
mov
sub
in
test
pop
jo
int
ins
mov
xchg
ja
jmp
or
push
inc
fmul
out
mov
je
push
jecxz
movs
adc
pop
leave
int
inc
add
fnstsw
rcl
ins
test
or
dec
mov
outs
and
dec
(bad)
enter
in
outs
call
(bad)
cmps
cli
jmp
data16
(bad)
in
push
mov
fisubr
xchg
pop
jae
lods
inc
data16
stos
jae
fwait
cmp
sbb
jo
hlt
xchg
(bad)
ins
pop
xor
test
xchg
fidivr
cmps
(bad)
mov
xchg
lods
add
fwait
mov
or
xchg
xor
pop
imul
and
add
call
sbb
cmp
loop
or
mov
enter
rol
or
jns
sbb
aad
cmp
mov
dec
pop
pop
cdq
mov
outs
add
jmp
mov
sub
shr
(bad)
jecxz
sbb
sbb
arpl
xchg
xor
jg
movs
(bad)
xor
fs
push
hlt
inc
cmp
and
sti
call
mov
xor
push
cmp
pop
clc
(bad)
fnstcw
ret
arpl
cmps
add
push
xor
in
xchg
imul
jle
scas
push
int
or
xchg
mov
int3
add
icebp
and
mov
inc
jo
ins
in
shl
add
test
ins
(bad)
shl
je
sub
or
pop
lea
jle
call
ds
mov
fadd
mov
out
adc
retf
loopne
shl
jno
push
movs
dec
inc
ret
sar
pop
scas
cmc
movs
xchg
cmp
mov
rcr
in
adc
jp
sbb
push
push
je
in
lods
stos
jge
or
pusha
loopne
push
mov
push
int3
inc
mov
sbb
sti
sub
cmp
test
idiv
into
push
jmp
xor
mov
lods
xchg
outs
(bad)
mov
jmp
mov
mov
cmp
mov
add
lods
pop
ffree
ror
cmp
repz
xlat
enter
sub
add
data16
fidiv
int3
lods
call
mov
out
int3
add
and
and
std
cdq
push
xor
int3
push
in
sub
push
lds
test
jmp
int
push
loope
xor
std
popa
bound
cmp
xchg
xchg
cmp
loope
xor
leave
pop
xchg
mov
sbb
push
jno
(bad)
lds
icebp
dec
mov
jae
xor
popa
mov
imul
sub
xchg
popa
aaa
test
mov
or
xchg
out
outs
aaa
nop
fiadd
dec
stos
cli
mov
xchg
mov
and
cmps
test
outs
fst
out
sbb
test
(bad)
fstp
loope
cld
movs
cmp
xchg
je
vpmacssdd
fcomp
out
pop
cmp
lahf
xor
std
call
imul
dec
jbe
adc
stc
pop
ss
sub
je
sub
dec
add
add
repz
cmp
arpl
inc
std
push
jae
inc
xchg
inc
sub
and
push
popf
out
jno
sub
pop
(bad)
mov
enter
mov
sub
ins
outs
(bad)
xor
xchg
das
mov
xlat
loope
sbb
(bad)
aas
stc
out
jg
xor
in
rcr
push
jno
pop
retf
sub
push
push
data16
jnp
fcomp
cs
outs
add
test
inc
test
mov
and
sbb
xor
cmc
repz
mov
inc
daa
adc
stos
add
fldcw
leave
(bad)
xlat
and
dec
push
push
jo
lods
pop
call
xchg
xor
outs
rcr
add
mov
mov
cmc
outs
int3
leave
cmc
jne
cmp
icebp
pop
cs
sbb
scas
jmp
pop
arpl
pop
sub
adc
sub
stc
and
neg
jg
sbb
leave
add
sub
lods
repz
mov
lods
sbb
dec
rol
jg
adc
jecxz
sub
test
fadd
ins
hlt
jp
stos
out
ds
lahf
out
xor
sbb
and
mov
outs
pop
dec
jmp
pop
xchg
repz
test
dec
call
mov
push
jns
adc
push
or
mov
scas
jbe
adc
fld
sub
jae
jmp
icebp
mov
jp
push
push
daa
cmp
push
jle
out
stos
(bad)
movs
mov
movs
pushf
mov
inc
(bad)
int
mov
pop
cmp
movs
clc
stos
jne
(bad)
popa
xchg
cmc
or
push
and
xor
push
mov
mov
cmp
push
fadd
adc
mov
cmps
add
ss
cmp
fldcw
adc
ret
sub
jecxz
dec
in
pop
sahf
mov
push
or
cmp
cwde
pop
mov
adc
inc
cmp
cmps
test
push
push
test
shl
push
int
and
or
push
pop
xchg
and
retf
jne
cld
jge
shl
(bad)
mov
jle
fimul
push
arpl
adc
ret
mov
dec
rcr
mov
es
pop
push
jg
test
pop
lea
pop
xchg
cmp
in
adc
or
fwait
push
cmps
test
pusha
jg
mov
sub
mov
cmp
xchg
push
mov
cmc
test
cmp
stos
aaa
rcr
or
in
data16
inc
iret
test
inc
mov
gs
cli
mov
push
call
sahf
pusha
test
jae
data16
add
daa
jp
call
ins
in
(bad)
xlat
or
push
mov
lods
cmp
jg
clc
add
xor
fdiv
or
cmp
mov
stc
sub
mov
cld
sub
pop
sub
fstp
add
and
dec
dec
test
inc
mov
xor
or
repnz
or
movzx
stos
call
mov
test
je
ret
mov
(bad)
push
cli
call
mov
push
je
fs
mov
(bad)
fsub
test
test
into
retf
mov
xchg
shr
adc
xchg
fld
mov
sub
and
xchg
jnp
sahf
fsubr
lahf
lahf
pop
dec
xlat
imul
lods
ds
mov
add
das
rol
mov
jae
dec
mov
in
xchg
xchg
xor
jl
sub
mov
repnz
retf
icebp
je
pop
cmp
and
mov
adc
popa
mov
adc
cmp
(bad)
(bad)
es
rcl
je
xlat
push
lea
ret
gs
and
mov
pop
xor
adc
push
pop
mov
sar
dec
or
bound
ds
ins
xchg
pushf
mov
cmp
mov
mov
lods
push
in
and
neg
(bad)
in
jns
add
in
sahf
cdq
sbb
add
push
cmps
pop
jge
cwde
mov
in
(bad)
and
in
sbb
add
and
push
in
or
out
movs
in
mov
fnstenv
xor
xor
mov
dec
popa
mov
scas
lds
cmc
push
jl
xchg
jl
inc
cdq
cld
xchg
lods
inc
aaa
add
mov
cld
xchg
jmp
push
cld
sbb
push
dec
movs
hlt
fdiv
push
test
test
shr
pop
add
in
xchg
cli
push
loope
and
push
cmp
pushf
mov
retf
add
arpl
add
and
or
jl
mov
jle
push
repnz
mov
fwait
xor
xor
pop
test
jb
imul
inc
cmp
jmp
pop
push
mov
jae
xor
(bad)
xchg
(bad)
dec
outs
stos
pop
mov
int
aad
pop
jg
add
ret
mov
aas
push
lea
shl
outs
neg
xchg
jg
mov
sbb
retf
hlt
cmc
outs
pop
push
test
jecxz
jbe
mov
sub
add
leave
lds
add
pusha
(bad)
ror
adc
enter
push
sub
adc
lock
sbb
dec
fistp
mov
push
aam
lds
je
aaa
inc
lea
and
mov
xor
xchg
dec
leave
fwait
mov
cli
lock
add
sti
dec
and
fstp
push
pusha
mov
adc
int
retf
push
xor
in
gs
inc
aaa
mov
adc
adc
adc
(bad)
pop
jle
push
inc
dec
(bad)
test
and
out
inc
cmp
(bad)
(bad)
jmp
or
xor
scas
pusha
lahf
lea
mov
mov
sbb
into
push
movs
jmp
sbb
imul
(bad)
and
sub
adc
fcom
push
pop
cmps
outs
push
movs
jg
(bad)
dec
jo
sbb
jo
mov
and
dec
push
sbb
shl
xchg
repnz
sub
test
cmp
xchg
push
cmps
pop
dec
loopne
sub
mov
gs
cmp
mov
mov
sub
test
mov
push
mov
inc
test
inc
ins
loopne
in
cli
shr
jne
out
clc
sbb
pop
retf
mov
test
pop
jge
jge
stos
xchg
jle
mov
(bad)
push
rcl
sbb
jb
mov
cmps
pop
fimul
xchg
loopne
xchg
sub
mov
lods
jp
mov
sub
pusha
std
shl
dec
and
mov
lods
ins
and
loope
fs
pushf
outs
push
xor
adc
and
xor
sbb
icebp
enter
and
inc
cmp
cmp
mov
jmp
stos
and
loopne
ja
inc
jecxz
mov
jge
cmps
mov
icebp
pusha
add
pop
test
cwde
mov
jl
vpmadcswd
int
call
repz
mov
push
mov
xor
ss
inc
in
movs
jae
push
sbb
les
rcl
je
int
cwde
jg
lock
ds
loop
rol
sub
(bad)
add
or
int3
adc
fld
loop
add
xchg
inc
into
dec
int3
cmp
ficomp
sti
push
push
dec
cmp
inc
mov
or
aam
mov
mov
inc
movs
push
scas
inc
inc
mov
rcr
jo
dec
in
in
pop
cmp
or
pop
cmp
cmp
dec
and
jb
in
fsubr
lods
bound
nop
push
loop
mov
xchg
jnp
mov
jle
mov
ror
ret
cmp
mov
xor
inc
sti
pop
pop
fcom
in
xchg
lods
ret
(bad)
xchg
lds
mov
jns
jmp
fdiv
adc
lea
adc
sub
cmp
das
test
lods
addr16
dec
fidiv
shl
jo
dec
shl
nop
push
ins
cli
fidivr
iret
into
lds
xchg
and
sbb
stos
in
dec
clc
popf
out
xchg
stmxcsr
(bad)
xor
sub
and
loop
jns
iret
in
dec
mov
cdq
adc
and
and
inc
gs
pusha
and
std
(bad)
mov
pop
cmp
leave
retf
add
arpl
hlt
sbb
or
mov
sbb
cld
cwde
das
mov
pop
int
aaa
ds
inc
aad
and
mov
lahf
div
addr16
pop
dec
in
out
ja
xchg
fdivr
jge
sbb
data16
xchg
ds
div
xchg
xchg
movs
(bad)
in
mov
sbb
push
int
imul
add
xor
sbb
xchg
and
sub
add
in
iret
push
nop
aad
or
in
cmp
and
adc
mov
sub
pop
jne
test
test
jmp
push
push
mov
neg
cld
mov
daa
int3
mov
sbb
mov
mov
movs
ja
and
cmp
push
outs
adc
cld
inc
xchg
push
addr16
nop
xchg
repz
pop
jne
inc
sub
pop
add
push
jecxz
in
mov
aad
sbb
push
in
enter
(bad)
pop
pop
xlat
lea
sbb
ss
loope
xchg
ds
inc
test
pop
dec
push
outs
pop
inc
cli
mov
xchg
push
retw
ss
dec
mov
mov
or
dec
jne
push
cmp
sar
jecxz
(bad)
out
std
mov
fst
(bad)
mov
in
pushf
pop
aam
adc
ds
dec
(bad)
mov
cmp
mov
dec
mov
ss
adc
push
pop
cli
(bad)
cmps
mov
ja
add
xor
or
popa
test
sub
or
arpl
test
xchg
pop
imul
xor
mov
mov
fsub
lods
mov
cs
mov
cs
jbe
xlat
aas
out
mov
in
dec
les
jmp
pop
call
pop
or
setge
or
shr
push
into
inc
std
mov
mov
les
scas
loop
imul
xchg
(bad)
scas
dec
cmps
and
movs
mov
aas
mov
mov
add
ja
std
add
inc
sti
cld
cmp
jmp
nop
dec
gs
lea
loopne
sbb
retf
add
lods
iret
movs
arpl
sti
sbb
pop
fadd
push
aad
push
cwde
sahf
xor
ins
cli
lahf
cmps
scas
push
push
xchg
add
xchg
sub
add
pop
xchg
adc
pop
cli
nop
aam
lods
mov
rcl
cmps
xchg
outs
test
adc
aam
inc
or
pop
push
stc
jbe
jb
repz
add
cmp
inc
dec
rcr
ret
cmp
ret
ins
pop
cmp
mov
movs
cwde
sbb
js
ss
push
ror
inc
pop
shl
in
call
jl
dec
xor
cmp
sub
mov
(bad)
and
pop
clc
inc
jmp
or
aaa
xor
movs
nop
jg
popa
dec
or
in
adc
pop
sub
jmp
adc
pop
mov
mov
cmps
(bad)
and
adc
mov
push
mov
add
mov
pop
mov
or
int
aad
ja
pop
add
jg
in
jg
pop
out
ret
into
add
push
stc
cmps
(bad)
pop
outs
aas
push
adc
aam
sar
jecxz
push
adc
fistp
xchg
data16
pop
xor
jo
push
pop
ins
shl
xor
mov
imul
ret
in
fs
jnp
mov
int
jbe
pop
dec
sbb
inc
xchg
mov
jno
not
jecxz
sub
or
xor
add
mov
in
and
dec
inc
cmp
cmps
mov
fisttp
call
pop
adc
sub
icebp
or
outs
ror
nop
fwait
fwait
stc
js
ja
add
aas
mov
mov
loope
aaa
adc
fidiv
adc
in
repnz
daa
imul
outs
jmp
pop
inc
bound
push
mov
ja
push
std
mov
icebp
mov
imul
cmp
dec
inc
mov
xchg
in
cmp
nop
(bad)
clc
lahf
int3
and
ss
retf
ins
pop
cmp
sub
dec
mov
push
sti
test
push
sbb
out
cmp
mov
gs
xor
push
movs
cmc
out
push
mov
or
adc
xor
out
xchg
push
mov
or
pop
pop
jmp
mov
(bad)
cmp
into
pusha
test
retf
mov
das
rol
jecxz
mov
push
push
mov
inc
nop
icebp
and
js
or
(bad)
ret
aad
bound
mov
js
popa
and
data16
jp
add
cmps
shr
mov
retf
ffree
xor
push
adc
cmp
dec
and
pop
test
mov
cmps
nop
(bad)
in
lahf
inc
rcr
pop
jmp
(bad)
enter
jne
sbb
xor
sub
js
lds
lock
mov
jl
fidiv
or
cmps
scas
adc
adc
mov
inc
adc
stos
xor
bound
cmp
aam
xchg
add
retf
in
dec
mov
test
or
push
es
mov
xchg
adc
lock
ja
out
imul
xor
push
mov
popa
(bad)
outs
inc
fwait
bound
(bad)
xor
loope
(bad)
cmp
shr
xchg
call
dec
mov
iret
or
fcmovnbe
mov
fdecstp
jo
cli
mov
cli
ret
sub
test
in
rol
jbe
push
cld
nop
(bad)
fldcw
cwde
loop
add
add
mov
std
xchg
push
loope
mov
stos
in
mov
in
les
xchg
mov
bound
in
mov
popa
sub
hlt
pushf
jbe
dec
xchg
jmp
sbb
mov
sbb
pop
fwait
mov
mov
pushf
mov
(bad)
push
out
xlat
mov
mov
push
in
and
jmp
out
dec
imul
sub
xor
daa
cwde
and
push
pop
push
or
das
and
test
js
sbb
js
outs
add
out
cmc
sub
and
jae
call
cmp
ins
push
sub
push
imul
je
or
call
mov
adc
dec
sbb
aad
mov
add
enter
inc
in
in
mov
rdmsr
inc
ds
rcl
test
pop
mov
cmp
call
je
inc
push
or
cmp
bound
xchg
mov
sub
pop
stc
mov
cmps
sbb
dec
mov
mov
out
ror
pop
daa
sbb
pop
repz
mov
push
sbb
mov
xchg
add
fld
cwde
(bad)
test
neg
cmps
mov
inc
pop
sbb
cli
int
jne
push
mov
rcr
bswap
cs
out
cs
add
pop
pop
bound
xor
repnz
jp
daa
addr16
sub
icebp
cwde
scas
inc
mov
stc
daa
lds
adc
cmc
or
stc
loope
test
push
out
cmc
or
mov
inc
out
scas
popf
dec
mov
cmp
mov
sahf
cld
lahf
and
ret
(bad)
xchg
push
ins
jnp
mov
fdivr
xchg
push
test
ror
out
pop
xchg
adc
pop
nop
cmp
imul
inc
dec
lds
or
inc
test
xor
mov
dec
and
test
in
ins
fs
xlat
pop
push
scas
je
and
outs
and
pop
mov
imul
xchg
xchg
dec
outs
arpl
add
or
push
out
repz
sti
ins
fst
jmp
mov
sahf
xchg
push
jo
cmp
pushf
lds
and
push
push
loop
xor
sub
push
addr16
test
jge
out
push
icebp
in
jmp
mov
jbe
std
adc
sbb
add
sub
fild
jl
enter
push
fld
adc
push
addr16
sti
in
xor
pop
and
sbb
movs
outs
fadd
sbb
sub
jl
test
cmp
jle
nop
inc
dec
and
(bad)
mov
movs
push
sub
mov
int3
stc
lds
cli
mov
pop
call
pop
pushf
or
clc
aas
pop
call
mov
mov
aaa
and
fstp
inc
dec
nop
outs
xchg
push
retf
push
and
gs
rol
cmp
mov
scas
push
(bad)
mov
out
jb
in
clc
push
fdiv
lds
das
fdivr
outs
daa
xchg
ins
xor
in
mov
jge
inc
sbb
add
sub
or
cmp
lods
ret
outs
(bad)
jno
pushf
sbb
mov
inc
rcr
dec
pop
inc
or
sub
mov
mov
jecxz
sub
and
lods
scas
jbe
pop
xor
jb
(bad)
pop
pop
mov
lods
push
out
aad
pusha
xor
mov
pop
inc
add
jg
push
pop
pop
es
(bad)
pusha
fsubr
xchg
call
out
int
fisttp
mov
pop
test
add
push
or
dec
fst
jp
jns
in
and
aam
xchg
pop
mov
xchg
inc
jge
dec
adc
inc
jns
movs
cli
dec
outs
xor
mov
rol
sub
xor
les
fld
aam
ret
pop
(bad)
adc
shr
push
push
sbb
pop
dec
fiadd
mov
imul
sbb
cld
sbb
stc
popf
adc
pop
inc
(bad)
jmp
xor
mov
xor
pop
jne
outs
pop
shl
add
retf
push
push
loopne
ins
popf
jmp
ja
xchg
sbb
push
jecxz
cdq
push
lahf
mov
adc
lods
sub
mov
fwait
das
cmps
mov
gs
retf
inc
(bad)
hlt
push
shl
cli
jmp
enter
inc
dec
or
lods
dec
xchg
ja
fsubr
dec
leave
movs
bswap
(bad)
cld
in
stos
pop
lock
mov
adc
sahf
lods
imul
mov
out
pop
and
add
xor
mov
push
and
cli
add
add
and
or
mov
add
jnp
out
in
stos
pop
jo
add
das
mov
popf
sub
xlat
(bad)
sbb
mov
or
test
dec
cmp
or
nop
ror
jl
push
pop
(bad)
jg
mov
int3
push
out
in
aaa
lea
pop
jge
sbb
repz
jg
ss
jmp
pop
inc
mov
aad
jns
and
nop
inc
xor
cmp
mov
(bad)
inc
movs
add
loope
or
stos
je
dec
js
mov
or
mov
or
iret
and
jge
arpl
out
call
enter
add
inc
mov
ret
dec
mov
leave
std
mov
dec
mov
stos
lds
jmp
lods
sub
ja
adc
fstp
pop
cmp
mov
or
xchg
mov
lods
ss
jns
add
pop
inc
cli
les
sahf
jge
das
int3
add
inc
in
mov
and
xchg
mov
mov
sub
mov
ret
push
das
mov
pop
retf
jge
int3
push
js
adc
test
(bad)
ror
lds
das
and
mov
inc
test
in
lahf
stc
xlat
fnstenv
dec
pop
jecxz
int
xchg
mov
xor
jmp
fucomi
and
adc
mov
jnp
or
mov
popf
mov
sbb
jbe
call
mov
or
jl
mov
xor
in
mov
inc
sub
movs
xchg
movs
fiadd
dec
xor
cmp
fsubr
test
adc
sub
sub
fld
sbb
push
jns
call
daa
popf
(bad)
aas
jp
add
lock
repz
out
aaa
push
inc
(bad)
mov
adc
pop
inc
iret
pop
in
sub
popf
and
cmp
xchg
push
(bad)
inc
gs
adc
mov
mov
fidiv
mov
aas
test
sub
cmps
mov
jns
loopne
bound
(bad)
sub
in
stos
jl
mov
pop
inc
int3
or
mov
imul
or
dec
adc
adc
jcxz
adc
(bad)
cmp
(bad)
scas
test
xor
add
jb
retf
cmp
les
push
fdivr
pop
out
test
das
movs
inc
test
shl
push
pop
cwde
xor
pusha
js
idiv
sahf
(bad)
in
push
pop
inc
inc
jne
stc
int
sbb
mov
jb
mov
retf
fsub
je
mov
fcom
rol
aam
das
and
addr16
dec
mov
or
int3
and
pusha
and
add
xchg
jmp
dec
mov
scas
jbe
mov
inc
ins
mov
mov
gs
repnz
gs
addr16
int3
cwde
push
jns
fdiv
sti
lahf
adc
sub
idiv
stos
aad
in
test
sub
dec
or
inc
mov
pop
loopne
es
xor
pop
stc
into
aaa
jge
test
dec
add
(bad)
jg
ret
inc
inc
(bad)
mov
in
push
mov
call
repz
loope
das
retf
inc
inc
mov
pop
and
and
rcl
(bad)
mov
fiadd
dec
jb
pop
repnz
inc
fstp
rol
sahf
clc
jmp
repnz
pop
cwde
daa
je
sar
cld
lahf
jb
dec
mov
fwait
in
ja
push
jl
mov
or
sub
sub
repnz
mov
jno
imul
outs
outs
cli
icebp
mov
pop
cmp
add
inc
mov
jmp
jl
dec
jp
aas
jg
outs
pop
lods
aad
sbb
sbb
xor
call
mov
fwait
sub
and
sub
test
xor
(bad)
scas
inc
retf
dec
stos
mov
repnz
mul
int
mov
movs
loopne
adc
and
cdq
rcr
(bad)
sub
(bad)
(bad)
cwde
inc
pop
pop
test
dec
dec
mov
fcom
repnz
shr
adc
sbb
test
ss
mov
in
outs
popf
mov
xchg
ror
adc
inc
pop
mov
or
mov
in
sbb
in
mov
xor
nop
mov
sub
lahf
shl
dec
imul
and
imul
sar
xchg
pop
jae
push
aam
push
cdq
out
lock
xchg
lods
retf
into
pop
push
call
ret
cmp
outs
and
sub
cs
and
mov
fild
addr16
cdq
sub
aam
cmps
sbb
retf
dec
jne
or
in
xchg
xchg
or
fdiv
gs
push
pop
pushf
jo
repz
xlat
mov
shl
lods
rcl
movs
xchg
enter
sar
push
sbb
mov
push
rcl
jne
stos
jns
xchg
int
sub
sub
sbb
arpl
hlt
or
mov
in
mov
enter
pop
je
push
pop
ja
push
or
pop
mov
pop
add
cmp
add
push
dec
rcr
in
dec
mov
cmp
sar
cdq
aad
push
push
in
sbb
dec
or
scas
xchg
xchg
loop
sub
push
xchg
popf
jge
jns
mov
in
pop
sbb
mov
pop
and
les
adc
jae
in
push
mov
test
jle
pop
retf
add
outs
(bad)
loopne
inc
jg
cmp
pop
pushf
movs
retf
push
sbb
stos
arpl
call
jnp
mov
add
or
mov
push
add
jbe
leave
xchg
add
pop
mov
push
adc
mov
mov
daa
outs
adc
jp
(bad)
lods
in
sbb
cmps
or
movs
mov
xor
dec
push
sbb
add
cmp
push
call
mov
inc
enter
adc
test
fst
inc
inc
rol
xchg
(bad)
out
add
and
sti
mov
daa
in
pusha
lea
pop
add
aad
add
push
clc
lea
jmp
jno
sub
pop
pusha
std
push
and
lds
js
inc
arpl
pop
push
sbb
adc
push
retf
inc
nop
push
(bad)
push
xchg
lods
jne
call
adc
jge
or
je
xlat
push
jae
xor
sbb
dec
mov
cmp
mov
mov
aad
mov
mov
icebp
or
mov
repnz
push
repz
push
mov
mov
hlt
aas
jg
aam
and
xor
(bad)
loop
jb
jl
sbb
xchg
push
int3
jno
sahf
jnp
jmp
ret
jl
dec
fs
inc
rcr
jg
dec
call
cmp
dec
xor
movs
xor
push
jns
jp
jg
jne
mov
jle
cdq
iret
cwde
pop
hlt
jmp
outs
int3
inc
dec
xor
push
repz
push
cmp
and
es
jmp
dec
jmpw
(bad)
int
dec
add
repnz
mov
test
or
pop
cmp
into
aam
nop
xor
or
pop
jno
imul
and
movs
push
jnp
sub
adc
xchg
cmp
rcr
jmp
cmp
loopne
psubw
jmp
pushf
jl
in
push
xor
ret
dec
lea
adc
xor
add
repz
fstp
push
mov
sub
(bad)
xlat
or
xor
add
les
sbb
mov
data16
mul
pusha
or
cdq
adc
clc
ret
out
mov
mov
push
add
aas
xchg
ret
xchg
adc
mov
(bad)
adc
stc
out
or
mov
or
cmp
dec
mov
xor
sub
or
push
pop
mov
and
xchg
std
cwde
movs
aam
je
dec
pop
fimul
(bad)
xor
sub
mov
dec
push
fs
mov
scas
bound
test
repnz
stc
sbb
lods
fldcw
and
out
mov
(bad)
xchg
dec
push
inc
push
sub
call
ror
sbb
bound
or
out
daa
mov
mov
hlt
add
idiv
sbb
xchg
adc
pop
mov
sub
inc
retf
lock
addr16
neg
add
inc
mov
mov
mov
jae
pop
or
test
dec
xlat
dec
dec
and
scas
sub
inc
cwde
fild
xchg
lock
daa
enter
cmp
pop
mov
push
lea
or
xchg
mov
mov
push
iret
retf
std
neg
test
cli
cs
div
rcr
mov
pop
mov
xchg
std
jle
sub
jmp
mov
push
in
ds
repz
or
xchg
cmps
mov
out
dec
cld
or
ins
imul
ss
or
mov
jo
and
push
rcl
mov
out
add
cmp
and
gs
mov
pop
pop
fldenv
bound
sub
test
cmps
push
push
inc
movs
stos
and
popf
es
in
pop
and
cdq
cmc
jmp
aas
inc
ds
hlt
out
hlt
lds
dec
pushf
cwde
out
in
(bad)
lock
mov
mov
adc
push
les
or
or
scas
test
inc
call
fcomp
and
mov
cmp
rcl
dec
or
scas
and
leave
sbb
outs
inc
add
test
xlat
hlt
repz
add
pop
das
fsubr
jnp
ss
xor
dec
adc
mov
add
xchg
sub
xchg
jo
gs
std
add
mov
lds
ds
and
xchg
adc
mov
gs
sub
sbb
int3
push
push
mov
out
es
loope
mov
mov
cli
jg
aad
retf
adc
pop
iret
idiv
or
mov
iret
out
bound
mov
dec
jg
fdiv
bound
bound
dec
push
in
or
xchg
cdq
mov
test
lods
movs
fidiv
enter
int3
mov
ret
sbb
dec
adc
arpl
outs
fnstcw
mov
cld
aad
adc
jo
cmps
xchg
mov
dec
das
mov
into
jne
jle
into
push
sahf
pop
mov
mov
pop
xchg
loop
stos
jbe
jno
dec
fisttp
jb
cld
dec
dec
push
mov
or
imul
inc
stos
pop
shl
sub
(bad)
(bad)
ja
hlt
arpl
adc
xor
sbb
mov
mov
cmp
cdq
push
jae
push
shr
cli
mov
fstp
xor
mov
and
add
(bad)
mov
push
das
loope
mov
add
aas
rcl
and
imul
rol
inc
and
jge
push
lea
pop
aad
pushf
arpl
aad
es
or
xor
int
movs
mov
mov
jmp
mov
pop
sahf
ffreep
push
pop
stc
arpl
data16
adc
stos
or
movs
fistp
pusha
ds
mov
xchg
retf
pop
pusha
enter
adc
mov
mov
dec
sahf
and
mov
cdq
in
or
aad
add
push
sbb
and
inc
sahf
adc
add
std
xchg
cmp
or
ret
push
or
in
cmp
aaa
shl
adc
sub
mul
push
pushf
inc
ins
push
ret
mov
fwait
mov
xchg
sbb
or
int3
(bad)
into
lods
addr16
jbe
(bad)
push
lahf
int
xor
add
add
jae
ds
repz
jbe
leave
xor
fucom
(bad)
in
mov
add
inc
popf
fnsave
cs
lahf
xor
cld
jl
stos
mov
or
pop
pop
data16
(bad)
xlat
movs
xchg
sub
movs
jmp
sbb
pop
aas
cdq
cmp
call
xlat
adc
(bad)
pop
xor
int3
add
dec
cmp
scas
test
dec
mov
retf
pop
xor
mov
mov
mov
push
ror
jp
mov
jmp
cdq
imul
sub
cmp
dec
add
pushf
mov
(bad)
xchg
mov
movs
stos
in
jno
ss
xbegin
push
mov
cmp
js
xor
fstp
cdq
jno
mov
les
ins
mov
and
push
dec
mov
fistp
xor
and
out
mov
jno
lods
cli
mov
or
bound
or
aaa
and
sbb
shl
gs
push
jb
lea
jnp
inc
shr
fistp
mov
sbb
jmp
mov
int3
rcr
push
daa
js
mov
arpl
aaa
add
call
sahf
mov
mov
mov
in
jmp
mov
push
mov
inc
cwde
loope
jns
ror
test
dec
ficomp
aam
call
add
pop
loopne
jo
pop
xchg
mov
daa
add
rol
leave
(bad)
mov
mov
iret
cmp
mov
adc
mov
mov
das
xchg
dec
cmc
dec
mov
xor
sub
jge
pop
mov
fst
call
loopne
out
in
push
sahf
or
lahf
sub
jno
inc
adc
imul
push
retf
aam
jnp
cmp
mov
in
sbb
arpl
push
outs
mov
lds
adc
mul
in
cmp
push
push
or
shl
stos
mov
mov
and
jmp
test
rol
dec
(bad)
dec
and
sahf
dec
mov
pop
loop
cmp
scas
retf
jp
sbb
jmp
stos
sbb
mov
arpl
mov
pop
inc
cmp
add
jmp
pop
fsubr
test
test
test
push
inc
adc
in
into
movs
and
dec
and
xchg
stc
pop
add
scas
dec
not
push
xchg
sahf
sti
repnz
jge
add
scas
sar
cmp
jb
dec
mov
je
lahf
jmp
mov
push
push
test
ret
sbb
(bad)
xlat
or
mov
fadd
aaa
(bad)
(bad)
lods
xlat
mov
dec
mov
test
pop
xor
jno
mov
pop
adc
inc
movs
xor
mov
xchg
add
fucom
pop
movs
mov
das
xchg
int3
inc
aaa
retf
mov
sbb
mov
repnz
push
call
xchg
lea
or
xchg
test
and
movs
test
xor
inc
jbe
out
fs
dec
push
inc
and
pop
inc
dec
push
add
mov
adc
jb
popa
push
mov
iret
and
call
outs
mov
and
cmp
js
add
push
popf
adc
push
cmp
sub
inc
or
loope
inc
adc
inc
daa
xor
and
mov
(bad)
aam
mov
mov
push
mov
fild
daa
cmp
push
outs
or
lock
(bad)
imul
xchg
jne
jge
or
jecxz
test
dec
scas
std
lock
retf
or
mov
std
bound
(bad)
not
aas
rcl
lods
jle
jmp
repz
and
inc
out
(bad)
fnstcw
cmp
xor
pop
bound
inc
add
bound
int
push
sbb
mov
cmp
jb
adc
xchg
ror
adc
mov
pop
or
movs
pop
dec
mov
fisubr
xor
mov
mov
jmp
sub
sub
rcr
lea
movs
cld
(bad)
xor
add
shl
add
stc
mov
inc
outs
xlat
popf
stos
iret
leave
mov
rcr
mov
or
lock
mov
arpl
mov
xchg
test
rcr
cld
arpl
jne
(bad)
mov
fsub
in
or
ret
adc
out
out
loope
in
scas
dec
sbb
cmp
ret
hlt
push
dec
ja
mov
and
dec
aaa
call
fdiv
jmp
test
outs
mov
shl
xchg
pcmpgtb
es
fistp
cdq
sub
aaa
xchg
test
pop
int3
and
mov
dec
jne
nop
cmp
sbb
test
mov
inc
jl
mov
inc
or
fidiv
jmp
(bad)
iret
cld
sub
outs
push
dec
fimul
inc
loopne
dec
dec
cmp
cmc
push
imul
ins
sbb
std
pop
fdivr
(bad)
sub
stos
jmp
movs
shl
push
hlt
or
mov
mov
jecxz
mov
je
dec
sbb
and
mov
(bad)
xchg
add
pop
neg
les
iret
jp
aas
repnz
dec
ja
mov
fistp
jb
mov
icebp
in
rcr
test
jge
add
mov
cwde
pop
mov
sub
call
mov
mov
sbb
adc
xor
xor
pop
or
push
mov
sbb
leave
(bad)
sub
mov
pop
bound
mov
sbb
adc
xor
push
xchg
or
bound
pop
in
adc
addr16
add
lods
add
div
push
pop
fild
mov
shl
push
je
push
cld
inc
jbe
jle
shl
cmp
adc
xchg
cmp
push
inc
cmps
icebp
test
popa
aas
mov
das
imul
(bad)
mov
dec
cmp
icebp
add
mov
popf
in
inc
jle
mov
mov
sub
or
sub
mov
xchg
fimul
jmp
mov
sbb
loopne
sbb
and
push
into
pusha
pop
(bad)
test
mov
pop
bound
(bad)
neg
out
ins
cmp
sbb
sub
pop
into
and
les
loopne
add
push
call
push
fwait
imul
ret
pop
adc
jle
sub
sub
sar
lahf
fnsave
ins
mov
dec
sub
sub
out
out
cmp
cmp
mov
adc
cmc
aaa
jae
loopne
push
jmp
xchg
xor
inc
cs
ret
(bad)
pop
sbb
dec
sub
or
dec
or
inc
cdq
and
cmp
jecxz
adc
hlt
lods
cmp
sahf
jmp
int3
mov
stc
cwde
addr16
add
into
lds
in
out
nop
inc
es
aad
(bad)
pop
mov
dec
fild
and
sub
dec
loope
add
mov
mov
lods
nop
es
mov
scas
movs
pop
sub
js
inc
ds
int
out
inc
xor
push
clc
dec
cli
test
xchg
ss
push
xor
into
leave
or
mov
test
ror
ds
adc
sbb
je
push
pop
pop
jmp
xchg
sar
mov
jecxz
fwait
ror
int
adc
ret
stos
xor
push
fcmovu
fcmovu
xlat
js
inc
sahf
xor
fsubr
mov
aam
xor
jno
xchg
inc
fs
retf
dec
jo
in
pop
or
lock
push
push
bound
xor
sub
es
repz
lods
jmp
pushf
and
dec
ret
pop
xlat
mov
int
inc
pop
shl
inc
call
mov
icebp
scas
pop
std
and
inc
aaa
push
pop
and
mov
jne
cli
mov
and
pop
or
pop
sbb
es
push
sahf
shl
xchg
sbb
lock
dec
es
clc
and
mov
sub
int3
pop
cmps
test
fisttp
or
sbb
mov
fisub
sbb
test
ret
jne
retf
lock
xor
sbb
adc
push
in
mov
push
push
addr16
loopne
mov
dec
push
inc
xchg
cmp
(bad)
ret
rol
jmp
adc
pop
sbb
repz
dec
cdq
push
and
mov
mov
ds
xor
add
js
lahf
pop
inc
and
cmp
cmp
cmp
and
and
jp
pusha
inc
or
cmc
call
jno
pop
mov
outs
out
jge
lods
pop
mov
jne
call
sbb
and
ret
xor
push
ins
loop
loop
in
sbb
(bad)
dec
jae
and
sahf
push
imul
(bad)
pop
mov
mov
push
sub
mov
lahf
dec
icebp
mov
sub
mov
adc
and
out
mov
mov
retf
into
and
lahf
or
loopne
mov
adc
and
repnz
(bad)
imul
dec
aas
jno
jge
dec
mov
out
dec
nop
add
xchg
pop
shl
jae
scas
adc
data16
mov
ret
inc
in
loopne
xchg
sub
sti
fisttp
mov
ss
mov
call
xchg
dec
push
mov
mov
xchg
lea
mov
and
jnp
sub
cmp
jno
xor
or
jns
retf
nop
test
or
sahf
inc
sahf
pop
mov
jle
and
jo
fsubrp
imul
xor
jle
movs
xchg
inc
(bad)
and
pop
cmp
daa
pop
in
mov
xchg
adc
or
and
(bad)
add
ficom
jg
pop
rep
jbe
les
pop
pop
aas
mov
dec
or
push
xor
jno
dec
add
out
sub
and
mov
xchg
(bad)
xor
cmps
or
adc
add
ror
push
pop
pmullw
clc
and
mov
push
add
jmp
dec
mov
xor
aaa
test
ss
inc
xchg
mov
es
xchg
or
ins
std
fs
dec
in
cli
cmp
adc
and
fnstcw
cmp
enter
pop
mov
sub
rcl
and
ficom
frstor
repnz
sbb
shl
push
(bad)
es
sub
lds
sbb
or
shl
dec
dec
packsswb
adc
in
dec
push
xchg
call
or
rcr
stos
fistp
cmps
adc
stc
std
loope
in
ret
add
dec
movs
shl
inc
movs
(bad)
add
push
jbe
adc
add
fsubp
inc
xchg
jo
pop
mov
jge
cmp
mov
out
stos
pushf
loope
push
pop
jmp
dec
popf
nop
(bad)
jmp
icebp
stos
xchg
push
xor
lds
mov
jle
je
movs
aas
fwait
push
out
call
xor
int
repnz
fwait
bound
xor
xchg
jmp
mov
pop
inc
jno
pushf
add
in
ins
cdq
cmp
int3
xlat
mov
inc
sub
js
inc
mov
sti
xor
rcr
scas
fsubp
and
or
cmp
pop
popa
dec
jmp
inc
dec
jp
mov
in
dec
ds
push
lea
retf
fistp
pop
sbb
xor
mov
mov
ror
cmp
outs
(bad)
js
cmp
xchg
js
sub
adc
movs
xor
pop
cmp
repz
adc
(bad)
js
pop
cmps
jns
push
mov
scas
ins
cwde
stc
or
cli
push
mov
mov
std
sar
dec
pop
or
(bad)
je
xchg
outs
js
mov
fisttp
inc
mov
jle
gs
test
xchg
add
dec
cs
sar
and
sbb
mul
sub
xor
aas
pushf
ficom
fnsave
mov
xlat
in
mov
mov
push
dec
mov
dec
and
push
icebp
mov
mov
mov
ins
daa
loop
push
dec
mov
jl
mov
mov
stos
(bad)
mov
in
xor
sub
pop
int3
jb
pop
add
test
icebp
cli
in
xchg
xor
lea
pop
fstp
sub
inc
and
std
leave
sbb
arpl
imul
jns
hlt
arpl
dec
test
stos
jl
mov
sub
and
call
imul
pusha
aas
ficomp
test
dec
dec
jo
sub
call
clc
fdiv
xchg
xchg
mov
mov
mov
ficom
xor
jb
mov
movs
push
fst
jo
out
adc
mov
fsub
frstor
popa
iret
sbb
inc
mov
fdivr
std
and
mov
and
sbb
bound
pusha
into
not
mov
in
adc
push
cmp
xor
rol
sbb
test
jp
outs
addr16
in
iret
adc
and
icebp
pop
jnp
mov
xchg
cli
dec
cld
inc
(bad)
fwait
jecxz
xchg
retf
lea
adc
fs
add
dec
xor
adc
add
pusha
push
jnp
add
(bad)
popa
into
ja
xchg
xor
jecxz
test
xchg
dec
aam
fsub
sub
push
ss
rcl
cmp
loopne
adc
repnz
jmp
xchg
jecxz
lods
in
shl
pop
sbb
xor
mov
test
dec
and
cmp
cmp
jecxz
outs
(bad)
xchg
xor
call
xchg
and
sub
or
xor
popf
inc
sti
rol
adc
imul
or
loopne
push
sub
push
jmp
lods
add
cmp
inc
shl
or
add
test
bound
stc
ret
cmp
adc
fldenv
inc
fcom
jne
icebp
jl
rcr
lods
mov
dec
mov
rcl
xchg
loop
dec
scas
aas
or
mov
jl
aam
test
mov
dec
or
add
cmp
or
fst
lds
pop
movs
dec
daa
add
xor
retf
out
xchg
sub
jnp
hlt
jmp
imul
and
loope
test
scas
in
fist
lods
sbb
jecxz
mov
(bad)
cmps
mov
fistp
and
in
jge
add
cwde
popf
call
movs
add
mov
mov
push
sar
sbb
(bad)
mov
retf
xchg
or
shl
mov
fwait
mov
sar
inc
push
sbb
inc
sbb
mov
lahf
xor
movs
cld
repnz
push
inc
push
je
ret
stos
lea
imul
mov
movs
popa
jnp
cmp
enter
cmp
or
bound
je
add
imul
or
fistp
mov
ret
outs
call
jmp
das
dec
sub
sub
jo
and
iret
xchg
sbb
xchg
(bad)
sub
into
bound
sub
or
ss
cmps
and
sbb
adc
imul
xor
loope
or
aad
fwait
sub
push
stos
xchg
es
out
fidiv
mov
inc
pop
inc
shr
pop
aad
mov
pop
ds
adc
je
pop
loopne
dec
add
loope
imul
ss
sbb
jmp
out
sbb
or
and
cs
call
js
stos
and
call
in
dec
test
jne
dec
mov
dec
mov
lds
mov
push
pop
aad
jmp
loop
adc
cld
arpl
retf
test
sbb
push
aad
nop
(bad)
add
push
ja
outs
js
call
xor
pop
mov
ja
adc
out
cmc
das
mov
sub
stos
xor
pop
pop
ins
jo
(bad)
aas
sahf
clc
jg
push
pusha
add
or
ja
loopne
jo
push
jle
inc
test
jl
call
ins
or
xchg
test
lods
(bad)
jnp
les
ins
push
gs
pop
mov
adc
in
pop
fwait
xchg
call
add
shl
retf
cld
iret
pop
lds
jno
je
sbb
es
jl
cld
adc
inc
jg
inc
mov
js
call
leave
cmp
pushf
inc
push
add
aas
jg
sub
mov
mov
adc
inc
addr16
push
repz
xchg
inc
fsubr
cmp
imul
mov
push
sub
adc
lods
ins
push
fs
lahf
call
mov
inc
je
push
sub
shl
jo
out
pop
mov
aam
fld
sahf
jbe
and
sbb
jno
or
call
xchg
lahf
fcom
dec
and
push
mov
mov
xchg
imul
ds
xor
push
xor
in
and
pop
or
test
sbb
dec
(bad)
es
and
adc
clc
retf
jle
mov
pop
int3
sbb
scas
xor
sahf
adc
xchg
test
test
ins
mov
sbb
inc
sbb
push
arpl
enter
jmp
imul
cmp
mov
addr16
(bad)
(bad)
js
add
fwait
or
sub
sbb
fmul
loop
in
sub
fcomp
imul
ret
xor
repnz
jecxz
inc
popf
repz
or
dec
add
mov
cmp
fmul
bswap
add
repnz
push
ret
lods
push
sub
xchg
adc
popa
sub
fwait
sub
pusha
adc
cmc
(bad)
sbb
or
mov
mov
xlat
mov
mov
pop
add
(bad)
pop
push
hlt
in
fcom
mov
jb
jb
test
jmp
ja
push
data16
ins
ret
jo
xor
sar
xchg
and
movs
lods
nop
ret
stos
xchg
push
push
ins
in
mov
cmc
dec
lahf
xlat
cmp
xor
out
mov
inc
or
icebp
xor
cmp
fs
(bad)
leave
in
inc
xchg
sahf
pop
pop
jne
scas
cmc
lock
push
or
mov
mov
fidivr
push
mov
mov
daa
mov
repnz
aam
adc
xchg
jle
mov
fmul
jo
mov
sbb
mov
je
mov
mov
into
jmp
les
xchg
movs
dec
mov
dec
test
mov
shl
movs
mov
shl
imul
jb
std
cmp
ret
ror
hlt
and
adc
or
ins
push
inc
in
aam
es
or
shl
dec
sbb
(bad)
inc
sbb
mov
cmp
mov
retf
mov
repnz
push
push
fistp
mov
xor
pop
cvtpi2ps
mov
cmps
jecxz
sbb
mov
mov
xchg
out
jge
rol
loope
movs
and
gs
xchg
push
ds
clc
neg
mov
stc
push
dec
mov
mov
or
pop
or
cwde
inc
jg
jo
lds
in
sahf
ins
cmp
sub
xchg
test
dec
ss
add
out
push
sub
xchg
ret
pop
ja
shl
sub
mov
lods
popf
cwde
add
ins
jo
push
inc
pop
out
outs
inc
cmp
dec
mov
test
jbe
(bad)
xchg
add
adc
sbb
adc
inc
pop
scas
fstp
mov
test
adc
test
aas
cs
push
xor
mov
mov
fsubr
lahf
rcl
sahf
mov
dec
dec
jg
add
das
jmp
xchg
cmp
pop
fiadd
ret
loop
leave
pusha
mov
mov
sbb
cdq
popa
ins
call
rcr
fld
cld
pop
xor
pop
loope
call
ins
or
mov
sub
dec
popf
cli
fs
cmp
into
popa
cmp
mov
in
xchg
mov
(bad)
fcomp
mov
data16
movs
lock
sub
aad
push
inc
lods
cmp
sahf
clc
mov
xlat
adc
jnp
repnz
int3
push
sub
pushf
test
dec
fldcw
ret
sub
mov
mov
div
cmp
and
mov
ficomp
test
add
xchg
popa
lahf
adc
mov
sub
gs
repz
mov
mov
fs
outs
xor
fs
dec
je
push
lock
push
cs
outs
mov
pop
sbb
push
pop
inc
gs
jnp
dec
push
shl
loopne
xchg
lods
xchg
mov
dec
stos
push
in
jmp
test
es
xor
lods
fwait
mov
loopne
add
aam
paddusb
paddq
sub
add
jecxz
outs
scas
cmps
ret
aam
push
fldenv
mov
fucom
sbb
jo
movd
out
push
mov
adc
repz
mov
iret
dec
xchg
movs
mov
and
fldenv
push
gs
loop
jg
fxch
adc
mov
cmp
repz
div
push
mov
jle
sbb
xchg
pop
loope
gs
fisubr
shr
add
out
jp
stc
(bad)
stc
adc
call
mov
push
mov
scas
mov
clc
xor
out
daa
in
sahf
ds
je
and
add
mov
pop
dec
ins
nop
jmp
mov
cwde
push
or
clc
xchg
xor
jbe
sahf
scas
div
mov
sub
sub
icebp
mov
shl
fsubr
lahf
dec
je
mov
js
cmp
enter
fcom
pushf
mov
outs
push
pop
pop
or
sub
push
std
sub
jmp
xor
mov
xor
pop
mov
stos
xchg
jno
(bad)
mov
test
or
mov
popa
cmps
push
cmc
or
pop
fidivr
mov
mov
inc
mov
push
add
mov
and
xor
or
mul
or
xchg
pop
das
pop
dec
cld
push
xor
xchg
push
fstp
dec
shl
xchg
and
push
aam
add
repnz
sub
mov
dec
adc
mov
and
push
inc
ja
add
mov
es
or
cs
fidivr
add
retf
mov
and
dec
adc
stos
fwait
jns
repnz
and
jp
je
or
xchg
out
and
es
jmp
dec
pop
test
ret
xor
push
jmp
loopne
leave
icebp
mov
out
jo
cs
frstor
fmul
(bad)
ss
or
jp
fmulp
lea
movs
dec
xchg
in
xchg
add
and
mov
mov
pop
out
mov
sub
mov
mov
add
in
jle
push
fs
mov
ins
gs
add
xor
jae
clc
jle
fiadd
aaa
mov
mov
dec
(bad)
(bad)
nop
add
mov
sti
jl
les
cdq
or
push
add
jne
nop
fsub
push
out
mov
or
fs
inc
or
or
or
fadd
rol
scas
xor
cmp
xchg
sahf
jne
xor
cmovno
enter
test
push
or
lds
cmp
cmp
xchg
xor
xchg
jl
rol
jb
and
ins
push
ja
adc
mov
sub
cld
out
jns
push
cmc
stc
lds
and
movs
mov
jae
rcr
pop
js
sub
rcr
mov
in
mov
nop
add
jmp
or
inc
mov
xchg
movs
cld
dec
cmps
ficomp
xchg
pop
sbb
sbb
mov
inc
mov
pop
mov
lahf
xor
push
mov
pop
push
mov
dec
ss
pop
adc
mov
sbb
jmp
loope
xchg
data16
inc
xchg
ds
les
or
mov
jno
xchg
mov
push
and
jb
cs
xchg
in
icebp
or
jmp
es
xor
cmp
retf
or
movs
mov
xchg
das
hlt
mov
sti
xchg
imul
pop
mov
xor
es
push
stc
push
cmp
sub
into
das
cmp
cmps
and
das
retf
push
test
pop
dec
sbb
dec
mov
sub
and
sbb
ins
jns
add
or
push
daa
pmuludq
mov
xchg
dec
mov
fnstsw
cmc
jg
mov
mov
bound
shl
popa
inc
aas
cmc
pushf
add
sahf
jae
in
add
add
jbe
leave
lods
or
in
mov
or
call
adc
cli
adc
dec
xor
mov
adc
dec
jnp
iret
cld
test
pop
jp
push
pop
(bad)
and
cmp
xor
fcos
hlt
pop
outs
push
or
dec
or
test
test
or
push
cli
xchg
aam
popf
scas
bound
mov
or
adc
xchg
add
ret
push
xchg
pop
adc
loope
mov
and
xchg
ss
push
loope
add
in
jae
test
jb
sub
addr16
and
jae
stos
pop
jg
loopne
gs
aad
js
daa
mov
mov
int
or
pop
fistp
mov
pop
loop
fnclex
out
add
jp
es
mov
(bad)
add
arpl
jl
scas
(bad)
push
(bad)
pop
adc
adc
out
and
cmp
cs
retf
fs
ret
loop
repz
sahf
stos
out
rcl
adc
test
rol
imul
pop
inc
cs
(bad)
aam
xor
and
mov
clc
and
adc
lods
sbb
shr
aam
gs
push
xchg
scas
push
pushf
mov
outs
ja
mov
fwait
cmc
xor
sub
iret
mov
inc
push
mov
sub
xor
mov
xor
sti
pop
adc
scas
add
out
jle
movs
xor
mov
or
or
movs
push
dec
inc
add
cmp
inc
fild
jae
mov
stos
outs
jae
adc
mov
ret
cmp
les
push
mov
push
lods
xor
outs
rol
sbb
retf
stos
in
and
aad
mov
push
mov
ins
xchg
jge
cmp
jp
or
add
jp
pop
and
push
adc
pushf
(bad)
mov
sub
inc
cmps
pop
cwde
xchg
(bad)
loope
xor
inc
rol
xor
popa
push
inc
rcl
aas
data16
and
cmp
jp
dec
sub
pop
sti
mov
sar
pop
ins
add
jl
call
ficomp
jle
or
sub
push
neg
pop
ss
mov
fmul
cs
mov
cmp
cmps
jae
mov
in
fisttp
or
xchg
stc
mov
xor
fsubrp
test
out
shl
stc
xchg
test
xchg
in
and
xchg
or
or
repz
test
adc
adc
js
xor
fsubr
enter
std
daa
xchg
dec
jmp
add
jo
in
lock
push
xchg
test
xchg
or
aas
(bad)
int
push
movs
ss
and
pop
inc
or
mov
sub
dec
fnsave
ss
sbb
pop
popa
fsubr
test
xor
loop
jnp
xor
out
jmp
stos
mov
sub
clc
xchg
jns
xor
sub
cs
fdivr
mov
adc
cmp
hlt
mov
jns
imul
push
stc
push
cmp
fsubr
lock
inc
sbb
(bad)
ins
pop
sbb
popa
jg
or
cmp
rcl
dec
jb
call
pushf
retf
aaa
cmp
adc
push
push
and
imul
cmp
xchg
out
mov
repz
jns
lods
sbb
(bad)
push
fcom
sub
cmp
inc
in
sbb
sbb
mov
shl
dec
repz
add
repnz
or
dec
sub
pop
lods
or
daa
xor
dec
out
outs
or
loopne
or
repnz
imul
vpmaxsw
mov
mov
and
cmp
push
mov
sub
pop
jle
cmps
into
nop
mov
adc
fidiv
(bad)
ins
xchg
mov
retf
(bad)
retf
(bad)
mov
js
or
add
imul
into
mov
push
arpl
les
pop
jmp
or
xor
jne
(bad)
movs
(bad)
loop
inc
cmp
sti
retf
vprotw
in
sahf
movs
lea
mov
enter
add
pop
jmp
add
cmps
sub
imul
cwde
ja
mov
mov
popf
sub
(bad)
das
xchg
icebp
clc
or
jmp
mov
and
fistp
mov
mov
mov
jo
in
push
cmc
lea
in
movs
mov
mov
mov
mov
jne
cli
das
push
cmc
sub
bound
cmp
push
sbb
pop
fcmovb
pop
cli
(bad)
or
mov
xor
add
bound
dec
gs
adc
ins
leave
ins
pop
rcr
lahf
(bad)
js
ficomp
adc
inc
jno
xor
imul
jecxz
pop
or
mov
mov
(bad)
out
call
(bad)
fucomip
(bad)
aad
mov
adc
pop
adc
stc
retf
push
sub
adc
sub
pop
push
xchg
inc
xor
fild
pushf
mov
rcl
push
arpl
mov
icebp
stos
inc
icebp
jl
mov
in
imul
cs
or
out
xor
shl
mov
xor
add
aam
jns
js
adc
neg
ror
xchg
pop
aam
pop
xchg
into
pop
jmp
adc
call
int
test
pop
pop
movs
ins
inc
add
add
test
cs
dec
pop
jle
sti
gs
xlat
loop
dec
and
test
push
push
ds
fimul
sub
inc
daa
retf
(bad)
and
call
in
sbb
fdivr
into
cmc
mov
test
pop
or
mov
push
(bad)
aam
mov
add
call
loop
sbb
fiadd
or
int3
shl
inc
call
cmp
loopne
clc
inc
dec
test
cmps
xchg
cld
(bad)
mov
imul
mov
rcr
lock
push
fwait
cwde
adc
(bad)
xor
aad
aad
push
mov
mov
push
scas
popf
push
push
int3
out
mov
aad
inc
pop
outs
dec
jbe
inc
ficom
xlat
add
ror
xchg
pop
call
xor
xor
sbb
cmp
sub
or
imul
movs
aam
or
mov
or
sbb
add
xchg
add
popf
add
inc
jmp
xchg
fidiv
popf
loopne
(bad)
mov
popa
ins
mov
(bad)
mov
call
push
sbb
or
sbb
daa
ins
cmp
add
dec
dec
mov
adc
les
pop
mov
inc
addr16
bound
fisttp
fidivr
fadd
jnp
test
aas
hlt
dec
pop
lea
push
add
fisubr
mov
movs
imul
xor
ins
std
dec
push
pop
ins
cmp
(bad)
push
mov
leave
pop
add
lods
cmp
cdq
in
push
std
ret
rol
push
nop
cmp
cmp
into
mul
fs
mov
mov
in
sahf
mov
inc
test
mov
icebp
xor
jle
leave
stc
sbb
pusha
pop
push
lods
test
sahf
daa
dec
xchg
jle
call
mov
movs
sub
dec
push
pop
adc
and
jg
adc
clc
cmp
daa
rcl
sbb
jmp
js
add
push
push
cmp
or
push
cmp
stos
or
test
push
lea
inc
ins
xchg
lea
inc
stc
push
add
pop
popf
cmps
xchg
lock
xor
cli
out
sbb
gs
or
lock
jo
push
movs
(bad)
clc
ror
ja
pop
pop
mov
fcom
test
mov
(bad)
in
stc
lahf
or
xchg
dec
icebp
sub
inc
movs
sbb
cdq
clc
and
gs
mov
pop
sbb
dec
fs
adc
xor
(bad)
and
pop
fstp
push
jge
lock
retf
jne
mov
adc
jnp
jecxz
popf
xchg
adc
lods
and
sub
mov
nop
rol
(bad)
(bad)
faddp
inc
out
in
je
call
movs
fistp
mov
stos
cli
cmp
les
pop
cmp
cld
retf
rcr
(bad)
(bad)
jecxz
mov
dec
xor
int
ret
js
or
fnsave
test
xor
shl
out
repz
fadd
cs
popf
push
push
inc
pop
push
jmp
lea
push
ffreep
rcr
jge
adc
ins
push
jge
bound
imul
mov
hlt
sbb
repz
dec
xchg
cmp
sub
rol
sbb
adc
mov
cmp
(bad)
cmps
xor
cmp
in
bound
and
scas
cmp
call
int
call
push
fs
cmp
sar
adc
xchg
pop
cli
movs
or
sar
lahf
not
sbb
push
pop
movs
(bad)
jp
imul
add
fs
clc
mov
mov
sub
lock
mov
lea
push
xchg
dec
mov
les
cmc
adc
mov
ins
leave
push
int3
fisub
dec
dec
sbb
jb
pop
cmp
xlat
cmps
xor
fiadd
inc
xchg
aas
rcr
in
outs
pop
jmp
mov
jbe
xor
arpl
(bad)
loop
adc
xchg
adc
mov
sbb
inc
jmp
data16
fsub
pop
sub
pop
pop
pop
iret
inc
addr16
movs
sub
ja
sbb
or
and
ficom
mov
xchg
aad
outs
sar
ja
movs
and
in
xchg
outs
fist
gs
loope
je
sub
jb
outs
sti
pushf
xchg
sar
aaa
jl
mov
cli
mov
push
stos
adc
jbe
mov
pop
pusha
inc
sbb
pop
inc
dec
xchg
push
and
fld
fbstp
ror
cld
movs
pop
cmc
sub
mov
jae
mov
idiv
icebp
sbb
je
daa
movs
jl
pop
xor
fisubr
pop
jnp
cdq
int3
xchg
lock
cli
dec
xadd
out
aad
xor
fwait
js
es
icebp
adc
mov
jnp
push
and
scas
sub
daa
lock
das
adc
sbb
aad
retf
add
jo
cmp
dec
cmp
arpl
push
(bad)
inc
jno
mov
jno
jp
inc
or
push
xchg
mov
push
cmp
lods
add
shl
jmp
js
stos
pop
and
fild
mov
pushf
jp
jo
jae
xor
hlt
xchg
(bad)
sub
inc
inc
or
je
shl
dec
push
push
and
mov
adc
mov
xor
repz
inc
or
or
hlt
dec
pop
xchg
sahf
(bad)
cwde
mov
sbb
sbb
cmp
call
test
lahf
mov
inc
jmp
cs
mov
adc
sbb
xor
retf
test
jb
repnz
or
imul
scas
xor
xor
icebp
jg
ja
jmp
cdq
dec
xor
aaa
inc
pop
push
enter
idiv
jp
inc
cmp
sti
push
ds
test
push
pushf
push
fdiv
leave
jmp
rcl
scas
fcom
pop
dec
xor
pop
adc
pop
je
fldcw
lods
and
rol
mov
sub
cmp
dec
mov
aas
jp
bound
mov
dec
aaa
(bad)
and
cmp
cmp
xlat
(bad)
add
mov
sbb
icebp
xchg
jns
fbstp
sub
cmp
(bad)
cmp
neg
out
into
imul
(bad)
(bad)
jns
jno
(bad)
pushf
btc
stos
sbb
jle
inc
cmc
leave
inc
or
xchg
xchg
inc
cmp
repz
jl
and
pop
lods
sbb
inc
jecxz
sbb
sub
sub
iret
in
sbb
dec
into
cld
gs
das
jle
repz
xor
cmp
dec
xchg
stc
inc
dec
adc
jp
mov
pop
mov
int
mov
pushf
jp
push
cmps
retf
call
adc
pop
push
sbb
jge
push
fstp
fld
jle
sub
dec
fsubr
inc
push
imul
add
add
in
lahf
lahf
enter
outs
add
lods
and
mov
mov
jns
test
scas
(bad)
mov
sub
push
and
and
aas
test
arpl
xor
hlt
jns
and
lea
mov
cmp
jecxz
leave
ret
mov
int
stc
ins
cmp
int3
pop
out
pop
mov
dec
clc
popf
xchg
mov
push
jge
jae
adc
scas
retf
push
mov
hlt
mov
sub
xor
retf
out
outs
xchg
es
sbb
loope
sbb
cmps
(bad)
xchg
inc
mov
jmp
push
aas
mov
mov
pop
sahf
es
and
inc
xor
add
inc
and
pop
pop
dec
aas
cmp
or
int
nop
mov
inc
sub
cmp
out
repnz
mov
bound
or
push
fimul
(bad)
retf
xor
mov
in
pop
loop
xchg
je
push
jbe
inc
sbb
sar
aaa
pop
outs
stos
mov
icebp
(bad)
jb
jb
out
int3
popa
pop
std
nop
jmp
xchg
mov
xchg
out
and
xchg
jno
sar
imul
xchg
and
mov
push
and
stos
test
cmp
in
lock
mov
hlt
push
ret
loopne
les
jmp
pop
and
xchg
in
out
adc
push
je
sbb
mov
jmp
or
mov
lods
ffree
dec
mov
adc
lea
push
popa
push
adc
push
add
adc
cmp
mov
mov
mov
outs
test
out
mov
cmp
dec
neg
neg
push
jo
xlat
test
and
fwait
push
pop
or
mov
sar
jecxz
test
and
addr16
shl
or
gs
ficomp
jns
sub
or
fild
adc
in
neg
adc
dec
test
sub
sub
mov
dec
je
ins
mov
jmp
mov
pop
bound
mov
cli
mov
xor
cmp
sbb
adc
dec
pop
push
pop
int3
aad
dec
std
(bad)
pop
mov
xor
mov
or
test
pushf
sub
xchg
and
in
enter
pop
into
test
xchg
iret
sar
xchg
stos
dec
or
out
fsub
jnp
arpl
lahf
ja
retf
or
sti
xchg
repnz
imul
in
popf
jmp
and
inc
jecxz
push
jo
aad
push
sahf
pop
ret
clc
loopne
bound
dec
pop
lea
mov
inc
out
cmc
cli
pop
movs
loopne
shl
adc
xor
ret
and
mov
mov
popf
fldenv
inc
sti
loope
repnz
xor
mov
js
test
nop
data16
mov
xchg
movs
ror
adc
mov
push
mov
mov
dec
ins
jge
push
lods
mov
clc
(bad)
ret
fisttp
cld
mov
les
popa
fst
std
pop
push
jle
paddw
gs
xchg
mov
int3
and
lahf
test
lock
sbb
mov
push
dec
fldcw
mov
cmp
movs
out
sub
std
sub
leave
inc
jle
pop
cmp
iret
icebp
push
pop
jns
bound
rcr
mov
pop
clc
sub
ins
rcr
sbb
jnp
or
sub
out
ja
test
imul
mov
pop
add
dec
fdiv
test
or
mov
push
ja
or
and
das
or
sbb
xchg
mov
mov
out
jns
das
ss
mov
retf
fsubr
(bad)
(bad)
loope
gs
(bad)
or
dec
aam
and
mov
adc
in
add
xchg
jg
in
or
imul
xchg
or
fnstcw
fs
or
into
adc
mov
imul
jmp
(bad)
hlt
cmps
jg
lea
out
mov
iret
push
mov
dec
dec
add
mov
sub
into
xchg
push
xchg
push
vmovaps
cmps
shl
pop
pop
mov
(bad)
test
fistp
scas
fidiv
cmp
and
and
xor
aas
push
(bad)
mov
jae
bound
sar
aas
adc
dec
nop
lods
xchg
shr
sub
sbb
jl
mov
inc
int
ret
xchg
out
pusha
gs
add
adc
push
rcr
pop
fldenv
cmp
jecxz
push
dec
faddp
add
sub
push
rol
mov
xchg
fisttp
and
sti
in
cmp
sub
lods
les
mov
dec
push
sbb
pop
jmp
sbb
mov
xchg
xor
xchg
loopne
rcr
pop
or
cmp
push
inc
sub
ins
(bad)
dec
jns
fs
mov
cdq
adc
or
mov
lea
std
lahf
cld
pusha
test
dec
mov
jecxz
ret
xor
movs
call
xor
aad
and
das
jp
int3
dec
xor
dec
inc
inc
loope
shl
setb
dec
xchg
(bad)
jns
fld
call
sbb
mov
mov
pushf
jmp
cli
push
ret
mov
push
(bad)
mov
lds
mov
or
or
jnp
pop
int3
fnstenv
daa
pop
sub
es
mov
jae
jmp
les
out
ins
pop
mov
test
inc
jmp
test
lods
ja
test
out
movs
sbb
push
dec
retf
dec
ins
bound
jp
fmul
fiadd
jns
out
jl
inc
or
jge
in
cwde
dec
leave
jmp
fcom
xor
mov
pop
dec
or
and
stc
mov
packuswb
push
jp
call
stos
and
fs
lock
pusha
cmp
pop
lock
add
loop
icebp
aaa
out
mov
popa
mov
push
fstp
sub
ins
xchg
test
sar
cdq
clc
pushf
pop
scas
imul
imul
cwde
pop
push
mov
scas
mov
and
stos
sbb
pop
add
xor
imul
(bad)
mov
cmps
mov
inc
sub
dec
shr
pop
loop
cmp
or
xor
xor
inc
std
sbb
jle
mov
pop
jo
xlat
shr
sbb
mov
in
movs
test
xchg
frstor
test
repz
mov
adc
sub
sub
mov
or
outs
sub
rol
fxch
aad
out
jle
sbb
call
sub
into
mov
adc
mov
push
xor
jno
les
xchg
and
add
fld
add
lock
jns
imul
mov
or
adc
and
dec
call
mov
push
jnp
push
pusha
inc
test
push
inc
rol
loope
push
dec
push
inc
stos
shl
call
fnstenv
cmp
sub
mov
inc
xchg
loop
rcl
mov
adc
inc
(bad)
enter
loope
(bad)
jnp
enter
lods
push
sub
or
xor
inc
retf
test
and
out
add
push
jmp
and
pop
push
mov
inc
sub
mov
push
cmp
adc
dec
outs
sbb
cmp
jmp
push
cmp
ss
sub
or
xchg
or
mov
add
jnp
jne
sbb
cld
ficom
jmp
push
(bad)
(bad)
cmc
call
cmp
pop
data16
pop
aaa
add
push
imul
pop
mov
repnz
push
xor
jo
and
dec
sub
xchg
les
repnz
add
mov
inc
adc
pop
and
imul
ja
ins
add
inc
mov
jbe
push
gs
rcl
sbb
cmp
or
fwait
mov
sbb
mov
pushf
fwait
xlat
daa
jge
test
xchg
out
ds
jbe
or
cmp
push
mov
imul
inc
xchg
mov
add
gs
fisub
pop
cld
dec
inc
(bad)
fidiv
mov
jg
pop
xchg
es
push
sbb
iret
popf
test
jno
(bad)
cli
sub
push
or
enter
out
jae
cmc
movs
jo
lea
ror
jo
inc
and
mov
ret
or
cld
add
cmps
cld
out
push
sbb
popf
or
push
ret
mov
add
stc
wrmsr
sbb
mov
sub
push
pushf
sub
sbb
sbb
cmp
outs
cmps
cmc
sub
sbb
int
mov
inc
add
jmp
rol
aas
sti
mov
jb
and
sbb
inc
sbb
dec
xchg
stc
leave
enter
push
or
jae
cmp
jg
gs
sti
push
xchg
pop
mov
add
icebp
out
cmp
push
cmc
push
test
dec
popa
xchg
xchg
(bad)
sub
mov
mov
push
aam
popf
sub
cmc
and
cs
out
scas
aaa
sub
fs
or
inc
dec
push
mov
test
retf
jg
in
dec
adc
shl
rcr
mov
inc
xor
sbb
dec
ins
rcr
daa
ror
xor
mov
lds
fld
mov
adc
xor
mov
mov
sub
out
std
jno
rol
cmp
std
inc
lock
popf
xor
inc
push
in
mov
mov
fucomip
jp
sbb
ficomp
and
xchg
outs
nop
dec
lock
fisub
out
pop
sti
mov
add
shl
movs
pop
and
cli
loop
cmp
push
sub
mov
jnp
or
or
xchg
pop
inc
sbb
push
dec
mov
dec
in
repz
xchg
push
cli
sub
clc
stos
sub
xchg
sbb
call
fidiv
leave
jb
ds
jb
xor
fimul
clc
sbb
xchg
mov
loopne
or
or
in
push
xchg
and
enter
jg
(bad)
retf
push
pop
cmp
push
push
adc
test
xchg
scas
jecxz
je
fld
cmp
es
leave
and
mov
nop
lds
mov
cmc
in
or
fcmovb
push
adc
sti
(bad)
push
mov
pusha
in
std
mov
mov
mov
mov
cmp
test
test
mov
sub
adc
nop
mov
bound
mov
in
jg
icebp
out
adc
jl
jmp
loop
cmp
scas
add
xor
(bad)
push
out
mov
mov
and
int3
dec
lds
out
mov
mov
scas
ret
xor
aas
lahf
loope
xor
fst
mov
and
fistp
scas
enter
(bad)
jg
and
xchg
add
push
sbb
dec
(bad)
or
out
xor
mov
enter
or
mov
and
dec
xor
sub
fs
int
cmp
fiadd
sbb
mov
xchg
lock
test
inc
or
jmp
into
or
imul
scas
cmp
adc
xchg
enter
icebp
mul
sbb
mov
pop
xlat
out
jg
push
(bad)
dec
aaa
(bad)
in
push
stos
stc
outs
and
call
ficom
movs
mov
adc
test
and
(bad)
outs
(bad)
mov
push
pusha
rcl
mov
stc
(bad)
(bad)
sub
pop
les
lock
pop
fidivr
mov
sbb
arpl
mov
dec
mov
mov
inc
std
punpcklwd
pop
lahf
adc
or
jae
popa
jbe
fld
in
mov
adc
mov
movs
enter
js
ins
mov
sub
fcomp
mov
les
add
mov
cld
xchg
outs
xor
cs
sbb
dec
ds
cmps
and
jae
sbb
mov
fdivr
push
xor
arpl
pushf
push
sub
push
lods
daa
enter
pusha
movs
dec
retf
pop
mov
test
xchg
pusha
retf
iret
rcr
repnz
dec
mov
sbb
xchg
pop
mov
imul
inc
push
dec
std
xchg
pop
jne
dec
pop
mov
jmp
xor
loop
es
cmp
icebp
mov
sbb
in
lods
pop
pop
adc
jbe
push
sbb
dec
pop
das
out
mov
daa
pcmpeqb
jg
enter
nop
push
in
xor
clc
pop
add
mov
jbe
les
mov
es
add
loopne
xchg
fwait
adc
movs
jmp
mov
fidivr
push
fsubr
add
or
js
addr16
push
(bad)
rol
(bad)
(bad)
es
inc
jnp
or
pop
jl
adc
ja
jge
push
xchg
fbld
jbe
sub
fst
mov
leave
cdq
and
ja
cld
sub
ret
rol
mov
or
xchg
inc
cs
imul
sar
daa
lods
(bad)
sahf
leave
hlt
jmp
pop
xchg
mov
xlat
retf
pop
jg
push
add
mov
fcomp
repnz
ror
add
jno
pop
pop
cld
jnp
cli
inc
add
cs
and
fcmovnb
ret
pop
sbb
pop
and
enter
int
adc
push
stos
adc
int3
cwde
adc
nop
push
test
sbb
sub
movs
xadd
sar
das
adc
and
ds
jae
cmp
int3
lds
or
rcl
mov
xchg
jmp
xor
cs
mov
mov
aam
dec
mov
fnstcw
xchg
fild
and
or
mov
leave
mov
adc
shl
aas
sub
cmp
jae
adc
xchg
stos
adc
dec
retf
mov
xor
clc
push
leave
pusha
adc
rcr
imul
fcom
das
shr
and
pop
test
popf
push
jmp
dec
push
ror
std
mov
jg
pop
iret
add
shl
aad
popa
hlt
push
int
add
xor
xchg
(bad)
pop
add
dec
jae
mov
test
jb
mov
retf
fnsave
sbb
fidivr
cmp
gs
push
stos
js
pushf
mov
mov
xor
mov
movs
push
ret
xchg
mov
adc
mov
mov
push
xor
ret
or
inc
sbb
movs
rcr
shr
push
movs
popf
fdiv
stc
addr16
dec
scas
lds
test
push
xchg
adc
clc
jo
lahf
rol
xor
cmp
test
pop
jg
inc
jmp
sbb
nop
mov
pop
mov
push
out
cmc
xchg
ret
sub
out
fisttp
pop
jmp
ins
or
int3
int
rol
pushf
inc
mov
mov
push
ja
inc
adc
mov
sub
(bad)
dec
dec
jmp
adc
xchg
dec
push
sbb
lods
add
sti
ss
std
mov
and
mov
movs
nop
xor
pop
cmp
iret
xchg
fcompp
aad
dec
aaa
addr16
loopne
in
mov
div
mov
pop
cmp
cmps
add
dec
dec
es
imul
mov
or
add
lds
fisubr
ja
jg
sbb
in
pusha
gs
push
or
addr16
or
sub
xchg
push
sbb
or
call
dec
ret
adc
clc
add
fs
mov
repz
hlt
lea
and
inc
inc
mov
mov
mov
pusha
retf
xchg
(bad)
cmp
jae
test
addr16
and
mov
push
call
cmp
in
inc
aas
data16
and
test
out
imul
clc
mov
das
ror
inc
or
pop
(bad)
in
out
clc
adc
in
add
push
push
jl
imul
ret
popa
push
outs
mov
sbb
xor
xor
or
cmps
mov
pop
aam
xchg
and
jns
test
outs
pop
shr
nop
mov
cmp
xrelease
fidiv
and
pop
test
or
push
aas
mov
out
es
cmp
out
adc
repnz
adc
adc
xchg
imul
std
int3
cmp
jmp
ins
call
mov
jle
xlat
mov
nop
cld
retf
pop
fistp
xor
jmp
stc
add
(bad)
iret
xchg
mov
sub
xlat
jae
adc
sbb
push
addr16
(bad)
mov
cmps
mov
pop
repz
call
jp
or
mov
xor
sub
and
repz
pop
ins
inc
mov
or
xchg
push
and
add
pop
jbe
xchg
dec
mov
xchg
pop
jmp
fstsw
mov
pop
sahf
fs
sbb
lods
ror
xor
cmps
std
mov
sar
dec
lea
adc
dec
xchg
sbb
(bad)
(bad)
sub
inc
(bad)
cmc
ja
lods
rcl
sti
or
repz
fist
push
xor
or
dec
push
mov
lahf
jns
pop
icebp
cmp
or
cdq
fst
cwde
mov
adc
ss
fsubr
sbb
mov
sti
sar
mov
xor
sub
dec
out
aad
cmp
pop
sbb
aad
sub
push
fs
add
xchg
bound
inc
xchg
add
inc
pop
cmp
jne
and
adc
mov
test
push
or
adc
add
rcl
xchg
push
mov
out
arpl
jp
sbb
ds
inc
sbb
(bad)
retf
xchg
(bad)
and
mov
mov
add
xchg
dec
mov
mov
mov
adc
aaa
mov
xchg
inc
nop
arpl
inc
daa
ret
xchg
cdq
mov
popa
mov
pusha
sbb
ins
sub
int
jl
xchg
sub
cmp
push
xchg
add
adc
loope
push
js
cmp
adc
mov
lds
mov
test
(bad)
cwde
imul
aaa
sub
cmp
pop
jae
out
jns
push
outs
out
mov
add
fidiv
or
out
mov
lea
les
(bad)
es
xchg
mov
add
stos
dec
xchg
jmp
imul
loope
inc
pop
cmp
cwde
gs
pop
pop
xchg
pop
pop
fist
pusha
stos
xor
add
sbb
test
movs
xor
jl
sub
inc
jae
std
sbb
push
aaa
mov
xchg
aad
cmp
aas
hlt
pinsrw
or
cld
fcomp
mov
bound
(bad)
xor
jmp
ror
sbb
sub
cmp
arpl
jno
ror
sahf
mov
and
jecxz
nop
fcomp
inc
xor
icebp
loopne
sbb
adc
iret
in
sbb
adc
(bad)
in
mov
push
rol
mov
leave
popf
dec
mov
fwait
and
sbb
(bad)
int3
jbe
test
inc
aas
mov
(bad)
aaa
adc
movs
sbb
jmp
xor
mov
hlt
xor
ja
cmp
pop
retf
cmp
popa
sbb
lods
cs
mov
jnp
sub
call
or
lods
dec
jecxz
mov
xchg
push
dec
sub
test
mov
fbld
test
mov
dec
mov
push
inc
inc
jnp
outs
push
cmp
clc
ror
mov
sub
sbb
cdq
xchg
int
or
jp
int
outs
add
mov
test
outs
ss
dec
sahf
sbb
fistp
std
dec
mov
or
mov
cli
icebp
pop
rol
xor
cmps
popa
fimul
and
(bad)
push
dec
lea
mov
cmp
ds
and
jg
xchg
or
mov
pusha
test
(bad)
shl
jbe
pushf
cmp
(bad)
sub
lds
and
xchg
arpl
or
sub
mov
xor
adc
sti
shl
shr
and
popf
imul
scas
dec
xchg
das
inc
sbb
ins
loope
xor
cld
cmp
cs
pop
add
and
cmc
idiv
mov
cmp
jecxz
and
push
(bad)
cmp
mov
inc
pop
jnp
imul
sahf
rcpps
add
adc
add
cwde
(bad)
jne
outs
or
inc
add
pop
xchg
fbstp
cld
mov
call
ins
cmp
ss
retf
cmc
push
push
mov
(bad)
pusha
mov
cmp
adc
xlat
mov
dec
jmp
jle
daa
daa
mov
fimul
pop
mov
or
sbb
push
mov
fist
outs
in
xor
call
std
enter
mov
es
(bad)
xchg
shl
adc
addr16
xchg
pusha
sbb
lods
add
stc
jle
pop
cmp
out
cmp
fisttp
mov
and
outs
jns
pop
pop
xor
mov
(bad)
or
mov
pop
mov
outs
jae
sub
inc
pop
loope
ret
sbb
mov
push
inc
push
ret
data16
cmp
jmp
jno
ficom
cmp
sbb
dec
push
jns
scas
fmul
sub
lods
and
push
add
sbb
hlt
pop
dec
sahf
or
ret
inc
push
int
or
pusha
xor
rcr
sub
mov
leave
jge
fcomip
adc
movs
mov
mov
punpckhdq
movs
and
mov
repnz
ins
into
jecxz
movs
(bad)
adc
loope
div
popa
mov
xchg
inc
das
mov
outs
dec
jmp
pop
daa
adc
test
sahf
in
push
test
mov
pop
mov
stc
sbb
scas
aad
stos
jle
jmp
jb
mov
jp
mov
pop
or
adc
js
or
dec
jp
add
mov
and
dec
dec
or
mov
mov
call
jmp
out
ins
rol
mov
push
movs
xchg
jne
cmp
stc
stos
push
jo
push
repz
sub
push
add
nop
jmp
scas
xor
ror
sbb
stos
or
push
mov
outs
addr16
xchg
mov
sbb
mov
inc
push
mov
mov
das
leave
and
movs
lods
jge
test
aaa
retf
movs
adc
pop
push
fs
lods
imul
xor
clc
sar
repz
test
out
sbb
je
rcl
fisub
sti
jmp
test
cmp
mov
pop
or
arpl
pop
out
mov
call
mov
mov
retf
cmp
into
not
dec
or
pop
mov
les
imul
dec
pop
pop
imul
push
popf
xor
movs
push
xor
and
pop
jo
mov
(bad)
stos
es
dec
dec
mov
arpl
pushf
push
in
pop
xchg
jbe
(bad)
out
xor
inc
jno
mov
cs
(bad)
shl
rol
mov
mov
inc
push
sbb
cmp
scas
mov
addr16
lods
jl
pop
lahf
gs
xor
test
jle
pop
cmps
not
sti
pop
sbb
(bad)
test
pop
lds
push
and
(bad)
pop
dec
mov
ret
and
fwait
outs
pusha
pop
popa
fwait
push
xor
sbb
inc
pushf
idiv
mov
inc
mov
les
loopne
adc
mov
push
xor
mov
xor
jl
sub
jne
loope
push
adc
ds
push
fcomp
mov
(bad)
sub
ins
xor
jg
out
int
mov
xor
and
dec
mov
sub
call
pop
push
jmp
or
push
scas
and
xor
jbe
out
test
fisubr
add
aam
push
push
dec
adc
jne
mov
cmp
push
sti
push
or
jne
mov
add
push
jl
or
fdiv
mov
xor
xor
inc
adc
inc
pop
stc
mov
retf
lods
leave
les
push
rcl
and
cmps
std
mov
xchg
cmp
mov
adc
or
xchg
call
repz
mov
loopne
jne
pushf
sub
ja
jmp
push
jns
sub
fwait
(bad)
(bad)
sbb
and
push
(bad)
pop
and
sub
mov
jecxz
pop
stc
fistp
fcomp
out
les
shr
push
in
hlt
inc
(bad)
jmp
push
out
mov
dec
sbb
addr16
pop
test
ss
out
mov
and
sbb
pop
arpl
stos
cmp
cvtps2pi
jmp
imul
xchg
pop
in
rol
je
inc
mov
dec
in
test
cmp
call
push
jecxz
dec
iret
push
test
xor
push
mov
push
not
cld
stos
sub
jns
pop
mov
push
ss
mov
lods
enter
or
or
lea
inc
jbe
pusha
(bad)
lds
movs
dec
fcmovnb
xchg
ss
int
jo
sbb
arpl
icebp
pop
into
mov
out
mov
iret
push
icebp
dec
pop
rcr
mov
push
pop
dec
or
out
imul
mov
jmp
cmp
dec
mov
push
push
aam
js
pop
push
adc
dec
in
cmp
adc
cmp
sub
lea
push
xchg
cmp
cmp
fisttp
(bad)
pop
mov
pop
cmp
into
and
into
push
dec
xchg
jg
jp
adc
xor
das
rol
jmp
repz
movs
and
sub
inc
mov
adc
retf
push
movs
cld
cmp
mul
cmp
inc
inc
imul
jg
push
lea
dec
sbb
cmp
sub
xchg
pusha
inc
adc
and
dec
sahf
push
inc
or
xchg
popf
in
cld
ja
sar
movs
push
ja
nop
xchg
push
xor
fisttp
cmp
jg
ficom
jb
dec
in
fld
dec
jge
mov
ins
adc
stos
enter
cmp
mov
and
test
bound
jnp
jp
add
fmul
sbb
push
push
sub
mov
adc
add
jae
leave
push
ror
mov
test
or
mov
sbb
bound
fmul
inc
fld
fs
stos
mov
js
adc
inc
aas
(bad)
cmp
mov
fiadd
jp
cld
push
rcl
sti
jb
inc
inc
mov
fldcw
lahf
adc
popa
inc
ret
fs
test
ds
xchg
lahf
mov
push
neg
ret
dec
popa
push
outs
ret
mov
out
push
push
jmp
mov
mov
fwait
daa
sub
or
mov
xchg
push
stc
icebp
jo
xchg
std
rep
push
ffreep
dec
cld
sbb
aaa
pop
aaa
nop
test
push
jns
out
(bad)
push
jecxz
jge
add
and
cli
mov
fisubr
into
xchg
(bad)
out
mov
pop
rcl
stos
das
jmp
mov
or
loopne
mov
mov
xchg
stc
repz
shl
sub
loopne
cmc
shl
sbb
adc
imul
lahf
pop
shl
push
mov
mov
retf
sar
out
push
add
pop
clc
dec
cwde
sub
out
sbb
push
stc
data16
in
out
icebp
packuswb
pop
dec
dec
int
pop
movs
ror
xor
push
jbe
xor
sub
les
ins
test
ins
repnz
in
xchg
(bad)
enter
repz
add
inc
fs
(bad)
mov
or
loop
cmp
cmp
sbb
mov
mov
mov
daa
mov
fs
push
sbb
and
js
mov
fdivr
mov
js
jae
pop
push
dec
and
mov
or
(bad)
xor
xchg
push
mov
movs
adc
stos
out
dec
dec
(bad)
jbe
outs
pop
test
clc
in
mov
enter
adc
cmp
data16
push
cmp
and
cmp
in
mov
sub
or
mov
and
cmp
mov
and
and
add
mov
hlt
mov
cs
pop
test
and
push
pop
inc
pop
pop
retf
pop
pop
push
stos
leave
push
inc
sbb
outs
push
jnp
jle
retf
xchg
stc
arpl
fcmovbe
sub
add
xor
inc
fbstp
mov
out
and
dec
push
jns
int3
call
and
mov
data16
pop
cmp
(bad)
fldenv
mov
pop
fidivr
sub
fisttp
pop
sbb
stos
stos
cmp
dec
mov
mov
aam
cmp
loope
jmp
repz
xor
mov
out
jg
call
mov
pushf
adc
jl
gs
sahf
push
cmp
lods
lds
pop
pop
sbb
xor
cmp
dec
movs
jle
stos
stos
add
xchg
out
push
xchg
jle
out
pop
clc
mov
shl
int
pop
or
add
pop
ss
icebp
fdiv
xor
mov
pop
in
bound
jge
jmp
jmp
mov
push
retf
sub
pop
add
jg
xor
mov
mov
fcom
pop
mov
fmul
dec
ror
push
pop
dec
cmp
std
xor
inc
imul
in
xor
stos
mov
inc
gs
xchg
xchg
mov
mov
sub
cdq
stos
cmp
(bad)
call
add
rol
jne
jle
push
cs
in
inc
inc
ins
iret
hlt
sub
rol
shl
nop
gs
or
mov
hlt
mov
mov
movs
psraw
mov
pop
pop
popf
lock
sub
pop
(bad)
fmul
popf
mov
pop
inc
push
jmp
xor
or
(bad)
mov
or
stos
push
div
ret
xor
aad
ret
pop
arpl
test
mov
movs
mov
loope
mov
pop
dec
pop
clc
sbb
fldcw
pop
pop
dec
and
sub
jno
inc
arpl
js
mov
jne
mov
pushf
dec
gs
(bad)
xlat
dec
and
adc
mov
lods
aas
repnz
sbb
icebp
xchg
pop
push
sti
xchg
jmp
stos
clc
inc
push
(bad)
sar
es
or
int
mov
not
xor
ins
sbb
fwait
pop
test
movs
mov
leave
mov
dec
test
pop
xor
arpl
or
sbb
mov
cmps
push
or
inc
mov
test
shl
test
mov
mov
lea
add
repnz
and
adc
repnz
lea
test
sbb
xchg
es
stos
leave
out
sbb
sti
jmp
sub
cld
retf
cmp
push
mov
std
xchg
pop
mov
bound
sbb
clc
pop
inc
jg
jbe
xchg
xor
push
cmp
inc
loope
jnp
or
lock
or
pop
inc
gs
xlat
clc
jno
cmp
pop
mov
jnp
jge
push
mov
es
jne
add
(bad)
fbld
js
or
jno
or
(bad)
sub
add
pop
ret
or
add
loope
in
inc
cmp
js
sar
jnp
cdq
jg
mov
mov
iret
arpl
scas
popf
hlt
movs
aaa
or
loopne
push
jne
add
push
neg
stos
fcom
outs
pop
test
bound
sar
arpl
jne
std
int
xchg
fs
movs
outs
jae
mov
fwait
add
cwde
bswap
les
mov
fadd
pop
(bad)
mov
(bad)
ins
jnp
mov
mov
cli
jne
stos
xor
fwait
mov
or
pop
push
xor
in
rol
add
inc
mov
fdiv
push
punpckhdq
ja
pop
xchg
push
adc
loop
cmp
out
mov
sub
inc
mov
jecxz
imul
icebp
cmp
inc
test
inc
shl
out
adc
push
fst
mov
stos
jbe
icebp
(bad)
repz
pop
call
pop
dec
add
xchg
aas
dec
push
aaa
jle
push
mov
outs
dec
outs
dec
js
adc
in
ficomp
inc
or
in
pop
adc
movs
sub
(bad)
fdivr
cmp
leave
outs
sub
ret
cmp
ror
in
test
test
push
lds
push
in
fst
fiadd
or
in
fcmovnu
pop
mov
daa
fldenv
fcmovne
int
inc
mov
cld
and
ja
into
(bad)
retf
std
jl
iret
mov
and
dec
icebp
(bad)
xlat
iret
add
mov
(bad)
jnp
or
jb
test
cs
xor
out
ret
pusha
cs
lds
mov
int
push
aad
in
fidiv
xor
pop
sahf
add
and
lds
and
mov
mov
or
mov
jle
sbb
push
push
inc
les
mov
and
(bad)
pop
das
add
fimul
rcr
inc
ds
adc
inc
mov
cmp
into
enter
mov
push
dec
sbb
cmp
mov
popa
cmovb
add
iret
and
sub
xlat
or
pop
stos
mov
int3
jg
fsubr
test
push
pop
adc
jno
fs
mov
xor
or
pop
leave
in
and
xor
mov
lea
out
add
das
sub
daa
stos
dec
cs
jmp
out
mov
scas
xchg
adc
pop
xor
shl
outs
cmp
loopne
cdq
mov
sahf
pop
dec
xchg
retf
jmp
es
xchg
push
sbb
xor
push
mov
retf
stc
sbb
jae
cmp
bound
and
inc
movs
adc
rcl
jno
mov
enter
xlat
dec
push
jmp
test
call
ins
ja
xchg
cmp
mov
mov
push
in
xchg
inc
test
hlt
int
mov
add
jnp
xor
mov
mov
or
pop
mov
adc
cdq
pusha
das
fmul
inc
leave
push
outs
fwait
pop
pop
test
in
xchg
gs
mov
pop
clc
pop
xchg
dec
pop
mov
adc
inc
nop
stos
outs
retf
or
mov
mov
push
pop
loope
fmulp
add
push
mov
stc
pop
ret
jge
inc
je
mov
ja
out
pcmpgtb
mov
lods
adc
ror
imul
and
aas
dec
jge
jmp
inc
pop
aad
test
neg
sub
outs
and
movs
or
das
adc
fidivr
push
or
xchg
jae
je
pop
stos
sbb
pop
test
je
call
or
xchg
jo
mov
xchg
in
jmp
(bad)
sub
push
jp
dec
push
mov
push
cmps
pop
sahf
sbb
sbb
inc
ret
in
add
and
xchg
mov
test
out
push
jbe
push
pop
sahf
sbb
aaa
pop
jb
das
xchg
test
sar
jl
jg
push
jge
popa
mov
push
nop
xor
js
xor
dec
push
mov
stos
cmovp
inc
ins
out
and
vmovhpd
push
jmp
pop
call
ins
into
push
push
mov
test
lds
cmp
add
mov
stc
pop
pop
dec
xor
(bad)
mov
mov
pop
js
clc
push
fcmovu
hlt
dec
pop
pop
test
cmp
or
cmp
shl
das
sbb
imul
xchg
and
sub
sub
or
(bad)
in
(bad)
or
adc
mov
mov
xchg
cmps
adc
sub
adc
xchg
test
push
in
xor
jecxz
icebp
jb
mov
pop
or
or
into
iret
mov
(bad)
leave
hlt
mov
adc
outs
or
inc
fs
push
push
clc
or
mov
xor
ja
test
jg
adc
ficomp
(bad)
mov
push
lds
pop
test
push
inc
push
push
jbe
xor
xor
outs
icebp
pushf
push
jge
or
jbe
stc
lea
mov
push
adc
sbb
out
mov
imul
std
cmps
lods
and
lods
xor
inc
pop
gs
jae
shr
pop
push
cld
cs
lahf
pop
mov
mov
mov
push
repz
adc
mov
fisub
cmp
pop
cmps
sbb
pop
mov
call
lods
lea
dec
jmp
ret
ins
rcl
(bad)
and
add
inc
adc
loopne
mov
je
adc
pop
test
adc
add
ins
adc
sub
fistp
xchg
retf
adc
sbb
cli
sbb
stc
jne
mov
cmp
mov
mov
fst
mov
jbe
test
test
je
mov
mov
sahf
xor
in
lods
cli
cmp
jl
fist
ins
stos
jecxz
arpl
cmc
xchg
xchg
add
out
mov
call
adc
mov
cld
or
outs
mov
mov
retf
jno
and
fwait
pop
push
adc
cmp
dec
jne
xchg
nop
les
iret
(bad)
adc
ret
jbe
outs
in
xchg
mov
dec
sub
int3
mov
frstor
xor
inc
adc
dec
test
cmp
mov
mov
movs
inc
data16
and
adc
xchg
xchg
aas
imul
inc
xchg
mov
push
add
push
in
ds
retf
jl
or
les
ins
ret
div
test
inc
and
jl
cmps
imul
cmp
add
imul
adc
cmp
(bad)
mov
pop
mov
adc
and
mov
jbe
pop
pop
out
pop
loope
adc
jmp
sub
pop
repz
cmp
in
mov
jno
les
mov
pushf
call
shl
int3
inc
pop
jp
daa
adc
stos
push
mov
(bad)
mov
out
jp
push
xchg
mov
imul
sbb
retf
sbb
test
or
movs
push
sbb
lds
add
rcr
or
cmps
dec
jmp
jmp
inc
mov
dec
push
in
out
retf
test
js
mov
aad
inc
lahf
dec
push
mov
inc
push
inc
cli
test
push
mov
pop
push
sub
out
jge
lods
jae
inc
ds
add
jg
pop
aad
scas
adc
retf
aad
mov
and
mov
jge
cmc
sub
xchg
mov
xchg
sbb
add
inc
xor
dec
test
dec
std
xor
out
sbb
jo
iret
fld
popa
movs
jns
movs
cld
cli
leave
in
dec
xchg
inc
inc
hlt
pop
sbb
movs
push
je
pop
and
in
je
ret
fs
push
or
test
sbb
enter
repz
int
dec
and
les
jno
mov
push
sbb
xchg
mov
push
sar
add
push
xor
pop
call
cmp
loopne
jl
inc
mov
xchg
dec
dec
rcr
jmp
inc
sbb
(bad)
sbb
jo
int
(bad)
mov
loopne
mov
jmp
dec
add
scas
cli
add
imul
pop
cdq
shl
pop
and
xchg
inc
cmps
add
cmp
out
push
ret
jge
mov
sti
mov
inc
jmp
pop
stos
scas
imul
bound
psrlq
es
dec
cmc
inc
inc
sub
push
aad
jne
mov
(bad)
mov
mov
and
and
adc
xchg
pop
push
xchg
(bad)
bound
ret
fidiv
or
jmp
jmp
adc
(bad)
repz
call
fptan
pop
js
xlat
cmps
ins
out
movs
xor
out
icebp
daa
add
inc
ja
lea
mov
imul
add
mov
fs
and
xor
add
pop
movs
in
sbb
scas
icebp
or
aaa
mov
pop
das
fucom
mov
mov
sahf
jle
sub
bound
bound
scas
data16
clc
sub
ret
ins
cmc
int
jg
mov
outs
in
(bad)
sbb
pop
int
ins
pop
aas
mov
xchg
inc
(bad)
cmps
dec
or
test
retf
xchg
mov
push
adc
jno
ret
inc
pop
push
out
hlt
inc
push
nop
or
jns
mov
lods
pop
cmp
cmps
sub
jle
push
inc
rcr
xor
sbb
sub
cmc
or
mov
in
sbb
call
into
sub
push
les
movs
mov
cmp
loope
sub
xchg
dec
xor
ja
fisubr
test
shl
arpl
cmp
outs
fwait
mov
jb
push
sbb
out
sti
sbb
and
movs
jae
fs
jno
loop
mov
aam
jne
fcomp
loope
xchg
dec
sbb
jbe
cmp
es
sub
and
fistp
adc
leave
jae
sbb
test
mov
mov
sahf
icebp
mov
adc
into
mov
sub
fld
in
sbb
cmp
shr
(bad)
aaa
jmp
sahf
cmp
(bad)
mov
push
and
cmps
cmp
retf
mov
adc
push
pop
retf
int
lods
ds
add
and
aad
movups
out
je
xchg
push
js
jns
xor
lods
div
adc
outs
pop
in
xor
jae
mov
mov
nop
xchg
mov
cmp
daa
sbb
cmp
fisubr
pop
daa
shl
test
in
lahf
mov
cmps
pop
mov
xchg
sub
jg
mov
retf
cmp
cmp
mov
sahf
inc
pop
scas
xor
ret
loopne
enter
mov
sub
out
pop
or
icebp
pushf
xchg
clc
nop
ins
aam
mov
jns
add
and
outs
inc
scas
scas
popf
cmps
aam
add
xlat
inc
(bad)
jnp
xor
lods
cmp
lods
mov
dec
pop
dec
mov
popa
mov
pop
(bad)
stos
mov
push
fstp
pop
pop
add
jns
inc
push
lds
into
neg
dec
adc
adc
mov
xchg
(bad)
js
leave
inc
outs
in
mov
iret
xchg
xchg
sub
addr16
jmp
ss
adc
(bad)
idiv
cmc
shl
mov
retf
leave
cli
mov
ss
mov
or
es
mov
dec
sbb
lds
sub
add
push
adc
mov
push
inc
scas
mov
adc
clc
sbb
pop
jp
sub
enter
xchg
and
lods
push
push
lods
inc
in
aaa
aam
js
dec
repnz
push
in
and
cwde
cmp
bound
call
test
add
pop
test
loope
mov
mov
retw
mov
mov
add
fwait
xchg
test
xchg
lds
fs
push
aad
push
xchg
mov
fdivr
sti
or
pusha
xchg
imul
call
mov
pop
mov
push
nop
movs
xchg
pop
mov
jl
dec
fsubr
mov
and
std
cmp
(bad)
ror
ret
(bad)
in
lods
jbe
bound
xlat
aam
inc
pop
or
pop
add
pop
shr
push
pop
lods
and
cmp
and
sbb
cmp
mov
adc
sbb
(bad)
pusha
daa
shl
cmps
iret
outs
cmp
push
fcomp
mov
push
dec
push
pop
dec
mov
vpsubusb
pop
jle
out
mov
mov
or
stc
push
mov
test
adc
cmp
dec
pop
jbe
mov
call
mov
mov
inc
outs
loop
xor
jecxz
and
loop
ss
xchg
rol
push
pop
in
je
int
fwait
aas
jno
int3
xor
jp
sub
(bad)
sahf
mov
jg
and
sbb
and
cmp
or
and
ret
(bad)
mov
std
or
movs
push
mov
inc
inc
fwait
push
xchg
iret
call
or
inc
lds
add
or
or
jae
stos
sbb
jb
daa
lods
xchg
fsubr
fcom
nop
pop
sti
jo
ja
mov
xor
dec
daa
xchg
xor
adc
or
jge
jns
(bad)
push
aas
gs
pop
std
arpl
dec
adc
fcomi
xchg
sti
fidiv
popa
jmp
pop
hlt
aaa
sti
scas
pop
test
mov
fidiv
mov
call
inc
mov
iret
sub
daa
stos
mov
mov
pop
inc
xchg
ss
mov
ja
adc
ror
or
cmp
out
xor
push
stos
mov
mov
out
imul
lea
leave
and
call
mov
loopne
jb
mov
(bad)
pop
sbb
xchg
fcomp
sar
ss
pop
es
in
ret
mov
or
sub
push
inc
push
jae
into
iret
jge
pop
jle
sub
rcr
sahf
or
repz
jl
outs
sub
or
sahf
dec
inc
fs
mov
sar
inc
xor
jb
pop
fistp
xchg
xchg
jne
out
xchg
mov
test
movs
call
bound
push
jno
sbb
cdq
ss
ret
cmp
adc
sbb
test
sbb
rcl
outs
lea
popa
dec
xor
dec
je
fmul
mov
enter
add
sbb
fisubr
hlt
sub
fs
(bad)
jb
adc
xchg
ret
xor
in
mov
cwde
pop
ins
mov
jle
sub
repnz
enter
lods
or
sub
inc
pushf
mov
or
sbb
cmp
iret
enter
dec
(bad)
mov
mov
iret
ss
lods
or
sub
ror
stc
out
mov
popa
rcl
dec
cmp
rol
fs
movs
mov
icebp
in
rcl
js
jmp
mov
pop
(bad)
fstp
repnz
mov
xor
jbe
call
dec
sbb
xlat
mov
jl
xchg
cmp
sub
ins
jae
jge
test
push
and
mov
pop
(bad)
mov
jo
out
call
fst
inc
outs
inc
aad
mov
nop
xchg
stos
jo
and
dec
mov
mov
pop
leave
mov
mov
xor
pop
test
and
nop
daa
sub
sbb
mov
mov
neg
loope
stos
mov
xchg
daa
cmps
xchg
mov
or
pop
pop
ja
jo
mov
xor
mov
sub
test
cmps
in
jl
dec
scas
push
jp
mov
and
pushf
push
mov
xchg
ret
popa
fist
mov
xchg
adc
std
mov
in
adc
mov
dec
lock
mov
int
cmp
sub
rcl
rcl
cli
mov
add
mov
es
push
in
mov
sub
cdq
comiss
in
lahf
xor
and
mov
ds
add
push
repz
das
ja
xchg
je
pop
inc
fwait
je
xchg
fnstenv
sub
inc
fsubr
ins
xor
jmp
dec
imul
and
jno
mov
les
xor
mov
or
mov
push
mov
out
cmps
pusha
(bad)
jecxz
add
dec
outs
xchg
mov
xchg
dec
push
enter
adc
cdq
aam
and
mov
sub
push
ja
pop
sub
aad
ja
out
jg
xlat
test
xchg
and
xchg
jl
sar
retf
out
xor
fisub
mov
pushf
jo
fwait
imul
lods
mov
fsub
inc
adc
idiv
mov
fimul
test
test
loop
cmc
ins
pop
popa
mov
jmp
xchg
jmp
adc
loop
enter
jge
sub
add
push
jns
dec
sar
test
jmp
push
lahf
mov
push
or
push
and
xchg
lds
push
in
in
aaa
ds
ja
not
push
mov
sbb
fldenv
mov
mov
inc
in
js
xor
clc
jns
stc
lea
mov
out
mov
retf
out
cmp
mov
repnz
inc
(bad)
fld
rol
pop
shr
mov
and
lahf
(bad)
mov
aad
pop
in
inc
sbb
into
fimul
pcmpeqb
es
xchg
xchg
outs
mov
loope
xchg
nop
por
test
retf
pop
cli
add
and
xor
push
mov
sub
dec
xchg
and
xchg
pop
push
cdq
mov
mov
sahf
jg
movs
lea
rcr
fsub
mov
out
add
sub
movs
inc
or
and
adc
mov
aas
push
dec
push
cmp
mov
cdq
jmp
dec
arpl
aaa
mov
test
mov
mov
ja
push
mov
stos
outs
gs
mov
inc
outs
or
sar
mov
jns
inc
jae
inc
leave
adc
packssdw
jno
mov
ret
xor
aam
pop
mov
xor
stc
and
adc
inc
sbb
(bad)
bound
pop
dec
retf
fcom
movs
add
xchg
in
ror
retf
ja
xchg
pop
or
mov
or
xor
ins
pop
(bad)
repnz
mov
dec
mov
push
ret
lods
test
push
adc
std
addr16
inc
jno
adc
mov
icebp
fdivr
xchg
out
sar
push
sub
clc
daa
pop
xchg
inc
fdivr
dec
mov
inc
jecxz
sub
popa
jle
pop
aas
loope
movs
pop
cmc
fidivr
or
xchg
out
push
push
aaa
adc
dec
xlat
std
and
push
push
ins
push
xor
repnz
int
mov
test
and
aas
outs
adc
sbb
sub
cmc
(bad)
in
xor
mov
sbb
cmp
ret
int
dec
(bad)
loop
pop
fwait
mov
call
loop
mov
jecxz
dec
cmp
loope
jmp
push
retf
inc
xchg
popf
sub
fcmovbe
sub
pop
int3
mov
rcl
push
push
xor
addr16
stos
jmp
mov
mov
pop
cmp
lock
test
fadd
push
sbb
dec
or
call
push
pop
sbb
int3
sti
and
jp
imul
sub
test
in
pusha
shr
pop
lods
movs
pop
cmc
(bad)
bound
push
sbb
gs
into
cld
push
push
(bad)
sbb
mov
cld
cmp
icebp
cli
and
jmp
xchg
or
mov
add
mov
daa
aas
mov
mov
imul
sbb
cmps
call
push
imul
dec
nop
push
les
inc
mov
mov
stos
mov
pusha
push
jl
daa
and
scas
inc
jl
and
mov
push
adc
sub
neg
cmp
mov
test
xor
fiadd
es
push
addr16
mov
xor
ficom
and
jno
enter
add
test
sti
sbb
test
adc
cmp
lahf
data16
add
cs
inc
mov
pusha
cld
jmp
(bad)
fsubr
mov
test
mov
adc
jmp
and
aas
or
sub
pop
jne
call
mov
mov
jbe
push
and
pop
mov
mov
stc
and
repz
mov
dec
outs
xor
and
gs
lea
leave
cmp
nop
lahf
fwait
mov
mov
arpl
mov
add
jo
fnsave
sbb
ins
mov
leave
call
inc
mov
stos
or
jmp
sahf
jmp
test
cwde
(bad)
xchg
adc
out
lods
loop
imul
(bad)
outs
sub
jns
imul
test
ret
cdq
mov
sbb
jne
repnz
cmp
mov
stc
push
pop
pop
mov
ins
(bad)
je
jne
sub
sahf
scas
pop
push
mov
enter
push
xchg
pop
dec
jnp
xor
(bad)
cmps
dec
ss
sub
aaa
jo
ret
push
push
push
jmp
outs
dec
jmp
ret
dec
in
push
sub
out
jle
dec
mov
and
scas
(bad)
not
(bad)
pop
icebp
xor
jmp
jmp
ins
retf
gs
push
dec
addr16
stc
mov
mov
dec
addr16
bound
icebp
imul
or
cmp
mov
(bad)
aad
xchg
mov
push
jmp
arpl
cmc
pop
add
push
push
dec
mov
xchg
sub
stos
cmp
add
jp
xchg
push
(bad)
lods
push
retf
dec
xor
sub
mov
sub
imul
jl
inc
add
loope
in
addr16
stos
fsub
xlat
mov
data16
jno
ja
fwait
(bad)
neg
(bad)
mov
jmp
mov
mov
mov
out
and
ficomp
ins
jge
mov
xor
sub
cmc
dec
cmc
sub
arpl
pop
push
pop
data16
add
pop
adc
dec
push
adc
(bad)
push
test
add
ret
sbb
xchg
mov
fcmovnb
push
sub
repz
bound
pop
cmp
pop
loope
(bad)
sub
icebp
jns
or
js
and
or
or
jecxz
out
pop
mov
dec
add
es
dec
rcr
mov
call
repnz
pushf
xor
mov
fwait
sahf
jns
xchg
and
sahf
rcl
ja
xchg
jmp
je
mov
mov
xchg
pop
idiv
sahf
sbb
pop
loop
cmp
push
sbb
dec
mov
pop
shr
push
dec
retf
xchg
mov
fs
sbb
pop
mov
jbe
sub
mov
mov
pop
push
rol
and
push
outs
xlat
pushf
pop
adc
mov
sbb
pop
or
test
repnz
push
pusha
(bad)
gs
or
mov
mov
inc
das
movs
js
fwait
mov
jmp
shr
and
pop
movs
es
adc
xchg
es
inc
fcomp
stos
adc
shl
outs
or
pop
mov
pop
dec
inc
adc
test
cdq
data16
into
cs
nop
out
cdq
sub
int3
test
(bad)
mov
sbb
adc
jg
push
push
jbe
mov
and
je
sbb
dec
cmp
enter
sub
adc
(bad)
loope
movs
lds
lds
fldenv
fldenv
add
retf
pop
jecxz
sbb
or
inc
push
(bad)
mov
adc
enter
xchg
(bad)
in
pop
xor
les
jne
mov
(bad)
jmp
clc
ja
jmp
jecxz
cs
retf
clc
pop
das
sub
int3
gs
mov
push
jle
fdivp
push
jmp
add
mov
(bad)
mov
sti
into
int3
psubsw
mov
jne
xor
adc
out
jge
sub
aaa
jae
mov
dec
or
movs
jns
ins
mov
mov
or
mov
jae
imul
ret
mov
popa
ret
dec
or
test
xor
push
in
mov
mov
adc
imul
xor
shr
sbb
cld
sbb
cmp
sahf
stos
repz
and
xor
mov
shr
mov
jo
stc
adc
adc
icebp
(bad)
jns
push
out
ins
and
in
sbb
cmp
xchg
cmps
xor
outs
mov
aaa
fdiv
mov
push
xchg
ret
fs
call
jmp
xchg
dec
mov
dec
mov
aaa
test
jne
xchg
sahf
adc
sbb
dec
rcr
fistp
mov
fsub
mov
xchg
sub
aad
in
xor
add
les
inc
inc
dec
js
loopne
add
mov
daa
inc
sbb
out
jle
fdiv
pop
in
ins
xlat
dec
pmulhuw
popf
mov
xor
cs
cli
sub
push
aas
push
fst
icebp
mov
xor
pop
inc
and
push
push
xor
add
mov
and
xchg
jle
pushf
int
xchg
sbb
xor
retf
and
movs
out
mov
loop
adc
hlt
js
and
or
inc
mov
mov
hlt
imul
adc
mov
sbb
shl
sub
add
std
stos
mov
ins
dec
mov
movs
fldz
mov
shl
aam
inc
xchg
test
mov
outs
cmp
or
int3
adc
sbb
test
jno
fisubr
xor
aas
xchg
xchg
and
pop
add
cmp
xchg
test
mov
lahf
pop
jnp
xor
xchg
int3
pop
inc
es
add
ret
movs
mov
xchg
jbe
add
xor
retf
mov
adc
xor
iret
jnp
ja
adc
mov
stos
xor
(bad)
adc
test
stos
std
push
xor
mov
cmps
iret
xor
or
test
imul
jmp
out
mov
jne
movs
das
pop
cmp
jp
int
(bad)
ja
jno
mov
mov
je
dec
adc
mov
imul
mov
sbb
es
cdq
add
popf
fild
das
cwde
mov
jo
cwde
push
inc
jns
stos
inc
das
inc
mov
ss
imul
pop
and
and
outs
pop
mov
pop
imul
xchg
scas
stos
(bad)
fs
sub
stos
lods
sub
(bad)
mov
ret
sbb
mov
adc
or
push
scas
sbb
cli
add
sub
leave
push
dec
push
mov
(bad)
leave
(bad)
mov
or
mov
and
mov
and
(bad)
jo
jl
ins
inc
or
repz
xchg
sub
sbb
in
dec
add
add
lods
stos
mov
and
imul
leave
dec
or
mov
sub
sub
movs
jne
push
enter
ja
stc
cmp
pop
add
jmp
cmp
adc
sbb
dec
(bad)
fcom
jl
fnsave
shl
push
popa
xor
fnstcw
vpcmpeqw
dec
add
adc
cmp
cmc
jmp
dec
or
push
les
pop
cmps
(bad)
(bad)
xor
or
arpl
out
jns
pop
clc
fwait
cmp
rol
pop
inc
or
xchg
sub
sar
in
jb
jbe
test
loop
mov
icebp
pop
push
jmp
scas
movs
or
test
xor
cli
in
dec
mov
enter
inc
push
xchg
out
jo
mov
cmc
inc
in
out
mov
sub
call
ins
sti
mov
and
enter
jp
mov
int
dec
sub
jnp
dec
test
pop
adc
aas
ror
cmp
iret
out
mov
lds
inc
mov
cmp
sub
loope
cmp
into
cwde
inc
or
mov
jmp
inc
ret
das
and
call
mov
rol
xor
dec
out
sar
xlat
xchg
ret
fs
adc
jb
mov
mov
add
mov
dec
adc
inc
(bad)
mov
dec
and
mov
mov
sahf
xchg
pop
add
push
int
pop
push
add
jnp
pop
lock
(bad)
dec
sub
aaa
inc
lods
clc
mov
nop
adc
jp
xor
mov
sbb
dec
daa
and
pop
div
jno
pop
adc
fdivr
and
imul
mov
mov
cmp
loope
ret
jmp
jecxz
cli
sub
push
mov
fsubr
xchg
shl
pop
and
retf
leave
or
jmp
add
in
add
movs
sbb
hlt
not
scas
fwait
stc
mov
jp
mov
movs
repnz
pop
cmp
test
lods
loop
jge
aad
xchg
adc
lods
pop
in
adc
outs
mov
or
inc
sti
arpl
xor
fisttp
dec
std
iret
mov
mov
ds
ja
fild
imul
sti
inc
movs
in
push
adc
push
add
inc
or
out
add
jo
jo
or
sbb
sbb
add
dec
jg
xchg
or
inc
pop
call
inc
(bad)
ficomp
cmp
or
ds
add
or
iret
jmp
push
(bad)
cmc
xchg
mov
add
mov
hlt
xchg
push
inc
xchg
inc
dec
jg
pop
js
mov
lahf
jb
fnstenv
iret
lahf
mov
mov
adc
sbb
cmp
fld
adc
ins
mov
push
and
ins
jo
and
dec
aas
test
cwde
pop
sbb
inc
mov
lahf
xchg
cs
repnz
aas
sub
dec
xor
lock
scas
mov
(bad)
iret
shl
ror
leave
pusha
cmp
or
test
(bad)
aaa
movs
mov
push
(bad)
jnp
call
loopne
sbb
pusha
and
xor
addr16
loop
lds
mov
mov
out
jnp
rcr
jnp
or
ds
and
mov
into
retf
xchg
call
cmp
aad
sbb
or
dec
mov
xchg
popf
and
pusha
mov
inc
sbb
loopne
rol
daa
fwait
aad
inc
inc
xchg
fdiv
jb
pop
dec
jno
ss
or
or
cmp
fs
sbb
mov
iret
shr
hlt
mov
mov
and
aad
test
mov
out
ins
out
adc
xchg
pop
test
mov
repz
jecxz
jae
std
(bad)
in
loope
mov
ja
dec
mov
ds
dec
jp
inc
in
cwde
cld
das
add
cwde
push
ret
xor
mov
js
cmp
lods
xchg
sub
adc
push
cmc
ret
das
fisubr
data16
add
push
jg
lods
jp
mov
fs
paddb
shl
leave
or
not
outs
pop
fsubr
inc
cli
pop
js
movs
lds
xchg
mov
fstp
pop
dec
mov
les
lods
pusha
mov
push
xor
dec
xor
pop
or
inc
jne
arpl
jl
(bad)
lods
mov
stos
lds
or
out
mov
and
cmp
popa
loopne
arpl
jle
fdivp
cli
test
in
mov
call
test
mov
mov
pop
jmp
shr
loope
in
pop
xor
(bad)
mov
test
shr
gs
and
cmp
pop
test
jmp
sub
icebp
pop
outs
call
ins
jo
hlt
and
daa
fistp
pop
jle
sbb
pop
jle
pop
sbb
mov
xor
inc
push
std
and
jmp
xchg
aaa
call
or
mov
xchg
jb
lahf
pop
test
and
cdq
dec
adc
pop
pop
mov
add
cdq
inc
inc
lods
sbb
fwait
mov
and
imul
repz
or
stc
mov
in
jmp
sbb
es
fcomp
mov
dec
xor
jmp
sbb
loop
in
xchg
arpl
mov
int3
aad
adc
(bad)
cmp
mov
int3
and
mov
and
dec
mov
(bad)
and
cmp
mov
xchg
adc
cdq
test
and
xor
dec
arpl
lds
jl
mov
xor
jle
fdiv
pop
xchg
fldenv
loope
sti
xchg
aam
push
add
mov
(bad)
push
les
sub
fadd
arpl
sbb
xchg
addr16
loope
mov
and
stc
xor
out
(bad)
popf
jmp
dec
push
push
or
sub
ins
in
sub
inc
push
and
push
dec
popf
fist
add
push
lea
(bad)
xlat
inc
mov
sbb
add
sub
mov
scas
mov
jecxz
outs
ret
sbb
jae
cmc
push
mov
call
ss
xchg
loope
or
dec
mov
rcr
(bad)
and
mov
addr16
int
inc
scas
lods
fnstenv
out
lods
loop
stc
(bad)
iret
sbb
and
fnstcw
inc
sub
movs
pusha
sti
cmc
mov
mov
vpsllq
mov
(bad)
mov
cmp
cdq
in
and
and
popa
and
out
in
int3
fdiv
push
jmp
mov
sbb
mov
in
jnp
inc
or
or
lods
push
push
mov
push
pop
int3
std
les
push
mov
call
outs
cwde
jbe
sbb
push
add
ss
xlat
sbb
cld
sar
(bad)
js
test
sub
mov
add
cmp
pop
jbe
xor
enter
and
add
shr
jae
pop
dec
dec
fchs
cmp
fstp
shl
push
cmps
jns
cmp
test
jge
loope
push
or
pop
fwait
scas
sbb
imul
js
or
fnsave
jl
hlt
aad
shl
mov
jmp
dec
sub
adc
jecxz
fst
inc
inc
pop
cmc
jne
xor
aas
mov
fild
pop
jne
loopne
xor
shl
test
mov
mov
test
dec
popf
inc
outs
popa
imul
or
fidiv
or
arpl
inc
stos
add
inc
imul
pop
pop
shr
inc
out
cmc
imul
retf
xor
popa
jmp
test
aas
mov
sub
add
jg
jns
and
fs
xor
(bad)
(bad)
outs
jg
repnz
ds
sbb
imul
cs
bound
daa
js
fild
jp
xchg
test
mov
mov
loopne
add
daa
les
(bad)
dec
scas
jmp
add
test
sub
xchg
push
or
adc
imul
mov
(bad)
mov
pop
ret
dec
mov
(bad)
pop
nop
sub
les
fadd
mov
fcomp
jle
jmp
pusha
sbb
adc
or
ja
(bad)
mov
dec
out
xor
(bad)
xchg
pop
outs
(bad)
(bad)
xor
mov
xor
loope
cmp
mov
jbe
cld
cmc
mov
and
jecxz
push
pop
(bad)
div
ret
jb
inc
xchg
dec
(bad)
mov
lods
push
shr
scas
inc
aad
lahf
push
jle
pop
aas
arpl
or
xlat
or
int
mov
push
sbb
jne
or
bound
and
call
jo
test
retf
dec
fs
cli
push
into
pop
test
fild
xchg
outs
call
out
(bad)
jns
test
mov
out
pop
cmp
fistp
cmps
inc
mov
call
mov
mov
cmps
dec
jl
xchg
not
jae
mov
xchg
jb
out
mov
in
jmp
fidiv
or
push
dec
dec
rcr
inc
sub
push
pop
popf
xchg
ror
daa
xchg
jl
dec
ret
out
sti
movs
fwait
and
retf
adc
in
jl
cwde
movs
push
push
movs
sub
cmc
icebp
mov
loop
pop
aas
ror
nop
out
adc
fist
loopne
mov
or
xor
sti
dec
fidivr
das
mov
ins
jbe
in
outs
adc
inc
fsub
ss
test
popf
ds
das
adc
and
add
ret
push
aad
push
cmp
inc
dec
sbb
inc
rdtsc
rcr
or
fsubr
pop
idiv
add
stos
xchg
pop
data16
adc
jo
mov
jbe
ins
cdq
in
mov
js
loope
mov
dec
jno
pop
xor
jae
add
mov
mov
cld
(bad)
mov
dec
push
jmp
lock
xor
push
jne
test
loope
jl
jae
dec
scas
sub
and
mov
in
jl
ja
in
mov
or
jne
out
mov
xor
dec
adc
aam
cmps
sahf
or
adc
add
aad
jb
cs
adc
lds
leave
imul
push
pop
pop
out
and
or
jmp
nop
jns
sbb
add
cmp
test
jge
jmp
fisttp
(bad)
jns
test
pusha
xchg
xchg
jae
dec
je
popa
add
cs
mov
inc
xor
icebp
add
adc
pop
cld
jl
loope
inc
sub
inc
jno
and
fwait
dec
fisttp
leave
mov
and
pusha
mov
sub
jae
mov
stos
pop
xchg
adc
dec
bound
mov
mov
jmp
lock
sub
push
inc
add
gs
dec
enter
xlat
xor
pop
mov
sbb
pop
cmps
rcr
aas
gs
sub
mov
fs
jecxz
cli
and
arpl
jb
xchg
ror
int3
sbb
aad
add
inc
push
sub
xchg
(bad)
(bad)
stos
adc
xchg
aaa
push
movs
inc
je
mov
ja
pop
gs
pop
mov
call
pop
nop
fbld
and
push
(bad)
(bad)
lds
bound
lods
out
xor
push
cld
add
fimul
push
sbb
xchg
mul
sub
inc
jl
daa
push
movs
and
add
enter
add
jns
mov
dec
(bad)
mov
test
fs
cmp
and
jnp
bnd
jo
aad
xchg
xchg
ds
jl
imul
mov
sub
repnz
addr16
cmp
dec
inc
inc
dec
fdivr
sub
call
and
xor
pop
scas
sar
inc
je
cs
push
cwde
(bad)
mov
loopne
pop
outs
sbb
and
xor
cmc
lods
push
ss
test
test
repz
fisttp
mov
aad
cmp
push
lods
ins
test
push
out
push
inc
bound
jae
adc
and
ret
aad
(bad)
jbe
pop
mov
(bad)
test
mov
js
sbb
mov
shr
push
pop
scas
(bad)
idiv
scas
pop
ss
not
xchg
std
jmp
imul
call
sar
push
nop
jecxz
xchg
sbb
outs
pusha
std
mov
mov
mov
and
sbb
aas
jge
or
pop
out
mov
cmp
dec
mov
pop
in
and
inc
dec
jae
popa
loope
cmp
xor
push
repz
daa
pop
mov
pop
ss
or
cmp
and
int
sti
mov
inc
or
pushf
or
inc
mov
(bad)
les
and
jg
xchg
and
mov
or
pop
push
add
cmp
sub
dec
aam
sub
xor
mov
popf
inc
adc
cwde
shl
push
cmp
repz
dec
add
push
cmp
pop
and
push
popf
mov
(bad)
div
fs
xchg
dec
pop
test
mov
pop
jge
cmp
add
test
movs
aas
loope
jno
jo
scas
lds
push
jecxz
outs
mov
add
leave
pop
lods
inc
in
xchg
(bad)
imul
lahf
push
adc
sbb
pop
inc
lahf
or
imul
sti
dec
pusha
cmp
mov
or
sub
pop
xchg
mov
add
cmp
sbb
pop
jge
sbb
add
shl
jmp
xchg
adc
aaa
xlat
add
bound
sahf
xchg
add
push
sbb
xchg
mov
push
jnp
add
sub
lock
jo
call
aad
ins
popf
cli
pop
test
push
jns
sub
shl
les
add
jp
mov
dec
xor
dec
cmc
popf
loop
lahf
jbe
mov
outs
xchg
mov
mov
add
pop
mov
fdiv
pop
sub
cmp
sbb
or
mov
in
and
shl
mov
inc
pop
(bad)
sar
sbb
and
xchg
sbb
test
xor
cmc
(bad)
stc
lahf
adc
lock
jne
test
and
aaa
repz
fwait
jo
test
leave
cmp
sub
sub
mov
sbb
or
sbb
xor
inc
pop
inc
add
dec
cmp
mov
mov
aam
rcr
stos
inc
mov
loopne
ret
dec
sub
es
xor
mov
in
push
add
pop
or
hlt
add
pop
inc
nop
(bad)
out
and
inc
int
jo
jecxz
cmp
ins
pop
mov
movs
push
xor
pop
dec
int
mov
mov
push
les
or
out
push
jle
int3
push
fld
add
push
push
push
xchg
repz
enter
stc
cmp
pop
pop
jns
cmp
sub
pop
or
movs
enter
sub
clc
mov
xor
clc
mov
dec
sbb
and
xchg
mov
pop
shl
arpl
sub
cmps
xor
cmps
int
and
jge
les
movs
cmp
mov
mov
shr
sub
rcr
daa
xchg
add
aad
shl
lods
push
or
aas
js
nop
fbstp
inc
cmc
sahf
jp
add
loop
mov
cld
mov
ret
cld
push
mov
adc
call
add
mov
adc
mov
call
add
addr16
inc
in
dec
jl
adc
jg
pop
push
xlat
inc
(bad)
jmp
imul
div
adc
dec
mov
mov
test
or
mov
pop
add
adc
(bad)
aaa
or
lods
sahf
ret
jb
adc
sbb
cmp
push
add
dec
and
xor
js
or
sbb
mov
cmp
adc
out
push
test
scas
jmp
lea
mov
xor
stos
movzx
cdq
push
inc
pop
sbb
stos
push
(bad)
(bad)
retf
xchg
or
(bad)
xor
rcl
sub
dec
cmps
or
int
cmps
or
hlt
adc
add
aas
push
pushf
cmp
cld
test
in
add
cmp
xor
idiv
jmp
stc
mov
call
dec
jge
stos
mov
xlat
leave
pushf
dec
lods
cmovl
mov
bound
push
mov
es
mov
mov
mov
jnp
adc
mov
mov
jecxz
inc
cld
mov
xor
jb
dec
jbe
jns
cli
mov
add
outs
bound
adc
mov
fcomp
retf
cmc
movs
mov
shl
outs
xor
call
dec
add
and
mov
enter
push
xor
les
fcmovnu
dec
mov
adc
xor
pop
push
or
or
adc
loop
cmp
add
(bad)
xchg
or
ret
cmp
push
mov
mov
call
arpl
cwde
aas
inc
or
jecxz
dec
mov
in
pushf
push
xor
fmul
paddw
sbb
jmp
push
push
aad
and
in
mov
in
push
ret
push
jge
test
call
xchg
sub
jns
sub
into
mov
dec
jp
arpl
fsubr
add
cmc
into
mov
jnp
(bad)
icebp
icebp
imul
and
pop
outs
(bad)
out
dec
pop
retf
jl
aad
mov
stos
repnz
push
xchg
push
inc
pop
fisubr
ror
pop
out
das
in
mov
sar
lods
mov
sub
stc
cmps
ret
xor
cmp
pusha
mov
cli
mov
push
jp
mov
lea
inc
mov
ins
push
test
xchg
dec
(bad)
pop
sti
add
mov
sub
dec
clc
xchg
mov
fs
mov
inc
inc
sahf
xchg
sub
jecxz
aad
aaa
aam
mov
pushf
daa
add
ror
mov
jns
fisubr
outs
mov
test
pop
add
dec
shl
push
inc
sbb
retf
jmp
xor
push
adc
int3
icebp
push
stos
sbb
aaa
inc
dec
test
fadd
addr16
stos
retf
psrad
hlt
mov
test
cmps
ror
mul
mov
std
mov
sub
pop
loope
aas
or
mov
or
js
ja
add
bound
pop
add
mov
aad
cwde
(bad)
cmp
cmp
ret
push
xchg
jmp
dec
mov
jecxz
leave
lock
ja
pop
int
inc
in
and
xor
sbb
movs
popa
(bad)
sub
mov
inc
enter
and
std
add
sbb
int3
imul
repnz
(bad)
addr16
adc
rcl
ffreep
jmp
pop
and
xor
pop
mov
les
lds
es
and
cmp
hlt
mov
or
mov
cs
adc
aaa
loope
(bad)
and
push
repnz
mov
adc
pop
xchg
sub
int3
and
mov
sub
xchg
aad
mov
add
popf
xchg
out
in
or
daa
xor
xchg
ret
xchg
cmp
sbb
cmps
xchg
iret
mov
ja
xchg
sub
xchg
mov
arpl
fnsave
dec
outs
push
lea
iret
adc
mov
mov
mov
pop
push
ss
add
aam
int
loope
add
push
dec
shr
test
jmp
sbb
push
cmp
lods
iret
loopne
jns
mov
mov
jle
pushf
jmp
jg
mov
add
cmp
outs
(bad)
pop
std
fs
inc
movs
dec
fcom
arpl
add
xchg
dec
cwde
movs
and
jg
cdq
sbb
bound
test
push
xor
cmp
adc
fild
or
sti
dec
xrelease
mov
dec
push
pop
out
pop
jl
mov
mov
jo
add
fild
ss
mov
scas
cmp
scas
adc
jecxz
mov
adc
inc
push
iret
stos
icebp
dec
in
(bad)
cmp
jae
mov
int
xchg
repz
jb
push
retf
mov
retf
jecxz
loope
cdq
and
xor
pusha
xchg
pusha
out
hlt
adc
push
idiv
repz
push
pusha
mov
and
mov
in
aaa
ds
inc
xchg
push
dec
push
jecxz
mov
out
sub
frstor
and
aas
neg
push
cwde
sahf
test
jmp
push
movs
xchg
repz
lock
rcl
bound
cli
aam
imul
xlat
dec
push
into
movs
inc
adc
sti
jae
pop
cmp
ror
inc
(bad)
out
scas
aaa
bound
loope
cmps
in
adc
mov
mov
loop
outs
cmp
and
movs
mov
sub
pop
(bad)
(bad)
cmp
jo
inc
xor
outs
es
jmp
test
xchg
dec
mov
add
mov
ficomp
sti
inc
cmps
xchg
int3
inc
push
aam
int3
cli
and
xor
clc
mul
stos
dec
cld
pop
dec
cs
sub
sbb
pop
scas
sub
fucom
adc
outs
popf
std
and
push
aad
popa
jne
aaa
lock
or
mov
adc
hlt
jmp
xchg
sahf
push
out
mov
push
aas
int3
sub
call
jge
rcr
mov
xchg
leave
inc
loope
add
cmps
mov
loope
shl
sbb
(bad)
lahf
dec
mov
mov
sub
out
sbb
inc
xor
(bad)
adc
retf
mov
jecxz
std
add
(bad)
sti
in
mov
into
retf
repz
xchg
jmp
inc
mov
hlt
in
test
outs
inc
cli
fwait
mov
or
dec
popa
test
in
out
sbb
jmp
push
test
fs
xlat
cwde
aad
add
out
jmp
leave
sbb
mov
xor
adc
sub
cmp
in
and
xor
and
mov
out
inc
xor
rcl
xchg
imul
sahf
(bad)
sar
pop
fidiv
adc
pop
and
push
mov
and
loopne
add
mov
push
popa
jbe
xchg
fisttp
stc
jle
mov
daa
sub
adc
push
imul
adc
ins
test
push
leave
scas
xor
test
(bad)
movs
dec
stos
xchg
adc
fwait
push
scas
cli
cmp
out
inc
and
(bad)
fisub
jmp
pop
imul
dec
ins
test
sbb
stc
fist
push
jl
jecxz
xor
jecxz
out
xchg
lods
inc
jns
aam
cli
sar
imul
sbb
and
cli
inc
push
test
inc
outs
push
adc
hlt
ds
not
mov
fistp
xchg
cmp
push
fldenv
jmp
jne
adc
in
in
and
movs
rol
push
int3
add
sub
call
addr16
sti
ja
dec
scas
dec
jo
inc
stc
inc
xchg
dec
cmp
sbb
jl
push
in
(bad)
xchg
inc
(bad)
movsx
add
xor
jmp
xor
mov
sbb
mov
xchg
cli
xchg
stos
jbe
lea
jl
inc
sub
jmp
stos
inc
rcl
int
je
xor
push
movs
lods
inc
dec
push
rcr
jae
imul
data16
xor
nop
pop
icebp
mov
test
ja
xor
mul
xchg
ins
pop
xor
xchg
inc
int3
out
adc
sbb
popa
cmp
in
dec
lea
mov
loope
imul
xor
aaa
jmp
or
pop
stc
in
jns
inc
gs
mov
fstp
je
cmp
je
mov
mov
mov
sar
sub
push
bound
clc
sub
mov
js
mov
into
jae
adc
out
mov
aam
mov
cld
outs
ds
retf
js
pop
arpl
sti
xor
imul
clc
mov
outs
push
cld
loopne
jl
mov
mov
(bad)
ins
stos
aaa
aas
or
retf
or
push
stos
scas
dec
mov
sub
mov
cdq
mov
sub
mov
aaa
cmps
out
jno
and
arpl
xchg
dec
and
fnsave
loopne
stc
jp
pusha
stos
das
and
gs
cmp
push
mov
iret
pushf
or
jne
jmp
pop
nop
inc
lods
sti
int3
scas
inc
sub
mov
mov
rol
in
dec
ja
call
hlt
fninit
mov
mov
ins
mov
loopne
inc
push
mov
rcr
inc
div
push
and
rcr
mov
sub
rol
pushf
outs
mov
addr16
popf
adc
pop
sbb
call
(bad)
xor
sbb
ins
shl
adc
cdq
dec
push
ret
idiv
and
mov
ss
pop
(bad)
fs
stos
pop
test
loope
mov
lds
ins
sbb
shl
fild
and
cmps
jle
jmp
jne
stc
push
std
idiv
mov
fwait
cmps
adc
shl
sti
pop
in
adc
inc
pop
mov
call
scas
sub
add
mov
int3
mov
mov
jno
dec
jmp
lahf
push
or
jns
outs
test
loope
mov
pop
inc
js
ins
(bad)
xchg
cmp
ja
aam
lahf
push
rol
mov
xchg
scas
pop
imul
push
bound
pushf
std
cmp
clc
fistp
jmp
push
mov
cmovne
fcmove
cmp
pushf
sbb
in
jge
push
(bad)
push
pop
mov
pop
cmc
or
or
adc
xchg
mov
mov
pop
and
cmps
imul
rol
rcr
cwde
mov
xchg
mov
push
mov
fwait
sub
loop
call
mov
fcom
jne
movs
mov
inc
mov
leave
gs
lods
nop
sub
jnp
jbe
aad
mov
xor
aas
dec
movq
jb
test
mov
lea
(bad)
cmp
inc
xor
push
xor
fldln2
mov
mov
das
loop
and
xchg
movs
jle
mov
xor
lahf
xchg
mov
pop
jns
fwait
lahf
hlt
loop
iret
inc
ret
and
iret
pop
fbstp
push
or
cmps
cwde
loope
jge
and
idiv
cmp
add
sbb
and
mov
push
int3
mov
(bad)
push
scas
cmps
shl
adc
pop
fcomip
dec
xchg
sub
lea
faddp
out
jne
stos
aad
add
daa
adc
mov
dec
(bad)
call
mov
in
and
in
cld
not
mov
fild
lahf
xchg
arpl
pusha
rcr
invd
sub
cld
call
add
ret
jmp
in
xchg
pop
or
comiss
mov
add
ss
in
or
push
sbb
mov
adc
xchg
xor
xchg
cmp
xchg
imul
sbb
es
push
iret
xor
mov
cmp
arpl
xchg
xor
mov
add
pop
inc
arpl
mov
push
and
imul
pop
push
mov
inc
(bad)
std
aas
ret
rol
jns
or
xchg
das
or
sub
aam
dec
xor
dec
mov
cwde
or
inc
inc
sbb
mov
rol
fidiv
out
pop
out
stos
fstp
pop
add
stos
lods
xor
retf
cmp
add
cmp
or
cwde
fmul
jnp
je
jnp
inc
pop
popa
fist
mov
and
fcmovnbe
(bad)
shl
jecxz
(bad)
xchg
sbb
ret
mov
rcr
mov
push
or
aas
sub
pop
add
mov
addr16
(bad)
(bad)
sub
shl
mov
fisttp
ss
xor
in
sbb
stos
add
(bad)
xchg
fbld
mov
xchg
ror
push
add
and
cmp
xchg
mov
out
out
sub
ss
or
test
pop
push
pop
xor
cld
xchg
movs
mov
cmp
xchg
cmp
lea
clc
jae
in
in
popf
popf
loop
(bad)
sar
sub
xchg
cmp
add
test
xchg
or
call
xlat
fimul
sar
or
out
pop
dec
pop
stc
(bad)
pop
clc
les
pusha
ja
lea
ror
mov
ja
in
in
loope
pop
test
sbb
push
ins
sub
cmp
outs
sub
jae
mov
and
pusha
sbb
cmps
or
imul
adc
mov
push
das
mov
iret
or
mov
(bad)
xor
add
mov
add
inc
inc
sti
outs
data16
sbb
dec
add
and
cmp
sub
stc
int3
mov
add
jb
adc
inc
in
in
add
jg
jl
sbb
push
mov
inc
inc
lahf
inc
clc
sbb
dec
je
xchg
xor
jno
jbe
call
scas
jno
push
js
mov
stos
scas
xchg
in
lods
loop
sub
inc
sub
mov
out
mov
xor
pop
ins
imul
ret
xor
inc
es
and
ret
mov
mov
xor
pop
loopne
psllq
jmp
inc
data16
dec
jne
mov
mov
and
fwait
push
mov
(bad)
dec
xlat
jle
inc
inc
pop
cli
xlat
enter
movs
das
or
xor
adc
(bad)
mov
stos
fwait
ror
gs
push
adc
jbe
xor
fdivr
cmps
cmp
jbe
inc
fmul
sar
mov
(bad)
add
xor
test
sub
push
imul
sbb
mov
cmc
popa
das
or
jae
and
shl
out
dec
leave
cwde
push
mov
dec
repz
or
sub
add
cmc
mov
ins
push
imul
out
(bad)
sub
cmp
push
xlat
mov
mov
push
add
push
lock
ins
nop
jne
pmaxub
(bad)
gs
pop
mul
test
movs
(bad)
aam
cs
dec
(bad)
je
mov
push
push
(bad)
jbe
mov
retf
xchg
sbb
pop
cmp
sahf
stc
repz
in
xchg
ja
mov
outs
movs
mov
xor
retf
push
in
(bad)
cwde
mov
clc
mov
inc
ror
mov
and
add
lahf
inc
rcl
xlat
imul
dec
mov
sti
inc
mov
inc
sub
mov
cmp
mov
or
mov
inc
shl
cld
xchg
push
mov
jmp
pop
xchg
dec
or
outs
jb
cmp
cmp
mov
inc
out
call
popa
inc
or
mov
xchg
and
sbb
push
cmps
inc
cmc
push
xchg
scas
cmp
call
xchg
xchg
or
xor
cmps
fadd
call
jne
cs
mov
out
mov
mov
inc
addr16
mov
loopne
ffree
jb
sbb
jmp
aaa
loop
popa
cmp
dec
sub
adc
fistp
push
mov
cli
test
aaa
inc
iret
dec
icebp
retf
cmp
stos
sub
call
in
xlat
xchg
xor
pop
sbb
fwait
shr
add
dec
inc
add
stc
sbb
mov
add
sbb
pop
retf
xchg
fstp
mov
mov
pop
jmp
ds
fnstsw
adc
int3
cld
icebp
and
dec
add
add
lahf
xchg
cmps
dec
paddusw
jmp
inc
jg
dec
add
xchg
xlat
inc
ins
push
mov
scas
stos
sbb
test
mov
pusha
in
ss
shr
jg
(bad)
test
pop
int
and
popa
sti
mov
and
pusha
or
repz
(bad)
inc
scas
cmp
pop
(bad)
loop
and
add
stos
repnz
inc
sahf
pushf
out
pop
lods
ret
div
repz
(bad)
scas
inc
fimul
std
and
sbb
mov
shl
sub
xchg
retf
xor
leave
mov
adc
and
and
std
mov
cdq
ss
test
pop
fisub
sub
out
les
cmps
sbb
push
outs
sbb
test
push
push
sbb
enter
pop
add
call
cmps
iret
aad
imul
enter
ror
dec
or
ret
or
pop
ror
pop
cwde
pop
test
adc
mov
adc
and
out
int
outs
mov
push
ds
js
imul
ret
xchg
add
pop
mov
pop
nop
pop
and
and
scas
sahf
or
loop
push
repnz
div
dec
fsubr
mov
(bad)
ror
jg
call
push
jmp
aaa
out
sbb
xor
xchg
out
cmp
xor
sbb
sbb
push
xlat
xchg
or
adc
mov
retf
add
pop
clc
add
mov
retf
shr
mov
test
sub
sub
add
add
lock
pushf
mov
popa
jo
aas
xchg
in
ret
not
sub
nop
mov
sahf
fdiv
imul
int3
mov
add
repnz
clc
pop
ds
movs
pop
fimul
push
mov
fs
outs
inc
out
ficom
and
gs
push
iret
inc
fidiv
push
movs
inc
cli
leave
cld
and
scas
jb
in
xor
inc
cli
adc
aad
retf
fcomp
xchg
fsub
cld
xchg
cmp
mov
into
or
in
rol
(bad)
cmp
mov
je
jl
inc
pop
cmp
bound
sbb
int3
pop
retf
repz
div
xor
pop
mov
jp
inc
inc
sbb
fwait
aad
mov
jg
cmp
and
outs
daa
rcl
sbb
pop
xlat
cmps
cmp
clc
push
stc
cmps
pop
push
jmp
mov
(bad)
out
dec
or
das
aas
call
add
movs
sub
hlt
ds
stos
cmps
pushf
add
cmps
bound
stos
mov
and
add
lock
cmps
leave
call
xchg
pushf
ret
inc
push
ficom
lea
fcomp
push
mov
(bad)
sbb
fs
inc
loop
(bad)
call
mov
inc
(bad)
les
ret
mov
sbb
push
adc
test
mov
ds
sbb
aas
or
scas
xlat
mov
adc
pop
jne
sti
fs
dec
sbb
push
and
cmp
shl
je
ror
push
loope
(bad)
loopne
jbe
inc
fxtract
js
jmp
xchg
out
push
loop
adc
lahf
add
cmp
jl
mov
sbb
rcr
cmp
ss
push
sti
add
jne
idiv
ror
sub
ret
sub
or
push
jae
out
push
shl
lds
or
sahf
xchg
fstp
add
jle
gs
adc
adc
ss
ss
lds
inc
add
mov
fwait
cmc
shr
jge
lock
nop
popa
pusha
bound
(bad)
pop
sub
dec
lods
pop
push
mov
mov
out
lock
std
shl
push
iret
dec
ret
pop
nop
ror
test
ret
shl
adc
cdq
retf
jl
out
(bad)
jmp
jmp
sub
popf
hlt
aas
push
and
jp
cdq
push
xor
movs
stos
mov
fidivr
mov
sub
(bad)
add
mov
mov
gs
mov
and
adc
push
call
mov
mov
(bad)
fstp
nop
cmc
mov
jns
push
sub
in
imul
inc
or
mov
cmc
cmp
cmp
movs
adc
dec
aaa
xchg
ret
lahf
sbb
pop
mov
inc
add
test
stc
sub
fdivp
mov
jecxz
mov
jb
scas
or
fstp
lods
pop
stc
and
std
aaa
retf
fisttp
daa
stos
xor
sub
shl
popf
in
sbb
repz
je
inc
pusha
push
lds
inc
jo
sbb
xchg
pushf
imul
fdivr
push
mov
dec
std
repz
lods
xchg
inc
mov
arpl
mov
scas
cdq
mov
pop
jne
or
or
jb
jp
mov
mov
out
loop
sbb
xchg
idiv
dec
dec
push
inc
std
outs
mov
out
jbe
mov
inc
sti
das
mov
iret
imul
outs
lods
in
out
cmps
mov
push
ret
pop
shr
shr
cmp
test
ins
dec
aam
in
sbb
imul
into
mov
sahf
mov
addr16
test
push
jbe
pusha
push
idiv
mov
xor
adc
gs
and
leave
test
call
inc
jbe
jno
test
lods
adc
std
mov
xor
nop
imul
hlt
ror
pop
je
mov
test
int3
imul
cmc
lea
dec
sti
push
in
jae
sbb
jb
(bad)
mov
shr
or
fsub
push
push
ja
mov
int
mov
ins
shr
es
test
call
stos
mov
dec
mov
out
mov
push
repnz
aad
cmps
or
or
cld
xchg
mov
scas
push
adc
fs
and
enter
xchg
data16
cmc
cmp
xor
sub
dec
ret
xor
imul
pusha
out
mov
mov
xchg
push
adc
into
iret
mov
mov
stc
xchg
sbb
cld
push
daa
fisubr
add
in
fldz
cmps
inc
xchg
retf
enter
getsec
mov
adc
push
sbb
out
jnp
imul
mov
mov
mov
xor
iret
pop
inc
pop
add
push
stc
mov
(bad)
ret
rcl
and
sub
sub
jbe
mov
push
jge
ins
adc
(bad)
scas
pop
dec
jbe
shl
loope
sahf
mov
mov
mov
xor
shr
sbb
aas
mov
mov
out
jl
test
sub
mov
pop
repz
xor
out
push
xlat
push
xor
xchg
lods
dec
scas
lds
scas
shl
mov
and
out
popa
mov
(bad)
neg
dec
mov
mov
xor
loope
dec
push
push
iret
pop
out
xchg
jle
cld
rol
dec
dec
aas
je
jmp
out
ret
dec
and
push
push
mov
pushf
inc
outs
pop
fs
xchg
add
xchg
das
cld
xchg
out
inc
jle
push
adc
jg
(bad)
arpl
mov
add
imul
mov
lods
push
fbstp
pop
aaa
daa
pop
mov
jp
add
fist
out
jnp
loop
lods
icebp
push
add
mov
pop
ficom
add
test
or
icebp
ss
cmp
push
shr
imul
add
mov
pop
pop
jmp
out
nop
and
(bad)
ins
sar
aas
adc
mov
fiadd
stos
sti
pop
mov
cmps
mov
sub
outs
shr
jmp
pop
jg
icebp
push
es
pop
dec
mov
cmc
pushf
sub
les
push
xor
loope
into
clc
inc
hlt
pop
aas
bound
sbb
mov
jle
inc
or
push
inc
mov
mov
mov
add
push
xor
stc
adc
xchg
xchg
pop
fs
in
inc
push
mov
inc
mov
mov
inc
pop
push
iret
test
or
cmp
jb
push
inc
fistp
js
pusha
outs
gs
sub
call
dec
pop
fcmovnb
aad
sub
push
rcl
loop
jecxz
aad
repz
mov
mov
mov
pop
leave
jo
dec
call
es
stos
enter
nop
mov
sar
xlat
int3
hlt
or
xor
push
mov
pushf
inc
fst
and
nop
pop
pop
cli
daa
sub
ss
lds
sbb
lds
idiv
mov
(bad)
imul
aaa
dec
int3
call
test
mov
fstp
scas
movs
int3
hlt
add
das
xchg
mov
or
ja
movs
neg
call
adc
xchg
in
mov
sar
xlat
mov
stos
ficom
cmp
cmp
or
mov
into
cmps
or
enter
add
sbb
sub
inc
dec
jb
pop
enter
outs
sar
pop
nop
call
daa
and
mov
xchg
add
jg
stc
inc
daa
jno
pop
lods
inc
cmp
inc
jmp
fs
(bad)
call
cmp
ds
unpcklps
movs
sbb
lods
cwde
std
cmp
xor
xchg
ret
loop
or
mov
mov
data16
loop
ds
xchg
icebp
push
call
cmp
sar
pushf
lock
cdq
fld
test
add
in
out
sbb
push
lahf
xor
cmp
jo
or
jmp
sahf
mov
cmp
and
sbb
ds
sub
mov
jns
inc
mov
les
arpl
pop
bound
rcl
pop
repz
mov
mov
out
daa
cdq
(bad)
mov
mov
js
fwait
pop
jae
xchg
push
push
scas
and
jle
adc
leave
jp
imul
cdq
das
fxch
loop
push
hlt
cli
inc
inc
xchg
adc
cdq
hlt
aaa
add
jmp
neg
iret
jg
pop
adc
xchg
std
mov
fmul
or
xchg
cmp
push
cmp
or
out
sti
xor
push
repz
xor
imul
cmp
cmp
xchg
cmp
jb
iret
mov
test
or
push
push
fst
pop
adc
icebp
(bad)
popf
and
popf
mov
sub
stos
fcomp
mov
jo
into
push
dec
pop
xchg
mov
inc
(bad)
add
pop
bound
sub
sub
test
aad
pushf
sbb
push
sbb
push
int3
jnp
addr16
jg
cmp
dec
add
mov
xchg
fisub
outs
push
shr
cmp
lods
inc
cmp
test
xchg
fsubr
adc
bound
mov
xor
jne
jnp
adc
add
in
push
sbb
clc
dec
xchg
dec
out
popf
cmps
sub
sbb
xchg
mov
xor
jne
bound
lahf
xor
and
ficomp
pop
inc
ret
jno
jnp
outs
je
stos
test
popa
inc
or
inc
pop
cdq
lds
xchg
sbb
sub
cs
add
pop
sbb
add
aas
ror
daa
shl
fldenv
nop
aam
pusha
sbb
mov
into
mov
fwait
mov
xlat
fiadd
int
mov
jecxz
xchg
xchg
repz
gs
int
xchg
pop
in
jg
clc
xchg
xchg
cmp
mov
push
pop
xor
ds
cmp
push
pushf
out
scas
retf
xchg
sar
imul
popa
xlat
int3
mov
jae
xchg
or
stos
inc
sub
rcl
(bad)
pop
add
and
or
int3
pop
jmp
mov
out
xchg
sti
inc
(bad)
pop
dec
sbb
(bad)
out
in
shl
push
repz
add
movs
add
mov
ds
outs
mov
pop
mov
or
inc
call
and
pop
push
mov
xchg
dec
dec
sub
and
les
dec
cmp
mov
test
je
sub
xchg
adc
mov
push
stos
pushf
push
sbb
push
push
ins
(bad)
int3
pop
js
mov
les
sbb
fwait
outs
std
rcr
dec
daa
clc
pop
sbb
and
repnz
pop
sti
int
add
push
xor
pusha
sti
mov
fwait
sbb
pop
cmp
xor
aad
ror
pop
sub
shufps
outs
mov
fcom
dec
mov
jb
and
and
or
pop
jmp
scas
imul
ins
rcr
iret
jae
ja
arpl
data16
xor
ficomp
add
movs
pop
nop
(bad)
popa
in
xchg
pop
push
nop
inc
aam
jg
gs
xor
adc
mov
inc
in
lea
cdq
xchg
add
out
out
(bad)
mov
pop
xor
or
loop
xor
mov
xor
xor
adc
mul
push
aad
pop
xor
(bad)
jle
rcr
sub
scas
das
leave
xor
inc
mov
lods
int3
shl
mov
or
sub
not
cmp
adc
pop
arpl
dec
lock
xor
mov
(bad)
xor
mov
mov
add
jmp
mov
inc
arpl
or
jl
push
adc
xchg
mov
add
xor
jbe
aaa
mov
gs
add
mov
push
pop
mov
mov
(bad)
dec
cmp
push
mov
cmp
test
lahf
jno
cmp
sub
dec
push
and
mov
nop
dec
enter
cli
adc
dec
xor
ja
add
jbe
cmp
int
cs
mov
sti
clc
enter
sti
and
adc
mov
jo
and
sbb
imul
cmp
pushf
mov
push
cmp
cmc
dec
sub
hlt
or
jp
repnz
daa
loop
out
clc
dec
stos
xor
pop
dec
cmc
adc
cmp
pop
imul
push
pop
sbb
rcr
or
mov
mov
adc
test
jb
(bad)
jl
loope
jmp
inc
dec
call
and
(bad)
into
or
xlat
outs
out
mov
inc
dec
inc
ja
test
sbb
adc
test
push
pushf
cmc
push
mov
test
pop
movs
sbb
arpl
stos
rcr
fwait
je
jns
mov
sbb
adc
out
shr
sub
test
sbb
subps
rcl
xchg
xchg
mov
sub
call
mov
jbe
push
dec
jo
push
icebp
mov
rcr
sub
aaa
pop
mov
mov
push
cmc
lock
repnz
xor
and
pusha
addr16
inc
mov
xchg
dec
xchg
in
aad
and
sub
lea
ja
and
setne
cmp
push
mov
sbb
movs
adc
push
mov
push
dec
mov
add
jb
sub
retf
jmp
js
cmp
aad
push
sub
mov
std
jb
mov
cld
and
test
cdq
cmps
fnstenv
retf
int3
hlt
inc
scas
mov
fisttp
cwde
inc
inc
xor
xchg
mov
in
repz
pop
sahf
jno
or
dec
mov
loope
pop
xchg
and
xor
cmps
cmovg
aam
aad
sbb
xor
cmps
or
cmps
int3
dec
cmp
jg
mov
sbb
pop
add
imul
mov
int3
fwait
rcr
mov
shl
inc
shr
call
std
jmp
jle
mul
and
ja
retf
or
pushf
aaa
and
test
mov
mov
mov
es
mov
jnp
mov
cmp
push
loopne
rol
les
dec
jae
mov
shr
fisttp
test
push
lea
stos
mov
adc
push
es
retf
lahf
clc
scas
xor
repnz
push
daa
dec
shr
ja
mov
mov
call
cmp
and
cmp
aas
bound
sbb
dec
or
sub
inc
pop
sbb
(bad)
adc
sub
mov
cmp
add
movs
ficom
movs
into
xor
sub
sbb
sub
mov
mov
push
imul
mov
adc
pop
jnp
mov
aaa
mov
push
(bad)
aad
outs
movs
cmp
repz
rol
cmp
cmps
cmps
retf
fbld
or
cmp
sahf
repnz
mov
push
push
sbb
cmp
cli
or
jno
sbb
test
into
shl
ror
ins
sbb
lea
mov
and
sbb
sahf
repz
stos
jns
cmc
xor
fdivr
(bad)
mov
push
mov
pop
mov
push
xlat
and
imul
outs
sbb
dec
hlt
std
stc
jmp
leave
in
or
mov
pop
imul
xchg
push
pop
xor
dec
xchg
add
jne
inc
aaa
inc
hlt
cmp
js
mov
xor
fs
pusha
mov
xor
mov
mov
cmp
scas
call
sub
and
cmp
fisttp
cmp
xor
jo
add
ficomp
push
xchg
add
(bad)
xor
imul
ja
push
pop
sbb
push
mov
cmp
mov
lea
clc
add
mov
mov
jp
mov
dec
mov
cs
ds
data16
outs
or
mov
mov
(bad)
xor
mov
mov
inc
and
call
dec
loopne
mov
push
and
imul
jge
adc
dec
push
pop
and
rcl
push
je
mov
mov
pop
cmp
scas
and
mov
cwde
cmps
pushw
ss
mov
mov
cmc
out
jge
(bad)
dec
ja
popa
fist
lea
test
imul
sbb
xor
popf
gs
repnz
mov
cs
in
cmp
lds
xor
loop
ja
movs
mov
xchg
xor
test
pop
and
fwait
dec
adc
rcr
mov
jmp
in
das
stos
sub
pop
inc
pminsw
mov
jecxz
sar
loope
cmp
(bad)
mov
fst
dec
xchg
das
or
outs
and
xchg
xchg
mov
retf
and
pop
leave
mov
retf
pop
jle
mov
stos
jge
add
pop
shr
inc
and
pop
(bad)
fmul
dec
in
inc
xchg
add
mov
(bad)
call
arpl
or
mov
sub
sbb
lods
call
cli
lahf
inc
repz
test
xor
daa
mov
test
add
(bad)
cmp
lea
pop
xchg
ins
pop
in
out
adc
and
adc
mov
fild
xor
sbb
jp
iret
xchg
shl
adc
outs
aas
daa
cmps
jl
movs
jle
push
sub
adc
add
es
push
in
xor
lods
(bad)
stos
loope
pop
and
inc
shr
mov
mov
out
lahf
arpl
idiv
cdq
push
jmp
into
into
or
lea
fist
adc
call
pop
jnp
push
jle
jae
pop
repz
in
jle
outs
jmp
mov
popa
out
xor
inc
mov
mov
sub
adc
jbe
call
adc
push
ret
stc
push
scas
pop
cmp
mov
xor
inc
pushf
and
jne
cld
and
scas
das
out
shl
loope
dec
mov
ss
adc
mov
cmp
fst
push
fild
rcr
sbb
rol
int3
ss
(bad)
jmp
imul
sbb
les
mov
inc
in
stos
fs
pushf
ror
fbld
mov
xor
lock
or
jecxz
mov
fucomi
push
dec
imul
cmp
mov
mov
daa
call
nop
sub
adc
push
clc
cs
sahf
xchg
test
hlt
and
loope
xchg
xor
xchg
aam
pop
xor
or
rol
shl
stos
push
lea
inc
sub
and
sub
iret
inc
sbb
je
das
push
inc
mov
mov
pop
inc
call
jle
mov
xchg
and
ficomp
pop
jp
sub
loope
pop
jecxz
repz
sbb
xor
xchg
imul
jmp
jns
cmp
sar
xchg
call
cmp
jp
clc
xchg
into
ficom
and
add
sbb
div
hlt
in
test
mov
push
nop
js
jne
pusha
cmp
vpunpckldq
pop
stc
call
in
push
dec
cmp
retf
push
je
push
xchg
rcl
mov
add
popf
imul
sub
sbb
outs
stc
nop
loopne
mov
sbb
fisttp
or
in
mov
cmp
pop
mov
push
(bad)
movs
clc
dec
std
mov
adc
dec
pop
xchg
mov
push
scas
add
mov
(bad)
(bad)
push
sbb
sar
or
sbb
(bad)
xchg
outs
sbb
jo
adc
js
test
fidiv
adc
std
dec
imul
out
add
nop
fs
xchg
cmp
rol
jle
mov
pop
inc
cmp
nop
mov
xchg
jno
fdiv
or
in
ins
out
mov
leave
jae
clc
inc
jmp
shl
adc
sub
into
add
push
mov
lahf
and
mov
mov
fbstp
add
cmps
jmp
lods
iret
add
sbb
aad
push
imul
test
dec
in
imul
add
out
in
aaa
sub
std
outs
inc
fwait
xchg
mov
xchg
mov
sbb
stc
push
jge
push
aas
jge
js
movs
push
(bad)
out
mul
cmp
test
loopne
pop
sub
push
sahf
popf
cwde
rcr
mov
inc
shl
jbe
inc
out
add
fdivr
or
cmovp
pop
int3
ret
mov
dec
sbb
mov
xor
movs
test
dec
and
inc
jno
jo
test
pop
int
lods
mov
push
scas
jne
cli
sub
call
push
mov
bound
and
mov
ins
loopne
xchg
add
inc
fnstenv
mov
xlat
pop
dec
xlat
rol
fs
shl
mov
mov
daa
repnz
(bad)
addr16
enter
mov
fwait
imul
xor
(bad)
jo
push
and
xchg
call
rcr
or
jecxz
pop
leave
dec
xchg
jae
(bad)
dec
xor
in
cmps
std
outs
cmp
inc
sar
and
sbb
out
loope
lds
ja
test
cdq
add
pop
xchg
mov
aad
(bad)
rcr
push
inc
dec
sbb
(bad)
sbb
ret
xchg
mov
mov
fnstenv
jg
mov
js
js
(bad)
outs
and
cmp
jp
push
addr16
or
pop
shr
mov
dec
dec
retf
push
mov
adc
shr
movs
int
dec
cdq
lock
add
loopne
ret
inc
out
inc
(bad)
popa
jge
jmp
inc
jl
sbb
dec
inc
mul
pop
xor
sbb
xor
jl
cwde
call
cmp
loopne
pop
xchg
iret
xchg
xor
and
shr
dec
daa
adc
aad
dec
fs
add
mov
push
pop
popa
into
aaa
inc
fidivr
and
xchg
inc
push
ja
outs
dec
and
sbb
js
dec
fisttp
in
call
or
jae
push
mov
mov
out
mov
add
cld
and
or
js
shl
lea
or
cmp
mov
mov
xchg
jp
xchg
pop
lea
pop
mov
pop
ret
mov
mov
sub
iret
leave
add
xchg
fisttp
(bad)
aaa
and
fadd
fsubr
xor
jl
jns
ret
std
add
pop
sbb
inc
sbb
loope
retf
outs
test
jnp
add
loop
push
lods
jle
or
push
adc
jae
xchg
inc
outs
or
loopne
xchg
or
data16
pop
mov
and
scas
in
mov
and
(bad)
out
add
loope
lea
mov
sbb
mov
sub
mov
outs
mov
mov
test
lea
scas
sbb
xchg
push
stos
cmp
loope
push
mov
js
popa
mov
popa
pusha
pinsrw
dec
in
(bad)
mov
pusha
cli
or
movs
lds
jns
mov
imul
jne
mov
or
jno
pop
cld
sbb
add
lods
mov
test
les
out
mov
pop
loope
mov
fstp
xor
ins
inc
ja
scas
mov
data16
or
inc
div
mov
xor
aam
jge
mov
stos
and
cs
xor
xchg
repnz
test
arpl
out
xor
adc
adc
repnz
test
call
out
loop
xchg
add
push
add
je
xor
jne
(bad)
jmp
or
(bad)
pushf
sti
xlat
add
xchg
loop
lock
sbb
mov
scas
push
cs
aam
inc
fstp
mov
frstor
pop
and
mov
(bad)
xor
fs
and
cld
xor
jl
loope
and
rol
pop
inc
inc
dec
jne
movs
sti
shl
cmps
arpl
lods
es
jg
ss
cdq
hlt
adc
lods
daa
test
sub
cmp
fwait
xor
inc
dec
into
sub
or
mov
mov
push
call
repz
cwde
out
cmp
(bad)
repnz
bound
xchg
in
sbb
push
push
ficom
iret
or
in
inc
cli
in
jno
pop
je
pop
mov
jbe
jp
xchg
cmc
and
sbb
pop
mov
mov
jge
fisttp
test
dec
ror
mov
mov
cmp
ficom
rol
and
outs
dec
mov
mov
mov
movs
outs
imul
repnz
arpl
test
mov
inc
scas
mov
sub
(bad)
cli
inc
and
adc
mov
xor
sub
ret
mov
and
ja
xchg
ds
pop
into
or
push
div
cmp
fidiv
mov
xor
fbstp
xchg
sahf
fbld
mov
xchg
sub
and
cmp
ss
gs
jnp
adc
mov
pop
out
jmp
and
cmp
mov
ja
pop
shr
aad
je
sahf
lods
push
(bad)
pop
(bad)
cmps
sub
add
fld
cmp
pop
cmp
mov
cs
or
mov
mov
and
pop
repz
ds
xchg
icebp
jo
or
mov
mov
(bad)
outs
sbb
sub
push
sbb
call
dec
shl
sti
mov
xchg
push
jmp
lds
mov
or
dec
in
sub
scas
xchg
sbb
lahf
pop
mov
cmp
inc
scas
enter
movs
sub
adc
mov
mov
hlt
cmps
lods
sti
jno
movs
test
mov
jge
(bad)
cmp
xchg
cmp
push
or
cmps
lods
lods
popf
(bad)
aad
mov
push
cmp
fidiv
mov
fwait
inc
fs
mov
pop
hlt
rcr
and
call
adc
dec
xchg
mov
mov
cmp
test
add
add
sub
inc
jge
add
fnstsw
inc
inc
dec
cli
add
jb
adc
ja
sub
inc
test
(bad)
jle
das
lods
mov
inc
adc
inc
lea
pop
jg
aaa
or
xchg
pop
or
pop
mov
add
into
pop
or
je
sub
je
ret
cmps
jo
scas
dec
nop
jge
jp
inc
imul
pop
xchg
jnp
fidivr
shl
adc
xor
aaa
test
dec
dec
lods
movs
cmp
in
jns
push
icebp
stos
repz
mov
mov
xchg
xchg
xor
xor
pop
jne
add
mul
inc
mov
pop
or
dec
pop
xchg
repz
push
lock
ins
push
or
cmc
push
sub
push
mov
add
addr16
in
ins
outs
or
sub
pop
popf
pop
or
or
push
cwde
(bad)
or
fist
add
test
sub
mov
movs
lock
or
sub
dec
(bad)
push
test
push
pop
icebp
cmp
push
aaa
jp
push
in
popf
and
cmc
sbb
fdivr
sub
inc
(bad)
ins
es
jne
(bad)
and
or
fwait
cmps
push
cmps
stc
imul
dec
and
jg
cdq
mov
or
mov
rol
test
not
mov
mov
fnstsw
std
xchg
repz
push
ins
jmp
cld
cwde
push
add
mov
scas
cmp
cmps
inc
pop
mov
test
ret
lods
pop
stc
dec
inc
mov
out
xchg
adc
int3
cmps
mov
imul
mov
mov
rcr
cwde
fsubr
imul
and
cmp
mov
pop
dec
cmps
mov
pop
add
jbe
iret
int
push
push
inc
sub
or
dec
jg
fldenv
xchg
cmp
push
stos
xchg
adc
xchg
fwait
dec
stos
loop
inc
mov
in
dec
dec
xchg
lock
cld
inc
std
(bad)
out
push
mov
jmp
cmp
stos
cmps
int3
sti
cld
jno
mov
test
bound
pop
xchg
jae
cmp
aam
cmps
stos
sbb
jb
nop
aas
(bad)
fnstsw
std
inc
in
sbb
int3
std
push
add
jmp
pop
outs
cwde
daa
lods
add
jle
test
mov
or
inc
inc
push
dec
mov
data16
call
and
push
jne
sahf
xlat
jo
sub
data16
mov
push
nop
sub
fcmovbe
fnstcw
cmp
push
push
cmp
out
lods
sub
scas
mov
jmp
xchg
sbb
stc
pusha
mov
xlat
ins
leave
je
push
cdq
nop
scas
inc
sti
and
push
pop
cli
in
ret
gs
aas
adc
shl
call
mov
jno
loope
ret
dec
mov
pushf
inc
arpl
dec
xor
jmp
jo
ret
pop
daa
pop
retf
add
and
jo
test
mov
(bad)
mov
scas
add
repnz
jmp
sbb
adc
fdivp
cmp
enter
lahf
(bad)
lds
pusha
xchg
jno
out
icebp
xor
adc
push
jecxz
sti
or
push
push
sbb
mov
or
ficom
repz
int3
rol
xchg
jg
ss
mov
cmp
rol
mov
in
pushf
int3
cs
scas
xor
hlt
pushf
movs
cmc
enter
(bad)
out
outs
or
inc
mov
scas
and
cmp
es
pop
and
or
pushf
test
pop
sbb
or
fcmovnu
cmps
data16
sbb
mov
pop
xor
ror
mov
push
sbb
mov
repnz
lea
jmp
(bad)
pop
imul
les
jne
fstp
mov
loopne
pop
mov
inc
dec
sub
and
mov
clc
out
or
or
or
out
in
sbb
sub
bnd
shl
sar
jae
into
add
push
push
cwde
rcl
cli
test
add
cmps
imul
scas
cld
mov
ret
sub
iret
pusha
jo
or
dec
dec
inc
push
rcr
add
mov
inc
ror
ret
mov
test
jo
push
cmp
mov
ss
push
inc
punpcklwd
sub
pop
test
fisub
mov
test
mov
scas
inc
je
pop
ja
mov
mov
inc
inc
add
inc
and
mov
sub
sete
sub
fisub
or
rol
aad
mov
cmp
jns
mov
daa
aas
enter
fadd
sbb
sbb
dec
das
dec
xchg
dec
mov
cmc
mov
add
pop
jl
scas
cmps
push
cmp
push
les
jmp
(bad)
and
or
mul
lahf
popa
sbb
mov
stos
adc
repnz
and
loope
sub
jae
pop
inc
hlt
add
adc
dec
jg
(bad)
std
adc
rcr
cdq
imul
ins
pop
ds
in
mov
js
push
and
add
or
enter
xlat
jp
sbb
repz
jb
jle
dec
fild
add
hlt
ss
sti
dec
pop
jne
out
mov
repz
je
pop
in
push
(bad)
jge
addr16
and
or
repz
shr
mov
call
pop
xlat
gs
jb
dec
add
mov
hlt
jmp
faddp
cmp
and
ja
ins
lods
repz
imul
xor
dec
and
inc
push
jle
dec
sbb
mov
int
hlt
hlt
ror
cmps
pop
or
dec
dec
and
fsubr
clc
sar
fs
shl
cdq
cli
mov
jne
pop
jecxz
clc
or
pop
shl
and
mov
out
mov
mov
dec
add
and
push
and
cmp
push
jle
pop
cmp
adc
or
std
mov
xor
cdq
das
popf
jno
pop
stos
test
and
dec
fisub
cmp
xchg
adc
int3
dec
mov
dec
or
call
mov
inc
call
jp
adc
cwde
ins
or
mov
(bad)
xchg
pop
push
adc
xchg
int3
cmp
pop
scas
pop
ret
jp
and
(bad)
sbb
or
cmp
je
movs
xchg
or
inc
dec
nop
pushf
cwde
inc
dec
hlt
mov
sub
xor
aad
inc
in
lahf
ret
cli
popf
mov
rcl
adc
in
pop
movs
add
or
xchg
dec
nop
adc
daa
stc
shr
push
(bad)
and
fiadd
popf
ret
sbb
dec
jp
ss
inc
out
sbb
aad
mov
ror
sbb
push
lds
xor
adc
adc
sahf
mov
adc
ins
adc
jg
rol
test
repnz
sbb
mov
jp
jecxz
in
clc
aad
test
pop
dec
and
retf
ror
lock
aas
cli
dec
pop
mov
in
(bad)
ds
pop
aas
sub
xor
adc
mov
aas
pushf
call
jo
add
leave
(bad)
mov
jmp
mov
mov
imul
ja
int3
or
jle
mov
out
daa
icebp
movs
sti
pusha
push
in
mov
scas
adc
and
inc
call
test
rcl
hlt
xchg
sbb
jge
iret
ins
icebp
jne
jg
out
xchg
cmc
in
ficomp
ins
(bad)
mov
imul
or
mov
jecxz
fisttp
jmp
std
xchg
sub
mov
mov
cli
fst
sub
cdq
in
and
lahf
sub
popa
xor
and
push
mov
xor
lahf
int
cmp
add
pop
lods
push
add
scas
and
mov
je
jns
arpl
push
retf
fnstcw
or
aam
jg
cmps
enter
enter
bound
pusha
or
rcr
movs
mov
out
gs
hlt
mov
cwde
stc
jecxz
jno
sub
mov
lock
movs
ja
jl
cmp
and
jmp
neg
out
add
mov
cmp
scas
jg
test
test
movs
adc
stos
iret
data16
sbb
in
or
shl
int
xchg
dec
push
jl
out
outs
ja
stos
adc
mov
sub
lds
cs
cmp
imul
test
xchg
movs
adc
and
fistp
xor
scas
add
mov
adc
sbb
loop
rcr
xchg
fdivr
bnd
lock
loop
fs
and
xchg
cmps
enter
cmp
push
movs
rol
xor
mov
(bad)
fs
sbb
or
and
xlat
push
clc
dec
fldenv
(bad)
and
xchg
sar
jno
fst
xchg
iret
cmc
gs
xor
adc
shl
cmps
loopne
int
neg
push
mov
push
aaa
adc
sub
sbb
fwait
shr
adc
mov
jl
loope
adc
imul
fistp
loopne
addr16
add
xchg
data16
loop
sbb
ret
sub
push
jnp
push
pop
sub
sub
mov
fist
mov
push
xchg
lahf
sbb
in
mov
cmp
in
jle
or
push
jge
jnp
dec
das
pop
pop
int
sub
in
loopne
ja
add
out
das
xor
or
adc
fdiv
push
inc
jno
mov
add
mov
pushf
bound
dec
push
cmc
sub
dec
hlt
cli
mov
hlt
sub
fistp
adc
retf
call
test
int
stos
adc
jge
je
jno
aas
nop
retf
push
fmul
fdivr
jp
ret
enter
das
mov
outs
adc
stc
scas
jge
movs
push
setl
pop
jl
mov
sbb
lds
ins
push
sub
shl
out
scas
sbb
fcom
pushf
push
outs
in
repnz
lahf
cmp
mov
idiv
xchg
and
mov
std
into
comiss
test
mov
inc
fimul
sbb
or
pusha
outs
into
lock
ret
gs
shl
mov
cmp
in
adc
test
ins
jle
xchg
int3
mov
lea
bswap
mov
sti
int
(bad)
cld
cli
inc
pop
jns
jne
xor
enter
addr16
mov
shr
jmp
retf
ret
add
jle
jo
sbb
es
pop
in
das
imul
daa
add
(bad)
rol
hlt
mov
into
mov
inc
push
inc
ss
and
jae
int3
xor
out
cli
mov
int
and
inc
mov
and
and
inc
mov
mov
retf
mov
push
pop
dec
jle
js
lahf
cmc
(bad)
push
into
ret
into
int
out
pop
in
push
cmps
push
push
pop
call
adc
mov
pop
das
int3
add
dec
adc
nop
jbe
xor
add
out
or
jae
push
cmp
gs
sub
in
lods
movs
xor
lods
test
or
lea
nop
int
(bad)
jmp
adc
adc
pop
scas
adc
es
mov
jmp
push
std
imul
mov
rol
inc
push
outs
pop
xor
shl
push
aad
jg
sbb
cli
out
jb
shr
in
sub
mov
popf
jg
xor
push
xor
arpl
xchg
push
and
in
dec
lds
jle
(bad)
xor
jno
fs
mov
pop
mov
add
idiv
mov
ins
cmc
jle
adc
gs
sbb
cmp
push
cmp
inc
push
fs
adc
(bad)
push
xchg
aam
fucomi
sti
pop
fs
push
push
xor
cdq
lock
rcl
inc
push
fdivr
sbb
ja
retf
dec
call
lock
push
mov
sub
pushf
and
jo
mov
call
fidiv
xor
sbb
ja
xlat
or
in
push
pop
lock
fwait
imul
shl
in
sbb
and
inc
bound
je
lahf
cmp
jns
add
xlat
popf
mov
stos
pop
scas
sub
aas
out
push
add
jae
mov
cmp
sar
fwait
movs
out
or
imul
mov
sub
sbb
call
sub
sbb
movs
inc
(bad)
xor
adc
jne
or
xchg
mov
out
adc
dec
ror
sub
aam
into
mov
in
and
outs
dec
adc
push
ds
fstp
das
add
lods
rcr
lea
jbe
in
add
lea
imul
inc
add
mov
inc
fsubr
pop
jp
rol
add
mov
popf
mov
inc
je
xchg
mov
mov
and
push
jno
mov
cmps
ds
mov
push
cmp
test
gs
add
fbld
out
in
jmp
jno
jmp
es
in
jb
jno
lods
push
ss
(bad)
loopne
test
dec
mov
scas
xchg
ret
add
pusha
add
in
and
and
jp
mov
xchg
xadd
(bad)
cmp
jbe
cmp
fimul
inc
mov
out
adc
xor
sub
sti
aas
fidiv
ret
lea
hlt
cmps
in
mov
ins
mov
std
push
mov
js
push
sub
cdq
in
loopne
or
cmp
aad
mov
movs
in
or
xor
cli
(bad)
in
inc
cmp
mov
aam
and
out
cli
xchg
fild
cmp
sub
fidivr
das
(bad)
sub
shr
xchg
jnp
sbb
inc
fild
push
sub
retf
jecxz
retf
jno
sub
int3
ss
or
pop
pop
shr
fwait
mov
popf
mov
sub
adc
dec
pop
pop
aaa
fdivr
sub
retf
mov
shl
jp
jnp
mov
sub
cmc
add
push
repnz
or
cmp
mov
cmps
mov
es
inc
fwait
rcl
mov
repz
test
xchg
mov
sahf
mov
rcl
cmp
fmul
cmps
cmp
ror
test
fcomp
xchg
test
call
pushf
jle
sub
movs
mov
push
out
lock
mov
mov
mov
stos
(bad)
inc
sub
sub
xchg
sub
sub
sahf
jno
test
jge
add
out
push
add
sub
lods
addr16
stos
lds
sub
or
movs
not
pusha
test
scas
leave
addr16
xchg
aam
mul
or
mov
jp
xchg
cli
or
in
pop
hlt
and
test
xor
sti
popf
std
inc
js
mov
std
mov
test
nop
fbld
mov
ret
ficomp
(bad)
dec
leave
sbb
pop
hlt
aas
cmp
add
push
sub
cmps
dec
bound
fidiv
fsubrp
ss
mov
mov
retf
hlt
int3
in
dec
arpl
mov
mov
mov
adc
push
fcom
sbb
cwde
push
cmc
push
sub
xchg
mov
jmp
mov
and
jb
dec
add
sar
scas
ret
inc
(bad)
out
cli
sbb
dec
and
lods
add
(bad)
adc
or
cld
bound
or
xor
mov
push
dec
mov
clc
repnz
jecxz
aaa
or
fimul
fistp
sub
lods
sar
ret
loope
popf
clc
test
jbe
jae
data16
dec
sbb
bound
mov
fidivr
clc
jns
shl
jns
mov
cmps
cmp
aad
xchg
inc
dec
out
push
ret
or
inc
mov
pushf
inc
cmp
enter
iret
fadd
aas
xchg
jmp
cmps
stos
icebp
pop
movs
fnsave
and
dec
bnd
(bad)
mov
les
in
js
(bad)
cmp
jae
(bad)
cmp
and
lock
xchg
idiv
int3
(bad)
out
lea
jnp
jnp
cmp
ret
jne
loope
adc
ja
(bad)
xchg
xor
loopne
mov
dec
sub
cmp
lds
push
and
loopne
adc
adc
(bad)
xchg
rcr
jmp
sti
pop
inc
adc
nop
scas
loopne
jnp
sahf
add
and
test
out
aam
les
xchg
in
mov
(bad)
stc
sub
das
sub
adc
xor
adc
inc
icebp
and
pop
retf
int3
sbb
repnz
mov
push
pop
jb
scas
add
mov
pop
xchg
mov
inc
repnz
jmp
(bad)
or
mov
aas
mov
add
inc
pop
mov
cmp
sub
pop
loope
iret
outs
popf
test
inc
xlat
hlt
test
neg
sbb
into
popa
jecxz
std
sub
inc
inc
pop
adc
popa
xchg
loop
and
in
das
enter
xor
xor
in
jmp
icebp
and
jle
push
std
adc
sbb
mov
sub
and
imul
sub
cmp
scas
and
mov
call
retf
neg
ror
adc
add
dec
mov
inc
retf
mov
xchg
mov
jno
dec
test
cmp
not
mov
mov
ret
shl
push
pop
lahf
les
mov
je
sbb
or
cwde
loope
(bad)
popf
jecxz
sbb
gs
daa
xor
stos
les
xor
cmc
int
mov
fs
mov
pop
pop
pop
mov
in
out
push
push
mov
out
pop
xchg
loop
xor
in
jb
push
mov
scas
cmps
xor
mov
xor
inc
cdq
add
and
test
add
sub
cmp
lock
and
test
ret
call
ss
cmps
into
or
add
stos
sbb
or
arpl
dec
stc
inc
inc
mov
jb
xor
pop
jmp
shr
sub
mov
retf
aad
dec
mov
nop
mov
stos
xor
and
mov
mov
leave
push
push
sbb
pop
mov
mov
push
jmp
add
cmp
and
outs
inc
shl
nop
sub
mov
add
mov
dec
das
test
add
scas
rcr
add
loop
repnz
mov
add
les
fwait
cmp
clc
xlat
sub
(bad)
xchg
push
jecxz
add
fsubr
ins
dec
imul
retf
(bad)
inc
shl
in
sub
fdivr
pop
mov
push
add
push
mov
and
mov
rcl
cmp
shl
add
jae
sub
jg
adc
push
add
popf
sahf
dec
cmp
jecxz
adc
je
mov
mov
and
adc
cmp
inc
add
ins
leave
sub
inc
xor
sahf
fld
imul
mov
lock
cwde
call
icebp
jnp
push
pcmpeqw
daa
and
jmp
sahf
push
cmp
out
aas
pop
fisub
outs
cmps
adc
sub
lods
jecxz
loop
jo
jne
jbe
sub
frstor
les
jmp
test
rol
ins
ret
fbld
push
sub
scas
nop
enter
out
pop
popf
mov
or
mov
rcr
daa
and
xchg
nop
mov
in
movs
pop
imul
cli
in
aad
fisub
imul
(bad)
pushf
mov
(bad)
iret
mov
mov
sbb
adc
nop
popa
aaa
pop
out
add
fnsave
pop
sub
cld
test
push
lock
cli
or
push
bound
mov
xchg
ficom
jl
test
test
jo
rol
out
int3
jl
mov
cmps
cwde
int3
into
push
loopne
cmp
add
inc
or
sti
cmp
sbb
test
int3
shl
test
enter
push
mov
push
shr
xchg
dec
sahf
pop
push
sub
cmp
lods
pop
fbstp
dec
inc
mov
enter
xor
mov
in
push
mov
fwait
lods
sub
out
adc
jbe
popa
xchg
pop
jg
fnstcw
sub
jmp
repnz
sub
inc
and
inc
mov
pop
retf
cmc
nop
(bad)
push
lock
mov
cmps
cmp
push
and
push
cmp
inc
cmp
or
lods
pop
ret
ins
lods
pop
cmps
lds
dec
push
push
out
pop
loope
js
adc
push
icebp
xchg
retf
xor
push
jle
fdivr
adc
jo
jmp
push
add
adc
pop
sbb
dec
loope
and
push
out
enter
dec
dec
mov
lds
iret
cmp
cld
repnz
aaa
dec
out
mov
(bad)
add
leave
out
jmp
mov
cmp
cmc
xor
cmp
es
ins
pop
lods
push
inc
pop
pop
jecxz
mov
xchg
xchg
imul
dec
pop
cdq
ins
cmp
stos
mov
cmp
mov
xor
push
or
cli
pushf
idiv
in
mov
xor
push
mov
mov
jne
lock
pop
aaa
xor
mov
mov
mov
mov
push
pop
es
stc
adc
iret
fsub
vpandd
data16
xor
pusha
mov
shl
push
and
push
adc
call
adc
or
into
iret
mov
pushf
cmp
adc
pusha
into
jns
push
and
push
aam
call
aam
pop
jmp
sbb
cmp
enter
and
lock
xchg
dec
in
jb
(bad)
fdivp
mov
das
das
shl
cdq
(bad)
aas
and
lea
movs
ror
adc
and
loopne
push
push
mov
aad
fwait
mov
add
lods
inc
xor
(bad)
jmp
lods
cld
rcr
lods
mov
mov
jl
dec
sbb
adc
cwde
in
sar
in
jae
inc
inc
test
jmp
(bad)
addr16
mov
jg
fcom
stc
xchg
dec
cmp
xchg
cld
mov
pop
mov
add
adc
aaa
dec
rcl
add
aam
cmp
cld
ins
rcr
add
out
mov
adc
inc
xor
pop
call
ds
add
push
and
mov
ja
jecxz
sbb
sbb
jle
test
adc
mov
jmp
fldz
dec
mov
inc
lds
scas
sbb
aad
dec
cmc
pop
pop
(bad)
mov
dec
mov
std
and
pop
(bad)
jg
cwde
clc
pop
jl
mov
arpl
mov
pop
sub
(bad)
push
aam
xor
or
pushf
xchg
in
outs
cs
mov
jp
dec
popa
arpl
daa
xor
push
(bad)
push
xlat
sbb
outs
scas
mov
loope
sbb
dec
mov
xor
mov
repz
xor
loop
fisttp
int3
and
fadd
jno
inc
xor
adc
push
push
jnp
dec
push
std
add
(bad)
nop
int3
pop
cld
or
retf
ds
sub
add
lock
jb
loopne
sub
and
push
cmp
mov
dec
ss
(bad)
pop
aaa
fdivr
xlat
adc
sub
sub
fwait
jno
xchg
and
sub
xchg
xchg
cmovp
pop
pop
bound
xor
in
cmp
(bad)
cmps
mov
das
xlat
cmp
jb
mov
ds
adc
sub
lahf
lock
sub
cmp
fidivr
add
out
sub
inc
sub
aam
imul
pop
enter
xchg
je
call
int
pop
inc
inc
pop
and
aaa
rcl
sar
aas
mov
adc
test
mov
lea
cmps
cdq
cmps
push
push
adc
rcr
ficomp
call
daa
movs
cdq
inc
jp
data16
mov
dec
push
hlt
jne
mov
mov
lods
adc
cmp
call
fnstenv
push
inc
pop
mov
xchg
jmp
pop
cmc
movlps
xchg
pusha
jle
out
sbb
fisubr
arpl
repz
(bad)
repnz
or
sbb
sbb
(bad)
jb
mov
jp
jns
movs
jle
aas
mov
mov
ror
lea
fisttp
mov
in
and
jmp
cwde
daa
pop
addr16
push
int
mov
neg
lds
(bad)
lock
ins
int
mov
ror
dec
sub
xchg
lock
mov
mov
xchg
(bad)
in
mov
cmps
stos
mov
mov
or
xchg
(bad)
mov
(bad)
jmp
ror
call
cmp
call
repz
shr
xor
xchg
in
cmp
aaa
jge
outs
xchg
and
xchg
mov
jbe
mov
add
div
int3
retf
cmp
or
add
sbb
outs
lods
mov
mov
mov
out
pop
aas
mov
loope
ins
pop
sbb
dec
push
push
push
outs
call
lods
imul
sbb
(bad)
mov
pop
addr16
ja
pop
(bad)
sti
lods
arpl
out
loopne
adc
adc
mov
std
mov
adc
fisub
sbb
and
mov
xchg
jns
or
pop
inc
enter
test
aas
lods
xor
sbb
test
jnp
shl
neg
cmp
loopne
fild
out
jns
fstp
mov
outs
adc
xchg
test
xor
mov
push
psrlq
int
mov
push
js
pop
mov
sub
and
mov
fimul
cmps
pop
call
fadd
mov
dec
dec
xor
imul
mov
or
sub
scas
xchg
out
sub
jb
imul
push
aaa
jmp
aad
push
dec
push
mov
push
(bad)
call
jne
jmp
jns
aam
(bad)
(bad)
in
mov
xchg
mov
cmp
loop
add
fstp
stc
jnp
enter
pop
shl
xor
(bad)
aaa
dec
fld
lods
or
stos
jb
push
mov
mov
lods
ss
lea
dec
jle
stos
sub
inc
cmp
(bad)
or
scas
sub
rcr
enter
or
cwde
in
shr
test
pop
xor
mov
mov
sub
add
fisttp
ret
popa
mov
inc
cdq
aam
pop
mov
dec
push
cmp
and
(bad)
cmp
shr
mov
out
jno
inc
sti
or
dec
ss
fs
sahf
(bad)
push
in
jecxz
dec
adc
enter
push
les
sub
repz
jl
mov
(bad)
cmp
scas
mov
adc
dec
mov
inc
add
mov
jmp
enter
fld
js
pop
pop
out
push
loope
fbstp
cmps
call
sub
xor
dec
sbb
stos
std
(bad)
out
push
inc
pop
movs
pop
vmread
test
sub
fs
imul
and
or
ror
adc
push
jecxz
or
fs
fs
cmp
jecxz
sub
sti
and
push
pop
rcl
jo
sub
es
or
mov
mov
jnp
xchg
mov
shr
test
aam
std
in
and
repnz
in
xchg
fcomp
out
dec
outs
(bad)
stc
es
pop
dec
aad
dec
inc
je
(bad)
pop
lds
lds
je
jle
sbb
sub
fbstp
loopne
push
ds
xor
xchg
push
addr16
xchg
sub
mov
mov
sbb
shr
es
shl
enter
mov
jle
rcl
cmp
loopne
(bad)
ins
mov
arpl
jns
mov
mov
retf
stos
stos
pop
mov
mov
jbe
inc
clc
pop
icebp
repz
mov
cli
int
mov
dec
adc
xchg
jecxz
mov
div
jne
in
mov
xor
push
xchg
js
fwait
push
pop
and
fstp
int
shl
aam
fdivr
inc
pusha
loop
jbe
fnstcw
sbb
dec
leave
out
ins
mov
push
pop
lahf
jnp
jno
fild
rcl
add
push
cmp
xchg
mov
inc
daa
test
push
dec
in
lahf
cmp
and
(bad)
fdecstp
(bad)
sbb
cmps
and
rol
sahf
xor
imul
push
mov
rol
mov
(bad)
cmc
push
or
retf
sub
lods
dec
adc
movs
call
add
jmp
cmc
pop
(bad)
adc
jle
adc
push
mov
(bad)
pushf
jns
cmp
cs
cmp
(bad)
push
setp
mov
jae
repnz
add
push
mov
dec
cdq
(bad)
adc
sbb
xchg
fdisi(8087
fcomp
push
daa
push
sbb
ds
addr16
cmp
inc
jg
mov
inc
mov
dec
sub
imul
adc
jo
rcl
jno
call
idiv
sbb
test
mov
aam
aad
mov
mov
inc
dec
dec
icebp
iret
popa
mov
push
adc
arpl
mov
mov
cli
jecxz
jnp
retf
(bad)
sahf
call
adc
add
mov
lods
jge
loop
jno
and
jbe
inc
mov
inc
aas
mov
into
pusha
setns
jp
ins
sub
sbb
mov
shl
in
mov
repz
and
mov
nop
jge
fsub
out
lahf
push
ja
mov
jmp
int
loopne
dec
outs
ja
icebp
retf
mov
dec
jl
jno
inc
aas
ins
ja
mov
cmps
fadd
repz
in
call
mov
jns
sub
daa
mov
ins
jecxz
add
or
js
loop
mov
cmp
cs
pop
aad
sbb
add
ror
cmps
push
es
ins
test
in
psubq
push
xor
inc
in
std
in
stc
(bad)
ror
aas
dec
mov
add
and
arpl
xchg
leave
cmp
shr
jp
cmp
fidivr
and
sti
and
mov
call
mov
mov
mov
aas
sbb
movs
nop
dec
cli
jns
test
add
(bad)
(bad)
fld
inc
inc
les
das
cld
mov
fs
mov
mov
aad
icebp
xor
mov
mov
mov
mov
add
mov
sbb
ja
shl
xchg
adc
call
(bad)
xchg
call
mov
mov
mov
mov
push
mov
stos
add
push
movs
sub
mov
pusha
xchg
leave
dec
lahf
cld
push
fisttp
repz
adc
aam
mov
pop
inc
jnp
xor
cs
xchg
sbb
cld
xor
cmp
mov
(bad)
xor
(bad)
xor
add
xchg
ret
push
push
inc
ffree
sti
jp
or
sar
sbb
std
int
cli
jno
pop
mov
stc
ret
fnstcw
sub
mov
jns
(bad)
mov
daa
lds
clc
jb
cmp
into
dec
xor
push
xor
das
jb
sub
jno
inc
nop
int
jle
retf
sbb
repnz
and
in
mov
call
or
imul
jb
sub
xchg
stos
mov
jb
adc
jmp
jbe
aam
push
enter
jge
mov
sbb
jo
cwde
mov
out
sbb
stos
mov
dec
fld
sub
stc
jle
lock
push
int
cmp
pushf
mov
popa
(bad)
pop
int3
sbb
mov
retf
sbb
cmp
shl
add
add
sbb
dec
sbb
les
gs
ficom
jge
cs
pushf
xchg
test
fist
pusha
pop
pop
mov
test
mul
(bad)
xchg
lds
xchg
cmp
aaa
aam
push
cmps
xlat
dec
jge
int3
inc
cwde
sub
or
stos
pusha
mov
xor
add
pop
or
inc
fincstp
adc
outs
cmp
jnp
imul
xchg
and
add
popf
xchg
pop
pop
nop
scas
cmp
xlat
popa
xor
fnsave
in
and
fisubr
pop
mov
inc
data16
mov
sbb
clc
(bad)
fwait
mov
pshufw
movs
lods
and
jnp
push
mov
(bad)
les
xchg
addr16
js
add
mov
jmp
icebp
dec
jbe
xchg
or
pop
shl
jp
shr
int3
in
xchg
jg
into
cld
jb
cmp
add
mov
xchg
and
int3
jae
nop
ins
add
sub
ret
cmps
popf
mov
inc
das
adc
dec
or
xor
(bad)
out
fcmovb
jl
mov
call
push
stos
lods
mov
fcomp
push
data16
fs
add
popa
stos
fcmovnu
jno
in
aad
jge
xchg
daa
mov
jmp
add
retf
cmps
popf
and
sbb
test
repnz
xchg
xchg
movs
pop
lds
push
fisubr
dec
inc
jp
add
lock
fs
in
call
fsubr
add
std
nop
pop
cmp
inc
imul
data16
xor
xor
ja
mov
adc
(bad)
(bad)
pop
jmp
mul
scas
jle
sub
shr
jno
lock
or
fnsave
sbb
dec
cmp
mov
bound
lea
sub
sub
rcr
js
and
popf
aaa
or
mov
jne
not
lods
push
push
retf
enter
cmc
outs
jns
sbb
div
fwait
xchg
out
pop
xchg
mov
outs
adc
sbb
or
imul
push
adc
rcl
ss
jo
push
(bad)
in
mov
es
inc
fistp
es
cld
ret
pop
cmp
jbe
sub
std
push
fiadd
xchg
inc
mov
rcr
call
inc
inc
adc
ret
fbld
dec
retf
rcl
xchg
bound
ds
(bad)
std
hlt
into
cmp
dec
add
mov
dec
dec
dec
cmp
xor
loop
fistp
lahf
push
(bad)
aam
jl
sbb
jge
je
xchg
dec
push
pop
mov
(bad)
das
stos
push
xor
ss
cmp
repnz
dec
and
(bad)
jmp
(bad)
add
mov
out
sub
cmc
lods
aad
push
lds
stos
dec
xchg
add
xor
mov
sub
movs
jmp
(bad)
div
mov
sbb
es
xchg
jnp
sub
jg
push
ja
ficom
mov
inc
mov
inc
push
loope
mov
xor
xlat
inc
cdq
or
(bad)
mov
stc
and
push
retf
int
jmp
stc
out
aas
nop
loopne
out
or
jnp
gs
mov
retf
xchg
and
and
fsubr
dec
bnd
in
and
xchg
xchg
jle
mov
fwait
jo
iret
call
pop
inc
mov
iret
enter
xchg
imul
clc
dec
cmp
aas
rcl
stos
inc
neg
fld
xchg
dec
jp
out
pop
les
dec
dec
imul
out
sub
enter
mov
sbb
ja
inc
push
mov
icebp
imul
shl
push
fidiv
sub
jno
sbb
ins
push
loop
adc
out
jne
xchg
push
jmp
and
mov
and
aad
xor
cli
sbb
outs
rcl
mov
dec
test
jnp
(bad)
jecxz
retf
lods
and
xchg
aad
in
inc
pop
or
adc
gs
ja
cli
mov
je
inc
pop
test
mov
mov
mov
xor
inc
test
dec
bound
nop
xor
fild
mov
mov
push
mov
call
shl
jnp
ret
mov
ss
jle
stos
cli
jecxz
or
iret
jg
sti
(bad)
sub
idiv
cmp
jle
sti
or
nop
(bad)
xchg
out
mov
dec
out
add
inc
sub
mov
bswap
outs
jb
xor
sbb
push
lahf
xor
pop
push
xor
jb
jb
mov
in
sub
mov
cmp
mov
and
add
imul
inc
xchg
and
sar
(bad)
add
(bad)
lea
jns
xor
outs
inc
test
jno
outs
cmp
shr
outs
jo
add
jg
fnstcw
fld
repnz
retf
mov
sub
out
rol
jg
sub
std
in
call
lods
rol
jmp
rol
out
retf
outs
fisub
push
sub
sbb
sub
push
push
xor
push
add
or
xor
in
(bad)
fiadd
push
xlat
shr
mov
or
mov
inc
cdq
je
or
mov
cdq
jae
xchg
jmp
jg
add
scas
push
cmp
fldz
jmp
adc
dec
mov
rcr
mov
sub
loope
jno
dec
adc
inc
ds
jl
outs
ds
enter
retf
adc
push
movs
push
or
add
mov
xchg
push
mov
push
sbb
pop
inc
xor
sbb
push
sbb
cmp
xchg
or
adc
std
xchg
addr16
fwait
push
xchg
aam
add
imul
retf
mov
add
pop
mov
xchg
and
jmp
retf
xchg
nop
mov
cs
pop
fidivr
or
pop
out
iret
popa
mov
(bad)
cmps
mov
mov
shl
xchg
int3
fwait
push
stos
aas
mov
adc
pop
daa
jae
and
in
iret
mov
push
test
inc
outs
(bad)
arpl
loope
ret
clc
dec
jne
mov
inc
mov
cmp
mov
fldcw
or
mov
imul
or
xor
push
xor
mov
sbb
movs
(bad)
xchg
js
enter
mov
pop
xor
jnp
lods
mov
imul
leave
push
add
pushf
in
ins
in
test
sar
sbb
inc
out
nop
inc
sar
add
push
cmp
movs
adc
repnz
inc
and
lahf
cmp
add
fiadd
mov
or
scas
test
add
fmul
sub
mov
sbb
mov
repnz
adc
fisubr
retf
ss
mov
sub
and
outs
call
sbb
push
retf
xor
add
(bad)
xlat
cmps
fstp
(bad)
lock
cmc
out
mov
das
jnp
pop
ror
in
adc
stos
sub
or
fsub
xchg
sub
arpl
cmp
std
add
lahf
lea
sub
call
mov
xor
sub
mov
jmp
sbb
cmp
xor
rcl
daa
movs
cli
xchg
xor
ror
(bad)
gs
dec
sbb
or
popf
dec
adc
mov
inc
mov
ret
in
add
lock
mov
add
sahf
jmp
imul
xchg
jae
shr
mov
out
js
shr
int3
xor
mov
icebp
pop
(bad)
push
dec
dec
mov
pop
out
fcomp
fs
ins
inc
lahf
cmp
test
push
inc
inc
shl
add
shl
rol
dec
or
or
std
test
and
leave
jo
sar
mov
mov
cmp
in
or
inc
out
pop
out
call
push
jge
push
xsave
or
jg
arpl
and
add
shr
daa
retf
push
cmps
cmp
sub
push
cmp
xchg
dec
(bad)
pop
xchg
fisttp
jge
rol
dec
jp
cld
inc
adc
not
into
or
daa
pop
add
mov
push
icebp
popa
(bad)
adc
xchg
jne
pushf
test
dec
out
pushf
mov
fmul
icebp
sub
mov
jae
movs
gs
(bad)
in
in
cmps
daa
adc
sbb
sub
fcomp
xor
mov
add
repz
jecxz
aam
and
dec
jge
sub
or
test
pop
xor
or
cmc
sar
jmp
pusha
fisttp
sbb
les
and
stos
stc
xor
sub
fstp
push
sub
xor
nop
(bad)
fisttp
xor
shl
jle
xchg
jbe
jecxz
pop
in
(bad)
mov
xor
retf
imul
arpl
push
dec
loope
sbb
mov
jecxz
stos
aas
or
retf
sbb
add
push
mov
push
rcr
or
out
sub
push
out
lahf
imul
pop
fidiv
(bad)
(bad)
popf
cmp
mov
loopne
pop
mov
push
push
clc
test
inc
jle
into
retf
dec
inc
mov
mov
push
adc
test
push
scas
fadd
and
shl
add
xchg
fadd
dec
xchg
stos
add
xor
je
xchg
jl
dec
inc
retf
or
add
int
scas
mov
push
shr
call
mov
or
outs
icebp
sub
shl
les
call
fidivr
mov
dec
movs
push
mov
test
stc
xor
mov
icebp
xchg
icebp
sbb
mov
ins
xchg
loopne
cmps
add
ins
scas
stos
call
jge
pusha
pop
add
addr16
cmps
addr16
popf
mov
or
adc
test
add
(bad)
mov
mov
add
push
pop
out
(bad)
sbb
test
jle
sbb
inc
inc
or
push
das
or
mov
jmp
pop
fcom
cdq
pop
(bad)
inc
xor
mov
mov
in
xor
push
rcl
(bad)
pop
mov
xor
in
pop
adc
push
mov
(bad)
cli
xor
mov
mov
in
inc
cmp
scas
sbb
xchg
or
jb
adc
ins
pop
test
cwde
dec
(bad)
mov
daa
cmp
test
dec
out
in
int
fs
adc
stos
mov
dec
cwde
mov
stos
aam
retf
lock
imul
jbe
inc
fst
inc
in
cmp
ja
ja
gs
pop
sbb
aaa
mov
sub
sbb
clc
dec
scas
cmp
outs
xor
ins
pop
mov
pop
inc
xor
pop
xchg
mov
imul
jle
sbb
and
call
stos
pusha
sub
and
push
ss
icebp
cmc
mov
scas
clc
sbb
jecxz
daa
dec
ja
xor
cmps
out
jbe
jnp
jnp
and
fdivr
in
rcr
jo
cmp
sbb
inc
data16
sbb
(bad)
fnstenv
sbb
aas
sbb
mov
ror
lea
inc
(bad)
jbe
mov
ret
pop
or
pop
cmp
push
test
into
jp
adc
jmp
dec
popa
sub
sbb
inc
dec
adc
jp
icebp
out
pop
shl
inc
(bad)
jb
test
pop
sub
out
int3
xor
push
xchg
mov
xchg
int
adc
retf
dec
dec
adc
adc
xchg
sti
or
sub
dec
ja
jl
ror
xor
fwait
int3
xor
add
fisttp
pop
dec
jle
mov
push
pop
cmp
push
fld
test
shr
xor
jb
arpl
mov
cmp
ret
adc
lods
jnp
pusha
mov
shr
jmp
lock
test
sbb
jbe
cs
pop
repz
cwde
xchg
pop
je
mov
mov
xchg
mov
sub
(bad)
cld
xor
mov
test
mov
add
leave
mov
cmc
out
mov
in
fstp
test
ja
cwde
inc
fidivr
jno
nop
loop
sahf
push
adc
push
mov
dec
and
sub
bound
xchg
add
clc
in
mov
cs
adc
ja
call
adc
and
or
mov
outs
pop
inc
lahf
mov
adc
(bad)
jmp
jge
imul
adc
aaa
or
mov
dec
fisttp
sub
or
add
mov
dec
jne
xchg
retf
inc
pop
mov
ja
or
int
xchg
les
dec
dec
(bad)
in
mov
jl
inc
mov
sub
mov
fwait
dec
jg
(bad)
xchg
or
mov
stos
in
lea
test
inc
div
stos
arpl
ret
inc
shr
adc
xor
arpl
mov
ins
add
ror
dec
imul
sub
mov
ret
dec
cmp
out
sub
xchg
out
jl
jmp
cld
fidiv
xor
mov
outs
call
adc
inc
icebp
add
nop
xchg
cmp
and
sahf
hlt
stos
inc
push
in
popf
xor
out
mov
mov
cmp
lds
mov
pop
pop
inc
cs
int3
retf
mov
adc
mov
push
lock
test
push
pusha
mov
jl
in
gs
and
cmp
cld
icebp
mov
mov
sub
fcomip
mov
lea
mov
xchg
mov
scas
lahf
test
cdq
cs
js
or
hlt
outs
inc
mov
int3
sub
or
je
pop
popa
icebp
sbb
(bad)
int
repz
cmp
aaa
hlt
mov
pop
mov
add
xlat
das
xor
sti
ret
out
ja
jnp
lock
jbe
or
mov
inc
xchg
pop
out
sbb
xor
jge
retf
jp
mov
lods
popf
pop
dec
in
fld
mov
stc
js
adc
(bad)
aam
mov
cwde
jo
dec
xchg
movs
xchg
pop
icebp
mov
xor
cmps
dec
or
call
retf
push
xor
in
lds
fs
sbb
jne
inc
adc
cli
int3
cli
jno
shr
sub
add
les
repz
pop
xchg
sub
adc
ror
pop
xchg
ss
or
fs
in
sti
(bad)
(bad)
and
inc
test
pop
jecxz
xlat
retf
push
clc
pcmpeqw
cmp
ja
push
sbb
ins
fcmovu
and
retf
jmp
stc
in
popa
leave
jmp
sbb
loope
adc
outs
pop
add
iret
neg
xchg
gs
leave
pop
jne
pop
cwde
sar
sar
dec
ds
cld
test
add
pop
jle
add
mov
jle
xchg
or
inc
push
(bad)
mov
xor
lds
pop
mov
push
mov
icebp
shl
enter
or
aas
retf
fisub
rcr
xchg
lock
jle
test
push
and
xchg
ins
(bad)
adc
lea
or
pop
mov
movs
in
pop
mov
leave
or
pop
stos
repz
add
js
pop
xor
cmp
inc
xchg
outs
arpl
pop
push
add
ins
sub
mov
enter
sahf
les
jp
jmp
repz
das
mov
mov
push
pop
(bad)
ror
and
cmp
dec
xchg
adc
(bad)
pop
ja
gs
mov
test
fwait
sub
scas
adc
arpl
pop
or
in
jle
lds
jp
sub
inc
mov
inc
xchg
fs
push
js
(bad)
fcmovnu
dec
(bad)
cmp
aam
mov
adc
movs
pusha
mov
or
jnp
std
sahf
jmp
sbb
and
push
popf
mov
hlt
sub
sbb
fdivr
aam
loope
ins
mov
test
mov
mov
pop
sub
mov
pop
mov
std
mov
mov
call
xor
xor
jl
xor
aas
jne
repnz
push
adc
sub
ret
arpl
movs
icebp
popw
repz
shr
cli
idiv
mov
xchg
adc
inc
fild
clc
push
inc
cmovnp
mov
out
cmp
shr
mov
test
mul
cmp
push
inc
retf
test
xchg
mov
leave
(bad)
scas
mov
cwde
cmp
fwait
jecxz
sbb
aas
pushf
sbb
fincstp
and
loopne
pop
xchg
or
scas
jecxz
cdq
jo
jnp
mov
call
and
xchg
ret
bound
movs
ret
test
dec
xchg
mov
cmc
fiadd
test
push
jg
imul
stos
mov
fldcw
retf
xchg
jae
dec
(bad)
mov
xchg
movs
ins
cmc
into
pop
sub
test
mov
lahf
xor
rcl
loopne
mov
cmps
cmp
je
shl
(bad)
fiadd
pop
adc
fldcw
int
push
cmc
enter
pusha
outs
push
pop
mov
adc
cmc
movs
je
jmp
jbe
in
dec
add
jne
mov
cmp
das
mov
lahf
jle
imul
fistp
adc
cmps
pushf
and
sti
fs
cmp
add
xchg
pop
ret
jne
lods
mov
sbb
mov
mov
sub
test
fisttp
sub
adc
call
sub
stos
scas
cmps
aam
repz
into
bound
add
xchg
daa
shr
sub
push
jecxz
cmps
(bad)
sbb
fisubr
jnp
and
cli
mov
aas
push
fld
or
sub
js
scas
test
jmp
mov
mov
or
jb
adc
add
stc
push
fild
pop
mov
cdq
cdq
sub
leave
or
sti
out
jmp
ror
add
mov
sbb
pop
add
jle
jno
daa
daa
xchg
jbe
sbb
xor
mov
imul
inc
inc
fs
loope
cmp
aam
lods
loopne
das
xor
mov
push
lods
gs
pop
dec
add
retf
add
movs
cmp
in
pop
mov
mov
jns
mov
div
(bad)
je
call
es
repz
leave
xchg
imul
js
bound
rcl
(bad)
xor
mov
stc
push
sahf
cmp
ja
sbb
inc
out
pop
dec
mov
fidivr
jg
or
rcr
das
fild
test
test
cmp
add
movs
pop
xlat
int3
shl
arpl
std
xor
scas
xchg
adc
fiadd
cmp
push
adc
into
mov
dec
mov
jno
lods
or
scas
popf
in
gs
pop
mov
ja
jbe
aam
dec
sti
neg
dec
retf
jg
mov
lahf
jbe
ret
ror
mov
popa
and
jge
inc
fstp
les
pop
mov
pop
iret
pop
loope
mov
sti
sub
sti
sub
cdq
(bad)
call
mov
jnp
mov
hlt
lea
and
in
and
outs
sar
enter
cmps
fld
lahf
xchg
or
popa
adc
out
popf
ja
mov
fwait
popf
dec
cli
scas
mov
sub
retf
push
jb
(bad)
sub
pusha
adc
and
push
test
add
sbb
outs
pop
(bad)
cmp
inc
xor
push
or
int
loopne
xchg
or
lock
add
adc
mov
jnp
out
dec
mov
sbb
lahf
retf
ret
out
mov
test
scas
dec
cmp
fidivr
scas
dec
sbb
imul
pop
fiadd
aaa
outs
(bad)
test
ss
pop
fisttp
sbb
mov
mov
xchg
mov
ret
int
cld
mov
(bad)
fdiv
das
jno
xor
in
fs
(bad)
adc
ret
in
mov
(bad)
hlt
pop
fst
mov
and
and
jmp
stc
add
pop
pop
xchg
pop
cmps
push
out
push
mov
inc
test
and
icebp
dec
jb
arpl
in
inc
cmp
sbb
loop
aam
cmps
hlt
jb
lahf
repz
add
dec
pop
jb
mov
push
xor
jno
(bad)
in
imul
inc
mov
adc
pop
add
xchg
mov
retf
stc
xchg
xor
cmps
call
xchg
mov
fsub
inc
das
cmp
sbb
sbb
mov
mov
push
mov
enter
push
cs
mov
(bad)
inc
push
mov
sub
outs
add
and
add
(bad)
bnd
dec
cmp
fwait
inc
jns
or
test
cli
int
add
sbb
cwde
scas
aaa
call
jle
retf
ficom
push
jecxz
in
push
inc
add
push
cli
inc
not
sbb
(bad)
hlt
mov
adc
dec
rol
xchg
pop
add
dec
inc
inc
xor
or
ret
lods
xchg
div
xor
scas
out
arpl
sub
shl
mov
dec
xchg
in
test
sti
movs
push
arpl
xchg
cmp
dec
imul
arpl
jmp
xchg
cmp
je
fst
xchg
je
dec
pushf
pushf
jbe
sbb
mov
dec
mov
imul
cli
push
sar
and
mov
icebp
inc
and
test
daa
or
retf
les
mov
in
mov
out
xchg
daa
ret
sbb
adc
jnp
adc
in
outs
mov
sbb
or
loopne
xor
iret
xor
clc
mul
add
jg
jnp
jmp
pop
hlt
(bad)
xor
xchg
sub
jns
cwde
and
nop
lahf
fadd
push
lahf
or
and
push
xchg
mov
dec
push
jg
outs
cmp
fist
push
leave
add
cmps
test
imul
sub
mov
jbe
xor
pand
je
dec
and
adc
mov
fnstenv
cmp
lea
outs
mov
adc
dec
sti
dec
jecxz
ss
jns
sub
sbb
dec
adc
fld
inc
xor
(bad)
and
lods
icebp
arpl
add
and
(bad)
jmp
arpl
dec
getsec
inc
(bad)
fimul
xchg
repz
jmp
cmc
xor
loope
(bad)
out
clc
pop
mov
loopne
sbb
mov
adc
xchg
mov
mov
fst
scas
stc
ja
sub
mov
add
mov
in
ficom
push
sbb
jbe
and
shl
sbb
aam
std
fld
inc
mov
sub
jecxz
mov
hlt
pop
xor
out
fidiv
jg
enter
fs
scas
xor
adc
das
fld
add
mov
xor
movs
dec
xor
and
xchg
aad
jb
outs
test
sahf
xchg
fucomi
(bad)
icebp
sub
stc
xchg
cmps
cdq
xchg
mov
jg
push
pop
lock
jmp
xor
sbb
adc
imul
sub
iret
jbe
inc
arpl
adc
push
(bad)
(bad)
jg
adc
imul
mov
in
stos
xor
and
int
xlat
dec
es
(bad)
shl
lods
sti
inc
ret
popa
push
dec
mov
popa
sub
and
mov
call
mov
jbe
xlat
(bad)
not
push
das
(bad)
xor
frstpm(287
push
pop
mov
mov
mov
loop
es
in
sbb
mov
adc
inc
lods
jmp
sahf
imul
cmps
arpl
popa
nop
movzx
(bad)
add
cmc
mov
or
mov
inc
pop
and
push
dec
(bad)
stos
mov
rol
das
pop
xor
outs
retf
jbe
pusha
sbb
sbb
bound
dec
fstp
pop
(bad)
shl
inc
xchg
push
movs
push
aad
movs
in
adc
mov
inc
fcomp
hlt
clc
ret
scas
cdq
or
dec
mov
test
cmp
mov
adc
xchg
into
cmp
jo
daa
fimul
popf
cmp
int3
pop
ins
pop
push
stos
pop
push
cs
dec
test
inc
retf
int
sar
adc
pop
imul
sbb
jo
xlat
and
adc
xchg
lds
mov
lods
rcr
inc
sbb
add
in
mov
gs
cmps
push
xor
scas
inc
cmps
mov
int3
pop
dec
mov
inc
push
mov
dec
shr
pop
iret
repz
jb
stos
cdq
popf
pop
test
fdiv
call
and
fcomp
jns
sub
push
in
push
out
mov
aad
int3
pop
(bad)
aad
in
pop
jbe
inc
xchg
pop
mov
push
stc
dec
mov
fidivr
je
and
adc
xchg
pop
cmp
(bad)
clc
cdq
retf
loopne
ja
mov
cmps
sub
mov
mov
mov
xor
push
cmp
jae
std
mov
nop
sbb
sbb
push
dec
test
jmp
outs
addr16
pop
mov
and
in
cmp
push
not
pop
mov
cmp
sbb
cs
cmps
enter
fstp
popa
xor
dec
push
shr
imul
stc
xor
jo
cmovp
rcl
mov
aas
mov
sub
sbb
add
mov
pop
std
scas
ins
pop
rcr
lahf
jl
pop
mov
sub
fs
(bad)
mov
fsubr
aad
inc
enter
fwait
add
clc
shl
iret
mov
imul
add
cmp
xchg
scas
pminub
cmps
cld
inc
inc
(bad)
xchg
mov
jecxz
ja
xor
and
mov
jmp
sub
pop
pop
ret
repnz
push
dec
xchg
ror
pop
scas
(bad)
mov
rcl
xchg
sub
ss
push
jo
xchg
leave
or
lock
pop
clc
jbe
mov
(bad)
rcr
pop
ja
int
jmp
push
lock
loopne
pop
adc
adc
fmul
cmp
ret
mov
mov
jmp
mov
sub
or
not
ret
mov
fcmovu
sub
mov
out
mov
test
popf
mov
sbb
stos
xchg
cld
or
push
hlt
das
dec
jns
fwait
aam
jmp
and
xchg
mov
or
push
inc
repz
outs
retf
jbe
icebp
outs
mov
int
scas
movs
inc
pushf
jmp
les
dec
mov
or
push
repz
cmps
mov
inc
jo
adc
out
mov
clc
adc
sbb
pushf
clc
push
rcl
and
test
in
in
lods
mov
inc
into
ds
cmp
call
adc
inc
jmp
sbb
or
in
push
movs
movs
sbb
xor
loope
ficomp
cli
cmp
inc
dec
mov
push
bound
xor
retf
push
movs
mov
and
sub
sub
xchg
mov
lods
cli
pop
mov
stos
dec
jo
dec
or
push
retf
cmp
scas
jge
dec
inc
inc
(bad)
mov
mov
inc
(bad)
add
pop
jge
push
or
xchg
or
scas
ret
call
and
fwait
aad
icebp
inc
ins
xchg
jle
push
rol
int
pop
arpl
push
and
add
xor
ror
jg
test
sbb
dec
rcr
sub
xor
aas
mov
sub
fisttp
dec
mov
in
aad
mov
nop
mov
sub
push
sub
dec
mov
push
cwde
adc
and
jno
pop
and
pop
leave
das
sar
xlat
ins
adc
ret
enter
out
or
shr
aam
test
mov
int
and
ins
mov
mov
rcr
mov
out
mov
jno
cs
addr16
jns
or
out
nop
push
add
fldcw
ss
sbb
pop
shr
mov
jmp
or
sbb
cdq
sahf
test
fidiv
bound
rol
xor
xchg
imul
popa
lods
cmp
ror
neg
pop
pop
push
call
sbb
push
popa
or
test
jp
xchg
push
icebp
cli
sbb
add
ds
scas
mov
cmp
popf
test
inc
sbb
daa
cs
add
adc
or
icebp
jae
jnp
aaa
or
mul
mov
mov
loopne
and
dec
mov
mov
dec
jmp
dec
or
lahf
jmp
mov
cmp
cmp
dec
test
xchg
rol
add
shr
pop
loope
dec
test
loope
inc
jne
inc
and
out
xchg
lea
rcl
push
sub
adc
pop
or
mov
fwait
sbb
dec
ins
out
xor
mov
stc
jb
push
mov
pusha
ja
addr16
outs
or
and
or
xchg
jb
jmp
push
push
cmp
pop
(bad)
call
(bad)
scas
das
mov
sbb
jo
and
push
shl
outs
js
and
mov
stos
dec
sar
pop
pusha
ret
or
inc
and
push
scas
out
mov
scas
cli
xchg
ds
and
xor
cwde
mov
cmps
clc
icebp
mov
dec
retf
ins
dec
js
xchg
popf
push
pushf
adc
add
call
jg
jno
dec
push
cmp
fscale
xor
hlt
(bad)
in
jle
xor
xlat
lea
xchg
in
inc
xchg
imul
sar
shr
adc
fld
pop
push
or
mov
es
movs
jg
xchg
ss
mov
aaa
ss
mov
leave
repnz
pusha
jl
iret
cwde
mov
mov
clc
cwde
dec
in
xor
clc
iret
stos
mov
iret
dec
or
pop
call
leave
xor
or
shr
adc
xchg
push
cmc
movs
mov
cdq
dec
ds
pop
fwait
je
xchg
xlat
push
or
adc
lock
shr
lahf
xchg
aam
inc
pop
in
jb
fidiv
jmp
jp
cmp
jp
jb
jmp
js
(bad)
out
sbb
mov
imul
jnp
aam
out
rcr
and
cli
mov
mov
ins
push
das
icebp
mov
test
fs
sub
mov
jmp
mov
ins
mov
addr16
mov
adc
fadd
stos
add
call
inc
xchg
xchg
in
dec
imul
push
inc
pop
xchg
jle
not
sbb
addr16
mov
daa
nop
dec
leave
xchg
xchg
cmovno
adc
jecxz
les
adc
fisub
loop
sub
add
mov
not
dec
leave
jecxz
leave
or
aam
push
stos
lods
sub
mov
jmp
xor
fld
outs
ret
cmps
jp
jbe
inc
out
cmp
inc
pop
sbb
es
push
loopne
aad
cs
sub
int3
jmp
sub
(bad)
push
jmp
cmp
xor
fnsave
ffree
sub
clc
adc
push
sbb
xchg
pop
movs
mov
iret
stc
adc
fcomip
test
mov
jecxz
xor
cmp
imul
mov
call
mov
shl
into
push
ror
mov
mov
in
xlat
push
pop
jae
inc
retf
jne
dec
imul
imul
or
ins
cmps
sti
outs
sbb
pop
pmuludq
je
nop
pop
mov
cli
(bad)
pop
xchg
adc
jecxz
repz
ret
sar
cld
(bad)
stc
sbb
js
ins
mov
sub
aam
xchg
imul
mov
mov
pop
movs
adc
push
fcomp
retf
clc
cld
and
and
aas
jp
inc
push
mov
and
and
std
add
pop
mov
ror
mov
mov
push
mov
cmp
mov
mov
outs
push
es
xlat
cwde
stos
jmp
shl
test
inc
pop
add
ja
sub
std
pop
add
movs
outs
iret
add
(bad)
icebp
dec
dec
data16
and
fs
jmp
cmp
mov
cmp
or
push
xchg
imul
icebp
je
xlat
adc
mov
fwait
add
int
loope
sub
adc
out
adc
push
jle
pop
jl
jmp
aam
sbb
or
into
js
mov
les
pop
cmps
popf
(bad)
out
test
inc
xor
push
xor
cwde
rol
push
bts
ins
or
adc
xor
xchg
(bad)
pop
fist
int
xor
dec
mov
leave
mov
movs
clc
push
mov
mov
mov
xchg
pop
push
int3
loopne
mov
(bad)
mov
dec
or
scas
fadd
dec
xor
dec
das
fs
(bad)
clc
jp
sbb
into
xchg
int3
imul
ror
lea
adc
pop
mov
xlat
(bad)
dec
dec
push
(bad)
fidiv
jmp
dec
lock
add
ja
adc
mov
and
enter
push
xchg
rcr
push
mov
adc
mov
push
cdq
jp
dec
mov
xor
pop
fsub
xor
ret
jle
adc
sbb
fld1
mov
jle
test
mov
cmc
fstp
(bad)
das
push
pop
fistp
aad
dec
pusha
xchg
pop
cmps
aad
jnp
stc
or
inc
daa
dec
mov
out
dec
cmp
mov
adc
pop
mov
mov
dec
(bad)
xchg
ins
adc
inc
push
xchg
cmp
push
mov
jbe
sbb
dec
sub
jns
pop
xchg
jmp
(bad)
mov
in
dec
dec
jp
shr
mov
(bad)
sbb
dec
or
shl
inc
mov
(bad)
and
mov
arpl
rcl
sbb
jnp
xchg
inc
dec
jmp
std
xor
test
repnz
pop
push
jae
mov
pop
or
sbb
sbb
repnz
xor
std
jg
cmp
add
pop
mov
sub
mov
jmp
add
jnp
push
(bad)
enter
mov
dec
inc
or
sbb
xor
stc
mov
add
nop
(bad)
pop
popa
in
push
out
int3
test
mov
pop
xor
mov
into
mov
cmc
fdivr
add
mov
fdivr
pushf
div
out
cli
sub
jle
popw
inc
in
in
xchg
(bad)
aam
adc
adc
adc
pop
mov
add
pop
mov
mov
add
mov
jo
dec
inc
xchg
dec
push
popa
pop
mov
and
xchg
add
sub
outs
aam
jge
xchg
rol
pop
sbb
xchg
mov
cmp
pushf
cwde
xchg
imul
rcr
sub
sti
jg
inc
mov
push
scas
ficomp
lahf
push
push
sbb
in
adc
push
and
mov
sar
push
rcl
(bad)
fs
lds
jo
cmp
push
enter
scas
add
dec
and
push
aad
xor
es
or
jb
outs
push
fst
sbb
jmp
sbb
mov
or
rol
push
sbb
jae
pop
js
add
xchg
int
add
and
ret
(bad)
cmp
and
and
add
or
loopne
xchg
cdq
add
adc
call
iret
test
mov
push
inc
and
sub
jno
repnz
sbb
jo
pop
mov
iret
cli
into
loop
inc
int3
push
cwde
pushf
pop
sbb
call
rol
cmp
cmp
pop
ds
mov
out
jns
int3
clc
(bad)
in
out
ss
pop
mov
jp
and
loopne
mov
clc
fcomp
dec
sub
sub
adc
or
test
or
lods
stc
pop
pop
pop
jmp
pop
push
popa
shl
outs
adc
jecxz
sub
cmp
ret
cmp
xlat
std
adc
adc
jbe
xor
adc
loope
mov
sub
xchg
cld
or
dec
mov
outs
bound
repz
sbb
pop
pop
ja
and
mov
iret
rcr
push
shl
inc
in
shl
outs
jl
pop
adc
push
repnz
mov
sti
sub
cmp
and
std
ins
or
mov
pop
cmp
cmp
arpl
mov
popf
rol
push
fistp
dec
fidiv
out
adc
fsincos
mov
call
outs
cmps
adc
mov
or
add
les
sbb
add
mov
add
dec
fld
rol
hlt
(bad)
push
leave
xchg
hlt
sub
xchg
cmp
(bad)
or
push
enter
pop
push
arpl
repz
ins
dec
push
cmc
mov
xor
xchg
jecxz
pop
ins
lock
inc
test
jge
sahf
movs
sbb
lods
scas
sub
out
mov
dec
leave
sub
out
iret
or
sahf
or
push
lods
cmp
fsub
push
mov
jecxz
cmp
xor
xlat
push
sub
xchg
mov
loope
push
std
fs
inc
cmp
nop
pop
mov
sbb
movs
dec
lock
mov
stc
adc
enter
mov
sbb
fistp
daa
test
mov
lock
scas
retf
loop
pop
ja
xor
add
out
add
(bad)
sbb
and
mov
cmp
sub
test
mov
xchg
lods
loopne
inc
in
mov
in
mov
mov
jmp
mov
sbb
add
icebp
ficomp
dec
imul
fld
jae
pop
inc
rol
xchg
leave
ins
iret
add
sti
leave
xor
xor
adc
ret
sar
sbb
in
pop
idiv
push
loop
mov
enter
(bad)
xor
cmp
xchg
ins
and
push
jae
bound
pop
jnp
lahf
jmp
cs
ror
es
mov
push
cmp
enter
cmp
iret
jl
lea
aad
adc
(bad)
lahf
call
jmp
cmp
mov
iret
dec
les
mul
call
shl
or
lock
int3
sbb
mov
mov
lds
clc
dec
mov
clc
aaa
inc
cmp
jae
(bad)
ins
(bad)
int
cmps
in
jae
adc
popf
mov
pop
mov
pop
das
sub
imul
pop
ret
pop
test
pop
xlat
mov
mov
and
xchg
cs
jbe
hlt
fs
mov
mov
test
jecxz
add
fcmovnb
dec
imul
aaa
mov
stc
fdivr
xchg
cdq
test
pop
(bad)
fisttp
scas
test
xor
gs
outs
cli
aaa
mov
jge
sahf
and
stos
dec
lock
cmp
sbb
movs
mov
outs
pop
sub
dec
ret
and
rcl
jne
in
mov
aas
xchg
adc
(bad)
mov
add
mov
adc
push
out
dec
fsub
cdq
mov
js
jmp
inc
shr
and
mov
nop
data16
enter
pop
pop
test
pusha
jb
fdivr
aad
test
out
xchg
lea
ins
std
dec
dec
push
push
psubusb
sub
adc
xchg
loop
inc
bound
(bad)
dec
mov
mov
scas
mov
lds
pop
imul
lods
in
scas
sub
ds
mov
pusha
fcmovu
jne
and
test
jecxz
and
shr
adc
mov
ja
sub
pushf
add
mov
lea
sub
cs
sar
loopne
(bad)
dec
scas
xlat
cdq
in
xor
pop
mov
dec
mov
push
push
addr16
xor
adc
or
push
pop
icebp
mov
mov
outs
or
pop
xor
sub
mov
pop
push
add
mov
xchg
dec
pop
test
les
inc
fwait
iret
push
sahf
fdiv
sbb
imul
lods
and
cmp
sbb
out
sub
push
mov
das
movs
or
outs
push
mov
xor
jbe
xchg
add
dec
in
cmp
imul
in
sbb
mov
mov
push
xchg
stos
jmp
jmp
jo
jae
popf
mov
add
js
rcl
dec
jno
lahf
or
rcr
fsub
xchg
mov
ins
jg
xor
mov
clc
xchg
xchg
in
push
les
push
repz
mov
jnp
xchg
push
cmc
aas
dec
daa
ficom
out
pop
dec
dec
dec
lock
retf
xchg
jo
cmp
pop
xchg
ins
jne
mov
pop
jbe
or
push
out
bound
in
jo
iret
test
ret
fst
adc
dec
adc
out
repz
xchg
popa
mov
iret
test
iret
int
repnz
mov
sbb
shl
xor
test
ret
lods
mov
mov
cmp
movs
stc
movs
mov
push
sbb
daa
push
push
lods
push
push
xchg
fsubr
or
call
xchg
idiv
mov
retf
data16
mov
sbb
xchg
test
pop
pushf
std
inc
sbb
div
xchg
mov
mov
mov
frstor
mov
and
pop
jne
dec
lahf
movsx
mov
lds
fist
adc
mov
push
push
mov
fadd
(bad)
sub
int
cs
pop
dec
aad
push
jns
xchg
xor
adc
mov
in
xor
jge
dec
int3
pushf
adc
jecxz
ret
mov
imul
outs
sub
jo
or
aaa
xor
scas
loope
clc
bound
jl
div
es
mov
(bad)
xchg
xor
mov
cmp
cmp
jmp
jp
jae
cdq
stc
stos
jnp
(bad)
xor
push
xlat
pop
nop
dec
mov
push
mov
hlt
adc
fidivr
inc
inc
cmps
les
clc
cmp
sub
jns
mov
retf
jae
(bad)
scas
xchg
stos
cdq
int3
mov
test
xchg
add
fiadd
mov
add
xlat
pop
les
dec
and
sub
sub
mov
or
or
ja
scas
xchg
(bad)
cwde
fbld
fwait
sub
das
push
xchg
cmp
mov
inc
lahf
inc
loope
push
add
out
out
or
inc
xor
jmp
adc
add
jb
mov
sbb
jb
mov
pop
jne
je
inc
scas
xlat
or
push
mov
repz
pop
inc
push
mov
std
mov
cmp
mov
fisub
ins
pop
xchg
pop
ficom
pop
retf
jl
sbb
jne
ds
div
pop
mov
push
jl
in
out
or
fcomp
cmc
mov
sbb
mov
mov
lods
push
cmp
fdivr
push
imul
inc
mov
stos
in
xchg
cmp
pop
pop
adc
es
mov
data16
push
dec
fdivrp
fs
push
test
retf
jmp
dec
imul
sbb
loope
jmp
xchg
jge
fnsave
(bad)
push
fisttp
jno
mov
fbstp
and
push
sti
push
sub
dec
jo
mov
mov
mov
push
xchg
fmul
jg
test
xchg
sub
jb
cmps
xchg
test
lea
xlat
in
repnz
adc
sbb
jge
mov
and
ficomp
mov
fucomip
ficom
iret
rcl
je
xor
dec
test
sub
and
mov
push
xor
pop
and
rol
add
jb
cmps
mov
push
adc
jecxz
xchg
sub
adc
cmp
sbb
std
out
aas
ds
std
mov
add
push
sbb
iret
xor
pop
sub
fisttp
mov
mov
sub
mov
(bad)
pusha
hlt
shr
push
push
cdq
push
push
xchg
adc
inc
sub
repz
test
xor
mov
mov
sub
and
fisub
pop
in
jbe
call
leave
mov
stos
jae
ffree
push
pop
sub
(bad)
xrelease
shr
movd
jns
(bad)
dec
lea
jle
add
inc
xlat
mov
in
cmp
imul
add
sbb
leave
iret
jp
leave
or
mov
or
lock
adc
stos
push
dec
add
xchg
xchg
adc
mul
push
xor
mov
mov
pop
fimul
push
mov
dec
xor
icebp
add
lods
cmps
mov
jne
scas
std
push
ror
xor
aam
out
sbb
pop
sbb
jns
ret
or
pop
lock
mov
(bad)
push
sbb
sbb
sub
mov
push
ss
jmp
xchg
jbe
int3
jo
test
movs
lahf
pop
je
push
push
sbb
daa
out
or
xor
loopne
add
aas
test
jno
adc
cs
popf
call
daa
fisubr
repz
je
test
or
ret
test
dec
out
mov
rcl
sub
jg
fcmovu
hlt
cmp
leave
aad
bound
fnstcw
out
jno
push
add
lea
mov
lock
push
(bad)
call
js
dec
mov
repz
push
mov
aad
jno
or
xchg
add
in
push
es
mov
xor
mov
loopne
or
(bad)
cmp
xchg
sbb
retf
mov
jp
fadd
xor
fld
mov
xchg
mov
movs
push
xchg
adc
add
jecxz
jb
and
clc
sbb
or
dec
jbe
cmp
dec
aam
add
(bad)
or
dec
pop
or
nop
xchg
sahf
sbb
call
adc
inc
in
jle
pop
push
cmp
jns
je
mov
mov
aad
stos
das
popa
mov
call
or
jbe
pop
xor
shl
(bad)
(bad)
stc
sub
call
mov
popa
mov
dec
and
loopne
aad
bound
addr16
push
inc
cmps
div
push
mov
mov
lods
pop
mov
inc
into
mov
icebp
dec
adc
mov
inc
out
stc
imul
in
loope
arpl
es
xchg
jo
jp
and
in
das
(bad)
in
mov
xchg
test
bound
fnstsw
pop
and
out
das
ins
push
xor
and
pop
fs
retf
xchg
jnp
test
sub
mov
popf
loop
jno
cmp
inc
mov
xchg
bound
mov
fadd
ret
xchg
add
and
cmp
inc
cmc
cmp
sbb
pop
div
ds
pop
aaa
sbb
add
sbb
mov
pop
mov
mov
cli
lock
mov
mov
push
xchg
jle
cmp
icebp
cmp
push
jp
pop
ja
add
pushf
mov
bound
inc
(bad)
mov
fbstp
loopne
mov
es
xor
test
or
rol
pop
call
pop
dec
sub
mov
adc
fidivr
movs
sti
push
mov
dec
in
cld
cmp
push
cmc
cmc
jo
add
lahf
sbb
test
push
sahf
sub
cmc
(bad)
mov
repz
xor
retf
cmps
sub
push
and
mov
sbb
dec
out
inc
adc
inc
nop
cmps
movs
push
and
(bad)
fst
add
stos
jne
mov
mov
or
xchg
imul
mov
add
(bad)
mov
ss
repnz
int3
data16
fcomp
iret
mov
(bad)
das
inc
ret
stos
ins
rcl
lahf
xor
jge
ror
xor
scas
fwait
mov
jp
and
xor
sub
pusha
and
outs
sbb
shl
mov
in
stc
inc
movs
pop
lock
add
in
idiv
mov
xchg
ins
test
pop
and
add
or
in
ret
jno
pushf
add
fild
das
xchg
mov
iret
lock
mov
test
jmp
bound
push
mov
fnop
in
sub
mov
iret
xor
ficomp
outs
gs
xor
cmp
cmp
dec
pop
jge
mov
fcom
mov
(bad)
cmp
aad
iret
in
sub
pushf
xchg
mov
and
scas
mov
in
xchg
into
repz
xlat
aas
(bad)
add
imul
icebp
jge
test
xchg
push
(bad)
push
imul
mov
fisub
push
stos
inc
mov
xor
sub
mov
inc
call
in
cmp
nop
fcmovnu
ficom
dec
adc
aad
es
les
mov
xchg
dec
and
mov
loopne
iret
lods
xor
mov
and
out
push
mov
aad
inc
or
(bad)
cli
outs
cdq
dec
pop
sbb
rcl
rcl
aam
ret
fnsave
stos
or
push
jae
aaa
inc
outs
cmps
int3
lds
mov
sbb
or
in
jecxz
mov
mov
sub
sub
sbb
sar
retf
(bad)
in
cmp
sub
jmp
mov
push
inc
jmp
mov
je
and
ins
and
fdiv
jne
mov
(bad)
cmp
push
jae
daa
cmp
cmp
int3
push
or
sbb
sub
inc
adc
pop
movs
add
ret
jp
adc
pop
or
cmps
xor
rol
xchg
cli
sub
retf
mov
xlat
pop
add
test
fcomp
imul
out
(bad)
in
fwait
mov
repz
sbb
inc
in
push
fist
aad
inc
cmp
out
jo
ret
repnz
cmp
cmp
and
nop
je
cmps
enter
xchg
out
xchg
dec
call
das
outs
or
cmc
mov
data16
cdq
stos
imul
call
clc
or
nop
inc
retf
inc
ds
icebp
fcmovb
mov
in
push
push
aas
xor
scas
xor
clc
push
fcmovnbe
push
add
mov
call
sub
mov
sbb
sub
lods
test
repz
mov
push
jo
cwde
xor
out
or
cli
sbb
or
mov
dec
addr16
mov
test
(bad)
stos
cdq
pop
jb
js
mov
loopne
shl
sbb
mov
push
call
push
pop
popf
mov
adc
cld
and
mov
and
imul
inc
sbb
mov
mov
loopne
stc
xchg
xor
(bad)
stc
and
dec
mov
imul
jp
cli
push
rcr
ds
mov
loopne
jg
mov
jns
les
test
dec
mov
mov
fld
sbb
xchg
dec
sub
xor
test
xor
cmp
mov
loopne
fcom
mov
mov
sub
add
xchg
stc
sahf
out
int3
call
mov
push
sub
dec
cmps
pop
jl
sahf
int3
cmc
sub
shl
into
adc
cvtpi2ps
fs
or
div
pusha
xchg
dec
add
push
push
inc
jnp
loop
test
mov
inc
repnz
jo
adc
inc
mov
out
jg
push
or
add
in
mov
xchg
adc
sbb
jecxz
and
out
dec
fild
xchg
mov
loopne
inc
fldcw
data16
neg
inc
mov
fdecstp
lahf
stos
out
xor
pop
cld
lock
push
test
cmp
dec
imul
shl
or
js
fisttp
mov
jns
(bad)
(bad)
mov
mov
fcomp
xchg
repz
loope
jne
sub
mov
and
(bad)
out
push
cmp
adc
in
movs
in
mov
stos
inc
dec
mov
xor
jno
popa
ins
out
xchg
(bad)
sub
ds
daa
xchg
dec
add
sub
call
movs
add
gs
outs
push
xchg
dec
mov
cs
jo
popf
add
add
mov
xlat
movs
inc
sar
hlt
cmp
xor
data16
fdivr
lock
imul
loop
test
sub
xchg
mov
out
adc
sbb
and
mov
sub
popa
push
sbb
xchg
inc
xchg
stos
bound
imul
icebp
mov
inc
movs
cmc
xchg
cli
xchg
out
cmps
or
les
sti
push
in
pop
or
sbb
or
pop
and
lods
xor
inc
in
inc
ins
xchg
add
mov
fisub
pop
pop
cmc
test
sbb
ror
mov
aas
gs
push
lods
mov
cmps
outs
mov
jno
cmp
in
call
mov
ror
mov
ja
mov
popf
int
and
in
fistp
(bad)
out
loope
push
fwait
enter
lods
mov
jg
mov
fisub
add
cli
sub
sbb
in
out
mov
ror
or
sub
or
fistp
(bad)
popa
ja
mov
ret
std
lods
inc
dec
mov
(bad)
lods
or
fsub
xchg
jne
jnp
popf
ja
pop
icebp
or
cld
repz
adc
sbb
mov
cwde
aad
cmps
in
dec
jb
pop
js
ins
inc
outs
retf
sub
fisttp
sbb
(bad)
lods
outs
das
push
push
dec
xchg
mov
lods
push
(bad)
sbb
je
sar
cli
mov
in
int
or
cmps
ret
jne
or
pushf
push
xor
xlat
lock
and
push
call
fst
inc
xchg
lock
leave
inc
out
inc
jg
inc
fisubr
xor
sub
xor
jge
cmp
add
mov
or
test
add
adc
xchg
les
fild
stc
(bad)
loop
jae
rcr
retf
(bad)
lea
int3
repz
or
mov
int
ss
int3
popf
cmp
xchg
retf
fs
jnp
xchg
or
push
pop
mov
das
sbb
cmp
xchg
or
out
cwde
not
push
jno
xor
sbb
(bad)
fiadd
inc
inc
aad
adc
push
mul
clc
jbe
inc
xchg
add
push
xor
(bad)
cdq
sar
test
or
and
push
sub
push
addr16
cld
jl
or
pop
pop
jns
sub
lds
xchg
mov
pop
data16
pop
ins
jo
loopne
mov
adc
add
mov
sti
cmps
lea
and
sbb
stos
adc
mov
iret
test
jne
pop
sbb
add
je
sti
pushf
mov
lock
retf
gs
les
cmp
pushf
(bad)
and
xor
push
sbb
mov
pop
add
sub
jne
sbb
les
cmp
xchg
jg
adc
outs
jl
mov
cmp
xor
cmp
pushf
mov
clc
push
repnz
loop
push
add
stos
ret
cdq
push
push
inc
xor
cmp
push
loope
sub
and
and
fistp
mov
dec
(bad)
fld
mov
mov
inc
ds
cs
mov
dec
xor
push
dec
mov
xor
mov
cld
iret
outs
jo
inc
pop
mov
mov
xor
adc
or
sub
cs
adc
mov
mov
(bad)
cmp
xor
sub
nop
outs
dec
lea
pop
sub
mov
icebp
mov
or
pop
test
push
xor
push
fild
retf
(bad)
or
nop
push
jle
outs
push
ror
push
xor
stos
sbb
(bad)
cmp
jns
sub
pop
jp
cli
and
arpl
sbb
or
popf
dec
fstp
addr16
call
or
mov
outs
pop
inc
shl
cmp
mul
jb
pop
fs
scas
sbb
stos
(bad)
cld
cmp
mov
mov
out
push
clc
clc
sbb
aas
scas
lods
mov
dec
adc
shl
dec
je
test
out
bound
push
inc
popa
jmp
mov
xchg
les
data16
inc
push
gs
jmp
and
dec
in
inc
sbb
push
jnp
test
into
rcl
retf
dec
adc
pop
and
dec
ror
aam
push
mov
fistp
adc
dec
test
jno
xchg
out
pop
dec
sub
imul
leave
jne
mov
adc
add
rcr
adc
pop
aaa
and
or
mov
aaa
push
cmp
icebp
push
lods
jbe
mov
mov
dec
inc
mov
loopne
sub
adc
pop
dec
dec
add
push
dec
lea
ins
sbb
scas
push
mov
fstp
cmps
cmp
push
fwait
pop
or
sbb
rcl
stos
in
(bad)
inc
das
adc
xor
sub
push
xchg
pop
sahf
mov
cld
aaa
lds
in
out
mov
scas
and
setae
les
shr
mov
ins
leave
inc
int
and
pop
stc
jnp
inc
push
adc
cmp
retf
push
std
xlat
je
push
ins
xor
ror
enter
sbb
ja
daa
mov
stc
popa
or
stos
mov
outs
sub
pop
dec
shl
shl
pop
ins
cs
sbb
(bad)
push
jmp
mov
jmp
lods
sahf
mov
dec
mov
ss
adc
mov
int3
inc
fnstenv
(bad)
sbb
sub
ret
sbb
cmp
jg
std
hlt
xchg
cmp
cmps
and
cld
mov
cmp
shl
push
enter
fld
out
push
test
pop
std
lea
(bad)
or
mov
push
js
popf
sub
repz
int
jl
cmp
ss
dec
lea
imul
pop
popa
call
pop
mov
push
(bad)
cmp
xor
xchg
arpl
sub
js
jo
pop
loop
ror
xchg
dec
push
sbb
mov
cmp
sbb
pop
adc
retf
nop
js
fsub
push
js
jecxz
(bad)
push
jg
jb
(bad)
sbb
call
cmp
ins
push
push
pop
or
ret
jmp
or
cdq
rol
cmp
push
adc
adc
addr16
leave
cld
enter
jae
into
pop
xchg
jecxz
rcr
sub
mov
adc
sbb
mov
add
cmp
push
jae
fwait
out
xlat
ficom
adc
fiadd
push
dec
or
mov
stos
and
test
in
and
push
loope
pop
(bad)
imul
mov
xchg
call
sbb
push
inc
je
icebp
and
jp
adc
mov
ss
xchg
mov
mov
mov
adc
mov
imul
mov
mov
add
(bad)
mov
rol
mov
scas
std
pushf
shl
cmp
lock
(bad)
arpl
sbb
sbb
int
stos
pop
jno
push
shl
xchg
js
add
push
outs
push
sbb
(bad)
mov
lock
adc
stos
iret
out
js
push
dec
inc
inc
hlt
jmp
ss
fimul
cmp
or
(bad)
idiv
push
cmp
pop
sub
retf
mov
push
sbb
into
fstp
nop
inc
call
jmp
push
ja
mov
push
push
add
and
fsub
outs
ret
push
mov
inc
xor
pusha
adc
daa
xor
sub
mov
inc
movs
enter
inc
mov
dec
inc
cmp
and
add
pushf
mov
(bad)
sbb
(bad)
stos
scas
pop
repz
or
popa
fdiv
xor
xor
mov
or
jp
sub
test
jbe
in
pop
adc
jg
inc
xchg
jae
test
xor
push
mov
mov
bound
daa
adc
mov
or
jg
xor
mov
xor
(bad)
cmp
xchg
mov
sahf
sbb
lock
popf
jg
pusha
(bad)
stos
pusha
mov
sub
pushf
pushf
daa
jnp
mov
push
rcl
mov
mov
cmp
sub
scas
add
sub
data16
mov
jmp
or
fmulp
pop
dec
push
jmp
xor
dec
nop
mov
test
push
fisttp
push
cmc
lods
or
or
cmp
daa
jae
fmul
push
push
sti
pop
daa
(bad)
test
(bad)
cmp
fldcw
test
xchg
push
cs
loope
and
pop
fstp
xchg
imul
cmp
sar
inc
in
mov
mov
lds
push
xchg
or
int
(bad)
fld
sbb
xchg
push
jnp
add
inc
shr
mov
outs
mov
aam
into
aad
cmp
fist
mov
shl
jmp
xor
fdiv
and
cmps
and
cwde
cmps
or
fadd
fimul
(bad)
hlt
sbb
mov
loopne
adc
jnp
mov
push
push
and
jae
jns
adc
(bad)
rcr
xor
fs
iret
pop
sub
test
retf
arpl
je
ins
loope
mov
bound
jbe
adc
aas
add
dec
or
(bad)
sbb
push
js
icebp
sub
leave
mov
loope
cmps
cdq
lds
dec
pushf
fild
(bad)
cli
mov
stos
adc
movs
in
adc
push
mov
fst
cmps
push
sbb
jne
ss
dec
jle
jnp
(bad)
mov
jmp
loop
sub
cmp
jmp
sub
push
rcl
mov
xchg
push
lds
and
je
gs
iret
adc
clc
sbb
jo
jp
push
cwde
into
dec
adc
jno
icebp
repz
sbb
push
ficomp
xor
(bad)
ins
add
push
(bad)
int3
stos
and
adc
bound
sti
pop
sbb
or
dec
pop
iret
xchg
popf
add
aad
loope
je
xchg
leave
inc
ret
inc
in
jecxz
daa
mul
adc
mov
adc
xor
stos
xchg
jno
sbb
pop
mov
shr
sbb
mov
leave
les
gs
nop
dec
push
(bad)
fdivr
fwait
xchg
loop
jp
jo
pop
scas
mov
cmc
test
lods
jmp
test
adc
pusha
xor
sbb
daa
dec
add
pop
add
dec
mov
sbb
shr
add
(bad)
rcl
add
bound
or
mov
cmps
add
mov
pop
sub
xchg
adc
pop
fist
in
cmc
loop
enter
nop
fimul
mov
mov
and
fdiv
push
dec
leave
or
pushf
test
cmp
mov
repz
push
retf
push
push
xchg
mov
mov
pop
into
inc
lods
and
jmp
cmp
shr
and
ins
movs
stc
or
xchg
and
sbb
sub
in
mov
xor
cmps
inc
pop
mov
and
cmc
ins
repz
fisttp
push
cmps
xchg
add
dec
sti
bound
les
test
and
and
es
push
test
sub
mov
xchg
mov
add
sahf
sub
fcmovnb
lds
addr16
cmp
out
mov
aad
cmp
mov
bound
cmps
retf
pop
mov
inc
mov
jmp
loop
repz
mov
sbb
pushf
mov
mov
pop
jbe
dec
int
add
mov
inc
pushf
pop
push
test
loope
les
mov
mov
imul
aas
mov
lods
data16
mov
out
jle
mov
out
sub
hlt
and
cmp
call
cmps
cld
jb
iret
out
pop
movs
sub
arpl
jns
xlat
dec
loop
arpl
(bad)
addr16
mov
or
popf
pop
inc
stos
pop
rcl
mov
out
push
jle
out
adc
push
cld
bound
sbb
pop
fnstcw
lds
aas
pop
pop
jne
cdq
pop
inc
mov
sbb
xchg
push
adc
dec
sbb
std
mov
shl
xchg
push
or
sbb
mov
xchg
jmp
and
mov
cmc
mov
jns
and
sub
or
inc
jae
adc
push
pop
xor
mov
ficomp
xchg
fdivrp
out
inc
inc
and
sar
add
jns
inc
rol
into
xchg
in
in
and
mov
(bad)
std
xchg
sbb
sbb
cmp
enter
(bad)
mov
vunpcklps
jp
or
inc
clc
adc
sbb
stos
push
in
sbb
mov
jb
fisttp
xchg
stc
ins
xchg
push
out
ror
stos
jns
movs
dec
push
int3
mov
loopne
sub
stos
scas
or
scas
push
jecxz
repnz
add
inc
stc
stos
test
fidivr
mov
jno
imul
sahf
mov
std
mov
fidiv
out
fwait
aaa
jg
pop
(bad)
fdiv
mov
mov
jne
or
xchg
fdivr
jne
fcomp
cmc
jo
and
mov
sbb
stc
cwde
sbb
add
hlt
xchg
in
cmp
les
into
pop
pop
mov
xchg
push
mov
pop
arpl
fcomp
cmp
inc
xchg
imul
cld
mov
pop
mov
les
pop
dec
sbb
in
popf
and
loope
pop
out
inc
jmp
jmp
cmc
fcom
cli
fmul
xor
pop
loope
pushf
pop
ds
push
fist
mov
mov
adc
and
and
push
leave
jecxz
fstp
cmp
enter
hlt
out
call
shr
mov
fidivr
test
xor
(bad)
lock
call
cmp
mov
jno
jl
popa
adc
pop
xor
(bad)
xchg
ins
mov
pop
mov
inc
push
lahf
cli
je
xchg
or
or
repnz
pusha
retf
repz
mov
jmp
jns
sub
jne
xchg
arpl
or
fwait
mov
js
jns
xchg
ffree
pop
or
aam
push
xchg
mov
sbb
loopne
push
mov
jns
mov
mov
sub
and
or
mov
push
inc
aas
sub
xor
(bad)
pop
bound
push
out
out
clc
cdq
xor
test
or
adc
ret
jne
jg
mov
xor
je
xchg
inc
pop
cmp
mov
aad
mov
or
iret
xor
lods
(bad)
lock
ins
test
adc
or
or
loop
jae
std
pop
or
jae
fsubr
mov
lods
sub
es
mov
push
pop
stos
mov
add
aaa
rcl
fsub
aad
je
fwait
sbb
sub
jo
mov
ins
xor
mov
mov
cmp
(bad)
jb
ficom
jns
sub
test
cmc
movs
and
mov
and
mov
pop
ja
das
lds
call
xlat
sub
jg
push
cmp
fimul
movs
mov
mov
xchg
and
jmp
inc
jno
das
push
cmps
je
into
jo
xchg
dec
jne
cdq
mov
rcl
xor
push
jle
cmp
jnp
pop
mov
dec
and
call
and
jo
jne
inc
sti
loope
adc
jg
sbb
cld
sub
jl
xchg
retf
gs
mov
sbb
int
scas
cmp
retf
shl
pop
or
test
jp
push
dec
out
lock
ins
adc
retf
leave
and
pop
xchg
or
push
cmp
rol
jp
(bad)
fwait
stos
xchg
mov
mov
xchg
ror
fs
push
mov
out
jns
inc
imul
call
dec
sbb
mov
mov
push
(bad)
dec
out
pop
and
mov
sub
and
cmc
test
sub
(bad)
int3
pop
test
jecxz
or
inc
inc
cdq
dec
daa
jnp
stos
dec
jle
ret
xchg
fist
in
ja
push
jge
push
inc
(bad)
or
enter
dec
jle
or
adc
or
ja
out
xchg
gs
adc
(bad)
push
ret
cmp
add
jne
pop
adc
jae
xor
aam
push
sbb
inc
pop
mov
loop
retf
mov
jle
call
sbb
test
ins
mov
jns
inc
outs
adc
jge
push
push
fld
or
in
mov
cmp
push
sbb
sub
shl
ins
mov
icebp
jp
adc
mov
mov
xor
xchg
pop
mov
or
add
jne
push
mov
sub
inc
std
adc
inc
xor
ins
add
pop
sbb
cmp
dec
test
ror
test
and
imul
mov
mov
add
jae
popa
rcr
mov
xor
iret
pop
add
cmps
cmp
jb
rcl
out
cld
call
mov
sti
fadd
shl
lods
jne
ss
in
pop
daa
mov
mov
sahf
jmp
pop
adc
imul
aam
icebp
cmc
mov
dec
popa
fwait
or
nop
lea
mov
push
add
sub
xchg
cdq
div
jb
push
push
jecxz
xchg
add
jo
and
add
cdq
dec
and
add
ins
mov
das
add
jecxz
cwde
sbb
inc
xchg
adc
and
fidivr
call
mov
ret
xchg
add
in
jae
pop
fs
cmps
lock
and
pop
pop
jbe
mov
cmp
ins
je
push
pop
and
into
loop
xchg
pop
cmc
push
(bad)
pop
dec
pushf
pop
sbb
scas
fwait
(bad)
mov
mov
push
in
pop
jmp
mov
les
jnp
adc
into
in
movq
jg
cs
out
dec
add
sub
mov
imul
rol
mov
inc
push
les
cmp
add
mov
or
mov
movs
retf
imul
test
fs
int
cmp
in
(bad)
repnz
lahf
jo
dec
push
sbb
test
js
(bad)
sbb
lahf
mov
mov
lods
jae
aam
pop
mov
leave
imul
cld
jmp
or
das
jp
mov
push
arpl
fwait
in
xlat
fcmovnb
sub
and
sbb
aas
mov
pop
movs
adc
lods
sub
and
aam
stos
inc
loope
sbb
mov
mov
push
aam
dec
aas
dec
scas
cmp
fstp
div
push
mov
or
pop
xor
jmp
adc
inc
hlt
pop
push
dec
pop
stc
mov
jno
loop
dec
xchg
jmp
sub
icebp
mov
xchg
scas
hlt
cwde
xchg
dec
loop
outs
(bad)
mov
or
test
stos
mov
hlt
daa
nop
cmp
xchg
mov
mov
xor
mov
or
sti
inc
sar
push
(bad)
pop
sub
jo
jmp
fcomp
inc
push
mov
gs
push
(bad)
test
mov
iret
cmps
repz
xchg
repz
inc
cdq
cmps
xchg
pop
add
(bad)
stc
adc
sub
cmp
mov
mov
mov
mov
test
outs
xor
jmp
jne
mov
cmp
cmp
popa
ins
in
push
xchg
outs
xor
in
add
aas
mov
hlt
sub
(bad)
retf
lods
xchg
mov
cmp
mov
dec
adc
fnstcw
cmps
pop
and
mov
xchg
and
idiv
inc
sbb
add
mov
lods
nop
lods
fsubr
adc
push
jns
jmp
(bad)
jae
ret
btc
(bad)
dec
push
add
mov
clc
aaa
in
dec
or
mov
and
clc
test
mov
jbe
ins
sbb
iret
outs
xchg
push
mov
movs
int3
jg
push
aam
adc
(bad)
(bad)
scas
adc
jle
jb
pop
xor
push
(bad)
es
jmp
mov
mov
pop
(bad)
mov
and
mov
jge
arpl
xchg
and
mov
xor
std
sbb
jns
xchg
adc
xchg
enter
mov
mov
lods
adc
jmp
repz
push
out
retf
loop
enter
cli
pop
pop
sub
cmp
jbe
mov
fwait
(bad)
(bad)
test
mov
xchg
sbb
push
call
ffreep
ss
adc
dec
or
in
shl
cmp
lds
mov
or
bound
xchg
in
daa
mov
mov
add
(bad)
idiv
xor
pop
in
in
jmp
inc
fnstsw
fistp
mov
test
pop
clc
fcomp
aam
xchg
pop
xchg
dec
int
sahf
(bad)
sbb
ror
sbb
sbb
xchg
in
fiadd
sub
adc
and
pop
repnz
jmp
mov
lods
xchg
popf
pop
test
out
jns
jge
jmp
jp
xchg
jno
pusha
pop
and
ds
jno
jo
in
fild
adc
cmp
mov
lods
jge
test
loope
mov
movs
out
psubsb
repnz
xchg
movs
push
mov
in
push
data16
pop
(bad)
adc
loope
jb
add
push
cmp
fucom
mov
mov
repnz
stos
aas
loope
and
jg
cdq
xor
ins
sub
cmps
fwait
ss
jge
enter
icebp
jne
fs
add
cmp
out
mov
mov
jl
adc
test
dec
adc
stos
fdivr
xor
inc
sub
xchg
inc
xor
jbe
or
sbb
cwde
(bad)
out
dec
jp
adc
jg
mov
jmp
in
fmul
call
imul
int
adc
mov
sub
movs
ficomp
xor
je
xchg
mov
or
imul
sbb
add
ret
ret
inc
mov
mov
scas
add
mov
jno
stc
pop
aas
jno
sub
cmps
pop
das
scas
xor
sub
cmp
dec
cs
out
pusha
push
inc
repz
pop
xor
enter
pop
push
ss
inc
mov
fsubr
ret
sbb
jmp
push
outs
pop
inc
push
loop
fld
dec
mov
ret
jle
ror
lds
inc
dec
test
call
pop
sahf
cmp
sub
fsub
scas
push
mov
mov
mov
cmp
sub
shl
cmp
fisttp
sbb
loopne
mov
fucomi
sub
retf
ss
retf
inc
shl
xchg
mov
(bad)
stc
inc
inc
xor
xchg
jo
movzx
ins
cmp
xlat
pop
fsubr
mov
adc
sub
in
out
cmp
mov
fwait
movs
mov
ss
xchg
jbe
test
test
push
add
popf
loopne
push
mov
sbb
sub
ret
add
or
jae
loopne
add
popa
mov
iret
pushf
mov
cmp
pop
add
shl
es
mov
inc
leave
adc
retf
fsubr
popa
xor
inc
je
xchg
inc
jl
xchg
(bad)
pop
pusha
and
sbb
std
mov
cmp
push
dec
into
shr
retf
bound
dec
(bad)
push
clc
jp
ss
mov
push
sahf
pop
ror
stos
inc
fiadd
xchg
pusha
xchg
jns
pop
sar
sbb
cmp
lahf
fldcw
inc
nop
or
xor
je
mov
or
imul
mov
or
dec
xchg
dec
aad
stc
pushf
ins
xor
sub
sub
test
out
lahf
aad
fwait
xchg
mov
pop
test
int3
outs
daa
cmp
dec
and
adc
cwde
mov
cmc
mov
fwait
in
pop
inc
out
in
xlat
out
aad
or
ins
aaa
outs
add
jecxz
std
sahf
lock
call
pop
add
xor
imul
dec
mov
(bad)
mov
mov
dec
pop
inc
cs
mov
sub
rol
push
fld
dec
ftst
mov
cmp
dec
jp
je
mov
sbb
leavew
and
call
fs
jge
(bad)
movs
test
jp
std
add
jmp
(bad)
(bad)
mov
retf
sti
add
fidiv
and
fbld
pop
inc
in
mov
jno
lock
mov
xor
lods
mov
sbb
test
cwde
xor
out
out
jae
(bad)
push
mov
jge
lods
(bad)
pop
sbb
inc
es
movs
jecxz
addr16
lds
jecxz
jo
psrlw
jl
(bad)
mov
retf
jae
push
icebp
pop
inc
mov
mov
sti
xlat
mov
ret
gs
enter
cdq
sbb
fdivr
push
dec
or
(bad)
cli
pop
mov
or
outs
mov
dec
xchg
je
add
ret
fwait
stos
dec
push
jae
mov
push
cwde
aas
call
jnp
or
cmps
cld
mov
and
push
jmp
addr16
fcom
push
adc
mov
sbb
mov
cld
dec
ss
fs
adc
sbb
(bad)
pop
cmp
add
mov
cmp
inc
pop
push
aaa
fs
shr
outs
test
jne
pop
mov
(bad)
jnp
push
sbb
dec
test
(bad)
sbb
cwde
xchg
fimul
pop
xchg
adc
loope
lods
hlt
repnz
push
jmp
cdq
mov
cwde
mov
push
push
daa
ret
jmp
xor
stos
retf
jmp
add
xchg
push
sub
mov
jecxz
test
push
sbb
xchg
fbstp
sub
shl
ins
fcom
cmp
and
sbb
pop
mov
popf
fs
fidiv
int3
aad
add
xor
cmps
dec
data16
xchg
retf
imul
pop
jmp
xchg
rcr
sbb
push
(bad)
test
mov
cmc
sbb
std
adc
cld
in
shr
div
pushf
dec
les
mov
and
xchg
or
or
mul
add
dec
dec
jge
pop
pop
jbe
add
pop
sahf
ficom
test
mov
pop
(bad)
or
xchg
and
or
push
jb
and
ret
(bad)
sbb
ins
pusha
pop
adc
out
data16
jbe
test
cs
mov
lods
push
xchg
arpl
mov
add
mov
in
mov
and
mov
popf
test
inc
ins
shl
or
iret
into
pop
dec
mov
jp
into
push
jae
inc
pop
mov
add
dec
mov
ds
retf
pop
loopne
cwde
out
adc
stc
inc
cmp
pop
push
dec
jmp
fistp
sti
loop
pop
cs
rol
mov
xchg
lds
in
shl
std
sbb
(bad)
jmp
imul
jmp
out
inc
or
in
arpl
jbe
cmp
das
imul
pop
js
push
and
pop
stc
mov
mov
xor
xchg
mov
jmp
jne
push
scas
sbb
mov
arpl
push
and
adc
lock
mov
pop
outs
or
jmp
cmps
xchg
fwait
int3
or
lods
lds
adc
add
cmp
shl
mov
push
inc
aad
aad
add
ins
nop
inc
sbb
loope
inc
and
mov
mov
aas
mov
inc
cmp
xor
sub
lea
sub
push
push
imul
add
mov
cmp
xchg
das
daa
mov
jmp
sub
push
cmp
icebp
adc
test
mov
xor
and
and
adc
cmps
fadd
and
(bad)
push
xchg
or
jne
cdq
sbb
fmul
xchg
inc
jmp
call
pop
mov
pusha
dec
loopne
aam
adc
std
test
bound
and
js
aam
out
retf
or
arpl
or
test
sub
inc
push
mov
xor
scas
lock
sub
lea
push
push
adc
inc
lahf
mov
mov
xor
mov
cmc
xor
sti
mov
add
push
mov
ins
or
mov
inc
jb
sub
or
jl
mov
aas
jmp
push
pop
fbstp
mov
ss
scas
jne
dec
retf
or
fs
inc
popa
call
clc
xchg
pop
scas
jns
sbb
jg
adc
sub
fs
adc
xchg
(bad)
pop
mov
cmps
add
imul
pop
call
into
cmp
lea
pop
loope
addr16
cmp
(bad)
lods
adc
sti
cmps
mov
xor
jne
ja
daa
bound
shl
ja
add
mov
pop
inc
xchg
pushf
dec
cs
sub
stc
gs
jmp
repz
add
test
movs
jb
xor
in
imul
mov
sub
repnz
mov
dec
xchg
mov
mov
fld
nop
xor
or
inc
(bad)
repnz
xor
mov
outs
jbe
push
iret
add
test
xor
stc
test
cwde
sub
iret
fidivr
xchg
pushf
sbb
fxam
jle
push
retf
mov
ins
shl
xchg
out
movs
into
pop
adc
repnz
clc
add
cmps
xchg
fsubrp
mov
jecxz
shl
cmp
push
cmp
test
in
cs
rol
scas
fbld
adc
jbe
push
pop
lods
adc
xor
jg
not
ret
ss
inc
in
test
mov
(bad)
cld
(bad)
push
vmovddup
rcl
pop
and
arpl
les
jmp
shl
loopne
fcom
inc
mov
sub
daa
fild
adc
push
mov
arpl
push
ins
das
jp
mov
scas
mov
sbb
inc
sbb
rcr
mov
adc
push
and
dec
pop
mov
sbb
sub
nop
pop
rcr
fadd
mov
sbb
out
sub
loopne
jns
fst
or
cmp
pop
mov
test
or
in
cmc
mov
and
add
fsubrp
ss
sbb
lds
jo
(bad)
xchg
jb
sub
imul
push
mov
push
and
adc
repnz
mov
sub
retf
xchg
mov
add
add
sub
or
jno
lock
pop
ror
mov
sub
aam
pop
pop
sahf
xlat
mov
es
jmp
fsub
loopne
adc
pop
jg
inc
or
bound
add
mov
mov
pop
es
js
mov
add
mov
jge
fwait
or
cli
idiv
dec
cmp
xor
jecxz
lahf
fnstcw
xchg
xchg
mov
dec
lods
inc
jg
ret
fdiv
sahf
fdivr
sbb
mov
fsub
ficomp
out
cmp
xchg
push
add
ds
sbb
add
inc
add
mov
sti
rcl
xchg
xchg
nop
dec
mov
cmc
dec
lock
popf
mul
cmc
pop
call
je
mov
pop
ret
mov
mov
push
cwde
pop
inc
iret
loope
mov
rcr
ins
or
pop
call
cmp
cwde
sbb
arpl
push
cmps
xchg
mov
test
je
xchg
out
ficomp
and
aas
push
test
into
ror
sbb
add
cmp
arpl
xor
jmp
jno
into
not
(bad)
xor
sbb
(bad)
jecxz
dec
sbb
fisub
push
in
fs
xor
int3
add
stos
pop
into
mov
jle
sbb
sub
mov
icebp
outs
xlat
cmp
ret
repnz
xor
xchg
aaa
leave
outs
frndint
call
mov
mov
cli
push
popa
cmps
pop
mov
jmp
aad
xchg
cmp
pop
popf
enter
repz
cmps
xlat
or
lds
jmp
jge
(bad)
pop
outs
cdq
nop
clc
inc
xchg
ja
lea
in
dec
sbb
or
xchg
aaa
push
mov
fstp
hlt
(bad)
mov
mov
jecxz
out
inc
scas
in
nop
mov
pop
fst
pop
mov
fstp
sbb
add
or
(bad)
xor
movs
mov
jl
dec
mov
pop
gs
es
iret
cmc
cmc
inc
jl
dec
mov
sub
test
in
or
aaa
lea
sub
or
sbb
pop
mov
out
frstor
cmc
or
inc
xchg
dec
xor
loopne
je
dec
shl
in
call
repnz
sub
rcr
cmp
cmp
cmp
gs
mov
test
retf
in
jg
jns
(bad)
pop
sbb
inc
mov
dec
cmp
xor
sbb
sahf
cmps
jne
loopne
adc
cwde
inc
mov
push
add
push
xchg
jns
mov
mov
cmc
js
xor
cs
jbe
aas
fwait
jnp
pop
rcl
imul
test
pop
clc
inc
stos
xchg
adc
lds
es
nop
jbe
lahf
mov
inc
ret
inc
jno
jge
sub
xor
xor
and
pushf
pop
imul
int3
(bad)
dec
adc
fild
cmp
xor
sub
and
pop
mov
xor
test
das
mov
sub
mov
xchg
mov
and
out
jae
call
lahf
pop
lods
mov
pop
vhaddpd
push
push
pop
cld
adc
loop
push
(bad)
sbb
jno
hlt
jmp
xchg
stos
sbb
mov
rcl
or
retf
enter
jns
jl
cmp
inc
div
das
add
fiadd
xchg
sbb
out
sbb
es
enter
xchg
xlat
add
jb
shl
scas
push
mov
std
pop
mov
stos
ret
sbb
mov
bound
sub
into
adc
call
(bad)
pushf
push
add
nop
mov
jl
mov
xchg
iret
ja
jg
loope
popf
sbb
sbb
push
or
cdq
bound
and
add
jmp
and
stos
jl
addr16
jle
lds
fadd
push
xor
mov
inc
mov
cdq
dec
push
dec
fisubr
shr
xchg
rol
jae
xor
jmp
pop
jbe
adc
sbb
dec
adc
data16
inc
test
aam
imul
add
push
stos
inc
popf
sbb
add
aam
rol
mov
aad
movs
adc
mov
xchg
test
or
std
in
push
mov
idiv
sub
movs
xor
repnz
cmp
mov
movs
sti
into
xchg
mov
lahf
inc
cld
push
or
push
jb
lods
aas
mov
cmp
sbb
call
int3
aaa
mov
popa
sar
lock
xchg
out
xor
shr
or
pop
ss
cmp
mov
push
imul
or
mov
xchg
fst
adc
cdq
xor
jecxz
retf
mov
fadd
(bad)
neg
push
rcl
ror
or
push
aaa
fisubr
dec
cli
test
sub
push
mov
mov
ror
icebp
adc
mov
fidivr
aas
shl
(bad)
test
mov
mov
in
push
pop
in
push
js
sbb
fwait
retf
ror
sar
push
inc
push
and
push
xchg
sbb
pushf
mov
scas
jbe
push
iret
scas
xor
loop
jle
push
mov
mov
pop
jnp
jge
int
data16
mov
clc
pop
jnp
mov
cwde
sub
push
sub
in
xor
pop
dec
cmps
std
leave
push
fwait
add
pop
push
and
rol
lods
(bad)
xor
jnp
jns
pop
scas
scas
sub
mov
sbb
in
dec
hlt
sbb
movs
mov
pop
lods
icebp
jae
jnp
std
rol
cmp
iret
jl
pop
pop
ss
mov
mov
ja
dec
pop
out
dec
xchg
fdivr
cs
push
and
hlt
lods
aam
push
adc
sbb
xor
out
ds
leave
mov
daa
rol
lods
lahf
add
neg
popa
daa
adc
(bad)
pop
push
lsl
jae
push
fld
ja
mov
neg
rol
call
push
jo
in
jg
jle
and
push
inc
dec
push
shl
push
adc
fisubr
cld
jo
adc
out
out
add
loope
mov
pop
push
add
aaa
and
je
adc
jg
mov
les
cwde
xor
sub
je
adc
mov
push
dec
mov
xchg
mov
jno
and
retf
daa
bswap
inc
adc
sbb
and
test
jp
daa
dec
sbb
dec
add
or
add
ins
imul
jnp
jno
add
les
adc
add
sub
(bad)
pop
fs
push
rcl
aas
jmp
(bad)
loope
cmp
mov
hlt
dec
add
(bad)
clc
and
dec
daa
xor
mov
aam
push
cdq
mul
jmp
loop
shl
and
xlat
(bad)
fldenv
cli
in
jle
in
mov
aaa
rcr
retf
or
stc
loopne
push
inc
lds
cwde
scas
stc
sbb
popa
les
inc
jg
call
lock
add
es
inc
jbe
mov
add
jno
es
add
sbb
sub
retf
and
shl
jo
cmp
out
sbb
cmp
cli
retf
lods
es
dec
int
sahf
or
lock
dec
jmp
adc
mov
ins
xor
icebp
adc
addr16
out
or
mov
pop
xchg
sub
push
in
lahf
sbb
adc
sub
mov
push
push
ret
pop
push
cli
fstp
cmp
fmul
lock
mov
in
scas
sbb
and
dec
sub
sbb
jmp
push
inc
ret
daa
jno
push
iret
inc
jo
push
xor
ins
mov
outs
lea
in
jecxz
stos
ds
fldenv
in
and
xor
pop
mov
pop
xchg
mov
cmp
test
push
into
pusha
cmp
adc
(bad)
ss
push
clc
push
outs
lods
hlt
(bad)
(bad)
int
cmp
jmp
sub
movs
loopne
mov
sub
cmp
cld
xchg
xchg
mov
mov
dec
cmp
adc
mov
fistp
and
xchg
lock
or
je
repnz
xor
xor
sbb
pusha
out
in
mov
and
arpl
xlat
mov
scas
ret
sbb
sar
add
mov
leave
or
ret
inc
push
xor
fs
(bad)
clc
repz
pop
mov
hlt
retf
sbb
repz
(bad)
into
shr
test
push
pushf
jno
in
and
jmp
sub
test
adc
cmp
aas
jmp
pop
mov
lods
lods
mov
pop
cdq
rcl
aaa
out
push
loopne
mov
adc
popa
ret
mov
push
jo
jns
push
or
adc
mov
cmp
movs
lds
pushf
idiv
aaa
out
lahf
in
mov
mov
dec
cmp
std
in
int3
shr
out
test
inc
repz
mov
in
popa
jbe
sbb
inc
mov
mov
xchg
mov
fcmovu
pushf
out
xlat
mov
push
fisttp
push
(bad)
mul
fnsave
add
add
fmul
aam
mov
mov
mov
js
xchg
out
pop
fist
mov
xlat
pop
mov
xor
add
mov
mov
jbe
fs
ins
or
test
cmps
add
cmp
repnz
cmp
add
and
sbb
scas
push
jmp
(bad)
mov
mov
dec
adc
out
and
mov
dec
je
jle
ja
loopne
loope
cmp
lock
push
mov
xor
or
and
sbb
ss
cdq
push
jb
mov
stos
pop
mov
xor
pop
push
dec
fcomp
jb
add
data16
enter
cli
iret
ret
push
cld
mov
xchg
xor
mov
inc
mov
xchg
loopne
in
or
add
aam
or
pusha
xchg
cmp
aas
pop
push
ret
test
div
mov
in
retf
jae
pushf
stos
test
push
or
ret
movs
jo
test
out
imul
add
adc
ss
hlt
mul
stc
outs
ror
call
push
fld
(bad)
sub
icebp
mov
mov
jle
popf
(bad)
(bad)
test
mov
arpl
(bad)
in
push
bswap
and
jns
cs
inc
xchg
lods
push
ins
ins
dec
jne
push
sti
call
ret
xor
sbb
jne
mov
loope
ds
add
pop
adc
je
cld
sub
lahf
ficomp
addr16
xor
xor
outs
jge
popf
dec
icebp
aaa
and
jle
xor
movs
push
dec
sub
data16
in
and
and
sar
int3
add
dec
push
adc
add
pop
cmps
stos
dec
mov
jmp
jbe
jl
(bad)
cmps
cs
sahf
xor
pop
mov
call
in
mov
push
sbb
sub
sub
push
fisubr
imul
les
mov
sub
and
mov
sub
add
xor
adc
iret
xor
or
xchg
adc
sub
sahf
dec
sbb
ins
in
xor
enter
and
sar
fmul
inc
stos
push
call
std
inc
aam
rcr
aaa
dec
inc
mov
xchg
sbb
enter
fst
cmp
sub
in
movs
out
aam
in
ins
mov
aad
enter
push
pop
call
fbld
and
push
xchg
nop
fstp
nop
dec
inc
mul
add
das
fwait
stos
or
mov
jo
nop
jbe
inc
and
push
movs
out
mov
mov
jmp
or
xor
and
mov
pop
mov
pop
stos
scas
and
cmp
dec
cmp
adc
and
sbb
add
xchg
aaa
out
loop
mov
xor
les
aad
cmc
dec
add
pop
jne
sub
nop
and
ror
add
jmp
push
mov
jne
dec
add
add
cmp
xor
stc
and
inc
mov
push
xor
mov
mov
jmp
xor
aad
mov
adc
mov
fild
inc
inc
add
xchg
sahf
inc
retf
(bad)
xor
add
(bad)
dec
push
jns
inc
(bad)
sub
cmp
ficomp
dec
add
cmp
sub
dec
cmp
mov
sbb
jmp
ret
cmp
and
mul
shl
mov
scas
push
cld
pushf
sbb
imul
jmp
or
cmp
dec
int
xchg
sub
retf
pop
and
or
jle
lock
add
ror
stc
mov
jl
sbb
cmp
or
sbb
dec
mov
loop
jmp
cmc
push
inc
fild
mov
sbb
sahf
mov
ret
ds
add
xor
icebp
mov
inc
pop
ds
es
(bad)
jle
mov
xor
push
jmp
mov
inc
mov
mov
imul
fldcw
aad
push
ret
xchg
mov
push
mov
stc
xchg
push
out
test
sar
fld
cdq
js
test
fnstsw
push
stc
jno
lods
add
cmp
outs
addr16
movs
add
(bad)
push
outs
sub
add
and
call
icebp
pop
mov
mov
in
and
sub
loopne
inc
push
cwde
sub
cmc
sbb
(bad)
pop
gs
fcom
ret
(bad)
test
fsubr
adc
or
bound
stos
sbb
and
dec
adc
adc
mov
daa
push
or
popf
rcr
movs
push
movs
ins
retf
add
sti
sub
out
xchg
cmps
cmp
adc
loope
jmp
lds
int3
cmc
sub
test
or
push
retf
test
das
cmps
inc
iret
adc
dec
cwde
add
ret
call
imul
lds
xor
xor
mov
(bad)
mov
mov
sbb
jg
fs
stc
adc
xchg
outs
or
pop
imul
push
and
les
xchg
xor
call
dec
jg
sub
adc
xchg
mov
fwait
outs
rcl
sub
jmp
cmp
ss
mov
scas
movs
jbe
inc
pop
mov
call
or
dec
mov
ror
icebp
fild
sbb
outs
loop
ficomp
cmp
call
lock
(bad)
iret
cmp
mov
cld
push
push
arpl
mov
dec
or
aam
push
mov
test
loopne
push
xor
adc
sbb
push
jbe
mov
out
inc
push
in
les
pop
ss
fwait
push
or
adc
mov
addr16
adc
ret
enter
push
movs
jmp
push
fistp
loope
cmps
pop
fdiv
or
adc
leave
push
and
mov
sub
sbb
(bad)
or
sub
popf
hlt
and
fist
scas
je
out
mov
fmul
mov
out
sub
and
or
mov
sbb
dec
inc
mov
outs
aaa
sar
xchg
sub
xchg
xchg
fldenv
hlt
and
ja
out
xor
and
in
push
mov
lods
add
data16
cdq
jle
push
scas
inc
div
push
jp
dec
inc
pop
mov
gs
lods
xchg
xchg
pop
(bad)
sbb
int3
std
jb
enter
stos
jl
dec
xor
shl
adc
stc
test
std
outs
pop
push
mov
xchg
je
enter
jp
pop
mov
mov
sti
mov
adc
xor
mov
mov
sub
push
imul
xchg
ds
fbstp
addr16
stc
push
mov
or
xor
jne
loopne
xchg
add
dec
mov
mov
sub
mov
ins
sub
add
push
sub
clc
inc
into
aad
push
or
mov
lahf
jmp
pushf
cs
inc
rcr
daa
fmul
xor
add
in
test
in
sbb
xor
fsub
xlat
mov
mov
test
test
jb
and
sbb
xchg
cld
cdq
pop
enter
je
ins
sbb
xchg
push
int3
icebp
mov
mov
into
push
outs
cmp
mov
iret
xchg
ins
or
popf
jp
pop
push
xchg
shr
jle
loopne
lods
popa
mov
fnstenv
mov
imul
mov
fxam
arpl
js
mov
mov
adc
or
in
aaa
cmc
(bad)
and
fld
and
dec
xchg
jl
arpl
rol
cmps
ins
mov
rol
das
jecxz
mov
jp
sub
data16
xor
shl
inc
stc
test
inc
and
push
fsubr
jmp
lds
pop
arpl
fst
out
(bad)
stc
push
jno
pusha
fimul
sbb
jg
jae
add
mov
xor
inc
sbb
mov
add
out
sbb
(bad)
enter
(bad)
fisttp
mov
test
in
xchg
inc
enter
bound
pop
mov
repz
les
cmp
je
mov
rcl
mov
mov
mov
cmc
sub
add
ret
movs
sub
sub
je
inc
xchg
rcr
idiv
pop
cmp
aam
(bad)
xchg
inc
add
pop
xchg
dec
ins
sub
adc
push
inc
push
jg
inc
mov
pushf
inc
pop
dec
cmp
inc
mov
ja
lods
data16
push
push
push
jb
shr
scas
mov
idiv
in
repz
cmp
bnd
pop
push
mov
lds
jl
inc
and
push
jle
jp
mov
cmp
cs
fdiv
push
and
and
adc
popf
add
test
test
inc
inc
mov
push
xor
ds
iret
push
ret
aas
add
jmp
arpl
mov
xchg
sbb
sbb
inc
sbb
mov
mov
push
fidivr
add
sub
mov
or
rol
push
cwde
loope
lock
dec
lock
xor
push
inc
ins
adc
or
dec
int3
and
inc
loope
jecxz
mov
xchg
ret
sahf
adc
push
cmp
loope
mov
fisubr
jo
dec
pop
jb
jae
dec
and
imul
nop
int3
pop
sbb
iret
inc
div
out
jl
lock
(bad)
mov
dec
retf
and
stc
ds
mov
inc
repnz
add
in
push
in
data16
push
adc
aas
or
inc
loopne
sub
fimul
xchg
ins
dec
mov
xchg
retf
test
fdivr
mov
pop
or
loopne
pop
cmp
fistp
xchg
sub
pop
xor
dec
and
sbb
test
inc
(bad)
jmp
xchg
mov
in
xor
sub
inc
ss
inc
outs
(bad)
test
shl
cmps
xor
mov
inc
stc
push
jmp
jecxz
cs
mov
pop
loop
dec
out
out
pop
or
jp
adc
pop
xchg
add
mov
mov
dec
outs
leave
and
dec
jns
dec
xor
or
imul
iret
xor
aas
in
cmps
jae
lods
mov
dec
cmc
jae
push
jns
imul
fiadd
sti
popf
fsubrp
ja
sub
out
sahf
popa
inc
pop
xchg
inc
mov
rol
sbb
jecxz
xchg
mov
stos
mov
movs
outs
fdiv
lods
mov
ret
imul
lock
dec
xor
adc
sbb
add
out
movs
test
cmps
shl
repz
lock
jg
or
mov
mov
jl
mov
(bad)
iret
adc
fist
cmp
adc
(bad)
test
vcvtsi2sd
call
mov
xor
or
sahf
mov
cmp
cli
(bad)
aad
stc
stc
fidiv
scas
cmp
and
mov
cmp
out
mov
ds
or
or
pop
bound
or
scas
pandn
dec
jle
jg
xchg
add
cmp
int
fisttp
pop
lea
dec
push
sbb
shl
add
mov
cli
sbb
push
jmp
sbb
idiv
pop
sbb
test
xchg
push
xchg
lods
jnp
fs
jno
outs
bound
sbb
xchg
cmps
mov
mov
fsubr
sub
outs
mov
cmps
(bad)
in
pusha
pop
jb
jae
dec
adc
mov
pop
out
xor
out
fs
pop
outs
cmc
int
(bad)
push
inc
mov
add
dec
into
hlt
hlt
ja
std
xchg
dec
cmp
mov
imul
sbb
iret
add
aad
push
dec
sub
int3
cwde
outs
(bad)
enter
xlat
push
pop
stos
xor
pop
xchg
jge
fs
popa
pusha
sar
push
daa
(bad)
ror
push
ror
sbb
cwde
cwde
inc
inc
push
dec
(bad)
aaa
or
retf
lods
ds
lock
into
inc
xchg
ss
out
fist
push
sub
pop
stc
jmp
rcr
cmp
adc
loope
lods
mov
std
aaa
int
out
(bad)
xor
imul
loop
push
out
xor
push
dec
xchg
rol
xchg
mov
jp
jmp
or
add
pop
mov
mov
mov
adc
and
lea
test
imul
sub
ret
sti
ss
aad
inc
pop
push
cmp
mov
mov
xchg
push
dec
mov
(bad)
loope
pop
mov
mov
or
int3
jmp
movntq
xchg
sar
dec
jle
adc
rcr
and
cld
dec
sti
iret
add
cmps
add
test
test
push
mov
cld
xor
push
leave
bound
dec
in
mov
sbb
jb
jmp
(bad)
ror
inc
pop
test
jecxz
inc
in
das
aaa
pop
jb
push
(bad)
aad
sahf
inc
mov
arpl
push
rol
jae
fdivr
mov
stos
adc
pop
shl
and
mov
out
inc
jl
mov
mov
repnz
fistp
jae
pop
mov
mov
pop
add
push
adc
adc
test
pusha
pandn
xlat
dec
xchg
dec
dec
jge
or
shr
ja
test
cmps
mov
push
in
xor
sti
sub
cmp
xor
dec
pop
(bad)
imul
ret
adc
std
stc
sub
push
fdiv
sub
dec
push
xchg
jmp
and
push
jp
xlat
stc
imul
inc
and
nop
aam
scas
daa
dec
jbe
test
lods
lock
inc
xlat
(bad)
sbb
dec
fisttp
fidiv
mov
xchg
mov
jbe
pop
jo
pop
push
push
leave
bound
stc
jge
mov
ror
popa
cmp
fs
adc
addr16
pop
dec
push
inc
inc
push
cmc
push
or
pusha
sbb
shl
xchg
scas
movs
in
cmps
xchg
xchg
adc
je
push
nop
push
ins
int3
xchg
lahf
push
xor
push
jle
mov
add
les
(bad)
mov
fistp
jmp
movs
pusha
fisubr
hlt
frstor
sub
addr16
pop
jmp
mov
cli
sbb
jle
mov
(bad)
bound
or
lds
and
cmp
shr
or
push
dec
add
push
es
mov
pop
inc
iret
mov
jo
mov
sar
add
inc
inc
mov
in
in
jnp
mov
lahf
inc
push
mov
mov
ins
lock
pusha
(bad)
aaa
fild
push
sbb
inc
dec
stos
out
aaa
repz
fist
push
jmp
clc
jecxz
sbb
and
jle
ds
repz
test
pushf
mov
outs
sbb
mov
push
pop
nop
call
add
lods
sbb
jg
enter
cmp
mov
mov
call
jge
mov
add
iret
aas
dec
je
pop
cmp
jmp
adc
mov
pop
jb
shl
cli
push
xor
sbb
ret
mov
pusha
call
sbb
cli
stos
pop
fisubr
out
rcl
mov
in
mul
dec
dec
mov
rcl
mov
sti
daa
adc
xor
daa
rol
sbb
mov
xor
dec
dec
mov
mov
aad
mov
xlat
outs
loope
dec
ret
jns
xor
push
inc
scas
add
out
pop
sub
push
adc
lods
and
pusha
xchg
cmp
push
ror
test
inc
pop
sub
xlat
push
push
jmp
scas
jp
pop
jg
addr16
xchg
div
rol
scas
dec
stc
rcl
xchg
jmp
fnstsw
frstor
sub
jae
sub
adc
adc
in
cmps
and
out
out
ficom
lods
xchg
(bad)
repnz
inc
loop
in
or
mov
(bad)
movs
add
inc
out
stos
sub
or
add
and
jmp
mov
push
rol
scas
add
arpl
nop
sar
repnz
mov
in
out
retf
repnz
push
aad
inc
mov
rcr
or
loopne
(bad)
xor
and
xor
pop
jmp
mov
adc
cmp
out
pop
cmps
sub
inc
mov
cmps
fisubr
jle
loopne
push
and
xchg
ins
or
inc
mov
push
jmp
scas
and
cmps
mov
inc
cli
test
ds
test
push
daa
out
inc
mov
cld
stc
cs
pcmpeqb
daa
inc
sub
xchg
xor
xchg
push
out
cwde
test
cs
das
shl
jno
loop
inc
or
pop
sahf
inc
inc
iret
call
and
jno
in
jo
retf
loope
xor
jb
popa
and
ror
jle
outs
dec
scas
fidiv
dec
loop
mov
xor
and
and
mov
jbe
cmp
test
pop
push
shl
sbb
sar
cmp
push
sar
nop
daa
and
mov
sbb
mov
mov
cdq
mov
leave
je
adc
pop
jecxz
mov
sbb
out
pop
outs
push
outs
arpl
inc
push
pop
inc
xchg
mov
mov
xor
xor
iret
mov
mov
pop
cmp
mov
pop
mov
adc
loop
push
adc
jno
dec
and
(bad)
adc
neg
xchg
stos
cmp
jecxz
test
inc
test
mov
lds
push
rcl
push
movs
jmp
mov
pop
or
inc
push
adc
cs
or
and
xchg
(bad)
push
cmp
test
retf
mov
movs
inc
add
jle
push
leave
jmp
test
cli
stos
call
lea
gs
lahf
jecxz
xchg
pushf
into
imul
rcr
push
sub
mov
imul
jp
imul
aad
movs
push
xchg
dec
imul
pop
fisubr
bound
cdq
xchg
aam
xor
or
push
in
repz
jns
or
sahf
or
adc
mov
ins
dec
out
les
cmp
arpl
stos
lods
sar
lods
sbb
icebp
out
and
lahf
je
fistp
sahf
mov
pop
lock
push
push
(bad)
dec
call
sbb
(bad)
bound
pop
cdq
aaa
push
scas
into
xor
xchg
push
xchg
pop
inc
retf
sub
mov
inc
enter
inc
sbb
jmp
push
movs
jo
mov
jle
pop
push
cdq
add
jmp
fisttp
mov
frndint
(bad)
in
cmp
pop
sbb
fst
in
dec
out
lock
in
lods
sbb
mov
xchg
mov
lods
je
or
scas
push
ins
aas
mov
jno
bound
arpl
arpl
fimul
shl
mov
add
ficom
(bad)
xor
imul
out
xchg
pop
xchg
fld
fisub
jbe
fwait
(bad)
jle
clc
lods
jmp
jo
das
sahf
daa
push
push
cmp
push
test
sub
mov
pusha
mov
fidiv
icebp
or
mov
pusha
fwait
jmp
clc
xor
push
fbstp
sbb
pop
in
enter
outs
sti
ret
jns
fist
push
and
(bad)
cmp
push
loopne
fcomp
jmp
(bad)
movs
mov
sti
out
xchg
test
test
or
sbb
repz
push
and
pusha
and
push
stos
inc
sub
les
mov
hlt
in
cwde
mov
adc
sti
sub
push
mov
aam
cmp
xor
retf
sub
xchg
loop
shr
pushf
push
sub
push
cmovb
add
sbb
stc
xor
push
mov
inc
mov
movs
je
sub
ds
mov
daa
xor
sti
inc
int3
int3
xchg
sar
les
(bad)
out
or
mov
jo
jmp
in
ja
jle
loop
jmp
mov
add
cmp
dec
jns
std
mov
push
mov
cld
fadd
and
fst
dec
jge
lods
mov
pop
clc
imul
arpl
mov
sbb
xor
jne
inc
lods
lahf
fwait
jne
ss
cmps
test
push
pop
call
and
std
pop
jne
out
dec
inc
loope
test
stos
mov
imul
movs
in
lods
xor
or
movs
and
test
add
pop
(bad)
ds
les
sub
ret
mov
test
aas
arpl
in
dec
ret
(bad)
ret
mov
rcr
sbb
mov
adc
dec
mov
ficom
pop
xor
lea
add
rdpmc
gs
jb
in
add
sar
pop
iret
fisubr
mov
bound
xchg
sub
push
sub
ret
sbb
sub
call
adc
hlt
shl
xchg
aam
fidiv
pop
enter
cmps
push
pop
mov
cmc
fst
mov
dec
jg
push
adc
jmp
mov
dec
xlat
(bad)
add
jne
out
aad
out
jns
(bad)
sbb
mov
movs
sar
shl
aad
ins
ror
ins
popf
and
and
pop
dec
or
pop
dec
imul
lock
lahf
push
cmp
das
mov
adc
cmp
mov
push
ret
cmp
or
outs
push
xchg
mov
loop
pop
int3
stos
cmp
pop
rep
push
cmp
stos
pop
loopne
pusha
ret
out
out
push
jle
jmp
das
xchg
jmp
rcr
or
fisub
xchg
sub
enter
or
enter
pop
inc
inc
add
std
dec
pop
push
inc
cld
lods
mov
iret
or
inc
imul
mov
cmps
retf
(bad)
mov
outs
(bad)
jbe
rcr
ret
add
mov
pop
pop
jg
in
xchg
jae
xor
mov
xchg
fs
lods
and
inc
adc
mov
pop
test
cmp
jge
enter
jbe
(bad)
jb
call
jnp
nop
in
and
push
ret
out
and
fldenv
ins
jbe
mov
fmul
sub
fimul
pusha
add
add
xchg
push
push
xor
into
sub
push
mov
cmp
sbb
fwait
cmp
addr16
out
call
mov
inc
lods
int
sbb
pop
scas
fs
pushf
sbb
adc
call
sub
test
ins
adc
add
cmp
daa
outs
popa
das
dec
into
shr
pop
enter
out
test
pop
iret
inc
xchg
out
push
scas
mov
je
pushf
mov
inc
dec
out
and
fist
fst
pop
push
add
aaa
into
mov
xchg
push
add
adc
test
mov
jmp
inc
mov
add
mov
pop
inc
imul
stos
dec
push
aas
mov
adc
int3
jmp
mov
test
bound
aas
test
xor
mov
xchg
push
fs
dec
hlt
sbb
mov
mov
in
jg
inc
outs
leave
stos
mov
mov
addr16
mov
jg
icebp
rcr
dec
lea
cmps
call
xor
(bad)
fidiv
fwait
push
mov
cmp
ret
pop
stos
iret
cmp
ds
in
es
mov
sbb
stos
mov
dec
aam
out
mov
pop
(bad)
or
loop
cs
push
jge
sub
fild
enter
shl
rcr
repnz
aas
dec
push
pop
fcomp
mov
mov
jnp
pop
idiv
xchg
adc
mov
or
stos
pusha
mov
jo
adc
(bad)
in
dec
jno
adc
and
aad
xchg
push
sahf
mov
xor
jno
cmp
or
pop
in
mov
mov
jbe
or
in
daa
jmp
jmp
adc
in
out
xchg
in
aam
mov
mov
jne
into
adc
add
xor
cmp
jmp
out
sbb
jg
fidivr
sbb
mov
mov
arpl
sbb
popf
mov
lds
push
stc
imul
jg
lea
dec
in
cli
dec
cmc
lods
fs
test
or
add
cmp
rcr
add
lahf
mov
mov
jge
cmps
jnp
or
push
mov
or
out
mov
out
scas
jmp
lea
xchg
pop
pushf
adc
out
push
or
das
lods
adc
imul
bound
fisub
xor
retf
in
jmp
xchg
xchg
fwait
sub
ficomp
inc
dec
sbb
fwait
icebp
outs
lods
loope
outs
pop
stos
xchg
movs
cmp
(bad)
push
mov
fwait
mov
lock
hlt
aam
retf
dec
xor
test
kmovw
sahf
out
mov
jbe
mov
(bad)
shl
sahf
mov
(bad)
adc
setno
dec
dec
(bad)
xchg
aaa
std
mov
cs
fldcw
mov
hlt
int3
cmp
out
test
dec
jmp
mov
push
and
push
jo
(bad)
shl
gs
cmp
mov
(bad)
cmp
xor
cli
jb
mov
sub
test
jnp
stos
ret
repnz
mov
and
xor
repnz
and
pop
ins
inc
mov
dec
push
out
jne
and
or
ds
dec
dec
pop
dec
outs
jae
iret
cmp
dec
sub
arpl
xchg
inc
push
pop
jbe
loopne
inc
push
cmp
or
sbb
sti
nop
in
mov
fwait
jb
jp
jg
sti
ins
adc
pop
std
mov
nop
call
xchg
mov
repz
jne
mov
sbb
icebp
sbb
push
cmp
inc
sti
gs
adc
jmp
arpl
test
loopne
out
dec
and
lods
ret
shl
pop
jne
(bad)
cdq
pop
sbb
pop
jns
pop
push
push
in
pop
out
mov
movs
test
mov
dec
stos
pop
data16
js
cmp
enter
mov
test
scas
lahf
xor
add
sar
pop
movs
jle
mov
(bad)
cmc
mov
inc
cmps
pop
inc
mov
fdivp
or
or
jns
or
div
(bad)
test
scas
ds
inc
push
ins
cmp
out
inc
sbb
addr16
inc
mov
scas
or
test
mov
mov
adc
jb
and
clc
add
inc
inc
jecxz
cmp
or
icebp
ja
xor
or
iret
xor
ret
cmp
ja
test
les
sub
jle
mov
push
adc
or
retf
fwait
inc
mov
or
push
adc
mov
std
rol
xchg
adc
push
pop
push
mov
je
sbb
cli
xlat
and
scas
inc
outs
mov
dec
jge
test
std
jecxz
sub
mov
jae
adc
leave
xor
xor
pop
jnp
xchg
and
mov
rcl
iret
imul
add
repnz
xchg
nop
push
retf
add
jnp
mov
adc
xor
push
stos
int
dec
mov
mov
test
int
ss
mov
push
aam
lods
adc
les
xor
cmp
mov
jno
jno
shl
mov
mov
lock
inc
sbb
jo
imul
dec
push
xchg
test
lahf
mov
mov
inc
add
mov
xchg
movs
cdq
sbb
test
dec
ja
lods
je
fidiv
jb
cmp
mov
dec
mov
sbb
arpl
mov
pop
pop
fs
mov
rol
rcl
mov
pop
int3
retfw
sub
lods
sbb
mov
push
inc
lahf
cmp
ja
push
add
outs
dec
push
xchg
ror
sub
cmp
call
shl
test
ins
inc
std
fimul
sub
and
push
int3
js
push
dec
lods
dec
sbb
mov
jmp
or
mov
js
xlat
mov
or
add
mov
fwait
cmp
aas
xor
mov
mov
mov
add
add
push
fild
sub
test
adc
daa
pop
fcom
mov
push
stos
fldcw
push
inc
xchg
xchg
jno
sahf
push
fiadd
clc
(bad)
std
lea
outs
ds
test
inc
into
push
shl
int
rcl
lds
mov
xchg
test
pushf
dec
call
jg
retf
and
mov
jb
xchg
data16
call
pop
xchg
in
lods
aam
xor
pushw
jmp
jne
jecxz
aad
jecxz
rcr
call
adc
jg
fst
sub
sbb
test
arpl
mov
repz
cmp
icebp
es
sbb
dec
les
add
sbb
icebp
in
ds
inc
and
jo
dec
push
test
push
ror
adc
adc
pop
outs
fdivp
outs
inc
xchg
cwde
push
jge
not
adc
dec
add
imul
aam
shr
push
add
sbb
aam
cs
inc
or
pop
push
ins
(bad)
cmp
out
lds
dec
cmp
daa
mov
push
xchg
fcom
sti
fwait
add
mov
adc
cmps
inc
mov
fcomip
dec
repnz
add
fwait
sub
adc
leave
adc
mov
lds
mov
icebp
retf
gs
adc
xor
ins
add
ins
ins
mov
sub
fdiv
push
sbb
sub
arpl
push
pushf
mov
loope
enter
push
out
mov
cmp
mov
popf
cmp
test
retf
push
(bad)
mov
jg
jo
cmp
(bad)
dec
pop
xor
jns
cld
mov
cmps
pop
ret
jne
idiv
push
push
and
xchg
int
jle
xchg
mov
or
pop
cmp
aaa
cmova
mov
mov
cmp
cmp
adc
(bad)
(bad)
ret
lahf
sar
push
and
aas
pop
mov
test
jns
or
sbb
sbb
cmp
and
xchg
fs
add
(bad)
popa
xor
cmc
cmps
call
rcl
mov
pop
test
xchg
jno
aaa
and
push
and
cmp
dec
mov
repnz
(bad)
adc
in
sub
in
pop
sub
into
cs
mov
retf
or
sbb
fstp
and
cmp
push
cmp
add
mov
cmp
out
es
or
stos
mov
scas
or
and
jp
test
xchg
ja
and
xchg
fs
out
sub
in
add
sub
push
adc
sub
out
mov
push
add
adc
pop
or
mov
ror
movs
test
fs
daa
push
je
jge
test
lahf
sbb
test
or
jb
add
sbb
dec
dec
add
fdiv
mov
imul
clc
int
dec
adc
push
pop
pop
leave
inc
je
adc
pop
jns
mov
aad
test
movs
cmp
jle
sahf
sbb
test
test
sub
stc
inc
and
pop
and
es
mov
xor
sbb
and
loope
dec
dec
rcl
xlat
jb
push
and
dec
xchg
into
mov
push
shl
push
out
out
outs
push
push
fnstsw
outs
fcmove
xor
push
cmps
xchg
daa
mov
mov
std
dec
outs
fsubr
cmps
adc
cld
mov
cmp
sub
mov
scas
lahf
and
nop
pop
lock
lock
mov
enter
and
xor
dec
mov
movs
mov
or
adc
scas
fmul
cmp
imul
aam
dec
cmp
or
loopne
jno
loop
and
and
or
int3
pop
rep
leave
push
hlt
es
int3
ins
cdq
inc
pop
cdq
fimul
lds
ds
jle
mov
pop
cwde
test
scas
loop
or
inc
or
mov
sub
mov
adc
mov
xor
push
sahf
jg
lahf
pop
pop
jg
aad
(bad)
mov
adc
mov
adc
repnz
push
(bad)
adc
iret
dec
jae
pushfw
cmp
dec
ret
pop
test
cli
sbb
add
shl
scas
in
(bad)
xor
xchg
shr
leave
mov
adc
cli
sub
add
shr
mov
test
sbb
int
(bad)
repz
add
outs
mov
retf
out
shr
lods
ret
loop
xor
clc
add
sti
pop
or
out
sub
xchg
or
out
pop
repz
arpl
push
loop
test
imul
inc
and
mov
cmp
pop
lods
push
icebp
je
inc
popf
mov
add
adc
stos
push
dec
xchg
mov
xchg
ja
push
retf
sub
adc
adc
cmp
xchg
loop
mov
je
ss
push
jae
je
add
mov
sub
mov
fwait
xchg
cmp
xlat
dec
inc
xchg
hlt
(bad)
jg
pop
pop
push
and
aad
in
cmps
(bad)
call
add
jmp
popf
cmp
mov
lock
out
jle
test
dec
fstp
in
push
xchg
sbb
dec
mov
leave
and
(bad)
movs
hlt
imul
ret
push
rcl
(bad)
pop
fwait
sbb
mov
or
adc
sar
inc
xlat
int
mov
dec
addr16
cmp
(bad)
test
lea
add
fistp
xchg
(bad)
stc
xchg
mov
sar
ins
ja
ror
pop
pop
pushf
in
mov
adc
dec
mov
ins
push
sbb
push
test
nop
and
in
bound
mov
(bad)
aas
cmp
jle
rcl
jne
pop
fild
fidiv
mov
push
ret
stos
pop
dec
clc
loopne
sbb
mov
or
ins
(bad)
jb
and
or
aaa
bswap
stos
pushf
mov
push
adc
clc
add
pushf
gs
mov
cli
xchg
mov
xor
mov
push
mov
bound
mov
dec
xchg
xchg
dec
push
sahf
jle
fisubr
jmp
in
imul
out
add
jp
fcomp
mov
loope
fldl2e
pusha
sahf
mov
xor
mov
xchg
sub
stos
imul
push
mov
ss
outs
aam
xlat
cli
sbb
or
cld
mov
in
add
outs
sbb
push
test
and
jg
(bad)
xchg
adc
rol
ror
bound
inc
jnp
lock
cmp
jge
ret
mov
test
xor
and
ins
jnp
xor
xchg
mov
pushf
int
test
cli
dec
push
push
adc
imul
xchg
bound
push
dec
and
test
rcl
rol
push
inc
jns
cli
scas
add
sbb
lea
fisttp
(bad)
out
pop
jno
data16
arpl
aam
push
mov
add
push
push
push
add
xor
jl
stc
xchg
adc
mov
sti
in
mov
div
cmps
push
fst
jns
ins
outs
or
movs
xchg
imul
(bad)
push
call
ficom
add
repz
add
dec
add
test
nop
jg
xlat
(bad)
fsubr
xor
enter
adc
push
stos
mov
loope
push
jge
pop
push
mov
mov
mov
jb
cmp
daa
sbb
and
inc
test
adc
gs
stos
(bad)
(bad)
mov
xor
dec
in
iret
jne
mov
imul
dec
scas
sbb
call
repz
outs
call
dec
popf
dec
repz
mov
popa
pop
imul
ins
jle
mov
push
or
or
jg
mov
mov
in
inc
outs
pop
sar
jne
jl
xor
bnd
test
mov
inc
xchg
jp
mov
jl
sub
enter
js
packuswb
cmp
les
ret
(bad)
std
(bad)
adc
das
sub
out
cmps
and
(bad)
aad
retf
pop
pop
cmc
(bad)
push
jbe
fs
nop
das
push
pop
dec
xor
add
ret
sbb
and
or
xchg
in
jb
xor
xchg
scas
mov
ficom
adc
icebp
xor
push
push
ins
in
std
inc
cdq
dec
fwait
ins
inc
cmp
sub
mov
push
push
daa
daa
in
jno
dec
sahf
and
xor
(bad)
xchg
inc
fnstcw
adc
and
in
mov
xlat
ret
cmp
or
jmp
rcl
mov
or
ret
sbb
and
inc
cmp
or
loopne
iret
ficomp
rcl
sub
sbb
shl
or
adc
lahf
pop
adc
inc
mov
dec
mov
mov
retf
sub
call
push
adc
je
mov
dec
xor
sbb
clc
inc
jbe
or
inc
aam
xchg
xchg
in
mov
dec
sbb
icebp
xor
cli
jbe
aad
jno
pop
in
outs
divps
aad
mov
hlt
pop
fs
sub
repz
imul
or
shl
sbb
jne
sti
sbb
xchg
cdq
stos
add
add
in
mov
add
stos
add
adc
xor
or
call
sbb
fwait
les
pop
fnstsw
les
inc
shl
mov
and
add
dec
dec
(bad)
popf
cmps
sbb
mov
mov
mov
xlat
xor
jmp
jg
xor
lea
mov
leave
stos
fidiv
shl
cmp
sub
mov
sbb
movsx
adc
test
jecxz
sub
xchg
je
retf
aaa
xchg
dec
push
mov
test
push
pusha
movs
add
sub
jge
jle
aam
sbb
mov
pop
ficom
cs
retf
call
jg
enter
push
arpl
add
fmul
jl
add
and
push
pop
sub
outs
jb
mov
ror
xchg
stc
into
mov
movs
ret
mov
test
les
lahf
and
das
aam
hlt
mov
iret
imul
inc
dec
das
rol
mov
jecxz
push
in
stos
add
dec
sar
dec
test
retf
jmp
stos
jae
ss
repz
in
dec
push
bnd
(bad)
std
into
pop
adc
push
inc
xchg
push
dec
or
icebp
jmp
dec
sbb
dec
sub
sbb
push
push
ja
dec
stos
mov
movs
jmp
scas
jmp
and
push
int
or
lds
in
loopne
sbb
ss
ret
scas
jg
test
lock
push
and
stos
or
adc
mov
ds
xchg
sahf
jns
pop
or
mov
push
adc
sub
adc
sbb
(bad)
into
pusha
mov
sub
push
mov
js
cs
cmp
movs
mov
and
imul
ds
xchg
jnp
inc
cmp
in
imul
ins
sbb
cmp
or
cmp
ins
adc
jns
ins
or
cs
test
jae
jnp
inc
aam
fcomp
cmps
(bad)
jne
(bad)
xchg
xchg
adc
bound
hlt
cmps
shr
movs
inc
popf
and
std
rcr
test
stc
cmp
leave
aaa
mov
retf
(bad)
inc
cvtpi2ps
dec
mov
int3
test
out
ins
mov
xchg
test
std
mov
and
adc
xchg
add
jmp
push
mov
pusha
test
dec
movs
xlat
mov
push
and
jae
inc
(bad)
rcl
mov
call
inc
sub
loop
aad
add
pop
clc
movsx
push
hlt
dec
ret
jne
jle
imul
xor
out
jns
popf
ins
jg
in
clc
cmp
test
xchg
push
pop
sbb
cmp
in
mov
cmc
shl
call
xor
xchg
cdq
mov
jge
push
ins
adc
stos
test
lahf
dec
mov
lock
je
mov
dec
mov
xor
or
test
popa
mov
scas
cmps
or
icebp
jp
xor
cld
inc
test
gs
adc
sbb
push
cdq
loop
mov
or
jp
stc
pop
lock
pop
int3
dec
xchg
xor
(bad)
popf
mov
rcr
repnz
pop
xor
jno
mov
lea
ins
loop
mov
cmp
mov
lea
xchg
or
inc
dec
jno
cmps
(bad)
sbb
push
sar
jecxz
test
mov
mov
movs
shr
repnz
push
mov
xchg
and
ret
add
leave
dec
dec
inc
sub
stc
mov
mov
call
mov
int3
xchg
xchg
sub
rcl
mov
jns
add
cmp
aam
jnp
mov
or
add
or
push
push
xlat
das
cmp
neg
dec
pop
fcom
cmp
ffreep
cmp
sub
adc
mov
xor
sub
add
adc
sbb
push
xchg
mov
cmps
xlat
fisubr
mov
fnstcw
sub
mov
loopne
sbb
xor
aam
shr
dec
div
dec
mov
mov
add
fucomp
stc
stc
pop
xor
xchg
xchg
loop
(bad)
data16
popa
mov
inc
add
and
repnz
addr16
ror
jle
inc
call
sbb
sbb
jl
and
loope
(bad)
repz
cld
sbb
adc
fld
pop
(bad)
cmp
nop
jbe
out
in
sbb
call
jnp
ins
xchg
or
add
mov
imul
xor
shl
jmp
add
call
icebp
push
mov
repz
pop
pop
sti
or
in
add
bound
cmp
pop
or
xor
rcl
in
inc
lea
xchg
add
push
pop
pop
adc
inc
pop
push
(bad)
mov
sbb
xor
movs
xor
dec
xor
nop
icebp
and
pushf
cmp
ins
out
popf
mov
inc
push
js
ret
aaa
stos
mov
xor
sub
jl
adc
enter
je
mov
mov
popf
pop
pushf
lods
xchg
jle
stos
call
retf
mov
cld
lahf
movs
in
cmp
or
cmp
ins
jmp
sahf
clc
mov
mov
pop
test
mov
movs
pop
cmp
cmp
jecxz
pop
stos
out
mov
mov
sbb
or
test
inc
jns
pop
sub
dec
or
push
mov
sbb
mov
imul
(bad)
add
jmp
ret
mov
add
popa
ds
pop
cmp
call
aad
dec
adc
pop
mov
fidivr
les
add
dec
jle
or
push
call
add
mov
lods
sbb
xchg
ins
mov
add
iret
cmps
outs
xchg
dec
ins
adc
lds
mov
pop
mov
cmp
dec
adc
jns
mov
jno
cmp
and
fld
dec
(bad)
repz
push
xchg
dec
test
cld
lahf
out
(bad)
leave
sub
mov
ret
mov
add
cmp
fistp
xchg
and
pop
(bad)
stos
inc
dec
mov
bound
and
mov
adc
adc
jp
dec
popa
fld
cmps
out
push
push
popa
cmp
xor
leave
retf
cld
mov
add
shl
cmp
or
jmp
int
fisub
xlat
imul
mov
cmp
int
lods
and
cmp
dec
popa
add
mov
cli
xchg
pop
sub
mov
cdq
mov
adc
mov
jge
shrd
jg
push
or
jle
jle
fild
cmp
into
jmp
(bad)
mov
jmp
cwde
cmp
loopne
jbe
movs
inc
imul
inc
push
jnp
imul
xchg
jge
test
cli
(bad)
repnz
arpl
ficom
dec
pop
cmp
fdiv
sub
pop
jns
adc
movs
sub
xor
mov
mov
sbb
cmp
mov
pop
addr16
cmc
(bad)
sbb
aad
ret
dec
sahf
cmps
cmps
cs
jne
pop
push
add
cmp
std
cmp
enter
je
repnz
in
cdq
add
jge
outs
sbb
mov
jg
sbb
xlat
pop
sub
cmp
dec
cli
xchg
pop
inc
push
inc
repz
arpl
int
repz
inc
add
push
inc
sub
inc
icebp
stc
fist
addr16
pusha
aaa
popa
daa
ins
aaa
mov
pusha
inc
sahf
cmp
(bad)
les
outs
adc
mov
dec
push
add
popf
ja
fimul
push
arpl
gs
sub
xor
addr16
lods
sbb
mov
cmp
test
push
xor
xchg
inc
fnsave
gs
pop
cli
test
sbb
sahf
(bad)
mov
xor
mov
dec
pop
int
add
mov
pop
cmps
mov
jbe
fldenv
cmps
out
test
or
jmp
cwde
and
push
iret
pop
jp
adc
push
cdq
call
movs
push
sbb
in
inc
cmc
fldcw
fstp
jmp
jnp
sbb
jg
in
jae
inc
in
jge
or
push
shr
pop
stc
inc
push
cdq
mov
mov
test
pop
retf
add
aaa
test
test
add
stc
push
mov
adc
int
sub
add
retf
add
cmc
or
dec
cmp
xchg
xchg
sbb
out
rol
popa
mov
add
retf
call
rcl
data16
pop
fwait
or
dec
and
imul
ja
(bad)
cli
js
test
push
retf
pop
inc
retf
popa
mov
cmps
stos
push
repz
add
push
aam
mov
cmps
lea
xor
jb
adc
push
pop
test
mov
fadd
icebp
fs
out
jmp
or
cmp
push
xchg
es
cmps
push
mov
div
outs
rcr
mov
push
mov
fadd
mov
cmp
cdq
frstor
das
push
sar
and
pop
fldcw
mov
enter
pop
mov
movs
icebp
adc
jge
mov
xchg
mov
adc
sbb
pop
xlat
xchg
scas
mov
jp
lods
les
sub
add
mov
mov
pop
outs
loop
vaddps
scas
jg
push
xchg
inc
cli
les
mov
mov
and
fnstenv
imul
mov
int
std
neg
add
repnz
sbb
push
mov
cmp
xlat
data16
dec
mov
mov
mov
push
(bad)
mov
push
add
jo
cmps
loope
loop
movs
xor
fsub
ret
cdq
imul
push
fist
sbb
pop
jno
cdq
jmp
mov
fist
ror
xchg
cli
or
dec
shr
add
movs
lods
mov
pop
(bad)
call
jl
dec
mov
ret
hlt
xchg
jl
push
jp
fist
pushf
mov
add
es
push
jl
shr
xchg
xchg
jl
inc
mov
xchg
dec
test
ss
xchg
or
inc
mov
(bad)
lahf
xor
or
ja
and
sub
fwait
in
and
retf
ds
xor
jp
add
mov
out
pop
aad
pop
outs
or
imul
xor
nop
xchg
adc
mov
ss
xchg
inc
mov
jns
cwde
push
out
inc
loop
jp
repz
sbb
jl
fcmovnu
pop
(bad)
imul
out
fwait
mov
pop
outs
inc
mov
rol
shl
add
in
or
dec
inc
stc
cdq
jno
push
lea
das
pop
pop
jnp
out
frstor
fsubr
jbe
xlat
and
xor
jecxz
dec
fstp
out
mov
sub
lods
(bad)
pop
ss
sbb
stos
add
or
jg
dec
cmp
fimul
push
mul
scas
mov
or
repz
ret
loop
inc
jp
ins
cs
mov
mov
sub
mov
inc
pop
mov
div
je
inc
(bad)
repz
and
(bad)
js
inc
pop
inc
adc
lahf
addr16
pushf
push
jmp
mov
lock
sbb
(bad)
mov
sbb
cmp
inc
jae
(bad)
jecxz
enter
lods
ja
(bad)
pop
call
(bad)
ds
mov
push
sbb
sahf
test
in
cmp
push
mov
jmp
std
and
adc
add
and
fmul
dec
jg
mov
lahf
or
push
fstp
and
pusha
jmp
xchg
movs
int
xchg
sahf
or
inc
js
and
rep
pop
lea
js
rol
mov
sbb
or
mov
(bad)
mov
mov
inc
not
aad
stc
(bad)
iret
or
dec
push
cwde
mov
(bad)
jmp
xchg
and
sbb
pop
repz
cmps
(bad)
xor
push
aaa
fsubr
fdivr
or
lea
rcr
shr
xor
int3
daa
xchg
mov
sub
push
clc
sub
clc
les
push
ja
in
ss
fisubr
cli
inc
xchg
test
xchg
sbb
mov
push
lahf
push
or
add
dec
push
retf
xchg
ss
cmp
test
pop
pusha
xor
cld
xor
das
xlat
mov
xchg
loopne
and
jle
cmp
push
xchg
fstp
and
retf
mul
fs
push
dec
fisttp
mov
pop
push
hlt
adc
push
pusha
or
push
mov
scas
out
movs
add
push
hlt
mov
jecxz
mov
mov
bnd
(bad)
mov
outs
jp
add
jl
ret
(bad)
xor
clc
sbb
inc
cmps
inc
int3
dec
dec
pop
movs
mov
imul
aaa
enter
mov
xchg
jp
pusha
add
aaa
bound
sub
out
push
test
pop
sbb
add
lods
(bad)
js
adc
inc
mov
inc
aad
test
ficomp
dec
dec
daa
push
adc
enter
mov
jge
ins
in
push
movs
sub
xchg
mov
inc
push
dec
out
in
mov
dec
(bad)
mov
inc
xlat
out
es
sbb
mov
mov
sahf
add
cmps
imul
je
inc
mov
pop
mov
nop
idiv
rcr
fwait
out
or
(bad)
mov
call
mov
jo
test
mov
jne
shl
jno
push
push
out
and
jge
mov
sbb
xchg
or
add
mov
ret
jb
mov
sbb
popf
ficomp
adc
xchg
cli
test
and
adc
fisubr
repnz
lea
fistp
inc
mov
sub
or
nop
and
adc
lods
jp
inc
sub
fst
outs
jp
mov
cld
stc
int3
push
sbb
sahf
jmp
out
adc
mov
sbb
and
test
push
arpl
jmp
cwde
cmc
pop
sbb
into
xchg
lock
mov
jo
hlt
inc
test
out
invd
in
xchg
sbb
push
adc
cmp
mov
test
cli
jmp
das
es
jmp
and
ret
jns
(bad)
adc
inc
mov
mov
sbb
shl
xchg
xlat
jae
ret
and
icebp
xchg
xor
adc
jp
mov
popf
add
inc
mov
adc
ret
rcr
js
sti
jl
mov
add
inc
mov
jnp
mov
fwait
adc
jns
xchg
lods
leave
xor
push
pushf
dec
pop
xchg
(bad)
lods
int3
mov
mov
add
mov
mov
mov
push
pop
inc
lds
add
loop
mov
sub
imul
(bad)
lahf
movs
mov
(bad)
out
xrelease
arpl
movs
xchg
ds
outs
(bad)
cmps
add
cdq
xchg
scas
clc
mov
adc
jnp
int
push
std
sub
dec
mov
mov
add
mov
push
into
addr16
call
test
not
cmps
fdivr
addr16
fst
jnp
mov
enter
loopne
arpl
mov
les
scas
ins
sahf
dec
push
mov
icebp
mov
sub
fcmovbe
and
fadd
cli
jo
enter
loop
inc
xchg
call
xlat
(bad)
jp
(bad)
push
loope
out
pop
jo
cs
inc
xchg
xchg
sti
fidivr
xchg
(bad)
jecxz
mov
push
mov
xor
xchg
push
adc
and
or
xchg
inc
or
jne
cs
into
fimul
push
push
xchg
je
lock
pop
outs
lock
inc
out
push
fisubr
mov
mov
push
jb
int3
test
movs
push
sub
cmp
push
(bad)
sbb
jb
pop
or
(bad)
xchg
add
repnz
ja
pop
test
xchg
lock
sbb
sub
pop
cwde
scas
das
dec
xchg
daa
mov
and
sub
xor
in
mov
mov
mov
test
stos
sbb
mov
mov
aam
call
pop
into
sbb
mov
pop
cs
push
mov
mov
push
jl
daa
xor
jge
xor
jp
mov
icebp
pop
push
(bad)
sbb
sub
jmp
jb
ret
mov
jmp
aas
xchg
dec
(bad)
pop
fldcw
sbb
push
dec
mov
std
dec
pop
dec
lods
pusha
inc
mov
out
cmp
cmp
mov
add
adc
pop
jg
test
sub
mov
adc
sub
fwait
cld
fstp
jnp
pop
leave
inc
int
cmc
std
pop
xchg
jno
clc
jmp
shr
retf
or
in
(bad)
adc
repnz
test
adc
or
jp
adc
ds
in
jmp
jle
xchg
out
fdiv
sbb
cmps
lds
call
bound
sar
lock
cmp
outs
or
xor
ror
outs
push
jecxz
mov
or
lods
xor
ficomp
jle
js
jne
mov
adc
xchg
mov
das
jmp
dec
add
movs
adc
and
imul
and
ja
push
dec
mov
adc
adc
cmp
add
cmps
sbb
lds
jb
and
lods
jle
aaa
inc
lahf
cmp
call
mov
jle
rol
mul
stc
fs
push
xchg
loope
bswap
aas
and
scas
cs
(bad)
mov
cdq
push
mov
bound
inc
sub
retf
shr
cs
dec
xchg
dec
clc
and
and
and
dec
hlt
cld
stos
icebp
pusha
ins
fadd
adc
arpl
mov
call
dec
sbb
gs
js
and
ins
cli
mov
xor
loopne
cmp
push
jg
fidiv
push
sbb
dec
sbb
ror
inc
bound
int
and
jle
add
popa
add
xchg
clc
rol
enter
shr
xchg
cld
xor
outs
cmps
push
jg
push
sub
fwait
inc
pop
xchg
sub
push
mov
ret
js
push
fistp
xor
ja
jmp
cld
loop
push
push
add
aam
jp
hlt
sbb
(bad)
xchg
jbe
inc
or
imul
pop
adc
push
jecxz
ins
retf
pusha
scas
aaa
out
jmp
mov
sub
mov
call
inc
std
jmp
addr16
xchg
rcl
pop
shr
xor
mov
rcl
jae
cs
outs
cmp
mov
cs
xlat
mov
jno
mov
inc
jge
ins
xlat
(bad)
sub
rol
jmp
xor
pop
or
push
mov
add
add
mov
push
lock
mov
dec
xchg
jno
inc
les
mul
arpl
or
or
pop
movs
(bad)
dec
(bad)
jge
div
mov
xor
shl
sbb
dec
sub
xchg
lea
push
(bad)
jo
pop
adc
dec
cmp
mov
or
inc
(bad)
jge
rcr
addr16
popa
cmp
mov
sub
push
dec
clc
in
cwde
ins
mov
and
out
cld
mov
mov
cmc
shl
popa
pop
int
pop
cmp
sub
mov
fisubr
les
xchg
fist
sbb
mov
cmp
jl
shl
(bad)
inc
mov
mov
mov
add
sub
jne
sbb
or
xchg
das
in
adc
mov
add
xor
and
pop
push
adc
xor
mov
mov
pop
pop
push
cmp
push
xchg
or
jne
fstp
pop
and
es
pop
inc
in
add
lods
sub
call
inc
jge
mov
mov
add
aad
inc
cmp
pop
xchg
data16
imul
xchg
cs
jp
or
sbb
loop
and
xor
pop
sbb
lahf
daa
push
add
xor
hlt
jg
ss
ret
sub
into
mov
mov
sbb
sub
sub
loope
nop
aaa
fwait
addr16
and
cmps
adc
jns
retf
mov
in
nop
or
and
or
dec
in
std
sbb
inc
add
and
jae
or
inc
jl
rol
pop
jge
mov
xchg
xchg
mov
movs
jb
pop
xor
cmp
retf
lds
mov
ins
nop
sbb
bnd
jecxz
sbb
inc
scas
sub
test
fst
jmp
je
xchg
add
inc
lea
in
jmp
popa
repz
jno
sbb
retf
mov
mov
push
loopne
mov
into
movs
pusha
and
test
loope
mov
xchg
jle
mov
fdiv
cs
xchg
js
pop
aad
out
enter
xor
cmps
rcl
lock
iret
test
das
iret
dec
stos
nop
add
inc
push
pop
mov
jle
lock
icebp
push
(bad)
js
and
aad
push
loopne
dec
(bad)
push
movs
mov
xor
jle
fisttp
sbb
(bad)
iret
jl
push
call
push
adc
xor
(bad)
mov
dec
stos
xchg
in
popf
mov
pop
lahf
cld
loopne
imul
icebp
xchg
mov
sbb
sub
xor
sub
mov
adc
xor
push
movs
push
xor
pop
lea
cmc
scas
pusha
dec
lods
inc
cdq
and
jmp
adc
das
dec
inc
ret
cmps
daa
xchg
inc
add
ins
mov
mov
and
cmc
test
es
mov
es
and
mov
adc
xchg
add
pop
mov
mov
loopne
sbb
add
fcmove
or
sbb
into
mov
add
outs
dec
mov
inc
popa
cld
mov
retf
mov
mov
fistp
sub
leave
xchg
into
(bad)
lods
das
xchg
push
icebp
inc
call
and
and
xor
fisubr
lea
jmp
test
daa
(bad)
and
dec
mov
retf
data16
fwait
out
into
das
cld
adc
inc
mov
(bad)
jle
loope
sahf
jle
xor
test
call
pop
pop
cmps
pop
lods
jns
ss
cmp
bnd
inc
add
jo
shr
and
push
les
cmp
xor
xchg
arpl
jb
shl
and
dec
sub
push
jmp
test
or
(bad)
cmp
sub
mov
into
out
sub
std
leave
ficomp
cld
aas
xchg
loopne
jmp
fild
add
por
or
retf
pop
cld
out
mov
pop
sbb
ds
in
out
and
cmp
pusha
daa
shl
xchg
push
pushf
addr16
push
lock
fld
(bad)
jmp
jle
loope
or
test
das
call
add
mov
adc
mov
mov
sub
addr16
rcl
es
pop
pop
mov
inc
ins
dec
push
dec
rcl
push
xchg
jmp
xor
mov
mov
data16
movs
sbb
push
xor
sahf
or
push
sub
pop
pushf
cmp
sbb
sub
or
mov
pop
sbb
and
mov
jbe
mov
(bad)
lea
repnz
push
(bad)
fisub
fcmovbe
xor
in
sub
add
fdiv
mov
ins
out
stc
pop
or
and
sbb
rol
inc
and
outs
(bad)
or
or
mov
sub
into
cmp
leave
sti
mov
loopne
sub
dec
xor
jp
jne
rcl
addr16
sub
sbb
outs
mov
das
stos
xor
dec
outs
and
ins
jbe
mov
scas
scas
jp
or
mov
xor
pop
push
mov
imul
ds
lods
cmp
jmp
pop
sbb
jl
popf
dec
mov
(bad)
ins
into
inc
xchg
sub
movs
cmp
inc
cmp
dec
jne
push
sub
mov
clc
leave
fnstsw
retf
dec
and
lods
sub
je
sbb
frstor
add
loopne
mov
or
cmps
fmul
call
aad
jo
bound
xchg
dec
loope
mov
xchg
cld
jae
xor
fcom
ins
cmps
jae
imul
mov
mov
sub
push
inc
std
push
jbe
cmps
xchg
sbb
stos
int
adc
std
pop
scas
int3
ds
pop
xor
or
movs
cmp
push
retf
sub
sbb
mov
jecxz
xchg
pop
jns
jbe
xlat
loope
pop
inc
ret
lds
out
test
or
mov
inc
rol
inc
retf
mov
inc
movs
add
cdq
or
popf
pop
sub
inc
rcl
scas
add
cmp
and
jg
jb
int3
aas
ins
loopne
xchg
xchg
jmp
lock
xchg
adc
jnp
cld
pop
ret
repnz
jno
stos
adc
ret
and
push
pop
outs
rcl
dec
fnstcw
push
inc
lock
(bad)
imul
stc
(bad)
repnz
and
nop
dec
fidiv
lock
(bad)
push
pop
sub
adc
retf
add
inc
retf
pop
adc
lea
loop
jg
repz
out
mov
aam
xor
sub
push
xlat
cmc
int3
(bad)
cmp
mov
out
mov
lea
mov
mov
adc
dec
ja
pop
pop
lods
xchg
fldcw
ret
outs
daa
inc
in
out
fadd
enter
pop
fmulp
out
adc
mov
sbb
ror
jb
mov
sub
call
movs
push
dec
xchg
cld
fst
pusha
imul
add
fwait
jne
mov
push
cli
xchg
out
inc
cs
aam
retf
jle
data16
in
jb
and
shl
jae
xchg
push
dec
xchg
cmp
dec
retf
pop
pusha
ror
pop
push
fwait
cld
xchg
jl
pop
push
jp
jo
test
and
mov
add
call
pop
push
lods
daa
inc
(bad)
cmp
in
shl
push
call
mov
mov
outs
push
push
mov
mov
in
push
int
push
stc
lea
xchg
xchg
cli
ror
mov
xor
ror
pop
jg
dec
and
or
aam
int
xor
sti
ins
and
iret
es
and
fisttp
clc
cmps
outs
fidivr
or
add
das
mov
mov
adc
lahf
aas
xchg
mov
cmp
cmp
xor
mov
aaa
mov
xchg
std
xchg
daa
jno
inc
gs
sbb
push
not
das
cmc
jmp
sub
push
jmp
push
(bad)
and
movs
shr
mov
sahf
lods
xchg
ins
adc
ja
int3
sbb
mov
fsubr
sbb
repz
fisubr
pop
push
and
push
adc
leave
sti
enter
or
add
gs
iret
ret
es
and
or
scas
stos
adc
or
rol
or
bound
xor
cs
pop
sub
inc
gs
or
sbb
dec
add
pop
pop
mov
sub
xchg
jmp
xchg
stos
lds
loope
sub
mul
mov
lods
test
idiv
and
mov
jg
cs
and
iret
xor
mov
(bad)
(bad)
cmp
aas
mul
pop
xor
add
xchg
xor
mul
(bad)
movs
jecxz
enter
inc
sahf
cmp
adc
lahf
aas
add
(bad)
jnp
data16
cmp
mov
add
int3
mov
or
stc
mov
push
sbb
and
lods
cmp
aam
mov
mov
mov
pop
jnp
out
push
dec
mov
retf
or
jmp
shl
sub
int3
cmp
stos
ret
pop
lds
cmp
inc
call
or
mov
sti
xor
sbb
mov
add
mov
(bad)
mov
inc
sub
sub
mov
cmps
sbb
pop
cld
pushf
(bad)
xor
push
push
ins
adc
xchg
cmp
mov
(bad)
mov
and
xor
out
mov
mov
bound
pusha
scas
dec
xchg
sbb
rol
lods
leave
movs
call
loope
add
and
jnp
mov
loop
pop
pop
lods
fiadd
(bad)
add
call
iret
out
inc
shl
mov
jno
cmp
gs
cmp
sar
addr16
(bad)
fxam
mov
in
lahf
cmc
shr
in
in
mov
add
ror
cmp
or
xchg
cmp
rol
mov
jmp
inc
mov
xor
or
and
cmp
outs
dec
test
out
mov
jmp
inc
mov
jmp
dec
push
pop
mov
xchg
lock
pop
(bad)
clc
fstp
stos
aam
jne
push
popf
pop
in
popa
aam
add
jb
cmps
xchg
dec
iret
cmc
out
jecxz
imul
mov
in
(bad)
lock
and
dec
(bad)
sbb
sub
stos
out
mov
mov
dec
fiadd
mov
fcmovne
jns
cmp
pop
fs
lahf
mov
and
cmp
and
xlat
fidivr
mov
push
jge
pop
xor
(bad)
cld
loopne
jp
cwde
mov
(bad)
mov
xlat
mov
xlat
jl
inc
lahf
mov
cdq
shr
mov
jecxz
mov
stos
test
add
cs
inc
imul
mov
mov
mov
xor
fisub
or
pusha
pop
outs
cmp
mov
and
or
jno
inc
mov
xchg
mov
xor
stc
cli
dec
shr
jnp
adc
das
popa
add
push
out
movs
mov
sbb
and
mov
mov
aaa
(bad)
mov
push
cmp
daa
mov
retf
cmps
fucomp
jbe
push
fstp
popa
jge
dec
adc
ins
jne
and
cld
je
mov
cmc
cmp
inc
dec
ror
add
inc
cmp
clc
enter
adc
xor
mov
(bad)
icebp
mov
and
jge
ret
push
ja
mov
or
or
(bad)
arpl
xor
imul
div
push
rol
push
ins
rol
cmp
mov
and
out
ss
add
mov
mov
fnstenv
aaa
cmp
xor
je
ins
repz
outs
mov
add
std
push
gs
ss
dec
add
mov
jl
nop
push
lea
inc
inc
xlat
fadd
and
movs
xor
xor
pop
test
addr16
xor
and
lods
ins
retf
pop
xor
lods
push
imul
pop
inc
add
lds
mov
aas
push
mov
call
loope
pop
scas
call
in
mov
inc
cld
test
add
mov
jg
add
cld
sbb
sar
mov
sub
fdiv
inc
xchg
imul
int
daa
xchg
xor
lods
sub
in
popa
xor
or
adc
add
ins
rcr
fdivr
les
dec
fistp
call
(bad)
mov
and
lock
(bad)
sub
push
mov
pusha
jg
dec
dec
shr
in
jl
(bad)
cmp
test
es
adc
into
and
sbb
popa
mov
sub
ret
xchg
(bad)
cmp
bound
and
mov
addr16
lahf
ins
(bad)
shl
xchg
sub
or
sbb
fst
mov
jl
xor
or
pop
inc
ffreep
bound
data16
cmp
cmp
sub
imul
adc
sbb
mul
scas
retf
jecxz
or
mov
pop
push
jns
clc
pop
mov
push
test
fldenv
es
enter
add
pusha
cmp
sub
addr16
push
leave
push
in
in
sub
and
push
pop
push
cmps
in
or
fist
das
in
rol
test
cmp
inc
pop
ret
test
stc
xor
aam
mov
adc
cs
dec
jge
mov
jle
cmp
out
xchg
jo
sbb
movs
imul
mov
xlat
es
fs
loop
fadd
jns
(bad)
ins
mov
frstor
test
dec
jbe
or
bound
lea
ficom
sub
data16
ja
fistp
jge
dec
cmps
imul
dec
into
fwait
mov
call
repnz
push
retf
pop
movs
jl
out
movs
add
inc
cmps
scas
lds
cmp
leave
or
lahf
sbb
push
icebp
jg
sbb
inc
hlt
mov
test
xchg
je
pop
sub
inc
test
sub
sub
inc
xor
retf
jo
mov
xor
sub
adc
add
rcr
je
imul
in
std
jne
clc
mov
sbb
sub
dec
std
in
fwait
xchg
sub
mov
or
(bad)
sub
xlat
push
cli
or
jmp
(bad)
adc
test
dec
mov
adc
mov
jmp
mov
(bad)
jp
(bad)
adc
fs
test
std
lahf
dec
xchg
scas
repnz
inc
in
and
mov
inc
pop
adc
pop
pop
aas
call
mov
push
mov
out
add
call
push
jge
pusha
xor
fstp
and
inc
adc
popf
scas
(bad)
out
sbb
sbb
pop
add
jb
xor
push
dec
aad
and
call
rcr
mov
call
mov
jb
and
inc
retf
popa
adc
push
xor
mov
xchg
xchg
cmp
or
cmp
(bad)
fsubr
inc
test
inc
inc
ins
xor
sti
out
push
vrcpps
cmp
je
cdq
mov
popf
jne
push
adc
lods
out
enter
fs
push
mov
in
imul
retf
rcl
sbb
jge
add
add
cli
inc
enter
(bad)
shl
mov
mov
sbb
fistp
mov
call
add
in
movs
jp
pcmpgtb
ret
inc
or
mov
sub
pop
shr
mov
mov
ret
fmul
and
(bad)
fnstsw
fcomp
jnp
pop
xor
sbb
test
stos
ret
add
in
imul
mov
push
and
in
mov
jmp
pushf
shl
scas
jg
adc
jae
add
test
retf
in
ret
mov
push
push
mov
(bad)
mov
jo
jg
aaa
lea
and
imul
loope
xchg
jmp
loope
push
mov
lods
loopne
xor
mov
adc
push
mov
shr
push
mov
and
hlt
mov
jnp
test
ret
mov
push
out
ins
fs
mov
arpl
mov
mov
sub
add
xor
daa
popf
popa
lods
cmp
sbb
mov
lock
and
ror
sbb
push
test
inc
dec
dec
das
push
sub
mov
mov
dec
cmp
movs
fadd
scas
lahf
or
and
or
push
inc
fld
xor
jge
sub
push
(bad)
repnz
xor
inc
adc
mov
adc
aad
stc
push
out
enter
ret
and
adc
das
ds
xchg
dec
lds
inc
fs
xchg
es
xchg
pop
xchg
cmp
rcl
dec
dec
adc
xor
mov
retf
pop
mov
bound
mov
lds
cmp
sub
movs
mov
lds
jle
mov
adc
xchg
sti
(bad)
test
mov
stos
inc
pop
xchg
xchg
mov
add
mov
xor
js
je
jle
shl
loope
and
mov
rcr
aaa
popa
test
add
int
je
(bad)
xchg
ins
fsubr
xchg
adc
cmc
sbb
iret
ret
jmp
daa
lods
mov
retf
sub
int
sahf
ret
pop
jb
inc
and
jmp
test
ins
fsub
push
rol
mov
or
xchg
xchg
jo
cmp
sub
cmp
sub
cmp
inc
ja
repnz
outs
cdq
outs
pop
js
cmps
cli
sub
stos
mov
sub
add
jl
xchg
sbb
mov
cmp
int
test
xor
test
scas
pop
push
jle
xchg
push
cmp
cmp
inc
ret
(bad)
clc
sub
add
retf
jno
or
ffreep
sbb
rol
(bad)
pop
dec
js
jmp
xor
daa
pop
or
jbe
or
rol
div
(bad)
pop
mov
pop
ret
movs
iret
hlt
push
push
dec
jmp
or
pop
xchg
push
gs
int
xchg
movs
shr
mov
mov
jb
jb
sar
and
pop
and
aaa
pop
xor
movs
into
aam
sub
or
cmp
dec
outs
(bad)
(bad)
(bad)
in
xor
jns
xlat
sbb
movs
jg
jmp
loope
cmps
cmps
add
rcl
jbe
ins
mov
mov
cmc
pop
imul
inc
sti
mov
icebp
inc
les
lods
dec
mov
inc
mov
sub
mov
push
xor
dec
loopne
(bad)
in
mov
lahf
ins
mov
or
daa
(bad)
and
cmps
add
int3
repz
icebp
je
lahf
xor
inc
push
movs
int
aad
in
std
stos
jbe
adc
ficomp
pop
cmps
gs
dec
adc
inc
(bad)
cdq
stos
inc
mov
sub
or
jno
fs
test
repz
neg
pop
addr16
aaa
icebp
or
or
sbb
lock
or
push
push
repnz
ss
fistp
shl
push
in
arpl
pushf
mov
inc
dec
mov
popa
lods
out
sub
sahf
rol
mov
call
ins
icebp
(bad)
ror
imul
mov
sbb
scas
mov
xchg
cmps
imul
movs
cmp
adc
rcr
pop
scas
mov
pop
mov
push
mov
popf
pop
cmp
mov
out
jge
(bad)
fidiv
call
retf
mov
and
repz
sti
pop
repnz
and
sub
sahf
pop
pop
push
mov
test
cmp
mov
leave
into
xor
(bad)
jno
call
xor
repz
push
aam
xchg
xor
jle
pop
xchg
dec
mov
jmp
or
sub
fcmovne
std
xor
lock
dec
inc
add
sbb
push
test
rol
jmp
pop
add
shl
xor
fistp
mov
jle
lock
inc
and
dec
je
and
inc
iret
addr16
mov
iret
or
sub
mov
shl
xlat
xchg
xchg
xlat
add
fwait
fwait
dec
lods
jge
or
add
mov
adc
sbb
and
stc
mov
sbb
lea
jo
movs
xchg
mov
repz
out
popa
(bad)
rol
mov
cwde
mov
jg
mov
inc
sbb
or
(bad)
pushf
mov
jb
xlat
fnsave
xor
or
std
push
fwait
dec
mov
pop
or
fisubr
cmps
sub
pop
or
push
add
mov
sahf
inc
shl
add
in
push
jb
cld
push
stos
xchg
iret
pusha
iret
and
pushf
cmp
jg
(bad)
jge
outs
bound
vhaddpd
and
pop
xor
adc
into
mov
sub
addr16
mov
fxch
iret
xor
or
mov
push
int3
xor
xchg
imul
std
test
inc
inc
xor
movs
mov
and
test
fistp
mov
xchg
xor
or
cld
cmp
and
stc
mov
push
aaa
nop
add
in
lods
stos
ret
pop
jno
push
out
cmps
mov
enter
popf
aaa
push
jo
mov
mov
inc
aas
in
mov
sbb
data16
xchg
jnp
mov
jne
ror
jo
or
fistp
xor
xchg
cmp
or
das
clc
add
or
jo
stos
adc
add
fimul
cmp
mov
ret
and
add
jbe
add
inc
mov
ror
mov
call
imul
test
cmp
lock
push
stc
mov
or
push
test
sub
mov
out
fcomp
mul
and
jmp
push
imul
cmp
push
and
outs
imul
cmp
jnp
(bad)
pop
pusha
jns
mov
call
cmp
and
or
mov
jns
cmp
mov
inc
aas
inc
gs
int
mov
stc
sbb
or
out
mov
test
enter
pop
ror
into
data16
mov
mov
cmp
mov
ds
gs
mov
and
jp
push
jns
mov
fstp
mov
add
outs
jge
mov
add
loopne
inc
in
fcmove
xchg
dec
mov
jg
push
mov
pop
outs
loop
jne
pop
dec
cmp
(bad)
out
cmp
enter
or
sar
dec
dec
dec
test
(bad)
popf
shufps
in
pushf
or
dec
and
ss
sbb
clc
mov
dec
ins
loop
imul
enter
sahf
or
into
neg
mov
pop
rcr
je
dec
sbb
pop
ins
mov
fadd
rol
ret
pop
push
xor
das
mov
xor
call
and
pop
fwait
add
and
dec
sbb
cs
jp
daa
call
mov
adc
xor
cdq
icebp
jnp
xor
(bad)
mov
jbe
adc
inc
or
(bad)
bound
stc
inc
xchg
and
rcl
(bad)
xor
pop
mov
in
repz
sub
xchg
pop
dec
je
je
vrsqrt28ps
idiv
inc
int3
pop
xchg
ficomp
and
push
mov
mov
xchg
into
mov
jbe
mov
add
shl
mov
mov
test
pop
cdq
es
inc
push
je
iret
or
out
mov
or
jbe
jo
dec
inc
and
inc
mov
or
daa
adc
add
adc
sbb
lahf
lods
sbb
or
push
retf
push
imul
es
adc
xchg
data16
(bad)
js
movs
adc
repz
sub
dec
pop
pop
cmps
int
xchg
xchg
pop
mov
add
add
inc
in
sub
push
int3
xor
inc
push
mov
inc
aad
jp
xchg
test
mov
add
je
adc
or
bound
pop
and
mov
or
cmc
xor
outs
mov
(bad)
dec
xchg
push
imul
test
nop
xor
ins
or
mov
adc
pop
sub
jge
repz
sti
test
inc
shl
or
call
xchg
push
jg
sar
in
jl
jb
mov
add
mov
push
pusha
ret
jecxz
xor
cs
jne
sahf
xchg
add
cmp
cmp
lea
pop
mov
inc
fs
and
xchg
out
out
or
ja
popf
retf
sbb
xchg
(bad)
cmc
jo
daa
scas
adc
xchg
fsub
daa
inc
mov
test
lock
test
jge
dec
fcom
and
mov
cmc
push
add
inc
pop
xchg
hlt
stc
mov
push
(bad)
test
into
call
and
xor
dec
pop
inc
jnp
or
adc
jo
mov
adc
sbb
mov
push
loop
sub
inc
scas
mov
xchg
movs
leave
and
add
repz
mov
xchg
inc
jmp
imul
sbb
push
and
push
loopne
(bad)
push
jnp
and
cmp
pop
dec
adc
sbb
stos
(bad)
loop
cmp
fnstcw
sub
or
push
mov
jp
dec
repnz
ja
je
push
addr16
aam
add
mov
sub
mov
xchg
xchg
test
cmps
cmp
mov
mov
out
scas
and
fisub
and
int3
mov
icebp
add
std
pop
sahf
imul
(bad)
lods
movs
push
xchg
mov
clc
adc
jecxz
imul
fnstcw
cmp
iret
dec
and
push
rep
mov
push
and
js
xor
cmp
xchg
inc
mov
mov
xor
loopne
and
xlat
mov
clc
lea
add
jns
mov
not
add
outs
and
ret
push
mov
fsubr
dec
cmp
xchg
fs
cmp
jmp
pop
cdq
jge
adc
stos
jg
dec
lds
lock
stos
fs
nop
cwde
mov
call
adc
out
mov
enter
sti
int3
repz
je
cli
fwait
mov
test
ror
dec
ficomp
inc
add
push
lea
and
imul
scas
call
in
fldcw
mov
pushw
rcl
cli
mov
dec
add
push
pusha
sub
xor
call
mov
add
inc
mov
xor
xchg
dec
push
dec
(bad)
(bad)
popf
cli
cmp
add
imul
or
adc
(bad)
in
js
loope
mov
jo
mov
ja
fs
ja
xchg
or
sub
ret
inc
push
xor
add
pop
pop
scas
adc
cmp
adc
movs
aad
addr16
shl
and
sub
cmp
popf
in
shl
push
mov
jbe
(bad)
por
mov
push
jbe
dec
push
sbb
mov
xor
mov
je
mov
cmp
fsubr
push
(bad)
cmc
cld
es
sbb
ret
push
push
fdivp
into
jmp
xchg
jg
in
pop
push
inc
mov
rol
outs
mov
fst
loope
das
mov
add
add
mov
scas
sbb
xchg
div
adc
js
ins
jbe
inc
sub
int3
xacquire
mul
cwde
retf
mov
mov
mov
push
out
out
int3
jo
push
and
scas
xor
fwait
cmc
lods
mov
retf
xchg
sti
fmul
fwait
jge
sbb
mov
inc
sub
mov
js
fidiv
sub
xor
pop
lock
dec
shl
xor
popa
loope
xchg
inc
mov
cmps
jae
cmp
sbb
jmp
not
mov
cdq
cmp
inc
test
aam
gs
retf
ss
daa
jno
retf
push
lods
xor
dec
stc
inc
loope
sub
les
push
jl
mov
lods
adc
xor
scas
adc
dec
inc
sbb
mov
xchg
leave
inc
xchg
bound
dec
xchg
stc
(bad)
adc
sar
push
gs
xor
fstp
xchg
sub
inc
ds
or
rcl
fstp
(bad)
std
inc
or
lods
fs
jno
test
pop
xchg
bswap
fadd
mov
fidivr
xchg
adc
cli
and
retf
movs
mov
lods
pop
mov
or
int3
or
pop
push
jle
mov
movs
stos
movs
hlt
cmc
aaa
call
ins
jle
in
ficom
stc
data16
jle
stos
aam
dec
sbb
pop
adc
jmp
xchg
leave
mov
mov
js
int
adc
sti
jp
sbb
jns
fdiv
jne
mov
inc
xor
add
int
fwait
and
jecxz
xor
xor
(bad)
ja
ins
movs
xchg
aam
jg
pop
cmp
daa
mov
mov
push
and
dec
jle
push
out
mov
ins
adc
or
push
push
sub
jae
jb
mov
mov
push
les
in
or
sub
imul
jp
inc
(bad)
sbb
mov
jns
jne
cli
mov
mov
bound
cmp
xor
popf
jp
xchg
and
inc
lahf
mov
and
std
or
mov
push
xlat
mov
aam
sahf
mov
or
aam
pushf
pop
mov
or
out
cmp
ins
and
popf
in
pusha
cwde
call
fld
in
sbb
movs
jp
data16
test
jnp
iret
and
push
ja
and
outs
shl
fistp
or
mov
cmp
jne
xor
xchg
enter
xor
adc
into
or
cmp
pop
stc
pop
imul
jae
shr
mov
xchg
in
sub
jmp
and
mov
fld
lea
icebp
arpl
jne
lwpval
pusha
pop
inc
pusha
ror
jg
test
jo
stos
push
das
sti
jecxz
retf
call
ins
and
(bad)
pop
lods
adc
add
jne
xor
push
cld
push
retf
inc
leave
sbb
push
lods
es
stc
div
xor
sar
adc
add
imul
push
sti
addr16
(bad)
sbb
sbb
push
jo
jns
sbb
jl
jbe
movs
mov
mov
pop
xchg
cld
cmp
lods
stos
adc
mov
dec
shr
cmp
mov
or
mov
and
mov
pop
and
jle
inc
cmp
push
adc
cmp
mov
mov
add
test
ss
out
out
repnz
sahf
mov
xor
adc
push
dec
cwde
repnz
add
popa
ret
xchg
xor
outs
push
add
jl
and
add
pop
and
mov
or
add
mov
jp
mov
aad
mov
dec
movs
fisttp
jno
daa
hlt
inc
dec
jmp
lods
mov
push
in
and
or
fimul
jbe
pop
sub
mul
arpl
repnz
mov
mov
loopne
mov
ds
arpl
pop
aaa
jecxz
stos
push
inc
or
fild
pop
int
(bad)
mov
mov
fcom
pop
aas
adc
jmp
retf
das
push
out
cmp
stos
fbld
int3
inc
push
movs
sub
das
out
sbb
ins
addr16
push
mov
scas
movs
or
jae
lock
js
pop
xsha1
cmps
push
pmuludq
fdivp
mov
sbb
out
mov
dec
adc
mov
js
adc
sub
inc
jns
push
or
gs
sbb
xchg
mov
push
rcr
fnstsw
jnp
daa
outs
cld
mov
jnp
sahf
addr16
int
cwde
add
dec
or
pop
fiadd
into
movs
inc
push
xchg
xlat
aas
cmps
mov
imul
push
dec
or
mul
or
xor
mov
xor
xlat
add
push
push
call
scas
in
dec
(bad)
ds
jmp
add
outs
in
ror
or
and
cwde
mov
dec
out
cmp
lock
sar
js
sbb
outs
sti
add
test
adc
(bad)
xchg
loop
addr16
(bad)
pop
mov
fisttp
rcr
add
sbb
ret
dec
xor
add
and
sub
mov
stc
cmp
push
push
std
jge
retf
retf
push
inc
or
pop
push
dec
(bad)
test
add
arpl
adc
dec
mov
bound
popa
xchg
cli
sar
xor
or
lods
mov
mov
add
mov
pop
mov
mov
out
addr16
outs
imul
rcr
pop
int3
jmp
jns
cli
das
repnz
std
jle
pushf
pop
das
mov
ins
popa
mov
sub
and
ss
ins
pop
jb
stos
imul
dec
xchg
test
sbb
out
adc
test
mov
mov
cwde
or
adc
sub
cmp
out
dec
xor
push
xchg
(bad)
out
dec
xor
in
inc
fmul
test
shr
les
inc
scas
and
cmps
mov
sub
jg
ret
cmp
sti
aas
daa
enter
je
(bad)
mov
nop
aam
sbb
xchg
cs
inc
jnp
cmc
lea
mov
ds
sub
sbb
jmp
xor
jno
xchg
arpl
push
add
pop
mov
icebp
jb
sub
out
ss
inc
js
fldln2
sbb
mov
jbe
fs
shl
lds
data16
xor
add
std
ja
(bad)
xlat
push
mov
pushf
hlt
mov
push
pop
adc
ja
hlt
aad
or
jae
cwde
test
clc
ins
xlat
mov
ret
hlt
mov
in
push
sbb
ret
idiv
mov
push
cmc
retf
test
push
sub
mov
and
jo
addr16
sti
stos
jnp
inc
rcl
repz
adc
push
or
(bad)
out
mov
mov
pop
mov
sub
imul
std
mov
stc
xchg
test
xor
push
push
scas
sub
inc
mov
movs
xor
ja
std
add
dec
mov
adc
inc
push
mov
fadd
mov
pop
xchg
mov
push
add
mov
ror
in
cmp
jbe
mov
cs
pop
fldcw
mov
xor
jmp
sub
neg
popa
adc
xchg
push
add
into
rol
dec
xchg
fild
outs
loope
dec
gs
inc
fmul
jno
add
outs
mov
jmp
test
neg
clc
adc
scas
fidivr
add
xor
(bad)
or
or
or
sbb
and
arpl
cmp
into
push
ret
js
inc
ins
jns
sub
data16
cmp
fbld
add
sub
push
test
sub
xor
xchg
sbb
mov
xchg
imul
test
jle
call
sbb
add
mov
mov
into
(bad)
shr
dec
lods
(bad)
call
push
int
inc
movs
or
push
dec
bound
dec
xchg
ins
add
cmps
jge
mov
ror
sbb
or
xor
push
fwait
ret
jo
std
data16
inc
pop
jo
icebp
outs
or
imul
std
rcr
xchg
xlat
lods
pop
adc
les
out
mov
sbb
sbb
inc
push
push
mov
gs
sub
daa
mov
inc
push
inc
scas
and
pop
int3
cdq
pusha
aam
inc
pop
sbb
dec
repz
sub
add
addr16
scas
test
cld
dec
stc
int3
leave
imul
mov
jne
nop
cmp
adc
stos
in
mov
(bad)
daa
mov
icebp
mov
(bad)
jb
jbe
int3
stc
loopne
jne
inc
dec
xchg
or
xchg
cmc
sub
xchg
fs
cld
(bad)
push
jmp
add
shr
rcl
add
neg
cdq
sub
data16
xchg
fcmovnb
cwde
retf
lds
repnz
(bad)
mov
pop
sub
test
add
add
add
sbb
inc
sub
or
gs
mov
fcomp
lds
jl
dec
gs
aam
les
cmp
xor
pop
xchg
and
push
inc
sub
add
sub
sbb
sub
xchg
xchg
inc
int
fucom
daa
cmp
push
push
out
mov
mov
loopne
jg
cmp
and
sbb
addr16
mov
or
or
jmp
jo
(bad)
test
adc
dec
ja
idiv
(bad)
mov
popa
inc
dec
mov
cmps
sti
stos
push
add
pop
add
outs
add
lods
lock
bound
iret
ins
xchg
add
fdiv
mov
xor
neg
bound
jl
xor
je
(bad)
mov
fcom
fs
test
movs
imul
test
xor
in
test
popf
call
cmc
mov
mov
adc
pop
imul
sub
sar
movs
in
cld
mov
gs
mov
cmps
pushf
stc
dec
scas
aam
dec
sub
mov
cmp
pusha
jmp
and
inc
push
sbb
xchg
and
call
fwait
dec
xchg
mov
xchg
mov
cmp
inc
jecxz
jmp
add
xor
push
or
mov
pop
pop
lock
js
adc
cmp
jp
xor
xlat
fwait
daa
mov
mov
and
xchg
scas
jno
push
mov
call
in
push
pop
ss
sub
into
dec
sbb
push
(bad)
jl
mov
add
aaa
out
adc
adc
jae
mov
mov
into
push
mov
fdiv
or
cmovle
shl
push
mov
or
fwait
dec
pop
adc
and
or
arpl
fsub
and
mov
inc
cli
mov
xchg
or
jns
mov
or
loopne
sbb
(bad)
mov
iret
rol
mov
mov
xchg
jo
inc
inc
sbb
sbb
push
mov
mov
sti
add
cs
loopne
std
es
(bad)
xlat
in
loopne
sahf
ficomp
retf
add
retf
aad
outs
sbb
aas
sub
clc
pop
mov
retf
(bad)
sbb
adc
aad
das
xlat
test
mov
cwde
jmp
test
pop
mov
call
dec
push
ret
cli
or
ror
xor
inc
xor
mov
mov
int
daa
repz
and
lds
in
adc
pop
dec
mov
cli
fidiv
sub
ss
or
inc
xor
bound
push
frstor
fs
dec
cmp
mov
pop
cmps
inc
jmp
ja
arpl
test
je
outs
imul
or
(bad)
xlat
inc
cmp
fucomp
sub
dec
ss
sub
xor
mov
push
pop
test
mov
sub
sahf
pop
xchg
and
ret
dec
jmp
mov
push
sub
(bad)
sub
jnp
call
test
(bad)
in
mov
call
call
xchg
cs
call
test
(bad)
cmp
push
rcr
imul
jo
inc
sub
xchg
sbb
pop
adc
jo
enter
adc
fsubr
jmp
xchg
mov
mov
jns
add
xchg
rol
sbb
push
cs
int
mov
stc
pop
stc
jg
mov
mov
sahf
pusha
arpl
xor
sbb
add
scas
xor
mov
or
shl
adc
das
push
ss
les
pop
test
cmp
push
add
imul
xchg
jno
ja
and
ret
xchg
addr16
sub
lock
jns
or
arpl
sar
push
cwde
adc
push
inc
xor
aas
test
lock
fisubr
mov
dec
add
fst
xchg
retf
lds
dec
cld
loop
mov
fwait
rol
mov
fwait
clc
adc
fist
jge
bound
cmp
or
and
aaa
ret
push
popf
mov
add
jmp
out
sbb
push
cmc
popf
xchg
sbb
mov
imul
rol
jb
jne
pop
sub
jne
push
data16
sbb
scas
mov
sti
sub
push
(bad)
cmp
cmp
push
mov
lods
outs
push
xor
jb
and
lahf
add
mov
daa
sar
rol
jae
add
test
sbb
xor
add
in
cs
ficomp
cmp
inc
mov
pop
in
and
aas
mov
imul
sar
mov
cwde
xchg
push
xor
es
enter
sub
std
inc
xchg
mov
in
sub
lock
lods
cwde
(bad)
sar
mov
loopne
jge
(bad)
add
mov
(bad)
imul
bound
or
push
xor
pop
jle
mov
adc
(bad)
jmp
push
xchg
add
movs
test
ins
ret
cwde
popf
jno
pop
fistp
data16
aam
and
jmp
mov
aas
dec
nop
pop
cmp
ret
xor
mov
dec
cmp
push
sbb
push
loop
cmp
mov
out
push
xchg
loopne
aas
push
into
lea
lds
aaa
lods
mov
sbb
seto
fcmovnu
into
xor
push
or
jns
push
and
addr16
cs
jbe
pusha
and
mov
ins
sahf
adc
out
add
adc
call
mov
xchg
push
jo
ror
sub
loope
sti
xchg
arpl
add
daa
dec
leave
fsub
fcomp
push
and
mov
lods
cmps
push
xchg
mov
fidiv
xchg
lods
adc
jg
pusha
pushf
inc
loope
mov
cmp
dec
jge
push
js
into
mov
cdq
retf
sbb
push
std
xchg
or
cli
or
sub
jne
mov
outs
mov
mov
das
push
jmp
jmp
cmp
aad
outs
and
data16
and
in
ds
sahf
jne
(bad)
ins
js
xor
mov
jbe
hlt
cmp
sub
mov
xchg
es
mov
mov
jmp
mov
les
sub
jle
pop
test
and
mov
inc
add
push
retf
mov
das
jnp
xchg
lea
pop
add
sbb
ins
leave
jge
sub
test
cdq
adc
jp
jmp
test
sub
mov
add
in
xor
sbb
push
mov
cmc
rcl
scas
movs
aas
mov
dec
mov
lahf
pop
cld
jecxz
add
mov
mov
sti
sahf
inc
aad
pop
lahf
js
xor
or
pop
cdq
sbb
(bad)
push
(bad)
inc
adc
mov
stos
jno
xchg
jnp
out
or
popf
fist
jnp
mov
mov
jle
or
and
jge
inc
xor
shl
sbb
jns
call
jge
mov
add
fsub
push
ret
mul
adc
cmp
(bad)
repnz
out
mov
clc
sub
push
int3
arpl
sbb
mov
aad
imul
int
xor
or
dec
cmp
cmp
std
cwde
hlt
retf
bound
add
test
cmps
data16
or
mov
xchg
mov
mov
sbb
mov
mov
rol
xor
sbb
int3
xchg
call
in
mov
data16
fdiv
sub
push
or
cmps
sar
sar
dec
jmp
lahf
jl
and
in
adc
lahf
sbb
dec
lods
cmp
xchg
jb
xchg
mov
gs
jno
push
or
fldcw
scas
add
cmc
or
dec
idiv
mov
out
rcl
outs
sbb
ins
jmp
adc
cmp
cwde
inc
fcom
repz
fcmovbe
sti
and
leave
imul
sbb
cmps
fild
rol
push
jns
ds
xchg
shl
sub
sub
ss
push
retf
mov
and
jbe
aaa
lock
cmps
adc
cmp
movs
inc
inc
mov
outs
lods
fild
inc
mov
mov
mov
cmps
nop
cmp
rcr
ret
fidivr
and
adc
mov
inc
fcmove
xor
or
jb
mov
shr
push
mov
scas
rol
call
add
ins
xor
cmps
out
mov
mov
sub
xor
and
jne
pusha
sub
sub
fwait
add
push
lea
mov
xchg
in
cwde
and
or
mov
xchg
je
jns
out
out
dec
out
adc
cmp
xor
sub
je
das
out
xchg
cmc
xchg
ret
je
xchg
sar
shl
outs
loopne
xchg
fnstenv
sbb
adc
cld
cmp
xchg
inc
cmp
pop
xor
adc
jge
inc
mov
lds
cmp
rol
xor
es
xchg
idiv
cwde
pop
xor
inc
jo
sub
sbb
dec
sbb
add
cmp
or
add
repnz
jge
push
js
push
sub
push
ins
loopne
jns
mov
sub
jge
xlat
inc
aam
mov
ret
and
pop
jle
and
std
push
cmp
test
add
repnz
sbb
(bad)
nop
xlat
push
jbe
inc
popf
or
ja
ficom
or
je
lea
out
cmp
dec
movs
or
and
lods
dec
mov
pop
test
cli
lock
push
cwde
shl
xor
arpl
loopne
or
xchg
imul
call
mov
daa
jb
pop
repz
xchg
pop
sbb
mov
and
cmps
mov
test
jns
pop
jo
jp
fbstp
lds
aaa
add
sbb
leave
loope
test
mov
pop
pop
or
arpl
hlt
pop
dec
or
(bad)
jmp
mov
(bad)
xor
mov
or
cmc
push
jbe
repnz
jns
clc
cmp
adc
dec
cmp
adc
repz
push
xor
inc
sbb
lods
sub
pop
cmps
mov
jns
sti
mov
add
aad
xor
jno
and
jns
in
and
outs
mov
pop
mov
xchg
(bad)
jecxz
sub
dec
jmp
aaa
inc
vandps
inc
push
jmp
pop
mov
mov
mov
dec
js
jb
repnz
xchg
inc
mov
dec
ror
enter
mov
jge
out
dec
inc
call
dec
mov
test
dec
cdq
sbb
sbb
cli
xchg
sti
popa
stos
bound
cmps
(bad)
adc
in
lods
dec
imul
in
xor
cmp
je
cmps
ds
jo
add
pusha
inc
mov
icebp
mov
les
or
mov
mov
jge
add
bound
mov
test
pop
jle
jecxz
loopne
(bad)
fwait
sub
arpl
iret
fmul
dec
repnz
stc
xchg
(bad)
xchg
movs
test
call
mov
mov
inc
and
aam
pop
popa
adc
icebp
stos
arpl
pop
inc
sbb
ret
popa
bound
mov
or
ja
jnp
mov
repz
aaa
fucomip
(bad)
jmp
imul
mov
ss
sbb
les
or
dec
int
dec
push
int
lods
into
push
xor
ret
cmp
in
rcr
and
outs
mov
xchg
call
add
scas
ret
adc
jmp
jle
xchg
mov
inc
pop
or
int
in
fidivr
pop
call
pop
imul
fdiv
loop
mov
pop
repnz
jg
fadd
xlat
xchg
clc
mov
les
mov
movs
cmp
jl
inc
mov
xchg
fdivr
pop
call
dec
outs
dec
jnp
xor
sub
jb
fs
retf
cmp
xchg
sub
sub
fistp
xchg
push
ds
jp
push
add
rol
jg
arpl
mov
and
xor
fld
cs
dec
xor
pop
or
push
(bad)
call
fucomip
outs
clc
push
push
(bad)
ffree
ficomp
hlt
xor
mov
cmp
test
push
xor
mov
dec
sbb
sub
scas
push
mov
shl
or
fstp
loope
mov
pusha
mov
xlat
scas
jl
jecxz
push
dec
pop
loopne
mov
cmp
sub
lods
into
imul
xchg
xchg
ja
fmul
pop
cmp
fisub
movs
xor
mov
lock
jp
dec
lods
xchg
add
leave
out
sbb
jmp
pop
out
ror
xchg
xchg
xchg
(bad)
push
aam
ins
cmp
mov
jmp
pop
mov
int
lods
in
jp
push
aaa
bound
adc
stc
jne
pop
lea
pushf
addr16
adc
xchg
mov
sbb
loopne
stos
dec
repz
or
add
xor
mov
fs
mov
mov
inc
inc
arpl
lods
mov
add
pusha
adc
inc
jg
push
nop
mov
xlat
das
in
cmp
and
repz
pop
(bad)
out
inc
mov
mov
xchg
shl
and
ror
dec
and
fisub
and
aam
outs
xor
(bad)
outs
dec
stc
loop
mov
xor
ins
mov
sub
lods
js
sub
or
jnp
sbb
and
(bad)
fisttp
pushf
cld
jne
fadd
inc
sub
call
mov
add
sbb
cwde
std
adc
js
call
xchg
cs
mov
aas
sub
ret
into
pop
mov
sub
neg
jmp
cwde
ret
push
mov
dec
pop
(bad)
test
in
loopne
mov
fst
jmp
vdivsd
jbe
mov
(bad)
test
aas
or
cli
xor
mov
fmul
push
jae
adc
mov
fidivr
sti
jb
(bad)
mov
jmp
or
les
xor
xlat
jbe
movs
pop
(bad)
xor
call
test
inc
in
jmp
xlat
pop
inc
ja
xor
mov
int
push
test
dec
movs
mov
push
sub
add
xchg
dec
and
or
sub
scas
xchg
cmp
sbb
sub
sub
inc
jmp
loopne
sbb
mov
sub
dec
xchg
push
jecxz
xlat
hlt
out
adc
leave
jmp
cmp
arpl
lods
bound
sahf
scas
mov
sbb
jmp
push
xchg
cld
scas
jl
xchg
and
push
in
inc
mov
xchg
inc
and
call
xchg
in
aas
dec
loop
push
leave
sub
sbb
add
push
outs
into
add
pop
(bad)
mov
push
push
nop
cmc
cmp
dec
dec
jb
xor
mov
pop
dec
in
mov
cmp
pusha
cmp
xchg
jae
(bad)
sbb
(bad)
inc
sbb
dec
pop
out
sahf
xlat
test
(bad)
scas
(bad)
dec
jg
mov
aad
pop
sbb
mov
cmp
xchg
ficomp
bound
mov
jnp
nop
push
(bad)
lock
bound
inc
sub
test
dec
cmc
push
pop
push
mov
hlt
adc
jns
sbb
aas
mov
(bad)
div
jo
add
mov
js
xchg
ins
jns
pop
pop
or
in
rol
movs
mov
imul
or
pop
push
mov
mov
call
stc
stos
stos
loop
out
jecxz
(bad)
neg
lods
inc
jne
or
cvtps2pi
jle
sahf
imul
cmps
mov
movs
scas
mov
jne
mov
movs
cmp
sub
xchg
fadd
sti
push
dec
dec
mov
inc
les
mov
cmp
cmp
dec
mov
(bad)
mov
lock
jp
and
add
cdq
or
test
mov
std
loope
or
mov
xor
xchg
sbb
cli
call
xor
push
push
mov
xchg
ret
mov
scas
inc
(bad)
jne
xchg
scas
sahf
adc
aas
and
push
dec
shr
dec
mov
arpl
stos
aaa
cmp
ja
outs
aas
xchg
cmp
pop
or
inc
adc
add
sub
pop
or
(bad)
movs
add
bound
aad
rcl
sbb
into
sbb
cld
leave
dec
dec
out
stc
mov
inc
jmp
mov
test
pushf
test
call
daa
pop
adc
xchg
mov
out
stos
sbb
cmp
icebp
cmp
mov
xchg
rcl
xor
ret
popa
inc
lock
fidivr
lahf
dec
inc
into
xor
scas
leave
jmp
add
fnstsw
inc
mov
test
mov
mov
sbb
arpl
mov
test
lea
mov
fiadd
add
add
clc
out
push
xchg
dec
jne
sbb
std
inc
mov
mov
(bad)
mov
fimul
xchg
dec
or
mov
(bad)
sbb
in
sti
(bad)
jecxz
loop
adc
cmp
stos
stc
out
es
scas
add
je
jo
scas
sbb
shr
iret
add
test
add
div
lock
cmp
xchg
(bad)
int3
daa
add
loop
inc
mov
sbb
into
inc
mov
xor
call
mov
pop
inc
mov
sub
push
and
mov
dec
inc
aaa
mov
js
retf
fistp
push
push
pop
out
jle
gs
scas
mov
je
inc
mov
les
scas
or
int3
add
lods
cs
in
ret
ds
jmp
adc
mov
sbb
mov
mov
into
fistp
jmp
mov
mov
sub
fisubr
xor
inc
sbb
repnz
xchg
mov
dec
jae
gs
and
jl
mov
fadd
dec
adc
jmp
iret
ror
lock
test
xchg
(bad)
ss
push
das
(bad)
data16
retf
mov
mov
adc
and
ret
mov
and
addr16
dec
or
ja
pop
add
and
or
(bad)
ins
in
repnz
jb
xlat
mov
aas
xchg
mov
xor
pop
cmps
dec
(bad)
rcl
and
mov
mov
ss
loopne
jb
or
scas
mov
aaa
movs
sbb
xor
mov
jle
mov
cwde
mov
mov
xor
nop
dec
push
retf
push
into
bound
test
lods
cmps
push
jle
icebp
inc
and
popa
lods
stos
cpuid
mov
stc
(bad)
imul
dec
adc
mov
ja
ret
iret
jl
adc
cld
leave
jg
out
adc
loopne
jo
sbb
mov
(bad)
pop
push
lea
(bad)
adc
test
lds
sub
cmp
inc
std
mov
pushf
fsub
ss
mov
clc
push
test
stos
push
sbb
hlt
sahf
xor
and
data16
inc
xor
lea
mov
push
dec
shr
sub
mov
mov
adc
dec
push
push
mov
mov
or
and
cmp
and
inc
or
jns
out
into
push
sbb
(bad)
jmp
mov
add
push
sbb
mov
dec
add
xor
inc
int
loope
push
test
pop
pop
out
jl
mov
jnp
cld
sbb
js
cld
dec
add
bnd
xor
out
or
out
xor
inc
stos
dec
out
sub
mov
cmps
jp
aas
push
enter
ficom
add
retf
scas
jbe
call
fldenv
add
xor
stc
les
jo
sbb
cmps
mov
sbb
stos
(bad)
mov
sbb
gs
shr
or
push
or
sub
dec
enter
jae
test
xchg
add
sahf
add
adc
mov
and
mov
retf
xchg
push
(bad)
mov
sbb
xchg
jns
in
iret
data16
add
fisubr
adc
and
mov
rcr
shr
or
(bad)
jmp
mov
rol
add
pop
fidivr
adc
enter
shl
cmc
pcmpgtb
cdq
repnz
cmp
mov
loopne
lds
or
jns
or
cdq
outs
push
sub
mul
std
ja
ror
dec
movs
out
mov
sub
jnp
fild
jge
jb
mov
and
jae
jbe
lahf
mov
shl
mul
cdq
push
outs
stos
in
retf
mov
sub
pop
retf
pop
outs
rol
lods
inc
lahf
fmul
cmps
pop
out
mov
out
sub
lods
xchg
inc
jmp
xchg
pop
hlt
xor
(bad)
lock
fwait
enter
pusha
xor
test
mov
mov
sub
jecxz
sub
movs
mov
adc
sub
out
in
inc
arpl
cld
ror
inc
sbb
retf
(bad)
in
mov
adc
stc
fld
pop
sub
ins
sub
sbb
call
adc
and
push
hlt
pop
jne
and
test
add
int3
ret
sub
and
jbe
sti
inc
xor
xchg
cmp
or
sub
iret
cdq
mov
in
push
or
mov
out
movs
fldenv
jbe
xchg
call
or
add
leave
xchg
xor
mov
xchg
cmp
pop
sub
call
mov
(bad)
ins
mov
js
sbb
jae
loop
pop
add
jbe
repz
inc
mov
jne
fwait
inc
aad
inc
ins
aad
inc
dec
mov
xchg
jo
inc
(bad)
jl
or
or
mov
sbb
or
fidivr
in
push
pusha
loopne
mov
cmps
pop
lods
sbb
push
nop
stc
jbe
pop
(bad)
popf
sti
stos
es
inc
xor
repnz
retf
stos
pop
lock
movs
scas
popa
and
push
or
ficomp
xor
adc
out
(bad)
mov
test
inc
ds
or
mov
push
push
xor
jae
sub
pop
fmul
dec
lock
jb
xchg
cmp
dec
mov
push
push
jae
and
inc
ds
and
call
fnsave
les
dec
scas
sub
fwait
call
lods
add
aas
mov
jae
sbb
cmp
outs
nop
jl
or
jg
mov
or
push
loope
push
lock
pop
(bad)
xor
mov
shl
mov
fisttp
pop
dec
out
les
sbb
inc
or
jb
ret
aas
sar
mov
cmps
pop
cmp
pusha
out
dec
adc
in
call
stc
mov
xor
popa
jnp
aad
jl
ja
repnz
mov
add
pop
push
add
mov
retf
push
xor
out
repnz
and
jge
pop
jmp
xor
xor
adc
sbb
icebp
xor
ds
clc
jb
mov
mov
je
inc
repnz
test
enter
sub
pop
cmp
mov
out
adc
fcmovu
mov
cmps
jl
and
xor
xor
mov
push
push
sti
(bad)
std
lods
xchg
xlat
add
movs
repz
sbb
xchg
mov
repz
lods
movs
hlt
inc
mov
rcr
pop
or
jo
cli
or
pop
popa
je
(bad)
fldl2t
fnstcw
test
lods
xchg
push
mov
or
pop
push
test
div
data16
dec
shl
test
xor
mov
imul
les
arpl
add
dec
js
sti
jb
xchg
stos
por
movs
imul
xor
fstp
push
repnz
retf
xor
xchg
out
and
(bad)
xchg
jle
lods
fdiv
outs
mov
mov
sub
(bad)
jl
mov
sti
cwde
inc
adc
iret
xor
das
loop
jmp
je
xchg
jno
fs
repz
jbe
pop
pop
inc
inc
(bad)
mov
pop
jne
sbb
das
or
sbb
cmp
cmp
mov
mov
jmp
pcmpeqb
repz
jle
add
mov
aaa
cli
daa
mov
scas
mov
cmp
cld
add
(bad)
jmp
inc
clc
push
imul
push
jl
iret
iret
jle
mov
loope
pop
shr
imul
xchg
fnstcw
les
imul
rol
ins
or
sahf
sbb
mov
adc
pop
inc
cli
sbb
aas
xor
test
out
stos
in
cmp
xchg
xbegin
inc
ins
or
adc
push
and
mov
ins
out
sbb
daa
fwait
les
cmp
dec
sub
add
mov
clc
leave
push
xor
add
push
mov
and
mov
data16
stc
mov
test
adc
or
sbb
scas
out
mov
sti
out
push
(bad)
(bad)
cli
sbb
lea
out
push
js
adc
dec
and
mov
or
xor
sbb
xor
inc
ds
out
sub
fcom
mov
popa
mov
mov
cmps
fistp
stos
add
adc
jmp
jmp
xor
push
jle
xor
lahf
dec
scas
adc
lods
arpl
call
adc
bound
bound
rcl
pop
xlat
xchg
mov
push
inc
je
push
jp
inc
jnp
inc
imul
out
test
adc
das
inc
cs
call
inc
xchg
mul
push
cmp
cmc
test
push
fsubrp
in
inc
fistp
mov
inc
inc
cmp
mov
dec
in
inc
xchg
sbb
dec
das
xor
jno
cld
add
push
bound
cmp
and
or
cmc
xor
cwde
test
jnp
in
(bad)
(bad)
and
xchg
pop
inc
dec
xchg
jb
aas
hlt
adc
dec
add
mov
dec
stos
rcr
inc
push
loopne
mov
ins
retf
mov
fisubr
inc
fnsave
mov
jae
in
sub
pop
repnz
push
rcl
adc
lahf
sub
add
adc
sub
push
dec
scas
pop
or
imul
xor
aam
pop
inc
das
xor
push
adc
popf
sar
or
sub
cdq
mov
adc
nop
pop
sbb
adc
popf
cmp
mov
daa
mov
cmp
fsubr
mov
push
push
retf
stos
lea
jg
idiv
push
loop
dec
push
(bad)
sub
push
sti
adc
enter
fwait
jmp
inc
adc
add
sbb
push
inc
les
pop
icebp
fcom
dec
jp
dec
cmc
add
aam
dec
fwait
inc
stos
dec
outs
mov
adc
repz
dec
stos
push
xor
mov
retf
add
add
or
mov
cmp
fdiv
je
xchg
xchg
shr
fst
dec
inc
sub
mov
pop
mov
and
cld
in
jmp
or
sbb
mov
mov
jmp
lods
mov
pushf
push
or
add
or
ss
mov
mov
loop
push
add
sub
sub
adc
lahf
hlt
outs
mov
bound
inc
fpatan
ins
sub
jno
cld
into
call
fimul
ret
fist
hlt
mov
test
mov
ret
(bad)
hlt
pushf
xor
ins
call
in
sub
cmp
push
enter
icebp
nop
push
cmp
cld
dec
cdq
(bad)
dec
fwait
push
add
add
std
lea
scas
or
dec
and
aam
fwait
pushf
imul
and
clc
sbb
mov
jbe
mov
xchg
xor
jge
pop
fcomp
in
retf
scas
mov
xchg
jmp
mov
or
iret
xor
mov
xchg
xor
mov
mov
xor
dec
cld
push
stos
movs
mov
mov
stos
test
ins
xchg
jno
outs
add
xor
jg
cmp
dec
push
push
cmp
sbb
xchg
mov
ror
dec
add
scas
sub
dec
gs
cmp
stc
add
adc
dec
cmp
jl
push
xor
xor
in
fisub
bound
pop
sbb
mov
scas
pop
xchg
movs
lds
xchg
mov
sbb
pop
adc
ds
mov
lods
and
dec
cwde
sar
retf
stos
or
retf
shr
test
pop
jo
daa
xor
push
div
add
es
or
adc
inc
cs
and
movs
jae
sbb
cmp
adc
or
loop
add
and
retf
and
adc
sti
out
and
arpl
pop
mov
bound
pop
pop
mov
push
or
(bad)
cdq
pop
fsub
jns
push
adc
nop
cmp
popf
and
inc
je
enter
add
in
int
loopne
jecxz
lahf
and
adc
out
sbb
daa
jbe
inc
jg
cmp
cmps
cdq
adc
and
sub
ror
sbb
pop
xchg
daa
sbb
unpckhps
fidivr
ret
js
fwait
cmp
leave
aas
cmp
mov
mov
mov
xchg
cmc
or
inc
xchg
fcom
adc
outs
sbb
xchg
test
cmc
xchg
int3
push
mov
inc
mov
lea
xlat
popa
daa
xchg
cmps
fdivrp
and
in
cmps
push
cwde
std
inc
popf
out
mov
inc
sbb
lahf
fisub
ror
cmc
pushf
lds
push
mov
pop
inc
cmp
adc
iret
jne
mov
jne
add
mov
push
jno
mov
shr
sti
retf
mov
cwde
adc
jg
pop
xchg
jo
xchg
ins
or
add
adc
fs
mov
xlat
pop
aaa
push
test
not
inc
in
movs
icebp
lea
into
and
dec
test
or
pop
pusha
(bad)
adc
dec
fmul
jne
inc
js
fsubr
cmp
(bad)
clc
leave
mov
push
aad
xchg
ins
sar
ror
into
xchg
js
cmp
ficomp
pop
hlt
xchg
(bad)
into
mov
repz
mov
pop
mov
ret
rcl
clc
cmp
cli
je
xchg
mov
retf
cwde
xchg
mov
push
movs
sub
repnz
xchg
push
add
xchg
push
mov
fimul
mov
mov
inc
sbb
pop
xchg
and
pop
jp
inc
or
pop
or
and
adc
cwde
out
or
xchg
sbb
xor
mov
add
out
sub
push
addr16
jmp
loop
cmp
dec
shl
xor
out
fs
mov
and
ja
jmp
sbb
pop
test
in
fst
add
loopne
shl
cmp
mov
out
add
test
push
push
inc
pop
test
xor
mov
sub
fs
pop
iret
jne
jmp
cmc
daa
test
mov
jb
dec
adc
pusha
int
fmul
adc
retf
jns
fsubr
mov
aad
cs
xor
jmp
and
xor
push
jb
imul
mov
cmp
pop
or
daa
test
xchg
bound
lds
inc
jns
mov
dec
jno
clc
imul
in
push
mov
fwait
lods
inc
hlt
test
xor
jns
fs
inc
out
or
mov
jae
and
xchg
inc
ins
mov
leave
and
(bad)
fst
sub
and
mov
jae
xor
in
js
jne
xor
jmp
popa
dec
retf
adc
push
fmul
pop
rol
mov
arpl
test
cmp
mov
rcr
push
push
ins
fcom
sub
push
retf
inc
ret
and
cmp
idiv
mov
inc
iret
add
mov
mov
cmps
js
push
push
pop
xor
mov
(bad)
lods
pop
mov
add
sti
rcr
pop
mov
(bad)
cmova
popa
pop
dec
mov
scas
push
scas
(bad)
xor
mov
retf
dec
scas
push
clc
cdq
je
sub
mov
lods
retf
xchg
mov
call
dec
mov
inc
rol
(bad)
in
loope
in
loope
outs
ficom
ret
test
push
cmp
add
xor
or
rol
xor
retf
adc
ror
in
ins
inc
sub
add
imul
lds
jg
xor
inc
int
sub
psubsw
mov
jns
int3
or
hlt
pop
sub
jmp
cwde
(bad)
hlt
jmp
shr
pop
mov
xchg
and
int3
lahf
push
sbb
mov
cmc
cmps
jnp
sahf
scas
pop
push
neg
mov
jecxz
mov
mov
dec
xchg
xor
scas
pusha
cmp
out
imul
add
adc
add
retf
arpl
cdq
ret
stc
das
mov
hlt
cs
cdq
mov
inc
xchg
mov
adc
xchg
ins
and
push
mov
fsubr
mov
std
jne
outs
pop
xor
jns
pushf
test
adc
xchg
or
sub
add
in
xlat
cmp
push
leave
lods
pusha
rol
out
pop
gs
int
dec
sub
(bad)
imul
push
cmp
retf
dec
pop
out
sti
mov
xlat
mov
loope
mov
add
add
xchg
xor
push
scas
mov
and
push
adc
popa
xchg
outs
(bad)
mov
into
fiadd
out
jmp
cmp
sbb
cmp
jle
xchg
push
mov
pop
aad
and
add
fisub
inc
ja
cdq
mov
jmp
xchg
or
es
outs
and
push
add
ins
mov
in
retf
loop
pop
mov
retf
imul
push
mov
mov
sbb
pop
lock
imul
lds
aaa
scas
mov
clc
push
mov
mov
lahf
xchg
sti
cmp
std
xchg
push
rol
fistp
pop
fdivrp
arpl
call
inc
mov
dec
dec
push
xor
stos
imul
std
inc
fwait
idiv
rol
sub
data16
in
sub
mov
adc
push
jne
fs
inc
pop
pop
xchg
jo
jg
ds
fiadd
pop
daa
int3
add
push
mov
(bad)
shl
lods
mov
mov
test
xchg
or
call
pushf
call
dec
fnstenv
out
mul
jecxz
es
loopne
dec
xor
inc
and
movs
fabs
(bad)
and
mov
ficom
shl
outs
cmp
or
sti
les
mov
stc
aam
lods
(bad)
jge
push
xchg
cmp
(bad)
xor
das
out
mov
dec
out
sti
cmp
pushf
stos
mov
xchg
or
stos
fs
ret
data16
(bad)
pusha
mov
out
enter
jge
mov
xor
jmp
and
xor
and
mov
out
jae
cmp
and
mov
push
mov
xor
stos
jmp
popf
xchg
dec
nop
dec
xor
out
xchg
stos
cmp
repnz
lahf
ins
js
cs
mov
pop
stos
(bad)
rcr
dec
or
test
push
repnz
clc
cld
imul
rcl
ins
cmps
push
and
pusha
jne
xchg
retf
outs
idiv
mov
push
dec
jnp
xlat
sahf
mov
fisub
add
aad
int3
lds
ror
push
inc
adc
sub
inc
popa
nop
and
enter
loopne
inc
push
mov
sub
(bad)
out
shl
outs
mov
sbb
fwait
jae
push
mov
arpl
adc
rcr
inc
fsub
pushf
jnp
aas
pop
add
hlt
daa
ss
xchg
jl
icebp
inc
pop
pop
in
sahf
inc
stos
push
mov
retf
and
sbb
call
xchg
or
dec
mov
js
jg
mov
ins
pop
rcl
xor
mov
cmp
mov
push
mov
(bad)
jl
lea
and
push
hlt
ins
jmp
add
sbb
lds
shl
xchg
mov
jb
or
xor
fwait
ins
dec
int
adc
sub
mov
mul
adc
iret
out
rcl
ja
inc
or
adc
daa
sar
cmp
movs
fbstp
sbb
jecxz
(bad)
push
in
lock
fldlg2
jmp
js
xchg
int3
addr16
inc
pop
pop
inc
bnd
lods
arpl
pop
mov
xor
sbb
xchg
dec
fcom
xchg
xlat
pop
in
stos
mov
mov
fs
xor
mov
adc
pop
movs
or
add
jae
cwde
dec
sbb
les
dec
mov
mov
push
bound
mov
std
sahf
fidiv
xchg
jle
mov
movs
shr
stos
sbb
ds
sub
les
fsubr
pushf
dec
jne
(bad)
mov
sbb
add
xchg
and
inc
rcl
sbb
fst
push
mov
sbb
and
or
repnz
sub
(bad)
hlt
dec
gs
jo
scas
push
inc
jmp
movs
sbb
mov
arpl
es
and
dec
outs
xor
out
cmp
or
shr
js
mov
int
sbb
std
xchg
jmp
pusha
(bad)
cmp
push
out
test
mov
add
out
push
sbb
imul
sbb
jl
adc
shl
nop
xor
je
hlt
xchg
int
sbb
in
in
shl
jne
adc
(bad)
out
add
add
push
(bad)
push
dec
sub
push
inc
jp
pop
pop
xor
jecxz
dec
cdq
pop
push
mov
and
mov
mov
loope
or
push
push
loope
mov
mov
add
mov
push
out
or
sbb
(bad)
and
and
sar
outs
jbe
mov
pusha
(bad)
pusha
jae
mov
pushf
sbb
jnp
mov
sub
in
pop
mov
inc
sub
icebp
and
cwde
pop
dec
iret
sbb
sbb
cli
jmp
push
mov
ss
sbb
mov
mov
sub
sub
leave
cmp
shl
mov
sub
cld
push
stos
shl
retf
ret
(bad)
push
fcomp
push
test
imul
add
jno
rep
gs
mov
push
dec
hlt
mov
aaa
mov
push
cmc
cmp
fwait
shl
push
sub
cmp
(bad)
mov
jp
pop
in
inc
add
add
out
repnz
cmp
pop
inc
dec
(bad)
mov
or
test
jle
mov
bound
xchg
mov
or
loop
push
(bad)
retf
dec
or
div
mov
and
push
inc
xor
mov
or
sub
jne
jns
into
mov
xlat
or
sbb
xor
inc
adc
inc
dec
daa
jnp
(bad)
mov
movs
cmp
(bad)
loope
mov
pop
fwait
das
sbb
and
(bad)
sbb
or
test
mov
adc
xlat
jnp
push
mov
mov
xor
aam
neg
movs
cwde
sti
ss
and
dec
xchg
mov
mov
mov
div
mov
scas
push
mov
xchg
ror
mov
add
in
inc
jbe
ror
push
mov
cdq
div
scas
xchg
gs
ret
xchg
or
mov
lock
(bad)
add
or
(bad)
xchg
jge
xchg
adc
mov
movs
ins
inc
xor
inc
data16
aaa
lea
lds
imul
push
mov
fist
pop
ficom
and
icebp
mov
and
in
inc
jmp
push
xlat
jmp
add
pop
stos
push
inc
mov
add
leave
call
xchg
cmps
icebp
jno
mov
xchg
pop
adc
repnz
cdq
shr
mov
test
(bad)
mov
ret
nop
fisttp
movs
in
adc
jo
fld
cld
sub
mov
inc
dec
adc
enter
push
add
repnz
pop
nop
das
mov
jmp
push
or
rol
mov
or
mov
push
cdq
rol
push
outs
sbb
adc
jne
jp
cli
lock
ret
jl
mov
push
adc
fisttp
xchg
sbb
adc
ins
dec
(bad)
call
outs
int
jle
cmp
(bad)
inc
js
push
lds
xor
sub
inc
mov
pusha
mov
ins
sub
out
cmp
add
lds
cmps
mov
(bad)
mov
movs
adc
hlt
dec
add
scas
pop
into
mov
push
push
cmps
fnsave
fcmovnb
xor
jecxz
add
pop
mov
shl
mov
mov
shl
ds
fisub
mov
jb
fild
xchg
in
adc
pop
jnp
dec
ret
push
mov
(bad)
rcl
inc
mov
fmul
push
js
out
fisubr
mov
mov
and
dec
mov
push
test
adc
push
pop
lock
jecxz
fwait
xor
das
pop
inc
out
fmul
cmp
xchg
clc
and
fiadd
xchg
call
in
jle
cs
fstp
sbb
mov
sbb
loopne
xchg
cmp
lock
push
(bad)
call
sub
cmp
dec
cmp
cmp
mov
xchg
retf
or
cmp
movs
or
xchg
and
mov
pushf
in
dec
pop
sbb
gs
jle
or
mov
mov
sahf
dec
jne
push
cld
add
test
movs
sub
idiv
mov
ret
dec
call
cmp
mov
inc
ins
mov
aam
popf
pop
add
enter
fdivr
jnp
sbb
xchg
push
add
add
outs
jge
in
jno
cmp
adc
cld
out
add
and
(bad)
dec
jmp
dec
jmp
jle
sbb
test
inc
out
movs
out
iret
std
sbb
or
mov
push
jle
mov
add
out
adc
stc
mov
cs
push
pop
leave
mov
test
cmps
mov
or
scas
pop
repz
push
pop
mov
sub
jno
inc
retf
lahf
and
pop
and
cs
or
dec
adc
in
out
leave
in
neg
jle
retf
mov
and
retf
jmp
dec
jnp
and
cmps
rcr
scas
sub
push
or
loop
cmovns
sub
sbb
push
jb
jns
dec
sti
sbb
and
lods
or
enter
pop
dec
inc
fld
stos
mov
or
fstp
nop
imul
inc
aas
adc
shr
add
cmp
jmp
adc
mov
gs
add
add
jp
sbb
lds
xlat
pop
sbb
add
xchg
dec
inc
nop
cmp
mov
adc
(bad)
ret
jl
cmp
sub
shr
in
cli
(bad)
xor
adc
jecxz
das
addr16
pop
sar
xchg
adc
xor
or
test
mov
fcom
push
lods
ins
shl
sub
push
int
inc
lahf
int3
xor
(bad)
fistp
ss
push
adc
mov
ret
push
mov
jge
in
cli
bound
add
mov
mov
jo
and
fnsave
and
jbe
jnp
das
pop
fisubr
cmp
iret
push
aas
push
mov
in
jno
cmp
shl
xchg
shl
mov
pop
jae
rol
pop
not
pusha
js
mov
in
sahf
movs
sbb
push
cmp
das
rol
aad
lods
mov
gs
icebp
mov
test
js
aas
es
(bad)
in
push
and
dec
jo
jmp
xor
xor
(bad)
sbb
sub
rol
addr16
sbb
cmps
xchg
ret
movs
into
cmp
inc
cmp
(bad)
mov
dec
add
inc
leave
cmp
xor
and
pushf
movs
psraw
push
jl
inc
mov
pop
iret
fst
push
dec
shl
fisubr
popf
movs
fsubr
jle
movs
icebp
jle
je
loope
and
adc
push
jns
ja
scas
cmp
popa
cmp
xchg
pusha
jmp
fcom
leave
fnstcw
nop
add
or
shl
or
mov
and
mov
mov
cld
cld
shl
retf
adc
or
stc
cmps
add
or
sbb
push
ss
pop
sahf
cmp
fmul
mov
dec
xchg
loop
xlat
push
and
jge
cld
sub
mov
cs
in
xchg
push
push
popa
dec
rol
add
jne
cld
sub
mov
call
loop
stos
inc
mov
push
in
repnz
ds
(bad)
adc
mov
rcl
in
lahf
dec
icebp
mov
les
push
sbb
add
test
add
jnp
call
shl
push
daa
mov
shl
mov
jl
jo
popf
mov
and
gs
fnsave
cli
mov
dec
and
shl
clc
je
mov
(bad)
(bad)
imul
cmp
mov
sar
daa
push
add
cmp
mov
inc
mov
jbe
mov
dec
mov
cdq
(bad)
in
fdivr
jge
jp
pop
mov
jg
call
mov
cmp
pushf
ret
inc
stos
cmp
sbb
iret
sbb
icebp
rcr
shl
repz
ins
add
inc
pop
loop
xchg
ret
cmc
ret
mov
jmp
and
int
test
sbb
mov
mov
enter
loopne
and
mov
dec
xor
out
call
ror
push
iret
cmp
push
xchg
scas
movs
sar
lds
xchg
xor
cmc
stos
hlt
out
mov
pop
call
out
les
nop
xchg
and
mov
clc
cmp
cmps
sbb
dec
pop
cmp
push
inc
sub
xchg
outs
mov
retf
outs
ins
int
mov
retf
add
aas
jge
and
movs
in
sub
pop
lods
imul
or
sbb
push
rcl
mov
movs
xchg
sub
in
js
popf
outs
push
push
icebp
push
out
adc
sahf
sbb
out
pop
push
jge
adc
ins
fsubr
out
add
shr
pop
sbb
xchg
inc
imul
sbb
push
fld
jae
loopne
lods
stos
adc
push
cmp
pop
cmps
cmp
aas
xor
call
or
adc
fwait
arpl
jns
cmc
pop
cwde
sti
dec
mov
scas
inc
retf
adc
pop
sbb
rcr
fsub
into
and
ss
xor
out
jae
lods
xor
adc
pushf
ficom
push
call
(bad)
ficom
test
xchg
mov
vdivss
(bad)
inc
mov
mov
mov
cmc
inc
das
cld
sbb
push
movs
out
mov
dec
mov
aas
push
div
not
ins
mov
arpl
out
inc
mov
fmul
popa
cmp
gs
or
sub
sub
fs
sbb
fdivp
fmul
mov
mov
xchg
(bad)
mul
dec
jp
aad
outs
scas
adc
mov
mov
lock
fld
xchg
nop
in
jmp
int
scas
sub
add
pop
cmp
lods
add
arpl
js
fwait
jle
or
fnstsw
(bad)
in
inc
mov
sub
xor
mov
cli
jmp
mov
xchg
(bad)
arpl
pop
shl
inc
xlat
lods
mov
jecxz
xchg
jae
and
dec
pop
ror
or
retf
xor
sahf
int
cmp
(bad)
add
imul
pushf
cmp
mov
(bad)
mov
push
(bad)
fisttp
outs
out
sbb
cli
in
popf
sub
mov
addr16
int3
dec
cwde
out
inc
xor
sti
adc
cmp
in
jns
inc
(bad)
into
jp
call
imul
sbb
aad
out
mov
cwde
rcl
or
jns
jno
ss
arpl
imul
pop
push
mov
sbb
fimul
adc
imul
mov
jle
push
retf
int
and
adc
pushf
ficomp
xchg
pop
xor
aas
mov
mov
add
repz
mov
arpl
push
xchg
aas
and
lahf
cmp
push
mov
and
cmp
mov
jns
push
loope
js
push
mov
jmp
sub
push
sub
mov
dec
inc
lea
aas
and
cmp
jle
imul
adc
xor
mov
and
dec
mov
pop
sbb
inc
mov
mov
cmp
jge
sub
push
int3
add
inc
mov
push
and
mov
add
aas
and
lahf
movs
add
and
inc
xchg
sub
push
or
push
out
(bad)
cmp
daa
dec
cmp
inc
scas
es
mov
xchg
dec
adc
pop
test
jl
and
add
bound
adc
adc
or
dec
mov
sbb
pop
(bad)
out
dec
outs
stc
cmp
lods
mov
jbe
push
fs
or
pop
lods
loop
(bad)
(bad)
ror
dec
or
in
jnp
outs
nop
(bad)
push
cmps
and
sub
pop
adc
(bad)
xchg
adc
outs
call
dec
dec
pop
mov
das
imul
mov
sbb
loope
inc
lock
jno
stos
add
fadd
ins
fsub
and
repnz
and
and
stos
lahf
es
adc
pop
fisttp
cmp
arpl
mov
addr16
fisttp
push
push
push
sub
xchg
sbb
add
popf
inc
sub
frstpm(287
lea
cli
adc
mov
dec
pop
dec
xor
fisttp
cmc
jo
adc
dec
cmp
cmp
xchg
int
jo
out
adc
jb
les
ds
into
mov
shl
rol
pop
pop
sahf
retf
es
inc
pop
retf
fcomp
ins
xchg
dec
enter
sahf
cld
jbe
mov
xlat
gs
jmp
push
movs
mov
mov
(bad)
into
int
xor
sub
fwait
ds
xchg
daa
sub
aaa
push
inc
fwait
mov
pusha
daa
dec
xchg
mov
sub
fsub
imul
mov
or
xchg
aad
mov
ror
xchg
pop
xchg
ins
ret
mov
shl
or
push
and
retf
fmul
jnp
out
fst
outs
and
ss
aam
xor
in
sub
jno
fnstcw
jbe
add
sub
inc
xchg
jmp
mov
or
stos
xchg
cmps
jecxz
mov
lods
push
sbb
in
xchg
imul
out
enter
fstp
and
iret
nop
pop
push
mov
adc
push
and
adc
cs
popa
sbb
jo
and
fbld
rcl
xchg
xor
mov
sub
popf
push
mov
cdq
shl
gs
add
push
ja
test
push
mov
adc
add
and
pushf
add
cdq
sbb
mov
sbb
adc
mov
push
mov
mov
pop
mov
cmc
fst
xchg
lock
clc
out
pop
xchg
mov
pop
ror
mov
xchg
xchg
inc
push
dec
ror
xor
dec
(bad)
stc
pop
inc
or
(bad)
aam
clc
cdq
push
jae
dec
out
out
and
mov
adc
inc
movs
pushf
iret
or
lahf
mov
fild
and
pop
jns
adc
outs
(bad)
retf
jbe
(bad)
pop
mov
dec
mov
xchg
adc
sub
mov
cmp
add
fwait
les
test
and
mov
xor
sbb
jecxz
sub
fst
sub
xchg
sahf
mov
ja
push
sbb
jmp
retf
sar
xor
mov
nop
cmp
dec
lea
mov
stos
add
mov
dec
test
sbb
fucompp
or
xchg
sti
add
add
mov
mov
add
aaa
pop
sahf
out
cs
jo
push
data16
adc
neg
jb
cwde
jbe
pop
neg
loopne
dec
add
ss
fwait
inc
scas
cwde
cmp
mov
out
jbe
push
jge
ss
pusha
stos
adc
dec
daa
aad
loopne
cmp
xchg
inc
dec
(bad)
sbb
jmp
std
das
jmp
jle
push
loop
push
dec
mul
cmp
or
ret
nop
jp
sub
fwait
dec
push
mov
mov
mov
pop
pop
call
das
mov
push
test
or
mov
in
iret
sub
jmp
xor
call
sub
pop
out
mov
in
repz
fwait
retf
and
outs
in
(bad)
sub
loopne
mov
movs
inc
xchg
inc
pop
ins
add
leave
mov
enter
sub
ret
fdivr
int
sub
mov
inc
sbb
in
inc
add
adc
inc
leave
adc
sahf
and
xchg
pop
sbb
outs
movs
jmp
in
fldcw
jns
xchg
fld
mov
push
mov
gs
sti
mov
cmc
mov
sti
mov
sbb
pop
pop
aas
sahf
fadd
add
fcom
mov
push
jnp
outs
jns
push
and
jg
sbb
arpl
pop
loopne
mov
xchg
imul
xor
mov
icebp
ja
adc
popf
mov
aaa
ss
popf
adc
outs
lds
mov
rol
push
mov
push
dec
pop
into
(bad)
aam
(bad)
cmp
mov
retf
ficom
div
sbb
cs
icebp
ja
xor
mov
xchg
push
jge
stos
rol
(bad)
xchg
test
test
addr16
dec
cld
ror
mov
cmp
mov
ret
std
scas
jo
pop
or
dec
sahf
push
sub
push
sbb
mov
jae
or
imul
neg
mov
xor
xchg
out
call
pushf
push
sub
test
mov
xchg
pop
push
mov
(bad)
hlt
cwde
sbb
xor
dec
cdq
mov
pop
hlt
(bad)
mov
imul
xchg
jg
jg
std
mov
shl
into
adc
xchg
push
sahf
mov
repnz
lods
add
out
call
cmp
int3
dec
xlat
lods
and
xchg
xchg
xor
pop
sub
ret
mov
or
out
mov
pusha
xor
push
cmp
pop
add
and
pop
(bad)
cwde
inc
retf
lods
js
xchg
jl
ret
into
push
test
ss
inc
adc
pop
pop
cmp
mov
jp
mov
xchg
add
stos
(bad)
inc
loope
mov
mov
jo
es
xchg
cmp
in
or
xor
sbb
push
pushf
xchg
into
test
jo
xchg
push
inc
or
fs
lods
test
pop
cld
pop
push
scas
div
rcr
fnstenv
mov
mov
add
xchg
iret
xor
add
pop
xor
shl
(bad)
repnz
hlt
pop
adc
cmp
shr
mov
or
pusha
fcom
fnsave
scas
lock
jb
jmp
adc
lock
vmulps
xor
in
retf
int
mov
and
lahf
fnsave
sub
ficomp
(bad)
dec
or
cld
cmp
mov
data16
add
jbe
cwde
add
cmp
fwait
jae
int3
fstp
lods
inc
add
pop
mov
mul
test
xor
mov
inc
int
(bad)
push
into
xchg
mov
push
lods
jne
pop
jecxz
test
scas
js
xlat
adc
test
pop
sub
bswap
dec
sub
rcl
lahf
xchg
jne
rcr
es
add
inc
xchg
jbe
dec
out
lea
sbb
std
jl
lahf
and
in
mov
dec
ss
add
cmp
xor
xchg
or
in
mov
sub
jmp
mov
cmp
(bad)
stc
or
cmp
out
and
add
lock
shl
psllw
push
iret
mov
mov
push
mov
mov
push
push
mov
int3
(bad)
lods
call
pushf
xchg
push
add
clc
mov
mov
enter
loop
pop
push
mov
(bad)
retf
sub
retf
ja
jge
in
das
dec
in
or
add
imul
jbe
das
rdtsc
outs
test
push
push
xor
test
xchg
test
and
jns
inc
inc
mov
gs
mov
les
or
push
(bad)
adc
sub
cs
fwait
lds
nop
imul
push
sbb
and
xchg
sub
(bad)
sub
(bad)
cmc
mov
push
or
(bad)
mov
outs
jg
push
add
fstp
stos
xchg
adc
jle
inc
sbb
(bad)
pop
mov
add
fisub
adc
aas
jmp
fidiv
mov
clc
cmc
mov
jns
aas
adc
add
adc
adc
ret
push
jg
stc
mov
push
fidiv
sub
popa
mov
mov
pusha
dec
adc
popf
sbb
js
add
je
jns
dec
cmp
cmc
mov
xchg
mov
popa
retf
cmp
pop
ret
add
jmp
inc
ins
mov
ins
push
lods
fimul
push
mov
lea
pop
or
not
sahf
icebp
or
push
pop
fld
fs
and
cmps
inc
test
in
outs
xchg
jmp
stos
sbb
pop
xchg
aam
and
inc
(bad)
call
mov
add
das
cmc
add
jp
push
cmp
sbb
cmp
and
fisub
and
es
lods
ss
push
ins
pop
cmps
mov
fdiv
movs
shl
mov
scas
rcr
push
aas
sub
push
mov
(bad)
enter
sbb
xchg
(bad)
fcom
sbb
adc
push
inc
inc
mov
mov
or
pop
jp
jnp
xchg
retf
push
mov
inc
jmp
sub
ins
test
mov
aam
and
pop
or
scas
jmp
cwde
dec
dec
add
cmc
jge
mov
test
pusha
(bad)
dec
adc
rcr
xor
pop
outs
cwde
jns
ret
loop
sbb
xchg
sbb
push
cmps
mov
test
mov
sbb
push
les
call
loopne
cld
popf
mov
jmp
rcl
fucomi
test
pusha
ins
(bad)
pop
xor
xchg
scas
mov
mov
pop
or
lods
xchg
sub
xor
dec
mov
jl
dec
pop
arpl
mov
(bad)
bnd
push
mov
cmp
lods
sbb
fldenv
inc
scas
dec
lods
movs
test
push
hlt
lods
cmp
xor
or
aaa
mov
fnstsw
mov
pop
pop
xor
sbb
outs
fcom
shl
popf
dec
ja
push
mov
mov
jp
mov
pop
ja
test
mov
adc
inc
popf
jp
icebp
push
sbb
cmps
fcom
cwde
sbb
mov
mov
push
add
pop
adc
push
or
retf
xchg
outs
in
mov
call
dec
call
nop
mov
in
cli
sahf
or
adc
adc
and
sbb
sub
ror
jnp
ror
adc
or
call
cli
jns
xchg
rcl
scas
mov
sub
popa
adc
xchg
test
adc
sub
xchg
fs
lahf
ficom
sub
sub
les
xchg
fldcw
jb
addr16
fs
sub
ret
adc
pop
push
jb
jl
test
stos
jno
and
mov
push
adc
fstp
std
inc
loope
dec
call
test
call
test
dec
jl
sub
aad
cmps
lods
lods
and
adc
xchg
mov
cmp
add
sbb
add
test
lods
sub
fidiv
push
jmp
mov
sbb
in
jge
cmp
ss
aad
push
push
ja
cdq
sub
jb
ins
mov
rcr
cmc
repz
push
xor
enter
stos
js
call
pop
hlt
fadd
cmc
cmp
aas
in
sub
cmp
lock
jp
(bad)
cdq
cmps
xchg
fwait
and
xor
cmp
retf
sub
adc
cmc
dec
mov
js
dec
loopne
mov
cmp
adc
lds
cmps
or
clc
mov
pop
add
sub
add
nop
or
and
cmp
pop
test
imul
cmp
add
mov
not
sub
xor
add
cmps
and
arpl
adc
into
repz
inc
or
aad
lods
retf
or
inc
pop
fcom
jo
loop
cmp
lock
ins
in
sti
arpl
adc
dec
ins
test
ins
mov
xchg
pop
(bad)
stos
jle
mov
sbb
push
icebp
ss
xchg
mov
sbb
sbb
sub
mov
add
or
lds
imul
mov
pop
loope
adc
in
cmovns
out
jns
hlt
and
lods
mov
ja
cmp
ds
ins
push
cmp
shr
xchg
out
xchg
test
pop
cwde
inc
(bad)
adc
xor
xchg
repz
pop
push
call
rol
pop
dec
mov
or
pusha
mov
outs
mov
stos
shl
icebp
sub
and
and
pop
and
cmp
xor
test
repz
and
int
xchg
push
jecxz
cmps
popa
mov
jge
rol
inc
sub
or
test
cmp
bound
les
xchg
idiv
jo
cmp
mov
or
addr16
lods
retf
mov
je
jno
jne
mov
pop
jp
inc
cmps
nop
inc
sub
adc
cmp
fistp
or
xchg
addr16
sar
adc
mov
out
and
arpl
out
dec
rcl
pusha
inc
mov
jb
neg
sub
mov
bound
inc
mov
mov
lods
out
bound
and
push
aad
dec
push
mov
aam
push
jl
push
neg
dec
mov
pop
test
and
fldenv
and
xor
pusha
fstp
and
shr
(bad)
sbb
in
sbb
mov
push
loopne
sti
(bad)
ss
xchg
popa
out
cmp
adc
movs
sub
test
pop
test
pop
cwde
jbe
or
adc
jmp
lods
mov
mov
or
pop
cmp
sub
arpl
sti
inc
movs
fstp
xchg
sar
fist
ds
xchg
test
fisttp
in
inc
shl
or
xor
rcr
ret
mov
rcr
je
test
sti
mov
cdq
jp
xor
jmp
and
pop
push
sub
fwait
xor
mov
scas
in
in
mov
shl
ret
mov
popf
lock
mov
mov
add
sub
cwde
cmp
pop
xlat
fadd
push
jg
adc
mov
push
xchg
js
mov
or
dec
fisubr
lahf
std
jns
fbstp
or
sub
xlat
aam
sub
movs
rcr
pusha
scas
inc
jne
xor
push
cwde
xchg
out
add
cmp
push
stos
push
bnd
iret
jns
retf
push
dec
and
(bad)
call
add
(bad)
and
pop
adc
ror
xchg
fiadd
call
shl
dec
cmps
fs
ror
sub
add
dec
cs
xor
pushf
inc
movs
push
repz
inc
test
sub
popa
xor
popf
pop
inc
ins
rcr
add
pushf
jmp
or
outs
lds
imul
mov
add
ror
xchg
lods
adc
(bad)
cmp
and
jle
rol
jno
sub
fnstsw
daa
enter
sub
sub
dec
push
test
movs
fdiv
(bad)
jns
mov
fisub
test
jl
sub
leave
test
out
cmp
stos
mov
push
dec
mov
dec
arpl
neg
movs
(bad)
idiv
jle
mov
inc
sub
ds
inc
hlt
pusha
pop
cmp
dec
pop
add
in
inc
mov
in
test
adc
mov
and
pop
adc
inc
dec
sub
cld
jg
jne
xchg
mov
(bad)
or
or
scas
call
xchg
cmp
sub
pushf
lea
jb
add
int
frstor
push
mov
(bad)
into
stc
(bad)
pop
push
or
neg
sbb
popa
(bad)
sbb
out
in
push
cmp
adc
out
inc
in
add
nop
mov
jae
inc
hlt
imul
inc
arpl
sahf
mov
scas
test
(bad)
test
push
or
add
mov
jmp
xor
(bad)
hlt
and
pop
dec
shl
scas
test
inc
test
xlat
fs
shl
setnp
push
popf
push
out
shr
jnp
xchg
lock
adc
jg
jle
mov
daa
hlt
inc
lods
out
les
jg
or
inc
and
pop
movs
xor
fnstsw
and
xchg
sub
jne
aam
mov
push
or
jae
fisttp
aam
mov
test
and
repz
or
or
jns
cmc
fs
add
push
sti
ja
loopne
mov
fdiv
inc
fsub
mov
cwde
ja
and
inc
mov
test
pop
push
push
lea
jno
add
mov
mov
fadd
outs
xor
dec
mov
add
fdivr
jmp
jmp
sub
ret
xor
jl
sub
(bad)
dec
test
push
rcr
sub
xchg
jno
not
cld
call
add
mov
dec
mov
mov
mov
jmp
test
(bad)
jno
imul
lahf
dec
adc
ror
ds
loopne
and
clc
pop
daa
repz
stc
push
stos
cwde
and
rcl
adc
fdivr
xchg
xor
sbb
jecxz
pop
aas
add
call
adc
inc
nop
std
fcom
fwait
dec
jmp
fwait
int
pop
cld
sbb
mov
int3
int3
popa
xchg
inc
dec
xchg
jmp
mov
jg
jo
jne
xor
xchg
pop
cmp
imul
or
idiv
(bad)
xor
ss
mov
mov
sbb
lock
stos
stc
daa
repz
mov
cmps
adc
mov
fs
(bad)
fimul
sub
or
pop
xor
(bad)
cmc
scas
pop
fs
xor
xchg
lods
or
jnp
jae
cmp
jg
and
addr16
xchg
test
pop
and
out
fidiv
sbb
cmp
add
stos
outs
call
fadd
ja
in
cdq
xor
cmp
call
dec
or
scas
xchg
imul
cmp
in
mov
xor
pop
call
int
mov
xchg
imul
data16
into
adc
pushfw
in
xor
repnz
sub
out
mov
and
or
bound
popa
mov
mov
dec
mov
mov
pop
je
jp
mov
test
loope
xchg
cmps
mov
inc
push
push
in
idiv
xchg
jecxz
and
out
mov
jle
fbld
cli
or
test
mov
sahf
out
pushf
fdivr
adc
xor
mov
icebp
xchg
mov
xor
cmp
xlat
dec
mov
xchg
movs
test
js
clc
retf
sti
jg
ins
or
xchg
and
jmp
comiss
in
iret
lds
or
xor
and
daa
pop
imul
pop
mov
iret
and
push
xor
jp
sub
loope
push
mov
retf
cmp
mov
and
scas
popa
mov
cdq
ins
in
or
test
adc
enter
test
or
aad
repnz
jmp
jmp
xchg
in
call
jge
test
fwait
push
fisttp
cld
addr16
mov
ins
or
aam
jne
movs
push
xor
dec
sub
adc
fistp
xchg
in
pop
js
jg
pushf
pop
dec
sti
mov
add
in
xrelease
mul
popa
in
(bad)
jecxz
jge
aas
ret
lock
sbb
enter
ror
push
lahf
es
sub
dec
dec
out
xchg
popf
sub
or
sub
jle
movs
outs
inc
and
stc
scas
jmp
jnp
fistp
adc
(bad)
pop
mov
lock
inc
or
jmp
rcl
pmullw
stos
mov
dec
lahf
mov
loop
push
inc
into
cmc
xor
jnp
mov
lods
es
xchg
fdiv
shr
mov
dec
test
mov
mov
push
aad
inc
das
pop
push
sub
xlat
mov
lds
sti
add
inc
add
hlt
push
sbb
aas
inc
repnz
jmp
xchg
cld
mov
arpl
les
and
jbe
add
rcr
push
fdivr
cld
out
stos
cs
outs
in
shl
xchg
push
xchg
xchg
cmp
push
cwde
imul
nop
into
ins
ret
add
fwait
iret
mov
push
iret
test
repnz
stos
cli
mov
mov
int3
test
ficom
jno
lahf
stc
dec
in
cmp
xor
(bad)
aam
(bad)
push
jmp
retf
scas
adc
je
out
xchg
mov
inc
mov
in
stos
fcmovnb
mov
xchg
ret
popf
inc
push
or
push
adc
icebp
inc
cmp
scas
xchg
in
lods
jmp
pop
xchg
dec
add
push
shl
push
mov
movs
mov
je
ins
sbb
xchg
in
dec
je
stos
jbe
mov
xchg
and
dec
jp
std
(bad)
cwde
js
jl
adc
stos
jmp
loopne
dec
stos
mov
push
push
out
stc
fsub
jbe
jmp
push
pop
jge
mov
test
sub
in
daa
xchg
push
(bad)
xchg
test
int
mul
add
cdq
lods
pop
test
lods
sbb
repnz
dec
xchg
fwait
fwait
cwde
enter
mov
and
clc
sbb
int
lock
mov
jo
cmc
neg
rcl
andnps
pop
div
push
cmp
ret
xchg
sbb
sub
sbb
xchg
mov
add
sahf
stc
(bad)
icebp
test
jnp
push
test
push
std
sbb
addr16
lds
mov
cmp
div
repnz
xor
sub
iret
add
data16
add
int3
jbe
mov
outs
enter
test
aas
push
aad
pop
push
fwait
std
jge
sub
pushf
test
jae
fld
push
aas
mov
js
pop
ret
bound
xor
xchg
ret
aad
ja
lods
dec
pop
rcr
xchg
les
cmp
std
or
and
mov
repnz
inc
retf
std
cmps
xchg
inc
adc
fcmovu
sbb
std
xchg
and
ds
inc
ret
and
movs
push
xor
mov
imul
and
sub
or
ins
dec
retf
and
enter
pop
xchg
jne
mov
cmp
or
cli
loopne
xchg
inc
mov
pop
loop
scas
outs
add
pop
adc
jb
mov
imul
in
mov
xor
push
gs
pop
push
adc
sbb
mov
paddw
cmps
test
aad
in
aam
cmp
fwait
xchg
repz
hlt
retf
mov
sbb
ins
xor
mov
not
stos
push
sbb
sbb
and
and
in
mov
clc
add
fld
iret
stos
mov
in
sub
call
xor
push
mov
inc
mov
lea
jl
inc
mov
mov
fisub
pop
xchg
mov
jmp
movs
in
cmp
xor
jnp
fs
jns
cmp
mov
xchg
enter
lods
pop
enter
nop
mov
xchg
cwde
shr
movs
mov
xchg
sti
sar
jae
shr
mov
xor
sub
mov
(bad)
xchg
loope
sub
enter
fiadd
std
aad
dec
fldcw
out
sub
xchg
lea
repnz
xchg
(bad)
sub
fist
data16
adc
push
add
aam
push
mov
mov
es
mov
jb
add
push
lahf
fsubr
push
enter
and
add
movs
shl
or
jmp
add
inc
pop
pop
outs
mov
pop
outs
neg
xor
dec
mov
(bad)
cmp
ss
mov
mov
mov
push
xchg
test
xchg
add
mov
and
mov
jecxz
stc
push
(bad)
icebp
movs
and
fild
fs
jb
into
cli
icebp
xchg
ins
clc
jbe
jmp
ret
in
and
bnd
cmp
mov
out
mov
add
lea
sbb
inc
adc
fldenv
cmp
jl
push
in
adc
mov
mov
movs
adc
jo
cmp
pusha
cmp
in
add
cdq
test
or
adc
ins
mov
pop
adc
nop
mov
ret
jle
push
dec
jno
sub
leave
scas
call
adc
mov
mov
pop
gs
jns
stc
xchg
xchg
(bad)
shl
pop
dec
adc
xchg
(bad)
jb
loopne
inc
mov
push
ss
clc
mov
add
xor
ret
jb
int
ret
les
(bad)
cwde
aam
gs
fucomp
aaa
cmp
mov
pushf
mov
jno
dec
jmp
add
xchg
jmp
(bad)
jp
pop
cmp
dec
xor
sub
mov
mov
int
out
inc
inc
xchg
aam
fs
iret
imul
aaa
jns
sbb
dec
test
shr
push
adc
stos
call
mov
jns
add
xor
mov
push
js
call
cld
inc
lahf
in
push
xchg
imul
jne
mov
ins
aaa
clc
fwait
mov
icebp
mov
dec
pop
aas
test
cmp
or
jp
test
cli
jmp
inc
in
adc
push
adc
icebp
scas
out
sbb
nop
hlt
add
je
enter
(bad)
(bad)
iret
inc
data16
das
lahf
lods
adc
and
jnp
inc
cli
out
in
mov
inc
inc
pop
test
jg
fldenv
pop
inc
xor
add
(bad)
call
sub
aam
sbb
clc
into
jp
inc
icebp
jmp
push
adc
pushf
mov
bound
add
xor
or
cli
add
mov
mov
popa
fist
fmul
cwde
xchg
mov
out
dec
sbb
mov
out
movs
lea
push
pop
ds
movs
and
popa
adc
cs
sti
ins
lods
pop
mov
xchg
cmps
push
hlt
cmp
stos
inc
fwait
ja
xor
ret
jno
xor
mov
lods
jno
pop
cli
(bad)
xchg
(bad)
movs
pop
jge
push
jg
hlt
mov
mov
dec
jge
mov
cmp
cmp
cmp
arpl
pop
in
inc
add
inc
cmp
and
ds
inc
lock
xchg
fmul
xchg
mov
add
pop
leave
int3
ins
inc
push
dec
and
fcmove
jns
mov
sti
xchg
push
jp
shr
xor
or
pop
push
mov
and
mov
lods
aam
jle
add
pop
rol
ficomp
xchg
mov
mov
xor
push
iret
(bad)
(bad)
int
ins
sbb
add
and
xchg
cmps
push
popf
pop
js
mov
test
aas
dec
test
jne
gs
ja
and
or
mov
ja
mov
jb
jecxz
jp
fwait
fs
mov
lods
xlat
mov
retf
cwde
mov
gs
sub
das
inc
lock
sub
test
or
jns
mov
arpl
cmc
push
sbb
je
adc
inc
imul
xor
cmps
sub
(bad)
sbb
push
stc
sbb
pop
inc
inc
mov
movs
cmp
jae
(bad)
mov
fadd
adc
mov
mov
call
jbe
and
addr16
inc
xor
lods
adc
enter
aad
adc
je
fstp
retf
clc
pop
xchg
repnz
ds
or
hlt
cmp
inc
cwde
sbb
out
cli
loop
push
mov
rcl
jmp
push
push
sub
sub
out
fcomi
xchg
xor
push
pop
(bad)
or
mov
jbe
imul
cld
xor
inc
lods
sbb
xor
inc
jno
rol
shl
sub
push
pop
call
pop
cmp
out
pop
xlat
mov
xor
xchg
xor
pop
ins
mov
and
ja
inc
pop
cli
imul
sub
pop
sub
lahf
jnp
imul
adc
push
jecxz
xchg
gs
push
pop
aas
push
ins
jns
sar
lds
xchg
inc
or
xchg
arpl
add
jbe
cli
adc
fmul
ss
mov
sbb
js
ins
and
push
push
sbb
push
sbb
shl
xor
stc
test
test
ins
and
jae
outs
or
inc
lock
out
fisttp
adc
mov
sub
pop
jmp
mov
dec
test
cmps
sti
cmp
dec
iret
repnz
cmp
adc
sti
jmp
arpl
sahf
icebp
(bad)
jp
pop
jmp
rcl
xchg
inc
repnz
lods
push
pop
std
int
dec
jmp
fwait
in
mov
jl
mov
jmp
dec
rol
addr16
in
sub
pop
mov
nop
add
jmp
jbe
loop
mov
fcom
adc
jmp
dec
test
and
sbb
mov
or
sub
pop
sbb
or
sub
test
and
test
clc
outs
inc
retf
sub
dec
in
pop
mov
lods
mov
sub
sahf
pop
fstp
inc
sub
mov
mov
lods
fsubp
ins
pop
cdq
and
iret
mov
xchg
cld
add
mov
fwait
xor
sbb
pop
xor
xlat
pop
icebp
les
jmp
movs
pop
mov
cmp
adc
or
mov
sbb
pmaxsw
cs
or
jecxz
pushf
cdq
je
and
inc
jmp
repz
xchg
iret
repz
xlat
jnp
xchg
daa
cli
inc
ins
sub
xor
cmps
jnp
inc
das
test
scas
push
push
xor
jae
(bad)
push
jae
jbe
sub
mov
pop
fmul
push
dec
hlt
cmps
outs
pop
cmps
sub
jecxz
xor
cmc
mov
mul
mov
add
inc
xchg
pushf
cmp
inc
and
fisub
or
sbb
test
adc
jb
mov
jnp
inc
add
dec
push
ds
mov
sahf
je
cmp
enter
scas
std
rcr
aas
loope
(bad)
add
mov
sub
push
outs
sbb
inc
cld
push
inc
imul
daa
fstp
in
mov
push
cdq
jbe
adc
mov
jmp
ss
jbe
loope
sti
inc
mov
std
pop
(bad)
mov
loope
gs
(bad)
call
pusha
add
xchg
scas
mov
push
sar
mov
mov
dec
xchg
sti
shl
pop
push
sub
retf
(bad)
pop
push
cmc
retf
push
push
ja
rcl
movs
mov
mov
adc
es
std
mov
jae
hlt
push
dec
hlt
xor
into
shr
pop
sahf
call
mov
pop
pop
lods
std
jae
push
repnz
cs
mov
loop
dec
leave
push
and
test
pushf
inc
mov
daa
pop
mov
(bad)
dec
mov
ds
push
xchg
inc
lods
xchg
jl
sub
mov
mov
sbb
ret
xchg
inc
movs
xor
mov
nop
adc
lds
jle
add
pop
sbb
jecxz
ds
call
or
rcl
push
fisttp
xchg
or
aam
push
inc
jmp
or
push
xor
jno
sub
cli
dec
call
rcl
neg
sub
aam
icebp
retf
cwde
sub
movs
xor
pop
or
sbb
mul
sub
add
sbb
push
jl
add
ror
mov
test
stos
ins
xchg
push
and
pop
movs
cmp
inc
mov
fcom
pop
iret
jle
nop
add
mov
out
(bad)
xchg
push
inc
pushf
or
fstp
xchg
ja
sbb
lds
xchg
jno
fadd
pop
daa
jle
adc
add
lahf
pop
div
ja
push
cmc
ins
cmp
jmp
icebp
aaa
pop
dec
imul
and
shl
lods
push
adc
fadd
je
pop
add
in
or
aad
ins
mov
jns
adc
mov
lahf
dec
and
or
call
sbb
outs
pop
enter
or
out
cmc
repnz
xchg
adc
ret
loop
push
lods
jp
mov
dec
inc
xchg
xchg
mov
pop
lods
mov
std
cld
inc
int3
outs
push
outs
or
and
pusha
adc
call
cmp
jmp
push
(bad)
inc
pop
mov
pusha
push
xchg
call
and
jne
je
or
test
movs
pop
into
and
idiv
into
not
xchg
loopne
in
sbb
popf
jae
jl
int
dec
jbe
jbe
loope
sti
je
test
adc
push
in
call
push
inc
std
jge
add
cmp
and
mov
mov
mov
pop
and
sub
sbb
mov
push
mov
sbb
xor
je
and
mov
adc
or
fbld
cmp
adc
sub
(bad)
cld
jo
movs
fst
inc
jl
adc
jno
jo
imul
icebp
das
adc
dec
xchg
fstp
(bad)
pop
add
jnp
push
push
lahf
xor
push
lds
mov
mov
and
sbb
jnp
je
cmp
and
fdiv
or
div
inc
sti
sub
xor
cwde
ds
iret
mov
add
mov
aad
xor
rcl
mov
cmp
pop
push
(bad)
fdivr
pop
popa
cld
inc
mov
repz
add
jbe
push
pop
dec
push
mov
jge
adc
inc
call
and
push
mov
ds
scas
pop
mov
aas
xchg
mov
adc
adc
cld
mov
leave
scas
ret
mov
mov
retf
mov
mov
rcl
xor
mov
adc
inc
pop
add
mov
mov
es
loope
stos
lods
call
mov
jno
sbb
sub
sub
les
mov
daa
arpl
jo
mov
xor
imul
test
retf
cmp
addr16
int3
mov
mov
mov
jg
adc
inc
ret
xchg
xlat
push
je
inc
ret
push
add
dec
test
adc
mov
xchg
pop
push
sbb
jb
push
mov
int
shr
movs
aas
and
sub
inc
stos
xor
scas
lock
stos
sbb
push
inc
adc
or
in
mov
xchg
ins
in
xor
rol
pop
push
cmp
fsubr
sub
inc
pop
adc
or
rol
push
pop
sbb
stos
lods
mov
jmp
loope
mov
mov
adc
adc
fcmovne
lock
fldcw
push
movs
cwde
xchg
outs
js
ja
pop
in
or
mov
push
xchg
cmp
ins
jg
mov
push
xchg
dec
pop
dec
fdivr
in
clc
hlt
popf
outs
pop
movs
lods
xchg
gs
dec
or
cld
xlat
or
and
adc
mov
pop
gs
(bad)
test
cmp
pusha
jp
out
outs
xchg
lds
mov
cmp
shr
pushf
jb
jecxz
es
inc
retf
out
ins
ret
or
je
mov
(bad)
xor
add
test
out
imul
jmp
cmp
cmp
add
inc
enter
adc
cmp
(bad)
fimul
(bad)
arpl
jbe
les
mov
(bad)
iret
shl
sbb
mov
adc
into
sub
jmp
lock
sub
sbb
rcl
outs
retf
pop
cmps
push
jecxz
ins
cmp
push
aas
push
adc
ds
in
ret
cmp
mov
xchg
push
div
inc
or
cmp
sbb
xchg
sar
out
jp
aam
(bad)
pop
add
sub
out
adc
outs
push
ss
jno
int3
aas
or
add
sti
jbe
data16
mov
pop
(bad)
mov
js
mov
fdiv
in
jb
test
cmps
imul
rcl
mov
out
cli
pop
xchg
ins
and
repnz
mov
iret
pushf
movs
adc
xlat
movs
stos
mov
fadd
in
xlat
gs
push
xlat
or
sub
mov
jge
mov
in
jecxz
fs
and
cmp
dec
mov
or
xor
dec
cmc
cld
sub
cmp
addr16
jmp
inc
push
sub
clc
int3
in
xchg
fmul
lahf
test
fidiv
ins
mov
fimul
pop
mov
mov
pop
xchg
lods
dec
push
sub
lods
xor
in
push
sub
ret
push
dec
pushf
dec
jo
xchg
mov
pop
cmp
mov
iret
js
fwait
cmc
out
inc
cmps
jne
cmp
les
arpl
(bad)
(bad)
in
daa
push
aam
cmp
pusha
add
outs
inc
(bad)
mov
js
ins
mov
mov
add
sahf
xchg
inc
jmp
mov
jne
inc
sbb
ins
sbb
adc
rcl
pop
fst
mov
add
xor
mov
jmp
bound
sbb
mov
into
mov
jmp
int
cmp
leave
ins
fcmovnu
je
aam
xor
mov
fxtract
adc
mov
jl
dec
das
inc
pop
fcmovnu
sub
in
in
aas
inc
and
jl
cmp
dec
rcr
or
ja
push
std
dec
jle
pusha
jmp
dec
push
pop
adc
imul
aaa
out
cwde
mov
daa
inc
push
cli
daa
mov
mov
xor
cmp
and
mov
fdivr
and
cwde
cmp
inc
and
lds
push
push
mov
int3
xchg
add
js
push
sar
jo
(bad)
icebp
scas
pop
stos
mov
outs
ffreep
or
mov
jno
shl
mov
jo
jge
icebp
push
sbb
in
jae
stos
xchg
aas
je
pop
mov
leave
gs
cmc
inc
xor
mov
dec
mov
jge
pop
mov
les
pushf
out
sbb
pop
add
aam
xchg
stos
jae
or
or
sub
inc
jne
rol
or
or
leave
mov
ret
scas
rol
push
adc
mov
dec
mov
aam
leave
xchg
jno
xchg
mov
fs
and
fnstsw
(bad)
scas
bound
mov
daa
hlt
pop
xor
mov
sbb
fwait
(bad)
mov
or
pop
fs
lea
jecxz
xchg
pop
push
in
fistp
leave
pop
mov
xor
fmul
cmp
and
aam
xchg
jno
scas
mov
retf
xor
test
add
cmp
ins
mov
xchg
xchg
jmp
cld
dec
mov
gs
mov
pop
cdq
pop
lahf
(bad)
cmp
aam
retf
or
lods
mov
ret
adc
cld
lahf
mov
jge
jae
(bad)
retf
inc
push
and
cmp
fbld
sbb
(bad)
movs
in
adc
movs
not
dec
mov
jp
dec
and
leave
sub
and
jp
push
dec
xor
test
mov
call
xchg
add
fisttp
test
icebp
repnz
xor
lahf
stos
push
retf
pop
and
test
test
xchg
cmp
or
xchg
ss
sub
inc
adc
cmc
rcr
fwait
dec
mov
pop
or
add
fsubr
xchg
in
sti
pusha
cmp
jmp
pop
es
in
inc
push
cmps
int
loope
imul
test
ins
(bad)
aam
movs
cmp
ret
sbb
mov
adc
test
inc
outs
sub
icebp
cmp
jne
int3
xchg
or
ret
pop
cmps
dec
jg
dec
xchg
scas
lds
push
add
jmp
or
push
pop
gs
push
aad
fnstenv
dec
add
mov
sub
pop
(bad)
xlat
pusha
push
cld
sbb
xor
fild
jmp
xor
pop
cmps
aad
cmp
sub
icebp
and
cmp
in
inc
mov
cmps
pop
out
inc
popf
int3
rcr
xchg
jmp
xchg
xchg
and
test
std
int3
xchg
jl
mov
inc
test
nop
mov
xchg
pop
add
pop
push
out
outs
out
mov
push
mov
mov
shl
push
fsubr
mov
and
in
push
and
rcr
bound
push
test
sub
adc
ss
xchg
sbb
sub
xor
out
push
(bad)
adc
retf
dec
add
(bad)
clc
aas
cmp
push
fisttp
ss
pop
aam
dec
in
pop
pop
cmp
sub
enter
loope
pushf
sbb
imul
(bad)
ror
add
aaa
inc
fcomp
push
push
pop
shl
push
outs
dec
and
and
push
mov
add
adc
pop
lds
push
cs
xor
movs
mov
sbb
add
inc
out
pop
jno
mov
adc
mov
dec
call
dec
pop
nop
pop
mov
xchg
mov
mov
jae
data16
sti
ret
pop
xchg
es
jmp
dec
mov
and
jb
or
loopne
pop
rcl
ror
pusha
pop
in
inc
jmp
adc
adc
inc
cdq
mov
xchg
xchg
fisttp
inc
add
data16
and
(bad)
test
sar
and
jge
(bad)
fsubr
mov
push
cmp
stos
adc
pop
and
inc
mov
mov
cmc
dec
dec
mov
add
cwde
rol
sub
fsub
daa
scas
and
push
adc
stos
sbb
jmp
mov
ret
and
sbb
adc
sbb
pop
or
xor
sbb
mov
iret
push
lock
(bad)
iret
adc
out
or
test
pop
sub
je
push
jg
ret
xchg
fstp
mov
cs
sub
test
pusha
jo
dec
loop
outs
jmp
jecxz
xor
sbb
and
fucomi
inc
mov
fmul
aas
cld
jle
add
jo
add
add
repnz
cmp
fst
ins
jo
sub
mov
push
push
stos
sbb
sbb
mov
add
leave
add
jns
mov
push
outs
call
loop
ins
fsubrp
outs
sbb
sti
jle
sub
(bad)
push
sahf
or
ret
inc
adc
and
fcomp
lods
(bad)
pop
add
lds
aam
je
jo
and
scas
out
and
les
mov
jne
lahf
pop
dec
sbb
or
or
scas
dec
add
push
xor
cmp
cmc
stos
pop
sub
mov
xchg
pop
ds
retf
(bad)
and
add
dec
sar
xchg
mov
mov
fwait
mov
movs
add
pop
stos
xor
cmp
les
push
jae
push
lock
inc
xchg
or
inc
loopne
sbb
cmp
sub
push
pop
jbe
adc
icebp
adc
inc
jno
mov
out
mov
jp
fstp
test
pop
mov
pop
cwde
ins
popf
stos
pop
ss
mov
pop
mov
aad
xchg
popa
jmp
xor
push
dec
add
bound
dec
(bad)
das
xchg
je
in
aaa
(bad)
icebp
cmc
sbb
rcl
xor
test
sbb
inc
cwde
les
sbb
adc
dec
pop
out
out
jp
(bad)
and
outs
xchg
pop
jg
sar
jae
sub
fldcw
stos
mul
cmp
mov
jae
cmp
lock
jmp
adc
jecxz
rcr
mov
retf
lods
dec
or
jo
ret
test
rol
xor
jnp
call
push
out
sbb
mov
dec
retf
rol
enter
add
data16
inc
scas
jne
mov
mov
xchg
retf
not
pop
mov
dec
mov
inc
test
clc
cmps
ins
lds
dec
mov
(bad)
add
inc
xlat
jp
ins
push
retf
ret
sti
and
mov
adc
xchg
out
xlat
scas
cmp
cdq
jmp
sub
loope
sub
inc
dec
cmp
(bad)
fst
sti
and
inc
out
pop
push
and
xchg
mov
ds
jp
aas
dec
lea
bound
loop
aam
addr16
mov
inc
fsub
movs
gs
retf
test
int3
cdq
in
ss
out
gs
stos
sbb
aaa
(bad)
add
stos
sub
adc
loopne
iret
jno
icebp
ret
jbe
popa
cmp
push
sbb
sub
mov
push
js
mov
adc
and
jno
jg
scas
(bad)
cmp
inc
popa
repnz
or
dec
fisubr
das
std
in
aaa
xor
adc
jecxz
out
test
ret
xor
sbb
fwait
hlt
mov
mov
or
mov
cld
(bad)
and
bound
stos
add
scas
push
push
int
mov
mov
out
addr16
out
retf
ins
cs
mov
and
mov
fisttp
xor
scas
div
cmp
sbb
cs
xor
dec
push
adc
ficom
push
inc
mov
jns
inc
xor
mov
pop
leave
jmp
push
and
(bad)
xor
fcomp
ret
adc
lods
mov
xchg
xchg
xchg
pop
mov
pop
(bad)
add
dec
adc
das
in
data16
xchg
pop
mov
lods
dec
pop
and
mov
mov
mov
sbb
test
ss
cmps
in
adc
fcos
mov
add
ja
stos
mov
cli
push
popa
adc
scas
std
and
pop
scas
cmc
jmp
int3
push
outs
jae
(bad)
cmp
xlat
cmps
sbb
mov
xchg
pop
push
ins
aas
adc
(bad)
add
xchg
das
cli
leave
mov
sti
mov
cwde
push
add
mov
test
xor
adc
test
aaa
loopne
iret
dec
jp
cmp
imul
xchg
mov
ret
sti
outs
mov
dec
ja
in
outs
jo
sub
(bad)
js
sahf
jmp
movs
test
adc
sub
cmp
in
cld
xchg
push
ins
fimul
dec
sub
mov
(bad)
push
cdq
push
push
xchg
hlt
popf
ss
fmul
popf
mov
dec
lods
(bad)
ja
(bad)
mov
jmp
add
or
push
sub
(bad)
lahf
popa
adc
inc
(bad)
push
sub
jp
or
arpl
je
add
retf
loopne
std
push
pop
pop
cmp
mov
add
push
dec
jp
clc
sbb
out
cld
test
jnp
stos
and
inc
(bad)
jmp
fcomp
(bad)
xchg
rcl
loopne
sub
adc
cmp
or
inc
adc
adc
jg
cmp
mov
movs
inc
std
loopne
dec
or
stc
or
enter
cmp
push
cmp
jl
cmp
nop
or
clc
mov
or
sti
sbb
mov
xor
add
div
xchg
idiv
imul
(bad)
retf
lods
inc
in
int3
xchg
push
inc
jle
mov
ds
sub
dec
xchg
enter
into
xchg
scas
es
xchg
jecxz
dec
shl
imul
dec
sub
xlat
jl
ja
jbe
mov
imul
xchg
fistp
mov
pop
inc
dec
inc
adc
rol
frstor
mov
add
sub
ret
stc
js
mov
xor
int3
cmp
retf
idiv
jns
and
jb
add
das
jp
stos
aam
dec
movs
or
jb
dec
clc
push
ins
and
fsub
std
fst
dec
xchg
sti
pop
in
into
inc
mov
push
adc
ret
mov
call
imul
hlt
repz
cmp
inc
or
rcl
push
pop
arpl
outs
push
fistp
mov
mov
nop
add
mov
xchg
faddp
mov
loopne
mov
pop
pop
xor
jne
gs
jl
test
lods
addr16
jle
test
mov
jbe
sub
call
sbb
mov
sub
add
ret
push
cmp
and
sbb
adc
xor
xor
fs
rcl
xor
cmps
mov
rcr
mov
add
adc
int
pusha
mov
push
call
or
adc
pop
ret
aad
retf
leave
mov
jne
nop
mov
mov
(bad)
push
iret
inc
ins
cdq
push
mov
push
iret
push
int
jl
je
mov
(bad)
push
pop
push
repnz
cmp
sub
inc
inc
fiadd
dec
or
inc
dec
js
jae
stos
retf
xchg
sub
jg
in
outs
sbb
in
shl
repz
ja
stos
push
lock
cmp
and
outs
push
sbb
push
neg
pop
xchg
dec
dec
jle
jge
inc
jmp
aas
add
rcl
ss
sbb
(bad)
ds
inc
dec
cmp
retf
sub
pop
outs
fstp
inc
lods
xorps
xor
cmc
jmp
jb
inc
or
add
or
pop
mov
adc
xchg
push
cmps
lahf
pop
jp
ror
dec
mov
ins
scas
movs
xchg
hlt
xchg
test
push
(bad)
imul
(bad)
popf
inc
xor
test
fdivr
imul
cmp
cmp
icebp
jmp
movs
or
sar
es
mov
jg
cwde
scas
pop
into
xor
(bad)
and
cwde
je
rep
stc
lds
scas
dec
enter
stos
test
out
mov
pop
mov
ins
dec
scas
mov
xchg
xchg
xchg
adc
adc
test
and
xor
aaa
repnz
test
fldcw
and
dec
aas
and
call
push
xlat
out
ror
dec
aas
(bad)
sar
cmp
push
fwait
in
call
pop
xor
adc
icebp
(bad)
retf
jp
or
scas
faddp
cmc
inc
xor
or
dec
aas
inc
pop
test
sub
mov
jno
adc
mov
cmp
xchg
adc
cmp
or
xchg
sub
add
fadd
pop
xchg
fild
outs
push
push
pop
mov
test
fsubr
rcr
adc
daa
movs
(bad)
sbb
into
(bad)
shr
push
adc
fild
dec
or
cmp
xchg
jmp
shl
add
or
inc
add
loop
cmps
sbb
jb
movs
nop
or
ret
or
inc
in
loop
sbb
push
jo
cmp
push
push
or
ss
pushf
cdq
inc
adc
daa
mov
int3
loopne
xlat
bound
enter
mov
fs
mov
daa
movs
out
push
and
add
int
scas
cmp
jne
mov
adc
std
repz
test
mov
out
out
pop
hlt
(bad)
pop
push
out
xor
jmp
fmul
cmps
imul
ins
pop
push
iret
add
mov
iret
ror
ja
lahf
adc
mov
repnz
repz
dec
cmp
xor
lods
cs
xor
sbb
mov
adc
mov
and
in
jge
repnz
neg
std
clc
popf
(bad)
(bad)
pop
jmp
mov
adc
pop
and
lods
mov
cmps
mov
fistp
or
inc
pop
push
iret
pop
xor
outs
and
mov
cmp
shl
xor
jp
not
test
adc
pop
mov
pop
call
push
repz
xchg
aas
fild
mov
test
ret
jecxz
mov
dec
mov
dec
stc
or
cld
push
sbb
mov
lds
mov
push
sub
or
lahf
add
retf
call
add
call
sahf
enter
or
xchg
adc
dec
movs
adc
xor
xor
loopne
cmp
add
sbb
or
mov
or
sti
jnp
mov
dec
loop
das
jno
cli
mov
pop
cdq
mov
arpl
mov
add
shr
mul
mov
sbb
mov
or
mov
add
ret
inc
shr
and
addr16
mov
pop
pop
sbb
cmp
loop
in
int
cmps
xchg
dec
js
inc
inc
(bad)
sbb
dec
adc
mov
xor
xchg
and
pop
lods
xchg
into
push
jge
mov
sub
nop
icebp
scas
dec
lods
in
movs
and
jbe
fldenv
js
pop
je
fxch
or
movs
or
test
ins
cli
add
sbb
popa
shl
and
sub
cmp
into
add
dec
mov
stos
daa
cmc
or
mov
jp
add
sti
arpl
and
push
neg
into
retf
aas
fwait
hlt
stos
test
call
add
sbb
xor
sbb
mov
imul
in
fist
mov
sub
shl
mov
inc
mov
ins
adc
push
and
enter
add
shl
inc
dec
gs
inc
dec
mov
cmp
sub
arpl
(bad)
out
aad
ins
fs
fwait
push
ret
imul
jns
lea
scas
pop
test
lock
pusha
mov
dec
iret
iret
rcl
push
jno
je
(bad)
and
not
call
mov
movsx
xchg
ins
xor
int
repnz
pop
outs
shr
fwait
or
pushf
push
ins
int
jecxz
hlt
add
mov
cdq
inc
pop
(bad)
sti
rol
fwait
pop
pop
mov
mov
out
jl
lahf
mul
and
lds
cdq
ror
pushf
mov
pop
iret
jecxz
mov
pop
push
or
lods
mov
xchg
inc
xor
dec
cwde
adc
jb
(bad)
push
add
sub
sbb
cmp
cmps
fwait
jg
movs
pop
shl
add
movsx
and
cmp
sbb
xchg
cmp
fidiv
imul
sub
xchg
push
sbb
push
fisubr
pop
hlt
fiadd
fs
out
sbb
adc
les
pop
mov
add
icebp
stos
sbb
xchg
test
pop
shr
adc
sub
int3
dec
cmp
std
sub
mov
call
xor
mov
(bad)
mov
bound
ins
shr
sahf
inc
xchg
(bad)
inc
and
lock
xchg
(bad)
outs
pop
imul
fs
fstp
shl
rol
mov
js
aaa
xchg
mov
pop
(bad)
imul
stos
cmp
lahf
add
sbb
in
inc
add
mov
and
out
add
loope
cmp
pop
push
mov
je
mov
lahf
mov
mov
in
cdq
stos
sbb
pop
stos
xor
mov
into
nop
and
xchg
mov
inc
aaa
mov
xchg
std
cmp
xchg
jb
mov
inc
dec
add
pop
xchg
in
mov
mov
lds
test
outs
adc
cdq
sub
pop
in
(bad)
loopne
and
(bad)
jns
icebp
sar
xchg
test
rcr
inc
(bad)
mov
out
adc
stos
jp
addr16
dec
adc
call
fild
sbb
mov
dec
jbe
gs
push
push
ss
(bad)
movs
cmps
push
ror
inc
test
lds
sar
cmp
loop
or
dec
inc
stos
ins
scas
push
repz
add
stc
sub
loope
xor
je
jb
(bad)
jbe
xchg
test
dec
jp
sbb
cmp
into
pushf
inc
xor
mov
mov
lds
bound
stos
fsubr
mov
cmp
mov
out
(bad)
(bad)
push
retf
mov
and
push
idiv
and
cmp
cli
aaa
ins
jecxz
mov
cmp
fistp
dec
adc
pop
(bad)
mov
inc
dec
mov
jb
ror
cmp
(bad)
(bad)
pop
lods
test
sbb
das
add
js
in
pop
fwait
retf
mov
xchg
jmp
jl
in
neg
inc
mov
xchg
xchg
jle
mov
sub
ror
and
dec
xchg
xor
popa
iret
cdq
stc
inc
cmp
mov
mov
adc
mov
and
nop
std
call
dec
push
stos
adc
mov
stos
cmp
or
dec
add
push
sub
ja
sub
aas
fiadd
mov
and
mov
inc
sub
dec
push
shl
retf
push
arpl
arpl
push
icebp
dec
outs
jns
test
adc
fistp
jle
sub
neg
rcr
sbb
jg
js
pop
lock
inc
sub
in
sub
mov
ret
ja
lds
mov
cmp
das
fwait
(bad)
aam
adc
out
ja
test
jne
push
mov
outs
cli
sar
or
shl
dec
mov
adc
jp
xor
scas
sbb
cs
sub
and
xchg
mov
ja
jns
mov
mov
jmp
idiv
mov
add
cdq
(bad)
jmp
stc
inc
push
fidiv
jmp
pusha
xor
mov
add
mov
out
jno
push
pop
jo
sbb
cmp
mov
jae
push
mov
inc
xor
mov
(bad)
fcom
xor
pop
add
jge
mov
xchg
ins
push
arpl
push
mov
dec
add
adc
xchg
inc
popa
sub
out
mov
inc
sar
and
push
xor
(bad)
ja
mov
out
sub
pop
ds
mov
xchg
pop
mov
sahf
adc
cmps
dec
rcl
in
mov
fs
stos
mov
add
jbe
pushf
xchg
jl
or
test
xor
pop
cld
lods
ret
dec
lock
push
iret
pop
mov
cmp
push
jmp
imul
pop
and
fsubr
pop
addr16
jg
pop
ins
xchg
jns
aad
stos
push
mov
xlat
(bad)
mov
fcomp
ret
bound
xor
mov
lds
sub
sbb
cwde
cmps
out
sbb
xchg
pushf
pop
or
aas
inc
jle
push
mov
pop
es
inc
call
fdivr
pop
adc
inc
loop
inc
push
rcl
jnp
mov
(bad)
addr16
pop
mov
out
dec
mov
(bad)
(bad)
mov
mov
arpl
fcmovnbe
or
mov
dec
inc
mov
out
test
clc
jnp
clc
cdq
mov
xchg
push
and
push
jmp
mov
(bad)
dec
mov
mov
fadd
sbb
xor
dec
xchg
mov
call
sub
retf
xchg
in
mov
inc
call
push
cmps
jae
repz
scas
mov
test
jns
loopne
mov
or
call
jle
rol
jo
mov
mov
int
xor
dec
adc
js
popa
(bad)
xchg
xlat
lds
scas
push
mov
stos
out
inc
stos
(bad)
jb
mov
fcom
out
sbb
mov
aaa
outs
std
not
sbb
xlat
jle
int
jnp
push
dec
call
pusha
je
loope
dec
pusha
or
jmp
mov
int
push
jmp
sub
inc
mov
into
mov
sti
and
jns
push
rcr
cmp
call
loop
adc
cli
or
push
jbe
jmp
jns
or
jno
or
test
scas
inc
out
call
out
dec
nop
jp
fbstp
sub
mov
mov
add
(bad)
cld
cmc
bnd
pusha
mov
push
ret
daa
imul
in
movs
lea
inc
repz
repz
and
adc
pop
iret
mov
out
push
adc
pop
repnz
pop
xor
rcr
sahf
dec
mov
sbb
les
mov
mov
jp
aam
inc
push
mov
jne
into
(bad)
jmp
inc
dec
xchg
ja
rol
jo
das
(bad)
or
dec
cmps
into
and
cmp
lods
xchg
push
pop
mov
cld
pop
adc
fst
or
push
mov
push
out
ins
adc
stc
ret
jbe
cwde
(bad)
sbb
fidivr
or
mov
call
jecxz
repnz
cmp
lea
mov
mov
pop
or
repz
add
shl
pop
inc
inc
ret
cmp
sub
mov
fbld
adc
adc
jl
xor
jns
lahf
dec
ud2
clc
cli
dec
loopne
mov
cwde
mov
pop
nop
jb
lds
pushf
and
dec
push
dec
add
scas
mov
int3
mov
ret
cmp
repnz
lahf
jb
push
call
inc
repz
inc
cmp
or
pop
cmp
pop
lds
mov
je
cmps
dec
fimul
cwde
scas
fist
das
xchg
mov
je
push
cmp
call
pop
jmp
cmps
outs
sub
mov
mov
inc
sahf
ss
sbb
js
lahf
test
jo
push
cmp
xlat
xor
xor
jbe
or
out
add
jg
pop
sbb
xor
xor
imul
dec
mov
movs
pop
lock
sar
dec
mov
dec
imul
mov
outs
cmc
sub
mov
int
and
shl
je
arpl
xor
fist
popf
push
lea
and
pushf
jecxz
iret
sub
test
xchg
test
or
aad
cmc
xlat
xchg
imul
push
cmp
and
js
out
nop
(bad)
mov
inc
push
shl
adc
leave
mov
outs
mov
shr
inc
cmp
fwait
repnz
or
jmp
push
pop
call
inc
data16
scas
nop
adc
das
arpl
lock
daa
or
xor
int3
jae
mov
lahf
ins
inc
pop
addr16
loopne
and
(bad)
mul
rcl
mov
xchg
cmp
dec
cmps
add
loop
sti
push
mov
popa
(bad)
in
pop
xchg
xor
out
cmp
sub
jo
loop
cmc
lea
mov
mov
add
push
into
bnd
in
adc
adc
fcom
push
clc
pop
sbb
pop
xchg
add
rcr
into
out
mov
xor
(bad)
call
sahf
aad
push
jo
jno
iret
sbb
sbb
inc
stc
ja
out
addr16
and
mov
mov
jmp
loopne
xor
idiv
or
loope
push
loopne
(bad)
sbb
pop
pushf
cmps
pop
mov
sub
inc
sub
inc
push
rcr
xor
dec
adc
int
call
(bad)
data16
add
addr16
ja
xchg
and
popf
mov
mov
cmp
test
icebp
add
cmp
addr16
mov
jns
jmp
adc
not
jmp
outs
and
daa
mov
jmp
rcr
imul
test
mov
adc
lock
xor
fwait
sub
or
sahf
mov
add
inc
push
add
rcr
scas
mov
fistp
jo
mov
test
cs
mov
sbb
mov
cs
sbb
mov
dec
mov
aas
into
inc
mov
push
xor
xor
bound
pop
and
jmp
xor
xchg
jno
mov
dec
or
or
movs
cld
pop
lock
lods
jbe
pop
imul
adc
add
cmps
push
ror
or
mov
and
pop
scas
in
ins
nop
stos
sbb
das
pop
jbe
inc
bound
sysenter
aas
jecxz
(bad)
icebp
push
arpl
pop
test
mov
call
adc
jg
imul
xchg
fidivr
jb
clc
pushf
inc
lea
sbb
jbe
mov
jnp
(bad)
fisubr
jbe
push
pop
lods
push
stc
test
scas
mov
jb
retf
js
in
arpl
pop
test
xchg
xor
sbb
mov
xor
mov
pop
dec
sbb
mov
fimul
xchg
fsubr
inc
out
mov
in
sub
loop
xchg
adc
cmc
nop
arpl
mov
lock
push
retf
enter
sahf
mov
inc
adc
mov
sub
sub
loop
dec
push
jmp
loopne
mov
fwait
repnz
jnp
mov
int3
pop
in
adc
retf
dec
call
or
lahf
jmp
jno
fsqrt
mov
lods
xchg
stos
in
or
pop
pop
or
je
xchg
stos
mov
enter
in
in
imul
lods
mov
rol
xor
(bad)
outs
aas
push
mov
cmps
data16
ds
dec
iret
pop
(bad)
sahf
rcr
call
cwde
jl
scas
(bad)
mov
jle
fisub
or
movs
inc
pop
out
hlt
cmp
test
cmp
in
adc
popf
inc
mov
mov
dec
xor
mov
gs
test
in
push
xor
sub
int
pop
daa
fs
mov
retf
neg
sbb
out
std
daa
push
(bad)
xor
add
in
add
lock
subps
mov
mov
pop
mov
in
mov
arpl
push
xchg
mov
pop
or
push
or
popa
repnz
jo
retf
fs
mov
fstp
retf
sbb
jp
cmp
cmc
ret
and
push
jl
cmc
aam
bnd
scas
sti
dec
fwait
jecxz
daa
jbe
fcom
ret
outs
push
out
stos
call
imul
mov
inc
hlt
(bad)
mov
add
mov
std
movs
out
add
sti
or
jne
cs
mov
ja
xchg
jge
sbb
jmp
cmps
fiadd
mov
rcl
jb
mov
pushf
in
add
enter
pusha
lea
sub
adc
xlat
repnz
mov
test
dec
xchg
jne
retf
or
mov
sub
sbb
cwde
and
pop
shl
icebp
imul
xchg
xchg
xlat
inc
jmp
mov
jp
loop
rcl
xchg
(bad)
adc
add
adc
xor
stc
push
out
mov
pop
mov
mov
(bad)
loope
pop
sahf
and
dec
imul
cmp
pop
je
add
out
sub
sub
inc
pop
mov
pop
in
adc
inc
jl
push
and
xlat
(bad)
mov
add
test
(bad)
(bad)
mov
pop
fcomp
push
sub
push
mov
pop
ds
inc
or
push
dec
leave
xchg
inc
cmp
clc
(bad)
jae
or
dec
fsubr
lea
movs
add
xchg
stos
ins
dec
pop
jbe
in
mov
mov
das
cmps
add
into
push
push
mov
mov
cmp
ret
or
daa
jmp
xor
mov
jbe
loope
inc
rcr
popf
stc
imul
popf
pop
test
xor
jae
cmps
cmp
sub
neg
push
or
in
test
(bad)
push
ins
mov
cs
test
jmp
ror
jo
daa
icebp
leave
push
pop
retf
inc
idiv
mov
loop
adc
pop
leave
jns
xchg
dec
dec
sub
xchg
dec
push
mov
sbb
fs
xchg
jg
out
or
xor
sti
mov
xor
add
mov
stc
je
mov
lods
cwde
xor
(bad)
push
hlt
ficom
jg
xor
jns
xchg
sub
jmp
mul
mov
pop
out
dec
sbb
rol
popa
cs
out
pop
and
pop
cmp
inc
lahf
popw
inc
pushf
shl
push
push
dec
fistp
mov
cmc
in
and
cmp
mov
xor
mov
arpl
xor
out
bound
push
pop
push
inc
add
in
shl
mov
cmps
pop
call
aaa
fcomi
and
mov
jmp
call
push
ret
imul
dec
mov
in
pushf
dec
mov
js
in
int
aas
xor
int3
bound
mov
mov
push
sbb
outs
mov
jmp
jecxz
ror
sbb
jecxz
xlat
cs
inc
add
outs
int
push
mov
scas
ficom
shl
sub
push
fidiv
push
fisttp
test
mov
out
pop
icebp
in
pushf
jns
mov
dec
sahf
sahf
mov
enter
ins
(bad)
ins
bound
cmp
std
mov
ficom
mov
movs
or
mov
mov
dec
adc
mov
(bad)
mov
sub
mov
or
in
lods
mov
int3
dec
inc
or
sbb
outs
mov
jbe
adc
xchg
sub
mov
add
sub
push
aad
gs
lea
pop
push
pop
mov
(bad)
imul
imul
cmps
aam
outs
cmps
ret
fsub
mov
push
push
sti
jecxz
sub
push
jmp
push
and
pop
sbb
or
call
inc
push
nop
fnstsw
popf
mov
xchg
cmp
(bad)
push
push
fild
pop
cwde
or
scas
mov
call
sub
mov
repz
mov
test
test
aas
cmp
mov
or
test
in
rcr
arpl
outs
loop
push
shl
sub
leave
lods
fcmovu
in
push
pop
data16
cdq
fs
dec
sbb
movs
popf
stos
push
jl
cmps
mov
(bad)
(bad)
sbb
cmc
add
sbb
in
cmp
(bad)
mov
mov
jmp
jmp
ds
push
adc
aam
sub
push
sub
dec
in
ins
fpatan
push
(bad)
push
mov
add
movs
dec
inc
xor
int3
mov
arpl
jae
shr
sub
popa
stos
xor
lods
ucomiss
cmp
jae
enter
push
add
aaa
test
daa
jl
shr
je
mov
(bad)
(bad)
(bad)
int3
dec
scas
jmp
xor
outs
pop
ss
scas
in
lods
rol
aad
jp
pop
xchg
mov
repnz
test
aas
sub
sub
loope
xor
push
xor
or
test
out
adc
adc
pushf
int3
cmps
mov
clc
je
not
fstp
or
mov
cmp
mov
loope
(bad)
repnz
ins
ror
stos
repz
retf
das
call
add
shl
sbb
(bad)
enter
pop
repz
repnz
cdq
lods
mov
sbb
lods
dec
jnp
ins
hlt
pop
(bad)
or
inc
jae
retf
loopne
push
(bad)
inc
or
push
gs
push
xchg
js
fcmovne
mov
addr16
add
xchg
mov
xchg
aam
bound
das
dec
arpl
sub
mov
cmp
mov
push
sub
mov
sbb
push
icebp
leave
cmps
aaa
pop
das
scas
scas
jae
stos
cmp
cmove
adc
stos
lea
push
push
or
sbb
dec
jns
mov
sbb
faddp
ret
ss
cmp
sbb
jae
retf
cmp
push
fdivr
stos
xchg
pop
call
jbe
xchg
into
ins
test
inc
stos
and
pop
dec
cs
jmp
ins
lods
movs
jecxz
mov
cwde
xchg
out
lods
sub
cmc
jne
shl
xor
je
jb
pop
aad
(bad)
fidivr
mov
add
push
rcl
in
hlt
in
add
dec
enter
jo
lds
bound
dec
or
lahf
mov
cmp
adc
pop
sbb
push
adc
mov
or
sbb
stc
(bad)
jne
dec
out
cmp
test
or
in
imul
jl
les
add
or
int3
call
ret
pop
adc
push
stc
mov
xchg
imul
mov
mov
pop
cwde
or
add
movs
rcr
or
cmp
retf
retf
std
xchg
imul
fistp
daa
dec
mov
sub
movs
mov
add
cmps
mov
es
ret
inc
call
jg
jmp
adc
cmp
leave
dec
out
mov
sahf
xchg
xchg
fwait
inc
adc
inc
mov
jae
leave
inc
xchg
cmp
cdq
ds
out
int
std
mov
jmp
push
or
in
(bad)
pop
or
mov
mov
inc
sbb
jno
xchg
outs
inc
cmovge
jo
jns
je
jp
in
push
xchg
mov
movs
fstp
mov
fcomip
cmps
leave
jae
pop
pop
inc
scas
and
xor
mov
mov
aam
pop
lahf
mov
call
daa
pop
(bad)
pop
add
jae
sbb
ficom
test
retf
dec
pop
and
and
stos
xor
adc
jl
in
lds
mov
or
and
std
jne
imul
and
sub
(bad)
out
shl
jmp
mov
cmp
cmp
add
test
clc
call
pushf
(bad)
lods
add
cmp
fsub
outs
icebp
jno
mov
mov
ficom
(bad)
push
cmps
xchg
cwde
fisttp
loope
mov
ret
sbb
push
pop
pusha
lock
or
stc
leave
jo
inc
pop
jmp
(bad)
hlt
jmp
or
inc
or
xor
out
cmc
loopne
test
dec
push
les
mov
pop
pop
scas
adc
outs
stos
adc
aam
js
sub
sahf
pop
jnp
xor
push
xchg
clc
test
adc
sub
xor
xchg
mov
or
mov
and
xor
inc
out
dec
add
mov
ret
into
dec
inc
adc
mov
pop
xchg
scas
aam
dec
sti
cmp
mov
xchg
out
pop
cli
cld
rol
add
and
sbb
cmps
mov
jns
adc
jns
das
mov
cs
je
dec
or
or
mov
cmp
or
ja
jle
out
jmp
bound
lahf
pop
inc
sbb
sub
add
shl
icebp
in
adc
cmp
mov
je
iret
adc
ret
mov
xlat
add
into
or
jg
inc
rcl
movs
cmp
fidivr
retf
xchg
sar
cmp
(bad)
fadd
shl
mov
cmp
push
fdivp
int3
push
stc
and
pop
pop
cmp
out
es
jo
jae
cdq
out
xor
and
adc
adc
jp
dec
repnz
jno
jns
pushf
mov
cmp
repnz
push
push
test
imul
(bad)
cld
int3
adc
mov
repz
sbb
(bad)
in
(bad)
and
mov
dec
sar
test
scas
push
push
add
xchg
inc
stos
mul
inc
mov
and
jl
xchg
cdq
push
mov
dec
or
xor
pop
ins
fild
repz
popf
and
mov
imul
and
and
add
jb
mov
ins
and
leave
lds
jmp
mov
mov
xchg
outs
push
xchg
mov
and
ja
adc
(bad)
cmp
(bad)
jno
lock
fiadd
mov
(bad)
jecxz
fdivr
xchg
imul
dec
xlat
or
scas
adc
mov
pop
rol
(bad)
fbstp
jmp
ja
dec
sub
loope
sub
jg
xchg
rol
fsubr
mov
mov
jae
js
loope
cmp
jo
punpcklbw
mov
outs
adc
test
push
loope
syscall
pop
ja
test
add
(bad)
xor
mov
push
(bad)
gs
inc
dec
xor
dec
pushf
push
popa
sub
mov
loopne
pop
mov
retf
fwait
push
push
shr
pushf
pushf
sar
sub
pushf
sub
clc
aad
scas
or
cmp
das
sub
push
aad
xor
pop
addr16
hlt
fist
sbb
xor
pop
inc
gs
mov
dec
sbb
enter
fsub
mov
int
sub
retf
cs
add
sti
jmp
into
pop
nop
mov
cmp
cmp
mov
ja
div
cmps
cmp
push
adc
sub
cwde
fchs
(bad)
inc
bound
jge
dec
inc
lds
adc
jl
(bad)
(bad)
(bad)
xor
push
inc
fxch
xor
adc
cdq
fisubr
jp
lahf
(bad)
xchg
popf
and
sbb
aam
xor
sub
mov
and
jae
cmp
repnz
scas
jmp
jp
mov
out
sbb
rol
daa
xor
sti
ja
sub
mov
push
cdq
ror
mov
pusha
ret
retf
pop
add
adc
and
sbb
adc
push
xor
pushf
dec
rcr
xchg
fdiv
mov
mov
jp
sti
and
fsubr
and
(bad)
jnp
call
dec
push
(bad)
enter
dec
or
dec
outs
adc
sahf
dec
fcomp
lea
jecxz
(bad)
cli
fmul
adc
mov
mov
xlat
mov
adc
icebp
jmp
stos
inc
inc
mov
dec
dec
pop
adc
aaa
jle
inc
(bad)
ja
js
sbb
sub
out
push
jo
xchg
iret
fsub
dec
xchg
push
fmul
sbb
test
xchg
(bad)
jo
scas
in
jnp
pcmpeqb
stos
inc
lock
push
je
idiv
pop
in
shl
adc
dec
call
mov
push
scas
jl
js
xchg
cmp
lahf
gs
mov
repnz
xchg
lea
jmp
fwait
in
inc
jo
out
(bad)
mov
out
sub
in
cli
aaa
xlat
ss
test
repz
add
mov
shld
dec
and
std
mov
inc
adc
mov
lods
push
add
fpatan
mov
enter
dec
gs
xor
sub
jae
pop
repz
call
sbb
lock
icebp
inc
daa
lods
sub
(bad)
shl
mov
xor
push
fadd
gs
gs
pop
mov
xor
outs
loopne
sahf
repnz
test
mov
and
(bad)
and
cmps
or
movs
add
pushf
(bad)
dec
(bad)
mov
jae
xor
push
mov
aaa
imul
test
adc
jnp
ins
jl
fcmovnu
or
push
push
clc
push
mov
adc
mov
mov
fs
and
scas
cs
jno
xchg
inc
lea
bound
inc
setge
inc
inc
push
sti
gs
fisubr
push
inc
popf
pop
cmps
pop
inc
out
jbe
sub
cwde
fiadd
fwait
cmp
mov
push
jne
push
(bad)
in
data16
xlat
xchg
inc
inc
adc
xor
popf
test
push
iret
(bad)
sub
inc
scas
jl
aas
sub
adc
es
je
push
jns
and
shr
in
arpl
sbb
stc
push
iret
cli
fidivr
push
jae
sbb
rcl
sub
push
stc
mov
sbb
fst
dec
out
add
push
pop
sub
cmp
jne
xchg
loop
icebp
and
pop
out
inc
mov
fsub
ins
xor
test
jno
dec
and
daa
mov
stc
xor
mov
add
xor
in
or
inc
rcr
aad
mov
push
stos
(bad)
js
jmp
pop
into
or
iret
fwait
nop
daa
xor
xor
xor
lahf
mov
jno
stos
(bad)
into
fbld
pop
fadd
stos
inc
mov
sub
lods
fidiv
and
ss
inc
mov
aam
xor
(bad)
aas
xlat
mov
out
inc
sub
mov
iret
xchg
add
ins
pop
ss
inc
xchg
and
fisttp
xor
leave
jb
jae
push
shl
mov
cmp
lods
jae
push
sub
dec
popa
pop
inc
push
push
xchg
inc
adc
fucomp
dec
bound
dec
mov
clc
lahf
das
dec
sbb
cs
jmp
(bad)
in
push
jp
hlt
loope
test
mov
pop
pop
daa
in
test
out
sti
add
out
out
sbb
js
lds
ss
xor
sub
sbb
fistp
pop
(bad)
jl
pop
pop
ds
dec
in
pop
out
jge
pusha
clc
xlat
gs
or
hlt
cmp
aam
or
adc
mov
popf
jbe
(bad)
xor
fsub
sub
push
push
call
pusha
cmp
jg
into
dec
cmps
adc
lock
pop
lea
pop
popa
pop
mov
adc
pop
stos
and
jno
rcl
jb
into
(bad)
jae
jl
push
xchg
dec
mov
(bad)
cli
scas
(bad)
in
add
push
xor
ficom
scas
enter
mov
loope
fisub
inc
call
mov
pop
push
sub
xchg
rcl
fldz
fs
mov
and
mov
sahf
xchg
cwde
inc
adc
mov
jmp
push
shr
dec
pop
out
mov
xchg
cmp
fistp
or
adc
push
bound
and
xor
sub
sub
je
pop
cld
std
test
cmp
adc
lods
cwde
fdiv
out
jno
xor
jle
jp
mov
jae
sub
loop
pop
in
cmp
ds
and
jmp
fmul
ret
mov
lock
xor
xor
out
lods
aad
inc
bound
and
add
mov
fisub
lds
cmc
mov
mov
enter
or
or
pop
xchg
and
movs
je
pop
call
mov
shr
and
jae
outs
push
scas
pop
jmp
out
xchg
in
cli
movs
fistp
push
pop
jmp
mov
mov
sub
inc
pusha
pop
sub
fidivr
dec
bound
int
sahf
in
ins
cmps
mov
fsubr
mov
pop
add
in
jmp
shl
add
pop
jg
xchg
retf
jmp
xchg
or
dec
push
hlt
sbb
into
addr16
jmp
xor
cmp
dec
inc
call
div
mov
sub
int
ret
cmc
cmp
out
icebp
and
enter
xchg
sbb
jnp
mov
inc
sub
xchg
pop
mov
jbe
call
lahf
shr
add
xchg
test
add
xor
mov
addr16
mov
outs
pop
pop
jle
sub
popf
arpl
jmp
dec
add
rol
fidiv
shr
fwait
and
sub
jle
sti
jno
mov
ret
loopne
mov
and
adc
jne
mov
mov
cmps
xchg
pop
scas
adc
sub
fist
mov
fmul
push
rcl
pop
inc
aam
into
jno
push
ja
loop
pop
mov
fstp
add
xchg
data16
aaa
jmp
cmp
data16
xchg
pop
adc
mov
add
mov
cmps
dec
mov
push
ja
in
scas
(bad)
imul
mov
hlt
push
mov
rol
jp
nop
dec
gs
sti
mov
shl
jb
retf
mov
popa
mov
mov
and
fild
div
shl
arpl
fwait
int
mov
ret
xchg
pop
jne
mov
jbe
mov
lock
popf
addr16
pop
dec
cmp
xlat
mov
push
adc
sub
xor
mov
sti
mov
pop
inc
imul
sbb
jg
icebp
mov
sbb
nop
ds
adc
aas
jnp
scas
mov
mov
mov
pusha
cmps
jecxz
push
dec
jo
adc
mov
test
pop
adc
call
pop
fldcw
mov
mov
mov
ror
test
sub
out
jo
inc
inc
jae
inc
dec
sbb
(bad)
icebp
imul
bound
leave
inc
mov
into
dec
cld
xchg
push
retf
out
pop
push
dec
adc
jg
test
dec
adc
cmps
xchg
arpl
pop
shl
pop
rol
inc
sub
pushf
push
sub
xchg
scas
sti
inc
dec
pop
jp
shl
mov
jo
adc
or
jo
xlat
push
sub
pusha
sahf
sub
dec
fsub
push
jne
loop
pop
xor
dec
xor
sub
add
scas
pop
jle
das
stos
pushf
xor
popf
jmp
cld
adc
cmp
sub
xor
outs
out
loop
push
inc
adc
mov
xchg
call
or
inc
outs
repnz
stos
aas
inc
lds
dec
hlt
xor
call
inc
out
fsub
leave
mov
jno
inc
ret
xchg
push
pop
int
imul
call
fisttp
in
inc
imul
dec
jne
dec
mov
fwait
retf
jmp
ret
cmp
xor
and
adc
test
push
pop
loop
adc
fs
cmp
adc
jnp
cmp
dec
inc
sub
jl
mov
and
push
push
call
mov
add
leave
pushf
jle
mov
lods
rcl
int
into
and
inc
sbb
xchg
rcr
sbb
jle
cmp
pop
and
xchg
dec
mov
jb
fisttp
mov
push
add
pop
call
sub
dec
jnp
dec
loope
sbb
adc
dec
ins
pop
and
rep
js
sbb
mov
or
jno
mov
inc
sub
xchg
lods
adc
pop
icebp
ret
adc
mov
xor
repnz
enter
ds
enter
jno
test
js
xor
jno
xor
jno
sbb
repz
xchg
cli
daa
jecxz
repnz
je
pop
xchg
push
mov
add
push
aas
cmp
aaa
mov
push
inc
out
lahf
cs
mov
nop
adc
jnp
test
xlat
imul
ins
and
scas
mov
pop
ror
stos
retf
stos
jp
les
add
mov
retf
sbb
out
pop
xchg
fmul
cmps
not
fdiv
jge
push
jecxz
mov
stc
or
icebp
je
xor
inc
jp
push
fs
cmps
jno
imul
(bad)
scas
xchg
ins
mov
jecxz
iret
adc
clc
push
adc
inc
nop
jo
inc
sub
xchg
jmp
fisub
clc
or
pop
sahf
paddusw
xor
mov
mov
ret
xor
iret
rcl
inc
and
jmp
or
ror
sar
movs
inc
movs
pop
enter
pusha
nop
fistp
or
sbb
push
in
mov
in
sbb
add
test
daa
xor
fwait
and
or
in
es
or
sbb
test
dec
test
scas
lods
movs
fnstsw
xchg
test
cmp
sub
loop
cmp
test
xor
xlat
fstp
cwde
(bad)
je
imul
mov
inc
pop
mov
(bad)
push
outs
ret
loope
imul
scas
test
out
xlat
jne
and
lahf
pop
add
loope
test
cmc
cmp
popf
fistp
jle
lods
rcl
adc
adc
inc
mov
sbb
lahf
mov
in
cs
jno
pop
arpl
xor
jmp
dec
shl
arpl
xchg
sub
cmps
fst
shl
mov
sub
cmp
adc
std
std
inc
push
lahf
or
ja
imul
sbb
test
or
mov
xchg
stos
clc
pop
bswap
and
data16
mov
fs
and
das
lea
pop
outs
xor
mov
(bad)
xor
fidiv
hlt
ins
mov
push
out
mov
sub
call
(bad)
pop
push
jmp
sbb
add
ins
mov
imul
mov
imul
mov
jecxz
loop
mov
popf
ja
sub
out
sbb
imul
mov
mov
out
xor
out
and
mov
dec
repz
out
push
or
scas
sub
cli
pop
mov
dec
mov
scas
cmps
inc
mov
xchg
mov
xlat
ror
pop
mov
cs
mov
and
fimul
pop
in
xchg
mov
cmp
outs
sub
pop
cdq
xchg
fcom
retf
(bad)
pusha
leave
and
mov
or
stos
out
test
ds
inc
popa
sbb
xchg
lock
push
mov
or
cmc
add
imul
(bad)
rol
push
sub
and
jne
fisttp
jne
push
fcmove
ficomp
add
int3
std
push
fsubr
dec
adc
cwde
xchg
add
push
arpl
clc
out
mov
dec
loope
jecxz
jne
cmps
iret
pop
inc
popf
xor
cmp
(bad)
retf
les
into
jns
cmp
jb
test
adc
test
sub
aam
ins
test
dec
and
sub
dec
xchg
fcomp
clc
repnz
ret
iret
shr
stos
xor
nop
aam
mov
fs
imul
add
jle
and
push
in
lods
ret
push
xchg
mov
jg
(bad)
sub
pop
xor
rcr
neg
sbb
add
mov
addr16
mov
sbb
xchg
add
jnp
push
sub
adc
adc
or
push
sub
out
popf
test
pop
add
jbe
and
mov
cli
repnz
(bad)
and
jno
adc
cmp
jmp
push
cmp
mov
test
ret
ins
sub
inc
and
stos
sub
jns
xchg
hlt
pop
inc
popf
push
dec
jp
dec
imul
sub
push
xchg
int3
aad
lods
mov
mov
sub
mov
fisttp
or
mov
jmp
int3
pushf
pop
mov
test
sub
fdivr
call
mov
push
dec
cmp
and
lods
mov
adc
dec
mov
and
js
enter
push
xchg
clc
sbb
adc
je
push
cli
shl
out
xchg
rcr
xchg
pop
pop
dec
das
arpl
movs
and
push
sub
mov
data16
push
adc
jo
test
cld
sahf
leave
out
fsubp
mov
jne
mov
adc
and
add
sub
cwde
jl
out
es
mov
xchg
in
mov
or
fist
stc
mov
and
xchg
test
pop
idiv
push
ret
jle
stos
and
cmp
cmp
jae
mov
shl
xchg
and
and
je
test
cmp
push
pop
jg
pop
aam
mov
or
(bad)
setno
das
fstp
push
ins
out
mov
push
dec
sub
mov
push
inc
jne
ret
mov
mov
jmp
mov
(bad)
push
xchg
loopne
and
or
adc
sbb
pop
mov
inc
iret
sbb
fdivp
out
std
cmp
pushf
fsub
clc
inc
dec
test
out
push
push
jb
lahf
xchg
data16
mov
push
push
mov
cmp
mov
pushf
cli
test
and
mov
stc
adc
dec
mov
push
mov
iret
or
std
push
mov
aas
scas
daa
(bad)
sbb
cld
(bad)
rcl
daa
inc
ror
(bad)
test
inc
rsm
out
outs
rol
xlat
dec
call
sbb
mov
es
inc
retf
add
cmp
jbe
sub
dec
and
ds
shl
repz
xchg
dec
push
mov
cmps
inc
enter
and
stc
cmp
adc
jnp
imul
adc
mov
in
adc
or
mov
mov
pushf
loopne
push
cmp
fadd
add
es
lods
push
lods
(bad)
pop
jle
sub
mov
dec
jno
fstp
mov
xchg
(bad)
mov
add
jl
dec
rol
mov
adc
inc
addr16
mov
adc
xor
sbb
cmc
xor
push
imul
cli
ins
cmc
mov
imul
mov
push
int
or
jl
mov
fwait
or
or
and
pop
push
or
shr
(bad)
out
sbb
mov
sub
inc
xchg
call
pop
mov
(bad)
aam
dec
bound
gs
cs
mov
mov
xor
mov
jne
cs
mov
fdivr
sbb
dec
dec
push
jb
push
addr16
xor
fs
loopne
and
test
mov
enter
es
sbb
xchg
enter
add
pusha
cmp
pop
rcr
jecxz
enter
push
mov
int3
aaa
js
pop
outs
push
stos
and
test
pop
imul
lock
push
iret
jnp
sbb
ja
scas
xor
ror
int
dec
sub
sub
push
mov
push
inc
cmp
jbe
add
gs
test
ror
push
shr
loope
bswap
xor
cmp
mov
cs
jle
mov
and
mov
push
dec
mov
jb
ror
sbb
es
add
adc
jb
pop
(bad)
mov
xchg
push
sbb
pop
push
jnp
jp
aaa
(bad)
push
mov
frstpm(287
fimul
and
pop
sub
inc
jb
je
in
cmovno
loope
mov
sub
adc
push
inc
jl
lea
sbb
div
ins
in
mov
pop
inc
retf
nop
jns
inc
pop
cmp
popa
test
jb
jg
sar
push
mov
cld
out
scas
test
aad
out
inc
inc
xor
mov
adc
retf
rcl
popf
inc
(bad)
lods
xlat
push
pop
and
into
ds
mov
and
bound
or
xchg
sti
jbe
popf
ret
mov
xchg
fs
add
fsubr
and
lods
ds
in
and
scas
add
movs
add
(bad)
aam
jns
jo
mov
sahf
test
pop
mov
mov
pop
dec
or
jns
xor
jae
test
ja
xor
xor
loopne
movs
jge
dec
sub
sbb
mov
inc
gs
xor
add
cld
loopne
sbb
dec
adc
pop
imul
outs
loop
in
ins
clc
mov
fs
jnp
xor
call
add
cdq
scas
test
sbb
mov
cli
cmp
push
stc
fdivrp
jne
data16
fwait
adc
out
sar
and
arpl
(bad)
mov
(bad)
mov
ret
dec
jmp
sub
push
sub
(bad)
int
(bad)
imul
(bad)
iret
bound
repnz
es
cli
(bad)
or
cmps
pop
inc
inc
and
int
mov
pop
xchg
pop
addr16
adc
mov
cmp
test
adc
xchg
cmp
movs
into
ficomp
fs
repz
out
add
and
ins
es
scas
jp
sbb
sub
cmp
shr
(bad)
pop
push
ret
adc
repz
push
mov
add
scas
mov
imul
cld
sbb
test
pop
pop
jl
mov
mov
stos
jbe
arpl
idiv
adc
rcl
sbb
push
cdq
test
inc
cmc
add
ror
dec
call
add
add
ss
adc
test
xor
call
repnz
pushf
adc
xchg
mov
jno
xchg
rcl
adc
adc
dec
in
leave
mov
adc
mov
je
cmps
fcmove
call
or
jp
sbb
jno
push
mov
jb
sbb
mov
stos
pop
pop
inc
icebp
and
dec
jl
jno
xchg
cmps
(bad)
lea
fld
sahf
push
inc
sbb
loope
adc
dec
(bad)
int
mov
xchg
aaa
rcr
and
jp
adc
add
lock
jmp
mov
xchg
scas
push
mov
adc
rcl
lahf
sbb
xor
jecxz
outs
outs
xor
mov
icebp
mov
stos
test
dec
jecxz
aad
adc
pop
mov
fisub
enter
mov
mov
nop
gs
fist
cmp
xchg
in
movs
sbb
popf
fxch
pusha
sub
lds
ja
push
pop
jne
or
pop
(bad)
mov
xchg
inc
imul
in
imul
jg
(bad)
pop
adc
pop
lock
rol
cmps
pop
push
push
test
sbb
sub
arpl
sbb
imul
jo
mov
sbb
pop
pushf
cmps
cmp
xor
je
push
(bad)
bound
mov
pop
out
and
mov
in
(bad)
aam
sbb
pop
fwait
jmp
in
cmp
movs
cli
lods
sub
xor
lods
retf
and
or
pop
cmp
cmp
test
mov
xor
scas
ds
xor
inc
enter
nop
call
bound
test
xchg
stos
pop
or
and
(bad)
pop
aam
nop
cmp
push
punpcklbw
lahf
loopne
xchg
std
std
cwde
call
mov
mov
jp
enter
mov
pop
in
movs
pop
cld
repz
xchg
dec
adc
inc
push
cmps
in
add
fld
scas
out
fbstp
sub
xchg
int
xchg
xchg
add
int
add
push
push
mov
push
(bad)
aam
bound
in
rcr
cmp
inc
cmp
xor
retf
shl
dec
and
pop
mov
cmc
call
dec
pslld
in
cld
push
jb
mov
iret
out
xchg
div
push
shl
aad
inc
outs
out
jp
adc
(bad)
movs
shl
fs
or
pusha
test
sub
gs
call
pop
stc
dec
dec
jmp
out
jecxz
outs
push
cmp
mov
in
fwait
push
icebp
mul
jbe
pushf
test
lock
neg
scas
neg
mov
jo
add
pop
in
out
xchg
and
push
aas
ss
aaa
inc
leave
xor
push
xor
(bad)
addr16
mov
std
mov
sbb
aas
cmps
mov
xchg
push
lods
popa
icebp
test
jmp
and
rcl
leave
popf
sbb
(bad)
aam
pop
sub
push
xor
scas
movs
push
mov
push
jno
int
mov
mov
and
imul
add
mov
ficom
fisubr
inc
dec
stc
fwait
xor
mov
cmp
bound
imul
sub
mov
fild
and
rcl
add
call
jl
in
mov
in
ret
adc
int
icebp
inc
lods
test
and
cmps
sub
dec
inc
rol
or
jmp
enter
mov
and
xchg
push
sbb
add
jp
hlt
imul
mov
mov
call
jp
fs
mov
and
push
and
xor
and
fs
fcomip
xor
scas
dec
mov
dec
inc
xor
mov
xor
mov
pop
daa
in
push
cmp
ins
(bad)
out
lods
mov
inc
add
movs
jno
push
cli
mov
lock
outs
dec
adc
mov
jo
arpl
jns
sub
dec
jb
xor
lods
push
mov
xchg
adc
out
jae
sbb
pop
in
adc
(bad)
es
or
mov
aas
xchg
jp
imul
ins
aam
pop
icebp
pop
push
rol
xor
cmps
pop
jbe
pop
fisub
ja
sbb
sar
repz
inc
dec
jl
inc
pop
icebp
and
add
mov
scas
xchg
cvtps2pi
sti
in
mov
xchg
je
xchg
cmp
jecxz
or
push
fisubr
ja
xchg
clc
lock
push
pop
sub
pop
aas
enter
add
(bad)
sub
and
call
imul
cwde
imul
into
push
mov
popa
mov
mov
adc
loop
jp
push
inc
setp
or
sar
or
cmp
push
adc
and
dec
(bad)
loope
pop
xor
sbb
int
or
cmps
cmp
lock
add
in
pop
inc
inc
xor
mov
icebp
ins
dec
xor
rcr
ret
jae
imul
push
mov
scas
and
aam
std
jns
cdq
or
jecxz
push
movs
inc
imul
xor
dec
out
out
imul
icebp
jge
mov
test
(bad)
(bad)
or
mov
cmp
push
mov
data16
pop
pop
(bad)
imul
xor
ins
mov
pop
mov
mov
loop
cwde
fs
into
jbe
jmp
cld
(bad)
dec
leave
or
xor
addr16
shl
popf
mov
int3
adc
mov
mov
pop
pop
retf
cmp
es
repz
jnp
sahf
imul
dec
hlt
pusha
xchg
sub
aam
test
nop
idiv
mov
enter
jmp
dec
sbb
mov
or
xchg
push
into
in
xchg
inc
jmp
lods
sti
inc
xor
dec
jne
stc
pop
cmp
mov
cmp
ja
add
cdq
mov
fst
add
and
mov
fnstcw
enter
jle
cmp
pop
xchg
mov
sbb
lods
add
mov
sahf
(bad)
mov
movq
(bad)
dec
test
xchg
add
pop
inc
stc
push
lock
cmp
mov
rcr
add
inc
cwde
repnz
cmp
dec
cmp
rcl
les
and
xor
aaa
sbb
xchg
leave
sub
cmp
aas
(bad)
cmc
pop
nop
sbb
test
loopne
in
dec
(bad)
mov
clc
and
aad
fild
lahf
xchg
or
imul
aaa
dec
jmp
outs
mov
cli
hlt
imul
xchg
mov
mov
not
les
(bad)
xor
dec
pop
repz
jno
aas
or
ss
mov
xchg
mov
push
fild
outs
ins
mov
and
loope
jmp
pop
mov
jmp
sub
mov
and
mov
lods
je
fld
jbe
mov
enter
shl
dec
add
xchg
pop
es
mov
addr16
int3
call
sahf
jl
mov
clc
cmc
nop
push
or
adc
mov
gs
and
enter
je
cmp
and
pop
mov
mov
leave
push
push
(bad)
sbb
rcl
retf
push
gs
jae
into
and
icebp
add
mov
and
inc
(bad)
pop
mov
mov
cmp
hlt
daa
lea
sbb
imul
aaa
in
cmp
ss
in
lock
lock
push
inc
adc
push
fwait
push
inc
loope
(bad)
mov
and
jo
jae
xchg
mov
or
mov
stos
sbb
jno
clc
rcl
mov
cmp
add
jmp
fiadd
add
test
mov
xchg
pop
push
sbb
jmp
push
push
fcomp
rol
cmc
pop
cmps
adc
enter
or
les
in
mov
rcl
sub
pop
mov
push
pop
mov
and
xchg
cmp
sbb
scas
xchg
(bad)
in
push
mov
into
pop
pop
adc
fs
dec
xchg
mov
mov
mov
sub
ret
or
pushf
dec
sbb
call
enter
movs
cmps
mov
dec
adc
xchg
sub
shl
dec
mov
rcl
pop
xchg
(bad)
out
mov
loope
inc
loop
arpl
adc
ret
jns
bound
imul
test
sub
test
xchg
adc
jl
sbb
pop
push
icebp
pop
aas
mov
cmp
lahf
inc
and
jp
xchg
dec
clc
add
cmp
aad
loop
arpl
mov
sar
mov
inc
(bad)
jmp
dec
jmp
jns
pop
adc
fsubr
(bad)
sbb
dec
push
sub
(bad)
sti
mul
sub
add
dec
int
inc
(bad)
or
jns
adc
mov
add
cld
scas
pop
add
inc
cmps
xchg
pop
dec
mov
fs
mov
cmp
dec
fisttp
in
push
dec
pop
mov
lock
pop
test
push
dec
call
std
pushf
sub
sbb
adc
stc
push
lds
cmps
test
mov
(bad)
aad
fbstp
or
or
mul
stos
and
mov
mov
inc
lods
aad
daa
stos
ins
and
in
std
sbb
(bad)
aas
inc
dec
adc
stc
(bad)
mov
jmp
pop
cmp
stos
stos
dec
push
std
movs
push
and
movs
ins
int3
jmp
adc
sub
mov
or
jg
es
aaa
daa
test
sub
test
ins
mov
in
mov
movs
or
in
cdq
lods
cld
retf
ins
(bad)
aad
(bad)
xlat
adc
test
(bad)
jmp
xchg
loope
idiv
inc
out
sub
outs
add
add
das
aaa
addr16
xor
rcr
mov
test
adc
daa
(bad)
and
mov
lds
loop
sar
rcr
mov
fidivr
outs
xor
pop
fs
add
xchg
sbb
sub
mov
add
test
js
in
dec
pop
in
ja
mov
and
lods
or
and
mov
out
popf
mov
mov
or
sub
repnz
mov
jecxz
mov
sbb
int3
lods
into
retf
ins
lods
add
icebp
rol
repz
cli
dec
inc
dec
add
pop
or
gs
cmp
sbb
retf
loopne
push
dec
push
mov
inc
mov
scas
mov
je
push
jo
outs
mov
jecxz
add
es
pusha
pop
gs
sbb
add
test
(bad)
retf
sub
pop
inc
mov
mov
cmps
mov
mov
ja
cmp
retf
jmp
sub
jmp
or
add
sbb
add
ret
into
imul
adc
daa
jb
and
retf
or
sub
aam
jns
sbb
movs
dec
out
sbb
jmp
xor
iret
cmc
sbb
lock
imul
pop
popf
loopne
cmp
mov
jo
jmp
inc
jg
mov
sub
pop
cmp
les
cli
imul
inc
addr16
cdq
mov
pop
shr
xor
cmp
fwait
inc
jnp
(bad)
inc
pop
out
test
call
inc
shr
in
mov
int
pop
cmps
xchg
mov
cmp
test
mov
aaa
popf
sahf
pop
push
and
jecxz
lds
punpcklbw
add
mov
jp
jns
sar
mov
(bad)
and
fcomp
into
out
inc
push
loop
ror
enter
mov
pop
jnp
lock
pop
ins
pop
outs
pop
sub
sbb
cmp
sbb
pop
push
inc
xchg
push
push
xor
xchg
fwait
dec
std
cmp
mov
addr16
mov
cmp
fs
ins
xchg
or
out
and
icebp
or
es
stos
scas
clc
sub
add
mov
sub
adc
ja
jne
ins
cmp
movs
fld
add
hlt
inc
inc
(bad)
jmp
das
dec
test
fdivp
test
stos
shr
ret
movs
sub
push
loope
std
mov
loopne
xor
sar
rdtsc
adc
sbb
out
pop
push
sbb
pop
dec
ds
adc
mov
lahf
add
iret
pop
retf
jmp
adc
(bad)
cmps
jo
(bad)
das
fdiv
js
std
mov
mov
cmps
adc
paddsb
pop
ror
pop
xchg
ss
add
aas
dec
iretw
jne
in
cmc
sbb
dec
mov
js
arpl
loope
fld
movs
push
retf
xchg
xchg
push
scas
in
gs
fucomp
loop
push
sbb
pop
mov
test
jnp
xchg
dec
xchg
icebp
scas
mul
(bad)
es
int
or
test
or
int3
fidivr
xchg
cmc
sbb
stc
cmp
or
stos
or
or
xchg
aaa
dec
sbb
or
das
lods
data16
sbb
bound
repnz
pop
loopne
arpl
hlt
test
out
push
loope
push
mov
(bad)
addr16
mov
scas
xor
int
std
shl
pop
test
dec
das
pusha
mov
mov
adc
xchg
cmc
pop
and
fsub
mov
mov
add
xor
in
push
pop
cmp
retf
pop
arpl
repnz
aaa
mov
test
jne
sar
mov
push
push
inc
pop
outs
mov
ins
and
aaa
cmps
inc
mov
daa
inc
mov
cmps
mov
mov
call
aaa
pop
jge
popa
inc
stc
inc
pop
add
test
call
mov
out
xor
add
test
gs
mov
sbb
sbb
leave
test
and
dec
adc
adc
fcomp
or
cld
sbb
adc
popf
leave
mov
addr16
mov
xor
out
fidiv
push
mov
push
cmps
add
inc
push
or
ror
fldcw
adc
cld
adc
xchg
jmp
mov
jo
ja
add
inc
fadd
fdivr
das
cld
xchg
cld
jmp
mov
test
jg
jne
ss
cmp
or
bound
out
pop
int3
pop
mov
pop
inc
icebp
dec
mov
dec
test
mov
test
retf
repnz
push
in
xchg
or
fmul
or
outs
add
dec
mov
pop
movs
and
jo
data16
or
mov
shr
data16
stos
movs
jae
or
hlt
or
test
rep
rol
xchg
jmp
jnp
vmwrite
hlt
pop
mov
add
inc
das
fidivr
and
dec
jmp
scas
dec
iret
mov
inc
xor
cmp
xor
push
jecxz
add
test
jo
and
into
and
out
cmp
mov
out
xchg
push
mov
fnstsw
sahf
pushf
adc
arpl
mov
xchg
adc
cmp
dec
inc
xchg
int
loop
mov
daa
arpl
sub
sub
inc
inc
jne
loopne
(bad)
sub
jmp
iret
cwde
pusha
shl
mov
nop
(bad)
jnp
into
xor
mov
cmp
(bad)
sub
fisub
repnz
pop
retf
mov
ret
(bad)
in
sti
sbb
lahf
cmps
jb
icebp
div
pop
jge
pop
cmp
jmp
icebp
in
das
test
gs
mov
jb
fnsave
call
push
adc
push
and
lods
adc
mov
pop
mov
mov
out
cmp
inc
inc
cs
ret
and
xchg
test
stos
and
movs
add
xor
std
std
xchg
mov
mov
sar
adc
sbb
call
movs
test
popf
and
loope
cmc
or
std
rol
test
(bad)
jp
xor
sahf
scas
int
cdq
jns
mov
out
fdivr
loope
bound
xor
ret
mov
outs
sbb
jl
lahf
gs
adc
jo
adc
jl
sub
in
pop
mov
fstp
push
dec
xor
mov
sub
xchg
inc
mov
arpl
das
pusha
cmp
xlat
jmp
adc
sbb
jnp
xchg
push
mov
ins
pop
fmul
or
mov
sub
in
inc
pop
fsubr
je
leave
or
xor
popa
cmps
popa
inc
bound
pop
adc
std
(bad)
(bad)
or
pop
popa
jp
dec
or
xchg
(bad)
iret
push
add
mov
fsubr
xor
cmps
retf
(bad)
popf
adc
daa
call
cmps
sbb
xor
daa
adc
scas
movs
lahf
jne
sub
jnp
push
xchg
jge
(bad)
mov
and
retf
mov
ror
push
mov
iret
cdq
repnz
pusha
cmp
popf
jnp
xchg
(bad)
fistp
pop
cmp
inc
mov
gs
daa
mov
rol
or
shl
mov
leave
nop
cdq
fisubr
(bad)
inc
movs
std
gs
push
int
sub
sbb
and
jne
rol
sub
mov
sbb
or
jno
sub
in
clc
mov
cld
test
mul
retf
xchg
cmp
xchg
imul
pop
xchg
arpl
cmp
inc
sub
and
adc
add
push
cs
add
sub
aas
cmp
push
mov
inc
adc
dec
aam
sbb
and
push
je
bound
ror
add
mov
sub
and
mov
std
push
(bad)
sub
add
stos
in
jmp
mov
inc
loopne
addr16
add
test
iret
dec
shl
xor
fdiv
out
inc
cld
and
mov
ins
add
push
outs
inc
xchg
leave
cmp
sub
retf
jmp
(bad)
mov
inc
push
scas
stos
imul
push
(bad)
std
pushf
adc
or
pop
call
cmps
jmp
jne
pop
lahf
cmc
push
stos
pop
outs
add
xchg
sub
test
jmp
(bad)
aad
mov
loope
sub
push
inc
jle
stc
or
ret
add
jg
sar
or
push
lods
cmp
call
pop
lahf
dec
sbb
or
xor
adc
cmc
or
imul
shl
xor
dec
ja
(bad)
mov
cmp
xchg
or
pop
pushf
xor
add
jae
xchg
sub
mov
stos
rcr
jmp
mov
dec
std
inc
arpl
and
or
jp
and
adc
xor
mov
xchg
jbe
mov
(bad)
sub
ins
shl
jp
add
(bad)
pop
push
mov
inc
inc
add
dec
xor
std
push
movs
add
js
ja
mov
test
push
int3
and
cmc
mov
int
push
stos
sbb
aas
mov
xor
sbb
cmp
ror
mov
cmovae
in
cmps
aad
loopne
push
cmp
fisub
rol
xchg
popf
bound
push
push
mov
(bad)
pop
pop
nop
fwait
pop
push
xchg
mov
lahf
add
mov
loop
or
jmp
test
mov
jge
rol
jmp
sahf
jb
mov
sub
mov
push
(bad)
jp
and
icebp
ins
adc
xchg
cmp
xchg
cmp
hlt
(bad)
fist
adc
mov
sbb
call
pop
imul
jmp
inc
cdq
ret
pop
mov
or
xor
popf
cdq
iret
ds
dec
mov
xchg
sub
dec
(bad)
jno
sbb
lods
mov
dec
out
popf
and
xchg
clc
pop
aad
js
call
xlat
adc
pushf
pop
es
adc
dec
adc
popa
call
mov
xchg
rol
or
or
sub
arpl
aaa
mov
pop
enter
je
inc
bound
fisubr
push
cmp
loopne
cld
(bad)
fmul
(bad)
lahf
dec
sbb
mov
sub
cmp
or
iret
jo
sub
jae
shl
cld
inc
pop
sub
mov
aas
bound
pop
add
sti
in
push
mov
call
pop
and
les
fistp
jns
jmp
fld
cld
addr16
in
popf
das
bound
shl
in
xchg
sub
jg
in
pop
or
icebp
sub
pop
or
les
pop
and
xchg
pop
cli
into
inc
iret
jp
sbb
lods
cli
bnd
imul
fldcw
sbb
dec
jo
push
push
je
clc
jbe
push
dec
xchg
(bad)
or
lods
retf
sbb
pop
adc
mov
stc
or
ins
shl
adc
or
nop
jmp
or
aas
aad
pop
sub
jg
movs
stos
fcomp
push
ficomp
xchg
or
pop
pop
daa
test
out
(bad)
or
cs
jae
xchg
adc
or
sbb
and
push
into
cmc
vpunpckldq
cwde
xor
lods
int3
mov
adc
add
aas
es
mov
xor
addr16
sbb
xor
adc
inc
scas
inc
outs
inc
inc
in
and
js
or
or
mov
cmps
add
mov
daa
inc
sub
fwait
in
inc
cmp
clc
cmp
test
sbb
push
jae
cwde
add
fxtract
push
or
ficomp
outs
jne
aad
retf
xchg
or
popf
aad
mov
sub
inc
or
xchg
pop
pop
sub
push
cs
les
mov
mov
dec
pop
mov
or
movs
rol
les
pop
rcl
pop
pop
mov
pop
jno
addr16
fcomp
mov
jl
leave
inc
jae
xor
jmp
push
mov
nop
arpl
cmps
adc
or
lahf
xchg
idiv
js
adc
pop
mov
cmc
je
mov
cmc
sahf
fsub
pop
outs
popf
(bad)
fwait
gs
fbld
ja
shr
add
out
sbb
adc
stos
push
jns
inc
out
outs
pop
pop
bound
dec
xor
adc
mov
dec
and
push
movs
mov
add
cmc
hlt
sbb
repz
aam
cmp
fdiv
inc
mov
cmp
bound
stos
jg
pop
adc
in
mov
cld
pop
das
push
push
mov
lock
aam
xchg
das
sub
xchg
icebp
mov
test
inc
test
dec
and
dec
test
shr
and
popf
mov
jecxz
cmps
sbb
mov
das
or
jb
leave
add
rol
imul
mov
repnz
ret
push
jle
mov
ja
mov
or
sbb
rol
scas
jl
push
and
test
push
shl
retf
or
mov
push
push
pop
dec
mov
pop
or
out
bound
(bad)
mov
movs
jmp
jne
ds
xchg
mov
adc
inc
pop
push
xor
cmp
mov
add
mov
test
mov
fidiv
sbb
or
adc
aam
call
shl
sub
je
fcmovne
leave
out
jnp
pop
mov
jecxz
imul
loope
inc
push
push
cmp
adc
stos
aam
jns
jo
aad
bound
pop
leave
xor
ret
stos
jae
xchg
in
mov
xor
outs
outs
int3
sub
popf
jo
push
xor
(bad)
mov
sbb
sub
cmp
ja
(bad)
adc
or
mov
aaa
or
xchg
iret
inc
mov
and
and
xor
xlat
dec
ja
xchg
sar
pop
inc
cld
shl
out
outs
js
enter
push
cmp
mov
repnz
jo
cmp
fdivp
out
sub
adc
in
mov
jmp
fwait
adc
fdivr
push
fstp
sub
or
fild
out
std
clc
push
push
ja
adc
mov
ret
nop
cmps
arpl
xor
ficomp
lds
xchg
dec
ja
xchg
(bad)
shr
retf
inc
push
adc
test
cmp
rcl
jns
ss
and
adc
out
adc
std
cmc
mov
fwait
rol
imul
jbe
ret
out
sti
jno
xchg
(bad)
and
xor
sub
bts
push
inc
mov
or
aas
inc
cmp
sub
adc
adc
mov
sbb
jmp
ss
mov
rcr
push
outs
inc
and
mov
jmp
or
mov
and
arpl
lock
scas
jne
xchg
sub
jge
js
les
nop
daa
(bad)
jmp
jecxz
push
push
mov
jl
push
in
and
out
xchg
jmp
mov
or
outs
(bad)
stos
jns
jp
cmp
test
xor
loopne
adc
fs
sbb
or
adc
inc
and
or
test
inc
out
aas
pop
sub
pop
test
jbe
sbb
neg
and
adc
in
mov
sbb
fwait
test
add
jb
rcl
add
int
and
loop
hlt
(bad)
and
xchg
fistp
or
xor
in
adc
adc
add
sub
adc
test
cmp
in
gs
and
mov
fsubp
adc
mov
adc
add
mov
and
out
mov
push
or
or
(bad)
mov
rol
mov
out
outs
mov
pusha
stos
cmc
xchg
and
repz
jnp
inc
cdq
sub
call
std
sub
lock
mov
xor
mov
pop
addr16
dec
xchg
xchg
push
pushf
loop
int3
dec
cs
push
push
fisttp
xor
mov
xchg
into
stos
cmps
inc
jae
sub
in
jp
cmp
hlt
or
pop
into
mov
push
inc
stos
xor
sub
stos
test
pop
lds
xor
sub
push
mov
push
cmc
inc
and
dec
sub
cld
push
shl
inc
movs
(bad)
call
jne
jae
fistp
jl
xor
inc
inc
pop
mov
push
bound
pushf
call
clc
xor
sub
loop
mov
push
push
inc
dec
jecxz
mov
inc
adc
fdivr
pop
(bad)
mov
shl
adc
mov
jnp
add
les
lods
sub
lock
stos
outs
and
sub
mov
push
ror
sbb
shr
stc
dec
fwait
cmps
or
jmp
scas
xor
jmp
mov
lods
add
fsubr
bound
mov
sub
push
mov
test
lahf
pop
mov
mov
push
xor
mov
sub
inc
push
jmp
pop
aam
out
pop
pushf
ins
mov
add
not
and
jp
sub
push
dec
and
imul
movs
mov
out
mov
adc
sahf
retf
xor
sub
sub
test
lods
sub
into
push
lods
popa
pop
push
arpl
add
sti
sbb
shl
push
mov
lahf
mov
jb
aad
mov
scas
adc
dec
jmp
or
aad
dec
pop
xlat
retf
ss
sar
loop
ret
mov
lods
pop
mov
jge
fadd
ror
retf
cli
inc
push
arpl
fstp
push
cdq
xor
test
ror
mov
in
das
mov
xchg
add
push
fldenv
imul
add
punpcklwd
mov
sub
arpl
cmp
sub
cmovge
lock
(bad)
sbb
xchg
aas
jno
ss
das
shl
push
sbb
test
fild
add
out
adc
add
cld
mov
sbb
push
adc
gs
and
(bad)
scas
xor
outs
sahf
into
cmp
or
pushf
xchg
and
pop
push
fild
dec
leave
rol
(bad)
ja
cmp
std
lea
cmp
aas
scas
cdq
cmp
dec
adc
pop
adc
ss
mov
repz
ins
fst
cwde
dec
add
mov
daa
je
jae
xchg
sbb
xchg
nop
fs
jge
jo
push
xchg
fcomp
retf
and
lods
repnz
repnz
test
mov
neg
nop
cli
push
stc
xor
cli
xchg
and
pop
cmp
movs
dec
sahf
cmp
fucomi
xchg
xor
mov
jbe
aas
jae
push
dec
std
test
xchg
xchg
mov
ror
push
or
cmps
fadd
scas
stc
sub
dec
and
sub
cld
mov
mov
sub
push
inc
fwait
mov
test
jae
pop
mov
and
stos
call
(bad)
bound
mov
dec
(bad)
in
test
sub
mov
mov
fisub
ret
dec
xchg
push
xchg
scas
das
addr16
or
mov
fist
mov
shl
jg
fimul
test
(bad)
(bad)
xor
mov
jle
cmps
outs
test
lods
adc
push
xchg
push
ins
inc
loope
adc
outs
xor
or
mov
mov
loop
into
push
mov
add
leave
retf
popa
mov
and
clc
push
push
movs
sub
aas
sbb
mov
call
sub
jmp
repz
ss
pop
and
or
adc
mov
shl
add
mov
pop
lea
jmp
or
loopne
enter
mov
clc
xlat
jl
push
jo
cmp
cmp
loopne
in
popf
movs
mov
push
add
test
test
or
pop
leave
dec
sub
idiv
pop
pop
loopne
cli
scas
cld
out
push
add
and
mov
cld
dec
test
xlat
inc
cmp
jp
nop
push
fs
inc
inc
sar
adc
push
xor
sbb
dec
jge
push
sbb
or
jmp
mov
add
dec
cmp
(bad)
fisub
jnp
cmp
icebp
dec
test
(bad)
inc
test
push
js
ds
(bad)
(bad)
scas
mov
adc
inc
xchg
dec
(bad)
shl
pop
mov
dec
jbe
repnz
fimul
enter
jnp
nop
cli
cs
or
sub
jl
rol
icebp
enter
pop
loopne
xchg
fcmovb
xchg
not
pop
int
movs
(bad)
xchg
jne
xchg
jecxz
loop
stos
inc
shl
add
mov
pop
cmps
mov
inc
add
and
iret
add
jmp
push
mov
jp
cld
loop
pop
movs
push
stc
aaa
jo
cmp
fmul
sub
push
jmp
adc
shl
add
test
sbb
push
xor
add
push
add
ret
retf
pop
and
movs
adc
adc
pop
out
movs
jge
mov
int
les
repnz
add
dec
mov
mov
cmp
std
xchg
fdiv
int
push
sbb
imul
or
rcr
adc
sbb
(bad)
(bad)
cmp
das
les
arpl
call
loop
stc
ins
pop
inc
mov
outs
loopne
sub
(bad)
adc
inc
jns
in
push
pop
xor
mov
jmp
es
add
sahf
push
shl
xchg
pop
cmp
jo
cld
sbb
jb
test
adc
daa
lock
(bad)
repnz
sbb
mov
or
push
sub
push
mov
push
mov
add
(bad)
xor
inc
pop
mov
retf
stos
xor
stc
jle
push
ret
inc
push
push
dec
dec
je
rcr
inc
(bad)
and
pushf
xor
test
mov
adc
retf
inc
std
mov
inc
sti
xchg
pop
lahf
mov
scas
rcr
in
xchg
pop
fimul
mov
jp
outs
and
fcomp
imul
ret
lods
fistp
dec
sbb
retf
ins
in
mov
into
jno
jmp
and
cmp
js
jmp
stos
push
retf
sar
scas
pop
fdivr
jmp
xlat
and
aaa
in
sbb
les
imul
or
fcomp
push
xchg
in
pop
mov
daa
loopne
sbb
iret
pop
jnp
mov
in
arpl
(bad)
push
xor
ss
cmps
out
jl
inc
mov
or
dec
test
dec
ja
pop
fbld
sub
and
scas
dec
mov
in
sbb
add
or
mov
test
mov
retf
push
cwde
out
sbb
movs
fs
pop
push
push
cmp
sub
jg
aaa
push
mov
mov
add
mov
aaa
ins
sub
mov
mov
int
retf
dec
sub
sub
(bad)
mov
push
stos
aam
inc
stos
(bad)
cld
pop
(bad)
push
sbb
or
ds
dec
sbb
add
(bad)
inc
xor
add
outs
leave
and
fwait
addr16
ins
(bad)
sahf
movs
xor
in
xchg
dec
hlt
push
daa
pop
popf
inc
js
test
test
sbb
xor
cmp
cmps
push
in
ds
test
xchg
sbb
cmp
ins
shr
popa
je
lods
pop
cmp
cmps
retf
pop
loope
mov
and
xor
scas
(bad)
xor
cmovge
fidiv
les
jp
push
outs
add
add
xlat
pop
test
out
shl
movs
enter
out
sub
scas
jo
mov
push
sub
loopne
push
adc
sub
push
or
push
xor
imul
dec
cmps
std
sub
leave
cmp
retf
into
pop
xchg
sbb
es
mov
sub
mov
mov
jno
jmp
cdq
push
popa
cmp
retf
and
jne
cmp
outs
div
mov
mov
fstp
dec
aad
(bad)
push
xchg
xchg
inc
add
fld
inc
cld
ds
rcr
test
fidiv
xchg
cmps
mov
mov
jmp
(bad)
xlat
add
ret
pop
rcr
cmp
lea
loope
nop
pop
bound
popf
jp
pop
push
push
(bad)
push
orps
add
fnsave
fidiv
out
mov
push
inc
cdq
inc
dec
sahf
push
add
movs
into
xchg
inc
cmp
sbb
push
lea
rcr
sbb
pop
test
xchg
or
stos
call
or
adc
cdq
mov
cmp
push
sub
jp
rcl
outs
aad
lods
lea
jp
xrelease
fs
(bad)
(bad)
out
icebp
repnz
dec
mov
adc
or
pop
sti
dec
sbb
pop
and
push
ror
xchg
stc
sahf
adc
push
in
outs
scas
rol
dec
xor
pop
mov
dec
xchg
mov
inc
bound
sub
cdq
outs
dec
inc
push
and
in
cmp
sbb
mov
cmp
cmps
jbe
inc
mov
push
test
into
xchg
test
mov
movs
ret
in
push
push
pop
xchg
push
nop
pop
add
inc
fdiv
movs
xor
scas
popa
out
mov
jnp
(bad)
cmp
ss
fnstenv
dec
nop
je
in
je
stc
rcl
or
fisubr
out
xchg
jno
push
scas
cmp
dec
mov
aas
xchg
(bad)
fimul
in
mov
fidiv
pop
xchg
inc
jb
(bad)
sahf
cmp
adc
push
xor
loope
sbb
rol
aaa
jbe
int3
dec
jmp
jnp
sbb
sub
popa
add
xchg
sub
(bad)
fs
scas
or
sub
adc
sbb
xchg
add
or
mov
loopne
ds
stc
mov
ja
inc
ss
cmp
mov
and
or
sar
js
cmc
xchg
jp
adc
addr16
(bad)
int3
les
or
scas
rsm
dec
(bad)
out
lock
xchg
fidivr
mov
js
cmp
pop
pop
mov
xor
outs
adc
retf
push
(bad)
mov
push
sub
fadd
push
in
mov
lahf
retf
addr16
lea
shl
mov
movs
jp
jle
aas
adc
pop
cld
inc
mov
pop
pop
stos
push
and
das
xchg
scas
or
mov
sub
push
(bad)
sbb
(bad)
in
fxam
fimul
adc
movs
jb
mov
xchg
xor
retf
xor
fisub
rol
mov
pop
fs
inc
jle
sahf
enter
loop
mov
adc
adc
push
leave
xchg
bound
inc
mov
inc
push
in
mov
push
mov
leave
repnz
repnz
shl
mov
rcl
aam
scas
retf
xchg
adc
lods
cmp
jnp
ds
sub
pop
pop
stc
mov
xor
stos
stc
sahf
adc
out
pop
sub
and
mov
sub
pop
loope
dec
pop
mov
and
movs
rol
sub
aaa
shl
sbb
dec
cwde
lods
(bad)
int
pop
jnp
xchg
sbb
add
mov
test
pop
nop
add
(bad)
rcr
in
sub
sub
int3
lahf
inc
jnp
movs
mov
ja
mov
adc
cdq
fwait
push
sub
das
and
mov
btc
cmps
std
cmp
fiadd
jbe
add
jp
push
push
adc
rcr
xor
and
jno
fsubr
dec
jns
loop
enter
inc
clc
push
mov
mov
pop
or
push
mov
adc
out
add
dec
mov
dec
imul
sbb
addr16
(bad)
outs
fs
lods
not
cmps
cmp
rcl
sahf
cli
jae
sub
or
cmps
fwait
pop
xchg
jge
dec
scas
jecxz
pop
inc
imul
dec
out
push
sbb
mov
retf
int
jo
addr16
adc
ins
cmp
mov
gs
xchg
dec
aad
cmp
aaa
xor
dec
xchg
shl
mov
enter
pop
cmp
pop
pop
in
repz
or
adc
das
sbb
cmp
in
mov
loop
mov
or
sub
loope
lods
std
pop
push
pop
test
add
cmps
call
hlt
sbb
sbb
mov
adc
popa
stc
popa
or
push
xchg
loop
sahf
pop
mov
xchg
std
fist
xlat
out
inc
imul
sbb
out
or
lgs
repz
jno
pop
ss
retf
mov
jno
cmp
test
fwait
stc
ins
lods
outs
(bad)
repnz
adc
push
clc
xchg
push
pop
loope
lods
xor
pop
sub
mov
push
xchg
and
nop
adc
daa
dec
sbb
arpl
aaa
cmp
sbb
test
arpl
inc
test
rcr
xor
pop
fadd
sbb
scas
inc
pop
test
push
movs
add
and
mov
lods
xchg
cld
fabs
xor
mov
cmp
jnp
xchg
push
mov
pusha
lahf
dec
in
je
jge
popf
pop
pop
imul
sub
jmp
or
pushf
mov
daa
mov
inc
js
mov
push
mov
adc
retf
mov
pop
and
inc
loop
les
outs
das
sahf
leave
pop
mov
push
sbb
push
shl
fwait
mov
aam
sub
add
jae
fisubr
jnp
pop
adc
hlt
inc
mov
xchg
sub
xor
mov
nop
xchg
or
push
in
mov
fld
cmp
add
sbb
clc
hlt
imul
sar
or
cmp
jno
xor
push
int3
stc
retf
jmp
ret
pop
sbb
gs
inc
jb
or
pop
sub
dec
sub
loop
(bad)
mov
adc
mov
xchg
mov
fcomp
inc
push
leave
mov
and
(bad)
push
sbb
push
repz
lea
jno
enter
jmp
inc
pop
and
adc
pushf
cmp
add
scas
mov
test
ret
pop
inc
xchg
jle
dec
and
cmp
popf
dec
and
add
pop
loopne
lahf
mov
out
and
push
ret
xor
jg
div
pusha
retf
add
cs
jnp
mov
mov
xchg
push
mov
mov
or
test
popf
sbb
loop
cmp
stos
leave
mov
movups
xchg
imul
js
mov
popa
gs
std
out
xchg
dec
pop
mov
lods
dec
cs
add
cmps
xor
jns
xor
mov
mov
mov
inc
adc
jne
sbb
ins
cmps
loopne
cdq
or
sbb
jecxz
shl
cdq
cmps
cmp
cmp
add
add
(bad)
hlt
addr16
retf
sbb
mov
add
or
add
test
mov
ret
jle
inc
jae
mov
xor
dec
pop
outs
out
sbb
shl
mov
xor
push
jl
add
aaa
mov
mov
iret
sub
jp
test
mov
test
stc
(bad)
inc
popf
les
test
popf
retf
rcl
nop
cmps
and
ror
retf
ja
mov
mov
out
adc
xlat
dec
test
fs
xchg
sbb
lock
jnp
loop
sub
sub
jecxz
imul
xchg
sub
enter
loope
mov
loope
inc
sbb
les
sbb
sub
aad
dec
aas
loop
dec
les
in
cmp
sub
(bad)
jge
rcl
cld
cwde
aam
jns
inc
imul
repz
push
cmc
xor
mov
inc
xchg
test
sbb
jp
sbb
lock
pop
mov
mov
imul
mov
sub
outs
sub
(bad)
and
aad
shl
mov
fld
aaa
popa
leave
pop
cwde
dec
mov
push
xor
out
fwait
dec
icebp
inc
sub
ds
sub
stos
xor
mov
sbb
sbb
dec
nop
dec
mov
mov
hlt
ficomp
int
cmp
dec
jae
jo
sub
outs
jl
push
push
xchg
dec
mov
or
or
fmul
nop
outs
or
jne
test
or
push
arpl
or
cmps
adc
mov
mov
jnp
pop
fs
xchg
cmc
push
clc
jp
(bad)
cwde
addr16
push
and
test
mov
fadd
cld
and
or
cmp
mov
test
ins
scas
jno
out
inc
popa
jmp
sub
mov
push
sti
sahf
inc
jp
jnp
jmp
jge
stc
leave
jnp
data16
add
scas
push
dec
inc
mov
mov
mov
mov
cdq
xchg
scas
and
ds
mov
inc
push
leave
xlat
xchg
mov
aas
mov
xchg
push
mov
cli
jb
clc
ficomp
mov
xchg
or
test
xchg
mov
sbb
repnz
jo
sub
nop
cwde
fimul
cli
iret
xchg
xor
cli
jl
(bad)
shl
sub
mov
add
rol
cmp
aaa
cld
add
xchg
inc
icebp
(bad)
jecxz
(bad)
sub
cld
fs
add
inc
dec
aaa
dec
dec
cmps
push
jmp
jnp
das
sbb
pop
cmps
xor
sar
mov
ja
inc
mov
aad
add
in
jnp
shl
push
mov
sti
scas
retf
loope
pop
mov
cmps
daa
pusha
mov
add
push
iret
ror
ja
stos
aaa
or
aas
inc
stos
sub
fldcw
mov
test
jmp
push
pop
or
jl
sbb
pop
cli
movs
add
pop
int3
(bad)
cmp
cmp
pop
(bad)
mov
call
pop
lea
and
stos
call
mov
retf
dec
xlat
push
and
js
push
punpcklbw
int3
mov
das
aas
push
pop
outs
sahf
(bad)
stc
stos
mov
inc
xchg
mov
mov
iret
mov
shl
sbb
pop
out
sbb
jmp
(bad)
retf
cdq
push
(bad)
adc
jp
hlt
xchg
dec
test
movs
push
dec
xchg
ret
jnp
ss
in
adc
cmp
imul
gs
push
cmp
jae
adc
loope
mov
jnp
sub
div
test
repnz
mov
jne
test
pusha
dec
mov
inc
jo
jg
pop
mov
outs
push
cld
iret
cvtdq2ps
cmp
add
push
cli
fs
and
cmp
shr
or
add
call
mov
cld
ror
and
lds
xchg
push
cmp
sub
and
xor
mov
js
mov
and
add
(bad)
cmp
sbb
mov
xchg
add
fs
shr
stos
(bad)
jmp
cmp
(bad)
clc
dec
xchg
lods
inc
xor
movs
adc
push
jmp
adc
sub
shl
xor
mov
sub
or
mov
das
jmp
push
stc
sub
jmp
jmp
adc
add
fdiv
jae
shr
enter
adc
shl
clc
mov
and
int3
pop
(bad)
sti
adc
pusha
lods
jl
mov
sub
sbb
out
mov
push
enter
ret
ret
out
inc
nop
cmps
std
jle
mov
cmp
adc
fiadd
test
inc
mov
jns
(bad)
lea
test
or
out
and
jmp
outs
(bad)
fisub
cmps
imul
out
mov
test
adc
data16
xchg
retf
aad
mov
shr
in
sub
adc
(bad)
int
and
mov
mov
dec
mov
pop
sbb
jmp
fnstcw
inc
test
mov
push
push
cmp
fcomp
push
sbb
das
pusha
std
cmp
mov
xchg
lock
jae
jmp
lock
add
in
lea
sub
(bad)
xchg
xor
je
mov
push
inc
push
inc
adc
dec
arpl
ror
and
outs
dec
stc
mov
in
mov
inc
dec
call
cwde
sub
aad
cmp
inc
fist
inc
ins
js
imul
fistp
test
(bad)
push
les
inc
xlat
js
scas
jmp
push
sub
lock
adc
popa
push
loop
int
arpl
js
ins
mov
std
fsubr
(bad)
push
loopne
fsubr
inc
mov
loopne
cmc
stc
cmps
out
dec
jmp
dec
sub
inc
xor
aaa
mov
lds
pop
pop
cmps
dec
(bad)
jecxz
jge
ds
inc
fadd
(bad)
add
push
mov
je
cld
ins
stos
pop
ret
in
into
push
push
shl
inc
push
mov
pop
cmp
push
jae
(bad)
test
cs
mov
enter
mov
mov
mov
jmp
pusha
hlt
(bad)
stc
sar
bound
mov
fisttp
ins
std
xlat
loopne
pop
pop
and
xor
loopne
jmp
jg
and
mov
repz
mov
sar
repz
mov
pushf
ins
std
imul
scas
outs
xor
adc
or
xor
mov
cs
repnz
or
inc
bound
mov
pop
stc
ins
xor
sbb
xor
mov
shl
clc
mov
jns
(bad)
mov
mov
stos
jl
test
and
scas
nop
arpl
sub
xlat
gs
fdivr
cmp
mov
sbb
add
repz
iret
faddp
inc
(bad)
out
jnp
jecxz
aam
mov
push
jbe
into
mov
dec
dec
pmaddwd
hlt
mov
cmc
mov
jnp
mov
inc
sub
xor
mov
jmp
fist
imul
push
dec
das
adc
les
sbb
push
rol
jmp
les
xlat
push
test
xor
xchg
fadd
repz
mov
movs
inc
jle
mov
leave
lock
out
imul
fs
pop
xchg
gs
movs
rol
or
cmp
pop
out
sbb
repz
test
jb
hlt
sbb
imul
pop
clc
sub
mov
jmp
cmp
call
mov
add
(bad)
(bad)
shl
push
sub
hlt
hlt
pop
jo
scas
icebp
jmp
xchg
imul
xchg
cmc
popf
sbb
jecxz
int3
jns
mov
iret
sub
in
jmp
or
push
(bad)
lods
pop
fdiv
pop
(bad)
jns
add
pop
scas
retf
mov
aaa
fsub
cld
aas
dec
inc
fiadd
jl
jecxz
jle
add
(bad)
mov
inc
aam
ret
mov
ins
mov
jmp
stos
inc
dec
cld
sub
push
jbe
xchg
inc
inc
xlat
mov
xchg
inc
dec
sbb
jmp
inc
sub
xchg
pusha
dec
pop
sahf
jb
mov
leave
adc
push
lods
neg
fisttp
pop
cmc
out
and
mov
adc
sar
push
mov
xchg
jnp
imul
pushf
sub
pop
jbe
xchg
xor
xchg
aad
add
xchg
es
xchg
aam
fwait
stos
push
ins
xchg
sbb
inc
jb
loope
aam
cs
popa
jle
rol
lahf
mov
rcl
stc
sti
xor
dec
mov
lods
and
adc
pop
(bad)
and
pop
lock
lock
fidiv
jg
fscale
dec
dec
dec
mov
add
(bad)
and
add
clc
or
fistp
loope
out
pop
xor
lds
loope
push
test
rcl
out
daa
sub
and
dec
cld
rcr
(bad)
jb
movs
fs
mov
mov
shr
iret
mov
mov
stos
pop
sbb
xchg
arpl
les
cmp
push
inc
aam
loopne
push
mov
movs
mov
sar
push
mov
aaa
jo
je
add
mov
jle
and
gs
sub
(bad)
stos
gs
adc
in
xor
scas
cwde
aad
sbb
pop
inc
sub
(bad)
fwait
lahf
mov
add
xor
cmc
js
int3
xor
and
sbb
xor
icebp
xlat
jge
cmps
pushf
adc
fcom
pop
imul
cmp
adc
jle
es
ins
fs
ret
(bad)
in
aad
jnp
neg
test
sbb
dec
sbb
add
ffree
mov
inc
repnz
jmp
jb
pop
sbb
lea
mov
xchg
sub
sbb
mov
inc
cmp
lea
outs
adc
repnz
xor
arpl
mov
fcomp
mov
daa
xlat
es
pop
scas
lahf
mov
or
dec
popf
fwait
pop
xor
fwait
push
fild
outs
sti
test
xor
mov
cdq
stos
sahf
xchg
lea
std
xchg
xor
scas
jo
pop
ds
into
je
sbb
scas
push
pop
rol
fcom
jp
ja
inc
cmps
loopne
lods
cdq
mul
sub
pop
in
je
mov
or
mov
inc
push
loop
repnz
neg
or
add
fscale
xor
loope
xchg
pushf
xchg
ret
sbb
add
mov
in
jp
adc
push
add
scas
loopne
add
jae
(bad)
shl
(bad)
hlt
mov
add
cmps
lods
xor
adc
dec
mul
xchg
int
mov
inc
lods
mov
sbb
jmp
call
das
adc
dec
sbb
pusha
mov
call
or
mov
mov
push
(bad)
cmps
pop
xchg
and
popf
dec
cmps
adc
fistp
and
mov
test
inc
xor
aad
dec
inc
mov
mov
loope
and
(bad)
lds
sbb
test
push
adc
pop
jb
ret
movs
rol
retf
outs
jbe
xor
jo
cmps
push
mov
cmp
(bad)
xchg
inc
cmps
ins
xchg
test
stc
fld
xchg
int3
lahf
mov
sbb
pop
fcmovu
leave
mov
scas
popa
jae
in
loop
fmul
adc
mov
rcl
sbb
fdiv
pop
add
in
pop
xchg
std
ret
cdq
push
xchg
add
cld
pop
cli
mov
movs
retf
jg
mov
aam
mov
fs
mov
add
or
add
cmps
test
and
ins
sub
out
stos
enter
iret
mov
repz
add
or
stos
out
clc
jecxz
or
mov
out
cmc
cli
(bad)
iret
inc
in
ja
mov
cs
jecxz
mov
add
fisttp
aas
xchg
pop
dec
xchg
push
inc
lock
shl
inc
add
ins
call
lea
out
dec
sub
sbb
push
shr
and
aad
inc
add
psubb
xor
dec
ins
push
iret
xor
jnp
es
mov
lds
cs
jbe
mov
into
jno
mov
out
mov
xor
out
or
and
enter
sbb
aam
fwait
xchg
repnz
and
and
or
inc
and
xchg
mov
adc
mov
push
xchg
mov
push
aam
cdq
lea
stos
inc
rcr
cs
cmp
inc
jb
not
fld
xchg
cmps
xor
movs
xor
sbb
and
sub
hlt
adc
push
mov
enter
fild
sar
test
aas
mov
pusha
scas
cmp
jbe
inc
sub
(bad)
or
stc
pushf
aas
dec
mov
fldcw
jo
add
or
pop
or
push
add
jno
mov
aas
aaa
jne
add
mov
or
out
mov
push
popf
lds
push
outs
sar
xor
xor
xchg
xchg
sahf
cmps
out
jecxz
mov
push
pop
imul
fiadd
aaa
in
cmp
outs
add
dec
jmp
push
stc
jae
aad
and
pop
mov
aaa
stos
push
es
pop
jo
jnp
test
cmp
loope
sti
adc
jl
jg
add
add
xor
jle
sub
adc
dec
pop
cmps
pusha
lods
loope
stc
pop
popa
dec
pop
xor
pop
sub
dec
dec
xor
lea
sti
(bad)
(bad)
test
adc
(bad)
leave
pop
mov
xor
dec
pop
pop
cdq
sub
jg
std
fimul
iret
ins
hlt
xor
lock
shl
aam
xor
test
push
sahf
cmc
out
out
loop
std
dec
cmp
ss
sar
inc
out
cmp
cmc
data16
bound
mov
push
inc
lds
mov
cmp
(bad)
mov
push
mov
idiv
jne
push
jmp
add
ins
cmp
adc
xor
dec
jmp
add
out
sbb
inc
lock
add
and
mov
in
mov
xchg
cmps
sbb
movs
push
inc
add
mov
sbb
xor
in
jb
mov
je
jp
ins
rcl
push
mov
rcr
xor
and
stc
ror
xchg
mov
jmp
pop
inc
out
fmul
mov
pusha
pop
les
mov
mov
jb
cmp
mov
cmpxchg
fstp
call
jb
data16
push
(bad)
jmp
aad
push
loop
jo
sub
pop
scas
iret
fld
jg
inc
in
stc
in
(bad)
rcl
stc
fisubr
adc
(bad)
cmovae
sub
out
mov
cs
jae
outs
out
mov
mov
hlt
sub
cmp
mov
into
add
jmp
fs
mov
imul
dec
adc
fwait
mov
aam
loop
add
jb
adc
aas
outs
pusha
rcl
pop
test
bound
push
add
xor
imul
add
adc
mov
push
shr
xchg
push
adc
repz
mov
aas
adc
jno
enter
xor
add
push
mov
inc
leave
call
ins
add
jne
fwait
pop
pop
data16
out
(bad)
add
adc
mov
sub
cmp
mov
gs
xchg
shr
and
mov
sub
fdivr
sbb
sti
pop
add
and
mov
stos
lods
scas
pusha
pop
push
aam
and
es
out
inc
sbb
rcr
(bad)
lods
mov
pop
sub
jmp
pop
xchg
sub
stos
dec
push
(bad)
lds
in
es
mov
xlat
gs
sbb
mov
out
mov
popf
push
gs
cmp
xor
scas
and
cmp
fcom
mov
xchg
xchg
fiadd
addr16
out
cmp
jbe
ins
dec
nop
jmp
shl
retf
loop
push
push
cmp
mov
jl
jp
push
ja
xchg
fnstenv
bound
(bad)
div
ds
not
mov
stos
fist
arpl
lock
out
push
loope
cli
int3
enter
idiv
mov
push
adc
pop
fs
sbb
or
loop
(bad)
outs
jecxz
outs
mov
outs
mov
mov
fisubr
into
jbe
pusha
mov
clc
dec
pusha
sub
call
fs
pusha
mov
gs
retf
dec
bound
inc
int3
rcr
mov
retf
adc
retf
dec
mov
pop
sbb
aas
dec
out
mov
movs
push
(bad)
sub
adc
(bad)
sar
sub
fld
inc
or
in
adc
push
jae
inc
dec
aas
xor
int
retf
cmps
mov
nop
cs
sub
lock
mov
add
movs
fs
and
inc
(bad)
in
mov
sbb
enter
jge
daa
push
je
mov
fidivr
adc
test
mov
mov
stos
xor
xlat
inc
ins
mov
mov
mov
jae
scas
retf
daa
jmp
test
cmp
cmp
push
in
je
and
in
loop
mov
aaa
mov
jmp
mov
mov
pop
cmps
fst
mov
loopne
push
jae
aam
or
ret
(bad)
fistp
imul
div
pop
bound
inc
data16
fiadd
pop
psrad
ror
stos
pusha
or
lods
add
adc
cmc
retf
sub
mov
repz
test
mov
movs
scas
xchg
fld
mov
jae
sub
lock
dec
fldenv
arpl
repz
aas
and
pop
sbb
mov
pop
in
lock
or
mov
pop
mov
in
mov
stc
push
ja
mov
and
fucom
dec
mov
sti
ret
xor
jp
cmp
pop
fs
pop
fld
sbb
and
dec
gs
sbb
retf
dec
fsubr
bound
call
call
cmps
cmps
adc
mov
xchg
scas
ret
and
mov
(bad)
sub
shr
test
xchg
in
jmp
gs
nop
retf
xchg
jno
int
cld
jg
mov
jl
xor
es
mov
jne
popf
xor
outs
bound
fsubr
xchg
mov
call
nop
sahf
sub
xor
adc
push
pop
xchg
pop
popa
push
add
mov
hlt
add
sbb
ss
xor
(bad)
call
jb
ret
sub
sub
add
jo
shl
repnz
and
jo
pop
in
or
mov
stc
push
mov
ror
dec
test
aad
jae
gs
imul
jae
push
(bad)
cmp
push
dec
test
fcomp
movs
out
sub
mov
push
dec
xchg
scas
inc
loope
dec
push
movs
mov
sub
xchg
jge
dec
mov
jne
push
loopne
pop
or
shl
nop
mov
test
ins
fwait
mov
jp
jl
sub
es
add
push
cwde
ja
icebp
mov
lahf
push
dec
ss
daa
or
call
mov
mov
pop
rcl
jnp
mov
xchg
scas
(bad)
or
das
mov
push
adc
sub
les
mov
sub
jbe
jp
aaa
popa
movs
sub
addr16
shr
mov
test
pop
dec
pop
dec
test
dec
pop
rol
push
cmp
sar
(bad)
jbe
pop
or
ins
ffreep
push
and
fdivr
jl
dec
outs
ffree
aaa
imul
adc
xchg
out
mov
sbb
adc
nop
in
jp
push
push
mov
mov
in
or
sub
adc
push
retf
sub
(bad)
sbb
mov
adc
sbb
and
call
mov
stos
int3
fbstp
test
or
mov
lahf
test
inc
cmp
bnd
out
call
movs
fild
mov
sub
mov
pop
lea
sub
cwde
ins
xlat
adc
int3
mov
dec
mov
cmp
dec
add
imul
ja
inc
pop
hlt
popf
cmp
mov
iret
es
gs
inc
xor
adc
ror
mov
pop
out
jmp
xor
js
pop
test
mov
jns
push
in
sar
ret
jnp
mov
sbb
push
fdivr
jb
in
pop
jno
mov
lods
cwde
or
into
bound
push
scas
test
mov
sbb
retf
xchg
ret
adc
cmp
sbb
es
pop
push
jae
inc
pop
repz
jmp
sub
fs
adc
mov
sbb
pop
dec
sbb
lahf
fdiv
and
cmc
into
mov
add
mov
mov
scas
daa
mov
push
sbb
inc
outs
push
js
mov
jp
jo
jne
outs
pop
sbb
cs
out
pop
shr
xchg
das
mov
addr16
jmp
cmps
inc
sub
dec
jecxz
std
jp
jnp
push
mov
aad
push
(bad)
and
push
add
or
into
fwait
cs
mov
ret
loopne
add
enter
xor
in
pop
and
push
fstp
mov
cmps
cli
cs
leave
fstp
push
mov
push
dec
dec
mov
outs
test
test
push
pop
clc
in
adc
sub
rcl
js
add
mov
sbb
call
std
and
mov
in
dec
and
stc
mov
or
fistp
adc
loopne
and
cmp
push
retf
jbe
lods
push
enter
pop
pop
out
mov
mov
fsub
jg
outs
mov
xchg
adc
xor
cmps
and
lods
repz
les
test
inc
mov
jmp
pushf
in
out
add
add
(bad)
sub
imul
sti
faddp
sub
in
pop
loopne
aam
push
mov
sbb
and
and
mov
xlat
or
jb
(bad)
or
fld
lds
mov
and
cmc
leave
jnp
pop
scas
mov
test
mov
push
fimul
popa
ja
xor
inc
fdiv
dec
aad
cmp
in
(bad)
jmp
jl
sub
or
data16
and
pop
imul
fdivp
cmps
fdivp
add
or
add
push
mov
adc
cs
xor
jo
jne
cmps
imul
mov
sub
add
mov
xor
push
push
xor
mov
popa
lods
stos
or
push
pushf
cmps
dec
aaa
xor
stos
pop
mov
stos
cld
cmp
sbb
add
pop
sqrtps
or
loopne
push
arpl
loope
mov
mov
sahf
(bad)
stc
jmp
int3
out
cld
jmp
outs
add
sub
push
int3
sub
fsub
retf
or
les
retf
imul
pop
lock
inc
or
push
and
iret
mov
pop
pop
outs
and
fst
stos
and
push
call
ret
bound
mov
inc
mov
imul
icebp
inc
js
mov
and
sbb
xchg
leave
mov
xchg
or
push
inc
or
aaa
jmp
pop
rol
push
or
xor
(bad)
clc
sbb
pop
int3
or
scas
je
dec
cmp
jns
push
scas
adc
mov
adc
add
retf
cld
daa
mov
sahf
dec
inc
lods
shl
xor
add
xchg
pop
call
jmp
jle
inc
pop
add
shl
pop
rcr
cmp
mov
ficomp
js
mov
lea
inc
pop
into
pop
sar
stos
dec
ss
mov
or
mov
(bad)
cmp
push
pop
or
ret
gs
ss
push
push
(bad)
call
sbb
add
stos
mov
and
add
mov
dec
cmp
bound
xchg
popf
das
sub
idiv
inc
mov
add
ret
xor
jl
movs
aaa
nop
je
jp
mov
cmp
or
loope
sub
sahf
and
iret
out
pop
int3
shl
pop
cdq
fcom
sbb
call
scas
xor
cdq
dec
cmp
lahf
jbe
xlat
retf
inc
je
ja
(bad)
out
inc
mov
dec
outs
jmp
adc
loopne
push
popa
xchg
or
inc
jmp
jno
ror
call
sub
sbb
int3
out
ja
push
sbb
test
or
add
push
hlt
ds
pop
test
scas
lea
dec
mov
pop
pop
push
popf
nop
add
clc
xchg
pop
into
cdq
jl
add
std
mov
ret
jae
mov
shl
jmp
xchg
ss
push
cmp
pop
enter
ret
pop
scas
in
fwait
mov
rol
pushf
mov
sete
jmp
xchg
(bad)
sti
cmp
lahf
es
imul
push
xchg
and
(bad)
pop
jmp
sub
push
daa
lea
mov
and
push
cld
in
ror
add
retf
aam
inc
cmp
push
pop
pop
cmps
fild
shl
mov
dec
mov
mov
mov
jnp
mov
shl
ins
outs
popf
cmp
cld
push
xchg
jnp
pushf
xor
popa
addr16
push
test
es
push
mov
mov
push
in
clc
(bad)
aad
sub
or
mov
mov
inc
stos
add
mov
push
(bad)
jnp
jmp
cmp
or
adc
rcl
mov
out
add
es
lds
out
and
es
iret
jmp
dec
mov
and
pop
mov
div
movs
pop
fwait
mov
pop
outs
dec
bound
and
cmp
or
je
mov
mov
xlat
outs
jno
in
pop
cmp
test
cmp
jno
sbb
retf
scas
xor
and
hlt
pop
test
push
ds
movs
lahf
dec
xor
loope
lods
hlt
xchg
or
xor
xor
mov
ficom
jecxz
loop
sub
(bad)
stos
jl
ror
aam
pop
inc
pusha
(bad)
imul
cmps
fisttp
push
(bad)
cmp
add
pusha
add
xor
das
pop
dec
push
jnp
mov
icebp
adc
xchg
jmp
shr
inc
es
fwait
add
inc
lods
scas
fisub
sahf
dec
ins
mov
mov
add
mov
imul
mov
imul
test
cwde
mov
xor
fldenv
in
ror
das
mov
pop
inc
movs
outs
fistp
push
adc
pop
gs
xchg
jmp
jo
mov
je
or
and
add
aad
shl
and
nop
jae
div
sahf
and
nop
push
and
ret
xor
xchg
xlat
(bad)
add
adc
sbb
adc
enter
jmp
mov
inc
arpl
jecxz
movs
test
in
into
test
lods
and
add
test
out
pop
jmp
jb
int
jb
sbb
lock
aas
cmps
jp
out
aad
and
in
jb
and
mov
sub
push
and
lea
xor
pop
stos
aad
cs
jo
xor
icebp
mov
dec
push
sub
xchg
loop
rcr
jo
cmp
dec
data16
sysret
outs
popf
cli
int3
std
jne
ins
mov
(bad)
jmp
call
in
test
inc
sti
sbb
mov
stos
add
and
shl
sub
mov
xchg
cmp
pop
mov
push
dec
jns
sbb
ins
and
ficomp
nop
std
pop
cmps
or
xchg
dec
fdivrp
jbe
sbb
pop
ret
mov
cmp
aam
adc
test
out
ins
fadd
out
and
loopne
ins
sbb
cmp
or
push
sar
or
ja
jmp
ret
push
pop
(bad)
cmps
in
sub
fdivrp
push
out
mov
adc
fs
ins
sub
push
inc
mov
imul
hlt
jnp
call
inc
retf
xchg
ror
push
adc
mov
popf
adc
sbb
addr16
mov
xchg
or
fisub
pop
pushf
sahf
mov
fisttp
mov
ffreep
jecxz
ret
dec
dec
mov
outs
or
add
imul
rcl
push
int
stos
stos
jmp
pop
inc
gs
push
sbb
mov
das
(bad)
fsub
add
shl
jno
in
(bad)
sbb
stc
cmp
jo
mov
pop
add
mov
inc
and
mov
cmps
mov
push
icebp
outs
movs
or
or
clc
(bad)
ret
scas
and
pushf
sbb
sbb
call
rcr
pushf
and
stos
mov
and
cmp
call
leave
popa
repz
jns
push
call
in
sub
jns
mov
or
jge
xor
fwait
sahf
mov
cmp
in
(bad)
repz
mov
ins
out
jns
shl
sub
and
aam
(bad)
sub
aad
pop
push
ret
or
mov
mov
push
cdq
lock
add
in
(bad)
or
push
leave
imul
imul
jle
or
adc
daa
sub
shl
add
jnp
fnstsw
mov
ds
add
push
dec
xlat
daa
ret
cmp
and
add
xor
arpl
jle
cmp
mov
jl
cwde
add
push
cmp
int3
cmp
inc
cwde
jmp
out
or
sbb
pop
shl
mov
adc
xor
(bad)
ret
xchg
dec
mov
mov
and
aam
sub
loopne
dec
jmp
inc
dec
jno
push
test
(bad)
mov
scas
adc
or
sbb
es
xchg
adc
mov
sti
add
out
jne
push
retf
jmp
imul
mov
outs
mov
add
cmp
out
jge
dec
pop
push
add
jmp
je
neg
dec
inc
and
xor
inc
ret
popa
clc
stos
cmps
cmps
aaa
xor
cs
lahf
es
jl
jmp
mov
imul
push
(bad)
repnz
adc
cmc
sub
xlat
jne
ffreep
ss
std
lahf
(bad)
fsubr
or
(bad)
loop
aad
add
aas
arpl
loope
push
cmp
and
push
into
mov
sbb
pop
mov
sbb
push
jb
outs
xlat
into
iret
xchg
sbb
xchg
cmp
pop
pop
or
gs
pop
push
mov
adc
mov
retf
adc
mov
push
inc
dec
cld
cmps
sbb
or
push
mov
sub
sbb
pop
xchg
dec
cs
cmps
jmp
push
mov
enter
adc
pop
call
push
inc
(bad)
push
fisttp
lods
xchg
outs
pop
push
xchg
ja
imul
jl
and
(bad)
nop
dec
repnz
repz
fbstp
nop
lea
les
sti
push
jecxz
dec
ret
rol
(bad)
into
das
fcomp
sahf
inc
fs
ins
sbb
arpl
imul
or
cmp
mov
pop
fst
add
icebp
or
jge
cmp
jp
stos
out
(bad)
mov
movs
es
or
repnz
outs
or
jmp
mov
int3
inc
cmp
push
inc
xchg
add
es
sbb
test
scas
inc
fdivr
add
daa
push
int
jle
aad
or
cmc
clc
add
fiadd
hlt
jo
retf
fst
inc
outs
jg
daa
mov
call
scas
cmp
lahf
mov
mov
sub
pop
inc
sub
pop
ss
sahf
or
repz
mov
xor
inc
in
js
push
push
stc
mov
sbb
mov
dec
lahf
pop
call
test
(bad)
gs
sti
cmp
fadd
dec
xchg
outs
sub
in
repnz
jmp
out
mov
nop
push
retf
loop
cmps
cmp
mov
loope
cmp
loop
push
fwait
sub
shr
mov
test
adc
in
daa
fisubr
add
cld
pushf
jp
add
out
imul
loop
sbb
scas
outs
fwait
sub
cmc
arpl
adc
sahf
hlt
addr16
mov
hlt
sub
in
sbb
pusha
adc
cmp
test
imul
jne
and
inc
mov
push
cdq
jnp
or
jo
rcl
pushf
fwait
call
es
(bad)
add
add
mov
pop
les
daa
ja
inc
jl
dec
cdq
sbb
out
dec
test
xchg
pop
fist
inc
push
adc
lods
cmp
mov
lods
mov
xchg
int3
or
out
in
fdiv
add
sub
aaa
lods
sub
pusha
dec
mov
in
scas
mov
mov
lea
fnsave
shl
mov
ins
mov
mov
and
bound
and
call
xor
push
xor
add
pop
cmp
shl
pop
clc
push
mov
test
scas
jmp
icebp
adc
enter
sbb
mov
mov
call
adc
adc
mov
lahf
out
mov
test
or
mov
sahf
shl
mov
jecxz
std
push
mov
cmp
ja
jo
xor
pop
ds
mov
mov
mov
cmp
push
jmp
pop
push
xor
aad
or
mov
es
cs
adc
mov
push
mov
xor
sbb
mov
xor
ret
sbb
fwait
mov
popa
mov
aam
mov
pop
fisubr
mov
popaw
xchg
ds
push
adc
mov
ret
jns
in
stos
and
sahf
mov
mov
shr
adc
push
jmp
and
loopne
jmp
jmp
jp
add
test
and
push
mov
pop
pop
adc
call
sbb
dec
lds
stc
and
jno
jmp
mov
mov
fnstenv
add
cmps
and
sbb
sub
iret
in
shl
xchg
sbb
jnp
jecxz
cli
outs
mov
lahf
psrlw
xchg
jmp
fcomp
dec
pop
(bad)
leave
retf
mov
or
xchg
cmp
add
or
clc
mov
mov
lods
xchg
test
pop
lock
das
dec
dec
jg
sbb
stos
loopne
pop
repnz
cmp
dec
fld
outs
dec
sti
ficomp
inc
gs
mov
adc
mov
dec
add
pop
sub
je
or
sahf
jge
xor
ins
ds
jo
into
icebp
lock
mov
push
mov
ja
mov
xor
cs
mov
mov
jmp
ins
xchg
stos
dec
jbe
enter
iret
ds
xchg
inc
lea
and
ins
inc
ss
fist
cdq
push
and
sbb
(bad)
dec
add
pop
test
imul
outs
paddq
jge
jecxz
add
scas
pop
lea
inc
xor
sti
in
fstp
stc
mov
push
mov
(bad)
test
fst
cmp
sahf
xchg
add
iret
enter
lds
cmp
add
loop
dec
jge
sbb
jns
jns
dec
(bad)
dec
mov
inc
or
mov
mov
fcom
sub
les
icebp
mov
bound
es
fsubp
mov
sbb
cwde
div
mov
retf
cmp
imul
js
in
call
xor
jmp
out
(bad)
jo
sbb
adc
sbb
fxch
aad
xchg
mov
es
pop
hlt
movs
and
inc
jmp
push
mov
cmps
xchg
imul
pusha
out
mov
(bad)
popa
sbb
adc
jns
ins
sahf
mov
popf
push
pop
inc
scas
ss
in
gs
mov
mov
lods
bound
jmp
mov
dec
push
dec
fwait
lods
call
sahf
cmp
aad
add
rcr
xor
inc
repnz
pusha
cs
(bad)
imul
mov
add
maxps
inc
call
neg
shr
sbb
aaa
mov
aaa
fcmovnb
das
sub
pop
mov
mov
inc
in
sbb
adc
mov
call
mov
mov
in
mov
loopne
in
pop
xchg
jmp
outs
out
sahf
inc
call
dec
push
retf
mov
cmps
inc
mov
repnz
push
icebp
aaa
jbe
xor
les
fist
enter
sub
adc
add
aam
not
gs
pop
cld
cs
out
push
pop
aaa
mov
and
mov
xchg
inc
sub
stc
and
push
icebp
push
mov
dec
mov
(bad)
jno
mov
mov
or
xor
and
dec
fsubr
push
inc
ret
jecxz
push
adc
fwait
pop
int3
je
dec
je
jno
dec
sbb
hlt
inc
pop
xchg
xor
retf
mov
cli
sbb
movs
loop
je
adc
or
repz
aas
push
inc
add
aas
and
test
sbb
xor
in
sub
mov
xchg
pop
lods
push
out
data16
mov
stc
cmps
sti
jbe
lahf
pop
movs
retf
push
add
sbb
and
jp
imul
jle
not
mov
addr16
call
push
scas
jle
dec
das
xor
and
or
sbb
es
sahf
sbb
or
and
xchg
fld
mov
jne
mov
movs
add
nop
fstp
cmp
dec
test
mov
inc
arpl
cmps
test
pop
(bad)
mov
aam
adc
and
ins
cld
or
or
xor
mov
adc
pop
cmc
stc
jmp
aas
pop
jmp
and
imul
jmp
cmps
push
scas
jmp
xchg
fisubr
ja
sub
and
inc
out
dec
add
ret
cmp
sar
(bad)
fstp
jp
cs
les
ret
(bad)
xchg
sar
pop
shl
repnz
adc
dec
out
bswap
push
pop
cmp
or
stc
inc
ins
mov
mov
cmp
mov
sti
xchg
sub
adc
loope
dec
dec
ffreep
nop
je
test
into
aad
popa
push
pop
bound
pop
mov
imul
add
mov
mov
mov
push
add
push
ds
mov
test
jge
mov
cmp
scas
fdiv
test
xchg
inc
inc
add
call
pop
mov
nop
sub
jb
inc
jno
inc
pop
mov
mov
sti
sub
mov
or
inc
(bad)
fs
sbb
movs
push
jl
inc
jp
les
(bad)
lds
dec
sbb
xchg
jg
retf
repz
inc
dec
push
add
jl
retf
sbb
pop
stc
mov
ss
xchg
mov
sub
mov
out
xchg
(bad)
push
ror
cmc
jmp
push
sub
nop
push
sbb
enter
aas
push
push
ror
pop
div
and
dec
or
pop
add
ds
dec
inc
or
pop
adc
jmp
mov
in
mov
push
lods
dec
(bad)
(bad)
push
push
mov
lea
pop
sub
adc
enter
cmp
add
retf
fsubr
test
int3
imul
cmps
xchg
inc
mov
leave
rcr
inc
sbb
icebp
pusha
test
mov
cwde
test
das
js
retf
(bad)
in
jns
imul
nop
gs
mul
mov
sbb
sti
adc
out
rol
in
xchg
aam
stos
icebp
repz
fwait
cmps
xchg
cld
fistp
cmp
in
movs
out
pop
addr16
sti
ss
jg
mov
jp
test
adc
mov
pop
mov
test
stc
and
push
pop
xchg
cmp
test
jo
inc
jl
cli
cmc
jl
aad
mov
stos
jnp
push
stos
xchg
shr
jnp
loope
mov
jle
pop
sbb
push
inc
(bad)
call
add
stc
sar
hlt
mov
aaa
adc
jle
imul
leave
loop
pop
jmp
jbe
mov
mov
ins
pop
and
sbb
xchg
shl
cmp
push
mov
hlt
idiv
cmps
cld
inc
(bad)
mov
leave
retf
sub
adc
xor
and
popa
popf
sub
push
mov
cdq
in
or
mov
pop
data16
push
jno
mov
ret
add
cld
test
inc
(bad)
inc
das
push
lods
arpl
mov
dec
aaa
mov
mov
movs
int
sbb
xor
or
pop
jmp
and
mov
cmp
cmps
es
fwait
adc
mov
xor
sbb
push
mov
test
sbb
add
inc
inc
out
pop
fist
jne
outs
mov
add
bound
lahf
popf
push
rcl
(bad)
js
lock
fs
lods
imul
xchg
adc
ss
lea
xchg
xchg
push
in
fdiv
dec
adc
jns
pop
sti
out
jmp
gs
fidivr
jbe
pop
out
jmp
pop
cmps
dec
cmps
iret
mov
mov
inc
adc
and
movs
add
xchg
adc
enter
xchg
in
xchg
mov
test
gs
adc
out
scas
jg
sub
push
js
cmp
ret
inc
dec
push
inc
iret
dec
fdiv
int3
push
adc
jg
add
in
ins
xchg
mov
push
cld
fs
(bad)
test
or
jge
push
cmps
iret
loopne
xchg
nop
and
scas
pop
bound
jp
into
aaa
add
mov
jl
in
pop
mov
pusha
sahf
push
and
add
lds
jp
add
or
xlat
rol
inc
pop
cli
lods
xor
aad
dec
and
mov
push
pushf
in
mov
jno
ins
push
mov
inc
xchg
push
pop
dec
es
lds
sbb
cdq
leave
das
adc
add
in
sbb
xor
shl
push
xchg
jecxz
push
xchg
pop
inc
sub
lock
lds
into
inc
xor
pop
outs
sbb
inc
push
call
push
cmp
sbb
or
sbb
xchg
js
mov
arpl
aam
test
and
test
mov
mov
clc
xchg
xor
aaa
cmps
dec
push
xchg
sub
cs
jecxz
call
int3
mov
daa
scas
inc
sbb
push
dec
mov
aad
xor
stc
ficom
cmp
mov
test
xchg
fisubr
lods
mov
out
jo
lahf
cmp
pushf
pop
mov
pushf
cmp
sbb
test
cmp
jp
xchg
frstor
sbb
dec
inc
aam
mov
cmp
(bad)
data16
xor
repz
std
sbb
xchg
mov
mov
stc
lds
jecxz
adc
add
sbb
sbb
pusha
ret
jecxz
(bad)
fiadd
lock
sub
dec
sub
xchg
xchg
je
jo
out
retf
add
dec
cmp
and
mov
in
xchg
xor
sub
push
and
neg
mov
cmps
and
enter
push
pop
aas
lds
pop
idiv
popf
ret
sub
mov
xor
fisttp
fyl2xp1
adc
pop
xchg
xchg
add
mov
inc
mov
cmp
add
xchg
mov
xchg
mov
adc
aad
in
inc
out
cli
mov
cdq
jmp
pop
push
es
ret
jmp
fadd
cmps
mov
movs
fwait
shr
repz
stos
fild
test
aas
inc
lods
mov
pop
ins
in
aad
mov
fwait
sti
data16
lds
fs
cmp
inc
repnz
mov
ss
cmp
push
nop
ror
xor
imul
add
fdivr
push
sbb
ss
adc
imul
dec
cli
and
icebp
rcr
das
fucom
sbb
out
call
inc
xchg
sahf
iret
dec
rcl
mov
jno
mov
push
mov
ret
push
mov
jns
(bad)
sti
div
xlat
vpaddusb
adc
scas
sub
ja
call
in
xchg
mov
pop
lds
and
pop
push
loopne
out
outs
mov
adc
mov
in
(bad)
popf
sub
mov
pop
lea
adc
bound
shr
aaa
push
or
push
xchg
cld
mov
movs
(bad)
scas
adc
or
ins
jg
fcomp
mov
fistp
mov
mov
loopne
sub
adc
fldenv
dec
mov
sub
xchg
and
cmps
cdq
mov
sahf
cld
jecxz
mov
xor
jno
mov
xchg
push
stos
aam
mov
cmp
sbb
shl
shl
add
fidivr
aad
push
imul
fiadd
(bad)
push
ret
shr
cmp
pushf
xor
sbb
test
test
cmp
sti
inc
cmp
mov
xor
outs
into
or
pop
inc
cmp
jmp
int
out
test
lahf
cmp
cmp
repnz
cmp
xor
cmp
xchg
add
in
fbld
mov
jmp
arpl
nop
out
scas
mov
scas
cmp
cmp
bound
or
inc
mov
outs
test
inc
(bad)
enter
cmp
data16
pop
test
pusha
rcr
push
xor
pop
fprem
nop
inc
sti
in
cmp
inc
mov
sub
mov
repz
mov
cmp
add
into
sub
inc
imul
shr
xchg
fadd
stc
nop
pop
das
mov
div
add
ins
mov
xor
pop
inc
pop
inc
mov
shl
fld
and
orps
push
push
iret
xor
and
imul
jne
retf
jmp
iret
add
pop
scas
int3
xor
and
mov
(bad)
mov
inc
or
mov
push
xor
cmp
jne
aas
aad
mov
cmp
aad
je
les
jmp
(bad)
fnstsw
bound
dec
and
jo
add
push
jge
inc
adc
adc
mov
test
adc
popf
(bad)
cli
xchg
loopne
inc
fbstp
aam
ror
(bad)
jnp
sbb
lea
sbb
inc
and
fcom
ins
ror
xchg
xchg
arpl
and
adc
cdq
mov
movs
mov
in
int
dec
ret
lahf
(bad)
jno
arpl
arpl
test
inc
pop
cmp
lods
ins
cmps
sbb
mov
pop
dec
nop
out
daa
cmc
push
sbb
into
pop
adc
and
inc
add
pop
in
pop
cwde
fisttp
fistp
push
adc
sbb
call
outs
and
(bad)
pop
out
sbb
push
sub
xlat
xor
inc
outs
dec
jmp
aad
loopne
call
xchg
loope
jp
jns
push
stos
es
repnz
shl
xor
or
mov
add
call
cwde
xchg
xor
sub
loope
sahf
sub
adc
xchg
ds
mov
mov
mov
fdivr
fldcw
xor
movs
in
adc
cmp
sbb
repnz
mov
shl
jp
out
push
cwde
pop
pop
lock
pusha
stc
mov
inc
aad
mov
pop
mov
lods
frstor
adc
ins
dec
xchg
call
test
xchg
sub
inc
loope
mov
and
sub
imul
jmp
ins
movs
sar
mov
out
sahf
and
adc
pop
shl
sbb
mov
sbb
mov
xor
xchg
mov
and
(bad)
sbb
scas
lock
xor
inc
and
push
jge
sti
out
sbb
scas
and
push
mov
adc
mov
pop
mov
sub
xor
arpl
xor
inc
data16
or
(bad)
call
pop
pop
add
cmc
in
(bad)
dec
fcmovnb
fisub
mov
mov
dec
call
mov
jl
fmulp
xchg
daa
call
cdq
push
and
inc
in
ins
jge
or
mov
retf
pusha
xchg
mov
jp
enter
mov
inc
mov
mov
sahf
fwait
inc
in
rcl
shr
and
(bad)
jmp
xchg
cmp
pop
cmps
outs
push
xchg
mov
shl
lahf
sbb
push
sub
xchg
fbstp
fnstsw
push
or
jmp
lock
bnd
jg
sub
cs
mov
sub
bound
pop
add
sub
and
fwait
cwde
pop
dec
aaa
lock
pop
xor
imul
sbb
leave
sub
je
sahf
xor
arpl
and
bound
sbb
and
xchg
jl
sar
ins
pop
sub
sahf
or
(bad)
fmul
dec
fsubr
test
cdq
xchg
or
xor
scas
rep
or
sbb
or
jbe
loop
mov
loop
scas
mov
inc
out
add
xchg
jge
icebp
push
mov
xchg
(bad)
(bad)
sub
outs
lock
cmp
je
cdq
xor
pushf
xchg
movs
cmps
mov
xchg
leave
add
push
jl
mov
stc
data16
mov
dec
add
push
push
icebp
xor
test
sub
cmp
push
xchg
jp
push
retf
and
(bad)
sbb
xchg
xchg
push
scas
(bad)
cld
jmp
or
xchg
dec
add
ds
mov
fwait
xor
xchg
mov
adc
loopne
cmp
stos
data16
jge
mov
cwde
mov
sbb
push
jp
dec
jns
or
cmp
jnp
cwde
mov
inc
jl
sub
fsubp
jnp
mov
xlat
pusha
mov
les
xchg
loopne
dec
dec
scas
pop
loop
fst
aam
je
adc
movs
xchg
inc
scas
cwde
push
xchg
repnz
aaa
push
aas
sub
in
scas
sbb
xchg
bound
pop
sbb
and
sbb
xor
ja
pop
push
push
mov
mov
push
xor
or
popf
adc
outs
adc
fstp
fscale
repz
bound
xchg
mov
dec
xchg
xor
or
aaa
(bad)
bound
xlat
(bad)
pushf
ins
and
xchg
ret
(bad)
sti
inc
adc
add
popa
sbb
arpl
lds
push
stos
and
in
adc
into
cmp
jnp
pushf
jmp
aaa
and
and
pop
xor
dec
cmc
test
jge
scas
xlat
and
sbb
mov
ret
sbb
mov
lock
xchg
ror
and
jge
mov
aam
out
mov
or
aaa
add
out
mov
aad
jg
xlat
cmp
cmp
inc
pushf
mov
and
push
mov
pushf
daa
retf
dec
(bad)
popf
retf
push
lahf
jno
adc
dec
xchg
pop
cmc
add
test
add
popf
(bad)
je
add
fiadd
stos
sbb
imul
sbb
mov
sbb
fwait
add
pop
inc
mov
fmul
and
inc
mov
es
pop
fwait
adc
mov
mov
pop
xor
mov
xchg
dec
add
pusha
push
into
inc
sub
adc
sub
test
push
shr
aad
aas
push
(bad)
cmp
pop
imul
imul
loope
jle
mov
mov
pop
and
ror
inc
push
aad
jo
cmps
hlt
push
jg
sbb
(bad)
ret
inc
pusha
das
sbb
(bad)
push
test
dec
lds
jecxz
inc
aas
push
out
(bad)
pushf
cmps
stos
cmc
xchg
rcl
pop
pop
and
mov
(bad)
add
mov
test
adc
rol
imul
push
xchg
out
(bad)
call
pushf
rcl
idiv
jnp
and
inc
aas
pusha
push
cmp
clc
or
(bad)
mov
push
push
imul
enter
xchg
adc
xchg
push
add
std
loope
or
ja
mov
test
das
inc
int
shr
call
ficomp
add
add
scas
scas
or
aam
mov
(bad)
xchg
fsqrt
inc
rcl
adc
ret
jp
sbb
or
(bad)
sbb
sub
pop
mov
mov
xor
mov
(bad)
fyl2x
pop
imul
pop
mov
out
sbb
cmp
in
ss
stos
pop
jl
int3
cmp
lea
leave
jmp
jecxz
repz
sti
xor
cmp
inc
xor
cs
push
not
mov
rcl
mov
adc
int3
repz
sbb
push
cdq
xchg
aas
mov
pop
adc
fisub
out
test
mov
loope
pop
repnz
(bad)
fidiv
stos
and
push
mov
rep
cli
push
les
cwde
fcom
add
sti
mov
cdq
js
inc
out
aaa
bound
xchg
adc
(bad)
es
addr16
mov
(bad)
xor
cmp
(bad)
jno
sbb
push
das
cmp
sbb
mov
cmc
mov
add
pusha
xor
mov
xor
xor
mov
xchg
dec
std
fs
pop
inc
inc
ja
jb
sub
jmp
ss
adc
or
test
dec
fcomip
push
mov
add
jno
jle
dec
sbb
pop
addr16
inc
sbb
imul
ror
sbb
mov
(bad)
popa
xor
sbb
in
or
in
icebp
or
test
push
inc
jmp
scas
imul
test
cmp
(bad)
mov
or
and
pop
inc
xchg
mov
stos
pushf
ins
sub
mov
pop
pop
fs
movs
cs
pusha
jg
retf
aas
jo
push
in
sub
inc
add
add
pop
jo
xchg
int3
dec
sti
lea
cmp
push
in
mov
mov
mov
cmp
push
ss
pop
lds
jb
out
xor
cmps
sti
mov
and
push
call
fs
or
push
dec
jmp
inc
mov
adc
shl
shl
xchg
(bad)
cmp
popa
mov
icebp
dec
cmp
xor
popf
and
mov
jo
push
dec
dec
pop
fsubr
xchg
xlat
enter
test
inc
mov
rcl
mov
mov
pop
mov
sub
sbb
cld
div
scas
adc
lods
sar
into
aaa
(bad)
jl
pop
push
xchg
in
mov
jl
inc
mov
clc
or
leave
in
or
adc
out
adc
dec
popa
push
aad
and
mov
pop
sbb
and
es
ins
nop
inc
sub
dec
and
and
inc
pop
hlt
sbb
retf
sti
cmps
in
cs
mov
dec
arpl
pushf
fnstsw
xchg
cli
xor
aas
int
jnp
into
xor
jle
adc
hlt
outs
retf
jbe
add
mov
jecxz
jg
jmp
inc
sbb
adc
dec
jecxz
arpl
cmp
xchg
xchg
sub
push
stos
imul
dec
aas
xchg
sti
mov
lods
adc
aam
imul
ins
add
adc
jne
leave
stc
push
or
outs
sub
ret
gs
fdivr
and
mov
pop
out
push
popa
xor
and
push
mov
inc
ja
sbb
pop
shl
movs
scas
and
mov
fwait
in
pop
pop
xor
sbb
frstor
in
push
imul
out
cli
in
sub
movs
(bad)
cmps
stc
push
jle
fwait
sub
stos
jge
mov
cmp
shl
mov
mov
pop
add
xor
cmp
or
jg
mov
dec
icebp
lds
test
aad
and
test
cmpps
imul
aam
add
int3
sbb
mov
sub
in
ror
aaa
enter
sub
les
fist
adc
(bad)
outs
push
jno
sbb
dec
pop
pushf
lock
pop
sub
pop
xchg
ss
inc
rcl
lock
sub
loope
mov
scas
jnp
adc
mov
xlat
cmp
lds
jno
adc
push
icebp
lds
mov
mov
das
adc
je
les
stc
mov
pop
repnz
xor
cmp
jp
ret
sbb
pop
ins
into
icebp
xlat
sbb
test
outs
cmp
retf
ror
jbe
cmp
stc
and
xor
sub
mov
lea
mov
(bad)
cmps
fnstcw
cmps
mov
int
cmps
jnp
stos
or
fs
xor
sub
cmp
sbb
test
push
cli
and
or
in
xchg
add
test
adc
out
loop
mov
inc
add
leave
inc
sti
test
sbb
jl
ja
sub
ficomp
inc
jne
out
pop
pop
into
lock
dec
adc
xchg
dec
in
lods
adc
rcl
xor
call
add
movs
loope
jo
add
ror
std
(bad)
into
sar
push
(bad)
pop
cs
jg
arpl
rcl
fiadd
in
inc
inc
sub
in
pop
rol
in
sub
dec
ins
pop
or
adc
sub
mov
pcmpgtb
jno
test
loope
fadd
sbb
mov
stos
aam
mov
in
aam
jns
in
hlt
mov
jo
inc
mov
dec
int3
mov
fld
mov
and
dec
loop
sub
pusha
cs
mov
and
mov
push
cld
push
add
stos
mov
aaa
mov
movs
stos
data16
mov
mov
or
int3
jmp
or
mov
dec
gs
addr16
dec
cmp
sbb
inc
push
std
ret
sar
mov
push
jmp
cmp
or
pop
into
cmp
add
inc
or
js
sbb
pop
test
inc
ins
nop
std
cli
fsubr
cld
addr16
enter
jmp
mov
dec
mov
out
sbb
jle
xchg
sub
movs
or
pop
sti
jo
mov
add
or
or
dec
pop
arpl
imul
xchg
repnz
bound
hlt
sbb
inc
dec
lea
mov
inc
mov
jle
pop
jecxz
popa
push
out
add
repz
dec
retf
lock
mov
test
add
int
ds
xor
test
loop
pushf
sub
sbb
fcomp
stos
mov
pop
push
(bad)
int3
sbb
cmp
mov
scas
and
dec
add
fadd
call
in
dec
xchg
addr16
sbb
aas
and
mov
cmp
in
dec
add
adc
retf
dec
jmp
sub
test
sub
mov
jb
sbb
mov
sub
retf
fst
sub
push
add
jle
adc
add
add
jge
cmp
or
and
movs
inc
je
mov
in
mov
xor
inc
cdq
dec
pushf
fbld
jp
adc
daa
aas
aas
push
jecxz
dec
popa
mov
int
pusha
ins
cwde
test
daa
fwait
in
xchg
mov
pop
sub
or
daa
mov
cmp
test
movs
inc
adc
data16
dec
add
(bad)
call
xchg
fstp
mov
push
push
xor
(bad)
fld
retf
inc
mov
stc
push
jmp
ds
jb
lds
sub
pop
call
int
and
test
sub
in
rcr
into
repz
xchg
pop
xor
in
jnp
sub
xchg
mov
pop
shl
clc
push
pop
loopne
cmps
out
sbb
pop
mov
jo
fild
lock
sub
ins
jmp
xchg
ffree
adc
cmp
arpl
cmp
or
ja
iret
add
in
lods
in
mov
mov
mov
sub
adc
ins
fiadd
sbb
mov
stc
mov
mov
adc
mov
push
icebp
inc
clc
fisttp
sbb
mov
cmp
repnz
test
test
cmp
cwde
test
add
adc
dec
add
cdq
das
add
inc
ja
and
sub
push
aad
shl
inc
cli
push
mov
sti
popa
ins
clc
add
pop
push
cld
mov
jne
shr
jo
mov
out
and
in
lahf
leave
and
adc
scas
cmp
test
pop
xchg
stc
(bad)
mov
stos
test
sahf
ss
sub
dec
(bad)
cdq
dec
and
rcr
add
jge
sub
jns
or
loop
(bad)
leave
out
mov
mov
push
movs
mov
fwait
push
fist
mov
jmp
dec
div
sub
push
xor
cmp
fst
adc
jl
xchg
add
and
ja
jp
inc
pop
adc
jmp
add
arpl
inc
(bad)
aam
jnp
jno
aam
cmp
adc
not
mov
das
cs
sti
mov
sbb
fdiv
das
cld
adc
adc
call
pushf
add
cmp
push
pop
pop
dec
inc
mov
test
fisttp
adc
and
stos
mov
add
aaa
test
cmp
pop
shl
rcl
or
and
push
xchg
cmps
int3
cmp
push
xchg
push
iret
xchg
in
pop
sbb
push
in
inc
nop
mov
jnp
push
sub
cmps
push
pop
lock
les
or
leave
fptan
cld
(bad)
push
in
adc
fst
jp
rcl
pop
idiv
and
mov
into
aas
xor
mov
popf
sbb
std
mov
imul
popa
xchg
mov
fld
nop
(bad)
xchg
test
imul
popf
dec
in
dec
sti
mov
xor
mov
movs
jb
dec
rcl
mov
test
ins
int
(bad)
popf
sbb
adc
(bad)
sbb
mov
movs
es
adc
loop
cli
pop
call
retf
lea
sar
stos
jge
fstp
or
pop
mov
mov
cmp
push
mov
inc
int3
jl
mov
xchg
loope
push
je
pop
mov
shr
call
jecxz
gs
in
push
or
mov
push
retf
clc
hlt
dec
mov
add
or
jp
jp
ins
repz
pusha
mov
lock
mov
and
movs
jb
shr
dec
lods
imul
das
dec
xchg
outs
icebp
pop
inc
dec
aas
mov
ins
mov
add
xchg
jbe
xor
and
hlt
sub
add
dec
cli
cdq
lahf
shr
jno
and
sub
data16
pop
call
adc
jg
and
pop
sahf
cmps
pusha
sbb
adc
ret
fcom
neg
repnz
push
dec
mov
clc
arpl
gs
icebp
sub
jo
xlat
mov
mov
(bad)
mov
dec
xor
add
cmp
push
inc
mov
jbe
movs
fst
xor
dec
iret
in
push
and
arpl
pop
inc
mov
sub
mov
lahf
and
test
arpl
retf
cmp
cmp
cwde
sbb
scas
push
repz
bswap
and
pop
pusha
cmps
jecxz
push
mov
pusha
leave
push
loope
pop
jecxz
iret
fwait
call
mov
outs
jl
(bad)
nop
xor
rcl
leave
es
xlat
repnz
outs
cld
jmp
xchg
add
sbb
sti
retf
popw
mov
ins
jmp
mov
inc
sbb
push
fnstenv
test
adc
pusha
fs
pop
lea
pop
or
and
xchg
jge
mov
mov
mov
sub
ss
lods
enter
inc
imul
pop
xlat
ins
fild
xor
or
outs
icebp
(bad)
mov
(bad)
aaa
mov
dec
mov
lods
sbb
push
push
pop
mov
inc
inc
pop
jmp
mov
bound
mov
adc
push
(bad)
cmps
pop
ins
les
jnp
dec
push
lods
paddsb
mov
shl
ja
adc
sbb
sub
cs
call
pop
cmps
push
jne
clc
cmp
lods
ss
cmp
pop
cli
sub
paddsb
jge
movs
jne
xor
sahf
mov
(bad)
jle
in
mov
shl
in
mov
xor
(bad)
xchg
adc
dec
ins
push
mov
call
adc
stos
adc
inc
add
mov
stc
fsub
inc
lock
cwde
cmc
mov
or
retf
jnp
aas
mov
and
gs
mov
adc
cmp
test
jno
movs
into
retf
sbb
and
out
in
rcl
hlt
sti
(bad)
idiv
ror
mov
pusha
fsub
es
lods
aam
ja
fwait
xchg
xchg
test
sub
ds
adc
push
xchg
(bad)
push
mov
jne
in
hlt
sbb
jbe
mov
push
outs
cmp
jne
push
xor
xor
nop
push
adc
fs
pop
repnz
test
pop
sbb
and
cmp
test
mov
jae
and
mov
aaa
or
push
test
pop
jp
and
and
dec
aas
xchg
sub
mov
cmp
call
call
aad
jnp
outs
pop
lods
cmp
push
mov
(bad)
retfw
pop
mov
xlat
cmps
in
in
jmp
ja
pusha
pop
retf
mov
imul
test
sub
mov
jg
or
xor
int3
sbb
call
adc
push
xor
fwait
out
push
push
push
jge
repz
mov
sub
ja
adc
repnz
test
aam
inc
das
xor
out
out
dec
push
popf
mov
sbb
sahf
dec
lock
push
jle
jecxz
test
jle
pop
cli
add
and
add
mov
inc
fcom
test
dec
push
jb
inc
xchg
std
fcom
pop
cli
inc
int3
movs
stos
pop
outs
dec
sar
fdivr
xor
int
scas
jmp
cs
and
mov
test
icebp
lods
xchg
jecxz
push
inc
fidivr
jo
sbb
jns
fidivr
xor
(bad)
sbb
pop
inc
sbb
push
dec
xor
movs
sbb
lock
scas
movs
mov
xor
inc
(bad)
adc
pop
add
mov
sub
les
lods
mov
sbb
aaa
jmp
adc
pop
and
jne
imul
sub
int
enter
std
loope
push
repz
sub
jmp
ins
inc
shl
popa
stc
imul
leave
mov
jl
das
mov
jno
(bad)
mov
add
adc
xchg
jo
pop
fdivr
aam
sahf
lods
xor
add
xchg
(bad)
jns
inc
cli
lods
icebp
fisub
mov
sbb
xchg
sub
int3
jl
fisub
fwait
arpl
inc
add
jbe
cwde
js
mov
mov
je
jo
mov
dec
cs
push
push
(bad)
out
sbb
arpl
sti
movs
mov
inc
pop
dec
(bad)
jmp
xchg
aas
lahf
stc
cmp
add
adc
adc
jmp
lea
ins
lods
lock
jg
leave
inc
repz
xchg
xchg
dec
jne
inc
mov
popf
xor
fwait
and
inc
inc
lods
mov
pop
(bad)
push
sbb
stc
adc
push
xor
and
loopne
lods
mov
pop
icebp
jae
sub
ret
cli
jg
inc
popa
cmp
lds
sar
push
jo
inc
push
pop
mov
aam
scas
sub
inc
pop
dec
cmps
retf
and
add
inc
inc
mov
in
aaa
scas
(bad)
call
movnti
and
mov
jecxz
pop
cmp
xchg
fadd
sub
or
sub
ret
jae
push
inc
pop
(bad)
and
cmp
(bad)
adc
ret
xchg
and
add
jb
pop
xchg
mov
jne
push
pop
jb
pop
ret
lods
dec
push
inc
mov
push
pop
iret
ror
xor
lock
jg
sbb
popf
sbb
aas
cli
(bad)
or
mov
dec
adc
fsub
and
and
nop
fcmovnbe
out
in
jno
push
mov
(bad)
push
add
test
das
inc
mov
inc
dec
inc
push
in
xadd
and
jb
inc
and
ja
lods
and
mov
shl
lahf
jae
dec
and
inc
mov
mov
out
cmp
pop
in
aad
mov
test
nop
xchg
pop
ja
repz
sahf
je
repz
mov
outs
sbb
cmps
xchg
jg
test
jge
out
cmps
std
jl
mov
js
xchg
pop
data16
sbb
adc
mov
xchg
push
lea
leave
sbb
inc
cmp
or
aam
sub
stos
hlt
inc
movs
jg
xchg
fisttp
mov
sub
and
jmp
and
lds
mov
sar
gs
xchg
xchg
out
push
or
imul
jo
push
ret
xor
fmul
jnp
out
loop
movs
popf
mov
push
push
repnz
mov
inc
in
jno
ror
std
stos
popa
(bad)
int3
movs
sub
test
xor
out
loope
fsubr
js
xor
sub
fcom
out
jg
sbb
ja
adc
hlt
in
lds
mov
stos
fisub
push
cmps
in
ins
call
or
or
add
jg
pop
retf
scas
sbb
xor
aad
call
pop
out
xor
outs
movs
repz
cdq
jmp
rol
ret
outs
int
dec
push
sub
sbb
jbe
sar
xchg
call
adc
sti
jne
sbb
inc
inc
pop
mov
xor
repnz
ja
fild
push
jp
and
mov
ja
jecxz
push
mov
jb
pushf
aad
aad
stos
xchg
lods
mov
iret
psraw
adc
xlat
retf
das
or
in
cmps
or
std
fistp
fdiv
push
cld
cdq
cdq
xor
pop
sbb
inc
mov
mov
cmp
jns
or
xor
push
mov
retf
(bad)
jle
push
sbb
gs
arpl
rcl
lds
jmp
data16
xchg
jbe
mov
test
jae
retf
dec
test
adc
sbb
(bad)
fadd
sub
lock
call
cmp
sahf
mov
mov
sub
and
sbb
pop
sbb
out
dec
loopne
jb
retf
pop
fmul
mov
mov
aas
dec
xchg
imul
int
pop
fndisi(8087
dec
data16
xor
test
jecxz
test
mov
movs
adc
pop
(bad)
addr16
retf
push
retf
sub
fnstsw
lods
nop
mov
add
scas
sbb
jle
inc
repz
sahf
xchg
xchg
sub
cmp
xchg
icebp
sbb
retf
add
imul
neg
dec
pop
mov
fsub
sbb
xor
push
fcomp
adc
cwde
cmp
imul
dec
ins
(bad)
push
sbb
dec
sbb
arpl
sar
iret
je
pop
std
pop
mov
leave
jmp
xor
mov
fcmovu
inc
xchg
repnz
sub
popf
mov
lods
in
jne
pusha
inc
(bad)
ss
fsubr
daa
sbb
mov
xor
ret
mov
call
inc
scas
inc
sysret
fst
cmc
lahf
fmul
fisubr
xchg
xchg
mov
push
dec
fcomi
cmp
scas
cld
(bad)
cli
cmp
rcl
mov
jmp
call
out
push
mov
inc
or
xlat
adc
and
adc
mov
xor
push
sub
cmp
loop
jg
inc
pop
push
cmp
(bad)
lea
and
and
dec
jle
pushf
push
mov
jo
dec
xor
jo
movs
popf
ja
jmp
sub
lds
sbb
sbb
adc
sbb
pop
das
iret
pop
adc
dec
mov
aam
jecxz
or
jge
adc
stos
js
xchg
push
mov
loope
into
sbb
mov
(bad)
call
gs
sti
fidivr
xor
fild
rol
(bad)
stos
add
mov
inc
mov
or
ins
outs
sbb
mov
cs
xchg
out
add
ror
leave
out
test
mov
scas
stos
ficom
pop
mov
mov
popa
in
sbb
cmp
mov
shl
or
test
and
cmp
das
jnp
mul
xor
sbb
call
ss
dec
loope
stos
or
xor
dec
push
shr
pop
test
je
mov
imul
das
sbb
cs
(bad)
jmp
aaa
xchg
lods
ins
sub
out
pop
or
movs
in
push
push
outs
imul
dec
repz
jae
adc
stos
jge
dec
bound
add
ins
mov
cmovae
jno
fidivr
arpl
push
xor
unpcklps
jge
pop
push
sar
out
rol
sti
inc
test
or
cwde
and
adc
push
mov
stos
add
dec
fmul
loope
cwde
mov
adc
and
in
fidivr
scas
sbb
mov
in
jne
imul
mov
fidivr
lods
ror
xchg
mov
mov
dec
jge
mov
(bad)
mov
imul
mov
mov
sbb
cmp
pop
popa
cwde
popa
pusha
add
add
fst
aas
lock
add
and
and
cmps
fimul
adc
jp
jp
sub
scas
int3
jns
daa
cwde
xor
cmp
or
in
call
rcl
enter
mov
push
push
ins
fstp
repnz
mov
out
ss
imul
sar
pop
sbb
jmp
outs
adc
sar
xchg
dec
fsub
imul
add
aam
sbb
(bad)
mov
push
imul
in
pusha
add
mov
clc
xchg
xlat
cdq
ins
and
pop
arpl
fnstcw
lock
jg
cmp
jmp
add
inc
scas
lods
imul
mov
shl
mov
cmp
push
xchg
popf
stc
call
or
sti
int3
jbe
cmps
retf
and
add
jmp
stc
sbb
xchg
jg
cmp
mov
push
xor
cmps
cs
call
or
leave
or
repz
and
scas
dec
cmps
popf
sti
(bad)
nop
test
mov
mov
jp
ins
(bad)
ror
mov
movs
xor
xchg
pop
mov
xchg
das
jg
movs
(bad)
mov
outs
mov
cli
cmp
cs
fisttp
or
jmp
and
mov
mov
xor
mov
inc
pop
pop
dec
movzx
out
fmul
xchg
adc
and
jge
jnp
imul
int3
mov
loopne
jmp
sbb
shr
push
jae
or
mov
or
push
iret
jno
push
loopne
in
mov
jge
aad
ret
cmp
jno
jle
movs
mov
dec
stos
jae
dec
ja
ret
jb
call
lods
jl
pop
add
jmp
xchg
pop
inc
mov
push
enter
mov
push
xor
cmp
fisub
ds
popf
mov
cmp
lock
sub
xchg
(bad)
call
(bad)
addr16
mov
xchg
push
sar
test
mov
xchg
mov
div
push
mov
lahf
repnz
movs
sbb
outs
ja
bound
test
adc
push
shl
icebp
jmp
les
inc
mov
aam
std
ret
xor
aad
movs
js
jmp
les
mov
fstp
out
xor
inc
push
inc
into
out
adc
sub
dec
sbb
aam
lahf
test
sub
sub
mov
test
(bad)
mov
pop
push
retf
lods
aas
xchg
add
inc
jns
and
shl
(bad)
outs
ins
cli
cmp
test
mov
mov
pusha
inc
jne
pop
repnz
retf
pop
mov
mov
int3
fs
adc
sub
out
push
loopne
sbb
push
push
movs
push
shr
movs
dec
lea
(bad)
inc
call
jae
mov
jno
add
mov
mov
sub
std
inc
jg
mov
sub
es
push
gs
xor
arpl
retf
jp
outs
xor
dec
cs
pop
jle
adc
pop
retf
mov
into
mov
(bad)
(bad)
mov
test
pop
dec
add
outs
mov
das
std
cmps
pop
dec
icebp
mov
dec
adc
cmps
xlat
jmp
add
jae
and
repz
dec
dec
inc
adc
retf
dec
xchg
jle
xchg
fdiv
fbstp
fsub
data16
scas
popa
stos
or
jbe
pop
mov
mov
std
or
jecxz
jne
add
sub
fnstenv
mov
mov
inc
pop
jb
push
inc
std
int
sub
in
and
add
xchg
rol
leave
cli
mov
cmps
mov
push
in
jae
push
adc
div
mov
sub
mov
adc
scas
sahf
cmps
rol
aam
cmps
sbb
push
or
lds
rcl
mov
push
mov
adc
fsubr
xor
test
ins
push
test
pop
sbb
pusha
dec
nop
in
mov
pusha
jnp
xlat
inc
pop
(bad)
and
(bad)
push
in
xor
cmps
mov
call
or
inc
pop
sbb
vminpd
js
jmp
xor
outs
das
retf
shr
aas
rol
test
retf
lahf
jmp
sub
sub
push
sbb
(bad)
aaa
fwait
nop
outs
jmp
inc
dec
cli
in
scas
(bad)
push
daa
cli
retf
clc
movs
dec
push
jns
mov
mov
inc
mov
mov
cwde
xor
pop
mov
pop
pop
dec
adc
addr16
out
not
std
pop
test
mov
in
imul
mov
adc
jae
jbe
xor
scas
loopne
sub
mov
mov
stos
cmp
xlat
cmp
aas
pop
push
cmp
xor
call
ins
jmp
mov
pop
xlat
cmp
dec
mov
test
arpl
cmp
cdq
outs
lea
(bad)
push
test
cmps
cld
push
ret
mov
push
into
sahf
js
dec
sbb
mov
daa
xor
fcmovnbe
daa
call
dec
push
pop
fwait
sub
call
pop
or
loopne
inc
push
leave
leave
aam
dec
rep
jo
xor
adc
aas
mov
sbb
popa
add
aad
cmp
data16
pop
das
add
cmps
ficom
sahf
jnp
imul
dec
or
mov
mov
je
push
push
arpl
sahf
(bad)
scas
add
jno
add
ins
daa
pusha
pop
jo
iret
xchg
sub
pop
sub
add
or
ror
aas
loope
enter
push
es
les
mov
and
or
pop
ret
les
adc
jmp
imul
out
aas
fld
test
sbb
lea
pusha
ror
ret
cwde
loope
xor
xor
xchg
inc
fwait
sar
call
stc
lods
mov
add
stc
add
std
ins
and
movs
mov
xchg
xchg
pop
pop
fstp
out
cmps
inc
call
sbb
inc
dec
popf
xor
jge
inc
sub
out
xchg
sub
lock
sbb
mov
popf
test
push
push
add
mov
mov
cmp
mov
scas
sbb
cmps
mov
push
scas
pop
ins
fwait
sub
bound
xor
shr
sti
push
pop
or
rcr
dec
xlat
jno
jmp
arpl
pusha
sbb
retf
cmp
sub
aad
add
xchg
loope
std
add
mov
and
test
dec
push
xchg
std
pop
cmp
and
push
stos
add
jno
jns
ins
push
sbb
js
or
sbb
popa
cmps
xchg
jecxz
jne
cmps
mov
and
push
xchg
push
in
fcom
imul
scas
icebp
pop
pop
sbb
stos
test
cmp
jnp
sbb
leave
daa
ss
(bad)
fidivr
in
sbb
xchg
mov
out
retf
outs
je
stos
push
jae
fisubr
adc
std
jp
push
sbb
inc
int
sbb
cmps
cmp
inc
mov
mov
mov
pop
lods
add
or
mov
dec
(bad)
in
stc
mov
cs
xchg
retf
stc
mov
push
(bad)
push
mov
cli
pushf
shl
or
stc
adc
leave
sub
pop
(bad)
adc
ins
xchg
xchg
out
xor
bound
cmc
mov
adc
fisub
xor
test
cwde
sbb
jbe
or
fisttp
push
jmp
adc
sub
je
fwait
cmps
sbb
add
dec
mov
dec
sbb
aaa
dec
stos
cmc
add
cmp
mov
mov
add
dec
das
out
add
loope
not
fmul
jecxz
mul
ja
mov
lods
or
scas
mov
adc
mov
cmp
push
xchg
imul
fxch
call
push
sub
push
mov
xor
inc
iret
cmp
or
add
repz
push
mov
pop
cdq
shl
adc
jnp
(bad)
in
ret
inc
or
in
call
push
ror
ret
cmp
mov
rol
retf
adc
das
lahf
sbb
int
call
push
push
ror
das
xchg
cs
xor
in
cmp
out
jl
sub
das
daa
ficomp
stos
lahf
movs
pop
imul
iret
pop
sub
test
fadd
outs
ret
dec
in
jb
lock
fs
cld
or
xchg
pusha
enter
dec
loop
xchg
inc
push
sahf
jmp
ret
outs
ins
jns
movs
sub
popf
imul
jmp
test
stos
(bad)
mov
daa
or
ds
bound
test
loopne
jge
cmp
fwait
jb
outs
fistp
ja
test
and
sar
fisubr
dec
std
push
sbb
sbb
iret
(bad)
aad
rep
xchg
xchg
push
adc
or
and
mov
sub
cmp
jnp
pusha
popa
jl
jecxz
and
adc
pop
inc
sbb
mul
xchg
in
je
pushf
mov
cmc
xchg
xchg
mov
adc
mov
lods
lock
ins
xor
clc
aam
sub
dec
sub
lods
sbb
and
imul
in
mov
jb
call
dec
mov
jp
pusha
scas
jns
iret
pop
add
icebp
mov
shl
xchg
sub
arpl
push
jecxz
out
mov
cdq
shl
mov
xor
jns
call
jg
dec
aaa
hlt
add
mov
mov
loopne
add
(bad)
int3
lods
in
in
or
mul
stc
call
addr16
inc
ret
cmp
loopne
push
sub
push
inc
aaa
cmps
sbb
mov
add
sub
stc
adc
adc
xchg
xor
or
sub
out
test
jno
xchg
mov
mov
jle
dec
mov
inc
iret
inc
bound
mov
inc
xor
leave
mov
mov
xchg
in
inc
clc
fdivr
and
daa
in
outs
or
pop
pop
lds
stos
les
mov
rcr
sbb
sub
fiadd
mov
dec
test
sbb
pusha
les
push
loop
std
into
sahf
stc
pop
mov
(bad)
add
mov
add
inc
test
enter
out
xchg
repz
neg
sbb
xchg
mov
ss
neg
push
and
clc
pop
sub
movs
clc
daa
mov
out
loope
jb
xchg
mov
jo
inc
jmp
pop
out
mul
pop
mov
std
or
test
mov
xor
dec
repz
dec
push
out
enter
enter
pusha
loop
bound
mov
inc
pop
pop
jne
stos
xor
das
adc
lock
xor
sub
adc
lock
or
or
icebp
fmul
in
cdq
xlat
xchg
fild
ins
and
fimul
xchg
jg
(bad)
fistp
lods
hlt
lods
cmp
loopne
push
fs
mov
dec
push
jg
(bad)
je
add
fcomp
jl
fwait
jmp
(bad)
cmp
cmps
xor
test
adc
arpl
imul
mov
push
rol
push
dec
jl
(bad)
aaa
scas
sbb
rol
dec
sub
push
(bad)
ja
(bad)
pop
bound
xor
outs
ss
sbb
sti
rol
pop
rol
mov
mov
and
daa
mov
and
and
sub
cmp
fistp
sar
mov
rcr
xchg
test
mov
icebp
cmp
leave
test
or
js
and
sbb
add
nop
sbb
out
in
adc
mov
pop
dec
scas
js
xchg
daa
fcom
movs
push
mov
call
push
test
enter
test
cli
(bad)
push
sahf
out
mov
neg
int
in
mov
sbb
mov
sub
test
inc
sub
jbe
mov
ins
push
ins
(bad)
adc
(bad)
sbb
out
aaa
sbb
push
adc
mov
mov
jne
push
int3
(bad)
iret
pop
xor
pushf
pop
mov
popa
dec
cli
xor
sbb
in
push
fmul
test
call
popf
repz
sbb
int
test
push
je
add
movs
and
dec
repz
and
js
xor
mov
repnz
dec
mov
sahf
mov
mov
fwait
xlat
ins
jg
mov
xlat
jecxz
cld
and
push
adc
scas
imul
out
mov
pop
mov
jp
sbb
sub
aam
push
rcr
mov
xchg
push
call
fdivr
sbb
mov
retf
aad
sub
nop
inc
neg
hlt
xchg
lock
aad
scas
dec
mov
inc
cmp
fdivp
inc
push
outs
not
imul
and
xchg
test
push
adc
(bad)
(bad)
fsubr
mov
sub
mov
jns
or
push
(bad)
sti
mov
lods
fsub
shl
scas
test
cs
mov
lods
inc
sub
dec
xchg
push
mov
leave
add
mov
xor
das
fcomp
xor
das
fadd
scas
inc
add
les
dec
ror
push
cli
push
ret
into
cmp
movs
cld
shr
mov
inc
push
mov
rol
lds
sbb
and
fwait
mov
or
dec
repnz
pushf
outs
fcomip
ror
neg
add
mov
mov
fwait
out
aad
mov
dec
push
cmps
add
std
inc
movs
mov
dec
dec
leave
push
fsub
leave
cld
xchg
imul
sub
into
in
scas
aas
test
pop
add
in
adc
jl
mov
aad
xor
fld
sbb
fs
or
leave
jecxz
ins
test
sub
cli
sub
cmps
bound
shl
and
adc
outs
nop
shl
or
dec
inc
into
xchg
xchg
pusha
lods
jmp
mov
pop
(bad)
daa
pop
inc
jno
push
(bad)
lods
add
inc
jnp
inc
xchg
shr
jae
(bad)
jmp
jb
loope
push
inc
push
call
mov
inc
dec
fsubr
xchg
rcr
xchg
jmp
sahf
xchg
fild
dec
pop
xchg
pushf
aaa
and
or
dec
push
pop
fld
lsl
mov
dec
jmp
sbb
ins
jg
jp
enter
mov
adc
fild
xchg
or
mov
sbb
jecxz
bound
and
or
ins
push
ds
cmps
sub
jmp
mov
sub
dec
mov
add
test
sub
les
xlat
and
push
int3
pop
(bad)
int
jns
xchg
mov
aam
leave
cmp
push
mov
push
test
mov
scas
loop
nop
sbb
xor
sahf
mov
hlt
jge
dec
pop
retf
js
arpl
nop
imul
out
arpl
jns
(bad)
cli
inc
call
fwait
mov
xchg
push
push
lea
test
push
dec
(bad)
hlt
jns
mov
and
cli
sbb
shl
in
test
jg
aad
or
lahf
in
jae
lods
push
cld
inc
mov
sbb
jae
sbb
loope
cmp
je
inc
xor
stc
std
sub
adc
fnstsw
scas
(bad)
jns
adc
je
ins
fisttp
(bad)
push
push
and
data16
out
std
add
mov
pinsrw
push
xchg
loopne
div
cwde
add
xor
push
mov
cmp
pop
cmps
retf
mov
sbb
(bad)
loop
or
push
rol
(bad)
clc
xchg
dec
add
cmps
lock
mov
mov
jge
ins
or
jmp
mov
in
inc
dec
pop
xchg
push
hlt
sub
imul
xor
and
cwde
dec
push
xor
movs
mov
add
xchg
dec
xchg
mov
push
add
in
sub
aad
xchg
nop
in
adc
inc
or
mov
dec
(bad)
(bad)
call
sub
lods
push
or
int
or
int
(bad)
jg
push
addr16
test
icebp
mov
dec
xchg
dec
mov
jge
push
and
jge
mov
or
mov
or
push
ret
sbb
sub
jp
sbb
movs
imul
sahf
cld
movs
pop
pop
dec
dec
cli
mov
mov
xor
movs
mov
into
push
fwait
sub
adc
and
in
in
xchg
gs
mov
lea
ret
loop
cmp
xchg
push
ret
mov
sub
mov
dec
inc
fcom
pusha
fwait
sti
in
retf
jmp
or
and
fnsave
(bad)
cmp
add
lods
bound
add
xchg
leave
loope
pop
xchg
mov
xchg
mov
sub
out
mov
popa
adc
xor
lea
(bad)
push
pop
in
cmp
outs
inc
scas
(bad)
inc
loopne
fs
pusha
das
mul
in
mul
sub
pushf
mov
dec
or
fisubr
dec
pop
lock
aad
and
call
xor
arpl
xchg
jb
pusha
out
test
loope
or
lock
cdq
leave
add
std
cmps
mov
jp
dec
nop
push
pop
out
xor
ins
rcl
in
movs
xor
jge
imul
pop
fdivrp
mov
nop
inc
and
mov
bound
mov
or
adc
sub
loope
xchg
xor
neg
inc
dec
aam
les
leave
push
cmc
add
inc
push
aad
nop
mov
stos
cmp
sahf
call
int3
xchg
push
sub
fisub
in
fstp
scas
mov
(bad)
mov
jmp
scas
push
rdmsr
idiv
jmp
cmp
ds
xor
imul
inc
movs
xchg
push
dec
ss
leave
add
outs
add
shl
nop
push
sahf
fld
mov
pop
and
pop
inc
jae
cmps
lods
jl
jne
mov
mov
mov
jo
data16
or
pop
aam
test
ficomp
push
ror
xor
add
pushf
js
cli
enter
neg
pop
mov
lds
add
int
movs
mov
adc
mov
cdq
sbb
das
xor
jmp
xchg
dec
in
xchg
inc
xchg
mov
rol
movs
cld
(bad)
in
ficom
jne
arpl
sbb
jle
ja
mov
repnz
inc
mov
and
mov
daa
movs
adc
mov
shl
aad
es
jbe
inc
ss
iret
mov
push
ss
(bad)
jnp
test
dec
lods
popf
xchg
pop
popa
cmp
mov
push
sub
xor
jae
ret
stos
(bad)
pop
mov
push
or
cmp
rcl
popf
xlat
cmp
pop
jmp
dec
adc
push
mov
jne
stos
xor
daa
cmp
jmp
in
mov
cmp
jg
scas
jo
out
cmc
movs
push
mov
sbb
sub
mov
inc
fwait
push
jns
ss
jns
add
or
pop
lods
xchg
stc
cli
or
stc
(bad)
sub
mov
loopne
(bad)
ffreep
cmp
lods
inc
push
pop
test
xor
fdiv
xor
pop
retf
outs
fisubr
test
ja
fwait
jae
sbb
das
imul
arpl
push
daa
std
inc
cmps
stos
mov
test
ret
enter
retf
test
nop
out
lea
(bad)
cld
push
retf
sbb
pop
mov
mov
scas
mov
fwait
sub
popf
cdq
ds
aad
sub
leave
and
cmp
nop
lea
sub
jg
fistp
mov
adc
mov
mov
shl
xlat
in
jecxz
sbb
pop
mov
cmp
lea
push
push
es
sbb
or
mov
(bad)
push
inc
fisubr
cmp
mov
push
mov
jle
mov
retf
out
(bad)
cmp
cmp
push
xor
movs
mov
jo
nop
ret
inc
mov
mov
scas
dec
cs
mov
cmp
dec
xchg
imul
and
mov
xor
push
imul
outs
add
or
retf
xchg
pop
icebp
cli
fild
jae
jno
dec
mov
dec
xchg
add
add
mov
inc
sbb
cmps
inc
mov
mov
adc
in
mov
test
ret
retf
inc
stc
jns
pop
rcl
adc
adc
cmp
or
mov
sub
sbb
mov
aam
fbld
cwde
(bad)
iret
dec
aad
or
xor
pop
gs
and
stos
std
or
fsubr
loopne
cmp
jl
pop
pop
addr16
movs
rcl
push
jmp
or
cmp
xchg
push
iret
iret
mov
inc
jp
and
mov
inc
adc
leave
cmp
repz
add
mov
retw
shr
mov
fst
mov
cdq
adc
add
sub
shl
xor
xor
out
mov
xchg
xor
xor
dec
mov
push
(bad)
xchg
push
cmps
jns
inc
stos
ret
rcr
ret
movs
mov
and
(bad)
sub
mov
jmp
call
pop
lea
int3
mov
test
leave
fwait
retf
test
jmp
inc
xor
test
sub
add
test
jl
push
ret
xchg
xlat
mov
repnz
jp
adc
scas
sub
int3
sti
fsub
add
xchg
pop
sbb
cmc
jno
aad
mov
mov
fdiv
scas
popa
push
add
jl
stos
loop
xchg
outs
push
(bad)
lods
aas
cmp
cmp
ficom
mov
inc
push
mov
test
out
dec
jnp
mov
add
mov
cwde
aam
(bad)
fstp
xchg
dec
push
pop
cdq
sbb
ret
imul
(bad)
jo
sub
add
test
rcl
xchg
sar
aam
int
sub
scas
and
jno
mov
xor
mov
(bad)
aam
sbb
sti
imul
mov
push
aam
sbb
push
inc
mov
mov
mov
movs
(bad)
jb
sub
test
das
mov
ds
fsub
out
and
es
mov
mov
hlt
dec
push
dec
xor
sub
lock
mov
adc
fiadd
into
sbb
mov
mov
push
cmc
cmp
mov
iret
xor
shl
jmp
cs
jge
hlt
mov
std
sbb
push
(bad)
fstp
stc
pop
push
pavgb
(bad)
sbb
ja
xor
das
and
shl
inc
(bad)
mov
add
in
adc
jmp
icebp
push
xchg
mov
cli
xchg
stc
scas
not
in
mov
gs
mov
jl
xchg
lods
sub
repnz
cmp
xchg
call
cmp
mov
sub
mov
call
js
jmp
add
les
jle
xchg
dec
int3
(bad)
push
mov
pop
sub
push
and
inc
cmp
xchg
fcmovu
mov
dec
out
ins
or
jne
mov
xchg
push
push
mov
pop
cld
(bad)
mov
sbb
mov
xchg
jg
clc
addr16
mov
lgs
xchg
xchg
aam
xchg
fild
ret
and
lea
loop
xchg
enterw
and
mov
push
ins
sub
scas
jge
mov
ss
iret
add
mov
mov
push
retf
in
fcomp
out
adc
or
repz
punpcklbw
repz
xor
es
jns
xchg
inc
imul
movs
inc
(bad)
jbe
aam
fmul
add
cwde
inc
pop
xlat
sahf
sub
rcr
xchg
and
scas
sbb
jl
push
inc
adc
sbb
add
int
aaa
push
sbb
push
sbb
out
sbb
pop
and
mov
xrelease
dec
jae
xchg
(bad)
outs
les
jmp
or
dec
cmps
ins
xor
xor
(bad)
call
jle
cmp
sbb
jmp
stos
fisub
lods
cwde
sahf
sbb
jb
or
je
or
int
mov
jp
in
dec
mov
sub
jmp
xchg
pop
pop
aad
call
test
adc
and
outs
push
jmp
scas
pop
or
ror
jle
in
mov
test
dec
cmp
add
jecxz
mov
ja
mov
inc
jmp
(bad)
fcom
cwde
sbb
in
int3
pusha
cmps
pop
mov
les
rcr
and
repnz
repz
jl
jg
stos
xchg
test
add
mov
xchg
pop
lods
xchg
mov
mov
ret
cld
test
mov
add
jnp
and
inc
push
mov
fs
push
aam
sti
mov
mov
xchg
or
inc
mov
xor
movs
dec
jae
dec
xlat
mov
out
jae
mov
out
movs
push
icebp
icebp
(bad)
sub
push
rol
mov
in
int3
lds
inc
sbb
and
lods
push
retf
ret
mov
aad
cmp
lods
sbb
ins
nop
xor
mov
jb
mov
push
imul
xchg
jp
int3
pop
lds
mov
sar
push
jp
data16
sar
push
mov
aas
cmp
call
mov
(bad)
test
xchg
aaa
jmp
sbb
rcr
(bad)
or
push
add
add
mov
or
lahf
out
xchg
test
dec
push
data16
pop
aam
fcmovnb
mov
and
nop
ret
cmp
and
lahf
mov
lahf
sbb
aam
shl
out
in
dec
sbb
cwde
fwait
int3
mov
cmp
sbb
push
iret
cmps
ret
fucomip
add
cdq
pusha
and
pop
leave
pop
mov
xor
adc
(bad)
jl
jmp
movs
jp
dec
cmp
lods
sbb
mov
xor
mov
shl
sbb
add
(bad)
repnz
xchg
xchg
pop
mov
dec
out
xchg
iret
(bad)
test
xchg
ret
ret
mov
in
mov
ret
mov
fcomp
in
pop
lahf
or
mov
cmp
ret
shl
dec
aaa
or
fnstenv
push
loop
out
or
jle
and
xlat
out
mov
les
xor
loop
pop
gs
cmp
aad
retf
push
xchg
aaa
push
or
or
dec
sub
ins
xchg
arpl
adc
dec
push
xchg
xor
jbe
mov
cmp
inc
xlat
cmc
adc
mov
js
pop
jmp
leave
adc
idiv
(bad)
xor
fcom
pop
sbb
push
push
mov
adc
mov
inc
dec
out
jns
outs
enter
into
aas
nop
sahf
xor
pop
adc
imul
(bad)
aas
mov
mov
shl
sub
ficomp
loopne
push
loopne
pop
pop
cmovno
jmp
mov
cld
data16
ror
repz
xchg
pop
push
add
push
fdivr
addr16
pusha
dec
hlt
mov
xchg
outs
mov
dec
mov
jno
xlat
and
(bad)
xchg
cmp
sub
xchg
cmps
jo
clc
loopne
mov
adc
loope
retf
push
retf
test
push
cwde
sar
in
ret
push
in
jae
dec
push
iret
scas
mov
cmc
aad
jno
ret
fsubp
shl
test
pop
ja
or
xor
mov
mov
mov
fcmovnu
xor
mov
lahf
mov
jecxz
push
pop
es
int
shl
popf
and
pusha
pop
mov
mov
or
xlat
xchg
retf
add
enter
lods
movs
aad
pop
push
or
add
adc
inc
push
inc
(bad)
or
lea
cmp
nop
(bad)
sbb
call
push
or
mov
sub
pop
in
enter
mov
or
inc
jno
or
cmp
xchg
dec
and
and
call
mov
push
push
mov
aad
dec
gs
and
scas
hlt
mov
dec
xchg
out
xor
call
(bad)
out
scas
test
add
retf
sbb
pushf
test
inc
scas
dec
jno
pop
jb
fs
out
test
aaa
popa
inc
jmp
popf
neg
pop
xchg
outs
mov
pop
fadd
dec
dec
adc
adc
cmp
push
jmp
std
pop
or
sbb
lahf
sub
(bad)
xor
aad
add
cmps
shl
and
add
sar
xchg
lods
loop
dec
mov
ret
sbb
adc
push
lock
pop
mul
div
mov
fmul
jp
cmp
mov
jmp
js
jnp
add
pop
dec
ss
lock
push
fwait
mov
mov
jecxz
adc
lods
adc
(bad)
aas
stos
or
sub
out
arpl
movs
cwde
repz
stos
xchg
xor
push
dec
test
nop
adc
gs
jmp
int3
pusha
je
cld
fst
xchg
sub
mov
mov
adc
or
mov
sti
push
test
lahf
int
mov
cmc
mov
add
cmp
xchg
ds
mov
xor
rol
add
mov
adc
imul
pusha
adc
les
jae
fwait
stos
xor
pop
pop
cmp
scas
cmp
xchg
aaa
xor
mov
push
stos
call
mov
pusha
movs
fnstenv
cmp
push
lds
icebp
sub
jmp
inc
dec
idiv
retf
jns
xor
ins
mov
pop
retf
aas
dec
mov
inc
nop
inc
push
mov
rcl
leave
and
dec
aam
jp
test
inc
inc
and
mov
js
sbb
push
dec
ss
and
cmc
push
cwde
addr16
jp
sbb
cld
pop
imul
test
push
xor
in
icebp
jmp
popa
xchg
test
adc
gs
fild
xchg
jl
jne
pop
les
fwait
xor
xchg
mov
jmp
loopne
neg
or
movs
xor
mov
aam
cmp
add
xor
inc
sub
fsub
out
mov
adc
or
pop
dec
inc
das
and
push
cwde
inc
jmp
stos
pusha
outs
jmp
jg
pop
jno
(bad)
hlt
xchg
movs
mov
cdq
mov
jns
jb
add
mov
adc
dec
mov
jo
inc
fsub
jmp
pop
enter
jg
jbe
cmp
xor
bnd
mov
shl
fiadd
aaa
fidivr
(bad)
lods
jae
and
xchg
fwait
inc
call
(bad)
jb
movs
stos
mov
sbb
pop
out
aaa
lods
pop
ss
inc
aas
pushf
int3
jne
jb
aaa
xchg
xor
mov
es
cmp
cdq
stos
or
call
(bad)
mov
icebp
addr16
lods
xchg
imul
inc
movs
adc
scas
or
mov
sbb
pop
mov
mov
dec
shl
add
femms
jmp
ins
sbb
add
(bad)
(bad)
push
push
stos
movs
in
mov
mov
das
test
int
mov
clc
(bad)
jmp
call
jno
mov
mov
fwait
pusha
arpl
iret
xchg
inc
ins
clc
fst
xchg
dec
and
mov
xchg
sbb
ds
dec
dec
inc
call
shl
push
adc
repnz
rcr
mov
(bad)
xor
pop
stos
outs
mov
jno
pop
test
adc
inc
sub
push
ss
loope
ins
inc
xlat
dec
fucomi
cwde
shl
push
lods
dec
mov
pop
(bad)
jge
hlt
jle
pop
dec
cs
aam
sbb
sahf
js
jbe
sub
les
int3
int
in
(bad)
mov
cmps
inc
call
mov
out
sub
xor
aas
loopne
ror
out
ins
mov
xor
stos
outs
ret
es
shl
fst
call
iret
les
sti
push
lods
pop
xor
ret
sub
mov
mov
hlt
in
stc
mov
movs
fmulp
push
std
repz
jl
outs
and
jecxz
mov
xlat
push
push
aad
idiv
hlt
jmp
sbb
inc
cmps
stc
cwde
sahf
cmp
addr16
dec
adc
retf
cld
mov
mov
mov
fldcw
cld
in
lods
outs
addr16
add
mov
inc
loop
jmp
xor
pop
(bad)
loopne
sbb
mov
js
ins
scas
loope
fisubr
dec
mov
xchg
ins
sub
cmps
add
add
ret
stc
sbb
mov
icebp
popa
shl
or
jle
mov
add
ds
jmp
icebp
push
xchg
xchg
jb
adc
sub
in
sbb
stos
out
jecxz
pop
add
sbb
(bad)
call
fidivr
inc
add
(bad)
fidiv
jg
add
sub
bound
xchg
mov
sbb
imul
push
jb
inc
xchg
xchg
call
addr16
sub
ins
and
sub
out
aam
cmp
fnstcw
imul
sahf
add
jge
adc
mov
dec
mov
ins
inc
cdq
shr
cmp
push
rcl
sbb
mov
lahf
jbe
cmc
mov
mov
or
inc
adc
pop
es
inc
rcl
in
cdq
push
push
or
popf
inc
sbb
sub
iret
jo
xor
lods
adc
cs
cwde
fild
ss
sub
sbb
stos
ret
cmp
call
ins
push
mov
add
cmp
or
and
push
mov
imul
sbb
or
add
out
enter
outs
retf
cdq
inc
int
mov
push
inc
les
mul
ins
sub
hlt
addr16
test
(bad)
mov
push
outs
xchg
repnz
std
ret
cmc
mov
inc
jb
ret
jmp
adc
jb
sbb
je
mov
add
rol
xchg
sub
or
cmp
ror
mov
lea
bnd
aas
(bad)
rol
das
adc
lock
or
out
inc
dec
dec
jge
inc
xor
or
adc
into
daa
fsub
ja
fwait
outs
lods
iret
push
inc
push
jecxz
inc
aas
mov
leave
ds
adc
mov
nop
lahf
ja
cmc
mov
push
sti
or
cs
popf
clc
mov
mov
(bad)
in
mov
mov
jl
push
mov
mov
pushf
add
mov
sbb
pop
mov
sbb
outs
push
push
mov
mov
rcr
ins
cmps
cmps
mov
es
cmp
xor
mov
jne
jl
test
jno
mov
dec
push
stos
dec
cmps
int
push
adc
clc
mov
and
aas
bndstx
inc
rcl
jnp
movs
(bad)
mov
xor
mov
dec
inc
dec
xor
jnp
inc
push
jle
jg
jnp
push
(bad)
shl
pop
or
jmp
imul
popa
sub
lea
xchg
or
dec
adc
push
cld
test
retf
sub
adc
push
jae
push
lds
dec
push
or
scas
push
dec
test
cmp
out
fdiv
push
or
mov
sti
adc
push
or
xchg
imul
loopne
mov
cmp
dec
ror
in
addr16
retf
es
sbb
mov
push
cli
(bad)
aaa
cdq
repnz
push
fist
inc
(bad)
out
mov
add
dec
dec
mov
stc
adc
push
mov
adc
xchg
and
add
imul
cs
fisubr
add
ret
inc
or
pop
sti
aad
cmc
rcr
out
xlat
cmps
ror
push
add
xchg
in
ficomp
or
rcl
mov
cld
sbb
sbb
int
in
scas
je
movs
sub
aas
push
scas
add
cld
dec
arpl
jg
adc
inc
gs
jno
in
push
fbld
daa
xor
dec
(bad)
retf
fiadd
adc
mov
mov
test
mov
daa
shl
sbb
push
pop
bound
call
push
outs
out
fild
and
mov
and
repz
stos
push
adc
mov
xor
outs
sbb
cwde
sbb
mov
mov
lock
sar
fild
dec
or
push
jno
mov
pop
nop
mov
sub
data16
dec
and
jle
adc
push
ret
mov
pop
push
pop
retf
ds
jmp
xchg
les
iret
add
xchg
(bad)
fldcw
into
pop
shl
aam
imul
lea
xchg
rcl
fdiv
push
dec
mov
mov
jbe
adc
dec
jp
data16
push
sbb
xchg
mov
xor
adc
gs
nop
or
test
