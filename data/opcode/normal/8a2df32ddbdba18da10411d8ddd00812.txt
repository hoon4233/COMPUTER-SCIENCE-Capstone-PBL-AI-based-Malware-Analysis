lahf
mov
push
leave
mov
shr
test
je
xor
test
or
adc
mov
adc
clts
dec
or
es
inc
cmp
sub
mov
lea
test
mov
shr
xor
push
mov
mov
inc
sub
xchg
push
adc
lock
fstp
sbb
push
inc
cmp
mov
dec
xchg
add
int3
push
mov
cmp
in
call
mov
mov
jne
call
inc
or
jmp
jmp
(bad)
retf
call
cmp
jb
push
out
(bad)
dec
xor
sub
mov
shr
dec
ror
mov
jo
fist
dec
stc
sbb
or
sub
adc
xchg
test
adc
mov
or
or
xchg
pop
xor
jmp
int3
mov
push
push
mov
push
adc
mov
xor
das
inc
push
lea
mov
lea
push
push
(bad)
js
idiv
pop
or
jl
daa
add
mov
cs
mov
in
out
cmps
mov
xor
mov
mov
push
push
or
adc
jb
in
imul
and
sbb
cld
mov
add
jne
pop
jnp
fwait
jg
aas
in
loopne
or
add
cwde
or
xor
cld
mov
mov
mov
xor
fwait
mov
cld
mov
mov
jbe
lea
ret
xchg
fiadd
rol
add
jb
icebp
cwde
(bad)
out
xchg
jp
mov
adc
jecxz
and
push
and
mov
or
inc
sub
idiv
jnp
push
and
out
dec
rcr
mov
or
xor
sar
ror
xor
add
adc
loop
add
mov
ror
shl
scas
jmp
and
lea
mov
xor
mov
pop
nop
or
sub
xchg
xchg
push
add
inc
pop
adc
xchg
lods
clc
or
ins
push
in
add
mov
mov
mov
adc
mov
mov
mov
or
sahf
(bad)
dec
add
loopne
jbe
lds
retf
lds
je
int3
ror
push
mov
adc
mov
retf
call
add
loopne
add
jl
pushf
mov
push
mov
dec
repnz
jle
ins
imul
xchg
push
(bad)
jmp
mov
mov
add
loope
sbb
inc
fwait
add
or
mov
fsub
pop
or
mov
mov
sbb
fild
mov
and
add
ror
call
dec
jp
ds
test
fsubr
in
cmp
call
sar
pop
dec
loopne
call
push
in
call
fsub
mov
mov
push
test
add
daa
fdivr
frstor
mov
add
in
adc
fsubr
push
pop
mov
addr16
test
(bad)
pop
xlat
fsub
lea
push
imul
scas
add
xor
pop
sbb
jmp
adc
popa
push
mov
push
mov
inc
sub
cld
hlt
adc
stc
add
call
xlat
add
xlat
(bad)
push
clc
sub
(bad)
out
scas
add
sbb
mov
push
adc
or
rol
es
xor
retf
daa
mov
mov
cmp
dec
outs
iret
fmul
in
xor
in
int3
dec
mov
popf
or
jg
in
and
add
jo
cmp
mov
js
test
xor
push
lea
sbb
into
xor
mov
shl
pop
sub
xor
out
bound
imul
dec
jl
ins
mov
sub
test
push
dec
ins
jbe
not
sub
mov
std
std
mov
adc
lea
mov
push
add
cmp
xchg
sub
push
mov
jmp
adc
lea
pushw
into
mov
dec
jnp
and
mov
adc
std
aas
int
or
mov
icebp
out
rep
mov
icebp
mov
or
mov
fild
push
test
mov
or
mov
cmps
nop
push
or
or
loope
or
cmp
dec
xor
jl
mov
fnstsw
test
push
add
fisttp
out
xchg
mov
out
mov
mov
fld
mov
mov
daa
pop
jno
shl
mov
cdq
mov
iret
jb
cmp
mov
push
lea
ins
push
mov
jp
fadd
jb
mov
or
adc
fdivr
dec
aaa
and
fsub
add
mov
sub
in
cmp
lock
pop
sbb
enter
outs
jl
shl
mov
add
(bad)
jle
retf
jmp
call
add
mov
pop
cmp
jne
sub
fadd
stc
add
out
mov
rcl
add
push
cmp
outs
pop
add
mov
add
outs
lea
loopne
ror
(bad)
xlat
neg
int3
add
add
or
add
jne
ds
mov
cmp
push
sbb
cmp
out
push
xor
sub
pop
(bad)
jp
jne
mov
aas
mov
cld
imul
out
cwde
(bad)
fdivr
cmps
pushf
jbe
xor
mov
mov
in
or
jo
cdq
cmp
mov
dec
sub
pop
inc
cmps
mov
mov
mov
clc
adc
out
(bad)
mov
pop
stc
or
push
mov
hlt
ret
jmp
outs
inc
leave
add
and
push
xchg
mov
sar
xchg
xchg
sub
js
xchg
out
sbb
fmul
fistp
add
scas
add
shl
cmp
mov
fdivp
jns
aas
call
test
in
mov
jns
cld
jb
push
mov
outs
test
cmp
inc
or
mov
xchg
call
add
add
fmul
add
fmul
mov
mov
lea
movs
mov
out
icebp
pop
push
test
setne
mov
jne
push
jg
fistp
dec
add
iret
mov
cmp
call
test
inc
call
inc
call
jnp
inc
call
adc
mov
add
std
(bad)
jb
stos
pusha
mov
rcl
mov
shl
pushf
add
pop
push
push
jl
js
mov
mov
mov
sti
jns
or
or
xor
cs
fstp
add
push
cmp
repnz
sahf
pop
xor
mov
cmp
cmp
cs
or
or
sahf
retf
cmp
cmp
push
adc
push
adc
or
cmp
push
push
adc
mov
xchg
test
fadd
mov
movs
mov
push
imul
imul
shl
sbb
daa
mov
arpl
or
pop
fcom
sbb
fcmovnu
cmp
inc
cli
push
fist
mov
add
mov
adc
add
fld
outs
push
sbb
sbb
fistp
stos
leave
cmp
je
mov
(bad)
jmp
shr
push
mov
mov
add
xor
add
sbb
ins
int
outs
push
call
add
mov
pop
jbe
pop
pop
mov
sub
push
xor
add
mov
dec
data16
rol
adc
or
cs
sbb
or
mov
test
jne
pop
test
add
mov
fimul
popf
or
sbb
sbb
inc
dec
jne
push
jo
and
push
sub
cdq
push
nop
mov
cmps
les
or
sti
mov
stos
jge
or
xor
aas
xor
sub
rcr
xlat
lock
retf
retf
inc
jle
xor
pushf
iret
dec
mov
jmp
(bad)
(bad)
scas
shl
dec
dec
test
pop
pop
pop
clc
xchg
add
push
fs
push
jg
stos
aas
je
adc
(bad)
cmp
jbe
jo
mov
cmp
(bad)
dec
add
mov
mov
inc
mov
mov
mov
test
jmp
or
push
or
faddp
xor
inc
inc
cld
sbb
adc
shr
scas
shl
dec
sbb
dec
add
retf
aas
add
push
fbstp
test
jns
add
pop
or
mov
jae
cmp
mov
adc
(bad)
js
mov
pop
scas
mov
cmp
fimul
in
ja
jp
ret
xchg
mov
nop
(bad)
adc
pop
sbb
sbb
inc
out
shl
and
outs
cmc
popa
(bad)
cmp
sub
pop
jb
mov
mov
adc
push
sub
sahf
out
in
adc
scas
aas
jmp
jg
or
dec
or
add
push
dec
add
loopne
or
jmp
sub
out
sub
pop
sahf
and
xor
or
in
pop
ret
jg
ins
(bad)
inc
cmp
jne
test
je
mov
push
jmp
jle
jne
outs
add
cmp
ror
rol
rol
jns
lahf
mov
mov
mov
mov
pop
cs
loopne
or
cmp
push
sbb
jb
je
mov
(bad)
mov
out
mov
add
xchg
retf
movs
or
and
sub
jmp
fnstsw
inc
cld
add
in
push
out
out
lods
add
xlat
hlt
enter
mov
retf
push
fxch
cmovo
fcomp
fmul
loopne
das
xchg
xchg
lock
cmp
add
mov
test
cmp
adc
imul
jnp
sbb
cmp
lea
mov
sbb
(bad)
push
in
push
sar
dec
lock
push
in
lock
clc
or
in
mov
hlt
push
sbb
(bad)
xchg
push
or
xor
sahf
pop
pushf
jmp
sub
xchg
push
pop
add
addps
fsub
jo
sahf
and
jb
dec
mov
jmp
mov
mov
call
sbb
adc
cld
add
rcr
mov
repnz
push
dec
fcomp
fcomp
fsubr
dec
mov
loopne
add
dec
lds
sub
pop
push
xchg
mov
jno
icebp
and
(bad)
stc
sub
cmp
mov
lsl
in
test
jo
aas
xor
sub
dec
(bad)
dec
inc
inc
mov
repnz
lea
repnz
ins
and
xor
sti
jne
xor
sub
mov
xchg
into
fnsave
cs
mov
push
arpl
fistp
sbb
add
shr
imul
or
push
mov
js
nop
and
lock
in
movs
hlt
jo
je
jmp
jl
pop
pusha
or
xchg
xor
call
push
mov
push
sar
mov
test
push
lea
mov
das
mov
scas
ffreep
cmp
sbb
add
into
fcomp
cmps
push
test
sub
xchg
xchg
dec
cmp
and
mov
ss
fsub
(bad)
add
je
test
mov
mov
(bad)
mov
lea
jmp
pop
sbb
or
enter
dec
adc
loopne
pinsrw
mov
mov
mov
mov
jmp
mov
mov
mov
add
xor
popf
mov
sub
jge
rol
xchg
inc
mov
dec
sahf
std
sahf
or
test
xchg
test
add
cmps
pop
cmp
inc
enter
push
mov
sub
pop
ret
lds
into
or
ret
xor
push
loopne
cmp
push
mov
inc
mov
mov
aam
popa
inc
adc
pop
cld
pop
repnz
rol
add
sbb
mov
add
or
jle
or
pop
jne
mov
add
cmp
jb
popa
jne
jb
sbb
and
or
jne
add
cmp
cwde
add
push
push
mov
cmp
cwde
es
sub
ror
xchg
or
scas
or
sbb
dec
or
or
mov
mov
add
inc
cli
jnp
or
xchg
push
test
sub
dec
jnp
jnp
cwde
pushf
pop
jnp
in
pop
test
in
je
cmp
fimul
jae
cmps
jo
push
pop
int
shr
pop
dec
mov
mov
aam
std
mov
pop
rcl
mov
sub
add
aas
je
push
mov
stos
adc
mov
sbb
das
sub
lea
out
sub
sub
lock
mov
rcl
inc
pop
pop
lods
add
lock
adc
lock
cmp
mov
sub
sbb
cld
inc
test
je
je
test
jle
mov
mov
lock
jle
repz
inc
cmp
mov
sbb
shl
aaa
or
pop
je
rol
clc
jl
jmp
repnz
add
lock
pop
fld
pop
ds
and
sar
inc
xchg
jbe
cmp
or
(bad)
inc
pop
shl
xor
pop
(bad)
je
dec
pop
dec
xor
add
dec
dec
fwait
and
xchg
(bad)
pop
mov
add
cdq
sbb
sbb
jmp
retf
cwde
mov
shr
and
pop
fld
inc
push
call
ret
popf
pop
pop
pop
fnstenv
dec
pushf
push
mov
mov
inc
test
je
test
sbb
repnz
push
loopne
in
je
inc
push
jae
ror
lock
xchg
mov
pusha
add
into
bound
vmread
(bad)
jnp
les
mov
and
jp
clc
jp
and
imul
cdq
sbb
jnp
les
add
push
shr
dec
call
pop
js
mov
adc
dec
lahf
cmovbe
inc
inc
test
pop
pop
or
sub
mov
test
xchg
sbb
sbb
es
in
mov
fimul
pop
das
mov
inc
xlat
in
fdiv
mov
push
pushf
ds
jg
sub
cld
and
and
in
pop
cmp
ja
or
mov
add
lea
imul
jb
lods
(bad)
push
iret
fild
fstp
test
je
mov
jg
lock
xchg
aas
inc
cmp
ror
add
ret
rcl
fst
or
out
(bad)
push
lea
add
jae
inc
adc
adc
(bad)
push
xor
das
mov
call
mov
sub
dec
pop
pop
loope
and
jp
add
push
pop
dec
mov
in
(bad)
loopne
(bad)
call
mov
push
or
add
jnp
sbb
mov
add
mov
call
add
and
int
rol
leave
test
je
inc
sub
jg
and
mov
into
aaa
xor
loopne
ret
loopne
sub
jmp
rcl
sub
setl
js
push
lea
pusha
add
inc
dec
push
mov
lock
mov
cli
loopne
in
dec
loopne
lods
ret
push
mov
cmp
jne
dec
jg
xchg
push
jmp
inc
add
or
stos
pop
js
(bad)
sbb
xor
xchg
ds
or
mov
rcr
xchg
add
gs
sti
mov
mov
mov
jmp
inc
fisttp
aaa
test
push
xchg
mov
push
and
cld
cmp
ja
mov
inc
jnp
adc
cwde
aas
cwde
or
mov
adc
fiadd
mov
ja
call
gs
jb
push
pusha
shld
pop
xor
je
popa
jae
or
or
sar
xchg
daa
lea
jnp
ins
fsubr
or
dec
jno
(bad)
cmp
ret
and
ss
xchg
adc
call
and
enter
jnp
add
push
mov
mov
mov
rcl
pop
test
loopne
rcl
mov
clc
je
mov
ret
cmp
jl
push
mov
adc
cmp
out
push
add
das
pop
pop
fmul
popf
sbb
mov
jne
pop
inc
or
push
xor
mov
sar
push
push
test
arpl
nop
pop
xor
cs
sub
shl
loopne
dec
add
iret
mov
push
add
outs
xchg
rol
add
dec
xor
ficomp
(bad)
shl
test
mov
jae
mov
inc
xor
shl
pop
mov
cmps
xor
cs
xchg
mov
xchg
arpl
mov
mov
ins
or
dec
movs
xor
xchg
jmp
pop
mov
loope
push
jo
push
ror
jne
outs
inc
mov
adc
test
mov
fwait
test
shl
movs
js
adc
cmp
inc
lock
lea
mov
sub
cmps
xchg
or
int3
jmp
mov
mov
jp
mov
jbe
pop
xchg
pusha
xchg
pop
dec
and
lea
jo
scas
sahf
add
xchg
lahf
jns
cmp
rol
mov
jmp
test
imul
mov
inc
cmp
in
in
out
and
lea
or
push
add
(bad)
jnp
lea
stos
mov
mov
adc
adc
lods
rcl
adc
sbb
out
jbe
and
mov
push
and
jg
sub
jnp
or
pop
pop
sti
or
xlat
xor
mov
xchg
jle
adc
mov
mov
xor
jg
or
sub
add
(bad)
mov
or
data16
adc
adc
adc
cld
std
mov
in
inc
and
mov
cmp
ret
cmp
lock
mov
int3
mov
call
mov
sub
in
and
add
xor
(bad)
sti
ret
push
dec
and
stc
mov
fadd
mov
mov
add
or
mov
ficom
xor
xor
mov
sbb
and
fnsave
pusha
cld
mov
push
or
loope
add
adc
sbb
mov
push
jl
enter
ror
sub
sub
inc
sbb
mov
in
jl
pop
test
mov
cmp
xor
ret
aas
sbb
shl
(bad)
push
ret
push
pop
xchg
mov
sub
push
jo
jle
(bad)
(bad)
(bad)
jmp
inc
push
sub
jmp
sbb
adc
in
call
ds
jl
ss
das
sub
mov
rcr
sbb
mov
mov
dec
xchg
dec
sbb
adc
sub
cwde
push
hlt
dec
xchg
nop
mov
adc
inc
jne
push
push
sub
(bad)
xchg
fwait
xchg
xor
mov
mov
xchg
pop
(bad)
jo
adc
or
dec
pushf
mov
shl
call
into
inc
pushf
mov
int
leave
add
call
dec
ror
leave
inc
mov
mov
cmc
mov
xchg
data16
movs
fild
ror
adc
rep
scas
inc
fmul
nop
jle
clc
xor
add
jae
js
out
pop
imul
pop
mov
rol
loopne
ror
clc
dec
jne
and
jmp
aas
ret
sbb
lock
add
clc
stos
mov
mov
add
fmul
adc
call
loopne
cdq
lea
push
add
shl
push
xchg
cmp
scas
loopne
aad
test
add
jne
dec
les
ds
inc
adc
xor
mov
push
aad
outs
ror
clc
mov
mov
jnp
mov
add
mov
fisub
mov
or
dec
fld
jbe
js
pushf
into
and
(bad)
fwait
xor
mov
int3
call
xor
jbe
call
inc
fadd
push
push
test
je
test
fucomip
mov
inc
or
mov
push
add
(bad)
retf
ins
sbb
fsub
lds
xchg
cld
ins
lock
test
arpl
mov
popa
in
or
xchg
mov
jmp
or
and
lea
mov
or
add
test
add
jmp
jo
push
or
xor
test
jne
loope
pusha
pop
mov
and
xchg
(bad)
push
rcr
dec
test
(bad)
call
xchg
call
cmp
adc
les
ret
cmp
(bad)
dec
sbb
pop
or
das
mov
sub
es
in
push
sub
xlat
call
int3
mov
xchg
out
push
scas
push
fwait
or
std
lahf
cmp
sub
psadbw
adc
mov
adc
sbb
jb
mov
dec
aaa
ins
psubsw
pusha
shl
xor
adc
clc
push
cmp
jl
cmp
mov
jp
pop
cmp
je
or
mov
jmp
or
jne
adc
push
pushw
add
mov
jp
mov
js
fisttp
jmp
or
pop
pop
outs
cmp
lea
or
add
and
adc
or
sub
cmp
mov
inc
adc
movs
push
adc
mov
jmp
push
je
sbb
je
sar
cmp
inc
pop
push
push
jecxz
add
push
das
and
clc
or
pop
cmp
fnstsw
call
adc
in
pop
adc
retf
mov
(bad)
cmp
jae
or
mov
push
fnstenv
cmc
shl
or
push
jae
pop
or
adc
xchg
cmp
test
sbb
sub
cmp
pop
push
push
enter
cmp
movs
call
jbe
push
lea
cmp
or
sub
push
push
or
lock
sti
mov
pop
pop
ret
jae
push
iret
jae
(bad)
je
xor
jg
rol
je
push
push
stc
and
mov
or
add
add
add
xor
pop
lods
cmp
inc
dec
cmp
je
push
cmp
ds
xchg
mov
sbb
pushf
sti
pop
or
retf
dec
ds
ins
dec
mov
icebp
enter
lock
loope
repnz
(bad)
jb
sbb
jo
std
add
cmp
jbe
daa
adc
fsubr
xlat
mov
je
(bad)
daa
aaa
or
(bad)
push
mov
call
push
or
pop
test
jle
mov
lea
(bad)
(bad)
jbe
push
ja
aas
or
iret
jae
push
addr16
xor
pop
add
sbb
movs
test
inc
inc
repnz
mov
(bad)
fstp
sbb
push
cdq
cmp
ds
push
shr
dec
sub
out
cmps
push
pop
push
sbb
aas
call
adc
stc
cmp
jae
cmp
rcl
retf
adc
inc
cli
cmp
jae
and
mov
bound
sub
jae
enter
mov
jg
or
mov
and
sub
xor
jbe
fimul
adc
jae
push
push
nop
xor
clc
xchg
mov
mov
(bad)
jecxz
mov
jle
jg
dec
sbb
add
lea
mov
pop
mov
inc
popa
xor
(bad)
or
rcl
sar
cmp
ja
push
je
fimul
inc
push
inc
or
cwde
stos
push
nop
aas
aad
dec
lock
mov
or
ss
leave
adc
sbb
test
cdq
loopne
xchg
(bad)
loopne
test
add
cmp
add
sti
mov
ja
mov
mov
les
add
inc
inc
add
lock
outs
add
loop
je
sub
pop
aam
sbb
dec
and
ficom
mov
mov
xor
or
and
loopne
stc
or
loopne
and
int3
lahf
xor
(bad)
fild
mov
mov
fisttp
pop
inc
push
dec
dec
or
pushf
mov
out
push
inc
jo
cmp
pop
dec
fsubp
inc
(bad)
jmp
fs
adc
ret
push
cdq
jge
mov
cmp
inc
fmul
or
xchg
sbb
and
sub
or
mov
cmp
in
or
or
inc
or
(bad)
es
pop
sbb
cmc
retf
pusha
cld
push
push
add
nop
mov
lds
adc
fcomip
push
or
inc
pop
mov
jg
or
sub
xor
jae
call
cwde
add
sub
jne
and
jbe
aaa
outs
xchg
rcl
inc
cli
jns
and
add
iret
int
cmp
add
add
add
push
adc
sar
pop
or
xchg
push
mov
js
in
adc
fs
adc
es
jo
or
adc
fisttp
or
xchg
cwde
adc
and
pop
xor
jb
arpl
imul
sbb
scas
loop
mov
mov
sub
cmp
cmp
iret
in
imul
(bad)
mov
cmp
fst
add
repnz
iret
(bad)
std
push
pop
dec
ret
fisub
sbb
lea
xchg
mov
add
or
ret
push
js
pop
add
cmovo
inc
adc
out
lock
sti
cmp
jne
fiadd
sti
cmps
aaa
lods
je
ins
adc
ror
xor
int
or
pop
test
push
and
out
or
test
or
add
push
push
add
or
mov
sub
or
scas
aas
dec
test
call
push
fild
or
push
data16
retf
cmp
jno
pop
ficomp
loopne
or
or
mov
hlt
hlt
movs
inc
push
jns
jg
pusha
sbb
add
sti
mov
rol
adc
daa
mov
mov
test
jg
out
retf
shr
shr
cmp
push
mov
sbb
cmp
jbe
mov
or
add
retf
add
adc
jmp
or
pop
call
cmp
stc
push
fcom
add
shl
lods
inc
in
sub
sbb
mov
vfmaddps
push
in
mov
sbb
(bad)
push
push
jp
xor
xor
mov
push
cdq
(bad)
sbb
add
pop
mov
mov
(bad)
xchg
clc
jo
add
rcr
add
cmp
dec
pop
mov
pop
in
call
cdq
ret
jae
fdiv
push
push
xchg
or
retf
sbb
fcom
in
stos
pop
retf
sbb
jae
mov
fbld
sbb
inc
loop
push
push
outs
cmc
enter
mov
mov
pushf
mov
add
aaa
cmp
mov
cwde
ss
in
mov
adc
pop
js
fs
inc
xor
jae
lock
pop
dec
or
sub
cs
pop
add
jnp
sub
push
test
add
pop
mov
push
and
inc
stos
pop
lahf
stos
sub
fwait
stos
gs
or
pop
xchg
add
mov
addr16
mov
push
push
sbb
or
adc
imul
test
jl
sub
mov
pop
or
dec
pop
fcom
jae
lea
mov
jbe
add
inc
sbb
cmp
idiv
xchg
xor
sbb
dec
or
push
add
loopne
add
hlt
cmp
rol
mov
pop
sub
cmp
call
xor
sbb
cs
xchg
cmp
mov
icebp
and
or
lods
fisubr
xchg
inc
adc
push
mov
adc
sbb
push
ds
fstp
inc
test
cld
or
add
push
daa
push
outs
repz
jp
and
adc
add
and
jne
cmp
cmp
je
sbb
mov
push
mov
int3
ds
sbb
icebp
adc
inc
in
mov
adc
mov
mov
ja
push
shl
mov
mov
movs
cmp
xlat
sub
lea
xadd
inc
lds
aaa
call
add
rol
push
sar
in
inc
js
add
dec
or
mov
xor
jae
inc
pop
mov
mov
mov
xor
inc
and
and
and
xor
or
ss
or
add
push
mov
movzx
ins
sbb
(bad)
pushf
out
mov
ret
sub
mov
pop
mov
mov
(bad)
aas
or
pop
add
dec
in
test
ss
adc
jne
jg
mov
xor
mov
in
aaa
pusha
push
movs
cld
mov
sub
xchg
aas
and
sbb
neg
repnz
and
add
jne
sbb
push
ins
push
rcl
or
sbb
or
ins
sbb
enter
sbb
inc
add
and
inc
ret
pusha
(bad)
icebp
fucomip
out
aaa
pop
push
and
mov
outs
jo
shl
fimul
ror
mov
loopne
push
mov
rol
rcl
sub
push
mov
ja
stc
push
test
retf
cmp
or
inc
and
nop
loop
enter
data16
aas
sub
xor
push
imul
mov
xchg
dec
repnz
pop
frstor
out
rcl
lea
lea
pop
jae
lahf
xchg
jne
push
idiv
out
push
inc
push
or
es
mov
cmp
(bad)
sub
imul
mov
inc
and
mov
push
xchg
loop
jnp
push
sbb
dec
xor
pop
push
xchg
cmp
push
jecxz
aam
sbb
mov
retf
xchg
xchg
iret
popa
inc
ret
and
(bad)
in
shl
xor
push
push
inc
je
addr16
ficomp
repnz
pusha
aaa
in
add
enter
sbb
add
push
scas
jg
je
dec
jae
mov
and
fiadd
je
sbb
jo
inc
sub
xchg
dec
mov
(bad)
sar
jmp
call
add
cmp
mov
out
dec
add
sahf
dec
(bad)
mov
rol
retf
js
(bad)
sar
test
leave
cmps
add
enter
not
xchg
push
out
mov
dec
out
adc
add
retf
sbb
push
call
jmp
sar
mov
mov
call
popf
jbe
push
mov
cmp
(bad)
fisubr
add
dec
or
fdiv
mov
inc
jbe
cmp
adc
or
nop
sbb
mov
clc
push
fcom
sub
fimul
mov
ja
lea
mov
test
xor
and
sbb
shl
movs
sub
sbb
lock
int3
test
and
je
xor
cmps
inc
sub
sub
mov
loopne
loopne
call
arpl
lea
and
xchg
or
inc
and
imul
scas
xchg
sbb
inc
sbb
dec
xlat
or
sub
in
loope
adc
shl
or
sahf
mov
or
cwde
sub
add
daa
and
pop
cmp
mov
dec
sbb
jmp
mov
repnz
mov
and
push
stos
imul
sbb
pop
cld
repz
pop
shl
retf
shr
push
cmp
sub
add
or
je
ret
jmp
xlat
test
pop
adc
retf
jmp
(bad)
hlt
cmp
jb
jne
test
push
les
fidiv
outs
sbb
imul
mov
shl
push
add
jl
in
retf
mov
adc
jae
cmps
movs
sar
jl
jg
cmp
jae
sbb
adc
cli
mov
adc
je
out
and
push
and
cmp
push
sbb
add
xor
adc
aas
pop
push
xchg
inc
dec
test
iret
out
mov
jle
rep
sahf
out
mov
inc
inc
iret
repz
push
pop
addr16
test
mov
cmp
dec
cli
inc
and
int
fnstcw
inc
dec
mov
out
sahf
add
fldcw
repz
push
mov
cmp
fwait
out
in
inc
das
retf
cmp
addr16
dec
popa
inc
add
inc
cwde
test
ficom
xchg
push
cmps
jbe
mov
or
inc
add
fisubr
imul
add
jmp
adc
sbb
leave
cmp
jbe
xor
inc
sub
inc
rol
mov
es
and
add
clc
xor
adc
push
push
or
mov
icebp
loop
std
pop
dec
shl
leave
cmp
xor
mov
sub
mov
inc
cmp
jb
jmp
je
mov
adc
or
sahf
pop
sub
cmp
daa
aaa
jmp
lea
mov
mov
pop
push
or
mov
push
adc
lock
xchg
or
or
mov
jmp
cmp
enter
xor
mov
jmp
add
pop
mov
mov
mov
mov
add
repnz
aaa
addr16
mov
add
inc
shr
hlt
and
fiadd
call
push
or
push
lods
cmp
and
and
fisubr
sub
push
sub
inc
loopne
aam
pop
cld
sub
push
cmp
jbe
ret
lods
add
dec
(bad)
lock
test
test
inc
f2xm1
sub
(bad)
push
mov
jne
mov
outs
jae
sub
test
inc
add
jp
dec
sub
call
adc
or
into
jmp
repnz
ror
xchg
ret
and
push
lea
xor
in
jge
mov
movs
adc
adc
mov
fwait
sub
inc
cmp
add
push
cli
push
xor
cmp
add
mov
int3
clc
mov
push
add
mov
sub
jecxz
adc
xor
shl
pop
push
repz
unpckhps
les
lahf
ret
ret
cmp
shr
adc
shl
or
add
(bad)
clc
mov
mov
ret
mov
push
push
xchg
and
cmp
push
push
add
pop
push
cmp
sub
inc
or
xchg
ds
in
xchg
jnp
push
or
pop
mov
inc
or
pop
mov
in
mov
xchg
inc
xchg
mov
test
jmp
(bad)
neg
dec
rol
adc
mov
lock
adc
mov
xor
and
adc
je
push
icebp
xchg
mov
fsub
jo
jne
shr
les
push
or
dec
mov
xor
adc
fst
je
mov
cwde
add
or
add
or
push
jl
lock
cmp
adc
jl
adc
enter
call
ins
dec
shl
inc
cmps
xor
rcl
push
mov
stos
push
adc
dec
sub
mov
push
mov
cmp
lea
adc
and
mov
out
and
add
cmp
fneni(8087
xchg
jle
nop
mov
retf
aam
int3
pop
add
xchg
pop
fbld
push
xor
je
cmp
(bad)
cmp
test
add
lds
adc
inc
xor
das
pop
or
shl
ror
ss
dec
add
bound
dec
mov
sub
imul
sub
dec
cmp
cmp
add
xchg
and
and
sbb
mov
pop
push
inc
es
jmp
mov
dec
lods
xor
pop
push
mov
ret
aaa
vorps
inc
xor
shl
lock
mov
push
mov
xchg
ss
xchg
iret
lea
call
aaa
inc
inc
mov
ret
ss
fucom
ss
add
jecxz
mov
mov
retf
jl
stc
xor
mov
rol
add
jmp
stos
pop
mov
fmul
inc
push
scas
xchg
cld
push
es
cld
in
xchg
mov
and
repz
cmps
adc
jecxz
jno
cld
pop
mov
pop
xchg
jne
nop
out
mov
mov
aaa
aaa
add
retf
dec
div
pop
xchg
mov
or
and
lea
adc
jecxz
ins
inc
or
pop
inc
inc
pop
fcomp
ss
rcl
test
(bad)
lahf
add
xlat
rol
pop
adc
out
dec
or
sbb
aam
fsubr
dec
or
test
dec
out
and
sub
fist
fcomip
xchg
cmp
ret
test
dec
shl
mov
retf
jb
and
cmp
ja
mov
(bad)
dec
mov
xchg
out
push
rcr
stos
aaa
pop
xor
push
add
xchg
ret
push
push
dec
sbb
adc
mov
aaa
xor
xor
leave
xchg
cmp
xor
sbb
inc
lahf
xor
or
sub
pusha
push
fidivr
mov
cld
push
push
bound
add
jb
add
mov
pop
push
jmp
inc
xor
mov
xchg
add
(bad)
pop
fistp
mov
retf
cmp
mov
cmp
dec
sbb
adc
add
pop
cld
add
loop
enter
sar
mov
inc
inc
inc
cmp
fdiv
pop
std
je
cmp
jne
stos
test
jns
lea
ds
mov
dec
jmp
cmp
(bad)
mov
sub
in
inc
test
add
add
sti
jl
ret
add
or
imul
jp
jno
dec
sub
jmp
adc
out
mov
lea
mov
mov
js
mov
cmp
add
mov
push
sub
adc
and
jg
test
je
push
dec
(bad)
std
push
clc
push
in
mov
add
xchg
sbb
inc
fcom
int
adc
jge
mov
out
ds
mov
inc
lock
call
adc
xchg
sahf
lock
push
mov
loopne
movs
add
fdiv
call
dec
add
jge
adc
outs
inc
jle
sub
inc
mov
fld
mov
inc
shr
jl
inc
fadd
cmp
push
pop
inc
ins
jl
fist
sub
fwait
imul
shl
mov
sbb
mov
mov
mov
fcmovb
inc
aam
aaa
(bad)
cmp
fstp
dec
aam
lea
mov
sub
in
mov
shl
iret
cmp
shr
inc
push
les
sbb
jl
inc
fdivr
add
add
cdq
mov
push
rcr
repnz
clc
xor
sub
fsubr
dec
std
sub
cdq
xor
pop
idiv
shl
push
out
lock
cmp
jg
sbb
dec
push
cmp
push
fcomp
mov
inc
mov
and
mov
inc
push
add
rcl
add
inc
aam
int3
cmp
aam
add
jne
cdq
sub
(bad)
cmp
js
dec
sub
aas
mov
nop
or
cmp
xor
jno
cmp
add
mov
lods
cld
aaa
push
mov
jge
mov
mov
push
shl
lock
popa
pop
pop
test
out
xor
jg
call
add
call
mov
mov
hlt
push
rol
fadd
fisub
xor
mov
movs
mov
mov
sti
sub
mov
adc
xadd
push
aam
imul
lock
pop
mov
mov
add
mov
sbb
adc
inc
fisubr
loope
inc
loopne
ins
sbb
mov
xor
xor
in
mov
daa
iret
lock
hlt
xor
mul
pop
jne
mov
pop
pusha
lds
test
cmp
jae
inc
mov
mov
std
cmc
jb
lea
add
push
int3
(bad)
cld
mov
jl
jmp
adc
jge
inc
sub
in
outs
call
sub
aam
adc
push
shl
push
fcomp
sub
les
enter
sub
mov
ror
or
push
shr
test
dec
enter
sub
sti
cmp
idiv
sbb
lods
mov
inc
cmp
jne
pcmpeqb
add
inc
outs
xor
jecxz
sub
mov
jno
mov
fwait
pop
pop
test
addr16
pop
mov
and
cmp
rep
push
mov
mov
sar
loop
test
cmpxchg
mov
je
cmp
test
clc
fmul
clc
sbb
mov
pop
jne
(bad)
jns
in
dec
or
shr
pop
and
inc
pop
cld
(bad)
popf
adc
pop
sar
mov
xchg
outs
cmp
not
and
xor
(bad)
ror
mov
aad
es
in
sub
add
enter
out
pop
xchg
and
rcl
or
mov
xor
add
and
sub
add
pushf
mov
mov
sub
retf
sub
xor
sbb
jl
shl
dec
push
lea
push
push
add
dec
ret
cld
jae
mov
sub
call
mov
jo
inc
xchg
jne
shr
pop
cld
fnstcw
xor
rol
ror
jle
fst
mov
adc
lea
cmp
fidiv
dec
cmp
cs
je
push
push
dec
sti
les
or
rep
sub
jmp
and
and
xchg
xchg
adc
add
rol
cld
push
repnz
mov
lods
push
pop
ret
adc
(bad)
sbb
inc
aas
sub
jbe
sar
xor
or
push
pop
lods
jg
add
or
adc
cmp
jmp
jae
cdq
pushf
ror
mov
ret
je
push
push
pop
bnd
enter
mov
sub
fisub
xor
push
repnz
les
fisubr
xlat
xchg
shl
mov
rcl
fwait
sbb
inc
out
dec
or
add
xchg
xchg
xchg
xor
cmps
xchg
push
add
push
les
xchg
push
adc
div
lea
xchg
xchg
cmp
cmp
cld
push
push
lock
or
les
jae
push
loopne
nop
rcr
fcomp
inc
das
leave
xor
xchg
aaa
push
pop
rol
or
loope
pop
cmp
cmp
dec
jne
out
mov
sbb
sbb
dec
ficom
pop
xor
out
outs
test
sbb
jle
mov
mov
dec
adc
jae
test
inc
je
mov
xlat
inc
and
add
retf
inc
lock
pop
dec
das
dec
or
ins
sbb
cwde
mov
(bad)
mov
sbb
(bad)
out
sub
neg
sbb
and
add
jmp
add
ror
int3
cs
daa
jl
or
popf
call
add
fwait
and
add
pop
jg
push
pop
pop
sbb
dec
adc
push
push
aad
loopne
mov
mov
mov
inc
cmps
xor
cmc
in
pop
arpl
shl
cmp
and
dec
add
(bad)
es
mul
icebp
data16
xor
stos
push
lods
loope
add
jg
jo
cmp
mov
mov
add
mov
mov
adc
xchg
inc
sbb
add
xchg
mov
lea
push
cmp
adc
mov
and
add
ret
xor
or
pop
dec
enter
xor
jbe
push
sbb
leave
inc
ret
sub
lea
(bad)
shl
add
xor
push
sbb
leave
out
and
outs
lock
or
int3
gs
movs
inc
adc
mov
and
or
test
cs
retf
in
aam
int3
shl
mov
retf
in
call
loop
mov
loopne
in
fsubr
clc
and
ret
pop
xor
push
xor
loopne
mov
shr
arpl
dec
push
or
pop
inc
fsubr
jl
out
dec
(bad)
scas
jg
fdivr
retf
adc
movs
push
sub
leave
enter
inc
nop
cdq
mov
es
mov
popa
push
pop
mov
fcomp
cdq
add
ins
push
sbb
jl
jl
or
jne
cmp
xchg
cmp
cmp
mov
add
xchg
and
call
jne
jge
add
clc
adc
push
clc
clc
psubd
fs
lea
adc
add
xor
repnz
xor
xor
int3
movs
dec
pop
ds
not
sub
xor
or
mov
(bad)
lods
enter
adc
(bad)
adc
out
push
lahf
fldlg2
push
ret
pcmpeqb
and
add
pop
push
retf
popa
or
adc
sbb
mov
mov
push
push
push
aad
add
imul
xchg
(bad)
dec
arpl
add
ss
adc
jne
pop
cmp
in
sub
mov
sbb
clc
jbe
in
fwait
ss
cmp
sbb
shl
ret
retf
mov
cmp
jb
or
adc
push
adc
das
cmp
fcmovbe
fild
fsin
retf
adc
mov
mov
and
or
call
outs
shr
in
adc
sub
pop
cmp
lea
shl
clc
int
adc
mov
bound
clc
aam
add
push
xor
xchg
mov
fmul
xor
add
push
fsubr
sbb
sub
rcr
adc
pop
and
mov
push
add
add
jle
loopne
jmp
push
push
jne
sub
in
push
add
ins
fwait
jbe
call
lock
or
rol
lods
xor
xor
sub
mov
shr
lods
lea
rep
adc
scas
xor
js
or
(bad)
push
add
mov
ss
loop
fmul
mov
pop
fld
mov
jl
dec
jmp
fimul
push
fild
adc
push
retf
popf
std
jne
inc
call
mov
dec
fisttp
jmp
data16
sbb
push
sahf
adc
sbb
xchg
ins
sti
xchg
fimul
sbb
mov
jns
push
xor
inc
fisttp
fisub
(bad)
loopne
call
out
out
call
out
mov
cmps
jmp
jg
push
mov
adc
jno
pop
push
xlat
ret
mov
and
(bad)
adc
sub
and
jg
lods
inc
dec
test
dec
movs
mov
xchg
cwde
adc
std
ficom
xchg
xor
add
add
nop
imul
and
pop
add
fwait
add
or
or
xchg
dec
or
inc
pop
not
xor
push
push
cwde
push
xchg
clc
retf
jb
jmp
mov
jg
xchg
mov
and
adc
hlt
xchg
jbe
xor
in
jns
mov
mov
(bad)
inc
push
push
cmovb
mov
lods
sahf
mov
and
xor
(bad)
mov
push
mov
xor
(bad)
and
inc
dec
xchg
xor
pop
xor
ins
xchg
imul
xor
ret
sahf
sub
fdiv
xlat
add
push
iret
push
xchg
cmp
je
mov
ja
ds
ins
jb
cwde
inc
push
push
inc
push
jbe
add
inc
shr
lea
js
xor
pop
ret
or
jle
adc
cli
das
ret
mov
mov
xor
sub
mov
into
mov
adc
lea
mov
clc
shr
xor
sti
mov
inc
cli
mov
in
inc
mov
bswap
pop
push
pop
(bad)
cmp
fidivr
jge
adc
cmps
fst
push
stc
dec
or
push
mov
mov
sbb
out
pop
in
jno
ins
add
adc
mov
mov
xor
ds
xor
rcl
call
jne
shl
xchg
and
xor
add
jmp
fld
jge
rol
in
jmp
out
in
xchg
inc
cs
mov
dec
add
fxam
ins
sbb
std
fimul
mov
push
xor
adc
adc
into
fdiv
push
fdivr
in
dec
dec
loopne
dec
stc
mov
in
fcmove
mov
push
inc
sub
iret
jno
daa
pop
jmp
stos
push
xchg
imul
call
mov
fwait
pusha
imul
push
jmp
xchg
jl
xor
pop
jb
sub
xor
xor
stos
push
or
fistp
fldenv
dec
xor
test
cs
jno
or
inc
adc
fcomp
dec
stos
out
adc
sub
call
push
bound
lods
adc
push
or
pop
push
(bad)
enter
gs
xchg
push
sub
push
sub
sub
dec
add
retf
jo
mov
mov
jmp
call
mov
add
pop
sbb
dec
sbb
mov
add
jbe
push
add
popa
cmp
lahf
movs
or
xor
xchg
test
sub
cmps
int
cmp
push
or
inc
les
mov
xchg
lods
push
or
push
mov
sbb
fwait
clc
aaa
pop
mov
push
add
inc
or
dec
or
mov
pop
imul
xor
dec
jg
mov
outs
icebp
mov
std
mov
dec
jg
call
xor
push
adc
ret
cmps
mov
jbe
imul
add
ffreep
inc
inc
stc
push
jb
xor
fucomip
call
or
or
aam
sub
ror
test
retf
pop
ror
loopne
mov
add
mov
pop
inc
mov
or
dec
dec
dec
dec
dec
pushf
pop
inc
pop
push
dec
dec
push
dec
push
sahf
(bad)
sub
adc
scas
adc
xchg
dec
or
jns
push
dec
ins
dec
leave
or
mov
dec
dec
add
dec
dec
stos
cwde
cmc
push
add
jecxz
cmp
adc
or
xor
je
cmp
in
add
cmp
mov
neg
xor
lds
daa
rcl
jns
es
xchg
or
cmp
out
or
mov
cs
xor
dec
ins
xor
stos
adc
enter
dec
dec
dec
leave
enter
dec
dec
dec
enter
jmp
dec
dec
dec
dec
or
mov
enter
dec
xchg
xchg
xchg
dec
pop
mov
test
mov
push
and
rol
in
shl
adc
add
aaa
cmp
std
dec
popf
push
lahf
gs
and
mov
jne
adc
ficomp
test
outs
rcr
pop
test
push
mov
popf
fstp
das
pusha
mov
jp
test
pop
mov
je
jmp
fstp
jecxz
test
adc
ds
int
fs
jmp
xlat
sub
lea
add
xor
inc
mov
add
cmp
xor
push
jg
and
(bad)
mov
lea
cmp
inc
cli
retf
ins
xlat
sbb
push
lea
cmp
push
out
push
rcl
std
ss
lea
add
add
mov
lods
movs
data16
inc
add
inc
sbb
dec
(bad)
test
out
xor
jne
fist
xchg
mov
pop
sub
and
mov
adc
and
pop
mov
popa
xor
cs
enter
dec
movs
movs
jno
sbb
retf
je
cmp
(bad)
add
out
adc
inc
ret
mov
test
or
cld
mov
dec
or
fbld
pop
es
xor
ror
sbb
fcom
add
(bad)
mov
in
or
inc
mov
add
out
add
fsubrp
lea
or
retf
mov
mov
and
xor
sub
mov
fcmovnb
(bad)
js
add
js
pushf
mov
xchg
retf
mov
test
jns
out
pusha
xchg
jo
add
fisubr
or
(bad)
xor
xor
call
stos
lods
dec
sbb
or
retf
dec
sbb
test
loop
jnp
cmp
outs
mov
and
xor
xchg
adc
stos
or
into
call
loope
js
sbb
mov
and
inc
xchg
push
dec
jo
add
cld
movs
imul
or
sub
clc
movs
imul
les
hlt
shl
(bad)
xor
and
or
adc
add
push
or
jp
call
jmp
add
jo
movs
cdq
loopne
or
or
cmps
xchg
cmps
cmp
in
cld
dec
sbb
push
loopne
out
fsubp
jl
test
sub
mov
call
dec
ror
clc
jp
lock
test
std
or
cmps
ins
inc
add
repnz
rcr
lock
or
xor
mov
mov
push
adc
or
js
cwde
in
and
lea
test
xlat
out
jg
and
into
in
ror
add
stos
es
sub
cmp
(bad)
and
jno
cmp
(bad)
mov
push
call
movs
fld
mov
cwde
jle
jne
sub
std
cld
rol
sahf
or
xor
rol
mov
nop
jmp
add
frstor
(bad)
data16
jbe
and
rcr
sub
mov
or
jbe
xchg
out
(bad)
pop
push
cmps
pop
jge
ja
dec
or
mov
mov
adc
jl
or
push
adc
pop
cld
push
aas
fdiv
enter
jmp
fdiv
lock
pop
fist
fsub
hlt
aad
jns
fwait
rcr
repz
jnp
movs
cmp
je
or
xchg
mov
clc
pop
rcl
daa
in
enter
mov
jne
sbb
hlt
hlt
push
call
les
sbb
sub
or
or
repnz
leave
(bad)
shl
sbb
xchg
out
ins
jns
clc
dec
jb
xchg
jmp
or
lock
inc
xor
xchg
jmp
leave
dec
xor
fsub
jo
shl
xor
mov
in
dec
jo
sub
in
cmp
ret
sub
and
pop
repnz
stc
xor
push
int3
cld
push
xor
or
inc
xchg
push
out
jge
nop
enter
xor
imul
add
rol
dec
cmp
xchg
sub
or
je
bnd
fld
js
jl
cmp
fisub
xor
enter
push
popa
test
sub
add
lock
sub
fiadd
fimul
dec
xor
push
ins
push
xchg
and
or
mov
and
mov
push
cmp
pop
shr
popf
rol
repnz
adc
popa
popf
pop
push
cmp
stc
outs
mov
das
mov
mov
ret
rcl
shl
add
pop
push
or
cmp
mov
jo
popf
adc
mul
push
in
sub
adc
mov
icebp
popa
rcl
mov
inc
idiv
xor
out
mov
sti
push
mov
or
push
sbb
sub
or
clc
ins
imul
push
or
or
in
mov
es
or
sbb
cmp
cmp
or
push
in
mov
or
js
(bad)
cmp
xor
sbb
iret
cmp
inc
imul
or
nop
cmps
test
hlt
sub
inc
mov
int3
imul
lock
sub
stos
cld
and
or
adc
mov
inc
mov
fild
(bad)
push
fadd
fimul
fist
sbb
enter
popa
xor
sub
push
xchg
xchg
sbb
jne
mov
mov
test
push
and
xchg
cmp
xchg
push
or
mov
jbe
js
jmp
test
ins
cmovae
jno
repz
mov
mov
jge
lea
hlt
aad
cmp
mov
cmp
xor
xor
push
sub
sbb
push
or
(bad)
cmp
add
or
ret
je
out
in
adc
pushf
fdivr
imul
mov
add
lea
jae
mov
sbb
test
aas
test
retf
and
or
push
dec
dec
lock
xchg
loope
pop
push
xlat
adc
and
or
adc
loopne
scas
(bad)
fidiv
pop
push
mov
retf
loop
ret
stos
sbb
aam
loope
cwde
aaa
mov
mov
nop
xchg
sbb
packuswb
retf
fwait
shl
js
or
loop
dec
sbb
or
sbb
inc
lahf
sbb
repz
jp
adc
mov
push
add
jmp
or
aaa
dec
sbb
adc
jnp
cmc
repz
test
push
cld
pop
enter
movs
sbb
push
stos
in
outs
sbb
push
popf
pushf
lock
pop
leave
xor
pop
adc
and
fsub
push
jl
pusha
shl
jmp
jmp
sbb
xchg
dec
repnz
xor
mov
sbb
or
push
pop
lods
xchg
sub
retf
fsubr
stos
fisub
pop
pop
xor
retf
xor
sub
int3
hlt
int3
cmp
cmps
aad
loop
dec
shl
(bad)
shl
sti
shr
sbb
mov
sub
push
jge
xor
cld
adc
xchg
jl
hlt
hlt
add
retf
mov
xchg
sar
jle
adc
sub
cmp
mov
pop
pop
jno
dec
js
test
arpl
fsubrp
ror
ffreep
mov
xor
ins
jne
xor
gs
or
lock
sbb
cmovbe
fdivr
je
mov
xor
retf
repnz
stos
add
add
cli
pop
in
jno
test
popa
xchg
sbb
push
or
add
pop
rcl
dec
mov
xchg
push
jo
mov
adc
imul
out
cli
enter
xchg
jecxz
adc
ins
and
or
popf
jecxz
jmp
mov
dec
pushf
jbe
mov
adc
mov
mov
cmps
ins
pop
ss
mov
sub
push
jge
add
fisubr
jae
or
test
pushf
pop
sub
inc
cmp
xchg
cdq
sbb
jo
pop
into
and
lods
inc
mov
adc
adc
jp
cmps
pop
cdq
int3
push
dec
xchg
fstp
daa
sahf
push
call
xchg
dec
jns
xor
ret
lock
stos
jnp
fs
inc
xor
ror
cmps
pushf
jb
icebp
adc
js
jns
repnz
adc
clc
pop
cmps
loopne
cmp
hlt
mov
jbe
adc
ja
gs
sbb
mov
scas
push
dec
push
adc
sbb
add
sbb
or
add
xor
pop
dec
sub
dec
adc
mov
pop
pop
call
push
cmp
jne
cmp
in
retf
inc
lock
loopne
sbb
fcomp
ror
pop
inc
movs
jp
fadd
add
add
add
dec
push
dec
adc
retf
push
push
clc
hlt
and
test
add
dec
in
dec
sub
pop
push
adc
mov
or
inc
int3
add
dec
or
and
push
mov
cmp
jae
inc
data16
dec
sbb
aas
jbe
pushf
mov
retf
mov
sbb
aam
sti
in
lock
lea
push
int
lea
rol
xor
jg
sbb
scas
clc
fdivrp
and
ficom
jo
rol
in
push
stos
pop
or
bound
ds
cmp
jbe
sub
dec
or
lea
sar
pop
sub
dec
xor
pop
add
push
sub
gs
sub
aas
fmul
jmp
scas
jb
adc
push
outs
add
mov
inc
repz
jo
rcl
clc
and
cmp
not
je
push
push
add
cmp
enter
or
mov
xor
inc
ror
in
mov
or
dec
jne
mov
xor
addr16
call
mov
cmp
adc
mov
inc
hlt
nop
cmp
punpckhdq
sbb
loop
pop
push
aas
shl
ja
add
int
cmps
pop
pop
add
movs
mov
call
add
xchg
dec
movs
pop
or
adc
adc
adc
pop
sbb
syscall
mov
inc
add
mov
addr16
jmp
loopne
ret
add
and
add
ret
mov
aas
mov
xor
lea
mov
mov
or
cmp
imul
mov
and
add
es
into
mov
add
call
push
and
movs
push
aam
shl
dec
cmp
jb
clc
inc
or
push
das
add
test
inc
mov
pop
push
nop
rol
fisub
std
push
jae
mov
adc
push
fdivr
cmp
mov
and
cmp
daa
fs
inc
mov
ds
cmp
loope
shl
or
inc
pop
lock
aam
std
add
mov
and
fsub
or
pushf
xchg
js
shl
or
dec
lods
ror
fucomp
addr16
clc
cmp
ja
retf
mov
sbb
mov
imul
retf
mov
enter
push
xor
adc
js
cmp
dec
cwde
inc
cli
mov
aaa
lea
shl
or
cli
fs
std
ror
stos
je
mov
add
add
jmp
push
or
movhps
ret
syscall
sub
mov
adc
adc
mov
test
add
and
add
call
pop
seta
mov
loopne
sar
mov
ret
mov
inc
loop
fst
sbb
sbb
sbb
inc
mov
mov
ds
adc
mov
mov
or
cmps
sbb
sbb
push
nop
adc
mov
mov
(bad)
inc
and
inc
loopne
aas
mov
xchg
clc
loopne
repz
dec
shl
push
scas
lea
add
add
push
clc
sub
push
popa
and
jg
dec
xor
mov
add
and
jg
stos
test
xchg
retf
clc
movs
mov
mov
loop
mov
cli
out
mov
call
fld
push
add
push
sbb
popa
neg
dec
clc
xor
add
mov
mov
cmp
ds
push
add
fistp
fadd
inc
ficomp
push
add
sti
or
dec
add
inc
or
stc
out
add
and
mov
mov
xchg
(bad)
ds
or
je
ficomp
xor
neg
fiadd
mov
gs
clc
or
and
cmp
adc
pop
push
scas
push
ds
shl
xchg
jno
cmp
xor
cmp
cmp
cmp
clc
or
adc
mov
sar
push
js
pusha
jne
inc
jbe
add
mov
and
mov
(bad)
loop
mov
outs
imul
je
add
mov
jne
call
add
jp
add
push
sbb
add
sti
jge
mov
enter
div
dec
add
or
inc
add
jbe
arpl
and
ror
sar
push
adc
xor
add
mov
fidivr
pop
mov
push
cwde
xchg
dec
mov
add
aas
cld
add
jle
lea
pop
inc
mov
neg
shl
or
add
dec
test
or
mov
xchg
hlt
shl
adc
mov
je
cmp
scas
and
repnz
mov
push
lea
add
mov
mov
lods
or
jnp
adc
imul
push
cmps
jmp
push
push
and
mov
and
lds
xchg
mov
mov
jne
cmp
mov
adc
push
movs
ret
mov
lea
aas
inc
fisttp
je
add
fwait
(bad)
xlat
pop
mov
in
xchg
adc
add
sub
sub
inc
sub
pop
cmp
adc
mov
xor
inc
aaa
dec
sbb
cmp
mov
ja
push
outs
sub
movs
inc
fwait
jbe
inc
inc
xchg
inc
mov
pop
push
add
inc
shr
cli
adc
enter
mov
jbe
cmp
clc
dec
pop
sbb
js
jg
xor
(bad)
xchg
ins
stos
cmps
pushf
or
mov
dec
xor
ror
fnstcw
cdq
cmp
sbb
sti
add
xor
xor
cmp
jl
js
stos
mov
add
sub
fdiv
out
adc
sbb
mov
sub
jp
cmp
hlt
or
push
addr16
lahf
dec
inc
popa
movs
xchg
cmp
fild
push
dec
add
mov
lods
xor
sbb
jo
mov
sahf
pop
adc
vpmulhuw
push
push
push
fisttp
icebp
push
push
movs
sub
lock
jnp
push
xchg
jge
jo
popa
xchg
shl
cmp
xchg
pop
xor
fsubr
sub
outs
shr
mov
mov
mov
pop
inc
and
mov
loopne
xchg
push
adc
mov
mov
mov
mov
or
mov
jmp
dec
pop
popf
cmc
cmp
shl
std
jae
and
pop
cmp
dec
std
ret
iret
jmp
sub
mov
fidivr
dec
pop
or
mov
mov
mov
jbe
pop
mov
xor
jl
xchg
push
ja
push
xor
sbb
ins
or
adc
or
mov
add
or
pop
push
push
add
mov
out
jnp
adc
push
add
cmp
(bad)
jo
loope
add
ss
lea
into
fsubr
and
mov
bound
add
pop
loopne
bound
push
lock
jae
or
add
in
jl
fiadd
mov
sub
adc
push
bound
inc
add
(bad)
pusha
and
aas
mov
std
popf
icebp
xchg
add
mov
inc
lock
cmp
jl
jno
test
jns
(bad)
(bad)
lock
mov
mov
add
popa
add
add
cs
add
sar
sbb
sbb
adc
jbe
stc
jb
mov
pop
ins
pop
test
jl
mov
rcl
repz
std
fld
xchg
inc
jne
inc
sub
inc
jb
jmp
lea
mov
ss
and
xchg
pop
ror
sbb
retf
mov
sbb
aas
and
mov
pop
(bad)
push
shl
dec
cli
mov
mov
data16
pop
xchg
adc
in
or
mov
push
mov
mov
add
add
add
jl
pop
add
fs
sub
pushf
cdq
mov
sub
stc
mov
(bad)
xlat
cmp
add
stc
xor
add
mov
cmp
jbe
mov
jle
dec
xor
ficomp
mov
leave
pushf
rcr
adc
out
mov
xchg
pop
sti
ja
adc
pop
lock
jmp
sub
adc
sub
add
inc
test
push
cld
adc
sub
stc
pop
cmp
jne
adc
inc
pop
ror
jmp
enter
rcl
inc
in
cmp
jg
xchg
pop
push
outs
imul
inc
ds
mov
jecxz
push
mov
jb
adc
xchg
sub
std
xchg
pop
add
push
or
dec
xor
cmp
ds
inc
push
mov
sub
add
add
add
inc
inc
loope
inc
xchg
push
fcmovb
ret
dec
mov
or
xor
mov
ins
mov
push
add
loope
pusha
cmps
mov
adc
push
or
lea
fist
cmp
mov
je
xor
cs
jg
pop
jo
repnz
add
jnp
add
or
or
ins
or
je
dec
jne
xchg
xor
add
push
add
pop
(bad)
fcomp
push
test
leave
(bad)
pop
mov
sbb
rcl
mov
cli
scas
pop
cmp
jp
(bad)
jbe
or
mov
inc
inc
dec
add
ret
pusha
adc
ror
and
enter
in
add
xchg
jmp
adc
and
enter
push
mov
mov
fild
add
pop
or
and
or
or
ror
retw
sbb
loop
cs
push
sbb
adc
xor
cmp
fisttp
js
loop
pusha
mov
sub
add
or
clc
aas
ds
not
mov
ins
mov
ret
push
pop
adc
dec
mov
mov
cmp
jl
int
shl
cli
push
sti
jb
mov
mov
jle
cmp
add
push
jg
ficom
cli
or
(bad)
push
cli
fidivr
jae
add
mov
mov
lods
mov
jmp
add
setb
inc
dec
add
xlat
lock
cmp
add
inc
int
xchg
dec
push
mov
adc
mov
sti
test
sub
xchg
sahf
popf
mov
cmp
jnp
and
inc
pop
ret
jmp
shl
rol
sar
cld
or
mov
add
shr
enter
xchg
jmp
sub
cmp
push
fild
mov
pop
mov
ins
xchg
mov
sub
inc
lock
or
adc
xor
xor
cmc
jle
push
sub
test
and
xor
js
ret
mov
jne
fdivr
or
cmc
mov
cld
addr16
ror
inc
inc
and
and
pop
hlt
pop
clc
sub
and
push
lds
cmp
push
enter
pusha
sub
dec
out
pop
lea
in
pushf
push
mov
(bad)
cmp
mov
loopne
push
push
jae
inc
sbb
pop
add
rcr
push
js
mov
pushf
sbb
iret
xor
pop
ins
mov
xchg
pop
nop
or
fadd
xor
out
xor
into
xchg
jmp
mov
lea
mov
or
jae
adc
inc
es
pop
add
mov
push
adc
cs
loop
outs
addr16
rol
scas
inc
es
cld
push
inc
add
retf
mov
js
fadd
add
loop
mov
pop
inc
inc
cld
test
mov
inc
xor
mov
cmp
sbb
pop
icebp
mov
lahf
adc
pusha
test
sub
pop
add
fiadd
push
or
mov
das
rol
xchg
lock
repnz
(bad)
mov
add
jb
test
inc
cmps
sar
and
add
inc
mov
sar
retf
mov
push
cld
jle
sub
push
jecxz
mov
clc
xor
dec
mov
mov
call
ret
mov
mov
add
call
sbb
pop
xchg
add
pop
pop
xor
mov
jl
push
sahf
add
cmp
pop
jae
fcmovbe
adc
pop
repz
lea
or
repz
movs
sub
mov
fmul
leave
or
or
ret
push
mov
pop
add
mov
cmp
push
push
mov
push
mov
sbb
jl
jbe
push
scas
dec
ror
cmps
nop
pushf
pop
sbb
dec
inc
xchg
push
push
bound
jnp
mov
lods
xchg
mov
adc
xchg
xchg
mov
lea
sahf
je
adc
test
jge
pop
or
xchg
rcl
jb
lods
pop
add
lock
add
ds
outs
nop
jmp
daa
mov
adc
test
adc
mov
jmp
adc
je
sub
jbe
sbb
xor
jle
icebp
ret
lahf
mov
adc
sub
and
ins
mov
and
inc
xor
popf
das
sub
adc
and
hlt
cli
jno
out
push
dec
data16
and
adc
jmp
ret
xor
clc
mov
mov
sbb
pop
les
mov
dec
ja
aaa
(bad)
mov
loopne
dec
cmp
mov
pushf
ret
sub
pop
cmp
daa
adc
pop
pushf
rcr
sbb
fwait
mov
cmp
push
mov
xlat
shr
xor
sub
mov
rcr
(bad)
fs
cmp
test
jo
fiadd
or
and
std
shl
cwde
mov
inc
ins
dec
cdq
cld
pop
test
mov
mov
jl
or
and
imul
push
rcr
dec
push
test
je
push
push
cdq
test
and
or
adc
add
retf
ror
test
adc
xchg
add
push
mov
mov
lea
xchg
add
or
into
int
and
add
retf
scas
cmp
jno
daa
inc
(bad)
lods
stos
mov
cmp
jae
dec
jne
pop
add
mov
add
loopne
ror
ins
mov
xchg
jle
push
pop
inc
cmp
adc
mov
push
mov
sar
cld
fisubr
mov
bound
xor
jo
cs
movntps
push
add
push
pop
adc
jmp
mov
pushf
out
pop
test
sbb
(bad)
pop
dec
cmp
mov
xchg
push
lahf
inc
mov
sbb
jl
lods
ja
xchg
iret
mov
cmp
(bad)
dec
cli
push
mov
push
pop
(bad)
or
sbb
sbb
in
push
retf
jne
add
fcomp
stos
add
add
xchg
or
sbb
mov
inc
mov
mov
shl
push
cmp
lahf
adc
push
or
je
aas
push
fiadd
arpl
add
sub
out
clc
daa
call
jae
(bad)
adc
lock
loopne
lea
adc
jne
cmp
mov
adc
add
mov
mov
lods
(bad)
(bad)
hlt
inc
idiv
shl
sbb
push
fadd
xchg
loope
xor
push
add
adc
xchg
ja
pop
ret
mov
in
push
cmp
lock
push
loope
(bad)
ja
arpl
pop
cmp
je
mov
push
adc
(bad)
ja
ins
jbe
test
fidiv
mov
pop
inc
sbb
mov
xchg
in
jmp
lods
stc
xchg
inc
pop
fidiv
pop
xchg
xor
ror
xlat
retf
out
fnstcw
mov
lock
dec
dec
stos
adc
fsub
pushf
fistp
shr
xchg
rol
push
or
clc
push
call
pop
cli
cld
dec
scas
dec
or
mov
cmp
push
sbb
aaa
pop
add
xchg
add
inc
adc
xchg
jno
jmp
push
jecxz
pushf
test
jo
in
add
out
sahf
sbb
push
or
bound
out
jbe
jg
nop
push
imul
cmp
cmp
jne
popf
push
retf
push
push
and
mov
scas
call
or
imul
fcomi
or
fld
or
adc
popf
cmp
into
lods
out
je
mov
jmp
adc
fadd
pop
stc
les
pushf
xor
(bad)
(bad)
repz
add
movs
or
mov
cmp
sbb
jb
xchg
fcmovb
out
cmp
mov
push
icebp
jl
or
xor
clc
xchg
out
les
xchg
cld
fsub
lahf
jmp
pop
pop
sub
sti
inc
or
mov
(bad)
pop
out
adc
mov
mov
(bad)
rol
sbb
fimul
shr
inc
jns
std
sbb
pop
pop
inc
les
fidivr
stc
outs
out
ja
adc
ror
pusha
jbe
push
mov
jg
sbb
in
cmp
adc
mov
mov
fdivr
jnp
popa
and
mov
cmp
fimul
and
mov
push
mov
push
jae
mov
stc
neg
xor
loope
fld
jo
sbb
jnp
inc
sub
push
imul
sub
or
adc
add
call
loopne
mov
cmp
mov
cmp
mov
jno
popa
cmps
mov
call
clc
jns
mov
repz
or
repz
cmp
and
xor
mov
xor
jmp
outs
shl
mov
test
jbe
dec
loopne
push
or
ins
nop
mov
cdq
(bad)
push
iret
sar
not
test
je
bound
int
in
in
xor
jmp
xchg
add
in
enter
into
xchg
rcl
rcl
cs
into
arpl
inc
adc
push
imul
or
pushf
inc
rcl
dec
or
add
push
inc
jmp
lock
xor
sbb
shl
adc
inc
jl
ins
pushf
sbb
cmp
xchg
cmp
xchg
ficomp
cmp
popf
mov
loope
adc
cmp
push
inc
inc
cmp
mov
(bad)
adc
(bad)
add
mov
mov
mov
add
inc
nop
shr
test
xchg
adc
push
cmp
mov
rcl
nop
inc
lods
ds
pusha
and
mov
mov
(bad)
bound
mov
shl
ror
sbb
js
mov
sbb
and
sub
inc
ss
std
and
mov
hlt
mov
je
add
outs
fs
out
repz
jb
mov
push
in
add
fdivr
jmp
inc
cmp
xchg
mov
es
xlat
sub
push
or
cmp
pop
add
xor
movs
pop
sub
xchg
sub
lea
and
mov
add
pop
jecxz
jne
hlt
or
(bad)
mov
dec
xor
sar
outs
popf
call
cmp
and
mov
ror
mov
out
add
adc
daa
stc
and
int
daa
mov
fucom
sbb
cmp
sub
inc
adc
add
int
mov
out
iret
scas
add
ret
mov
movs
out
bound
cli
push
sbb
push
(bad)
cmp
cvtps2pd
loope
push
and
(bad)
or
push
ins
mov
in
repz
add
xchg
adc
jl
aas
pop
mov
adc
scas
lock
inc
nop
or
inc
or
add
dec
data16
scas
adc
aam
add
pop
adc
add
ret
aaa
add
push
fimul
or
add
(bad)
and
popa
and
fadd
add
inc
add
fwait
ss
ja
into
stc
xor
add
jo
sbb
(bad)
sbb
fld
ret
jb
lods
push
in
add
add
jno
inc
jb
push
xchg
or
dec
(bad)
jl
pop
push
jae
push
inc
adc
enter
add
xor
popa
lds
out
outs
and
sbb
mov
shl
mov
in
mov
sbb
movs
or
mov
sub
sub
ret
jnp
xchg
mov
add
inc
pop
push
add
push
lea
mov
ret
ret
inc
aas
cmp
int3
mov
setne
jb
clc
pop
mov
push
dec
fimul
inc
inc
xchg
adc
inc
retf
sbb
cld
test
pop
ror
adc
shr
ret
popa
or
inc
int3
in
sahf
imul
stos
pop
mov
sub
pop
loop
jmp
sbb
mov
int3
lock
or
in
adc
xchg
aad
cmp
or
mov
inc
pop
lea
or
push
bound
mov
mov
dec
(bad)
inc
inc
mov
and
pop
lea
mov
xchg
mov
imul
stos
rcr
test
and
mov
cmp
push
les
and
sbb
add
pop
mov
ins
dec
sbb
sbb
dec
xor
hlt
ror
mov
jl
call
sub
jmp
je
data16
or
loopne
cmp
xchg
fbstp
pusha
rcl
push
xchg
cld
jmp
test
push
push
fcomp
rol
inc
dec
ja
mov
cwde
mov
hlt
xlat
stos
push
push
int3
enter
push
cmp
(bad)
dec
aad
or
pop
add
mov
mov
and
sbb
adc
mov
xchg
pop
test
ret
test
daa
or
xor
pop
cmp
inc
adc
mov
lock
cmp
and
out
(bad)
push
imul
imul
and
jo
jbe
adc
cmp
inc
mov
loope
adc
pop
dec
jb
enter
xor
ret
push
push
add
cmp
out
(bad)
adc
mov
rcl
pop
jmp
loop
adc
or
int
mov
retf
cs
add
daa
or
scas
sbb
pop
adc
int3
mov
(bad)
stc
jl
add
jecxz
aaa
test
adc
inc
lea
mov
dec
cmp
pusha
sbb
xchg
pusha
sub
jo
loope
xchg
outs
popf
pushf
dec
inc
(bad)
out
jl
xor
xor
test
(bad)
adc
loopne
retf
or
dec
or
icebp
dec
test
inc
out
mov
cmp
in
push
adc
cmp
pop
fadd
add
mov
push
ret
sbb
ret
sbb
gs
retf
mov
add
bnd
cli
pop
mov
sbb
and
loop
clc
jle
call
jb
aam
add
sub
mov
sahf
in
push
xor
push
jne
int
xlat
cmp
pop
cmps
add
ret
shl
pop
(bad)
mov
hlt
lock
mov
nop
pushf
pop
lds
mov
jmp
sahf
mov
mov
in
fadd
and
mov
cmp
jbe
lahf
fbld
cwde
jge
fcomip
jmp
cs
fcomp
cwde
jmp
dec
sahf
add
or
xor
mov
mov
fmul
ffreep
inc
inc
cmp
outs
jle
fstp
cld
add
mov
jo
push
pushf
sub
(bad)
mov
loopne
cmp
sahf
icebp
mov
mov
repnz
jle
mov
fmul
ja
sahf
sar
push
mov
adc
retf
jnp
xchg
gs
or
dec
pop
cs
fcom
ror
dec
jnp
jmp
push
xor
fbld
nop
hlt
nop
lock
or
in
pushf
mov
call
inc
in
push
adc
ds
cmp
ror
ret
rol
jo
out
dec
and
inc
inc
jge
movs
ds
jb
jle
inc
jbe
pushf
les
ret
and
dec
test
and
dec
mov
movs
(bad)
mov
mov
mov
fdiv
(bad)
dec
jne
dec
jns
pop
jo
jle
push
push
xor
sahf
hlt
jmp
rol
loop
dec
mov
jns
jne
leave
ins
inc
pop
scas
push
fistp
int
stc
cmp
iret
in
aaa
pop
rcr
enter
xor
dec
add
mov
cmp
cwde
and
movs
push
push
sub
pop
and
sub
fiadd
sbb
fcomip
cwde
push
jl
aaa
inc
test
mov
jne
add
mov
mov
and
cmp
ja
inc
inc
push
xchg
jbe
adc
push
inc
dec
or
pop
xchg
cdq
dec
jle
or
adc
mov
test
inc
lahf
sub
daa
xchg
cmp
out
mov
nop
(bad)
sbb
jne
daa
(bad)
mov
dec
loopne
mov
jae
adc
pusha
mov
loopne
xadd
mov
pop
lgdtd
xor
sbb
or
mov
dec
(bad)
pop
mov
add
mov
cmp
lahf
pop
inc
cwde
fnstenv
nop
mov
pop
outs
inc
xchg
mov
mov
aaa
push
fistp
sbb
lods
xor
push
inc
mov
pcmpeqw
lods
aad
dec
add
(bad)
add
xor
jecxz
mov
cmps
into
mov
adc
jle
xlat
sbb
push
mov
test
sub
add
daa
out
lahf
in
or
push
push
and
sbb
lock
add
cld
sbb
out
xchg
add
sub
and
pop
push
add
(bad)
cmp
jae
mov
mov
inc
add
xchg
rdmsr
sub
mov
inc
mov
(bad)
les
push
lea
add
inc
je
push
and
jb
dec
aas
aam
rcr
inc
mov
repnz
cmp
jb
pop
jmp
inc
adc
add
loopne
sbb
lock
xchg
inc
sbb
sbb
sbb
test
cmp
add
cmps
mov
es
or
mov
cld
dec
inc
mov
add
lahf
jl
sbb
xchg
popa
pop
retf
cmp
dec
jg
jmp
pop
inc
add
lea
mov
xor
stc
sbb
add
rcr
push
dec
(bad)
pop
mov
or
test
loope
stc
push
mov
cmp
push
jg
add
sub
pusha
js
mov
jecxz
push
mov
mov
sbb
add
push
cmovb
retf
adc
ds
xchg
add
test
cmps
mov
add
mov
retf
add
rcl
in
jns
mov
in
push
xchg
fcomp
stc
add
retf
and
pop
mov
jb
clc
cld
in
pop
addr16
loopne
cli
or
inc
scas
mov
sbb
in
clc
clc
mov
sub
in
mov
pop
pop
pushf
pop
pop
pop
mov
addr16
movs
ror
sbb
imul
inc
popa
push
push
mov
add
jne
cmp
sub
das
cmp
xchg
push
pop
popa
pop
scas
push
rol
dec
and
or
adc
test
xchg
pop
push
jp
les
adc
sub
jne
lock
cmp
sub
ss
sub
sub
dec
mov
mov
hlt
and
mov
mov
sbb
sub
jmp
retf
lods
(bad)
repz
mov
inc
cmp
jae
ins
retf
jge
or
hlt
xchg
jge
and
and
movs
out
repnz
sbb
fs
retf
lahf
pop
jns
jns
test
shr
sbb
cwde
test
add
and
or
push
lock
cmp
stc
sbb
jb
inc
adc
adc
cdq
jne
imul
jmp
cmp
mov
inc
mov
mov
into
inc
int
push
in
add
stc
mov
sbb
mov
push
cdq
or
inc
call
sbb
push
jle
inc
dec
cmp
pop
inc
sub
adc
add
scas
lock
adc
dec
add
cli
shr
out
adc
mov
das
icebp
(bad)
jne
push
fbstp
jns
ds
sbb
rcl
cld
fild
cmp
out
or
out
inc
mov
sar
sub
cld
jnp
fdiv
imul
outs
mov
je
mov
add
test
jbe
sbb
fstp
test
call
add
fstp
aaa
adc
jmp
jbe
and
or
inc
adc
sub
jle
adc
xchg
jo
lea
xor
idiv
push
add
loopne
and
jl
adc
mov
cmp
jle
fsub
in
push
sub
sub
sbb
push
(bad)
push
or
retf
out
sub
lods
stc
ds
sbb
mov
push
sbb
jmp
adc
in
push
jle
xchg
xchg
cld
xchg
push
cmp
sbb
jmp
shl
loopne
jl
call
(bad)
out
cmps
or
sahf
cld
xchg
push
or
stos
adc
mov
lea
mov
adc
jle
xor
ret
push
sbb
jp
out
cmp
or
jae
sub
icebp
mov
pop
enter
jl
clc
xchg
cmp
pop
sub
adc
icebp
fdivr
mov
retf
add
(bad)
xchg
sbb
add
inc
mov
ds
cmp
xchg
cs
inc
xchg
inc
cmp
rcl
adc
dec
jecxz
loopne
add
or
sub
push
cs
aas
inc
dec
dec
adc
popf
jmp
jge
jmp
lea
mov
push
jg
jmp
cmp
out
mov
sbb
pushf
dec
jae
scas
loop
inc
pop
or
ret
or
(bad)
push
push
ins
pop
lock
in
add
test
add
in
mov
icebp
js
cld
push
cmp
(bad)
mov
add
xchg
pop
sbb
(bad)
popf
xchg
lea
cmps
push
mov
or
add
add
shr
dec
pop
pop
xor
test
sub
xchg
or
lahf
shl
pop
pop
push
std
inc
sub
outs
push
call
rep
mov
xor
xor
mov
(bad)
enter
xor
dec
ss
sbb
data16
stos
clc
xor
imul
sbb
loopne
or
or
mov
and
ins
pop
sbb
(bad)
push
mov
shl
movs
push
xor
inc
rcr
pop
mov
mov
scas
lahf
loopne
in
jg
mov
push
lea
pop
ret
jl
cs
xor
jbe
xor
sub
dec
repnz
cmp
and
retf
or
inc
or
xchg
xor
test
push
xchg
mov
lea
fwait
adc
arpl
push
into
and
push
push
fs
and
mov
rcl
xchg
mov
imul
mov
mov
xchg
mov
or
push
retf
mov
push
add
and
adc
jne
dec
popa
je
ins
mov
mov
jecxz
xchg
adc
cmp
leave
arpl
push
aas
push
(bad)
pop
cmp
sbb
and
mov
jp
imul
lea
cmc
mov
mov
cmp
or
mov
and
mov
adc
inc
push
sbb
sub
int3
lods
cdq
lods
push
push
or
ss
add
push
push
jnp
jg
clc
inc
pop
mov
mov
and
or
sub
jl
sub
inc
xlat
add
mov
mov
cdq
mov
ret
pop
sub
add
in
leave
lods
(bad)
sbb
xor
mov
mov
inc
inc
and
repz
scas
xor
pop
cld
xchg
aas
add
fwait
and
(bad)
mov
sub
fild
fsub
xor
jo
add
and
test
push
push
sub
xor
scas
pop
mov
pushf
lea
sbb
es
data16
sbb
shl
xor
jb
pop
dec
add
xor
xor
xchg
out
cmp
mov
pop
imul
or
add
cmp
sbb
sub
arpl
push
cmp
ja
loopne
out
(bad)
hlt
mov
and
add
dec
pop
mov
mov
iret
mov
jge
lahf
and
out
(bad)
retf
pop
push
jl
stc
lds
adc
inc
imul
xor
add
adc
adc
in
ins
mov
pop
sub
ja
add
sbb
dec
imul
sbb
test
push
sar
adc
fist
pop
hlt
and
jbe
push
xchg
outs
inc
loop
pushf
not
pop
pop
fcmovbe
ret
lock
fld
dec
jge
or
and
retf
movs
popf
out
push
inc
or
pop
cs
push
push
pop
pusha
fs
xor
les
jo
ss
cwde
mov
cwde
add
nop
sbb
add
adc
dec
mov
rcr
dec
mov
ret
cmp
sbb
jp
mov
xor
cmp
test
cmp
mov
dec
push
dec
mov
push
pop
inc
push
cs
sub
dec
(bad)
cmp
js
jo
sbb
mov
jns
push
cmp
dec
or
mov
cmp
adc
sbb
cs
jne
or
test
or
add
pop
outs
adc
loope
cdq
and
sar
pop
mov
cs
retf
fcom
ror
xchg
xchg
retf
neg
and
or
in
xor
cld
xchg
pop
xchg
fcomp
mov
sub
lar
add
sbb
paddd
enter
mov
mov
pop
ret
push
mov
adc
out
pushf
jle
push
cmc
(bad)
push
ja
or
xchg
add
add
add
add
or
or
ins
fcom
cld
push
jmp
push
or
sbb
sub
ss
dec
stos
adc
and
adc
dec
mov
xor
cmp
fdivr
sub
(bad)
lods
jne
push
hlt
adc
add
test
inc
clc
lds
cmp
mov
test
mov
out
aas
pop
popa
icebp
xchg
mov
jle
add
imul
dec
test
add
dec
jne
push
aam
inc
cmp
movs
punpckhbw
cmp
ret
aaa
repz
cmp
pop
je
lods
and
or
jl
adc
add
cmp
xchg
out
aad
or
cmp
dec
mov
sbb
ss
mov
(bad)
mov
into
retf
mov
mov
xchg
sar
sbb
pushf
(bad)
cmovne
fnsave
add
or
jle
in
aas
(bad)
add
xor
je
push
lahf
test
push
sub
movs
adc
ror
adc
add
add
dec
push
xchg
fstp
lods
addr16
inc
xchg
scas
mov
or
inc
jle
xchg
or
ins
jne
xor
jmp
es
push
sbb
xor
sbb
inc
es
sbb
imul
xchg
pop
sbb
call
(bad)
aas
jp
ds
fcom
xchg
cli
idiv
lods
pop
lea
add
add
mov
or
mov
xor
test
adc
icebp
sub
or
add
cmps
jns
add
add
add
(bad)
(bad)
and
mov
ror
loop
rcr
fisttp
mov
sbb
dec
shl
dec
add
add
imul
add
add
call
sbb
mov
jnp
push
inc
lock
push
outs
leave
push
aad
and
jo
and
mov
add
aad
add
and
or
daa
aas
inc
dec
jo
js
mov
xchg
ins
clc
xlat
add
clc
popa
ror
popf
jae
xchg
jae
xchg
adc
xchg
and
and
inc
inc
mov
ror
ds
nop
mov
cmps
mov
cmp
cmp
loopne
aaa
inc
aam
pop
add
mov
sub
xor
stc
stc
sbb
xor
push
or
lea
imul
mov
mov
nop
sub
ror
ds
retf
inc
sbb
push
xchg
and
lss
and
rcl
(bad)
loop
test
inc
adc
or
adc
xor
adc
cmp
cmp
mov
or
adc
ror
pop
xor
mov
in
iret
loopne
inc
(bad)
dec
cwde
je
cmp
dec
xchg
inc
jmp
into
xchg
(bad)
jge
cmp
sbb
mov
fbld
addr16
clc
add
scas
mov
cmp
sahf
data16
xor
rcr
pop
push
fidiv
xchg
out
dec
adc
inc
in
or
aam
xor
loope
pop
cli
(bad)
lea
or
mov
jo
or
push
mov
adc
mov
out
push
and
sar
fnsave
push
(bad)
push
rcr
mov
pusha
fst
retf
xchg
retf
add
jmp
push
clc
mov
pusha
sub
sbb
call
push
cmp
retf
cmp
jbe
pop
fdivr
jmp
mov
jmp
push
xor
or
sub
repnz
int
rcl
dec
rol
iret
inc
and
cmp
and
push
pusha
push
mov
sbb
movs
fcomp
or
or
or
mov
adc
(bad)
mov
xor
(bad)
mov
or
add
lahf
mov
addr16
daa
mov
jb
sub
pop
push
xchg
retf
in
push
push
push
push
push
repnz
push
cs
(bad)
or
jp
add
scas
mov
sbb
pop
push
pop
test
mov
add
add
and
loope
push
add
xchg
retf
and
inc
leave
je
push
cmp
nop
dec
test
and
in
inc
rol
dec
sub
sti
fcom
add
retf
rcl
pop
push
jo
xchg
imul
mov
inc
or
push
(bad)
dec
bswap
out
iret
adc
cmps
or
mov
add
add
pop
dec
pop
pop
add
lea
call
inc
push
sbb
(bad)
repz
mov
jae
dec
push
or
jns
leave
or
xor
mov
dec
cli
fidivr
mov
in
inc
sub
or
add
stc
cmc
cmp
sbb
xchg
dec
sbb
cwde
sbb
shl
adc
inc
cwde
xor
inc
dec
out
in
adc
aad
xlat
inc
sbb
push
fstp
dec
pop
adc
stc
aad
scas
sub
mov
arpl
dec
popf
out
popf
dec
in
or
add
aad
int
sahf
dec
dec
dec
cmp
dec
repz
dec
dec
stos
repz
fsubr
sbb
lahf
mov
movs
jmp
sahf
push
jmp
lahf
push
cmp
enter
push
sar
repz
test
adc
repnz
mov
outs
inc
cmc
imul
jae
gs
ror
inc
add
(bad)
or
push
icebp
enter
mov
add
pushf
loopne
sub
push
add
mov
adc
mov
jno
ret
inc
push
inc
inc
push
add
pop
hlt
add
adc
imul
add
inc
jae
cmps
pop
icebp
rcr
ss
ret
mov
out
mov
mov
shl
cmps
leave
pop
mov
add
and
xchg
push
mov
and
mov
sbb
and
xchg
inc
cmp
xchg
or
fisttp
rcl
cli
je
xor
ret
add
xor
and
scas
bound
ja
jl
lods
add
or
or
cmps
fsubr
sub
ror
test
(bad)
mov
pop
sbb
retw
add
cs
adc
pop
jne
or
xor
pop
sti
cmp
xchg
fdiv
jp
ret
fucomp
das
ins
or
loopne
in
outs
pushw
and
loop
data16
inc
arpl
xchg
xor
(bad)
push
cmp
fidivr
add
dec
cmp
jl
pop
sbb
mov
sar
push
pop
pusha
aad
aas
inc
ins
(bad)
inc
pop
push
inc
loope
ss
ins
outs
fadd
push
cmp
jl
xchg
fsub
mov
push
je
and
mov
nop
jp
ret
lds
or
inc
or
mov
out
clc
and
mov
sbb
dec
call
and
gs
sub
call
ret
sub
cmp
icebp
adc
cdq
dec
int
cmp
jle
fld
mov
std
jbe
scas
(bad)
mov
sbb
xor
add
fsub
aad
shl
(bad)
fistp
jl
add
mov
or
aaa
inc
or
sbb
jmp
call
nop
adc
in
push
push
jo
lods
test
pop
push
cdq
xchg
fcmovb
stos
out
ins
sbb
sbb
js
adc
lahf
xor
stc
push
inc
xchg
add
add
jle
jno
mov
rcl
pop
lea
xor
xlat
or
aam
adc
add
add
or
inc
or
jmp
jo
mov
jmp
dec
sbb
push
xchg
jo
push
adc
repz
pop
sub
jb
cmp
sar
cmp
into
jns
add
fstp
xchg
pusha
or
jle
loopne
in
ret
mov
jo
inc
or
addr16
inc
pop
inc
xor
js
sub
adc
pop
dec
push
add
xor
cld
cmps
imul
dec
and
loopne
ins
push
sub
jmp
mov
sub
xchg
cmp
pusha
jbe
in
pop
outs
sub
adc
push
push
adc
inc
push
sar
cmp
push
add
cmp
test
fwait
dec
jmp
ins
loope
in
or
cwde
push
mov
jmp
adc
sub
inc
xchg
cld
dec
sbb
jmp
mov
aad
pop
lds
inc
fcomp
jp
mov
xor
(bad)
mov
adc
dec
add
push
clc
mov
call
mov
push
add
inc
stc
or
xor
sbb
(bad)
mov
push
mov
add
sub
outs
scas
push
mov
into
cmp
sub
mov
in
adc
loop
lock
cmp
rcl
ret
adc
cdq
or
movs
dec
and
cmp
cwde
mov
(bad)
sub
lods
sar
or
shl
inc
sub
pop
jge
ret
xor
(bad)
and
in
mov
popa
ror
sub
shl
inc
xor
pop
sahf
push
ret
or
(bad)
cmp
or
mov
lahf
mov
rcr
or
inc
sti
mov
imul
push
dec
nop
add
or
call
loope
or
xor
or
mov
ret
adc
add
sub
xor
mov
sub
inc
or
loop
cmp
add
pop
rol
(bad)
or
add
xor
(bad)
(bad)
fdiv
cmp
mov
inc
clc
imul
or
sbb
ja
je
mov
add
int3
xchg
shr
les
rcl
scas
mov
mov
cmp
jbe
mov
mov
pusha
shl
xor
aam
pop
sbb
inc
push
mov
jmp
cmp
jb
fisubr
cmp
es
add
test
ss
sbb
iret
pop
dec
dec
push
or
jge
push
and
mov
mov
or
lock
cli
cmp
sub
inc
ja
int
rol
sar
push
pop
mov
push
or
sub
sub
xchg
stos
adc
sbb
push
sub
mov
mov
in
aas
inc
cld
dec
iret
lock
add
es
(bad)
fisubr
rcl
lock
jbe
add
push
fwait
mov
fwait
push
js
je
or
rcl
jns
arpl
xchg
dec
dec
jb
inc
or
mov
and
mov
xor
add
cmp
jge
push
into
push
loopne
mov
ins
out
push
dec
push
dec
xor
sub
push
pop
or
xor
rcr
adc
add
mov
adc
imul
or
and
popa
and
cmp
inc
jno
or
add
call
pop
sub
shl
push
inc
cmp
and
jmp
sub
sub
pop
ds
cmp
jbe
mov
adc
add
adc
aas
dec
and
jb
mov
push
inc
mov
stos
jg
mov
jg
push
xor
mov
int
fisub
ss
sub
popw
shl
adc
es
inc
adc
loop
and
test
rsm
jns
xor
pop
ret
jg
push
adc
test
nop
jo
jg
sub
push
add
aad
xor
add
push
jb
out
loopne
jnp
and
add
add
lock
lea
add
dec
pop
jg
(bad)
loop
ss
mov
and
mov
inc
push
ret
mov
push
mov
cmp
loop
push
cmp
je
add
push
mov
cld
stc
movs
into
(bad)
bound
movs
cmps
or
ja
push
aaa
sar
icebp
jb
xchg
sbb
jge
add
les
dec
sbb
mov
or
call
xor
and
sbb
adc
mov
sbb
mov
mov
in
dec
adc
pop
add
sub
arpl
mov
pop
xor
rol
sbb
sub
lock
bound
push
push
add
ret
fisub
daa
push
xchg
ret
fild
inc
sbb
inc
sbb
add
andnps
loopne
cmp
push
cwde
test
xchg
inc
rol
mov
test
pushf
or
mov
add
repnz
pop
jmp
jmp
fs
movs
mov
icebp
jl
and
lock
enter
xor
push
cmp
lock
push
push
aas
add
imul
mov
in
xor
pusha
mov
je
sbb
jl
inc
mov
mov
int
push
out
push
add
rcr
mov
inc
inc
repnz
ds
adc
jp
das
add
data16
xor
cmp
loope
icebp
ret
push
inc
adc
mov
sub
jmp
ins
sbb
pop
adc
inc
xchg
ret
movs
dec
test
and
jbe
les
in
fwait
xchg
fist
jmp
jae
dec
xor
add
sbb
inc
sbb
sbb
loope
sbb
add
sar
add
loop
sub
push
cld
mov
jo
lods
test
adc
jl
scas
push
mov
add
ficomp
pop
mov
adc
jecxz
outs
pop
or
and
lea
inc
sub
sbb
scas
cmp
dec
repz
jae
mov
repnz
sub
(bad)
cmp
adc
push
gs
rcl
add
movs
mov
cmps
push
inc
cs
inc
fcom
push
or
gs
jo
fdiv
mov
push
push
mov
(bad)
cmps
cld
lea
mov
or
(bad)
mov
icebp
je
dec
imul
in
dec
cmp
inc
imul
nop
cmps
xor
push
sub
sbb
adc
pusha
push
xchg
sub
and
or
push
mov
(bad)
xchg
cmp
test
add
jmp
rol
retf
and
xlat
test
loope
push
add
loope
xchg
mov
fist
jge
cmp
jge
(bad)
or
(bad)
mov
sti
ret
mov
push
push
mov
mov
test
pushf
js
xor
shl
mov
pop
shl
loopne
and
sbb
inc
push
jb
sub
imul
je
pop
push
dec
ret
arpl
jl
(bad)
pop
pop
add
(bad)
pop
fist
cmp
sbb
div
pop
push
pop
inc
or
mov
and
mov
adc
jne
aaa
clc
cmp
cmp
jg
jl
cmp
cwde
ins
xchg
jle
sbb
in
hlt
xor
dec
adc
sub
jl
jmp
shl
add
mov
in
daa
test
xlat
idiv
nop
int
std
ficomp
nop
fidivr
adc
aas
sbb
jg
cmp
ja
fcom
cmc
and
lds
adc
test
imul
mov
mov
js
inc
jl
jae
sub
jae
add
into
push
(bad)
fsub
inc
and
add
shl
xchg
and
inc
les
add
loop
mov
jne
push
push
into
(bad)
movs
retf
aam
mov
mov
pop
mov
ss
sub
fcomp
jb
js
int
or
ficomp
add
push
add
dec
jo
push
push
mov
mov
mov
pop
pop
pop
loop
add
rol
adc
or
jno
jno
bound
pcmpeqw
sub
xor
cmp
dec
pop
inc
and
js
pop
jbe
rol
mov
loopne
rol
inc
or
dec
xor
stc
adc
or
add
cld
fidiv
jnp
dec
jmp
pop
mov
mov
aaa
jae
es
adc
pop
pop
bound
mov
int3
push
(bad)
lahf
nop
pop
pop
(bad)
push
retf
and
dec
dec
and
lods
dec
mov
dec
jno
shl
add
jno
xor
push
and
or
push
xchg
jmp
adc
sub
mov
and
(bad)
adc
mov
sbb
and
sbb
sar
pop
cmovs
jae
cli
scas
mov
inc
jo
repnz
add
mov
mov
push
cld
and
pop
jge
mov
or
sbb
in
gs
mov
xchg
fnstsw
sbb
mul
in
push
(bad)
cmp
jmp
adc
push
mov
cmovge
xor
adc
inc
call
ret
cmp
jne
arpl
add
jb
or
loopne
inc
lahf
les
sbb
or
lock
xchg
push
mov
push
push
and
mov
pop
push
xchg
pusha
imul
clc
xchg
pop
aad
dec
(bad)
hlt
sbb
xchg
or
add
inc
jb
dec
cmp
pop
push
mov
mov
arpl
and
pop
ret
int3
jne
pop
push
dec
in
and
rcr
sbb
dec
in
sbb
and
bound
pop
test
sbb
mov
xor
sbb
xchg
pop
push
jo
pop
imul
pop
inc
or
xchg
pop
(bad)
fistp
stos
xor
div
dec
cmp
sub
add
cdq
jbe
and
xor
push
dec
daa
adc
pop
adc
sbb
cld
or
cld
test
and
mov
mov
inc
lahf
push
push
push
and
stos
inc
push
push
loop
loop
push
push
dec
repz
lea
cmp
pop
push
cdq
dec
mov
lea
mov
pusha
mov
mov
mov
imul
adc
pop
push
and
call
(bad)
(bad)
dec
push
inc
cmp
jb
fsqrt
push
jb
push
lea
mov
jnp
lea
cmps
sub
add
nop
mov
ja
adc
mov
dec
push
jmp
mov
sbb
pop
test
add
xchg
mov
add
dec
xor
or
push
jae
add
(bad)
mov
xor
pop
or
int3
or
ret
mov
xlat
(bad)
mov
or
mov
shl
sub
fmul
jo
push
rol
test
call
mov
sbb
lea
fisttp
lahf
mov
je
xchg
inc
mov
shufps
push
outs
push
sub
std
inc
mov
push
add
sbb
(bad)
jb
cmp
adc
sbb
(bad)
xor
or
dec
jmp
xor
and
(bad)
iret
add
or
xchg
adc
lahf
dec
js
fidivr
loopne
xchg
bound
cmp
dec
inc
sbb
and
mov
sbb
mov
inc
or
xor
push
mov
add
inc
push
sbb
loopne
or
add
mov
and
mov
cmp
ja
sub
cmps
(bad)
rcr
cmp
jne
mov
push
add
sub
mov
adc
sbb
ret
dec
call
inc
adc
add
movs
ss
and
jg
mov
cli
add
sub
push
mov
xor
push
lahf
pop
or
cld
inc
dec
or
xor
in
or
daa
adc
lahf
sub
imul
stos
movs
sub
pop
add
sbb
pop
(bad)
neg
out
or
and
pop
aaa
js
or
sub
add
xlat
pop
push
call
enter
adc
xor
(bad)
repnz
aam
adc
test
add
jbe
jo
push
dec
retf
movs
test
fsub
mov
call
xchg
xor
jne
cwde
rol
call
xor
jmp
jle
adc
or
sub
and
and
add
neg
inc
je
push
jp
addr16
pop
mov
ins
mov
push
add
sbb
pop
mov
stc
ror
pusha
xchg
dec
cli
mov
adc
je
or
dec
dec
in
movs
test
pop
push
lock
call
sbb
adc
jae
imul
lock
jnp
mov
or
popa
loop
sbb
sbb
fs
sbb
in
jne
jne
cmp
aad
mov
fmul
add
jnp
push
jne
mov
mov
inc
int3
test
push
in
and
pop
or
pop
cld
rcl
in
push
pop
je
(bad)
sub
adc
mov
shl
sub
pop
xchg
mov
jbe
sahf
add
mov
jmp
or
cmovl
mov
dec
fs
cmp
pop
scas
sub
pushf
(bad)
jne
xor
and
in
mov
mov
fdiv
fadd
lea
push
sub
sbb
push
xor
xor
in
sti
xor
or
push
ret
pop
xchg
ret
push
rcr
(bad)
leave
sahf
jge
jl
aas
ins
test
push
jb
pop
or
push
add
xor
pusha
lahf
adc
xor
or
test
mov
and
(bad)
mov
clc
es
add
loopne
test
scas
push
mov
jnp
rcr
mov
sbb
popa
test
loopne
push
mov
push
xchg
dec
dec
cmp
dec
in
add
add
pushf
pop
movs
ror
std
adc
fs
es
cs
mov
(bad)
in
sbb
fld
and
mov
fwait
pop
sbb
pop
repnz
adc
sbb
or
and
js
cmp
or
test
and
dec
enter
es
dec
in
adc
fs
mov
and
fnstsw
and
dec
inc
push
pop
repz
rep
hlt
call
test
adc
repz
jnp
mov
out
sahf
out
dec
and
pop
sahf
out
sahf
ins
aad
mov
(bad)
jg
mov
in
add
add
push
pop
push
nop
(bad)
add
or
or
or
and
shr
shr
cmovns
adc
sbb
and
sbb
je
clc
sbb
fisttp
mov
add
jae
add
into
adc
stc
push
mov
or
rcr
mov
arpl
ins
lods
pop
fistp
es
sbb
mov
add
cmp
jbe
sub
sbb
cmp
(bad)
mov
sub
jb
jmp
jg
pop
or
push
push
xchg
outs
push
fsubr
or
add
add
mov
pusha
loopne
int3
adc
imul
(bad)
loopne
ins
xor
sbb
leave
push
(bad)
shl
or
add
jo
xchg
xor
cmps
dec
xor
repnz
shl
jns
sub
pushf
cmp
hlt
sub
psubusb
sbb
retf
sub
push
jo
push
div
adc
push
pusha
add
jb
xor
jmp
imul
in
or
push
out
add
and
dec
push
cmc
or
mov
push
adc
inc
fisub
and
lea
mov
sbb
add
xor
mov
in
call
push
mov
ror
mov
xlat
out
leave
imul
pop
jl
popa
ret
sub
push
xor
jo
repnz
xlat
mov
aaa
and
inc
les
xor
mov
mov
and
inc
push
outs
dec
ret
loop
pop
cmp
xor
jg
pop
dec
xor
jno
add
sahf
add
nop
sub
dec
adc
sbb
inc
in
push
push
cmp
ss
pop
inc
loopne
sbb
or
sbb
mov
pusha
sbb
add
dec
push
push
adc
sub
call
out
stc
ficom
mov
aaa
push
mov
(bad)
dec
and
or
and
sbb
loop
(bad)
call
or
rol
xor
push
jp
imul
lock
xchg
retf
push
daa
sub
cmps
push
cmp
jae
or
push
add
cmp
aas
push
sub
xor
data16
push
cs
adc
pand
xor
and
push
repz
jns
shr
jb
je
in
and
jbe
sub
sbb
hlt
(bad)
mov
pop
jns
shl
sbb
push
mov
push
gs
jns
leave
shl
pop
add
outs
mov
xchg
push
ret
clc
pop
fimul
rol
pop
outs
pop
add
dec
xor
or
scas
sub
xchg
xor
or
inc
loop
add
jmp
ret
mov
or
mov
imul
lea
push
fist
cmp
imul
outs
inc
mov
xchg
retf
in
jno
inc
dec
dec
push
mov
add
pop
lods
sbb
jo
push
pop
mov
sbb
dec
aas
mov
aaa
mov
cld
pusha
pop
call
std
push
mov
ret
imul
sbb
adc
mov
xor
and
xor
mov
add
push
leave
mov
test
call
enter
mov
push
mov
ror
or
or
mov
rcl
jns
cwde
nop
pop
mov
test
and
ror
test
cs
ret
dec
and
sub
push
xchg
mov
adc
js
and
jbe
retf
inc
mov
mov
pop
inc
in
loop
cmp
inc
imul
nop
and
inc
pop
sub
adc
mov
mov
ss
push
lea
cmp
or
ret
sar
shr
mov
mov
popa
or
or
adc
adc
imul
pop
cs
retf
or
lock
add
mov
or
imul
jmp
or
add
adc
sub
sub
imul
les
inc
shr
xor
add
inc
lea
add
add
cmp
or
add
ficomp
les
nop
arpl
mov
mov
and
lock
push
add
mul
cmp
push
or
icebp
shl
and
call
rcr
inc
rcl
aam
out
aam
ret
mov
push
call
pop
adc
or
call
sub
add
pusha
xor
push
pop
daa
shr
push
or
test
add
mov
ss
aas
imul
popa
cmp
nop
cmp
push
(bad)
mov
arpl
call
shr
or
mov
inc
clc
add
dec
(bad)
mov
sub
lods
and
xchg
or
in
jl
inc
inc
mov
imul
dec
dec
lock
je
xchg
or
retf
dec
jbe
mov
xor
mov
and
or
sbb
inc
sub
pop
pop
enter
adc
hlt
or
jecxz
xor
dec
jae
ror
je
cmp
hlt
inc
mov
push
ds
les
push
in
add
sbb
dec
sbb
add
mov
inc
jmp
push
push
push
add
ja
repnz
cmp
pop
mov
jle
push
loopne
xchg
sub
rol
mov
xor
pop
add
add
or
dec
mov
cmp
sub
mov
out
or
and
jmp
repnz
int3
mov
movs
or
cwde
push
scas
bound
adc
repnz
popf
mov
mov
adc
xchg
mov
push
pop
sub
in
dec
cmp
pop
in
cmps
icebp
inc
ror
movsx
stos
je
xchg
and
sub
and
out
je
inc
or
sub
inc
cmp
push
xor
mov
fwait
pop
(bad)
fist
and
(bad)
xor
shr
add
shl
or
je
mov
bound
jbe
sbb
dec
pop
scas
aaa
dec
xor
mov
fcomp
or
(bad)
inc
cdq
push
cmp
pop
inc
punpckhdq
(bad)
and
lahf
mov
push
mov
add
cs
mov
ret
fisttp
mov
pop
cdq
push
cwde
js
cmp
push
xor
mov
xchg
inc
dec
and
pop
jl
xchg
inc
fistp
mov
add
pop
(bad)
sub
mov
pop
add
rol
popa
mov
adc
pop
shl
div
dec
nop
push
add
or
jns
jb
mov
add
mov
jg
xor
fidiv
or
mov
or
dec
add
test
fstp
jno
mov
xor
mov
xor
lods
sar
dec
jne
pop
pop
and
mov
push
and
add
mov
mov
or
je
jne
push
mov
push
fwait
rol
add
mov
adc
jne
inc
cli
lock
mov
rep
les
inc
adc
data16
into
out
add
xor
imul
cmc
or
daa
mov
and
adc
(bad)
inc
je
or
add
(bad)
mov
and
icebp
or
lea
cmp
jae
mov
dec
inc
sub
pop
sbb
cmp
xchg
and
and
mov
cmp
ds
(bad)
in
out
add
daa
popa
inc
push
lahf
fwait
mov
or
je
out
add
pop
pop
sahf
adc
push
dec
dec
mov
add
push
xor
or
pop
daa
call
jg
sub
push
pop
clc
or
shl
mov
cmp
jbe
xchg
and
push
test
sti
push
fmul
mov
adc
test
cmp
jae
adc
jmp
retf
mov
enter
inc
sbb
je
xlat
push
adc
sub
adc
arpl
xor
loope
mov
repz
push
add
adc
(bad)
nop
mov
sub
add
leave
adc
and
in
jno
add
push
repnz
dec
rol
test
jge
mov
push
inc
call
fcomi
inc
ja
adc
wrmsr
push
push
push
outs
rep
repnz
add
pusha
fild
fnstcw
add
pop
std
or
je
inc
into
rcl
ror
dec
int3
mov
test
shr
adc
inc
add
ss
sar
push
xor
push
lock
and
adc
ja
imul
mov
pop
lock
mov
rep
cdq
mov
movs
mov
cs
retf
in
or
adc
jno
pop
adc
sbb
mov
xor
sldt
shr
rcr
sbb
or
lahf
xchg
pop
push
xlat
push
dec
je
imul
movs
hlt
and
add
jbe
or
xlat
cmp
mov
mov
movs
pop
inc
cmp
inc
stos
ds
mov
dec
add
out
cmps
lock
sub
es
xchg
push
push
mov
pop
call
(bad)
hlt
sub
mov
cmp
push
clc
xor
iret
adc
sub
pushf
add
repz
add
pop
sahf
retf
sti
pop
add
add
or
or
jne
mov
xchg
mov
loopne
xchg
xor
mov
or
data16
cmp
adc
xchg
sbb
ror
xchg
xchg
ins
ror
js
add
dec
call
loopne
pop
mov
cmp
xor
inc
xchg
xor
mov
popf
shr
and
adc
push
or
or
add
sbb
js
in
loop
xor
call
adc
or
mov
aad
add
ror
out
or
sbb
adc
jne
lahf
inc
test
pop
jl
push
dec
mov
mov
push
push
inc
sbb
pop
sbb
sbb
sbb
adc
inc
push
push
(bad)
hlt
xchg
push
jmp
ss
inc
mov
mov
inc
ds
and
sar
clc
push
push
data16
push
outs
inc
and
push
xlat
inc
push
fisttp
inc
and
shl
data16
dec
pusha
push
mov
ret
cmp
test
add
sbb
in
or
rcl
dec
push
in
fidivr
or
fadd
loopne
sbb
mov
add
hlt
cmp
es
cmp
jnp
in
dec
or
or
and
mov
and
adc
inc
and
jb
adc
fwait
nop
add
cs
pop
ins
inc
or
test
push
inc
pop
push
inc
jo
fld
or
ds
mov
dec
je
jns
inc
addr16
push
mov
ins
je
jae
cs
sub
cli
xor
sbb
leave
mov
or
inc
daa
dec
repnz
jmp
imul
jb
xor
aas
mov
mov
rcr
int3
test
sbb
cmp
sbb
test
mov
pop
cmp
mov
cmp
jne
inc
inc
sub
mov
xchg
or
sub
add
mov
and
pop
mov
clc
or
imul
xchg
stos
add
sbb
inc
or
aam
add
pop
or
xor
data16
cld
sub
mul
jg
and
pop
ds
repnz
jg
or
mov
(bad)
int3
out
ror
outs
lock
mov
add
sbb
cmp
test
fidivr
and
add
lock
leave
mov
push
add
dec
add
xchg
mov
sub
(bad)
cmp
iret
jnp
dec
xchg
add
add
add
or
clc
mov
sbb
dec
add
cli
cmps
out
push
push
push
adc
sub
adc
push
xor
mov
add
pop
ret
cmp
ficom
jmp
pop
xor
add
push
popa
jp
pop
xor
inc
adc
in
(bad)
fcomip
mov
cmp
dec
jbe
sub
(bad)
cmps
(bad)
sub
push
es
rcl
ss
push
loop
xchg
gs
movs
or
jmp
ror
adc
ret
out
call
cmp
inc
loop
jne
std
test
cmp
jno
fdiv
pop
cli
call
sbb
mov
mov
push
movs
dec
nop
shr
in
or
aas
or
loopne
das
pop
xor
lock
enter
fisubr
aam
popa
adc
mov
stc
and
mov
out
sbb
lea
sub
push
fisubr
outs
cmp
cmp
or
aas
or
bound
pop
pop
mov
fcmovu
mov
add
cld
fadd
popf
clc
sub
pop
cdq
mov
adc
and
stc
jne
dec
in
rcl
out
fadd
jbe
push
lods
mov
ins
sub
rcr
or
and
adc
xor
inc
lea
mov
loope
adc
adc
add
test
inc
sbb
lock
adc
sub
sti
jne
add
popf
jns
inc
sbb
cmp
femms
mov
test
sbb
ret
inc
out
inc
inc
adc
sar
sub
shr
shl
ret
pop
push
push
mov
(bad)
jg
pusha
add
xor
sub
add
cmp
je
push
pop
popf
sub
push
out
add
lods
imul
mov
shr
mov
pop
push
mov
inc
mov
mov
pop
ss
lock
iret
xor
xor
push
les
lea
ins
adc
enter
push
mov
mov
jmp
push
push
nop
jne
or
jge
cmps
mov
fwait
rcl
and
mov
test
pop
and
add
rcr
stc
pop
mov
out
enter
ss
inc
cmp
and
pop
dec
ror
and
popf
es
mov
push
xchg
imul
enter
bound
add
jp
in
mov
and
pop
imul
lock
bound
lahf
mov
inc
xchg
xchg
js
popf
adc
fistp
fidiv
mov
mov
cmp
jge
adc
sbb
xor
inc
fcom
or
jge
jle
clc
out
xor
aam
(bad)
cli
jne
add
mov
dec
rcr
call
mov
dec
sar
sub
push
inc
addr16
sbb
adc
ins
push
sub
xchg
pop
mov
xor
mov
pop
shl
enter
mov
nop
mov
cmp
int
shr
pop
mov
mov
push
mov
mov
fisttp
mov
cmp
cmp
mov
cmp
jl
and
sub
inc
and
dec
sahf
sbb
loopne
sbb
xchg
and
sub
dec
mov
js
ficomp
mov
jne
pop
push
push
xor
es
sti
dec
(bad)
es
cmp
clc
dec
mov
jo
mov
(bad)
adc
shl
inc
add
shl
cs
or
fmul
jle
ud0
lds
in
inc
aaa
cmp
mov
dec
or
sub
pop
and
call
and
dec
or
mov
fsub
jg
arpl
dec
mov
pusha
pop
jmp
rol
jl
call
pop
add
adc
push
mov
mov
jne
cmp
jbe
pop
xor
mov
cmp
add
test
push
jne
shl
retf
xchg
cld
jle
mov
sbb
cmp
out
xchg
jmp
mov
movs
iret
jne
nop
mov
mov
push
pop
mov
push
or
rcl
ins
sub
push
jl
call
pop
or
gs
inc
pop
sub
or
repnz
add
add
lock
inc
push
gs
sbb
std
cmp
mov
mov
mov
or
test
inc
lock
cmp
jne
lods
cmp
cmps
push
or
pop
fdiv
dec
push
adc
pusha
or
mov
into
mov
int3
or
repz
pop
adc
ffreep
pop
mov
pop
ds
mov
inc
pop
daa
sbb
push
sti
popf
fst
not
pop
sub
mov
(bad)
jmp
mov
adc
mov
cdq
and
or
addr16
sbb
(bad)
ror
adc
sub
popf
adc
mov
add
mov
mov
nop
push
inc
scas
or
dec
mov
ret
jne
and
lods
or
jns
adc
pop
sbb
adc
push
sub
inc
and
test
or
or
or
adc
repnz
mov
iret
out
xchg
fadd
mov
inc
inc
(bad)
enter
lods
ficomp
sbb
mov
add
sbb
jne
jb
push
push
or
aas
into
dec
and
dec
enter
push
jl
imul
pop
ins
and
add
test
jp
cld
dec
nop
aam
enter
cmp
pop
fcom
pop
pop
(bad)
or
or
imul
push
mov
or
mov
or
jo
aaa
ins
sub
ret
add
sub
push
cmc
into
sub
mov
ds
int
add
movs
inc
aam
pushf
jmp
push
push
mov
aas
neg
pop
cmp
jne
mov
push
dec
push
ins
xor
repnz
rcr
jge
sub
add
cld
sub
inc
sbb
xchg
out
jge
je
jae
dec
aaa
and
imul
aas
xor
push
jp
inc
out
or
and
pusha
loope
pushf
mov
sbb
mov
push
cmp
repnz
jne
mov
in
push
cwde
setl
push
and
dec
push
mov
inc
jg
and
cmp
sub
xor
rol
sbb
test
fist
mov
(bad)
pop
fisub
aaa
xor
push
dec
dec
shr
pop
cs
leave
ret
cmp
cmp
mov
jb
mov
dec
push
inc
dec
shl
xor
push
adc
and
xchg
das
jge
jg
stos
cmc
adc
les
fdivr
test
adc
call
add
adc
mov
mov
xor
cmp
jne
mov
dec
and
icebp
mov
out
jns
gs
adc
cmp
sbb
adc
and
stos
jo
(bad)
iret
cmp
jg
call
add
push
scas
in
jbe
mov
xor
retf
mov
or
xor
or
sahf
repz
pop
xor
jno
cmp
into
add
outs
mov
xchg
(bad)
fld
pop
sub
push
adc
shl
pop
cmp
cmp
push
jp
push
push
or
push
imul
ss
or
aaa
cmp
pop
jne
(bad)
mov
int
add
inc
movs
ja
jmp
xor
dec
cmp
add
xor
inc
xchg
sahf
xchg
and
xchg
adc
xchg
out
pop
aaa
ja
cmps
and
cmp
out
xchg
test
gs
aam
or
sbb
shl
add
dec
jl
or
xchg
ret
mov
lods
and
rcl
je
mov
pop
mov
das
fcom
cmp
pusha
or
nop
add
je
jg
inc
sets
dec
loope
dec
test
add
jmp
add
ror
mov
ja
add
push
dec
inc
push
ss
lods
popa
jbe
dec
sub
jmp
popa
mov
sbb
adc
sbb
xor
(bad)
pop
add
jne
leave
push
push
call
mov
mov
xchg
cmp
xchg
inc
fcom
stos
es
pop
les
xor
jb
and
push
int
es
add
les
mov
mov
jmp
les
pop
imul
pop
adc
icebp
cmp
push
sbb
ja
xor
cmp
mov
mov
or
lea
jg
or
cmp
enter
les
add
dec
and
xchg
dec
inc
adc
push
push
push
inc
and
cmp
pop
mov
je
sbb
sbb
adc
push
push
(bad)
stos
fadd
cs
jle
mov
in
sub
adc
cmp
fsubr
xor
or
add
ret
sbb
add
ffree
jb
adc
mov
mov
loop
or
shr
rep
adc
arpl
daa
and
and
adc
pop
jb
out
push
or
rol
mov
pop
mov
arpl
xchg
sar
push
test
push
loop
fcmovb
lock
(bad)
fild
(bad)
imul
push
(bad)
in
push
ins
out
ins
cmps
mov
add
push
push
retf
pop
push
rcr
xor
pop
and
and
or
and
mov
mov
cwde
xor
cs
push
ss
les
das
or
popf
sub
or
adc
fstp
sbb
aas
retf
add
inc
xchg
xor
cmps
das
shl
sub
mov
mov
dec
mov
sub
test
das
mov
mov
stc
push
js
fwait
jne
(bad)
aad
jge
or
mov
jge
dec
jb
test
cmp
cmp
pop
jb
lea
xor
jae
test
mov
push
shl
mov
add
lods
xchg
mov
cmps
adc
jge
(bad)
repz
add
jmp
adc
add
mov
push
jp
jbe
ins
push
fs
lods
movs
and
xor
les
lds
push
call
jp
jae
mov
push
jecxz
call
mov
sub
add
test
jmp
mov
jbe
mov
pop
push
lea
pop
je
pop
xchg
xor
sub
push
call
sbb
aam
aam
add
pusha
add
add
arpl
cwde
xchg
jne
mov
sub
push
sbb
mov
and
pop
jbe
xorps
(bad)
fdivr
xor
push
sub
es
xor
shl
add
mov
adc
or
jae
scas
mov
aad
adc
and
adc
and
js
sub
cmp
cmp
mov
sub
icebp
cmp
sub
lds
pop
pusha
test
retf
pop
or
sbb
(bad)
outs
xchg
imul
adc
adc
inc
add
ja
mov
cmps
mov
clc
imul
adc
inc
lahf
or
add
clc
sub
cdq
adc
xor
dec
push
repnz
lahf
or
push
lock
lds
adc
dec
pop
stc
out
mov
mov
adc
push
xlat
cs
xchg
adc
aas
into
inc
mov
add
sahf
mov
hlt
push
mov
sbb
jnp
sbb
jne
les
jg
add
add
sub
or
adc
mov
xor
xor
sub
out
les
push
pop
int3
or
sbb
icebp
add
aam
or
(bad)
les
add
sbb
lock
mov
mov
cmp
inc
sar
pop
push
cmp
imul
mov
je
mov
idiv
stc
dec
xchg
movs
push
test
push
push
sub
inc
xchg
nop
stos
mov
mov
or
xor
stos
inc
mov
mov
cli
mov
inc
leave
sbb
and
sbb
and
xchg
jg
jl
mov
dec
jbe
jmp
test
fcomp
popf
adc
inc
out
rcr
je
cld
push
push
push
scas
(bad)
jmp
cs
es
js
xor
cs
add
sbb
test
dec
stc
jp
adc
or
loop
sub
push
push
iret
push
xor
std
je
pusha
lahf
pop
imul
fadd
xor
int3
ret
sub
gs
iret
rcr
adc
add
jnp
fidiv
dec
aas
inc
pop
lea
mov
dec
pop
es
into
jbe
bound
cli
fidivr
mov
xor
jp
movs
sti
test
shl
loopne
data16
lods
jg
jge
add
xor
sbb
push
sub
js
(bad)
call
cli
xchg
test
adc
imul
sbb
lea
push
stos
and
arpl
mov
inc
loopne
inc
inc
aaa
dec
mov
inc
pop
daa
hlt
add
retf
lahf
call
adc
stc
sub
pusha
movs
jno
xor
pushf
gs
dec
test
push
fist
lahf
test
cmp
call
push
(bad)
xchg
inc
pop
aas
add
and
pop
adc
fs
add
jmp
add
scas
xor
pushf
cmp
lock
fld
lea
inc
add
test
(bad)
in
sbb
adc
push
mov
xchg
xor
dec
pop
imul
scas
or
ss
pop
jmp
aas
push
sub
cmp
xchg
iret
add
or
adc
and
cmp
dec
jno
sub
pop
or
jecxz
mov
dec
fadd
lds
add
cld
mov
dec
push
xchg
pushf
push
or
mov
or
dec
push
imul
mov
bound
sub
pop
mov
scas
test
cmp
push
adc
pop
push
add
cs
daa
aam
mov
in
mov
jmp
dec
jl
sbb
sti
lea
test
pop
bound
lea
daa
push
je
les
sub
sub
fstp
cmp
lea
ds
mov
ins
mov
and
cmps
ins
cmp
or
cmp
cmp
pop
ja
xor
dec
inc
cld
inc
test
mov
inc
pushf
mov
sbb
pop
aaa
cwde
lsl
or
ss
repz
inc
xor
jo
or
sti
pop
cmps
ficom
mov
(bad)
(bad)
mov
neg
sbb
fild
mov
inc
add
push
jmp
fidivr
bnd
aas
push
cmp
je
mov
add
and
lahf
(bad)
jle
sti
ins
leave
popf
mov
adc
mov
lea
aas
add
cld
push
in
test
or
cmp
jne
cmp
iret
mov
pop
sub
mov
in
pop
inc
fisub
fidiv
jmp
ja
mov
cmp
lea
push
push
pop
test
lods
sbb
adc
gs
dec
scas
and
dec
cwde
ficom
jo
mov
xchg
test
(bad)
mov
cmp
jb
add
push
sbb
jb
fild
mov
cwde
add
hlt
push
or
lock
sub
add
push
inc
mov
sbb
push
and
xchg
cwde
test
adc
sbb
ds
icebp
enter
lahf
adc
cmp
and
mov
xchg
into
popf
mov
cmp
mov
fdiv
mov
lea
sbb
ja
mov
xchg
xchg
cmp
shl
call
mov
sub
push
jmp
or
add
dec
stos
push
adc
or
push
xchg
sub
push
cmps
dec
dec
and
cmp
jmp
push
inc
push
inc
add
inc
push
pop
ror
mov
push
push
mov
nop
xchg
pop
lock
inc
add
sub
sbb
sar
ret
xchg
fidiv
ins
ret
mov
ror
push
push
mov
ins
jae
shl
jmp
test
push
adc
rcl
adc
ins
and
dec
ss
ret
adc
dec
pop
pushf
jp
add
dec
loop
push
(bad)
push
fisub
(bad)
fcom
mov
iret
inc
add
mov
arpl
pop
jb
add
add
iret
cdq
dec
pop
pop
nop
lods
or
mov
test
push
sbb
hlt
xchg
and
sub
cmp
sub
mov
xchg
push
push
ins
jne
and
inc
and
pop
sbb
cmp
sub
push
and
sbb
or
or
rcl
fwait
repz
cmp
pop
xlat
sbb
in
or
fild
push
sbb
js
(bad)
aam
pop
pusha
bound
pop
mov
call
enterw
pop
xor
pop
push
(bad)
cmp
jne
inc
and
xchg
mov
or
push
cmp
adc
and
adc
or
std
imul
sbb
mov
adc
cmp
je
inc
pop
jno
pop
lahf
or
cwde
mov
lahf
fisub
pop
ss
ret
neg
or
sub
xor
aas
cmp
mov
jg
xchg
cmp
leave
sbb
cmp
or
inc
sbb
mov
out
std
xor
loopne
outs
jg
jne
push
xor
mov
mov
lock
rcl
and
xor
lods
fsub
shl
dec
or
mov
push
aas
mov
inc
ds
xor
ficomp
jnp
push
push
push
or
inc
pushf
nop
add
lods
adc
adc
xor
inc
add
out
jo
das
sbb
pop
das
adc
pop
sbb
mov
mov
int3
or
jmp
loope
xor
or
and
cmp
test
add
add
add
push
push
ret
out
outs
cmp
cmp
mov
sub
pusha
dec
mov
jle
into
scas
xchg
and
push
les
cld
jbe
xchg
stos
and
inc
xor
jge
test
cmp
xor
jge
lds
retf
inc
movs
fcom
je
fs
fnstenv
mov
jae
sbb
cmp
ins
mov
idiv
jmp
sbb
dec
jb
in
mov
pop
ja
mov
outs
iret
xor
cmp
in
or
int3
xchg
or
(bad)
mov
jmp
and
xor
pop
cmp
push
jae
sbb
movs
imul
jo
test
sub
mov
sbb
dec
add
fcom
dec
adc
nop
sub
ret
cmp
dec
sahf
pop
push
or
ss
jno
jmp
add
cmp
aam
or
loope
movs
dec
add
(bad)
add
mov
(bad)
mov
push
inc
push
sbb
arpl
and
xor
inc
cmps
sti
or
retf
pop
adc
and
es
fidiv
popf
cdq
pushf
pop
sbb
push
add
adc
fiadd
sbb
and
inc
mov
jno
fwait
jp
push
pop
ret
jg
push
mov
inc
add
xchg
pusha
es
or
dec
xchg
arpl
and
inc
or
std
inc
push
push
test
sub
jp
lea
rcl
xchg
mul
or
pusha
add
je
shr
dec
mov
out
inc
dec
cld
xor
inc
ret
das
adc
xchg
bound
pop
and
add
ret
adc
ret
out
nop
test
ror
ins
lods
adc
add
and
pop
and
push
out
mov
or
mov
fild
mov
scas
mov
or
icebp
jo
add
jmp
nop
test
sub
and
popa
mov
ret
mov
jnp
sahf
cs
imul
push
mov
push
repnz
jo
daa
jne
lock
adc
pop
popa
ja
(bad)
aaa
adc
mov
or
mov
(bad)
pop
call
lock
and
ret
adc
cmp
or
sbb
add
sub
lock
xor
scas
dec
(bad)
push
call
adc
scas
dec
pop
adc
add
mov
xchg
pop
je
inc
mov
jp
add
push
fcom
ja
pusha
mov
push
jmp
les
mov
loop
push
xchg
out
or
sbb
pop
loopne
call
dec
or
stc
pop
je
add
and
adc
inc
or
or
or
jp
mov
in
adc
xchg
mov
sbb
mov
jmp
(bad)
xchg
sahf
icebp
fchs
add
adc
add
xor
push
out
inc
mov
pop
dec
repnz
mov
sbb
cmp
je
dec
push
pop
inc
hlt
cmp
loopne
aas
lock
push
pop
mov
inc
cmp
adc
cmp
ret
jmp
scas
test
int3
adc
cmps
or
loope
nop
mov
call
adc
jo
fsubr
int3
mov
ret
ror
jo
or
dec
xlat
add
cwde
mov
push
dec
js
stos
add
jo
dec
or
mov
in
mov
fadd
or
bound
pop
add
sub
jl
add
dec
push
sub
mov
jo
adc
dec
adc
fdivr
push
push
add
dec
add
loope
adc
clc
call
inc
adc
and
add
pop
cmp
cmp
pop
xor
cmp
cmp
mov
inc
cmp
add
jb
repnz
xchg
push
push
pop
(bad)
mov
in
popa
lds
lea
dec
cmp
add
or
add
mov
or
or
nop
nop
ucomiss
or
lahf
or
lea
inc
push
mov
xchg
and
mov
sti
xchg
adc
in
sbb
inc
mov
and
pop
cli
or
ret
ds
or
adc
cli
pop
rcl
inc
test
je
push
jecxz
fsubr
or
push
xor
push
inc
addr16
cmp
jne
lahf
sbb
xor
sub
icebp
jns
cli
pop
test
jecxz
and
xchg
inc
outs
dec
imul
mov
xchg
push
pop
push
add
dec
dec
adc
add
iret
push
dec
outs
adc
out
mov
pop
or
adc
adc
popf
sbb
add
xor
popa
xor
push
push
push
inc
cdq
mov
add
add
or
cmp
into
xchg
xchg
cwde
or
xchg
mov
push
call
sbb
fmul
mov
test
or
aad
push
add
out
cmps
cld
or
add
les
cmp
je
mov
retf
sub
mov
and
mov
hlt
mov
add
loopne
out
xchg
and
push
add
fsubr
or
jae
push
push
sbb
(bad)
xchg
adc
adc
jge
mov
aad
int3
adc
repnz
aaa
add
inc
adc
js
adc
jl
mov
push
and
ret
pop
je
inc
push
fadd
pop
add
mov
adc
ret
popf
jmp
cmp
mov
sar
mov
lea
mov
(bad)
daa
push
mov
or
inc
or
repz
dec
cmp
mov
test
dec
xlat
pop
(bad)
ins
imul
add
je
xor
mov
(bad)
push
jns
mov
jno
gs
and
adc
sbb
aam
pop
pop
add
xchg
or
jns
xchg
xchg
loopne
pop
mov
jnp
and
pop
push
scas
and
add
jmp
add
add
ret
or
enter
jno
repz
ret
cmp
inc
pop
cmp
jle
jns
aas
call
or
test
mov
add
push
or
xor
cmp
cmc
rcl
iret
add
imul
sub
cmp
push
inc
sbb
push
sub
adc
sub
cmovge
push
jg
lods
or
add
jl
popa
inc
xor
sub
cmp
pop
loope
ds
push
popf
mov
jle
mov
sbb
sbb
mov
push
adc
outs
cwde
push
in
jg
pop
rcr
dec
jmp
fisttp
add
push
jg
inc
shl
jo
jne
xor
and
push
or
jmp
cmp
pop
xor
and
jns
daa
mov
bound
push
xchg
div
push
loop
test
shl
nop
jg
icebp
fcom
pop
jecxz
or
lea
lock
add
push
pushf
pop
push
ret
inc
sbb
rcr
and
pop
and
test
dec
out
dec
inc
out
sbb
xchg
pop
mov
push
pop
sub
mov
inc
inc
das
sbb
je
push
in
ror
mov
cli
and
dec
test
pop
pop
dec
call
sbb
in
xlat
dec
sub
cmp
test
jp
sub
sbb
outs
mov
cmp
cmp
push
adc
pop
jl
or
pop
push
or
add
pusha
push
pushf
jb
xchg
test
iret
fisubr
jno
mov
dec
mov
inc
and
mov
or
mov
lock
shl
cmp
arpl
repnz
xchg
test
mov
(bad)
adc
sbb
imul
pop
mov
xchg
imul
aam
inc
sbb
mov
push
pop
sbb
push
imul
bound
sar
mov
push
pop
fstp
jae
sbb
retw
adc
in
sub
pop
sub
sbb
cmp
pop
xor
(bad)
pop
mov
lds
and
loope
cmc
sbb
mov
adc
mov
xchg
sbb
mov
mov
sbb
mov
push
or
cld
mov
push
sub
xchg
imul
js
pop
sbb
ret
mov
xchg
lds
inc
mov
je
bound
or
mov
lods
test
out
xchg
lea
mov
adc
popf
jmp
retf
(bad)
int3
call
iret
jp
stos
push
fnstenv
pop
fnstenv
xor
shl
cmp
sbb
or
lods
mov
adc
and
push
retf
pop
sbb
ret
call
mov
test
pop
mov
fisttp
add
mov
push
push
jecxz
pop
data16
jno
add
mov
and
mov
movs
inc
aas
movs
push
imul
(bad)
or
pop
sbb
xor
test
sbb
sbb
and
xor
sbb
sbb
inc
fiadd
cmp
lea
sub
jmp
lahf
test
and
add
push
pusha
call
jae
std
aas
push
push
retf
or
add
sub
push
xadd
dec
test
jg
ret
aaa
sub
in
sbb
test
or
arpl
or
aaa
test
xor
arpl
jl
jp
adc
sub
mov
or
or
in
jo
pop
inc
adc
test
les
add
xor
test
bound
js
cmp
adc
jmp
imul
xor
xor
mov
or
test
push
cmp
in
jbe
push
cmovnp
sbb
lock
inc
xor
or
sbb
jo
pop
dec
ins
xchg
add
or
cmp
nop
pop
push
and
cli
mov
bound
push
cld
add
sbb
add
mov
push
xlat
jp
xlat
pop
jae
std
adc
retf
mov
pop
xor
mov
xor
push
mov
push
mov
outs
mov
push
test
mov
adc
movs
push
pop
lea
add
mov
dec
or
inc
jne
enter
fmul
pop
mov
ins
jp
retf
call
inc
add
ficomp
adc
add
adc
paddw
lea
jle
push
lea
push
mov
xor
pop
pop
cmp
xchg
test
pop
or
and
icebp
sbb
mov
jb
aaa
push
add
movs
(bad)
mov
in
hlt
cwde
fdivr
or
xor
test
sbb
jno
jl
lds
jecxz
shl
push
sbb
mov
(bad)
sbb
add
push
add
mov
mov
xor
sbb
mov
push
mov
movs
push
mov
ins
gs
outs
and
lea
das
mov
int
sbb
outs
int3
rcl
outs
fadd
mov
pusha
mov
bound
jne
push
or
cmp
in
(bad)
and
shl
mov
cwde
in
pop
dec
(bad)
pop
mov
push
push
fdivr
pushf
push
stos
not
(bad)
shl
cwde
cmp
jne
add
jmp
jecxz
frstor
and
pop
or
add
inc
and
scas
dec
stos
mov
mov
scas
pop
(bad)
scas
fisttp
(bad)
gs
pop
std
add
outs
aad
dec
push
adc
sub
outs
in
push
jmp
test
sbb
add
call
push
lea
mov
jmp
pushf
pop
in
icebp
gs
add
mov
das
pop
ins
mov
add
cmps
sub
mov
cmp
in
or
bnd
inc
pop
ret
push
ret
aas
iret
inc
push
sub
cld
sbb
test
mov
pop
cmp
and
or
pusha
lds
push
out
adc
lock
rcr
pop
or
xor
mov
jne
xlat
shr
pop
mov
setle
dec
test
aas
push
ret
push
sub
rcl
mov
mov
jle
pop
hlt
loope
mov
sbb
inc
inc
cmp
clc
inc
in
cdq
dec
mov
jnp
adc
aam
in
mov
shl
add
pushf
dec
pop
add
and
adc
and
mov
or
add
add
add
dec
loopne
shl
fwait
dec
jnp
or
enter
adc
adc
and
pop
adc
adc
bound
nop
mov
sbb
sbb
cwde
popw
adc
lock
push
imul
dec
mov
dec
cmp
ss
sbb
adc
push
cs
add
mov
push
pop
enter
pop
js
ret
push
jo
fisttp
fild
jmp
xor
add
inc
adc
dec
adc
xor
add
div
test
sbb
out
push
adc
and
daa
int
mov
fwait
inc
add
cmp
xor
adc
aas
aas
adc
nop
out
arpl
adc
adc
adc
adc
adc
movups
adc
adc
dec
scas
adc
adc
and
lahf
adc
adc
adc
imul
imul
adc
dec
fidivr
aas
adc
retf
xchg
dec
jp
aas
adc
adc
jb
cmp
adc
mov
(bad)
cmc
or
lds
fiadd
daa
pushfw
xor
aaa
cld
push
xchg
dec
mov
push
adc
loop
fxch
dec
aaa
inc
mov
(bad)
xchg
jne
(bad)
rcl
mov
movs
push
adc
pop
add
js
call
pop
add
adc
push
push
push
ret
jge
push
and
adc
cwde
ret
cmp
outs
mov
imul
adc
add
push
enter
mov
xchg
in
jb
adc
lock
mov
mov
rol
je
push
pusha
dec
and
imul
add
test
or
je
das
pop
stos
jo
lods
fdivr
push
lds
inc
mov
aam
or
add
and
add
outs
jb
stos
sub
lock
clc
jne
fimul
(bad)
jecxz
cmp
enter
mov
movs
and
mov
xor
sub
shl
adc
inc
pop
push
mov
repnz
das
push
or
xchg
push
or
fdivrp
call
imul
mov
or
iret
sub
int3
mov
push
mov
mov
je
jmp
xchg
or
pusha
and
in
inc
push
lahf
add
adc
xchg
repnz
jne
xor
mov
push
shr
stos
adc
jb
jo
inc
cmps
pop
test
add
xor
xor
xchg
xchg
adc
rcr
adc
movs
repnz
ret
jb
(bad)
lahf
mov
mov
pop
adc
xchg
jl
add
dec
cmp
ret
pop
adc
inc
push
add
push
or
ins
add
ins
jne
mov
xchg
pop
or
mov
mov
je
mov
pusha
adc
movs
push
stc
adc
push
pop
push
adc
push
adc
cld
adc
cs
adc
adc
fs
adc
adc
scas
sub
mov
aas
pop
adc
dec
ror
jne
aas
mov
mov
dec
add
and
mov
movs
add
inc
mov
sub
(bad)
test
or
call
dec
int
push
jb
cli
repnz
jmp
cmp
int3
(bad)
pop
xchg
mov
ret
inc
add
sbb
(bad)
sar
push
arpl
mov
add
(bad)
adc
dec
adc
inc
inc
ret
mov
ins
inc
sbb
jmp
inc
inc
mov
adc
sub
cmp
cmp
inc
jg
repz
or
mov
loope
je
mov
fs
jg
shl
cmp
jg
push
and
jle
aam
imul
add
or
fsub
aam
xchg
dec
gs
pop
or
jge
test
hlt
hlt
fadd
rcl
imul
pop
adc
movzx
push
push
push
mov
and
adc
das
loopne
in
jno
sbb
pop
mov
sbb
test
mov
or
dec
test
(bad)
cmp
ret
stc
mov
call
push
sbb
dec
pop
call
(bad)
mov
ret
loop
dec
mov
lea
repnz
(bad)
outs
and
in
lods
inc
push
cmc
and
sbb
pop
sbb
lods
mov
inc
mov
mov
(bad)
fdivr
pop
push
(bad)
or
ja
inc
add
or
push
push
add
dec
push
add
lds
fld
add
add
add
push
add
add
pop
jge
mov
and
push
push
push
hlt
adc
lds
lock
repz
push
cld
or
push
inc
jns
mov
scas
clc
test
pop
add
ror
retf
cmc
pop
push
push
fs
aaa
or
rcpps
push
cdq
jl
(bad)
pop
sbb
cmp
jg
mov
pop
cli
add
pop
push
lods
dec
push
and
push
adc
mov
je
cmp
jge
sub
add
push
aam
mov
sbb
scas
lock
ret
or
or
leave
pop
mov
nop
addr16
push
push
in
inc
lock
pop
hlt
nop
push
retf
inc
or
fdivr
mov
or
adc
data16
add
int3
or
lods
push
loope
push
push
test
pop
cmp
les
push
or
or
xchg
adc
mov
xchg
xchg
or
je
cwde
mov
add
test
push
cmp
jle
outs
or
or
in
inc
clc
cmp
cmp
sbb
stc
movs
mov
add
pop
mov
enter
mov
pop
fadd
or
mov
push
mov
clc
sub
or
jge
xor
inc
into
mov
les
rol
or
pop
clc
cwde
ror
cdq
jb
xchg
ror
jo
xlat
inc
lods
sub
sar
call
push
inc
push
or
outs
ret
or
int
add
mov
dec
push
cmp
ja
lea
mov
adc
sbb
shr
push
pop
pop
mov
sbb
out
movs
push
or
pop
adc
(bad)
fadd
xor
aad
jge
add
inc
or
call
loopne
stc
(bad)
(bad)
out
call
stc
adc
and
and
mov
sub
mov
jo
cmp
(bad)
mov
cmp
dec
adc
jo
push
xlat
adc
add
sub
mov
add
ja
hlt
enter
add
adc
call
jbe
iret
push
inc
pop
cmp
jg
cmp
dec
dec
loop
jne
sbb
add
add
and
pop
xchg
mov
(bad)
sbb
inc
pusha
and
int3
xor
lahf
les
int
jnp
adc
and
cwde
jo
stos
loope
dec
loope
or
jbe
pop
mov
fimul
cmp
sbb
or
inc
add
fld
or
shr
sbb
pusha
add
and
dec
lods
(bad)
sub
jo
cmp
cmp
and
(bad)
or
add
mov
lea
shl
pop
adc
iret
add
sbb
dec
jb
xor
xor
adc
(bad)
fidivr
jl
inc
bound
in
(bad)
jmp
sub
dec
test
sbb
mov
pop
jo
inc
and
and
lea
sub
cmp
je
ss
jl
pusha
adc
cmc
cs
pop
or
enter
mov
pushf
pop
hlt
fistp
push
pop
inc
mov
cmp
xchg
mov
cmp
sti
xor
mov
ror
jnp
mov
push
shl
pop
sub
or
addr16
mov
js
enter
mov
add
mov
test
and
cmp
lea
push
or
mov
loope
in
in
mov
mov
jne
sub
mov
(bad)
je
cmp
cmp
sbb
(bad)
xchg
iret
adc
cld
jae
out
add
xor
hlt
push
lea
(bad)
push
mov
inc
or
pushf
sbb
ja
and
aam
jne
lea
and
cmps
int
pop
dec
cdq
popf
ret
inc
xlat
mov
mov
lea
jmp
mov
sbb
test
fnstsw
jmp
push
movs
test
test
aam
lods
or
outs
add
in
mov
cmp
ror
mov
xchg
sbb
mov
push
hlt
lea
mov
in
adc
or
mov
add
jb
fcom
rcl
jb
push
in
lock
mov
dec
push
shl
mov
cli
je
inc
ds
push
push
add
push
adc
nop
push
pop
fadd
fs
sub
sbb
dec
cs
push
push
dec
les
cmp
enter
sbb
popa
cmp
call
test
push
mov
test
ins
jne
scas
test
call
sbb
es
arpl
dec
xchg
stos
lods
sahf
loope
pop
paddusw
mov
jmp
cmp
imul
or
push
push
and
add
aas
jmp
stc
or
xchg
ror
jmp
test
ror
cld
jmp
pop
xchg
and
and
fistp
ror
xor
out
add
loopne
or
clc
xchg
fst
std
jo
mov
lods
sub
in
lds
xor
pop
jl
movs
cli
enter
jb
shr
repnz
dec
icebp
clc
jl
out
mov
mov
sbb
test
push
mov
mov
scas
lock
(bad)
cmp
fstp
(bad)
xchg
push
or
cs
sub
inc
outs
push
add
jne
adc
xor
sbb
adc
mov
mov
inc
data16
sar
call
loopne
push
dec
test
scas
pusha
pop
mov
pop
or
lahf
adc
cmp
mov
adc
ins
xchg
inc
sub
imul
xor
xchg
and
xor
mov
(bad)
push
iret
dec
js
adc
iret
dec
adc
push
lea
mov
shl
dec
enter
and
aas
jns
lock
lock
stos
(bad)
gs
adc
add
test
cmp
dec
nop
xor
arpl
or
(bad)
lds
shr
cmps
cmp
sub
xlat
dec
xchg
aas
cmp
lea
mov
and
out
aaa
sub
xor
lea
fwait
shl
add
hlt
mov
or
mov
les
mov
ins
dec
inc
push
sti
push
push
inc
and
cmc
fld
lea
dec
pop
lea
aad
scas
cmp
sub
icebp
mov
stc
mov
shl
call
inc
in
inc
loop
dec
pusha
xor
pop
inc
bound
cmp
or
xchg
setb
and
out
cmp
stos
test
cmp
push
fstp
dec
aas
pop
(bad)
ss
mov
loopne
inc
test
or
cmp
(bad)
scas
and
pop
fdiv
jmp
mov
mov
mov
xor
(bad)
push
repnz
add
cmp
lock
mov
rol
sub
rcr
js
mov
repnz
sub
nop
cmp
setbe
mov
push
mov
ds
lock
or
fdiv
jle
xchg
push
shr
dec
xchg
and
sbb
mov
xchg
ja
popf
xor
test
(bad)
stos
stc
mov
call
je
pop
idiv
or
rcr
xor
call
sbb
jnp
inc
daa
sbb
fcomp
loope
xchg
xchg
xor
push
test
jmp
stos
pop
(bad)
sbb
push
pop
add
adc
jl
and
xchg
jmp
cmps
pop
dec
inc
ds
rcl
adc
inc
fcom
pop
mov
lea
(bad)
dec
(bad)
mov
jo
xchg
movs
nop
adc
sbb
hlt
jge
xor
int3
inc
test
dec
push
jmp
imul
cmp
push
jl
xor
sub
inc
clc
add
sbb
(bad)
lea
inc
inc
adc
dec
mov
aaa
or
add
and
sbb
daa
sub
pop
(bad)
(bad)
fsub
in
dec
push
fsubr
xchg
aas
lock
jg
adc
dec
mov
repnz
pushf
jne
jmp
shr
add
mov
push
lock
adc
or
mov
sub
xchg
xchg
cmc
shl
dec
mov
jecxz
and
or
adc
inc
sub
jle
xchg
pusha
adc
or
add
fdiv
xor
sbb
or
and
ja
fsub
bound
cmp
mov
pop
test
pop
popa
es
test
jno
dec
inc
add
xchg
or
iret
fisubr
push
jbe
mov
cmp
sub
enter
cli
or
jae
test
adc
push
cmp
fisubr
fld
sti
adc
dec
mov
cwde
mov
inc
or
js
aas
adc
adc
mov
bound
mov
inc
add
or
sub
push
ror
sbb
jle
jl
inc
enter
mov
dec
dec
int3
push
mov
call
add
jb
add
jo
push
sbb
sahf
add
es
aam
push
(bad)
add
pop
push
call
mov
mov
sbb
add
push
push
add
and
mov
mov
dec
mov
mov
mov
mov
xchg
in
ror
lock
inc
mov
(bad)
add
jmp
mov
ja
sbb
fadd
les
cmp
in
and
xor
les
xor
jg
sbb
and
mov
and
les
add
in
pop
enter
and
mov
pop
bound
les
in
lods
sti
mov
add
loope
dec
pop
lods
(bad)
frstor
mov
dec
and
mov
aam
int3
(bad)
leave
dec
popa
xor
push
push
sub
push
add
(bad)
gs
push
data16
scas
je
test
fs
or
xchg
retf
mov
test
sbb
xchg
lea
cmps
repnz
xchg
sub
dec
pop
movs
mov
enter
rcr
(bad)
jge
adc
push
jg
or
les
add
lahf
scas
inc
daa
pop
retf
mov
loop
push
fcomp
pop
loope
stc
sbb
scas
daa
inc
dec
push
rol
add
or
pop
mov
das
adc
sbb
sbb
and
test
add
cwde
adc
mul
lds
clc
mov
push
mov
clc
in
and
mov
mov
cmp
xchg
cmp
pop
aad
cli
sar
ret
push
sub
pop
adc
loop
mov
sub
mov
mul
add
jge
push
sub
cmp
sti
dec
pusha
call
retf
in
cli
scas
cmp
dec
je
cmp
jnp
adc
cmp
inc
mov
cli
cmp
adc
inc
ss
(bad)
pop
arpl
loope
adc
add
test
cdq
mov
outs
icebp
mov
pop
sub
jnp
outs
cmp
call
inc
inc
mov
and
sbb
test
or
in
fisub
xor
push
enter
ja
jecxz
movs
mov
push
mov
add
sub
jmp
push
or
bound
and
adc
xor
in
(bad)
sti
inc
imul
popf
and
and
repz
mov
loope
into
push
and
(bad)
je
cmp
loopne
jne
fcom
or
mov
add
imul
mov
test
movs
jo
jg
cdq
int3
mov
fst
mov
mov
jl
enter
mov
xchg
push
sbb
cmp
je
in
dec
ret
xor
lea
mov
or
pushf
xchg
mov
fistp
in
mov
cmp
mov
int3
addr16
popf
adc
mov
pop
clc
lds
push
push
sbb
or
test
bound
ds
test
inc
in
maxps
repnz
(bad)
dec
push
xor
add
mov
fild
xor
adc
(bad)
arpl
(bad)
mov
cmp
pop
out
sub
push
mov
and
xor
xchg
xchg
test
mov
push
sbb
pop
aam
mov
imul
mov
ins
or
sahf
cmp
shl
dec
add
xcrypt-cfb
cmps
movs
nop
ds
gs
out
jge
shr
dec
es
pop
pusha
fs
xor
fnclex
inc
mov
mov
sub
mov
inc
or
fistp
push
mov
push
cmp
jl
xlat
cmps
or
mov
(bad)
pop
jns
pop
add
pop
mov
outs
ret
adc
out
lods
sub
xchg
push
or
push
jbe
sub
xchg
and
push
mov
pop
movs
leave
sbb
or
daa
outs
gs
mov
xor
xor
dec
ror
and
inc
pop
and
sub
adc
pop
retf
add
add
add
pop
xchg
aam
or
pop
adc
push
mov
into
mov
mov
pop
mov
inc
into
push
pop
or
aad
push
and
or
sub
inc
sbb
imul
inc
add
mov
mov
mov
mov
call
xor
scas
pop
mov
into
test
pop
or
outs
push
xor
pusha
push
sbb
test
gs
mov
add
std
fdivr
jp
cmp
adc
add
add
jp
xor
lock
mov
sbb
mov
js
add
push
leave
aaa
repnz
test
mov
sti
psllq
ror
jo
adc
inc
rcr
sbb
and
loopne
iret
test
push
sbb
push
and
inc
sbb
or
xor
shl
sub
hlt
inc
sub
sbb
movs
xor
sbb
add
jl
sub
push
(bad)
rcr
test
xchg
push
in
xor
sub
fs
or
or
ja
mov
ins
xchg
inc
cmp
ins
xor
pop
mov
stc
adc
arpl
sbb
lds
pop
jg
inc
call
mov
dec
or
inc
mov
jbe
popf
mov
sahf
xor
cmp
adc
stos
retf
movs
or
sbb
aad
adc
out
gs
shr
mov
inc
rol
or
movs
stos
add
les
lock
xchg
push
adc
call
xor
loopne
lea
push
or
sub
or
inc
mov
lea
outs
or
pop
mov
imul
push
jl
jae
cmp
add
add
ffreep
fstp
lods
aaa
mov
sub
xor
cmp
lods
daa
add
sbb
or
cmp
es
ins
dec
fdivr
cmp
xchg
mov
stos
inc
push
xchg
lods
sbb
pop
pop
and
cwde
pop
push
push
cmp
inc
and
call
push
cmp
cmp
cmp
in
dec
sub
mov
inc
xor
push
cmp
aam
xor
push
jns
sub
or
aam
or
lock
mov
ret
push
sub
sbb
and
push
test
add
mov
jg
lea
stc
push
mov
shl
lea
pop
lods
fcomp
xchg
mov
or
xchg
in
loopne
push
push
mov
inc
push
push
ficomp
mov
jo
retf
movs
xchg
pop
popf
cli
dec
adc
movs
sbb
call
add
mov
mov
inc
inc
mov
lahf
add
xor
push
outs
xor
push
push
xchg
and
test
in
in
(bad)
add
ror
pop
cmp
jae
movs
sub
push
mov
ins
pop
les
retf
daa
int
sbb
or
cld
or
daa
sub
sbb
ret
or
xchg
imul
sub
cdq
dec
cs
dec
pushf
push
push
or
leave
pop
add
inc
jl
or
dec
adc
inc
lods
xor
pop
mov
inc
push
in
jne
or
or
mov
jmp
fadd
jne
add
push
iret
cld
les
mov
inc
es
adc
fidiv
add
leave
out
(bad)
add
sar
xlat
test
outs
mov
sub
ror
dec
loope
jb
sahf
test
rcl
lahf
bound
cwde
mov
aas
jne
push
push
xchg
arpl
bound
js
push
movs
mov
sbb
xchg
adc
js
sbb
sub
cwde
stc
push
jge
scas
mov
dec
(bad)
sub
sbb
add
leave
sub
cmps
ds
mov
inc
or
cmp
daa
lea
fcmovnu
adc
and
dec
xchg
daa
and
jo
retf
jne
pop
clc
cmp
add
fcmovnbe
adc
sar
xor
jg
ror
mov
xor
popa
inc
(bad)
fisttp
pop
mov
test
push
(bad)
or
adc
test
in
rol
or
sub
push
cdq
xor
add
loope
outs
cmps
xor
loope
pop
inc
cmp
cmp
cmp
dec
push
pop
aad
dec
inc
add
push
cmp
lods
add
push
lock
fbstp
sub
add
push
push
adc
or
and
inc
in
xor
sar
add
mov
int3
mov
addr16
(bad)
sti
lds
adc
jo
push
xchg
sbb
inc
mov
nop
or
test
mov
fisub
and
push
xor
fcomi
enter
(bad)
aas
pop
sub
cmp
lea
jl
cmp
pusha
cdq
pop
sub
mov
sbb
dec
hlt
ret
nop
and
inc
hlt
push
push
clc
mov
(bad)
xchg
mov
xor
fadd
aad
adc
mov
test
jge
mov
fadd
(bad)
adc
and
push
push
fnstenv
push
lods
ins
xchg
adc
std
mov
rol
push
push
add
mov
push
sub
jle
push
adc
adc
and
push
jo
sbb
sbb
lods
scas
adc
rcl
add
and
or
test
fmul
and
add
(bad)
mov
pop
xchg
(bad)
pop
cmps
or
sbb
aam
js
mov
and
mov
test
pushf
sub
leave
(bad)
mov
xchg
push
pop
pop
shl
fisttp
xchg
sub
push
icebp
push
pop
mov
lods
and
ja
add
push
push
lahf
pusha
pop
and
das
adc
mov
sbb
and
push
cli
cmp
mov
adc
lock
dec
inc
mov
and
adc
ss
inc
mov
add
jg
mov
ret
or
int
mov
mov
sahf
std
xor
sbb
clc
sbb
add
rcl
je
stc
jmp
dec
fwait
cmp
rcr
ficomp
cmp
push
shl
jbe
xchg
and
test
or
pop
add
push
scas
ins
mov
inc
xor
mov
push
sub
retf
mov
pop
call
inc
inc
xor
push
adc
push
(bad)
in
hlt
mov
mov
pop
cmp
sub
sub
mov
inc
clc
push
dec
xchg
mov
loopne
repnz
pushf
les
adc
push
shl
push
int
fwait
add
pop
xor
sbb
ins
jl
add
out
jb
int
add
push
dec
leave
lock
and
sub
and
loop
inc
adc
int3
mov
cmp
das
inc
lods
mov
cmp
sbb
adc
push
xor
adc
push
pop
sbb
dec
das
pop
pushaw
lea
sub
dec
jae
cmp
xor
adc
std
out
es
(bad)
das
sbb
and
sbb
sub
or
push
call
pop
(bad)
xor
loope
push
push
leave
mov
sub
ret
adc
in
adc
sbb
sub
xor
push
and
cmp
lds
add
or
shl
push
sbb
push
jns
pop
adc
push
inc
mov
sbb
jmp
jne
push
mov
aam
ret
inc
mov
mov
jle
mov
jnp
pop
cmp
inc
daa
lods
repnz
push
fidivr
mov
push
and
scas
ficomp
loope
cmp
or
jb
cmp
pusha
xchg
pop
push
sbb
jge
xchg
cmp
je
stos
sub
xchg
scas
cmp
and
push
pop
xchg
test
les
xchg
sar
es
add
lods
mov
xor
push
xlat
cmc
mov
scas
sbb
xchg
outs
or
mov
pop
jb
pop
test
mov
fs
mov
lock
push
or
or
jbe
dec
xchg
or
loop
popf
test
push
inc
les
mov
in
aas
adc
les
cmp
and
(bad)
(bad)
push
pop
mov
mov
push
hlt
push
or
and
sbb
inc
add
jno
cmp
jbe
xor
adc
dec
sub
xor
cld
pusha
pushf
out
dec
movs
push
shr
xchg
clc
sub
xchg
les
lock
sbb
ret
xor
adc
in
sub
gs
dec
push
inc
enter
cmp
ret
add
xor
adc
ins
jecxz
push
aam
sbb
or
in
jmp
lods
in
retf
push
imul
loopne
add
popf
jge
fwait
cmp
cld
ds
jnp
fs
xor
(bad)
ja
push
mov
ja
leave
inc
or
inc
cmp
push
push
lods
or
nop
rol
xchg
sbb
ja
push
fiadd
mov
mov
xor
test
aas
lahf
push
test
mov
inc
xor
xchg
sbb
adc
add
ja
outs
lods
ficomp
jg
loopne
loopne
jp
jp
cmp
lods
adc
(bad)
call
push
pop
(bad)
clc
jb
xor
dec
pop
call
arpl
movs
rol
(bad)
fimul
mov
test
adc
test
ret
dec
enter
mov
inc
test
(bad)
add
mov
xor
retf
push
push
mov
pusha
sbb
lock
sbb
lock
dec
adc
dec
inc
and
and
xor
les
xchg
lods
dec
ret
dec
sub
or
push
pop
adc
sub
lods
xor
jae
jbe
or
or
mov
lea
mov
inc
or
aas
out
mov
repnz
mov
mov
inc
mov
or
push
mov
enter
pop
adc
and
cmp
dec
or
mov
adc
stos
hlt
add
test
pusha
push
xchg
and
mov
xor
shld
jo
jg
mov
push
cwde
cmp
pop
mov
mov
fld
jmp
jl
sahf
jne
test
dec
and
and
or
inc
adc
sub
lea
jae
mov
dec
in
add
hlt
jl
stc
ret
ins
aam
retf
test
lock
and
sbb
ret
int3
and
sbb
imul
cmp
aam
inc
push
aad
iret
or
(bad)
cmp
push
dec
sub
cmp
xchg
je
mov
add
xchg
jns
and
hlt
push
cmp
fmul
shr
int3
in
and
jmp
cmc
outs
ret
jecxz
jl
stos
daa
lods
dec
sbb
jns
push
mov
sbb
(bad)
adc
pop
call
or
push
loopne
or
and
ins
sub
fwait
jnp
xchg
ja
push
jmp
adc
call
add
inc
cli
and
test
or
movs
cdq
add
and
nop
sbb
push
mov
cli
fcmovnu
add
xor
mov
inc
dec
jl
adc
push
xor
stos
jmp
mov
fdivr
mov
cmp
jne
lea
aad
jmp
push
ror
sbb
mov
xchg
sahf
push
ss
xchg
add
cdq
xlat
(bad)
xor
enter
sbb
xchg
scas
push
xchg
adc
ror
repz
dec
xchg
out
jl
cmp
cmps
mov
jp
sbb
push
or
call
sub
pop
ror
cdq
mov
or
pop
sbb
dec
adc
pusha
cmp
adc
or
fbld
dec
dec
mov
mov
or
ja
mov
add
mov
jnp
push
dec
and
gs
out
cs
aam
nop
xor
fidivr
push
xor
push
cmp
dec
mov
and
sub
add
dec
add
std
pop
es
adc
adc
mov
lahf
pusha
xor
sar
daa
(bad)
loopne
pop
cmp
je
mov
mov
add
test
inc
inc
jmp
xchg
adc
in
push
xor
mov
(bad)
add
jne
sar
jbe
aas
xor
test
jo
cmp
cmp
xor
out
add
xchg
mov
adc
xor
add
outs
sahf
mov
sbb
jmp
jbe
fsub
jnp
cli
ss
in
data16
aam
add
sbb
imul
pop
adc
aas
or
nop
pop
mov
sar
pop
or
xor
sbb
cmc
xor
xchg
mov
inc
ins
jae
add
mul
pop
enter
or
adc
add
arpl
test
sub
push
mov
add
pop
outs
add
lods
adc
jg
lea
sbb
sub
and
lods
and
fmul
or
lock
jb
add
daa
(bad)
sub
nop
pop
and
loop
daa
in
push
push
push
push
rol
adc
test
mov
push
mov
inc
mov
adc
jmp
adc
xchg
int
add
sub
inc
outs
pop
sub
add
jmp
add
sbb
inc
test
pop
movs
push
add
xor
inc
fs
xchg
jmp
fist
pop
jmp
cdq
add
fwait
clc
push
cld
mov
inc
dec
mov
in
in
mov
lods
inc
dec
add
js
push
dec
adc
sbb
inc
call
pop
xor
fdivr
fcom
xchg
cmp
add
push
dec
das
inc
test
repz
push
push
bound
or
scas
shl
push
xchg
mov
push
sub
add
add
addr16
sub
or
jge
or
sub
cdq
xor
push
push
or
ror
fsub
mov
push
dec
xchg
(bad)
jmp
mov
cmp
ja
jg
aam
test
sbb
push
cmp
xchg
sub
nop
fwait
pop
mov
push
dec
pop
add
jg
push
push
jo
and
(bad)
mov
push
shr
and
inc
add
push
cmp
adc
add
int3
call
push
inc
cdq
inc
mov
or
(bad)
pop
mov
or
push
add
test
js
(bad)
or
ret
add
inc
test
push
js
sbb
or
call
scas
(bad)
mov
or
movs
xchg
or
pusha
xor
loop
push
leave
jns
or
(bad)
iret
enter
xchg
les
cmp
cld
sbb
cmps
lahf
and
inc
or
loop
push
lea
lock
mov
inc
into
xchg
or
fmul
add
shl
cmp
outs
inc
dec
pop
outs
in
pop
mov
push
xchg
imul
div
cmp
cmp
jp
fs
push
sbb
in
jo
arpl
mov
fdivr
pushf
mov
mov
mov
ret
pop
stos
loopne
sub
mov
pop
test
inc
jns
cmps
mov
mov
push
and
enter
mov
or
add
test
jb
sub
loopne
pusha
inc
repnz
add
cmp
and
sbb
pop
aaa
das
xor
or
outs
imul
imul
lock
pop
pop
sbb
or
add
movs
push
sbb
inc
movs
jge
jns
ror
jl
push
stos
or
push
or
and
fisub
xchg
cmps
ret
sbb
or
mov
cwde
movs
loop
retf
mov
mov
stos
pusha
movs
or
rol
fdiv
nop
out
loopne
test
mov
fisttp
lods
adc
adc
test
ret
ret
add
dec
cmp
jno
das
pop
cmp
xchg
adc
dec
xor
dec
inc
pop
dec
jg
inc
cmps
bound
loopne
call
lahf
cmps
js
pop
nop
shl
dec
and
(bad)
test
ss
sub
addr16
adc
sub
push
cld
mov
add
jne
inc
inc
or
fcom
les
xchg
mov
push
aaa
les
xor
sub
adc
popa
shr
cmp
daa
push
push
xchg
dec
fs
les
test
cmp
fwait
stc
jecxz
add
fdivr
sub
cld
sti
arpl
test
push
xchg
push
dec
push
sbb
pusha
lea
(bad)
jno
loopne
cmp
inc
movq
outs
mov
test
dec
inc
lods
mov
or
cli
adc
xchg
dec
pushf
mov
cmp
lahf
leave
mov
shl
adc
cmps
test
adc
jb
ret
mov
push
clc
jmp
xor
add
in
(bad)
sub
addr16
push
lea
xchg
sbb
jg
dec
or
mov
cdq
dec
xor
test
jmp
movs
jnp
shl
pusha
and
and
sbb
test
or
bound
jnp
cmp
add
je
pop
ret
shr
or
jbe
add
or
and
cmp
mov
je
addr16
sub
push
jg
adc
xchg
je
out
pop
loopne
xor
adc
pop
inc
test
push
inc
xchg
add
js
stc
inc
pop
mov
lock
test
inc
sar
dec
jnp
stos
sub
and
js
js
lods
inc
jo
inc
mov
push
lock
add
(bad)
lahf
xor
push
jmp
jmp
push
rcl
je
fwait
sub
and
ja
sub
and
adc
mov
push
stos
call
add
jle
data16
push
push
cmp
shl
adc
jns
cmp
dec
adc
loopne
jg
add
xchg
sub
and
rcr
or
mov
push
xchg
lock
add
or
aaa
int
jge
push
mov
jns
adc
or
test
movs
or
push
xchg
pop
cmps
pop
setg
push
push
(bad)
mov
push
and
xor
cwde
push
adc
push
dec
xchg
bound
or
or
lea
ror
add
lds
inc
cmp
adc
rcr
les
and
mov
(bad)
leave
push
xchg
das
dec
or
push
or
int3
ja
leave
add
jp
cmp
dec
push
xchg
pop
push
sub
test
sub
movs
mov
imul
jge
push
imul
je
dec
push
mov
push
push
or
xchg
cmps
adc
rcr
sbb
inc
sub
sub
daa
ss
or
or
sbb
in
add
jmp
loope
or
inc
push
rol
movs
xor
add
and
cmp
add
cmp
jne
pop
aas
push
sbb
nop
sub
pusha
xchg
outs
jp
(bad)
mov
cmps
imul
inc
xor
enter
mov
clc
outs
mov
and
push
cs
sub
cmp
jno
add
adc
fdiv
jle
pslld
lods
test
scas
pusha
pusha
jle
or
bound
imul
bound
cmps
adc
and
or
pop
sub
pop
sbb
sbb
and
push
cmps
imul
push
push
pop
imul
mov
lea
ds
ins
dec
cmp
jge
dec
les
jecxz
inc
sbb
cwde
add
jbe
test
mov
push
mov
imul
adc
js
sub
ins
mov
dec
sbb
mov
lea
jmp
je
fld
inc
jo
pusha
ss
push
add
dec
and
sub
add
sbb
jno
test
dec
jecxz
js
pop
dec
cmp
test
mov
sti
push
dec
loopne
jne
out
xchg
scas
jo
xor
push
push
push
mov
repnz
pop
jae
xor
hlt
pop
ret
cmp
pop
jno
mov
cmp
push
pop
dec
loope
mov
push
xchg
add
add
mov
xchg
and
int3
ins
lock
push
push
push
std
mov
mov
in
fwait
pop
and
xor
cmp
aas
pusha
pop
pop
sbb
cmp
adc
or
test
lock
and
invd
mov
xor
push
pause
out
sti
mov
cmp
push
cmp
mov
movs
cmp
or
cmp
add
in
and
inc
popf
std
(bad)
push
jo
lock
mov
push
dec
daa
shl
movs
cmp
not
pop
sbb
leave
ret
sbb
add
pop
mov
(bad)
sub
mov
loope
pop
sbb
dec
sbb
hlt
pop
adc
or
add
fild
fmul
and
arpl
sub
and
out
xor
repnz
stos
sti
das
dec
daa
jmp
cmp
clc
jne
out
cmp
jmp
fstp
inc
pop
jl
je
cmp
mov
test
cwde
mov
pop
adc
push
les
xchg
add
in
aad
cmp
data16
imul
js
pop
cmp
push
stc
lea
shl
mov
cmc
mov
and
mul
sar
mov
test
add
jecxz
cmp
dec
lods
xor
repnz
test
push
adc
or
js
dec
cmp
retf
or
push
inc
jmp
sub
in
fdivr
adc
jmp
scas
mov
test
adc
cmp
pop
cmp
or
dec
jne
push
test
cmp
es
inc
fs
jns
mov
icebp
xchg
jae
adc
push
push
or
loope
(bad)
xlat
jecxz
and
mov
stos
push
dec
jae
dec
mov
add
or
sub
dec
repz
add
jg
in
jo
mov
adc
mov
inc
and
xchg
cli
xchg
push
mov
je
inc
jo
(bad)
jo
mov
stos
pop
outs
cli
pop
dec
test
mov
jb
xor
sub
cdq
cli
std
sahf
stc
jb
sbb
cmc
sbb
add
ffreep
pop
je
jbe
mov
xchg
mov
ja
pushf
test
cwde
xchg
pushf
inc
mov
xchg
cmp
mov
push
retf
xchg
and
jo
aas
lock
popf
pop
jo
je
cmp
inc
sub
(bad)
in
push
inc
cmp
add
dec
push
mov
mov
cdq
jbe
fadd
push
add
lods
xchg
push
pop
xlat
fcomp
popa
es
adc
ret
pop
stos
or
push
(bad)
sbb
pop
cmp
pop
(bad)
frstor
sub
and
xchg
xchg
int
repnz
push
jg
call
dec
imul
inc
pop
dec
push
test
pop
ins
lds
stc
stc
pop
jle
mov
test
mov
in
or
cmp
cmp
or
ficom
fwait
js
pop
in
popf
int3
adc
enter
mov
and
fnsave
clc
add
push
push
adc
or
imul
in
mov
xor
movs
xor
pusha
fld
repnz
in
xor
jo
pop
jno
push
movs
lods
pop
and
cmc
mul
xor
js
mov
push
fdivr
daa
test
mov
fsubr
ds
sub
outs
add
and
fistp
xor
adc
and
mov
sub
sub
add
test
pop
add
cld
jg
pop
push
aaa
xchg
into
xchg
clc
or
outs
movs
mov
mov
lea
fdiv
xchg
jmp
adc
and
mov
dec
lds
outs
movs
or
push
les
lds
neg
jne
cld
adc
mov
add
adc
adc
xor
mov
es
dec
repz
sub
pop
inc
movs
sbb
cmps
mov
and
inc
inc
dec
push
lods
sbb
pop
cmps
adc
ins
jo
mov
(bad)
popf
(bad)
rcl
lds
pop
cmp
cmp
pop
sub
mov
or
mov
lock
inc
nop
mov
sbb
or
pop
inc
adc
ret
jo
and
xchg
jbe
xor
mov
push
xor
push
sbb
sahf
in
fld
pop
xor
adc
ins
pop
cdq
ja
out
pusha
icebp
mov
pop
adc
dec
out
retf
sahf
mov
in
jo
mov
mov
adc
pop
shr
and
mov
test
out
mov
adc
xor
pop
push
fimul
inc
call
in
(bad)
cmp
sbb
in
sub
push
and
icebp
loop
jle
hlt
mov
je
fsub
mov
movzx
inc
inc
rcl
(bad)
in
mov
push
add
neg
mov
xchg
retf
add
push
jp
(bad)
gs
jbe
test
in
cmovs
adc
test
add
cmps
in
daa
or
fcomp
push
enter
pop
cmp
sub
mov
jb
and
pop
pop
dec
aam
mov
and
enter
leave
fcmovne
fistp
inc
les
or
pop
xor
inc
sahf
pop
adc
or
push
jb
or
add
retf
(bad)
stc
add
pushf
dec
dec
leave
and
xchg
pop
leave
fimul
fimul
fstp
pushf
inc
push
adc
(bad)
sub
cs
(bad)
lock
sub
call
fsubr
dec
fdivr
add
add
repnz
mov
dec
pop
sub
fnstsw
in
xchg
fnstsw
fisttp
and
and
(bad)
cdq
dec
push
pop
cwde
add
dec
or
cwde
cmp
in
ficomp
in
push
inc
jo
test
or
cmp
xchg
add
fild
cmp
mov
and
and
popa
or
iret
je
loope
pop
loope
sahf
mov
es
push
push
inc
inc
push
cs
xchg
(bad)
(bad)
rol
jns
adc
add
sbb
pop
jp
push
movs
into
jp
cli
sbb
cmp
sub
cmps
adc
cmc
scas
add
adc
sti
mov
clc
inc
or
in
mov
sub
inc
in
xor
inc
and
push
js
je
dec
jl
jecxz
mov
shr
mov
(bad)
loopne
jo
dec
jb
inc
adc
mov
push
jp
or
or
sbb
mov
retf
sub
clc
stc
mov
popa
test
pop
cmp
and
push
pop
in
call
aam
dec
cld
pusha
inc
mov
mov
mov
test
push
xor
nop
jnp
xor
mov
mov
mov
loopne
adc
dec
mov
lock
or
in
pushf
dec
jns
pusha
rcl
imul
(bad)
sub
xchg
cli
pop
ins
dec
(bad)
push
je
(bad)
ret
es
inc
outs
lea
push
push
inc
lods
(bad)
fcom
sti
lea
arpl
mov
lea
ret
xchg
cmp
xchg
jp
push
cmps
inc
mov
cmc
or
test
mov
fdiv
pop
cmp
sete
fs
or
xchg
lea
mov
mov
push
leave
jmp
dec
inc
push
repz
xchg
test
lds
jne
inc
push
mov
icebp
or
cld
dec
jae
jno
xchg
bound
pop
sub
sbb
dec
pop
mov
or
shl
dec
dec
sub
mov
call
test
and
in
ret
clc
jnp
fldz
cmp
fstp
(bad)
aaa
xor
or
mov
pop
ret
mov
aam
test
out
mov
and
inc
or
or
add
ror
cmps
pop
je
inc
sub
addr16
lea
test
cli
shl
dec
popf
sbb
sbb
mov
adc
cmp
cmp
sub
adc
mov
jmp
dec
jge
movs
outs
add
add
mov
nop
pop
mov
mov
clc
pop
adc
adc
mov
sbb
add
mov
xchg
jl
test
gs
js
dec
inc
or
and
xchg
xchg
jg
adc
sub
inc
add
dec
add
mov
xor
sbb
push
pop
sbb
sahf
add
inc
mov
mov
inc
in
rol
mov
in
push
push
enter
push
and
shr
sar
jns
repnz
jne
mov
mov
add
bound
(bad)
loope
jns
addr16
pop
jecxz
out
ss
sub
loopne
jg
movaps
imul
sub
push
jmp
ins
in
aam
movs
sub
fisttp
in
stc
adc
add
xor
or
jo
and
loop
lock
push
inc
dec
into
jnp
and
cs
or
loopne
sahf
pushf
cld
in
sbb
pusha
loop
retf
xchg
sbb
mov
dec
mov
mov
ret
xchg
add
rcr
dec
cld
add
add
xor
adc
ror
or
in
sub
pop
ins
jne
push
pushf
adc
sub
fiadd
add
call
in
dec
adc
or
test
sub
and
add
pop
or
push
inc
pop
imul
pushf
xor
test
bound
addr16
or
lods
loope
sbb
sbb
jo
sub
and
mov
cdq
push
push
test
cmp
xchg
ficom
fsubr
stc
repnz
inc
sbb
push
inc
jecxz
cld
push
add
xchg
pop
dec
and
push
push
push
(bad)
das
dec
sbb
inc
add
ror
and
sub
pushf
xchg
dec
add
adc
adc
xor
xchg
arpl
mov
xor
xchg
xor
push
pop
add
test
das
push
rcl
test
dec
xor
inc
cmp
xor
sub
jmp
shl
shr
sti
mov
loope
shl
sub
xor
pop
int3
into
or
data16
push
lds
or
rcl
loopne
arpl
add
lock
aas
add
mov
ror
loope
cmps
mov
inc
pop
inc
jecxz
loope
fimul
or
clc
pop
mov
cmp
fwait
daa
rol
mov
dec
dec
jo
add
jp
movs
rol
cmp
mov
xchg
sbb
dec
or
repnz
sbb
add
and
or
popa
push
call
imul
enter
and
push
inc
inc
ret
push
xor
out
inc
js
push
mov
pop
fst
dec
fist
and
xchg
shr
xchg
push
xchg
mov
xchg
or
pop
sbb
inc
cmp
add
mov
mov
sub
mov
loope
push
cs
or
imul
push
sbb
sar
mov
mov
and
mov
out
sbb
push
push
mov
lds
push
mov
icebp
adc
sub
dec
push
ffree
mov
pop
mov
push
add
lock
inc
lods
movs
inc
test
mov
push
xchg
rol
(bad)
shl
cmp
pop
out
or
je
aas
dec
enter
cmp
fnstenv
into
pop
mov
lock
xchg
hlt
(bad)
cli
inc
or
into
mov
imul
jg
retf
sbb
add
sub
inc
sbb
cmp
xor
cs
ret
sbb
loopne
push
sub
mov
pushf
mov
andps
cli
sub
add
sbb
inc
lock
or
push
and
rcl
sub
pusha
inc
push
inc
xabort
push
push
xchg
rol
dec
lods
mov
ins
pop
or
jno
add
pop
dec
aam
in
xchg
xchg
xchg
push
lock
shl
loopne
mov
add
fistp
jmp
dec
pop
mov
addr16
or
sub
and
push
cmp
test
fucomip
sub
icebp
sub
add
out
popf
push
add
sub
mov
(bad)
and
inc
mov
outs
adc
push
mov
jb
fsubr
push
gs
dec
dec
rol
shl
dec
call
scas
ret
pushf
arpl
push
push
xor
sub
push
push
lds
dec
jge
xor
adc
call
ins
push
push
push
sub
xlat
push
sub
sbb
nop
push
cmp
sub
or
das
sbb
mov
xchg
lds
addr16
loopne
cmp
ss
jg
inc
dec
sub
push
cmp
xchg
sbb
or
sub
or
fs
nop
cmp
movs
stos
int3
jo
call
fstp
cmp
clc
inc
cmp
mov
outs
iret
xor
pop
enter
aam
add
lds
in
or
loope
mov
arpl
add
scas
or
inc
pop
add
inc
(bad)
cmc
inc
cmp
imul
jb
fninit
mov
jg
add
add
pop
dec
or
xor
fisubr
rol
cmp
dec
jb
and
fdivr
in
in
enter
push
cld
push
xchg
inc
es
or
sbb
cmp
push
cmp
pop
dec
pop
cmp
pop
pop
ins
fs
inc
es
js
xchg
inc
cmp
fs
pushf
pusha
cmp
gs
inc
shl
fs
inc
es
cld
arpl
and
sub
xchg
sbb
pop
cmp
xchg
sbb
leave
push
pop
pusha
popa
sbb
leave
and
xor
and
and
and
outs
xchg
sbb
leave
int3
jno
jb
xor
and
jae
adc
in
dec
je
jne
nop
dec
push
xor
nop
dec
push
cdq
ja
js
push
cdq
in
jns
push
cdq
in
jp
jnp
cdq
in
dec
jg
and
dec
push
mov
push
cdq
dec
fadd
pop
cdq
in
inc
jmp
enter
fs
jb
and
mov
enter
push
fsub
dec
push
jmp
and
inc
cmp
inc
cmp
inc
pushf
aas
cmp
ror
xchg
inc
es
clc
dec
leave
and
sub
xchg
sbb
jl
jge
sbb
leave
push
mov
sbb
leave
and
xor
and
and
nop
dec
push
xor
push
cdq
in
(bad)
xor
cdq
in
nop
dec
xchg
pop
cdq
in
dec
xchg
je
in
dec
push
mov
cdq
xchg
mov
dec
push
cdq
in
jo
push
cdq
in
sbb
nop
dec
sub
sbb
clc
xchg
test
xor
rcl
push
mov
aaa
mov
sub
arpl
or
inc
daa
jne
shr
clc
or
aad
imul
ret
gs
sub
push
push
adc
pop
mov
dec
mov
in
nop
xor
push
xor
stos
adc
cmps
je
cmp
je
ret
sti
nop
shl
int
xchg
mov
out
or
test
out
fst
mov
xchg
adc
jns
xor
add
lea
push
adc
mov
test
out
sub
pop
dec
sub
cmp
std
(bad)
rol
and
mov
test
jle
cmp
std
aaa
jl
out
loopne
neg
sbb
and
mov
icebp
push
bound
push
ds
mov
jmp
sub
popf
inc
sbb
sub
xor
jno
dec
cld
movs
sub
push
adc
push
push
push
add
ins
xor
mov
cmp
adc
(bad)
fild
push
rcr
mov
push
and
je
lods
in
lods
sbb
(bad)
movs
aad
dec
inc
pusha
add
sub
or
and
xor
add
aaa
or
shr
pusha
adc
dec
dec
push
data16
pop
aas
cmp
jmp
push
loop
mov
push
movq
or
or
ret
push
adc
cmp
xor
ret
mov
add
push
mov
inc
rol
or
mov
xor
or
outs
push
push
mov
ficom
loopne
inc
cmp
adc
xchg
pop
rcl
jns
adc
xor
arpl
inc
push
sar
sbb
adc
out
in
add
sbb
rol
and
gs
mov
mov
pop
push
sub
clc
adc
ret
jae
sbb
push
rcr
enter
pop
gs
(bad)
sub
and
(bad)
jmp
sub
add
(bad)
nop
add
(bad)
inc
test
push
push
add
push
pusha
add
loopne
sbb
inc
push
es
pusha
or
fld
push
jb
and
push
mov
fdiv
(bad)
mov
call
repnz
add
inc
or
pop
mov
rcr
cmp
ja
xchg
inc
aad
pop
adc
mov
test
cmp
dec
adc
push
adc
xor
cwde
xor
sub
in
xor
cmp
jge
adc
adc
retf
adc
stos
sub
dec
mov
push
jmp
push
xor
addr16
mov
push
cmp
jo
add
ret
mov
jbe
clc
jp
cmp
push
add
and
mov
sub
js
sbb
jbe
push
adc
sub
add
mov
mov
mov
adc
movs
jp
clc
jbe
or
add
inc
(bad)
cmps
mov
inc
or
sbb
shr
lahf
mov
repnz
lods
(bad)
xor
aam
sub
popf
ds
dec
cs
xchg
clc
mov
es
shl
pop
out
xor
jl
inc
and
jne
test
adc
pop
pop
js
or
push
fucomp
mov
clc
mov
adc
xor
xor
icebp
push
in
jecxz
push
lods
adc
adc
(bad)
xchg
push
fiadd
outs
test
push
rcl
add
dec
adc
cli
jecxz
cmp
sbb
aad
jl
add
and
sahf
add
je
fwait
in
jne
lea
xor
fiadd
test
xor
xchg
mov
lods
popf
ins
push
push
mov
inc
bound
lods
ror
dec
adc
imul
add
add
add
inc
xor
add
add
stos
inc
adc
jg
push
mov
push
add
push
or
sub
cmp
mov
mov
(bad)
jne
mov
inc
pop
mov
sub
mov
enter
stos
js
(bad)
mov
cld
cs
push
lahf
data16
jl
and
pop
pop
(bad)
lahf
add
test
rol
mov
sub
mov
add
and
sub
mov
sub
jmp
jb
sub
adc
add
jnp
push
shl
pop
inc
dec
jp
sbb
sbb
dec
cmp
dec
xor
inc
inc
imul
add
fwait
adc
das
cmp
xor
add
add
or
add
scas
xchg
and
and
or
jnp
cmp
fiadd
add
mov
shl
cmp
paddsb
xor
(bad)
cmps
cwde
mov
xor
pop
mov
aam
ret
das
cmps
test
sbb
adc
sub
ins
ror
es
or
ins
icebp
(bad)
jbe
es
mov
mov
xchg
and
push
push
outs
loopne
adc
or
pop
js
test
cmp
sbb
cmp
sbb
aad
xlat
mov
add
in
arpl
pop
push
xchg
add
mov
add
and
mov
mov
add
mov
push
adc
or
mov
adc
jo
pop
retf
push
push
lahf
push
call
ret
and
ficomp
je
lods
fisubr
fidivr
inc
or
jl
mov
dec
or
jo
or
cmp
sbb
mov
in
rcl
in
dec
or
cmp
sub
lds
loope
or
push
not
mov
inc
add
lods
les
sub
xor
jnp
fdivrp
xchg
sbb
sub
pushf
mov
sbb
xchg
aas
push
pop
adc
add
sub
add
mov
stc
sbb
jb
movs
adc
add
cmp
repnz
je
in
call
ds
shl
cwde
pop
or
mov
clc
xor
retf
jb
sar
sbb
out
add
xchg
xor
pop
out
test
fisub
popa
or
sbb
add
jge
jg
mov
adc
push
out
cdq
mov
push
cmp
dec
dec
sbb
xor
xor
sub
xchg
xchg
test
dec
int3
rcr
(bad)
xchg
test
inc
jbe
cmp
sub
push
jmp
hlt
loopne
or
and
sbb
xor
push
jmp
inc
add
jle
mov
lods
dec
and
cmps
or
cmc
sub
inc
mov
pop
pop
or
jecxz
cmp
ret
lods
inc
mov
add
std
pop
xor
ins
sub
cmps
mov
mov
fist
inc
add
int
and
sbb
(bad)
ror
push
add
sub
cmp
lahf
inc
jno
scas
rol
sub
push
sar
sar
inc
inc
mov
inc
jb
ret
or
clc
in
or
adc
lock
bndldx
or
cmp
mov
mov
cwde
sbb
pop
sub
icebp
cs
enter
imul
or
sbb
xor
add
jne
fwait
in
add
add
sub
inc
push
stos
call
sbb
dec
mov
xchg
fbld
push
sub
(bad)
fistp
inc
jne
cld
rol
inc
dec
push
dec
xor
xchg
arpl
lea
(bad)
fist
sar
push
pop
push
sbb
pop
lea
add
mov
aad
push
call
ror
inc
xchg
xchg
aam
lock
xlat
lahf
shl
push
jnp
cmps
rcr
cmp
add
sub
or
mov
mov
cmp
jg
mov
(bad)
jg
retf
push
push
sbb
mov
and
ret
daa
popf
and
cmp
mov
mov
add
loopne
shr
cmp
xor
mov
mov
cmp
cmp
inc
dec
mov
and
cmp
or
lea
xor
cmp
sub
pop
push
add
pop
xor
push
xor
fcom
ins
jb
movs
inc
lock
xor
dec
call
sub
mov
add
jle
sub
sar
neg
jbe
imul
sbb
(bad)
fisub
lods
push
jne
jbe
repnz
nop
adc
xchg
test
xchg
rol
scas
fcmovnu
(bad)
cmp
rcl
lods
pushf
push
and
or
loopne
fld1
pusha
mov
sbb
adc
push
push
add
fs
add
jbe
jp
aad
mov
ss
inc
add
arpl
ror
lock
and
fcomp
inc
dec
sub
mov
inc
push
ja
test
lea
push
adc
inc
sub
les
or
popf
sar
movs
jle
mov
dec
js
push
(bad)
fiadd
push
adc
pushf
pop
ret
aam
inc
add
ins
mov
dec
add
ret
loopne
mov
sbb
mov
and
mov
mov
sub
test
jmp
lahf
push
sub
nop
scas
or
fsubr
push
sbb
cdq
test
loope
sbb
or
fsubr
sbb
lea
mov
inc
dec
add
or
push
cmp
add
inc
mov
hlt
sbb
jmp
dec
and
sbb
stc
mov
pop
cmp
sbb
add
and
adc
inc
jg
xor
and
sub
dec
push
or
pop
add
int3
nop
or
mov
inc
xor
adc
mov
and
mov
add
pop
cs
in
add
rcl
mov
sub
mov
scas
outs
and
fld
(bad)
xchg
and
lods
add
cmp
xor
test
mov
inc
ss
inc
xor
pop
pushf
movs
mov
aaa
(bad)
xor
lods
and
pop
or
ret
pusha
das
call
mov
mov
jno
cmp
or
xor
ror
out
push
cmp
stos
pop
xor
adc
sub
fisub
push
pushf
into
dec
adc
push
or
add
clc
and
ret
and
mov
wbinvd
push
bound
lea
xor
xor
movs
add
xchg
ins
pop
popa
inc
addr16
vmwrite
cmp
cmp
cmp
arpl
aam
sbb
leave
retf
mov
cmp
mov
and
add
jbe
sub
mov
jmp
stos
xor
(bad)
xor
inc
or
adc
xchg
xchg
ffreep
test
push
and
mov
pushf
mov
setb
popa
add
push
and
jge
sahf
data16
dec
mov
cmp
cmp
inc
adc
or
pop
push
pusha
sbb
je
in
mov
push
adc
cmp
hlt
dec
in
cmp
mov
or
cmp
lahf
movzx
mov
dec
jns
mov
jmp
jle
cdq
cmps
(bad)
adc
sub
sbb
gs
xchg
stc
movs
fcomi
(bad)
xor
inc
mov
(bad)
in
pop
lock
and
enter
scas
push
add
cmp
mov
mov
cmp
in
inc
fmul
adc
xchg
pusha
(bad)
dec
xchg
sub
cwde
pop
add
add
xchg
mov
sbb
dec
sbb
mov
call
fcomp
adc
sbb
add
pop
xor
adc
inc
std
and
push
je
ror
or
movs
imul
call
adc
and
(bad)
jne
int3
lods
adc
push
cdq
sbb
add
mov
xchg
jg
inc
pop
xchg
cmp
xor
adc
xor
es
jg
adc
rcl
jae
push
push
cld
push
aam
xchg
and
push
jmp
inc
or
xchg
and
ss
inc
fld
outs
inc
xchg
pop
into
pop
daa
lock
add
(bad)
push
leave
or
dec
push
iret
in
dec
bound
add
xlat
mov
add
outs
mov
imul
add
push
pop
jmp
sub
test
es
and
mov
add
jb
and
pusha
sub
and
push
sbb
inc
mov
push
sbb
and
imul
jo
sbb
push
adc
or
jne
loopne
jmp
mov
pop
sar
test
sub
add
sbb
imul
pop
(bad)
rcl
in
add
lock
xor
push
mov
lea
mov
cmp
push
push
dec
je
adc
sub
retf
retf
movs
sbb
pop
or
loopne
adc
push
je
or
loopne
jbe
jb
or
jbe
aaa
jne
daa
movs
add
mov
lods
add
repz
xor
inc
dec
(bad)
loopne
sbb
jne
out
es
test
or
or
fsubr
and
xor
xchg
and
inc
xor
and
jg
dec
inc
push
sar
mov
mov
adc
dec
and
ss
push
sbb
mov
adc
cmp
jecxz
cmps
dec
mov
or
pop
neg
js
pop
test
pop
daa
mov
xchg
add
jmp
sbb
mov
push
nop
fisubr
test
das
pop
inc
add
je
push
xor
outs
sub
mov
push
cmp
jb
pusha
push
cmc
adc
nop
(bad)
(bad)
js
jmp
xor
je
cmp
xor
rdtsc
mov
into
adc
mov
and
outs
or
push
jbe
stos
add
xchg
sbb
cmp
repz
push
add
jmp
mov
pop
push
mov
inc
retf
cmp
xchg
sub
add
neg
jl
or
mov
outs
jnp
pop
sbb
pslld
lock
mov
push
(bad)
mov
xchg
xor
outs
jecxz
stos
inc
sub
(bad)
sbb
xchg
movs
sbb
dec
shl
bound
adc
xor
je
and
aam
add
test
cmp
mov
add
lea
shr
mov
inc
data16
mov
mov
push
(bad)
cmp
jb
mov
add
cmp
hlt
lea
sbb
movs
add
arpl
stos
das
xchg
cmp
jne
push
sbb
sub
jae
push
xchg
rcr
loopne
mov
adc
nop
push
fisttp
repz
dec
adc
sbb
pushf
or
(bad)
ret
inc
dec
inc
or
pop
or
ret
rcl
outs
cdq
sub
cwde
xor
lea
and
cdq
aam
lahf
fs
shl
push
inc
jae
mov
inc
fdiv
addr16
push
add
fwait
mov
push
jecxz
ins
adc
push
sbb
mov
inc
int3
shl
pop
sub
and
mov
ja
push
je
or
test
call
ds
jmp
or
jno
repnz
sub
push
rcl
hlt
push
mov
inc
ss
scas
loopne
inc
jo
test
mov
and
jo
ds
cmp
loopne
lds
inc
comiss
pusha
call
fwait
ins
lods
bound
loopne
jbe
push
pop
pop
mov
jmp
mov
adc
mov
sub
add
pop
add
test
cmp
je
clc
ds
sub
in
adc
push
and
add
outs
das
lods
pop
cmc
inc
fmul
pop
ret
mov
popf
fwait
clc
loopne
clc
adc
pop
xor
mov
cmps
xchg
ins
stos
inc
add
sbb
or
xchg
inc
iret
sar
adc
mov
popa
imul
cs
in
pushf
in
ins
push
push
mov
adc
mov
mov
cmp
dec
cmp
xchg
push
pusha
push
call
push
dec
inc
data16
adc
and
loopne
mov
mov
dec
xor
or
ja
sbb
and
mov
xlat
mov
pop
js
jg
pop
mov
sti
pop
scas
loopne
inc
push
and
or
mov
loopne
mov
xchg
aad
jmp
fndisi(8087
or
mov
inc
and
call
adc
xor
pusha
xor
retf
jno
jl
jo
aad
cmp
mov
adc
or
in
add
std
sub
popf
call
rol
iret
adc
and
test
cmp
add
sbb
adc
cmp
pop
mov
sbb
lahf
pop
jp
dec
sub
jo
mov
sbb
or
dec
add
je
push
pop
test
adc
or
hlt
add
xchg
rol
loope
xor
imul
mov
dec
and
cmp
jp
fldenv
or
adc
mov
push
and
jae
iret
add
adc
into
adc
cmp
into
mov
add
rol
stos
mov
cli
pop
mov
pop
add
xchg
add
inc
pop
js
pop
fld
or
dec
jnp
add
push
inc
mov
dec
clc
inc
ror
dec
shl
stos
mov
xchg
rcl
add
loope
arpl
mov
jl
add
sub
cmp
sub
add
ins
in
outs
stos
pop
jmp
cmp
lock
inc
popa
cmps
and
dec
pushf
add
fadd
iret
mov
icebp
xor
or
call
pop
sub
xor
mov
(bad)
sbb
enter
repz
fisubr
jnp
in
dec
aam
jg
pop
or
enter
mov
jbe
mov
dec
xor
loop
pop
ja
out
sub
inc
dec
mov
je
inc
xchg
inc
mov
(bad)
sahf
loope
add
jb
cmp
clc
dec
lds
ss
and
fcomp
push
jmp
retf
pop
inc
cmp
jns
sub
and
inc
sar
idiv
push
rcl
cmp
enter
xchg
mov
call
sbb
inc
sbb
add
sahf
mov
shr
push
inc
dec
cmp
sub
mov
das
(bad)
jns
or
(bad)
and
je
pusha
movs
outs
or
mov
dec
pusha
(bad)
out
cdq
mov
xor
lea
std
mov
idiv
jo
lea
mov
xchg
cmc
pop
jns
popf
cmp
jmp
jmp
push
and
mov
es
and
sbb
mov
xchg
add
xchg
popa
jg
cmp
push
xor
test
cmp
mov
mov
fs
mov
add
mov
mov
add
jnp
fs
pop
add
scas
cmp
out
outs
pop
sub
fwait
pusha
mov
cld
repz
mov
push
cli
pop
mov
outs
in
icebp
sbb
and
popa
and
mov
add
fs
sub
shr
popf
rol
or
pop
stos
popa
and
jb
ss
stos
mov
jmp
shr
and
pop
cs
pop
sbb
mov
mov
popa
test
cmp
aas
or
inc
inc
jecxz
xor
or
sbb
out
mov
test
jne
aad
rol
out
pop
mov
lds
bound
jne
jno
add
sbb
mov
xor
add
pop
cwde
inc
push
inc
cmc
out
jno
adc
lea
sbb
idiv
or
mov
ss
addr16
(bad)
les
inc
movs
and
or
clc
(bad)
cmp
or
nop
xchg
and
mov
or
xor
fadd
shl
jmp
ins
(bad)
daa
aam
pop
in
ret
sub
or
dec
lods
aad
inc
inc
repz
jmp
push
leave
pop
or
ret
mov
mov
pop
lds
inc
or
adc
repnz
mov
je
push
fnstenv
add
nop
dec
sub
cs
lds
xchg
xchg
add
xchg
sub
or
shl
lahf
jae
sbb
mov
call
in
mov
dec
inc
fnstenv
icebp
rcl
mov
mov
xchg
pop
push
int3
push
pop
add
push
rol
push
bound
jge
xor
add
mov
jno
mov
(bad)
fcom
mov
or
and
cmp
enter
sub
out
jle
lahf
arpl
sub
mov
add
int3
add
jecxz
mov
mov
pop
sbb
(bad)
cmp
fdiv
adc
cmp
std
xor
mov
ins
ins
sub
out
lea
jl
inc
push
mov
jecxz
add
xchg
jne
and
inc
aas
(bad)
nop
sbb
retf
into
adc
out
gs
sar
cmp
(bad)
mov
adc
lock
jmp
inc
mov
addr16
stos
stc
stos
dec
adc
add
mov
mov
scas
pop
pop
xchg
inc
mov
out
or
or
add
pop
sub
adc
jmp
add
mov
rcl
mov
push
jg
or
xor
in
and
cmp
sahf
dec
or
les
add
and
cmp
leave
cmp
(bad)
dec
cld
jo
xor
push
push
jo
push
aaa
jg
or
das
mov
cli
sbb
icebp
fs
push
fdiv
cmp
movs
ror
rcr
mov
pop
xchg
dec
adc
mov
lock
or
mov
and
dec
xor
add
bound
or
ret
dec
sub
adc
jb
je
cmp
adc
adc
cwde
cdq
pop
add
mov
data16
inc
pop
jne
sub
jns
sub
jp
dec
mov
data16
int
ss
popf
jns
xchg
adc
xchg
or
or
push
test
shl
or
je
std
pop
mov
mov
or
int
xor
or
jl
dec
and
or
fild
test
sub
push
xor
push
imul
mov
mov
cmc
dec
shl
adc
shl
addr16
ret
test
arpl
xchg
cdq
mov
loope
push
or
cmps
jnp
in
pop
mov
and
xor
iret
loopne
inc
ret
xor
inc
cmp
dec
xor
xchg
adc
jne
pop
ret
in
nop
inc
dec
push
mov
jbe
aas
sbb
dec
cmp
(bad)
mov
sbb
mov
jb
cmp
aad
pop
imul
retf
dec
pop
inc
and
shl
cmps
lahf
sar
or
mov
popf
fld
mov
inc
xor
xor
mov
(bad)
mov
ss
add
or
sub
pop
pop
xchg
push
push
mov
adc
pop
jecxz
xchg
test
cmc
and
stos
das
sbb
xchg
or
sbb
mov
cld
cmp
sbb
enter
add
shl
pop
jmp
dec
jb
test
mov
push
or
inc
xchg
inc
cli
adc
pop
mov
cmp
sbb
adc
sbb
sbb
xor
add
sub
mov
loop
cdq
mov
pop
inc
adc
jmp
jbe
ja
mov
jne
jp
xor
xchg
xor
dec
arpl
popa
or
xchg
add
and
je
(bad)
or
jns
pop
pusha
js
push
(bad)
bound
call
add
xchg
mov
adc
push
push
and
gs
jl
ins
add
inc
mov
jg
push
xchg
mov
and
imul
icebp
mov
pop
adc
mov
or
scas
push
mov
sbb
gs
lods
lahf
xor
pop
adc
pop
pop
push
mov
push
mov
xchg
pop
sub
lock
mov
inc
pushf
or
jl
cmc
jmp
sbb
lahf
adc
mov
push
add
mov
sbb
ss
arpl
mov
sbb
mov
push
xchg
push
push
lods
pop
and
sub
add
add
pop
mov
mov
mov
and
pushf
jl
xor
dec
or
es
in
rcr
sub
pop
lock
cs
cmp
push
sub
inc
loope
or
cmc
cmp
jg
mov
adc
or
and
jne
cwde
jo
push
push
cmp
jnp
fld
xchg
adc
xchg
cmp
pop
mov
or
leave
push
pop
sahf
test
mov
adc
sub
push
mov
and
fld
xor
and
add
adc
mov
pop
or
ret
push
inc
push
push
pop
push
and
pushf
xchg
push
ret
pop
pop
loopne
xchg
push
mov
jecxz
pop
fild
fwait
xchg
mov
pop
stos
mov
mov
or
cdq
xchg
or
ja
es
dec
je
dec
jne
cmp
mov
push
inc
push
pop
in
mov
xor
xchg
in
int3
mov
loope
mov
pop
push
and
sbb
fiadd
aam
push
xor
push
sbb
push
pop
jg
and
and
jle
fisttp
adc
add
dec
out
inc
ins
lods
xchg
add
push
adc
loop
call
pop
dec
(bad)
and
in
stc
cmp
xor
push
inc
inc
add
into
jmp
dec
test
inc
mov
push
push
mov
test
das
arpl
mov
test
jb
inc
add
inc
adc
fisttp
sub
lahf
or
mov
sub
mov
sti
jno
sbb
fiadd
dec
std
pop
jne
mov
sub
imul
inc
mov
or
and
push
dec
sbb
xchg
fcmovne
je
push
adc
ss
xor
add
mov
or
in
push
push
xor
push
sbb
aad
pop
xchg
movs
or
add
pop
and
adc
or
mov
dec
xor
(bad)
jmp
dec
sub
mov
or
sbb
cdq
outs
xor
sub
sbb
sub
dec
scas
inc
js
dec
xchg
test
daa
add
out
or
or
jp
push
mov
ja
pusha
push
push
outs
arpl
inc
sbb
fs
push
xor
cmc
mov
out
inc
movs
xchg
stos
add
inc
jne
pop
cmp
and
or
add
add
leave
outs
and
xchg
inc
es
lar
stos
inc
pushfw
mov
sub
or
mov
hlt
sbb
cmp
inc
adc
dec
push
pop
mov
es
push
not
jo
mov
loope
mov
rol
stc
sub
xchg
out
sub
mov
enter
xor
jmp
or
push
test
aas
mov
inc
push
xor
aas
mov
mov
add
cmp
mov
dec
jle
dec
push
jno
or
push
loope
jne
dec
dec
mov
clc
push
cmp
mov
mov
push
cmp
mov
js
je
xor
push
dec
ja
aam
or
enter
scas
outs
(bad)
jp
jle
inc
mov
pop
jnp
mov
icebp
js
ja
jecxz
fsub
lods
fsubr
(bad)
out
das
jge
add
mov
inc
dec
xchg
mov
(bad)
js
inc
popa
jne
cmp
sub
pop
pop
cli
dec
sbb
sub
push
sub
jmp
xor
add
xchg
push
add
std
mov
mov
es
(bad)
enter
xor
mov
add
adc
add
dec
cld
sub
pop
or
mov
jl
add
mov
lods
xchg
mov
cs
mov
sub
or
push
dec
inc
jbe
sbb
in
cmp
push
jl
fmul
repnz
in
sub
(bad)
aaa
es
pop
push
sbb
movs
hlt
scas
inc
cmp
lea
cli
call
fwait
out
call
add
mov
inc
xor
xor
push
test
sbb
loopne
mov
push
comiss
mov
mov
add
adc
sub
inc
cmp
cmp
xor
lock
repnz
inc
xchg
sub
mov
mov
sbb
movs
rol
mov
mov
push
loop
inc
loope
add
and
movs
inc
adc
(bad)
jl
mov
cli
dec
push
or
cmp
jl
xor
cld
xchg
add
dec
scas
mov
and
lock
sub
mov
jne
mov
or
pop
sub
inc
icebp
bnd
dec
adc
xor
ss
cmp
cwde
rol
jne
lds
dec
sbb
dec
pop
cmps
sbb
iret
and
lea
movs
imul
sbb
jb
pop
popf
inc
add
add
dec
popf
lea
faddp
das
inc
shr
push
push
push
mov
aaa
push
dec
aaa
xor
cmp
xor
adc
dec
call
sub
fwait
pop
inc
adc
cli
ret
inc
aad
or
or
shl
cmp
sbb
call
ret
and
add
or
push
leave
lahf
push
or
nop
push
xchg
add
mov
ror
push
in
ds
add
or
stc
xor
mov
(bad)
lea
pop
imul
push
dec
adc
mov
mov
fstp
or
mov
dec
arpl
je
or
aas
add
daa
and
jbe
push
test
in
js
sbb
mov
jae
push
adc
jmp
dec
or
mov
enter
inc
(bad)
and
push
lea
pop
inc
add
dec
or
jmp
je
jae
xchg
test
int
int
repnz
xor
or
fs
je
pop
inc
sub
sub
por
or
dec
jo
pop
cmps
or
mov
das
ror
fcomp
sbb
and
add
test
(bad)
xchg
or
jbe
jle
loope
jb
call
add
xchg
leave
adc
adc
cmp
mov
add
sbb
and
mov
enter
inc
mov
lahf
xchg
cmc
push
xor
pop
out
and
sub
mov
ds
daa
jle
jnp
mov
push
shl
hlt
hlt
jne
and
popf
outs
cmp
adc
not
xor
fcomp
mov
nop
mov
pop
mov
pop
push
or
test
push
retf
inc
add
dec
jnp
or
pop
jle
push
push
loope
add
push
add
mov
pop
outs
clc
dec
push
mov
int
mov
xor
and
sbb
mov
xchg
or
mov
jl
(bad)
fbstp
call
ror
inc
sbb
sub
add
ss
je
rcr
pushf
inc
sbb
or
mov
pop
rcr
push
test
xchg
adc
retf
add
das
int
cmp
fistp
adc
icebp
or
nop
xor
cld
pop
push
call
cli
jb
and
rcr
clts
sbb
aam
push
lods
(bad)
inc
jg
add
fcom
mov
adc
xor
cmp
dec
pop
xor
call
sub
and
sub
mov
adc
dec
inc
and
repnz
fbld
outs
sbb
lahf
stc
lds
pop
add
in
push
mov
and
xor
hlt
add
jmp
xchg
inc
xchg
mov
mov
bound
xor
in
and
mov
mov
xor
out
jle
mov
or
sub
pop
out
push
adc
jae
sbb
pusha
and
add
shl
or
sub
adc
aad
push
sub
call
ds
lahf
or
js
xor
push
mov
inc
dec
mov
mov
jo
add
xchg
mov
fwait
pop
movs
sub
add
xor
sub
add
xchg
jo
push
in
and
push
mov
and
hlt
adc
add
cmp
mov
test
fistp
jne
xor
mov
(bad)
cmp
jbe
test
jl
mov
cmps
js
and
xor
sti
clc
mov
cmp
pop
dec
mov
dec
mov
xadd
inc
stos
push
mov
push
adc
and
mov
dec
and
jns
mov
jnp
iret
or
jb
adc
add
jb
mov
sbb
sub
bound
ja
ja
ret
(bad)
mov
mov
jmp
nop
add
push
sbb
sbb
sahf
push
adc
sub
cmp
dec
sub
sub
pop
sbb
ret
cmp
adc
xor
adc
or
cmp
mov
pop
loope
add
scas
adc
add
mulps
push
adc
or
push
add
jl
sti
enter
adc
mov
jp
adc
ss
push
lds
push
push
pushw
or
push
bound
fbstp
lahf
push
pusha
inc
jmp
push
imul
mov
sbb
pop
mov
mov
add
mov
jne
out
addr16
push
mov
pusha
sub
and
dec
test
call
(bad)
shl
push
cmp
inc
inc
sub
add
je
enter
push
mov
rcl
push
adc
loopne
mov
cmp
xchg
movs
mov
xchg
jb
mov
mov
test
add
xchg
xchg
jg
xchg
mov
sub
scas
pop
or
or
push
add
add
fcomp
(bad)
sub
xor
ja
jge
xor
nop
sbb
les
jb
es
ins
cwde
dec
in
lods
int3
ss
xchg
mov
push
mov
pop
jmp
adc
or
test
fdiv
aas
add
mov
sub
mov
jg
or
adc
and
and
sbb
loope
bound
xchg
add
in
pop
push
mov
sub
gs
rcr
pop
sub
add
and
leave
in
cmp
aas
sub
inc
add
jg
ret
fidiv
lods
lea
mov
add
(bad)
loop
xor
leave
aad
push
push
ins
adc
mov
xchg
movs
sub
data16
jle
cmps
add
mov
popa
(bad)
cmp
dec
mov
dec
dec
mov
jno
scas
or
lods
fsubr
xor
adc
sbb
or
mov
mov
test
pop
add
and
cmp
mov
imul
and
add
test
mov
or
sti
adc
add
rol
push
sbb
leave
cmp
mov
push
pop
repnz
ss
inc
fild
sbb
add
cmp
inc
pop
mov
clc
mov
fsubr
push
mov
adc
dec
sbb
add
mov
sbb
xchg
cmp
pop
enter
lock
and
pop
push
loope
cmp
xor
je
jno
dec
xchg
jbe
mov
and
call
ror
pop
or
sub
dec
inc
outs
outs
pcmpgtd
mov
dec
retf
mov
cmc
movs
xor
imul
cld
add
(bad)
sub
adc
add
ror
cmp
sbb
mov
outs
sbb
fild
call
push
push
rcr
call
fild
mov
push
arpl
cdq
or
movs
mov
out
inc
retf
mov
shr
cli
pop
loopne
mov
bnd
lea
inc
movnti
dec
mov
xchg
mov
lods
shl
adc
inc
push
adc
ret
into
xor
(bad)
xor
jl
add
cmp
fimul
push
push
mov
add
dec
adc
shr
jns
xlat
stc
(bad)
push
shl
bound
js
rcl
and
ficomp
cmp
nop
aam
jge
cdq
mov
jne
xor
jne
cmps
inc
inc
and
adc
repnz
mov
or
or
or
dec
xor
cmp
add
sbb
sub
inc
adc
dec
and
and
nop
push
sbb
sub
or
sbb
mov
push
ja
cld
retf
(bad)
call
enter
hlt
push
hlt
adc
mov
or
cmp
mov
dec
jno
cmp
rcl
stc
pop
bnd
or
add
ins
mov
xchg
cld
adc
add
aaa
js
mov
jl
cmps
fidivr
add
xor
jo
cmp
mov
les
sub
data16
dec
dec
or
xchg
jmp
push
(bad)
push
mov
cmp
push
inc
jecxz
mov
(bad)
xor
js
je
xchg
push
pusha
mov
adc
add
ins
or
cdq
adc
fcom
jmp
pop
or
mov
mov
dec
sub
(bad)
jmp
fsubr
xor
lahf
push
push
daa
dec
fs
sahf
push
inc
pop
call
lods
cs
add
adc
jbe
sbb
ror
or
jnp
or
mov
cdq
rol
and
adc
cmps
or
and
movs
add
sbb
mov
mov
push
dec
(bad)
mov
adc
in
mov
enter
inc
loopne
jbe
out
and
xchg
xor
mov
dec
and
push
cmp
dec
push
push
ins
loope
and
xchg
xor
add
xor
cmp
push
add
inc
fs
aas
lock
push
and
xor
jo
xchg
jne
inc
ret
push
xlat
call
sub
sahf
cmp
add
inc
mov
pop
mov
xchg
cmps
pop
pop
or
loope
popa
loope
mov
popf
loope
xchg
or
mov
xor
or
and
loopne
push
sbb
and
xor
mov
in
add
popa
loope
adc
loopne
test
push
push
retf
(bad)
dec
push
loopne
and
add
rol
dec
inc
imul
push
xor
push
hlt
jl
test
mov
mov
in
popf
inc
in
push
xchg
enter
stc
inc
push
cmp
add
hlt
add
push
ins
dec
mov
sbb
push
xor
mov
lods
cmp
pop
nop
(bad)
cmp
or
mov
(bad)
loopne
repz
or
div
(bad)
in
pmaxsw
push
xlat
dec
push
lea
cmc
add
mov
mov
sbb
and
and
clc
int3
rol
mov
push
retf
push
or
fcom
in
adc
and
mov
dec
xchg
nop
cdq
fwait
xchg
lock
sub
fisubr
(bad)
dec
loop
ret
mov
inc
rol
adc
add
add
aaa
dec
xchg
mov
repz
test
mov
jbe
add
adc
mov
hlt
push
mov
and
inc
mov
leave
or
mov
cmc
ret
push
adc
fsubr
(bad)
ins
add
jg
call
and
or
ds
xor
adc
mov
mov
ja
movs
jns
stos
imul
mov
sbb
mov
pop
and
sub
in
dec
stos
imul
adc
and
adc
pop
es
push
mov
xlat
ret
push
or
push
xor
fcmovnbe
xchg
imul
sar
pop
lods
mov
xchg
mov
xchg
sbb
xor
rol
les
inc
ret
(bad)
ins
xchg
push
pop
push
mov
nop
jo
xchg
rcl
or
repnz
dec
cs
push
or
pop
mov
das
xchg
scas
mov
add
xor
and
cdq
or
and
minps
inc
or
and
add
pop
adc
pop
cmp
add
pop
pop
pop
adc
sbb
mov
mov
inc
sub
fs
inc
sbb
push
xchg
fisub
cld
movs
nop
sub
mov
not
cs
xchg
adc
add
pop
movs
add
sbb
mov
add
fstp
mov
jbe
mov
sbb
fldcw
sbb
pop
mov
sbb
mov
or
or
push
add
rcl
jle
push
jns
adc
push
add
lea
test
push
xor
jne
daa
mov
cmp
mov
inc
fstp
int
mov
sahf
cmp
leave
fstp
pop
push
mov
into
pusha
pop
jo
rep
pop
sbb
cs
retf
movs
mov
jb
pop
xchg
(bad)
shl
fmul
cld
clc
inc
or
call
add
jmp
sub
adc
mov
cmp
or
push
adc
movs
adc
mov
sbb
mov
pop
sub
sbb
dec
outs
lds
push
sbb
mov
(bad)
cli
sub
jno
mov
pushf
cmp
nop
imul
es
push
mov
push
sar
xor
das
push
sub
add
mov
int3
sbb
dec
xor
sbb
sbb
fsubr
mov
ror
fsub
data16
cmp
pop
in
xor
lock
sbb
hlt
xchg
clc
xchg
scas
jnp
mov
add
or
mov
sbb
(bad)
in
sub
aad
push
fisub
sub
cmp
add
xor
nop
outs
nop
sbb
pop
inc
je
pop
pop
in
push
inc
inc
ret
sbb
mov
xor
pop
js
jecxz
sub
lahf
cwde
retf
pushf
sbb
sbb
lock
inc
aam
dec
aam
aam
stc
dec
sahf
push
in
push
inc
aam
inc
ds
repnz
add
push
cmp
inc
and
sub
xor
shrd
sub
add
inc
jmp
rcl
enter
pop
(bad)
or
fisub
mov
fnstenv
mov
mov
inc
and
cmp
inc
sub
dec
lods
ret
fdivr
dec
mov
rol
mov
fild
ret
pusha
fistp
ret
lahf
popa
inc
sbb
pushf
mov
push
dec
in
fs
cmp
sub
add
sar
push
bound
scas
mov
imul
mov
adc
jae
add
xor
xchg
aas
dec
pop
test
dec
or
cmovb
sub
and
in
retf
test
xchg
mov
loopne
xor
mov
add
mov
cmp
push
nop
inc
fiadd
bound
cs
mov
jb
nop
jo
xor
sbb
push
cs
dec
cmp
cdq
dec
dec
cmp
sub
xor
mov
ret
or
inc
sahf
call
in
add
cwde
cwde
jns
push
loopne
mov
fdiv
add
les
enter
mov
xchg
mov
test
xchg
mov
xor
cmp
adc
enter
pop
jo
mov
pop
push
or
mov
movs
inc
lea
adc
mov
jmp
inc
pop
into
adc
dec
adc
adc
push
movs
push
(bad)
fimul
adc
add
sbb
xchg
push
pop
xlat
pop
aam
fldcw
scas
mov
je
cmp
mov
sbb
out
retf
add
xchg
inc
push
xor
mov
adc
pop
in
jne
in
or
mov
sub
mov
lods
push
mov
pop
jge
dec
aam
or
in
jno
lods
mov
loop
sub
lods
ret
pop
jge
enter
lea
jne
fmul
cmp
mov
cmp
push
test
push
pop
mov
sub
and
cmp
jle
jo
jg
ins
fadd
or
sub
in
imul
sbb
xchg
push
push
test
mov
fcmovnu
add
and
sub
fs
movs
add
adc
and
add
add
push
ss
mov
bound
mov
cmp
sbb
jbe
call
inc
cmp
jl
xchg
int3
add
daa
sub
jg
or
add
dec
pop
mov
add
popa
ret
ss
cmp
adc
cmp
mov
mov
push
inc
aad
dec
sbb
push
push
inc
add
sub
jecxz
pop
push
sbb
stos
mov
inc
sbb
or
inc
dec
add
push
or
pop
mov
ret
adc
sbb
shr
mov
xchg
push
sub
mov
lock
rcr
push
(bad)
cld
dec
dec
repz
pop
inc
fxtract
add
inc
lock
adc
dec
jb
cld
rcl
mov
sub
add
add
pop
lock
pusha
push
mov
mov
xor
pop
inc
daa
fs
pop
fbld
pop
adc
mov
xor
cmp
leave
add
and
pop
arpl
push
sub
jp
sbb
add
lds
add
sti
mov
xor
pop
mov
push
push
icebp
or
mov
inc
dec
dec
jl
add
shr
inc
daa
sar
sub
in
mov
inc
mov
mov
(bad)
sbb
test
je
xchg
in
dec
jmp
and
ret
pop
fcomp
cmp
sub
push
sbb
pop
xchg
retf
and
cmps
mov
dec
shr
push
inc
jmp
movs
nop
and
nop
push
dec
pusha
fadd
rol
cdq
js
adc
push
push
and
adc
mov
ins
jecxz
push
push
push
cdq
das
scas
fadd
adc
mov
jb
lea
or
mov
mov
pop
in
test
pop
rcr
adc
das
loopne
push
sar
add
cdq
or
push
ret
push
push
sub
dec
in
dec
pop
mov
push
cmp
ins
shl
scas
and
sub
jge
push
lea
or
repnz
sbb
inc
jmp
mov
pop
xor
xchg
(bad)
adc
ins
sub
sub
jl
jl
pop
je
mov
jp
xchg
ror
lahf
in
ja
(bad)
cmps
cmp
add
xchg
xor
lock
sbb
push
hlt
adc
xor
xchg
adc
add
out
sbb
leave
xor
add
stos
adc
rcl
test
aaa
mov
imul
retf
ins
add
add
cwde
xchg
adc
popf
push
jae
arpl
and
xchg
adc
mov
push
(bad)
outs
push
cmc
fwait
clc
mov
xchg
mov
popf
test
inc
dec
ret
ret
cdq
fmul
mov
shr
out
inc
loopne
mov
je
dec
jmp
je
adc
xor
icebp
and
lock
xor
mov
scas
rcpps
adc
inc
add
pop
and
push
ss
adc
xchg
and
aas
inc
sub
or
inc
xchg
mov
ins
cdq
movs
inc
pop
pop
cli
and
xchg
and
rcl
dec
cmp
inc
fcom
adc
inc
xor
xor
cmp
nop
xor
ror
mov
ror
leave
js
push
lock
and
and
fwait
out
push
cmp
clc
xor
pop
add
sbb
fnstcw
dec
mov
lock
cs
push
call
adc
clc
lea
inc
gs
mov
rcr
outs
ja
fnstenv
add
or
add
or
iret
adc
sbb
push
das
pop
mov
add
popw
mov
adc
xchg
and
mov
sbb
mov
push
adc
and
sbb
dec
pop
or
adc
cmps
pop
iret
arpl
mov
jge
push
and
push
pop
enter
jae
add
pop
adc
movs
dec
push
arpl
mov
or
fmul
aas
mov
sbb
ds
jns
push
mov
arpl
out
xor
icebp
mov
aaa
lock
jne
fdivr
gs
mov
retf
inc
sub
xchg
push
lea
addr16
and
popa
sti
mov
jne
dec
sahf
sbb
push
push
stos
add
or
sbb
inc
xchg
push
mov
cs
lahf
hlt
pop
pop
ins
repnz
sbb
enter
jmp
push
push
aam
inc
pop
jne
dec
sbb
test
add
xor
adc
jl
loope
sbb
lahf
and
push
push
push
ret
mov
inc
dec
and
mov
push
add
jg
or
mov
xchg
adc
sbb
inc
push
jns
fisttp
imul
pop
std
or
ret
pop
push
jmp
in
sti
push
ins
pop
popf
popa
js
pop
hlt
test
dec
pcmpgtd
ret
shl
xor
jmp
adc
jg
lea
jns
push
and
sub
test
add
cli
and
mov
mov
ret
push
xchg
pop
ja
add
cmp
jmp
or
adc
jg
mov
cmp
js
cmp
jg
or
lea
push
rol
mov
lahf
ror
call
fisub
outs
fwait
ror
add
test
add
dec
adc
xchg
cmp
add
and
pop
sub
(bad)
xchg
add
xor
jbe
push
push
adc
cmp
sahf
or
sbb
ror
loope
lock
xchg
mov
ror
rol
lea
xchg
inc
popf
or
inc
inc
cwde
inc
jmp
ss
mov
xchg
out
xchg
jle
test
mov
test
and
push
hlt
inc
dec
jno
loop
es
push
mov
hlt
push
inc
inc
ins
int
jmp
ret
js
mov
test
jae
retf
fst
lea
mov
or
cmp
(bad)
shl
call
loop
(bad)
daa
mov
mov
or
push
mov
fsub
mov
div
mov
lea
cmp
jnp
xchg
jmp
ret
adc
dec
pop
sbb
mov
pop
and
test
xchg
inc
sub
mov
loop
lea
les
(bad)
cmc
sbb
lea
xlat
scas
jne
cmp
adc
pusha
add
pushf
data16
idiv
mov
lahf
lods
add
sub
add
mov
(bad)
nop
je
stos
js
mov
mov
retf
add
ficom
mov
xchg
pusha
adc
xchg
add
adc
pop
add
lock
clc
xor
adc
les
and
push
add
lock
cmova
test
sbb
mov
scas
add
fs
inc
pop
mov
shr
movs
dec
mov
mov
movs
jmp
or
sbb
mov
lods
ss
ins
pop
retf
lea
push
enter
imul
add
mov
loope
add
or
push
add
add
in
and
adc
or
inc
les
xchg
adc
push
imul
pop
mov
scas
or
movs
mov
and
cmp
lods
repz
(bad)
movlps
dec
cdq
popf
dec
ret
mov
inc
in
xchg
jmp
mov
inc
jmp
or
es
mov
xor
das
aas
daa
test
pushf
add
xor
in
sbb
add
jecxz
push
inc
sbb
es
popf
jae
(bad)
lea
cmc
push
add
add
nop
fild
je
dec
mov
push
test
inc
(bad)
cmp
jae
movs
mov
fsubr
das
add
cmp
dec
pop
pushf
test
xchg
dec
ror
mov
adc
popf
cdq
push
xchg
cwde
inc
xor
dec
dec
jne
out
push
icebp
in
popf
lea
or
or
dec
mov
sbb
push
xchg
add
lock
push
(bad)
jnp
(bad)
mov
add
mov
je
or
add
sub
in
jecxz
sbb
inc
(bad)
mov
shr
xor
pop
inc
push
mov
sub
add
mov
adc
fcom
push
pop
sbb
push
xchg
(bad)
bound
pop
sbb
add
adc
add
or
jmp
adc
xor
inc
add
adc
pop
mov
popa
push
shl
add
cwde
or
push
mul
add
push
mov
adc
jae
push
push
cmp
rol
mov
lea
cmp
nop
add
sahf
push
push
nop
mov
push
scas
cmp
push
mov
sbb
das
shl
aaa
push
les
inc
sub
data16
lods
sbb
ja
jp
push
in
lods
pop
outs
adc
pop
adc
inc
inc
or
fistp
pop
ficom
fistp
test
ret
fist
mov
jo
clc
cmc
or
sar
outs
pop
lea
sub
mov
pusha
jbe
cmp
and
adc
std
or
push
in
jne
adc
out
xchg
push
or
xchg
cmovnp
mov
push
and
jne
sbb
fstp
cmp
inc
jecxz
push
gs
push
and
in
adc
or
jo
adc
retf
xor
sbb
popf
dec
xchg
(bad)
xchg
test
add
adc
lods
gs
add
sub
cmp
js
daa
dec
popa
pop
outs
dec
push
xlat
test
pop
(bad)
jl
dec
mov
int3
sbb
mov
lea
inc
ficom
push
cmps
fsub
scas
enter
pop
mov
pop
popa
(bad)
(bad)
into
test
pop
add
jne
sbb
and
ins
sbb
pop
cmps
sbb
inc
adc
sbb
mov
xlat
div
add
add
inc
add
es
sbb
sbb
stc
adc
or
push
sbb
out
gs
push
cs
push
push
aam
shl
mov
add
repnz
jns
jbe
or
xor
sbb
sbb
and
xor
and
sar
push
xchg
daa
or
add
xor
jle
pop
(bad)
jnp
inc
mov
push
or
pop
pop
jb
jo
fidivr
adc
add
xchg
inc
lahf
scas
sub
mov
ret
jl
js
and
jae
movs
outs
sbb
enter
add
sbb
cld
int
cld
xchg
cmp
pop
pop
pop
jo
adc
repnz
push
(bad)
mov
mov
mov
mov
mov
ror
push
(bad)
adc
retf
mov
or
mov
add
test
adc
xchg
sub
imul
push
push
xchg
rcr
dec
and
pop
adc
inc
add
or
pop
pusha
sbb
cdq
add
or
dec
pop
pop
test
rol
pop
enter
xor
movs
or
call
or
in
or
jb
int
in
or
pop
or
add
test
punpcklbw
sub
adc
inc
push
push
rcl
adc
imul
adc
in
nop
adc
sub
pop
and
and
cmp
jmp
inc
sti
les
in
xor
cli
sti
in
sti
clc
push
push
dec
mov
std
jge
add
add
pop
pop
mov
stos
sbb
ret
mov
pop
and
jmp
(bad)
in
ins
dec
dec
or
loopne
push
push
pop
xchg
test
add
sbb
or
aaa
aas
sub
mov
jle
sbb
and
jg
ret
call
adc
mov
fsub
xchg
cld
je
add
out
scas
cmps
sbb
sbb
mov
cmp
cmp
pop
mov
cld
pop
dec
addr16
jecxz
mov
scas
imul
add
cld
mov
mov
sbb
adc
inc
leave
loope
push
pop
inc
add
imul
jo
jmp
cs
adc
stc
div
push
mov
arpl
adc
sbb
jl
or
cmp
push
ja
sub
rol
mov
inc
repz
xchg
arpl
add
mov
and
leave
dec
and
out
add
and
inc
push
mov
in
(bad)
xor
inc
xor
and
mov
and
mov
sub
add
mov
pop
pop
add
aas
cdq
or
mov
(bad)
ror
push
adc
adc
mov
and
es
test
or
fnstcw
jmp
fldcw
call
dec
aad
jnp
xor
sbb
scas
xchg
es
dec
fadd
cld
imul
je
stos
or
ss
pop
(bad)
dec
adc
sub
loop
push
push
fild
push
cmp
push
mov
sub
jo
in
int3
jns
scas
push
sbb
adc
lea
shr
cs
pop
mov
mov
xchg
mov
and
(bad)
and
pop
push
int
jg
pop
cmp
xchg
add
(bad)
test
push
cmp
test
adc
xor
lock
mov
leave
pop
dec
pushf
out
(bad)
fdivr
sbb
test
cmc
push
mov
push
loopne
xor
rol
sbb
jae
jle
adc
sub
sbb
dec
push
and
pop
push
dec
(bad)
shr
sub
adc
pushf
jge
jle
mov
mov
pushf
or
add
loopne
cmp
add
rol
into
add
mov
or
cmp
or
push
or
pushf
inc
mov
loope
sbb
in
jbe
in
push
xchg
push
adc
mov
das
mov
sbb
arpl
adc
jge
mov
push
mov
sub
test
or
xor
dec
jne
lea
jb
inc
push
push
push
loop
clc
add
or
push
adc
mov
mov
ins
push
arpl
adc
ins
push
nop
xchg
sub
dec
push
mov
mov
add
xor
pop
pop
mov
test
push
xchg
and
cwde
add
ins
dec
ss
jg
jo
das
ins
pop
xor
or
and
and
retf
push
adc
jmp
mov
mov
add
pop
pop
js
leave
push
mov
sahf
lea
add
push
lods
lods
sti
mov
xchg
scas
cmp
sbb
cmp
adc
mov
and
idiv
loop
add
sbb
retf
out
add
div
jnp
adc
adc
add
mov
add
push
push
popa
cmp
cmp
xchg
push
or
jne
pop
inc
dec
sbb
xor
dec
jne
aam
mov
pop
adc
test
jmp
cmp
stos
adc
lods
not
sub
fadd
fiadd
and
ret
jne
cdq
sbb
adc
add
(bad)
dec
jnp
es
mov
adc
test
ins
sbb
(bad)
cmp
into
adc
mov
add
xor
out
rcl
dec
fwait
call
mov
add
nop
cmc
xchg
mov
xchg
in
int3
shl
add
loopne
sbb
rcr
sar
push
inc
js
clc
push
sub
lods
mov
arpl
sbb
out
sar
les
sbb
fisubr
fsubr
(bad)
mov
test
fwait
jge
xor
not
les
push
xor
fwait
xchg
aam
popf
outs
sbb
das
pop
dec
je
push
or
jge
pop
inc
call
sub
iret
lahf
or
dec
mov
mov
mov
loop
push
pusha
sub
outs
es
add
jnp
cmp
(bad)
or
pop
mov
mov
retf
outs
sbb
push
push
pcmpgtb
dec
fs
or
and
push
or
jo
mov
test
rcl
aaa
test
scas
es
outs
test
out
adc
in
mov
test
dec
jmp
push
mov
mov
or
icebp
ret
mov
call
jae
inc
sub
scas
pusha
xchg
test
sub
mov
and
dec
push
inc
mov
movs
xchg
int3
ins
mov
inc
test
cmp
cwde
fnstcw
push
cmp
sub
fcom
sbb
adc
and
and
or
mov
out
lea
repz
lods
fbstp
imul
cmp
add
push
jb
sbb
and
mov
ficomp
mov
push
ret
ret
xchg
lods
xor
push
sbb
rcr
adc
and
jno
scas
mov
adc
add
pop
or
add
into
ret
xor
and
mov
push
mov
push
add
mov
add
daa
push
fs
sbb
enter
sbb
nop
cmp
ins
xchg
inc
jnp
add
sub
or
xor
xchg
mov
jbe
inc
push
add
adc
or
retf
(bad)
bound
mov
or
cmp
mov
mov
dec
xchg
add
mov
jmp
popf
jno
call
or
cld
dec
mov
sub
xchg
ret
add
(bad)
arpl
add
ror
(bad)
jno
push
and
movs
bound
scas
xor
push
add
dec
cmp
push
push
inc
hlt
sub
mov
adc
addr16
push
push
pushf
sbb
push
daa
push
ds
sub
retf
pop
nop
push
int3
cmp
xchg
push
mov
add
ror
xchg
ins
pop
push
add
pop
mov
enter
data16
adc
xchg
mov
add
mov
cmc
inc
mov
jne
sti
repnz
add
add
nop
out
nop
cs
push
xor
pop
add
push
pop
cs
push
or
push
js
sbb
cmc
scas
lea
in
pop
int3
mov
cmp
lahf
movs
mov
inc
bound
out
add
dec
or
add
xchg
cmp
add
jbe
or
pushf
fwait
mov
or
jbe
js
(bad)
into
xor
mov
push
or
xor
loop
pushf
add
jbe
ror
mov
or
pop
push
mov
or
mov
push
ins
aas
aaa
inc
leave
inc
jo
xor
or
jo
sbb
adc
push
imul
mov
lahf
dec
cmp
pop
popa
fwait
xchg
xor
jns
adc
push
icebp
sub
aam
mov
mov
add
es
(bad)
pop
fs
xor
enter
and
mov
cwde
add
outs
test
push
cdq
cmps
loop
enter
out
jns
test
cmc
push
pop
outs
repz
enter
mov
xor
nop
or
mov
int
jns
mov
push
and
out
mov
repz
add
mov
test
or
add
add
push
or
ret
or
lock
cmp
dec
xor
adc
mov
inc
add
sbb
adc
adc
add
dec
movs
or
or
cmp
pusha
jg
mov
pop
and
inc
add
movs
loop
add
cmp
nop
ror
xchg
icebp
test
mov
cmp
add
dec
pop
mov
push
ss
mov
xor
in
sahf
sti
xor
dec
dec
ja
push
fiadd
mov
sbb
imul
loopne
sbb
mov
aad
call
mov
mov
sub
add
mov
or
push
ret
push
call
or
cmp
jne
mov
mov
into
push
sbb
dec
cld
test
sbb
shr
or
add
add
adc
mov
inc
bound
mov
stc
cs
sbb
cmp
and
sub
dec
nop
imul
dec
or
arpl
test
mov
shl
mov
jmp
pop
je
mov
dec
mov
xchg
jmp
xor
push
cdq
push
cmps
sub
lods
sub
add
dec
mov
icebp
and
xchg
mov
xor
push
(bad)
aas
or
jae
ret
bound
push
pop
stc
add
dec
add
jge
push
and
retf
lea
dec
inc
mov
mov
nop
mov
mov
push
or
mov
mov
xchg
les
add
cwde
mov
add
int3
dec
pop
dec
movs
xchg
adc
xchg
cwde
xchg
inc
xchg
xchg
xor
add
xchg
push
ror
adc
push
dec
pop
or
pop
jbe
inc
sub
test
in
jge
push
mov
push
mov
arpl
in
inc
jmp
cwde
inc
enter
mov
adc
enter
adc
mov
popf
mov
loope
ds
sbb
jnp
jmp
pusha
movs
rol
dec
push
out
test
mov
enter
jp
mov
mov
jbe
add
leave
pushf
mov
pop
les
test
jl
or
xchg
push
fwait
dec
add
adc
or
mov
mov
mov
add
in
and
lea
pop
push
sar
jo
add
mov
add
fisttp
add
(bad)
addr16
dec
repz
adc
and
or
pop
movs
cmp
ret
dec
lds
shl
ins
sbb
xlat
mov
ret
cld
sbb
dec
daa
add
push
(bad)
jge
int3
cmp
sbb
int3
cld
and
sbb
sbb
sub
mov
fnsave
in
mov
inc
add
adc
and
xchg
int3
jmp
push
sub
(bad)
out
aam
add
pop
or
imul
bound
xor
sub
add
popa
xor
or
sar
cmps
lahf
sti
add
push
pop
sbb
push
dec
sbb
mov
dec
je
adc
sub
cmp
and
cmps
or
add
rcl
mov
test
movs
or
imul
je
jecxz
ins
lds
add
test
hlt
xor
test
pop
jp
sub
ss
dec
je
dec
jne
cmp
mov
or
retf
jmp
sbb
rcr
js
adc
mov
xchg
fmul
imul
pop
cdq
or
cmp
sbb
add
sub
aam
push
pushf
enter
rcr
cwde
jmp
pop
dec
pop
dec
cmps
inc
adc
int3
fbld
ins
and
ret
xchg
xor
mov
cdq
sar
xchg
adc
adc
ins
sub
lea
add
xor
(bad)
cmp
add
dec
aaa
xor
add
jle
push
mov
outs
shl
ins
push
mov
shl
dec
adc
adc
mov
out
inc
adc
mov
add
xchg
ret
rol
shr
or
enter
movs
clc
add
jo
cmp
sub
out
and
aam
add
push
inc
pop
js
ret
daa
int
pop
mov
pop
in
rol
stos
shr
fistp
dec
daa
icebp
(bad)
out
cmp
ds
xchg
inc
nop
mov
cld
mov
cmp
mov
xor
in
push
add
dec
int3
push
dec
add
dec
add
stos
or
aas
push
das
dec
jecxz
cdq
cmp
jl
xor
(bad)
mov
adc
sub
add
push
add
call
jo
push
and
cwde
aaa
adc
push
and
scas
dec
xor
dec
inc
adc
mov
test
xchg
clc
sbb
mov
mov
in
fcomp
clc
push
(bad)
sub
movs
dec
jne
fiadd
fcomp
pop
adc
cld
je
icebp
jne
dec
fstp
mov
sub
xchg
push
pop
mov
inc
pop
add
or
jge
dec
mov
cmps
pop
adc
push
mov
pop
and
jecxz
ret
push
jmp
inc
jp
cmp
dec
mov
cmp
pop
inc
sub
fld
push
push
mov
dec
imul
or
or
sbb
lods
fwait
and
dec
dec
scas
mov
cmp
out
cdq
sbb
xchg
mov
push
sub
cmc
and
add
cs
push
mov
mov
jo
adc
cli
or
or
lods
ret
outs
xor
xor
mov
cmp
movs
fs
inc
push
push
push
jno
add
(bad)
rcr
or
test
sub
mov
cmp
pop
cmps
xor
or
sub
push
jmp
cmp
and
cmp
dec
rol
xchg
shl
shl
cmp
xor
mov
hlt
aaa
add
xor
adc
loopne
enter
add
sbb
ficomp
xchg
mov
jo
jp
dec
jmp
fstp
movs
fs
and
jmp
imul
cmp
add
push
xor
mov
xchg
mov
pushf
sub
inc
add
jno
push
add
pushf
js
cmp
idiv
pusha
cmc
outs
add
adc
out
jne
sub
sbb
mov
mov
mov
ret
int
pop
or
push
mov
dec
rcl
sahf
add
(bad)
jmp
or
or
adc
nop
sbb
fisttp
fbld
shr
add
out
sbb
cld
movs
pop
and
sbb
sahf
pop
xor
mov
lock
test
outs
or
mov
fbstp
test
xchg
adc
dec
test
mov
lahf
sbb
or
add
push
pop
dec
mov
shl
jo
pop
imul
push
mov
xchg
(bad)
jb
xchg
pushf
xchg
xchg
mov
lock
sub
loopne
mov
enter
sbb
sar
cmp
mov
pop
jge
jge
xor
add
cmps
fiadd
and
sbb
xor
adc
adc
or
in
add
pusha
cmp
test
and
in
sub
cmp
dec
inc
out
adc
in
cmp
imul
and
pop
inc
mov
or
scas
and
inc
lock
pop
and
xor
mov
push
retf
cmp
and
push
add
cmp
adc
nop
add
add
push
fs
aaa
mov
int
push
mov
push
adc
add
sbb
push
mov
cmp
adc
int
adc
aas
push
mov
pop
jae
mov
dec
popf
adc
and
out
dec
inc
add
add
push
push
inc
xor
pop
cmp
or
pop
jecxz
mov
mov
pop
data16
push
bound
inc
xchg
adc
xchg
jg
add
mov
jns
jg
retf
popa
daa
inc
mov
mov
sbb
fiadd
cld
mov
nop
mov
inc
inc
(bad)
loop
retf
add
fs
dec
out
add
add
xchg
or
shr
std
push
call
in
bound
mov
sub
cmp
aas
xlat
dec
nop
mov
mov
xchg
inc
jmp
xchg
inc
push
iret
add
push
mov
xchg
test
sub
sub
add
pop
call
pop
lea
and
xor
mov
(bad)
invd
stos
test
adc
or
dec
aas
and
sbb
add
pusha
scas
test
retf
and
sahf
sbb
adc
sti
pop
je
add
fist
xor
adc
cmp
pop
test
in
mov
test
sbb
addr16
sbb
shl
es
call
call
loope
jmp
arpl
gs
push
stos
sbb
inc
mov
loopne
dec
lahf
mov
push
lds
jo
sbb
mov
popa
or
sbb
add
mov
in
clc
add
add
fs
scas
ss
pop
sar
int3
test
push
cmp
fwait
add
repnz
inc
inc
add
jb
inc
push
jb
jb
dec
loopne
xor
movs
test
in
mov
add
dec
mov
inc
mov
(bad)
gs
enter
push
fidiv
inc
push
add
ja
(bad)
jo
mov
pop
test
in
lods
add
jl
push
pushf
rcl
movs
pop
sub
and
out
adc
mov
xor
push
mov
mov
pop
push
shl
or
adc
js
adc
push
mov
mov
sub
or
xchg
dec
test
dec
xor
pop
stos
ret
cdq
add
sbb
adc
add
xchg
push
cs
fisub
pushf
shl
ins
loopne
jno
popf
add
jecxz
ss
mov
cmps
jno
push
push
inc
add
test
push
mov
xchg
add
push
aas
test
mov
lds
js
jo
mov
mov
outs
loope
dec
call
xor
jae
sub
in
push
inc
inc
push
lods
and
xor
fwait
pop
fld
or
adc
push
and
popf
or
or
and
(bad)
rcl
pushf
add
cmps
push
sbb
stos
test
mov
lea
or
mov
adc
xchg
push
data16
add
push
sub
dec
ins
add
adc
and
sub
jbe
inc
cld
cmp
ret
add
mov
push
cmp
adc
jbe
push
push
add
jnp
lods
add
dec
or
or
xor
dec
ins
shl
pop
clc
add
sbb
jecxz
mov
xchg
and
loop
neg
add
sbb
lahf
(bad)
aaa
mov
stc
or
push
(bad)
dec
inc
stc
or
add
in
jbe
xchg
and
(bad)
retf
outs
clc
and
mov
int3
cmps
push
add
clc
add
jbe
push
add
jl
js
inc
mov
adc
adc
or
repz
mov
sbb
cmovge
into
jne
repz
loopne
jge
add
shl
mov
sub
push
cli
add
icebp
and
inc
data16
push
xor
sub
mov
and
dec
sub
dec
add
(bad)
sar
addr16
inc
icebp
mov
push
fld
ret
or
sbb
lds
dec
mov
fst
ja
fdiv
pop
das
daa
cmp
dec
je
test
es
push
add
into
fsubr
mov
adc
add
or
clc
scas
add
xchg
adc
push
shr
adc
inc
push
add
shl
movs
(bad)
add
fsubp
mov
sub
adc
lods
xchg
push
(bad)
aad
push
ror
jae
into
fdivr
ret
mov
cmp
sub
int
fild
add
and
lods
add
xor
push
mov
sbb
je
adc
mov
mov
push
(bad)
call
xchg
dec
jne
lods
(bad)
cmp
movs
or
aaa
mov
movs
ja
or
div
xchg
jle
gs
add
jb
and
sub
push
inc
test
adc
or
xchg
mov
mov
xchg
loopne
push
pop
js
add
dec
mov
test
lock
dec
stos
xchg
xchg
mov
or
pop
adc
clc
xchg
dec
sub
inc
sbb
push
cld
ror
cmp
add
mov
mov
mov
sub
int
cmp
or
dec
test
or
jno
ins
push
mov
push
and
ret
and
sti
add
cmp
mov
loop
xchg
xchg
loopne
test
pushw
cmp
stos
imul
test
pusha
test
cs
imul
or
je
lahf
fisttp
push
xor
cmp
push
sub
out
or
rol
out
bound
pop
dec
fmul
xchg
idiv
add
outs
lea
sbb
mov
sbb
adc
add
cmp
xchg
pop
xlat
jmp
mov
es
ret
nop
lods
inc
scas
add
test
push
pop
inc
adc
lahf
sub
push
fld
xchg
test
xchg
shl
or
mov
loop
imul
sbb
sti
xchg
shl
sub
xchg
test
push
cmp
push
mov
pop
dec
add
cld
xchg
call
push
lea
mov
jl
pop
cld
jo
sub
push
fst
jno
add
cld
test
dec
pop
enter
mov
mov
nop
add
cmp
fsub
push
gs
in
cmc
sub
js
pop
jp
push
mov
rcl
pusha
xchg
addr16
loopne
xlat
repnz
enter
or
xor
test
mov
add
add
push
(bad)
movs
lock
cmps
and
mov
cdq
pop
fisubr
pop
jnp
jp
cmp
js
fadd
jno
sub
pop
out
lea
or
inc
adc
dec
fadd
cmp
inc
loopne
xor
rcl
ds
aas
arpl
push
add
push
dec
nop
pop
mov
sub
push
xchg
sub
sbb
cmps
pop
sub
xchg
or
inc
sar
pop
fs
jnp
and
mov
adc
jmp
cmp
iret
test
or
lods
xchg
mulps
nop
(bad)
pop
cs
jp
push
pop
lods
lea
aas
fwait
sbb
inc
add
cmp
push
sbb
rol
loopne
ret
cmp
add
enter
adc
push
and
add
jae
popa
and
int3
push
cmc
jl
out
dec
fstp
mov
mul
ja
push
sbb
int3
mov
rol
mov
cmp
push
adc
popf
lea
popa
popf
and
cmp
xlat
ds
(bad)
mov
jmp
sub
or
add
ret
sub
ds
pop
test
and
adc
adc
pop
mov
adc
mov
add
mov
sbb
inc
sar
icebp
mov
gs
mov
pop
ja
arpl
lea
pop
and
mov
test
lock
rol
mov
mov
daa
or
push
inc
enter
cwde
cmps
mov
inc
add
aad
mov
rcl
fld
push
mov
std
ret
push
or
or
mov
dec
in
aam
and
and
lds
jo
jg
adc
jo
xor
test
aas
dec
dec
jo
ror
or
(bad)
adc
jmp
add
fmul
pop
xor
pusha
ret
sbb
fidiv
imul
test
je
loop
mov
xor
loop
push
or
cmp
inc
ds
mul
loopne
dec
cmps
mov
in
fistp
aam
in
cmp
je
test
jns
bound
push
outs
dec
or
xchg
jne
lahf
jmp
inc
jecxz
push
loope
addr16
cmp
dec
mov
mov
stc
xor
xchg
push
mov
ret
adc
dec
adc
int
rcl
cmps
push
jg
pop
jmp
jecxz
jne
xchg
push
rcr
push
rol
push
pop
loopne
inc
test
mov
test
call
pop
xchg
aam
add
adc
jo
call
xchg
bound
and
ja
popf
ret
cmc
call
pusha
imul
sbb
push
sbb
add
push
xor
out
xchg
push
jb
sub
xchg
dec
inc
xor
add
sub
pop
or
add
pop
fadd
ins
mov
scas
mov
add
sti
add
jb
push
push
test
push
sbb
fist
test
pusha
mov
fistp
add
and
adc
rol
and
or
sbb
and
jbe
pop
mov
andps
inc
lock
xor
jg
sahf
imul
xchg
loope
adc
xor
ds
popf
test
cmps
or
push
push
loopne
rcl
cld
popa
push
ret
jmp
add
xlat
add
enter
inc
pushf
and
mov
and
inc
hlt
cmp
or
xlat
jmp
das
add
sbb
sbb
jb
add
and
(bad)
add
push
add
repnz
xlat
adc
loop
les
xchg
mov
in
sar
mov
je
mov
add
ins
into
inc
arpl
xlat
inc
mov
or
jmp
mov
pusha
mov
adc
push
mov
js
les
jecxz
xchg
add
xchg
in
out
(bad)
lea
enter
les
sub
lods
mov
xchg
shl
loopne
adc
inc
std
cs
or
inc
or
mov
jmp
and
or
(bad)
imul
retf
mov
int
push
mov
jns
push
call
inc
push
push
add
inc
mov
mov
push
call
xor
pop
loop
test
push
mov
xor
imul
stos
inc
inc
add
stc
xchg
push
mov
repnz
fldcw
or
je
or
add
mov
or
jns
aad
es
mov
dec
and
call
dec
xor
push
mov
push
push
test
adc
add
mov
cmp
jne
inc
in
jmp
scas
(bad)
iret
push
out
mov
mov
xor
or
and
out
lock
sub
add
ja
jmp
test
or
and
cmp
and
jbe
pop
inc
sub
xchg
imul
invd
and
repnz
sbb
pop
xor
push
pushf
pop
mov
in
cmp
or
push
ret
mov
cdq
nop
mov
in
sub
nop
not
pushf
imul
and
lds
inc
fisub
xor
jne
sbb
(bad)
mov
inc
cmp
xchg
lock
clc
ss
mov
test
cmp
mov
pop
add
jl
add
in
and
jne
lea
mov
icebp
jne
push
inc
push
pop
xchg
jp
mov
jne
add
mov
jmp
in
adc
xor
jne
pop
cmp
minps
add
fcomp
out
push
dec
fisub
pop
hlt
mov
fnsave
(bad)
ins
arpl
sub
push
cli
cld
stc
push
dec
mov
jo
push
jmp
mov
dec
mov
xor
sub
mov
std
jo
arpl
shl
je
stc
out
dec
pop
shl
jae
fwait
jne
pop
nop
push
loopne
jmp
and
adc
or
sbb
lock
jp
add
data16
xor
sub
pop
add
cmp
sbb
jge
cmp
add
mov
outs
loopne
aad
mov
(bad)
add
out
mov
dec
xor
fwait
add
fs
lods
xor
cmp
rol
das
push
inc
xchg
or
daa
sub
or
popf
push
xchg
aad
fld
add
fidiv
push
popa
pop
fst
clc
je
sbb
pop
mov
mov
push
call
and
jb
push
pop
jae
dec
mov
mov
mov
fnstenv
xor
push
mov
dec
dec
jl
mov
retf
daa
or
jmp
call
xchg
and
inc
xchg
lods
xor
out
push
icebp
add
clc
add
pop
pop
adc
call
inc
mov
dec
push
sbb
mov
aaa
xor
dec
inc
inc
pop
inc
inc
push
adc
fcomp
adc
stos
imul
scas
and
fdiv
push
add
adc
sbb
or
mov
add
mov
and
in
mov
popa
call
pop
jb
push
mov
ins
icebp
nop
xor
dec
dec
pop
sub
dec
cmp
cmp
test
(bad)
(bad)
ss
arpl
cmp
push
in
push
sbb
test
add
cmp
sbb
xchg
aaa
not
fs
mov
movs
in
or
xor
das
sbb
ds
sbb
add
test
adc
test
icebp
push
sbb
call
cmp
cli
gs
sub
in
ret
or
lods
pop
mov
sahf
lahf
fild
sahf
addr16
adc
jp
mov
inc
and
call
dec
push
sub
mov
inc
neg
je
js
adc
loopne
mov
push
stc
cmp
mov
add
(bad)
mov
pop
movs
ins
cmp
fdivr
inc
pop
jae
jae
icebp
and
loopne
fmul
sahf
cmovns
add
(bad)
pop
push
pusha
pop
or
lahf
or
jo
dec
push
adc
inc
lods
jecxz
sbb
fdivr
mov
jo
lock
inc
cmps
arpl
jae
imul
lock
dec
xchg
pop
or
adc
push
in
outs
mov
fs
lods
int3
(bad)
add
adc
arpl
add
(bad)
push
add
arpl
leave
jo
in
lds
inc
aaa
sub
ins
adc
test
cld
push
popf
int3
pop
push
dec
and
popa
add
sbb
pop
and
sbb
add
clc
jo
xchg
xchg
and
or
shl
ja
lahf
add
int3
(bad)
mov
add
test
es
call
cmps
sahf
mov
cmp
(bad)
add
inc
xchg
jmp
sbb
jle
jb
or
aam
mov
mov
test
or
in
inc
xor
jecxz
dec
push
push
pop
sbb
sbb
add
lods
or
mov
mov
push
cs
and
rcl
(bad)
int3
test
jmp
inc
xor
inc
add
pop
(bad)
js
imul
call
jo
adc
pop
das
adc
xor
push
gs
or
and
pop
shl
mov
dec
xchg
stos
call
cmp
cmp
xchg
inc
repnz
js
sub
push
mov
mov
inc
lods
adc
mov
pop
loop
(bad)
dec
cmp
outs
jmp
xchg
adc
fisub
shr
sub
adc
loope
fistp
inc
jl
jmp
jns
mov
nop
shr
or
jg
rol
push
push
dec
addr16
xor
imul
xchg
test
or
ja
rol
cwde
fs
and
data16
cmps
stos
mov
fbstp
rcl
pop
fcom
jb
and
gs
jp
in
or
call
cld
jmp
sub
imul
pop
nop
ds
stc
icebp
jnp
adc
push
cmp
lds
sub
ins
loopne
sbb
loopne
mov
cmp
dec
mov
out
inc
retf
push
sbb
je
jmp
fst
adc
sbb
inc
sbb
mov
pop
pop
adc
ja
push
mov
fmul
jno
cwde
cdq
cdq
add
addr16
loop
push
das
cmp
jmp
dec
clc
aas
imul
inc
jp
push
cdq
sbb
aaa
test
mov
inc
jg
jmp
rcl
mov
xchg
pop
inc
movs
jns
arpl
pop
repz
and
bound
dec
push
xor
pop
dec
shl
mov
clc
add
add
leave
adc
inc
cs
pop
dec
pop
imul
pop
xor
or
js
mov
or
cwde
data16
or
sbb
add
xor
js
pop
mov
add
cmp
aam
loopne
jl
inc
xlat
rol
ins
and
xor
add
cmp
cmps
cdq
push
inc
gs
fidiv
add
lahf
sub
pop
push
aas
lea
nop
mov
adc
or
popa
mov
or
imul
xor
adc
daa
cmp
lea
push
xor
cmp
or
es
inc
jmp
xor
stos
and
pop
ret
jmp
xchg
add
push
shl
(bad)
inc
sub
sbb
dec
call
inc
xchg
push
inc
add
mov
sub
mov
mov
push
sub
jge
xchg
stos
xchg
xor
nop
dec
aas
push
or
sbb
aas
mov
push
push
mov
in
sbb
call
jnp
and
push
xchg
push
aam
dec
leave
test
retf
adc
push
push
mov
scas
aaa
sbb
add
push
add
mov
lock
sub
cmp
nop
jg
xor
in
or
ror
and
sub
and
scas
add
cmp
mov
nop
fmul
push
ficomp
daa
hlt
sbb
je
or
inc
or
add
fcomp
iret
test
bound
mov
add
jo
into
les
lds
xor
rcr
cwde
push
cdq
pop
(bad)
dec
popf
push
and
popa
add
mov
inc
je
jo
movs
in
dec
mov
push
sub
inc
aas
cmp
addr16
outs
(bad)
sub
test
mov
inc
add
test
fwait
dec
into
push
lea
test
pop
and
adc
and
and
pop
ficomp
in
fwait
cmps
adc
pop
and
enter
sbb
xor
dec
mov
mov
or
mov
jecxz
(bad)
mov
jmp
jle
jb
mov
cmp
inc
mov
inc
push
test
mov
add
add
add
xchg
or
sbb
xor
cmp
cwde
adc
or
add
mov
xor
es
or
fst
aam
push
push
sub
mov
xchg
sahf
xor
mov
movs
mov
mov
or
or
or
and
push
adc
in
stos
xor
mov
xor
fmul
xchg
test
in
and
sbb
cmp
and
rcpps
stos
shl
jecxz
call
out
mov
adc
inc
inc
js
(bad)
push
rcl
clc
push
jo
mov
push
aas
or
nop
xor
xor
test
leave
icebp
mov
xor
sbb
push
or
xor
sar
popa
or
xchg
sbb
sti
inc
arpl
dec
ins
das
pop
jge
cwde
loop
push
add
outs
add
push
sbb
sub
xor
scas
push
movs
sahf
sub
adc
mov
in
call
and
(bad)
stc
fisttp
jle
fnstsw
mov
bnd
fwait
pop
add
jl
mov
movs
aad
add
add
mul
out
push
outs
cwde
pop
outs
dec
in
jo
loope
jnp
stos
test
pop
jne
sbb
xor
fs
call
pop
push
lock
mov
sbb
loopne
std
lock
in
cmp
mov
loop
popa
mov
or
xchg
mov
or
adc
cdq
nop
mov
add
push
add
pop
in
mov
add
xchg
or
add
ds
add
push
cmp
cmp
or
sbb
adc
add
add
fwait
mov
sub
or
inc
add
xchg
outs
push
xchg
jb
aaa
fwait
in
out
and
mov
ror
sbb
stos
cmp
xor
shl
inc
dec
sub
jp
cmp
in
inc
xchg
std
push
add
jmp
push
mov
inc
push
nop
loop
jp
dec
mov
rcl
mov
loopne
push
push
rcr
cs
mov
pop
add
push
or
push
jl
xor
inc
movs
inc
inc
inc
out
inc
xchg
and
push
movs
sbb
mov
fidiv
test
push
pop
pop
scas
pop
leave
call
jne
push
pushf
or
or
and
fsubr
and
int
enter
push
movs
or
add
jb
out
or
(bad)
cmc
test
arpl
fcom
nop
cmps
cmp
adc
or
dec
imul
dec
daa
jmp
pop
adc
inc
loopne
sub
test
out
rcr
mov
movs
and
sub
movs
aam
and
mov
int
or
jnp
mov
or
xor
lahf
and
(bad)
gs
icebp
call
xor
jge
push
daa
adc
inc
inc
sbb
ffreep
adc
add
or
and
ins
cmp
dec
mov
push
pop
cmps
xor
lock
fnstenv
or
or
jno
cmp
or
test
je
mov
sbb
and
shl
pop
add
not
out
pusha
add
pusha
pop
repz
stos
or
shr
mov
dec
mov
lds
or
loopne
xchg
inc
add
dec
(bad)
xchg
cmc
outs
call
mov
mov
push
test
fcomp
push
push
movs
mov
lahf
adc
mov
jecxz
mov
jmp
mov
push
jmp
ss
mov
add
dec
(bad)
dec
shr
test
xchg
pop
les
mov
add
idiv
add
stos
dec
sub
fiadd
sub
inc
push
fcomp
add
push
xchg
pop
xor
pop
int3
repnz
jne
je
cmp
pop
push
ret
push
push
leave
pop
inc
(bad)
retf
fcomp
xor
(bad)
mov
sub
xchg
push
add
cmc
add
das
adc
into
jo
xor
inc
mov
push
sbb
out
xor
adc
movs
enter
pop
pop
es
(bad)
push
aad
outs
dec
xchg
pop
mov
inc
mov
add
xchg
sub
mov
sbb
mov
shl
cmp
loope
pop
fwait
sub
pop
cmp
jmp
mov
inc
int3
mov
pop
sub
pop
test
inc
mov
xchg
scas
enter
jae
sbb
or
aad
and
lahf
into
push
fstp
cld
and
mov
outs
push
dec
xchg
dec
inc
adc
sbb
mov
jno
enter
jae
popa
mov
pop
ret
or
mov
repz
in
hlt
dec
daa
push
mov
and
xchg
push
sbb
cmp
xchg
add
push
and
ret
fst
mov
iret
repz
outs
in
test
xor
daa
push
or
clc
inc
sbb
adc
add
hlt
mov
sub
adc
fsub
mov
and
dec
bound
in
fwait
inc
or
xchg
ss
iret
std
rcr
or
gs
jns
push
pop
mov
pop
ret
inc
call
test
ret
push
cmp
inc
add
jb
imul
je
inc
loopne
cwde
sub
cdq
mov
loop
cmp
xchg
push
inc
sub
jo
dec
test
add
cwde
ds
inc
aam
push
mov
inc
jbe
or
adc
dec
jl
rcl
cmc
push
push
add
out
ss
jle
xor
jecxz
mov
stc
adc
or
cmp
int3
jl
mov
imul
inc
xor
inc
mov
ret
aad
inc
les
sub
dec
inc
pop
adc
push
add
mov
sbb
inc
call
fidiv
adc
fdiv
sub
inc
sbb
or
push
mov
sbb
loopne
add
adc
push
push
dec
and
or
fadd
mov
lea
jl
adc
xchg
out
xchg
add
(bad)
sbb
push
sub
inc
pop
adc
ds
test
or
add
loopne
dec
lods
push
or
push
or
push
mov
push
or
push
inc
ret
or
sahf
dec
sub
test
lock
pop
(bad)
inc
adc
push
js
xchg
inc
sbb
push
loop
je
fdiv
push
sub
cmp
sar
adc
adc
pop
and
inc
adc
rcl
adc
das
add
jo
push
ds
dec
xor
movs
fs
pop
sbb
les
mov
arpl
sbb
call
mov
jnp
cdq
sub
dec
cmps
in
mov
rcl
adc
push
lea
inc
dec
add
push
add
pop
sub
pop
div
lea
shl
retf
(bad)
(bad)
add
push
scas
out
shl
sbb
retf
bswap
ins
jp
push
mov
jl
add
shl
rcr
add
sbb
sbb
stos
dec
int3
jns
loop
ja
sbb
nop
int3
mov
enter
test
xchg
out
sbb
enter
rol
fs
mov
lods
ror
les
push
dec
ror
les
jbe
and
cdq
imul
push
push
fwait
cmp
mov
in
les
and
cmp
adc
push
sbb
xchg
mov
call
and
popa
or
push
and
and
rcl
rol
js
cmp
popf
fs
mov
cmc
mov
and
and
mov
loopne
jle
cmp
xchg
ror
and
add
sbb
(bad)
push
xor
fdivr
push
movs
add
dec
push
sub
pop
lea
popa
cmp
add
push
mov
pop
or
push
sub
loopne
ret
jle
icebp
mov
jne
push
je
shr
mov
mov
mov
and
push
mov
stos
or
xlat
adc
in
add
add
aam
setge
dec
fcomp
ja
movzx
mov
stos
mov
aaa
repz
xor
sbb
jne
(bad)
nop
xor
adc
mov
inc
add
add
xor
mov
fist
push
push
pusha
sbb
xor
and
dec
jb
xchg
push
push
(bad)
cmp
je
adc
cmp
rol
dec
dec
and
sbb
mov
icebp
mov
sar
and
dec
mov
rcr
pop
pop
popa
rol
cmp
sbb
and
push
sub
out
add
xor
je
shl
xchg
and
mov
push
ins
leave
rcr
sub
mov
mov
lea
mov
scas
int
jbe
test
pop
icebp
and
aam
imul
sub
pop
jb
jnp
or
fmul
pop
xor
popa
add
ret
add
mov
in
inc
push
mov
in
std
xchg
mov
push
dec
push
inc
ins
or
add
xor
(bad)
imul
push
test
pop
gs
dec
pop
pop
adc
inc
pop
sbb
add
and
jne
movs
push
add
jg
or
loopne
add
fisttp
or
push
mov
aad
mov
xchg
cmps
or
or
push
loopne
nop
jbe
loop
push
rcl
jnp
out
xor
movs
dec
add
aas
sub
jg
and
xor
js
sbb
and
clc
sbb
jnp
cmc
inc
jmp
sub
or
sbb
sub
adc
sub
and
or
mov
xor
rol
sub
cmp
xchg
mov
adc
pop
push
and
jne
jge
cdq
or
jne
push
icebp
daa
icebp
push
xchg
pop
or
push
mov
inc
lods
xor
pop
movs
sahf
repz
cwde
xchg
mov
xor
add
ss
adc
rol
add
retf
fiadd
sbb
and
sbb
mov
push
stos
shr
add
dec
add
push
pop
lea
(bad)
and
mov
lock
sahf
adc
mul
inc
pop
test
add
sbb
dec
xchg
push
ret
inc
call
push
ja
scas
pop
or
pop
add
nop
sub
or
add
cs
lock
pop
sub
mov
dec
adc
sub
pop
test
jge
push
adc
mov
mov
adc
add
mov
fnstcw
test
sub
xor
jne
ja
movs
push
test
arpl
or
cmps
pop
push
or
cmp
sub
and
(bad)
mov
push
lea
rol
sbb
mov
mov
in
add
inc
enter
mov
or
dec
adc
sbb
xchg
(bad)
push
fstp
sbb
sub
sbb
hlt
push
add
pop
add
or
xchg
mov
loope
mov
push
push
scas
test
or
adc
xchg
in
or
inc
sti
adc
and
or
jne
mov
xchg
jo
sub
addr16
mov
dec
shl
mov
add
push
and
(bad)
scas
or
fs
or
cmp
jo
inc
or
adc
nop
loope
aas
pop
(bad)
mov
pop
add
(bad)
adc
add
cs
aam
loopne
in
jno
hlt
push
cmp
pop
and
das
sub
cmps
pop
xchg
push
mov
sbb
outs
mov
sbb
adc
pop
sub
adc
push
adc
lods
mov
add
gs
icebp
mov
fidivr
in
adc
bound
outs
mov
adc
add
xor
call
pop
push
inc
in
mov
scas
call
mov
das
retf
movzx
jae
test
icebp
inc
push
pushf
jbe
mov
jb
xchg
lock
loope
and
dec
(bad)
xchg
test
mov
js
or
sbb
hlt
mov
enter
pop
mov
fcmovb
fst
sahf
aam
sbb
or
mov
sbb
and
and
fs
cmp
jge
or
jno
dec
loopne
jne
inc
pop
jnp
ror
sbb
das
jo
mov
sbb
inc
xchg
outs
ret
mov
add
add
cli
or
mov
push
add
lahf
je
add
mov
mov
popa
lea
pop
and
cli
sub
or
mov
icebp
xor
mov
cli
xchg
adc
add
mov
adc
ret
xchg
jb
add
mov
add
or
mov
test
push
push
xor
jo
mov
adc
inc
cld
xor
and
sub
sub
cmp
jo
addr16
pop
xchg
mov
mov
in
inc
movs
mov
mov
sar
aaa
clc
add
add
sub
xor
cmp
popf
adc
add
or
daa
push
dec
scas
les
popa
or
cwde
xchg
mov
lock
cli
shr
ror
inc
and
arpl
scas
mov
inc
xchg
adc
jl
inc
sub
int3
ret
mov
mov
push
and
outs
add
push
or
inc
popa
or
test
hlt
xchg
adc
or
cmp
and
inc
rol
add
xlat
xchg
lods
inc
or
lahf
push
mov
popa
ja
outs
lahf
clc
retf
inc
push
(bad)
fcom
in
dec
add
aaa
mov
push
aaa
dec
xor
rcl
int
push
sub
adc
(bad)
push
ror
push
fdiv
and
add
and
lods
fs
mov
shl
pop
stc
ja
das
or
pop
or
lea
setge
dec
ret
mov
popa
call
loopne
adc
call
jno
push
sub
cmp
sahf
dec
push
sar
fisttp
mov
inc
fwait
in
ins
add
xor
cwde
nop
test
and
xor
cwde
dec
sub
push
test
rol
fnstcw
and
adc
pop
ret
dec
fs
sub
dec
add
mov
inc
xchg
jnp
add
call
cmps
sub
xor
or
fs
stc
test
add
(bad)
shl
jns
loope
mov
pop
and
mov
mov
sub
push
call
shr
xchg
test
jno
fld
pop
bound
xchg
imul
xor
fwait
push
inc
cmp
cmp
je
nop
xor
mov
adc
je
js
mov
fnsave
mov
cwde
dec
lods
and
icebp
movaps
add
jmp
and
imul
in
jne
inc
add
xchg
data16
add
adc
or
sbb
stos
aas
sbb
mov
xor
fs
push
test
cmc
jle
cmps
aaa
out
push
jns
and
add
sub
push
add
cld
ret
sub
add
pop
adc
sbb
mov
sbb
jle
sub
fwait
shl
pop
fdiv
pop
stc
adc
sbb
lods
mov
inc
mov
and
jae
mov
jns
add
push
adc
jmp
inc
sub
cmps
lea
or
sbb
or
adc
or
mov
icebp
cwde
inc
shr
jne
add
das
xchg
cmp
les
push
jae
add
sub
or
add
pop
in
inc
imul
ja
xor
pop
pusha
fsubr
mov
in
xchg
sar
or
or
adc
sbb
push
prefetch
adc
pop
test
mov
mov
adc
ss
xor
lods
sub
movs
mov
or
lods
inc
sbb
and
jnp
adc
mov
test
les
or
fucom
cmps
test
add
mov
loop
es
aas
sub
mov
popa
push
stos
adc
and
scas
inc
jle
loope
inc
pop
dec
in
push
sahf
lock
lock
dec
test
mov
push
sub
adc
inc
add
sbb
rol
lock
inc
nop
push
xor
xchg
add
in
push
inc
aas
sub
cmp
int3
mov
mov
ins
jl
or
and
add
dec
loopne
and
xor
hlt
out
add
mov
mov
xor
adc
adc
mov
mov
shr
push
xor
adc
bound
out
lea
daa
xchg
nop
sbb
sbb
stos
and
cwde
add
mov
js
add
repz
sbb
adc
fidiv
push
(bad)
inc
ins
sub
jmp
adc
adc
cmps
sbb
pop
jecxz
or
lahf
outs
jne
cmp
add
push
cli
movs
xchg
test
pop
les
push
scas
ror
ins
adc
je
dec
dec
loopne
sub
rcr
dec
jmp
into
popf
add
or
inc
pop
fnstcw
jge
movs
adc
mov
nop
clc
ds
sbb
mov
cwde
pop
sbb
sar
popa
push
cmp
jne
inc
pop
ja
sbb
push
(bad)
mov
jb
sbb
inc
mov
imul
int3
aaa
loopne
lock
inc
loopne
mov
fist
jg
pop
aaa
call
lea
les
adc
mov
rol
add
(bad)
iret
loopne
push
inc
ja
inc
movs
aaa
test
fild
dec
cwde
addr16
push
lock
adc
inc
dec
dec
pop
push
mov
or
fsubr
xchg
js
and
add
mov
cmps
pop
out
xchg
sub
adc
imul
mov
sar
ins
mov
pop
cmp
inc
add
add
mov
mov
mov
inc
das
or
je
or
jne
in
pop
jne
mov
sbb
sbb
pushf
fst
sub
push
mov
pop
and
pop
mov
or
cmp
bound
xchg
jo
dec
and
push
jno
pop
shl
aaa
les
or
push
or
pop
adc
push
add
dec
mov
retf
ins
push
xor
mov
add
inc
jno
ror
or
mov
ins
cmp
adc
add
cs
sbb
adc
mov
sbb
inc
nop
dec
leave
sub
sub
mov
stos
idiv
push
mov
adc
nop
into
lods
je
add
push
mov
or
xchg
sbb
lahf
inc
cmp
cmp
xor
mov
mov
shr
ja
inc
mov
push
xchg
std
popf
js
mov
push
inc
push
push
inc
mov
mov
pop
inc
adc
mov
xchg
pop
fild
jmp
ins
outs
mov
xor
add
out
dec
repz
jae
mov
mov
jb
pop
xchg
pusha
or
add
imul
shl
test
sub
test
lods
scas
and
xchg
push
xchg
(bad)
test
jno
hlt
adc
dec
mov
scas
mov
cwde
or
dec
jae
(bad)
sti
fisub
cmp
xor
or
mov
sbb
sbb
(bad)
push
xchg
fisub
cdq
cmp
xchg
dec
xchg
push
mov
pusha
and
repz
lods
stc
fwait
js
scas
aaa
mov
fwait
sub
fdivr
out
enter
and
inc
and
dec
arpl
jb
inc
outs
retf
push
adc
push
xor
sbb
dec
pop
cdq
push
imul
dec
cs
and
inc
xchg
sbb
inc
cmp
test
sub
sbb
ror
add
sbb
mov
das
cmp
and
adc
mov
add
sbb
and
mov
mov
dec
int3
add
jne
iret
retf
mov
add
mov
iret
xchg
adc
sbb
mov
xchg
mov
pop
push
push
pop
ror
mov
and
pop
imul
mov
les
(bad)
mov
les
mov
push
loop
sbb
clc
lea
rol
cs
mov
mov
or
ja
mov
iret
mov
movs
ja
mov
push
mov
fmul
mov
add
rcl
sbb
cmp
xchg
(bad)
xchg
fdiv
iret
lods
push
adc
jp
imul
cmps
mov
dec
mov
clc
out
pop
mov
cmc
add
and
pop
into
in
fdivr
mov
in
pushf
aad
ins
inc
imul
inc
cld
xor
in
sahf
adc
add
sbb
pusha
sub
push
pop
add
test
jecxz
dec
pop
sub
push
pop
adc
sub
add
push
push
cmp
fwait
int
cmp
inc
nop
sub
sahf
addr16
inc
icebp
inc
adc
pop
in
cmp
jns
mov
aas
stos
jno
push
icebp
mov
idiv
es
mov
fidivr
cmp
push
mov
push
jb
mov
js
out
(bad)
adc
push
inc
pusha
rol
test
and
stc
call
adc
push
adc
adc
pop
sbb
sbb
pop
nop
and
and
inc
inc
cmp
jo
and
sbb
cs
rcl
xchg
es
(bad)
fbstp
jno
loopne
sbb
loopne
jne
sub
shr
push
push
pop
fsub
cld
nop
out
push
sbb
test
jecxz
pop
mov
push
test
and
mov
sub
test
mov
push
mov
popf
jb
sub
xor
iret
jmp
outs
cwde
or
outs
inc
rcl
sbb
and
ins
dec
dec
sub
xchg
imul
pusha
xor
adc
test
and
adc
ret
inc
xor
and
jecxz
mov
adc
loopne
fadd
in
pop
mov
and
sub
mov
and
sub
mov
mov
ror
cmp
lea
or
in
or
fwait
loopne
sbb
and
mov
mov
cmp
push
sbb
sub
or
clc
and
and
adc
fimul
cmps
das
mov
push
pop
arpl
add
dec
dec
push
dec
loop
(bad)
dec
add
inc
call
push
jb
adc
mov
(bad)
xor
aad
sub
adc
inc
movs
or
(bad)
pop
imul
loop
ins
or
imul
xor
and
and
push
inc
xlat
pop
push
jnp
jo
data16
mov
push
and
xlat
xchg
mov
mov
add
lahf
sbb
push
and
loopne
loope
dec
jle
mov
xor
pop
xor
sub
add
add
inc
xor
sar
ret
pop
xor
mov
and
xor
and
xchg
cmp
sub
leave
stos
fst
call
mov
nop
add
fild
or
adc
sub
mov
les
push
mov
xchg
nop
adc
dec
push
rol
mov
add
pop
push
enter
pop
xchg
jg
movs
mov
adc
jns
outs
sub
xchg
mov
(bad)
mov
inc
sbb
js
inc
add
nop
cs
fsub
lea
ins
in
inc
adc
outs
pop
pop
cmp
lock
leave
test
sub
xchg
in
jl
sti
inc
push
leave
ins
movs
clc
test
lock
mov
add
sbb
mov
dec
inc
push
out
sbb
inc
loopne
sti
mov
cwde
cmps
and
pop
cmp
push
pop
inc
jl
xchg
cmp
test
jle
or
add
shl
movs
ins
dec
add
push
xchg
mov
rol
fstp
rcl
sbb
cld
xchg
fbstp
inc
fmul
inc
mov
arpl
fist
and
pop
xor
daa
mov
sub
je
xchg
adc
fwait
mov
or
test
(bad)
fld
xchg
inc
and
in
add
push
test
out
sub
push
js
pop
inc
inc
mov
xchg
or
and
add
or
cs
int
lea
jecxz
jl
xchg
fisttp
into
lea
dec
push
in
movs
or
in
pop
test
test
popa
push
shl
sbb
dec
pop
popf
pusha
ret
pop
leave
or
mov
push
sbb
into
hlt
adc
rol
movs
xchg
and
cmp
and
jo
sub
lds
add
or
les
xor
icebp
rol
dec
loopne
adc
jl
or
fidiv
xor
jno
mov
xchg
stos
add
pusha
push
loope
push
add
and
adc
xchg
in
sbb
psubusb
sbb
out
add
dec
xchg
lock
mov
xor
scas
mov
out
or
push
pop
mov
ss
sub
imul
dec
sbb
add
dec
push
mul
dec
jbe
sub
popa
sub
push
jl
mov
and
inc
push
and
mul
mov
inc
ret
mov
and
inc
mov
push
xchg
lds
loopne
ret
pop
inc
adc
cld
push
stos
and
push
rol
push
js
push
adc
movs
out
not
(bad)
cmp
jne
scas
mov
jmp
jmp
and
jle
pop
sub
(bad)
mov
xchg
jo
loop
add
push
cmp
lds
scas
and
push
mov
pop
or
sbb
and
cld
or
leave
sbb
adc
lock
mov
int
pop
add
or
sbb
sbb
xchg
or
enter
adc
pop
cmp
xor
rcr
push
or
cld
inc
sbb
mov
lea
dec
add
mov
popf
sbb
push
mov
sbb
mov
gs
add
shl
push
fsubr
and
sbb
movs
loope
cld
cmp
mov
or
dec
add
or
ins
and
jle
fisub
or
jo
dec
push
xor
and
jp
and
adc
mov
lock
jns
loopne
scas
inc
pushf
push
call
jp
bnd
dec
cld
sub
ror
push
mov
and
add
loopne
inc
pop
mov
xabort
mov
sbb
dec
push
inc
fyl2xp1
jbe
adc
call
push
xchg
cmp
mov
push
fwait
hlt
mov
hlt
push
pop
xor
mov
repz
ror
jmp
sub
add
inc
jecxz
add
mov
loopne
mov
cwde
jne
cmp
scas
dec
cmps
or
movs
lock
loop
into
or
in
xor
scas
or
push
add
cmp
in
push
jmp
aaa
lea
push
mov
push
in
lea
lea
or
movs
xlat
xor
sub
aaa
popf
xor
adc
dec
sahf
jmp
cmp
or
or
jmp
inc
mov
loope
out
cmps
and
xchg
sbb
pop
jns
dec
inc
inc
loope
adc
les
push
push
push
mov
test
jnp
ror
cld
mov
pop
sub
cld
pop
sub
mov
daa
(bad)
enter
rol
xor
clc
push
xchg
mov
xor
or
clc
cdq
ror
rcl
call
sbb
mov
inc
jo
mov
fwait
gs
add
fisttp
pop
pop
inc
clc
mov
les
(bad)
mov
rcl
sbb
enter
add
xor
test
pusha
push
pop
js
and
xchg
push
call
data16
imul
movs
sar
dec
add
inc
inc
push
add
adc
and
add
mov
xor
and
jns
rcr
or
mov
in
jge
(bad)
or
or
mov
and
loop
push
add
das
clc
dec
pop
mov
add
jns
fdiv
pushf
add
cmp
rcl
xchg
or
in
sub
sub
test
push
add
mov
jne
jne
jmp
sbb
or
ss
aam
pop
add
pop
sbb
sub
push
sub
mov
push
jns
je
or
ins
dec
mov
jb
pop
pop
inc
mov
mov
or
adc
or
sti
jle
and
pop
mov
aam
mov
inc
js
adc
loopne
je
pop
test
push
lea
adc
add
sub
add
pushf
pusha
cmps
pop
adc
stos
rol
sub
(bad)
in
inc
push
clc
add
xlat
mov
xor
movs
repnz
and
sub
cli
movs
mov
movs
mov
cmps
xchg
mov
mov
and
icebp
cmp
push
mov
add
mov
sub
pop
retf
pop
mov
in
pop
dec
sbb
pushf
mov
call
sar
dec
fmul
xor
mov
lods
jno
or
sar
add
add
mov
es
jp
lahf
leave
xor
and
lea
movs
mov
pop
and
mov
push
inc
mov
test
enter
mov
imul
push
xor
leave
cmovno
push
loopne
mov
push
popf
hlt
adc
fdivrp
dec
nop
adc
inc
and
cdq
mov
in
in
push
mov
mov
push
call
push
retf
inc
mov
pop
movs
popf
mov
mov
cs
dec
jae
jbe
das
xor
xor
movs
stc
nop
js
mov
dec
fnsave
nop
out
mov
lea
jg
jl
add
xchg
push
cmp
fidivr
or
dec
bound
mov
lea
cmp
movs
ret
ret
call
dec
and
test
stos
test
rol
and
adc
jnp
add
or
fild
xchg
push
push
imul
mov
push
pop
sub
xchg
ins
and
jae
sbb
sahf
les
popf
int3
sub
or
push
add
movs
ret
ins
(bad)
mov
push
mov
xor
adc
nop
xchg
ins
sub
xchg
sbb
xor
retf
das
mov
imul
sbb
xor
jno
lea
fs
sub
aad
dec
mov
popa
sub
outs
add
mov
imul
pop
jne
test
add
xchg
mov
ins
push
fadd
int3
mov
(bad)
enter
fcom
mov
inc
movs
jb
fsub
sbb
pop
(bad)
retf
mov
cmovb
push
push
sbb
cwde
xlat
fdiv
outs
push
jo
addr16
loope
aam
sub
fcom
push
cmps
pushf
mov
std
pop
popa
cmps
mov
xor
adc
xchg
xchg
fadd
arpl
mov
dec
pop
icebp
and
pushf
mov
into
adc
test
(bad)
fsubrp
jnp
popf
loopne
mov
sar
sbb
mov
add
test
add
push
fsubr
xor
mov
lods
push
push
cmps
cmc
pop
leave
add
hlt
inc
sbb
push
scas
sbb
mov
inc
callw
sub
xchg
sti
(bad)
xor
rol
sahf
sbb
push
push
scas
mov
shl
adc
fcom
or
jbe
ror
mov
add
mov
push
fisubr
xor
pushf
fld
fldz
(bad)
mov
fnstsw
fstp
push
xor
les
fstp
ins
push
cmp
adc
(bad)
inc
retf
arpl
and
push
clc
je
mov
int3
fcom
ins
pusha
add
cmp
int
or
rol
in
mov
(bad)
(bad)
lods
xlat
sbb
fsubr
sbb
fcomp
inc
cmp
fucomp
dec
fmul
xor
in
icebp
xor
add
frstor
mov
enter
iret
imul
xchg
ret
mov
cmp
jge
mov
add
jno
cs
cmp
test
add
ja
sahf
lods
sub
test
lods
or
aad
in
sub
jne
adc
inc
inc
xchg
inc
adc
push
jmp
cmps
pop
in
popa
pop
pop
mov
xchg
imul
int3
xchg
dec
imul
scas
add
sbb
shr
and
add
fstp
pop
or
ror
add
dec
lock
repnz
dec
mov
adc
cmpxchg
or
pusha
dec
pop
dec
sub
inc
add
inc
sbb
ins
icebp
pop
rcl
rcl
xchg
iret
je
cmp
and
cwde
mov
inc
push
cmp
in
jmp
out
add
fs
sbb
rol
movs
mov
or
adc
loope
retf
cmp
mov
push
xchg
outs
adc
aad
mov
dec
and
inc
dec
cmps
repz
and
inc
xchg
(bad)
ret
xchg
(bad)
jge
sub
fdivr
mov
dec
inc
and
lock
or
pop
rcr
dec
aaa
push
mov
sub
push
dec
or
gs
push
add
lds
movs
cdq
in
inc
(bad)
sar
call
inc
dec
add
or
xor
mov
clc
dec
jo
push
xor
mov
push
mov
ds
fist
pusha
push
sub
(bad)
gs
ja
(bad)
jnp
inc
and
or
jle
pop
call
push
pop
xchg
xor
(bad)
retf
adc
or
pop
fistp
pop
xor
sbb
out
in
movs
cli
lds
scas
or
pop
inc
gs
fist
ror
push
inc
xor
fsub
imul
mov
lea
pop
dec
test
ins
test
loopne
inc
mov
lahf
test
or
mov
mov
xor
ret
push
push
into
test
es
imul
push
inc
das
push
aam
add
sbb
pusha
jb
lea
and
fldenv
inc
repz
jg
dec
movs
rol
mov
mov
ins
mov
fld
cmp
and
xchg
xor
or
arpl
adc
adc
imul
lock
or
shr
dec
xchg
push
sbb
mov
fcmovne
outs
mov
or
add
fdiv
and
leave
xor
inc
jmp
mov
scas
adc
(bad)
push
or
push
je
mov
loope
pop
and
push
test
push
and
or
adc
push
adc
je
sub
sbb
push
ret
mov
cmp
xor
and
icebp
je
ins
cdq
inc
adc
add
in
and
push
mov
fs
cmp
xor
arpl
mov
pop
xor
in
push
xchg
icebp
and
or
fcomp
mov
add
and
pop
xchg
xor
loop
jmp
add
push
sbb
mov
sar
xor
imul
test
inc
adc
leave
add
sub
jg
add
mov
and
xchg
cmp
and
and
loope
test
or
jnp
lock
xor
add
cmps
mov
ficomp
or
add
inc
leave
sbb
dec
and
jmp
loop
or
dec
sbb
nop
test
jb
cmps
loope
push
cmp
outs
adc
cmp
inc
sub
adc
mov
add
xchg
mov
in
inc
nop
and
outs
adc
xor
jno
sub
ins
xchg
xor
cmp
adc
rcl
and
popf
mov
cmp
or
mov
pop
out
and
out
mov
ins
or
test
inc
stc
cwde
cld
and
test
cdq
rcl
or
sbb
cmp
cld
or
dec
and
daa
dec
push
movs
or
dec
mov
hlt
inc
jo
ins
mov
ss
add
push
js
push
push
jge
cmp
jbe
loopne
pop
inc
das
inc
rcl
gs
add
jne
adc
aaa
mov
pop
pop
add
or
je
or
sub
jmp
push
sub
xchg
dec
add
add
or
dec
jle
fcomp
adc
cmp
inc
ret
lahf
test
in
fcmovnu
xor
push
push
or
mov
adc
jbe
mov
ja
sub
pop
xchg
or
test
pop
add
stos
aas
imul
lea
adc
push
test
shl
mov
or
and
popf
dec
cmp
in
(bad)
sbb
sti
js
addr16
push
loopne
jae
xlat
test
data16
pusha
pushf
cmc
add
mov
sub
pop
add
in
push
inc
mov
fmul
inc
aaa
daa
jne
mov
pop
push
test
popf
mov
daa
mov
pop
add
dec
dec
lea
or
pop
and
popa
ins
sti
ins
sti
fnstcw
(bad)
lock
push
push
pop
and
sbb
rol
pop
add
lods
mov
imul
pop
cmp
loopne
cmp
adc
jnp
jns
ret
test
push
adc
fld
sub
call
imul
inc
iret
jp
push
or
shr
sub
mov
mov
out
movs
inc
pusha
add
push
xchg
fst
ss
div
pop
sub
enter
mov
push
sbb
fst
xor
aad
mov
test
push
lods
and
ins
lods
and
mov
cmp
adc
test
jle
dec
test
fisubr
push
ror
sub
ins
pop
sbb
ret
sub
dec
push
cmp
pop
adc
mov
sub
mov
and
mov
add
xor
(bad)
mov
or
adc
jnp
mov
test
jo
xor
adc
xchg
add
pusha
and
cmps
or
sub
mov
clc
mov
dec
adc
fcmovbe
ret
test
ins
jl
pop
xor
mov
cmp
mov
or
xchg
es
inc
int
test
and
cmp
mov
pop
xchg
ret
mov
push
add
push
dec
push
ins
sbb
test
jno
call
(bad)
ror
(bad)
jbe
mov
in
sub
xor
and
ds
sar
pop
add
arpl
sbb
inc
push
push
inc
xor
xchg
add
sbb
xor
sahf
xchg
add
mov
sub
or
(bad)
inc
or
cmp
lods
inc
nop
repnz
and
repz
jo
cmps
xchg
jno
arpl
test
mov
or
lods
push
add
es
push
adc
in
rcr
test
rcr
adc
jg
xchg
mov
and
xor
xchg
add
in
add
add
or
scas
xchg
cmp
adc
sub
in
add
add
sbb
and
mov
dec
mov
push
cmp
cmp
xor
add
ret
(bad)
mov
pusha
cs
mov
dec
dec
mov
pop
ret
pop
dec
cmp
mov
leave
or
adc
das
or
inc
pop
xchg
shl
dec
dec
dec
fmul
adc
mov
push
test
sbb
(bad)
mov
mov
call
and
mov
rol
mov
call
mov
mov
je
push
outs
rol
mov
or
popa
add
pusha
es
fisttp
and
jge
enter
stc
adc
push
cmps
dec
ret
adc
test
cmp
dec
fsub
sbb
sbb
push
add
sub
add
js
jp
pushw
or
xchg
shl
xchg
movs
xchg
aam
in
sti
enter
mov
jne
adc
push
or
sbb
or
push
dec
sub
and
inc
popa
push
sub
mov
not
push
loopne
and
jmp
pop
push
(bad)
int3
mov
or
div
mov
lds
fiadd
test
mov
test
add
pop
and
ins
test
leave
fcom
add
pop
push
cmp
xchg
and
stos
push
add
sub
adc
(bad)
pop
ret
enter
(bad)
jecxz
stos
and
aas
mov
ds
jge
mov
inc
mov
fcom
mov
das
jmp
lea
bt
jp
xor
ja
ror
xchg
mov
or
pop
aas
inc
cmp
push
or
inc
loope
add
sub
jl
lock
sbb
popa
imul
sbb
or
mov
adc
dec
ss
loopne
adc
inc
(bad)
repz
and
jmp
inc
dec
call
fld
sub
xor
ror
mov
cwde
dec
jbe
cmps
jl
add
inc
push
mov
outs
pusha
or
mov
or
jg
test
adc
add
mov
mov
lds
xor
add
cmp
je
adc
add
cwde
add
add
fwait
mov
loopne
dec
jl
(bad)
rol
(bad)
(bad)
push
xchg
fprem
test
mov
adc
cmp
test
dec
sub
retf
push
dec
test
add
aas
xchg
aad
xor
adc
inc
xchg
sbb
ret
inc
jl
and
add
xor
mov
dec
leave
and
add
fdivr
add
xchg
movs
mov
mov
mov
push
mov
ja
xchg
and
enter
or
push
jae
push
or
mov
and
in
push
pushf
lahf
pop
add
xchg
push
and
push
scas
and
mov
push
inc
adc
iret
imul
lods
inc
in
dec
popf
lock
aam
mov
and
fcom
sub
xor
dec
and
pusha
add
sbb
and
xchg
movs
inc
or
sti
inc
enter
cld
adc
xchg
sbb
xor
cmp
or
and
xchg
mov
sub
mov
adc
dec
add
add
data16
sub
push
aaa
and
nop
int
push
js
and
pop
loop
das
stos
mov
pushw
outs
push
into
aam
in
popa
sbb
sub
push
mov
push
cmp
test
rol
rol
mov
xor
(bad)
movs
sub
sbb
add
int
cmp
shl
retf
pop
lea
out
and
mov
sub
retf
xchg
and
lods
mov
and
jne
ret
push
fidivr
push
loopne
push
mov
sar
js
push
dec
xchg
inc
mov
sub
mov
pop
dec
hlt
movs
imul
fbld
leave
jae
xor
xchg
cmp
add
add
add
and
cmps
xchg
push
xchg
push
cld
sub
or
enter
xor
xchg
cmc
mov
mov
cmp
movs
push
test
inc
push
inc
dec
cmp
cmc
dec
sub
addr16
ror
je
mov
jecxz
stc
adc
mov
test
cs
xor
nop
lock
cli
push
add
inc
and
mov
sub
test
push
sbb
cs
pop
jbe
push
or
pop
xchg
and
fcom
and
or
sbb
or
fsub
dec
mov
mov
loopne
dec
cmp
sub
or
sub
sbb
add
add
add
leave
and
add
adc
mov
ret
jge
push
push
mov
push
scas
pop
dec
pop
adc
je
push
sbb
xor
xor
pusha
push
add
and
and
cs
mov
mov
inc
or
inc
ret
jg
push
lea
and
push
sbb
sbb
enter
in
dec
arpl
ror
ins
adc
dec
push
pusha
and
or
xchg
movs
sub
cmp
(bad)
mov
das
mov
call
xor
rol
movs
cld
repnz
adc
mov
push
add
dec
push
xor
push
jno
sbb
int
or
retf
sub
sbb
sub
and
xor
test
adc
adc
adc
fdivrp
xchg
aaa
mov
push
rol
add
shr
in
imul
inc
out
int3
push
mov
push
push
repz
(bad)
leave
and
ja
rol
or
pop
pop
and
mov
or
dec
inc
add
shl
cmp
or
sar
test
sets
pop
out
outs
movs
jo
sbb
xor
sub
test
and
push
mov
inc
and
sub
popf
mov
dec
jnp
xchg
mov
test
pop
xchg
lods
adc
sbb
not
ins
push
cwde
and
adc
add
mov
xchg
push
pop
inc
mov
test
scas
es
jb
lods
add
or
loopne
fnstcw
xor
and
or
adc
push
pop
lods
xor
fstp
inc
sub
pop
xor
inc
or
adc
add
sub
xor
add
or
repnz
js
(bad)
jg
mov
lock
enter
push
sub
add
hlt
movs
es
out
add
fwait
out
push
inc
push
push
xchg
dec
and
inc
inc
xor
dec
and
cmp
inc
pop
(bad)
mov
fsubr
and
inc
or
jmp
adc
xchg
dec
sub
and
repnz
push
hlt
pop
and
gs
xchg
inc
push
ss
or
add
cmp
jb
xor
dec
cmps
fadd
xor
sub
mov
nop
mov
cs
cmps
inc
cmp
mov
sub
mov
sbb
xchg
and
add
cwde
jo
retw
cmp
pop
xchg
dec
adc
test
mov
or
and
inc
cmps
pop
pusha
jno
push
sub
and
jae
cwde
pusha
stos
sbb
inc
mov
adc
push
pop
pop
push
and
test
loop
mov
jne
push
les
inc
enter
dec
mov
mov
inc
es
jno
push
jb
(bad)
jb
dec
sbb
jae
cdq
inc
fdiv
mov
jo
mov
and
push
test
imul
dec
adc
imul
jb
xor
test
mov
mov
cs
cmps
nop
xor
inc
leave
adc
adc
mov
mov
push
mov
loopne
ret
push
jmp
sub
or
jge
and
mov
dec
mov
cmp
mov
das
dec
mov
push
mov
xchg
pop
mov
push
mov
cdq
ins
test
inc
xchg
xor
dec
outs
push
ins
cmp
jl
push
sub
inc
inc
push
out
test
(bad)
pop
out
cmps
and
add
sbb
dec
pop
dec
jmp
fs
es
jno
(bad)
pop
sub
dec
fild
fbstp
repz
adc
into
dec
xchg
cmp
inc
test
cs
pop
out
scas
or
add
std
push
inc
mov
jl
mov
imul
test
xor
fwait
add
xchg
inc
rcl
imul
sub
dec
jl
sub
xor
sub
leave
dec
xor
add
in
add
imul
enter
adc
mov
dec
mov
jnp
(bad)
or
xor
push
inc
cmp
or
(bad)
mov
test
loope
jle
rol
add
inc
pop
push
lahf
add
ss
sub
xor
and
inc
bound
clc
and
jbe
cmp
jns
xchg
or
mov
ror
dec
push
or
inc
mov
sbb
xor
xchg
lock
test
inc
xor
cmps
and
pop
retf
sbb
mov
mov
int3
mov
stos
push
retf
xor
inc
daa
loopne
add
mov
aaa
rcl
pop
push
push
ret
ret
popf
pop
dec
or
pop
adc
or
rcl
adc
ror
xor
lods
sub
add
cmp
xor
inc
sbb
sbb
js
push
inc
mov
mov
xchg
popa
pushf
lods
xor
test
fbld
repz
adc
inc
push
or
rol
popa
jns
xchg
or
shl
push
fadd
movs
std
loope
daa
(bad)
pushf
call
test
adc
inc
and
ret
push
cmp
movs
push
xchg
(bad)
int
data16
add
mov
retf
jmp
sbb
sbb
sbb
xchg
test
test
add
scas
sub
call
fdivr
int3
mov
pop
fs
pop
je
inc
pusha
inc
adc
jl
xchg
push
sbb
sub
push
mov
call
sub
in
add
cmp
or
mov
push
inc
mov
je
stc
mov
or
xchg
cwde
je
popf
and
pop
jmp
ret
js
ficomp
push
push
mov
jg
sub
adc
jnp
jmp
push
add
(bad)
sub
xchg
mov
je
dec
xor
jmp
pop
fdiv
push
in
pushf
out
mov
mov
mov
aaa
fimul
sub
call
test
push
icebp
sub
mov
dec
shl
dec
push
stos
aaa
or
sbb
jp
ins
cmp
jge
mov
and
inc
mov
out
inc
and
xor
outs
jecxz
clc
dec
push
pop
sbb
dec
out
mov
and
xor
aam
aam
or
mov
test
sbb
jb
and
jg
mov
in
test
xor
mov
push
or
jg
rol
mov
lahf
mov
sub
arpl
in
in
out
and
fsubr
and
pop
push
cmp
mov
adc
aaa
xchg
repz
or
enter
jbe
mov
and
push
push
cmp
or
inc
push
add
ja
or
fsubr
lea
out
mov
addr16
sub
ss
movs
add
or
loopne
push
push
push
ror
jp
rol
mov
mov
sub
fadd
sbb
push
daa
add
sar
sar
add
jge
and
xor
sub
cmp
test
movs
leave
cmp
call
ret
xor
jne
add
test
push
or
sar
xor
int3
cmp
std
loope
push
mov
push
inc
add
push
and
mov
enter
push
imul
in
cmp
or
adc
adc
imul
sahf
or
inc
sbb
icebp
push
and
mov
and
mov
jmp
out
adc
inc
dec
and
mov
mov
mov
enter
(bad)
loopne
push
mov
gs
or
xchg
jl
and
popf
jae
cmp
jns
xchg
jb
mov
scas
dec
pop
and
or
(bad)
xchg
pushf
pop
int3
mov
in
inc
pusha
push
std
dec
pop
imul
dec
mov
pop
jb
les
les
retf
in
mov
dec
push
cmp
sbb
in
sbb
ins
sub
sbb
push
dec
mov
imul
fsub
nop
xchg
les
out
dec
in
hlt
xor
adc
or
add
fld
mov
mov
out
lahf
ret
and
mov
push
loop
and
iret
pop
mov
mov
mov
mov
ret
adc
scas
into
adc
and
sub
or
or
repnz
loopne
mov
and
jmp
pop
push
mov
lea
mov
lea
adc
psubd
mov
pop
add
jo
psubsw
popa
les
cmp
test
test
aas
jecxz
arpl
xor
add
retf
inc
push
loope
leave
dec
add
les
add
push
jmp
sbb
sahf
or
mov
adc
sti
ss
rcr
mov
lea
push
push
sbb
sbb
and
jmp
lock
sub
dec
add
and
add
and
pop
sbb
jmp
pop
adc
xchg
pop
out
sbb
(bad)
aam
adc
mov
pop
pop
sub
xchg
push
adc
mov
je
lea
lods
aas
test
dec
js
and
cwde
inc
add
inc
or
sub
repz
enter
shr
jo
inc
cli
mov
jae
inc
ins
or
mov
pop
fdiv
neg
sbb
add
lods
adc
xor
call
cmp
and
or
mov
dec
imul
data16
pop
jecxz
or
sbb
mov
cdq
nop
push
or
and
add
xor
mov
call
enter
mov
push
jmp
test
mov
cmp
adc
add
lahf
sbb
cmps
jne
xor
add
inc
sub
push
or
cld
gs
mov
sbb
sub
loop
jb
(bad)
enter
or
push
mov
ja
push
leave
or
dec
enter
aas
add
mov
xchg
cdq
in
sbb
jp
sub
add
push
add
push
push
pop
xchg
push
sub
je
add
inc
mov
adc
pop
rcr
sub
adc
cwde
std
and
mov
or
(bad)
fistp
xchg
add
mov
sbb
stos
add
xor
mov
and
cmc
sub
cmp
int3
dec
pushf
add
sub
dec
or
sbb
pop
mov
inc
or
shr
push
push
jecxz
je
or
mov
(bad)
push
or
sbb
ins
loope
or
xchg
lods
pop
or
stos
or
and
fisub
outs
or
jl
mov
sub
enter
or
adc
and
jmp
pusha
lods
or
pusha
push
aaa
movs
loopne
mov
(bad)
pop
inc
dec
jg
je
inc
call
lock
inc
jae
sub
sahf
sbb
rcr
xor
lock
test
pop
loopne
mov
mov
idiv
push
and
inc
and
ja
repz
shl
outs
mov
in
add
ret
loop
out
or
sub
dec
mov
pop
pop
dec
xor
xchg
sbb
sbb
inc
jl
sbb
sub
and
cmp
add
cmp
cmps
xchg
add
xor
(bad)
push
aas
pusha
loope
adc
mov
(bad)
imul
mov
(bad)
jle
clc
push
cwde
inc
aas
mov
xor
and
sbb
pop
jge
in
sub
loope
rcl
inc
or
cmps
test
mov
sar
and
ins
or
je
dec
ret
push
cmp
outs
stc
sub
pushf
xor
jmp
adc
xchg
adc
repnz
sti
cmp
je
dec
loopne
pop
and
movs
shl
sbb
retf
mov
mov
or
inc
mov
sub
sub
in
xor
loopne
test
pop
or
aam
fld
je
mov
cmp
push
and
lds
or
dec
sub
mov
or
mov
sbb
dec
or
add
inc
pop
push
jle
sbb
cmp
dec
jbe
inc
or
add
je
inc
add
pusha
mov
sbb
push
cmp
add
sub
add
sub
sub
add
fisub
xor
rol
mov
stos
add
xchg
dec
les
arpl
add
cwde
and
imul
jmp
push
out
push
jns
sar
ror
pop
dec
cmp
je
adc
xchg
dec
xchg
ret
and
retf
fadd
ret
jnp
jb
shr
mov
adc
sbb
push
push
js
add
xchg
and
xor
push
aam
shl
outs
dec
fbstp
mov
or
mov
daa
jne
ret
dec
aaa
inc
adc
rol
pop
in
aam
jo
in
scas
xor
sbb
mov
retf
rcr
sbb
add
daa
xchg
and
jg
jmp
mov
xor
std
pop
(bad)
cmp
or
lock
sub
adc
or
dec
jg
nop
inc
adc
xor
cmp
xor
inc
mov
into
cmp
lahf
pop
or
cmp
ds
or
cmps
sub
adc
fcomp
lock
lahf
fcomp
add
dec
or
jae
and
cs
call
inc
sbb
rcr
and
clc
stos
jns
and
inc
cmps
sbb
add
add
and
push
and
(bad)
inc
clc
dec
cmp
xor
mov
popa
push
inc
xlat
shl
jne
mov
mov
adc
xchg
and
in
add
pop
push
mov
sub
and
repnz
call
and
dec
es
test
rol
add
adc
sub
xor
sbb
add
push
(bad)
push
js
push
pop
add
dec
and
jno
add
add
les
sub
rcr
rcl
xchg
xor
inc
sbb
sub
dec
inc
call
mov
aaa
jo
or
jge
or
ret
jbe
test
mov
xor
jmp
inc
pop
loopne
or
xor
mov
outs
in
std
scas
cmp
idiv
cmp
xor
and
ss
and
or
inc
mov
outs
(bad)
into
adc
shl
or
ffreep
xor
push
(bad)
fcom
fsub
xor
adc
(bad)
sbb
ja
test
lock
movs
aam
lods
cmp
shr
xchg
or
dec
cmps
pop
daa
lock
(bad)
dec
call
inc
test
or
push
dec
push
sub
mov
mov
mov
jmp
or
or
inc
cmp
aad
push
sub
mov
cmp
ret
lock
cmp
mov
in
cdq
mov
adc
xchg
add
or
aam
bound
sbb
cmps
ret
jo
fsub
imul
jp
add
push
mov
or
and
nop
xchg
add
jns
mov
sahf
inc
mov
(bad)
or
cmp
dec
sahf
xchg
addr16
in
pop
leave
repz
adc
pop
dec
jo
jp
add
mov
ins
je
and
and
push
test
mov
sbb
cmps
in
out
dec
in
pusha
add
shr
dec
push
mov
not
push
cs
add
sti
sub
or
sub
xor
out
xchg
or
ins
pop
inc
dec
mov
fstp
out
jecxz
adc
int
xor
xor
cwde
and
and
mov
add
mov
or
jne
xchg
cwde
and
inc
stos
inc
lahf
sub
xor
inc
icebp
sub
call
or
or
adc
ror
and
add
cmp
and
sub
dec
push
add
cmp
xor
scas
retf
adc
nop
add
jne
xor
and
push
adc
cli
pop
pop
add
jne
adc
sub
ficomp
dec
push
push
jne
push
xor
add
ret
ret
repnz
int3
add
push
lea
and
mov
add
imul
mov
std
dec
test
lods
aas
cld
nop
ins
loop
dec
cmp
push
ret
sar
sub
in
mov
cmp
pop
mov
or
ds
mov
jmp
and
scas
popa
pop
test
xchg
adc
in
xor
sub
xchg
pop
dec
cwde
xor
or
les
jbe
fwait
cmp
rol
retf
jmp
sbb
adc
(bad)
mov
pop
lock
xor
neg
and
mov
adc
call
inc
out
nop
sbb
(bad)
xor
pop
in
inc
lock
push
inc
lds
inc
pop
cmp
xor
add
sbb
inc
stc
ins
popa
dec
cmp
mov
inc
adc
cwde
rcl
mov
repz
rol
mov
inc
jae
add
xor
not
cmps
cmp
lods
add
mov
xlat
add
push
jge
retf
inc
lods
pop
leave
inc
xor
in
xchg
shr
adc
add
push
sbb
or
cmp
mov
rdmsr
add
cdq
push
and
sub
add
and
dec
xchg
mov
test
rcl
sub
pop
cmp
loop
dec
mov
mov
call
add
or
push
inc
jns
mov
push
lea
lea
xchg
mov
aaa
push
or
in
fst
or
adc
cmp
lods
adc
mov
mov
cs
jne
xor
or
mov
cwde
mov
sbb
lods
test
sbb
and
js
in
fs
data16
mov
mov
push
out
inc
stos
add
xchg
add
mov
sub
mov
sub
sahf
mov
inc
stc
sub
add
push
dec
ret
sti
sbb
mov
bound
in
inc
mov
imul
jp
mov
adc
mov
dec
dec
add
loope
adc
mov
inc
imul
adc
retf
or
popf
mov
and
mov
mov
push
pop
lea
add
mov
mov
and
adc
cmp
addr16
movs
or
jge
sub
add
mov
cmp
sub
jl
dec
test
lock
stc
push
cmp
jle
inc
mov
(bad)
dec
xchg
mov
nop
nop
adc
jbe
cmp
dec
fstp
adc
ror
inc
fs
fstp
mov
pop
scas
fiadd
sbb
imul
push
in
jmp
dec
fcomp
mov
mov
mov
dec
ret
mov
int
sbb
inc
dec
adc
adc
dec
sbb
aam
punpckhwd
mov
test
sub
mul
pusha
arpl
cld
push
dec
cmp
inc
mov
push
(bad)
pop
pop
mov
call
rol
test
mov
hlt
dec
inc
dec
add
mov
test
inc
aas
sub
push
xchg
or
fcmovnbe
pop
push
push
inc
sub
retf
sbb
les
mov
mov
sti
pop
adc
jl
nop
mov
and
fsubr
stos
shl
xchg
xchg
sbb
mov
aaa
lods
imul
and
in
jno
dec
mov
das
aad
(bad)
push
lahf
mov
movs
and
stc
jmp
out
lds
add
pushf
mov
xchg
pop
pop
aam
dec
cmps
xchg
or
or
in
add
jne
cmp
sahf
or
inc
or
lea
mov
mov
retf
sar
cli
sar
pop
aaa
call
adc
mov
cmp
shl
adc
in
test
fild
repnz
cmp
je
cmp
je
mov
sub
mulps
push
sbb
add
outs
lea
mov
or
xchg
adc
mov
stos
stos
sbb
mov
movs
lea
jnp
cmp
mov
or
inc
jbe
faddp
adc
mov
pushf
lods
fisub
xor
repz
stc
xor
lea
xchg
or
lea
cmp
add
push
adc
enter
or
aas
push
sub
rcl
lods
shr
add
mov
ss
in
fist
cmps
mov
cld
add
test
mov
call
lea
sbb
fs
add
je
test
sub
enter
add
xchg
in
push
xchg
ret
xor
add
pop
sti
xchg
scas
rcr
movs
xor
jne
adc
push
jne
jo
xor
adc
cmp
pop
movs
aam
add
test
cmp
add
dec
in
push
jg
xor
ret
pop
push
repz
movs
and
fs
jle
mov
sbb
ins
inc
loopne
xchg
pop
in
cmp
ffree
mov
or
add
mov
inc
lods
sbb
push
pusha
adc
jnp
shl
add
push
xchg
aam
inc
stos
and
jb
xchg
add
mov
sbb
sbb
sar
movs
inc
and
mov
jns
fs
rcl
and
in
or
jbe
xor
or
daa
mov
test
sbb
jns
cdq
les
imul
push
call
dec
inc
aad
fist
rcr
or
xchg
ins
mov
out
add
adc
jb
or
xor
adc
push
or
ror
retf
push
aam
(bad)
mov
push
mov
ret
add
fisub
idiv
push
sbb
pop
push
sub
cwde
xor
test
fsubrp
loop
add
aam
hlt
xor
dec
inc
cwde
das
pusha
mov
xor
push
or
xor
mov
rol
stos
jl
loopne
shr
inc
add
nop
bound
dec
dec
add
mov
inc
jbe
push
xor
adc
mov
adc
int3
test
add
mov
cs
inc
add
mov
cmp
mov
mov
mov
jmp
pop
or
inc
loopne
scas
push
mov
jnp
adc
popa
iret
or
pop
into
add
gs
mov
adc
xchg
repz
pop
and
stc
int3
lea
add
dec
mov
xchg
and
jb
adc
mov
push
pop
(bad)
aaa
xor
adc
xor
jg
cmp
xchg
cmp
add
ss
cmp
sub
pop
(bad)
xchg
mov
es
sub
or
push
mov
lock
xchg
mov
inc
cmc
and
xchg
sub
les
inc
stc
jno
scas
or
aam
push
jns
out
loopne
cmp
sub
(bad)
call
adc
les
and
or
push
or
pushf
test
add
mov
jne
repz
xor
adc
adc
push
stos
xor
sub
cs
sbb
xor
out
dec
adc
xor
mov
push
sub
sbb
jbe
imul
xor
inc
xor
jle
xchg
push
and
icebp
adc
cmp
rol
add
and
adc
stos
loope
popa
add
push
cdq
rcr
movs
cmp
or
cmp
add
and
push
ins
scas
or
and
daa
inc
and
fistp
cmp
mov
sbb
add
xor
sbb
dec
adc
adc
ds
pop
adc
leave
mov
inc
jg
mov
add
jge
rol
lock
pop
cmp
jmp
lea
adc
test
(bad)
mov
cmp
sbb
or
test
sub
push
dec
xor
imul
shr
icebp
ins
add
sbb
scas
or
mov
imul
sar
jmp
mov
mov
xor
inc
xchg
or
xchg
test
xor
sub
and
call
xor
cwde
pusha
pusha
and
cmp
mov
rcr
push
(bad)
xor
rcl
fisubr
rcl
movs
jo
xor
cmp
pop
psubw
movs
or
(bad)
pop
or
mul
cmp
dec
inc
rcl
or
ret
xor
idiv
test
lea
jne
cmp
je
adc
push
adc
or
push
xchg
pusha
rol
pop
nop
lock
inc
fs
lods
mov
mov
repz
add
daa
out
push
je
adc
xchg
cdq
out
add
mov
arpl
fstp
or
mov
pushf
in
(bad)
push
fdiv
inc
pop
mul
cmp
addr16
sbb
push
jmp
inc
sub
and
ins
cmp
push
test
in
ins
sub
xor
cmp
fmul
lea
add
jmp
jne
ret
pop
int
push
shr
gs
cmps
scas
cmp
pop
push
call
push
ss
les
retf
inc
test
push
sbb
sbb
cmp
jne
mov
and
jne
or
addr16
fldpi
sbb
pop
xchg
mov
cdq
mov
sub
test
push
(bad)
ret
daa
or
jmp
sub
xchg
xchg
or
mov
(bad)
mov
jg
jo
xchg
inc
les
pop
int3
inc
inc
mov
jl
out
repnz
(bad)
cdq
mov
cmc
inc
shl
or
test
lahf
inc
jbe
or
inc
mov
add
test
ret
stc
xchg
or
pop
sar
rcl
inc
ret
adc
dec
push
les
mov
push
push
push
push
inc
sar
aaa
mov
sbb
rol
mov
or
xor
sbb
addr16
pop
add
inc
add
sub
push
dec
push
sbb
or
out
mov
dec
dec
adc
mov
inc
imul
out
jne
rol
push
imul
ja
push
lds
push
or
mov
mov
inc
add
and
pop
ret
pop
adc
ins
loopne
js
mov
sbb
stc
out
fld
jmp
enter
das
pop
das
nop
scas
lea
pop
sbb
xchg
jnp
mov
cli
xchg
test
mov
test
or
sub
adc
scas
or
add
mov
imul
js
loopne
sbb
mov
xor
js
test
push
push
mov
adc
mov
and
add
add
sub
outs
and
lahf
pop
adc
sub
mov
fidiv
xchg
enter
mov
loope
push
repnz
sbb
or
inc
aam
dec
mov
fild
ins
inc
imul
popa
and
add
pop
rcl
push
cmp
push
jno
sub
test
push
jl
bound
addr16
xor
add
sub
mov
test
inc
jge
lods
cmp
mov
ret
sahf
or
adc
add
adc
pop
push
ret
xchg
mov
xchg
fs
ret
mov
rcr
add
sbb
loopne
(bad)
add
mov
add
xor
daa
jnp
or
add
fs
es
popf
inc
and
cdq
add
dec
xor
pop
fst
pop
cdq
movs
xor
jmp
jmp
popf
das
sub
mov
(bad)
and
and
push
aas
mov
mov
inc
(bad)
cmp
mov
add
jnp
add
and
(bad)
push
add
popf
adc
mov
xchg
add
nop
push
loope
or
int
mov
jg
movs
and
dec
push
mov
dec
arpl
mov
mov
mov
sub
and
pop
gs
(bad)
cwde
movhps
pop
xor
les
pop
push
cmps
cmp
or
inc
or
test
inc
cmp
cld
xchg
lock
add
addr16
loope
sub
into
outs
sub
sbb
sub
xchg
scas
xor
(bad)
mov
inc
fsub
dec
and
sub
xor
arpl
or
cdq
inc
pop
inc
stc
dec
lods
in
retf
pop
les
daa
cmps
dec
sar
add
cmp
xor
mov
pop
xor
mov
mov
push
mov
sub
jl
sub
sub
cmp
mov
inc
in
shl
leave
or
adc
in
adc
pusha
mov
sbb
bound
loopne
or
nop
xor
dec
add
push
and
push
call
fadd
mov
add
je
xchg
pop
xor
inc
fst
add
inc
ret
cmp
(bad)
jmp
fiadd
shr
mov
js
pusha
mov
push
pop
xor
and
cmp
add
adc
loopne
push
adc
sub
pop
sub
xchg
dec
add
cmp
hlt
sbb
call
aas
dec
loopne
ret
jno
adc
push
add
sbb
cmp
scas
mov
xchg
cmps
sahf
xor
xor
(bad)
lods
jp
fs
rsqrtps
std
js
jno
inc
jge
lods
or
adc
jae
test
call
xchg
shr
add
mov
ret
xor
adc
push
xor
in
push
xor
sar
dec
ins
mov
sti
bound
rcr
adc
adc
icebp
sub
data16
mov
pushf
pusha
call
inc
add
pop
shl
jnp
lds
lea
aaa
inc
lea
and
sbb
es
cmc
mov
sub
in
add
in
add
in
mov
add
fsubr
ror
aam
add
cmp
jno
js
or
and
ins
rcr
imul
inc
mov
imul
mov
int3
call
push
ss
dec
jp
add
fist
enter
pop
fsubr
adc
or
push
cmp
or
jne
mov
push
div
repz
dec
jne
push
cld
or
inc
in
mov
js
pop
aad
fld
fwait
lea
adc
push
jmp
xchg
add
mov
mov
ins
loopne
mov
std
in
test
add
jo
in
adc
fcom
cld
repnz
dec
or
xchg
push
or
adc
xchg
or
fiadd
ins
icebp
lds
sub
jnp
retf
xchg
mov
and
push
pop
and
lahf
shl
das
xor
pop
mov
sub
sub
or
ja
cmp
jge
push
add
cld
(bad)
lock
cmc
jne
jo
lods
loopne
cmp
in
push
and
dec
or
nop
mov
xor
jecxz
jbe
xchg
sub
xor
adc
push
mov
adc
dec
and
push
mov
sub
fild
cmp
out
xchg
in
fsubr
shr
and
in
and
inc
(bad)
outs
push
or
pop
push
add
stos
lahf
test
adc
dec
repz
add
add
mov
mov
fwait
add
push
cmp
inc
je
pop
jb
aam
cmp
and
lock
jl
loopne
shl
xor
mov
xlat
jb
lods
aas
sub
lea
mov
and
add
mov
idiv
jae
xchg
or
stc
xor
imul
push
mov
or
inc
cmp
push
inc
cs
es
lea
sub
enter
mov
imul
push
dec
sub
or
popa
mov
out
addr16
iret
adc
test
xchg
aas
nop
addr16
push
push
lea
mov
and
pop
ds
jnp
mov
sub
pop
popa
movs
jo
loopne
jge
add
mov
add
stc
push
jp
mov
add
mov
popa
daa
sbb
cmp
imul
clc
outs
ret
dec
je
mov
jmp
rcr
pop
adc
scas
in
in
add
aam
fst
pop
pop
mov
pushf
jp
sub
xor
dec
sbb
std
xor
and
and
jmp
add
sbb
mov
adc
mul
bound
push
mov
fcomp
call
arpl
xchg
ror
leave
xchg
lock
push
or
pop
sbb
or
call
or
add
xor
sar
and
mov
add
jo
leave
push
dec
pop
nop
lods
pop
dec
and
and
cmp
sub
jmp
(bad)
jmp
dec
pop
loopne
dec
add
add
dec
mov
push
pushf
repnz
jo
adc
stos
sbb
pusha
sub
add
xor
inc
stos
ret
hlt
xor
shl
retf
cld
xor
or
in
popf
mov
nop
add
shl
lods
jg
and
add
cmp
xchg
pop
add
pop
mov
fst
xor
add
popf
dec
mov
or
pop
fadd
clc
sub
daa
rcl
ret
clc
add
jmp
xchg
pop
ins
sub
push
sub
shr
add
lock
(bad)
ds
xchg
inc
movs
add
sub
mov
fs
fstp
mov
mov
in
rcl
push
add
or
xor
xor
cmps
test
sbb
ds
cmp
jne
and
fs
mov
xor
jae
xor
enter
push
jnp
inc
sub
and
add
ror
pushf
and
add
sub
je
int
xor
add
push
and
jp
or
xchg
and
push
test
mov
pop
adc
xchg
mov
and
jmp
movs
fdiv
mov
dec
repnz
outs
push
inc
inc
xchg
jg
pop
inc
jo
(bad)
lds
push
jb
mov
add
pop
lea
add
and
test
inc
sub
mov
mov
xchg
pop
and
nop
dec
xchg
cmp
or
or
jo
fcom
popf
dec
icebp
pop
adc
mov
popa
sub
xchg
jo
pop
push
xchg
pop
pop
and
cmp
hlt
add
sub
adc
adc
jmp
and
imul
cs
push
fdiv
xor
jbe
sbb
and
sbb
div
push
rol
jnp
or
xchg
fimul
pop
or
inc
ins
or
push
clc
in
or
aam
shr
adc
jne
add
xchg
addr16
arpl
inc
out
dec
ins
das
sbb
clc
jmp
mov
jecxz
test
loop
inc
and
das
push
inc
fsubr
and
adc
scas
xor
pop
mov
pop
push
outs
loope
aam
cmp
jnp
inc
and
sub
cmp
jae
into
xor
sbb
cmp
xchg
test
push
ins
pusha
xlat
in
mov
mov
add
fwait
or
hlt
aam
pop
js
popa
mov
sub
rol
inc
aas
cmp
cs
sbb
dec
in
push
or
(bad)
push
loop
and
in
sub
ja
in
cwde
jb
je
xor
inc
rcr
cld
xor
sbb
add
js
sbb
cmp
clc
mov
mov
push
push
ror
adc
push
or
loope
mov
out
pop
sub
push
popf
in
xchg
cdq
inc
lock
sbb
pop
add
ins
add
ror
sub
aas
ror
mov
add
push
inc
xchg
push
dec
imul
or
add
sbb
dec
les
rol
in
in
and
adc
adc
stos
inc
test
mov
mov
add
pop
xchg
inc
repnz
mov
(bad)
cmps
inc
mov
mov
push
in
mov
add
dec
sub
mov
outs
inc
add
xor
or
jns
aaa
or
jmp
xor
push
stc
or
mov
retf
sbb
add
add
movs
xor
and
sub
or
sub
xor
inc
sub
gs
retf
dec
adc
movs
xor
adc
push
test
push
push
jo
js
retf
sbb
sbb
gs
nop
cwde
enter
mov
sbb
rcl
or
movs
xor
or
pop
fdiv
call
cmps
(bad)
jb
and
mov
jne
scas
clc
or
push
test
movs
addr16
pop
(bad)
xor
repnz
mov
nop
xor
test
cmps
dec
or
and
aas
sbb
pop
jmp
(bad)
add
add
mov
aam
inc
xchg
imul
mov
nop
(bad)
sbb
and
sbb
dec
ins
test
and
loope
cmp
inc
sub
add
clc
xchg
addr16
lods
add
jge
mov
ret
fdiv
cmc
test
fdivr
mov
movs
nop
inc
pop
or
shl
or
ret
push
lock
movsx
sbb
mov
jbe
inc
call
add
inc
or
lods
add
dec
les
pop
dec
xlat
mov
test
and
sbb
pop
push
pop
mov
push
stc
rol
mov
scas
sub
xor
test
sub
push
pop
mov
adc
inc
push
je
aas
in
in
inc
mov
jb
adc
jmp
xchg
cdq
clc
fbld
aaa
adc
push
jnp
adc
xchg
lock
stos
inc
sbb
cmp
xor
test
inc
imul
retf
or
mov
lock
pop
lock
jl
mov
push
mov
les
inc
cmp
xchg
xor
outs
daa
dec
sbb
iret
femms
cmp
fs
sub
mov
iret
or
mov
pusha
push
push
cmp
jmp
push
movntps
shl
nop
lods
add
dec
inc
sbb
mov
dec
adc
popf
enter
cwde
inc
outs
arpl
push
pusha
je
add
cmps
mov
mov
inc
xchg
inc
lea
stos
sbb
pop
sub
or
cmp
movs
fs
sbb
daa
add
or
xor
xchg
pusha
xchg
mov
add
fnstcw
stos
add
test
push
pusha
xchg
stos
adc
fild
fs
adc
add
shl
outs
retf
or
inc
or
mov
adc
mov
sub
into
add
add
shl
sbb
cmps
mov
add
add
jb
xlat
call
jp
mov
mov
pop
lea
inc
dec
push
imul
pushf
add
mov
ret
in
add
cmp
popf
dec
add
cmps
jno
dec
daa
retf
jmp
push
xlat
or
daa
push
cmc
xchg
xor
dec
xor
xor
sbb
pushf
push
daa
popa
and
cwde
loope
fs
cmp
inc
out
add
add
push
inc
mov
push
dec
outs
adc
ror
push
pcmpeqw
ss
outs
cmp
push
lea
lea
pop
xchg
stos
sbb
movs
sbb
mov
in
add
xchg
jo
lea
adc
in
es
dec
cmp
cbw
push
or
dec
rol
inc
add
add
adc
fidiv
icebp
mov
not
adc
(bad)
jnp
xor
es
add
stos
in
push
maskmovq
neg
adc
jb
mov
mov
fs
add
add
cmps
pushf
aas
jecxz
pop
pop
pop
hlt
add
inc
(bad)
jae
or
(bad)
dec
ror
adc
add
dec
push
pop
mov
sti
and
pop
imul
lods
inc
xor
add
dec
sub
sbb
iret
xor
lock
jecxz
adc
not
imul
rep
nop
pop
rol
add
cld
or
(bad)
fcom
cmp
add
mov
test
cmp
xchg
loopne
shl
in
push
xchg
xchg
push
jmp
and
sbb
lods
adc
add
add
pop
xchg
mov
inc
xor
push
scas
sbb
ins
mov
ds
and
xchg
cmova
es
and
jp
inc
fld
loope
mov
daa
inc
call
xchg
inc
es
xchg
dec
push
lock
adc
or
call
add
jl
iret
jnp
and
js
add
or
scas
mov
imul
test
bound
or
inc
jl
dec
adc
push
(bad)
fsub
pop
mov
dec
sub
add
scas
nop
pop
mov
mov
pop
xor
and
xchg
sub
jbe
rol
adc
cmps
mov
inc
mov
ins
or
inc
out
(bad)
out
add
(bad)
cmc
loopne
or
dec
je
in
or
add
add
add
mov
inc
cmps
test
in
jo
or
movs
or
sbb
push
and
dec
pop
and
add
stos
sub
pushf
dec
add
dec
xor
pop
add
cwde
mov
test
sbb
or
mov
pop
lods
push
xchg
or
mov
push
mov
cs
cmp
idiv
push
and
push
mov
jnp
fwait
int
shl
mov
arpl
pop
mov
adc
daa
pop
jl
fwait
and
pop
or
or
pushf
bound
or
or
pusha
bound
add
add
mov
cs
xor
pop
or
add
cmp
add
mov
movs
mov
push
adc
push
jge
lods
mov
inc
ja
and
sub
sbb
mov
mov
or
pop
xor
sbb
into
sub
loope
or
push
inc
loopne
xor
adc
ret
popa
mov
xor
or
inc
pusha
adc
push
xchg
pop
ret
add
xchg
cmp
dec
mov
clc
shl
cs
jae
aad
hlt
sub
shl
ss
test
cmp
jne
adc
push
inc
or
adc
add
shl
mov
mov
jl
add
(bad)
cmp
jl
dec
push
jp
jns
or
in
push
add
movs
add
mov
call
and
jg
pop
adc
pushf
xor
or
sub
adc
std
sub
movs
or
jge
jae
push
inc
cli
fwait
or
clc
je
sub
sar
lods
test
xor
test
fild
or
adc
and
pop
jo
push
pop
inc
cmp
sbb
test
mov
and
inc
pop
call
push
cmp
mov
mov
adc
mov
pop
mov
jno
les
ret
push
mov
xor
xchg
pop
nop
shr
fisubr
add
dec
dec
scas
adc
inc
inc
in
mov
jbe
dec
hlt
adc
sbb
ret
fisttp
push
stos
sbb
adc
add
das
push
ret
lahf
push
test
fcom
movs
xchg
lods
shl
add
push
pop
sub
fimul
leave
clc
xor
mov
sti
and
add
cmps
jnp
sub
mov
inc
mov
add
dec
inc
je
clc
pop
scas
push
fsub
adc
mov
inc
push
jne
addr16
dec
loope
mov
aad
lock
sbb
add
or
(bad)
dec
rcr
mov
imul
add
scas
push
fwait
bound
dec
inc
sub
jae
fimul
shr
out
mov
xchg
xchg
lea
xor
dec
lods
fild
lock
repz
jo
fild
fs
mov
sbb
sub
int
mov
add
or
add
jne
mov
(bad)
out
js
pop
iret
ss
je
and
ins
sbb
adc
inc
ja
dec
dec
cmp
je
cmps
clc
mov
mov
dec
push
ror
stc
es
clc
adc
shl
xchg
stos
or
pop
fs
push
push
inc
mov
mov
add
mov
add
xor
lea
adc
es
loopne
mov
data16
pop
loopne
xor
hlt
sub
je
or
sti
push
sbb
into
inc
add
or
jmp
add
jl
and
sub
aas
or
or
add
cmps
lea
cld
or
(bad)
ret
and
mov
jg
and
or
rcr
scas
or
push
pop
add
add
pop
enter
inc
add
fild
inc
cmp
inc
rcl
pop
adc
push
add
das
(bad)
jmp
pop
jns
mov
sub
inc
mov
adc
xor
dec
xor
jge
dec
cmp
fsubr
sub
xchg
add
sbb
jg
nop
or
aas
and
cli
add
popf
inc
inc
test
pop
push
add
mov
dec
pop
(bad)
pop
add
in
cmp
je
movs
inc
mov
imul
or
test
in
jmp
mov
xchg
push
call
ins
jle
and
xor
mov
and
(bad)
dec
int3
imul
cmp
pop
inc
enter
and
xor
iret
dec
cld
and
and
and
and
and
enter
and
fmul
xchg
or
and
mov
inc
movs
repnz
mov
xor
add
or
inc
fwait
pop
and
jb
push
test
sbb
out
xor
and
and
mov
data16
add
dec
or
sub
or
jle
or
adc
data16
jl
and
mov
and
pop
fidiv
cmc
or
ficomp
jo
jno
jno
jmp
xor
mov
(bad)
pop
dec
or
fidiv
add
xor
add
fcomp
mov
mov
sbb
pop
and
xor
leave
dec
inc
pop
push
adc
inc
add
push
mov
mov
adc
cmp
loopne
and
mov
test
mov
xchg
or
add
cmp
pusha
adc
stc
cmp
pop
push
xchg
pop
xchg
push
pop
sbb
add
test
pop
test
(bad)
rcr
xor
mov
push
rcl
and
and
dec
sahf
push
add
lahf
xchg
enter
cmp
and
and
mov
xor
push
fwait
mov
iret
jno
cdq
das
jg
(bad)
jnp
dec
cmp
mov
sub
stc
cmp
dec
mov
inc
pop
lods
cmp
push
inc
mov
dec
push
push
mov
fdivr
stc
mov
mov
inc
or
out
push
dec
into
pusha
rol
push
xchg
jle
sub
inc
mov
xchg
clc
xchg
add
sub
cmc
shl
sub
adc
add
or
sbb
test
imul
add
shl
inc
adc
cmps
in
popa
sbb
leave
mov
les
sub
push
mov
out
dec
push
adc
rol
shr
rcl
stos
jle
sub
ficomp
add
push
mov
pop
adc
pop
mov
sti
inc
inc
mov
cld
adc
ret
push
jmp
cwde
adc
xchg
mov
xchg
and
sahf
sub
imul
enter
and
xchg
dec
sahf
or
loopne
fs
or
les
ret
test
xchg
mov
ds
(bad)
daa
push
or
xchg
mov
or
pop
fnsave
mov
xor
push
add
daa
dec
sub
inc
ins
fcmovu
jmp
sbb
and
clc
sub
retf
ret
and
in
outs
arpl
dec
dec
hlt
mov
cmp
xchg
push
add
push
sbb
sub
sub
stc
fdivp
pop
add
sub
cmp
jbe
mov
adc
add
mov
arpl
jns
or
sub
lock
and
mov
ins
inc
or
and
ins
pop
cwde
bound
je
mov
mov
inc
test
call
pop
add
sub
jne
leave
dec
inc
fsub
jbe
lds
sub
mov
fild
inc
or
jp
pop
out
cmp
cmp
ja
sub
and
or
and
or
or
dec
inc
push
(bad)
cmp
jne
sub
fisubr
push
iret
xchg
popf
clc
mov
dec
jmp
or
mov
sbb
sub
retf
and
jg
and
push
test
add
je
in
repnz
cmp
lahf
std
mov
sbb
sub
cld
ret
and
push
or
ins
cmp
push
mov
int3
mov
pop
in
adc
dec
xor
in
aas
movs
mov
sbb
inc
or
push
adc
test
xchg
adc
lock
mov
mov
sbb
cld
ret
rol
pop
repz
push
push
sub
mov
test
pop
gs
inc
ins
or
add
dec
sbb
jns
dec
mov
lahf
and
popf
xor
and
sbb
or
push
xchg
shl
shl
xchg
pushf
retf
push
or
fwait
add
clc
push
mov
cmp
mov
shr
adc
add
(bad)
or
and
jbe
call
jnp
add
mov
adc
xor
mov
or
xor
mov
dec
push
sbb
dec
adc
sub
test
and
sub
stos
sbb
mov
push
int3
push
fwait
cmp
xchg
arpl
das
leave
xor
adc
push
sbb
into
inc
push
jmp
xchg
pusha
cmp
push
or
jecxz
dec
mov
pop
push
push
push
push
dec
mov
or
das
addr16
jno
sub
fld
pusha
add
inc
neg
cli
gs
push
xchg
test
dec
lods
imul
sub
push
pop
xor
repz
shl
or
ror
nop
cdq
pop
ret
rcl
jo
sahf
push
sub
and
lahf
jb
or
jg
dec
jl
cmp
hlt
pop
or
adc
loopne
std
push
xor
shr
add
cwde
xor
movs
scas
push
or
into
adc
nop
nop
sub
jl
pop
add
int3
pop
pop
push
xor
or
dec
and
dec
pop
test
push
or
fwait
aas
movs
and
dec
dec
ds
pop
add
and
es
add
mov
dec
aas
xchg
and
pusha
adc
aaa
and
mov
inc
cld
add
inc
dec
retf
mov
add
cld
sub
sub
aas
mov
push
sbb
adc
movs
pusha
or
sbb
push
pusha
(bad)
or
ret
in
add
push
push
in
dec
add
ret
test
jl
adc
add
jg
or
pop
mov
inc
stos
mov
pop
pop
in
je
add
pop
mov
dec
jl
dec
rcl
frstor
jno
iret
add
adc
icebp
sbb
movs
xor
outs
int3
pop
jl
adc
cmp
add
inc
ret
loopne
dec
adc
add
aad
fild
ror
add
mov
inc
add
mov
in
hlt
dec
pusha
and
pop
push
repnz
xor
and
je
ins
jne
jne
xchg
scas
stos
ficomp
cmps
and
add
rcr
xor
dec
cmps
inc
push
push
in
and
in
and
and
inc
cmps
in
and
mov
xor
add
jl
je
or
loopne
xchg
sub
ss
or
or
sub
push
pop
les
test
pop
jg
push
sbb
fs
push
mov
dec
push
lods
jo
jno
or
sar
dec
inc
stos
in
or
or
outs
es
pusha
cmp
mov
mov
jmp
dec
or
nop
pop
sub
mov
repnz
push
adc
adc
outs
lea
cmp
cmp
add
cmp
cdq
bound
shr
imul
repnz
lea
nop
inc
pop
dec
ret
xor
mov
add
xor
bound
xchg
or
cmp
and
add
and
mov
repnz
enter
mov
movs
adc
(bad)
add
jecxz
push
fild
inc
dec
and
sub
push
int3
sub
add
sub
sub
cmps
push
sbb
sub
or
enter
sub
sub
adc
fild
inc
sub
idiv
mov
movs
popf
jmp
retf
adc
int3
or
sub
mov
dec
jnp
test
pop
mov
adc
aam
stos
popf
xor
and
inc
mov
mov
test
mov
fistp
add
ja
shl
fnstcw
enter
sub
sbb
add
fbld
xchg
scas
sub
sbb
fs
inc
lods
adc
xor
sub
sub
popa
and
rcr
jne
ds
push
stos
push
add
sbb
xor
in
adc
lea
push
popf
mov
loope
js
push
(bad)
xor
and
daa
sar
adc
cwde
mov
je
pop
pop
enter
push
jmp
enter
xor
les
sub
jge
pop
pushf
lahf
xchg
test
push
pop
add
ret
and
xor
and
cmp
or
and
adc
ret
cmp
add
xor
mov
and
and
je
mov
add
add
pushf
pop
mov
inc
arpl
ret
cwde
cwde
add
or
sbb
ret
adc
pop
shr
adc
or
ja
imul
sbb
jmp
fwait
add
(bad)
pop
mov
mov
mov
add
fist
push
add
adc
arpl
pop
call
test
sub
mov
pop
nop
add
sar
fld
int3
push
mov
mov
je
xchg
cmp
mov
dec
scas
imul
dec
mov
daa
test
fs
pop
add
dec
int3
jne
mov
push
sub
std
pop
mov
mov
lahf
lock
test
fsubr
jo
clc
mov
imul
popf
mov
adc
xor
and
in
je
fsub
or
push
sahf
jbe
push
dec
push
mov
out
cmp
mov
jge
fldenv
sub
add
add
hlt
stos
pop
test
jne
sub
inc
jg
cld
inc
sbb
mov
(bad)
imul
sub
push
fs
push
and
shl
add
jno
or
imul
cmps
dec
icebp
cmp
clc
push
ja
adc
dec
jbe
jbe
mov
push
mov
sbb
add
ret
xchg
and
mov
xchg
adc
push
sbb
ror
and
and
and
lock
inc
sub
and
sub
xchg
sub
ret
sbb
jo
ja
push
push
jae
movs
mov
cwde
(bad)
pop
dec
push
push
mov
sbb
jbe
and
test
jmp
sbb
dec
nop
out
xor
sbb
jge
dec
nop
sub
retf
cs
aas
push
cld
add
out
dec
xor
sbb
or
push
les
mov
mov
rol
cli
in
gs
mov
add
loop
cmp
test
adc
data16
cmps
add
mov
pusha
aam
inc
sbb
xchg
repnz
push
dec
xchg
pop
mov
iret
mov
pop
(bad)
cmp
sbb
pop
jb
cmp
inc
sbb
test
inc
mov
push
adc
sub
popa
hlt
mov
dec
jne
sub
sub
sub
add
std
add
std
push
jb
retf
mov
sub
or
and
cvtps2pi
dec
xor
sub
pusha
daa
push
sbb
test
mov
or
xor
xchg
mov
and
mov
and
push
dec
loope
xor
add
add
mov
(bad)
pop
and
rol
push
push
pusha
test
pusha
ret
fisubr
(bad)
xor
rol
add
dec
push
push
push
mov
(bad)
xor
mov
push
clc
fist
icebp
push
mov
stos
pusha
mov
xor
jbe
mov
pop
pop
out
rcr
loop
sbb
jb
mov
pop
adc
and
add
fwait
cmps
mov
xchg
sub
les
adc
cmp
and
and
or
mov
test
call
or
xor
and
pop
cmp
jg
or
cmps
sar
inc
jl
in
leave
and
and
and
pop
add
push
adc
dec
push
in
and
and
fs
dec
and
and
(bad)
lock
pop
inc
pop
ss
mov
leave
xchg
es
and
movaps
ret
sbb
dec
pop
imul
xor
push
dec
fs
pop
and
mov
sbb
in
dec
jo
mov
jae
push
mov
mov
jns
push
aas
enter
add
inc
ss
adc
clc
scas
adc
(bad)
fist
dec
ret
int3
dec
xchg
jmp
jbe
fld
hlt
movs
and
dec
mov
add
dec
adc
adc
sub
bound
mov
add
dec
pop
inc
sub
rol
in
ds
sbb
sbb
fs
xchg
fiadd
mov
or
pushf
add
or
inc
fcmovu
jbe
aas
cdq
fisub
adc
cvtps2pd
mov
mov
das
pop
pop
xchg
ror
xchg
pop
cmp
cmp
inc
mov
(bad)
pop
jne
(bad)
adc
add
retf
or
or
pop
xchg
sub
sbb
push
adc
ret
adc
in
in
int3
cmp
imul
ror
inc
and
or
in
nop
daa
or
fstp
pop
or
xchg
inc
mov
in
je
dec
add
pop
add
fild
push
ins
test
sar
sub
jno
push
iret
add
(bad)
sti
mov
shr
mov
ins
mov
pusha
call
call
inc
int3
mov
aam
leave
jmp
popa
jo
mov
mov
jno
lea
xor
mov
adc
adc
xor
(bad)
xchg
xchg
out
cmp
pop
mov
cmp
add
clc
or
je
daa
fadd
mov
dec
add
or
push
test
push
std
inc
in
xor
mov
sbb
add
add
loop
or
sub
jae
and
dec
add
jle
test
xchg
xor
inc
dec
push
and
sub
mov
imul
cwde
pushf
ins
cs
push
or
jg
in
sbb
outs
xor
adc
or
or
inc
or
jne
and
sbb
mov
andps
imul
fcomip
aad
xor
iret
cmc
sbb
dec
pop
dec
sbb
push
jae
inc
fimul
cmp
dec
push
jp
jo
cmp
mov
les
xor
mov
and
jl
enter
fsubr
push
inc
inc
and
aas
(bad)
and
push
sub
sbb
xchg
out
adc
ret
dec
clc
pop
xor
test
inc
jl
sbb
or
cwde
(bad)
stc
clc
push
scas
movs
add
add
inc
and
sub
mov
scas
or
or
dec
add
or
sbb
mov
xchg
cmc
sbb
or
or
adc
inc
adc
jo
in
arpl
hlt
(bad)
dec
jmp
adc
cmc
retf
ret
pop
inc
cld
movs
or
mov
mov
retf
in
rcr
xor
cmp
mov
cld
pusha
pusha
sbb
mov
xchg
(bad)
jmp
jnp
lea
and
and
xchg
add
pusha
ficomp
push
sbb
pop
mov
add
repnz
imul
adc
in
push
xor
sahf
and
(bad)
lock
xlat
and
sbb
in
add
sbb
ins
sbb
xor
jne
add
ret
xchg
or
out
add
jl
sub
inc
push
call
or
rol
push
leave
adc
pop
sub
test
push
and
adc
inc
jle
ins
dec
cmp
je
gs
mov
pop
retf
pop
test
sbb
ins
inc
sub
xchg
mov
ror
inc
in
movs
push
add
cmp
add
and
int
and
add
jne
or
mov
cmps
pop
jno
or
jne
push
and
popf
xchg
mov
loopne
cmp
mov
dec
or
add
or
push
xchg
mov
jns
or
or
int3
jle
or
data16
xchg
pop
rol
sbb
mov
pop
sbb
or
sub
nop
push
push
push
xor
aas
cs
jl
add
adc
inc
popa
push
loope
push
adc
cmp
jmp
push
cmp
cmp
jp
jg
adc
mov
mov
and
inc
js
js
jl
stos
test
inc
inc
leave
shl
jle
dec
inc
jg
dec
stos
ret
inc
dec
int3
sbb
and
mov
lea
jbe
test
nop
push
cwde
cdq
cdq
add
sbb
xor
ja
adc
cmp
je
mov
mov
xchg
sbb
dec
ins
mov
xor
mov
jne
or
mov
push
adc
jo
jg
xor
mov
popa
mov
sub
ror
lea
fld
aaa
or
idiv
test
neg
mov
cli
xchg
icebp
pop
aam
xchg
sahf
call
mov
mov
xor
add
jmp
lahf
sbb
loopne
cdq
mov
sahf
xchg
mov
inc
(bad)
cmp
mov
repz
xchg
mov
sbb
cwde
or
movs
push
retf
es
dec
pop
pop
fst
(bad)
adc
ins
dec
add
cmp
push
call
call
pop
sub
mov
sbb
mov
xchg
retf
fcomp
and
popa
pop
and
pop
dec
cmps
dec
add
push
sbb
adc
cmp
add
cmp
mov
mov
ds
sbb
in
pop
inc
and
loop
push
fdivr
sub
sub
cmp
jl
or
cli
aaa
cmp
jl
and
mov
sbb
and
add
push
or
adc
adc
inc
sbb
mov
sbb
fimul
sbb
jle
sbb
out
aam
hlt
cmp
mov
push
inc
cmp
or
mov
sub
add
es
jecxz
sqrtps
xor
leave
pop
movs
xor
push
and
cmp
clc
(bad)
aaa
je
sbb
shl
xchg
and
add
ja
mov
dec
inc
(bad)
pop
in
aaa
push
push
and
jns
outs
je
and
push
jmp
jg
add
pminub
icebp
mov
pop
pop
jmp
lea
test
inc
or
(bad)
fdiv
push
popa
dec
test
sbb
adc
mov
push
xor
inc
cmp
popa
call
or
and
mov
push
repz
jmp
cmp
leave
jne
jns
mov
cmp
add
cmp
jg
idiv
or
int
rcl
retf
sbb
sub
loope
dec
fcomp
push
mov
sbb
sub
in
out
or
cmp
pop
(bad)
sub
push
xor
ror
and
mov
nop
movs
or
or
dec
push
mov
(bad)
inc
cmps
(bad)
out
daa
mov
jmp
test
pop
mov
(bad)
out
pop
mov
sbb
add
push
(bad)
and
arpl
loope
add
(bad)
test
add
int
cmp
xor
adc
pop
adc
daa
mov
sub
cmps
jb
sbb
sbb
movs
sbb
(bad)
jb
cmp
mov
add
test
jns
dec
dec
ins
push
jecxz
ins
lods
test
pop
mov
inc
jle
add
pusha
xlat
dec
imul
inc
mov
jmp
mov
xchg
sahf
pop
test
mov
pop
adc
pusha
sub
add
cdq
push
push
loop
and
je
inc
or
push
(bad)
mov
(bad)
cmp
aas
mov
jp
fbld
cmp
pop
fcom
xchg
sbb
in
jle
xor
shr
jge
add
call
sub
outs
mov
adc
lahf
ret
sbb
mov
jge
sbb
jl
add
and
xor
and
ficomp
repz
add
dec
clc
jecxz
ret
(bad)
es
sub
or
mov
je
add
out
int3
es
inc
pop
ss
aam
push
js
xor
mov
xchg
pop
je
xchg
dec
push
mov
mov
das
sar
pop
mov
push
je
xor
mov
retf
jb
xor
jo
sbb
add
and
movs
pop
call
ins
pop
das
or
inc
sub
out
enter
or
cmp
ins
ins
adc
ins
jnp
and
and
pop
push
repz
repnz
aaa
push
or
gs
movs
pusha
jno
xchg
addr16
pop
je
adc
xchg
pop
popf
mov
pop
cmp
jo
inc
call
fcomi
pop
pop
xor
mov
pop
adc
jmp
push
clc
and
add
stos
push
push
inc
add
mov
ret
xor
push
or
call
mov
mov
loopne
adc
mov
add
xor
fdivr
adc
pop
es
cmp
mov
jecxz
fcmovnb
repnz
hlt
inc
test
jmp
mov
out
jnp
mov
cmps
push
jp
push
pop
add
ja
add
inc
add
test
push
mov
dec
ins
arpl
mov
and
daa
outs
or
inc
ret
pop
xor
sub
add
ins
mov
push
adc
test
not
jbe
add
adc
imul
bound
or
and
dec
rcr
fcmovu
add
mov
fistp
push
inc
dec
push
and
push
push
scas
inc
lea
adc
mov
cmps
aad
push
cmp
test
mov
jmp
jb
push
pop
adc
ror
sub
jns
(bad)
add
into
sbb
stos
jecxz
xor
shl
jecxz
jecxz
mov
adc
out
shl
in
cwde
lods
mov
sbb
les
ret
add
pop
(bad)
xchg
adc
cmps
mov
sub
pop
and
push
add
mov
sbb
pop
cmps
mov
xor
adc
int3
push
add
add
(bad)
retf
imul
and
push
dec
cwde
xchg
push
pusha
gs
jae
mov
adc
and
xor
xor
(bad)
push
jnp
mov
cmp
push
and
push
es
dec
lahf
not
call
inc
xlat
xchg
mov
and
or
or
dec
sbb
add
jp
and
adc
stc
mov
fistp
pop
dec
xchg
iret
xchg
cmps
jns
adc
call
dec
sbb
xor
push
add
pusha
and
dec
(bad)
adc
stos
and
or
xor
adc
xor
jae
jecxz
ja
push
inc
imul
sub
sub
add
cmps
shl
push
arpl
mov
lahf
or
jne
fcomp
mov
enter
mov
stos
cdq
mov
je
ret
aam
fstp
pop
push
pushf
(bad)
fsub
in
xor
add
xchg
and
pop
pusha
adc
pop
pop
xor
adc
(bad)
repnz
xchg
fs
(bad)
jg
or
or
pusha
cmc
int3
aam
inc
pop
fsub
or
xchg
sbb
push
cld
movs
or
push
pop
shr
jo
sub
or
push
or
imul
enter
xchg
or
pop
or
mov
and
or
push
lods
dec
pop
call
ret
call
rcr
and
or
ror
pop
mov
test
pop
or
rcl
push
or
sbb
cmp
shl
ficom
mov
fcomp
rcl
mov
and
xor
pop
pop
mul
add
push
mov
add
push
lods
shl
inc
jmp
icebp
push
clc
sub
add
sbb
rol
mov
int3
fidiv
or
pushf
xlat
add
xor
in
adc
pop
stos
out
pop
cmp
push
jmp
pusha
clc
push
mov
bswap
mov
addr16
mov
mov
mov
fild
test
add
jne
adc
push
push
push
aaa
pop
xchg
or
xor
sub
and
lahf
fist
push
ds
push
or
sbb
xlat
add
jo
div
or
add
dec
cdq
mov
data16
sub
cmp
adc
or
aad
adc
mov
xor
out
lea
adc
add
or
cmp
outs
mov
jae
cwde
adc
jno
jecxz
aad
pop
fidiv
mov
mov
adc
je
nop
popa
cmps
ss
or
xchg
push
(bad)
in
dec
cmp
adc
mov
arpl
pop
and
lea
ins
cmc
fucom
sub
js
and
mov
call
jno
test
add
imul
in
ja
mov
or
add
push
xor
jnp
cmp
daa
movs
sub
pop
jmp
(bad)
(bad)
nop
(bad)
std
mov
mov
(bad)
jg
in
mov
sbb
mov
inc
push
jns
push
add
jno
fmul
shr
iret
add
outs
jp
jge
rol
pop
pop
sub
popa
outs
dec
lea
pusha
mov
pop
sbb
sbb
ja
inc
pop
cwde
inc
pop
rcr
in
sbb
data16
jl
add
aas
mov
sbb
or
sub
leave
stos
imul
jno
rol
mov
xchg
lds
test
shr
inc
cmp
mov
mov
cwde
sbb
sbb
arpl
push
adc
or
je
or
mov
sbb
and
sbb
imul
push
adc
push
jmp
xor
shl
jmp
sbb
inc
xor
mov
sbb
les
(bad)
or
sbb
xlat
pop
adc
mov
fwait
mov
test
jge
mov
mov
add
aam
out
push
dec
mov
ss
(bad)
es
pushf
leave
(bad)
les
fcomp
sti
js
mov
leave
lea
sbb
xchg
lea
or
push
push
pusha
sub
push
hlt
xchg
ret
sbb
enter
lea
mov
cld
xchg
cmps
rcr
jmp
add
xchg
in
popf
add
lock
dec
jb
call
and
lock
mov
or
push
inc
or
sbb
mov
cwde
adc
jae
mov
pop
adc
nop
inc
add
ret
test
movs
add
and
add
cmp
and
fstp
inc
adc
push
cwde
sub
ins
dec
push
sbb
mov
popf
xchg
cmp
jge
xor
gs
xor
cmp
popf
add
je
jnp
mov
xchg
mov
mov
dec
xor
sbb
jl
lock
jns
cmp
add
bound
mov
call
or
inc
dec
cmp
lods
rcl
mov
adc
data16
ret
inc
push
sbb
push
fcomp
outs
mov
xchg
mov
mov
into
add
mov
dec
mov
or
push
push
nop
xor
xchg
push
(bad)
push
mov
pop
sub
(bad)
leave
inc
or
(bad)
and
jno
dec
inc
xchg
xchg
mov
sbb
mov
push
fnstcw
fistp
jae
pushf
mov
adc
sbb
cld
adc
loop
or
cmc
mov
and
shl
sbb
rcl
xchg
jo
(bad)
aam
loopne
mov
out
ror
push
push
and
push
in
in
cmps
adc
test
add
cmp
and
dec
push
dec
push
movs
mov
sbb
leave
mov
dec
inc
sub
jne
add
out
push
cmp
jl
push
popa
xchg
rol
cli
adc
sbb
pop
mov
pop
adc
or
add
aam
xor
aad
retf
or
sub
push
mov
jo
loope
add
or
dec
adc
jo
sbb
mov
xor
loopne
retf
cs
cmps
or
out
or
mov
loope
lea
push
pushf
push
or
in
push
adc
mov
inc
cmp
cmp
xchg
and
sub
jo
adc
dec
push
stc
add
jne
cmp
jne
pop
cmc
jge
out
xchg
js
mov
(bad)
mov
dec
sub
das
mov
scas
add
repnz
sbb
call
adc
jmp
repz
mov
adc
ror
mov
mov
mov
dec
dec
retf
push
adc
or
cld
xchg
fs
cli
pop
cli
sbb
add
and
or
mov
test
jns
push
pop
add
neg
(bad)
xchg
dec
xor
pop
xor
sbb
in
sbb
mov
push
nop
push
push
push
sub
arpl
cmp
inc
pop
dec
ds
bound
mov
push
or
inc
ret
std
sbb
sbb
sbb
or
add
dec
xchg
test
test
push
lods
jge
test
inc
daa
imul
and
cmp
sbb
cmp
sub
popa
psubusb
iret
jmp
mov
lods
mov
push
fmul
jns
icebp
repnz
sbb
push
or
sub
cwde
inc
xor
jo
aaa
mov
mov
pop
sub
xchg
mov
adc
push
ret
inc
push
cdq
rcl
retf
add
add
inc
dec
or
repnz
jecxz
jl
ins
add
add
and
add
clc
mov
cwde
packuswb
push
push
bound
sub
mov
fsub
xchg
push
iret
and
out
adc
mov
ss
or
push
mov
or
leave
mov
inc
push
mov
(bad)
ja
inc
mov
xchg
rcl
clc
push
iret
and
ds
pop
adc
ins
and
sbb
push
sahf
sahf
adc
jne
or
loope
jo
or
nop
imul
mov
sbb
rol
das
jb
cmp
neg
je
push
je
push
mov
pop
ret
pop
cdq
mov
hlt
ds
push
cwde
rol
test
sub
cmp
icebp
nop
test
adc
cs
int3
orps
pop
sub
ret
shl
pop
lahf
inc
cwde
rol
shl
fild
mov
ins
(bad)
stos
sub
test
xor
adc
adc
and
pop
ins
pop
pop
fistp
les
or
cmp
xor
inc
enter
adc
mov
inc
mov
xchg
cmp
inc
cld
outs
jne
mov
jmp
lods
mov
pop
sbb
movs
push
sbb
mul
jo
mov
cwde
or
call
mov
inc
cmps
fs
(bad)
jle
push
ja
sbb
jge
(bad)
arpl
mov
push
ja
mov
loopne
imul
arpl
sbb
mov
fisub
add
pop
lods
xor
and
out
adc
or
ins
add
adc
fdivr
js
push
push
push
pop
aas
sub
add
xchg
cmp
lea
jne
mov
add
loope
int3
clc
mov
cwde
js
adc
test
js
and
and
push
sahf
dec
outs
add
(bad)
lahf
or
popf
cmp
mov
js
(bad)
mov
xchg
push
inc
add
rcl
pop
adc
lods
jb
jb
xor
mov
mov
iret
ror
mov
push
shl
dec
dec
call
mov
adc
out
or
xchg
sbb
jnp
xlat
retf
popf
daa
(bad)
mov
call
dec
or
jle
cmp
outs
sub
push
jmp
add
rol
shl
mov
mov
jmp
pop
cmp
pushf
cmc
or
and
js
dec
hlt
clc
sub
mov
int3
mov
mov
mov
add
shl
sbb
add
cld
cmp
in
int3
ins
bound
mov
inc
mov
push
aam
out
mov
popa
int3
pop
mov
push
rcr
push
call
sub
mov
fistp
mov
scas
jno
xor
stc
mov
and
or
and
addr16
inc
sub
mov
push
sbb
jp
mov
int3
cmp
ins
inc
dec
in
ss
sub
dec
rcl
std
or
in
mov
mov
pop
jb
pushf
xchg
les
and
and
adc
nop
in
adc
push
add
inc
popa
dec
or
stos
push
ins
shl
fbld
push
mov
jle
fsub
jge
sbb
ss
or
loop
rol
add
aam
fld
inc
sub
adc
adc
adc
mov
pop
rol
push
enter
pusha
ret
push
jae
add
sbb
pushf
lahf
fadd
sbb
pop
pop
xchg
pop
ins
jne
call
pushf
gs
add
addr16
sbb
mov
mov
mov
mov
push
(bad)
dec
fwait
push
jbe
or
adc
pop
add
jecxz
add
pop
pop
push
push
inc
cmp
test
push
std
push
pop
ret
inc
xchg
rol
mov
cmps
sahf
lock
je
mov
push
push
cmp
pop
mov
daa
jne
inc
jp
cmp
mov
and
add
inc
jb
or
pop
test
adc
das
ret
inc
and
push
push
(bad)
jge
push
scas
inc
and
dec
adc
xor
mov
lahf
ret
ret
push
inc
cld
loope
clc
inc
mov
add
push
or
inc
xchg
add
das
fdiv
movs
push
and
push
dec
fst
hlt
add
je
mov
push
mov
in
call
dec
sbb
or
pop
lods
adc
shr
lods
sub
and
or
pop
jge
or
mov
nop
shl
and
or
adc
cmps
retf
shl
into
fcmovnu
dec
mov
jge
je
mov
jne
fsubrp
pop
jnp
add
push
pop
pop
in
adc
mov
dec
fmul
push
xor
movs
adc
inc
std
in
movs
fmul
xchg
push
(bad)
sbb
push
mov
les
adc
js
dec
xor
in
jmp
push
jo
cwde
and
push
sub
xor
setge
int
jmp
dec
jge
dec
and
(bad)
out
sbb
add
in
push
inc
test
test
sahf
(bad)
mov
push
push
int3
push
popf
jg
sbb
repnz
xchg
clc
(bad)
clc
jg
xchg
adc
arpl
xor
ret
jg
push
jl
inc
or
std
add
idiv
ja
jle
xchg
sbb
jne
mov
xchg
cmp
jl
data16
cwde
sub
rep
pusha
and
jb
sbb
(bad)
and
out
mov
inc
inc
bound
mov
lahf
lods
inc
repnz
fsub
inc
std
add
mov
or
adc
test
jle
or
gs
out
adc
ret
cli
and
retf
test
test
and
lea
mov
xor
out
push
mov
dec
and
add
nop
and
scas
push
lea
mov
pop
iret
push
or
cmp
mov
jb
add
in
dec
dec
jo
xchg
mov
pop
jb
ja
fs
cld
clc
lea
cmp
adc
aaa
pusha
es
mov
pop
std
adc
lea
add
add
pop
xlat
dec
push
movs
adc
mov
push
aas
rcr
ds
out
pushf
sub
ja
sub
sbb
inc
dec
pop
inc
lldt
retf
adc
mov
loopne
mov
xchg
xchg
sub
fucomi
ins
nop
jns
(bad)
push
mov
push
out
mov
push
or
add
jg
shl
adc
ficom
pop
jnp
mov
addr16
mov
inc
test
push
ins
xchg
or
scas
add
scas
sub
cmp
cmps
xchg
out
bound
mov
jne
inc
les
push
adc
ss
xchg
ret
inc
or
push
mov
fs
dec
dec
pop
outs
aam
adc
adc
or
jne
cmp
cwde
jno
cld
enter
jmp
jne
mov
cmps
mov
jg
mov
ds
cwde
sub
mov
(bad)
mov
loopne
lahf
inc
fs
push
mov
test
(bad)
and
add
add
and
mov
jecxz
mov
cs
jecxz
dec
out
xchg
dec
into
in
mov
inc
xchg
mov
(bad)
retf
lock
pop
icebp
sub
lods
hlt
inc
test
mov
add
mov
mov
mov
pop
jg
(bad)
aam
and
pushf
pusha
loop
mov
inc
or
ds
movs
pushf
inc
lods
mov
and
and
xor
ins
push
sub
or
jne
loop
sub
(bad)
mov
pusha
popa
cli
icebp
adc
fisubr
leave
add
sbb
sub
cmp
dec
push
dec
movs
mov
inc
pop
ret
add
or
dec
sbb
movs
inc
dec
cmp
sub
sbb
pop
inc
inc
add
pushf
nop
dec
push
rol
xor
push
ffreep
dec
dec
sbb
inc
cmp
adc
jbe
lea
hlt
(bad)
stos
jl
pop
jmp
dec
les
add
mov
arpl
pop
sbb
shr
add
pop
or
(bad)
out
mov
inc
mov
adc
into
int3
push
adc
adc
mov
sbb
sahf
mul
and
and
and
pop
sub
fdivr
cmc
lea
and
xchg
mov
and
jl
dec
ret
nop
jmp
jbe
(bad)
fidiv
add
hlt
and
sub
popa
sbb
and
xchg
mov
sbb
or
pop
cs
call
xchg
into
add
pop
cld
inc
lea
rol
cmp
movs
or
or
mov
aam
mov
cmp
cli
push
and
xor
cmps
push
inc
clc
lea
mov
sub
ret
lods
sub
pop
bound
and
mov
jnp
fiadd
dec
ja
pop
ror
pop
out
div
daa
mov
mov
aas
or
xor
mov
mov
mov
clc
fmul
mov
stos
jl
shrd
pop
ss
sub
test
and
cdq
xchg
cmps
jo
adc
xor
imul
test
push
ret
mov
test
mov
rcl
fwait
xchg
call
popf
pop
cmp
ja
jno
(bad)
dec
jo
or
adc
jecxz
cmp
and
scas
mov
mov
je
mov
in
stos
xchg
mov
and
sub
sub
jmp
(bad)
and
test
jle
push
rol
or
sbb
xchg
cdq
adc
nop
and
scas
ja
and
clc
popa
cld
mov
sub
jmp
sub
jmp
sub
fisubr
out
das
into
and
add
push
mov
loopne
xor
mov
retf
mov
call
jne
add
fcom
push
aaa
or
push
dec
push
cmp
adc
gs
push
dec
rcr
outs
je
xchg
mov
pop
push
lods
ins
xor
fcom
cmp
mov
shr
xor
jae
add
jbe
jo
adc
xor
jg
jmp
mov
in
popa
sti
mov
add
test
cmp
push
pusha
lods
stos
into
repnz
cs
sbb
sbb
mov
sub
popf
cdq
and
add
add
jmp
cmp
mov
sbb
inc
fadd
dec
or
adc
mov
ss
rcr
jmp
sbb
shl
lods
test
xchg
leave
adc
cmc
xchg
lods
ins
fadd
shr
sub
test
lds
cld
ret
xor
push
test
fwait
cld
xor
popf
ror
sub
inc
or
lahf
out
cmp
bound
add
xchg
xchg
arpl
add
add
cwde
mov
add
mov
inc
mov
mov
data16
cmp
imul
adc
ins
sub
js
mov
in
add
sbb
or
push
and
loope
mov
pusha
dec
scas
push
scas
sub
jbe
adc
(bad)
sub
jmp
inc
aam
pop
adc
mov
adc
add
popa
imul
out
fs
in
cmp
shr
cmp
or
jne
hlt
into
je
xor
movs
daa
xor
ins
inc
dec
add
rol
inc
ret
mov
clc
rcl
or
xchg
xor
jae
dec
rcl
mov
leave
(bad)
jne
fistp
sub
jl
ret
popf
dec
sub
cmp
adc
sub
les
mov
mov
gs
add
(bad)
adc
sub
jo
push
mov
add
pop
cli
push
sub
clc
inc
dec
mov
outs
nop
xchg
add
dec
jb
lods
es
cmp
inc
ficom
sub
out
add
(bad)
adc
(bad)
(bad)
clc
lea
rcr
mov
push
cld
push
fcomip
push
and
adc
nop
mov
inc
sahf
xor
and
add
imul
or
in
and
fld
push
sub
cld
inc
pop
pop
repz
mov
cmp
ins
push
mov
and
jmp
rcl
dec
shl
inc
push
pop
or
pop
fwait
and
sub
inc
mov
push
push
mov
je
push
shl
shl
pop
xor
pusha
push
push
xor
sbb
ret
sub
mov
and
and
fs
scas
adc
(bad)
or
cwde
ror
xchg
dec
mov
sub
mov
push
adc
adc
sahf
sub
or
test
mov
and
mov
push
sub
rcl
or
sub
adc
clc
repz
call
push
dec
ret
mov
push
sub
adc
(bad)
out
and
repnz
enter
pop
lock
xchg
and
sar
out
out
mov
pop
stc
xor
and
icebp
or
pushf
(bad)
lea
fdiv
or
push
xchg
fnstsw
or
aaa
mov
ds
test
xlat
or
ror
daa
jp
mov
hlt
sbb
push
inc
cmc
fstp
add
mov
jno
mov
ror
cmps
sbb
push
repz
xchg
fsubr
push
sub
push
pushw
ins
cs
mov
sbb
jmp
dec
mov
push
ror
adc
xor
push
push
aam
in
xor
int
or
push
or
dec
fstp
jl
jl
in
lock
ja
xchg
pop
jnp
lods
pusha
mov
push
cmp
(bad)
and
mov
push
add
ret
pusha
and
inc
push
mov
xchg
scas
push
xor
fist
and
mov
ret
mov
adc
imul
lock
sbb
sbb
xor
loope
mov
loop
add
cmp
sbb
fist
adc
loop
cwde
add
shl
pop
cmp
ficom
(bad)
je
inc
jnp
or
add
and
push
nop
rol
ss
mov
ds
dec
push
dec
nop
lods
in
adc
push
mov
jmp
jae
(bad)
sub
dec
mov
lods
mov
mov
add
cmp
cmp
cdq
int3
push
add
inc
pop
push
pop
pusha
mov
add
pop
jl
adc
xor
add
pop
(bad)
dec
pushf
and
or
iret
push
or
sar
pop
mov
cmp
cwde
add
js
mov
xchg
push
push
and
mov
xchg
retf
icebp
push
push
retf
or
movs
adc
je
ds
xor
mov
or
leave
dec
shl
push
cmp
or
cwde
addr16
aas
mov
xlat
adc
jne
je
not
xchg
retf
and
jmp
inc
rol
sahf
and
push
pop
push
and
mov
push
je
ja
push
or
jg
test
add
add
mov
jo
sahf
nop
pop
icebp
rcl
push
(bad)
jmp
add
adc
push
mov
inc
jb
sbb
inc
sbb
sub
gs
push
or
ja
scas
ins
and
je
aad
inc
inc
ret
fld
in
adc
int
ss
mov
mov
es
cmc
pop
and
add
ins
mov
jl
outs
pusha
jo
adc
dec
add
icebp
pop
je
test
sti
and
mov
je
cmp
push
daa
xchg
sub
pop
jle
ret
bound
jnp
mov
(bad)
mov
(bad)
jecxz
int3
mov
aam
je
adc
xor
sub
aaa
push
sbb
dec
loopne
and
dec
test
aas
ss
not
lea
inc
or
inc
pop
adc
and
rol
dec
mov
icebp
push
inc
adc
into
jne
sub
push
dec
sub
sub
or
sbb
movs
adc
pop
or
adc
and
jo
fld
jmp
(bad)
data16
fwait
push
push
mov
cmp
dec
sub
ror
sbb
jne
test
iret
data16
std
mov
sub
sub
xchg
adc
xor
mul
sub
adc
push
dec
imul
ret
pop
jo
mov
fnstenv
aas
or
and
sbb
aam
cmps
cmp
sub
popf
sbb
add
(bad)
jg
aas
test
pop
cdq
jmp
test
fist
aaa
push
ret
or
mov
test
inc
jnp
out
mov
cmp
out
xor
mov
stc
and
outs
push
push
pop
ins
mov
aad
outs
and
dec
push
inc
cmps
lea
pop
call
fcomip
lea
icebp
cwde
test
pop
(bad)
sbb
xchg
jnp
shl
(bad)
ror
fbld
xchg
nop
cmp
data16
test
push
dec
pop
inc
jg
jmp
cdq
pop
mov
mov
shl
jge
inc
ds
fcomp
push
xchg
mov
inc
mov
fsubr
cmp
jne
inc
cdq
test
rol
xor
mov
ret
hlt
movs
pop
idiv
or
sub
lock
out
inc
(bad)
aaa
call
mov
add
out
or
call
sub
push
imul
pop
test
mov
jl
xchg
mov
xchg
push
adc
pop
inc
sbb
ds
fsubr
push
cmp
fimul
ins
jmp
mov
cmp
sbb
inc
add
jbe
imul
stos
dec
jecxz
sti
mov
inc
and
sub
and
test
sahf
adc
test
push
add
loop
jo
push
test
mov
cwde
pushf
leave
mov
jns
and
xchg
adc
mov
mov
das
lea
imul
or
xchg
mov
nop
mov
adc
in
(bad)
fstp
cwde
jae
iret
sbb
pop
call
stc
cmp
jmp
inc
push
push
adc
movs
xchg
push
add
lods
add
jb
adc
pop
ret
adc
mov
cdq
xor
ret
push
xor
sub
adc
or
dec
xchg
lahf
movs
sub
cmp
(bad)
xor
sub
mov
sub
and
push
add
push
dec
xchg
adc
mov
pusha
iret
outs
les
dec
fisttp
inc
fist
pop
in
and
or
test
call
pop
inc
push
mov
pop
bound
pop
clc
pop
jp
cmp
jmp
and
es
nop
mov
xor
and
inc
push
iret
clc
push
mul
fcom
je
cli
xchg
pop
pop
sbb
adc
xchg
mov
cmp
mov
add
loope
sub
xchg
xor
mov
add
or
sub
push
adc
xchg
loopne
and
mov
loope
pop
and
sbb
test
mov
jns
stc
xchg
ret
add
adc
retf
jo
add
gs
adc
out
nop
les
imul
push
test
pop
ror
pushf
adc
cs
xorps
das
pushf
rol
inc
not
mov
cmp
jbe
cmc
and
(bad)
cmc
mov
or
sahf
cmp
sub
in
sti
and
test
cs
or
(bad)
in
mov
outs
(bad)
cwde
pusha
xchg
sub
xor
inc
mov
jge
clc
push
cmp
mov
scas
jle
xor
adc
jnp
cmp
mov
xor
pop
adc
bound
add
mov
or
lods
mov
call
cs
cmp
je
inc
rcr
adc
push
leave
cmp
push
call
jle
ins
jmp
fistp
jne
push
xor
push
or
pop
or
xchg
movs
aad
neg
ins
sbb
mov
xor
shr
call
pushf
adc
mov
cmp
add
mov
push
jo
sbb
out
mov
inc
into
(bad)
cmps
xor
ret
(bad)
cmp
leave
lods
cmps
fstp
movs
add
add
ret
pop
jl
ret
lods
cmp
pushf
ret
aas
add
or
mov
mov
fldenv
in
enter
or
mov
cmp
je
xchg
push
mov
mov
cmp
jne
jbe
ret
sub
pop
xchg
mov
ret
push
inc
dec
dec
inc
es
(bad)
cmp
sub
add
in
icebp
leave
cdq
sbb
and
mov
cwde
pop
or
lea
or
push
jge
push
add
xchg
sar
jge
cmp
lods
cdq
sti
jne
mov
test
push
inc
cs
mov
mov
cmp
jl
call
or
or
jbe
inc
mov
jmp
into
in
mov
lock
rcr
mov
push
sar
sub
mov
imul
inc
not
jo
out
add
lods
pop
cmp
(bad)
sub
out
and
cli
or
or
jle
pop
ret
aam
mov
dec
jne
daa
cmp
movs
dec
xchg
sbb
jle
pop
inc
or
or
ins
(bad)
pusha
sub
xor
mov
loopne
cmp
cmps
fiadd
ret
dec
stos
jmp
ss
pop
nop
push
lods
aas
fsubr
cmp
jle
int
mov
push
cmp
pop
cmp
pushw
lds
addr16
or
out
xchg
add
inc
mov
adc
dec
and
aas
xlat
jne
mov
rcl
push
dec
xor
inc
jl
aam
icebp
cdq
or
pop
cmp
jnp
jne
jae
xor
popa
adc
adc
and
mov
(bad)
mov
pop
mov
xchg
pop
cmp
cmps
mov
sub
daa
dec
cwde
adc
outs
xchg
(bad)
int
inc
or
icebp
ret
and
enter
mov
inc
enter
enter
and
and
jb
dec
or
mov
sub
push
mov
mov
inc
push
inc
add
lea
rcl
and
int3
mov
je
inc
push
jno
add
dec
add
data16
adc
push
push
dec
sbb
mov
and
stos
and
test
lahf
sub
xor
or
test
and
jp
or
sub
push
cmp
mov
dec
add
sub
push
fstp
in
fcmovb
ss
lea
mov
cmp
jb
(bad)
and
adc
pop
mov
push
adc
outs
sbb
push
push
sbb
aad
and
iret
loop
xlat
adc
in
stos
cwde
inc
clc
mov
jmp
xor
inc
push
fwait
mov
je
push
cmp
sbb
or
aaa
popa
rcl
sbb
dec
hlt
popa
xchg
call
pop
arpl
add
pop
test
cmps
mov
mov
sbb
inc
jecxz
rcr
xor
sbb
add
xor
lahf
mov
leave
cmps
and
cmp
sub
xchg
dec
aad
xchg
jmp
inc
jle
push
das
add
add
xor
icebp
stos
pusha
fadd
sar
scas
sub
fld
ret
les
xor
(bad)
iret
ror
xor
push
pop
repz
push
test
dec
add
sbb
or
jmp
dec
jmp
push
sti
and
rcl
inc
dec
pop
test
mov
sub
cli
lods
cmp
cmp
enter
or
inc
and
(bad)
mov
shr
mov
loop
jbe
clc
sbb
add
mov
push
inc
sub
mov
inc
fcom
aaa
inc
inc
adc
pop
add
dec
fwait
push
enter
ret
imul
adc
xchg
mov
jae
inc
dec
cmp
retf
or
cmp
mov
and
mov
or
xchg
mov
xor
pop
lock
out
xor
add
mov
xor
and
jge
enter
(bad)
push
ja
movsx
push
sbb
and
int
pushf
inc
mov
lea
mov
nop
mov
test
xor
xor
mov
cmp
movs
lock
pop
jmp
cmp
pop
call
dec
(bad)
cmp
cmps
jno
inc
mov
dec
or
ins
and
daa
cmp
sbb
cmp
push
sbb
int
call
push
push
inc
inc
ror
cmps
push
inc
push
jecxz
add
lock
int
push
pop
cmp
loopne
mov
push
adc
test
add
or
icebp
stc
lea
pop
add
or
pop
fstp
xor
sbb
jmp
lds
add
scas
sub
sbb
and
dec
add
sbb
pop
inc
sub
sbb
daa
rol
fdiv
mov
imul
rcl
daa
mov
cmp
xor
sbb
ss
push
push
fcom
add
das
je
stos
das
loop
add
aaa
sub
scas
rep
lea
dec
pusha
test
sbb
mov
dec
sbb
mov
mov
fadd
inc
dec
ret
and
push
test
pop
or
test
aaa
pop
pop
sbb
enter
mov
pusha
cmc
fnstcw
or
xchg
mov
or
mov
mov
xor
or
dec
inc
push
or
fsub
mov
add
cmp
xor
jns
lock
nop
sub
sub
iret
and
sub
sahf
rcr
pop
movs
add
and
jmp
push
std
jb
add
push
push
and
push
daa
or
pop
push
pop
jg
lods
in
jle
sbb
and
mov
loopne
add
(bad)
aam
jb
(bad)
or
cmps
add
shl
or
xlat
rcr
jo
je
pop
xchg
inc
push
rcr
pusha
nop
dec
daa
mov
pop
ficom
push
jnp
ror
and
mov
test
or
shr
cmps
dec
jmp
sbb
xlat
scas
xlat
pop
cmp
jne
call
jecxz
data16
pop
and
repnz
or
inc
adc
leave
rcr
add
cmp
sbb
das
xor
cmp
mov
test
mov
lods
pop
sub
pop
dec
hlt
cwde
es
jo
or
test
xor
in
dec
mov
cmp
test
clc
pop
movups
ss
xor
push
push
jae
outs
dec
xor
js
shr
retf
sub
xchg
push
iret
jl
sub
ret
adc
mov
fldcw
push
adc
mov
xor
sub
dec
dec
inc
add
push
cmps
inc
mov
in
dec
cld
jo
mov
add
cmps
imul
add
jo
js
xchg
xchg
outs
jl
mov
(bad)
mov
jl
push
sub
retf
in
sbb
int3
shl
pop
cs
loopne
adc
hlt
cld
push
and
iret
mov
cdq
test
daa
retf
mov
and
mov
hlt
aas
cmp
sub
dec
and
int3
mov
cmp
cmp
sub
xchg
lahf
lea
push
in
or
es
add
jle
push
stc
dec
sbb
movs
cmp
inc
je
je
jo
popa
es
xor
jo
lea
push
sbb
adc
call
gs
leave
adc
fwait
inc
dec
(bad)
les
je
pop
sub
gs
dec
movs
js
dec
arpl
xor
fwait
js
jmp
mov
add
rol
and
sub
push
aaa
cs
jns
sar
xor
movs
inc
pusha
stos
cmp
bound
push
jne
popa
mov
ins
sbb
mov
push
or
inc
arpl
(bad)
popa
clc
xchg
mov
repz
jle
push
imul
adc
pop
add
push
ret
fisub
mov
fs
dec
mov
push
push
dec
mulps
dec
xor
push
jl
adc
mov
adc
dec
push
and
repnz
and
sub
cld
adc
pop
adc
or
rcr
icebp
loopne
ss
push
inc
or
clc
push
pusha
push
in
add
mov
push
dec
ins
nop
jns
or
inc
or
mov
dec
pop
sub
pusha
inc
arpl
push
(bad)
adc
das
push
iret
add
cld
call
push
xchg
jmp
dec
fs
push
dec
shl
lods
and
dec
inc
out
push
mov
iret
sbb
push
xor
imul
sbb
inc
jnp
mov
fld
cdq
dec
push
adc
ins
loope
pop
cmp
mov
inc
loopne
int
push
fst
jno
or
and
sar
sub
mov
bswap
dec
dec
shr
mov
cmp
test
or
add
fwait
mov
sub
lods
ins
mov
ins
or
mov
and
xchg
dec
ins
mov
xchg
out
jmp
or
scas
stos
js
push
and
rcr
push
mov
stc
pop
iret
aad
out
and
mov
jg
push
or
sti
test
cld
dec
push
addr16
push
(bad)
in
ficomp
inc
jmp
popf
aad
je
push
sub
or
pop
push
inc
dec
ins
iret
push
or
lahf
sbb
mov
push
ret
stos
inc
cmp
movs
pop
mov
lods
sub
(bad)
xchg
int3
cmc
mov
ds
xchg
mov
mov
pop
out
(bad)
inc
mov
popa
xchg
xchg
(bad)
(bad)
mov
push
lahf
in
sbb
xchg
inc
(bad)
push
mov
out
sbb
into
out
lods
xchg
dec
push
or
dec
fnsave
push
ins
movs
inc
push
xchg
pop
jne
(bad)
nop
jecxz
add
inc
dec
loope
arpl
adc
hlt
add
xor
sbb
dec
jae
icebp
hlt
and
xor
enter
cdq
xor
ret
cmps
test
arpl
jb
mov
xlat
jbe
adc
shl
inc
adc
push
repz
out
jecxz
ret
inc
inc
call
push
sub
dec
pop
cmp
adc
dec
mov
push
add
and
cmc
inc
stos
lea
pop
xchg
push
add
aam
jmp
test
dec
adc
mov
mov
jne
cmp
mov
retf
push
inc
push
push
jmp
xor
xchg
push
sti
cld
add
(bad)
xchg
push
xor
test
sub
scas
pop
dec
inc
cdq
push
dec
mov
xchg
xchg
add
repz
fwait
add
inc
lahf
sub
aam
jne
in
jo
nop
lea
std
repnz
lods
dec
pop
push
push
mov
dec
ja
mov
pop
push
push
in
fmul
or
xchg
int3
fsubr
xchg
cmp
push
loopne
xor
adc
sbb
call
mov
add
in
push
push
call
aas
and
push
xor
sub
adc
or
in
(bad)
sub
aad
stos
loopne
and
push
fdiv
pop
mov
frstor
ret
dec
imul
sbb
and
jbe
ficomp
and
and
data16
xchg
xor
cmp
popa
mov
test
add
ret
stos
push
mov
shl
jns
jmp
push
sbb
int3
dec
sub
xor
adc
test
xchg
call
leave
dec
mov
and
adc
and
in
xchg
sub
je
mov
inc
mov
xor
add
mov
sahf
xor
je
sub
or
push
sbb
dec
aas
or
dec
in
xor
or
popa
sub
xor
xchg
cld
add
or
add
dec
ins
or
push
repnz
xchg
shr
ja
call
imul
pop
cmc
adc
adc
lds
cmp
ins
dec
ins
jne
jmp
pop
sbb
or
frstor
clc
imul
jo
les
mov
xor
in
call
push
push
inc
xchg
fiadd
xor
inc
sub
push
xlat
lahf
cmp
je
inc
jle
rcr
ficom
add
adc
sub
adc
adc
xor
pop
rol
push
or
add
adc
inc
push
sub
loop
fld
bound
push
mov
or
imul
xor
shl
je
mov
ret
jne
int3
push
push
sbb
sub
ja
stos
mov
stos
lods
or
and
cmp
inc
stos
or
cmp
pushf
or
push
leave
push
sbb
and
ror
dec
loope
fmul
das
jne
cmps
cmovo
test
adc
sbb
lods
rcl
xor
cmp
xchg
add
in
rcl
xor
pop
jmp
ror
push
jne
adc
mov
add
cmp
icebp
pop
dec
and
call
dec
push
xor
cmp
in
or
mov
add
mov
fistp
das
xor
jg
push
mov
hlt
inc
jl
and
lods
inc
loope
fnop
mov
xor
adc
and
push
ss
and
shl
mov
cld
or
push
xchg
ins
push
jl
add
push
push
pusha
mov
or
inc
add
add
and
loopne
add
imul
out
rcl
loopne
mov
cwde
dec
add
mov
jmp
pop
adc
push
stos
daa
sbb
xchg
dec
mov
je
push
fadd
or
or
and
push
sub
pop
jo
inc
imul
sbb
mov
adc
mov
sbb
and
test
jl
and
mov
sub
mov
cli
add
add
jno
push
out
push
inc
mov
mov
fnstsw
sbb
fiadd
cmps
push
inc
es
movs
rcl
dec
ja
sbb
into
jge
test
fst
cmovs
adc
imul
sar
dec
ret
jmp
add
jmp
mov
sahf
(bad)
fs
add
inc
ret
mov
sub
imul
retf
pop
cmps
inc
cmp
fs
bound
push
shl
pop
xor
jg
or
dec
je
dec
jne
or
push
inc
push
pop
jno
sbb
jge
inc
inc
pop
cmps
sub
les
sbb
pusha
sbb
nop
sbb
lds
call
mov
dec
push
mov
add
sub
push
enter
sub
dec
sub
push
mov
push
aas
jecxz
mov
in
mov
ror
jbe
ins
jbe
idiv
or
jle
imul
fcomp
adc
xor
imul
adc
mov
popa
(bad)
scas
mov
mov
jg
mov
mov
xor
pop
dec
ja
mov
inc
pop
fidiv
sub
fsub
mov
xchg
xor
mov
inc
cs
rcr
mov
ja
xor
xor
rol
fsubr
jmp
nop
lds
add
jl
cmp
test
(bad)
hlt
dec
test
iret
sbb
fldl2e
dec
sbb
das
dec
jmp
cmp
jne
and
jo
fxch
addr16
and
lds
out
xor
ror
xor
xchg
add
push
add
ret
and
test
lock
gs
jo
retf
dec
or
popf
stos
add
or
pop
cli
int3
js
adc
adc
(bad)
cmc
sar
inc
leave
call
gs
fs
(bad)
inc
xor
addr16
(bad)
and
enter
sbb
push
jbe
mov
ss
xchg
jmp
cmps
or
popf
push
cmp
fdivr
lea
inc
inc
cmp
xchg
cld
cmp
cmp
stos
sub
mov
std
repz
sub
cmp
xor
sub
fist
or
inc
dec
xor
ja
imul
jno
jp
call
pop
mov
xchg
mov
mov
imul
lds
mov
sub
clc
icebp
jne
mov
icebp
add
sub
inc
add
in
or
es
pop
sub
push
mov
mov
jmp
aad
stos
fs
ins
pusha
and
and
scas
cli
clc
(bad)
and
inc
add
jmp
jle
mov
adc
dec
inc
call
stc
mov
iret
add
imul
inc
cmps
lods
mov
dec
inc
mov
xchg
sbb
push
add
fucom
iret
add
and
mov
inc
jo
cli
push
into
inc
call
(bad)
mov
fisttp
or
sub
(bad)
out
xchg
cmps
cmp
push
call
and
mov
mov
hlt
or
mov
and
inc
ror
loopne
stc
mov
xchg
adc
adc
xchg
sub
push
or
or
pop
out
mov
lods
lea
pusha
inc
test
fst
sar
and
push
jg
jb
xlat
rol
icebp
mov
sub
and
retf
js
cmp
(bad)
lods
xor
fwait
mov
aas
in
sbb
inc
mov
pushf
pop
xor
test
jo
aam
or
or
mov
stos
fsub
sahf
add
dec
js
pusha
ins
adc
lea
dec
cmp
mov
fisub
jb
adc
push
adc
popa
pop
jmp
jae
xchg
adc
inc
movs
push
add
pop
hlt
retf
mov
movs
inc
mov
xchg
jno
es
push
dec
mov
cmp
in
iret
jecxz
test
jle
or
mov
mov
add
mov
sub
je
add
in
lock
sub
cmp
mov
sar
inc
jne
rol
andnps
jmp
int3
in
pop
rcr
lds
pop
or
fst
pop
add
or
jmp
sub
loop
xor
nop
fcomp
mov
(bad)
scas
dec
inc
imul
jbe
je
push
sbb
leave
dec
daa
mov
dec
push
jle
mov
dec
retf
retf
adc
(bad)
xor
add
retf
inc
je
in
test
and
xor
call
sbb
fistp
sub
popf
mov
dec
cwde
mov
cwde
shr
inc
sub
cmp
adc
test
xor
data16
sub
and
dec
cli
lahf
jle
sbb
aam
mov
push
xlat
pop
xor
fnstenv
pop
mov
outs
and
or
retf
and
pop
loopne
mov
push
lds
and
pop
enter
fild
and
jl
sbb
inc
nop
enter
xor
add
sub
add
jl
or
xor
cmp
sub
xchg
push
inc
adc
rcl
dec
or
and
dec
mov
adc
adc
stos
cmp
or
add
outs
sbb
(bad)
ja
push
cmp
inc
clc
int
add
icebp
or
jecxz
sti
mov
fs
jae
xchg
and
ret
and
add
push
or
fldenv
cmp
cmp
cmp
add
(bad)
push
pop
sbb
add
out
sub
xor
mov
adc
add
add
push
cmp
shl
lods
jnp
xlat
ds
pop
test
pop
sub
mov
or
push
or
add
fbld
inc
pop
inc
retf
dec
sbb
or
mov
mov
aas
jge
mov
dec
es
jge
xor
or
push
sbb
xchg
jmp
es
pop
lds
adc
fstp
rol
sub
mov
pop
ret
lahf
xor
rcr
nop
dec
loope
push
repnz
ficom
sbb
rol
in
add
add
aas
jp
jp
jns
mov
xor
mov
and
or
and
ss
add
add
jge
scas
pop
xor
adc
fmul
push
shr
push
ins
lods
test
cwde
nop
ins
mov
xchg
add
push
stc
call
dec
xor
movs
inc
int3
cmp
xchg
push
jnp
xor
mov
sbb
mov
xor
cmps
hlt
adc
sub
arpl
xchg
jo
sbb
jmp
dec
movs
aam
fsubrp
push
mov
ins
or
and
dec
aam
push
(bad)
outs
das
adc
mov
sti
pop
adc
ins
loope
das
mov
or
ja
pop
cmp
cmpps
jmp
pop
cmp
les
push
jno
or
add
mov
cmc
fadd
jl
adc
mov
lock
test
cmp
inc
cmc
adc
(bad)
sbb
xchg
ret
test
int
pop
bound
jns
xchg
mov
sub
aaa
nop
add
sub
sub
pop
inc
pop
ds
mov
fs
test
fs
push
inc
leave
adc
xor
inc
inc
add
pop
scas
in
je
jl
xchg
mov
jo
adc
jo
(bad)
ret
dec
test
jb
add
sub
and
push
add
or
test
mov
adc
inc
mov
inc
or
or
sub
jp
jno
sub
mov
inc
push
dec
push
mov
sub
lea
sub
xor
ret
mov
dec
in
jmp
or
lahf
(bad)
aam
sub
sbb
cmp
and
dec
arpl
dec
aas
jne
loop
mov
xchg
iret
in
push
bound
push
add
inc
inc
aaa
mov
jb
cdq
jmp
cmp
(bad)
pop
lock
or
sub
inc
or
daa
cmp
jno
adc
fadd
push
aam
xor
lock
clc
dec
loop
les
stc
int3
dec
movs
push
adc
sub
adc
jbe
lock
inc
cmp
or
mov
pop
hlt
bound
out
sub
iret
cmp
adc
sbb
nop
fwait
icebp
in
inc
jns
lock
jecxz
sbb
xchg
adc
jg
xchg
pop
ficom
dec
mov
dec
or
adc
ror
pop
cli
add
push
or
adc
mov
lods
or
xor
add
and
sbb
icebp
adc
nop
mov
mov
push
adc
pop
mov
adc
add
retf
cmp
lods
cmp
add
jle
adc
push
popf
or
je
push
(bad)
add
pop
ss
aaa
and
mov
popa
dec
jl
sbb
mov
pop
add
and
hlt
and
mov
or
retf
movs
or
fcmovbe
xor
add
push
jge
sub
rol
sbb
xor
or
and
and
nop
mov
add
test
cmp
push
or
mov
mul
and
mov
test
pop
call
les
sbb
ret
mov
and
xor
and
pop
icebp
popa
in
xchg
sbb
jmp
es
or
xchg
out
test
jecxz
mov
mov
dec
jecxz
pop
shl
sbb
xlat
sub
clc
fadd
push
loop
push
iret
mov
ret
xor
pop
pop
(bad)
adc
pop
mov
adc
sub
pushf
cmps
push
je
sbb
ret
loopne
mov
push
inc
push
dec
(bad)
xchg
icebp
mov
dec
(bad)
jmp
xor
pop
loope
je
jp
sbb
sbb
mov
sub
add
cmps
sti
adc
je
xor
xchg
or
lea
mov
scas
mov
aaa
fsub
jmp
cmp
es
xchg
jmp
(bad)
sbb
mov
jmp
mov
fwait
cmp
rcl
adc
pushf
sbb
add
dec
(bad)
sahf
mov
push
jo
enter
mov
pop
jo
pusha
popa
(bad)
int
or
mov
mov
dec
push
xor
loope
add
nop
push
push
leave
mov
popa
movs
jge
xchg
das
xor
adc
add
jne
or
jmp
or
add
add
sbb
or
pop
test
not
pop
dec
cmp
nop
push
mov
push
mov
xchg
outs
cs
fs
or
sbb
xor
dec
pop
dec
cmps
cmp
les
int3
aam
fcom
call
push
pop
cs
sbb
cmp
mov
add
leave
ins
icebp
or
and
inc
fild
fs
mov
mov
and
xchg
in
pop
test
add
fwait
pop
leave
mov
mov
scas
mov
idiv
test
in
lods
xor
xchg
mov
cmp
adc
call
sbb
and
jmp
jnp
inc
inc
enter
jae
sub
sub
push
mov
lods
mov
jae
mov
lahf
fldcw
aam
add
push
mov
push
(bad)
add
cli
and
dec
mov
sbb
or
fisubr
and
cmp
cwde
xor
sbb
outs
or
add
mov
add
pop
leave
leave
xor
adc
jns
cmp
fmul
sbb
sbb
and
mov
jl
(bad)
icebp
inc
or
sub
jb
inc
sbb
jecxz
or
or
ja
lahf
push
inc
add
mov
add
mov
pop
adc
ficom
(bad)
xchg
push
int3
out
xchg
fsubr
jne
shl
sbb
mov
mov
add
xchg
jb
or
mov
fs
sub
enter
mov
dec
dec
or
push
inc
mov
ja
push
aaa
lea
xchg
out
cs
sbb
push
push
cmp
shl
push
call
push
mov
pop
dec
and
push
repz
add
push
inc
and
and
shr
push
in
adc
inc
adc
xor
pop
xor
mov
push
sub
push
jo
cmp
add
hlt
js
inc
jl
ins
sbb
push
push
or
cmp
push
es
les
sub
lods
ret
and
scas
stos
jbe
call
int
and
dec
adc
adc
add
dec
jl
add
dec
adc
mov
inc
push
mov
push
push
push
pop
push
dec
add
sbb
pop
and
movs
das
mov
and
add
jecxz
inc
xor
xchg
mov
inc
mov
push
adc
(bad)
add
loope
data16
xor
jnp
push
ins
cld
push
mov
imul
shl
push
pushf
data16
fldcw
dec
sub
pop
shr
xor
pop
(bad)
sub
pop
lods
inc
adc
mov
dec
dec
pop
inc
mov
xor
mov
mov
mov
add
dec
ret
retf
mov
sti
push
cmp
js
outs
mov
and
cwde
mov
or
ja
pop
dec
xlat
adc
pop
das
fwait
mov
push
or
sar
rcl
mov
jbe
mov
movs
or
inc
push
push
xchg
movs
jmp
push
dec
cmp
out
push
cmp
sbb
inc
in
push
xchg
push
fadd
(bad)
inc
fstp
add
ret
xor
mov
or
jns
int3
add
mov
mov
loope
and
push
std
cmc
xor
push
push
sahf
push
cvtps2pd
add
lea
in
shl
ret
ins
cwde
nop
test
pop
xor
test
add
adc
add
cmp
push
ins
inc
fnstenv
and
hlt
mov
call
ins
inc
add
push
jae
sub
fstp
int3
movs
cmp
add
mov
leave
mov
or
push
dec
xor
dec
(bad)
adc
add
daa
inc
sbb
adc
jo
push
push
jae
call
test
push
push
ror
int
ss
pop
inc
push
sbb
push
imul
popa
aam
and
mov
add
sbb
and
add
xchg
mov
xchg
adc
xchg
jecxz
mov
sub
sub
xchg
and
mov
mov
sub
jmp
mov
sbb
jle
sar
add
mov
aam
adc
test
ror
xlat
adc
fmul
aam
xlat
adc
data16
daa
ds
ret
xor
mov
inc
loopne
mov
mov
mov
dec
inc
mov
pop
addr16
pop
(bad)
sub
push
mov
mov
add
sub
ins
fs
jbe
lods
pop
and
stos
adc
xchg
fild
sbb
ror
js
mov
outs
jge
cld
movs
aad
inc
addr16
sbb
sbb
adc
mov
les
pop
movs
leave
mov
retf
movs
movs
mov
aaa
dec
add
fidiv
sbb
cmp
(bad)
jmp
iret
mov
test
adc
xchg
adc
mov
movs
mov
adc
pushf
push
daa
pop
jmp
jmp
mov
cmp
xchg
dec
iret
pop
xor
cwde
call
push
test
xor
pop
dec
lock
sahf
push
ror
cmp
nop
rol
cdq
(bad)
psubusb
jecxz
enter
test
push
lock
test
nop
test
jmp
sub
pop
sbb
mov
nop
rol
or
push
mov
lea
dec
ja
stos
sbb
sbb
les
or
aam
or
fcomp
push
sbb
movs
and
xchg
fdiv
xchg
repnz
(bad)
jle
or
pop
out
adc
scas
mov
push
mov
and
push
push
or
xor
dec
sbb
enter
and
jbe
inc
repnz
sbb
cwde
and
imul
or
add
push
adc
sbb
lds
loope
xchg
and
cwde
or
pop
mov
popa
rol
(bad)
jle
jo
leave
js
dec
push
jo
jmp
xchg
xchg
add
jns
add
iret
push
nop
test
cmp
push
xchg
in
xor
or
test
xchg
mov
sbb
pop
stos
icebp
cmp
sahf
ins
nop
ja
or
loopne
xchg
repnz
jl
and
sbb
mov
mov
push
cmp
xor
mov
or
and
jg
(bad)
cmp
jo
inc
mov
dec
and
imul
sbb
mov
sbb
imul
lds
(bad)
test
sbb
inc
sub
xchg
outs
mov
jo
mov
inc
push
rol
dec
jo
pop
sbb
xor
add
inc
mov
lahf
aam
mov
push
push
push
push
mov
outs
(bad)
mov
pop
icebp
push
rol
ins
(bad)
or
pop
inc
mov
mov
ror
movs
mov
les
push
sub
cwde
xchg
les
loop
ss
fadd
(bad)
out
jo
lahf
in
or
mov
push
mov
mov
cmc
sub
sbb
pop
sub
arpl
add
xchg
add
inc
or
pop
lods
push
fwait
js
loope
add
sub
stos
addr16
lock
and
es
pop
loope
out
xor
mov
add
ret
call
xchg
fdivr
inc
call
jp
je
nop
add
xchg
dec
xor
pop
test
aam
or
movs
outs
sbb
sbb
and
and
sbb
sbb
nop
pop
add
xor
sbb
and
nop
out
in
add
nop
sub
sbb
xchg
sbb
pcmpgtb
push
stc
pop
dec
sbb
dec
sbb
push
sbb
sbb
sbb
aas
mov
sbb
add
sbb
sbb
xchg
jae
arpl
or
mov
out
popf
ins
movs
popf
jmp
retf
adc
mov
and
dec
sbb
sbb
mov
dec
(bad)
cmc
or
pop
push
shl
lods
or
lea
or
push
mov
push
mov
sub
fidivr
sbb
or
inc
adc
nop
mov
and
sbb
sbb
pop
pop
sbb
inc
xor
mov
in
push
aas
cs
mov
fcomp
sete
pop
and
and
adc
test
shl
ins
push
add
sub
inc
pop
or
sbb
cmps
icebp
adc
adc
sub
in
xchg
push
or
dec
mov
rcl
out
sahf
xchg
push
test
stc
dec
mov
cwde
push
nop
out
sahf
test
push
jns
in
xchg
push
test
dec
push
or
hlt
and
pop
sbb
inc
xor
(bad)
sub
push
sub
pop
dec
jecxz
rcl
mov
nop
dec
or
pop
mov
mov
call
jns
pop
es
mov
push
xor
ror
fcomp
sub
ror
mov
add
inc
mov
mov
mov
test
shl
ud1
(bad)
fld
sub
sbb
into
mov
dec
ins
repnz
fstp
add
or
dec
pop
adc
add
popf
popf
cmc
and
dec
mov
in
pop
inc
sub
sbb
sub
xchg
push
adc
mov
push
jno
mov
inc
xor
mov
dec
mov
mov
popf
cmps
inc
imul
call
div
push
xor
pop
cwde
pop
imul
or
in
mov
popf
mov
lar
xor
mov
inc
dec
push
inc
test
lods
cwde
inc
mov
dec
mov
or
je
cmp
cmp
jl
cmp
dec
cwde
push
push
rcl
add
nop
leave
inc
sbb
sub
mov
dec
adc
add
int
daa
push
das
mov
pop
and
inc
xor
(bad)
ret
lea
mov
repnz
nop
inc
add
(bad)
ja
xor
cmps
push
cmp
mov
push
dec
lahf
jo
inc
sahf
add
push
or
sub
repnz
sbb
and
inc
add
mov
xchg
dec
mov
or
inc
mov
or
add
inc
shl
idiv
outs
cdq
mov
inc
push
rcl
mov
inc
mov
daa
mov
dec
inc
xor
(bad)
hlt
stos
sub
stos
imul
push
dec
sub
ret
hlt
xor
sbb
mov
stos
cmps
mov
test
add
jg
xor
(bad)
push
mov
or
and
inc
and
lods
sbb
daa
sbb
xor
pop
repnz
push
sbb
xchg
pushf
mov
sbb
dec
adc
xor
sbb
dec
sbb
dec
push
in
sbb
fs
sbb
ins
pushf
inc
mov
lods
scas
repnz
arpl
xchg
inc
pop
mov
jns
mov
nop
sbb
mov
dec
inc
sbb
push
xchg
xchg
ror
shl
or
imul
je
sbb
cmp
push
ins
mov
stc
xchg
(bad)
fiadd
push
in
push
ror
fmul
add
clc
inc
call
pop
xor
cmp
aaa
stos
xchg
stos
jmp
push
ret
adc
and
dec
pop
and
cmp
cs
enter
add
sub
push
addr16
pusha
push
inc
aam
outs
stc
fdivr
out
add
jmp
jns
xchg
push
outs
sbb
pop
or
add
icebp
es
loope
pushf
xor
fdiv
imul
in
push
jge
dec
push
mov
clc
mov
xor
cmc
in
mov
xchg
and
jnp
dec
repnz
popa
push
mov
push
add
and
movs
or
imul
cmp
aam
das
push
mov
div
mov
adc
pop
cmps
xchg
fdiv
push
mov
push
cs
adc
(bad)
pop
dec
mov
push
or
shl
pop
sti
mov
jnp
dec
cmp
aad
xor
pop
xlat
inc
push
stos
call
push
sub
enter
and
pop
cwde
stos
mov
hlt
es
xor
leave
push
or
xor
mul
xor
jecxz
inc
push
(bad)
in
or
pop
lods
sub
mov
mov
add
jmp
retf
pop
outs
ja
adc
aas
clc
ss
push
push
mov
mov
xchg
push
stc
sbb
sti
je
mov
nop
jmp
pusha
adc
(bad)
and
imul
pop
or
sub
jl
lea
adc
mov
xlat
add
int
push
inc
xor
jmp
leave
mov
leave
nop
mov
cmp
mov
rcl
fisttp
sbb
pusha
stos
enter
fisubr
daa
mov
dec
std
or
xor
jmp
cmp
mov
cmp
inc
fdiv
or
aad
cmp
icebp
add
sub
mov
lea
aaa
and
pop
dec
leave
test
dec
jecxz
and
and
mov
cdq
scas
dec
cmp
call
dec
jmp
push
wbinvd
xchg
sub
xchg
sbb
ror
sbb
inc
adc
aaa
test
mov
jmp
add
cmp
rcl
or
adc
mov
mov
and
inc
xchg
and
sbb
mov
push
dec
mov
lahf
or
clc
cmp
shr
sub
popa
cmp
fs
fadd
inc
popa
mov
scas
mov
ror
push
push
inc
add
inc
ffreep
test
jge
(bad)
jle
ins
shr
and
fldcw
xor
test
js
pop
dec
aas
daa
add
imul
push
pusha
adc
mov
fisubr
sbb
push
clc
(bad)
sub
repz
inc
dec
push
push
sbb
add
add
push
xor
neg
cmps
lods
or
pop
push
cmp
add
and
jmp
cmp
cmp
in
int
in
sbb
pop
popa
imul
nop
push
pop
dec
jb
movs
or
dec
jo
rol
jg
sbb
jbe
push
and
add
xchg
scas
test
push
sar
lods
hlt
hlt
cmp
retf
cmp
cld
adc
call
fwait
lods
pop
not
adc
add
es
xor
jne
cmp
shl
jbe
mov
push
call
pop
mov
push
jmp
iret
sub
push
repnz
pushf
dec
adc
sbb
xchg
fnsave
sbb
sbb
lods
mov
mov
jb
sub
outs
test
jne
pop
push
inc
adc
sub
push
add
mov
xlat
or
ss
(bad)
xchg
inc
push
sbb
sub
les
sbb
or
mov
popa
mov
jne
outs
leave
jnp
mov
es
in
mov
jge
pop
rol
adc
or
test
add
jge
or
mov
sub
daa
call
in
fld
shl
mov
add
push
ins
fimul
shl
fld
imul
ret
aas
and
jl
inc
leave
mov
mov
and
dec
dec
movs
popf
jle
push
in
pop
cmp
das
jecxz
ret
pop
inc
in
and
adc
es
fs
lods
and
cmp
leave
push
pop
imul
cmp
xchg
(bad)
shl
push
lods
test
popa
xor
pop
inc
ret
mov
adc
adc
ins
in
aas
pop
pushf
ins
xchg
(bad)
xchg
dec
sub
mov
push
ins
or
das
repz
dec
add
js
pusha
jb
inc
js
pushf
adc
outs
loopne
inc
enter
test
movs
or
sbb
adc
(bad)
and
sub
in
inc
inc
rcr
cmp
movs
fadd
mov
sub
xchg
sbb
ins
pop
adc
dec
je
or
add
dec
sub
dec
arpl
mov
lods
and
add
nop
push
dec
into
ror
aas
iret
das
push
push
and
jecxz
adc
js
into
and
inc
xchg
fld
loope
mov
cmc
add
push
inc
mov
loopne
push
inc
clc
in
dec
add
aam
xchg
and
xchg
je
mov
mov
xchg
js
imul
push
mov
and
push
inc
add
inc
sub
dec
push
jl
sub
movs
inc
mov
sub
rcl
mov
pushf
or
aad
pop
sub
adc
xchg
and
fimul
sub
mov
dec
jle
jno
xor
mov
add
add
sbb
inc
or
nop
adc
enter
and
mov
mov
xor
loopne
push
cmp
push
outs
call
das
inc
or
cmps
test
ins
fldenv
inc
adc
push
ds
add
push
inc
icebp
and
and
pop
add
loope
test
xor
test
lds
je
outs
out
xchg
pop
cmp
or
and
daa
cmp
mov
mov
ret
shl
cmp
shl
out
rol
push
adc
popa
test
and
fild
sub
test
sub
fst
or
loopne
neg
adc
mov
push
nop
test
fs
or
xor
inc
(bad)
fdivr
ret
dec
inc
outs
and
add
sub
lock
leave
cmp
push
inc
sub
sub
inc
sub
mov
lock
in
and
xor
sar
nop
cli
adc
es
mov
push
fdivr
inc
push
jbe
jp
or
lods
mov
(bad)
push
stos
xchg
(bad)
jne
out
pop
out
add
mov
xchg
push
movs
inc
jecxz
xchg
ror
clc
sbb
sbb
adc
add
mul
and
pop
push
ins
jnp
or
sbb
xchg
jg
jge
ins
or
xchg
pop
test
dec
test
lods
pop
push
mov
mov
mov
mov
inc
ins
cmp
data16
add
das
inc
test
sar
inc
dec
(bad)
sbb
stos
or
test
xchg
mov
cwde
test
mov
sub
push
ror
inc
sbb
ret
dec
cmp
mov
cmp
add
ror
mov
xchg
jg
pop
rcl
dec
hlt
or
mov
inc
pop
inc
push
cmp
mov
or
les
mov
sub
fs
js
adc
sub
clc
and
jmp
and
(bad)
pop
dec
aad
outs
xor
sbb
jle
inc
mov
aaa
adc
pop
cmp
hlt
add
adc
xor
add
sub
je
jns
dec
add
pop
aam
add
jmp
cmp
(bad)
sub
xlat
fidiv
rol
dec
nop
sahf
out
out
movs
dec
push
push
push
pop
pusha
xchg
je
push
mov
pop
add
(bad)
fdiv
jl
into
mov
jmp
psllw
push
adc
or
fs
pusha
fild
rcr
test
ins
jl
dec
in
or
cmp
es
imul
fimul
sbb
push
in
das
retf
ds
inc
xlat
fstp
sub
jmp
sbb
daa
popf
push
pusha
add
fcmovbe
inc
dec
cmp
aam
fucomp
add
dec
and
or
dec
pusha
dec
jmp
shr
cmc
sti
shr
lea
inc
sub
mov
push
push
ds
push
adc
pop
push
ds
mov
ret
cmp
sbb
and
sbb
push
sub
add
pop
mov
lea
add
lods
xchg
outs
add
and
mov
add
and
mov
mov
packuswb
jbe
cmps
and
jg
dec
mov
sbb
mov
and
mov
add
pusha
cwde
cmp
dec
or
push
push
xlat
push
bound
push
or
mov
dec
pop
mov
mov
xchg
sbb
adc
xor
jns
test
mov
dec
cmp
push
pop
xor
fcom
sub
mov
jle
push
xchg
not
ficom
mov
imul
add
imul
cmp
add
pop
enter
rol
sahf
cdq
clc
jp
and
jle
mov
jne
je
fsubr
ret
clc
cwde
or
mov
es
cmp
jecxz
mov
(bad)
lods
push
stos
jnp
mov
cmc
push
es
push
cmp
sbb
lahf
dec
push
and
add
imul
jne
jne
into
cmp
jae
mov
mov
add
mov
push
xchg
sbb
adc
mov
sub
cli
push
or
in
scas
shl
call
rol
out
jo
inc
pop
mov
mov
push
push
mov
test
shl
jg
mov
xor
and
cs
test
push
push
add
repnz
xchg
inc
ret
pop
xchg
aad
mov
rcl
add
loop
mov
sub
inc
iret
dec
pop
push
pop
mov
xlat
pop
or
out
inc
les
inc
dec
and
jne
xor
add
pop
jnp
add
int3
sahf
mov
cmp
xor
rcr
lock
sub
adc
loopne
mov
mov
push
shr
sbb
sub
scas
push
add
xchg
aam
in
fiadd
add
sub
nop
je
(bad)
aam
maxps
sub
adc
sbb
sub
cwde
sub
push
jne
xchg
xchg
popf
int
movs
dec
mov
cmps
add
push
xor
les
movs
pop
jb
add
pop
or
dec
adc
dec
call
adc
test
cwde
push
clc
call
mov
rcl
cmp
ret
nop
fisttp
cmp
jb
test
aam
push
xor
push
jns
xchg
jle
push
dec
sbb
add
push
shl
and
sub
fld
add
sbb
inc
jmp
pop
int3
pusha
sbb
and
push
sbb
cmp
push
out
cmp
cmp
sbb
retf
jge
movs
adc
movs
jge
in
outs
pop
push
xchg
push
xchg
inc
or
repz
pusha
out
adc
loopne
fbld
loopne
mov
in
cmp
jbe
mov
sub
push
xor
in
pop
xchg
in
call
xchg
add
outs
push
shl
and
jmp
adc
(bad)
mov
test
cmp
fisttp
cmp
push
pop
das
ret
rol
ins
push
call
dec
sbb
gs
loope
push
xor
pop
push
mov
add
je
pop
js
and
and
push
push
dec
and
or
pop
add
sti
pop
add
je
les
pop
pop
je
dec
jne
dec
scas
jmp
outs
out
dec
push
fisub
or
mov
repnz
pusha
(bad)
stos
xchg
pop
or
xchg
das
mov
push
sub
adc
fs
mov
lahf
rol
or
mov
(bad)
pop
add
adc
adc
add
mov
(bad)
dec
(bad)
loope
ss
and
jl
or
mov
shl
or
xlat
pushf
in
xchg
add
nop
and
mov
(bad)
nop
jbe
test
mov
shr
les
enter
dec
dec
cmc
popf
popf
xchg
call
nop
xor
mov
fild
sub
call
js
pop
xchg
adc
rcl
dec
xor
mov
fs
adc
or
mov
mov
xchg
or
mov
mov
inc
dec
push
and
inc
fs
fwait
add
leave
fwait
dec
sub
aam
test
aam
dec
in
xor
inc
enter
xor
aam
std
push
daa
mov
clc
inc
sub
cmp
ins
or
or
cmps
and
sbb
push
xor
dec
leave
clc
addr16
rcr
lea
jne
in
rcr
clc
inc
jg
push
adc
adc
jo
clc
pop
shl
clc
sub
call
add
inc
(bad)
inc
movs
or
mov
(bad)
dec
aaa
or
mov
out
clc
push
cdq
adc
in
(bad)
in
lock
call
xor
(bad)
dec
in
dec
enter
push
cmp
xchg
xchg
enter
loopne
or
lds
mov
sar
lods
push
adc
(bad)
(bad)
sbb
sub
adc
sub
ret
sub
dec
imul
push
and
mov
aas
push
or
sub
inc
test
push
or
imul
js
in
and
add
and
es
mov
ins
or
adc
sub
jl
ret
ja
rcr
rol
(bad)
or
enter
movq
jne
xor
inc
cld
les
xchg
ds
aas
mov
fldcw
mov
xchg
lock
push
pushf
rol
xchg
xchg
mov
shr
test
add
add
ret
mov
ror
ficom
pop
adc
push
mov
cld
pushf
add
mov
or
cmp
xchg
inc
test
mov
jno
fcom
sbb
clc
xchg
in
popa
call
fwait
ins
adc
or
inc
pop
cmp
sbb
add
jp
popf
push
push
add
ror
dec
jecxz
inc
mov
fisubr
je
pushf
setbe
mov
lds
jb
sbb
sbb
or
xchg
inc
or
push
add
add
ja
push
xchg
adc
sub
in
adc
imul
and
retf
mov
sub
movs
push
mov
das
mov
sub
sbb
cmp
dec
adc
push
stos
or
add
dec
or
call
pop
or
xchg
fs
sub
xchg
mov
and
sub
in
gs
cmp
cmc
das
adc
mov
dec
sbb
out
(bad)
jno
daa
cwde
push
xchg
mov
pop
and
xchg
adc
xor
je
adc
lahf
cli
fimul
mov
jl
fimul
mov
xor
mov
push
mov
adc
test
add
fsubp
add
or
jno
sbb
lods
jb
fs
push
ret
pop
cmps
xor
sbb
mov
push
push
xor
mov
and
ret
add
retf
jb
sbb
push
xor
jecxz
inc
add
ror
lock
sbb
iret
jmp
pop
aaa
pop
ret
jmp
test
mov
xor
add
dec
xchg
add
movs
add
push
mov
lock
mov
and
nop
int
inc
fucomip
sub
lock
cmp
stos
and
jo
in
xor
sar
dec
mov
adc
ins
fld
shl
sbb
pushf
bound
and
sub
dec
arpl
call
sbb
sar
xor
aas
jmp
jge
fnstsw
and
xor
stos
cmp
or
shl
xchg
sahf
dec
(bad)
sub
sub
cwde
lea
imul
add
cmp
popf
add
out
cmp
psrld
inc
or
lock
jg
add
inc
mov
movs
(bad)
mov
pop
cmp
cmp
add
sbb
idiv
push
cmp
inc
sub
and
adc
je
pusha
pop
nop
mov
add
or
pop
push
inc
push
pop
fs
jno
jle
movs
inc
fcom
add
(bad)
xor
sti
aas
or
(bad)
out
(bad)
and
(bad)
cwde
or
jne
adc
lock
add
xchg
inc
xchg
or
call
sub
jl
dec
adc
inc
js
stc
inc
or
(bad)
fs
mov
pusha
pop
or
ins
and
xor
sub
xlat
sbb
fimul
rcl
or
outs
or
and
mov
dec
push
push
add
ins
sub
or
sbb
les
cmp
adc
jae
add
mov
adc
or
dec
sbb
cmp
ins
mov
es
fistp
xchg
(bad)
and
dec
push
xchg
mov
movs
jmp
or
dec
push
imul
and
sbb
add
inc
sbb
int3
ss
es
sub
dec
clc
xchg
in
cmp
push
pop
mov
and
xchg
out
xchg
inc
ds
jo
push
jl
xor
imul
jae
dec
add
add
mov
jnp
inc
call
retf
and
mov
jae
pusha
jne
(bad)
retf
adc
push
dec
ins
mov
dec
shl
sub
xchg
in
rol
sub
or
jo
or
test
pop
cdq
sub
dec
inc
push
or
add
and
ins
cmp
mov
dec
sub
xor
add
js
mov
(bad)
and
push
outs
loopne
mov
jg
push
pop
dec
or
adc
xchg
push
ins
fs
pop
pop
js
fcom
cwde
inc
add
in
clc
xor
jl
xor
movs
mov
push
or
add
xor
adc
cmp
xor
js
mov
or
push
test
xor
hlt
push
test
pop
call
add
stos
pop
int3
add
(bad)
and
sub
daa
pop
loopne
sub
cmp
lods
cmp
and
mov
loope
lods
xchg
cmp
and
adc
dec
cmp
xor
mov
pop
pusha
aam
pop
cs
add
retf
out
inc
sub
xchg
sbb
push
push
pushf
adc
sbb
test
test
inc
dec
xchg
push
cmps
pop
(bad)
cmps
xlat
nop
xchg
(bad)
pop
int
push
dec
loope
call
xlat
add
xchg
push
push
dec
ret
fsub
pop
mov
int3
pusha
jo
dec
in
lds
int
(bad)
or
popf
retf
pop
inc
add
test
or
pop
add
movs
mov
test
mov
ins
lea
xor
push
adc
xor
jg
js
mov
arpl
xchg
push
ret
vmread
repnz
push
add
mov
xor
mov
mov
push
jnp
add
or
jno
cmp
js
dec
or
dec
lea
pop
je
outs
es
jbe
sbb
nop
xor
rdtsc
inc
jbe
adc
ins
and
push
inc
jo
nop
lea
dec
mov
pop
add
loopne
lods
inc
fwait
test
adc
jbe
mov
cmp
(bad)
fst
inc
loopne
sub
loopne
mov
xor
push
jmp
pop
or
push
dec
inc
aad
add
out
mov
mov
call
inc
mov
jmp
(bad)
push
call
mov
xchg
mov
cmp
adc
retf
mov
and
sbb
cwde
pushf
repz
ds
aam
test
rcl
xchg
inc
jne
mov
pop
test
jbe
jne
sub
add
add
fsub
pop
or
cmc
mov
mov
pop
dec
mov
ss
and
enter
inc
adc
ret
cli
jmp
(bad)
dec
inc
pop
mov
rcl
push
inc
jne
adc
jae
hlt
sub
mov
mov
add
push
sub
call
repnz
lods
add
jecxz
in
mov
or
push
push
push
adc
pop
nop
cmp
mov
or
test
add
test
jl
jl
mov
sbb
or
fcomp
dec
adc
inc
les
je
or
cmp
daa
push
push
imul
mov
adc
shr
mov
inc
js
sbb
pop
and
push
lock
in
jne
(bad)
sbb
dec
add
test
push
dec
(bad)
adc
push
push
adc
inc
rol
loope
or
push
ret
bound
rcl
stos
je
mov
arpl
ins
push
imul
dec
xchg
jae
and
bound
push
xchg
mov
pop
xor
popf
xchg
cmps
inc
mov
fcom
aam
fwait
xchg
add
shr
sub
repz
xchg
push
jg
push
call
js
(bad)
jne
ins
dec
cmps
nop
mov
push
pusha
outs
xor
in
or
lock
aas
push
sbb
jg
inc
xchg
mov
das
out
xchg
int3
adc
sbb
add
lock
jae
jg
add
inc
push
inc
xor
nop
push
loopne
movs
ret
aaa
jp
retf
cmp
push
ins
xor
mov
dec
sub
dec
int
movs
push
xlat
push
push
xchg
xchg
into
shl
add
add
in
cmp
push
scas
push
dec
cmc
add
xchg
jg
test
lea
and
sbb
aam
fs
xchg
cmp
cwde
shl
cld
test
xor
push
lock
push
pusha
cmp
add
ins
and
pop
sbb
jne
es
push
inc
xor
sbb
xor
mov
inc
or
xor
clc
fs
sbb
sbb
jb
push
enter
push
cmp
mov
cmp
dec
aam
rcl
mov
jg
xchg
outs
cs
jl
icebp
push
clc
mov
mov
in
lsl
mov
pop
mov
fidivr
mov
and
dec
xor
push
sar
inc
jmp
add
jl
mov
push
cmc
xchg
lods
sar
mov
stc
fnstsw
xor
pop
lsl
ss
mov
push
or
mov
movs
jmp
or
add
add
ja
or
mov
pop
pop
retf
or
add
mov
fsubr
fstp
xchg
add
mov
and
pushf
dec
cld
push
jle
outs
ret
jge
mov
std
or
or
xor
mov
xor
adc
mov
dec
cwde
std
inc
dec
jbe
inc
pop
mov
mov
sub
add
sub
xchg
push
mov
pusha
inc
add
retf
adc
add
lahf
ins
test
inc
inc
nop
nop
fnstenv
int3
sub
mov
xchg
add
out
out
lds
lods
enter
cli
or
mov
ror
add
pop
dec
retf
push
xchg
pop
jge
add
xor
fadd
mov
je
aaa
adc
push
push
ds
in
jnp
jge
pop
fcom
fidiv
jb
add
jl
in
mov
inc
sar
jle
lock
add
xchg
iret
push
add
jmp
pushf
test
mov
aaa
adc
cs
jl
mov
mov
mov
les
push
add
push
mov
and
jmp
jmp
xchg
aas
or
add
add
pop
sbb
adc
dec
enter
xor
push
inc
jb
dec
pop
cmp
cmp
pop
leave
push
cmp
cmp
cmp
xchg
sbb
loop
je
mov
sti
xor
push
dec
lods
sbb
call
inc
xchg
cmp
ret
and
stos
and
fistp
(bad)
rcl
inc
mov
push
xor
hlt
cmp
repz
push
add
aaa
cmp
je
pop
ret
stos
or
das
push
mov
sub
mov
mov
mov
mov
cmp
push
bound
xchg
or
xor
xor
nop
inc
(bad)
jmp
movs
mov
add
dec
dec
das
add
mov
sub
xor
or
or
les
call
mov
adc
je
je
mov
jge
adc
scas
xor
jg
cwde
add
ror
dec
dec
and
sti
mov
jo
xor
sub
lds
mov
push
fild
cmp
pop
je
arpl
push
cmps
mov
into
and
cld
out
movs
popf
add
cmp
sbb
std
dec
popa
and
sub
fdiv
sbb
rcl
inc
push
jo
sbb
xor
inc
push
and
push
pop
int
or
xchg
jl
sar
pop
add
adc
cmp
or
arpl
imul
xor
fs
xor
inc
mov
mov
mov
call
jle
loope
sbb
shl
push
pop
xor
xchg
lock
add
pop
sub
sbb
push
push
mov
inc
mov
jmp
cmovne
xor
xchg
sub
lahf
outs
dec
or
xchg
out
ret
or
mov
cmps
mov
es
mov
push
(bad)
pop
lods
repz
xor
inc
pusha
mov
sub
int3
mov
int
mov
pop
xchg
sbb
mov
cmp
inc
push
and
push
push
adc
add
jmp
dec
pop
aas
cmps
and
inc
daa
bound
add
push
xor
sti
push
pusha
adc
pop
(bad)
test
dec
mov
cmp
or
or
sub
test
les
sub
inc
mov
pop
inc
lahf
sbb
sub
mov
sbb
inc
mov
inc
neg
lock
adc
ret
inc
cmp
jo
pop
jmp
pop
js
data16
push
sub
fisttp
(bad)
int3
xor
sub
movs
sbb
add
loop
jmp
xchg
inc
push
sbb
(bad)
xlat
movs
push
ficomp
enter
(bad)
push
imul
ja
cdq
(bad)
cmp
test
je
nop
jnp
adc
add
and
xor
xor
dec
mov
dec
add
add
push
and
dec
call
add
add
xor
inc
push
retf
pop
call
je
adc
mov
pop
jno
pusha
int
xor
sub
dec
aad
cdq
cmp
or
rcl
xchg
ja
(bad)
es
xor
(bad)
sub
sahf
dec
loope
xor
enter
mov
pushf
jle
mov
add
pushf
inc
es
fwait
mov
xor
mov
lahf
cmps
shr
iret
(bad)
fisub
pop
ret
test
enter
int3
addr16
ror
stos
in
sbb
rol
adc
ret
fwait
sub
adc
jmp
idiv
push
call
sar
sbb
das
in
cdq
push
sbb
sar
in
in
or
fisttp
dec
sbb
lahf
jno
cld
test
inc
sbb
add
inc
pop
sbb
add
sbb
js
pop
pop
add
test
jmp
adc
inc
sbb
jg
sbb
push
test
or
xor
push
add
or
jmp
nop
mov
loop
adc
pop
pushw
mov
shl
xlat
pushf
xchg
mov
inc
fsubr
aam
es
mov
gs
enter
mov
xchg
aas
sahf
sub
push
lea
aam
les
xor
repnz
mov
mov
in
xor
sub
movs
xchg
mov
(bad)
repz
mov
(bad)
push
js
sbb
xchg
sahf
inc
and
js
shl
inc
inc
mov
pop
sub
pop
or
mov
push
push
and
and
syscall
movs
sub
lea
push
add
mov
aaa
or
bound
add
(bad)
xchg
sbb
inc
or
fwait
(bad)
es
cmc
cmp
sbb
and
add
ds
pop
or
mov
and
add
inc
in
loop
ret
adc
push
ss
sub
js
fcom
lock
inc
test
pop
test
jae
mov
shl
pop
dec
je
mov
movaps
push
add
dec
pop
and
loopne
xchg
stc
(bad)
scas
cmp
mov
xchg
or
sub
mov
add
dec
pop
cmp
add
adc
cmp
or
sub
int
adc
push
je
leave
cs
mov
div
sub
jmp
mov
es
inc
push
jp
push
pop
or
push
stos
pusha
or
push
ss
xchg
out
in
je
push
xchg
mov
add
ficom
pusha
shr
cmp
sbb
(bad)
fdivr
add
ret
clc
or
(bad)
push
repnz
push
(bad)
adc
or
mov
inc
das
jno
icebp
addr16
loop
ins
jno
bound
inc
add
sbb
js
mov
stos
fs
fsub
mov
dec
in
cmp
push
int
adc
or
push
or
jl
dec
movs
jg
or
and
add
push
add
setl
cmp
repz
mov
xchg
shr
inc
mov
into
sbb
jle
dec
loope
sar
sub
push
test
or
and
test
mov
cdq
pusha
xor
mov
addr16
adc
push
jl
jp
and
mov
mov
sub
cs
repnz
cwde
dec
pushf
or
add
push
jecxz
outs
movs
or
xor
mov
data16
adc
js
mov
pop
imul
pusha
and
xchg
push
pop
mov
test
pop
push
ins
push
cli
add
adc
push
dec
and
and
xchg
sbb
jbe
mov
popa
loop
sub
or
(bad)
mul
mov
ja
fild
mov
jnp
cmps
add
add
ret
int3
out
lods
mov
mov
pop
add
cmp
inc
retf
inc
adc
mov
pop
sub
or
sbb
add
aaa
fcom
sti
dec
out
ins
mov
push
push
jb
clc
fcom
nop
push
cmp
mov
shr
add
dec
or
add
add
mov
dec
ins
inc
adc
cmps
js
test
test
push
push
and
aam
inc
or
int3
xor
mov
pop
bound
js
and
and
mov
int3
or
add
ss
or
adc
adc
jg
mov
jns
push
hlt
in
nop
mov
and
or
mov
pop
xchg
sub
sti
cli
in
mov
sbb
rcl
cmp
sti
nop
add
cli
cdq
sbb
cli
shl
movs
shl
enter
mov
and
outs
cld
jno
xor
fs
cmp
fs
xchg
retf
setl
inc
mov
pushf
pushf
nop
push
push
in
popf
shl
js
lods
mov
cmps
rcr
int3
clc
dec
dec
repnz
sahf
mov
and
xor
hlt
fadd
test
cld
or
push
or
fwait
sbb
pop
mov
inc
push
mov
imul
cs
xchg
lock
in
retf
(bad)
loopne
push
sub
sub
jle
lock
sub
xchg
loopne
aam
cld
test
rol
in
sbb
hlt
in
lock
xchg
add
hlt
fsubr
loopne
xor
inc
repnz
cmp
fcom
add
sti
cli
leave
movs
dec
inc
jle
sbb
adc
sar
and
cld
cld
aam
add
in
fs
cld
add
nop
mov
cmps
mov
xchg
cld
scas
fs
jle
push
es
mov
cmp
call
jns
mov
nop
daa
sbb
sbb
cmp
fcom
push
sbb
push
xor
mov
test
ror
int3
enter
dec
mov
or
add
arpl
pushf
pop
(bad)
rol
jg
rcr
add
or
mov
xchg
or
nop
in
xor
mov
sbb
pop
add
aam
inc
sahf
sub
mov
push
add
lahf
pop
int3
mov
fmul
inc
add
add
jl
add
(bad)
mov
sbb
test
dec
xchg
push
inc
ret
bound
sbb
jne
das
mov
adc
cmps
not
adc
(bad)
mov
leave
and
test
jg
mov
out
ror
jb
shr
js
mov
xor
out
into
push
adc
add
push
push
sbb
or
sub
xor
push
pop
pop
fadd
xchg
seto
mov
mov
mov
mov
sbb
xchg
push
inc
mov
ret
dec
mov
ins
cmp
jecxz
xchg
mul
push
or
push
pop
fldenv
add
add
rcl
add
or
lods
call
xchg
in
jmp
ja
or
push
or
sbb
pusha
cmps
lea
cmc
pop
jno
add
xor
jbe
adc
inc
add
or
push
mov
xchg
adc
pop
dec
fisttp
push
xchg
sub
add
pushf
push
sub
adc
sar
ins
sub
add
out
adc
sbb
in
cmp
xchg
cmp
and
pop
jo
pop
dec
xchg
adc
dec
jb
and
inc
ror
xchg
pop
mov
xchg
pop
pop
pop
pop
popf
retfw
jae
pop
xchg
xchg
into
movs
or
mov
push
js
daa
xchg
pop
cli
add
mov
cmp
pop
test
or
and
and
test
loop
cmp
xchg
inc
xchg
adc
push
test
add
movs
movs
add
cmp
dec
shl
mov
fwait
xchg
mov
lock
ja
cmp
rol
enter
push
xor
add
sbb
and
loopne
push
and
ror
or
adc
stos
pusha
or
cmc
mov
ret
jg
mov
ss
ins
sub
dec
cmp
pop
xor
stos
lahf
(bad)
in
dec
bound
xor
mov
or
cmp
add
cld
test
xchg
rcl
jno
fidivr
jle
ins
leave
das
mov
push
enter
mov
inc
add
inc
leave
add
mov
fs
push
pop
adc
mov
pop
movs
sbb
cmc
adc
xchg
retf
push
add
inc
enter
sbb
cmc
xor
test
add
xor
sbb
sbb
pop
xor
adc
in
sub
mov
sub
cmp
mov
imul
cmp
add
or
add
pushf
mov
out
shl
cwde
jl
mov
enter
in
or
or
and
and
and
xchg
and
adc
add
sbb
test
aad
xor
xor
pop
mov
mov
dec
sbb
enter
ret
xchg
retf
mov
dec
test
aas
fld
fldenv
inc
push
ror
out
jnp
push
ds
jo
push
sub
xchg
or
ret
rol
pusha
push
dec
sub
and
inc
jle
or
xor
repnz
jne
inc
add
lea
jnp
add
push
(bad)
lods
xor
stc
pop
cmp
int3
(bad)
aad
sbb
and
leave
das
mov
mov
js
cmp
loop
pusha
and
jle
mov
ret
mov
cmp
or
dec
jg
mov
pop
ror
xchg
add
rcr
xchg
inc
outs
test
mov
push
push
loop
sbb
pop
fist
inc
mov
sub
pop
call
jl
enter
push
mov
add
xor
xchg
cwde
sub
jge
retf
loop
and
lods
pop
mov
imul
fs
daa
xor
add
jno
mov
push
mov
aas
pop
in
mov
mov
push
adc
sbb
mov
adc
test
or
mov
repz
and
lahf
push
enter
into
test
jno
push
add
fst
mov
push
outs
arpl
outs
arpl
or
xchg
ins
xor
loope
jno
out
lahf
pop
int
adc
mov
mov
std
or
mov
pushf
xchg
lar
sub
xchg
test
sub
sub
pop
push
popa
pop
xor
pop
push
inc
inc
add
xchg
outs
jp
sbb
and
add
jno
sbb
dec
mov
adc
lea
jbe
lods
xchg
xor
mov
cmps
dec
enter
mov
cs
hlt
sbb
adc
dec
pushf
fidivr
fidiv
add
sub
cmp
adc
mov
dec
pop
xor
add
and
ret
(bad)
add
mov
jo
pop
retf
and
ss
ds
xor
test
leave
lea
popa
inc
pop
lods
loope
popa
sub
xchg
mov
ror
movs
pop
les
pop
or
xor
fucom
(bad)
xchg
sbb
les
pop
in
sbb
in
nop
fisttp
rcl
retf
mov
cmp
or
add
dec
mov
shl
ss
scas
xchg
and
(bad)
and
jg
jmp
add
iret
aam
mov
or
inc
xchg
jbe
jge
mov
and
inc
and
and
push
(bad)
dec
push
push
sbb
ret
jmp
cmp
push
sbb
jbe
retf
inc
adc
imul
out
ss
call
jl
cmp
mov
mov
mov
lahf
inc
ret
sbb
out
ins
ds
push
and
fild
cld
mov
push
adc
add
xchg
dec
dec
clc
cld
or
cmp
or
pop
push
pop
cmp
nop
push
jmp
push
and
out
repnz
mov
cld
pusha
xchg
add
(bad)
rol
out
adc
add
add
dec
ins
repnz
pop
push
push
dec
daa
sbb
or
mov
xor
adc
pop
and
add
dec
inc
dec
dec
sub
add
jmp
jno
and
xor
cld
adc
adc
test
push
adc
sub
mov
inc
rcr
rcr
jmp
std
inc
push
dec
loopne
xor
jge
push
stos
add
loop
sbb
dec
pop
rcl
inc
clc
in
inc
ret
je
ret
jmp
rol
mov
xchg
dec
xor
xor
xchg
or
std
inc
inc
inc
aaa
dec
or
mov
push
leave
scas
imul
mov
mov
adc
adc
ror
mov
pop
iret
jge
mov
int3
lea
fld
mov
adc
add
and
mov
and
xor
pop
sub
push
sbb
fwait
mov
and
(bad)
dec
repnz
cdq
jmp
int
adc
dec
mov
pop
pop
push
mov
std
push
sub
arpl
add
arpl
xor
inc
inc
movs
fcom
adc
retf
xchg
mov
inc
or
cmps
add
add
lea
test
inc
and
test
pop
adc
mov
je
pop
dec
hlt
xchg
sbb
sbb
inc
(bad)
retf
pop
push
mov
(bad)
and
sub
add
cmp
pusha
push
jmp
pop
jo
sub
popa
or
sub
enter
das
sub
dec
sub
cmp
or
mov
dec
push
xchg
inc
rcr
inc
ins
push
add
and
pusha
push
cdq
lods
dec
jo
retf
sar
aas
xchg
jnp
rol
ins
cmp
adc
push
push
fcom
add
or
push
dec
lock
mov
test
ins
sub
dec
cmc
pusha
retf
push
or
lods
mov
or
sbb
cmp
lods
fs
cwde
or
(bad)
and
push
inc
mov
xlat
and
adc
add
nop
sbb
sbb
and
or
mov
dec
xchg
int3
push
or
adc
push
push
in
cdq
adc
cmp
shl
dec
retf
mov
cmps
dec
cwde
adc
aas
int
adc
mov
inc
and
pop
aaa
retf
add
add
lea
adc
dec
retf
cmp
adc
mov
dec
mov
mov
in
in
xchg
add
or
cmp
sbb
and
or
inc
or
mov
imul
and
mov
loope
scas
inc
imul
xor
fldenv
and
retf
and
mov
inc
xor
and
enter
in
push
xchg
in
call
or
call
call
cmp
cs
xor
inc
leave
add
lock
hlt
cmp
push
jge
add
ret
shl
xor
(bad)
adc
inc
test
inc
push
cmp
in
in
in
pop
cmp
lock
cdq
nop
retf
or
push
adc
in
and
in
daa
inc
jb
in
loopne
in
fs
sub
sbb
inc
add
add
nop
pushf
loop
xor
call
pop
and
mov
mov
cmp
push
or
mov
loope
shl
add
xor
and
adc
clc
jne
idiv
dec
in
adc
push
add
mov
inc
dec
mov
sbb
push
add
ret
adc
lods
(bad)
jae
test
xchg
fild
push
adc
sub
popf
nop
and
mov
jmp
push
sub
jmp
dec
addr16
mov
mov
sub
pop
popf
mov
pop
lea
mov
sub
clc
mov
icebp
in
mov
pop
test
inc
cld
push
mov
and
and
and
imul
int
dec
and
in
sahf
cmp
call
mov
sbb
push
or
mov
xchg
movs
or
ins
xor
stos
fcom
fimul
pop
fs
imul
(bad)
(bad)
mov
mov
scas
ins
jmp
add
xor
imul
adc
dec
mov
lods
add
and
mov
je
pop
sub
shl
push
cli
jo
(bad)
call
popa
or
and
add
popa
jg
add
mov
ins
add
test
add
xor
addr16
inc
in
jle
and
mov
jae
ror
(bad)
cmp
xor
call
xchg
out
cmp
push
cmp
(bad)
ret
or
enter
xchg
jecxz
mov
pop
inc
cld
pusha
test
sbb
gs
mov
sub
inc
jp
xchg
loopne
pop
fimul
ret
inc
and
std
push
fwait
adc
sub
jecxz
sti
addr16
lods
or
rol
retf
push
loope
into
push
mov
adc
dec
call
push
xchg
ror
mov
dec
and
cmp
jp
imul
fisub
adc
cli
fld
cs
cld
push
retf
jbe
lock
cmp
push
popa
call
adc
sub
xchg
fld
inc
lods
push
or
mov
ret
out
mov
dec
pushf
aas
pusha
nop
or
popf
mov
lahf
std
ror
fadd
pop
jnp
sbb
lahf
inc
mov
adc
fld
sbb
xor
sbb
hlt
jmp
test
add
std
mov
push
jb
jmp
adc
sub
pop
push
adc
sbb
std
and
adc
js
mov
or
movs
mov
sbb
add
add
push
sub
xchg
push
cmp
and
or
mov
fwait
test
sub
mov
std
div
clc
mov
xor
push
xor
outs
mov
jmp
lahf
pop
cmps
repnz
daa
cmp
adc
cmp
movs
out
dec
scas
adc
pop
pop
pop
lea
js
pop
and
jo
and
das
lea
or
les
cmp
cld
test
cmp
les
and
adc
sbb
push
mov
in
mov
or
mov
inc
stos
hlt
cld
or
(bad)
shl
or
cmp
jne
ins
std
not
movs
or
enter
sbb
xor
inc
adc
cmp
rol
stos
shl
pop
push
ret
mov
loopne
jb
jge
adc
sbb
pop
repnz
dec
add
dec
push
xchg
mov
imul
inc
lods
cmp
sub
xor
add
add
mov
neg
(bad)
js
(bad)
inc
ds
into
loop
add
mov
stos
or
or
xchg
loope
add
jae
(bad)
fld
cwde
add
cmc
jae
jmp
in
jecxz
mov
or
cmp
jmp
fnstcw
jmp
sbb
cld
and
xchg
in
mov
ins
fldcw
in
xlat
push
mov
jl
sub
repz
mov
arpl
mov
out
xchg
add
cld
mov
lea
cmp
pop
adc
dec
mov
arpl
lahf
xlat
xor
rcr
in
in
pop
gs
pop
scas
in
in
ins
inc
bound
jle
and
jmp
pushf
adc
movs
stos
inc
fs
(bad)
cmp
call
inc
cld
dec
repnz
and
push
add
inc
cmp
adc
repnz
mov
mov
jge
dec
push
mov
inc
mov
push
mov
mov
popf
(bad)
adc
push
imul
jne
out
hlt
repnz
(bad)
enter
lea
or
inc
fmul
xor
gs
fbld
mov
or
popf
lea
and
out
lea
les
dec
pop
pop
sub
or
add
cmp
dec
adc
shl
mov
ret
mov
mov
outs
push
jno
mov
jmp
mov
ret
or
das
add
ret
push
jo
sbb
les
repnz
add
clc
cld
xor
add
std
fs
aam
or
cmp
dec
or
mov
fsubr
fwait
sub
adc
xchg
sahf
and
sbb
xor
rcl
ds
mov
mov
dec
mov
mov
xchg
je
add
imul
sub
jmp
push
xor
retf
ds
xchg
adc
sub
ds
mov
and
push
sar
jle
leave
stos
inc
mov
aam
ret
cmp
enter
rcl
repnz
jno
data16
or
pop
mov
iret
pop
pop
push
mov
data16
mov
mov
push
test
imul
sub
fs
add
loop
adc
out
out
je
je
pusha
mov
and
(bad)
fistp
cmp
sbb
xor
or
adc
int
imul
xlat
nop
cwde
inc
inc
add
inc
inc
dec
mov
(bad)
lock
inc
pop
stc
xchg
push
xchg
push
adc
jb
adc
pushf
xor
inc
adc
fsub
ins
add
mov
inc
and
push
push
xor
add
jbe
pop
js
add
sbb
imul
xor
push
mov
push
lock
add
fnstenv
cmp
std
stos
xchg
adc
inc
add
iret
sub
xchg
adc
ins
stos
dec
add
xor
dec
pop
leave
push
inc
inc
push
pop
mov
mov
xor
and
cmp
adc
add
into
push
xor
jno
dec
mov
je
cwde
jmp
fs
pop
cs
nop
in
cld
or
mov
adc
pusha
in
sbb
stos
jp
push
(bad)
fsubr
and
shr
aaa
inc
add
stc
or
push
sbb
ret
add
add
mov
adc
push
xor
inc
ret
cmps
arpl
test
jns
inc
and
lea
ret
adc
mov
es
add
dec
xchg
dec
(bad)
adc
adc
gs
push
pusha
out
imul
mov
inc
lea
inc
bound
dec
pop
enter
adc
adc
ret
pusha
popf
js
imul
js
inc
ret
or
mov
je
lds
xchg
xchg
and
test
mov
xor
add
cmp
mov
add
add
es
dec
js
inc
lea
or
inc
sbb
adc
das
daa
pop
jnp
jae
outs
pop
adc
jns
mov
adc
push
push
push
jae
gs
test
jae
test
ret
shl
jne
inc
push
sub
push
sti
fdivr
add
inc
or
popa
pusha
into
inc
push
(bad)
xor
and
inc
xor
xor
push
xor
inc
xchg
jl
push
mov
jge
cmps
adc
pop
(bad)
mov
sbb
push
test
jle
icebp
add
push
add
adc
outs
push
je
movs
cdq
push
add
(bad)
mov
push
(bad)
mov
cld
adc
or
addr16
inc
add
std
cmp
ins
and
jmp
xchg
xor
adc
lds
xor
test
mov
loop
mov
push
addr16
push
jo
enter
(bad)
adc
cmp
or
inc
cmps
sub
pop
dec
xchg
sub
call
je
inc
jb
and
inc
icebp
adc
mul
dec
push
shl
push
lahf
or
mov
jp
add
and
sbb
lods
pusha
fsub
aas
cmp
repz
js
jne
cmp
sub
or
or
inc
(bad)
popa
aaa
mov
ins
pushf
loope
(bad)
lea
cmp
pushf
xchg
xchg
push
ficomp
push
mov
dec
inc
pop
sub
sub
popf
sub
jmp
adc
mov
pop
jl
and
jl
cdq
in
dec
sub
sub
cmp
in
ja
pop
in
sub
jae
and
rcl
cmpxchg
add
jb
retf
test
add
adc
dec
sbb
push
mov
pop
std
mov
dec
pop
mov
stos
ins
and
ins
outs
mov
or
xor
push
adc
pop
rcl
add
sbb
imul
cmps
sbb
(bad)
out
push
push
leave
imul
push
inc
movs
or
out
ja
leave
arpl
mov
or
into
add
je
adc
test
test
pop
xor
das
push
jb
push
xchg
xchg
cmp
mov
cmp
mov
and
cwde
jne
xchg
push
add
cmp
dec
sub
push
dec
push
inc
inc
scas
xor
add
push
inc
retf
lods
adc
add
mov
push
sub
inc
rsm
sub
lea
mov
pop
repnz
sub
ret
jl
daa
add
cmc
mov
stos
cmc
adc
xor
xchg
pop
rol
and
inc
dec
mov
mov
or
push
push
add
or
mov
enter
pop
fisttp
jg
push
or
or
mov
(bad)
cmps
popf
nop
out
movs
test
mov
pop
(bad)
mov
dec
sub
test
ret
mov
add
sub
add
test
fiadd
(bad)
xlat
dec
or
test
mov
mov
push
pop
ret
call
ins
mov
mov
pop
int3
int3
add
mov
ret
sub
push
add
sbb
pop
dec
sbb
mov
xor
jle
sub
adc
jno
mov
outs
jbe
inc
rcr
jb
mov
fcomp
std
xor
inc
mov
or
mov
dec
inc
aad
cmp
cmp
nop
jae
adc
out
lods
sbb
sub
test
cmps
xchg
lea
and
cmps
cmp
test
out
in
js
inc
or
cwde
out
inc
push
dec
inc
pop
xchg
xor
and
sub
sbb
xchg
cmp
push
cmp
movs
xchg
cmp
pusha
adc
mov
jmp
jns
and
sub
push
imul
jns
or
pushf
fbld
inc
ficomp
shld
inc
sbb
enter
into
cmp
mov
adc
fcom
shl
inc
xor
outs
mov
mov
out
and
nop
and
call
or
nop
retf
lea
shl
dec
push
std
(bad)
sub
inc
fst
dec
xchg
cwde
dec
sahf
xor
dec
push
sub
aas
scas
jno
adc
inc
data16
push
sub
mov
pushf
cwde
ror
or
test
mov
icebp
jecxz
ins
cmp
ret
iret
xchg
mov
pop
pop
(bad)
call
sub
ds
scas
cmp
adc
and
das
mov
add
addr16
scas
in
push
call
mov
adc
pop
add
out
fwait
iret
sub
jg
xchg
adc
in
or
xchg
or
aas
fstp
ror
out
jmp
rol
sbb
shl
push
lock
cmp
or
adc
add
mov
mov
and
mov
add
sub
outs
inc
(bad)
jmp
jns
lea
aad
adc
pop
add
nop
rcl
cmps
adc
jb
popa
mov
cmc
add
push
inc
mov
movs
adc
cs
or
xchg
movs
ds
addr16
or
xlat
lea
adc
pop
and
call
dec
sbb
or
pusha
int3
and
push
gs
push
jb
je
add
dec
pop
pusha
and
sti
rol
mov
fs
or
cmp
fisub
add
pcmpeqb
sub
bound
mov
xchg
ja
push
imul
or
adc
add
dec
jp
push
loopne
imul
adc
rol
imul
cmps
add
push
mov
movs
inc
xor
call
mov
loop
test
and
push
ret
inc
pop
(bad)
push
jge
mov
cwde
out
or
jae
dec
or
dec
cmp
mov
frstor
cld
and
mov
add
mov
sar
in
js
sbb
ins
loopne
adc
hlt
sub
jae
cdq
test
pop
test
call
cmp
jg
push
and
adc
repz
retf
sbb
xchg
sbb
popa
jp
setge
pop
out
imul
rcr
ror
and
fstp
and
imul
or
jmp
xchg
mov
add
cmc
js
mov
adc
adc
je
(bad)
mov
ds
jbe
xor
adc
ror
and
nop
mov
cwde
das
movs
(bad)
dec
sub
call
ror
cmp
mov
push
mov
or
cmp
xchg
enter
or
sbb
lea
push
ja
cmp
ret
inc
ins
mov
mov
mov
push
add
dec
cdq
and
repnz
sub
and
cwde
pusha
jne
inc
(bad)
cmp
in
add
push
jo
icebp
imul
mov
push
sbb
mov
mov
or
or
std
pushf
sbb
scas
sub
call
icebp
sar
call
pop
fmul
mov
inc
add
sub
loopne
out
xchg
js
inc
stc
dec
inc
sbb
fmul
test
add
push
push
cs
adc
pop
pop
xor
dec
call
test
sbb
popa
push
mov
repz
dec
add
out
sbb
add
or
sub
nop
xchg
adc
adc
sahf
stos
xchg
(bad)
cmp
addr16
push
mov
ja
or
in
repz
add
bound
pushf
xchg
or
and
imul
sub
int3
jno
sbb
or
adc
adc
mov
int3
add
dec
loop
jg
inc
ror
adc
jecxz
add
fs
push
dec
and
stc
fisub
xchg
mov
mov
lea
aas
push
pusha
test
mov
icebp
sar
scas
shl
sbb
lea
nop
xchg
test
xor
adc
xchg
sub
and
or
sbb
sub
mov
adc
std
ret
bound
inc
mov
and
dec
jl
or
jb
push
sti
dec
pushf
mov
adc
push
nop
pop
mov
fisub
enter
test
sbb
dec
xor
cmp
add
push
push
push
shl
iret
fwait
or
push
jmp
fcomp
xor
xor
mov
or
cld
test
addr16
adc
adc
dec
popa
dec
cmp
mov
jle
dec
add
inc
push
mov
jno
and
fdiv
xor
push
shl
adc
adc
mov
test
cwde
pop
xchg
push
stos
pop
and
xor
nop
push
daa
dec
pop
adc
mov
jne
push
cmps
xchg
sbb
mov
add
adc
or
mov
rcl
or
imul
stc
push
sbb
(bad)
je
or
push
fidiv
inc
dec
int
cmp
ins
mov
les
pop
lods
gs
push
imul
cmps
xor
push
cmps
push
and
add
jle
je
pop
cmc
sbb
sbb
inc
in
mov
pop
(bad)
les
adc
fs
push
push
cwde
sub
int3
pop
not
enter
inc
aam
mov
cmp
inc
sbb
inc
mov
xor
push
pop
in
je
or
jmp
push
adc
xchg
(bad)
je
cmp
jb
xor
or
sbb
lock
retf
add
and
call
xor
jg
push
or
arpl
dec
je
adc
shr
sub
mov
add
dec
or
inc
xchg
dec
mov
enter
jne
test
add
dec
sub
pop
gs
mov
outs
xor
inc
imul
xchg
push
xor
pop
xchg
sahf
clc
mov
(bad)
or
inc
and
mov
ss
adc
jnp
add
xchg
sbb
lods
dec
inc
lods
mov
add
mov
ins
push
mov
and
adc
adc
xchg
dec
lods
or
ja
pop
xchg
je
or
and
add
adc
sbb
addr16
and
and
mov
(bad)
scas
push
or
push
sub
push
ret
lock
rol
push
ret
xor
nop
mov
gs
push
sbb
rcl
sahf
jecxz
push
ret
sbb
ins
stos
sbb
retf
mov
pushf
data16
test
mov
sbb
(bad)
clc
push
ror
scas
in
push
pop
push
xchg
or
xchg
je
push
and
push
mov
outs
fld
cmp
je
bound
mov
lds
mov
xchg
cwde
sub
pop
mov
or
add
adc
cmp
ret
js
jmp
mov
or
xchg
mov
adc
stc
rcl
dec
popaw
stos
xor
pop
mov
and
push
aaa
pop
loopne
fcomp
mov
cmps
or
push
push
shr
dec
int3
cmps
test
lods
xor
jmp
ds
xchg
pop
(bad)
add
imul
mov
mov
sbb
inc
or
add
mov
in
adc
dec
or
fs
and
ins
fisub
popa
sbb
mov
sub
pop
push
or
mov
push
stos
add
mov
sbb
cs
mov
sbb
pop
ficomp
push
mov
push
mov
hlt
mov
pop
ins
sub
(bad)
jmp
js
ret
pop
ror
jle
and
push
lock
add
inc
push
mov
xor
movs
push
push
and
cmp
daa
or
stc
jo
dec
push
or
loop
mov
push
push
add
xor
mov
or
xor
adc
repnz
inc
mov
cwde
fimul
sbb
out
jmp
mov
sub
or
rol
pop
push
dec
dec
sub
cmps
movs
lea
xchg
add
loope
mov
mov
jle
add
gs
adc
lea
add
fadd
mov
mov
sahf
sub
jbe
adc
and
adc
push
ret
and
shl
and
inc
xor
pop
lea
in
fdiv
add
mov
or
sbb
inc
(bad)
add
aad
sar
popa
inc
sbb
or
push
mov
push
and
call
inc
fstp
sbb
push
call
sub
dec
push
out
pop
pop
pop
dec
in
(bad)
sbb
leave
xchg
add
jmp
sbb
jbe
inc
popf
or
xchg
add
nop
dec
vsqrtss
cmp
push
sbb
mov
and
repnz
test
push
add
es
pop
adc
sub
pop
cmp
sub
lock
push
test
test
sub
clc
xchg
and
test
mov
pop
js
cmp
pop
sub
fadd
rol
cmp
dec
jne
sub
or
or
in
cdq
inc
or
pop
mov
cmp
movs
loop
jmp
call
dec
(bad)
cli
xchg
push
fs
sbb
test
sahf
test
loope
pop
sub
pop
inc
add
mov
jl
sub
jne
dec
sbb
(bad)
lahf
inc
xchg
or
mov
cmp
sub
xor
test
movs
xchg
rol
or
xchg
lods
and
push
inc
push
push
push
dec
xchg
movs
inc
out
dec
lock
and
xchg
sbb
adc
and
jle
xchg
adc
or
mov
cmp
jns
sub
or
and
sbb
or
add
pop
adc
mov
ins
stos
push
gs
add
jne
es
cs
imul
xchg
lea
inc
pop
xor
push
(bad)
popf
sub
lock
add
mov
imul
(bad)
ror
inc
jecxz
adc
adc
lock
je
repnz
mov
jno
xchg
lock
adc
fs
dec
dec
dec
push
xchg
push
or
in
or
lods
js
rcr
sbb
mov
and
int3
push
dec
mov
mov
adc
test
iret
or
or
cwde
xor
xchg
add
xor
dec
sbb
jo
ins
push
(bad)
call
xor
cmp
add
int
cmp
add
call
pushf
sbb
add
xchg
retf
add
nop
add
call
test
out
inc
inc
dec
enter
enter
ins
mov
jb
aam
add
inc
push
sub
iret
adc
in
dec
enter
in
enter
in
in
push
int3
mov
or
int3
or
or
mov
dec
sahf
out
aam
aam
sbb
cmp
xchg
enter
dec
fidivr
jns
int
outs
mov
jne
pushf
in
movs
xchg
xor
mov
cld
jne
add
add
test
aas
dec
add
lea
aad
jns
fisttp
test
imul
cmp
mov
dec
push
jge
test
mov
mov
test
inc
inc
fucompp
in
test
and
fild
mov
das
data16
adc
sub
jmp
cmp
sub
add
ret
ficomp
loopne
xor
jbe
pop
xor
add
mov
ret
movs
jne
cmp
xchg
(bad)
loop
jnp
lea
aaa
int3
add
sub
cdq
inc
fwait
dec
sub
push
das
sub
inc
mov
xor
ret
call
mov
aaa
movs
mov
daa
daa
jg
cli
sub
sbb
enter
and
adc
daa
mov
cli
sahf
adc
mov
cmp
jl
push
add
addr16
mov
lea
push
sbb
jns
int3
jo
dec
retf
xor
adc
mov
inc
int3
xor
mov
mov
push
sbb
jmp
and
push
cmp
int3
int3
ret
jae
cs
jnp
and
int3
cmp
stc
dec
jl
dec
fstp
(bad)
int
and
cmp
ror
daa
xchg
addr16
jmp
push
push
mov
cs
jle
or
pop
and
js
inc
in
je
les
pop
cs
and
mov
shr
mov
fld
or
pop
cmp
inc
bound
js
cmps
ficomp
test
sub
sbb
pop
aas
loope
dec
lds
inc
arpl
movs
sbb
or
inc
sub
and
popf
or
push
shl
pop
add
movs
test
sbb
or
fs
inc
call
inc
test
loopne
frstor
test
or
inc
adc
xchg
dec
arpl
push
dec
lea
or
lock
jg
add
xchg
pop
or
shr
enter
mov
(bad)
mov
jne
fst
add
nop
push
and
add
in
retf
loopne
mov
xchg
popf
enter
loope
push
or
add
stos
add
cmp
bnd
pop
cs
aaa
mov
scas
mov
retf
jne
or
sub
fnstenv
add
cmp
pop
popa
inc
xchg
sub
inc
dec
pop
sbb
add
movs
ins
sbb
popa
adc
pop
add
mov
pop
jp
or
into
test
sub
pop
inc
inc
sahf
inc
enter
cmp
and
mov
add
mov
and
scas
aad
cmp
mov
adc
or
fs
rcr
dec
cwde
cli
ja
popa
mov
or
nop
scas
call
push
and
cli
mov
dec
pop
fwait
dec
mov
push
mov
dec
inc
dec
mov
(bad)
js
cmp
cwde
test
add
dec
cwde
cmp
cwde
add
daa
loope
arpl
jnp
sub
jne
cmc
push
cli
pop
icebp
sub
or
add
mov
xchg
add
add
ins
adc
or
jno
add
xchg
jmp
push
rcl
xchg
enter
mov
mov
mov
adc
push
movs
adc
movs
xor
inc
push
out
sbb
cmp
or
inc
out
daa
jne
mov
and
test
pop
rcl
test
sbb
mov
pop
imul
mov
enter
and
or
test
lods
or
inc
loope
movs
sbb
jbe
mov
jl
xchg
push
sub
push
or
or
adc
out
pop
dec
xor
fs
clc
test
fistp
add
call
rol
mov
mov
js
sub
das
mov
jb
mov
fcomp
mov
mov
xchg
sub
push
test
sbb
(bad)
xor
dec
(bad)
retf
add
pop
mov
lahf
xor
and
test
repnz
popa
add
mov
ret
call
or
or
xlat
adc
add
ja
dec
jno
adc
mov
add
adc
add
add
adc
and
nop
jl
adc
add
push
nop
mov
dec
push
sbb
ins
test
fcomp
scas
pop
(bad)
cmc
jge
mov
fld
retf
push
or
push
xchg
sbb
popf
mov
ins
jne
lods
cmp
shl
jnp
test
inc
sub
mov
cmp
push
pop
inc
inc
inc
and
cmp
mov
mov
ja
xor
das
clc
adc
call
pop
ret
cmp
loopne
rcl
pop
test
inc
push
cmp
or
dec
pop
xor
pop
out
push
push
xor
nop
and
cmp
push
sub
aad
jns
shl
into
inc
adc
mov
movs
pushf
je
mov
and
scas
call
inc
jns
mov
and
test
ret
cmp
fdiv
mov
fsubr
mov
lea
loopne
sub
add
ret
out
test
sahf
les
dec
jecxz
add
sbb
sub
sub
add
xor
repnz
inc
daa
aas
lds
fadd
nop
sbb
jne
or
cmp
clc
xor
cmp
leave
cmp
inc
int3
inc
sub
shr
sbb
cmp
scas
in
inc
aaa
inc
rcr
push
ret
xor
sbb
mov
push
addr16
pop
lods
inc
fistp
pop
jnp
mov
inc
or
xor
dec
xchg
dec
mov
cmp
and
dec
sub
or
jmp
jecxz
pusha
add
xor
or
pop
push
mov
pop
mov
test
add
ins
arpl
clts
inc
int3
inc
mov
pop
loopne
jg
pop
sub
cwde
and
xor
aas
pusha
lahf
sub
aas
call
cmp
pop
inc
cmp
or
inc
mov
add
(bad)
fcmovne
sub
into
jge
inc
dec
fnstenv
add
push
imul
push
fs
jl
adc
push
sbb
mov
jge
addr16
and
add
inc
push
xchg
add
adc
outs
dec
cmp
lds
call
(bad)
cmp
ret
ds
push
lds
push
push
sub
pop
pop
adc
push
or
ds
pop
mov
pop
lahf
lods
inc
add
sbb
fs
movs
cmc
ins
jo
jns
mov
sub
mov
mov
or
mov
add
mov
pusha
setns
and
or
dec
sar
mov
jno
outs
add
fild
cmp
mov
(bad)
mov
loopne
mov
lock
fisttp
inc
cdq
out
ins
jp
or
mov
ss
test
and
add
jne
xor
shl
lea
add
out
lds
pushf
adc
push
and
push
repz
mov
sub
jecxz
add
dec
and
inc
add
outs
add
jne
sti
popa
mov
xchg
cmps
dec
mov
dec
unpcklps
call
lods
or
push
test
sub
dec
(bad)
jg
pop
lea
mov
jne
inc
or
jg
xor
dec
lea
fldenv
mov
hlt
pop
inc
(bad)
or
mov
jne
push
mov
int3
inc
lea
cld
adc
cmps
add
jp
pop
jl
dec
ret
or
mov
pusha
cmp
inc
(bad)
jmp
mov
call
pop
repz
stos
or
lea
cli
(bad)
nop
popf
sbb
in
out
nop
dec
add
mov
enter
je
push
xchg
arpl
or
adc
call
cmps
push
adc
and
test
fist
repnz
call
cmovge
stos
add
nop
or
inc
stos
inc
adc
movsx
inc
enter
push
push
adc
and
mov
dec
int
xchg
inc
sbb
test
mov
pop
rcr
or
sar
or
inc
sub
scas
push
dec
ins
cld
sub
retf
int3
int3
or
mov
jb
loop
or
dec
or
mov
and
nop
add
out
adc
cmps
and
data16
inc
imul
mov
push
iret
xchg
adc
xor
pop
push
fnsave
ds
and
push
mov
sbb
mov
push
xchg
shl
sbb
rcl
rcl
test
xchg
and
push
mov
pop
xor
push
xor
xchg
adc
int3
adc
jge
movs
jb
or
mov
jmp
arpl
push
pop
or
push
mov
pop
nop
mov
sub
nop
add
in
and
sbb
fst
or
sbb
lock
stos
or
loope
add
and
push
fdivr
jne
call
xor
sahf
aaa
pop
jmp
into
in
fst
(bad)
stc
dec
cmp
rol
sbb
xor
add
call
adc
cdq
or
aaa
and
or
adc
sbb
mov
repnz
push
imul
in
adc
addr16
sub
mov
pop
mov
add
jecxz
mov
push
jg
pop
add
inc
lods
push
pushf
inc
and
popf
lahf
and
and
mov
push
call
shr
push
mov
push
push
outs
push
ja
iret
push
xor
fidivr
push
cmc
add
or
clc
inc
push
push
mov
inc
adc
jne
ror
popa
and
adc
pop
adc
mov
and
sbb
xchg
inc
pop
push
adc
popa
and
in
xchg
lea
mov
pop
or
inc
pusha
jns
stos
inc
dec
and
push
dec
mov
call
lods
adc
cmc
sub
or
sub
push
mov
cmp
dec
mov
mov
lahf
stos
test
sub
cmp
add
add
mov
leave
adc
in
stos
add
fwait
test
bnd
dec
and
adc
and
xchg
dec
xor
or
and
dec
and
push
and
xchg
dec
inc
and
and
mov
push
push
mov
and
and
dec
push
xor
fbld
inc
and
pop
and
out
popf
and
popf
jmp
retf
adc
cmps
xor
retf
add
and
cmps
mov
cmc
or
or
sbb
and
dec
adc
adc
sahf
pop
or
jg
stos
stos
or
add
mov
jbe
mov
adc
mov
pop
sbb
pop
xchg
or
dec
je
pop
cli
mov
sbb
sub
inc
mov
or
pop
mov
sbb
and
jg
call
push
mov
and
daa
and
nop
dec
and
inc
aas
xchg
popa
mov
mov
pop
cmp
xor
adc
call
xor
xchg
jge
test
dec
stc
shl
push
(bad)
ja
int3
push
mov
jg
mov
mov
push
add
dec
pop
inc
mov
fld
mov
add
dec
add
mov
jle
je
ret
int3
pop
bound
loop
pop
ja
pop
sub
fsubp
push
arpl
adc
sar
ins
aas
pop
aaa
ror
sbb
imul
xchg
mov
lea
loope
in
or
push
cmp
call
adc
add
sub
push
pop
xor
push
fst
cmc
lea
pop
pop
mov
gs
aam
pop
fdiv
aam
dec
mov
addr16
scas
pop
fist
popa
lods
mov
mov
sahf
mov
push
bound
outs
push
add
add
push
or
and
(bad)
cmp
add
jmp
inc
enter
jb
enter
leave
push
and
pop
inc
sub
xor
fbld
push
push
movs
xlat
leave
cs
cld
mov
aas
sub
imul
and
mov
push
gs
and
inc
pusha
test
xchg
aam
adc
jb
aam
or
push
inc
out
sbb
xchg
sbb
push
push
nop
and
inc
add
js
and
xchg
and
fs
and
gs
das
push
pop
jle
and
pop
and
sbb
cmp
adc
add
and
and
push
inc
daa
add
sbb
pop
pop
push
and
and
inc
int3
xchg
mov
push
mov
sbb
and
and
or
and
stos
ret
addr16
cmp
mov
mov
sub
or
adc
rol
xchg
xor
adc
cmp
cmp
inc
mov
rol
pop
adc
rcl
inc
push
inc
mov
bextr
dec
ins
jae
or
and
dec
cmp
fimul
cmp
xchg
adc
dec
xlat
fild
or
popf
cmps
test
int3
int3
or
inc
mov
dec
add
jmp
packsswb
fbstp
mov
jne
cmp
ror
inc
pushf
xchg
push
jl
dec
xchg
retf
les
or
cmp
nop
push
mov
push
and
inc
jle
sub
xor
adc
fcomp
pop
sbb
xchg
fs
fsub
dec
jge
or
cmp
movs
iret
clc
arpl
lods
mov
and
lea
aas
push
cwde
add
add
stos
push
(bad)
into
pop
into
adc
ja
or
pop
mov
pop
ins
mov
add
inc
sahf
ja
or
loopne
mov
pop
fmul
addr16
add
ins
pop
clc
shr
es
aaa
push
bound
dec
or
mov
sub
adc
xchg
push
fbld
cmp
mov
arpl
mov
pop
ret
outs
dec
les
loop
je
lea
xor
push
inc
jl
cmp
imul
push
fistp
xchg
push
enter
xchg
stos
dec
or
add
pusha
scas
adc
or
or
inc
add
adc
adc
or
xchg
lahf
adc
sbb
add
fs
stc
xchg
adc
push
push
pop
xor
enter
and
and
aas
mov
adc
inc
lea
xchg
mov
cld
mov
mov
jmp
cmp
and
or
sbb
sub
sub
push
lahf
mov
inc
fild
push
lods
push
xchg
sbb
sbb
test
add
jg
xor
mov
sbb
xchg
pusha
add
aam
xor
movs
cdq
pop
popa
xor
add
push
xchg
adc
xchg
bound
ins
sub
xchg
daa
adc
lea
add
add
dec
push
lds
iret
and
jge
shr
sbb
jmp
scas
mov
cmp
fwait
shl
adc
pop
add
push
inc
ror
sbb
loopne
inc
inc
jle
adc
and
pop
cmp
ja
add
adc
addr16
inc
dec
xchg
sbb
out
or
or
in
fld
lods
std
vphsubwd
dec
adc
adc
repnz
cmp
outs
dec
stos
aad
mov
(bad)
cmp
les
pop
retf
add
and
inc
push
nop
and
inc
push
adc
xchg
jl
mov
mov
mov
popf
inc
pop
ret
loop
fidivr
out
int3
adc
in
push
adc
pop
xchg
pop
jo
fs
push
test
adc
cmps
cwde
outs
or
fisub
mov
int
xor
aas
fcom
inc
adc
jne
jmp
je
loop
ss
pop
mov
fcmovnb
inc
inc
cs
test
pop
sub
inc
jg
out
inc
aam
ja
push
pop
dec
(bad)
pop
inc
imul
jge
mov
fs
cs
fist
dec
shl
push
call
js
(bad)
or
add
call
ret
test
adc
mov
push
popa
add
pop
xor
push
aam
(bad)
outs
mov
nop
rcl
nop
js
push
jp
adc
fs
and
aas
xor
lea
cmp
je
mov
sti
fs
stos
scas
jge
jge
push
push
push
sbb
jle
mov
mov
pop
adc
dec
ds
pop
or
xchg
and
adc
jne
dec
sbb
push
add
fmul
inc
sbb
pop
adc
icebp
xchg
lea
or
sbb
xor
in
aas
bound
dec
mov
out
(bad)
in
cmps
mov
cwde
stc
push
js
adc
not
add
mov
push
inc
aaa
je
adc
adc
cmp
jbe
mov
push
ja
sbb
jmp
or
cmp
in
xor
shr
push
cs
ss
pop
xor
imul
fadd
aam
xchg
fs
xor
pop
sub
push
lods
arpl
mov
loop
dec
xchg
fwait
xchg
cdq
dec
rcr
sub
inc
xor
or
je
nop
mov
jmp
test
imul
loope
sub
pop
add
sbb
jo
push
xor
xchg
or
inc
hlt
dec
adc
sar
cmc
add
add
into
push
xchg
and
rcr
mov
or
add
cwde
xchg
or
or
cmps
cmp
je
lock
popa
xchg
enter
sub
jl
pop
mov
call
call
push
mov
lea
pop
pop
push
xor
sub
inc
inc
dec
push
jg
sbb
adc
jne
push
dec
sbb
mov
xor
or
test
jne
dec
ret
inc
and
sub
(bad)
adc
sbb
xchg
in
sub
and
(bad)
xor
or
or
jp
(bad)
ss
cmp
add
adc
pop
fild
lea
pop
inc
or
lahf
mov
ds
or
push
(bad)
jbe
es
js
mov
add
push
sbb
dec
push
push
mov
shl
shr
cmps
xor
jge
stc
push
js
mov
push
test
add
mov
xchg
(bad)
push
aad
xchg
inc
out
xor
sbb
test
std
rol
imul
xor
adc
push
movs
cmp
or
adc
pusha
sub
add
test
push
loop
retf
push
pop
inc
xchg
dec
pop
adc
(bad)
(bad)
push
dec
loope
dec
je
dec
fs
cmp
xor
pop
push
outs
loopne
and
aaa
push
sar
stos
push
xchg
add
pusha
clc
fs
add
sub
js
pop
mov
sub
jp
add
lahf
je
mov
in
fidivr
pushf
cpuid
adc
rcr
sub
or
add
mov
add
add
push
sub
mov
and
push
leave
mov
sub
mov
(bad)
lds
jle
inc
adc
mov
dec
ins
int3
lea
ss
or
in
lods
cld
xchg
(bad)
push
jo
jl
push
jl
inc
js
add
pop
clc
ins
jmp
dec
mov
mov
lock
push
dec
int
mov
(bad)
into
adc
push
lods
add
(bad)
stos
test
les
push
cli
adc
sbb
and
push
cmp
adc
mov
push
ret
test
icebp
movs
and
push
cmc
push
push
adc
inc
mov
mov
ins
push
and
add
mov
cmp
jmp
cli
jmp
jo
test
jg
jmp
push
aaa
inc
rcr
test
xor
xor
xor
sbb
or
pop
push
popf
pushf
and
add
add
aaa
(bad)
xor
cmp
add
cmps
lods
mov
dec
call
mov
push
inc
fsubr
loop
push
ja
add
push
in
xor
imul
inc
sbb
push
inc
movs
jmp
sub
cmps
scas
mov
call
scas
sti
loopne
pushf
cmp
fwait
xor
add
add
cmp
fdivr
push
jne
mov
mov
dec
push
cmc
mov
or
ret
mov
push
out
jmp
add
mov
sbb
xor
and
mov
popa
in
fs
call
cmp
pop
fcom
push
fcom
dec
ret
push
ins
adc
sub
jae
test
mov
fild
das
sub
dec
out
push
add
pop
and
adc
adc
je
pusha
stos
pop
movs
fcom
aas
xor
adc
mov
inc
rcl
inc
mov
dec
sbb
mov
add
xchg
or
mov
test
mov
loope
shl
add
test
pop
adc
push
repnz
add
jo
sub
adc
or
and
add
aam
(bad)
fild
and
mov
jbe
or
sbb
shr
js
cmp
sbb
add
arpl
mov
dec
adc
dec
ins
pop
test
push
ins
icebp
cmp
sub
loope
push
fist
ja
push
je
add
pushf
cld
shl
push
mov
movs
push
add
inc
enter
and
jp
xchg
xor
pop
aad
mov
add
outs
sub
test
dec
mov
and
inc
pop
pop
add
jae
mov
ins
push
gs
mov
or
outs
inc
adc
jne
push
xor
lahf
mov
mov
push
add
pop
shr
push
push
test
test
jbe
fist
fidiv
inc
shl
dec
sub
in
scas
stc
outs
jb
movzx
fmulp
or
ins
push
fisttp
push
add
mov
sbb
inc
mov
pop
stos
mov
and
stos
dec
push
sub
jmp
push
jg
push
xchg
dec
push
dec
add
cmps
mov
cmp
xchg
daa
mov
sub
jae
mov
lds
pop
sub
test
outs
aaa
sbb
nop
sub
push
cld
iret
pop
xor
adc
pop
jmp
adc
pop
and
adc
shl
sub
cmp
xchg
es
jno
repz
lahf
or
push
lods
cmp
mov
aam
sbb
xor
sbb
jl
push
xchg
imul
mov
aaa
ins
xchg
div
gs
scas
nop
or
cmp
not
jmp
sub
cmp
dec
sub
stc
xor
adc
adc
dec
push
pop
stos
mov
mov
rcl
shl
int
iret
inc
add
call
test
and
add
in
add
test
mov
inc
jns
sbb
data16
ror
xchg
or
sub
lea
add
sti
push
adc
sbb
and
mov
imul
and
mov
add
or
push
and
lods
push
lahf
mov
loopne
sub
mov
imul
les
dec
test
mov
jns
jecxz
add
aaa
jbe
pop
mov
push
and
push
(bad)
rol
or
adc
or
or
inc
mov
test
clc
fdivr
add
test
xchg
inc
jg
loop
add
and
pusha
or
and
jge
adc
xchg
loop
movs
dec
inc
add
cmp
out
xchg
or
fild
mov
dec
mov
or
ror
cwde
xor
xor
sub
mov
cmp
cmps
push
add
adc
out
repnz
push
inc
dec
pop
test
js
imul
mov
or
test
xor
pop
pop
clc
push
mov
out
dec
test
jns
loopne
add
js
cmp
push
shr
and
mov
lock
xchg
dec
mov
jg
enter
cwde
or
outs
mov
xchg
adc
xor
mov
sub
sub
jp
js
inc
and
lods
pop
movs
jae
mov
sbb
daa
fs
or
pop
xchg
ret
je
sub
pop
fild
push
repnz
js
push
or
lea
and
jp
jmp
div
adc
(bad)
push
ss
imul
lahf
out
movs
pop
sar
je
and
sar
iret
rcr
js
jns
inc
movs
jae
inc
jp
loopne
add
mov
adc
cld
cmp
push
mov
inc
xchg
xor
push
or
or
cmp
arpl
mov
add
mov
cmp
dec
and
fistp
xchg
icebp
clc
pushf
inc
xchg
push
frstor
dec
jne
test
inc
push
aas
jmp
test
shl
stos
push
cmp
add
pop
cmp
inc
sub
popa
std
xchg
clc
jae
jmp
ds
ret
sbb
ret
rcr
dec
outs
and
and
push
jecxz
outs
and
les
leave
sub
add
push
add
sahf
dec
test
mov
pop
push
xchg
sbb
add
ror
cwde
stos
lahf
sub
inc
cmp
jmp
pop
inc
mov
dec
pop
imul
out
add
test
bound
add
add
cmp
daa
xchg
lods
fnsave
mov
movs
xlat
and
es
adc
mov
inc
lods
cdq
inc
popa
and
xor
or
mov
push
in
sub
loopne
popf
call
mov
es
dec
xor
dec
push
sub
shl
hlt
or
mov
fbstp
dec
mov
cmp
cmp
pop
xchg
ja
add
test
jns
push
adc
mov
mov
push
aaa
add
ins
xor
in
add
cmp
stos
or
jae
cmp
adc
pop
sbb
push
js
mov
adc
jp
movs
ss
or
aad
add
movs
cmp
mul
add
adc
mov
cli
pop
cmp
pop
and
add
cmp
pop
in
pop
pop
adc
pop
sbb
cli
outs
pop
lea
and
add
jo
leave
push
cs
stos
cmps
test
mov
inc
or
outs
jp
in
dec
and
and
leave
inc
lahf
lahf
xchg
mov
adc
push
add
imul
adc
mov
add
push
sbb
repnz
jecxz
push
lahf
fcom
cdq
and
fwait
add
rol
loopne
add
shl
shl
fcmove
imul
test
loop
lea
sub
sbb
add
cmp
dec
pop
mov
adc
xor
cmp
fisttp
sub
outs
test
and
inc
leave
xor
test
test
leave
and
cmp
es
xor
mov
add
or
adc
js
sub
jge
and
jle
adc
fwait
sub
ins
cmp
inc
pop
pusha
mov
cmp
fcos
lea
pusha
test
adc
jnp
push
dec
lods
mov
pop
ret
add
push
lods
ror
dec
ins
push
rcr
mov
and
or
call
cmps
test
mov
sbb
test
mov
add
add
xchg
popf
lods
call
js
or
nop
add
cmp
mov
inc
test
mov
xor
stos
aas
lock
xchg
cmp
les
push
aad
and
sbb
xor
fisttp
sub
push
mov
sub
pop
cld
cmp
jne
dec
mov
(bad)
lds
inc
mov
inc
loopne
sahf
mov
mov
mov
inc
fs
push
cli
sbb
adc
xor
pop
imul
addr16
pop
xchg
ins
inc
adc
in
add
and
adc
add
adc
mov
int
inc
fsub
mov
loope
mov
cmp
call
aad
mov
or
sbb
pop
jbe
test
(bad)
test
outs
push
ins
and
pop
dec
or
test
int3
or
inc
daa
adc
push
push
lods
imul
test
bound
dec
test
inc
sbb
add
les
enter
push
push
in
mov
test
push
dec
cmc
int3
push
dec
pop
movs
jb
mov
ret
call
loope
inc
cmp
jbe
cmp
ins
dec
dec
pop
add
cmp
dec
inc
mov
ins
fdivr
call
(bad)
dec
or
loopne
mov
daa
stos
sbb
mov
xchg
jae
dec
or
cmps
ds
fadd
xchg
add
bound
arpl
das
or
call
push
cwde
push
sahf
or
repnz
xchg
scas
mov
inc
push
mov
adc
ror
(bad)
adc
and
jle
ja
or
pusha
clc
jmp
or
lahf
jp
out
pop
aam
inc
cmp
push
push
mov
inc
ds
pop
or
mov
gs
sbb
adc
push
(bad)
cdq
or
cmps
pop
add
mov
pop
cld
mov
xor
in
dec
xor
adc
call
jb
adc
add
jbe
(bad)
sbb
jmp
shl
jge
or
inc
call
sub
mov
dec
and
or
push
or
loop
and
dec
mov
dec
or
pop
xor
push
xchg
mov
push
push
or
inc
or
add
push
dec
adc
es
inc
sbb
(bad)
loope
pop
mov
or
pop
js
add
stos
enter
cmp
add
nop
sbb
je
xchg
xchg
mov
in
cdq
pop
fadd
xor
inc
clc
call
or
push
pop
imul
dec
sub
adc
ins
lods
or
adc
pop
and
mov
ret
adc
add
and
in
pop
cmp
daa
push
test
xor
pop
loopne
test
mov
add
add
pop
call
nop
mov
and
adc
mov
push
ficom
lock
rsqrtps
enter
mov
ins
inc
movs
ss
sub
enter
jne
fwait
mov
xor
xchg
es
jp
add
and
jg
sub
or
pusha
daa
ins
mov
push
daa
xor
cwde
sahf
popf
cmps
mov
jmp
and
sub
sub
push
and
pop
call
or
mov
lods
add
test
sti
cmp
ja
xor
and
(bad)
rcr
(bad)
push
adc
jmp
cmp
xchg
divps
ja
xchg
xor
xor
adc
sbb
and
push
mov
cmp
dec
xor
std
or
jle
je
inc
sbb
pop
mov
add
pop
inc
add
pop
jae
mov
push
jbe
sti
or
sub
inc
(bad)
add
pop
and
sahf
xor
xor
js
mov
adc
je
mov
inc
sub
sub
test
dec
push
scas
lahf
adc
test
sbb
or
jecxz
ret
mov
and
xchg
push
or
xor
adc
mov
jns
push
jg
push
adc
(bad)
xor
push
je
pop
inc
retf
bound
push
test
aaa
or
push
mov
(bad)
(bad)
jg
cmovp
cmp
mov
dec
inc
jle
in
lods
mov
inc
or
jo
and
aam
lods
ret
push
and
add
aaa
add
(bad)
push
push
adc
lods
jmp
fiadd
add
out
push
call
shl
dec
mov
scas
sub
dec
fmul
xchg
add
lds
cmps
add
mov
adc
cmp
push
stos
enter
and
and
xor
ins
mov
add
(bad)
push
dec
jae
sbb
sbb
imul
sub
sbb
push
push
mov
fistp
cs
push
fist
dec
add
dec
sub
and
or
adc
fdiv
mov
sbb
sub
scas
in
nop
pop
add
sub
add
mov
or
jle
dec
and
sahf
mov
or
sbb
add
movs
mov
push
sub
inc
enter
stos
int3
add
retf
xchg
push
out
aam
sbb
fwait
push
push
in
xor
sub
and
sub
dec
es
sub
sub
xchg
xchg
mov
sub
stc
pop
sub
sub
cmp
xchg
and
sub
sub
xchg
dec
dec
outs
push
mov
sub
jl
xchg
xchg
sub
jbe
jae
into
add
add
adc
pushf
out
pop
adc
lahf
mov
mov
xor
xor
cwde
or
mov
xchg
or
sub
or
push
inc
and
pusha
push
sbb
inc
sbb
jae
out
and
xchg
mov
xchg
cli
pop
pop
pusha
adc
push
jns
mov
pop
mov
add
and
sub
sub
nop
dec
sub
add
push
and
call
dec
out
enter
jmp
jp
ficomp
xchg
sbb
dec
sbb
xor
push
sahf
jmp
es
sub
lahf
sub
into
shl
pusha
sub
sub
mov
in
enter
mov
and
cmp
pop
and
cmp
repnz
cmps
xchg
lods
sub
inc
mov
mov
dec
daa
jmp
push
adc
(bad)
dec
in
mov
sbb
sbb
test
sbb
cmp
(bad)
lea
mov
and
xchg
dec
add
add
jne
jbe
adc
or
add
cmp
pop
adc
add
in
jb
ret
adc
stos
popf
ja
or
push
sub
mov
sub
cdq
xchg
xchg
sub
sub
inc
jb
adc
cmp
mov
sub
add
adc
test
sub
sbb
dec
enter
xor
leave
sub
sub
enter
sub
inc
xchg
adc
call
push
mov
shl
shl
lahf
popa
enter
pop
mov
nop
dec
leave
add
bound
sbb
jb
retf
lods
xchg
ret
lds
mov
mov
mov
dec
push
pusha
xchg
das
push
in
push
push
add
in
mov
and
and
lahf
cmps
add
adc
xchg
lahf
pop
xchg
pop
adc
repnz
pop
clc
jle
(bad)
fmul
es
stos
es
pop
stos
xor
mov
xchg
cmc
sub
push
mov
jge
cwde
push
dec
jl
and
fdivrp
nop
mov
push
push
push
push
cmp
(bad)
repz
and
mov
iret
mov
inc
mov
push
and
and
dec
pop
rol
and
xchg
retf
mov
(bad)
sub
sahf
nop
push
pop
add
push
lock
add
popf
out
xchg
sub
adc
mov
dec
movs
jmp
cld
(bad)
lods
out
sub
mov
sbb
lahf
arpl
push
inc
adc
cmp
or
sbb
inc
les
or
cld
movs
add
lock
inc
cmp
adc
enter
mov
lods
fidivr
dec
sbb
pusha
daa
fld
xchg
ja
mov
or
and
hlt
jmp
int3
xor
add
fdiv
cs
retf
push
adc
adc
push
pop
adc
and
loop
das
mov
cli
jne
mov
sbb
push
das
or
push
inc
aas
dec
aas
ret
lahf
push
push
jmp
sbb
add
(bad)
mov
xor
jg
jb
mov
mov
cmp
lock
sbb
xchg
fcom
lock
movs
inc
xchg
ins
sub
sbb
inc
adc
(bad)
out
jle
sub
(bad)
aas
or
mov
movs
pop
xchg
mov
pusha
jne
sbb
add
in
adc
mov
call
and
ja
mov
pop
sub
mov
ins
(bad)
sbb
adc
dec
loop
int3
sbb
mov
xchg
mov
lock
dec
and
stos
xor
jno
cdq
xor
in
sbb
idiv
push
push
mov
icebp
jmp
lods
mov
dec
push
push
push
push
adc
push
adc
push
push
ins
ins
sbb
lods
imul
adc
add
add
xor
in
jmp
mov
sub
inc
leave
fwait
push
cmp
pop
add
push
pop
mov
mov
and
imul
add
mov
or
mov
fst
or
je
cld
add
jl
movs
inc
pusha
dec
pop
dec
dec
jb
or
push
adc
ret
(bad)
out
pop
cmp
pop
sbb
sbb
rol
add
adc
(bad)
pop
aam
scas
jle
push
pop
sub
push
push
mov
ret
loopne
dec
les
xor
mov
pop
pop
rol
pop
dec
jbe
push
push
sub
inc
cdq
movs
push
clc
push
push
aam
xor
push
xchg
scas
jno
and
xor
movs
into
popa
bound
jno
inc
loop
cld
aam
fs
(bad)
hlt
inc
and
cmp
outs
cmp
pusha
inc
mul
mov
pusha
imul
push
(bad)
and
and
and
push
je
lds
inc
rcl
(bad)
cmps
je
xchg
lds
fisttp
and
jne
clc
lock
call
fadd
arpl
jmp
dec
shr
push
pop
or
(bad)
retf
outs
test
push
push
add
inc
mov
jnp
xor
jae
lahf
mov
rol
adc
inc
popf
sub
xchg
ins
pop
out
sbb
xchg
inc
jb
sub
cmp
out
(bad)
xor
es
ins
add
ficom
or
jno
pop
sub
dec
sbb
jecxz
stos
mov
and
xchg
clc
mov
dec
js
add
fs
add
ins
test
fdecstp
adc
pushf
fwait
cld
mov
ret
xor
mov
push
push
inc
sub
xchg
call
inc
or
add
mov
push
add
sbb
xor
pop
shl
cmps
xchg
sbb
retf
retf
mov
inc
mov
cmp
xchg
or
imul
dec
pop
dec
sub
nop
stc
es
push
ret
or
inc
or
rol
or
add
push
bound
jle
cli
dec
loop
mov
mov
sub
add
(bad)
mov
jle
pop
sub
dec
push
dec
mov
ss
mov
and
push
ret
in
lods
jmp
mov
fdiv
fdiv
adc
ror
and
and
adc
push
gs
mov
inc
mov
dec
push
(bad)
push
leave
mov
inc
or
scas
xor
dec
pop
rcl
fs
mov
lock
jle
loopne
sbb
cmp
bound
add
inc
adc
in
add
adc
test
(bad)
dec
push
dec
add
dec
push
sbb
xchg
sbb
and
sub
shl
dec
fild
add
mov
stc
xor
aam
jge
push
sbb
test
hlt
jg
jns
jecxz
add
hlt
mov
je
mul
loopne
push
fcom
aam
cld
loopne
cmp
sbb
add
mov
hlt
adc
shl
ss
or
pop
mov
mov
call
lods
lock
shr
jmp
mov
mov
je
inc
rol
imul
jne
dec
aam
aas
fadd
(bad)
mov
jl
daa
rol
out
or
jne
ret
and
jne
or
mov
xchg
xchg
pop
or
lock
sbb
push
jo
push
adc
jmp
push
xor
inc
inc
add
jne
pop
mov
add
fstp
mov
xor
out
sbb
ret
mov
inc
push
push
push
es
test
dec
jle
or
add
enter
enter
xor
adc
and
in
loope
js
mov
add
xchg
mov
sbb
add
clc
mov
xor
and
lea
adc
jo
fwait
mov
ins
xchg
cs
push
sub
pop
xchg
or
and
aaa
fisttp
test
add
fst
or
add
jmp
inc
inc
mov
js
push
sbb
add
jno
mov
sar
pop
xchg
add
test
lds
xchg
jne
cmp
xor
jge
push
or
clc
add
sti
xchg
push
es
mov
sub
(bad)
jl
sub
fdiv
inc
scas
fwait
add
dec
jne
pop
ret
mov
add
shr
mov
ds
cmp
and
les
push
test
sahf
adc
push
or
fs
add
(bad)
pop
cmp
cmp
jae
scas
mov
test
dec
addr16
xor
adc
rcl
hlt
xchg
aaa
and
pusha
add
push
add
fs
fsub
pop
add
mov
aas
mov
sbb
mov
ret
lds
inc
loop
sbb
or
sbb
bound
mov
and
push
outs
in
dec
dec
or
mov
ja
add
or
or
les
add
or
add
ret
push
xor
mov
push
adc
add
jg
mov
push
sub
ror
push
push
or
arpl
inc
dec
fist
or
adc
pop
add
xor
push
cmp
xchg
ins
push
jno
cdq
fadd
xor
and
stos
imul
sub
pop
leave
inc
add
mov
or
sbb
sub
popa
inc
mov
ja
ds
mov
(bad)
sbb
sbb
or
imul
pusha
lea
cmovne
adc
cs
pop
retf
inc
and
shl
jae
add
adc
sub
sub
and
adc
jl
and
(bad)
sbb
sub
mov
push
cmp
pushf
jle
sub
jp
sti
sbb
inc
dec
dec
inc
sbb
add
pop
clc
jl
push
into
xor
ja
jae
add
mov
pusha
push
bound
jo
shl
fistp
inc
and
jle
inc
sub
pop
cmps
and
push
sbb
clc
add
mov
rol
inc
pusha
nop
call
jle
push
pusha
pop
dec
xor
mov
push
fcmove
push
or
or
das
pop
xchg
int3
pop
pusha
scas
arpl
test
outs
addr16
jg
js
sub
test
push
loopne
nop
rol
mov
test
loop
or
push
dec
mov
hlt
mov
xor
inc
cld
nop
and
pusha
sub
inc
test
push
inc
icebp
adc
xchg
cmp
mov
push
xor
and
inc
mov
mov
and
push
es
fcom
xor
dec
jae
or
mov
les
inc
cmp
movs
mov
dec
or
cmp
or
jmp
ffreep
add
int3
ret
fbstp
mov
int3
mov
xchg
pop
add
int3
das
sbb
mov
adc
call
ficomp
mov
pop
dec
mov
add
cs
lods
ja
lea
xor
mov
adc
stos
inc
cmp
in
or
mov
sahf
cmp
dec
aas
lea
inc
push
or
rol
mov
pop
pop
sub
loope
pop
call
or
retf
pop
inc
xor
jl
or
into
or
cmc
rcl
or
imul
lea
cmp
pop
rol
cs
retf
sub
xor
push
or
mov
or
mov
or
pop
je
add
nop
test
dec
push
mov
push
sbb
push
add
fs
add
sub
xchg
pop
icebp
sbb
xchg
cmp
rol
outs
je
mov
daa
push
dec
add
sub
jb
fisubr
dec
rcr
push
mov
adc
fs
stos
jo
xor
mov
jbe
and
mov
inc
mov
adc
inc
push
sbb
cwde
push
inc
jp
jb
inc
sub
std
std
xor
inc
sbb
sub
call
dec
push
jns
not
std
mov
mov
repz
(bad)
movs
or
sar
jns
add
and
xchg
int3
std
and
fisubr
sbb
xchg
sahf
pop
cmp
xchg
sbb
jmp
pop
dec
dec
add
sub
rcr
stos
cmp
pop
add
jmp
jmp
mov
add
outs
jmp
imul
add
jae
sub
fbld
shl
lods
sbb
test
cmp
in
jecxz
in
xor
dec
stos
aad
movhps
xchg
fdivr
call
ins
mov
shl
sbb
stc
(bad)
jbe
sbb
mov
cs
xlat
push
or
xchg
xlat
jbe
test
fdiv
mov
xchg
fmul
push
push
leave
ins
cld
mov
add
sbb
ret
fs
or
mov
cmp
sar
xor
push
clc
xchg
pop
inc
add
aas
shl
xchg
xchg
push
xchg
jo
xchg
cmp
add
inc
mov
inc
addr16
stc
aad
add
lods
mov
in
mov
pop
pop
and
jnp
mov
pop
hlt
fadd
pop
jl
dec
cld
push
aas
add
test
dec
pop
jmp
dec
push
adc
gs
sbb
add
arpl
in
mov
dec
xlat
add
inc
in
push
call
push
cs
in
cmp
cmp
pushf
loopne
push
rcr
inc
cs
xchg
xchg
ins
(bad)
lods
ins
dec
push
push
cmps
jmp
aas
lock
or
jg
pop
push
rcr
adc
and
test
sbb
inc
pop
or
jo
dec
js
gs
xor
ins
popa
push
push
movs
sbb
push
jbe
outs
inc
dec
xor
or
bound
cs
or
push
add
lahf
inc
add
xchg
loopne
xor
push
add
pusha
or
inc
jl
mov
lods
cmp
aaa
adc
je
inc
sbb
mov
clc
es
push
mov
mov
mul
pushf
xor
cld
or
popf
fs
shl
inc
sub
and
ret
inc
pop
jo
cmp
jo
sbb
sbb
inc
mov
mov
add
loopne
mov
pushf
add
push
clc
dec
aam
add
mov
inc
loopne
mov
jmpw
popf
push
lea
pop
push
add
pop
shl
(bad)
aam
fsubr
lods
and
das
sub
(bad)
movs
daa
dec
fdiv
pop
sbb
mov
dec
mov
enter
pusha
icebp
cs
dec
fstp
dec
cmp
test
outs
rcr
adc
cmp
ss
jecxz
shr
jmp
and
hlt
mov
adc
into
mov
dec
cs
or
add
out
push
test
pop
jo
adc
dec
xor
push
mov
mov
cmp
dec
mov
sbb
(bad)
rcl
fmul
(bad)
(bad)
sbb
fwait
adc
xor
es
test
sar
and
in
je
add
inc
push
xor
jbe
loope
adc
sub
lods
repnz
or
arpl
inc
sbb
fistp
pop
xor
mov
sub
pop
mov
xchg
rcl
and
icebp
js
js
aas
ja
inc
mov
mov
cmps
mov
aam
pop
mov
sub
jmp
and
adc
cmp
data16
sub
or
pop
or
ins
add
and
cld
and
xor
dec
mov
mov
sub
mov
test
add
mov
xor
enter
adc
iret
sbb
sub
add
int
(bad)
sbb
fmul
push
xor
pop
xchg
mov
dec
add
add
dec
pop
push
std
adc
adc
out
pusha
xor
cld
push
and
xchg
add
push
popa
dec
rol
adc
sub
sub
sbb
rcl
icebp
add
sbb
inc
enter
push
inc
sbb
adc
sbb
sbb
xchg
add
jl
out
sub
inc
lock
add
cmp
sub
aas
jns
retf
or
jno
and
je
in
and
ret
lea
and
cs
sar
dec
sahf
sbb
pop
dec
loopne
inc
or
ins
push
jmp
push
outs
or
out
dec
(bad)
rol
call
cmp
ror
push
cmps
movs
jo
pop
(bad)
loope
ret
jnp
push
xchg
inc
fs
dec
sbb
mov
bound
sub
loopne
rcr
fs
adc
aaa
call
rcl
and
cmp
xor
dec
mov
add
ds
ror
aam
dec
pop
adc
or
repnz
mov
lock
daa
int
or
out
repnz
xor
es
mov
fidiv
jns
pusha
icebp
add
mov
sbb
push
inc
(bad)
jge
pop
xor
inc
test
mov
cmp
nop
sub
pop
ror
aas
cwde
dec
data16
stc
inc
movs
inc
inc
cmp
add
jmp
daa
iret
retf
add
mov
adc
and
push
xor
jns
dec
enter
aam
push
rcl
or
cmp
mov
xchg
inc
cs
imul
inc
rcr
jns
adc
enter
pop
pop
inc
and
int
dec
pop
inc
dec
xchg
fs
sbb
movs
add
jbe
test
imul
int3
int
push
mov
cmps
(bad)
call
inc
mov
or
mov
jl
fwait
jnp
mov
mov
add
adc
or
or
xchg
cmps
or
in
add
add
mov
pop
ins
adc
jno
adc
mov
fist
dec
test
push
(bad)
shr
dec
int
mov
sti
adc
mov
xchg
xor
fst
ins
xchg
adc
xchg
test
stc
dec
lahf
mov
mov
pfrsqrt
sbb
pop
jnp
cli
xchg
aas
dec
add
push
push
inc
std
pop
sub
mov
fmul
mov
icebp
pop
cld
shl
pop
ror
cmps
mov
or
pop
xchg
xchg
sbb
call
je
jnp
jmp
mov
and
pop
cmp
lock
lods
or
pop
pop
js
adc
das
xor
pop
cmp
gs
mov
adc
mov
(bad)
pop
mov
mov
sbb
adc
pop
pusha
inc
inc
rcl
shl
(bad)
(bad)
or
ret
pop
or
xor
aam
pop
ficom
inc
push
cdq
fcomp
and
ror
pop
mov
fcomp
add
add
jno
xchg
jno
loope
pop
(bad)
cmp
or
or
pop
inc
mov
test
lods
dec
daa
jo
jo
movs
(bad)
sti
ret
(bad)
out
pop
or
dec
js
cmp
jmp
cmps
sbb
or
retf
stos
sbb
xchg
jmp
xchg
not
or
adc
cli
sbb
fmul
mov
lea
or
or
dec
push
sbb
mov
sbb
mov
push
aaa
test
push
scas
mov
sbb
sbb
jmp
(bad)
push
cwde
mov
mov
sbb
push
dec
jae
sbb
stos
and
and
iret
xor
jne
sbb
mov
jne
loope
or
fbld
in
add
mov
dec
push
cmps
scas
pop
jo
push
mov
daa
int
call
sbb
or
(bad)
sar
sbb
cli
xchg
mov
test
mov
mov
ins
xlat
mov
or
add
mov
mov
jne
loope
imul
fidiv
dec
adc
sbb
xor
loopne
dec
pop
sbb
dec
fiadd
or
or
mov
or
aas
and
fsubr
je
outs
cmps
std
add
cmp
inc
cdq
adc
or
adc
xlat
lea
stc
push
push
cmp
cmc
not
sub
sbb
or
and
pop
xor
and
imul
xchg
loop
ins
call
xchg
jne
nop
ret
or
ret
test
shr
jns
icebp
push
test
retf
mov
cmps
mov
add
test
jmp
mov
mov
adc
pop
xor
aam
arpl
sbb
or
fwait
and
aas
inc
xor
aas
cmp
in
adc
and
fbld
aam
and
adc
push
mov
mov
pushw
adc
pop
push
pop
pop
jno
out
add
sbb
add
fwait
sub
sar
hlt
mov
lock
je
push
inc
xor
mov
dec
sbb
out
or
sbb
push
mov
call
mov
mov
sub
mov
mov
stos
pop
js
and
jl
xchg
cld
int3
mov
add
popa
adc
push
jno
inc
mov
push
fisubr
aas
cmp
ins
(bad)
test
adc
popf
xor
shr
mov
xchg
ds
loopne
or
retf
pop
call
lea
or
jne
pop
push
pop
adc
add
xor
inc
sub
and
push
dec
mov
pop
icebp
shl
cmp
lock
bound
pop
adc
mov
jecxz
push
jmp
mov
xchg
xchg
mov
add
imul
pop
ret
enter
pop
push
xor
shl
push
or
popf
fdivr
push
push
pop
xor
daa
mov
retf
into
sub
inc
cmp
ret
aas
add
jo
arpl
xchg
xchg
add
scas
mov
inc
stos
lea
test
xor
xor
and
sahf
in
or
sbb
ret
in
mov
mov
and
dec
popf
inc
pop
adc
daa
jb
cmp
(bad)
jnp
add
add
lea
jg
inc
xchg
loop
cmp
sbb
or
mov
mov
cmp
rcr
leave
adc
daa
cdq
xor
xor
mov
sub
sbb
xor
sti
cmps
cmp
inc
dec
dec
pop
xor
shr
rcr
push
add
or
push
pop
cmp
fwait
js
add
pop
mov
mov
mov
inc
js
int3
or
mov
inc
mov
adc
vpshad
test
pop
or
jmp
mov
push
cmp
xchg
push
sbb
(bad)
enter
test
lods
or
das
inc
lds
mov
idiv
push
push
jl
add
or
sbb
lods
or
xchg
add
xor
xchg
dec
sub
adc
(bad)
ret
pusha
mov
pop
popf
ret
mov
push
mov
or
mov
sbb
mov
in
cmps
sbb
(bad)
repz
mov
enter
(bad)
bound
mov
or
inc
mov
mov
xchg
mov
and
xor
daa
and
aas
(bad)
fcomp
bound
sub
icebp
dec
inc
inc
dec
mov
add
in
push
push
lods
jae
push
jle
push
mov
mov
fmul
test
fld
out
es
push
jae
mov
shr
pop
and
sbb
lods
xchg
test
xchg
gs
mov
and
adc
jae
inc
cs
push
sbb
add
push
or
jl
movs
xchg
jmp
into
lock
cmp
mov
mov
jbe
stos
xchg
cmp
cmp
push
ins
add
xchg
xchg
push
in
xor
xor
je
add
cs
or
loopne
lea
or
mov
sub
push
dec
neg
test
sbb
mov
or
or
cmp
cmp
push
or
adc
loopne
adc
or
push
sbb
call
dec
in
jo
pop
and
mov
add
pop
fdiv
pop
push
inc
xor
pop
ret
xor
bound
cmp
icebp
push
adc
cmp
cdq
pop
sbb
sbb
fdiv
les
movs
sub
loopne
pop
mov
inc
mul
xchg
(bad)
xchg
je
nop
rcr
mov
cmp
xchg
cmp
dec
mov
pop
inc
sbb
movs
and
sbb
daa
inc
xchg
(bad)
mov
cmps
xor
xchg
(bad)
(bad)
push
(bad)
or
mov
pop
clc
in
ds
adc
xchg
mov
jmp
ret
or
add
sbb
fst
jl
inc
cmps
mov
rol
inc
imul
jo
adc
scas
mov
mov
cli
dec
cmp
aad
cmp
aaa
xor
sahf
mov
xchg
dec
or
or
push
sub
aad
rol
cmp
or
sti
push
add
jecxz
jo
pop
arpl
dec
push
pop
add
sub
push
pop
mov
out
aaa
mov
sub
call
jne
or
jmp
xchg
test
push
lods
adc
dec
pop
jle
add
push
inc
jl
and
mov
add
jb
repnz
retf
sbb
ss
or
lock
scas
mov
xor
into
(bad)
test
sub
or
inc
dec
inc
aas
sub
call
add
push
jmp
out
je
pop
sub
mov
mov
(bad)
xchg
mov
loop
inc
add
jnp
sbb
mov
fidivr
inc
push
loopne
sub
cld
retf
neg
dec
out
sub
push
ins
iret
inc
inc
cmps
sbb
pop
mov
sldt
inc
add
sbb
jb
ror
loope
retf
dec
cmp
cmp
scas
fdivr
add
mov
mov
mov
push
outs
out
add
and
or
popa
repz
xchg
mov
retf
cmps
push
out
jg
cmp
push
imul
call
dec
push
adc
les
inc
aam
or
sub
xor
fild
add
dec
mov
push
push
shl
test
ret
imul
fld
dec
pop
sub
pop
mov
mov
push
or
dec
int3
sbb
cmp
jecxz
mov
add
cmp
ret
adc
inc
loop
or
adc
adc
scas
nop
or
call
cmps
ins
mov
out
das
lock
xor
and
dec
pop
test
retf
mov
pop
gs
daa
retf
jge
jmp
mov
sub
or
call
ror
loopne
or
cmp
rol
cmp
retf
dec
add
add
push
push
inc
inc
xor
sub
cmp
je
inc
adc
mov
adc
es
mov
aad
leave
xchg
pop
add
push
sbb
xchg
arpl
ffree
push
and
dec
lods
push
and
inc
imul
inc
test
into
add
aas
fst
imul
add
aad
int3
push
dec
je
cmp
dec
and
(bad)
cmp
cmp
sub
xor
fcmovnu
mov
dec
dec
and
(bad)
into
push
stos
jbe
lock
cmp
sub
sub
shl
int
sub
sbb
mov
popf
das
popf
mov
push
rol
(bad)
pop
push
or
or
scas
xor
add
adc
push
cdq
pusha
pop
add
push
aam
mov
push
retf
gs
retf
cmp
nop
add
inc
sahf
pop
add
pop
clc
push
or
and
pusha
call
(bad)
and
or
xor
add
or
add
adc
pop
add
adc
pop
movs
xor
add
jb
dec
nop
adc
pop
adc
jb
movs
or
inc
xchg
test
xchg
push
push
jnp
mov
cmp
push
test
sub
lahf
pusha
pop
add
lea
movs
dec
sbb
xchg
call
xchg
mov
idiv
inc
inc
je
pop
aaa
push
dec
push
jmp
dec
je
push
or
and
pop
push
add
bound
jb
add
xchg
js
mov
pop
mov
ss
aaa
in
jb
popa
cld
sti
cld
sti
cmp
int3
push
pop
stos
push
hlt
cwde
jo
repnz
cmp
movs
and
or
ins
mov
pop
jmp
sub
ds
jns
add
sbb
jp
sub
je
dec
es
mul
mov
jo
imul
stc
adc
inc
jecxz
btc
or
jne
sbb
sub
jne
sub
or
mov
and
mov
mov
or
add
or
cld
or
ret
je
sbb
add
retf
je
lahf
setl
push
xchg
test
repz
test
add
sti
in
add
mov
and
daa
add
lods
outs
nop
push
cmp
adc
pop
call
jg
add
mov
loop
push
test
sub
or
cdq
add
not
test
dec
cwde
xchg
sub
mov
adc
xor
call
xor
sbb
or
pop
cli
dec
adc
pushf
mov
xor
add
dec
add
and
jns
or
or
sbb
mov
popa
pop
xor
repnz
sub
pop
ja
ins
mov
add
xchg
jnp
add
lock
fdivp
sbb
dec
loope
ins
sub
xor
jmp
sbb
or
mov
call
rcl
sbb
lods
int3
or
sbb
xchg
in
inc
rol
cld
push
sahf
cmovns
dec
or
adc
aad
outs
sbb
inc
and
or
rol
mov
jo
inc
mov
mov
push
jg
aas
test
mov
push
xchg
xchg
xchg
dec
repz
push
mov
inc
push
in
add
add
add
int3
sub
mov
dec
ja
loop
adc
nop
sar
dec
push
xlat
xor
add
mov
or
in
inc
or
dec
loopne
cmp
sub
sub
sbb
dec
add
movs
or
adc
arpl
and
mov
pop
jnp
or
inc
sbb
pop
adc
movs
rcl
push
cmps
stc
mov
xchg
pop
dec
add
push
push
push
xchg
push
or
inc
dec
ret
dec
gs
ds
inc
add
adc
xchg
adc
or
push
pop
xlat
adc
or
add
enter
adc
shl
push
xchg
adc
mov
bound
rol
inc
jmp
push
push
fs
jo
dec
pop
cs
jb
dec
push
dec
cs
jb
sub
sub
dec
pop
(bad)
stc
or
jecxz
mov
dec
inc
addr16
push
pop
and
movs
adc
adc
mov
lods
imul
test
jmp
jmp
mov
outs
or
or
dec
inc
mov
adc
sbb
jns
mov
loop
jl
adc
mov
cmp
mov
dec
aad
or
ins
mov
pop
jl
mov
mov
repnz
jl
sbb
xor
pushf
mov
and
xchg
retf
in
mov
push
test
add
push
and
fwait
ins
add
push
arpl
fcom
and
pop
int3
cs
inc
sub
aas
test
add
push
mov
lds
clc
lea
push
scas
mov
sub
(bad)
(bad)
lea
shl
or
mov
pop
lahf
mov
or
rcl
xchg
and
js
mov
icebp
sub
xor
stos
inc
faddp
cmps
imul
aaa
mov
lods
sub
xor
or
fs
test
pop
pop
jmp
xchg
xchg
pushf
std
xchg
jo
outs
jns
movs
or
test
add
dec
sub
xchg
leave
test
cmp
(bad)
pop
sub
addr16
sub
sbb
enter
lock
inc
adc
or
lds
adc
fcom
push
or
pop
pop
idiv
fcomp
int3
pop
xchg
and
lock
inc
add
xor
loop
enter
and
adc
sbb
push
aas
add
mov
push
jnp
ret
xchg
mov
mov
add
push
or
push
push
push
jb
repz
push
push
push
pusha
push
or
jb
pop
pop
push
add
xor
push
xor
imul
adc
pop
into
mov
outs
shr
(bad)
mov
inc
mov
jno
inc
add
xchg
pushf
xor
cmp
ret
sbb
xchg
mov
(bad)
mov
adc
mov
or
mov
pop
jl
mov
push
lock
fabs
fld
rcr
out
fucompp
mov
inc
jnp
fdivr
dec
clc
jle
shr
inc
jne
fstp
jmp
fstp
jmp
push
add
pop
xor
mov
fild
(bad)
into
push
fsubr
mov
jecxz
movs
retf
fldcw
fistp
pop
enter
dec
loopne
cmp
dec
push
mov
paddw
mov
cmp
or
iret
add
jecxz
push
inc
lea
fist
rcl
and
add
cmp
mov
cmp
mov
neg
test
imul
dec
xor
and
(bad)
and
or
mov
outs
adc
jae
adc
cmc
test
cmp
lock
add
push
pop
jnp
cmp
sub
test
fbld
ret
mov
mov
adc
push
js
cmp
inc
inc
pop
xor
adc
sbb
nop
or
mov
jbe
or
pop
or
inc
cs
inc
out
dec
shr
xlat
push
(bad)
inc
push
add
jg
fadd
jb
test
sub
push
call
fld
loope
pop
inc
pop
adc
shl
mov
sub
pop
int3
nop
mov
retfw
fstp
xor
mov
pop
inc
jnp
mov
pusha
sbb
movs
popf
or
dec
and
inc
and
sbb
jo
shr
adc
adc
xor
jmp
gs
sbb
fild
(bad)
dec
mov
dec
xor
xor
aas
push
movs
popa
xor
xchg
dec
jns
and
ror
inc
dec
jecxz
(bad)
cwde
fs
ret
in
pop
je
and
lahf
lahf
mov
sub
xchg
and
sbb
popf
mov
test
mov
cli
cmp
or
leave
push
adc
outs
or
lahf
pop
cmps
fdivr
ret
mov
mov
popa
lahf
lock
dec
inc
daa
push
cmp
add
adc
fiadd
stos
jg
push
push
and
ja
add
mov
aaa
inc
daa
pop
add
adc
ins
and
push
shl
cmp
sbb
icebp
sahf
add
or
test
sar
int
fmul
lock
add
js
add
call
xchg
add
pop
add
mov
push
inc
aam
bound
xchg
dec
aaa
inc
sub
push
sbb
push
mov
hlt
cmp
adc
gs
adc
push
add
mov
fdivr
or
push
dec
adc
add
or
in
dec
add
pop
cmp
adc
mov
jg
push
xchg
push
shl
xchg
rcr
add
sub
dec
xchg
inc
nop
push
or
sbb
imul
add
loopne
daa
bound
jb
ss
jl
loopne
cli
push
push
mov
xor
xor
sbb
pop
stos
pusha
dec
push
ss
add
mov
mov
jge
sbb
cmp
and
jge
mov
or
xor
out
pop
clc
inc
sub
rol
enter
icebp
xchg
add
inc
icebp
inc
push
push
push
and
and
push
add
pop
sbb
xchg
test
inc
dec
addr16
xchg
inc
cmp
or
sub
mov
xchg
pop
pop
pusha
mov
sbb
and
scas
les
loope
dec
mov
es
jb
xor
dec
lea
jnp
xchg
loopne
pop
cmp
sbb
push
lea
test
add
cdq
call
cmp
popa
and
leave
ret
js
add
xchg
dec
xchg
and
add
mov
inc
add
aas
and
in
rol
xor
add
push
clc
push
adc
sub
pop
adc
push
push
xchg
jo
and
dec
jnp
mov
cmps
pop
nop
test
hlt
push
lea
sbb
dec
adc
push
sub
call
add
retf
shl
push
cmp
pop
pop
out
push
out
push
mov
scas
cmp
mov
push
mov
push
mov
and
mov
jmp
add
int3
sub
and
mov
cmp
push
test
lock
aas
jmp
es
pushf
dec
retf
and
aam
pop
pop
add
dec
pop
mov
mov
pop
(bad)
push
dec
push
inc
mov
stc
(bad)
pop
and
mov
and
or
jg
push
fs
imul
sbb
sub
jl
ror
(bad)
push
mov
call
and
add
inc
dec
cmp
arpl
mov
loopne
outs
movs
in
pop
xlat
xchg
cdq
adc
add
jo
adc
pop
adc
mov
and
sub
lea
xor
pop
popa
pop
shl
rol
and
jns
leave
xor
les
jmp
inc
lock
sub
inc
push
aas
inc
mov
pop
mov
gs
ins
jge
fsubr
push
repz
dec
push
call
push
or
mov
sub
les
cli
push
lds
pop
sbb
jp
aam
in
outs
mov
or
pop
push
mov
pop
add
mov
mov
add
test
pop
lods
add
push
fisttp
xor
mov
xor
or
popa
and
mov
adc
inc
push
rol
cmp
cmp
cmp
inc
pop
jl
adc
or
sub
js
adc
mov
and
sbb
jbe
jo
repnz
jae
sub
pop
ret
push
popf
cmps
xor
outs
adc
jns
popa
adc
and
or
pop
out
xchg
xor
mov
ret
jae
add
pop
sub
sub
pop
mov
in
in
add
mov
and
sbb
sbb
jno
or
mov
inc
cdq
lahf
ret
inc
sbb
sub
dec
jbe
clc
jns
int3
test
imul
pop
inc
ins
sahf
add
cmp
mov
fidiv
nop
or
inc
and
(bad)
or
sub
or
mov
xor
add
add
in
es
adc
or
xor
pop
inc
fistp
bound
ror
mov
sbb
inc
cld
pop
or
aaa
pusha
lahf
ss
aam
and
xor
cmp
mov
popa
mov
mov
(bad)
cwde
push
pop
inc
int3
lds
imul
lock
stos
pop
je
and
lea
sub
adc
gs
fild
pop
loop
sbb
sbb
inc
dec
cmp
je
or
mov
int3
and
and
adc
daa
pop
adc
nop
pushf
fldenv
addr16
adc
mov
add
mov
cmp
push
scas
or
or
lods
ja
aas
inc
inc
mov
pop
call
adc
pop
sbb
je
inc
test
jns
mov
push
xchg
pop
add
push
mov
adc
sub
clc
inc
mov
sbb
push
sub
and
mov
sub
or
adc
mov
or
push
rep
sub
jo
add
enter
pop
cmp
or
or
xchg
adc
in
inc
jge
fld
push
add
sub
cmps
fs
sahf
dec
adc
fs
call
leave
and
adc
mov
adc
pop
adc
call
mov
aad
xor
mov
retf
or
xor
and
and
adc
and
mov
das
and
mov
mov
popf
fst
clc
push
add
adc
mov
(bad)
jmp
mov
adc
in
pushf
sbb
adc
mov
mov
mov
ins
call
shr
enter
in
in
mov
dec
in
dec
add
lds
out
test
in
dec
mov
adc
int3
imul
add
scas
dec
fist
cs
call
sub
cmps
adc
out
pushaw
scas
or
je
dec
stos
jmp
push
xor
or
ficomp
jb
sub
mov
je
outs
jae
dec
outs
jae
dec
pop
add
dec
jbe
adc
cmp
sub
add
add
add
call
mov
dec
shr
add
add
and
adc
sbb
adc
xchg
adc
inc
or
add
clc
imul
pop
cs
das
in
retf
das
(bad)
cmp
loop
xor
or
pop
jnp
push
call
pop
mov
fcom
mov
push
dec
lea
jl
and
hlt
sub
inc
pop
in
sub
sbb
push
je
jae
setle
cmp
dec
movs
stc
mov
mov
adc
pop
xor
inc
lds
ins
mov
and
sub
adc
cmp
pop
cmp
add
call
adc
add
pop
pop
iret
nop
cmp
xchg
adc
add
pop
xor
adc
jb
pusha
stc
fchs
add
mov
mov
push
test
xor
or
cmp
ins
add
in
popa
sbb
pop
mov
push
push
shl
push
gs
mov
dec
push
shl
or
jl
shr
xor
adc
jl
mov
sub
add
call
pop
jle
mov
or
pop
adc
pop
enter
call
inc
adc
adc
adc
call
jle
cmp
pop
jne
(bad)
mov
mov
pop
xor
push
adc
add
add
aad
or
xchg
jns
aad
adc
xchg
retf
xchg
or
sbb
jae
dec
call
adc
xor
adc
xor
sub
rol
je
mov
pusha
jae
adc
inc
mov
adc
mov
jo
adc
dec
mov
loopne
or
in
movs
push
leave
cmp
push
nop
mov
aam
sysexit
ds
adc
mov
sbb
or
je
add
lock
xor
je
cmp
ins
or
or
dec
jecxz
fistp
jg
dec
ret
mov
and
xchg
inc
fcomp
xchg
pushf
loop
mov
inc
or
or
mov
mov
fsubp
push
rcl
jecxz
or
adc
popa
js
inc
add
mov
xor
mov
and
jg
enter
sbb
mov
push
push
movs
jb
add
inc
xchg
or
xor
fist
adc
movs
add
adc
or
bound
dec
sbb
movs
test
loopne
mov
call
lds
cmp
jo
sbb
movs
and
fild
adc
push
push
xor
mov
icebp
ins
or
mov
sbb
push
test
ja
add
adc
mov
sub
and
push
sub
lock
jl
push
push
push
js
xchg
push
dec
dec
inc
jg
in
xchg
sbb
cmp
xor
aam
dec
mov
test
cmp
pop
xchg
lock
adc
xor
lea
mov
xor
adc
sbb
mov
sbb
daa
and
loopne
sbb
sbb
call
mov
test
mov
adc
adc
nop
sbb
jge
xor
sbb
push
push
cmp
popf
and
rol
jmp
ret
lahf
shr
ins
cmp
das
sahf
nop
cmp
push
(bad)
sub
inc
xlat
shl
pop
jae
mov
pusha
cld
add
sbb
pop
int
out
mov
and
iret
ret
pop
arpl
jne
or
shr
in
jmp
push
sbb
cmp
pop
das
fimul
adc
hlt
clc
inc
push
inc
jmp
xchg
sub
sbb
sub
lock
jo
push
imul
mov
fdivr
(bad)
out
test
adc
cmp
into
and
xor
movs
xor
xchg
imul
cwde
daa
and
jbe
dec
jle
(bad)
push
and
sbb
cld
dec
test
xor
shr
outs
add
xor
jmp
mov
daa
add
outs
(bad)
outs
push
js
push
jne
aaa
and
sbb
sahf
push
sbb
sti
add
pop
je
das
xor
dec
xor
or
sub
int
sbb
push
ss
sti
add
ret
inc
lods
es
xor
adc
jge
imul
mov
sbb
mov
xor
cwde
cdq
pop
ret
jne
or
add
xor
and
mov
xor
je
push
inc
xor
or
push
call
das
inc
mov
cs
and
cwde
(bad)
shl
and
xchg
add
into
(bad)
popa
pop
cmp
or
stos
aas
or
mov
test
nop
mov
mov
lahf
ret
lea
leave
and
dec
xchg
add
nop
popa
daa
dec
mov
add
add
fs
push
add
add
xchg
add
inc
xchg
sub
iret
pushf
cdq
push
mov
pusha
loope
xchg
mov
dec
adc
jne
or
(bad)
jo
mov
repz
test
mov
xor
sub
xchg
fld
(bad)
popa
or
inc
ficomp
stos
add
jae
fldenv
scas
inc
leave
test
push
ins
lods
xchg
fisttp
add
dec
jae
adc
cmp
mov
pop
push
mov
jl
add
gs
jae
loopne
mov
js
adc
push
pop
dec
arpl
sbb
or
push
pusha
jecxz
loopne
sbb
adc
lock
mov
jns
sub
jl
iret
mov
mov
push
cmp
jbe
nop
hlt
fidivr
cwde
push
mov
add
(bad)
pop
add
pop
dec
arpl
dec
dec
movs
or
ror
mov
pop
or
cmp
jg
in
push
adc
inc
mov
and
ja
or
add
mov
add
and
sub
cwde
dec
int
sub
mov
fisttp
data16
dec
add
add
cmp
jg
enter
cmp
jl
add
or
sbb
or
add
nop
or
mov
sbb
scas
mov
std
jg
mov
cmp
pop
cmp
adc
add
push
jmp
dec
add
cmps
xchg
mov
fist
adc
inc
mov
xor
and
movs
pop
cmp
dec
mov
or
xchg
dec
or
adc
lea
cmp
sub
and
pop
and
rcl
add
in
jg
or
sub
push
inc
add
das
fild
mov
cld
push
xor
mov
add
cmp
jmp
(bad)
and
sbb
adc
push
mov
or
adc
sbb
sbb
jne
mov
mov
mov
stos
lahf
jp
jp
adc
dec
xor
sbb
ss
repnz
cmps
test
add
sbb
sar
clc
daa
add
es
xchg
test
or
push
or
lea
cld
jmp
dec
sbb
adc
add
mov
rcr
shl
inc
push
mov
push
outs
leave
mov
sub
test
mov
pop
aas
mov
inc
inc
lea
jmp
add
loopne
imul
sub
xchg
test
add
leave
cwde
sbb
push
mov
or
(bad)
enter
jnp
call
push
xchg
add
xchg
mov
jb
into
sar
sahf
fs
push
out
es
adc
jb
inc
add
push
sbb
or
push
mov
xchg
sbb
add
ins
mov
and
and
pop
inc
lods
cmps
test
daa
in
inc
adc
xor
cs
lds
dec
and
dec
nop
test
in
pop
enter
or
jb
das
dec
and
dec
sbb
mov
pop
inc
push
outs
mov
push
js
adc
inc
aas
dec
pop
enter
push
and
mov
std
out
lock
adc
and
sub
push
sub
push
imul
jp
mov
add
enter
lahf
movs
fild
outs
push
add
pop
jmp
xor
xchg
dec
rol
or
add
lods
fistp
push
or
push
xor
pop
push
sbb
sti
pushf
pusha
xchg
cmps
or
movs
inc
sub
pop
leave
(bad)
sbb
adc
inc
and
cmp
mov
add
cmp
sub
dec
loopne
repz
fsub
inc
pop
pop
cmp
push
or
xor
icebp
or
bound
rcl
movs
xor
xchg
adc
(bad)
movs
iret
test
jl
ins
push
ror
movs
or
pop
cmp
sub
cwde
shl
xor
mov
inc
push
inc
inc
pusha
mov
or
and
cwde
rcr
sbb
stos
mov
aas
or
and
popa
idiv
adc
add
jmp
fcom
leave
imul
cmp
movs
dec
adc
aas
adc
jb
add
cld
clc
cmp
je
(bad)
retf
lea
add
imul
fmul
push
inc
sbb
js
shl
or
or
movzx
inc
fnstsw
or
test
int
sub
sbb
mov
adc
push
xor
sub
pop
jne
ret
or
push
test
xor
add
cmp
ss
ret
xor
lea
xchg
test
pop
adc
push
(bad)
jle
inc
sub
fisttp
(bad)
push
(bad)
loopne
pop
out
shl
and
mov
mov
inc
pop
or
pop
loop
add
push
jge
xor
jl
add
push
and
hlt
rcl
sbb
inc
lods
(bad)
inc
mov
mov
xchg
inc
test
cmp
test
sub
sbb
adc
clc
stos
push
sub
pusha
or
mov
pop
outs
fs
sbb
test
add
sbb
sbb
jg
inc
sub
cmp
outs
adc
xor
xor
call
mov
imul
jb
clc
pop
push
mov
or
frstor
or
xor
sbb
icebp
jmp
adc
mov
es
mov
push
gs
jg
fsub
cmp
ja
stos
mov
loop
stc
repnz
sbb
nop
icebp
mov
inc
fisttp
dec
jne
sub
ret
stos
repnz
push
push
outs
test
cmc
push
je
loopne
and
xchg
add
ror
pusha
sbb
call
push
xor
daa
jae
sbb
mov
pop
push
test
nop
push
pop
je
ins
push
push
sub
push
mov
adc
pop
pop
and
dec
or
add
ins
sub
jp
xchg
push
mov
mov
add
jecxz
inc
inc
sbb
pop
fbld
rcl
adc
mov
pop
inc
add
or
pusha
jne
inc
fild
xchg
push
cdq
xchg
pop
push
into
sbb
inc
rcl
or
adc
fild
and
jo
cmp
push
mov
lock
push
push
mov
bound
jns
clc
pusha
sub
add
pop
pop
sar
aam
(bad)
nop
retf
sub
xor
xchg
pop
adc
sub
jno
inc
es
add
shl
call
cmp
add
inc
xor
leave
leave
rol
xchg
pop
pop
or
lods
and
or
jo
push
sbb
outs
inc
sub
ins
mov
dec
clc
leave
push
pop
or
out
mov
sub
push
jmp
(bad)
mov
loopne
pop
mov
add
or
loope
xorps
bound
cs
sti
hlt
arpl
or
or
inc
pusha
push
cmp
cmp
push
xor
fisubr
push
pop
push
mov
test
or
sub
pop
or
or
jo
add
jo
pop
sub
bound
push
mov
inc
data16
pop
cs
gs
or
in
pop
jge
push
cmp
imul
sar
bound
add
or
sub
aam
shl
push
in
rcl
xor
and
push
aaa
xor
or
adc
in
je
rcr
dec
jne
mov
pop
mov
mov
pop
js
jne
pop
inc
cwde
mov
fild
jae
push
aas
or
into
fist
repnz
shl
loopne
jge
adc
jmp
adc
in
or
cwde
cs
pop
adc
or
push
mov
mov
fistp
sub
adc
dec
je
(bad)
and
das
or
and
adc
ja
and
jnp
mov
loopne
xchg
mov
mov
xchg
sub
inc
fist
cmps
dec
shl
inc
and
push
mov
adc
scas
inc
mov
test
daa
lea
ret
adc
xchg
mov
push
sbb
mov
sbb
cmps
and
lock
adc
rol
mov
and
mov
add
push
ror
add
ror
push
push
sahf
and
mov
aam
sbb
push
or
dec
add
sbb
pop
mov
bound
popf
imul
add
syscall
xchg
hlt
cmp
push
cld
dec
add
ret
rcl
adc
add
aam
adc
push
data16
fucom
les
popa
pop
or
pop
pop
mov
shr
aam
or
add
mov
jne
add
push
or
pop
rcl
inc
cmps
test
dec
pop
mov
adc
push
xor
outs
movs
fisub
push
dec
fwait
add
mov
mov
pop
sub
or
sub
pop
dec
in
push
jo
sub
out
sub
and
mov
inc
xchg
add
inc
fmul
mov
pop
push
add
test
shl
add
call
add
aas
and
lods
js
inc
mov
xchg
loop
sbb
iret
nop
fcomp
setl
fistp
adc
and
or
or
and
shl
lods
jnp
inc
mov
and
mov
cmp
and
xchg
push
scas
adc
lods
add
xor
sbb
jne
push
mov
sub
les
xchg
adc
(bad)
dec
test
sbb
pop
or
pop
or
sub
call
in
sub
sbb
sbb
pop
push
push
dec
or
enter
mov
sbb
or
sub
sbb
inc
call
cmp
nop
dec
fistp
sbb
mov
sbb
push
in
sbb
sbb
mov
dec
or
sbb
mov
push
iret
or
add
add
inc
fcomip
pop
sub
mov
aas
add
inc
cmp
sub
push
hlt
cmp
aam
cli
dec
hlt
mov
add
sti
rcr
test
add
xchg
add
dec
test
pushf
push
add
mov
and
push
sub
pop
sbb
push
add
sub
xor
scas
loopne
adc
in
rol
adc
mov
mov
dec
push
fadd
inc
dec
lea
aaa
les
pop
push
mov
out
jl
mov
inc
or
and
xor
jmp
sub
clc
pop
push
mov
mov
dec
or
or
add
push
and
and
mov
add
push
jo
inc
add
dec
cmp
push
sbb
cmc
add
inc
in
imul
sub
xor
outs
sbb
inc
sbb
dec
add
hlt
mov
movs
mov
inc
sub
fild
adc
loope
ret
push
and
pop
arpl
push
loopne
xchg
cmp
lods
jb
movs
pop
jnp
cmp
xchg
inc
cmp
sub
cmp
push
sub
jae
and
xlat
add
mov
add
and
sbb
rol
inc
loop
jmp
xor
fldcw
xchg
sbb
and
pop
push
cmp
and
mov
enter
addr16
dec
hlt
xor
add
and
xor
inc
cmp
and
dec
jns
and
xchg
inc
inc
mov
test
jmp
lahf
mov
pop
push
lahf
cmp
cmp
add
add
call
and
or
mov
ret
push
jl
cmp
or
xchg
xor
push
adc
test
retf
cld
add
mov
ror
lods
pop
fwait
cmp
add
add
or
pop
push
sbb
lods
jecxz
xor
cmp
inc
pop
fisub
sbb
add
push
push
adc
mov
xor
and
push
xchg
push
jnp
je
in
gs
inc
ja
add
push
cmovo
call
in
or
add
mov
pop
in
pop
cld
fist
xor
scas
or
mov
adc
fisttp
sahf
call
mov
fcom
mov
or
mov
rol
sub
mov
je
dec
or
or
(bad)
loope
or
ret
nop
push
(bad)
pop
jae
arpl
je
lock
jns
sahf
xlat
or
stos
iret
dec
cmp
xor
xor
jg
add
mov
ds
push
push
cmp
outs
loopne
dec
cmp
add
cmp
xor
cmps
dec
pop
add
cli
jne
mov
pop
enter
les
add
loopne
loopne
loope
leave
fwait
in
pop
pop
and
or
loopne
sub
lods
popa
in
cmp
inc
enter
imul
xchg
mov
nop
dec
loope
pop
fs
pop
out
sbb
mov
les
or
pop
or
jb
es
pusha
or
and
push
push
dec
popa
push
and
jb
push
adc
adc
dec
enter
ror
adc
inc
xor
sub
xor
xor
mov
add
pop
in
test
lds
or
add
dec
or
gs
inc
or
(bad)
cmp
add
and
cs
pop
sbb
lock
xchg
xor
inc
ret
push
sub
and
mov
dec
adc
sbb
and
sti
cld
add
lea
mov
js
inc
fs
or
inc
mov
or
arpl
jne
sbb
cs
xlat
push
test
inc
jle
or
imul
adc
or
add
adc
cs
pop
sub
je
add
cmp
cmp
mov
je
cmp
adc
sahf
mov
push
or
loopne
xor
and
int3
je
lock
(bad)
pop
test
or
movzx
ja
shr
push
dec
cmp
jno
lahf
adc
add
out
loopne
loopne
lods
adc
lds
adc
fadd
je
dec
pop
push
mov
add
inc
jg
lahf
cmp
or
or
add
jmp
enter
call
js
pop
adc
js
or
sbb
add
and
pop
lock
test
rcl
daa
lock
pop
repz
add
and
dec
ds
in
xchg
jl
xchg
fisttp
mov
sub
add
sbb
pop
test
inc
sbb
pop
in
pop
cmp
push
imul
jo
push
mov
sbb
test
dec
stos
sub
or
mov
mov
or
xor
es
push
dec
cmp
lahf
jg
aad
inc
lahf
push
jns
cwde
call
in
inc
push
int
inc
sub
inc
(bad)
arpl
movs
xor
test
sub
add
lods
jo
sub
mov
inc
popa
sub
cmps
push
rcr
inc
pop
adc
sub
add
lods
inc
pop
stc
dec
div
adc
stc
jp
dec
xor
sub
ss
test
dec
aam
push
test
xchg
mov
cld
sbb
loope
mov
or
inc
push
adc
and
cmp
xchg
outs
mov
sbb
lods
daa
loopne
pop
fcmovnbe
jp
call
test
cmp
jnp
retf
lock
ret
pop
imul
daa
sbb
mov
cmp
jmp
pop
les
in
sar
mov
clc
cmp
inc
or
push
or
lea
dec
jnp
push
sub
adc
dec
mov
pop
inc
mov
movzx
add
rcl
or
or
add
or
or
add
sar
aam
add
pop
push
lock
sar
js
aad
pop
rol
enter
add
xor
mov
lods
cmovns
add
fldenv
push
call
mov
mov
adc
out
xchg
ss
mov
lods
movs
adc
cwde
pop
nop
xchg
nop
mov
jl
jae
pop
dec
mov
pusha
mov
enter
inc
push
push
push
inc
lea
xor
and
xor
enter
mov
pusha
aam
(bad)
adc
and
xor
pusha
add
pop
pop
sub
pop
(bad)
cmp
pop
mov
mov
jns
rol
xor
and
dec
stos
push
xor
call
push
push
sar
cdq
push
sbb
bound
dec
jo
or
xor
ds
sbb
lods
ss
or
cwde
and
nop
aaa
or
mov
mov
adc
mov
inc
adc
rcr
test
scas
pop
mov
lock
push
imul
mov
cmp
daa
add
ss
mov
lea
inc
lahf
sbb
xor
or
xchg
fild
and
(bad)
push
jl
add
pusha
sub
xchg
push
add
push
sbb
cmp
mov
add
add
sub
iret
inc
and
inc
or
xchg
clc
xor
jnp
add
je
cs
das
pop
mov
or
daa
inc
cdq
jge
mov
push
pop
dec
in
rcl
sbb
pop
xor
arpl
(bad)
(bad)
enter
and
or
pop
pop
rcl
sbb
sahf
inc
add
test
mov
dec
and
cmp
fs
mov
inc
adc
iret
and
adc
push
inc
addr16
pushf
fisub
sbb
sbb
and
xchg
addr16
pusha
je
and
mov
jl
adc
jmp
mov
pop
(bad)
or
dec
xor
xchg
das
jne
rcr
xor
scas
push
jnp
xor
int
call
mov
push
int3
mov
or
push
dec
jb
xchg
rol
addr16
pop
mov
mov
pushf
xchg
add
jo
push
push
nop
hlt
push
addr16
rcl
gs
fild
sbb
cmp
lock
cmp
stos
cmp
and
jne
mov
scas
jp
sbb
add
xchg
ins
or
xchg
inc
mov
xor
pusha
pop
nop
sbb
sbb
aam
pusha
add
add
push
cmp
(bad)
test
push
inc
jb
(bad)
das
sub
shr
jae
and
(bad)
mov
ror
lds
nop
dec
push
inc
push
and
pop
sub
(bad)
push
inc
sub
jmp
sbb
and
mov
mov
jo
cmp
lods
dec
add
xchg
rcl
xchg
out
sbb
lea
outs
pusha
xor
je
inc
or
sbb
mov
mov
sbb
(bad)
xor
pop
aad
dec
sub
sbb
pop
dec
jno
(bad)
std
push
add
push
mov
push
mov
in
and
out
(bad)
fcomp
int3
imul
popf
in
pop
adc
ret
mov
adc
pop
rcl
popf
xor
fdivp
sbb
imul
jge
pop
jmp
inc
clc
or
scas
fistp
js
or
push
out
test
sbb
push
mov
ret
or
inc
sub
cmp
imul
push
push
pop
retf
(bad)
xchg
add
mov
lds
pushf
mov
ret
xor
adc
cmp
push
pop
dec
sub
inc
ja
loop
xchg
xor
pop
dec
adc
sub
lds
adc
dec
test
push
mov
add
pusha
retf
ret
push
sbb
mov
aad
add
loope
or
sbb
rol
mov
mov
mov
loopne
mov
xor
or
xchg
nop
loopne
jne
int
sar
loop
dec
lea
jp
push
adc
lea
pop
sub
nop
clc
inc
mov
add
or
jge
int3
xor
jmp
sbb
pushf
push
bts
cmps
ins
dec
push
data16
inc
mov
jg
push
cmp
mov
es
shr
out
mov
and
xchg
mov
inc
jl
adc
rol
push
push
call
(bad)
sub
dec
sbb
rol
shl
fst
and
mov
icebp
movs
in
sahf
out
mov
shr
jecxz
(bad)
xor
(bad)
cwde
fwait
push
ror
mov
mov
push
les
sbb
mov
jl
dec
movs
jge
sbb
fld
cmps
mov
or
or
test
push
adc
mov
xchg
icebp
or
out
dec
and
ret
jl
jl
xor
fs
mov
or
je
inc
je
xchg
(bad)
push
inc
mov
ja
mov
cwde
or
pop
xor
jno
ret
popa
cwde
sbb
inc
sbb
adc
test
call
cld
dec
cwde
sbb
cld
(bad)
or
lods
cwde
and
hlt
gs
inc
out
cmps
fwait
pop
pusha
sbb
adc
and
or
sub
mov
push
add
dec
and
inc
scas
shl
into
inc
add
mov
dec
dec
pop
sub
push
rcr
push
jl
pop
cld
cmp
or
or
or
xor
jb
iret
clc
pop
cld
aad
repz
push
push
(bad)
xchg
les
std
or
cmp
mov
popf
push
pop
fst
(bad)
loope
loop
aas
(bad)
test
mov
push
lea
pop
cld
imul
push
adc
jno
adc
adc
inc
(bad)
fldcw
lods
jne
mov
ss
push
mov
sbb
mov
ins
movs
pop
ucomiss
pop
sub
add
aas
push
adc
and
dec
pop
inc
dec
mov
xchg
ror
pop
mov
inc
jno
mov
leave
jae
add
or
add
mov
lea
out
out
pushf
add
rcl
push
dec
rcr
pop
das
data16
cmps
add
or
add
lahf
repz
add
cmp
shl
aas
or
and
fisttp
(bad)
dec
cmp
and
movs
fild
pusha
push
fsubrp
cmp
push
jl
jl
jae
pop
add
mov
movs
push
jecxz
push
sbb
add
inc
int
xchg
cld
cmp
jg
pop
mov
ffree
fwait
jge
mov
inc
add
push
test
int
lock
arpl
xor
loop
add
fisub
loopne
test
and
test
cmp
or
(bad)
fcmovu
sub
nop
pop
jae
cmp
and
xor
xor
jno
mov
jo
jnp
mov
stos
xchg
sbb
cmp
add
adc
and
sub
sbb
mov
push
test
lock
inc
ficom
lea
nop
mov
sbb
xchg
push
xchg
retf
movs
inc
jl
cwde
test
mov
pop
dec
pushf
cs
in
aam
fadd
sub
(bad)
jo
movs
movs
test
les
inc
push
loope
jo
lods
or
das
enter
mov
arpl
dec
pushf
imul
dec
pop
adc
mov
mov
sub
add
not
loop
addr16
mov
mov
mov
lahf
sbb
lea
test
and
sub
ror
cmp
inc
cmp
sbb
add
dec
ror
dec
xchg
ins
xchg
ret
popa
dec
dec
sbb
or
and
clc
adc
inc
pop
clc
shr
sub
sub
and
cmp
fs
sub
inc
sar
adc
sbb
ds
sub
jmp
sbb
dec
add
outs
mov
shl
popf
mov
sub
out
or
lock
mov
sti
push
je
jmp
xchg
sub
or
das
pop
cs
inc
jp
push
xor
sbb
xor
sbb
xor
(bad)
xchg
or
sub
js
jo
push
(bad)
cwde
cmp
mov
and
out
xor
retf
and
fisubr
cmp
mov
dec
sahf
push
push
retf
push
or
or
ds
je
xchg
push
enter
pop
sub
enter
enter
inc
inc
inc
add
inc
push
pop
test
inc
jb
inc
mov
xchg
pop
enter
inc
add
dec
and
inc
or
adc
sahf
inc
inc
xchg
dec
cs
inc
inc
and
sbb
stos
adc
mov
dec
ret
enter
inc
test
inc
inc
xchg
dec
xor
inc
inc
inc
cmp
leave
inc
pop
mov
in
sub
inc
mov
inc
cmp
mov
inc
inc
cmp
jl
inc
fld
dec
inc
inc
jbe
adc
hlt
jae
call
out
sbb
mov
pop
or
pushf
dec
add
inc
inc
inc
shl
test
scas
loopne
jl
or
(bad)
(bad)
mov
jnp
add
push
lock
xchg
push
cmp
jae
mov
or
inc
stos
and
jo
sub
pop
push
rol
add
lock
cmp
inc
pop
mov
mov
mov
xchg
cmp
mov
pop
mov
mov
xor
inc
or
adc
pop
pop
cmp
sub
in
pop
je
nop
rol
(bad)
mov
jb
data16
add
sbb
pop
push
or
aas
jmp
rol
mov
sbb
sahf
or
mov
sbb
sub
leave
xchg
cmp
icebp
push
cmp
js
and
pop
js
add
shl
out
ins
cmp
mov
inc
sbb
or
push
and
pop
push
cwde
mov
mov
or
inc
xchg
cmp
push
push
pop
les
xchg
call
popa
push
pusha
popa
inc
shl
scas
push
shr
add
sbb
movs
mov
div
adc
pop
inc
rol
mov
mov
adc
mov
sub
push
pushf
inc
ret
fs
retf
add
not
ret
add
cdq
(bad)
je
out
mov
mov
xchg
push
clc
mov
das
sbb
cmp
ret
je
ret
xchg
adc
cmp
mov
mov
add
fimul
push
adc
ja
pop
in
adc
pop
in
push
loope
push
push
pop
lea
xchg
mov
mov
stos
add
mov
imul
inc
xchg
pop
mov
es
sti
pop
xchg
or
pop
pushf
cs
ss
shl
mov
pop
xchg
lods
xor
mov
xchg
je
cdq
ret
sub
xchg
push
sbb
mov
mov
cld
(bad)
sub
leave
pop
nop
cmp
push
das
pop
arpl
fsub
ret
sbb
adc
mov
cmp
aas
cmp
jecxz
and
fdiv
and
add
hlt
in
loope
mov
xor
mov
popa
lock
fwait
aaa
push
or
inc
mov
sub
stos
xchg
lea
fs
push
popf
adc
cmps
imul
mov
add
into
adc
aad
xchg
jmp
neg
shl
lea
pop
inc
jne
mov
addr16
cmps
sub
push
pop
inc
sbb
dec
pusha
xchg
out
inc
in
mov
fistp
pop
add
adc
loopne
add
adc
inc
push
ss
dec
or
push
mov
pop
push
sbb
pop
aad
adc
mov
add
and
shl
lea
jmp
jae
mov
(bad)
xor
and
or
inc
inc
sub
or
pop
fild
sbb
in
mov
cmp
xor
mov
inc
push
imul
inc
cmps
inc
inc
stc
or
xchg
mov
pop
xchg
mov
in
or
and
mov
inc
inc
push
xor
inc
inc
inc
pop
imul
call
push
dec
xchg
lea
repz
sbb
inc
inc
xchg
and
and
fdiv
sar
and
jnp
push
popf
mov
nop
(bad)
cmps
inc
nop
dec
cmp
inc
je
sbb
mov
stc
dec
xor
rcr
add
cmp
or
inc
movs
repnz
jae
add
jl
xor
sub
push
pop
xchg
sbb
js
push
aam
adc
pop
dec
pop
stos
pop
movs
cmp
cmp
jg
push
or
rol
dec
loope
jae
mov
xchg
ins
movs
inc
je
or
out
inc
pop
mov
arpl
push
jge
xchg
cld
ror
inc
(bad)
sbb
dec
jg
das
ror
xor
inc
shr
jne
popf
push
ret
loopne
mov
push
pop
jg
imul
and
dec
in
add
dec
int
pop
shl
jg
cmp
lods
outs
popf
mov
lds
mov
popa
and
mov
dec
call
xor
pop
div
jb
dec
add
lock
ret
jno
dec
fidivr
movs
mov
mov
adc
adc
add
sub
dec
xor
xchg
add
jae
pop
xor
cmp
adc
fcmovu
xor
or
mov
cmp
les
pusha
rcl
mov
add
adc
test
leave
mov
les
fiadd
fisub
sahf
push
sub
adc
test
rcl
jge
mov
js
mov
js
xchg
sub
or
sahf
mov
mov
bound
mov
lds
iret
add
shr
adc
xchg
in
(bad)
or
jne
scas
push
sbb
dec
int3
call
sbb
or
mov
cmp
dec
les
jmp
push
dec
sbb
dec
add
and
es
cli
and
cmp
pop
dec
fcmovne
mov
or
adc
imul
mov
mov
add
add
nop
mul
pop
push
inc
add
cli
push
clc
and
popw
inc
add
push
add
jae
dec
add
mov
push
rcr
inc
ret
dec
jmp
movs
fadd
ret
xchg
add
das
add
xor
push
cmp
(bad)
fwait
jns
xor
or
int3
xor
xor
enter
add
and
pusha
inc
js
scas
inc
and
loope
pop
pop
scas
sar
and
rcr
out
or
and
sar
mov
sub
mov
push
add
fadd
ja
add
jnp
cmps
sbb
add
jne
jge
(bad)
sub
imul
shl
sub
mov
test
enter
cmp
aam
push
xchg
sub
cmp
retf
push
pop
mov
mov
dec
rcl
add
or
mov
xor
mov
mov
mov
mov
js
push
test
fmul
mov
adc
adc
xor
mov
push
jmp
and
push
inc
sbb
sbb
stc
push
int3
in
mov
mov
push
jne
test
pusha
mov
sub
add
repz
ficom
test
and
stc
pop
cmp
rcl
mov
pop
and
sub
ss
popf
cmp
xchg
and
pop
sbb
outs
rcr
rol
adc
push
mov
mov
or
fiadd
into
ins
popf
test
or
(bad)
int3
cli
pop
xchg
sbb
add
xchg
pop
add
push
sub
sub
test
adc
ins
mov
shr
js
adc
pushf
sbb
xchg
pusha
int
movs
(bad)
jnp
in
jl
or
sbb
popf
mov
js
pushf
call
xchg
or
mov
cmp
mov
or
add
or
and
add
add
pushf
xchg
pushf
jle
cmp
mov
pushf
mov
pop
sub
adc
in
mov
xor
add
call
in
lea
dec
outs
fild
cmp
test
pop
lahf
pop
inc
and
xchg
mov
test
inc
and
rcl
cmp
outs
int
fcom
adc
mov
sub
mov
aas
mov
mov
fnsave
push
in
push
out
lods
sbb
ror
mov
cmc
lock
inc
sub
push
pop
push
call
or
dec
pop
push
(bad)
mov
push
or
and
adc
dec
aaa
addr16
xor
xchg
xchg
push
xchg
mov
int3
xchg
out
jne
and
ret
retfw
pop
sbb
jmp
aam
dec
shl
push
or
sub
je
xor
mov
sti
add
sub
pop
pop
sub
push
pop
add
in
bound
dec
mov
cmps
mov
adc
loopne
lods
stc
jns
cmc
mov
test
add
clc
loopne
test
jo
(bad)
mov
or
inc
or
dec
or
inc
dec
aam
out
xlat
mov
pop
adc
and
outs
fimul
push
hlt
int3
xor
inc
mov
fnstcw
push
ins
inc
sub
call
rcl
add
je
add
or
adc
adc
popa
jne
jno
add
add
or
fmul
adc
stos
and
fmul
or
jle
cld
mov
rcl
sbb
or
fadd
iret
and
dec
or
call
push
mov
cs
and
push
popa
pushf
xchg
in
sbb
mov
cmp
cs
mov
dec
jne
add
and
xlat
sbb
xchg
(bad)
je
or
mov
pop
push
add
mov
cwde
adc
push
adc
loopne
movs
test
mov
push
lods
das
push
jmp
sub
imul
xor
mov
imul
in
jge
outs
paddusb
mov
xor
popf
lds
movs
pop
ret
fistp
xor
je
push
and
enter
or
sub
sbb
pop
les
jl
sbb
add
aad
(bad)
pushf
push
cmp
adc
or
pop
mov
and
arpl
mov
aad
stos
into
add
ss
mov
jb
add
pusha
adc
add
mov
or
lea
mov
lahf
xor
adc
cmps
fsubr
arpl
xchg
and
mov
scas
push
(bad)
pusha
mov
into
inc
add
jmp
ins
ja
jns
or
mov
repz
ror
aas
jno
sub
loop
aad
outs
aam
loop
cwde
dec
sbb
test
pop
iret
pop
(bad)
popf
fst
jmp
sub
or
(bad)
shl
ins
adc
test
(bad)
sbb
and
cmp
shr
inc
iret
cdq
mov
sub
(bad)
(bad)
jmp
outs
push
inc
fcmovnb
sbb
dec
dec
out
push
xchg
addr16
(bad)
fcmovb
pop
repnz
call
xchg
push
sbb
(bad)
shl
imul
not
in
or
das
add
fbld
(bad)
or
xor
add
sbb
arpl
(bad)
mov
xchg
iret
jle
test
push
push
add
lea
lea
add
sub
pop
or
cmp
cmp
xchg
add
dec
xor
out
shl
pop
and
mov
and
or
sbb
or
sub
sub
mov
movs
or
pop
jno
xlat
sub
shl
test
adc
and
stc
dec
and
mov
and
mov
popa
outs
rcl
sbb
stos
adc
lock
push
add
xchg
jno
pop
push
sar
and
inc
jmp
aam
xchg
sbb
ret
jge
loope
mov
mov
add
retf
cmp
mov
add
and
dec
push
push
ror
loopne
push
scas
or
cmp
outs
sub
add
nop
xor
sbb
xchg
push
jb
add
imul
push
ror
aam
add
pop
fadd
fmul
cdq
pop
dec
jl
sti
call
popf
popa
jb
or
fcomp
add
xchg
inc
es
add
mov
push
inc
xchg
mov
inc
adc
jo
push
mov
cmp
cs
fs
mov
dec
imul
xchg
xor
xchg
mov
push
xchg
xchg
xor
add
or
sti
das
or
ins
xchg
cmp
xor
in
mov
test
pop
push
push
sub
push
daa
dec
xor
stc
pushf
das
ret
lods
out
or
sub
jo
push
or
loope
mov
mov
iret
into
cmps
lock
cmp
mov
xlat
xchg
mov
pusha
retf
push
or
fsub
lods
ins
sar
adc
mov
xchg
add
ret
pop
(bad)
pop
and
cmp
jo
xchg
cmps
jns
dec
rcl
xchg
or
or
dec
pop
nop
ficomp
rcl
int3
pusha
xor
and
jbe
and
scas
add
out
sbb
mov
push
fld
inc
(bad)
jo
test
xchg
repnz
dec
xchg
push
xor
sti
xchg
es
and
pop
adc
mov
test
dec
in
fnstenv
das
pop
jp
add
lea
cmp
sar
cmps
mov
push
sub
xlat
cmp
out
xchg
cmp
pop
retf
or
aam
sub
xchg
lods
int3
(bad)
aad
rol
lods
mov
dec
sub
dec
lahf
fistp
and
xchg
cmp
jmp
sar
and
das
adc
inc
and
and
inc
pop
js
dec
cmp
and
imul
jbe
cs
jae
push
setge
call
push
or
test
cli
add
xchg
add
mov
mov
push
cdq
jo
(bad)
dec
cmp
je
or
je
mov
or
jl
inc
or
jbe
or
xchg
loopne
call
call
add
daa
enter
cmp
mov
push
pop
jno
sub
xchg
enter
jp
inc
imul
and
rol
and
jbe
test
movs
inc
mov
adc
in
push
retf
pop
test
cld
xchg
lods
and
pop
cmp
sub
int
shr
sub
stos
xor
adc
ss
push
mov
cld
pop
adc
dec
call
jb
mov
push
fcom
add
dec
fcomp
pop
out
(bad)
sahf
and
add
int3
dec
pop
out
inc
adc
add
sub
xor
cs
(bad)
mov
dec
jge
sbb
mov
inc
push
aaa
loopne
inc
into
cmp
and
push
imul
xchg
xchg
imul
jmp
in
add
in
loopne
(bad)
aam
cdq
jno
jbe
pop
shl
pop
leave
mov
sti
aas
mov
stc
lea
mov
push
nop
add
(bad)
loopne
cmp
or
add
and
or
sub
fdivr
adc
adc
in
repz
mov
nop
adc
xchg
out
mov
in
movs
daa
retf
jns
jae
jmp
push
test
std
sar
inc
xchg
sbb
addr16
ins
jae
lea
adc
js
and
push
jmp
and
jl
mov
pop
repz
inc
ds
add
mov
cmp
or
loope
jnp
ds
sahf
imul
push
enter
sbb
int
repz
cmpps
scas
dec
clc
push
hlt
and
outs
aas
mov
rcl
adc
push
push
sub
mov
in
add
add
push
mov
repnz
xchg
test
add
or
dec
jge
mov
and
push
icebp
mov
sub
pop
and
(bad)
call
test
inc
adc
enter
xchg
dec
sbb
aas
scas
sbb
inc
cmp
and
aas
xchg
inc
fisubr
pop
hlt
xchg
adc
xor
scas
mov
out
call
push
hlt
js
outs
jl
int3
mov
xor
push
movs
push
inc
push
sub
sbb
fld
cmp
mov
or
imul
push
retf
xchg
(bad)
loopne
ins
add
sub
adc
adc
dec
aaa
and
jne
mov
jg
arpl
mov
and
loop
push
sbb
mov
je
jecxz
nop
mov
retf
js
pusha
es
xor
imul
cmp
enter
ja
xor
xor
sidtd
retf
mov
push
in
inc
push
fisttp
(bad)
and
ds
lds
mov
mov
pop
mov
in
and
mov
stos
fdiv
mov
mov
dec
int
aad
call
add
add
add
pop
cmp
dec
jle
ja
sbb
pop
dec
fs
mov
push
xchg
jg
pop
or
loop
add
and
lea
dec
or
add
adc
fidiv
sub
jl
stc
clc
or
push
push
push
stc
sbb
inc
push
push
adc
gs
push
or
ins
rcl
call
nop
push
imul
xor
sub
sbb
sbb
mov
add
js
call
and
adc
sar
pushf
adc
mov
adc
in
rcr
push
(bad)
dec
add
test
inc
loop
fild
pop
mov
fcom
add
adc
fist
or
imul
sbb
jle
test
mov
or
pop
adc
(bad)
retf
adc
add
cmp
ja
ins
icebp
lods
add
xchg
inc
push
stos
aad
or
dec
add
loope
adc
add
mov
jecxz
pusha
ins
dec
or
push
fs
add
add
xchg
cmp
stc
test
sbb
mov
cmp
pop
cmp
retf
pop
cmp
add
test
mov
enter
adc
data16
jp
arpl
retf
adc
lock
iret
inc
inc
ss
pop
and
ret
jmp
nop
add
sub
dec
mov
fcomp
aam
(bad)
or
and
dec
enter
pop
add
or
inc
loopne
test
xor
lds
and
or
mov
inc
mov
push
cmps
mov
lock
lods
and
mov
mov
je
dec
add
ficomp
mov
sub
xor
test
cld
sub
dec
push
iret
fs
add
push
or
mov
dec
or
push
add
out
mov
test
add
cli
push
add
jo
cmp
mov
sbb
inc
and
sub
stos
loopne
gs
mov
cmp
or
mov
cmp
dec
dec
aas
xchg
mov
pop
jp
jae
pop
in
push
mov
add
dec
or
iret
jl
adc
push
dec
and
sbb
iret
mov
or
mul
and
inc
cmp
jl
pop
sbb
pop
and
or
(bad)
sub
dec
jmp
dec
shl
dec
push
in
push
js
adc
adc
movs
jne
jle
into
ret
adc
bound
imul
jnp
push
out
inc
sub
inc
mov
or
mov
push
mov
inc
mov
test
cmp
pop
or
movs
add
sbb
ret
(bad)
push
sbb
add
add
loope
sbb
(bad)
fimul
clc
sbb
pop
push
pop
or
rcl
push
sub
push
(bad)
sub
jns
(bad)
out
pop
pop
pusha
test
pop
xchg
fs
mov
scas
dec
add
or
ja
aaa
mov
add
xlat
mov
pushf
retw
ins
add
push
add
jmp
inc
sbb
jg
inc
sbb
pop
mov
adc
lods
sbb
xchg
popa
xor
lods
clc
mov
push
outs
das
dec
or
loope
xchg
test
push
loopne
xchg
mov
adc
cmp
jl
inc
stos
add
ss
sbb
push
and
ror
jb
push
cmp
ficom
and
add
(bad)
mov
repnz
scas
sbb
mov
xchg
dec
push
inc
jmp
bound
add
or
mov
sysret
push
sub
and
mov
pop
call
sbb
pop
(bad)
sbb
mov
mov
inc
sub
fsub
lods
jmp
and
rol
les
js
xor
aam
popf
inc
adc
and
push
add
or
mov
sub
mov
jo
inc
adc
mov
popa
rcl
cs
fist
jmp
lea
pop
cmp
jl
push
dec
js
push
sbb
mov
scas
mov
hlt
(bad)
add
dec
pushf
cmp
call
pop
cwde
test
push
lahf
jmp
push
cmp
cmps
int3
out
pop
xchg
ret
(bad)
push
pop
push
add
test
jae
aam
sar
into
push
cld
mov
sti
or
or
cmp
lods
scas
pop
popa
int
add
lods
mov
add
shl
add
cmp
add
js
mov
push
mov
mov
clc
adc
push
and
mov
jns
mov
(bad)
push
mov
mov
nop
popa
xor
or
int3
xchg
adc
pop
das
rcr
or
test
add
dec
xchg
sub
mov
push
cwde
shr
pop
enter
cwde
arpl
mov
inc
sbb
add
rcr
dec
mov
mov
lock
or
mov
add
adc
clc
lock
push
add
sbb
clc
push
inc
pop
bound
je
add
les
jns
and
mov
pop
xchg
lahf
stos
test
adc
and
pop
pop
push
pop
mov
sbb
idiv
mov
jne
mov
rol
loopne
data16
data16
add
xor
pop
or
and
sbb
mov
dec
sar
inc
sbb
pop
add
(bad)
sub
daa
add
mov
adc
movs
ins
and
sbb
adc
cmp
dec
xlat
mov
dec
or
dec
inc
push
add
inc
sahf
dec
sub
inc
pop
xchg
xchg
pop
add
add
loope
gs
inc
mov
add
dec
lods
ret
mov
cwde
jno
cmp
adc
test
mov
dec
fnstsw
sub
adc
jle
loope
dec
mov
push
out
dec
or
push
push
xor
or
loopne
and
add
mov
or
int3
add
dec
inc
cmp
jne
hlt
add
push
add
int
push
dec
mov
popf
iret
jo
push
lock
adc
xor
add
bound
xchg
pop
call
sbb
add
xor
nop
add
dec
xor
add
les
push
pusha
and
dec
cmps
cld
es
dec
jnp
popa
iret
jecxz
push
push
mov
xor
adc
sub
xor
pop
and
pusha
icebp
jmp
add
movs
mov
lds
or
mov
pushf
dec
add
mov
sub
push
sbb
pop
lods
xor
push
movs
dec
push
xchg
test
mov
lods
test
pop
cmps
cmp
ins
push
ds
push
cmp
or
sbb
push
xor
and
(bad)
es
pop
jb
pop
adc
inc
mov
sbb
xor
rcr
pop
push
push
adc
mov
aad
int
jle
mov
enter
pop
cwde
push
call
pop
xchg
mov
push
popw
loop
sbb
fisub
xor
jl
mov
push
arpl
sub
or
inc
dec
je
pop
xchg
add
rcr
mov
loop
push
inc
jmp
ret
(bad)
jge
mov
shl
out
adc
lods
retf
cld
xchg
push
mov
pushf
fdivr
jp
pushf
mov
add
push
push
or
test
arpl
imul
mov
mov
push
sti
jl
jbe
mov
dec
(bad)
sbb
jmp
icebp
or
or
xchg
es
pop
leave
clc
rcl
daa
jo
or
test
test
jnp
or
and
add
adc
add
sub
add
push
lods
jnp
mov
dec
adc
xor
inc
cmp
in
int
test
and
or
inc
xor
add
jle
mov
ja
mov
imul
iret
cdq
adc
push
dec
jmp
dec
or
pop
movs
cmc
jb
sbb
dec
sti
bound
add
int3
inc
mov
(bad)
or
cmps
in
add
shr
fidivr
jb
nop
test
push
popf
push
push
mov
dec
dec
xchg
imul
and
cmp
or
orps
cmc
ret
and
add
(bad)
adc
(bad)
or
cmc
iret
cmp
dec
or
push
pop
push
lea
sub
push
jle
mov
add
in
jle
mov
push
xor
adc
sub
adc
pop
add
push
les
adc
add
int3
mov
add
push
dec
pop
aas
jae
dec
jb
clc
pop
in
pop
test
push
add
(bad)
aas
cmp
stc
cmp
add
dec
imul
cmovge
(bad)
mov
mov
pop
inc
cdq
mov
cmp
(bad)
js
aas
sub
push
jge
jnp
ret
xchg
or
movs
xchg
inc
pop
pop
bndstx
mov
aaa
xor
jo
pop
adc
push
and
xor
leave
mov
(bad)
and
jg
jg
sbb
(bad)
rcl
inc
or
or
and
fsubr
pop
jecxz
push
cmp
ja
lods
fild
inc
mov
ret
mov
hlt
nop
clc
add
adc
and
jb
pop
dec
pusha
add
sbb
fiadd
add
in
sbb
out
sub
mov
inc
ret
shl
pop
pop
dec
lods
nop
rcr
or
jmp
and
dec
inc
das
ins
pop
sub
xchg
(bad)
call
call
push
mov
out
jle
test
sub
jle
stc
or
pop
ja
fidiv
js
or
das
inc
sub
rol
jg
xor
inc
mov
fisubr
dec
jne
(bad)
jne
rol
das
lds
pop
rcr
loopne
jl
sar
movs
sub
jle
add
jae
xchg
mov
jmp
sub
pop
sub
cmp
aaa
in
push
jne
mov
cmp
jne
push
add
jne
sub
jne
shl
adc
popa
mov
sbb
ins
mov
loopne
or
pop
ficom
pushf
(bad)
inc
inc
sbb
mov
sub
lods
clc
into
mov
add
sbb
mov
ja
mov
je
sub
dec
rol
fs
push
or
jl
xchg
or
mov
mov
push
retf
inc
sbb
pop
lds
sub
and
leave
movs
or
les
push
push
dec
sbb
xchg
ins
add
dec
mov
popf
jns
aam
fmul
out
outs
jecxz
(bad)
or
pushf
aam
loopne
add
mov
call
mov
ss
mov
retf
pop
jp
std
pop
shl
aam
and
adc
ss
or
push
test
loope
mov
push
pop
addr16
cmp
repnz
movs
jno
outs
adc
ins
lea
sbb
and
js
xchg
outs
imul
xor
push
inc
test
jne
lahf
add
sbb
sub
test
xor
imul
repnz
jo
test
or
repz
test
inc
adc
push
pop
adc
jl
adc
test
fsubr
sti
mov
fwait
dec
push
fild
mov
pop
inc
jp
imul
xor
inc
or
sbb
sub
jns
sbb
inc
dec
inc
inc
cwde
dec
movs
sub
mov
dec
sbb
or
and
out
adc
and
sub
out
(bad)
and
jns
pushf
jns
jbe
push
das
andnps
fbld
fs
xor
mov
cmc
data16
mov
fdivr
int3
popa
inc
pop
xchg
rcr
fsub
cmp
inc
xchg
sahf
inc
or
nop
inc
cmp
mov
mov
push
movzx
sub
cwde
fnsave
dec
shl
mov
dec
mov
add
js
arpl
js
dec
movs
inc
add
pop
sti
jno
shl
hlt
sub
sbb
push
fimul
and
inc
add
or
clc
cmp
or
push
in
mov
clc
jmp
sar
fisttp
mov
jnp
sub
mov
imul
pop
adc
bnd
and
add
pop
lock
and
mov
lds
cmps
int3
and
cmp
inc
adc
mov
sub
add
scas
and
or
or
inc
mov
add
and
aas
mov
xor
jecxz
inc
call
sbb
movzx
call
add
not
and
mov
stos
ds
inc
pusha
and
jmp
pusha
adc
sbb
pushf
shr
nop
pop
adc
ret
cwde
nop
sub
cmp
add
jp
(bad)
enter
pop
jle
sbb
or
sbb
cmps
jmp
adc
mov
or
push
test
pop
or
mov
add
adc
shr
ficomp
pop
push
push
fld
arpl
das
or
lods
(bad)
leave
inc
es
aam
pop
add
dec
xor
cmp
sahf
out
xchg
out
push
test
jns
out
fs
dec
fwait
cmp
rcr
jmp
push
inc
add
mov
lock
lock
ret
call
out
push
lock
and
sti
add
ret
add
je
ss
dec
push
sub
gs
inc
push
jmp
or
loope
imul
xchg
cmp
ja
test
stos
or
jmp
mov
pop
dec
dec
jne
inc
rol
mov
fld
iret
out
mov
xor
jnp
mov
mov
std
aaa
jne
or
or
and
ret
adc
and
add
jmp
mov
out
jmp
dec
push
scas
inc
xchg
cmp
sahf
das
lods
xor
sbb
add
(bad)
push
push
cwde
enter
mov
lea
js
sbb
jne
js
fdivr
sub
adc
cmpxchg
pop
add
sub
fcom
push
movq
fwait
xor
data16
inc
ficomp
xor
mov
sahf
aam
imul
inc
or
mov
arpl
jbe
fwait
or
add
test
and
push
dec
add
mov
lods
sbb
dec
adc
adc
movs
mov
aas
imul
add
hlt
xchg
cmc
ins
sub
ja
mov
mov
les
aas
push
add
xchg
or
ds
pop
ret
pusha
and
jmp
cmp
adc
in
push
aaa
sub
and
retf
inc
or
nop
xchg
retf
and
or
add
test
out
add
xor
xchg
mov
fild
adc
stos
jl
inc
(bad)
mov
sbb
movs
stc
sahf
push
sbb
rcl
mov
add
call
add
jne
fmul
ds
out
xchg
stos
dec
or
jb
xlat
mov
rcl
dec
pop
cld
sub
push
fwait
dec
ror
mov
sbb
mov
cli
sub
lds
add
mov
sbb
retf
rcl
push
or
lock
sbb
rol
jb
and
(bad)
enter
aad
sub
js
jmp
dec
xor
ins
(bad)
rcl
pop
mov
imul
adc
fisubr
fmul
or
sahf
cmp
in
cwde
test
push
xor
sbb
fldenv
or
popf
(bad)
or
outs
js
cmp
or
mov
imul
or
fwait
inc
lods
arpl
gs
or
fistp
jb
nop
adc
cmps
call
adc
imul
sub
adc
pop
rcr
sbb
mov
xchg
cmps
ja
inc
adc
mov
lods
mov
fldcw
cmps
rol
ficom
or
pop
mov
sbb
int
jns
pop
(bad)
xchg
cmp
add
xor
test
call
popf
sub
ins
push
add
daa
pop
xchg
xchg
cmps
mov
inc
out
shl
or
xor
adc
sbb
cmps
push
lock
jl
pop
sar
add
add
fiadd
pop
cmps
fisttp
push
cwde
and
xchg
loope
sub
and
mov
movzx
jp
shl
sub
mov
inc
adc
movs
inc
xchg
fisubr
mov
(bad)
lock
mov
mov
js
and
in
enter
cmp
nop
dec
mov
mov
push
int3
adc
rep
aam
adc
sbb
or
into
add
mov
enter
dec
rcr
mul
ss
inc
and
and
(bad)
daa
lahf
push
pop
cmp
ins
inc
(bad)
call
add
jne
mov
and
pop
mov
dec
dec
fwait
adc
cmp
xchg
jecxz
clc
(bad)
mov
loop
loopne
retf
mov
adc
cmp
jbe
mov
or
in
std
sti
call
dec
in
mov
pop
adc
add
fcmove
dec
or
adc
mov
mov
add
or
add
mov
pop
imul
jbe
mul
in
mov
ficom
mov
and
and
ins
dec
mov
es
(bad)
call
or
sti
scas
adc
mov
js
ins
dec
dec
pushf
xor
sub
les
cs
push
stc
inc
jns
cdq
pop
xor
sbb
xchg
cmp
sub
test
xchg
mov
pop
or
jp
and
cmp
lods
mov
jmp
iret
mov
sub
ins
sub
rol
dec
loopne
or
inc
je
add
mov
dec
jns
fs
cdq
jbe
mov
inc
das
jmp
dec
mov
mov
push
push
and
push
sub
mov
mov
jle
sbb
lea
popf
sbb
mov
fisttp
cmp
pop
movs
mov
sub
mov
fdiv
es
xchg
popa
ja
sub
cmp
and
out
jl
js
sti
(bad)
or
inc
inc
push
jmp
faddp
pop
je
mov
in
jg
cmps
pusha
pusha
inc
std
test
jge
jae
ins
les
pop
pop
test
je
ds
repnz
mov
dec
pop
add
push
shl
add
xor
scas
jnp
add
ficomp
cmp
push
loopne
fwait
xchg
in
jmp
push
ss
int
jno
dec
add
mov
xor
pop
and
sub
dec
sbb
add
jo
pop
inc
jle
cli
xchg
out
jns
inc
inc
imul
sub
jb
adc
sub
fmul
jg
mov
xor
jb
ins
aaa
out
sub
and
and
and
arpl
jmp
inc
cs
mov
inc
mov
sbb
sbb
push
add
stos
bound
in
jmp
icebp
fs
cmc
adc
xchg
cmp
adc
adc
push
inc
je
test
or
inc
inc
push
fsubr
shr
test
jne
xor
out
mov
adc
or
mov
push
mov
pusha
jae
or
push
sbb
inc
(bad)
arpl
ja
je
push
je
jle
or
outs
imul
jmp
push
jae
inc
pop
and
aaa
mov
icebp
cld
mov
adc
pusha
mov
push
mov
and
mov
arpl
sbb
pop
je
iret
ret
nop
adc
adc
(bad)
xchg
and
dec
je
pop
pop
pop
xor
xchg
popf
cmp
fs
push
push
inc
nop
xchg
mov
mov
loope
and
pop
retf
cmp
hlt
lea
xchg
sar
aam
add
cmp
jle
ins
xchg
add
add
cmp
popa
and
push
pop
and
and
shl
or
(bad)
test
and
call
and
movs
stos
and
je
adc
aam
push
xchg
add
cli
ja
ds
sbb
inc
ror
cs
(bad)
and
aaa
lea
dec
cmps
fbld
lea
jmp
jp
push
mov
mov
sbb
pop
pop
push
push
jle
rcr
rcr
push
xchg
sbb
inc
cld
int
mov
push
pop
cmp
shl
pop
fisubr
rcr
cmp
dec
add
push
faddp
repz
pop
pop
fistp
pop
out
ror
sbb
dec
cwde
fucomi
pusha
add
enter
arpl
lds
push
and
sbb
dec
ds
cmps
inc
cld
loope
push
clc
sub
push
cmc
inc
add
gs
add
clc
add
clc
jne
ror
push
jne
sbb
sbb
lock
jno
cld
push
syscall
lea
add
or
lock
fidiv
dec
cld
loop
loop
cmps
adc
push
hlt
fidivr
mov
or
test
and
pusha
push
mov
lock
dec
mov
ret
hlt
shl
xor
sar
inc
mov
cld
jmp
sub
push
into
fidivr
and
aaa
xor
js
pop
push
adc
les
push
push
ja
ins
enter
std
sub
cwde
jmp
out
jge
cmp
ins
adc
add
inc
daa
jle
xchg
sub
xchg
sub
pop
stc
inc
jg
mov
adc
mov
pop
inc
mov
je
push
call
push
pop
pop
fnstenv
ja
int3
pop
fcmovnb
push
cmp
xchg
cdq
adc
fwait
or
cmp
lds
pop
jp
jl
lock
ja
inc
or
jge
mov
cld
push
jg
outs
ins
add
pop
jge
mov
cmp
inc
cmp
sahf
fldpi
push
push
jl
cmp
js
inc
dec
xchg
test
shl
mov
xor
pop
js
je
ret
cs
bound
cdq
fs
jb
fisttp
dec
jecxz
je
fdivr
bound
or
jne
mov
imul
mov
pop
pop
dec
mov
add
xchg
sti
test
xor
(bad)
jg
fdiv
xor
jo
and
sbb
add
and
lods
arpl
and
or
sbb
je
adc
and
test
sub
add
fdivr
xor
ds
out
pop
mov
jmp
mov
add
clc
or
jge
jge
add
sub
sbb
in
add
and
imul
and
test
push
cwde
adc
dec
or
aam
jne
add
xchg
pop
mov
fwait
or
cwde
mov
add
in
pop
lods
pop
call
mov
cdq
mov
cmp
add
push
inc
movsx
adc
add
mov
pop
icebp
loopne
dec
(bad)
mov
les
or
sbb
or
jg
dec
loopne
mov
cld
jecxz
lea
inc
les
sbb
pop
hlt
pop
mov
cmp
or
test
jne
or
test
jne
mov
push
add
rol
or
sub
mov
or
sbb
add
fwait
add
xor
sahf
or
imul
cld
add
jae
add
cmp
shl
ins
adc
sbb
sti
aas
iret
repz
add
push
add
daa
xchg
xchg
or
add
cmp
jnp
pop
mov
jp
movs
xor
das
iret
bound
adc
push
cs
and
jg
sbb
mov
pop
lock
adc
pushf
fadd
cli
jp
movs
push
push
adc
mov
sar
or
fidiv
push
or
fisttp
xchg
fidiv
or
jmp
aaa
fadd
fcomp
iret
mov
cs
sbb
hlt
dec
push
mov
jmp
adc
aad
sbb
nop
push
inc
(bad)
fstp
loopne
sbb
scas
add
jmp
call
xchg
add
xlat
mov
stc
or
cmp
pop
adc
xchg
lahf
imul
fcomp
jne
loope
test
stc
std
xor
nop
mov
mov
out
xor
xchg
shr
pop
inc
addr16
inc
inc
ja
push
aas
clc
fldcw
pop
clc
mov
(bad)
ja
sahf
outs
lds
in
jmp
mov
mov
xchg
sub
sub
cmp
mov
mov
mov
cmp
cmp
or
or
dec
mov
sbb
cmps
xor
push
mov
mov
sbb
sbb
mov
mov
push
mov
and
loopne
outs
push
shr
dec
mov
or
and
cmp
(bad)
repz
jl
pusha
mov
imul
pusha
sub
pop
xchg
push
xchg
adc
sbb
jecxz
cmp
jl
sub
fcom
xor
xor
adc
fs
ds
add
mov
sub
lahf
push
fld
popa
add
or
jb
jl
jbe
in
inc
stos
fidiv
inc
push
jle
in
mov
sbb
test
push
sti
mov
add
cwde
jmp
pop
fiadd
add
ret
adc
dec
add
xchg
lea
mov
je
mov
aam
or
pop
ds
cmp
imul
inc
mov
cld
xchg
and
push
pushf
and
movs
sbb
xchg
push
sub
xor
and
ror
xor
lods
sub
cmp
leave
add
bound
fdivp
sbb
int3
sbb
loopne
ret
adc
and
mov
inc
mov
inc
mov
inc
ror
add
jmp
and
add
cmp
push
jb
in
call
cmp
push
sub
clc
jae
shr
mov
jae
adc
inc
mov
push
jb
and
cmp
sbb
jle
dec
sub
push
mov
xchg
mov
push
add
jmp
cmp
and
and
mov
mov
mov
and
sahf
xchg
xchg
and
mov
fsub
jle
push
xchg
imul
ret
jmp
into
fst
cwde
sbb
xor
sub
xor
dec
dec
dec
mov
adc
cmp
cmc
cdq
mov
mov
inc
mov
and
dec
sahf
xchg
movs
or
test
movs
shl
or
pop
(bad)
sti
mov
pcmpeqw
aam
rcl
dec
xchg
and
adc
clc
dec
in
(bad)
nop
jl
cmp
or
or
xor
mov
sub
idiv
pusha
ror
pop
push
into
push
ret
and
sar
and
or
and
int
dec
fsubp
lea
adc
psadbw
mov
adc
shl
enter
popa
jmp
add
cmp
mov
sub
mov
gs
daa
mov
leave
add
mov
push
cmp
sbb
sub
mov
daa
xchg
call
fwait
in
ret
outs
add
gs
int3
jmp
pop
lahf
ret
sub
pop
inc
jae
xchg
retf
pop
push
xchg
pop
ret
xchg
xchg
je
popa
or
mov
push
retf
push
push
pop
inc
mov
mov
ins
test
call
out
and
pop
xchg
fsubr
add
or
and
inc
mov
fcom
adc
pop
ret
xchg
popa
mov
icebp
inc
jne
push
add
mov
call
add
xchg
mov
inc
inc
dec
jne
aam
push
mov
push
mov
mov
or
movs
jo
push
or
sub
jnp
fmul
mov
sub
jbe
enter
inc
or
inc
inc
jl
scas
nop
jge
jle
push
dec
push
jne
push
add
jmp
mov
pop
dec
sbb
loopne
(bad)
clc
or
int
in
push
inc
dec
adc
mov
enter
inc
dec
inc
ins
test
das
in
adc
push
and
leave
sti
mov
movs
adc
xlat
and
iret
sbb
repnz
mov
add
leave
out
mov
xor
dec
push
dec
arpl
jns
stc
mov
xor
inc
addr16
push
cmp
mov
push
dec
push
inc
inc
sar
cmp
dec
inc
inc
jo
adc
stc
pop
mov
fwait
ss
fbstp
jae
adc
dec
aad
sbb
(bad)
sbb
(bad)
jo
dec
inc
jae
mov
inc
inc
push
aas
stc
push
sub
sub
inc
inc
imul
push
push
gs
sbb
push
fild
ins
sub
inc
jle
mov
je
inc
je
pop
pop
out
fsub
dec
dec
je
add
dec
fist
push
xor
in
or
jp
popf
cmp
add
push
adc
cmp
idiv
and
mov
or
xor
cmp
(bad)
es
fcom
sti
dec
sti
adc
inc
js
out
enter
scas
inc
lahf
push
outs
in
(bad)
mov
push
pop
test
jnp
pop
fdivp
inc
push
pop
pop
inc
in
ds
stos
mov
pop
nop
daa
fiadd
add
jge
je
leave
dec
xlat
enter
xchg
or
or
jge
adc
mov
sti
cmp
in
lea
pop
test
jb
and
jmp
or
pop
test
sub
adc
mov
sbb
add
or
or
imul
sbb
test
and
push
mov
pop
inc
mov
test
pop
mov
push
inc
ficom
mov
add
sahf
repnz
mov
jle
mov
jb
inc
adc
das
fdiv
test
mov
push
ss
add
daa
xchg
int3
push
push
idiv
and
add
or
mov
ret
sub
mov
add
in
ror
pop
inc
test
icebp
cmp
dec
xor
sar
adc
inc
cmp
push
dec
ins
adc
or
(bad)
lahf
jle
mov
xchg
push
push
jno
loop
pop
mov
and
cmp
pop
or
bound
adc
dec
je
sbb
sub
jl
ret
pushf
push
mov
push
jae
stos
jle
cli
inc
push
push
xchg
aam
fimul
dec
sbb
adc
or
add
mov
dec
lahf
sbb
les
add
inc
and
add
repz
imul
push
das
pop
sub
pop
cmps
sbb
push
(bad)
adc
or
(bad)
cmp
cs
sbb
dec
sub
mov
push
into
popa
push
pop
mov
ins
sahf
sub
sub
pop
clc
inc
sub
xor
fbld
mov
fidivr
mov
jb
pop
jo
and
push
mov
js
vmovd
lods
out
fwait
shl
push
div
pop
xor
sub
pop
dec
sbb
mov
jle
push
lods
int
call
retf
call
nop
mov
adc
push
and
daa
test
xchg
shr
sbb
and
dec
jg
or
inc
je
repnz
pusha
push
popa
adc
cmp
push
cmp
popa
push
cmp
in
push
sbb
inc
push
or
sbb
ror
not
ret
ss
stc
xor
adc
fisubr
lock
bound
daa
mov
adc
push
mov
fwait
lock
push
and
scas
popf
xor
mov
loope
adc
jecxz
test
loope
loopne
push
push
jbe
pop
adc
aaa
ficomp
xor
fadd
js
fild
fldenv
sub
loope
loope
or
loopne
(bad)
lods
or
cmp
ss
push
fst
push
cmp
aaa
fst
jne
or
adc
jmp
aad
xor
jl
push
shr
push
int
fimul
retf
jmp
lds
cmc
outs
adc
adc
jmp
mov
test
xchg
mov
xor
xchg
push
inc
pushf
push
jp
dec
push
pop
lea
repnz
enter
add
and
or
or
dec
(bad)
adc
inc
or
ret
int
rcl
imul
mov
int3
adc
lea
mov
add
sbb
std
test
sub
sbb
mov
cmc
sub
dec
or
test
loope
retf
(bad)
(bad)
sti
push
cmp
adc
jnp
jl
adc
jae
stos
and
(bad)
sti
push
mov
mov
in
sti
cmp
cmc
cmp
sbb
adc
adc
les
bound
or
push
arpl
add
rol
dec
test
bound
mov
mov
imul
fadd
test
test
jg
lock
xchg
jb
or
test
jle
fsub
mov
xor
outs
mov
add
inc
cmp
fisttp
fadd
cmp
mov
retf
or
mov
aam
clc
mov
xchg
add
xchg
push
inc
pop
push
inc
pop
mov
or
and
aam
adc
jg
and
nop
je
dec
sub
and
or
cdq
shl
add
lock
inc
pop
cmp
xchg
sbb
cmp
xchg
add
or
mov
mov
mov
pusha
or
dec
mov
cdq
dec
cmp
xchg
mov
ror
adc
push
hlt
pop
or
add
mov
jbe
and
dec
sub
or
int3
sub
mov
mov
test
jle
adc
addr16
inc
(bad)
cmps
mov
jp
sahf
xchg
cmc
mov
shr
(bad)
cmp
dec
enter
shr
mov
xor
push
dec
pusha
dec
js
je
or
xchg
jl
cmp
jne
jbe
inc
popa
mov
cmp
cmp
add
or
push
ret
in
jmp
mov
mov
xchg
rol
add
jmp
or
test
dec
mov
movs
and
sahf
xchg
mov
popf
push
inc
adc
mov
dec
mov
add
pushf
xchg
fild
lods
int
popa
mov
dec
adc
inc
cmps
aas
inc
adc
jb
(bad)
nop
or
stos
adc
popf
xchg
jmp
std
lea
cmp
ja
cli
pop
xchg
lea
pushf
cli
popa
jl
mov
sub
inc
cmps
fisubr
outs
sbb
xor
sti
add
jecxz
fwait
(bad)
in
mov
cmc
ret
scas
xchg
sbb
xor
pop
sub
pushf
in
cld
stos
pop
test
in
adc
jo
and
mov
cmp
neg
push
push
jns
out
add
xchg
add
add
popf
out
cmp
and
fsub
add
adc
inc
adc
cdq
jbe
adc
je
(bad)
fadd
clc
sahf
and
cmp
iret
pop
or
and
out
dec
int3
cmp
rcl
and
xchg
pop
es
jle
inc
pop
mov
cmp
cli
add
popa
aas
fiadd
xchg
(bad)
fcom
jge
inc
dec
retf
pop
jmp
mov
add
pop
jge
test
adc
ret
ss
dec
inc
push
mov
or
rcl
xchg
loop
rol
cmp
push
dec
fld
bound
inc
or
add
(bad)
mov
mov
mov
add
shl
dec
mov
sub
in
test
and
add
cs
ret
jbe
push
mov
int
mov
dec
pop
mov
inc
pop
xlat
cs
lock
and
inc
popa
(bad)
xchg
(bad)
dec
jmp
xor
fs
nop
xor
sbb
pushf
ins
aaa
sub
xor
add
inc
lods
mov
add
inc
icebp
xchg
mov
push
inc
inc
cmp
pop
enter
sub
jmp
scas
add
pop
je
xor
and
lods
inc
test
imul
ret
push
xchg
cs
or
(bad)
xor
js
call
dec
pusha
jg
push
(bad)
comiss
sub
adc
or
xchg
mov
inc
push
(bad)
pusha
out
mov
jmp
loopne
push
push
pop
or
adc
mov
and
push
push
add
xchg
cmc
sub
imul
inc
or
leave
aas
mov
cmp
sti
sbb
adc
jg
add
aaa
inc
enter
add
and
aas
mov
xor
imul
nop
add
adc
inc
and
popf
ret
lea
in
mov
pop
enter
lea
or
popa
sbb
fcom
test
(bad)
in
push
push
movs
nop
mov
call
ja
jge
or
popa
ins
adc
pop
cmp
pop
push
cli
pusha
xor
jmp
pop
shr
mov
xchg
xor
xchg
fst
sbb
clc
fbld
test
push
push
cmp
jecxz
ficom
inc
mov
fsubr
shl
sahf
adc
jl
jge
or
pop
dec
mov
add
jg
dec
scas
add
hlt
(bad)
push
sub
xor
push
popf
or
scas
add
fisub
ret
imul
rcl
cld
and
add
rcl
clc
in
add
push
loope
jno
sbb
mov
jo
loopne
pop
arpl
popf
sub
into
leave
pop
cmp
mov
add
adc
inc
add
sbb
fist
js
xchg
sub
push
setl
aad
pop
pop
or
adc
fimul
nop
xchg
jle
je
mov
adc
push
dec
or
mov
pusha
jge
push
or
(bad)
jmp
inc
pop
sahf
not
mov
inc
dec
jne
ret
cmp
jne
fxch
dec
or
jne
cmp
inc
inc
mov
pop
call
and
add
repnz
dec
or
pop
add
fcomp
scas
jmp
dec
or
or
ins
loopne
adc
mov
cmp
sub
sti
adc
jne
jnp
pop
fcmovbe
lods
or
or
addr16
and
mov
jbe
jmp
push
add
or
push
clc
jne
cli
push
(bad)
loopne
or
lods
(bad)
mov
jb
cdq
lahf
dec
or
jo
add
push
mov
(bad)
stc
popf
push
jmp
dec
clc
movs
ins
loopne
lea
or
and
jp
movs
cmps
imul
or
cmp
pop
add
xchg
push
add
dec
loopne
pusha
or
pusha
inc
clc
pushf
aaa
pop
add
ins
sbb
or
or
adc
sub
push
mov
fwait
movs
sub
repnz
add
ss
fdiv
add
sbb
pop
call
jmp
repnz
clc
jne
daa
or
xor
repz
or
add
cmp
rcr
add
or
push
add
dec
pop
loope
sub
mov
mov
or
inc
cmp
sbb
js
movs
les
or
movs
add
out
inc
push
jne
loop
cmp
scas
jb
mov
jne
das
inc
pop
inc
inc
push
dec
pop
call
int
clc
xchg
push
inc
sbb
push
xchg
ja
mov
lods
push
loop
data16
adc
mov
push
mov
dec
popa
pop
js
jo
hlt
inc
pop
iret
shl
push
add
add
pop
je
pusha
dec
or
pop
lods
neg
dec
add
(bad)
sahf
ret
sahf
add
or
iret
add
sbb
pop
pushf
repz
(bad)
xchg
push
aas
shr
xor
pop
and
mov
ficom
test
jmp
cli
pop
(bad)
sub
push
retf
call
jmp
out
dec
add
mov
dec
lods
daa
add
jmp
sbb
mov
ss
mov
vmwrite
push
mov
mov
or
or
imul
jmp
sub
xor
sbb
iret
sahf
sub
cmp
jmp
rcr
and
xchg
fwait
clc
add
or
cmp
fiadd
or
add
jo
or
rol
xchg
adc
sub
sub
cmps
rol
xchg
sbb
jns
and
int
inc
lods
adc
nop
(bad)
cld
push
push
dec
xor
popa
push
call
std
jbe
pop
add
or
jmp
add
hlt
xchg
and
and
mov
push
dec
add
cli
add
add
aam
ja
sti
dec
rcr
stos
jmp
in
inc
inc
xchg
add
clc
sbb
xor
jmp
mov
inc
int3
jl
int
add
inc
mov
iret
fld
mov
pop
sub
shl
and
cs
jg
inc
sbb
push
scas
out
sub
das
sbb
ds
jge
add
lea
sbb
(bad)
ja
pop
pop
fadd
and
xchg
pop
inc
jl
call
jmp
and
push
jmp
xor
inc
into
adc
xchg
pop
xlat
or
adc
pop
test
shl
jmp
shl
or
or
and
pop
loop
add
cld
xor
in
pusha
sbb
js
aam
sbb
sbb
mov
enter
xchg
and
stos
lds
sub
xchg
sbb
loopne
std
mov
mov
int3
sar
dec
xlat
adc
xchg
out
adc
fiadd
loope
into
repnz
adc
fnstenv
mov
dec
xchg
inc
sahf
xchg
jl
leave
xor
xlat
sti
adc
in
inc
mov
aas
mov
ficom
dec
mov
mov
mov
xor
sub
mov
iret
mov
pop
test
lea
daa
shl
or
sbb
ins
mov
fidiv
push
mov
mov
cmps
mov
and
or
inc
sub
or
leave
js
pop
les
jbe
mov
mov
or
xchg
fld
rcl
repnz
dec
and
mov
in
sbb
cmp
(bad)
xor
rcl
loopne
cmp
dec
add
add
pop
out
add
shl
mov
cs
adc
sahf
or
(bad)
sub
add
xchg
stos
mov
rcr
sub
cld
and
in
add
ret
mov
xchg
shl
add
add
xlat
push
test
sub
clc
push
inc
(bad)
pop
mov
cmp
int3
test
jg
inc
push
push
call
mov
fwait
je
rol
sar
dec
adc
inc
pusha
xlat
cdq
mov
adc
jl
je
push
jns
in
dec
pop
sub
mov
es
(bad)
cmp
sub
push
jbe
xlat
push
mov
push
push
push
sbb
push
dec
out
add
call
or
mov
test
int3
and
add
in
push
add
adc
sbb
retf
(bad)
mov
pusha
(bad)
jne
stos
or
dec
hlt
jne
sbb
lods
(bad)
call
pushf
pop
jo
sub
inc
cld
daa
(bad)
cmp
xchg
ds
(bad)
ins
mov
call
mov
rol
fwait
cmp
loopne
xor
sbb
inc
push
mov
aas
dec
in
ins
dec
dec
cmp
inc
imul
in
gs
fistp
(bad)
call
mov
inc
cli
ror
test
ror
(bad)
push
lahf
mov
xchg
push
adc
sub
mov
jbe
movs
nop
sub
add
arpl
mov
inc
add
xor
clc
enter
test
push
ja
and
adc
sbb
popa
aaa
clc
sar
cmp
ja
cmp
mov
mov
or
pop
dec
xchg
push
loopne
in
pop
sub
pop
pop
popf
or
daa
and
jo
pusha
arpl
and
sahf
addr16
fs
push
and
lea
jmp
daa
outs
sub
inc
push
shl
dec
repz
inc
push
sub
push
or
sub
test
retf
imul
add
mov
rol
mov
xchg
pop
or
les
je
or
mov
add
sbb
add
adc
jmp
add
ret
mov
movs
add
or
push
pop
sbb
mov
push
push
call
loopne
push
push
xchg
push
fld
and
fistp
inc
or
prefetch
mov
jge
jae
xchg
adc
pop
mov
lods
push
xchg
cmp
nop
(bad)
js
sub
nop
mov
mov
(bad)
jne
icebp
pusha
sub
test
or
inc
add
add
add
or
out
popa
add
cmp
push
or
cwde
call
mov
cmps
xor
adc
or
hlt
push
ret
dec
je
sbb
pop
lea
mov
(bad)
push
cli
adc
arpl
sub
outs
hlt
xchg
xor
sub
mov
aaa
pop
and
jmp
dec
loopne
dec
push
js
enter
and
inc
into
nop
test
mov
mov
dec
push
or
es
inc
mov
sub
push
das
and
je
fs
xor
cmp
sbb
or
fnstcw
push
es
sub
mov
movs
pavgb
movs
sub
and
mov
xor
sahf
shl
popf
repz
adc
push
push
je
shl
aaa
stc
add
or
mov
mov
(bad)
pop
dec
popa
pinsrw
popf
les
pop
add
xchg
push
jl
fadd
mov
clc
add
push
lahf
(bad)
fadd
push
and
pusha
fst
sbb
popa
mov
fidiv
mov
mov
and
movs
lods
mov
cmp
push
adc
hlt
jge
mov
mov
ins
dec
fsub
lea
aaa
mov
jne
movs
lock
sar
inc
test
popf
push
jmp
mov
into
ja
pop
fdivr
mov
pop
out
dec
stos
outs
push
addr16
xchg
mov
lods
addr16
retf
sahf
in
add
jg
repnz
push
test
sbb
cmc
es
pop
test
and
or
stc
lock
test
add
(bad)
sbb
daa
outs
scas
cmps
xor
sbb
mov
call
mov
sub
dec
shl
xchg
push
jae
shld
retf
ret
dec
cmp
adc
mov
je
shl
ins
push
nop
pop
shr
jmp
sbb
fld
sub
or
lea
fwait
or
jecxz
push
xor
aad
lds
cmp
or
push
or
mov
aas
inc
add
jns
xchg
add
or
pop
ret
jne
sbb
sub
mov
cmp
and
mov
push
xchg
push
outs
jg
fild
inc
adc
cli
jbe
pop
add
repnz
stos
loope
js
mov
mov
inc
dec
sbb
sub
xlat
ficom
adc
pop
cwde
push
or
and
popf
mov
adc
mov
ror
push
add
mov
sub
shl
not
int
mov
inc
add
or
jae
cmp
pop
and
adc
mov
jg
xor
jae
mov
cmp
cmp
iret
jae
or
lea
and
xor
lods
add
call
mov
adc
or
or
or
jmp
lea
adc
xor
in
xor
hlt
(bad)
xor
xchg
mov
les
or
aad
stos
mov
add
sub
cdq
call
xor
sti
outs
or
(bad)
push
sub
inc
sbb
and
ss
test
std
xchg
and
enter
mov
mov
pop
or
sbb
mov
or
push
sbb
push
mov
mov
mov
test
pop
out
xchg
jp
push
clc
test
push
test
dec
pop
push
mov
inc
cwde
ret
pop
mov
mov
fwait
rol
push
fucompp
loopne
adc
mov
mov
mov
and
loope
mov
push
cmp
sbb
push
add
mov
cmp
dec
cli
or
push
mov
pop
ja
pop
pop
jmp
sub
sub
pop
lea
cmp
or
aaa
xchg
fs
inc
mov
push
and
(bad)
jae
jns
jno
loopne
mov
adc
test
mov
push
or
mov
(bad)
or
ror
dec
and
out
(bad)
cmps
sbb
sti
add
fnstcw
cld
cli
adc
push
adc
popa
aam
ret
out
push
mov
lahf
xchg
adc
test
lods
and
inc
retf
test
mov
(bad)
inc
adc
clc
or
xchg
pop
data16
js
or
add
pop
add
xchg
test
clc
repnz
mov
and
mov
ins
or
es
pop
adc
movs
mov
and
sbb
dec
stc
xor
jne
pop
xlat
xlat
adc
dec
jmp
xor
inc
repz
div
rcl
jmp
dec
sbb
mov
mov
add
add
mov
(bad)
ret
cld
push
xor
add
pop
js
clc
mov
push
sub
dec
mov
pop
nop
fs
mov
into
shr
nop
push
add
or
or
cmps
and
daa
mov
pop
mov
pop
xlat
js
push
daa
jbe
dec
adc
push
js
xlat
rcl
repnz
cmp
je
inc
sar
inc
loopne
inc
lea
cmp
jbe
xchg
push
mov
fild
rol
or
cmp
(bad)
imul
ret
div
clc
arpl
imul
gs
cdq
add
xchg
sub
bound
add
fwait
hlt
js
adc
fmul
nop
out
adc
hlt
push
cmp
leave
ret
scas
loope
jge
ret
or
pop
mov
jbe
dec
add
dec
(bad)
push
add
sbb
ror
sti
sub
add
pop
sahf
xchg
sbb
add
fisub
add
sbb
mov
push
adc
dec
or
test
ins
pushf
push
or
call
and
pop
pusha
pop
xchg
mov
adc
sub
cld
add
add
mov
push
dec
ins
adc
xchg
mov
adc
cmp
jmp
inc
pop
aaa
pop
mov
dec
lods
dec
pop
cmp
inc
retf
push
jp
or
imul
cmp
or
dec
mov
mov
mov
adc
jne
mov
pop
hlt
test
mov
mov
out
lock
mul
xchg
mov
fdiv
dec
sub
mov
outs
and
jmp
int3
add
aam
xor
and
aas
cmp
ja
or
jo
les
sbb
push
dec
sub
push
lods
hlt
add
and
add
gs
mov
mov
sahf
mov
mov
cld
pop
adc
mov
(bad)
(bad)
inc
push
aas
stc
nop
sub
pop
push
in
inc
xchg
clc
xor
push
hlt
jg
push
in
jne
test
je
adc
dec
or
lds
aam
and
outs
les
iret
add
scas
je
push
inc
mov
or
mov
pop
or
mov
outs
test
shl
int3
cmp
inc
add
adc
movs
and
or
jmp
inc
jl
mov
inc
(bad)
stos
repz
jo
mov
push
out
jmp
int3
lock
pop
call
cmc
and
inc
jnp
mov
mov
sbb
fst
push
rcr
ins
int
out
push
inc
xor
pop
mul
pop
outs
ficomp
and
aam
push
jne
xor
push
js
push
pushf
mov
icebp
test
add
add
js
mov
sub
ror
(bad)
call
inc
or
sbb
inc
xor
jmp
jno
addr16
add
ffreep
aaa
and
aas
jns
jns
icebp
clc
std
fdivr
std
fs
outs
add
jo
cld
pop
hlt
es
sbb
mov
dec
into
lods
push
dec
push
fadd
add
jmp
sbb
inc
imul
ins
daa
stc
call
popa
fwait
or
push
lods
ins
or
sbb
int
pusha
hlt
xor
push
pop
sub
push
pop
push
test
(bad)
dec
dec
or
pop
inc
repnz
add
call
jb
add
test
test
inc
jae
xor
dec
test
jns
sahf
icebp
repnz
and
sub
fwait
movs
rol
repz
rol
out
loop
popf
loop
cmc
out
adc
jo
idiv
push
int
sbb
popa
clc
mov
sbb
pop
and
or
sub
inc
pushf
add
or
or
inc
sub
inc
xor
mov
add
fs
mov
or
cli
lea
jne
adc
adc
add
mov
or
mov
retf
mov
pushf
clc
dec
add
popa
dec
popa
dec
push
cmp
movs
xlat
bound
or
xchg
call
jnp
push
or
dec
mov
and
dec
cmp
xor
jne
jmp
add
xor
jns
mov
test
mov
jmp
comiss
or
push
cld
ret
cmp
mov
adc
das
sbb
femms
xor
add
mov
lsl
inc
mov
mov
ss
add
test
push
daa
out
idiv
inc
sbb
dec
and
(bad)
fst
add
adc
mov
mov
hlt
push
mov
test
add
jmp
dec
or
dec
sbb
call
mov
mov
or
fs
or
inc
mov
lods
inc
or
mov
mov
(bad)
sbb
dec
dec
movs
adc
arpl
bound
jmp
mov
leave
inc
(bad)
(bad)
cmp
je
cmp
je
rcl
clc
push
push
out
rcl
test
sbb
adc
add
sar
xchg
and
icebp
dec
in
cmp
xchg
inc
push
jg
push
xor
shl
clc
and
pop
fdiv
(bad)
data16
cld
inc
ror
inc
push
push
pop
dec
mov
inc
data16
or
loopne
arpl
inc
mov
mov
das
loopne
inc
into
add
push
leave
xor
add
dec
test
adc
xchg
fs
nop
inc
xor
movs
rol
test
lock
stos
js
add
mov
mov
mov
xrelease
push
lock
sbb
push
imul
inc
repnz
icebp
add
xor
imul
fs
pop
in
pop
mov
and
mov
dec
cwde
adc
inc
xlat
jmp
xor
dec
movs
xlat
push
mov
xor
inc
fisttp
adc
adc
add
xor
add
call
in
push
bound
or
or
add
(bad)
and
push
clc
jae
pop
movlps
inc
test
ins
or
or
or
shl
push
shl
jne
and
and
mov
add
ss
jecxz
mov
push
mov
(bad)
lock
arpl
out
inc
repnz
ja
cmp
add
shl
pop
adc
jl
add
xchg
fcom
je
adc
cld
jge
bound
sbb
adc
aas
movs
rcl
mov
out
adc
loopne
jle
add
das
add
sbb
or
add
ss
add
push
enter
lods
inc
and
pop
add
dec
pop
daa
scas
and
sbb
shl
jne
jmp
or
pop
and
adc
sub
mov
test
sbb
sbb
inc
cld
dec
test
cmc
cmp
add
pop
or
call
add
mov
sub
add
and
fwait
pop
loope
rcr
dec
xchg
jp
add
test
inc
jl
mov
push
fdivr
pop
fstp
inc
hlt
xor
and
fcom
(bad)
in
(bad)
jmp
push
jae
inc
and
pop
jmp
mov
int
addr16
lock
mov
test
shr
push
mov
push
push
mov
push
fiadd
sti
call
jge
outs
mov
and
cmp
ja
(bad)
shl
add
es
adc
mov
mov
ins
test
sbb
bound
ja
mov
jmp
scas
or
out
mov
aam
mov
mov
mov
and
mov
sar
mov
mov
xchg
test
dec
rcl
xor
push
xlat
mov
mov
mov
pop
out
or
push
fnstcw
mov
retf
les
jp
sub
test
rcl
and
ds
cli
push
mov
dec
pop
(bad)
adc
loopne
cli
add
inc
cmp
push
mov
add
(bad)
xchg
xor
push
shl
pop
adc
dec
push
cmp
imul
fimul
add
dec
mov
xor
cmps
dec
push
pushf
bound
pop
sbb
mov
mov
xor
and
into
fldcw
pop
mov
push
and
pand
mov
pop
pushf
xor
jmp
inc
jo
cmp
ja
cmp
(bad)
clc
clc
popa
jl
inc
dec
add
add
ficomp
cmp
pusha
push
xchg
pop
scas
adc
hlt
push
xor
mov
lds
xchg
inc
and
repnz
add
pop
mov
or
addr16
outs
stos
gs
ret
inc
jnp
push
jnp
(bad)
or
in
adc
jg
arpl
push
sbb
inc
pop
movs
mov
std
test
test
adc
mov
mov
dec
mov
adc
pusha
lods
shl
jmp
imul
xchg
sub
fdivr
sbb
fld
stos
loope
cmp
and
adc
das
lods
cli
stc
adc
movs
je
inc
dec
pushf
inc
add
sbb
nop
ret
aad
outs
shl
or
out
xchg
sti
or
xchg
inc
in
retf
xchg
push
jbe
repz
inc
lock
add
mov
jne
jae
pop
fadd
shr
dec
sbb
inc
mov
(bad)
xor
retf
gs
inc
rol
inc
sbb
dec
aas
dec
push
cmp
cwde
jmp
lea
inc
lahf
shl
pop
and
fcmove
or
clc
jle
ror
je
and
movlps
not
and
or
mov
add
jmp
inc
jmp
test
or
shr
ret
add
add
clc
pop
cmps
popa
pusha
inc
push
stos
test
push
mov
add
sub
je
adc
div
jbe
outs
lods
outs
lock
dec
hlt
mov
pop
sbb
xor
mov
popa
mov
or
sub
scas
add
test
or
pop
inc
enter
out
pop
js
mov
ret
mov
repnz
cmp
push
test
inc
cmp
mov
int3
push
add
ins
sub
mov
jmp
adc
in
add
cmps
or
jns
xchg
jbe
repz
(bad)
jbe
add
pop
outs
aaa
out
ss
dec
jne
xchg
xchg
jmp
nop
mov
xchg
xchg
cwd
add
add
inc
nop
mov
push
shl
cdq
add
inc
xor
pushf
jg
push
sar
fild
je
mov
xor
jb
add
inc
mov
idiv
(bad)
inc
cmovle
dec
add
and
movs
mov
adc
mov
popf
add
ds
in
or
push
mov
ret
fnstsw
setae
and
fild
jne
ja
ja
xlat
sbb
xor
mov
out
inc
dec
fidivr
push
je
test
cmps
icebp
sbb
pop
mov
pop
pop
or
and
mov
dec
aad
or
or
adc
add
and
and
or
mov
sub
rol
les
jne
shl
and
lds
mov
jo
out
push
dec
add
pushf
adc
mov
xchg
add
mov
icebp
cmps
lods
jge
shr
dec
pusha
push
int3
nop
sbb
inc
add
push
test
call
push
push
and
jge
jle
loopne
push
push
xchg
and
(bad)
push
jne
shl
fwait
rol
(bad)
add
pop
pop
stos
push
aam
mov
loopne
add
mov
repnz
sbb
rcl
pop
pop
mov
jge
sub
cmp
jnp
shr
shr
add
adc
test
stos
add
into
push
sub
repnz
popf
icebp
and
out
fs
movs
sub
cld
fwait
dec
test
xlat
cmp
add
jle
add
push
dec
nop
div
fistp
mov
jae
cmp
fadd
(bad)
out
mov
mov
mov
shr
mov
and
sub
inc
repz
push
cld
imul
xchg
into
mov
scas
or
sti
loopne
loopne
pop
or
mov
stos
xchg
lock
push
mov
or
inc
shl
imul
fsubp
push
fsubr
ja
pusha
stos
xor
inc
dec
fdivr
add
loope
jb
cmp
or
cwde
int3
mov
add
ss
push
push
push
(bad)
adc
push
pusha
fadd
in
mov
add
dec
int3
add
pop
mov
add
push
nop
push
dec
xor
adc
xchg
push
loopne
and
fild
aas
out
sbb
test
in
fsub
call
in
xchg
add
das
movs
add
xchg
pop
repnz
pop
outs
xchg
daa
stc
shr
fild
mov
jmp
outs
in
and
sub
fdivr
pop
std
fwait
movs
jae
add
ds
repz
fdivr
fsubr
jecxz
pop
or
mov
in
mov
jecxz
clc
cmp
clc
(bad)
push
lods
rcl
imul
jmp
mov
or
test
or
xor
xlat
jae
nop
sub
or
adc
adc
cmp
test
adc
jnp
xor
test
add
aam
dec
jmp
adc
xchg
or
push
inc
add
in
adc
inc
addr16
call
add
pop
inc
push
pop
shr
add
inc
inc
dec
jne
sbb
js
push
cmps
test
fcmovu
mov
mov
add
stc
shr
scas
xchg
dec
cs
adc
aam
lahf
inc
xor
in
adc
sbb
sub
rcl
repnz
inc
inc
call
mov
pusha
loope
inc
div
jmp
dec
jp
sub
or
xchg
and
fsubr
cdq
dec
or
mov
enter
add
lea
cwde
add
fcomip
jge
sbb
loopne
push
dec
and
lods
jmp
loop
push
rsm
mov
add
or
aam
xchg
add
fs
cmp
xchg
sbb
and
(bad)
in
pop
fsub
cs
add
xor
xor
inc
nop
sbb
jb
cwde
rol
fs
or
jl
shr
(bad)
cmps
rcr
iret
push
cvttps2pi
sbb
push
xchg
cmp
ret
(bad)
inc
(bad)
hlt
pop
jb
sbb
hlt
lock
mov
sub
mov
jb
jo
fiadd
jge
push
sbb
clc
mov
movs
adc
dec
adc
inc
add
sbb
mov
push
lea
(bad)
adc
cmp
mov
(bad)
pop
pop
jmp
pop
push
and
arpl
icebp
sbb
cmp
fist
dec
ret
or
jae
cmp
sub
sub
jnp
popf
mov
lods
cmp
mov
add
adc
cmps
pop
shr
mov
call
push
jo
fsub
test
push
rcr
fcom
lods
push
fucomip
push
dec
sbb
shr
add
add
xchg
xor
sbb
mov
sub
in
mov
dec
rcl
mov
jne
mov
adc
out
lods
fstp
dec
inc
je
js
jecxz
xchg
mov
or
imul
push
and
push
push
jno
(bad)
hlt
enter
sbb
das
push
and
inc
xchg
and
(bad)
jnp
push
test
sub
jo
or
js
add
xchg
shl
fistp
mul
mov
sub
ret
shl
mov
xor
and
mov
cmc
shl
pop
inc
mov
faddp
mov
jne
adc
lock
xchg
xchg
xor
pop
jae
sbb
adc
sbb
ror
xchg
jno
cmc
add
cmp
div
add
cs
mov
aas
ins
out
imul
xchg
ror
add
push
dec
pop
push
mov
push
out
sub
mov
fs
pop
jb
arpl
inc
rol
gs
pop
pop
xchg
stos
leave
dec
adc
push
mov
add
js
retf
out
imul
lods
add
(bad)
push
push
ror
daa
jmp
gs
mov
pop
mov
pop
jl
adc
pop
dec
cmp
ds
daa
jae
jae
inc
add
xor
inc
mov
cmps
add
inc
add
lds
inc
ror
scas
pop
test
iret
sar
jmp
cmp
and
adc
into
add
sbb
or
js
xchg
fild
mov
xlat
xor
ss
cmp
mov
ror
or
lock
jmp
fidiv
inc
mov
loopne
mov
ficom
jl
jnp
pop
pop
or
adc
xor
jo
dec
or
rcl
sete
js
(bad)
and
call
inc
add
jmp
rcl
outs
mov
fs
rol
lock
add
inc
popa
push
jo
cmp
mov
add
pop
jns
jg
pop
arpl
jl
add
ror
pop
and
lea
adc
cmp
sub
mov
popa
push
ins
add
cmp
pop
mov
gs
popf
mov
dec
(bad)
retf
xchg
dec
xchg
and
shr
fs
ror
out
jns
dec
push
sub
cmp
cs
pop
sub
sub
out
cmps
ins
cmc
and
je
jne
add
mov
mov
dec
pop
pop
mov
neg
popf
adc
add
sub
dec
or
cli
or
adc
nop
mov
data16
scas
sti
mov
sbb
test
icebp
push
sbb
sahf
jne
adc
mov
rcl
adc
into
pop
and
enter
push
das
add
test
push
sbb
or
fisttp
push
adc
adc
clc
xor
push
fnstcw
jp
or
dec
addr16
lahf
or
mov
mov
rcl
sbb
mov
mov
mov
mov
mov
mov
sar
push
and
pop
sbb
adc
retf
ror
lods
popf
add
mov
in
mov
sub
add
add
add
xchg
push
cli
sbb
mov
fild
add
sbb
outs
sbb
imul
pop
or
inc
nop
js
sbb
jae
sbb
and
mov
lock
sbb
push
pop
mov
fist
or
stos
xor
mov
cmp
stc
push
sbb
dec
sub
push
push
fist
dec
iret
sub
add
cld
ds
nop
ja
call
retf
push
mov
sbb
nop
mov
lods
dec
xchg
shl
pop
nop
jg
repnz
add
dec
xor
and
sbb
(bad)
jae
pushf
ret
push
rol
icebp
imul
cmp
inc
pop
into
push
push
xchg
inc
adc
cdq
adc
sbb
mov
cmp
lock
sbb
dec
pop
mov
mov
sub
std
fcom
add
stc
fisub
push
outs
lea
mov
xor
rol
mov
fcomip
pusha
cmp
jle
add
retf
push
mov
sbb
movs
mov
adc
scas
or
imul
fiadd
cmp
popa
add
adc
mov
nop
sbb
sbb
mov
fistp
push
out
xchg
shl
adc
test
inc
sub
loope
cmc
int
shr
sbb
fidiv
push
cmp
sub
movs
pop
mov
imul
popa
inc
push
movs
xchg
ins
push
xchg
cmc
dec
es
add
cld
inc
jl
push
add
adc
cmps
push
lds
gs
(bad)
stos
rcr
pop
jle
mov
neg
add
hlt
lock
inc
pop
pop
or
or
add
jmp
fidiv
jmp
sbb
rol
add
jb
gs
(bad)
enter
push
loope
cmc
adc
mov
sub
pop
add
sbb
sar
cwde
mov
rcr
inc
or
imul
bound
mov
clc
mov
or
add
retf
test
mov
call
test
adc
in
dec
or
jbe
pop
movs
adc
cmp
push
push
pop
outs
mov
mov
pop
jle
sbb
sbb
add
or
xchg
cwde
ret
adc
add
xchg
pop
mov
ja
sub
bound
ret
jge
imul
add
mov
out
mov
cmp
clc
add
into
sub
and
pushf
pop
xchg
add
mov
xchg
or
jecxz
enter
das
loope
jecxz
pop
push
jg
pop
rcr
inc
sar
rcl
movs
cli
mov
ret
adc
dec
test
aas
dec
dec
jo
jno
lock
mov
mov
outs
(bad)
and
add
lea
jge
cmp
daa
add
cmp
jg
stos
xchg
sub
cmp
xor
(bad)
add
sbb
sub
sub
pop
inc
scas
adc
(bad)
aas
xor
sar
mov
retf
std
adc
pop
mov
popa
xor
sbb
aam
out
test
push
rcl
push
push
cmp
ss
xor
adc
pop
jecxz
adc
sub
lock
push
nop
ss
mov
adc
jl
mov
jle
sub
mov
adc
cmp
push
nop
dec
adc
push
mov
add
sbb
cmp
mov
mov
mov
(bad)
dec
ins
sub
adc
mov
add
pop
add
sti
xchg
add
pop
fcom
adc
adc
call
sub
push
jle
inc
and
jl
or
sub
and
adc
fs
scas
test
cmps
loope
and
inc
xchg
cdq
inc
ins
and
inc
outs
mov
inc
xrelease
icebp
pop
pusha
pop
retf
mov
inc
dec
cmp
out
pop
adc
add
fidivr
cmp
or
cmp
sbb
cmp
mov
sbb
mov
xchg
or
xor
mov
sub
mov
and
sub
push
and
test
mov
mov
and
or
stos
adc
loopne
test
add
dec
pushf
push
inc
sar
push
sbb
adc
xor
push
aam
into
add
dec
push
test
test
push
add
leave
data16
and
movs
leave
(bad)
fnstsw
mov
xor
mov
adc
pusha
push
mov
gs
fild
sbb
das
popa
stc
mov
add
adc
push
mov
and
xchg
ficom
jae
dec
add
clc
pop
aaa
pop
add
aas
fmul
push
xor
aad
ret
outs
pop
mov
je
add
mov
mov
xor
or
adc
clc
mov
or
ins
test
add
data16
xlat
pop
mov
mov
and
hlt
mov
push
inc
sub
ins
cs
fwait
push
add
fs
lea
xchg
xchg
push
cmp
pop
bound
outs
rcl
test
cmps
add
loope
rol
xchg
add
push
popf
sbb
add
faddp
cmps
sahf
sar
push
imul
cmps
arpl
or
sub
out
and
push
sub
dec
test
aas
imul
fldenv
enter
pop
adc
dec
sbb
daa
and
repnz
adc
test
iret
(bad)
in
xchg
lock
pop
in
pusha
jmp
push
cmps
dec
and
gs
enter
add
test
mov
mov
lock
bound
or
push
push
sbb
dec
lea
adc
add
je
popa
mov
movs
cmps
push
ficomp
scas
mov
dec
ud0
or
shl
dec
mov
neg
sbb
mov
popa
inc
test
mov
(bad)
pop
sub
jne
adc
stc
xor
or
mov
icebp
jecxz
xor
aam
push
pop
mov
or
xchg
pop
push
jmp
adc
lds
add
sbb
mov
inc
adc
xchg
jmp
mov
(bad)
int
jb
pop
cwde
das
mov
push
sar
pusha
jl
add
dec
mov
jl
outs
fisubr
(bad)
sbb
ret
jns
movs
imul
aas
lea
mov
mov
mov
adc
fxch
mov
mov
add
fld
call
aas
add
gs
call
aas
retf
adc
inc
mov
cmovne
in
icebp
fisttp
xor
adc
ret
and
cmp
push
addr16
push
and
cmp
hlt
jo
sub
bound
dec
or
sub
jo
out
pop
pop
adc
repnz
leave
xchg
mov
push
imul
jmp
imul
loopne
mov
ins
sti
mov
into
rcl
push
add
mov
mov
adc
sti
pop
xor
(bad)
movs
es
and
arpl
clc
or
jmp
aaa
push
cmp
shl
cmpxchg
cdq
or
add
dec
test
jmp
mov
and
jl
mov
add
mov
es
and
push
(bad)
call
push
cmp
cmc
or
mov
push
lahf
pusha
push
dec
cmp
cdq
inc
or
cs
(bad)
jne
jmp
or
test
mov
cmp
jne
adc
aam
(bad)
leave
lods
xchg
sbb
(bad)
mov
imul
fild
mov
cmps
jmp
fwait
mov
adc
hlt
mov
mov
test
xchg
jl
jb
imul
movzx
add
jnp
int
cmp
sub
gs
cmp
xor
push
inc
fs
and
sub
jns
pop
pop
jne
pop
jge
cmp
dec
add
lods
mov
sbb
xchg
out
enter
(bad)
push
scas
push
push
dec
jb
adc
rcr
and
es
fild
lahf
xor
sub
lods
rol
int
pop
inc
(bad)
jl
add
bound
and
pusha
repz
cld
xchg
xor
ins
inc
outs
js
mov
sub
mov
push
out
cs
adc
or
add
push
jo
mov
adc
push
retfw
scas
rol
pop
int3
imul
and
cmp
push
pop
inc
arpl
(bad)
out
xlat
push
imul
out
pop
dec
fbld
shl
xlat
cld
test
xor
or
push
add
mov
stc
jle
adc
mov
fcmovbe
int3
mov
mov
pop
and
call
jnp
loopne
or
mov
adc
inc
jp
jle
pushf
retf
push
into
jecxz
add
enter
stc
xchg
mov
test
mov
add
and
add
xlat
sbb
xchg
bound
fcom
push
arpl
xchg
sbb
out
mov
push
sahf
sbb
push
adc
movs
pop
sbb
adc
pop
out
or
adc
push
cmp
adc
dec
mov
je
dec
je
add
or
mov
cmp
dec
or
push
jge
imul
dec
xor
add
into
add
mov
mov
mov
pusha
hlt
dec
push
sbb
ins
and
jns
adc
scas
jae
jns
arpl
sbb
adc
push
or
leave
and
adc
push
adc
and
cmp
adc
push
mov
add
fdivr
jl
and
ror
daa
jge
cmp
inc
(bad)
sbb
fidiv
push
inc
dec
cmp
jns
pushf
cmp
push
clc
mov
sub
add
cmp
pop
xor
mov
or
loopne
jae
cmp
dec
mov
imul
fwait
(bad)
cmp
bound
jp
sar
ss
jns
sar
call
shr
xchg
rcl
ror
cmps
jb
mov
shl
mov
cmp
jmp
sbb
jp
mov
lea
mov
and
adc
xchg
jp
add
inc
jl
ret
ins
cmp
dec
es
mov
hlt
(bad)
cmps
aaa
dec
mov
add
shl
sbb
mov
push
mov
push
pusha
inc
fs
push
mov
or
xchg
call
mov
xchg
pop
pusha
jo
pop
jmp
jbe
cmc
cmp
mov
cmp
pop
xchg
mov
jmp
push
or
jne
sub
cmp
xchg
repnz
das
and
rol
dec
add
ss
pop
jb
push
add
jb
outs
popf
js
xor
mov
retf
push
xor
mov
add
imul
dec
mov
pusha
cs
push
js
fs
and
sbb
mov
adc
or
adc
cmp
adc
dec
jne
and
or
loope
add
test
push
test
and
idiv
mov
ja
call
mov
js
jae
into
sti
leave
div
pop
push
pop
in
fmul
adc
stos
mov
ror
cld
push
mov
(bad)
call
mov
shr
hlt
dec
pop
or
push
enter
inc
xchg
andnps
inc
sbb
fst
cs
fwait
retf
mov
jmp
add
or
std
test
mov
add
test
inc
push
loop
mov
es
ins
fsub
test
mov
sbb
loope
mov
xlat
ins
sub
cmps
add
xchg
loop
popa
sbb
add
dec
sbb
loopne
cli
sbb
std
sbb
loopne
pop
add
cmp
jne
or
call
add
data16
and
cmp
test
inc
mov
pushf
or
or
lock
pusha
mov
fnsave
sahf
and
repz
sar
or
mov
sub
daa
and
jnp
or
fisubr
jo
inc
ror
xchg
cmps
cdq
or
sbb
int3
or
imul
mov
ror
inc
fcmovbe
in
and
dec
pop
xor
adc
fstp
adc
retf
xchg
fld
pop
push
push
push
popa
cmps
mov
js
adc
cli
add
push
pop
inc
fisubr
in
sahf
mov
hlt
mov
sbb
add
push
inc
xchg
out
push
lock
stos
and
pop
mov
cs
test
mov
out
fmul
cmp
inc
adc
jbe
push
(bad)
push
loop
inc
jns
mov
mov
pop
jne
cld
xchg
and
add
out
ins
mov
pop
jne
jl
adc
sub
add
shl
mov
jle
iret
(bad)
fcmovbe
jbe
ds
neg
mov
outs
xor
inc
lods
cmp
push
pushf
in
mov
je
test
xchg
xchg
adc
(bad)
rol
cld
dec
pusha
movs
mov
xchg
sbb
add
adc
add
test
push
jno
mov
sbb
and
in
add
js
sub
fs
in
mul
and
jne
loopne
xchg
and
loop
or
cdq
popa
imul
cmp
lahf
inc
adc
xor
je
daa
jecxz
cmp
or
lea
shl
inc
adc
and
or
adc
xchg
cmp
pop
sub
dec
int3
xchg
sbb
icebp
adc
and
sub
mov
jecxz
push
xchg
or
sar
jne
push
or
or
shr
jp
sub
add
clc
adc
xor
adc
push
shl
bound
cmc
push
jmp
aas
and
inc
jo
bound
mov
test
adc
stos
test
or
ror
dec
xchg
push
(bad)
push
or
es
cmp
and
iret
arpl
and
jno
mul
call
cmp
stos
minps
adc
add
aaa
lea
(bad)
les
shr
add
lea
ss
imul
sbb
mov
xchg
inc
add
push
or
jmp
div
mov
jmp
(bad)
xchg
xchg
mov
dec
jl
test
push
cmp
xor
jb
loop
cmp
pop
repnz
pop
pop
mov
ins
lock
jns
fld
dec
addr16
cmp
mov
or
adc
add
ret
pop
sbb
or
je
or
inc
jae
bound
push
fcmovbe
adc
in
mov
fisttp
js
dec
repz
and
cmp
xor
fsubrp
adc
add
ja
mov
fisub
inc
jbe
jle
test
jg
adc
mov
inc
push
and
imul
mov
into
mov
mov
cmp
mov
jmp
inc
(bad)
mov
nop
test
xchg
mov
js
or
dec
lods
dec
cmp
ret
(bad)
push
rcr
outs
das
nop
rcl
push
inc
and
pop
pop
and
loope
not
sbb
inc
in
fst
cli
add
ins
sub
sbb
cmp
adc
pusha
cmp
inc
and
mov
in
adc
fidiv
jo
add
repz
inc
and
or
shr
cmp
jle
pop
ret
jb
jno
pop
push
push
jmp
mov
cli
sub
mov
and
mov
cwde
aad
dec
cmp
jb
mov
sub
push
add
pop
sub
daa
popa
push
sbb
pusha
bound
dec
bound
push
pop
pop
add
fld
inc
jl
rol
sti
ror
mov
jb
pop
mov
cwde
stc
jo
aam
dec
mov
mov
jbe
stos
push
shl
mov
xchg
xchg
shl
jg
dec
test
mov
loop
adc
test
inc
lods
fsubr
enter
xor
mov
lods
add
pop
call
std
or
sub
add
std
sbb
mov
jne
jecxz
(bad)
and
std
imul
pop
(bad)
cld
sti
xchg
mov
out
sahf
cld
stc
sti
clc
or
out
sub
or
jmp
mov
pop
fdivr
mov
dec
add
inc
xor
and
mov
mov
out
lods
(bad)
int3
mov
pusha
push
push
jne
neg
sar
or
jmp
dec
inc
adc
pop
in
jae
jecxz
out
(bad)
ds
pop
pop
push
jns
mov
mov
fwait
dec
and
test
sbb
or
lahf
jmp
mov
mov
sub
adc
lahf
push
rol
sbb
sbb
gs
cmp
xchg
adc
shr
xor
adc
inc
add
fwait
cmp
dec
dec
fadd
jg
sbb
and
adc
pop
add
adc
sub
int3
fs
push
xor
adc
in
jnp
adc
repz
cmp
loop
cmp
stos
movs
dec
sub
inc
jle
dec
std
or
cmp
dec
and
jmp
in
cmp
int3
into
and
dec
adc
shl
add
xlat
adc
add
xor
add
sub
xchg
cmp
mov
cld
fstp
xchg
xor
inc
jmp
push
daa
add
lods
pusha
xor
push
xchg
and
sub
shr
adc
lea
push
jno
and
jle
repz
pop
dec
pop
pop
adc
or
dec
repz
cld
std
sti
cld
cli
sti
loop
jl
jo
cli
push
out
sbb
xor
or
div
jmp
arpl
mov
inc
(bad)
std
cld
sti
sub
stc
dec
loope
call
adc
mov
cld
inc
push
inc
pop
or
aaa
push
add
add
push
or
mov
push
sbb
xor
or
test
mov
(bad)
cmp
jmp
fadd
dec
dec
jne
cmp
or
dec
out
pop
jo
ret
push
sub
pop
sbb
nop
popf
fcmove
cld
sti
test
mov
push
inc
jle
rol
add
movs
add
mov
or
test
cmp
dec
add
jmp
bound
sbb
outs
push
ret
repnz
lea
mov
or
inc
or
outs
or
sub
pop
and
(bad)
pop
test
sbb
sbb
popa
push
push
jg
cmc
cmps
test
mov
xchg
pop
clc
add
push
hlt
xor
(bad)
(bad)
mov
bound
test
sub
push
test
sbb
or
push
in
mov
and
movs
add
(bad)
inc
jne
xchg
and
mov
cmp
je
lods
jl
xor
jge
xchg
das
cmp
movs
nop
xlat
enter
xor
repz
push
mov
mov
aaa
mov
cmps
(bad)
sub
cmp
jne
cmp
cmp
fs
mov
jmp
xor
xchg
les
push
dec
jge
cmp
fisub
loop
add
cmp
ficomp
jg
lea
(bad)
add
add
add
aaa
jge
inc
rcl
mov
inc
inc
in
hlt
jne
mov
push
sbb
shl
jbe
adc
(bad)
adc
sar
dec
(bad)
xchg
mov
add
push
jmp
(bad)
ficom
xor
mov
sti
cs
shr
mov
inc
loope
jmp
inc
loope
mov
mov
pop
cmp
cmp
sub
xchg
stos
repnz
and
add
fistp
pop
or
sbb
sar
push
sub
sbb
aam
and
pushf
(bad)
dec
add
sbb
mov
mov
mov
sbb
xchg
aam
sbb
or
add
jno
jne
jmp
sti
sbb
push
shr
jecxz
fild
or
pop
or
jmp
iret
jmp
repz
outs
(bad)
mov
inc
ret
mov
inc
cmp
iret
sbb
pusha
adc
fprem
jle
and
add
clc
mov
rcl
lock
add
sub
fisub
loopne
adc
and
add
jb
test
scas
add
inc
(bad)
jge
call
pop
mov
pushf
cmp
ss
ins
bnd
jb
mov
sub
xchg
add
add
xchg
xchg
test
add
repz
clc
cmp
fwait
pop
inc
out
jmp
jns
jecxz
sti
(bad)
fsubrp
push
jmp
sub
rol
add
loopne
shr
add
cli
out
push
loopne
cli
bound
pop
into
mov
add
shl
loopne
daa
push
mov
in
ficom
retf
shl
out
pop
std
outs
dec
cmps
add
mov
imul
and
pop
mov
ror
push
xchg
adc
push
push
mov
movs
pop
xchg
aam
sub
pop
shl
push
ins
fmulp
push
popa
shr
push
jp
cwde
xor
or
cmps
xor
xchg
ss
dec
lock
sub
add
mov
cwde
clc
jmp
sbb
jle
pop
mov
nop
imul
daa
call
fild
jne
xor
mov
jnp
(bad)
out
test
mov
je
loop
fdivr
inc
jmp
dec
call
mov
dec
sub
adc
pop
mov
inc
(bad)
pop
push
fs
jne
mov
mov
aad
and
jmp
test
mov
icebp
and
adc
and
lds
add
call
push
inc
push
lea
inc
sbb
or
jae
clc
jp
mov
sbb
push
ficomp
enter
add
aas
aas
ret
adc
inc
inc
sar
and
ins
(bad)
fist
dec
push
cld
out
nop
jle
iret
(bad)
nop
enter
fldl2e
jmp
js
push
inc
and
dec
loope
push
ret
mov
xor
sub
cmp
jmp
pop
sbb
retf
pop
xchg
push
or
jae
push
xchg
jbe
dec
pop
and
sub
nop
inc
mov
call
or
mov
pop
shr
loop
mov
loopne
xchg
lahf
adc
rcr
shl
adc
rol
push
in
or
jbe
lea
and
sub
rcr
fistp
xor
stc
add
fwait
add
xchg
jno
ds
dec
xlat
fild
mov
pusha
or
scas
mov
sbb
popf
dec
pop
adc
inc
dec
pop
adc
adc
and
pop
xchg
mov
adc
clc
mov
mov
or
jmp
xchg
mov
xchg
dec
ret
sbb
call
xchg
dec
and
(bad)
rcl
push
mov
rcr
xchg
or
js
das
mov
mov
ror
xor
xchg
pop
push
retf
xor
mov
mov
cld
xchg
sub
enter
std
sbb
movs
loop
mov
imul
imul
leave
add
js
(bad)
mov
jbe
cmp
sti
add
jmp
add
add
and
stc
or
dec
dec
mov
repnz
arpl
and
jnp
add
or
jno
sahf
mov
jnp
js
pop
popf
das
cmp
cmp
stos
add
jmp
ret
push
add
push
or
in
pusha
inc
or
add
pop
mov
mov
jmp
push
xchg
push
jmp
add
pushf
or
adc
mov
bound
je
jnp
mov
rol
enter
imul
popa
or
fwait
ins
dec
popa
add
xchg
cmps
sbb
lods
call
movs
cmp
pushf
lahf
add
cwde
xchg
fxsave
mov
cmp
mov
adc
mov
mov
mov
jmp
mov
inc
ss
adc
inc
or
retf
cmp
outs
fild
stc
fst
mov
add
cmp
push
mov
je
or
fsub
xchg
sub
xor
sbb
js
and
jns
jae
out
pop
cs
sub
mov
jmp
rol
enter
(bad)
mov
or
mov
sti
movs
out
and
and
cmp
dec
pop
popa
cwde
inc
ss
call
rol
adc
out
and
jg
push
mov
mov
ror
mov
add
outs
sti
xchg
dec
xchg
jmp
jno
jge
jns
pop
jmp
movs
sub
dec
rol
shr
fadd
lahf
retf
cmp
aaa
in
sub
or
push
ds
dec
mov
mov
and
fisttp
push
xor
mov
pop
adc
dec
(bad)
clc
adc
jae
das
mov
(bad)
iret
inc
jp
sbb
and
dec
adc
dec
dec
dec
inc
pop
repnz
add
pop
add
xor
and
inc
inc
add
adc
and
popf
push
pop
sbb
inc
adc
jmp
mov
adc
and
and
call
lahf
mov
sahf
je
fnstenv
(bad)
fisttp
retf
mov
retf
leave
mov
shr
(bad)
add
int3
sbb
jl
cmp
pop
add
xchg
sbb
sbb
out
das
enter
add
mov
push
nop
add
mov
xchg
dec
je
movs
mov
adc
sbb
dec
sbb
fld
stos
sub
adc
push
outs
pop
icebp
movs
cmp
push
sbb
cli
iret
pop
retf
ret
loop
mov
js
dec
pop
pop
add
add
cs
test
lock
dec
add
mov
push
pop
inc
test
cmp
pushf
ins
lahf
cmp
adc
or
repz
scas
xchg
dec
enter
add
add
or
mov
ds
add
rcr
pop
inc
nop
sbb
gs
scas
mov
cli
mov
adc
adc
push
inc
adc
dec
movs
(bad)
jns
je
les
pushf
stc
mov
xchg
or
shr
leave
sbb
add
fcmovbe
jmp
mov
xchg
scas
cdq
jge
xor
xchg
or
ror
sub
and
xchg
out
jo
add
scas
test
mov
(bad)
or
fnstenv
(bad)
lds
push
jg
push
push
xor
nop
leave
xchg
mov
adc
sahf
or
(bad)
out
shr
and
test
sahf
mov
xchg
loop
loop
int3
retf
sbb
retf
or
pop
push
imul
xchg
pop
jg
outs
nop
cdq
inc
add
xchg
jle
add
adc
sub
cwde
adc
imul
xchg
ret
jo
movs
enter
imul
push
xchg
ins
out
sbb
mov
cmp
mov
lock
test
sub
add
dec
and
jne
pop
lock
ror
outs
cmp
add
inc
pop
xor
dec
ret
ja
adc
xchg
add
inc
jnp
test
add
push
push
pop
rol
repz
jl
test
call
cmc
jmp
cmps
xsaves
mov
cld
or
ret
std
pop
addr16
or
mov
add
dec
add
add
repnz
shl
xchg
sub
pusha
movs
cmp
nop
sbb
lahf
add
add
es
or
iret
add
and
shl
nop
ins
pusha
or
lods
data16
fincstp
dec
sbb
pushf
test
or
jmp
mov
push
or
and
add
movs
adc
and
push
dec
adc
dec
mov
sti
add
retf
sbb
or
or
pop
adc
or
and
jo
ror
inc
(bad)
jge
pop
sbb
loope
and
xor
push
or
or
ret
cmp
inc
mov
repz
mov
pop
push
adc
jmp
or
dec
cdq
xchg
xor
adc
mov
test
sti
add
stos
add
cmovbe
cmp
sbb
mov
mov
das
pop
add
ror
pop
xlat
fdiv
mov
sbb
jne
add
inc
xchg
or
xor
add
clc
push
xchg
jg
sbb
aas
mov
inc
mov
or
push
lock
scas
mov
sti
sub
pop
mov
cmp
or
add
test
or
ret
push
inc
mov
or
pop
add
cmp
(bad)
dec
jne
cmp
mov
aam
jge
cmp
lea
xor
call
call
shr
aad
lahf
xor
xchg
cmp
leave
fiadd
ins
in
jo
add
pop
pop
pushf
rol
lods
xor
or
les
rol
cmps
and
(bad)
(bad)
in
je
push
dec
loope
pushf
fldenv
sub
add
sbb
test
xor
adc
mov
push
pop
jle
pop
mov
in
sbb
add
sbb
lock
dec
jne
xor
shl
push
lea
out
sbb
sbb
lahf
add
add
and
mov
inc
cdq
add
xchg
and
add
mov
and
lock
cmp
call
adc
je
xchg
sbb
outs
push
jmp
daa
xor
jne
jl
mov
sbb
(bad)
jmp
xor
(bad)
cs
sbb
lea
(bad)
push
add
mov
xor
sbb
xor
data16
mov
lds
or
or
push
fistp
mov
je
mov
mov
jb
pushf
dec
dec
ret
scas
mov
stos
js
xchg
mov
add
sbb
mov
pop
dec
add
nop
mov
push
pcmpeqb
jb
or
xor
outs
ins
add
bound
test
adc
mov
loope
sub
push
xor
push
add
mov
pushf
lgdtd
mov
ins
ins
jle
mov
ror
and
faddp
test
cmp
add
jne
mov
add
pop
xchg
(bad)
mov
xchg
inc
sub
fidivr
mov
add
adc
or
mul
stc
push
call
jmp
das
dec
cmps
push
add
lds
add
jmp
dec
pop
dec
aam
pop
sub
hlt
adc
xchg
retf
dec
hlt
add
fistp
aam
jo
push
add
push
xor
dec
jecxz
add
ja
sub
and
inc
push
mov
xor
pop
add
mov
or
dec
mov
dec
dec
dec
jne
ret
or
sub
popf
mov
nop
xor
ficomp
fistp
inc
or
and
inc
ss
test
cmp
lods
mov
cli
cmp
sbb
pop
je
(bad)
into
fadd
adc
verw
loope
and
pop
or
retf
mov
push
jmp
adc
mov
pop
mov
scas
and
add
jb
push
adc
mov
mov
cmp
aaa
aaa
in
(bad)
jne
push
(bad)
push
(bad)
cmp
fiadd
sahf
shl
add
or
push
adc
mov
les
mov
xchg
ja
dec
lods
xchg
in
add
add
pop
cld
paddd
pop
shl
sti
repnz
jne
or
cld
jne
std
jne
ss
pushf
cmps
rcl
psubq
lods
jne
pop
adc
push
push
sbb
das
add
jb
shl
push
push
mov
xor
xchg
push
add
rol
and
movs
jne
mov
mov
int
shl
pop
cmp
push
push
mov
push
or
inc
dec
add
popa
push
jo
call
mov
pop
sar
out
and
pop
adc
adc
aas
jbe
inc
or
into
ret
adc
mov
aas
hlt
push
mov
cmp
push
sahf
and
adc
add
inc
xchg
mov
ins
dec
lods
mov
add
clc
and
cmc
or
add
push
or
mov
mov
sbb
xor
inc
push
in
xchg
mov
mov
adc
and
mov
cmp
sbb
test
cwde
cdq
add
jns
hlt
push
clc
adc
add
(bad)
ss
icebp
sbb
pop
je
leave
sub
ins
fidivr
xor
add
stc
bound
shl
cmp
jo
or
push
mov
xor
daa
pop
add
xor
test
mov
cld
test
ret
pop
pop
aaa
jne
inc
mul
ja
push
jnp
xchg
hlt
jnp
sbb
sbb
ja
pop
cmps
sbb
jg
or
dec
adc
and
nop
xchg
mov
add
jmp
pop
xchg
clc
add
and
pop
adc
inc
dec
pop
and
xchg
std
shr
out
mov
add
and
dec
add
dec
push
xor
aas
push
fmul
cmp
dec
lahf
pusha
rol
ds
test
dec
add
adc
(bad)
mov
not
fadd
sti
inc
and
inc
cmps
mov
fistp
xchg
test
sub
xor
nop
lods
pusha
lds
test
jg
sub
test
mov
and
shl
dec
and
fdiv
es
sub
dec
or
ins
and
neg
dec
sbb
jge
or
outs
dec
shr
test
jno
xchg
cmc
cld
jno
iret
push
repnz
dec
or
jl
and
inc
add
push
pop
push
push
and
pop
mov
sub
icebp
and
enter
pop
outs
les
xchg
pop
outs
les
push
push
jp
adc
ins
repnz
sbb
dec
sbb
lock
jmp
(bad)
fsubr
cmp
mov
push
cmc
loopne
movs
mov
xor
adc
inc
sbb
or
test
mov
mov
out
jmp
cmp
jne
inc
adc
add
pop
shr
ret
dec
adc
xor
xchg
lods
xchg
jmp
popa
cmp
add
lahf
adc
push
or
(bad)
mov
lahf
movs
mov
inc
imul
cmp
inc
mov
adc
dec
adc
dec
ss
sub
cmp
pop
arpl
aas
add
mov
ins
or
inc
xor
cmp
dec
and
adc
pop
xchg
and
sub
push
xchg
rcr
aam
mov
(bad)
mov
fisubr
cmp
push
push
dec
rcl
mov
adc
je
xor
mov
and
inc
push
inc
push
je
lea
movs
adc
jl
mov
push
das
or
push
or
rcl
movs
sbb
pop
movs
imul
int3
push
pop
mov
push
sub
xchg
sar
sub
cmc
sbb
hlt
imul
mov
retf
dec
movs
dec
leave
push
lds
aas
add
ret
outs
adc
sar
outs
adc
mov
mov
mov
ins
jl
lock
pop
push
adc
pop
adc
jmp
inc
aam
es
scas
std
cdq
lds
cmp
jge
aas
cmp
jne
and
add
adc
js
aas
dec
or
push
fwait
ins
imul
movs
inc
ins
pop
cmp
cmp
jnp
xor
push
mov
retf
enter
mov
or
push
ins
das
adc
cmp
pop
sub
push
or
add
lods
shl
fstp
push
aaa
and
in
sar
inc
sub
jmp
cmp
jne
lahf
clc
call
das
dec
cmp
jae
enter
sar
mov
je
cmc
sbb
ins
loopne
or
xchg
movs
xchg
and
adc
mov
rol
cmp
sbb
ins
inc
in
enter
test
jecxz
inc
pop
sub
add
mov
adc
mov
xchg
and
xor
imul
xchg
(bad)
jmp
daa
inc
and
scas
pusha
sar
sbb
pop
enter
sub
movs
stc
rcl
sub
je
xchg
inc
sbb
jg
out
push
imul
test
addr16
push
dec
adc
adc
lods
inc
inc
stc
dec
dec
xlat
jo
xor
push
movs
cmps
jbe
mov
adc
mov
fadd
int3
fs
fcomip
mov
cli
push
xor
lahf
add
mov
mov
test
pop
inc
pop
inc
inc
jb
xor
push
mov
ins
and
inc
jmp
inc
(bad)
push
or
lods
cmp
daa
push
add
inc
call
push
jp
jmp
jl
push
or
sbb
mov
pop
add
pop
dec
fcomp
and
and
push
and
bound
sub
adc
inc
mov
je
or
rcr
js
shr
aam
jo
xor
pop
(bad)
jle
pop
dec
add
cmp
inc
push
loope
outs
rcr
(bad)
pusha
mov
inc
xor
push
xchg
or
and
xor
je
(bad)
in
adc
fisub
adc
sbb
pop
xlat
repz
push
pop
or
pop
xchg
xor
inc
xor
sbb
adc
or
cmp
xchg
in
xchg
lods
lfs
je
ret
in
das
push
add
outs
adc
inc
inc
xchg
adc
popa
cmp
pop
sahf
sbb
std
outs
dec
les
inc
cmp
push
ror
es
jno
popa
add
lods
push
and
inc
pop
lods
cld
scas
ror
push
add
jl
pusha
mov
les
push
mov
je
ret
inc
test
ins
dec
pop
push
mov
mov
pop
add
dec
dec
push
adc
pusha
mov
arpl
sbb
add
imul
loopne
ja
fist
fwait
push
push
cmp
jae
inc
add
cmp
pop
sub
add
cmc
jmp
loopne
clc
dec
shl
push
inc
out
mov
dec
inc
pop
and
and
repnz
jmp
stos
inc
mov
push
pop
cli
or
add
xchg
call
mov
scas
stos
pop
jmp
mov
jp
stos
ins
or
outs
mov
jl
dec
inc
adc
popf
and
jne
rcl
push
sub
add
cmp
push
xor
sbb
mov
mov
mov
mov
popa
je
stos
mov
dec
push
lods
aaa
or
jmp
pop
pop
push
cmp
fs
or
inc
sub
push
jb
jo
add
dec
aam
cmc
push
and
or
add
jmp
clc
test
fldcw
add
dec
add
nop
push
or
sub
out
pop
ss
mov
clc
xchg
cmp
push
dec
sbb
dec
mov
shl
sbb
nop
cmp
fs
rol
push
adc
nop
mov
cmp
test
inc
sbb
sub
js
push
and
cmp
sub
xor
sub
jmp
aas
jnp
scas
jo
mov
inc
movs
sub
or
xor
in
add
push
cmp
sar
inc
ret
mov
sub
(bad)
nop
pop
adc
xor
add
or
jns
add
mov
xor
dec
and
inc
push
and
(bad)
and
cmps
nop
sub
into
add
in
push
ins
adc
cmp
jbe
jle
stos
push
sbb
iret
sbb
fbstp
cmp
inc
add
cld
mov
test
dec
das
or
add
stc
dec
inc
sbb
push
push
outs
(bad)
and
or
mov
add
push
push
mov
jne
mov
sub
mov
mov
pop
push
or
add
je
add
movs
stos
sub
inc
adc
add
mov
arpl
or
pop
arpl
mov
xor
xor
mov
movs
leave
mov
lahf
loopne
je
scas
adc
pop
pop
(bad)
push
(bad)
cmp
push
xor
daa
add
dec
mov
pop
fwait
dec
xchg
xlat
xchg
(bad)
out
mov
movs
stos
mov
adc
cs
add
xchg
dec
pop
mov
adc
imul
xor
rcr
jns
aam
imul
or
inc
mov
movs
add
jp
inc
dec
push
sub
dec
(bad)
fisub
dec
push
pop
imul
pop
je
sbb
cmps
jb
outs
pop
pop
iret
into
stos
bound
push
jno
sbb
push
cdq
sub
push
or
sub
or
push
xor
das
(bad)
push
fcomp
rcr
pop
jno
sub
jmp
lock
scas
sahf
jb
ror
jp
push
hlt
fcomp
sub
xchg
add
dec
call
pusha
xor
imul
mov
jae
inc
xchg
xlat
or
pop
adc
ret
dec
mov
xchg
and
and
stos
shr
add
ret
or
dec
xor
repnz
or
inc
mov
push
jle
cmp
push
mov
jnp
mov
mov
dec
jge
xor
mov
jno
push
add
xor
out
cmp
idiv
push
rol
push
pop
push
inc
mov
pop
data16
xor
xor
imul
enter
mov
xchg
push
(bad)
mov
mov
mov
xor
mov
aaa
or
es
dec
adc
movs
not
adc
ret
mov
aaa
or
lods
inc
pop
cmp
push
ret
aad
mov
or
pop
dec
add
int
stos
inc
add
(bad)
and
(bad)
and
xor
sub
and
adc
inc
add
xor
dec
fld
cmp
and
push
push
out
stc
(bad)
mov
inc
les
arpl
call
pop
mov
das
mov
mov
mov
repnz
int3
ret
sbb
in
push
push
jmp
sbb
add
or
pop
pop
and
nop
cmp
das
popa
add
adc
cmps
add
lock
adc
adc
push
pop
push
lock
mov
pop
adc
add
sbb
dec
inc
out
sub
leave
das
dec
pop
sub
nop
lds
mov
je
icebp
pop
push
cld
cmp
inc
fcom
sub
push
(bad)
aaa
test
lahf
sahf
inc
mov
pusha
repnz
nop
inc
clc
or
or
ja
shr
nop
scas
sub
jb
jl
adc
sub
mov
xchg
ffree
nop
cmp
inc
outs
cmp
nop
push
jmp
or
pop
jl
mov
inc
jl
repz
pusha
pusha
mov
xchg
add
push
add
and
push
dec
mov
movs
ror
pop
movs
xchg
mov
sbb
ins
pop
fld
in
add
outs
cmp
cmp
in
add
add
outs
adc
pop
(bad)
shr
add
adc
rcr
sub
and
lods
adc
mov
(bad)
std
rol
sbb
and
and
adc
adc
ins
jne
add
lds
loope
rcr
aad
ins
jl
inc
xor
mov
or
cmp
or
push
dec
xchg
jno
push
into
or
inc
clc
inc
or
mov
retf
mov
test
mov
inc
mov
and
push
sub
adc
retf
and
clc
inc
js
or
mov
aas
loopne
stc
fiadd
and
pop
clc
enter
xor
inc
mov
test
int3
movs
pop
and
mov
je
(bad)
xor
push
and
pop
nop
popa
jb
dec
popa
aas
adc
enter
imul
add
mov
inc
cwde
jmp
add
rol
mov
dec
aas
iret
pop
push
or
in
(bad)
push
adc
imul
ins
cmp
ins
jl
xchg
(bad)
mov
lea
push
out
or
aas
popf
jl
and
inc
shr
aas
mov
add
mov
add
xchg
cmp
dec
adc
mov
add
xor
push
div
sbb
add
jl
inc
jno
fist
ret
jbe
dec
aam
inc
data16
imul
ds
or
mov
or
jmp
aad
inc
fisttp
push
or
fbld
pop
fidiv
jmp
sti
xchg
pop
loop
cmp
je
addr16
mov
cdq
jecxz
mov
and
adc
sbb
or
xor
fld
cmp
gs
sar
inc
cmp
mov
add
sbb
add
into
push
stos
imul
xchg
cmp
inc
xor
out
cmp
stos
push
shl
dec
inc
enter
rcr
inc
shl
mov
and
push
jecxz
aas
sub
(bad)
stos
and
xchg
les
daa
push
xchg
push
mov
push
call
sbb
ins
out
in
push
add
mov
dec
cmp
je
dec
int3
mov
imul
xor
adc
shl
jo
add
push
inc
shl
mov
or
and
dec
push
hlt
mov
adc
mov
jb
dec
push
adc
and
mov
jns
lds
pop
push
inc
pusha
and
push
fnop
sub
sub
sub
adc
add
stos
xor
cmp
popa
mov
or
loopne
xor
or
inc
ret
adc
sti
or
or
popa
adc
pop
rcr
or
fild
mov
cmp
pop
cmp
xor
xchg
icebp
jne
push
push
pop
int3
mov
pusha
or
(bad)
jmp
fcomp
(bad)
sbb
add
dec
(bad)
sub
pop
push
aas
push
cmp
jge
sbb
inc
adc
and
dec
lods
ds
leave
shr
dec
aas
push
sti
mov
in
(bad)
dec
or
retf
add
lock
clc
icebp
rcl
jae
fisttp
add
add
jl
push
add
add
je
cwde
cmps
and
push
add
xor
and
push
rol
retf
adc
jmp
js
je
push
xchg
loopne
push
bound
pop
clc
int
pop
lods
daa
push
sbb
(bad)
std
cmp
jae
inc
lds
rol
xchg
or
sbb
push
jl
psrad
imul
cli
out
adc
neg
jnp
fs
inc
and
cwde
movs
fmul
xchg
sar
inc
jmp
jne
inc
mov
mov
fwait
push
jmp
adc
jne
mov
push
push
mov
je
enter
mov
push
cli
mov
mov
ds
jne
mov
sti
int3
sbb
and
sbb
adc
mov
push
neg
xlat
add
jmp
retf
dec
mov
aaa
fiadd
fldenv
fistp
(bad)
(bad)
mov
mov
add
add
add
fsub
loop
jae
mov
cmps
loope
addr16
xchg
call
out
nop
inc
add
jbe
add
inc
cmp
sbb
xor
int
or
inc
add
and
push
movs
(bad)
aam
add
das
adc
shl
das
and
dec
mov
push
test
popa
cld
rol
rcr
pop
loope
rol
push
leave
fstp
or
mov
mov
lea
rcl
push
or
inc
pop
pop
retf
push
xchg
or
in
mov
shl
add
mov
inc
sbb
add
inc
mov
push
sbb
jmp
push
popf
shr
pop
fldenv
sahf
or
mov
(bad)
xor
xchg
jg
shl
jnp
loopne
push
push
in
sub
pusha
(bad)
inc
or
rol
jle
mov
add
jg
cmp
enter
push
add
pop
nop
movs
gs
mov
pop
test
enter
jb
mov
addr16
mov
add
in
adc
xchg
xor
dec
jb
je
pop
inc
and
(bad)
jg
adc
sub
scas
cmps
cmp
inc
jne
das
mov
jle
call
pusha
loop
dec
mov
or
fadd
add
push
(bad)
(bad)
xor
mov
inc
daa
pop
xchg
mov
test
mov
cmp
pop
repnz
hlt
or
retf
add
dec
dec
and
mov
inc
add
fs
dec
arpl
mov
cmp
sub
data16
(bad)
dec
rol
out
mov
cmp
push
inc
or
lods
leave
dec
jmp
and
jne
jae
jl
data16
rol
mov
jmp
push
inc
jl
inc
jg
aaa
movs
or
retf
push
dec
xchg
mul
xchg
dec
sahf
jne
jmp
call
inc
pop
lock
push
stc
cmp
pop
and
cmp
sub
xor
fdivr
sub
mov
out
cmp
jne
push
loopne
popa
fadd
cs
(bad)
jmp
aaa
lods
push
adc
enter
or
cmp
lea
mov
sub
imul
(bad)
stc
mov
outs
push
pop
les
inc
cmp
fst
fmul
out
ret
shl
mov
mov
add
jbe
int3
adc
add
mov
cmp
popa
jne
dec
enter
inc
dec
mov
cmp
(bad)
mov
and
sub
test
jp
sub
nop
and
inc
dec
les
or
cmp
addr16
or
xor
xor
cmp
dec
cmp
jne
mov
push
mov
push
add
mov
mov
mov
adc
xor
or
push
or
bound
fs
sub
jns
shl
xchg
fld
leave
ins
add
cmp
lea
aaa
jecxz
je
and
cmp
or
rol
mov
pop
cmp
fsubr
movs
adc
mov
(bad)
jecxz
lea
sbb
rol
fucomi
(bad)
stos
mov
jmp
xor
dec
dec
dec
cld
adc
inc
mov
add
mov
ret
loopne
repz
mov
jl
jg
dec
jnp
cs
or
and
cli
into
xor
iret
daa
jle
adc
sar
and
and
inc
dec
ret
cmp
clc
jmp
(bad)
ds
mov
fisub
add
loopne
ficom
lea
pop
stc
popf
clc
sub
cmp
out
mov
inc
inc
add
sbb
rol
lahf
(bad)
cmovbe
adc
pop
xor
fcom
add
clc
cmp
xchg
rol
dec
retf
sub
sub
inc
inc
or
inc
or
inc
dec
or
ja
ror
ins
str
jp
fs
retf
ror
loop
pminsw
ds
outs
rol
jl
push
shl
cmp
jbe
ja
rol
fwait
mov
daa
pop
pop
pop
aas
push
cmp
out
pop
retf
jo
xchg
call
nop
adc
loope
inc
and
mov
jmp
sar
mov
outs
inc
add
dec
push
push
cmp
inc
jo
ins
pop
loop
sbb
cmps
cmp
loope
mov
cmps
repz
(bad)
dec
lea
add
push
inc
push
sar
adc
or
dec
or
nop
jbe
les
xor
dec
sar
test
add
inc
adc
cmps
dec
inc
ins
adc
add
aas
arpl
and
xchg
out
mov
xor
lahf
push
fstp
push
push
dec
dec
dec
mov
loopne
or
xlat
mov
jo
or
mov
imul
rol
push
adc
xchg
add
sahf
fs
adc
in
dec
or
ins
jge
push
in
sar
xor
lea
or
rcr
mov
add
fiadd
pop
adc
and
and
imul
jne
add
mov
je
lock
push
push
leave
mov
push
mov
inc
ds
dec
or
jp
rcl
mov
push
mov
in
cmc
inc
jmp
push
cli
or
test
aas
sar
adc
jb
dec
int3
xor
xor
add
and
outs
add
or
or
sbb
pop
js
add
sub
iret
jp
adc
push
sbb
jmp
add
mov
dec
mov
je
jmp
jmp
test
cmp
lds
dec
mov
sub
cmp
dec
add
test
pop
inc
add
jo
and
ss
or
loopne
out
fs
lock
stos
or
sbb
scas
push
iret
cmp
mov
sti
cmp
push
ds
ins
(bad)
jo
sub
dec
pop
loope
xchg
lods
mov
add
jecxz
fwait
lock
cmp
call
or
or
pusha
and
mov
mov
les
or
adc
loope
nop
(bad)
or
loope
cmp
pop
retf
or
push
jg
mov
mov
xor
dec
test
adc
fiadd
xor
push
mov
outs
movs
dec
dec
test
pusha
sbb
push
sahf
inc
push
in
dec
or
jnp
sar
xchg
out
pusha
cmp
pop
adc
xchg
or
cmp
xchg
nop
(bad)
data16
inc
hlt
mov
inc
xor
pop
jne
mov
dec
sbb
aaa
lds
or
inc
push
(bad)
cmps
push
mov
or
movs
and
adc
dec
mov
push
add
add
add
nop
rcr
sub
sub
hlt
rcl
mov
push
sbb
leave
test
push
or
fcom
dec
adc
mov
ret
mov
loope
xor
push
pusha
mov
sbb
mov
loopne
add
adc
out
shl
shr
xchg
popf
add
aas
mov
cwde
clc
adc
or
ffree
sub
out
sub
or
adc
es
and
out
mov
rcr
mov
push
cmp
ds
(bad)
pop
adc
and
mov
adc
loopne
out
xchg
jns
cmp
push
and
sub
ss
js
(bad)
aam
dec
push
leave
ret
cmp
je
in
ret
push
mov
inc
shr
pop
addr16
jmp
in
cwde
mov
sub
jmp
mov
pusha
test
fild
push
adc
push
leave
and
dec
push
push
mov
loopne
pushf
mov
sbb
inc
jle
xchg
retf
(bad)
(bad)
(bad)
mov
pop
pop
ins
adc
ds
stos
or
xor
mov
sti
or
cmp
sub
push
sbb
mov
cmp
dec
dec
add
dec
arpl
pop
repnz
mov
js
popf
lahf
mov
repz
jge
imul
cwde
dec
into
adc
jmp
add
ds
adc
cs
sbb
pusha
mov
xchg
cmps
and
outs
and
popf
jo
xchg
retf
test
xor
add
pop
fisttp
adc
in
pop
mov
jne
dec
popa
mov
add
add
push
sysret
mov
and
adc
lea
push
mov
movs
add
sub
ror
and
fnstsw
cmp
ins
cmp
push
jge
out
cmc
movs
and
add
dec
cmps
repz
dec
mov
imul
pop
adc
int3
shr
cmps
fs
adc
cwde
sbb
dec
dec
pusha
cmp
pop
(bad)
sub
popf
and
pop
cmp
ret
addr16
ja
enter
push
add
cld
cmp
int3
sub
outs
mov
jmp
push
inc
cmp
enter
mov
sbb
aaa
xchg
push
test
sub
xor
(bad)
xchg
inc
cmp
movs
jl
or
push
push
pop
scas
sub
adc
jl
inc
mov
push
jmp
pop
test
cmc
das
movs
cmc
imul
push
dec
dec
pop
jmp
cmp
lock
mov
add
inc
and
jae
test
mov
ss
pop
xchg
mov
or
and
adc
inc
int3
mov
pop
mov
push
enter
add
adc
ficomp
sbb
pop
sbb
lock
xchg
mov
(bad)
dec
jmp
xor
pop
(bad)
call
mov
(bad)
lds
enter
inc
add
mov
xor
sbb
(bad)
mov
pop
into
push
mov
sbb
je
dec
dec
push
push
inc
mov
in
inc
lods
mov
sahf
lock
inc
cmp
mov
adc
(bad)
lods
add
push
int3
rcl
loopne
loopne
sar
mov
mov
nop
les
loope
sbb
jnp
or
and
mov
inc
bound
xchg
push
shl
push
repz
ins
or
popf
gs
cmovg
push
cmc
ja
pop
mov
cmp
push
in
or
push
add
jmp
add
xor
adc
add
mov
mov
pop
fwait
add
xor
sbb
mov
ror
add
or
es
bndstx
int3
cmp
adc
dec
mov
cmp
jno
retf
sbb
or
scas
lahf
or
arpl
daa
push
and
loope
or
lock
inc
cmp
cmp
pop
pop
inc
dec
lods
dec
inc
or
imul
inc
orps
pop
movs
je
xchg
lods
jmp
mov
push
mov
aas
jl
push
test
retf
lds
add
push
inc
cmp
jmp
outs
inc
mov
cmp
jmp
jp
mov
push
inc
mov
and
ret
mov
fdiv
adc
add
push
(bad)
cmp
pop
pop
xor
inc
jne
in
pop
shr
cmp
test
pushf
push
fsubrp
sbb
mov
mov
imul
or
shl
sbb
fld
jp
sbb
xchg
aaa
in
pop
int3
clc
dec
cmc
xchg
jno
add
mov
mov
je
imul
test
gs
and
add
out
nop
mov
mov
inc
push
imul
pop
imul
push
cdq
lock
icebp
outs
and
loope
xor
sub
jg
and
push
int3
mov
test
mov
push
sahf
ins
push
jmp
or
test
pusha
test
cmps
dec
mov
jg
add
add
dec
and
add
cmp
mov
je
aas
inc
ret
pop
cmp
pop
or
in
rcl
jmp
es
mov
or
ret
xchg
js
xor
or
add
or
jle
in
leave
in
mov
or
adc
xor
sbb
in
aas
(bad)
sub
jb
add
fbstp
out
lea
inc
into
push
fisttp
pop
push
into
cmp
push
popf
test
std
cmp
cmp
add
sub
xor
ds
pop
mov
sbb
aas
stos
call
fadd
iret
cmps
jg
adc
nop
dec
xor
(bad)
cmp
aaa
jb
sbb
xchg
fldenv
push
shr
stos
pop
cmp
les
and
mov
call
pusha
sar
lods
adc
push
jg
je
in
rol
fimul
fsubr
adc
mov
dec
cmp
pop
mov
pop
data16
sub
mov
fnstcw
mov
pop
dec
(bad)
xchg
repnz
adc
inc
in
xchg
add
add
inc
jl
push
pop
jae
xor
(bad)
and
scas
cmp
adc
add
mov
ret
lea
jecxz
xor
sub
pop
sbb
popa
rcl
add
push
adc
stc
cmp
icebp
push
inc
push
retf
add
add
mov
clc
inc
pop
sbb
in
pusha
add
mov
mov
cmp
push
add
clc
push
mov
and
(bad)
stc
popf
jne
cs
jmp
clc
add
cmp
loope
push
mov
add
dec
lds
mov
in
add
cmp
je
cmp
je
pop
test
je
add
xor
leave
(bad)
push
adc
loope
dec
mov
push
jmp
or
call
fisub
(bad)
jmp
and
cs
mov
mov
pop
mov
mov
js
sub
inc
inc
daa
xchg
add
inc
or
sbb
push
pop
and
mov
scas
jne
rol
push
jo
inc
push
rol
inc
aaa
sub
add
mov
add
(bad)
dec
rol
mov
jb
fs
jl
lods
adc
lods
jne
and
pop
add
rol
adc
inc
leave
ret
or
inc
add
sub
xor
adc
loope
add
pop
and
inc
inc
xchg
(bad)
and
pop
(bad)
fldcw
xor
repz
sbb
or
cld
push
and
dec
shl
push
jp
in
fsub
sbb
aaa
xchg
add
xor
jb
ficom
mov
cwde
inc
xchg
sub
push
or
out
sbb
in
xchg
mov
leave
push
nop
mov
sub
push
jne
clc
inc
pop
bswap
mov
loopne
add
shl
test
jecxz
push
jb
inc
mov
rol
les
mov
int3
aad
inc
in
xchg
mov
adc
std
mov
inc
or
jo
mov
pop
aam
dec
int3
into
jae
push
push
mov
mov
shl
jae
ret
dec
mov
jns
sub
mov
rol
cmp
fst
pop
and
enter
lods
xor
inc
mov
inc
xor
adc
out
pop
pop
sbb
loopne
mov
dec
ret
xchg
mov
and
test
test
sbb
xor
jmp
icebp
push
call
inc
je
sub
xchg
fdivr
xor
inc
and
dec
push
lods
fdiv
inc
jecxz
cmp
adc
add
dec
mov
pop
loop
jg
pop
xchg
nop
adc
mov
dec
push
ret
xchg
push
sbb
retf
and
ror
xchg
lods
jecxz
aaa
add
inc
ds
cmps
inc
sub
fsubr
in
jl
xor
add
mov
push
push
sbb
cmp
inc
adc
jne
sbb
fwait
loop
adc
enter
(bad)
je
sbb
mov
pop
push
add
add
push
mov
push
in
push
pop
mov
sti
or
jmp
xchg
jmp
pushf
mov
xchg
or
sub
push
clc
and
xor
and
pushf
pop
jmp
sahf
pop
mov
sub
xlat
shl
pusha
adc
test
and
xor
push
and
(bad)
in
add
sub
xor
mov
in
retf
sbb
mov
mov
cwde
or
(bad)
mov
dec
test
pop
cmp
xor
sbb
lods
sub
and
out
jge
xor
pop
add
inc
inc
sbb
aaa
or
je
sbb
pop
cmps
adc
jae
dec
es
aaa
mov
pop
add
sbb
in
mov
pushf
repz
sar
inc
sub
sbb
push
or
jb
dec
push
ins
movs
or
pop
pop
inc
mov
sub
and
adc
push
dec
inc
push
jb
jge
mov
or
xchg
fcomp
mov
aaa
inc
lahf
imul
pop
inc
cmp
(bad)
into
pusha
push
fwait
(bad)
pop
push
xlat
add
mov
repz
imul
push
cmp
in
or
fld
jne
jmp
push
jmp
cld
cmp
cmp
jne
mov
out
cld
inc
dec
or
mov
(bad)
jmp
push
add
mov
jb
cmc
jg
mov
sub
ret
xor
jbe
outs
dec
cwde
(bad)
rol
pop
bound
(bad)
add
jne
inc
cli
jno
jb
cmc
sub
add
add
fst
mov
xor
pop
movs
cdq
dec
cmp
push
dec
push
imul
pop
cdq
add
fwait
cmps
xor
rol
lds
add
push
fild
retf
es
cmp
(bad)
sub
add
and
sbb
cmp
jle
jmp
sbb
bswap
vorps
add
jg
and
adc
sbb
push
inc
add
lock
or
adc
jmp
dec
pop
sub
inc
sub
hlt
and
sub
dec
aas
ins
fdivrp
mov
mov
sub
jbe
movs
push
out
ins
das
test
pop
cmp
push
jns
sbb
xor
or
aas
movs
stc
add
add
mov
xchg
pop
mov
jne
inc
and
sbb
sbb
jmp
sub
mov
sbb
sub
inc
lds
xchg
sub
jae
xchg
inc
loope
mov
imul
pop
mov
jmp
push
add
popf
test
sbb
push
pop
mov
rol
or
ds
out
aaa
ret
(bad)
mov
or
adc
xchg
adc
ret
std
add
ss
add
mov
or
inc
call
popa
sub
std
cmp
call
call
mov
cmp
add
add
inc
dec
adc
and
lea
mov
imul
jbe
and
xor
xor
jno
xchg
adc
mov
pop
xlat
jns
push
test
xor
pop
sub
push
scas
movaps
and
pop
inc
cld
push
sub
jmp
mov
xor
popa
cmp
jge
test
and
dec
mov
adc
or
fstp
cs
rcr
sub
push
leave
pop
int3
xor
lea
pop
test
inc
stos
push
dec
add
out
adc
pop
xor
icebp
cld
inc
sbb
sub
movs
jnp
sti
push
mov
mov
mov
sbb
mov
adc
inc
sub
pop
sub
jns
add
lods
repz
dec
or
xchg
or
sbb
daa
das
pop
xor
rol
out
dec
stc
inc
lea
mov
mov
std
mov
repnz
sbb
inc
sub
cli
sbb
dec
xor
cmp
add
gs
fiadd
repnz
lods
das
cmp
pop
jg
xor
mov
ret
dec
rol
adc
inc
jg
cdq
les
int
rol
aaa
mov
mov
or
dec
js
push
dec
xor
ins
int3
push
push
adc
repnz
and
xchg
dec
stos
ins
shl
pop
and
jbe
shr
ins
xchg
jno
shl
sbb
movs
lock
xor
jp
clc
cmp
enter
xor
or
or
add
dec
add
ror
fisub
push
pop
sub
inc
fs
mov
add
mov
xchg
cmp
mov
or
adc
xchg
lea
jae
sbb
sbb
fsubr
mov
adc
sub
adc
jbe
mov
push
idiv
cmp
mov
xor
nop
jno
cld
and
add
push
pop
fdiv
popf
cld
cmp
xor
xor
nop
aad
xor
mov
mov
push
imul
cmps
ror
int3
push
imul
fcomp
call
maxps
(bad)
xor
mov
push
inc
push
mov
jmp
push
std
and
bound
ja
rcl
popa
pop
cmp
(bad)
call
int3
xchg
sbb
fadd
sub
mov
out
mul
cwde
test
sbb
mov
je
sbb
jbe
xchg
outs
es
sbb
adc
pop
push
lea
add
adc
std
mov
mov
inc
test
jge
xchg
ins
inc
add
loopne
rep
iret
inc
push
std
icebp
and
jnp
test
ret
add
fisubr
pop
clc
add
push
or
popa
pusha
lock
jb
sub
dec
pop
jmp
fdivr
call
push
daa
sub
mov
xchg
xchg
push
or
and
xchg
clc
stos
dec
cld
enter
push
jb
or
cmp
pop
(bad)
jmp
cmp
jbe
sbb
popa
push
jge
cmp
pop
adc
and
int3
ffree
add
inc
push
inc
imul
mov
sub
and
inc
sub
(bad)
sti
lahf
push
cmps
stos
xchg
mov
in
inc
les
popa
aas
push
inc
cmp
xchg
dec
clc
and
lea
or
fild
sub
cmps
imul
outs
ins
js
inc
fadd
push
je
js
test
popf
int
push
pusha
daa
adc
mov
mov
add
outs
adc
mov
xor
(bad)
ret
leave
das
or
pop
rcl
aas
xor
sub
bound
stos
rol
cwde
adc
lods
push
movs
push
popf
and
sbb
xor
xchg
add
js
mov
adc
cs
(bad)
jp
cmp
icebp
mov
or
xchg
jne
movs
stc
test
mov
aas
mov
add
adc
dec
inc
mov
mov
(bad)
sub
icebp
enter
adc
mov
lahf
test
jle
and
adc
jbe
inc
dec
sub
or
jle
mov
lahf
cmp
dec
push
cmp
jge
sbb
xchg
add
cmp
jne
and
call
adc
idiv
lock
outs
dec
sbb
and
push
dec
push
push
movs
pop
push
outs
inc
sub
or
fnstcw
jle
adc
pushf
and
sub
std
dec
sbb
out
sub
clc
push
push
addr16
inc
add
inc
paddusw
ins
jmp
sbb
mov
loopne
ss
rcr
mov
push
mov
jne
rcl
mov
jmp
inc
out
pop
outs
ja
inc
mov
loopne
out
sub
sbb
jo
mov
test
cs
cmp
ja
gs
jecxz
xchg
inc
lahf
aas
inc
push
test
push
xchg
dec
and
mov
add
xchg
shl
xor
add
fcmovnb
and
nop
cmp
adc
and
int3
ret
dec
xor
add
mov
add
(bad)
mov
pop
adc
and
ins
mov
mov
ds
or
leave
push
sbb
int3
fmul
rol
and
call
jne
adc
loopne
adc
retf
adc
cmp
dec
call
mov
dec
mov
add
int3
jmp
mov
xor
inc
dec
adc
dec
cmp
push
add
or
fmul
push
cmp
lea
nop
push
pop
add
pop
or
popf
rcl
pop
pop
push
inc
jge
dec
aaa
cdq
les
das
mov
sub
xchg
jns
push
nop
idiv
into
enter
(bad)
call
repz
fcmovnu
add
inc
ror
les
rcl
call
sub
pop
movs
dec
in
pop
add
and
and
pushf
or
mov
loopne
in
jmp
and
or
and
out
pop
add
fld
in
in
inc
leave
cmp
pop
add
mov
sbb
fmul
xchg
pop
pop
pop
pop
aaa
push
test
or
push
mov
xchg
hlt
fisttp
jns
inc
sub
inc
or
ret
jg
int3
add
xor
inc
stc
and
rcl
ret
or
enter
dec
les
and
sub
and
pusha
or
lock
pop
pop
adc
or
cmp
push
adc
jmp
pop
add
xchg
sub
push
(bad)
or
and
push
mov
sbb
sbb
and
mov
add
out
sbb
shr
sub
ror
arpl
jle
imul
or
pusha
fcom
test
rol
mov
jae
arpl
sti
xchg
jb
rol
push
dec
lahf
or
adc
ret
outs
cld
push
mov
fs
cld
fisub
sub
mov
xchg
outs
retw
or
add
scas
int3
push
inc
scas
add
push
shld
pmaxub
pop
push
sbb
xchg
mov
mov
mov
sbb
in
inc
mov
cmp
and
sub
xor
jmp
cmp
dec
xor
xchg
or
cdq
inc
cs
pop
cdq
sbb
or
jb
or
sbb
enter
sub
std
xchg
sbb
add
clc
and
xor
mov
jbe
and
sbb
jne
sti
jl
sbb
es
add
or
leave
or
sbb
or
adc
lea
mov
jecxz
and
inc
int3
cmc
mov
xchg
or
dec
cmp
cmp
cmp
icebp
sub
add
sub
movs
pop
inc
loope
repnz
mov
pop
jno
and
mov
leave
add
xchg
dec
sbb
or
lds
scas
nop
xchg
inc
cvtps2pi
lahf
out
out
enter
xchg
cmp
cmps
inc
inc
sahf
cmp
stc
sbb
and
rcr
inc
jl
sbb
inc
ret
loop
push
shr
dec
es
enter
xor
sub
adc
aad
nop
dec
fs
bound
jl
in
jne
xor
fsubr
xor
dec
cmp
cmp
and
enter
push
pop
nop
inc
outs
cmp
fcmovne
pop
popf
and
mov
cmp
jne
retf
fadd
push
cmp
mov
enter
test
push
pop
xchg
push
add
jnp
dec
mov
or
sub
adc
popf
pop
or
lahf
and
xchg
mov
cmp
rol
jns
or
or
ss
or
cmp
pop
sbb
mov
sbb
add
push
or
add
sbb
pushf
inc
xchg
xchg
cmps
test
mov
xchg
pop
pusha
jmp
push
sti
fs
mov
movs
xlat
mov
and
jl
(bad)
or
jle
loop
test
lds
test
jne
pop
pop
jge
dec
or
inc
add
xor
cmp
add
and
xchg
inc
or
cs
dec
cmp
dec
push
pop
pop
add
sub
adc
(bad)
pop
ins
mov
dec
cli
inc
and
imul
aas
add
int3
push
mov
dec
lock
jecxz
cmp
adc
jns
and
daa
cli
add
sub
pop
daa
jne
pop
cmp
adc
and
retf
add
shr
repz
add
retf
int3
fwait
add
push
and
push
adc
mul
sub
add
bound
xor
or
push
std
clc
lds
xor
enter
test
mov
ret
inc
nop
mov
xchg
nop
ss
pop
push
xor
movs
xchg
cmps
cmp
or
loope
jbe
add
xchg
(bad)
cld
mov
or
add
pop
inc
mov
ins
adc
and
dec
dec
or
into
jnp
push
xor
movs
mov
(bad)
jnp
push
sbb
fmul
test
test
arpl
or
fcmovnb
fimul
sbb
jae
syscall
adc
ja
cli
xchg
cmp
cmp
and
test
nop
xor
and
cli
dec
xor
mov
dec
pop
scas
add
inc
add
sub
cmp
mov
inc
movs
cmps
push
sub
fmul
xlat
jp
mov
les
rcr
xlat
cmps
imul
sbb
daa
jl
push
scas
xchg
imul
je
js
mov
cmc
dec
pop
pop
adc
cs
jp
sub
or
mov
inc
int3
lock
je
inc
add
push
or
push
add
add
xor
sbb
mov
add
sub
je
mov
cmp
sbb
adc
push
sub
mov
add
test
test
call
mul
ins
adc
je
fs
cmp
call
(bad)
iret
ins
xor
in
test
sbb
ret
popf
test
lods
cmps
push
rcl
sbb
jmp
mov
sbb
cmp
loopne
push
hlt
jecxz
mov
jmp
stos
or
pop
movnti
dec
out
je
jmp
aas
add
mov
mov
fbstp
push
lock
pop
lds
jne
jbe
movs
push
popa
dec
scas
adc
mov
sbb
xor
mov
add
push
sbb
fnstcw
sub
mov
imul
loopne
adc
ins
mov
ins
adc
inc
or
or
mov
or
xchg
adc
mov
outs
aas
hlt
or
add
add
or
add
outs
adc
sbb
push
sbb
sbb
(bad)
scas
push
rcl
ret
xchg
out
adc
sub
ret
push
push
push
mov
add
jo
call
add
nop
mov
dec
imul
cmp
mov
sahf
add
xor
mov
sbb
test
dec
mov
movs
adc
xor
ss
outs
xchg
adc
add
sbb
enter
mov
xchg
mov
cwde
inc
mov
ret
dec
ds
call
or
repnz
bound
push
jmp
xor
ja
xor
je
mov
inc
loopne
(bad)
or
inc
inc
inc
pusha
inc
sti
stc
add
sub
lahf
or
xor
xrelease
xor
ror
add
scas
jne
xchg
add
xchg
sbb
xchg
cmp
sub
adc
jg
test
test
jae
mov
je
and
dec
test
and
bound
(bad)
or
jns
and
mov
push
or
test
cmp
sub
mov
inc
cmp
inc
cmp
add
dec
bound
jne
inc
adc
pop
xor
and
fld
xor
mov
call
cmps
fdivr
push
dec
xchg
pusha
or
imul
push
and
dec
xor
push
es
dec
das
sar
ja
sub
rcl
add
sub
sub
pop
inc
daa
lods
inc
xchg
sbb
pop
inc
fmul
and
out
(bad)
enter
add
adc
push
pop
and
and
jl
mov
movs
or
mov
inc
stc
pusha
push
test
nop
xchg
jmp
mov
cmovo
cmp
mov
jle
scas
sbb
rcl
cmp
hlt
adc
addr16
pop
pusha
and
push
ins
lods
stos
adc
pop
mov
adc
add
add
js
mov
mov
push
mov
mov
sbb
and
mov
mov
xor
add
adc
push
xchg
shl
cmp
cmp
and
add
adc
add
not
xor
add
adc
mov
adc
cli
cmps
es
pop
clc
jl
xor
imul
cmp
shr
lock
xor
add
outs
mov
cmp
movs
mov
pop
jbe
repz
sbb
cmp
or
and
outs
dec
and
movs
fdiv
and
pusha
inc
call
inc
arpl
jg
cmp
into
daa
and
sub
pop
mov
dec
loopne
add
je
shl
sub
inc
sahf
jo
add
or
or
lahf
or
cmp
push
or
stos
mov
adc
retf
mov
add
jne
sar
(bad)
in
in
pop
or
push
jge
cwde
jbe
pushf
sahf
mov
adc
or
cmp
inc
mov
xchg
and
push
and
xor
fsub
push
js
ror
aaa
mov
ss
push
pop
lahf
pusha
xor
inc
push
sbb
dec
sbb
cmp
nop
aaa
jnp
call
inc
add
jmp
xor
es
shr
stos
mov
inc
jge
cmp
add
add
aas
adc
dec
pop
and
xor
xchg
mov
mov
fsubr
(bad)
mov
es
or
pop
push
int3
sbb
inc
inc
cmp
mov
sub
lock
or
cmp
add
mov
cmp
das
jmp
adc
jle
sbb
sbb
popf
adc
push
sbb
dec
push
mov
dec
sub
sub
mov
mov
push
sbb
and
and
or
or
cmp
sub
or
test
ins
ins
dec
inc
es
mov
ret
out
adc
xchg
add
xor
jns
das
inc
mov
fidivr
int
sub
or
push
js
into
iret
neg
repz
rcr
mov
sbb
sbb
cmp
test
call
adc
aaa
or
icebp
cmps
jle
arpl
mov
mov
ror
dec
lahf
ret
push
cmp
and
inc
stos
pusha
pusha
mov
movs
or
add
jecxz
pop
pusha
sbb
pushf
adc
popf
mov
daa
cmc
data16
mov
mov
dec
add
xor
pop
xchg
inc
dec
inc
mov
shr
(bad)
mov
sti
jp
sbb
sub
add
popa
pop
test
dec
cli
cwde
repnz
push
movs
inc
jae
sahf
popf
nop
in
adc
pop
add
jns
jo
gs
out
dec
and
leave
or
cmp
sub
pop
or
xchg
xor
sbb
fcomp
test
test
inc
jle
inc
push
inc
cs
adc
js
or
ret
test
mov
push
(bad)
loop
or
or
xor
cmp
and
fwait
xchg
mov
sti
mov
rcpps
sbb
popf
xchg
add
ins
enter
inc
xchg
add
xor
cmp
add
xor
xor
ret
leave
sbb
rol
xor
aaa
inc
pop
jns
inc
or
add
push
lds
cmp
pop
xchg
aas
sbb
and
in
add
sub
sbb
or
pop
in
cmp
push
je
xchg
iret
xor
inc
inc
push
sbb
or
hlt
dec
and
out
inc
dec
hlt
imul
pop
pop
inc
and
sub
stos
imul
inc
jae
stos
fst
gs
push
call
dec
dec
sbb
sbb
adc
jle
pusha
cmp
and
add
adc
adc
adc
push
lock
jo
xor
pop
mov
cmp
dec
adc
jg
dec
jbe
nop
sub
xchg
mov
add
es
and
cmp
gs
jmp
sbb
xchg
cmp
pushf
dec
loopne
int
jl
xor
add
mov
fidivr
sar
xchg
jns
mov
or
(bad)
ficomp
dec
or
and
push
or
dec
mov
mov
aas
repnz
push
adc
retf
and
dec
adc
adc
cld
xchg
sahf
ja
or
and
sub
adc
jp
cmp
ja
xor
je
adc
dec
test
xchg
or
jg
and
lock
add
sbb
stc
in
adc
popf
adc
adc
cmp
dec
adc
xchg
mov
inc
mov
cmp
repz
mov
ja
sbb
inc
movs
test
or
outs
cmp
addr16
mov
enter
add
out
or
lods
add
push
pop
jae
push
fwait
dec
xor
xor
aam
jg
rcr
jl
test
push
add
call
adc
dec
dec
fdiv
sbb
adc
mov
test
push
repnz
mov
mov
push
adc
inc
loopne
cs
(bad)
push
dec
mov
lea
sub
sub
adc
jmp
xor
cmp
and
js
data16
pop
mov
inc
add
add
cmps
jmp
lds
sub
(bad)
adc
popa
pop
fwait
xchg
push
adc
lods
push
ds
gs
adc
or
add
sar
add
and
xchg
fild
cmp
sub
sub
call
dec
mov
adc
(bad)
in
mov
lock
push
adc
mov
fld
daa
push
call
aam
imul
sbb
or
je
mov
add
movs
dec
lods
xor
sbb
outs
pusha
out
test
rcl
xchg
inc
dec
sbb
add
mov
mov
call
adc
sub
and
test
and
les
or
icebp
lock
mov
mov
pop
add
xor
out
xchg
test
or
mov
aam
or
sbb
pop
mov
in
gs
add
jg
xor
cmp
mov
inc
dec
call
or
jbe
ror
pushf
or
ja
pop
adc
inc
lds
dec
stos
adc
add
and
xor
mov
adc
jmp
dec
cmp
jl
data16
call
fdiv
sbb
cmp
xor
cmp
lock
push
mov
in
hlt
adc
jl
xlat
(bad)
mov
ret
dec
pop
pop
popf
sbb
aam
add
sbb
dec
push
push
movs
lds
pushf
xor
xor
push
or
test
test
test
sbb
mov
sub
cmp
je
call
or
xor
fldz
mov
into
cwde
out
mov
(bad)
add
sub
push
push
pop
xchg
sbb
pusha
retf
int3
outs
cmp
(bad)
mov
xchg
xchg
hlt
add
add
dec
popa
push
cwde
add
rol
clc
xchg
cmps
mov
std
add
xor
push
cmp
(bad)
(bad)
dec
add
sbb
fld
cmp
inc
jle
frstor
adc
call
push
ret
adc
pop
es
push
push
cld
sbb
sub
inc
cmp
adc
sub
bound
pushf
outs
fadd
sbb
pop
jmp
mov
add
inc
lock
test
pop
rcr
lahf
xchg
cmp
rcl
cmps
and
or
dec
cmp
and
cmp
cmp
rol
inc
rcl
daa
jo
fs
adc
xor
cwde
jp
call
jns
push
mov
(bad)
aad
fmul
pop
mov
ja
aam
adc
sub
cmp
and
pop
xor
push
inc
std
inc
aaa
stos
push
cmp
add
(bad)
stos
adc
cmp
add
pop
push
cmp
test
xchg
cli
call
data16
shr
add
mov
or
adc
push
xchg
push
adc
push
retf
les
push
bound
push
sbb
push
push
js
adc
add
cmp
push
dec
cmp
data16
std
mov
jno
add
and
pop
ja
push
mov
mov
pop
jno
adc
jmp
or
iret
push
adc
cmp
and
sbb
inc
pop
push
jg
loopne
mov
fisubr
mov
add
xchg
sbb
inc
xor
nop
or
inc
into
mov
adc
fadd
pop
push
sbb
cmp
in
cmp
add
movs
shl
dec
test
je
pushf
retf
wrmsr
clc
add
lock
sub
add
or
mov
jmp
dec
or
ja
in
lock
fst
loop
mov
sub
sbb
mov
xlat
cwde
xchg
inc
mov
loop
retf
imul
xor
and
test
or
ret
add
or
pop
jge
xchg
inc
fisttp
or
add
rol
ins
jmp
pop
leave
rcr
mov
outs
lds
push
push
out
sbb
sbb
daa
lock
and
adc
add
cld
mov
cmp
ins
jecxz
add
inc
or
pop
dec
jmp
push
push
dec
jl
dec
or
inc
leave
stos
xor
and
add
cld
mov
inc
mov
fisttp
xor
xlat
push
add
inc
push
cmp
mov
push
sub
cmp
and
and
adc
push
inc
xor
and
push
js
mov
adc
ss
push
fild
in
mov
fyl2x
fisubr
add
jg
retf
fdivr
fcmovb
dec
arpl
inc
cmps
shl
sar
(bad)
and
inc
lds
add
sahf
jg
add
rcl
out
pop
or
pop
mov
push
mov
pop
mov
rcr
cwde
xchg
inc
sub
cdq
and
cwde
mov
push
push
sbb
lahf
ret
jmp
adc
loope
mov
inc
popf
jmp
or
inc
xchg
or
mov
ja
test
ja
xor
shl
and
scas
cmp
add
jne
add
adc
jp
push
out
mov
and
fstp
mov
loopne
iret
jnp
add
inc
add
pushf
js
repz
shl
out
hlt
add
mov
mov
ja
mov
jg
je
cmp
je
das
mov
ret
sub
je
shl
sahf
imul
jo
mov
cmp
sbb
xor
sub
(bad)
test
cs
lock
fcmovnb
ud0
jmp
fld
fabs
fcomp
cmp
xchg
inc
lods
cmp
and
fdivr
fadd
shl
enter
lahf
xchg
push
and
sbb
add
imul
sub
add
rol
add
adc
xor
push
dec
cmp
jns
jnp
push
jo
cmp
xor
clc
push
push
pop
inc
mov
ret
lods
add
cmp
test
iret
nop
dec
ds
inc
inc
xor
or
lods
cmp
data16
cmp
cmp
xor
sub
inc
out
leave
push
and
mov
add
enter
pop
xor
sbb
call
mov
dec
add
dec
add
jle
sbb
add
xchg
add
cmp
dec
mov
lock
in
cmp
or
or
cmp
or
xchg
adc
out
xor
sti
ins
ret
repz
or
inc
xor
dec
ds
jno
add
or
gs
xor
enter
mov
cmps
push
inc
sub
in
popa
and
lock
xor
movs
(bad)
movs
mov
stos
scas
pop
push
test
mov
daa
or
mov
arpl
dec
ret
clc
mov
je
inc
sub
push
rol
push
jl
pop
cmp
mov
pop
adc
lahf
or
stos
mov
push
sbb
jo
xlat
and
mov
daa
add
push
sub
jb
loope
mov
push
dec
inc
or
sbb
push
(bad)
adc
test
and
add
dec
jae
into
pop
and
(bad)
fcomp
mov
sbb
and
adc
mov
mov
pop
fcomp
cmp
or
mov
loop
or
cmp
sbb
push
dec
sbb
fild
sub
inc
add
aaa
dec
and
(bad)
pushf
fwait
prefetcht2
sub
test
pop
xchg
test
enter
xor
sbb
ret
dec
enter
add
les
mov
or
cs
xchg
and
repnz
inc
cmp
jl
inc
add
pop
sbb
loopne
mov
mov
inc
call
loop
or
adc
inc
repnz
xchg
pop
cmp
daa
in
mov
clc
push
sbb
adc
(bad)
aas
mov
das
and
pop
clc
xor
shl
test
push
adc
es
sub
shr
in
outs
js
es
jmp
pop
inc
or
dec
pop
or
sub
jecxz
lahf
icebp
dec
push
cmp
or
xlat
and
mov
dec
and
add
inc
mov
adc
test
push
mov
rsm
iret
movs
inc
sub
and
push
loope
jne
jg
fcomp
adc
dec
push
push
sub
mov
add
fimul
push
sub
mov
push
call
pop
mov
push
add
jno
daa
push
push
jne
pop
dec
sbb
test
(bad)
jmp
cmp
stc
cmp
bound
push
push
xor
add
mov
cmp
sbb
mov
mov
ret
dec
dec
sub
adc
or
adc
test
xor
dec
or
pop
push
sbb
aad
cmp
mov
movs
push
fmul
sub
xchg
mov
out
mov
hlt
ins
add
adc
movs
nop
push
pop
aam
push
mov
fwait
adc
push
fs
and
cwde
and
and
or
and
aas
test
or
inc
aaa
pop
pop
dec
popa
and
adc
or
sbb
jge
and
es
out
test
pop
nop
int3
mov
or
dec
push
cdq
inc
shl
mov
lods
les
imul
lea
and
aam
call
dec
inc
dec
(bad)
mov
cwde
in
mov
adc
iret
xchg
and
xor
or
pusha
movs
sbb
cmp
jmp
mov
adc
data16
mov
add
cli
add
call
xchg
pop
lods
jg
and
mov
sub
add
push
sbb
inc
push
dec
test
jp
mov
repnz
add
sub
enter
ror
and
stc
dec
cwde
shl
push
sbb
das
pop
mov
add
or
push
aam
sub
rcl
movs
imul
add
or
fimul
fdivr
les
lea
dec
fiadd
dec
icebp
cmp
popa
jb
popf
fbld
add
aam
ror
clc
xor
add
add
push
or
div
dec
sar
adc
mov
or
sbb
push
jns
pusha
xor
inc
ins
fild
mov
dec
mov
add
push
loop
push
imul
inc
arpl
add
imul
fld
test
dec
fadd
and
cld
mov
add
cmp
jecxz
inc
dec
inc
scas
ins
dec
push
and
in
call
gs
and
movs
add
mov
sbb
xchg
or
and
push
xchg
push
neg
(bad)
hlt
push
push
xor
mov
or
(bad)
jns
adc
xor
dec
adc
rol
into
sbb
mov
aas
daa
cmps
add
add
(bad)
daa
retf
outs
sar
call
mov
or
push
js
test
fld
jmp
jmp
retf
pop
push
xadd
dec
or
mov
ins
pop
cwde
add
inc
mov
add
bound
adc
xor
push
shl
cmp
lods
aam
xor
shl
pop
mov
jae
mov
and
out
or
lea
mov
dec
fnstcw
inc
sub
imul
out
das
add
adc
jbe
test
mov
int3
div
bndstx
mov
cmp
xchg
mov
cmp
call
push
jo
popf
push
je
int3
cmp
add
ret
out
adc
in
xor
lock
in
add
test
sbb
xchg
jl
add
add
or
xchg
xchg
sbb
adc
cmps
dec
add
pop
inc
pop
inc
mov
sbb
stc
ss
or
test
or
mov
std
rcl
sub
cmp
sbb
into
sar
test
pusha
inc
into
popf
jo
adc
and
add
rcl
pop
and
and
push
push
dec
cmp
imul
lods
dec
push
push
sub
mov
add
mov
rcl
arpl
jne
pop
and
xor
sbb
jns
ret
fst
push
aaa
pop
mov
or
push
(bad)
push
pop
shr
add
daa
sahf
push
or
movs
ds
xchg
push
lahf
test
test
bound
aaa
mov
sbb
xor
or
fadd
arpl
mov
sbb
(bad)
sbb
int3
in
outs
loope
rcr
call
mov
fucomi
adc
pop
sbb
xchg
xlat
data16
jno
push
test
loopne
jae
rol
jns
xchg
or
xlat
hlt
or
xchg
mov
adc
pop
mov
jl
dec
sbb
mov
add
push
or
nop
mov
adc
push
push
dec
push
or
jne
sub
repz
pop
xchg
jbe
add
loop
adc
ja
mov
neg
push
and
pop
jbe
ins
in
or
rcr
push
ror
inc
add
xlat
mov
cwde
ja
push
mov
nop
and
cmps
icebp
mov
xchg
pop
or
pop
and
test
jge
and
cmp
fdiv
leave
imul
adc
sar
clc
jno
(bad)
mov
add
adc
movs
adc
push
fild
loope
aaa
sbb
push
mov
xchg
mov
idiv
mov
cmp
js
rcl
sbb
push
in
fwait
loopne
ror
fstp
aad
mov
fs
enter
push
cmp
xchg
dec
cmp
dec
adc
jbe
stos
inc
adc
cli
jp
xor
inc
shl
inc
jne
ror
not
add
mov
adc
xlat
add
jns
adc
lahf
sbb
push
push
inc
xchg
pop
jae
add
jae
adc
and
add
fucomp
adc
push
or
retf
add
adc
or
jmp
rcl
ficom
and
lea
maskmovq
test
ror
xchg
adc
cmovle
adc
push
xor
in
add
test
(bad)
xchg
mov
mov
or
outs
and
leave
adc
jb
setns
or
adc
stos
push
(bad)
push
pop
xadd
adc
and
inc
xchg
pop
xchg
imul
jb
push
stos
cli
mov
cmp
jmp
scas
push
or
inc
es
ds
dec
pop
mov
dec
push
and
daa
pop
nop
das
or
nop
retf
sub
fs
sub
ret
add
sbb
jmp
rcl
(bad)
sbb
or
adc
fs
add
xchg
pop
push
repnz
or
fld
add
push
or
and
dec
and
add
lods
push
push
xor
xchg
adc
inc
out
and
or
sub
adc
mov
mov
jmp
mov
call
or
(bad)
lock
sbb
inc
mov
push
xor
rcr
test
or
or
adc
xor
jns
cmp
or
pop
xor
adc
or
mov
and
dec
mov
or
addr16
lds
push
sub
xchg
mov
fs
fbld
dec
outs
(bad)
or
cmp
rcr
nop
and
pop
je
mov
dec
mov
push
push
mov
add
bound
jno
movs
sbb
leave
ud2
bound
inc
arpl
cmp
in
loopne
in
mov
adc
into
ror
sub
test
into
push
push
nop
push
and
or
sub
xchg
adc
jb
pushf
sub
or
nop
je
mov
mov
jp
rol
sub
sub
and
rcl
mov
and
push
fistp
leave
add
pop
std
cmp
enter
pop
leave
sbb
pop
cmps
and
nop
je
dec
and
leave
sbb
js
or
add
adc
rcl
pop
pop
in
push
mov
repnz
push
adc
xchg
xchg
or
mov
dec
mov
xor
das
repnz
mov
add
sbb
add
or
pop
mov
push
lea
and
rol
sbb
stos
mov
outs
daa
jmp
push
push
test
adc
loope
aas
mov
xchg
pop
push
add
ins
xchg
lea
(bad)
std
add
retf
stos
jge
fisttp
es
add
sub
cmp
jmp
xor
add
pop
and
sub
add
enter
call
sub
adc
ror
cmp
adc
push
cs
add
inc
mov
fs
dec
imul
push
bound
and
mov
or
xor
in
adc
add
add
and
(bad)
pop
and
mov
or
mov
imul
bound
jge
push
cmp
mov
xor
inc
add
stos
out
popa
clc
mov
dec
inc
gs
add
xchg
lods
pusha
call
mov
jne
inc
and
jne
mov
test
push
mov
pusha
and
push
push
mov
sahf
add
bswap
shr
mov
jns
(bad)
sbb
aaa
add
mov
adc
and
push
mov
fild
xchg
add
pusha
xchg
push
out
and
adc
iret
movs
inc
push
push
mov
ins
inc
nop
mov
fcomp
fcomp
adc
or
ins
pop
popa
xchg
cmp
push
fldcw
adc
mov
pop
xchg
ss
data16
or
pop
xchg
iret
pop
ds
lahf
data16
ss
xor
jmp
repz
xchg
fs
pop
push
push
or
fldcw
jbe
dec
add
lods
lahf
adc
sbb
push
pop
sbb
add
add
sbb
js
int
xchg
push
xchg
pop
ja
iret
adc
adc
jnp
test
aaa
js
cli
inc
sbb
mov
add
outs
cwde
ret
mov
and
ret
and
push
ret
adc
jno
mov
dec
int3
adc
and
enter
inc
dec
pop
and
push
jo
or
mov
enter
fsub
in
xchg
hlt
je
and
sbb
xchg
enter
pusha
cmp
daa
or
and
adc
nop
inc
push
ins
jo
nop
inc
push
cmp
ds
xchg
jmp
or
jmp
in
xchg
sub
pusha
int3
jmp
(bad)
pop
mov
in
jmp
clc
jmp
jne
jmp
retf
push
sbb
ss
das
sub
sub
in
jmp
dec
jmp
pusha
jmp
push
inc
sbb
out
ins
sbb
iret
inc
jecxz
inc
mov
jns
mov
push
rol
sahf
sub
add
push
div
call
sub
jns
out
out
outs
adc
or
sbb
out
inc
dec
pop
arpl
ja
mov
jns
mov
(bad)
shl
out
in
jo
iret
repz
or
and
repz
xor
cmp
repz
(bad)
cdq
mov
cmps
scas
mov
ret
retf
repz
fcomp
out
js
int
hlt
sti
jno
or
and
sahf
inc
test
pop
and
inc
or
push
sub
add
(bad)
jb
mov
(bad)
aas
lea
pop
and
jne
and
out
mov
test
xchg
dec
mov
mov
jb
and
outs
add
jae
loop
jg
leave
push
jmp
mov
inc
inc
xor
adc
(bad)
je
test
pop
push
and
mov
inc
sbb
mov
mov
inc
inc
sar
cmc
movs
mov
and
push
pop
push
pop
pop
pop
sbb
jle
xchg
sbb
dec
xor
mov
test
cli
mov
mul
fld
push
imul
adc
cmps
mov
stos
xor
push
das
or
or
dec
add
add
push
jnp
idiv
pop
sub
lea
fs
sub
and
sbb
mov
add
xor
and
push
add
cmps
ins
inc
pop
push
aaa
or
aaa
rcr
push
mov
(bad)
cmp
adc
js
imul
inc
scas
mov
or
adc
push
fnstenv
xchg
rol
cmp
rcl
push
inc
cmp
fist
out
mov
clc
add
nop
daa
fbstp
pop
cdq
add
call
mov
or
std
add
push
push
adc
ins
fnstenv
jl
xor
jmp
cmp
inc
mov
inc
rcr
adc
popa
dec
xchg
xor
push
cld
adc
mov
jne
or
or
stos
push
xor
add
ret
loop
(bad)
mov
dec
lods
sub
popf
or
fwait
test
sub
lahf
aas
rcl
pushf
pop
pop
scas
pusha
rcl
test
rol
push
push
xchg
nop
or
jo
cmp
pop
jb
stos
call
mov
dec
sub
cwde
iret
in
repnz
jecxz
pusha
xor
push
add
test
xor
cmps
and
push
or
aam
adc
ret
retf
jle
mov
inc
push
mov
mov
adc
push
pop
xchg
mov
xchg
aad
jns
pusha
adc
push
js
pop
adc
pop
fild
mov
dec
jae
mov
and
xor
jmp
sub
pop
add
sbb
push
mov
into
adc
test
jmp
cmp
sahf
or
jmp
sub
sbb
adc
loopne
pop
sbb
push
rcr
enter
(bad)
jae
add
cmp
or
mov
adc
or
fbld
adc
mov
fbld
arpl
outs
adc
inc
or
inc
(bad)
jg
lds
jb
mov
or
pusha
pusha
ret
(bad)
cwde
push
jbe
mov
push
xor
jmp
adc
mov
inc
cmp
jb
mov
or
push
into
jo
cmp
adc
shl
mov
popa
sub
test
loope
ss
push
iret
add
popa
pop
lea
push
aaa
jp
and
pusha
push
sbb
fisttp
jne
aad
dec
inc
or
jne
or
add
push
or
push
adc
repnz
pop
or
or
mov
sub
bound
push
pop
add
mov
mov
xchg
mov
or
or
and
xchg
adc
mov
(bad)
stos
ror
dec
adc
ins
xor
in
pop
push
xor
fs
push
push
pop
scas
xchg
and
fild
push
dec
cmp
jmp
push
push
rol
loope
sbb
retf
and
cmp
or
or
les
aad
xor
xchg
shr
ret
inc
imul
add
rol
pop
mov
shr
push
jge
xchg
jp
sub
jns
add
(bad)
pop
aam
cmps
mov
sub
sub
add
pop
sub
lods
add
pop
(bad)
in
loope
int3
test
pop
lea
dec
dec
xchg
sub
dec
mov
cmc
lock
push
and
jmp
mov
mov
mov
inc
xchg
pop
cmp
sbb
mov
or
call
imul
cmp
enter
add
adc
and
mov
imul
and
data16
xor
inc
and
jns
xchg
add
in
add
push
push
mov
and
xor
push
push
and
and
mov
dec
js
pusha
or
or
pop
jns
scas
pop
clc
add
in
add
add
or
or
inc
and
and
push
jge
test
jbe
adc
xchg
cmc
sbb
sbb
ins
push
repnz
addr16
add
hlt
add
cmp
inc
jmp
and
or
or
(bad)
and
or
add
jb
xor
pop
cmc
gs
sbb
das
mov
mov
aaa
movs
aad
test
adc
push
jnp
fist
mov
push
jle
pop
push
sbb
fisttp
mov
pop
pop
bound
pop
push
add
mov
ins
iret
mov
push
or
jmp
je
mov
xor
sbb
daa
in
in
arpl
enter
cld
hlt
add
xchg
or
xchg
enter
and
enter
sub
enter
xor
enter
cmp
inc
and
push
cmp
jo
push
pop
js
dec
dec
inc
mov
adc
in
push
in
inc
js
and
inc
push
test
cmp
cmp
pushf
mov
nop
test
mov
loopne
nop
inc
mov
mov
mov
xor
js
movs
sub
sub
add
stos
and
and
xor
and
sbb
cmc
xchg
(bad)
shl
add
lods
jnp
pop
mov
ret
mov
(bad)
push
aam
fcomp
and
sub
stos
xor
add
rcl
push
ins
and
jmp
or
stos
sub
and
mov
adc
mov
add
xchg
or
cmp
aam
jmp
xor
mov
cmp
push
(bad)
mov
add
or
add
inc
sbb
out
push
add
xor
div
loopne
inc
xchg
test
inc
mov
add
inc
and
jle
test
cmp
dec
loope
add
es
add
daa
mov
mov
scas
fst
out
ins
or
push
out
movs
jmp
mov
loopne
sbb
(bad)
jne
fsubr
or
sub
cmp
cmp
push
inc
mov
cs
cmp
lock
sbb
bound
outs
push
or
stos
add
mov
ret
sbb
or
jg
mov
mov
mov
dec
and
add
xchg
pop
jo
loop
popf
xchg
push
mov
int3
add
add
and
cmp
cmp
stos
or
ss
fstp
cwde
jp
xor
(bad)
dec
inc
dec
movs
mov
push
and
popa
mov
add
dec
xor
jg
loop
and
inc
mov
push
mov
pop
(bad)
call
jge
sub
xor
jmp
es
sub
dec
iret
clc
sbb
mov
test
lods
push
dec
out
cmps
dec
or
or
je
jmp
push
cli
mov
jno
push
cdq
push
imul
adc
hlt
loopne
adc
outs
dec
push
daa
sbb
mov
push
cmp
cmp
mov
mov
sub
out
lods
sbb
sbb
push
sbb
sti
sub
inc
adc
sbb
sbb
and
into
cmp
lds
mov
inc
jb
pop
jmp
or
call
aaa
(bad)
adc
lods
rol
or
and
fcomp
pop
xchg
jmp
sub
push
mov
(bad)
cmc
loop
cdq
aam
mov
in
dec
mov
idiv
push
jle
push
xchg
adc
inc
int3
stc
loopne
test
or
xor
jne
and
sub
mov
(bad)
sub
sbb
int
fisubr
sbb
jo
dec
mov
pop
xor
push
adc
cmp
adc
dec
or
popa
sub
adc
ss
adc
push
adc
pop
inc
mov
cmp
xor
cs
push
cmp
in
mov
sbb
push
cmps
push
mov
sub
fldln2
ds
push
fmul
jl
push
sar
xchg
mov
mov
mov
jmp
jmp
sub
test
xchg
jle
mov
outs
pop
push
jae
call
mov
pop
xchg
movs
add
or
loope
fist
push
cmp
cmc
ds
add
or
daa
in
jno
dec
cmp
mov
mov
inc
push
dec
daa
jb
xlat
adc
ret
sbb
mov
or
pop
rol
cmp
stos
mov
pop
add
addr16
mov
and
sub
outs
fwait
dec
dec
push
lods
push
push
shl
sar
mov
adc
sti
ret
loop
jo
add
in
push
mov
out
gs
loopne
(bad)
cdq
sbb
add
cmps
(bad)
int3
jno
arpl
sub
mov
or
pop
or
xor
cmp
pop
add
rol
push
mov
jbe
add
adc
mov
(bad)
ds
pop
jge
or
lock
int3
sub
mov
and
or
sub
add
or
push
pusha
sub
pop
jmp
and
pushf
(bad)
stos
scas
cwde
arpl
lahf
or
hlt
sub
lea
pusha
retf
retf
push
rcr
clc
int3
repnz
int3
retf
out
scas
std
adc
add
mov
inc
jg
jo
scas
jl
sbb
inc
nop
lods
fisttp
inc
sbb
(bad)
push
lock
xor
mov
retf
pop
push
js
fs
or
pop
sub
jge
cmp
sbb
add
in
aaa
stos
push
out
pop
jge
enter
enter
inc
inc
sub
and
inc
and
movs
dec
or
outs
fidiv
imul
ins
inc
test
xchg
adc
jo
retf
jg
(bad)
add
dec
outs
pop
add
test
xchg
pop
pop
shl
push
push
mov
gs
lods
push
xchg
push
shl
xchg
jno
stos
jo
inc
aad
repz
jnp
or
adc
js
lods
aas
fidivr
test
popa
jnp
sub
stc
add
adc
cmp
add
inc
pop
sbb
sbb
jo
fldenv
loope
dec
mov
sbb
fucomip
bound
or
ja
or
call
jne
jbe
adc
mov
inc
bound
bound
push
out
mov
test
je
(bad)
(bad)
or
and
je
addr16
mov
cmp
call
mov
popf
add
mov
sub
cmp
retf
nop
cmp
and
pop
movs
call
lds
std
(bad)
and
fistp
pop
cwde
dec
sbb
nop
ds
shl
add
fwait
sub
aas
lods
fld
cli
sbb
lock
xchg
inc
cld
push
add
xor
lds
cmp
int
fwait
or
inc
cmp
push
inc
adc
pop
jl
xchg
sub
(bad)
inc
dec
(bad)
and
push
sbb
test
push
test
xor
sub
mov
sti
mov
cmps
and
jle
mov
sbb
cli
sbb
sub
nop
cs
push
push
or
dec
sar
push
jecxz
dec
sub
jle
movs
hlt
js
pusha
ror
push
pushf
or
cmp
xor
outs
out
add
pop
clc
bound
retf
cmp
jbe
mov
cli
or
cmp
addr16
sbb
mov
push
cwde
push
adc
mov
cmp
(bad)
data16
imul
jb
shr
mov
dec
jmp
cmp
or
cmp
ror
add
push
(bad)
cmp
sbb
mov
add
pop
add
xchg
aam
cmps
aas
and
cmp
in
or
adc
jne
add
repnz
jne
add
sbb
mov
setb
dec
push
ss
ror
mov
add
add
jle
pushf
inc
jo
pop
fist
jge
mov
dec
add
mov
dec
arpl
and
retf
addr16
fwait
sbb
mov
inc
(bad)
dec
lahf
sub
ins
cmp
nop
shl
add
jo
or
aad
add
ds
imul
mov
(bad)
sub
fist
or
lock
and
jl
inc
sbb
outs
push
add
inc
sub
cmc
mov
aad
cmp
ss
nop
hlt
inc
inc
add
add
ret
mov
movs
push
sbb
jb
ds
inc
dec
pop
add
mov
inc
mov
(bad)
add
je
test
into
or
adc
jmp
add
push
dec
push
or
(bad)
and
jb
sub
pop
inc
fisttp
sub
loopne
dec
adc
stos
xlat
std
add
shl
push
sbb
add
dec
inc
iret
inc
pop
sbb
inc
shl
sar
outs
push
inc
xor
inc
xor
dec
mov
and
lods
inc
sbb
aam
cmp
iret
mov
dec
inc
inc
push
mov
mov
jg
mov
or
jp
fisub
popa
ret
push
sar
cmp
mov
lods
pusha
int3
and
dec
push
jae
sub
mov
test
add
mov
not
add
pop
mov
std
push
xchg
dec
cmps
daa
rol
dec
rcr
sbb
push
ret
xor
pusha
icebp
repnz
popf
and
or
add
imul
pop
fwait
push
lods
scas
idiv
pop
jnp
sub
push
cmp
js
add
ret
inc
jo
xchg
pop
sbb
ss
ja
inc
dec
and
push
ins
cwde
mov
ret
cmp
ror
jle
push
sub
js
cmp
nop
loopne
shl
sbb
lods
cmp
fisub
js
or
pop
cld
sbb
cli
jmp
adc
je
mov
clc
test
shr
jns
xchg
adc
add
(bad)
(bad)
enter
or
mov
pop
icebp
mov
shl
mov
add
mov
(bad)
mov
jb
push
(bad)
adc
and
imul
cli
jle
test
retf
adc
cmp
push
push
push
cmp
mov
sub
dec
add
ja
loop
ret
jmp
cmp
jl
call
xor
jmp
mov
ins
inc
sub
pop
cmc
jle
pop
mov
adc
inc
push
shl
and
xchg
inc
lea
test
and
es
add
xchg
xor
ins
cmp
pop
popa
aaa
add
and
enter
jmp
push
jg
push
in
dec
mov
ss
sub
fld
scas
dec
rcl
push
and
xchg
adc
push
sub
mov
add
adc
daa
or
and
inc
in
test
lods
inc
add
cmps
popf
jp
push
sub
scas
xor
jbe
outs
sub
or
ret
cld
dec
cmp
dec
add
pop
add
scas
sub
je
push
sbb
push
sub
pop
ins
inc
pop
jl
stos
andnps
add
shl
ds
loope
push
cmp
xor
into
rcr
(bad)
xor
pop
cmp
ins
sbb
dec
fwait
icebp
lds
aas
jne
inc
xchg
hlt
adc
retf
(bad)
mov
in
jne
ror
sbb
pop
out
lods
and
ficomp
pop
push
xchg
outs
cs
ss
jo
adc
xchg
add
sar
sub
sbb
mov
dec
mov
inc
int
mov
cmp
addr16
mov
popa
inc
enter
adc
rcl
mov
mov
cmp
and
(bad)
addr16
inc
add
or
push
mov
test
pusha
or
pop
sbb
stc
popa
and
arpl
xlat
add
dec
jo
mov
sbb
jo
dec
js
push
fld
dec
cmp
jae
ret
dec
mov
(bad)
dec
pushf
rol
jg
xor
add
mov
mov
stos
adc
mov
adc
in
out
aad
dec
and
xchg
(bad)
out
in
js
adc
mov
lea
mov
push
cmp
push
retf
push
xor
push
push
int
cwde
sbb
into
jg
adc
and
or
pushf
inc
js
or
ds
push
xlat
ja
or
lods
mov
sbb
js
mov
mov
test
popa
push
sbb
jmp
rol
xchg
lods
sub
sub
xor
mov
imul
cwde
mov
popa
rcr
mov
das
imul
lock
call
clc
sbb
mov
je
(bad)
in
dec
vpsrlw
mov
nop
dec
scas
add
add
stos
add
pop
sbb
add
imul
inc
or
out
ins
enter
or
aaa
add
mov
cmp
jnp
(bad)
mov
sbb
lea
ret
adc
cmp
mov
push
jne
iret
js
mov
push
inc
or
sbb
adc
xor
or
enter
or
xor
xchg
ds
(bad)
jbe
cs
jmp
test
lock
cdq
jb
mov
sub
sti
sbb
daa
push
mov
cwde
sbb
add
jle
imul
nop
sub
xor
add
ss
cmp
shl
ins
dec
(bad)
cmps
or
icebp
pop
jmp
xor
stc
and
inc
(bad)
loop
retf
(bad)
imul
push
cmc
jne
mov
push
add
xor
jmp
xor
pop
push
pop
xor
(bad)
enter
sbb
movs
nop
push
retf
lock
sub
aam
add
loope
cmps
pop
rcl
push
cmp
xchg
stc
sub
add
mov
add
leave
bound
pusha
loopne
mov
mov
arpl
jo
repnz
ins
into
mov
push
pop
pop
and
pop
and
pop
and
dec
or
fst
add
sub
aas
fs
dec
mov
sahf
sbb
test
and
dec
jne
push
dec
(bad)
push
push
adc
mov
adc
ds
push
rcr
xor
mov
test
loopne
pop
inc
sbb
add
push
mov
xchg
xor
pop
cmp
mov
push
adc
push
adc
frstor
dec
ins
xor
push
fcom
rol
jbe
xchg
xor
rcr
cmps
clc
scas
cld
ins
push
pop
add
les
jae
jle
add
or
add
inc
mov
lahf
into
dec
sub
ficomp
rol
imul
and
add
and
pop
or
cmp
mov
add
add
sub
push
push
add
in
mov
pop
add
pop
fnstenv
mov
mov
mov
pop
ins
fstp
push
mov
pop
inc
or
push
dec
adc
shl
pop
jp
enter
cmps
setle
in
test
cmp
sub
test
dec
xor
pop
aad
jo
loope
or
mov
jge
jne
jl
mov
jge
test
jl
setne
pusha
or
imul
pop
aam
(bad)
fst
clc
and
mul
mov
jmp
sahf
lea
call
xchg
loope
jb
pop
cmps
adc
push
xor
add
jo
add
sbb
retf
or
enter
push
cmps
xchg
or
aaa
jmp
mov
test
push
in
mov
sti
sub
push
cdq
pop
enter
sub
add
or
mov
mov
sbb
rcr
jnp
adc
ds
adc
in
xchg
jb
lds
or
sbb
push
push
fisttp
(bad)
xchg
cmp
ret
sub
icebp
fiadd
xor
into
xor
xchg
ret
retf
dec
mov
shl
inc
test
inc
mov
add
shl
or
inc
jmp
mov
dec
or
retf
les
push
xor
or
pop
pop
movs
jg
and
and
nop
popa
or
push
and
pop
out
xor
xchg
addr16
jno
icebp
rol
dec
shr
loopne
jbe
add
push
sub
je
dec
je
ror
mov
jmp
xor
pop
adc
push
retf
xchg
scas
add
sbb
sti
pop
cmps
call
or
ins
sub
jp
hlt
lea
setle
lea
mov
jo
fisubr
inc
sub
jg
push
lods
add
adc
mov
push
lea
cmp
data16
je
mov
int3
jl
adc
imul
sub
sbb
push
push
jmp
sahf
lods
and
push
rcr
retf
add
fadd
jmp
in
xchg
mov
int3
into
mov
adc
xchg
movs
lahf
jne
test
jo
mov
jne
push
lods
fst
mov
mov
scas
mov
inc
inc
ins
fcom
(bad)
sbb
(bad)
mov
push
cmp
(bad)
mov
add
popa
sbb
or
popa
cmc
adc
cmp
inc
sbb
pop
ret
call
mov
dec
push
xor
nop
or
mov
or
or
mov
jmp
mov
mov
sbb
sbb
jle
or
jbe
xchg
adc
jne
add
in
and
pop
mov
and
dec
cmp
inc
test
and
ss
and
adc
pop
test
sub
stc
push
or
jns
mov
dec
and
ror
pusha
sbb
pop
cmovg
jne
and
sar
lahf
inc
inc
lods
push
addr16
inc
leave
ret
or
jmp
cmp
jle
call
mov
cwde
ret
sbb
xchg
jmp
adc
test
stc
pop
sub
fimul
or
inc
push
add
pusha
fisub
inc
push
sti
xchg
fsubr
inc
test
and
push
push
adc
lahf
cmp
xlat
or
ja
mov
rol
dec
je
xor
mov
mov
sbb
pop
les
push
lea
lock
push
mov
dec
dec
push
sub
cmp
or
inc
inc
(bad)
mul
pop
clc
push
push
mov
and
cmp
inc
add
inc
aam
rcl
ret
popa
out
arpl
mov
cmp
or
jl
leave
rcl
add
adc
int3
sti
and
sar
mov
dec
or
sbb
dec
cmps
pop
inc
or
mov
(bad)
jmp
xor
les
push
test
or
mov
sbb
rcr
adc
pop
xor
pop
mov
cmp
sbb
movs
cmp
(bad)
mov
rcl
pusha
je
cmp
lock
sbb
jp
mov
jno
cmp
test
or
add
dec
push
adc
xor
es
or
and
cmp
jnp
inc
and
sub
or
adc
mov
xchg
fucomi
(bad)
cmp
(bad)
scas
mov
adc
mov
add
outs
cmp
inc
xor
stos
jae
sub
add
pop
mov
cld
(bad)
pop
pop
aas
ins
jl
jns
xor
test
aaa
mov
(bad)
xor
and
push
pusha
ret
and
or
pop
mov
pop
cmp
lds
sti
ja
je
push
out
into
dec
and
fiadd
ss
pop
sbb
scas
movs
stos
ins
les
adc
ins
jge
sub
in
popa
popa
in
cwde
add
or
pop
pop
call
out
pop
pop
movs
ror
loopne
sub
push
ret
js
sub
mov
push
pop
call
pop
mov
xor
pop
and
aam
xchg
push
mov
fdiv
jo
aas
es
mov
es
or
adc
test
push
mov
dec
test
push
je
dec
mov
sbb
pop
add
jmp
sbb
addr16
jne
mov
std
loop
dec
sub
(bad)
call
lods
pusha
std
cld
inc
add
pop
sub
cdq
cmps
mov
mov
xor
jle
add
xor
and
xor
push
push
fimul
(bad)
xchg
push
cmps
dec
clc
mov
sub
push
sti
add
lods
push
add
push
jnp
add
je
xor
push
sub
pop
popa
in
ins
test
cmp
or
jmp
inc
add
jnp
add
mov
jnp
xchg
and
push
push
js
adc
adc
js
sahf
cmps
stc
jbe
cmp
sbb
mov
ret
jp
mov
ins
leave
or
or
push
adc
daa
push
mov
fmul
xchg
sbb
adc
pop
test
ret
ret
jmp
adc
nop
adc
and
add
out
mov
mov
adc
add
inc
jb
div
je
daa
cmp
cmp
add
in
xor
xchg
test
in
dec
jp
sbb
test
add
scas
xor
add
mov
mov
sub
add
mov
add
push
mov
mov
dec
arpl
or
lahf
call
and
cmp
and
ret
push
mul
sub
jb
and
inc
hlt
retf
and
outs
int
mov
popa
movq
add
pop
or
rol
or
rcl
lds
pop
xor
lds
ret
inc
ja
fist
sbb
mov
inc
inc
xchg
nop
xor
gs
inc
shl
mov
sbb
lods
push
rcl
pop
push
packsswb
add
jl
and
fiadd
in
dec
and
cmp
cli
cmc
cdq
or
adc
and
fidivr
out
test
add
sbb
mov
mov
mov
jmp
out
dec
in
mov
fimul
mov
cmc
cmp
push
mov
adc
mov
or
push
loopne
lahf
lea
nop
dec
and
cmps
cmp
sti
add
add
adc
mov
add
aam
test
inc
pop
adc
dec
cmp
push
js
adc
and
dec
pop
cmp
and
add
push
out
dec
hlt
pop
jbe
cs
aad
dec
mov
adc
out
adc
ins
mov
sbb
adc
retf
cwde
ret
add
sub
inc
in
cmp
cmp
sbb
jo
push
xor
lock
or
mov
mov
xor
push
or
mov
mov
ror
sbb
or
je
dec
dec
popa
add
addr16
add
mov
fcmovbe
mov
rcl
pop
mov
jmp
ret
loop
jb
dec
cs
and
sbb
push
jo
pop
sub
dec
jno
xchg
dec
inc
cmp
and
pop
push
add
pop
and
adc
or
icebp
push
or
dec
je
cmp
and
scas
stos
xchg
inc
repnz
fnstenv
xchg
arpl
add
stos
sub
or
dec
sub
push
gs
ds
mov
leave
leave
push
mov
sti
and
aad
jmp
or
cli
push
adc
scas
add
xchg
push
sbb
cmp
movs
sub
ret
shr
add
icebp
or
inc
cmp
imul
inc
ss
push
xor
or
add
adc
fisubr
inc
sbb
int3
shr
jo
dec
shr
push
lahf
mov
inc
jo
ja
shr
dec
retf
pusha
cmp
pusha
daa
sub
dec
add
ja
sbb
inc
mov
lods
or
ret
xor
or
sub
outs
idiv
jne
inc
cmp
ficom
lods
cs
and
outs
push
ret
jno
fnstenv
sub
rcr
pusha
xor
mov
js
fsub
push
popf
push
sahf
and
pop
sbb
shl
push
lock
in
dec
xlat
(bad)
xchg
or
mov
push
shl
add
mov
push
retf
mov
push
cmp
or
add
movs
ret
dec
pusha
sbb
loopne
cmp
fwait
xchg
cmp
pop
xor
out
sbb
jns
fnstsw
ins
pop
mov
inc
jae
mov
mul
jmp
ss
or
jp
sub
pop
pushf
pop
and
jmp
xchg
lods
vandps
mov
cmp
jae
iret
xor
and
inc
jg
xchg
in
imul
xchg
push
leave
sar
mov
adc
add
xchg
lock
sbb
ret
jecxz
push
daa
sar
ret
push
cld
inc
cmp
inc
retf
out
jmp
push
js
fwait
push
shl
mov
or
add
das
xchg
add
ficomp
dec
test
mov
(bad)
xchg
rcl
dec
js
and
enter
(bad)
aas
sbb
or
sbb
out
aad
ss
rcr
pop
clc
and
adc
pushf
sahf
div
fist
inc
push
ret
dec
mov
cmp
adc
into
lock
mov
mov
add
pop
(bad)
xchg
mov
pop
jb
and
int
ret
iret
shr
outs
daa
addr16
jbe
lods
xchg
add
xchg
je
and
not
bound
inc
mov
cdq
sbb
fbld
(bad)
jmp
fxch
scas
pop
mov
loop
add
inc
mov
nop
or
in
daa
mov
pop
pop
test
movs
cmp
pop
mov
mov
jle
shl
sbb
cmp
ja
into
adc
fs
(bad)
in
in
ret
inc
shl
aas
jne
jp
loopne
leave
sbb
fld
jo
jmp
mov
and
or
mov
pusha
xchg
inc
iret
inc
aaa
or
add
adc
mov
adc
shr
push
ins
(bad)
push
push
mov
lods
test
push
cmp
and
add
xor
or
add
jle
adc
push
jb
cmp
xchg
sbb
add
or
loopne
push
mov
sub
leave
inc
mov
cmp
push
cli
add
shl
mov
adc
inc
lahf
repz
shl
mov
push
pusha
adc
jmp
add
inc
call
into
xor
cmps
call
lock
inc
or
enter
test
mov
sbb
daa
mov
addr16
dec
bound
dec
mov
dec
pop
mov
fld
imul
dec
out
sub
fimul
or
mov
mov
fisttp
cmp
mov
das
cwde
sub
test
xchg
push
sbb
pop
rcl
adc
add
add
clc
rcr
adc
mov
stos
mov
mov
out
in
add
ja
js
jl
pop
mov
inc
cmp
add
jp
mov
mov
pop
fst
inc
nop
(bad)
add
inc
push
dec
pop
iret
mov
push
and
cmp
inc
add
test
cmps
outs
scas
sbb
enter
pop
pop
ss
inc
mov
sahf
inc
inc
and
add
sub
sbb
add
jmp
inc
js
or
fs
sub
mov
inc
add
gs
fist
xor
sub
xor
and
sub
sbb
int3
data16
xor
hlt
xor
inc
call
or
fsub
mov
lods
cmp
pop
xor
sub
repnz
sub
test
not
adc
or
sub
or
cmp
jns
adc
in
fdivr
int3
mov
pop
lock
cmps
adc
sbb
or
pop
xor
and
inc
xor
add
adc
xchg
(bad)
loopne
sub
mov
sbb
lea
pop
test
inc
call
inc
mov
jb
and
mov
scas
icebp
mov
repnz
sbb
jecxz
inc
adc
je
pop
push
jo
stos
sbb
adc
pop
pop
loop
nop
test
aas
fwait
xchg
sbb
dec
and
pop
sbb
push
xchg
push
pop
pop
loop
jae
pop
test
mov
push
(bad)
inc
cmp
lods
push
out
je
sub
pop
push
push
ds
push
cmp
jne
pop
push
sub
call
mov
jne
in
cmp
je
or
out
daa
jo
jl
ds
jns
sub
sub
fsubr
add
(bad)
push
dec
(bad)
into
adc
out
vminps
adc
inc
pop
add
jb
(bad)
pop
cmp
lock
rcpps
xchg
dec
(bad)
pop
or
rcr
dec
sub
inc
shr
mov
push
jp
inc
xor
adc
cmps
or
push
push
jne
adc
rcr
mov
mov
cs
loop
sbb
push
or
sub
push
or
shr
push
sub
cmps
push
into
jne
fwait
pusha
ds
(bad)
xchg
fiadd
jb
sti
sub
fldcw
rcl
push
scas
repnz
ins
sahf
int
mov
xchg
mov
les
fnstenv
dec
ins
sahf
out
mov
jo
shl
fnstcw
mov
fldcw
mov
loop
out
jns
rol
mov
fsubr
fild
enter
jbe
xor
push
push
dec
and
or
dec
inc
xor
xchg
pusha
and
sbb
add
cmp
add
and
sub
push
aas
inc
adc
and
mov
cmc
xor
or
sub
pusha
mov
adc
fwait
imul
mov
push
or
push
xchg
dec
test
lods
jmp
retf
xchg
dec
push
sar
pushf
mov
or
push
bsf
fsubr
jg
push
mov
mov
xchg
sar
mov
data16
cmp
jb
sbb
in
repnz
fist
xchg
mov
jne
and
mov
jbe
sub
pop
sbb
mov
dec
xor
push
push
shr
(bad)
xchg
mov
add
dec
loopne
inc
adc
fsub
push
or
xchg
and
jge
cmp
mov
retf
cmp
or
xchg
retf
in
dec
dec
push
push
pop
lods
add
push
mov
icebp
mov
(bad)
xchg
add
cmp
add
shl
rol
scas
cmps
scas
add
push
cmp
add
lock
fsqrt
dec
lock
or
push
push
jle
adc
pop
dec
ret
jle
inc
stos
inc
dec
sar
push
clc
inc
adc
add
pop
sub
dec
sahf
add
mov
adc
push
xchg
add
(bad)
sub
add
add
hlt
add
jnp
adc
js
js
jo
loopne
cmp
test
xchg
xor
cmp
add
push
pusha
or
add
xor
push
test
je
cmps
jg
push
sub
adc
lods
mov
or
inc
call
es
lahf
cld
inc
pusha
add
loopne
dec
mov
add
lea
sbb
push
mov
cmp
pop
xor
test
mov
mov
cmp
push
or
es
data16
sub
adc
dec
into
jne
(bad)
sbb
inc
(bad)
stc
mov
jp
inc
xbegin
push
xchg
dec
pop
lea
inc
aaa
dec
or
adc
test
mov
fcomp
push
inc
nop
add
mov
xchg
add
mov
inc
ret
or
push
jge
pop
pop
sbb
or
xchg
xchg
rcr
or
sub
ja
push
xchg
jg
sbb
pop
sub
xor
les
mov
add
jmp
ret
sbb
jno
adc
xor
adc
hlt
jne
test
add
pusha
repnz
xchg
and
pop
pop
hlt
lahf
add
or
add
mov
lahf
add
jge
js
adc
jge
pop
sub
cmp
cmp
sar
(bad)
or
xchg
add
jae
and
mov
or
mov
aaa
stc
sub
ins
pop
xor
clc
mov
xchg
and
nop
mov
or
jmp
adc
mov
(bad)
in
mov
adc
cmp
retf
or
sub
jno
jmp
test
mov
add
add
sub
or
std
and
fs
mov
in
adc
hlt
loopne
push
stc
or
cdq
push
cmps
int3
out
test
or
mov
pop
mov
mov
mov
mov
xor
ret
xchg
ss
or
pop
sub
cmp
jmp
movs
and
sub
out
test
pusha
sub
add
mov
ins
cmps
mov
mov
adc
inc
adc
push
xchg
and
jle
wbinvd
dec
dec
rcl
add
pushf
repnz
test
add
sbb
and
sbb
shl
mov
or
push
icebp
dec
adc
inc
scas
and
jns
es
repz
(bad)
cdq
and
(bad)
les
mov
jle
shl
mov
jmp
sub
gs
repz
hlt
in
aam
rol
push
pop
mov
push
(bad)
icebp
and
lahf
add
cmp
inc
lock
push
inc
pop
shr
cli
push
fisub
jbe
pop
mov
das
js
std
mov
jle
mov
daa
mov
cld
xchg
push
or
xchg
sbb
jle
cmp
xchg
xor
inc
outs
es
call
sub
call
or
or
sbb
adc
add
or
test
or
hlt
into
sahf
and
movzx
mov
int3
sbb
pop
xor
cdq
sar
sahf
inc
and
adc
fimul
push
pushf
loop
sub
and
xchg
xchg
cmp
icebp
jns
add
sti
cmp
jg
(bad)
stc
cmp
sar
xchg
(bad)
in
and
or
xchg
inc
in
popf
pop
or
lea
leave
push
push
cmp
lock
fistp
cld
dec
call
dec
mov
add
stos
inc
int3
hlt
je
fadd
xchg
cmp
and
push
push
xor
sbb
xor
das
sbb
adc
jo
pushf
loopne
jne
dec
add
mov
adc
ror
das
sub
pop
nop
pop
pop
stc
aaa
or
dec
dec
mov
mov
mov
(bad)
mov
popa
xor
out
add
add
add
push
ss
sbb
sbb
dec
cli
cmp
or
jl
leave
pop
mov
xor
ins
sbb
xor
sti
ins
push
xchg
iret
sbb
mov
aaa
and
and
popa
(bad)
cdq
retf
call
adc
or
out
retf
push
mov
cwde
adc
push
sti
aaa
jae
call
xchg
dec
test
add
xor
mov
aaa
mov
add
xchg
fsub
dec
xlat
test
shrd
add
nop
lock
shld
sbb
cwde
cmp
pop
cmps
inc
jo
ss
sub
ins
clc
sar
idiv
into
pop
ss
out
addr16
cs
xor
fstp
inc
mov
jmp
inc
cmp
loop
rcl
test
rol
mov
pop
inc
and
test
clc
mov
xchg
mov
xchg
pop
inc
dec
xchg
je
loop
ror
imul
call
cmp
mov
jo
and
sub
push
adc
gs
inc
sbb
out
or
dec
shr
xchg
out
jg
shr
pop
push
test
xchg
jne
popa
xchg
pop
inc
(bad)
in
and
ror
out
dec
mov
or
outs
nop
pop
add
jns
sbb
dec
jle
pop
and
fs
or
fsubr
jle
jle
ss
shl
sbb
xor
sbb
lods
leave
inc
mov
fmul
fwait
adc
scas
mov
in
and
js
mov
not
pop
enter
inc
not
inc
pop
test
jg
dec
xor
scas
bound
mov
out
pop
out
inc
inc
call
retf
jp
das
lock
hlt
mov
std
push
pop
pop
popf
mov
adc
dec
xor
xor
xchg
adc
and
js
inc
ret
lods
jg
sub
mov
cmc
add
sahf
lea
cmp
xor
fmul
test
movs
into
mov
fs
imul
cmp
and
inc
xor
inc
sbb
pop
or
sub
ja
mov
cmp
jle
cmp
fist
rcl
dec
inc
dec
adc
cmps
mov
enter
cld
test
ins
inc
popf
mov
push
(bad)
jle
jle
adc
cmp
sub
cmp
xchg
out
or
mov
or
cdq
ss
jl
add
add
pusha
push
cdq
aam
add
mov
mov
xchg
push
dec
cmc
or
add
xchg
jl
sbb
(bad)
sbb
sbb
sbb
lods
jo
(bad)
jl
push
inc
les
cmp
cli
xchg
and
rol
fstp
add
stc
mov
ja
dec
dec
mov
push
cmp
and
out
mov
add
pushf
or
rcl
mov
lahf
test
(bad)
add
push
cmp
and
jae
pop
mov
mov
xchg
push
xor
mov
inc
cmovbe
push
inc
pop
fdiv
jp
mov
pop
and
sbb
cmp
cdq
icebp
lds
xchg
mov
rol
push
push
aad
inc
dec
cmp
cmp
push
mov
or
sub
clc
mov
add
add
mov
cmp
cdq
fs
cmp
xor
xor
mov
dec
adc
les
add
add
add
mov
sub
adc
sbb
or
push
call
popa
sub
ss
aad
neg
adc
test
data16
push
push
mov
push
sbb
loopne
mov
sbb
fwait
stos
dec
aad
inc
mov
add
xor
push
mov
std
pop
jmp
stos
xchg
or
or
mov
(bad)
out
mov
add
test
mov
leave
out
push
mov
pusha
xchg
call
adc
pusha
rcr
mov
dec
jle
xchg
push
xor
xor
pushf
mov
sub
pop
and
push
rcl
ins
sub
cmp
test
mov
pop
rcr
jmp
inc
sbb
mov
lea
adc
sbb
jge
fs
or
cdq
add
call
outs
jmp
add
push
add
mov
pop
xchg
inc
xchg
movs
add
adc
int
enter
rol
xchg
xor
bound
push
outs
int3
inc
push
aad
xor
add
in
push
sub
aas
dec
xchg
push
add
mov
in
pop
inc
add
xor
repz
mov
or
fs
or
push
sbb
sbb
sub
inc
and
lods
and
add
rol
pop
cmp
push
xor
add
xor
stos
icebp
and
push
fucomp
das
mov
add
cmp
inc
test
or
jp
test
dec
adc
push
jp
jmp
out
xchg
jb
jne
cdq
imul
xchg
add
jle
add
(bad)
push
sub
pop
popf
cmp
or
and
pop
mul
push
add
stos
sbb
jmp
mov
mov
lahf
mov
add
lar
add
daa
daa
daa
add
daa
daa
daa
or
or
daa
daa
daa
or
add
dec
(bad)
lahf
or
fbstp
add
int3
push
mov
out
adc
imul
or
out
shl
xchg
push
xor
and
inc
mov
je
shl
push
xor
inc
inc
adc
push
mov
push
movs
not
xor
xor
daa
sub
clc
adc
scas
or
jo
and
dec
jl
push
push
and
dec
aam
xchg
out
(bad)
pop
dec
add
push
sahf
xor
jecxz
adc
mov
lahf
outs
inc
ins
add
(bad)
inc
cmp
inc
test
out
cmp
push
arpl
mov
gs
mov
xchg
fs
gs
add
mov
inc
or
or
mov
mov
mov
stc
add
clc
sub
mov
in
add
or
cld
xlat
xchg
jno
dec
psllq
sub
or
mov
pop
retf
scas
add
jp
xchg
out
cmp
dec
scas
pusha
xchg
fdivr
xchg
cmp
dec
push
inc
pop
add
sub
nop
adc
out
or
pop
cmp
loope
(bad)
adc
sub
push
adc
or
mov
mov
lahf
and
or
ins
push
(bad)
jg
cwde
repnz
mov
or
dec
push
sti
or
add
push
xchg
mov
add
lea
cmps
dec
push
sub
neg
dec
sub
fdiv
enter
cmps
xor
dec
fmul
test
or
push
jge
push
nop
sbb
js
sub
mov
loopne
les
xchg
rcr
and
sbb
nop
inc
es
xor
and
and
and
popf
pusha
mov
xchg
xchg
xor
mov
push
stc
or
mov
add
dec
les
inc
test
ins
pop
inc
mov
cld
in
nop
(bad)
xchg
jne
inc
lods
in
push
lock
xchg
add
sub
cli
jae
inc
pop
add
test
and
add
cli
jnp
xor
add
or
sbb
out
xchg
jae
inc
scas
pusha
fs
or
add
jle
mov
test
jne
aaa
imul
jb
ss
jmp
jnp
xchg
cmp
inc
je
ds
(bad)
dec
clc
jae
cli
mov
dec
sbb
iret
inc
sahf
pusha
pusha
js
add
adc
int
fldcw
xor
(bad)
sbb
clc
ret
sub
or
pop
push
ret
dec
int3
mov
inc
cmp
mov
enter
cmp
push
sub
cmp
sub
add
mov
xor
inc
movs
sub
inc
dec
mov
jne
dec
dec
ss
jae
cmp
in
mov
dec
dec
sub
mov
cdq
inc
mov
xor
test
mov
pop
pop
cmp
cmp
pop
pop
inc
or
fcom
push
loop
xor
sub
or
js
jmp
add
or
add
mov
pop
dec
enter
inc
xchg
push
inc
mov
jmp
scas
sahf
neg
mov
add
les
push
clc
and
add
ja
rcr
ss
inc
jge
push
mov
adc
fwait
mov
jae
cmp
inc
sbb
pusha
jecxz
adc
xchg
and
sub
mov
sub
data16
icebp
dec
(bad)
mov
add
sbb
push
shr
add
add
add
rol
nop
pop
inc
int3
and
jl
pop
add
rcl
inc
xor
sub
aam
inc
adc
adc
jl
dec
sub
movs
xor
dec
push
and
mov
jg
push
retf
sbb
test
mov
mov
pop
popa
xchg
sub
call
bound
rcl
adc
in
hlt
mov
sub
es
push
jecxz
test
inc
cmp
les
out
mov
mov
jg
mul
dec
sub
repnz
pushf
or
call
test
jae
push
mov
add
and
and
sub
jmp
or
ins
int3
mov
mov
pop
mov
retf
push
adc
je
add
sub
mov
pcmpeqd
inc
or
add
pop
pop
jl
ja
add
sbb
push
in
mov
add
fdiv
or
into
sub
je
jmp
fnstenv
dec
xchg
es
mov
xlat
push
into
mov
mov
mov
pop
and
push
jno
adc
push
mov
daa
test
or
mov
add
jmp
mov
movs
mov
mov
test
js
or
or
(bad)
add
sbb
mov
enter
push
inc
and
fwait
mov
lea
in
or
repnz
push
add
add
sbb
xchg
lods
movs
mov
dec
test
adc
jne
mov
sub
mov
mov
loope
loop
jge
ret
jmp
jle
test
retf
or
movs
cs
mov
lods
mov
mov
xchg
add
rcl
mov
mov
sbb
std
test
mov
movs
sub
jo
mov
mov
cmp
dec
call
jg
shl
call
push
lods
mov
and
add
jmp
sub
adc
jne
ret
add
fcomp
test
xor
push
push
cmp
mov
xchg
cmc
sub
sub
clc
in
jo
test
push
mov
mov
mov
add
xchg
shl
push
pushf
sub
sbb
fsubr
sbb
mov
mov
xchg
mov
jmp
push
data16
xlat
add
in
cmp
add
or
ja
fwait
mov
lods
(bad)
outs
movs
push
mov
push
mov
mov
cmp
xchg
add
pop
push
jnp
sbb
jp
es
push
call
add
sub
mov
lahf
sub
loopne
jle
pop
mov
mov
or
ds
push
mov
scas
pop
cmp
nop
add
mov
cmps
adc
pop
mov
sub
out
aad
imul
repz
or
test
xor
dec
mov
push
js
std
pusha
and
inc
adc
inc
ins
sahf
es
adc
test
jecxz
int3
or
fs
imul
das
(bad)
jmp
jnp
ret
loopne
adc
cmp
sti
push
rol
xlat
cmp
movs
std
sbb
xchg
dec
loopne
push
lods
adc
or
jae
call
bswap
imul
inc
sub
sub
scas
addr16
jne
dec
lods
inc
push
pop
es
call
adc
(bad)
pop
loopne
movmskps
mul
mov
pop
imul
movs
pop
repnz
je
push
mov
push
push
inc
imul
stc
scas
cmp
push
ins
mov
push
outs
ret
jns
jno
jo
leave
dec
imul
dec
sar
jg
jg
jp
jb
sbb
add
dec
es
add
or
and
or
jo
je
imul
sbb
ins
ret
push
sub
push
ret
push
leave
(bad)
sub
pop
movs
adc
fwait
dec
adc
pop
push
xchg
sub
mov
mov
cmp
je
fcmovu
sbb
dec
retf
sub
pop
adc
popa
cwde
mov
in
(bad)
pushf
push
xor
add
or
xchg
or
in
dec
xchg
and
pop
hlt
in
adc
xor
push
repz
xchg
call
inc
add
add
push
sub
xor
push
enter
je
push
cdq
into
sub
icebp
or
pop
push
popf
cmp
pop
adc
mov
pop
pop
adc
inc
or
stos
aaa
dec
test
aad
add
push
test
test
or
sub
push
sbb
sbb
dec
push
or
aaa
fld
jmp
fidivr
inc
or
scas
xor
lea
pop
movs
cmp
leave
adc
jb
jl
push
jae
je
add
pop
dec
jg
mov
cmp
mov
pop
retf
add
push
loopne
je
popa
xor
push
pop
ret
popa
inc
xor
pop
push
pop
(bad)
popf
ss
or
push
outs
int3
dec
fdiv
popf
add
pop
inc
aas
mov
jmp
sbb
mov
sbb
jmp
clc
(bad)
fstp
inc
test
mov
cld
mov
or
adc
mov
inc
xchg
fmul
push
cli
xor
enter
and
out
mov
lock
call
or
fdiv
xchg
push
add
inc
jbe
dec
push
push
cdq
pusha
and
std
jb
cmp
adc
adc
jmp
xchg
add
pop
pusha
and
cmp
(bad)
loop
(bad)
lahf
xchg
mov
or
mov
and
test
jmp
fwait
lock
adc
cli
mov
cmove
push
and
ror
inc
xor
mov
cmps
fnstenv
adc
fistp
dec
add
movs
shl
add
dec
cmp
repz
jne
cmps
push
xchg
push
mov
je
mov
mov
call
call
hlt
cmp
clc
clc
cld
cld
mov
add
pusha
sbb
enter
cmp
call
rcr
and
or
inc
and
and
fcomp
lea
jl
cld
pop
and
int
loopne
std
(bad)
cld
out
repz
neg
shl
out
repnz
xchg
daa
stc
sub
push
pop
nop
push
pusha
push
test
add
add
out
add
aaa
adc
mov
dec
addr16
add
rol
cld
push
sahf
cmps
mov
or
sbb
sahf
out
and
xor
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
and
or
inc
xor
jnp
pop
push
fs
(bad)
js
call
adc
(bad)
ja
mov
test
sub
packssdw
retf
jbe
dec
push
hlt
sar
sub
jae
sbb
xchg
int3
outs
ret
jl
mov
cmovne
mov
scas
push
cmp
dec
repz
out
mov
push
cmp
jne
(bad)
es
jne
call
ins
or
cmp
jb
jmp
iret
mov
cld
(bad)
jmp
adc
(bad)
std
cmp
iret
jmp
std
std
jmp
cld
cld
jmp
test
xchg
fucomi
adc
in
adc
jp
cwde
or
adc
or
push
or
repnz
and
jle
mov
nop
pop
test
pop
push
imul
pop
loop
push
sbb
pop
dec
lock
mov
cmp
out
push
clc
pop
xlat
pop
push
test
add
adc
push
or
add
add
pop
or
xchg
sbb
push
dec
(bad)
cli
fdivp
ss
cmps
stos
xchg
jmp
data16
popf
push
jmp
test
push
jne
inc
sub
jne
cli
dec
mov
jmp
jne
dec
outs
pop
pop
sbb
cmp
mov
retf
data16
xlat
jmp
hlt
scas
mov
jo
ins
mov
out
lahf
mov
mov
add
jno
push
lock
(bad)
mov
test
inc
add
jge
sub
pop
xor
call
pinsrw
pop
add
adc
mov
outs
stos
pop
push
test
scas
nop
pop
jo
or
(bad)
jmp
imul
xchg
es
fs
mov
sahf
push
mov
lahf
out
mov
pop
xchg
dec
jo
pop
mov
push
push
cld
dec
and
test
push
iret
sbb
push
pop
push
popf
out
sub
add
loopne
and
and
scas
clc
fidivr
(bad)
mov
push
dec
pop
pop
add
mov
mov
in
sub
mov
dec
jnp
push
cmps
sbb
and
push
inc
mov
jp
xchg
push
pop
pop
(bad)
hlt
dec
jecxz
cli
loopne
stos
jo
ja
cmp
fcom
(bad)
jne
inc
dec
ret
pop
mov
push
aas
loopne
adc
ds
js
retf
std
in
jg
inc
arpl
mov
jecxz
push
add
inc
mov
jmp
fcomi
or
data16
pop
pop
outs
or
push
push
adc
adc
push
ss
aas
stos
pusha
int3
xor
shr
push
dec
cs
fld
inc
sbb
pop
aad
pop
adc
jae
addr16
test
cld
loopne
outs
push
push
mov
add
add
xchg
add
shr
dec
push
fnstcw
add
sub
(bad)
rol
sbb
es
pop
cmp
or
push
mov
push
lahf
jne
jmp
ins
aas
mov
add
adc
inc
lock
aaa
or
xlat
pop
bound
fs
inc
pop
test
inc
mov
mov
adc
xchg
push
pop
rol
out
out
adc
ss
loop
int
fucom
mov
inc
rol
sbb
xchg
mov
sti
les
dec
int
icebp
sahf
push
ss
xlat
and
dec
jne
jmp
bnd
cmp
je
aam
and
(bad)
mov
mov
cdq
mov
rcl
and
sti
dec
cwde
clc
cld
enter
(bad)
out
hlt
mov
inc
jb
add
imul
dec
push
mov
push
jmp
sbb
imul
mov
add
aam
and
retf
jmp
jnp
push
fs
adc
add
nop
cwde
idiv
adc
(bad)
icebp
dec
jno
jb
mov
jl
jne
push
push
hlt
imul
(bad)
jg
mov
iret
jb
pop
jl
jg
jle
inc
adc
inc
xchg
jbe
xor
cdq
mov
mov
ret
stc
icebp
cmps
sub
mov
mov
hlt
cmp
ret
in
imul
push
inc
jbe
jbe
ficomp
xor
enter
leave
push
ss
cmp
retf
jne
movs
push
jmp
xchg
pop
xor
into
mov
cdq
sub
sbb
push
arpl
pop
pop
add
mov
push
cld
inc
push
cmp
sub
movs
je
popf
lea
movs
fwait
sbb
call
cmps
adc
sbb
cmps
push
sbb
pop
inc
aam
push
sbb
add
clc
and
or
or
enter
sbb
repz
aaa
cmp
fs
add
in
fsub
loopne
adc
sub
fs
test
sbb
scas
sbb
imul
enter
jg
pusha
xchg
inc
sbb
cdq
pop
retf
(bad)
idiv
xchg
out
and
cli
xchg
dec
jg
jl
int3
int3
iret
jae
lea
dec
push
push
mov
loope
ret
add
pop
(bad)
clc
add
lahf
fild
lods
mov
loope
sub
inc
fdiv
call
or
sbb
xchg
push
and
mov
outs
stos
popa
dec
pop
fimul
or
cmc
inc
loope
xlat
push
push
xchg
dec
shr
idiv
mov
aaa
jbe
push
cdq
pop
idiv
add
mov
pusha
bound
shr
cmp
fsubr
xor
out
mov
dec
cmps
push
xor
or
inc
fdivp
jmp
cmp
jae
dec
cmp
push
test
mov
jbe
mov
push
dec
pop
pop
mov
shr
outs
shr
add
stos
adc
test
xor
adc
fcomp
(bad)
mov
inc
leave
mov
mov
sbb
repnz
mov
dec
xor
add
sar
shr
je
or
inc
dec
je
push
push
adc
inc
xchg
add
scas
inc
loope
shr
retf
mov
in
dec
add
int
or
les
ds
dec
jae
add
sbb
push
pop
stc
(bad)
and
and
pop
add
cmp
add
jmp
mov
xchg
or
not
bound
aaa
push
lock
push
adc
jmp
pop
sub
je
dec
pop
sub
or
or
inc
retf
mov
call
add
adc
leave
xchg
sub
call
addr16
jge
jg
add
(bad)
cmp
jp
sbb
ss
inc
addr16
inc
mov
cmp
lock
fsubrp
adc
sub
mov
cmp
mov
mov
popf
adc
xchg
jb
push
adc
push
es
jb
cs
in
sbb
and
outs
dec
or
je
test
leave
add
sar
movs
jbe
scas
add
fs
sbb
pop
mov
add
ror
je
pop
add
push
pop
enter
icebp
cld
xlat
pop
sbb
lods
or
je
push
mov
or
mov
sub
cmps
mov
inc
pop
jns
dec
jl
add
jmp
(bad)
aas
fidivr
push
ret
sbb
adc
dec
xor
js
xor
pop
ins
not
aas
mov
add
out
sbb
xlat
rcr
pop
mov
mov
and
jne
mov
loopne
cdq
ins
inc
data16
cmp
pushf
call
gs
jmp
ret
in
pop
push
inc
call
popf
rcl
arpl
fs
ja
push
retf
xchg
jns
sub
pusha
xor
pushf
pop
mov
pushf
test
cld
mov
aam
pop
adc
cmp
mov
and
(bad)
rcr
shl
xor
jmp
xor
je
dec
pop
test
cwde
xor
mov
gs
add
jecxz
jmp
mov
add
fisub
add
sbb
pop
data16
idiv
repnz
or
fstp
push
es
add
and
lods
push
xchg
mov
cmp
loopne
push
add
or
inc
adc
or
and
jbe
aam
cwde
add
rcl
int3
jo
out
ror
xchg
push
ret
stos
push
mov
inc
inc
ret
lahf
bnd
ins
rol
clc
sub
call
lea
or
mov
pop
ret
or
inc
inc
je
push
mov
outs
repnz
lods
popf
dec
jl
sbb
adc
add
shl
js
cwde
nop
mov
test
push
mov
gs
sbb
add
add
test
fwait
jo
lods
mov
adc
repnz
xchg
push
retf
sub
pop
dec
sbb
scas
mov
sub
cmp
add
mov
jns
shr
mov
xor
imul
push
mov
out
add
ja
sbb
jo
add
sub
add
sbb
test
(bad)
xchg
test
inc
add
pop
push
mov
push
mov
scas
add
mov
imul
mov
inc
or
add
push
dec
lock
inc
(bad)
popa
sub
retf
xchg
std
mov
rcl
sub
nop
add
loopne
mov
and
ins
outs
loop
sbb
dec
movs
js
inc
retf
dec
pop
jns
leave
shl
sar
mov
jecxz
ins
jnp
pop
retf
repnz
add
lds
push
xchg
dec
clc
inc
mov
mov
cmp
dec
adc
mov
push
repnz
sti
or
and
int
adc
dec
ficomp
mov
fsubr
sbb
push
(bad)
in
or
add
inc
(bad)
push
and
sub
mov
push
push
add
jne
cmc
pop
and
test
jo
xchg
push
in
call
add
mov
in
dec
sar
pop
les
or
add
rcl
imul
pusha
leave
outs
sar
je
sbb
ret
xor
aad
jp
cmp
push
ss
mov
push
sub
lock
call
push
jmp
dec
xchg
cdq
imul
cli
or
and
inc
sbb
add
cmp
lea
inc
inc
pop
cld
ja
adc
jbe
or
imul
mov
jmp
(bad)
xor
sbb
dec
clc
jne
pop
sbb
rol
fild
sub
(bad)
das
and
jbe
dec
loopne
dec
popa
add
push
jge
gs
and
ins
jle
stos
pop
test
push
pop
or
cmp
ins
or
mov
imul
movs
outs
shl
push
cmp
sub
add
movs
push
enter
fucom
(bad)
shl
adc
je
es
pop
popf
xor
lds
xor
pop
bound
or
jo
push
push
push
push
pop
mov
mov
push
stos
lahf
fld
xor
sub
(bad)
loopne
push
pop
int
movs
out
daa
stos
and
mov
sbb
sbb
push
mov
or
pusha
cdq
movs
pop
pop
and
mov
xlat
sbb
mov
test
cmp
js
push
mov
fstp
lock
cmps
ins
inc
pop
jnp
jmp
add
or
push
jle
or
push
jl
jo
xor
jg
push
jl
add
pop
rsqrtps
clc
xchg
adc
jnp
add
xchg
add
mov
sub
mov
jmp
cmp
fcmovnb
xchg
jo
xor
adc
ret
xchg
or
(bad)
in
test
shl
push
leave
lds
fidiv
push
mov
inc
mov
cmp
xchg
shl
push
std
xor
xchg
(bad)
fs
fs
test
sbb
xchg
mov
pusha
xchg
les
cs
mov
dec
push
mov
pop
pop
dec
jbe
ins
sbb
clc
into
je
inc
dec
and
aas
ret
in
push
movs
lea
jne
sbb
add
sub
push
cmps
add
fbstp
xor
xchg
xor
movs
data16
add
sub
imul
and
pop
ja
pop
ins
or
and
out
or
or
ror
push
push
cwde
pop
pushw
in
push
sbb
enter
add
ja
add
daa
push
pop
ja
out
xor
and
sub
add
sub
inc
add
pop
xor
clc
lock
and
aad
xchg
jo
imul
or
cmp
sub
idiv
lods
xchg
xor
rcl
add
ror
shl
dec
icebp
mov
jmp
jmp
or
xor
inc
cmp
or
scas
or
cld
repz
dec
xlat
xchg
or
xor
pusha
mov
add
test
dec
sar
pop
fsubr
add
clc
pop
(bad)
retf
cmc
test
out
adc
dec
pusha
adc
js
je
add
ins
test
fisttp
or
dec
sub
fnstenv
ret
addr16
sbb
sbb
push
int3
inc
sub
icebp
push
or
cmp
jmp
retf
clc
pop
add
out
mov
jmp
mov
xchg
data16
call
xlat
push
pop
cmp
loopne
sbb
daa
hlt
sub
repz
pop
mov
call
lods
push
sbb
or
cmp
jb
add
jmp
inc
adc
mov
add
pop
sub
shl
dec
adc
jae
in
xchg
adc
movs
jno
push
push
into
add
(bad)
push
inc
push
in
sbb
es
pop
sbb
retf
push
sub
addr16
mov
adc
scas
xchg
push
adc
loopne
sbb
lock
icebp
pop
aaa
lea
and
pop
ja
ret
cmp
rcl
or
sbb
dec
xchg
jo
inc
push
adc
cmps
daa
ret
inc
fwait
mov
call
lea
push
push
xchg
and
lea
outs
loope
scas
jo
das
rol
and
and
push
gs
push
lahf
sub
pop
(bad)
(bad)
mov
dec
loope
rol
outs
dec
ror
outs
dec
xor
push
jmp
cmc
add
cld
or
rol
or
push
clc
addr16
add
out
loope
mov
ja
mov
adc
pop
push
repnz
sbb
xchg
or
pop
adc
into
es
and
les
push
cld
gs
int
or
inc
lods
mov
add
inc
sbb
xchg
adc
adc
xor
add
or
dec
xor
sub
mov
push
nop
stos
aas
pop
cmp
adc
bound
mov
pop
in
jle
pusha
xchg
cmp
clc
mov
js
mov
mov
push
push
sub
or
fst
xor
(bad)
push
js
repnz
inc
add
adc
cmp
scas
and
imul
ins
fcomp
sbb
test
push
sbb
add
inc
dec
mov
js
add
xchg
or
into
pop
fcom
scas
mov
inc
mov
fidiv
sub
push
adc
ins
out
fist
jp
add
cmc
(bad)
cmp
pop
sub
hlt
ss
adc
shl
and
add
inc
lahf
pop
sbb
or
inc
mov
adc
cmp
enter
adc
xor
adc
jne
and
adc
sbb
adc
xchg
std
inc
mov
push
jg
imul
shl
sbb
adc
push
xchg
adc
repnz
sbb
cmp
adc
cli
mov
enter
or
cdq
cmp
rol
in
(bad)
gs
pop
or
mov
and
jle
add
sbb
daa
inc
mov
fst
sub
(bad)
jl
cmp
js
and
sbb
adc
pop
xor
mov
je
pop
pop
adc
sub
sub
add
cwde
ret
add
(bad)
jmp
movs
cmp
mov
or
xchg
mov
cmp
push
cmc
lea
mov
jne
sahf
inc
or
cs
push
call
jmp
aaa
push
cmp
xor
sbb
add
clc
jne
sbb
and
inc
mov
jb
jne
imul
sbb
mov
xor
dec
(bad)
(bad)
push
dec
retf
sub
dec
cwde
push
pop
mov
inc
sbb
fsub
add
cmp
hlt
push
mov
sahf
dec
mov
push
mov
jb
fst
xor
or
adc
in
cmps
push
adc
mov
mov
inc
push
gs
push
pop
sbb
pop
add
or
add
jno
cmp
dec
jbe
mov
add
cld
push
jne
(bad)
stos
shl
mov
jne
enter
sbb
xor
pop
bound
fdivrp
xor
push
mov
in
hlt
ss
mov
sbb
clc
repz
jl
stos
xor
add
adc
xor
inc
push
bound
mov
push
sub
ja
push
add
dec
sbb
jp
sti
sar
lock
mov
xor
xlat
pop
sbb
push
push
sbb
dec
aaa
les
or
adc
shl
aam
test
std
pop
and
mov
or
push
jmp
xchg
jle
lea
sub
pop
out
lea
add
dec
push
push
fwait
jmp
lea
cmp
sub
push
test
imul
inc
add
add
or
jle
pop
jmp
pop
scas
pop
arpl
in
pop
fst
sub
mov
mov
adc
pop
mov
add
sbb
call
scas
cmp
lahf
inc
ror
pop
stos
adc
mov
arpl
adc
push
addr16
xor
or
iret
inc
jne
or
sbb
pop
imul
pop
xchg
fcmovb
push
cmps
mov
jle
push
call
fwait
xor
push
cs
pusha
enter
pusha
cmc
stos
neg
sbb
retf
pop
adc
or
sbb
push
jecxz
pop
and
(bad)
cmps
inc
mov
or
popa
movs
movs
add
push
daa
mov
popf
jg
and
gs
jb
(bad)
(bad)
sti
fdivrp
jae
popa
sbb
loope
fild
jmp
sub
or
push
lock
mul
lds
ins
(bad)
and
bound
xor
add
add
dec
inc
push
imul
add
push
test
dec
or
mov
inc
lea
dec
clc
mov
jnp
scas
fwait
adc
jno
add
pop
add
mov
add
lods
fsub
inc
adc
fs
sub
inc
sbb
pop
ficom
add
movs
fld
cmp
fld
or
and
adc
mov
jmp
scas
lea
mov
dec
sbb
in
pop
in
lods
xor
jp
inc
add
and
addr16
jbe
int
(bad)
fwait
adc
dec
dec
mov
mov
and
js
or
out
sbb
fdivr
pushf
sbb
sub
(bad)
sub
mov
jmp
mov
or
pop
pushf
jg
in
mul
push
jle
pop
pop
mov
cmp
xchg
or
shrd
das
mov
dec
cmp
sub
or
cmps
test
jp
call
das
push
adc
cmp
rcl
pop
das
rcr
or
dec
or
std
call
cmp
(bad)
aaa
test
call
push
sbb
pop
and
sbb
and
lods
jecxz
or
fisttp
mov
std
adc
cwde
add
bnd
add
adc
sbb
cmp
daa
ins
jl
outs
dec
out
out
ficomp
dec
adc
mov
sahf
dec
sub
add
adc
inc
mov
add
test
pushf
les
inc
or
or
(bad)
ins
or
repnz
ins
cmp
cmp
es
ins
mov
inc
stos
dec
pop
mov
add
icebp
push
add
xor
ins
lock
lock
inc
scas
mov
and
mov
int
sbb
pop
test
(bad)
lock
test
dec
push
cmp
sbb
je
sti
push
mov
shl
popf
pop
mov
test
pop
mov
push
adc
stos
out
in
(bad)
push
sbb
push
pop
lea
jo
push
jmp
push
test
retf
(bad)
add
test
inc
sbb
mov
jnp
inc
pop
xor
lods
aad
cmp
ja
lock
rcl
or
inc
push
push
add
dec
add
out
jle
call
inc
in
int3
pop
loope
push
mov
and
or
add
gs
cmp
ret
inc
(bad)
adc
sub
mov
sbb
sbb
or
mov
into
sub
repnz
jo
and
and
fisubr
or
cwde
mov
cmp
(bad)
adc
adc
clc
inc
pop
pop
outs
and
cmps
hlt
lahf
stos
ret
loope
mov
or
cld
dec
or
ss
test
mov
jecxz
mov
xchg
pop
out
mov
pop
cmp
add
mov
cli
loope
sbb
inc
jmp
xor
push
mov
outs
mov
and
ins
jmp
adc
push
cmc
inc
test
sbb
clc
sub
pop
jmp
nop
mov
sbb
and
push
enter
loopne
push
lods
mov
add
inc
dec
movs
adc
add
push
mov
pop
jmp
icebp
push
pop
enter
pop
pop
js
mov
cmc
aaa
aas
in
data16
fwait
cmp
inc
enter
jp
or
and
add
nop
push
repnz
pop
mov
pop
jge
or
add
fnstcw
inc
inc
scas
hlt
pop
adc
or
sub
scas
adc
xor
lods
xchg
ficom
imul
fcom
add
int3
mov
ret
call
ret
retf
je
sub
je
test
xor
mov
ja
or
fisttp
sub
je
arpl
repnz
ret
jle
loop
push
in
or
retf
mov
push
iret
pop
fs
fadd
loope
cwde
dec
cld
pop
iret
sub
hlt
and
jmp
inc
adc
fwait
sub
stos
jp
(bad)
pop
sbb
mov
test
push
out
popf
sbb
lods
inc
mov
cs
icebp
or
cmp
adc
xchg
cmp
gs
shl
dec
cwde
inc
push
and
sbb
mov
rcl
inc
ins
clc
call
mov
stos
pop
add
mov
xor
bound
jnp
dec
xchg
int
out
and
adc
inc
add
xor
dec
sub
in
neg
and
mov
pop
mov
adc
mov
mov
jno
sub
dec
add
cmp
and
mov
add
sbb
sbb
mov
and
sbb
and
or
sbb
push
push
or
popf
and
pop
or
push
dec
test
inc
pop
add
inc
xchg
cwde
add
(bad)
fpatan
int3
sbb
pop
inc
call
add
retf
cmps
add
fchs
sub
dec
mov
mov
xchg
scas
add
neg
stos
leave
clc
scas
dec
sahf
std
sbb
add
pop
je
add
leave
test
call
push
pop
aas
les
sbb
adc
stos
movs
or
pusha
mov
push
lods
ror
ja
(bad)
inc
ss
fist
inc
mov
ror
and
lea
jbe
test
sbb
jbe
sub
sar
xchg
add
cs
dec
jmp
lock
or
sub
sbb
cmp
rcl
dec
pop
inc
cmp
jb
test
sar
xor
lea
or
add
add
imul
ffreep
ror
and
sbb
mov
adc
sbb
mov
ins
push
sub
out
iret
frstor
imul
push
sbb
sbb
cmp
cmp
stos
pop
leave
sti
ja
add
push
pop
push
dec
xchg
jb
adc
add
mov
xchg
lock
sbb
or
cld
and
repz
lock
sbb
sub
shl
scas
lods
inc
adc
mov
sbb
mov
cmpxchg
push
pop
cmp
or
pop
dec
lods
test
add
push
arpl
add
jo
sub
es
loopne
lods
imul
add
pop
jl
or
xor
mov
out
popf
aaa
test
je
adc
int
or
les
adc
add
inc
adc
fstp
sub
shr
xor
mov
mov
xor
xchg
jae
mov
inc
pop
mov
adc
pop
adc
mov
xchg
fadd
fs
es
adc
and
push
jmp
popa
jae
movs
or
adc
sbb
and
xor
add
adc
inc
ret
pop
enter
and
sub
je
add
hlt
and
jne
stos
sub
push
dec
add
mov
out
cmp
je
jp
cld
jns
daa
mul
xchg
pop
sbb
and
or
cld
add
or
sbb
in
mov
mov
sbb
loope
sub
sub
push
repz
or
add
cs
jno
cdq
dec
mov
adc
sub
mov
push
test
xor
jge
rol
and
push
sbb
dec
cmc
mov
mov
popa
popa
mov
sub
jp
jb
loopne
inc
(bad)
adc
bound
bound
xor
push
xor
fisttp
adc
(bad)
jmp
idiv
je
mov
mov
push
clc
push
stc
mov
stc
mov
retf
or
mov
mov
addr16
adc
stos
mov
dec
dec
loopne
dec
mov
inc
lock
cwde
nop
xchg
and
std
hlt
inc
je
test
ss
mov
sub
ret
or
data16
lods
dec
mov
inc
add
jp
(bad)
imul
and
sbb
out
je
je
mov
or
test
push
or
aaa
and
jbe
push
sub
add
shl
scas
stos
imul
push
dec
popa
push
das
(bad)
js
pop
mov
hlt
shl
push
and
pop
outs
sub
sbb
xor
cmp
add
sti
imul
add
inc
pop
cld
add
cmp
mov
jle
add
ds
retf
add
in
sub
push
pop
and
pop
sub
xor
fnstenv
and
je
mov
ror
ret
sub
sub
(bad)
ja
sub
sub
xchg
push
mov
pop
outs
adc
mov
inc
push
fs
jmp
inc
in
push
xchg
mov
mov
or
pusha
mov
cmp
add
add
es
jp
sub
adc
mov
mov
rol
mov
and
movs
(bad)
je
outs
and
jmp
scas
out
shl
mov
das
or
sub
jne
mov
sets
(bad)
ins
fs
mov
xchg
sub
rol
fdivr
ficom
xchg
ins
push
add
sub
cmp
push
add
add
and
ror
daa
cmp
enter
shl
sub
and
push
jmp
pop
loope
loop
jmp
sbb
cmp
or
inc
mov
mov
and
xor
push
jbe
js
mov
call
shr
mov
sbb
popa
pop
adc
cmp
sbb
xor
pop
pop
jl
dec
lods
pop
adc
mov
mov
ret
add
or
add
and
mov
data16
outs
inc
mov
xchg
adc
les
xor
and
push
or
xchg
mov
mov
and
sub
bound
mov
into
add
cdq
fsubr
neg
popf
pop
pop
mov
mov
mov
push
mov
lahf
dec
loop
xchg
cmp
imul
jmp
dec
test
scas
xor
sub
(bad)
fimul
shr
mov
hlt
mov
not
mov
stos
mov
dec
jmp
add
lods
dec
lods
or
fdiv
sub
push
pop
mov
test
je
inc
cdq
add
inc
imul
stos
loopne
dec
loop
(bad)
js
sahf
and
or
shr
rcr
or
aam
(bad)
rcl
in
dec
sar
adc
xor
adc
push
repnz
ror
sar
mov
or
push
movs
pushf
xchg
dec
jp
out
test
fdiv
jmp
push
fsub
clc
pop
add
in
or
pop
or
or
fidivr
sti
or
pusha
inc
pop
nop
push
jo
xchg
mov
pop
or
pop
xchg
and
pop
mov
cmp
repz
sub
cmp
dec
shl
inc
push
pop
out
out
and
ins
push
je
pop
stos
call
jno
(bad)
jb
mov
ins
jmp
pop
ins
fmul
mov
sbb
push
push
mov
and
push
and
scas
fist
arpl
jg
out
jle
jmp
imul
test
movapd
push
enter
repz
jae
add
shl
out
dec
push
and
jle
data16
ror
push
repz
cmp
call
in
stos
mov
(bad)
or
subps
push
push
hlt
push
je
fucomp
ins
jnp
out
adc
adc
add
je
sub
pop
mov
cmp
sbb
jl
fchs
ret
or
out
add
cmp
push
ret
pop
lds
sub
mov
mov
pusha
mov
xor
jbe
sar
ret
or
add
jmp
or
pop
clc
sbb
mov
or
push
enter
adc
mov
std
push
pop
ins
movs
or
pop
mov
mov
pop
les
push
and
inc
(bad)
mov
iret
inc
outs
pusha
pusha
and
inc
clc
ret
jne
jbe
es
sbb
dec
push
xchg
mov
pop
mov
je
jnp
adc
cmp
or
je
aam
jb
sbb
div
lea
push
adc
push
pop
push
aaa
inc
adc
adc
pop
pusha
outs
jge
ins
and
mov
ja
mov
mov
ret
add
repz
or
and
and
fnstcw
shr
pop
sub
push
adc
add
ss
xchg
mov
add
add
inc
push
ins
xor
adc
mov
or
inc
mov
aam
nop
push
and
inc
dec
sbb
xor
and
xor
adc
push
mov
rcl
inc
(bad)
push
add
and
fmul
xchg
dec
int3
jge
xor
or
jmp
mov
sub
stc
lods
mov
add
inc
enter
pop
sub
add
sar
shl
sbb
cwde
or
cmp
mov
jl
iret
adc
fidivr
sub
jmp
and
sub
xchg
jmp
loope
sbb
icebp
pop
sub
cmp
pop
add
xor
push
pop
or
mov
(bad)
dec
fs
mov
and
icebp
rcl
fsub
mov
jne
or
std
fwait
xchg
arpl
cmp
or
outs
add
(bad)
outs
xor
jbe
ja
in
movs
lods
jbe
mov
loopne
addr16
pop
sub
arpl
cwde
test
add
xor
std
jge
cmp
push
inc
je
mov
xor
loop
inc
or
jne
push
mov
lods
retf
shl
enterw
(bad)
cs
add
inc
div
popa
movs
sti
inc
and
jne
push
sbb
cmps
loopne
mov
and
inc
and
cmp
mov
cmp
out
sbb
shr
xor
call
sbb
repz
test
push
xchg
dec
add
or
xchg
mov
pop
loopne
mov
add
push
cli
adc
sub
xor
cmp
mov
and
mov
push
pusha
add
push
mov
loopne
into
sbb
inc
jmp
push
pusha
test
push
inc
fld
pop
mov
movs
pop
rol
cdq
dec
rcr
add
pop
xor
push
xor
ret
jge
sar
sbb
fdiv
fidivr
adc
stos
retf
addr16
inc
ficomp
sbb
sbb
add
mov
cmc
and
arpl
ror
fdiv
push
in
idiv
into
daa
shr
rcr
shr
rcr
or
jne
lock
fild
inc
movs
out
shl
cmp
cld
sub
jbe
dec
movs
fwait
mov
fsub
sbb
ss
dec
cmp
xchg
int3
push
sub
(bad)
fsub
inc
push
shl
arpl
fs
psubw
push
jl
inc
push
(bad)
push
jmp
loope
pop
dec
sub
jg
xor
es
xchg
ja
push
(bad)
mov
loope
fild
mov
cmp
inc
lea
ds
mov
lea
push
inc
jecxz
adc
and
loop
and
test
adc
adc
out
std
push
int
ror
int3
sub
sbb
pop
dec
pop
mov
xchg
push
and
lahf
je
push
hlt
outs
jg
nop
or
loopne
cmp
mov
and
add
add
pop
call
inc
jne
int3
jb
add
retf
ror
cmp
daa
inc
add
outs
jmp
ss
nop
add
je
push
jae
dec
cmp
adc
and
int3
outs
ficom
imul
add
or
add
or
ss
sbb
jl
(bad)
enter
sub
test
cwde
lods
adc
jb
xor
adc
push
push
addr16
scas
jmp
or
icebp
call
push
dec
mov
adc
cmp
clc
cwde
movs
push
xchg
cmp
cmp
dec
pop
or
push
imul
cmp
inc
test
and
(bad)
mov
data16
or
je
into
out
sub
inc
sbb
outs
mov
out
pusha
pop
jmp
push
jo
leave
ret
mov
jecxz
ja
imul
rol
dec
pop
xchg
xor
les
inc
adc
iret
pop
xchg
xor
pop
xchg
xchg
cmps
add
adc
cmp
movs
add
daa
cld
push
out
loopne
add
or
push
aad
add
cmp
xchg
pop
add
add
xor
aaa
movs
jmp
repz
or
lods
test
das
push
xchg
or
cmp
push
sbb
pop
sahf
sbb
jge
adc
cmc
mov
test
xor
jmp
lock
popf
or
jmp
leave
sti
add
imul
cmp
and
xchg
add
ja
dec
mov
ror
hlt
add
push
sar
and
nop
dec
and
ret
cmp
and
call
call
jg
add
xor
inc
pusha
pusha
mov
stc
pop
lea
ret
inc
mov
mov
shl
xchg
lock
sub
jb
sbb
jmp
sub
cli
and
jne
sub
add
outs
push
sub
(bad)
cmp
pop
push
xor
dec
or
bnd
or
and
adc
xchg
jne
inc
push
ss
add
mov
mov
sbb
adc
retf
xchg
js
or
shr
mov
enter
adc
xchg
sbb
ja
or
cmp
jae
outs
or
jb
xor
push
clc
jbe
add
pop
lds
and
test
and
adc
push
das
inc
jge
pop
jmp
push
(bad)
scas
mov
push
std
adc
mov
test
jne
call
and
jmp
ja
shr
pop
iret
push
mov
add
mov
cld
mov
pop
mov
fmul
das
in
pop
cld
ret
stos
jne
(bad)
mov
push
pop
adc
pop
jnp
adc
pop
sub
pop
test
pop
in
jb
dec
or
loope
test
lock
sbb
push
sbb
test
mov
add
pop
add
repnz
push
add
dec
inc
add
or
adc
add
add
add
adc
std
inc
dec
push
and
sbb
add
add
and
inc
add
int
and
add
or
inc
push
test
pop
adc
mov
or
cmps
jle
call
movs
gs
sbb
adc
mov
popa
call
pop
cmp
repz
mov
and
int3
call
cld
inc
pop
xchg
hlt
movs
mov
daa
imul
sbb
or
push
rol
pop
retf
aam
pushf
add
mov
pop
std
and
jmp
outs
fisubr
push
out
leave
sub
std
add
movs
and
xor
add
call
lahf
dec
leave
jo
pop
fs
and
jmp
lock
jo
test
int3
push
cs
lock
pop
mov
mov
dec
mov
test
into
adc
inc
or
xor
movs
xor
aam
xchg
mov
mov
xlat
movs
add
cmp
jge
je
cmp
and
cs
jnp
mov
pop
cmp
mov
rcl
pop
add
ret
dec
and
add
int
dec
jns
xlat
sub
nop
push
dec
sbb
mov
aas
or
mov
mov
or
mov
sub
xor
ds
dec
cmp
je
push
mov
jno
or
div
call
ret
and
jle
mov
test
je
std
(bad)
xchg
sub
cmp
jne
mov
push
mov
std
(bad)
addr16
je
jmp
bound
into
sub
lea
pop
and
jl
das
popa
adc
inc
loopne
cli
jbe
dec
adc
outs
push
xchg
cli
sub
cmp
jne
dec
push
mov
pop
adc
jl
push
adc
fidivr
lods
jmp
icebp
mov
pop
and
pop
pop
aam
xchg
jg
xchg
mov
add
dec
repnz
sub
shl
dec
ins
mov
jo
(bad)
jecxz
rcpps
movups
adc
lods
retf
call
pop
dec
mov
dec
aam
xchg
nop
cdq
adc
mov
add
fidiv
es
xor
or
or
xchg
sub
mov
std
mov
inc
dec
dec
cmp
add
test
adc
sub
ret
das
fwait
test
test
xor
sbb
ror
retf
mov
sbb
mov
or
mov
and
loope
outs
outs
ret
out
dec
(bad)
cmp
sub
lahf
jo
dec
jmp
aam
mov
cmp
push
outs
sub
push
sub
sub
jb
fimul
fcmovb
sub
jbe
add
out
bound
sub
sbb
aaa
dec
adc
or
in
sub
ret
xchg
(bad)
rol
jg
ja
push
leave
add
mov
push
xchg
or
xor
(bad)
fild
sbb
adc
ret
xchg
sbb
xchg
scas
push
ret
jmp
retf
pop
or
sub
pop
nop
cmc
dec
cmp
mov
and
mov
jnp
pop
sub
dec
and
inc
mov
push
sar
clc
adc
aas
fiadd
loope
retf
bound
pushf
xchg
mov
lea
enter
push
shl
jge
add
idiv
mov
popa
inc
or
adc
aas
aas
aas
and
xor
data16
dec
sahf
(bad)
cdq
cmps
or
cmp
sbb
add
imul
mov
lods
xor
add
inc
mov
or
jnp
loopne
adc
adc
iret
xchg
xor
sub
push
cmp
cmp
fst
xlat
sbb
or
test
jo
sbb
shr
mov
adc
inc
call
push
xchg
and
pusha
stos
mov
pop
pop
imul
ins
push
lea
loopne
aam
add
cmc
shl
ret
add
sub
inc
fcom
daa
stos
retf
or
xor
out
pusha
mov
call
rcl
lock
mov
fidiv
jmp
inc
lods
inc
or
fidiv
sti
sbb
fild
sahf
add
dec
xchg
inc
mov
xchg
and
loope
xor
into
call
(bad)
add
fmul
into
add
fwait
and
add
push
cmp
jmp
pop
or
pop
scas
cmp
mov
or
and
push
pop
hlt
sub
adc
and
imul
cmps
cmp
or
or
cmc
mov
sub
adc
call
test
add
jmp
(bad)
in
aaa
cmp
dec
xor
mov
test
or
idiv
xchg
stc
jnp
pop
loopne
jbe
das
lea
cmp
adc
add
ss
in
push
mov
xchg
inc
clc
xchg
(bad)
call
jnp
ins
inc
mov
in
sbb
rcl
adc
es
and
mov
cmp
mov
add
inc
add
mov
adc
rcr
movs
inc
add
sbb
cli
shr
std
or
push
and
lods
in
int3
push
or
mov
nop
push
ret
dec
sub
pop
xchg
retf
adc
ret
fwait
add
add
or
mov
rcr
sbb
push
jae
scas
sub
and
daa
out
push
dec
mov
sub
dec
addr16
test
icebp
lea
iret
lods
mov
sub
js
pop
jmp
jl
cmp
mov
aam
aaa
mov
shl
add
xchg
cmps
and
loopne
(bad)
or
sub
adc
mov
or
aas
mov
retf
cmp
dec
jl
call
sti
je
sub
enter
inc
dec
mov
retf
add
stos
ja
loope
dec
mov
push
ins
or
mov
call
lahf
and
fnsave
fdiv
mov
cmp
mov
stos
ret
fdivr
push
push
cmp
int
outs
sbb
adc
jmp
inc
loopne
loopne
es
pop
jp
xchg
mov
xor
and
stc
and
dec
or
or
es
push
push
stc
add
xor
stc
sub
sbb
pop
pop
js
mov
mov
and
adc
add
mov
sbb
pop
ret
stc
or
push
xor
jmp
imul
or
js
add
inc
push
push
enter
push
shl
loop
ret
pop
add
loop
xor
and
xchg
ret
or
nop
add
add
test
push
pusha
xor
inc
dec
test
push
add
add
out
cmp
inc
xor
mov
pop
int
inc
dec
sub
ret
adc
std
cld
dec
xor
imul
pop
cmp
add
mov
or
jmp
test
in
dec
imul
push
mov
cmp
lds
push
adc
es
pop
dec
mov
call
and
adc
inc
daa
int3
adc
sub
(bad)
bound
or
xor
shl
or
push
sub
xchg
inc
pop
mov
ret
xchg
(bad)
sbb
sar
pushf
push
mov
test
into
mov
jp
push
ss
jmp
sub
mov
mov
cmp
xor
jae
pop
xchg
test
test
ins
test
je
mov
movq
push
dec
adc
push
and
(bad)
jl
xor
push
dec
and
push
jg
out
repz
jle
inc
or
jbe
jle
xor
(bad)
stc
jl
jg
jg
jg
jo
mov
mov
dec
jne
and
(bad)
push
mov
into
sbb
fbstp
lea
inc
out
repz
cmp
cmp
shr
push
and
xor
cmps
jo
jl
enter
xor
neg
mov
cmp
ja
push
sub
jnp
ret
mov
or
cld
or
pop
dec
mov
mov
mov
jge
pop
mov
add
or
push
popa
or
mov
loope
adc
retf
dec
or
push
or
adc
push
and
jbe
add
mov
bound
add
xor
jle
stos
std
pop
dec
test
pop
sub
mov
jno
adc
lea
je
or
pop
xor
mov
and
jp
jp
mov
inc
cmp
mov
cld
and
jg
mov
mov
ror
push
and
xor
or
xchg
jno
xor
and
ins
retf
popa
xor
adc
push
jae
dec
inc
jmp
shl
sub
les
(bad)
out
not
icebp
call
std
push
fist
push
imul
pop
adc
imul
mov
pusha
idiv
add
push
sbb
lods
jmp
in
push
mov
and
lock
imul
sbb
push
jge
adc
sub
mov
cmp
add
pop
and
enter
push
pop
xchg
and
cli
sbb
and
rcl
cld
movs
or
sub
shl
clc
mov
dec
inc
jo
dec
adc
add
jbe
ret
adc
ja
xor
xchg
jb
scas
test
jmp
inc
sbb
sub
or
aad
rol
or
cli
push
fisttp
cmp
adc
mov
int3
out
mov
pop
ins
push
jl
pop
cmp
push
pop
jmp
sub
dec
cmps
mov
pop
push
and
stc
xchg
aas
dec
daa
lods
je
push
mov
outs
pop
push
les
jmp
inc
add
call
cmps
sub
cmp
les
jne
cmp
jmp
xor
push
gs
add
imul
sbb
push
int
pop
mov
mov
mov
ins
mov
cmp
inc
xchg
or
sbb
je
jmp
ret
(bad)
mov
cli
xchg
jmp
sub
push
fwait
or
inc
mov
and
inc
mov
lods
jae
cmp
jbe
fnstsw
movs
shr
sbb
out
adc
(bad)
sbb
inc
shr
lds
mov
mov
loopne
sub
and
ret
(bad)
jae
jmp
loopne
cmp
or
call
jmp
js
retf
xchg
xchg
cmp
sbb
loopne
test
ret
cmc
add
out
inc
sahf
push
mov
mov
aam
into
mov
or
(bad)
inc
pop
cmp
inc
push
adc
sbb
add
ins
jo
mov
jbe
mov
cmp
stc
cmp
stos
mov
push
retf
or
push
jnp
aam
icebp
jmp
cmp
std
outs
and
imul
and
sbb
rol
mov
out
sbb
sbb
pusha
or
mov
pushf
(bad)
mov
cld
push
loopne
and
jno
mov
shl
pop
xor
mov
pop
push
nop
push
aam
cmp
ins
jmp
fnstsw
and
movs
mov
dec
movs
push
or
ret
in
adc
movs
jle
out
jecxz
stos
mov
cwde
inc
jmp
xor
dec
sbb
call
shr
ins
jbe
pop
pusha
sbb
aaa
mov
aad
pop
imul
jno
sub
sbb
jge
inc
cmc
pop
sub
xor
cmp
imul
adc
or
add
std
and
pop
mov
and
push
adc
aad
pop
mov
shr
sbb
xor
lea
push
mov
dec
aaa
cmp
aaa
add
or
pop
ret
adc
sub
int3
adc
add
mov
test
pop
xor
pop
ins
jnp
xchg
jne
mov
aam
pop
(bad)
pop
sbb
pop
adc
and
cmp
mov
inc
fstp
data16
stos
cmps
cmp
les
xor
(bad)
dec
into
(bad)
xchg
inc
aam
mov
cwde
mov
sar
sbb
mov
jle
push
in
mov
pop
or
jp
into
or
pop
cld
test
das
mov
inc
add
add
mov
(bad)
sbb
pop
or
push
jg
bound
cmp
clc
xchg
push
xchg
add
cmp
dec
or
push
mov
inc
pop
push
retf
and
add
or
jb
sbb
or
ins
or
imul
aas
cwde
lea
out
add
fild
jl
hlt
aas
mov
(bad)
sbb
inc
ror
adc
xor
das
sbb
stc
mov
xor
jae
inc
cld
xchg
out
push
and
jg
mov
lods
or
cmp
fisubr
xchg
sbb
pop
add
movs
pop
jbe
mov
movs
push
or
pop
adc
add
mov
inc
or
add
pop
xor
maxps
and
in
lods
and
push
bound
lds
cmp
or
mov
ret
fiadd
cli
lock
ins
dec
adc
pop
in
and
jae
mov
cmps
cmp
jns
add
add
mov
dec
mov
push
pushf
mov
rcl
inc
jle
es
mov
loopne
jae
sub
fld
popa
add
xor
inc
(bad)
sub
enter
dec
and
mov
push
dec
daa
mov
xorps
(bad)
or
add
dec
ins
and
cmp
cmp
add
xchg
jne
xchg
mov
add
pop
and
je
fwait
daa
jmp
cmps
pusha
(bad)
lock
dec
pop
std
test
loopne
cmp
dec
xchg
test
xlat
repz
pop
cmps
jle
push
mov
pop
xor
jmp
sar
(bad)
push
loope
inc
inc
mov
(bad)
out
sbb
mov
mov
jmp
div
daa
mov
or
les
popf
test
test
cmc
push
xor
or
cmp
sbb
mov
or
sti
mov
test
inc
pop
and
or
adc
mov
mov
cmp
ror
cmp
fwait
call
aad
pop
or
jnp
ds
enter
sbb
jmp
mov
adc
jg
loope
pop
sbb
fcomp
xor
dec
bndldx
add
ds
mov
xor
push
sbb
jo
cmp
pop
and
mov
leave
dec
mov
and
repz
es
sub
sbb
jl
test
add
pop
add
fcomp
int
or
push
mov
enter
mov
je
push
ror
iret
lock
inc
fist
cmp
dec
mov
mov
inc
and
mov
mov
add
sub
(bad)
mov
add
mov
sti
jle
jns
lahf
mov
jae
cmp
je
xchg
or
push
sti
xor
pop
pop
jnp
aas
(bad)
clc
lock
mov
and
pusha
lods
and
or
push
rol
dec
mov
and
push
adc
scas
shr
cmps
int3
inc
fwait
or
adc
push
jmp
scas
mov
push
mov
fidivr
imul
add
sbb
iret
add
or
mov
pop
inc
mov
xchg
and
mov
add
jne
or
pusha
add
stc
(bad)
aas
push
dec
mov
cmp
mov
mov
adc
test
int
daa
push
or
mov
pop
enter
lock
push
mov
add
xor
and
adc
push
cmp
and
pop
test
adc
inc
(bad)
xchg
xor
mov
add
imul
mov
mov
jle
and
popf
add
or
lods
cmp
out
jbe
adc
sbb
inc
add
fld
push
fild
lock
pop
inc
jne
inc
or
pop
daa
or
pop
mov
jo
daa
icebp
or
into
pop
or
add
mov
push
xor
cli
clc
mov
outs
mov
popf
xchg
les
out
jmp
jmp
sbb
fdivr
lods
xchg
leave
js
jl
cli
add
xchg
scas
dec
inc
sbb
push
xchg
sub
outs
adc
pop
and
xor
jl
push
ficomp
jae
test
cmp
aaa
cwde
or
jmp
cmps
inc
xor
jmp
dec
pop
mov
add
push
rcl
inc
xor
les
push
aam
aaa
jmp
inc
fild
sub
outs
xchg
add
or
cs
retf
lock
fcmovb
sar
xchg
push
dec
xor
sub
jmp
das
lods
adc
or
sub
adc
push
jae
mov
retf
and
mov
sar
mov
xchg
fist
(bad)
mov
or
(bad)
ret
aas
imul
and
adc
fadd
xchg
out
or
mov
ss
shl
mov
jl
loopne
pop
or
pop
xor
ret
call
jle
inc
les
fcomp
push
add
or
jl
add
cs
mov
or
prefetchw
mov
es
ret
mov
mov
pop
push
mov
je
or
and
sbb
sbb
pop
cs
add
mov
sub
rcr
cld
adc
out
arpl
mov
add
cs
test
scas
rcl
xor
push
enter
adc
call
mov
push
or
inc
ins
je
pushf
shr
out
or
in
lahf
cmp
jne
inc
sub
pop
jg
jbe
aad
pop
and
in
add
push
cmp
jne
or
mov
xor
movs
sub
fs
or
push
outs
ss
movs
test
pop
push
jmp
mov
lea
ret
nop
ret
movs
push
cvtpi2ps
(bad)
shl
fprem
jo
fist
lods
pop
inc
in
test
xor
push
clc
cmps
lods
sub
sbb
fdiv
je
je
movs
adc
call
sahf
add
mov
outs
sbb
int
nop
or
cmp
jne
xor
sub
jne
dec
(bad)
push
fsubr
cmp
adc
loopne
test
sub
or
and
jl
adc
mov
and
(bad)
jno
sti
sar
and
outs
jg
rcl
pop
add
mov
stos
rol
xor
cld
nop
(bad)
pop
fild
xchg
dec
fcmovu
shl
stos
aam
jmp
enter
mov
sub
jno
mov
pop
mov
cmps
jl
cmp
inc
je
hlt
xor
add
cld
(bad)
loopne
push
dec
add
pop
xchg
push
repz
imul
push
ss
jo
add
fiadd
mov
in
xor
or
fiadd
cmp
adc
sub
ins
xor
pusha
add
xchg
or
xchg
js
push
dec
addr16
test
(bad)
gs
xchg
stc
mov
ins
mov
jns
jecxz
cmp
mov
fisttp
je
adc
shl
gs
add
push
and
and
rol
mov
fdivr
sub
push
push
pop
cdq
fisttp
addr16
and
dec
jl
cmc
jle
dec
sub
(bad)
pop
mov
inc
inc
pop
mov
push
mov
mov
lea
or
pop
test
scas
dec
cmp
pop
out
leave
add
dec
or
fbstp
xchg
lea
push
mov
dec
shl
repnz
out
je
push
mov
push
push
adc
sbb
push
cmp
xchg
pop
or
sub
popa
test
outs
push
mov
xor
loopne
push
in
test
sub
enter
outs
push
adc
jne
or
pop
cmp
mov
daa
add
mov
lds
inc
dec
cmove
add
and
cs
mov
add
clc
(bad)
pusha
sbb
pusha
lods
adc
add
retf
lock
sub
cmps
push
sub
cdq
mov
or
cdq
mov
add
inc
dec
sbb
xchg
xor
push
adc
neg
ret
mov
dec
frstor
ins
ds
pop
sbb
add
and
xchg
das
mov
or
jne
and
adc
movs
lea
inc
loop
inc
xchg
cmp
outs
in
cdq
inc
add
shl
xchg
outs
mov
mov
call
(bad)
cmp
dec
jmp
lea
sub
inc
das
mov
xchg
fcomp
bound
loopne
sub
cmp
shr
push
ficom
out
push
cmp
cs
mov
add
push
mov
jbe
add
sbb
adc
sub
dec
xor
inc
sub
rol
sub
fld
xor
mov
sub
push
and
push
scas
adc
aam
cmc
mov
mov
sub
xor
ja
mov
sbb
mov
add
xchg
(bad)
mov
idiv
popf
pop
leave
imul
cs
inc
add
jmp
mov
add
mov
mov
leave
push
push
aas
mov
xor
mov
fidiv
sub
adc
push
mov
nop
sbb
mov
jne
cmp
loopne
push
pusha
hlt
push
nop
sbb
movs
lods
dec
ficomp
push
scas
and
ins
in
lods
sahf
mov
out
pop
dec
ror
push
(bad)
xchg
push
mov
sbb
imul
lods
lock
movs
daa
pop
mov
shl
adc
or
imul
(bad)
addr16
push
sbb
fnstenv
imul
imul
sbb
sub
mov
and
loope
loopne
fst
push
sub
xchg
push
inc
aam
dec
cld
cld
fisttp
scas
mov
pop
cdq
sbb
xchg
popf
aam
mov
data16
popf
enter
mov
lods
mov
call
test
stos
dec
jns
xor
icebp
dec
cld
xor
push
loopne
popa
es
fcom
and
in
shl
and
mov
sub
pop
mov
and
jmp
movs
jg
mov
les
add
add
pop
inc
rol
xor
cmp
push
push
push
ret
les
int
nop
sbb
les
xchg
ds
add
inc
push
jb
es
outs
sub
add
mov
aad
dec
sbb
pop
cld
add
fst
mov
jmp
test
fidivr
lods
mov
pop
and
adc
inc
adc
mov
xor
pop
js
dec
sbb
ss
lahf
jl
adc
add
outs
mov
cmp
adc
test
cmp
cli
push
push
data16
add
mov
add
or
je
mov
call
pop
sub
sub
lea
test
and
mov
inc
sar
cmp
adc
imul
mov
mov
int3
shl
movs
out
in
xchg
push
shl
(bad)
sahf
lock
pop
loopne
lahf
cmp
in
dec
push
adc
inc
sub
inc
mov
add
or
adc
pop
loop
shl
or
push
jae
and
pop
lahf
pop
ret
imul
adc
push
jecxz
and
mov
test
test
push
dec
sbb
enter
add
retf
inc
cmp
push
jmp
ins
or
inc
and
jle
sub
pushf
jmp
outs
sub
add
aas
sub
outs
mov
push
das
pop
pop
jg
inc
xchg
movs
lock
push
leave
xchg
inc
jl
push
js
daa
retf
dec
dec
sub
sti
retf
fmul
mov
mov
hlt
fdiv
jmp
imul
pop
js
das
fstp
sti
sub
and
cli
pushf
xchg
out
shr
in
and
or
pop
mov
repz
es
sti
and
ds
test
inc
loopne
rdmsr
and
lods
mov
ret
test
and
mov
push
ja
or
loopne
cs
rcr
clc
aam
mov
popa
adc
mov
ret
leave
in
jne
enter
pop
add
movs
in
add
mov
nop
stc
mov
shl
loopne
pop
or
(bad)
dec
fisttp
arpl
push
push
mov
xor
and
enter
adc
movs
hlt
fdivr
adc
clc
dec
je
or
inc
pop
imul
clc
sti
shl
ins
jne
pusha
sub
mov
adc
xor
and
fcomp
jle
(bad)
mov
inc
xor
movs
mov
sub
xchg
out
sbb
adc
outs
and
xor
js
pop
or
push
imul
sub
push
xor
call
dec
inc
cld
ror
adc
xchg
addr16
fs
add
sbb
jle
out
sub
pop
push
or
and
nop
xor
mov
inc
cmp
hlt
dec
mov
lock
and
lahf
mov
arpl
test
xchg
movs
aad
xchg
call
push
ret
test
mov
outs
in
out
shl
push
shr
in
mov
adc
gs
adc
or
mov
in
add
push
ins
cmp
xchg
mov
add
xchg
push
xchg
add
xchg
jo
mov
shl
dec
push
xor
inc
cmp
xlat
sub
test
test
fisttp
or
fldenv
aas
ins
cld
sti
pushf
neg
jp
xchg
setp
nop
mov
inc
(bad)
jae
inc
cmp
xchg
push
cs
sti
cmp
stos
pop
dec
xchg
lock
adc
jns
clc
pushf
mov
cmp
push
cmp
mov
add
std
(bad)
push
pusha
sub
jno
mov
sub
ins
dec
popa
xor
or
ror
mov
gs
dec
fndisi(8087
inc
arpl
je
xchg
sub
mov
jg
pop
sbb
xor
pop
enter
jne
add
inc
cld
pop
cmp
stc
mov
hlt
sti
aaa
mov
nop
sti
ret
dec
mov
hlt
sti
push
fidiv
jb
sti
xchg
pop
ret
jnp
bswap
cwde
sti
jae
leave
pop
xor
jmp
retf
clc
sti
sub
enter
test
sbb
cmp
sti
lock
jge
xchg
cmps
sar
dec
int
mov
push
movs
dec
or
loop
shl
dec
ret
iret
les
pop
data16
mov
sub
into
xor
ret
dec
loopne
cmps
xchg
sti
loopne
sbb
pop
imul
add
clc
sti
mov
and
sti
jnp
in
scas
(bad)
hlt
sti
clc
sti
cmp
(bad)
daa
(bad)
mov
out
test
sbb
cmp
dec
int
sti
mov
xchg
fmul
add
repz
clc
sti
in
sti
lock
pop
ficomp
dec
and
call
push
dec
mov
jmp
stos
mov
mov
imul
repnz
xchg
push
jp
and
int3
mov
cmp
pop
sub
push
sahf
inc
push
dec
loopne
pop
push
jmp
test
sahf
pushf
jl
mov
stos
mov
mov
ja
shr
mov
test
call
aas
icebp
or
outs
and
test
jle
xor
ret
mov
loope
nop
pop
sub
outs
lods
mov
adc
nop
retf
pusha
in
lds
mov
mov
movs
imul
in
or
jle
push
adc
loopne
or
movs
push
push
dec
stc
adc
mov
xor
cdq
fst
add
add
jmp
retf
or
mov
mov
pop
cmp
xor
call
xchg
push
or
sub
jmp
lods
(bad)
sti
xor
or
(bad)
sti
ret
mov
lock
dec
popf
jo
addr16
ins
popf
cmp
popw
sub
jmp
jnp
push
js
jns
mov
in
sub
xor
sub
mov
adc
mov
add
in
and
push
mov
adc
iret
jge
jae
sub
and
xor
fmul
lods
fdiv
jo
retf
cmp
test
sahf
add
dec
movs
jnp
xchg
add
call
xor
lea
out
jb
cmp
je
mov
pop
and
aaa
inc
fadd
test
xchg
lock
and
pushf
std
out
cmp
dec
cs
ins
xor
(bad)
retf
sub
jno
dec
and
jmp
pop
clc
xor
fst
inc
mov
pop
xor
mov
mov
dec
imul
add
sub
xchg
je
mov
mov
inc
outs
fsubr
add
cmp
pop
or
dec
pushf
xor
cld
push
int3
mov
sbb
cmp
jne
mov
test
outs
lahf
jnp
jmp
adc
push
sub
inc
add
or
and
shr
nop
dec
mov
xchg
inc
inc
cwde
dec
fcomp
mov
nop
aam
ror
imul
aaa
clc
sub
mov
fisubr
shl
enter
cmp
imul
push
adc
sub
fwait
inc
fidivr
inc
jmp
mov
test
or
jne
imul
pop
push
push
pop
inc
jo
jge
aas
adc
cmp
inc
sub
lock
pushf
sbb
sbb
ja
cmp
push
dec
pop
js
mov
daa
pop
pusha
lock
xor
jmp
xchg
movs
mov
inc
and
js
inc
iret
sub
xlat
aam
(bad)
dec
or
push
xor
cmp
dec
or
sti
pop
lea
mov
mov
add
push
bound
lods
test
pop
(bad)
mov
or
pop
inc
sbb
ret
cdq
ss
xchg
sbb
lock
shl
jl
and
sbb
xlat
imul
sub
xchg
fmul
or
retf
dec
or
je
stc
jmp
lock
shr
(bad)
add
shr
sbb
push
inc
cmp
adc
inc
sub
jmp
cmc
xchg
sub
sbb
mov
(bad)
ss
fld
adc
jne
imul
dec
and
and
leave
xchg
xor
xor
cmps
pusha
and
shl
sub
jb
mov
cmp
mov
ja
test
add
ltr
call
jp
mov
sbb
sub
inc
(bad)
cmc
jmp
pop
mov
lods
mov
cld
push
mov
movs
movs
add
je
push
inc
js
push
adc
cmp
sbb
wrmsr
xor
inc
mov
int3
push
repnz
sahf
or
std
jge
jge
push
sbb
push
nop
jne
jl
mov
xor
or
push
push
push
push
inc
lods
mov
dec
inc
in
out
int3
mov
inc
dec
pop
sbb
cmp
pop
inc
inc
push
push
adc
in
outs
imul
push
or
push
ins
pop
push
out
hlt
or
jg
add
adc
add
dec
dec
and
or
dec
dec
dec
mov
add
icebp
dec
sar
daa
loop
cmp
retf
das
stos
dec
mov
push
mov
xor
cmp
jl
push
push
jle
fld
sub
loopne
and
adc
mov
repnz
jle
pop
stos
scas
push
mov
push
fcom
or
out
jne
dec
dec
stos
test
sub
pop
and
cmp
mov
arpl
push
jmp
loopne
xor
out
mov
ret
lods
retf
and
sahf
ds
mov
and
retf
daa
pop
inc
in
dec
xchg
in
icebp
push
push
mov
mov
sbb
adc
retf
adc
add
pop
ret
push
inc
mov
add
pop
mov
pop
dec
inc
retf
in
and
mov
mov
mov
js
adc
jbe
or
(bad)
jmp
repnz
sbb
sub
dec
jge
outs
out
lea
or
ret
jns
jmp
into
jl
in
push
xor
xor
or
mov
mov
sub
sbb
sahf
cmp
call
pop
(bad)
mov
push
push
std
fdivr
inc
repnz
repz
add
sbb
lea
inc
cmp
arpl
je
dec
rcr
cmps
ficomp
shl
and
jmp
push
ret
cmp
xchg
lock
jmp
xor
not
sub
clc
jmp
sub
pop
fmul
xor
fld
clc
js
sbb
and
mov
and
jne
inc
mov
lds
repz
movs
test
movs
daa
inc
mov
add
pop
mov
dec
cmpps
aas
mov
(bad)
(bad)
mov
dec
add
sbb
or
out
and
sbb
cmp
std
dec
adc
leave
frstor
jp
dec
xor
daa
inc
mov
shl
sub
inc
mov
add
lahf
xor
aaa
pop
pand
loopne
cmp
aad
shl
inc
loop
inc
movs
lods
mov
ror
inc
lahf
push
mov
test
dec
adc
sub
add
or
jno
loopne
ret
push
lahf
fs
stos
out
lds
jmp
loopne
jnp
repz
cli
inc
mov
lea
lahf
in
add
(bad)
stc
cmc
mov
sbb
jl
mov
pop
mov
lea
in
mov
add
adc
adc
or
or
imul
mov
iret
mov
mov
dec
in
inc
push
jne
push
and
sar
xchg
push
xor
je
into
pop
inc
mov
ja
jne
push
(bad)
dec
rol
test
jbe
xchg
aad
xchg
(bad)
mov
push
sub
or
jecxz
mov
mov
ja
xchg
push
push
inc
lock
and
popa
icebp
jg
sahf
test
push
mov
inc
into
xchg
add
(bad)
adc
mov
or
das
push
inc
or
xchg
out
xor
pop
or
push
xor
xor
imul
or
add
push
sbb
cmps
fisubr
cmp
je
mov
adc
fs
xchg
movs
add
sar
mov
inc
sbb
je
or
test
cmp
adc
(bad)
arpl
aaa
movs
ja
fmul
jae
fcomp
mov
mov
js
dec
cmps
mov
in
jmp
inc
xor
xor
mov
fs
or
push
outs
je
mov
jge
js
dec
pop
jne
jmp
mov
push
push
or
and
call
sub
xchg
scas
inc
dec
sub
push
sbb
add
cld
leave
mov
out
xor
inc
or
and
pop
ficomp
push
imul
hlt
xchg
mov
cmp
pop
adc
inc
jne
adc
and
sbb
or
icebp
xor
popa
mov
add
lock
daa
inc
jp
xchg
sbb
mov
(bad)
adc
mov
jl
cld
mov
jl
fisttp
lahf
jne
fisttp
call
xor
adc
mov
xchg
xchg
loopne
inc
cld
cmps
in
jbe
cmc
sbb
call
mov
arpl
adc
push
jle
fs
or
mov
inc
or
nop
add
xor
inc
lea
add
mov
sti
sub
pop
call
xor
dec
lea
cwde
fadd
imul
sub
(bad)
int
loopne
les
push
mov
and
sub
and
sub
and
mov
push
xor
add
push
cmp
pushf
mov
sbb
or
lea
pop
out
pop
xor
sub
mov
dec
fldcw
cmp
push
lock
das
mov
add
mov
mov
les
or
ret
mov
sub
sbb
or
push
aaa
call
pop
adc
cmps
fs
inc
push
dec
add
jle
add
and
inc
and
fmul
sahf
mov
(bad)
mov
or
push
ins
ja
or
jmp
rol
jb
sbb
dec
pop
adc
or
jo
adc
mov
pop
sbb
or
pop
or
jns
loope
cmp
fimul
je
gs
mov
xchg
dec
repz
dec
stos
and
imul
pushf
push
int3
adc
pop
nop
and
cmp
inc
or
mov
fwait
inc
sub
adc
push
sub
push
cmp
push
icebp
dec
jne
and
jl
or
push
xchg
adc
aam
iret
jnp
cmp
add
jbe
loopne
mov
shl
cld
add
jo
fsin
dec
or
rcl
repnz
sbb
mov
mov
pop
xlat
mov
mov
adc
gs
call
and
test
xchg
aas
dec
push
push
xor
and
adc
dec
les
dec
sbb
or
call
mov
adc
imul
cli
pop
clc
and
int
jmp
cmp
stos
dec
int3
dec
add
test
test
pop
add
aas
sub
sbb
jo
xchg
push
cmp
pop
jne
mov
cmp
out
shr
das
xchg
call
inc
mov
outs
rcr
pusha
inc
cmp
mov
jb
mov
jmp
xchg
mov
cmp
mov
sub
cli
icebp
add
sbb
xor
mov
shl
das
and
push
aam
or
inc
std
int3
or
(bad)
xor
mov
inc
cmc
and
cmp
cmp
adc
sar
into
ficom
outs
xor
or
je
dec
pop
ror
xor
mov
movs
lds
xchg
call
cs
jno
dec
push
pop
aad
add
fadd
popf
xor
in
(bad)
fadd
sti
js
push
or
dec
inc
and
dec
push
adc
sbb
fwait
(bad)
adc
push
jmp
shl
mov
xchg
push
push
pop
push
sub
fwait
jno
cdq
jmp
nop
lods
test
mov
js
jg
mov
out
inc
inc
or
xor
rep
jb
adc
in
and
arpl
add
add
dec
inc
mov
mov
adc
pop
sbb
dec
lea
mov
clc
dec
jl
mov
imul
adc
mov
sub
cmp
(bad)
lds
sar
cmc
inc
dec
xor
rol
pop
das
lahf
and
jmp
mov
ins
dec
das
mov
inc
xchg
cmp
lods
aad
scas
and
jae
add
adc
fild
movs
mov
pop
adc
stc
push
add
cdq
add
xchg
or
sbb
sub
pop
dec
neg
adc
neg
repnz
xchg
popf
movs
mov
xor
xor
jge
jg
cmp
jmp
adc
jle
sub
pop
shl
push
test
jecxz
cmp
xchg
pushf
xor
xlat
je
neg
lahf
pusha
inc
dec
movs
pop
arpl
popa
and
push
mov
popa
push
xor
test
leave
inc
enter
xor
sub
add
iret
aad
scas
dec
dec
cmp
mov
cmps
jne
inc
mov
inc
xchg
pop
loopne
shl
out
fwait
pop
or
jno
sub
mov
cmp
imul
inc
xchg
jne
cmp
mov
int
jle
arpl
test
sub
out
jo
sbb
sahf
cmp
ret
mov
jp
or
imul
ja
mov
or
ret
jbe
test
ins
xor
rcl
sub
(bad)
jo
loope
sub
(bad)
jecxz
into
and
imul
mov
mov
adc
test
(bad)
stos
dec
add
ins
push
add
or
dec
cmps
rcl
inc
adc
in
nop
scas
je
rcl
and
adc
jae
jae
push
xor
ror
and
or
(bad)
ins
clc
and
std
adc
inc
dec
or
mov
pusha
sbb
(bad)
pop
dec
push
pop
mov
inc
ret
bound
in
shl
mov
adc
in
addr16
jle
nop
pop
push
push
mov
xchg
test
xchg
sbb
retf
dec
cmp
sbb
xchg
cmp
mov
cmp
cmp
test
sbb
push
shr
push
outs
imul
sahf
pop
ss
xchg
mov
adc
cmp
mov
mov
pop
xor
adc
adc
push
and
dec
cmp
call
fstp
cmps
pop
outs
lods
push
scas
or
add
pusha
or
ds
mov
add
and
or
sub
nop
jmp
add
stc
(bad)
pop
clc
mov
imul
pop
loopne
retf
sti
mov
adc
xchg
call
mov
ret
push
cmps
nop
ret
mov
push
das
and
cmp
cmp
out
fld
js
push
inc
push
xchg
dec
jg
push
mov
inc
push
adc
mov
jne
je
dec
xor
loope
ret
je
push
ins
or
mov
aam
add
push
iret
mov
test
and
adc
dec
adc
nop
retf
stc
mov
retf
dec
neg
ror
rcr
sbb
push
push
pop
imul
push
dec
mov
mov
push
cmps
add
or
jmp
adc
jl
inc
mov
pop
pop
cmp
cmp
xor
mov
and
icebp
(bad)
mov
sbb
setb
add
ret
xor
fwait
clc
add
add
pop
inc
jp
stos
adc
rol
(bad)
test
mov
cmp
inc
inc
popf
in
dec
push
jmp
mov
mov
aaa
xchg
mov
(bad)
in
sti
mov
loop
inc
sub
je
jbe
bound
sbb
retf
repnz
test
xchg
loopne
ins
mov
movs
pop
cld
mov
mov
inc
pslld
movzx
pop
loope
mov
sub
xor
cwde
ror
pop
add
dec
shl
es
cs
xor
fwait
mov
cmp
xor
(bad)
je
and
mov
or
repnz
sub
adc
mov
sub
mov
sub
in
mov
xor
push
adc
push
(bad)
mov
sbb
mov
mov
adc
icebp
xor
lds
aas
ins
jne
jp
ret
mov
dec
scas
pop
and
cmp
dec
outs
adc
mov
adc
xor
cmp
cmp
es
inc
cmp
cmp
and
(bad)
loopne
xchg
out
push
rcr
ror
in
adc
mov
sbb
shl
ror
loope
js
in
stos
mov
(bad)
dec
pushf
xchg
add
push
mov
jb
mov
stos
xchg
leave
test
push
mov
mov
ret
popf
in
cld
mov
enter
mov
pop
cmp
adc
dec
adc
xchg
add
hlt
adc
bound
push
in
add
sub
mov
xchg
and
sbb
in
lods
inc
and
dec
in
inc
in
out
sub
pusha
mov
or
mov
push
pop
js
cmp
mov
add
(bad)
es
fisttp
cdq
add
cmps
out
bound
pop
lods
or
pop
jp
jne
repz
jp
or
mov
test
push
in
stos
imul
dec
inc
ret
inc
mov
jb
loop
out
popf
in
or
leave
and
and
repnz
loopne
inc
or
aas
inc
(bad)
pop
push
xor
int3
and
push
pop
sub
jg
out
jnp
je
sbb
inc
loopne
push
mov
fsubr
mov
not
je
jl
sbb
inc
aas
push
inc
adc
aaa
mov
(bad)
div
dec
sub
add
loopne
pop
and
pop
add
pop
enter
fcmovnbe
aaa
rcl
push
pop
fadd
mov
and
dec
(bad)
fmul
add
aam
ret
dec
xor
aam
inc
push
jns
scas
and
jb
jb
mov
aam
add
inc
scas
cdq
aam
inc
inc
scas
loopne
scas
cmc
retf
and
sub
adc
mov
sbb
js
cmp
movs
mov
mov
mov
cmc
or
test
xor
mov
daa
cmps
sbb
movs
dec
test
mov
add
cmp
out
test
ret
int
jle
inc
pop
or
xor
add
popa
pop
int3
add
and
outs
and
rol
out
xor
cs
loopne
retf
and
fcomp
lahf
add
rol
inc
xor
popa
popa
ret
push
pop
pop
inc
dec
mov
and
and
adc
scas
fnstsw
hlt
hlt
mov
rsqrtps
xor
clc
cwde
cmp
test
addr16
call
nop
dec
adc
and
xlat
mov
sbb
es
nop
ss
push
push
cs
and
sub
and
push
es
nop
mov
push
sub
sub
es
xor
sbb
cmp
cmp
dec
xor
xor
ror
dec
dec
dec
xor
inc
ror
dec
pop
dec
pop
and
xchg
xor
pusha
dec
ror
xor
cmp
xchg
xor
ins
cmp
or
xor
cmp
xor
sar
cmp
pop
pop
ds
nop
pop
pop
sub
aas
mov
mov
nop
xchg
retf
nop
pop
inc
xchg
inc
cs
jb
cwde
sub
mov
cwde
ds
xor
test
xor
je
mov
add
in
add
loop
xchg
mov
push
xchg
add
sub
les
enter
add
xor
shl
mov
nop
fsubr
fmul
inc
jb
loopne
mov
sub
xchg
sub
das
aam
pop
xchg
xor
inc
in
xchg
retf
hlt
inc
clc
popa
inc
retf
xchg
sub
jbe
xchg
dec
add
mov
stc
popa
dec
or
mov
adc
gs
mov
sbb
sbb
xor
repz
mov
or
cmp
inc
xor
mov
cmp
gs
cs
inc
inc
mov
inc
dec
popa
inc
sbb
inc
push
sahf
retf
nop
jl
sub
mov
shl
push
pop
pop
add
das
pop
and
mov
fwait
cmp
xchg
sbb
mov
add
and
jbe
xchg
mov
or
or
xchg
xchg
xchg
adc
ss
outs
(bad)
sub
dec
dec
dec
dec
xor
cmp
fcmovu
add
inc
and
inc
pushf
pushf
pushf
fmul
dec
dec
push
push
daa
daa
pop
pushf
pop
add
daa
daa
daa
push
and
daa
js
dec
rcr
test
mov
dec
cwde
pushf
mov
movs
test
xchg
dec
es
rol
dec
xor
fs
sar
adc
dec
es
in
in
dec
es
fs
hlt
xchg
add
pusha
and
or
xchg
imul
sbb
and
es
sub
es
fs
xor
cmp
add
dec
dec
xor
mov
mov
pop
cmp
and
pop
pusha
sbb
mov
popf
add
inc
push
mov
add
(bad)
or
add
jmp
adc
aas
fisttp
mov
add
and
jne
push
fwait
rcr
mov
adc
jmp
(bad)
and
mov
lods
mov
inc
sbb
je
movs
loope
data16
mov
dec
mov
add
dec
xchg
retf
and
js
inc
pusha
push
scas
cmp
retf
or
loop
int
xor
sbb
adc
mov
cld
sar
shr
fdivr
fbstp
xor
sti
imul
movs
xor
inc
call
je
or
jmp
retf
mov
aad
dec
xchg
or
cmp
ret
push
mov
ja
mov
movzx
fadd
dec
or
fsub
or
adc
shl
ja
lea
sub
hlt
movs
adc
into
mov
test
mov
xor
outs
sub
dec
or
inc
adc
cmp
inc
push
aam
je
cld
(bad)
cmc
jmp
mov
dec
rcl
cmp
push
or
inc
test
mov
fcmovb
ret
dec
mov
cld
push
ror
dec
ret
mov
add
add
rcr
inc
test
xchg
push
jge
js
inc
dec
imul
xchg
dec
(bad)
cs
push
adc
jb
in
pop
adc
sbb
in
sbb
and
and
cmp
mov
fild
mov
cs
xchg
jb
bound
and
ret
or
loopne
sbb
rcl
mov
inc
dec
shl
or
mov
nop
adc
adc
adc
dec
sbb
rol
push
sbb
movs
push
int
xor
and
sub
(bad)
inc
add
sbb
fist
sub
dec
ficom
push
xchg
ss
sub
push
stos
xchg
adc
cmp
add
push
inc
pop
xor
shl
push
adc
retf
mov
add
dec
repz
fistp
add
or
sub
inc
dec
lea
or
dec
add
popa
pop
nop
xchg
sbb
push
inc
loopne
hlt
repnz
pop
int3
add
jmp
or
add
push
js
sbb
test
mov
mov
mov
sbb
es
ret
xor
jne
(bad)
leave
add
bound
ins
movs
inc
push
add
lea
or
fdiv
xchg
cmps
retf
mov
(bad)
xor
dec
es
in
xchg
rcl
lods
xchg
sbb
int3
cmc
test
sahf
test
pop
loope
mov
and
adc
xchg
mov
les
dec
icebp
fmul
add
js
sahf
(bad)
jo
jne
icebp
xor
call
or
mov
mov
or
cmp
je
pop
out
mov
add
or
add
push
or
jle
inc
test
pop
ins
cmp
fisubr
scas
xchg
push
push
mov
fwait
push
sbb
in
mov
add
jo
xchg
pop
sar
push
push
inc
outs
je
call
jbe
mov
push
jp
xor
add
xchg
test
iret
pop
sub
push
mov
inc
(bad)
push
push
mov
mov
in
mov
mov
sbb
mov
sbb
ins
sbb
in
out
or
retf
inc
jmp
push
loopne
retf
rol
add
cwde
int3
pop
add
add
ins
ins
push
or
jle
adc
push
cmp
mov
xor
cmp
xchg
push
(bad)
dec
xchg
xor
push
sbb
mov
and
push
aam
dec
lods
mov
adc
xchg
(bad)
pop
rcr
enter
int
mov
ror
lds
jmp
dec
outs
daa
pop
pop
aam
pavgb
dec
loopne
pop
push
inc
jmp
out
mov
and
mov
(bad)
imul
mov
and
mov
add
push
or
rol
pop
sbb
push
jo
pop
inc
clc
test
mov
ds
cld
add
shr
push
xor
or
sar
ret
and
jmp
je
xor
xchg
push
das
mov
sub
lods
xor
je
add
add
movs
cmp
or
mov
sbb
pop
scas
push
jne
xchg
int3
add
mov
out
mov
lds
or
mov
inc
dec
popa
inc
ficomp
lea
xchg
test
xor
sub
or
loope
push
ja
jne
dec
inc
xor
push
push
or
mov
inc
pop
jne
pop
push
jo
pop
icebp
imul
xchg
push
adc
xor
pop
or
mov
ds
loop
add
(bad)
jl
mov
or
push
or
movs
(bad)
xor
sub
test
jl
mov
mov
add
fbld
dec
add
dec
push
ins
mov
lea
cs
jns
jne
ins
aas
or
pop
add
xchg
fs
xchg
dec
rol
ffree
push
inc
push
iret
adc
ret
add
adc
cmp
jl
enter
into
hlt
imul
sub
mov
jge
dec
mov
adc
dec
xor
int
call
or
sbb
mov
push
and
jb
and
pop
add
outs
ins
pop
sti
jg
(bad)
inc
lahf
inc
cmp
ja
add
jmp
sbb
cld
outs
stc
movsx
add
lea
fiadd
dec
push
inc
std
fistp
adc
or
gs
js
adc
add
xchg
adc
dec
or
inc
push
loopne
mov
add
sar
add
int
cmp
ins
and
inc
cmp
nop
dec
loope
scas
push
adc
mov
iret
sbb
add
fwait
ja
pop
and
shl
adc
dec
sub
test
in
push
jne
test
inc
clc
push
aas
xor
test
cld
je
shl
xor
stc
lods
cmp
cmp
jl
bnd
mov
cmp
rol
loope
mov
adc
adc
or
repnz
data16
cmp
sahf
int3
mov
or
ins
adc
adc
add
je
imul
jae
add
add
xchg
lods
mov
ja
add
xchg
sub
mov
enter
sbb
rcr
pop
add
push
jne
jno
mov
dec
push
or
scas
adc
in
retf
sub
jge
jnp
mov
and
movs
push
shl
pop
cdq
sub
dec
sub
sbb
push
xor
jecxz
lahf
xchg
test
xor
nop
mov
ds
dec
or
add
daa
das
or
jmp
dec
jne
aaa
das
out
cs
call
cmpxchg8b
push
sbb
pushf
ret
and
or
mov
retf
mov
adc
mov
or
xor
leave
mov
repnz
rcl
push
push
or
pop
add
xor
jp
sbb
and
dec
adc
ins
fisubr
fsub
inc
xor
mov
pop
push
cmps
jno
push
push
ret
adc
popf
or
fadd
mov
into
sti
or
(bad)
enter
test
inc
inc
ret
int
dec
pop
fadd
xchg
adc
lahf
sbb
(bad)
sbb
add
sar
xor
pop
pop
(bad)
push
dec
int
call
out
scas
lea
add
adc
adc
mov
add
jno
inc
xor
call
pop
leave
adc
cmps
jmp
ret
(bad)
and
push
push
xchg
add
jo
push
pop
jmp
xor
push
aas
call
sbb
inc
ror
mov
or
sbb
jp
test
(bad)
xor
sub
dec
add
mov
inc
lock
rol
shl
retf
outs
mov
mov
iret
adc
inc
setne
ja
and
cmps
sahf
leave
les
cli
or
or
push
and
push
jo
mov
jle
cmps
mov
xchg
or
ret
test
lods
test
add
addr16
(bad)
pop
xor
stos
rcl
imul
setns
bound
daa
sbb
add
or
arpl
push
fs
lods
imul
or
arpl
pushf
xor
jecxz
adc
lahf
or
xor
cdq
adc
retf
and
aam
push
xor
xor
sub
pop
pop
inc
sub
lahf
ret
or
test
jmp
add
iret
add
in
add
mov
jo
fnstcw
pushf
jo
xchg
sub
je
xchg
add
mov
add
push
repnz
gs
pop
pop
call
repnz
scas
in
or
or
xchg
cmp
push
cld
add
or
enter
or
or
add
or
or
sbb
pop
xchg
or
iret
enter
push
cs
enter
xor
mov
pop
adc
or
sbb
adc
and
adc
adc
adc
push
pop
and
jb
out
adc
adc
adc
push
adc
iret
enter
pop
fisub
sbb
xchg
sbb
add
cmp
pop
leave
xor
sbb
mov
sbb
sbb
push
sbb
je
push
sbb
in
aad
cmp
sbb
cmps
pop
push
push
inc
and
enter
pop
and
add
sub
ret
pop
in
push
(bad)
pop
mov
pop
xchg
ror
(bad)
fcomp
mov
cmp
not
je
xchg
repnz
sub
rol
xchg
mov
in
in
xchg
cmp
mov
in
add
call
call
adc
jae
lea
or
addr16
cmp
sbb
adc
rcl
or
retf
stos
or
aad
iret
enter
cmp
mov
out
jb
jb
xchg
out
or
inc
call
sbb
icebp
sub
scas
das
repnz
repz
std
test
test
pop
hlt
xchg
push
jnp
scas
(bad)
std
cmc
cmc
cmp
and
test
sbb
gs
clc
pop
add
or
mov
stc
and
iret
enter
add
sti
fcom
fdivrp
cld
cld
je
jnp
or
std
xor
out
leave
std
sbb
(bad)
dec
mov
ret
dec
sub
jecxz
movd
push
fdivrp
ror
or
mov
pop
add
cld
in
inc
scas
in
in
or
sti
mov
and
out
out
sbb
call
mov
movs
mov
jmp
push
and
jmp
daa
in
cdq
and
sti
jmp
or
jb
inc
out
xchg
mov
inc
cdq
cmp
and
aas
repz
scas
ss
repz
sbb
cmp
stc
pushf
loopne
repnz
imul
mov
mov
clc
cdq
jb
xor
nop
push
stc
sbb
xor
sti
sti
sti
xchg
mov
cld
cmp
jb
stos
in
clc
mov
loopne
test
gs
xchg
inc
fnstsw
xor
push
jne
mov
or
shl
leave
or
and
clc
dec
add
push
imul
xchg
in
aad
fdiv
out
mov
sbb
jb
imul
jmp
mul
rcl
test
push
retf
or
xchg
into
mul
and
not
or
test
xchg
inc
idiv
pop
push
loope
test
sub
test
mov
push
popa
imul
push
fnstsw
clc
lods
inc
scas
in
cmp
sbb
pop
dec
push
popa
xchg
cmp
jns
mov
cli
hlt
icebp
dec
adc
push
test
sahf
dec
aad
jle
push
jo
adc
push
ins
outs
fcmovnbe
mov
loope
shl
loop
pop
repnz
hlt
cmp
movs
test
hlt
in
imul
test
repz
repnz
repz
push
cmp
or
sbb
jmp
mov
ucomiss
jae
and
or
jb
sbb
mov
jmp
(bad)
repnz
repnz
and
test
icebp
xchg
push
arpl
cmp
mov
in
repnz
shl
icebp
sbb
push
cmc
cmc
mov
(bad)
icebp
mov
or
icebp
or
jne
stc
imul
pop
repnz
wrmsr
icebp
adc
stos
jne
and
test
xchg
adc
loope
or
dec
sahf
je
or
ret
push
inc
dec
xlat
mov
ror
dec
movzx
xchg
addr16
add
mov
adc
mov
pop
mov
add
fiadd
mov
xor
dec
icebp
dec
add
movs
xchg
je
test
dec
add
and
pop
sar
xor
dec
adc
fcomp
push
fcmovnu
fild
jecxz
push
xlat
mov
int
repz
leave
ficomp
fwait
addr16
adc
std
or
jns
fisttp
push
cmp
xlat
ins
push
loopne
aam
lods
push
fdivr
sar
xrelease
xabort
loope
popa
push
mov
inc
cs
add
adc
add
cmp
cmp
outs
rcr
dec
mov
dec
sub
hlt
into
sub
(bad)
stos
push
sar
cld
xor
daa
mov
add
xchg
dec
mov
push
mov
in
xor
repnz
add
pop
sbb
mov
into
push
or
mov
sub
loopne
push
add
and
imul
adc
adc
les
in
push
gs
sbb
shl
adc
cmp
sbb
sahf
test
and
test
lock
fdivr
sbb
mov
sbb
loope
outs
push
push
sbb
push
gs
push
je
es
sub
or
imul
mov
add
mov
mov
xchg
lock
psadbw
fidiv
test
sti
mov
add
jb
pop
mov
mov
out
loopne
lock
out
pop
pop
or
repz
daa
jmp
pop
ret
and
mov
sbb
dec
or
xchg
dec
leave
lock
nop
xchg
or
daa
nop
xchg
inc
repz
test
pop
inc
pop
leave
jns
enter
call
mov
jmp
psllq
enter
repz
repz
push
repnz
inc
repz
repz
in
xchg
cmp
inc
repz
inc
addr16
mov
aaa
or
add
cmp
movs
jb
repz
mov
nop
mov
out
and
mov
sti
inc
es
mov
cmps
inc
scas
dec
movs
icebp
popa
add
jb
cmp
dec
ret
icebp
pop
cmc
pop
dec
movs
jb
adc
xchg
addr16
add
adc
mov
movs
imul
fisttp
sub
imul
mov
cld
or
stc
push
daa
and
test
xchg
push
nop
retf
inc
enter
dec
xchg
cwde
lods
or
aas
mov
inc
mov
lea
nop
dec
dec
mov
xchg
push
test
call
push
mov
and
sbb
adc
jnp
and
or
test
jb
mov
leave
and
and
xchg
mov
push
inc
dec
rol
dec
out
or
xchg
sbb
cwde
nop
xchg
add
xchg
nop
mov
mov
pushf
cwde
sbb
mov
jno
punpcklwd
add
or
fild
sub
dec
stos
dec
inc
xor
rep
jg
jmp
push
jmp
pop
(bad)
jnp
pop
adc
mov
inc
xor
inc
push
imul
arpl
dec
adc
xor
repz
sub
and
or
mov
fst
mov
fisttp
cli
mov
adc
push
jmp
std
adc
mov
adc
or
idiv
jns
or
dec
sub
sbb
add
xor
adc
or
mov
ror
xchg
jo
cmp
ret
add
or
sbb
inc
adc
cmp
daa
clc
in
mov
popf
pop
ret
add
out
fild
adc
xor
mov
cmps
inc
out
(bad)
and
shl
(bad)
ret
push
xchg
lods
jg
(bad)
push
iret
or
push
xor
pop
push
scas
adc
and
inc
add
sbb
loop
xor
xor
enter
outs
sbb
or
push
and
jge
rol
pop
push
popa
jmp
ret
enter
xchg
leave
jo
outs
cdq
es
add
ficom
jbe
fcomp
lock
cmp
loope
jbe
lea
mov
dec
ins
mov
mov
mov
or
or
sub
adc
dec
sub
movs
loopne
sbb
sub
pop
cmp
imul
or
dec
push
xor
xor
or
mov
dec
icebp
dec
cld
jmp
push
push
pop
pop
pop
pop
pop
dec
shl
nop
mov
arpl
jmp
je
pop
xor
and
cmp
call
xchg
enter
aaa
stos
and
sub
adc
cld
sbb
repnz
xchg
push
test
and
jg
pop
sub
sbb
je
xchg
cli
adc
bts
jbe
jb
pop
mov
or
nop
outs
int3
inc
ins
sbb
mov
mov
pop
(bad)
or
and
dec
sbb
call
lea
dec
dec
and
sbb
xor
add
sub
push
jecxz
adc
loop
mov
nop
push
adc
pop
cmp
je
jmp
mov
shl
arpl
(bad)
ror
sub
push
push
pop
dec
mov
imul
mul
lock
push
push
inc
push
jno
mov
add
stc
pusha
dec
sub
test
jne
add
xchg
js
out
add
adc
pop
test
mov
jne
fidivr
clc
lahf
imul
cwde
jmp
xchg
mov
pop
shl
pop
(bad)
sub
dec
push
push
push
xchg
jb
sub
mov
aaa
xchg
mov
mov
(bad)
jne
sub
jmp
mov
(bad)
stc
jge
mov
lds
jb
dec
add
je
outs
xchg
add
int
push
lea
or
xor
mov
movsx
je
push
jbe
sbb
xchg
pop
imul
es
clc
cs
pop
jnp
jmp
mov
rcr
sbb
es
fwait
add
jo
inc
jge
jl
sbb
lock
and
lds
xchg
shr
or
jp
push
or
ja
jmp
fidivr
jo
je
outs
inc
adc
sub
or
pop
test
mov
jl
imul
ins
xchg
cdq
and
mov
xchg
cmp
jne
ja
pop
or
and
sbb
push
in
test
pop
push
pop
pop
pop
mov
mov
and
cmp
pop
adc
lock
sbb
mov
sbb
test
pop
mov
adc
cmp
sbb
inc
push
les
jns
and
cmp
push
mov
sbb
mov
mov
pop
dec
jno
or
cmp
mov
jle
sub
mov
xor
pop
mov
lea
(bad)
jecxz
mov
pop
push
xchg
jg
mov
sahf
add
aam
jmp
dec
clc
mov
je
dec
xchg
add
dec
jmp
jno
jno
pop
jp
xor
(bad)
and
rcl
ds
jle
push
pop
les
cmp
mov
shl
and
es
(bad)
xor
jp
rcr
and
cmp
jmp
movs
(bad)
xor
xchg
shl
and
bound
adc
sahf
jnp
xchg
xchg
jo
bound
es
scas
pop
jo
ret
inc
push
sub
push
push
sub
add
test
fwait
or
dec
pushf
je
mov
or
fcmovnb
les
ins
(bad)
fmul
test
inc
pop
fadd
inc
push
in
dec
mov
and
push
and
or
pop
shl
push
add
enter
sbb
add
and
scas
lods
fsub
push
loope
js
fstp
mov
cmp
fsub
push
pushf
fs
add
lea
or
jnp
and
add
adc
sub
cmp
cwde
or
or
mov
sti
(bad)
ret
pop
popa
dec
adc
mov
adc
and
inc
xor
xchg
cmps
dec
pop
adc
sbb
jae
xchg
or
jmp
or
pusha
aas
(bad)
jmp
dec
pushw
and
out
or
imul
cmp
adc
call
xor
and
and
sub
ins
jmp
cmp
jne
xor
dec
jmp
inc
pop
add
mov
rol
out
add
jl
xchg
add
inc
leave
mov
add
nop
xor
adc
cmp
mov
test
js
inc
mov
call
mov
add
adc
mov
dec
push
or
mov
outs
sub
mov
sbb
movsx
inc
repz
mov
outs
jmp
xchg
xor
add
int3
ds
xchg
js
jl
jo
fiadd
and
add
inc
sub
js
push
stos
mov
pushf
mov
imul
es
lock
cld
add
in
mov
lods
add
cmp
mov
aad
sub
mov
mov
xchg
inc
nop
adc
push
xor
(bad)
or
sub
dec
lods
add
lea
inc
sbb
mov
adc
mov
ror
(bad)
(bad)
dec
mov
mov
dec
add
mov
mov
dec
mov
inc
and
jb
xor
dec
add
pop
mov
sub
push
int
xchg
hlt
add
ss
out
adc
and
and
pop
pop
test
jo
and
dec
(bad)
stos
retf
cmps
je
add
inc
xchg
call
sbb
movs
push
call
aas
push
pop
enter
adc
loope
pusha
dec
xor
ins
icebp
dec
in
add
sub
out
sbb
repnz
add
arpl
xchg
pop
jnp
fcomp
sbb
mov
or
ins
cmp
pop
cmp
inc
cmp
popa
test
add
leave
es
std
ja
push
and
cmp
je
cmp
fmul
cmp
or
dec
retf
mov
rcl
adc
xor
movs
clc
call
aaa
and
cwde
pop
daa
jno
sub
sbb
aam
mov
and
jge
jmp
inc
or
sub
repnz
jmp
add
jne
cmps
adc
push
data16
inc
push
movs
fisub
and
jbe
and
test
xchg
jmp
outs
push
jbe
ins
pop
es
and
gs
push
pushf
es
inc
or
add
adc
xor
mov
add
inc
pop
and
mov
pop
mov
ret
dec
stc
push
inc
call
push
jmp
icebp
sub
dec
lods
or
lds
add
add
jl
fidiv
jo
push
push
pop
pop
jmp
xchg
sbb
add
cli
or
or
fsub
push
call
addr16
fist
dec
jns
sub
ja
(bad)
jns
test
fiadd
sub
or
out
sub
lock
or
aas
movs
adc
ins
outs
sahf
jp
add
inc
cs
je
add
add
pop
int3
mov
and
and
ins
or
inc
in
pop
pop
shr
jmp
dec
popa
push
pop
jle
adc
aam
cmp
cmp
sbb
(bad)
xlat
test
lods
sbb
mov
or
adc
popf
leave
inc
sbb
es
dec
test
out
and
jmp
xor
adc
lock
sbb
mov
pop
cmp
add
mov
cmp
jle
add
int3
xor
es
outs
dec
stos
sub
and
add
aas
jae
in
mov
jae
lea
cmpxchg
inc
and
stos
xor
mov
adc
push
xchg
and
mov
pop
or
xor
fcom
dec
adc
sub
push
push
je
pop
inc
adc
cmp
lock
sub
xchg
xor
lea
push
fldcw
or
xchg
or
adc
adc
test
push
push
pop
push
int
addr16
lea
out
aaa
mov
or
fsub
lock
inc
adc
adc
inc
ja
mov
xor
cmp
push
cmp
lock
push
push
pop
dec
out
push
andps
add
int
pop
xchg
jnp
add
mov
js
inc
mov
imul
xor
or
add
inc
push
add
and
add
pop
or
add
cmp
or
sbb
push
into
sub
shl
mov
popf
mov
lds
mov
adc
adc
clc
pop
pop
dec
in
add
lods
push
mov
pop
dec
or
sbb
fmul
push
inc
push
sbb
sub
pop
ret
pop
pusha
add
jns
cmp
and
push
add
gs
adc
inc
clc
loop
test
mov
test
push
or
pop
ss
mov
dec
push
pop
pusha
inc
jmp
shl
xchg
fldenv
loopne
inc
sub
push
aaa
xor
shl
jmp
js
mov
or
je
test
jbe
push
mov
mov
add
fild
or
or
or
mov
jb
and
dec
cwde
cwde
nop
push
adc
jno
add
mov
cmc
out
mov
test
ja
fdivp
shl
push
retf
and
out
out
cmp
js
lock
retf
js
mov
or
sbb
and
push
aad
out
pop
mov
jo
call
inc
mov
lock
inc
call
(bad)
frstor
out
shl
and
jmp
jg
loop
rcl
inc
push
sub
test
adc
and
inc
ins
mov
jo
inc
clc
and
dec
jne
mov
add
je
sbb
imul
or
xor
mov
je
xor
dec
and
or
stos
lods
fcomp
sub
ret
or
inc
cli
pop
pop
push
fdiv
fcmovnu
sub
sub
mov
add
shr
add
jno
test
jle
add
xchg
div
sbb
rcr
repz
and
jg
sub
js
js
adc
pop
push
cwde
loope
sar
inc
fld
pop
fld
aad
add
or
fcomip
cmc
clc
(bad)
jle
mov
inc
push
inc
push
sub
adc
xchg
and
mov
enter
loopne
call
popa
fsub
sti
fstp
push
push
cld
outs
jmp
mov
jbe
pop
push
ins
push
mov
or
outs
bound
daa
sbb
fisttp
pop
xchg
cs
inc
xor
and
ja
dec
push
retf
inc
sub
inc
fcomp
sbb
jmp
jmp
(bad)
ret
jle
or
adc
cmps
jmp
lock
or
ss
cmp
test
dec
inc
fadd
jmp
sub
or
adc
or
sbb
push
add
add
pop
loopne
and
outs
sbb
call
adc
rcr
rcl
inc
popw
imul
xchg
popf
aaa
enter
in
fidivr
xchg
adc
jp
or
fcomp
imul
sbb
and
mov
add
pop
popa
(bad)
sbb
dec
add
lods
imul
adc
add
fild
out
pusha
xor
test
push
push
lahf
mov
loopne
test
xor
repz
shl
rcr
add
imul
mov
pushf
jmp
xchg
xor
pop
or
shl
mov
pop
inc
rol
sbb
push
push
mov
lock
or
clc
and
xor
inc
loop
dec
jns
out
mov
mov
out
cmp
sbb
cmp
shl
cld
fs
(bad)
push
add
push
add
add
add
shr
dec
cmp
pop
sbb
jge
fdiv
int3
mov
dec
and
mov
sub
push
and
pop
aad
jmp
in
or
push
sbb
test
in
or
add
enter
test
(bad)
sub
pop
out
or
push
stc
jbe
xor
jne
or
jle
fcomp
mov
lahf
mov
clc
lea
jmp
shl
push
add
jbe
dec
adc
or
push
or
mov
movs
adc
mov
jl
and
fmul
mov
in
adc
jbe
pop
(bad)
es
sub
inc
test
push
push
lock
jp
icebp
jmp
mov
sub
fmul
clc
fs
aad
or
xor
or
jo
cmp
fcomp
push
or
(bad)
data16
push
and
xchg
test
or
je
and
add
or
sbb
repnz
adc
mov
add
loope
xor
and
pop
mov
add
aaa
mov
sbb
retf
add
mov
popa
cmp
sahf
test
adc
or
add
jo
or
fist
fdiv
shl
sub
inc
jmp
data16
inc
in
(bad)
out
sbb
lock
and
mov
outs
jg
in
and
aaa
jecxz
sbb
cdq
out
popa
mov
xchg
ret
mov
xor
and
xor
sub
and
jge
aaa
jge
movs
mov
and
push
sbb
mov
pusha
add
pusha
loope
pop
sub
xor
cdq
push
pusha
adc
adc
out
and
fnstsw
pusha
pusha
(bad)
and
cwde
(bad)
push
push
movs
mov
mov
mov
es
in
mov
add
add
push
mov
xor
sbb
in
add
pop
shl
jg
je
dec
jne
or
and
add
ret
push
fs
test
mov
xchg
es
mov
sbb
jmp
push
and
inc
add
aaa
aaa
loope
adc
fld
xor
sti
fstp
jmp
fisttp
bound
sar
dec
adc
sbb
inc
push
lock
test
hlt
arpl
cmp
clc
vmread
out
cmps
adc
push
stos
cli
adc
adc
adc
xor
add
retf
sti
retf
add
xor
or
or
shr
xchg
push
shl
mov
sbb
test
ss
js
cwde
fstp
iret
and
dec
jmp
sub
sub
jb
addr16
push
push
shr
pop
or
sbb
dec
repz
inc
(bad)
test
into
adc
(bad)
mov
add
loope
imul
jecxz
ret
and
lea
or
add
and
retf
add
mov
fld
jge
jge
aam
repz
test
inc
test
mov
into
cli
repnz
xchg
mov
sbb
sbb
and
std
test
fld
test
stos
cli
shr
sar
jle
dec
lods
sbb
xchg
xchg
push
(bad)
loopne
mov
pop
vmovd
mov
data16
loope
adc
das
mov
adc
and
and
data16
sbb
popa
sti
lock
push
add
push
add
mov
hlt
mov
and
pop
jmp
adc
repnz
sub
dec
mov
scas
add
(bad)
add
popa
xor
inc
sti
adc
lds
sub
call
sub
scas
mov
pop
dec
shl
adc
sbb
xor
xor
hlt
and
adc
dec
movs
inc
pop
(bad)
test
rcl
adc
adc
out
ja
pop
loop
xchg
ret
fbstp
popa
jno
ret
dec
inc
and
dec
ret
and
inc
pop
ficom
jle
loope
je
std
or
mov
ins
push
jno
and
gs
cmp
push
sub
fdivr
and
fcom
add
jmp
rol
push
mov
and
or
mov
scas
adc
inc
and
aam
cmps
cmp
adc
and
push
stos
xchg
push
adc
add
sub
mov
fnstsw
adc
jnp
jae
cmp
add
add
and
xor
mov
jecxz
adc
xor
mov
sbb
loop
mov
fldenv
push
mov
xor
or
mov
fst
dec
mov
or
pop
or
and
imul
adc
or
fcomp
push
xor
xor
lods
lock
fstp
jo
jae
push
test
sbb
arpl
scas
push
inc
sub
arpl
ins
mov
leave
(bad)
retf
sub
add
push
or
mov
inc
cwde
bound
cmp
xchg
mov
sar
mov
or
sub
verw
xchg
push
cmp
or
adc
idiv
mov
mov
or
sbb
je
mov
xchg
pop
push
add
daa
add
dec
fsubr
or
mov
repnz
and
or
and
inc
or
push
or
popf
sbb
mov
shl
jmp
push
dec
push
repnz
lea
add
add
pop
pcmpeqb
sub
adc
sbb
sub
push
pop
test
dec
and
jmp
sub
fcom
sbb
loopne
cmps
and
test
push
mov
pop
das
retf
in
or
mov
or
mov
xor
sbb
push
dec
shr
imul
cmp
sub
mov
fcom
mov
sbb
cmp
mov
int3
inc
adc
jo
js
inc
fwait
push
or
sbb
adc
sbb
pop
jo
jmp
mov
sahf
add
sub
pop
daa
mov
adc
fs
dec
inc
jnp
xor
inc
jmp
pop
adc
inc
pop
push
cmp
mov
mov
cmps
cmp
jb
sub
inc
dec
push
push
or
(bad)
inc
sub
add
mov
sub
pop
sub
sub
sbb
push
inc
jmp
ins
or
and
sbb
(bad)
arpl
adc
das
pop
(bad)
cwde
dec
je
jl
dec
mov
fimul
cmp
not
or
imul
mov
outs
dec
clc
mov
adc
add
or
pop
or
ret
bound
cmp
test
test
pop
add
push
aam
daa
inc
shr
sahf
retf
je
sub
cs
mov
retf
jb
xchg
addr16
test
mov
push
sub
dec
lea
add
xchg
cmp
cmp
cmp
inc
jle
imul
in
sub
mov
adc
jmp
add
adc
add
retf
mov
add
add
or
inc
test
mov
xchg
outs
adc
pop
push
test
or
push
inc
push
push
nop
jmp
mov
out
gs
mov
cmps
mov
mov
scas
push
xchg
and
xor
lods
mov
cmp
cmp
outs
fidivr
mov
jmp
push
mov
cs
adc
or
sbb
cmc
and
adc
pushf
lea
bound
sbb
adc
movs
test
dec
mov
and
cmp
push
adc
sub
or
and
mov
mov
ds
sub
push
jmp
mov
jb
test
stos
popf
or
rcl
(bad)
std
xchg
mov
das
cwde
cmp
jle
sub
cmp
sbb
aam
and
mov
or
test
add
xchg
xchg
mov
xchg
cmp
cld
sbb
jne
mov
sbb
nop
out
add
sub
xchg
jmp
fild
dec
jl
clc
pop
jge
(bad)
cmp
mov
add
mov
nop
add
jne
cs
jae
xlat
inc
inc
add
mov
or
mov
mov
ret
fs
xchg
add
xchg
leave
int3
mov
sub
ficomp
movs
or
dec
cwde
adc
push
and
inc
ret
daa
pop
stc
sub
cmp
mov
inc
adc
jbe
sub
mov
xor
ds
mov
dec
mov
push
test
mov
inc
push
inc
adc
cmp
cld
fwait
test
test
inc
pop
add
jmp
mov
mov
or
or
clc
cmp
sbb
sub
stos
imul
lock
or
jecxz
clc
call
inc
jmp
cmp
cwde
cdq
cs
xor
sub
xor
push
inc
xchg
push
add
and
push
retf
cmp
push
cwde
jge
test
dec
cmps
imul
cmp
mov
mov
mov
adc
or
mov
jmp
pop
xchg
cli
dec
mov
push
mov
xor
cmp
add
lods
sbb
add
add
ret
jge
ret
mov
rcr
and
mov
push
cmp
jb
adc
in
test
mov
cmp
mov
into
sub
pop
sbb
lds
add
and
mov
call
pushf
cmp
jae
in
mov
std
mov
or
je
jle
mov
mov
jae
xchg
and
es
jne
inc
test
test
jne
mov
ror
les
test
(bad)
jne
xor
or
test
mov
jo
adc
and
hlt
int3
add
jne
mov
scas
and
push
jl
pushw
cwde
xchg
test
push
pushf
adc
push
rol
xchg
ret
fild
mov
dec
imul
ret
imul
xchg
xor
add
ja
inc
lods
loope
mov
sub
dec
pushf
sub
cmp
mov
sbb
sti
jg
cmps
xor
add
rcl
adc
add
fsub
cli
out
push
adc
test
shr
inc
adc
adc
ret
sti
sbb
pop
mov
dec
sub
shl
adc
inc
loopne
pop
adc
je
add
lods
lock
lock
push
(bad)
ins
fadd
loopne
shr
push
mov
div
loop
call
aam
mov
inc
shl
aam
sub
push
aam
push
adc
or
jge
or
(bad)
add
fimul
sbb
add
es
add
or
mov
lods
pop
push
movs
icebp
mov
jb
dec
adc
nop
mov
add
fst
shr
idiv
mov
dec
nop
daa
mov
sbb
push
dec
into
inc
or
inc
inc
push
jae
fwait
(bad)
jmp
jno
les
add
jo
push
(bad)
imul
cmp
sbb
xchg
xor
retf
cmps
adc
jmp
jb
test
push
sahf
sar
add
xchg
test
les
aam
test
call
ret
xor
add
sbb
push
out
sahf
int
sbb
dec
xchg
retf
iret
repz
fistp
inc
mov
mov
fidiv
push
add
loope
adc
xor
add
mov
push
in
dec
loope
stos
in
lock
add
in
out
mov
or
lock
or
and
adc
adc
out
cmp
inc
(bad)
stc
dec
dec
cmc
(bad)
push
mov
jmp
mov
add
sar
dec
es
sti
cmps
mov
adc
rol
not
mov
sbb
xor
mov
test
mov
push
sub
ret
jno
cdq
loop
(bad)
shr
pop
add
sbb
ins
loopne
mov
stos
data16
fs
inc
push
je
cwde
out
dec
loopne
sbb
in
out
pusha
aam
loopne
cmp
push
push
jnp
pop
adc
scas
and
xor
push
sub
xchg
adc
inc
mov
mov
or
mov
dec
inc
fsub
call
test
movs
or
jbe
popa
xchg
cmc
and
or
add
jmp
add
ffree
inc
fwait
cmp
add
rol
call
add
test
xor
rcr
xchg
push
xchg
cmp
inc
call
jmp
push
sub
adc
js
push
ds
shl
inc
mov
mov
lods
jnp
xchg
data16
cmp
inc
add
inc
cli
lock
loop
lea
je
cmp
or
xor
mov
jp
push
test
sub
nop
push
dec
shl
sub
enter
test
(bad)
push
or
add
sub
xor
sbb
adc
xor
mov
sbb
and
repz
push
(bad)
cmp
jle
daa
sub
scas
pop
nop
dec
or
sub
iret
test
add
je
ret
retf
jae
pop
sbb
sbb
adc
cmp
xor
test
mov
sbb
dec
cmp
xchg
inc
xor
addr16
test
mov
add
pop
lea
xchg
retf
test
mov
or
xor
jae
mov
movs
popf
imul
add
pop
add
mov
push
xchg
adc
aad
sub
sub
xchg
ds
inc
icebp
and
sbb
and
add
push
xor
fs
push
push
adc
movs
outs
xchg
pusha
loopne
jbe
fs
jl
sub
add
add
xor
aas
adc
sbb
mov
mov
push
inc
sbb
test
imul
mov
sub
push
mov
daa
pushf
add
jne
sbb
mov
stc
cmp
rol
jmp
(bad)
mov
test
(bad)
fwait
adc
push
push
cmp
lods
call
mov
inc
pop
xor
cmp
mov
outs
mov
js
(bad)
add
add
jmp
lock
and
movs
retf
adc
or
shl
jo
jae
cmp
cmp
cmps
sub
cmps
xchg
cmps
call
adc
adc
cmp
ins
push
neg
cmp
xor
jmp
inc
cmp
dec
data16
push
and
sbb
cs
cmp
mov
xchg
cwde
iret
gs
inc
test
or
ror
jecxz
cmp
and
nop
or
sub
cmps
jo
repnz
adc
adc
xchg
push
movs
icebp
mov
push
mov
push
test
cmc
mov
fidivr
cwde
add
fwait
xchg
ret
stc
out
leave
pop
mov
or
or
mov
mov
sub
call
inc
pop
enter
sbb
adc
push
xor
sbb
sub
cmp
daa
jmp
push
push
cdq
jmp
movs
adc
sub
pusha
sub
jmp
iret
pop
or
mov
push
xchg
xor
mov
jne
push
push
test
jno
ret
inc
popa
in
and
adc
mov
and
cmp
rol
out
xor
bound
sbb
shl
mov
push
mov
inc
dec
dec
jl
push
mov
push
push
inc
dec
dec
ds
push
inc
test
mov
nop
lods
fnstcw
or
sbb
inc
int3
lahf
and
sbb
nop
xchg
fcom
xchg
xchg
hlt
sbb
or
mov
xor
mov
push
xor
loop
shl
nop
inc
scas
or
xchg
inc
repz
cmp
repnz
or
or
fdiv
cmp
fs
std
pop
push
std
imul
jb
mov
mov
shl
adc
mov
sbb
iret
(bad)
jmp
jl
mov
xor
and
push
push
dec
or
rol
xor
test
jo
pusha
and
pop
into
outs
pop
imul
adc
mov
lock
jmp
sbb
pop
pop
lock
add
xor
dec
lea
daa
je
repnz
xchg
push
js
add
repnz
jmp
xchg
ss
test
xor
cmp
inc
shl
cs
mov
enter
lock
and
loope
sbb
aad
cmp
jmp
icebp
jnp
je
gs
cs
hlt
pop
ror
das
test
add
mov
pop
daa
mov
or
add
fstp
xor
pop
inc
jnp
inc
xor
add
add
add
mov
sub
ret
mov
and
dec
add
ins
add
xor
and
mov
lods
inc
jge
scas
jnp
add
or
mov
push
sbb
mov
push
and
adc
shl
mov
pcmpgtw
movs
movzx
dec
mov
push
les
push
ja
jmp
pop
les
test
adc
and
das
mov
push
push
push
sbb
ds
ret
inc
xchg
stos
movs
xor
shr
add
adc
sar
inc
and
jbe
adc
test
nop
retf
je
pop
loope
mov
jmp
mov
lock
sbb
lods
loopne
dec
pop
imul
mov
lock
ins
mov
das
ins
sub
imul
push
sbb
mov
call
mov
shr
jge
mov
jp
test
aad
xor
add
clc
cli
ja
mov
test
xor
push
mov
xor
pop
mov
xchg
sbb
jb
adc
mov
push
daa
mov
sbb
lods
jp
cmp
push
je
inc
out
mov
add
xchg
pop
call
push
dec
jmp
add
and
movhps
fwait
inc
sub
or
cmp
mov
sub
mov
test
mov
in
cmp
jl
ja
jmp
lods
push
or
jmp
sbb
imul
cmp
xchg
push
jmp
mov
dec
jge
xchg
mov
hlt
stos
out
shl
pop
popa
cmps
or
ret
xchg
(bad)
jecxz
js
add
or
inc
test
sbb
dec
dec
sbb
push
leave
(bad)
aam
inc
sar
arpl
popa
aaa
mov
inc
and
and
jbe
jmp
sub
call
ins
mov
je
dec
es
outs
pop
add
dec
mov
push
aaa
inc
aas
push
js
mov
hlt
cmps
push
pop
test
push
pop
(bad)
mov
inc
cmp
sar
or
and
or
ret
pushf
add
popf
loopne
(bad)
jle
or
movs
add
(bad)
sub
(bad)
adc
jne
leave
jp
xchg
lds
nop
add
adc
push
pushf
add
add
ror
mov
adc
push
cmp
jo
mov
jle
scas
jl
xor
out
add
push
pusha
or
fs
pop
cli
push
sbb
fistp
gs
cmp
cwde
sub
dec
popa
xor
cmp
sbb
aad
lahf
loopne
sub
rcl
lahf
add
xor
das
jmp
add
lods
jecxz
hlt
inc
xchg
push
in
ins
adc
xchg
add
stc
pusha
mov
push
pop
or
jne
cmp
je
push
ror
mov
inc
mov
xchg
mov
call
jbe
mov
cmp
push
sub
inc
ret
jnp
fs
in
jge
add
xchg
shl
adc
clc
cs
cmp
jmp
int3
pop
ja
inc
jl
sub
push
enter
popa
add
pop
gs
ret
rcr
add
ret
sub
loope
jmp
pop
fcmovnbe
and
dec
jp
outs
sbb
jno
dec
lea
push
pop
mov
add
xor
and
movs
aas
xchg
or
out
add
in
mov
xchg
add
xchg
or
push
and
or
add
inc
ror
rol
push
sub
sbb
inc
out
dec
test
jmp
mov
cmp
cld
out
lods
or
add
jmp
xchg
in
fwait
mov
adc
js
inc
push
mov
js
and
ror
cdq
es
lahf
mov
and
lods
cmp
test
cmp
je
mov
ret
(bad)
adc
and
push
lods
ret
sub
pop
jbe
pop
and
jae
fsubr
push
stos
call
and
call
(bad)
call
push
sbb
xor
aaa
pop
add
inc
stos
inc
inc
xchg
movs
popf
cwde
mov
rol
push
mov
cmp
or
push
sar
outs
mov
adc
push
dec
push
push
or
dec
xchg
inc
dec
inc
test
les
cmp
fcompp
xor
je
jecxz
cmp
cmp
mov
push
shl
sub
fistp
sbb
ret
in
fnstcw
outs
sub
ret
mov
or
push
pusha
in
addr16
pop
jne
cmp
dec
adc
js
add
jb
dec
ins
adc
mov
or
mov
xor
mov
pusha
push
or
out
ficom
xor
dec
call
xchg
xchg
adc
cs
sub
call
ss
gs
ret
or
inc
xor
mov
dec
mov
daa
clc
call
push
mov
cmp
pop
cmps
mov
pusha
inc
mov
clc
pop
add
and
fldz
call
dec
dec
dec
push
popa
or
cdq
mov
clc
lahf
lock
inc
ins
mov
sbb
add
ret
setne
sbb
in
or
mov
mov
movs
or
lods
pop
and
inc
xor
add
sub
mov
loope
pop
pop
push
or
mov
popf
xchg
lahf
jle
or
push
fstp
mov
and
dec
(bad)
mov
sbb
call
jle
push
rcr
xchg
push
sub
add
sbb
fadd
shl
dec
pop
add
add
fdivr
sub
cmp
(bad)
fst
add
cmp
push
cmp
mov
jne
mov
sbb
xor
dec
or
jo
adc
jbe
and
dec
mov
add
fsub
(bad)
push
push
pop
pop
dec
add
dec
jo
inc
clc
xchg
push
call
dec
add
push
or
ins
(bad)
cli
outs
sub
dec
jns
neg
mov
fs
xchg
sbb
jl
movs
push
imul
push
or
jl
ins
out
or
mov
add
xchg
cdq
xor
cli
sub
add
shl
or
pop
frstor
jbe
cmp
or
adc
inc
push
push
shl
mov
sbb
and
inc
adc
sub
in
lock
fs
jge
xchg
sub
retf
fst
adc
xchg
imul
cmp
xor
stos
enter
mov
add
xchg
aam
inc
xor
cwde
int
add
pushf
cmp
test
imul
cmp
sbb
jl
and
and
movs
xor
xor
add
or
and
and
xchg
inc
adc
ins
loopne
pop
fadd
movs
inc
and
or
sbb
cmps
or
jl
ins
pop
adc
or
and
mov
mov
(bad)
retf
fisttp
mov
imul
pop
add
fadd
mov
mov
enter
xchg
out
inc
inc
(bad)
mov
pop
xor
xor
dec
mov
xchg
test
enter
js
inc
gs
aam
bound
loop
pop
dec
pop
and
retf
sub
leave
adc
jo
popa
fsubr
inc
push
xchg
add
test
inc
popf
or
sbb
fdivr
mov
jg
ret
daa
xor
or
jne
mov
add
xor
xor
mov
add
add
imul
or
mov
jl
mov
and
rcr
or
inc
add
ja
daa
enter
push
cdq
jne
cmp
adc
outs
xchg
ror
push
clc
shr
sahf
mov
loop
nop
jmp
pushf
push
xor
or
add
add
ret
and
add
push
icebp
dec
retf
lods
enter
repnz
mov
inc
(bad)
jge
sbb
mov
mov
lea
push
test
mov
add
xor
out
retf
cmp
mov
and
cmp
rol
inc
push
adc
cwde
hlt
sub
fnsave
push
and
or
sbb
mov
retf
jo
out
sub
dec
in
and
imul
pop
sbb
js
jg
loop
mov
jb
xor
scas
jmp
adc
mov
shl
fimul
(bad)
cmp
sar
jbe
shl
not
xchg
add
mov
mov
jo
movs
inc
cwde
add
mov
or
xlat
jg
mov
scas
mov
dec
pop
or
or
jns
jmp
cmp
and
sbb
push
mov
adc
sahf
sub
mov
inc
adc
cmp
sbb
adc
xchg
push
ret
jne
mov
mov
jne
adc
jp
fiadd
popa
mov
xlat
rol
in
push
sbb
mov
jl
mov
push
adc
mov
inc
xchg
fwait
outs
add
and
xchg
(bad)
jns
div
in
adc
or
or
add
ss
and
sbb
mov
adc
pop
push
inc
ins
mov
mov
mov
push
jmp
aad
fld
pop
in
jbe
call
add
xchg
pop
mov
adc
jne
lds
into
not
inc
adc
lock
sub
fiadd
add
pop
push
not
pop
mov
nop
inc
mov
loopne
aaa
pop
out
fsubr
dec
add
xor
mul
imul
push
mov
push
push
lods
test
cmp
pushf
les
shr
jl
loopne
jge
cld
inc
inc
outs
inc
or
inc
(bad)
lock
push
add
into
sub
sbb
mov
adc
dec
pop
(bad)
fstp
or
sahf
clc
gs
clc
inc
mov
jne
pusha
and
inc
pop
fcmove
out
inc
popa
je
inc
je
dec
rcl
dec
jle
sahf
jmp
pop
adc
ins
add
aad
and
or
push
or
retf
or
mov
das
pop
clc
xchg
add
popa
retf
jl
cmp
loop
clc
add
sbb
push
mov
lods
sub
cmc
push
fmul
sbb
jge
or
jmp
aam
test
or
jmp
test
outs
add
and
push
(bad)
sbb
jne
pop
pop
or
js
xchg
sbb
sbb
sub
push
jo
addr16
jae
jo
enter
sub
xchg
add
leave
sbb
xchg
dec
not
xchg
or
and
sbb
jecxz
mov
out
(bad)
imul
adc
out
cwde
outs
inc
or
or
icebp
int3
or
add
or
mov
jbe
inc
das
add
rcl
cld
cmp
xchg
mov
xor
and
dec
pop
xor
add
and
jne
aaa
xchg
mov
es
xor
add
add
add
adc
add
and
retf
sbb
xor
popa
je
and
ret
push
mov
xor
aaa
pop
adc
pop
and
dec
leave
call
cmp
int
jmp
pop
add
push
or
inc
sub
sub
or
stos
push
sbb
sti
add
out
retf
shr
pop
test
ss
daa
cwde
test
outs
rcr
lock
stos
mov
jmp
add
mov
and
mov
pop
or
push
add
adc
mov
jns
dec
or
inc
lea
pop
adc
sbb
int3
sub
inc
shr
jg
add
shl
not
test
add
adc
jle
dec
pop
repz
xchg
(bad)
iret
shr
mov
out
mov
inc
fwait
rcl
push
adc
iret
pop
jbe
dec
leave
adc
push
mov
nop
or
and
aas
xlat
or
push
sub
adc
jp
sar
jb
iret
and
arpl
mov
jns
adc
ds
push
xor
sbb
lea
sub
stos
(bad)
mov
je
add
ret
sub
or
jo
or
iret
les
mov
inc
aam
in
xor
enter
cmp
mov
xchg
ins
test
das
fadd
cmp
inc
inc
repnz
shl
sub
lock
xlat
or
fwait
sub
iret
mov
rcl
ds
push
or
or
aam
out
mov
mov
jl
mov
clc
pop
sub
in
lock
xchg
cmp
mov
fs
pop
(bad)
jns
cwde
pop
jb
hlt
pop
dec
lea
and
test
lods
js
xor
adc
inc
mov
(bad)
out
ror
or
inc
rcr
rdtsc
lea
cmp
mov
lds
jl
fisttp
pop
push
adc
push
push
jb
pop
repnz
xchg
rcr
add
mov
dec
xchg
aam
(bad)
push
adc
hlt
push
aas
push
test
mov
xor
push
xor
jns
push
add
daa
clc
fs
movs
addr16
cmp
or
stos
aaa
push
ret
arpl
mov
add
inc
aas
add
cmp
movs
jo
mov
and
push
dec
into
out
or
push
out
jl
dec
iret
and
dec
mov
adc
and
push
sub
ror
pusha
bound
and
test
add
lods
push
jle
mov
or
scas
add
pop
(bad)
pop
lock
mov
shl
push
hlt
jge
test
ret
push
jne
and
add
mov
push
jle
jle
test
inc
sbb
dec
nop
dec
in
push
jge
cmp
push
mov
jge
cmps
or
cmp
sbb
movs
imul
inc
sub
xchg
inc
mov
aam
pop
leave
mov
mov
call
aas
lea
add
sbb
retf
cs
gs
pusha
pop
xchg
dec
clc
jb
inc
rol
(bad)
inc
leave
push
fwait
adc
inc
add
fistp
test
and
add
mov
ins
pop
icebp
sub
cs
ins
cmp
dec
adc
or
jp
push
mov
add
pop
imul
je
inc
jl
in
sbb
cmp
lods
ficom
xchg
mov
add
pop
push
mov
push
mov
or
and
inc
fisttp
cmp
dec
aad
das
push
mov
bound
mov
push
xor
cmp
mov
xchg
clc
clc
or
mov
idiv
sar
test
das
rcl
shr
add
push
shr
adc
xchg
lods
jle
into
test
add
cmps
inc
sbb
and
sbb
sub
or
add
nop
or
dec
push
shl
out
adc
xchg
les
sar
fcomp
popa
sbb
add
(bad)
call
push
dec
sub
dec
test
add
pop
cmp
pop
je
data16
push
sbb
or
jle
jge
(bad)
and
movs
or
sbb
scas
test
push
sahf
popa
leave
loop
push
mov
inc
loop
adc
dec
xor
add
fistp
test
push
jecxz
je
inc
loope
pop
dec
cs
mov
lea
out
fnsave
jns
push
sbb
aaa
ds
or
jmp
add
retf
xchg
sub
jmp
adc
pop
or
or
and
push
call
jmp
aas
shl
popa
fcom
and
es
or
(bad)
out
xchg
(bad)
and
adc
sbb
dec
retf
and
dec
enter
add
je
push
mov
test
movs
(bad)
push
mov
push
sub
cmps
push
pop
add
ss
daa
test
sub
or
jo
cmps
aam
cmp
pop
mov
push
add
test
imul
test
inc
mov
xchg
cmp
rol
mov
push
push
loop
jmp
xchg
and
inc
jmp
mov
ss
aaa
dec
cmp
or
sbb
dec
loop
add
cmp
jbe
jne
stos
and
js
push
inc
jmp
lahf
leave
(bad)
das
scas
push
push
or
je
pop
sbb
cmp
or
inc
mov
mov
dec
es
sub
ror
out
call
jb
cmp
ja
add
cmp
adc
(bad)
cmp
call
loope
and
and
es
clc
adc
(bad)
or
and
mov
rcl
and
dec
mov
push
push
adc
cmp
push
push
push
jo
aam
sub
jne
add
call
mov
jmp
pop
jmp
sub
call
pop
jmp
push
xchg
dec
fs
mov
(bad)
sbb
scas
es
scas
test
or
rcl
mov
push
and
and
xchg
lods
ja
rcr
loopne
sbb
dec
pop
jle
call
leave
inc
xor
inc
and
jmp
mov
cmp
jl
imul
cmp
and
add
add
push
push
cmp
daa
or
rcl
inc
leave
cli
push
jmp
push
mov
iret
and
push
or
jge
fild
mov
(bad)
push
inc
xchg
adc
or
sub
sbb
and
ret
fmul
scas
jmp
mov
add
or
sbb
or
ror
push
jnp
cmp
es
mov
sub
rol
leave
add
mov
in
or
out
mov
sbb
xor
push
adc
mov
or
nop
fldl2e
ror
pop
jo
(bad)
shl
ds
adc
cld
movs
push
lahf
xchg
outs
xor
fimul
scas
push
and
mov
clc
loopne
add
or
pusha
into
push
mov
imul
push
fsubr
pop
mov
int
mov
sub
add
xchg
(bad)
in
add
jp
inc
inc
test
dec
inc
pusha
and
jmp
or
sbb
or
mov
jnp
retf
jmp
inc
jae
popf
adc
and
lods
sub
jbe
sub
cmp
loope
shr
and
aas
sbb
inc
sti
ror
jmp
mov
not
cld
lock
je
pushf
(bad)
mov
or
outs
bound
test
add
mov
inc
call
adc
adc
dec
inc
add
adc
ds
mov
or
dec
pop
adc
and
out
adc
int3
sub
xor
iret
pop
or
mov
xor
test
clc
mov
test
and
inc
dec
popa
fadd
lock
je
in
test
(bad)
inc
pop
lods
add
sbb
jge
rcl
test
add
pop
div
or
cmp
cs
xor
pop
add
test
sub
and
daa
retf
pop
jne
xor
and
sub
sub
loope
arpl
mov
sbb
adc
cmp
stos
ja
and
push
xor
movs
pushf
xchg
loopne
rol
or
imul
pop
clc
sub
add
aaa
icebp
leave
ror
dec
aam
mov
ins
fcomp
pop
icebp
jle
cs
pop
pop
repz
push
ja
(bad)
or
add
test
inc
in
add
add
shl
ffree
nop
loopne
js
add
and
push
popa
fist
pop
test
mov
add
pop
and
inc
cmp
in
movs
cdq
adc
in
fmul
jae
inc
add
and
push
adc
dec
pop
push
and
rcr
in
out
out
rcr
rcl
lock
pop
jbe
mov
clc
jo
cs
push
das
push
and
(bad)
mov
dec
pop
jmp
pop
or
mov
push
mov
cmp
je
push
adc
shr
fst
sub
sub
push
loope
pop
jmp
xchg
push
mov
dec
iret
mov
dec
data16
shl
inc
into
not
inc
shl
cmp
xor
xchg
xor
call
fcomp
jo
loope
aaa
imul
xlat
call
ins
test
fcmovnb
cli
add
pop
mov
outs
pop
ja
mul
ret
push
rol
out
or
sub
adc
mov
or
pop
xchg
inc
daa
push
movs
mov
(bad)
(bad)
fs
jl
mov
sar
sbb
(bad)
mov
sbb
xchg
inc
mov
clc
xor
test
sbb
repz
jp
push
pop
push
(bad)
xor
pop
pop
jmp
movs
dec
lea
lds
enter
lea
xor
js
mov
sub
sbb
inc
dec
mov
pop
nop
xchg
jae
fsubr
lea
mov
not
shr
dec
movs
mov
(bad)
fist
mov
pushw
fdivr
push
js
or
call
push
mov
jne
js
sbb
inc
ins
nop
inc
nop
dec
xchg
test
xor
pushf
iret
clc
fsubrp
and
ins
inc
scas
mov
(bad)
sub
or
push
fidivr
and
and
call
ja
pcmpeqb
add
adc
sbb
xchg
cmp
adc
scas
adc
sbb
and
inc
jl
xchg
xchg
sar
sub
lods
push
and
mov
push
inc
mov
add
mov
fdivr
aas
fidiv
rol
jmp
test
add
and
aam
ret
(bad)
enter
iret
inc
and
mov
inc
or
add
mov
add
xor
clc
pop
push
div
imul
mov
inc
push
stc
enter
sahf
addr16
sar
and
sub
push
adc
cmp
xor
inc
out
add
dec
je
dec
push
jmp
nop
test
cli
push
push
adc
mov
add
adc
and
adc
imul
adc
sbb
(bad)
cmp
imul
lea
dec
popf
movs
or
imul
fadd
test
mov
xor
xchg
neg
aam
or
cmp
test
(bad)
dec
add
call
mov
xchg
add
sti
mov
cmp
push
and
xchg
mov
cwde
cs
shl
(bad)
inc
mov
jle
retf
inc
mov
repnz
adc
shl
in
mov
inc
loop
or
and
das
sbb
(bad)
xor
aam
cmps
das
into
jae
push
repnz
xchg
lock
mov
iret
inc
or
xor
adc
inc
sahf
in
jmp
fld
or
cmp
add
mov
hlt
bound
push
push
jne
rol
xor
adc
rcl
or
fadd
inc
cli
inc
movs
call
enter
jmp
ret
retf
rcr
shl
inc
nop
add
cmp
mov
cld
inc
lods
and
ror
pop
pop
(bad)
jle
cmp
mov
in
xchg
shl
call
xchg
popf
loope
pop
or
and
and
out
xor
push
retf
jae
mov
rol
stc
add
test
mov
jp
test
pop
shr
or
mov
es
xor
int
xchg
sbb
lock
call
stc
repnz
sub
push
test
dec
cli
cli
inc
cli
adc
cmp
adc
movs
repnz
inc
in
call
aad
jge
sbb
mov
adc
fisubr
dec
dec
in
dec
xor
xor
and
or
div
cmps
mov
xor
sbb
dec
sub
stos
imul
test
push
sbb
loop
fwait
push
dec
inc
out
jge
div
sub
xchg
or
or
cmp
lock
mov
daa
adc
inc
push
sub
imul
xchg
sbb
cmp
sub
add
adc
lds
int
inc
sub
inc
dec
cmc
cld
outs
inc
out
mov
lea
push
sar
sahf
inc
stos
loop
or
cmp
sbb
push
jns
and
fnstcw
pop
cmp
mov
cli
mov
sbb
test
cmp
clc
test
sub
aas
sbb
adc
cmp
xor
mov
(bad)
test
nop
das
test
or
or
sbb
and
repnz
and
add
sub
test
fnsetpm(287
push
inc
call
push
arpl
pushf
pusha
mov
fcomp
fisub
je
cwde
sbb
sub
sbb
adc
neg
std
push
inc
mov
arpl
call
pop
mov
call
mov
inc
cdq
and
or
inc
add
in
or
push
dec
sub
fdivr
inc
rcr
shr
adc
mov
xor
fidivr
ds
cmp
imul
mov
dec
addr16
fcom
jo
sbb
lea
push
and
sbb
mov
push
loopne
add
inc
loopne
movs
out
fidivr
add
into
sti
push
add
add
sar
sub
or
xor
sub
into
or
shl
lea
or
sbb
mov
fdivr
pop
add
js
add
jo
scas
jp
lea
sahf
mov
jae
add
or
in
adc
jmp
sbb
test
xor
or
mov
inc
jmp
jmp
cmps
mov
sub
jge
adc
pop
cmc
jmp
cmp
or
add
dec
cmp
or
(bad)
inc
dec
add
add
fadd
dec
jbe
pop
add
sub
ret
jp
inc
lock
jmp
div
int
and
cld
inc
push
add
retf
or
sub
shl
xchg
add
add
xor
neg
mov
or
mov
movs
test
adc
lods
rcl
mov
jmp
add
push
sub
sbb
or
enter
xchg
out
data16
dec
fist
add
or
add
jmp
add
adc
sub
cmp
mov
pop
xlat
and
push
ret
movs
shl
or
jno
(bad)
pop
add
add
pop
(bad)
mov
mov
iret
and
xchg
out
retf
into
pusha
inc
and
sub
and
pop
pop
mov
pop
test
ret
or
add
loope
out
ret
or
or
dec
add
pop
cld
fmul
ret
pop
inc
push
pop
jne
or
or
adc
and
shl
fsub
(bad)
pusha
or
inc
or
mov
(bad)
stc
or
pop
xchg
jne
pop
mov
pop
and
mov
pop
xchg
adc
jne
jl
out
and
mov
jne
cmc
xchg
ror
(bad)
jmp
(bad)
add
ret
or
add
pusha
inc
or
loopne
(bad)
add
sub
mov
add
je
jnp
or
push
xor
or
and
mov
xchg
push
mov
aad
mov
and
push
and
add
add
scas
push
test
daa
pop
lock
bound
int
jnp
cdq
ss
or
add
or
mov
add
add
jbe
mov
pusha
cmps
retf
je
and
sbb
inc
cmp
jns
jg
into
into
into
xor
or
loopne
mov
pop
or
(bad)
shl
cmp
jl
or
add
shl
(bad)
or
inc
cmp
lds
cld
inc
clc
xchg
ins
fs
adc
push
pop
call
sahf
pop
pop
and
lahf
pop
mov
jns
add
or
mov
test
adc
in
test
inc
call
and
inc
call
or
rol
mov
mov
retf
push
add
pop
scas
push
out
out
(bad)
pop
mov
shr
or
out
adc
or
jno
push
call
sub
cmps
fistp
xor
adc
sub
lods
push
mov
sbb
jne
lahf
dec
cmp
lods
cli
jo
mov
retf
sub
cs
mov
test
push
das
lods
sbb
adc
add
rcr
test
jmp
and
cmp
test
and
sbb
add
inc
aaa
push
lds
add
loope
pop
ror
push
jmp
add
inc
xlat
cmp
push
or
or
cmp
xchg
mov
xchg
ret
dec
or
ror
xor
test
leave
inc
movs
pop
mov
add
cmp
ror
dec
inc
or
popf
test
enter
mov
inc
fnstsw
loop
cmp
adc
je
mov
retf
sbb
adc
nop
and
pop
push
pusha
pop
dec
loope
mov
inc
nop
clc
mov
ret
es
jl
nop
or
cmps
cmp
ror
xchg
fiadd
jmp
xchg
mov
mov
cmps
inc
ja
scas
add
syscall
dec
add
inc
js
adc
inc
jmp
push
dec
test
(bad)
fbld
mov
mov
clc
jl
test
add
scas
or
xchg
mov
loopne
ret
jmp
pop
add
or
fild
mov
sbb
add
lock
jns
loopne
imul
xchg
ret
sbb
or
out
mov
cld
mov
loopne
and
and
pusha
mov
adc
and
xor
cmps
jbe
mov
add
adc
mov
pop
cmps
pop
cmp
stos
test
sbb
(bad)
cld
adc
pushf
cwde
or
enter
imul
clc
fs
push
(bad)
dec
mov
ss
daa
and
mov
(bad)
jbe
adc
adc
mov
js
and
adc
inc
xor
fld
jo
xor
and
loopne
dec
rcr
xor
cmp
cmps
pop
sbb
add
inc
and
mov
mov
mov
adc
retf
fcomp
mov
inc
int3
jecxz
dec
call
adc
push
lock
inc
aam
inc
inc
add
ja
sub
push
mov
inc
cmp
xor
ret
bound
(bad)
jns
sub
xor
add
ins
jmp
mov
outs
jo
or
pusha
imul
pop
shl
or
mov
inc
cdq
das
push
xor
je
jo
push
or
jl
sbb
imul
cmp
sbb
fsubrp
sub
mov
and
push
dec
call
pop
cs
sub
xor
jle
aas
and
mov
mov
fs
int
adc
mov
sbb
pop
js
cmp
js
test
add
jge
dec
adc
pop
sbb
xlat
cwde
out
cld
mov
sbb
dec
rcr
cmp
mov
je
fistp
or
cmp
add
in
adc
dec
add
mov
sub
rcr
inc
shl
jmp
push
pop
(bad)
cmp
sbb
add
call
adc
lock
fadd
dec
cmp
mov
loope
aas
mov
ror
cmp
mov
inc
test
push
popa
test
xor
movs
xchg
push
es
std
(bad)
das
in
and
fs
add
inc
cmp
inc
mov
pop
gs
lods
push
adc
lock
sub
movs
fwait
adc
mov
popa
or
stc
addr16
movs
dec
dec
xchg
adc
aam
dec
call
inc
adc
loop
xor
push
xor
inc
ret
sbb
outs
mov
repnz
add
in
ins
or
test
or
sti
push
ror
fild
je
cmp
cmp
mov
and
mov
or
dec
mov
adc
xor
inc
cmp
or
jae
mov
push
imul
mov
cmp
xor
adc
xor
sbb
or
jl
test
mov
xchg
push
push
mov
mov
addr16
sbb
sub
and
cmp
in
cmp
in
inc
cmp
mov
mov
mul
adc
and
out
push
and
inc
sbb
xor
inc
xchg
xchg
pusha
inc
or
(bad)
sub
and
js
mov
sbb
push
mov
jae
mov
adc
stc
xchg
lock
leave
loop
or
xor
xchg
jmp
or
push
inc
ror
xor
sub
or
sbb
cmp
jle
push
cwde
push
stos
outs
(bad)
add
add
sbb
pop
adc
adc
daa
jmp
shl
rcl
pop
fisttp
dec
jbe
and
push
push
mov
add
pop
jl
call
xchg
inc
xchg
imul
xchg
or
les
add
push
add
(bad)
jecxz
call
or
sar
popa
push
add
mov
fnop
rcr
nop
or
inc
add
inc
cdq
dec
and
jo
inc
jb
jne
jb
out
fcomp
out
loopne
jecxz
loope
fmul
xor
aaa
mov
sbb
outs
ds
les
xor
jns
adc
push
or
sbb
pop
jno
xor
xor
or
push
sbb
inc
cld
cmp
jg
(bad)
dec
shl
int3
out
cli
add
js
pusha
in
pushf
xor
ins
aam
mov
cmps
jmp
sbb
cmps
and
loopne
fcomp
pop
mov
daa
test
push
rcl
cmp
mov
mov
pop
cmp
fwait
and
jge
push
jg
mov
stos
cmp
lods
sbb
or
jno
div
loopne
jmp
push
pop
in
dec
sar
push
or
dec
or
pushf
or
test
and
mov
inc
inc
dec
add
test
test
xchg
inc
xchg
rol
out
mov
cwde
or
or
loope
rol
inc
shl
or
adc
fdivr
push
sbb
pop
je
(bad)
cmp
stos
cdq
aam
test
push
addr16
fidiv
aaa
or
neg
pushf
cmp
add
popa
xchg
cs
push
mov
sbb
enter
jmp
outs
sub
lahf
test
iret
fdiv
pop
add
sub
xchg
jp
lods
xor
add
or
movs
test
hlt
repnz
shr
dec
cmp
mov
lea
cmp
pop
push
repnz
dec
add
xor
add
pop
or
add
jno
push
add
xor
adc
cs
sub
adc
add
push
jne
or
mov
push
les
pushf
xor
cli
retf
ins
arpl
mov
mov
call
jns
xchg
sbb
mov
add
push
xchg
add
xchg
test
cmc
or
sub
and
aas
jmp
in
xchg
js
add
adc
hlt
push
dec
lods
sbb
stos
jne
sahf
adc
dec
hlt
jae
xchg
mov
js
cmp
jl
xchg
mov
xchg
push
cmp
loopne
and
lock
jne
add
pop
lods
push
mov
pop
cmp
mov
loop
jge
popf
fcmovb
mov
retf
das
or
mov
add
outs
push
mov
push
popa
retf
mov
push
aad
sbb
jl
enter
fstsw
mov
and
ins
sbb
add
pop
ins
cdq
jmp
das
or
adc
pusha
pop
or
loopne
and
ds
mov
or
mov
jbe
std
(bad)
sar
hlt
jne
adc
fstp
or
push
aad
xchg
sbb
and
add
fs
pop
xchg
cs
sbb
mov
and
cmp
dec
add
xlat
inc
lea
rcl
shl
jne
loope
adc
scas
mov
dec
mov
or
dec
inc
sbb
sub
sbb
inc
mov
add
imul
mov
pop
jecxz
add
pop
scas
test
and
add
mov
add
push
adc
pop
push
cmp
adc
outs
cld
cdq
jle
out
dec
sub
or
and
jbe
ret
test
jno
fcmovnbe
mov
dec
jg
adc
or
fstp
jmp
adc
xchg
hlt
inc
mov
pop
push
ret
pop
hlt
xor
mov
push
mov
and
adc
ror
xor
push
push
or
scas
gs
mov
aaa
pop
pushf
and
inc
xor
add
jae
mov
or
xor
mov
sbb
jns
inc
bound
pop
mov
test
cmps
adc
test
inc
rol
mov
stc
pop
cmp
ins
and
inc
test
pushf
mov
rcl
aaa
pusha
jns
rcr
cs
mov
mov
and
adc
xlat
dec
rol
mov
das
xor
nop
and
inc
or
inc
and
xor
js
cdq
test
mov
push
adc
jge
push
rcr
add
push
sbb
je
cmp
lock
jns
jb
cmp
jbe
push
es
das
test
or
clc
ret
or
push
out
sbb
shl
jmp
das
xor
pop
add
pop
(bad)
jg
cmp
ins
call
push
lds
push
pop
xor
dec
shr
dec
mov
pop
rol
pop
jmp
jne
js
or
inc
outs
xchg
je
leave
jmp
xor
and
mov
mov
rcl
jle
shl
mov
adc
inc
and
pop
dec
cdq
cmp
ret
xor
jo
cmp
scas
out
mov
push
dec
pop
inc
adc
cld
xchg
(bad)
jmp
mov
cmp
ins
dec
or
jp
test
xchg
div
push
dec
pop
test
pop
inc
dec
test
stc
add
jbe
or
inc
call
xchg
fnstsw
aad
pop
inc
pop
scas
adc
fldz
(bad)
shl
add
push
mov
fcom
or
adc
aas
xchg
div
add
je
ja
inc
and
sbb
fst
push
hlt
mov
pop
lea
into
movs
(bad)
pop
dec
enter
add
call
inc
mov
jecxz
cdq
cmp
ret
xor
cmps
test
out
sub
or
dec
mov
add
adc
outs
add
dec
pop
arpl
sub
repz
inc
mov
sub
popf
lods
mov
or
push
(bad)
or
fild
jmp
faddp
sbb
jns
push
lock
pop
mov
xchg
cmp
push
inc
or
fsub
in
xchg
in
shl
inc
adc
bound
jne
sub
cmps
ret
jecxz
int3
push
dec
pop
fsave
data16
(bad)
mov
popa
adc
adc
test
(bad)
jmp
mov
jno
scas
test
push
popf
mov
je
mov
shr
neg
call
(bad)
push
adc
loope
outs
or
je
mov
ror
mov
(bad)
and
cmp
mov
fld1
adc
ror
sub
mov
bound
pop
adc
pusha
mov
cmp
in
out
lock
jne
fcomp
fcompp
daa
add
and
sub
ret
ins
xor
loopne
nop
je
icebp
in
xor
clc
shr
leave
ret
aaa
adc
jo
or
sub
cmps
je
pop
lods
push
jecxz
and
lods
push
mov
fistp
sbb
adc
sar
fstp
adc
xor
cwde
inc
shl
dec
jmp
cmp
fcomp
push
mov
test
mov
mov
cmps
pop
leave
test
pop
pusha
sub
pop
test
retf
push
push
add
hlt
xchg
push
sar
mov
rcl
cmps
jnp
xor
xor
add
inc
cs
clc
jmp
mov
dec
lock
pushf
xchg
fisttp
sub
mov
jmp
push
xchg
cmps
rol
leave
push
aam
xlat
sar
inc
add
je
movs
out
arpl
(bad)
and
sbb
inc
test
in
inc
mov
cmp
pushf
hlt
sbb
sbb
jb
or
dec
xor
stos
dec
test
inc
jo
mov
sbb
test
mov
lods
and
dec
inc
and
js
ins
xchg
fild
mov
or
addr16
jb
adc
test
je
add
pop
and
and
sbb
sbb
sbb
outs
jge
not
or
shr
scas
or
fild
adc
ret
xor
lock
pop
add
shl
dec
push
hlt
mov
or
sbb
lock
mov
sbb
fs
ret
mov
or
add
call
push
push
dec
or
shl
jne
jnp
(bad)
sub
rol
mov
pop
inc
movs
and
les
repz
pop
fwait
push
jmp
ins
add
hlt
xchg
dec
add
jnp
aad
out
imul
stos
push
xchg
xchg
lock
enter
outs
fld
add
jne
mov
fist
sub
add
jne
sub
push
or
leave
outs
sbb
dec
or
test
lods
xchg
int3
lock
mov
ret
push
or
in
mov
(bad)
inc
push
fsubr
mov
or
sub
vfnmadd213ps
xchg
adc
test
dec
cmp
fcom
cmp
rol
mov
loop
pop
(bad)
xchg
add
fwait
lea
into
jle
mov
data16
xor
mov
cli
out
push
or
xor
ret
dec
test
arpl
mov
movs
jno
dec
push
cli
sar
shr
shr
clc
ret
adc
ret
loope
jb
jb
ror
push
jb
jb
or
rol
or
mov
leave
add
call
les
dec
adc
adc
loopne
movsd
pusha
sub
out
int3
add
push
cli
adc
add
ins
and
(bad)
jp
pop
cmp
jo
shr
rol
aas
fild
rcl
jp
mov
push
cmp
jmp
mov
dec
sbb
arpl
out
mov
inc
test
retf
int
cvtdq2pd
dec
mov
(bad)
push
and
cmp
sbb
lock
pop
xchg
jl
cmp
sahf
rcl
pop
mov
add
add
mov
jbe
dec
add
movs
(bad)
adc
adc
div
fnsave
lds
mov
jnp
jns
stos
fadd
push
int
ror
in
xchg
shl
mov
ds
rol
rol
(bad)
cld
sbb
xchg
(bad)
aam
out
(bad)
push
cmps
pop
repnz
jmp
pusha
in
into
inc
add
call
inc
or
shr
ret
push
test
in
mov
out
(bad)
and
call
push
sar
sar
hlt
push
sbb
out
addr16
xor
loope
sub
ins
iret
or
jo
out
adc
(bad)
add
loope
sub
test
ja
js
inc
loope
or
cmps
sar
push
pop
xlat
in
cmps
js
pop
inc
js
aam
in
repz
jno
xor
in
rol
jo
(bad)
mov
mov
cli
add
fbstp
mov
(bad)
in
sub
out
leave
inc
pushf
cmp
(bad)
lds
(bad)
ja
fcomp
loopne
sar
xchg
push
jns
clc
ret
fdiv
(bad)
adc
repz
xchg
jnp
jecxz
mov
push
les
adc
ret
fisttp
jbe
(bad)
jle
dec
adc
retf
adc
and
leave
fst
adc
sbb
push
data16
ret
and
lea
push
fiadd
xor
imul
fst
cli
mov
fisttp
out
repz
rcl
ret
aaa
xchg
je
call
addr16
int3
mov
add
ret
or
cmp
hlt
stos
or
js
or
xor
pop
fsub
mov
xchg
mov
mov
xlat
jnp
int
mov
add
jbe
scas
adc
jl
or
outs
fst
cld
xlat
pop
inc
clc
rcr
jge
or
leave
xchg
add
xchg
jl
stc
rcl
xchg
mov
pop
sar
xor
push
les
jns
loopne
je
jno
add
add
loopne
add
jg
(bad)
xchg
add
les
pushf
ins
or
jne
jmp
(bad)
shl
and
mov
mov
lock
out
addr16
sbb
pop
call
popf
addr16
arpl
leave
loopne
fmul
ins
ret
inc
sub
push
add
ds
and
sub
stc
dec
add
jne
mov
je
xor
scas
add
int
frstor
fisttp
(bad)
loopne
or
rcl
sub
mov
adc
mov
sbb
cmp
addr16
iret
or
stc
jnp
mov
popf
enter
adc
sbb
ret
jmp
xchg
fcmovb
(bad)
or
sbb
loop
lock
aad
ja
lds
mov
ret
mov
jne
faddp
add
jmp
or
lahf
aam
add
dec
les
movs
pushf
pop
cmp
jae
mov
rcr
ret
cmps
xchg
popa
push
dec
mov
lea
sbb
cmp
imul
and
push
clc
pop
ja
outs
push
add
jmp
pop
out
pop
inc
(bad)
fdivr
rol
or
dec
push
mov
loop
ja
sbb
inc
sub
push
mov
ins
jmp
dec
add
dec
mov
add
cdq
sub
les
sbb
(bad)
call
out
jp
cmp
test
dec
aas
xchg
hlt
or
neg
lahf
add
adc
shl
xlat
stc
rol
lods
mov
stos
inc
jp
adc
stc
cmp
imul
mov
js
xchg
test
mov
loopne
mov
push
mul
loop
fnstcw
cmp
test
pop
mov
ja
push
jg
pop
rol
iret
and
dec
(bad)
cmp
lock
(bad)
sar
adc
jbe
cmp
add
pop
mov
xchg
dec
push
enter
mov
ror
xor
lahf
push
mov
outs
xchg
push
fstp
pop
call
sbb
and
loope
out
or
sbb
fisubr
and
dec
add
enter
pop
aam
ror
add
shl
ret
sub
arpl
inc
jp
(bad)
fsin
or
jne
fxch
fyl2x
jmp
jl
mov
and
in
fldl2e
fmulp
je
sub
(bad)
popa
sub
sbb
std
data16
mov
aam
ins
or
ss
dec
and
not
cwde
loope
scas
mov
aam
cmp
or
add
sbb
out
ret
fldln2
inc
in
fnsave
fwait
mov
inc
jne
push
ret
inc
popa
sbb
or
cmp
pop
ret
mov
inc
mov
mov
push
xchg
loopne
adc
jl
sub
in
in
jmp
or
cmp
or
push
lock
push
or
xchg
add
xor
scas
daa
ret
pushf
cli
mov
push
adc
mov
fisttp
xchg
sahf
fsub
daa
jbe
lock
les
sbb
pop
and
mov
cwde
inc
pop
je
dec
push
cdq
clc
rcr
inc
mov
push
push
hlt
or
pop
jbe
or
add
and
push
mov
jmp
push
xchg
ret
mov
adc
popf
pop
rcr
mov
out
mov
jmp
mov
popf
pop
sub
or
ror
jecxz
add
dec
shl
sar
rol
mov
and
xlat
pusha
pusha
gs
aam
loope
clc
aad
dec
mov
mov
pop
push
iret
cmp
and
stc
mov
std
rol
mov
mov
or
jae
or
pop
call
dec
sub
test
xchg
fstp
or
sahf
test
pop
data16
jmp
add
test
mov
fist
pop
jl
or
test
jnp
scas
cmp
push
pop
push
push
adc
(bad)
loopne
and
fsub
lods
inc
or
mov
ficom
inc
(bad)
mov
mov
fs
enter
adc
add
ins
or
adc
push
ror
fstp
ret
mov
add
retf
sbb
fldcw
test
nop
call
mov
cmps
or
inc
xchg
fld
and
cmp
or
je
adc
pop
jmp
imul
and
sub
les
test
jl
pusha
mov
or
and
push
outs
add
ret
in
cmp
xchg
push
push
bound
or
shl
ret
dec
push
gs
push
mov
stos
jmp
daa
mov
ins
jbe
cmp
jne
cmp
test
dec
mov
leave
lods
fld
int3
outs
adc
mov
in
and
push
test
inc
mov
mov
add
or
movs
xchg
mov
sti
xchg
sbb
jg
mov
test
jne
and
jnp
pop
pop
xor
push
xchg
dec
mov
jnp
sahf
mov
mov
mov
mov
mov
pop
mov
jp
das
sub
sbb
rcr
pop
fsubr
mov
lahf
push
mov
in
into
jmp
cmp
inc
pop
stos
dec
sub
or
add
es
or
or
nop
push
sbb
mov
jmp
jge
fsub
mov
lahf
call
adc
jmp
out
push
push
jle
and
jb
pop
pop
mov
xor
or
adc
jp
outs
sbb
ds
shr
mov
js
and
push
inc
js
xchg
adc
pop
add
sub
(bad)
dec
je
add
and
dec
cmps
popa
adc
movs
test
pop
clc
add
(bad)
cmp
push
mov
mov
in
mov
pop
adc
aaa
mov
or
push
lea
push
inc
dec
pop
mov
xchg
adc
dec
adc
call
push
push
mov
xor
arpl
sbb
loope
cmp
ret
mov
add
out
popa
push
cmp
adc
scas
mov
das
adc
pop
js
test
or
sub
push
lods
dec
rol
sub
shr
mov
inc
inc
and
mov
dec
in
icebp
cmp
jae
xor
pause
ds
leave
and
dec
add
lock
mov
dec
mov
add
mov
mov
movs
and
cld
test
mov
dec
leave
add
adc
les
leave
mov
mov
aas
in
push
sar
pop
in
pop
xchg
xchg
dec
mov
cs
aas
stc
inc
jne
mov
je
(bad)
add
pushf
inc
adc
sbb
adc
adc
stc
cmp
adc
push
cmp
enter
jne
shl
push
pop
imul
test
ss
inc
pop
add
inc
cmps
movs
ins
pop
nop
cmp
rol
add
dec
cli
cwde
scas
dec
adc
jg
pop
les
call
lock
lahf
sti
dec
pop
scas
pop
rol
aas
pop
fmul
inc
sar
fadd
jnp
scas
aam
in
fwait
nop
sub
shr
adc
dec
pop
call
leave
and
adc
cwde
or
or
dec
pop
push
cld
push
and
leave
adc
pop
lods
test
rcl
shr
in
lahf
inc
imul
mov
lahf
push
mov
rcr
adc
lahf
in
dec
lds
(bad)
xor
pop
fsub
cmp
(bad)
add
lahf
push
stos
cld
cdq
(bad)
xchg
inc
cmps
mov
pop
mov
mov
jl
retf
adc
std
and
cld
sbb
add
(bad)
push
xor
(bad)
clc
mov
push
or
enter
sub
cld
outs
jl
imul
pop
scas
call
mov
add
gs
sbb
mov
mov
cmp
inc
xchg
scas
push
add
push
rol
popf
adc
pushf
test
add
and
and
cmp
cwde
xlat
cmps
loope
shl
xchg
sbb
pop
inc
enter
(bad)
sub
movs
scas
inc
loopne
dec
jnp
inc
xchg
pop
clc
add
pop
pop
fmul
iret
in
inc
ins
jne
fistp
dec
mov
and
or
in
mov
jo
mov
int3
fisttp
xlat
cmps
fcomp
into
inc
cmps
or
add
adc
scas
jl
test
push
ds
lea
imul
sub
or
adc
or
in
inc
call
mov
mov
lods
add
add
pop
jb
imul
push
fsubr
xchg
dec
add
and
fcmovb
add
mov
add
add
pop
loopne
dec
xchg
jg
fadd
aas
push
or
lock
and
sbb
inc
mov
ret
add
clc
mov
or
push
add
repnz
jge
xor
push
mov
ja
test
int
add
xor
loop
jbe
scas
data16
sbb
add
xor
add
cwde
dec
popa
dec
outs
and
(bad)
jle
or
push
mov
dec
call
sub
ins
fdivr
push
pop
aam
and
loope
pop
pop
leave
xchg
aad
pop
sbb
jecxz
dec
fild
retf
add
adc
cmp
push
pushf
gs
test
mov
outs
lahf
hlt
pop
test
and
aam
mov
pushf
outs
or
call
cs
or
pop
arpl
gs
inc
jne
mov
in
mov
or
adc
push
or
or
pop
test
(bad)
dec
lods
scas
lea
pushf
jge
fidiv
fisttp
dec
outs
pop
in
mov
mov
mov
dec
cmovl
push
call
sub
push
inc
test
mov
jge
adc
cmps
fisttp
sbb
stos
cwde
inc
mov
jo
nop
out
in
in
xchg
in
mov
sbb
adc
xchg
pushf
arpl
push
shl
or
pop
xor
or
inc
or
jp
rol
je
adc
mov
call
(bad)
mov
mov
xchg
push
js
rcr
cld
dec
fs
fsub
fcom
or
or
or
pop
jo
xor
jne
add
or
cmps
mov
or
aad
ficomp
jne
sub
call
push
in
sbb
fcmovb
jo
dec
hlt
dec
push
xor
dec
aas
lock
inc
aaa
pop
outs
js
xor
mov
dec
movs
call
add
(bad)
pop
adc
aas
(bad)
dec
bnd
lahf
imul
test
adc
pop
and
sbb
shl
mov
push
icebp
lahf
shr
mov
pusha
enter
retf
pop
push
test
bswap
sbb
lahf
lahf
inc
lds
in
dec
pop
imul
add
pop
sbb
adc
sti
adc
loopne
inc
lea
pop
rcl
in
mov
add
adc
sbb
or
int3
mov
sbb
inc
lods
add
out
mov
xor
pop
(bad)
mov
add
fild
mov
xor
scas
push
jne
int3
jb
call
and
adc
or
lods
enter
maxps
mov
call
pushf
and
sub
bound
dec
es
lahf
mov
nop
call
dec
repnz
adc
and
pusha
jl
and
xchg
cli
mov
in
pop
call
pusha
and
pushf
ror
in
inc
in
lea
xchg
outs
(bad)
mov
(bad)
ja
and
lea
dec
outs
adc
mov
mov
out
mov
ror
jcxz
and
(bad)
stc
adc
sbb
fwait
mov
xor
and
cmp
inc
fidiv
mov
ficomp
pop
cmp
jecxz
das
pusha
test
and
shl
dec
call
pop
fst
rcr
pop
sbb
mov
xchg
sub
pusha
jg
and
lock
add
xor
fcomp
aaa
dec
push
inc
mov
mov
and
outs
retf
sbb
xor
lods
xchg
sbb
sbb
fild
mov
mov
adc
inc
add
sbb
mov
adc
das
and
or
mov
rcr
xor
xchg
and
call
fbstp
inc
sbb
fist
push
nop
arpl
mov
or
or
cmps
inc
scas
leave
sbb
mov
jb
sbb
cmp
sub
movs
push
mov
leave
sbb
lahf
fsubr
lds
jg
sub
pop
push
ins
fadd
aaa
dec
popa
sbb
jl
stos
leave
mov
hlt
stos
xchg
fist
loope
sbb
pop
push
push
dec
pop
mov
or
push
lods
pop
int3
sbb
add
les
push
sub
push
and
fcomp
test
inc
xor
inc
jg
jl
es
call
aam
sub
or
adc
je
jne
stos
xchg
pop
push
dec
adc
les
xchg
lahf
adc
aaa
and
and
(bad)
movs
mov
mov
add
pop
dec
add
jns
and
push
pop
ret
add
mov
jno
pop
lock
and
movs
or
in
push
mov
mov
imul
lahf
pop
or
inc
xor
mov
mov
ret
and
adc
add
xchg
arpl
xor
mov
fstp
sub
pop
cmp
add
pop
add
loop
dec
aas
cmp
punpckhbw
xor
dec
jo
pop
mov
test
add
or
gs
pop
cmp
mov
push
push
jo
rdpmc
popa
cmp
sub
adc
mov
ret
sbb
xor
xchg
mov
inc
pop
ret
sbb
ja
mov
jbe
add
cdq
fadd
mov
nop
sbb
sub
jno
and
test
push
dec
adc
enter
xor
imul
and
js
jle
dec
xor
push
cmp
fimul
and
(bad)
mov
or
pusha
in
(bad)
sub
inc
or
or
pop
in
pop
and
lods
imul
sub
hlt
outs
sbb
call
les
push
and
sub
push
sub
jne
pop
cwde
pushf
pushf
mov
sub
nop
push
popa
xchg
mov
sub
sub
sub
mov
shl
rol
inc
leave
lods
leave
sub
mov
or
jbe
js
mov
das
or
add
sahf
mov
(bad)
cwde
(bad)
sub
enter
aas
sub
aaa
or
fbstp
and
dec
adc
mov
cwde
jmp
push
pop
jo
or
mov
xchg
or
sub
pop
shr
add
sbb
sbb
sub
addr16
test
dec
sub
nop
inc
hlt
lock
add
std
adc
sub
xor
adc
mov
rcr
mov
xchg
leave
mov
pop
call
aad
outs
clc
jg
sub
iret
sub
xchg
shl
sub
add
cmp
sbb
push
nop
in
fisttp
or
or
jge
and
cmp
push
fild
adc
imul
cmp
lods
cdq
mov
lea
sbb
mov
int3
inc
sbb
xchg
jmp
shl
mov
lock
shl
xor
loope
adc
enter
lock
push
sub
add
pop
dec
int
xchg
shld
push
pop
and
mov
or
ror
loope
das
adc
inc
repnz
fild
cmp
lock
xor
lock
or
gs
ss
shr
adc
int3
add
push
pushf
in
inc
(bad)
in
dec
jmp
pop
loopne
cmps
or
stc
adc
leave
sub
ret
fsubr
mov
fisub
or
cld
xchg
sub
in
dec
sti
and
enter
mov
xor
mov
sub
je
xchg
or
test
jbe
mov
mov
mov
dec
sub
jmp
pop
in
pop
mov
and
jo
push
(bad)
cmp
fistp
cmp
scas
mov
xor
aas
in
aas
xchg
mov
ror
(bad)
lock
fmul
cwde
lahf
xor
pusha
push
psubsb
mov
push
adc
pop
xor
sbb
in
jmp
inc
sub
xor
or
xor
enter
call
and
push
enter
push
cmp
sub
iret
add
dec
pop
adc
mov
loope
call
and
stos
xor
pop
in
idiv
xor
dec
jle
rcr
mov
repnz
mov
pop
xor
add
fistp
jns
and
aam
imul
ds
push
add
enter
xchg
adc
fimul
in
mov
fistp
std
lods
jo
and
or
sub
pop
xor
mov
in
dec
adc
xor
add
xor
sbb
(bad)
push
fbstp
sbb
inc
clc
ret
mov
pop
ss
pop
in
cmp
ss
ror
pcmpeqw
dec
ss
jg
in
rol
bound
jmp
or
or
jne
push
cmp
sbb
mov
mov
rol
mov
ret
pop
cmp
jbe
mov
lock
sbb
call
not
mov
lea
not
call
pop
nop
and
xor
and
leave
and
xor
jns
xor
loope
mov
sub
mov
xor
repz
mov
imul
cmp
adc
or
rcl
movs
imul
inc
push
pushf
stc
cmp
rol
mov
rcl
push
in
push
retw
inc
mov
mov
jg
cmp
sub
loope
outs
cmp
test
inc
or
pop
cmp
out
arpl
iret
adc
jne
retf
sbb
push
sub
mov
outs
inc
enter
movs
pop
jno
jle
cwde
sbb
test
int3
add
jg
inc
adc
add
xchg
cmp
call
pcmpeqd
add
and
cmp
stos
jl
sbb
sbb
ret
inc
add
in
add
jno
dec
ficom
adc
xchg
inc
mov
jnp
shl
jno
jo
retf
movs
sbb
xlat
fsubr
push
jl
add
jle
add
loope
das
sub
and
mov
test
gs
mov
cwde
and
cmp
push
cwde
or
or
aas
sub
cmp
sub
fisub
adc
mov
cmp
je
mov
mov
int3
or
mov
mov
mov
ret
cmps
mov
push
jmp
out
dec
cmp
sub
dec
mov
retf
dec
cmc
cmp
or
not
xor
xor
sub
dec
push
cmp
or
mov
nop
out
and
jo
ret
cmp
add
push
(bad)
cmp
cmp
ds
mov
or
dec
xor
xchg
movs
mov
xor
or
add
mov
mov
stos
test
aas
mov
lahf
iret
cvtpi2ps
hlt
sub
and
cs
repnz
push
inc
lods
jg
aad
or
sbb
stos
or
mov
push
add
pop
xchg
push
cdq
push
daa
jne
cmp
sbb
sbb
repnz
jbe
inc
sbb
push
movs
js
mov
in
push
int3
call
push
or
sbb
aaa
cmp
cmp
mov
nop
add
out
das
sbb
jbe
stc
in
lock
pop
mov
hlt
sbb
dec
(bad)
xor
and
dec
jb
or
inc
sbb
dec
inc
adc
jb
mov
sbb
lahf
dec
inc
sbb
xchg
mov
jmp
jb
mov
call
cmp
sbb
pop
mov
jg
sub
nop
inc
dec
outs
aad
inc
loopne
outs
in
lea
or
inc
xor
pop
movs
mov
adc
mov
fs
jbe
sbb
push
imul
adc
je
inc
mov
mov
mov
lods
(bad)
(bad)
mov
imul
add
dec
dec
sar
or
sbb
sub
or
sbb
test
es
push
lahf
call
nop
stos
mov
inc
dec
inc
hlt
adc
fmul
mov
dec
pop
adc
mov
mov
fadd
dec
mov
inc
sub
xlat
push
fcos
add
int3
pop
cwde
scas
pop
ror
lock
aas
or
push
out
mov
out
(bad)
add
mov
outs
pushf
movs
adc
mov
out
sub
and
dec
int3
jl
out
imul
cs
js
aaa
or
mov
mov
pop
(bad)
push
xchg
ret
inc
add
sbb
or
and
fbstp
sub
leave
inc
and
pop
out
sub
out
mov
pop
mov
inc
ins
out
push
and
mov
cmp
in
movzx
sbb
aam
push
inc
mov
xchg
mov
fbld
dec
adc
jecxz
add
and
in
jo
adc
pop
sub
adc
pop
aas
mov
(bad)
pusha
mov
sbb
popa
shr
or
rol
outs
ret
dec
add
pop
pop
adc
ss
popf
push
adc
cmps
jecxz
sbb
dec
std
pop
push
and
dec
std
dec
mov
mov
adc
nop
xchg
inc
add
cmp
cmp
rcr
adc
(bad)
cli
ret
pop
leave
add
shl
(bad)
dec
jne
inc
enter
mov
pop
cmp
jmp
stos
movs
lahf
iret
pop
or
fs
lods
sub
and
add
cs
test
xor
mov
push
push
add
dec
les
dec
push
fcom
clc
and
sub
shl
dec
or
iret
aam
mov
mov
xchg
sub
xchg
shr
setg
pop
ficom
adc
and
dec
jmp
je
adc
popa
fstp
in
add
int3
sub
loopne
popa
in
xor
call
cmp
dec
loopne
pop
dec
enter
adc
sbb
pushf
inc
xchg
sbb
ds
dec
je
ficomp
mov
pop
and
push
pusha
xor
add
pop
fcom
jbe
adc
scas
sbb
sub
sub
push
or
dec
sub
xchg
nop
xchg
fnsetpm(287
paddq
dec
dec
ficomp
shl
mov
mov
dec
idiv
aam
nop
and
xchg
nop
std
dec
xor
push
nop
sub
popa
jl
push
and
adc
push
call
sbb
pushf
ret
ja
mov
or
cwde
jmp
mov
xor
aas
pop
clc
pop
in
lods
in
pop
or
xchg
push
sub
xchg
mov
jg
mov
aas
call
aas
outs
in
in
cmp
fsubr
fistp
pop
in
(bad)
sub
sbb
adc
push
sub
pop
jo
rcl
in
xor
or
jne
mov
add
lahf
aaa
(bad)
push
add
or
cwde
outs
popf
ret
addr16
push
hlt
movs
push
stc
xchg
cli
jb
leave
and
stos
mov
sbb
mov
xchg
jecxz
push
aam
sub
sbb
sbb
out
out
jg
xor
in
pop
push
sbb
fs
and
jl
punpckhwd
push
pusha
and
dec
std
push
pop
or
test
cmp
sbb
mov
mov
cmp
or
dec
push
fild
mov
je
iret
push
ins
in
mov
sbb
xchg
push
fs
dec
bound
add
rcl
aas
out
or
pop
shr
or
les
stos
inc
out
ror
xor
nop
in
out
mov
cmp
leave
dec
jns
add
iret
fcomp
pushf
lahf
fcom
mov
aam
dec
pop
and
push
mov
shl
fist
fnop
shld
dec
push
pop
push
pop
fdivp
in
push
xchg
les
mov
stos
(bad)
sub
ds
call
rcr
mov
and
and
push
and
shl
fsubr
inc
fdivr
xchg
test
shr
jg
add
pop
mov
das
push
mov
xor
cs
adc
(bad)
fisubr
dec
push
in
dec
dec
dec
int3
call
mov
jg
push
(bad)
rcr
mov
mov
push
pop
pop
call
dec
jg
push
sub
dec
scas
pop
mov
and
iret
pop
test
push
(bad)
jg
aas
mov
xchg
icebp
pop
jl
inc
xchg
or
cmp
and
sti
xor
inc
or
sub
lahf
das
xchg
xor
bound
inc
xor
pushf
test
and
inc
xchg
inc
outs
pop
pop
add
sub
jg
push
or
dec
int
add
sub
adc
aas
cmp
or
int3
test
mov
shl
call
pop
enter
outs
pop
aad
ins
das
ins
pop
les
sub
dec
pop
inc
imul
repnz
and
pop
or
and
inc
pop
sbb
inc
xor
mov
adc
inc
dec
stos
mov
and
push
mul
iret
sbb
pop
adc
adc
jb
mov
and
add
pop
jg
sbb
punpckldq
iret
hlt
lahf
icebp
adc
ins
add
pusha
mov
paddq
enter
sub
es
les
pop
inc
enter
popa
sub
test
add
push
lahf
inc
je
test
and
pop
cmps
or
dec
call
adc
dec
jno
xor
adc
fistp
lock
pop
pop
push
push
fwait
(bad)
iret
bound
push
xchg
jg
pop
mov
lahf
dec
sub
repnz
add
pop
lock
lahf
or
(bad)
add
arpl
mov
xchg
inc
je
dec
xchg
add
or
jl
push
call
and
enter
arpl
lea
cmp
(bad)
cmp
xchg
push
movs
cs
pop
sbb
mul
cmc
cmp
or
xchg
push
lock
push
sub
iret
push
push
fdivr
(bad)
fdivr
(bad)
rol
adc
mov
loope
ror
mov
inc
js
aas
pop
lahf
fsub
ror
pushf
pop
mov
lods
fs
das
test
test
mov
jge
std
mov
add
aam
adc
dec
pop
pop
add
sbb
test
mov
test
adc
add
adc
pop
jns
mov
add
sub
gs
jp
nop
or
sti
adc
mov
jns
das
cmp
adc
nop
inc
push
cmp
pop
pop
lahf
sub
data16
push
les
and
shl
and
mov
mov
and
ffreep
sbb
rcl
jecxz
xchg
nop
(bad)
mov
inc
sub
jno
or
mov
imul
adc
movs
pop
das
and
jle
scas
jno
scas
repz
adc
sti
push
cmp
ror
pusha
fild
mov
out
xchg
add
lods
pop
mov
test
mov
mov
add
aas
mov
or
and
inc
enter
dec
and
or
stc
pop
and
test
rcr
test
mov
int
imul
pop
mov
add
and
pop
pushf
mov
cmp
stos
xchg
dec
mov
inc
gs
gs
inc
push
pop
mov
call
in
lods
xor
or
mov
fiadd
in
add
iret
in
and
jo
imul
lods
sub
jecxz
call
cmps
dec
fimul
dec
xor
sbb
cmp
mov
enter
or
inc
leave
sub
mov
mov
iret
in
pop
jno
fild
inc
sub
ror
in
shr
rol
mov
jg
loopne
fdiv
mov
add
ins
aas
adc
lods
retf
sbb
mov
test
push
xor
ins
jecxz
push
pop
add
das
inc
push
push
test
jl
dec
ins
pushf
ins
cmp
mov
push
aam
out
and
cmp
adc
sbb
sub
ins
mov
pop
adc
call
mov
inc
mov
push
fadd
nop
das
movs
lahf
in
mov
call
mov
(bad)
push
sub
cwde
fs
in
lock
aad
mov
out
loopne
cmp
(bad)
xchg
stos
pusha
xor
test
es
fs
mov
inc
jb
mov
sub
fisubr
sub
(bad)
xlat
mov
outs
pop
loop
xchg
mov
mov
jmp
outs
jl
add
rcl
std
xor
mov
fwait
lea
mov
mov
inc
and
mov
adc
dec
and
jmp
jl
dec
das
xchg
xchg
inc
pop
and
sbb
add
cmp
adc
sbb
add
fs
mov
mov
adc
out
pop
es
and
mov
ss
retf
int
xchg
pop
inc
es
dec
es
cmp
es
es
cmp
es
cmp
in
es
cmp
adc
or
dec
dec
dec
cmps
(bad)
pushf
les
nop
fdivr
cdq
clc
jno
mov
mov
push
xchg
sbb
add
pop
pop
and
pusha
mov
pop
jno
dec
in
dec
sub
inc
adc
enter
cwde
test
pop
enter
popf
(bad)
shr
(bad)
stc
jae
je
xchg
sbb
cld
stos
cwde
inc
mov
push
xor
aam
add
dec
call
xchg
cmps
add
cwde
sub
and
enter
adc
dec
mov
stos
cmc
sub
cmp
in
fsubr
xor
and
adc
ror
rcl
dec
rcl
sbb
xor
mov
mov
in
jb
frstor
outs
movs
jle
adc
movs
jecxz
ss
sbb
fs
scas
sub
or
out
fwait
loop
mov
test
aam
inc
sub
push
lea
inc
imul
xchg
imul
aam
loopne
sbb
add
and
push
jb
jo
add
test
inc
sbb
sbb
dec
add
sub
inc
push
xchg
jbe
arpl
mov
sub
ja
adc
sub
imul
cmp
inc
sub
es
fcomp
enter
in
(bad)
call
cmps
jno
xchg
in
es
adc
push
and
aaa
daa
jne
dec
imul
dec
adc
dec
lods
sub
xor
js
rol
add
je
cmp
mov
popf
imul
add
add
and
pop
data16
movs
mov
js
pop
movs
in
hlt
popa
fdivr
xor
or
pop
in
xor
jns
jg
cmps
xchg
iret
and
mov
jb
hlt
dec
psubsb
js
pop
add
jns
outs
jecxz
xchg
mul
jns
movs
or
pop
jns
xchg
out
and
clc
mov
sub
push
movs
aas
movs
test
xchg
stos
push
xchg
mov
add
icebp
cwde
mov
enter
dec
pusha
jp
repnz
inc
mov
lods
lea
in
fwait
je
and
add
adc
xchg
sbb
nop
(bad)
ins
dec
es
ss
cmp
setnp
jo
scas
mov
and
lahf
xchg
adc
push
sbb
scas
fistp
add
fdivr
mov
lea
lods
data16
jge
daa
mov
or
pop
inc
gs
jl
cmp
stos
push
jg
test
sub
bound
jl
mov
add
pop
add
rcr
mov
or
mov
xor
repnz
imul
jb
imul
cmp
leave
lock
mov
push
js
push
mov
mov
and
sbb
sub
nop
in
jge
call
mov
aam
ror
fsubr
jns
fs
cld
and
repnz
dec
xchg
int
sub
repz
cld
inc
fiadd
add
add
icebp
jl
jecxz
xor
xchg
adc
add
cld
jle
mov
mov
ins
inc
push
data16
mov
imul
jle
push
dec
push
cmps
jg
dec
ret
js
rcr
shr
mov
jmp
mov
icebp
pop
inc
sbb
pop
stos
lahf
add
jmp
and
lds
inc
mov
test
movs
shl
sub
jg
push
inc
inc
push
jg
pop
les
retf
in
fcomip
add
cmovge
sub
je
in
push
jo
dec
xor
lods
sub
sbb
pop
mov
and
dec
jb
inc
fs
pusha
sti
push
mov
and
xchg
popf
add
fnstcw
nop
and
mov
jbe
or
mov
mov
push
xchg
(bad)
and
mov
adc
pop
les
mov
mov
(bad)
xchg
push
and
test
les
js
sub
sub
xor
inc
adc
stos
sbb
sub
pop
test
fwait
js
sbb
gs
call
adc
jl
ror
enter
call
nop
shl
sub
xchg
dec
fwait
in
lock
or
fstp
jno
fdivr
adc
lea
cmp
jo
rcl
xchg
adc
dec
shr
or
mov
test
xchg
jo
imul
xchg
add
dec
in
in
fsubr
inc
imul
sti
jecxz
or
xor
pop
shl
adc
shl
(bad)
or
enter
ret
repnz
int
aas
test
js
mov
mov
and
pop
adc
lods
and
rol
add
push
add
mov
push
and
fisub
adc
inc
xor
int3
or
mov
scas
add
adc
test
push
inc
push
pop
push
leave
inc
add
ins
nop
xlat
fiadd
test
call
push
es
mov
push
out
fisubr
xchg
push
inc
ret
pop
pop
pusha
push
inc
push
xchg
fs
pop
and
add
test
pop
jb
xchg
pop
push
movs
ret
pushf
cmp
add
add
pop
xchg
mov
popa
jmp
add
inc
movs
aam
test
jo
add
xchg
adc
pop
popa
adc
xchg
push
inc
les
movs
movs
mov
inc
add
in
ud2
and
mov
cmp
or
call
push
movlps
les
mov
lock
push
dec
sub
push
ins
pusha
test
adc
int
scas
adc
(bad)
lods
(bad)
xchg
cmp
mov
leave
xchg
dec
xor
ins
xchg
je
xor
and
jl
xor
and
test
test
xor
mov
add
adc
das
inc
push
pop
es
jne
aas
push
sub
add
div
and
cmp
mov
test
mov
and
mov
(bad)
mov
popa
scas
(bad)
mov
mov
test
adc
and
movs
dec
xchg
scas
pop
jl
add
pop
xor
cmp
cli
and
in
retf
mov
adc
inc
(bad)
sbb
jl
push
or
pop
rol
es
je
and
cli
test
je
mov
mov
and
rcl
add
adc
outs
sub
aaa
pop
mov
adc
or
setbe
sub
rol
ins
aaa
pop
cmc
cmp
push
sub
inc
xor
or
mov
shl
pop
(bad)
fmul
mov
adc
inc
sub
fnsave
mov
add
sbb
mov
mov
xchg
mov
into
lahf
lds
aas
or
mov
loop
or
jecxz
pop
or
arpl
mov
pop
sbb
mov
add
cdq
fcom
and
add
fadd
loope
pop
xchg
adc
or
pop
sar
adc
das
outs
pop
adc
aam
push
dec
mov
jo
mov
cmp
sbb
inc
xor
loopne
inc
xchg
mov
inc
dec
inc
call
jmp
xor
xor
dec
sbb
mov
les
cmc
sub
inc
idiv
mov
xor
inc
sar
lods
sahf
pop
xchg
cmc
cmp
ja
test
push
mov
int
jmp
idiv
add
or
pop
shl
pop
clts
inc
inc
and
or
dec
push
fist
jmp
inc
mov
sbb
mov
and
inc
cmp
cmps
ins
dec
jne
add
xlat
mov
dec
js
cmp
lods
lods
and
ror
outs
inc
adc
jl
and
and
push
and
mov
in
pop
ins
sub
cmp
nop
sbb
or
ds
gs
mov
mov
pop
test
aas
es
mov
lds
cwde
xchg
pop
sbb
xor
aam
iret
int3
adc
mov
add
mov
enter
pop
xchg
test
in
aam
fmul
add
pop
sahf
pop
in
ret
jg
nop
mov
inc
fcomp
add
sub
push
mov
jb
mov
pusha
(bad)
hlt
and
sub
test
adc
sub
jle
add
xchg
add
adc
aaa
add
pop
test
jmp
lahf
sbb
push
fxch
cmps
cmp
hlt
cmp
hlt
out
scas
xchg
out
mov
ret
adc
fcom
or
loopne
sbb
sbb
pusha
mov
add
cmp
cmp
(bad)
jns
not
pop
push
adc
jns
iret
mov
sahf
push
popa
ins
cmp
repz
lock
mov
shl
add
inc
lahf
cmp
repz
shl
data16
call
jns
xor
or
and
fild
xchg
pop
push
jb
add
sub
mov
add
dec
inc
inc
inc
pop
xor
cs
ins
pop
push
push
dec
mov
sub
lahf
cmp
shl
aam
loope
repz
xchg
sub
add
fxch
add
and
ror
call
adc
aas
or
jnp
mov
fwait
(bad)
(bad)
mov
or
adc
mov
rcl
xchg
adc
push
or
cmp
lock
push
rcl
cmp
retf
pop
mov
add
into
pop
adc
test
ss
(bad)
rol
jnp
iret
stos
inc
mov
push
push
pop
bound
int
add
or
xchg
mov
mov
in
add
mov
data16
popa
je
and
idiv
xor
xchg
and
jo
jb
addr16
xor
xor
ss
jmp
dec
gs
outs
sub
and
imul
and
jb
mov
inc
call
or
test
bound
rol
xchg
shl
sbb
push
add
imul
out
das
add
xchg
lock
das
pop
jbe
cmp
add
and
add
adc
add
pop
add
adc
mov
pop
or
push
push
sub
or
adc
pop
push
jo
out
ins
out
push
xor
push
pusha
push
iret
mov
mov
loopne
push
pop
jns
dec
out
cmp
pop
cmp
cmp
add
pop
adc
mov
jns
out
mov
add
sahf
out
(bad)
adc
adc
xor
jns
out
or
pop
ja
out
inc
call
loopne
sahf
jg
add
push
jl
fmul
repz
sahf
pop
(bad)
ins
sub
or
cmp
repz
clc
add
repz
repz
iret
repz
or
movs
add
inc
in
pop
sbb
cmp
repz
inc
jp
aam
repz
adc
mov
mov
iret
repz
hlt
add
iret
repz
or
xor
int3
(bad)
iret
repz
lods
push
xchg
cmp
repz
in
or
iret
repz
pushf
arpl
fcomp
out
out
push
outs
cs
sahf
sub
dec
cld
call
adc
push
ret
jns
out
mov
jns
xchg
loop
sbb
out
shr
mov
jns
out
mov
push
sahf
sub
in
adc
jne
sahf
out
jns
gs
out
test
pop
sbb
call
sahf
ins
sub
xchg
out
jns
push
adc
out
jns
jae
(bad)
arpl
xchg
out
sahf
cmps
add
jns
pop
sbb
sahf
xchg
(bad)
imul
or
cmp
mov
push
pop
sahf
xchg
out
ja
into
addr16
jns
out
scas
pop
xchg
sahf
xchg
out
pop
pop
sahf
jg
ja
cmp
outs
push
das
mov
jp
(bad)
push
dec
(bad)
inc
or
nop
or
cs
mov
cs
jmp
in
mov
mov
movs
nop
or
cs
or
cs
lods
in
in
cs
fnstsw
std
ret
nop
or
mov
mov
inc
cs
retf
stos
in
cs
fisttp
sti
nop
or
mov
xlat
mov
cs
or
iret
in
cs
out
lahf
cs
fistp
ret
jle
pop
push
out
add
dec
sbb
adc
add
adc
fisttp
lods
inc
ficomp
push
add
adc
or
sbb
push
inc
push
jle
test
sbb
pop
push
imul
add
rcl
xor
or
dec
ss
repnz
outs
mov
push
jae
xchg
fisubr
inc
data16
dec
dec
out
mov
or
jb
arpl
outs
addr16
and
rcr
push
popa
je
sub
fild
popa
ins
imul
and
and
jb
in
push
adc
inc
aas
mov
fisubr
fs
push
je
jb
das
fstp
lea
and
je
and
cmp
bound
pop
jo
neg
fisub
outs
mov
ins
scas
jae
and
loopne
dec
fs
ins
outs
xchg
jne
loopne
add
jns
loopne
jae
ins
bound
dec
in
outs
ins
jae
add
push
imul
scas
inc
aas
(bad)
jo
mov
je
jo
mov
(bad)
or
into
arpl
sub
jne
imul
(bad)
imul
outs
and
(bad)
addr16
int
mov
(bad)
aas
mov
mov
(bad)
jp
(bad)
bound
and
pop
out
push
ins
mov
inc
cs
pop
pop
add
inc
cs
add
jmp
adc
add
ins
(bad)
dec
or
out
iret
scas
dec
dec
outs
inc
push
pop
pop
or
dec
dec
dec
dec
or
or
xchg
push
pop
add
pop
repz
fstp
or
mov
dec
int3
sub
repz
lods
ins
in
sbb
pop
cmp
repz
cmp
jl
repz
repz
repz
mov
push
cmp
repz
xor
iret
repz
repz
stos
push
sbb
cmp
cmp
iret
repz
xchg
es
sahf
add
push
xchg
sahf
out
sahf
push
(bad)
ss
idiv
out
push
mov
cs
sahf
out
outs
out
push
sahf
sahf
out
sahf
pop
fidivr
mov
out
add
jns
out
popa
loope
xchg
sahf
out
sahf
push
shl
mov
icebp
jns
out
or
jns
out
imul
jns
pop
fnstcw
mov
out
add
out
sahf
out
gs
xchg
sahf
out
sahf
push
aad
mov
cmc
jns
out
or
out
sahf
out
ins
in
sbb
sahf
pop
fnstsw
scas
imul
push
xchg
push
repz
repz
rcl
xor
iret
repz
mov
jae
repz
repz
or
iret
repz
retf
retf
sub
iret
repz
stos
stos
imul
cmp
repz
sbb
iret
repz
fcmovnu
cmp
iret
repz
mov
sti
cmp
repz
pop
xchg
repz
mov
cmp
cmps
cmps
addr16
cmp
repz
pop
xchg
xchg
push
repz
repz
xlat
xlat
aaa
aaa
iret
repz
mov
ja
div
cmp
repz
jg
iret
repz
iret
iret
das
das
iret
repz
scas
scas
outs
outs
out
out
cmp
repz
pop
lahf
lahf
pop
repz
repz
(bad)
aas
aas
iret
repz
mov
call
inc
push
and
jns
out
push
xor
dec
out
sahf
out
push
out
sahf
js
inc
and
adc
sahf
out
push
xor
add
jns
inc
ret
and
jb
jecxz
push
or
jns
out
add
or
add
jns
out
or
push
push
sahf
out
sahf
push
push
add
or
jns
out
add
out
sahf
out
or
pop
pop
mov
or
ficomp
add
or
mov
or
mov
and
mov
leave
leave
repz
add
pop
enter
xchg
pop
and
sbb
pop
xchg
pop
sbb
lahf
jecxz
addr16
mov
or
jb
daa
daa
adc
push
pop
sbb
pop
and
and
mov
add
push
das
or
iret
repz
or
adc
sbb
iret
repz
sub
cmp
cmp
repz
pusha
jo
mov
push
loopne
out
jbe
fld
push
fisttp
sbb
fucomi
pusha
lahf
sar
(bad)
(bad)
(bad)
inc
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
(bad)
(bad)
dec
fdivr
jmp
rcl
mov
sub
mov
(bad)
call
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
(bad)
(bad)
jmp
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
(bad)
(bad)
(bad)
jmp
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
push
fldenv
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
mov
add
(bad)
and
or
adc
stos
sbb
data16
(bad)
(bad)
(bad)
inc
jbe
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
add
leave
pop
js
mov
cwde
push
loope
or
(bad)
jmp
ins
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
(bad)
(bad)
(bad)
(bad)
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
inc
ficom
gs
aam
pop
popa
mov
into
pop
cmp
mov
jmp
aam
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
shr
(bad)
(bad)
(bad)
mov
add
in
add
pop
dec
or
cmp
add
daa
(bad)
(bad)
(bad)
mov
and
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
sbb
(bad)
jmp
cwde
shl
pop
cmp
mov
cmp
lods
ins
mov
and
mov
add
inc
aad
scas
ja
(bad)
(bad)
call
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
(bad)
(bad)
(bad)
fcomip
or
sahf
pop
jge
xchg
(bad)
shl
add
inc
push
imul
(bad)
test
ss
sbb
push
imul
aam
loopne
(bad)
call
adc
dec
frstor
fistp
mov
mov
aad
mov
call
mov
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
(bad)
jmp
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
mov
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
cmp
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
cli
(bad)
(bad)
inc
fs
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
jmp
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
jmp
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
(bad)
push
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
(bad)
jmp
cli
clc
sar
imul
push
js
or
push
add
mov
cmp
(bad)
(bad)
(bad)
jmp
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
(bad)
(bad)
(bad)
(bad)
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
(bad)
(bad)
(bad)
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
fild
sub
sbb
push
and
xchg
(bad)
(bad)
(bad)
(bad)
jge
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
(bad)
(bad)
(bad)
push
iret
sbb
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
mov
push
xlat
mov
sbb
test
or
(bad)
(bad)
call
call
out
ins
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
in
(bad)
(bad)
dec
ja
mov
out
repz
gs
fisubr
(bad)
(bad)
call
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
pop
pop
(bad)
jno
jo
add
ret
mov
ret
xchg
sbb
xor
pop
nop
sti
mov
call
mov
cmp
mov
(bad)
jns
jae
dec
call
fcomip
(bad)
inc
sub
pop
add
jle
jmp
(bad)
sbb
adc
(bad)
(bad)
(bad)
dec
lea
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
std
adc
(bad)
cli
outs
retf
push
pop
mov
mov
lea
xchg
push
xchg
xchg
push
cwde
xlat
ficom
test
loope
xchg
retf
les
jb
(bad)
(bad)
call
mov
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
mov
out
and
cmp
dec
mov
mov
and
push
cld
jmp
sub
sar
mov
adc
stos
and
leave
jmp
shr
inc
jle
push
jns
das
mov
and
je
or
repnz
(bad)
(bad)
dec
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
inc
xchg
call
cmps
test
cwde
ss
(bad)
(bad)
jmp
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
(bad)
(bad)
jmp
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
test
jno
call
sar
(bad)
ins
pop
push
dec
sub
(bad)
(bad)
jle
or
sub
add
adc
cwde
mov
or
bound
(bad)
push
hlt
out
(bad)
cld
or
ret
xchg
fdecstp
jmp
lea
inc
xor
push
cld
push
push
retf
jo
outs
sbb
sub
loope
fisub
lds
mov
and
dec
in
mov
movs
ret
addr16
(bad)
(bad)
call
lahf
sub
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
ds
(bad)
(bad)
dec
lahf
mov
cmp
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
ss
inc
jp
mov
arpl
lods
(bad)
loope
int3
mov
stc
dec
xlat
(bad)
(bad)
(bad)
jmp
dec
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
les
adc
(bad)
(bad)
(bad)
jmp
inc
cwde
dec
add
sar
push
or
cmp
popf
cmps
push
mov
xchg
adc
stos
sbb
push
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
(bad)
(bad)
(bad)
jmp
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
push
adc
test
and
gs
adc
jns
(bad)
(bad)
out
lock
dec
mov
movs
daa
sub
repnz
in
(bad)
(bad)
inc
and
out
mov
shl
es
xchg
aas
mov
adc
out
(bad)
inc
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
(bad)
mov
xor
aas
mov
and
push
push
add
test
pop
mov
push
dec
cli
dec
mov
ret
mov
repnz
add
call
dec
add
(bad)
mov
test
mov
fs
sbb
sub
mov
(bad)
(bad)
call
leave
in
push
ja
pop
sub
das
sbb
fild
sbb
repnz
adc
cwde
not
cmps
es
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
(bad)
(bad)
(bad)
(bad)
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
(bad)
(bad)
push
outs
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
(bad)
mov
(bad)
mov
fsub
leave
pop
sub
and
mov
(bad)
call
and
sub
sub
cld
sub
ds
sbb
sub
call
lods
mov
call
pop
cmp
xor
jb
and
(bad)
jmp
dec
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
scas
(bad)
call
mov
(bad)
jnp
cs
fdivrp
cmp
nop
fadd
or
loop
in
ja
cmp
pop
push
repz
ins
arpl
sub
shr
aad
(bad)
call
xlat
cmps
gs
fs
imul
dec
pop
mov
outs
(bad)
jmp
inc
jns
dec
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
(bad)
(bad)
(bad)
inc
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
push
movs
push
add
mov
mov
mov
clc
push
mov
(bad)
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
lock
(bad)
(bad)
jg
pop
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
(bad)
(bad)
push
(bad)
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
loopne
jmp
das
call
mov
stos
jmp
pop
imul
fcom
cld
sahf
icebp
(bad)
(bad)
jmp
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
dec
test
adc
icebp
xchg
inc
or
mov
(bad)
(bad)
(bad)
call
dec
mul
js
push
aaa
mov
fidivr
jecxz
fstp
mov
sar
(bad)
(bad)
jmp
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
(bad)
push
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
cld
(bad)
mov
cmp
ret
mov
call
dec
retf
lahf
lds
push
leave
enter
pop
inc
int3
inc
ins
xchg
(bad)
jmp
iret
sub
fcom
cs
sub
pushf
cmps
(bad)
(bad)
(bad)
call
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
(bad)
(bad)
call
dec
mov
repz
dec
mov
or
(bad)
in
popf
cmp
std
mov
test
(bad)
mov
(bad)
inc
out
push
adc
fadd
arpl
pop
xchg
shl
(bad)
(bad)
(bad)
jmp
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
jmp
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
(bad)
(bad)
(bad)
push
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
(bad)
(bad)
mov
push
not
xor
mov
ficomp
mov
or
gs
stos
out
scas
mov
push
xchg
bound
pop
adc
jmp
add
(bad)
call
mov
xlat
mov
fsubr
xor
loopne
adc
(bad)
(bad)
(bad)
call
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
(bad)
(bad)
push
lods
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
cmp
(bad)
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
jmp
push
xchg
xchg
loopne
fstp
(bad)
iret
aas
sub
(bad)
(bad)
mov
jmp
in
inc
push
clc
sub
les
and
clc
jg
sahf
loop
outs
dec
jg
or
(bad)
jge
aad
shl
call
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
push
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
(bad)
(bad)
jmp
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
(bad)
(bad)
jg
dec
ja
prefetchw
or
jae
mov
cmc
cwde
outs
inc
nop
call
cld
call
adc
out
sbb
ficom
daa
mov
mov
(bad)
(bad)
inc
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
push
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
dec
pop
fwait
push
add
in
mov
dec
leave
(bad)
call
leave
jmp
mov
adc
push
(bad)
(bad)
(bad)
dec
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
inc
in
jmp
bound
inc
xchg
out
xor
or
sub
(bad)
(bad)
push
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
adc
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
sub
(bad)
push
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
sbb
repnz
(bad)
jg
icebp
and
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
(bad)
(bad)
(bad)
(bad)
fld
push
jmp
xor
(bad)
and
push
mov
rol
(bad)
(bad)
(bad)
push
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
(bad)
(bad)
inc
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
(bad)
(bad)
(bad)
jmp
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
(bad)
call
fidiv
jmp
(bad)
stc
mov
mov
lock
imul
(bad)
(bad)
cmp
ss
test
(bad)
cs
mov
call
mov
loope
into
cs
(bad)
push
test
out
add
add
pop
std
pop
jmp
icebp
and
(bad)
(bad)
inc
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
(bad)
(bad)
call
sbb
loope
push
adc
cmp
adc
mov
jle
cmp
ret
(bad)
(bad)
test
and
mov
cmps
push
data16
jno
ds
outs
sub
(bad)
(bad)
dec
rcl
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
cmps
xchg
addr16
pop
test
or
xchg
popa
mov
fdivrp
ja
xor
out
dec
cdq
or
pop
ins
les
jo
hlt
(bad)
(bad)
(bad)
(bad)
push
push
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
pop
nop
mov
adc
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
movs
(bad)
jmp
adc
imul
mov
(bad)
jmp
mov
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
mov
(bad)
(bad)
call
(bad)
lods
mov
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
(bad)
(bad)
dec
mov
enter
mov
mov
mov
mov
and
mov
movs
movaps
push
leave
cli
add
or
mov
or
and
outs
jl
(bad)
(bad)
(bad)
call
dec
adc
popa
sbb
cmp
add
jno
cwde
shl
mov
jno
test
push
mov
pop
lahf
mov
xor
leave
les
(bad)
(bad)
(bad)
cmp
or
sbb
or
sub
out
pop
add
(bad)
(bad)
(bad)
call
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
scas
(bad)
(bad)
fld
adc
mov
jl
fstp
mov
jl
sti
jmp
std
aam
gs
mov
test
into
mov
mov
movs
(bad)
(bad)
(bad)
inc
fcom
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
(bad)
(bad)
(bad)
push
add
pop
fisttp
jno
daa
add
mov
or
xchg
mov
jmp
test
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
clc
(bad)
(bad)
jmp
pop
cs
xor
mov
mov
add
out
sub
inc
cmp
(bad)
adc
jecxz
or
xchg
cmp
push
jp
pop
test
push
iret
or
add
mov
setae
(bad)
inc
add
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
(bad)
(bad)
dec
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
jmp
fadd
les
repnz
sar
xchg
(bad)
jmp
mov
fisttp
ss
fmul
sbb
dec
sar
in
mov
pusha
out
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
(bad)
(bad)
jmp
add
mov
lds
or
sub
add
xlat
jmp
(bad)
(bad)
(bad)
jmp
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
(bad)
(bad)
(bad)
push
test
add
xchg
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
call
repnz
mov
fcmovnu
and
aam
inc
push
fiadd
(bad)
out
clc
dec
idiv
ja
sbb
out
punpckhdq
push
cmp
adc
aam
(bad)
dec
pop
(bad)
gs
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
push
retf
(bad)
(bad)
(bad)
push
popa
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
(bad)
(bad)
(bad)
cmp
test
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
dec
mov
xlat
push
xchg
push
ficom
and
addr16
jp
les
mov
jmp
add
outs
sub
or
mov
sub
sbb
mov
inc
xor
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
(bad)
(bad)
(bad)
dec
(bad)
dec
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
(bad)
(bad)
(bad)
dec
adc
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
(bad)
(bad)
inc
add
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
(bad)
(bad)
(bad)
call
lahf
adc
and
call
shl
ret
fiadd
gs
(bad)
jmp
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
push
(bad)
(bad)
cmp
inc
ss
pop
pop
mov
jo
jno
imul
sub
mul
test
(bad)
call
jne
pop
mov
sti
push
test
jns
mov
cmp
inc
in
mov
lds
jge
fisubr
cmp
(bad)
(bad)
(bad)
(bad)
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmp
(bad)
(bad)
jmp
hlt
dec
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
ret
mov
ins
adc
push
(bad)
xchg
xchg
push
xchg
(bad)
mov
(bad)
call
in
loope
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
jmp
std
call
and
jo
cmp
std
imul
and
ret
(bad)
(bad)
inc
xchg
scas
mov
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
(bad)
(bad)
(bad)
jg
or
stos
rcl
jmp
ja
das
aas
jns
ss
mov
or
(bad)
dec
je
adc
xor
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
(bad)
(bad)
(bad)
inc
mov
int3
retf
mov
cli
call
js
cmps
cmp
sbb
(bad)
jmp
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
(bad)
(bad)
(bad)
jmp
add
ins
jo
fdiv
adc
out
movs
add
test
mov
push
(bad)
mov
cwde
pop
ins
(bad)
adc
ss
daa
mov
fnstsw
cwde
add
mov
nop
xchg
mov
rcr
(bad)
inc
hlt
lds
(bad)
out
hlt
push
out
rcl
pop
mov
test
xor
imul
shl
in
shl
lods
clc
pop
sbb
inc
sub
jmp
loope
lds
gs
(bad)
(bad)
mov
sbb
xchg
sub
in
scas
mov
(bad)
repz
cmp
call
(bad)
jnp
test
pop
std
mov
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
(bad)
(bad)
push
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
(bad)
push
add
xlat
push
scas
xchg
adc
lea
or
mov
pop
(bad)
(bad)
push
inc
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
lds
cwde
and
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
das
cli
jmp
dec
pop
push
cli
jle
jnp
sub
sub
xchg
mov
xchg
cli
(bad)
(bad)
inc
mov
repz
inc
gs
dec
xchg
outs
jne
mov
call
or
icebp
dec
retf
aas
gs
jns
(bad)
mov
jmp
mov
retf
mov
mov
out
and
(bad)
(bad)
(bad)
jmp
mov
mov
jle
shl
imul
inc
cmp
ja
fsub
(bad)
dec
hlt
out
push
or
test
mov
adc
xor
and
jb
ret
add
pop
(bad)
(bad)
(bad)
fild
jmp
lea
dec
push
test
adc
psrlw
(bad)
or
push
out
inc
sbb
fs
xchg
push
or
cmp
sbb
(bad)
inc
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
dec
clc
call
mov
cmps
ficom
adc
xor
(bad)
(bad)
jmp
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
scas
cli
push
xor
add
and
in
mov
cmps
daa
aam
es
(bad)
(bad)
jmp
dec
dec
and
cdq
and
and
adc
sub
pusha
inc
sub
(bad)
(bad)
(bad)
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
fadd
(bad)
fdiv
cdq
ja
and
cli
icebp
jb
(bad)
(bad)
(bad)
call
fwait
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
pop
inc
retf
mov
xchg
cli
fisub
nop
jmp
fiadd
pop
push
repz
arpl
popa
(bad)
(bad)
(bad)
jmp
stos
pushaw
jmp
xlat
aam
fs
mov
dec
xlat
retf
and
mov
stos
outs
pop
dec
dec
fs
arpl
(bad)
(bad)
(bad)
dec
or
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
(bad)
(bad)
(bad)
inc
pop
jae
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
stos
mov
push
mov
cmp
pop
and
pop
in
xchg
xchg
jecxz
(bad)
call
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
(bad)
dec
pop
out
fldcw
jp
add
out
in
paddsb
sahf
push
in
pusha
hlt
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
loopne
(bad)
jmp
push
push
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
repnz
movs
sbb
lock
(bad)
(bad)
mov
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
(bad)
(bad)
(bad)
dec
cmp
jno
mov
(bad)
and
fdiv
dec
in
imul
test
(bad)
(bad)
(bad)
(bad)
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
(bad)
(bad)
(bad)
jmp
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
call
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
call
inc
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
ja
(bad)
fbstp
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
(bad)
push
mov
jge
mov
pop
mov
mov
sbb
ja
mov
or
mov
push
mov
(bad)
(bad)
(bad)
inc
xchg
int3
push
test
arpl
aad
or
test
mov
into
(bad)
(bad)
(bad)
jmp
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
(bad)
(bad)
jmp
clc
sub
mov
jl
stos
mov
les
mov
sbb
mov
cmps
mov
mov
int
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
test
cmc
(bad)
(bad)
mov
fimul
cmp
xor
(bad)
mov
(bad)
(bad)
jmp
mov
out
(bad)
bound
xor
xlat
cmp
sar
out
jge
dec
mov
loopne
xlat
add
mov
fucom
fbstp
(bad)
(bad)
(bad)
call
adc
sbb
call
adc
jno
jnp
enter
lods
jne
or
mov
outs
es
lods
jg
sub
mov
xchg
rcr
mov
(bad)
inc
(bad)
and
xor
pop
or
addr16
xchg
shr
push
cmp
in
pop
jg
(bad)
dec
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
jmp
pop
ja
inc
in
fmul
les
call
xor
loop
push
dec
jg
outs
test
or
(bad)
call
rcr
lahf
ror
and
lds
sub
mov
inc
and
(bad)
(bad)
(bad)
(bad)
call
fwait
adc
cmp
xor
not
adc
iret
push
retf
mov
(bad)
jmp
push
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
jnp
das
push
ret
ja
imul
setl
(bad)
sub
mov
(bad)
(bad)
jmp
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
mov
(bad)
(bad)
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
(bad)
(bad)
jmp
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
(bad)
(bad)
(bad)
in
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
(bad)
jns
psrad
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
call
pop
inc
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
(bad)
dec
(bad)
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
inc
sbb
(bad)
jg
jmp
sub
sahf
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
(bad)
inc
or
cmp
movs
add
sub
scas
cmc
(bad)
(bad)
inc
repz
mov
sbb
ror
sar
adc
shr
movs
not
cmp
and
dec
imul
or
(bad)
push
xlat
jle
out
ror
ret
push
jp
jmp
and
rol
mov
xor
xor
(bad)
and
stc
popa
call
add
mov
mov
ss
dec
(bad)
(bad)
(bad)
call
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
(bad)
(bad)
(bad)
push
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
mov
into
icebp
mov
inc
mov
das
jns
mov
xchg
push
xor
es
jmp
fdiv
inc
mov
bound
jmp
cmp
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
jg
sub
push
ja
ss
mov
inc
mov
inc
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
(bad)
(bad)
(bad)
jmp
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
(bad)
(bad)
(bad)
jns
adc
imul
mov
jle
cmp
cdq
in
(bad)
jmp
push
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
(bad)
(bad)
call
sbb
ds
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
(bad)
aas
mov
jp
mov
push
icebp
(bad)
ins
jo
je
bound
jbe
mov
test
bound
or
ins
bound
add
outs
inc
or
fidivr
ds
gs
ins
aaa
imul
loop
outs
gs
jb
jnp
sbb
ror
test
mov
movs
xor
pusha
sub
mov
adc
nop
xor
inc
popa
loopne
add
add
adc
or
test
mov
(bad)
pop
mov
pop
mov
push
mov
jae
push
sbb
mov
mov
in
in
adc
adc
or
mov
push
dec
add
xchg
pop
inc
loop
adc
jb
out
and
mov
(bad)
popa
push
sar
or
add
add
add
push
add
add
(bad)
mov
add
add
add
pusha
jmp
sahf
out
fcmovnbe
(bad)
push
add
sbb
jns
out
sbb
sbb
inc
(bad)
repz
rcr
pop
add
out
loop
imul
js
gs
mov
in
push
mov
inc
fisubr
jo
sbb
sbb
jbe
bound
popa
ins
shl
test
mov
mov
push
dec
dec
inc
cmovle
dec
mov
pop
dec
dec
dec
inc
push
inc
push
pop
inc
push
pop
push
inc
push
pop
dec
aaa
adc
dec
dec
inc
push
inc
inc
adc
pop
add
mov
sub
fcom
sahf
das
or
sti
sar
mov
push
or
rcl
push
out
(bad)
cmp
push
aad
es
sub
sub
sub
cs
(bad)
dec
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
rcl
dec
dec
dec
pop
push
mov
pop
xor
pop
jp
inc
call
bound
add
outs
(bad)
push
ins
ins
mov
jne
ja
jns
jnp
jge
jg
out
inc
pop
cs
add
cmp
pop
mov
cmp
jbe
mov
sub
aaa
dec
jae
popa
ins
and
sub
cmp
dec
outs
je
outs
jne
xor
push
inc
push
ins
and
outs
icebp
fs
dec
cwde
arpl
dec
pop
cs
aas
punpcklbw
pusha
call
sub
add
inc
aam
fidivr
je
mov
dec
jae
pop
xor
add
sub
neg
add
cmp
jae
arpl
jg
mov
dec
and
ins
mov
add
das
das
and
push
xlat
out
movs
cmp
inc
inc
(bad)
gs
bound
jb
dec
push
jbe
dec
mov
xchg
dec
je
outs
push
push
jo
dec
idiv
add
jae
add
ins
out
pop
outs
jbe
pop
outs
dec
div
imul
push
fdivr
jne
outs
popa
and
inc
das
ins
arpl
inc
pop
pop
imul
ins
ins
sbb
out
loopne
idiv
ss
scas
push
pop
pop
clc
push
ror
ficom
fs
sub
fimul
mov
outs
inc
addr16
ds
mov
ins
fcomi
(bad)
mov
cld
(bad)
fdiv
(bad)
jg
dec
cmp
cmp
iret
jnp
add
dec
and
jns
lds
das
das
adc
dec
push
inc
das
inc
cmp
inc
gs
ins
bound
call
arpl
adc
cwde
and
inc
dec
jne
inc
mov
xchg
outs
xchg
inc
jo
imul
bound
push
inc
popa
outs
adc
push
popa
cld
jb
popa
daa
inc
pop
adc
outs
imul
gs
sbb
dec
outs
out
ins
mov
jbe
sbb
cmp
aas
fiadd
test
gs
or
mov
inc
adc
fild
gs
stos
push
pushf
je
cmps
jne
inc
inc
popf
ds
retf
out
sar
jl
adc
add
ds
add
push
add
add
add
jp
xchg
push
and
push
pop
dec
aaa
xor
push
push
repz
xchg
scas
call
pusha
push
js
js
inc
daa
fmul
inc
out
cmp
sbb
gs
jmp
jo
jb
and
dec
push
push
add
data16
sbb
inc
xor
stos
mov
inc
aas
add
nop
push
ss
add
push
stos
pop
sub
scas
and
sbb
and
cs
iret
arpl
scas
ins
push
push
fidiv
popa
dec
sub
das
jne
outs
cs
fidivr
or
jbe
aas
imul
ds
jp
ror
pop
fdivp
sahf
adc
gs
ins
stos
mov
aas
push
xchg
je
mov
add
cmp
dec
retf
stos
ins
sub
pop
add
imul
jns
jb
aas
inc
push
data16
pop
mov
dec
xor
xchg
into
ret
jns
js
and
das
add
jp
sbb
mov
arpl
lahf
jecxz
and
outs
inc
pop
jnp
into
imul
jae
lds
sbb
mov
xchg
xor
je
fld
push
adc
outs
mov
(bad)
jo
mov
push
xor
mov
ror
xor
cmps
fild
push
das
ucomiss
fdiv
ret
fidivr
mov
(bad)
loopne
add
and
add
mov
popa
sub
lods
stos
add
mov
jg
ret
nop
add
pop
mov
stos
dec
fbstp
scas
jne
jbe
jb
mov
jae
push
enter
jg
in
js
ficomp
and
das
mov
sbb
jg
or
(bad)
cmp
stos
lahf
outs
aas
or
arpl
ja
xchg
push
mov
xchg
xchg
test
fisttp
cs
retf
imul
mov
fs
imul
rcr
or
jbe
(bad)
mov
cmp
das
(bad)
jno
aad
shl
sub
cmp
jge
mov
inc
pop
ins
pop
je
adc
cmp
into
sbb
pop
mov
dec
sbb
idiv
lock
mov
ret
add
mov
xor
fs
inc
mov
lods
(bad)
push
or
loopne
mov
xor
in
xchg
das
pushf
call
adc
call
sbb
das
inc
pusha
sbb
jl
repnz
pop
cwde
cwde
and
and
into
mov
pop
add
in
or
enter
dec
aaa
add
sub
push
imul
(bad)
les
aam
jb
push
push
stos
jo
cmp
jb
cmps
or
push
in
fisttp
add
cmp
mov
dec
ret
div
loope
idiv
imul
or
outs
ret
inc
and
mov
fwait
cmp
push
pop
lahf
ins
jp
adc
mov
xor
sbb
mov
xor
or
call
xor
arpl
outs
push
or
sbb
add
lea
leave
and
nop
and
xchg
xchg
repnz
in
add
push
and
inc
mov
and
and
xchg
scas
dec
add
test
add
adc
add
add
add
or
rol
add
ins
add
in
add
add
add
push
mov
mov
add
inc
sbb
add
sub
adc
(bad)
(bad)
mov
add
mov
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
pushf
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
(bad)
(bad)
push
mov
rol
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
(bad)
(bad)
(bad)
call
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
test
push
clc
stc
cli
sti
cld
std
(bad)
inc
rol
mov
adc
dec
sbb
push
movs
fsub
mov
jne
pop
fs
mov
pop
add
test
(bad)
outs
sub
lods
ja
adc
and
and
popa
outs
mov
retf
jae
jne
push
popa
mov
dec
arpl
aaa
and
in
sbb
jbe
push
jo
gs
sub
sub
jb
arpl
aas
push
and
addr16
outs
jp
ja
jp
ins
in
add
pop
pop
add
and
or
sti
jge
ss
ins
daa
addr16
mov
fsub
addr16
outs
arpl
push
push
iretw
cdq
inc
popa
ins
gs
mov
jae
imul
jmp
cmp
xchg
or
jbe
gs
ins
mov
push
loopne
daa
jne
shl
pop
fcomp
xor
lahf
and
and
cmp
popa
jb
imul
cmp
popa
pop
or
add
ins
outs
fs
test
mov
jne
jae
and
lds
push
sbb
and
cld
test
mov
pusha
cmps
daa
arpl
loopne
imul
jne
ins
adc
xlat
push
ds
inc
and
ins
push
loope
ins
bound
and
push
imul
imul
and
addr16
jo
sub
out
gs
test
pop
test
dec
outs
imul
sbb
mov
jns
jae
daa
mov
fidiv
sub
lahf
imul
push
mov
jmp
js
call
enter
ins
push
data16
popa
pop
int
je
adc
cwde
xor
xchg
sub
or
or
bound
mov
add
add
(bad)
jns
inc
push
pop
aaa
mov
popf
jbe
push
cmp
or
jns
jb
fisubr
sub
fsub
pop
popa
mov
fcom
inc
rol
xchg
pop
add
pop
fs
out
test
aam
daa
popa
(bad)
pop
ins
daa
pusha
in
push
(bad)
mov
lock
daa
rcl
pushf
imul
scas
lods
(bad)
dec
clts
or
adc
mov
jmp
adc
inc
into
sub
std
or
cmp
out
pop
outs
lods
pushf
inc
dec
push
js
sub
dec
inc
push
inc
pslld
dec
dec
dec
dec
das
inc
inc
dec
push
int
in
movs
xor
or
lods
hlt
push
mov
popf
jne
in
lods
sar
in
push
call
inc
sub
test
ins
call
cmp
xlat
push
sub
scas
and
xor
out
add
push
inc
stos
hlt
inc
loopne
push
jns
test
inc
inc
lods
iret
push
call
jmp
dec
pop
push
dec
push
cmovs
ja
cmp
sbb
push
iret
or
dec
fisttp
clc
push
inc
call
cmps
ror
inc
movs
inc
sub
test
ins
call
dec
dec
xchg
cmps
rcl
and
adc
cmps
test
test
imul
add
push
call
mov
lds
push
xchg
adc
push
scas
sahf
test
jl
dec
outs
daa
xchg
ja
je
pop
inc
ins
pop
andps
out
sub
dec
dec
dec
cmp
dec
mov
cmp
and
xlat
xor
and
dec
pop
or
push
xchg
ja
stc
test
pop
inc
inc
lock
sahf
push
loopne
dec
not
dec
fistp
ja
mov
or
or
adc
add
or
idiv
sbb
add
dec
lahf
dec
outs
outs
jmp
push
add
adc
xchg
or
add
xor
adc
in
aas
dec
int3
sub
cmp
inc
pop
leave
in
inc
aas
push
sub
jb
jg
addr16
add
or
pop
js
jo
add
xchg
pop
xor
cmc
xor
sub
inc
sub
dec
and
push
xchg
inc
dec
add
lea
call
loopne
mov
xor
dec
ror
(bad)
cld
sti
mov
das
retf
jno
icebp
pusha
inc
mov
clc
ret
cmc
neg
outs
movs
add
xor
jl
add
ins
ja
aas
ja
cmp
gs
xor
push
das
ret
in
imul
ret
pop
ja
pop
outs
adc
loopne
cmp
xchg
jo
es
stos
push
xor
pushf
in
push
data16
fadd
pop
push
into
bound
enter
push
jae
jb
xor
push
pop
mov
lea
dec
ins
ins
test
bound
mov
mov
hlt
(bad)
jno
movs
adc
(bad)
pop
xchg
mov
push
js
outs
push
ins
jo
jns
inc
jne
cwde
sbb
mov
pop
mov
or
xchg
add
add
jbe
or
mov
fs
psubb
ins
jmp
retf
jmp
mov
outs
imul
pop
sbb
sub
jbe
inc
outs
xchg
imul
jne
mov
imul
inc
bnd
sub
aad
sbb
ins
ds
pop
lock
dec
gs
or
data16
es
pop
pop
sti
outs
popa
add
inc
dec
das
dec
and
xchg
mov
pop
je
ins
data16
jnp
mov
out
jae
push
mov
cmp
retf
(bad)
pusha
or
inc
je
(bad)
sub
arpl
pop
loopne
or
mov
idiv
inc
push
loop
xchg
jae
pop
cwde
xchg
and
mov
mov
fs
push
sub
jle
mov
or
pcmpeqd
imul
push
xor
test
ret
jo
int3
push
fld
dec
mov
idiv
jae
push
lar
test
adc
inc
mov
xchg
pop
add
adc
out
popa
rcr
imul
outs
cmp
push
or
es
jne
push
popf
push
jo
push
mov
xor
sbb
dec
mov
shl
je
and
mov
pop
aas
dec
bound
dec
or
fiadd
or
stc
pusha
fsubr
push
mov
cmp
dec
(bad)
xchg
ins
inc
jns
daa
pop
and
bound
push
push
push
dec
mov
mov
push
cmps
sbb
inc
sbb
push
(bad)
mov
jb
cmp
popa
addr16
adc
jo
pop
jp
outs
xor
and
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
adc
int3
and
mov
mov
cmps
pop
dec
pushw
(bad)
daa
sub
inc
adc
add
loop
cmp
push
and
push
and
xor
dec
dec
stos
xchg
(bad)
les
ret
xchg
pop
pop
pop
push
push
xchg
cmp
cmp
cmp
cmp
into
addr16
dec
and
mov
das
sbb
loopne
rcl
mov
inc
or
or
out
push
push
dec
test
dec
div
xor
aam
cmp
fild
dec
jge
or
imul
or
jo
push
adc
pandn
or
test
fs
enter
xor
push
mov
push
pop
sub
stos
outs
bound
pusha
push
or
sbb
das
adc
outs
xchg
daa
xchg
mov
mov
mov
cmp
fisubr
cmp
cmp
push
das
push
sub
out
sub
es
addr16
jle
cmps
pop
repz
sub
pop
add
sub
out
addr16
cvtps2pi
pop
push
stc
sbb
cmp
xor
push
add
pop
xchg
add
addr16
ins
popf
imul
das
jo
ss
or
je
pop
nop
jb
out
cdq
out
dec
popa
sbb
je
imul
fs
jo
sub
outs
mov
sub
sahf
out
inc
or
call
jns
out
mov
pushf
xchg
mov
out
pop
jecxz
jg
je
ins
iret
jnp
inc
mov
es
pop
ss
xlat
xor
dec
dec
mov
ficom
push
inc
inc
jno
push
sar
mov
cmp
xor
xor
out
jns
jle
adc
push
sub
jns
out
and
adc
out
sahf
adc
add
mov
cmp
hlt
lock
loopne
cmp
repz
shr
mov
sub
mov
call
cmp
sahf
out
and
or
mov
repz
repz
mov
cmp
jo
and
jns
mov
push
iret
repz
push
les
(bad)
outs
push
test
(bad)
fsubr
push
je
cs
push
jb
mov
outs
ret
xor
dec
sub
dec
add
mov
sbb
pop
lea
dec
mov
push
inc
outs
js
push
add
adc
dec
push
sub
add
sti
out
jbe
inc
dec
push
dec
push
add
xor
push
dec
inc
dec
shufps
mov
inc
das
push
dec
or
adc
sahf
or
out
pop
je
in
pop
or
nop
outs
mov
pop
leave
jb
inc
in
scas
retf
neg
inc
mov
daa
stc
out
arpl
add
not
leave
inc
jl
mov
mov
add
out
xchg
dec
jne
int3
ja
fisttp
add
or
dec
(bad)
push
push
mov
aas
add
adc
push
pop
cmp
ds
push
nop
fcom
scas
and
fadd
stos
addr16
and
imul
xor
js
jb
or
and
int
and
mov
loope
xlat
(bad)
dec
loop
cmp
scas
sahf
cld
xchg
js
xchg
mov
dec
popa
jns
adc
xchg
gs
dec
fnstsw
pop
mov
fs
jb
inc
imul
pop
add
push
add
pusha
add
enter
or
add
add
aas
stos
or
push
bound
arpl
inc
xor
push
dec
add
add
push
push
add
bound
push
pop
push
inc
inc
sbb
inc
dec
or
adc
cmp
adc
push
inc
push
push
inc
lea
mov
pop
je
sahf
out
mov
ins
add
adc
jae
sahf
out
push
stos
add
or
out
mov
(bad)
jns
into
mov
lock
into
popf
out
and
mov
or
xchg
jae
sbb
or
xchg
pop
xchg
or
jg
xor
mul
fbstp
mov
inc
scas
cmps
xchg
mov
sahf
inc
xchg
aas
or
pop
add
(bad)
das
aaa
jne
mov
test
add
and
push
shl
mov
lock
sub
push
fdivr
mov
inc
les
fs
xchg
push
aam
mov
hlt
or
dec
int3
sub
(bad)
(bad)
(bad)
jmp
pushf
pop
fdivr
jl
add
(bad)
adc
jb
or
(bad)
(bad)
(bad)
jmp
sbb
jp
push
xchg
cmps
data16
xchg
push
(bad)
ss
test
dec
into
cs
(bad)
(bad)
(bad)
jmp
push
sahf
pop
fidivr
mov
inc
shl
popa
loope
xchg
push
shl
mov
icebp
or
aam
(bad)
jmp
sbb
jns
add
movs
gs
xchg
push
aad
mov
cmc
(bad)
call
in
int
lods
ins
in
sbb
mov
inc
ret
and
arpl
adc
jae
or
imul
fwait
pop
fstp
mov
inc
(bad)
daa
cmps
xchg
(bad)
jmp
pop
xchg
push
xlat
aaa
mov
test
scas
outs
out
pop
lahf
pop
fistp
mov
pop
les
hlt
nop
shl
pusha
mov
lock
(bad)
(bad)
inc
adc
xchg
aam
movs
in
je
hlt
or
enter
fsubr
push
mov
(bad)
dec
sbb
pushf
fsubr
lods
in
cmp
mov
rcl
xchg
shl
popa
mov
icebp
add
inc
test
adc
movs
in
jne
cmc
or
leave
sbb
fldcw
imul
(bad)
dec
int
pop
popf
(bad)
jge
std
add
ret
xchg
shl
bound
repnz
(bad)
(bad)
(bad)
inc
(bad)
push
push
xchg
(bad)
data16
out
jbe
test
mov
sbb
fisubr
push
jmp
(bad)
(bad)
dec
into
push
pop
sahf
fisubr
outs
scas
out
ds
inc
inc
add
push
xchg
shl
arpl
repz
(bad)
(bad)
(bad)
inc
(bad)
pop
push
xchg
xlat
daa
cmps
out
ja
test
pop
fld
imul
lar
pop
pop
outs
pop
pop
lahf
fild
outs
scas
out
aas
jg
(bad)
(bad)
dec
jo
xor
pusha
jo
nop
mov
lock
and
inc
push
popa
jno
xchg
(bad)
(bad)
(bad)
jmp
icebp
add
and
inc
push
bound
xchg
mov
repnz
and
inc
push
arpl
xchg
(bad)
(bad)
(bad)
jmp
repz
and
inc
push
fs
xchg
movs
mov
aam
hlt
add
push
gs
xchg
(bad)
(bad)
(bad)
jmp
cmc
push
push
es
push
data16
xchg
cmps
mov
(bad)
out
pop
pop
daa
aaa
inc
push
addr16
xchg
(bad)
(bad)
(bad)
jmp
test
pop
push
mov
or
sub
dec
pop
imul
jmp
stc
or
sub
dec
into
mov
(bad)
(bad)
(bad)
(bad)
cli
or
sub
dec
pop
imul
stos
mov
or
sub
dec
pop
ins
jl
pushf
lods
mov
(bad)
fsubr
cld
or
pop
ins
jge
popf
lods
mov
push
push
cs
pop
outs
jle
sahf
scas
mov
(bad)
fsubrp
dec
pop
das
aas
dec
pop
outs
jg
lahf
scas
mov
and
adc
ja
add
shr
mov
bound
lahf
xchg
or
xor
jb
xlat
and
test
pop
das
bound
call
jnp
jne
pusha
jmp
lods
inc
xchg
jp
test
mov
aad
mov
pop
scas
mov
jbe
cs
xchg
(bad)
aad
push
xor
dec
jae
icebp
jg
imul
sbb
sub
aas
or
mov
fidivr
repnz
in
inc
js
cmp
(bad)
push
inc
add
mov
aaa
(bad)
pop
leave
cmp
repz
sti
outs
and
std
scas
fsubr
cmp
jle
xchg
(bad)
jg
xor
imul
std
mov
xor
out
mov
jg
mov
int
cdq
and
ins
pop
mov
shl
push
mov
and
push
pop
ror
retf
sti
repz
in
inc
sbb
cmp
add
sahf
repnz
mov
adc
cmp
cmp
sub
inc
mov
mov
add
mov
stos
add
jmp
(bad)
(bad)
inc
push
add
add
jge
movs
add
add
add
add
add
(bad)
(bad)
dec
mov
add
add
add
in
add
mov
pop
xchg
pop
fst
(bad)
(bad)
inc
sub
jp
retf
or
enter
jns
aad
xor
xchg
or
or
(bad)
(bad)
out
cmps
and
pop
push
int3
push
cmp
scas
mov
xchg
adc
adc
inc
pop
mov
and
adc
mov
adc
(bad)
(bad)
push
pop
data16
sbb
sbb
push
sbb
sbb
sbb
inc
pop
icebp
pop
(bad)
(bad)
(bad)
jmp
and
and
and
and
jmp
mov
jnp
inc
sub
jecxz
(bad)
(bad)
(bad)
push
cmp
adc
xor
imul
sbb
icebp
dec
cmp
cmp
inc
adc
inc
and
inc
aas
inc
push
(bad)
(bad)
(bad)
(bad)
inc
jl
xchg
dec
mov
iret
dec
lock
adc
dec
popa
push
mov
push
jmp
push
xchg
(bad)
(bad)
inc
pop
(bad)
pop
cmp
pop
or
pusha
sahf
popa
in
bound
fs
gs
imul
add
(bad)
mov
jo
jno
jae
je
jbe
ja
mov
xor
(bad)
(bad)
mov
call
test
xchg
push
(bad)
out
mov
(bad)
(bad)
(bad)
call
loop
xchg
call
jns
cmp
mov
imul
scas
scas
outs
jnp
push
mov
mov
mov
sar
movs
les
(bad)
call
into
cdq
shl
(bad)
int3
fsub
(bad)
fcom
fild
loope
jecxz
in
out
jmp
in
jmp
out
dec
lock
shl
je
mov
mov
push
aaa
or
movs
sbb
and
(bad)
out
xchg
call
sub
sub
cs
xor
xor
(bad)
(bad)
push
dec
cmp
cmp
cmp
lea
inc
icebp
inc
sbb
inc
pop
inc
jb
or
dec
xchg
dec
lahf
dec
movs
dec
cmps
dec
movs
dec
lahf
dec
xchg
push
mov
push
gs
dec
push
mov
call
push
xlat
push
mov
mov
pop
ss
pop
pop
xlat
pop
movs
pop
outs
pop
cmp
pop
les
popa
dec
bound
mov
(bad)
arpl
lods
popaw
addr16
sub
push
(bad)
(bad)
(bad)
jmp
ins
fldcw
sub
outs
jne
sbb
jo
jno
jno
jb
jae
jae
je
jne
(bad)
(bad)
(bad)
push
jbe
jbe
ja
js
js
jns
jns
jp
jp
jnp
jl
jl
jge
jge
jle
(bad)
(bad)
(bad)
(bad)
jle
jg
jg
cmp
xchg
sbb
mov
test
test
xchg
push
inc
mov
mov
mov
and
lahf
mov
lea
or
mov
in
(bad)
fs
fist
cmp
xchg
xchg
or
push
xchg
inc
xchg
mov
and
xchg
add
dec
cdq
mov
call
(bad)
(bad)
ficomp
sbb
pop
sahf
ret
lahf
xchg
lahf
sti
lahf
arpl
cdq
mov
(bad)
jmp
retf
mov
sti
mov
daa
movs
mov
mov
pop
cmps
jns
(bad)
(bad)
call
test
sub
stos
cld
stos
pop
lods
mov
lods
shr
(bad)
dec
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
cmp
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
mov
mov
pop
mov
pop
mov
add
mov
test
sti
pop
loopne
(bad)
mov
hlt
mov
jmp
cmp
rol
(bad)
inc
and
ret
addr16
mov
pop
les
cmps
(bad)
test
lds
add
(bad)
(bad)
(bad)
inc
sbb
mov
enter
leave
mov
xlat
leave
and
jo
mov
retf
mov
retf
in
retf
cmp
test
ror
sbb
data16
int
int
into
xchg
into
fmul
es
jo
mov
(bad)
mov
test
shl
rol
ror
xchg
shl
sar
(bad)
(bad)
jmp
shl
mov
aam
aam
aam
aad
aad
aad
aad
(bad)
test
retf
(bad)
adc
pop
xlat
(bad)
(bad)
(bad)
call
fdiv
mov
(bad)
ficomp
lahf
(bad)
fisubr
fld
mov
(bad)
(bad)
(bad)
push
fstp
sbb
fmul
fisttp
xchg
fst
fstp
ficomp
fsubp
fisub
fild
lods
fcomip
fbstp
sar
xor
jbe
mov
loope
loope
loop
(bad)
(bad)
inc
mov
retf
loop
jecxz
jecxz
jecxz
jecxz
in
in
in
in
in
in
in
in
out
(bad)
(bad)
call
out
out
out
out
out
out
call
fucomp
sbb
jmp
(bad)
(bad)
(bad)
call
cwde
jmp
xchg
jmp
jmp
in
dec
in
mov
int3
in
or
dec
in
xchg
(bad)
in
add
add
(bad)
inc
jle
mov
out
je
mov
out
out
sub
push
lock
(bad)
(bad)
mov
icebp
aad
adc
dec
repnz
(bad)
repnz
aas
repz
mov
repnz
push
cmps
hlt
(bad)
(bad)
jmp
hlt
sbb
cmc
iret
cmc
or
inc
test
imul
mul
neg
clc
(bad)
(bad)
(bad)
call
nop
clc
retf
clc
add
stc
mov
in
stc
daa
cli
popa
cli
fwait
cli
aam
push
sti
dec
sti
cmp
(bad)
push
sti
sub
cld
frndint
adc
dec
std
test
mov
(bad)
data16
lahf
(bad)
xlat
(bad)
adc
dec
(bad)
(bad)
(bad)
(bad)
inc
leave
sahf
xor
inc
inc
cmp
xor
das
cs
daa
daa
rcr
cld
jmp
and
and
and
and
pop
push
sbb
repnz
sbb
sbb
push
nop
xchg
xchg
retf
adc
add
es
sub
add
dec
or
mov
or
dec
or
and
or
sbb
lahf
imul
sub
cmp
iret
jnp
push
fidivr
push
adc
cmp
(bad)
(bad)
(bad)
jns
sar
xor
inc
inc
inc
xor
inc
inc
sub
sub
inc
xor
inc
inc
inc
cmp
inc
jge
movs
fld
lock
adc
add
ins
lea
add
mov
add
cmp
dec
lahf
inc
nop
or
mov
xor
pop
add
add
ss
add
jb
push
imul
jae
jae
das
or
es
popa
push
mov
call
out
je
inc
jmp
jae
idiv
push
repz
sbb
hlt
mov
sti
lea
scas
push
test
pop
jae
cmp
add
add
pop
dec
aaa
call
inc
sub
xor
cmp
je
pop
or
out
sbb
push
jbe
jmp
addr16
(bad)
push
arpl
mov
add
xchg
mov
cmp
ret
js
xor
add
mov
or
rcl
sub
pop
es
sti
push
ficom
mov
cmp
add
hlt
adc
jmp
push
xchg
movs
mov
mov
shr
add
xchg
pop
out
xor
pop
push
sbb
fwait
dec
sbb
inc
iret
jne
sbb
fstp
ins
pop
mov
test
push
sbb
push
pop
hlt
mov
ja
out
test
sti
cmps
push
lock
das
push
mul
xchg
fisubr
dec
fs
push
pop
shl
loop
lea
call
stos
xchg
daa
mov
add
scas
fs
test
push
jns
push
pop
pop
or
sub
sti
ins
xchg
push
jb
mov
repnz
cmp
mov
inc
jb
imul
mov
cmp
xchg
xchg
mov
dec
mov
cmps
pusha
lahf
push
sbb
add
dec
pop
inc
push
stos
bound
jo
outs
(bad)
shl
stos
das
outs
pop
mov
jge
mov
dec
pop
mov
fld
adc
add
jne
rol
adc
das
mov
scas
outs
jmp
dec
addr16
movd
xor
mov
or
sub
test
push
stos
ja
cmps
hlt
fld
stos
inc
cmp
bound
mov
fistp
dec
add
daa
pop
ins
ret
test
dec
fs
mov
jmp
pop
push
fwait
pop
mov
jge
adc
fld
jns
mov
int
dec
add
adc
add
jbe
dec
movlps
fcomi
pop
jns
jns
out
jmp
add
push
push
jl
mov
cmps
test
cs
mov
imul
pop
push
test
daa
jo
jo
daa
dec
into
push
clc
shl
mov
mov
push
and
in
(bad)
jmp
mov
mov
lea
int
sbb
das
sub
out
cmp
daa
and
arpl
adc
add
pop
das
cld
(bad)
out
and
ins
imul
nop
mov
push
in
mov
jns
popa
jb
(bad)
ins
outs
outs
je
add
or
ins
adc
cmps
push
sub
jne
cmp
add
push
imul
mov
add
cmp
add
mov
inc
push
in
and
lock
or
ins
pop
mov
sbb
push
fnstenv
dec
push
push
iret
out
frstor
dec
add
mov
add
add
add
push
mov
inc
add
xor
fnstsw
nop
jmp
in
mov
sahf
data16
loopne
and
mov
mov
frstor
ficom
fisubr
mov
fild
mov
or
push
push
fcomi
jl
mov
pop
pop
push
jle
add
xor
ja
push
rcr
add
jo
cmp
mov
dec
fcmovne
imul
mov
jle
ds
or
sub
xor
inc
mov
pop
inc
mov
or
out
inc
push
dec
dec
dec
push
das
push
inc
push
dec
dec
dec
inc
dec
inc
dec
inc
out
xchg
ret
dec
lahf
test
pop
into
pop
cli
mov
addr16
je
cmps
fsubr
xchg
push
inc
and
rcl
rsqrtps
add
daa
inc
mov
mul
jle
ret
fidivr
mov
jb
enter
push
gs
jb
lods
push
sub
jae
mov
sbb
ins
or
and
in
dec
fadd
retf
or
pop
ins
and
xor
hlt
retf
jmp
adc
or
pusha
push
nop
inc
xor
pop
test
add
or
xor
pop
and
add
jl
repnz
xor
pop
and
or
aaa
or
cmp
repnz
or
cmp
dec
mov
xchg
popa
xchg
dec
les
imul
xor
xchg
mov
fld
das
jb
loopne
dec
lock
ins
jb
jb
inc
push
push
stc
mov
jne
gs
ins
jo
popa
popa
adc
adc
fsub
and
add
pop
cmps
scas
jo
aam
pusha
test
cdq
jl
and
mov
pop
pop
add
pop
and
mov
and
mov
(bad)
je
xchg
adc
dec
dec
(bad)
lock
push
dec
mov
ficomp
test
test
cwde
das
adc
mov
or
je
pop
jb
pop
fstp
xor
xor
pop
jb
pop
xor
sub
jb
aaa
cmp
and
add
pop
imul
gs
bound
pop
or
bound
pop
pop
sub
xchg
mov
cmp
ins
and
jge
xor
or
inc
sar
loopne
js
ins
pop
data16
pop
nop
out
daa
fwait
pop
xchg
adc
mov
mov
inc
and
movs
fcomp
loop
jo
pusha
mov
pusha
cmps
jo
(bad)
push
xchg
lods
(bad)
call
data16
sti
sub
push
cmp
das
aad
xchg
das
cdq
mov
xchg
stos
(bad)
shl
jbe
sti
and
pop
pop
mov
ins
aad
xchg
cmp
or
out
sbb
ins
and
and
shl
push
ja
and
push
imul
push
loop
mov
mov
pop
xchg
inc
or
das
fisttp
inc
ins
rcl
movaps
sbb
jg
mov
mov
jg
dec
xchg
push
xchg
push
sbb
daa
arpl
or
(bad)
and
dec
cmp
(bad)
test
sub
mov
popa
je
dec
std
fadd
sbb
add
bound
and
cdq
inc
ins
sbb
xchg
bound
jne
fs
jbe
or
div
add
fdivr
aaa
sub
ja
out
pop
mov
sbb
int
ret
mov
daa
retf
mov
mov
fadd
daa
jne
bound
out
retf
daa
fldcw
rcr
xor
cmp
jecxz
(bad)
das
fsub
in
test
das
xchg
mov
ror
das
inc
adc
inc
push
mov
nop
das
xlat
pop
pop
mov
or
fs
lahf
ja
sub
repnz
sbb
fmul
xor
push
and
mov
jns
pop
outs
outs
fmul
imul
aaa
push
jmp
in
aad
inc
dec
xchg
and
inc
mov
inc
inc
jp
pop
ja
pop
pop
daa
inc
dec
push
dec
jle
repnz
dec
push
push
inc
push
dec
add
xchg
jno
mov
mov
fsub
dec
sbb
adc
sahf
adc
xchg
lea
je
rcl
imul
cmovo
mov
enter
cmp
aaa
push
cwde
inc
fmul
inc
pop
pop
or
shr
mov
sbb
and
xchg
call
cdq
add
push
adc
aas
and
ins
and
push
fild
adc
icebp
xchg
and
mov
fwait
jg
mov
pushf
add
jbe
mov
and
add
xchg
add
mov
enterw
sbb
(bad)
mov
fnop
push
mov
js
shl
fsubr
xadd
or
and
ins
push
ror
xor
pop
cmp
jge
add
sahf
add
data16
and
(bad)
mov
sbb
(bad)
or
call
inc
inc
jnp
push
cmp
cld
add
dec
jae
mov
sbb
cmps
xchg
push
sub
jl
inc
sti
and
add
add
and
pop
fs
inc
dec
inc
idiv
rol
gs
mov
cmp
imul
in
cli
inc
and
pop
addr16
sub
xchg
fild
ss
sub
push
arpl
jne
outs
data16
imul
loopne
jno
je
(bad)
sub
cs
add
rol
add
iret
jbe
mov
sub
push
push
iret
shl
dec
jnp
arpl
ds
sub
mov
push
jmp
pop
mov
add
out
movs
dec
pop
xchg
(bad)
pop
rcl
sbb
sub
pop
or
gs
dec
gs
popa
xlat
jl
popa
mov
push
ud0
jmp
mov
xor
inc
xor
not
cwde
sub
sub
cmp
scas
adc
xor
cmp
aaa
sti
aaa
push
ret
int3
push
cs
int3
pop
mov
sbb
ret
(bad)
je
(bad)
sub
shl
sub
and
cli
fimul
adc
add
dec
or
pop
aas
das
pop
scas
pusha
mov
sbb
mov
call
data16
jne
mov
ins
add
fild
add
jne
ja
jo
int
jge
push
push
(bad)
mov
dec
pop
push
nop/reserved
dec
pop
jb
aaa
add
ror
pop
push
shr
out
popf
shr
movs
pushf
pop
dec
shl
fs
dec
sub
cmp
bound
push
push
push
dec
ins
or
sbb
push
mov
dec
sbb
mov
pop
push
pop
push
lods
lock
push
xchg
or
adc
dec
adc
retf
add
push
rol
and
push
lock
aas
ror
data16
ins
stc
mov
xchg
mov
popa
mov
pop
inc
test
jb
inc
shl
push
dec
aaa
or
lock
xchg
or
int3
jae
daa
lea
dec
xchg
loop
xchg
dec
outs
push
push
mov
push
or
push
jecxz
inc
pop
dec
packssdw
dec
xchg
pop
ficomp
dec
lds
mov
je
jmp
and
cli
outs
mov
dec
jmp
xor
lahf
aas
inc
pusha
rcl
pop
(bad)
lock
xor
inc
inc
push
push
clc
dec
test
fisub
push
push
add
fsubr
sbb
adc
adc
pusha
add
and
ins
jl
push
mov
arpl
xor
fisttp
shl
push
push
add
push
fisubr
add
jl
push
inc
neg
or
add
mov
jge
fadd
xchg
push
add
ja
inc
sub
lods
dec
call
sbb
adc
fiadd
sar
mov
and
mov
fst
jo
xor
ficom
(bad)
inc
pop
pop
or
cs
dec
xchg
ja
mov
test
pop
or
mov
jb
dec
ret
mov
outs
push
fisubr
mov
(bad)
mov
popa
xor
dec
iret
dec
mov
arpl
push
cmp
lods
and
or
push
sbb
xor
out
fidivr
pop
mul
jmp
loope
(bad)
inc
ins
scas
mov
cmp
ins
and
xor
inc
aas
ins
(bad)
xchg
les
ret
xchg
mov
or
pop
mov
xchg
sbb
jg
ret
add
inc
bound
dec
pop
xabort
mov
out
rol
ins
shl
mov
push
(bad)
push
imul
das
bound
imul
les
mov
pop
stos
data16
xor
sub
dec
jnp
and
xlat
jne
dec
xchg
cmp
mov
sbb
xor
das
inc
sub
mov
ins
ins
xchg
add
inc
xchg
push
lods
les
jp
or
sub
mov
fidivr
pop
dec
inc
mov
fsubr
jmp
ret
dec
out
add
mov
add
push
push
jns
lahf
neg
add
data16
or
je
daa
mov
push
loopne
stos
cmp
dec
jne
mov
push
lock
outs
mov
out
bound
daa
ja
dec
ins
jg
mov
pop
inc
dec
ja
in
out
push
dec
repz
pop
add
cwde
fs
dec
loope
out
lds
imul
or
fisttp
imul
fs
mov
test
scas
movq
adc
mov
mov
mov
pop
call
jb
jmp
gs
or
pcmpeqd
sub
cs
mov
imul
sub
pop
dec
ret
inc
adc
aaa
pop
pop
mov
inc
sub
mov
pop
scas
push
es
imul
(bad)
sahf
dec
jmp
sub
arpl
xchg
scas
fmul
out
adc
push
into
(bad)
js
jl
pop
sahf
neg
jae
ret
inc
sub
stos
sub
xlat
imul
add
add
inc
ret
mov
and
xchg
push
mov
push
loope
retf
imul
fisubr
shr
les
cmps
(bad)
mov
inc
sbb
inc
add
fimul
lds
add
and
jnp
push
pop
inc
xor
cwde
adc
cmps
push
ror
mov
cmp
mov
stos
shr
xchg
test
shl
add
ja
pop
cmp
push
push
pop
dec
inc
ins
sub
inc
and
mov
mov
and
mov
jg
mov
ret
cmp
(bad)
sti
iret
(bad)
icebp
loopne
push
ja
iret
call
add
scas
jmp
inc
inc
je
add
push
mov
js
push
jns
or
push
mov
mov
dec
arpl
push
pop
inc
ret
mov
dec
add
sbb
test
adc
adc
cmp
sub
mov
arpl
xor
cmp
pop
popa
jae
jb
rcr
jbe
jecxz
ffreep
ret
push
mov
out
adc
xchg
ins
sbb
adc
push
inc
jge
popa
lods
sbb
outs
push
jecxz
shl
data16
or
out
add
and
pop
adc
jae
xor
dec
lods
sub
(bad)
stos
outs
push
mov
es
cmp
jns
inc
sub
sub
inc
cmp
test
xchg
outs
jp
popa
das
xor
push
jbe
sub
nop
shl
lea
(bad)
cmp
jb
cmp
xor
lock
or
push
out
dec
push
and
pusha
scas
fld
test
test
push
mov
push
and
jg
outs
inc
inc
inc
dec
dec
das
dec
dec
inc
(bad)
sysexit
shl
das
ds
dec
out
outs
bound
cmp
cmps
pop
adc
jo
addr16
aaa
lds
pop
add
push
jo
cmp
pop
inc
data16
mov
push
mov
xchg
outs
mov
loop
xchg
jo
cmps
aad
dec
out
fwait
jecxz
test
adc
jae
jmp
mov
stos
adc
dec
lahf
xchg
jmp
shr
outs
sub
xor
(bad)
jbe
dec
inc
mov
pusha
test
(bad)
mov
adc
das
ja
mov
mov
test
dec
or
pop
scas
xor
das
jnp
ja
mov
push
push
scas
outs
in
push
aaa
pop
dec
jmp
imul
les
jb
jg
lds
push
push
stos
add
ja
mov
push
out
addr16
xor
pop
out
ffree
inc
sub
mov
sub
mov
jmp
sbb
fs
imul
sub
cmp
mov
out
cwde
add
inc
jmp
jae
mov
cmp
data16
xchg
cmp
das
inc
cmp
pusha
fistp
sub
and
push
xchg
js
rcr
lahf
pop
dec
jmp
pop
iret
mov
add
inc
mov
and
add
add
mov
mov
xchg
jae
sti
inc
dec
add
push
mov
lock
ja
imul
add
xor
arpl
test
add
sub
cmps
cmp
mov
sub
scas
jp
popa
or
pop
sbb
outs
adc
(bad)
and
lods
inc
pop
inc
or
lods
jnp
add
dec
push
jo
add
lock
inc
push
ja
addr16
lds
aas
daa
cmps
xor
jo
(bad)
fimul
fstp
dec
and
fistp
fisttp
in
add
and
pop
adc
jbe
iret
scas
out
jno
push
add
dec
mov
jns
movs
sub
retf
adc
add
or
add
and
ror
and
cmp
cwde
mov
inc
data16
sbb
popa
sbb
cwde
mov
xor
adc
mov
add
ror
xchg
clc
and
add
inc
dec
dec
dec
mov
loopne
test
or
push
push
dec
dec
dec
sbb
inc
push
and
push
sub
pop
jb
data16
push
ret
push
fisubr
adc
lea
pop
lock
xchg
adc
and
retf
cmp
adc
add
push
lods
xor
push
imul
(bad)
fimul
xor
ja
popa
sub
aas
cmps
fwait
xchg
lock
inc
sbb
add
js
add
push
fld
retf
das
add
fisubr
stos
stos
push
aaa
push
jmp
dec
(bad)
lock
test
push
jae
into
js
pop
push
mov
push
jne
test
dec
ret
cs
adc
icebp
push
arpl
inc
jbe
addr16
jnp
mov
inc
adc
inc
test
shl
mov
fs
add
call
mov
fdivr
push
ficom
inc
inc
iret
inc
jnp
cmp
dec
xchg
pop
push
lds
push
jg
add
push
(bad)
push
sub
ds
push
or
push
add
lahf
pop
xor
ins
arpl
jne
mov
inc
aas
(bad)
push
add
inc
pusha
mov
cmp
push
push
adc
dec
out
das
sti
and
lods
mov
div
push
(bad)
adc
shl
or
aaa
inc
sub
push
(bad)
push
mul
sub
push
jo
pop
daa
data16
xchg
push
sbb
mov
dec
(bad)
cmps
adc
ficomp
sub
inc
cmps
cmp
push
push
out
xor
inc
rol
loopne
dec
test
or
lds
ficom
fistp
add
out
cmps
cmp
rcr
xor
cmp
ja
jnp
xor
test
dec
add
inc
addr16
mov
or
pusha
(bad)
add
add
xor
sub
pop
dec
lahf
cmovo
and
in
dec
out
dec
sub
and
fwait
jecxz
push
jmp
ret
sbb
and
(bad)
loopne
mov
xor
jbe
push
test
cmp
daa
iret
aaa
xchg
xchg
jae
ins
daa
inc
loopne
pop
div
xchg
sti
into
iret
ror
ficomp
inc
dec
sbb
shr
pop
inc
and
lds
in
aaa
mov
mov
add
ja
fsubr
add
mov
mov
pop
and
stos
push
mov
inc
ins
mov
daa
push
mov
dec
xor
push
or
sbb
ja
and
pop
or
rol
sub
mov
push
push
out
aaa
add
dec
and
loope
(bad)
outs
pop
inc
push
inc
inc
out
mov
jp
cmp
ds
ds
(bad)
mov
inc
dec
push
inc
dec
inc
dec
dec
inc
sub
or
pop
inc
pop
aaa
pop
cmp
fimul
sub
sbb
sbb
das
lahf
pop
sbb
jbe
or
sbb
stos
pop
cmp
stos
imul
ja
sar
jo
push
repz
out
jge
push
ja
and
aas
jne
mov
(bad)
out
jo
add
adc
add
fs
mov
inc
xchg
inc
and
jne
add
pusha
sub
push
cmps
xor
fisubr
cmps
jae
(bad)
packssdw
jnp
cmp
or
lods
(bad)
xlat
fidiv
jp
pop
rol
adc
fimul
jo
test
sub
adc
retf
inc
out
pop
add
mov
add
add
push
adc
outs
daa
push
rol
inc
push
dec
sub
push
mov
xor
popa
int
(bad)
daa
movzx
jo
sbb
idiv
test
sar
(bad)
sub
pusha
pop
fwait
sub
pop
es
adc
mov
sub
add
or
lahf
push
add
scas
inc
aaa
adc
sub
add
(bad)
lods
or
(bad)
dec
inc
xor
or
inc
test
out
data16
(bad)
stos
cmps
jo
test
loope
fisttp
inc
inc
fwait
dec
sub
mov
out
xor
pop
xor
and
arpl
xor
retf
imul
sbb
or
mov
ja
add
and
xchg
sub
ret
or
jae
add
mov
mov
in
test
mov
push
and
(bad)
shr
adc
cmp
mov
jno
mov
push
push
rol
retf
xchg
jbe
ins
or
int
pop
xor
stos
mov
popa
xchg
jmp
je
cld
ja
and
dec
inc
dec
inc
push
inc
push
push
adc
inc
mov
and
jmp
(bad)
out
loope
push
das
inc
dec
cli
jo
ins
add
imul
xchg
test
inc
in
dec
push
imul
adc
push
arpl
imul
pop
shl
loopne
xchg
scas
xor
popa
les
mov
sbb
mov
sub
inc
pusha
cmps
mov
jae
push
popa
push
inc
mov
inc
imul
mov
(bad)
out
cmpxchg
mov
(bad)
aaa
add
mov
pop
adc
lea
xchg
cmp
mov
pusha
pop
pop
xchg
sbb
pusha
pop
dec
outs
pop
cmc
test
jne
shr
(bad)
pop
jae
fadd
ret
aaa
mov
ja
inc
inc
mov
inc
fiadd
es
(bad)
sub
out
dec
inc
and
xor
daa
or
dec
adc
push
bound
not
inc
push
mov
pop
dec
xchg
scas
cmp
pusha
sub
inc
and
and
dec
test
imul
jg
(bad)
scas
mov
xchg
fwait
(bad)
rcl
jb
mov
pusha
call
bound
push
jmp
add
sbb
dec
jecxz
jnp
or
ja
dec
pop
mov
xchg
pop
popa
aad
push
cmp
stos
jmp
xor
aam
fwait
inc
mov
sbb
sbb
inc
call
daa
int3
ror
sbb
out
mov
ret
dec
and
mov
pop
add
or
ins
add
scas
jmp
sub
mov
bound
add
push
inc
add
lods
stos
jae
int
pushf
push
dec
cs
retf
sbb
outs
and
or
adc
and
int
mov
or
cmp
ins
das
out
movs
imul
pop
jne
ins
imul
imul
jnp
mov
cmp
push
in
push
xor
xor
pushf
mov
popa
push
xor
scas
pushf
pushf
pushf
xor
ss
je
retf
xchg
add
jo
jo
ins
xchg
dec
push
push
pop
bound
sbb
lock
push
ds
out
aas
js
pop
sub
not
jne
cmp
(bad)
outs
popa
in
out
and
or
arpl
arpl
and
dec
or
rcr
repz
pop
mov
adc
pusha
push
ret
repz
out
loopne
cld
jo
retf
mov
add
inc
int3
adc
xlat
outs
mov
cmp
pop
mov
outs
arpl
inc
out
or
add
add
add
shl
test
or
or
int
shl
lahf
mov
das
or
or
mov
or
mov
ja
lds
out
mov
push
jge
loopne
jle
dec
rep
ss
add
neg
inc
and
xor
and
add
adc
pop
jg
int
xchg
jle
sbb
adc
add
inc
mov
sbb
mov
push
add
loopne
not
or
ss
push
adc
xchg
fidivr
or
inc
adc
aaa
xor
inc
ds
mov
rcr
inc
clc
scas
adc
xor
mov
enter
inc
cmp
jbe
mov
inc
add
push
push
daa
(bad)
or
repnz
jecxz
jno
movs
(bad)
jns
add
push
fnstcw
cwde
push
pop
push
push
xchg
sub
jb
daa
inc
cmp
jg
push
xchg
ficom
mov
data16
pop
popa
mov
or
loope
lahf
inc
push
addr16
stos
xor
(bad)
into
push
mov
sub
(bad)
out
das
fidiv
push
jo
int
or
add
mov
xchg
ret
arpl
push
aaa
adc
or
pop
aaa
pop
arpl
and
das
xor
das
addr16
cmp
push
and
aaa
jbe
dec
cwde
adc
or
jno
dec
retf
iret
and
xchg
lock
daa
jg
add
arpl
pop
inc
popa
test
inc
rcr
lea
jg
aas
adc
test
pop
jo
pop
pop
and
sbb
jbe
movntps
fwait
das
pop
push
pop
sub
jne
rcl
mov
test
scas
inc
ror
outs
arpl
inc
test
or
xchg
pop
jo
sub
add
addr16
jo
or
dec
dec
test
adc
outs
adc
inc
mov
xchg
dec
or
add
dec
add
les
dec
xchg
adc
inc
add
imul
mov
and
mov
pop
dec
inc
outs
sbb
pop
pop
add
in
aas
popa
push
and
rol
fwait
iret
out
sahf
rcl
lock
push
jo
pop
fwait
and
and
sbb
xchg
cld
cs
gs
gs
mov
das
out
cmp
xor
out
cmp
jns
out
inc
xor
mov
jne
or
hlt
add
add
add
xchg
and
add
push
mov
fistp
add
enter
in
les
xchg
(bad)
imul
push
adc
or
lock
add
(bad)
in
(bad)
jge
or
aaa
jne
push
cmp
pop
loope
jle
das
mov
popa
sub
add
ja
dec
jnp
imul
add
mov
dec
mov
das
in
test
jo
addr16
bound
loopne
mov
push
cmps
pop
add
push
or
ins
shl
cmps
mov
push
adc
in
fidivr
pop
rcl
adc
je
pop
iret
in
add
psubusw
sub
dec
outs
cmp
(bad)
dec
mov
mov
retf
cmp
xchg
inc
loopne
daa
inc
lahf
dec
cmovle
data16
je
outs
push
fstp
outs
repnz
jnp
xchg
jp
inc
outs
ins
fs
in
push
jo
popa
jae
jb
add
neg
cmp
adc
xchg
retf
das
ja
lahf
in
sahf
sub
add
or
in
rol
add
pop
lahf
adc
add
jp
leave
or
loopne
test
add
loop
cs
mov
loop
pop
push
pop
dec
mov
xlat
inc
mov
outs
bound
popa
sub
shl
mov
popa
daa
imul
cwde
(bad)
or
or
and
iret
add
mov
dec
cmp
pop
mov
ret
sar
daa
out
inc
or
cs
add
aas
imul
pop
int3
xor
push
(bad)
mov
push
out
inc
xor
sbb
pushf
xchg
and
sub
ss
pop
sbb
dec
mov
popa
js
push
rol
mov
push
ins
dec
mov
in
cmps
int3
mov
pop
lock
sbb
dec
int3
test
nop
push
outs
mov
xor
inc
xor
int3
dec
pop
jnp
scas
iret
inc
cdq
mov
jb
cmp
xchg
cmps
shr
cmp
dec
push
sub
outs
dec
dec
push
stos
and
xchg
ins
or
rol
inc
jbe
mov
pop
daa
xchg
rcl
jle
(bad)
xor
dec
add
fcomp
nop
xchg
imul
mov
(bad)
xchg
push
xor
pop
rcr
les
inc
push
sub
rcr
popf
data16
je
mov
out
bound
xor
call
mov
inc
push
sub
popa
pop
xlat
out
lahf
pusha
push
jae
cmp
mov
pushf
dec
sub
data16
adc
inc
sub
pop
imul
punpckhwd
cmp
test
sub
daa
pop
into
mov
inc
bound
test
jp
dec
sbb
dec
das
cmp
mov
stos
xchg
cmp
xlat
inc
jecxz
mov
inc
stos
pop
inc
pop
nop
paddsb
inc
pop
inc
dec
inc
dec
dec
inc
dec
push
bound
out
and
outs
daa
scas
ret
std
adc
mov
inc
dec
daa
sbb
mov
fcmovb
clc
loopne
mov
aaa
pop
xchg
cmp
and
xchg
add
ins
stos
das
add
in
cmp
mov
mov
out
mov
sub
xor
lahf
adc
adc
mov
rcl
(bad)
sub
push
or
sahf
pop
mov
cmp
ins
and
pop
cmp
das
and
loope
jmp
pop
push
pop
inc
mov
sahf
fisubr
inc
push
inc
pop
push
adc
pop
jb
mov
pop
sub
xlat
sub
popa
fwait
mov
and
ss
xchg
daa
lahf
(bad)
push
adc
movs
jno
dec
add
(bad)
pop
ret
cmp
sbb
dec
cs
push
jbe
add
ja
push
lods
inc
call
xor
mov
bound
and
push
xchg
(bad)
pop
adc
icebp
dec
push
sub
mov
push
add
fisttp
pop
in
lods
sbb
bound
xor
push
mov
outs
ret
xor
das
repnz
arpl
and
cmps
imul
enter
and
jl
add
loopne
mov
int
push
(bad)
xor
lock
and
xchg
stc
outs
pop
and
and
dec
call
inc
aaa
sahf
int
mov
jle
retf
lock
pusha
jo
fwait
out
mov
inc
out
cmp
repz
pusha
nop
shl
fld
ss
or
out
add
mov
mov
sub
jne
cs
push
cld
loop
(bad)
or
je
jbe
test
jne
ds
shl
add
loope
xchg
scas
outs
jae
sti
mov
test
xlat
xor
nop
push
xor
mov
mov
sub
cmp
ja
push
enter
shl
push
das
outs
inc
inc
push
cmovge
or
inc
jp
sub
dec
and
and
jno
add
cmp
lahf
cmps
(bad)
es
imul
push
push
aas
sbb
add
fsubr
aaa
inc
push
popa
adc
push
ja
pop
dec
cmps
xor
fcomp
jbe
add
je
js
inc
aad
fcomp
or
addr16
sbb
imul
fsub
pop
inc
cmps
fsub
cs
add
adc
xor
sahf
out
nop
mov
loopne
or
out
cs
push
inc
and
add
push
jl
js
add
push
pop
push
push
xor
(bad)
and
push
(bad)
ins
jbe
pop
in
lds
inc
and
inc
pop
cmps
push
out
jne
add
imul
(bad)
push
pop
iret
or
test
add
pop
jno
(bad)
mul
mov
bound
outs
cmp
daa
loopne
push
push
in
out
cmp
jo
xchg
cmp
pop
lods
adc
test
js
xor
js
pop
pop
loop
ja
inc
mov
shl
jne
add
(bad)
repz
(bad)
and
mov
push
leave
sbb
mov
outs
call
dec
pushf
jbe
aam
and
daa
push
je
push
add
arpl
mov
ja
dec
je
inc
sbb
xor
das
xor
add
sub
daa
sub
cmp
and
hlt
pop
dec
int3
(bad)
push
cmp
mov
jg
adc
xchg
xlat
mov
es
push
pusha
sub
mov
cmp
or
xchg
add
pop
ret
out
sub
aam
jmp
fstp
pop
(bad)
pop
ins
fwait
or
or
inc
push
sbb
rcl
lock
out
sahf
out
and
inc
push
sahf
out
sahf
pusha
jo
nop
mov
jns
shl
sbb
adc
cmp
repz
nop
sbb
cli
popf
out
sbb
jne
data16
neg
xlat
popa
add
hlt
pop
cmp
jo
rcr
add
and
ficomp
adc
ja
push
xor
popf
fdiv
xor
push
adc
ins
addr16
xor
mov
out
mov
push
mov
inc
lods
lock
mov
push
or
ror
pusha
push
loopne
outs
imul
sbb
jecxz
add
push
sub
mov
imul
and
xlat
xor
popf
add
jbe
cmp
or
push
jae
out
jl
push
and
je
push
out
cmp
xchg
pop
fild
das
dec
pop
pop
add
add
pop
push
mov
sahf
dec
and
push
push
pushf
sub
inc
clc
in
movs
lods
mov
pop
adc
sar
mul
(bad)
xor
call
je
jo
das
das
xlat
mov
jo
rol
inc
add
enter
aaa
or
mov
ins
adc
pop
fwait
or
dec
pop
push
add
loop
add
inc
xchg
stos
sbb
jae
aas
add
mov
push
adc
xchg
ss
pop
cs
sbb
xor
cmp
push
add
dec
dec
lods
inc
cmp
dec
inc
ret
neg
push
aam
movs
push
xchg
inc
adc
mov
jnp
mov
(bad)
xor
aas
push
inc
js
lahf
fimul
fucomip
mov
cmps
stc
adc
pop
adc
test
jae
int
sub
mov
add
loopne
(bad)
mov
std
int
cmp
aaa
dec
loope
int
push
outs
shl
or
and
jb
je
jo
movs
push
gs
jp
xor
inc
xor
jne
fidiv
push
ret
push
mov
inc
mov
sbb
dec
xchg
pop
js
mov
sub
add
jbe
(bad)
fbld
jp
lods
sbb
aaa
bound
das
sbb
data16
(bad)
fild
imul
pop
xor
add
pusha
or
(bad)
mov
and
int
and
rcl
(bad)
mov
or
repnz
ds
and
stos
out
jne
(bad)
pop
dec
adc
cdq
sbb
mov
xlat
leave
pop
test
cmp
add
and
inc
cmps
and
pop
mov
xchg
xchg
cwde
xor
loopne
dec
pop
nop
push
sbb
das
pop
or
xchg
stos
mov
rcl
jo
movs
or
sub
idiv
outs
xor
dec
dec
pusha
mov
mov
pop
inc
add
mov
mov
sub
add
mov
jo
das
dec
jae
inc
int3
push
xchg
js
push
test
push
inc
sbb
xor
popf
out
lods
adc
push
push
push
mov
mov
outs
xor
and
push
pusha
mov
and
add
lds
inc
jl
daa
add
arpl
jp
cdq
and
adc
xor
jbe
adc
sbb
xor
lock
js
inc
push
mov
inc
bound
or
inc
add
popa
mov
adc
inc
jecxz
aas
jmp
fs
bound
shl
sbb
es
test
adc
stos
xchg
loop
mov
dec
fisubr
ficomp
addr16
cmp
push
sbb
add
mov
add
or
xchg
xor
in
and
mov
inc
mov
imul
xor
pop
sbb
sbb
out
add
out
arpl
xor
popa
inc
in
loopne
and
das
enter
mov
test
and
fs
cmp
inc
mov
sub
or
xlat
mov
fs
add
shl
push
or
inc
mov
mov
pop
and
ss
lock
inc
jne
daa
lods
push
les
add
mov
aaa
mov
or
add
push
sbb
out
das
sub
push
imul
push
lahf
cmp
nop
push
add
out
mov
adc
pop
jbe
nop
mov
adc
imul
pop
lods
sbb
addr16
add
cmp
mov
jl
ins
xor
jg
jbe
mov
dec
scas
mov
icebp
outs
aam
movs
lahf
aas
sbb
mov
mov
js
jmp
add
mov
(bad)
xlat
pop
cmp
inc
pop
push
inc
dec
int3
add
add
dec
push
inc
addr16
sub
clc
das
add
xor
inc
pop
inc
jbe
cmps
cmps
das
sub
add
push
or
mov
ja
and
cmp
add
sti
ret
pop
add
cmp
test
loope
jno
inc
jae
gs
sub
sbb
inc
enter
add
arpl
stos
(bad)
jne
cmps
addr16
xchg
mov
dec
test
xchg
movs
arpl
fucomip
mov
je
jo
push
es
or
mov
sbb
aaa
cmps
pusha
dec
cmps
fwait
(bad)
rol
sbb
xor
hlt
lahf
dec
leave
push
xchg
or
xor
data16
das
mov
les
cmovns
popa
rcr
push
cmp
iret
push
jmp
mov
adc
daa
ja
inc
sub
jl
sbb
dec
push
dec
dec
and
or
pop
wbinvd
outs
daa
push
pop
sub
bound
popa
outs
cmp
mov
pop
dec
inc
inc
test
jne
and
pop
jmp
xchg
ret
rol
cmp
ja
jbe
mov
cmp
lods
pop
out
sbb
mov
popa
jns
jo
(bad)
daa
adc
push
xchg
push
adc
dec
lods
cmc
in
(bad)
mov
dec
dec
mov
adc
and
repnz
and
mov
ja
sub
push
jp
adc
or
and
sbb
pop
je
jmp
lods
adc
adc
or
lahf
pop
adc
fmul
push
call
jmp
add
dec
pop
push
iret
and
push
shl
push
mov
push
outs
test
das
imul
fsubr
dec
cmp
sar
lods
xor
push
mov
sub
mov
out
out
retf
fsubp
sbb
and
sbb
dec
lods
lea
mov
mov
fwait
daa
sbb
add
xchg
or
imul
push
sbb
sahf
pop
jp
pop
xchg
arpl
lds
ja
or
rol
mov
lods
xchg
mov
iret
dec
test
mov
inc
loop
das
outs
sub
int3
hlt
cmp
push
shl
dec
cmp
mov
ficomp
movs
or
sub
push
mov
fwait
(bad)
mov
add
test
stc
sar
fldenv
push
retf
(bad)
out
fcmovnb
pusha
dec
rcl
jge
add
arpl
ds
loopne
dec
pop
xchg
inc
xor
scas
dec
cmp
call
pop
or
out
xor
fwait
pop
out
jno
bound
stc
pop
pop
fdiv
popa
sub
and
in
aaa
or
call
mov
pop
jg
fild
(bad)
popf
pop
mov
adc
sbb
push
rcr
rcl
push
hlt
dec
into
add
xchg
outs
and
jmp
sub
sub
jge
sub
or
popa
mov
retf
lahf
jbe
lock
xchg
imul
and
imul
mov
mov
push
jne
ror
pop
stos
inc
sbb
sbb
stos
(bad)
jmp
sbb
and
mov
lds
das
daa
xchg
ret
xchg
test
sub
or
cmp
push
nop
sub
das
inc
stos
inc
add
dec
dec
sbb
outs
ins
pop
shl
(bad)
das
test
aaa
xor
push
xchg
push
mov
pop
jae
pop
mov
pop
xchg
sub
arpl
stc
jp
aad
pop
in
and
and
inc
push
out
push
fisubr
sbb
dec
xor
push
(bad)
fsub
sbb
popf
xor
and
and
nop
sbb
jge
push
sbb
pop
stos
sub
lods
test
jecxz
adc
jg
cdq
adc
xor
sub
addr16
add
adc
sub
bound
pop
push
aas
push
and
inc
fst
mov
mov
test
inc
push
lock
mov
adc
sbb
add
enter
pop
lea
neg
inc
popf
pop
movs
dec
push
sub
stos
fldcw
ss
test
xor
inc
and
imul
mov
dec
mov
jg
je
cmp
pop
outs
data16
shl
cmp
lea
push
cmps
data16
cmp
call
sbb
ds
pop
and
and
or
daa
daa
add
xchg
nop
pop
inc
dec
push
(bad)
fstp
push
in
pop
pop
inc
retf
and
or
jno
loopne
aas
sbb
test
xchg
sbb
push
and
inc
pop
cmps
adc
xor
fcomp
jge
outs
aas
lods
and
or
rcr
add
sbb
jecxz
je
rol
mov
sbb
push
int
adc
mov
inc
fsub
not
ds
sahf
and
shl
inc
scas
lahf
mov
cmps
mov
lock
pop
jo
mov
in
pop
lahf
(bad)
out
mov
mov
fs
lock
push
rcr
inc
or
mov
(bad)
std
cmp
sar
and
fimul
test
inc
add
sar
aas
and
adc
sub
es
loop
push
jno
outs
je
xchg
mov
test
sbb
shl
dec
sbb
(bad)
lahf
push
inc
int3
sub
cmp
ret
push
add
addr16
rcl
pop
add
ins
jno
jno
sub
dec
and
dec
outs
arpl
imul
test
jne
and
dec
inc
retf
add
sub
inc
outs
arpl
popa
fmul
jno
(bad)
fisub
xor
add
bound
and
arpl
cdq
clc
je
loope
popa
test
fild
out
and
loopne
xor
xchg
dec
inc
daa
loope
pop
add
add
pop
es
mov
mov
mov
mov
das
pop
jp
in
sti
pop
sub
jbe
jb
mov
cmp
jl
mov
and
bound
arpl
adc
inc
xor
aas
hlt
add
or
in
fisttp
jno
and
xor
shr
lahf
cdq
or
push
or
jg
jns
cmp
jbe
cmp
ins
rol
ds
pop
add
xchg
pop
addr16
pop
rcl
mov
loope
jecxz
in
cli
lock
inc
mov
mov
push
fs
sahf
jp
cmp
mov
xor
mov
and
dec
jne
jecxz
imul
in
out
pop
ds
loope
pop
ret
rol
or
mov
daa
test
mov
outs
mov
out
pop
enter
and
dec
arpl
fs
mov
jo
xor
and
and
mov
cli
sbb
jl
(bad)
jno
iret
mov
and
call
push
and
jns
dec
inc
(bad)
adc
adc
pop
cmp
(bad)
loope
push
push
xor
and
cmp
add
pop
sub
or
js
fwait
aas
scas
xchg
cdq
ret
aas
dec
push
stos
push
add
pop
imul
jne
iret
pop
mov
enter
xchg
(bad)
cmp
cmp
and
addr16
jle
retf
sub
mov
sahf
mov
adc
or
lock
push
pusha
repz
add
mov
in
pop
dec
ds
aas
icebp
push
in
fisub
jg
(bad)
out
inc
das
lock
cmp
cld
xlat
fidiv
test
cs
cmc
imul
data16
in
pop
mov
cdq
adc
(bad)
outs
add
jg
das
mov
test
dec
enter
xchg
inc
push
add
mov
pop
or
inc
inc
arpl
mov
loope
(bad)
in
cmps
or
sub
call
pop
arpl
repnz
sub
pop
add
sldt
add
int3
out
cmovo
push
add
shl
outs
scas
(bad)
fmul
xadd
pop
or
fsubr
inc
into
outs
and
add
leave
fxch
and
jmp
jo
(bad)
inc
and
jmp
add
push
dec
in
fist
ret
add
enter
dec
pop
and
call
fxch
lods
xchg
and
xchg
xchg
xchg
mov
pmuludq
inc
shr
mov
addr16
das
and
add
loop
scas
ror
mov
xchg
and
(bad)
rol
(bad)
enter
in
verw
ror
fcmovne
fcmovne
sbb
retf
leave
enter
aas
xchg
in
pusha
pop
rcr
xchg
inc
sub
div
cmp
jecxz
mov
aas
cdq
xchg
fucomi
in
imul
mov
xchg
and
dec
mul
outs
loopne
add
dec
into
outs
daa
mov
sahf
pop
ror
divps
xor
jbe
jnp
or
iret
pop
jbe
cmp
mov
sbb
pop
dec
xor
and
jmp
dec
in
loopne
frstor
inc
fneni(8087
das
mov
in
in
xchg
je
leave
leave
leave
push
inc
xor
das
call
cmp
shl
std
xchg
div
inc
neg
inc
cld
sahf
sub
and
adc
fs
aas
inc
push
(bad)
(bad)
stc
call
aas
(bad)
ss
pop
xchg
dec
pop
mov
jo
cmp
cmp
iret
jmp
pop
arpl
(bad)
retf
or
aas
in
das
(bad)
sti
push
xchg
xchg
pop
dec
pop
test
aas
inc
pop
adc
push
clc
dec
push
test
aas
test
xor
outs
out
retf
pusha
and
inc
rcl
(bad)
mov
inc
call
jmp
jmp
jb
mov
and
xlat
mov
aas
push
add
pop
cld
call
xor
(bad)
fadd
aas
dec
je
stos
mov
inc
scas
daa
jp
ret
aas
mov
gs
outs
mov
pop
je
push
jbe
(bad)
fwait
and
ret
dec
push
pusha
nop
fs
idiv
iret
inc
lds
push
lds
js
movs
pop
(bad)
aas
clc
out
pop
jmp
inc
cli
pop
dec
enter
mov
rcr
push
mov
aas
adc
push
ror
(bad)
fistp
sub
xor
retf
xchg
mov
scas
adc
or
mov
mov
(bad)
stc
dec
int
sub
mov
into
mov
repnz
jle
jecxz
mov
data16
mov
push
ss
outs
jle
(bad)
js
aas
add
or
icebp
cmp
mov
into
adc
mov
(bad)
out
test
lock
or
xchg
aas
ds
nop
movs
inc
cli
fstp
call
aas
pop
aam
call
lods
push
fistp
ds
cmc
xor
(bad)
(bad)
mov
pop
jno
aas
fdivp
jecxz
rcl
dec
pop
pop
inc
test
aam
fwait
outs
(bad)
aas
ins
cld
sti
dec
mov
sbb
add
int
mov
out
pop
adc
pop
sub
mov
cmp
add
(bad)
(bad)
cld
jge
cmp
xchg
jle
(bad)
aas
les
and
mov
out
xchg
int
cld
int
loop
nop
jle
and
xor
jg
jno
outs
outs
(bad)
jg
shl
scas
mov
mov
fdivr
jbe
retf
add
cmp
jg
fwait
mov
jno
push
call
sahf
rcr
fnstcw
addr16
mul
ds
jg
stos
pop
test
(bad)
mov
or
xor
in
outs
jg
lea
jne
dec
jle
mov
mov
nop
xor
pop
shr
stc
(bad)
ds
gs
fstp
pusha
pop
sahf
or
dec
js
(bad)
cld
int
push
and
or
outs
mov
inc
inc
(bad)
std
int
xor
sbb
mov
and
aaa
(bad)
add
call
push
sar
loop
stos
mov
sub
loop
fwait
outs
(bad)
jg
xor
aas
loope
mov
or
add
shl
outs
jle
push
sub
jo
sahf
xor
fist
pop
cmps
mov
jnp
sahf
ins
std
push
popf
imul
test
sbb
out
mov
adc
sub
and
into
js
mov
cld
out
(bad)
fmulp
push
push
shl
movs
push
adc
push
pop
inc
xor
mov
dec
mov
(bad)
inc
rcl
sbb
retf
je
arpl
pop
push
and
out
inc
mov
jmp
mov
jno
jg
jg
add
adc
enter
aas
jp
sub
mov
push
outs
push
cmps
adc
xor
sahf
xor
mov
outs
out
clc
dec
cmc
add
mov
adc
fist
cld
push
movs
mov
call
xlat
outs
push
and
push
cmp
jg
push
ds
and
int
jl
(bad)
iret
and
outs
xor
enter
mov
cmp
inc
lahf
div
xor
inc
or
cld
jmp
hlt
and
cdq
retf
(bad)
mov
pop
sub
push
call
movs
aaa
cmps
jb
mov
ds
sti
call
xchg
(bad)
(bad)
mov
dec
push
aas
sahf
ja
cdq
imul
out
xor
sbb
outs
jle
sbb
aam
inc
scas
dec
shr
cmp
pusha
sbb
out
aaa
(bad)
jns
call
mov
sub
adc
out
jmp
sbb
inc
push
jg
jo
clc
adc
sbb
repz
outs
lock
or
sar
pop
xchg
aaa
xor
mov
jg
xchg
mov
or
jle
ins
inc
(bad)
shl
mov
jg
repz
shl
xor
push
and
aas
cmp
sti
sar
jge
add
pop
mov
mov
mov
push
mov
push
inc
in
enter
sahf
mov
iret
mov
jbe
cmp
sar
sar
repz
outs
ss
ins
(bad)
push
lods
int
or
(bad)
mov
test
call
cmp
xchg
in
cmc
add
pop
cld
retf
sti
fwait
aas
(bad)
mov
nop
test
cmp
es
pop
jmp
(bad)
(bad)
std
(bad)
mov
mov
outs
xchg
inc
jle
loop
jge
mov
arpl
jmp
(bad)
ds
or
pop
repnz
and
movs
or
inc
(bad)
out
push
jg
mov
out
(bad)
push
ins
cmp
ds
mov
pusha
xor
call
sar
icebp
xor
lods
arpl
mov
aaa
or
and
and
jo
xchg
mov
mov
pop
and
call
adc
shr
stc
ret
ss
ret
cmp
aaa
fbld
add
sub
jecxz
xor
cmp
sar
sti
scas
mov
mov
in
sar
fimul
lock
ds
pop
or
xor
mov
mov
mov
pop
in
js
mov
sbb
cli
ret
pop
and
mov
retf
adc
imul
xlat
cdq
mov
daa
aaa
sahf
mov
(bad)
stos
(bad)
(bad)
(bad)
stc
idiv
cmp
mov
retf
add
stos
xor
jmp
clc
or
les
sahf
mov
mov
dec
sbb
neg
mov
jne
mov
sbb
fdivr
test
mov
out
fist
scas
jmp
(bad)
hlt
mov
mov
cmp
cmp
xlat
mov
xlat
jl
data16
add
js
sahf
jg
(bad)
std
push
scas
repnz
xor
push
and
jg
mov
inc
inc
sub
movs
dec
sub
lahf
jmp
pop
or
xor
repnz
mov
inc
push
jp
push
push
jge
xchg
mov
icebp
add
or
aas
jecxz
mov
fwait
or
pop
sub
mov
sub
loope
jg
js
les
ja
int
mov
in
mov
out
paddd
leave
leave
leave
std
cld
sti
cli
leave
leave
leave
leave
stc
clc
div
leave
leave
leave
leave
cmc
hlt
repz
leave
leave
leave
icebp
lock
out
leave
leave
leave
leave
in
in
jmp
leave
leave
leave
leave
jmp
leave
leave
leave
in
jecxz
leave
leave
leave
leave
loope
(bad)
leave
leave
leave
leave
fstp
fcmovnu
leave
leave
leave
leave
(bad)
xlat
(bad)
in
leave
leave
aad
rol
in
ror
into
in
in
int
retf
retf
in
leave
enter
in
in
(bad)
jns
in
add
lock
daa
daa
outs
cmp
femms
push
daa
daa
daa
daa
push
push
or
daa
or
daa
daa
daa
or
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
or
pop
pop
daa
daa
daa
daa
pop
pop
push
push
daa
daa
daa
daa
push
push
add
daa
add
daa
daa
daa
add
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
add
add
fmul
es
aas
or
inc
jl
push
and
push
popa
xor
or
and
paddw
add
xor
sbb
push
or
aas
aaa
cmp
mov
leave
dec
ds
mov
xchg
inc
retf
dec
imul
repz
(bad)
sub
xor
leave
cwde
push
aas
sub
lods
sub
jp
(bad)
(bad)
jg
add
mov
fisttp
rcl
push
aas
in
adc
xchg
mov
inc
jmp
(bad)
call
pop
aas
mov
cli
(bad)
hlt
inc
es
jg
fild
fisttp
aas
loopne
or
fild
inc
sahf
clc
jmp
mul
sbb
mov
cld
push
aad
and
cli
lahf
push
nop
pop
dec
pusha
xor
iret
(bad)
aas
(bad)
aas
xor
lock
dec
gs
xor
dec
cwde
cld
push
jmp
inc
div
sbb
pushf
xor
pop
mov
dec
jmp
(bad)
push
aas
ficomp
jb
add
imul
and
fbld
adc
stc
int3
mov
sar
stc
ins
aas
ds
(bad)
(bad)
stc
push
jl
cmp
aad
imul
adc
mov
aam
clc
outs
out
jmp
push
jp
add
or
jno
adc
cmc
push
inc
(bad)
out
(bad)
out
pusha
loope
xchg
jge
pop
add
pop
test
mov
fld
sub
jg
push
fstp
push
jae
mov
mov
fbld
or
lock
push
in
shl
enter
iret
(bad)
mov
xor
xor
or
and
jbe
out
adc
test
(bad)
(bad)
out
xor
inc
pop
dec
jle
sbb
stos
ja
jno
inc
or
mov
push
gs
xor
or
fist
rcr
aas
lds
mov
jg
repz
add
and
sub
int
mov
retf
(bad)
jp
mov
rol
ss
jnp
rcr
mov
ret
jl
ja
xor
mov
dec
mov
pop
sub
inc
ficomp
sbb
sahf
and
jns
jle
jl
outs
(bad)
cld
and
scas
sti
push
cmp
pop
sbb
mov
pop
inc
fwait
(bad)
clc
inc
pushf
pop
mov
ficom
lea
jg
neg
cmp
push
cmp
(bad)
je
push
int3
lea
dec
push
xor
shl
iret
push
and
mov
cmp
aaa
ret
in
jg
and
shl
popf
data16
call
dec
add
push
ret
sbb
adc
cli
sub
lahf
mov
push
mov
sub
xchg
fild
adc
jmp
std
int
std
inc
push
fadd
sbb
pop
and
aam
adc
cmp
sbb
push
cmp
out
mov
hlt
neg
mov
jecxz
test
cli
iret
(bad)
std
repnz
clc
aad
dec
push
clc
rcr
adc
mov
cs
and
out
(bad)
iret
mov
cld
std
out
dec
mov
and
xor
aam
(bad)
out
fild
fsubr
ret
inc
fsub
(bad)
repnz
inc
sbb
(bad)
jg
mov
inc
xchg
daa
stos
xor
imul
pop
mov
push
fwait
sbb
int3
xchg
retf
fwait
mov
mov
pop
mov
inc
iret
push
gs
ins
cli
sbb
jg
jmp
mov
cmc
jne
sar
aam
cld
dec
mov
cdq
jl
mov
(bad)
mov
aam
mov
inc
dec
pop
lock
sar
in
retf
je
push
daa
movs
jno
and
pop
rol
jl
adc
out
(bad)
fs
sub
pop
dec
ins
es
add
test
cwde
shl
test
(bad)
jg
out
mov
add
call
cs
loope
(bad)
cld
int
sub
lea
jbe
dec
mov
jmp
outs
mov
jo
call
mov
xor
(bad)
hlt
int3
jp
outs
out
fucom
or
add
jo
add
(bad)
(bad)
jns
sti
test
jl
push
xchg
or
dec
loopne
inc
(bad)
mov
jmp
sbb
outs
mov
mov
aaa
call
or
mov
push
or
add
jmp
or
rcl
mov
(bad)
mov
mov
scas
cwde
shr
dec
mov
repnz
push
push
es
sbb
test
imul
mov
cmp
repz
jmp
push
add
sub
imul
mov
popa
cmp
fldcw
sbb
repz
out
fistp
dec
push
dec
mov
jge
sbb
in
and
cld
(bad)
jnp
ins
mov
es
xor
jnp
push
mov
mov
adc
cmp
out
aaa
call
pop
loop
gs
inc
(bad)
mov
fs
jg
idiv
scas
xor
push
ret
mov
sbb
inc
push
inc
cmps
jg
jmp
cdq
fiadd
xor
clc
(bad)
jnp
bound
(bad)
out
push
mov
sbb
repz
jle
pop
mov
popa
xchg
(bad)
aas
(bad)
mov
sahf
jb
rcl
push
xchg
pusha
mov
movs
push
jo
mov
mov
(bad)
jbe
jmp
inc
pop
mov
mov
jbe
mov
sbb
pop
mov
mov
out
xor
mov
imul
and
dec
hlt
pop
or
jle
pop
ficom
pop
sbb
xor
dec
inc
sahf
inc
aaa
adc
jmp
(bad)
mov
mov
mov
dec
cdq
ins
std
nop
sbb
jno
stos
jne
dec
jp
(bad)
jle
push
cmp
jl
call
inc
push
dec
push
mov
mov
(bad)
aas
pusha
aaa
mov
into
xor
repz
mov
std
mov
inc
push
sbb
xor
and
das
(bad)
adc
out
(bad)
(bad)
sar
cmc
or
push
mov
inc
mov
lea
aas
inc
fldenv
inc
mov
and
mov
(bad)
loopne
repz
mov
mov
in
lahf
scas
lea
cmp
cmp
pushf
dec
sub
cmp
pop
adc
adc
mov
(bad)
fistp
sbb
pop
rcl
addr16
aad
inc
inc
adc
daa
inc
mov
inc
inc
mov
dec
cmp
in
jb
cmp
ss
xor
leave
in
in
xor
cs
outs
daa
mov
sub
pop
daa
mov
outs
and
pop
and
cmp
and
outs
sbb
in
in
sbb
push
pop
daa
mov
xchg
adc
adc
setge
dec
outs
pop
or
jbe
cmp
add
in
add
call
std
adc
in
ss
pop
cli
stc
add
jb
cmp
xor
rep
repnz
in
jbe
pop
out
in
in
outs
mov
fcmovne
jmp
pop
call
dec
outs
daa
jecxz
loop
outs
fistp
cmp
fcmovnu
outs
in
in
jb
(bad)
pop
aad
outs
mov
fcmovne
rcl
pop
iret
into
outs
int3
dec
dec
outs
daa
retf
pop
leave
enter
popf
fsubr
les
ret
in
in
jb
mov
xchg
xchg
fcmovne
mov
dec
outs
daa
mov
outs
mov
pop
scas
scas
cmp
stos
pop
stos
test
in
jbe
cmps
movs
pop
movs
mov
mov
popf
dec
outs
daa
mov
outs
call
popf
fsubr
xchg
pop
xchg
nop
mov
adc
mov
mov
sahf
mov
popf
pushf
outs
fwait
jb
cmp
fwait
call
jb
xchg
xchg
outs
xchg
leave
in
in
xchg
xchg
xchg
aas
xchg
fcmovne
leave
leave
xchg
xchg
nop
nop
outs
mov
xchg
xchg
(bad)
mov
daa
daa
daa
mov
dec
outs
outs
mov
pushf
fdivr
xchg
mov
add
jle
in
jbe
outs
jl
jnp
leave
leave
in
jp
jns
js
xchg
fcmovne
ja
outs
jbe
daa
daa
mov
je
aas
jae
jno
outs
daa
daa
jno
outs
outs
outs
pushf
fmul
outs
ins
aas
ins
ins
cmp
outs
push
jb
cmp
push
in
jb
gs
arpl
in
in
bound
aas
pusha
fcmovne
leave
leave
pop
pop
pop
pop
outs
mov
xchg
xchg
pop
pop
pop
pop
aas
pop
daa
daa
daa
daa
pop
pop
push
push
dec
dec
dec
outs
outs
push
push
push
push
popf
pushf
pushf
fdivr
push
push
push
push
cmp
cmp
dec
aas
jb
jb
dec
dec
dec
dec
in
in
dec
outs
dec
dec
dec
push
in
or
ud0
sar
cld
outs
push
mov
add
and
mov
fdiv
call
dec
sar
push
mov
add
xlat
ds
(bad)
pop
dec
dec
sbb
out
call
fnstsw
mov
es
jg
add
fst
frstpm(287
lahf
push
daa
jo
in
(bad)
sub
sar
inc
fadd
jmp
ds
es
stc
dec
fistp
add
cmp
popf
mov
cld
mov
ds
jns
mov
or
arpl
retf
mov
inc
icebp
ds
test
mov
pop
shl
or
or
mov
inc
hlt
xchg
mov
retf
sti
inc
pusha
or
cmc
xchg
jmp
(bad)
bound
inc
cwde
or
idiv
mov
mov
dec
std
loope
into
fmul
int3
push
add
ds
mov
inc
cld
push
call
cmp
ret
es
adc
cld
ds
or
mov
mov
pusha
ins
xchg
jb
inc
pop
or
sar
and
out
call
aas
stos
push
(bad)
(bad)
int3
cmp
iret
pop
push
(bad)
or
add
mov
and
adc
es
neg
add
lea
and
pop
xadd
inc
mov
(bad)
out
mov
aas
inc
jbe
aaa
stc
xchg
xor
in
inc
add
jno
ins
scas
mov
ins
sub
adc
and
idiv
in
fs
add
and
push
aas
jmp
cld
loop
or
mov
and
aas
xor
cdq
or
xchg
sbb
jecxz
jb
hlt
sti
loopne
(bad)
fucomip
cmp
sub
or
sub
dec
addr16
mov
xchg
push
jle
mov
pop
jb
add
aas
fcomi
jae
shr
inc
sub
jg
int
rcl
mov
mov
aad
test
outs
out
(bad)
call
and
out
jo
pusha
jno
pop
dec
and
cld
bnd
ja
inc
not
pop
xor
mov
mov
aam
inc
out
xchg
dec
aas
iret
jmp
pop
test
aas
daa
push
lock
out
(bad)
out
sub
data16
xor
mov
inc
pop
sti
push
inc
adc
(bad)
std
push
add
outs
jnp
pop
fist
nop
out
addr16
and
std
out
sbb
sbb
pop
(bad)
mov
sahf
cmp
push
call
sbb
xor
popa
sbb
out
call
adc
or
mov
sbb
push
leave
pop
dec
mov
push
rol
jg
mov
rcr
and
aas
aam
outs
jle
call
adc
xor
sub
add
call
sti
and
rcr
mov
pop
jo
xor
jl
aaa
pop
and
scas
cld
int
das
ret
and
pop
mov
dec
sbb
ret
outs
lock
daa
xor
inc
adc
sahf
sub
stc
fwait
mov
mov
mov
add
aas
repnz
push
dec
mov
test
pusha
ja
push
xor
mov
call
rol
adc
dec
cmp
adc
aas
and
(bad)
sub
in
add
mov
sub
pop
ds
xor
(bad)
push
stc
clc
sbb
sbb
fiadd
clc
jg
xor
push
bound
add
clc
cmp
loopne
push
lods
cmps
test
data16
inc
sbb
sub
test
movs
sbb
fnstcw
mov
fwait
lock
pop
(bad)
loop
mov
daa
cmp
sbb
int3
jnp
(bad)
jle
mov
dec
pop
loope
mov
or
iret
rcr
fistp
aas
movs
jmp
add
inc
jo
cld
jnp
scas
and
dec
call
out
inc
sar
stos
out
cmc
or
inc
and
mov
jne
and
scas
cld
int
cmp
inc
or
es
dec
loopne
jg
outs
xlat
cmc
outs
mov
dec
xor
aaa
mov
int
mov
rcr
xor
dec
lock
jmp
add
dec
into
dec
push
push
aas
or
daa
mov
push
(bad)
pop
stc
fwait
mov
inc
scas
inc
jbe
add
aas
sub
inc
mov
push
pusha
dec
and
loope
mov
in
lahf
mov
cmp
adc
aas
jmp
ror
(bad)
jle
scas
sub
dec
mov
push
push
jle
lds
mov
fcmove
and
xor
stc
fwait
enter
adc
push
nop
and
mov
and
aas
mov
and
lahf
or
push
push
repz
adc
out
inc
cs
jne
inc
cmp
(bad)
std
int
test
mov
push
fld
xor
sub
cmps
push
mov
xchg
mov
aas
mov
and
and
cmp
mov
fwait
lahf
jg
pop
js
jns
inc
cmp
inc
adc
popf
shr
fisttp
cmp
sbb
cmp
fild
ja
adc
jle
int3
inc
sub
ss
and
sahf
daa
pushf
xchg
loope
fisttp
push
test
scas
or
js
dec
jge
add
dec
adc
test
int
mov
pop
jb
pop
inc
fcomp
lock
add
push
lods
popf
retf
aas
mov
sbb
rol
xchg
xor
sbb
dec
pusha
jg
in
push
push
cmp
loope
fsubr
stc
fwait
sub
mov
dec
call
jmp
jnp
cmp
cmp
cmp
movs
push
ja
pop
stc
fwait
mov
dec
mov
fstp
add
(bad)
out
fild
repnz
or
cmp
sbb
and
fs
push
add
mov
jmp
aas
jle
dec
jl
or
xor
push
les
out
pop
mov
repz
ret
dec
pop
push
pop
mov
sbb
ror
adc
pop
mov
enter
adc
(bad)
mov
inc
repnz
adc
movhps
movs
retf
fwait
sub
jg
rcr
push
mov
ins
mov
mov
stc
popf
fwait
loope
sub
aam
lds
push
movs
shl
mov
pop
mov
(bad)
jl
das
push
mov
fs
call
adc
adc
sbb
jmp
xor
xor
sahf
xlat
lahf
jno
sbb
push
test
mov
add
out
and
aas
adc
pop
mov
stos
ja
pop
push
xor
and
es
in
(bad)
adc
dec
xchg
pushf
cmp
inc
rcr
mov
inc
test
repnz
ja
jg
(bad)
xor
jne
inc
retf
adc
fcomp
int
mov
pop
sti
clc
mov
xchg
mov
ja
scas
js
call
mov
pop
ret
sbb
mov
out
mov
aas
mov
scas
pop
mov
dec
sub
fistp
adc
pop
cmp
dec
and
push
jg
in
pop
loopne
movs
nop
xchg
sub
or
(bad)
out
(bad)
out
adc
jl
sbb
sbb
inc
mov
loop
dec
and
test
pop
cmp
loop
cld
int
mov
icebp
adc
jecxz
loope
cli
mov
outs
scas
fsub
(bad)
stc
and
jmp
fist
mov
xchg
sub
shr
out
(bad)
mov
in
push
push
adc
je
and
dec
repnz
ret
test
mov
ret
mov
sti
add
push
stos
cmp
jl
xor
int
mov
inc
shr
add
adc
call
fdivr
cmps
(bad)
sbb
xor
mov
outs
int
jmp
(bad)
out
jmp
cli
mov
cs
inc
mov
jae
xchg
mov
or
add
aad
dec
mov
int
dec
jg
push
mov
xor
sub
outs
jle
xlat
lahf
cmps
and
cs
inc
sti
mov
jge
std
(bad)
std
xchg
push
retf
lahf
(bad)
or
xor
iret
stc
aas
sub
lahf
or
cld
loopne
test
mov
fstp
push
inc
and
or
cmp
(bad)
or
xchg
ffreep
scas
xchg
dec
cld
fdivr
or
clc
neg
lahf
fwait
lods
xor
pop
rcr
mov
outs
jle
(bad)
rcr
add
pop
adc
pop
inc
cdq
retf
mov
mov
add
mov
repnz
mov
lahf
push
push
or
mov
hlt
dec
loopne
dec
mov
(bad)
mov
cld
int
mov
std
mov
aas
push
xor
repnz
aas
pop
in
or
mov
out
push
sti
fwait
sub
(bad)
dec
mov
out
xlat
shr
fwait
mov
js
sbb
pop
cmp
jg
popf
retf
stc
(bad)
jbe
sbb
call
fisttp
xor
jmp
mov
push
shl
jmp
mov
std
mov
sub
inc
sbb
dec
pop
loopne
lahf
std
out
fbstp
adc
(bad)
xor
xchg
push
scas
movs
out
(bad)
cmp
inc
xchg
add
fmul
cmp
jg
in
push
dec
xchg
fld
shl
pop
out
aas
adc
ds
jmp
add
fild
mov
lods
jbe
cmps
out
jg
outs
jg
dec
jmp
inc
lock
push
inc
clc
pop
push
sub
fistp
loop
mov
push
inc
fiadd
pop
or
add
fld
inc
mov
or
dec
repnz
push
or
outs
scas
cld
mov
inc
push
repz
adc
(bad)
cli
add
out
das
cli
xchg
repz
and
imul
push
(bad)
cmp
dec
test
aas
sub
stc
xchg
jmp
pop
jmp
push
adc
or
mov
jmp
xor
aas
push
push
push
test
or
aaa
or
push
std
mov
loopne
xor
out
mov
mov
cmp
in
(bad)
fwait
push
jg
adc
add
enter
push
inc
call
(bad)
push
mov
mov
test
(bad)
stc
mov
inc
call
pop
repnz
push
sbb
xchg
xchg
mov
repz
mov
push
mov
repz
repz
or
mov
hlt
push
mov
xlat
push
dec
push
inc
push
retf
sub
call
cmc
mov
iret
test
xchg
idiv
hlt
mov
pop
stc
stc
shr
aas
inc
xchg
cmp
inc
pop
test
repz
fldl2t
pop
cmp
repnz
shr
fwait
mov
push
in
inc
push
pop
pop
test
aas
idiv
mov
adc
cmp
xor
jg
mov
or
sub
cmc
jg
mov
jle
mov
idiv
mov
call
fwait
retf
in
mov
jo
aaa
clc
jmp
ins
fnstsw
adc
xor
sbb
clc
(bad)
jmp
cmps
out
dec
jmp
cdq
out
pushf
pop
stc
jg
lock
jmp
mov
xor
xor
sti
jg
mov
int3
lahf
jno
shr
pop
sti
jmp
mov
cmp
(bad)
mov
jmp
mov
xor
inc
cld
jg
mov
stos
sahf
cmp
sahf
fistp
push
fistp
pop
jle
mov
push
dec
cmp
mov
mov
jle
inc
std
call
scas
cmp
mov
sar
xlat
ret
cmp
ss
(bad)
call
mov
out
fcomip
jg
outs
push
retf
mov
push
push
cmp
(bad)
mov
loope
inc
outs
out
aaa
out
jmp
(bad)
inc
adc
shl
push
mov
pop
push
ror
(bad)
jmp
mov
(bad)
(bad)
jg
add
mov
les
out
push
fs
cmps
ret
jns
arpl
jg
push
mov
inc
imul
out
mov
xor
push
push
mov
mov
cmp
xor
sub
(bad)
call
pop
push
adc
call
ja
sbb
nop
mov
mov
repz
movs
loop
lea
neg
sub
es
loop
xchg
mov
jmp
mov
inc
xchg
test
cmp
repz
retf
xor
popa
xor
js
xchg
cmp
mov
ins
pop
mov
popa
fmul
cmps
cwde
cmp
inc
jb
xchg
int3
jmp
push
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
jnp
daa
pop
cmp
(bad)
(bad)
(bad)
sbb
(bad)
scas
data16
jnp
dec
(bad)
in
fwait
imul
icebp
aas
cmp
call
int3
xor
sub
movs
ins
mov
mov
mov
call
ss
call
enter
stos
out
mov
jnp
(bad)
push
jge
mov
xlat
mov
jmp
seta
and
call
jne
outs
jmp
mov
dec
pop
mov
pop
add
loopne
jmp
jg
imul
xor
stos
mov
cmp
mov
cmp
frndint
and
stc
int
in
mov
(bad)
mov
cmp
adc
xor
xchg
dec
pop
push
in
movs
xchg
xchg
jle
cmp
(bad)
jg
jne
jp
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
pop
movs
hlt
hlt
mov
inc
mov
imul
inc
cdq
xor
fild
jge
aas
mov
dec
call
sahf
push
adc
cmp
fldcw
jg
fcmovbe
jg
mov
or
or
in
test
aam
fist
int
inc
add
test
aad
bswap
jno
adc
push
repz
in
outs
mov
push
xor
dec
cld
jo
push
jl
sbb
push
cld
call
sar
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
fwait
(bad)
fild
inc
dec
pop
out
pop
mov
jno
jmp
data16
jg
add
add
cmp
xchg
sahf
mov
(bad)
mov
in
mov
sub
aaa
clc
jmp
xor
dec
cmps
fidivr
int
fidivr
ficomp
lods
add
cli
push
repz
push
stc
and
xchg
outs
(bad)
(bad)
(bad)
mov
or
hlt
aas
js
xor
repz
mov
cmc
xor
dec
(bad)
ffree
cmp
add
fwait
dec
cmp
add
aaa
(bad)
mov
dec
xchg
pushf
cmp
cmp
mov
xchg
bound
cmp
rcl
(bad)
jmp
lock
(bad)
retf
cdq
cmp
sub
aad
mov
xchg
repz
or
fdiv
js
mov
cmps
sub
jbe
stc
(bad)
(bad)
(bad)
jg
push
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
(bad)
das
push
ficomp
setb
movs
push
ds
lahf
jmp
mov
inc
outs
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
(bad)
(bad)
cld
jmp
sbb
cmp
dec
fld
stos
inc
inc
add
mov
pop
mov
leave
cli
int
outs
push
mov
dec
cmp
dec
and
out
xor
cmps
sti
out
scas
push
or
jbe
loope
idiv
inc
ficom
inc
loop
push
cmp
int
jle
mov
jle
and
int3
xor
inc
xor
aaa
(bad)
fwait
(bad)
and
xor
xchg
mov
mov
cld
jmp
aam
and
cmp
cmp
sahf
mov
xor
push
fstsw
rcr
or
addr16
mov
das
sbb
mov
call
cmp
cmp
push
stc
jge
test
and
je
outs
mov
jne
idiv
cdq
jp
xchg
add
mov
test
mov
jmp
shr
push
pop
and
pop
fimul
cmp
push
sub
add
mov
add
jae
mov
ja
test
shl
in
rcl
push
ror
cmp
dec
iret
ss
jns
(bad)
(bad)
call
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
xlat
xor
mov
sbb
int
mov
in
xchg
inc
fwait
mov
push
clc
(bad)
lahf
mov
(bad)
mov
mov
repz
push
call
inc
in
es
xchg
jmp
mov
xor
(bad)
in
cmp
jecxz
xor
jo
sub
xchg
jecxz
adc
test
outs
mov
or
stc
aas
and
in
int
aaa
aaa
push
mov
dec
inc
pop
addr16
inc
pop
cmp
movs
xchg
jl
jbe
push
dec
ficomp
fld
rol
mov
mov
xchg
mov
lock
les
jl
cmp
sbb
loop
(bad)
mov
js
and
cmp
in
jnp
or
aad
pop
dec
pop
int
outs
mov
in
fwait
xor
stos
fdivr
xor
mov
push
loope
mov
fld
popf
mov
sahf
jns
arpl
retf
fwait
cmp
std
jns
imul
std
test
jp
sar
out
xor
(bad)
mov
lods
rcr
lahf
call
int
xchg
cmp
mov
sub
push
sti
aas
and
or
fwait
(bad)
ficomp
mov
test
pop
and
pop
in
jb
ds
(bad)
jmp
ins
mov
mov
jbe
cmp
mov
mov
repz
push
sar
sahf
mov
push
int3
test
add
outs
(bad)
cmp
push
xlat
pop
ret
pushf
imul
std
pushf
push
test
mul
jp
cld
aas
fnstsw
dec
(bad)
push
call
inc
push
or
and
inc
fwait
cmp
rcl
icebp
lods
cmp
dec
call
mov
push
xchg
ins
pop
dec
mov
nop
out
fsub
mov
outs
(bad)
jg
dec
jmp
cmp
ret
pop
push
or
jb
adc
(bad)
mov
std
jg
mov
dec
sub
jp
inc
aaa
fidivr
das
push
ja
popf
pop
cld
out
jno
dec
popf
mov
sbb
aaa
pop
xlat
add
ds
or
stc
(bad)
in
push
jecxz
pop
call
push
xchg
mov
out
xor
out
aaa
call
and
ret
js
ficom
xor
cld
pop
dec
sbb
movs
sub
(bad)
push
adc
and
add
mov
cs
push
(bad)
int3
test
cmp
aaa
(bad)
mov
push
jp
lea
and
xchg
cmp
nop
movs
mov
pushf
fistp
mov
mov
dec
iret
push
mov
call
daa
pop
popa
out
sbb
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
jg
dec
cmp
inc
outs
pop
jbe
mov
cdq
cmp
mov
dec
jmp
xor
popf
mov
shl
dec
xchg
arpl
sub
shl
jns
xchg
je
bound
test
(bad)
push
and
cld
inc
rdtsc
addr16
jg
push
aas
mov
imul
cld
jmp
lds
aas
out
cmp
cs
shl
popa
pop
mov
xchg
pop
outs
(bad)
and
mov
(bad)
loopne
and
and
or
(bad)
inc
add
adc
(bad)
fsub
jno
jmp
mov
div
inc
or
sbb
xchg
cmp
jecxz
gs
add
push
or
fwait
(bad)
sbb
dec
dec
rcl
ret
mov
cmps
mov
inc
or
pop
jnp
(bad)
jb
add
pop
jg
pop
das
sbb
ds
push
out
xchg
outs
cmovo
add
xchg
add
and
sti
enter
push
sbb
cmps
and
loop
dec
movs
mov
movs
adc
pop
pop
mov
xor
pop
inc
adc
or
pop
inc
call
jo
bound
ins
ficomp
(bad)
push
nop
push
pushf
mov
sub
xchg
(bad)
fisubr
outs
xchg
cmp
int3
or
inc
add
sahf
in
jae
adc
cmp
int3
pop
pop
jnp
fs
mov
push
cmp
pop
neg
dec
and
iret
lock
fs
repnz
mov
and
jns
repnz
mov
add
mov
xchg
mov
mov
push
cmp
push
repnz
(bad)
aam
lahf
mov
push
adc
cmp
push
(bad)
and
ror
pop
enter
mov
imul
lock
push
mov
push
adc
ja
adc
dec
add
je
jb
jae
inc
xchg
push
pusha
je
cs
mov
mov
(bad)
out
mov
mov
mov
out
ja
(bad)
push
adc
lock
xchg
loopne
imul
xchg
mov
mov
inc
add
dec
(bad)
xchg
out
add
ins
add
je
ror
sahf
xlat
pop
xlat
call
mov
mov
mov
push
int3
add
or
dec
xor
jbe
cmp
mov
outs
pop
ja
and
fimul
mov
mov
ja
cmp
aad
data16
mov
mov
scas
or
iret
jnp
test
push
mov
push
lock
rep
push
mov
xchg
js
inc
dec
and
and
(bad)
or
loopne
rol
(bad)
or
mov
ror
cmps
mov
pop
aaa
push
and
add
fsub
ss
add
inc
adc
add
fst
xlat
push
pop
fadd
push
push
clc
xchg
loop
out
outs
cmp
int3
mov
(bad)
int
add
add
add
mov
or
xor
jg
fidivr
add
add
data16
nop
cmovnp
add
mov
mov
or
in
rcl
data16
add
adc
cmp
mov
sar
add
rol
loopne
mov
add
pop
add
mov
inc
inc
mov
test
nop
out
cmps
js
nop
xchg
jl
sbb
ss
or
scas
mov
ss
in
hlt
aas
(bad)
fmul
push
mov
cwde
mov
push
inc
xchg
push
mov
cdq
mov
xchg
fs
xor
(bad)
fidivr
(bad)
jo
push
cmp
cwde
mov
pusha
ret
sahf
int
mov
lahf
adc
or
adc
cmp
inc
sahf
ss
inc
push
pop
add
fs
test
mov
movs
cdq
pusha
arpl
mov
aas
(bad)
movs
pop
add
mov
cld
push
mov
add
dec
mov
mov
inc
out
pshufw
mov
mov
mov
mov
push
jo
into
fiadd
lahf
shr
mov
out
nop
add
xlat
clc
mov
and
sbb
seto
xlat
les
jnp
pop
jg
add
fs
mov
pushf
ja
pusha
push
dec
data16
ja
ret
mov
xchg
int
jecxz
mov
les
add
mov
ins
push
xor
test
pop
pop
fdiv
cdq
xchg
out
shl
add
loope
add
test
mov
inc
push
push
scas
mov
and
push
rcl
push
inc
dec
adc
cdq
mov
repnz
lds
popf
sub
rol
cmp
in
iret
rol
mov
mov
loopne
test
lock
mov
das
shl
jns
cmp
add
and
in
sahf
jo
cwde
imul
mov
inc
xlat
pusha
shr
scas
aas
dec
mov
test
mov
push
call
ret
test
dec
ret
pop
(bad)
fbld
ret
mov
das
rol
jmp
test
aas
iret
or
add
fcomp
jae
in
aas
(bad)
aam
inc
es
ret
(bad)
mov
sub
cmp
mov
inc
loope
ja
lahf
fiadd
xchg
ret
jl
in
mov
cmp
mov
es
pop
lods
push
ins
scas
push
sub
les
daa
sahf
in
mov
cmp
movs
push
lds
mov
ins
push
dec
add
mov
in
(bad)
aam
imul
call
in
xor
fild
sbb
outs
lds
and
inc
(bad)
outs
loope
xchg
lds
and
pop
pop
lds
jo
or
jae
jp
pop
lds
cmp
jnp
clc
dec
push
lahf
(bad)
jns
or
outs
cmp
in
test
ja
sub
arpl
dec
jns
jnp
dec
jecxz
outs
mov
and
jo
ins
inc
push
add
cwde
push
fcom
and
cmp
pop
add
dec
sbb
adc
add
loop
add
cmps
(bad)
cmp
jo
add
mov
(bad)
xor
mov
outs
nop
dec
sahf
push
nop
pop
(bad)
push
lods
fs
add
dec
adc
(bad)
cmp
pop
pop
mov
inc
pop
addr16
add
lock
sbb
out
cmp
mov
es
(bad)
ins
sbb
cmps
pop
enter
dec
sub
das
imul
retf
mov
daa
addr16
push
lock
leave
xor
push
fs
inc
out
cmp
inc
sbb
xchg
dec
jae
ja
mov
mov
retf
(bad)
dec
lock
cmp
ja
test
sub
aam
adc
mov
les
jbe
aaa
test
ja
cmp
retf
fs
mov
jns
rcl
dec
(bad)
(bad)
fadd
enter
mov
xchg
xor
cld
mov
pop
aas
add
fidiv
fmulp
cmp
dec
ja
add
or
cmp
retf
pushf
in
sbb
adc
enter
leave
lods
retf
lock
or
aam
in
add
inc
stos
pop
rcr
inc
daa
inc
sar
dec
inc
int3
push
push
mov
pop
add
in
(bad)
pop
pop
in
dec
ja
fbld
xchg
int
sub
loopne
iret
cmp
clc
sahf
addr16
iret
js
test
int
push
xor
jb
jp
dec
in
int
call
adc
cwde
sahf
pop
enter
sar
fidivr
and
int
int
xchg
mov
mov
adc
repz
clc
cmp
add
mov
cmps
xchg
dec
nop
xchg
dec
stc
mov
daa
into
and
aas
add
dec
dec
sub
fs
jo
add
aas
pop
loope
jb
outs
pusha
int
mov
into
js
mov
out
or
or
iret
mov
xor
daa
or
pop
bswap
push
ja
and
iret
pop
mov
fisttp
jmp
sahf
in
jno
pop
iret
int3
push
rcl
nop
iret
cmp
mov
rcl
rcl
sbb
cmp
cmp
fimul
mov
test
sar
ss
ss
mov
sar
test
je
pushf
push
xor
iret
loopne
mov
push
inc
ror
xchg
lods
in
xchg
iret
leave
xchg
aas
add
ja
pop
iret
ror
iret
sbb
enter
aas
pop
add
xchg
add
out
add
nop
lods
(bad)
mov
aas
pop
iret
mov
rol
ja
aam
stos
cmp
daa
shl
jmp
jbe
mov
xchg
fisub
das
shl
ins
out
and
jp
das
aam
shr
push
shl
inc
hlt
cmp
cwde
das
jmp
or
aam
js
aaa
fwait
adc
shr
push
jmp
or
sbb
icebp
mov
xor
js
daa
mov
mov
add
push
lods
fcom
pusha
xchg
adc
jle
and
xchg
add
leave
mov
ja
in
lock
outs
add
add
pop
aas
aaa
or
aam
jbe
nop
mov
push
aas
cmp
daa
mov
rcl
ja
or
aam
push
aam
daa
pop
lock
das
aam
aad
push
xchg
pop
(bad)
jecxz
repnz
adc
xor
sub
add
js
sub
das
pop
and
sbb
ss
add
nop
adc
lock
(bad)
add
or
aad
stos
sbb
jbe
daa
xchg
or
xlat
inc
add
pushf
inc
dec
jb
adc
in
adc
or
adc
in
cdq
movs
sbb
pop
in
adc
pop
xlat
sbb
adc
sub
cmp
mov
xlat
(bad)
pop
pushf
pusha
mov
mov
xlat
pusha
fsub
out
test
int3
xlat
daa
fstp
xor
xlat
aam
fdiv
ins
xlat
fsubr
fmul
test
int3
push
or
fdiv
push
xlat
pop
dec
xor
mov
dec
rol
nop
adc
out
xlat
les
stos
popf
fcomp
ja
test
int3
scas
cld
(bad)
fld
ret
lahf
fldcw
inc
hlt
mov
jns
push
cmp
in
sub
cmp
jo
sbb
cmp
in
sbb
sbb
iret
outs
retf
jae
ds
fadd
ss
xor
xchg
mov
mov
inc
ficomp
push
and
inc
in
nop
adc
or
fcomi
cs
movs
jo
pusha
add
mov
pushf
test
je
push
inc
faddp
fisub
daa
nop
mov
dec
mov
out
fstp
mov
and
or
ja
mov
test
push
into
nop
fisub
pop
fld
nop
add
sbb
je
fild
fst
push
dec
sar
xor
int3
pop
scas
(bad)
mov
dec
sahf
rcr
(bad)
addr16
dec
shr
xor
push
push
jb
add
add
dec
in
fidivr
inc
push
je
lock
outs
and
or
(bad)
pxor
pop
inc
loope
daa
xor
fdivr
nop
inc
jb
out
adc
and
and
xor
pushf
pusha
popa
iret
cmp
inc
xchg
frstor
sbb
test
ins
push
mov
jns
jl
add
sahf
mov
hlt
mov
xchg
fidivr
ror
in
dec
sub
addr16
(bad)
jnp
mov
daa
lock
ins
in
popf
fmul
ficomp
pusha
aas
mov
cdq
fcomp
(bad)
cmp
mov
addr16
retf
jl
push
cmp
mov
call
sbb
test
push
push
ret
scas
aaa
inc
mov
(bad)
push
add
push
pop
mov
push
enter
pusha
push
jo
jo
pusha
pop
ja
jbe
sbb
jbe
lahf
or
popa
out
dec
dec
enter
or
add
push
loopne
push
iret
out
cs
xor
or
adc
inc
loopne
outs
loopne
push
xor
adc
jg
loopne
push
push
fbstp
popa
leave
add
daa
fcomip
push
test
inc
xchg
jmp
inc
aas
daa
in
inc
test
push
fdivr
dec
lods
cmp
and
or
cmp
test
sbb
sub
jg
ins
cmp
ja
dec
and
ss
outs
cmp
dec
adc
jae
subps
mov
(bad)
xchg
sahf
or
je
in
hlt
and
(bad)
aas
(bad)
addr16
ffree
outs
lahf
ja
ffree
outs
push
das
jl
mov
jg
loop
loop
loop
add
shl
mov
cmps
ins
ja
lods
pushf
cmps
or
mov
loop
mov
jns
sbb
fwait
clc
jecxz
int3
dec
in
pop
enter
cmp
or
call
ja
repnz
cwde
pop
enter
repnz
inc
xor
call
js
out
jecxz
push
cld
in
cwde
or
add
mov
in
lahf
fs
seto
in
and
rol
lds
mov
pushf
or
nop
add
inc
mov
pop
repnz
in
and
ins
fdivr
lahf
enter
ja
data16
in
xchg
cs
repnz
sbb
mov
inc
pop
xchg
add
pop
or
fldcw
jo
or
pop
(bad)
and
js
sar
xchg
mov
cmps
stc
cmp
js
fmul
mov
popf
idiv
push
xchg
mov
mov
mov
jl
out
jnp
fild
mov
out
repz
pop
nop
shr
mov
cmp
iret
repz
and
repz
push
js
icebp
adc
cmp
jecxz
mov
cmp
test
adc
jns
cwde
enter
out
mov
fdivr
out
cmp
fnstenv
pop
xchg
cmp
out
mov
and
iret
repz
sar
mov
sahf
out
nop
ret
stc
cmp
js
jns
iret
rcr
test
int
ret
pop
mov
out
sahf
fs
sar
sub
popa
mov
sar
xor
into
push
out
call
mov
repz
fmul
enter
paddusw
jns
leave
jb
rol
retf
repz
out
imul
jns
mov
ins
mov
out
xor
popa
xor
adc
xchg
push
push
jo
cmp
cmp
loopne
and
push
js
clc
jl
cmps
stc
sub
cbw
enter
ds
rol
ret
and
jns
out
js
shl
rol
push
out
out
mov
or
outs
push
js
sar
loopne
aad
js
out
ins
ds
stos
xlat
out
fcomp
out
sahf
jno
shl
fxch
sar
push
xor
test
adc
inc
push
xchg
shl
out
repz
fcom
dec
repz
push
inc
push
test
sbb
dec
test
cmp
jns
jns
out
(bad)
loope
mov
repz
loop
mov
sahf
out
mov
in
xchg
cmp
out
sar
push
in
enter
sti
sbb
pop
push
mov
iret
mov
repz
out
fstp
jmp
call
mov
jmp
ds
sar
pop
mov
out
mov
push
jnp
repz
ror
cmp
fld
out
ds
pop
push
retf
das
repnz
iret
mov
clc
xor
inc
js
jns
jns
div
push
push
test
or
es
jle
out
idiv
inc
cli
test
fsubr
repz
sub
or
mov
push
mov
sar
nop
mov
mov
clc
sub
push
test
sahf
out
loopne
add
lock
cwde
shl
add
enter
pop
xchg
sahf
out
iret
enter
push
inc
push
jnp
ds
sar
cmp
xor
sar
(bad)
push
sbb
js
idiv
iret
mov
bound
out
push
nop
retf
repz
jge
or
add
sahf
in
mov
jle
pop
adc
mov
sahf
ja
or
ds
repz
call
xor
cmp
ja
out
js
loopne
sbb
repz
add
(bad)
sbb
out
ds
push
mov
sbb
mov
repz
loopne
sbb
dec
repz
push
jae
add
dec
mov
push
and
repz
out
jl
and
call
mov
fistp
and
scas
daa
fild
sahf
data16
jb
add
sti
sahf
out
jl
sub
sub
xchg
loopne
iret
sar
mov
xor
cmps
stc
xor
movs
xor
and
arpl
fsub
xor
adc
ds
repz
mov
repz
pop
cmp
cmp
repz
pop
cmp
lock
cmps
stc
sub
xchg
in
dec
cmp
push
in
repz
pop
cmp
mov
repz
popf
aas
push
js
inc
es
sbb
jnp
dec
scas
test
xchg
inc
inc
push
ret
push
data16
inc
jb
sub
inc
out
ss
call
push
jne
aaa
xor
add
call
inc
push
or
or
mov
mov
sbb
and
out
or
sbb
pop
leave
test
inc
nop
jmp
fs
push
leave
aam
mov
jbe
mov
cmc
jg
push
aas
fs
out
and
pop
in
clc
jg
push
shl
btc
aaa
pop
jns
pop
ss
dec
mov
sub
fiadd
sbb
jg
xor
inc
mov
sar
xor
mov
repnz
shr
dec
ss
ds
lock
and
push
inc
dec
xchg
pushf
sub
push
ret
pop
mov
das
jg
mov
in
adc
jbe
sbb
sub
fst
leave
and
jbe
fbstp
adc
aas
mov
cmp
and
ds
xchg
sti
mov
or
lods
jg
push
xchg
mov
sbb
sbb
adc
push
sub
sub
push
mov
stc
or
enter
call
daa
adc
repnz
sub
push
xchg
stos
dec
and
sbb
rol
fcomp
push
fdiv
mov
or
(bad)
cmp
bound
fistp
repz
test
xor
daa
jl
ja
mov
iret
dec
or
cmovb
or
add
mov
popf
mov
push
(bad)
ja
prefetch
or
push
pop
inc
cmp
(bad)
push
cmp
dec
pop
ja
pop
and
out
mov
jne
fstp
cmp
outs
jbe
add
(bad)
js
retf
outs
leave
sbb
test
les
jb
push
enter
clc
inc
fimul
cmp
inc
ss
daa
test
cmc
adc
sub
cmc
dec
movs
lea
mov
pop
dec
mov
mov
mov
pushf
fs
add
mov
shr
(bad)
ins
js
iret
aaa
and
in
adc
out
ja
or
daa
inc
ds
adc
out
mov
sub
popf
nop
push
add
test
jbe
popa
inc
pop
sbb
sbb
cwde
xlat
enter
mov
addr16
popf
nop
or
add
test
mov
sbb
neg
nop
les
mov
in
pop
jb
mov
add
test
mov
in
inc
fdiv
pushf
in
clc
or
xor
pusha
dec
cmp
mov
xor
add
call
pushf
mov
inc
mov
jecxz
popf
in
stc
and
adc
xor
pushf
mov
mov
push
jnp
mov
ja
push
add
pop
daa
mov
cmp
aad
mov
cmp
cld
shld
fimul
cmp
xchg
dec
cs
fs
cs
dec
mov
xchg
fild
mov
sub
and
adc
xor
and
inc
pop
cmps
ja
ss
sar
mov
push
add
dec
dec
ret
push
pop
sti
int3
cmps
repnz
mov
clc
cmp
leave
inc
mov
cld
sub
sub
and
xchg
and
cmps
adc
xchg
imul
mov
dec
dec
js
pop
cmp
sub
add
cwde
std
xor
and
aaa
ja
jo
pop
rcl
scas
in
add
adc
scas
inc
outs
xchg
pushf
xchg
mov
sbb
and
sbb
test
test
outs
xor
(bad)
push
out
test
xchg
dec
cs
mov
sub
test
test
lock
add
mov
jmp
sbb
cmp
xchg
pushf
and
xor
je
mov
mov
mov
and
sbb
fdivr
stos
stos
enter
push
or
adc
pop
pop
mov
test
add
push
xor
popf
pushf
push
pop
ja
jo
and
inc
adc
pop
and
pop
mov
xchg
xchg
add
pop
push
mov
add
xor
fs
punpckhbw
nop
nop
les
xlat
lock
jb
clc
add
and
sbb
lods
and
pop
jo
test
aad
aaa
push
mov
shl
out
fld
add
les
or
or
enter
mov
push
add
push
fcom
daa
addr16
pop
xor
icebp
sahf
lahf
push
pusha
(bad)
lods
xchg
ss
pop
add
in
nop
add
shl
inc
shl
and
jb
scas
scas
push
adc
push
dec
inc
mov
add
mov
out
mov
sub
jg
push
pop
ss
cs
cmps
in
mov
add
cld
das
add
out
popf
mov
add
cs
fsub
in
inc
and
scas
adc
sbb
or
lds
add
pop
adc
push
jecxz
les
sub
hlt
add
xor
push
cmp
pushf
nop
sub
mov
and
mov
add
cmp
jmp
or
mov
enter
mov
je
jb
mov
arpl
push
push
mov
clc
inc
jne
xchg
mov
or
add
add
icebp
mov
pop
shl
mov
adc
daa
nop
iret
mov
mov
xor
cs
pusha
shl
pshufw
xchg
ss
add
xchg
je
enter
inc
jb
call
movs
sbb
mov
add
cmps
push
mov
in
mov
push
pushf
pop
mov
cmps
or
or
cmps
mov
or
xchg
xchg
xchg
mov
loope
pushf
dec
adc
test
mov
jno
and
xchg
pushf
inc
into
push
mov
dec
sub
or
hlt
daa
and
xchg
mov
dec
mov
push
nop
sbb
loope
cwde
xchg
pop
fbstp
push
mov
inc
jb
push
push
cmp
mov
add
pop
xchg
add
clc
or
jg
inc
ja
pushf
fs
jg
or
iret
es
xchg
pop
lock
mov
repnz
mov
sbb
clc
jg
daa
or
movs
adc
add
cmp
mov
inc
push
add
xchg
jbe
push
ror
push
or
repnz
lgs
dec
push
or
dec
and
push
sub
push
mov
mov
push
inc
add
push
mov
enter
ror
cmp
enter
fiadd
jmp
mov
add
wrmsr
lahf
pushf
dec
and
mov
inc
add
dec
add
shr
jbe
seta
mov
movs
inc
push
adc
dec
and
pop
shl
mov
dec
pop
xor
pusha
mov
push
sub
mov
xor
call
adc
or
mov
sub
mov
hlt
jo
cmp
mov
jbe
enter
cmp
dec
add
xchg
push
leave
dec
gs
test
inc
pop
pi2fw
iret
andps
jbe
psubb
and
cmps
add
adc
dec
daa
shr
fdivr
mov
in
sub
cmc
jmp
mov
pop
or
loopne
mov
xor
adc
pop
pop
mov
imul
pop
scas
dec
daa
ja
push
je
xchg
dec
mov
iret
mov
mov
mov
jbe
les
movs
daa
aam
popf
in
pushf
mov
adc
adc
sub
sub
mov
push
sbb
add
add
lea
inc
add
xchg
xchg
add
mov
je
shl
and
mov
or
adc
jbe
je
push
push
mov
mov
cwde
in
or
mov
mov
xor
rol
fld
in
cmp
jno
add
push
sbb
in
ss
push
call
adc
enter
and
bound
mov
add
ins
pusha
fistp
add
imul
add
clc
inc
dec
jb
ds
imul
pop
adc
daa
push
outs
or
or
(bad)
sub
or
leave
pop
aam
mov
xchg
adc
mov
xor
or
xchg
sbb
inc
xchg
dec
movs
(bad)
in
stc
scas
mov
in
enter
dec
and
aam
dec
dec
leave
mov
sbb
or
dec
idiv
movs
mov
addr16
mov
cmps
data16
mov
sbb
in
in
sbb
inc
dec
ffreep
shl
sbb
ja
or
mov
ds
mov
xchg
dec
neg
test
add
daa
mov
or
call
adc
rcr
in
sbb
pop
aaa
das
sbb
add
add
and
scas
xor
and
sbb
ud1
and
nop
hlt
and
in
and
push
sbb
dec
pop
sahf
loope
mov
clc
add
add
shl
shl
sub
add
xchg
sbb
mov
mov
mov
jg
cmp
jmp
mov
or
daa
sbb
leave
or
in
stos
addr16
jo
push
sbb
nop
mov
mov
daa
cmp
loopne
in
jl
add
lods
push
sub
daa
cmp
inc
leave
sub
or
jne
push
jo
cwde
out
test
ret
enter
test
mov
mov
nop
outs
ret
and
push
inc
push
jo
pop
push
fmul
inc
daa
push
dec
leave
dec
std
pop
mov
fidivr
inc
dec
fistp
rol
push
dec
mov
mov
addr16
data16
adc
sahf
js
jae
or
daa
pop
mov
ret
xlat
adc
and
les
nop
add
lods
lahf
(bad)
loopne
cmp
add
lock
int3
scas
lahf
fsub
and
daa
sbb
and
jmp
mov
(bad)
and
je
data16
es
dec
test
invd
das
sub
imul
xchg
xchg
mov
cmp
adc
sub
scas
jb
add
xchg
mov
cmp
pop
and
pop
push
mov
push
add
add
(bad)
push
sbb
gs
adc
call
leave
test
scas
(bad)
cmp
loopne
bound
outs
daa
and
daa
pop
pop
mov
mov
inc
add
enter
pop
add
add
jb
jl
mov
cwde
or
mov
stc
jb
enter
paddw
(bad)
or
inc
mov
adc
adc
adc
push
push
arpl
jae
into
fisubr
jnp
or
mov
xchg
or
fwait
or
pop
and
nop
mov
jne
mov
enter
add
(bad)
in
and
in
jo
and
and
cmps
add
or
cmp
xchg
outs
xchg
pushf
inc
cs
arpl
push
call
dec
mov
es
add
leave
or
sbb
pushf
xchg
clac
pusha
es
push
mov
jb
mov
daa
dec
and
in
cmp
mov
cwde
ret
pusha
xchg
rol
and
or
in
and
addr16
inc
mov
in
xor
xchg
out
fs
add
pushf
add
shr
jb
dec
sub
sub
sub
daa
dec
mov
retf
push
sub
daa
push
jb
cmp
inc
push
sbb
push
in
jbe
push
sub
fs
out
jnp
dec
inc
sub
add
in
test
int3
scas
add
cdq
(bad)
in
and
sub
add
and
xchg
pushf
in
retf
loopne
pop
mov
ins
cmp
and
sub
pushf
pop
push
imul
inc
ss
int3
mov
mov
cmp
int
addps
dec
addr16
dec
mov
xchg
push
sbb
or
int
ja
xchg
mov
or
sub
and
adc
push
outs
fld
jno
leave
sub
sub
daa
dec
jmp
cmp
sub
sub
dec
sbb
movs
mov
daa
daa
adc
sub
into
into
into
mov
xlat
and
and
xchg
xchg
sub
mov
xchg
add
daa
pop
leave
mov
iret
lods
jo
fisub
mov
jbe
dec
mov
xor
cs
rcr
jmp
xor
je
jo
and
mov
loopne
cmp
add
daa
cs
add
scas
xlat
fsub
cld
daa
in
inc
jb
shr
xor
add
ficom
jb
add
jb
jnp
push
cmp
inc
add
fwait
pushf
pushf
sbb
add
add
dec
pusha
movs
jb
or
adc
addr16
push
xor
mov
rol
ror
addr16
retf
inc
inc
dec
add
dec
cs
xchg
add
dec
mov
xchg
add
int3
ja
mov
leave
xor
rcl
jg
addr16
xchg
mov
js
movs
jns
aad
ja
mov
outs
mov
pop
xchg
mov
(bad)
rol
jnp
mov
aas
push
add
xchg
dec
cs
push
es
xor
cmps
inc
fild
sub
addr16
and
xchg
jo
lods
in
dec
outs
pop
aam
xchg
rol
leave
dec
gs
dec
pop
add
xor
aad
pop
push
add
and
mov
out
xchg
pop
mov
aad
ja
in
mov
pop
iret
loopne
xchg
xchg
mov
clc
(bad)
add
(bad)
mov
push
inc
xor
scas
(bad)
leave
inc
repnz
push
push
jo
leave
inc
jb
mov
sbb
loopne
pop
in
and
xlat
xlat
sub
imul
mov
test
addr16
or
xchg
(bad)
movs
sbb
xchg
fmul
sbb
and
xchg
xchg
mov
pop
add
lods
cmp
xchg
ss
lahf
pshufw
into
rcl
pop
xchg
int3
outs
vmwrite
mov
ins
daa
pushf
daa
outs
jns
iret
or
push
or
rol
aam
inc
cmp
dec
das
fnstenv
adc
je
mov
xchg
pop
jb
jo
setno
daa
addr16
sbb
cmp
xchg
inc
ret
pop
add
mov
(bad)
aaa
lock
ss
sar
iret
jo
test
cs
inc
into
sahf
mov
rol
(bad)
xchg
xchg
daa
out
repnz
pop
dec
inc
mov
or
enter
push
push
pop
add
cmp
jb
add
jl
push
inc
dec
mov
pop
xchg
push
or
and
and
(bad)
leave
ds
adc
(bad)
dec
daa
daa
pop
in
cmp
dec
push
mov
leave
and
xchg
jl
hlt
mov
and
xor
sbb
fdivr
fdiv
(bad)
or
adc
in
xchg
add
cmp
inc
mov
inc
or
bound
jno
in
xchg
and
lea
fwait
jle
adc
adc
xchg
and
adc
adc
jb
fimul
sbb
sbb
adc
adc
mov
mov
cmp
cmp
enter
ins
addr16
jb
leave
ror
movs
sbb
(bad)
pop
push
or
push
ja
cmps
or
adc
cs
daa
adc
dec
mov
in
mov
lock
pushf
sub
movs
inc
loopne
addr16
pusha
xlat
loopne
daa
pop
in
and
or
nop
cwde
and
leave
add
mov
cmp
in
mov
sbb
add
add
sbb
cmp
inc
add
and
jmp
push
adc
or
mov
rol
lss
loop
push
add
sbb
sbb
cmps
push
je
dec
dec
adc
loop
ds
push
loop
jnp
sbb
jb
mov
add
inc
mov
pop
xlat
or
or
jb
retf
repz
add
(bad)
sbb
sbb
push
cmp
dec
adc
in
xchg
adc
jbe
test
lea
xchg
adc
sbb
clc
jecxz
jecxz
and
and
jecxz
aas
fdiv
in
add
imul
not
sbb
inc
cmp
pop
push
aaa
std
das
inc
mov
sbb
xchg
daa
cwde
pmulhuw
push
jb
jo
shl
cmp
cmp
push
test
mov
mov
sbb
add
add
in
xchg
pop
clc
or
add
mov
and
xor
or
xchg
and
imul
cmp
adc
xchg
and
mov
cmp
in
out
hlt
sbb
add
adc
mov
push
xor
into
cmovl
pop
and
cmp
enter
and
and
sbb
sub
in
xchg
sub
sub
sub
mov
adc
push
xor
xor
xor
enter
xor
arpl
jno
aaa
inc
cmp
les
mov
addr16
push
add
ret
(bad)
addr16
xor
cs
xchg
mov
call
dec
jb
rol
mov
add
xor
dec
cs
pusha
punpckhbw
leave
dec
in
add
es
inc
les
jmp
xchg
push
mov
fist
clc
daa
and
pushf
sbb
jmp
je
sbb
leave
inc
add
dec
cs
jl
pushf
jmp
(bad)
jmp
inc
mov
or
pop
mov
inc
dec
fild
xchg
mov
xchg
pop
cmp
jmp
ret
fistp
jbe
in
or
(bad)
jb
enter
add
add
mov
pop
dec
push
pop
popa
or
sahf
mov
cdq
mov
and
psrlw
adc
cmp
enter
adc
adc
and
clc
in
in
push
les
xchg
push
cmp
enter
inc
fistp
shl
and
leave
les
ja
in
out
out
and
outs
daa
push
leave
xchg
xorps
ja
xchg
shl
out
popf
in
stc
mov
aad
in
push
loopne
mov
out
out
push
es
out
in
cmp
add
or
out
outs
mov
xchg
and
aam
mov
(bad)
out
dec
xchg
dec
pop
and
pusha
pop
leave
and
pusha
and
mov
in
lock
fimul
adc
adc
inc
mov
xchg
sbb
mov
mov
arpl
xchg
icebp
push
mov
rol
xchg
adc
xchg
call
dec
cmp
(bad)
sub
xor
out
dec
sbb
jb
rol
leave
dec
in
mov
xchg
push
push
repnz
jnp
leave
dec
lods
repz
push
or
sbb
mul
push
pop
add
pusha
add
in
cmp
jbe
cmps
push
dec
and
je
mov
dec
js
cmp
out
dec
movs
leave
aaa
cdq
push
mov
and
push
dec
add
mov
mov
mov
dec
fimul
iret
shr
cs
(bad)
add
cmc
push
add
inc
mov
add
daa
xor
outs
daa
daa
and
or
xchg
js
imul
or
ror
push
cwde
daa
in
es
cmc
push
test
jns
xor
add
inc
mov
pop
fmul
loopne
call
aas
movs
aaa
or
pop
or
or
push
daa
cmps
pushf
mov
push
or
add
rol
rcr
dec
clc
div
das
xchg
sub
push
mul
xchg
dec
js
fild
lods
pop
daa
mov
pusha
push
or
adc
and
mul
inc
mov
add
inc
fisub
daa
add
or
lahf
push
cmp
loopne
scas
lock
xchg
xchg
xchg
ja
push
add
leave
enter
sbb
test
(bad)
mov
cmp
push
pop
pop
pop
add
dec
sahf
mov
add
xchg
xchg
xchg
clc
ror
dec
outs
pand
icebp
cld
mov
stc
pop
adc
xor
xchg
sbb
bswap
pop
out
cwde
stc
psubw
mov
scas
add
mov
push
dec
pop
mov
pop
sti
or
push
in
push
pusha
sub
lock
push
lahf
jge
fisttp
ins
in
movs
push
push
pop
das
pusha
add
addps
fnsave
pop
les
cdq
dec
jg
push
and
cmp
dec
ficomp
add
je
mov
das
dec
push
cmps
push
mov
dec
sbb
outs
nop
cwde
pop
xchg
mov
mov
scas
mov
add
mov
or
pop
cmp
in
or
or
or
call
adc
add
xchg
adc
movups
sbb
cmp
and
pop
cmp
call
loopne
jb
xchg
cld
pusha
punpckhbw
fs
dec
(bad)
cld
js
add
cmps
push
mov
dec
push
loopne
sub
dec
cld
mov
mov
inc
cmp
ja
cld
clc
es
leave
inc
push
cmp
in
jmp
dec
lock
out
push
mov
fimul
or
ror
addr16
ficomp
retf
add
add
loope
in
xchg
pushf
stos
xchg
add
dec
dec
jo
(bad)
xor
cmp
inc
iret
pop
mov
ja
jbe
dec
mov
add
dec
dec
add
or
into
push
or
jb
enter
push
enter
jb
jb
or
or
push
fcom
mov
sbb
sbb
lock
leave
xchg
sbb
sbb
inc
pop
repnz
or
adc
sbb
and
push
and
xor
(bad)
(bad)
call
pop
sub
nop
enter
cwde
pop
mov
repnz
mov
or
jns
fsub
or
lock
pop
mov
clc
sbb
push
or
mov
jns
adc
and
sub
dec
inc
sahf
xor
inc
push
dec
and
lahf
es
sbb
leave
leave
pop
push
or
push
mov
call
xchg
xchg
xchg
mov
ja
add
add
add
push
fmul
iret
add
jbe
fimul
or
mov
rol
jb
lock
add
mov
add
inc
sbb
pop
shl
(bad)
mov
add
fs
push
mov
cmp
sbb
enter
loopne
dec
sub
add
sbb
sub
xchg
xchg
xor
inc
mov
mov
jns
dec
jo
jnp
xchg
push
cmp
mov
ror
xchg
iret
pop
sub
outs
cdq
sub
outs
ins
popf
shl
add
push
sub
ss
pop
pushf
add
pop
aas
inc
pop
in
nop
mov
pusha
or
inc
xchg
jl
mov
cmp
and
cwde
adc
pop
mov
ret
mov
rcr
fimul
into
jbe
in
pop
maskmovq
mul
add
addr16
dec
and
sbb
es
pop
sub
or
or
in
sbb
ret
adc
or
cmps
sbb
xlat
push
mov
jae
es
or
pushf
in
dec
ror
adc
adc
cmp
repz
and
jae
sbb
sbb
ret
pop
inc
and
push
imul
and
lea
or
inc
outs
cmp
enter
nop
and
lock
add
mov
pop
inc
inc
nop
retf
retf
in
mov
pop
inc
jl
inc
inc
push
lods
lock
push
enter
out
push
or
sbb
sbb
jb
and
sub
xor
cmp
pop
mov
add
xchg
daa
sbb
push
push
push
sub
pushf
dec
leave
leave
add
in
test
or
shl
jmp
sub
sar
push
daa
jg
mov
loopne
pop
push
aad
and
out
xchg
es
rcl
push
pop
ja
mov
in
rcr
jnp
and
jmp
data16
mov
xor
fbld
ja
mov
pop
js
in
in
lahf
push
mov
xchg
cmp
repnz
pop
scas
cmps
das
pushf
mov
repnz
lock
dec
data16
pushf
sti
or
add
adc
inc
sahf
fcomp
push
sub
xor
aas
xchg
xchg
xchg
daa
aas
add
dec
push
leave
dec
adc
enter
rcl
mov
sbb
add
add
xchg
and
or
or
or
daa
in
or
or
push
jo
xlat
fs
dec
or
xchg
xchg
xchg
ins
push
sub
ss
leave
in
leave
enter
jns
pop
test
leave
in
(bad)
movs
or
xor
repnz
xor
das
or
or
dec
cs
outs
ja
inc
mov
add
xchg
push
pop
sub
fbld
data16
cmp
test
cmp
lock
dec
aaa
jb
es
push
adc
or
outs
or
push
dec
add
add
add
fcmove
enter
jp
imul
lea
mov
pop
addr16
shr
push
fadd
pop
fbstp
xchg
adc
addr16
leave
or
cs
xchg
out
or
adc
dec
dec
lea
rcl
loopne
call
push
add
pop
sub
test
push
push
sbb
add
xchg
mov
imul
xor
jbe
mov
mov
daa
xchg
add
jb
loopne
lock
pop
dec
and
pop
mov
ss
xor
add
push
(bad)
and
dec
mov
jbe
xchg
(bad)
punpckhdq
leave
mov
xchg
lock
pop
adc
ja
leave
leave
xchg
adc
inc
adc
lods
leave
inc
jb
xor
jbe
push
xchg
add
leave
dec
aaa
mov
push
shl
inc
xor
call
mov
adc
push
and
dec
push
in
sbb
xchg
nop
mov
in
fwait
out
pushf
out
and
repnz
adc
push
lock
cdq
cwde
and
add
imul
fisubr
xchg
daa
daa
in
pop
push
inc
dec
push
add
enter
pusha
push
cmp
or
or
xor
ins
sub
xchg
mov
mov
xor
iret
ins
call
adc
push
xor
cmp
fild
xchg
mov
xchg
xchg
jo
xchg
xchg
mov
(bad)
pushf
add
cs
xchg
or
clc
inc
retf
push
inc
and
and
xchg
inc
dec
inc
mov
add
add
xchg
xchg
and
jg
xor
enter
xchg
or
test
mov
outs
or
mov
adc
add
inc
mov
add
add
dec
das
add
cmp
fs
enter
pop
or
sbb
repnz
push
jns
adc
adc
in
cdq
dec
adc
in
pop
add
stc
xchg
xchg
xchg
push
push
push
push
cmp
dec
inc
mov
add
add
pushf
fmul
ins
ja
outs
mov
out
mov
shl
daa
daa
enter
xchg
xchg
mov
add
or
test
outs
cwde
dec
pop
ja
push
sbb
jb
lock
add
add
add
sub
or
and
and
sub
jg
sbb
mov
push
sub
xor
add
dec
push
subps
scas
fisubr
mov
dec
mov
(bad)
ror
dec
dec
fsub
out
cli
and
xor
mov
cmp
inc
cs
add
xchg
xchg
and
add
cmp
sar
jecxz
add
and
mov
bnd
imul
sbb
sahf
xchg
add
scas
call
push
push
pushf
push
adc
sbb
xchg
push
add
jo
mov
push
js
add
add
and
sbb
inc
mov
jo
in
in
loopne
psadbw
jnp
repnz
add
pop
and
pop
mov
cmp
dec
daa
inc
into
sahf
pop
or
fs
or
xchg
xchg
and
(bad)
adc
nop
fwait
cmps
mov
enter
(bad)
rcr
fstp
pushf
sbb
jb
sbb
sbb
sbb
mov
adc
push
or
pushf
pushf
adc
out
lock
das
call
imul
mov
and
add
mov
cmp
ror
sbb
dec
sahf
cmps
rcr
xchg
fisttp
and
aaa
push
int3
in
pop
and
push
cmp
jbe
ins
jb
add
inc
add
add
jb
add
pop
jb
jge
mov
sahf
or
and
or
clc
es
xchg
pop
lock
and
xor
add
inc
add
push
push
lea
or
outs
in
in
into
mov
(bad)
sar
jb
jbe
push
(bad)
add
pop
and
cmp
std
or
adc
mov
push
enter
push
repnz
xchg
pushf
push
movs
lods
or
cmp
mov
or
retf
inc
sub
cmp
or
pop
scas
cwde
dec
and
and
sbb
jb
add
dec
add
add
bound
js
or
mov
dec
or
(bad)
inc
jb
aam
sub
jns
add
push
in
mov
(bad)
and
fnstsw
aad
jns
addr16
movs
sub
push
add
pop
mov
push
pop
pusha
punpckhbw
xchg
and
jo
js
add
xchg
xchg
add
or
xchg
or
or
cmp
cmp
or
lahf
mov
and
adc
adc
dec
and
add
jb
enter
add
aaa
add
inc
add
dec
or
enter
or
outs
or
cmp
jns
test
(bad)
setp
pushf
pushf
pushf
pushf
or
dec
inc
mov
sbb
enter
sbb
sbb
sbb
jb
sbb
sbb
sbb
xchg
mov
es
adc
xchg
jnp
addr16
mov
add
leave
adc
stos
icebp
stos
cmps
jl
pop
daa
pop
inc
inc
inc
daa
daa
daa
push
cmp
jb
xor
add
aaa
cmp
add
dec
outs
daa
push
leave
fdiv
pop
jnp
jbe
fstp
pushf
jmp
in
mov
fistp
jg
scas
lock
add
sub
add
fst
sub
push
das
cmp
enter
add
push
or
mov
jnp
add
jbe
add
pop
and
fsubp
(bad)
add
dec
pop
sub
and
jmp
add
dec
gs
pusha
push
sub
push
leave
hlt
pop
dec
dec
fidivr
iret
rcr
out
dec
fmul
iret
sub
ins
sbb
test
sub
push
push
shr
test
leave
leave
inc
nop
cwde
jb
je
inc
(bad)
in
ror
jb
fninit
jmp
sub
outs
push
repnz
push
dec
ins
mov
jb
data16
xchg
push
cwde
ror
adc
and
inc
add
fild
jne
test
xchg
inc
push
sub
push
xor
mov
pop
sub
or
sub
leave
dec
jo
xchg
and
rcl
and
add
fist
sub
fcmove
enter
pusha
xchg
push
aaa
cdq
adc
daa
pop
dec
pushf
ror
and
or
or
in
test
push
in
in
and
inc
in
in
dec
pop
arpl
jnp
bnd
jle
or
in
jbe
dec
stos
(bad)
shl
ret
adc
adc
addr16
xchg
xchg
mov
cmp
xlat
test
jb
xchg
mov
jb
adc
das
jmp
add
sbb
ss
xor
test
in
push
xor
xchg
sbb
cmps
add
add
cmp
or
mov
and
test
leave
enter
xor
mov
inc
cmp
dec
ja
in
xchg
mov
punpcklwd
ins
add
add
fnsetpm(287
in
add
or
or
lea
cwde
or
cmp
outs
push
test
sbb
and
mov
mov
add
add
pop
leave
enter
data16
or
mov
xchg
xchg
lahf
popf
das
xchg
pushf
sbb
add
test
and
xor
add
pop
add
lahf
xor
cmp
dec
fidiv
or
enter
or
movs
rol
in
xor
(bad)
add
aas
in
div
adc
push
xor
cmps
imul
mov
in
xor
mov
mov
push
aas
in
div
psubsb
and
fs
add
xor
and
mov
mov
pusha
iret
mov
daa
jo
jl
and
push
sub
rcr
ja
ror
xor
xchg
fcmovnbe
(bad)
jecxz
out
add
stc
jecxz
mov
ss
cmovg
sbb
and
ret
pop
fnstenv
ss
xchg
mov
cld
aaa
pop
adc
pushf
sbb
sub
aas
xor
ds
mov
push
fbld
in
in
mov
in
in
jbe
mov
in
xchg
scas
push
sbb
aaa
mov
mov
push
rol
enter
push
jmp
jp
and
push
sbb
addr16
data16
pop
cmp
mov
push
lahf
rol
mov
mov
aaa
add
ins
movs
or
daa
inc
inc
lea
retf
cmp
fwait
test
mov
aad
loopne
enter
jmp
idiv
add
mov
or
or
(bad)
cld
std
mov
inc
aam
or
mov
fld
pop
inc
dec
mov
push
push
(bad)
lods
lock
mov
mov
leave
or
mov
dec
fisub
push
jo
fidivr
inc
test
dec
fmul
inc
and
mov
loop
inc
in
push
shl
push
inc
bsf
out
or
bound
int
adc
push
add
out
jo
aas
mov
mov
in
add
fs
mov
adc
rol
add
pop
or
add
mov
or
repz
add
pop
pop
sbb
iret
jnp
(bad)
dec
push
pop
xchg
inc
add
cmp
imul
push
add
cmp
xchg
add
jns
and
out
sub
mov
jns
popf
cmp
pop
repz
jo
ret
push
xor
repz
or
pusha
jg
cmp
repz
inc
mov
add
outs
pop
ins
stos
sub
and
mov
sbb
std
cmp
iret
pop
adc
or
test
aas
lods
mov
pushf
cdq
inc
aas
test
add
pop
aas
mov
fs
cmp
(bad)
daa
inc
adc
add
sahf
push
out
imul
(bad)
fadd
(bad)
cmp
(bad)
jle
stos
xchg
xor
imul
pop
pop
pushf
add
add
cld
sub
dec
inc
ins
lfs
cmp
cwde
xchg
cwde
or
push
mov
add
or
and
xlat
or
popf
pushf
mov
or
or
in
(bad)
sub
scas
adc
dec
outs
ja
scas
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
ins
leave
repz
push
and
jb
in
sbb
pop
and
cmp
out
xchg
add
dec
dec
mov
retf
sbb
aas
into
aas
xlat
pop
sbb
ret
or
loopne
sbb
sub
pop
ins
ins
add
nop
or
fadd
jg
mov
mov
movs
cs
cs
push
neg
cmp
add
sbb
rol
pop
push
add
add
add
loop
test
aas
sbb
pop
inc
cmp
or
xchg
pop
mov
cmp
mul
fcmovnu
pop
mov
movs
add
cmp
cmps
fisttp
cs
ds
movs
sbb
sub
pop
shl
cmovo
pop
inc
mov
or
(bad)
mov
sbb
in
call
adc
fstp
pop
fidivr
xor
in
cmps
rcr
fsubp
stc
jb
jle
mov
sahf
out
mov
cld
clc
hlt
lock
out
in
in
aam
rep
sahf
out
mov
mov
cmp
ror
enter
jnp
repz
mov
lods
data16
iret
xchg
mov
sahf
out
sahf
ins
pusha
pop
dec
inc
cmp
lahf
out
cmp
or
add
iret
(bad)
push
pop
push
add
xchg
cld
hlt
in
repz
repz
aam
mov
repz
movs
nop
jl
pop
push
cmp
repz
inc
cmp
sub
cmp
repz
adc
add
jns
addr16
clc
call
iret
repz
xchg
mov
movs
xchg
xor
iret
repz
inc
cmp
cld
inc
test
call
rol
pop
add
ins
pop
adc
div
enter
mov
add
pusha
push
(bad)
retf
stos
xchg
inc
ja
jo
or
das
push
sub
push
inc
push
(bad)
mov
repnz
iret
mov
add
bound
das
aas
jbe
inc
in
pop
aas
add
nop
cmps
add
jae
in
ret
adc
cmps
add
dec
add
add
pop
or
sbb
sub
inc
enter
ds
mov
sbb
int3
sbb
adc
inc
mov
and
push
aas
mov
shrd
mov
and
and
das
mov
enter
pop
test
or
into
mov
or
sbb
sbb
adc
addr16
into
into
invd
sbb
add
clc
pop
(bad)
and
enter
and
and
and
fsub
rcr
adc
imul
xor
jb
sahf
out
es
push
inc
xor
repz
mov
in
mov
cmp
jo
dec
cmp
sbb
addr16
add
sahf
out
mov
mov
fnstcw
repz
cmp
adc
mov
out
movs
mov
push
mov
xchg
idiv
pusha
cs
sub
jns
xchg
xchg
dec
repz
mov
repz
xor
jns
ds
add
push
pop
ja
jecxz
sahf
xchg
mov
repnz
push
stos
jmp
push
dec
ins
mov
aas
inc
or
pop
add
pop
shl
and
push
test
add
adc
aaa
(bad)
push
xchg
aaa
and
jg
add
enter
xchg
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
(bad)
(bad)
(bad)
dec
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
add
(bad)
(bad)
(bad)
call
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
(bad)
(bad)
fistp
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
(bad)
(bad)
(bad)
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
(bad)
(bad)
(bad)
(bad)
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
dec
jmp
push
movs
mov
popa
sar
mov
and
dec
xchg
clc
repz
mov
sub
fwait
xchg
and
sbb
int
add
aas
fist
shl
fidiv
clc
aas
pop
fs
(bad)
(bad)
(bad)
fisttp
xchg
outs
adc
sub
sbb
pop
pop
mov
icebp
aas
ror
and
cmps
out
das
and
(bad)
aas
inc
cmps
mov
ins
scas
add
scas
mov
(bad)
(bad)
call
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
(bad)
(bad)
(bad)
(bad)
call
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
mov
(bad)
(bad)
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
(bad)
call
adc
movs
daa
jmp
mov
inc
rcr
push
mov
arpl
int3
and
cmp
jp
and
cmp
mov
cmp
xlat
cmp
mov
sbb
(bad)
(bad)
mov
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
(bad)
(bad)
(bad)
call
mov
and
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
(bad)
(bad)
push
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
add
in
dec
(bad)
std
or
pop
ficomp
frstor
lods
fwait
mov
rol
adc
mov
xlat
inc
adc
dec
or
pop
pop
test
add
or
in
xchg
stos
lods
push
mov
cmp
push
movs
cwde
and
xchg
or
sub
enter
add
push
cs
or
pop
add
add
int
stc
xor
(bad)
(bad)
ins
ja
cs
mov
dec
lods
and
inc
dec
push
xchg
add
or
xor
and
ins
sbb
mov
push
pop
and
in
sbb
setnp
adc
enter
adc
or
add
push
mov
test
pop
pop
push
add
mov
dec
sbb
sbb
or
dec
inc
pop
inc
in
add
mov
sbb
mov
inc
or
sahf
out
pop
(bad)
or
push
int3
mov
jns
out
js
dec
xor
repz
out
jno
int3
xchg
jl
in
(bad)
and
inc
add
dec
mov
call
enter
sub
iret
cmp
and
daa
inc
pop
call
out
push
fmul
pushf
(bad)
nop
test
mov
rol
loopne
cmp
repz
dec
push
aas
add
xlat
fs
sub
and
scas
add
fwait
je
pushf
sbb
and
sub
pop
scas
add
push
fwait
sub
cmps
pop
shr
not
sub
jo
dec
fimul
jg
and
mov
push
addr16
xchg
push
cmps
add
xor
stos
idiv
lahf
cmps
(bad)
add
mov
jg
pop
or
xchg
jne
push
out
mov
sub
or
add
add
adc
or
inc
add
test
xchg
and
ror
sbb
ja
fld
sub
add
dec
pop
fistp
ffreep
hlt
pop
push
out
cdq
mov
(bad)
xchg
inc
pop
inc
test
out
push
inc
sbb
jmp
fidivr
pop
mov
jmp
cli
dec
jmp
popf
nop
and
(bad)
and
jl
mov
pop
(bad)
lea
jns
cmp
sti
popa
outs
ss
cmp
aaa
shl
aas
or
(bad)
call
jecxz
dec
arpl
xor
js
ror
loop
dec
mov
xchg
jp
fwait
stos
(bad)
(bad)
(bad)
inc
cld
out
daa
xchg
sub
lock
add
into
xchg
dec
call
inc
adc
loopne
mov
(bad)
(bad)
jmp
push
(bad)
xchg
out
cmp
jbe
data16
test
mov
sub
cmp
(bad)
(bad)
(bad)
push
fimul
scas
xchg
pop
and
mov
dec
loope
cs
inc
xor
adc
mov
in
ins
and
xchg
add
les
xor
xchg
inc
and
and
outs
push
mov
xor
dec
repz
jle
xlat
cmp
js
fwait
out
out
imul
push
push
xchg
enter
fwait
out
sbb
fadd
out
mov
push
inc
mov
mov
pop
ja
test
pop
pop
add
or
pop
xlat
sbb
pop
add
jne
ror
repz
clc
cld
inc
movs
push
sar
dec
cwde
pushf
inc
mov
and
add
push
call
pop
push
inc
push
pusha
jmp
or
ror
mov
cmp
shl
push
push
pop
(bad)
add
lahf
bound
or
push
xchg
je
or
ret
movzx
sbb
and
lock
sbb
getsec
div
adc
adc
add
add
adc
adc
xor
or
adc
dec
add
ror
das
dec
outs
fs
lahf
or
dec
popa
jo
inc
push
dec
dec
xor
lahf
inc
stc
inc
or
pusha
aaa
aas
and
inc
push
push
inc
dec
inc
push
pop
pop
fisub
ins
push
outs
outs
push
test
(bad)
mov
jmp
pop
push
xchg
adc
ret
out
aaa
jb
and
inc
inc
inc
add
retf
xlat
ss
add
mov
loopne
add
mov
add
dec
mov
outs
daa
mov
add
add
push
cs
movs
and
(bad)
aaa
inc
mov
pop
push
aaa
outs
lea
push
sar
stc
mov
test
enter
push
in
shl
pop
cmp
inc
cmp
daa
inc
je
inc
and
js
or
cmps
into
pop
ret
bound
and
es
das
pop
adc
into
pop
fwait
mov
sbb
add
ror
push
cli
bound
movs
and
(bad)
in
xlat
and
gs
popa
and
pop
inc
lds
jne
jns
daa
mov
out
inc
outs
jb
inc
rcl
inc
and
stos
lods
sub
mov
nop
bound
jno
cdq
push
sub
mov
lahf
jge
push
pop
imul
xchg
mov
dec
aad
vphadduwq
pop
inc
fstp
pop
ds
retf
shr
pop
sbb
add
inc
pop
inc
(bad)
dec
das
push
sbb
retf
fyl2x
pop
dec
add
sub
test
cmp
sahf
add
sub
jg
push
add
dec
cmp
cli
inc
adc
popf
sub
out
scas
inc
adc
and
test
push
in
or
rol
cdq
adc
push
sbb
or
adc
cwde
jo
dec
pop
or
add
mov
leave
xchg
or
ror
das
ror
stos
xchg
or
push
lea
inc
loope
jmp
push
inc
inc
xlat
pop
pop
and
imul
out
mov
sub
mov
sbb
lds
outs
inc
and
ins
out
pop
test
mov
dec
inc
or
pop
cmp
mov
pop
sub
clc
lds
inc
aaa
xor
add
dec
outs
mov
(bad)
test
jne
aaa
inc
mov
in
stc
mov
in
test
pop
dec
cmps
mov
jo
aas
push
pop
movs
ins
push
cmps
aaa
mov
shl
out
add
call
and
mov
jns
scas
xchg
jg
push
sub
fnstenv
or
xor
sub
xor
jno
sub
das
les
bound
sub
ja
push
dec
mov
mov
inc
dec
repz
add
push
inc
push
pop
ja
mov
mov
inc
out
push
or
add
movups
jmp
lods
ins
push
fistp
add
xchg
das
pusha
push
add
scas
inc
cmc
dec
or
xchg
mov
pop
push
jno
push
ins
push
xlat
scas
inc
push
int
gs
mov
movs
sub
stos
bound
stos
movs
lahf
fst
sbb
lds
shr
scas
push
popa
mov
pop
jnp
nop
or
mov
xchg
outs
mov
leave
fbld
dec
ins
dec
push
ins
xchg
mov
cmps
iret
adc
adc
fld
and
fisttp
jg
push
shl
inc
pusha
test
xchg
sub
dec
popa
arpl
sub
fs
imul
stos
add
cmps
gs
aas
mov
dec
ret
les
mov
add
dec
rcl
test
lahf
inc
sub
test
dec
jp
add
adc
pop
stos
test
mov
pop
mov
pop
das
adc
xchg
inc
mov
inc
push
push
inc
xlat
stos
dec
pop
and
(bad)
int
test
dec
jo
push
or
cmps
outs
jb
cmpxchg
push
dec
push
jae
inc
pusha
and
sub
inc
and
push
imul
dec
rdtsc
add
xor
scas
jmp
dec
out
push
inc
and
push
push
outs
je
xchg
add
mov
out
dec
gs
push
push
mov
push
jl
das
inc
inc
sbb
pop
imul
mov
test
push
addr16
fbld
inc
and
cwde
and
pop
and
scas
hlt
aas
das
ja
pusha
test
ins
gs
lods
sbb
imul
leave
aas
add
test
scas
push
xchg
ret
test
out
mov
je
arpl
outs
loopne
jne
psubusb
pop
pusha
(bad)
dec
popa
js
add
movs
add
cmps
hlt
inc
xchg
jle
pop
jns
push
pop
in
in
jg
ret
xchg
sub
pop
add
mov
mov
push
adc
xor
mov
mov
pop
mov
loopne
jo
ja
xor
or
xor
out
push
pop
addr16
out
sahf
jnp
(bad)
cdq
mov
jns
ror
fcomip
ins
sahf
out
repz
add
ja
cmp
sbb
inc
push
sahf
out
sahf
pop
push
jns
out
call
sahf
out
(bad)
loopne
hlt
iret
repz
inc
xor
adc
cmp
inc
sub
or
adc
xchg
inc
add
push
inc
mov
push
inc
sbb
pop
das
or
shl
mov
inc
mov
push
js
fisub
or
cmp
dec
push
inc
inc
mov
or
inc
(bad)
bound
push
ret
add
dec
pop
fiadd
or
push
ret
and
ror
xchg
inc
daa
push
adc
add
push
jp
add
sbb
fsubr
or
aas
mov
je
nop
cmp
test
dec
add
ins
cli
mov
adc
inc
inc
pop
mov
mov
sbb
push
push
int3
mov
pop
push
push
mov
(bad)
(bad)
inc
xchg
and
xchg
mov
push
inc
adc
test
and
in
or
cmps
pop
sub
xchg
mov
dec
pop
and
pop
cmp
xchg
in
(bad)
retf
xchg
data16
fs
xchg
fs
(bad)
(bad)
inc
push
cdq
and
test
dec
in
outs
and
scas
sub
inc
hlt
sbb
add
mov
mov
sar
(bad)
(bad)
out
mov
mov
pop
jae
idiv
movs
cli
xor
xlat
sahf
cld
jns
in
std
jecxz
push
xchg
mov
pop
cmp
aaa
iret
pop
rep
cld
jmp
cwde
aam
inc
ret
or
pop
ins
add
(bad)
(bad)
fcomip
sbb
pusha
and
dec
mov
cs
shl
(bad)
(bad)
(bad)
inc
lods
adc
mov
call
or
pop
add
push
scas
out
loopne
out
test
dec
sbb
cmp
xor
add
dec
nop
pop
adc
(bad)
sti
push
mov
pushf
jle
ds
(bad)
psubw
loop
lds
(bad)
(bad)
(bad)
jmp
jno
jle
shl
pop
push
pop
inc
movs
mov
mov
mov
ins
in
mov
or
(bad)
(bad)
(bad)
dec
(bad)
hlt
(bad)
mov
outs
test
jge
mov
aad
pop
(bad)
push
test
(bad)
lods
(bad)
neg
pop
daa
cs
pop
(bad)
fmul
mov
(bad)
(bad)
(bad)
(bad)
fstp
push
jmp
in
cld
scas
pop
(bad)
jecxz
std
and
in
gs
push
clc
(bad)
(bad)
(bad)
call
mov
jge
xchg
mov
push
mov
(bad)
sbb
pop
sub
lea
cdq
(bad)
push
inc
jg
xor
setp
lock
jmp
(bad)
xor
(bad)
jmp
and
dec
pop
adc
inc
push
add
outs
or
push
adc
dec
idiv
(bad)
(bad)
push
clc
inc
ret
outs
(bad)
jmp
out
std
(bad)
cmp
xchg
ret
add
sub
sub
in
sar
xor
icebp
cmc
push
sahf
enter
push
stc
bound
ds
jg
push
(bad)
(bad)
dec
(bad)
aam
ret
fstp
dec
mov
stos
test
cmp
inc
mov
cmp
jp
lock
cld
sar
mov
dec
jo
push
mov
jmp
(bad)
(bad)
jmp
sub
idiv
jne
fiadd
cmp
push
pushf
xchg
or
sbb
push
dec
cmp
stos
push
mov
xor
cmp
shl
scas
test
clc
in
(bad)
(bad)
(bad)
call
fnstcw
(bad)
data16
xchg
add
xchg
jg
popa
dec
daa
xlat
adc
syscall
inc
cmps
sar
inc
xchg
dec
sub
dec
add
adc
or
enter
jg
mov
cli
test
out
cli
pop
cmp
inc
pop
aam
mov
jae
(bad)
(bad)
frstpm(287
shr
xchg
stos
mov
sti
push
in
(bad)
fsubr
movs
cld
inc
(bad)
cmps
cmp
clc
(bad)
push
jl
scas
scas
mov
and
mov
sub
jae
mov
xchg
stos
push
sbb
(bad)
adc
cld
adc
(bad)
(bad)
(bad)
jmp
and
mov
out
jne
or
push
and
mov
xchg
mov
dec
dec
fwait
mov
mov
mov
(bad)
jmp
sbb
xchg
xchg
jl
call
adc
mov
scas
mov
inc
pop
fs
out
shr
mov
stos
push
add
loope
(bad)
(bad)
(bad)
jg
or
xchg
leave
in
mov
outs
js
data16
fsubr
jno
sti
sahf
stc
inc
jl
(bad)
(bad)
(bad)
jmp
dec
or
jecxz
jo
sub
jmp
rol
pop
xchg
pop
xor
or
(bad)
(bad)
(bad)
fst
push
repz
movs
sub
sti
dec
and
daa
stos
adc
sbb
push
in
pop
jmp
pop
jno
mov
jnp
inc
loopne
arpl
ja
(bad)
(bad)
dec
icebp
xor
rol
push
mov
push
xor
xchg
rol
pop
xchg
scas
and
(bad)
cmp
or
jnp
es
mov
mov
xchg
and
ins
mov
dec
cmp
in
jmp
shr
jp
stos
popa
pop
mov
rcl
push
dec
jb
mov
add
pop
retf
dec
push
or
jmp
xchg
or
push
xchg
pop
inc
scas
imul
mov
push
dec
push
fsub
pop
push
inc
pop
mov
int
(bad)
out
inc
popa
add
push
fst
arpl
ds
out
jl
cld
ins
mov
cs
push
mov
stos
inc
loope
sub
es
not
jg
push
stc
dec
pop
adc
rcr
cli
push
int
sbb
add
mov
pop
jno
(bad)
jg
imul
xor
lods
int3
inc
xchg
es
cli
(bad)
(bad)
jmp
push
xor
(bad)
movs
inc
cdq
push
outs
popf
jb
test
repnz
popf
jae
repz
outs
call
stc
or
xchg
neg
rol
nop
cwde
test
cmp
cli
pop
cmp
fist
jbe
int
retf
jge
xlat
sub
mov
dec
and
(bad)
jmp
push
sub
mov
xchg
mov
add
(bad)
mov
pop
push
jo
cmc
cmp
call
in
daa
add
adc
enter
pop
adc
repnz
pop
xlat
(bad)
push
cld
fdiv
mov
dec
mov
(bad)
cwde
cmp
cmc
sahf
leave
(bad)
(bad)
fcomip
(bad)
inc
mov
jbe
popa
mov
int
fnsave
add
add
push
pop
xchg
dec
sub
std
fnstsw
pushf
movs
movs
or
cmps
int3
enter
ror
xchg
pop
sub
sbb
int
scas
inc
movs
jne
(bad)
(bad)
(bad)
aas
je
or
out
xor
inc
cmc
test
xchg
sar
xor
call
dec
(bad)
dec
imul
mov
pop
cmps
push
sub
sbb
add
in
xchg
push
add
and
xor
(bad)
(bad)
inc
cmp
imul
push
jge
stos
jo
and
cmp
loopne
cmps
imul
push
and
imul
push
shr
outs
add
sbb
test
fidivr
pop
mov
(bad)
(bad)
call
call
add
into
sbb
sbb
sbb
popf
or
adc
(bad)
jg
(bad)
mov
stc
push
cmp
sub
push
loope
push
jo
push
adc
dec
(bad)
(bad)
(bad)
inc
xchg
iret
in
push
xchg
das
jb
push
(bad)
cld
sbb
or
add
mov
(bad)
(bad)
(bad)
(bad)
clc
(bad)
xor
cs
inc
aam
or
sbb
xchg
mov
push
int3
xchg
das
mov
(bad)
(bad)
(bad)
(bad)
fst
sub
jmp
lods
xor
and
sahf
ror
jecxz
ins
push
(bad)
(bad)
(bad)
cmp
sbb
add
and
loop
dec
push
dec
push
lea
or
cmp
jmp
cli
xchg
cmp
mov
sub
mov
lds
jne
sub
push
mov
icebp
(bad)
(bad)
(bad)
mov
sbb
push
(bad)
sub
cmp
in
jb
lods
dec
push
pop
scas
jmp
arpl
aaa
std
call
xor
or
adc
mov
sub
add
sar
call
das
pop
and
fist
add
inc
jns
dec
dec
jge
cmp
jg
fld
jns
cmp
mov
cmp
sub
daa
pop
xlat
pop
stos
and
(bad)
jmp
rcl
sub
outs
or
enter
adc
scas
lea
inc
inc
cli
jno
mov
or
ret
inc
mov
fisubr
jmp
add
fbstp
int3
retf
retf
or
mov
mov
(bad)
(bad)
jg
repz
pop
mov
addr16
dec
mul
mov
or
push
xchg
fsub
(bad)
(bad)
(bad)
(bad)
jmp
inc
pop
out
add
inc
test
jecxz
mov
inc
push
loop
mov
call
(bad)
push
dec
mov
loop
mov
cli
pop
ret
sub
jbe
scas
fiadd
cmp
mov
call
xor
mov
mov
ins
or
(bad)
push
pop
mov
pop
cdq
scas
imul
mov
stos
scas
add
sub
sahf
(bad)
(bad)
(bad)
push
push
cmp
push
scas
add
jae
push
sub
les
nop
pop
mov
push
(bad)
(bad)
(bad)
aas
or
jecxz
inc
mov
jmp
or
mov
dec
cmp
movs
cmp
xor
mov
(bad)
(bad)
(bad)
cli
or
push
scas
movs
push
fcmovne
add
and
cmps
adc
gs
lods
mov
push
pusha
inc
test
(bad)
(bad)
jmp
fs
push
ins
(bad)
xchg
outs
dec
jmp
cmps
aas
stos
jecxz
stos
jle
hlt
int
movs
popa
(bad)
(bad)
(bad)
push
dec
inc
outs
iret
je
cmp
xchg
mov
jne
out
icebp
ja
push
shr
stos
xchg
(bad)
(bad)
push
outs
ins
sti
dec
popf
call
cld
test
in
scas
jne
add
retf
(bad)
(bad)
call
cmp
pop
call
mov
push
add
pop
(bad)
inc
or
idiv
(bad)
(bad)
jmp
dec
and
add
dec
xchg
jge
lods
fmul
scas
cmp
jmp
(bad)
and
jmp
dec
pop
jl
push
xchg
fdivr
mov
clc
dec
cmp
dec
(bad)
call
hlt
into
add
xor
out
or
inc
outs
rcl
mov
xchg
lock
nop
push
xchg
(bad)
(bad)
(bad)
push
mov
loopne
sub
jno
push
cmc
pop
jmp
push
jge
mov
lods
add
idiv
into
inc
mov
popa
xor
sub
popf
rol
das
cli
xor
enter
push
sbb
fisttp
jo
mov
cmc
xor
(bad)
(bad)
(bad)
dec
lea
or
into
arpl
pop
in
inc
cmp
stc
je
ret
(bad)
(bad)
(bad)
in
mov
movs
aaa
and
scas
loop
jl
fisttp
or
dec
leave
adc
js
mov
inc
pop
ss
adc
mov
(bad)
(bad)
inc
cmp
lea
fld
aam
jno
or
(bad)
out
es
iret
jno
push
add
cmps
jle
sbb
fstp
jge
(bad)
(bad)
dec
pop
sti
icebp
add
jl
pop
fisubr
popa
jge
mov
les
iret
and
(bad)
call
mov
mov
int
mov
jp
bound
sar
(bad)
jg
mov
call
mov
aas
pusha
sahf
push
fs
lea
sub
mov
hlt
jmp
test
call
mov
(bad)
(bad)
dec
add
mov
sbb
pop
cmp
test
push
aas
cld
jno
sbb
(bad)
jmp
mov
sbb
mov
shr
movhps
in
(bad)
(bad)
jmp
mov
mov
mov
loop
mov
pop
xor
out
or
(bad)
(bad)
push
jnp
dec
xor
mov
loopne
or
adc
and
push
mov
mov
mov
add
mov
mov
ds
gs
aaa
stos
jno
and
sub
sti
(bad)
call
or
call
addr16
push
lds
adc
rol
inc
jmp
(bad)
aam
and
add
ret
in
sar
jbe
in
fwait
inc
cld
pop
arpl
mov
in
jno
or
pop
(bad)
(bad)
(bad)
sbb
stos
cmps
lahf
or
mov
inc
int
pop
lock
mov
push
or
(bad)
jg
pusha
std
or
popf
pop
adc
mov
inc
or
(bad)
(bad)
call
mov
jg
add
jo
push
ret
sbb
gs
adc
xor
or
push
mov
sub
ins
add
jg
(bad)
clc
fs
pusha
pop
sub
jmp
sti
lds
es
outs
test
add
mov
jno
stos
fwait
movs
push
in
xor
jp
(bad)
(bad)
(bad)
call
std
adc
adc
and
mul
adc
dec
jge
repnz
push
(bad)
(bad)
jmp
cli
or
fimul
shl
out
les
ficom
xor
(bad)
(bad)
(bad)
(bad)
mov
xor
ret
sub
jmp
mov
mov
xchg
out
les
lock
inc
mov
movs
leave
addr16
stos
in
cli
mov
mov
das
sbb
pop
(bad)
(bad)
(bad)
call
pushf
cs
ins
xchg
adc
retf
push
stos
test
pushf
sbb
inc
jb
call
pop
shl
adc
ret
xchg
vxorps
fwait
sbb
repnz
or
mov
(bad)
push
(bad)
out
nop
loopne
repnz
inc
ins
fdivr
(bad)
(bad)
dec
inc
xchg
fsubrp
sbb
xchg
repnz
(bad)
cli
jbe
xchg
adc
daa
sub
out
sub
adc
mov
jno
pop
or
imul
xchg
sub
out
iret
mov
(bad)
(bad)
(bad)
push
ficom
mov
add
and
int
scas
out
lods
cmc
js
inc
movs
jmp
mov
jmp
sbb
pusha
out
sub
(bad)
mov
add
out
adc
push
call
and
nop
and
add
push
xchg
sub
pop
sbb
rcr
fisttp
icebp
aaa
popa
(bad)
(bad)
(bad)
jmp
sbb
add
aam
add
aad
add
lods
loopne
(bad)
jo
retf
adc
mov
inc
mov
and
jmp
retf
inc
mov
sub
add
stc
(bad)
pop
cmp
(bad)
call
inc
(bad)
pop
jno
stc
push
push
setp
lahf
pop
mov
idiv
cli
fsubr
pop
xchg
je
lahf
(bad)
(bad)
(bad)
inc
mov
mov
sub
mov
jmp
mov
inc
adc
(bad)
(bad)
jl
jp
dec
pop
(bad)
xor
fisttp
test
rcr
(bad)
mov
sub
sbb
or
gs
adc
stc
mov
fadd
add
sar
jg
ins
hlt
jg
(bad)
sub
outs
xchg
stc
(bad)
push
jmp
xor
jne
sbb
out
sbb
(bad)
(bad)
call
xchg
pop
xor
fdiv
mov
retf
xor
mov
mov
icebp
sahf
sbb
(bad)
(bad)
(bad)
push
add
in
mov
jbe
dec
(bad)
sbb
mov
pop
and
imul
imul
push
(bad)
dec
ja
pop
mov
lods
popf
loop
dec
cmp
dec
adc
adc
jb
(bad)
(bad)
(bad)
(bad)
mov
jno
push
popaw
sbb
cwde
je
xchg
push
fs
push
bound
mov
(bad)
jmp
inc
mov
adc
cwde
xor
js
sar
mov
xor
inc
or
lock
jnp
div
add
(bad)
call
inc
(bad)
rcr
test
lods
cmps
sar
add
es
icebp
xchg
sbb
jg
mov
pop
push
mov
sbb
or
sbb
jno
fcom
in
fst
xchg
(bad)
(bad)
(bad)
jmp
aas
push
xchg
pop
or
sbb
and
addr16
pop
jmp
repnz
ret
sub
sbb
cli
(bad)
dec
sub
dec
aas
outs
inc
jnp
rcl
fwait
movs
mov
mov
shl
call
cmp
inc
push
mov
lods
push
or
mov
ret
loop
js
adc
fsubr
or
dec
out
out
inc
mov
cdq
pop
scas
stos
out
xchg
mov
lds
scas
scas
cli
dec
jmp
inc
mov
imul
or
sub
mov
sub
inc
mov
mov
or
xor
(bad)
mov
ds
movs
adc
push
loope
cmp
sbb
(bad)
(bad)
(bad)
push
mov
mov
xor
xor
jmp
cmps
stc
mov
sbb
(bad)
fdivr
or
cwde
sub
in
push
push
test
inc
mov
push
inc
push
mov
inc
enter
enter
add
jo
jbe
(bad)
call
and
mov
sbb
out
xchg
mov
jne
xchg
jmp
loope
xchg
sbb
(bad)
(bad)
(bad)
push
mov
push
dec
stos
stc
or
sti
inc
mov
xchg
jle
cmps
pusha
scas
stc
adc
(bad)
jmp
jg
inc
and
iret
sbb
mov
rcr
xchg
pop
int
mov
cmp
lods
call
dec
int3
mov
fstp
add
or
call
xor
dec
(bad)
(bad)
(bad)
call
xchg
test
or
xor
pop
push
mov
fs
das
(bad)
(bad)
(bad)
jmp
(bad)
cdq
inc
fisttp
pop
xor
xor
xor
fcomi
shl
test
(bad)
(bad)
(bad)
inc
out
ins
pop
pop
jae
ret
jmp
test
out
mov
pop
stc
xchg
rol
jl
(bad)
(bad)
(bad)
inc
pop
jmp
aas
cli
cmc
mov
les
pusha
pop
or
test
call
fst
cmp
and
cmc
or
xchg
into
sub
mov
into
repz
test
and
xor
rcr
retf
cmp
cmps
(bad)
je
inc
jo
add
lods
lock
add
(bad)
(bad)
call
adc
add
fistp
xor
dec
jno
fild
adc
jmp
cmc
mov
(bad)
(bad)
(bad)
fcmovnbe
jae
aaa
xchg
push
je
rcr
(bad)
loope
pop
in
pop
cmp
scas
mov
(bad)
mov
mov
inc
jp
xor
push
popa
and
mov
xchg
and
sahf
cld
fs
(bad)
(bad)
push
pop
popf
into
push
pop
popf
push
cmp
fld
(bad)
in
mov
(bad)
(bad)
fild
jmp
or
push
xlat
push
xchg
inc
outs
jl
shl
sbb
inc
sahf
loop
pop
pushf
or
(bad)
(bad)
mov
fwait
and
mov
mov
inc
dec
aam
(bad)
add
xchg
sbb
(bad)
fcomp
push
(bad)
fcomip
adc
iret
push
sahf
imul
mov
sbb
pop
fisub
xchg
mov
(bad)
(bad)
(bad)
(bad)
ds
ins
mov
out
mov
jne
ds
mov
movs
(bad)
js
xchg
jns
shl
out
pop
(bad)
(bad)
(bad)
dec
jnp
xchg
xchg
sar
aas
sahf
and
adc
adc
dec
cmp
mov
adc
fdivr
(bad)
(bad)
call
int3
fcom
dec
add
in
mov
sbb
push
clc
mov
and
xchg
popf
hlt
scas
fidiv
stos
jo
(bad)
cwde
adc
lods
sub
(bad)
mov
mov
xor
movs
sar
(bad)
push
fs
or
lds
fwait
sub
cmp
(bad)
outs
push
xchg
call
scas
xor
(bad)
pop
movs
mov
call
pop
xchg
fidiv
jae
and
(bad)
mov
and
mov
rcr
imul
enter
movs
div
mov
and
add
jmp
into
jne
jb
movs
xchg
loopne
or
pop
lahf
sub
fdiv
sbb
or
(bad)
(bad)
push
push
cmp
xor
push
leave
dec
ds
pop
push
out
add
mov
push
addr16
lahf
mov
ds
in
adc
jmp
clc
inc
pop
imul
inc
out
daa
shl
jbe
test
or
(bad)
(bad)
call
out
cdq
sub
dec
loope
sub
nop
daa
xchg
xor
sub
xor
xor
(bad)
jmp
(bad)
in
cmp
add
shl
xor
lds
xlat
xor
into
push
or
mov
push
das
js
(bad)
pop
jmp
and
xor
mov
sti
call
int
inc
dec
gs
mov
stc
mov
mov
call
lock
cmp
fild
(bad)
mov
xchg
std
mov
(bad)
push
add
jle
push
test
fbstp
cmp
or
mov
sub
call
pop
lods
dec
stc
movs
mov
mov
lock
pop
cmp
sbb
(bad)
(bad)
(bad)
call
cmp
popf
outs
inc
mov
sti
push
mov
mov
push
sub
pop
call
test
pop
adc
push
(bad)
(bad)
(bad)
(bad)
mov
xlat
cmp
jmp
mov
in
or
add
add
cmps
inc
sub
push
cld
dec
outs
fild
mov
jmp
enter
push
sbb
mov
hlt
push
and
push
sub
pop
retf
iret
and
mov
shl
or
cld
pushf
xchg
or
inc
push
mov
dec
(bad)
(bad)
(bad)
dec
mov
aam
mov
xor
inc
jae
popa
mov
cmp
push
lds
call
loope
or
jl
arpl
add
pop
push
jge
lock
call
push
mov
(bad)
(bad)
(bad)
jge
in
dec
push
jg
out
mov
pop
xor
shl
mov
hlt
add
dec
inc
jp
data16
mov
lods
ret
xchg
inc
mov
(bad)
(bad)
inc
fs
retf
jmp
mov
mov
call
(bad)
(bad)
jg
rcl
ret
lods
and
push
xor
mov
inc
mov
fmul
(bad)
iret
pop
pop
jmp
ret
cli
mov
push
dec
xchg
mov
inc
cld
jmp
sti
cld
pop
sub
dec
fcomi
sub
mov
dec
rol
dec
scas
clc
and
(bad)
(bad)
mov
xchg
xor
mov
rcr
loope
push
aad
bnd
xchg
add
pop
cmp
jle
mov
and
mov
(bad)
adc
(bad)
(bad)
(bad)
cmp
stc
jo
stos
adc
dec
movs
fistp
mov
retf
shr
mov
mov
(bad)
(bad)
call
push
adc
pop
push
adc
xor
fs
sbb
movs
int3
int3
movs
fsubr
adc
(bad)
(bad)
aas
aad
retf
push
sbb
test
dec
inc
popf
inc
xchg
sbb
mov
and
xchg
cmp
adc
(bad)
(bad)
call
or
push
add
xchg
enter
call
shl
call
loop
gs
(bad)
dec
sub
mov
fstp
adc
imul
xor
cmps
aam
pop
jg
popa
cld
imul
inc
outs
es
xor
dec
(bad)
(bad)
fcomip
int
jae
jl
mov
and
lods
xchg
movs
add
enter
or
(bad)
(bad)
dec
push
mov
pop
adc
adc
je
pop
push
xor
aam
loopne
jg
pop
dec
and
jae
inc
sub
shl
sub
(bad)
(bad)
jmp
(bad)
std
pop
stc
imul
call
scas
ja
cmp
es
(bad)
(bad)
(bad)
(bad)
sti
cmp
mov
call
dec
dec
test
jbe
cld
scas
pop
aam
dec
and
add
push
xchg
jbe
xor
fs
aas
add
xchg
test
fbstp
test
inc
(bad)
and
movs
xor
cwde
dec
mov
dec
cli
shl
test
dec
push
sahf
and
(bad)
(bad)
(bad)
(bad)
cmp
cdq
mov
stos
jmp
rcr
and
xlat
xchg
movs
add
jmp
mov
cmc
(bad)
jmp
dec
dec
sub
push
cmps
jecxz
mov
cmp
pusha
in
sbb
(bad)
(bad)
jmp
jmp
sbb
jne
ja
repz
adc
add
test
or
fs
mov
(bad)
(bad)
(bad)
out
pop
iret
stc
lock
daa
mov
ins
test
fist
call
mov
mul
jmp
jae
mov
and
ins
ror
inc
push
or
mov
(bad)
jmp
mov
int3
add
pop
dec
ins
shl
xor
jno
into
adc
dec
call
dec
dec
sbb
mov
fld
cmp
mov
xlat
das
xchg
int3
(bad)
enter
inc
cmp
ficomp
inc
push
push
fnstenv
shl
(bad)
(bad)
(bad)
jmp
int3
popa
stos
or
sub
mov
xor
xchg
loope
stos
or
jl
sub
hlt
into
loope
xor
jmp
inc
enter
inc
fxch
ds
and
(bad)
mov
loop
dec
movs
push
cld
(bad)
call
or
sub
jae
sbb
mov
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
sbb
mov
(bad)
inc
dec
xor
lods
ds
xchg
and
in
cmps
xchg
cli
(bad)
push
adc
pushf
dec
or
mov
xor
sbb
mov
stos
fdivr
(bad)
jmp
sub
(bad)
out
lds
jecxz
daa
pusha
mov
mov
jnp
jnp
icebp
(bad)
(bad)
jl
not
out
stos
loop
scas
mov
(bad)
(bad)
call
mov
and
int3
sub
or
cs
push
cli
scas
and
loopne
(bad)
dec
loopne
xor
xor
xchg
push
mov
movs
dec
out
out
sub
mov
out
or
jmp
iret
shl
xchg
jae
jmp
xchg
jg
dec
cmp
push
push
lock
(bad)
mov
icebp
or
fsub
(bad)
ins
popf
stos
lea
cmc
(bad)
gs
inc
icebp
sti
cmps
cmc
dec
fimul
bound
jo
push
sbb
push
dec
add
daa
xor
(bad)
jmp
push
jae
or
cmp
push
xor
cli
add
(bad)
(bad)
(bad)
call
lock
(bad)
in
mov
rcr
cmp
les
cdq
aam
cmp
jno
loope
and
sbb
(bad)
(bad)
(bad)
(bad)
fidivr
sbb
movs
cs
sub
jmp
pop
jg
int3
out
add
into
fucompp
pop
dec
jp
jno
movs
(bad)
mov
movs
jae
jo
fnstsw
cs
mov
daa
rcr
sub
and
(bad)
(bad)
(bad)
(bad)
clc
clc
inc
mov
enter
mov
or
sub
adc
push
push
xchg
(bad)
(bad)
(bad)
(bad)
jle
cdq
hlt
stos
xchg
add
add
(bad)
(bad)
sbb
neg
push
in
in
fist
dec
xchg
add
ins
in
jno
push
adc
and
push
jns
(bad)
(bad)
push
out
iret
out
or
ins
pop
push
out
xor
shr
std
outs
jl
enter
fcomip
(bad)
(bad)
cli
sahf
cmp
fwait
jg
movs
(bad)
rol
shr
and
out
addr16
cli
(bad)
jmp
xchg
ret
rcr
fld
sti
popf
(bad)
fucomip
adc
sti
fdivr
pop
pop
cmp
jmp
popa
int3
enter
aas
jmp
test
lock
xchg
pusha
ja
dec
add
hlt
(bad)
(bad)
jmp
jl
xchg
cmp
push
mov
out
dec
mov
push
mov
arpl
test
not
je
push
popf
jmp
pop
ss
adc
mov
bound
out
cld
ins
int3
push
(bad)
(bad)
(bad)
jmp
fucomp
lea
jle
dec
iret
pop
mov
xor
sar
rcl
mov
mov
(bad)
(bad)
(bad)
call
pop
shl
or
fld
xor
ficom
xchg
mov
stos
es
int
sbb
(bad)
call
aas
sub
or
call
pop
sahf
aam
xchg
dec
push
(bad)
(bad)
fst
sbb
pushf
or
sub
jp
rcl
lea
add
mov
pop
cmp
(bad)
test
jmp
ror
sub
cld
mov
mov
push
loop
or
cmp
(bad)
(bad)
(bad)
fist
mov
jge
mov
sbb
mov
cmps
(bad)
jmp
mov
neg
inc
xor
push
out
(bad)
mov
inc
mov
js
cmp
cwde
push
pop
jns
sub
cmp
aam
cdq
push
pop
outs
es
cmp
jmp
inc
xlat
jmp
nop
rcr
(bad)
(bad)
(bad)
dec
sahf
push
lea
stos
and
xchg
jnp
mov
pop
dec
mov
jns
push
lods
mov
(bad)
(bad)
(bad)
fucomip
push
sahf
and
nop
fiadd
cmp
mov
cmp
int
mov
movs
enter
jmp
(bad)
xchg
sbb
jg
dec
sar
addr16
sti
add
add
pop
jno
pop
(bad)
(bad)
(bad)
inc
sbb
dec
push
push
xchg
pushf
fs
int3
adc
jp
adc
hlt
(bad)
leave
mov
fcom
(bad)
(bad)
push
test
or
inc
(bad)
sbb
xor
cli
or
mov
add
(bad)
(bad)
(bad)
call
xchg
mov
sub
lds
(bad)
fcom
jmp
test
lahf
mov
(bad)
clc
jo
mov
cmp
ss
mov
retf
mov
adc
loopne
out
(bad)
jg
dec
ret
dec
push
cmps
sub
shr
push
mov
xlat
stos
add
faddp
test
scas
cli
cli
cmps
pop
jbe
mov
popf
iret
xchg
or
gs
sbb
loopne
push
cld
add
dec
xchg
les
pop
jecxz
loopne
jmp
xor
sbb
mov
push
test
mov
outs
adc
retf
jbe
push
aas
ficom
mov
pop
movs
or
(bad)
(bad)
call
outs
movs
shl
or
in
push
cmps
int3
dec
fist
mov
imul
jmp
or
mov
jno
fisub
inc
in
mov
jmp
lock
fild
fidivr
movs
dec
jg
sti
jnp
mov
push
cdq
fstp
jmp
(bad)
pop
or
fcom
in
xchg
pop
(bad)
fwait
sub
lods
pop
icebp
jmp
or
xchg
call
pop
adc
add
arpl
and
ja
ret
cvtps2pd
lahf
cdq
adc
push
cmp
xchg
or
push
xlat
adc
or
pop
mov
jmp
dec
(bad)
(bad)
call
sub
sub
aaa
add
mov
fwait
mov
addr16
push
pop
inc
imul
xchg
and
das
mov
into
sbb
je
cdq
sub
inc
movs
retf
or
mov
dec
mov
(bad)
dec
dec
sbb
pop
(bad)
stc
or
aam
jg
(bad)
(bad)
(bad)
call
xchg
xor
pop
pop
cmp
push
sbb
aam
outs
fstp
(bad)
call
jmp
and
mov
inc
test
nop
lahf
dec
and
shr
mov
dec
(bad)
(bad)
(bad)
jmp
loope
mov
jge
sar
fs
add
ins
retf
into
mov
(bad)
call
cld
call
fdiv
mov
cs
add
lahf
es
mov
push
data16
cmp
pop
out
mov
sbb
and
sbb
addr16
(bad)
(bad)
inc
scas
pushf
mov
cmp
ja
fwait
pop
dec
or
int3
cdq
ret
pop
scas
push
je
(bad)
(bad)
dec
jmp
sahf
adc
push
xchg
retf
popf
adc
jle
shl
xchg
dec
(bad)
in
(bad)
mov
adc
stc
(bad)
loop
fsub
jl
ficomp
mov
(bad)
(bad)
(bad)
push
jno
mov
jne
pop
fistp
cmp
test
dec
sbb
pop
mov
aaa
jp
scas
ss
(bad)
(bad)
jmp
repnz
(bad)
in
bound
shl
push
fsubr
(bad)
shl
and
nop
(bad)
(bad)
(bad)
dec
lods
inc
dec
mov
push
int3
mov
sbb
jo
addr16
lods
sar
(bad)
(bad)
(bad)
fisttp
xor
dec
xor
xchg
adc
or
mov
popf
xchg
cmp
loopne
dec
jmp
in
dec
popf
mov
cmp
add
lock
vmovsd
mov
dec
jmp
mov
dec
mov
movs
adc
js
rcr
(bad)
(bad)
push
pop
sbb
mov
mov
out
scas
push
cmp
xchg
test
cmps
and
(bad)
call
lahf
jmp
sti
push
lods
ror
mov
mov
push
test
stos
(bad)
(bad)
call
pop
mov
push
and
cli
mov
movs
lock
mov
(bad)
push
repnz
test
push
fadd
pop
(bad)
and
dec
cmc
jo
pushf
jns
add
inc
jle
(bad)
fdiv
(bad)
inc
xchg
cmp
in
(bad)
push
mov
sbb
jmp
ss
data16
test
sti
sbb
jno
iret
(bad)
loope
in
stos
push
(bad)
(bad)
(bad)
inc
mov
ss
add
mov
mov
jmp
enter
push
adc
(bad)
(bad)
dec
sbb
std
int
fsubr
mov
out
jl
dec
js
jns
stos
addr16
push
add
cmp
(bad)
(bad)
jmp
push
(bad)
cmp
out
push
jg
stc
adc
daa
das
xlat
mov
cmp
(bad)
call
and
pcmpeqw
xchg
xor
mov
xchg
(bad)
xor
jl
pop
(bad)
(bad)
(bad)
inc
pop
fcmovnbe
in
jo
pop
dec
add
in
test
jnp
pop
cwde
hlt
test
xor
inc
mov
jg
(bad)
dec
jle
xor
xor
out
cmp
cmps
rcl
cmp
(bad)
(bad)
inc
loope
cmp
test
loop
int3
test
test
sti
(bad)
inc
cdq
dec
stos
in
jge
cmp
jge
movs
or
fdiv
xchg
sbb
mov
adc
call
test
dec
push
out
nop
cs
loop
pop
xchg
add
adc
mov
fnstsw
mov
mov
and
dec
cmc
push
add
mov
ds
(bad)
(bad)
jmp
jge
mov
icebp
cmps
adc
lahf
dec
stos
(bad)
mov
sti
std
js
outs
or
ins
das
dec
(bad)
(bad)
(bad)
call
out
rol
(bad)
out
pop
xchg
cmp
jecxz
and
je
repz
jne
jmp
jp
mov
shl
fmul
jae
fist
mov
xchg
aam
pop
data16
(bad)
(bad)
(bad)
jmp
xchg
push
cmc
test
icebp
sbb
rcl
sub
out
push
out
aad
and
ss
add
inc
(bad)
cli
iret
fdiv
shr
sbb
aas
adc
(bad)
(bad)
inc
push
push
iret
inc
outs
into
std
xor
inc
test
push
pop
shl
jp
(bad)
mov
outs
xor
push
daa
sbb
and
mov
(bad)
(bad)
jg
sbb
popa
ret
add
lock
cmps
jmp
jl
out
jbe
mov
stos
mov
(bad)
push
cmps
cmp
cmp
fiadd
rcr
mov
jecxz
fdiv
cmp
mov
aas
mov
in
stos
and
loope
sub
add
outs
call
fbstp
sub
mov
hlt
fwait
sub
sub
xchg
(bad)
(bad)
aas
xor
xor
cwde
retf
icebp
ret
push
add
int3
cmovae
mov
fwait
loop
adc
mov
je
pop
xchg
sbb
adc
mul
and
(bad)
(bad)
dec
ja
dec
lea
div
xlat
neg
add
sbb
int3
lea
clc
(bad)
(bad)
jmp
leave
inc
movs
jg
pop
call
es
mov
xor
adc
enter
push
imul
mov
pop
dec
jne
xchg
dec
pop
adc
in
sar
(bad)
(bad)
push
xchg
mov
test
test
lods
sub
outs
cmp
cmp
adc
int
popf
mov
push
or
(bad)
(bad)
jmp
mov
xor
mov
outs
lods
sbb
(bad)
mov
adc
ret
(bad)
(bad)
(bad)
(bad)
(bad)
and
sub
lea
nop
int
mov
push
jmp
(bad)
rol
push
inc
cmp
in
jg
(bad)
inc
jmp
fbstp
dec
inc
retf
ret
in
in
pop
and
xlat
dec
pop
and
sub
jecxz
sti
push
add
dec
ret
push
shr
or
lahf
data16
pop
jmp
leave
mov
(bad)
(bad)
jmp
sbb
lock
icebp
or
or
mov
iret
jle
daa
xor
xchg
xadd
jmp
cmp
dec
adc
mov
test
clc
or
mov
enter
mov
stc
pusha
loopne
mov
pop
xchg
into
adc
ret
imul
ret
add
ds
cli
inc
mov
repz
mov
or
sbb
(bad)
(bad)
(bad)
push
add
retf
xchg
inc
popa
jmp
loope
fnop
pop
(bad)
out
push
push
in
mov
jo
jg
(bad)
fbstp
mov
xlat
and
pop
sub
mov
pop
xor
mov
mov
mov
pop
push
pop
cmp
push
fwait
mov
dec
(bad)
inc
and
mov
adc
enter
(bad)
add
push
sbb
gs
xor
lock
hlt
or
and
(bad)
(bad)
inc
call
js
add
dec
ins
ror
imul
(bad)
(bad)
(bad)
call
push
cmc
jle
sub
fiadd
jne
and
or
jecxz
adc
(bad)
and
(bad)
(bad)
(bad)
(bad)
js
add
xchg
add
pop
inc
in
push
pushf
dec
sahf
aam
jmp
mov
jg
(bad)
mov
adc
into
xchg
mov
imul
sbb
xchg
nop
(bad)
(bad)
(bad)
call
shl
push
adc
pop
and
inc
cdq
(bad)
ins
add
adc
outs
inc
jb
ins
(bad)
push
adc
(bad)
(bad)
(bad)
(bad)
js
je
push
mov
fs
lock
adc
pop
adc
mov
dec
call
sar
(bad)
jmp
push
sub
(bad)
popa
ja
out
fcomp
adc
into
cmc
xchg
xlat
test
or
jg
mov
mov
inc
mov
das
std
add
add
(bad)
(bad)
(bad)
(bad)
jle
mov
in
mov
repnz
lds
xchg
(bad)
sbb
(bad)
jmp
jge
xor
adc
pop
push
repnz
add
hlt
dec
fcom
(bad)
leave
stos
retf
mov
outs
push
dec
add
retf
cwde
aas
daa
imul
das
jo
imul
adc
push
in
ret
jbe
and
xchg
jle
or
shl
inc
push
movs
dec
xchg
(bad)
(bad)
(bad)
(bad)
jp
stos
push
mov
xor
dec
pop
pusha
clc
shl
stc
mov
and
add
xchg
push
(bad)
jmp
xor
dec
push
dec
and
dec
cld
add
(bad)
jmp
clc
inc
mov
cmp
sub
and
push
(bad)
(bad)
dec
data16
adc
out
ja
pop
out
cmp
cmp
cmps
dec
dec
mov
(bad)
(bad)
(bad)
call
out
test
mov
gs
loope
sub
mov
jle
imul
jmp
push
jg
imul
add
stos
(bad)
dec
mov
lea
add
arpl
(bad)
(bad)
jmp
jecxz
lods
icebp
je
mov
jmp
pop
pop
and
mov
mov
in
in
fmul
sub
jmp
fcomp
neg
inc
cmp
dec
call
mov
inc
int3
and
mov
(bad)
(bad)
(bad)
jmp
test
jecxz
enter
xor
outs
call
xchg
ss
push
(bad)
(bad)
(bad)
push
inc
jb
push
jmp
imul
mov
jb
pusha
sahf
loop
mov
movs
jae
xor
in
cmc
(bad)
jmp
shl
daa
mov
test
out
dec
xchg
sbb
loop
add
in
inc
ds
arpl
xchg
mov
sbb
mov
sbb
inc
call
(bad)
dec
dec
call
mov
sbb
pop
sti
scas
sub
push
mov
push
sbb
push
movs
in
mov
lock
pop
xor
jg
cdq
xor
(bad)
lods
sub
les
inc
xchg
pusha
in
push
sar
jmp
jbe
pop
and
loop
test
(bad)
(bad)
call
adc
test
fsub
sub
xor
jns
sub
pop
scas
sub
aas
xchg
sub
je
loop
add
hlt
test
mov
fwait
mov
fild
les
mov
(bad)
(bad)
call
inc
and
cmps
push
adc
add
rcr
(bad)
(bad)
jg
xchg
repz
jb
imul
ret
xchg
cmp
adc
(bad)
push
test
fcomp
sub
sub
xchg
arpl
test
out
(bad)
(bad)
(bad)
inc
inc
stos
push
mov
adc
fcom
les
xor
je
lock
push
(bad)
(bad)
(bad)
cmp
inc
xor
sar
das
sahf
pusha
(bad)
mov
(bad)
mov
imul
dec
and
xor
sub
ss
jmp
xor
adc
sar
(bad)
(bad)
mov
stos
cmp
mov
add
or
in
aas
(bad)
xchg
adc
xor
inc
(bad)
(bad)
(bad)
jmp
add
mov
(bad)
hlt
clc
stos
mov
outs
lods
push
scas
loop
scas
arpl
(bad)
(bad)
jmp
les
test
push
popa
stos
out
es
sti
bound
mov
lahf
(bad)
(bad)
fcomip
lea
and
xchg
or
sbb
cmp
retf
icebp
pop
dec
(bad)
(bad)
(bad)
call
cmp
ret
mov
hlt
or
loope
movs
jp
cmp
(bad)
(bad)
(bad)
call
jmp
neg
test
shl
call
test
pop
cld
push
jnp
mov
scas
leave
(bad)
mov
stc
mov
mov
add
jmp
jmp
test
pushf
sub
das
ss
lock
(bad)
jmp
(bad)
jno
push
cli
inc
xor
jnp
add
icebp
cmp
out
sti
loop
cmp
push
xor
sub
aad
(bad)
inc
mov
xor
xchg
ins
jno
and
dec
(bad)
cs
mov
fwait
stos
push
inc
mov
jmp
inc
jg
mov
pop
sub
ds
test
in
mov
(bad)
mov
ja
and
mov
inc
xchg
lea
xchg
pop
movq
(bad)
(bad)
jmp
cmp
sbb
test
cmps
call
pop
sub
test
pop
push
sbb
push
inc
jmp
aad
mov
fwait
out
mov
pop
loopne
xor
imul
pop
into
push
push
call
push
push
bound
enter
imul
jl
aaa
cmp
cwde
cmp
idiv
mov
retf
xchg
jae
xor
mov
lods
mov
dec
nop
add
mov
(bad)
(bad)
push
xchg
cmp
retf
(bad)
and
mov
pop
sbb
data16
jmp
out
adc
sbb
pop
ds
inc
loope
cmp
call
push
adc
pop
ds
push
ins
or
pop
xchg
sbb
adc
add
mov
sub
stos
mov
push
aaa
dec
and
movs
js
and
addr16
or
pop
add
call
std
jae
gs
xor
pop
push
sub
and
sar
add
or
add
sub
jecxz
(bad)
jg
and
cmp
loope
push
movs
scas
fldcw
fsub
lods
push
push
(bad)
(bad)
call
int3
xlat
push
inc
nop
fcom
fs
fs
scas
xchg
sub
call
jmp
fs
fcomp
inc
movs
jmp
lahf
pop
sti
rol
mov
jge
pushf
(bad)
(bad)
(bad)
(bad)
clc
dec
mov
xchg
sbb
data16
inc
call
stos
std
bound
cli
adc
mov
(bad)
(bad)
jmp
xchg
or
xlat
pop
stos
sbb
or
adc
(bad)
(bad)
(bad)
inc
out
aad
pusha
cdq
add
neg
scas
mov
sub
add
clc
out
clc
sahf
push
or
inc
packsswb
or
dec
(bad)
inc
fdivp
cwde
xchg
xor
div
ret
movs
out
xlat
jl
xchg
sahf
push
jae
pop
jg
jg
or
add
sub
mov
mov
out
clc
jmp
int
loopne
dec
inc
gs
pop
sub
retf
es
pop
cmp
xor
lods
mov
loop
aad
fwait
xor
pushf
fdiv
mov
sbb
shl
mov
jge
mov
jb
out
(bad)
jmp
xchg
xor
fstp
cwde
dec
retf
sbb
jmp
push
inc
cdq
and
sub
(bad)
mov
jle
imul
(bad)
(bad)
(bad)
call
das
push
and
js
sbb
and
push
test
cmp
rcr
std
push
sub
xor
les
push
mov
jl
(bad)
(bad)
jg
mov
shl
push
pop
scas
repz
xchg
xchg
mov
sub
repz
push
mov
mov
ret
movs
and
nop
and
push
fst
aaa
lea
push
dec
imul
jo
mov
mov
push
adc
mov
clc
or
xchg
loope
xor
cld
(bad)
(bad)
jmp
sub
ss
jo
pop
les
add
retf
push
add
jg
xchg
jp
xchg
rcl
or
mov
add
aas
or
pop
inc
shr
out
(bad)
loop
(bad)
push
movs
aas
cmp
retf
cs
cld
dec
fwait
jmp
or
sti
inc
xor
adc
jmp
or
cwde
out
in
in
sub
retf
mov
repnz
clc
in
mov
bound
inc
sbb
shl
pop
jmp
retf
sahf
inc
idiv
(bad)
(bad)
(bad)
cmp
aaa
mov
movs
cwde
lods
dec
out
jmp
outs
retf
jge
sahf
ss
xchg
mov
call
jge
stos
push
shr
adc
enter
fisttp
pushf
bound
sahf
jmp
(bad)
(bad)
(bad)
dec
(bad)
int3
jle
xchg
add
add
mov
jno
inc
mov
xchg
inc
adc
scas
push
cmp
sar
mov
dec
inc
rol
dec
xor
icebp
(bad)
(bad)
call
(bad)
xor
sbb
sub
shl
and
outs
(bad)
(bad)
call
(bad)
lds
mov
sbb
add
or
leave
jmp
adc
call
pop
cmps
jg
sbb
(bad)
xchg
push
cmp
jg
movs
retf
sbb
sahf
(bad)
mov
mov
or
cs
jp
in
inc
test
retf
(bad)
jg
dec
jmp
xchg
movs
xchg
xor
(bad)
fcomip
out
mov
mov
inc
aad
cmp
icebp
push
scas
adc
nop
cmps
xor
(bad)
in
pop
add
sar
cmp
mov
mov
or
repnz
sub
movs
sbb
call
and
push
mov
jle
cmps
aas
adc
mov
dec
pusha
mov
mov
(bad)
(bad)
dec
inc
aaa
cs
sbb
push
dec
mov
push
mov
cmp
push
rcl
(bad)
call
push
dec
cmp
xchg
aas
pop
lahf
adc
cli
adc
cmp
je
jb
ds
int
(bad)
(bad)
(bad)
out
jl
test
pop
or
add
cld
loop
loopne
test
imul
(bad)
(bad)
iret
(bad)
and
xchg
sub
(bad)
in
or
pop
sub
in
xchg
sti
jmp
xchg
mov
xor
fcom
and
arpl
vmovaps
(bad)
mov
ret
mov
xor
mov
ret
(bad)
dec
mov
ret
sbb
add
push
aas
pop
push
mov
jo
xchg
loop
(bad)
(bad)
dec
mov
test
(bad)
in
rcr
pop
cdq
and
cmc
(bad)
loop
lods
(bad)
mov
aam
or
ror
iret
cmp
js
pop
mov
xlat
(bad)
(bad)
call
xor
je
xor
dec
xchg
cmp
test
aaa
inc
sub
(bad)
(bad)
(bad)
jg
dec
mov
jl
test
push
jmp
rcr
cmc
(bad)
push
pop
mov
mov
(bad)
mov
mov
rol
pop
jo
ja
(bad)
jbe
jg
aas
push
(bad)
(bad)
(bad)
(bad)
jp
loope
retf
xchg
loop
xchg
stos
cmp
cmp
jecxz
fisttp
or
xor
out
(bad)
(bad)
(bad)
inc
or
mov
outs
bnd
ins
or
jecxz
xor
out
jle
ret
dec
sbb
sar
(bad)
(bad)
call
sbb
(bad)
in
pop
in
mov
fcmovne
push
xor
or
imul
shl
inc
push
idiv
rcr
fcomp
jbe
mov
jl
add
fiadd
fcomip
sbb
mov
add
add
in
ficom
(bad)
sub
(bad)
call
add
cdq
imul
aas
mov
data16
(bad)
(bad)
(bad)
jg
(bad)
arpl
mov
xchg
pop
pop
sub
dec
jnp
aas
xchg
ja
es
cli
xchg
stc
or
xchg
sbb
and
and
leave
lock
pusha
jmp
push
sub
(bad)
(bad)
jmp
(bad)
pop
dec
into
lock
jle
cdq
scas
pop
add
pusha
add
xlat
cmp
repz
mov
cmp
xchg
add
pop
sbb
enter
cvtpi2ps
dec
sbb
movs
arpl
(bad)
(bad)
(bad)
dec
(bad)
dec
sub
jp
mov
outs
ret
push
ret
aaa
push
(bad)
or
imul
js
mov
dec
mov
adc
shr
xor
cmps
fisubr
push
not
out
xchg
(bad)
(bad)
dec
fwait
sub
pop
jl
jnp
or
cmps
(bad)
xchg
call
aas
push
sbb
(bad)
xchg
(bad)
call
scas
(bad)
(bad)
shl
clc
out
mov
or
retf
test
shl
loope
enter
lock
inc
mov
sbb
scas
ret
ret
mov
loopne
test
mov
inc
mov
xlat
jns
mov
xor
pop
call
cdq
ror
lock
stos
div
add
ins
and
inc
mov
test
push
fild
jp
(bad)
mov
dec
test
xchg
popa
scas
repz
push
jne
(bad)
xor
call
jg
(bad)
push
xchg
xchg
push
mov
outs
mov
ror
(bad)
mul
aaa
pushf
push
ret
mov
and
mov
cmps
pop
push
jb
jae
rcr
out
and
mov
outs
push
xchg
out
cmp
(bad)
(bad)
inc
jbe
jle
ror
cwde
jb
hlt
or
sbb
jbe
fild
(bad)
jg
push
mov
mov
xchg
push
and
jge
pop
imul
mov
pop
clc
mov
dec
mov
pop
popf
ror
dec
sbb
test
test
(bad)
(bad)
(bad)
dec
jmp
inc
fild
xor
stos
(bad)
ds
jl
ja
ficom
pop
cld
(bad)
(bad)
jmp
adc
cli
scas
mov
enter
ret
jg
retf
add
mov
mov
mov
mov
xlat
mov
pop
xchg
dec
mov
pushf
cmp
nop
je
test
inc
cmps
out
sub
mul
add
(bad)
(bad)
push
pop
scas
and
fwait
lea
cmp
jp
add
dec
test
cli
shl
inc
into
xor
fdivr
lods
jmp
xchg
jae
(bad)
(bad)
(bad)
dec
cmp
das
add
dec
mov
push
ret
sbb
cmp
sub
popf
sar
(bad)
(bad)
(bad)
fxch
scas
xor
and
push
ds
cmp
mov
in
or
(bad)
(bad)
(bad)
(bad)
mov
movs
mov
xor
cli
shl
fmul
(bad)
(bad)
rol
jl
sub
mov
push
add
adc
outs
dec
mov
add
inc
iret
ret
pop
aas
inc
mov
xchg
xchg
fwait
(bad)
(bad)
(bad)
jp
rol
sahf
mov
(bad)
push
rcr
inc
jbe
adc
mov
ins
mov
push
push
jnp
sar
sbb
push
(bad)
(bad)
call
or
outs
ds
mov
in
dec
or
leave
popf
dec
push
int3
jle
lahf
jp
or
icebp
pop
(bad)
jmp
pop
sbb
mov
rcr
jle
(bad)
(bad)
(bad)
(bad)
aam
ret
cmp
pop
call
aam
cmp
cmp
cmc
jns
out
xchg
(bad)
(bad)
(bad)
(bad)
mov
lds
enter
mov
sti
test
dec
cmp
inc
cmp
(bad)
(bad)
jmp
xchg
mov
sbb
push
fld
cmps
(bad)
aad
mov
aaa
inc
pusha
jae
out
or
(bad)
mov
movs
sub
leave
lahf
dec
mov
pop
repz
(bad)
(bad)
mov
inc
sbb
les
imul
dec
xchg
fmul
loopne
lock
push
sar
(bad)
(bad)
push
in
rcl
jmp
(bad)
mov
mov
enter
retf
xor
pop
jno
(bad)
(bad)
dec
sti
and
xor
popf
mov
cmp
repz
dec
das
xchg
cmp
cmp
(bad)
(bad)
(bad)
(bad)
fdiv
pop
mov
cwde
movs
sbb
push
hlt
stos
sub
shl
mov
lea
(bad)
jmp
out
inc
int3
mov
cs
mov
push
jno
jmp
into
push
cs
fcomp
sbb
call
std
jmp
pop
push
iret
jg
sbb
dec
in
jb
xchg
in
sahf
in
cwde
test
(bad)
cli
inc
ins
pop
out
sub
mov
sbb
sub
cdq
jne
test
mov
inc
mov
retf
sbb
pop
pop
push
mov
repnz
scas
clc
dec
fld
and
or
jg
emms
sub
jecxz
and
stos
(bad)
(bad)
(bad)
call
(bad)
fnsave
add
in
cmps
arpl
or
(bad)
jmp
or
inc
adc
repz
and
mov
clc
sub
(bad)
(bad)
push
pop
test
ret
jo
xchg
dec
xor
jl
fbld
lock
dec
aad
sub
sbb
pop
rol
(bad)
fild
mov
cmps
cmp
sbb
inc
aad
(bad)
(bad)
(bad)
push
mov
cld
(bad)
pop
scas
test
rol
sbb
leave
out
mov
icebp
loopne
pop
cmps
inc
sbb
jg
outs
add
push
cli
mov
pop
dec
fiadd
lock
jle
sbb
(bad)
call
addr16
mov
cmp
hlt
inc
ins
mov
fidivr
aaa
mov
inc
setg
(bad)
jmp
popa
xor
add
mov
pop
ror
lods
xor
(bad)
(bad)
call
aam
xchg
mov
fist
push
jae
jbe
hlt
cli
pop
xchg
adc
dec
jl
adc
ins
(bad)
inc
pop
rol
jae
inc
repz
(bad)
(bad)
(bad)
jg
push
jg
jg
stos
and
sahf
out
xchg
cmp
leave
pop
sbb
cmp
xor
or
(bad)
(bad)
(bad)
call
(bad)
dec
dec
mov
pop
push
aaa
push
shl
inc
sbb
ja
inc
retf
lahf
mov
(bad)
mov
adc
sbb
(bad)
(bad)
jmp
fadd
cld
repz
aad
add
rol
test
aaa
fisubr
cmc
fld
pop
lock
add
fdivr
add
mov
xchg
jp
sub
mov
das
cli
(bad)
call
mov
push
nop
xor
leave
shl
pop
test
mov
(bad)
(bad)
call
sbb
in
sub
loopne
jecxz
push
int3
ficomp
ds
mov
aam
push
add
ja
js
mov
mov
lods
adc
cli
(bad)
call
(bad)
lods
jg
cld
xor
ret
xor
jno
or
inc
inc
mov
imul
int3
xor
aaa
cld
outs
out
add
data16
mov
dec
push
lahf
enter
push
and
ja
inc
xor
mov
or
call
push
icebp
add
out
or
lahf
pop
sub
call
push
cmps
(bad)
jecxz
vmread
sbb
mov
sbb
sub
cmp
(bad)
(bad)
dec
adc
scas
fld
imul
sahf
outs
hlt
sub
(bad)
(bad)
(bad)
push
rcr
bound
ja
sbb
ja
sbb
ins
repnz
xchg
and
(bad)
(bad)
push
loopne
cmps
aam
xchg
in
stos
jbe
lods
dec
adc
ss
cmp
cmp
fldenv
cmp
adc
(bad)
(bad)
(bad)
dec
es
enter
sbb
clc
popf
rcr
cmc
pop
out
or
mov
mov
push
dec
and
iret
mov
shl
add
push
stos
lea
nop
imul
daa
stc
cli
jb
shl
(bad)
mov
pop
leave
add
sbb
mov
shl
xor
push
cli
jb
ds
add
xor
sbb
mov
mov
(bad)
(bad)
mov
xor
mov
or
retf
inc
mov
fdivr
jb
ret
(bad)
(bad)
jg
call
pop
adc
(bad)
adc
xor
hlt
xchg
test
sub
clc
(bad)
(bad)
(bad)
jg
pushf
lods
lea
pop
jle
mov
cmp
sub
sbb
loop
call
(bad)
(bad)
dec
rol
pop
cmp
pushf
push
xchg
sub
xor
inc
mov
mov
(bad)
(bad)
inc
out
mov
repnz
dec
jns
sub
push
fiadd
dec
dec
shr
(bad)
(bad)
(bad)
mov
add
repnz
inc
cs
in
mov
loope
push
fldcw
fld
lock
mov
aas
or
pop
xor
fs
add
sub
dec
stos
bound
adc
mov
push
fs
ds
retf
sbb
repnz
(bad)
(bad)
dec
into
mov
jae
xor
jl
cld
jmp
cmps
pop
and
xchg
or
out
xor
or
jmp
pop
push
jns
dec
scas
sub
push
sbb
cmp
lods
sbb
(bad)
(bad)
call
pop
stc
add
mov
push
popf
push
loop
mov
hlt
mov
es
popf
push
cmp
lds
xchg
movs
push
fwait
jl
imul
cmp
mov
(bad)
(bad)
(bad)
(bad)
ffree
jnp
xchg
lds
mov
fsubr
jns
out
mov
mov
xor
pop
jg
(bad)
jmp
pop
mov
pop
loop
dec
movs
sbb
and
xchg
(bad)
(bad)
(bad)
jmp
pop
adc
(bad)
out
into
es
test
(bad)
(bad)
fsubrp
cdq
cmp
adc
mov
add
mov
test
dec
or
mov
mov
pop
lock
call
aaa
(bad)
(bad)
(bad)
(bad)
jnp
shr
fistp
jns
or
rcl
dec
and
rol
cli
(bad)
push
cmps
mov
stc
push
test
dec
sub
mov
in
adc
test
jne
add
pusha
xchg
pop
lods
dec
mov
jecxz
add
push
shl
inc
xor
cmovb
cmc
push
xor
xchg
fdiv
(bad)
call
dec
add
xor
adc
addr16
mov
retf
lds
xchg
add
mov
ja
dec
xor
sub
jge
bound
and
xlat
sub
sbb
(bad)
(bad)
inc
sbb
in
mov
push
mov
xchg
imul
bound
or
loope
(bad)
mov
push
or
pop
add
xor
call
daa
xchg
xor
sbb
cmc
ror
xchg
jno
push
and
lea
dec
cli
mov
fldlg2
xchg
(bad)
(bad)
dec
(bad)
in
sub
dec
(bad)
retf
test
cmp
dec
or
(bad)
push
add
(bad)
(bad)
(bad)
call
adc
test
push
mov
push
adc
pop
jle
call
popf
pop
(bad)
(bad)
(bad)
(bad)
jle
mov
enter
jle
mov
or
mov
popa
lds
adc
mov
scas
(bad)
(bad)
(bad)
inc
ds
in
arpl
fisttp
hlt
into
xchg
stos
test
jmp
xchg
cld
psraw
(bad)
jmp
test
je
jge
jae
push
push
sbb
add
into
(bad)
sub
add
jae
mov
dec
add
and
(bad)
(bad)
(bad)
inc
sti
pusha
clc
ret
(bad)
js
jbe
js
call
sbb
imul
pop
mov
cli
sub
mov
cli
inc
daa
jecxz
test
stos
ret
xor
jnp
(bad)
(bad)
(bad)
std
test
mov
pop
outs
fisttp
dec
push
xchg
jno
lods
popf
xor
pextrw
adc
loopne
pop
into
xor
(bad)
(bad)
mov
rcr
mov
pop
pop
je
(bad)
stc
mov
push
aaa
test
jno
in
sub
(bad)
(bad)
(bad)
std
pusha
xor
pop
(bad)
loopne
jne
sbb
cmp
pop
test
loop
or
jmp
inc
hlt
adc
cwde
push
iret
inc
stos
inc
or
outs
xor
out
mov
ret
mov
push
pop
pop
pop
jo
adc
fbld
add
adc
dec
xor
leave
out
lock
push
aas
icebp
mov
jns
loopne
pop
or
jecxz
out
and
addr16
jl
jmp
push
call
mov
sbb
dec
loopne
cmps
mov
xchg
test
(bad)
(bad)
push
icebp
mov
jge
(bad)
and
jp
fistp
stc
iret
mov
scas
cmp
arpl
(bad)
(bad)
(bad)
call
adc
jle
iret
dec
push
lahf
and
sbb
jnp
fdivr
ds
(bad)
(bad)
(bad)
cmp
pop
add
sbb
jle
dec
ret
cld
cmp
mov
icebp
pusha
nop
pop
inc
adc
(bad)
(bad)
(bad)
call
retf
mov
fisttp
jno
loop
icebp
gs
jns
les
push
push
inc
pop
cmp
inc
and
bound
pop
pop
loope
xchg
js
imul
and
add
fisttp
sub
jb
sub
(bad)
fbld
pop
jecxz
mov
xor
or
(bad)
(bad)
cld
or
or
cld
sub
out
xor
cwde
mov
ja
mov
or
sub
inc
adc
sbb
or
add
fcomi
loopne
sahf
mov
or
push
and
xchg
push
(bad)
(bad)
(bad)
mov
ret
sbb
je
and
adc
dec
addr16
jecxz
push
mov
out
mov
sar
(bad)
(bad)
mov
or
cmps
addr16
xchg
int3
lock
add
scas
adc
ret
outs
imul
(bad)
(bad)
call
mov
retf
jbe
or
adc
std
int3
adc
inc
(bad)
pop
lods
sub
sar
(bad)
(bad)
inc
cmp
and
outs
inc
adc
push
mov
sub
shr
(bad)
(bad)
(bad)
jmp
add
loopne
ss
scas
cmp
or
stos
sar
sub
and
mul
call
jmp
inc
in
dec
inc
stos
push
hlt
call
test
or
loopne
jecxz
call
popa
ja
loop
adc
dec
loope
ja
jmp
ss
(bad)
mov
shl
xor
int3
push
jb
cmp
sbb
(bad)
(bad)
jmp
inc
dec
jl
adc
mov
fiadd
les
ret
rcr
(bad)
(bad)
jg
fbld
fcomip
cld
ret
mov
jb
push
mov
outs
enter
mov
(bad)
call
push
pop
or
jg
sub
inc
int
jg
shr
fcomp
fcom
cmp
(bad)
dec
inc
idiv
dec
retf
not
retf
(bad)
aas
out
mov
(bad)
mov
loope
(bad)
(bad)
(bad)
call
popf
jl
sub
or
nop
sbb
or
test
test
stos
xor
xchg
adc
call
fst
punpcklbw
jae
xor
pop
aad
adc
or
sbb
call
stc
mov
repz
sbb
jmp
das
outs
int
aaa
jns
sti
push
and
(bad)
jmp
out
jecxz
lahf
mov
jno
or
out
in
push
xor
test
popf
fisub
cmp
fnstcw
(bad)
(bad)
(bad)
inc
dec
xlat
jb
fninit
pop
xchg
into
mov
out
push
cmp
add
mov
pop
push
mov
call
popa
mov
add
(bad)
sahf
sbb
mov
dec
mov
arpl
addr16
(bad)
call
sub
sub
or
leavew
stos
sub
and
pop
push
leave
mov
jmp
call
(bad)
jmp
sub
sub
mov
and
cdq
call
call
ror
imul
inc
lds
xor
jne
dec
xor
nop
iret
lock
mov
xchg
dec
and
addr16
cmp
jmp
pop
sti
in
sti
int
fist
(bad)
cmp
ins
popa
mov
xchg
push
aam
lods
(bad)
jmp
mov
ret
inc
dec
repz
sbb
dec
int
(bad)
jmp
cmps
call
dec
aaa
retf
pop
adc
adc
mov
jb
jnp
inc
fmul
(bad)
(bad)
dec
scas
test
scas
shl
mov
cli
mov
pusha
movs
ror
aad
nop
xor
adc
jmp
mov
cmp
ror
sahf
inc
or
xor
data16
mov
(bad)
(bad)
(bad)
out
sbb
push
ins
fcom
lds
fdiv
cmp
shr
sbb
xchg
push
and
mov
jmp
fnsave
and
sbb
int
mov
sub
mov
mov
(bad)
(bad)
dec
ins
xchg
std
cmp
std
cmps
rol
aad
jg
jo
pop
mov
cld
(bad)
jmp
mov
popa
cmp
add
jl
mov
out
or
inc
mov
push
sbb
in
imul
inc
in
and
out
xor
ins
(bad)
(bad)
(bad)
jmp
mov
xor
xchg
fwait
movs
push
inc
add
es
mov
aam
ins
jge
jge
xchg
mov
cld
mov
dec
push
sbb
pop
(bad)
xchg
push
xchg
fs
sub
loop
jle
(bad)
(bad)
dec
sub
call
shl
mov
inc
xchg
je
adc
or
sub
mov
(bad)
(bad)
jg
and
and
aaa
dec
and
mov
pop
cmp
cmc
sar
arpl
addr16
inc
(bad)
jmp
inc
retf
dec
fld
jp
xchg
movs
(bad)
(bad)
call
mov
inc
aaa
imul
xor
sbb
cmp
mov
out
and
outs
jae
sar
inc
add
aas
xchg
pop
inc
imul
leave
xor
push
push
ins
cmc
jmp
(bad)
jmp
lods
mov
sbb
mov
and
push
jb
clc
cmp
icebp
jge
imul
(bad)
(bad)
(bad)
jmp
ficomp
dec
push
jp
clc
lods
aad
hlt
(bad)
cvtps2pd
jmp
adc
push
dec
push
std
es
adc
or
inc
and
jecxz
fadd
sbb
xchg
test
lahf
push
pop
jo
lahf
inc
cdq
movs
hlt
sub
inc
fimul
mov
mov
lea
mov
push
xchg
into
sbb
mov
(bad)
(bad)
jg
fwait
rcl
sbb
enter
adc
push
xchg
xor
mov
inc
jg
mov
dec
cld
mov
lods
mov
jp
push
push
stc
push
sbb
(bad)
dec
aaa
pop
xor
inc
leave
and
push
mov
ins
pop
cmp
cmc
(bad)
stc
push
sub
xchg
icebp
ds
mov
sbb
loopne
(bad)
push
pinsrw
adc
adc
mov
scas
movs
add
jbe
sbb
or
push
mov
lods
jmp
loope
xchg
jae
pop
(bad)
(bad)
(bad)
jmp
xor
outs
cdq
(bad)
and
or
jo
pusha
cli
gs
mov
and
sbb
(bad)
out
push
movs
add
jmp
aad
sbb
stos
adc
(bad)
push
xchg
in
push
or
mov
out
lods
pop
cmc
bnd
(bad)
jmp
mov
sahf
mov
cdq
jnp
mov
sub
add
(bad)
jmp
mov
pop
add
idiv
gs
adc
push
push
mov
ror
push
xchg
pusha
sar
cmp
mov
call
ret
call
lds
push
je
xchg
rol
sbb
(bad)
(bad)
(bad)
ficom
xor
xchg
pop
cmps
hlt
dec
pop
outs
mov
jno
xor
fsub
cli
inc
hlt
sbb
cld
call
gs
(bad)
sar
xor
shr
jmp
stos
cmp
dec
cmc
jge
fs
mov
std
jne
(bad)
clc
repz
pop
lock
lds
xlat
pop
cld
jmp
inc
repz
stos
ret
leave
pop
mov
mov
(bad)
jg
mov
xchg
or
xor
mov
jbe
mov
pop
adc
(bad)
(bad)
jmp
adc
in
ficom
cmp
loope
scas
jg
sbb
push
dec
and
jno
inc
scas
aam
(bad)
(bad)
(bad)
(bad)
out
dec
aam
bound
pop
dec
cmp
loopne
inc
xchg
xor
mov
into
push
sbb
retf
(bad)
jmp
out
push
outs
leave
cmps
or
pop
jge
cs
rcl
jb
fmul
xchg
push
mov
xor
(bad)
call
jecxz
sub
popf
push
fucomip
xchg
push
nop
rol
dec
mov
mov
(bad)
(bad)
call
outs
mov
xchg
push
mov
fimul
push
test
push
jecxz
cmp
push
mov
sub
dec
je
dec
inc
mov
and
jno
add
sub
xchg
(bad)
(bad)
(bad)
mov
inc
out
lahf
add
fimul
lahf
mov
jmp
xchg
mov
scas
dec
lock
sbb
pop
push
repz
xchg
add
lds
push
adc
inc
js
jle
aaa
inc
sar
pop
or
shl
pop
push
outs
test
xchg
inc
push
mov
repnz
data16
add
movs
sbb
inc
stc
add
scas
shl
xchg
mov
aaa
std
inc
mov
push
jmp
lods
ficomp
jmp
push
sbb
outs
dec
cmp
aam
inc
aam
push
addps
sti
test
dec
or
neg
aas
sbb
(bad)
ret
and
into
shl
jne
(bad)
rcr
push
pop
xor
cld
lock
lock
sahf
test
and
inc
jge
push
jge
ins
jmp
retf
iret
rcl
xchg
fcomip
dec
mov
ds
out
mov
cmp
out
(bad)
(bad)
(bad)
push
fs
adc
sub
repz
xchg
mov
lds
push
jnp
or
loop
and
(bad)
(bad)
call
imul
jnp
push
push
std
shl
and
cmps
shl
xlat
push
clc
dec
out
cs
(bad)
(bad)
jg
sub
ds
xchg
jns
ja
jbe
mov
iret
push
jl
mov
cld
call
jne
addr16
xor
jne
xchg
pop
cli
outs
adc
jg
or
pop
dec
not
dec
(bad)
adc
pop
int3
push
and
(bad)
(bad)
(bad)
jmp
cmps
call
(bad)
push
sbb
xchg
int
xor
mov
js
cmc
inc
pop
sub
rcr
ret
leave
stc
and
test
inc
push
es
aaa
mov
arpl
pop
(bad)
(bad)
(bad)
push
scas
lea
xor
and
aas
push
retf
dec
mov
mov
dec
nop
retf
jg
xchg
rcr
test
add
xor
lods
push
es
mov
(bad)
jmp
retf
mov
ins
(bad)
std
into
rcl
test
scas
fisub
sbb
aaa
inc
sub
fs
xchg
inc
cdq
sub
and
(bad)
mov
ds
test
clc
jg
in
pop
fs
pop
mov
aas
mov
push
adc
jmp
and
call
es
arpl
pusha
repnz
iret
push
cmps
aam
clc
je
inc
(bad)
xor
push
add
sbb
call
in
shl
xchg
xor
adc
pushf
shl
call
retf
std
(bad)
(bad)
jmp
neg
data16
push
das
rcr
mov
gs
pop
into
(bad)
jmp
lahf
dec
mov
(bad)
call
or
cmp
es
xor
push
jo
inc
movs
imul
pusha
inc
inc
fs
mov
scas
lahf
sbb
ret
in
xor
cmps
(bad)
(bad)
mov
aam
lods
cs
jle
inc
jmp
mov
inc
popf
(bad)
jg
call
shl
jle
call
dec
add
loope
xor
add
mov
cmp
(bad)
in
(bad)
inc
sub
adc
mov
lock
sar
mov
mov
fdivr
or
jmp
mov
(bad)
(bad)
call
ds
cs
jle
jb
les
push
pop
mov
xchg
sub
(bad)
enter
ret
(bad)
jmp
dec
cmc
mov
xchg
fisttp
in
xor
popf
(bad)
dec
(bad)
(bad)
jg
mov
sub
int
xor
push
call
lar
shl
jnp
(bad)
(bad)
(bad)
dec
loope
outs
push
icebp
sub
loop
fstp
je
jp
aad
inc
xchg
push
and
pop
(bad)
(bad)
(bad)
dec
or
push
movs
mov
mov
xchg
and
pop
cdq
ud0
(bad)
(bad)
sti
xor
ss
inc
enter
pop
int
mov
pop
inc
adc
add
(bad)
mov
mov
jp
popf
(bad)
fmul
data16
out
retf
in
push
ror
cdq
(bad)
(bad)
(bad)
(bad)
mov
xor
or
in
mov
mov
xchg
push
add
(bad)
(bad)
(bad)
inc
leave
pop
call
pop
ret
cwde
sahf
les
cmp
in
cmp
sar
adc
lods
(bad)
(bad)
push
xchg
add
dec
loope
loope
jne
outs
sub
inc
arpl
mov
das
adc
push
and
or
mov
jecxz
jg
(bad)
(bad)
jmp
mov
test
inc
and
push
sbb
aaa
mov
dec
pop
fisub
add
pop
inc
mov
mov
add
pusha
add
jnp
push
out
add
out
(bad)
(bad)
call
mov
rcr
push
ds
cmp
or
(bad)
popa
(bad)
(bad)
(bad)
jno
xchg
cmc
mov
inc
(bad)
dec
sti
(bad)
ins
cmp
(bad)
(bad)
(bad)
jmp
pop
je
dec
sub
shr
jbe
lock
std
adc
mov
imul
dec
rcl
ins
pop
lods
cmp
add
scas
popa
dec
mov
jl
lock
(bad)
jmp
mov
cmovns
test
push
xchg
pop
jg
(bad)
(bad)
jmp
fsubrp
xchg
sbb
mov
push
ret
sbb
pop
cli
sbb
daa
mov
sbb
(bad)
jge
mov
iret
jp
pop
popa
mov
jmp
call
jae
fwait
pusha
fst
cmp
aam
mov
loopne
dec
mov
sahf
lock
mov
adc
aaa
std
inc
jnp
jae
idiv
xchg
pusha
inc
mov
push
aad
movs
lea
aaa
std
in
pop
dec
push
adc
sbb
mov
or
(bad)
inc
cwde
sbb
fisubr
add
jne
pop
cmp
sbb
daa
xchg
push
pop
out
add
int3
js
push
sub
push
in
dec
mov
pop
lahf
cmp
inc
mov
ins
test
add
add
(bad)
inc
cld
push
fsub
mov
loope
push
pop
push
(bad)
ret
and
stos
sub
push
in
iret
hlt
pop
mov
sub
inc
gs
or
fs
mov
(bad)
jp
(bad)
std
(bad)
(bad)
jg
add
fiadd
rcl
mov
aad
mov
mov
push
pop
(bad)
(bad)
(bad)
mov
fucomip
jmp
fdiv
sub
(bad)
xor
jg
jno
inc
xor
mov
(bad)
inc
pop
mov
or
lods
sbb
cmc
imul
mov
popa
data16
retf
(bad)
(bad)
call
clc
adc
aas
pop
pop
xchg
pop
and
xchg
or
cmp
or
cmp
fidiv
jg
add
lock
inc
or
inc
sbb
gs
and
(bad)
(bad)
call
adc
push
(bad)
aam
lahf
pop
ret
inc
sbb
gs
cmps
mov
test
ja
out
mov
ret
dec
mov
add
popa
or
push
lods
mov
ja
loopne
push
xchg
mov
mov
dec
sbb
popf
out
lods
xchg
mov
pop
dec
add
push
xor
dec
lock
mov
bound
sub
scas
das
xchg
lods
into
sti
(bad)
call
and
inc
dec
mov
inc
inc
loopne
xor
movs
stos
xor
loope
aam
sar
mov
add
mov
movs
imul
cli
(bad)
dec
cmc
and
inc
in
call
sahf
sub
loop
jns
ss
jg
(bad)
xor
xchg
imul
or
xor
mov
push
(bad)
nop
mov
(bad)
mov
fmulp
lahf
push
push
lock
retf
jg
adc
xor
cmp
fisubr
(bad)
(bad)
dec
mov
mov
xlat
adc
lods
outs
xlat
std
scas
ret
cmps
pop
sbb
fdiv
jbe
es
mov
sub
(bad)
(bad)
(bad)
fidivr
xchg
je
and
hlt
call
sub
ret
pop
cmps
repz
(bad)
(bad)
(bad)
fisttp
in
and
sbb
lods
fsubr
(bad)
std
fstp
pop
cmc
movs
cs
(bad)
(bad)
(bad)
(bad)
cmp
lods
retf
repz
neg
dec
out
gs
retf
and
xlat
shl
(bad)
(bad)
jmp
xor
loope
xchg
call
pop
ficomp
sahf
inc
jg
adc
out
pop
cld
(bad)
ds
repz
test
jg
fistp
fidivr
daa
and
cmp
jl
sar
(bad)
mov
das
out
pop
fdivr
mov
frstor
imul
pop
fcom
scas
jg
(bad)
(bad)
out
and
aas
in
inc
sbb
nop
adc
cmp
in
ins
or
cdq
out
jmp
push
(bad)
(bad)
jg
sbb
imul
in
mov
push
cmp
lods
jmp
into
add
and
(bad)
dec
leave
push
fmulp
lods
gs
mov
call
add
or
jg
sub
rol
xor
xor
ins
cmp
sub
add
(bad)
mov
ror
int3
adc
addr16
out
sbb
xor
repz
cmps
cmp
ins
sti
(bad)
push
jecxz
sbb
dec
cmc
paddb
daa
loopne
repnz
repnz
sti
xchg
jg
xor
push
pop
(bad)
(bad)
(bad)
(bad)
in
pop
scas
jle
cli
xlat
jmp
lods
jle
inc
push
into
or
ret
sti
mov
pop
retf
push
loope
arpl
(bad)
(bad)
push
nop
and
pop
mov
(bad)
dec
and
mov
(bad)
dec
loop
into
dec
sbb
or
es
(bad)
(bad)
(bad)
inc
lods
cmps
mov
dec
xchg
mov
loop
movs
ds
push
and
adc
mov
mov
shl
cld
xchg
push
push
adc
xor
dec
xlat
(bad)
(bad)
fisttp
pop
jb
add
sbb
mov
loope
ds
adc
and
outs
push
jne
push
(bad)
cld
inc
dec
cs
mov
add
fst
mov
mov
aaa
leave
mov
mov
jmp
dec
in
ret
sub
ret
fwait
mov
les
xor
mov
out
call
fwait
mov
dec
xor
or
mov
pop
dec
loopne
lahf
mov
icebp
(bad)
(bad)
dec
mov
(bad)
neg
mov
dec
sub
iret
or
or
fisttp
call
cmp
adc
push
rol
mov
cs
push
inc
sbb
rcl
enter
adc
xor
(bad)
mov
(bad)
dec
sahf
(bad)
(bad)
(bad)
dec
push
aam
or
pusha
pop
retf
cld
mov
ss
in
adc
dec
push
mov
call
movs
cmps
js
mov
loopne
cmps
adc
add
(bad)
call
jnp
fsubp
pop
lock
inc
cld
aad
jge
or
sti
inc
cli
test
and
clc
pop
mov
loop
pop
nop
xchg
pop
mov
inc
pop
pop
adc
push
(bad)
fcomip
dec
mov
mov
or
jne
int3
ficomp
push
add
fist
push
inc
ss
(bad)
(bad)
ds
jmp
arpl
jmp
bnd
ds
in
fsubr
(bad)
call
lods
fs
pop
dec
(bad)
call
xchg
inc
inc
push
adc
arpl
xchg
add
dec
push
in
adc
loopne
sub
sbb
ss
mov
mov
inc
push
mov
xchg
(bad)
ficomp
fs
ins
test
push
(bad)
(bad)
(bad)
call
jb
mov
cwde
dec
sub
cli
popa
sub
and
test
mov
sbb
jl
jmp
push
cmp
loop
mov
repnz
jmp
sub
mov
adc
mov
cmps
(bad)
(bad)
(bad)
out
call
jecxz
mul
mov
hlt
cmp
or
in
xor
int3
sbb
in
sub
outs
sar
(bad)
(bad)
jmp
cmp
dec
xor
ret
addr16
sar
movs
enter
(bad)
push
mov
scas
int
sar
xchg
popf
scas
arpl
add
mov
jg
(bad)
push
cwde
jg
cdq
cmp
push
fisubr
inc
mov
dec
test
loopne
(bad)
(bad)
call
int
xchg
pop
pushf
add
inc
clc
cwde
or
xchg
mov
mov
jmp
inc
loope
sbb
loope
inc
sub
clc
xchg
icebp
lock
(bad)
outs
sbb
ficom
ins
jnp
adc
scas
and
or
(bad)
(bad)
push
rcl
in
and
dec
scas
out
not
pop
push
outs
xor
jno
and
(bad)
(bad)
(bad)
jnp
jecxz
xchg
int3
mov
and
cwde
or
movs
xor
dec
out
sti
mov
pop
loopne
iret
es
jae
or
push
movs
out
popa
ja
into
jg
icebp
(bad)
cld
outs
jb
jecxz
std
(bad)
fmul
int3
unpcklps
push
test
push
cwde
push
ds
push
das
dec
iret
iret
fadd
mov
sub
(bad)
(bad)
(bad)
call
pop
mov
js
xor
pop
xor
nop
sbb
(bad)
fst
push
das
cmp
sahf
push
popf
enter
stos
fcos
(bad)
(bad)
jmp
test
push
mov
clc
add
aad
push
fs
mov
(bad)
mov
imul
ds
or
imul
mov
shr
fwait
sar
(bad)
(bad)
push
fucomp
adc
int
imul
outs
jecxz
or
(bad)
into
cmp
(bad)
(bad)
jg
cdq
inc
out
stos
sar
dec
adc
inc
outs
or
pop
jmp
(bad)
inc
loop
jae
cli
cli
jne
sbb
mov
mov
dec
test
add
(bad)
jmp
outs
nop
add
jl
inc
pop
mov
(bad)
or
xchg
(bad)
(bad)
(bad)
jmp
test
not
or
xchg
push
jb
dec
sbb
popa
movzx
cmp
dec
fs
(bad)
(bad)
jg
jecxz
adc
mov
loope
addr16
pop
and
cwde
pop
lahf
add
cli
push
fadd
iret
push
shl
fist
inc
sub
stos
ret
push
(bad)
(bad)
(bad)
inc
adc
lock
and
pop
adc
and
std
es
in
or
push
(bad)
(bad)
(bad)
mov
psllw
call
inc
scas
xor
mov
jmp
pop
pop
aas
cmps
inc
xor
cmps
mov
popf
loopne
jbe
test
ja
cmp
imul
sbb
daa
jne
xor
scas
mov
and
cwde
jge
sahf
xor
jmp
out
out
xor
jo
cld
test
sahf
ins
out
(bad)
dec
aad
(bad)
jmp
push
fnstcw
rol
dec
mov
jecxz
push
mov
xchg
pop
add
xor
(bad)
mov
adc
pop
jl
mov
in
movs
into
das
push
fadd
jg
pop
mul
mov
aam
cmps
xchg
mov
push
sub
mov
dec
or
cmp
mov
sbb
mov
mov
sub
cmc
and
push
daa
fist
push
add
jge
xchg
les
or
xchg
jmp
lods
xor
(bad)
(bad)
inc
mov
pop
scas
sbb
or
pop
mov
fld
test
mov
inc
jmp
jbe
sbb
sbb
mov
(bad)
inc
xchg
inc
mov
mov
out
bound
cmp
cmps
xchg
add
aam
and
dec
mov
sbb
dec
dec
and
fnstcw
and
jmp
adc
pop
(bad)
(bad)
(bad)
call
movs
jo
leave
jge
iret
fwait
hlt
mov
xchg
xor
mov
pop
dec
mov
(bad)
push
std
fcomip
mov
outs
js
scas
movs
mov
out
push
xor
idiv
(bad)
(bad)
jmp
push
fcmove
sub
push
jmp
mov
stos
jmp
xchg
cmc
cmps
inc
dec
pushf
cwde
adc
adc
in
lods
lods
and
push
inc
stos
jmp
pop
mov
(bad)
inc
jle
in
xchg
lea
test
sub
(bad)
out
mov
sbb
int
mov
or
(bad)
(bad)
inc
xor
cli
adc
out
or
lea
push
xor
push
les
sbb
xchg
push
jmp
clc
jmp
sub
mov
sbb
sbb
movs
and
and
lea
ror
dec
jne
loop
xchg
push
adc
push
test
dec
clc
call
std
ficom
jmp
(bad)
(bad)
mov
inc
xchg
lahf
(bad)
xor
sar
loop
arpl
call
shl
(bad)
(bad)
(bad)
call
pop
aaa
out
dec
shl
shr
add
fmulp
or
pusha
rol
fs
(bad)
(bad)
(bad)
call
int3
mul
adc
xor
std
ret
or
inc
std
or
cmc
jae
stos
mov
(bad)
(bad)
mov
sbb
mov
add
mov
(bad)
mov
and
dec
dec
xchg
or
sub
jl
pop
and
mov
arpl
mov
dec
sar
push
cmp
cmp
(bad)
(bad)
jmp
adc
shr
and
(bad)
and
and
or
sbb
call
out
add
stos
push
jge
lods
or
daa
lahf
out
enter
jmp
aam
cmp
dec
lea
xchg
loopne
mov
and
(bad)
jg
nop
xchg
xor
cmp
aad
xchg
xchg
mov
into
outs
cmps
adc
in
(bad)
cmp
(bad)
(bad)
(bad)
dec
out
jl
and
and
iret
mov
jb
cmc
and
sti
(bad)
(bad)
(bad)
dec
or
lods
aad
sub
sub
retf
jle
andps
cli
fwait
jno
mov
(bad)
(bad)
jmp
dec
pop
xchg
mov
in
ret
mov
or
jg
out
cmp
je
frstor
(bad)
(bad)
(bad)
inc
cdq
dec
xchg
mul
gs
ins
mov
fisub
mov
add
or
or
(bad)
(bad)
inc
mov
(bad)
js
pop
popf
dec
jmp
dec
add
popa
movs
mov
ficom
xor
add
dec
out
ss
mov
test
lahf
push
or
inc
aad
daa
(bad)
pusha
and
and
je
fwait
(bad)
(bad)
(bad)
inc
add
lahf
sbb
mov
or
ficomp
push
test
(bad)
(bad)
call
out
or
sbb
dec
jbe
(bad)
stos
jne
aas
das
or
push
inc
ins
xor
out
ds
(bad)
(bad)
call
iret
mov
out
idiv
jmp
inc
mov
test
dec
std
pop
and
inc
cmp
movs
push
sbb
or
(bad)
fcomp
cmp
mov
sub
cmp
test
inc
cmp
call
pop
out
sbb
add
lea
ins
mov
fdiv
adc
jae
cdq
mov
nop
adc
lea
int3
jmp
(bad)
call
(bad)
mov
cmp
xchg
jp
nop
jbe
jmp
mov
aaa
dec
sar
call
mov
sub
bswap
(bad)
(bad)
(bad)
(bad)
mov
adc
rol
pop
je
push
(bad)
ss
bound
stos
mov
stos
sbb
(bad)
(bad)
(bad)
cld
cmp
sub
aas
inc
loope
mov
and
mov
mov
ficomp
call
mov
xchg
mov
bnd
cmp
and
jmp
(bad)
(bad)
(bad)
jmp
fwait
popa
cmp
in
std
dec
aam
jecxz
in
inc
xor
dec
lahf
bound
push
dec
in
(bad)
(bad)
(bad)
push
sub
or
pop
inc
sti
and
mov
sahf
clc
push
sub
test
je
aaa
fwait
(bad)
(bad)
(bad)
dec
inc
jno
pop
sub
xchg
iret
mov
and
add
in
ss
xor
(bad)
(bad)
(bad)
inc
in
outs
xchg
push
fld
jmp
mov
adc
xor
sar
xor
mov
not
push
int
mov
mov
(bad)
call
jl
fsin
push
mov
ret
jge
fucom
movs
push
fs
retf
mov
(bad)
inc
les
ret
and
pop
test
rcr
pop
mov
(bad)
stos
xor
xchg
arpl
and
call
(bad)
inc
cmp
(bad)
aaa
cld
jg
call
and
icebp
and
mov
cli
inc
mov
out
mov
imul
mov
inc
leave
dec
pop
fsubr
ins
jge
sbb
xor
xchg
test
ss
(bad)
(bad)
push
test
out
fsubr
(bad)
mov
fcmovnu
sbb
push
push
xchg
jg
test
cmp
pop
(bad)
retf
popf
pop
mov
call
sub
jbe
imul
jmp
shl
loop
rep
sub
pop
mov
add
arpl
call
hlt
jmp
sbb
jo
repnz
pop
pop
pop
hlt
pop
out
shl
jle
xchg
pop
pop
mov
jecxz
(bad)
(bad)
(bad)
cmp
sub
retf
idiv
(bad)
enter
pop
or
(bad)
jno
daa
test
sub
test
dec
popf
loope
sti
mov
sti
jb
sub
jg
repnz
cmp
outs
rcl
les
(bad)
out
dec
int3
pop
mov
jmp
or
pcmpeqb
pop
aaa
mov
repnz
jnp
out
out
xor
(bad)
(bad)
(bad)
jmp
std
fisubr
rcr
xor
add
scas
or
push
jge
push
xchg
pushf
add
inc
hlt
out
sub
aaa
mov
imul
or
mov
call
lock
and
lea
shl
xor
cld
xchg
cli
inc
mov
cmps
pop
mov
xor
pop
jno
or
push
pop
in
sub
and
icebp
or
jl
out
mov
adc
fidivr
sbb
fldcw
cdq
push
(bad)
(bad)
inc
add
(bad)
inc
mov
pop
data16
ins
lea
lock
(bad)
(bad)
std
push
jmp
inc
jmp
xchg
lods
stos
iret
dec
mov
loopne
cmps
xor
(bad)
call
hlt
sbb
pop
jns
sub
cmp
stc
imul
push
pop
mov
lock
ja
sub
test
sbb
(bad)
(bad)
(bad)
call
mov
popw
cs
out
mov
aam
mov
repnz
mov
add
push
mov
shr
pop
cmps
loopne
(bad)
(bad)
cld
mov
movs
xchg
fisub
hlt
adc
mov
sub
and
and
call
add
iret
fadd
cmps
(bad)
loope
cli
clc
test
(bad)
(bad)
(bad)
sti
jo
nop
adc
mov
pop
sub
mov
pop
mov
cmps
mov
sub
dec
(bad)
(bad)
(bad)
dec
repnz
inc
jns
jl
or
jmp
leave
dec
call
int3
jl
int
and
popf
push
sbb
jo
int
xchg
in
push
fdiv
xor
cwde
cmp
test
std
(bad)
call
movs
adc
into
sub
pop
mov
clc
sub
pop
(bad)
(bad)
(bad)
(bad)
jp
dec
mov
dec
jno
pop
cmp
pop
inc
push
jmp
jbe
pop
xor
sub
(bad)
clc
out
cwde
xchg
xchg
ror
xchg
popf
pop
xchg
call
push
push
mov
nop
lea
add
cli
(bad)
mov
les
and
or
ss
cmp
pop
dec
stc
mov
cmp
xchg
mov
cs
mov
sub
and
(bad)
(bad)
push
lea
int
aam
es
xor
ss
mov
pop
in
xchg
div
and
(bad)
dec
and
xchg
add
jo
mov
cmp
outs
ins
cli
in
xchg
fdiv
(bad)
(bad)
(bad)
dec
jns
jbe
(bad)
adc
popa
fwait
or
repz
sbb
adc
cmp
dec
cs
jecxz
retf
inc
mov
mov
xchg
xchg
cmp
add
imul
dec
(bad)
rcr
test
xor
in
add
out
lods
fidiv
sar
jnp
jno
lods
fcomp
xchg
rol
pop
test
out
(bad)
(bad)
(bad)
jmp
fs
mov
mov
dec
push
fs
rcl
icebp
(bad)
dec
fcmovnbe
cmp
ja
ret
jl
cmc
leave
icebp
push
push
mov
mov
(bad)
push
scas
cld
cmp
sti
outs
xchg
sbb
mov
shl
and
mov
test
ja
mul
jmp
push
and
xlat
daa
mov
cld
or
out
mov
test
(bad)
call
pop
push
dec
adc
xchg
repnz
mov
sub
push
retf
and
icebp
mov
jle
jno
mov
xchg
out
popa
adc
jae
mov
scas
pop
sbb
pusha
jg
cmps
dec
rcl
jmp
ficomp
dec
loope
mov
cmp
js
aam
hlt
cmc
(bad)
(bad)
mov
mov
loopne
movs
adc
es
fild
push
xor
cld
(bad)
ffreep
mov
jns
xchg
jnp
mov
adc
mov
in
sbb
(bad)
(bad)
(bad)
jmp
int
jmp
pop
push
in
lea
retf
sbb
cmc
xchg
sub
xor
cmp
stos
(bad)
(bad)
mov
sti
pop
jge
xchg
sahf
mov
mov
lock
(bad)
(bad)
call
inc
cmp
inc
div
pop
and
(bad)
test
fwait
imul
adc
adc
lock
mov
cli
repz
jbe
in
je
ins
test
dec
dec
mov
scas
push
out
(bad)
(bad)
jg
adc
mov
imul
mov
out
gs
(bad)
push
push
ss
(bad)
(bad)
push
and
ins
push
jnp
jb
iret
shl
call
xchg
sub
push
mov
pop
(bad)
(bad)
(bad)
dec
xor
cmp
cmp
in
test
gs
mov
outs
outs
dec
retf
pop
xchg
shl
mov
(bad)
in
test
mov
clc
loopne
test
jns
int
nop
xchg
pop
inc
mov
push
les
sbb
(bad)
jmp
jmp
stos
mov
xor
adc
dec
mov
mov
(bad)
(bad)
push
push
mov
pusha
jno
out
daa
xchg
xchg
lock
cmp
jl
(bad)
(bad)
(bad)
(bad)
clc
adc
and
jp
add
add
clc
(bad)
mov
clc
push
mov
(bad)
out
mov
inc
out
cmp
inc
lods
addr16
mov
(bad)
(bad)
mov
xor
(bad)
or
xchg
test
frndint
fidivr
bound
test
mov
jle
lahf
(bad)
(bad)
(bad)
call
inc
jg
pop
add
(bad)
jmp
pop
push
adc
aad
cmps
outs
movs
push
or
mov
sub
add
iret
mov
fdivr
sbb
les
add
(bad)
cmp
lods
(bad)
cli
aaa
mov
stc
or
push
inc
(bad)
(bad)
inc
test
pop
lods
jmp
shl
jbe
inc
xor
lods
inc
mov
mov
or
aas
pushf
xchg
fimul
lods
shl
test
jmp
std
into
in
inc
and
add
call
sbb
add
mov
(bad)
jmp
jle
push
cmps
sahf
or
popa
mov
mov
push
popa
(bad)
(bad)
call
mov
aad
or
cmps
enter
jno
cmc
or
or
call
xchg
dec
add
xchg
push
adc
sbb
les
lods
aam
outs
and
inc
xchg
sbb
push
imul
stos
xchg
or
jbe
ja
and
inc
adc
(bad)
(bad)
jmp
push
popf
pop
jnp
mov
movs
mov
stc
(bad)
cmp
bound
arpl
in
(bad)
(bad)
jg
(bad)
out
inc
popf
mov
adc
pop
cmps
imul
xor
push
push
stc
xchg
push
fldenv
push
xor
pop
ins
sar
mov
stos
imul
call
or
dec
sti
mov
mov
ret
scas
jb
push
dec
push
hlt
push
jp
and
(bad)
jmp
lds
xchg
vmptrst
cli
pop
cmc
fdiv
add
outs
int3
icebp
jg
push
inc
mov
aad
cld
mov
pop
cwde
pop
outs
outs
data16
push
lods
or
faddp
ja
mov
mov
les
pop
(bad)
call
lahf
(bad)
jo
data16
and
jg
(bad)
icebp
cmp
inc
adc
sub
rcl
(bad)
inc
cmc
lods
push
and
push
pop
std
push
sub
jp
bound
cmp
inc
and
(bad)
(bad)
push
jl
stos
rcr
rcr
add
stos
cwde
nop
aas
mov
cwde
or
xchg
lods
call
daa
stos
(bad)
(bad)
(bad)
call
pop
mov
push
push
idiv
loop
retf
enter
pop
loopne
pop
fiadd
sbb
(bad)
jmp
dec
push
clc
cmp
mov
pop
or
xchg
adc
xchg
leave
int3
idiv
(bad)
(bad)
jns
or
add
ret
sbb
add
rol
sbb
inc
jmp
xlat
cwde
outs
jne
adc
(bad)
(bad)
(bad)
js
out
aad
sti
jns
adc
pop
ficomp
cmps
mov
cwde
mov
pushf
fucomp
sub
(bad)
jg
push
push
loope
inc
inc
lea
std
push
movs
xchg
shr
dec
xor
jl
nop
push
out
mov
std
call
cmps
dec
test
scas
xlat
bound
mov
pop
out
push
out
pop
push
dec
xor
xchg
icebp
sbb
(bad)
(bad)
push
mov
or
gs
mov
push
mov
mov
mov
xor
(bad)
push
add
in
push
mov
and
mov
stos
ffree
fsub
pop
icebp
or
aam
aaa
dec
cmp
(bad)
sar
jno
out
pop
lock
shl
adc
pushf
rol
in
(bad)
js
mov
mov
loope
(bad)
(bad)
inc
jne
mov
xor
jge
sub
dec
xlat
xlat
js
sbb
dec
(bad)
jg
gs
or
clc
fwait
inc
lea
dec
add
call
(bad)
(bad)
inc
cmp
mov
stc
ror
adc
add
or
push
retf
dec
inc
(bad)
(bad)
(bad)
jmp
fmul
adc
fld
sahf
retf
rol
mov
push
or
fcomp
(bad)
(bad)
(bad)
jmp
clc
rcl
inc
rcl
pop
nop
fst
fwait
shl
jle
sub
lods
push
(bad)
(bad)
(bad)
jmp
repz
lahf
push
cmps
dec
fld
dec
adc
jge
xor
icebp
add
imul
cs
(bad)
(bad)
(bad)
jns
dec
pop
cmp
mov
xchg
retf
iret
and
cmps
call
inc
test
(bad)
(bad)
(bad)
dec
adc
push
xchg
stos
arpl
movs
xlat
or
stos
mov
int
hlt
(bad)
in
(bad)
inc
ds
int
ss
jnp
add
inc
cwde
rcl
inc
fist
sahf
or
(bad)
(bad)
jmp
rol
dec
mov
scas
jne
mov
mov
lods
and
fst
xchg
out
in
dec
(bad)
(bad)
(bad)
in
xchg
or
sub
adc
sbb
sub
xchg
mov
mov
add
sahf
loopne
mov
or
or
cmps
rcr
dec
pop
adc
jmp
mov
push
sbb
arpl
bound
inc
xchg
lahf
enter
sub
sub
(bad)
(bad)
(bad)
call
movs
push
popf
sub
lock
and
ja
dec
adc
lea
sar
(bad)
(bad)
in
aaa
xor
lahf
sub
cmps
cmps
pop
dec
cmp
sbb
(bad)
(bad)
(bad)
jg
js
sub
cmp
std
ins
(bad)
jmp
scas
and
(bad)
mov
mov
in
clc
(bad)
(bad)
dec
xchg
cmps
cmp
in
dec
xor
fsubr
sub
push
(bad)
call
or
(bad)
loope
popf
outs
mov
sub
jmp
icebp
or
ss
add
test
andps
sbb
cmp
jmp
mov
pop
xchg
adc
fwait
popa
fild
movs
stos
(bad)
(bad)
(bad)
dec
pop
outs
cdq
and
adc
jae
nop
popf
gs
mov
mov
pusha
xor
dec
jbe
and
mov
fsubr
in
sbb
jb
outs
xchg
popf
xchg
jne
pusha
cmp
mov
(bad)
xor
jmp
add
int3
pop
and
(bad)
jg
mov
fwait
loopne
cmp
sub
fcom
icebp
ret
call
(bad)
jecxz
mov
(bad)
inc
add
rcl
push
xor
adc
or
es
in
std
(bad)
mov
sub
aas
pop
pop
and
inc
icebp
or
clc
in
out
outs
(bad)
(bad)
(bad)
mov
cmp
(bad)
xlat
mov
sbb
int3
add
sub
and
(bad)
(bad)
jg
(bad)
jo
add
jmp
xor
cli
(bad)
mov
sar
cmp
arpl
je
mov
mov
(bad)
(bad)
out
(bad)
jge
mov
sbb
mov
jno
xor
adc
inc
inc
jmp
lock
adc
sbb
push
pop
(bad)
sub
add
out
mov
xor
call
sar
mov
scas
jle
ins
leave
jmp
xchg
(bad)
jmp
mov
inc
cmp
outs
clc
or
pop
jnp
push
fistp
mov
push
sub
(bad)
(bad)
(bad)
jmp
mov
call
inc
push
jge
mov
xchg
pop
ror
cmp
(bad)
(bad)
push
std
fs
push
or
dec
lods
jns
enter
push
jno
xor
push
sti
int3
adc
(bad)
mov
(bad)
(bad)
(bad)
fcmovnb
fs
adc
mov
jge
std
sub
add
es
jecxz
mov
(bad)
(bad)
call
sbb
js
add
xchg
mov
jbe
jg
into
hlt
pushf
mov
jnp
(bad)
(bad)
(bad)
call
sub
out
jne
ins
mov
es
js
jge
mov
xor
and
inc
dec
pop
addr16
(bad)
call
(bad)
sub
stc
xchg
(bad)
pop
and
xchg
test
retf
mov
ins
ds
test
lock
add
jmp
mov
clc
(bad)
call
ja
js
cmp
shl
(bad)
jmp
daa
jnp
fidiv
xchg
mov
push
call
imul
add
xor
xlat
pop
mov
jmp
mov
xchg
jge
push
adc
fstp
daa
jns
or
outs
cmps
scas
out
cdq
sbb
call
dec
sbb
inc
lds
adc
out
pop
enter
ins
mov
(bad)
push
movs
cmp
jno
or
dec
inc
fisttp
mov
fwait
xlat
pop
shr
out
int3
shl
xchg
data16
jb
adc
push
xchg
jl
mov
stc
push
or
cmp
int3
adc
shl
cmp
and
loopne
mul
pop
(bad)
(bad)
(bad)
jmp
or
ret
mov
syscall
and
or
adc
bswap
sub
lods
xor
dec
jg
(bad)
(bad)
in
xchg
pop
push
out
mov
add
push
inc
rol
push
in
(bad)
fcomip
(bad)
jnp
adc
add
scas
pop
int
rcl
inc
aas
out
cdq
aam
push
out
mov
(bad)
push
fwait
sub
into
dec
xor
sbb
lock
xchg
fucomi
(bad)
jno
das
cli
(bad)
jmp
(bad)
fadd
div
pop
aam
push
pusha
mov
fimul
icebp
mov
jg
xor
and
(bad)
dec
push
sub
stos
cld
adc
adc
cmp
out
cmp
icebp
sbb
stos
dec
jo
sub
and
dec
les
pop
adc
call
repz
rol
ins
rol
mul
popa
xchg
inc
jae
add
mov
(bad)
repz
(bad)
push
push
jo
adc
std
mov
aaa
cld
fistp
lea
add
retf
stos
test
cld
scas
test
clc
(bad)
(bad)
call
repz
fcmovnu
stos
sub
add
into
or
(bad)
(bad)
dec
fs
out
int3
nop
lds
dec
xor
mov
js
sub
retf
cmps
jmp
pop
data16
(bad)
(bad)
(bad)
clc
sahf
arpl
clc
xor
jge
adc
out
jl
idiv
or
cmp
aaa
(bad)
add
mov
jmp
cld
xlat
mov
inc
dec
xchg
sbb
ja
idiv
jecxz
std
out
and
cmp
idiv
dec
ret
lock
cwde
mov
and
and
ret
mov
(bad)
fistp
xchg
push
rcr
imul
mov
lock
(bad)
(bad)
inc
loop
push
sub
call
test
and
push
and
scas
or
jmp
inc
test
dec
and
(bad)
ds
xor
and
test
(bad)
(bad)
dec
xchg
sub
dec
mov
cmp
mov
ret
pop
cmp
sub
xchg
push
dec
ja
cmp
push
xor
sbb
ds
xor
adc
jecxz
jbe
loop
js
cmp
inc
jg
sub
jle
xchg
inc
push
sub
jmp
cmp
mov
(bad)
(bad)
(bad)
inc
cmp
dec
sar
gs
and
inc
imul
mov
add
cmc
mov
sahf
inc
push
jg
push
adc
int3
pop
xchg
int
jecxz
jbe
gs
push
mov
cpuid
(bad)
fwait
dec
dec
sbb
pop
inc
pop
stos
mov
mov
loopne
cmc
test
mov
adc
ud0
(bad)
(bad)
fistp
lahf
push
add
pop
adc
and
jg
sbb
es
scas
(bad)
(bad)
jmp
adc
xor
add
jle
jle
adc
push
test
(bad)
(bad)
jmp
jge
pop
sub
jmp
idiv
sub
scas
sbb
std
(bad)
(bad)
(bad)
jmp
aad
adc
add
pop
cli
mov
cmp
xchg
pop
sub
xor
mov
inc
(bad)
(bad)
(bad)
push
push
imul
out
cli
and
fcomp
cmp
mov
mov
push
add
cmp
and
xor
jae
xor
(bad)
(bad)
inc
arpl
out
pop
aam
adc
pop
cmp
sub
sub
adc
pop
std
(bad)
jmp
lahf
call
dec
pop
mov
sbb
outs
shr
cmp
adc
scas
xor
cmp
xchg
push
inc
jp
mov
(bad)
(bad)
jmp
sub
in
and
pop
sbb
sar
xchg
inc
das
je
jno
leave
push
jmp
cmp
jg
popa
std
dec
psllw
or
xchg
xor
shl
push
jg
(bad)
aas
je
stc
xor
stos
pop
and
mul
cmc
in
ja
ins
push
sbb
(bad)
idiv
(bad)
(bad)
(bad)
fdivrp
std
fnstcw
mov
nop
or
aam
outs
mov
add
adc
pusha
cmps
xchg
add
mov
(bad)
call
xchg
pop
mov
out
and
xchg
clc
or
(bad)
ins
pop
loopne
imul
(bad)
call
jno
in
xchg
push
fmul
xor
sti
push
mov
imul
out
in
inc
call
cmp
jo
fstp
adc
in
(bad)
(bad)
dec
sub
call
xor
or
xchg
pop
pop
and
xchg
(bad)
mov
(bad)
(bad)
(bad)
(bad)
fst
repnz
add
setl
xor
(bad)
cdq
cs
push
(bad)
(bad)
(bad)
inc
inc
and
add
cld
sar
mov
(bad)
scas
pushf
dec
das
push
sub
(bad)
(bad)
mov
and
jge
movs
jno
push
aas
and
(bad)
cmps
stos
out
xchg
(bad)
(bad)
(bad)
(bad)
dec
mov
push
(bad)
mov
xchg
punpcklwd
or
lea
mov
sbb
push
clc
and
pop
mov
mov
call
loopne
add
js
fidiv
cmp
icebp
(bad)
push
lss
test
aam
push
fnstenv
dec
jge
(bad)
(bad)
jmp
push
ffree
nop
xor
jg
inc
xor
inc
jg
xchg
or
(bad)
(bad)
(bad)
cli
stos
cmp
in
(bad)
in
pop
mov
jmp
push
lea
mov
mov
push
inc
pop
push
icebp
(bad)
(bad)
(bad)
inc
call
outs
loopne
adc
ins
cmp
push
fwait
mov
retf
xor
pop
ins
stos
pop
and
pop
jns
data16
ins
stc
inc
mov
sub
enter
(bad)
jns
movs
jo
mov
push
xchg
les
lahf
and
(bad)
and
sar
push
sub
(bad)
(bad)
(bad)
jmp
cmp
xchg
dec
push
sub
ins
sbb
sub
ins
pop
pop
push
mov
addr16
xchg
(bad)
mov
sti
neg
pop
jns
sub
xchg
xor
dec
mov
std
enter
(bad)
inc
jbe
sbb
pop
jnp
mov
int
setnp
cmp
inc
dec
(bad)
(bad)
(bad)
push
jecxz
nop
enter
aad
(bad)
rcr
iret
inc
cmp
or
in
into
out
jge
cwde
jnp
(bad)
(bad)
jmp
push
sub
pop
dec
jnp
inc
aaa
lock
sbb
and
(bad)
mov
sbb
pop
imul
(bad)
(bad)
(bad)
call
xchg
xor
movs
jmp
out
jmp
(bad)
push
popa
jl
cs
sbb
dec
mov
(bad)
clc
jecxz
jecxz
(bad)
icebp
mov
repz
(bad)
(bad)
(bad)
inc
pushf
test
mov
pop
mul
pop
add
fs
popa
sbb
movs
movs
test
(bad)
(bad)
fldenv
xchg
mov
sar
cmp
mov
dec
popf
sahf
aaa
mov
ds
call
xor
dec
cmp
call
pop
ins
mov
push
(bad)
std
fisub
call
mov
fstp
jg
jae
(bad)
(bad)
dec
xchg
push
jge
sahf
lods
mov
jb
jae
or
mov
aas
test
mov
cmp
(bad)
(bad)
(bad)
jmp
enter
and
push
mov
movs
adc
outs
pusha
lds
xchg
mov
test
fld
movs
jmp
mov
test
repz
xor
push
xchg
or
fwait
adc
(bad)
(bad)
call
sbb
stos
retf
shr
cmc
mov
mov
xchg
cmp
cmp
fistp
xor
(bad)
(bad)
(bad)
fld
dec
mov
data16
cli
enter
ss
div
xchg
cmp
mov
push
bound
stos
pop
push
xor
sub
cld
cmp
push
ins
stos
aad
sub
jo
retf
jno
call
ins
dec
pop
sbb
mov
outs
xchg
lock
mov
(bad)
(bad)
mov
push
fbstp
jmp
mov
jl
dec
pop
jo
iret
(bad)
(bad)
(bad)
(bad)
(bad)
clc
pop
cmp
sbb
(bad)
test
xor
xor
cmps
daa
leave
pop
test
retf
(bad)
test
rcr
xor
ficomp
cld
dec
cmp
fist
je
sar
(bad)
(bad)
inc
bnd
cmps
int
mov
and
mov
mov
mov
imul
adc
sub
pushf
sub
xor
sub
xlat
sbb
test
xchg
es
pop
jmp
xchg
mov
push
nop
test
xchg
ret
dec
push
or
(bad)
ficom
xlat
and
dec
jg
(bad)
push
push
or
push
(bad)
jmp
mov
repnz
mov
push
jmp
add
daa
outs
std
sbb
hlt
call
push
add
stc
icebp
add
adc
cmp
and
xchg
sub
cmps
xchg
xor
dec
div
rol
lods
sbb
popf
cld
cdq
cli
cld
(bad)
(bad)
(bad)
jg
cmc
xor
fidiv
jae
mov
or
fsub
out
mov
pop
rol
cmp
dec
mov
and
cmp
and
sar
std
jmp
inc
into
loopne
add
stos
push
clc
stos
sbb
inc
xor
mov
jg
or
repnz
outs
mov
jmp
rol
les
cld
(bad)
(bad)
(bad)
call
pop
cdq
dec
jecxz
in
sbb
nop
mov
out
leave
fdivr
ror
std
popa
(bad)
mov
fmul
aad
je
ret
in
pop
out
test
pushf
and
push
jmp
xchg
lahf
mov
(bad)
(bad)
(bad)
(bad)
mov
or
add
cwde
dec
pop
mov
in
ret
sbb
add
fsubr
adc
fild
sahf
enter
fld
(bad)
scas
mov
pop
jg
inc
inc
psllw
or
ud0
call
ins
push
cmp
js
sti
out
stos
push
push
jle
rol
sub
cmp
(bad)
(bad)
call
jmp
add
out
outs
mov
sbb
mov
push
pop
or
les
scas
sbb
mov
ja
xchg
xchg
jnp
fcom
aad
ret
mov
(bad)
(bad)
(bad)
dec
idiv
push
lock
mov
mov
out
inc
xlat
jp
clc
push
mov
stos
(bad)
(bad)
push
xchg
dec
fcomp
and
pusha
pinsrw
in
dec
inc
ds
dec
addr16
fild
cli
cmp
inc
and
push
dec
xchg
or
popa
(bad)
(bad)
(bad)
call
fs
jl
and
jg
ror
retf
push
mov
lds
loop
cld
popa
pop
push
(bad)
dec
xchg
test
ja
push
daa
inc
or
sbb
xchg
sar
sub
push
das
(bad)
(bad)
(bad)
jmp
(bad)
test
push
sbb
mov
or
loopne
paddd
(bad)
(bad)
mov
outs
loope
push
xchg
mov
adc
ja
clc
and
out
(bad)
rcr
(bad)
(bad)
mov
xchg
out
sbb
sub
imul
sub
fwait
sub
mov
or
and
cld
push
mov
cmc
sub
sti
and
call
aas
adc
pop
xor
mov
push
ins
add
call
dec
sub
stos
cld
(bad)
(bad)
call
xor
push
retf
sub
popf
or
inc
aam
add
cld
(bad)
push
in
mul
sahf
pop
mov
xor
cmovns
sbb
rcl
push
iret
ret
xchg
pop
hlt
add
pop
dec
jns
or
iret
sbb
retf
jecxz
jmp
cmp
xlat
mov
xchg
cwde
jo
cmp
adc
loopne
mov
xor
jle
pusha
shl
fadd
push
pop
popaw
loop
je
(bad)
jmp
rol
test
inc
aad
sbb
mov
xor
cli
push
movsx
call
(bad)
call
shl
into
movs
push
and
pop
aaa
(bad)
mov
test
shr
adc
sar
dec
cdq
and
mov
(bad)
(bad)
(bad)
call
cmp
mov
jno
(bad)
sub
out
ret
push
fnstcw
push
enter
(bad)
fcom
jno
ins
cmp
adc
push
push
rcl
in
(bad)
(bad)
(bad)
jmp
xchg
pusha
lahf
js
(bad)
jnp
(bad)
push
mov
mov
std
or
in
lods
test
cmp
ret
adc
and
ret
int
jg
push
push
adc
inc
shl
(bad)
fistp
int
outs
(bad)
(bad)
jg
sub
mov
sahf
inc
clc
outs
push
dec
and
mov
cld
test
nop
cmps
mov
(bad)
(bad)
dec
or
push
xchg
lods
inc
cwde
lock
leave
push
jg
dec
ins
cmp
adc
mov
call
leave
push
pop
jmp
mov
inc
add
(bad)
(bad)
(bad)
in
pop
aam
add
sub
cld
jnp
test
out
jge
or
fwait
xor
idiv
(bad)
(bad)
call
jecxz
mov
test
or
and
shl
sub
xchg
(bad)
(bad)
(bad)
call
adc
sbb
cdq
inc
shl
dec
xchg
movs
pop
fwait
mov
sub
jp
pop
cmp
scas
clc
dec
pop
xchg
and
jecxz
repz
(bad)
aam
sbb
nop
movs
repz
(bad)
(bad)
(bad)
(bad)
std
(bad)
fld
test
ins
js
(bad)
leave
mov
pop
int
inc
popa
fcomp
outs
dec
(bad)
(bad)
(bad)
inc
repnz
cmps
ins
jmp
arpl
cmp
loope
inc
mov
jno
(bad)
adc
add
out
test
stos
or
and
idiv
add
mov
(bad)
mov
mov
test
(bad)
into
cmp
jmp
push
(bad)
(bad)
mov
in
fidiv
je
sub
daa
jg
jb
mov
push
shl
call
(bad)
out
ret
mov
cmps
(bad)
(bad)
fcomip
jp
or
pop
outs
clc
jmp
push
sub
jmp
pop
pop
clc
aaa
jne
cmp
xchg
xchg
scas
cmps
sub
mov
(bad)
(bad)
(bad)
clc
js
fdiv
xchg
push
jecxz
movs
lahf
movs
or
retf
data16
mov
std
or
(bad)
(bad)
jmp
(bad)
ror
mov
xchg
xor
xor
movs
cdq
dec
cwde
inc
mov
(bad)
jns
lea
(bad)
push
add
(bad)
movs
jp
and
cmp
repnz
inc
cld
sbb
push
fadd
xor
inc
loope
mov
adc
push
cli
cmp
(bad)
call
add
retf
mov
or
sub
cmp
lahf
in
push
ins
inc
aad
inc
xor
test
push
mov
lock
mov
push
imul
(bad)
(bad)
push
xchg
mov
push
test
push
cdq
push
jp
push
imul
push
jnp
(bad)
jg
mov
in
ins
fisub
arpl
sbb
(bad)
(bad)
call
mov
(bad)
repz
out
rcr
mov
scas
out
sbb
inc
stc
pop
pop
xchg
mov
(bad)
pop
xor
push
(bad)
call
popa
mov
pop
jmp
ret
adc
sar
sbb
in
fcomip
or
movs
inc
popf
daa
popa
push
rcr
fwait
stos
rcl
sar
(bad)
call
loopne
rcl
sbb
out
int3
pop
jle
add
push
popa
fild
sti
xchg
(bad)
(bad)
(bad)
jmp
xchg
js
cmps
imul
cld
nop
mov
inc
das
cmp
fbstp
aas
sbb
dec
daa
pop
les
or
shl
cmp
add
(bad)
in
(bad)
push
or
(bad)
rcl
fadd
push
jb
xchg
cld
sar
in
mov
(bad)
(bad)
push
push
fldenv
pushf
mov
push
or
cmp
jne
cmp
cmp
xchg
das
clc
(bad)
jmp
(bad)
sbb
cs
gs
inc
mov
dec
mov
jecxz
mov
cdq
xor
ins
or
fs
or
push
loopne
es
(bad)
push
mov
inc
pop
sbb
in
sub
add
cwde
sub
add
int3
retf
dec
int3
shr
movups
mov
test
mov
mov
stos
jge
(bad)
(bad)
dec
iret
pop
push
and
inc
lods
lock
jne
or
rol
jbe
xlat
je
call
mov
mov
(bad)
mov
add
pop
pop
call
mov
(bad)
mov
inc
mov
pop
xor
rcl
pop
inc
les
int
popf
mov
(bad)
call
and
outs
adc
xchg
(bad)
(bad)
jg
push
mov
retf
test
out
xor
das
xor
xchg
aad
fld
movs
(bad)
call
stos
pop
shl
pop
sbb
mov
xor
fwait
and
jno
loope
(bad)
(bad)
(bad)
jmp
int3
fst
sbb
gs
mov
xor
in
out
mov
mov
cmp
(bad)
mov
adc
xlat
pop
dec
inc
jle
xor
(bad)
(bad)
(bad)
jmp
jno
dec
xchg
xor
aad
dec
shl
adc
sbb
add
ret
(bad)
(bad)
jmp
mov
call
sub
dec
or
adc
add
test
jl
(bad)
(bad)
(bad)
call
and
dec
xchg
es
ror
jmp
xor
enter
xor
mov
xor
(bad)
mov
(bad)
cmps
rcr
pop
loopne
ja
iret
sub
adc
cmp
cmc
outs
adc
dec
pop
call
dec
sub
dec
mov
ret
(bad)
(bad)
(bad)
call
sahf
mov
mov
xlat
ja
retf
inc
or
xchg
jae
inc
mov
mov
mov
(bad)
(bad)
(bad)
push
jo
ret
ins
pop
stos
cli
leave
mov
and
sahf
and
int3
and
gs
(bad)
(bad)
in
adc
shl
jle
imul
push
sub
fisub
xchg
shl
pop
test
das
nop
push
and
leave
ins
rcr
inc
add
push
and
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
sbb
das
xor
xor
cdq
pusha
repnz
xchg
add
movs
in
xchg
clc
(bad)
(bad)
inc
fwait
les
dec
xchg
xchg
sar
rcr
cmp
pop
and
(bad)
(bad)
jmp
pop
jne
add
mov
retf
add
jmp
xchg
push
imul
jg
(bad)
push
xchg
mov
cmp
cmc
(bad)
cli
adc
mov
or
xor
cmps
(bad)
jmp
stos
and
gs
out
cs
inc
jb
dec
pop
adc
mov
sbb
popf
xor
push
pop
sub
ds
jns
adc
cmp
enter
ja
(bad)
dec
jmp
dec
movs
jp
aam
xlat
int3
jmp
es
pop
imul
mov
and
arpl
inc
adc
shl
in
popf
ins
pusha
adc
pop
test
and
call
mov
cmps
lock
out
adc
mov
mov
push
push
push
outs
mov
and
jmp
iret
lea
mov
jecxz
xor
push
mov
sar
(bad)
(bad)
call
cmp
push
pop
push
xor
inc
jecxz
inc
cmp
and
ins
addr16
daa
jae
xchg
(bad)
(bad)
(bad)
(bad)
cmp
or
scas
mov
int3
daa
hlt
ss
sbb
xchg
ds
ret
(bad)
(bad)
call
or
stos
fcom
pop
retf
xlat
test
fidivr
cdq
hlt
lods
push
push
aam
jmp
jl
outs
clc
pop
lahf
dec
retf
mov
sbb
es
outs
mov
sar
ror
stc
aaa
(bad)
dec
fmul
mov
cld
add
mov
(bad)
mov
mov
xor
cmp
fld
or
xor
cmp
enter
adc
stos
mov
cmps
sub
cld
mov
pop
cdq
repnz
or
sub
(bad)
jmp
rol
cmp
or
push
and
jb
mov
sub
(bad)
push
jmp
and
and
add
cmp
les
fsubr
pop
out
add
or
shr
or
(bad)
(bad)
inc
jb
lds
es
js
jo
xchg
aaa
movs
add
pop
pop
fdiv
call
repz
cmps
ret
jge
js
mov
je
sub
pop
mov
sbb
(bad)
(bad)
call
mov
arpl
jp
cli
dec
jmp
xchg
push
or
sub
(bad)
add
mov
dec
inc
pop
pop
mov
aad
jo
sub
jge
add
(bad)
jmp
mov
data16
aam
sbb
fisttp
or
sub
xchg
mov
dec
jle
jne
add
cmp
mov
jg
fstp
scas
mov
dec
sbb
loope
sub
sub
sub
scas
mov
sbb
ds
inc
xor
fsubr
pushf
retf
inc
xchg
in
ss
mov
pop
mov
dec
lods
pusha
push
lds
mov
(bad)
fistp
dec
popf
loopne
push
jns
sbb
lods
je
and
imul
jp
(bad)
call
je
test
mov
dec
dec
pop
and
lahf
cmps
cmp
dec
shl
(bad)
call
ja
call
scas
div
push
loope
scas
dec
cmp
cmp
jno
pop
xchg
or
(bad)
(bad)
dec
xchg
sbb
or
xchg
imul
sbb
cmp
scas
inc
sub
sahf
mov
push
pusha
mov
fistp
cmp
in
daa
mov
dec
push
push
xor
in
stc
(bad)
iret
cmps
mov
(bad)
adc
mov
stos
fsub
(bad)
(bad)
(bad)
out
push
pusha
mov
pop
ss
imul
push
add
fidiv
es
int
dec
(bad)
(bad)
(bad)
jmp
and
xor
arpl
jae
mov
cli
adc
push
add
mov
popf
dec
jg
xchg
xchg
add
(bad)
or
popf
out
and
inc
clc
scas
mov
dec
fistp
call
mov
shr
push
cmp
push
cmps
cmp
xchg
inc
jg
mov
lock
call
pop
and
dec
jno
sbb
(bad)
jmp
(bad)
jne
shl
aaa
push
pop
fisubr
pop
popf
aad
mov
fisttp
sub
push
div
icebp
mov
(bad)
(bad)
mov
add
retf
pop
sub
ins
mov
div
les
mov
cli
gs
in
stos
cmp
icebp
xchg
imul
ds
add
(bad)
(bad)
inc
sub
mov
out
pop
mov
out
repnz
(bad)
(bad)
(bad)
call
sub
test
scas
add
xor
mov
push
call
xor
(bad)
fcomip
pop
mov
add
jp
mov
add
and
xor
test
aaa
mov
lods
test
mov
ins
fiadd
inc
xchg
retf
and
pop
lock
mov
mov
int
sar
inc
push
and
fistp
jmp
cmp
lock
push
xchg
in
iret
shl
aaa
xchg
lods
aas
sub
xchg
and
movs
jmp
inc
bound
push
and
aaa
xor
ins
ins
dec
xor
loopne
sbb
je
adc
or
xchg
pop
popf
(bad)
jae
shr
(bad)
call
aam
std
mov
out
div
in
pusha
or
xor
fwait
cmp
jno
js
call
mov
dec
or
push
push
cld
or
in
loope
fs
fadd
stc
jg
(bad)
push
xor
push
popa
mov
fisub
push
out
push
mov
(bad)
dec
push
mov
sar
push
out
xor
and
jl
test
and
jg
scas
(bad)
(bad)
(bad)
(bad)
cmp
mov
sub
mov
enter
pop
inc
test
test
sub
es
out
(bad)
(bad)
dec
into
das
ficom
popa
sbb
cmp
xor
mov
xchg
setns
mov
test
bound
jge
int3
jg
push
out
pop
push
ret
and
pop
sbb
add
(bad)
cld
cmp
jmp
sub
and
jns
std
lods
and
jge
sub
push
pop
pop
call
fs
or
xor
or
(bad)
hlt
mov
(bad)
(bad)
(bad)
(bad)
mov
and
jbe
outs
hlt
daa
xchg
or
call
arpl
mov
mov
stos
stos
cmps
inc
xchg
mov
jno
arpl
xchg
inc
aad
dec
arpl
cld
jb
clc
pop
stc
mov
cmp
push
sbb
push
mov
sar
adc
cld
adc
sub
cmp
pop
pop
xchg
cmp
jmp
scas
clc
mov
test
and
std
mov
dec
retf
loope
lods
popf
mov
adc
loop
adc
mov
in
xchg
pop
out
push
mov
adc
ja
mov
jo
clc
out
xor
cmp
(bad)
(bad)
(bad)
push
adc
dec
dec
hlt
push
js
jg
in
jnp
sub
imul
mov
or
leave
aas
(bad)
adc
(bad)
(bad)
mov
lock
pusha
and
push
sub
es
test
push
jmp
pop
(bad)
jmp
clc
mov
pop
xor
(bad)
mov
outs
xor
fwait
push
std
xor
dec
aam
(bad)
mov
cmp
xchg
push
xor
jns
push
in
cmc
(bad)
xchg
add
out
movs
gs
(bad)
(bad)
jmp
mov
fisub
xor
in
sti
mov
in
xchg
add
(bad)
(bad)
(bad)
(bad)
mov
sbb
push
mov
or
mov
sbb
add
test
pop
dec
(bad)
(bad)
js
daa
out
loop
push
add
lods
push
mov
mov
dec
xchg
mov
xor
cli
fwait
repnz
imul
fwait
pusha
aaa
pop
loop
mov
mov
jmp
jo
and
fcmovnb
inc
(bad)
call
dec
pop
lods
xor
mov
adc
mov
outs
(bad)
(bad)
(bad)
push
jo
fwait
(bad)
icebp
and
lods
test
mov
and
stos
adc
mov
(bad)
(bad)
(bad)
inc
stos
lds
in
lods
mov
out
jo
test
xchg
add
add
xor
xchg
or
(bad)
(bad)
push
sbb
pop
cmc
and
clc
jb
mul
pop
inc
adc
add
(bad)
(bad)
jmp
jo
mov
popf
sahf
or
shl
pop
add
fwait
dec
(bad)
sub
outs
mov
retf
push
test
scas
mov
or
(bad)
(bad)
(bad)
jmp
or
(bad)
lahf
pop
xor
scas
jge
mov
adc
aad
pop
lock
clc
dec
mov
add
jg
out
add
dec
sbb
push
hlt
(bad)
pop
push
jno
retf
std
call
cdq
sbb
popa
inc
loope
cmp
lahf
cdq
es
(bad)
jmp
sub
mov
mov
enter
and
xchg
ret
adc
sar
(bad)
(bad)
jmp
sub
jmp
retf
ror
sbb
dec
inc
cdq
std
call
dec
pop
adc
in
fldenv
mov
fisub
inc
loop
cbw
or
(bad)
(bad)
inc
or
and
test
sbb
cmp
enter
sbb
add
hlt
(bad)
jg
dec
adc
imul
cmp
loopne
aaa
std
mov
add
dec
and
cmp
push
adc
xor
out
jl
inc
(bad)
sub
jge
mov
xor
ja
repnz
(bad)
(bad)
push
and
xor
adc
pop
jbe
jb
sbb
add
loopne
div
test
(bad)
dec
call
push
push
xchg
mov
test
mov
jg
adc
call
add
dec
sbb
fisttp
or
das
sub
call
cmp
mov
inc
retf
retf
sbb
(bad)
(bad)
(bad)
push
xor
cmp
sbb
adc
cli
cmp
movs
dec
cwde
add
pop
ins
inc
jmp
pop
jg
imul
inc
mov
mov
arpl
jmp
push
add
(bad)
(bad)
jmp
jle
std
nop
loope
out
scas
icebp
loop
fs
(bad)
loopne
mov
aas
test
push
std
jmp
add
inc
xor
mov
adc
add
hlt
add
xor
clc
test
loopne
push
adc
add
into
repz
mov
(bad)
jmp
dec
cmp
cmp
sbb
mov
js
dec
push
popa
or
adc
inc
add
(bad)
(bad)
(bad)
call
fcom
mov
pop
sub
rol
dec
mov
outs
push
scas
bound
std
mov
pop
xchg
xchg
xchg
out
cmp
jmp
popf
xchg
fmul
je
cmps
pop
mov
shr
add
repnz
or
jmp
adc
mov
jne
dec
xchg
(bad)
(bad)
and
inc
mov
add
loopne
shl
mov
into
add
or
cld
push
or
push
mov
xchg
cwde
mov
(bad)
(bad)
jg
mov
pop
or
add
sub
add
jbe
adc
jmp
inc
cdq
or
and
rcr
adc
sbb
repz
test
(bad)
(bad)
(bad)
inc
mov
jg
frstor
(bad)
cmps
jmp
movs
mov
mov
mov
nop
dec
inc
or
jbe
mov
mov
fs
fnstenv
xchg
add
dec
add
push
hlt
push
add
add
ja
pop
dec
push
out
inc
mov
fs
mov
adc
(bad)
(bad)
call
cmp
inc
sub
test
mov
gs
inc
sbb
fcomp
fs
xchg
jbe
(bad)
(bad)
push
push
mov
xor
sar
jge
jmp
in
pop
(bad)
push
ds
fdivrp
(bad)
(bad)
(bad)
(bad)
mov
enter
retf
imul
jmp
sbb
mov
jle
sbb
dec
loop
(bad)
(bad)
mov
or
add
and
ds
xor
push
jg
inc
fldl2e
dec
lock
mov
lock
add
xchg
in
inc
mov
in
lock
fist
dec
or
sub
xor
loop
enter
clc
(bad)
(bad)
call
cmp
(bad)
adc
test
push
ins
sbb
push
cmp
(bad)
(bad)
jmp
mul
or
jae
out
jmp
std
and
rcr
das
adc
loop
dec
(bad)
(bad)
(bad)
ja
adc
add
mov
inc
mov
sub
or
add
loopne
shr
(bad)
jmp
mov
push
or
scas
jmp
pop
inc
sub
mov
ss
loopne
rcr
inc
sbb
and
dec
in
dec
(bad)
(bad)
(bad)
jg
push
cli
jle
push
dec
or
xchg
mov
test
sar
xchg
js
xchg
into
jg
(bad)
(bad)
(bad)
fidivr
iret
inc
xchg
jge
cmp
call
test
adc
fmul
push
jmp
stos
pop
(bad)
cli
enter
mov
xlat
adc
and
xchg
imul
outs
mov
mov
mov
dec
sub
adc
dec
xchg
jle
push
xor
(bad)
jg
aas
push
enter
or
setp
call
fdivp
(bad)
jg
jp
hlt
add
out
fst
dec
out
fsub
cmp
cmp
iret
jle
push
pusha
bound
(bad)
(bad)
mov
fbld
fdiv
dec
in
in
cmp
cmps
mov
in
inc
(bad)
push
or
rcl
int
mov
push
dec
cwde
pop
call
mov
mov
std
sbb
mov
fild
outs
or
stos
mov
popa
pushf
push
dec
stos
mov
xchg
(bad)
(bad)
(bad)
mov
mov
loopne
lock
sub
out
cli
jmp
pop
or
mov
in
test
das
xabort
clc
xor
pop
leave
mov
(bad)
(bad)
dec
icebp
fnstsw
ins
inc
out
cld
lods
inc
je
cld
jbe
inc
and
mov
cmps
xlat
imul
(bad)
push
shl
dec
in
lods
in
add
sar
mov
shr
out
(bad)
mov
aaa
cld
mov
stc
shl
vpsubusw
inc
add
push
xchg
pop
jno
sar
mov
pop
mov
push
mov
out
out
pop
push
ja
out
fcomp
movs
jbe
or
mov
or
retf
jg
and
mov
and
sub
cld
test
pop
jle
retf
call
(bad)
cmp
nop
push
shr
shl
in
xor
scas
xchg
lock
call
add
shl
add
in
ret
out
data16
aaa
das
clc
or
fisub
xchg
add
dec
pop
outs
jge
(bad)
in
mov
mov
out
or
adc
int
out
jg
arpl
lahf
out
xchg
jmp
clc
cmps
cmp
daa
xchg
out
lds
jl
fwait
stos
mov
mov
sbb
jnp
stos
ds
loopne
jecxz
jae
push
and
xchg
cmp
jmp
jo
out
jmp
jo
mov
mov
dec
pushf
sbb
jne
repz
cld
daa
jno
add
shl
sub
popf
(bad)
call
outs
bound
jecxz
loopne
int
adc
cmp
loope
inc
jle
(bad)
(bad)
jg
mov
stc
jbe
fwait
pop
inc
push
jle
mov
rcr
fwait
push
(bad)
jmp
xor
jo
pop
enter
and
btc
imul
pop
add
iret
(bad)
inc
inc
cwde
lods
add
outs
js
(bad)
fistp
inc
cmps
aam
and
or
mov
aaa
clc
inc
jae
jmp
xchg
dec
jo
test
mov
cmp
xchg
in
mov
movs
add
outs
dec
cs
clc
das
stc
ror
imul
jne
fs
movs
in
mov
aaa
add
push
jg
repnz
adc
stos
push
imul
ins
in
popf
push
cmps
xor
(bad)
(bad)
jmp
jbe
mov
cmp
cmp
test
push
iret
enter
stos
pavgb
add
idiv
fcomip
jmp
mov
mov
push
sbb
xchg
fidivr
arpl
arpl
stos
mov
mov
aam
add
(bad)
xchg
scas
pop
in
sti
sub
mov
and
cmp
(bad)
clc
lahf
stos
add
xchg
or
sbb
adc
fwait
jno
sbb
(bad)
jg
inc
ins
add
fimul
sub
xor
dec
jge
sbb
ins
sahf
cmp
icebp
(bad)
mov
mov
ror
mov
adc
and
ja
les
sbb
jmp
and
add
clc
inc
hlt
jnp
shl
(bad)
mov
dec
cmp
sbb
dec
stc
int3
cmp
in
adc
(bad)
(bad)
(bad)
(bad)
aas
test
clc
or
out
loope
shl
or
fisttp
(bad)
(bad)
retf
int3
movs
hlt
(bad)
(bad)
jmp
mov
ret
and
and
call
in
jno
(bad)
ss
fwait
imul
call
push
fstp
out
ficom
inc
xlat
cld
(bad)
(bad)
(bad)
mov
popf
jle
mov
clc
mov
cwde
int3
xchg
sti
add
dec
mov
(bad)
push
dec
out
jne
repnz
xchg
jbe
or
mov
jle
gs
imul
(bad)
dec
cwde
ins
push
sub
ror
test
add
xchg
xlat
add
push
in
mov
or
cmp
inc
or
xchg
cli
mov
mov
xchg
jecxz
fld
mov
stc
xchg
adc
(bad)
or
jp
pop
fwait
and
cmps
into
rcl
test
inc
cld
call
cmc
je
pusha
stos
mov
xor
clc
pop
mov
(bad)
dec
push
and
(bad)
ficom
jl
fbld
lahf
mov
(bad)
(bad)
(bad)
call
jne
retf
imul
jmp
or
pop
sbb
xchg
arpl
movs
sbb
(bad)
(bad)
(bad)
(bad)
aas
out
push
xchg
data16
imul
push
iret
bound
fwait
push
sub
and
mov
dec
pop
adc
scas
daa
stc
or
cwde
gs
popa
shr
add
jne
(bad)
(bad)
(bad)
call
rcr
call
cmp
xor
shr
mov
cmp
jae
mov
aaa
cld
in
(bad)
sar
and
dec
pushaw
clc
mov
sbb
inc
pop
fisubr
test
(bad)
(bad)
(bad)
inc
jecxz
sahf
xlat
shl
jne
aas
mov
sbb
dec
cmp
ins
or
sti
aas
inc
mov
push
inc
dec
iret
jmp
retf
mov
stos
out
xchg
jmp
add
or
popf
or
jge
dec
push
push
es
dec
jmp
in
fisubr
ds
push
(bad)
(bad)
(bad)
mov
mov
test
int3
xlat
push
xchg
shl
push
or
adc
sbb
data16
cmp
into
lds
jae
cmc
(bad)
(bad)
call
push
popa
cld
ss
fbstp
adc
adc
inc
dec
call
cmp
add
pop
mov
sti
mov
dec
cmps
cmc
retf
inc
cmp
push
or
inc
cmp
jmp
call
inc
pop
cs
dec
adc
shl
and
mov
(bad)
(bad)
(bad)
jmp
adc
fistp
inc
inc
lods
fdiv
daa
dec
jg
mov
mov
leave
xchg
movs
jg
(bad)
jmp
pop
mov
xchg
adc
push
mov
ins
daa
test
or
(bad)
(bad)
jmp
ficom
mov
mov
jne
jle
nop
loope
fist
sub
fistp
(bad)
mov
std
(bad)
and
out
imul
lods
and
mov
in
(bad)
(bad)
push
jg
js
arpl
popf
pop
mov
push
retf
aas
push
mov
bound
pop
mov
inc
ds
(bad)
dec
jecxz
cmp
jnp
mov
lods
dec
inc
fist
test
adc
dec
mov
scas
(bad)
(bad)
fstp
(bad)
loopne
mov
sub
aas
and
mov
sahf
(bad)
(bad)
(bad)
(bad)
mov
aam
dec
outs
lea
mov
push
dec
xor
mov
pop
rcl
popa
int
(bad)
(bad)
(bad)
(bad)
jns
push
js
or
in
adc
sub
ror
fld
mov
push
(bad)
(bad)
(bad)
call
push
and
les
cwde
or
sbb
je
push
jmp
add
retf
(bad)
push
mul
montmul
cmps
shl
lods
call
inc
clc
push
xor
mov
push
mov
mul
xor
push
stos
imul
push
call
(bad)
inc
xlat
mov
lock
pop
pushf
xor
sub
nop
mov
std
mov
mov
sbb
sar
dec
dec
sub
jg
int3
adc
push
pop
lock
mov
test
or
jns
(bad)
(bad)
(bad)
jmp
jp
xor
clc
out
adc
or
dec
adc
into
mov
je
fsub
dec
(bad)
(bad)
std
add
mov
xor
push
(bad)
inc
jle
cmp
inc
movs
or
popf
push
mov
out
xchg
ret
or
adc
(bad)
(bad)
(bad)
jmp
arpl
push
jg
test
mov
add
cmps
jne
mov
adc
(bad)
jmp
pop
ins
inc
inc
fild
scas
pusha
mov
mov
ss
(bad)
(bad)
(bad)
call
ficom
dec
outs
(bad)
dec
stos
mov
dec
add
jg
inc
rcl
or
dec
lock
pop
push
sub
jno
shl
cmp
(bad)
fcomip
(bad)
call
inc
loope
jnp
stc
jmp
mov
call
mov
pop
cmp
jbe
aam
aad
mov
cmp
jge
mov
adc
(bad)
(bad)
(bad)
(bad)
(bad)
jno
push
(bad)
mov
cs
sbb
not
test
lea
cmc
mov
ret
cld
(bad)
(bad)
(bad)
call
fs
fbstp
cmp
adc
fmul
push
or
pushf
or
(bad)
mov
cmp
fadd
push
mov
mov
pop
cmp
xor
(bad)
call
popf
into
lods
cmps
xchg
mov
fadd
inc
pop
enter
pop
adc
fld
rcr
cmp
test
(bad)
(bad)
jmp
sub
xor
adc
mov
sbb
sar
or
push
in
je
sahf
push
dec
dec
or
cmp
icebp
push
jmp
(bad)
mov
mov
ds
sub
(bad)
(bad)
jg
shl
cmp
inc
fst
and
mov
mov
jnp
jne
dec
addr16
popa
mov
jo
bnd
pop
rcl
call
jecxz
test
loop
pop
(bad)
aas
dec
clc
push
out
fwait
ror
mov
ja
push
or
jg
sub
adc
and
iret
lea
(bad)
(bad)
jg
or
pushf
jbe
int3
outs
mov
mov
pop
retf
out
push
mul
dec
cmp
mov
mov
cmps
mov
xchg
sbb
test
call
enter
xchg
fdiv
cmp
dec
cmovs
mov
stos
hlt
(bad)
sub
movs
fcmovnb
loop
(bad)
mov
ffreep
shl
jo
pop
sub
(bad)
jg
les
sbb
inc
pop
cmp
jl
mov
pop
cld
add
adc
pushf
dec
push
push
stos
movs
mov
add
iret
test
jb
(bad)
(bad)
(bad)
fcmovnb
xor
pop
jmp
inc
out
mov
cli
int3
push
test
add
cld
push
ror
(bad)
push
fbld
pop
jae
(bad)
(bad)
(bad)
jmp
mov
lahf
clc
cdq
aam
or
test
popf
push
or
ja
jmp
pop
jg
cmp
or
(bad)
push
dec
and
push
imul
adc
mov
out
lds
(bad)
(bad)
(bad)
mov
xchg
cmps
mov
(bad)
test
out
push
xchg
bound
das
test
mov
jne
sub
cmp
inc
popf
jmp
(bad)
push
lea
lahf
mov
adc
aad
lds
(bad)
(bad)
(bad)
call
mov
mov
add
mov
push
lods
or
push
test
push
adc
dec
fisttp
mov
push
jns
pop
mov
loop
mov
lock
jl
call
inc
push
pushf
jae
inc
cmp
pop
ja
mov
(bad)
(bad)
jmp
mov
retf
adc
mov
cmp
xchg
lea
pop
test
sar
dec
popf
(bad)
mov
add
pop
sbb
cld
fwait
mov
fdivr
call
dec
pushf
add
push
mov
rcr
inc
xor
ret
(bad)
mov
dec
nop
dec
jno
sahf
sub
xor
fwait
mov
xor
mov
sar
jg
adc
add
lods
(bad)
(bad)
out
or
lahf
xor
dec
test
retf
jno
jge
jmp
adc
stos
popf
pusha
nop
icebp
(bad)
(bad)
(bad)
jmp
test
pop
retf
loope
push
data16
inc
xor
sub
and
arpl
clc
(bad)
(bad)
call
pop
fs
in
push
sub
imul
(bad)
pusha
adc
(bad)
outs
cmp
icebp
in
popa
frstor
fldcw
cmps
lds
in
aaa
and
leave
push
fwait
and
call
imul
push
adc
icebp
test
xchg
push
int3
int3
mov
imul
(bad)
cmc
fwait
mov
dec
push
jl
mov
and
mov
mov
push
sub
add
imul
jns
imul
jb
popf
retf
or
adc
dec
out
push
(bad)
mov
jbe
dec
xor
das
xor
aaa
or
adc
enter
mov
(bad)
inc
mov
pop
por
sbb
scas
jmp
mov
dec
dec
call
nop
add
ins
sbb
enter
and
mov
or
jb
aam
loop
pop
adc
pop
lea
ss
and
inc
inc
in
movs
data16
ss
cwde
fs
(bad)
(bad)
inc
dec
movs
into
mov
push
ja
hlt
aam
sbb
mov
es
jmp
(bad)
(bad)
(bad)
jmp
push
inc
leave
out
std
retf
data16
in
push
xor
xchg
mov
call
push
(bad)
(bad)
(bad)
jmp
push
cmp
fstp
jae
lds
sahf
jmp
call
mov
and
sbb
mov
fistp
mov
shl
lods
push
mov
dec
xor
adc
in
in
or
or
mov
(bad)
jg
or
daa
mov
add
ficom
inc
dec
mov
addr16
pop
xchg
adc
pop
(bad)
(bad)
(bad)
(bad)
jge
loope
movs
pop
arpl
add
mov
inc
jmp
inc
call
jmp
cli
and
cli
imul
inc
aas
mov
dec
jne
hlt
cmp
aam
mov
pop
(bad)
nop
xchg
push
sahf
fdivr
dec
(bad)
(bad)
(bad)
jmp
(bad)
repnz
mov
lods
jg
fs
aam
jns
push
adc
pop
dec
pop
sbb
inc
sbb
and
cmp
in
push
mov
mov
cmp
rcr
add
in
push
ret
in
mov
ss
pop
call
int3
inc
dec
(bad)
push
and
pop
xchg
icebp
dec
out
call
mov
push
(bad)
(bad)
(bad)
dec
mov
ins
ror
push
dec
(bad)
loopne
jne
pop
imul
inc
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
mov
push
mov
popf
call
push
sub
mov
pop
jbe
xchg
sar
pop
cmps
aam
(bad)
(bad)
push
cdq
clc
dec
je
aaa
not
stos
inc
push
mov
in
sbb
(bad)
(bad)
(bad)
inc
add
or
out
iret
(bad)
xchg
jns
vpsubsb
xlat
jo
sub
or
std
(bad)
(bad)
(bad)
cmp
xchg
dec
outs
mov
aas
in
mov
sbb
bound
js
not
mov
push
or
cdq
mov
rcl
mov
(bad)
(bad)
(bad)
(bad)
jmp
xor
or
mov
push
mov
jmp
jnp
cdq
and
add
(bad)
(bad)
(bad)
jg
mov
and
or
add
test
jns
xor
cmp
jo
xchg
popa
and
loopne
push
loopne
(bad)
(bad)
jle
push
adc
and
push
imul
nop
adc
ret
push
or
xor
(bad)
call
fcom
xor
cdq
adc
inc
sub
mov
repz
jmp
cli
(bad)
jnp
addr16
inc
mov
out
cli
jmp
sbb
mov
sbb
icebp
fisubr
cli
(bad)
push
sbb
jne
in
leave
jmp
dec
adc
jge
pusha
and
in
movs
(bad)
(bad)
(bad)
inc
es
mov
jbe
in
jmp
xchg
push
sti
bts
rol
(bad)
cmp
adc
and
dec
cld
les
lock
call
bnd
mov
xchg
push
out
fs
addr16
adc
into
hlt
movs
(bad)
(bad)
dec
cmp
(bad)
inc
inc
outs
push
(bad)
scas
cmp
or
mov
add
inc
or
movs
call
icebp
inc
call
mov
mov
(bad)
(bad)
dec
int
mov
xor
mov
cmps
gs
call
out
sub
(bad)
(bad)
(bad)
dec
cmps
inc
push
cmp
jne
and
leave
adc
jmp
mov
(bad)
(bad)
(bad)
aas
leave
outs
aas
aas
call
jmp
(bad)
cmp
pop
div
fwait
jg
push
push
push
(bad)
call
rcl
mov
xchg
(bad)
mov
push
daa
xchg
mov
cmp
call
xor
(bad)
(bad)
push
dec
outs
xchg
cld
pop
cmp
shl
mov
(bad)
out
xchg
(bad)
(bad)
dec
sbb
int3
cmp
cmp
pop
inc
in
(bad)
(bad)
(bad)
(bad)
ficom
adc
out
cld
sub
xchg
pop
jmp
sbb
les
les
push
sub
cmp
jle
cmp
(bad)
dec
jbe
les
pop
jmp
xor
(bad)
(bad)
frstor
and
js
imul
(bad)
test
pop
fcomp
shl
jp
fcom
bnd
retf
mov
nop
push
jp
in
cmps
cmp
(bad)
(bad)
jg
es
dec
dec
scas
xchg
fld
sub
xor
ret
mov
push
xchg
repnz
out
aad
(bad)
jmp
inc
outs
into
jecxz
div
adc
sub
dec
in
fs
(bad)
(bad)
(bad)
jmp
out
mul
lea
inc
movs
test
mov
mov
or
test
jmp
jg
inc
cmps
out
sub
bound
and
cmp
scas
cli
call
ret
fisttp
(bad)
je
cmp
push
sub
int3
ins
jae
es
(bad)
(bad)
(bad)
call
xor
pop
adc
mov
sbb
xchg
xor
dec
sbb
or
(bad)
(bad)
(bad)
dec
dec
fidivr
xchg
bnd
imul
cmp
mov
retf
jae
mov
(bad)
(bad)
call
iret
jl
jecxz
mov
mov
cli
jae
jmp
and
cdq
(bad)
pop
clc
push
jmp
jge
xor
and
push
inc
fbld
into
sub
jge
test
cmp
xor
(bad)
(bad)
jmp
aaa
and
jecxz
rol
bound
fmul
or
mov
(bad)
(bad)
inc
test
and
ss
or
jge
push
add
and
fdivr
pop
pop
lds
(bad)
(bad)
(bad)
(bad)
ficom
sbb
mov
mov
pusha
or
sub
(bad)
mov
in
pop
xor
dec
retf
sub
cld
lods
icebp
push
mov
sub
dec
cmps
aad
retf
jno
(bad)
(bad)
(bad)
inc
ror
int3
cmp
jae
popa
dec
outs
(bad)
ss
ds
pop
cmp
and
inc
clc
xchg
adc
mov
and
xor
pop
and
inc
loopne
test
(bad)
lods
push
xor
inc
pop
imul
(bad)
sub
sub
ds
retf
popa
aam
mov
popf
punpckhdq
test
cmps
nop
mov
shl
pusha
mov
mov
(bad)
and
pop
mov
mov
fmul
(bad)
(bad)
(bad)
dec
mov
pop
dec
aaa
push
in
icebp
xor
adc
imul
dec
cmp
ja
(bad)
call
and
out
fdiv
mov
xchg
ja
sbb
(bad)
(bad)
call
mov
dec
and
xchg
lods
fwait
push
xor
fldcw
(bad)
js
call
cmc
jmp
xor
mov
inc
add
inc
mov
mov
sahf
(bad)
(bad)
(bad)
jmp
xchg
mov
outs
iret
(bad)
cli
or
mov
data16
push
jno
mov
adc
mov
ds
(bad)
(bad)
(bad)
call
push
repz
dec
xchg
addr16
push
retf
xor
jecxz
sbb
adc
dec
push
(bad)
xor
(bad)
(bad)
(bad)
call
jns
mov
rol
push
xchg
dec
or
pushf
into
mov
fld
(bad)
call
inc
jo
imul
push
mov
das
push
out
xchg
inc
mov
ret
xlat
jg
(bad)
out
mov
test
stc
dec
into
mov
jl
inc
or
pop
hlt
jmp
cli
adc
inc
sub
cli
dec
and
sub
mov
xor
loopne
jl
jne
adc
dec
dec
cmp
adc
xchg
scas
shl
dec
lea
outs
or
jns
push
sbb
js
arpl
lods
(bad)
(bad)
mov
push
mov
push
jl
push
pop
(bad)
pop
(bad)
(bad)
inc
retf
(bad)
jmp
dec
sub
sbb
mov
aaa
std
enter
or
out
inc
cld
xchg
test
rcr
push
inc
data16
cmc
dec
dec
leave
mov
dec
pop
adc
test
xchg
pusha
cmc
xor
out
(bad)
int
push
cmc
mov
ret
add
(bad)
movs
mov
xor
pop
(bad)
(bad)
(bad)
(bad)
fadd
xchg
jnp
jb
jmp
mov
loop
or
cmp
call
cmp
jp
retf
mov
pop
inc
adc
inc
scas
in
inc
xchg
(bad)
(bad)
(bad)
(bad)
aas
push
aas
push
ror
mov
ss
fcomp
jb
jno
bound
mov
lods
mov
or
add
(bad)
(bad)
(bad)
dec
add
sub
pushf
mov
leave
(bad)
inc
(bad)
repz
pop
mov
loope
pop
loopne
iret
add
mov
jge
xor
jmp
(bad)
call
fist
jl
repnz
cli
mov
mov
or
jnp
adc
(bad)
(bad)
(bad)
push
xchg
sub
xchg
jg
popa
mov
mov
fistp
jge
and
sub
(bad)
(bad)
dec
(bad)
das
(bad)
aad
sti
sbb
sbb
cmp
lahf
test
sbb
repz
(bad)
mov
xor
push
fmul
movs
jmp
pop
test
xor
lahf
(bad)
(bad)
inc
push
adc
and
sub
dec
add
cld
(bad)
jmp
push
scas
inc
jmp
adc
jle
pop
adc
(bad)
(bad)
jmp
movs
adc
enter
mov
mov
jbe
sbb
in
mov
cmp
ds
sub
(bad)
(bad)
(bad)
clc
push
mov
push
cs
shl
pop
add
ins
daa
push
pop
xchg
xchg
imul
outs
out
(bad)
add
lds
ins
in
pop
cdq
cmp
in
fstp
mov
(bad)
call
xor
loopne
lock
mov
dec
leave
mov
sub
mov
(bad)
(bad)
fdivr
ret
push
mov
xor
xor
mov
cmp
lods
not
loope
jg
lock
jae
hlt
push
mov
jle
movs
aam
cmps
aas
dec
ss
(bad)
(bad)
jmp
mov
clc
sub
mov
pop
icebp
div
je
leave
aaa
mov
std
sbb
scas
fidiv
mov
das
pop
mov
mov
ret
(bad)
call
int3
dec
or
xchg
or
sbb
sbb
clc
(bad)
dec
fwait
sbb
xchg
rcl
imul
jo
test
(bad)
(bad)
mov
xlat
bswap
dec
imul
add
push
fwait
icebp
lods
adc
scas
mov
xor
pop
into
push
enter
push
jmp
mov
jp
jne
(bad)
(bad)
inc
mov
or
xor
jne
mul
mov
je
(bad)
(bad)
mov
push
ins
jg
add
aam
pop
push
(bad)
clc
bound
sbb
push
xor
lds
mov
das
sahf
out
mov
mov
das
and
adc
pop
mov
imul
loopne
lock
(bad)
(bad)
jg
sti
movs
(bad)
mov
and
in
or
das
clc
(bad)
cld
push
xchg
sub
scas
aam
mov
inc
adc
jne
push
dec
pop
mov
je
push
mov
or
mov
(bad)
cld
and
or
adc
cmp
(bad)
stc
push
mov
push
test
mov
sbb
(bad)
cmps
fcomp
cmp
mov
pop
push
push
(bad)
(bad)
(bad)
(bad)
cld
mov
sbb
pushf
out
dec
test
mov
push
ja
and
imul
aas
or
je
addr16
and
inc
test
and
jno
fcomp
call
jmp
ret
lock
jnp
mov
push
test
movs
pushf
imul
jmp
xchg
add
clc
xchg
or
call
(bad)
(bad)
inc
inc
xor
xor
fld
gs
lods
cwde
adc
hlt
add
sbb
sub
pop
inc
scas
ret
cmp
out
cld
mov
dec
sub
push
lds
(bad)
dec
icebp
imul
pop
js
cmc
inc
and
adc
mov
sahf
pushf
shl
test
jmp
sar
jle
aam
mov
xor
push
adc
cmp
out
fwait
call
ret
or
push
mov
retf
out
les
dec
and
and
xchg
xchg
imul
movs
sbb
xor
pop
and
sahf
sbb
and
test
clc
xchg
add
gs
(bad)
into
add
push
cmps
dec
cmp
mov
adc
pop
std
mov
call
cmp
dec
loop
fdivr
(bad)
(bad)
out
jo
aas
int3
iret
pop
fs
into
push
aaa
add
jb
xchg
(bad)
loope
adc
(bad)
call
mov
movs
xor
cmps
xchg
or
cwde
lods
jg
jmp
fs
cmp
cmps
test
dec
loopne
push
push
aaa
inc
clc
(bad)
(bad)
mov
jp
ficomp
popf
cmps
jle
(bad)
mov
push
enter
(bad)
jmp
inc
jge
inc
leave
cmps
mov
add
jmp
dec
and
mov
xor
xchg
push
popf
jmp
icebp
ins
sub
lds
add
stos
dec
ja
(bad)
dec
aaa
cld
(bad)
call
stos
cli
retf
adc
mov
push
dec
dec
and
mov
lds
and
(bad)
(bad)
call
mov
repnz
mov
rcl
jp
scas
leave
sbb
std
pop
xchg
dec
cli
(bad)
(bad)
mov
pop
popf
xchg
mov
pusha
adc
cmps
pop
cmps
xchg
add
jmp
sbb
xor
imul
add
sub
adc
mov
iret
dec
cs
pop
stos
xchg
push
jp
(bad)
(bad)
(bad)
jmp
std
pushf
rcr
je
pushf
xor
call
cmps
cs
add
shl
sbb
fadd
sub
pop
leave
inc
mov
lock
cli
push
inc
or
sbb
mov
mov
(bad)
(bad)
jmp
sub
mov
mov
lods
cli
or
retf
xor
(bad)
(bad)
(bad)
(bad)
and
mov
add
ins
xchg
in
jg
fisub
nop
cmp
mov
mov
(bad)
(bad)
jmp
shl
aas
or
jne
pop
out
xchg
into
pcmpgtb
lock
(bad)
(bad)
(bad)
dec
imul
jmp
xchg
adc
outs
pop
push
dec
pop
push
push
jmp
(bad)
(bad)
jmp
pop
test
xchg
mov
xor
outs
jmp
(bad)
xor
ja
pop
pusha
div
cmp
jmp
jmp
xchg
leave
or
xor
pushf
mov
rcl
dec
punpcklbw
push
push
stos
jno
ss
(bad)
(bad)
(bad)
dec
(bad)
dec
adc
cmps
xor
lock
cli
enter
popa
imul
mov
pop
dec
pop
(bad)
(bad)
(bad)
inc
ret
xchg
leave
jp
cmp
(bad)
ficomp
pop
aas
push
in
test
add
mov
sbb
push
xor
mov
(bad)
out
xchg
pop
in
xchg
shl
leave
idiv
cmps
scas
cmp
jmp
and
outs
fadd
adc
xlat
add
das
movs
jno
push
and
mov
add
imul
(bad)
(bad)
(bad)
jmp
ret
out
je
fwait
mov
ret
int3
dec
test
loop
mov
cld
inc
dec
jmp
inc
(bad)
(bad)
(bad)
fstp
in
test
xlat
fistp
push
pop
mov
mov
push
addr16
arpl
(bad)
(bad)
push
aaa
les
out
cs
loop
int3
push
imul
(bad)
(bad)
(bad)
mov
dec
add
dec
pop
jecxz
sbb
and
sub
ror
pusha
sbb
(bad)
(bad)
(bad)
(bad)
in
push
leave
adc
lea
add
push
cld
addr16
(bad)
lock
iret
int
frstor
adc
push
(bad)
(bad)
(bad)
dec
xchg
cmp
cmp
mov
dec
add
in
mov
test
sahf
(bad)
mov
jg
jg
cmp
pop
sbb
cmps
pop
or
rcr
jle
pop
inc
dec
inc
sbb
dec
jecxz
int3
add
jle
neg
scas
or
arpl
test
lds
dec
cmp
call
push
addr16
lahf
cdq
jecxz
lods
xchg
ret
xchg
mov
adc
enter
push
inc
call
and
into
adc
in
pop
ins
inc
xchg
pop
and
mov
mov
(bad)
(bad)
xchg
aad
repz
xor
cmp
retf
cwde
cli
(bad)
(bad)
call
sbb
cmps
mov
(bad)
pop
mov
and
retf
cli
(bad)
movs
(bad)
(bad)
(bad)
jmp
addr16
leave
lock
dec
add
ficom
cmc
adc
cli
dec
(bad)
(bad)
(bad)
inc
jle
out
jnp
rcl
cld
pop
popf
sbb
nop
int
or
fmul
fucomip
sbb
(bad)
(bad)
inc
mov
test
cmp
inc
out
jo
scas
inc
jmp
sahf
mov
xchg
xor
fild
repz
push
lods
retf
bound
jl
add
pop
pop
cmc
mov
es
(bad)
(bad)
mov
mov
push
outs
mov
loope
rcl
sbb
dec
int3
scas
jns
(bad)
(bad)
dec
dec
dec
scas
ss
mov
iret
(bad)
fbld
jmp
cmp
(bad)
(bad)
jg
fdivr
or
dec
mov
enter
mov
imul
inc
dec
lds
(bad)
jg
call
sbb
data16
fwait
pop
stos
sbb
mov
xchg
movs
sbb
dec
jecxz
in
jle
popa
mov
(bad)
pop
jb
jo
pusha
mov
(bad)
(bad)
push
stc
adc
or
(bad)
(bad)
fld
mov
and
ss
js
sub
out
push
adc
dec
(bad)
dec
loop
cmps
loopne
dec
sub
popa
movs
clc
adc
pop
mov
mov
dec
dec
inc
es
ss
imul
cli
dec
and
and
xchg
call
push
xchg
adc
fidiv
(bad)
(bad)
(bad)
call
mov
cdq
jae
mov
push
mov
push
push
push
lds
sar
(bad)
jmp
leave
push
(bad)
nop
into
mov
mov
add
push
jge
mov
mov
(bad)
(bad)
(bad)
call
add
push
xchg
(bad)
mov
xchg
fs
cmp
add
xor
push
sub
rcl
(bad)
(bad)
push
inc
xchg
daa
(bad)
jno
xchg
sub
push
sub
xlat
rcl
cld
xor
(bad)
jmp
aaa
inc
not
sbb
push
stos
sub
cmp
cmp
(bad)
(bad)
inc
cmp
mov
adc
clc
mov
jo
mov
stc
mov
push
jmp
push
mov
popf
and
movs
lock
cmp
jl
xor
xor
push
loope
(bad)
(bad)
(bad)
push
scas
cmp
mov
std
sub
mov
mov
push
mov
lock
cli
aad
cmp
(bad)
jmp
xor
cmp
js
lea
(bad)
jb
inc
call
add
jmp
fmul
jnp
push
xor
test
ins
inc
in
popa
mov
(bad)
push
push
jbe
jo
mov
fst
sub
pop
mov
(bad)
jg
push
mov
or
mov
push
retf
aad
sub
bound
js
ret
jg
dec
out
push
dec
and
xchg
cmp
sub
jp
mov
loopne
mov
cmps
adc
xor
lods
lods
inc
pop
push
(bad)
mov
(bad)
call
(bad)
adc
aas
mov
inc
test
je
sti
xchg
scas
retf
xchg
test
(bad)
mov
dec
(bad)
ret
popa
rol
out
test
stc
sbb
pop
sub
mov
bound
and
(bad)
(bad)
aas
push
shr
aaa
xor
add
pop
dec
cmp
clc
push
xor
gs
pop
sbb
(bad)
fcomip
(bad)
mov
cli
out
and
inc
outs
or
outs
(bad)
sub
(bad)
(bad)
(bad)
inc
push
stos
sbb
popf
sbb
xor
je
mov
mov
dec
push
mov
mov
(bad)
(bad)
(bad)
call
icebp
mov
out
mov
arpl
inc
addr16
test
cld
push
outs
push
mov
bound
xor
pavgb
mov
(bad)
dec
imul
jmp
jmp
push
shr
cmps
cmps
and
pop
imul
(bad)
(bad)
push
loopne
(bad)
pop
or
ret
sub
je
cmp
pop
xlat
push
outs
mov
add
loop
and
sbb
mov
test
mov
cld
push
das
jb
stc
je
int
cmp
sbb
sub
movs
dec
into
movs
mov
mov
aad
dec
and
data16
mov
dec
repnz
(bad)
(bad)
(bad)
jmp
xor
or
push
pop
mov
sub
or
(bad)
cs
das
clc
(bad)
call
dec
pop
(bad)
lods
out
sub
sbb
pop
dec
or
push
outs
inc
jp
(bad)
(bad)
(bad)
push
rol
adc
pop
mov
mov
sbb
mov
xchg
mov
int3
retf
into
pop
sar
(bad)
(bad)
or
clc
jle
adc
sub
sahf
adc
pop
pop
out
inc
sub
(bad)
(bad)
jg
jb
sub
cmps
jmp
je
or
addr16
call
jp
(bad)
xchg
pop
cld
pop
cmp
test
sbb
mov
retf
imul
xor
retf
(bad)
(bad)
call
cmp
imul
ja
sar
fnsave
adc
fsubr
inc
inc
les
test
sti
shl
cld
inc
jge
xchg
xchg
int3
cld
les
into
(bad)
(bad)
(bad)
(bad)
in
test
(bad)
stc
or
popf
(bad)
mov
mov
xchg
ja
or
pop
dec
out
(bad)
out
mov
ror
icebp
mov
mov
(bad)
(bad)
(bad)
inc
lods
mov
stos
dec
idiv
sub
xor
xor
frstor
mov
std
jmp
int3
jns
mov
mov
call
jg
adc
inc
jge
leave
pop
es
rcr
ins
xor
sti
imul
(bad)
(bad)
(bad)
inc
ja
xlat
inc
dec
add
dec
sub
ds
std
mov
cmp
cld
(bad)
inc
add
mov
(bad)
pop
cmp
cmp
sbb
(bad)
inc
out
push
out
jbe
arpl
das
inc
jg
fsub
or
stos
cwde
aas
ds
(bad)
(bad)
(bad)
jmp
xchg
push
push
out
mov
fldz
fsubp
dec
sti
pop
add
xchg
xor
rcr
(bad)
(bad)
push
sub
out
(bad)
addr16
jae
mov
clc
std
shr
push
retf
pop
add
inc
adc
outs
test
push
adc
mov
sbb
push
(bad)
mov
mov
lods
push
jecxz
sbb
outs
in
ins
mov
xor
clc
(bad)
(bad)
fisttp
pop
mov
outs
sub
movs
fucomi
mov
cmp
ficom
shl
push
xchg
repz
ss
lahf
mov
xor
and
in
cmp
(bad)
(bad)
jmp
rcr
inc
jle
add
hlt
and
iret
adc
mov
scas
mov
jmp
dec
mov
nop
aaa
bswap
or
(bad)
xor
ss
scas
hlt
jg
cmp
(bad)
jmp
cmp
test
repnz
sub
sbb
and
sbb
pusha
arpl
hlt
dec
xchg
jl
fsub
dec
inc
es
push
push
mov
sub
retf
sar
add
push
and
mov
(bad)
jmp
mov
add
js
sub
dec
mov
div
lock
int
fcomip
daa
push
add
mov
lods
loope
sbb
adc
test
and
clc
(bad)
jmp
fcomi
mov
out
aad
adc
push
or
cld
loop
jle
push
and
and
pop
cmp
and
jno
fstp
mov
in
or
inc
pop
mov
mov
(bad)
(bad)
dec
cld
mov
add
inc
ins
or
adc
adc
fistp
push
(bad)
(bad)
(bad)
dec
xor
sbb
or
rol
inc
call
(bad)
(bad)
in
fsubr
dec
push
cmp
mov
cmp
or
mov
rcr
mov
mov
ss
push
cmc
rcr
fistp
stos
push
into
or
adc
jge
sbb
scas
clc
or
adc
shl
mov
jne
xchg
(bad)
(bad)
(bad)
inc
jne
stos
test
stos
add
lods
adc
push
in
aam
idiv
(bad)
(bad)
(bad)
dec
pop
sbb
jge
bound
ins
int
lods
push
lds
fwait
call
in
and
(bad)
(bad)
dec
and
call
jo
sbb
loop
push
dec
cmc
xchg
cwde
ret
js
mov
(bad)
dec
(bad)
dec
and
jo
(bad)
push
xor
hlt
push
pop
cmps
xchg
(bad)
rcr
fdiv
mov
aad
test
shl
cdq
jne
xlat
add
jge
inc
(bad)
(bad)
call
push
xor
jl
mov
aas
push
mov
imul
shl
(bad)
(bad)
(bad)
jmp
sbb
mov
lahf
jmp
ror
xlat
pop
scas
mov
gs
hlt
rcr
(bad)
(bad)
jmp
adc
jne
or
jle
loope
mov
jae
aad
(bad)
(bad)
(bad)
(bad)
out
add
hlt
scas
call
adc
into
clc
gs
ja
lahf
fs
movs
pop
stc
jae
hlt
lods
loop
(bad)
(bad)
(bad)
fisttp
retf
gs
sbb
inc
inc
fisub
dec
jecxz
lock
call
add
(bad)
jmp
add
mov
fs
ret
nop
fwait
fwait
lods
jbe
fst
(bad)
hlt
(bad)
(bad)
(bad)
inc
fmul
and
in
xchg
xchg
into
mov
(bad)
pop
xor
mov
jmp
sti
je
rcr
call
inc
mov
fimul
mov
aad
(bad)
cmp
and
aaa
dec
(bad)
(bad)
(bad)
(bad)
std
inc
jg
ss
lods
xor
or
cs
mov
cmps
cmp
(bad)
(bad)
mov
sbb
dec
mov
jge
int3
cmps
mov
(bad)
push
or
jnp
enter
dec
dec
(bad)
jmp
adc
cmp
imul
fistp
xor
iret
sub
int3
push
clc
outs
fiadd
hlt
pop
(bad)
cmp
xchg
jecxz
and
(bad)
fcomip
call
xchg
push
inc
mov
xchg
xor
sahf
repnz
or
mov
(bad)
(bad)
jmp
xor
(bad)
rcl
xor
test
fistp
xchg
cli
lea
cmp
(bad)
(bad)
(bad)
fist
arpl
mov
or
inc
ds
inc
xlat
push
iret
xchg
adc
jl
(bad)
(bad)
(bad)
jge
jbe
lods
(bad)
jnp
mov
lock
cdq
or
push
or
dec
(bad)
(bad)
(bad)
call
retf
jp
push
mov
fcomp
mov
cmp
jo
and
not
cli
dec
lock
inc
data16
gs
test
cmc
add
(bad)
jmp
xor
mov
dec
jo
dec
mov
(bad)
mov
fisttp
ins
fild
shl
lds
adc
mov
(bad)
(bad)
call
mov
jo
add
repz
cld
jg
inc
sub
cdq
mov
in
arpl
or
sbb
mov
push
aaa
pusha
pop
shl
jge
push
xor
pop
fist
mov
(bad)
arpl
jecxz
call
adc
pusha
xchg
test
or
stos
call
pop
outs
mov
sbb
aas
push
xor
call
(bad)
inc
sub
scas
sar
shl
sahf
xor
loop
(bad)
(bad)
(bad)
fsqrt
ins
add
xlat
lahf
cmc
outs
xor
sbb
mov
inc
pop
stos
fbld
aad
test
scas
(bad)
(bad)
(bad)
(bad)
cmp
xchg
inc
jnp
xchg
dec
pop
pop
fdivr
mov
div
inc
jge
outs
int
push
cld
cmp
test
test
or
ins
push
std
fild
jae
in
lods
dec
cld
sbb
add
mov
icebp
sbb
bound
pop
cli
dec
push
aad
pop
mov
xor
mov
xchg
(bad)
(bad)
(bad)
out
cli
icebp
mov
cmc
outs
aas
xlat
(bad)
scas
aad
mov
aas
dec
mov
mov
(bad)
jmp
push
cmp
sbb
mov
vmovsd
in
rcl
jbe
(bad)
mov
pop
pop
adc
jne
ss
sbb
cmps
outs
callw
pop
xor
in
pop
mov
cmp
int
enter
fsub
mov
call
into
jmp
loope
int
pop
pushf
mov
test
inc
dec
pop
(bad)
(bad)
(bad)
call
xlat
cmp
aad
dec
ss
leave
mov
iret
mov
pop
sub
sub
(bad)
fcomip
(bad)
inc
outs
add
pop
dec
iret
aad
lods
int3
fiadd
sti
jmp
adc
(bad)
(bad)
(bad)
jge
sahf
sub
mov
ffreep
push
jp
mov
mov
ret
xchg
and
arpl
(bad)
(bad)
call
(bad)
pusha
fisub
push
int
add
or
stos
sti
mov
cmps
xchg
add
test
and
outs
add
pop
out
popa
mov
rcr
sub
aaa
mov
sub
dec
(bad)
pop
push
aas
(bad)
(bad)
(bad)
jmp
inc
aas
retf
jp
ins
hlt
sub
stos
mov
inc
(bad)
call
movs
pop
loop
pusha
loop
push
mov
popf
mov
sbb
das
mov
mov
(bad)
fild
enter
imul
xchg
cmp
scas
add
sbb
pop
inc
out
cmp
lahf
leave
out
(bad)
iret
in
(bad)
(bad)
call
or
stos
scas
imul
push
loop
cmp
retf
cs
outs
cmp
loope
jo
inc
pop
jle
mov
cmp
jle
ret
neg
dec
cs
push
ss
push
(bad)
(bad)
(bad)
jmp
add
into
mov
call
mov
gs
fidiv
(bad)
mov
mov
or
mov
stos
fnstenv
mov
pop
adc
call
popf
push
jge
ret
(bad)
dec
pop
cld
push
lods
(bad)
(bad)
(bad)
(bad)
cmp
scas
add
cli
stos
shl
lahf
push
push
jle
dec
cmp
jle
mov
clc
sbb
(bad)
(bad)
(bad)
push
leave
push
add
cwde
cmp
adc
jmp
sti
gs
cli
push
cmovno
(bad)
(bad)
(bad)
jmp
and
dec
icebp
mov
xchg
fwait
mov
xor
mov
sbb
jns
mov
jnp
xchg
in
mov
repz
sti
mov
mov
call
mov
mov
inc
retf
or
(bad)
(bad)
(bad)
jg
loopne
movs
sub
pop
mov
cmp
int3
leave
sbb
(bad)
or
inc
jb
cmp
aas
add
das
(bad)
or
in
out
xor
push
adc
dec
inc
ins
and
lds
mov
out
sub
cdq
inc
(bad)
(bad)
(bad)
jmp
test
loopne
(bad)
arpl
aaa
fnstcw
cmp
jns
(bad)
ins
xchg
pop
or
(bad)
(bad)
(bad)
jmp
loopne
sub
movs
push
hlt
pop
xor
lock
outs
mov
ds
or
out
(bad)
(bad)
(bad)
fisttp
push
add
cs
or
push
cmp
jecxz
xchg
xchg
xor
les
(bad)
(bad)
call
nop
add
push
inc
push
pop
arpl
cmps
or
dec
out
xchg
pop
je
pusha
sub
mov
sub
dec
pop
add
mov
pop
lock
call
mov
ret
xlat
xchg
xor
pop
mov
mov
dec
jmp
mov
or
adc
jmp
aam
jl
je
dec
or
mov
jmp
inc
xor
ret
xchg
mov
int
mov
int
pop
cli
js
mov
in
call
and
xchg
cmp
sbb
dec
adc
or
push
jmp
jmp
mov
push
out
inc
add
add
lods
iret
dec
mov
(bad)
mov
jmp
mov
in
mov
cmp
aaa
sub
sub
push
(bad)
fcomip
dec
mov
xchg
sub
push
sbb
inc
xor
or
jmp
(bad)
push
rcr
lock
lahf
imul
mov
(bad)
dec
cmp
sbb
daa
clc
xchg
inc
and
sbb
lods
add
aaa
inc
xor
(bad)
(bad)
(bad)
inc
push
xchg
xchg
(bad)
int
inc
arpl
cmc
jmp
(bad)
je
mov
lock
sub
idiv
jecxz
sbb
mov
fadd
xchg
pusha
inc
hlt
pop
fstp
imul
(bad)
push
lds
and
mov
mov
ror
mov
stos
cs
mov
jmp
es
rol
leave
hlt
(bad)
call
and
out
in
je
cmp
(bad)
aas
mov
cld
sbb
dec
(bad)
(bad)
call
popf
loopne
push
enter
or
add
(bad)
popa
jae
mov
mov
fdiv
add
clc
into
iret
jae
lds
jns
cmp
jecxz
xor
mov
cmp
xchg
jbe
bound
aaa
mov
dec
ret
std
and
(bad)
(bad)
(bad)
jg
hlt
add
frstpm(287
fst
push
pop
mov
shr
jns
dec
add
mov
add
(bad)
(bad)
inc
sbb
pop
mov
jns
sub
inc
xchg
inc
repnz
sub
(bad)
(bad)
call
xlat
lahf
out
mov
into
dec
movs
cmp
repnz
jg
cmp
mov
addr16
mov
sbb
clc
pop
mov
mov
push
push
mov
scas
adc
sbb
cmp
sahf
retf
push
mov
je
(bad)
(bad)
(bad)
call
push
repnz
retf
iret
push
pop
cmp
daa
shl
mov
cli
mov
adc
in
or
clc
rol
or
ror
dec
pusha
repnz
pop
cld
xchg
int
mov
adc
sub
(bad)
(bad)
push
(bad)
int3
pop
mov
mov
movs
mov
adc
call
sbb
or
cmc
mov
dec
fsub
mov
shl
adc
addr16
inc
push
pop
std
(bad)
call
js
loopne
xlat
out
mov
(bad)
cmp
scas
repnz
xchg
and
mov
(bad)
(bad)
inc
mov
loopne
loopne
les
invd
xchg
mov
ret
outs
xor
xor
sub
cmp
loope
(bad)
(bad)
dec
or
inc
cmp
push
ins
ret
test
push
jle
in
icebp
scas
aas
pop
xor
mov
sti
cmps
stos
mov
sbb
cmc
inc
cld
jle
imul
xlat
ret
xor
pusha
(bad)
mov
out
adc
xor
fdivr
call
mov
cmp
push
and
(bad)
(bad)
push
sub
pop
pushf
imul
inc
inc
in
cmp
lock
cmps
loopne
mov
(bad)
(bad)
call
cwde
mov
sar
add
mov
xchg
push
(bad)
arpl
dec
cmps
hlt
mov
mov
jge
mov
and
(bad)
jae
(bad)
(bad)
(bad)
fisubr
push
add
add
add
or
add
adc
jp
xor
cli
call
icebp
push
rcr
add
out
outs
jns
add
(bad)
mov
(bad)
in
sbb
arpl
push
ror
inc
mov
test
jns
push
ins
test
xor
push
call
in
cmps
call
lods
mov
test
ret
sbb
dec
shr
into
cmp
inc
jnp
es
rep
push
(bad)
(bad)
jg
mov
call
pop
mov
dec
lock
call
jecxz
inc
(bad)
mov
movs
xor
sti
retf
jns
daa
enter
(bad)
cs
out
pop
retf
jns
data16
jg
adc
into
mov
mov
ror
in
repz
sub
(bad)
inc
dec
jns
sub
mov
inc
std
adc
rcl
shr
idiv
pop
jo
icebp
(bad)
lock
aaa
mov
mov
pop
jle
(bad)
(bad)
(bad)
inc
pop
(bad)
or
cmp
adc
je
scas
or
dec
leave
scas
out
das
cli
(bad)
dec
jle
jnp
adc
ret
int3
cmp
adc
sbb
add
mov
std
pop
mov
cli
cmovge
adc
cld
(bad)
(bad)
(bad)
push
and
ror
mov
and
sbb
clc
or
jmp
sub
xor
(bad)
call
xchg
jno
mov
in
dec
pop
addr16
and
movs
std
ret
mov
add
addr16
jo
cdq
out
jmp
pop
add
(bad)
(bad)
(bad)
call
pusha
test
push
xor
lds
rcl
out
and
cmp
sbb
jmp
mov
inc
hlt
mov
jge
xor
mov
icebp
adc
mov
call
adc
(bad)
popf
sub
or
mov
mov
or
jno
(bad)
(bad)
jmp
dec
loop
inc
imul
jae
dec
test
sub
es
(bad)
(bad)
inc
jp
mov
mov
sti
inc
sub
pop
add
repz
clc
outs
aam
fs
cli
(bad)
jge
or
sti
or
push
xor
(bad)
dec
jo
aam
scas
fisttp
mov
(bad)
(bad)
jnp
fistp
mov
(bad)
(bad)
inc
push
mov
cmps
cmp
adc
dec
cmp
xchg
(bad)
fwait
adc
or
scas
jle
push
cld
push
mov
dec
mov
jp
jp
scas
xchg
(bad)
dec
lock
(bad)
aam
cmp
repnz
test
and
mov
adc
mov
lods
sahf
pusha
sbb
sub
pop
pop
ja
mov
mov
repz
xor
push
movaps
repz
dec
call
scas
and
xchg
mov
cmp
mov
fistp
jae
mov
call
mov
push
shl
ret
into
mov
rcr
sbb
cld
(bad)
dec
aaa
sbb
sar
sar
ins
add
scas
sbb
mov
(bad)
ins
jmp
scas
xchg
(bad)
(bad)
fcom
sub
scas
mov
std
jnp
push
sbb
push
add
repnz
scas
mov
movs
stos
ret
fcom
(bad)
(bad)
jg
push
push
in
das
ret
sar
aas
xor
sub
dec
ror
mov
addr16
out
or
inc
shr
cmps
dec
fs
pop
dec
pop
and
mov
sti
mov
jl
mov
(bad)
(bad)
dec
stos
add
pop
(bad)
push
inc
cmp
stos
lock
pusha
cld
add
ins
ret
(bad)
(bad)
(bad)
dec
les
dec
sub
jp
js
ret
or
jb
mov
adc
dec
ds
mov
inc
gs
gs
(bad)
cmp
xor
mov
fwait
ins
mov
xchg
cs
into
cmp
(bad)
(bad)
jmp
mov
and
sbb
enter
jl
(bad)
mov
inc
(bad)
(bad)
(bad)
dec
pop
nop
ss
xchg
scas
pop
mov
dec
out
fisub
xchg
pop
outs
mov
sub
(bad)
mov
cs
pusha
pop
cmp
adc
fisttp
movs
(bad)
jmp
cli
mov
or
stc
adc
jg
jmp
pop
inc
jae
(bad)
(bad)
(bad)
jmp
pop
adc
jns
call
in
loope
das
jo
pop
mov
movs
rcl
(bad)
jp
jge
inc
out
sbb
pop
add
mov
xor
xor
add
xor
mov
in
das
fidivr
test
subps
(bad)
call
cmp
ror
sbb
les
test
ret
call
push
enter
add
dec
dec
dec
sar
mov
fist
test
sbb
(bad)
(bad)
jmp
dec
nop
pop
mov
xchg
repnz
and
test
test
repnz
add
(bad)
(bad)
inc
enter
cmp
jmp
xlat
dec
push
div
mov
jp
dec
inc
jg
(bad)
push
in
jcxz
cmp
(bad)
jmp
cdq
das
sbb
cmp
jbe
jmp
dec
and
inc
xchg
sbb
push
cmps
dec
add
cmc
inc
aam
or
push
(bad)
jmp
xchg
jbe
les
xchg
in
add
and
or
mov
(bad)
aam
std
popf
je
fwait
pushf
(bad)
jmp
cli
std
add
xchg
cs
inc
dec
inc
pop
ins
outs
xchg
in
push
xchg
mov
sub
(bad)
jmp
and
jns
jb
neg
or
add
pop
add
mov
dec
(bad)
(bad)
(bad)
(bad)
ficomp
or
arpl
mov
xchg
cmp
mov
or
xchg
cmps
(bad)
(bad)
(bad)
(bad)
mov
loopne
xchg
or
cwde
xor
(bad)
lods
mov
aam
xchg
(bad)
(bad)
(bad)
(bad)
mov
arpl
leave
test
add
stos
out
dec
sub
ret
sar
(bad)
(bad)
(bad)
dec
add
mov
push
xchg
test
cmp
xor
pop
mov
outs
rol
std
and
aaa
pop
icebp
(bad)
jmp
ret
gs
sbb
push
ss
jo
shl
push
(bad)
jmp
mov
mov
push
mov
mov
das
sub
icebp
inc
sar
inc
out
push
lods
push
jbe
cmp
cmp
and
or
out
mov
aad
mov
jg
(bad)
out
sbb
leave
sar
ror
or
jno
test
pop
pop
loope
sub
(bad)
(bad)
jg
inc
xchg
neg
xor
retf
xchg
ret
jle
cmc
and
pop
aas
icebp
adc
aaa
push
(bad)
(bad)
(bad)
push
fld
dec
lods
fwait
sbb
pop
mov
adc
loop
outs
movs
push
or
cdq
sbb
mov
jecxz
pop
inc
dec
mov
jl
and
(bad)
(bad)
call
dec
dec
sti
int
xchg
popf
dec
push
repnz
and
icebp
jbe
test
(bad)
call
loope
jb
fmul
scas
retf
(bad)
outs
xor
shl
add
mov
add
pop
(bad)
jg
jmp
mov
loop
mov
addr16
imul
(bad)
(bad)
push
pop
popf
sbb
push
in
pop
adc
cmp
sbb
rcr
bound
lods
jmp
lock
inc
pandn
jg
sar
or
sbb
xor
mov
adc
aaa
pop
lock
and
jne
sbb
dec
rcl
or
pop
iret
clc
(bad)
(bad)
(bad)
cld
cmps
sub
mov
daa
inc
std
dec
or
es
mov
hlt
ins
mov
xor
jle
cmps
jp
inc
jmp
(bad)
(bad)
dec
push
icebp
mov
and
mov
dec
inc
cwde
pop
popa
les
fcomi
mov
sub
in
sbb
in
(bad)
(bad)
(bad)
mov
cld
jno
aaa
mov
inc
or
jmp
ds
(bad)
in
std
(bad)
inc
frstor
into
(bad)
cli
jecxz
jl
in
jg
jns
lods
cmp
(bad)
(bad)
(bad)
inc
fwait
mov
xlat
icebp
add
imul
cmp
pop
aad
pop
les
or
(bad)
(bad)
(bad)
inc
jmp
inc
jecxz
mov
push
imul
test
ret
jle
lods
test
xchg
(bad)
(bad)
call
retf
ja
sub
xor
stc
cli
fcom
sub
and
or
lea
scas
(bad)
(bad)
call
cwde
mov
pop
xchg
and
push
sub
pop
out
cmp
into
(bad)
and
mov
clc
call
xchg
sbb
stos
jmp
xor
inc
adc
fdivr
repz
into
jns
ins
lods
cmps
test
call
push
xor
mov
jge
fsubrp
mov
mov
aaa
mov
(bad)
(bad)
jmp
sub
xor
in
push
pop
mov
imul
pusha
mov
rcl
mov
xor
(bad)
(bad)
dec
scas
outs
pop
daa
push
hlt
pushf
loope
mov
fild
pop
jp
mov
add
sbb
jg
fisttp
fbld
emms
lahf
push
mov
push
sti
fistp
pop
retf
xor
jge
(bad)
(bad)
(bad)
jge
ret
cmp
or
and
xchg
xor
or
aad
int3
mov
dec
int
(bad)
(bad)
(bad)
jmp
jne
xor
mov
movs
(bad)
addr16
pop
repz
cwde
pop
cmp
into
(bad)
(bad)
div
in
lock
or
imul
xchg
xrelease
mov
les
or
cmps
out
xchg
mov
push
jno
push
stc
stos
ds
cmc
ret
jl
mov
(bad)
jmp
(bad)
jecxz
repnz
jmp
imul
sub
icebp
sahf
(bad)
fcomip
mov
(bad)
cmp
jbe
dec
lea
ja
sbb
mov
(bad)
(bad)
inc
or
scas
and
popa
mov
movs
repnz
add
add
call
xor
jp
push
inc
in
stos
loop
cmp
mov
sub
and
aaa
(bad)
(bad)
fcomip
mov
jmp
gs
mov
jne
dec
sahf
lock
lock
test
jmp
mov
add
(bad)
inc
or
sbb
sbb
das
sar
mov
pushf
pop
inc
pop
stos
pop
push
jl
ficom
add
fwait
and
out
mov
enter
adc
xchg
test
lahf
aaa
sbb
sub
(bad)
push
adc
imul
mul
xchg
fnsave
rol
cmc
(bad)
sti
pop
mov
pop
sbb
adc
fild
jle
test
out
pop
(bad)
cmp
push
dec
fwait
(bad)
(bad)
inc
fs
cmp
xchg
pmulhw
mov
mov
fisub
(bad)
(bad)
(bad)
jmp
or
popa
shl
dec
(bad)
pop
shl
push
cli
or
sbb
sbb
repnz
xlat
es
jmp
add
idiv
sti
popa
std
fdivr
aad
(bad)
(bad)
(bad)
fsub
sahf
push
in
fsubr
test
or
popa
sub
mov
pop
or
(bad)
(bad)
mov
cmp
push
js
pop
xor
cmc
add
jg
pop
xor
mul
push
push
sahf
xor
sub
jp
ror
fst
mov
(bad)
dec
jl
and
loope
and
inc
fisttp
fucomip
xor
xor
add
ror
fcomip
(bad)
fadd
mov
js
xor
sub
push
mov
xor
or
icebp
inc
mov
adc
sahf
inc
push
jbe
call
sub
xchg
jno
or
mov
jg
or
pop
cmp
mov
mov
inc
aas
js
lahf
push
mov
movs
out
fmul
test
push
inc
xchg
add
jle
pop
outs
mov
(bad)
(bad)
fucomip
lds
and
(bad)
test
mov
mov
dec
mov
inc
jo
xchg
mov
in
jl
or
(bad)
push
pop
out
ins
push
pop
cmp
shl
sbb
mov
sbb
cmps
nop
es
fcomip
ja
push
loop
cs
cmp
cmp
mov
cmp
(bad)
(bad)
push
out
stc
xchg
mov
xchg
dec
push
adc
cli
in
mov
loope
mov
(bad)
push
scas
clc
pop
sar
mov
cmc
fidiv
das
adc
sub
rcr
iret
enter
(bad)
inc
cmps
push
mov
sbb
movs
mov
cmp
cmp
cmp
imul
in
repz
dec
adc
arpl
test
pop
daa
and
push
(bad)
(bad)
jmp
mov
or
push
leave
adc
dec
dec
(bad)
and
retf
lds
jg
ss
sbb
pop
mov
test
inc
in
iret
adc
loop
sbb
or
adc
sub
push
lock
push
mov
inc
mov
jne
jge
into
mov
pop
add
loope
fldcw
jmp
shl
xchg
ins
jae
mov
mov
push
xchg
out
mov
mov
jne
ja
cmps
test
(bad)
jl
push
icebp
jns
pop
fucomip
xchg
fcomi
inc
in
cmp
(bad)
(bad)
jg
or
pop
jl
sbb
daa
adc
enter
and
fs
(bad)
(bad)
call
cmps
fwait
out
jb
jle
sub
js
int3
je
imul
and
xchg
push
scas
call
(bad)
push
cmp
cs
dec
retf
fisubr
(bad)
(bad)
(bad)
push
loope
or
push
bound
les
pop
add
cmps
xchg
jno
(bad)
retf
inc
sti
(bad)
(bad)
(bad)
inc
mov
push
inc
push
sbb
(bad)
pop
xchg
jno
out
bound
sbb
mov
sbb
into
dec
aam
frstor
sbb
iret
sbb
jo
inc
or
and
stos
cmp
sbb
inc
add
mov
push
mov
mov
mov
mov
(bad)
(bad)
mov
xor
add
pop
pushf
sahf
and
xchg
jb
mov
(bad)
mov
xor
xor
xchg
mov
dec
add
in
xor
bound
call
mov
sbb
and
or
xor
mov
add
dec
test
dec
dec
arpl
(bad)
(bad)
mov
icebp
push
jecxz
les
test
movs
or
hlt
(bad)
(bad)
(bad)
inc
mov
and
xchg
adc
xchg
mov
adc
or
int3
daa
xor
xor
(bad)
push
xchg
jb
sbb
arpl
push
fnstcw
mov
jg
jb
adc
jb
pushf
cwde
and
jmp
daa
int3
sub
pop
jmp
sar
and
inc
adc
rol
aaa
mov
or
rcl
mov
(bad)
fcomip
adc
leave
dec
mov
js
bound
jns
jmp
(bad)
js
dec
movs
addr16
xchg
xchg
xor
mov
sub
add
pop
into
repz
test
(bad)
(bad)
(bad)
call
or
dec
popf
jle
cli
adc
push
or
(bad)
sahf
adc
mov
popf
cmp
test
mov
lds
lock
stos
mov
fdiv
push
or
(bad)
push
lahf
test
dec
es
cmps
mov
inc
dec
jg
xor
std
outs
jecxz
inc
clc
popa
dec
(bad)
(bad)
(bad)
(bad)
jl
mov
ficom
pop
fdivr
jo
xchg
cs
aas
sub
nop
out
sti
in
lods
or
mov
not
(bad)
(bad)
sbb
iret
repz
xor
scas
int3
sub
sub
lods
fisub
aaa
ror
(bad)
xchg
(bad)
push
dec
fnsave
(bad)
(bad)
jmp
pop
out
dec
call
aas
(bad)
(bad)
(bad)
dec
dec
movs
cmc
es
cmps
jg
scas
std
jge
addr16
fidivr
fdivr
cli
(bad)
icebp
out
sti
ficomp
push
mov
lds
mov
(bad)
int
std
sbb
cmps
addr16
dec
jge
(bad)
(bad)
(bad)
dec
fld
fmul
out
mov
int
fnstcw
aas
ins
out
ffree
loope
jno
mov
sar
(bad)
push
daa
call
dec
in
in
aas
cmp
outs
cmp
xchg
sub
sub
cli
push
mov
call
inc
sbb
out
dec
js
imul
adc
(bad)
fld
out
popf
pop
(bad)
mov
cli
push
and
int3
mov
(bad)
(bad)
(bad)
call
shr
(bad)
xchg
int3
cmps
xchg
xchg
sbb
test
fs
cmp
xor
repnz
push
inc
(bad)
(bad)
(bad)
push
adc
xchg
jmp
cdq
mov
(bad)
jb
jae
sbb
pop
sub
push
push
int
push
cmps
repz
int3
ret
call
pop
jge
or
xchg
dec
je
(bad)
(bad)
(bad)
mov
dec
pop
and
enter
xor
pop
sbb
sbb
arpl
sbb
xchg
loop
jg
fwait
(bad)
jo
mov
int3
inc
xchg
xor
add
lock
lods
fcomip
(bad)
dec
cwde
dec
sub
mov
hlt
sbb
enter
movs
das
aas
sar
mov
and
jo
sub
pop
enter
xchg
cmps
(bad)
jmp
add
xchg
retf
jnp
xor
test
cli
lea
(bad)
inc
nop
xor
xor
adc
repnz
jbe
movs
ins
lods
test
push
shr
mov
adc
or
sub
dec
(bad)
cwde
nop
mov
pusha
fwait
xor
pop
dec
arpl
(bad)
(bad)
mov
and
and
(bad)
retf
xchg
inc
cdq
dec
and
(bad)
(bad)
(bad)
(bad)
stc
nop
mov
daa
xchg
dec
int3
int
hlt
sbb
cdq
retf
cmp
movs
cdq
ds
sbb
movs
sbb
cmp
xor
out
jp
lds
pusha
loop
fisubr
inc
adc
(bad)
(bad)
push
or
sub
xchg
mov
mov
mov
cmps
jns
jp
inc
je
xchg
add
add
pop
jae
add
xchg
stos
push
pusha
jb
pop
pop
fcom
cli
jmp
sbb
inc
out
fwait
and
fucomp
retf
inc
dec
(bad)
inc
sub
(bad)
inc
mov
add
(bad)
int3
xor
adc
jg
popf
retf
fcomp
jecxz
(bad)
(bad)
call
xchg
mov
or
scas
popa
sub
arpl
inc
test
je
jg
inc
test
(bad)
dec
cwde
test
and
sbb
adc
cmp
(bad)
(bad)
inc
call
sub
in
sub
dec
inc
in
jno
mov
jo
(bad)
(bad)
(bad)
dec
inc
sbb
clc
xor
scas
in
pop
xlat
sbb
push
clc
(bad)
(bad)
call
daa
mov
inc
dec
nop
sub
add
add
and
adc
popf
std
jg
scas
dec
or
int
in
or
mov
shr
mov
ins
add
daa
push
sar
and
push
(bad)
(bad)
cli
rcl
jo
push
and
icebp
test
sbb
sbb
jmp
inc
scas
mov
inc
inc
popa
enter
and
sub
inc
cld
fild
(bad)
mov
nop
sar
xchg
push
fisubr
and
loope
ss
fdivr
push
sub
add
xor
sbb
inc
jecxz
popf
ds
ins
(bad)
push
mov
push
mov
and
xchg
jmp
jl
int
jbe
inc
sahf
and
sub
nop
add
cmovl
adc
sar
cli
sub
js
adc
std
dec
pop
xor
pop
or
cmp
(bad)
mov
mov
mov
test
jns
pop
xchg
or
test
(bad)
(bad)
(bad)
mov
and
test
dec
mov
push
in
iret
sahf
inc
retf
fcmovnbe
fwait
jle
jmp
in
sar
pop
mov
mov
int3
jecxz
push
out
gs
(bad)
(bad)
call
push
or
sbb
in
enter
imul
rcr
push
popa
sub
pusha
fiadd
cld
fbstp
shr
push
les
jns
out
stc
(bad)
(bad)
mov
(bad)
pop
jp
mov
sbb
cmovo
sub
(bad)
jg
(bad)
aas
mov
retf
push
adc
sbb
xchg
sub
je
(bad)
(bad)
(bad)
call
js
inc
jnp
and
adc
jo
(bad)
sbb
and
pop
das
in
(bad)
(bad)
(bad)
call
ja
jae
outs
sar
pop
enter
dec
sub
sub
sub
pop
and
xor
adc
(bad)
(bad)
dec
into
xor
adc
add
cs
mov
push
fidiv
(bad)
mov
aaa
or
shr
mov
call
adc
and
rol
adc
mov
mov
aad
mov
fsubr
xchg
sub
push
dec
in
sbb
cmp
sbb
pop
or
out
inc
repnz
call
push
movs
dec
dec
sbb
jns
inc
dec
mov
mov
(bad)
call
or
jno
sub
stos
nop
jno
xchg
call
cmp
add
pusha
scas
out
rcl
add
push
and
shr
loop
imul
cli
(bad)
inc
(bad)
repnz
bound
xchg
dec
push
sbb
and
imul
sub
push
dec
and
rcl
cmps
pop
lock
shl
sub
push
fisubr
jns
(bad)
(bad)
call
or
push
popf
adc
mov
or
shr
clc
jmp
loope
mov
(bad)
cmp
and
dec
cmp
sbb
or
retf
retf
and
addr16
pop
hlt
(bad)
call
das
and
push
test
dec
cmc
ror
or
add
mov
inc
cmps
hlt
sbb
sub
sti
add
xchg
(bad)
jmp
sar
mov
scas
xchg
fbld
mov
push
push
(bad)
fcomip
dec
adc
sub
push
push
popa
inc
enter
xlat
retf
or
jmp
inc
cmp
rcl
lahf
push
outs
mov
jg
test
xchg
cwde
inc
enter
mov
sub
xor
int
add
and
jmp
movs
sub
add
adc
mov
(bad)
dec
int
mov
mov
movs
es
xchg
outs
ss
mov
cmps
sahf
inc
les
int3
int
xchg
cmp
dec
rcl
inc
add
js
cmp
pop
(bad)
(bad)
(bad)
jmp
and
cmp
je
mov
jo
dec
xor
xor
inc
mov
imul
sbb
fcom
dec
ror
dec
push
or
(bad)
(bad)
(bad)
call
pusha
mov
xchg
push
add
sub
mov
xor
das
cli
(bad)
inc
ror
adc
mov
jo
mov
test
hlt
mov
outs
(bad)
jmp
adc
das
inc
(bad)
and
sbb
ret
inc
jae
or
fwait
xor
imul
and
stos
or
ret
xor
cmp
adc
sahf
hlt
sbb
xor
or
add
mov
fwait
push
jp
cmc
mov
mov
(bad)
(bad)
jmp
mov
pop
push
fnstcw
jecxz
mov
mov
clc
cli
push
out
mov
popa
adc
cmps
pop
add
(bad)
(bad)
push
jmp
adc
sbb
fcomp
mov
stc
adc
sbb
xchg
pop
inc
pop
(bad)
(bad)
(bad)
fistp
jmp
mov
in
adc
sbb
sub
daa
dec
(bad)
int3
xchg
(bad)
sub
mov
sbb
leave
xor
or
push
pop
dec
test
(bad)
(bad)
call
dec
(bad)
test
stc
xchg
loope
xchg
mov
jb
mov
inc
push
push
sbb
rcl
(bad)
(bad)
dec
adc
add
dec
and
mov
inc
add
std
dec
pop
push
or
adc
(bad)
dec
(bad)
push
fdivr
push
es
pop
sbb
pop
add
add
jmp
(bad)
(bad)
(bad)
(bad)
mov
push
nop
cmp
sub
add
stos
mov
out
add
inc
jae
sbb
ror
ret
in
pop
js
lahf
lods
daa
push
(bad)
(bad)
frstor
xchg
adc
ret
mov
mov
or
nop
dec
sbb
pusha
stos
mov
jg
(bad)
(bad)
(bad)
cmp
aam
sub
popf
std
adc
pop
pushf
mov
jns
test
push
inc
sub
push
adc
xor
and
fistp
adc
mov
mov
enter
sub
xor
fild
movs
icebp
adc
dec
(bad)
call
in
mov
push
or
outs
inc
sub
retf
mov
scas
jmp
add
shr
and
xchg
adc
movs
push
and
push
mov
(bad)
(bad)
mov
cmps
gs
rcr
call
inc
dec
push
jno
or
or
adc
mov
out
imul
iret
adc
xchg
adc
ins
or
or
mov
iret
or
add
scas
(bad)
sub
loope
ret
(bad)
(bad)
(bad)
inc
mov
cwde
cmps
pop
mov
pop
in
xor
mov
ror
loope
inc
test
inc
ror
sub
sbb
or
sbb
and
adc
ret
data16
es
push
addr16
rcr
in
pop
lahf
cwde
sbb
mov
lods
jecxz
adc
pop
(bad)
(bad)
(bad)
(bad)
inc
lea
out
and
pop
sub
fwait
and
rol
clc
pushf
xor
lods
cld
sbb
jge
mov
(bad)
mov
jb
fnsave
mov
xchg
mov
cmp
(bad)
(bad)
call
sbb
jno
mov
push
bound
adc
mov
loope
mov
ror
ins
jb
(bad)
jmp
mov
mov
test
jnp
cdq
pop
stos
pop
or
jmp
je
test
popa
inc
mov
and
dec
adc
in
dec
mov
sub
mov
call
push
add
mov
pop
cwde
push
and
mov
sub
jg
jmp
or
cdq
adc
retf
jmp
dec
test
and
(bad)
(bad)
inc
or
test
ret
pop
movs
call
repnz
movs
repz
sub
inc
call
call
xchg
in
aas
loop
cmp
cmp
sub
adc
jnp
(bad)
nop
rol
leave
out
(bad)
(bad)
call
and
ins
push
dec
call
in
mov
repnz
add
into
xchg
aaa
and
jp
icebp
(bad)
inc
pushf
fs
mov
repz
or
mov
push
leave
xor
(bad)
(bad)
dec
fs
push
cmp
popa
pop
movs
cs
jae
out
pop
bound
pop
cli
mov
(bad)
dec
mov
test
cs
out
loopne
cdq
add
jecxz
ror
fmul
(bad)
(bad)
(bad)
(bad)
in
aad
aas
(bad)
and
sub
iret
fisub
sbb
fwait
daa
add
scas
adc
(bad)
push
and
and
outs
mov
xor
enter
mov
fild
outs
jo
jecxz
stos
adc
lahf
jg
dec
cmp
movs
and
(bad)
(bad)
dec
inc
fiadd
ss
leave
jb
dec
cmps
pop
scas
in
icebp
pop
test
ds
sbb
fld
das
cli
pop
les
jo
mov
pusha
movs
add
int3
inc
dec
loope
in
add
sub
(bad)
(bad)
(bad)
push
fist
xchg
xchg
daa
push
ror
movs
xchg
test
imul
in
sbb
arpl
cli
mov
add
pop
sub
pop
aaa
jnp
fmul
out
add
sub
gs
scas
mov
(bad)
leave
int3
not
repz
dec
push
mov
(bad)
push
dec
mov
sbb
dec
pop
add
mov
xchg
xchg
(bad)
xor
call
outs
or
retf
lods
cmp
cmp
jge
or
std
sub
or
xor
(bad)
nop
cld
(bad)
push
push
inc
imul
pop
jb
push
pop
shl
test
mov
imul
(bad)
call
cmp
mov
test
outs
outs
push
and
push
call
and
xchg
inc
push
loop
and
ins
popf
aam
xor
pusha
loopne
(bad)
(bad)
jmp
lods
xchg
jne
cmp
lods
xlat
cmp
in
inc
mov
pop
and
sbb
or
jg
(bad)
(bad)
jmp
xor
pop
sub
rcl
clc
clc
cwde
cmp
pop
ror
jge
gs
push
push
std
js
xchg
(bad)
(bad)
(bad)
call
push
mov
mov
in
sub
stos
ret
adc
cwde
sub
nop
xchg
(bad)
call
leave
repnz
jne
add
lahf
fist
mov
cmp
fld
lods
out
sti
jae
dec
add
std
fmul
pop
pop
push
outs
cs
in
mov
ins
or
push
lods
(bad)
(bad)
(bad)
call
xor
inc
sbb
mov
pop
adc
sbb
jmp
pop
mov
lds
(bad)
(bad)
inc
push
in
xchg
adc
(bad)
leave
mov
dec
push
mov
mov
dec
inc
pop
cmp
and
and
sbb
push
mov
call
jp
xor
dec
and
add
pop
cmp
test
or
inc
mov
or
xchg
sbb
dec
test
mov
adc
mov
int3
cmp
(bad)
xor
test
sti
jno
and
fmul
or
and
xchg
ret
push
jg
rcl
jo
cmp
(bad)
pop
shl
pop
loopne
(bad)
fucomip
adc
clc
pop
adc
iret
inc
pop
enter
repnz
add
(bad)
(bad)
(bad)
call
inc
xchg
cmps
xchg
jle
mov
or
inc
push
pop
sbb
jmp
cmp
(bad)
pop
adc
jmp
clc
in
out
ja
sahf
ret
cmp
pop
out
jg
sahf
retf
std
sahf
or
test
xor
pop
mov
fbld
(bad)
(bad)
jmp
test
jp
jo
push
movs
clc
cmc
sub
in
mov
xor
call
add
call
push
into
call
push
mov
(bad)
(bad)
dec
adc
jb
repz
jnp
xor
xor
push
ins
xor
int
les
jg
dec
inc
mov
jmp
paddusw
nop
jl
jbe
inc
(bad)
jg
or
and
arpl
js
popf
sbb
xchg
in
mov
icebp
jmp
rcr
cmp
mov
xor
cmc
(bad)
(bad)
call
dec
mov
jmp
jnp
xchg
das
imul
(bad)
dec
jp
pop
xchg
or
aas
js
mov
jmp
adc
push
cmps
std
(bad)
mov
xor
retf
faddp
inc
fs
cmp
or
mov
add
add
xor
ds
jg
xchg
arpl
(bad)
push
aas
pcmpgtw
rol
mov
in
cmc
jo
ret
fdivr
cmc
rcr
pop
cld
(bad)
call
in
pop
add
mov
add
push
dec
cmp
es
repz
cmp
inc
dec
int
or
dec
xor
gs
jnp
les
add
jl
ins
pop
ins
js
(bad)
(bad)
(bad)
inc
mov
jecxz
lods
sbb
inc
push
imul
leave
ret
mov
jns
pop
and
test
(bad)
(bad)
inc
cwde
adc
dec
mov
push
sar
ins
cmp
iret
faddp
mov
jnp
xchg
xchg
mov
and
push
mov
aam
and
pusha
mov
in
inc
jnp
sub
xchg
mov
call
ja
int3
test
jge
enter
jmp
sub
(bad)
in
fdivr
mov
sahf
sbb
push
lods
(bad)
mov
jle
in
(bad)
fisttp
bound
popa
test
ds
(bad)
(bad)
jmp
xchg
sbb
xchg
shl
sahf
pop
in
push
sub
adc
and
shl
shr
(bad)
dec
sub
pop
adc
ja
(bad)
out
adc
jae
pop
cmp
(bad)
(bad)
mov
push
outs
jl
shr
fsub
fwait
inc
and
xor
fstp
sbb
mov
shl
sbb
pop
(bad)
cmp
push
xor
loop
ds
mov
(bad)
(bad)
inc
mov
cdq
or
dec
mov
jg
mov
xor
cld
and
pop
mov
in
cmc
sub
xchg
in
mov
mov
pop
cmp
imul
push
push
inc
mov
mov
and
sbb
shl
cmc
(bad)
(bad)
push
jmp
fwait
lahf
es
sbb
lods
add
ret
test
out
in
jl
rcr
jmp
scas
outs
sbb
rcl
test
call
int
daa
sub
mov
inc
shl
sbb
outs
(bad)
nop
std
(bad)
jmp
cld
jg
jmp
jb
mov
shl
sbb
out
pop
in
(bad)
call
fsub
cmp
cmp
or
cs
sbb
das
inc
cld
(bad)
inc
ins
mov
cmp
add
sti
mov
pushf
push
std
jg
add
sbb
sub
sub
lahf
dec
cmp
(bad)
inc
sbb
stos
pusha
adc
mov
push
pop
(bad)
inc
in
jmp
push
cwde
(bad)
(bad)
(bad)
(bad)
jmp
gs
pop
hlt
jge
outs
sbb
cdq
cmps
sar
push
outs
sub
(bad)
sub
sbb
ret
(bad)
nop
and
push
push
push
inc
mov
inc
test
or
(bad)
(bad)
(bad)
inc
add
mov
mov
sbb
push
vmovupd
dec
ds
push
inc
ror
sbb
or
(bad)
in
jg
fistp
and
inc
xor
bnd
add
js
scas
sbb
sub
jmp
dec
ret
mov
(bad)
(bad)
lock
in
ret
inc
(bad)
pop
aas
or
hlt
hlt
inc
movs
pusha
adc
mov
out
cmps
or
cs
in
sub
lock
(bad)
(bad)
dec
push
test
cmp
dec
xchg
aad
push
popa
push
xchg
mov
bound
pop
inc
add
xchg
outs
fcomip
inc
inc
cwde
mov
inc
test
outs
sbb
add
inc
cmp
test
lods
push
adc
cli
xchg
out
fcom
xor
test
(bad)
call
mov
lds
out
ins
scas
stos
cwde
jno
out
or
clc
or
jle
xchg
ret
lock
xor
(bad)
in
inc
or
adc
adc
xor
nop
sub
nop
pusha
cmc
and
cmc
movs
scas
push
(bad)
(bad)
jg
mov
in
add
push
push
outs
mov
sbb
sti
call
or
movs
outs
les
cmps
add
add
xor
cmp
add
(bad)
(bad)
jg
sub
xchg
fdivrp
mov
pop
cmp
pop
loopne
(bad)
in
jbe
out
(bad)
xor
test
(bad)
(bad)
(bad)
call
and
xor
adc
in
sub
xor
pop
cmp
dec
cmp
enter
std
jg
sahf
lock
js
sbb
loope
in
fnstcw
adc
and
arpl
out
xor
and
dec
dec
cmp
or
es
jg
rcr
sbb
dec
cmps
sbb
out
leave
sbb
(bad)
call
xor
dec
std
icebp
push
adc
jl
and
mov
inc
push
ret
push
inc
mov
ret
ss
sbb
imul
retf
pop
inc
sub
push
jno
push
fild
fisttp
mov
mov
loope
(bad)
(bad)
(bad)
(bad)
in
addr16
dec
sbb
jbe
scas
js
stc
pop
adc
push
bound
rcl
xchg
jmp
hlt
sar
xor
jmp
add
and
push
mov
(bad)
cmp
dec
shl
push
sbb
pop
cmp
inc
jae
out
movs
rep
mov
xor
popa
into
hlt
arpl
(bad)
push
push
sar
inc
test
add
dec
gs
inc
push
cmp
mov
adc
sub
jg
add
adc
mov
xor
loope
shr
ins
pop
arpl
(bad)
(bad)
(bad)
cmp
mul
daa
mov
inc
ret
inc
sbb
dec
enter
movs
dec
jbe
dec
push
adc
and
into
ss
and
into
popa
(bad)
(bad)
(bad)
inc
push
addr16
lods
retf
div
ret
push
mov
movs
jo
pushf
je
pop
aas
mov
clc
shr
(bad)
(bad)
jmp
or
dec
pop
dec
and
jns
aas
cmp
xor
cli
xchg
into
sub
mov
(bad)
push
cmp
je
ror
ja
repz
inc
jbe
dec
leave
cmp
xor
dec
mov
cwde
cld
ret
xchg
push
mov
(bad)
aas
aam
dec
sub
sub
imul
pop
lods
add
(bad)
(bad)
(bad)
jmp
push
jle
pop
nop
inc
dec
in
shl
les
push
(bad)
test
sbb
out
out
sbb
sar
(bad)
jmp
push
push
mov
push
cwde
ja
sar
cmp
inc
xor
push
xlat
mov
sbb
call
(bad)
(bad)
jg
shl
cmp
inc
sahf
fs
(bad)
cmp
jb
out
imul
inc
inc
mov
clc
(bad)
jmp
outs
push
jae
fistp
enter
dec
sub
mov
push
push
sbb
adc
cmps
jecxz
jmp
dec
aas
sbb
movs
fs
xchg
xchg
sbb
popf
xchg
push
cmp
cli
(bad)
call
mov
outs
sbb
retf
inc
xor
dec
push
push
lahf
pop
in
enter
icebp
jb
(bad)
(bad)
(bad)
call
push
adc
out
pop
bound
add
xor
xrelease
movs
data16
mov
retf
adc
(bad)
(bad)
(bad)
(bad)
jg
and
pop
jmp
retf
add
movs
xchg
mov
sbb
mov
adc
(bad)
(bad)
push
mov
jecxz
test
adc
jo
loope
and
daa
sub
fisub
(bad)
call
lods
ror
cmp
out
cmp
(bad)
(bad)
(bad)
(bad)
out
xor
lds
pop
push
sbb
nop
inc
jns
pushf
inc
retf
pop
xchg
mov
(bad)
nop
mov
(bad)
(bad)
jmp
loopne
xchg
mov
mov
out
xchg
jno
sbb
int
inc
mov
inc
(bad)
(bad)
(bad)
(bad)
cmp
aad
in
push
mov
gs
es
dec
mov
jecxz
sub
repz
and
(bad)
(bad)
js
pop
or
dec
inc
loope
sti
push
xchg
rcr
pop
sbb
cs
mov
mov
test
dec
or
(bad)
(bad)
(bad)
call
inc
dec
mov
and
mov
out
or
ins
dec
jge
popf
je
mov
imul
cmp
xchg
test
sbb
push
adc
(bad)
(bad)
jmp
out
in
mov
or
jp
push
ja
pop
sub
lea
(bad)
jmp
(bad)
sub
out
arpl
inc
mov
pop
mov
loop
push
lods
mov
sbb
(bad)
ffree
or
mov
dec
mov
cmp
aaa
shr
(bad)
(bad)
(bad)
(bad)
out
retf
xchg
(bad)
cmp
and
clc
ins
enter
and
and
jne
ret
inc
sub
(bad)
(bad)
inc
xor
and
popf
cwde
adc
mov
xlat
div
xor
and
push
push
xor
(bad)
(bad)
jmp
test
int
inc
pop
pop
inc
cmc
jmp
xor
or
retf
pop
cli
add
sub
scas
inc
xchg
or
jmp
cmp
jmp
cmc
and
mov
cld
lods
jnp
movs
mov
loop
stos
std
leave
sub
or
inc
push
je
cli
test
mov
(bad)
enter
(bad)
call
pusha
call
xchg
and
and
xchg
xor
mov
fdivr
pop
or
dec
ret
jns
(bad)
(bad)
(bad)
jmp
add
xchg
sbb
cmc
int3
xor
div
pop
push
push
add
push
inc
inc
dec
xor
sbb
es
mov
call
xor
mov
cwde
das
xor
imul
lods
repz
std
jg
call
inc
and
or
inc
xchg
push
cli
fwait
stc
mov
(bad)
mov
mov
sbb
outs
xchg
push
jb
push
pop
iret
outs
inc
call
jmp
mov
sti
xchg
and
call
scas
fisttp
mov
aaa
adc
call
inc
icebp
in
sub
inc
or
adc
inc
scas
(bad)
(bad)
(bad)
jmp
sub
or
sbb
and
hlt
inc
shl
mov
inc
test
and
xchg
ret
nop
daa
jmp
out
jae
jmp
addr16
xchg
test
cmp
mov
sar
(bad)
(bad)
(bad)
or
mov
(bad)
jp
in
(bad)
clc
and
mov
sbb
call
lock
stc
mov
add
push
pop
fdiv
or
in
(bad)
(bad)
(bad)
jmp
cwde
push
adc
push
mov
cmp
movsx
sbb
(bad)
jne
xor
mov
sub
arpl
retf
bnd
fwait
call
retf
stos
out
clc
push
jl
(bad)
(bad)
inc
shl
lahf
add
pop
enter
mov
add
je
bound
dec
sub
test
mov
rol
adc
adc
and
jge
loopne
les
clc
loopne
jg
fild
ficomp
ds
adc
mov
(bad)
mov
mov
mov
sub
push
fcomp
test
idiv
mov
inc
sub
jb
(bad)
adc
mov
dec
push
sub
je
adc
sub
or
les
fmul
mov
fild
mov
out
(bad)
(bad)
outs
(bad)
(bad)
(bad)
inc
enter
ins
jmp
pop
push
out
push
jge
(bad)
loopne
fdiv
sbb
dec
repnz
add
cmp
fwait
(bad)
jmp
out
repnz
hlt
push
fld
bound
(bad)
jmp
jbe
std
imul
popf
mov
(bad)
(bad)
sub
lds
(bad)
jl
es
jecxz
mov
push
clc
cmp
ja
jge
std
test
xchg
cmp
(bad)
(bad)
out
inc
jle
jnp
sub
xor
fisub
pop
cs
xchg
adc
ss
xor
mov
mov
jp
mov
sbb
push
fnstenv
pop
call
cld
jns
jo
pop
fist
adc
pop
retf
xchg
(bad)
(bad)
(bad)
call
in
or
mov
call
fstp
add
mov
das
cmp
sub
jmp
and
mov
pop
fwait
into
add
xor
pusha
dec
enter
js
jg
(bad)
ds
sbb
jo
and
test
sbb
xor
dec
enter
(bad)
inc
jns
(bad)
mov
sub
sbb
adc
xchg
mov
or
push
icebp
mov
fcomip
dec
loopne
push
cwde
xor
je
out
push
frstor
or
add
(bad)
(bad)
call
popa
push
pop
gs
xor
xchg
dec
and
mov
mov
repnz
jge
outs
data16
push
mov
xchg
xchg
gs
(bad)
pop
retf
icebp
mov
ja
mov
pop
mov
pop
dec
add
xchg
dec
push
cdq
rol
fistp
and
sub
sbb
pushf
or
nop
fsubr
and
adc
xchg
(bad)
movs
pop
icebp
(bad)
call
add
mov
fs
jno
sbb
xor
(bad)
call
aam
out
aad
popf
add
xor
adc
add
out
shl
cmp
int
and
call
and
inc
jmp
pushf
ins
dec
dec
pop
xchg
inc
xlat
sti
and
xor
aaa
int3
add
out
rcr
(bad)
jg
jnp
sti
inc
call
push
mov
mov
in
push
bound
sub
popa
xor
(bad)
fcmovnbe
fwait
sbb
(bad)
jg
mov
jle
push
aas
ins
std
lahf
mov
xor
into
popa
sub
gs
xchg
add
(bad)
(bad)
call
sub
fiadd
or
and
enter
(bad)
(bad)
sahf
clc
rcr
sbb
(bad)
(bad)
inc
cmp
dec
xchg
leave
mov
das
(bad)
std
nop
jge
dec
ds
sub
(bad)
mov
xor
ja
scas
ja
aam
sbb
or
(bad)
(bad)
dec
ins
add
sub
xor
das
jbe
into
mov
dec
in
pop
and
jb
shl
aad
dec
out
(bad)
icebp
xor
mov
out
(bad)
out
lods
dec
push
jae
not
(bad)
(bad)
(bad)
call
call
(bad)
mov
push
dec
jecxz
jg
das
xchg
dec
aaa
mov
je
call
xchg
popf
sub
dec
dec
sub
jbe
jp
mov
sub
lea
lods
lahf
icebp
sahf
lods
lods
jmp
out
mov
imul
imul
mov
ins
leavew
jne
sbb
pop
pop
mov
push
(bad)
jae
push
(bad)
(bad)
(bad)
call
out
push
mov
ds
pop
cmp
pop
fistp
mov
(bad)
(bad)
dec
mov
mov
jle
iret
hlt
push
lods
(bad)
imul
sub
data16
mov
(bad)
dec
push
fwait
scas
and
mov
outs
cmp
pop
scas
scas
clc
(bad)
jmp
sub
daa
sub
cmc
cmp
xchg
jnp
inc
mov
(bad)
(bad)
(bad)
jmp
aam
add
jo
xchg
out
movs
mov
sbb
push
pushf
sti
inc
iret
aam
test
cmc
stos
xor
call
pop
mov
cs
cmc
aaa
idiv
ds
sub
(bad)
(bad)
fisttp
cld
inc
mov
cmp
bound
clc
call
fdivp
sbb
mov
clc
(bad)
jmp
and
test
cli
test
(bad)
rcr
xor
xchg
(bad)
(bad)
dec
outs
mov
mov
stos
gs
and
jmp
mov
(bad)
(bad)
(bad)
dec
cdq
shr
out
pop
jne
pop
jmp
sbb
mov
fst
(bad)
(bad)
(bad)
inc
test
cmps
adc
cli
js
scas
(bad)
xchg
xchg
add
das
pop
minps
fstp
mov
push
mov
nop
add
out
add
xchg
push
sub
mov
jle
fidivr
mov
inc
pop
shl
sbb
aam
lods
jmp
cmp
pop
lock
xchg
(bad)
fisubr
shl
sub
jbe
push
mov
dec
push
movs
stos
adc
(bad)
(bad)
jg
push
(bad)
aad
jge
mov
jbe
aam
mov
inc
cmp
imul
dec
mov
(bad)
(bad)
(bad)
jmp
test
out
mov
cdq
mov
aam
sti
xchg
pop
pop
dec
mov
(bad)
(bad)
jmp
sub
out
mov
cmps
fwait
dec
stc
loop
cmp
xor
int
outs
rol
(bad)
(bad)
(bad)
dec
inc
jo
(bad)
pop
push
mov
jmp
out
xchg
lahf
mov
(bad)
pop
mov
addr16
jmp
aas
inc
ja
dec
stos
loope
dec
hlt
mov
dec
clc
mov
scas
in
push
scas
add
test
(bad)
(bad)
(bad)
dec
add
cmp
leave
pop
int
sahf
out
dec
add
mov
xor
pop
(bad)
(bad)
(bad)
dec
and
dec
je
dec
jnp
xchg
cmp
into
out
mov
stos
mov
sar
mov
call
stos
xchg
test
stos
(bad)
push
mov
sar
(bad)
pop
cmps
jmp
in
sub
or
dec
shl
mov
je
lods
daa
push
popf
jno
mov
ins
push
dec
jle
(bad)
jmp
test
(bad)
gs
outs
push
pop
call
in
mov
cmc
pop
ret
cmp
inc
lock
cmps
aam
jle
(bad)
mov
jmp
inc
popf
and
or
mov
aas
push
xchg
ins
xlat
mov
add
idiv
in
push
mov
pop
mov
repz
test
jg
call
lds
cli
pop
cmc
not
lods
out
add
test
adc
hlt
mov
mov
xchg
push
scas
lods
scas
scas
in
jns
jne
in
mov
jp
test
cmc
inc
imul
clc
fxch
data16
lods
lods
pop
stc
retf
ja
push
scas
cmps
stos
lods
mov
mov
sub
sti
(bad)
pop
mov
hlt
(bad)
jmp
out
std
cmp
jbe
shl
out
rol
mov
(bad)
(bad)
jg
lods
ss
cmps
jmp
stos
stc
je
ja
fsubr
push
sbb
jmp
fidivr
xchg
and
jmp
jmp
mov
ins
inc
dec
cs
lods
push
aad
aad
aam
je
mov
cdq
out
pop
or
push
shr
rol
arpl
call
aaa
pop
cmp
sub
xlat
loope
inc
lea
dec
cmps
xchg
call
cmp
daa
inc
shl
data16
jecxz
jb
(bad)
cs
jno
aam
jmp
cld
mov
mov
ins
in
dec
shl
(bad)
(bad)
(bad)
jmp
mov
jp
lds
dec
rol
pushf
mov
jge
xlat
(bad)
out
repz
leave
mov
gs
(bad)
(bad)
pop
xchg
mov
data16
inc
les
cld
inc
(bad)
out
lock
push
lock
jl
test
dec
stos
dec
stos
ficomp
scas
popf
dec
inc
movs
jne
arpl
(bad)
dec
or
pop
push
xchg
pop
neg
jns
call
jb
xchg
inc
mov
jmp
clc
jne
xor
into
mov
stc
xlat
call
sar
(bad)
out
daa
sti
push
adc
in
pop
mul
pop
cmp
and
lods
addr16
jmp
cmp
cmps
sub
inc
jne
mov
(bad)
mov
das
outs
pop
jecxz
mov
push
mov
(bad)
inc
cli
pop
push
cmps
adc
repz
jae
adc
fst
push
(bad)
(bad)
(bad)
call
mov
mov
xor
pop
lss
cmc
popf
pop
fidiv
pop
setg
sti
jp
retf
dec
push
sub
cmp
sub
addr16
mov
leave
lods
jecxz
call
cmp
(bad)
cld
inc
call
in
stos
add
mov
mov
sbb
(bad)
(bad)
(bad)
jmp
jmp
mov
push
les
cmp
pop
into
inc
(bad)
(bad)
cld
ds
out
sbb
lahf
hlt
mov
(bad)
jmp
(bad)
mov
cmp
aam
mov
scas
dec
fisttp
in
ds
cdq
xchg
(bad)
push
jge
fcmove
retf
scas
scas
nop
retf
jae
cmp
fisttp
sbb
cli
(bad)
fistp
mov
les
sub
ror
popf
out
lock
mov
mov
jmp
xor
test
ds
in
ret
or
dec
cdq
mov
(bad)
hlt
pop
push
sub
lods
mov
(bad)
xchg
pandn
xlat
(bad)
(bad)
fistp
xchg
repz
cmp
loope
stc
mov
jae
ds
mov
in
(bad)
jg
stos
addr16
aam
cmp
pop
(bad)
push
pop
sub
retf
xchg
(bad)
jmp
(bad)
(bad)
(bad)
dec
jge
or
mov
(bad)
cld
lds
xchg
int
pop
out
jl
adc
(bad)
jmp
int
cmps
(bad)
std
out
add
call
imul
call
cld
das
retf
jle
mov
loope
jne
test
pop
iret
jecxz
sahf
addr16
aaa
mov
pop
shr
push
shl
mov
jp
mul
push
dec
aad
(bad)
(bad)
jge
pop
cmp
jne
xchg
imul
dec
out
iret
push
(bad)
inc
jmp
adc
push
sub
shr
cld
(bad)
fidivr
dec
out
pop
dec
int
ss
xchg
aam
fdiv
in
add
fcom
xchg
jo
leave
out
mov
mov
xor
test
scas
dec
dec
lock
loopne
inc
dec
shl
mov
inc
clc
call
int
stos
retf
and
outs
cld
mov
(bad)
(bad)
(bad)
dec
mov
mov
xor
test
mov
test
into
pushf
add
outs
mov
(bad)
(bad)
(bad)
inc
sbb
(bad)
push
into
mov
scas
aam
jmp
jns
xor
popf
pop
or
(bad)
(bad)
(bad)
dec
or
or
leave
mov
lock
out
push
jb
rcr
int3
cdq
fild
ret
ficomp
pusha
fist
sub
movs
es
adc
sti
aaa
(bad)
jmp
ret
jmp
jge
sar
imul
aas
sahf
iret
mov
jne
das
mov
(bad)
call
fcomp
comiss
data16
adc
xor
inc
xor
(bad)
fld
push
add
mov
out
push
push
jl
(bad)
(bad)
push
das
mov
pusha
test
mov
xor
jb
ins
fdiv
push
std
(bad)
inc
mov
aad
xchg
stos
xchg
xor
std
scas
mov
out
gs
cdq
shl
pop
jle
(bad)
(bad)
dec
mov
les
xor
rcl
dec
adc
pop
mov
push
jne
pop
pop
jb
xlat
(bad)
xlat
jmp
mov
arpl
jnp
mov
(bad)
jg
imul
sub
hlt
aas
movs
sbb
iret
pop
imul
cmp
call
dec
pop
pop
sub
in
call
retf
jbe
(bad)
(bad)
(bad)
call
jecxz
pushf
xchg
push
fldenv
lods
enter
shl
mov
pop
ret
xchg
jbe
or
call
nop
mov
in
mov
sbb
in
cmp
push
adc
test
outs
(bad)
(bad)
(bad)
push
call
inc
pop
pushf
out
pop
in
xchg
mov
adc
call
ficomp
dec
mov
bound
cmp
sub
ds
cmc
and
movs
sti
mov
pop
out
lds
(bad)
jmp
call
stos
scas
adc
int
fldcw
jnp
sub
jo
mov
cmps
dec
(bad)
int3
(bad)
call
loopne
mov
push
fnsave
push
ret
jns
retf
xchg
(bad)
jmp
mov
xor
sub
cmp
pop
fstp
adc
mov
ret
mov
jl
push
adc
inc
jle
(bad)
adc
loope
dec
(bad)
(bad)
fimul
jg
adc
mov
jl
pop
mov
mov
stos
fidiv
stos
mov
std
in
setbe
sub
inc
xchg
das
call
mov
mov
dec
out
call
mov
pop
jmp
xchg
jecxz
ja
adc
or
xchg
jg
inc
les
xor
out
jmp
cmp
je
nop
sub
xor
add
aad
inc
cmp
cmp
ja
sbb
and
push
and
push
or
(bad)
adc
scas
adc
sbb
sbb
(bad)
(bad)
dec
dec
dec
or
es
add
sbb
sub
rol
in
mov
call
fidiv
mov
mov
imul
into
xchg
add
daa
mov
pop
(bad)
jmp
neg
fiadd
cdq
sub
xor
jns
out
mov
ret
cmps
test
out
aad
jmp
fidivr
mov
mov
adc
jp
stc
xor
push
pop
and
push
add
lock
(bad)
test
dec
(bad)
popa
push
ror
mov
(bad)
call
jno
je
sub
inc
jb
loopne
xor
cmps
push
and
mov
ror
(bad)
(bad)
jmp
fiadd
xchg
or
jge
aas
hlt
leave
jg
dec
inc
add
push
into
push
pop
cmc
clc
(bad)
(bad)
(bad)
in
jmp
ss
inc
arpl
adc
leave
pop
out
out
push
out
int
cs
push
or
aad
pop
jmp
pop
sub
mov
fcmovnb
or
push
arpl
clc
(bad)
jmp
out
jbe
cmp
sbb
imul
push
fdivr
push
mov
sub
push
lods
(bad)
jmp
into
lods
sar
dec
jmp
xchg
repz
mov
pop
cmp
cli
mov
(bad)
mov
mov
aam
arpl
add
(bad)
pop
jbe
xchg
daa
lods
aad
stos
(bad)
(bad)
(bad)
(bad)
jp
(bad)
daa
mov
mov
ins
xchg
dec
push
push
push
push
jbe
stc
mov
sbb
mov
(bad)
(bad)
(bad)
push
(bad)
mov
aaa
aas
pusha
push
(bad)
fistp
call
jmp
ins
call
out
(bad)
(bad)
(bad)
call
xchg
fstp
retf
gs
in
xor
retf
lahf
out
sub
mov
(bad)
(bad)
(bad)
dec
int
mov
mov
mov
lds
cmp
push
daa
jne
sub
sahf
nop
call
jmp
add
xor
inc
and
add
fisttp
daa
rcl
gs
mov
pusha
(bad)
(bad)
(bad)
jmp
int3
jmp
nop
sahf
pop
xor
cmp
or
pop
mov
(bad)
cmp
(bad)
dec
jne
idiv
mov
jge
mov
mov
xchg
shl
adc
mov
cmp
add
inc
aad
xchg
or
in
daa
sub
pop
stos
fisttp
add
(bad)
(bad)
jmp
or
xchg
mov
pop
mov
ret
sub
xchg
mov
push
inc
repz
push
ja
jge
arpl
adc
repz
inc
jmp
arpl
pop
mov
arpl
(bad)
mov
popf
jae
in
push
inc
add
cwde
inc
cwde
out
ins
mov
addr16
out
push
(bad)
(bad)
(bad)
(bad)
ficom
and
dec
mov
sahf
sbb
xchg
push
loopne
loop
xor
mov
adc
test
mov
retf
jae
(bad)
stc
push
dec
add
gs
sbb
cdq
xor
(bad)
(bad)
inc
pop
stc
jmp
or
mov
aad
test
jne
mov
movs
mov
push
je
jns
or
mov
pushf
in
xchg
iret
gs
jb
std
jbe
gs
mov
(bad)
(bad)
(bad)
call
add
call
fcom
dec
dec
dec
mov
add
out
cs
mov
or
(bad)
(bad)
jmp
call
cmps
test
test
in
idiv
mov
adc
sti
fisttp
iret
pop
stc
mov
iret
xchg
es
push
mov
ja
push
imul
in
stos
stc
ins
retf
fld
(bad)
(bad)
jmp
inc
mov
xor
sbb
cwde
pop
push
aaa
sub
out
movs
cli
sbb
or
(bad)
(bad)
dec
ins
jecxz
pop
imul
pop
jle
movs
mov
arpl
out
dec
mov
pop
movs
int3
daa
sub
fdivrp
(bad)
(bad)
push
scas
test
jne
mov
sub
test
stc
std
xchg
hlt
out
fimul
push
fwait
pusha
(bad)
(bad)
jmp
ins
xor
pop
ror
dec
jle
pop
outs
add
leave
(bad)
(bad)
(bad)
(bad)
jp
movs
pop
jb
out
xchg
(bad)
mov
push
stos
dec
rcl
xor
enter
jmp
xchg
test
inc
or
xchg
fldenv
and
ins
pop
stc
mov
pop
test
(bad)
push
imul
and
js
pop
jne
outs
dec
and
or
mov
cld
(bad)
inc
ds
enter
repnz
mov
pop
mov
out
in
cmp
add
or
in
dec
push
or
scas
mov
push
test
mov
aaa
adc
retf
push
sbb
inc
xor
sub
jmp
inc
and
pop
dec
lea
sub
fadd
xchg
lahf
mov
loope
(bad)
call
imul
push
inc
sub
cmp
cmps
ret
mov
cli
nop
(bad)
(bad)
(bad)
mov
or
mov
std
or
add
adc
push
xlat
push
mov
aam
jne
(bad)
(bad)
inc
stos
leave
jbe
ja
ins
ret
push
jno
pop
or
pushf
mov
mov
test
(bad)
(bad)
push
push
out
stos
loope
push
sbb
mov
and
call
xchg
xor
and
ret
hlt
dec
popa
add
jbe
or
(bad)
jp
xchg
push
(bad)
(bad)
(bad)
inc
rol
cdq
inc
in
push
shl
sbb
fisubr
dec
imul
mov
mov
int
je
add
cs
jmp
mov
mov
mov
call
sahf
leave
add
aam
fild
pop
or
fbstp
dec
fdivp
packssdw
retf
idiv
dec
(bad)
(bad)
(bad)
inc
xor
jmp
sub
test
std
fidiv
in
mov
pop
and
(bad)
cld
ss
jne
(bad)
pop
xor
ret
je
mov
cmp
mov
xor
(bad)
(bad)
(bad)
(bad)
call
jne
(bad)
aad
shl
fidivr
mov
jmp
and
jmp
(bad)
mov
push
mov
aam
dec
loopne
lods
stos
es
adc
mov
repnz
(bad)
(bad)
jmp
add
dec
dec
sub
cld
push
xor
test
xor
lods
outs
push
push
(bad)
in
ss
push
pop
cmc
add
movs
or
mov
add
fnsave
(bad)
inc
inc
cmp
out
movs
xchg
cs
push
mov
jmp
stc
jne
pop
push
mov
leave
std
test
add
mov
xchg
lahf
mov
cmps
xor
into
retf
xor
dec
(bad)
(bad)
jmp
cdq
dec
mov
xor
xor
movs
xor
cmp
(bad)
call
shr
sub
mov
pop
std
jo
sub
and
xor
and
lods
or
call
dec
sub
sahf
mov
mov
push
stos
xor
sbb
(bad)
jmp
addr16
daa
jae
popf
push
mov
cmp
addr16
dec
lahf
mov
mov
inc
sbb
push
jns
or
sahf
mov
mov
repnz
mov
cld
(bad)
(bad)
(bad)
mov
nop
and
scas
mov
inc
lea
and
sbb
mov
scas
(bad)
(bad)
inc
nop
aam
call
mov
adc
or
pop
sbb
fld
jbe
sub
cdq
jmp
not
adc
pop
scas
push
or
mov
or
(bad)
(bad)
(bad)
(bad)
js
pop
lock
mov
push
adc
pushf
jp
add
xchg
and
xchg
add
(bad)
(bad)
(bad)
dec
fidivr
adc
and
jmp
xchg
push
push
pop
sbb
les
(bad)
std
iret
into
or
scas
out
fisttp
sbb
into
sti
test
das
rcl
pop
aaa
ss
cwde
mov
(bad)
mov
sub
(bad)
(bad)
(bad)
push
std
mov
ins
test
test
test
and
xor
data16
jmp
(bad)
mov
retf
add
cmp
sbb
or
call
sub
jo
cmp
xor
and
sub
dec
xor
(bad)
(bad)
(bad)
mov
ds
iret
jge
mov
and
sbb
mov
adc
rcl
(bad)
(bad)
(bad)
mov
stos
movs
or
mov
add
mov
(bad)
(bad)
mov
sbb
fs
add
popa
pop
(bad)
pop
add
add
out
movs
sahf
cmp
and
sub
in
cs
shl
(bad)
(bad)
jmp
cmp
sub
sub
(bad)
xchg
add
adc
jge
xlat
jbe
adc
sar
(bad)
(bad)
call
dec
imul
mov
inc
lods
movs
adc
xor
push
ja
gs
mov
(bad)
(bad)
(bad)
push
inc
addr16
xor
mov
sbb
je
adc
ror
push
sbb
inc
xchg
add
mov
xor
sbb
(bad)
(bad)
call
dec
mov
out
add
rcl
int
fs
push
xor
xor
scas
movs
(bad)
out
add
cmp
das
test
(bad)
jmp
jmp
ss
ins
dec
fcmovu
jle
push
popf
inc
sahf
mov
pop
push
rcr
xchg
pop
mov
daa
pop
push
aam
sub
push
(bad)
(bad)
(bad)
call
pop
and
pop
scas
mov
es
call
inc
scas
dec
sub
test
(bad)
(bad)
(bad)
dec
push
lea
nop
mov
mov
xor
sbb
inc
xchg
add
(bad)
(bad)
(bad)
jns
pop
cdq
cmp
jle
xor
jbe
jne
ds
and
dec
and
sbb
sar
(bad)
(bad)
jmp
pop
fsubr
jg
pushf
popf
or
loopne
lods
movs
cmps
mov
aam
cli
(bad)
mov
cmps
dec
test
sbb
or
and
jnp
sbb
xchg
pop
sub
jmp
call
inc
sbb
xchg
cmps
cmp
jmp
loop
adc
mov
repnz
call
out
(bad)
mov
sbb
sti
sbb
mov
cmp
sub
test
cmp
push
push
push
outs
int3
je
dec
cs
push
cli
xchg
fs
fild
movs
push
xor
fst
inc
loop
gs
mov
mov
push
mov
adc
int3
loope
xchg
(bad)
out
push
cld
xchg
(bad)
push
mov
jb
dec
or
mov
(bad)
(bad)
(bad)
dec
sub
(bad)
mov
mov
jmp
sbb
sbb
add
jl
js
dec
inc
sbb
pop
xor
adc
(bad)
(bad)
inc
imul
mov
xchg
(bad)
in
movs
xchg
or
mov
ds
iret
jp
(bad)
(bad)
fbld
retf
push
movs
sub
pushf
retf
test
rcl
out
hlt
mov
loop
fsubr
pop
(bad)
fild
rcl
sahf
(bad)
mov
xlat
nop
cwde
jmp
lods
push
push
pop
xor
(bad)
inc
scas
call
mov
or
cmp
bound
jmp
xchg
(bad)
jmp
repnz
out
(bad)
(bad)
(bad)
call
data16
xchg
mov
je
and
gs
popf
fadd
mov
ror
jae
(bad)
(bad)
mov
mov
fwait
test
mov
sbb
lahf
jbe
sub
(bad)
(bad)
push
or
mov
in
and
add
adc
scas
push
dec
ins
or
gs
(bad)
or
rol
dec
mov
in
push
jnp
and
(bad)
es
adc
add
and
sbb
outs
ds
(bad)
(bad)
(bad)
call
lock
out
add
scas
push
jnp
cmp
ror
inc
iret
mov
or
or
jnp
(bad)
(bad)
call
movs
jns
sahf
fs
jge
cld
sub
adc
dec
(bad)
lock
(bad)
pop
scas
fbld
(bad)
(bad)
(bad)
jg
mov
and
push
pop
dec
sbb
outs
ret
aaa
mov
leave
jo
cmps
mov
ds
cmps
aam
(bad)
push
push
fisub
adc
mov
or
mov
(bad)
in
pop
das
jl
(bad)
std
sbb
fcomi
(bad)
jmp
std
jns
jmp
or
out
outs
xchg
mov
sub
dec
aaa
xor
pop
cld
scas
cli
(bad)
jle
movs
icebp
mov
repz
jns
push
xor
stos
push
mov
(bad)
inc
in
inc
sub
out
pop
inc
add
bound
(bad)
(bad)
(bad)
push
(bad)
sbb
fnstenv
rcl
and
call
mov
(bad)
dec
xchg
gs
(bad)
clc
add
or
je
sbb
test
adc
pop
retf
idiv
(bad)
jg
mov
(bad)
dec
sbb
pop
shl
cmp
gs
retf
add
(bad)
in
or
shl
fwait
adc
xchg
imul
xchg
xor
(bad)
(bad)
(bad)
jmp
jmp
push
ret
add
(bad)
in
in
jns
mov
pop
loopne
shl
rol
mov
loope
fwait
mov
lahf
mov
sub
clc
(bad)
dec
fucomp
push
imul
xchg
mov
lods
mov
(bad)
(bad)
jmp
int
scas
mov
stos
out
push
add
ret
scas
jne
fsub
sar
(bad)
(bad)
call
lahf
inc
(bad)
hlt
ret
div
das
mov
xchg
jne
call
jns
jg
(bad)
(bad)
(bad)
jmp
add
test
dec
ins
(bad)
mov
mov
adc
rol
xchg
mov
(bad)
sub
(bad)
(bad)
dec
cmp
je
or
sbb
push
adc
je
jmp
xchg
sub
pop
mov
xor
or
push
(bad)
jmp
ins
push
ja
inc
dec
push
mov
mov
aam
dec
mov
retf
aas
(bad)
(bad)
call
retf
and
jb
sub
or
cwde
out
jnp
push
sbb
(bad)
or
fxch
xchg
adc
sub
pop
loopne
shl
std
iret
enter
mov
cmps
jmp
xor
add
loope
cld
rcr
mov
(bad)
mov
jg
(bad)
(bad)
jnp
sub
jns
dec
and
(bad)
fmul
clc
test
in
xchg
(bad)
std
scas
int
pusha
call
sub
fwait
cmps
rcl
movs
and
pop
inc
fcmovnb
out
clc
(bad)
jmp
test
or
or
retf
cld
adc
(bad)
xor
(bad)
jmp
pop
ret
jl
mov
dec
idiv
out
cld
retf
jnp
cld
addr16
cmps
jle
sub
xchg
(bad)
(bad)
(bad)
(bad)
mov
pop
fwait
jp
je
and
and
push
cld
or
mov
sbb
and
(bad)
push
(bad)
(bad)
hlt
add
push
lock
inc
sbb
call
push
jge
jmp
mov
sub
lds
movs
mov
pop
cmp
(bad)
mov
div
adc
outs
adc
(bad)
(bad)
jmp
jmp
cs
cli
icebp
add
std
bound
rol
(bad)
(bad)
out
outs
mov
jae
mov
stos
stc
jno
dec
call
(bad)
(bad)
(bad)
jg
sti
(bad)
xchg
cmp
jmp
addr16
jg
je
mov
xchg
(bad)
(bad)
mov
sbb
add
jnp
mov
out
(bad)
mov
push
js
(bad)
mov
cmp
arpl
das
clc
call
fdiv
scas
push
lods
pop
xor
or
adc
lahf
pop
push
clc
jmp
sti
sahf
std
pop
(bad)
mov
jnp
ss
movs
cmp
(bad)
(bad)
jmp
jmp
adc
push
or
fimul
push
fiadd
xchg
xchg
cmp
inc
sub
push
push
xchg
popa
mov
ficomp
fld
scas
and
(bad)
(bad)
(bad)
(bad)
jnp
jmp
inc
sar
jle
jl
sbb
outs
and
(bad)
(bad)
push
cmps
push
dec
in
sub
ret
call
into
icebp
dec
dec
push
push
or
scas
(bad)
(bad)
call
and
mov
inc
dec
lahf
adc
outs
leave
xchg
mov
nop
(bad)
(bad)
jg
mov
sub
mov
sahf
dec
mov
aaa
mov
dec
cmp
xchg
std
data16
and
(bad)
(bad)
(bad)
jmp
cmp
jp
hlt
mov
xor
sti
sbb
cwde
aaa
sbb
mov
cli
mov
sub
pop
add
lea
mov
std
(bad)
(bad)
jle
cwde
ret
mov
and
dec
sub
(bad)
(bad)
cli
retf
cmc
jae
scas
sbb
pushf
int3
cwde
pushf
xor
jno
fild
repnz
cmps
or
jmp
fucomip
jo
push
or
fdiv
cmps
mov
cmp
inc
fcom
dec
push
mov
push
mov
dec
mov
dec
add
adc
push
mov
imul
mov
test
push
les
and
aaa
aam
pop
(bad)
mov
rol
idiv
mov
xor
xchg
xor
pop
stos
ss
(bad)
jmp
inc
xchg
call
stos
mov
cmp
(bad)
(bad)
stc
or
int3
out
(bad)
(bad)
push
cli
sbb
cmps
scas
(bad)
call
xor
(bad)
(bad)
fidivr
cs
inc
mov
push
shl
fild
mov
loop
ds
(bad)
(bad)
inc
jb
push
iret
inc
pushf
adc
mov
mov
cmp
pusha
daa
test
adc
(bad)
(bad)
(bad)
mov
mov
inc
lods
repz
dec
mov
adc
mov
mov
ds
(bad)
(bad)
(bad)
jmp
or
rol
jle
adc
add
scas
lds
repz
add
(bad)
inc
push
push
fld
(bad)
call
ins
movs
fisubr
mov
call
jmp
push
sub
fs
mov
mov
inc
add
push
ins
push
xlat
out
push
sti
(bad)
(bad)
call
cmp
mov
lds
iret
loopne
cld
sbb
scas
xchg
or
mov
mov
inc
cmc
and
aaa
cld
jg
ja
jle
xchg
movs
pop
das
sar
cmp
push
dec
push
dec
or
(bad)
(bad)
dec
jle
out
xor
ds
inc
cmc
xchg
pop
popa
daa
xchg
sub
mov
inc
rol
cmc
in
data16
jns
pop
mov
adc
inc
in
es
xor
(bad)
(bad)
push
rol
push
in
mov
ret
aas
lods
mov
and
jecxz
push
(bad)
(bad)
(bad)
mov
xchg
xlat
adc
daa
dec
pop
call
sub
pop
loopne
scas
jp
mov
(bad)
(bad)
(bad)
call
jo
cmp
push
scas
movs
dec
lahf
add
js
push
xchg
sbb
dec
pop
ins
test
call
movs
repnz
pop
inc
jns
cmp
push
mov
cmps
popf
jbe
xchg
mov
mov
cdq
pushf
mov
(bad)
(bad)
(bad)
(bad)
jl
(bad)
dec
pop
inc
xor
mov
lods
xor
jbe
imul
dec
shl
sub
(bad)
jmp
push
dec
fistp
sbb
lea
(bad)
sbb
arpl
scas
in
jno
fcos
(bad)
jmp
scas
hlt
mov
cmp
jg
push
xchg
int3
mov
jl
js
sti
dec
sub
clc
call
xor
sbb
movs
push
lahf
fadd
xchg
in
mov
mov
(bad)
(bad)
jmp
mov
jecxz
or
fst
fstp
shr
or
in
sub
(bad)
sbb
(bad)
(bad)
(bad)
jmp
mov
(bad)
push
push
and
jb
mov
imul
in
sbb
sbb
nop
(bad)
(bad)
(bad)
jmp
pop
cdq
icebp
jmp
or
push
aam
stos
mov
out
xchg
jb
ror
pusha
cli
pop
lock
adc
push
jns
fwait
sar
inc
arpl
push
xor
(bad)
jmp
cmp
add
mov
sub
pusha
pop
adc
mov
(bad)
(bad)
(bad)
call
and
imul
retf
push
mov
add
adc
sub
xor
inc
push
call
and
add
mov
sahf
sti
test
inc
inc
dec
shr
or
adc
(bad)
jmp
xchg
ret
mov
jg
mov
int3
and
and
neg
daa
dec
push
(bad)
jmp
fsubr
and
aaa
dec
mov
pop
mov
fisubr
xor
int3
(bad)
aaa
outs
rcr
jb
lods
je
jae
test
call
inc
push
cmp
xchg
out
cmp
cmp
mov
stos
fsubr
mov
addr16
(bad)
call
ds
xor
mov
xchg
sub
xlat
lds
loope
fdiv
(bad)
jmp
in
fcmovu
and
loopne
neg
int3
in
mov
ja
mov
(bad)
mov
jmp
dec
xchg
daa
push
scas
sbb
push
and
jae
cmc
jns
mov
inc
ror
or
push
(bad)
dec
xor
dec
mov
sar
mov
push
push
(bad)
xor
jne
xchg
add
or
pop
xchg
or
sbb
imul
dec
repnz
(bad)
(bad)
(bad)
dec
jb
jns
rol
lahf
loope
shr
in
into
das
push
into
ins
out
(bad)
jns
or
jnp
ja
push
mov
xchg
in
outs
mov
(bad)
(bad)
(bad)
(bad)
fiadd
pop
jne
push
push
cs
add
mov
xchg
ins
pop
cmp
jl
xor
push
fucomi
inc
push
mov
jae
je
push
(bad)
call
dec
stos
dec
out
cmp
xchg
loopne
mov
sub
stos
inc
mov
inc
xchg
fist
imul
loope
adc
mov
pop
push
push
jge
jbe
aaa
cld
(bad)
(bad)
(bad)
(bad)
fldenv
mov
cs
and
mov
(bad)
call
push
pop
test
js
adc
mov
jmp
es
xchg
in
adc
jmp
leave
dec
xchg
push
fnstsw
xor
shl
(bad)
(bad)
(bad)
call
out
pushf
call
push
cli
or
mov
xchg
(bad)
out
inc
xchg
jg
(bad)
sub
lock
mov
lods
shl
das
pop
add
cmp
fbstp
outs
ja
stos
xor
push
xor
xchg
imul
(bad)
(bad)
dec
cli
xor
cmp
inc
add
hlt
inc
les
push
in
push
cvtdq2ps
imul
inc
retf
(bad)
inc
repz
stos
cmc
rcl
scas
or
push
push
pop
fldenv
loopne
push
sub
cdq
xor
mov
call
xchg
and
outs
mov
popa
lea
pop
cmc
adc
(bad)
(bad)
jmp
push
pop
jae
pop
fsub
or
mov
fcmovbe
gs
aaa
ret
add
fcomip
push
xor
sahf
dec
in
in
jmp
pop
arpl
mov
and
adc
xor
and
xor
adc
mov
(bad)
sbb
xor
inc
shr
daa
(bad)
js
ins
mov
icebp
lea
dec
xchg
add
adc
(bad)
sub
sbb
(bad)
mov
test
jg
and
jg
ins
scas
pop
xor
gs
xor
sub
in
push
and
push
pop
fisub
push
ret
mov
jmp
fimul
dec
sbb
jmp
es
mov
cmp
call
adc
nop
jmp
inc
and
fwait
into
lahf
jle
loope
add
jmp
jecxz
popf
fmul
ins
test
stos
jg
cli
xchg
(bad)
(bad)
(bad)
(bad)
mov
push
jmp
mov
cwde
and
call
aaa
(bad)
sub
(bad)
(bad)
(bad)
dec
xor
call
push
mov
and
dec
stc
adc
jnp
push
xchg
mov
jg
inc
pop
in
popa
popf
cmp
jmp
push
popf
icebp
add
jb
adc
ret
inc
es
(bad)
(bad)
push
ins
mov
push
dec
push
sub
mov
dec
fwait
scas
test
fs
mov
jg
addr16
jnp
mov
mov
mov
loope
(bad)
movs
jge
out
cld
cwde
(bad)
(bad)
(bad)
jmp
sub
pop
xchg
dec
cmc
(bad)
int
add
popa
call
adc
pop
mov
mov
cmc
mov
jmp
push
cli
adc
cmps
xor
mov
jg
or
and
add
outs
icebp
and
dec
(bad)
ins
fisttp
or
push
(bad)
push
dec
sub
xchg
add
sbb
adc
(bad)
(bad)
dec
sti
movs
mov
xchg
dec
cdq
push
xchg
sub
dec
mov
test
cmp
(bad)
(bad)
cmp
aam
xor
mov
cmp
mov
shr
mul
(bad)
jg
push
cmp
jg
sbb
(bad)
outs
in
test
imul
(bad)
call
sub
jno
aas
mov
pop
xchg
mov
in
imul
(bad)
lds
push
mov
out
push
jmp
xor
fs
adc
ins
gs
and
push
sar
mov
fstp
xchg
mov
mov
rcr
(bad)
jmp
sbb
out
scas
fdivr
je
(bad)
leave
and
addr16
lahf
in
dec
sti
or
stc
scas
cli
pop
cmc
fucompp
or
pop
inc
int3
jge
push
shr
and
or
pop
lahf
jmp
push
retf
ins
xchg
div
push
je
mov
int
sahf
addr16
jge
dec
aam
(bad)
(bad)
(bad)
cld
leave
std
out
or
imul
push
inc
(bad)
sahf
fdivr
(bad)
sbb
push
inc
and
aaa
push
and
xchg
jbe
mov
popf
(bad)
(bad)
mov
pusha
jbe
ins
cmp
pop
dec
and
sbb
(bad)
call
in
outs
test
and
push
aad
popa
dec
pop
(bad)
scas
cld
jo
(bad)
jmp
dec
das
ins
dec
sbb
bound
dec
cmp
ins
and
cmp
mov
mov
(bad)
(bad)
(bad)
dec
scas
jecxz
sbb
push
sub
out
jnp
stc
(bad)
sbb
out
sub
dec
jl
adc
mov
add
add
ret
cwde
pop
shld
mov
xchg
das
mov
(bad)
mov
push
pop
outs
les
lods
cdq
leave
sbb
rcl
push
mov
pop
mov
pusha
(bad)
(bad)
(bad)
(bad)
fild
dec
adc
dec
loope
(bad)
cmp
repnz
and
mov
(bad)
call
neg
inc
dec
mov
mov
iret
jp
jle
pop
(bad)
popa
stos
aad
ins
pop
push
(bad)
push
cld
dec
fbld
cmp
dec
inc
mov
pop
mov
xlat
(bad)
imul
shl
(bad)
(bad)
(bad)
ficom
out
or
push
cmp
shl
mov
cdq
cmps
lods
scas
mov
add
jmp
call
mov
js
sbb
or
mov
(bad)
jmp
sub
ins
dec
sbb
rol
es
gs
dec
int
adc
cmps
mov
jp
or
ins
xchg
xor
sbb
add
xchg
jl
jns
sub
xor
rcl
ja
xchg
fiadd
iret
cmc
sub
cmp
cmp
xor
mov
add
push
fmul
lds
sbb
mov
push
(bad)
(bad)
call
mov
pusha
scas
ds
(bad)
shl
(bad)
aas
out
in
jb
sub
in
test
(bad)
(bad)
(bad)
call
push
scas
jge
loopne
(bad)
in
mov
call
xchg
mov
jmp
shl
xor
xchg
mov
xchg
mov
loopne
sbb
sbb
test
movs
pop
xchg
cmp
xchg
add
aad
and
popa
outs
dec
imul
test
inc
ds
and
movs
cmp
mov
test
shl
loopne
lods
stc
aad
xor
stos
fcomip
(bad)
jmp
adc
adc
pop
inc
(bad)
aad
mov
push
xor
call
cli
(bad)
ds
cmp
mov
dec
mov
and
add
mov
sub
inc
cwde
mov
ins
ds
cmps
add
(bad)
(bad)
push
add
push
or
cmps
pop
push
sub
push
and
xor
lock
(bad)
(bad)
call
fimul
cmp
or
test
inc
aad
(bad)
fiadd
es
fstp
(bad)
(bad)
(bad)
call
test
mov
mov
pop
lahf
repnz
pop
push
sub
leave
mov
ds
div
cli
ror
(bad)
(bad)
(bad)
(bad)
jmp
xchg
pop
sub
push
ret
aad
repz
jmp
or
xchg
pop
aas
sahf
(bad)
(bad)
inc
fdivr
push
and
mov
outs
push
cmps
cmc
inc
jecxz
pushf
(bad)
(bad)
(bad)
inc
bound
fwait
bound
jno
cdq
ds
mov
std
cmp
xor
rcl
pop
mov
mov
jno
(bad)
(bad)
(bad)
inc
dec
pop
pop
xchg
mov
mov
cmps
popf
icebp
mov
sti
inc
add
xchg
inc
push
sti
sti
cmp
inc
fadd
in
pusha
push
push
(bad)
sub
(bad)
inc
adc
xor
addr16
xor
in
jmp
inc
and
(bad)
(bad)
(bad)
cmp
sbb
sub
ret
pop
cli
pop
inc
cmc
and
or
(bad)
(bad)
cli
mov
into
add
not
(bad)
icebp
jmp
push
sbb
xchg
xor
pop
(bad)
(bad)
(bad)
inc
xor
lods
movs
add
dec
int3
ds
jbe
ss
jnp
xchg
(bad)
(bad)
mov
sub
xor
xchg
jae
outs
and
inc
loop
(bad)
lock
sub
cmp
call
retf
add
cmp
(bad)
aad
jns
repnz
and
add
es
pushf
in
ins
jecxz
mov
repz
(bad)
(bad)
(bad)
jmp
push
mov
shr
inc
mov
std
mov
sbb
scas
mov
mov
(bad)
(bad)
(bad)
dec
jae
xchg
cli
mov
xor
mov
pop
mov
shl
push
add
pop
pop
cmp
inc
or
std
fcom
xchg
out
into
jb
dec
and
dec
add
jo
jns
and
cmp
(bad)
sti
stos
and
ss
hlt
je
sub
(bad)
(bad)
inc
inc
movs
xor
adc
nop
sub
xchg
ret
cmp
cli
arpl
(bad)
(bad)
inc
inc
data16
mov
nop
mov
adc
mov
add
stos
je
mov
push
icebp
(bad)
mov
jo
push
pop
hlt
(bad)
dec
call
sbb
lds
mov
test
mov
mov
(bad)
(bad)
(bad)
inc
xchg
bound
inc
push
stos
test
out
loopne
loopne
add
adc
push
xchg
pop
push
add
push
jno
dec
xchg
push
push
inc
aaa
xlat
ins
inc
sbb
(bad)
(bad)
dec
fwait
cmps
mov
adc
cdq
xchg
lock
or
inc
(bad)
sar
outs
inc
(bad)
(bad)
(bad)
call
dec
std
loop
pushf
adc
sub
mov
ficomp
daa
sub
cmp
jmp
or
iret
inc
mov
xchg
add
xor
push
(bad)
(bad)
(bad)
cmp
cs
leave
das
(bad)
xchg
(bad)
std
dec
mov
mov
add
(bad)
inc
test
(bad)
push
sbb
and
(bad)
(bad)
call
dec
das
stos
es
cmps
(bad)
or
pop
adc
(bad)
add
adc
dec
in
cli
(bad)
push
ficom
mov
inc
mov
jno
mov
out
loop
mov
dec
add
xor
mov
push
nop
ret
jmp
imul
call
jl
mov
dec
dec
ret
fbld
imul
mov
iret
pop
xchg
sbb
(bad)
fcomip
imul
jo
jmp
in
cmp
stos
popf
fnstenv
add
cmp
(bad)
jmp
rcr
cmp
loope
rcr
add
inc
cmp
loop
and
and
rol
mov
jo
cmp
fdivrp
(bad)
(bad)
jmp
fmul
arpl
sbb
push
ja
inc
aaa
es
jae
or
ss
stos
(bad)
jmp
xor
sub
and
cs
sbb
mov
pop
mov
lods
(bad)
(bad)
(bad)
(bad)
mov
cld
fisttp
popf
aad
or
inc
xchg
ins
and
jg
add
(bad)
(bad)
push
daa
jb
and
push
jae
loop
imul
cld
inc
mov
clc
daa
jle
cmps
sahf
push
adc
pop
pushf
pop
dec
cld
ds
cmp
mov
and
or
(bad)
int
(bad)
jg
dec
xchg
(bad)
mov
fs
dec
cmps
es
fidiv
xor
rcl
xor
das
clc
mov
pop
sahf
xor
pop
sub
fcomp
(bad)
mov
cli
jno
mov
clc
neg
jmp
ss
ds
int3
js
(bad)
(bad)
dec
jp
push
inc
mov
push
xchg
pop
xor
mov
inc
fstp
and
(bad)
inc
hlt
into
in
mov
test
gs
mov
pop
push
cmps
pop
mov
sub
cld
test
(bad)
(bad)
(bad)
jge
(bad)
xor
sub
and
mov
lods
vcvtdq2ps
ffree
pop
dec
cli
(bad)
rol
int
jne
lea
cwde
fisttp
repnz
pusha
(bad)
(bad)
(bad)
inc
div
ins
xchg
in
call
inc
mov
jae
outs
fimul
scas
test
(bad)
call
ret
cli
cmp
sub
ds
addr16
and
loope
idiv
push
(bad)
(bad)
call
sub
outs
add
loope
retf
(bad)
adc
(bad)
jmp
outs
mov
push
clc
jmp
(bad)
jbe
and
mov
dec
sbb
fbld
jmp
xchg
gs
call
mov
fild
(bad)
(bad)
(bad)
call
cmp
pop
retf
sub
push
jbe
push
rcr
or
or
test
inc
ds
out
(bad)
mov
push
mov
shl
mov
js
les
(bad)
(bad)
call
sub
test
dec
shr
clc
adc
sbb
lods
jge
shl
addr16
push
stos
xor
lds
or
ja
sub
xchg
(bad)
call
popf
test
shl
inc
fadd
scas
int3
movs
ja
xor
jo
pop
repnz
add
(bad)
(bad)
(bad)
push
adc
ret
fcom
(bad)
adc
stos
(bad)
icebp
mov
call
(bad)
(bad)
(bad)
call
or
sub
inc
xor
ds
pop
jae
mov
bound
inc
fld
fs
(bad)
(bad)
(bad)
dec
xchg
cwde
mov
ret
jmp
fcom
jmp
inc
fsub
xchg
cmp
cli
mov
dec
jb
repz
pop
and
lods
jne
cld
into
pop
jp
out
in
(bad)
jmp
enter
dec
jo
icebp
(bad)
cmc
push
stos
pop
push
les
or
mov
in
popf
pop
dec
mov
addr16
int
xor
jge
jle
sub
jmp
lfs
ds
dec
sub
scas
cmc
push
(bad)
es
ins
sub
in
(bad)
(bad)
cmp
clc
xor
imul
xor
add
xor
dec
inc
test
(bad)
(bad)
jmp
iret
pushf
xor
cmp
js
mov
int3
repz
mov
cmc
(bad)
call
push
movs
mov
add
out
cmp
mov
and
jns
inc
loop
scas
inc
fistp
(bad)
sbb
(bad)
mov
push
sbb
push
aad
xchg
mov
js
push
ds
out
jle
cs
mov
pop
test
fstp
pop
(bad)
(bad)
(bad)
(bad)
cmp
or
xchg
mov
mov
jp
xor
jmp
mov
pop
sti
cmp
(bad)
push
test
psubusb
cwde
dec
cmp
pop
sub
sti
(bad)
mov
push
dec
sub
bswap
dec
sbb
mov
imul
(bad)
call
inc
xor
xor
(bad)
push
dec
stc
imul
jae
mov
dec
mov
pop
inc
pop
jle
fadd
in
mov
pop
in
inc
mov
and
das
fdiv
ror
mov
(bad)
(bad)
call
jp
std
sbb
push
ror
sbb
sar
xchg
xor
push
sbb
jg
loopne
push
xor
inc
add
jno
std
inc
adc
std
and
retf
test
(bad)
call
sti
push
sbb
ins
inc
push
ret
nop
mov
(bad)
(bad)
jg
out
xchg
repnz
dec
pop
cdq
and
inc
inc
cmp
inc
lock
fimul
jae
jmp
jne
and
aad
cld
pop
mov
stos
cs
xchg
test
xchg
inc
xor
shl
sub
call
add
inc
push
pusha
push
imul
(bad)
cmp
xchg
loopne
lds
jae
aad
out
je
(bad)
xchg
cmp
inc
mov
je
cmp
xchg
clc
(bad)
(bad)
call
stos
push
or
scas
sahf
addr16
pop
jecxz
es
push
sbb
adc
(bad)
(bad)
(bad)
dec
inc
pop
mov
inc
cmp
or
mov
mov
sar
gs
lods
call
cld
(bad)
jl
cld
loopne
mov
popa
dec
sbb
lahf
push
clc
mov
cmp
dec
and
sbb
pop
cmc
dec
jb
jb
mov
call
mov
(bad)
(bad)
(bad)
call
adc
fxam
cli
aaa
fs
loop
out
cs
out
in
(bad)
(bad)
(bad)
jmp
pop
push
sub
inc
enter
div
pop
js
jecxz
xor
ins
mov
nop
in
icebp
(bad)
(bad)
inc
fwait
inc
inc
pop
bound
inc
int
sbb
les
mov
sub
(bad)
jb
adc
cmp
or
call
push
sub
imul
call
(bad)
(bad)
mov
or
mov
mov
fisub
dec
test
cmp
(bad)
(bad)
(bad)
mov
cmp
xor
or
cmp
adc
ja
add
fst
(bad)
(bad)
(bad)
jmp
ja
or
and
popf
adc
bound
repnz
and
cmp
push
mov
sahf
ja
pop
hlt
and
mov
into
adc
ins
inc
xchg
pop
fs
add
inc
sbb
das
sar
push
push
int3
pop
pop
adc
in
fs
mov
mov
jp
pop
sbb
(bad)
frstor
cmp
mov
sbb
xchg
cmp
(bad)
rcl
fwait
jp
(bad)
(bad)
(bad)
(bad)
jg
call
test
test
neg
mov
repz
imul
xchg
sti
mov
shr
dec
dec
repz
jmp
mov
dec
lods
out
repnz
dec
lock
lock
pop
cli
mov
mov
std
das
das
mov
(bad)
push
ins
int
cmp
outs
cmp
xlat
cmp
lds
and
icebp
mov
dec
nop
or
sub
sbb
lods
or
(bad)
mov
jg
rol
mov
in
loopne
clc
ins
pop
jmp
call
fistp
int3
(bad)
call
retf
es
adc
adc
(bad)
(bad)
(bad)
in
mov
retf
pop
stos
mov
jne
sub
retf
dec
inc
push
sbb
or
ret
(bad)
sub
int3
into
xchg
sub
(bad)
(bad)
jmp
sti
sub
aas
ja
test
sub
mov
fild
push
lds
jp
xor
(bad)
(bad)
(bad)
mov
or
loopne
xchg
jecxz
es
bound
mov
mov
push
mov
sar
dec
push
(bad)
clc
(bad)
adc
push
imul
sbb
pop
lock
push
fist
xor
mov
xchg
call
adc
push
(bad)
mov
xor
and
dec
test
outs
xor
push
aad
stos
sub
sbb
(bad)
(bad)
(bad)
jmp
add
and
mov
dec
jo
das
push
scas
ins
or
test
dec
loop
inc
aaa
jle
add
cld
(bad)
(bad)
fcom
scas
or
cmp
sub
sub
pop
dec
mov
sub
add
add
jno
(bad)
(bad)
inc
into
jl
dec
xchg
jb
icebp
sbb
cmp
jg
adc
enter
out
std
(bad)
(bad)
(bad)
push
pop
push
adc
cmp
cmp
inc
jno
pop
adc
sub
adc
call
mov
movs
cli
jmp
lahf
test
outs
call
outs
(bad)
push
cmps
jecxz
(bad)
out
push
stos
bound
inc
inc
fisubr
mov
ins
add
cld
(bad)
call
and
cwde
int
cmps
arpl
(bad)
and
and
jge
jg
hlt
push
stc
cmp
pusha
or
pop
hlt
mov
pop
jp
or
(bad)
(bad)
(bad)
inc
inc
cmps
and
and
(bad)
sub
push
retf
fisubr
mov
(bad)
mov
pop
mov
xor
adc
sbb
mov
(bad)
(bad)
fbld
push
cmps
fdiv
cmp
in
inc
je
sbb
pop
out
clc
(bad)
jmp
sbb
push
push
ins
retf
sub
or
xchg
add
(bad)
(bad)
jmp
ror
retf
daa
retf
push
mov
fucom
add
(bad)
popf
jns
in
sbb
push
adc
mov
mov
sti
xor
xor
jns
xor
jmp
mov
(bad)
mov
(bad)
(bad)
(bad)
(bad)
jnp
and
scas
push
pop
mov
jb
retf
hlt
test
or
nop
add
int
and
adc
jl
mov
(bad)
out
mov
test
mov
es
sub
cs
stos
ja
xchg
(bad)
rcl
(bad)
inc
cmc
xchg
inc
adc
js
sbb
jnp
icebp
ret
xchg
jo
scas
pop
(bad)
(bad)
(bad)
call
mov
shr
inc
pop
into
bound
jl
imul
(bad)
sbb
(bad)
jmp
cmp
adc
retf
cmp
sub
or
or
(bad)
call
dec
jns
sti
enter
mov
dec
push
dec
mov
in
fcmovnbe
repz
jl
jl
sbb
pop
add
(bad)
adc
js
fcom
pushf
cld
mov
(bad)
(bad)
(bad)
call
hlt
push
sbb
mov
ins
xor
call
cmps
mov
cmp
(bad)
(bad)
cmp
sub
loope
mov
inc
xchg
pop
pop
or
(bad)
cwde
cs
xor
aad
sub
mov
cmc
jmp
ins
shr
mov
cmps
fsubr
sub
and
out
inc
int
xchg
fs
clc
mov
sbb
jmp
out
jecxz
hlt
mov
scas
loop
cdq
in
ds
push
(bad)
(bad)
(bad)
jmp
xchg
rcr
lods
and
jno
cli
add
pop
add
fdivr
mov
(bad)
dec
aam
adc
mov
pop
mov
or
or
(bad)
(bad)
jmp
cs
sbb
shl
dec
and
or
(bad)
(bad)
(bad)
cld
(bad)
stos
adc
or
and
xchg
xor
or
add
mov
mov
push
(bad)
(bad)
(bad)
call
nop
not
fild
out
xor
push
loope
scas
int
mov
(bad)
push
mov
inc
inc
rcr
loopne
arpl
push
mov
sar
push
mov
sub
(bad)
sar
pop
pop
jmp
(bad)
repnz
nop
test
adc
jmp
xor
inc
in
iret
mov
or
call
(bad)
fild
ins
sub
add
dec
jae
mov
jno
test
pop
pop
push
std
aaa
mov
call
pop
fldcw
repnz
push
(bad)
(bad)
(bad)
inc
cmp
xchg
(bad)
aas
adc
ss
data16
retf
nop
xchg
jne
cmps
sub
jo
loopne
(bad)
(bad)
mov
mov
mov
xchg
jmp
loopne
repnz
fst
(bad)
dec
ins
add
out
add
mov
ja
adc
add
mov
out
jne
mov
and
inc
lea
je
and
mov
test
ins
call
sti
test
and
jl
lfs
shl
lea
movs
xor
(bad)
(bad)
jmp
fidiv
cmps
xchg
dec
add
bound
shl
es
xor
mul
add
int3
xchg
std
(bad)
(bad)
(bad)
jle
dec
cmps
push
leave
xchg
jno
ret
mov
sar
das
add
rol
jmp
push
inc
(bad)
mov
fld
cmp
(bad)
(bad)
(bad)
(bad)
cld
jmp
push
or
mov
mov
xchg
sub
in
xchg
push
pusha
xchg
(bad)
(bad)
(bad)
jmp
push
push
mov
(bad)
cmp
std
call
push
or
cld
inc
xchg
stos
retf
xchg
cdq
xor
sti
inc
xor
push
les
mov
into
imul
mov
(bad)
push
data16
and
jne
pop
add
mov
je
add
or
mov
and
xor
stos
mov
arpl
(bad)
(bad)
(bad)
push
pushf
pop
scas
in
ss
inc
lods
gs
mov
es
loopne
jmp
imul
mov
jecxz
(bad)
(bad)
jmp
scas
setae
push
repnz
popf
cwde
or
fcomip
or
adc
mov
jmp
fistp
add
aaa
es
push
mov
sbb
clc
jmp
mov
pop
xchg
dec
clc
ins
in
xor
pop
push
retf
(bad)
(bad)
jmp
sub
daa
lods
and
rol
repz
pop
cs
mov
popf
dec
rcr
and
mov
(bad)
(bad)
(bad)
push
add
mov
cmp
push
jl
or
cdq
mov
rcr
ins
xchg
fistp
(bad)
(bad)
dec
push
pop
psubusw
ret
cli
lock
inc
mov
pop
out
dec
inc
(bad)
enter
push
test
push
movs
push
push
enter
rcl
push
jmp
adc
pop
cli
sti
and
jb
hlt
mov
inc
mov
adc
or
mov
shl
jno
(bad)
(bad)
call
lea
lods
call
popa
inc
dec
add
xor
jno
out
das
fwait
inc
test
or
push
inc
fmul
hlt
in
and
(bad)
(bad)
push
or
or
mov
mov
std
adc
cmp
fdiv
rcr
(bad)
(bad)
sti
movs
add
ret
mov
xchg
add
mov
cmps
jne
(bad)
call
pusha
loopne
ja
int3
das
jb
popa
(bad)
test
mov
lds
jmp
sti
movs
pop
mov
mul
jp
movs
and
(bad)
push
xchg
xlat
xor
(bad)
(bad)
(bad)
dec
outs
sub
pusha
icebp
adc
dec
in
test
pop
dec
pop
cmp
scas
mov
and
(bad)
lods
cmps
or
in
sub
push
mov
mov
xor
xchg
inc
maskmovq
test
stos
push
data16
(bad)
in
add
jle
test
ror
(bad)
(bad)
(bad)
mov
outs
(bad)
dec
test
popf
stc
mov
and
mov
fisubr
(bad)
(bad)
(bad)
jmp
out
xchg
ja
mov
out
mov
or
mov
mov
(bad)
(bad)
(bad)
fstp
repnz
pop
lahf
outs
mov
push
cmp
arpl
pop
aaa
fsubr
push
mov
stc
icebp
aam
ja
mov
jbe
pop
xor
xlat
pop
sbb
sbb
or
xor
mov
dec
mov
jnp
int
sar
mov
std
lods
and
movs
mov
in
adc
sbb
cmp
jb
or
cmp
icebp
(bad)
nop
fistp
jns
mov
jbe
sti
(bad)
std
popa
sbb
sti
ret
xor
cs
cmp
(bad)
(bad)
push
inc
(bad)
stc
sub
inc
int3
xchg
repz
and
or
and
push
push
fsub
xor
dec
call
dec
pop
mov
and
retf
dec
shl
mov
je
outs
leave
dec
pop
aas
scas
sbb
(bad)
(bad)
(bad)
(bad)
fdiv
dec
jmp
sub
repz
push
xor
sbb
in
(bad)
call
data16
inc
std
sub
pop
mov
or
push
in
mov
imul
repnz
pop
jno
push
dec
sbb
add
dec
or
(bad)
call
aam
test
sbb
sub
fsub
das
clc
jmp
inc
ss
mov
sbb
push
mov
jmp
cmps
fsubr
push
xchg
push
push
inc
inc
out
out
cld
arpl
(bad)
(bad)
out
pop
pop
call
into
out
(bad)
in
push
sub
aad
movs
dec
lds
dec
cld
(bad)
(bad)
push
sti
mov
add
mov
sub
add
xchg
out
retf
(bad)
(bad)
(bad)
inc
xor
jp
movaps
dec
xchg
js
and
outs
dec
ins
dec
dec
(bad)
fcom
cmp
push
ss
lock
(bad)
mov
out
pusha
jne
or
call
jno
neg
fadd
xor
jmp
inc
outs
into
popf
and
cmp
(bad)
clc
or
fsub
(bad)
(bad)
jmp
ss
clc
add
xor
dec
cmp
in
sub
retf
add
mov
es
(bad)
(bad)
call
js
xor
cmp
ficomp
test
call
xchg
(bad)
fnstcw
(bad)
call
sbb
adc
loope
sbb
mov
shl
(bad)
(bad)
jmp
pop
int3
cli
mov
popa
lods
push
(bad)
push
out
pop
jmp
xchg
les
test
aas
mov
jg
jp
stos
idiv
sbb
inc
sub
ins
jl
mov
dec
cmp
push
bound
fadd
xor
cs
fild
cmp
push
or
push
adc
lods
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
loopne
adc
push
sub
loop
icebp
in
out
test
jle
test
mov
inc
(bad)
ins
loopne
add
xor
mov
(bad)
jg
leave
mov
lods
push
mov
daa
out
pop
enter
mov
pusha
fldenv
popf
adc
(bad)
(bad)
inc
mov
pop
push
and
or
xchg
add
dec
adc
mov
outs
(bad)
(bad)
push
fstp
fisttp
cwde
xor
test
(bad)
sbb
cdq
push
pop
jmp
mov
add
add
and
dec
loopne
(bad)
dec
pop
out
mov
adc
iret
jbe
test
pop
nop
or
stc
sbb
movs
dec
(bad)
(bad)
call
sahf
movs
sbb
mov
outs
loop
push
aaa
jns
mov
test
lock
jnp
(bad)
(bad)
push
outs
sbb
cmc
ds
iret
push
call
pop
or
ret
bound
mov
into
aaa
jnp
mov
inc
pop
repnz
push
jge
(bad)
(bad)
call
movs
pop
imul
test
in
mov
gs
mov
push
inc
mov
push
xchg
(bad)
mov
cld
iret
fwait
push
aam
jnp
push
xor
mov
xlat
fsubr
mov
xchg
cmc
mov
jne
sti
mov
(bad)
mov
push
add
jno
movs
mov
fwait
sbb
mov
fidiv
test
sub
and
loope
hlt
dec
push
lods
outs
mov
jg
es
stc
mov
mov
mov
or
fdivr
pop
dec
fldenv
lea
cdq
fild
mov
(bad)
jmp
or
shl
pop
ja
push
clc
hlt
mov
out
sbb
lock
dec
(bad)
mov
jns
(bad)
in
cld
sub
test
fwait
loopne
ret
retf
adc
jmp
push
sbb
dec
(bad)
pusha
xchg
cmp
ins
cmps
(bad)
(bad)
jmp
repz
mov
inc
jp
xchg
or
add
les
jnp
sbb
fstp
das
push
(bad)
(bad)
(bad)
inc
jns
mov
pop
push
jle
cld
fdivr
dec
arpl
mov
xchg
inc
add
call
sub
lock
inc
mov
sub
movs
(bad)
(bad)
(bad)
call
or
push
inc
and
xchg
popf
sbb
mov
jae
sti
loop
bound
(bad)
push
jp
dec
adc
loope
jp
clc
stc
inc
adc
ins
sub
mov
mov
(bad)
(bad)
(bad)
push
mov
js
movs
inc
test
push
xchg
and
adc
push
xor
lea
lods
idiv
(bad)
(bad)
inc
jg
fs
retf
mov
div
fucomp
adc
and
sbb
push
sbb
(bad)
(bad)
dec
mov
sar
cld
jmp
outs
xor
mov
mov
adc
(bad)
dec
add
outs
and
movs
add
xchg
sub
ss
adc
mov
xchg
mov
fcomip
(bad)
fild
repnz
stc
cmps
rcl
dec
pop
in
mov
or
call
jno
jne
jae
in
sahf
aas
ja
outs
test
aas
or
(bad)
jmp
ret
aad
sub
mov
cld
cld
pop
test
or
and
outs
push
scas
push
mov
sub
(bad)
cmp
je
out
or
loope
jg
call
xor
cmp
jo
out
xchg
ret
mov
mov
test
inc
cld
mov
inc
mov
cld
push
fs
fistp
call
xor
(bad)
(bad)
call
add
or
mov
stc
sub
out
loopne
call
(bad)
(bad)
(bad)
(bad)
mov
mul
jmp
sbb
or
es
fcmovu
mov
and
(bad)
push
or
push
push
inc
sbb
shl
push
sahf
outs
in
not
lods
fdecstp
sti
sub
(bad)
(bad)
(bad)
(bad)
inc
xchg
dec
mov
or
jp
add
push
jle
add
mov
in
movs
cmp
(bad)
(bad)
fild
pop
push
cmp
popf
mov
inc
pop
xchg
fcomip
mov
and
or
xlat
stc
jle
out
popf
arpl
(bad)
(bad)
call
xchg
mov
fs
xor
sub
ja
bound
sbb
and
adc
fwait
jae
pop
popa
pop
and
xchg
jg
enter
rcl
sub
fidiv
lahf
xchg
dec
add
xchg
xor
(bad)
(bad)
dec
jnp
dec
div
mov
jecxz
pop
addr16
ror
outs
push
cmp
lahf
push
mov
call
pop
jle
sbb
jl
cmp
fsub
clc
dec
inc
in
mov
adc
fs
repnz
rol
push
xchg
cmp
xchg
(bad)
out
clc
sub
call
loopne
inc
ds
test
arpl
scas
clc
(bad)
push
mov
add
cmps
jle
xor
xlat
mov
aad
adc
xchg
ud0
(bad)
call
out
push
or
xor
scas
pushf
push
xor
clc
mov
xchg
or
(bad)
ja
rol
shr
cld
push
jne
push
xchg
jno
out
movs
jl
(bad)
rcr
mov
(bad)
pusha
in
ss
(bad)
(bad)
jmp
or
and
cmps
or
fst
in
or
je
bound
add
(bad)
call
sbb
sub
sbb
adc
xor
mov
push
call
jbe
sbb
add
shl
(bad)
inc
jmp
imul
retf
sahf
mov
pop
ror
xchg
aaa
mov
(bad)
(bad)
(bad)
cmc
or
pop
hlt
stos
outs
fild
fld
int
jno
pushf
lods
aam
mov
jge
or
test
pop
sbb
stos
iret
iret
fistp
jmp
sub
(bad)
(bad)
(bad)
call
mov
pusha
add
iret
fs
xchg
out
jno
sbb
mov
ds
loope
jb
call
dec
scas
cmp
mov
jmp
add
imul
sub
retf
ss
(bad)
(bad)
inc
push
cmps
and
loop
xchg
or
enter
sub
lods
add
pop
sbb
or
(bad)
(bad)
jmp
jbe
mov
std
inc
std
push
jmp
xchg
ret
stc
imul
(bad)
(bad)
(bad)
jmp
xlat
(bad)
loope
fcomp
mov
repz
push
jge
retf
and
jmp
or
mov
rol
fs
loop
add
pop
retf
cs
sbb
out
pop
xchg
xor
inc
jecxz
loop
adc
mov
pusha
push
jecxz
(bad)
(bad)
(bad)
call
out
or
(bad)
ret
inc
mov
push
call
mov
jecxz
jle
(bad)
in
jmp
les
nop
imul
mov
js
add
in
ret
(bad)
mov
inc
and
or
pop
mov
push
das
popf
stc
loop
or
jmp
sbb
add
into
test
xor
retf
mov
ss
cld
xchg
xlat
xor
jmp
adc
jo
and
inc
pop
sbb
mov
(bad)
(bad)
(bad)
jmp
xchg
imul
mov
cmp
sbb
xor
push
sub
ret
sbb
(bad)
(bad)
mov
dec
push
pop
jae
sub
xor
repz
fdiv
(bad)
inc
fadd
jae
fs
repnz
mov
adc
add
(bad)
jmp
jp
mov
scas
lods
fiadd
mov
enter
push
sbb
cmp
std
enter
das
add
sub
sbb
pop
test
es
xchg
test
adc
(bad)
(bad)
push
scas
inc
call
dec
lahf
jno
fnop
dec
sbb
sub
add
out
clc
(bad)
popa
pop
mov
clc
enter
mov
test
(bad)
jg
test
lock
jns
sbb
(bad)
xor
jmp
movs
xor
dec
lods
or
scas
ins
test
rcr
pop
neg
loop
gs
(bad)
dec
(bad)
rcl
cmp
jmp
push
cs
cdq
mov
mov
call
(bad)
push
add
loop
bound
int3
xchg
mov
push
(bad)
pop
push
cmp
and
sub
push
sub
xchg
adc
and
inc
inc
mov
(bad)
(bad)
jmp
pop
cli
sub
cs
popf
and
test
ret
sbb
(bad)
(bad)
(bad)
cli
cmp
cmp
sub
adc
or
or
or
jmp
movs
sar
cs
clc
add
xchg
(bad)
(bad)
jmp
nop
dec
mul
inc
adc
mov
test
and
(bad)
(bad)
jg
push
adc
push
push
repz
push
and
and
cdq
aad
cmps
cmc
ja
shr
jnp
push
call
push
cmp
int3
push
sub
dec
sub
xchg
(bad)
push
jnp
out
hlt
xor
fwait
pop
test
xor
lods
lods
leave
push
in
pop
mov
shl
das
sar
in
fstp
mov
and
pop
mov
repz
aam
(bad)
retf
or
daa
mov
add
ja
test
lods
xchg
xchg
daa
adc
and
jne
(bad)
(bad)
(bad)
dec
push
out
daa
xchg
iret
shr
in
int3
mov
sub
lahf
jl
ins
std
rol
dec
(bad)
(bad)
(bad)
push
call
jle
push
mov
cdq
jnp
jns
xor
adc
stos
ins
daa
xchg
sahf
out
std
(bad)
(bad)
(bad)
cmp
lock
inc
jp
lods
data16
sahf
xlat
(bad)
jge
aad
jg
sub
sbb
jae
xchg
add
(bad)
(bad)
mov
jo
dec
jnp
shl
dec
lea
add
push
test
dec
pop
inc
imul
mov
(bad)
(bad)
(bad)
(bad)
mov
jmp
push
lahf
fcmovnu
mov
lods
cmp
jmp
call
and
adc
push
(bad)
jge
idiv
(bad)
imul
ret
dec
jb
lahf
ds
sbb
add
(bad)
cli
push
pop
(bad)
xor
and
std
pop
xchg
ja
pop
add
sahf
or
mov
lock
(bad)
dec
stc
inc
out
inc
xlat
xchg
scas
das
out
dec
lea
scas
inc
(bad)
cs
sub
fmulp
mov
idiv
dec
je
lds
jecxz
mov
xchg
mov
fmul
(bad)
dec
pop
jo
sbb
cld
(bad)
pop
sbb
(bad)
mov
xchg
out
addr16
sbb
dec
fs
into
shl
es
sub
xchg
(bad)
jg
jmp
sub
ins
pop
mov
sbb
inc
fprem
outs
sbb
loope
aaa
xchg
cmp
fisttp
out
and
sar
mov
(bad)
std
cmp
sub
dec
(bad)
(bad)
(bad)
(bad)
(bad)
ds
xchg
repz
adc
mov
fistp
jmp
mov
(bad)
call
jns
fild
or
jle
jbe
push
cmp
sbb
xor
iret
fild
bound
push
(bad)
mov
mov
dec
in
les
jb
cmp
xor
sar
leave
push
outs
dec
pop
(bad)
(bad)
(bad)
jmp
cdq
adc
test
add
bound
or
and
or
mov
xchg
out
fdiv
sbb
ret
les
in
scas
and
add
out
push
pop
mov
sub
add
jmp
dec
or
push
arpl
mov
out
push
sbb
pop
or
(bad)
(bad)
mov
out
dec
enter
ins
inc
mov
add
aam
gs
add
jmp
mov
(bad)
pop
sub
aaa
cld
in
shl
cmp
clc
or
fdiv
into
pop
xor
or
or
(bad)
call
mov
mov
dec
stc
fs
jl
aam
sub
cmp
hlt
jg
imul
ret
sbb
or
adc
or
dec
daa
dec
mov
aas
out
jmp
(bad)
dec
ret
repnz
xor
retf
jg
push
sahf
xor
jo
xor
xchg
inc
sub
fst
(bad)
adc
mov
or
popa
(bad)
(bad)
(bad)
push
nop
xor
or
push
add
pop
scas
inc
sub
dec
stos
outs
push
push
jmp
in
mov
mov
lock
mov
rcr
jmp
clc
sbb
sub
dec
sbb
rcr
pop
sub
adc
xor
(bad)
in
jmp
pushf
sbb
sar
mov
ret
sub
lahf
pop
sub
pop
inc
icebp
xchg
aas
fidivr
add
or
in
fsubr
fstp
and
(bad)
(bad)
inc
mov
ds
lods
mov
mov
ds
clc
jge
outs
shl
cmp
add
(bad)
jg
call
retf
push
xor
das
fs
xchg
int3
call
add
and
cli
jo
(bad)
(bad)
jmp
je
or
sbb
dec
or
jg
dec
scas
lahf
mov
ds
pop
push
in
movs
imul
fcomi
mov
(bad)
mov
(bad)
jg
imul
fimul
ss
sbb
stos
mov
dec
mov
call
dec
into
dec
out
cmps
repz
mov
out
cli
or
inc
inc
(bad)
(bad)
(bad)
dec
outs
pop
ret
(bad)
les
mov
xchg
call
fwait
lea
(bad)
das
or
mov
repz
fdivr
(bad)
mov
mov
mov
inc
xlat
mov
out
xchg
popa
ss
mov
loopne
(bad)
call
mov
push
adc
imul
mov
dec
sbb
mov
xlat
fcomip
jecxz
mov
mov
jne
and
cmc
pop
(bad)
adc
scas
cli
(bad)
dec
bound
cmp
dec
push
mov
js
or
js
shl
(bad)
call
pop
out
fyl2xp1
push
arpl
shl
mov
sahf
sbb
xchg
fisub
(bad)
inc
(bad)
loope
aaa
icebp
loopne
mov
shl
ja
retf
inc
arpl
push
out
popa
mov
jno
sub
dec
jo
dec
clc
inc
cmp
es
mov
push
aas
or
sub
push
dec
mov
sar
mov
dec
mov
into
mov
into
(bad)
jg
cld
mov
popf
popa
jge
sub
or
mov
repnz
outs
test
(bad)
(bad)
(bad)
jmp
leave
fnstenv
out
out
mov
jle
cmp
inc
sub
push
dec
push
ss
outs
add
pop
and
xchg
mov
add
scas
sahf
loope
push
cmc
movs
outs
ins
call
add
leave
int3
jo
(bad)
jmp
jo
addps
xor
mov
(bad)
(bad)
sti
jg
add
dec
or
test
repz
in
mov
(bad)
inc
xor
dec
sub
stc
cdq
js
(bad)
(bad)
jmp
inc
movs
rcl
(bad)
bound
imul
cmp
out
jmp
(bad)
push
out
mov
lods
push
or
xchg
pop
out
(bad)
repz
mov
mov
data16
in
aam
jmp
(bad)
(bad)
(bad)
call
iret
test
ret
mov
mov
js
ds
mov
inc
fadd
jl
aas
add
xchg
(bad)
cdq
adc
ins
in
sub
push
pop
and
test
jmp
(bad)
sbb
repz
mov
add
shl
scas
jbe
enter
scas
pop
sbb
clc
fsubr
sub
loop
add
jnp
xchg
loopne
scas
(bad)
cmp
test
cld
aaa
ins
es
repnz
aad
and
and
push
lock
jb
(bad)
jl
add
pusha
xor
sar
push
retf
xor
mov
mov
js
mov
jnp
(bad)
(bad)
jmp
and
in
out
rol
mov
or
imul
(bad)
inc
mov
dec
retf
dec
jl
mov
outs
aad
mov
sub
int
(bad)
(bad)
(bad)
dec
pop
jle
popa
pop
test
pop
in
pushf
ins
mov
push
cmp
cmps
pop
cmps
rcl
dec
lock
cmp
in
sub
or
add
add
shl
(bad)
(bad)
call
fmul
lods
adc
fistp
pusha
in
bound
ret
imul
(bad)
jg
sub
or
mov
shl
mov
mov
ins
idiv
out
test
mov
sahf
clc
(bad)
(bad)
inc
ret
cmps
nop
in
js
out
pop
sbb
ins
pop
add
fdivr
call
push
adc
cmp
mov
push
jnp
pop
sub
mov
in
push
pusha
jb
std
ret
pop
pop
fimul
xchg
adc
inc
shr
popa
xor
mov
pop
or
(bad)
call
test
sbb
lahf
mov
add
adc
mov
into
dec
(bad)
(bad)
(bad)
push
or
mov
sbb
(bad)
aas
mov
add
mov
ja
leave
scas
add
int
int3
cld
jmp
outs
call
adc
(bad)
cs
fidivr
clc
push
inc
cmp
(bad)
jmp
ret
cmp
jo
add
(bad)
(bad)
(bad)
inc
xor
or
xchg
xchg
ret
lock
(bad)
je
mov
sbb
in
mov
sub
push
ret
cmp
cmp
stc
inc
test
inc
xor
inc
aam
inc
adc
clc
rol
icebp
push
push
frstpm(287
ret
(bad)
call
xchg
ins
lock
cld
pop
lds
popf
sbb
xchg
mov
(bad)
(bad)
jmp
icebp
and
fsubr
sar
or
fucomi
test
popa
dec
jmp
out
shl
pop
lock
mov
adc
jno
das
adc
xchg
popa
loop
jmp
addr16
mov
and
je
cli
mov
(bad)
(bad)
(bad)
fistp
and
jp
jno
pop
clc
cmp
dec
cmp
aas
jbe
xchg
push
add
mov
(bad)
(bad)
mov
jle
jbe
mov
mov
ins
sbb
jle
push
(bad)
jg
(bad)
jl
xchg
gs
mov
ds
stos
fsub
arpl
or
and
add
mov
xchg
mov
addr16
sub
or
xor
jmp
dec
daa
stos
and
and
add
lahf
cmp
or
clc
adc
cmc
pushf
cvtps2pi
cli
(bad)
(bad)
push
daa
push
fisub
and
xchg
ins
int
inc
(bad)
mov
aaa
pop
xchg
push
das
xor
add
jmp
or
mov
push
pop
nop
pop
in
repnz
movups
push
into
sti
and
inc
sti
scas
xor
sbb
stc
push
sub
and
adc
packuswb
xor
sub
jmp
adc
mov
out
jmp
clc
out
cmps
das
es
jae
inc
test
sub
pop
mov
adc
jnp
mov
(bad)
jmp
dec
in
mov
xor
cld
jae
cld
sbb
out
nop
pop
mov
jmp
(bad)
call
retf
inc
xchg
push
jecxz
inc
add
push
mul
sbb
sbb
fistp
sub
std
fstp
push
retf
add
iret
inc
std
aam
adc
test
(bad)
(bad)
(bad)
(bad)
jmp
enter
(bad)
pop
stc
movs
out
scas
fld
dec
jl
fs
jo
sbb
xor
(bad)
(bad)
(bad)
call
(bad)
fcom
jp
aaa
and
cmp
sbb
cld
jno
or
lds
cmc
mov
or
or
paddd
shr
add
(bad)
(bad)
(bad)
jmp
jnp
jecxz
pusha
bound
test
push
(bad)
mov
push
fstp
jno
lahf
mov
jg
jg
aaa
dec
add
lea
dec
int3
jmp
rcr
lea
lds
sbb
lods
(bad)
(bad)
(bad)
inc
add
jne
cmp
ss
fadd
je
mov
xchg
push
std
call
push
mov
test
movs
pop
js
fidivr
push
fimul
ds
add
xor
sub
shr
imul
sbb
(bad)
(bad)
(bad)
call
jmp
inc
test
fnstsw
xchg
mov
sub
jo
bound
call
lods
rcl
lock
inc
pop
add
fild
push
or
mov
xchg
js
and
fcomip
mov
sub
jnp
cmp
retf
mov
xor
je
cmp
(bad)
(bad)
mov
arpl
adc
neg
ret
mov
xchg
push
push
(bad)
dec
lock
or
dec
lock
iret
shl
pop
mov
pop
in
lock
mov
(bad)
dec
jnp
mov
add
dec
cmp
mov
and
inc
(bad)
(bad)
fisubr
mov
adc
out
fadd
fwait
dec
adc
inc
push
fdivr
xchg
adc
sub
(bad)
call
mov
mov
pop
or
add
xor
mov
mov
pop
mov
cli
(bad)
(bad)
dec
jno
fsub
inc
and
pop
scas
push
cmp
mov
xor
nop
mov
movs
cli
(bad)
jmp
test
ins
pop
ins
sbb
xchg
cdq
jmp
jg
sbb
inc
xor
loopne
cmps
ins
sub
cli
sbb
clc
inc
cld
add
cmc
and
sbb
in
sbb
mov
sbb
(bad)
push
fwait
retf
mov
sub
jmp
pop
xlat
jge
xchg
enter
(bad)
(bad)
call
jmp
aam
push
call
jno
(bad)
fimul
jns
fs
cld
(bad)
(bad)
(bad)
js
pop
test
out
xchg
dec
push
inc
fild
jmp
jb
cmp
stos
jmp
daa
(bad)
(bad)
inc
xor
imul
adc
imul
cli
lahf
ins
push
(bad)
(bad)
(bad)
call
cmp
loop
pushf
jmp
dec
ret
gs
or
(bad)
(bad)
mov
sti
(bad)
(bad)
sbb
jmp
enter
fsub
and
xchg
cli
in
sti
sbb
adc
movs
add
pushf
leave
int3
inc
pop
cmp
imul
je
jmp
mov
mov
dec
cmps
xchg
mov
inc
fisubr
(bad)
(bad)
(bad)
call
mov
loop
fcmovu
push
fimul
pop
mov
sbb
sbb
mov
lds
aam
mov
dec
(bad)
(bad)
jmp
(bad)
xchg
jg
or
mov
mov
jae
xor
sbb
(bad)
dec
shr
scas
push
pop
xchg
mov
pop
jno
retf
aaa
cs
call
loopne
xchg
pop
xchg
lahf
setle
(bad)
call
xchg
mov
vhaddps
arpl
xchg
ds
addr16
into
cmp
inc
clc
inc
scas
mov
loop
je
pop
sti
popf
cmp
stos
inc
rol
cmps
cli
xor
movs
fcom
es
adc
inc
xchg
cmp
out
dec
cwde
idiv
inc
sub
add
fwait
test
sbb
(bad)
(bad)
(bad)
call
inc
mov
cmp
fld
jp
xor
sbb
imul
jnp
sbb
shr
hlt
(bad)
(bad)
inc
aad
dec
out
es
iret
mov
stc
inc
jp
xlat
sub
fistp
inc
clc
rcl
pop
sub
add
movs
jg
(bad)
(bad)
mov
ds
sub
inc
loopne
cld
gs
movs
mov
(bad)
(bad)
(bad)
call
dec
cwde
loope
in
adc
pop
add
cld
dec
imul
out
call
sbb
pop
rcr
push
sbb
test
and
icebp
jo
call
adc
xor
inc
cld
cs
xchg
adc
sbb
xchg
test
or
test
lock
pop
mov
sar
aad
in
dec
fnstsw
xchg
inc
mov
outs
mov
std
jg
mov
jno
and
(bad)
cdq
dec
jne
cmp
and
push
and
clc
and
add
jnp
pop
ins
jne
(bad)
(bad)
inc
fchs
daa
ins
aaa
xchg
sbb
xchg
out
or
ret
sub
xchg
jmp
(bad)
(bad)
(bad)
inc
inc
push
and
sahf
xchg
cdq
cmp
xor
push
ins
cli
inc
(bad)
mov
xchg
imul
adc
push
add
daa
inc
adc
mov
clc
cmp
(bad)
(bad)
call
add
lahf
add
stos
mov
pop
rol
xchg
cmp
shl
sbb
loop
jmp
daa
mov
mov
pop
jecxz
rol
push
dec
sbb
cmp
xchg
cli
(bad)
jmp
das
arpl
ret
cwde
(bad)
(bad)
(bad)
push
or
mov
push
sbb
mov
fst
leave
pop
les
mov
ja
sub
aas
and
mov
add
adc
mov
dec
aam
test
jno
repz
(bad)
mov
jge
mov
xchg
fdiv
sub
sar
push
std
jge
mov
jae
mov
outs
mov
xor
call
cmps
outs
pop
out
addr16
mov
jle
int
into
sbb
xchg
(bad)
dec
movs
mov
mov
and
jmp
lock
jns
pop
(bad)
(bad)
(bad)
inc
enter
into
inc
adc
leave
sub
rol
rcr
pop
xchg
push
mov
(bad)
jmp
pop
retf
xor
add
cmp
adc
push
jmp
jmp
test
mov
xchg
ja
loopne
adc
lods
leave
loop
xchg
loopne
and
(bad)
jmp
or
sbb
sahf
mov
pop
pop
in
mov
mov
mov
mov
sar
call
cld
call
adc
push
inc
das
je
data16
mov
jl
(bad)
(bad)
push
sub
retf
sbb
enter
sar
lds
sub
cmps
adc
(bad)
(bad)
(bad)
inc
pop
jnp
mov
push
lods
add
jnp
mov
daa
or
push
sbb
cmps
push
xchg
jge
push
pop
cs
jl
vmwrite
addr16
mov
aas
mov
call
add
push
mov
ss
repnz
movs
mov
add
pop
jg
(bad)
(bad)
jmp
dec
stos
inc
cld
mov
repz
pop
and
sub
inc
mov
(bad)
(bad)
(bad)
(bad)
ficomp
aaa
jl
es
and
fstp
cmp
fist
pop
xor
dec
push
inc
(bad)
inc
mov
or
xor
add
out
and
or
push
outs
push
pop
adc
inc
mov
dec
xor
mov
(bad)
mov
mov
retf
pusha
popa
mov
das
sar
sbb
(bad)
xchg
(bad)
ss
cmp
das
aas
imul
sub
(bad)
(bad)
(bad)
(bad)
cmp
int
mul
rol
pop
cmp
out
cld
mov
sbb
cmps
rcr
(bad)
inc
xor
xor
xor
dec
(bad)
stos
cld
repz
push
xchg
lahf
lock
mov
sar
jo
sbb
mov
mov
xchg
mov
inc
sbb
cmp
sbb
inc
xor
addr16
std
or
cld
std
xchg
cdq
popf
rcl
xor
ins
mov
and
clc
call
jecxz
stos
add
cmp
data16
mov
or
push
pop
pusha
out
add
jb
add
push
cld
(bad)
clc
(bad)
pop
jno
gs
jb
mov
push
pushf
jae
jo
sub
pop
imul
or
lods
fcmovne
std
aaa
sub
adc
pop
je
sbb
aam
das
mov
std
(bad)
call
mov
bound
lods
cdq
xor
add
(bad)
(bad)
(bad)
(bad)
in
lahf
js
ja
out
adc
test
inc
hlt
mov
push
popf
mov
pop
xor
movs
add
scas
mov
jge
icebp
mov
cli
mov
das
cli
(bad)
dec
or
mov
std
mov
repz
unpckhps
(bad)
(bad)
dec
or
scas
pop
retf
scas
xor
add
mov
imul
stos
or
repz
not
push
jg
xor
aaa
std
(bad)
jmp
clc
push
pusha
fisub
pop
lods
add
mov
(bad)
(bad)
(bad)
jmp
pop
push
mov
mov
ret
push
movs
cmp
jo
mov
inc
xor
add
mov
clc
(bad)
jmp
ins
mov
adc
fs
fnsetpm(287
(bad)
scas
or
(bad)
push
(bad)
(bad)
(bad)
mov
scas
push
dec
ficom
jmp
dec
movs
add
lea
jge
fnstsw
ins
cld
jo
sub
sub
and
push
mov
pinsrw
aad
jmp
mov
pop
fist
(bad)
(bad)
inc
fist
mov
stos
outs
pop
call
pop
xlat
movs
adc
push
call
(bad)
call
lea
cmp
lods
sub
mov
push
test
xchg
(bad)
(bad)
dec
lods
sahf
mov
xor
fs
or
addr16
das
fdiv
add
rcl
outs
cmp
push
pop
xchg
xor
sbb
and
outs
ins
dec
(bad)
jmp
es
mov
(bad)
js
addr16
rol
outs
sbb
and
in
stos
std
sub
out
jmp
or
ret
out
mov
pop
mov
stos
lods
(bad)
out
and
pop
(bad)
imul
ss
add
mov
aaa
cs
aam
lods
cmc
cmc
pop
or
dec
in
or
inc
mov
and
cmps
push
push
jl
xchg
idiv
(bad)
(bad)
(bad)
(bad)
jmp
sbb
mov
push
outs
daa
fldcw
mov
cwde
int
pop
push
call
(bad)
dec
jae
dec
test
adc
cdq
and
pop
mov
sbb
cmp
(bad)
(bad)
push
adc
sahf
sbb
or
xchg
xlat
fisttp
xchg
push
adc
shr
scas
xlat
jmp
aaa
in
adc
pushf
jo
pusha
mov
(bad)
(bad)
jmp
js
(bad)
mov
jns
jnp
fbstp
jge
jecxz
movs
icebp
jecxz
push
pop
sbb
cli
push
std
pop
inc
out
jp
in
jecxz
jle
dec
outs
fnstsw
mov
inc
push
cli
call
cmp
gs
retf
das
mov
repz
fs
call
add
jne
push
test
mov
(bad)
(bad)
(bad)
(bad)
jns
ins
xchg
adc
inc
inc
fistp
and
mov
and
cld
(bad)
(bad)
call
je
(bad)
stc
out
std
ds
lods
adc
repz
fimul
loop
icebp
call
add
repz
inc
(bad)
cdq
jno
and
out
idiv
retf
(bad)
(bad)
(bad)
stc
repnz
js
xchg
nop
ins
retf
shr
xor
xor
xchg
retf
(bad)
(bad)
call
jmp
sti
adc
mov
cmp
mov
xchg
inc
jmp
popf
jle
and
int
mov
fcmovb
xor
or
mov
(bad)
(bad)
mov
mov
les
pushf
xor
dec
xor
mov
fadd
cmc
mov
(bad)
push
scas
sbb
ins
and
jmp
es
(bad)
sbb
nop
xlat
js
mov
sub
mov
jg
(bad)
(bad)
jg
prefetchw
xchg
loope
(bad)
mov
and
loop
(bad)
jmp
mov
call
pop
mov
jo
sub
inc
sub
enter
sbb
outs
iret
sub
sub
dec
aas
(bad)
(bad)
(bad)
push
xchg
cmp
jle
cmp
pop
adc
mov
or
jb
retf
jmp
(bad)
(bad)
call
lds
loop
mov
xor
xchg
or
lea
movs
fdivr
(bad)
(bad)
call
out
pop
jae
push
hlt
pushf
mov
jg
and
pop
aad
push
pop
loopne
pop
imul
(bad)
(bad)
call
stc
cmp
and
jb
push
ret
repz
mov
arpl
mov
rol
test
jmp
dec
xor
xor
xchg
in
(bad)
sti
arpl
mov
jmp
lods
or
mov
je
dec
int3
lods
call
int3
sbb
adc
xor
sar
fst
xor
cli
mov
jmp
cmp
jo
sbb
arpl
mov
icebp
dec
add
(bad)
jmp
test
mov
imul
and
push
daa
push
dec
add
(bad)
(bad)
mov
jnp
jg
dec
mov
fsubr
xchg
leave
daa
mov
or
push
fs
in
jno
(bad)
(bad)
jmp
ins
or
sub
jl
jbe
xchg
or
jmp
in
scas
cld
outs
xlat
push
inc
in
cmp
(bad)
(bad)
(bad)
jmp
adc
sbb
jg
jne
(bad)
sbb
cmp
dec
(bad)
mov
cmp
cmp
dec
fs
jo
fwait
ja
pop
pop
dec
fiadd
ss
ins
movs
cld
test
push
shl
inc
aam
fmul
inc
mov
(bad)
mov
stc
push
fidivr
stc
leave
jg
mov
es
mov
inc
xor
stc
stos
test
aaa
std
and
bswap
add
mov
(bad)
dec
or
repz
(bad)
imul
sbb
mov
sar
add
mov
and
and
jl
push
sub
(bad)
(bad)
jg
add
mov
je
jbe
lea
pop
lds
nop
(bad)
jg
pushf
pop
imul
pop
mov
or
push
daa
in
pop
pop
cmps
and
(bad)
inc
jle
lock
push
or
push
mov
(bad)
(bad)
(bad)
call
sbb
pop
pusha
add
and
ror
sub
stos
ins
mov
jnp
(bad)
(bad)
(bad)
(bad)
sti
popf
pop
icebp
out
retf
and
nop
loope
es
add
(bad)
cmp
adc
stc
jb
(bad)
(bad)
(bad)
push
push
push
or
hlt
movs
nop
or
mov
or
pop
or
outs
test
jmp
mov
xchg
jns
test
sbb
aam
mov
(bad)
(bad)
call
lods
dec
adc
pop
(bad)
jbe
xchg
or
mov
scas
retf
arpl
and
fnsave
(bad)
(bad)
std
adc
adc
jle
inc
xchg
mov
pop
cmp
mov
shr
shr
(bad)
(bad)
inc
int
dec
aaa
xor
xchg
push
push
jnp
add
lahf
repnz
xchg
xor
ins
(bad)
pop
jge
mov
es
(bad)
(bad)
push
xchg
test
cmps
popf
push
cmp
dec
or
fldcw
pop
sbb
outs
jbe
and
imul
mov
(bad)
(bad)
(bad)
dec
jae
ins
push
push
push
mov
push
inc
pop
mov
icebp
imul
or
std
push
and
pop
(bad)
(bad)
(bad)
dec
add
cmp
pop
inc
int3
add
mov
sub
cmps
stc
inc
or
adc
(bad)
(bad)
call
and
fild
cmp
fdivrp
cmc
pop
or
sbb
loopne
mov
loope
mov
popa
enter
test
pop
add
mov
ja
cmc
sbb
call
jmp
dec
stc
add
or
jmp
cli
xor
pusha
inc
inc
ret
arpl
adc
jge
(bad)
jns
mov
cwde
and
and
test
mov
cdq
addr16
inc
or
sbb
lods
les
call
and
fwait
cmp
jle
(bad)
mov
pop
bnd
call
mov
sub
sub
mov
xlat
jp
aas
les
or
or
std
lahf
les
xlat
jo
sub
xchg
or
adc
mov
data16
nop
pop
sub
or
mov
cmps
aad
ret
in
enter
je
pushf
mov
cmp
test
(bad)
(bad)
push
fcmovb
out
aaa
pop
add
mov
(bad)
xchg
and
adc
mov
(bad)
and
(bad)
(bad)
inc
aad
leave
mov
add
jmp
mov
xlat
pop
or
cmp
(bad)
jle
(bad)
dec
pop
mov
int
push
gs
mov
mov
mov
int3
dec
xor
sub
and
cmp
scas
dec
jp
imul
sahf
stos
fnsave
adc
push
mov
and
outs
adc
jne
lock
call
lea
or
push
in
das
std
lods
inc
pusha
mov
call
vpmaxub
inc
in
sub
inc
cld
addr16
mov
(bad)
(bad)
(bad)
call
imul
lahf
imul
bound
jno
jmp
or
dec
and
inc
sub
push
cld
jmp
aas
and
pop
jg
iret
es
fcmovu
(bad)
(bad)
call
mov
les
add
js
fld1
mov
xor
jmp
pop
xchg
jo
cdq
ret
fadd
fcom
push
es
data16
mov
je
sar
(bad)
jmp
or
jmp
add
xor
cld
jg
sbb
push
jo
ret
add
or
and
sub
mov
lahf
dec
div
mov
inc
fstp
inc
into
inc
sbb
jmp
std
in
jmp
mov
mov
call
adc
adc
call
xchg
and
mov
in
int3
das
mov
or
xchg
pop
inc
(bad)
(bad)
(bad)
jmp
cmp
out
cmc
imul
dec
leave
ficom
dec
fadd
cmps
(bad)
(bad)
(bad)
push
cmp
xchg
(bad)
lods
adc
or
pop
xor
jge
xchg
popf
lds
(bad)
(bad)
(bad)
jmp
push
cmps
or
ret
inc
push
xchg
sub
mov
and
out
mov
cmps
(bad)
jmp
cmp
sbb
jp
inc
jne
scas
nop
xor
cdq
fcomi
rol
xor
(bad)
(bad)
(bad)
call
mov
ficom
(bad)
stos
inc
xor
and
or
ud0
(bad)
dec
xchg
movs
mov
hlt
jno
jl
stos
in
mov
dec
xchg
xchg
(bad)
sti
fistp
push
xor
adc
mov
cmp
jecxz
pop
out
xchg
add
cli
ja
mov
pop
dec
mov
jmp
cmps
out
cmp
(bad)
dec
push
adc
dec
and
stc
adc
sub
pop
mov
mov
cdq
in
dec
(bad)
(bad)
call
xor
jge
mov
ret
inc
(bad)
fwait
jnp
shl
mov
inc
(bad)
(bad)
(bad)
push
xor
loopne
mov
xor
stos
movs
push
sahf
inc
into
cmps
inc
adc
loop
(bad)
(bad)
(bad)
(bad)
mov
ja
call
adc
and
cwde
aam
and
or
cmps
into
fdivr
mov
movs
jg
jmp
rol
add
aam
sub
(bad)
jmp
imul
xchg
call
ss
cmps
mov
sub
pop
mov
movaps
stos
(bad)
aad
inc
popa
jmp
sbb
pop
xchg
jg
enter
retf
pop
aaa
mov
(bad)
(bad)
fisttp
dec
jecxz
mov
scas
sbb
fistp
inc
mov
mov
ds
call
(bad)
cdq
push
out
sub
lods
xor
popa
div
aam
(bad)
mov
imul
out
mul
xor
sbb
push
call
xchg
cli
(bad)
jmp
(bad)
out
and
mov
(bad)
enter
xor
jmp
xor
test
xchg
test
js
loop
pusha
pop
(bad)
(bad)
fist
(bad)
(bad)
dec
sub
outs
or
push
jmp
cmp
cmp
ss
dec
mov
jg
adc
sbb
jae
ret
dec
(bad)
push
js
loopne
ins
mov
mov
movs
push
push
out
jp
out
(bad)
(bad)
(bad)
call
sub
xor
nop
push
shl
lahf
mov
pop
in
mov
loopne
jle
jg
push
jg
aad
xor
inc
lock
push
mov
pop
(bad)
(bad)
call
ror
dec
jmp
jmp
push
mov
sbb
pop
inc
and
mov
(bad)
(bad)
(bad)
jmp
jbe
adc
stos
mov
iret
shl
mov
push
jmp
popa
sbb
sbb
xchg
data16
clc
and
inc
cmc
js
out
(bad)
fild
cmp
and
out
inc
mov
loop
inc
aas
popf
clc
sbb
jmp
out
mov
mov
jno
pusha
jecxz
fcos
(bad)
fild
jbe
pop
or
shl
inc
push
xchg
push
jp
pop
inc
aad
(bad)
into
(bad)
(bad)
(bad)
(bad)
out
aad
jmp
mov
push
icebp
repz
sar
popa
in
jecxz
and
or
or
jmp
(bad)
arpl
bound
jge
call
into
adc
call
in
mov
push
pop
sahf
popa
(bad)
jmp
fst
aas
ret
xor
sub
pop
outs
mov
inc
push
rcr
dec
pop
out
push
xor
lods
push
fwait
jle
aaa
mov
test
stc
add
mov
jge
data16
(bad)
(bad)
push
out
nop
out
fcmovnbe
pop
mov
retf
sbb
xor
rol
sbb
enter
call
loope
adc
cmp
xchg
push
in
test
and
push
shl
(bad)
(bad)
call
and
cmps
push
push
mov
mov
test
sub
(bad)
call
and
add
xchg
leave
jo
(bad)
mov
pop
xchg
xor
jp
mov
lock
adc
jns
int3
mov
xchg
and
scas
cli
dec
cli
clc
sbb
sub
dec
arpl
xchg
adc
dec
push
xchg
call
gs
loopne
sub
cs
repz
aam
in
xlat
adc
xor
sub
pop
mov
arpl
mov
lahf
push
xchg
or
sbb
add
(bad)
(bad)
(bad)
push
jmp
and
jecxz
dec
mov
retf
add
sbb
dec
(bad)
lea
xchg
adc
push
ds
xchg
(bad)
jmp
idiv
cmp
and
mov
popf
jmp
add
sub
fld
xor
(bad)
(bad)
jmp
jo
or
out
or
stos
shl
shl
cmp
add
mov
sub
push
(bad)
mov
cmp
push
iret
cmc
test
mov
jae
cmc
pop
into
ins
fs
add
(bad)
dec
cwde
lods
push
popf
pop
inc
xor
fwait
enter
mov
sub
adc
and
pop
ins
leave
xchg
ja
ds
jecxz
pop
(bad)
(bad)
(bad)
(bad)
jmp
imul
jg
pop
or
push
cmps
in
into
stos
mov
loopne
js
dec
lock
jnp
loop
push
or
jbe
imul
movs
pusha
jne
add
ret
add
sub
lods
clc
(bad)
mov
shl
cmp
cmp
cmps
icebp
inc
and
and
inc
dec
fdivr
(bad)
push
and
jbe
lods
jnp
sub
jl
add
data16
pop
cli
push
js
movs
not
ss
retf
mov
or
push
and
jle
sahf
push
or
inc
jb
les
inc
cmp
bound
pop
cli
cmp
(bad)
cld
pushf
mov
and
cmp
add
inc
and
inc
ret
sbb
add
scas
clc
(bad)
push
ins
inc
jl
push
jecxz
dec
(bad)
add
add
(bad)
(bad)
(bad)
dec
movs
imul
sub
cmp
mov
clc
jb
in
clc
imul
jmp
sbb
xlat
sti
(bad)
(bad)
(bad)
call
pushf
sti
push
jne
std
mov
mov
movs
out
and
xchg
pop
fs
inc
inc
jecxz
(bad)
(bad)
push
repnz
data16
repz
call
inc
sbb
sub
(bad)
jmp
cmp
dec
fld
sahf
mov
out
push
dec
sbb
sahf
xor
int3
fidivr
out
dec
rcr
js
push
or
pusha
in
aam
add
(bad)
call
mul
sbb
cmp
(bad)
(bad)
call
push
and
stc
push
push
dec
push
cdq
cmp
jmp
pop
iret
aam
call
adc
aad
sbb
xor
mov
sub
ss
call
pop
cdq
mov
loop
(bad)
(bad)
(bad)
call
stc
call
xchg
lea
jo
pop
sub
pop
je
xchg
jecxz
xchg
out
repnz
lods
setno
jbe
dec
daa
push
dec
movs
sbb
ins
pop
sar
popa
in
or
mov
push
fsubr
in
sbb
push
push
sar
adc
not
outs
jmp
aas
mov
pusha
pushf
push
mov
cmp
dec
movs
test
stos
or
in
(bad)
frstor
ret
push
mov
mov
dec
nop
push
cmp
and
adc
ins
stos
stos
popf
stc
jp
adc
push
dec
xchg
(bad)
(bad)
(bad)
(bad)
mov
dec
lock
scas
movs
and
pop
enter
xchg
leave
mov
adc
(bad)
call
xchg
or
mov
movs
test
jno
inc
inc
retf
cmp
(bad)
call
test
sar
add
addr16
adc
aaa
push
clc
jg
ins
popa
out
repz
aaa
jl
inc
ror
pusha
mov
(bad)
(bad)
call
sub
add
or
cmp
ficomp
cwde
rcr
stc
lds
push
jge
(bad)
call
push
sahf
(bad)
inc
das
ltr
neg
xchg
or
(bad)
push
push
pop
jp
push
cmp
inc
rcl
pop
xor
xor
dec
ror
(bad)
dec
mov
inc
sub
adc
lea
cmc
mov
clc
xor
add
(bad)
(bad)
call
popa
sbb
push
mov
sbb
cmp
int
outs
icebp
pop
pop
pop
push
pop
imul
cld
(bad)
clc
mov
add
sub
out
jmp
pop
mov
loopne
mov
and
(bad)
(bad)
(bad)
(bad)
dec
out
inc
pushf
sbb
pop
dec
js
jne
xchg
frstor
ret
ins
sbb
fcmovne
fsub
(bad)
(bad)
(bad)
dec
lods
adc
jg
mov
jno
cdq
call
and
add
mov
(bad)
push
iret
cmp
sub
and
xlat
xchg
mov
(bad)
out
sbb
push
std
sbb
outs
gs
and
cmp
call
jmp
pop
outs
mov
(bad)
adc
adc
dec
ret
movs
xchg
mov
stos
mov
(bad)
(bad)
(bad)
call
aas
call
add
scas
out
push
inc
or
mov
xchg
inc
js
add
iret
cli
addr16
pop
lods
je
push
jp
repnz
mov
xor
je
stos
int3
pop
pusha
jg
jg
pop
cmc
inc
jl
shr
push
and
dec
ins
dec
add
xor
inc
stos
sbb
fst
(bad)
mov
ds
add
inc
in
add
jecxz
pop
(bad)
(bad)
(bad)
jmp
xor
inc
or
pop
add
daa
repnz
mov
pop
ins
add
inc
outs
aad
mov
xchg
mov
pop
pusha
shr
add
mov
sub
(bad)
mov
pop
mov
add
mov
or
jl
imul
push
sahf
xor
out
(bad)
mov
jno
push
cwde
mov
call
loopne
xchg
iret
dec
stc
ja
clc
jae
jo
push
xor
sub
sbb
or
jmp
pushf
adc
fiadd
fistp
pop
mov
(bad)
(bad)
(bad)
jmp
aam
leave
stos
dec
imul
xchg
push
jmp
fucom
bound
mov
pop
xchg
pop
mov
retf
and
bound
and
(bad)
mov
cwde
fsubrp
jns
(bad)
mov
dec
ja
adc
fs
call
dec
jl
jg
movs
test
mov
lods
jbe
push
mov
in
and
(bad)
(bad)
inc
pop
mov
adc
push
lods
ret
daa
jo
mov
neg
(bad)
(bad)
inc
mov
arpl
cmp
(bad)
cmp
mov
add
mov
repz
pop
repz
push
fcos
add
pop
outs
popa
lock
fdivrp
dec
xor
clc
mov
or
call
(bad)
(bad)
(bad)
(bad)
(bad)
lahf
ja
shl
push
fmul
popa
loope
loope
call
cdq
out
push
sbb
cmps
jmp
(bad)
inc
inc
call
xchg
dec
ret
cmps
ret
xlat
xchg
push
daa
mov
stos
(bad)
dec
cwde
mov
dec
cmp
mov
jmp
(bad)
call
ret
fsubr
(bad)
fcomp
push
pop
sub
jmp
unpckhps
arpl
mov
ja
ret
xlat
sbb
inc
cmc
out
pushf
dec
aad
icebp
or
(bad)
(bad)
jmp
sub
std
push
(bad)
or
pop
inc
mov
js
adc
mov
dec
mov
add
test
cmp
sbb
(bad)
(bad)
inc
imul
pop
push
jo
ret
and
aam
xchg
mov
cli
je
(bad)
(bad)
(bad)
jmp
xchg
and
daa
mov
inc
movs
ficomp
stos
popf
nop
sub
aad
bound
(bad)
(bad)
dec
adc
pop
nop
jge
clc
vcvttps2dq
mov
outs
xor
test
leave
scas
pop
fdivrp
(bad)
mov
repnz
out
rcl
pop
shl
inc
cmp
push
jbe
push
and
pop
jmp
push
sub
jge
(bad)
(bad)
inc
lea
neg
aam
scas
dec
call
mov
mov
mov
jb
(bad)
repz
jmp
lods
ins
lock
adc
push
jo
mov
ret
addr16
sub
xchg
push
icebp
in
add
fadd
test
adc
inc
add
push
sub
sub
shr
mov
mov
mov
call
dec
aad
lods
popf
loope
adc
(bad)
xor
das
(bad)
mov
(bad)
(bad)
clc
jbe
iret
test
sbb
push
jge
js
push
and
pop
test
xlat
or
adc
dec
mov
inc
pop
mov
push
(bad)
(bad)
(bad)
(bad)
ficom
or
pop
push
mov
loope
cmp
adc
pop
or
cs
sbb
loopne
ficomp
test
(bad)
call
popa
sub
clc
mov
lahf
gs
or
(bad)
jmp
stc
add
dec
cmp
mov
ds
push
inc
les
cwde
xchg
sub
(bad)
jg
mov
add
pop
mov
stos
es
sar
push
in
mov
push
sub
push
jle
(bad)
(bad)
dec
sub
outs
idiv
sbb
lock
sbb
iret
ficom
(bad)
(bad)
(bad)
inc
jno
sar
push
cs
outs
xor
mov
call
ins
(bad)
(bad)
(bad)
inc
in
mov
mov
test
fwait
int
xchg
out
jg
ds
(bad)
(bad)
(bad)
call
jge
xlat
mov
mov
iret
fucomi
pop
leave
pop
push
pop
xchg
in
cmp
iret
mov
fld
push
lock
enter
xchg
out
(bad)
(bad)
(bad)
jmp
push
ds
outs
dec
fwait
push
fisub
std
cmp
push
repz
pushf
mov
mov
mov
jo
sbb
add
jg
test
ret
dec
jae
(bad)
jmp
mov
lock
push
jb
call
mov
int3
xchg
cmp
jns
(bad)
push
(bad)
(bad)
(bad)
dec
js
add
call
xchg
rol
adc
sbb
ret
icebp
lds
(bad)
jmp
jbe
cdq
push
inc
sub
in
daa
imul
(bad)
sti
shl
loopne
add
sub
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
mov
mov
arpl
addr16
xor
xchg
data16
ja
push
add
jle
or
push
dec
(bad)
(bad)
dec
and
outs
cmps
nop
fisub
hlt
scas
aaa
test
fs
iret
jle
pop
cmp
ret
and
lock
mov
(bad)
(bad)
(bad)
(bad)
fidivr
in
cmps
repnz
mov
scas
fwait
aaa
mov
fwait
scas
jo
dec
xor
add
(bad)
dec
mov
add
retf
repnz
cdq
jle
repnz
mov
dec
or
scas
sub
mov
shr
mov
out
push
jmp
(bad)
(bad)
(bad)
call
outs
stos
faddp
rol
mov
(bad)
cld
bound
dec
xor
jl
inc
mov
movs
(bad)
add
call
mov
out
push
ror
inc
and
dec
sahf
pop
retf
xchg
cdq
pop
adc
mov
in
lds
jmp
cwde
leave
sti
cld
and
or
jnp
pop
sub
inc
int3
(bad)
(bad)
(bad)
jmp
cld
test
and
push
push
inc
stos
xor
data16
cli
sti
ret
add
sub
sub
mov
(bad)
call
mov
clc
pop
cld
adc
sar
cmps
sar
push
sbb
out
int
(bad)
(bad)
(bad)
(bad)
mov
adc
cmps
out
mov
and
retf
inc
mov
jg
add
out
jo
scas
or
inc
movs
sbb
call
add
shl
(bad)
(bad)
fistp
inc
hlt
pop
sbb
xor
ss
inc
adc
mov
in
jno
fimul
xor
lock
push
add
or
dec
das
clc
(bad)
in
mov
push
adc
rcl
dec
bound
xor
stos
(bad)
(bad)
(bad)
push
lahf
test
mov
lea
adc
add
in
push
mov
add
shr
jmp
aaa
push
bound
push
mov
pusha
rcr
lds
push
setno
iret
push
lds
rol
ins
cmps
aaa
adc
call
jg
int
inc
cmc
xchg
mov
pop
jp
mov
sbb
stos
add
or
(bad)
(bad)
push
inc
aam
cs
std
into
pop
mov
jge
inc
pop
and
pop
or
mov
mov
(bad)
(bad)
dec
sbb
ret
cmps
data16
(bad)
xchg
jmp
sbb
stc
add
pop
cmp
mov
and
shl
jb
jnp
call
inc
mov
push
ud0
(bad)
jmp
loope
sbb
dec
je
dec
shr
sahf
push
movs
or
jg
dec
pop
(bad)
lds
(bad)
call
aaa
xchg
xchg
ins
sbb
stc
cmps
push
test
scas
sar
add
stos
shl
inc
pop
cmp
jnp
das
enter
or
loope
mov
and
shl
in
movs
jg
dec
std
imul
cmp
xlat
mov
ins
std
rep
dec
pop
nop
cwde
mov
pop
jg
mov
test
add
leave
pop
add
rcl
mov
inc
cmc
mov
add
adc
arpl
(bad)
(bad)
jg
or
std
mov
mov
aad
arpl
dec
(bad)
push
sbb
mov
shl
add
stc
xchg
mov
lock
loopne
mov
mov
inc
(bad)
(bad)
(bad)
dec
lock
xlat
ss
push
(bad)
scas
sbb
dec
jp
lea
lahf
adc
pusha
jge
sub
(bad)
(bad)
jge
push
mov
jp
(bad)
push
xchg
pop
and
mov
(bad)
and
lods
test
adc
(bad)
(bad)
(bad)
(bad)
cmp
paddusw
mov
push
dec
xor
mov
jns
(bad)
(bad)
dec
sub
sbb
je
fnstenv
test
and
inc
fs
jb
jge
pop
loopne
adc
call
xlat
mov
lods
lods
sub
mov
lock
rcl
aad
sahf
retf
or
out
das
scas
in
sub
fistp
int
or
add
add
mov
(bad)
mov
adc
mov
and
jle
test
xchg
mov
jg
std
or
(bad)
(bad)
(bad)
out
sub
repz
cmp
data16
jle
stc
lock
fneni(8087
call
mov
cmp
test
or
hlt
mov
pop
dec
adc
pop
inc
inc
in
mov
aas
lahf
cmp
loopne
mov
pop
iret
in
addr16
data16
jg
retf
mov
cmp
push
dec
add
mov
scas
sbb
push
sub
cmp
jmp
repnz
add
addr16
shr
fstp
xlat
(bad)
push
out
mov
loope
xchg
stos
call
clc
out
mov
xor
aam
sub
(bad)
mov
mov
mov
clc
add
loope
idiv
call
inc
shr
mov
out
fiadd
cmps
mov
popf
cmp
pop
add
push
inc
xor
inc
jmp
call
or
idiv
icebp
iret
repz
pop
xchg
sub
mov
ud0
icebp
sub
loop
(bad)
push
js
lock
mov
in
xchg
xchg
fiadd
mov
scas
pop
mov
ins
out
(bad)
(bad)
(bad)
call
mov
jns
xlat
xchg
jl
ins
xlat
aad
adc
test
stos
mov
popa
fcom
repnz
jg
test
xchg
push
jp
dec
inc
popa
(bad)
(bad)
(bad)
jmp
not
popf
push
mov
retf
adc
popf
sub
inc
aam
jns
sbb
test
(bad)
(bad)
(bad)
call
ret
cmc
or
mov
inc
lds
cmp
out
push
mov
cld
mov
dec
mov
(bad)
arpl
mov
pusha
fwait
mov
mov
jle
js
xchg
(bad)
(bad)
(bad)
jmp
xchg
enter
jl
std
fsubp
push
and
aam
aad
sbb
inc
cmps
xlat
scas
push
sub
add
mov
or
aad
cs
(bad)
fild
sbb
mov
mov
stos
ret
mov
loope
jecxz
fs
aas
push
(bad)
(bad)
(bad)
push
xor
jl
push
push
pop
inc
lea
and
movs
push
or
leave
push
and
(bad)
dec
aad
pop
add
in
cli
das
jmp
loop
mov
pop
pop
add
xchg
dec
adc
push
dec
sbb
ds
push
inc
lock
shl
dec
stos
mov
(bad)
(bad)
(bad)
jmp
lods
or
clc
int3
aaa
sub
mov
mov
xchg
jmp
(bad)
(bad)
(bad)
mov
movs
cwde
rcl
pusha
pop
dec
loope
jae
fld
push
jmp
stos
hlt
leave
jecxz
jns
(bad)
(bad)
push
jle
lods
dec
pop
jns
dec
out
cmp
mov
mov
loope
sub
dec
int3
mov
idiv
jmp
repnz
dec
cmp
mov
mov
sub
(bad)
(bad)
call
push
cli
aam
mov
nop
sub
outs
shl
fcomp
out
(bad)
repnz
out
mov
or
(bad)
inc
jp
loope
dec
cmp
mov
cmp
hlt
retf
jge
push
xchg
pop
(bad)
(bad)
(bad)
jmp
push
mov
mov
sub
aad
aad
push
outs
out
(bad)
mov
mov
ror
ret
imul
ror
add
(bad)
jmp
cld
xor
sbb
jl
int3
cmp
mov
push
fldenv
imul
out
fstp
mov
mov
or
push
movs
add
test
jns
pop
xor
push
sar
je
mov
mov
int3
mov
(bad)
mov
push
aaa
ins
test
dec
add
cmp
fild
push
imul
mov
inc
mov
sbb
mov
fiadd
(bad)
(bad)
(bad)
cmp
and
lahf
out
daa
loopne
clc
fwait
int3
shl
ret
pop
inc
push
push
test
(bad)
push
(bad)
pusha
inc
loope
sub
out
add
xor
retf
(bad)
cmp
(bad)
call
frstor
icebp
inc
out
repnz
jg
ror
inc
rcr
dec
jmp
cmp
movs
push
pop
mov
fisubr
mov
(bad)
(bad)
(bad)
jmp
xchg
lods
pop
outs
rcr
xchg
sar
mov
cmp
mov
sti
pop
xchg
add
and
sahf
mov
stos
push
jecxz
fcmovnbe
(bad)
(bad)
(bad)
jmp
dec
loopne
jnp
adc
ds
push
outs
mov
in
cmc
pop
mov
hlt
push
std
(bad)
(bad)
(bad)
mov
int3
jl
cmovb
pop
dec
(bad)
add
rcl
cmp
(bad)
(bad)
call
ficom
out
jge
sub
(bad)
xchg
es
mov
jmp
aaa
sahf
jecxz
mov
js
mov
sub
(bad)
(bad)
fist
fs
add
and
popf
(bad)
out
cmp
push
imul
push
inc
mov
mov
and
mov
push
pop
xchg
add
popa
adc
jmp
pop
adc
cmc
scas
les
retf
pop
std
dec
mov
(bad)
call
push
ret
jns
mov
jmp
fst
push
xor
out
mov
loopne
mov
mov
sbb
out
mov
jmp
std
pop
mov
inc
aaa
inc
daa
mov
inc
cmc
mov
ds
(bad)
(bad)
jmp
pop
mov
mov
cld
dec
dec
fisttp
sub
or
mov
(bad)
(bad)
(bad)
jmp
mov
int3
xor
call
js
push
in
push
inc
lods
xchg
cmps
aam
rol
xchg
rol
iret
pop
clc
outs
mov
(bad)
(bad)
jmp
sbb
push
shr
call
dec
push
jns
pop
cmp
add
(bad)
(bad)
inc
adc
mov
mov
movs
and
sbb
jne
push
or
inc
(bad)
(bad)
mov
sti
push
pusha
retf
fsub
sbb
inc
mov
std
jmp
fs
adc
mov
pop
aas
data16
lds
adc
add
or
(bad)
push
mov
test
jmp
(bad)
inc
stos
(bad)
(bad)
(bad)
jmp
fadd
dec
sahf
jge
push
adc
adc
and
ja
mov
mov
pop
hlt
(bad)
inc
popa
aam
push
push
mov
pop
mov
loope
rcr
(bad)
push
inc
push
ins
std
ds
xor
adc
enter
inc
fadd
or
bound
rcr
sbb
add
mov
mov
dec
das
jno
inc
and
sub
jmp
push
out
push
pop
outs
cmps
mov
iret
scas
(bad)
(bad)
jmp
adc
repnz
sub
push
in
mov
fwait
xor
fwait
fs
jp
es
cmp
(bad)
call
and
fcom
push
int
hlt
mov
sub
(bad)
mov
lahf
dec
inc
test
push
cld
xchg
jle
mov
add
mov
inc
xchg
xchg
inc
pop
fadd
es
js
stc
pusha
or
sub
call
push
xchg
call
test
jmp
(bad)
call
pop
shl
adc
aas
lods
sbb
mov
xlat
dec
adc
loop
pop
(bad)
cmps
fisttp
xor
call
call
(bad)
cli
xor
push
jge
xchg
movs
retf
ret
aam
xchg
or
pop
mov
(bad)
(bad)
dec
aas
jnp
mov
add
adc
push
jb
aam
popf
sub
fcomp
xor
cmc
enter
(bad)
(bad)
dec
pop
in
xor
aam
pop
(bad)
movs
push
xlat
mov
mov
loopne
sub
cmp
pop
repnz
jecxz
enter
out
fidivr
push
cmps
mov
fbstp
call
mov
sti
ins
sbb
jle
push
retf
cli
dec
push
and
mov
(bad)
call
sub
scas
jne
js
mov
addr16
dec
retf
sub
aaa
dec
clc
(bad)
(bad)
jmp
imul
fistp
dec
adc
mov
xor
sub
xchg
jmp
jmp
jmp
and
adc
jnp
(bad)
xchg
mov
push
cld
mov
and
cmp
dec
loope
push
sub
mov
(bad)
(bad)
dec
sbb
sar
shl
shl
mov
jg
sbb
rol
and
(bad)
(bad)
push
mov
inc
push
std
or
inc
mov
jnp
call
xchg
loop
call
ret
sub
mov
psllw
(bad)
fbld
xchg
loopne
push
and
xor
leave
out
retf
push
call
dec
fistp
push
outs
nop
movs
pop
mov
jge
aas
push
arpl
loope
adc
ret
(bad)
(bad)
jmp
cmp
pop
cmps
aas
ins
fdiv
add
clc
dec
mov
xchg
sub
in
pop
and
imul
push
dec
pop
icebp
(bad)
jmp
fisttp
mov
pop
push
mov
inc
add
xor
les
(bad)
inc
shr
call
dec
lea
pop
mov
or
sbb
sub
jp
mov
mov
pop
repz
mov
cmp
repz
cmp
hlt
test
inc
rcl
repz
arpl
xchg
or
(bad)
(bad)
call
push
jmp
sbb
mov
pop
add
gs
(bad)
(bad)
call
mov
dec
test
je
fsubr
repnz
jmp
mov
(bad)
(bad)
(bad)
jmp
(bad)
fdiv
es
inc
cmp
push
pop
sbb
repz
xor
mov
push
out
loopne
lds
stos
(bad)
push
cmp
dec
ins
mov
adc
jl
cmp
lds
daa
cwde
mov
call
es
test
mov
adc
push
imul
sbb
dec
mov
cmp
jge
(bad)
push
(bad)
pop
cmp
xchg
outs
popa
in
fistp
dec
lods
and
cmp
loopne
sti
jno
popa
retf
mov
movs
(bad)
(bad)
(bad)
push
xor
retf
mov
mov
add
inc
jns
xchg
xor
and
ficom
(bad)
(bad)
(bad)
jmp
mov
xchg
sbb
and
lock
jmp
std
mov
imul
mov
movs
mov
and
inc
call
mov
imul
sbb
neg
(bad)
clc
cmc
(bad)
mov
pop
add
push
loope
data16
dec
aad
and
jg
inc
mov
jns
ret
adc
inc
jecxz
or
push
dec
lock
std
repnz
dec
adc
inc
call
jb
clc
sub
(bad)
(bad)
jns
xchg
(bad)
fld
gs
test
pop
retf
push
xor
xchg
xchg
sub
pop
fcmovb
fst
pop
sti
loopne
in
out
cli
repz
or
pop
call
(bad)
scas
jg
push
push
cli
cmps
or
scas
cmps
mov
imul
mov
out
jmp
je
push
push
sar
adc
jge
push
repnz
imul
(bad)
(bad)
jmp
scas
sbb
shr
adc
xchg
mov
add
lods
or
push
(bad)
call
inc
jge
fwait
pusha
enter
push
sub
das
pop
sahf
shl
push
repz
test
bound
repz
mov
(bad)
jle
jl
test
das
ja
out
jg
jmp
jg
aad
adc
jp
cmps
inc
pop
mov
jle
call
ds
mov
cmp
cmp
pop
push
aam
hlt
sar
add
add
cli
(bad)
(bad)
(bad)
jg
jno
data16
push
in
fcmovb
sbb
or
jp
sub
sbb
retf
adc
retf
xor
or
into
int
iret
mov
ret
xor
jb
(bad)
mov
fiadd
loopne
je
lods
ins
mov
daa
iret
sub
(bad)
cmp
xor
xchg
push
and
cdq
pop
cmc
mov
add
aad
mov
(bad)
(bad)
fsub
sub
loope
sar
fisttp
jecxz
shr
lock
or
dec
std
(bad)
(bad)
push
rcr
or
test
rcr
cmp
ss
cmp
(bad)
call
cmp
je
out
mov
stc
cmp
mov
push
sub
fdivr
shl
push
or
(bad)
mov
mov
pop
sbb
pop
lds
cwde
dec
out
add
lea
test
outs
inc
call
or
cmp
(bad)
(bad)
jmp
outs
stc
pop
inc
mov
or
pop
ins
xchg
inc
adc
mov
push
mov
(bad)
dec
dec
adc
sbb
cmp
jo
ja
imul
or
data16
or
(bad)
(bad)
(bad)
call
mov
iret
cdq
mov
and
fisub
push
push
dec
(bad)
jg
or
mov
mov
loopne
(bad)
xchg
je
lahf
js
lock
push
inc
ds
sub
pop
pop
mov
cmp
mov
fistp
pop
(bad)
(bad)
dec
adc
push
push
add
ror
out
(bad)
(bad)
(bad)
call
cld
daa
mov
xchg
scas
in
xchg
push
jg
iret
int3
adc
adc
(bad)
(bad)
(bad)
push
cld
jecxz
sahf
xor
push
push
xor
jns
in
mul
mov
push
xchg
dec
repnz
dec
mul
scas
cmp
out
jmp
mov
(bad)
push
dec
push
fisttp
sub
mov
pop
retf
sar
pop
xor
out
push
out
mov
jmp
retf
out
push
ins
dec
lods
cmp
cmp
sbb
(bad)
(bad)
(bad)
inc
mov
jo
sbb
add
mov
and
mov
mov
pop
test
and
dec
rcl
jae
xor
jns
xchg
loop
bnd
jmp
into
jno
xor
push
push
mov
inc
push
and
(bad)
inc
imul
call
fdivr
adc
xor
sahf
cmp
xchg
or
mov
imul
mov
int
loop
(bad)
(bad)
(bad)
out
jp
add
rcr
mov
sbb
shl
cmp
add
(bad)
call
xchg
cdq
add
pop
mov
imul
mov
int3
lahf
push
mov
mov
push
dec
shl
cdq
push
lods
bound
cmc
push
dec
dec
test
xchg
add
or
ror
or
(bad)
(bad)
(bad)
jmp
leave
adc
ja
leave
bnd
jns
xchg
enter
mul
daa
into
(bad)
(bad)
(bad)
push
mov
sbb
or
inc
mov
push
repnz
scas
pusha
neg
dec
sahf
rcl
test
and
icebp
out
stos
jmp
or
mov
mov
adc
jle
sti
lahf
inc
data16
(bad)
(bad)
call
adc
add
mov
dec
sar
out
mov
(bad)
jmp
lahf
mov
cld
(bad)
push
dec
push
adc
add
add
lea
dec
mov
out
dec
jecxz
xor
fld
sub
jl
mov
lea
jecxz
add
sbb
(bad)
enter
call
pop
pop
cmp
(bad)
pop
(bad)
movs
in
dec
pop
aad
stc
adc
mov
jg
(bad)
(bad)
(bad)
jmp
or
in
arpl
movs
in
inc
ficomp
mov
xchg
cli
and
(bad)
jmp
jnp
sub
dec
or
ss
bound
cmps
js
xchg
sbb
mov
(bad)
call
int3
lds
lods
mov
mov
ja
repz
mov
push
cmp
fmul
(bad)
fld
aam
clc
test
into
adc
xchg
cdq
sbb
ins
leave
pop
pop
pusha
add
dec
data16
sar
ret
jns
mov
push
mov
(bad)
(bad)
(bad)
inc
mov
mov
(bad)
add
adc
ins
sbb
lahf
xchg
bound
add
sbb
push
cdq
leave
dec
(bad)
(bad)
(bad)
fidivr
pop
add
idiv
(bad)
ret
iret
aad
mov
lods
adc
les
xchg
(bad)
jg
test
imul
jg
dec
mov
stos
mov
cld
push
xchg
(bad)
call
ficom
ins
test
scas
clc
cmps
daa
push
gs
lahf
mov
lds
call
jmp
jg
ret
(bad)
(bad)
jmp
into
pop
lods
scas
push
add
out
pop
dec
mov
push
sahf
mov
loopne
(bad)
cmps
in
enter
es
sbb
cmps
push
(bad)
mov
cld
and
mov
mov
mov
(bad)
jmp
out
dec
hlt
push
(bad)
aaa
pop
inc
sub
push
add
lods
fbld
jne
xchg
dec
js
pop
inc
(bad)
(bad)
(bad)
call
scas
push
mov
call
jp
inc
scas
popf
adc
std
outs
push
fwait
shr
xor
jbe
(bad)
(bad)
(bad)
(bad)
cmp
jae
das
sbb
in
hlt
pop
test
xor
(bad)
mov
ds
mov
outs
or
jg
std
sub
pushf
hlt
fwait
pop
cmp
inc
pusha
push
cli
sbb
cmc
(bad)
(bad)
push
lds
and
retf
mov
push
(bad)
jle
shr
nop
rcr
adc
cmp
pop
ins
into
and
adc
cli
cwde
mov
add
ins
cmp
(bad)
pop
icebp
sub
in
push
pop
jmp
mov
cmps
pusha
rcr
test
sbb
(bad)
(bad)
(bad)
jle
dec
cwde
xor
or
push
adc
push
std
adc
out
sbb
shr
test
or
(bad)
(bad)
call
shl
movs
xor
dec
adc
xchg
cwde
adc
cld
aas
xchg
mov
imul
out
xlat
rol
outs
sbb
pop
lds
push
lahf
(bad)
(bad)
(bad)
(bad)
jns
ins
retf
sti
arpl
adc
pushf
(bad)
fdivr
movs
je
xlat
pop
or
jmp
fnsave
(bad)
dec
sub
pop
ficomp
pop
mov
(bad)
out
mov
dec
retf
les
or
inc
pop
sbb
in
and
add
jmp
sbb
(bad)
(bad)
sbb
inc
adc
cmp
scas
lods
pop
mov
xchg
pop
icebp
das
push
push
push
aas
push
into
retf
movs
adc
es
(bad)
mov
call
pop
enter
adc
(bad)
mov
leave
dec
pop
or
popa
fs
pop
ret
cmp
push
dec
ins
sub
xor
cli
je
sub
dec
sti
sahf
mov
(bad)
(bad)
(bad)
inc
test
cmp
jg
cwde
adc
in
mov
inc
mov
sahf
or
(bad)
inc
out
aad
bound
inc
repz
enter
in
mov
(bad)
(bad)
dec
in
test
ret
sub
(bad)
movs
dec
jp
inc
jbe
lods
cmps
jmp
jmp
int3
sbb
mov
pop
test
mov
inc
test
cdq
out
sub
test
ins
xor
xor
(bad)
(bad)
jmp
loope
gs
xor
and
ins
cmp
jecxz
test
(bad)
mov
loopne
mov
sub
jmp
mov
pop
jae
jno
jl
(bad)
jg
mov
jb
jge
call
push
sahf
pop
cmp
(bad)
(bad)
push
or
sbb
ss
or
sbb
adc
push
add
push
loopne
and
cmps
mov
ret
ja
jbe
and
sub
pop
cmps
fist
sbb
xchg
mov
daa
sub
(bad)
(bad)
(bad)
dec
xchg
aad
std
retf
into
push
push
je
adc
pop
(bad)
xor
or
in
jbe
(bad)
(bad)
(bad)
(bad)
cmp
jmp
pop
add
xor
cmp
adc
jg
push
pop
gs
(bad)
(bad)
jl
imul
dec
jp
test
movs
jno
lahf
sbb
add
pop
push
inc
(bad)
(bad)
(bad)
fist
mov
dec
or
cwde
jmp
adc
add
stos
push
scas
pop
shr
add
add
ins
std
dec
push
retf
les
and
mov
mov
call
js
mov
aam
(bad)
mov
out
stc
scas
icebp
sbb
add
cdq
into
(bad)
(bad)
(bad)
inc
cmp
dec
out
call
(bad)
pushf
repz
pop
xlat
mov
popa
les
lods
(bad)
(bad)
(bad)
(bad)
fmul
jecxz
xchg
in
cmp
loope
cmp
mov
jmp
clc
jnp
push
cli
mov
mov
add
lea
mov
loop
(bad)
(bad)
inc
lods
repz
and
sbb
and
loope
ja
cdq
shl
(bad)
(bad)
(bad)
jns
fisub
popa
iret
in
add
cli
lea
or
(bad)
int
ror
loopne
mov
fmul
or
sbb
add
(bad)
cld
jmp
dec
mov
sbb
inc
push
cmp
dec
pop
(bad)
(bad)
mov
sar
mov
mov
(bad)
scas
mov
(bad)
and
adc
(bad)
(bad)
call
leave
fld
adc
cdq
push
lods
add
jae
fisttp
xchg
adc
pop
loopne
or
sub
fldcw
jnp
adc
mov
fs
xchg
adc
push
(bad)
(bad)
(bad)
call
fiadd
test
push
mov
aam
aaa
inc
idiv
inc
loop
js
repnz
(bad)
(bad)
dec
clc
sbb
sti
xor
(bad)
int
jmp
(bad)
cmps
pop
clc
icebp
gs
hlt
(bad)
call
push
pop
and
fld
jmp
cmps
sbb
sbb
jge
(bad)
(bad)
(bad)
(bad)
(bad)
jl
inc
add
jae
xchg
adc
adc
mov
scas
pop
or
sbb
jge
(bad)
push
retf
push
cli
cs
imul
shl
repnz
out
add
fs
(bad)
inc
push
push
sbb
jae
xor
jle
cs
mov
popa
popa
jge
(bad)
inc
fisubr
inc
jl
push
lods
test
retf
mov
xchg
scas
dec
jmp
xor
fxam
test
cmps
xchg
std
push
pop
stc
and
adc
cmc
(bad)
(bad)
jmp
leave
cmp
(bad)
ja
mov
adc
add
mov
sub
imul
(bad)
(bad)
(bad)
add
xchg
sbb
bound
outs
dec
cmp
sti
mov
(bad)
jmp
sub
mov
cmc
or
cld
ins
ss
mov
fcomp
nop
adc
es
aaa
mov
repnz
add
inc
pop
xor
repz
call
(bad)
dec
sahf
sbb
cmp
(bad)
iret
add
movs
mov
sbb
cmp
mov
(bad)
(bad)
dec
out
sub
fdivr
stos
or
popa
xor
adc
mov
(bad)
mov
int
test
shl
and
movs
inc
shr
jmp
adc
jg
xlat
inc
and
inc
fwait
in
ja
pop
mov
ins
inc
pop
(bad)
jmp
cld
(bad)
(bad)
inc
dec
or
adc
rol
or
add
call
mov
mov
dec
push
and
test
cmps
out
aad
inc
pushf
add
ja
cld
(bad)
cmp
sbb
retf
mov
mov
jl
mov
(bad)
(bad)
(bad)
push
and
xor
cmp
test
(bad)
or
mov
nop
call
cli
fwait
(bad)
call
pop
push
add
cmp
mov
fdivr
(bad)
out
stos
not
add
jb
dec
push
inc
add
std
jmp
and
test
sahf
cmp
add
mov
call
(bad)
jle
jg
dec
adc
in
jg
xchg
or
imul
ss
(bad)
(bad)
push
jp
mov
jle
les
fimul
(bad)
arpl
mov
pop
and
cmp
(bad)
cmp
sbb
call
gs
and
dec
cmp
sub
(bad)
call
inc
dec
loopne
mov
lahf
xor
mov
sub
add
cmps
add
popf
ds
mov
mov
leave
push
jmp
jl
ror
push
mov
arpl
mov
push
loopne
mov
fadd
movs
ss
inc
outs
jmp
mov
cmp
ss
sbb
(bad)
(bad)
call
sahf
cli
stos
mov
(bad)
test
xchg
jns
(bad)
adc
sbb
scas
adc
push
sbb
cli
nop
stos
xchg
(bad)
(bad)
(bad)
inc
xlat
add
adc
(bad)
pop
add
jmp
add
cmp
cmp
(bad)
(bad)
fcomip
scas
retf
cmps
aas
and
cmp
fwait
rcl
mov
sbb
jae
fild
(bad)
dec
cmp
inc
mov
into
push
ds
xchg
iret
inc
lods
inc
sbb
mov
(bad)
(bad)
(bad)
jmp
iret
cmp
cld
cmp
mov
sub
mov
push
imul
mov
inc
sbb
jl
add
sub
out
(bad)
daa
pop
xchg
call
adc
out
mov
(bad)
(bad)
(bad)
jmp
cmp
add
xor
cli
dec
int
int3
mov
jmp
xor
adc
or
(bad)
(bad)
jmp
add
(bad)
into
lods
pop
loop
rcr
hlt
mov
mov
out
ins
and
sbb
xchg
jae
(bad)
(bad)
push
push
inc
or
jl
in
ss
push
ss
push
cli
pop
push
sbb
ins
dec
inc
xor
call
sbb
jbe
inc
xchg
jmp
mov
mov
jno
sub
pop
or
fisttp
sti
out
in
retf
mov
sbb
jbe
mov
fcomip
call
pusha
imul
mov
sub
je
mov
std
and
scas
aaa
mov
or
(bad)
(bad)
(bad)
(bad)
jp
jl
mov
jl
ja
dec
dec
xlat
xchg
add
sbb
inc
ds
cmp
sub
(bad)
(bad)
dec
adc
xor
shl
adc
xor
loop
or
push
xchg
add
mov
ins
add
push
clc
adc
(bad)
push
fsubp
cmp
gs
sub
mov
xlat
dec
and
clc
int3
mov
push
pop
mov
aaa
pop
fnstsw
stc
dec
ins
mov
mov
je
add
push
ret
adc
dec
sbb
imul
(bad)
jg
inc
(bad)
jle
stos
pcmpgtb
pop
xor
pop
xor
ds
(bad)
(bad)
(bad)
inc
xor
pop
call
and
xor
das
mov
fwait
retf
mov
call
add
cmp
fwait
push
mov
mov
sahf
mov
cmps
cwde
xchg
repnz
(bad)
(bad)
jmp
ret
dec
stos
mov
repnz
lahf
scas
gs
in
rol
pop
jb
inc
cld
cli
(bad)
(bad)
(bad)
(bad)
cmp
sub
xchg
stos
sub
(bad)
cmp
fldenv
into
push
xor
shr
push
dec
dec
sub
dec
call
dec
lods
or
push
and
adc
jle
or
test
jae
mul
daa
mov
scas
pop
sbb
fidivr
jne
cmps
sbb
scas
jmp
leave
mov
push
xchg
fdiv
mov
mov
jle
jo
icebp
xchg
pop
or
(bad)
(bad)
(bad)
inc
es
jmp
popa
push
jmp
and
in
pop
push
push
call
je
mov
out
clc
(bad)
call
test
fcom
daa
or
loopne
jp
jp
inc
shl
lods
call
arpl
out
rol
stos
jbe
mov
out
sbb
(bad)
(bad)
(bad)
cmp
repz
mov
aad
xchg
push
jbe
cmp
fld
in
push
lods
(bad)
(bad)
(bad)
call
das
push
dec
ss
push
mov
inc
cmp
out
xchg
cmps
(bad)
movs
adc
cmp
retf
(bad)
aam
inc
fild
xor
sbb
call
(bad)
jmp
(bad)
loopne
mov
sub
add
pop
inc
dec
inc
mov
push
adc
out
push
sbb
(bad)
jg
pop
out
pop
ja
popf
jb
std
sbb
push
in
jecxz
sub
(bad)
inc
icebp
mov
push
push
das
lods
mov
dec
sub
iret
mov
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
imul
or
stc
jae
loop
mov
jmp
sbb
(bad)
(bad)
call
dec
daa
dec
test
(bad)
test
shr
loopne
add
ins
xor
std
inc
mov
shl
adc
retf
call
mov
xor
sub
pop
bound
mov
or
push
call
cmp
js
adc
xchg
in
jg
xchg
mov
shl
mov
cmp
fs
test
mov
in
jmp
ds
ja
fwait
ror
push
std
sahf
xchg
test
add
outs
fcomp
push
or
mov
jmp
outs
mov
sbb
ds
enter
mov
(bad)
(bad)
(bad)
cld
jg
pop
mov
cmps
bound
(bad)
cmps
dec
lods
jg
cmp
movs
mov
lods
mov
adc
pusha
add
xor
cmc
or
xchg
outs
jns
pushf
pop
aam
aaa
(bad)
jmp
add
ror
fdivr
or
xchg
mov
xchg
jmp
fdivp
int
mov
jno
(bad)
xchg
xchg
cdq
shl
cmps
(bad)
(bad)
(bad)
call
add
push
dec
mov
jl
mov
cmp
push
pop
sub
outs
xor
push
stos
(bad)
jnp
(bad)
(bad)
dec
cmp
mov
push
mov
sti
pop
cmp
or
loop
cdq
rol
(bad)
dec
sub
(bad)
(bad)
(bad)
inc
das
into
fwait
xchg
retf
xor
jns
add
mov
sub
dec
int3
and
(bad)
(bad)
(bad)
(bad)
cmp
lods
or
sub
and
test
mov
xchg
adc
idiv
(bad)
mov
pop
inc
cmp
xlat
push
shl
lahf
sub
add
loope
les
(bad)
(bad)
(bad)
inc
sbb
pop
lds
mov
daa
jb
sub
lock
dec
es
mov
loop
(bad)
(bad)
(bad)
jmp
fiadd
mov
pop
cld
ins
iret
lock
mov
add
xchg
ret
xchg
adc
xchg
(bad)
(bad)
call
inc
jp
clc
fcmovbe
out
push
repnz
adc
repz
clc
or
and
das
jo
pop
mov
xchg
mov
test
clc
dec
jmp
iret
sbb
mov
jmp
xchg
call
popf
jnp
fnstcw
shr
test
aam
movs
inc
push
and
xchg
fwait
sti
jne
fcmovne
and
call
test
sub
imul
sub
xor
cmp
enter
push
retf
and
xor
ret
test
add
jmp
mov
outs
jns
(bad)
call
pushf
fild
xor
test
cwde
push
xchg
loope
std
call
jl
ficom
cld
jmp
jnp
gs
scas
ss
dec
jmp
les
push
xchg
or
and
clc
pop
xchg
push
loopne
fidivr
cld
(bad)
xlat
xchg
stos
dec
mov
leave
mov
(bad)
xchg
out
data16
inc
addr16
ret
loopne
mov
pushf
repnz
repnz
or
(bad)
pop
mov
test
push
lods
hlt
(bad)
(bad)
(bad)
push
inc
push
jg
ins
jo
aam
xchg
jg
dec
out
mov
movs
mov
call
(bad)
fdiv
fstp
enter
arpl
xor
iret
sbb
inc
test
mov
ins
xchg
lods
ds
xchg
sub
xchg
div
les
in
xchg
aaa
mov
add
mov
pop
or
sub
popf
cld
pop
mov
std
(bad)
(bad)
(bad)
push
sbb
(bad)
test
call
loope
inc
xchg
je
aam
sbb
sar
inc
mov
jne
(bad)
(bad)
dec
icebp
in
arpl
icebp
movs
mov
inc
mov
int
pop
cs
mov
lods
push
mov
xchg
push
stc
je
xor
call
cmps
sub
into
imul
rcl
enter
(bad)
call
in
jo
daa
sub
out
jae
cmp
das
xchg
call
mov
(bad)
out
jbe
data16
sbb
dec
or
scas
add
and
fld
lods
jo
(bad)
(bad)
inc
fs
push
retf
mov
ins
or
jmp
mov
cld
ret
das
sub
sbb
xchg
dec
sbb
or
js
ret
jl
test
xchg
mov
lock
fwait
(bad)
(bad)
inc
imul
test
xchg
sbb
cmps
sub
mov
and
mov
(bad)
(bad)
jmp
mov
mul
push
outs
ins
(bad)
cs
lea
fdivr
jne
sbb
mov
jmp
jnp
out
add
jle
(bad)
hlt
shl
mov
jmp
das
xchg
(bad)
(bad)
(bad)
cld
and
cmps
test
jecxz
and
fsubr
out
mov
mul
ins
sahf
(bad)
(bad)
(bad)
inc
das
or
pop
xor
pop
dec
cli
ins
or
iret
mov
pop
int
dec
sbb
or
jmp
shr
inc
scas
or
inc
dec
push
dec
sub
cli
or
inc
dec
adc
test
jmp
xor
pop
sbb
jl
imul
xchg
inc
fild
fwait
pop
loope
sbb
inc
aad
(bad)
(bad)
(bad)
dec
xchg
add
mov
jb
cli
pop
outs
sub
out
push
lahf
xor
out
cmps
hlt
mov
sub
mov
mov
dec
jmp
xchg
outs
in
dec
hlt
nop
sub
idiv
(bad)
dec
std
cmp
lods
xor
iret
mov
hlt
mov
popa
sar
(bad)
inc
cdq
mov
mov
shr
push
mov
ret
(bad)
call
jmp
fwait
xchg
repnz
adc
mov
call
push
scas
clc
sub
jmp
pop
fst
jp
mov
fsubr
mov
jbe
test
add
xchg
(bad)
inc
(bad)
call
add
pop
std
sbb
mov
lahf
pusha
imul
dec
pop
inc
dec
out
outs
sub
(bad)
(bad)
call
retf
push
hlt
test
push
std
mov
mov
sub
sub
aaa
fcmovnbe
dec
dec
push
lods
into
and
pop
push
int3
sti
popa
add
mov
jl
lock
jp
inc
in
lds
js
fidiv
fistp
mov
push
push
mov
call
in
mov
gs
inc
in
mov
in
push
loopne
ins
cld
into
out
mov
int3
and
dec
jae
push
adc
not
mov
test
fadd
leave
mov
outs
sbb
inc
ja
push
sbb
hlt
push
sub
stc
jo
dec
lds
and
fwait
jmp
(bad)
jg
out
jge
push
das
repz
jmp
iret
js
cdq
loopne
repnz
and
loop
(bad)
(bad)
call
xchg
jg
mov
retf
pop
out
jge
mov
retf
and
xor
sbb
(bad)
jmp
mov
adc
test
jmp
(bad)
call
sub
pop
arpl
popa
cmp
out
cmp
jb
adc
push
or
dec
add
hlt
test
test
push
dec
(bad)
(bad)
dec
fldenv
cmp
push
out
sub
dec
dec
mov
dec
out
lods
cmps
push
mov
cmps
xchg
sub
push
push
adc
(bad)
jmp
jmp
inc
add
(bad)
in
mov
nop
inc
retf
dec
mov
mov
(bad)
(bad)
(bad)
fistp
mov
scas
push
jo
add
cmp
pop
cdq
sar
loop
mov
idiv
and
(bad)
call
cdq
sti
rcl
sub
(bad)
fdivr
mov
(bad)
(bad)
mov
sbb
mov
aas
inc
and
sti
scas
fprem1
iret
sti
mov
add
fdivr
mov
ins
cli
ficom
mov
into
pop
aad
ret
sahf
ja
cmc
(bad)
dec
cld
xchg
cs
aas
xchg
push
add
jmp
jl
xchg
mov
fisttp
out
enter
mov
mov
lods
cld
leave
out
push
test
lds
dec
leave
fidiv
mov
jae
dec
xlat
sbb
scas
cmp
mov
stc
jmp
or
sbb
(bad)
(bad)
call
into
push
ficomp
ret
push
ftst
xchg
inc
jle
jmp
mov
sbb
loopne
stc
movs
lods
push
pop
imul
(bad)
mov
cmp
push
outs
sahf
pop
cmp
xchg
loope
dec
les
xchg
fistp
std
push
fs
int3
jmp
mov
(bad)
jmp
popa
pop
jnp
adc
int
hlt
mov
leave
dec
jae
sti
sbb
out
adc
(bad)
(bad)
(bad)
inc
mov
jge
retf
test
test
mov
xor
jmp
adc
dec
punpckldq
xchg
xor
or
ja
jmp
fdiv
aam
clc
sbb
cmps
sbb
inc
or
(bad)
(bad)
dec
imul
push
push
sti
add
rcr
ficomp
mov
(bad)
(bad)
(bad)
std
icebp
xor
dec
imul
ficom
mul
sub
cdq
mov
sbb
sub
jge
(bad)
ds
(bad)
sti
and
jl
xor
cwde
mov
(bad)
(bad)
jmp
pop
in
jns
xchg
data16
xor
mov
movs
adc
and
dec
sbb
sub
mov
adc
(bad)
jmp
cwde
(bad)
or
fsub
or
sbb
int3
jb
dec
outs
push
mov
jg
sbb
push
sahf
xchg
adc
in
and
cmps
mov
mov
jbe
add
enter
gs
mov
xchg
push
(bad)
jmp
xchg
xor
push
rcr
pop
add
sub
sahf
mov
ss
lahf
or
jns
mov
(bad)
(bad)
inc
jecxz
xor
sub
inc
cwde
jle
inc
pop
test
shr
data16
dec
jmp
call
(bad)
fsubr
pop
les
stc
mov
xor
cli
data16
fucomip
das
add
dec
lods
inc
icebp
(bad)
imul
stos
mov
adc
pop
mov
dec
adc
(bad)
cli
adc
mov
mov
jo
ret
(bad)
(bad)
(bad)
call
push
push
jmp
cwde
xchg
gs
pop
dec
out
sub
sti
stos
retf
jbe
icebp
shr
pop
fidiv
stc
jg
inc
adc
in
sahf
mov
dec
mov
and
aaa
std
dec
fwait
push
ret
add
jbe
push
fwait
push
jmp
jo
jmp
mov
inc
cmp
daa
data16
mov
fimul
add
call
int3
jbe
int3
xchg
lods
(bad)
(bad)
push
scas
mov
mov
mov
popf
add
loope
adc
(bad)
std
or
jmp
jge
add
pop
jmp
adc
cmc
pop
retf
mov
cmps
sbb
fistp
or
jmp
fs
call
shl
jns
add
loop
fbld
icebp
mov
mov
xchg
dec
imul
xor
xchg
xor
(bad)
(bad)
(bad)
clc
adc
test
pop
sub
movaps
(bad)
lahf
push
paddusb
(bad)
push
push
clc
jns
mov
sub
sub
inc
adc
hlt
mov
cli
or
into
xor
(bad)
(bad)
call
push
dec
cdq
jl
lea
dec
int
adc
mov
(bad)
push
fidivr
mov
sahf
inc
hlt
adc
cli
out
fucomip
ret
add
sub
gs
call
(bad)
out
test
rol
mov
cdq
out
int3
xchg
or
sub
fisubr
loopne
leave
ret
jno
fwait
movs
sahf
fnstcw
jmp
mov
fwait
dec
or
jnp
push
push
test
loop
fcomp
or
out
les
repnz
(bad)
(bad)
call
push
stos
lods
xchg
(bad)
fst
dec
sub
sahf
fstp
mov
dec
imul
cmp
call
or
inc
jb
mov
pop
mov
sbb
std
sar
(bad)
(bad)
cld
dec
ret
mov
push
icebp
test
jbe
mov
js
sbb
jg
ds
(bad)
fild
sub
lock
pop
bound
dec
jg
fs
(bad)
inc
lock
jg
fdivr
mov
add
adc
cmp
pop
dec
xor
inc
xor
push
jnp
test
addr16
ret
add
mov
lods
cmp
mov
int3
(bad)
(bad)
(bad)
dec
xor
xchg
ret
ret
retf
jmp
loop
jge
jo
jae
sub
mov
(bad)
(bad)
jmp
mov
pop
fsub
imul
xchg
dec
dec
leave
inc
(bad)
fnstcw
(bad)
(bad)
(bad)
push
pop
shl
mov
pop
jo
inc
sahf
out
mov
stos
dec
(bad)
call
lock
and
adc
pop
xchg
fsub
push
pop
or
dec
sub
(bad)
jmp
test
daa
stos
call
inc
stc
push
(bad)
(bad)
(bad)
inc
jns
mov
cli
test
dec
shl
xor
pusha
sbb
push
into
sahf
and
mov
js
xor
neg
shr
retf
test
mov
add
(bad)
aaa
inc
(bad)
sub
pop
stc
sub
push
fwait
mov
(bad)
dec
inc
bound
mov
cmp
std
leave
in
fucomip
push
jecxz
mov
out
scas
or
dec
ins
popa
fwait
rcr
cli
adc
lds
scas
fbld
retf
(bad)
(bad)
jmp
imul
or
dec
iret
mov
mov
in
(bad)
rcr
cmp
push
push
gs
(bad)
(bad)
(bad)
jg
adc
stos
inc
xor
iret
call
hlt
ret
je
push
dec
fcmovnu
repz
and
cdq
sub
imul
(bad)
call
loopne
sbb
and
icebp
sub
inc
xor
iret
inc
jp
(bad)
pop
or
(bad)
(bad)
push
xchg
mov
idiv
mov
push
cdq
iret
aaa
and
or
sar
scas
cli
inc
rcr
shr
in
cmps
mov
sbb
aad
mov
inc
cmp
or
(bad)
mov
into
add
ins
push
fistp
js
mov
data16
(bad)
(bad)
(bad)
dec
cmp
fadd
lea
xor
imul
push
sub
(bad)
cmp
push
or
and
hlt
adc
sbb
(bad)
call
shr
mov
stc
sbb
pop
nop
bound
aam
test
test
enter
mov
loopne
(bad)
leave
mov
icebp
in
fwait
out
push
(bad)
and
push
call
loopne
(bad)
outs
call
(bad)
push
ss
test
inc
dec
call
xchg
or
pop
test
sbb
lds
(bad)
call
mov
add
mov
inc
xchg
(bad)
call
mov
in
mov
jmp
cmc
jo
mov
add
or
lods
mov
pop
xchg
(bad)
(bad)
jmp
xchg
sbb
xlat
add
cld
and
push
jle
cld
shr
push
inc
jg
push
adc
pop
cmc
(bad)
cli
inc
xchg
jle
lods
and
ss
xchg
or
addr16
enter
(bad)
(bad)
(bad)
push
outs
test
(bad)
or
push
rcr
(bad)
adc
cdq
shl
xchg
frstpm(287
sub
dec
xchg
jne
cmp
enter
retf
call
repz
(bad)
loope
(bad)
push
cmp
loopne
mov
cmps
sar
test
inc
jl
sbb
imul
xor
cmc
clc
in
or
in
imul
ficom
sbb
lock
ret
xchg
dec
cmc
dec
push
sub
cmc
jge
add
int
adc
(bad)
inc
mov
push
imul
pop
cwde
sub
adc
pop
adc
mov
and
xchg
mov
mov
ins
sub
cmc
dec
out
cmp
fild
(bad)
(bad)
inc
hlt
mul
jnp
clc
sbb
adc
cli
aam
loop
mov
mov
or
(bad)
call
cld
sub
dec
aad
rcl
lar
dec
jp
jp
fcomip
mov
cmps
add
push
(bad)
cld
lods
push
aas
dec
lock
in
jne
mov
push
cwde
cwde
inc
jmp
cmp
pop
mov
fimul
ret
stos
test
call
cld
adc
and
inc
mov
cmp
xor
mov
call
(bad)
pop
cs
push
jo
mov
aaa
cld
call
mov
mov
ror
push
xchg
adc
test
(bad)
sti
push
adc
js
push
pop
call
pop
mov
ror
retf
jb
add
in
sub
sbb
(bad)
(bad)
in
xchg
jmp
inc
mov
mov
dec
cmp
mov
push
mov
lods
inc
add
out
cdq
dec
inc
out
outs
cli
(bad)
inc
add
adc
pop
movs
xor
in
xor
neg
je
inc
pusha
ss
(bad)
(bad)
(bad)
(bad)
fmulp
rcl
sbb
push
xlat
retf
xchg
ret
pop
inc
mov
pop
je
mov
pop
(bad)
(bad)
(bad)
jmp
or
push
jb
mov
daa
dec
jae
es
mov
daa
cld
in
cmp
mov
pop
loopne
jmp
and
sbb
or
in
mov
mov
rcr
cmp
aaa
std
(bad)
jns
jmp
dec
or
out
and
(bad)
ds
dec
sub
cmps
push
sbb
(bad)
(bad)
jmp
neg
ror
pop
adc
cmps
mov
inc
mov
int
clc
push
jle
jb
addr16
pop
dec
mov
(bad)
(bad)
dec
xor
test
pop
jnp
dec
xor
jmp
pop
daa
call
loope
mov
popa
das
mov
jecxz
iret
pop
and
aas
pop
or
inc
ret
mov
cld
(bad)
jmp
inc
mov
test
mov
inc
xor
and
jne
rcl
push
clc
dec
inc
xchg
xor
or
lods
aad
fbld
call
pop
out
not
xchg
cmp
inc
add
data16
push
add
loop
pop
fwait
jg
(bad)
inc
data16
(bad)
pop
push
icebp
cmp
mov
fs
jbe
(bad)
test
or
(bad)
inc
test
cmp
popf
jmp
mov
ret
jmp
or
sahf
aam
dec
movs
ss
cmps
pop
(bad)
dec
fstp
jne
cmps
(bad)
(bad)
(bad)
dec
(bad)
mov
(bad)
push
lea
or
(bad)
call
pop
inc
mov
mov
fld
jle
int
bound
mov
jmp
sub
nop
cmp
jecxz
pop
xchg
adc
mov
(bad)
call
out
lds
cmps
outs
in
adc
mov
aad
call
bound
(bad)
pop
es
inc
and
xchg
(bad)
(bad)
(bad)
in
inc
or
mov
mov
jb
je
mul
xor
fmul
call
(bad)
(bad)
dec
cld
enter
pop
(bad)
inc
jb
test
(bad)
or
cdq
xlat
(bad)
(bad)
fbstp
in
sahf
push
aam
in
mov
gs
adc
mov
aaa
jmp
xor
cmp
mov
jmp
push
mov
sbb
pop
cli
jge
sub
adc
jmp
mov
call
popa
add
or
push
int
mov
in
xchg
stc
dec
shl
fs
icebp
adc
(bad)
call
adc
mov
stc
sub
pop
bswap
adc
stc
pop
gs
sbb
(bad)
(bad)
(bad)
fst
int3
mov
pop
mov
fdiv
mov
mov
loop
inc
cli
(bad)
dec
out
or
lds
mov
sar
cmp
mov
cmp
cmp
cmc
lods
and
(bad)
call
out
mov
cmp
pushf
jae
pop
pop
neg
int3
into
cmps
iret
aad
in
sbb
mov
jo
adc
inc
jg
pop
inc
jns
jmp
pop
cmps
fnstsw
pushf
retf
ficom
mov
scas
(bad)
(bad)
(bad)
dec
dec
and
out
sbb
std
and
dec
out
pop
jmp
fidivr
sub
mov
cmp
mov
ja
call
cld
dec
mov
rcr
fnsave
test
call
hlt
inc
xor
lock
movs
mov
mov
les
jmp
out
xor
out
popf
inc
faddp
pop
and
ret
jae
cmp
repz
inc
adc
inc
shl
sub
pop
jno
add
xchg
add
es
lods
or
(bad)
inc
in
stos
add
dec
or
out
pop
dec
pop
push
xchg
shl
jl
mov
iret
or
outs
bswap
int3
jle
xor
iret
(bad)
call
pop
mov
(bad)
jg
mov
(bad)
jge
(bad)
mov
enter
popa
lahf
popa
cmp
push
sbb
(bad)
popf
sar
(bad)
call
dec
push
fisubr
xor
sbb
(bad)
gs
dec
xchg
scas
scas
dec
mov
(bad)
(bad)
(bad)
jmp
push
dec
into
cwde
add
xchg
inc
out
movs
mov
jb
xchg
mov
sub
jmp
xchg
push
clc
inc
jmp
mov
mov
inc
cmp
out
inc
fild
in
dec
mov
arpl
jo
inc
(bad)
(bad)
jg
outs
cmp
push
imul
mov
mov
icebp
jge
lods
cs
xchg
(bad)
(bad)
push
pop
inc
call
fnstcw
mov
push
test
loope
or
ret
or
add
dec
(bad)
(bad)
(bad)
jmp
push
aad
push
mov
cmp
movs
sub
daa
dec
pushf
mov
packuswb
mov
xor
add
push
in
lahf
call
push
adc
mov
call
(bad)
(bad)
(bad)
dec
dec
dec
loop
mov
xlat
mov
mov
mov
outs
mov
das
and
dec
shl
dec
rcl
jge
call
mov
test
fidiv
xchg
mov
jns
call
(bad)
(bad)
fistp
mov
fdivr
adc
mov
cmps
pop
push
adc
jle
mov
sti
inc
sbb
sbb
inc
push
out
jbe
add
call
std
xchg
ja
cmp
mov
jmp
mov
add
fwait
pop
pop
inc
adc
push
cmp
mul
call
pop
aas
mul
sbb
mov
cmp
push
out
(bad)
in
shl
pop
(bad)
(bad)
(bad)
jg
pop
rol
cli
pop
add
ins
mov
push
xlat
xchg
icebp
imul
inc
stc
test
ins
mov
inc
(bad)
pop
sub
imul
in
test
(bad)
(bad)
(bad)
jmp
popf
ss
inc
dec
retf
mov
mov
(bad)
(bad)
stc
(bad)
ja
sahf
imul
(bad)
(bad)
call
ret
mov
rcr
iret
and
cmps
jb
loop
push
sbb
sbb
(bad)
repnz
(bad)
(bad)
mov
or
sub
pushf
dec
mov
inc
hlt
dec
add
in
sahf
push
adc
outs
clc
jg
add
or
xchg
xchg
sub
(bad)
cmp
push
pop
or
cld
and
retf
mov
jl
or
repz
inc
stos
dec
sbb
je
mov
mov
inc
call
jg
inc
ret
mov
sub
es
jb
(bad)
(bad)
call
inc
cmp
int
xchg
mov
in
cs
xor
and
adc
movs
mov
int3
lock
sub
(bad)
(bad)
(bad)
aas
stc
cmps
fistp
add
mov
jg
xor
les
std
push
les
push
push
push
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
add
pop
push
xor
inc
mov
xchg
inc
or
or
stc
scas
mov
pop
fst
push
cmp
push
xchg
gs
jp
test
daa
inc
xchg
(bad)
(bad)
aas
lds
xchg
mov
ja
mov
jl
data16
(bad)
(bad)
inc
and
std
pop
not
in
loopne
loop
jb
xchg
jb
out
jmp
xchg
inc
mov
push
popa
sub
gs
frstor
cmp
pop
cmp
xchg
inc
xor
outs
pop
mov
jae
sar
dec
jb
sub
or
and
jp
sub
xchg
xor
jne
inc
(bad)
or
aaa
adc
push
and
inc
das
test
popf
out
(bad)
(bad)
(bad)
call
mov
xchg
jmp
add
icebp
cs
pop
call
(bad)
(bad)
jg
mov
xor
jo
push
dec
cs
rcr
outs
xchg
icebp
repnz
neg
mov
movs
lods
cmps
sub
in
add
pop
cmps
movs
mov
add
dec
pop
and
fidiv
mov
jmp
out
dec
neg
xchg
cs
out
inc
inc
pop
stos
push
ret
ins
or
daa
fisubr
cwde
push
push
push
push
dec
(bad)
(bad)
(bad)
call
mov
and
fiadd
loop
dec
pop
cmp
repz
jbe
out
fnstsw
mov
fsub
fisttp
inc
jns
mov
int3
movs
(bad)
jmp
clc
push
inc
jnp
call
lea
into
daa
shl
push
pop
pop
jbe
push
addr16
inc
xor
ret
lods
inc
mov
(bad)
(bad)
dec
(bad)
packssdw
xchg
js
and
jle
jno
imul
(bad)
(bad)
inc
xchg
xchg
pop
test
xchg
into
fwait
add
hlt
bound
adc
ret
jno
sub
inc
mov
loop
inc
xor
loop
cmp
xor
hlt
ss
addr16
(bad)
(bad)
(bad)
(bad)
dec
retf
adc
add
enter
mov
shl
pop
imul
(bad)
call
inc
test
das
ds
lods
add
cmc
pop
sub
pop
pop
inc
xor
gs
(bad)
(bad)
inc
out
dec
fbstp
push
jne
and
iret
and
je
adc
(bad)
(bad)
jmp
repnz
repnz
xor
lds
(bad)
out
lock
cdq
call
repnz
inc
cmp
mov
mov
or
shl
cmp
mov
loopne
mov
or
sbb
clc
sub
daa
push
fs
cld
das
clc
popw
imul
or
movs
ret
ja
jbe
dec
popf
not
(bad)
(bad)
(bad)
(bad)
sub
stc
out
pop
lods
xor
test
bound
aam
mov
shr
ffreep
popf
inc
(bad)
(bad)
(bad)
call
test
mov
fnstcw
(bad)
cmp
je
sbb
in
cmp
inc
stc
(bad)
(bad)
(bad)
(bad)
std
test
mov
dec
pop
sbb
sub
add
nop
push
add
mov
sub
(bad)
(bad)
(bad)
inc
dec
out
pop
in
sbb
sub
sar
pusha
fcomp
push
sbb
jmp
scas
int3
(bad)
call
(bad)
mov
leave
xchg
(bad)
outs
pop
push
pushf
sbb
pop
sbb
inc
fld
(bad)
(bad)
(bad)
push
push
inc
push
frstor
inc
xchg
pop
in
mov
pushf
aad
push
out
jae
dec
loope
dec
stos
jmp
add
(bad)
dec
dec
cli
mov
(bad)
js
pop
dec
test
es
push
inc
fcomip
(bad)
jmp
push
and
jo
out
sbb
dec
std
jmp
scas
call
aam
mov
sti
popa
jl
aad
adc
or
(bad)
inc
push
je
das
int
cmp
sub
(bad)
repnz
xchg
cdq
lods
aam
mov
push
std
mov
mov
test
bound
jo
mov
pop
cmc
(bad)
adc
cmp
pusha
pop
mov
jne
inc
pop
add
mov
std
or
aam
and
pop
call
(bad)
aas
fwait
sbb
push
sbb
or
xor
and
(bad)
(bad)
jg
mov
scas
dec
int
pop
xchg
jecxz
mov
into
cmp
dec
or
add
push
ret
(bad)
(bad)
(bad)
fadd
(bad)
sahf
js
iret
addr16
mov
ret
cli
push
ror
(bad)
(bad)
inc
dec
sahf
sbb
enter
mov
push
or
ja
sti
les
(bad)
sub
xchg
push
push
jmp
dec
push
mov
or
sbb
cmps
push
jl
rcl
ins
test
jmp
xor
sbb
daa
push
mov
stc
sbb
js
fsub
cmp
(bad)
cmp
sub
xchg
dec
popa
push
aas
test
push
dec
fcomp
(bad)
inc
add
test
xor
dec
or
xchg
rcl
rol
cmp
add
pop
icebp
adc
push
jmp
push
mov
cmp
stos
fidivr
mov
int3
jg
pop
iret
pop
icebp
pop
push
inc
(bad)
mov
cmp
es
push
icebp
loop
pop
iret
inc
(bad)
(bad)
(bad)
push
je
(bad)
mov
mov
push
call
sub
and
retf
ds
mov
call
gs
outs
mov
push
sar
cmp
rol
jmp
sub
push
les
push
jmp
lock
cmps
sub
sub
call
add
sub
cdq
push
stc
test
repnz
stos
mov
ret
xor
(bad)
(bad)
(bad)
jmp
pop
in
adc
cmp
pusha
loopne
jo
xor
add
dec
add
(bad)
(bad)
(bad)
inc
cmp
dec
call
lods
das
mov
arpl
loope
cmc
rcl
(bad)
aaa
mov
idiv
(bad)
(bad)
(bad)
push
inc
adc
stc
jb
inc
xor
mov
jp
ss
inc
js
mov
(bad)
(bad)
(bad)
dec
stos
xchg
ja
int
aam
int
mov
jnp
in
rcl
shl
(bad)
(bad)
xor
xchg
pop
mov
push
(bad)
push
and
dec
adc
int3
sbb
inc
sub
xlat
test
pop
or
or
cmps
mov
push
idiv
(bad)
cmp
(bad)
push
call
(bad)
cmp
jg
rol
in
or
in
or
xor
(bad)
(bad)
(bad)
jmp
or
cs
push
out
ja
pop
clc
jg
pop
inc
loope
inc
pop
sub
sub
pop
sbb
ds
dec
jg
jg
sub
std
pop
push
sbb
in
aas
icebp
(bad)
inc
and
sbb
(bad)
xlat
and
(bad)
or
in
push
push
jmp
fstp
and
popf
sub
mul
add
sar
dec
pop
in
fs
pop
aad
and
push
xor
inc
test
cmp
(bad)
jg
inc
dec
into
(bad)
mov
int3
sbb
cli
int
mov
call
push
(bad)
(bad)
(bad)
(bad)
cli
cmp
mov
movs
push
cmp
and
xchg
dec
cmp
mov
push
and
sar
sbb
push
adc
pop
ins
mov
cdq
jmp
mov
or
lea
sbb
pop
mov
data16
fild
fistp
push
aam
(bad)
(bad)
(bad)
dec
mov
mov
mov
add
(bad)
cmp
(bad)
xchg
mov
(bad)
push
or
cmps
xor
sbb
scas
(bad)
(bad)
(bad)
(bad)
jmp
jbe
sbb
jae
scas
sbb
cmc
in
sbb
cmp
adc
loopne
(bad)
in
aam
jmp
jne
dec
out
sub
sti
or
mul
retf
loopne
movs
jmp
push
dec
scas
and
test
fimul
or
aad
scas
cmp
dec
(bad)
(bad)
xchg
call
mov
ins
jecxz
das
clc
(bad)
call
hlt
loopne
push
xlat
push
out
mov
add
jge
aas
sub
iret
pop
sbb
(bad)
jg
call
xor
into
test
jmp
mov
in
push
push
sbb
(bad)
push
push
adc
js
fldcw
xor
sub
mov
aaa
scas
fldenv
(bad)
dec
aam
xchg
out
push
sbb
mov
(bad)
mov
add
(bad)
push
pusha
jmp
pop
xchg
lahf
rcr
in
je
pop
xlat
test
inc
add
pop
rol
sub
jmp
fbstp
add
out
popf
idiv
repz
pop
sub
ss
inc
cmp
mov
das
jp
push
movs
int
cdq
push
out
inc
(bad)
(bad)
push
jmp
lds
sbb
das
mov
(bad)
call
aam
test
outs
pop
xchg
add
fstp
xor
xlat
std
(bad)
(bad)
(bad)
dec
push
outs
jno
clc
dec
popa
outs
stos
loop
ins
ret
mov
push
push
test
jmp
mov
cmp
and
lahf
sub
cld
(bad)
(bad)
push
jle
bound
es
pop
jmp
loop
dec
bound
mov
jg
add
cmp
(bad)
mov
(bad)
(bad)
call
push
jg
cmps
push
xor
cli
cmp
jno
cs
push
sahf
test
stos
xor
pop
packssdw
cmps
(bad)
(bad)
jmp
sub
js
or
jmp
pop
(bad)
(bad)
push
call
(bad)
(bad)
jmp
dec
dec
(bad)
es
mov
in
sub
faddp
test
ror
call
cmp
ret
retf
test
icebp
adc
(bad)
das
inc
addr16
(bad)
(bad)
(bad)
jmp
lds
mov
mov
xor
out
jp
sub
mov
xor
(bad)
(bad)
(bad)
jmp
movs
repnz
mov
push
iret
or
lds
or
jae
xor
push
mov
aas
fimul
or
call
int3
clc
pop
(bad)
cli
jle
jb
mov
push
(bad)
(bad)
(bad)
jmp
inc
xchg
cs
jns
jae
or
ins
mov
pop
test
frstor
cmp
jnp
(bad)
lahf
(bad)
(bad)
(bad)
jmp
xchg
std
(bad)
iret
sub
xchg
fmul
cmp
pusha
cmps
sbb
sbb
jo
push
xchg
jae
inc
rcl
aaa
mov
cvtps2pd
div
adc
imul
je
or
and
jmp
cs
xor
out
(bad)
pushf
dec
push
(bad)
dec
sahf
lea
inc
ret
ret
retf
mov
pop
mov
retf
(bad)
(bad)
(bad)
call
lds
mov
xor
jle
sbb
sahf
jnp
aas
movs
outs
add
xchg
(bad)
outs
pop
popa
and
jecxz
push
jno
xchg
sub
mov
jl
repnz
mov
hlt
and
call
push
mov
bswap
icebp
mov
add
push
inc
pop
aaa
pop
add
nop
out
(bad)
jo
xchg
pusha
xor
push
sahf
stos
out
mov
rol
cmp
sti
sub
data16
add
rcl
xor
cs
inc
cdq
and
(bad)
(bad)
(bad)
inc
jle
retf
and
inc
push
jnp
inc
push
sub
out
iret
push
js
hlt
xor
rol
(bad)
inc
and
jl
fadd
popf
in
jo
not
(bad)
push
cmps
push
push
add
(bad)
jmp
and
cmc
push
xor
aas
pusha
add
in
dec
or
cmp
(bad)
(bad)
call
dec
and
aad
xchg
call
xchg
ins
jns
aad
mov
or
mov
(bad)
(bad)
(bad)
push
adc
movups
jno
cmp
dec
and
enter
fnstcw
cmp
(bad)
(bad)
(bad)
inc
shl
stc
mov
mov
jbe
fyl2xp1
pop
jno
bound
pop
(bad)
rol
push
lds
sbb
std
call
dec
dec
jo
aas
xor
jnp
cmp
(bad)
jg
mov
call
out
mov
mov
aas
pop
cmp
xchg
mov
ret
mov
(bad)
(bad)
push
(bad)
ins
nop
sub
ss
sub
in
call
repnz
dec
jne
sti
push
(bad)
(bad)
(bad)
dec
cmps
mov
pop
sbb
clc
jp
sbb
xchg
cmps
adc
cmp
mov
fcmovnu
jno
js
jge
mov
retf
mov
js
mov
(bad)
(bad)
(bad)
call
adc
sbb
into
rcl
stc
cs
lahf
loope
push
lock
push
jle
test
sub
fsubr
(bad)
out
inc
(bad)
(bad)
jg
bound
pop
(bad)
dec
and
adc
push
aaa
xchg
jmp
adc
sub
or
pusha
data16
jmp
xchg
pop
fsubp
loope
mov
loop
stc
out
dec
(bad)
push
fild
test
jmp
xchg
outs
inc
sub
pusha
and
gs
cmp
jne
xchg
sub
inc
mov
push
dec
jg
xchg
mov
mov
jg
scas
stc
cwde
(bad)
(bad)
(bad)
call
in
test
mov
cld
popa
jecxz
push
push
ror
repz
daa
shl
dec
xor
(bad)
(bad)
(bad)
jmp
rcr
scas
xchg
xchg
jp
daa
fnstcw
cmp
shl
test
ja
call
out
hlt
xchg
inc
out
jg
dec
arpl
mov
cmp
mov
(bad)
(bad)
(bad)
call
fistp
call
mov
add
mov
jnp
lea
fisubr
push
cld
jmp
xchg
outs
cdq
stos
out
cli
pop
iret
inc
nop
jo
dec
jle
pop
int3
jge
mov
ins
je
mov
out
sub
fcomp
sbb
cmp
adc
adc
test
mov
dec
mov
jns
xor
(bad)
(bad)
push
sbb
jecxz
mov
add
pop
jbe
out
sahf
add
inc
daa
pop
test
add
(bad)
(bad)
(bad)
jmp
sub
push
movs
or
movs
retf
loop
jno
jne
sbb
cwde
push
adc
adc
and
(bad)
call
je
daa
mov
and
cmp
cmp
jne
or
jmp
(bad)
call
xchg
xchg
ret
push
xlat
pop
xchg
xor
call
mov
sbb
mov
es
aas
(bad)
(bad)
(bad)
call
js
sbb
and
bound
xchg
cs
outs
outs
cmp
(bad)
(bad)
(bad)
fnstcw
clc
cmp
aas
ror
not
fstp
fadd
(bad)
cmp
sub
(bad)
(bad)
jg
cmp
arpl
xchg
shr
cmp
out
or
das
mov
jns
fild
inc
sbb
fsin
stos
xor
xchg
cmp
sub
(bad)
mov
jnp
push
add
pop
inc
(bad)
(bad)
mov
adc
pop
shr
mov
cmp
(bad)
(bad)
inc
push
inc
cmp
and
jae
xor
jge
imul
inc
pop
jmp
mov
clc
pop
rcr
cwde
icebp
aam
(bad)
fidivr
hlt
mov
ss
dec
out
(bad)
(bad)
(bad)
inc
mov
loopne
fwait
pusha
jbe
dec
out
es
ret
repnz
pop
shl
jp
fdivr
cmc
daa
push
cmc
jp
cli
push
xchg
(bad)
arpl
cwde
jmp
cmp
gs
xchg
pop
(bad)
(bad)
(bad)
mov
scas
fwait
sahf
gs
loopne
and
add
pop
fcmovnbe
mov
xchg
retf
push
(bad)
(bad)
dec
push
out
pop
sub
xor
ss
jno
mov
(bad)
call
cdq
or
ror
pop
imul
or
sti
mov
aad
repnz
iret
jae
(bad)
jg
das
mov
ret
mov
add
popa
push
(bad)
cmps
ins
jnp
cld
loope
imul
(bad)
jmp
jbe
xor
push
fwait
sbb
cmp
mov
scas
in
xchg
loope
add
xlat
aaa
cld
(bad)
push
inc
sub
jmp
pop
std
jns
dec
push
jmp
mov
in
clc
icebp
mov
mov
xor
(bad)
scas
adc
pop
pop
add
(bad)
fcomip
stos
inc
repnz
(bad)
cmp
rol
xor
add
leave
sub
sbb
lahf
call
iret
fistp
test
jecxz
sbb
lods
es
adc
test
inc
cmps
push
aas
test
sbb
cmp
add
cmp
or
(bad)
rol
aam
iret
push
repnz
mov
repz
outs
test
jg
push
enter
adc
or
jle
(bad)
out
xor
push
or
or
jns
xor
or
mov
(bad)
(bad)
(bad)
call
(bad)
js
fistp
retf
pop
inc
fwait
xchg
hlt
mov
or
lahf
(bad)
(bad)
(bad)
push
inc
or
out
add
dec
dec
je
fild
inc
jne
ins
sahf
jmp
clc
(bad)
(bad)
mov
or
or
jmp
push
dec
(bad)
(bad)
jmp
mov
add
aas
imul
outs
mov
push
(bad)
(bad)
(bad)
jmp
sub
sbb
xchg
idiv
push
push
mov
jbe
mov
push
push
scas
sbb
add
call
out
jmp
cld
imul
int
int
lods
sbb
push
push
push
push
push
mov
movs
scas
rcr
inc
cli
movs
je
shr
adc
push
sub
mov
(bad)
fstp
jbe
jecxz
jecxz
xchg
adc
pusha
push
leave
sub
scas
retf
xchg
mov
mov
dec
jmp
fdiv
mov
movs
jg
rol
jl
mov
cmp
(bad)
xchg
aaa
out
int
(bad)
inc
adc
jp
sbb
out
pop
imul
je
iret
jo
jg
jmp
push
jns
mov
fidiv
mov
push
in
(bad)
(bad)
out
mov
into
mov
jo
(bad)
(bad)
(bad)
push
cmp
mov
int3
push
adc
rol
add
pop
pop
jns
hlt
sar
(bad)
push
imul
jmp
scas
adc
iret
cmc
cmp
inc
iret
fld
adc
pop
or
or
jbe
iret
icebp
into
repnz
pop
iret
mov
clc
call
(bad)
(bad)
(bad)
jmp
pop
in
add
ficomp
cmc
retf
adc
(bad)
jge
cmp
mov
fwait
xlat
lods
clc
jns
xchg
(bad)
(bad)
inc
pop
bound
or
cli
ds
lods
pop
ins
or
lock
pop
sbb
cmps
cs
xchg
sar
sbb
sbb
mov
cdq
pop
mov
dec
aas
cld
call
ss
jne
jmp
adc
push
ins
fisttp
pop
retf
jnp
je
jmp
mov
(bad)
mov
(bad)
scas
add
js
leave
jg
or
cmc
gs
call
pop
rol
pop
jmp
test
jmp
and
jle
add
aad
jp
retf
inc
scas
imul
rcr
out
fisttp
out
ds
(bad)
(bad)
jg
(bad)
fwait
push
fstp
and
mov
pop
outs
out
pop
fldenv
xchg
in
fst
ret
(bad)
(bad)
(bad)
(bad)
jo
xlat
mov
jg
test
jmp
in
mov
repnz
xchg
lock
xchg
pop
loop
dec
push
(bad)
cmc
neg
mov
std
(bad)
(bad)
(bad)
in
add
inc
out
mov
sub
inc
mov
not
dec
xchg
das
jmp
aam
(bad)
call
not
or
push
int3
pusha
fcomi
push
sbb
sbb
or
les
(bad)
(bad)
call
pop
pop
xor
retf
jmp
hlt
data16
into
test
(bad)
(bad)
dec
call
inc
mov
jl
outs
mov
data16
(bad)
dec
test
jbe
jmp
sub
mov
repz
(bad)
(bad)
inc
pusha
xor
mov
add
pop
xchg
jmp
jno
outs
dec
xchg
nop
lahf
loop
inc
(bad)
(bad)
(bad)
inc
out
inc
call
ret
pop
adc
not
pop
xchg
and
(bad)
(bad)
(bad)
inc
fiadd
sti
inc
pop
out
enter
sub
jecxz
fmul
push
xchg
mov
ss
cmp
ja
dec
inc
add
movs
cmp
add
xchg
(bad)
(bad)
(bad)
jmp
ret
xor
mov
inc
in
mov
rcr
pop
shr
pop
or
(bad)
(bad)
jmp
pop
or
push
adc
pop
fsubr
dec
sbb
sbb
jno
fs
int3
(bad)
(bad)
(bad)
(bad)
in
mov
shl
adc
push
or
xchg
pop
ss
mov
xor
(bad)
jg
dec
shl
sbb
adc
adc
stos
pushf
mov
adc
call
and
mov
cli
movs
movs
fs
mov
adc
test
jmp
adc
jl
jle
mov
dec
cmp
mov
fstp
cmc
(bad)
call
test
scas
(bad)
enter
or
jae
xchg
adc
mov
xlat
call
xor
popf
pop
inc
push
pop
aas
mov
ins
dec
fld
(bad)
(bad)
ficom
neg
mov
jns
sub
leave
cwde
test
(bad)
lock
in
(bad)
(bad)
(bad)
call
inc
mov
clc
imul
out
mov
(bad)
cs
adc
repnz
jmp
std
fucomip
imul
clc
cmp
test
inc
adc
xchg
pusha
outs
pop
and
adc
or
sbb
mov
(bad)
pop
add
mov
sbb
adc
aam
cs
jae
add
(bad)
(bad)
call
push
push
or
xchg
inc
hlt
and
or
inc
xchg
add
cmp
jmp
mov
mov
(bad)
mov
and
sub
nop
and
call
jmp
add
popf
out
jl
jno
(bad)
jae
(bad)
(bad)
call
loop
out
or
pop
in
call
(bad)
jne
(bad)
pop
cmc
mov
cld
pop
(bad)
(bad)
mov
dec
shl
popf
test
add
fcmovnb
mov
neg
mov
(bad)
call
pop
add
mov
adc
pop
loop
icebp
sar
retf
pop
clc
hlt
cli
repnz
push
(bad)
(bad)
(bad)
jmp
sbb
in
fiadd
xchg
(bad)
xor
scas
daa
fadd
(bad)
sub
icebp
out
inc
or
mov
test
fisub
adc
xor
sub
jg
test
push
add
cmp
(bad)
mul
leave
repnz
jp
js
clc
not
stos
in
loopne
mov
adc
xchg
adc
adc
inc
sbb
inc
mov
push
pop
inc
adc
(bad)
mov
inc
pushf
pushf
mov
sbb
add
mov
adc
push
in
test
sbb
(bad)
das
sar
sub
pusha
inc
std
mov
cmp
in
add
mov
(bad)
(bad)
cli
and
out
xor
and
pop
fisttp
sub
imul
xor
test
cwde
ss
scas
bound
and
sbb
add
dec
out
lahf
(bad)
(bad)
(bad)
(bad)
jnp
mov
inc
xor
cld
in
jb
je
sbb
mul
inc
or
call
cmp
push
or
add
xor
ficomp
mov
gs
sub
(bad)
(bad)
(bad)
(bad)
jle
dec
sti
cwde
iret
mov
dec
pop
mov
popa
pop
daa
test
sbb
push
xchg
and
add
xor
sub
dec
add
outs
cmp
int
and
cld
xchg
inc
and
cmp
out
pop
imul
add
push
retf
gs
bound
push
cdq
push
pop
(bad)
(bad)
(bad)
jmp
(bad)
lock
inc
adc
or
cmp
fnsetpm(287
push
gs
fnstenv
(bad)
cli
jmp
and
(bad)
(bad)
dec
mov
or
push
sbb
mov
fmul
das
mul
(bad)
call
retf
cmp
ret
jbe
jg
inc
and
das
mov
jg
mov
sbb
add
call
jmp
retf
call
(bad)
call
les
push
or
cmp
fwait
jns
or
ins
(bad)
jmp
hlt
sbb
mov
pop
add
inc
jg
sar
popf
xchg
jns
add
call
add
sub
(bad)
xchg
int3
sbb
cld
mov
inc
inc
pop
inc
addr16
in
jle
(bad)
(bad)
(bad)
jmp
clc
adc
and
pusha
les
out
pusha
cmp
sbb
jo
push
mov
adc
clc
jecxz
mov
and
aas
inc
push
xor
mov
int3
not
cmp
nop
int3
cmovp
cli
and
je
inc
adc
es
add
scas
mov
(bad)
(bad)
inc
fnstsw
and
mov
dec
test
or
pop
add
(bad)
(bad)
out
pop
mov
das
std
push
xor
aaa
(bad)
push
push
das
and
ror
cmp
(bad)
call
sub
dec
ret
clc
dec
inc
aam
inc
lods
test
fadd
fld
dec
jl
pop
and
inc
ins
aad
and
dec
adc
mov
pop
test
(bad)
popa
movs
out
dec
icebp
pop
enter
add
gs
sbb
hlt
daa
push
(bad)
(bad)
(bad)
in
jae
or
and
imul
jbe
outs
sub
sbb
cli
(bad)
jmp
popf
ins
nop
adc
sub
dec
sub
arpl
(bad)
jmp
push
test
mov
pop
sub
add
dec
(bad)
call
add
sahf
inc
icebp
push
gs
dec
rcl
or
outs
add
mov
inc
mov
pop
(bad)
pushf
fs
ret
out
jle
fsub
repnz
aaa
cld
ffreep
out
(bad)
(bad)
movs
mov
aad
xor
cli
(bad)
lock
sbb
add
pop
or
sub
pusha
push
shl
lods
pop
test
xchg
mov
cmp
or
inc
jo
outs
pusha
and
call
mov
(bad)
(bad)
(bad)
mov
inc
test
dec
jb
sbb
sub
imul
mov
loope
test
xchg
lods
jmp
add
test
aam
sbb
(bad)
(bad)
dec
dec
ret
arpl
jne
retf
sub
sbb
adc
inc
enter
xor
es
(bad)
jmp
push
adc
js
or
pop
adc
fmul
push
mov
(bad)
cmp
in
repz
sub
mov
shl
fucomip
ret
xlat
xor
jl
(bad)
(bad)
(bad)
mov
dec
sub
icebp
push
xor
lahf
adc
nop
pop
stos
loopne
mov
mov
mov
inc
push
pop
add
leave
popa
int3
jns
xchg
in
(bad)
mov
xor
(bad)
(bad)
dec
sbb
(bad)
adc
pop
add
into
push
mov
sub
repnz
push
ror
rcl
and
sti
sub
jo
jle
je
sar
(bad)
inc
aad
imul
adc
pop
pop
mov
xor
add
mov
and
(bad)
(bad)
inc
cmc
jns
and
sbb
and
inc
into
lods
xchg
add
sub
(bad)
call
pop
add
xor
push
mov
pop
cmps
in
ud1
cmp
sub
dec
sysret
(bad)
rcr
xor
xor
jbe
(bad)
ins
cdq
(bad)
(bad)
out
mov
lods
push
sbb
add
aam
test
fadd
loope
cmp
or
out
add
neg
in
(bad)
(bad)
call
mov
cmc
ins
push
js
push
or
ret
cmp
(bad)
(bad)
(bad)
push
pop
leave
push
shr
enter
push
jae
clc
and
xchg
test
mov
add
dec
push
adc
cmps
add
in
(bad)
cld
pop
mov
sub
mov
into
jmp
mov
repnz
punpckldq
push
hlt
sbb
jg
xchg
pop
lock
cmp
inc
mov
mov
enter
jge
into
fld
mov
add
jge
in
(bad)
(bad)
(bad)
dec
pop
icebp
rcl
aas
xchg
push
adc
repnz
fistp
cmp
test
out
xor
test
adc
(bad)
(bad)
inc
pushf
(bad)
loopne
pop
inc
mov
inc
and
cmp
nop
push
mov
inc
sti
pop
lods
sub
mov
add
pushf
jmp
clc
loopne
je
pop
mov
or
jle
cli
outs
push
and
gs
(bad)
dec
shl
mov
mov
scas
aam
mov
loopne
repz
(bad)
cmp
scas
mov
or
jns
lock
and
aad
inc
sbb
nop
(bad)
(bad)
aas
jmp
(bad)
daa
cmps
xor
mov
pop
add
or
jb
or
in
test
jo
dec
nop
cld
add
push
fxch
or
out
jns
in
or
inc
xchg
jo
in
pop
add
(bad)
(bad)
(bad)
inc
mov
pop
clc
sub
mov
xor
sub
(bad)
(bad)
(bad)
mov
stos
je
sub
rcr
ret
dec
ret
lods
js
(bad)
(bad)
dec
mov
sbb
pop
mov
adc
shr
fmulp
imul
mov
or
push
or
xchg
or
jg
push
les
in
xor
jae
sub
lock
xchg
adc
bswap
jnp
and
(bad)
jmp
lods
fptan
or
push
fwait
stos
iret
jmp
or
loope
mov
jmp
icebp
jg
ins
repz
inc
(bad)
jb
xor
pop
jo
adc
sbb
jg
jmp
js
inc
lock
into
js
jmp
mov
and
dec
or
inc
pop
dec
or
mov
hlt
(bad)
inc
push
leave
arpl
push
sbb
into
add
sbb
shr
mov
cli
add
popf
enter
jmp
push
push
shr
out
add
mov
push
or
bound
sbb
(bad)
call
adc
jmp
push
rcr
add
test
pop
inc
mov
adc
cmp
jg
inc
push
adc
cdq
add
mov
scas
lahf
loop
inc
lahf
xchg
cld
jge
dec
and
inc
jmp
loope
adc
adc
jge
mov
xchg
jl
inc
add
or
(bad)
(bad)
call
icebp
jmp
or
stc
les
scas
icebp
scas
add
rcl
sub
add
adc
movs
or
push
xor
inc
mov
inc
dec
add
ficom
pushf
and
ins
shl
jmp
loope
jp
stc
call
mov
pop
inc
shr
(bad)
(bad)
in
mov
test
push
call
cwde
push
adc
add
inc
inc
cld
add
xor
mov
into
jl
inc
(bad)
push
xor
push
add
add
dec
mov
cmp
inc
adc
fsubr
loopne
add
xchg
sub
adc
pop
shl
mov
ret
add
ret
(bad)
or
mov
jb
daa
aam
nop
or
inc
mov
push
dec
(bad)
push
dec
xlat
lock
or
mov
inc
cmp
(bad)
(bad)
inc
add
pop
imul
rol
lahf
mov
xchg
inc
popa
mov
cmovne
ds
cmps
mov
inc
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
neg
cmc
add
inc
imul
(bad)
popa
jo
data16
shr
ror
out
xor
inc
push
adc
pop
cld
mov
sbb
(bad)
(bad)
inc
sub
inc
jb
adc
mov
out
jno
iret
or
xor
(bad)
mov
mov
pusha
push
mov
cmp
or
jns
popa
pop
cmp
mov
xor
rcr
enter
cld
sub
adc
jmp
popa
xor
add
or
and
vminpd
(bad)
inc
(bad)
fwait
int
leave
inc
les
add
(bad)
add
pop
adc
pushf
movs
add
and
pop
retf
dec
test
ins
rcl
mov
std
sbb
clc
(bad)
(bad)
cmp
movs
test
inc
jns
adc
cmp
add
jmp
or
lea
outs
mov
and
mov
(bad)
call
js
pop
xchg
pop
mov
mov
sbb
arpl
jl
or
clc
cmp
jns
(bad)
(bad)
push
xor
aad
sbb
aad
inc
shl
mov
rol
fwait
mov
(bad)
(bad)
(bad)
jmp
xchg
lahf
cld
push
sub
jbe
ror
(bad)
jb
inc
adc
(bad)
push
retf
cmp
inc
lock
sub
adc
adc
xchg
(bad)
call
jo
lahf
push
je
std
repnz
icebp
mov
cmp
cli
add
inc
dec
enter
(bad)
push
stc
xor
(bad)
test
xchg
mov
dec
mov
inc
mov
(bad)
jge
push
mov
nop
pxor
mov
xchg
stos
sbb
inc
popa
xchg
mov
add
call
push
and
sbb
pop
add
mov
and
jnp
pop
dec
add
mov
xchg
xchg
(bad)
sub
(bad)
call
es
rol
ret
loop
cmp
inc
fbstp
push
push
xor
push
push
or
(bad)
push
loope
test
scas
aas
into
mov
nop
push
dec
jmp
push
in
loop
lds
call
xchg
sbb
(bad)
test
jecxz
fdivr
(bad)
(bad)
jg
mov
xchg
pop
aad
movs
adc
mov
mov
in
call
in
push
cmp
aas
xchg
xor
dec
mov
(bad)
pusha
call
mov
enter
push
cmp
(bad)
(bad)
inc
mov
stos
or
cmp
in
push
(bad)
lock
mov
pop
ja
and
aad
aad
test
cmps
clc
dec
ss
(bad)
dec
jbe
mov
daa
add
adc
push
xor
js
inc
add
out
jb
push
add
iret
and
fcomi
mov
xchg
aas
sub
and
and
mov
fbstp
mov
jg
or
cmp
adc
aas
jge
(bad)
call
loope
add
jne
adc
call
push
add
sub
pop
dec
pusha
push
nop
and
push
xchg
mov
test
cmps
and
(bad)
(bad)
call
sub
outs
fdivr
pop
shl
(bad)
mov
outs
xchg
and
stos
jmp
cmp
in
cmp
mov
hlt
stos
ss
add
(bad)
ins
stc
jo
fcom
lock
ror
cmp
hlt
popa
ds
in
adc
xor
(bad)
cmp
cmp
enter
cmc
xchg
out
or
out
mov
iret
lods
cs
(bad)
(bad)
push
sub
mov
mov
adc
adc
sbb
mov
sti
xor
arpl
repz
setns
bound
(bad)
fbstp
sti
ret
clc
push
jp
outs
nop
clc
jecxz
in
in
push
cmp
mov
mov
(bad)
(bad)
cmp
mov
mov
mov
jl
test
jae
add
(bad)
(bad)
inc
ror
cmc
cdq
push
xchg
xchg
sbb
movs
movs
popf
mov
rcr
(bad)
jmp
mov
xchg
or
jmp
hlt
inc
pop
mov
(bad)
(bad)
mov
sbb
pop
repz
pop
addr16
push
sbb
das
add
aas
es
cld
add
test
push
ins
mov
lea
dec
push
push
push
push
adc
nop
jo
push
sar
pop
outs
dec
inc
inc
pop
jle
pop
push
pop
aaa
add
aad
jmp
stos
sbb
das
jl
pop
mov
int3
sub
cld
(bad)
cmp
packsswb
jmp
adc
xor
add
jmp
mov
(bad)
pop
adc
xor
inc
pop
and
call
icebp
lds
jmp
hlt
add
add
adc
cmc
fwait
(bad)
(bad)
cld
push
push
xor
or
jmp
lea
sar
add
push
test
sub
xor
shr
fnstcw
test
mov
sub
xor
mov
and
std
(bad)
(bad)
push
jnp
push
mov
adc
adc
push
clc
int
push
test
jg
xor
pusha
dec
mov
(bad)
inc
sahf
sub
cwde
gs
sbb
les
iret
shl
nop
fdiv
pop
(bad)
call
or
add
adc
cmc
into
sub
mov
adc
add
(bad)
(bad)
call
enter
aaa
cmp
jb
aad
je
and
sbb
nop
loopne
xor
sbb
out
(bad)
(bad)
push
cs
push
arpl
dec
add
or
jle
lahf
into
pop
inc
dec
(bad)
(bad)
(bad)
(bad)
mov
or
push
in
push
fsub
push
xor
enter
inc
(bad)
(bad)
(bad)
cmp
xchg
xor
and
jmp
add
outs
ret
cmp
and
(bad)
(bad)
(bad)
push
(bad)
pop
mov
mov
adc
mov
add
xor
jo
push
(bad)
(bad)
push
out
fsubr
fiadd
xchg
jle
test
add
ret
or
aas
fdiv
lds
inc
(bad)
(bad)
(bad)
call
not
ret
pop
icebp
inc
sbb
fistp
call
inc
or
gs
(bad)
(bad)
call
inc
push
outs
stc
test
mov
leave
addr16
or
(bad)
ret
gs
xor
aaa
cmp
mov
sub
inc
ret
push
lea
push
mov
(bad)
(bad)
(bad)
(bad)
jns
enter
inc
sbb
(bad)
jg
aas
sbb
inc
mov
add
cmp
jae
lock
call
mov
stos
xor
mov
mov
cmp
(bad)
jmp
sar
sahf
adc
push
mov
jg
iret
fldenv
or
(bad)
(bad)
push
jge
mov
cmp
ud0
cdq
cli
dec
pop
add
sub
(bad)
(bad)
push
cs
and
and
jg
inc
icebp
movs
lahf
push
mov
lock
(bad)
add
cs
(bad)
cdq
fwait
loope
lods
(bad)
dec
outs
cmp
retf
fsubr
imul
and
jg
sub
jae
cmps
xor
jnp
(bad)
in
cwde
ins
jns
inc
xchg
bound
xchg
data16
mov
pop
out
int
repnz
push
(bad)
rol
(bad)
(bad)
(bad)
call
adc
lock
cmc
pop
pop
inc
stos
adc
retf
xor
and
pop
pop
and
or
call
clc
js
in
je
inc
pop
sbb
ret
pop
clc
sbb
sub
into
clc
pop
inc
into
jae
cmps
repz
xchg
pop
and
clc
arpl
outs
aad
push
dec
(bad)
jmp
loope
push
shl
in
pop
adc
cmp
aaa
movs
pop
call
(bad)
test
push
call
jg
fidiv
add
(bad)
sbb
test
pop
xchg
mov
sar
fs
gs
mov
(bad)
push
jbe
out
sbb
in
xlat
sub
cli
jmp
or
dec
test
sbb
push
mov
jmp
shl
repnz
xor
mov
or
jns
stc
push
mov
sbb
pop
(bad)
sti
les
aad
push
mov
out
clc
xchg
adc
xor
int3
inc
jmp
push
call
fisub
das
enter
jge
inc
(bad)
(bad)
(bad)
mov
mov
outs
mov
inc
ficomp
cmc
cmp
cmc
jne
mul
pop
dec
(bad)
stos
fs
push
ret
or
call
popa
and
loope
cld
pop
movs
(bad)
dec
mov
mov
lahf
pusha
push
les
cli
outs
pusha
push
cld
(bad)
call
call
pop
pop
xor
pop
movs
pop
mov
inc
jmp
pop
or
jg
cdq
mov
lea
cwde
or
lock
(bad)
mov
add
adc
or
ja
sbb
int
test
jmp
repz
in
pop
push
xor
repnz
(bad)
(bad)
(bad)
mov
int
jo
int3
repz
and
add
cwde
adc
push
cmp
nop
imul
mov
mov
cli
jp
cmp
aaa
sbb
xchg
mov
mov
sahf
popf
repz
(bad)
call
push
adc
es
sub
(bad)
dec
(bad)
sub
aad
jle
xor
push
cmp
sti
mov
inc
pop
aas
cmps
pop
add
rcr
add
fisubr
js
into
das
test
cmp
add
adc
or
mov
div
mov
out
in
push
fs
data16
mov
(bad)
(bad)
call
adc
(bad)
sbb
gs
aaa
in
sbb
out
data16
or
jg
(bad)
jg
outs
outs
popa
push
dec
dec
or
into
cmps
add
test
adc
sar
dec
mov
data16
nop
ds
test
mov
pop
test
push
xchg
push
(bad)
(bad)
jnp
mov
sahf
loop
push
add
mov
addr16
and
adc
aad
ud2
jg
dec
call
add
or
std
push
clc
loope
lock
shl
js
add
dec
push
lods
add
(bad)
mov
rcl
adc
mov
dec
adc
clc
add
mov
bound
test
inc
(bad)
(bad)
(bad)
push
fild
add
cmp
add
add
sbb
pop
lods
xor
sub
mov
push
jmp
jae
and
jp
inc
adc
rol
inc
xor
dec
imul
jle
out
(bad)
(bad)
(bad)
dec
dec
ffreep
sbb
add
mov
cmc
lods
add
sub
xor
jle
and
(bad)
jg
xchg
jae
cmp
mov
idiv
cmps
push
or
or
or
xchg
xchg
mov
(bad)
mov
inc
shr
sbb
shr
(bad)
(bad)
jg
dec
and
sub
loopne
ficom
adc
sub
cmps
and
(bad)
aas
lods
lea
in
add
mov
and
fbstp
imul
add
xchg
pop
jmp
add
(bad)
push
in
jmp
push
aaa
mov
mov
sbb
jg
sub
lock
aas
aaa
pop
push
or
dec
jp
in
js
(bad)
rol
(bad)
(bad)
push
stos
cli
call
aas
lea
mov
cli
cld
jg
sub
icebp
ds
(bad)
call
adc
xchg
cmp
pop
jb
inc
jno
cld
(bad)
jg
ret
(bad)
enter
push
push
xchg
js
(bad)
mov
add
test
sub
hlt
mov
stc
sbb
adc
(bad)
(bad)
mov
rol
add
and
cmp
lock
lds
cmc
(bad)
inc
or
push
hlt
sub
call
cli
leave
xchg
je
lds
jg
xchg
std
push
cmp
xor
call
jne
inc
xor
pop
push
outs
pop
and
paddusb
or
adc
add
mov
cmp
call
loop
cmc
in
push
jg
cmps
ss
(bad)
(bad)
(bad)
(bad)
call
popf
jo
add
cmp
pop
fnstenv
xchg
rcl
repnz
int
nop
cwde
(bad)
(bad)
(bad)
call
pop
add
mov
pop
jo
(bad)
cld
add
sub
add
enter
add
xchg
rcl
pop
xor
pusha
and
cmp
rcr
mov
xchg
jg
(bad)
call
lahf
in
int3
popf
outs
mov
pusha
ret
or
inc
sbb
xchg
and
mov
sbb
jge
(bad)
(bad)
dec
popa
inc
push
lods
mov
sti
mov
mov
push
jne
hlt
jecxz
jmp
inc
imul
push
pop
or
out
jbe
aad
mov
imul
inc
fnstcw
rol
ja
addr16
mov
cmp
sub
inc
lahf
aaa
lahf
into
mov
push
scas
vcvtps2pd
call
pop
jmp
lock
fwait
std
dec
cmp
fsubr
je
std
fdivr
in
cdq
and
out
(bad)
(bad)
(bad)
call
and
fisttp
fisub
mov
lods
and
xor
adc
(bad)
(bad)
(bad)
inc
not
push
dec
mov
js
test
add
adc
dec
push
in
inc
ja
fwait
xchg
das
sub
push
js
cmp
push
adc
cvttps2pi
(bad)
(bad)
mov
out
dec
pop
jnp
daa
and
pop
hlt
bound
daa
idiv
sar
(bad)
(bad)
(bad)
jmp
(bad)
cmp
adc
cmp
movs
mov
pop
push
(bad)
(bad)
(bad)
(bad)
mov
and
or
sub
xor
cmc
sbb
mov
mov
adc
dec
mov
dec
add
aaa
hlt
mov
jmp
sti
lock
jmp
mov
(bad)
dec
fidiv
push
int3
lods
loope
jo
ret
nop
mov
fld
(bad)
inc
adc
push
sub
sub
(bad)
sti
mov
stos
mov
std
jb
pop
(bad)
dec
ja
int
inc
jg
lock
or
(bad)
call
pop
in
push
(bad)
xor
push
test
jmp
popf
iret
sbb
rcl
xchg
lods
mov
(bad)
(bad)
cli
aaa
aad
cmp
jmp
sub
jmp
cld
jl
push
ins
pop
loope
mov
jl
sahf
cmps
(bad)
(bad)
(bad)
dec
cli
or
pop
(bad)
fwait
sub
jle
and
jl
xchg
and
test
stc
jno
cmp
(bad)
jns
sub
mov
xchg
mov
pop
fsub
jns
mov
scas
test
(bad)
(bad)
dec
icebp
sub
test
jnp
jae
pop
ins
and
inc
lods
stos
in
test
mov
outs
inc
das
(bad)
jmp
(bad)
adc
fsub
mov
xor
(bad)
(bad)
out
clc
dec
jns
jle
jnp
in
mov
stos
cmc
cs
and
cli
(bad)
(bad)
(bad)
jmp
cmps
xchg
dec
cwde
sbb
mov
dec
pop
inc
cwde
sbb
(bad)
cs
mov
icebp
fwait
sub
out
inc
outs
retf
movs
fst
jns
cld
out
scas
(bad)
(bad)
(bad)
mov
imul
loop
into
iret
(bad)
movs
adc
inc
arpl
jmp
(bad)
jmp
mov
test
jo
imul
repz
(bad)
(bad)
(bad)
(bad)
(bad)
jp
loope
sub
mov
jl
pop
inc
js
movs
fbld
mov
clc
icebp
xchg
jmp
pop
outs
dec
push
ds
jmp
xchg
jns
cmp
je
adc
stos
add
pop
into
add
sub
iret
pop
add
xor
(bad)
jmp
nop
scas
adc
pop
stos
cmps
xchg
les
or
pop
sbb
(bad)
(bad)
(bad)
push
mov
xchg
(bad)
or
cmp
mov
jmp
inc
popa
lds
xor
cmp
cmp
jo
xor
aam
sub
jmp
clc
jno
loop
leave
inc
pop
sub
ror
mov
dec
jb
adc
dec
in
leave
add
int3
shr
(bad)
(bad)
(bad)
inc
add
pop
sbb
cmp
jbe
jo
je
test
cmp
jecxz
leave
mov
(bad)
call
mov
fdivr
dec
cmp
in
fiadd
pop
mov
mov
in
or
add
(bad)
push
or
fild
mov
xor
or
or
das
mov
push
gs
add
xor
xlat
push
daa
sbb
jg
(bad)
mov
xchg
ja
sbb
nop
and
(bad)
(bad)
(bad)
(bad)
out
idiv
(bad)
or
jle
sub
cmp
xchg
mov
nop
jmp
jae
(bad)
mov
je
mov
fidivr
pop
mov
in
cmc
ss
pop
mov
sub
mov
mov
xchg
test
out
dec
jge
les
fistp
(bad)
jmp
cmp
inc
dec
push
push
fstp
les
std
(bad)
(bad)
push
cwde
lods
fwait
inc
(bad)
loopne
adc
icebp
cmp
pop
fsubr
in
outs
sub
outs
clc
push
shr
call
jg
dec
jno
mov
mov
mov
mov
xor
push
cmps
cmps
fsubr
push
push
scas
out
pop
(bad)
(bad)
(bad)
(bad)
mov
cmp
fdiv
dec
icebp
leave
push
pop
fdiv
cld
mov
(bad)
(bad)
dec
mov
(bad)
jge
adc
hlt
repz
dec
repnz
sbb
scas
mov
jl
das
jle
pusha
pop
nop
arpl
gs
add
(bad)
(bad)
(bad)
cmp
jno
push
pop
shl
data16
addr16
push
fidiv
fdivr
in
push
push
mov
(bad)
(bad)
(bad)
in
dec
adc
gs
div
pusha
mov
sub
out
mov
dec
ins
stos
xchg
cmp
out
popf
jns
adc
jmp
mov
mov
and
les
shl
xchg
and
imul
ins
adc
ret
lods
and
imul
xchg
adc
sahf
fadd
lea
addr16
test
jle
std
(bad)
(bad)
(bad)
push
pop
shl
or
xchg
retf
(bad)
mov
xor
test
(bad)
xchg
pop
pop
cmc
(bad)
push
xchg
mov
xchg
mov
call
xlat
(bad)
mov
cmp
lea
pop
cmps
les
add
hlt
(bad)
(bad)
(bad)
(bad)
out
fcmovne
and
inc
aam
hlt
(bad)
(bad)
movs
xlat
ins
or
mov
jle
sar
fild
adc
cmp
cs
dec
(bad)
(bad)
(bad)
dec
jns
inc
xchg
add
cmp
cld
pop
jmp
popa
mov
dec
jnp
aad
sbb
mov
cdq
inc
fwait
(bad)
(bad)
xchg
cli
mov
mov
xchg
in
je
(bad)
(bad)
push
adc
test
cmp
pop
dec
mov
ret
in
icebp
(bad)
lods
cmp
mov
(bad)
(bad)
(bad)
inc
xor
xchg
jecxz
shr
and
cmp
cli
dec
ja
or
mov
(bad)
jmp
and
pop
xlat
jmp
pusha
aas
dec
into
inc
pop
rep
cmc
sahf
pop
(bad)
xchg
mov
jnp
jb
(bad)
aam
(bad)
(bad)
(bad)
(bad)
(bad)
out
xor
mov
jne
mov
ins
adc
sbb
scas
cmp
dec
mov
cmps
ja
(bad)
(bad)
(bad)
dec
es
out
cld
outs
jmp
adc
aad
rcr
bnd
arpl
imul
jmp
out
mov
mov
sbb
pop
xchg
call
mov
cwde
call
(bad)
mov
mov
sub
aaa
(bad)
mov
inc
mov
xor
fidiv
in
xchg
cli
jns
push
cld
(bad)
jmp
cmps
mov
loopne
dec
adc
xor
sub
cmp
(bad)
jg
call
push
scas
stos
shr
ins
mov
dec
jne
mov
icebp
int3
shr
(bad)
mov
xchg
int
mov
xlat
or
mov
retf
sub
(bad)
(bad)
(bad)
dec
lods
in
lds
or
dec
mov
pop
push
dec
cld
mov
retf
mov
or
sub
(bad)
(bad)
(bad)
jmp
add
inc
(bad)
loop
sbb
fs
inc
rol
jnp
mov
mov
cmp
pop
push
sub
mov
fidiv
scas
or
fdivp
mov
lahf
inc
ins
das
retf
fwait
jg
inc
inc
add
add
add
add
pop
xchg
cmps
aaa
inc
test
xor
dec
pop
xor
mov
xlat
leave
or
outs
(bad)
(bad)
(bad)
(bad)
push
inc
mov
sub
lea
xlat
icebp
adc
cmp
scas
mov
call
adc
push
imul
mov
sbb
aas
imul
call
in
push
leave
sbb
jbe
fld
dec
push
cld
stos
sar
sahf
pushf
pushf
mov
xchg
or
pop
xor
std
jmp
mov
(bad)
jmp
icebp
loope
rcl
and
dec
dec
daa
push
movs
jno
cdq
xchg
movs
jns
sub
fdivrp
mov
aam
push
inc
ins
jne
pop
xchg
mov
and
push
mov
imul
and
pop
pop
dec
lea
push
jno
mov
dec
or
pop
sub
pop
mov
(bad)
call
mov
push
aas
in
jnp
pop
or
dec
xor
loopne
(bad)
mov
cmp
pop
xor
adc
cli
or
test
outs
mov
pop
pop
mov
(bad)
(bad)
push
(bad)
or
adc
jle
ffreep
mov
popf
call
arpl
fimul
xor
add
push
xor
pop
mov
fistp
fldlg2
loop
into
fisubr
xchg
lods
inc
out
inc
jmp
inc
jl
je
(bad)
lahf
retf
jp
aad
xchg
fst
jae
scas
(bad)
(bad)
(bad)
dec
push
lods
in
call
sbb
mov
jb
out
enter
jl
mov
(bad)
(bad)
(bad)
fisttp
fild
into
mov
popf
ins
lock
out
nop
retf
int3
es
imul
(bad)
(bad)
cmp
push
inc
pop
pop
pop
hlt
xor
xchg
fist
stos
sub
mov
xor
pusha
jnp
(bad)
(bad)
(bad)
cli
imul
sbb
in
cmp
shl
(bad)
out
add
repnz
into
into
sbb
test
pushf
scas
outs
add
xchg
(bad)
inc
jne
mov
sub
lahf
repz
ins
jp
bound
sub
(bad)
adc
lods
pop
add
fldenvw
hlt
stc
std
pop
sub
jecxz
enter
jmp
pop
inc
loopne
mov
arpl
mov
inc
lea
cmp
(bad)
jmp
fldenv
push
pop
ror
outs
push
xor
in
and
xor
pop
outs
addr16
aaa
std
cwde
fwait
loopne
mov
iret
aam
jnp
inc
push
sar
(bad)
call
lahf
inc
aas
jge
inc
scas
test
add
call
xor
(bad)
(bad)
jnp
mov
inc
cmp
daa
popf
icebp
repnz
pop
mov
inc
jno
dec
jg
call
enter
mov
cdq
dec
fidiv
dec
stos
ret
mov
adc
adc
cmp
movs
test
and
enter
les
xor
call
shr
jns
jmp
hlt
or
cmp
xchg
cli
mov
ins
or
(bad)
inc
test
or
and
(bad)
in
loope
xor
pop
push
std
nop
sbb
bound
(bad)
dec
push
cdq
xor
shl
lock
(bad)
push
cdq
test
jno
mov
mov
loopne
fst
lods
pop
mov
inc
stc
(bad)
repnz
cmp
cmc
(bad)
(bad)
clc
dec
inc
fisttp
jne
ins
sbb
and
into
shl
mov
mov
jg
call
ror
out
outs
and
(bad)
(bad)
(bad)
jmp
loope
mov
jge
xlat
cdq
jae
jmp
cs
mov
(bad)
(bad)
call
movs
jg
dec
pop
xchg
pop
loop
mov
pop
mov
fs
xchg
inc
mul
pushf
sub
ds
sbb
rcl
fnstenv
out
scas
xor
std
and
daa
fnstsw
(bad)
(bad)
(bad)
call
je
mov
outs
popa
adc
jge
xlat
jmp
push
cs
mov
int
mov
(bad)
(bad)
call
lods
fld
popa
arpl
mov
pop
pop
jl
xor
xlat
lods
leave
(bad)
(bad)
fild
inc
cmp
fchs
mov
xor
sbb
rcl
cmps
test
dec
dec
outs
leave
jmp
hlt
data16
(bad)
(bad)
sbb
iret
sbb
mov
cld
mov
ss
loopne
sbb
(bad)
jmp
mov
mov
repz
rcr
lods
call
lds
(bad)
cmp
xchg
ud1
jnp
mov
enter
(bad)
(bad)
jmp
xor
mov
aaa
pop
jae
mov
push
adc
xchg
in
scas
pop
scas
rcl
jl
jns
push
std
(bad)
jmp
into
retf
pop
mov
cmp
stos
ins
inc
xchg
inc
repz
jecxz
mov
icebp
dec
in
je
xchg
pop
adc
and
jmp
movs
fcom
fs
mov
sbb
mov
inc
sahf
sahf
and
arpl
mov
jecxz
add
push
jge
minps
test
cmc
sar
repz
js
adc
mov
aaa
push
mov
movs
hlt
into
(bad)
movs
dec
ror
jmp
(bad)
(bad)
(bad)
std
mov
xchg
pop
outs
xchg
outs
nop
retf
jecxz
scas
fbstp
repz
and
push
icebp
(bad)
(bad)
jg
cld
pop
cmp
iret
xchg
xchg
jg
cmps
adc
out
dec
enter
mov
cmp
stos
fwait
fs
jl
fcom
idiv
(bad)
(bad)
jmp
jecxz
xchg
cmc
mov
cmp
in
inc
xor
xchg
cs
retf
ja
sub
push
jo
call
(bad)
xchg
in
movs
sub
ss
cmp
mov
fisttp
(bad)
(bad)
(bad)
cmp
gs
and
mov
push
pop
je
or
cli
jbe
xor
(bad)
(bad)
push
pushf
pop
ror
xchg
xchg
icebp
jp
inc
and
lods
sbb
sahf
pop
aas
jbe
fild
mov
jp
cmp
int
outs
clc
scas
adc
inc
sbb
adc
mov
frstor
push
ins
mov
test
out
xor
dec
jae
and
mov
ins
xlat
stos
push
adc
jmp
fs
xchg
add
lods
jne
pop
fs
pop
push
pop
shl
je
(bad)
(bad)
(bad)
(bad)
inc
inc
mov
inc
retf
std
sbb
int3
cdq
imul
push
daa
sbb
(bad)
(bad)
(bad)
push
pop
les
dec
(bad)
push
popf
and
stc
jno
mov
mov
lock
(bad)
(bad)
(bad)
jmp
sahf
daa
ins
pop
stc
cmp
or
xchg
mov
push
imul
fistp
mov
out
adc
imul
daa
lock
test
or
in
inc
(bad)
(bad)
(bad)
(bad)
mov
inc
push
push
aas
pop
cwde
pop
test
ins
popa
out
popf
mov
(bad)
in
(bad)
in
cmp
ss
xchg
xchg
(bad)
(bad)
(bad)
push
test
sbb
sahf
(bad)
cmps
sti
mov
mov
sbb
lahf
sub
sbb
pop
fs
jo
adc
stc
js
(bad)
(bad)
(bad)
call
cmp
cmc
inc
or
pop
scas
adc
cld
pop
inc
scas
jns
or
mov
(bad)
(bad)
dec
retf
scas
cli
fsubr
clc
inc
add
xchg
and
dec
inc
or
out
pxor
in
cmp
(bad)
(bad)
(bad)
jmp
enter
mov
in
add
inc
and
dec
jg
aas
ds
test
(bad)
call
pop
cmc
lea
cmp
push
and
xchg
inc
popf
mov
inc
int3
cld
(bad)
(bad)
(bad)
mov
fcomp
cmps
(bad)
xlat
sub
int3
fsub
push
mov
(bad)
sahf
mov
(bad)
call
cmp
std
fwait
jae
sar
hlt
(bad)
out
push
sbb
(bad)
and
mov
cld
jns
inc
into
setl
add
or
add
into
and
inc
jne
push
ja
dec
imul
(bad)
jg
es
ins
xchg
inc
fisttp
(bad)
and
pop
fs
xchg
enter
jecxz
test
(bad)
(bad)
out
cli
mov
ficom
popf
mov
xchg
retf
mov
lock
(bad)
pop
(bad)
(bad)
dec
jmp
hlt
dec
add
lea
sub
fnstsw
pusha
daa
push
gs
fwait
inc
cld
(bad)
cld
pop
or
dec
punpckhbw
mov
jg
(bad)
push
aaa
pusha
mov
popa
ds
or
arpl
mov
mov
pusha
cmp
lock
outs
lods
sbb
xor
or
push
cmps
dec
sahf
movs
xlat
jmp
(bad)
(bad)
push
xor
push
jp
cmp
jecxz
test
lock
inc
ficomp
test
sbb
xchg
sub
aaa
sub
pop
jl
jns
mov
(bad)
(bad)
jmp
push
pushf
pushf
mov
xlat
xlat
xchg
fwait
rcr
xchg
popf
inc
pop
inc
mov
pop
mov
arpl
or
xchg
mov
fcomp
inc
add
(bad)
call
cmp
call
stc
pop
in
or
dec
adc
mov
or
sar
push
fcos
(bad)
(bad)
call
add
aas
ins
(bad)
shl
xor
cld
shr
adc
or
arpl
out
mov
lock
inc
cs
pop
imul
shr
lock
xor
mov
lods
lock
xchg
pop
gs
(bad)
and
jnp
call
lock
lods
mov
(bad)
(bad)
call
mov
sub
or
fnsave
xchg
xchg
xor
sbb
rol
push
movs
(bad)
(bad)
mov
shr
shr
stos
mov
ins
test
pop
test
mov
(bad)
(bad)
(bad)
call
jp
inc
sar
test
sbb
fdivrp
inc
repnz
cmp
out
shl
jl
(bad)
(bad)
inc
stc
jecxz
repz
push
pop
mov
lock
ror
dec
out
(bad)
fstp
pushf
push
mov
cmp
retf
push
mov
cdq
sbb
(bad)
(bad)
(bad)
call
dec
dec
into
aad
mov
mov
pop
jmp
mov
inc
aam
cli
repnz
out
cmp
(bad)
faddp
ja
jbe
inc
call
push
jnp
pusha
fdivrp
(bad)
jg
xor
xchg
sbb
out
loop
add
mov
pop
mov
pop
(bad)
inc
outs
mov
jle
sbb
repz
cmps
cmps
mov
push
push
ret
dec
in
in
ins
clc
aad
jmp
stc
es
(bad)
(bad)
call
xor
cs
push
fist
or
mov
sub
int3
(bad)
(bad)
(bad)
(bad)
jnp
imul
and
or
(bad)
inc
pop
ror
mov
loopne
hlt
call
iret
sub
mov
jmp
sub
adc
pop
jle
dec
(bad)
call
add
pop
lahf
imul
(bad)
xchg
mov
clc
and
(bad)
(bad)
mov
outs
popf
inc
mov
mov
pushf
(bad)
ficomp
pusha
out
stos
mov
pop
dec
xchg
push
out
arpl
inc
sbb
or
inc
mov
(bad)
rol
(bad)
(bad)
call
stc
mov
rcr
cmp
movs
leave
pushf
dec
imul
sbb
in
js
aad
push
pop
nop
hlt
(bad)
(bad)
aas
icebp
jne
std
inc
xchg
xlat
jecxz
ret
nop
xchg
(bad)
(bad)
jmp
mov
cmc
jae
push
lods
arpl
fisttp
jmp
sar
dec
int
icebp
ins
out
loopne
xchg
mov
test
cmp
aaa
out
retf
lods
fucomi
shl
inc
cdq
adc
loop
adc
cli
call
lahf
and
in
popf
ins
enter
pushf
xlat
in
mov
je
mov
sub
mov
icebp
rcr
jnp
cld
dec
cmps
jo
repz
pop
inc
add
stos
repnz
js
inc
hlt
sti
push
hlt
je
adc
(bad)
(bad)
out
mov
sbb
pop
sbb
jp
add
jl
mov
cld
in
or
and
out
mov
aaa
pop
jnp
mov
addr16
pop
mov
pop
(bad)
call
(bad)
mov
sahf
fistp
fucom
mov
sub
jl
movs
popf
scas
(bad)
(bad)
(bad)
dec
jp
inc
icebp
cbw
out
fistp
(bad)
mov
or
repz
cmc
std
inc
int
cmc
cmp
cwde
std
into
daa
push
pop
xlat
imul
hlt
hlt
mov
ins
mov
add
jmp
mov
loop
xor
sbb
push
leave
in
(bad)
(bad)
(bad)
dec
test
lods
enter
sub
es
pop
in
xor
push
jge
jg
(bad)
call
ja
dec
in
add
cmps
movs
xchg
cmp
in
jmp
dec
mov
(bad)
(bad)
inc
clc
xor
ja
mov
inc
stc
out
out
call
jp
sbb
jmp
xchg
(bad)
loope
adc
jmp
lea
jae
mov
jge
inc
sbb
jbe
(bad)
loop
mov
push
mov
add
into
fstp
int
icebp
jp
dec
ins
in
fist
ss
jg
stc
mov
lds
out
ret
fsubr
push
out
jg
mov
(bad)
mov
xlat
jo
mov
shl
pusha
scas
mov
xor
add
and
cmp
lahf
mov
repnz
jge
inc
jp
jmp
mov
mov
lahf
add
inc
sub
outs
imul
or
test
jb
call
(bad)
(bad)
(bad)
jmp
es
aam
fsub
mul
sbb
xchg
push
xor
fmul
dec
xor
mov
repz
mul
mov
cmp
xor
in
sahf
cwde
jmp
(bad)
push
pop
imul
cmp
cmp
data16
dec
out
retf
pop
inc
pop
les
xchg
rcr
adc
push
and
ss
fst
retf
push
into
mov
dec
out
ds
aad
(bad)
jg
call
test
push
cmp
outs
adc
clc
loop
mov
mov
aas
xchg
inc
mov
and
jns
ins
fisttp
aas
or
shr
pop
popa
in
(bad)
cmps
rcl
lock
jmp
js
jae
sar
arpl
jge
xor
dec
loopne
pop
sahf
adc
ja
iret
repz
jbe
hlt
int3
jbe
sbb
mov
arpl
clc
xchg
aad
sub
pushf
iret
bound
lock
jmp
mov
loop
push
pop
pop
(bad)
mov
imul
stc
std
and
inc
pop
(bad)
(bad)
(bad)
jmp
popa
in
scas
lods
icebp
push
in
(bad)
add
xchg
cdq
dec
daa
inc
rol
rcr
inc
inc
push
(bad)
push
fistp
sbb
xchg
lods
sbb
xchg
push
pop
sub
push
fcomp
(bad)
(bad)
push
neg
je
sahf
xlat
jne
pop
pop
jno
or
(bad)
inc
clc
rcl
(bad)
(bad)
mov
dec
pop
fcom
jns
or
ins
(bad)
cmp
pushf
pop
push
fwait
cmps
jbe
push
sar
(bad)
(bad)
jmp
jp
and
dec
sub
pop
dec
rcr
bound
fwait
lods
lock
and
inc
and
pop
cmc
out
jp
pop
adc
mov
jbe
push
mov
mov
mov
pop
jbe
(bad)
(bad)
(bad)
fisttp
xor
retf
push
sbb
fwait
mov
sub
jge
ja
dec
cld
mov
jp
pop
jne
sub
fst
xor
or
sahf
sbb
cmp
ja
icebp
xor
sub
dec
inc
(bad)
or
(bad)
push
push
inc
mov
mov
fistp
xlat
sub
jns
or
lea
(bad)
push
push
popf
dec
add
pop
in
xor
push
jecxz
(bad)
jge
adc
dec
jmp
mov
push
int3
xchg
jecxz
hlt
call
pop
inc
scas
inc
mov
(bad)
jg
(bad)
fsubr
jp
jecxz
aad
push
lea
xchg
jno
loope
test
mov
jbe
(bad)
dec
pop
push
addr16
sbb
inc
sub
aad
xor
sti
cmc
aas
(bad)
(bad)
(bad)
(bad)
aas
push
ja
mov
scas
jmp
outs
mov
ss
jle
lods
cmps
jecxz
jp
movs
add
sbb
mov
out
xchg
jmp
inc
(bad)
(bad)
push
pop
shl
cmp
popa
(bad)
in
int
mov
or
dec
pop
mov
mov
fcos
(bad)
(bad)
jmp
cmps
clc
pop
cld
test
mov
fidiv
(bad)
in
outs
in
out
(bad)
call
shl
inc
repz
jo
inc
adc
mov
dec
ins
unpckhps
dec
call
(bad)
jnp
sub
data16
hlt
pushf
mov
push
aam
push
lea
inc
scas
cmp
vandps
lds
mov
jle
pop
and
sar
gs
jb
fwait
xchg
sbb
adc
sub
scas
stos
mov
cdq
xchg
(bad)
sti
int3
addr16
or
gs
int
jmp
(bad)
(bad)
jmp
push
jnp
mov
cmp
fcom
xor
loop
mov
(bad)
dec
mov
pop
pop
pop
in
adc
imul
jl
push
ret
call
mov
cmps
jg
(bad)
dec
push
ins
sar
loop
cmp
and
add
xor
dec
in
push
neg
ret
add
(bad)
jmp
xchg
xchg
cmp
pop
sbb
xchg
int
mov
xchg
(bad)
mov
xchg
les
pusha
pop
movs
adc
and
repnz
add
dec
(bad)
sti
cmp
sbb
pop
in
and
adc
inc
pop
scas
cli
push
lahf
jmp
(bad)
(bad)
(bad)
jns
jb
push
fdiv
jg
je
xchg
xor
mov
xchg
fsubrp
into
(bad)
call
mov
xor
(bad)
add
mov
fimul
cmp
and
mov
cmp
xchg
jp
mov
rcl
(bad)
aas
sbb
xchg
mov
hlt
fld
push
cli
cmps
lock
xlat
int
fsubr
outs
inc
add
cmp
outs
push
mov
sbb
das
sbb
mov
(bad)
out
add
(bad)
push
das
test
jecxz
into
and
xchg
push
cmp
and
dec
(bad)
ss
dec
data16
(bad)
call
xor
xchg
mov
mov
fmul
es
cmp
xchg
pop
ds
nop
and
(bad)
(bad)
jg
push
push
jbe
mov
or
adc
(bad)
mov
lds
test
rcr
(bad)
call
xchg
mov
and
dec
jmp
dec
mov
pop
pop
sar
(bad)
mov
xchg
retf
outs
jmp
mov
stc
ins
out
mov
(bad)
jmp
stos
mov
and
jecxz
icebp
out
xchg
adc
add
cmp
sbb
sbb
cli
(bad)
(bad)
(bad)
inc
push
push
ret
scas
stos
sub
sub
mov
int3
mov
aad
mov
arpl
sar
(bad)
(bad)
jmp
clc
sub
sub
outs
retf
lods
dec
popa
mov
jecxz
inc
pop
adc
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
mov
cli
push
lods
arpl
fsub
pusha
sar
jo
sbb
dec
lahf
push
mov
outs
ja
(bad)
dec
inc
popf
and
push
xor
dec
xor
retf
adc
jg
call
jae
adc
or
fldcw
mov
jecxz
adc
add
outs
or
(bad)
dec
fwait
rcl
jno
idiv
std
dec
dec
add
adc
mov
repnz
(bad)
(bad)
(bad)
call
lock
xchg
xchg
pop
sbb
push
xchg
retf
in
loope
sbb
inc
mov
cs
(bad)
out
clc
mov
jecxz
scas
ins
in
pop
mov
add
and
call
cli
adc
lods
aam
jae
xor
sbb
(bad)
out
push
push
push
mov
cs
loope
test
lahf
sbb
push
xor
xchg
jne
jle
pop
(bad)
(bad)
(bad)
jmp
out
xchg
add
sbb
xchg
(bad)
jb
(bad)
(bad)
repz
scas
es
push
int
(bad)
(bad)
dec
stc
movs
mov
push
mov
pop
cli
xchg
mov
mov
push
sub
hlt
gs
sahf
cmp
mov
xchg
mov
pop
push
add
jbe
aad
sub
mov
enter
cmp
push
push
or
ss
cdq
pop
int3
fidiv
jmp
call
mov
(bad)
mov
adc
ret
pop
inc
(bad)
push
inc
cld
call
test
xchg
sahf
push
retfw
sub
xchg
cld
add
(bad)
(bad)
inc
jle
ins
cld
dec
(bad)
in
cmc
scas
xchg
xchg
pop
aad
xor
js
dec
pushf
scas
mov
fiadd
call
xlat
jg
dec
mov
xor
bnd
call
adc
bound
stos
sbb
daa
dec
gs
fadd
(bad)
(bad)
js
cmp
and
je
and
(bad)
(bad)
mov
popa
xchg
aam
fnstsw
and
ficomp
mov
daa
cmp
and
lds
jmp
push
fld
jb
sbb
jbe
or
dec
(bad)
xchg
or
(bad)
inc
(bad)
mov
rcr
imul
fwait
into
das
cmp
ret
ds
aaa
push
sub
(bad)
dec
or
enter
in
or
js
jmp
movs
pop
push
mov
(bad)
call
pop
loope
xlat
or
jmp
lods
jbe
outs
cmps
not
fucomi
jb
(bad)
(bad)
(bad)
inc
leave
add
jno
push
push
fstp
loop
rcr
or
jno
das
or
(bad)
(bad)
(bad)
push
sub
cmp
inc
jl
lods
mov
mov
xor
xor
popa
mov
(bad)
(bad)
(bad)
jmp
mov
lods
cdq
gs
fmul
fisttp
xor
hlt
ja
xchg
movs
data16
(bad)
inc
push
xchg
dec
fdiv
das
sahf
fbstp
sbb
imul
(bad)
(bad)
(bad)
jmp
mov
ds
add
div
cmp
imul
push
dec
fdivr
in
mov
shl
jecxz
(bad)
inc
out
mov
pop
fdivp
mov
pop
jmp
sti
mov
and
movs
outs
ja
outs
sbb
xchg
(bad)
(bad)
jmp
and
mov
xor
retf
mov
add
into
mov
loopne
push
push
dec
ds
inc
dec
lds
add
xlat
pop
arpl
xlat
(bad)
jns
cli
mov
movs
mov
imul
aad
dec
test
ja
shr
repnz
(bad)
(bad)
inc
fs
in
out
fisttp
pop
(bad)
add
int3
lds
and
lods
sub
(bad)
(bad)
(bad)
jmp
sub
not
lock
loope
mov
mov
shl
mov
out
hlt
push
jl
dec
dec
jne
scas
nop
leave
out
jno
or
and
js
xchg
jnp
dec
xchg
dec
sahf
imul
in
jns
push
xchg
cmps
jmp
jo
mov
hlt
(bad)
(bad)
dec
popf
ds
sbb
inc
dec
(bad)
jns
hlt
inc
out
adc
push
adc
cdq
sub
(bad)
dec
mov
bound
addr16
(bad)
(bad)
(bad)
(bad)
clc
xor
ins
or
out
cmps
mov
lds
sbb
fwait
shr
lea
push
sbb
fidiv
sti
inc
dec
xchg
dec
mov
not
or
cli
loopne
cli
popa
ja
test
(bad)
test
pop
xchg
pop
ins
inc
lods
mov
sub
xchg
pop
adc
retf
sbb
rcl
cmc
inc
arpl
(bad)
in
(bad)
push
inc
mov
movs
stos
jo
sbb
mov
pop
es
cmp
(bad)
jmp
rcr
pop
dec
loopne
adc
in
aas
mov
fcomip
dec
pusha
jle
jecxz
dec
dec
push
cmp
push
ja
mov
jmp
jmp
out
mov
adc
repz
das
jmp
les
(bad)
(bad)
(bad)
dec
push
xchg
and
jp
arpl
jbe
rol
jns
pop
cmp
call
cdq
lock
fcmovbe
or
ja
int
shr
les
loop
(bad)
(bad)
dec
shr
aaa
inc
xor
push
lahf
xchg
xor
adc
mov
stos
jnp
enter
call
lea
addr16
fisttp
fdivr
(bad)
(bad)
(bad)
cmp
repnz
movs
je
cmps
jmp
mov
xor
test
(bad)
(bad)
(bad)
(bad)
mov
mov
cmc
(bad)
mov
pop
fistp
pop
test
movs
(bad)
(bad)
mov
call
mov
cmp
movs
add
push
arpl
ret
test
hlt
dec
movs
pushf
imul
jg
jmp
scas
je
sub
mov
adc
movs
mov
push
jmp
idiv
(bad)
(bad)
call
adc
test
inc
je
out
jl
int
div
test
jg
cmp
aaa
xchg
popa
ds
cwde
xchg
dec
hlt
xor
dec
repz
lods
xchg
(bad)
sbb
push
push
jmp
in
cmps
cmp
or
out
pop
dec
and
and
in
mov
mov
add
fcomip
pop
aam
stos
je
sub
cwde
cmp
jmp
(bad)
scas
jmp
inc
into
xchg
stc
in
fst
push
lahf
dec
enter
xchg
lods
test
jecxz
shl
shr
(bad)
jae
in
retf
aaa
fisubr
jp
test
pop
jbe
(bad)
(bad)
(bad)
call
lahf
(bad)
jecxz
daa
out
ins
lahf
push
fsub
mov
mov
outs
xchg
retf
ror
push
in
in
inc
cmps
lock
mov
cmp
repnz
pop
ja
or
(bad)
(bad)
(bad)
jmp
dec
inc
aam
push
mov
jmp
stos
test
movs
out
xchg
mov
retf
mov
jge
in
lods
data16
xchg
sbb
push
ss
push
push
mov
(bad)
call
pop
mov
in
dec
fisub
mov
icebp
jnp
stos
(bad)
dec
pop
(bad)
call
and
sahf
out
jp
repnz
cwde
(bad)
(bad)
(bad)
push
sub
or
mov
push
call
lahf
jno
(bad)
fidivr
ror
and
and
jmp
fdiv
sbb
push
mov
ret
add
inc
push
dec
fnstenv
stos
(bad)
push
std
dec
not
aaa
cmp
mov
(bad)
stc
mov
daa
pop
or
and
and
rol
or
inc
shl
cmp
scas
std
addr16
leave
xor
sub
(bad)
(bad)
(bad)
out
fcmovnbe
shr
jle
outs
pushf
enter
add
nop
mov
lock
pop
cmc
(bad)
(bad)
(bad)
cmp
movs
mov
add
adc
jae
fcom
ss
lods
fdiv
cwde
(bad)
test
cmp
test
(bad)
(bad)
(bad)
push
lods
fsubr
xor
(bad)
cld
xchg
sub
test
leave
push
pop
mov
(bad)
(bad)
(bad)
dec
cmp
push
in
(bad)
mov
mov
fnsave
sbb
clc
jne
sub
push
call
mov
adc
mov
imul
cmps
test
loopne
ja
out
pop
cmps
call
add
std
dec
dec
mov
popa
clc
cs
rcr
js
cmp
mov
sbb
(bad)
into
and
ret
sbb
lea
call
jl
jle
lods
mov
pop
pop
ror
jle
fs
sub
(bad)
(bad)
(bad)
jl
les
stos
imul
inc
sbb
ss
in
je
test
jnp
cmp
pop
jle
and
jnp
jg
inc
(bad)
(bad)
(bad)
(bad)
mov
mov
sub
pop
les
cmp
in
leave
dec
mov
(bad)
(bad)
(bad)
call
mov
mov
xchg
repnz
ffreep
pop
pusha
pop
mov
hlt
dec
ficom
dec
jno
dec
push
inc
(bad)
(bad)
(bad)
jmp
xlat
adc
sub
sahf
sub
in
xchg
dec
in
out
(bad)
mov
(bad)
push
pop
and
or
cld
popf
mov
outs
scas
test
push
mov
ret
cmps
gs
(bad)
inc
mov
mov
loope
ss
and
(bad)
(bad)
mov
dec
adc
ja
lea
dec
(bad)
and
cld
jnp
jmp
xchg
(bad)
(bad)
push
and
mov
dec
popf
mov
jge
das
test
cmp
pop
jmp
(bad)
dec
jg
and
dec
out
fwait
add
mov
int3
out
enter
aaa
cld
(bad)
jmp
mov
push
mov
aaa
jnp
lods
pop
and
mov
push
std
adc
call
scas
ret
jp
pop
mov
stos
cli
(bad)
(bad)
(bad)
fisub
pop
pop
inc
gs
cmp
inc
dec
in
mov
dec
cdq
xchg
cli
mov
mov
stos
ret
out
jne
xchg
retf
(bad)
outs
or
scas
popa
retf
inc
(bad)
call
fdiv
sub
jmp
imul
sub
sub
(bad)
push
jno
enter
cmp
dec
sub
lds
fiadd
and
dec
ret
retf
push
rcr
sub
(bad)
push
loopne
(bad)
(bad)
dec
cmp
pop
ins
ss
push
dec
int
jecxz
inc
jae
fwait
cmps
cwde
add
sti
jnp
mov
(bad)
(bad)
(bad)
dec
inc
mov
mov
popf
(bad)
mov
sub
enter
sub
fisttp
(bad)
dec
sbb
(bad)
std
sbb
out
pop
jae
lods
cmc
lahf
ja
sbb
mov
ja
imul
mov
movs
mov
push
in
popa
mov
(bad)
jl
imul
(bad)
(bad)
fdivr
dec
pop
(bad)
push
mov
dec
push
xor
sbb
dec
jbe
int
fld
(bad)
push
movs
(bad)
mov
push
add
in
mov
xlat
(bad)
(bad)
inc
scas
out
mov
sub
push
mov
or
(bad)
(bad)
dec
jb
in
pop
bound
add
neg
loopne
lahf
test
(bad)
(bad)
(bad)
dec
add
pusha
pop
scas
addr16
inc
cmp
lds
call
mov
inc
(bad)
jg
cmc
ds
(bad)
stos
les
in
clc
test
test
(bad)
mov
push
add
aaa
mov
jne
jg
cli
es
stos
mul
dec
scas
xlat
cmp
(bad)
call
cmp
mov
out
mov
inc
jns
xor
stc
das
jg
sub
outs
(bad)
call
loopne
xchg
shl
and
xchg
jmp
leave
popf
cmp
jle
(bad)
(bad)
jmp
out
cmp
push
inc
out
xor
(bad)
cmp
adc
dec
sub
pushf
pop
(bad)
dec
push
in
lods
add
retf
xor
dec
sub
nop
daa
cmp
cmp
jmp
neg
cmp
push
add
jns
jecxz
scas
or
(bad)
(bad)
(bad)
(bad)
cmp
test
int
xchg
ret
pop
cmps
retf
mov
pop
icebp
xor
and
rcl
test
stos
(bad)
(bad)
(bad)
call
lods
sbb
cmp
sahf
add
ss
in
fsubp
repnz
loopne
test
(bad)
(bad)
jmp
mov
push
fldcw
sub
dec
dec
dec
push
sub
inc
aas
and
push
(bad)
fucomp
fbld
cmp
push
pop
inc
jmp
out
mov
fcomip
(bad)
mov
lea
dec
push
pop
pop
xchg
push
call
aaa
add
mov
mov
mov
mov
mov
das
cli
jg
jmp
adc
aas
cmps
dec
stos
out
cmp
jmp
xlat
(bad)
inc
fwait
lods
arpl
mov
fld
xchg
bnd
(bad)
jmp
(bad)
adc
jle
gs
jg
loopne
mov
cmp
lea
or
(bad)
call
ja
jg
fcmovnb
outs
jns
lock
or
mov
xor
sub
(bad)
(bad)
(bad)
push
test
sti
scas
cmp
dec
cwde
mov
mov
fmul
dec
inc
mov
jg
imul
xor
add
and
stos
pushf
xlat
icebp
js
jle
mov
hlt
push
mov
cld
je
jg
(bad)
(bad)
cmp
push
push
inc
dec
xor
loop
jmp
sar
(bad)
call
and
mov
mov
fdivp
hlt
jle
(bad)
dec
or
aad
jg
inc
xor
push
push
(bad)
push
ins
call
or
fist
sar
push
xor
scas
inc
loop
sub
push
mov
into
adc
cld
aad
mov
sahf
sar
(bad)
jmp
push
and
(bad)
push
fistp
mov
or
pop
or
daa
push
leave
sub
push
(bad)
(bad)
(bad)
jg
cdq
push
xchg
fwait
nop
jns
mov
aam
sahf
call
mov
or
cdq
or
fstp
mov
cmps
pushf
cwde
out
add
stos
das
push
mov
jnp
shl
cmp
and
(bad)
(bad)
inc
test
push
test
xor
push
mov
aad
test
cli
(bad)
(bad)
jp
(bad)
add
xchg
mov
mov
push
pop
pop
jge
dec
lock
cli
xor
or
jo
sbb
jecxz
mov
enter
fst
std
(bad)
call
fisubr
repnz
lods
ins
lgs
fwait
test
mov
(bad)
dec
mov
pop
clc
jmp
mov
jo
stos
sub
(bad)
(bad)
call
stos
sub
dec
(bad)
int3
xchg
sub
aad
retf
cwde
mov
pop
lock
sub
jl
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
lock
loope
fisttp
jmp
movs
idiv
scas
xor
(bad)
(bad)
call
xchg
pop
test
outs
jne
xor
fnstcw
aam
add
jle
fs
cmp
(bad)
(bad)
(bad)
aas
pop
xlat
mov
lods
icebp
retf
mov
repnz
mov
pop
cmp
dec
jb
retf
(bad)
(bad)
(bad)
(bad)
jmp
dec
push
je
jge
xor
cmc
push
pop
push
(bad)
(bad)
dec
cmp
or
(bad)
(bad)
(bad)
jmp
ja
stc
in
jns
pop
fnsave
ins
into
(bad)
mov
ja
(bad)
out
mov
jmp
fcmovnu
fdivrp
or
jecxz
out
adc
in
retf
loope
(bad)
push
adc
pop
pushf
push
jnp
fst
sub
out
(bad)
call
call
std
(bad)
(bad)
jmp
outs
leave
inc
xchg
xchg
push
ret
(bad)
cmc
clc
lods
fsubrp
cs
addr16
aaa
aad
jge
(bad)
(bad)
mov
scas
push
(bad)
ret
xor
movs
mov
cmp
cmp
xchg
in
sbb
(bad)
jmp
movs
xchg
mov
mov
mov
in
pop
and
(bad)
jmp
(bad)
mov
cmp
mov
cmp
sub
cmp
dec
pop
add
(bad)
inc
push
cmc
or
outs
je
hlt
ins
fsub
out
add
dec
into
je
or
fucomp
pushf
xchg
xor
adc
adc
dec
repnz
inc
sub
sub
sub
dec
mov
pop
test
cmp
mov
dec
dec
mov
bound
sbb
(bad)
(bad)
(bad)
(bad)
cmp
scas
mov
push
stos
ja
mov
push
cmps
mov
fadd
outs
clc
fidivr
fimul
xchg
mov
(bad)
(bad)
(bad)
jmp
dec
daa
je
push
dec
or
out
scas
pop
xor
push
xchg
mov
adc
xchg
dec
mov
push
jno
std
dec
dec
scas
and
int
push
outs
(bad)
call
fisub
sub
mov
mov
loopne
jb
in
adc
data16
pop
push
rcl
addr16
jg
and
or
arpl
mov
aas
adc
hlt
push
xchg
pushf
rcl
lahf
xor
cld
(bad)
(bad)
(bad)
call
sbb
push
inc
inc
cmp
not
stos
rol
push
int
ss
(bad)
(bad)
(bad)
call
mov
mov
f2xm1
fldenv
fisub
xchg
lahf
out
es
mov
hlt
call
mov
mov
mov
scas
cmp
inc
mov
jmp
movs
add
mov
das
sbb
stos
fsub
mov
ret
cmp
sub
(bad)
and
mov
std
(bad)
(bad)
(bad)
(bad)
sti
leave
cmp
lock
push
lds
outs
push
loop
ja
mov
jnp
xor
(bad)
jmp
cdq
and
clc
lods
lods
lahf
dec
(bad)
test
mov
stos
clc
cmp
push
adc
(bad)
jmp
rcr
cmp
push
(bad)
cmp
jmp
inc
clc
cmp
xchg
or
add
lahf
cmp
mov
mov
stc
cmp
cmp
cmp
and
mov
jmp
lds
jo
ins
cs
ins
mov
(bad)
in
arpl
xchg
jae
add
sub
les
sub
sub
or
dec
dec
mov
adc
(bad)
(bad)
dec
cmp
mov
gs
enter
test
(bad)
leave
dec
or
aaa
cmp
jbe
fldenv
(bad)
(bad)
jmp
(bad)
(bad)
test
in
mov
sub
or
or
add
clc
inc
mov
dec
leave
push
push
lods
imul
outs
xchg
(bad)
jle
call
mov
cld
dec
lds
shl
outs
clc
call
not
into
jmp
dec
jecxz
add
inc
test
(bad)
(bad)
(bad)
dec
sbb
push
mov
in
push
jnp
and
(bad)
(bad)
dec
jge
movs
dec
(bad)
(bad)
(bad)
push
cmp
inc
iret
adc
inc
iret
inc
xchg
sbb
mov
dec
mov
mov
pop
adc
(bad)
(bad)
(bad)
jl
sub
dec
in
shr
std
adc
pop
jae
jmp
jge
xchg
(bad)
(bad)
call
fstp
xchg
xor
mov
mov
lahf
outs
pop
ror
(bad)
(bad)
(bad)
inc
cdq
in
pop
sbb
daa
pop
sbb
ins
inc
ss
cmc
jmp
rcr
iret
ret
xchg
(bad)
inc
mov
nop
dec
(bad)
fmulp
mov
push
std
jge
mov
jb
inc
mov
mov
xchg
sub
in
mov
lock
mov
xor
(bad)
(bad)
(bad)
sti
dec
ja
fwait
in
push
mov
iret
or
jg
inc
imul
xlat
mov
(bad)
(bad)
call
cmp
xor
xchg
repz
push
pop
test
sbb
outs
ins
(bad)
(bad)
(bad)
dec
popf
inc
jns
in
cli
ins
rcl
push
mov
jno
ds
das
jo
pushf
iret
pop
(bad)
call
mov
dec
push
iret
inc
dec
cmc
mov
and
push
sub
mov
cli
dec
sub
in
jge
xor
and
ficom
(bad)
(bad)
(bad)
mov
call
dec
mov
jecxz
movs
sbb
cmps
sub
pop
(bad)
(bad)
jmp
clc
mov
cmp
mov
int3
sub
das
pop
aas
test
(bad)
(bad)
(bad)
push
int
xchg
(bad)
nop
mov
jmp
pop
push
not
fcomp
(bad)
in
icebp
dec
jl
cs
(bad)
(bad)
(bad)
in
call
mov
(bad)
bnd
mov
jecxz
cmp
mov
sub
pop
icebp
call
ss
xchg
pop
jns
jle
xchg
test
ret
dec
leave
ss
mov
(bad)
mov
pushf
shl
ss
sbb
mov
inc
lock
pushf
mov
cmp
mov
outs
out
and
or
stos
xor
(bad)
(bad)
(bad)
(bad)
fnsave
jecxz
fucom
sbb
sbb
loop
mov
ds
enter
fist
movs
(bad)
(bad)
(bad)
(bad)
mov
jge
cld
aas
dec
inc
pushf
xchg
adc
neg
fs
pop
leave
mov
(bad)
(bad)
(bad)
inc
stos
ins
sub
outs
ficom
dec
outs
cmp
jnp
and
fiadd
rcr
dec
add
(bad)
(bad)
(bad)
cmp
repnz
mov
js
push
xchg
pop
ins
ds
push
push
pop
jecxz
mov
xchg
das
jbe
jl
sub
(bad)
(bad)
inc
fbld
xor
in
sub
fmul
mov
rcl
in
jecxz
(bad)
(bad)
(bad)
call
arpl
fidivr
inc
dec
jge
mov
mov
test
mov
(bad)
jg
jmp
cmp
xor
push
cs
retf
mov
leave
cmps
pop
(bad)
mov
cmp
leave
cdq
cmc
lea
sub
(bad)
(bad)
(bad)
jmp
fld
jge
cmc
mov
dec
(bad)
loope
push
inc
aaa
(bad)
aam
out
inc
cdq
sub
icebp
cmp
xchg
sbb
stos
mov
xor
hlt
(bad)
call
or
push
mov
mov
adc
enter
mov
pop
(bad)
(bad)
(bad)
jg
jmp
retf
not
emms
push
lds
sub
push
push
add
(bad)
(bad)
(bad)
(bad)
jmp
call
push
jae
jle
jbe
inc
dec
mov
aas
mov
cmp
lds
cli
(bad)
(bad)
call
test
adc
jmp
mov
pop
mov
(bad)
push
dec
dec
mov
test
sahf
loope
dec
jae
(bad)
out
inc
and
aam
fst
scas
push
push
test
mov
lock
das
repnz
mov
pop
pusha
cmp
jmp
add
mov
(bad)
(bad)
(bad)
cmp
fs
test
lahf
dec
fbstp
jnp
xlat
ret
xlat
int
fwait
shl
cmp
(bad)
(bad)
mov
jo
fcomp
movs
fst
arpl
jnp
mov
add
push
aaa
sbb
movs
(bad)
push
sahf
dec
into
loop
outs
mov
cs
dec
cmp
retf
into
fsubr
scas
movs
(bad)
jg
dec
push
pusha
cmps
mov
sbb
cmc
ins
movs
jnp
in
les
jecxz
std
(bad)
(bad)
call
shl
jnp
dec
dec
mov
fsincos
xor
or
dec
inc
popf
pop
leave
jp
(bad)
jg
popa
jmp
add
sub
sbb
(bad)
push
jle
pop
inc
ins
push
sub
stos
push
mov
bound
out
jo
les
jge
(bad)
(bad)
(bad)
mov
pop
mov
cmp
or
add
les
push
inc
sbb
mov
imul
jmp
rcl
inc
fisttp
lock
cmp
cs
cmps
addr16
ins
mov
stos
ds
nop
out
(bad)
(bad)
(bad)
call
scas
rcl
clc
int
ja
fcom
xor
in
fsub
pop
dec
or
pop
test
fild
(bad)
(bad)
(bad)
cmp
imul
push
retf
in
test
xlat
repnz
leave
mov
imul
cmps
push
sub
mov
sub
scas
adc
xor
fstp
shl
jmp
sbb
fcomip
or
xchg
cmp
mov
fimul
das
mov
repnz
ja
fild
jmp
shl
leave
(bad)
sub
lods
call
jmp
test
in
xchg
push
dec
aaa
daa
inc
leave
sbb
mov
call
(bad)
jmp
jecxz
adc
mov
or
aas
mov
nop
dec
pop
dec
loop
ss
mov
jl
(bad)
(bad)
pop
xor
push
push
jecxz
dec
cli
in
(bad)
call
sub
xor
push
mov
sahf
sbb
and
into
pop
(bad)
(bad)
jmp
mov
outs
int3
scas
dec
call
popa
test
(bad)
push
fistp
(bad)
jmp
fs
add
cmc
add
ins
jns
addr16
jmp
test
(bad)
popf
je
les
(bad)
dec
add
data16
call
pop
pop
push
es
(bad)
cli
xor
cdq
div
es
inc
cmp
add
lods
mov
pushf
int3
out
stc
dec
jmp
or
pop
(bad)
(bad)
jg
neg
out
push
jl
jle
out
retf
shl
scas
ins
add
mov
jo
(bad)
jle
dec
rol
xor
or
lahf
xor
fs
call
(bad)
cmp
imul
jae
fs
jp
add
push
jae
loopne
jl
shl
jbe
gs
pushf
push
jne
std
push
bound
(bad)
(bad)
(bad)
inc
sbb
pop
inc
lock
xchg
fidiv
sbb
sub
fdiv
call
stos
(bad)
imul
cwde
pop
scas
pop
out
in
idiv
(bad)
mov
inc
sbb
cmp
pop
add
sub
pop
jo
(bad)
movs
dec
inc
mov
(bad)
std
(bad)
(bad)
inc
or
inc
mov
mov
js
inc
sub
xor
cmp
push
mov
call
mov
push
push
pop
sti
ss
jbe
idiv
pop
inc
mov
mov
sbb
push
cmp
inc
loopne
test
jmp
loop
xor
es
popa
mov
push
(bad)
fldenv
mov
inc
(bad)
mov
ficomp
xchg
adc
jmp
shr
(bad)
enter
or
xchg
mov
jmp
sbb
retf
inc
lahf
(bad)
sar
(bad)
(bad)
call
sbb
retf
adc
jmp
mov
mov
xor
jmp
clc
inc
movs
popf
and
mov
rol
xor
adc
(bad)
mov
xor
xlat
mov
lds
inc
loope
mov
in
or
jg
or
sbb
mov
dec
clc
(bad)
(bad)
(bad)
inc
sbb
jns
lahf
jecxz
movs
outs
mov
movs
dec
leave
loop
sbb
and
out
repz
aad
cmps
(bad)
(bad)
(bad)
call
push
test
out
retf
mov
push
call
inc
and
cmc
mov
fbld
(bad)
fdivp
out
push
dec
xor
fsubr
out
cli
(bad)
inc
test
jmp
sbb
and
cwde
and
and
and
scas
loopne
(bad)
(bad)
(bad)
(bad)
cmp
in
mov
sbb
ins
mov
dec
xor
pusha
sahf
add
enter
jg
ja
jl
imul
mov
fs
jo
mov
ja
push
outs
enter
inc
fisub
adc
(bad)
(bad)
(bad)
(bad)
fcomip
fild
mov
adc
push
mov
popa
ret
inc
dec
pop
cwde
sar
mov
cmp
xchg
addr16
ins
movs
(bad)
jmp
xchg
clc
jae
jmp
pop
cmp
xor
mov
jl
push
cld
inc
hlt
sub
fisttp
cmp
xchg
push
adc
cdq
in
xor
gs
add
push
sbb
ficomp
bound
xor
lock
shr
cmp
xchg
ins
and
or
(bad)
(bad)
fnstsw
sar
add
xchg
(bad)
dec
dec
pop
in
mov
pop
mov
aas
sbb
std
(bad)
(bad)
push
in
icebp
mov
test
cmp
mov
in
fiadd
fidivr
sbb
cmp
call
dec
cmp
aad
stos
and
es
dec
lea
call
or
pop
popa
jmp
fwait
cwde
and
out
cli
(bad)
in
mov
adc
mov
stos
rol
mov
dec
out
popa
out
mov
dec
xchg
sbb
aas
lock
sahf
inc
into
(bad)
sub
fld
mov
xchg
cmp
(bad)
inc
mov
in
xor
repnz
icebp
and
pop
push
in
outs
mov
out
leave
push
or
(bad)
(bad)
jmp
push
arpl
inc
outs
loopne
mul
movs
popf
inc
push
pop
mov
sbb
push
push
dec
hlt
(bad)
push
stc
aam
adc
cmp
test
add
and
test
repz
add
adc
fwait
and
loope
dec
std
push
pusha
daa
addr16
sbb
dec
sub
push
(bad)
jg
and
stos
push
fxch
mov
sti
enter
les
ins
lods
xchg
mov
or
(bad)
sti
jno
mov
test
lods
or
sub
mov
jae
clc
dec
mov
push
push
movs
bound
and
(bad)
mov
daa
or
and
push
push
mov
xchg
(bad)
inc
push
adc
mov
pop
mov
push
dec
icebp
neg
(bad)
(bad)
jmp
out
add
cmp
fistp
(bad)
icebp
xchg
and
fbld
pop
sbb
sbb
ja
call
push
test
cmps
and
dec
sub
fwait
adc
push
pop
mul
pop
jae
jge
(bad)
(bad)
inc
je
inc
and
lock
cmp
mov
add
push
movs
aad
shl
inc
(bad)
(bad)
(bad)
dec
cmp
mov
sbb
sahf
(bad)
mov
mov
jecxz
test
nop
es
(bad)
(bad)
(bad)
jp
xchg
mov
xchg
mov
das
test
in
mov
call
mov
push
cmps
mov
ja
(bad)
dec
out
jae
adc
sub
sbb
mov
pop
ret
clc
and
(bad)
(bad)
(bad)
xlat
jmp
sub
cwde
mov
ficom
xlat
rcl
in
dec
mov
js
repz
or
(bad)
(bad)
jmp
pop
adc
(bad)
and
inc
jg
push
call
mov
add
xchg
mov
(bad)
(bad)
jg
xchg
enter
mov
xor
cmp
mov
sub
fild
daa
mov
call
(bad)
and
mov
sbb
fwait
ins
inc
mov
idiv
mov
lods
jp
cld
pop
rcl
out
mov
addr16
add
(bad)
popa
dec
ds
jmp
fld
pop
push
aad
(bad)
(bad)
cmp
mov
inc
jmp
mov
ds
aad
repz
rcr
call
jg
lock
ret
push
(bad)
xchg
sub
pop
cmp
aas
arpl
jno
and
retf
mov
(bad)
(bad)
(bad)
call
add
inc
dec
xchg
test
mov
mov
mov
sbb
jns
not
inc
stos
(bad)
(bad)
(bad)
jmp
call
popa
xchg
fcmovbe
sti
jecxz
cld
sbb
jge
xchg
sub
sub
or
(bad)
(bad)
push
push
sbb
push
mov
stc
js
mov
jae
into
jg
mov
fidiv
int
push
cmp
cld
jmp
jmp
enter
sbb
outs
mov
mov
(bad)
dec
fst
fdivp
ficomp
stos
mov
mov
xchg
push
das
mov
push
sub
pop
lock
sub
outs
or
xor
dec
push
daa
inc
mov
sahf
xchg
popa
mov
xor
or
mov
cli
repz
aam
(bad)
(bad)
(bad)
inc
imul
test
loop
cdq
imul
cmps
arpl
shl
pusha
sbb
(bad)
(bad)
call
fs
cmps
mov
pop
imul
iret
dec
add
jne
xchg
lods
ficomp
test
(bad)
(bad)
fistp
xchg
mov
test
arpl
(bad)
pop
fcomp
(bad)
(bad)
(bad)
mov
push
lea
repz
inc
push
xor
mov
pop
popa
xor
loope
(bad)
(bad)
push
stos
jbe
test
mov
je
leave
arpl
and
(bad)
(bad)
dec
call
test
shr
jb
lahf
mov
or
mov
pop
fmul
mov
sar
(bad)
call
xchg
test
mul
jmp
push
sub
and
loopne
clc
pop
mov
(bad)
(bad)
(bad)
jg
pusha
fcomi
stos
inc
test
pushf
jl
hlt
push
jno
sub
iret
std
rcl
inc
jbe
mov
push
cld
dec
mov
fs
jp
popa
mov
cmps
(bad)
(bad)
(bad)
(bad)
call
lahf
and
shl
ficomp
sbb
cld
mov
(bad)
xlat
or
add
add
(bad)
(bad)
jmp
and
aad
in
(bad)
sub
mov
test
or
cmp
adc
(bad)
(bad)
(bad)
jnp
cld
out
xchg
mov
or
pop
sahf
jl
inc
cli
dec
outs
mov
and
pop
mov
(bad)
(bad)
(bad)
cld
dec
loope
push
and
mov
pop
mov
fnsave
bound
in
pop
scas
mov
clc
(bad)
(bad)
inc
mov
sub
mov
pop
orps
stos
in
retf
out
imul
outs
pusha
pop
mov
cli
and
fs
mov
xchg
call
or
dec
inc
dec
outs
out
inc
ret
mov
mov
jo
(bad)
mov
sub
xor
cmp
jl
(bad)
jmp
xchg
mov
repz
faddp
dec
push
and
push
jge
mov
mov
mov
pop
push
rol
xor
(bad)
(bad)
jmp
push
arpl
aaa
cmp
mov
or
into
leave
(bad)
dec
lods
push
imul
add
(bad)
(bad)
(bad)
jmp
jmp
out
pusha
loopne
push
inc
mov
and
jo
iret
imul
cs
push
retf
cli
call
mov
in
cwde
movs
xchg
ret
xor
pusha
test
and
push
lock
aaa
mov
fst
(bad)
(bad)
(bad)
jg
push
rcl
movs
mov
jmp
pop
ins
(bad)
sti
jne
es
jg
sbb
repz
enter
push
(bad)
inc
and
and
rol
int3
fild
jl
and
pop
pop
add
sub
jmp
jp
mov
mov
int
pop
mov
aad
scas
inc
adc
mov
aaa
inc
sar
push
mov
add
push
and
(bad)
(bad)
(bad)
jl
push
mov
outs
add
mov
inc
fdivr
mov
dec
scas
cmp
mov
(bad)
call
popa
repnz
sti
push
jb
fsub
jecxz
jne
or
pushf
push
xor
dec
ret
mov
mov
ds
cmp
test
adc
xchg
and
pop
xchg
shl
or
sti
and
in
jbe
sub
test
dec
push
mov
jne
int
js
nop
inc
popf
add
(bad)
(bad)
jmp
mov
adc
retf
xchg
lock
xor
into
mov
inc
sbb
xchg
or
jb
or
cli
cdq
jmp
jmp
and
out
push
imul
push
cld
mov
test
ds
and
cdq
adc
(bad)
(bad)
mov
ja
(bad)
jg
xchg
mov
in
jo
pop
sbb
fmul
inc
es
sar
(bad)
(bad)
jg
jmp
fs
outs
lods
ficomp
mov
sbb
jecxz
(bad)
(bad)
call
lods
jne
adc
mov
inc
and
sub
or
(bad)
(bad)
(bad)
call
enter
pusha
in
jle
(bad)
xchg
enter
xor
or
lods
inc
es
xor
push
call
popa
aad
rcl
sbb
mov
and
cmp
inc
fcom
(bad)
mov
(bad)
mov
shl
dec
cld
mov
popf
ret
enter
xchg
ja
jg
(bad)
aaa
add
sbb
jmp
cmps
or
repz
(bad)
(bad)
inc
repz
lods
mov
jbe
(bad)
jmp
push
ds
jbe
xor
mov
dec
(bad)
push
(bad)
mov
xchg
xor
xchg
sub
aas
into
dec
rcl
jp
or
call
pop
ins
mov
mov
int
push
(bad)
(bad)
(bad)
jg
and
xchg
sub
jle
test
xchg
pop
pop
add
mov
mov
dec
loope
pop
loopne
cmc
xor
inc
arpl
push
(bad)
jmp
loopne
(bad)
inc
stc
arpl
fstp
cmps
inc
mov
inc
leave
mov
std
dec
repz
ds
adc
fdivrp
(bad)
(bad)
mov
ins
out
imul
sub
xchg
aas
hlt
fwait
in
(bad)
jns
jg
sbb
repz
jmp
pop
mov
test
jnp
movs
or
mov
pop
ins
push
lock
out
pop
and
mov
(bad)
mov
lock
mov
ja
mov
ret
jle
inc
arpl
icebp
imul
cmp
mov
int
or
ins
test
movs
out
(bad)
mov
jmp
inc
les
inc
clc
xchg
fiadd
jo
lds
jmp
push
(bad)
(bad)
inc
jae
pop
or
mov
pop
dec
and
(bad)
call
xor
int3
dec
inc
dec
add
sbb
and
out
mov
and
push
call
cs
jae
jmp
in
pop
repnz
je
push
pop
adc
push
jle
jecxz
(bad)
jmp
xchg
movd
push
int3
xchg
xor
adc
(bad)
(bad)
push
ret
rol
daa
out
adc
adc
ins
add
pusha
adc
jb
sbb
stos
sbb
inc
imul
bound
cs
(bad)
lock
out
sub
fimul
add
(bad)
jg
add
sub
jb
push
adc
pop
std
sbb
jne
mov
xchg
jg
push
sbb
inc
push
xchg
popa
add
xor
or
pop
and
push
or
sbb
sub
or
aam
push
xor
xor
test
repz
leave
fnstcw
gs
(bad)
(bad)
(bad)
(bad)
jg
scas
jg
pop
inc
inc
mov
imul
in
push
in
fcomp
mov
(bad)
(bad)
dec
test
and
sbb
push
sub
(bad)
lds
xchg
push
pushf
lods
in
(bad)
(bad)
(bad)
std
ja
dec
or
leave
push
fimul
push
or
sbb
cld
test
mov
xor
(bad)
(bad)
mov
(bad)
jg
mov
adc
ud0
or
sub
push
mov
mov
lea
imul
scas
jmp
inc
loope
inc
mov
push
and
fstp
in
mov
adc
add
xchg
sbb
addr16
pop
ret
mov
cmp
mov
cwde
dec
enter
pop
add
hlt
sub
retf
(bad)
call
je
sub
outs
(bad)
out
mov
pusha
scas
jecxz
xor
movs
or
jp
loope
das
(bad)
(bad)
(bad)
jmp
cs
retf
dec
sti
test
cdq
inc
add
(bad)
pusha
jmp
sub
outs
fmul
(bad)
dec
outs
int3
push
and
ror
jne
fdiv
(bad)
fbld
out
or
mov
push
iret
sar
outs
(bad)
(bad)
(bad)
(bad)
cmp
jp
enter
or
out
repz
hlt
int3
imul
inc
xor
ror
jl
cld
cld
dec
mov
ficom
aam
je
mov
adc
aaa
std
inc
shl
dec
jb
xor
mov
pop
retf
fsub
cmp
inc
mov
(bad)
(bad)
cmp
adc
inc
sub
adc
push
(bad)
fistp
(bad)
(bad)
(bad)
dec
xchg
(bad)
sub
je
ret
xchg
imul
adc
sahf
repnz
(bad)
jmp
jle
adc
add
mov
pop
test
sub
add
and
mov
test
cwde
(bad)
(bad)
mov
push
imul
cmp
mov
mov
(bad)
call
(bad)
cli
or
pop
ins
cmp
into
scas
fstp
cmp
cwde
mov
std
test
xchg
cld
das
pop
adc
das
jns
leave
xchg
add
loop
jmp
xchg
dec
mov
push
adc
shl
movs
or
(bad)
(bad)
push
sbb
inc
dec
adc
mov
sti
jl
not
push
(bad)
xlat
aad
mov
lahf
daa
repnz
lods
xchg
sar
(bad)
jg
repz
rcl
jl
dec
mov
mov
fild
or
pop
mov
cdq
adc
clc
call
(bad)
push
jmp
jno
mov
xor
cli
retf
sub
adc
cmps
shr
loope
jecxz
out
repnz
(bad)
in
xor
adc
pop
(bad)
loopne
or
in
or
cmp
or
mov
mov
cmp
adc
das
imul
(bad)
inc
fmul
inc
xchg
shl
data16
mov
xor
or
sti
(bad)
(bad)
(bad)
dec
dec
dec
pop
mov
cmc
dec
lods
mov
dec
or
mov
mov
repz
pop
cld
(bad)
call
inc
fwait
dec
pop
inc
mov
or
pop
xlat
call
xor
(bad)
(bad)
inc
xor
aam
dec
rcr
mov
push
mov
test
stc
sub
(bad)
(bad)
call
arpl
push
mov
dec
jbe
inc
mov
fwait
mov
xor
or
mov
bound
sahf
(bad)
(bad)
(bad)
call
(bad)
dec
int
mov
inc
and
fnstcw
mov
jl
popa
sbb
jns
(bad)
(bad)
(bad)
jmp
cmps
imul
mov
inc
lahf
xchg
idiv
in
cmp
(bad)
inc
(bad)
iret
pop
addr16
adc
stc
outs
cmps
pop
pop
repnz
jnp
fnstcw
(bad)
dec
mov
ja
pop
aas
das
iret
push
inc
dec
aad
jno
scas
jle
es
inc
out
and
hlt
push
dec
fisttp
dec
loope
rcr
adc
ficom
fiadd
(bad)
(bad)
(bad)
dec
cmc
xchg
push
xchg
or
mov
out
push
sub
mov
shl
jbe
push
xor
push
inc
dec
add
call
ins
test
(bad)
call
inc
ss
ins
and
mov
adc
inc
(bad)
(bad)
(bad)
mov
ficomp
(bad)
cdq
pop
xchg
or
inc
retf
push
retf
(bad)
out
push
sub
(bad)
(bad)
(bad)
push
mov
mov
dec
jmp
mov
out
addr16
call
test
cld
fwait
jl
xchg
aas
iret
add
call
mov
arpl
daa
fdiv
adc
mov
add
ds
cld
movs
loopne
clc
(bad)
(bad)
push
fidiv
mov
scas
mov
cli
lea
imul
jp
mov
shl
(bad)
jmp
cli
jmp
retf
or
das
push
dec
xchg
ss
jmp
outs
jne
addr16
or
and
leave
push
cmp
mov
hlt
(bad)
call
loop
push
add
(bad)
cmp
jbe
mul
test
push
clc
(bad)
call
data16
push
mov
sbb
mov
sub
dec
dec
sbb
cmps
sbb
stos
pop
sub
jge
in
(bad)
jmp
push
or
inc
push
(bad)
pushf
(bad)
int3
pusha
pop
adc
inc
stc
fimul
(bad)
(bad)
mov
push
fcomp
xchg
sbb
cs
sub
mov
mov
inc
(bad)
jmp
nop
xchg
xor
mov
pop
mov
xchg
hlt
cs
aam
or
and
jmp
mov
jo
cs
dec
or
xlat
dec
cwde
lds
jmp
mov
dec
cmc
(bad)
adc
mov
jnp
push
pop
scas
mov
xchg
sub
jmp
push
call
inc
out
sbb
mov
rcr
or
(bad)
(bad)
(bad)
jmp
mov
js
mov
hlt
ins
mov
cmp
sbb
inc
jmp
(bad)
xor
(bad)
sbb
(bad)
(bad)
jmp
icebp
push
jle
mov
push
mov
(bad)
daa
sbb
loope
dec
jg
(bad)
mov
xor
fs
mov
(bad)
(bad)
inc
out
jbe
cmp
pop
jecxz
lahf
pusha
xchg
push
mov
leave
or
push
cdq
(bad)
call
sbb
mov
cld
add
xor
mov
mov
(bad)
(bad)
jmp
jne
fist
and
retf
add
je
jae
adc
and
(bad)
(bad)
jmp
cmc
sub
pop
and
mov
sub
pop
ds
aaa
xlat
jecxz
(bad)
(bad)
(bad)
call
pop
mov
cmp
lods
xlat
push
or
lea
not
mov
(bad)
(bad)
jmp
jno
or
dec
popa
xor
lahf
ja
push
xlat
adc
lods
push
fs
or
rcl
cmc
push
adc
outs
add
cwde
adc
mov
xchg
adc
push
test
push
sub
repz
dec
iret
add
push
dec
sub
push
inc
add
jmp
cmp
mov
out
ffreep
clc
push
or
(bad)
(bad)
(bad)
(bad)
(bad)
fild
std
fistp
call
imul
jae
call
sub
pop
icebp
data16
idiv
(bad)
(bad)
dec
or
test
in
cld
(bad)
mov
test
sub
adc
push
xbegin
(bad)
(bad)
call
xchg
jg
jb
pushf
faddp
out
ret
rol
xor
and
imul
call
das
leave
imul
ja
leave
pop
stc
dec
adc
imul
(bad)
call
pop
jp
adc
frstor
mov
and
mov
or
cmp
jae
fcomip
push
pop
push
(bad)
cmp
adc
and
int3
xor
pop
adc
jno
fbld
cmps
shl
fstp
gs
jmp
sub
cmps
retf
popa
fld
sbb
(bad)
(bad)
(bad)
(bad)
in
fs
add
add
push
jmp
imul
retf
adc
cld
outs
ds
(bad)
(bad)
(bad)
inc
add
jge
xchg
outs
xchg
(bad)
and
jns
xchg
cld
mov
lea
mov
enter
cwde
and
(bad)
(bad)
inc
jge
jge
cmp
scas
js
js
pop
pop
mov
inc
jo
pop
out
add
dec
(bad)
(bad)
(bad)
push
scas
xchg
mov
xchg
shl
or
(bad)
(bad)
faddp
adc
mov
sbb
(bad)
jmp
lds
nop
mov
cmp
or
adc
inc
sub
call
in
xchg
cmp
push
shl
lahf
pushf
cli
pop
jb
popa
inc
out
cwde
pop
push
loop
mov
inc
sbb
and
loopne
mov
loope
pop
cs
mov
lods
inc
cmp
call
loopne
outs
imul
(bad)
lds
icebp
(bad)
(bad)
(bad)
jmp
sub
(bad)
lea
or
call
in
mov
icebp
rcr
jle
sar
(bad)
jns
retf
scas
sub
sub
fcomp
popf
sbb
fiadd
(bad)
(bad)
(bad)
push
ja
sub
xor
sub
xchg
dec
sub
idiv
pop
fdivp
sahf
fwait
mov
(bad)
(bad)
jmp
xchg
fmul
mov
std
cld
or
mov
inc
xor
sub
inc
pop
(bad)
(bad)
(bad)
call
jae
shl
push
in
jns
push
add
sbb
popa
and
fnstsw
(bad)
call
lahf
xchg
arpl
push
dec
jno
mov
xor
jg
lea
sub
stos
pop
popa
mov
pop
push
ret
xor
mov
dec
pop
inc
cmps
cmp
inc
(bad)
cmp
jecxz
xchg
(bad)
jmp
add
cld
data16
xor
dec
rcl
fwait
xor
call
(bad)
(bad)
(bad)
jmp
inc
pop
and
sub
popa
or
dec
push
into
sub
ins
mov
nop
lock
fadd
mov
adc
hlt
loopne
and
outs
stos
sub
stc
(bad)
fsub
repz
sbb
pop
in
inc
jo
inc
push
jl
sti
push
ror
jns
mov
(bad)
(bad)
jg
lds
(bad)
fcmovnbe
fsub
frstor
cmps
cmp
mov
(bad)
jmp
jge
jecxz
sub
not
mov
mov
movs
xchg
or
nop
inc
(bad)
(bad)
jmp
mov
cmps
inc
outs
mov
hlt
push
out
je
add
pop
stos
xchg
(bad)
lods
lahf
sub
sahf
popa
outs
mov
pop
sti
xchg
jle
cwde
(bad)
(bad)
(bad)
jmp
cs
cmp
add
pop
dec
loop
jne
and
or
(bad)
(bad)
(bad)
(bad)
out
mov
icebp
cmp
test
jnp
rol
mov
sbb
mov
mov
dec
xchg
jae
push
shr
div
mov
cmc
cli
std
loope
(bad)
(bad)
(bad)
call
or
dec
mov
pop
mov
inc
push
and
(bad)
dec
inc
xchg
in
(bad)
jp
sbb
es
pop
mov
rol
repz
jae
movs
into
out
cwde
aas
sub
and
out
inc
or
inc
call
dec
add
(bad)
(bad)
(bad)
jmp
(bad)
int
ins
sbb
fs
dec
xchg
xor
xor
sbb
cdq
xchg
popa
(bad)
(bad)
(bad)
push
addr16
adc
movs
and
nop
cwde
pop
fwait
dec
sbb
inc
sbb
(bad)
mov
jnp
ss
out
push
div
arpl
mov
jmp
push
ret
jns
hlt
jge
sbb
lea
retf
repz
in
xor
(bad)
mov
jo
lahf
stos
jmp
call
arpl
pop
(bad)
(bad)
(bad)
push
xchg
push
setp
push
inc
jae
es
inc
xchg
dec
lock
clc
adc
inc
in
add
call
(bad)
ss
call
ja
adc
(bad)
mov
inc
xchg
pop
xchg
mov
mov
pop
xchg
in
cmp
and
mov
out
clc
jae
(bad)
(bad)
(bad)
push
adc
xor
test
leave
data16
or
mov
fstp
(bad)
cmp
xor
into
int
push
mov
pop
cs
shr
inc
es
(bad)
in
(bad)
(bad)
jmp
ja
push
mov
adc
xchg
push
sbb
inc
test
jp
inc
xchg
ror
mov
(bad)
(bad)
(bad)
call
aaa
pop
push
add
pop
mov
cli
pop
jb
neg
mov
outs
clc
call
cmps
jge
test
jmp
aas
jo
adc
test
mov
fs
mov
ins
jmp
jecxz
in
push
aaa
std
(bad)
(bad)
cmp
jg
and
jmp
sub
sub
lea
add
push
out
outs
adc
(bad)
(bad)
inc
xor
dec
retf
lods
(bad)
call
fwait
sbb
in
sub
mov
(bad)
(bad)
jmp
sbb
shr
das
push
pop
(bad)
sbb
push
pop
rcr
repnz
stos
bound
(bad)
(bad)
(bad)
dec
cmp
cmp
mov
jo
arpl
sub
pop
mov
jbe
into
mov
(bad)
call
inc
hlt
cld
mov
or
scas
dec
add
dec
adc
pop
out
xor
(bad)
inc
sahf
ret
ja
test
dec
out
icebp
mov
mov
or
xor
(bad)
(bad)
(bad)
mov
cli
mov
in
sub
aas
and
mov
sbb
and
(bad)
(bad)
(bad)
call
sbb
inc
sbb
fmul
and
push
rcl
mov
add
retf
stc
(bad)
push
dec
cmc
mov
(bad)
push
sub
pushf
adc
push
test
in
mov
ins
adc
jmp
cli
in
pop
mov
fdiv
cmc
sub
(bad)
(bad)
(bad)
call
rol
jmp
rol
mov
sub
dec
lahf
mov
inc
loop
push
pushf
mov
rcl
mov
mov
push
imul
add
(bad)
cmp
dec
cmp
popa
out
jo
out
arpl
mov
repnz
jne
daa
cmp
adc
ja
loope
jae
(bad)
jmp
test
jmp
mov
push
mov
mov
daa
dec
pop
(bad)
push
fld
arpl
inc
jl
cmp
cli
adc
jnp
(bad)
(bad)
mov
aas
in
pop
das
mov
ret
ret
mov
mov
(bad)
(bad)
(bad)
mov
push
dec
not
xchg
pop
test
mov
int3
sbb
popa
inc
aas
and
in
(bad)
(bad)
dec
mov
lea
mov
cmp
mov
xchg
call
cmp
(bad)
jmp
fcom
jecxz
outs
xchg
jge
ins
push
stos
dec
or
popf
xchg
xchg
add
(bad)
(bad)
call
pop
stos
and
inc
or
stos
xor
stos
mov
jle
mov
jg
add
(bad)
(bad)
(bad)
(bad)
push
jns
ret
fucom
ret
in
clc
mov
mov
pop
or
call
popa
sbb
push
mov
(bad)
bnd
sbb
pop
inc
mov
sbb
jmp
sar
dec
jle
and
jle
rcr
shl
fcomi
pop
in
(bad)
(bad)
mov
clc
test
and
dec
pop
and
mov
loope
rol
pop
sbb
push
xor
cmp
lods
mov
xor
mul
jle
js
cmps
mov
and
call
inc
imul
test
mov
je
push
sub
mov
push
or
(bad)
(bad)
(bad)
dec
loopne
dec
bound
stos
sub
mov
shl
loop
mov
dec
jo
add
(bad)
push
in
(bad)
(bad)
rcr
int3
popa
xchg
test
mov
pop
leave
push
pop
retf
scas
(bad)
(bad)
(bad)
mov
hlt
int3
js
scas
add
lds
cmc
mov
mov
adc
pop
sub
rcr
clc
dec
div
sbb
fimul
addr16
test
aaa
sbb
or
jae
(bad)
(bad)
(bad)
(bad)
aas
and
push
retf
adc
xchg
test
fisttp
daa
jp
(bad)
fldcw
pop
dec
lock
verw
loope
(bad)
dec
stc
pop
mov
mov
enter
pop
jns
ja
ins
in
add
call
push
sub
xchg
ret
dec
int
ins
jp
xchg
fwait
inc
inc
mov
fwait
jg
sbb
(bad)
jmp
movs
hlt
and
sub
xlat
xchg
sbb
mov
pop
das
pop
call
lea
dec
inc
cmc
push
outs
arpl
push
mov
stc
mov
jo
cmp
add
mov
mov
outs
inc
loopne
test
pop
mov
ss
cmp
cs
(bad)
call
daa
and
retf
ins
(bad)
imul
rcl
xchg
cs
xor
and
popa
call
inc
retf
xor
(bad)
mov
(bad)
mov
and
call
adc
(bad)
(bad)
(bad)
push
test
sub
stos
jl
mov
add
(bad)
pop
scas
aam
cli
(bad)
mov
or
(bad)
(bad)
jmp
loopne
pop
push
mov
mov
mov
out
loopne
sti
jl
stc
les
(bad)
(bad)
(bad)
inc
mov
aaa
jbe
(bad)
int
pusha
adc
vcmpps
and
jge
test
pop
jbe
(bad)
(bad)
(bad)
(bad)
jle
or
or
inc
movs
retf
cmp
xor
daa
fwait
in
stos
shl
(bad)
push
(bad)
cmp
mov
es
(bad)
sti
xor
(bad)
inc
mov
test
mov
jne
(bad)
(bad)
(bad)
call
dec
in
ss
and
mov
jne
dec
sub
mov
(bad)
(bad)
mov
(bad)
rol
sbb
stc
out
inc
in
sbb
mov
leave
aaa
cld
and
(bad)
mov
adc
xor
(bad)
(bad)
(bad)
out
and
mov
nop
sbb
out
xchg
xor
adc
fldcw
mov
pop
ret
and
dec
xchg
fs
push
out
aad
ja
dec
lock
cmp
leave
shr
dec
sub
mov
jp
xor
sub
(bad)
jmp
aam
mov
ins
enter
nop
test
paddd
mov
fdivr
push
cmp
and
dec
pop
daa
aaa
stc
in
push
mov
fisubr
add
rol
mov
addr16
nop
pop
sbb
dec
sub
inc
(bad)
(bad)
(bad)
cmp
mov
adc
int3
icebp
pop
lock
cmps
inc
cmp
dec
stc
movs
imul
(bad)
(bad)
clc
cmp
push
sub
push
cs
outs
loopne
cmp
pop
ret
scas
das
clc
(bad)
(bad)
std
cmc
sbb
sub
in
std
fbstp
pusha
mov
jge
(bad)
(bad)
dec
mov
in
popf
or
cld
ins
loopne
mov
retf
add
call
(bad)
jmp
or
mov
aad
pop
cmp
sbb
jo
xor
loopne
loope
add
push
pop
neg
mov
cmp
pop
in
add
int3
pop
and
lock
(bad)
pusha
pop
iret
loope
(bad)
(bad)
inc
jge
retf
mov
add
adc
mov
jg
repnz
adc
test
std
fisttp
loopne
in
ficom
mov
mov
inc
loope
add
mov
mov
xor
cwde
sar
(bad)
jmp
sbb
in
lods
jnp
xor
mov
push
retf
(bad)
out
out
(bad)
call
sbb
das
clc
(bad)
(bad)
fcomp
dec
loopne
(bad)
ret
pop
cs
push
mov
push
dec
sub
mov
mov
test
cmc
jmp
xchg
push
stos
pusha
sub
mov
jge
and
movs
push
sub
sar
(bad)
(bad)
inc
movs
mov
adc
sub
lock
mov
fsubrp
jo
mov
sar
cmps
jg
jg
push
pop
pop
movs
cmp
aam
dec
call
cmp
pop
ror
mov
adc
call
das
out
and
xor
or
sub
(bad)
(bad)
(bad)
ds
mov
push
pop
pop
sub
lahf
in
(bad)
retf
jg
xchg
dec
or
stc
xor
sbb
mov
or
arpl
aas
cld
movs
jnp
neg
and
cld
mov
add
fs
xor
(bad)
(bad)
push
push
adc
or
or
mov
add
ret
inc
loopne
(bad)
(bad)
(bad)
inc
or
mov
in
sti
loopne
xor
cmp
cmp
outs
add
test
call
pop
ficom
movs
sub
shl
add
lock
fsubr
mov
(bad)
(bad)
(bad)
inc
add
sub
add
retf
or
or
sub
sub
jmp
stos
xlat
out
mov
hlt
gs
pushf
lea
push
xor
inc
stc
mov
(bad)
(bad)
(bad)
call
pop
adc
in
out
cmp
mov
(bad)
iret
inc
fnstsw
pop
pop
jmp
outs
(bad)
mov
out
pop
and
pop
push
inc
mov
push
(bad)
push
loope
ficomp
lds
push
call
cmp
mov
(bad)
(bad)
(bad)
(bad)
cmp
loope
js
ja
add
mov
mov
xchg
mov
inc
clc
sub
(bad)
(bad)
call
xchg
mov
test
mov
rol
pop
mov
and
add
(bad)
call
loopne
cmp
cmp
sbb
cmp
sti
xor
scas
push
shl
loope
dec
outs
adc
push
aad
out
ja
jo
(bad)
(bad)
jmp
shl
adc
retf
lock
sub
mov
dec
sub
mov
dec
arpl
sub
pop
mov
dec
mov
mov
cmps
adc
test
(bad)
(bad)
jmp
arpl
mov
or
add
cmp
xchg
arpl
mov
enter
(bad)
(bad)
jmp
fs
xchg
enter
pop
js
sbb
pop
inc
push
adc
in
(bad)
call
xchg
aad
rcl
cdq
and
cs
add
cwde
(bad)
jae
(bad)
(bad)
(bad)
push
bnd
adc
adc
push
jl
sub
addr16
xor
out
nop
(bad)
mov
test
cmc
(bad)
(bad)
inc
cmps
aad
jmp
xchg
ret
test
mov
adc
clc
mov
(bad)
ins
inc
aas
add
call
(bad)
call
call
cld
inc
fbld
adc
sbb
jg
jge
jbe
xor
cld
sahf
(bad)
(bad)
(bad)
(bad)
(bad)
ja
dec
pusha
pop
movs
or
adc
mov
inc
js
cli
jne
call
cmp
(bad)
(bad)
(bad)
push
(bad)
icebp
add
ja
jl
mov
cmp
push
pop
das
mov
xchg
push
push
aaa
mov
add
push
add
add
add
xchg
outs
and
cmps
sub
or
je
dec
aaa
inc
(bad)
(bad)
(bad)
jmp
test
mov
mov
sbb
addr16
hlt
jmp
in
jb
aaa
xor
dec
retf
pop
imul
cld
jg
mov
xor
cmp
rcr
test
sbb
push
repnz
out
(bad)
inc
jbe
jmp
jns
push
movs
and
push
mov
dec
cmps
pop
jecxz
outs
test
(bad)
call
sub
int
inc
out
out
sub
sub
int3
jecxz
or
sub
jg
(bad)
mov
xchg
mov
dec
and
stc
xor
xor
cs
(bad)
(bad)
inc
pop
shr
(bad)
cld
dec
movs
jnp
imul
push
mov
test
adc
jbe
push
mov
cli
call
aaa
js
pop
cld
jns
cmp
arpl
iret
pop
push
push
fcomip
inc
scas
jmp
pop
test
bound
sub
popf
into
loope
(bad)
push
jp
fsub
fwait
repnz
loop
mov
repz
inc
enter
cld
xchg
cmp
xor
mov
jo
test
jg
mov
lds
push
int3
retf
leave
mov
and
adc
(bad)
(bad)
(bad)
fist
cld
jnp
repz
stos
scas
je
cmp
cmp
out
repz
neg
(bad)
(bad)
mov
rol
push
pop
push
adc
mov
and
clc
jle
push
push
xchg
(bad)
jg
and
rcr
test
dec
add
push
or
jnp
(bad)
call
pop
outs
(bad)
fisttp
out
ja
rol
aad
pop
in
mov
mul
sbb
pop
cdq
mov
rcr
ja
jne
ret
icebp
js
sub
enter
mov
int3
inc
sub
(bad)
(bad)
(bad)
(bad)
gs
fild
pop
jne
out
ds
lds
lahf
cmpxchg
hlt
cmp
aas
mov
in
fild
dec
in
in
ss
jnp
int
mov
jge
fild
aad
idiv
pop
pop
shl
repnz
psubsw
iret
icebp
jl
(bad)
(bad)
(bad)
mov
lahf
aaa
mov
jg
jne
in
icebp
mov
rcr
scas
jmp
xlat
sar
mov
or
xchg
cmc
jle
pop
jge
pop
popf
lahf
mov
stc
fnstsw
out
(bad)
(bad)
(bad)
push
std
into
fcmovnb
xlat
outs
jp
sub
out
(bad)
mov
das
sti
jge
in
sti
ret
in
sbb
addr16
neg
call
pop
xor
stos
fldenv
jg
ja
jbe
rcr
ja
fdivr
(bad)
outs
(bad)
inc
push
adc
cld
push
xlat
cmp
sti
push
ss
addr16
(bad)
mov
fild
arpl
mov
loop
cmp
push
cli
imul
ins
clc
(bad)
(bad)
jle
lods
mov
fdiv
mov
sub
adc
(bad)
mov
fcomp
cmp
xchg
(bad)
fnstcw
pop
mul
scas
ss
jg
mov
jge
mov
fcos
mov
mov
leave
fdiv
neg
(bad)
xlat
in
mov
cmps
xchg
push
cmc
pop
std
cmp
jno
jo
dec
xor
das
mov
jne
mov
xor
cld
(bad)
(bad)
jl
xchg
daa
test
out
push
mov
(bad)
idiv
sahf
inc
outs
mov
clc
call
(bad)
dec
sbb
mov
(bad)
(bad)
(bad)
je
xor
cmc
cmp
int
add
mov
ins
rcl
add
or
imul
cmps
leave
cmps
sub
push
jg
(bad)
(bad)
stos
inc
aam
(bad)
sar
aaa
mov
shl
pop
fnstenv
(bad)
jmp
pop
int3
xchg
dec
test
push
cmp
repnz
pop
xchg
xchg
test
dec
std
in
call
fmul
dec
cmp
hlt
push
rcl
sub
lahf
dec
pop
sub
sub
inc
push
and
popa
dec
shl
pop
(bad)
(bad)
(bad)
mov
iret
sbb
repz
cmp
sub
in
movs
mov
mov
imul
mov
(bad)
jmp
and
add
sbb
xor
inc
cmp
jmp
hlt
test
movs
fcomp
push
cmp
inc
and
mov
arpl
(bad)
(bad)
call
sub
sbb
das
push
xchg
cli
mov
adc
ds
jb
fcmove
movs
lds
fbld
add
out
jns
test
enter
xchg
xchg
cmp
adc
mov
pop
jne
repz
mov
test
jno
popf
push
popa
jecxz
les
sbb
sbb
add
(bad)
call
sbb
mov
inc
dec
sub
pop
test
test
adc
jp
sbb
(bad)
dec
or
stc
push
mov
pushf
mov
xchg
jmp
cmc
jg
(bad)
(bad)
jmp
xchg
loope
inc
dec
mov
test
inc
adc
jae
call
mov
(bad)
(bad)
(bad)
sbb
into
sub
push
(bad)
mov
add
push
stos
cmp
out
mov
push
mov
sub
or
ror
mov
xchg
cmp
jno
add
loop
outs
fnsave
mov
lea
mov
mov
xchg
push
daa
jp
push
mov
fcomp
xchg
pop
adc
(bad)
(bad)
(bad)
pop
mov
mov
push
cmps
in
mov
clc
adc
imul
test
(bad)
mov
ret
push
add
pop
jo
movs
add
mov
add
jg
aas
rcr
cmp
ja
les
push
ds
mov
push
test
sub
inc
aam
xchg
scas
mov
(bad)
call
pop
std
add
fisttp
mov
jmp
sbb
test
(bad)
jmp
or
xchg
out
enter
xor
(bad)
jecxz
movs
into
inc
sub
jmp
dec
xchg
mov
ror
dec
mov
cmp
das
add
push
mov
sub
test
inc
dec
jae
push
stos
mov
inc
mov
jl
mov
popf
or
loop
(bad)
(bad)
(bad)
dec
sbb
mov
data16
popa
or
dec
jp
jle
sti
push
mov
inc
inc
pop
add
ret
add
add
sub
jg
push
ret
lea
fisubr
jb
jb
popa
xor
mov
call
lahf
ins
or
mov
and
cmp
aad
out
sub
inc
jmp
jmp
mov
push
mov
jg
xchg
inc
data16
(bad)
(bad)
mov
xchg
dec
cmc
jge
fisubr
in
inc
fisubr
cmp
test
mov
mov
jne
scas
pushf
test
leave
iret
mov
mov
adc
adc
in
sub
jno
mov
jmp
push
fwait
popaw
sbb
mov
ins
xor
jnp
push
call
cmp
and
cmp
ds
sub
and
retf
mov
inc
std
pop
xor
mov
add
(bad)
(bad)
out
hlt
fimul
pop
std
bound
push
shl
retf
xchg
popf
(bad)
cld
mov
(bad)
(bad)
in
lods
sahf
cmc
in
movs
xlat
pop
and
pop
adc
popa
shl
xor
(bad)
aas
popa
ss
sbb
loope
mov
popf
popf
rcr
ja
xlat
iret
push
jne
adc
pop
loopne
inc
out
sub
mov
leave
inc
daa
add
sar
sbb
(bad)
inc
out
in
or
(bad)
not
mov
imul
push
adc
rcl
mov
fstp
mov
jno
push
xchg
movs
add
shr
test
test
xchg
xchg
mov
push
mov
iret
in
or
aam
test
inc
sbb
xor
(bad)
(bad)
call
push
fisub
inc
out
test
push
retf
xchg
dec
pop
mov
jbe
cmp
jmp
(bad)
cmp
nop
ror
test
sbb
xchg
or
inc
push
mov
test
dec
push
push
and
popf
mov
and
movs
jl
sub
sbb
sbb
ins
mov
adc
and
or
(bad)
(bad)
jmp
sub
sub
jno
xor
and
pop
data16
xor
jb
sbb
lahf
pop
and
jmp
push
pusha
push
leave
lds
(bad)
call
jns
loop
and
mov
pop
mov
nop
push
or
call
outs
fidiv
or
je
cmp
xchg
mov
mov
test
in
and
adc
sbb
mov
or
(bad)
(bad)
inc
mov
neg
sub
fild
js
(bad)
jmp
or
aad
test
(bad)
jmp
retf
push
mov
mov
pop
aam
shr
shr
xor
dec
xor
test
mov
out
mov
call
xchg
dec
cmp
add
mov
popa
js
adc
mov
and
(bad)
fstp
adc
test
add
(bad)
data16
and
dec
push
(bad)
imul
jnp
test
push
movs
cmp
lods
retf
sar
sbb
add
lods
pushf
sub
sbb
stc
movs
(bad)
push
loopne
nop
call
jne
dec
mov
mov
pop
cmc
ret
jg
test
fcom
arpl
mov
cmp
jg
mov
pop
push
das
sbb
adc
not
test
fcos
mov
cmps
dec
jle
add
mov
dec
xchg
or
mov
inc
lds
xchg
test
dec
dec
sbb
jl
mov
and
xchg
adc
(bad)
(bad)
(bad)
out
(bad)
repnz
pop
inc
ret
push
mov
ret
stos
cmp
aad
sar
call
imul
imul
mov
xor
int
cmps
scas
push
mov
call
pop
inc
push
mov
jecxz
cwde
hlt
or
add
or
neg
mov
dec
or
adc
(bad)
jmp
test
adc
pop
inc
and
call
xchg
inc
bound
arpl
(bad)
(bad)
(bad)
inc
push
push
mov
jne
jmp
ins
cmps
pop
mov
inc
lahf
jg
imul
cmp
loopne
inc
fs
sub
xchg
imul
adc
(bad)
(bad)
(bad)
call
mov
and
adc
push
ret
inc
inc
xchg
dec
jmp
(bad)
(bad)
(bad)
call
adc
scas
push
sub
lods
cmc
sbb
or
arpl
movs
pop
movs
(bad)
fcomip
dec
mov
icebp
ficomp
call
cmp
push
add
nop
dec
adc
adc
adc
cmp
aaa
mov
test
adc
adc
clc
or
mov
pop
and
or
add
adc
xchg
adc
and
add
stos
add
add
sub
daa
repz
ds
inc
add
add
daa
jg
add
add
dec
or
inc
rcl
ins
ret
add
das
xor
inc
dec
dec
inc
pop
pop
adc
and
sub
mov
sub
mov
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
add
mov
les
add
inc
cmp
(bad)
gs
imul
pop
mov
outs
adc
aam
or
inc
jmp
fcom
dec
dec
arpl
inc
outs
fs
lea
sbb
cmp
shl
cs
test
mov
pop
ret
adc
push
sbb
outs
data16
dec
pop
dec
push
dec
outs
arpl
push
jns
add
inc
imul
sbb
ins
xor
fadd
cmp
jecxz
sbb
push
outs
mov
jo
imul
add
test
gs
sub
sbb
movs
mov
dec
cmp
mov
jnp
ins
outs
jbe
push
mov
int
sub
inc
leave
movs
sub
movs
mov
mov
or
push
outs
jo
rol
mov
dec
and
pop
sbb
aaa
call
fs
or
adc
dec
fs
mov
loop
jne
push
gs
inc
popa
arpl
ret
mov
sub
repnz
and
popa
call
loopne
cmp
retf
cdq
pop
push
mov
(bad)
inc
mov
ins
dec
sbb
push
jo
xchg
dec
ins
xor
lock
gs
ins
sub
ins
outs
rcr
ins
fsubr
xchg
mov
scas
push
icebp
pusha
adc
dec
fcmovb
ss
js
sbb
test
inc
shl
outs
(bad)
jne
sub
jns
inc
ins
jo
adc
ins
dec
data16
mov
adc
adc
loope
sbb
adc
movs
dec
fadd
inc
stos
push
jo
shl
push
test
fs
imul
push
sub
mov
vpunpckhqdq
in
loop
call
mov
mov
inc
rep
inc
and
nop
or
xor
push
imul
popa
fild
or
xchg
movs
and
cmp
or
sbb
adc
mov
jmp
mov
fcmovnbe
mov
add
pop
push
outs
ins
sbb
jne
mov
mov
pushf
and
or
jo
jb
xchg
cmp
pop
adc
xor
xor
(bad)
dec
daa
mov
jb
jbe
adc
push
xlat
aaa
push
movs
test
push
mov
xor
hlt
inc
shl
and
ss
loope
and
mov
rcr
cmps
lahf
mov
ret
into
loop
scas
das
jl
jae
adc
inc
gs
and
adc
push
ror
add
retf
inc
inc
fdivr
inc
jns
cmp
and
lock
and
imul
push
(bad)
cmp
pushf
add
sub
mov
xchg
adc
aas
sub
sbb
add
xchg
pop
sbb
pop
das
mov
out
bound
adc
int
pop
in
pop
jl
inc
dec
into
out
rol
fs
hlt
pusha
or
jle
cdq
mov
out
inc
inc
sub
dec
inc
push
push
and
loop
ins
stos
inc
jae
mov
inc
(bad)
ins
inc
test
fs
sbb
add
jp
sub
je
ja
mov
inc
push
dec
cwde
adc
push
xchg
gs
pop
sub
icebp
push
test
shl
adc
ins
xchg
addr16
sub
out
loopne
or
fidiv
outs
ins
mov
push
ja
fwait
in
jg
fsub
bound
addr16
add
mov
dec
inc
dec
adc
popf
push
dec
add
ret
mov
mov
fwait
inc
mov
push
adc
cs
sbb
xchg
popa
retf
mov
lods
push
sbb
add
jne
iret
add
fadd
ret
fsubrp
ret
mov
push
lods
xchg
push
push
iret
mov
sbb
xor
add
mov
sbb
add
xchg
fsub
dec
gs
push
jbe
nop
pop
push
xor
fldcw
fcomp
fild
jnp
and
push
mov
and
jl
ins
inc
xchg
add
jns
ret
inc
bound
ret
push
fsubr
jo
cmp
mov
push
and
and
fimul
jae
fcmove
cmp
(bad)
rol
inc
bound
push
mov
ds
mov
cmp
je
addr16
inc
(bad)
sub
mov
ud0
ins
push
or
push
out
sbb
jne
inc
imul
mov
test
push
sbb
inc
jb
daa
ins
mov
js
rcr
adc
inc
sub
cmp
pop
sbb
jmp
fs
call
inc
out
(bad)
and
xor
inc
ins
addr16
push
push
out
push
cmp
jno
aaa
rol
sub
imul
dec
inc
das
mov
mov
jno
aaa
xchg
outs
dec
push
push
add
push
in
mov
cmp
fidivr
pop
xor
lds
loope
into
cmps
loop
inc
arpl
test
js
cmp
outs
out
enter
das
ja
popa
jae
not
inc
add
mov
out
xor
call
dec
aas
jne
das
cld
sbb
popa
ins
dec
outs
dec
cmp
les
adc
mov
jmp
clc
sbb
add
mov
fisub
popa
add
pop
add
add
test
xor
push
jmp
push
dec
xor
pop
loope
fs
movs
xor
mov
test
loopne
push
dec
pop
push
bound
mov
sbb
inc
mov
sbb
sub
mov
jns
dec
iret
bound
sbb
setno
inc
cmp
or
push
fidiv
es
jl
push
js
in
cmc
cmp
dec
cmps
jae
mov
shl
movups
dec
jl
xchg
pop
mov
add
pop
inc
or
dec
rol
shl
push
sahf
rcr
push
sub
inc
xor
sahf
pop
xchg
xchg
cmp
inc
add
xor
add
les
xchg
adc
jmp
push
pop
sub
inc
jo
and
mov
push
push
mov
daa
(bad)
or
dec
and
cmps
cmp
push
jmp
rol
push
jp
jno
cmp
jbe
int
add
or
push
int3
pushf
dec
dec
inc
pop
push
push
jnp
adc
jo
in
cmp
push
imul
pop
outs
fst
cmp
pop
push
ins
sbb
shl
or
add
jo
imul
xor
push
rcr
push
jp
pop
cmp
jbe
adc
mov
xchg
movs
mov
cmp
push
out
in
shl
in
inc
add
rsqrtps
xchg
pusha
pusha
(bad)
mov
repz
push
outs
call
jne
sbb
dec
or
push
mov
jb
ins
jae
mov
mov
mul
retf
sub
or
in
and
ins
push
jbe
fst
sbb
dec
or
ret
jmp
adc
dec
(bad)
sub
sbb
pop
push
ds
xchg
jmp
push
shl
push
cdq
adc
xor
inc
cmp
fld
push
adc
inc
xchg
sub
aad
dec
cmp
push
cmps
and
pop
add
imul
push
xchg
sbb
xchg
and
jnp
test
cmp
push
addr16
out
sbb
lods
or
stos
inc
pop
pop
cmps
gs
ret
iret
lds
jecxz
sub
adc
daa
outs
shr
add
mov
push
or
and
fcom
out
cwde
pusha
and
push
inc
retf
push
mov
aam
outs
inc
jmp
add
aam
inc
and
call
ins
imul
cdq
sub
stc
mov
popa
mov
xchg
mov
mov
pop
jae
bound
pop
and
ret
push
jb
and
int
mov
push
mov
sub
sar
ret
dec
ret
inc
add
cmp
mov
lock
add
addr16
imul
imul
dec
bound
add
or
or
pop
ud2
(bad)
(bad)
(bad)
inc
or
and
lock
xchg
add
sbb
sub
cmp
push
adc
lock
adc
in
push
stc
sbb
lock
add
movs
adc
add
lahf
sub
xchg
adc
or
mov
xchg
mov
sub
lock
add
jne
pop
add
pop
add
lock
add
push
(bad)
jmp
jl
xor
mov
sbb
adc
sti
(bad)
(bad)
js
sbb
movs
add
or
adc
adc
add
pop
or
jp
rol
mov
pop
in
pop
lock
push
jne
(bad)
out
and
sbb
xlat
lock
loope
pop
lock
lock
add
lock
push
jnp
or
push
xlat
xor
pop
js
sub
sub
or
or
or
adc
adc
push
(bad)
jg
mov
jl
push
sub
or
pop
movups
fst
outs
push
push
sbb
pop
or
jb
adc
inc
or
sub
inc
pop
pop
pop
add
pop
pop
and
out
invd
dec
invd
push
add
add
sub
ins
and
cmp
scas
xor
adc
push
cld
inc
pop
inc
lock
test
pop
sub
sub
or
sub
div
sbb
std
add
syscall
retf
sbb
adc
lds
or
sbb
add
aam
aad
add
mov
or
das
add
lea
xor
fbstp
xchg
push
lock
add
sbb
adc
loop
sub
sbb
add
mov
std
call
sub
lock
push
cmp
adc
add
cs
and
or
xor
adc
sbb
jmp
push
add
adc
pop
adc
cs
and
xlat
or
push
pop
xor
add
cld
fstp
mov
push
stos
mov
out
les
add
mov
or
adc
or
(bad)
push
and
dec
daa
push
aaa
pop
or
push
(bad)
inc
or
cdq
sub
inc
and
icebp
xchg
cmps
xor
dec
inc
and
push
inc
lock
add
in
pop
sti
push
shl
sahf
add
add
pop
add
loopne
push
or
pop
ins
pop
push
sub
push
(bad)
(bad)
jg
ins
jo
add
inc
inc
push
das
aaa
sub
sbb
mov
adc
dec
jmp
inc
adc
xor
stos
push
(bad)
jg
(bad)
cmp
cmps
inc
adc
push
adc
push
push
jb
xor
jbe
dec
jg
pusha
lds
mov
cmp
(bad)
jmp
pop
pop
cld
or
push
adc
xchg
ins
sbb
or
adc
sub
in
jmp
xor
xchg
ds
mov
push
pop
outs
jmp
add
inc
jmp
cwde
or
sbb
pop
(bad)
add
jae
mov
cmp
call
xor
mov
cmps
and
jb
add
xchg
adc
outs
push
adc
mov
jle
ds
inc
dec
das
adc
sub
xchg
push
xor
imul
cli
jbe
lock
mov
sbb
add
aas
xor
cmp
or
sub
cmp
dec
sub
daa
jae
inc
(bad)
scas
cli
add
movs
(bad)
and
pop
pop
dec
mov
dec
mov
aaa
rcr
jp
dec
xor
push
ds
sub
or
sbb
add
lahf
or
idiv
es
adc
call
cmp
sbb
and
inc
cmp
mov
xchg
dec
push
jge
xor
adc
hlt
inc
jo
add
xor
lock
jmp
cld
loopne
or
(bad)
(bad)
cmp
xor
cmp
das
outs
adc
add
mov
and
daa
sbb
icebp
fistp
adc
or
sbb
fild
sub
or
retf
mov
mov
sub
pop
add
scas
std
dec
inc
or
or
and
xor
push
mov
fdiv
add
lods
dec
(bad)
cmps
adc
push
sbb
leave
adc
mov
fstp
je
sbb
hlt
xchg
adc
mov
pop
imul
pop
dec
adc
sbb
or
push
jl
aam
lock
jmp
push
unpckhps
adc
xor
jg
sub
call
add
in
sbb
lock
fadd
or
dec
adc
adc
adc
psubusb
dec
scas
int
dec
and
sub
scas
cld
mov
dec
cmp
pop
pop
ja
ins
sub
pop
imul
xlat
jg
inc
inc
push
or
nop
pop
dec
bound
or
loope
mov
call
sbb
adc
mov
push
and
daa
push
ss
pushf
push
movs
rol
lods
scas
or
imul
inc
or
js
sub
adc
cmps
mov
(bad)
xor
dec
add
call
sbb
pop
add
adc
aaa
mov
and
push
sbb
add
sbb
sub
pop
or
mov
mov
sbb
icebp
add
ds
pop
or
sbb
xor
daa
daa
push
push
les
jge
inc
and
adc
jle
or
adc
mov
push
mov
jmp
and
lock
add
or
xor
cwde
or
and
mov
cmp
sbb
push
adc
or
cld
in
stos
fiadd
and
jp
das
inc
sbb
(bad)
dec
sbb
cmp
push
push
jg
sbb
xor
addr16
add
adc
outs
retf
xor
or
push
retf
pop
adc
fstp
(bad)
lock
je
daa
adc
lock
(bad)
(bad)
(bad)
inc
pop
punpcklwd
lock
inc
or
push
inc
popf
and
adc
pop
pop
pushf
adc
and
cmps
jae
xor
sub
push
dec
sub
dec
outs
inc
pop
pop
sub
fwait
aaa
outs
or
cvttps2pi
ucomiss
sbb
sub
das
adc
adc
dec
lock
inc
push
or
bndstx
dec
seto
or
adc
or
inc
inc
adc
or
stos
cmp
aaa
push
adc
es
pop
cld
or
jae
adc
adc
pusha
aad
add
or
sbb
xor
push
mov
sar
lock
cs
dec
pop
lods
push
dec
test
imul
ja
sub
dec
push
and
push
cld
jmp
ret
mov
sbb
xchg
adc
(bad)
or
pop
sbb
push
xlat
add
push
cmps
daa
xor
sbb
fadd
lock
adc
dec
clc
ror
adc
pop
adc
outs
xor
push
dec
repnz
pop
in
mov
or
adc
push
ins
or
add
hlt
jg
imul
adc
or
fwait
push
jb
push
emms
sub
clc
fcomip
push
sti
add
lock
jno
pop
or
push
mov
nop
mov
adc
add
push
daa
add
xor
(bad)
(bad)
jmp
cmp
xor
sub
and
or
mov
lock
adc
inc
jno
sub
sub
add
cmp
and
xchg
add
add
loopne
adc
aas
scas
adc
xor
sub
jmp
fs
xor
sbb
or
std
in
sbb
and
sbb
mov
sub
loope
sbb
adc
inc
daa
or
ret
mov
add
inc
dec
je
mov
xor
add
jbe
fild
and
push
push
xor
push
cld
cmp
push
push
or
or
xchg
test
and
sub
push
adc
and
add
dec
adc
js
pusha
je
sub
or
(bad)
cmp
outs
or
adc
or
or
pop
pop
jg
jg
mov
push
pop
adc
add
lea
or
idiv
cmp
data16
daa
add
fmul
sub
jge
jo
pusha
clc
lock
sub
mov
push
or
dec
test
je
adc
mov
add
add
(bad)
pop
cld
in
xor
pop
(bad)
mov
mov
stos
mov
es
add
adc
adc
cs
and
sub
push
and
(bad)
scas
(bad)
icebp
push
sbb
inc
sub
adc
cmp
or
mov
adc
ja
xchg
or
leave
cmps
hlt
or
xlat
push
aaa
cld
inc
adc
stos
ins
movs
or
cmp
fist
jo
xor
enter
add
pop
sahf
push
lock
mov
es
movs
xchg
das
push
std
dec
(bad)
xor
jno
or
mov
lock
and
sbb
inc
push
or
adc
adc
sbb
cmp
dec
mov
xchg
push
or
and
pop
or
jo
mov
(bad)
sbb
pop
adc
inc
mov
test
dec
or
push
or
cmp
(bad)
xor
lock
dec
or
or
clc
ja
mov
or
lock
push
or
sbb
outs
sahf
daa
pop
sub
cmp
dec
jbe
fdiv
pop
shl
or
dec
push
or
or
and
push
retf
out
test
sbb
sbb
sub
mov
dec
jg
mov
call
and
push
jns
push
mov
hlt
adc
test
dec
cmp
push
cwde
pusha
or
and
jg
dec
adc
sub
arpl
push
cmps
sbb
adc
cli
outs
push
fsub
add
mov
push
ins
inc
or
pusha
cs
xor
sub
sub
mov
mov
adc
inc
scas
inc
pop
and
dec
pushf
fucomip
outs
adc
or
adc
sbb
aas
or
adc
ror
or
mov
push
int3
in
call
xor
and
sbb
adc
ds
rdpmc
cs
push
dec
pop
sbb
and
(bad)
jg
jnp
pop
cs
or
pop
add
mov
sbb
adc
or
push
and
pop
adc
jp
xor
lock
dec
dec
add
ror
jbe
dec
shr
xlat
adc
popf
add
mov
or
push
hlt
or
add
aas
les
or
adc
outs
stos
scas
js
or
push
and
inc
invd
fs
or
or
in
jg
cli
sub
sbb
mov
adc
fcomip
pop
mov
pop
sub
xor
dec
adc
push
sbb
adc
adc
jbe
add
push
fisubr
cmp
leave
out
mov
lds
pop
mov
adc
pop
mov
lods
push
mov
xor
mov
push
(bad)
pop
mov
xor
push
push
jno
or
ins
jp
push
add
fdiv
or
push
mov
or
adc
sub
enter
clc
and
push
mov
jecxz
adc
sbb
adc
xchg
jbe
mov
and
push
or
add
loopne
mov
inc
sbb
in
push
fs
ss
lock
pop
imul
or
aas
or
cld
mov
xchg
mov
or
push
mov
pop
push
add
(bad)
mov
lock
psraw
inc
or
jmp
jmp
test
inc
push
cmp
jo
jno
lock
add
lods
add
push
add
adc
or
xchg
adc
sbb
jl
xor
inc
das
pop
pop
pop
nop
sub
dec
addr16
push
push
pop
iret
inc
out
jle
adc
(bad)
mov
pop
pusha
inc
pop
xor
push
bound
pop
push
adc
and
dec
xor
jo
adc
pusha
aam
loop
jo
add
call
add
adc
mov
push
pop
and
outs
mov
adc
jmp
add
dec
mov
(bad)
push
and
and
pop
data16
adc
inc
xor
xor
and
mov
jns
add
sbb
loopne
scas
jo
push
sbb
lock
and
pop
hlt
lods
mov
sub
or
dec
mov
adc
pop
nop
retf
hlt
xchg
cs
dec
mov
popf
jae
jmp
js
sub
or
cmp
add
push
or
sbb
jp
mov
add
gs
and
push
sub
jg
cld
xor
adc
adc
pusha
inc
dec
sbb
jae
js
sub
push
and
push
cmp
pop
xor
fwait
mov
adc
adc
push
jbe
inc
push
mov
hlt
dec
mov
add
sbb
lock
add
push
leave
(bad)
jg
sbb
movhps
or
adc
pop
femms
or
adc
mov
mov
lock
loope
jnp
or
enter
xor
add
xlat
adc
jg
push
or
sub
(bad)
or
push
and
add
ret
add
cmp
fdivr
jno
cmp
adc
or
or
inc
inc
prefetch
or
adc
lock
or
adc
lock
lea
dec
fbstp
and
cmp
repz
bndldx
dec
ss
ja
lods
std
mov
movs
mov
je
sbb
fisttp
add
sub
mov
outs
fmul
pusha
mov
mov
sbb
(bad)
sub
aam
adc
push
adc
or
xchg
lock
aad
cmps
mov
adc
push
add
sbb
cmp
bound
adc
sbb
sbb
inc
sbb
inc
or
adc
pop
jle
sbb
clc
sbb
inc
lahf
mov
inc
pop
sbb
(bad)
(bad)
(bad)
call
(bad)
sbb
add
push
pmaxub
pushf
and
inc
add
rol
and
aas
sti
adc
adc
adc
adc
and
or
adc
std
dec
or
xor
das
es
sub
and
push
mov
push
or
dec
mov
sbb
loope
cld
and
pop
bound
cwde
sub
xor
cmp
and
adc
inc
jae
pop
sahf
or
xor
inc
add
xchg
add
fistp
add
mov
adc
and
or
imul
add
or
push
jp
inc
std
mov
hlt
xor
add
inc
sbb
adc
and
cmp
jmp
mov
adc
movups
jne
adc
pop
inc
mov
es
jg
mov
or
sysenter
jno
test
sbb
mov
jg
xor
fimul
xor
inc
xor
fwait
inc
adc
je
add
add
call
cs
pop
enter
push
pop
sub
dec
mov
push
add
push
sub
lods
xchg
sub
inc
cmp
adc
aas
test
jmp
adc
or
jecxz
cmp
adc
inc
mov
(bad)
sti
pop
inc
retf
test
js
adc
push
add
gs
sbb
pop
push
adc
dec
daa
dec
call
sbb
dec
xor
inc
sbb
popf
xor
outs
(bad)
and
push
push
cld
clc
xchg
pop
pop
or
or
add
stos
cmp
les
push
or
push
sbb
in
fs
cmp
mov
aaa
push
push
lock
pop
or
pop
cwde
and
test
or
sbb
cmp
jle
jecxz
sub
and
adc
cwde
ud0
das
dec
pop
or
cs
sub
push
push
inc
sbb
sbb
sbb
and
add
xchg
lods
sbb
or
sub
adc
sbb
jbe
fbld
or
adc
or
sbb
adc
dec
or
jg
call
ja
pop
sbb
or
adc
out
cs
push
sbb
add
test
add
lock
jb
push
js
idiv
imul
and
dec
ret
and
cmp
dec
mov
outs
or
jp
test
(bad)
add
adc
sbb
mov
jmp
retf
or
and
sub
dec
sbb
aas
sbb
push
lods
xor
ins
prefetcht1
jle
pop
pop
or
pushf
cmp
adc
or
sub
push
cvtps2pi
or
fmul
dec
(bad)
pop
std
push
jge
adc
inc
adc
or
arpl
or
dec
add
mov
retf
int3
ret
int
outs
jl
mov
add
push
clc
or
or
(bad)
xor
sbb
cmp
sbb
and
push
dec
aam
push
daa
and
cmp
inc
sub
ins
rcpps
adc
data16
ret
mov
pop
mov
scas
push
test
jae
cmp
pop
loopne
mov
xchg
movlps
jns
inc
mov
xchg
sbb
and
or
xor
cmp
es
fiadd
cmp
and
pop
pop
cli
test
sbb
inc
and
dec
or
mov
pop
cmp
rcl
lock
jl
jno
add
or
push
pop
pop
cmp
adc
sub
cmp
punpcklwd
and
jb
lock
add
and
popf
xor
fsubr
imul
xor
adc
(bad)
mov
mov
or
and
and
std
stos
call
sub
push
sub
dec
sbb
adc
xor
sbb
fbstp
adc
daa
cmp
and
xor
inc
dec
jbe
xor
fistp
and
sbb
xchg
cmp
mov
ficomp
adc
or
adc
loopne
pop
cmp
push
inc
inc
or
sub
pop
adc
sbb
sbb
es
sbb
stos
mov
adc
sbb
das
push
mov
das
sub
clc
ret
and
sbb
adc
adc
dec
outs
mov
jb
lods
sub
adc
popa
cmps
ja
dec
test
cmp
out
aaa
push
adc
add
mov
enter
inc
stc
fadd
and
lock
add
aas
add
or
pusha
push
adc
lock
add
lods
test
fs
add
jnp
(bad)
sbb
loop
sub
inc
hlt
and
sub
mov
inc
adc
or
add
add
sbb
xor
jp
cld
cmc
mov
or
or
fxch
push
pop
cmps
daa
jne
dec
mov
cmps
push
loop
outs
sahf
or
or
add
test
daa
(bad)
fmul
push
add
jmp
push
sbb
add
cmp
xor
pop
xor
cmp
xor
add
adc
cmp
push
xchg
adc
pop
pop
and
ds
sar
push
push
adc
inc
stos
popa
and
or
into
xor
add
(bad)
mov
jno
adc
or
jnp
sar
mov
sbb
mov
push
dec
push
cmp
sbb
inc
adc
or
inc
pop
sbb
sbb
sbb
mov
(bad)
push
add
aas
jmp
outs
sbb
adc
addr16
sub
sti
push
call
inc
cmp
or
push
ss
jnp
out
adc
xor
adc
adc
pop
rol
or
add
pop
sub
add
sbb
js
push
and
test
in
adc
xlat
lock
or
sub
fsubr
mov
add
dec
or
lahf
cmp
push
cvtdq2ps
add
mov
and
sub
inc
add
push
add
mov
lock
scas
dec
lock
push
add
sbb
add
mov
or
sub
push
push
mov
inc
cmp
inc
je
in
retf
je
jmp
adc
add
in
push
mov
adc
into
adc
and
sbb
(bad)
(bad)
(bad)
jmp
jl
das
cmp
pop
sbb
or
lock
jg
mov
ins
and
push
adc
sbb
dec
je
and
pop
pop
sbb
mov
sub
push
pop
sbb
loop
loope
or
adc
dec
imul
pop
or
adc
(bad)
(bad)
jl
mov
pop
mov
xor
ss
and
sbb
adc
(bad)
(bad)
push
outs
push
xor
sub
pusha
pop
adc
push
pop
pusha
push
pop
pop
inc
adc
pop
add
and
ud0
or
inc
and
or
inc
push
or
push
adc
dec
mov
lock
lock
sub
(bad)
fwait
or
add
adc
stos
push
movhps
or
movs
inc
dec
inc
xor
jae
push
cmp
ja
sub
or
adc
js
sbb
jbe
xor
xor
add
inc
add
sub
or
sbb
mov
lods
cmp
ret
fild
jb
or
cmp
std
mov
mov
adc
pop
or
adc
adc
adc
push
sbb
and
or
inc
mov
and
dec
or
sti
jle
cmp
inc
push
dec
and
fs
sbb
fwait
hlt
xchg
xchg
dec
sub
pop
mov
adc
and
mov
sub
dec
sbb
push
cmp
sbb
sbb
lock
cmp
add
lock
adc
(bad)
out
add
sbb
ds
xor
push
xor
xor
or
push
daa
nop
jmp
sub
sub
sub
push
or
sbb
mov
pop
lock
sbb
sub
inc
sub
sahf
adc
dec
inc
adc
adc
pop
rcl
shl
xor
push
adc
xor
jg
pop
adc
push
movaps
adc
sbb
lock
(bad)
imul
add
dec
sbb
or
push
loopne
or
or
pop
movhps
mov
(bad)
dec
cs
or
xor
pop
ja
sbb
ins
inc
loopne
inc
push
or
sbb
push
lods
jbe
out
loopne
pop
adc
xor
sbb
mov
sub
pop
pop
pop
cli
sar
bound
push
inc
lods
clc
scas
clc
adc
inc
pop
adc
cs
sbb
outs
adc
and
stos
push
sbb
inc
(bad)
and
adc
or
lock
inc
es
adc
cmps
pop
inc
outs
ss
sub
xor
or
daa
mov
pop
adc
or
outs
clc
(bad)
and
pop
add
adc
pushf
adc
ds
add
ins
or
push
and
push
std
sub
sub
sbb
pop
dec
or
sbb
push
push
jo
or
pop
mov
je
xor
inc
jnp
fwait
push
jne
inc
xchg
or
cmp
hlt
dec
fadd
push
pusha
cmp
mov
and
cmp
push
push
cmp
and
cmp
jl
call
push
adc
xor
movs
aas
cmp
sub
jg
imul
and
push
mov
jo
call
in
hlt
adc
or
push
or
cli
sub
sub
lock
stos
loop
add
test
mov
mov
ret
lock
cmps
add
into
jbe
inc
pusha
xchg
loop
jnp
leave
or
adc
push
push
pop
sbb
jle
xchg
jg
or
sub
push
add
loopne
aas
or
jbe
sub
lock
push
dec
ret
push
adc
inc
and
(bad)
outs
pop
push
or
je
add
scas
dec
push
pop
and
mov
(bad)
fbld
sub
or
outs
mov
push
(bad)
xor
mov
xor
xor
xor
mov
pop
or
pusha
xor
or
adc
das
rsm
xchg
mov
cmp
sbb
sub
call
adc
cmovo
xor
jbe
repnz
mov
add
and
pop
inc
xchg
push
inc
push
data16
sbb
or
sub
push
or
cli
out
mov
sbb
pop
pop
adc
mov
push
add
mov
pextrw
test
xchg
push
or
cmp
aaa
jae
jg
jmp
adc
or
call
inc
adc
jecxz
push
inc
or
pop
ret
mov
add
nop
ret
(bad)
dec
outs
and
je
or
call
pop
add
sub
jg
pop
inc
xor
mov
dec
jo
lock
enter
pop
adc
sbb
mov
adc
dec
sbb
pusha
dec
inc
sar
sbb
inc
cmp
sub
add
(bad)
pop
jg
sbb
es
adc
push
pop
inc
pop
outs
movs
inc
icebp
imul
push
or
cmp
mov
pushf
inc
push
and
mov
adc
adc
pop
cmp
cld
idiv
nop
jae
stos
ja
lock
cmp
and
fwait
cmp
or
sbb
(bad)
push
dec
adc
dec
xor
or
push
aas
cs
ss
sub
pop
or
or
fsub
out
stos
mov
ret
push
or
sbb
ins
dec
(bad)
lock
add
inc
adc
adc
and
sbb
sbb
outs
(bad)
call
and
and
sub
sub
sbb
loop
cmp
pop
push
xor
pop
sub
jmp
sbb
aaa
jbe
jnp
mov
bound
sbb
stos
sub
cmp
sti
jg
call
daa
pop
cs
sysexit
sbb
xor
or
fcomp
xor
push
mov
aaa
inc
imul
or
jg
sub
dec
xor
sbb
and
ficomp
sub
jb
push
(bad)
cmp
jecxz
retf
or
or
push
and
daa
and
test
push
ror
in
or
(bad)
and
pop
push
jp
mov
mov
lock
add
test
cmp
jb
leave
lock
sbb
jnp
mov
jno
cmp
lock
add
fcomp
loopne
retf
lock
rol
pop
mov
push
mov
lock
aaa
cdq
neg
or
or
push
add
xor
push
loope
adc
test
adc
das
lds
loope
add
add
pop
dec
mov
add
cmova
fwait
adc
stos
movd
push
aad
jp
and
js
setp
mov
and
jno
xchg
dec
sbb
nop
xor
sub
adc
xor
adc
dec
pop
adc
hlt
outs
out
mov
les
or
lds
push
mov
mov
loopne
xor
add
cs
mov
jmp
lock
das
sbb
lds
pusha
adc
inc
cmp
dec
out
adc
dec
xor
outs
push
dec
shrd
jmp
push
daa
add
mov
pusha
xchg
push
shr
pop
add
or
fs
hlt
sub
push
xor
xor
enter
inc
pop
adc
cmps
or
scas
mov
push
add
ret
scas
mov
inc
dec
push
outs
mov
xchg
push
mov
adc
shr
mov
add
jbe
or
pop
or
inc
mov
test
jp
jle
cmovp
jg
pop
push
cmp
cmp
loopne
clc
imul
pusha
adc
add
test
or
add
mov
add
sbb
cmp
mov
adc
jmp
mov
dec
outs
add
mov
push
cmp
and
adc
and
sbb
push
jmp
mov
push
xor
addr16
sbb
adc
stos
scas
xor
jle
push
sbb
das
adc
in
pop
inc
sbb
cdq
cmovbe
ss
loopne
pop
lock
xor
mov
or
mov
add
out
fild
adc
popa
and
clts
push
adc
pop
(bad)
xchg
xor
sbb
or
movs
mov
sub
push
or
and
push
jnp
lock
(bad)
fbld
adc
pop
aas
cmp
xchg
mov
adc
jns
pushf
lock
scas
std
(bad)
fbstp
addr16
inc
xor
daa
xchg
out
into
(bad)
cmp
xchg
pop
and
jg
std
data16
inc
and
or
cmp
je
pushf
adc
jg
cmp
call
mov
pop
push
add
ret
push
call
push
xor
in
scas
unpcklps
loopne
pop
mov
pop
repnz
mov
or
mov
sub
or
adc
imul
or
jb
sbb
lods
adc
fs
adc
sbb
push
push
pop
adc
pop
or
adc
adc
lahf
and
fistp
or
xor
or
or
push
fbld
dec
add
or
add
pop
add
stos
add
mov
fs
add
mov
mov
scas
clc
dec
push
aam
cmovp
lock
dec
add
lock
push
add
jle
dec
dec
mov
mov
popf
lahf
push
mov
lock
data16
ss
stos
add
add
lock
test
mov
add
or
or
and
mov
or
and
out
or
dec
(bad)
sbb
lock
pop
push
or
jo
or
and
ja
fbld
xor
je
les
mov
je
add
(bad)
adc
push
adc
xor
inc
add
pop
loope
repnz
cmp
or
pop
sub
sub
pop
lock
push
or
push
adc
das
push
(bad)
nop
or
xchg
inc
or
pop
push
xchg
or
pop
push
mov
mov
dec
add
sub
jmp
ja
lock
pop
push
push
or
adc
or
add
ins
dec
(bad)
call
push
push
jo
aaa
or
mov
or
sbb
mov
in
add
mov
add
shr
sbb
invd
rcr
or
call
adc
imul
popa
pop
dec
daa
js
xchg
and
sbb
aaa
sub
and
aas
sub
inc
sbb
pop
adc
(bad)
das
and
push
mov
wbinvd
and
or
lock
jbe
test
and
push
or
or
out
jmp
dec
sbb
add
push
push
add
or
or
or
cld
outs
les
adc
sbb
jl
(bad)
add
add
cmp
(bad)
jg
jne
adc
add
or
or
or
push
adc
xchg
lock
add
sub
mov
and
add
push
cmp
cs
das
jp
or
sbb
and
xor
outs
pop
adc
sbb
pop
sbb
lods
add
adc
dec
dec
push
ret
cs
mov
popf
mov
or
push
or
adc
inc
and
sbb
jp
or
or
es
dec
adc
push
test
dec
pop
add
or
pusha
cmps
add
jl
mov
sbb
sbb
and
sbb
dec
or
shl
jns
cwde
mov
sbb
adc
pop
push
hlt
xchg
add
push
in
pop
add
or
stos
loopne
ds
nop
cmp
push
outs
fdivrp
test
sbb
sbb
jo
inc
add
dec
xor
sar
add
and
aad
pop
jo
inc
stos
int
sbb
pop
sbb
adc
add
or
or
sub
test
xchg
or
pop
push
sbb
call
or
and
adc
push
push
or
sbb
sub
push
mov
test
sbb
or
dec
retf
outs
fwait
and
or
inc
cmp
sbb
imul
push
jecxz
lock
or
add
mov
add
lock
imul
push
mov
dec
adc
push
push
and
sbb
inc
loop
push
dec
inc
push
and
and
adc
ins
cmp
inc
and
cmp
inc
or
dec
or
push
adc
pushf
mov
imul
or
cdq
in
mov
shl
lock
xchg
jecxz
dec
add
push
int
push
jnp
adc
imul
popf
ret
cmp
sub
test
mov
mov
xchg
sar
emms
or
sub
sub
cmp
lods
jmp
add
cmp
es
add
scas
sbb
and
adc
and
add
and
(bad)
mov
pop
imul
and
sub
push
sub
shr
call
cmps
test
sub
add
sbb
hlt
ins
mov
lock
jo
ins
dec
mov
xor
push
test
sub
adc
jge
out
add
popa
test
adc
jbe
mov
cdq
dec
pop
mov
fwait
ret
lock
add
shl
push
inc
pop
popf
mov
and
or
js
inc
shl
mov
cli
outs
or
xor
ret
push
cmp
mov
push
push
sahf
lods
dec
add
adc
dec
add
or
sbb
dec
fwait
mov
(bad)
adc
or
adc
sbb
retf
cmps
out
push
inc
push
inc
lock
add
and
retf
loop
cwde
cs
jmp
or
lds
pop
jbe
pop
cmp
jo
pop
jo
mov
clc
sbb
test
push
add
jae
outs
xchg
sar
outs
add
pop
cmp
pop
popa
ret
push
adc
icebp
lds
dec
aaa
and
mov
adc
sbb
add
dec
xor
into
shr
pushf
or
add
add
jle
push
clc
add
and
mov
inc
push
and
sub
push
or
mov
xor
(bad)
fild
cmp
or
push
or
or
cmp
or
or
and
std
call
adc
or
and
inc
sub
or
push
jo
aas
cwde
adc
sbb
cmp
inc
cmp
inc
aaa
sbb
aaa
inc
xor
jmp
scas
clc
(bad)
test
inc
sbb
push
sub
or
xor
sub
js
cmp
xor
sub
xor
jg
call
cmp
xor
inc
cmp
and
cmp
sbb
and
jmp
(bad)
pop
and
pop
inc
xor
jo
and
inc
aas
dec
pop
inc
dec
dec
das
fstp
sub
sub
cmp
and
xor
daa
sub
arpl
daa
push
cmp
add
cmp
sub
repz
fiadd
push
aas
cmp
xor
push
xor
xor
cmp
xor
xor
xor
mov
jg
xor
cmp
fdiv
cmp
aaa
dec
and
cs
outs
mov
push
dec
and
and
ins
sub
inc
dec
push
es
loopne
mov
sub
sub
push
xor
inc
shr
mov
cmp
inc
mov
mov
aaa
xor
es
cmp
xor
fs
outs
mov
pop
dec
cld
add
outs
clc
or
inc
ds
ds
sub
and
sub
inc
outs
(bad)
(bad)
inc
inc
inc
ds
inc
push
push
cmp
xor
es
and
pusha
xor
jo
jne
(bad)
(bad)
inc
pop
inc
dec
ins
aam
inc
sub
xor
call
cmp
inc
ds
pop
dec
lahf
loopne
(bad)
out
mov
mov
stos
(bad)
inc
cmp
push
cmp
inc
pop
sub
inc
push
push
add
xor
push
mov
dec
lea
add
jne
xchg
dec
jnp
ins
cmp
mov
aaa
mov
in
xor
rcr
(bad)
call
imul
and
imul
push
sub
cmp
pop
movs
mov
dec
push
ins
and
and
dec
add
pop
or
mov
add
int
(bad)
movhps
pop
or
add
xchg
pop
adc
aas
and
add
adc
add
or
or
(bad)
adc
jnp
loopne
sbb
sbb
push
xor
add
or
stos
pop
shl
xor
pushf
or
iret
pop
dec
scas
xor
xchg
pop
or
(bad)
fdiv
add
adc
pusha
arpl
or
cmps
inc
test
xchg
inc
sub
cmp
or
add
jl
stc
or
lock
add
add
sbb
or
dec
jle
sub
lock
lock
fs
mov
push
sbb
adc
push
lock
add
mov
aam
adc
sub
adc
dec
add
aad
sbb
movs
inc
rcl
in
push
sub
dec
mov
pop
lahf
sbb
movs
add
sbb
pusha
(bad)
push
inc
sbb
pop
cmp
fs
jb
loop
test
int3
add
sub
test
xor
cmp
and
add
pop
push
and
push
xor
add
pushf
ret
mov
adc
(bad)
inc
fild
aas
or
mov
inc
sub
and
jbe
push
pop
(bad)
mov
add
fcmovu
shl
fsubr
dec
add
adc
mov
imul
pop
sub
dec
aas
lea
adc
and
or
inc
mov
ja
mov
xor
inc
jnp
adc
and
pop
mov
mov
test
mov
ins
inc
xchg
cmp
jmp
and
sub
test
jge
pop
inc
mov
xor
mov
jg
jno
pop
adc
shl
sti
mov
mov
and
sbb
add
or
or
pop
adc
verw
pop
sti
jnp
sbb
sub
or
or
jb
pushf
and
in
(bad)
fisttp
xor
push
xchg
xchg
add
sbb
ss
imul
add
aas
scas
mov
or
add
and
cmp
push
rcl
push
cmps
xor
mov
sbb
or
add
or
arpl
sbb
or
mov
jno
sbb
adc
in
imul
sub
rol
inc
push
sub
sub
pop
pop
jnp
dec
sar
stc
or
mov
dec
test
and
fwait
leave
outs
mov
or
cmp
sbb
inc
adc
xor
ins
ror
or
sbb
push
ss
mov
ficom
mov
(bad)
ficomp
stc
pop
mov
ins
pop
pop
(bad)
add
imul
in
inc
add
xor
pop
ins
sub
inc
dec
std
xchg
sub
push
adc
imul
stos
or
and
imul
ins
mov
dec
mov
xor
leave
arpl
and
stos
xchg
and
pop
mov
imul
cs
cmp
rol
pop
cmovnp
shr
pushf
shr
pop
ins
adc
fwait
and
jno
sub
movs
dec
add
out
adc
sbb
(bad)
push
(bad)
adc
mov
xchg
fimul
add
cmps
aad
sbb
mov
add
sbb
(bad)
cmp
add
and
add
mov
enter
and
into
int
sbb
and
or
push
ret
fdiv
adc
or
lahf
jnp
jo
sub
mov
sub
std
sbb
mov
mov
mov
call
mov
shl
adc
adc
mov
sbb
mov
aad
jge
pusha
dec
sbb
scas
loope
imul
sub
fwait
ret
imul
mov
or
ret
test
sub
jecxz
std
sbb
loopne
adc
and
adc
and
cwde
and
mov
popf
pop
or
push
int
add
pop
push
and
push
rol
or
push
cmp
mov
call
add
xchg
xchg
pop
add
jo
sub
pop
push
lock
add
add
dec
jo
(bad)
pusha
mov
pop
sbb
inc
and
pusha
sub
dec
xor
cmp
dec
push
sbb
nop
add
pop
and
je
adc
sub
xor
js
cmp
std
popf
(bad)
fidivr
push
pushf
xor
sub
je
js
inc
and
inc
mov
adc
and
mov
sbb
fxch
int3
fiadd
sub
mov
data16
in
int3
mov
inc
and
and
dec
cdq
sub
and
rcr
jg
add
push
add
loopne
(bad)
in
call
out
test
jmp
outs
ds
adc
pop
and
mov
pxor
sbb
adc
xchg
jbe
prefetch
or
mov
add
mov
add
cwde
mov
jo
sbb
add
ror
dec
pushf
add
pop
cmp
popa
jmp
or
lds
sbb
xlat
add
mov
jb
jg
xchg
test
inc
imul
dec
out
inc
data16
mov
rol
ror
add
out
leave
cmps
push
shr
jae
arpl
or
out
jl
in
dec
inc
gs
out
inc
cmc
cld
lds
cld
call
sbb
xor
xchg
and
scas
ds
sub
add
add
push
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
lds
mov
add
