or
push
cmp
mov
add
sub
dec
sbb
add
xchg
outs
adc
adc
jo
mov
mov
mov
xchg
and
into
and
cmp
xchg
cli
jmp
lds
neg
jmp
mov
in
xor
jl
xchg
jnp
xor
cmp
sub
mov
(bad)
sahf
xor
ins
rcl
dec
pop
nop
ins
pop
cmp
mov
cmp
inc
cmp
jp
pop
pop
in
dec
jecxz
push
mov
into
daa
sub
fiadd
fadd
fisttp
adc
lea
addr16
sar
repz
inc
ret
arpl
gs
rcr
leave
in
push
stos
pusha
sbb
lods
mov
stos
adc
inc
mov
cmp
inc
push
fwait
adc
ret
mov
jae
add
retf
aad
retf
pop
cmc
sti
push
sub
sub
mov
sub
sub
push
dec
nop
imul
mov
retf
xchg
cwde
xor
adc
and
pusha
outs
out
repz
cmp
aas
js
dec
xor
pop
mov
les
fcomp
add
ss
push
xchg
dec
xchg
xor
xor
popf
sbb
adc
ss
mov
hlt
daa
iret
cmp
inc
fld
dec
mov
(bad)
into
(bad)
rcr
cmp
push
and
inc
xchg
push
(bad)
out
mov
add
jp
jno
push
pop
scas
sub
mov
mov
mov
loopne
in
xor
inc
fidiv
call
sbb
mov
jmp
dec
daa
(bad)
pop
adc
fld
pop
jns
lea
mov
fwait
popf
pop
lea
jmp
pop
sub
mov
cld
(bad)
push
or
sbb
cli
in
shr
mov
jmp
mov
inc
cmp
jb
lea
dec
into
mov
xchg
adc
pop
fmul
fldcw
ss
cmp
ins
jmp
cwde
in
int
adc
out
dec
xor
push
jecxz
jl
ror
imul
(bad)
xchg
or
jbe
out
sub
pop
ret
in
lods
icebp
fisttp
fldenv
mul
fadd
mov
add
mov
pushf
popa
fld
xchg
popa
dec
psubsb
les
sub
cmp
jno
push
sub
sbb
jmp
cmp
sbb
xchg
pusha
xchg
and
and
adc
mov
lock
and
jecxz
aas
(bad)
adc
clc
ret
or
jecxz
popa
mov
xchg
mov
std
mov
test
iret
aas
movs
arpl
(bad)
sub
lock
rcr
jg
sbb
psubusw
dec
mov
test
cmp
push
adc
cmp
jb
loopne
xor
addr16
enter
adc
cdq
push
fcom
jb
mov
in
jmp
jne
sahf
retf
out
les
mov
jmp
jo
pop
and
jns
sahf
push
movs
popa
and
fwait
jg
out
jno
inc
jmp
inc
inc
(bad)
or
pop
cmps
(bad)
push
ret
xchg
mov
in
pop
push
(bad)
jg
xlat
mov
sub
call
jmp
add
cmp
ret
movs
or
xchg
xchg
dec
movs
mov
xor
int
cmp
dec
addr16
jne
pushw
aas
add
cbw
add
addr16
pop
xor
pop
(bad)
popa
xchg
shr
cmp
mov
stc
cmp
mov
pop
fwait
jecxz
repz
mov
mov
enter
cmp
(bad)
mov
push
(bad)
and
outs
sub
xchg
jne
int
jge
fidiv
sbb
adc
mov
daa
out
mov
dec
sub
cmp
pop
xchg
dec
jbe
adc
mov
pushf
cmp
sub
and
mov
(bad)
sbb
pusha
push
scas
pushf
sbb
popa
mov
ss
outs
jb
dec
das
pop
(bad)
aas
mov
mov
jle
call
cmp
inc
mov
aaa
dec
aaa
fs
jp
xor
mov
inc
xor
pop
aad
jg
iret
into
cmps
mov
mov
or
fs
adc
in
sub
pusha
mov
nop
dec
stos
pop
inc
cmp
mov
pop
icebp
out
pop
retf
mov
sbb
inc
sub
icebp
jge
movs
mov
add
sbb
pop
(bad)
cmp
cmp
mov
(bad)
cld
aad
pop
repnz
mov
nop
jmp
mov
sbb
int3
xchg
ins
fisub
sti
enter
data16
mov
dec
test
add
imul
mov
aad
rcr
es
mov
cli
xlat
and
(bad)
cmp
or
push
je
pop
sub
stos
scas
jge
es
pop
mov
pop
int
arpl
xchg
or
int3
(bad)
test
(bad)
mov
inc
aaa
cmp
pop
sub
dec
mov
sub
mov
jg
pusha
ins
div
adc
add
pushf
inc
loopne
fwait
mov
push
push
mov
cmps
cwde
int3
inc
dec
mov
mov
push
in
adc
mov
mov
aas
and
pop
mov
fsubrp
lods
or
adc
jp
push
jp
sub
xor
stc
push
cmp
sub
xor
pusha
je
test
sbb
gs
fcmovne
inc
jno
je
(bad)
jmp
sub
imul
inc
sub
pop
sub
xor
int
sub
lahf
nop
push
sar
ret
jl
inc
pop
iret
sub
cmp
jp
rol
xchg
ret
cmp
pop
cmp
jne
mov
mov
jp
js
aam
jns
sbb
cmc
and
shl
or
int
pop
jle
jl
pop
sbb
or
push
pushf
into
sahf
sub
aam
not
aas
push
mov
dec
push
fcmovu
jae
rcl
mov
ins
les
xchg
lods
repz
adc
add
xchg
je
int3
int
mov
lahf
aad
loope
jnp
out
xor
add
pushf
mov
add
pusha
into
popa
adc
loop
lds
loopne
mov
or
pop
inc
and
ins
xlat
cmp
mov
sub
ds
xor
jbe
test
dec
ret
test
mov
dec
mov
cmp
push
arpl
lock
jg
pop
jae
inc
xor
mov
enter
std
outs
sar
stc
hlt
pop
pusha
cld
xor
sbb
adc
push
es
xchg
add
dec
iret
fbstp
ins
inc
(bad)
sub
cmp
sub
clc
aaa
xor
and
mov
xor
add
mov
stc
adc
mov
inc
push
shl
adc
ss
lods
rep
inc
push
js
pop
mov
cmp
dec
pop
xor
icebp
cmp
adc
push
or
add
cmps
push
dec
xchg
xor
sar
fcmovnb
(bad)
pop
outs
nop
pop
movs
popf
jbe
and
add
clc
sbb
leave
jle
add
aad
pop
mov
dec
and
repz
fwait
popf
jbe
jecxz
sbb
jnp
sub
xor
push
stos
push
sub
and
push
jae
jae
push
push
push
jns
shl
add
int
ret
mov
mov
std
add
loope
shr
push
dec
push
frstor
retf
cmp
dec
ret
loop
jne
or
xor
fucomp
test
ins
or
sbb
jmp
pop
pop
sti
sbb
pop
fdivr
rol
push
cld
jp
mov
(bad)
jecxz
jl
movs
fisttp
int
sub
mov
jmp
cmp
jl
out
mov
in
xchg
mov
movs
(bad)
jnp
ins
push
movs
jne
jl
or
cmc
jp
xor
push
movs
clc
ins
cmps
lahf
mov
call
jecxz
mov
out
jno
fidivr
arpl
dec
xchg
hlt
push
mov
out
fcom
add
lea
icebp
retf
push
dec
sbb
(bad)
int3
mov
or
cli
stos
ins
fcomp
adc
int
dec
js
jle
les
push
add
cmp
dec
jmp
leave
ins
loopne
pop
or
mov
imul
pop
(bad)
stc
fs
ins
fimul
inc
dec
cwde
sub
fidiv
cld
ror
sahf
repz
mov
pop
sbb
or
add
xor
xor
retf
or
hlt
daa
pop
xor
das
call
xchg
lods
mov
ret
mov
cmp
retf
mov
mov
mov
(bad)
pusha
loopne
getsec
loop
ja
cmp
cs
dec
xchg
push
mov
dec
and
mov
sbb
push
ja
push
scas
jne
fdiv
movs
push
inc
shr
pop
mov
fwait
jb
std
mov
hlt
ret
sar
retf
ret
sbb
xchg
jg
or
mov
int3
push
data16
cli
mov
adc
sub
pop
xchg
(bad)
(bad)
jmp
jae
xchg
xor
and
mov
or
shl
fisttp
xor
clc
mov
push
stos
(bad)
inc
std
cld
mov
inc
sbb
out
jecxz
sbb
inc
push
clc
mov
cmp
or
in
or
xchg
mov
in
sar
ret
fneni(8087
mov
sbb
loope
aam
shr
push
fsubrp
pushf
in
popf
pop
adc
inc
int3
add
rcr
test
and
pushf
aas
dec
out
(bad)
push
fidiv
xchg
add
xchg
mov
out
add
fisub
push
jmp
sub
sbb
inc
sub
outs
cld
adc
cld
push
adc
mov
push
cmp
mov
cs
ror
sub
repnz
push
xlat
jo
loope
mov
leave
sub
std
aad
mov
retf
icebp
shr
sbb
in
outs
nop
xchg
(bad)
(bad)
sbb
call
xor
inc
pop
mov
in
xchg
sbb
cmps
es
call
mov
imul
dec
outs
add
rcr
and
mov
cmp
cmp
rep
or
mov
push
inc
pop
test
xlat
mov
xor
ret
cmps
lods
cmps
mov
enter
arpl
dec
push
ret
shr
sti
or
dec
pop
sbb
dec
sub
ins
mov
push
mov
pop
test
adc
jo
pop
inc
icebp
loopne
js
cmp
adc
mov
lods
dec
xchg
push
mov
imul
std
adc
ss
and
loop
sub
es
fwait
pop
jmp
fisubr
push
ret
jmp
jbe
xchg
cmp
imul
mov
mov
adc
pushf
inc
jp
sub
xchg
les
mov
inc
push
jne
or
cmp
in
into
xchg
je
paddsw
jp
sub
add
cmps
ficomp
test
add
imul
mov
or
jg
push
inc
dec
inc
xchg
js
or
mov
jae
dec
and
sti
or
fisttp
call
js
(bad)
jl
dec
pop
push
out
into
inc
xor
gs
fs
imul
adc
pop
aas
pop
ret
imul
enter
out
ss
(bad)
(bad)
mov
scas
fsub
add
enter
not
jg
cli
xor
out
cmps
mov
loope
or
fsubr
loopne
mov
push
and
mov
xor
stc
jnp
or
idiv
test
adc
mov
cld
add
and
std
pop
sbb
sub
cs
stc
je
lock
enter
jmp
jg
add
or
cmp
es
mov
addr16
push
add
pusha
pop
js
je
jg
aam
int
xchg
sub
cs
outs
xchg
inc
std
push
adc
ret
pusha
iret
pop
in
cmp
mov
jb
aaa
mov
(bad)
push
sub
pop
fisttp
loop
sbb
loopne
scas
repnz
sub
add
ret
jns
pop
mov
or
push
sbb
jbe
stos
aad
sbb
mov
xchg
(bad)
jne
inc
inc
xchg
in
pop
cmp
aas
es
mov
sti
mov
popa
xchg
inc
jns
xor
pop
loope
icebp
mov
xchg
cmps
mov
or
sbb
nop
push
fdivr
sbb
adc
sar
mov
rol
mov
adc
test
pop
(bad)
cmps
dec
ds
icebp
nop
pop
pop
fs
ss
pushf
loopne
jo
sbb
mov
jmp
clc
cmp
mov
mov
sub
inc
sub
or
int
ds
test
mov
mov
sahf
mov
into
test
cdq
scas
imul
and
test
xlat
or
in
gs
in
hlt
fld1
(bad)
mov
add
mov
pushf
xor
jae
inc
out
pop
sbb
mov
jecxz
pop
in
pop
into
xlat
inc
xchg
call
cmc
popf
lds
popa
stc
jle
sbb
sub
mov
mov
repnz
jg
xor
inc
pop
jge
movs
loop
add
dec
cmps
inc
fwait
fwait
inc
inc
leave
icebp
and
je
cmc
sub
icebp
inc
adc
(bad)
into
fsubr
stc
sbb
jmp
fmul
mov
sub
mov
push
sbb
pop
in
mov
inc
jo
cmp
popf
jmp
fcom
movs
fisttp
dec
fwait
test
push
inc
out
jne
xchg
stos
daa
int
inc
stc
push
ins
aad
dec
repz
pusha
dec
pop
sub
sub
push
scas
xchg
add
jmp
mov
lds
loopne
ret
add
aaa
ror
inc
and
(bad)
movs
pop
sub
int3
arpl
dec
push
mov
push
lods
shr
xor
mov
rol
pusha
inc
out
sub
cwde
mov
add
les
and
mov
inc
stc
(bad)
or
pushf
lds
mov
jae
xchg
adc
inc
xor
repz
in
sbb
jp
mul
hlt
lea
push
pop
in
push
push
or
inc
pop
aam
fdivr
(bad)
jb
push
dec
cmp
data16
sbb
sub
mov
adc
test
adc
mov
in
test
cmc
mov
iret
xchg
inc
loopne
xor
std
das
xchg
dec
sub
push
or
(bad)
mov
adc
shr
mov
jp
shr
sub
push
sbb
repnz
push
sbb
mov
je
mov
sbb
ja
js
icebp
out
mov
push
sub
bound
pop
mov
pop
xchg
pop
mov
xchg
addr16
daa
(bad)
iret
retf
lock
stos
inc
mov
mov
push
lock
pop
cli
push
jge
cmp
sbb
inc
add
adc
xchg
xchg
mov
retf
mov
aaa
into
test
add
mov
cmp
adc
push
mov
iret
push
cwde
fwait
lea
jns
sub
test
pop
inc
xor
inc
xor
std
pushf
stos
cdq
call
push
xchg
cmp
data16
mov
cmp
mov
and
inc
fist
cs
jmp
fs
xlat
sbb
inc
faddp
hlt
xchg
movs
push
aam
lods
mov
jg
repnz
dec
adc
imul
adc
dec
in
pop
repnz
retf
jo
jl
xor
adc
xchg
mov
sbb
mov
xor
and
cmp
push
adc
retf
cli
sub
mov
in
mov
mov
(bad)
test
ins
fs
cmc
imul
sub
sub
mov
stos
push
push
jmp
shl
mov
dec
dec
sti
in
and
or
xor
test
adc
push
cmp
mov
ret
jae
(bad)
or
inc
sub
xchg
aad
jle
mov
fmul
stos
shr
jg
pop
or
push
mov
jbe
inc
out
pushf
lock
fistp
sbb
les
mov
and
mov
test
xor
cld
stc
sbb
(bad)
into
push
scas
cmp
bound
and
and
scas
jmp
hlt
shr
mov
sbb
jb
shl
dec
aam
push
lds
test
adc
popf
pop
mov
and
pop
pop
(bad)
mov
pop
in
pop
push
fisubr
fstp
fmul
xlat
popf
and
retf
inc
push
fimul
inc
jbe
data16
daa
imul
jmp
or
mov
and
stos
mov
pop
pushf
ret
jp
mov
stos
jae
jle
ja
xlat
mov
rol
jmp
jnp
jne
test
pop
xor
push
or
jle
into
inc
or
xor
sbb
fsubp
mov
and
xchg
mov
ins
mov
sub
or
out
adc
pusha
fcmove
shl
out
mov
jg
push
mov
call
movs
add
iret
cmp
xchg
ja
in
sti
js
daa
popf
int3
gs
cs
mov
ss
push
or
repnz
cmp
out
ds
and
xchg
in
je
sbb
mov
in
fsin
xchg
retf
daa
mov
push
dec
cmp
mov
daa
push
loope
mov
fldcw
lock
adc
xchg
jle
mov
sbb
scas
rcr
pop
or
out
movs
inc
popa
mov
arpl
and
or
jb
sub
jge
mov
jnp
sti
pop
scas
jbe
push
jl
inc
jl
mov
push
adc
outs
jno
xchg
push
fsub
(bad)
call
push
sbb
add
fcmovnu
arpl
or
lock
mov
scas
int
xchg
es
pop
into
clc
cli
add
cwde
das
les
cld
pop
sub
scas
sub
mov
out
push
jno
push
repz
fst
es
retf
test
sbb
xchg
pop
ja
and
repz
ins
loope
push
mov
dec
add
(bad)
sbb
pusha
mov
fstp
push
push
jno
imul
push
ins
jb
fnsave
push
cmp
xchg
push
aam
imul
in
jne
ret
push
jno
dec
mov
mov
sar
repnz
sbb
cmps
ret
ins
sbb
outs
and
pusha
mov
out
mov
loope
lea
lea
xchg
xor
hlt
pop
xor
jmp
loop
jmp
les
add
xchg
inc
enter
loopne
fadd
addr16
mov
jb
fistp
mov
cmp
jg
xchg
retf
int
in
mov
xor
and
xchg
scas
mov
fistp
(bad)
mov
sub
scas
les
ds
into
enter
inc
mov
push
or
div
imul
push
add
push
(bad)
data16
jmp
mov
sbb
or
push
and
jmp
retf
and
lds
push
xor
cmp
cmp
xor
mov
pop
cwde
(bad)
push
pop
iretw
mov
xor
(bad)
sti
and
shl
hlt
xchg
mov
(bad)
dec
ret
mov
mov
adc
or
mov
cli
mov
nop
shl
inc
dec
lahf
mov
push
loop
(bad)
out
sahf
sub
mov
mov
xor
push
xor
pusha
cdq
out
sahf
imul
or
out
enter
jecxz
mov
xor
push
and
imul
pop
mov
popa
xchg
fs
ret
lods
cs
jno
add
mov
in
or
lock
mov
cmps
dec
cmp
stos
fldcw
cmp
xchg
sub
mov
call
cmp
ror
test
fdiv
xchg
sbb
jnp
sbb
cmp
cmp
test
icebp
jmp
imul
xor
lock
add
sbb
int
cdq
aaa
jbe
ds
outs
repz
sub
mov
xor
adc
push
pusha
or
je
into
sbb
cmp
int3
mov
popf
mov
dec
cdq
sti
xor
mul
test
mov
gs
loopne
(bad)
shl
popf
popf
xlat
sub
ss
xlat
jb
push
xchg
into
je
shr
ins
xor
imul
push
sub
mov
pushf
and
cld
sub
push
mov
cmp
mov
movs
xchg
add
sbb
imul
pop
mov
pop
(bad)
pop
loope
ins
jmp
adc
xor
mov
xchg
push
(bad)
iret
mov
mov
shr
push
dec
shr
imul
or
(bad)
cmp
iret
cdq
mov
fs
ds
popa
in
cmp
lea
aaa
or
pop
jecxz
mov
jmp
test
mov
jg
push
sti
jmp
or
fidivr
adc
pop
mov
ins
out
ret
add
push
ds
test
or
(bad)
and
jp
adc
cmp
jne
or
sbb
mov
fldcw
push
cdq
test
jo
(bad)
(bad)
fcom
push
cmp
mov
mov
addr16
popf
add
fisub
out
std
mov
repnz
imul
cmps
cmp
push
and
mov
into
icebp
xchg
xchg
stc
and
push
inc
jecxz
jmp
cwde
pushf
sbb
or
in
or
and
or
push
jae
push
out
jle
add
call
aam
test
mov
rcl
xchg
fcmovnb
xor
bound
push
scas
dec
lds
test
dec
dec
jmp
pop
rcl
mov
mov
nop
lock
out
in
mov
lods
test
rcr
mov
ret
mov
popf
jge
fcomp
call
pop
inc
and
(bad)
cmp
lahf
repz
add
mov
rcr
retf
ins
inc
mov
xor
lea
dec
rcr
add
jne
pop
aaa
ss
or
loop
pop
and
mov
fucom
mov
(bad)
jle
fsub
mov
arpl
out
out
in
(bad)
fisubr
hlt
xlat
sub
dec
pop
inc
add
into
xchg
add
test
mov
test
sbb
and
leave
xor
and
add
mov
adc
jp
ds
repnz
pop
xchg
into
je
clc
repz
pop
test
xchg
jecxz
pop
cmp
xlat
jl
jl
test
bnd
out
pop
pop
outs
mov
xor
fsubr
sbb
or
add
mov
push
mov
push
mov
imul
add
xchg
shl
out
repnz
xchg
xor
test
sbb
push
xchg
jge
clc
(bad)
mov
xor
and
in
lods
push
cli
xchg
aas
pop
(bad)
dec
mov
xchg
mov
fcomp
mov
dec
and
add
call
sub
mov
inc
js
or
shl
lea
aaa
pop
aam
mov
aam
stos
mov
inc
mov
test
cmp
cld
test
push
idiv
fwait
data16
jp
aas
cdq
mov
sbb
ficomp
push
in
in
stc
xlat
test
ds
push
div
mov
dec
out
cmps
push
cmc
cdq
je
ss
cmp
cwde
out
push
aam
inc
push
jmp
sti
adc
mov
fisttp
push
xchg
out
lock
xor
jno
or
sub
shl
sbb
mov
pop
sub
test
call
adc
mov
int
sub
and
imul
fiadd
mov
mov
je
scas
test
cmps
or
and
je
jp
icebp
sub
imul
clc
je
cmp
pop
fs
loop
or
mov
sbb
push
pop
js
repnz
sub
dec
mul
(bad)
ins
lahf
xlat
sbb
cdq
aam
fisubr
cmp
pcmpgtd
jbe
and
sbb
xor
dec
(bad)
mov
jl
mov
pop
imul
(bad)
jmp
jp
pop
sbb
sub
sub
push
inc
gs
nop
rol
push
mov
popf
movs
test
retf
icebp
jnp
push
out
cmc
inc
popa
inc
vmread
and
jle
jg
dec
dec
inc
cmp
xor
dec
and
jg
pop
jb
scas
das
mov
inc
int3
iret
hlt
mov
pop
(bad)
jp
adc
fwait
jmp
inc
int3
int
jle
dec
mov
jl
clc
ret
cwde
pushf
outs
dec
mov
add
fwait
test
dec
(bad)
xor
mov
dec
push
inc
inc
sbb
scas
cmps
imul
push
outs
jne
ins
dec
cmps
in
push
sub
lods
je
repnz
pop
dec
movs
cld
retf
cli
pop
loop
jmp
adc
call
iret
push
jmp
iret
pop
sti
jg
fisttp
sbb
out
mov
(bad)
sahf
sbb
or
out
pop
xchg
fistp
add
jb
ds
(bad)
mov
pushf
cli
bound
lods
adc
clc
bound
rcl
inc
mov
jecxz
int3
ja
adc
mov
jp
(bad)
js
sbb
call
data16
leave
neg
push
aam
ret
jne
mov
scas
cld
sbb
arpl
mov
push
test
rcl
mov
test
test
stos
or
retf
jb
call
xor
pushf
cld
pop
fs
fsub
jmp
ja
daa
cld
iret
xchg
pop
test
xor
or
xchg
sub
add
in
add
pop
add
cmp
out
outs
addr16
inc
push
sub
dec
jo
std
ret
sub
retf
and
in
stos
fstp
out
shl
jae
sbb
push
push
imul
fstp
mov
pop
test
dec
push
mov
push
pop
or
retf
inc
call
adc
fimul
dec
ror
xchg
push
repnz
mov
in
jmp
xchg
addr16
sub
aas
test
ins
lods
jnp
jnp
int3
fidivr
dec
pop
xchg
xchg
into
cmp
stos
movs
pop
push
xlat
mov
ret
fsubr
jle
mov
sub
imul
dec
jbe
mov
add
cmp
ins
or
xchg
je
cmps
test
outs
mov
vpsrlq
int3
leave
xchg
dec
dec
je
jp
and
mov
int
repz
mov
inc
mov
cs
inc
cdq
jle
gs
scas
mov
sub
mov
sahf
repz
aaa
repnz
nop
test
rcl
and
pop
in
scas
pop
in
or
gs
cwde
imul
dec
bound
push
cmc
or
mov
popa
js
adc
sub
ja
cmp
shl
adc
sahf
and
cmp
jp
sub
dec
mov
sbb
pop
lods
sbb
jge
loop
hlt
pushf
adc
lds
pop
xor
xchg
xor
ds
mov
add
scas
mov
mov
leave
aaa
jb
aam
lea
xchg
push
pop
int
stc
cli
fsub
mov
test
(bad)
ds
xor
pop
rol
mov
dec
outs
hlt
enter
dec
push
ds
rcl
test
sti
in
call
jg
inc
mov
dec
sbb
mov
jb
jmp
mov
das
jmp
mov
mov
hlt
pusha
mov
leave
push
(bad)
mov
mov
xor
push
jge
sbb
add
pusha
lods
sbb
out
dec
aam
mov
addr16
lea
gs
outs
inc
pop
and
push
in
xchg
test
dec
(bad)
cwde
dec
fst
cmp
fnstenv
inc
cli
push
les
mov
xchg
xchg
dec
mov
enter
jmp
test
test
sub
pop
xchg
jae
and
push
mov
aas
xchg
jno
popf
sub
lds
sbb
and
xchg
add
xchg
stc
out
sbb
ret
jg
bound
arpl
call
out
daa
adc
adc
adc
jno
sbb
push
int
sbb
xor
jp
shl
dec
loope
add
ja
mov
mov
mov
shl
(bad)
mov
test
cli
addr16
repz
push
call
cwde
lahf
shl
jmp
ins
cwde
pop
dec
cmps
or
push
sbb
aad
and
mov
pop
nop
retf
jmp
lods
fld
inc
push
jmp
xor
xchg
fld
stc
(bad)
cmc
mov
sub
xchg
push
xchg
add
jl
sbb
movs
inc
mov
hlt
(bad)
jne
mov
jp
pushf
fadd
in
push
popa
shr
mov
(bad)
mov
mov
xacquire
das
out
mov
sub
lods
mov
loop
jno
stos
push
push
mov
ja
pop
add
sbb
add
sub
cmp
cs
packuswb
jecxz
hlt
test
dec
fiadd
inc
fcomp
adc
jne
dec
or
mov
or
adc
mov
lock
scas
cmp
scas
mov
(bad)
hlt
mov
mov
mov
arpl
jp
jne
out
cmp
sahf
aaa
dec
rcr
xchg
rol
jle
mov
ins
lods
int
dec
jo
movs
stc
lods
pop
add
ins
sbb
jg
mov
or
push
pop
mov
fs
jmp
ja
xor
les
sbb
push
adc
cs
arpl
inc
jb
call
cmp
mov
or
loopne
aam
(bad)
mov
mov
cmp
jns
jns
push
ins
xchg
xchg
inc
jns
add
mov
in
xor
xchg
lahf
int
xor
out
retf
or
pop
jp
shr
xor
mov
sub
sub
xor
sub
clc
leave
jecxz
cmc
ret
and
rol
add
and
out
push
jmp
dec
jno
sbb
jl
aaa
stc
call
push
idiv
out
test
icebp
movs
ja
mov
xor
int
(bad)
lods
jge
dec
movs
scas
test
test
mov
ret
in
dec
adc
scas
jge
push
sbb
dec
out
pop
xlat
stos
mov
fst
inc
and
cld
movs
mov
xor
mov
jb
mov
ret
push
or
stos
outs
into
stos
pop
call
push
sub
sub
lock
retf
scas
mov
clc
into
and
mov
jmp
aad
je
fadd
cmp
xchg
int
inc
or
js
mov
test
adc
jg
xor
stos
sub
call
outs
je
test
dec
(bad)
dec
and
cmp
out
adc
ins
mov
xchg
add
movs
or
das
addr16
mov
imul
iret
sbb
and
and
dec
leave
cmp
cmc
in
lods
mov
fcomp
test
or
or
rcr
addr16
cmc
lds
and
movs
push
loope
mov
rcr
push
and
lahf
in
pop
jl
mov
xchg
xor
repz
jb
ins
cdq
enter
retf
repz
(bad)
hlt
dec
pop
jns
jo
int
das
lahf
mov
jmp
retf
dec
mov
push
inc
shl
call
push
dec
js
cmp
mov
dec
cs
mov
leave
rol
mov
aad
lahf
je
ficomp
ud2
es
adc
pop
fld
push
cmps
out
repnz
push
mov
push
ds
cmp
cmp
push
xor
jp
scas
xor
xchg
mov
mov
shl
pop
mov
ja
out
movs
xor
ret
retf
jb
(bad)
mov
test
cmp
faddp
(bad)
lock
dec
sbb
xchg
std
adc
je
sti
mul
ja
mov
push
dec
jg
push
push
dec
fmul
popa
add
sub
mov
lock
mov
jl
icebp
mov
mov
addr16
jnp
js
cs
pop
adc
jge
arpl
rcl
outs
mov
or
inc
(bad)
addr16
mov
jg
jle
scas
push
mov
pop
add
jmp
ja
shl
jne
mov
push
xor
cmps
jmp
aaa
stos
jp
mul
icebp
push
cmp
call
jnp
(bad)
aam
mov
ss
jne
and
jecxz
xchg
sbb
cmps
daa
(bad)
mov
call
(bad)
cmp
dec
push
cmp
or
sub
push
add
aas
pop
(bad)
out
iret
stos
add
mov
loop
jnp
sub
sbb
lea
popa
cdq
ins
enter
push
cmps
adc
aad
mov
and
adc
fistp
into
outs
out
sbb
in
mov
mov
push
loope
(bad)
push
dec
fsubr
mov
xchg
pop
cmc
sti
iret
sub
or
xchg
ins
fnstsw
jne
popa
jns
sbb
mov
cdq
(bad)
movs
stc
cs
adc
xchg
icebp
push
sbb
(bad)
neg
sub
out
stc
fwait
dec
lods
aas
in
inc
fucomp
push
jp
shr
icebp
std
inc
dec
push
mov
xor
xor
clc
cmp
call
mov
lods
jns
imul
fdiv
mov
sbb
push
jns
loop
pop
fcom
mov
nop
fcomp
adc
es
gs
rcl
out
adc
jb
jnp
or
jmp
add
add
ret
adc
xchg
or
xor
inc
sub
mov
in
inc
mov
sub
sub
add
jae
push
jno
pusha
jle
jno
hlt
cdq
dec
repnz
ror
mov
dec
stos
fdiv
data16
daa
sbb
clc
gs
std
sbb
out
xor
(bad)
popf
ficom
inc
inc
xor
mov
and
push
dec
loope
imul
xchg
inc
jae
pop
jne
clc
stos
jmp
arpl
sub
adc
daa
cmps
ss
mov
cld
jae
jnp
pop
fsub
jg
out
int3
jne
test
jnp
cmp
popa
mov
ins
sub
hlt
retf
add
inc
in
pushf
fisttp
rep
ins
xchg
hlt
mov
pop
pop
popf
stos
push
cld
pop
or
out
or
pop
cmp
(bad)
int3
ret
and
jnp
pop
(bad)
shl
rcl
pop
in
hlt
cmps
cdq
fiadd
(bad)
xchg
mov
or
loopne
lea
idiv
mov
xor
cdq
jae
loopne
push
sti
cmp
sbb
and
rol
pop
stos
mov
lods
scas
xchg
imul
adc
addr16
jl
lock
pop
inc
out
ss
bound
call
sub
inc
sbb
inc
fbstp
xchg
inc
int
neg
mov
add
je
ins
dec
pushf
cwde
loope
xchg
int
mov
pop
(bad)
(bad)
sub
jo
or
pop
sub
inc
xchg
cdq
and
adc
or
pusha
(bad)
(bad)
pushf
mov
mov
add
add
mov
add
aas
repnz
call
push
jo
push
mov
jecxz
mov
mov
test
sub
ss
lods
aad
dec
push
shr
imul
cmps
push
stos
stc
int3
sub
add
or
js
ficomp
sub
jmp
std
test
dec
(bad)
cs
sub
data16
dec
sub
sbb
lods
lds
add
dec
jge
sub
and
movs
inc
test
(bad)
mov
js
mov
push
call
jb
(bad)
ins
sbb
inc
aam
test
loop
repnz
retf
addr16
push
mov
es
mov
test
jbe
(bad)
pop
mov
lahf
in
adc
cmp
div
aaa
sbb
icebp
cmp
dec
adc
jns
cmp
cmp
push
in
enter
push
pop
(bad)
jmp
aad
xchg
test
shr
pushf
or
call
xor
dec
dec
movs
xchg
dec
pushf
jecxz
out
jp
mov
pop
adc
jge
jmp
or
add
and
outs
xor
sub
out
mov
cmc
ins
mov
add
adc
movs
and
(bad)
mov
mov
ret
gs
loope
popa
add
xor
test
push
xor
movs
cmp
sbb
out
in
loopne
or
inc
(bad)
lds
cld
mov
or
movs
call
fisubr
mov
pop
push
es
xor
loope
sbb
cmps
rcr
or
lds
add
adc
cmp
sti
jb
lea
cli
out
ret
iret
or
push
sub
cmps
jle
cmp
dec
fistp
int
ret
clc
inc
jmp
adc
ret
stos
push
cld
cmps
add
daa
out
push
xchg
xor
mov
mov
fisubr
jnp
shl
into
xor
loop
dec
and
ins
int3
push
dec
shl
je
xchg
movs
dec
add
sar
sub
mov
in
imul
fcmove
fsubr
xor
sbb
xchg
dec
xor
stc
pop
sbb
push
mov
push
sub
xchg
fdivr
xor
mov
sbb
mov
adc
xchg
je
pop
jbe
stos
push
and
mov
retf
dec
cli
and
loope
lahf
jp
mov
inc
iret
addr16
jo
sbb
sbb
xor
shl
lea
loopne
xchg
cld
push
repnz
fst
push
out
ret
cs
xchg
xor
scas
fwait
cwde
push
call
add
jmp
pusha
ja
sbb
mov
dec
clc
xchg
gs
loope
pop
scas
pop
cwde
iret
imul
xchg
mov
fs
jns
pop
hlt
sub
xchg
xor
repz
out
loope
outs
mov
jb
lea
(bad)
aam
mov
into
out
xor
or
stc
push
mov
or
and
fbld
and
add
dec
imul
fsubr
push
les
lods
int
add
hlt
into
dec
add
xor
push
push
dec
mov
push
pop
movs
pop
out
mov
xor
and
fwait
int
push
pop
test
int3
stc
cmps
outs
rcr
retf
shl
mov
or
rcr
and
add
rcr
xor
(bad)
xor
add
lahf
arpl
xor
pop
inc
jmp
adc
cmp
leave
ret
mov
imul
aad
mov
inc
push
push
sbb
pop
enter
dec
jne
dec
and
dec
xchg
mov
fcomp
lock
in
push
mov
fnstcw
rcl
fbld
xchg
retf
sub
ror
idiv
dec
lods
mov
dec
test
test
cmp
inc
sbb
addr16
cs
cmp
(bad)
(bad)
mov
dec
sbb
sbb
bound
mov
stos
push
pushf
scas
(bad)
(bad)
mov
jo
imul
pop
jge
out
imul
nop
in
cmp
xor
and
leave
jbe
iret
adc
cmps
loope
and
and
movs
aam
add
inc
push
add
lods
mov
sahf
mov
cdq
fcomip
mul
jle
xchg
movs
sbb
lods
sbb
mov
sbb
js
mov
add
push
(bad)
xchg
enter
or
pop
out
add
add
pop
adc
in
fadd
xchg
add
cmp
je
test
or
popa
lods
(bad)
enter
aas
and
cmp
int3
data16
rol
sub
inc
lods
inc
jl
(bad)
pop
dec
lods
in
mov
repz
or
cwde
sbb
adc
in
mov
iret
call
sub
dec
add
push
cdq
pop
xor
mov
sbb
adc
xchg
xlat
test
or
clc
cmc
jg
hlt
aad
jecxz
jbe
dec
test
loopne
int3
test
ret
movs
and
iret
arpl
jle
mov
sbb
sub
dec
mov
dec
aam
cmp
push
adc
xchg
imul
xor
adc
jb
ins
cmp
mov
jnp
sub
fnsave
xor
mov
ds
mov
pop
hlt
movs
cmp
(bad)
jne
std
fs
ret
pop
mov
cwde
pop
sbb
fiadd
pop
mov
fs
out
dec
int
dec
pop
mov
adc
sub
and
jle
mov
std
mov
xchg
sub
add
mov
movs
cli
mov
(bad)
std
vphaddudq
xchg
xchg
pop
cmp
cmp
inc
in
retf
jg
mov
pop
mov
cdq
or
dec
xor
cdq
push
out
adc
xchg
out
stos
jbe
jp
mov
xchg
nop
or
test
mov
cmp
arpl
arpl
(bad)
imul
dec
(bad)
mov
mov
movs
sub
dec
dec
sar
adc
(bad)
and
stc
pop
add
push
fldcw
push
mov
mov
sbb
push
cwde
sub
enter
out
and
arpl
mov
push
ficom
ror
popa
imul
pushf
sub
addr16
mov
pop
pop
sub
stos
sub
add
cmp
fwait
loope
ins
int3
test
ds
loopne
stc
xchg
loope
push
push
add
sub
xchg
cmp
xor
dec
nop
lock
gs
loope
xor
mov
(bad)
adc
imul
repz
(bad)
outs
lods
xor
cmp
jg
lods
lods
scas
(bad)
enter
and
jecxz
test
and
stos
dec
sar
cmps
ret
jecxz
cmp
xchg
cs
inc
cmp
movs
(bad)
int3
sub
jno
das
hlt
adc
(bad)
shl
push
mov
daa
xor
pop
fild
jecxz
sbb
xchg
rcr
sub
sbb
push
pop
scas
test
cmp
fld
icebp
outs
lock
je
gs
jecxz
dec
or
jns
out
add
mov
mov
(bad)
out
ins
jns
callw
data16
call
aas
xlat
popa
ds
or
pop
xor
xor
popa
ret
lock
and
in
in
sti
mov
fcomp
xchg
movs
add
sbb
out
jmp
adc
jnp
ins
mov
popa
push
mov
ja
cli
pop
(bad)
int3
xlat
add
cmp
outs
cmps
inc
loopne
mov
test
inc
pop
inc
or
popa
scas
push
xor
addr16
cmc
stos
adc
in
clc
nop
rcl
lea
jae
sti
add
(bad)
(bad)
(bad)
mov
scas
ret
fnstcw
pushf
push
dec
push
test
lock
add
dec
push
jb
xor
enter
fs
js
repz
pop
inc
dec
jmp
or
test
push
sub
and
jle
mov
sbb
inc
jg
mov
ins
or
add
in
(bad)
xor
sbb
pop
outs
cmps
movd
pop
mov
jl
push
ins
ret
sbb
xchg
cmp
pop
and
aaa
add
dec
mov
cmp
inc
mov
test
cmp
mov
or
or
fadd
jb
push
jb
add
push
push
push
jmp
or
lods
or
ret
mov
dec
das
movs
adc
scas
cmp
sub
sbb
inc
rcl
out
repz
fild
imul
mov
je
and
sub
jecxz
push
xchg
test
mov
jl
sahf
inc
or
fwait
inc
mov
add
daa
cmp
dec
push
clc
(bad)
test
arpl
cmps
sub
dec
xor
mov
je
sti
out
mov
or
jg
jge
fwait
in
and
mov
cmp
cmp
adc
xchg
sub
lds
jg
sub
ins
and
cwde
shl
popa
push
push
xor
adc
cmps
and
lock
les
push
push
(bad)
xor
xor
or
or
mov
fiadd
and
mov
push
fsubr
fidivr
push
je
dec
sub
sub
mul
adc
call
sbb
das
sbb
inc
mov
inc
icebp
mov
inc
cld
mov
into
push
fs
xor
sbb
mov
(bad)
mov
push
ja
cmp
in
les
inc
adc
dec
shl
out
fldenv
imul
xchg
test
adc
inc
out
stc
push
test
sbb
cdq
inc
jle
loop
neg
cmp
das
mov
(bad)
cmp
cmp
jl
xor
aam
add
sbb
loopne
pushf
xor
es
fsubr
hlt
jmp
(bad)
out
cld
or
(bad)
(bad)
push
and
outs
mov
xor
inc
rcr
jle
cs
and
(bad)
sahf
mov
frstor
ins
and
retf
xor
inc
dec
adc
mov
push
(bad)
leave
test
add
pop
cs
adc
stos
sub
cdq
and
mov
test
test
in
movs
xor
retf
cmp
clc
pop
movs
lea
loope
sub
cmps
push
gs
add
mov
je
hlt
inc
scas
sahf
out
dec
mov
pop
mov
jnp
out
jb
sub
pushf
inc
xor
sbb
movs
mov
shr
mov
pop
shl
bound
and
push
xor
dec
mov
jg
mov
bound
shl
cmc
cli
adc
mov
dec
push
jo
outs
adc
inc
xor
inc
xchg
or
(bad)
int
inc
sub
mov
jb
push
mov
push
jg
mov
mov
test
jp
icebp
jmp
mov
lock
and
rcr
fldcw
ds
adc
fcomi
fwait
adc
aad
mov
inc
add
inc
dec
sti
inc
push
icebp
in
cwde
cmc
ret
sub
mov
add
cs
mov
dec
pushf
and
dec
shr
mov
pop
shl
push
or
fmul
mov
nop
or
movs
jp
movs
and
cmp
sbb
dec
pushf
push
test
push
dec
adc
add
fisttp
aaa
lds
in
mov
in
stos
and
mov
scas
and
sub
in
adc
xchg
xchg
xchg
cdq
push
adc
cmps
xchg
push
add
and
fdiv
(bad)
fimul
or
push
cmp
pop
out
not
and
(bad)
and
xchg
enter
repz
push
daa
dec
jl
and
sbb
xor
cmp
mov
imul
daa
cmp
and
mov
mov
dec
popf
mov
mov
mov
cmps
mov
inc
adc
call
jmp
les
sub
call
gs
fwait
dec
in
push
jge
or
cs
push
mov
push
xor
jno
xchg
ret
and
adc
or
retf
or
rcl
and
jp
push
clc
push
and
sar
(bad)
icebp
ja
jg
mov
aaa
mov
mov
(bad)
in
push
int
push
mov
sbb
xor
jmp
lods
adc
in
jmp
sbb
adc
mov
jae
call
mov
inc
in
in
sub
mov
(bad)
push
ins
leave
xchg
lods
std
jnp
mov
push
xchg
test
retf
push
pop
xor
xor
mov
loop
push
fisubr
fdiv
cmc
mov
sbb
jb
jle
pop
jp
shl
sti
push
ror
cmps
loope
pop
mov
add
sbb
dec
loopne
dec
(bad)
jge
test
push
or
cwde
mov
lods
out
mov
sbb
std
and
sbb
and
mov
and
(bad)
jl
int
mov
call
mov
iret
inc
retf
mov
jmp
add
jmp
repz
iret
dec
xor
mov
cmp
std
mov
pushf
fldln2
sub
and
shl
(bad)
mov
hlt
jo
mov
lds
add
rcr
inc
mov
or
ins
or
imul
mov
call
mov
jmp
lock
push
dec
or
xor
ss
or
loop
push
stc
jg
mov
xor
mov
add
push
jbe
xor
test
xor
mov
js
fbld
(bad)
xlat
cld
pop
fiadd
jge
repnz
sbb
mov
outs
shl
jmp
and
add
mov
mov
sub
push
mul
mov
sub
(bad)
out
(bad)
pop
int3
dec
dec
repz
xchg
inc
mov
dec
popa
mov
lds
stos
sbb
jg
lahf
add
int3
dec
or
ss
stc
hlt
jne
imul
lock
and
push
mov
pop
dec
(bad)
jmp
into
outs
lods
pop
mov
xchg
movd
cld
adc
scas
sbb
mov
jecxz
(bad)
cmp
or
and
dec
dec
cmc
test
pop
into
pop
dec
inc
out
mov
add
mov
adc
xchg
or
xor
movs
repz
sbb
adc
loope
cld
mov
pop
cwde
lods
in
xor
pusha
pop
daa
call
stos
and
in
mov
xchg
add
jno
mov
and
iret
sbb
and
and
imul
jge
out
xor
aaa
fstp
mov
ret
sub
loopne
js
and
xchg
xor
icebp
lahf
cmp
jmp
in
ror
je
clc
mov
mov
push
mov
pushf
rol
inc
cli
cwde
sbb
mov
xor
dec
push
jl
(bad)
adc
lds
call
sub
and
mov
lds
push
pop
push
adc
or
push
pop
out
aaa
inc
xchg
pusha
jbe
ins
cmp
jmp
or
mov
and
inc
or
bound
or
cmp
or
call
dec
inc
mov
int
push
mov
jmp
adc
mov
je
jg
out
not
jns
mov
push
pop
inc
xor
or
mov
and
mov
xchg
mov
sub
mov
sub
fwait
pusha
(bad)
xchg
mov
fisttp
pop
pusha
lahf
scas
fld
rol
pop
std
in
add
jbe
inc
rcl
(bad)
jg
or
pop
adc
cs
cli
(bad)
xchg
fisttp
(bad)
jp
inc
jnp
fwait
int
mov
je
jle
push
add
dec
cli
pop
xor
stos
(bad)
jg
psubd
sub
call
in
inc
inc
into
test
xchg
clc
xchg
xchg
pop
jns
in
ret
add
mov
push
arpl
add
bt
fwait
popf
ins
dec
add
ja
repz
pop
adc
mov
xchg
mov
cmc
sbb
scas
enter
loope
cmp
jne
lahf
adc
sub
mov
cld
mov
xchg
mov
int3
outs
or
lahf
in
jp
adc
push
neg
sbb
mov
scas
jp
sbb
jmp
sub
mov
(bad)
ret
retf
mov
and
xor
xchg
stc
jmp
repz
cmp
mov
sub
and
repz
rcr
stos
sahf
dec
jp
cld
lock
mov
jo
icebp
push
stos
push
pop
lahf
cli
mov
scas
(bad)
push
adc
inc
xor
or
dec
push
sar
xchg
cs
mov
mov
xor
jp
gs
dec
aaa
xlat
comiss
dec
sub
mov
dec
sub
movs
aad
data16
push
jae
out
push
pop
adc
sbb
data16
out
push
repz
fild
push
mov
or
sahf
xor
outs
xchg
cdq
imul
jmp
or
xor
test
adc
loope
jno
jnp
jecxz
inc
or
xlat
pop
cs
scas
push
mov
push
pop
jno
sub
push
leave
sub
outs
dec
lock
sti
loop
out
push
xor
out
lea
call
rcl
int3
sbb
sbb
test
imul
mov
sbb
int
mov
jecxz
cmp
xchg
jmp
cli
stos
mov
in
rcl
cwde
(bad)
(bad)
pop
mov
push
pusha
fcomp
rol
sbb
lods
pop
std
mov
lahf
lds
and
mov
mov
jno
mov
(bad)
(bad)
fcomp
call
data16
sub
cld
cmp
imul
cmp
int
adc
mov
lds
pop
inc
das
mov
xchg
das
or
pop
push
cmp
mov
pop
and
add
jne
es
and
fwait
add
mov
pop
leave
dec
inc
pop
cmc
stos
ins
out
push
and
lea
lahf
fdivr
fdivr
mov
adc
and
ss
or
and
jecxz
inc
pop
lahf
fwait
inc
cmp
(bad)
lahf
shl
push
aam
jp
movs
sahf
dec
or
enter
xor
pop
pop
push
cmp
mov
loop
(bad)
arpl
stos
xchg
(bad)
cmp
popa
or
mov
jle
xchg
cld
xor
dec
xor
mov
dec
mov
cdq
popa
xchg
lea
dec
jle
pop
fistp
pusha
sbb
cmp
dec
jae
jnp
repnz
fstp
mov
cli
mov
jg
into
mov
out
mov
or
and
dec
xor
(bad)
int
jnp
xor
mov
in
sahf
xor
jns
out
cmp
in
(bad)
push
mov
cmps
bound
cmp
pop
adc
dec
cmp
fsubr
stos
mov
dec
aaa
sahf
mov
in
mov
icebp
or
cs
sbb
push
xchg
sti
lock
das
mov
xor
sbb
jb
mov
hlt
push
sub
cmp
inc
pop
jbe
add
sti
pop
je
inc
mov
ret
test
cdq
cmp
pop
fcom
cwde
aaa
sahf
jnp
or
stos
imul
mov
jmp
cmp
pop
ins
sbb
jmp
sti
pushf
sti
popf
fninit
in
jno
and
mov
cmp
int3
mov
mov
push
inc
popf
inc
ja
jbe
popa
cld
lea
cmp
push
sub
jle
retf
inc
pop
or
xchg
mov
cdq
push
in
scas
into
js
rol
and
lock
cmp
push
ins
jg
inc
mov
bound
adc
push
mov
data16
cdq
lock
cld
imul
push
inc
sub
sti
retf
pop
dec
sub
aam
cli
mov
mov
and
cwde
add
arpl
add
enter
int
jae
mov
shr
sbb
xchg
adc
dec
movs
push
stos
cld
sbb
movs
pop
cmp
sub
sbb
dec
inc
adc
and
fcom
push
in
sub
mov
retf
jge
int3
jle
push
mov
xor
(bad)
jae
sbb
in
push
xor
mov
mov
push
ret
xor
stos
jne
dec
ror
pop
mov
aad
add
out
lds
mov
ja
push
fimul
mov
icebp
xchg
jns
out
mov
rcr
out
jns
sub
cmp
popf
xor
pop
dec
aad
inc
out
xor
inc
ins
ret
test
cli
sbb
int3
jecxz
fcomp
leave
push
(bad)
call
fdiv
out
pusha
mov
mov
dec
sub
mov
jne
pop
(bad)
sti
dec
mov
call
mov
mov
cmp
pop
scas
mov
(bad)
aas
xor
jg
xor
mov
cmp
out
movzx
dec
ja
cmp
(bad)
mul
ds
mov
aas
pop
pop
cmc
inc
or
sbb
mov
lahf
int
cmps
jmp
add
and
fidiv
or
jg
pop
test
fadd
jl
push
int
into
or
jle
mov
sti
repz
pop
jl
inc
push
in
fldcw
outs
mov
push
sub
ret
jge
ss
add
lea
push
pop
xor
jns
into
pop
(bad)
sbb
xchg
inc
xchg
sub
push
in
fdiv
jnp
clc
test
sub
mov
pop
push
enter
adc
sbb
(bad)
adc
fs
scas
arpl
jbe
xchg
dec
mov
outs
inc
ja
cwde
fs
int3
or
xchg
cmc
fs
pop
rcr
dec
clc
std
dec
xchg
lds
sub
push
int
push
clc
mov
cli
fsubr
faddp
shrd
enter
fist
lock
test
mov
inc
mov
lods
mov
jbe
push
rcr
int
mov
xor
cld
pop
inc
mov
mov
mov
aad
inc
aam
lods
or
inc
nop
sar
mov
out
sub
push
clc
mov
push
jbe
xor
dec
daa
dec
jb
int3
pop
in
xor
outs
test
shr
and
sub
or
aad
fwait
adc
repz
aaa
es
pushf
(bad)
jo
out
xor
push
stc
ret
adc
and
(bad)
imul
cmp
mov
sub
shr
push
lods
or
sub
lds
imul
mov
mov
mov
fcmovnb
in
sub
jmp
pop
aad
ds
lea
mov
jp
add
ds
mov
lahf
or
jmp
in
stos
mov
push
lock
mov
mov
repz
inc
mov
int3
daa
outs
in
xchg
jg
jb
jbe
int
or
xor
(bad)
scas
test
xchg
push
mov
sub
in
test
leave
jecxz
stos
or
adc
ins
dec
fs
add
sbb
add
xor
jns
adc
cmp
ins
add
cmp
xchg
or
aas
dec
js
sar
pusha
in
mov
es
or
pop
add
add
out
or
adc
jecxz
in
or
stos
xor
push
leave
xchg
xlat
xchg
xchg
cmps
es
adc
sub
xor
(bad)
fstp
std
mov
or
push
sbb
fwait
mov
mov
push
lds
adc
ins
add
stos
or
repz
mov
sti
dec
and
adc
mov
in
xor
cmp
aas
push
xor
std
hlt
gs
push
push
call
fsub
sbb
dec
inc
sub
sbb
push
xchg
fcmovne
lea
pop
stos
outs
adc
movs
mov
pop
jbe
mov
pop
ror
inc
push
or
and
sub
mov
call
lods
lods
pop
lds
lods
dec
lds
repnz
pop
loope
jne
sbb
clc
adc
or
(bad)
jl
jb
cmp
imul
sub
xchg
(bad)
imul
rcl
sub
mov
outs
xor
push
in
and
scas
jmp
pop
fmul
or
lods
xor
jge
cmp
imul
cmp
sbb
inc
jmp
jp
es
or
outs
data16
xor
cmp
rcr
mov
ror
sub
ret
sbb
test
and
pop
pop
push
push
pop
xor
mov
mov
adc
jb
xor
adc
adc
jmp
push
cdq
test
ret
pop
mov
mov
mov
jne
stos
mov
or
dec
fiadd
in
frstor
out
aad
cmp
test
int3
cmp
cmp
push
ss
shr
loop
vpshlb
test
and
aad
daa
mov
mov
test
inc
xchg
lods
mov
mov
mov
and
add
test
sbb
loop
xor
xchg
sahf
push
mov
in
in
into
jg
daa
inc
stos
movs
push
gs
loope
add
add
cmp
in
aam
xor
mov
clc
pop
and
sbb
fsubr
scas
movs
leave
jle
dec
cwde
ret
pop
clc
dec
or
aas
test
xlat
pop
popa
cdq
dec
ins
das
call
adc
xor
rcl
retf
neg
imul
fsub
pop
aad
mov
leave
fistp
imul
or
scas
jg
out
jle
push
(bad)
adc
jl
in
(bad)
(bad)
sbb
mov
ins
xlat
mov
sbb
cli
mov
or
cmps
mov
dec
call
fisttp
mov
mov
mov
inc
fnstenv
cdq
dec
test
jmp
icebp
xor
xchg
int
lahf
jmp
pop
stc
daa
in
jle
fdivr
gs
sub
mov
and
inc
ins
les
and
fnstsw
mov
mov
outs
fs
sbb
mov
std
sbb
jle
fist
add
lahf
jg
xchg
jbe
imul
and
dec
icebp
out
js
sub
jg
mov
cmc
pop
inc
ret
fnstcw
shr
mov
or
sbb
and
or
test
sbb
stos
cmc
jg
pop
and
ins
pusha
sub
push
inc
addr16
leave
xor
xchg
js
mov
out
pop
cwde
adc
xchg
push
jno
cwde
dec
(bad)
stos
dec
cmp
sbb
dec
in
jbe
mov
dec
outs
cmp
jo
bound
sub
pop
mov
dec
inc
or
in
lods
push
push
in
popa
(bad)
int
mov
lds
jmp
rol
int
push
jg
fdivr
pop
cmp
xor
cmps
add
cmp
nop
loope
mov
sbb
jo
lods
push
lds
icebp
je
pop
cmp
cmps
inc
out
ret
add
aas
ins
pop
adc
jmp
lock
pop
pop
ins
ins
mov
das
sbb
nop
jb
push
xchg
ror
retf
and
mov
(bad)
mov
mov
sub
push
cdq
inc
out
cmovg
or
mov
push
cwde
add
jge
xchg
je
mov
add
loope
mov
xor
jl
pop
pop
and
sbb
shr
inc
fwait
mov
cmp
push
push
cmps
std
leave
jno
(bad)
mov
sub
or
loop
cli
push
mov
inc
adc
fisttp
es
(bad)
stos
and
sbb
mov
jae
pop
xchg
lods
dec
sbb
lds
inc
pop
loopne
iret
mov
ret
call
mov
nop
test
inc
test
xor
or
into
xor
add
aaa
std
and
or
bnd
sub
sub
inc
push
xchg
test
fidivr
pop
cwde
div
ret
dec
pop
(bad)
int
int3
addr16
adc
mov
ret
mov
rcr
(bad)
pushf
out
(bad)
aaa
inc
jne
mov
aaa
call
pop
(bad)
in
ret
add
mov
out
pop
call
sub
push
xchg
push
xchg
repz
popa
retf
mov
pop
je
lea
repz
pop
retf
xchg
mov
push
cmp
sub
fidiv
or
or
fs
enter
repnz
das
lea
lds
shl
push
sub
cmp
pop
sbb
mov
cmps
pop
mov
add
push
cmp
paddsb
sub
sbb
in
add
ins
retf
scas
mov
pop
stos
neg
pushfw
and
xchg
es
stc
and
imul
test
mov
cmps
dec
mul
sub
pop
sbb
xor
loopne
ins
call
jmp
push
test
fisttp
sbb
(bad)
js
mov
sbb
and
fcomp
fisttp
push
mov
(bad)
loopne
xchg
in
ror
sub
sti
cmp
sbb
push
fsubr
sbb
popf
push
pushf
pusha
out
and
cdq
(bad)
fidivr
aaa
mov
and
pop
leave
cmp
jecxz
mov
mov
nop
in
std
adc
mov
add
mov
daa
cmp
add
pop
daa
(bad)
mov
cld
jno
sbb
jge
hlt
cmps
jbe
adc
cmp
pop
(bad)
rcr
adc
test
bound
sub
mov
loopne
xor
adc
adc
outs
int
xor
pop
imul
int3
jnp
repz
adc
adc
or
mov
sbb
push
pop
sub
or
jnp
lea
js
push
in
shr
sbb
shl
pop
adc
repnz
nop
mov
enter
xchg
je
gs
cmps
xchg
ja
pusha
pushf
jg
mov
and
jo
gs
imul
mov
cmp
sar
cmp
iret
dec
and
outs
imul
sbb
pmaxub
inc
mov
and
and
push
sub
xor
inc
ret
clc
dec
cdq
add
or
scas
dec
or
mov
jp
adc
push
stos
push
push
dec
in
xlat
mov
outs
sti
adc
cmp
out
imul
pusha
stos
add
loope
daa
pop
loope
rcr
xchg
sahf
fdiv
inc
pop
and
jle
les
lock
jnp
adc
or
mov
sub
stos
outs
pop
inc
add
sbb
and
test
fsubr
mov
jge
lds
mov
hlt
pop
and
sbb
test
jno
xchg
xor
push
inc
pusha
push
out
not
loopne
mov
addr16
pushf
mov
and
cmp
out
push
cmp
jmp
push
(bad)
sbb
sbb
adc
(bad)
mov
addr16
xor
sub
add
jo
mov
sbb
cvtpi2ps
dec
das
aaa
lea
dec
adc
adc
leave
xchg
sub
test
les
gs
in
bound
xchg
aad
xlat
(bad)
xchg
sub
out
mov
enter
sbb
js
pop
and
xor
cmp
adc
mov
or
int3
call
or
loopne
sub
stos
out
gs
imul
icebp
scas
xor
xchg
test
mov
push
ss
mov
mov
adc
cmp
adc
jp
clc
or
ins
int
sub
mov
dec
shl
inc
add
icebp
nop
jno
push
sahf
or
jo
mov
mov
out
or
fldenv
pop
and
cli
repnz
iret
and
lea
sar
mov
mov
or
push
xor
xchg
aas
out
pushf
jns
(bad)
pop
xlat
jecxz
mov
pop
icebp
jge
lods
lods
mov
fdivr
fwait
cmp
cwde
sbb
rcr
popf
add
cmps
je
cmp
sbb
add
fldcw
cli
add
sub
in
pop
mov
xor
nop
jle
loopne
mov
not
jnp
sub
(bad)
fisubr
mov
pop
cmp
cdq
mov
cs
out
push
mov
xchg
jmp
mov
xchg
hlt
xlat
iret
dec
jae
pop
cdq
sbb
nop
repz
jl
(bad)
cwde
test
into
cmp
imul
outs
jae
es
aas
neg
and
loope
adc
dec
dec
aam
mov
lea
xchg
scas
inc
dec
add
mov
jp
dec
sbb
xchg
cmp
and
xor
push
lahf
add
xor
mov
xlat
out
std
test
xor
jp
dec
pop
lahf
(bad)
dec
out
adc
xlat
(bad)
push
mov
test
sbb
test
sbb
mov
xchg
(bad)
out
dec
sbb
mov
in
jb
ror
mov
arpl
popa
aam
or
sbb
lea
ins
fild
pop
out
scas
loope
sbb
rcr
mov
lea
or
fcomp
push
add
xchg
push
xor
jmp
cdq
call
mov
dec
pop
xchg
sbb
adc
fbld
dec
xchg
outs
add
es
out
lds
icebp
in
push
das
or
pop
and
pop
push
xchg
imul
inc
lds
xchg
and
cmp
fnsave
outs
push
pop
(bad)
cwde
adc
icebp
mov
cwde
xor
sub
jae
mov
popf
inc
push
push
jl
(bad)
cdq
xchg
mov
sub
test
lds
xor
push
lock
mov
out
or
xchg
arpl
test
out
or
mov
xchg
mov
xor
mov
xlat
jne
adc
cmp
pushf
mov
xor
adc
rcl
and
(bad)
fwait
imul
xlat
test
push
sub
mov
test
sbb
jns
mov
dec
ins
(bad)
sbb
or
movs
xor
jb
add
daa
jbe
lock
cdq
mov
sub
clc
xchg
sub
popf
test
mov
xchg
pop
lea
cmp
jne
aad
sub
mov
sbb
imul
gs
mov
out
or
je
movs
cmps
sub
jmp
sahf
sub
mov
jne
or
retf
(bad)
fmul
in
dec
sar
lock
sbb
xlat
shl
test
sti
movs
movs
mov
add
scas
push
mov
jle
pop
leave
adc
inc
lods
aas
fnsave
jp
push
jle
sti
xor
movs
pop
ret
sbb
mov
ds
add
sbb
cld
mov
popf
ds
in
test
xchg
cmp
xchg
mov
mov
aaa
push
mov
shl
leave
xor
sbb
jnp
ret
pop
gs
sbb
dec
and
mov
xchg
inc
sbb
inc
jge
aaa
pop
sahf
sub
xchg
in
(bad)
lods
sbb
addr16
js
add
xchg
mov
or
add
xor
push
add
call
mov
add
cmp
nop
loope
mov
mov
fwait
push
sbb
mov
and
or
inc
aaa
cmps
add
repnz
adc
xor
push
ret
popa
pop
cmp
arpl
sub
jno
mov
lock
retf
stos
call
push
movs
into
dec
lahf
sahf
mov
pop
lods
out
add
aad
mov
push
nop
push
pop
mov
movs
jnp
jbe
add
mov
mov
imul
fnstenv
push
sbb
fwait
xor
ret
ins
or
mov
adc
js
adc
rcl
into
(bad)
shl
inc
pop
push
inc
adc
or
jg
lods
xor
push
and
aam
aam
movs
retf
movs
xlat
leave
or
sub
jecxz
pushf
addr16
clc
mov
outs
add
mov
pop
or
xchg
jmp
jae
dec
cmp
and
mov
cmp
shr
scas
icebp
dec
scas
sbb
pop
test
push
das
pop
jne
mov
pop
popa
rcr
mov
clc
dec
push
loope
pop
add
retf
int
push
lods
ds
push
stos
pop
push
cmp
and
arpl
fdivr
or
out
jmp
stos
int3
and
cwde
fbld
mov
cdq
pop
mov
pop
cmps
jae
sbb
pop
mov
xor
js
das
imul
xor
mov
loopne
loop
daa
scas
mov
mov
addr16
jmp
push
retf
sti
data16
jge
imul
lods
clc
scas
mov
pop
adc
mov
les
mov
lock
adc
jae
and
sti
xchg
mov
mov
sub
mov
mov
pop
mov
imul
mov
dec
idiv
jp
push
(bad)
fmulp
sar
mov
mov
enter
mov
xchg
dec
or
dec
out
test
test
leave
xchg
imul
loope
ins
jl
adc
test
mov
push
fist
sti
hlt
jle
loopne
out
and
xchg
in
arpl
jno
push
inc
and
pusha
jmp
lods
dec
mov
mov
into
mov
add
test
pop
inc
inc
fs
out
fs
scas
or
and
in
jns
ds
(bad)
fmul
test
fwait
pop
aad
call
or
push
ins
dec
lock
pop
imul
mov
xor
and
ja
daa
pop
xor
movs
outs
adc
in
sbb
scas
ror
mov
jecxz
xor
or
mov
sbb
lahf
out
in
(bad)
sbb
retf
loope
jb
aas
jo
mov
pop
cmp
movs
shr
jg
and
push
lods
mov
sahf
cli
adc
mov
mov
loop
xlat
in
sub
or
push
(bad)
loope
repz
pop
dec
cs
mov
jp
(bad)
out
mov
mov
lods
call
sbb
cmc
std
sbb
stos
xor
cmp
clc
lods
sbb
(bad)
cli
js
ds
not
in
and
leave
js
or
dec
not
xor
add
stos
rcr
pop
mov
shl
fwait
pop
mov
bound
fs
je
jmp
dec
clc
(bad)
mov
dec
popa
out
inc
mov
adc
mov
add
out
push
push
out
add
in
shl
jbe
push
adc
ret
lds
or
push
cwde
clc
outs
ret
sbb
repz
inc
cld
(bad)
in
mov
loop
mov
out
cmps
leave
sub
in
sbb
and
sti
fcomp
(bad)
mov
fdivp
in
push
in
jns
adc
(bad)
shr
std
call
je
xor
shl
mov
and
mov
xchg
or
jmp
in
scas
mov
xchg
aaa
or
out
push
bound
add
mov
cmp
ja
jnp
sbb
inc
popf
daa
lods
pop
stos
loop
stos
pushf
scas
jne
call
cmp
arpl
xor
bound
push
xchg
scas
or
and
mov
add
lahf
pop
add
jnp
js
test
mov
sub
add
ret
xchg
(bad)
addr16
pop
in
dec
and
mov
xor
fwait
repnz
and
fsub
dec
cmp
mov
call
mov
xchg
test
push
push
xor
in
jmp
xchg
ja
(bad)
cmp
(bad)
push
mov
daa
loope
cmp
rcr
jmp
and
lods
cmps
not
or
mov
pop
and
les
cli
stos
mov
jp
sar
mov
xor
xchg
jbe
xor
xchg
nop
mov
and
push
and
pop
mov
pop
adc
aad
jnp
lock
add
cmp
loope
loopne
ret
aas
addr16
xor
mov
or
push
arpl
out
and
sub
dec
mov
push
(bad)
das
push
adc
ret
or
movs
leave
jns
test
mov
mov
mov
pop
ret
shl
js
addr16
fnstsw
dec
jle
xor
mov
test
sub
pop
inc
add
jne
jl
xor
or
add
inc
mov
not
sbb
in
sar
cdq
test
xchg
(bad)
xchg
pop
jg
mov
push
or
fwait
lods
hlt
xchg
push
inc
ss
cs
sub
stos
and
jb
push
out
vandnps
add
inc
jmp
call
mov
xlat
mov
pop
adc
loope
pop
scas
fwait
nop
nop
and
dec
jo
jp
sbb
cld
jb
jg
and
int
enter
(bad)
shr
stos
int
outs
mov
sbb
lea
pushf
xor
mov
pop
mov
adc
sbb
dec
mov
cmp
jle
xchg
add
jne
xcrypt-cfb
jne
fwait
out
fwait
nop
jnp
inc
cmp
fld
aam
mov
in
es
rcr
jae
(bad)
push
and
ins
add
shl
popf
mov
mov
dec
daa
dec
sub
or
fistp
jle
fisttp
add
pop
ret
pop
aas
ins
dec
or
pushf
outs
jle
adc
enter
ja
sub
jb
dec
push
out
pop
push
jne
mov
mov
cmp
lock
pop
imul
out
dec
dec
in
mov
mov
add
stos
outs
popa
and
repnz
mov
mov
mov
pop
rcl
cmps
int3
xor
xchg
popa
xchg
xchg
js
push
mov
(bad)
icebp
xor
inc
add
pop
addr16
ins
mov
fs
mul
jecxz
or
xchg
(bad)
xchg
rol
mov
pop
out
cmp
ins
sub
sub
call
adc
sbb
pop
add
push
data16
xor
xchg
jl
dec
sahf
mov
movs
outs
test
mov
int
(bad)
xchg
dec
scas
ret
cmp
(bad)
sti
pop
dec
mov
imul
mov
ss
xchg
and
add
daa
or
cmc
sub
out
mov
aad
fs
dec
xchg
or
dec
in
mov
lods
sbb
inc
inc
mov
test
xor
popf
jecxz
into
retf
cmp
cmps
icebp
pop
pop
mov
ins
adc
mov
ins
jo
add
pop
hlt
jb
mov
movs
mov
sbb
jmp
js
std
sbb
call
mov
push
lods
pop
push
aam
and
jb
jb
add
data16
push
xor
mov
imul
xor
sbb
mov
sbb
add
mov
dec
scas
ret
test
nop
push
add
neg
jo
faddp
inc
push
cmp
xor
arpl
and
mov
lahf
pop
stos
mov
add
pop
fsub
pusha
(bad)
sti
repnz
dec
pop
or
push
adc
jmp
mov
inc
jnp
and
out
pop
xor
test
jmp
adc
in
mov
mov
jle
xchg
xchg
jns
outs
adc
push
cmp
in
pop
icebp
adc
xor
in
cmp
sub
cmp
mov
fldcw
xchg
(bad)
cli
in
jl
jnp
out
fs
adc
dec
int3
aam
rcr
fstp
in
test
add
mov
push
mov
scas
add
sahf
mov
mov
mov
test
xchg
jp
dec
call
cmp
fsub
jns
stos
(bad)
stos
out
and
jmp
xchg
jge
mov
jmp
mov
inc
fidivr
pushf
push
fisubr
xchg
pop
cmp
das
fild
lea
(bad)
dec
dec
pop
arpl
shl
(bad)
fdivr
xchg
cmp
inc
push
add
push
shr
movs
cmp
fistp
sbb
push
xchg
inc
shr
lods
lahf
aam
mov
std
out
les
inc
cmp
fwait
jo
jae
sbb
mov
sbb
mov
push
jge
test
mov
leave
mov
sub
ins
sub
xchg
add
pushf
jmp
cmp
push
mov
ret
test
cmp
push
jg
pop
push
mov
push
add
cmp
icebp
push
pop
jns
mov
mov
(bad)
loopne
inc
into
mov
daa
mov
js
fdiv
push
or
movs
ja
mov
pop
mov
mov
shl
jg
mov
mov
idiv
mov
popa
fidiv
mov
inc
mov
inc
add
lea
pop
lods
aam
pushf
or
fld
ds
xor
mov
test
adc
mov
les
adc
inc
in
adc
inc
add
xor
lods
inc
lods
and
sub
int3
mov
je
mov
sar
div
mov
rcl
lods
fsubp
add
push
pop
(bad)
cdq
dec
retf
enter
and
(bad)
xor
pcmpgtd
aam
jmp
sub
ficomp
lods
jbe
mov
mov
pop
jecxz
and
inc
out
std
xchg
outs
sahf
xchg
mov
lods
loopne
pop
shl
mov
and
adc
add
movs
sub
pop
popf
jns
sub
and
or
pop
repz
nop
xor
xor
jns
(bad)
push
dec
push
(bad)
adc
dec
xor
push
jmp
adc
add
push
push
mov
sbb
lock
out
jb
cmp
ret
or
fnsave
push
sub
inc
cli
and
and
add
aam
mov
xchg
jbe
pop
ds
jge
xchg
mov
into
fdiv
sub
fdivr
xor
push
cmps
pushf
bound
mov
sbb
out
sbb
enter
popf
fwait
jg
js
mov
push
sub
fcmovnu
mov
cmp
pop
jp
sub
and
je
mov
test
mov
mov
adc
hlt
push
mov
aas
rol
jmp
jmp
and
jmp
retf
cmps
stc
stos
pop
sbb
mov
inc
xchg
shr
mov
cmp
je
xor
jnp
in
lods
mov
mov
ja
dec
shl
inc
mov
jo
sbb
cdq
(bad)
cdq
data16
ja
or
sbb
out
call
mov
scas
fwait
sbb
fsub
leave
ins
dec
xor
adc
cmp
mov
jb
imul
push
hlt
push
cmp
aas
cmp
mov
outs
add
ins
rcl
inc
retf
jae
push
and
mov
dec
xor
dec
cmp
add
cmp
push
pop
pop
mov
cdq
add
sbb
pusha
jge
push
mov
retf
ins
xor
loope
cmp
or
xchg
adc
jb
(bad)
rcr
add
in
out
outs
or
mov
dec
jns
mov
push
and
push
xor
popf
sbb
push
dec
test
stos
jecxz
iret
and
fadd
imul
inc
jmp
mov
stos
in
inc
or
sub
cmps
movs
and
call
jnp
jne
sbb
inc
mov
fstp
mov
push
mov
mov
repz
jb
int3
call
lea
mov
inc
or
pop
adc
loope
pop
dec
mov
mov
add
cmps
loope
mov
mov
cli
in
pop
cmp
mov
gs
jle
sub
pop
aam
pushf
scas
shl
mov
fwait
pushf
mov
dec
mov
(bad)
push
lahf
push
inc
pop
mov
and
dec
mov
and
add
shl
imul
sbb
add
pop
push
mov
call
dec
pushw
xchg
jmp
xor
hlt
or
and
mov
nop
clc
outs
push
xor
out
aam
gs
in
lds
cmp
mov
inc
and
pop
jo
or
int3
cli
mov
or
loope
jne
cli
push
dec
dec
pop
pop
repnz
adc
ds
fucomip
add
jle
ja
xlat
es
adc
pop
(bad)
cmovb
inc
mov
hlt
push
cwde
pop
jno
rcr
out
repnz
mov
and
lea
sti
and
mov
cmps
dec
std
int
xchg
jecxz
gs
push
or
jecxz
test
push
xchg
push
into
add
popa
das
jae
mov
repz
push
fmul
out
into
cmps
dec
out
push
cli
lock
fmulp
xor
lods
mov
jle
arpl
ror
mov
addr16
sub
or
arpl
imul
push
dec
and
cmps
test
mov
pushf
mov
add
test
xor
ins
adc
xor
ins
adc
dec
pop
bound
jno
jbe
cmc
aas
cmp
push
add
adc
sub
cmp
mov
push
sub
pop
(bad)
call
stc
dec
adc
inc
test
adc
cmp
dec
sub
adc
fisttp
push
mov
mov
pop
xor
frstor
dec
fadd
imul
sub
inc
js
dec
dec
pop
inc
iret
clc
pop
mov
(bad)
std
and
mov
stc
push
jo
(bad)
fadd
jmp
in
cmps
imul
aas
or
mov
ds
push
xor
pop
xchg
popf
jnp
xchg
popf
in
mov
das
(bad)
and
xchg
mov
cmp
call
movs
cmp
(bad)
aad
pop
stos
xlat
cdq
xchg
aam
call
jg
push
mov
xchg
mov
outs
push
addr16
pop
cli
out
inc
div
mov
xchg
dec
mov
fdiv
scas
adc
mov
inc
jmp
sar
and
pop
sub
cmps
xchg
cwde
xor
add
sub
test
and
pop
bound
cmp
scas
xor
(bad)
fcmovu
lahf
mov
shl
fadd
je
jbe
mov
stos
shr
shl
xor
xor
sbb
sahf
sbb
ss
adc
mov
mov
mov
lahf
in
cmc
mov
sub
inc
arpl
cmc
out
fnstsw
mov
jmp
das
fcmovbe
repz
push
and
or
sub
cmps
in
cdq
test
sbb
ret
stos
mov
outs
mov
shl
jns
pop
sbb
cmp
in
pop
rol
test
cmps
(bad)
sti
lar
mov
movs
sbb
add
and
popa
inc
shl
push
shr
sbb
cmp
hlt
push
inc
in
add
adc
jb
out
pop
aas
xchg
inc
movs
dec
cmp
idiv
arpl
lds
adc
lea
frstor
(bad)
idiv
aam
outs
mov
lock
mov
sub
inc
xor
and
mov
push
add
test
inc
(bad)
cmps
imul
sbb
inc
fisub
daa
sub
data16
xchg
repnz
xchg
pushf
cmp
hlt
repnz
sub
and
repnz
mov
jmp
mov
movs
mov
mov
ins
nop
(bad)
call
pop
cmps
pop
movs
gs
xor
inc
and
push
or
xchg
sub
aad
cmp
push
jg
fldcw
lods
ja
sub
imul
retf
test
mov
outs
mov
(bad)
xor
jge
push
jo
sub
ja
mov
cmp
add
pop
mov
sbb
or
rol
out
out
test
cmp
shr
mov
ret
dec
inc
sub
mov
pushf
mov
adc
loope
xor
xor
mov
xor
and
xor
jns
xchg
sbb
push
icebp
retf
jmp
xchg
(bad)
adc
js
aad
nop
mov
ret
mov
repz
add
cmp
sub
mov
jbe
cmp
add
or
popf
mov
add
(bad)
mov
mov
enter
sbb
ret
pop
add
xchg
xor
shl
push
cli
jmp
enter
xor
fwait
inc
ins
cmps
jecxz
inc
scas
push
dec
es
xchg
(bad)
cld
iret
mov
xor
ss
(bad)
cmp
or
push
push
cld
clc
outs
cld
mov
xchg
cmp
(bad)
aad
mov
movs
inc
shr
xor
inc
shl
ss
imul
cmp
sub
fild
jg
jp
std
xchg
xchg
fwait
ror
sbb
push
jmp
ret
loopne
pop
jbe
dec
mov
fwait
(bad)
es
aam
mov
cmp
mov
jbe
ror
fist
adc
push
not
cmp
sbb
inc
cmp
fcmove
and
mov
test
ds
or
cmp
xchg
sbb
lds
xchg
mov
(bad)
rcr
iret
sub
mov
inc
fidivr
pop
xor
jae
adc
call
and
sti
jmp
pop
sbb
test
stc
pop
addr16
aam
fwait
cmp
pop
xchg
dec
invd
sub
xor
jl
pushf
aad
idiv
or
push
fdivr
push
xor
iret
repz
add
arpl
xchg
out
mov
dec
push
adc
mov
inc
lock
es
aad
(bad)
xor
(bad)
pop
pop
xchg
mov
cwde
push
add
jno
push
push
add
out
out
sbb
adc
mov
push
in
mov
pop
jecxz
sti
adc
cli
push
push
mov
popf
sub
push
(bad)
(bad)
jmp
or
test
dec
es
xor
arpl
(bad)
int3
out
push
add
out
outs
adc
sub
retf
aad
sbb
xchg
pop
or
adc
movs
rcl
dec
jb
jmp
or
lods
mov
lea
and
into
popf
add
pop
xchg
mov
jo
in
je
and
sahf
xchg
sbb
and
stc
mov
mov
cmc
jl
cmp
shr
shr
adc
call
sbb
mov
push
gs
jnp
leave
and
jg
jmp
pop
cmc
es
inc
inc
pop
cmp
jae
jns
je
dec
aaa
sub
pop
in
mov
or
mov
sahf
inc
aad
popa
mov
loopne
icebp
loop
dec
dec
push
adc
cdq
jp
cmps
cld
inc
sbb
add
sub
mov
fld
les
mov
ins
mov
xor
adc
and
push
bound
shr
cli
sub
fmul
(bad)
int3
mov
dec
repz
js
pop
sub
cmc
inc
pop
dec
push
outs
adc
dec
aam
cld
mov
cmps
std
fwait
sbb
sti
sbb
idiv
sbb
cmp
jg
sbb
jb
mov
mov
push
or
jl
jmp
idiv
iret
mov
dec
or
cmps
mov
adc
xchg
inc
iret
dec
pushf
or
cmp
cmps
inc
aaa
mov
loop
cmp
ror
sub
sbb
rcl
mov
pushf
mov
mov
gs
xchg
fwait
ret
mov
cs
out
sbb
mov
ins
or
or
push
movs
adc
pop
add
ss
jle
sub
fcmovbe
or
out
xor
sub
popa
es
mov
mov
mov
mov
add
or
pop
jp
inc
push
pop
mov
pusha
add
cmp
dec
dec
jle
sbb
mov
pop
adc
call
int3
cmp
fcmovne
mov
std
(bad)
loop
xor
mov
or
lea
add
(bad)
mov
xor
add
mov
dec
xchg
or
xchg
mov
(bad)
cdq
jb
sbb
cmp
and
ficom
dec
out
jnp
xor
xchg
shl
ret
add
pushf
loop
adc
mov
lods
mov
(bad)
mov
xchg
adc
cwde
call
mov
fisub
mov
cmp
pop
xor
int
push
or
sub
mov
pushf
and
push
cmc
mov
fbstp
scas
sub
jbe
add
cmp
dec
mov
fistp
sbb
pop
mov
inc
sub
daa
cli
out
call
push
jbe
ins
mov
xchg
pop
pop
fwait
jle
jg
fmul
test
push
stc
fdivr
mov
shr
adc
sub
mov
aas
aas
iret
imul
dec
push
(bad)
fcmovnu
lea
and
scas
sub
inc
mov
mov
call
or
loope
lds
xlat
stc
jno
or
jae
sbb
adc
hlt
xor
(bad)
nop
fmul
dec
arpl
(bad)
jl
pop
jnp
pop
sub
ret
xchg
inc
pop
ror
sbb
rcl
jmp
sbb
jbe
cmp
pop
movs
cmc
push
imul
call
cmp
std
mov
data16
xor
(bad)
outs
adc
cmps
shl
inc
and
aas
sub
enter
cld
pop
and
or
in
enter
sbb
ja
mov
cmp
mov
mov
loopne
mov
push
(bad)
mov
adc
mov
adc
cmp
or
fsubr
jge
and
mov
pop
dec
push
jns
push
add
add
mov
add
cmp
xchg
add
mov
xor
xor
pop
clc
sub
mov
icebp
sub
xchg
ins
xchg
ror
cmp
cmps
fistp
jl
out
loop
jb
cmp
inc
push
and
and
inc
mov
pop
inc
in
jg
or
icebp
ins
ds
jnp
iret
jne
xchg
das
mov
adc
fwait
pop
lods
dec
mov
mov
std
lds
sbb
dec
mov
jmp
xor
dec
mov
into
dec
in
push
scas
pop
dec
inc
test
test
mov
cmp
inc
adc
nop
dec
sti
push
cld
or
aam
xor
add
push
call
mov
push
add
out
repnz
pop
inc
popf
pop
stos
mov
pop
xor
pop
mov
inc
jmp
cmp
push
loopne
inc
test
out
add
or
cmp
fisub
add
mov
mov
mov
iret
loop
inc
pop
cmp
add
jns
sbb
push
fst
in
mov
or
xlat
dec
int3
aam
sub
(bad)
pop
xor
jp
bound
pushf
mov
out
fst
cmc
push
mov
mov
pop
mov
or
cmp
fwait
mov
pop
ret
push
cld
js
imul
mov
fmul
add
xchg
lock
iret
inc
pushf
and
adc
push
adc
jp
xor
add
dec
dec
mov
cld
pop
movs
fnstsw
jle
or
adc
mov
lea
add
jmp
out
mov
je
(bad)
outs
mov
aad
push
es
xor
inc
xchg
jo
into
or
ja
fs
sub
mov
mov
inc
loopne
dec
xlat
mov
int
shl
sbb
inc
dec
push
xor
outs
mov
fild
jp
mov
mov
popf
cmp
adc
mov
push
add
repz
enter
adc
pop
jbe
mov
add
cwde
mov
pop
(bad)
xor
mov
dec
mov
push
iret
cmp
inc
retf
mov
sahf
cmps
jmp
xchg
ins
xor
adc
clc
es
mov
out
push
push
xlat
cmp
sbb
cmp
das
adc
and
mov
add
cli
es
jg
pop
stos
leave
xchg
xchg
in
fiadd
and
push
mov
shl
fsubp
pop
or
jo
push
mov
ret
mov
pusha
mov
cwde
ret
inc
adc
scas
pop
push
jp
jecxz
aam
push
shl
pop
sub
cmp
add
int
out
mov
cmp
xor
and
xor
or
repz
inc
(bad)
pop
push
ret
inc
xlat
sub
dec
(bad)
push
(bad)
dec
jbe
bound
mov
cmps
pop
dec
pop
scas
xchg
ins
mov
cmp
cwde
neg
mov
addr16
mov
out
adc
(bad)
fxch
cwde
test
inc
aad
(bad)
movs
adc
clc
dec
pop
pusha
dec
sub
pushf
not
sub
imul
xchg
outs
int3
jmp
dec
sahf
pop
ins
xor
lahf
adc
(bad)
outs
adc
test
mov
mov
pop
jns
cli
xor
je
inc
sub
lahf
(bad)
nop
leave
push
push
repz
push
adc
inc
shr
ret
mov
pop
out
sbb
or
fs
and
pop
xchg
int3
cmp
push
aad
mov
aad
cmc
inc
cmps
cli
loop
jg
mov
mov
fstp
repz
int3
and
inc
xlat
nop
pop
jg
shl
cmp
or
pop
inc
pop
pop
xchg
por
jae
dec
add
lock
jbe
or
sub
sbb
cmp
mov
fimul
test
ficom
pop
jbe
pushf
sub
in
add
and
in
lahf
push
loop
(bad)
sar
jl
sub
xchg
sub
pop
mov
cli
and
mov
ja
jl
cli
pop
push
nop
ret
jne
scas
pop
shl
lods
daa
jns
dec
mov
ins
mov
push
dec
pop
loopne
add
mov
pop
sub
int
mov
or
pop
stos
mov
mov
sbb
leave
sbb
in
xor
(bad)
and
fsub
push
retf
inc
sbb
pop
jo
mov
jg
xor
not
pop
scas
test
cld
sar
and
ins
xchg
jnp
ret
int
scas
out
cmps
mov
xchg
inc
or
and
jge
dec
jne
mov
push
pop
push
aas
lds
mov
dec
not
mov
in
cmc
aam
mov
movs
cs
leave
out
fst
mov
mov
pop
push
in
std
repz
bound
mov
pusha
aas
jmp
data16
shl
int3
cmc
and
mov
outs
sbb
in
xchg
stc
ret
in
xor
xchg
add
into
push
sahf
or
data16
cmp
sub
jl
mov
ret
(bad)
jle
call
call
std
mov
popa
test
popa
push
inc
jb
xchg
mov
test
loopne
sbb
jo
call
stc
mov
and
test
inc
and
inc
scas
and
inc
jns
push
sbb
pop
pop
es
test
xchg
xchg
and
ss
push
sti
dec
mov
(bad)
jb
test
movs
sbb
xor
cdq
xchg
(bad)
sbb
daa
dec
mov
shl
(bad)
stos
mov
mov
retf
scas
jno
out
cmp
xor
mov
mov
xor
imul
stos
adc
dec
loope
pusha
jmp
je
mov
in
in
or
cmp
jg
push
pop
test
popf
push
test
mov
dec
jo
mov
in
movs
aad
or
pushf
add
xchg
jns
push
cmps
lods
dec
pop
cmps
and
inc
lock
or
test
dec
scas
adc
dec
or
sub
sub
ds
jp
mov
inc
retf
push
int
mov
shr
dec
ja
jge
mov
nop
in
mov
push
pusha
or
mov
shr
cmp
mov
mov
fsub
push
shl
dec
jle
and
popa
sbb
test
and
lahf
dec
das
push
mov
push
and
pop
js
jge
jo
sub
pop
jo
movs
scas
push
addr16
imul
fidivr
iret
ror
fld
repnz
test
push
jmp
stc
cld
adc
out
push
nop
scas
mov
(bad)
stos
ror
mov
and
push
popf
fwait
(bad)
mov
or
fnsave
out
cmp
pop
adc
leave
cmps
or
add
jbe
hlt
inc
adc
es
adc
lds
fimul
retf
les
int3
bound
clc
inc
xchg
or
call
jb
nop
and
outs
pop
jns
jo
or
pushf
test
mov
pop
clc
add
sub
shr
pushf
add
sub
push
adc
bound
in
clc
dec
xchg
adc
sbb
(bad)
jne
(bad)
cmovo
push
mov
fld
sub
inc
dec
arpl
sbb
retf
dec
mov
cli
ror
xor
mov
cmp
dec
jp
mov
xor
xlat
pop
sbb
mov
iret
cdq
mov
adc
out
jp
sub
inc
jmp
icebp
daa
xchg
cmp
xor
dec
fcomp
popa
mov
pop
or
daa
fnstcw
sbb
movs
nop
retf
lds
test
jns
fidivr
fsin
rol
mov
and
and
push
ret
inc
sub
sahf
push
popa
shl
mov
ror
or
enter
outs
xor
mov
sub
mov
dec
push
call
mov
mov
mov
or
icebp
fistp
sbb
dec
dec
mov
jle
out
out
mov
mov
cmps
repnz
pop
or
mov
data16
test
stos
pop
jg
mov
mov
jo
sbb
lahf
in
(bad)
sbb
out
outs
mov
call
sub
inc
xor
enter
cmp
cmc
ins
nop
ins
jns
in
stos
lods
sahf
daa
push
ret
sbb
aam
mov
add
es
call
or
cwde
das
adc
scas
push
iret
dec
mov
mov
pop
or
adc
pop
leave
sub
div
inc
lahf
mov
cmp
xchg
mov
(bad)
(bad)
xor
out
xchg
jmp
mov
mov
jmp
pop
test
aam
pop
mov
lds
sbb
mov
push
lods
push
cmps
sbb
retf
psubw
movs
mov
mov
xor
mov
sub
jne
fcomp
jns
aam
push
sti
push
addr16
xchg
punpckhwd
jbe
xchg
xor
push
xor
je
frstor
fistp
repnz
pop
cs
out
mov
hlt
ins
repz
sub
adc
xor
aad
jmp
rol
dec
xchg
sbb
cmps
pusha
test
scas
or
or
cmp
mov
mov
shr
cld
pop
fwait
dec
and
push
(bad)
jmp
inc
cmps
aam
out
movs
mov
pop
mov
and
sbb
jl
mov
xor
adc
stos
(bad)
mov
imul
je
outs
inc
or
mov
mov
pop
stos
jbe
jl
dec
loop
pop
call
in
retf
mov
outs
xchg
imul
add
bound
dec
xchg
mov
mov
inc
mov
pop
sbb
test
mov
les
mov
es
pop
(bad)
call
or
mov
jbe
mov
stos
inc
sbb
mov
fdiv
addr16
es
adc
pop
pop
push
mov
fcmovnu
dec
xchg
xlat
ins
push
xchg
dec
(bad)
xor
loopne
dec
loop
pop
mov
mov
(bad)
mov
mov
test
mov
jmp
pop
sbb
dec
push
push
mov
cs
xlat
cmp
xlat
pop
imul
pop
mov
loopne
cmp
loope
mov
in
outs
or
mov
aad
pop
mov
call
mov
dec
jmp
daa
pop
ins
sub
outs
sbb
sub
pop
and
sbb
and
aad
das
icebp
and
out
dec
(bad)
fistp
cmc
nop
rcr
(bad)
mov
stc
aaa
shl
jle
cmps
ret
mov
imul
jb
adc
cli
dec
mov
ja
ds
ins
adc
or
fiadd
fst
addr16
ret
fsub
xchg
dec
dec
add
xor
cmps
jmp
lahf
jg
or
sbb
int3
in
fnstenv
cmc
fwait
cmp
inc
or
add
jp
enter
fisub
push
xor
inc
push
mov
(bad)
stc
or
mov
pop
mov
xchg
xchg
pusha
out
cmps
aas
cmp
adc
call
inc
or
mov
int
sub
xchg
xchg
or
push
or
(bad)
hlt
xlat
add
scas
mov
mov
shl
(bad)
(bad)
pop
push
shl
xchg
imul
or
stos
inc
int3
aas
xor
dec
retf
pop
mov
pusha
or
ja
dec
sbb
adc
popa
jmp
mov
jae
mov
repz
jb
push
nop
cmp
call
add
sub
xor
cmps
call
in
je
xchg
pop
gs
xor
mov
in
add
retf
sbb
fnstcw
xchg
pop
add
sub
xor
loop
rol
dec
fdiv
(bad)
outs
pop
push
test
pop
or
out
mov
and
mov
mov
fimul
or
mov
sar
cmp
push
and
xchg
int
sbb
les
(bad)
out
repz
add
aaa
dec
mov
(bad)
hlt
mov
inc
js
and
mov
or
in
mov
(bad)
fwait
or
lock
out
mov
(bad)
dec
inc
ret
cld
sub
fiadd
fstp
dec
fprem1
add
xchg
mov
fnstsw
sub
xchg
leave
stos
iret
retf
jecxz
loope
test
inc
jb
jl
mov
jg
and
cdq
jmp
cmps
push
jg
mov
xchg
jb
imul
dec
ret
pop
ja
xchg
mov
xchg
cmp
sub
gs
inc
rol
out
rcr
nop
es
leave
jmp
cmps
push
jmp
cmc
pop
sbb
jl
pop
add
jb
xchg
pop
push
imul
call
aas
jnp
sbb
push
inc
sbb
bswap
sub
jae
mov
cmp
test
xchg
ret
cmp
inc
xchg
loop
adc
(bad)
outs
ins
push
jnp
add
cmp
push
test
jno
push
xchg
stc
xchg
(bad)
push
repnz
fdiv
loope
adc
lods
imul
xor
cmp
xchg
sbb
in
mov
into
out
xlat
or
xlat
cld
shl
jbe
into
in
movs
pusha
fidivr
push
lods
add
aam
pop
adc
mov
cmps
ja
adc
xor
aam
imul
fstp
push
sub
in
imul
inc
pop
or
push
pop
or
cmp
mov
mov
in
mov
pop
fimul
rcl
stc
pop
dec
stc
cmp
adc
xchg
popf
cmp
stos
stos
aas
xchg
stos
jne
lods
jo
add
mov
lods
addr16
or
and
cmp
pop
jne
test
xchg
in
icebp
(bad)
push
loope
add
pop
call
(bad)
sbb
or
or
xchg
dec
pop
push
cmc
neg
pop
outs
(bad)
cmps
jmp
pushf
pop
stos
and
inc
inc
not
xchg
add
or
stos
test
add
call
(bad)
fcmovnbe
jns
daa
(bad)
inc
test
adc
jmp
push
idiv
cmp
inc
stos
sbb
addr16
push
mov
mov
dec
aas
movs
hlt
mov
jae
cmp
dec
dec
fsub
dec
sub
inc
imul
push
out
nop
jl
call
aad
dec
data16
add
add
rcl
stos
mov
enter
repnz
addr16
stc
adc
aad
sub
push
mov
jb
aad
stc
ret
addr16
mov
jmp
xchg
cmp
mov
push
sbb
xor
arpl
sub
sub
cmp
dec
inc
rcl
pop
mov
or
jbe
xor
scas
sar
jmp
sti
test
into
pop
push
xchg
pop
mov
cli
mov
or
aam
lds
mov
adc
loop
arpl
push
cmp
bound
(bad)
jmp
cli
mov
xchg
jb
adc
pop
sub
fmul
int3
sub
jmp
push
aam
xlat
loopne
es
sbb
jecxz
mov
aad
jg
hlt
repnz
adc
mov
mul
imul
movs
adc
dec
rcl
or
fst
pop
sar
lea
cdq
inc
pop
ins
xchg
jecxz
sbb
push
inc
test
clc
mov
aam
mov
jmp
xchg
cwde
sbb
xor
(bad)
lea
fcom
mov
mov
push
arpl
mov
pop
lock
xchg
and
push
jl
push
sub
sbb
sub
js
inc
mov
jl
repz
sbb
test
mov
sbb
adc
jmp
push
push
shr
mov
stos
mov
push
add
test
sar
nop
ret
cmp
js
fwait
jb
add
or
fst
ds
sbb
inc
lahf
popf
add
pop
les
sub
idiv
xor
and
sbb
mov
in
cmp
add
shl
aad
fsubp
sbb
sub
outs
dec
ja
jmp
ins
rcl
push
xchg
vprotd
mov
jno
aad
clc
hlt
pop
or
in
add
fimul
int
mov
inc
fbstp
outs
jecxz
dec
sbb
mov
cwde
dec
in
mov
jg
cmp
es
inc
cld
xor
adc
cmc
hlt
xchg
jno
inc
imul
pop
fisttp
or
xchg
ret
jae
mov
lock
jb
push
fstp
push
inc
loop
(bad)
aam
or
test
mov
dec
mov
cwde
sar
and
pop
outs
jmp
or
in
jmp
mov
(bad)
add
and
pop
jnp
les
(bad)
call
fdiv
out
or
fadd
dec
mov
popf
ror
adc
or
push
fisub
pop
je
and
cmp
sbb
mov
call
fnstenv
test
dec
sub
lock
push
movs
xor
scas
ss
jle
fcmovnbe
adc
rcl
movs
mov
push
ss
adc
mov
cmps
mov
pop
dec
mov
mov
pop
out
into
in
pop
push
mov
lock
jae
sub
shr
jecxz
into
fmul
aas
shr
or
cmp
ins
pop
add
sbb
out
xchg
fbld
add
jge
lods
add
cmp
sub
hlt
cwde
repz
and
clc
sbb
xchg
test
push
add
cmc
adc
(bad)
hlt
xor
(bad)
aaa
xor
ja
push
xor
stos
and
xor
mov
jb
scas
or
xor
je
or
sahf
sub
jne
arpl
repz
sub
cmp
cmp
fstp
fwait
je
xlat
aam
mov
or
idiv
dec
push
mov
cmc
retf
xchg
ins
sub
add
mov
xchg
mov
mov
mov
push
sub
push
gs
ror
xchg
sbb
pop
jg
sbb
pop
push
mov
cld
mov
sbb
and
jle
jb
jnp
rcr
xor
js
mov
(bad)
or
dec
movs
in
(bad)
call
jp
lahf
pop
pushf
jb
xchg
push
sub
xchg
leave
jmp
xor
mov
push
lmsw
lock
pop
out
jb
mov
jg
(bad)
mov
outs
push
mov
dec
adc
scas
out
xchg
mov
sbb
xor
add
adc
adc
int3
and
cwde
call
add
pop
mov
cpuid
aam
cs
imul
lods
rol
jb
pusha
enter
adc
add
dec
lock
inc
mov
rcl
movs
xor
mov
icebp
xchg
xchg
add
pusha
addr16
rcl
xchg
xchg
mov
das
bound
lea
dec
test
inc
pop
(bad)
ins
mov
push
sbb
ja
sbb
clc
shr
sub
sahf
scas
mov
xor
push
in
(bad)
xchg
and
and
mov
push
cmp
sub
pushf
mov
inc
sub
sbb
lea
jp
xor
xchg
js
or
xor
mov
xchg
xchg
scas
xor
inc
jp
scas
aas
mov
call
movs
fnstenv
dec
lods
fmul
adc
dec
iret
pop
jnp
rcl
in
pushf
mov
cmps
dec
pop
inc
cmc
dec
aas
sbb
lods
xchg
pop
mov
push
mov
cmp
sbb
jp
lods
gs
pushf
mov
inc
jmp
shr
cli
dec
sbb
shr
add
ins
neg
(bad)
in
mov
lods
push
pop
pop
dec
into
mov
in
xchg
shl
retf
std
cld
mov
daa
mov
jg
inc
(bad)
lods
or
pop
iret
or
lock
inc
mov
inc
data16
test
adc
dec
xor
xchg
cmp
outs
and
jl
cmp
mov
mov
(bad)
and
(bad)
xor
xchg
ss
dec
repz
mov
data16
jnp
or
aas
mov
cmps
cmp
add
std
fisttp
mov
aas
dec
sbb
mov
inc
mov
pop
not
out
pusha
lods
inc
das
mov
and
sbb
sub
push
jmp
mov
pop
shl
gs
loopne
cwde
ds
stc
jne
add
repnz
and
push
out
cwde
sub
cmp
test
in
dec
adc
cmp
cwde
out
dec
pop
xor
jmp
call
pop
fimul
ror
mov
aad
adc
jae
aaa
sbb
xor
and
mov
xor
std
fld
or
cmp
sub
mov
xchg
mov
test
test
cld
ins
and
ret
lea
call
fs
into
inc
out
pop
or
dec
mov
and
and
xchg
mov
out
aam
out
push
push
iret
inc
imul
push
aad
aaa
sahf
out
test
xchg
data16
and
adc
jge
jnp
sbb
adc
pop
mov
add
ret
xchg
out
inc
add
pop
jmp
das
xor
mov
jbe
(bad)
nop
mov
les
fstp
push
popa
jmp
push
(bad)
mov
int3
mov
outs
sub
sahf
xor
daa
xor
out
push
test
jo
add
dec
or
in
mov
cld
xchg
inc
(bad)
adc
push
cs
(bad)
es
(bad)
mov
adc
dec
sbb
repnz
push
leave
xlat
xor
bound
pop
sbb
adc
cmps
mov
jmp
out
adc
fld
add
aad
cli
xchg
popf
xchg
sub
add
ins
movd
push
and
mov
and
out
ret
cmps
pop
call
pushf
iret
dec
outs
add
jg
cmp
pusha
fmul
jmp
in
sub
push
(bad)
out
sub
icebp
xchg
lock
pop
cmps
into
mov
aaa
adc
arpl
mov
sbb
add
xor
pushf
sub
cmp
sub
leave
lods
sub
dec
xchg
adc
jne
cmc
mov
mov
bound
dec
push
scas
mov
sub
jo
fistp
pop
das
xor
repz
sub
pop
aas
pop
adc
mov
push
push
fwait
(bad)
xor
fadd
cwde
es
movs
pop
repnz
in
xor
into
mov
mov
dec
jnp
test
into
retf
int
and
scas
mov
pop
jmp
add
push
(bad)
nop
or
cmp
fiadd
in
(bad)
mov
or
dec
xchg
push
fnstsw
ret
mov
or
retf
mov
jmp
movs
inc
adc
mov
inc
inc
add
or
dec
jne
mov
jne
cmp
popf
pop
xchg
or
inc
mov
fwait
pop
je
mov
das
dec
push
or
inc
out
loopne
xchg
jmp
lock
jnp
xor
sub
data16
imul
test
sub
xchg
das
sbb
jnp
and
or
mov
mov
add
dec
ins
call
sub
jge
jmp
xchg
(bad)
out
dec
popf
(bad)
mov
addr16
pop
mov
mov
push
jmp
stos
jae
push
fist
sbb
inc
xchg
inc
int
pop
add
call
xchg
aad
fisubr
dec
sbb
xor
sahf
je
mov
cli
xchg
shl
mov
mov
out
xlat
int
xlat
mov
jne
mov
loope
shl
cmp
test
retf
shl
mov
nop
jl
iret
int
inc
sbb
arpl
mov
xlat
(bad)
jb
mov
mov
dec
outs
cs
mov
std
pop
adc
xchg
std
mov
(bad)
dec
cmp
repz
xor
adc
adc
and
out
jg
pop
movs
inc
mov
(bad)
pop
leave
pop
js
sub
xchg
mov
xchg
fsub
cmp
bswap
jecxz
shl
cmp
and
sub
or
ficom
mov
mov
xchg
jmp
data16
mov
(bad)
dec
(bad)
fcomp
dec
adc
lea
leave
int
repz
jp
push
es
push
pusha
sbb
mov
iret
push
pop
cld
pop
mov
popa
xlat
call
ss
dec
sbb
sub
mov
sbb
add
inc
das
inc
add
inc
mov
je
ds
jno
cmp
stc
ss
mov
in
push
int
xor
and
fst
fistp
push
jp
xlat
ds
cmp
gs
fnstenv
cld
fiadd
jg
loope
adc
(bad)
push
into
pop
retf
rol
jns
add
aad
stos
pop
sub
test
(bad)
ins
dec
pushw
cmc
fnstcw
xchg
xor
push
jl
sbb
sti
cmp
fdiv
jg
mov
cmp
push
test
dec
xor
shl
outs
cmc
add
inc
sti
cli
mov
sti
xchg
(bad)
push
add
xchg
mov
outs
and
xor
xchg
iret
mov
xchg
jbe
pop
xchg
sbb
popf
mov
sbb
(bad)
icebp
pop
in
mov
add
(bad)
test
cmc
jmp
call
(bad)
inc
cmp
sbb
or
cmp
test
xchg
leave
lock
xor
xchg
jle
loop
out
loopne
adc
pop
cmp
popa
mov
out
push
or
fwait
mov
push
test
leave
iret
mov
ja
jl
fs
mov
je
jmp
retf
mov
gs
test
add
jno
inc
div
push
mov
mov
mov
adc
popa
stos
outs
sbb
hlt
inc
fcmovnb
mov
mov
js
add
out
inc
mov
add
xchg
xchg
outs
pop
jo
add
pop
stc
rcr
push
aad
mov
jbe
jle
ins
loope
mov
or
push
and
sub
movs
pop
pop
or
ret
cmp
jnp
mov
fst
xor
out
add
(bad)
sti
jb
popa
ins
cmp
ror
dec
in
in
dec
cmp
pop
out
sar
repz
and
mov
stc
mov
and
idiv
repnz
cdq
out
test
add
sti
fld
adc
add
mov
sti
add
cmp
xchg
out
add
fbld
shr
iret
lahf
call
sbb
add
mov
or
test
sti
adc
in
sbb
xlat
ret
add
xchg
and
add
jg
pop
std
pop
xchg
dec
jecxz
js
sbb
xor
(bad)
frstor
call
push
aam
gs
sti
adc
mov
mov
add
aas
ds
ss
ins
int
popf
adc
outs
ja
sub
test
sbb
cmps
pop
nop
adc
mov
or
out
fldcw
pop
jnp
mov
mov
rcr
add
fiadd
dec
aam
mov
es
out
gs
push
mov
daa
add
(bad)
idiv
adc
push
pop
jb
pushf
jecxz
jo
fst
arpl
push
mov
out
aam
sbb
loopne
jle
cmp
cmp
inc
xchg
pusha
jbe
pop
and
daa
cmp
push
sub
or
push
add
(bad)
fidivr
jne
cdq
cmp
xchg
mov
retf
popf
pop
sar
ret
outs
cld
into
int
cmp
sahf
push
sbb
push
mov
mov
(bad)
mov
push
mov
xor
(bad)
rcr
add
lods
popa
bound
dec
ret
scas
int
jnp
push
push
outs
fistp
inc
pushf
xor
cmp
scas
aas
mov
inc
rcl
retf
mov
pop
push
frstor
add
jge
gs
xchg
add
cmp
dec
jge
outs
repz
and
push
sbb
cmp
bound
inc
ret
sub
mov
ss
out
neg
and
and
and
push
or
sbb
or
or
outs
and
icebp
xchg
jle
jle
popa
imul
rcr
xor
outs
outs
fsubr
sti
xchg
shl
daa
jg
push
jecxz
mov
pop
push
mov
jp
pop
lods
jg
or
les
jo
dec
mov
mov
std
adc
lock
mov
ret
adc
inc
jmp
stc
pop
mov
(bad)
dec
cs
dec
jne
in
xor
adc
sbb
lahf
scas
jne
hlt
xchg
push
or
ret
cmp
mov
inc
fmul
sub
inc
inc
push
das
std
stos
adc
xchg
xchg
(bad)
jo
into
jns
jp
test
mov
mov
pop
adc
mov
fcomi
rcl
cdq
inc
push
mov
leave
nop
loope
pushaw
xlat
or
outs
iret
adc
mov
(bad)
jle
and
iret
out
cmp
mov
inc
mov
and
xlat
lds
sbb
add
inc
push
scas
sub
mov
rcl
leave
pop
pushf
and
mov
pop
ficom
(bad)
aad
pop
call
das
gs
scas
lods
sbb
stos
into
push
dec
pop
mov
add
xor
xchg
cs
(bad)
mov
mov
popa
js
xor
dec
int3
mov
fld
jl
stos
mov
sbb
fild
fsub
xor
in
xor
repz
and
mov
inc
repnz
das
outs
or
push
and
sbb
jp
mov
push
jo
push
cdq
add
sbb
and
aas
arpl
pop
stos
fbstp
inc
xor
jns
into
xchg
inc
adc
sub
dec
ror
jp
adc
xchg
leave
ins
test
pop
imul
pop
pop
(bad)
fsubr
mov
dec
out
and
sti
stc
cmp
mov
shr
mov
shl
jge
addr16
das
sbb
hlt
sub
add
shr
xchg
arpl
xlat
mov
mov
and
mov
jns
push
call
test
cdq
dec
cdq
aas
in
cmp
imul
cdq
ja
mov
and
in
js
loope
push
mov
xchg
ds
mov
add
je
pop
std
mov
leave
or
lea
push
fdiv
jecxz
pop
into
and
(bad)
fdivr
mov
in
pop
sbb
mov
enter
xchg
mov
dec
mov
mov
dec
gs
push
cmp
mov
bound
and
sbb
mov
mov
aaa
cmp
adc
pop
sub
dec
ret
adc
sub
jmp
sub
mov
bound
je
cdq
mov
data16
sbb
inc
inc
adc
sub
cmp
inc
or
adc
std
sub
jo
pop
push
xor
nop
push
lds
(bad)
not
inc
sub
mul
cli
icebp
or
ret
push
test
jbe
xchg
cdq
mov
adc
push
je
fisub
ins
(bad)
pop
xor
sti
mov
push
retf
mov
push
cmp
arpl
mov
push
sbb
ins
sahf
cmp
dec
cli
stos
pusha
dec
fldenv
retf
push
repnz
sti
mov
push
mov
lea
xchg
cs
push
gs
sbb
xchg
ret
cmp
jg
cwde
cmp
mov
retf
in
add
push
mov
fnsave
mov
adc
pop
dec
ins
mov
ja
lock
inc
jae
sub
popf
mov
and
cmp
repz
jno
fisttp
movs
and
shr
fnstenv
jecxz
jnp
sub
cdq
and
and
test
cmp
adc
sahf
push
les
inc
in
es
shr
inc
cli
rcr
rcr
sub
push
retf
iret
cld
add
mov
push
dec
lods
push
inc
push
jbe
pop
bound
jne
lea
rcl
icebp
lods
xlat
sbb
dec
push
pop
ret
or
cwde
dec
mov
sub
mov
mov
push
adc
clc
into
test
ss
xchg
sti
and
sub
sub
sahf
leave
das
loopne
jbe
mov
pop
push
ret
(bad)
test
ins
add
add
xchg
call
loop
and
fld
sub
pop
in
dec
stc
push
mov
jmp
xor
dec
ins
jl
xchg
lds
(bad)
dec
xchg
in
xchg
shr
jbe
in
shl
sahf
ret
pop
inc
jae
gs
adc
ss
push
or
cmc
mov
cmp
(bad)
aaa
jp
lock
pop
pop
jns
fild
jo
retf
add
xlat
test
stos
sbb
dec
arpl
push
cmp
adc
jns
add
adc
imul
shr
dec
into
inc
or
xchg
inc
aaa
inc
cmp
fdivr
mov
div
sahf
rol
popa
xchg
jg
sbb
and
xlat
cmps
cmp
sbb
icebp
sbb
mov
pop
int3
jae
add
in
dec
rcr
inc
add
cmp
ja
rcr
pop
addr16
jns
in
xchg
sub
rol
call
add
shl
push
and
hlt
cmp
in
pop
add
dec
mov
pop
gs
mov
pop
in
les
test
cmp
pop
and
in
jae
loop
fsub
dec
daa
xor
arpl
xlat
(bad)
xor
xor
or
jns
loope
ds
xchg
mov
pusha
adc
iret
push
nop
cmp
push
sar
push
je
pop
pop
loope
push
pop
bound
jo
jmp
xchg
inc
push
push
xor
adc
push
mov
fistp
and
or
sub
jg
cmp
xor
cmc
in
jg
stos
into
jae
movs
call
gs
dec
out
xchg
sbb
dec
lea
outs
out
or
cmp
(bad)
jmp
shl
and
mov
xor
movs
adc
imul
or
stos
mov
dec
and
mov
std
mov
adc
adc
(bad)
jg
lods
out
xor
mov
popa
int
mov
pop
and
sub
icebp
xchg
daa
mov
loop
sub
xor
pop
in
das
inc
lds
in
jbe
xor
cwde
pop
call
outs
add
pushf
push
pop
push
pop
je
in
gs
mov
sahf
xor
div
or
rcr
loope
test
add
test
mov
stc
cmps
xlat
xchg
stos
cli
add
push
cmp
gs
jge
push
add
or
inc
sbb
ins
xor
sbb
cdq
loope
stos
pop
sub
std
in
sbb
push
rcl
clc
jge
cmp
adc
ds
shl
mov
add
add
push
and
cli
push
sbb
add
mov
outs
push
mov
mov
push
cmp
sub
xchg
bound
push
mov
lods
addr16
retf
push
xchg
sahf
sbb
push
adc
aas
inc
retf
mov
jne
daa
mov
js
aam
out
cmp
mov
inc
aaa
bound
mov
inc
or
stos
hlt
mov
xor
add
mov
dec
pop
outs
push
loop
xchg
cmp
and
push
fist
je
mov
test
add
mov
loope
dec
or
loope
mov
or
xlat
mov
jno
sub
push
fcmove
sub
jno
sar
or
adc
adc
js
imul
adc
sbb
cwde
sbb
outs
pop
fldcw
sub
push
push
push
arpl
xchg
jo
inc
jns
loopne
sub
or
jmp
jb
lds
(bad)
das
mov
push
std
jmp
push
fisub
(bad)
sahf
les
repnz
mov
sub
mov
jp
ds
lds
leave
in
jle
adc
pop
sbb
imul
cmps
inc
xchg
lods
fwait
or
ds
sub
sub
cmc
push
mov
test
push
pop
fldcw
inc
dec
cmp
sub
push
stc
cld
les
pop
ds
mov
rcl
and
sub
push
jle
jnp
adc
sub
and
ja
jg
push
in
add
dec
fcomip
es
sbb
mov
sbb
outs
popa
outs
dec
fiadd
sbb
imul
mov
inc
mov
jg
imul
into
data16
neg
cdq
push
(bad)
push
ds
ins
enter
cmp
loope
xchg
ffreep
and
cdq
pop
mov
adc
mov
cmc
addr16
add
retf
pushf
dec
and
cmp
add
cmp
jo
jge
mov
call
lahf
or
sti
or
(bad)
mov
retf
sub
mov
mov
mov
fwait
sbb
fidiv
and
jecxz
mov
jl
pop
in
inc
mov
mov
pop
push
mov
jle
and
inc
cmpxchg8b
out
xacquire
cmp
sub
mov
loopne
sbb
cmc
ret
movs
call
popa
and
dec
js
push
mov
(bad)
out
out
fst
jge
jnp
jbe
daa
xchg
dec
ftst
je
aam
sahf
sub
xor
add
sti
(bad)
fst
fucom
pop
mov
push
add
or
neg
rol
jno
icebp
dec
(bad)
mov
repz
ins
outs
jae
mov
xor
pushf
push
das
test
or
pop
push
scas
adc
xchg
jns
or
and
shl
cmp
(bad)
xor
mov
call
xchg
pop
mov
inc
pushf
mov
xchg
mov
mov
inc
retf
lock
movs
pop
loop
push
lock
add
movs
fbld
sub
jg
jmp
jns
pop
rcl
sbb
pop
push
cmc
mov
mov
cs
xchg
std
mov
pop
int3
test
shr
push
repnz
mov
mov
mov
and
inc
lods
cmc
loope
shl
inc
push
(bad)
shl
push
adc
pop
scas
jp
ins
jne
lds
pop
xchg
xchg
xchg
std
sbb
add
aad
or
inc
and
adc
inc
mov
cmp
or
sub
movs
aam
adc
mov
and
mov
js
retf
push
add
loopne
sbb
repz
push
inc
adc
cmp
and
fcom
hlt
xchg
shr
dec
and
xor
dec
sti
fwait
div
inc
stos
xchg
ret
out
adc
mov
out
(bad)
push
lods
sbb
(bad)
clc
loopne
out
jno
and
retf
mov
push
jnp
cdq
xchg
fsub
ss
jmp
adc
ret
or
sub
iret
imul
ss
test
icebp
test
ret
retf
bound
cmp
dec
xchg
add
ret
lds
xlat
push
ror
pop
xchg
(bad)
cli
cld
pop
add
pusha
xor
dec
mov
(bad)
mov
cmp
pop
and
das
fdivr
leave
int3
mov
shl
jmp
ds
loop
dec
xor
cmp
dec
addr16
aaa
loopne
aas
dec
mov
xchg
jmp
mov
lods
push
jo
int
sub
cmp
jecxz
mov
gs
out
add
sub
shl
push
jp
jnp
out
mov
inc
enter
mov
in
je
dec
dec
scas
in
in
out
(bad)
rol
adc
cmp
leave
out
pop
jg
or
push
stos
into
mov
sbb
jl
pop
sbb
test
or
inc
and
push
repnz
mov
xor
pop
cmp
ret
sbb
or
inc
clc
dec
stos
push
mov
adc
scas
cmc
add
fldcw
push
sub
test
dec
mov
call
and
out
mov
stos
in
xchg
sbb
test
pop
in
mov
mov
jmp
sbb
xchg
dec
sbb
imul
addr16
pushf
inc
dec
xchg
mov
mov
rcr
mov
call
or
jmp
cmp
mov
gs
mov
repnz
aad
out
call
test
repz
mov
aad
jns
retf
inc
and
inc
call
mov
ds
gs
addr16
cmp
sbb
pop
jno
inc
mov
mov
pop
sbb
stos
or
add
add
out
and
sbb
dec
call
cmps
xchg
jl
dec
cmp
cmc
push
mov
cmp
push
xchg
push
popa
adc
in
push
jmp
add
and
sbb
inc
shl
add
stc
dec
movs
xlat
or
inc
push
stc
mov
jp
stos
mov
push
es
or
fs
xchg
dec
jg
cmc
xor
leave
mov
jb
adc
(bad)
and
in
jne
dec
out
push
mov
inc
xchg
sub
inc
cwde
not
imul
out
jbe
int3
mov
pop
ins
ss
mov
scas
in
call
rcl
ja
push
rcr
push
cmp
add
(bad)
test
scas
jmp
push
cmps
add
cmps
fsub
scas
sbb
repnz
stos
inc
or
sbb
std
add
and
jp
rcr
jle
ds
in
sbb
rcr
xchg
sub
shr
sahf
pusha
leave
lds
and
add
pop
xor
or
ret
jmp
ficomp
xor
mov
or
scas
btr
sbb
push
xor
push
or
sub
lock
sub
mov
in
in
clc
xchg
or
push
mov
into
jg
dec
cmp
rcl
and
and
pusha
dec
rol
rcr
sbb
ret
mov
add
mov
imul
data16
rol
mov
pop
jae
movs
jns
retf
es
adc
and
test
mov
xchg
inc
sahf
mov
cmp
dec
mov
xor
jb
cmp
mov
aas
fwait
call
adc
xor
sub
adc
sbb
repz
fcmovne
cmps
jo
jmp
shl
ja
bound
xchg
adc
aaa
sub
data16
jmp
stos
xor
mov
inc
sbb
mov
(bad)
mov
jmp
push
pop
dec
into
push
jbe
lahf
(bad)
daa
cmps
mov
mul
pmaxub
pop
into
adc
inc
xor
inc
outs
jno
ror
pop
pop
daa
cmp
pusha
ret
and
aas
mov
cmc
jne
and
idiv
pop
ins
(bad)
lahf
mov
jmp
mov
xor
bnd
mov
lods
lods
retf
mov
cmp
retf
(bad)
and
sub
dec
mov
fld
test
rcr
jmp
imul
cmc
xchg
adc
and
mov
xchg
or
jnp
mov
call
or
leave
movs
arpl
jne
xor
inc
fmul
xor
push
mov
js
and
mov
pusha
push
mov
stos
cmc
sub
cmps
iret
pop
xchg
and
push
into
rcl
cmp
xlat
dec
push
stos
fst
add
add
xchg
xchg
lods
movs
add
ds
and
stos
or
push
gs
shr
daa
out
sub
call
adc
adc
test
(bad)
lods
or
out
pop
addr16
xchg
icebp
aad
or
lahf
test
sahf
or
pop
retf
jl
xor
xor
stc
lea
cmps
xor
leave
cmps
pop
leave
lahf
rcr
push
cmp
lock
adc
xchg
jl
outs
sbb
das
bound
and
clc
and
mov
fistp
cmps
inc
sbb
adc
mov
loopne
and
mov
das
inc
call
inc
xchg
cmp
mov
inc
pop
repz
call
ins
sub
jbe
lea
fdivr
sbb
ja
and
jmp
sbb
mov
enter
iret
fcomp
test
push
xchg
add
pop
mov
lods
adc
mov
dec
xor
and
inc
ja
lods
fisttp
imul
mov
retf
ss
pop
sub
inc
xor
sbb
mov
mov
sahf
xchg
or
lock
cwde
(bad)
nop
fwait
cmp
mov
jmp
mov
iret
sbb
fsubr
jg
adc
xchg
inc
sub
leave
pop
mov
inc
cmp
int3
xor
inc
inc
pop
and
jo
and
rol
out
push
or
sbb
(bad)
lock
dec
jmp
iret
fcmovb
retf
xor
test
cmps
pop
pop
lahf
sub
mov
mov
imul
je
pop
mov
(bad)
popf
cwde
mov
ror
jmp
jae
outs
cmps
jo
push
loop
mov
div
cmc
mov
inc
adc
ja
ficom
fwait
push
fld
outs
adc
sti
shr
fsub
repnz
ins
sub
pop
add
into
dec
sbb
aas
mov
jae
bound
cwde
lds
(bad)
mov
mov
into
xchg
outs
cld
sbb
fcom
lahf
sahf
lahf
in
je
add
int
(bad)
fidiv
movs
or
cmp
cwde
cmp
aam
js
lea
mov
pop
or
hlt
sub
gs
dec
xchg
xor
or
xor
out
pop
xchg
test
movs
cs
xchg
div
mov
push
ror
imul
adc
gs
jo
inc
div
std
push
xchg
dec
out
adc
or
dec
cmps
mov
ins
push
je
add
mov
push
fld
adc
mov
in
dec
mov
sahf
mov
pop
(bad)
cmp
shr
stos
mov
std
mov
retf
jno
das
clc
test
push
icebp
adc
js
sti
add
jb
add
jl
aas
add
dec
ss
jo
les
call
jno
push
mov
cmc
dec
scas
scas
inc
inc
xchg
ffreep
jl
push
pop
push
out
pop
scas
jns
xor
rcr
mov
test
(bad)
stos
call
xor
stc
and
or
jl
ja
jne
out
clc
and
mov
mov
mov
inc
movs
aaa
cmps
xchg
das
cld
inc
pop
mov
ja
call
sub
scas
inc
sti
in
jp
pushf
cmp
pop
adc
ja
shr
mov
and
jge
jnp
jle
cs
sub
daa
add
(bad)
(bad)
outs
arpl
or
call
or
fs
dec
mov
sub
cwd
or
popf
(bad)
lds
ret
in
std
cmp
aad
enter
movs
nop
inc
push
sahf
out
xchg
push
clc
cmp
mov
add
clc
cmp
lods
mov
mov
ins
sahf
jb
dec
ret
push
lea
ds
xlat
mov
and
iret
jl
shl
dec
in
adc
xlat
jge
mov
loope
ja
xor
into
cwde
mov
push
(bad)
pusha
xchg
aas
adc
ins
outs
mov
push
test
retf
clc
sar
adc
cli
iret
addr16
and
cs
cmp
cmps
iret
loope
repz
and
jmp
fsubr
lock
rcr
jo
inc
cmp
push
sbb
imul
mov
push
cmc
(bad)
sbb
test
xor
push
mov
mov
popf
imul
dec
fcom
mov
add
mov
pushf
(bad)
lods
sar
xor
jno
das
jmp
jmp
jle
sahf
bound
call
shr
popf
mov
sbb
add
pop
scas
outs
lds
(bad)
mov
js
mov
sub
add
pop
jb
dec
(bad)
aad
aas
out
das
call
in
and
and
js
pop
mov
scas
xor
lds
test
retf
icebp
jmp
test
mov
nop
cld
fwait
iret
inc
or
in
repnz
pusha
pop
push
jg
lahf
daa
lock
dec
jno
frstor
dec
aaa
add
iret
loopne
xchg
popa
mov
adc
push
sahf
stc
test
not
sbb
lods
inc
jp
dec
jecxz
sbb
in
pop
ins
popf
in
and
mov
and
or
mov
add
lods
or
dec
pop
adc
ja
adc
push
mov
push
and
idiv
mov
push
jle
cld
imul
rcr
sub
push
sub
mov
fild
sbb
pop
jae
aas
(bad)
jle
mov
xchg
int3
test
frstor
adc
fist
popf
ds
jmp
in
int3
loop
jmp
lea
mov
dec
cmp
fadd
ret
sub
les
inc
jge
inc
xchg
mov
adc
shl
mov
retf
mov
or
push
scas
rcr
test
mov
lahf
or
clc
imul
je
es
adc
sahf
push
les
popf
sbb
push
ins
xchg
jle
sti
cli
add
xchg
out
dec
jge
ja
inc
push
xor
and
adc
aam
sub
and
push
xor
(bad)
imul
(bad)
shl
xor
js
cmps
xchg
fidivr
sbb
aam
lahf
pop
adc
imul
mov
sbb
cmp
cmc
add
test
jb
sar
jmp
mov
outs
stos
mov
scas
rcl
cmps
cmp
sub
pusha
push
cmp
ret
mov
cld
movs
(bad)
call
xchg
scas
mov
das
in
push
ja
xchg
popa
jecxz
mov
pop
mov
loopne
mov
xor
add
push
pop
into
jbe
sbb
mov
mov
in
stc
outs
shl
iret
out
aad
mov
dec
ret
push
cli
cmp
sbb
cmp
fcomp
pop
push
push
sbb
cmp
jp
lea
jbe
fwait
shl
data16
xchg
cdq
fs
mov
jnp
xchg
adc
jge
ins
idiv
sar
cmp
pop
lea
jne
sbb
fs
and
dec
jecxz
ror
icebp
loope
and
add
pop
(bad)
in
sbb
and
shr
mov
jne
mov
xchg
aad
clc
mov
inc
inc
mov
out
or
jno
loope
jae
mov
adc
pop
push
call
ficomp
xchg
dec
add
js
xor
mov
rcr
mov
fwait
xchg
jnp
mov
push
(bad)
jl
jl
sbb
push
push
and
stc
stos
add
sbb
pop
xchg
cmp
(bad)
xchg
cwde
push
dec
daa
shr
xor
jno
daa
lods
call
push
lock
mov
mov
lods
stos
sti
sbb
into
shl
add
pop
xchg
movs
enter
sbb
mov
inc
imul
iret
mov
outs
mov
pop
push
cwde
cmps
xor
lods
xchg
and
xor
inc
add
cmp
cmps
call
or
es
lods
stos
sbb
clc
(bad)
jge
fxch
jmp
sbb
js
xor
push
cmp
xchg
or
or
push
mov
cmps
neg
adc
cmp
retf
xchg
into
sub
pushf
dec
sbb
jns
pop
shl
inc
pop
test
add
repz
addr16
out
scas
les
inc
mov
dec
mov
int3
inc
mov
cmp
int3
aas
and
or
ret
mov
sub
loopne
ror
dec
lahf
cmp
or
push
cmp
jg
cld
imul
add
cmp
loop
push
data16
xchg
scas
mov
mov
mov
pop
cli
mov
icebp
movs
jmp
cli
(bad)
repnz
add
and
idiv
jbe
leave
pop
pop
std
xchg
bound
nop
xor
aad
and
jo
xor
push
addr16
push
pop
(bad)
clc
stos
or
gs
push
xchg
clc
in
push
rcr
push
cmp
mov
icebp
xchg
scas
mov
mov
mov
xchg
sar
push
jge
ja
sbb
lea
jle
xor
ret
mov
ret
pop
retf
ins
jmp
repz
leave
sub
out
inc
push
adc
sub
xlat
call
or
adc
rcr
fscale
cli
jmp
fisubr
adc
jns
adc
ins
pop
idiv
ror
inc
mov
cmp
in
or
cdq
mov
dec
adc
jle
pop
and
lock
aaa
dec
imul
or
inc
mov
mov
data16
pop
jle
jmp
add
adc
add
int3
inc
mov
xchg
mov
adc
sbb
jmp
push
sub
push
mov
into
cli
mov
repz
sbb
mov
adc
pop
push
bound
pushf
call
fdivrp
pop
pop
cmp
mov
sbb
ja
scas
push
inc
ins
or
enter
aam
sub
sbb
rcl
out
push
pusha
and
lock
loope
or
mov
pusha
inc
aad
pop
call
pop
adc
adc
(bad)
mov
adc
das
les
mov
xor
aaa
call
lods
cmp
pop
(bad)
fsubp
jo
loope
in
cmp
int
daa
iret
enter
into
jle
xchg
push
pushf
nop
mov
clc
out
push
retf
adc
mov
repz
cmp
pop
out
lds
ja
or
ins
jb
push
ins
xor
fnsetpm(287
sar
or
push
push
(bad)
ror
xor
nop
inc
jbe
xchg
sti
mov
inc
and
adc
mov
cmps
test
rcr
adc
xchg
dec
fisubr
push
(bad)
out
and
add
xor
jbe
sbb
sbb
cmc
sbb
xchg
div
pop
cmp
ret
mov
frstor
das
cmp
mov
inc
into
aas
dec
gs
cld
ins
or
jae
mov
cmps
sub
push
jecxz
add
vmread
arpl
fucomi
mov
xlat
pop
mov
scas
scas
cli
inc
xchg
inc
push
xchg
imul
gs
test
xor
or
das
mov
mov
adc
out
dec
jg
inc
ret
mov
inc
and
and
cmp
mov
push
sub
and
loope
and
inc
loopne
rcr
cmc
inc
lods
or
fwait
inc
pop
dec
xchg
and
cmpps
add
arpl
cmps
adc
aam
add
lock
nop
std
fstp
imul
ja
cmp
jmp
imul
mov
lods
mov
push
jnp
popf
jl
ins
imul
push
out
ror
scas
arpl
dec
je
xchg
int
mov
dec
lock
in
xor
rcl
jmp
mov
add
cmc
stos
out
clc
test
(bad)
pop
jno
mov
(bad)
adc
push
ins
push
rcl
ret
and
xchg
push
ss
daa
fwait
data16
std
pop
outs
sub
lahf
jo
or
cli
dec
aam
lods
inc
sbb
bound
les
mov
test
push
xchg
pushf
xor
pop
js
push
adc
xchg
out
inc
cmp
nop
(bad)
dec
cmp
hlt
jmp
enter
adc
imul
or
ja
pushw
aam
mov
mov
inc
std
adc
cli
bswap
pop
and
sbb
pop
out
enter
dec
in
pop
push
lock
xchg
cmp
dec
loopne
cmp
xchg
sbb
test
mov
and
arpl
retf
inc
repz
pop
adc
push
push
push
sub
icebp
movs
enter
sbb
lods
add
fidiv
jecxz
sti
imul
mov
test
and
mov
cmps
(bad)
push
aaa
lock
scas
add
inc
sahf
add
into
rcl
adc
mov
rcl
pop
xchg
ds
mov
mov
push
bound
adc
mov
loope
mov
jne
in
xchg
ret
jp
lods
mov
sbb
in
jl
xchg
(bad)
pop
lods
stc
and
mov
popa
out
mov
fisttp
and
jb
dec
stos
sub
push
and
mov
inc
or
xchg
push
dec
aaa
inc
(bad)
dec
mov
(bad)
pop
shl
lahf
jge
std
push
fdivr
push
pusha
addr16
iret
daa
jg
in
mov
stc
lea
mov
lods
rol
nop
test
or
ror
inc
xor
xor
xor
inc
popa
cli
sbb
retf
cmc
pop
adc
(bad)
pop
jnp
xchg
sbb
pop
inc
jmp
inc
fisubr
mov
cmc
pop
ss
sahf
leave
jno
es
in
aad
mov
cmps
cmp
push
push
dec
inc
sub
(bad)
mov
cmc
int
and
in
std
jb
sub
repz
and
pop
movups
pusha
dec
lea
sub
push
mov
jmp
xor
pop
imul
mov
pop
pop
bound
push
adc
mov
or
sbb
xchg
mov
fild
ror
pushf
lods
xchg
dec
cli
sbb
pop
push
sahf
clc
(bad)
pop
or
into
loop
add
sbb
adc
call
push
dec
das
mov
push
add
mov
mul
mov
sub
inc
xor
or
out
xchg
jne
leave
pop
daa
and
out
lahf
(bad)
jmp
sub
and
mov
inc
stos
xor
adc
fdivrp
jns
mov
das
or
out
rol
rcl
aaa
test
or
leave
sbb
push
rcr
aaa
mov
(bad)
mov
cmp
retf
pop
cs
lock
scas
xor
imul
cmp
mov
fimul
or
push
jae
or
mov
adc
mov
not
es
inc
mov
dec
mov
pop
fsubp
nop
inc
pop
mov
xchg
jne
mov
add
xchg
sbb
or
loopne
mov
mov
stos
stos
mov
or
ins
das
inc
sub
mov
push
pop
push
into
idiv
ret
lds
or
pop
adc
retf
or
rcr
mov
xchg
repz
xchg
add
dec
jmp
jg
fwait
jb
add
xchg
or
inc
fsub
nop
aas
cli
pop
fisub
shl
jl
xor
sbb
cmp
mov
daa
mov
int
jp
pop
shl
xchg
xor
loope
pop
in
adc
adc
cmps
pusha
aam
jo
loop
xor
push
(bad)
cli
(bad)
mov
je
inc
in
les
mov
or
pop
xchg
adc
sbb
jbe
push
sbb
mov
push
aad
scas
cmp
cmp
jno
xor
jmp
xchg
jle
cmp
fstp
sar
or
xor
jp
or
mov
xor
nop
out
push
inc
int
push
jle
dec
sub
or
fpatan
movs
ja
(bad)
out
mov
cmps
jl
sbb
(bad)
imul
lods
sbb
mov
inc
js
cli
das
lods
jns
addr16
inc
sub
lea
sbb
ss
inc
sbb
clc
in
dec
jmp
shl
movs
cmp
(bad)
fldenv
mov
inc
xor
cmp
addr16
clc
sub
test
push
or
mov
imul
popf
push
pop
dec
mov
pop
sbb
gs
ret
cmps
pop
sahf
(bad)
jge
pop
mov
rcl
dec
rcr
retf
cmp
call
jb
not
cmp
paddsb
jecxz
test
les
or
dec
nop
push
xor
movs
pop
test
stc
adc
pushw
sbb
mov
mov
retf
int
jmp
mov
(bad)
stos
gs
pop
dec
cld
xchg
push
(bad)
sahf
(bad)
or
iret
je
in
push
mov
out
outs
out
jne
out
cld
or
or
jmp
push
sub
or
pusha
adc
enter
xor
call
push
add
add
xchg
inc
jmp
or
sub
test
adc
cmovle
pop
das
sbb
inc
dec
(bad)
movs
jge
inc
pop
jmp
mov
outs
loopne
retf
xor
aam
pop
dec
sub
sbb
adc
xor
pop
pop
push
ret
loope
dec
jmp
cmps
ret
push
push
push
push
push
inc
cmc
data16
iret
cdq
das
lds
jl
pusha
and
xchg
jmp
push
(bad)
(bad)
hlt
loope
mov
popf
pop
jecxz
gs
mov
enterw
mov
clc
cmp
sti
and
pop
sub
sbb
cli
sbb
add
mov
ret
stc
in
repnz
pop
add
cmp
fsubr
adc
mov
movs
inc
shl
mov
out
shr
xor
icebp
stos
pop
push
push
sbb
jmp
scas
fnsave
arpl
xor
xchg
mov
nop
fdiv
xchg
dec
out
dec
das
adc
dec
stos
push
and
fidivr
loop
not
push
and
ret
mov
mov
lea
imul
jl
push
in
lock
jbe
mov
pop
push
std
inc
out
cmp
adc
arpl
sub
xchg
rcr
jmp
(bad)
push
stos
mov
adc
sub
test
jle
cmp
mov
leave
mov
rol
fidivr
sbb
out
jge
xchg
aam
dec
jae
inc
mov
hlt
adc
lahf
pop
mov
shl
push
sbb
jl
cmp
mov
out
push
adc
sbb
into
out
retf
aad
add
cdq
in
and
jns
gs
int3
push
sahf
mov
fld
jno
push
add
lds
cmc
jmp
push
imul
ret
or
stc
iret
add
dec
int3
sub
adc
jo
xlat
repnz
and
fld
shl
sbb
loope
dec
loop
dec
call
mov
sub
dec
pop
lods
pop
nop
pop
and
enter
daa
add
push
ret
ret
mov
cmp
pop
scas
dec
out
adc
jle
imul
xchg
stos
loope
adc
(bad)
dec
scas
out
arpl
aaa
fst
fstp
in
jl
daa
xchg
in
and
push
fisttp
fld
xchg
scas
retf
bound
out
stos
sub
adc
fadd
(bad)
into
add
lds
imul
mov
mov
or
push
das
(bad)
sub
lea
push
cmps
add
out
sbb
push
fdivr
jbe
(bad)
fisubr
outs
repz
xor
cld
test
(bad)
(bad)
lods
iret
popa
add
movs
cmp
(bad)
cmc
adc
jle
push
aam
dec
out
inc
out
outs
sti
mov
mov
stos
shr
scas
rol
push
fld
xchg
ficomp
sub
mov
lods
push
aad
fild
ins
ja
rol
add
push
mov
sar
add
addr16
jmp
xor
mov
push
test
pop
lods
xor
in
push
call
mov
xor
and
mov
sub
in
data16
imul
fstp
das
lods
add
mov
call
push
repnz
pop
cmps
xchg
cmps
inc
stos
cmps
jo
test
push
imul
sahf
loop
out
stos
inc
or
mov
cdq
dec
pop
cmp
xchg
mov
lock
(bad)
je
mov
mov
push
pop
push
repnz
jne
xor
sbb
icebp
stc
test
jns
outs
stos
es
dec
sub
add
add
sti
into
inc
popf
into
cmp
jp
and
cmp
mov
out
xchg
mov
aaa
add
std
mov
adc
pop
in
and
dec
add
jmp
sub
movs
call
dec
nop
push
mov
clc
loop
out
(bad)
adc
inc
or
jge
retf
iret
popf
and
push
jnp
ins
jle
jno
inc
out
mov
pusha
dec
push
mov
jmp
xchg
cmp
jmp
cmc
or
fsubrp
mov
sub
arpl
out
movs
in
mov
cmps
iret
jnp
mov
jne
test
inc
or
mov
xchg
int3
out
push
nop
add
xchg
ret
push
mov
pop
inc
out
adc
ds
xor
loopne
out
ret
push
loop
dec
(bad)
ficom
sbb
add
retf
int
xchg
or
pop
clc
mov
fcmovne
(bad)
cdq
jne
push
movs
jg
test
mov
dec
pop
frstor
dec
gs
repnz
nop
lods
or
jmp
mov
and
xchg
add
push
mov
dec
lock
sub
fidiv
xor
sbb
push
dec
pop
pop
into
rcr
xchg
jae
pop
cmps
mov
bound
sahf
mov
sbb
jne
mov
dec
push
out
stc
pushf
or
add
jbe
cli
push
(bad)
ja
mov
cwde
jb
cmc
dec
vpmaddwd
dec
cli
sub
add
add
hlt
xor
push
mov
sub
push
push
rcr
popa
sub
xchg
inc
addr16
paddsb
xchg
cmp
xor
inc
mov
add
jnp
dec
jne
sbb
and
or
or
test
cmp
movs
push
pop
js
mov
mov
pop
je
in
les
jmp
mov
cmp
push
lods
adc
loope
inc
cli
sbb
sbb
cli
push
rcr
aaa
out
sub
sar
push
and
rcr
pop
add
je
cmp
dec
mov
push
jge
jo
cmc
lahf
sub
add
and
mov
pop
dec
xor
fwait
lahf
xor
adc
arpl
pop
cli
dec
rcr
shl
push
call
stos
aad
repz
xchg
addr16
lahf
popa
push
and
or
imul
pop
retf
data16
ret
ins
daa
sbb
inc
dec
(bad)
jo
and
push
push
inc
das
adc
xchg
fmul
adc
test
push
daa
mov
lock
ror
push
in
mov
cmp
push
aad
inc
fiadd
sub
sti
gs
jle
shl
pop
sahf
ja
jg
les
cli
jmp
pop
je
rcr
mov
xor
and
jb
xor
adc
popf
not
loope
jae
ret
push
fcom
fs
fcomp
xchg
nop
cmp
push
pop
je
xor
mov
out
movs
aaa
in
(bad)
jmp
or
mul
push
clc
leave
mov
cmps
aaa
jns
int3
push
cmc
(bad)
pop
arpl
cs
mov
or
lock
lock
inc
popa
xchg
loopne
jb
idiv
lods
mov
btc
adc
jae
add
sbb
push
(bad)
in
std
mov
sbb
pop
and
xchg
push
fdiv
scas
sti
setb
sbb
jb
xchg
dec
jbe
push
mov
pop
je
jmp
inc
mov
pop
push
into
test
dec
push
std
mov
push
ins
outs
sub
mov
imul
mov
dec
repz
rcl
inc
(bad)
sti
push
xchg
xchg
dec
pop
pop
or
sbb
sbb
mov
cli
or
aam
outs
cmp
inc
inc
in
mov
stos
gs
cmp
add
add
add
repnz
xchg
popa
cwde
dec
dec
mov
fsub
pusha
xchg
into
sbb
iret
xchg
jmp
xor
ret
sar
or
repnz
jge
call
fsub
test
mov
sbb
sti
std
mov
repnz
in
xor
dec
sub
cmp
xor
jne
pop
jmp
xor
lea
aam
test
dec
inc
fucomi
call
nop
sbb
sahf
test
or
test
add
sbb
push
push
inc
mov
ss
imul
cld
mov
adc
add
les
dec
ret
lahf
inc
cwde
out
inc
dec
fbstp
dec
inc
daa
cld
arpl
dec
ds
add
mov
loope
adc
fdivr
add
sub
outs
ins
movs
jns
push
xlat
mov
mov
mov
out
mov
push
icebp
sti
inc
fxch
es
push
pusha
xchg
cmp
mov
mov
fst
inc
dec
xor
in
stos
test
nop
aas
fidiv
mov
fld
sahf
loop
pop
outs
mov
inc
xchg
or
in
inc
mov
shr
adc
idiv
es
out
(bad)
pop
scas
popf
xor
adc
dec
enter
mov
pop
leave
sbb
popf
icebp
dec
aad
sbb
jo
jge
cli
cmp
mov
or
in
addr16
xor
xlat
mov
mov
pop
push
fcom
stc
popa
imul
ss
rcr
bound
push
int
popf
xchg
pop
stos
retf
int
lock
push
pop
lds
scas
mov
daa
addr16
test
mov
adc
mov
scas
pop
jbe
fst
aas
xor
and
es
mov
addr16
push
shl
es
lods
pop
fwait
push
sbb
aad
std
or
jp
mov
sub
pop
mov
pop
or
cmp
dec
je
je
daa
mov
jns
dec
xlat
jl
mov
push
jb
xor
int
stos
out
loop
out
cmp
xchg
mov
shl
fs
adc
je
sub
add
sahf
push
lock
lds
dec
xchg
cmp
in
iret
scas
(bad)
arpl
jmp
mov
inc
dec
repz
pop
pop
pushf
lahf
dec
mov
jl
enter
scas
mov
gs
stos
xchg
loope
xchg
lods
rcl
mov
xor
sahf
(bad)
cmp
xor
sbb
(bad)
sub
daa
movs
jecxz
mov
xchg
out
pop
in
sbb
addr16
xchg
sbb
cmp
and
cs
xchg
cmp
push
mov
outs
test
rcl
in
stos
imul
xlat
ds
sti
pushf
adc
mov
out
out
movs
fistp
hlt
popf
mov
sahf
pop
popa
jbe
dec
cld
sub
out
mov
mov
mov
bound
daa
and
mov
ins
add
cld
pop
sub
aaa
leave
jle
fnstenv
(bad)
or
mov
in
enter
or
fisubr
mov
cmps
test
mov
sbb
cmp
xchg
sub
dec
popa
int
mov
and
adc
inc
inc
lock
icebp
sub
pushf
shl
jmp
out
ss
(bad)
stc
dec
scas
jo
xor
in
mov
fcom
sub
dec
dec
jno
(bad)
xchg
push
out
mov
pop
das
scas
cmp
push
or
sbb
nop
sar
mov
outs
xchg
push
adc
ds
jbe
cwde
mov
pop
add
mov
cli
xor
push
lea
sub
xlat
push
cld
mov
inc
lods
adc
and
push
out
mov
aaa
jo
daa
hlt
mov
(bad)
lahf
push
pop
xchg
mov
add
gs
addr16
or
pop
inc
sub
enter
daa
fist
xchg
push
pop
in
mov
lds
aad
repnz
dec
and
out
and
in
push
cmovb
icebp
test
or
ins
mov
inc
add
jmp
mov
jg
mov
scas
push
mov
push
(bad)
fsub
retf
or
(bad)
mov
xchg
mov
adc
jno
push
mov
into
shr
movs
retf
cmp
mov
mov
xchg
dec
sahf
xchg
mov
pop
pop
retf
jnp
mov
mov
push
xchg
xchg
ins
fwait
sub
aad
sbb
scas
das
sbb
and
cli
sti
pushf
add
adc
pop
loop
out
shr
cwde
pop
pop
jge
(bad)
cmp
in
fbld
je
jge
xlat
sub
mov
popa
sub
pop
jb
loopne
push
or
or
ror
call
es
cmp
sbb
inc
scas
ja
test
xchg
in
pop
mov
movs
cmp
mov
outs
hlt
sub
stc
xlat
sbb
jge
mov
push
sub
inc
jno
sbb
jne
mov
mov
les
jl
xor
cld
arpl
mul
pusha
and
inc
pop
popa
stos
pushf
jmp
push
mov
mov
xchg
clc
or
iret
inc
repz
sbb
ins
sbb
and
xchg
clc
inc
mov
cmps
add
leave
and
pop
sub
xor
push
push
cmps
fiadd
outs
jle
bound
scas
stc
adc
cmps
out
sti
xchg
push
cmp
mov
add
nop
jl
jns
sti
and
and
sti
or
dec
iret
push
mov
sahf
add
lds
mov
inc
aam
push
aam
add
ds
pushf
out
sub
repnz
out
mov
(bad)
sti
ins
int
(bad)
cmp
aas
cmc
cli
mov
shl
adc
aam
add
jge
cs
imul
into
cmp
cwde
fld
dec
sbb
imul
pop
mov
or
or
cmp
dec
fld
jns
je
and
mov
or
jnp
pop
add
cmp
inc
fild
dec
rcl
aam
xor
imul
movs
shl
add
cdq
jg
cmp
sbb
mov
push
outs
popa
jl
jne
lahf
sti
ins
retf
inc
sbb
mov
jecxz
inc
cmps
rcl
or
in
mov
mov
dec
stc
or
sub
leave
mul
push
xor
pushf
and
hlt
push
sub
pop
dec
mov
ja
mov
test
test
sub
mov
out
in
mov
daa
fiadd
or
push
pop
or
sbb
retf
popf
xor
les
ss
mov
or
adc
fisub
xor
jmp
lods
js
sub
sub
sbb
test
(bad)
fstp
fwait
cmp
xor
fstp
iret
je
pop
out
push
and
pop
xchg
(bad)
je
fadd
mov
push
xchg
adc
adc
xchg
inc
jmp
clc
push
xor
push
retf
scas
adc
imul
or
cmp
jbe
mov
mov
jbe
inc
dec
xor
mov
rol
or
cmp
cmp
jae
outs
js
push
fld
jne
jae
test
mov
in
xor
call
shl
xor
jae
pop
xchg
mov
or
call
bound
push
aaa
(bad)
gs
neg
push
movs
xor
cmp
mov
retf
xchg
mov
not
sub
into
inc
xor
xchg
mov
outs
cld
sub
(bad)
ins
mov
sbb
cmp
fild
mov
sub
cli
(bad)
aam
out
dec
xchg
push
lds
pop
loopne
adc
lods
dec
mov
in
cmc
dec
jne
or
pop
fstp
movs
jnp
fiadd
out
jns
enter
fild
jns
test
and
call
sar
loope
mov
mov
jb
and
xchg
bound
scas
sub
repz
dec
shr
shr
movs
outs
cmp
sbb
js
icebp
(bad)
data16
add
outs
into
pusha
popf
add
das
shl
mov
fwait
(bad)
aad
and
mov
fimul
mov
loopne
ds
dec
int3
dec
jl
cdq
push
add
sbb
pusha
nop
lds
clc
and
stos
xchg
xchg
push
cli
add
push
popf
jle
dec
adc
lock
sub
std
mov
mov
out
sub
mov
push
into
adc
or
lahf
or
xor
mov
push
icebp
loopne
sbb
cmp
(bad)
fwait
cmp
lods
push
scas
out
mov
sbb
into
test
sbb
ins
retf
push
jl
lahf
pop
fst
js
mov
lods
fwait
call
test
lods
je
out
dec
jae
sub
es
add
test
or
mov
loope
cwde
aad
or
mov
bound
mov
call
sub
call
mov
mov
cmp
ss
mov
or
jmp
iret
out
cs
pop
(bad)
inc
stos
adc
iret
mov
sti
cmps
es
stos
xchg
test
int
leave
jl
jp
cmp
fs
fcomp
mov
sub
jns
push
nop
into
add
cmc
iret
imul
lock
dec
or
test
aaa
mov
inc
in
outs
movs
push
pop
jmp
arpl
xchg
movs
inc
movs
xchg
imul
(bad)
lods
pop
std
fwait
mov
pop
sti
out
pop
daa
jae
push
pop
inc
movhps
test
xchg
dec
loopne
fnstenv
mov
xchg
adc
hlt
push
ds
and
loope
gs
lock
xor
es
daa
dec
xchg
in
pop
loop
sbb
pop
ins
inc
mov
cmp
jmp
fcmovb
repz
cmp
sub
dec
inc
dec
or
adc
imul
daa
pop
(bad)
aad
dec
cmp
xchg
pop
xor
dec
cmc
scas
push
lds
dec
dec
(bad)
xchg
jge
pop
xor
xchg
jmp
adc
pusha
inc
mov
mov
sub
mov
jg
fxch
dec
pop
inc
adc
inc
int3
push
nop
mov
cmc
and
cmp
push
fisttp
mov
lods
outs
jle
mov
jmp
ret
jle
inc
rol
call
pop
xor
lods
jmp
sbb
or
push
rcr
fisubr
add
dec
push
pop
cmp
jbe
adc
dec
pushf
ss
sbb
dec
fsub
jp
rcr
stos
jl
mov
cld
lock
call
shl
leave
pop
cmp
pop
mov
xchg
jmp
inc
push
xlat
mov
inc
or
lahf
jecxz
add
retf
mov
mov
test
jle
sub
sub
ds
fimul
fst
test
inc
and
jle
int3
call
cli
out
(bad)
shl
xrelease
push
or
adc
les
test
int
mov
jns
out
add
aaa
sbb
xor
mov
xchg
add
push
std
loopne
xchg
sbb
lahf
retf
ss
fcom
popf
and
sbb
std
out
xor
clc
cmp
stc
jecxz
fmul
push
jecxz
sbb
fsub
mov
mov
lahf
add
(bad)
scas
in
addr16
dec
mov
call
(bad)
jecxz
out
and
hlt
loopne
aad
lods
test
(bad)
(bad)
or
fnstenv
and
das
mov
outs
out
loope
xor
fistp
mov
mov
xor
and
sbb
xchg
cmp
popa
popa
dec
xchg
ds
mov
pop
aam
push
movs
mov
jle
out
in
mov
mov
mov
cmp
dec
inc
loopne
aas
retf
(bad)
xor
jbe
mov
ja
jb
add
pusha
jle
and
inc
int3
dec
mov
in
add
(bad)
mov
add
cmp
fnstsw
cli
push
ret
pop
xchg
aad
mov
jle
jmp
cmps
jns
in
in
push
add
fldenv
mov
rcr
mov
and
(bad)
fnstcw
aas
popa
xchg
xlat
aaa
and
push
sub
push
cmp
cmp
jmp
retf
retf
or
mov
mov
push
test
stc
cld
and
xchg
jge
or
jle
lods
inc
push
scas
dec
ror
leave
jl
sbb
shl
icebp
rcr
pop
arpl
jp
mul
dec
subps
sub
xchg
cld
aad
in
inc
mov
ja
cmc
je
scas
js
jo
ffreep
shl
fdiv
(bad)
test
pop
xor
out
loopne
ins
out
push
out
cmp
xor
push
cs
xchg
bound
stos
inc
scas
loope
mov
les
dec
push
cmps
fstp
dec
gs
mov
jp
jno
and
lods
test
pop
mov
cmp
mov
add
pusha
mov
arpl
adc
lods
dec
push
fucomi
stc
scas
xchg
les
aas
aam
jle
bsr
jg
aaa
sbb
mov
jge
cmps
mov
jmp
mov
mov
ss
fs
xor
inc
xchg
inc
sub
jg
jecxz
or
mov
jnp
lods
or
sub
inc
or
inc
mov
push
push
scas
jne
stos
cwde
lods
sahf
add
out
fidiv
mov
sub
cdq
std
xchg
ss
cmps
pop
fwait
push
cmp
mov
adc
mov
inc
add
bound
mov
in
xchg
cld
mov
in
mul
add
shr
les
cwde
push
iret
ja
(bad)
jmp
(bad)
ja
mov
add
jmp
nop
mov
test
arpl
push
outs
mov
inc
jno
dec
(bad)
nop
cmp
scas
outs
cli
inc
add
adc
into
mov
sbb
rcl
xor
pop
or
sbb
addr16
mov
sbb
sub
cs
sbb
out
enter
xor
mov
jp
jnp
and
lods
fsubr
xchg
movs
movs
sbb
fisub
dec
mov
and
cs
pop
pop
or
aas
pop
das
in
out
inc
dec
jae
push
push
xor
pop
mov
aad
inc
fcom
sbb
sbb
xchg
xchg
dec
mov
aad
mov
xchg
popf
jmp
or
cmp
retf
dec
je
xchg
inc
xor
sub
fwait
retf
stos
jns
push
push
(bad)
es
fwait
call
adc
movs
cmps
icebp
scas
and
popf
cli
adc
push
and
xlat
mov
fndisi(8087
dec
sub
mov
aas
call
(bad)
mov
movs
inc
nop
push
enter
jo
mov
add
(bad)
jmp
xor
xchg
mov
sbb
jne
push
jns
mov
ja
clc
int3
retf
sub
pop
sbb
fisub
jns
test
cld
jge
outs
test
pop
and
call
sub
iret
mov
adc
xor
or
pop
pop
dec
xor
aam
add
stos
xchg
loop
dec
sbb
sub
sbb
mov
cmp
pop
sbb
mov
repz
fistp
movs
push
aam
sbb
sbb
ss
in
xor
mov
cmp
mov
push
adc
inc
cmp
into
(bad)
out
adc
mov
dec
push
pop
repnz
and
mov
movs
sbb
jmp
outs
cmp
mov
push
into
fsub
lds
test
cmp
jp
aas
imul
leave
test
das
pop
hlt
inc
dec
push
cmp
jge
cmc
(bad)
ror
cmp
aad
pop
xchg
sbb
jecxz
retf
out
jp
pop
inc
sti
out
call
sub
jne
jb
xchg
and
pop
lods
fidiv
cmps
push
add
(bad)
repz
or
push
adc
cld
sbb
out
or
cs
xchg
mov
push
dec
add
xor
inc
sti
lea
movs
sub
jg
dec
repnz
test
jg
int3
shr
test
in
rol
sub
mov
fwait
dec
ja
dec
popf
aaa
mov
adc
xor
push
(bad)
cmp
jae
push
sbb
xor
arpl
mov
adc
or
dec
(bad)
(bad)
mov
movs
inc
xlat
stos
fisub
retf
mov
lods
pop
and
cs
push
jl
aam
sub
pushf
add
ficomp
adc
mov
pop
mov
cmp
cld
cmp
cmp
dec
inc
mov
mov
leave
out
ss
in
stos
sbb
sub
shr
xchg
jp
cmc
outs
pop
cmp
mov
push
jo
aam
cwde
fmul
mov
int
les
test
xlat
or
sbb
adc
jle
push
mov
lea
fwait
ds
mov
mov
mov
or
jns
push
pop
rcr
dec
ins
bound
shr
jmp
fidivr
cwde
adc
add
jb
aaa
retf
mov
dec
repnz
clc
mov
aad
sub
ds
mov
xor
mov
push
add
test
call
enter
xchg
jno
lods
(bad)
sbb
daa
je
mov
jae
ret
cmp
int
cmp
and
lds
mov
or
jle
outs
push
arpl
sbb
sbb
shr
ds
cwde
fwait
jae
adc
sti
cmp
fild
dec
adc
popa
mov
(bad)
lods
(bad)
cli
xor
fmul
mov
das
push
mov
out
mov
cmps
pop
(bad)
(bad)
scas
(bad)
lods
adc
and
out
mov
aas
popf
movs
mov
fiadd
aam
pop
loope
or
dec
inc
stos
daa
cmp
cmp
psubsw
fnstsw
scas
cli
sub
inc
jmp
cmp
jge
mov
neg
clc
add
push
ret
pop
out
fst
(bad)
rol
jb
movs
int3
ficomp
inc
pop
lock
loop
or
dec
dec
push
push
sub
or
and
mov
addr16
sbb
iret
loop
int
add
pop
cli
push
int3
or
add
mov
jo
(bad)
mov
ins
cmp
jecxz
jg
push
pop
in
in
lock
inc
jl
sbb
adc
dec
adc
adc
or
(bad)
mov
jg
sahf
or
pop
push
mov
jno
imul
clc
pusha
or
mov
leave
sbb
(bad)
or
cmp
repnz
jne
ss
add
mov
fild
mov
jg
sub
push
inc
pop
push
sub
jne
fdivr
adc
mov
leave
lods
repnz
adc
mov
sbb
lods
shr
int3
pop
pop
cdq
lock
adc
rcr
add
out
pop
outs
in
mov
clc
inc
cmp
pop
inc
mov
or
cmp
mov
push
cwde
outs
or
loop
or
adc
call
adc
cmps
ret
pushf
into
inc
test
adc
shr
cmp
je
sti
repz
mov
fcomi
xor
fdiv
out
fidivr
xor
jbe
adc
cdq
xor
mov
retf
test
and
jle
mov
xchg
mov
add
xchg
out
shr
xor
neg
mov
aam
push
mov
xchg
mov
cmps
mov
push
dec
pop
inc
fidivr
out
sub
jmp
mov
xor
(bad)
stc
xchg
test
push
xchg
dec
and
ss
(bad)
add
dec
mov
out
stos
and
sbb
and
sbb
push
sbb
push
sbb
jae
stc
mov
fistp
add
fwait
call
int3
pop
or
cmp
in
jbe
(bad)
jecxz
mov
pusha
or
fdivr
sar
frstor
jbe
lds
adc
xor
movs
add
adc
or
xor
jge
mov
jnp
jne
hlt
inc
push
inc
add
int
jecxz
lahf
popf
pop
test
sahf
rcl
dec
sbb
pop
rcl
or
jns
or
aas
mov
test
pop
xor
pop
mov
jle
cmp
movs
push
shl
pop
mov
dec
push
mov
xor
xor
sub
test
scas
arpl
mov
scas
aad
stc
pusha
bound
into
mov
push
and
shl
and
mov
in
rcl
inc
in
stc
xor
mov
mov
sbb
frstor
cmp
and
jb
imul
dec
ret
xchg
out
cwde
xchg
daa
xor
xor
jnp
or
inc
aas
lahf
(bad)
mov
xor
cmp
add
mov
sbb
dec
stos
xor
mov
dec
cmp
in
sub
cmp
imul
jecxz
xlat
sar
pop
lock
push
aaa
mov
out
fiadd
aam
popa
retf
pop
push
xchg
pop
cmp
dec
push
inc
jmp
jb
add
add
popa
push
in
aaa
xchg
xor
inc
aas
xor
dec
in
or
mov
inc
jmp
or
(bad)
push
int3
adc
icebp
mov
or
je
xor
popa
cmp
mov
dec
aam
test
stc
dec
xor
mov
cmc
out
mov
sbb
popa
sub
shl
inc
aam
jb
out
sub
xor
in
aad
mov
fnsave
aad
addr16
mov
mov
ret
in
aad
push
push
pop
das
or
adc
test
into
pop
or
test
cmp
mov
sbb
push
xor
pop
imul
mov
dec
or
pop
ins
stos
lock
das
dec
and
retf
repz
sub
aam
ret
ret
add
and
in
sti
jno
cld
mov
shr
mov
cmp
xchg
nop
sbb
lock
stc
int
inc
je
fild
inc
outs
ror
jmp
test
(bad)
xor
jnp
sub
int3
push
jmp
add
adc
dec
test
dec
out
pushf
lods
and
dec
dec
sti
arpl
arpl
inc
and
test
gs
arpl
lea
ins
mov
test
lahf
jns
push
xchg
xor
aaa
in
cmp
and
sub
add
xor
(bad)
hlt
call
push
outs
hlt
inc
mov
stos
ins
test
adc
(bad)
cmc
cdq
iret
das
inc
sub
dec
fwait
sub
test
or
das
inc
mov
ins
bound
jnp
int3
cmp
dec
into
xor
pop
not
or
mov
pushf
mov
popf
(bad)
push
addr16
mov
xor
mov
jge
mov
(bad)
mov
mov
mov
xchg
sub
pop
mov
ds
fwait
mov
outs
arpl
ror
push
or
sub
test
popf
or
mov
test
out
xor
out
sbb
mov
add
repnz
push
sbb
mov
fs
xchg
fld
jge
push
imul
pop
push
or
or
fiadd
outs
fld
stos
mov
jnp
aad
and
sbb
std
push
push
enter
cmc
cmp
(bad)
frstor
test
dec
or
jbe
popa
xchg
mov
popa
and
cvtpi2ps
dec
int
add
jno
addr16
xlat
xchg
lea
(bad)
nop
hlt
lock
and
inc
jns
pop
(bad)
ds
or
lods
xor
add
cld
push
pop
dec
fidiv
les
jl
adc
push
rol
pop
push
outs
sub
sub
xchg
in
sbb
call
in
fisubr
imul
cli
mov
adc
or
ins
fcomp
(bad)
out
pop
sub
dec
xlat
add
add
pop
mov
add
je
inc
ret
mov
in
add
lds
and
jmp
mov
mov
and
inc
mov
xor
leave
aam
lds
mov
jno
cmp
arpl
jb
mov
push
lods
xchg
mov
pop
jecxz
dec
std
mov
adc
rol
in
icebp
jecxz
add
xchg
mov
jbe
sub
and
mov
test
sahf
ret
mov
or
add
movs
addr16
pusha
xlat
and
inc
and
push
loope
mov
in
sar
fwait
jle
test
and
inc
mov
mov
dec
ja
and
sti
lods
ja
(bad)
cmp
and
jno
nop
push
(bad)
and
xchg
inc
mov
mov
jmp
retf
aam
jl
int3
sub
imul
ja
xor
mov
sub
xchg
pop
daa
sar
gs
leave
lock
aad
mov
mov
cmp
dec
add
movs
inc
pop
ror
cmp
hlt
jns
inc
add
jecxz
or
inc
cmp
loopne
adc
out
push
xchg
sbb
xlat
mov
mov
div
(bad)
in
mov
adc
aam
repnz
fsub
sub
xor
pop
out
ret
inc
sbb
xchg
dec
scas
push
aad
jp
pusha
ficomp
jns
add
aam
ins
popa
jge
jo
mov
arpl
and
in
push
or
push
(bad)
(bad)
or
iret
inc
repnz
cwde
lods
mov
std
xor
sub
popf
mov
in
and
loope
xchg
call
test
inc
cs
or
stos
cmp
arpl
shld
ja
sub
pop
mov
enter
or
fwait
inc
and
hlt
ds
xchg
fnstcw
pop
out
mov
mov
push
cld
enter
fwait
ss
mov
or
repnz
fs
push
out
(bad)
sub
pusha
push
ss
and
xor
imul
stos
(bad)
jge
cmps
popf
outs
retf
lds
jle
imul
enter
pop
out
bnd
dec
pop
popf
add
lods
jecxz
jbe
xor
or
popf
add
inc
inc
retf
xchg
push
sub
stos
ret
mov
cmps
jns
aas
sbb
sar
xor
fisubr
pop
in
and
ss
xor
test
lahf
xlat
pop
out
pusha
mov
sub
adc
inc
inc
mov
popf
and
push
mov
xor
lds
pushf
retf
out
lods
rdtsc
test
mov
rcl
cwde
call
(bad)
push
fs
dec
(bad)
rol
sub
xchg
test
js
ins
jne
add
fisubr
jl
stos
xchg
data16
xor
ss
ficomp
jge
nop
push
mov
and
call
dec
or
xchg
sub
(bad)
mov
pop
mov
das
les
(bad)
arpl
arpl
add
push
push
pusha
add
cmp
scas
je
mov
sbb
and
scas
ins
jl
test
push
out
jg
lods
add
mov
mov
xchg
xor
dec
mov
dec
mov
or
clc
fcomp
pusha
je
jle
pop
inc
jmp
jg
mov
mov
test
and
stos
and
pushw
(bad)
xchg
jno
ret
aas
inc
inc
std
out
lods
dec
int3
push
test
icebp
cmp
repnz
sub
add
test
mov
aas
ret
pop
hlt
jne
cmp
mul
push
xchg
loope
push
sbb
push
xchg
jne
add
bound
adc
(bad)
dec
mov
movs
out
dec
or
adc
retf
push
dec
out
(bad)
push
jp
imul
or
leave
outs
stos
hlt
jbe
mov
push
inc
jns
fsub
inc
rol
xchg
jb
sbb
movs
push
outs
inc
ret
ret
and
out
imul
cdq
mov
jae
sub
(bad)
push
loope
add
mov
in
cwde
or
push
pop
out
or
inc
pop
sub
xlat
mov
jmp
and
sub
xor
xchg
aas
jmp
js
push
inc
aaa
idiv
scas
lods
(bad)
push
repz
sub
in
cmp
mov
pushf
out
mov
mov
xor
inc
jno
adc
pushf
cld
xlat
push
inc
xchg
dec
pop
xchg
std
fs
int
retf
sar
fistp
pop
jge
xor
mul
test
sbb
push
cli
out
popa
faddp
push
pop
test
cmps
inc
push
or
cs
mov
xchg
dec
adc
jmp
(bad)
mov
xchg
sbb
fidiv
mov
pop
inc
sub
outs
or
mov
aad
dec
push
xor
sub
inc
push
add
sbb
adc
test
mov
cwde
int
cmp
xor
jg
and
hlt
add
xchg
sbb
push
xchg
jno
sbb
mov
sbb
push
in
(bad)
ins
pop
pop
imul
aaa
adc
jo
mov
outs
push
lea
push
das
inc
lods
retf
out
add
jl
mov
and
out
cmp
mov
cmp
sub
pop
push
pushf
stc
xchg
sub
cmp
js
out
je
fucompp
push
retf
hlt
mov
or
cld
sbb
pushf
outs
xor
add
loope
and
or
pop
dec
lods
add
cli
jbe
ins
sbb
repnz
pop
mov
movs
cmp
test
adc
sbb
dec
add
out
and
push
movs
gs
movs
push
sbb
mov
fsubr
push
aam
mov
or
cmps
cli
xlat
pop
sbb
push
add
inc
movs
ins
dec
not
fadd
ret
scas
out
or
xchg
pop
test
and
add
pop
xor
mov
ret
push
mul
scas
fninit
and
dec
cwde
aad
mov
mov
(bad)
fcom
jl
jne
jecxz
arpl
cmps
mov
pop
jg
sar
xchg
shl
outs
xor
bound
mov
jmp
sbb
mov
jnp
mov
dec
push
pop
xchg
cmp
cwde
stc
inc
pop
jo
js
dec
ja
mov
jle
mov
pop
retf
test
lds
mov
xor
cmp
sahf
dec
arpl
rol
or
movs
(bad)
cmp
jns
xchg
xor
pop
jnp
mov
ja
mov
sub
dec
je
pop
xor
ja
inc
call
enter
sbb
and
adc
add
ret
dec
or
jo
cmps
xor
cmp
lods
xchg
mov
call
mov
in
add
adc
or
inc
jbe
mov
pop
aam
daa
aam
popf
cmc
lock
add
or
loopne
movs
pop
or
xor
push
cwde
inc
mov
inc
add
jnp
lods
dec
push
mov
cmps
daa
sub
out
(bad)
call
add
mov
cmps
ret
push
and
jns
test
cmc
dec
mov
xchg
adc
cmp
cmp
sub
add
push
sub
pop
icebp
mov
into
push
fs
jo
cmp
mov
xor
sub
mov
sbb
loop
popf
push
test
jb
or
add
lahf
icebp
bnd
cs
ds
push
inc
ins
iret
out
enter
rcl
jbe
mov
fdiv
mov
and
push
in
loopne
aas
dec
xchg
sbb
ss
sbb
jae
mov
add
dec
out
cmps
sub
pushf
rcl
jo
pop
test
inc
call
test
aaa
jge
aaa
cs
add
dec
push
into
mov
pop
pop
dec
fldcw
push
(bad)
shl
das
es
movs
xor
fdiv
int3
daa
movs
jae
push
jno
movs
xor
pop
mov
add
sar
lods
sub
jecxz
repnz
mov
repnz
sub
push
pop
lds
sbb
dec
xor
jp
retf
ja
push
inc
call
int3
inc
outs
sub
dec
push
xchg
call
shr
xor
fnstenv
shl
sbb
gs
adc
mov
adc
or
xor
xor
mov
and
mov
add
inc
sar
and
aam
lods
adc
popa
js
mov
in
in
cmps
rcr
jmp
inc
pop
pop
inc
jge
clc
pusha
cmp
std
pushf
mov
mov
xlat
cmp
sub
mov
sar
and
jp
mov
ins
pusha
shr
in
faddp
leave
mov
pop
sbb
in
and
dec
test
movs
or
cld
(bad)
rcr
sbb
mov
mov
cmps
call
mov
cli
movs
mov
sti
loopne
enter
adc
shl
lahf
push
pop
or
dec
aad
sub
pop
add
ss
gs
and
fadd
loop
pushw
stos
push
xor
xor
ds
cmp
push
jge
repnz
push
xor
sti
pop
imul
pop
adc
or
adc
out
imul
(bad)
jle
and
js
add
xor
lods
pop
jno
imul
or
neg
popa
dec
pop
inc
dec
into
jecxz
adc
push
pop
xchg
cs
jb
ficom
je
nop
mov
mov
(bad)
imul
dec
xchg
lods
or
adc
into
ss
or
jecxz
test
out
add
pop
mov
dec
push
or
mov
dec
dec
stos
dec
addr16
icebp
test
vmovsd
dec
scas
ds
mov
pushf
scas
jnp
jne
push
fidiv
ficomp
shl
cdq
test
add
mov
cmp
jo
lock
jns
cld
or
push
ins
sub
pop
inc
mov
xor
loop
iret
and
pusha
fidiv
xor
bound
ss
jle
jge
xor
dec
dec
jg
test
stos
push
repz
add
jecxz
imul
mov
(bad)
or
push
(bad)
loope
pushf
test
cmp
std
shl
movs
call
or
xchg
dec
jge
dec
call
or
test
repnz
xchg
repnz
adc
sbb
push
data16
xchg
fdivr
loope
mov
mov
(bad)
jle
push
mov
mov
pusha
mov
pop
add
cmp
xchg
jge
pop
cmp
ret
pop
sub
pop
push
jno
ins
add
retf
pop
in
stc
out
sbb
mov
scas
or
lods
ins
push
sbb
retf
push
dec
les
sub
cdq
or
mov
sub
aad
cmp
pop
jge
cmp
mov
pop
(bad)
fldenv
movs
aad
js
outs
xor
sub
pop
les
(bad)
or
mov
repnz
and
cmp
repz
aas
test
sbb
aaa
and
cmp
mov
sub
lea
xlat
pop
pop
adc
mov
popa
dec
xchg
dec
daa
fwait
loopne
xor
add
push
adc
fucomi
stos
stc
retf
mov
out
add
inc
nop
mov
lock
call
push
mov
push
sbb
test
iret
xchg
not
pop
xchg
aad
mov
or
mov
mul
loope
lods
scas
xchg
cs
aas
arpl
rol
into
and
xor
add
test
fbld
pop
add
dec
lods
imul
inc
sub
jnp
mov
sbb
xor
xlat
hlt
xchg
xor
mov
pop
adc
(bad)
push
pop
bound
ss
mov
sti
mov
ds
sub
outs
lock
dec
outs
jnp
jnp
dec
lea
fucomi
fist
movs
pop
out
shr
cmc
mov
mov
lods
pop
xor
(bad)
mov
arpl
fwait
mov
(bad)
pop
adc
pop
das
repnz
aas
(bad)
jp
or
inc
imul
add
fidivr
pop
and
aas
inc
sbb
mov
ja
mov
adc
lods
inc
mov
std
sub
dec
cmp
bnd
pop
pop
mov
loop
xor
out
arpl
push
mov
stos
fsub
repnz
dec
ins
add
aaa
hlt
lock
pop
repnz
aaa
cli
push
lea
dec
mov
das
stos
xor
jb
or
test
repz
pushf
aaa
xlat
ins
mov
dec
sub
mov
xor
mov
add
xchg
mov
dec
stos
xchg
dec
ds
add
ror
push
cmp
fs
push
push
add
daa
push
sub
and
lods
or
xchg
pop
push
pop
lock
adc
in
jbe
inc
cwde
in
fnstsw
and
movs
inc
js
in
cmp
(bad)
loop
and
or
mov
and
inc
fistp
leave
mov
jbe
(bad)
or
aam
xor
sbb
inc
sub
pop
sub
mov
dec
mov
and
aad
movs
pop
in
and
fisub
and
and
add
and
lds
sub
pop
push
inc
sbb
test
out
mov
test
lods
xor
jne
xchg
push
shl
pop
lock
pop
scas
cld
cmps
push
push
in
and
loope
loop
jns
idiv
inc
loope
sub
and
xchg
sbb
pop
or
cdq
push
into
jbe
ret
cli
mov
hlt
push
mov
fwait
xchg
repnz
mov
xor
push
adc
jmp
mov
sbb
arpl
pop
pop
sar
ja
sub
inc
push
outs
outs
dec
jnp
imul
std
push
shl
mov
aas
sbb
(bad)
mov
pop
inc
sbb
dec
loop
mov
pop
or
repnz
out
sub
xor
add
or
lock
and
sbb
inc
xchg
xchg
inc
retf
pop
shl
mov
sbb
jne
stc
inc
lock
push
scas
ins
es
or
hlt
cmp
pop
sub
iret
sahf
outs
adc
(bad)
lods
dec
mov
stos
adc
sbb
js
(bad)
(bad)
xor
sub
sbb
mov
nop
scas
gs
sub
shl
data16
or
jae
shl
retf
push
shl
sbb
lock
push
(bad)
mul
ins
fld
mov
xor
jae
or
and
jecxz
add
stos
jmp
push
jmp
icebp
je
int
and
mov
fisub
xor
mov
out
call
mov
dec
add
inc
push
retf
mov
sub
dec
test
clc
ror
stos
pop
and
add
nop
sub
in
mov
je
mov
mov
and
and
mov
scas
mov
jno
stc
stc
cmp
fiadd
pop
adc
jmp
jne
add
jo
mov
cmp
pop
test
push
bound
outs
xchg
or
inc
push
clc
push
int
scas
test
mov
mul
add
xchg
mov
std
ins
add
mov
push
cmp
pop
or
add
pop
clc
cmp
add
lea
(bad)
outs
ret
ins
cmp
mov
inc
push
jne
and
(bad)
jl
test
in
(bad)
shl
xor
test
cmps
cli
xor
icebp
int3
or
repz
fcom
call
daa
inc
popf
ja
xchg
jns
icebp
cld
push
rcl
repnz
jnp
sbb
in
push
mov
rcl
sub
pop
lahf
inc
gs
push
repz
cmp
ss
adc
mov
push
pop
and
xor
mov
jb
lods
(bad)
pop
push
je
retf
fstp
popf
mov
fldcw
add
mov
sbb
movs
jge
jno
int3
push
xor
outs
ins
fwait
add
pop
sub
in
pop
(bad)
retf
in
jnp
sbb
dec
sub
mov
xchg
xchg
push
addr16
cmp
adc
movs
and
xor
mov
xor
loopne
call
cs
sti
mov
pop
mov
jbe
add
jecxz
je
clc
hlt
mov
aas
jae
and
sub
sub
sub
adc
dec
jno
jp
retf
clc
call
xchg
push
inc
imul
fadd
adc
cmc
xlat
pushf
das
loope
or
add
xor
loope
cmp
int3
ffree
dec
cmp
and
sub
sub
or
mov
fsubr
int3
inc
push
outs
fs
dec
cmp
xchg
lds
out
in
and
repnz
pop
pop
xor
mul
ds
xor
push
pop
mov
lods
mov
leave
add
movs
bound
sub
and
mov
adc
inc
leave
bound
daa
xchg
jne
popa
data16
in
ds
div
out
ror
retf
jle
(bad)
cwde
ds
cwde
lock
stos
xlat
fld
int3
push
iret
push
cmp
adc
push
pop
ins
loope
pop
push
push
fisttp
fadd
sbb
adc
sbb
pop
dec
xor
mov
cld
pop
pop
pop
pop
leave
mov
xchg
mov
xlat
shl
gs
or
arpl
and
dec
pop
xchg
loop
mov
xor
test
add
and
xor
jne
adc
pop
mov
jle
ins
xor
xchg
fiadd
cmp
stos
jne
adc
ds
push
pop
inc
xchg
int
or
bound
lahf
mov
fcomi
cmps
inc
je
jmp
fs
call
fist
mov
sub
mov
xor
mov
xor
jecxz
shl
cmp
lock
pop
cld
test
jle
cmp
in
in
(bad)
popa
mov
cmp
dec
call
and
int
lods
mov
pop
in
jns
cmp
lds
repnz
out
add
mov
xchg
sub
stc
jmp
pop
fwait
push
sbb
inc
mov
fs
push
aaa
cld
dec
pop
sbb
repnz
ret
ins
nop
jle
dec
add
mov
jmp
and
(bad)
hlt
jmp
sub
ds
fidiv
les
enter
inc
sub
std
call
rol
xlat
jae
(bad)
dec
and
jle
lahf
mov
les
stos
int
sbb
ret
pop
loope
inc
mov
mov
and
imul
xchg
loop
sub
or
push
xchg
outs
and
add
lods
push
js
push
loope
and
xchg
xchg
push
ret
dec
push
in
nop
or
shl
dec
push
adc
xor
adc
push
cmp
inc
cwde
sti
sbb
(bad)
sar
movs
dec
xor
cmp
push
das
jp
push
pop
(bad)
icebp
das
and
pusha
fs
es
rol
lods
push
mov
or
or
xchg
inc
or
jno
cwde
pop
int3
fdiv
mov
clc
and
out
aaa
jmp
pushw
mov
je
lea
fdiv
in
fstp
xor
loop
ret
test
sbb
ins
call
mov
ficom
in
sub
stc
addr16
out
ds
mov
push
dec
add
sub
jno
xchg
pusha
pop
mov
dec
into
nop
jmp
push
hlt
es
test
sbb
lea
pop
sub
add
sub
in
sub
cmps
mov
or
pushf
stos
fdivp
cmp
imul
jg
or
pop
shr
xor
repz
push
pop
dec
or
pop
fld
xchg
push
loop
cs
sbb
sub
in
movs
inc
fmul
sub
jb
fstp
pop
mov
out
pop
out
push
lahf
mov
bound
aaa
xchg
add
inc
sub
ins
cmps
popf
sub
test
add
scas
aas
mov
mov
and
adc
popa
sbb
imul
add
test
jmp
push
shl
sub
xchg
icebp
mov
rcl
fs
mov
mov
(bad)
cld
fimul
mov
cmp
inc
push
cmps
call
mov
mov
xchg
cmp
add
pop
adc
addr16
sbb
ds
push
push
fnsave
mov
imul
mov
adc
icebp
aam
in
adc
or
adc
mov
add
ss
xor
xor
jnp
lds
out
(bad)
xor
jb
fmul
in
fmul
call
jno
sub
fidiv
jp
pop
or
or
(bad)
cmps
les
mov
jb
ret
inc
mov
jl
lahf
dec
jmp
xor
outs
ja
push
jecxz
ds
and
aam
mov
repz
push
add
sbb
les
sub
in
or
push
(bad)
fisttp
(bad)
je
popf
or
or
leave
cmp
(bad)
xchg
push
xchg
shl
pusha
sar
int3
inc
aam
arpl
sti
shl
arpl
frstor
ror
or
outs
lods
xchg
mov
dec
movs
pop
cmp
fsub
outs
and
push
jmp
dec
push
retf
or
(bad)
xchg
mov
imul
and
jmp
das
icebp
ins
das
neg
in
lods
mul
cdq
fstp
addr16
(bad)
and
arpl
out
ret
cwde
sub
fcomp
fadd
cmp
jl
and
mov
pop
jmp
in
add
mov
hlt
push
mov
mov
cmps
lea
dec
inc
inc
push
sub
outs
xchg
in
das
cld
in
cmp
in
jle
or
cmp
adc
out
mov
cmovp
pop
jns
out
cmps
and
push
setns
ret
lods
fwait
cdq
ret
jecxz
add
stc
pop
jmp
mov
sub
ins
xchg
adc
fwait
pop
ret
pop
xor
stos
in
jecxz
add
(bad)
jmp
jl
xchg
ret
nop
mov
mov
sti
mov
out
mov
push
and
in
cwde
xchg
idiv
(bad)
push
(bad)
sbb
ss
xchg
dec
jmp
xchg
aad
xor
pop
cmp
sbb
mov
outs
or
movs
fdiv
cmp
retf
les
add
mov
mov
jo
xor
cdq
mov
mov
and
xchg
mov
sbb
shr
lds
mov
dec
mov
shl
shr
ret
outs
pop
dec
cmp
cmp
in
mov
or
jne
ins
jmp
jo
jmp
xchg
or
fsubp
rcr
mov
dec
cmp
pusha
pop
fist
pop
jb
dec
xrelease
sti
mov
into
mov
iret
adc
pop
jns
gs
cmp
dec
adc
and
adc
stos
and
cdq
jge
mov
xor
retf
loop
daa
int3
test
fs
inc
mov
(bad)
add
or
ror
movs
in
sar
sbb
xchg
scas
fyl2x
leave
inc
daa
xchg
jbe
imul
test
ja
or
out
dec
mov
(bad)
fstp
iret
and
sbb
or
cli
neg
shr
pushf
repz
inc
add
dec
fist
adc
jmp
in
int3
push
scas
push
push
clc
or
and
(bad)
mov
loope
mov
mov
in
outs
mov
mov
dec
sub
lds
add
ret
push
retf
adc
test
jb
sahf
jmp
add
add
jp
mov
lea
adc
xlat
inc
jae
pop
cld
loop
imul
push
cmp
pop
aaa
pop
and
adc
mov
mov
mov
cli
ins
mov
pop
loopne
dec
mov
iret
push
cmp
pusha
lods
adc
call
sub
jl
sub
loopne
popf
jns
xor
pop
dec
test
fucompp
loope
inc
mov
hlt
mov
pop
mov
inc
nop
adc
out
movs
jne
iret
test
inc
or
ud1
and
pushf
aad
repnz
mov
pushf
sub
call
ss
mov
in
pop
push
lods
mov
mov
add
iret
mov
push
jnp
test
arpl
loopne
sub
mov
mov
ja
out
(bad)
jmp
mov
into
call
add
arpl
lods
sbb
mov
mov
cwde
mov
frstor
(bad)
push
cmps
mov
retf
dec
ins
lea
push
int
fsub
sbb
aam
out
arpl
sahf
std
jle
mov
mov
enter
sahf
push
ds
xchg
ja
mov
jo
pop
nop
mov
(bad)
in
dec
mov
mov
xor
fidivr
adc
push
iret
(bad)
out
stos
or
popa
or
sub
rdmsr
out
cmp
or
cld
cmp
and
jns
mov
aas
and
bound
mov
sar
pop
out
enter
push
retf
pop
popf
fistp
(bad)
sbb
or
call
fwait
cmp
dec
pop
pop
arpl
mov
jmp
inc
dec
xor
sbb
pop
aam
retf
adc
test
cmp
mov
in
sbb
out
nop
jne
test
test
aam
stos
fld
icebp
push
or
add
xchg
and
xchg
(bad)
mov
test
cmps
mov
push
jne
adc
lahf
lock
mov
aaa
dec
push
cmps
xor
popa
inc
mov
xchg
mov
call
mov
xchg
sahf
mov
cmp
retf
hlt
xlat
test
in
or
sbb
xor
(bad)
loop
mov
gs
mov
inc
jge
sar
pop
xchg
cmps
pop
and
push
dec
loope
out
mov
sbb
les
mov
jmp
ins
sbb
retf
pop
inc
cmps
jg
outs
enter
xchg
mov
xchg
inc
(bad)
dec
mov
sbb
sub
cdq
jb
gs
std
xchg
pop
jg
rcr
sahf
mov
shr
xchg
pusha
lock
daa
dec
pop
inc
xor
mov
inc
mov
ds
inc
pop
and
into
retf
xchg
retf
repnz
pop
sbb
sbb
and
xor
ja
data16
push
add
rcr
test
repz
push
xor
imul
test
xchg
out
mov
fistp
mov
dec
or
fwait
aas
mov
inc
mov
gs
repnz
mov
pop
aaa
cmp
sub
retf
ds
or
mov
aad
inc
xchg
xor
or
sbb
pop
jmp
mov
jo
mov
cmp
xchg
mov
pop
ror
fisttp
pop
test
mov
xchg
jmp
ja
fwait
sub
es
ret
xor
jne
mov
mov
jl
mov
dec
ror
mov
mov
pop
adc
out
mov
nop
cmp
mov
ficomp
dec
aaa
aam
jle
pop
arpl
leave
jl
sub
repnz
pop
push
stos
enter
xchg
(bad)
fmul
and
inc
ins
cmps
hlt
outs
mov
ret
cmc
pushf
retf
imul
repz
or
loop
dec
dec
ror
sbb
and
fstp
test
(bad)
mul
mov
adc
ds
nop
and
push
xchg
rol
ret
xor
inc
xlat
xchg
mov
(bad)
pop
sbb
push
sti
(bad)
ins
adc
mov
adc
loope
fidiv
jne
call
inc
xor
or
xchg
jae
(bad)
push
mov
inc
fstp
dec
jmp
call
popa
(bad)
imul
repnz
test
inc
iret
xor
(bad)
or
push
xchg
inc
cs
or
cmp
add
or
and
xchg
(bad)
fcomp
jae
push
jecxz
in
jmp
stos
icebp
adc
mov
pop
mov
push
or
pop
jae
dec
push
cmc
inc
cmp
push
ror
cmp
in
call
cli
and
jmp
sub
push
in
mov
sar
cmp
sbb
lods
clc
push
jg
mov
mov
lods
scas
jmp
je
push
aam
sub
jnp
retf
mov
fstp
pop
cmp
cmp
in
mov
aad
xor
js
inc
rcr
inc
retf
imul
cli
out
movs
test
sub
scas
jmp
push
xchg
inc
dec
fst
jecxz
cld
fidivr
punpckhdq
fcom
sbb
xor
mov
cld
loopne
adc
mov
inc
icebp
std
xchg
sbb
in
cmp
outs
or
std
jmp
cmp
lahf
push
sub
dec
repz
xchg
add
mov
sub
and
xchg
arpl
mov
aam
lahf
shr
out
jo
pop
cmps
mov
(bad)
mov
repnz
cmps
xchg
popa
test
ret
ficom
mov
neg
mov
xor
xchg
sbb
rcr
push
rol
je
imul
dec
icebp
fcmovb
cwde
inc
dec
jmp
jmp
xchg
push
mov
push
inc
sbb
inc
fnsave
in
mov
inc
(bad)
mov
push
or
das
out
dec
dec
mov
test
mov
in
sbb
leave
sub
lods
adc
sub
std
mov
fdiv
enter
imul
(bad)
xor
dec
adc
data16
push
addr16
mov
push
shr
add
xor
in
xchg
xor
nop
aaa
(bad)
xor
cmp
and
push
sub
mov
(bad)
stc
sub
outs
jl
retf
mov
mov
adc
and
out
aam
pop
and
repnz
imul
push
test
inc
add
and
jge
into
int
xchg
sub
repz
xchg
cmp
data16
ss
xchg
stos
mov
add
dec
pop
fwait
test
jg
pop
(bad)
xor
pop
fcmovnu
cdq
mov
int3
mov
(bad)
xchg
clc
lods
loopne
push
movs
or
retf
inc
xor
sub
pop
scas
mov
ja
gs
push
shl
(bad)
cmp
js
movs
loope
call
xchg
sbb
ds
std
ins
inc
ja
(bad)
dec
movs
xchg
sti
push
popa
sti
push
es
pop
add
mov
mov
xor
ins
(bad)
mov
fimul
inc
xchg
xchg
ror
sbb
mov
aam
std
xchg
int
(bad)
pushf
sbb
pop
rol
loopne
and
jmp
add
lahf
stc
pop
cmp
lods
mov
test
hlt
movs
fadd
mov
arpl
(bad)
icebp
jb
ja
jne
mov
or
push
adc
or
(bad)
rol
push
rcr
xchg
jne
bound
mov
jnp
xor
xchg
dec
out
pop
into
xchg
cmp
imul
data16
int
adc
dec
pop
clc
adc
ret
or
xchg
in
add
add
fist
ror
xchg
pop
sub
push
loop
popa
inc
jge
push
cmp
nop
dec
aad
mov
pusha
(bad)
pop
or
adc
in
ret
sbb
cmp
dec
xchg
jae
mov
movs
xor
imul
push
push
xchg
fs
mov
sub
or
ins
mov
mov
nop
push
loopne
movs
push
cmp
mov
aaa
push
push
add
popf
aad
test
jno
mov
stos
nop
xor
or
mov
sbb
mov
xchg
xchg
push
mov
test
xor
repz
xchg
sbb
jmp
pushf
sub
bound
pusha
loopne
retf
fcom
sub
cmp
sti
imul
xchg
push
mov
cmp
mov
int
les
call
shl
pop
retf
mov
sbb
mov
jl
scas
pusha
mov
push
sub
mov
outs
pop
test
push
fsubr
or
mov
call
sbb
rol
test
or
xchg
retf
enter
loope
push
pop
fstp
mov
jmp
mov
lea
pop
push
enter
cmp
(bad)
adc
push
gs
jne
ss
data16
mov
dec
cmc
xor
push
add
mov
ds
loope
shl
js
fsub
rcr
cld
push
in
sub
lds
mov
push
call
addr16
das
xchg
jo
imul
xor
fisubr
inc
push
xchg
ss
ds
xchg
sub
xlat
fnstcw
cdq
mov
jns
jb
mov
repnz
mov
xlat
cmp
adc
sub
xor
cwde
cmps
into
pop
iret
and
mov
cmp
mov
jp
daa
and
add
push
jl
ja
repnz
scas
adc
test
pop
or
pushf
retf
icebp
fist
icebp
dec
repz
dec
ss
mov
jbe
enter
jecxz
jecxz
fwait
test
fstp
sub
mov
jo
and
sub
retf
inc
jb
enter
push
adc
fisttp
daa
xchg
call
aad
stos
inc
into
ja
or
xor
pop
(bad)
adc
fdivr
cmp
or
add
or
movs
dec
inc
and
and
ds
push
sbb
push
out
ss
fstp
push
push
xor
jbe
dec
(bad)
pusha
jb
lods
in
loop
or
mov
mov
icebp
sbb
or
push
inc
push
into
fistp
int3
pop
pop
add
xchg
jmp
test
arpl
sti
xchg
ficom
jns
dec
cmp
and
das
sbb
mov
cmp
in
(bad)
push
call
imul
inc
dec
mov
retf
and
sub
fwait
das
xchg
push
aad
mov
fimul
push
shl
push
lods
sti
jl
fwait
adc
sub
mov
dec
ja
shr
test
add
mov
in
pop
mov
mov
push
push
imul
jo
je
pop
jg
adc
inc
xchg
mov
(bad)
int3
lods
inc
pop
dec
outs
pop
jmp
mov
jle
stos
dec
mov
pop
push
je
add
stos
push
dec
mov
sub
cli
into
pop
jmp
mov
cmp
ret
data16
cmps
lds
scas
inc
fstp
mov
cmp
lds
arpl
sbb
adc
rcr
dec
test
add
retf
imul
push
adc
cmp
(bad)
lods
lods
inc
scas
jno
or
mov
or
jae
out
dec
int3
xchg
and
(bad)
pop
xlat
mov
sar
and
arpl
or
pop
xchg
lods
(bad)
lds
cmps
xchg
lea
sub
push
ret
out
inc
fdiv
mov
loopne
call
test
jno
mov
and
arpl
cmps
enter
lock
push
popf
or
retf
rol
mov
add
xor
scas
ret
imul
in
(bad)
mov
mov
mov
ds
dec
in
out
pop
sbb
mov
je
jl
lahf
stos
iret
jmp
maxps
jo
call
mov
es
imul
mov
mov
es
stc
stc
dec
cli
pop
sbb
xchg
cmp
jmp
iret
mov
popf
sbb
sbb
pusha
push
mov
mov
cmp
and
nop
in
ret
cli
dec
pop
cmp
add
sahf
xor
xchg
mov
pushf
mov
push
xchg
mov
repz
push
sti
dec
xchg
pop
out
daa
mov
xchg
stos
sub
ds
add
or
ror
fdivr
xor
sbb
xchg
stc
popf
fstp
cs
and
jmp
sbb
icebp
xchg
mov
jp
sub
and
and
test
and
sti
dec
xchg
js
jo
dec
inc
cmps
xchg
jo
mov
jp
push
sbb
repz
leave
mov
ds
xchg
xor
fistp
jl
aaa
(bad)
js
push
mul
sbb
loopne
loope
xchg
inc
and
cmp
add
or
sbb
xchg
imul
mov
and
and
mov
popf
jne
push
mov
je
pop
retf
fisttp
out
out
inc
imul
jle
icebp
loop
cwde
add
mov
(bad)
aam
jb
(bad)
ins
stos
lahf
push
xchg
xchg
jl
sub
les
jle
dec
daa
adc
cmp
and
or
lock
mov
adc
cs
nop
or
(bad)
ret
shl
std
push
cmp
or
or
icebp
iret
jle
adc
inc
push
cld
call
inc
ret
test
cdq
jno
push
retf
and
sub
call
outs
jle
jle
jb
cmp
(bad)
movs
mov
lods
into
imul
xor
fwait
jmp
or
das
fwait
mov
adc
int3
sub
int3
(bad)
shr
in
int3
arpl
and
outs
sub
cmc
fs
mov
sbb
cwde
inc
or
out
loopne
daa
and
inc
sar
add
mov
xchg
ja
ins
lods
test
sub
xor
or
jmp
out
scas
push
(bad)
mov
mov
in
lods
nop
ret
sahf
stc
jne
retf
dec
adc
push
dec
dec
sbb
cld
jmpw
es
lods
cmc
cmp
je
xor
mov
dec
and
sbb
in
cs
cs
and
mov
inc
daa
ins
(bad)
retf
sbb
pop
lahf
stc
hlt
xchg
leave
pop
popa
jp
mov
xlat
push
jmp
jns
hlt
xor
push
push
cdq
adc
ret
sub
dec
pop
fidiv
pop
inc
mov
sahf
push
or
fdiv
adc
in
fcom
not
sub
leave
aam
jp
xchg
fwait
es
sub
arpl
je
retf
fild
fcmovnb
out
pop
push
stos
fisttp
xchg
add
mov
ins
lahf
xchg
es
iret
(bad)
pop
sahf
and
xor
inc
icebp
mov
mov
jne
cmp
or
ins
mov
je
cmp
in
loope
xsaveopt
dec
sub
shr
sub
aam
and
rcl
jge
mov
in
sub
mov
sbb
add
outs
je
dec
xchg
call
lods
xor
inc
inc
popf
add
lods
dec
push
sub
sub
stc
push
mov
aad
test
and
push
scas
pushf
lds
cs
sub
sahf
ds
mov
lea
adc
jnp
aad
lock
xchg
in
(bad)
stos
popf
mov
mov
dec
mov
test
sbb
pusha
not
inc
sbb
mov
push
sar
dec
daa
iret
shl
cmps
jecxz
xor
data16
das
mov
std
jo
push
inc
mov
dec
cs
iret
mov
mov
xchg
sbb
(bad)
mov
dec
cmps
push
cmp
xchg
(bad)
or
div
daa
mov
jge
shl
jg
cs
out
cmps
mov
push
and
inc
xlat
xchg
jne
push
es
das
out
lahf
jbe
stc
push
push
mov
mov
mov
and
mov
push
jns
cmp
hlt
inc
push
push
pop
sub
xor
jecxz
into
jp
jae
inc
fst
inc
pop
mov
inc
(bad)
sbb
inc
jno
ror
dec
out
cmp
xor
in
ds
mov
sub
mov
and
push
push
inc
or
sub
xor
rcl
shr
ret
retf
hlt
loopne
dec
sbb
ins
outs
dec
pushf
std
mov
loope
add
les
xor
mov
inc
inc
push
nop
gs
popa
in
sahf
push
lahf
sbb
push
and
sub
ja
sub
iret
jmp
push
push
fnstcw
pushf
gs
aam
adc
lods
nop
mov
outs
scas
push
sti
test
aam
nop
and
arpl
out
rol
mov
mov
cmps
xor
jnp
mov
popf
push
mov
out
mov
add
sub
mov
ins
clc
addr16
sbb
push
mov
enter
sub
popa
mov
jo
inc
pop
fdivr
cmp
mov
sub
xchg
shl
pushf
inc
push
adc
inc
or
mov
jnp
sub
imul
sbb
loop
retf
mov
iret
data16
sub
inc
and
pop
sar
lahf
inc
outs
adc
pop
aad
jns
pop
jl
pop
inc
or
cmp
clc
lods
(bad)
int3
push
sbb
sub
mov
adc
and
mov
int
cmc
push
push
int3
pushf
ret
xchg
test
xchg
fsub
test
lea
mov
inc
int
clc
push
loopne
jecxz
sti
jmp
jecxz
push
call
std
ds
pop
jae
mov
lahf
das
dec
mov
les
dec
gs
push
f2xm1
mov
add
mov
es
sbb
lahf
mov
ss
mov
xchg
jns
or
jmp
adc
push
lock
sbb
cli
xchg
test
scas
push
adc
mov
retf
std
(bad)
mov
(bad)
cmp
inc
cmp
mov
or
(bad)
aaa
jg
data16
sub
jl
dec
add
mov
mov
imul
jae
retf
imul
dec
repnz
das
aam
mov
ds
retf
ret
enter
int3
cmp
push
cmp
mov
fadd
popf
(bad)
adc
jmp
gs
es
aam
cmps
test
push
nop
pop
shl
pop
out
pop
cmp
xchg
mov
mov
xor
adc
cld
sbb
dec
and
jmp
pop
iret
mov
jp
jl
outs
dec
ret
scas
(bad)
(bad)
out
nop
loop
inc
cmp
add
imul
sub
gs
mov
inc
push
push
adc
fs
pop
jmp
adc
mov
ror
mov
xchg
popa
and
mov
lea
call
and
pop
repnz
repnz
or
pop
lock
or
scas
adc
das
mov
adc
and
mov
fnstsw
cdq
out
jb
fucom
mov
movs
cmp
cmc
ds
jne
pop
and
nop
iret
push
jae
(bad)
xlat
xlat
enter
test
pop
jae
(bad)
fsubp
hlt
(bad)
push
scas
mov
iret
int3
int3
push
pop
push
ins
mov
xor
sbb
push
sub
jnp
mov
rcr
inc
out
mov
jae
cmp
movs
push
xchg
mov
pop
imul
jnp
pop
leave
out
jp
loop
mov
pop
push
pop
pop
lds
pop
fwait
mov
clc
inc
xchg
sbb
sub
jbe
mov
jg
sbb
mov
add
dec
pop
(bad)
jge
jne
mov
and
popa
mov
adc
lock
and
and
sub
leave
sub
out
mov
dec
gs
jle
stc
int
maskmovq
adc
cmp
or
loopne
adc
in
cdq
(bad)
arpl
bound
pusha
fdivr
scas
aaa
xchg
xchg
cmp
je
xor
js
mov
pushf
and
jne
sar
pop
jae
pop
mov
stos
test
call
in
mov
cmp
pop
rol
call
pop
or
push
sub
mov
mov
push
in
out
rcr
in
mov
xchg
shl
sahf
int
loopne
jo
push
inc
stos
test
jg
push
int
cmp
sbb
ins
cmp
sbb
fcom
call
jae
popa
in
fild
jmp
test
jbe
(bad)
shr
sbb
sbb
adc
cmp
ss
sti
jle
mov
pop
jb
(bad)
pop
jge
or
cmp
or
cmp
jmp
pop
or
jnp
dec
sar
arpl
not
and
mov
inc
daa
mov
ret
das
shl
fistp
retf
je
xor
mov
lds
movups
popf
xchg
cmp
mov
cmp
inc
jg
cmp
test
mov
sub
pop
xor
cmps
cdq
jae
push
push
test
jecxz
push
jle
push
aas
movs
or
int
mov
dec
push
or
fimul
lods
pusha
xchg
pop
xor
adc
pop
fucom
and
fcmove
mov
lods
sub
push
lods
outs
call
ss
cmc
test
in
(bad)
hlt
movs
in
pop
jns
xchg
inc
fst
push
nop
lahf
add
dec
test
mov
inc
out
jecxz
mov
add
test
mov
fsubr
jae
pop
dec
retf
xchg
pop
pop
xor
cmc
xor
mov
mov
jmp
ja
add
les
mov
xchg
int3
jmp
(bad)
in
xor
add
pop
cwde
rcr
retf
nop
mov
test
in
mov
fistp
jge
dec
test
or
xor
dec
fistp
popf
pop
xchg
push
jecxz
add
mov
cmps
(bad)
mul
xor
fnstenv
or
fstp
retf
jno
pop
add
int3
mov
xor
adc
adc
mov
mov
aaa
add
dec
push
push
dec
and
or
mov
push
rcr
add
fsubr
mov
xor
sub
ja
cmp
aam
push
out
add
out
rcr
inc
popf
popa
or
aas
push
xchg
dec
in
xor
cmp
sub
or
jle
mov
or
push
mov
jno
mov
mov
pop
push
jl
jmp
stos
cmp
pop
xor
sbb
dec
das
adc
add
les
add
sbb
inc
daa
xor
or
sub
test
jmp
nop
mov
fwait
rcl
xchg
and
xchg
(bad)
pop
pop
(bad)
lahf
sbb
or
jmp
jl
jmp
mov
fadd
(bad)
aam
jle
mov
movs
push
xchg
fisttp
pop
jns
cmc
es
xchg
cld
inc
jmp
jo
std
cmps
inc
or
and
int3
mov
adc
inc
pop
iret
add
test
jnp
sub
jl
xchg
dec
dec
stos
push
data16
gs
repnz
aaa
movs
push
mov
int
dec
fisttp
out
push
ss
add
add
(bad)
xor
mov
push
inc
xchg
and
pusha
call
cwde
dec
cli
mov
push
xchg
xor
mov
lahf
(bad)
shr
js
inc
movs
sub
ds
push
mov
ds
ficom
arpl
jl
mov
cmp
aam
and
jb
dec
imul
mov
jb
xchg
push
fsub
dec
rol
jmp
test
mov
in
stc
pushf
mov
aas
iret
add
out
mov
cmps
mov
pop
js
cli
test
xchg
and
xchg
enter
mov
outs
test
adc
cmps
xchg
xor
popa
cmp
fisub
inc
pop
xchg
dec
mov
cmp
test
sbb
popa
push
inc
popa
enter
add
sub
das
cmovs
mov
add
inc
fmul
add
jmp
mov
inc
cmp
xchg
arpl
jbe
xor
cwde
mov
mov
sbb
out
mov
loopne
int
ja
xor
push
sub
jp
jae
jno
or
shr
ja
daa
cmps
(bad)
hlt
sub
inc
jnp
test
pop
cmc
jnp
inc
arpl
sub
pextrw
pop
mov
sub
cwde
and
outs
mov
add
and
add
lahf
and
rcr
ja
(bad)
jp
sub
push
mul
cmp
sub
adc
sahf
mov
push
loopne
es
add
sub
ja
aaa
inc
mov
mov
hlt
xchg
ja
or
call
icebp
cmp
push
jns
stc
mov
(bad)
pop
icebp
stc
mov
test
jne
jmp
adc
bound
cli
je
mov
sahf
push
mov
imul
jns
pop
add
pop
jl
or
pusha
leave
test
jp
leave
mov
jns
jg
dec
xor
xchg
push
pop
lahf
adc
sti
arpl
loopne
call
xchg
cli
cmps
daa
data16
movs
cmps
or
mov
inc
nop
pop
mov
inc
jecxz
or
js
out
lahf
jmp
adc
mov
mov
fist
cmps
cmps
add
movs
jnp
frstor
and
xor
mov
or
push
push
or
sti
sub
cwde
call
lahf
outs
lods
into
and
aam
inc
cli
test
and
popf
mov
jbe
xor
movs
cdq
bound
jae
dec
les
out
mov
dec
lea
shl
mov
sbb
(bad)
loop
stc
stc
fbld
pop
jg
test
pop
jl
push
cmp
test
mov
ficomp
xchg
jmp
lods
add
xor
jb
aaa
sub
dec
add
or
push
push
jbe
retf
ss
(bad)
mov
vmovd
(bad)
cmps
and
add
mov
inc
shl
test
mov
into
inc
movs
inc
jmp
mov
fdivp
and
stos
jne
fwait
fwait
jge
add
sbb
sbb
sub
ja
sbb
cs
mov
pop
sub
mov
push
jbe
cmp
js
mov
inc
pop
add
dec
lods
(bad)
(bad)
xchg
enter
xchg
push
inc
sbb
push
dec
mov
inc
jecxz
int
or
mov
push
int
cdq
mov
loopne
jne
enter
inc
jns
je
pop
repz
sar
nop
ins
ret
(bad)
jno
mov
mov
push
aam
jl
retf
repnz
mov
int3
sahf
in
jb
or
xchg
aaa
and
mov
xor
cmp
mov
in
push
cdq
mov
mov
sbb
cmp
sub
cmps
add
mov
pop
stos
cli
inc
in
cmp
dec
call
aaa
sbb
iret
scas
out
test
push
inc
cwde
jmp
minps
adc
or
or
fdiv
or
dec
dec
mov
pop
arpl
ins
inc
sub
adc
das
cs
dec
or
mov
dec
in
pushf
inc
js
fistp
cmp
fsub
add
jmp
outs
int
inc
xchg
pop
cmp
fs
mov
inc
ret
dec
pop
cmp
retf
outs
add
jne
jae
das
mov
mov
jecxz
inc
ret
or
int
bound
or
loop
icebp
pushf
mov
jg
jo
dec
repnz
icebp
and
sbb
and
xchg
add
push
loopne
fs
imul
loopne
fwait
fwait
das
ficom
popf
adc
mov
addr16
jnp
sbb
add
stos
inc
imul
xchg
movs
mov
sti
scas
leave
push
neg
test
das
push
fsubr
pop
scas
(bad)
int
xchg
sub
aas
dec
xchg
mov
sti
push
add
retf
jmp
les
retf
push
jp
mov
pop
test
sub
loop
xchg
dec
add
into
cmc
rcr
leave
je
sub
mov
in
mov
sub
inc
faddp
clc
leave
mov
inc
je
sub
and
outs
add
and
ins
pop
dec
sahf
add
int3
mov
inc
ins
mov
push
addr16
retf
mov
in
(bad)
loope
daa
jno
cmp
loopne
sbb
add
mov
jp
cdq
sub
inc
dec
ret
jp
popf
ret
inc
xchg
ret
sub
ficomp
(bad)
addr16
jns
adc
adc
xor
pop
or
sub
mov
ror
retf
(bad)
shr
cwde
fcom
repz
nop
in
in
addr16
adc
cmp
mov
cmp
cdq
push
movs
loope
xor
sub
js
jl
adc
cmp
adc
sub
cmp
mov
ror
sub
dec
jnp
xlat
cs
push
mov
dec
dec
mov
cmp
loop
gs
or
lods
pop
test
jns
int
push
jg
sar
jo
inc
aaa
xor
jb
mov
imul
out
dec
push
add
sbb
inc
cmp
mov
int3
inc
xchg
sub
das
adc
mov
jb
jmp
fnstcw
loop
movs
xor
mov
rcl
sbb
dec
mov
xor
inc
cdq
inc
fmul
loope
sbb
mov
movs
and
sbb
add
mov
mov
nop
sahf
push
rcl
sar
mov
ja
sub
es
sub
shr
xor
adc
jnp
jnp
neg
leave
sub
mov
and
cli
loope
add
push
sub
cmp
in
call
or
dec
outs
icebp
and
loop
dec
(bad)
rol
fwait
jmp
fs
les
jno
pop
daa
xchg
push
mov
mov
push
arpl
ret
in
fimul
sub
add
sub
shr
xabort
jge
and
jnp
mov
lods
dec
jae
or
loopne
sahf
pop
mov
test
and
(bad)
pop
loop
push
pusha
jmp
scas
pop
repnz
push
(bad)
sbb
sbb
inc
add
stos
int
xchg
out
dec
arpl
add
inc
(bad)
in
ins
movs
call
cmp
in
sbb
xchg
xor
push
iret
pop
xchg
cmp
jnp
imul
push
sar
or
inc
aaa
pop
popa
ja
mov
jmp
xchg
push
cwde
pxor
lock
inc
mov
(bad)
and
fs
sbb
cli
out
loop
out
push
jle
push
int
or
jmp
mov
push
in
out
fstp
out
repz
mov
ins
(bad)
xchg
add
dec
ins
sti
fld
pop
div
jle
add
pop
push
inc
and
sub
mov
int
mov
popa
adc
arpl
rcr
push
xor
cmp
jb
mov
cmps
psadbw
test
mov
inc
push
xchg
in
mov
cs
iret
inc
push
aas
push
stc
inc
add
retf
add
mov
inc
loop
aaa
cwde
dec
or
and
mov
add
or
aas
xchg
loope
mov
cmovb
xor
test
cmp
rcl
shl
jno
inc
gs
das
inc
mov
mov
aas
lds
cmc
loopne
jae
inc
call
push
jne
jne
jg
or
xchg
mov
adc
repnz
xchg
fisubr
fwait
retf
ins
popf
add
call
add
test
popa
sub
jne
jno
retf
movs
push
movs
cmps
and
add
aam
pop
sbb
jecxz
ret
xchg
popf
sbb
dec
xchg
iret
gs
xor
jecxz
sub
sub
pop
imul
inc
ds
fistp
dec
retf
xor
mov
cmp
out
inc
ins
imul
xchg
enter
adc
push
push
and
scas
mov
push
mov
or
or
mov
fs
sbb
push
sub
lods
jp
pop
dec
std
les
movs
dec
or
jmp
mov
and
jbe
jne
and
adc
jg
push
movs
and
(bad)
jnp
xor
lds
test
pop
scas
jge
and
mov
je
mov
mov
cs
sbb
jl
cld
es
test
retf
or
scas
add
push
mov
dec
(bad)
enter
aas
test
add
sbb
xor
jo
sbb
sub
movs
inc
loop
sub
xchg
pusha
enter
xchg
push
fs
icebp
test
sbb
ret
stos
out
in
daa
xchg
mov
mov
int
loopne
aam
or
mov
mov
loopne
sbb
or
xor
in
sub
xchg
out
stos
sbb
mov
loopne
std
lds
cs
shl
add
ret
mov
sub
sbb
push
loope
je
movs
cmp
test
cmp
dec
inc
xor
test
jno
sbb
mov
out
jae
pop
leave
push
pushf
pushf
push
imul
rcr
jle
mov
mov
mov
xchg
pop
push
in
mov
add
inc
pusha
fwait
in
pop
jns
dec
add
dec
push
retf
pop
pop
jecxz
cmps
leave
add
jno
pop
das
pop
pop
push
pop
lea
or
shr
jb
ins
pop
pop
and
cmp
and
inc
loope
jb
imul
fisttp
xchg
mov
clc
ss
sub
pop
mov
add
test
jecxz
xor
ret
sbb
lods
jmp
into
pop
(bad)
and
fld
pop
mov
jmp
adc
scas
xor
stc
imul
or
mov
add
inc
scas
push
adc
addr16
aas
popf
mov
push
(bad)
cmp
cdq
not
cmp
mov
xchg
mov
inc
add
push
cmc
fidiv
cmp
fst
(bad)
adc
mov
jb
std
cmc
sbb
sub
inc
push
add
sub
imul
and
pop
movs
jp
mov
test
jo
mov
(bad)
and
inc
shr
cmp
leave
xor
(bad)
fimul
pop
stc
rcr
in
fild
cmc
rcl
sar
in
mov
xchg
cs
jns
sub
aad
push
push
sub
bound
sbb
sub
into
cmp
scas
cwde
push
xchg
enter
out
les
es
jbe
cmp
dec
imul
in
rol
xchg
pop
adc
add
or
(bad)
ffree
adc
daa
mov
adc
mov
jg
in
adc
xor
cmp
arpl
mov
push
inc
adc
sbb
loopne
retf
fwait
shr
aas
call
jecxz
inc
movs
fld
fild
(bad)
xor
xchg
neg
retf
push
mov
cdq
hlt
xor
pushf
mov
push
mov
push
mov
aad
lods
cli
(bad)
jge
inc
add
test
outs
ja
lds
and
in
(bad)
ds
mov
test
scas
scas
sbb
in
add
xchg
sbb
sti
mov
xor
(bad)
or
jecxz
sub
(bad)
aas
or
sbb
loop
push
add
adc
std
stc
dec
psubsb
jmp
lods
ficomp
mov
mov
push
scas
(bad)
in
mov
in
scas
xchg
mov
push
out
mov
(bad)
pop
dec
das
mov
enter
ret
jl
sbb
rcl
pop
push
movs
pop
sub
xchg
mov
leave
pushf
stos
loopne
or
push
call
cli
sub
xchg
and
mov
push
prefetch
les
xchg
icebp
and
inc
jno
(bad)
fdiv
sub
inc
pushf
push
pop
xor
inc
shr
das
ds
inc
js
sbb
mov
rcl
aaa
out
clc
jne
(bad)
mov
mov
push
xchg
popa
jge
out
or
xchg
push
xor
in
jo
push
jg
clc
xlat
adc
mov
jnp
jae
jne
(bad)
in
loopne
xchg
stc
add
arpl
jbe
retf
pop
adc
add
inc
idiv
mov
loope
cmp
mov
xchg
add
pop
xor
cmp
cmp
test
gs
jle
ins
aaa
clc
sbb
loop
cs
lods
adc
into
mov
mov
pop
mov
jecxz
cmp
or
inc
movs
inc
and
or
inc
jle
cmp
repnz
sub
movs
jecxz
cmp
sbb
(bad)
lea
and
mov
int
xor
inc
fwait
jmp
stc
jbe
das
jg
js
xlat
jge
pop
pushf
pop
dec
popf
repnz
stos
adc
mov
jp
xchg
fbstp
mov
pop
jp
dec
out
adc
and
ret
iret
mov
std
sar
pop
dec
xchg
out
in
add
inc
inc
pop
mov
scas
mov
shr
dec
xor
jmp
lods
idiv
push
push
mov
and
fistp
int3
mov
add
clc
in
data16
(bad)
or
push
fld
aam
push
pushf
lods
mov
fisub
xchg
hlt
xchg
adc
push
sbb
adc
fwait
pop
lods
cwde
scas
ins
fnsave
aas
adc
xor
loopne
inc
xor
fist
push
jnp
mov
dec
jae
clc
aad
sub
fldenv
inc
fwait
cmp
test
or
retf
ja
outs
movs
inc
add
cmp
add
and
xchg
sub
add
pop
lods
cmp
ins
aad
cmp
fist
in
dec
jecxz
cli
jns
shl
mov
outs
cmp
xchg
adc
jb
loopne
(bad)
jae
or
xor
or
aad
push
sbb
xlat
or
pop
mov
adc
push
fisubr
push
aaa
retf
dec
fisttp
add
lahf
inc
ins
ret
dec
add
into
ret
pop
or
fmul
sbb
xchg
ret
sti
xchg
pop
popf
jo
leave
addr16
jge
mov
cmp
ds
outs
imul
mov
icebp
jle
push
sub
dec
loope
sbb
jne
clc
jl
out
out
imul
mov
std
push
js
dec
leave
shl
iret
or
xchg
and
movs
mov
jg
pop
fdivr
pop
add
mov
test
push
cmp
jno
xchg
jnp
push
adc
cmp
pop
sub
fisubr
daa
std
xchg
js
scas
shr
xor
inc
jmp
pop
shl
or
aaa
ds
addr16
dec
inc
(bad)
mov
ins
int3
(bad)
mov
stc
mov
clc
sbb
(bad)
cmp
out
loope
(bad)
popa
add
sub
jbe
imul
dec
sti
dec
sbb
(bad)
push
xchg
cwde
loope
jmp
iret
xlat
jmp
push
inc
and
inc
test
scas
push
cmp
es
xor
(bad)
lds
mov
xchg
and
fisttp
dec
and
mov
push
add
mov
sbb
cmp
and
fld
(bad)
pop
out
ret
loope
repz
dec
jl
adc
pop
sbb
loop
(bad)
xor
inc
fist
adc
or
cli
mov
enter
jbe
mov
ret
(bad)
cmp
inc
or
sahf
push
punpcklbw
arpl
(bad)
fwait
sub
enter
gs
push
fnstsw
mov
js
popf
cmp
aaa
std
lods
cmps
inc
jb
mov
das
aaa
arpl
(bad)
movs
std
xor
sbb
dec
mov
pop
inc
addr16
imul
mov
pop
xor
cmp
push
push
add
xor
sbb
mov
repnz
pushf
pop
inc
retf
or
(bad)
into
jmp
sbb
call
ins
popa
sbb
xchg
mov
sbb
and
push
loop
(bad)
cmp
jae
ror
test
loop
sub
inc
dec
in
jecxz
cmp
(bad)
and
push
jno
lock
cmc
push
adc
std
xor
cdq
and
dec
fcmovbe
mov
push
shr
dec
mov
xor
mov
push
jmp
sub
mov
mov
sbb
mov
cdq
(bad)
xor
idiv
adc
popa
jecxz
dec
adc
mov
sahf
sbb
out
ret
jbe
shl
test
leave
cmp
dec
jae
fist
adc
enter
xchg
add
and
lods
aas
and
(bad)
test
js
iret
sub
dec
inc
shl
push
stc
popf
jno
int3
(bad)
add
pop
or
mov
xor
mov
gs
loop
xor
cwde
mov
jmp
mov
ins
ins
mov
dec
aas
xchg
xchg
movs
xchg
call
push
sub
adc
iret
mov
and
ror
outs
pop
push
and
jmp
rcr
push
push
rol
dec
sbb
push
repnz
int
adc
retf
adc
mov
test
push
mov
push
adc
fbld
(bad)
out
js
jle
aaa
shl
ins
mov
fsubr
jae
xchg
or
nop
xor
add
xchg
cmps
and
mov
inc
jl
ds
movs
push
jg
push
(bad)
lea
retf
pop
test
fisubr
loope
fdivr
clc
jmp
jecxz
jae
lahf
(bad)
stc
(bad)
cli
jo
int
jmp
mul
xor
mov
add
jecxz
sbb
cdq
retf
ins
and
test
xchg
inc
dec
lock
std
js
cmp
jg
mov
mov
adc
scas
push
jmp
sub
mov
mov
stc
test
hlt
call
(bad)
dec
ret
push
out
lods
inc
or
cmps
or
mov
aad
loopne
cmp
xchg
pop
sub
mov
jne
int3
ins
push
mov
ficom
pop
cmc
pop
jl
or
fist
ror
jae
mov
not
std
neg
dec
int3
cmc
jb
cli
cmp
movs
inc
or
loope
jmp
fxtract
out
mov
aas
push
sub
lods
imul
fsub
mov
sbb
jnp
pop
loop
cmp
adc
enter
pop
xor
adc
fwait
jg
push
leave
jg
or
mov
sub
sub
inc
repnz
shl
fwait
data16
adc
jmp
cmp
test
outs
je
adc
nop
inc
dec
jecxz
xchg
imul
repz
pushf
sub
pop
sbb
aaa
les
shr
call
frstor
cli
pop
sbb
adc
in
xchg
rol
lods
leave
mov
in
mov
push
adc
test
push
pop
addr16
into
popf
lods
mov
adc
mov
ret
into
mov
sub
sbb
jmp
push
mov
push
call
outs
dec
or
push
add
pop
int
cld
xchg
push
pop
out
outs
fs
mov
lods
mov
movs
(bad)
faddp
xlat
add
dec
and
movs
push
stos
sbb
es
pop
fisubr
(bad)
push
add
aad
and
(bad)
sub
xchg
sbb
retf
movs
jne
xor
jb
or
inc
mov
add
mov
fiadd
and
dec
pop
pushf
lock
jl
adc
fs
fwait
cli
or
inc
adc
cmp
jns
mov
packsswb
into
pop
loopne
xor
jno
xchg
js
fst
inc
cdq
out
mov
ficomp
mov
nop
out
gs
stos
and
repnz
in
rol
pop
pop
fs
push
std
add
sbb
inc
xchg
shl
mov
mov
or
sbb
xchg
(bad)
pop
inc
add
xor
jae
addr16
mov
cdq
faddp
std
mov
jmp
lods
pop
data16
ja
dec
add
jge
or
nop
push
pop
nop
inc
push
jbe
mov
or
(bad)
in
adc
cmp
mov
(bad)
mov
lock
pop
pop
(bad)
mov
stc
push
xor
add
and
xchg
mov
loope
cmp
pop
sub
ret
and
sub
mov
inc
test
std
call
jno
fisub
pop
ror
push
xor
imul
cmp
fiadd
or
mov
not
ins
ins
fisub
out
loop
arpl
scas
aad
call
repz
xor
push
xchg
cmp
sub
mov
sub
xor
out
fbstp
mov
outs
inc
ds
add
popa
dec
pop
jns
mov
cwde
loope
test
stos
cs
test
sbb
call
xor
mov
sub
or
fwait
dec
dec
dec
mov
sub
stc
lods
add
mov
in
adc
addr16
shr
cdq
ret
xor
push
sti
ret
mov
imul
push
mov
push
adc
out
xchg
or
les
add
dec
cmps
push
jecxz
push
inc
jg
xchg
sti
shl
or
adc
jle
js
jne
mov
(bad)
cmps
inc
mov
out
inc
dec
pop
dec
fisub
push
dec
mov
ret
(bad)
xchg
xchg
out
cmps
jmp
mov
test
cmp
pop
sbb
jmp
xchg
std
xchg
and
jns
scas
movs
mov
fdivr
sub
data16
and
loope
clc
(bad)
nop
pop
sub
pop
pop
cwde
jg
adc
xchg
scas
cld
leave
mov
jecxz
xor
jl
call
adc
mov
ret
cld
(bad)
jge
into
or
cmps
les
sbb
stos
jne
and
xlat
sar
loop
sub
rcl
or
mov
fwait
and
outs
ja
push
xor
fisub
and
ret
cmp
arpl
addr16
mov
out
inc
ret
adc
pop
dec
aas
cmp
out
iret
test
stos
adc
lock
cmps
loope
mov
test
push
push
mov
adc
xor
mov
push
pop
(bad)
int
and
sbb
fldcw
std
shl
or
xchg
add
mov
cwde
mov
mov
pusha
sbb
leave
movs
pop
sbb
cmp
or
test
ins
mov
test
mov
stc
popf
mov
retf
aam
sbb
jo
sbb
rol
or
mov
pop
sub
jns
jmp
xchg
les
and
and
push
fist
push
jle
xchg
call
aas
mov
push
je
in
sbb
mov
lods
fistp
adc
jae
stc
or
cmp
pop
aas
jbe
dec
sub
fs
icebp
fwait
cmps
push
pop
inc
sbb
cli
cmp
lahf
loop
out
cmp
std
push
popf
fucomi
inc
push
and
add
arpl
ficomp
div
test
jecxz
push
call
outs
jmp
mov
push
mov
jmp
daa
cli
stos
lods
stc
arpl
in
call
pop
cmp
aas
loopne
mov
arpl
fcom
push
ret
inc
aam
xchg
xchg
adc
ret
xor
div
jmp
mov
out
jne
mov
arpl
push
movs
std
push
sbb
mov
sbb
cdq
sbb
jle
in
jl
dec
idiv
repnz
imul
adc
hlt
add
mov
ror
add
lods
add
std
arpl
sbb
or
movs
out
push
data16
test
pop
sbb
gs
repz
jecxz
popa
and
xchg
pop
add
cs
mov
fdivrp
loope
dec
int
movs
enter
jmp
or
add
call
push
test
vmread
mov
ss
neg
sub
mov
je
mov
(bad)
hlt
aaa
xor
jge
mov
pop
cmp
cmp
sub
mov
push
push
test
mov
outs
retf
cmc
shr
fidivr
jg
and
je
ins
and
mov
cmc
adc
push
pop
in
xchg
sub
adc
shl
add
into
fs
popa
or
pop
inc
cmp
pop
sbb
fld
inc
sub
mov
pop
fs
jo
adc
fisubr
dec
lock
jge
rcl
retf
mov
mov
and
mov
cmps
out
xor
hlt
pushf
mov
mov
or
cdq
add
lock
cwde
lods
mov
jnp
data16
push
std
pop
sar
(bad)
cmps
mov
shl
cmp
out
jno
outs
iret
push
mov
mov
repz
dec
mov
sti
ins
imul
or
sbb
push
loope
cmc
mov
sub
jle
es
add
bound
fidivr
enter
mov
mov
fstp
jb
push
outs
imul
adc
inc
hlt
mov
movs
loopne
mov
mov
cwde
mov
jmp
out
mov
xor
rcl
cld
pop
popf
out
push
(bad)
pop
push
xchg
imul
shr
call
push
das
out
xor
aas
sbb
pop
repz
add
popa
xchg
sar
test
int
loop
loopne
fld
mov
jb
(bad)
cld
adc
xor
pusha
cs
adc
out
ins
inc
mov
cmps
jg
inc
mov
das
js
jmp
mov
call
(bad)
shl
enter
mov
loopne
jne
cmps
jp
jle
test
sbb
repnz
sbb
pop
fs
xlat
mov
mov
inc
jne
loopne
xor
and
iret
scas
sbb
or
jl
mov
aas
or
call
pop
sub
jp
xlat
ficomp
mov
xor
outs
push
scas
repz
(bad)
jmp
retf
xchg
add
xchg
inc
xchg
js
outs
pushf
icebp
inc
or
or
mov
fwait
add
jge
pop
adc
sub
and
xchg
iret
pop
cmps
loope
out
and
add
mov
or
xchg
lods
or
ss
fcomp
inc
call
sbb
mov
sub
ss
push
fistp
js
dec
pusha
lea
popa
arpl
cmp
mov
mov
lods
dec
fldcw
pop
mov
ror
and
dec
mov
push
push
xor
dec
jns
data16
bound
daa
mov
gs
loope
jl
mov
xchg
retf
call
sbb
inc
xchg
outs
movs
stos
(bad)
addr16
outs
pop
adc
stc
retf
call
sub
xchg
mov
mov
call
ds
out
xor
js
ins
movs
sbb
pop
ins
add
mov
mov
xchg
(bad)
fld
bound
cmc
pusha
pop
ret
dec
outs
sbb
outs
jp
xor
or
pop
test
iret
push
and
adc
retf
call
jle
cwde
xchg
adc
pop
mov
or
sbb
retf
jl
into
rcl
adc
imul
loop
lods
inc
add
pop
pop
sti
jb
dec
add
mov
xor
mov
fnstcw
sub
(bad)
xchg
sub
mov
and
mov
dec
push
adc
test
popa
inc
push
and
or
mov
les
aad
aas
jmp
popa
sbb
mov
in
jns
sbb
cmp
mov
lea
adc
enter
add
cdq
out
mov
sub
nop
cli
pushf
cmps
daa
test
add
icebp
pop
sbb
scas
mov
(bad)
pop
pop
cvtpi2ps
pop
pop
shl
aam
mov
out
leave
or
dec
stos
pop
fwait
pop
cmp
sbb
sub
repz
ror
(bad)
jl
mov
xchg
cmps
pop
mov
xor
cmp
adc
fcomp
cwde
jo
push
loope
adc
iret
sti
sub
mov
xchg
fbstp
test
xchg
xor
pop
cmc
cmp
jno
mov
adc
outs
push
out
lock
dec
dec
dec
pushf
std
outs
adc
out
(bad)
in
or
ret
fisttp
dec
or
idiv
cmp
sub
mov
push
xor
jno
cld
sub
mov
dec
popf
jo
pop
(bad)
lods
xchg
sub
jae
rol
cmc
inc
stos
int
rol
mov
sbb
push
into
cmp
icebp
add
push
lahf
rcr
pop
dec
jbe
test
test
inc
mov
and
add
pop
sub
add
cmps
dec
pop
fisubr
jae
or
and
loope
dec
jecxz
xor
test
inc
fldcw
mov
pop
cmps
stos
push
xchg
cmp
mov
mov
retf
dec
hlt
in
mov
mov
mov
sti
in
aaa
fistp
movs
jge
sub
mov
(bad)
lods
dec
fdiv
nop
pop
(bad)
adc
push
cwde
or
test
nop
and
mov
shr
push
xchg
xor
mov
int3
inc
out
adc
mov
xor
popf
jge
pop
jo
xor
push
xor
dec
(bad)
xlat
call
data16
xor
out
dec
in
call
sub
jle
not
fisubr
inc
pop
(bad)
xchg
mov
xchg
mov
movs
jp
pop
shl
mov
lods
or
test
mov
loop
cdq
mov
rol
aaa
jge
loope
add
aaa
sbb
les
fisubr
repz
jnp
icebp
retf
outs
sbb
ffreep
sar
xlat
and
sbb
fptan
outs
mov
sub
leave
sbb
xor
push
mov
sbb
mov
ds
repnz
jmp
pop
inc
mov
mov
inc
(bad)
jp
(bad)
adc
call
mov
and
mov
in
cld
add
and
sbb
or
push
inc
mov
into
inc
imul
loop
mov
push
push
fdivp
fld1
test
neg
jns
mov
sub
sub
ins
cdq
cs
fcmovnb
jp
lods
mov
sub
add
adc
outs
sub
(bad)
call
sub
outs
cmp
(bad)
fcmove
psubb
dec
xor
or
add
div
movs
and
sar
fs
addr16
mov
clc
leave
pop
jmp
scas
nop
adc
xchg
rol
adc
and
or
out
add
pop
retf
jnp
lahf
jmp
sti
jmp
pop
adc
leave
mov
into
add
cmp
sbb
mov
in
gs
xchg
cmps
test
mov
xor
push
or
dec
sbb
imul
paddq
or
icebp
mov
test
and
cwde
outs
dec
xor
test
ja
xchg
push
fnstenv
aaa
mov
xchg
sub
outs
mov
ficom
mov
sbb
jg
jge
daa
dec
int
add
loop
xor
dec
jno
xchg
stc
inc
jbe
(bad)
repz
dec
ins
(bad)
and
and
lods
ret
cmc
cmp
jmp
push
lock
aas
mov
(bad)
mov
bound
pop
outs
test
jp
ffree
rcr
in
xchg
xor
cmp
or
cmp
push
dec
mov
xchg
stos
pop
xor
push
push
fld
jno
add
xchg
leave
and
repz
sub
aam
inc
fdiv
push
mov
call
inc
jp
int3
mov
inc
cmp
push
fbstp
data16
ins
imul
push
in
push
add
mov
cmps
and
mov
push
lock
mov
sub
test
jmp
mov
repz
movs
imul
pop
in
mov
nop
xchg
sub
loope
cmp
fld
and
adc
mov
out
push
adc
enter
popw
inc
jmp
fwait
dec
mov
addr16
inc
sbb
out
lods
pop
pop
inc
jmp
cwde
hlt
push
lea
(bad)
xor
cmps
fbstp
xor
mov
scas
sahf
fs
or
call
jmp
and
fild
adc
xchg
dec
dec
jecxz
sub
add
hlt
xor
fdiv
dec
cmp
clc
push
push
mov
push
mov
imul
mov
mov
jae
retf
push
movs
sub
sub
repnz
sbb
jb
mov
xor
cmp
scas
nop
xchg
pusha
ficom
mov
neg
repnz
rol
cmc
cwde
ficomp
shl
or
das
pop
xor
mov
push
psubsw
(bad)
stos
mov
retf
mov
pop
inc
test
sahf
mov
leave
cwde
xor
xchg
iret
sbb
pusha
mov
cwde
dec
xchg
dec
xor
iret
test
and
mov
adc
out
hlt
das
dec
xor
sub
pop
fwait
ds
push
and
adc
(bad)
sahf
es
lock
fwait
push
dec
and
call
mov
jmp
mov
ins
shr
dec
add
mov
push
dec
mov
je
add
popa
push
cmp
stos
lock
aaa
imul
sbb
jne
mov
call
fisttp
push
inc
cli
inc
mov
or
lds
mov
mov
ins
and
add
popf
mov
in
mul
push
mov
stc
inc
out
mov
ret
mov
push
icebp
cmp
mov
pop
or
aas
sbb
cmp
loope
push
xor
hlt
(bad)
cdq
sti
mov
xor
dec
in
loope
adc
pop
nop
inc
pop
and
cmps
sub
mov
stos
adc
inc
xlat
aam
dec
push
pop
vmread
inc
in
sbb
add
repz
dec
push
outs
and
retf
xchg
fxch
(bad)
xchg
mov
mov
into
adc
pop
sbb
dec
arpl
push
xchg
jne
or
(bad)
mov
or
sub
sub
push
or
jmp
clc
xor
ins
and
xor
sub
enter
fs
lods
mov
inc
enter
lds
ins
stos
iret
inc
xor
sbb
mov
mov
loopne
dec
dec
rcr
ja
and
inc
retf
jge
push
mov
or
sbb
fbld
dec
popf
sub
popa
add
mov
test
addr16
and
and
pop
fidivr
cmp
das
jmp
fsubr
jb
pop
lods
aam
and
push
xor
cmp
add
pop
jne
pop
sub
or
mov
cmp
dec
fisttp
movs
pop
icebp
adc
in
mov
ins
xor
pop
aas
mov
mov
popa
(bad)
or
sub
jns
sti
pop
and
gs
sub
lock
int3
mov
int
inc
out
cmp
mov
add
mov
jne
fsub
push
pop
mov
mov
cmp
push
daa
pop
pop
(bad)
pusha
pop
rol
aad
(bad)
xchg
mov
xor
cmp
dec
cmp
enter
call
gs
(bad)
clc
mov
and
test
leave
dec
iret
xchg
jg
xchg
jnp
loopne
mov
cli
push
movs
pcmpeqw
repz
xchg
or
cmps
cmp
pop
in
aas
dec
in
inc
mov
adc
lock
sub
je
jae
es
xor
dec
(bad)
adc
cld
aam
cli
xchg
icebp
ret
sub
add
mov
pushf
outs
ret
jp
add
and
push
int
mov
mov
out
mov
adc
mov
mov
mov
fisub
dec
das
pusha
adc
push
jne
or
mov
or
mov
mov
hlt
dec
add
in
add
adc
mov
xchg
dec
frstor
test
xchg
into
in
cs
mov
les
hlt
dec
(bad)
repz
mov
call
fwait
je
cmps
aaa
cli
scas
adc
mov
dec
jg
cmp
div
hlt
push
cli
xchg
loope
pop
cmp
pop
(bad)
int
into
imul
dec
and
dec
cwde
nop
mov
jne
imul
push
xor
test
mov
jnp
push
sub
pusha
lahf
xlat
pop
xor
xchg
push
jmp
dec
in
dec
jp
push
mov
xchg
pop
xchg
sbb
cwde
mov
fidiv
shl
ins
jle
jmp
loope
sub
(bad)
aam
lods
fidivr
ror
je
mov
mov
xor
jne
cmps
mov
add
mov
int3
(bad)
retf
jnp
sbb
rcr
test
call
xchg
cmp
ror
ins
outs
icebp
pop
neg
add
inc
adc
add
(bad)
xchg
(bad)
or
(bad)
pop
fisub
or
mov
and
je
pop
cmp
jle
adc
jns
sbb
movs
icebp
sbb
test
test
lea
or
add
cdq
(bad)
pushf
xchg
dec
pop
sub
xor
pop
cdq
das
pop
xchg
xlat
mov
das
int3
add
fwait
push
jbe
and
push
pop
fild
cli
cwde
dec
imul
mov
pop
std
cli
icebp
stos
jg
(bad)
cld
push
mov
pop
mov
inc
mov
pop
js
xor
xor
mov
cmp
cmc
add
fcmovb
pop
jb
sti
xchg
sub
(bad)
movs
sbb
mov
lods
shr
jmp
jnp
popf
jg
push
imul
adc
and
mov
mov
(bad)
seta
mov
jg
mov
loopne
je
xchg
test
hlt
jae
mov
xchg
cmp
mov
sub
repz
and
cmp
push
js
xor
lea
add
xchg
push
lds
ds
outs
jo
movs
xor
idiv
je
outs
mov
lea
xor
int
retf
mov
ss
mov
jg
xchg
ret
pop
sar
push
in
push
ficomp
int3
ins
xor
xor
push
jp
ss
cmp
inc
outs
sub
mov
cmps
inc
and
mov
push
mov
cmc
loop
iret
and
dec
jbe
vpsubusw
leave
fadd
and
test
js
sbb
and
push
mov
frstor
cmp
cwde
pop
jae
je
jl
clc
icebp
mov
data16
shl
mov
(bad)
shr
mov
adc
scas
mov
loopne
int
push
jmp
sbb
(bad)
loope
mov
mov
adc
call
stc
je
sbb
mov
out
adc
sti
sub
ja
in
call
xchg
ja
mov
popf
mov
or
pop
sub
adc
rcl
push
sahf
mov
in
not
imul
ss
or
xchg
es
imul
push
dec
or
jg
adc
mov
cmps
and
les
xchg
out
mov
repz
fwait
movs
mov
scas
shr
xchg
cs
inc
fidiv
cmp
aam
inc
and
or
jmp
(bad)
sbb
xor
sbb
inc
fnstcw
mov
jno
retf
or
mov
not
mov
mov
sub
cmps
and
imul
xchg
aad
lods
out
and
mov
ins
iret
jns
push
dec
mov
nop
mov
rcl
out
sbb
and
(bad)
repz
ret
daa
aas
scas
mov
mov
in
inc
fcomp
mov
loopne
out
scas
pop
cmp
lods
jmp
dec
adc
bound
sub
xor
imul
retfw
jle
test
mov
jecxz
xor
jo
ret
in
dec
lock
adc
bound
dec
xor
pop
jnp
add
pop
xor
push
test
lds
sub
jne
rol
outs
mov
shl
add
xor
xor
aad
inc
ds
xchg
cmp
inc
jae
(bad)
push
mov
leave
mov
inc
xchg
push
stos
test
xor
cdq
xchg
imul
fstp
ds
mov
inc
add
adc
xor
cmp
popf
cs
inc
nop
es
mov
or
out
xlat
sub
jo
aaa
xchg
fwait
mov
mov
xchg
mov
neg
or
ds
jmp
out
xor
dec
add
sbb
sti
mov
popa
in
jno
or
imul
loop
sbb
pop
nop
add
(bad)
cmc
outs
in
push
inc
cmp
jmp
pop
data16
xchg
stos
jmp
cmp
xor
bound
fdiv
stc
int3
mov
out
sbb
and
loop
inc
jle
lock
xchg
gs
push
mov
js
sahf
test
aas
call
inc
ja
rcr
dec
jae
rcl
bound
push
mov
lahf
pop
push
aas
es
mov
dec
mov
fcom
push
mov
sbb
aam
ret
xor
ficom
dec
sub
adc
mov
jl
(bad)
fld
out
mov
adc
jl
out
popf
xor
inc
jnp
test
out
cli
mov
push
arpl
js
adc
xchg
popa
dec
pop
and
rcl
aas
sbb
sbb
fs
push
mov
ret
add
lods
retf
mov
(bad)
shl
add
out
sub
ret
hlt
mov
stos
push
lahf
add
mov
push
data16
in
lock
inc
js
retf
lods
push
(bad)
call
cmp
(bad)
out
mov
or
ss
mul
shl
out
imul
push
jns
pop
and
dec
add
pop
push
adc
mov
sahf
mov
(bad)
retf
cmp
mov
pop
ror
sbb
leave
es
sub
mov
lods
dec
mov
imul
push
int3
and
aad
lahf
ror
out
fistp
cmc
xchg
push
and
xchg
and
push
jecxz
and
adc
stc
aaa
aam
or
pop
dec
jno
jmp
dec
loopne
jecxz
inc
ins
popf
fxch
iret
fistp
cwde
lea
add
adc
pop
mov
scas
mov
xor
pop
xor
jns
mov
(bad)
in
mov
out
js
xchg
jle
push
ret
clc
jo
das
scas
pop
cli
mov
inc
daa
sub
inc
outs
mov
loope
mov
fild
xor
pop
gs
pusha
fs
js
jmp
inc
jmp
in
jo
and
add
sbb
ret
xor
xchg
mov
mov
add
mov
call
sbb
rcr
xchg
jnp
stc
mov
pop
repz
inc
jp
lock
add
fisubr
jbe
dec
(bad)
sub
imul
test
int
and
xor
mov
and
and
xor
mov
mul
jl
outs
jge
aam
mov
pushf
inc
test
push
mov
xlat
int
jbe
cwde
ins
xchg
mov
inc
cmp
mov
push
pop
mov
jmp
cmp
mov
mov
adc
retf
popf
push
inc
(bad)
mov
mov
cmps
sbb
jbe
jo
daa
or
cs
pop
cmps
mov
out
jp
mov
mov
inc
paddusb
pop
fwait
mov
out
pop
cmps
xchg
xchg
(bad)
lods
mov
or
mov
add
test
jbe
push
and
or
mov
sti
dec
popa
movs
sub
jnp
pop
(bad)
pushf
mov
adc
rcr
jo
jns
cmp
retf
ins
in
scas
jmp
std
jae
adc
rol
mov
sub
stos
push
into
and
out
cmp
div
sbb
add
loope
cmp
xlat
(bad)
and
and
inc
jne
add
inc
mov
and
(bad)
ja
and
adc
cmp
lds
test
stos
retf
mov
push
lds
(bad)
stos
xchg
fs
mov
adc
(bad)
aas
ins
aas
xor
fadd
arpl
pusha
cmc
or
and
jne
dec
mov
fld
cmp
out
popf
imul
adc
(bad)
lahf
gs
mov
ds
enter
retf
mov
test
add
movs
retf
call
pushf
sar
es
leave
bound
and
dec
mov
scas
outs
mov
loope
popf
lock
inc
cmp
push
imul
fnstsw
in
mov
popa
pop
fadd
cdq
push
cmp
mov
inc
aam
test
aaa
icebp
sahf
das
xor
stos
sub
mov
mov
jmp
enter
les
mov
xor
fidiv
mov
(bad)
loope
loope
pop
mov
fisttp
ds
inc
sbb
push
xor
ret
push
pushf
cmp
aaa
daa
mov
lds
lds
jo
fnstsw
dec
sti
cwde
cmp
mov
scas
mov
sbb
stos
sbb
sub
dec
fs
call
ret
lods
inc
add
mov
mov
mov
push
iret
cmc
sbb
mov
pop
(bad)
sub
test
cli
jns
imul
jo
or
sbb
pusha
fdiv
xchg
mov
mov
cmp
cmp
pusha
mov
cli
icebp
jge
mov
mov
imul
dec
adc
or
(bad)
pop
xor
mov
sti
movnti
push
fstp
and
aas
xor
cmc
jns
mov
push
movs
pop
push
in
test
cmps
cmp
inc
jmp
sub
push
into
loopne
cwde
in
xchg
fistp
loop
xor
retf
test
int3
xlat
dec
mov
push
mov
or
add
stc
arpl
pop
sti
xchg
lea
call
sub
push
xor
js
push
shl
cli
cdq
add
out
retf
lock
mov
jmp
inc
sbb
div
xor
jne
shl
jl
scas
inc
ins
popf
cmps
xchg
xlat
sar
jecxz
sbb
inc
push
xor
adc
mov
retf
loop
leave
movs
in
mov
enter
pop
ins
repz
add
jbe
mov
or
inc
adc
mov
xlat
inc
ret
arpl
xor
icebp
sub
sbb
mov
mov
das
test
ror
xchg
inc
loope
xchg
(bad)
jp
xchg
dec
shl
sub
icebp
fwait
mov
adc
dec
stos
mov
or
sub
mov
(bad)
sub
mov
mov
icebp
add
cld
push
push
sub
lea
jecxz
mov
fisubr
in
or
and
adc
(bad)
fwait
gs
(bad)
cld
ins
sbb
jnp
cmp
fwait
add
jecxz
cmp
into
pop
sub
ja
sbb
add
pop
jns
pusha
mov
push
test
inc
xor
stos
mov
lods
(bad)
sub
in
cdq
mov
sahf
sbb
push
mov
inc
xor
or
fldpi
xor
in
in
jnp
xchg
loop
out
dec
aam
and
inc
int
ja
jb
nop
xchg
and
test
jg
mov
gs
js
push
xor
loope
jp
dec
cmp
out
(bad)
ss
sbb
call
sub
xchg
adc
sub
mov
(bad)
dec
scas
out
sahf
lock
xchg
(bad)
out
fxch
retf
ja
xor
mov
cmps
dec
test
pusha
lods
jl
clc
push
bound
mov
or
pop
mov
cmps
add
shl
cmp
sub
(bad)
sti
pop
mov
shl
xor
iret
push
and
(bad)
sbb
jl
sbb
add
dec
cdq
push
inc
or
aaa
dec
stc
and
fs
add
leave
push
or
icebp
test
cli
adc
loop
xchg
int3
cwde
test
adc
adc
pop
(bad)
aas
xchg
inc
daa
sbb
push
jne
adc
pop
sbb
ret
cmc
in
loop
mov
retf
push
pcmpgtb
push
adc
fistp
es
es
xchg
enter
adc
mov
andnps
outs
aas
pop
jl
mov
enter
sub
out
pop
mov
inc
es
cmps
and
outs
add
and
adc
cdq
xchg
scas
adc
jp
not
jne
enter
lods
into
fistp
or
inc
dec
cmps
inc
test
or
mov
cmp
mov
(bad)
and
out
movs
add
popa
test
sub
lds
ret
mov
outs
jl
test
jmp
clc
xchg
lods
cmc
test
mov
ins
mov
adc
push
cli
hlt
sti
push
pusha
(bad)
in
mov
sub
pop
push
push
or
mov
mov
pop
mov
sub
inc
pusha
mov
pushf
scas
sub
jecxz
add
js
xor
push
push
add
and
aad
(bad)
ins
sub
out
stos
sbb
dec
(bad)
dec
mov
push
iret
test
mov
sbb
fisttp
pop
retf
cwde
pop
push
out
popf
mov
loope
outs
xchg
mov
sbb
call
fild
lock
mov
addr16
adc
or
pop
fidivr
push
cmps
xor
cmp
cmp
fsubrp
mov
pop
jecxz
sub
mov
or
rol
dec
or
sbb
into
outs
adc
xor
lahf
ins
pop
jo
mov
je
pop
jge
and
std
ror
lock
enter
sahf
jno
mov
sbb
push
lock
loopne
nop
clc
repnz
ds
mov
jo
pop
int3
push
jns
popa
rcl
pusha
xor
jg
jecxz
xor
or
lahf
(bad)
fdivr
jb
adc
stc
out
std
or
ja
(bad)
fcom
shr
out
pusha
jbe
mov
jbe
push
push
pop
lahf
movs
jl
mov
push
xchg
popa
outs
cmp
mov
pop
xor
adc
ret
xor
jle
cmps
xor
clc
push
leave
sti
fyl2x
add
pop
je
sahf
aad
clc
neg
es
int3
js
pop
lock
dec
out
inc
jmp
cmps
pop
ja
lea
jbe
mov
mov
mov
js
loope
inc
inc
pop
out
sbb
jl
loopne
cld
test
push
jno
jmp
push
push
imul
repz
dec
enter
jbe
cmc
pop
xchg
push
adc
iret
jmp
mov
and
pop
mov
mov
leave
push
pop
cld
inc
sbb
adc
add
push
sub
jo
inc
mov
(bad)
mov
call
pusha
mov
ret
lea
adc
(bad)
push
retf
jg
sbb
sub
fisub
adc
xor
in
fcomp
lea
nop
mov
mov
jns
sbb
cwde
sub
sub
mov
pop
ret
popa
inc
in
iret
hlt
mov
xor
ret
mov
jo
xor
push
mov
sbb
add
ficom
and
icebp
and
xor
ins
sub
push
xchg
(bad)
xor
cmp
ret
hlt
xor
retf
sub
or
jno
jb
mov
mov
aaa
shl
movs
aam
ror
xor
mov
mov
mov
scas
ds
mov
push
pushf
out
xchg
mov
mov
dec
retf
aas
adc
mov
xor
rcr
popa
mov
fs
xchg
lods
(bad)
test
and
rol
inc
add
xchg
and
push
aas
jae
adc
and
ja
jmp
mov
fimul
clc
cwde
outs
aam
sbb
xchg
stc
cwde
out
movs
or
sbb
sub
imul
fsubr
xor
movs
das
fst
add
leave
fsubr
pop
retf
scas
mov
ret
outs
mov
pop
inc
out
lds
xor
jbe
test
cmps
outs
xchg
cmps
out
dec
enter
xchg
and
mov
dec
out
or
clc
mov
mov
fcomp
addr16
and
fcomip
cmp
jmp
dec
jg
xor
jge
cmp
adc
aas
es
repz
inc
loopne
xor
xchg
sbb
and
cmp
out
bound
outs
add
leave
frstor
and
out
mov
xor
jp
push
sahf
jbe
adc
push
loop
dec
in
inc
adc
das
(bad)
inc
or
jmp
pop
fcom
add
(bad)
pop
adc
les
mov
jnp
ret
dec
jb
jmp
mov
daa
in
adc
mov
mov
adc
nop
pop
dec
clc
add
nop
icebp
mov
or
cs
mov
inc
fld
aas
and
jl
sbb
mov
sub
mov
ds
into
lahf
ds
dec
dec
mov
aad
cld
push
xor
xchg
out
out
mov
jecxz
mov
cwde
dec
ins
mov
std
imul
push
outs
test
lods
pop
pop
xor
push
push
stos
mov
add
in
repnz
xchg
mov
xor
pop
scas
bound
cmc
jle
fdivr
dec
dec
sbb
push
gs
lods
dec
cmp
mov
test
cs
cmp
push
clc
cs
mov
xchg
jo
jbe
ss
push
scas
out
push
in
mov
xor
push
mov
outs
and
xchg
mov
or
cmp
jnp
jle
fsubrp
mov
push
loop
sti
pop
aaa
shl
xor
add
in
out
ret
mov
dec
outs
push
in
test
outs
inc
jge
mov
loopne
scas
jle
outs
aam
adc
iret
or
cmc
sbb
stos
scas
jae
and
sti
jno
mov
icebp
pop
push
xchg
retf
ror
add
adc
mov
sbb
imul
stos
or
stos
adc
sub
add
push
leave
and
pop
out
push
inc
iret
pop
fist
mov
fnstcw
sbb
call
dec
fimul
adc
sub
xor
out
jmp
loope
push
cmps
daa
jo
mov
xchg
bound
enter
ins
rcl
push
pushf
push
add
aas
and
daa
or
xchg
mov
jle
inc
fwait
loop
push
ins
jb
test
(bad)
xchg
inc
sar
int3
jp
mov
jmp
adc
xchg
mov
push
daa
xchg
push
inc
xor
xor
(bad)
and
sar
mov
mov
push
adc
shl
imul
xchg
mov
out
addr16
jae
adc
jnp
ds
jo
mov
cmp
call
dec
adc
and
push
outs
pop
mov
add
mov
add
or
in
push
and
sar
xchg
es
iret
dec
jmp
popf
(bad)
test
push
add
stc
add
push
jecxz
fimul
or
in
cld
pop
cmp
sar
dec
ror
mov
sub
pop
psrlq
sti
cmp
jge
std
fisttp
xchg
add
mov
adc
bnd
or
popf
sahf
retf
adc
loopne
test
cmps
mov
mov
mov
jae
jecxz
push
lods
out
xlat
loope
les
loope
lock
jno
mov
xchg
lds
xchg
adc
adc
mov
xor
repz
(bad)
movs
pop
shl
shr
sbb
repnz
pop
push
jmp
xor
idiv
retf
clc
jg
into
loop
clc
add
or
fwait
or
adc
(bad)
dec
dec
das
lods
mov
mov
idiv
rcl
pop
xchg
jecxz
pop
pop
cvtdq2ps
in
enter
xchg
add
jmp
out
jbe
arpl
ja
call
cmp
fiadd
lea
pop
aaa
inc
not
cmp
sub
lock
inc
push
in
cmp
int3
imul
add
cs
outs
cmp
cmp
lock
fsub
xor
cmp
adc
retf
dec
fcomp
(bad)
cli
push
addr16
or
push
aad
fwait
sahf
cmp
cmp
test
ins
push
cmps
or
cmp
popa
test
shr
dec
mov
adc
test
in
xlat
cmp
inc
fisttp
ss
adc
xchg
test
jns
push
ret
inc
idiv
push
test
mov
lea
and
xor
fisubr
sahf
cmp
rcr
fucomip
cmp
and
mov
cmps
xor
pop
aam
pop
sti
cmp
call
jmp
mov
push
out
and
pop
das
pop
out
loop
push
adc
jg
stc
and
das
xchg
je
pop
daa
jl
popa
out
push
mov
fmul
push
xchg
aad
push
out
push
(bad)
retf
xchg
add
push
or
sub
test
pop
inc
dec
jmp
lock
or
pop
sub
mov
sbb
sbb
ins
sar
mov
stos
push
mov
leave
in
mov
movs
stos
scas
call
mov
fmul
sbb
jle
fcom
test
push
and
and
daa
pop
retf
inc
mov
sar
mov
clc
mov
fnstcw
push
adc
jmp
push
cmps
jbe
js
ror
ins
xor
call
push
adc
and
out
mov
cs
shr
lahf
retf
das
jo
and
add
cmc
add
int3
inc
xor
shr
movs
mov
inc
sub
outs
movs
add
test
jecxz
jg
cmp
mov
or
lods
and
ret
cld
mov
call
ds
mov
mov
and
push
cli
out
or
xlat
shl
xor
jmp
push
or
adc
push
(bad)
sbb
push
movs
ins
mov
add
outs
mov
jbe
adc
mov
sub
dec
or
mov
inc
sub
fnsave
cmp
lock
loopne
and
add
ins
jmp
xor
repnz
(bad)
mov
sar
popa
test
into
mov
push
xchg
xor
inc
dec
push
shr
sti
mov
in
mov
aas
inc
(bad)
mov
aas
fstp
mov
ins
in
mov
or
retf
xchg
xchg
xor
shr
(bad)
pmulhuw
dec
xor
sar
xlat
mov
mov
mov
fs
sbb
retf
jge
adc
push
stos
add
addr16
sub
bound
sub
stos
push
inc
cmc
sbb
lock
sub
sbb
int3
mul
(bad)
nop
sti
aaa
xchg
cmp
mov
rcr
xor
add
jae
ins
push
add
aaa
add
add
loop
aam
mov
popa
push
stos
xor
enter
push
jae
push
jno
adc
fs
sbb
dec
pushf
xor
dec
pop
cdq
pop
stc
adc
cmps
or
mov
ror
mov
xor
in
jge
cmps
sub
mov
add
mov
mov
fdivr
cli
mov
mov
fmul
inc
and
jl
retf
std
movs
cld
in
xchg
adc
fcmove
mov
dec
xor
in
xor
loopne
inc
loope
push
aas
mov
xchg
jp
add
(bad)
jmp
and
adc
sbb
jecxz
mov
bound
(bad)
fld
ins
push
dec
shl
out
in
dec
pop
push
dec
push
fist
and
jne
(bad)
ret
push
cmp
sub
out
into
(bad)
or
xchg
adc
loope
and
and
icebp
and
loop
(bad)
dec
stos
ds
ins
jae
sbb
inc
(bad)
cmp
sbb
(bad)
in
out
push
int3
add
dec
or
mov
pop
daa
push
call
dec
dec
lea
mov
outs
pop
jnp
sub
adc
ins
adc
std
or
ins
mov
mov
mov
mov
sub
xor
repnz
fdivr
outs
cdq
cmp
mov
arpl
in
cmp
adc
mov
mov
je
popf
xchg
dec
leave
fcom
scas
loope
aam
pop
jp
inc
fimul
stc
sbb
sub
jne
movs
ss
xor
loopne
push
dec
popa
xor
into
xor
xor
cmp
out
adc
cmps
mov
out
push
ins
xlat
outs
jge
or
dec
data16
aas
sub
xchg
shr
mov
jg
fidivr
jno
ins
repz
das
into
sub
xchg
cmp
rcr
aam
mov
lock
popf
sbb
aad
lods
jle
dec
sub
repz
test
pop
inc
test
jmp
fnstcw
ja
push
dec
push
dec
lds
and
not
aad
loope
into
dec
and
mov
or
push
pop
ja
mov
(bad)
dec
sbb
xor
jp
mov
test
push
mov
inc
fxch
leave
(bad)
xchg
xor
inc
adc
jb
jo
loopne
ret
movs
pop
push
inc
retf
mov
loope
cli
pop
pop
jae
and
cmp
stc
or
repz
xor
hlt
sub
and
aas
jle
mov
popa
pop
mov
adc
and
xor
mov
test
mov
pop
xchg
xor
leave
mov
ror
out
sub
sbb
add
and
pop
pop
dec
(bad)
pop
movs
into
daa
xchg
arpl
cmp
mov
dec
mov
ins
aam
mov
mov
pop
cli
aaa
sub
je
xor
gs
xchg
cdq
mov
shr
int
imul
call
stos
inc
mov
pop
jmp
xchg
xor
in
xchg
mov
clc
cmp
adc
fdivr
jo
repz
sbb
adc
pop
push
mov
nop
pop
jge
fisub
dec
and
nop
jb
setae
inc
test
sub
ret
fiadd
daa
mov
add
std
and
xchg
(bad)
nop
dec
inc
push
(bad)
push
mov
sbb
sbb
jno
out
fmul
nop
das
and
popf
jnp
fadd
(bad)
addr16
cmp
and
retf
xchg
rol
push
cwde
daa
cs
test
(bad)
inc
data16
(bad)
ds
scas
cwde
ror
mov
inc
ret
sub
jp
out
pop
mov
rcr
jl
mov
jmp
(bad)
mov
ss
fisttp
mov
(bad)
std
mov
or
retf
push
int3
mov
push
mov
fnsave
lea
jecxz
lds
adc
rcr
pop
lods
test
mov
(bad)
out
xchg
lods
imul
movs
cmp
xchg
push
or
jo
neg
popa
test
retf
mov
push
pusha
icebp
mov
jno
outs
cmp
nop
mov
xchg
mov
cli
out
dec
clc
arpl
jecxz
sbb
jecxz
push
jg
push
stc
sub
adc
mov
sbb
dec
push
jne
cmp
es
mov
dec
dec
sti
or
push
fisttp
mov
das
mov
gs
in
mov
cmp
repz
jl
mov
jecxz
add
add
out
scas
adc
mov
fldcw
adc
shr
pop
mov
push
fs
inc
repz
adc
lods
sbb
imul
mov
shl
xor
das
ins
or
sub
loope
outs
xor
js
add
movs
outs
sbb
fdivrp
cs
scas
push
loop
xchg
push
test
lea
cmp
dec
mov
scas
cmps
imul
nop
dec
stc
pusha
mov
xor
fs
or
add
in
and
ror
xor
adc
mov
int3
aas
imul
inc
jae
add
out
push
mov
jb
jmp
jmp
and
mov
ins
adc
pusha
in
push
nop
stc
cdq
xor
jno
add
and
mov
cmp
repz
add
mov
and
mov
sub
loope
lea
jns
add
inc
mov
aam
fstp
sbb
repnz
out
mov
cmp
int3
jnp
inc
xchg
lods
mul
addr16
jp
das
addr16
imul
lea
lock
cwde
shl
sbb
push
stc
frstor
sbb
push
mov
pop
push
inc
(bad)
call
movs
and
xlat
repz
clc
fidiv
mov
movs
inc
mov
sar
lds
add
jbe
pop
aam
hlt
dec
xor
stos
mov
pop
mov
sub
std
push
jne
push
cld
pop
push
fisubr
call
xchg
daa
inc
repz
and
(bad)
dec
or
call
shl
ret
push
loop
movs
movs
jp
add
inc
cli
and
inc
mov
je
pop
push
inc
jl
push
sbb
adc
jae
out
push
push
icebp
xor
lods
dec
fld
ja
sub
outs
outs
mov
xchg
sub
(bad)
push
jns
and
sub
ja
fs
pop
pusha
pop
or
inc
dec
cmps
lods
push
iret
and
cmp
adc
std
popa
cmp
pop
jecxz
xor
(bad)
hlt
sbb
sbb
or
dec
fdiv
mov
js
inc
dec
xchg
cmp
pop
xchg
adc
mov
and
fcom
pop
aaa
stc
mov
dec
sysenter
ror
cmc
scas
lds
mov
fxch
or
dec
enter
mov
sbb
add
jae
or
xchg
fisub
call
outs
xchg
ss
push
add
pop
cmp
lahf
mov
mov
mov
sahf
inc
ins
jp
daa
stc
sbb
ret
fidivr
fild
loop
push
pop
mov
gs
bound
mov
jecxz
mov
inc
movs
xchg
imul
jl
and
lods
xlat
and
add
daa
bound
and
cwde
fld
xor
pop
jb
call
xchg
cmp
pusha
jne
ja
dec
cld
lahf
dec
cmp
es
sbb
inc
mov
lds
add
mov
dec
push
stos
inc
mov
sub
shl
(bad)
push
scas
mov
movs
hlt
dec
fs
mov
mov
pop
or
mov
lds
add
repnz
dec
dec
and
jp
dec
add
jmp
push
call
shl
pop
xchg
mov
xchg
and
jns
jl
in
cmps
out
mov
call
shl
sub
sti
push
mov
mov
push
jnp
sbb
pusha
lods
sub
push
sti
call
add
adc
xor
cmp
pop
stos
ror
jmp
fs
into
lods
dec
ins
inc
push
and
mov
xor
jno
jnp
dec
int3
nop
mov
cld
xor
jge
and
fisubr
sbb
test
cmc
adc
add
dec
arpl
push
sbb
lds
scas
pop
xchg
iret
jp
mov
nop
jno
and
shr
mov
add
stos
xchg
outs
fs
(bad)
sti
ins
jb
out
mov
je
push
int
int
cs
test
imul
cmp
cmps
arpl
xchg
mov
lods
mov
ret
or
and
ja
jns
sub
fild
dec
mov
mov
mov
pop
(bad)
jne
inc
fwait
mov
movs
lods
jae
jge
cwde
ror
in
mov
jl
push
or
xor
jg
in
data16
nop
inc
pop
adc
push
jae
in
(bad)
push
test
loop
rol
mov
in
xchg
test
out
aam
jle
inc
test
push
xchg
fcom
push
stc
dec
sti
cmc
adc
leave
xchg
fldcw
cmp
push
dec
fisubr
mov
sbb
fmulp
scas
lods
imul
mov
loope
and
mov
es
out
mov
fistp
and
sub
mov
ja
imul
aam
cmp
mov
bound
shl
push
push
xchg
sbb
leave
pop
(bad)
faddp
and
(bad)
rol
mov
popf
ficomp
mov
xor
push
stc
leave
fidivr
push
push
cmps
in
fiadd
outs
retf
daa
fs
adc
and
cmps
add
jne
cmp
dec
es
rcr
(bad)
cld
out
in
mov
retf
(bad)
sbb
ror
xchg
mov
push
jo
pushf
(bad)
(bad)
xlat
jmp
out
loop
retf
test
out
int3
lds
jl
adc
hlt
test
dec
push
mov
jno
fdiv
jle
arpl
out
repnz
xor
xor
clc
dec
jbe
fild
adc
xor
lods
aam
add
pusha
adc
push
sbb
mov
fild
push
pop
repnz
xor
test
rol
bound
or
add
dec
mov
push
cmp
ror
mov
jae
jg
ret
adc
push
mov
in
js
or
nop
inc
or
xchg
and
lods
shr
cmp
pop
sbb
fcmovbe
push
es
jl
xor
pop
mov
sar
int3
push
mov
stos
cmp
lahf
and
dec
js
(bad)
lock
sbb
rcr
fild
dec
fcomp
add
aas
fstp
inc
(bad)
mov
mov
sar
call
cld
mov
pop
cmp
mov
cmp
inc
mov
xor
nop
test
std
test
popf
inc
add
xadd
jg
leave
mov
sbb
and
cmps
fs
test
xor
out
xor
and
xor
movs
dec
mov
loope
in
dec
mov
jno
mov
push
xor
in
jae
xchg
das
mov
jecxz
mov
call
jno
(bad)
out
stos
mov
sub
push
mov
xchg
popa
or
pop
and
jg
and
inc
jbe
add
mov
shl
adc
xor
sbb
fs
(bad)
hlt
rcr
push
dec
cmp
adc
dec
or
(bad)
fs
retf
retf
repz
retf
jmp
jmp
adc
ins
ins
dec
test
and
ret
mov
(bad)
mov
je
jp
xchg
jmp
inc
sub
sbb
out
test
cmp
sahf
jmp
mov
adc
jnp
aas
ja
pop
out
inc
addr16
popa
sbb
in
jg
xlat
adc
xor
retf
adc
jg
(bad)
or
pop
push
push
pop
das
xlat
jo
bound
rol
retf
pavgw
jne
cld
test
push
jbe
nop
or
lahf
scas
adc
ret
(bad)
hlt
lds
ss
ret
mov
les
mov
pusha
inc
cli
movs
mov
nop
jle
daa
dec
add
clc
sub
cmp
call
jno
mov
push
add
hlt
inc
xchg
loope
inc
pop
stos
outs
fld
stos
fidiv
imul
js
mov
push
mov
loop
popa
jo
imul
cmp
adc
es
xor
psrlw
mov
test
mov
(bad)
dec
std
loopne
test
push
fnstsw
xor
(bad)
loopne
pushf
xchg
ficom
sub
and
pop
movs
push
and
push
sbb
loope
cmps
(bad)
cwde
xchg
pop
mov
xchg
(bad)
inc
inc
mov
dec
iret
dec
ins
pop
aas
(bad)
sahf
or
mov
pushf
lods
test
xor
mov
cmp
imul
mov
rcl
push
mov
or
pop
cmp
adc
sub
or
(bad)
jo
pop
pop
scas
pop
or
sbb
adc
sub
inc
fmul
or
popf
mov
mov
ins
icebp
stos
and
imul
or
sub
fsub
jb
and
mov
icebp
push
in
xchg
loope
dec
dec
pop
or
repz
jmp
mov
add
mov
ja
outs
fisub
imul
mov
cmps
inc
mov
in
sbb
arpl
jle
or
and
rcl
add
or
mov
std
ss
jbe
fimul
xchg
mov
add
jmp
mov
mov
or
and
jb
daa
neg
sbb
jns
push
imul
fs
jl
gs
push
and
pop
add
mov
leave
inc
ds
cld
xor
add
push
clc
(bad)
inc
pop
dec
or
ds
xchg
rcl
push
mov
mov
mov
adc
out
fimul
cs
and
mov
inc
sub
lock
fld
mov
lods
daa
add
fldenv
jae
jbe
add
jmp
jl
pop
mov
jg
std
and
test
lods
xor
sub
les
lds
test
xchg
and
sub
imul
push
push
xchg
mov
int
imul
dec
loope
and
push
loopne
fistp
ss
push
push
push
dec
xchg
and
inc
in
in
and
or
and
dec
int3
or
sbb
and
retf
lock
cli
addr16
cwde
pop
xchg
lea
stos
or
ins
and
xchg
call
cmps
fcmove
and
jmp
fild
jnp
inc
scas
sti
aam
or
xor
cmc
xor
jae
or
in
mov
xchg
xchg
daa
std
cmps
jp
das
push
bound
shl
outs
push
sub
js
dec
imul
div
fcmovu
mov
mov
imul
leave
sbb
or
cmps
xchg
stos
xchg
out
mov
sbb
popf
xor
leave
ss
call
inc
out
mov
sbb
lock
dec
or
out
data16
pop
mov
cmp
cdq
popf
pop
add
sub
cmp
stos
cmc
inc
push
inc
daa
dec
or
movs
scas
and
lock
pop
mov
out
(bad)
jmp
mov
fiadd
ret
loop
adc
sub
xchg
out
test
push
fisttp
add
adc
sub
mov
mov
jnp
or
inc
push
imul
xor
js
aam
mov
mov
fst
push
movs
push
sub
push
cmc
jle
std
les
jmp
aaa
stos
mov
jnp
imul
ins
test
jmp
outs
lods
call
jp
mov
vmovaps
out
aad
(bad)
fdivr
or
daa
dec
xchg
pop
addr16
fild
or
sbb
jecxz
ins
mov
jecxz
sbb
jl
xor
adc
cmps
cli
jp
cmp
iret
jmp
(bad)
nop
aaa
push
add
jno
add
sbb
idiv
jp
sub
int3
repz
jle
fnstsw
scas
inc
stc
sti
jmp
int3
jne
aam
call
mov
push
adc
mov
not
jg
clc
popf
push
mov
xchg
fisttp
jmp
adc
(bad)
add
(bad)
dec
cmps
and
(bad)
mov
(bad)
jmp
int3
jmp
lods
inc
jns
jmp
pop
jg
cmc
xor
and
mov
mov
xchg
xchg
out
jle
std
arpl
pop
(bad)
push
jo
mov
xor
jb
xchg
ret
sub
jge
dec
xchg
xbegin
inc
inc
lea
adc
add
cwde
adc
cmp
jecxz
cmp
leave
into
js
loope
fmulp
xchg
bnd
ds
out
cld
je
and
sahf
mov
jge
dec
xchg
mov
test
jmp
cmp
cmp
jl
into
lds
fsubr
and
mov
out
movs
cld
lods
jmp
out
fbstp
(bad)
hlt
mov
xchg
fwait
sbb
or
cmp
test
or
cdq
fisttp
xchg
and
dec
lods
mov
ror
enter
mov
dec
adc
xor
adc
dec
push
sbb
add
add
sub
scas
mov
xchg
out
xlat
adc
jecxz
jmp
push
sub
add
push
mov
and
cmp
bound
popf
dec
or
pop
mov
cld
jmp
(bad)
jp
test
jns
lea
je
retf
mov
in
les
test
sub
pop
sbb
add
scas
call
cmps
jecxz
dec
mov
pop
or
inc
mov
sbb
aad
cmp
or
cs
dec
fimul
fucomi
cmp
in
sub
inc
int3
fimul
mov
daa
dec
xchg
loop
daa
mov
dec
or
or
lods
nop
cmp
gs
mov
or
stc
sbb
mov
hlt
icebp
or
fxch
cwde
inc
xlat
jno
and
movs
cmc
jae
xor
mov
aaa
sahf
addr16
mov
or
into
mov
fld
jnp
icebp
jne
repnz
sbb
dec
inc
stos
pop
push
sbb
jecxz
mov
jmp
test
sub
shl
(bad)
mov
adc
call
or
mov
out
fcmove
fistp
lods
xchg
into
lds
push
addr16
mov
cmp
es
mov
(bad)
int
ror
test
jmp
add
es
(bad)
lahf
jp
jo
sub
int
push
mov
std
mov
cmp
and
adc
in
cmp
jae
pop
repnz
sub
lods
push
sbb
in
jp
mov
cld
(bad)
pop
ficom
mul
xchg
jb
mov
cdq
add
cmp
repnz
inc
dec
mov
aam
adc
mov
adc
jg
mov
mov
xchg
sub
nop
or
popf
add
push
iret
inc
pop
push
and
mov
loopne
mov
mov
cmp
or
pop
jl
adc
and
mov
dec
mov
cld
mov
mov
cmps
lahf
mov
call
push
jle
int3
adc
pop
js
call
add
das
ins
imul
push
sbb
in
loope
xor
mov
dec
add
inc
ds
shl
jg
loop
pop
sbb
fwait
lock
aaa
push
outs
jecxz
mov
sbb
mov
cmp
movs
mov
dec
dec
dec
push
mov
into
sahf
call
push
pop
or
gs
ins
cdq
xchg
mov
pop
xchg
add
inc
lods
popa
enter
cli
xchg
xor
mov
test
cdq
inc
sub
sbb
fild
shl
dec
mov
leave
gs
mov
mov
cmp
cmp
inc
cli
popf
pop
inc
(bad)
xlat
adc
xchg
mov
cli
mov
cwde
xchg
jl
xchg
out
int3
push
addr16
sub
sub
fst
int
stos
test
rcl
clc
aam
cmp
pop
pop
xchg
aam
movs
and
repz
push
in
stos
int3
cli
xchg
fadd
pop
xchg
inc
shr
sbb
jne
sbb
in
jbe
out
and
push
aas
fnstsw
fcom
dec
and
pop
jmp
mov
mov
loope
ins
repz
fstp
lock
jp
add
pcmpeqw
xchg
pop
adc
out
add
jne
aam
inc
sub
scas
xchg
sub
jnp
int
(bad)
std
xchg
dec
push
jb
test
sbb
mov
repnz
loop
mov
cdq
and
jge
lahf
out
mov
retfw
mov
dec
inc
and
mov
dec
sub
sbb
addr16
movs
fwait
and
mov
jle
xchg
adc
fmul
out
jns
enter
shl
mov
fld
jmp
mov
pop
push
jle
shl
les
dec
test
add
jbe
gs
(bad)
fwait
cmps
dec
and
cs
rol
scas
shl
or
inc
scas
test
lahf
mov
and
mov
dec
mov
(bad)
cs
xchg
xchg
mov
aaa
std
aas
ins
data16
sub
jle
aaa
mov
xchg
data16
iret
adc
arpl
mov
das
bound
popf
das
and
xlat
rep
push
jb
inc
pusha
pop
adc
xchg
pop
test
jo
movs
(bad)
xor
mov
pop
lock
movs
fbstp
or
fidiv
aas
into
adc
xchg
ds
jecxz
std
cli
add
rcl
aad
sbb
scas
sub
outs
push
add
bound
xchg
pop
idiv
push
out
into
cdq
or
test
shr
adc
and
pop
jbe
inc
shr
pop
inc
enter
push
out
xlat
xchg
sub
or
cmp
movs
push
(bad)
dec
sti
dec
mov
mov
and
clc
mov
rcr
clc
cdq
call
dec
push
call
stc
jbe
jmp
js
push
sub
push
xchg
ret
mov
inc
loop
bound
lahf
mov
sahf
mov
add
popa
xor
(bad)
xor
repnz
push
dec
or
ret
nop
repnz
and
fist
push
(bad)
mov
stc
mov
mov
cmp
aas
dec
pop
mov
jae
pop
jno
sbb
(bad)
sbb
dec
pop
push
fnstsw
xchg
adc
ds
into
aaa
jp
cmc
mov
daa
out
jmp
nop
dec
mov
lds
data16
movs
inc
and
and
or
jnp
dec
fcom
pop
in
stos
stos
add
mov
nop
jnp
stos
hlt
out
lea
lds
retf
hlt
or
shl
cmp
xor
popf
ds
xchg
xchg
loop
mov
xchg
lock
pusha
lods
xchg
xchg
mov
dec
fnsave
rol
repnz
sahf
and
ds
stc
aas
outs
idiv
dec
or
(bad)
ins
jecxz
call
stc
inc
fld
lods
cwde
call
xchg
sub
(bad)
push
or
lods
loop
inc
ficomp
inc
test
or
pop
shl
aas
hlt
adc
fld
rol
(bad)
or
dec
data16
out
push
call
aam
sbb
pop
or
cs
xor
sub
fnstsw
popa
outs
push
aaa
test
push
aam
aas
imul
imul
aas
lock
call
jnp
stos
test
enter
mov
(bad)
cmp
ds
xchg
shl
cmp
push
push
cdq
jp
cmps
jmp
dec
in
test
adc
cmp
(bad)
xor
pop
xor
test
jmp
push
mov
mov
add
push
shl
mov
and
pop
(bad)
pop
or
sbb
scas
test
xchg
lods
xchg
xchg
icebp
and
sub
pop
pop
add
pop
arpl
mov
jmp
pushf
out
loope
xchg
in
jmp
mov
iret
xor
add
pop
pop
adc
fimul
mov
movs
fmul
outs
jae
inc
jns
or
fbstp
xor
ret
call
outs
xor
adc
ds
cli
test
icebp
cmp
or
stos
sub
lods
xor
add
xor
xor
loop
push
not
inc
push
ret
adc
(bad)
xchg
stos
std
dec
fldenv
mov
jne
jp
sbb
adc
jns
aaa
loop
add
adc
ret
outs
mov
sub
mov
hlt
or
push
jno
or
fstp
mov
cwde
cmp
ror
dec
cmp
clc
je
mov
sub
push
mov
mov
shl
push
in
repz
pushf
enter
or
scas
les
jnp
sbb
outs
(bad)
jge
pop
pop
retf
mov
mov
test
lock
dec
(bad)
mov
sbb
mov
fdiv
push
popa
outs
dec
ins
shr
leave
retf
popf
cmp
stc
fdiv
das
stos
xor
(bad)
sar
jnp
aad
bound
cmp
ins
sti
fld
push
jbe
push
rcr
sub
inc
and
rcl
imul
mov
mov
jno
mov
jnp
scas
loope
pop
push
and
addr16
and
inc
dec
mov
les
sub
push
sar
xchg
xor
mov
aas
push
fdivr
pop
icebp
sub
js
xchg
xchg
idiv
push
mov
mov
and
or
xor
addr16
iret
les
ss
cmp
hlt
add
jno
pop
jne
xchg
inc
mov
fnsave
inc
mov
adc
jb
out
cmp
stos
fstp
lahf
xor
lods
addr16
shl
mov
pop
test
clc
xchg
jmp
pop
div
adc
jnp
inc
push
cmp
inc
aam
in
fiadd
(bad)
or
sub
test
sbb
push
fs
and
mov
maskmovq
neg
shr
cmp
mul
out
cmp
cmp
(bad)
mov
sti
lock
xor
pop
jne
ins
xor
scas
ror
sbb
xor
jnp
or
dec
lahf
call
fwait
inc
inc
pop
push
push
mov
mov
xchg
test
fwait
cli
lahf
adc
push
mov
cmp
popa
cmc
ficom
dec
fsave
adc
data16
dec
sahf
pop
fs
arpl
xor
imul
dec
push
jmp
sbb
imul
imul
lods
push
outs
les
sar
push
fisttp
mov
xchg
fmul
pop
lea
jno
mov
dec
ror
sbb
jne
push
int3
jecxz
pusha
or
loop
xchg
mov
dec
call
mov
push
and
push
jne
rcr
pop
mov
(bad)
inc
fdivp
std
mov
mov
in
sbb
cmp
lahf
int3
loop
xlat
ror
sahf
xchg
cmp
repz
cmp
shr
(bad)
out
sub
loope
stos
loop
adc
hlt
mov
outs
shr
and
punpcklwd
push
adc
popf
sbb
adc
push
pop
test
cmp
sti
dec
jle
mov
ret
push
mov
test
pop
add
mov
xor
leave
mov
pop
mov
in
jecxz
or
inc
les
mov
enter
cwde
jne
mov
or
xor
pushf
inc
mov
push
sti
scas
lea
mov
cmp
jmp
bound
sub
popf
mov
and
aam
ss
jnp
xchg
sar
or
push
emms
push
les
ins
or
and
cmps
imul
jg
sahf
aam
and
sbb
adc
sub
arpl
rol
test
imul
jp
test
arpl
push
std
imul
stc
xor
lea
lods
addr16
jle
cmc
cmp
xor
stos
adc
xor
inc
xor
xchg
and
xchg
add
xor
repnz
mov
mov
jae
stc
add
fsubr
add
adc
pop
mov
cmps
gs
hlt
sbb
mov
bound
test
pop
scas
sahf
mov
loope
sbb
ja
cmps
lea
inc
mov
ret
jmp
mov
xchg
pop
imul
pop
mov
mov
sub
or
sub
ror
imul
mov
sti
sbb
inc
pop
adc
jae
out
inc
or
ficomp
out
mov
(bad)
push
inc
adc
sub
pop
xchg
jne
sub
ss
sbb
popa
pusha
sub
out
cmp
mov
call
cmp
xchg
fisttp
int3
(bad)
in
lea
arpl
cmps
ja
pop
mov
in
fiadd
cmp
outs
bound
lds
out
sbb
jp
in
(bad)
jp
xchg
xchg
loopne
or
(bad)
xor
dec
sub
ja
fcomp
xchg
pop
pop
xchg
into
out
das
shr
ffree
lock
test
cmp
jmp
sbb
jmp
mov
pop
ins
imul
and
movs
retf
call
inc
scas
cli
pop
adc
not
loope
aad
pop
sub
sub
sub
sbb
inc
sbb
add
out
cmp
fwait
xor
clc
and
ins
mov
cwde
cld
xchg
aam
das
inc
sub
retf
jae
dec
xchg
jo
jg
(bad)
xor
in
mov
sbb
mov
fnstsw
repz
mov
retf
fmul
ss
and
pop
and
jno
out
out
dec
stos
sahf
mov
test
jnp
mov
or
add
inc
js
push
jae
add
xchg
mov
fwait
test
ret
(bad)
push
loope
arpl
shl
scas
inc
fcom
mov
jl
or
dec
xchg
dec
outs
(bad)
into
fwait
or
add
inc
stos
ins
jae
xlat
int
jmp
fcmovb
rcl
nop
push
(bad)
loope
and
add
lds
movs
imul
fisubr
cs
ficomp
push
xor
rcr
out
in
push
xor
stos
and
rcl
and
cld
lahf
jo
push
das
xchg
fwait
repnz
adc
cs
mov
inc
psadbw
jmp
adc
outs
xchg
bound
dec
popf
bnd
add
cmc
xchg
std
push
fsub
out
ins
add
sub
clc
sub
and
rcl
dec
and
inc
xor
aaa
test
mov
icebp
adc
xchg
pop
inc
or
and
stos
mov
pop
mov
movs
rcr
fnstsw
add
scas
fistp
inc
pop
jmp
sahf
xlat
ss
lds
jnp
mov
pop
imul
fcmovnb
xchg
adc
cmps
cmp
por
shl
sub
popa
ins
icebp
xor
mov
cmp
xchg
jecxz
cmc
(bad)
ficom
sub
pop
aaa
mov
fimul
or
add
loope
or
test
mov
mov
outs
mov
popa
jmp
jno
mov
cmp
mov
and
(bad)
aam
mov
arpl
test
shl
lds
ins
cmps
lock
push
rcr
dec
xchg
out
inc
inc
xchg
loopne
outs
mov
jne
scas
pop
jno
jecxz
and
mov
jnp
pushf
retf
fisubr
inc
ins
test
jns
sub
or
push
aad
(bad)
xor
cmovbe
std
pop
push
inc
fdivr
pop
cld
stos
sbb
scas
lds
movs
cmc
outs
hlt
add
jns
push
adc
jl
mov
mov
mov
outs
movs
cmp
mov
addr16
and
bound
sub
mov
jb
add
ret
jle
in
inc
inc
adc
sbb
and
sti
(bad)
xor
jo
xor
pop
sub
xor
loopne
test
mov
push
call
jae
inc
in
ret
sbb
sahf
in
jmp
out
or
fisttp
mov
xchg
loop
lds
mov
jp
nop
sbb
dec
or
sbb
adc
loop
dec
fimul
(bad)
addr16
rol
pushf
fwait
cld
pop
scas
mov
mov
call
or
stos
or
xchg
rcr
and
xor
es
pushf
xor
shr
pushf
clc
arpl
or
inc
xor
mov
aaa
jne
jne
jnp
add
push
mov
push
and
cmp
push
(bad)
in
cmp
daa
cli
adc
xor
pusha
xor
push
mov
sub
lds
sti
ja
dec
add
and
mov
or
in
push
mov
cmp
inc
jp
mov
push
test
mov
dec
xlat
neg
mov
or
xchg
pop
pop
jo
add
xchg
sub
idiv
push
sbb
mov
sub
and
fwait
arpl
cmp
add
push
xchg
or
mov
sbb
bound
mov
sbb
sbb
aam
mov
inc
rol
gs
ins
push
mov
fnstcw
mov
retf
and
pop
stos
pop
repz
mov
icebp
repz
inc
or
mov
cli
pop
xchg
sbb
cmp
addr16
xchg
xchg
mov
scas
hlt
jnp
cmc
out
dec
mov
mov
push
icebp
push
pop
aaa
mov
(bad)
fistp
popa
retf
fdivrp
xchg
push
xchg
push
adc
cmps
jecxz
pcmpeqw
mov
fbstp
sbb
xlat
retf
mov
pop
(bad)
ffreep
iret
aad
mov
adc
or
rcr
mov
pop
cmp
mov
popf
jle
or
push
adc
lods
push
mov
imul
out
and
mov
mov
sub
out
arpl
mov
jno
ins
sar
dec
jnp
fwait
pop
aaa
jmp
in
(bad)
cmp
(bad)
inc
inc
jno
jmp
outs
pop
pop
and
adc
jne
das
int3
mov
fst
jne
push
shl
add
and
sub
scas
xlat
pusha
loopne
loopne
xchg
rcr
mov
popa
int
add
jbe
mov
cs
dec
aaa
imul
in
sub
push
jb
stos
xchg
dec
xor
sub
pop
in
and
iret
pop
add
mov
sahf
and
sub
lock
fbld
and
and
inc
(bad)
mov
inc
push
jmp
ficomp
jns
pop
push
(bad)
jne
sbb
xchg
rol
dec
fldcw
xor
sub
add
dec
pop
add
je
adc
jbe
or
mov
imul
aam
scas
push
jmp
pop
popf
mov
daa
ds
outs
push
push
jne
mov
mov
or
mov
jmp
pop
dec
adc
mov
jo
add
add
xor
xchg
xor
cmps
movs
pop
mov
mov
jae
add
jns
dec
jl
arpl
push
cmpxchg
cmps
mov
fisttp
fld
sahf
push
or
jmp
jo
sbb
inc
lea
out
stos
test
imul
iret
add
push
hlt
mov
ins
xor
jmp
loopne
lds
ins
popa
adc
or
or
xor
and
in
dec
(bad)
imul
fwait
push
retf
and
xor
adc
sbb
push
dec
das
or
or
sbb
cmp
add
mov
push
inc
ins
mov
xor
jno
rcl
in
scas
out
adc
mov
jmp
cmps
and
in
ja
push
cwde
int3
int3
jno
and
imul
loope
jmp
sub
dec
cmps
push
rcpps
cmp
mov
sub
add
mov
pop
dec
retf
dec
and
cmp
fcom
jns
jle
out
repnz
sbb
dec
in
stos
or
in
jmp
push
repnz
les
pop
scas
out
jno
in
pop
mov
mov
jecxz
jmp
xchg
mov
ror
daa
xchg
loopne
ja
mov
jmp
sbb
add
xor
arpl
xchg
jle
icebp
push
enter
das
test
rol
inc
dec
gs
loop
add
ja
mov
pop
inc
jl
imul
jg
stos
mov
adc
sub
jns
aam
ins
or
dec
ja
mov
xor
sti
shl
and
scas
pop
ja
test
sbb
pusha
les
sub
dec
cmps
cmps
out
cmp
xchg
ins
aaa
call
mov
test
les
push
cli
call
jmp
in
int
add
sbb
les
sub
les
adc
enter
xchg
adc
test
add
add
mov
lods
aas
mov
and
(bad)
mov
arpl
cmps
push
and
xor
pop
dec
mov
push
mov
xchg
fistp
int
mov
mov
jne
cld
test
add
fild
out
sbb
cmc
adc
out
(bad)
jecxz
jno
add
inc
push
inc
retf
es
ror
int3
into
int3
fisttp
shl
jecxz
or
daa
cmps
inc
dec
outs
jmp
mov
movs
push
xchg
push
cmp
add
dec
inc
cmp
pop
cmp
mov
cmps
xor
or
add
punpcklbw
retf
mov
dec
mov
adc
icebp
lods
push
pushf
das
ficom
cmp
movs
xor
push
enter
stos
mov
xor
mov
data16
push
pusha
add
push
sub
shl
repz
push
xlat
repz
out
jmp
xchg
pusha
mov
mov
cmps
lods
jno
sbb
shr
or
pop
sbb
mov
push
sbb
movs
push
jp
int
sub
cs
(bad)
loop
rol
adc
mov
in
test
fbld
call
jmp
pop
sahf
dec
xor
bound
inc
imul
aas
pop
push
rcr
sub
mov
fdiv
icebp
jmp
int3
pushf
dec
sub
stos
jmp
mov
sub
pop
mov
mov
sub
std
rol
inc
call
cmp
add
push
js
xchg
inc
es
dec
das
sbb
dec
mov
jp
jmp
pop
out
popf
(bad)
mov
ror
xchg
push
sub
and
mov
push
xlat
test
push
mov
sahf
add
sub
lods
loop
add
rol
adc
movs
pop
jmp
adc
out
push
popa
call
vmovhpd
sub
inc
mov
loop
mov
add
jbe
in
call
xchg
dec
sbb
loope
mov
mov
imul
cmc
in
dec
adc
push
xchg
push
popa
jg
cmp
push
push
(bad)
and
or
imul
mov
sub
sub
jg
jl
xor
sbb
or
aaa
jo
frstor
xor
adc
fcomp
sbb
push
das
loope
adc
and
or
test
mov
cli
xor
stos
pop
lea
adc
cmps
jg
dec
sahf
repz
mov
push
sbb
sbb
jp
mul
ja
mov
jmp
test
cmps
std
imul
xchg
jb
sub
sbb
xor
xor
test
or
cmp
pop
shl
cdq
dec
sahf
ja
(bad)
inc
mov
cld
jl
or
lock
imul
out
dec
mov
test
xchg
add
and
inc
dec
aaa
lods
mov
stos
sbb
push
dec
je
adc
add
pop
fcmove
aam
fwait
add
scas
je
loope
mov
xor
retf
test
fistp
adc
sahf
or
jnp
stos
mov
rcr
xor
xor
cmps
pop
pop
add
ror
dec
lods
aas
rcl
int
mov
xchg
push
repz
pop
sub
lds
ja
std
mov
adc
push
stc
add
int3
jg
xlat
inc
data16
push
cmp
adc
lock
(bad)
xchg
jg
push
nop
push
retf
cmps
mov
cs
fs
in
sub
repz
xchg
outs
popf
sub
pop
push
out
pop
rcr
pusha
mov
div
mov
jnp
cmp
or
rcr
jge
and
xchg
or
inc
popa
lock
hlt
pop
dec
mov
add
repnz
xor
or
lods
mov
out
cmp
repnz
xchg
mov
dec
pop
mov
jg
cdq
mov
jmp
das
jle
enter
dec
adc
push
int3
and
pop
gs
push
ror
cmp
xchg
dec
fistp
xor
xchg
adc
mov
add
or
jne
cmps
movs
hlt
sar
es
(bad)
out
xchg
dec
inc
xchg
in
adc
xchg
shl
pop
imul
cmp
sbb
test
fwait
inc
pop
jo
sahf
dec
sbb
cmps
xor
push
test
pop
jmp
sub
in
stos
out
adc
cs
dec
cmp
popa
cdq
mov
ret
dec
mov
and
fwait
jmp
in
xlat
xor
(bad)
jge
test
in
sahf
cwde
or
push
or
(bad)
movs
dec
push
cmp
or
lods
rcl
ins
pop
adc
and
xchg
ret
fsubr
dec
cli
mov
out
ja
add
lods
(bad)
cmp
or
pop
ret
mov
mov
leave
and
jno
mov
sbb
jge
mov
xor
les
in
mov
dec
sbb
push
movs
or
lods
ss
fiadd
cmc
or
je
mov
loope
loop
(bad)
dec
(bad)
out
retf
iret
sbb
inc
and
cmp
dec
lds
imul
jbe
cmp
or
adc
mul
mov
icebp
or
mov
pop
int
ror
jns
scas
jmp
es
pushf
(bad)
or
test
dec
call
pop
sub
out
test
(bad)
dec
lock
adc
or
and
fmulp
sbb
movs
lock
scas
xchg
mov
adc
data16
or
push
xor
add
add
repz
in
into
pop
mov
lods
push
cmp
rcl
mov
cmp
cmp
and
push
fwait
sbb
outs
adc
pop
ret
iret
mov
xchg
cmp
mov
test
xchg
cmp
ret
in
data16
imul
dec
je
sbb
adc
loope
call
xor
bound
ss
mov
shl
(bad)
xlat
mov
and
jno
cmp
push
inc
inc
ins
ret
icebp
fcmovne
jmp
push
lods
int
or
scas
jb
sub
lods
repz
jno
dec
inc
lods
push
add
fisttp
pop
pop
mov
inc
shr
push
cs
cmps
loopne
adc
repz
gs
mov
rcr
in
sub
xchg
stos
mov
js
push
mov
stos
mov
jmp
(bad)
les
and
jno
loope
out
add
out
push
push
mov
daa
ds
pop
sti
dec
in
xchg
ja
out
cmp
mov
mov
and
leave
mov
test
sbb
xlat
xor
aas
adc
push
inc
dec
sub
ret
mov
cmp
stos
sub
inc
hlt
cmp
add
popa
cwde
cmps
adc
sub
lds
pushf
sti
iret
dec
mov
jnp
add
call
pop
mov
das
fsubp
inc
push
push
int
sahf
mov
nop
xor
cmp
jns
xlat
aas
daa
popa
retf
push
xchg
lds
push
dec
push
dec
jle
arpl
das
pop
inc
(bad)
mov
inc
adc
adc
sub
jge
mov
and
mov
test
inc
mov
cs
push
xor
fcom
lahf
xchg
xor
inc
pop
inc
(bad)
shl
rcr
test
ss
ins
in
popf
adc
shl
cmp
add
inc
pop
in
arpl
inc
ds
cmps
mov
jmp
icebp
sub
push
enter
push
lods
pusha
leave
xor
adc
ins
ror
pop
adc
mov
dec
xchg
hlt
(bad)
sub
jo
push
xor
inc
xchg
movs
imul
inc
or
xchg
dec
sbb
out
pop
mov
cmc
pop
sbb
pop
fistp
(bad)
mov
sbb
push
xchg
inc
dec
ins
xchg
les
pop
daa
pop
jl
ins
jae
sbb
sbb
and
retf
xor
push
mov
xor
xchg
adc
inc
fld
mov
nop
fwait
(bad)
cmp
jle
repz
pop
inc
mov
inc
cwde
fcom
lods
sub
jmp
or
imul
fwait
mov
pop
mov
in
or
test
sbb
out
jmp
in
imul
sub
(bad)
retf
sub
and
(bad)
and
jmp
lock
push
pushf
xchg
inc
and
push
fisttp
pop
mov
pop
(bad)
dec
dec
push
pop
push
mov
add
cmp
int
movs
fsub
inc
outs
add
pop
lahf
sar
mov
iret
stos
pop
jp
xor
jl
jno
lods
int3
adc
(bad)
hlt
dec
es
into
jo
adc
mov
cmp
outs
mov
push
ret
mov
or
sbb
mov
je
push
jno
adc
add
sbb
cmp
lods
test
je
test
nop
gs
je
cmp
and
hlt
sub
jno
(bad)
enter
repnz
ror
mov
xor
sbb
adc
std
lods
shl
outs
mov
push
sbb
jns
cmp
mov
cwde
cs
sbb
(bad)
das
rol
dec
sbb
scas
dec
out
mov
stos
ja
mov
push
jecxz
jmp
jnp
out
scas
dec
sub
jne
pop
popf
call
adc
or
out
sub
loope
dec
xchg
push
(bad)
and
iret
stos
icebp
cmp
jnp
std
mov
add
mov
push
mov
cmp
in
mov
int3
mov
push
pop
dec
out
icebp
inc
(bad)
or
mov
cdq
loope
aad
xor
push
jae
mov
clc
ja
leave
jmp
xchg
sbb
aam
scas
out
nop
xor
rcr
push
xchg
cmp
adc
hlt
ja
push
rol
xchg
gs
xchg
push
pop
sbb
sub
inc
push
(bad)
movs
dec
push
imul
les
mov
xor
sbb
push
xchg
je
or
popf
fwait
ja
ins
je
cmp
xor
jb
ja
inc
cmp
(bad)
inc
(bad)
jae
pop
imul
mov
push
cmps
push
add
iret
test
mov
sbb
clc
inc
mov
pop
ins
pop
pop
dec
mov
and
fcomp
jmp
es
push
loopne
mov
stos
or
ret
inc
mov
fwait
push
bound
sahf
shl
aaa
sar
(bad)
sbb
cmp
mov
fisubr
jecxz
shr
mov
fs
ret
sub
ins
lea
jecxz
ret
in
xor
dec
inc
inc
sbb
adc
loopne
not
repz
inc
add
xor
and
pop
xchg
ret
pop
out
rcr
pop
add
movs
(bad)
das
cmp
shl
jae
add
fmulp
push
mov
add
mov
clc
repnz
jl
(bad)
mov
(bad)
(bad)
push
inc
jmp
push
sbb
test
mov
pushf
jmp
jbe
jmp
es
push
xchg
loopne
or
xor
mov
arpl
pusha
bound
xor
mov
in
sub
mov
mov
add
loop
mov
adc
fcomp
mov
in
and
pop
xlat
pop
sub
sbb
xor
shr
jnp
int
add
ret
inc
mov
fcmovne
mov
xor
cld
cmp
bound
in
xchg
jae
ja
ds
not
mov
sub
sub
out
sub
ror
scas
mov
nop
rcr
aad
mov
jle
add
mov
and
cdq
add
int3
push
std
dec
xor
mov
push
cmp
pop
xchg
fdiv
push
test
icebp
xchg
shr
addr16
cld
pop
fsincos
jnp
push
ins
add
xor
aam
and
cmp
sbb
movs
daa
mov
test
cmp
(bad)
mov
ret
sub
mov
arpl
jl
add
mov
dec
sar
mov
and
test
(bad)
mov
mov
lahf
sub
je
xchg
fisubr
inc
and
or
cmps
in
adc
cs
jmp
pop
jmp
nop
push
add
popf
sub
and
cmp
mov
pop
and
pop
(bad)
xor
push
push
(bad)
push
dec
aaa
test
xor
or
xchg
in
sub
dec
or
and
ins
iret
sbb
es
or
jecxz
(bad)
rcr
add
lods
add
and
int
cs
or
lock
xchg
scas
adc
mov
(bad)
repz
adc
js
or
ds
or
int3
adc
rcr
rcl
pushf
(bad)
cmps
cmp
leave
push
pop
not
mov
mov
aam
pop
sbb
test
push
gs
stos
or
jle
(bad)
test
xchg
into
(bad)
mov
popf
xor
adc
push
scas
repnz
inc
mov
push
push
or
sub
mov
mov
popf
mov
pop
mov
(bad)
fsubr
sbb
cmps
clc
sbb
loopne
xchg
inc
shl
stc
inc
cmp
jp
mov
outs
fsubr
adc
xchg
inc
or
and
fmulp
rol
jmp
and
and
aas
out
lea
push
ss
xor
xor
push
mov
xchg
int
jl
lods
test
mov
xor
hlt
xchg
jbe
inc
lods
into
xchg
retf
pop
cmp
in
adc
fld
jmp
push
lds
enter
enter
dec
ret
sar
add
push
sub
jno
cld
push
das
cwde
cli
fcom
in
loope
sbb
mov
test
push
dec
pusha
gs
not
fdiv
add
call
mov
xchg
test
mov
shl
mov
in
in
aaa
and
fisttp
sbb
lods
pusha
mov
xchg
xor
and
ffreep
mov
mov
daa
fsub
inc
fnsave
pop
stos
cmp
test
sbb
fdivp
mov
and
pop
mov
out
push
cmp
pop
cs
pop
mov
xchg
mov
mov
inc
jl
push
dec
imul
mov
jbe
mov
clc
push
mov
sti
pop
mov
jne
add
test
push
xchg
cmp
jmp
xchg
call
mov
mov
arpl
test
cmp
push
or
imul
(bad)
out
add
or
push
gs
leave
adc
stos
mov
ds
inc
repz
cmp
in
sub
fld
push
xchg
popf
and
cs
jns
cmp
xor
loope
adc
retf
dec
lods
mov
neg
sbb
sbb
scas
fstp
or
cmp
sbb
cs
mov
inc
or
js
ror
adc
(bad)
lea
idiv
sahf
ds
movs
je
jne
movs
xchg
pop
dec
ins
jae
and
jmp
pusha
push
idiv
test
out
(bad)
lods
(bad)
push
and
push
ret
push
jg
push
jbe
sbb
cmp
aaa
mov
xor
sub
int3
retf
fimul
sub
pop
sub
(bad)
pop
dec
mov
cmp
shl
cwde
imul
in
jecxz
pop
fidivr
sar
rcr
dec
stc
sar
enter
inc
sub
mov
das
adc
rol
into
inc
jecxz
ss
add
int3
loop
(bad)
mov
xor
stos
jp
mov
mov
push
out
adc
mov
rcr
in
add
add
pop
pop
jb
out
and
jecxz
loopne
mov
sub
xor
iret
or
or
leave
call
push
or
aaa
push
retf
cs
adc
dec
mov
sahf
pop
mov
or
push
fwait
retf
loopne
ins
sbb
inc
xchg
shl
sub
xlat
add
fnstenv
in
es
loop
push
outs
fcomip
dec
cmp
lods
data16
mov
mov
cwde
add
sub
lods
int3
dec
and
push
arpl
jge
into
pop
or
xchg
adc
jg
mov
loop
mov
xchg
mov
stc
aam
pop
push
lahf
mov
sbb
inc
cld
and
and
call
mov
xchg
ins
cmps
ja
loope
jmp
xor
imul
mov
(bad)
scas
clc
and
adc
push
repz
pop
neg
loop
rcr
leave
ret
pop
scas
mov
jge
stos
and
in
fsubr
stos
loop
fucomi
inc
ins
inc
pop
je
sar
cmp
adc
xor
mov
and
nop
sub
adc
and
popf
adc
jmp
mov
sub
jge
adc
out
jne
push
fiadd
mov
fdiv
xor
mov
jo
popa
cmps
dec
pop
(bad)
push
cmp
(bad)
retf
pushf
cmp
dec
sub
add
les
or
std
movs
fucomp
div
sbb
(bad)
or
enter
mov
mov
fsubr
in
in
mov
xchg
xchg
adc
arpl
push
pop
(bad)
xor
bound
aas
loopne
imul
jb
add
pmulhuw
jmp
sub
or
xchg
push
mov
(bad)
mov
addr16
fimul
lea
pop
cmp
outs
dec
push
cmp
mov
add
cli
pop
dec
push
jne
jmp
aam
test
clc
cmc
int3
sbb
pop
test
jns
and
retf
je
and
xor
stos
shl
mov
addr16
xor
aam
sbb
adc
into
push
sbb
cmp
gs
mov
into
es
sbb
push
into
cmp
lods
cmp
outs
jle
cmp
mov
sbb
jb
mov
sub
mov
sub
fsubr
jns
dec
inc
jns
mov
mov
aas
xor
call
jecxz
adc
std
outs
out
ds
(bad)
mov
or
push
pusha
fisubr
cdq
jmp
dec
pop
scas
xor
push
dec
(bad)
cld
dec
mov
add
adc
cmps
(bad)
lds
mov
das
iret
dec
add
test
xchg
cdq
jecxz
mov
aaa
clc
dec
in
adc
out
outs
and
rol
mov
clc
std
fild
fdivrp
jne
(bad)
xchg
call
push
mov
and
and
shl
jmp
xchg
add
jbe
or
add
data16
jge
push
mov
inc
push
or
jle
(bad)
push
aam
xchg
and
out
(bad)
mov
push
xor
cmps
jo
mov
add
aad
mov
xchg
mov
fdiv
test
xchg
pop
in
mov
push
mov
loop
gs
sub
mov
push
sbb
push
std
rol
adc
arpl
out
pop
ret
fstp
sub
mov
jnp
push
xchg
into
dec
mov
xchg
mov
adc
mov
push
pop
pop
xchg
sub
lahf
inc
add
fadd
imul
sbb
xchg
leave
imul
or
push
inc
and
mov
inc
xchg
inc
ret
xchg
add
sbb
out
or
adc
push
or
je
push
je
mov
inc
adc
ins
push
adc
in
xor
xor
and
test
rcl
jle
les
push
sbb
pop
(bad)
jae
jmp
dec
adc
sbb
cdq
and
into
push
sbb
pop
push
sahf
je
or
cmps
bound
mov
and
arpl
adc
mov
add
pop
imul
outs
or
test
or
shl
fbld
jle
sub
jnp
add
cmps
das
mov
(bad)
cmp
pop
push
jmp
mov
jp
cmp
hlt
pop
mov
mov
sahf
add
mov
adc
outs
sbb
pop
repz
xor
sbb
mov
inc
push
push
inc
call
clc
cld
es
clc
jp
pop
js
rcr
sar
pop
imul
mov
ret
xor
loope
rol
frstor
aad
pop
ret
pop
mov
ret
int
enter
push
sbb
ficom
imul
xchg
pop
movs
into
ins
fild
call
je
repnz
in
xchg
xchg
cmps
xchg
in
xchg
sbb
add
sbb
pop
jecxz
outs
gs
repz
ins
out
add
mov
das
mov
mov
rcl
xor
inc
ja
xchg
adc
je
mov
ds
dec
test
shr
push
enter
jns
pop
and
ror
ret
sar
loope
(bad)
arpl
or
iret
and
xchg
test
jmp
cmp
or
push
cmp
mov
in
rsm
mov
pop
sub
mov
std
std
(bad)
neg
aam
call
cmps
xor
imul
imul
ficom
jge
xchg
call
das
xchg
cmc
das
lds
push
pop
das
mov
loop
shl
pop
dec
sbb
out
cld
call
or
inc
and
mov
pushf
movs
das
jne
lock
sar
sti
dec
cmp
pop
push
dec
test
push
push
jmp
sub
cs
out
xchg
mov
or
xor
in
loop
xor
shl
fcomi
pusha
cmp
cmps
arpl
jmp
xor
hlt
cmp
imul
inc
push
mov
mov
jnp
xchg
sub
sbb
inc
or
cmovg
dec
xor
out
add
adc
mov
popf
jb
pusha
xchg
out
aaa
push
das
outs
pop
push
(bad)
out
mov
pop
mov
adc
jmp
sbb
and
aad
fwait
xor
pop
dec
scas
loop
pop
cmc
jnp
(bad)
aas
scas
dec
xchg
xchg
lahf
jb
xor
sar
sbb
xor
xchg
neg
ds
les
jb
sbb
push
ds
sbb
imul
jo
mov
scas
cmc
push
mov
and
cmps
cmp
loope
lahf
mov
nop
cmp
aad
fs
lods
popf
cmp
cdq
shr
mov
mov
ror
cmp
or
push
imul
add
xlat
movs
loopne
pop
dec
btr
cwde
inc
xchg
iret
test
or
adc
mov
int3
scas
xchg
jns
xor
shl
adc
cwde
retf
ret
pop
imul
sbb
pop
pop
pop
ds
lock
cmps
arpl
or
loop
aas
cmp
test
iret
lahf
icebp
sbb
loopne
pop
and
iret
(bad)
xlat
jbe
pushf
stos
cld
jge
sbb
loop
dec
mov
push
les
mov
pusha
fclex
stos
jmp
push
add
jae
push
jle
ret
fistp
cmp
or
lea
sbb
ja
scas
adc
cdq
imul
mov
xor
inc
pop
fnsave
shl
imul
cli
mov
scas
imul
cmc
das
xlat
jns
sbb
mov
push
int
and
add
pop
inc
arpl
sbb
mov
mov
shr
mov
mov
and
stos
mov
push
lods
std
por
call
(bad)
and
pop
jecxz
inc
cmp
ror
sti
mov
mov
inc
sti
sub
mov
call
mov
js
bnd
or
rol
jne
pushfw
jns
aas
lahf
xchg
ret
loopne
xchg
jbe
sub
mov
ret
inc
test
fidivr
inc
inc
pop
mov
aam
data16
xchg
ss
inc
mov
pop
in
jno
fisubr
mov
inc
(bad)
sbb
fcomi
pop
test
push
cld
pop
ja
loop
mov
inc
cwde
lods
into
jmp
fldcw
out
adc
cmp
sub
cmp
inc
ss
mov
into
test
mov
popf
jl
adc
sbb
and
pop
inc
or
sub
fidiv
jge
in
jle
adc
sub
shl
mov
shl
leave
sbb
daa
jp
test
scas
sub
shr
mov
das
sar
fadd
push
icebp
test
lahf
jecxz
sub
mov
jae
xchg
popf
sbb
dec
cmps
(bad)
es
add
icebp
inc
sbb
sbb
sti
fmul
cmc
cmp
cmc
xor
and
cmps
push
jns
and
in
imul
pop
mov
fmulp
es
push
fsub
jae
pop
jge
xchg
movs
shl
adc
sub
rcl
or
add
mov
daa
lock
dec
ds
lea
outs
jbe
pop
xor
retf
pusha
or
mov
jnp
xor
jg
(bad)
lock
jmp
aas
xchg
in
cs
test
xor
push
cmp
push
test
ja
inc
psubusb
xchg
pop
mul
loope
sbb
stos
jae
cmp
push
ds
ja
mov
inc
sub
int3
cmp
sbb
and
cmps
retf
mov
aad
dec
aam
adc
mov
xor
lods
sub
neg
sub
sbb
call
call
(bad)
mov
xchg
fcomp
mov
(bad)
out
mov
jns
sti
imul
jl
bound
xchg
lock
sub
jbe
(bad)
pop
cmp
test
(bad)
and
clc
push
cmp
retf
lds
jmp
inc
pop
fbld
and
push
inc
jae
dec
mov
xor
scas
sub
fstp
rcl
add
mov
cmc
idiv
xchg
popf
sbb
fld
or
and
fs
(bad)
cs
jb
mov
mov
sub
xchg
js
or
test
jae
repnz
jl
dec
push
cmps
pop
in
jno
jmp
movs
ja
sub
hlt
or
ja
or
jae
add
dec
dec
dec
jno
or
adc
in
jns
and
xchg
adc
push
cmps
xor
jo
daa
and
and
out
lods
cmps
cmp
push
or
(bad)
int3
or
fist
push
aad
xchg
push
push
xor
gs
cmc
adc
movs
jnp
fnstenv
or
push
mov
test
sub
sub
aaa
(bad)
cld
mul
xlat
xor
inc
clc
xchg
out
(bad)
mov
mov
int
xchg
ret
aas
pop
stos
sbb
pop
jne
sub
cmps
cmp
and
leave
ins
cli
mov
(bad)
js
cmps
movs
jae
pop
getsec
adc
fisttp
and
lock
or
rol
in
les
test
jmp
pop
mov
pop
mul
push
or
ja
cmc
push
sar
push
push
jp
in
lock
adc
pop
inc
outs
and
movs
mov
ficomp
or
sub
popa
jmp
mov
push
lods
outs
gs
(bad)
lgs
jmp
dec
rol
xlat
mov
push
mov
cwde
bound
dec
(bad)
pop
cmp
lods
in
cmps
hlt
jmp
sbb
adc
xchg
out
and
cwde
sti
cs
out
jg
adc
ret
pop
sti
lahf
adc
(bad)
ficom
daa
jmp
test
sbb
ja
push
xor
ror
inc
nop
jne
iret
jnp
shl
xchg
icebp
(bad)
repz
stos
int3
xchg
(bad)
movs
mov
jo
fild
nop
data16
stos
mov
sub
stc
out
inc
popf
xchg
cmp
ins
enter
mov
inc
ins
pushf
mov
outs
jmp
adc
ror
clc
xchg
mov
test
arpl
jg
ret
addr16
in
repnz
mov
inc
scas
ja
pusha
mov
and
push
mov
inc
push
nop
inc
sub
adc
xchg
retf
shr
dec
inc
loop
mov
lods
mov
dec
jmp
inc
push
mov
sbb
int3
sub
test
ret
hlt
mov
inc
and
(bad)
push
mov
mov
cdq
ja
mov
add
jmp
xor
in
mov
add
and
sti
stos
push
in
jno
push
cs
clc
and
and
inc
(bad)
mov
in
nop
retf
xor
rol
dec
and
cmps
adc
cmp
mov
movs
out
mov
dec
dec
call
mov
stos
adc
minps
jle
mov
sub
ins
xor
setno
cmc
pcmpgtb
(bad)
adc
jno
pusha
cmc
mov
inc
sti
lock
sahf
mov
dec
mov
xchg
mov
adc
out
push
add
jg
ins
sbb
sub
push
mov
cmp
push
jne
imul
shr
retf
cmc
mov
sub
adc
cs
test
dec
inc
and
ds
sub
das
xor
jo
push
xchg
mov
nop
mov
js
dec
popf
and
mov
jb
pop
xchg
shl
mov
cdq
test
neg
stos
push
stos
std
std
dec
xchg
push
mov
add
shl
mov
sar
push
fwait
cld
mov
dec
into
in
xor
inc
or
xchg
and
repz
(bad)
ins
dec
sub
ja
gs
je
mov
popf
push
cwde
out
ja
and
mov
or
in
jno
adc
cmps
inc
fcom
push
push
pop
push
retf
ficomp
push
sub
xor
ins
add
loope
jae
xor
jle
mul
or
and
pop
sbb
in
push
dec
mov
or
int
push
inc
mov
loope
sbb
sub
sbb
cmp
(bad)
pop
push
(bad)
fst
lea
jle
cwde
(bad)
and
add
push
push
inc
data16
data16
ror
mov
out
push
shr
sub
repz
mov
sub
adc
xor
cmp
sub
(bad)
fstp
adc
ss
jle
cmp
fs
mov
(bad)
and
sub
pop
add
push
lds
fcmovb
dec
shr
xchg
add
xor
add
mov
lock
fdivrp
inc
push
xchg
je
lods
(bad)
loopne
popf
push
cmp
test
dec
xchg
(bad)
or
(bad)
sub
add
lods
sub
cmp
add
xchg
adc
das
sar
fistp
inc
jge
cmp
adc
lock
add
pushf
clc
and
add
fldln2
rcl
xchg
xchg
sbb
les
xor
mov
jle
add
xor
imul
mov
pop
and
inc
dec
fisub
jmp
xor
sbb
mov
(bad)
lock
aam
and
in
adc
in
pop
jne
ins
(bad)
xchg
shl
sub
xor
sub
ss
add
mov
sub
cld
push
loope
inc
push
push
xchg
mov
inc
jmp
shl
jg
sbb
in
imul
aam
sbb
(bad)
sbb
sub
adc
inc
cmps
xchg
(bad)
jns
(bad)
cmp
pop
jnp
push
movs
stos
test
(bad)
aam
jnp
sub
cmps
pop
sbb
arpl
out
mov
or
stos
mov
add
mov
and
imul
ds
xchg
push
mov
adc
ja
cmp
int3
icebp
pop
sub
mov
ret
cmp
cwde
and
call
aam
pop
sti
fist
sbb
jne
cmp
mov
xchg
sahf
push
inc
xor
mov
cmp
(bad)
(bad)
sbb
jg
sbb
dec
stc
leave
xchg
jns
mov
or
cmp
mov
shr
lds
les
(bad)
rcl
in
mov
and
(bad)
xor
ret
inc
fisttp
outs
lea
sub
mov
mov
es
lds
arpl
mov
pusha
retf
or
jns
adc
sub
std
(bad)
sar
sbb
outs
sub
fxch
rcl
inc
std
fldenv
lods
inc
jne
test
sub
jl
push
aad
or
or
scas
dec
jo
test
movs
mov
sub
stos
scas
ret
inc
pop
ins
lods
pop
fs
xor
inc
sbb
ret
mov
lods
sbb
pop
or
cli
scas
inc
cld
fs
aas
sbb
lock
cmp
icebp
pusha
mov
fisttp
iret
fwait
mov
mov
inc
fldenv
dec
enter
mov
sbb
xchg
test
shl
pop
aas
mov
mov
pop
mov
mov
(bad)
aas
lds
rcr
mov
(bad)
(bad)
xlat
loop
scas
fnsave
fild
enter
dec
mov
(bad)
jno
xor
sahf
fld
les
jo
popf
test
fnstenv
mov
loope
cmp
jne
aad
adc
lock
bswap
cdq
lods
outs
push
adc
out
sub
cmp
retf
ins
xchg
addr16
fs
call
retf
or
in
xor
add
push
push
xor
std
push
jg
lods
and
cdq
mov
jp
js
jns
cdq
test
and
ins
inc
imul
mov
cmp
dec
xchg
rol
add
mov
xor
inc
mov
adc
idiv
mov
icebp
jne
or
jnp
mov
out
fnstenv
aam
xchg
repz
mov
lea
(bad)
cmp
int3
mov
test
jns
in
or
(bad)
jecxz
fistp
sub
fadd
test
leave
inc
push
inc
test
inc
not
(bad)
(bad)
and
push
aad
mov
outs
stos
clc
inc
and
aam
rcl
stos
jnp
nop
movs
push
jo
dec
mov
jnp
push
es
push
pop
inc
outs
push
rcl
push
add
enter
push
push
pop
fs
fcmovnu
in
fdivr
fst
xchg
fistp
cmp
in
retf
ds
pop
in
int
shl
push
fwait
adc
fld
and
aas
ins
stos
ins
jns
inc
fisubr
xchg
shl
sbb
stos
cmc
sbb
adc
rol
call
inc
add
fisubr
out
loop
jmp
data16
fs
sub
inc
cmp
imul
cs
dec
das
mov
jmp
xlat
jecxz
loope
xchg
jmp
dec
sbb
xchg
loope
les
cmps
pop
mov
int3
in
scas
jo
loopne
jle
scas
(bad)
in
xchg
lock
sub
jl
or
das
inc
inc
repnz
fnstcw
sub
inc
mov
sbb
inc
mov
push
xchg
or
cmc
inc
inc
cmp
leave
test
mov
fneni(8087
jne
jne
pop
pop
push
outs
imul
jbe
pop
and
ins
sub
aas
push
test
fiadd
fdiv
push
(bad)
push
xchg
les
adc
mov
(bad)
pop
adc
pop
sub
mov
(bad)
xchg
xor
xchg
pop
ret
jb
mov
call
(bad)
rcr
rol
shl
out
or
popf
cs
movs
ds
lods
inc
xor
call
pushf
push
hlt
std
and
sbb
add
aad
clc
loopne
add
nop
xchg
or
imul
xor
dec
push
sbb
dec
ds
sbb
sar
mov
cli
(bad)
leave
imul
ins
fdivr
mov
cmp
jp
xor
rol
and
into
scas
dec
push
(bad)
jae
shl
ins
dec
push
sbb
push
(bad)
jp
inc
pop
mov
pop
inc
sbb
out
pop
jecxz
mov
jl
int
cli
inc
mov
inc
push
in
test
or
xlat
(bad)
loopne
fst
xchg
imul
mov
pop
inc
cmp
jp
mov
shl
sbb
call
imul
test
mov
inc
pop
aam
mov
xchg
pop
add
icebp
je
shr
cmps
xchg
or
pop
fs
fst
out
adc
popf
cdq
fisttp
jmp
sbb
inc
push
cmps
stos
fmul
fwait
les
sbb
test
enter
mov
adc
adc
inc
aaa
dec
xchg
sbb
mov
movs
movs
outs
add
adc
fstp
adc
xor
xor
lods
call
sbb
sub
fidiv
out
scas
sub
fincstp
mov
add
loopne
movs
rol
call
pop
mov
add
inc
mov
sbb
push
jp
movs
fadd
addr16
pushf
push
cmps
mov
outs
jbe
mov
dec
clc
daa
fnstsw
cmp
sbb
scas
inc
sti
and
pop
pushf
ror
in
or
movs
popa
cmp
arpl
out
gs
pusha
adc
repnz
xchg
or
call
stos
shl
aaa
jns
jb
inc
push
ins
pop
sahf
xor
les
cli
push
jl
ins
mov
imul
sub
test
sbb
xchg
bound
sahf
and
in
jae
jg
fsub
pop
int3
in
or
or
mov
enter
outs
pop
mov
imul
push
sub
mov
sub
mov
(bad)
xchg
or
movs
push
sub
pushf
xadd
stc
fcomp
sub
pop
add
pop
jno
sbb
cmp
js
ja
xchg
es
xchg
imul
xchg
jb
icebp
adc
adc
xchg
test
ret
outs
in
ficomp
adc
das
inc
out
daa
(bad)
in
inc
(bad)
jmp
test
daa
xor
xor
lock
sub
retf
push
in
push
in
mov
cdq
call
push
out
movs
jno
arpl
dec
jmp
pop
add
jmp
out
mov
dec
in
imul
sub
xor
inc
mov
mov
nop
int3
mov
pop
xchg
cmp
pop
outs
push
add
idiv
push
mov
mov
es
scas
daa
jmp
push
daa
xchg
inc
pop
jecxz
xchg
inc
dec
bound
xchg
adc
push
and
add
(bad)
push
cmp
cmp
dec
xor
xor
jnp
xchg
out
cli
jge
call
push
cmp
and
push
jmp
cmp
es
xchg
call
mov
push
mov
sub
je
jg
fnstenv
xchg
sbb
or
mov
rcl
loop
and
jb
clc
imul
mov
xor
not
jno
jmp
mov
into
lods
inc
dec
dec
or
push
fild
adc
jl
and
add
aam
leave
bound
or
cmp
test
inc
loope
daa
fdiv
dec
push
lea
adc
out
(bad)
repz
call
cwde
pop
imul
add
or
or
or
or
into
or
push
ret
inc
push
rcr
push
bound
retf
pop
jge
cwde
jo
mov
or
in
scas
or
rcl
push
push
out
push
rcr
fcomi
add
ins
fisttp
stos
xor
scas
pusha
data16
dec
xchg
jp
data16
fimul
mov
or
les
mov
loop
xor
rol
test
fdiv
mov
movs
fisttp
push
iret
rcl
out
cmp
lds
addr16
stos
scas
xchg
and
push
scas
pop
dec
cmp
aaa
leave
and
out
sub
inc
test
sbb
mov
push
or
test
dec
push
sbb
cmc
aam
jp
movs
(bad)
(bad)
pop
jne
cwde
loope
cmc
(bad)
mov
gs
add
in
push
sar
stos
mov
inc
cmp
inc
into
(bad)
dec
into
mov
and
mov
or
std
das
stc
mov
popf
jb
and
inc
jle
add
mov
inc
cwde
ins
aam
push
jl
das
dec
sub
push
data16
movs
bound
sbb
fstp
mov
lock
mov
jne
repz
fstp
jo
adc
adc
std
sbb
into
cmp
mov
mov
js
mov
in
inc
lahf
xlat
dec
xchg
(bad)
sub
imul
scas
repz
adc
push
mov
call
mov
push
xor
xor
sub
adc
lods
mov
iret
mov
and
rol
jge
daa
xchg
and
pop
push
jno
mov
adc
and
cmp
push
and
loope
in
addr16
mov
pushf
shl
popa
push
or
mov
repnz
xchg
push
js
xchg
cmps
aad
addr16
mov
pop
test
sbb
scas
cld
out
repz
(bad)
sbb
ror
xor
mov
lea
sub
retf
(bad)
fmul
pop
mov
lds
inc
lock
inc
jb
push
or
jns
and
(bad)
scas
push
mov
ret
mov
lock
fiadd
mov
sub
sub
aad
mov
mov
pop
mov
dec
enter
mov
push
(bad)
rcl
pop
mov
sub
adc
jecxz
aaa
sub
add
addr16
rcr
adc
xchg
lods
mov
nop
cli
test
push
jns
vcvtpd2dq
pcmpeqd
adc
fist
cdq
mov
push
sti
mov
dec
(bad)
sub
in
pop
mov
test
inc
inc
xor
sbb
cmp
cs
mov
mul
ja
xlat
int
xor
ja
(bad)
shr
imul
push
mov
repnz
in
xor
push
mov
add
iret
fisubr
mov
cmps
mov
mov
cwde
pop
sub
and
fwait
mov
mov
push
aam
movs
movs
int
mov
pop
mov
aam
push
jle
out
push
pushfw
bound
cmp
cli
hlt
jae
and
and
clc
sbb
add
xchg
(bad)
mov
xor
and
arpl
pusha
jg
ins
cmp
jo
jle
and
adc
ins
push
dec
hlt
inc
sub
jmp
cs
push
je
add
push
mov
or
xchg
jmp
sbb
movs
inc
xchg
push
int3
cmps
scas
clc
lds
sub
dec
mov
(bad)
cmp
pop
lock
fs
ja
je
xchg
popf
test
repnz
lahf
mov
mov
and
pop
loope
ficom
mov
jo
aaa
inc
test
pusha
(bad)
or
jg
into
inc
popf
out
and
adc
xor
jbe
loop
mov
adc
(bad)
popf
pop
aad
aas
inc
jl
cs
int
inc
cli
jg
inc
sub
ins
pop
jge
jmp
fadd
mov
fnstsw
(bad)
or
mov
fnstenv
fs
aas
not
jnp
js
mov
es
mov
sub
call
jmp
mov
ins
rol
and
mov
xchg
and
adc
out
add
cmps
dec
adc
aad
imul
popf
adc
inc
add
pushf
mov
pop
es
adc
cmps
inc
mov
and
popf
ret
jl
(bad)
sub
push
popf
mov
pop
push
pop
popa
push
pop
into
aam
jmp
cli
jle
cmc
pop
mov
int
mov
imul
pop
fisub
dec
and
test
ins
sub
arpl
inc
dec
test
repz
sbb
mov
stos
jge
pushf
mov
cmp
(bad)
cwde
cmp
add
mov
mov
mov
in
addr16
sub
std
es
iretw
adc
lahf
jno
in
rol
sub
xchg
cld
cli
call
cmp
xor
jmp
jmp
pushf
fild
scas
add
les
mov
(bad)
push
rol
inc
fisubr
out
xchg
or
pushf
movs
jmp
out
jbe
sub
(bad)
push
jne
loopne
pop
data16
cmp
arpl
cmp
adc
ss
xor
pusha
out
mov
call
push
mov
fs
mov
imul
jp
cmps
lods
pop
xchg
jmp
push
fwait
mov
push
cmps
pop
test
cld
push
retf
shl
jl
je
sub
mov
sbb
fcmovbe
leave
outs
in
inc
sti
sar
stos
icebp
sbb
lea
push
dec
adc
dec
nop
(bad)
xor
(bad)
out
(bad)
cmp
inc
pop
push
inc
dec
mov
add
fdivp
(bad)
push
cmps
jmp
xchg
movs
rcl
stos
je
lahf
nop
and
jae
arpl
and
aaa
xor
fistp
cmp
loop
inc
jb
cmps
movs
mov
cmp
mov
sar
mov
(bad)
jns
jl
push
or
mov
cdq
retf
or
mov
and
sti
stos
iret
jno
fxch
jbe
or
push
cmps
xor
ret
cmp
jne
ins
fabs
pusha
aaa
(bad)
ficomp
clc
mov
call
idiv
xor
and
xlat
or
jne
ret
push
push
xchg
or
(bad)
add
jae
bnd
inc
pop
mov
sar
xchg
or
arpl
movs
cmp
xchg
sub
retf
mov
mov
lahf
pop
dec
out
mov
pushf
loop
pop
fidiv
pop
clc
loop
sbb
xor
xchg
enter
sbb
aam
xor
in
add
dec
or
inc
mov
loopne
pop
test
mov
in
dec
jae
ror
and
loopne
mov
pop
retf
fistp
movs
or
jnp
sbb
xchg
pop
push
lea
cmp
arpl
jle
xchg
jno
cmc
cmp
or
pop
lods
xchg
jo
outs
stc
inc
cmp
push
out
pop
repnz
push
xor
ins
aas
sub
jmp
(bad)
(bad)
jnp
call
xor
jle
icebp
sbb
cmc
inc
paddd
pop
sti
or
push
sbb
in
out
push
int3
dec
xor
or
loop
call
fiadd
out
or
pop
adc
ja
or
lods
shl
xor
data16
inc
mov
mov
mov
repnz
retf
xchg
lods
xchg
nop
push
jb
scas
mov
retf
mov
jp
xchg
ins
shl
dec
or
xor
cli
inc
jns
lahf
sysret
jo
xor
test
test
lds
les
imul
lods
mov
retf
imul
inc
(bad)
mov
arpl
xor
mov
mov
xor
dec
push
fstp
hlt
add
and
jns
push
mov
cmp
(bad)
adc
jmp
std
(bad)
pop
stos
add
out
push
jl
ins
xchg
adc
iret
in
test
ins
fwait
out
mov
pushf
mov
fidivr
adc
dec
mov
enter
sbb
fcmovnbe
inc
jae
addr16
xchg
inc
retf
xlat
add
frstor
mov
jmp
xchg
adc
loope
shr
je
pop
js
lock
jns
and
dec
and
test
dec
fistp
cs
dec
loop
scas
shl
dec
(bad)
xor
stos
nop
test
cmp
(bad)
test
pop
and
loopne
xlat
xlat
sub
mov
ret
js
ss
(bad)
cli
das
test
imul
nop
repz
and
xchg
test
sub
rol
fistp
aad
cmp
dec
cld
lods
out
inc
pop
cmp
xor
add
push
mov
jns
mov
repnz
aaa
and
adc
arpl
iret
dec
jmp
xchg
mov
es
pmullw
shr
adc
(bad)
mov
pop
push
push
mov
aam
shr
dec
sbb
adc
aaa
(bad)
jl
fisub
movs
cmp
and
inc
aas
(bad)
xor
adc
sahf
call
jl
adc
xor
in
xchg
sbb
cmps
sub
frstor
div
push
in
dec
clc
scas
mov
adc
mov
in
pop
ret
inc
retf
lods
in
cdq
cs
shl
xor
mov
inc
mov
push
fsub
jb
dec
ja
or
inc
jno
mov
pop
ins
test
cmp
in
sahf
adc
mov
add
pop
pusha
pop
or
dec
dec
lahf
hlt
add
or
cmp
dec
fwait
adc
aas
inc
call
aaa
ds
sbb
into
dec
scas
cmps
and
jge
cmp
jl
add
imul
test
jns
in
ss
adc
mov
(bad)
mov
dec
or
or
mov
add
push
gs
or
push
push
into
mov
pop
mov
mov
repnz
cld
mov
in
inc
jecxz
rol
out
pop
movs
les
fdivr
mov
jo
pushf
enter
mov
jbe
test
and
fdivr
std
add
fwait
(bad)
mov
cmp
cld
cmp
shl
out
cld
xchg
icebp
stos
dec
pop
(bad)
push
push
retf
arpl
xor
pop
or
sub
jmp
mov
fisub
mov
scas
lds
retf
cmp
mov
jmp
xor
jne
mov
cmps
xchg
cmc
addr16
stos
outs
ins
cld
push
out
sub
xchg
adc
inc
test
cwde
lds
int
push
pop
mov
pop
sahf
lea
jmp
and
test
xchg
mov
xchg
cmp
and
xor
mov
test
lahf
cmps
dec
(bad)
lahf
add
add
jp
daa
jg
mov
aaa
fstp
les
(bad)
cwde
les
movs
sub
mov
sbb
or
push
push
mov
aas
mov
movs
inc
sbb
xchg
out
adc
daa
ja
movs
push
aad
popf
push
icebp
dec
stos
push
mov
rcr
add
sbb
jb
or
je
mov
movs
stos
(bad)
mov
push
cs
mov
lahf
push
pop
(bad)
mov
and
push
out
in
test
repnz
add
ret
or
arpl
retf
add
sub
std
push
popa
mov
sbb
xchg
adc
jg
mov
data16
(bad)
lods
loope
mov
jge
xor
mov
fsub
mov
aam
sbb
sbb
mov
jb
adc
and
imul
hlt
push
add
xchg
loope
add
scas
push
and
les
(bad)
cmp
retf
xchg
xor
jbe
call
mov
pop
call
jge
mov
call
sub
jnp
adc
xchg
mov
loope
jno
sbb
bound
push
pop
fimul
stos
std
imul
pop
jbe
pop
loope
pusha
fidiv
ficom
cmp
ret
ror
pop
mov
mov
pop
ret
cli
enter
es
push
sahf
(bad)
test
mov
xor
daa
mul
jnp
inc
shl
adc
shr
pop
test
stos
push
call
addr16
and
repnz
sti
inc
add
xor
icebp
inc
mov
cmp
loop
aas
mov
out
std
ss
xchg
in
ror
lea
and
jecxz
mov
sti
cdq
jns
call
cwde
mov
pop
icebp
pop
sub
fs
arpl
out
stc
sbb
dec
fnsave
mov
add
ror
lea
fs
lods
cmps
ffree
dec
mov
mov
fbstp
aaa
sub
fcomp
pop
cmps
cli
sbb
ja
pop
mov
or
ret
das
jp
push
jo
dec
xor
or
mov
sahf
test
or
mov
(bad)
sti
push
and
sbb
out
sahf
mov
hlt
xchg
bound
imul
cmps
or
mov
push
out
(bad)
mov
add
pop
cwde
mov
fistp
jecxz
jmp
xor
aas
dec
nop
push
popf
push
rol
call
pushf
in
mov
sti
in
add
mov
xlat
fnsave
aam
es
nop
sbb
xchg
dec
outs
adc
jno
jmp
sub
mov
or
pop
fmul
lods
mov
inc
out
cmp
outs
jns
adc
jecxz
lea
mov
outs
loope
sbb
or
loopne
jns
mov
int3
mov
mov
ror
jne
in
inc
clc
add
mov
jl
lds
jg
fcom
mov
mov
iret
inc
sbb
in
mov
mov
pusha
pop
dec
ins
mov
in
fsub
shr
rol
adc
ret
(bad)
mov
lea
(bad)
pop
enter
pop
add
clc
jmp
retf
ins
cmp
add
xchg
retf
pop
pushf
shl
or
cwde
inc
enter
and
popf
aad
pushf
dec
and
xor
shl
(bad)
call
pushf
xchg
scas
scas
and
ds
mov
ds
out
nop
pop
pop
jb
mov
ret
jg
inc
jno
inc
mov
cmps
stos
aam
nop
and
push
cs
jmp
fwait
adc
icebp
iret
add
add
jecxz
mov
mov
inc
icebp
dec
inc
cmp
inc
sbb
scas
or
or
sbb
xchg
xor
mov
mov
test
ins
stos
int3
push
lock
cmp
pop
dec
or
mul
push
lods
in
test
dec
cld
mov
ret
ror
(bad)
out
jmp
pusha
sbb
call
mov
ret
and
out
nop
lds
or
cmc
pop
rcl
jo
movs
inc
sbb
(bad)
js
mov
cmp
test
sub
cmc
jge
sub
jle
xor
xchg
xor
mov
inc
fistp
pop
fmul
cdq
in
jb
loopne
in
inc
movs
xchg
mov
mov
mov
cmp
in
cmp
xor
or
aad
push
mov
lods
pop
add
cld
mov
jecxz
xchg
das
cmps
pop
and
repz
mov
pop
cmp
or
xchg
push
enter
or
leave
ss
repz
push
add
in
fwait
scas
imul
push
in
daa
arpl
outs
fistp
sub
xchg
xchg
xchg
cmp
or
inc
and
adc
and
jecxz
fidiv
clc
loope
cld
dec
jne
aad
stos
retf
cwde
push
inc
test
jmp
push
dec
les
sbb
add
inc
out
addr16
sub
in
rcl
push
xor
mov
daa
ret
outs
dec
xor
lea
dec
test
ins
pop
call
scas
shl
push
pusha
out
mov
jp
dec
sub
sub
add
dec
xlat
push
xchg
pop
mov
adc
mov
xchg
ret
mov
lods
dec
aas
sbb
mov
pop
pop
fdivr
sub
mov
cdq
sti
inc
fwait
adc
mov
xchg
mov
dec
mov
mov
push
lods
mov
xchg
inc
dec
mov
xor
leave
scas
xor
mov
imul
dec
repz
call
imul
or
xchg
in
sub
stc
xchg
and
dec
mov
adc
sti
bound
cmp
test
(bad)
out
jns
mov
enter
cmp
sbb
pop
pop
add
pop
sbb
je
ins
ss
ret
inc
cmp
adc
pop
cmp
add
test
nop
push
inc
xchg
int3
adc
and
inc
(bad)
dec
jo
mov
cld
int3
dec
(bad)
icebp
add
adc
test
jp
inc
ins
sub
xor
stos
int
sub
mov
xchg
ja
popf
out
ret
xchg
es
xchg
aad
fwait
cmp
pushf
xchg
adc
fnstcw
lods
mov
(bad)
xchg
dec
xor
pop
mov
addr16
loop
dec
mov
sub
cld
fwait
push
movs
pop
push
and
mov
fdiv
push
sub
pop
(bad)
stc
cmp
scas
and
dec
mov
or
(bad)
adc
nop
xchg
pop
outs
(bad)
fadd
test
test
mov
pop
push
mov
sar
xchg
loop
fwait
nop
inc
stc
adc
(bad)
mov
mov
vmovntdq
push
scas
loope
(bad)
cmp
out
push
sub
inc
stos
sub
and
mov
jmp
lods
popa
push
sub
and
(bad)
push
out
dec
outs
fnstsw
mov
movs
inc
int
fstp
push
or
pop
rol
adc
(bad)
cld
int3
xchg
scas
sbb
(bad)
in
sbb
sbb
leave
rol
lock
fimul
int3
xchg
add
rcl
popf
lock
push
(bad)
shl
cld
ja
and
xlat
dec
call
and
dec
sbb
iret
ror
aad
int3
jno
clc
lea
les
mov
fucom
clc
retf
stos
adc
loopne
in
jns
jl
jl
mov
je
xchg
mov
std
jbe
mov
add
push
mov
and
adc
cdq
gs
(bad)
fbld
mov
(bad)
dec
and
icebp
pop
mov
mov
pop
out
inc
data16
inc
hlt
(bad)
push
scas
test
adc
mov
int3
push
jne
popf
pusha
mov
arpl
loope
cmp
adc
mov
xlat
xchg
or
imul
mov
test
mov
mov
lods
pop
lods
pop
cmp
jns
xor
xor
or
sub
repz
mov
popa
fcomp
mov
cmc
loopne
cli
mov
out
imul
punpcklbw
cmps
shr
adc
push
fwait
fwait
add
inc
inc
(bad)
adc
push
aad
adc
push
or
xchg
hlt
ds
in
mov
or
or
mov
jbe
and
jmp
fwait
aam
mov
jo
mov
rcl
mov
push
dec
pop
pop
mov
adc
mov
idiv
mov
xchg
and
outs
mov
dec
dec
retf
pop
mov
mov
lods
mov
sbb
minps
mov
mov
or
jecxz
int
xchg
pop
aaa
sub
sbb
aad
lds
adc
clc
or
ins
inc
div
es
(bad)
pop
es
and
push
out
popf
or
mov
jo
hlt
movs
push
inc
fcmovnbe
xchg
imul
fidiv
scas
cdq
adc
hlt
out
push
in
jne
(bad)
mov
pop
add
ficom
dec
add
jo
or
stos
loopne
xor
inc
jp
cdq
push
es
xor
ds
(bad)
push
ret
ss
jmp
jg
adc
cwde
and
aad
int3
jne
dec
sub
xchg
ret
mov
outs
add
in
push
push
sub
xchg
adc
or
rol
cmc
retf
test
xchg
imul
mov
int
push
mov
pop
dec
aam
sbb
repz
shl
sbb
mov
es
xor
pop
fwait
aam
outs
xor
cmp
clc
xor
out
push
inc
xor
mov
pop
(bad)
mov
xor
push
add
ins
(bad)
xor
adc
in
outs
into
pop
imul
dec
ja
dec
stos
adc
ins
mov
rol
rcr
xor
cmp
mov
jmp
ins
lahf
in
loope
dec
xor
add
cmp
pop
call
cmp
cld
and
sub
popf
sub
fwait
cmp
seta
adc
pop
popa
mov
je
sub
mov
jo
xor
xchg
in
(bad)
jo
pop
xchg
cmp
add
dec
jecxz
push
stos
imul
ja
pop
sub
inc
pop
out
xchg
jle
adc
aam
jno
lods
cld
or
movs
cmps
push
lods
dec
sub
mov
push
lahf
mov
sub
xor
add
sub
jne
adc
push
cld
and
shl
movs
and
xchg
mov
pushf
sahf
ins
cmp
and
xor
fdivr
and
movups
add
pop
iret
pop
(bad)
test
into
pop
scas
idiv
mov
sti
mov
sub
(bad)
(bad)
push
stos
xchg
idiv
pop
mov
and
rol
inc
js
scas
mov
mov
or
mov
xchg
gs
adc
sahf
push
add
cmp
pop
(bad)
sbb
mov
pop
add
(bad)
rcl
jl
enter
ror
imul
mov
inc
fild
cmps
and
(bad)
push
int
sub
or
iret
pop
mov
jno
hlt
dec
cmp
fwait
xchg
dec
jno
imul
xor
push
cmc
fs
repnz
sub
xchg
jle
cmp
add
jecxz
dec
dec
movs
mov
outs
mov
jmp
and
xchg
sbb
shl
cmp
out
hlt
mov
retf
xchg
out
retf
mov
dec
cmc
xlat
scas
popf
mov
lods
loop
(bad)
mov
mov
sbb
push
hlt
sub
mov
push
inc
and
stos
xor
push
pop
dec
ins
inc
clc
jmp
jmp
lahf
mov
adc
(bad)
(bad)
mov
mov
in
jl
push
mov
mov
retf
cwde
or
gs
adc
cmps
mov
mov
data16
mov
aas
retf
outs
jno
cmps
xchg
(bad)
jno
dec
cmp
imul
push
sub
xchg
sbb
mov
mov
cdq
pop
jnp
xchg
push
hlt
pushf
adc
mov
xor
jge
(bad)
in
add
repz
jae
sub
outs
movs
stos
xor
int
enter
sub
jno
and
cmp
cli
sbb
out
mov
lea
test
inc
test
pop
push
jns
addr16
cs
nop
cmps
jo
inc
cmp
into
iret
xchg
test
sub
xlat
test
int3
adc
sbb
imul
or
mov
movs
sbb
inc
xchg
dec
sar
test
lock
jns
xchg
dec
dec
jmp
push
jmp
jnp
xor
xor
fwait
sub
fidiv
mov
stos
repnz
stc
rol
test
stos
mov
mov
sbb
cdq
stos
lea
movs
add
and
cmps
test
mov
pusha
sub
push
inc
adc
mov
popf
rcl
test
sti
xor
jne
mov
movs
push
ds
(bad)
(bad)
fadd
push
cmps
or
jbe
ins
cmps
jl
mov
imul
xchg
repz
int
int
xchg
mov
pop
sbb
int3
cmp
call
stc
mov
push
mov
mov
and
and
stc
clc
bound
cmp
scas
mov
mov
(bad)
mov
xlat
out
test
mov
push
dec
gs
rcl
mov
popf
cdq
jle
mov
mov
dec
or
test
push
jmp
pop
jb
inc
and
arpl
(bad)
adc
and
mov
sbb
div
xor
into
cwde
inc
sahf
ret
mov
push
pop
dec
in
mov
fwait
jge
int3
(bad)
cs
inc
pop
es
xchg
mov
fcomp
outs
mov
ffreep
ret
in
add
daa
push
cld
cmp
push
shl
sub
fldenv
cmp
pusha
mov
repnz
sub
jmp
jle
rcl
inc
fisubr
jns
jb
xor
or
mov
xchg
(bad)
sbb
cmps
dec
push
jl
push
fmul
aaa
mov
push
imul
push
adc
(bad)
inc
daa
int
jo
sub
push
out
push
xor
or
xchg
mov
inc
jmp
sub
into
jmp
das
unpcklps
div
adc
shl
dec
add
dec
(bad)
or
rcl
xor
sti
adc
rdtsc
adc
mov
push
jns
loopne
inc
inc
mov
sbb
loop
pusha
mov
fiadd
pop
sub
adc
mov
xchg
dec
and
out
ret
cmp
js
adc
mov
jmp
cmps
call
sbb
xchg
retf
xchg
shrd
mov
rcl
adc
xor
xor
jnp
loope
ja
sbb
popf
xor
ror
jge
mov
imul
and
sub
rol
dec
dec
mul
ret
mov
in
lods
mov
or
std
int
cld
loop
jb
and
xchg
cmc
push
sub
test
jne
ss
jno
mov
aad
mov
lea
dec
pop
mov
in
xchg
jne
mov
lods
mov
mul
dec
stos
mov
es
outs
or
sbb
test
inc
inc
rcl
mov
mov
cmc
push
div
xchg
sbb
push
add
mov
rcl
sbb
xchg
(bad)
mov
jle
and
and
in
retf
scas
sub
push
lock
mov
cs
fisttp
clc
sub
les
out
push
pop
mov
jp
mov
lods
jmp
xchg
cmps
mov
jg
adc
sub
mov
or
push
add
fwait
inc
pop
xor
pop
dec
pop
adc
(bad)
retf
dec
sbb
in
outs
jbe
ror
fwait
sbb
mov
jo
xor
mov
dec
mov
inc
lds
mov
ret
(bad)
sti
mov
cmp
popa
push
rcr
inc
imul
ja
scas
jae
adc
cld
mov
fbld
outs
ins
add
push
icebp
ficomp
xchg
mov
pop
jl
mov
mov
mov
xor
ins
lods
push
dec
data16
adc
inc
mov
test
pcmpgtb
in
icebp
cmps
push
mov
arpl
cwde
or
xchg
cs
fisttp
jns
mov
lock
imul
dec
jecxz
pop
push
je
mov
cs
push
loope
ret
shr
bound
or
inc
ret
cmc
inc
adc
retf
clc
xor
sub
aad
(bad)
push
out
movs
xchg
lds
jne
xor
imul
dec
sub
push
jnp
es
jb
scas
fs
inc
xchg
fsubr
mov
ror
jns
ret
xchg
cmp
mov
mov
jp
inc
fisttp
mul
(bad)
jne
xchg
cmp
mov
rcr
call
lea
cwde
cmps
jb
enter
add
pop
jp
jbe
mov
and
jmp
jg
mov
add
retf
pop
aaa
sub
in
push
sar
mov
retf
es
push
aad
mov
sbb
sub
cmp
iret
call
leave
pushf
adc
fiadd
or
inc
cmc
hlt
out
ins
mov
fdivr
movs
popf
xchg
sbb
imul
dec
rcl
retf
addr16
push
retf
xor
and
(bad)
or
ficom
scas
jne
mov
adc
std
test
and
sub
jb
shl
imul
jp
jns
push
pop
test
int3
dec
pop
enter
enter
jmp
xlat
pop
inc
pop
jmp
push
xchg
push
add
mov
(bad)
adc
xchg
sub
jle
cmp
fwait
dec
or
ror
je
pop
inc
push
xor
and
jbe
push
xchg
shl
mov
pop
shl
inc
pop
hlt
nop
pop
cld
jle
mov
mov
dec
push
(bad)
and
mov
mov
movs
out
test
hlt
sub
dec
lahf
jg
loope
rol
add
jns
or
jnp
or
fsub
retf
cmc
in
sbb
ins
das
pop
push
add
out
sbb
out
sbb
cmc
test
jns
repnz
fisttp
push
es
xchg
outs
(bad)
xchg
dec
lahf
shl
pop
mov
rol
xor
pop
jecxz
pushf
cli
push
cwde
rcr
in
or
or
stc
cmp
cmps
mov
cmps
cmp
sar
push
mov
(bad)
xchg
pop
dec
jg
mov
enter
nop
push
pop
jo
xchg
or
or
mov
mov
out
sahf
xor
xor
clc
push
ins
sub
in
and
cs
jne
outs
cmps
pusha
lods
xor
bound
and
(bad)
xor
inc
add
xor
(bad)
fwait
or
stos
xchg
aam
pop
pop
jmp
cmp
mov
out
sub
push
cmovne
pop
fidivr
and
mov
xor
xchg
shl
cmp
cmp
mov
push
jl
mov
and
or
xlat
pop
xor
pushf
xchg
sub
adc
adc
and
jo
lea
or
xchg
xor
mov
mov
pop
enter
sbb
pushf
(bad)
cmp
shr
mov
or
adc
push
push
pusha
test
mov
sub
xchg
pop
sbb
or
cli
dec
push
sbb
sub
mov
lea
xchg
push
jo
dec
lahf
mov
xchg
push
or
out
mov
call
out
cmp
sub
xchg
cmp
sbb
push
pop
push
hlt
shl
(bad)
aaa
pop
sbb
int3
test
mov
sar
retf
add
mov
push
add
lods
shr
cwde
leave
hlt
and
shr
xor
loope
mov
xchg
test
xor
mov
mov
cs
or
in
aad
xor
pushf
mov
es
push
neg
fmul
dec
sub
dec
fimul
sub
cmp
xor
sub
inc
dec
inc
xchg
fstp
retf
mov
enter
stos
xor
cmc
test
outs
pusha
or
rol
clc
push
mov
mov
cli
ins
scas
enter
mov
mov
inc
mov
ds
inc
sub
dec
aam
mov
dec
pop
sahf
dec
push
test
test
jb
or
les
mov
rol
enter
add
shl
and
das
iret
or
push
retf
icebp
pop
out
sar
pop
lock
jne
and
mov
push
mov
inc
aaa
and
loop
and
les
pop
std
xchg
jecxz
jl
shl
sub
ss
mov
jle
cmps
aam
retf
sub
outs
mov
pop
xchg
pop
jg
inc
mov
dec
dec
ds
xchg
es
xchg
xor
pop
add
sbb
jl
push
mov
out
cld
aam
sbb
adc
dec
ins
push
(bad)
cmp
xchg
mov
adc
mov
dec
(bad)
mov
ja
into
lds
fisub
adc
cmp
or
fs
push
aam
mov
je
jmp
pusha
nop
add
pusha
jmp
xchg
in
xchg
xchg
cmp
pop
mov
push
in
lods
aam
lea
sub
fs
into
pop
mov
inc
je
ffree
xchg
stos
or
test
sti
stos
cli
mov
pop
(bad)
push
and
retf
xor
mov
movs
es
cmp
jp
mov
fcomp
das
xchg
neg
and
fisub
aas
shl
popa
(bad)
in
lock
jbe
and
cmp
add
sar
mov
add
test
out
ja
je
push
mov
xchg
mov
pop
mov
nop
sub
pusha
or
ret
fnsave
cmc
fcomip
inc
or
iret
ror
cmps
stos
push
jnp
or
pop
pop
call
sbb
jl
fs
dec
fidivr
hlt
push
jmp
retf
mov
enter
xchg
lods
(bad)
loope
test
mov
add
mov
cmp
jmp
push
cdq
and
sub
call
sub
stc
(bad)
dec
cmp
imul
call
stos
push
sbb
aad
js
mov
jp
cmp
mov
sbb
mov
sahf
ins
cmp
aaa
mov
push
cmps
aad
push
prefetchnta
inc
sub
sub
paddw
(bad)
fmul
pop
pop
stos
stos
mov
shl
or
sbb
mov
fisubr
into
into
pusha
inc
sbb
mov
clc
dec
adc
(bad)
mov
mov
adc
xor
dec
sub
and
pop
pop
mov
sub
cmp
jnp
push
and
icebp
jo
(bad)
retf
icebp
out
sbb
mov
fild
cwde
std
or
daa
xchg
jbe
imul
ds
pusha
fxch
jns
sar
cmp
iret
mov
pop
dec
retf
cmp
pop
push
leave
cmps
fcmovu
je
jbe
loop
or
add
push
out
fisubr
mov
outs
push
pop
pop
inc
out
ficom
(bad)
mov
data16
mov
mov
js
add
mov
cmp
mov
mov
pop
repz
fld
sub
sub
aas
ret
sub
jle
pop
jnp
jp
sub
in
push
xchg
xchg
adc
shr
sub
sahf
es
push
call
push
cmps
retf
ret
pop
push
inc
hlt
mov
pop
mov
push
(bad)
out
lods
sub
cmp
in
hlt
mov
xor
lds
cmps
add
bound
sbb
push
test
jmp
clc
fwait
rol
mov
sbb
dec
pop
jo
test
enter
popf
mov
adc
cwde
mov
sub
sub
and
mov
push
cmp
dec
cdq
cwde
dec
(bad)
pop
xor
sub
xor
push
mov
fst
ja
dec
and
adc
pop
sub
push
loop
movs
loop
jecxz
(bad)
gs
imul
adc
out
(bad)
std
test
nop
sub
cmp
jmp
push
xchg
xchg
aam
daa
mov
xlat
pusha
je
push
scas
cmp
shl
popf
mov
out
dec
jnp
push
pop
sub
sbb
jg
jg
loope
aad
pop
sbb
and
loopne
ds
or
push
jp
mul
adc
mov
mov
call
in
adc
mov
cmp
(bad)
push
sub
xor
in
add
(bad)
jl
push
sbb
cmp
jb
fdivr
cdq
jnp
jno
out
jmp
fnstsw
pop
popf
movs
jge
repnz
xchg
mov
jno
add
inc
xchg
addr16
and
neg
adc
gs
je
ins
std
add
fmul
cmc
loopne
jmp
sti
fs
fnstcw
out
neg
test
jbe
mov
sbb
add
sub
mov
stc
fistp
(bad)
aad
cmp
fist
xchg
fcmovb
ins
inc
in
rcr
mov
jbe
loopne
jmp
xchg
ficom
dec
les
pop
mov
test
lods
aas
inc
jb
icebp
push
dec
jecxz
das
jmp
aam
nop
jecxz
jp
push
adc
das
test
inc
add
lds
fsub
leave
cmp
push
sub
push
lea
lods
int3
dec
leave
loopne
scas
dec
mov
dec
sub
fsub
imul
popa
jg
add
daa
inc
or
mov
lods
popf
imul
xchg
cmp
sbb
scas
xchg
fild
test
jns
inc
into
jbe
mov
retf
cmp
loopne
pop
imul
(bad)
adc
in
lods
outs
les
mov
mov
je
xor
jl
cmp
xlat
mov
add
sbb
sbb
fsubr
or
inc
cwde
daa
stc
nop
pop
cmc
(bad)
push
and
test
sub
test
jle
cmc
cdq
dec
lock
sub
dec
jp
adc
pop
std
sub
mov
and
jns
lea
in
nop
pop
mov
in
div
jbe
adc
push
sbb
outs
shl
bound
sbb
rcl
ret
fsubrp
inc
cmps
mov
adc
jnp
scas
repnz
xor
scas
lods
movs
adc
dec
mov
daa
mov
js
shl
jp
push
jmp
ins
mov
mov
inc
jp
cmps
adc
cmp
xchg
adc
jns
push
mov
les
cdq
(bad)
mov
cmps
aad
mov
test
(bad)
or
mov
cmp
int
jo
xor
lods
inc
sub
adc
xchg
pop
je
retf
pop
adc
pop
mov
imul
lods
mov
out
lock
pop
aam
push
push
and
les
scas
imul
movs
and
push
adc
popa
or
(bad)
or
dec
test
sbb
inc
mov
pop
mov
or
inc
sub
pop
movs
std
(bad)
mov
test
fbstp
out
movs
mov
aaa
out
mov
call
xor
(bad)
call
pushf
test
fild
cmp
imul
fwait
rcl
(bad)
jmp
push
jns
mov
ins
inc
call
fbld
cmp
push
std
add
xor
not
push
pop
movs
push
addr16
dec
push
shl
add
adc
lods
fst
push
push
lds
psadbw
test
sub
stos
iret
cmp
jae
cmp
aaa
pop
push
pusha
ret
test
pop
xchg
mov
(bad)
in
and
hlt
ret
pusha
xor
outs
inc
inc
enter
add
outs
out
mov
push
or
stos
retf
repnz
fucomi
ret
mov
mov
dec
ss
push
mov
fwait
pop
fldenv
not
sbb
ds
int3
sub
scas
fild
cmps
vsqrtsd
popa
mov
push
lods
(bad)
push
fild
test
fldln2
inc
cwde
xchg
aas
xor
dec
int3
(bad)
push
cdq
(bad)
mov
pop
(bad)
mov
mov
dec
adc
or
jno
xchg
scas
sar
dec
js
test
cmc
xchg
sub
rcr
mov
lods
icebp
lea
adc
pushf
xor
push
add
fmul
popa
scas
cmp
rcl
es
and
jmp
pop
xchg
xor
into
(bad)
outs
out
clc
fdiv
loope
fstp
cmp
sbb
cwde
pop
(bad)
loope
ja
mov
outs
mov
in
fimul
xchg
je
xor
or
adc
leave
pop
inc
inc
shr
or
stos
jmp
pop
cmps
pop
retf
mov
pop
xor
test
outs
adc
(bad)
ss
cmp
(bad)
lds
pusha
fsub
das
and
mov
cmp
mov
xchg
pop
je
sbb
mov
sar
aad
push
sub
fld
or
sub
xchg
clc
sbb
les
repnz
or
sub
icebp
sbb
xchg
out
mov
sbb
xor
test
push
(bad)
aam
push
xor
bound
mov
(bad)
js
fs
or
jne
or
ja
xchg
xor
rcr
dec
pop
inc
mov
jmp
rol
icebp
fs
push
push
sub
adc
pop
mov
add
enter
jmp
ficomp
xchg
call
test
mov
and
mov
call
adc
test
jb
lods
fld
icebp
scas
pop
stos
jmp
cdq
out
xor
test
in
mov
mov
push
push
xchg
xor
fsub
bound
cld
jp
stc
mov
ret
sub
jmp
jge
jl
pop
dec
fwait
dec
popa
in
jo
mov
xor
ja
aas
mov
mov
inc
sbb
push
push
cmps
dec
jmp
cdq
lods
fist
iret
sub
iret
stos
dec
addr16
cmp
cmp
fistp
rcl
and
jge
cmps
or
lds
xor
and
jns
test
xor
je
addr16
xchg
cs
mov
imul
gs
neg
pcmpgtw
pop
mov
jae
in
(bad)
or
sahf
fcom
loop
mov
and
push
sar
dec
leave
inc
sbb
movs
adc
mov
ins
jbe
mov
(bad)
push
cs
pop
cmp
mov
lds
push
out
mov
stos
inc
push
mov
adc
repnz
stos
mov
pop
xchg
rcr
cmp
push
(bad)
or
mov
adc
adc
loope
mov
and
sahf
test
ins
(bad)
lock
lahf
mov
in
out
inc
xor
lea
pop
pop
das
or
call
mov
ins
cmc
push
xchg
test
mov
sti
and
add
cld
jmp
test
jle
in
add
jae
sbb
imul
fcom
lock
dec
dec
ret
pop
pop
and
add
aad
mov
jnp
xchg
and
call
loop
cli
mov
sbb
ficom
(bad)
js
jg
lahf
stos
dec
mov
ins
mov
adc
and
cmp
push
push
in
ins
bound
shr
mov
es
test
cmc
and
add
adc
sub
je
or
add
mov
xor
std
xchg
pop
test
add
cdq
xchg
sti
imul
xchg
fimul
data16
daa
mov
inc
in
cmps
sahf
jmp
in
mov
adc
mov
lods
aad
call
jo
jmp
pop
sub
fucomi
xor
pop
or
mov
imul
push
mov
xlat
call
pop
das
sub
adc
mov
repz
imul
fnsave
jnp
and
and
arpl
lods
pusha
test
adc
xchg
jbe
sub
stc
push
inc
int
xchg
icebp
scas
mov
or
ins
sub
jl
inc
inc
int
push
repnz
aaa
pop
pop
and
mov
and
add
jno
fwait
and
lods
sti
mov
test
in
or
mov
add
xor
pop
mov
adc
add
xchg
mov
inc
movs
jbe
stos
sbb
dec
jnp
adc
bound
in
ror
fcmovu
cmps
xchg
mov
push
bound
dec
push
fild
test
mov
cmp
test
cmc
sub
push
push
shr
movs
xor
nop
pop
(bad)
xlat
dec
cs
or
mov
ret
je
call
xor
adc
pop
inc
sar
dec
push
and
push
fwait
clc
pop
into
mov
gs
movs
nop
ins
(bad)
adc
xor
mov
in
inc
mov
mov
call
pusha
and
(bad)
neg
xor
push
loop
xchg
test
mov
jbe
and
(bad)
and
push
ret
das
int3
mov
mul
mov
mov
retf
jle
sbb
loop
cs
pop
neg
pop
mov
je
shl
daa
imul
xchg
dec
jl
push
push
mov
div
sbb
aas
dec
mov
ja
les
out
lock
dec
movs
push
xchg
(bad)
(bad)
in
push
cli
je
sub
and
fmul
pushf
sub
jl
inc
in
sbb
fldcw
push
scas
mov
and
sbb
inc
dec
test
(bad)
or
lock
sti
jae
mov
and
loop
push
cmps
test
enter
push
xchg
or
and
jecxz
and
push
arpl
jo
and
sbb
and
dec
pop
cmp
rcl
mov
mov
lods
dec
cs
pop
das
mov
or
fbstp
popa
iret
dec
in
jge
fcmovu
jge
pusha
xor
idiv
jl
stc
xor
fsubr
mov
xchg
test
mov
push
aas
mov
leave
pop
sbb
outs
jb
xchg
add
(bad)
shl
loope
fdiv
shr
ds
frstor
rol
cmovp
push
xchg
out
aam
sbb
jmp
push
and
(bad)
jge
pop
sub
add
in
movs
icebp
sub
xchg
loop
sti
je
pop
xchg
lea
stos
and
js
add
(bad)
mov
mov
inc
es
cmp
push
fbld
xor
xor
xchg
fcomp
popf
es
jge
aaa
jp
sub
icebp
test
push
stos
or
xchg
fwait
jmp
into
jmp
xlat
jmp
out
dec
(bad)
cli
imul
pop
cmps
mov
pop
jg
test
jno
mov
mov
retf
dec
add
clc
(bad)
cmp
push
call
inc
clc
or
xor
mov
retf
fidiv
jne
or
ret
mov
sub
cld
stos
sub
and
cmp
mov
das
in
ret
cmc
jb
inc
push
shr
mov
mov
xchg
cs
add
cmps
inc
ss
inc
pushf
hlt
xor
lods
jp
sbb
or
adc
cwde
dec
cmps
jge
push
push
ds
pop
push
ficom
xor
(bad)
stc
cli
enter
pop
and
xor
add
push
pop
inc
in
pop
stc
into
adc
sahf
mov
aas
mov
fiadd
pop
xchg
popa
in
push
xchg
and
mov
fidivr
in
push
mov
scas
sub
mov
mov
mov
mov
or
push
stos
int3
cli
mov
mov
cmp
inc
cmp
dec
std
aam
inc
add
fcomp
mov
ror
(bad)
clc
add
in
repnz
jmp
add
dec
popf
sbb
aad
out
les
inc
dec
aas
mov
iret
mov
jo
dec
call
movs
ficom
mov
pusha
push
pop
sbb
popf
icebp
sub
push
add
ret
push
jecxz
shr
jle
sub
cmp
push
(bad)
jp
xor
iret
xor
pop
add
push
ds
pop
pop
ins
xchg
mov
jle
push
and
fist
adc
ret
mov
inc
push
jmp
daa
xchg
adc
and
inc
cwde
movs
adc
aam
fldenv
push
inc
and
out
neg
mov
ins
(bad)
out
mov
mov
mov
or
push
adc
scas
mov
rcl
(bad)
pop
imul
push
(bad)
fimul
xchg
lahf
je
or
mov
pushf
cli
or
lds
sar
leave
outs
jnp
fsub
sub
div
fdivrp
neg
int
cmps
dec
mov
das
cmp
mov
int
imul
inc
pop
call
adc
mov
pop
nop
and
push
adc
jmp
add
(bad)
neg
sahf
cmp
mov
lahf
retf
aaa
adc
sahf
imul
iret
inc
mov
add
shl
ins
or
push
sbb
xchg
nop
mul
mov
mov
push
les
push
sbb
and
fcmovb
sbb
push
pop
push
xchg
and
icebp
ja
or
add
sbb
or
into
loopne
cmps
cmp
add
cld
inc
sbb
retf
rol
fiadd
(bad)
ds
gs
fadd
mov
mov
or
cld
aas
(bad)
popa
popf
rol
inc
outs
jmp
jae
sbb
fs
mov
test
in
int
shl
call
cmp
or
push
pop
in
lods
sbb
xchg
mov
jle
mov
dec
mov
xchg
lds
(bad)
mov
ret
fs
jge
dec
shl
mov
jbe
mov
fdivrp
loop
popa
push
mov
push
dec
mov
mov
mov
scas
test
cwde
es
cld
out
outs
call
pop
rcr
int3
add
lds
aaa
rol
fwait
mov
rol
xchg
cmp
sub
fld
mov
mov
test
fdivp
cmovne
sbb
and
pop
outs
in
cs
shl
cmp
fld
xor
scas
inc
je
(bad)
fs
sub
xor
dec
push
xchg
div
call
call
sbb
inc
mov
cmp
jns
hlt
and
push
test
fsub
mov
test
std
mov
fsub
int3
mov
pop
inc
pop
aam
shl
dec
cdq
pusha
stos
cld
mov
jecxz
lock
ins
mov
cmp
leave
or
outs
add
ins
inc
imul
ficom
iret
and
pop
mov
call
fld
call
jg
xchg
adc
movs
add
push
ja
arpl
jp
gs
mov
and
mov
push
call
rol
das
test
mov
scas
mov
jp
add
popa
sub
or
das
add
(bad)
clc
adc
mov
retf
bound
bnd
mov
fdivr
cmp
(bad)
retf
repz
in
jae
pop
ret
pop
stos
sub
scas
xchg
pop
mov
mov
or
jns
add
call
mov
daa
sbb
ret
aas
inc
imul
shr
and
jmp
pop
sbb
mov
dec
cmp
enter
call
jg
inc
lds
gs
lds
xor
sar
cmp
cmp
xlat
dec
shr
mov
sub
sbb
dec
push
cmp
cmp
sahf
push
jb
mov
fwait
lahf
sub
xchg
test
xor
adc
fdecstp
fist
call
jl
dec
dec
cmc
or
je
je
retf
daa
aam
sbb
mov
pusha
sbb
push
push
clc
sub
in
aaa
add
push
or
sub
rcl
ins
pop
in
aaa
retf
push
pop
mov
jae
test
movs
leave
pop
push
out
popa
jbe
jb
movs
jmp
pop
stos
es
sub
inc
xchg
fistp
and
ja
fisub
in
mov
mov
xchg
push
sti
call
(bad)
idiv
loopne
mov
cmp
xor
xchg
dec
sbb
xchg
(bad)
and
ins
mov
mov
or
dec
xor
iret
aaa
or
call
int3
not
dec
sbb
adc
mov
push
push
pop
jmp
cmc
in
push
iret
inc
shl
push
aas
leave
xchg
fsub
inc
adc
scas
loop
cli
loopne
sar
pop
jmp
sub
mov
cld
pop
lahf
cld
add
sub
ins
and
xor
push
mov
(bad)
mov
cmps
push
test
outs
(bad)
fisub
fs
push
add
rcr
xchg
and
shl
jmp
fnstsw
shl
aad
retf
cwde
out
adc
push
jo
cmp
mov
hlt
cmp
push
das
popf
(bad)
scas
mov
or
cli
adc
repz
cmp
or
arpl
or
jno
cld
movs
and
and
push
dec
stos
ret
nop
clc
dec
shl
push
dec
int
stos
loopne
cmp
sub
cmp
mov
add
add
xor
lods
and
out
and
aam
pop
mov
sahf
es
mov
and
inc
mov
and
mov
or
pop
mov
ins
mov
(bad)
fidivr
fadd
dec
sbb
ror
or
in
mov
push
and
mov
fiadd
iret
sbb
mov
loope
adc
mov
jnp
gs
mov
scas
inc
mov
sub
aaa
int
test
and
in
cli
dec
aad
jp
es
xor
and
cmp
or
(bad)
xor
jecxz
jno
mov
mov
scas
pop
mov
shl
inc
mov
mov
inc
adc
(bad)
xor
and
mov
jb
sahf
push
mov
sar
pop
in
loopne
inc
shl
out
ror
pusha
loopne
xlat
ins
jno
sbb
ret
cmp
and
ja
call
mul
jo
shl
in
push
push
dec
sbb
sbb
mov
nop
pop
add
pop
inc
int
iret
(bad)
jg
or
xchg
mov
(bad)
std
jo
mov
adc
rcr
mov
inc
xchg
xchg
leave
pop
movs
push
cmp
cdq
push
mov
in
push
cmps
xchg
mov
cdq
xor
and
mov
mov
(bad)
(bad)
loopne
out
(bad)
(bad)
push
push
fld
push
icebp
inc
add
shl
fs
das
cmp
mov
arpl
push
nop
sar
mov
inc
add
push
inc
xchg
xchg
sbb
adc
cmps
(bad)
xchg
adc
push
stc
fistp
push
loope
icebp
pop
out
xchg
test
gs
cmps
fisubr
add
or
mov
loope
lods
dec
cwde
or
fsubp
push
jmp
fsub
in
(bad)
retf
jle
ins
push
es
push
(bad)
push
inc
test
mov
adc
test
bound
pop
xchg
dec
sbb
shl
lds
cwde
pop
sbb
fucom
nop
std
mov
lock
ret
sbb
js
pop
xor
mov
lock
xchg
ss
sbb
dec
xor
dec
mov
popa
(bad)
repnz
out
loop
sahf
icebp
daa
clc
jg
jno
int
push
cli
mov
mov
sbb
leave
ja
push
mov
fstp
xor
pop
out
jae
mov
and
pop
sbb
jbe
(bad)
sbb
mov
mov
inc
js
pop
das
dec
addr16
imul
or
in
add
or
movs
lock
in
lods
or
ret
mov
xchg
fimul
scas
cwde
sti
cld
addr16
sub
cmps
add
inc
popa
cmc
ss
mov
mov
jbe
or
push
push
xor
outs
jns
sti
je
bound
shl
inc
cmp
lock
sub
ins
loopne
xchg
inc
xlat
pop
daa
in
cmps
dec
push
shr
adc
stos
xchg
add
aam
and
sar
mov
mov
pop
outs
je
ret
mov
jl
pop
push
adc
mov
or
stos
xor
mov
(bad)
ja
push
mov
add
xchg
fwait
cmp
and
mov
div
sti
mov
in
lods
test
pop
xchg
xchg
push
popa
add
fsub
ret
jle
mov
jecxz
adc
cmps
and
int3
aad
add
ins
into
mov
aam
jl
in
sub
call
cmps
adc
push
xor
icebp
xor
mov
inc
ja
mov
or
cdq
popf
(bad)
int3
or
je
mov
das
or
fst
jp
pushf
ins
mov
and
fnsave
cdq
stos
ins
dec
push
mov
adc
xchg
jp
jp
jno
inc
ret
ret
aas
cmps
add
add
ins
mov
fisttp
cmp
push
add
jno
and
mov
lock
jl
mov
sti
jnp
sbb
cmc
shl
outs
mov
jns
std
xchg
rcr
fldenv
es
sti
mov
push
jae
bound
scas
jg
sar
ret
in
xor
test
pop
out
mov
je
cmp
cmps
mov
in
pop
add
jbe
xor
xor
pop
mov
mov
adc
out
dec
mov
jo
xor
sbb
dec
movs
(bad)
fst
das
push
mov
xchg
popa
in
adc
mov
push
daa
jae
inc
jmp
(bad)
sbb
cmp
rcl
out
aad
mov
cmps
es
int3
clc
dec
cmp
push
(bad)
shl
(bad)
cs
popf
aas
mov
outs
sbb
mov
adc
cli
cmps
movs
add
push
dec
xor
xchg
test
call
push
cdq
sub
iret
cs
mov
add
push
pop
xchg
push
dec
mov
bound
jp
and
sbb
xor
cld
cmp
mov
mov
mov
rol
loope
xor
xchg
fcom
cmp
xchg
and
lods
sub
jmp
pop
repz
mov
mov
das
jp
or
xor
cmps
call
add
gs
pop
or
rcr
jnp
movs
les
mov
inc
sub
inc
adc
sbb
retf
sub
push
sub
sub
pop
adc
imul
push
fidivr
leave
pushf
in
ins
sti
jp
jp
jb
and
xchg
and
inc
into
push
sub
imul
packssdw
mov
mov
mov
push
fsub
or
mov
mov
add
ret
cmp
push
xchg
push
gs
push
jp
(bad)
and
push
sbb
adc
mov
in
inc
daa
push
test
push
or
inc
and
sti
and
int
xor
leave
jnp
push
or
ror
xor
and
add
int3
adc
scas
add
jbe
xor
retf
sahf
jns
neg
push
cmp
pop
test
push
cmps
and
sub
inc
pusha
shl
pop
pop
fmul
sub
inc
or
or
sbb
test
inc
les
sub
xchg
pop
(bad)
pop
sub
jl
mov
sbb
add
xchg
iret
xchg
pop
cmp
mov
lea
mov
sbb
iret
sbb
inc
xchg
sahf
lock
lods
xchg
mov
cmps
ror
(bad)
int3
arpl
dec
std
push
mov
sar
inc
sub
rol
test
cmps
test
adc
mov
jb
(bad)
div
add
std
or
sub
adc
cmp
jae
or
pushf
test
cli
jge
xor
hlt
pop
jb
out
call
mov
cmp
adc
xchg
mov
out
sbb
ins
mov
je
lods
fnstsw
lods
adc
mov
and
sbb
and
and
mov
sub
je
push
mov
mov
call
call
retf
push
mov
(bad)
lldt
les
adc
call
sbb
dec
xlat
mov
push
mov
(bad)
xor
dec
pop
sub
aad
jae
inc
adc
add
mov
out
cdq
xchg
sets
sub
cld
test
xor
adc
stos
push
inc
xor
repz
mov
dec
xchg
sub
inc
xchg
inc
mov
aam
xchg
or
movs
jp
and
std
jl
add
rcl
movs
mov
jbe
jnp
sub
mov
xchg
push
call
cmp
mov
jnp
ror
inc
jb
adc
cmp
cmp
xlat
mov
shl
jae
loop
adc
add
leave
xor
jbe
jae
outs
addr16
ret
or
sub
cmc
push
mov
mov
fwait
enter
jno
add
in
pop
pop
mov
fsubr
nop
retf
jne
sub
out
out
cdq
sub
pop
mov
ja
pushf
mov
push
cmps
test
xchg
mov
std
dec
and
cs
(bad)
psrld
jb
push
push
aam
and
jnp
je
xchg
stos
mov
das
mov
(bad)
rcl
ins
bound
push
xchg
ficom
xor
jb
clc
ja
mov
sti
test
jbe
push
les
sahf
mov
mov
jmp
add
std
push
mov
addr16
sti
loope
mov
xor
sub
add
mov
sbb
add
fstp
neg
push
ret
xor
inc
fst
fwait
das
mov
ret
add
mov
sub
pop
fwait
in
fwait
leave
xchg
push
clc
cld
mov
add
call
div
jns
(bad)
mov
and
xchg
xor
xchg
inc
adc
inc
cmp
cmp
jmp
jne
sub
xor
repnz
retf
jge
out
aad
fst
test
inc
cmc
xlat
arpl
mov
pop
rcr
fs
popf
xchg
inc
jg
dec
adc
mov
aas
hlt
addr16
dec
fild
aad
jecxz
stos
or
enter
push
retf
call
mov
lock
sbb
call
mov
lea
scas
shr
push
sub
pop
sbb
push
inc
adc
mov
rcl
or
fistp
adc
fstp
sub
push
xor
push
mov
js
repz
fsubr
xchg
mov
mov
mov
pusha
push
cmp
pop
jns
ins
push
mov
(bad)
ins
cld
out
lock
retf
test
xor
mov
js
scas
or
stos
mov
outs
scas
popa
xor
test
xchg
and
call
jmp
adc
je
into
cmp
call
mov
adc
jge
shr
test
inc
jns
adc
jns
adc
cwde
(bad)
pop
jp
lock
lds
popf
jmp
pop
call
mov
idiv
daa
jmp
mov
push
ja
mov
stc
push
mov
inc
cmp
es
and
fstp
or
aas
out
sub
push
push
movs
jge
adc
xchg
lea
imul
xlat
mov
inc
jecxz
out
dec
adc
mov
jbe
mov
rcl
jb
ficom
shl
jecxz
cmp
add
xor
test
mov
sub
xchg
rol
jg
out
ja
dec
mov
bound
mov
out
ret
cmps
scas
mov
mov
jne
mov
jb
xchg
je
sbb
cmp
cmp
ins
cmp
jle
ds
out
add
push
imul
mov
cmc
loopne
(bad)
jl
movs
test
cmp
ret
push
pop
int
push
mov
sbb
push
cwde
int3
pop
sti
mov
das
in
outs
dec
adc
xor
arpl
sub
jl
repz
pop
mov
or
pop
jo
sar
and
cmp
(bad)
cli
arpl
pushf
rcl
or
xchg
jle
adc
or
pop
sbb
xor
jo
push
sbb
loope
rcl
pop
(bad)
std
pop
aas
push
mov
jge
loopne
fwait
cmp
cs
add
shl
loopne
shl
and
outs
push
ficom
arpl
enter
mov
inc
loop
popf
jne
or
sbb
out
pop
dec
retf
pop
rol
das
mov
in
arpl
and
sub
pop
xor
xchg
ds
xchg
cs
pop
xlat
mov
fdivr
clc
add
arpl
or
sbb
scas
pop
sub
mov
pop
aas
or
lea
jp
dec
hlt
mov
(bad)
retf
mov
pop
out
jno
je
es
pop
jle
icebp
inc
inc
jbe
jmp
push
xchg
retf
lahf
sbb
push
push
add
xchg
outs
pop
and
dec
rol
mov
inc
test
sub
push
icebp
aaa
hlt
xor
pop
xchg
sbb
icebp
imul
and
push
sti
jmp
sbb
pop
push
dec
fadd
psubd
inc
std
das
mov
fist
push
push
xor
arpl
xchg
xlat
xchg
jns
and
(bad)
ror
dec
retf
fdivr
adc
and
data16
jno
imul
in
call
mov
sbb
or
stc
mov
jmp
sub
xor
mov
mov
out
(bad)
mov
or
mov
(bad)
push
xchg
cld
mov
adc
push
lahf
xor
push
test
sbb
push
(bad)
outs
test
mov
lahf
xor
mov
pusha
ret
stos
inc
sti
(bad)
jnp
stos
aaa
(bad)
or
mov
mov
pop
je
movs
sub
test
pop
add
jge
dec
cmp
and
xor
and
mov
xor
sub
adc
jp
pop
push
push
jns
mov
xchg
push
stc
loop
or
adc
push
outs
call
xchg
mov
mov
inc
ins
push
mov
adc
mov
sbb
mov
or
sar
lds
je
in
push
adc
jge
mov
sub
mov
shr
fwait
std
mov
pusha
cmp
in
sub
dec
adc
mov
(bad)
xchg
xchg
and
xor
sahf
sub
jle
adc
push
dec
clc
sar
loopne
out
lea
sub
jnp
in
stc
cmp
push
das
mov
imul
xchg
xor
and
(bad)
cmp
xor
adc
pop
xchg
js
test
pop
pop
jmp
iret
jp
or
push
cmp
fwait
xchg
cmc
add
cmp
mov
cmps
jmp
fisttp
xchg
imul
jmp
sar
sub
cmp
shl
sub
fist
pop
loop
fidiv
cdq
hlt
lock
jecxz
mov
cmp
in
shl
fadd
mov
(bad)
stc
or
rcr
adc
stc
int3
adc
jl
fsub
loope
cs
pop
cli
imul
cmp
ins
in
add
push
sbb
sbb
in
repz
popa
xor
dec
jo
dec
shl
fild
(bad)
cdq
cmp
fdivr
mov
ds
push
dec
shr
jne
imul
ins
pop
int3
jbe
push
fmul
jne
mov
hlt
scas
adc
pop
adc
cmp
xchg
in
mov
jp
inc
call
mov
ss
fwait
mov
mov
clc
inc
cmc
rcl
scas
and
int3
clc
aam
mov
mov
in
imul
pop
jae
pop
call
out
movs
in
mov
movs
movs
jb
sbb
dec
sbb
test
stos
cmp
pusha
outs
xor
mov
mov
adc
push
ins
rcr
ins
cdq
xchg
sub
sub
cmp
shr
push
mov
dec
sub
mov
aas
pusha
mov
pushf
jge
mov
out
cwde
arpl
pop
xchg
cmp
das
add
pop
in
imul
sbb
cmps
in
pop
jl
(bad)
mov
pop
or
push
jne
push
mov
ds
js
push
inc
sub
int
push
xchg
mov
cli
jmp
or
pop
mov
cs
fwait
adc
push
push
jmp
jo
lea
push
jp
sbb
mov
iret
or
ins
pop
xchg
(bad)
jnp
adc
lods
push
sbb
hlt
test
jnp
arpl
sbb
pop
and
sbb
fmul
std
popf
(bad)
jo
jnp
xchg
jmp
je
ss
mov
add
stc
jmp
add
int3
cmps
shr
in
mov
and
repnz
aad
xchg
movs
push
or
lahf
addr16
mov
adc
int
jns
sub
jmp
cmps
retf
dec
pop
stos
outs
std
in
mov
aaa
jecxz
dec
popa
aaa
neg
fist
jno
push
inc
shl
(bad)
cmp
and
push
sbb
or
rcl
inc
aaa
jl
sbb
jne
mov
in
cmps
shl
rol
hlt
fadd
dec
mov
mov
lahf
jmp
ins
jne
dec
mov
push
dec
imul
adc
je
ss
inc
mov
mov
fadd
sbb
test
ins
inc
sub
push
outs
pop
lods
imul
xchg
jge
inc
cmp
out
adc
stos
cmp
add
add
cmps
jg
mov
xchg
inc
pop
mov
scas
inc
adc
rcl
les
cmp
sbb
push
jns
ror
push
(bad)
mov
inc
lock
xor
inc
or
adc
jno
inc
xchg
cli
add
lock
inc
fldenv
xchg
jns
sub
inc
dec
ficom
dec
mov
push
add
xchg
pusha
in
fdivr
xor
xchg
ret
jle
aad
leave
int3
in
xchg
scas
inc
push
adc
mov
loop
xlat
cmps
ins
inc
aas
xor
xlat
or
hlt
cmp
xor
mov
in
add
in
push
ja
cmp
fimul
dec
loope
jmp
sbb
and
pop
jge
sub
retf
out
(bad)
je
enter
xchg
gs
adc
scas
mov
push
push
mov
cld
push
sub
lods
fcomp
jp
xchg
lea
pop
das
sbb
mov
sar
xchg
loope
lock
lods
out
push
inc
scas
(bad)
mov
sub
pop
cmps
xchg
cmp
out
xchg
sub
lds
inc
cmp
mov
jle
sbb
xchg
gs
fild
ret
sbb
dec
or
(bad)
mov
scas
mov
jp
mov
sbb
dec
cmp
popf
in
fist
xchg
aam
mov
cli
lea
test
fiadd
pop
or
popa
cli
mov
add
adc
scas
out
fstp
inc
adc
adc
lock
pushf
addr16
mov
sbb
cmp
or
xchg
sbb
xchg
loope
jle
aam
(bad)
les
pop
enter
stos
out
xchg
jno
and
sbb
sar
addr16
lock
retf
les
mov
movs
xchg
jae
mov
push
sub
into
mov
dec
mov
scas
push
xlat
ret
int
jg
mov
in
xchg
rcr
mov
or
xchg
stos
jbe
push
div
add
pushf
or
mov
mov
aad
cld
cdq
mov
xchg
rcl
fcomp
cmps
xor
jmp
int3
push
loopne
lahf
outs
or
xchg
(bad)
xlat
out
and
rcr
push
fistp
xor
(bad)
sbb
xor
inc
out
mov
add
jecxz
ret
imul
sti
or
pmulhw
xchg
or
add
cmp
mov
push
mov
cmps
dec
mov
aam
call
int3
mov
fimul
dec
or
jmp
and
or
pop
fstp
enter
sub
pop
mov
sub
sbb
jo
or
cmps
fdivr
jb
push
shl
mov
es
xchg
ins
lea
and
(bad)
add
movs
xchg
push
retf
pusha
jo
cli
xor
pusha
or
sbb
mov
pop
(bad)
cli
nop
dec
sbb
ret
imul
adc
stos
leave
or
rol
inc
xor
mov
sbb
ret
sub
jb
fsubr
xchg
jmp
in
push
out
adc
dec
sub
movs
popa
mov
jmp
dec
dec
inc
jmp
xor
sti
fwait
dec
and
inc
cmp
js
mov
cmp
pop
inc
push
mov
out
push
ss
aam
jne
aaa
ds
push
inc
fsubr
shl
jmp
in
inc
add
cmp
popa
ret
clc
jecxz
jns
in
push
cmp
dec
aaa
xchg
imul
aam
sub
call
enter
and
outs
cmps
mov
jo
push
cmps
sub
jge
adc
data16
nop
retf
dec
icebp
push
jb
enter
imul
mov
into
mov
xchg
push
add
mov
aad
inc
stc
popf
sbb
and
fsubr
sbb
mov
jmp
fiadd
inc
cmp
aaa
sub
loop
add
push
mov
shr
xor
fnstcw
iret
cmps
loope
mov
adc
(bad)
mov
cmps
mul
out
or
mov
add
cmp
jmp
jp
cmp
mov
dec
jmp
mov
pop
lods
pushf
xchg
mov
ds
sti
pusha
test
cmp
push
(bad)
jp
push
aaa
xor
bound
aaa
add
cdq
sbb
dec
cmps
aam
sti
dec
adc
add
jae
add
inc
jle
fistp
and
sbb
das
stos
(bad)
sbb
sub
mov
(bad)
gs
sti
cmp
les
mov
mov
mov
sub
rol
mov
push
call
retf
xor
jmp
pusha
(bad)
stos
fstp
jmp
rol
push
fst
jecxz
xlat
jmp
scas
fs
inc
out
repz
mov
xor
add
mov
jle
into
push
fst
js
mov
pop
scas
inc
ins
and
inc
dec
ins
and
pop
sub
push
call
mov
in
push
mov
dec
pop
sub
nop
xchg
int
pop
mov
jne
std
add
out
popa
mov
adc
mov
daa
push
or
dec
fimul
sub
push
push
ror
mov
xor
jmp
mov
(bad)
sub
cld
sbb
cmp
std
dec
mov
jecxz
bound
jmp
mov
loope
rcl
jmp
ret
sub
jecxz
scas
pop
xchg
jb
cs
ret
xor
xchg
dec
mov
outs
pusha
imul
out
mov
outs
inc
jg
dec
popf
mov
ret
pop
xchg
adc
in
mov
add
dec
xchg
cwde
aad
adc
jb
rol
cmc
sbb
xchg
jg
enter
mov
adc
adc
mov
push
in
outs
push
je
lock
(bad)
iret
shr
add
loope
and
sub
mov
adc
inc
mov
inc
in
adc
jnp
mov
or
jecxz
je
adc
inc
push
popf
add
call
push
jp
mov
ins
loop
jb
xchg
mov
pusha
add
mov
xchg
inc
cmp
adc
js
mov
mov
sahf
xchg
adc
and
jmp
(bad)
dec
mov
xor
out
mov
ja
and
xor
ja
xlat
pop
sbb
vfrczss
repnz
xor
in
sti
xchg
popa
stos
pop
mov
mov
dec
pop
ret
dec
call
fwait
stos
mov
mov
and
fwait
or
sar
add
xor
sti
or
add
movs
xchg
icebp
jae
pop
aaa
and
(bad)
or
adc
sbb
jb
jmp
jb
inc
retf
sahf
sbb
xchg
stos
movs
ror
dec
test
fwait
jns
ja
fnstsw
pinsrw
int
nop
add
fldenv
ret
pop
sbb
or
add
int3
mov
leave
adc
and
fisubr
sub
push
cmp
jbe
loopne
pop
xchg
outs
faddp
shr
(bad)
sbb
retf
fs
aaa
cmp
dec
test
jb
daa
in
dec
jb
sub
imul
or
inc
clc
mov
mov
cs
(bad)
rol
push
(bad)
shl
loope
push
inc
retf
lahf
sub
mov
sbb
push
out
outs
loope
inc
xchg
mov
sub
les
adc
leavew
xchg
je
ret
shl
pop
pop
fisttp
and
(bad)
addr16
sbb
shr
iret
push
scas
push
out
shl
sub
pop
inc
mov
jge
aam
stos
call
jecxz
push
mov
daa
gs
xchg
adc
or
push
test
sbb
shl
jo
in
or
ficom
int
dec
xor
adc
jl
pop
lds
mov
sub
xchg
adc
or
cmp
jb
mov
mov
(bad)
mov
pop
adc
jecxz
mov
dec
in
and
mov
(bad)
(bad)
cmp
jb
cs
aaa
fnsave
das
ja
add
sbb
inc
sbb
mov
call
std
aaa
pop
clc
aaa
addr16
icebp
scas
cmp
or
mov
jb
stos
adc
xchg
fstp
adc
je
and
xor
adc
push
mov
adc
cmps
es
xor
ins
push
outs
sub
pop
jne
leave
cli
retf
not
pop
inc
mov
mov
jecxz
mov
rcr
push
dec
fld
inc
sbb
in
jns
jns
mov
push
ret
cld
cmps
jmp
sub
scas
ja
dec
in
add
add
call
imul
jns
out
ins
sbb
xlat
dec
and
mov
mov
pushf
fnstcw
jno
cmc
xchg
sub
and
ins
lahf
cmp
jle
ds
or
inc
sbb
mov
test
popa
sbb
call
sbb
in
scas
cmc
bound
adc
mov
inc
hlt
scas
sbb
jae
dec
or
cmp
add
push
hlt
xor
cmovp
and
or
fmul
add
aaa
jbe
iret
mov
inc
cmp
(bad)
mov
inc
mov
daa
(bad)
xchg
mul
or
arpl
hlt
dec
out
mov
jp
stos
pop
mov
xor
scas
push
mov
cmp
cli
shr
arpl
push
jmp
out
mov
jecxz
or
mov
icebp
or
das
movs
test
sbb
les
mov
(bad)
call
stos
xchg
jecxz
cmc
shr
xchg
mov
je
mov
push
push
cwde
cs
and
sbb
scas
mov
lods
mov
das
icebp
rol
repnz
mov
out
scas
adc
retf
add
lds
pusha
push
xchg
test
aam
sub
(bad)
mov
adc
mov
dec
mov
retf
ficomp
test
jmp
cmc
rep
aad
push
aaa
mov
mov
pop
xor
dec
out
mov
fmul
inc
mov
mov
xor
push
mov
pop
test
arpl
cmp
std
sub
pop
push
cmp
es
mov
cmp
fnsave
fist
dec
xor
fsincos
rcl
test
and
out
popa
imul
mov
iret
adc
push
cdq
inc
fwait
hlt
std
mov
(bad)
loopne
xor
std
movs
mov
es
(bad)
ds
jmp
mov
fild
ret
retf
shl
fild
sbb
jg
call
pop
pop
jnp
xlat
sti
mov
push
pop
or
adc
aaa
retf
cwde
push
add
ds
addr16
inc
cmp
int3
sar
cmp
push
loope
cwde
lea
add
mov
jle
jmp
lea
push
or
dec
nop
jbe
imul
sub
sub
xor
outs
jb
lahf
aad
popf
repz
push
xchg
inc
inc
and
inc
mov
cmp
xor
inc
jb
sub
pop
xchg
adc
hlt
pop
ret
inc
pop
jbe
(bad)
push
sbb
xchg
push
scas
pushf
movs
sub
repz
retf
scas
pop
ret
and
push
add
jae
add
jecxz
and
mov
and
lea
dec
cmps
es
mov
jecxz
jmp
clc
or
stos
jbe
sbb
sub
xchg
sub
add
mov
lock
push
mov
adc
dec
sti
mov
dec
sub
dec
inc
ds
dec
push
mov
mov
cdq
mov
mov
icebp
movs
stc
hlt
xor
ret
mov
jp
xor
or
out
outs
cmp
cmp
das
sub
lidtd
lds
and
add
sub
and
fwait
jmp
fidivr
mov
inc
xchg
pop
movs
imul
or
repz
daa
sub
aaa
(bad)
lahf
and
lahf
xor
(bad)
daa
cmps
aam
push
sub
stos
mov
out
ret
pop
push
jmp
add
mov
or
fcmove
test
sahf
js
xchg
or
push
ror
fbld
icebp
jno
aad
pop
test
jmp
adc
test
jbe
enter
cmc
scas
dec
pusha
pop
mov
lahf
dec
push
aad
rcr
stc
loopne
adc
push
mov
mov
arpl
dec
shl
outs
or
fld
dec
or
(bad)
mov
icebp
loop
inc
add
mov
mov
arpl
push
xchg
xchg
int3
hlt
inc
rcr
out
inc
shl
imul
sbb
dec
cmc
inc
ja
sub
lds
fisttp
sbb
lods
(bad)
enter
xchg
xlat
shr
mov
and
fcmovbe
add
jl
sub
sti
jmp
adc
cli
fidiv
and
xchg
jno
inc
in
push
xor
xchg
adc
jb
jb
push
and
jb
and
imul
xchg
aaa
clc
xlat
cli
push
lea
mov
pushf
lea
pop
and
dec
inc
mov
scas
scas
dec
or
ins
jo
test
stos
jno
pop
cs
or
call
mov
push
push
xor
or
mov
test
movs
imul
outs
xor
lea
pop
cmp
cmc
push
in
loop
jmp
imul
nop
xchg
int
inc
loop
xor
xor
pusha
mov
mov
jp
jns
js
xchg
cmps
(bad)
les
shl
ja
xlat
in
int3
and
call
scas
das
movs
pop
mov
jl
or
mov
movs
adc
cmps
hlt
sub
stc
inc
mov
popf
and
jne
sbb
dec
add
imul
inc
cmps
push
test
fwait
imul
mov
fdiv
(bad)
ins
cmp
fwait
popf
ins
clc
ins
hlt
mov
imul
push
enter
mov
sub
jb
in
mov
outs
dec
inc
ins
pusha
mov
stos
jns
fsubrp
mov
not
jae
mov
cld
jbe
pop
retf
xchg
repz
ja
ins
scas
add
lds
loope
mov
ss
ins
mov
repz
jno
scas
xchg
or
mov
pop
mov
mov
dec
repz
jp
pop
(bad)
cwde
sub
mov
loope
(bad)
jmp
es
xchg
hlt
fcom
add
xchg
fstp
add
cmp
repnz
dec
repz
ret
xchg
inc
(bad)
pop
call
js
xchg
sub
jb
cmp
aad
nop
call
mov
out
pop
push
push
jmp
popa
add
push
push
sbb
fsub
call
xchg
jle
(bad)
pop
mov
inc
mov
sub
cs
pop
push
push
xchg
je
pop
or
mov
std
inc
dec
xchg
xor
push
jo
add
cmp
xchg
jbe
mov
mov
fisubr
mov
fiadd
push
sbb
mov
ss
adc
test
or
cmc
in
mov
dec
cwde
pop
pop
or
jge
in
lahf
pop
nop
in
lds
mov
les
push
pop
out
push
stc
and
mov
or
or
mov
xor
cmps
and
push
test
popf
xor
jb
lods
cmc
fnsave
mov
mov
pop
push
jns
add
loop
fsubr
add
jl
call
inc
pop
int
xchg
out
dec
jno
int
movs
cwde
push
xchg
rcl
jnp
dec
push
int
les
xchg
daa
sub
mov
movs
mov
int
inc
mov
loop
and
push
mov
arpl
cdq
shr
nop
or
gs
std
(bad)
push
loope
add
stos
outs
test
mov
rcr
ss
imul
mov
fdivr
adc
ficomp
sbb
retf
xchg
loop
pusha
sbb
stos
ins
iret
mul
sbb
sub
dec
pusha
stos
retf
aam
imul
sar
out
stos
movs
mov
adc
(bad)
sub
mov
pop
add
xor
inc
adc
mov
pushf
loop
or
js
ret
pop
sbb
pop
jle
jg
xor
xchg
xor
dec
movs
je
adc
repz
stc
sbb
test
adc
xchg
sbb
xchg
dec
loop
adc
mov
aad
dec
fidivr
sbb
test
add
test
push
aaa
or
xchg
es
adc
lods
popf
loopne
mov
add
mov
mov
movs
mov
xchg
ins
leave
mov
leave
lods
mov
movs
icebp
out
xor
mov
or
daa
enter
cdq
fcom
xchg
push
pop
addr16
mov
cld
cdq
in
cwde
mov
fcmovb
mov
pushw
push
add
jnp
repz
out
stc
fnstcw
and
shl
jo
xchg
push
pop
dec
(bad)
call
(bad)
rcl
pop
and
pop
xor
inc
es
inc
mov
or
cmps
xor
cs
pop
push
cmps
mov
addr16
in
mov
xor
jno
lahf
mov
xor
jno
or
jbe
cld
lea
icebp
cmp
push
adc
dec
cmps
sub
push
(bad)
cmp
inc
(bad)
dec
and
inc
adc
xchg
daa
sub
imul
iret
sub
repz
push
mov
xchg
jecxz
mov
ja
mov
movs
addr16
dec
das
push
cmp
mov
lods
cld
scas
mov
mov
pop
cmc
add
adc
xor
xor
ja
or
(bad)
dec
mov
and
push
mov
or
jge
sbb
fnstcw
ret
xchg
jb
ret
cmp
cli
xchg
js
(bad)
loop
test
adc
hlt
dec
pop
scas
xor
and
std
adc
lahf
jae
pop
xchg
and
or
xchg
jb
fwait
ds
daa
push
jle
(bad)
cld
push
cmc
sbb
scas
sbb
cmp
add
cmp
mov
add
jmp
push
nop
cmp
sbb
clc
leave
gs
retf
adc
fidiv
cmp
mov
sbb
push
push
jge
aas
push
mov
xchg
mov
mov
push
cmp
fstp
ret
dec
pop
push
mov
int
sub
fsub
push
cs
mov
ror
lds
dec
int3
cmp
jl
add
scas
pop
cmp
popf
mov
cmp
fsubr
add
cld
clc
aad
cmp
mov
jp
jo
xor
call
inc
test
jo
stos
add
pop
enter
ret
sbb
inc
mov
inc
mov
pop
push
or
add
hlt
outs
and
push
retf
and
sahf
repnz
adc
adc
imul
dec
xchg
cmp
add
ror
rcr
leave
jo
frstor
fwait
lods
add
scas
movs
mov
setb
xchg
in
mov
jnp
inc
mov
cmp
or
retf
mov
add
mov
sbb
scas
inc
out
movs
repnz
pusha
jno
icebp
cmp
stc
fmul
or
sbb
fs
rcl
dec
rcr
mov
rcl
adc
gs
mov
pop
das
scas
inc
add
dec
sub
out
add
pop
and
cdq
or
fsubrp
dec
mov
shl
push
hlt
addr16
js
inc
mov
lods
(bad)
jnp
out
in
dec
movs
ficom
inc
xchg
xor
inc
ins
push
pop
fsubr
out
push
ja
adc
fdivr
dec
mov
scas
inc
lahf
sub
fwait
mov
mov
lea
or
lahf
add
cmp
dec
dec
dec
pop
push
in
push
xor
test
cmps
xor
scas
std
aaa
sti
mov
in
(bad)
push
fdiv
in
fwait
add
clc
cmovb
xor
push
jl
push
sbb
mov
inc
inc
int3
jbe
dec
mov
mov
push
popf
push
mov
mov
adc
stos
push
xchg
imul
outs
mov
in
sub
jp
and
push
fdiv
jmp
int3
mov
outs
mov
movs
es
inc
push
mov
retf
frstor
sbb
in
cmps
adc
jnp
shl
inc
push
leave
mov
test
iret
gs
adc
dec
push
dec
ins
mov
xchg
in
adc
out
mov
add
mov
inc
mov
pop
xor
movs
popf
fist
pop
test
sar
fdiv
jno
aaa
dec
push
push
xor
jge
sub
pop
out
sbb
enter
leave
add
or
push
test
adc
mov
mov
or
push
push
ror
sti
sbb
inc
hlt
jns
out
cdq
lds
mov
and
jne
xchg
add
cmp
test
cmp
retf
outs
fisttp
loop
fcomp
xor
mov
lds
fnstsw
test
ja
mov
adc
sub
jg
out
adc
nop
ins
cmps
ins
xor
mov
add
ja
push
jmp
cmp
xor
(bad)
fs
iret
dec
jno
xchg
shr
std
pop
xchg
cmp
push
mov
push
dec
rol
push
gs
xchg
sbb
inc
cmp
dec
lock
push
rcr
mov
or
dec
retf
xchg
pushf
test
or
jmp
jb
sbb
jo
push
aaa
cwde
pop
or
sar
outs
cli
xlat
ins
ins
mov
out
cmps
dec
sub
or
out
stc
push
scas
xchg
push
shr
or
or
out
int3
cmc
(bad)
daa
lds
cli
(bad)
(bad)
fld
call
aam
(bad)
cwde
push
and
pop
cmp
mov
stos
pop
jmp
xchg
(bad)
aam
pop
push
dec
ficom
jle
mov
outs
adc
xchg
ror
call
jp
out
inc
std
sbb
cld
mov
out
xchg
and
mov
jge
inc
ss
sub
pop
arpl
stc
jnp
pop
loop
ror
cs
int
js
(bad)
sbb
mov
push
mov
add
inc
(bad)
and
and
mov
cmc
mov
push
push
pushf
dec
popa
inc
(bad)
pop
push
xor
fimul
out
inc
ret
mov
(bad)
sub
pop
retf
fdivp
test
xor
fcomp
dec
cmp
inc
in
add
lahf
movs
add
push
mov
pop
xchg
jo
or
imul
inc
push
pop
pop
lock
popa
cld
cmc
(bad)
scas
jecxz
mov
mov
popa
outs
jo
push
call
sbb
retf
aam
ss
in
cmp
stos
std
dec
and
xchg
movs
outs
fwait
sub
imul
test
cmc
inc
fldenv
movs
out
jmp
mov
mov
jo
jmp
or
cmp
add
pop
mov
and
ret
jnp
std
out
aaa
cmp
stc
shl
pop
adc
sar
enter
inc
sub
sbb
mov
dec
push
out
jle
(bad)
in
int3
fistp
(bad)
pop
fisub
or
and
test
repz
sbb
imul
xchg
add
dec
test
mov
pushf
outs
mov
neg
mov
inc
mov
push
popf
dec
pushf
push
pop
(bad)
(bad)
inc
ret
js
test
sbb
jg
adc
pop
ja
adc
inc
xchg
pusha
jle
(bad)
and
fld1
push
jb
icebp
int3
scas
pusha
test
xor
mov
sub
shl
in
xchg
xchg
(bad)
jne
mov
sbb
xor
lock
xor
mov
jbe
mov
xlat
les
mov
dec
push
sub
js
xchg
or
push
push
xor
cs
std
push
jne
adc
test
or
lds
and
sub
fs
jle
lods
or
jae
(bad)
dec
pop
jae
push
ins
mov
lods
jp
(bad)
in
mov
sub
jae
outs
push
popa
adc
xchg
pop
xor
sbb
(bad)
push
push
addr16
mov
cmps
sbb
xor
das
div
and
call
mov
jg
adc
jb
push
dec
es
jl
push
in
mov
hlt
pop
shr
out
push
mov
imul
jne
add
(bad)
inc
push
jnp
fidiv
dec
addr16
nop
xchg
das
fs
jecxz
aaa
fst
fsub
add
lods
xchg
add
inc
fmul
neg
(bad)
addr16
mov
in
add
sar
xor
out
int
aas
into
icebp
sub
test
cmp
xchg
aam
mov
sub
leave
test
adc
repz
es
call
push
(bad)
int3
(bad)
sbb
(bad)
movs
push
pop
xor
imul
aas
out
adc
push
sub
ja
pop
outs
cmp
xchg
push
ret
leave
pop
cwd
mov
mov
cs
mov
push
lea
xchg
mov
and
xlat
rcr
and
fdivr
ins
sub
mov
cmps
xchg
xchg
in
mov
add
leave
push
pop
rcl
call
adc
or
into
sbb
push
js
in
std
das
mov
popf
or
movs
ret
fdiv
(bad)
test
xchg
daa
xchg
inc
(bad)
stc
into
sbb
aad
test
add
sahf
fwait
das
neg
cmp
dec
out
add
cmp
scas
xchg
push
mov
in
popa
or
mov
mov
jg
outs
in
std
stos
fucompp
cmc
or
inc
data16
aaa
call
pop
mov
jns
xor
ins
icebp
mov
fnstsw
jl
inc
inc
mov
out
gs
repz
test
xor
in
mov
jmp
mov
mov
dec
pushf
mov
mov
xlat
cmc
scas
shr
mov
cmp
jo
mov
jp
mov
popa
(bad)
stos
jns
sbb
scas
enter
fmul
xchg
call
push
and
ins
jecxz
cmps
das
sbb
inc
test
pop
jle
cwde
xor
imul
xchg
in
loop
in
cmp
jb
shl
add
adc
fidiv
jno
cmps
xor
inc
repz
arpl
cmp
or
in
jmp
xchg
mov
or
add
(bad)
xchg
adc
out
cmps
lock
pusha
xchg
push
xchg
fs
fdivp
shl
iret
out
add
lods
cmps
xchg
iret
jnp
rcr
mov
mov
dec
ret
mov
aam
cmp
xchg
mov
pop
jp
les
mov
(bad)
fstp
(bad)
adc
popf
pop
xor
sahf
jecxz
test
adc
jno
adc
je
sbb
adc
retf
pushf
ins
inc
cmc
cli
add
popa
dec
sbb
sbb
test
cs
fs
jl
(bad)
xchg
jge
jnp
xchg
and
popa
and
into
dec
iret
rol
bound
pushf
imul
xor
mov
adc
sub
adc
xchg
fdiv
scas
cmps
xchg
stc
(bad)
(bad)
aam
xchg
pop
call
xchg
push
imul
sahf
mov
loop
pop
out
test
aam
xor
push
aas
mov
sbb
pop
ror
and
test
outs
fistp
mov
iret
pop
stos
lahf
test
pop
mov
rdtsc
xchg
rol
xor
arpl
mov
mov
scas
sbb
push
sbb
fsub
and
arpl
and
jp
xchg
jmp
xchg
and
mov
cmp
add
ret
adc
push
mov
aas
mov
daa
cld
add
cwde
out
js
jecxz
cmp
jl
scas
rcr
push
dec
adc
inc
add
mov
push
cmc
fidivr
cwde
rcr
cdq
mov
outs
sub
js
mov
lock
dec
das
push
or
cwde
dec
push
(bad)
pop
int
xchg
cmps
ret
test
push
nop
xchg
dec
dec
mov
or
fnstsw
xchg
ja
sbb
push
mov
retf
enter
add
jns
ret
(bad)
imul
das
out
cld
cmc
into
in
sbb
loop
mov
inc
push
pop
mov
mov
(bad)
out
jle
adc
ret
adc
fst
add
out
or
pop
(bad)
aaa
push
xchg
jne
iret
inc
or
push
or
fidiv
mov
mov
sbb
mov
jp
les
sbb
dec
mov
leave
outs
sub
retf
ins
jb
or
pop
mov
loope
and
cwde
and
out
adc
jge
pop
loopne
cwde
jl
jns
cs
push
stos
sub
sbb
test
dec
test
sbb
int3
adc
retf
or
dec
dec
loop
enter
inc
arpl
je
mov
loop
fstp
pop
jecxz
push
sahf
cmp
mov
clc
and
mov
sub
mov
mov
int
sbb
loopne
jl
scas
nop
ins
jmp
pmovmskb
push
push
dec
sbb
cmp
loop
jp
add
xchg
dec
(bad)
lock
or
and
mov
pop
in
mov
adc
jb
dec
es
aas
xlat
mov
rcr
std
(bad)
cmp
fldcw
sbb
inc
mov
pop
pop
ins
or
pop
data16
push
cmp
dec
mov
loop
fnstenv
xlat
cmp
dec
int3
mov
cmp
in
mov
mov
fsubr
das
xchg
mov
sbb
and
leave
cmp
stos
cli
cmps
das
out
cmp
outs
hlt
pop
sbb
lea
sbb
mov
xor
ret
jmp
test
gs
or
pop
jnp
push
loop
adc
dec
add
mov
adc
push
jge
lock
adc
mov
mov
pop
mov
inc
add
pushf
push
std
fild
jecxz
arpl
jmp
add
dec
call
enter
dec
in
(bad)
rcl
inc
pop
inc
fs
dec
push
xor
jg
jl
or
adc
pop
(bad)
retf
add
inc
arpl
jmp
cmps
std
out
cld
rcr
popa
popf
jmp
cmp
sub
fld
cmp
lock
mov
mov
push
cmp
mov
cs
jae
pusha
mov
inc
pop
aad
push
dec
mov
pop
inc
add
test
and
cmps
out
clc
push
test
pop
jp
push
hlt
imul
mov
and
in
and
scas
jb
push
and
ror
clc
inc
sub
lods
mov
jecxz
jp
pusha
jg
ins
sub
cmp
fiadd
push
cmps
xor
adc
jg
push
jae
or
jecxz
or
stos
push
push
xor
dec
add
jmp
std
stos
add
aam
in
xchg
inc
das
xor
ja
leave
fwait
call
call
fmul
(bad)
fwait
std
neg
mov
popa
add
ins
sbb
fcmovb
xor
xchg
cmp
cmp
in
push
scas
jbe
stc
sahf
shl
jmp
mov
test
push
(bad)
sahf
inc
pop
jnp
sub
sub
sbb
mov
adc
xchg
adc
stc
out
sbb
inc
and
lahf
push
jmp
rcl
in
pop
(bad)
inc
sub
into
ror
aam
mov
and
fild
mov
rol
sahf
dec
mov
fcomp
data16
mov
pop
add
call
je
shl
int
je
rol
mov
out
jp
pop
sbb
repz
ins
cs
in
(bad)
sub
cmp
sahf
pop
adc
ret
push
cmp
sub
push
fisub
jb
pop
out
adc
mov
jmp
mov
jecxz
dec
mov
test
push
loope
ds
test
test
popa
mov
sub
or
and
aad
jne
inc
pop
outs
sub
jle
test
inc
fwait
addr16
div
mov
mov
add
inc
out
call
mov
loope
sub
imul
retf
(bad)
and
leave
std
push
pop
imul
jnp
mov
daa
fisttp
aam
icebp
test
jne
ins
mov
out
push
outs
sahf
(bad)
in
mov
mov
ficom
and
mov
and
xchg
lods
dec
mov
and
sub
out
adc
sahf
dec
not
fstp
(bad)
gs
test
dec
jl
push
popf
lock
mov
xchg
popf
mov
movs
pop
add
js
adc
pushf
cld
pushf
dec
or
lahf
jbe
fs
push
xchg
add
pop
ret
sar
dec
dec
mov
jns
xchg
inc
cmp
fbstp
jp
das
xlat
xor
xchg
jo
into
cmps
fst
repnz
jmp
push
inc
movs
jae
push
into
fs
and
test
xor
or
mov
jb
sub
pop
push
add
jle
ins
fld
gs
jne
pusha
pop
sub
idiv
push
shr
mov
adc
mov
mov
jle
(bad)
xchg
inc
out
lods
push
jge
mov
scas
sbb
imul
sbb
stos
mov
pusha
out
ret
cs
gs
mov
lahf
inc
sbb
or
enter
pop
sub
ret
sub
dec
inc
adc
push
ds
xchg
inc
and
inc
mov
cmp
jns
and
(bad)
ins
in
shl
in
aam
xor
dec
repz
sbb
lods
lods
push
mov
mov
inc
int3
pusha
cmp
les
aas
cld
mov
ss
xchg
push
out
mov
pusha
jge
pop
das
rcl
jmp
call
sahf
jmp
(bad)
hlt
sub
xor
mov
pop
xor
call
aam
in
add
(bad)
xlat
mov
xor
cmp
mov
inc
or
cs
xchg
test
inc
pop
adc
xchg
sub
cmp
xor
repz
ja
hlt
call
fmul
dec
call
mov
ret
retf
aam
and
mov
jae
pop
mov
push
pop
pop
sahf
dec
inc
add
sub
push
inc
cmp
mov
not
jae
adc
not
bound
sbb
jo
add
fisub
inc
mov
pop
movs
adc
cmps
test
jmp
das
aaa
imul
jne
or
sub
xchg
push
cmp
sbb
sahf
pop
cwde
mov
mov
aam
push
push
cmp
data16
xlat
add
(bad)
in
xor
pop
jmp
out
mov
ret
cmp
ret
idiv
lock
jnp
mov
outs
xor
ror
mov
bound
stos
mov
sub
xlat
retf
dec
or
call
jg
hlt
dec
jns
loopne
adc
and
shl
into
mov
ret
jno
sub
add
test
retf
xchg
nop
mov
add
cld
cmp
movs
loope
shl
inc
jge
ret
lock
fwait
movs
test
push
sbb
inc
retf
or
mov
shl
loopne
pop
repz
(bad)
mov
les
fwait
mov
jmp
mov
dec
sti
cmp
push
ret
lea
cmp
outs
int3
retf
and
repz
imul
repz
mov
sbb
je
out
cmp
sbb
imul
push
cdq
adc
mov
retf
push
adc
or
icebp
xchg
sbb
jle
mov
aas
popf
mov
shl
(bad)
popf
xchg
cs
inc
mov
mov
xchg
pop
and
inc
mov
int3
pop
and
adc
div
push
push
retf
cwde
push
pop
xchg
sbb
xchg
fcmove
inc
lock
jnp
sahf
cmp
pop
leave
and
adc
sahf
imul
xchg
xchg
popa
scas
shl
into
ins
aad
cmp
out
sahf
fnsave
push
sti
add
iret
xchg
sbb
les
imul
jmp
jl
cdq
sub
test
icebp
loop
dec
jp
loop
test
mov
push
outs
dec
cmp
pushf
(bad)
(bad)
cmps
xor
jae
inc
dec
(bad)
jmp
in
mov
jge
out
sbb
adc
outs
pop
dec
and
sbb
xor
sub
jbe
push
push
int3
sub
aad
mov
loop
je
nop
fsubr
xchg
mov
and
stos
out
into
or
xchg
mov
outs
es
adc
repz
and
es
fstp
call
loopne
fstp
stos
jp
fsubr
in
fadd
mov
sub
in
int
push
div
(bad)
test
xchg
(bad)
cmp
pop
sar
cmp
xchg
cmps
pop
popf
push
adc
sub
add
lock
aam
in
lods
out
cmp
push
mov
jg
into
stos
xor
test
xchg
jle
push
dec
pop
lds
cmp
sbb
in
ffree
mov
push
pusha
shl
mov
pop
mov
mov
mov
mov
jecxz
dec
ds
call
neg
iret
popf
push
repz
cdq
mov
xchg
sub
jg
cmp
and
mov
mov
clc
jnp
movs
mov
adc
fist
shl
repnz
jl
stc
pop
sub
pop
ret
loopne
ret
sbb
or
jne
pop
test
jecxz
xlat
sub
sub
adc
xor
sbb
xchg
shl
aad
ds
in
mov
jae
xor
add
jnp
shr
mov
aas
mov
inc
sub
and
lds
mov
test
sbb
jg
xchg
dec
xor
push
jle
adc
sbb
ja
pushf
mov
xor
mov
jp
inc
fsubrp
mov
jae
mov
clc
push
fcomi
jns
in
inc
pop
inc
addr16
das
cmc
dec
add
add
mov
adc
pop
outs
rol
enter
push
(bad)
jmp
inc
mov
int3
js
mov
add
daa
jno
pushf
push
ins
cmc
inc
not
jbe
lods
enter
adc
and
mov
pop
std
ins
xchg
jl
fild
xchg
xchg
adc
pop
stos
in
les
mov
push
sbb
aaa
sbb
sub
rcr
test
mov
fcos
jge
movs
scas
adc
shr
xchg
jp
sti
jno
mov
mov
icebp
test
es
ret
dec
repz
sbb
movs
push
and
pop
mov
fwait
jne
rcr
les
push
fstp
packsswb
loop
push
clc
push
dec
loop
out
stc
adc
outs
leave
mul
loop
xor
inc
xchg
arpl
js
mov
repnz
xchg
retf
or
enter
inc
sub
aad
repnz
push
js
fs
aad
aas
std
jne
shr
xor
mov
bswap
stc
dec
cmp
lock
stos
sbb
enter
mov
jmp
pop
push
push
daa
cmp
retf
pop
mov
cdq
mov
fcmove
adc
push
cmp
adc
push
push
(bad)
dec
jecxz
retf
mov
xor
push
mov
mov
or
cmp
(bad)
sub
sar
ds
js
or
mov
jbe
xor
sbb
sti
jae
repz
bound
arpl
fwait
xor
(bad)
fdivr
icebp
adc
or
mov
scas
retf
loop
(bad)
xor
dec
sahf
sbb
cmp
sub
ins
push
int3
mov
push
rcl
addr16
in
xchg
cdq
dec
pop
shr
xchg
dec
xor
loopne
int
pop
adc
ss
out
mov
ficom
aam
push
int
xor
or
ja
clc
add
mov
out
ror
push
data16
mov
(bad)
mov
sub
aam
cs
hlt
scas
lods
(bad)
cdq
push
push
lahf
xor
push
fistp
and
push
or
sub
das
push
mov
xchg
(bad)
fcmovbe
lock
mov
not
in
pop
ss
jne
or
sbb
adc
adc
fbstp
dec
aad
lock
push
aad
icebp
mov
xchg
sbb
imul
sub
push
idiv
xor
movs
adc
mov
or
scas
pop
adc
adc
or
(bad)
xor
lods
pop
ja
jns
dec
pusha
mov
sbb
ss
pop
repnz
sbb
dec
cmp
dec
or
shr
jmp
xchg
and
clc
pop
call
aam
rcr
nop
shl
mov
jb
test
fsub
imul
shr
lods
repz
mov
bnd
sar
push
cmp
popf
mov
scas
dec
data16
xlat
jmp
xor
shl
mov
adc
mov
lods
inc
dec
push
mov
mov
ins
jp
test
outs
mov
imul
pop
inc
es
enter
mov
leave
jg
adc
jb
pop
stos
lds
jmp
pop
and
inc
daa
push
pop
push
rcl
inc
add
xchg
sub
or
mov
cmp
sti
mov
mov
addr16
lods
lahf
sbb
test
iret
mov
cwde
xchg
cmp
xor
inc
mov
mov
inc
test
xor
push
sbb
rcl
sub
retf
sub
arpl
push
xor
mov
xchg
fst
(bad)
pushf
xchg
lods
retf
sbb
dec
mov
sub
add
sbb
mov
call
lds
jnp
pop
(bad)
fsub
xchg
push
les
bound
iret
push
pop
mov
jb
mov
mov
mov
jecxz
dec
lock
or
mov
popf
out
adc
push
xor
jne
cmp
adc
pcmpgtw
int3
mov
imul
neg
cmp
sub
jmp
popf
outs
push
outs
xchg
or
cld
sbb
mov
(bad)
movs
xchg
fwait
mov
cld
mov
pushf
push
cmp
pop
mov
xor
outs
sub
iret
dec
pop
imul
jns
dec
pop
sub
retf
hlt
arpl
retf
mov
or
aam
je
inc
ret
retf
adc
jmp
aaa
sbb
pop
or
add
mov
xchg
jbe
xchg
xor
or
leave
test
iret
lock
scas
fild
into
imul
mov
push
frstor
les
or
repnz
mov
(bad)
repnz
push
aaa
shr
push
gs
add
dec
adc
in
jg
repnz
lds
pop
xor
ror
pop
stc
(bad)
lods
aaa
fsubr
shl
dec
pusha
push
push
ins
sub
or
int3
pop
sub
push
cmp
and
arpl
jp
js
js
mov
push
js
xor
xchg
pusha
scas
std
imul
hlt
lods
push
movs
je
fs
mov
arpl
sub
mov
and
retf
cmps
mov
push
lea
mov
jno
(bad)
pop
mov
add
mov
outs
cmc
and
sub
pop
jmp
cs
push
jns
test
dec
leave
mov
or
arpl
push
clc
stos
push
sub
xchg
fucomip
mov
xchg
cmp
mov
outs
adc
add
xchg
xor
inc
or
mov
or
in
adc
fs
xchg
test
push
clc
lds
cmc
cld
xor
lea
retf
or
out
sbb
mov
in
jge
cld
(bad)
push
dec
loop
test
inc
lds
lds
jl
add
jae
test
sub
movzx
pop
les
dec
mov
sub
jnp
imul
pop
jns
lahf
sub
mov
xor
into
fadd
push
add
cli
cwde
cmc
ins
neg
inc
or
push
rcl
sar
js
fnstcw
and
cld
xchg
xor
push
and
pusha
jmp
push
push
retf
xor
or
sub
or
jecxz
in
or
rol
cld
iret
jg
lahf
pop
jbe
mov
sub
movs
pop
pop
and
push
jmp
cmp
lods
sbb
sbb
fs
sub
jmp
ins
add
cmp
sub
iret
ins
push
jg
jno
and
cdq
xchg
movs
imul
nop
xchg
out
movs
inc
stos
ins
dec
out
stos
mov
mov
mov
dec
cmp
xor
loope
adc
mov
sub
ins
out
dec
lods
or
repz
xchg
shr
retf
or
add
sbb
pop
arpl
pop
nop
xchg
int
pop
xchg
mul
mov
xor
push
ret
push
repnz
sub
das
or
arpl
jp
push
fsubr
leave
sbb
enter
lea
xor
xchg
cmp
jp
ins
stc
(bad)
fs
leave
inc
xor
aad
and
shl
fisubr
pop
addr16
mov
mov
jp
das
test
es
jl
adc
jo
stc
and
mov
xchg
and
movs
pop
es
call
ss
fsub
mov
inc
lods
movs
daa
sbb
aas
out
aam
adc
jmp
inc
and
shl
cmc
dec
ficomp
out
push
fld
imul
and
add
sbb
xchg
jl
or
mov
(bad)
loopne
jo
fwait
in
jns
cld
ins
fimul
lds
repnz
add
push
dec
call
shl
xor
dec
cmp
repnz
sbb
stc
out
xchg
out
(bad)
mov
daa
jbe
out
and
int
xor
sbb
and
mov
xchg
push
dec
sub
ror
mov
cmps
scas
pop
out
jae
sbb
xchg
je
adc
ins
pop
or
ss
aad
enter
jecxz
xor
(bad)
stc
adc
adc
sbb
jecxz
xchg
inc
mov
imul
lods
or
jmp
inc
jbe
inc
fs
les
xchg
shr
retf
and
mul
test
add
stc
(bad)
mov
shl
add
call
daa
sbb
add
push
addr16
or
push
or
dec
jge
aaa
pop
sbb
(bad)
stos
xchg
stos
dec
xor
aas
ins
dec
inc
mov
data16
scas
dec
xchg
jmp
pop
retf
xor
mov
ins
movaps
call
repnz
out
inc
push
jns
lds
or
add
sbb
into
inc
inc
sub
(bad)
fisubr
retf
mov
movs
ficomp
cdq
jne
ret
xchg
xchg
aas
cmp
xlat
loopne
jg
scas
ins
mov
mov
cwde
jmp
lods
dec
mov
test
lea
(bad)
ror
inc
dec
das
enter
aad
jp
or
(bad)
sub
cmp
mov
or
inc
mov
je
add
daa
lea
out
and
push
pop
fidiv
inc
inc
das
cwde
or
add
push
push
(bad)
scas
push
stc
scas
inc
(bad)
call
mov
or
aam
fdivr
push
jns
adc
sub
(bad)
cmps
add
mov
paddsw
sbb
fidivr
movs
mov
push
test
cmovno
ret
or
cmp
adc
das
rcl
inc
add
mov
pop
sub
lods
out
add
test
lock
ins
cmp
in
push
pop
shl
test
push
ds
add
mov
loop
mov
cdq
(bad)
sahf
clc
inc
bound
call
and
add
pop
pop
ins
nop
rol
mov
push
enter
out
pusha
pop
sub
xchg
and
or
dec
arpl
in
pop
rol
jnp
or
(bad)
dec
mov
ds
imul
xchg
sbb
mov
adc
dec
push
les
adc
retf
xor
stc
and
and
push
inc
mov
dec
ins
lea
dec
hlt
fist
pop
jge
movs
popa
mov
div
pop
add
sub
jp
add
push
push
xor
int
pop
in
jmp
fs
je
dec
es
cwde
inc
inc
in
(bad)
jnp
in
pop
test
popf
add
or
sub
jbe
push
push
cld
loopne
pushf
retf
push
je
jae
push
jg
gs
or
enter
stos
xchg
out
adc
leave
sub
call
sub
push
xor
test
pop
repz
ret
icebp
adc
xchg
lods
rcr
cdq
pushf
inc
xlat
idiv
lods
out
mov
jmp
stos
jnp
sub
or
adc
test
adc
push
out
int3
cmp
or
sbb
sbb
loope
sub
into
xchg
pop
mov
repnz
mov
inc
pop
cmp
stos
(bad)
jae
cmp
push
retf
fcmovb
add
sbb
cmp
or
inc
jnp
in
jl
pusha
jns
inc
mov
cmp
sub
and
stc
mov
and
cmc
les
std
ret
gs
xor
ss
ret
call
cs
ret
(bad)
adc
or
mov
loope
mov
ficomp
xor
mov
adc
in
fwait
in
mov
test
and
push
and
pop
sti
mov
cmp
repnz
adc
and
pop
daa
adc
js
dec
dec
pop
ret
xchg
jl
into
sub
adc
rol
sub
nop
stos
mov
jecxz
xor
inc
sub
loope
and
mov
push
js
bound
push
xchg
xchg
gs
push
js
test
sub
ja
or
push
mov
and
scas
les
fld
fisubr
mov
xchg
inc
cmp
jp
retf
sub
lods
pop
add
movs
sub
pop
call
dec
mov
push
mov
xor
push
stos
sub
test
test
pop
push
xor
out
inc
dec
aad
adc
jl
loopne
ror
rol
lods
adc
outs
neg
xchg
in
jg
(bad)
call
mov
mov
cmc
add
mov
jno
xchg
xchg
bound
xor
int
pop
fsubp
fnstenv
mov
dec
dec
cmps
xchg
int
add
push
inc
xor
mov
ds
add
call
pop
cdq
push
mov
pop
inc
jle
and
mov
loopne
mov
cdq
push
sub
repnz
test
sub
je
repz
rol
push
dec
mov
push
int
jne
cmp
add
jo
sub
jge
cmp
scas
(bad)
lahf
inc
aaa
ins
icebp
(bad)
sahf
and
pop
push
mov
jle
loopne
in
mov
inc
popa
clc
mov
test
pop
jecxz
je
xor
sahf
mov
mov
fisttp
xor
xor
adc
cs
sub
dec
add
jmp
out
xchg
sbb
aam
shl
sbb
fidivr
add
cmp
rcl
cmps
les
sub
dec
rol
sar
cmps
imul
mov
push
fidiv
push
or
xchg
and
pushf
pop
add
sub
stos
pop
push
or
test
outs
pop
fisubr
(bad)
jp
cmps
int
div
adc
mov
lahf
xchg
sbb
mov
xor
loope
and
dec
cmp
and
xor
push
and
mov
hlt
out
(bad)
shl
cld
in
cld
sbb
add
jmp
xor
pop
or
mov
add
push
sbb
fbld
neg
outs
fs
cmps
xchg
mov
(bad)
popf
add
mov
out
push
aaa
and
cmp
enter
cmp
js
xor
repnz
ins
mov
bound
stos
dec
pusha
in
cmps
pop
xor
and
and
mov
xchg
xor
fcom
pop
je
scas
sub
mov
adc
adc
fcom
and
fld
mov
mov
lods
pop
popa
xor
idiv
(bad)
dec
sub
(bad)
fidiv
je
cmp
adc
mov
add
mov
nop
inc
inc
gs
out
push
in
dec
call
or
xchg
push
fisttp
cdq
cmc
add
and
sti
xor
sub
jnp
mov
int3
cwde
cmp
gs
movs
inc
xor
rcl
cwde
jmp
test
dec
mov
mov
call
fadd
leave
jns
les
mov
int3
popf
ret
xchg
mov
mov
ror
xchg
add
pop
icebp
neg
xchg
outs
fcomp
icebp
aam
rol
outs
pop
outs
xchg
fucom
loope
cmc
cmps
loopne
sahf
dec
dec
mov
out
repz
(bad)
int
cdq
idiv
test
jae
test
jbe
cld
mov
xchg
call
in
jp
push
sub
or
mov
jecxz
push
mov
jecxz
sbb
or
rcr
ret
cmp
daa
enter
xor
lds
inc
call
cmp
jne
and
xor
mov
cmp
stos
mov
imul
in
in
mov
inc
jo
in
repz
mov
inc
sub
xlat
(bad)
in
in
cmp
jmp
outs
cmc
jmp
dec
rol
in
push
add
mov
mov
push
mov
fucomip
adc
push
hlt
test
sar
push
in
outs
mov
xchg
mov
push
jmp
sbb
rcr
inc
mov
ret
das
xchg
loop
dec
adc
push
push
mov
pop
aam
loope
mov
jbe
in
cwde
jle
add
mov
leave
in
xor
ret
(bad)
mov
out
out
push
push
xchg
jno
bound
xchg
cmp
dec
jb
cmps
in
sub
xor
fild
out
loop
(bad)
aad
jmp
sub
out
aad
dec
xor
sub
sbb
in
jmp
adc
out
cmp
xor
xchg
and
leave
movs
(bad)
outs
(bad)
jne
jg
push
neg
sbb
sbb
cmp
xchg
out
(bad)
push
daa
repnz
mov
jecxz
push
loope
inc
xor
cwde
lods
loope
and
inc
cmp
inc
dec
sbb
fldcw
scas
jl
fistp
add
call
aaa
lea
jp
clc
gs
outs
xor
xor
xchg
cmps
scas
xchg
gs
test
or
inc
pop
ror
pushf
std
mov
sub
mov
xchg
retf
imul
add
outs
in
sub
xchg
and
add
mov
call
xchg
fwait
iret
jg
inc
inc
adc
aas
jp
jmp
adc
dec
enter
gs
or
lock
adc
mov
leave
aaa
sti
jbe
mov
push
popf
test
xor
pop
cdq
and
(bad)
cld
mov
inc
pop
pop
inc
jecxz
(bad)
leave
aaa
not
(bad)
push
mov
sub
shl
das
fdivrp
pop
inc
push
mov
jmp
jno
or
sub
hlt
in
mov
pop
cmc
or
ja
add
inc
scas
jmp
dec
lods
cld
mov
ror
mov
mov
mov
jnp
dec
jp
leave
dec
mov
mov
sub
sahf
add
or
mov
pop
sbb
stos
sbb
xchg
cmp
add
aaa
cmc
add
test
call
mov
mov
ret
mov
and
adc
adc
imul
mov
out
aam
mov
(bad)
xor
(bad)
jo
push
loopne
clc
pop
std
jne
or
nop
mov
ins
das
repnz
dec
mov
inc
mov
loop
aam
test
cmp
lods
fimul
add
into
push
ret
mov
dec
mov
pop
pop
add
cmp
push
or
and
mov
pop
dec
mov
ror
or
xor
iret
mov
xchg
adc
cmp
out
cmc
inc
xchg
pop
repnz
in
hlt
out
xor
int3
mov
pusha
cmp
lock
jns
mov
jbe
xor
pop
mov
adc
ins
push
fwait
mov
inc
scas
je
icebp
adc
jmp
xor
or
cmp
inc
jnp
inc
out
pusha
xor
idiv
mov
out
scas
inc
xor
jb
inc
test
outs
sub
iret
cmp
enter
push
cmc
ficomp
or
pop
ja
and
idiv
rep
test
iret
inc
int3
mov
mov
adc
dec
repz
add
xchg
fwait
xor
xor
jb
push
ret
ins
adc
retf
jns
lahf
jnp
imul
retf
xlat
or
xchg
mov
xlat
jb
test
xlat
push
push
mov
mov
dec
lods
mov
mov
mov
mov
push
pushf
or
adc
jp
inc
cmc
cmp
(bad)
adc
xlat
xchg
lock
rcl
retf
dec
mov
inc
or
loopne
or
out
lds
push
cs
sbb
lea
out
or
jo
xor
call
ficomp
js
lods
jl
mov
push
cmp
out
mov
jns
xor
xchg
pusha
add
enter
int3
out
mov
(bad)
push
lods
cmc
pushf
and
jo
dec
lahf
arpl
in
icebp
lods
dec
inc
push
in
bnd
and
xchg
pop
ror
jmp
jmp
cmps
sbb
fwait
jbe
pop
jmp
mov
dec
sub
push
jae
gs
sahf
mov
pop
pop
mov
iret
std
xchg
div
int
adc
or
jecxz
xchg
inc
imul
push
mov
int3
cmc
inc
adc
sub
and
push
dec
xchg
sbb
push
out
lods
inc
ds
cmp
mov
or
aam
jae
stc
int3
xchg
addr16
sub
aam
(bad)
popa
div
push
call
mov
adc
adc
xchg
adc
(bad)
vmovntps
ja
cmp
push
retf
adc
xlat
add
adc
das
add
adc
ja
arpl
retf
push
jge
aaa
or
mov
bound
add
nop
mov
pop
pushf
sbb
outs
add
mov
add
mov
ja
dec
je
in
jmp
out
lock
xchg
mov
in
xchg
cmp
xchg
inc
or
push
dec
push
ds
ror
cmp
sbb
arpl
jne
ss
dec
jno
clc
jns
retf
popa
shl
data16
mov
jecxz
out
in
dec
jns
imul
mov
mov
or
adc
popa
repnz
cmps
das
int3
loope
jne
test
xchg
jle
jb
cmps
xor
sub
ret
or
es
jmp
fcmovu
dec
inc
inc
(bad)
mov
jg
jno
fnstenv
mov
xor
xor
fld
data16
ins
xor
sbb
movs
mov
pop
sub
xchg
push
adc
cdq
movs
loope
in
jecxz
ins
test
loopne
mov
daa
and
push
or
outs
fcos
pop
lock
lea
sub
mov
mov
mov
jle
xor
inc
leave
shr
int3
out
call
cld
icebp
pop
xor
add
and
sub
ds
adc
jae
inc
ret
aaa
dec
stos
jecxz
int
push
xchg
sub
stc
fmul
int
ret
cmps
in
adc
es
icebp
data16
ret
jg
hlt
out
fdiv
push
dec
popf
xor
das
mov
add
sti
sbb
dec
stos
add
cmp
push
ds
enter
loop
out
jecxz
add
call
es
push
mov
mov
(bad)
adc
mov
jg
sbb
sbb
push
cmp
mov
cwde
sub
push
daa
mov
mov
inc
jl
mov
jbe
sub
bound
dec
mov
mov
or
mov
in
outs
mov
adc
ins
xchg
xchg
pop
call
lahf
cmp
cld
movs
outs
shl
cmps
lock
inc
mov
sti
cmc
xchg
shl
mov
xchg
mov
cli
push
cmp
stos
or
jmp
pop
cmc
ret
jnp
ret
arpl
jp
mov
data16
dec
jle
mov
add
arpl
add
push
sahf
or
dec
sbb
inc
cmp
std
mov
nop
mov
adc
dec
inc
test
add
pop
push
sub
jno
jmp
shl
aaa
repz
jb
into
xchg
adc
outs
jge
test
fdiv
test
clc
adc
cwde
inc
icebp
pop
test
in
xor
jb
or
mov
lods
or
ret
mov
scas
and
shr
pop
(bad)
scas
cmc
or
inc
ins
push
sub
imul
xchg
stos
out
pop
jl
mov
pop
cmps
ins
push
popf
mov
sub
xor
movs
shl
or
cmp
push
rol
jl
sahf
stc
in
cdq
pusha
clc
pmullw
scas
pop
cs
jmp
lods
fisub
in
dec
jne
adc
imul
ins
sbb
inc
daa
pushf
movs
pop
stos
pop
clc
jg
adc
add
ja
cwde
push
jmp
dec
pushf
pop
div
jo
loop
aaa
sbb
fldcw
push
jp
mov
add
stos
cmp
inc
push
adc
rcl
dec
addr16
fistp
test
xchg
add
push
pop
sar
xchg
jns
mov
mov
mov
adc
ds
shr
neg
adc
out
pop
mov
sbb
call
cld
in
push
xchg
mov
aam
jns
and
mov
or
xor
mov
cmps
cmps
sahf
mov
je
sbb
aas
mov
ret
jno
pop
and
rcl
aad
dec
test
or
pusha
or
mov
adc
adc
cwde
pushf
pop
sub
scas
push
mov
cmp
push
retf
mov
enter
stos
jle
or
hlt
pusha
test
in
ins
inc
inc
mov
cli
fild
fidiv
xor
cmps
jo
adc
call
into
jle
sub
pop
lds
sbb
jmp
fwait
push
and
loope
cmp
shl
ss
push
leave
pushf
pop
in
mov
into
pop
ror
pop
stc
sub
fstp
(bad)
rol
retf
sahf
ja
push
cli
movs
push
push
cwde
and
dec
popa
and
retf
mov
je
jbe
repnz
das
or
cmps
es
add
mov
push
inc
adc
test
mov
test
push
pop
loop
or
aam
movs
es
in
pop
sbb
pop
lods
xor
cwde
push
sub
in
push
mov
jns
add
cld
ror
add
fs
ins
add
sbb
mov
xor
or
pushf
fst
fdiv
mov
push
add
jae
mov
dec
add
icebp
inc
outs
(bad)
mov
dec
test
mov
lods
in
js
dec
aas
or
xor
pop
clc
stos
adc
js
call
cld
push
lods
pop
in
into
lods
enter
inc
aam
mov
fld
mov
jge
fst
cmp
loop
lahf
lahf
fimul
push
push
lea
and
adc
inc
out
add
mov
mov
dec
pop
xchg
movs
dec
pusha
cwde
mov
sbb
cs
inc
rcl
mov
sbb
cdq
data16
adc
jmpw
imul
fmul
sub
inc
clc
int3
and
ss
pop
sub
add
xor
repnz
int3
fdivr
mov
xlat
(bad)
stc
scas
push
ins
xchg
fld
pop
je
cmp
(bad)
retf
xor
xor
sbb
mov
mov
jns
dec
inc
adc
xor
ja
or
xor
rol
movq
ja
dec
inc
lock
outs
lods
nop
clc
push
fsubr
arpl
and
cli
xor
push
shl
and
rcl
adc
sti
dec
mov
imul
sub
sbb
push
sub
jno
and
add
jo
iret
pop
bound
retf
jge
out
mov
or
dec
dec
hlt
mov
fisttp
pop
dec
sub
inc
or
xchg
jbe
dec
inc
xchg
sub
sub
ss
rcl
xor
xchg
ins
ret
mov
or
scas
mov
lods
sbb
jmp
and
rol
add
mov
jmp
scas
outs
pop
mov
or
or
xor
mov
and
(bad)
fistp
lock
pop
jns
repnz
xchg
cmc
push
inc
out
movsx
test
and
psrlw
add
push
(bad)
pop
lahf
mov
adc
cmp
cdq
jnp
repz
dec
jb
(bad)
cmp
mov
std
xlat
lahf
iret
out
inc
in
sub
dec
outs
adc
xchg
cld
pop
jne
loopne
div
pop
jle
pop
pop
lea
jmp
aaa
sub
add
int3
pop
mov
sbb
jo
push
ds
gs
and
jae
add
jns
add
jp
push
retf
mov
sti
retf
push
icebp
mov
aam
shl
jg
(bad)
fst
inc
nop
ins
dec
fcom
sub
ins
outs
sub
in
and
dec
mov
sbb
call
aad
lods
and
jle
pop
inc
xor
and
jmp
out
out
push
pop
cwde
out
in
inc
lock
pop
(bad)
les
add
xchg
lds
cmc
mov
xchg
shl
mov
arpl
jge
sbb
cmps
pop
dec
mov
in
pop
retf
adc
mov
add
mov
and
sub
dec
xchg
dec
repz
cmp
enter
gs
stos
(bad)
call
fadd
mov
outs
ja
lahf
mov
clc
jp
xlat
fdiv
cmp
mov
mov
inc
inc
mov
xchg
aad
pop
aam
dec
jle
loope
sub
jnp
retf
xchg
sub
pop
fistp
ficom
outs
push
jecxz
xor
mov
pop
or
pop
int3
xor
jno
and
push
or
stos
cmp
cmps
jl
loopne
sar
cmp
adc
mov
jle
push
xchg
adc
xor
loope
and
outs
mov
mov
jno
movs
push
xchg
jnp
lds
mov
pushf
push
jecxz
sbb
push
mov
or
fimul
or
ins
(bad)
pop
call
je
xlat
mov
jg
pop
inc
xlat
fnstcw
and
xchg
adc
xor
bt
or
and
aas
sbb
loop
scas
loope
mov
adc
cmp
mov
mov
and
cmps
aad
mov
xchg
lea
je
cli
out
pusha
push
and
mov
and
js
pop
aas
xchg
clc
pusha
addr16
jg
out
rol
sbb
hlt
ror
retf
push
lods
hlt
mov
mov
mov
outs
and
int3
add
inc
rcl
mov
mov
les
popa
mov
pop
or
scas
xchg
sub
and
loope
out
mov
aas
xchg
imul
or
sub
mov
ins
xchg
inc
and
cmps
xchg
popa
xchg
jmp
aam
ja
or
cld
xor
pop
add
pusha
jo
dec
shl
mul
cmp
jl
pushf
fdivr
fldcw
ds
sbb
sbb
scas
push
pushf
fwait
sub
mov
jmp
inc
repz
mov
ffree
sub
fmul
cli
pop
rol
sbb
xchg
repnz
mov
push
sbb
add
adc
scas
adc
xchg
stc
gs
xor
loop
push
ss
cli
pop
mov
cmps
stc
cmp
xlat
and
dec
dec
mov
stos
mov
push
dec
mov
add
mov
test
imul
jns
aaa
add
fsubr
popf
pop
movs
cdq
pop
add
movs
mov
lods
dec
scas
ins
mov
add
jnp
jmp
dec
push
jmp
fstp
push
(bad)
mov
sub
jne
mov
pop
hlt
(bad)
cmp
inc
cmp
test
enter
(bad)
cmp
(bad)
in
jg
push
push
jbe
sbb
mov
cdq
xlat
hlt
sbb
push
jne
movs
adc
and
mov
sub
stos
push
jmp
enter
mov
inc
int
sbb
add
adc
mov
test
mov
mov
loop
in
jns
stc
xor
ja
je
mov
movs
sbb
lea
xor
into
mov
pop
pop
aam
xchg
sbb
ret
pop
add
div
icebp
cmps
and
in
js
(bad)
lock
lea
js
cmp
jb
xchg
xor
imul
in
mov
lods
push
lods
stos
and
popa
lods
ss
inc
fwait
sbb
dec
bound
push
mov
mul
pop
xchg
movs
lods
loope
cmp
mov
jg
(bad)
xchg
jg
in
and
(bad)
into
ficomp
sub
xchg
stos
pushf
sti
push
add
popa
aas
jno
cwde
out
stos
aad
cmps
lock
and
xchg
mov
mov
aad
xchg
call
es
cmp
inc
pusha
pusha
les
inc
adc
sub
fisttp
loopne
and
in
loop
sahf
(bad)
(bad)
mov
pop
sar
icebp
loopne
les
aas
mov
mov
adc
mov
int3
jb
dec
pop
cli
xchg
mov
shl
sbb
jle
loopne
jge
mov
pop
adc
dec
sub
gs
mov
test
push
stos
fs
(bad)
mov
test
daa
int3
sbb
push
jbe
in
mov
push
(bad)
dec
ins
push
sahf
xchg
cmps
adc
clc
add
add
rol
sub
xchg
mov
mov
jecxz
cmp
aaa
jns
(bad)
jge
pop
stos
pusha
push
add
lea
in
xor
or
retf
jne
pop
iret
mov
xor
push
sub
adc
mov
mov
mov
add
inc
out
shl
call
aam
into
or
repnz
popa
jmp
xchg
inc
push
push
mov
outs
add
mov
inc
dec
add
popa
mov
mov
shr
dec
mov
or
jl
test
jecxz
push
cmp
pop
adc
repz
jae
jmp
ins
les
and
mov
clc
jne
pop
add
icebp
cmp
xchg
movs
lods
test
cmp
sbb
jp
rol
bound
outs
icebp
jo
sbb
xchg
mov
mov
dec
mov
sbb
dec
mov
arpl
push
push
scas
packsswb
mov
leave
(bad)
cmp
test
or
test
sbb
dec
mov
push
(bad)
sub
pop
(bad)
mov
mov
sub
mov
push
call
dec
sub
pop
(bad)
cli
shl
and
aad
mov
test
(bad)
mov
adc
loope
jne
mov
sahf
fisubr
outs
cmps
out
into
repnz
cld
fldcw
pop
jmp
daa
pop
sbb
jbe
sub
outs
out
jmp
ja
pop
mov
or
or
inc
loope
mov
adc
mov
pushf
out
jns
out
adc
pop
(bad)
add
in
stos
data16
int3
inc
movs
mov
mov
xchg
mov
pusha
pop
cwde
xor
(bad)
xor
jge
adc
rol
jne
push
aaa
adc
ss
fwait
jl
out
loope
jp
fsub
xchg
retw
dec
cmps
add
in
xchg
jnp
inc
add
or
movs
jo
fistp
sub
popa
aad
adc
fcomp
add
sub
push
xor
scas
jmp
ins
mov
call
push
mov
cli
std
outs
jnp
ret
push
cld
xlat
call
cmp
mov
loop
imul
aas
mov
in
cmp
shl
ror
cmp
mov
daa
and
fwait
inc
test
jo
vmovdqa
mov
sbb
xchg
test
mov
mov
cmp
push
fdiv
cmp
jecxz
push
sbb
mov
sub
arpl
dec
fcmovnb
sub
std
xor
mov
inc
xor
loopne
cmc
xchg
xchg
jbe
jnp
pop
pop
icebp
dec
jno
sbb
lahf
fistp
sub
pop
es
cmps
xor
mov
adc
or
mov
mov
ds
push
inc
jl
fwait
add
or
mov
daa
data16
mov
jl
cmps
icebp
setnp
out
mov
mov
or
add
(bad)
(bad)
into
in
mov
outs
xor
mov
mov
pushf
dec
(bad)
mov
sbb
int3
pushf
jecxz
mov
hlt
clc
fld
pop
mov
jnp
mov
dec
mov
fild
and
sub
adc
popf
lahf
imul
(bad)
dec
xchg
scas
das
push
fstp
std
mov
(bad)
xchg
cli
sub
into
inc
jns
sub
jle
shr
stos
pop
mov
sbb
(bad)
xchg
xchg
mov
rcr
hlt
lods
je
xlat
aam
adc
mov
ss
loop
aaa
sbb
retf
mov
mov
ficomp
xchg
lahf
es
arpl
inc
test
add
mov
pop
rcr
mov
lea
push
xchg
pmulhuw
dec
dec
mov
adc
das
sbb
mov
mov
cmp
push
scas
and
lds
xor
and
test
adc
movs
in
jle
mov
test
jo
mov
sar
inc
aas
add
xchg
shl
pop
mov
test
sub
les
xchg
popf
sbb
shl
mov
fisub
push
add
jge
(bad)
pop
clc
jge
dec
adc
hlt
or
xchg
aam
jp
jnp
in
cwde
pop
sub
mov
fadd
push
fimul
call
inc
mov
imul
outs
push
cmp
cdq
or
jne
xchg
ds
or
loopne
hlt
cmps
inc
sub
fs
dec
push
mov
mov
cmp
push
out
aad
stc
jmp
dec
inc
xlat
mov
push
push
(bad)
push
int
neg
adc
adc
les
mov
adc
xchg
mov
iret
adc
lods
mov
mov
push
mov
jmp
scas
and
cdq
outs
cs
nop
(bad)
xor
in
and
or
fwait
ss
out
lods
sbb
mov
jmp
jp
xor
jle
in
mov
dec
inc
shl
lods
rol
jg
cs
les
adc
cmp
cmp
rcl
inc
xchg
daa
je
test
add
cmc
in
mov
nop
add
aad
mov
shl
outs
adc
cmps
imul
mov
add
outs
cmp
xchg
dec
jle
pop
inc
mov
jns
rcr
scas
push
mov
cmc
cmp
sti
dec
jmp
je
sbb
lea
jnp
mov
jns
pop
ss
stc
mov
jp
xchg
sbb
ret
sub
enter
push
rcr
jne
inc
mov
jecxz
xor
dec
(bad)
cmp
push
pop
add
push
sub
dec
int3
push
dec
jbe
sub
int
outs
jle
xchg
pop
push
or
std
gs
inc
(bad)
mov
and
adc
dec
stos
mov
push
fdivr
pop
ror
xor
cmp
dec
sub
adc
fadd
int
cmp
mov
mov
jo
outs
jmp
jecxz
sbb
jl
mov
sub
push
fsub
sub
inc
loop
add
pop
push
test
repnz
arpl
cmp
cmp
sbb
jmp
cmp
mov
lods
into
pop
inc
lods
sub
lods
push
in
mov
pop
adc
(bad)
aad
outs
add
ja
jp
and
xor
fild
mov
sub
arpl
and
popa
sbb
scas
push
shrd
retf
into
pop
ss
jnp
fisubr
into
cmp
test
(bad)
jmp
sahf
add
popf
xchg
push
or
sub
mov
cld
mov
inc
inc
push
das
jmp
(bad)
pop
mov
outs
inc
gs
cmp
aas
mov
shl
mov
imul
sub
jmp
(bad)
dec
lea
dec
dec
ins
in
das
adc
cwde
popa
movs
or
jmp
sbb
aaa
xor
ins
mov
fs
arpl
call
fisttp
sbb
stos
nop
inc
(bad)
xchg
dec
scas
jns
adc
sahf
retw
pusha
scas
dec
mov
int3
js
addr16
add
push
and
call
mov
sbb
sub
mov
(bad)
jecxz
je
jmp
jmp
stos
inc
sub
add
pop
out
loop
out
pop
ins
mov
(bad)
cmp
stos
mov
adc
mov
outs
daa
into
or
shr
in
dec
ja
test
xchg
and
loop
addr16
pop
xchg
leave
(bad)
push
fsubrp
jp
arpl
and
pop
dec
cld
xor
call
jg
adc
(bad)
popa
jno
fisubr
cli
xchg
lahf
push
dec
pop
jp
sub
fnstcw
rol
clc
mov
bound
inc
jle
sbb
movs
push
add
mov
retf
xor
es
and
mov
bound
scas
push
mov
dec
fistp
xor
test
mov
lahf
outs
into
jo
cmp
ins
dec
jg
dec
cs
xor
shl
loop
pop
(bad)
adc
xchg
dec
and
loope
test
mov
cdq
sbb
imul
sbb
out
mov
sbb
jmp
pop
nop
rcl
test
pop
cmp
sbb
into
aaa
cmp
sub
push
neg
dec
pop
fsub
xchg
xor
mov
sbb
jge
movs
stos
enter
(bad)
ins
in
jp
and
cld
cmp
sub
popf
sub
arpl
dec
fnstsw
js
lock
pop
jecxz
xchg
cwde
cmp
jae
sub
push
scas
sbb
je
addr16
mov
push
lods
adc
lahf
(bad)
or
adc
push
push
mov
pop
and
fs
mov
cdq
mov
mov
test
test
mov
mov
loop
pop
je
lods
jne
xor
add
mov
cmp
test
scas
adc
rol
rcl
sbb
xor
cmp
mov
lea
jnp
push
push
repz
cmps
push
inc
push
jne
scas
add
sub
xor
xchg
jne
retf
int3
stc
popa
cwde
mov
add
icebp
xchg
leave
in
pop
std
xor
nop
call
pusha
not
mov
repz
jmp
das
and
push
aas
xor
neg
aas
inc
cli
repz
dec
xor
or
lea
into
movs
inc
ret
aas
add
xchg
and
ins
xchg
and
stc
pop
fdiv
daa
mov
ins
mov
fcom
sbb
or
repnz
pop
push
and
sahf
mov
mov
add
cwde
mov
mov
add
gs
popf
jle
pushfw
xchg
jo
mov
xlat
and
cmp
mov
cmp
mov
(bad)
push
shl
in
xchg
xor
sub
inc
push
call
movs
mov
outs
call
dec
pop
lods
out
andps
inc
outs
repnz
(bad)
fldenv
mov
jg
test
es
in
jp
or
xchg
std
cwde
stos
bound
jno
in
push
imul
dec
movntq
out
in
mov
test
mov
sub
leave
loope
jg
mov
xchg
ret
pop
(bad)
inc
inc
lock
cs
add
data16
pop
pop
mov
cmp
inc
ins
fcmovu
jnp
jns
scas
add
xchg
jnp
jb
inc
inc
(bad)
jmp
xor
mov
inc
jge
test
arpl
push
int
call
stos
ss
vmread
or
ret
retf
push
call
mov
sbb
mov
outs
cmp
pop
cmp
retf
cmp
es
iret
jmp
arpl
add
rcr
jnp
lods
in
test
cmc
push
jae
dec
inc
mov
mov
pop
add
or
push
imul
xchg
enter
dec
test
in
dec
cmp
imul
sub
popf
adc
lahf
push
jmp
cmp
test
fnstenv
movs
xor
push
or
mov
sub
ret
mov
mov
lea
jae
imul
call
sub
inc
cmp
(bad)
retf
ins
jno
push
mov
cmp
js
push
sub
pop
jne
mov
sbb
sub
ror
add
xchg
fstp
cdq
leave
outs
ret
push
xchg
jmp
arpl
pop
out
out
mov
dec
dec
cmc
pop
cld
idiv
inc
adc
data16
lahf
pushf
mov
addr16
out
shl
sahf
mov
shr
mov
pop
mov
test
sub
mov
mov
ins
aas
inc
pop
mov
sub
outs
test
lea
imul
loope
outs
(bad)
jne
cs
adc
inc
push
ins
fptan
fiadd
sbb
pop
push
pop
les
pusha
loop
sbb
into
repnz
mov
pop
hlt
or
ret
fs
dec
aaa
pop
lock
or
mov
rcr
stos
and
shl
push
mov
jnp
fsubr
adc
test
(bad)
jmp
xlat
(bad)
xlat
mov
jne
cmp
mov
xchg
aas
cmp
xchg
jb
inc
adc
retf
add
cmp
ud1
mov
lds
xor
ror
test
sbb
out
retf
std
stos
push
(bad)
mov
jge
clc
and
pop
cmp
sub
add
jecxz
pop
jl
shl
xor
outs
jg
mov
cwde
dec
mov
jecxz
mov
dec
popa
push
xchg
pop
inc
js
loopne
and
scas
shl
in
adc
cmp
call
dec
ins
xor
arpl
stos
sub
and
mov
cmc
ins
mov
in
fisttp
cmp
sub
push
or
xchg
test
test
retf
cld
popf
arpl
(bad)
push
arpl
mov
sbb
cmps
imul
loop
dec
xor
leave
adc
jg
mov
mov
dec
movs
sbb
(bad)
iret
cmp
or
mov
stc
fsub
or
cmovno
(bad)
push
int
idiv
or
adc
in
enter
jae
inc
dec
call
add
(bad)
scas
sub
mov
dec
loop
adc
mov
loop
push
repnz
mov
mov
xchg
or
out
mov
inc
test
jg
push
icebp
and
add
add
sbb
push
jg
jle
xor
mov
or
int3
loop
loopne
stos
loop
and
sbb
pop
xor
data16
int3
inc
xchg
cmp
mov
nop
aaa
and
mov
adc
xchg
mov
fcos
adc
outs
imul
add
jmp
loopne
sbb
jmp
inc
adc
inc
imul
fisttp
iret
(bad)
sub
adc
(bad)
jg
mov
cwde
mov
mov
lahf
lods
or
xchg
push
ret
inc
adc
mov
out
(bad)
fdiv
jno
xchg
sbb
test
mov
data16
scas
lea
cmps
dec
pop
pop
pop
add
ins
inc
sti
jp
dec
div
xor
inc
sbb
mov
(bad)
lea
int
mov
rol
push
aam
jecxz
in
and
or
jmp
and
gs
js
mov
enter
xor
pop
mov
sbb
xor
in
shl
add
lock
movs
mov
xchg
cmps
inc
enter
pop
test
aaa
jo
cld
test
xchg
mov
je
in
jae
cmps
sti
xor
add
push
sbb
pop
ret
cmp
adc
js
sti
js
test
adc
(bad)
in
push
sub
in
push
or
es
(bad)
icebp
lahf
sbb
or
jg
jle
mov
out
or
cs
mov
addr16
(bad)
retf
pop
cmc
shl
xchg
jecxz
ins
push
push
neg
sbb
xchg
bnd
mov
pop
iret
test
cmp
rcl
pop
dec
(bad)
and
pop
sar
xor
mov
mov
hlt
pop
mov
inc
dec
icebp
js
jae
inc
popf
cmps
mov
lock
in
jo
jmp
inc
adc
das
push
gs
xchg
cdq
add
inc
pusha
dec
test
mov
mov
cmp
clc
jmp
test
lds
xchg
pop
test
data16
mov
or
cmp
ffreep
loope
mov
adc
(bad)
adc
leave
(bad)
in
lds
xchg
xchg
xor
sar
and
xor
test
jb
mov
add
fst
cld
out
stos
lea
in
(bad)
xchg
xor
sbb
test
rol
daa
mov
repnz
add
cmps
jne
cwde
lods
aam
xchg
loopne
test
retf
adc
mov
aaa
(bad)
xchg
mov
imul
scas
(bad)
out
in
(bad)
aam
rcl
cwde
into
pop
inc
adc
shl
cmps
test
syscall
mov
int3
(bad)
loop
xor
loope
pop
dec
mov
xor
sub
div
ss
xlat
pop
jno
cmps
fnstcw
and
push
lahf
test
fs
dec
add
push
xor
inc
push
jmp
iret
xchg
sti
dec
cmp
sub
add
sub
ror
jmp
cld
test
xchg
xor
mul
scas
push
sahf
enter
ror
mov
ret
jno
popf
jbe
aad
lods
pop
int
xor
dec
nop
inc
daa
dec
rol
repnz
ins
sub
sub
or
xor
pop
mov
adc
inc
sub
call
stos
push
inc
mov
das
lock
sbb
mov
inc
xor
push
scas
adc
out
sbb
pop
jmp
mov
xchg
ret
sub
rol
inc
retf
inc
pusha
sbb
pop
cmps
push
pop
std
adc
xor
adc
adc
mov
sti
cmp
rol
lea
jge
fadd
and
inc
jmp
outs
mov
call
cmp
and
sahf
rol
mov
dec
add
add
lods
pop
int
push
jg
xor
mov
pop
xchg
in
or
mov
mov
rcl
push
adc
mov
sbb
mov
or
and
popf
into
punpcklbw
lock
loop
fisttp
xor
icebp
xor
fistp
inc
in
scas
jecxz
pop
inc
sar
enter
or
int3
mov
push
xchg
xchg
xor
data16
dec
ror
xchg
or
pusha
arpl
nop
(bad)
out
fcom
or
xor
popf
adc
pop
pop
(bad)
pop
sbb
in
jns
ror
ins
(bad)
jmp
sahf
push
out
ins
in
adc
cmps
icebp
and
in
adc
ins
jae
inc
dec
rcl
stc
scas
popa
loop
retf
mov
int3
out
mov
imul
aam
xor
jmp
adc
ja
ror
pop
mov
xchg
push
pop
test
dec
ret
sub
and
mov
add
cmp
or
test
shl
rcr
jae
xchg
out
lds
dec
(bad)
adc
cmps
fwait
or
lods
aas
repz
pop
sub
add
fwait
mov
loop
jno
push
jnp
(bad)
ja
sub
pop
popa
ret
in
mov
mov
and
mov
xor
jae
jo
xor
push
or
je
sub
sahf
or
xor
and
loope
leave
pop
test
loopne
rcr
adc
ret
aaa
cmp
or
sbb
loopne
cvtps2pi
test
cmps
nop
nop
xor
lock
push
jae
lods
fwait
push
xchg
adc
push
nop
popa
mov
dec
enter
inc
outs
push
dec
mov
jnp
imul
pop
mov
inc
mov
xchg
jne
push
or
cld
int3
add
and
jmp
cmp
pop
mov
and
sbb
js
pop
push
mov
add
fcomip
fisub
(bad)
sub
jne
sahf
xchg
mov
xchg
inc
dec
arpl
xor
pop
int3
add
xor
add
dec
inc
jle
inc
mov
jmp
sub
sub
getsec
inc
cmp
inc
or
pop
aam
icebp
fst
ss
mov
out
or
push
outs
fmul
nop
dec
push
pop
(bad)
lahf
mov
fcomip
push
cdq
pop
sti
mov
xor
lods
fsub
mov
cmp
jl
jne
cmp
mov
inc
lds
sbb
pusha
push
push
clc
pop
inc
push
call
mov
and
call
push
mov
popf
retf
cwde
mov
ss
bound
cmps
sar
shl
push
dec
retf
inc
xchg
adc
adc
outs
dec
cmp
addr16
and
call
(bad)
iret
inc
mov
push
hlt
and
push
je
push
jb
add
ins
mov
adc
push
sub
push
or
cmp
add
fwait
test
out
sub
xchg
cmp
push
sub
(bad)
outs
lds
add
fild
and
jnp
inc
jo
ins
inc
aaa
add
push
adc
test
xor
jmp
stc
xor
xchg
push
into
aad
jle
das
(bad)
push
sbb
or
call
adc
out
movs
loopne
outs
mov
hlt
add
push
lea
cmp
icebp
add
push
mov
out
das
aaa
xlat
cmc
les
cwde
inc
ror
inc
icebp
or
fld
pop
lahf
or
(bad)
and
jbe
mov
pop
and
add
stos
arpl
jb
adc
movs
pop
push
daa
mov
pusha
jmp
out
cmp
pop
xchg
gs
cmc
adc
frstor
xor
rol
(bad)
jne
push
and
scas
cld
nop
push
jbe
sub
out
xchg
fnstsw
shl
inc
dec
gs
aas
hlt
sub
jmp
les
xchg
retf
fld
dec
call
mov
mov
sub
inc
call
xchg
and
inc
jnp
movnti
inc
push
mov
lods
jne
cmp
push
sbb
add
cmp
add
cmp
xchg
fdiv
add
push
sub
add
jne
push
(bad)
icebp
fcom
std
xor
xchg
adc
jl
in
sbb
stc
std
fwait
aas
jmp
adc
scas
xor
push
pop
dec
cmp
ja
add
or
mov
push
out
xchg
jg
pop
mov
jmp
in
xchg
add
pop
mov
in
xor
inc
or
push
retf
mov
adc
mov
cmps
mov
and
and
jns
jae
sti
out
dec
mov
test
add
hlt
cmc
cmp
adc
xor
cld
(bad)
xchg
jecxz
cmps
adc
sub
jmp
fst
scas
xchg
cmp
out
aas
xor
xor
cmc
repz
scas
aaa
adc
mov
jne
xchg
std
cmc
popf
into
aad
arpl
ins
add
push
inc
and
fnstcw
sbb
(bad)
dec
mov
mov
int3
pop
shl
pop
pop
xchg
sub
rcl
sub
mov
repz
push
rol
loope
xor
sbb
ja
call
pop
inc
daa
icebp
dec
retf
mov
in
stos
mov
cli
push
pop
movs
xchg
aas
inc
jp
scas
int3
es
xchg
cmp
or
mov
ror
mov
into
std
lock
mov
shl
scas
loop
sub
sbb
rcr
stos
icebp
inc
repnz
mov
xchg
inc
(bad)
imul
fwait
mov
ja
imul
jbe
arpl
lahf
stc
add
and
mov
xchg
mov
jg
test
jmp
int3
out
cmp
lock
aam
fwait
mov
jbe
imul
out
arpl
sysenter
jne
dec
stc
add
xor
mov
out
and
mov
xor
push
xchg
pop
dec
push
xchg
into
gs
in
jmp
cmp
mov
mov
jmp
dec
pop
cmps
mov
push
das
and
push
dec
ds
pmulhw
daa
jmp
imul
je
test
and
jg
xor
je
or
fwait
sti
mov
xchg
cmp
stos
mov
ins
outs
push
sub
out
enter
fisubr
inc
inc
aam
adc
and
or
iret
loope
jg
cmp
adc
adc
or
add
outs
int
out
mov
aam
mov
fisub
shr
ror
idiv
cmp
mov
pop
retf
cmps
add
xlat
ins
fadd
mov
jo
sub
subps
adc
cmp
jo
fisttp
xor
xor
and
push
sub
call
icebp
popa
mov
test
jne
and
dec
out
leave
pop
ins
cmp
fisttp
mov
ja
push
popa
fdiv
xor
stc
je
xchg
fiadd
pop
lods
js
mov
je
cdq
movs
rcl
ins
cmps
fmul
(bad)
mov
ss
scas
loopne
test
sbb
xchg
data16
cmps
in
push
pop
mov
pop
add
iret
imul
(bad)
in
aad
dec
inc
sub
loopne
addr16
js
push
jb
ret
xor
jp
rcr
inc
fs
adc
cmc
out
aaa
sbb
push
lods
push
call
into
sbb
pusha
xor
shl
dec
loop
xor
and
imul
mov
leave
shl
xor
aaa
sub
ds
xlat
pop
popa
mov
cmc
into
cs
mov
test
popf
push
pop
nop
sti
pop
pop
fwait
mov
int3
sbb
fld
pop
das
rcr
scas
sub
jb
nop
leave
lea
add
xchg
mov
xor
mov
push
leave
test
js
pop
(bad)
cmp
push
jo
sbb
jle
arpl
push
lods
jg
fisub
rol
and
inc
bound
and
stos
push
cmp
mov
or
das
jbe
iret
fdiv
or
dec
inc
pop
out
aaa
repz
outs
xor
and
adc
movs
sbb
lock
or
dec
lds
fisub
aam
fldenv
movs
fnstenv
jbe
lock
mov
(bad)
push
and
fild
mov
jne
in
mov
mov
push
sbb
add
neg
imul
jle
pusha
and
mov
out
hlt
outs
xor
cmc
out
repnz
xor
dec
sub
call
push
sub
icebp
jmp
mov
pop
call
popa
out
popa
and
adc
xor
scas
mov
fwait
jmp
mov
enter
and
test
(bad)
xor
xchg
fisttp
clc
and
pop
cmp
call
int
xchg
out
jbe
sbb
mov
cmp
aaa
sub
xor
mov
inc
ds
push
and
cdq
fcom
dec
mov
pop
push
pop
(bad)
jg
ds
out
fs
mov
mov
in
mov
push
mov
sbb
dec
ds
jp
stos
repnz
das
es
daa
xchg
inc
ss
jo
xchg
sbb
inc
in
xor
imul
sar
mov
fwait
lock
dec
mov
mov
mov
and
call
inc
hlt
inc
add
in
repz
jae
inc
adc
cmps
dec
dec
inc
push
xor
cmp
cmc
sbb
je
xlat
icebp
pop
lea
fldcw
(bad)
cmp
mov
loope
popf
push
and
and
sub
mov
dec
test
adc
into
mov
sbb
in
jge
(bad)
aam
daa
mov
(bad)
pop
and
sub
cdq
iret
gs
cmp
or
call
sbb
aaa
in
inc
sbb
jae
imul
lods
inc
into
cmp
jle
shr
es
and
xchg
pop
ds
std
xor
push
(bad)
(bad)
out
push
adc
xor
out
fstp
xchg
movs
mov
jno
sahf
es
xchg
cli
int
(bad)
add
adc
cmp
xchg
jecxz
push
call
mov
cmp
sti
or
ret
sbb
mov
int3
arpl
test
xor
cmp
jecxz
into
mov
dec
adc
outs
dec
ins
cmp
retf
add
push
jae
sub
adc
sub
std
inc
or
inc
mov
adc
and
mov
out
and
test
cmp
or
cmps
adc
dec
cli
int
or
ret
aaa
add
shl
mov
nop
mov
xchg
fistp
imul
scas
lods
pop
pop
add
push
ja
ficomp
bound
retf
xchg
js
cs
adc
movs
rol
pop
ja
or
xchg
push
mov
adc
cmp
sub
mov
std
push
fwait
add
sbb
fsubr
retf
or
add
retf
sub
popa
inc
imul
cli
imul
and
jb
or
cmp
xor
dec
test
es
fs
cmp
xor
or
or
add
test
test
dec
mov
out
pop
pop
addr16
inc
dec
or
sti
jae
add
std
pop
jmp
xchg
push
out
movs
not
mov
jae
fnsave
fucomip
and
pushf
mov
popa
ret
pop
cwde
shr
mov
xor
lahf
and
and
ret
push
(bad)
fs
adc
bound
idiv
sub
dec
push
adc
cmp
sub
fistp
cmps
icebp
mov
jecxz
clc
xchg
jns
stos
les
adc
mov
ja
shl
jno
xchg
push
mov
rcr
out
cmp
xchg
imul
in
fild
arpl
or
imul
xchg
int3
enter
ror
jmp
cmps
fwait
pop
inc
(bad)
fwait
test
lahf
lea
mov
popa
ror
cwde
shr
loope
push
adc
or
adc
sub
or
and
clc
(bad)
pop
jno
xchg
sub
add
dec
fdiv
mov
call
fisubr
out
push
cmc
and
loopne
les
scas
int3
xlat
inc
jae
js
jo
adc
mov
ret
jne
ret
dec
or
mov
dec
loopne
int3
jge
pop
pop
fprem
mov
add
jmp
test
pop
and
xchg
popf
pop
mov
inc
jp
xchg
pop
cld
add
daa
add
ds
aad
add
jo
mov
mov
mov
hlt
test
lods
rcl
sbb
jns
pop
setp
jmp
mov
xchg
int3
in
pusha
jle
xor
sahf
mov
mov
push
sub
or
jge
inc
cmp
sub
ins
mov
pushf
jge
mov
ficomp
inc
fcom
xchg
dec
es
bound
in
loope
retf
or
sbb
push
retf
inc
pop
mov
sub
pop
jl
pusha
lods
jnp
ja
adc
sar
add
mov
arpl
and
(bad)
xchg
cmps
int3
and
cmc
aas
add
push
push
pop
lds
xlat
add
sahf
mov
adc
shl
xor
mov
dec
and
fcom
imul
jns
adc
out
lock
loope
pop
test
mov
push
out
push
pushf
repnz
in
ins
retf
pusha
and
xchg
movs
push
call
ds
pop
inc
and
xchg
cs
push
mov
imul
cld
mov
mov
sbb
or
inc
jbe
call
sbb
cmps
jl
cmps
sbb
push
mov
pop
and
inc
rol
(bad)
aad
in
in
add
and
nop
retf
sbb
dec
in
xor
push
mov
and
or
(bad)
jge
jbe
aad
mov
popa
(bad)
mov
fst
cmps
mov
jp
sti
pop
push
pop
xchg
lods
je
mov
mov
les
mov
add
movs
test
mov
mov
or
scas
adc
push
sbb
enter
dec
inc
cmc
(bad)
call
sub
sub
aas
repz
scas
popa
ss
ins
or
and
jo
(bad)
xchg
xchg
xor
lds
scas
mov
inc
mov
or
and
mov
sub
push
cld
int
aad
(bad)
jmp
cmp
int
pop
push
cdq
sbb
retf
dec
fadd
mov
lea
push
mov
sbb
dec
sbb
add
iret
pop
cmp
lds
cdq
imul
sbb
ds
rcl
scas
mov
mov
xchg
cmp
jno
movs
mov
push
hlt
data16
std
ins
sub
mov
sub
mov
lods
pop
mov
int3
call
or
jle
shr
fisttp
leave
xor
ins
mov
call
mov
pop
xor
push
int
mov
sbb
mov
ret
mov
pop
lahf
push
mov
jnp
in
pop
das
rol
xchg
stos
adc
arpl
pop
cmp
mov
cmp
aad
(bad)
jmp
jmp
cmps
inc
sbb
icebp
in
or
pop
sub
cmps
stc
lods
cmp
add
ins
cld
retf
cmp
mov
or
cld
sub
jmp
std
adc
(bad)
or
fwait
pop
fwait
(bad)
int
mov
vpsllq
xchg
adc
pusha
aaa
rcr
inc
mov
push
push
pop
pop
sar
je
xchg
(bad)
loop
pop
and
push
push
int3
adc
fwait
dec
in
ret
mov
rol
jae
out
loopne
popf
dec
std
fiadd
push
fld
ror
movs
pusha
add
xchg
xor
leave
and
dec
ins
std
sbb
fdivp
imul
movs
sub
fsubr
xor
mov
add
ror
pop
jae
ds
xchg
dec
pop
xchg
mov
out
ins
sbb
pushf
vpsubb
sub
pop
jae
xchg
pop
adc
mov
out
pushf
repz
pop
lods
das
xchg
aaa
cwde
inc
dec
jmp
aaa
pop
jecxz
js
dec
pop
adc
jns
and
inc
mov
push
inc
(bad)
movs
sub
ds
into
mov
xor
dec
xchg
loop
sbb
cmp
frstor
test
pop
adc
mov
retf
loop
xor
stos
int3
imul
ss
icebp
jns
stos
and
lock
mov
xchg
pusha
mov
xor
aas
les
inc
add
enter
and
pop
addr16
sub
ds
outs
pop
(bad)
jl
shl
aaa
stc
into
outs
inc
sbb
ror
(bad)
aaa
int
jg
cld
dec
nop
add
out
push
dec
dec
and
cdq
lods
cwde
lea
sub
sub
or
popf
push
push
cmp
push
push
jg
das
in
fist
push
iret
jle
xor
inc
es
(bad)
xor
movs
(bad)
jmp
xor
scas
push
sbb
pop
loop
ss
sub
fcmovu
ret
mov
mov
xor
addr16
popa
adc
pop
sti
icebp
sbb
mov
and
fwait
fwait
xchg
rol
cld
enter
popa
addr16
nop
xchg
jbe
ins
ss
out
jnp
int
test
mov
xchg
test
lods
mov
push
push
sbb
mov
gs
scas
xchg
jl
(bad)
mov
sbb
jb
inc
pusha
sbb
xor
cli
jp
sub
call
pusha
leave
push
retf
scas
call
sub
enter
fs
lahf
xor
sbb
movs
fst
js
cs
out
icebp
inc
aad
xchg
xlat
cmc
dec
or
loopne
xchg
cmp
aas
imul
jne
shl
iret
sub
sbb
sbb
adc
js
mov
es
mov
mov
mov
add
sbb
scas
je
aaa
push
(bad)
pop
mov
and
pop
add
and
lods
mov
dec
cmp
mov
pop
in
mov
aaa
lds
or
loopne
cmps
aas
jg
clc
push
jno
in
fs
loopne
pop
fsub
aaa
test
retf
push
outs
aam
push
shr
lods
aaa
(bad)
rcl
mov
mov
into
inc
lds
ds
leave
arpl
cmp
or
and
ret
sbb
jo
xchg
xor
(bad)
inc
test
dec
movs
fimul
xor
mov
xor
add
mov
inc
and
push
fidiv
lods
pop
xchg
sub
cs
add
dec
push
xchg
mov
loop
pop
scas
cmp
xor
mov
mov
jp
mov
sbb
and
xchg
test
add
aas
sub
or
jmp
test
bnd
xchg
dec
fcom
pop
sbb
mov
aam
mov
enter
fidivr
lea
inc
lahf
sar
cmps
cmp
cli
jle
push
add
mov
push
dec
(bad)
popf
std
scas
std
xchg
loopne
jns
push
and
jne
fiadd
inc
adc
pop
dec
push
push
push
push
lock
inc
xchg
ds
xor
ror
aaa
xor
and
popf
mov
idiv
mov
jecxz
or
mov
icebp
pop
ret
pop
(bad)
cs
push
mov
retf
bnd
adc
or
cs
lods
dec
xchg
loope
(bad)
xchg
and
sub
xor
push
mov
add
jnp
retf
xchg
leave
enter
nop
dec
jno
pop
ror
ss
stos
adc
or
or
push
push
rol
das
push
xor
cmc
mov
ret
xor
mov
adc
fist
int
(bad)
repnz
fld
sub
push
shr
sbb
loop
es
mov
pop
retf
sub
sbb
jecxz
fnstsw
or
call
inc
outs
vphaddudq
cs
mov
test
xchg
pop
dec
mov
out
add
mov
fidivr
icebp
and
xor
xor
dec
mov
dec
ins
test
mov
inc
jns
dec
(bad)
fisubr
fsubrp
clc
and
sub
lods
ja
mov
adc
mov
inc
sub
aam
lock
add
mov
pop
fwait
dec
jl
or
sbb
jne
jno
sub
pop
(bad)
cli
cmp
popf
js
inc
jne
add
inc
rol
push
ror
out
sub
or
addr16
popf
xor
cmp
pop
lods
mov
(bad)
xor
push
ret
paddsb
js
cli
hlt
stc
push
shr
ds
nop
cdq
js
cs
dec
scas
int
jl
aad
std
xchg
push
in
mov
jle
or
mov
iret
stos
pop
out
das
pop
imul
jle
ds
push
sub
div
and
xlat
fs
shr
lea
dec
pop
(bad)
jge
ss
jp
jno
sbb
pop
and
outs
pop
int3
popa
push
aad
cdq
jmp
dec
in
xchg
popa
sbb
lahf
jne
lods
mov
mov
lods
cmp
movs
push
stos
jns
xor
mov
jp
cld
lods
not
cli
fadd
test
mov
retf
test
push
cmps
jmp
xchg
pop
daa
mov
test
cdq
hlt
add
adc
das
mov
jo
add
addr16
pop
add
mov
ret
fs
scas
sub
cmp
dec
ret
icebp
fdiv
fwait
cli
jno
test
push
cmp
mov
aaa
test
pop
xchg
in
or
add
arpl
out
mov
in
push
jmp
out
mov
pop
ret
adc
mov
push
add
out
(bad)
mov
loopne
pop
mov
jg
or
sub
push
push
les
outs
mov
sar
imul
scas
in
cmps
(bad)
cmp
out
scas
jle
add
rcpps
jne
daa
mov
jnp
shl
cs
mov
in
dec
outs
add
mov
push
push
dec
mov
pop
popa
outs
inc
scas
rcr
retf
mov
jnp
aad
fmul
pop
aas
mov
dec
fs
sub
rcl
adc
and
inc
jecxz
jecxz
sbb
fcomp
xchg
mov
cmps
fs
cmp
outs
sub
das
mov
in
mov
(bad)
sub
or
js
(bad)
cs
stos
jno
xchg
mov
out
lahf
mov
fild
ficomp
or
add
pop
sbb
(bad)
push
add
bound
std
mov
and
scas
loope
call
sub
xchg
xchg
aas
sbb
xchg
cmp
nop
int3
lock
push
or
mov
sar
and
jmp
adc
int
dec
out
inc
cld
ret
mov
nop
push
mov
push
(bad)
cmp
mov
test
xor
ret
sub
dec
addr16
jge
imul
ror
mov
lods
fs
sub
sub
js
jg
dec
mov
je
cmp
cli
inc
mov
push
dec
shl
(bad)
popa
cwde
lahf
dec
xchg
inc
mov
stos
(bad)
or
xchg
imul
push
dec
mov
cmc
or
inc
(bad)
mov
mov
stos
push
sahf
cmp
js
cli
sub
test
pop
sbb
loop
mov
ins
add
adc
enter
idiv
test
add
add
jae
jecxz
cwde
gs
iret
mov
test
fcomp
jbe
lahf
or
push
ror
imul
jmp
adc
cwde
ins
mul
outs
pop
or
ins
nop
clc
dec
cmp
mov
lds
sub
retf
nop
xor
call
mov
sub
clc
dec
fist
out
sub
ds
out
retf
aaa
sub
int
mov
mov
dec
stos
adc
leave
fst
lahf
xor
or
inc
xchg
fmul
cli
retf
pop
jmp
mov
jmp
aad
dec
jg
mov
adc
xor
(bad)
out
and
cmp
shl
mov
add
out
cmp
dec
movs
adc
xor
push
not
xchg
jns
and
jmp
jge
frstor
test
mov
dec
cs
xor
dec
adc
adc
sar
lea
xor
ss
inc
ror
fild
jg
xchg
and
pop
or
push
pop
adc
loope
push
leave
pop
loopne
shl
cmp
fiadd
xchg
hlt
mov
cmp
(bad)
mov
push
jecxz
cmp
dec
scas
or
or
inc
sbb
dec
inc
xor
lock
pop
cmc
out
sbb
dec
add
adc
mov
inc
pop
add
dec
mov
es
xchg
push
xor
ror
jno
in
sti
lods
push
jb
xchg
ds
mov
movs
ret
push
pop
out
add
into
hlt
in
sbb
rcl
and
cmp
cmps
(bad)
stos
in
xor
(bad)
enter
dec
add
stos
push
jo
xor
pop
imul
popf
arpl
add
and
lds
jge
sti
test
out
sbb
icebp
fstp
daa
ret
jno
dec
out
or
add
faddp
and
jmp
out
push
add
xor
and
jge
pop
fwait
dec
ins
test
cmp
inc
fbstp
pusha
imul
repnz
mov
ins
jno
dec
repz
call
inc
in
std
ror
hlt
inc
aaa
movs
dec
jg
xchg
pop
add
xchg
xor
adc
arpl
dec
push
nop
pop
cmp
out
leave
jb
sbb
popf
push
push
sub
sbb
mov
stc
jle
or
gs
jno
push
mov
or
mov
inc
aas
fidivr
ja
inc
inc
stos
xchg
push
add
fistp
add
mov
add
jno
or
sahf
std
mov
outs
and
dec
shl
push
outs
test
imul
loopne
jns
sbb
jo
iret
psubw
call
sub
mov
sbb
push
lds
mov
dec
mov
jb
(bad)
scas
int
into
cmp
gs
fcomp
(bad)
adc
ins
sahf
fwait
sub
add
xor
ds
addr16
mov
pusha
pop
dec
xchg
inc
mov
sbb
pop
ret
inc
lods
add
aam
aam
mov
cwde
hlt
ret
inc
adc
out
dec
(bad)
ins
cdq
outs
cmps
clflush
nop
fld
adc
or
xor
cld
sahf
dec
pop
es
mov
jle
and
das
sub
jg
pop
into
cmp
add
mov
push
mov
sbb
jnp
xor
shl
dec
dec
xchg
fisttp
int
jp
lahf
push
mov
in
push
lahf
or
fwait
hlt
mov
pop
not
rcl
outs
mov
jg
retf
mov
loope
pop
and
fsubr
sub
cmps
adc
imul
pop
bound
mov
fsubp
inc
scas
lds
adc
push
(bad)
sbb
dec
pop
inc
xchg
and
jae
xchg
mov
jno
iret
stc
dec
xor
mov
rcl
jb
cmps
jne
fsubr
or
cmps
cmp
mov
leave
pop
jle
lods
fsub
mov
mov
movs
pop
fwait
mov
out
(bad)
push
ja
jle
dec
pop
add
mov
push
sbb
nop
mov
outs
push
gs
or
ss
add
mov
xchg
pop
jp
mov
stos
sbb
jge
adc
lods
retf
in
mov
xor
or
mov
xchg
rcr
test
rcl
or
mov
inc
shr
mov
sbb
fs
retf
(bad)
hlt
pop
imul
aaa
jae
repz
stos
push
outs
pop
xchg
xor
xchg
sbb
cmp
add
xor
in
aaa
fisttp
sbb
mov
ins
fldcw
cmp
inc
jmp
icebp
dec
xchg
jmp
cmp
sub
mov
dec
outs
into
icebp
cwde
mov
shl
mov
test
mov
push
shl
lods
test
popa
xchg
outs
pushf
lds
xor
dec
daa
lods
jo
rol
pop
arpl
cmps
push
pop
sbb
fist
mov
scas
cmc
pop
pop
mov
pop
movs
sub
jae
jmp
mov
pop
ror
jno
fwait
jecxz
push
shr
out
or
and
mov
sub
out
lds
inc
pop
bound
mov
add
shr
outs
xchg
jne
xor
cmps
aaa
and
pop
ds
add
push
movs
rcl
dec
ret
sub
sbb
pop
fcomi
pop
fcomp
push
pop
shl
adc
scas
repz
push
mov
enter
loop
ins
(bad)
push
(bad)
inc
ss
pop
mul
dec
pushf
push
cmp
pop
sbb
add
push
and
(bad)
sub
movs
in
add
or
in
adc
loope
cmp
std
inc
ds
mov
mov
out
mov
push
in
or
outs
test
add
test
xchg
mov
lahf
jle
ret
or
mov
push
push
cmp
test
cmp
or
ins
xor
xor
ss
or
and
push
int
call
push
fs
mov
popa
inc
out
mov
sub
in
pusha
data16
das
push
mov
inc
in
adc
jo
outs
call
test
push
push
inc
cmp
int
inc
fnstsw
push
call
test
mov
mov
mov
inc
or
pop
addr16
cmps
nop
inc
int
int
test
push
push
add
(bad)
test
pusha
add
or
cmp
repz
lods
xor
mov
inc
iret
test
cld
and
cmp
icebp
xchg
rol
or
xlat
mov
test
data16
int
fwait
sti
lahf
loop
dec
cmp
sub
outs
in
in
xor
shl
sbb
in
cmc
rcr
clc
dec
mov
inc
jbe
pop
mov
jno
fistp
inc
or
pop
call
movs
push
cli
mov
inc
int3
pop
or
sbb
jmpw
cmc
jns
and
jmp
repnz
das
jg
pop
das
xor
movs
rep
sti
in
mov
jmp
sub
pop
jnp
or
cmpxchg
dec
js
das
push
push
lods
dec
inc
scas
jne
add
icebp
je
jmp
repz
ins
mov
iret
jmp
imul
push
cmp
xor
nop
in
sahf
add
mov
mov
leave
pushf
retf
pop
rcl
(bad)
leave
add
add
sbb
mov
push
in
rcr
les
jnp
je
mov
jb
sbb
cmps
mov
fwait
or
test
push
outs
aad
add
cmc
pop
out
sbb
mov
jnp
xchg
arpl
inc
add
mov
pop
lahf
adc
mov
arpl
push
sbb
cdq
jmp
push
add
nop
cmp
xchg
xchg
mov
test
bound
or
sub
arpl
ud1
xchg
test
xchg
cli
adc
std
sbb
mov
sub
jbe
adc
aad
adc
(bad)
xor
ins
cwde
or
sub
push
pop
push
sub
out
xor
mov
pop
dec
ds
dec
xor
fidiv
inc
mov
inc
push
xchg
mov
cld
mov
inc
or
mov
repz
xlat
mov
pop
test
cmp
mov
jne
imul
aam
retf
sbb
cmp
jo
out
jle
cdq
adc
cli
(bad)
mov
jmp
xor
fnsave
les
aaa
jne
mov
adc
sbb
mov
test
mov
shr
dec
hlt
out
inc
out
loop
hlt
or
add
popf
push
loopne
sbb
shl
ss
enter
vsqrtsd
nop
mov
sub
fdiv
in
cmp
cmp
dec
adc
inc
jae
add
sub
sub
leave
sub
stos
or
cs
adc
pop
dec
iret
ror
out
(bad)
leave
div
loope
dec
jg
jl
jnp
mov
jge
in
xchg
and
pop
(bad)
fidiv
push
ret
ja
int
and
test
xchg
cmp
xchg
xchg
jb
sbb
cmp
shl
lods
mov
pop
mov
jg
dec
inc
mov
jo
movs
sti
or
maskmovq
imul
sub
xlat
push
loop
aaa
mov
std
stos
int
les
js
inc
lods
int
or
pop
pusha
fs
pop
and
xchg
mov
fcomip
adc
or
push
mov
arpl
mov
dec
xor
fcomp
sub
push
jmp
rol
inc
push
es
sbb
es
or
sbb
add
cmp
lea
and
push
xchg
loopne
movs
pop
xor
pop
in
jbe
test
mov
fs
cmp
push
ins
mov
fild
lds
add
xchg
mov
push
xchg
fst
xchg
retf
add
mov
xchg
mov
jo
ins
jb
(bad)
push
jns
retf
dec
das
rcl
sahf
pop
fbld
push
mov
xor
sbb
in
mov
push
mov
mov
les
test
sbb
jae
hlt
push
dec
mov
jae
iret
retf
mov
scas
ja
xor
retf
cwde
les
sar
mov
push
fsubrp
(bad)
fst
test
sbb
mov
add
mov
cmp
xchg
jno
popa
lahf
adc
(bad)
cmp
out
aam
std
test
xchg
lahf
dec
add
arpl
or
fsub
(bad)
dec
popa
sbb
sbb
lds
and
sbb
test
xor
jmp
shl
(bad)
lock
fisub
fnstenv
aas
sbb
stc
fxch
or
bound
xor
add
test
scas
mov
mov
jecxz
repnz
mov
sub
pop
loope
mov
into
les
imul
pop
(bad)
call
and
jb
adc
movs
push
pop
pushf
xor
inc
add
xor
clc
xchg
movs
movs
cmp
lds
or
push
xor
(bad)
cmps
(bad)
addr16
cmp
sub
cmps
sbb
mov
sbb
mov
push
xchg
jb
clc
add
cmps
(bad)
and
pop
jge
mov
pushf
fiadd
pop
pop
or
push
cli
sbb
mov
mov
hlt
push
xor
cdq
fcmovbe
or
(bad)
leave
dec
jne
stos
mov
adc
mov
iret
mov
mov
add
xchg
xchg
fld
inc
inc
xchg
inc
cdq
call
and
and
lahf
movs
mov
jecxz
movs
cs
dec
ins
add
fisttp
ss
inc
sbb
mov
xchg
lahf
sbb
sub
pop
xchg
add
cmp
imul
pop
jne
enter
inc
sbb
sub
mov
or
mov
mov
adc
inc
and
mov
push
imul
adc
sar
pop
leave
repz
sti
jecxz
hlt
inc
test
repnz
jo
(bad)
push
mov
or
lods
aaa
mov
jecxz
or
mov
pop
adc
frstor
dec
jg
jp
inc
cmp
ret
push
fmul
ret
(bad)
adc
sbb
or
mov
cmp
jmp
out
(bad)
sahf
nop
dec
or
(bad)
dec
jl
dec
fidivr
cmp
lea
leave
iret
xchg
movs
sar
xchg
std
lea
cmps
adc
jae
or
sti
test
push
mov
stc
inc
test
pop
stos
hlt
mov
mov
shl
pop
call
inc
add
shl
sbb
mov
mov
ins
push
xchg
stos
out
lods
into
cs
fsub
mov
mov
push
popf
add
jmp
or
inc
push
inc
rol
mov
push
fld
jns
mov
lock
sbb
add
les
ror
movs
jle
mov
(bad)
and
ficom
cmps
idiv
and
xor
sbb
mov
data16
js
push
and
arpl
mul
mov
popf
lds
lock
addr16
sbb
loopne
and
nop
repz
repz
nop
pusha
aad
mov
push
pop
dec
mov
mov
mov
jbe
push
sbb
dec
lods
test
mov
jmp
mov
mov
gs
(bad)
jns
push
xchg
pop
mov
xor
fdiv
rol
mov
xchg
push
fistp
fucomi
jb
jecxz
adc
fcmovne
xlat
xor
mov
es
bound
fs
adc
stc
test
mov
jnp
xor
and
inc
xchg
push
xchg
or
mov
gs
mov
or
idiv
xchg
in
(bad)
inc
inc
fnstsw
shl
xchg
lods
pop
addr16
dec
dec
arpl
or
shr
test
clc
mov
adc
and
adc
movs
xor
rcl
pushf
stos
jl
inc
popf
sub
push
sbb
push
cs
sbb
stc
dec
call
inc
cmp
sub
addr16
sbb
sub
test
xor
shl
mov
pop
jbe
cld
pop
neg
mov
jle
mov
sbb
(bad)
xchg
fldenv
mov
les
data16
or
cli
jg
mov
mov
xchg
mov
add
mov
imul
mov
in
mov
inc
push
xor
jg
pop
push
outs
jnp
jbe
or
sub
jo
fucomip
outs
mov
pop
jge
sbb
int3
mov
ins
and
addr16
sahf
(bad)
sbb
ss
fucomip
sub
jns
and
gs
(bad)
fs
mov
repz
xor
inc
cs
aaa
push
and
test
sbb
aad
and
inc
jl
pop
stos
or
fst
retf
ins
inc
pop
data16
test
push
jecxz
mov
lock
push
mov
test
dec
stos
push
sbb
add
iret
xor
sti
fdivr
cmp
mov
scas
pusha
mov
add
movs
jne
jg
imul
jno
outs
cwde
mov
mov
popf
cmp
(bad)
dec
xlat
push
push
adc
aaa
add
gs
xor
and
jp
push
stos
mov
das
dec
stos
sbb
lea
dec
jg
and
fcmovu
xchg
dec
cmp
loopne
jbe
test
mov
push
dec
arpl
jg
add
inc
or
dec
sbb
inc
out
and
mov
push
sub
ret
dec
mov
sub
inc
inc
or
movs
add
ds
int3
mov
inc
enter
stc
sbb
cs
xor
lock
call
lods
bound
sbb
sahf
aaa
mov
nop
ficom
ja
jae
fst
outs
call
dec
fdivr
jmp
jle
jle
pop
jecxz
inc
shr
mov
inc
out
pop
pushf
es
jle
ss
pop
dec
pop
test
jae
mov
cmp
xchg
imul
dec
jmp
inc
inc
adc
(bad)
in
push
out
mov
cld
cli
es
jg
cmp
addr16
cmp
(bad)
mov
test
mov
mov
cmp
leave
push
mov
cmp
mov
int
cli
and
pop
push
call
or
push
xor
pop
jmp
sbb
push
mov
std
icebp
mov
dec
stos
mov
icebp
pop
sub
sbb
hlt
mov
add
in
stc
pop
gs
sbb
je
xchg
add
test
inc
ret
inc
scas
inc
ficom
out
aaa
push
xchg
sti
add
dec
sub
test
shr
push
xlat
in
mov
into
repz
add
sub
outs
adc
sub
jecxz
aad
mov
daa
dec
push
dec
loopne
add
mov
inc
cmp
inc
stos
ret
pop
add
jmp
inc
pop
xchg
sar
or
cmp
clc
xlat
es
test
xchg
popa
dec
enter
test
mov
and
mov
in
xor
in
bound
test
pop
push
arpl
jg
add
test
pushf
add
arpl
shl
out
dec
dec
sbb
movs
inc
mov
scas
movs
xchg
cmp
mov
pushf
dec
sbb
mov
mov
sbb
js
into
xor
test
shr
retf
outs
nop
(bad)
(bad)
jb
or
jae
mov
mov
aam
fnstenv
aaa
add
inc
repnz
sbb
call
or
rcr
jns
jl
xor
add
fisub
pusha
or
js
fldenv
jne
sbb
cmp
mov
mov
xchg
cmp
fisttp
adc
test
add
ror
cmps
inc
(bad)
fild
test
xchg
or
call
test
aad
pushf
or
mov
bound
and
fs
cli
dec
cmp
and
mov
push
loopne
(bad)
push
inc
(bad)
shl
ins
cmp
lods
inc
fisub
xor
fwait
std
test
nop
ds
lds
lea
stos
fisubr
adc
pop
popf
jp
sar
aad
or
cs
(bad)
mov
fnstsw
xlat
mov
xchg
pop
pop
add
jb
retf
test
(bad)
sub
mov
js
repnz
dec
mov
push
in
pusha
sbb
les
sahf
and
mov
in
addr16
jge
pop
loop
and
inc
cmp
mov
pop
daa
test
add
lods
pop
push
fnstsw
cmp
push
(bad)
mov
inc
dec
pop
push
sbb
(bad)
mov
and
adc
mov
in
add
in
mov
and
js
xor
xchg
scas
cwde
cs
hlt
lods
mov
popf
rol
xchg
mov
xchg
aas
add
in
jle
lea
mov
pop
sbb
xchg
in
pop
cmc
push
push
das
pop
test
xor
(bad)
jne
xlat
adc
jae
push
setns
jbe
xor
cmp
in
(bad)
into
cwde
mov
dec
fcomp
mov
sub
mov
mov
cwde
int3
imul
popf
aaa
and
lds
mov
add
and
gs
push
mov
pop
mov
call
fwait
cmp
stc
and
cwde
arpl
retf
ret
lods
(bad)
fsub
dec
imul
mov
inc
mov
cmp
add
xchg
xor
jmp
cld
sbb
mov
add
(bad)
pop
pop
mov
adc
jmp
xor
sbb
mov
pop
outs
test
mov
and
xchg
imul
dec
mov
or
loop
test
rcr
into
ret
cs
frstor
cmps
mov
cmp
nop
push
sbb
sbb
mov
mov
dec
fld
or
dec
cwde
cmp
xchg
dec
sbb
retf
sahf
pop
inc
mov
add
xchg
jmp
jge
sub
dec
or
in
xor
xchg
or
inc
push
out
pop
and
pop
sbb
icebp
loop
pusha
fistp
jb
inc
test
push
push
lods
(bad)
cs
mul
dec
sub
mov
das
xor
and
mov
movs
xor
popf
add
jp
les
push
push
ror
mov
in
cdq
aad
inc
dec
lods
js
xor
xchg
sbb
outs
repz
mov
cmps
dec
jbe
icebp
sub
out
std
pop
lahf
mov
outs
nop
lfs
daa
jb
fs
sub
or
fild
and
jb
adc
fidiv
sub
cwde
mov
push
stos
fs
cmp
mov
mov
sub
repz
sbb
stc
xor
imul
ret
jb
and
push
pop
aaa
test
pop
fcmovnbe
jno
jb
mov
rep
adc
fcmovnbe
movs
add
dec
in
or
hlt
shr
push
jmp
or
dec
arpl
mov
mov
dec
in
inc
stos
sahf
xor
icebp
or
dec
push
int
loope
nop
or
mov
mov
mov
(bad)
push
fcom
and
loope
test
xchg
pushf
pop
or
cmps
sbb
pop
movs
or
in
cmp
call
add
pop
pop
inc
jnp
push
dec
out
inc
loope
mov
mul
push
addr16
jl
cmc
dec
mov
inc
test
sub
gs
and
cli
loope
test
popf
or
or
(bad)
sub
iret
push
jge
mov
mov
mov
call
push
jmp
add
mov
or
xchg
fwait
lock
push
(bad)
gs
cdq
dec
aaa
sti
je
movs
mov
sub
xchg
jnp
ss
xlat
retf
dec
cs
fistp
sahf
(bad)
jnp
pop
fidiv
hlt
ror
jp
add
xlat
ds
ds
inc
mov
sub
adc
dec
sahf
imul
out
jle
inc
cmp
and
mov
inc
push
dec
pop
data16
scas
or
jge
push
(bad)
or
div
into
rcr
cs
inc
repnz
inc
mov
sbb
cdq
push
push
inc
ret
inc
xchg
sub
mov
mov
xchg
addr16
cmp
fistp
add
rep
xchg
and
cmp
aaa
cmp
cmp
cmp
xchg
pop
and
cmc
outs
es
cs
mov
cs
aas
sub
idiv
inc
add
les
jp
mov
call
dec
daa
lods
cmp
stc
adc
cmc
cmp
mov
rol
in
jmp
push
add
scas
jmp
lods
jae
jae
loope
push
aas
mov
push
sub
xchg
mov
(bad)
jp
sub
mov
adc
and
push
mov
adc
cdq
(bad)
adc
rsm
(bad)
push
ja
cmps
arpl
pop
repnz
movs
xchg
repnz
cmp
mov
pop
jp
test
dec
jbe
cmp
dec
pop
sbb
or
inc
fcomp
fdiv
jbe
add
sub
xor
inc
je
es
pushf
inc
adc
js
mov
test
(bad)
idiv
cmc
dec
ror
sub
pushf
and
out
sbb
add
lahf
jmp
mov
fcmove
mov
cmp
int3
sub
aad
in
mov
icebp
xchg
leave
not
bsr
sub
retf
push
and
add
or
gs
lahf
movs
or
inc
mov
addr16
jmp
popf
or
xchg
stos
outs
scas
jo
jp
and
adc
jp
adc
xchg
scas
les
fbld
aas
test
push
shl
mov
adc
test
mov
fnstcw
or
fs
cmps
cmp
xor
dec
mov
pop
dec
mov
stos
mov
pop
pop
repnz
jo
adc
pop
fs
mov
fs
js
inc
sub
div
pop
inc
fwait
dec
push
stc
inc
and
push
cmp
popf
dec
pop
mov
or
je
cmp
mov
daa
gs
int
test
fnstsw
pop
out
cs
push
outs
jo
sub
movs
adc
scas
ds
pop
dec
jge
stos
mov
test
cld
xchg
jno
icebp
pop
push
push
ret
jl
jmp
enter
leave
fbld
adc
dec
out
loope
daa
ffreep
rcl
call
stc
inc
movs
pop
xchg
cdq
jnp
jbe
fs
mov
cmp
add
push
ret
jbe
jae
push
stos
loop
outs
nop
xchg
cmp
ds
or
add
pushf
jnp
stos
xor
jle
or
mov
fldl2t
mov
(bad)
call
lds
mov
mov
adc
(bad)
loope
push
pop
inc
(bad)
in
adc
mov
movs
enter
add
jecxz
cmp
cmc
mov
pusha
jb
fild
xchg
sbb
pop
test
add
and
adc
aaa
loopne
retf
mov
pop
dec
inc
push
arpl
jb
mov
cmps
test
push
mov
and
pop
dec
add
fdivr
lods
push
sub
push
jecxz
retf
movs
xor
fdiv
cdq
add
lds
loope
add
mov
push
xchg
dec
xor
or
push
xchg
out
pop
mov
xchg
cwde
push
outs
out
out
pop
test
add
push
xchg
inc
call
in
(bad)
shl
data16
dec
(bad)
mov
imul
mov
sub
mov
pop
xor
(bad)
sub
jmp
das
or
mov
gs
add
jb
xchg
movs
mov
jmp
cmp
cmc
inc
test
push
dec
std
jnp
pop
std
xchg
xchg
sub
lods
std
dec
bound
mov
or
sar
jge
sbb
jae
and
cdq
push
inc
in
xchg
ins
adc
push
inc
and
cmp
mov
mov
ins
cmp
les
int
or
test
and
stc
push
mov
rol
xor
mov
push
lods
sbb
cmps
mov
aas
sbb
lea
movs
repz
mov
iret
adc
push
pop
dec
xor
dec
fisub
inc
jge
pop
icebp
shl
imul
lods
ja
lods
lea
pop
out
mov
push
and
ja
and
xchg
or
inc
js
add
push
sub
push
or
jnp
xchg
mov
stc
xlat
inc
pop
imul
lods
fcmovu
add
icebp
cmp
aad
inc
inc
cs
mov
xchg
mov
das
leave
fidivr
in
out
mov
dec
jecxz
xor
gs
fneni(8087
xchg
push
sbb
and
lahf
or
pop
jno
adc
cmps
cmp
aas
call
xchg
lods
inc
add
cmp
jl
je
mov
mov
(bad)
cmc
pusha
ret
das
cmp
cmp
adc
cli
shr
mov
mov
sub
jp
mov
sahf
fdiv
into
and
gs
retf
inc
mov
sahf
fst
inc
xor
fnstcw
jg
and
and
in
dec
dec
sub
mov
mov
es
jg
or
into
pop
mov
mov
mov
ret
sub
mov
push
outs
inc
cmps
(bad)
cmc
adc
xchg
push
rcr
cdq
fs
pushf
bound
dec
cmp
and
add
pop
lahf
in
adc
mov
dec
std
adc
add
pop
dec
scas
inc
push
outs
jecxz
push
js
jp
mov
sbb
jp
pop
dec
xchg
pop
jle
cmp
stos
sbb
movs
sub
lahf
repz
in
xchg
sub
and
jmp
rcr
lock
xlat
sbb
add
sbb
iret
and
movs
imul
add
push
iret
xchg
ins
push
jbe
pop
aad
pop
sti
push
and
out
out
call
xchg
out
push
(bad)
fadd
lock
rol
xchg
or
iret
inc
ins
retf
dec
inc
fnsetpm(287
sbb
pop
repnz
add
(bad)
mov
mov
jnp
nop
and
arpl
jae
scas
aas
popa
mov
int3
mov
(bad)
inc
mov
adc
xor
out
(bad)
jmp
mov
jnp
pop
sahf
lds
push
mov
cmp
xchg
jbe
jae
cmp
and
pop
push
sub
es
aam
mov
std
retf
sbb
cli
(bad)
dec
fidiv
sbb
and
xlat
test
int3
push
jo
xchg
in
mov
fld
lahf
cmc
outs
popf
mov
push
jge
cmps
div
nop
shr
hlt
sar
cwde
or
pop
push
addr16
movs
pop
mov
iret
inc
outs
and
inc
push
pop
les
dec
jne
add
pop
jae
dec
inc
push
jns
push
in
sbb
popa
rol
sbb
sbb
mov
push
jp
fs
and
ror
mov
out
pop
in
mov
sti
out
mov
rol
cmc
ds
adc
mov
gs
push
(bad)
mov
retf
outs
cmps
nop
sbb
inc
add
jne
loopne
repz
inc
mov
scas
adc
or
cld
mov
int
xchg
stos
push
mov
cmp
sbb
and
mov
lods
push
mov
aaa
shl
aaa
cs
jecxz
xchg
aam
or
clc
pop
cmp
nop
dec
out
(bad)
xor
cmp
test
test
dec
lea
and
daa
mov
sbb
cmp
mov
sbb
lods
jmp
cli
in
fsubr
mov
lods
cmps
fdivr
ret
mov
dec
enter
cs
cmp
and
jnp
test
sub
sbb
shl
iret
and
pop
cmps
data16
ds
cmp
mov
jb
test
shl
jnp
mov
mov
and
or
out
mov
imul
push
lds
xchg
xor
aaa
rcr
push
sti
push
sbb
jmp
stos
xchg
popa
pop
lock
adc
sti
inc
mov
inc
and
sbb
or
mov
mov
dec
sbb
fistp
inc
sbb
and
and
repz
jecxz
or
sub
loopne
push
test
mov
shl
xor
int3
popa
iret
lea
outs
in
push
ds
sub
loop
sub
sub
(bad)
addr16
jl
mov
inc
inc
mov
jp
mov
inc
jns
cmps
jge
(bad)
ja
pop
(bad)
int3
fwait
add
fwait
mov
add
cmc
sahf
sub
movs
push
popa
out
mov
nop
mov
or
loop
fnstcw
or
jl
scas
adc
out
sub
and
pop
hlt
leave
stos
xchg
xor
lock
inc
push
push
leave
jge
aaa
gs
test
cmp
cmps
inc
clts
(bad)
arpl
fsub
mov
mov
mov
inc
xchg
gs
mul
adc
int
lods
cwde
cmp
jp
movs
jge
inc
cmps
ss
inc
adc
je
pushf
mov
xor
movs
retf
sbb
rcl
push
and
jmp
repnz
sub
inc
and
push
stos
or
adc
fs
dec
sub
ds
(bad)
push
rol
adc
adc
test
mov
ror
inc
cwde
sbb
cli
xchg
cmp
test
test
mov
std
inc
loop
cld
mov
fcom
mov
inc
in
jo
mov
xchg
xcrypt-cfb
cmps
and
sahf
or
xchg
mov
jl
cwde
pop
stc
popa
push
or
es
xor
ja
adc
retf
mov
add
jbe
push
and
dec
or
sahf
idiv
popa
sti
mov
xchg
cdq
ficom
xor
mov
rcl
or
sbb
mov
test
movs
cmps
fist
mov
in
and
popf
bound
out
mov
or
push
(bad)
adc
xor
mov
pop
push
movs
jmp
ss
jp
mov
das
outs
fistp
rcr
xchg
adc
fistp
push
fstp
push
dec
pushf
fsubrp
out
jb
mov
push
ror
cmps
mov
jne
inc
cmp
sub
inc
sub
jb
push
shr
jbe
inc
ror
movs
retf
rol
mov
dec
sub
push
adc
pop
cmp
fistp
out
cmp
dec
inc
ficomp
jge
sbb
xchg
ret
iret
mov
sar
and
jne
out
inc
int
neg
repnz
out
pop
sub
jbe
xchg
pusha
shr
sub
xlat
xchg
cwde
scas
dec
dec
adc
push
pushf
mov
pop
fwait
push
stos
mov
aaa
loope
cmp
js
xor
out
jae
aam
dec
mov
mov
fsubr
inc
(bad)
mov
dec
mov
iret
pop
add
pop
jecxz
out
sti
sub
push
loopne
xor
sub
js
dec
jle
stc
retf
imul
push
data16
mov
ds
xchg
js
add
aam
cmc
jge
jg
sbb
sub
xchg
add
mov
xchg
sbb
push
mov
push
cmp
add
xchg
retf
sbb
in
mov
mov
outs
es
sbb
jbe
add
out
add
mov
jo
dec
sti
inc
cmps
clc
inc
sbb
push
pop
sti
jbe
and
mov
pushf
xchg
add
jmp
push
add
push
cmp
push
pushf
cmp
outs
cmp
adc
aam
icebp
xchg
cdq
mov
retf
mov
movs
xchg
leave
nop
fsubrp
ss
aam
hlt
jns
dec
aam
push
jecxz
inc
aam
fcomp
aam
jns
fcmovnbe
out
mov
inc
mov
cvtpi2ps
scas
cmp
xchg
out
sub
jp
mov
dec
push
sub
sub
imul
pop
sbb
and
and
mov
jnp
repz
cld
mov
jge
shl
scas
lahf
xchg
scas
ins
mov
aaa
in
cmp
pop
sbb
jne
lds
mov
and
imul
mov
sub
adc
cmps
dec
sbb
sub
push
xor
sbb
jb
hlt
sti
add
and
cmp
lock
dec
inc
retf
xchg
push
scas
aam
in
add
push
movs
mov
sub
sbb
or
lock
cmp
dec
adc
test
arpl
clc
adc
das
ins
(bad)
xor
or
aad
xchg
xchg
sti
xor
movs
push
cs
jl
sbb
mov
jnp
push
dec
mov
mov
movs
and
loope
test
cmp
dec
pop
add
ret
adc
xor
mov
xor
mov
xor
cmp
mov
icebp
sub
mul
mov
xchg
dec
int3
das
retf
and
das
movs
pop
and
in
dec
xor
pusha
test
out
jb
cdq
shr
test
push
mov
mov
movs
mov
sub
xchg
push
jb
inc
xlat
rcl
int3
fadd
punpckhbw
jmp
(bad)
(bad)
sbb
sub
add
push
mov
shl
out
ins
loopne
inc
fsubrp
pop
push
and
or
mov
sub
sbb
mov
test
lea
icebp
addr16
push
mov
popa
mov
xor
mov
call
dec
push
aad
ins
std
mov
or
sub
xchg
mov
and
push
or
mov
inc
shl
mov
xchg
dec
repz
adc
mov
call
sbb
mov
mov
mov
sti
sbb
arpl
mov
std
xchg
aas
mov
pop
cmp
scas
jnp
stos
sar
call
xlat
into
rcl
xchg
movs
popa
mov
jae
xchg
aas
and
fld
imul
inc
or
test
xlat
shr
sub
dec
add
adc
sub
shl
jmp
sub
dec
xor
out
mov
jge
push
dec
pop
les
sub
sbb
enter
popf
dec
shr
push
push
jb
call
jae
scas
push
cmp
je
or
loopne
xchg
xor
sbb
shl
dec
xchg
leave
ss
into
adc
loopne
enter
shl
pop
mov
jno
outs
pmulhuw
xor
push
push
cmp
cmc
xor
mov
loopne
sub
ins
push
shl
mov
pop
mov
enter
and
jbe
or
mov
out
pop
fist
call
mov
sbb
mov
cmp
leave
lods
ror
stos
retf
dec
sub
je
adc
lahf
call
mov
pop
inc
and
cwde
cdq
jl
xlat
xor
cmp
rol
pop
inc
scas
js
add
and
cmp
jne
or
cmp
pop
pusha
dec
xor
fild
add
ins
add
dec
dec
cli
jae
jp
shr
dec
xchg
xlat
and
lods
(bad)
pushf
std
mov
mov
mov
retf
push
cs
mov
test
scas
xchg
aad
sub
jle
mov
shl
daa
out
lahf
xchg
stos
cs
retf
inc
xchg
clc
cmp
mov
xchg
daa
fcmovbe
jl
shl
sti
or
stos
sub
nop
mov
push
sub
mov
sti
jne
xchg
push
out
lock
sti
push
arpl
inc
in
add
xchg
inc
jmp
xor
add
dec
cmps
fsubr
or
cs
push
stos
mov
loop
aad
mov
pop
sbb
add
pop
jmp
push
sbb
outs
dec
pop
ret
mov
retf
test
test
mov
jnp
xor
sar
outs
popf
pop
inc
out
fsub
outs
nop
sbb
xchg
cmps
mov
stos
push
bound
scas
gs
dec
xorps
retf
dec
xchg
dec
cmps
sub
loopne
mov
add
jns
push
fucomi
or
rol
inc
cmp
cmp
sbb
pushf
mov
aaa
stos
iret
xchg
pop
and
push
adc
adc
test
add
js
push
xor
repz
cld
ror
fbstp
cmp
and
sbb
inc
sbb
inc
and
cmps
xchg
fucomip
inc
arpl
out
std
add
aas
xchg
(bad)
mov
dec
pop
mov
push
cdq
das
sbb
cli
fidivr
ror
in
mov
xchg
test
jbe
test
xor
and
scas
sub
dec
push
xchg
je
dec
mov
xor
push
or
stos
lds
sub
sbb
movs
push
xor
mov
push
push
xor
pop
int3
mov
pusha
sbb
and
dec
push
fmul
jge
push
cmp
inc
pop
push
sbb
ret
adc
adc
call
xor
in
test
jb
adc
inc
fstp
add
fsub
scas
imul
test
xor
mov
add
adc
pushf
inc
call
sub
xor
xchg
sub
(bad)
sub
(bad)
pop
xchg
adc
cld
ror
mov
sub
mov
mov
adc
add
xor
loopne
pop
jmp
jbe
cmp
sub
add
pop
mov
inc
xchg
push
push
nop
dec
push
enter
push
test
popa
iret
inc
add
mov
(bad)
retf
stos
jmp
jmp
xchg
inc
mov
loopne
sub
xor
pop
enter
sbb
lock
test
and
pop
xchg
mov
or
lea
js
lods
mov
xchg
sbb
sbb
mov
repz
jmp
rol
das
daa
in
and
add
test
xchg
xor
cmps
adc
mov
test
iret
sub
and
push
sti
icebp
push
stc
cmps
mov
out
pusha
inc
mov
jmp
out
pop
clc
jmp
add
ret
fiadd
xor
arpl
xchg
jmp
mov
push
and
aas
fisub
pushf
sti
inc
in
and
dec
xor
mov
leave
mov
mov
mov
loop
jb
pop
int3
dec
xchg
fdiv
inc
popf
dec
push
mov
lods
adc
ret
jle
mov
push
sub
xchg
(bad)
lods
push
data16
pushf
daa
mov
call
mov
pop
pop
das
lods
jo
je
ret
call
call
out
and
lods
lds
sub
add
lahf
sbb
cmp
shr
ret
cmc
mov
imul
jns
mov
fwait
test
shl
add
pop
cmp
movaps
dec
rcr
into
sbb
iret
adc
xchg
cmp
pop
repz
int
mov
or
out
sub
int
mov
pop
jo
popf
mov
push
jmp
sbb
lock
cmp
in
cmps
pusha
cmp
inc
in
in
in
leave
push
loopne
lods
push
push
pop
dec
xchg
out
add
std
dec
in
dec
ret
cmc
out
xchg
(bad)
xchg
mov
mov
(bad)
int3
mov
xlat
out
pop
(bad)
mov
mov
push
pop
int
aam
push
nop
jp
fild
mov
fsubr
out
loop
in
rcl
jecxz
xchg
inc
inc
add
je
call
addr16
ret
mov
dec
mov
test
(bad)
and
cwde
repz
not
xchg
out
clc
iret
and
mov
movs
lods
lock
xor
dec
shr
sbb
mov
push
inc
out
daa
in
mov
repnz
int
fild
push
sbb
lahf
leave
dec
lods
xor
inc
or
enter
jo
mov
(bad)
loope
not
pop
pop
and
xor
iret
pop
call
mov
jae
sti
into
in
mov
std
jecxz
je
cmp
popf
bound
int3
cmp
pop
sbb
stc
xchg
pushf
push
push
into
repz
mov
xor
push
mov
cmps
mov
imul
in
mov
scas
arpl
jbe
call
mov
out
outs
adc
jo
outs
or
jbe
inc
jb
aaa
pop
dec
int
int
inc
or
test
mov
mov
jp
ins
xor
mov
pop
push
or
sbb
push
add
and
stc
ja
jecxz
js
test
mov
(bad)
mov
inc
sub
sti
adc
xor
mov
repz
movs
hlt
push
sahf
stos
pop
ret
daa
pushf
ror
sub
out
pop
pop
stos
jnp
sub
call
sbb
leave
ret
test
lods
inc
js
xchg
and
push
inc
add
xor
stc
std
pop
pop
pop
adc
or
fistp
popa
neg
pop
jmp
aas
pop
ds
mov
test
dec
icebp
rol
or
int3
in
jle
in
sub
lods
xchg
mov
pop
(bad)
out
pop
test
jmp
adc
push
(bad)
ror
jl
sub
dec
cmp
fnstsw
push
mov
xchg
test
shl
jecxz
aad
xchg
mov
pop
mov
ret
sub
cmc
mov
mov
int3
mov
scas
test
cmp
stc
or
mov
push
jge
xor
rcl
add
sub
xlat
add
nop
mov
hlt
sbb
fcomi
sar
ror
jnp
xchg
fidiv
mov
adc
cli
iret
inc
add
pop
js
push
mov
fstp
xor
push
xor
ins
jns
(bad)
sahf
dec
push
in
out
and
xor
cmps
push
mov
nop
call
cmp
das
pop
lds
sbb
jle
ins
mov
mov
out
enter
out
(bad)
and
adc
and
sub
push
xchg
popa
cmp
and
(bad)
enter
jp
or
ins
sub
mov
cdq
adc
inc
add
pop
push
test
test
test
adc
inc
pop
loopne
inc
inc
push
push
dec
int
js
lea
daa
(bad)
lea
push
cmp
frstor
mov
mov
rol
dec
int3
stos
inc
push
mov
enter
lds
mov
into
in
test
ret
daa
sar
mov
retf
ss
and
nop
mov
xchg
sar
pop
or
ret
dec
lea
outs
push
and
push
xor
int
in
or
push
ss
add
mov
push
jb
sar
repz
adc
daa
mov
daa
jbe
mov
popf
push
shl
mov
int3
sbb
mov
mov
out
imul
push
aad
popf
xchg
and
icebp
and
mov
sub
in
popf
mov
or
sahf
jg
and
or
fidivr
inc
ficomp
sbb
or
push
(bad)
jmp
neg
sub
bound
sub
imul
cmp
div
add
pop
cmps
(bad)
loopne
iret
inc
sub
fprem1
repnz
mov
call
push
stos
mov
stc
inc
shl
sahf
push
jbe
ss
cmp
jp
jne
loop
cmp
hlt
dec
xchg
imul
inc
or
xlat
add
stc
add
mov
repnz
cmp
jae
push
retf
shl
jge
imul
adc
pop
push
pop
addr16
sub
mov
pushf
sub
shl
inc
shr
(bad)
cld
lock
dec
dec
sbb
mul
mov
sahf
fdivrp
xchg
ror
int
push
mov
jbe
loopne
push
outs
outs
enter
retf
je
xlat
and
mov
push
pop
shl
xor
jno
pop
gs
icebp
adc
aaa
and
call
mov
cmc
gs
test
mul
sub
push
adc
and
sti
cli
test
push
xor
add
push
dec
mov
jmp
dec
pop
mov
fstp
jl
sar
xchg
lods
mov
cdq
mov
sbb
xchg
cmc
mov
jmp
jb
dec
les
mov
stos
adc
mov
fsubr
cmc
loop
cmps
push
idiv
jp
pop
xchg
and
movs
stos
shl
jg
xchg
shl
cli
pop
sbb
iret
add
imul
gs
imul
adc
mov
fmulp
cld
imul
dec
cmp
rcl
push
add
mov
movs
pop
cmp
loope
out
mov
jl
call
outs
and
je
pop
push
add
retf
mov
mov
or
lea
idiv
rol
in
mov
add
ror
arpl
mov
lods
xchg
push
cmp
dec
mov
aam
lds
adc
mov
xchg
leave
pop
cmovno
jo
lods
push
nop
daa
pop
sbb
push
add
cmp
fbstp
pop
scas
fisubr
bound
shr
mov
pop
scas
pop
pusha
popf
sar
dec
push
mov
adc
test
pop
push
stc
mov
cmp
pop
sub
inc
sti
add
iret
jg
movs
pop
stos
mov
inc
jb
push
nop
mov
push
pop
jnp
nop
aas
ffreep
sub
inc
sahf
movs
inc
xchg
mov
or
pop
push
sub
adc
and
js
pop
cwde
ror
fwait
pop
mov
adc
mov
or
out
sti
cmps
ins
out
lea
mov
jns
add
inc
(bad)
enter
(bad)
shl
inc
pop
and
(bad)
cmp
das
aam
ss
sbb
sahf
pop
aas
in
adc
int
cld
and
lahf
je
inc
lods
das
and
mov
add
sti
gs
test
popa
mov
retf
lahf
pop
mov
aaa
call
fwait
or
jne
inc
out
xchg
mov
subps
and
pop
or
mov
and
sbb
inc
jo
stos
cmp
jne
out
ret
add
mov
mov
push
imul
sub
dec
shl
inc
mov
cmp
out
mov
xchg
hlt
mov
xchg
int
cmp
test
pop
mov
ja
push
jne
mov
jae
stc
mov
mov
dec
dec
pop
and
imul
dec
mov
shr
fdiv
stos
mov
lds
test
outs
add
(bad)
push
xor
ret
je
mov
cmp
fidiv
ret
les
sub
adc
mov
jp
bound
add
push
(bad)
lahf
cmc
xchg
cmps
cmp
xor
push
call
rol
scas
adc
mov
or
cmp
sbb
(bad)
repz
in
or
icebp
xchg
cwde
push
xchg
in
cmps
adc
mov
fnstcw
out
mov
repz
inc
xchg
jb
jp
sbb
inc
into
lock
dec
fcom
mov
lahf
aas
mov
out
lods
xchg
aam
and
push
pop
out
add
test
mov
sub
jb
or
fld
dec
nop
cmc
mov
mov
btc
pop
cmp
push
mov
ror
call
inc
ins
dec
fldln2
dec
out
cmp
and
sub
lds
stos
pop
sbb
scas
mov
pop
mov
xchg
in
dec
jge
mov
arpl
aas
leave
xchg
add
icebp
out
mov
push
shl
dec
pusha
xor
mov
dec
push
mov
retf
cdq
shl
inc
out
or
mov
sahf
jae
retf
movq
in
xchg
pop
in
test
add
not
dec
icebp
jmp
dec
nop
(bad)
mov
repz
out
xchg
jg
leave
xchg
inc
stos
frstor
or
and
repz
push
mov
inc
out
and
sar
jl
inc
add
call
in
int3
adc
aas
xchg
push
cs
lods
mov
xchg
inc
fucomp
in
cld
call
xor
cwde
outs
inc
fisttp
jbe
int3
iret
mov
mov
das
sub
movs
or
inc
sbb
pop
(bad)
bswap
mov
cdq
shl
add
jb
out
test
xor
adc
test
iret
je
icebp
or
les
lods
xchg
das
sub
jno
push
sbb
(bad)
jno
(bad)
pop
fadd
push
inc
dec
outs
loopne
fisubr
nop
mov
push
and
adc
inc
scas
sbb
mov
pusha
in
xor
xor
stos
sub
push
mov
dec
ja
jg
fdiv
add
xlat
add
imul
mov
cs
std
ins
xor
add
jns
cmp
pop
and
sub
sbb
and
(bad)
aas
cdq
sbb
mov
pusha
pop
es
mov
in
retf
(bad)
jecxz
sar
sub
sub
and
xchg
repnz
aaa
aad
mov
test
push
lods
mov
nop
jg
push
mov
enter
inc
rcl
arpl
shl
outs
inc
and
mov
xor
sbb
popa
inc
leave
sub
inc
pop
sahf
dec
bnd
aas
dec
xchg
push
sub
xchg
cmovae
into
sahf
les
shl
ds
add
repz
(bad)
pusha
push
xchg
mov
out
pushf
xor
xchg
and
or
push
xchg
cmp
addr16
pop
pop
or
xchg
in
ret
outs
pushf
dec
or
cs
mov
es
in
mov
push
hlt
mov
jns
inc
hlt
hlt
sub
pop
sub
xchg
xchg
outs
addr16
jecxz
cli
mov
cld
mov
leave
push
inc
aam
mov
jne
inc
add
sub
in
(bad)
xchg
cmp
cmp
or
arpl
imul
xchg
ins
fist
test
lahf
push
mov
aad
int3
or
pusha
mov
pop
xchg
loopne
fstp
add
pop
push
pop
pop
repnz
xchg
add
stos
sub
or
sbb
stc
test
xor
mov
sub
adc
inc
retf
nop
shl
and
mov
pop
lea
je
or
fisttp
inc
and
aaa
in
sub
inc
mov
sub
in
ret
rcr
xlat
rcr
mov
jb
xchg
stos
repz
mov
gs
or
jb
mov
push
sub
pop
leave
jae
cwde
push
cli
daa
das
test
inc
xor
xor
rol
rol
dec
or
mov
cdq
pop
arpl
push
jnp
ins
mov
je
ins
aas
rcr
lds
and
cli
jo
out
shr
div
mov
test
mov
loopne
std
cmp
ja
dec
pop
popf
lods
cmp
lock
inc
out
sub
add
js
movs
and
push
mov
outs
sub
cmps
imul
mov
jmp
sbb
push
std
or
push
cwde
xlat
mov
adc
push
pop
test
aas
std
adc
test
xchg
stos
iret
data16
dec
mov
and
loopne
add
(bad)
aam
test
sahf
push
push
mov
and
(bad)
lods
inc
cmp
xchg
iret
out
dec
es
sub
into
fidiv
mov
repnz
stc
adc
retf
std
pop
push
push
or
sar
cdq
std
mov
mov
int3
pop
or
(bad)
cld
sbb
dec
shl
mov
enter
or
rol
pushf
stc
inc
mov
push
adc
cdq
scas
xchg
bound
std
sbb
mov
imul
inc
movs
rol
pop
add
or
sbb
and
rol
inc
jo
in
add
or
das
jle
mov
mov
mov
shl
(bad)
cmc
and
add
ins
or
xchg
lds
push
cmp
das
call
push
cmp
std
js
inc
das
fst
bound
inc
shl
jne
add
shl
xor
inc
es
jne
jmp
dec
xor
daa
push
inc
mov
movs
nop
pushf
jnp
in
sub
mov
pop
xchg
xchg
mul
jmp
xchg
or
lods
sbb
aad
jl
retf
int
sub
movs
(bad)
mov
iret
test
xchg
int
pop
popa
stos
ins
fs
or
jne
fst
push
mov
xor
jnp
fld
std
lods
loop
sub
ret
jno
dec
enter
rol
sbb
inc
mov
xchg
dec
dec
mov
xchg
inc
out
xor
mov
sub
sub
jge
mov
add
lods
in
in
or
xchg
jae
add
push
jbe
outs
push
push
(bad)
loopne
int3
scas
and
fsub
pop
sub
xchg
pop
aad
nop
mov
mov
mov
aam
lods
fidivr
sahf
gs
xchg
aad
jnp
inc
dec
dec
sbb
cmp
xor
iret
out
fst
mov
pop
adc
pushf
cwde
test
sub
cwde
mov
jl
xlat
push
pop
pop
ds
mov
enter
lods
scas
dec
xor
adc
cli
push
adc
mov
push
data16
ja
loopne
jae
xchg
lods
(bad)
nop
add
ret
fs
pop
xor
mov
data16
shl
call
mov
dec
fisttp
fidivr
sti
dec
ficomp
mov
jle
test
sub
arpl
je
adc
and
mov
mov
xor
adc
scas
(bad)
clc
into
ss
in
jno
aam
push
ss
fdivr
mov
punpckldq
cmc
cmp
push
pop
push
pop
fmul
or
mov
ror
fsub
out
aam
ror
cli
add
ss
dec
rcr
clc
out
div
ror
pusha
hlt
sub
or
rol
rol
sbb
(bad)
jge
(bad)
(bad)
retf
pop
cmp
xchg
int
(bad)
repnz
sub
add
int3
adc
add
aaa
cmp
dec
sub
loopne
into
out
js
int
fmul
cmp
and
mov
es
sti
cld
mov
pop
out
xchg
cmps
sahf
push
outs
sbb
lea
cdq
mov
sub
jmp
fcom
aaa
leave
mov
push
mov
or
xor
add
mov
or
pop
sbb
mov
adc
xor
cmp
cmp
fsubr
outs
push
fcom
adc
sbb
mov
or
(bad)
ror
loope
cmp
aaa
xchg
dec
fild
retf
cmp
hlt
repnz
sbb
adc
cld
mov
stos
int3
mov
sub
and
mov
dec
jo
mov
into
sub
cmc
fwait
pop
push
dec
hlt
inc
fild
mov
xchg
mov
popf
jns
int3
jb
pop
inc
jae
cmp
or
cmc
add
mov
jge
stc
jecxz
push
push
jle
js
and
xchg
data16
jno
jecxz
rcl
fsub
ret
fcom
jg
mov
mov
mov
aad
push
and
int
(bad)
fcomp
adc
jmp
add
adc
jecxz
lods
fmul
xchg
(bad)
mov
sti
mov
adc
lock
dec
lods
push
jbe
mov
hlt
inc
adc
mov
aas
das
enter
jp
mov
pop
ja
jnp
dec
sub
mov
ins
and
sub
adc
jns
push
rol
inc
dec
cwde
and
sbb
arpl
fistp
mov
xchg
jae
fdivr
push
jno
nop
jmp
sub
pop
mov
cdq
xlat
mov
adc
js
xchg
push
fdiv
adc
enter
cmc
cmp
stos
push
cld
(bad)
loopne
and
in
pop
sub
or
mov
iret
dec
xchg
push
fcomi
(bad)
and
dec
cmp
and
jb
jmp
pop
xor
sub
stc
add
sub
jae
xchg
cmps
mov
out
retf
inc
xor
xchg
inc
fmulp
push
and
and
dec
addr16
push
es
adc
xor
pushf
movs
ja
add
jo
(bad)
fadd
xor
iret
fstp
pop
loop
in
jne
ficomp
sub
cld
mov
stos
aam
mov
xlat
mov
aaa
sub
das
jns
cld
sub
cdq
pop
adc
loop
movs
leave
mov
scas
retf
mov
cwde
inc
cmp
je
repz
pushf
lock
out
cli
ret
popf
mov
fs
(bad)
push
jg
jne
push
jb
pushf
lahf
jp
cld
sbb
ins
(bad)
push
lods
dec
repz
or
mov
scas
mov
loop
mov
pop
cwde
jecxz
or
sub
sub
das
push
xor
push
inc
pusha
aaa
(bad)
pop
std
pop
push
push
dec
dec
xor
sub
aad
sahf
nop
push
pop
(bad)
out
jb
retf
pop
daa
push
pop
cmp
push
pusha
scas
cld
inc
cli
or
aam
inc
or
leave
add
icebp
into
pop
push
jns
and
sub
mov
nop
popa
out
xlat
add
loop
adc
fist
out
clc
std
push
test
(bad)
xchg
add
or
in
frstor
sbb
xchg
int3
or
(bad)
mov
hlt
push
jmp
push
shl
dec
jns
das
sbb
std
(bad)
cmp
and
mov
sub
in
aaa
rcl
stos
inc
pop
pop
enter
aas
int3
neg
pushf
imul
dec
pop
add
adc
aaa
dec
jae
xor
fidivr
neg
xor
in
aas
or
mov
mov
dec
mov
scas
movs
imul
push
xchg
dec
add
mov
loope
cmp
push
lods
sti
xchg
sub
sahf
or
or
jp
in
jecxz
dec
std
ins
jmp
push
fnstcw
ret
adc
imul
gs
scas
push
dec
loopne
out
and
mov
cmp
dec
outs
sbb
mov
xchg
push
pop
aaa
jg
mov
sub
mov
ins
cmc
pmuludq
mov
xor
aad
fistp
imul
or
call
retf
dec
arpl
xchg
pop
jbe
aas
cld
(bad)
jno
fidivr
pop
repnz
pop
xlat
stos
shl
inc
jns
mov
call
jo
or
ret
inc
cmps
dec
sbb
test
sbb
cmp
adc
je
inc
mov
and
cvtpi2ps
mov
pop
iret
popf
das
xchg
mov
jbe
cdq
jecxz
cmp
repnz
hlt
ja
lods
mov
sub
mov
sub
dec
add
retf
stc
push
in
mov
jl
inc
lods
cmp
repz
inc
mov
pop
and
es
js
jbe
xchg
lods
add
add
xor
std
test
test
imul
add
js
sete
sub
dec
mov
mov
push
add
lds
lds
sar
mov
dec
icebp
xchg
sti
out
lock
jmp
adc
dec
jo
adc
pusha
cwde
frstor
add
aas
pop
push
cmp
mov
int
mov
push
das
pop
jle
ret
pop
ror
mov
test
pusha
cdq
pop
adc
sbb
lods
or
mov
or
mov
adc
in
mov
ret
pop
(bad)
or
and
adc
ds
pusha
in
pop
jp
jmp
in
mov
rcl
or
fst
and
or
outs
retf
jl
into
lods
lds
lea
into
mov
push
mov
push
xor
gs
adc
int3
test
cmp
mov
sti
hlt
into
xor
fst
fsubp
repnz
imul
lea
inc
aas
jmp
retf
ins
inc
lods
mov
sub
ins
gs
mov
xchg
xor
leave
and
and
shl
xlat
push
pop
mov
push
lock
(bad)
jbe
jo
mov
lock
das
mov
call
mov
hlt
int
mov
aad
ds
out
cmps
cmp
add
sbb
fwait
cmp
pusha
or
jmp
iret
adc
loop
pusha
or
stc
inc
ss
aad
into
fsubr
mov
(bad)
clc
pop
shl
xchg
xchg
adc
jb
and
mov
mov
sub
dec
outs
xor
mov
rcl
repnz
fmul
push
adc
repnz
add
push
ficomp
test
in
xchg
or
in
mov
sub
mov
ret
push
mov
mov
pop
or
repz
adc
mov
jno
adc
test
xor
inc
jae
pushf
in
aam
adc
icebp
retf
sub
clc
inc
lahf
mov
out
lds
sar
dec
call
ins
imul
jns
add
dec
dec
imul
xor
rol
adc
pop
int3
in
imul
bnd
push
or
(bad)
and
imul
adc
test
sbb
mov
ja
xchg
sti
popa
pop
(bad)
pop
(bad)
outs
add
sbb
pop
cmp
mov
mov
cmp
mov
mov
cwde
lods
jnp
(bad)
add
mov
imul
xchg
xor
ins
retf
mov
adc
push
daa
outs
sbb
das
pop
xor
dec
add
dec
sbb
and
(bad)
(bad)
jecxz
or
pop
pop
sbb
sti
(bad)
repz
jmp
pop
mov
mov
pushf
ret
or
movs
cli
rcl
mov
adc
in
icebp
stos
pop
dec
jns
cli
push
stos
pop
inc
or
outs
movs
xchg
in
lods
dec
je
mov
mov
dec
xor
adc
xchg
adc
cmc
es
addr16
aad
push
sbb
or
gs
jge
xor
stos
ins
mov
mov
imul
cmc
mov
xchg
and
push
(bad)
inc
mov
mov
xchg
add
mov
mov
jns
sub
adc
push
sti
loop
xlat
ret
fadd
mov
(bad)
out
cli
movs
dec
mov
popa
es
jge
shl
mov
adc
pop
sahf
not
repz
enter
adc
jl
adc
out
dec
scas
jo
pop
(bad)
cmps
dec
mov
fdivr
mov
sub
jb
aad
xor
lods
pop
xchg
jae
fs
dec
mov
xor
mov
jl
popa
xchg
add
mov
dec
mov
into
(bad)
not
xchg
sbb
cmp
jne
call
scas
sahf
mov
mov
add
pmullw
dec
ja
xchg
mov
sbb
push
fwait
adc
(bad)
jge
inc
fwait
stc
sub
mov
fwait
pop
in
es
stos
sbb
fcom
movs
stos
mov
adc
es
sbb
mov
js
mov
xchg
stos
xor
and
nop
clc
adc
xchg
enter
and
sbb
int3
or
lds
out
cmp
push
in
inc
or
movs
out
retf
stos
loopne
fdiv
adc
ror
mov
inc
std
xchg
fdiv
and
div
test
mov
ds
repnz
cmp
jmp
xchg
dec
test
cdq
sbb
jp
xor
pushf
inc
ror
loop
scas
out
push
mov
add
(bad)
sbb
ss
mov
fimul
add
out
mov
in
jmp
mov
test
push
add
fadd
fistp
xchg
rol
cmc
dec
popa
jae
mov
popa
inc
rcr
or
mov
mov
mov
ins
or
jnp
push
push
in
test
das
stos
lods
or
add
or
mov
ret
pop
pushf
xor
(bad)
mov
jno
icebp
xchg
ins
je
push
jae
sub
scas
push
xor
mov
xlat
mov
dec
imul
dec
mov
xlat
mov
xchg
mov
lahf
fucomip
cli
mov
cmp
outs
shl
push
xlat
retf
adc
or
loop
push
ds
retf
push
cmove
pop
adc
sub
popa
pop
addr16
cmp
pop
(bad)
pop
push
mov
pusha
inc
pushf
in
in
pop
retf
icebp
sar
cwde
fistp
test
push
dec
sub
pop
lods
cdq
jle
inc
outs
aam
js
in
xchg
pop
out
xlat
jnp
inc
mov
cmp
xor
jle
jne
cmps
cdq
mov
in
sbb
mov
adc
pushf
int
jmp
xor
add
dec
movs
imul
leave
adc
jb
mov
loopne
scas
test
pop
ror
dec
inc
setg
push
xchg
xchg
inc
nop
stc
mov
dec
cli
aaa
xor
outs
adc
pop
sar
out
fmulp
or
inc
mov
inc
pushf
rol
ret
inc
pop
pop
sbb
push
jbe
jecxz
mov
mov
mov
pusha
or
jno
inc
pop
inc
push
dec
cmp
imul
sbb
jbe
fst
cmps
scas
lahf
test
sbb
jmp
inc
rol
(bad)
push
and
push
add
pop
mov
sbb
je
push
dec
nop
cwde
or
call
test
ds
mov
cmc
mov
cmp
(bad)
inc
int
sub
push
inc
iret
leave
cwde
inc
push
cmp
fdiv
xor
pushf
xchg
call
jne
xchg
mov
(bad)
push
pop
cmp
jg
jmp
add
enter
and
popa
sub
inc
adc
sub
mov
lods
mov
inc
and
xor
movs
aaa
adc
test
and
add
cld
and
add
sbb
jmp
jge
jl
(bad)
cmp
cs
(bad)
pop
dec
xor
jecxz
fwait
in
rcr
je
add
sbb
xor
gs
jne
jns
and
rcl
das
in
ror
or
xchg
mov
sub
movs
(bad)
mov
out
push
in
mov
je
jecxz
pop
out
mov
dec
es
fsubp
pop
sub
jecxz
add
or
stos
xor
push
adc
bound
inc
cdq
jmp
adc
nop
jge
push
mov
imul
inc
mov
fbld
in
lods
icebp
fidivr
popa
sub
mov
cmp
xor
je
outs
and
mov
lock
push
ins
push
lods
sub
push
and
test
push
aam
adc
mov
test
cwde
sbb
clc
lods
stos
ja
movs
cmp
push
mov
adc
pop
jo
lods
add
outs
imul
call
cmp
lahf
jg
jmp
fsubr
xchg
inc
out
cwde
ss
mov
and
jmp
mov
lea
popa
push
sbb
or
jmp
cmps
inc
or
or
or
into
lds
xor
dec
dec
shl
and
jns
cmp
mov
bndstx
sbb
mov
jb
int3
sub
in
jae
hlt
fs
daa
leave
dec
mov
push
sbb
mov
mov
add
mov
adc
xchg
jecxz
pop
fistp
mov
test
arpl
xor
sbb
fucom
les
jb
adc
adc
cmp
cmp
jo
add
xchg
push
jmp
mov
xor
sbb
sti
push
fidiv
xchg
cmp
push
mov
mov
mov
call
pop
mov
in
xchg
lds
sti
jmp
mov
dec
inc
xor
es
rcr
push
add
int3
add
iret
sub
xor
loop
jne
ins
loope
in
pop
out
outs
sub
out
ret
push
pop
loop
in
movs
xchg
jp
xor
add
fld
pusha
xchg
mov
xor
pushf
mov
mov
jbe
push
xchg
aam
mov
cmps
mov
enter
jne
and
jmp
adc
(bad)
mov
ja
jb
cli
add
fstp
fsub
adc
addr16
sbb
adc
cmp
(bad)
xor
out
sub
add
in
xor
sbb
shr
je
arpl
repnz
or
sti
es
pop
mov
mov
mov
retf
xchg
cdq
popa
jp
pop
aad
ret
xlat
test
iret
pop
movs
imul
enter
(bad)
mov
inc
mov
dec
jbe
bound
add
jnp
inc
add
xchg
popa
mov
cld
test
sbb
cmps
dec
and
sub
lock
es
bound
push
fst
(bad)
nop
aad
and
push
mov
add
jmp
inc
mov
mov
sbb
sar
sbb
dec
push
push
ja
mov
call
push
outs
xchg
pop
dec
inc
pop
das
js
adc
(bad)
mov
mov
pop
rcr
dec
cli
jae
inc
in
and
aas
xchg
or
and
sbb
cmp
mov
and
cli
ficom
jns
stos
dec
ss
(bad)
jl
rcl
hlt
pop
inc
ds
js
xchg
ss
dec
xchg
ds
movs
or
add
imul
mov
xchg
jbe
push
push
dec
movs
shr
repnz
xor
test
cli
sti
in
call
push
jecxz
in
imul
fidivr
xchg
pop
push
jge
das
out
lock
scas
sahf
les
mov
test
leave
adc
clc
call
xor
fldcw
inc
std
mov
in
inc
mov
inc
push
lods
das
jne
add
lock
(bad)
or
fstp
idiv
mov
cs
sti
pop
pop
jl
movs
shl
and
out
dec
rol
ins
xchg
mov
xlat
push
mov
gs
pushf
xchg
dec
ror
stos
repnz
rcr
jp
pop
movs
or
into
dec
push
adc
push
mov
mov
arpl
call
je
xchg
imul
cmp
(bad)
aam
loopne
leave
mov
into
inc
jl
adc
adc
fild
adc
mov
stos
dec
and
popa
mov
dec
mov
idiv
mov
cmc
cdq
mov
out
jmp
adc
outs
dec
test
pop
pop
mov
out
scas
cmp
jmp
mov
scas
add
int
sbb
jl
popf
sbb
gs
ins
in
pop
icebp
(bad)
idiv
daa
shl
out
retf
bound
rcl
or
sar
test
out
in
jno
push
ja
adc
pushf
icebp
test
sub
cld
lea
mov
jl
gs
adc
cmp
pop
xchg
pop
popf
jle
mov
mov
movs
jo
lock
push
(bad)
std
jnp
dec
aam
pop
dec
scas
rcl
mov
xchg
shl
addr16
(bad)
fild
repnz
retf
cmp
fwait
ins
adc
mov
mov
xlat
stc
or
shl
cmps
push
ficomp
push
mov
neg
clc
out
cdq
mov
jle
js
(bad)
and
das
xchg
inc
sub
mov
jge
cmp
aam
push
mov
push
inc
sub
dec
pusha
jge
loopne
pop
or
push
jb
loop
ret
cmp
stos
xchg
jle
pop
iret
jne
sbb
push
dec
cmp
cmp
mov
cs
outs
or
xor
push
retf
xor
fwait
aas
sub
stos
xor
adc
mov
out
pop
into
add
sar
jl
mov
or
mov
dec
or
pusha
je
dec
rcl
or
pushf
(bad)
or
cld
xor
outs
repz
mov
pop
lds
pop
les
movs
mov
fsubr
je
mov
mov
adc
movs
mov
sub
dec
push
daa
popf
jae
aas
add
int
ss
cmps
inc
movs
inc
or
test
pop
cmc
jmp
jg
mov
lock
les
mov
cmp
es
jle
jmp
sbb
je
jo
or
sub
mov
cs
dec
add
into
inc
in
test
mov
dec
xchg
int3
in
ret
sub
jbe
fldcw
ss
add
mov
data16
ja
movs
in
lods
mov
mov
xchg
sub
aam
imul
imul
pop
or
and
sbb
cs
xchg
push
loopne
cmp
mov
jg
ss
imul
fidiv
push
or
sbb
xor
loopne
sbb
xor
push
pop
pusha
daa
adc
cmp
inc
fucomip
and
push
inc
gs
push
movs
mov
jnp
cmps
lahf
icebp
push
adc
in
jle
cmps
mov
mov
mul
jle
popf
cmp
in
les
mov
mov
add
stc
mov
pop
xor
pushf
push
(bad)
je
les
cmps
sbb
jmp
mov
iret
mov
and
in
mov
js
fwait
shl
test
in
sbb
dec
push
mov
call
cmp
xlat
dec
cli
ins
adc
lods
dec
popf
pop
call
and
test
dec
scas
inc
push
push
movs
push
shr
pop
ret
push
adc
iret
les
and
add
hlt
dec
scas
stc
jp
or
mov
dec
add
mov
mov
cmp
jge
add
inc
mov
xchg
push
xor
xor
shr
ret
mov
cmp
clc
stos
adc
xor
ins
dec
xchg
das
jo
(bad)
jg
sub
adc
pop
dec
xor
mov
out
xor
icebp
sbb
gs
add
in
sub
rol
popa
mov
popa
jl
push
push
stc
mov
mov
aaa
les
add
jmp
sub
jecxz
add
sbb
aam
push
mov
pop
sbb
dec
push
adc
enter
dec
add
jae
mov
test
mov
into
inc
xchg
shl
cmp
xchg
aaa
cmps
in
jnp
xchg
lahf
xlat
fcomp
mov
lds
and
imul
sub
scas
mov
or
jbe
mov
mov
fimul
cmp
(bad)
mov
into
mov
sahf
int3
xchg
stos
cwde
sar
das
ds
ror
pop
dec
dec
mov
data16
mov
xchg
jmp
rcl
dec
iret
push
cmp
ret
iret
(bad)
cld
(bad)
xor
sbb
add
inc
dec
inc
ins
jecxz
dec
cmp
adc
or
into
push
mov
jne
mov
loope
xor
pop
mov
and
or
cdq
in
rcl
mov
aaa
pop
dec
std
xor
dec
test
dec
xor
pop
inc
daa
aam
(bad)
jge
int
mov
sub
sbb
aad
xchg
jl
mov
cmp
icebp
arpl
iret
sbb
dec
pop
lods
push
loope
xchg
idiv
sub
stos
mov
(bad)
es
mov
(bad)
ins
nop
cmp
cmp
push
aaa
test
lock
dec
jno
cmps
mov
jecxz
popf
(bad)
loope
std
ret
dec
mov
and
mov
cmp
pop
push
mov
mov
shr
dec
inc
ret
push
push
cmp
dec
imul
mov
mov
push
ds
sub
aaa
xchg
jle
cmp
int
add
into
jnp
pop
movs
push
or
mov
pop
std
popa
es
stos
jmp
lock
xchg
repz
push
arpl
dec
sub
mov
stc
cmp
add
pop
inc
jno
dec
bound
sub
or
imul
mov
xchg
imul
inc
test
inc
push
jmp
fs
xchg
mov
jo
and
scas
std
mov
repz
pop
ja
ret
nop
std
inc
xor
int
push
xchg
aad
stc
pop
hlt
mov
and
mov
sub
cmp
popf
pop
pop
pop
shr
ret
pop
jno
inc
sti
mov
sub
mov
xor
cmp
pop
mov
hlt
add
cld
retf
push
(bad)
ja
test
pop
xor
stos
scas
and
fs
sub
or
in
jae
inc
mov
data16
popf
in
imul
mov
ins
out
sub
mov
inc
scas
adc
pop
and
add
(bad)
fs
ss
call
das
push
cmp
dec
pop
daa
ss
xchg
adc
(bad)
int
pop
retf
sar
outs
leave
mov
adc
jns
and
or
dec
mov
inc
jmp
and
vpaddd
adc
or
xchg
sbb
iret
ret
xchg
cld
sub
jg
inc
sahf
sub
daa
dec
mov
cmp
(bad)
xchg
int3
sub
(bad)
out
jl
mov
sub
push
cmps
cs
mov
arpl
mov
sub
shr
or
xchg
call
xor
push
(bad)
pop
xor
imul
add
inc
dec
sbb
xor
call
(bad)
pop
adc
mov
ds
mov
pop
aas
fild
mov
adc
test
test
and
jae
xchg
leave
pop
inc
cld
and
aam
adc
mov
jb
sub
fisttp
fldcw
or
add
pusha
xchg
and
xchg
stos
icebp
ins
das
sbb
dec
jo
pop
dec
imul
push
mul
or
and
sbb
(bad)
adc
sti
dec
mov
stc
xchg
sub
add
xchg
cmps
popa
fisub
retf
mov
jno
sub
mov
(bad)
xchg
push
sub
jb
sbb
ds
sbb
dec
dec
jbe
call
adc
mov
fisttp
lock
fwait
xchg
ret
xor
cmp
aaa
imul
div
jmp
mov
cmps
mov
retf
sub
xor
cmc
inc
xlat
sub
(bad)
bts
iret
cdq
(bad)
arpl
mov
mov
xchg
inc
jmp
outs
sub
imul
add
int
mov
aas
pop
inc
mov
push
call
es
clc
cmp
adc
aaa
test
mov
int
int3
mov
loopne
sbb
jns
inc
jg
cli
lods
std
pusha
les
add
(bad)
dec
push
and
mov
mov
inc
(bad)
lahf
add
clc
test
(bad)
gs
outs
xchg
sub
cmp
adc
(bad)
jns
jno
rol
cmp
and
in
jl
sbb
repnz
jnp
scas
rol
or
test
jl
add
or
lock
in
xchg
cmp
dec
hlt
pop
push
aaa
dec
in
mov
rcl
xchg
rcpps
push
sub
xor
inc
fwait
xchg
jno
das
cdq
fcomp
pop
or
test
mov
ja
mov
pop
inc
dec
movs
mov
mov
out
loope
ror
jg
sub
mov
push
cdq
out
mov
pop
sti
jmp
sub
mov
idiv
test
das
mov
or
pop
adc
mov
adc
jmp
aas
ror
out
call
and
push
push
mov
xor
je
mov
or
or
call
test
in
or
jg
push
mov
ss
push
push
std
in
add
gs
jnp
cdq
inc
stos
inc
or
xor
retf
jnp
xlat
pusha
inc
inc
xchg
jle
add
adc
in
sbb
test
and
fwait
mov
dec
xlat
in
add
xchg
ds
mov
(bad)
aas
and
xchg
or
loope
xor
retf
lea
aam
in
pop
pop
int3
mov
out
cmp
les
nop
inc
cs
inc
frndint
test
add
lahf
pop
cmp
push
cmc
pop
add
push
inc
adc
sbb
fdivr
fmul
mov
xor
sbb
call
stos
aas
leave
stos
mov
lods
je
ins
aam
mov
push
jg
imul
pop
inc
dec
in
mov
popf
add
push
mov
jne
shr
les
add
dec
add
arpl
mov
sub
push
lea
push
in
inc
out
mov
sub
lahf
and
push
pop
push
push
mov
je
add
jnp
js
jnp
ret
mov
xor
mov
pop
imul
sub
pop
fidivr
stos
adc
push
sbb
sub
pop
jle
(bad)
mov
sbb
ins
test
mov
mov
(bad)
jge
adc
jle
in
jns
push
sub
sbb
mov
mov
mov
and
movs
or
jge
xchg
icebp
xchg
jae
mov
and
mov
xchg
call
fsubr
xchg
xchg
mov
addr16
std
sbb
lock
xor
xor
cmp
jp
cdq
cmp
nop
push
push
sub
fidiv
mov
xor
pop
(bad)
push
lds
hlt
or
mul
xadd
stos
icebp
fs
xor
ret
out
(bad)
inc
mov
lahf
cmps
pop
ret
ja
push
dec
fidiv
div
jle
cwde
arpl
sub
sar
enter
(bad)
xlat
(bad)
mov
sbb
jbe
fs
es
fimul
sbb
dec
jge
ret
pop
lea
data16
test
(bad)
aam
or
xchg
fxam
xor
dec
movs
(bad)
mov
inc
das
retf
jmp
xchg
add
inc
xor
retf
shl
push
jno
jb
pop
rcl
mov
sbb
adc
sahf
aam
xor
sbb
add
xor
xchg
repz
inc
dec
test
push
pop
inc
or
or
inc
(bad)
dec
push
mov
aam
shl
hlt
ja
push
int
xchg
stc
mov
js
inc
out
and
loopne
jb
int3
shl
iret
jno
add
fnsave
aas
push
cmp
push
jge
in
push
sub
ret
pop
mov
xchg
pmullw
mov
jo
adc
mov
repz
mov
mov
aas
pop
data16
sbb
pop
arpl
push
shl
and
pushf
mov
idiv
or
ja
cmp
and
push
lahf
add
jo
jb
imul
sahf
add
jp
ret
sti
ss
push
mov
inc
inc
mov
or
rcr
shl
pusha
or
test
loop
lods
xchg
sahf
xchg
cmp
je
outs
into
cmp
mov
and
hlt
xchg
jne
xor
ins
(bad)
inc
xor
cmp
js
pop
mov
cmp
dec
jge
lds
fwait
icebp
mov
xchg
and
int3
fisubr
cmc
rol
add
or
js
xchg
lods
cld
ss
mov
mov
ficomp
add
mov
mov
mov
mov
les
nop
mov
js
dec
pusha
pop
test
xlat
pushf
sub
jne
inc
jno
cdq
fs
call
and
jp
push
sub
or
pop
sbb
test
aas
leave
lock
(bad)
outs
jp
jo
cmc
retf
mov
(bad)
jmp
or
dec
inc
mov
rcl
(bad)
ins
(bad)
ret
mov
mov
inc
xchg
pop
(bad)
xchg
add
cs
leave
cli
jmp
jp
inc
sar
(bad)
(bad)
or
movs
sbb
ja
ins
or
cmp
stos
adc
add
daa
add
push
cmp
call
outs
xchg
mov
addr16
(bad)
cmps
int
aam
out
clc
push
xchg
out
push
xchg
mov
or
sbb
mov
xchg
or
pop
loopne
out
xor
jg
les
fistp
in
sbb
cmps
mov
lods
cmp
xor
pop
ja
push
or
into
test
sahf
and
pop
and
push
xchg
cmp
dec
out
jg
pop
or
ins
sbb
xor
sbb
dec
sbb
mov
std
jne
and
add
nop
icebp
inc
ret
mov
je
stc
das
icebp
fcom
mov
push
fcom
(bad)
push
and
push
push
push
rol
nop
adc
stos
mov
mov
std
jae
fnsave
xchg
aas
cmps
mov
lods
cmps
enter
test
lock
sub
mov
ret
xchg
add
jp
adc
test
or
and
lods
xchg
or
scas
xor
shr
push
bound
in
fidivr
lea
dec
leave
mov
add
mov
xor
and
enter
jge
jge
movs
or
or
pushf
sbb
repz
mov
cs
inc
(bad)
cmp
punpckhbw
lea
sbb
and
mov
add
push
push
sbb
stos
inc
out
dec
bswap
aaa
dec
fsub
dec
mov
das
mov
or
sbb
dec
sub
sbb
push
or
inc
ja
jnp
addr16
repnz
(bad)
cmp
repnz
cmc
cmp
cmps
xor
xor
call
aad
ins
xchg
imul
mov
jg
(bad)
mov
test
adc
out
push
jne
lahf
js
xor
outs
ret
into
and
xor
dec
dec
mov
and
retf
xchg
dec
mov
scas
jno
fadd
cmp
stc
(bad)
push
ret
inc
cmps
adc
push
sub
jmp
xchg
push
sbb
(bad)
push
int3
fist
jmp
cmp
call
ret
(bad)
aad
unpckhps
mov
mov
inc
ds
rol
push
sbb
movs
fxch
inc
fiadd
repz
call
addr16
movs
xor
sbb
mov
xlat
out
in
pop
je
mov
sub
mov
loopne
xor
cmc
jb
rdmsr
sahf
sbb
fs
ret
jno
ror
xchg
iret
add
sbb
lock
retf
and
test
aad
or
or
ja
repnz
and
mov
arpl
jg
fwait
data16
mul
sub
xor
and
jbe
adc
inc
dec
aaa
sbb
mov
jne
mov
and
jle
push
pop
push
(bad)
rol
stos
mov
lahf
pusha
mov
push
outs
aam
jmp
jg
dec
je
outs
sbb
ja
out
pop
sti
and
pop
loope
into
icebp
or
sbb
push
cmp
mov
rcr
jo
sbb
aam
pop
pop
inc
and
mov
sub
pop
sub
jge
mov
cdq
(bad)
dec
cmc
add
sub
movs
repnz
cmps
scas
add
xor
mov
in
jns
push
and
jmp
out
pushf
jl
shr
int3
mov
stos
and
fld
or
fdiv
xor
sub
out
call
jbe
xchg
cld
call
jne
mov
mov
jl
arpl
cwde
loopne
mov
cs
dec
xor
xchg
sub
pusha
cli
repnz
sub
int3
lods
mov
push
ja
jnp
es
imul
mov
sub
dec
dec
sub
and
and
fs
push
popf
pusha
jl
adc
push
jmp
xchg
jle
xor
ds
xchg
nop
dec
mov
ds
pop
popf
sbb
fwait
loope
mov
inc
(bad)
pop
pop
jb
dec
(bad)
add
xchg
mov
call
mov
sub
int
arpl
lahf
cs
popa
mov
xor
inc
out
sub
aam
and
jp
xchg
call
dec
out
jb
jne
xchg
nop
and
pop
sub
or
fcomp
lods
nop
jns
cmp
jmp
xchg
jmp
jns
dec
neg
fild
ficom
stc
inc
fucomi
lds
es
hlt
movs
mov
dec
outs
and
xchg
fs
cmps
mov
xlat
retf
outs
push
xchg
cwde
scas
fistp
mov
and
pop
xor
sbb
js
in
lahf
jb
xor
inc
sbb
and
or
adc
cmp
int
cwde
iret
jp
adc
push
lea
sbb
lods
add
pop
pop
adc
or
cmp
fistp
fcom
inc
jmp
pop
xor
mov
mov
mov
ins
popf
in
call
or
xor
xlat
jo
push
test
scas
sub
pusha
sub
jle
test
mov
pop
int3
loopne
mov
xor
lock
loopne
aaa
nop
mov
outs
ja
and
fisttp
adc
xchg
or
mov
ret
push
push
mov
lock
data16
add
jne
movs
rcr
popa
xchg
mov
inc
jae
jp
subps
shr
lds
cmp
or
mov
retf
ret
xchg
adc
ficom
lar
adc
xor
int3
ds
outs
dec
push
scas
mov
sub
dec
mov
popf
sub
fsubr
xor
xchg
inc
and
je
mov
xor
fisub
enter
ror
test
jnp
push
cmp
dec
jno
outs
cmp
dec
push
out
mov
push
pushf
mov
push
into
sbb
in
sbb
scas
out
cmps
sbb
pushf
je
dec
outs
dec
inc
mov
adc
fst
(bad)
pop
add
mov
jnp
jno
or
add
fadd
in
mov
(bad)
stc
or
ins
dec
lods
nop
sub
push
shl
sub
shl
push
sbb
stos
outs
add
shr
imul
les
jb
test
fs
xor
add
adc
sbb
xor
(bad)
nop
xchg
lahf
xor
(bad)
xlat
add
arpl
sar
lahf
adc
loop
pop
call
std
cli
inc
mov
scas
pop
jp
rol
lock
dec
mov
dec
ret
sub
data16
cdq
fldenv
scas
xchg
cmp
cmps
into
addr16
or
mov
movzx
mov
mov
jle
sbb
sbb
jbe
xchg
xchg
movs
xchg
xchg
mov
mov
push
fsub
inc
mov
mov
out
mov
das
inc
mov
jnp
dec
(bad)
push
(bad)
test
dec
push
mov
daa
das
mov
cmp
mov
sbb
repz
loopne
pop
add
adc
mov
pop
adc
lds
sub
clc
shl
cmp
shl
icebp
or
mov
jmp
push
(bad)
xchg
or
nop
shl
cmp
mov
push
repz
ja
out
sub
daa
lock
sub
aad
cmps
add
push
pop
mov
fs
inc
adc
test
push
push
cmp
das
scas
ror
inc
sbb
dec
retf
fwait
add
(bad)
dec
sub
sub
popa
daa
cmps
and
shl
jmp
push
shl
push
or
jmp
xor
dec
adc
(bad)
fidiv
idiv
mov
mov
mov
mov
test
inc
jmp
xchg
fld
adc
dec
mov
xchg
add
jp
repnz
ds
or
int3
lods
ins
add
mov
fidivr
add
loopne
jmp
mov
ret
iret
pop
xor
std
cmc
idiv
cmp
jl
push
xor
lock
mov
jo
xchg
and
and
test
push
(bad)
movs
dec
(bad)
clc
daa
sub
add
xchg
and
sbb
inc
push
cdq
loop
jmp
mov
pop
pop
push
leave
sbb
nop
cmp
loope
mov
pop
nop
push
xor
inc
xchg
daa
pop
or
sbb
jmp
pushf
dec
and
ret
pop
pusha
mov
lods
rcr
loop
stc
ret
pop
mov
(bad)
xchg
add
repz
fnstenv
fucomp
mov
enter
cmps
mov
jecxz
push
js
into
adc
mov
xor
cmp
pop
mov
fcom
adc
aas
push
es
(bad)
jmp
add
movs
das
or
not
inc
jbe
loope
mov
mov
jecxz
stos
xchg
sti
lock
push
add
rcl
cdq
test
fcom
test
and
fsubr
dec
sbb
addr16
xchg
push
pop
cdq
xchg
sub
jge
jmp
je
inc
(bad)
and
into
mov
dec
add
add
pop
xor
mov
shl
out
fstp
jne
mov
in
lea
aaa
push
mov
jbe
adc
ret
in
sub
mov
aad
leave
js
sbb
ficomp
fxch
sub
pop
xchg
add
xlat
xor
xchg
cmp
mov
mov
push
and
clc
sub
ss
cmp
xchg
retf
nop
sbb
sbb
dec
outs
jo
sub
mov
das
sahf
scas
(bad)
adc
xchg
jmp
mov
mov
stos
add
loop
ins
sahf
mov
jmp
int
cmps
xlat
fmul
cmp
cld
imul
repnz
xor
je
jo
test
cld
and
mov
not
dec
fmulp
jae
lds
aam
popa
and
daa
test
(bad)
xchg
addr16
bound
hlt
fwait
dec
pop
not
fimul
jg
ja
push
lods
jmp
div
adc
imul
in
cdq
jecxz
aas
push
adc
pop
inc
mov
stc
int
shl
dec
jno
mul
ret
popf
xchg
add
mov
mov
cld
mov
mov
(bad)
mov
shr
xor
and
xchg
sbb
pop
and
dec
add
cs
add
pop
add
ss
jp
xor
addr16
fwait
sbb
cld
and
add
mov
mov
mov
inc
dec
lods
popf
enter
add
or
stos
ss
adc
mov
adc
jo
adc
test
and
call
js
or
fld
ficom
iret
mul
std
loope
sub
push
bound
cmp
dec
sbb
add
sbb
dec
dec
das
call
jecxz
inc
jb
mov
bound
jge
lea
jge
pop
mov
cmp
sbb
out
in
pop
les
sub
mov
pushf
popf
sbb
icebp
jnp
sti
pop
xchg
and
repnz
mov
cmps
lock
mov
test
mov
ret
mov
aad
sar
and
cmp
idiv
pop
xchg
adc
scas
push
sub
in
fsub
inc
aaa
(bad)
xchg
mov
and
mov
mov
xlat
sbb
pop
cmp
inc
hlt
ficom
inc
inc
xchg
call
aaa
xchg
jmp
lods
cmp
and
pop
ficom
repz
lock
fdivp
xchg
adc
mov
or
mov
outs
inc
ret
push
cmc
inc
retf
dec
pop
or
pop
xor
dec
ds
adc
push
or
adc
adc
sub
or
or
call
mov
dec
dec
mul
cmp
ss
dec
pushf
inc
lea
cmp
sub
int3
or
adc
out
in
xchg
out
inc
pop
icebp
out
sub
mov
call
mov
mov
or
fmul
adc
test
xchg
or
dec
mov
pushf
and
loop
add
test
jmp
or
sbb
out
mov
and
mov
fbstp
arpl
dec
mov
and
out
ret
pop
sbb
xor
ins
(bad)
mov
pop
jnp
inc
mov
cmp
sub
inc
add
sub
dec
in
mov
xchg
pop
jmp
retf
jp
push
cld
data16
out
xchg
and
push
cmp
pop
movs
mov
fsubr
sub
sti
movs
lock
and
ja
pushf
xchg
cmp
pushf
add
sbb
inc
and
rcl
push
adc
inc
(bad)
xor
push
data16
xchg
loop
(bad)
push
sbb
std
arpl
adc
push
fmul
test
sub
dec
(bad)
sbb
test
lods
sbb
xchg
int3
mov
fcomi
retfw
pop
pop
out
cli
mov
pop
cmp
in
in
dec
cwde
mov
cmp
mov
mov
sbb
imul
mov
add
cmc
out
mov
fistp
retf
cwde
sar
mov
gs
xor
pop
scas
mov
cmp
jmp
dec
cmp
cmp
test
nop
loop
jge
or
in
mov
out
sbb
aaa
lock
nop
lods
data16
icebp
jl
and
dec
cmc
ficom
add
in
daa
xlat
hlt
mov
pop
repnz
leave
call
xor
cmp
fwait
loopne
mov
or
pushf
aas
dec
gs
pushf
aas
mov
adc
mov
aad
retf
cmps
inc
fcomp
xchg
stc
fmul
stos
cmp
dec
inc
fsubr
(bad)
loop
sbb
lods
(bad)
pop
dec
shr
adc
cld
call
ja
stc
dec
jg
fidivr
jmp
movs
dec
ret
(bad)
dec
jg
and
jg
push
mov
psubusb
mov
loop
call
shl
and
movs
es
and
sbb
pop
mov
jp
dec
scas
cmp
pop
test
or
sbb
out
iret
movs
push
cs
popf
add
cmc
out
cdq
jl
scas
lock
dec
sub
popf
adc
sar
inc
jo
int3
lods
inc
and
shl
mov
(bad)
or
mov
fst
cld
or
popf
imul
bound
cwde
sub
jb
retf
xchg
mov
jno
sbb
xchg
clc
dec
mov
out
and
push
mov
cmp
cmps
xor
add
xor
outs
lods
jbe
sar
sbb
jmp
out
test
nop
mov
loope
out
inc
pop
pop
aas
jb
and
dec
xor
loopne
pushf
mov
and
lock
inc
jmp
adc
icebp
sahf
jmp
movs
sbb
xchg
push
in
mov
daa
js
mov
cmp
add
cmp
xchg
xor
sub
pusha
daa
pop
add
aad
repz
dec
cmp
jg
aam
cmp
cmp
sbb
movs
sub
sub
mov
aas
popf
enter
stos
xlat
jmp
xor
and
rol
(bad)
xlat
inc
and
mov
stos
out
(bad)
data16
mov
(bad)
pushf
out
xchg
out
xor
jl
pop
jo
retf
jmp
sti
mov
out
mov
add
ror
pusha
sub
mov
sub
or
and
arpl
rcl
stos
add
xor
or
push
(bad)
mul
or
xor
xchg
inc
cmc
fcomp
sub
imul
test
sbb
popa
and
cmp
nop
js
inc
push
push
push
mov
sub
adc
loopne
mov
sbb
pop
stos
xchg
mov
into
cmp
arpl
in
jmp
dec
dec
pop
pop
jge
mov
(bad)
lods
aas
mov
(bad)
ins
xor
and
sbb
jns
cmp
pop
push
pop
fist
sbb
pop
sbb
jmp
mov
add
imul
mov
ja
stos
push
and
mov
idiv
dec
push
push
cmp
jge
cmp
iret
jp
mov
xchg
out
pop
xchg
fsubr
imul
cmp
xchg
stc
cmp
push
inc
call
repz
nop
xor
mov
pop
xor
inc
inc
or
stos
call
sbb
ret
jmp
push
out
aaa
std
hlt
fs
outs
xor
jns
lds
pop
mov
ret
xor
sbb
test
retf
sub
scas
iret
mov
pminsw
mov
aaa
xchg
inc
shr
dec
dec
cmp
dec
(bad)
and
or
mov
lds
mov
icebp
jno
arpl
xor
pushf
jns
mov
push
neg
or
rcl
jae
sbb
push
(bad)
call
cmp
pop
sbb
push
les
dec
daa
cmps
jae
cwde
mov
cli
jl
imul
arpl
dec
(bad)
repz
bound
jne
inc
retf
movs
outs
mov
cmp
ds
lds
call
cld
mov
adc
dec
call
mov
dec
sub
stos
popa
mov
push
(bad)
mov
xchg
(bad)
cmp
pop
ret
in
int
retf
dec
mov
cdq
sar
in
stc
(bad)
jl
ins
ins
mov
pop
movaps
push
stos
mov
sub
cli
push
jmp
inc
and
sbb
jmp
cmps
mov
dec
repnz
mov
mov
cmp
aad
mov
lods
test
pop
imul
(bad)
cmp
(bad)
in
mov
fld
cmp
mov
pop
xchg
jo
jp
(bad)
ins
cmp
fadd
xchg
mov
sbb
jp
rcr
mov
je
mov
test
push
outs
arpl
out
push
push
popf
xchg
out
jbe
aas
xchg
mov
repnz
sub
jmp
scas
cdq
ins
je
xchg
inc
mov
dec
pop
adc
fdivr
lahf
loop
(bad)
adc
into
in
fwait
inc
loopne
clc
(bad)
scas
sbb
xchg
pop
cld
sti
je
sbb
xchg
fisub
mov
ins
jmp
sub
fisub
call
iret
jmp
and
dec
push
mov
clc
fidiv
mov
das
mov
popf
or
lods
adc
push
sub
out
repnz
stos
add
dec
cld
mov
adc
(bad)
imul
xor
outs
mov
das
ja
cld
shl
mov
mov
data16
adc
lahf
mov
pop
mov
lods
mov
mov
mov
pop
data16
test
mov
mov
adc
or
mov
aad
and
xchg
cmps
pop
cmp
aaa
jno
xor
inc
adc
jle
loopne
popf
mov
cmp
sbb
out
fsub
lods
xchg
imul
pop
cmp
sbb
test
cmp
jb
pop
aas
dec
call
cmovnp
dec
mov
and
loope
push
and
adc
ds
enter
test
(bad)
cmp
or
sub
sbb
cmp
mov
es
enter
lock
repz
dec
pusha
push
fld
nop
mov
push
fldenv
test
imul
cli
cld
popf
push
cli
ds
jge
ret
xor
xchg
sub
out
mov
inc
dec
cmp
jg
or
pop
dec
sub
add
scas
arpl
or
out
pop
cli
repz
stos
jmp
mov
inc
lods
fnstcw
dec
pop
mov
lea
adc
jae
mov
sti
cld
add
inc
jno
nop
adc
cwde
rol
pop
cli
(bad)
mov
jp
xor
inc
push
xchg
sub
sbb
jno
pop
int3
cmp
ror
dec
xchg
jmp
rol
mov
jecxz
out
ins
inc
mov
jecxz
shr
push
das
imul
(bad)
jbe
mov
inc
mov
hlt
hlt
sub
mov
pop
mov
jmp
test
and
movhps
ja
or
js
push
mov
scas
dec
sbb
popf
pop
cli
sub
mov
mov
mov
or
sub
sub
push
pop
popa
leave
dec
mov
mov
adc
push
add
mov
sub
std
pop
mov
int3
loope
daa
out
stos
aas
jo
gs
cdq
popa
cmps
adc
sub
(bad)
cmp
adc
fs
push
bnd
test
dec
retf
push
lahf
push
fdivr
dec
dec
pop
push
ds
and
sub
out
push
mov
arpl
call
mov
mov
sbb
cdq
xchg
idiv
adc
push
adc
jae
mov
mov
mov
cmp
jmp
repz
(bad)
sar
pop
ds
and
aad
sbb
lods
sbb
mov
cmps
out
xlat
bound
adc
ds
loope
dec
dec
aad
sbb
mov
data16
xor
push
mov
outs
imul
pop
in
or
dec
das
mov
in
mov
cmc
stos
and
dec
mov
popa
ret
jl
pusha
movs
fidiv
jg
mov
iret
fscale
mov
xchg
shr
mov
xchg
sub
cli
repz
mov
dec
inc
lods
movs
xor
xchg
push
lods
fbstp
in
hlt
sbb
push
xor
xor
test
out
jl
jl
test
sti
vcvttpd2dq
mov
push
jbe
add
mov
xchg
rcr
mov
jmp
jbe
adc
pop
leave
push
stos
add
movs
retf
push
inc
outs
ret
and
sbb
rcr
rol
cli
out
movs
pop
or
lahf
mov
add
cmps
jmp
mov
or
cmps
jl
pop
clc
lock
and
pop
pusha
inc
outs
sahf
je
iret
push
call
ja
fmulp
push
loop
bound
div
pushf
mov
enter
ins
or
cmp
adc
sbb
dec
push
dec
jl
xchg
push
pop
sahf
sub
in
pop
xchg
pop
sbb
call
adc
mov
(bad)
jnp
rcr
sahf
pushf
pusha
pusha
xchg
jns
stc
mov
and
test
pusha
(bad)
inc
push
mov
xchg
push
add
push
out
std
clc
das
push
cmp
mov
push
add
gs
dec
movs
fst
or
mov
mov
sub
sub
mov
mov
push
push
std
or
cmp
cs
xor
add
mov
retf
mov
into
sar
std
lea
dec
xor
inc
fdiv
cdq
retf
pop
sti
dec
jp
dec
sub
cdq
fwait
std
iret
fwait
xor
pop
sbb
xchg
rcl
test
add
jle
xor
adc
int
jmp
(bad)
fdiv
test
in
cmp
stos
outs
mov
mov
inc
add
cmc
stc
outs
and
jb
(bad)
aad
(bad)
pop
or
push
jle
ret
push
cmp
mov
cmps
xchg
mov
dec
retf
ret
pop
into
push
repnz
add
cld
sub
cld
pop
xor
shl
pop
add
retf
xchg
mov
inc
sbb
cmps
rcr
ds
enter
dec
lock
gs
data16
(bad)
xor
ja
cmps
sbb
sbb
add
(bad)
push
lock
(bad)
aam
mov
hlt
jae
je
call
xchg
(bad)
sbb
pop
pop
inc
cwde
mov
pop
dec
addr16
int3
cwde
and
or
push
not
verr
dec
xchg
mov
imul
loope
repnz
repz
xchg
ja
fisttp
movs
ret
test
imul
jle
dec
adc
jo
lods
pop
scas
into
mov
das
sbb
into
test
repz
call
out
rcr
jg
inc
inc
adc
clc
arpl
outs
add
fdivr
inc
in
sbb
adc
xchg
lds
loopne
cs
mov
pop
pop
scas
retf
fisub
and
(bad)
aaa
hlt
sub
jmp
mov
and
jns
rcr
mov
pop
popf
inc
jbe
add
push
cmp
stos
pop
inc
test
aas
or
mov
adc
les
rcl
push
sub
jo
ret
aas
add
jne
or
pop
add
sbb
xchg
div
bound
popa
mov
inc
cmp
dec
hlt
or
shr
fdivr
repnz
or
mov
neg
rcr
jge
aas
push
shr
inc
adc
retf
dec
pop
fist
pop
pop
rcr
ror
and
or
inc
jno
xchg
inc
sbb
popf
cwde
jmp
int
jle
cmp
jbe
movs
jae
dec
adc
xchg
fist
mov
xchg
mov
mov
sahf
add
retf
mov
xchg
ins
not
push
fstp
inc
mul
dec
cmp
bound
and
mov
and
or
xor
mov
aas
xchg
je
pusha
sahf
inc
mov
jno
sbb
call
push
(bad)
mov
mov
lods
ficomp
sbb
add
in
jge
int3
and
(bad)
imul
jmp
mov
cmp
data16
pop
lahf
push
popf
mov
push
sub
aad
lods
jp
ins
cmp
jbe
lods
pop
pusha
jne
inc
inc
in
cmp
xor
mov
add
sti
or
mov
clc
pusha
(bad)
push
hlt
jne
iret
xchg
in
or
xchg
cli
sub
leave
retf
ins
popf
xor
js
xchg
mul
sbb
and
rcr
fs
inc
retf
mov
push
(bad)
jmp
data16
push
daa
fild
cmp
ins
stc
add
iret
enter
jl
rcl
push
jge
nop
mov
popf
or
enter
fdiv
mov
arpl
push
fidivr
mov
xchg
addr16
mov
jbe
mov
out
adc
aas
shr
jne
jmp
popf
mov
mov
bsr
dec
mov
ret
adc
loope
stc
push
dec
fcom
push
outs
out
addr16
inc
inc
xchg
int
pusha
in
or
adc
hlt
inc
in
pop
pminub
test
xor
jmp
jge
mov
pop
mov
mov
js
adc
gs
sbb
xor
dec
adc
cmp
sar
lds
xor
xchg
mov
jmp
cld
push
mov
popf
jno
xor
dec
aas
push
stc
fiadd
push
cmp
xor
jle
pop
sbb
iret
into
xchg
jnp
or
int
or
pop
mov
inc
xchg
aad
pushf
jg
fild
stos
dec
loop
push
fld
js
jecxz
sub
cmc
ror
inc
test
loop
mov
into
aam
movs
mov
into
daa
(bad)
xor
mov
jecxz
fsubr
xchg
adc
mov
cli
xor
jmp
push
adc
push
fcmovbe
mov
das
adc
cmp
xor
mov
lock
mov
jae
or
mov
lods
push
jno
pop
xlat
inc
push
mov
or
test
jle
cmps
and
add
sar
pop
mov
loope
mov
data16
sub
rcr
pop
aas
sti
xor
mov
hlt
pop
pop
ja
jg
stos
inc
sub
cld
inc
cmc
add
and
pop
stc
jno
jmp
xor
adc
sti
cmp
pop
(bad)
lock
sahf
mov
mov
ss
out
and
addr16
sar
and
fxch
sub
aad
dec
push
dec
call
sub
(bad)
test
fdiv
pop
mov
fcomp
push
enter
loop
mov
les
xlat
icebp
xor
scas
not
call
mov
xlat
and
fiadd
fidiv
mov
sbb
shr
mov
dec
not
xor
fcompp
ret
xor
pusha
mov
and
dec
and
add
push
jno
xchg
dec
sbb
or
mov
lahf
inc
adc
mov
sub
and
mov
xchg
sahf
repz
jp
aad
push
fdivr
push
fdivrp
pop
imul
repz
in
or
adc
ins
cmps
xchg
or
mov
jb
adc
xchg
add
mov
cmp
scas
clc
je
mov
adc
mov
lods
out
cmp
int
clc
xchg
je
nop
inc
loopne
and
stc
inc
dec
mov
cs
push
push
iret
cmp
mov
push
icebp
popf
dec
ret
das
dec
data16
ja
jbe
cmps
and
rol
lea
(bad)
xchg
pop
movs
mov
ror
imul
cwde
xor
mov
xor
push
mov
mov
stos
cmp
mov
xchg
jmp
cwde
repnz
fwait
jb
mov
lods
imul
sar
ret
mov
fcomp
xchg
daa
(bad)
fistp
mov
(bad)
dec
aaa
jmp
pop
jle
stos
sar
xchg
or
aaa
(bad)
jbe
je
int
pop
sti
imul
ret
mov
in
(bad)
cs
xchg
sub
push
ins
out
mov
cmps
outs
push
dec
aas
js
shr
mov
push
push
cvtps2pd
jns
in
pusha
fisub
xchg
push
inc
popf
test
(bad)
fcmove
jae
inc
push
push
mov
stos
jmp
xchg
mov
dec
mov
jb
xor
scas
push
add
call
jo
xchg
or
movs
ret
stos
sbb
xchg
mov
inc
xlat
out
push
or
dec
jp
sbb
imul
popf
sti
dec
xor
jae
inc
inc
inc
jbe
aaa
(bad)
into
adc
idiv
add
mov
mov
and
dec
mov
inc
fstp
sub
mov
mov
cdq
adc
mov
push
dec
sub
mov
mov
or
adc
xchg
shr
leave
outs
xor
jo
popf
ss
xor
jb
mov
jg
jo
dec
popf
push
jl
out
mov
(bad)
sub
pop
mov
pop
pushw
cs
out
ins
adc
leave
xor
mov
xor
and
mov
mov
(bad)
jge
xor
dec
pop
sbb
lods
inc
adc
fsubr
or
push
psubsw
and
and
adc
ins
add
pop
jg
fcomp
int
pop
mov
lds
jb
jns
cmp
repnz
loopne
push
inc
dec
or
clc
aad
adc
push
or
xor
pop
mov
jl
cmc
xchg
add
adc
out
and
push
icebp
mov
adc
pop
add
(bad)
cs
mov
shl
mov
pop
add
push
add
fmul
jg
cmp
fwait
push
ret
addr16
(bad)
pop
cmp
loopne
in
add
gs
std
xor
ficom
mov
and
daa
dec
pop
mov
leave
jge
imul
xlat
lods
lds
push
sti
(bad)
fsubr
push
ror
inc
cdq
(bad)
stos
pusha
leave
outs
test
xchg
and
bound
mov
aas
add
push
pop
push
sar
jecxz
out
jle
xor
cmc
push
mov
in
ins
jp
outs
pop
pop
mov
repz
dec
into
ficomp
xchg
fsubr
push
rcl
icebp
dec
mov
cmp
ins
pop
sub
mov
sub
iret
mov
and
dec
pop
test
fst
les
xchg
(bad)
and
pusha
mov
imul
test
mov
in
jmp
(bad)
lahf
mov
jmp
(bad)
jae
adc
cmps
mov
shl
addr16
or
cmc
nop
lea
pop
inc
enter
mov
mov
stos
push
addr16
int
dec
sbb
das
pop
dec
cdq
cmovs
fcomip
mov
xchg
imul
pop
xchg
in
mov
push
adc
dec
loope
test
dec
mov
sbb
dec
pop
mov
xchg
pop
out
(bad)
adc
mov
xchg
pop
outs
aaa
mov
jno
in
or
rol
pop
inc
cmc
jl
pop
pop
imul
lods
retf
jmp
push
push
cs
jl
add
and
inc
mov
(bad)
(bad)
pusha
xor
hlt
mov
jmp
lods
and
scas
sbb
scas
jmp
arpl
test
and
iret
add
pop
adc
dec
mov
cmps
in
adc
in
or
mov
sub
out
jle
fcomp
jge
lea
div
xchg
sbb
xchg
inc
mov
test
int3
jmp
mov
cmp
jl
jne
dec
out
lea
add
test
or
je
xlat
cmp
jmp
(bad)
repnz
cmp
movs
mov
sar
push
fdiv
pop
pop
xchg
jmp
lods
sbb
jle
inc
push
imul
push
ss
xchg
push
aam
or
jge
jecxz
or
jge
ret
imul
inc
mov
retf
aam
aas
dec
nop
cmp
mov
int
cdq
mov
push
mov
repz
or
or
xor
mov
hlt
inc
xchg
adc
cs
sub
pop
into
jl
fadd
push
addr16
jl
fimul
xchg
icebp
inc
xchg
stos
sbb
repz
dec
cs
cld
pop
sar
pop
lds
jle
jns
fist
or
dec
add
cmp
adc
mov
ss
sti
mov
adc
(bad)
jmp
and
xchg
iret
inc
mov
fs
mov
cmp
loope
sahf
adc
or
stos
pop
cmps
bound
jne
dec
xchg
int3
mov
mov
inc
lea
hlt
dec
scas
test
inc
push
adc
cs
jns
adc
inc
in
jmp
ds
test
xchg
push
scas
shl
fdivr
add
inc
hlt
mov
inc
sahf
int
push
inc
jp
dec
lock
pop
or
icebp
fadd
jns
pop
aaa
or
repnz
rcr
dec
push
inc
(bad)
fsub
and
ins
das
xchg
adc
jbe
clc
sbb
xchg
retf
idiv
or
cmc
fnstenv
inc
aad
(bad)
je
in
jnp
sbb
bound
and
xor
jmp
std
dec
jle
inc
sbb
cmps
rcl
movs
or
jno
pop
mov
pop
ds
out
adc
add
inc
mov
push
jbe
mov
fs
mov
xchg
sub
xchg
xchg
lds
jno
mov
pusha
and
or
out
mov
mov
out
nop
nop
dec
push
call
mov
jmp
dec
push
xchg
jmp
pop
ins
ins
sub
movs
out
inc
push
dec
or
xor
jge
push
loope
nop
stos
clc
or
xchg
cld
jno
pop
ror
out
lahf
fwait
ror
and
cmp
dec
push
push
loope
js
jae
jg
cdq
mov
and
mov
mov
clc
mov
mov
dec
push
je
out
cli
adc
push
inc
cli
fiadd
out
jge
add
mov
xchg
adc
arpl
pop
(bad)
sbb
ret
mov
les
cmp
push
cmp
and
es
mov
aad
imul
cmp
pop
shl
mov
dec
mov
and
leave
les
daa
push
in
int
cmps
xchg
xor
sbb
bound
xor
pop
cmp
mov
inc
scas
sbb
(bad)
div
cmp
mov
inc
xchg
xchg
stos
or
icebp
and
mov
pop
ret
or
daa
add
cmp
push
ret
(bad)
into
mov
adc
adc
iret
out
out
adc
xchg
arpl
aam
sbb
pop
dec
xor
mov
lods
sbb
pop
pop
cli
stos
xchg
mov
sahf
inc
shl
(bad)
jle
gs
imul
pop
retf
jae
lds
lahf
dec
jmp
inc
cmp
leave
repz
sbb
cmp
ja
(bad)
es
sbb
cmp
nop
leave
xchg
push
mov
mov
cmp
lea
and
jae
inc
inc
jns
int
dec
cmc
push
push
jge
and
out
mov
pop
ds
mov
mov
mov
fsubrp
sbb
mov
or
fild
ror
dec
in
in
mov
push
stos
movs
sar
lahf
enter
adc
adc
or
jbe
stos
mov
mov
stos
rcr
into
adc
outs
(bad)
pop
and
xchg
lahf
sbb
fmul
jmp
xlat
xchg
mov
add
and
add
or
sahf
jb
test
popf
xor
mov
ins
sbb
mov
aaa
int3
(bad)
sub
popa
loopne
(bad)
lods
cmc
test
xchg
xchg
div
xor
int
stos
test
fcomp
or
cmp
add
fist
fwait
dec
cli
cmp
inc
fnstenv
arpl
ins
arpl
retf
cmps
cmp
pushf
pusha
(bad)
in
sub
imul
out
retf
rcl
or
test
or
addr16
out
lds
mov
push
mov
in
retf
test
addr16
mov
(bad)
fmul
sbb
fiadd
retf
je
in
test
call
pop
pop
dec
push
add
test
adc
inc
imul
add
test
mov
aam
and
jp
dec
adc
fsubr
(bad)
cli
lods
nop
and
test
ja
and
popf
mov
aaa
leave
xchg
cwde
mov
neg
popa
adc
ret
xchg
repz
jg
add
mov
sub
mov
xor
in
mov
pop
cmc
(bad)
js
add
repz
push
cld
jae
xor
inc
in
les
cmc
int3
and
add
pop
add
jl
jns
push
or
aaa
adc
icebp
jne
daa
dec
ret
pop
inc
dec
push
mov
(bad)
jge
daa
cmp
adc
in
retf
scas
sub
inc
xchg
fnstsw
in
push
lock
add
icebp
in
pop
push
ret
stc
mov
sbb
addr16
inc
in
mov
or
retf
sbb
int
movs
stc
hlt
rol
and
push
sub
xchg
popa
dec
and
or
std
out
das
mov
jg
jmp
retf
cmp
sbb
gs
aad
ficom
push
cmp
mov
mov
rol
and
icebp
sub
xor
fwait
sub
mov
xchg
scas
loopne
mov
leave
jne
push
cld
fisttp
iret
pop
shl
inc
shl
test
fwait
mov
scas
cwde
imul
iret
sub
and
retf
push
in
mov
retf
dec
sbb
jo
shl
xor
push
dec
shl
dec
add
int3
jmp
pusha
rol
imul
dec
lahf
fwait
icebp
out
add
or
imul
pop
and
adc
sahf
push
ds
test
test
popf
inc
dec
ret
inc
cld
(bad)
cld
xchg
inc
mov
xlat
pop
dec
jmp
in
inc
mov
je
and
dec
lods
fstp
sbb
rcl
in
pop
leave
pushf
test
pop
imul
and
stos
and
and
cmc
add
sbb
and
jge
fimul
mov
sub
fst
cmps
xor
retf
stos
mov
cmps
xor
icebp
mov
aam
dec
out
call
jae
movs
mov
int3
and
mov
retf
inc
cmp
or
pop
lods
out
pop
scas
jnp
xchg
sub
fistp
leave
or
sbb
and
das
call
dec
inc
mov
scas
mov
sbb
repnz
jbe
sbb
jae
mov
mov
lods
jmp
into
popa
fmulp
stc
mov
aaa
mov
shr
sub
(bad)
out
movs
inc
pop
stos
sbb
loop
les
dec
test
inc
dec
mov
mov
pop
sbb
fs
dec
dec
cld
clc
jle
mov
and
jne
and
nop
xor
xchg
lods
outs
ret
push
not
scas
cmps
gs
out
pop
in
test
and
sub
stos
jl
lods
mov
mov
dec
(bad)
cmp
scas
xor
clc
xchg
ins
mov
jns
nop
std
jb
faddp
mul
xor
pop
pop
and
add
fcom
fs
sbb
fcom
sub
rcl
and
retf
clc
stos
lds
jle
and
mov
inc
pop
or
jo
sbb
mov
rcr
or
stc
loope
sub
mov
mov
sub
fs
jbe
dec
cmps
push
jmp
(bad)
cs
sub
or
xchg
xor
xchg
sub
fidivr
jmp
mov
inc
shr
adc
js
push
adc
jmp
movs
ja
sub
cmp
test
in
sbb
jb
fnsave
sbb
lea
lds
push
pop
aad
push
neg
stos
pop
cmp
mov
jmp
jle
gs
xchg
jmp
xchg
jo
gs
mov
rcl
jl
packssdw
jmp
jmp
mov
lods
jmp
fcmovne
sar
test
repnz
push
jmp
(bad)
sbb
rcl
xchg
gs
mov
push
jle
mov
gs
arpl
idiv
ja
or
dec
fnstenv
sbb
xor
sub
xchg
inc
cli
jmp
adc
xchg
data16
jp
neg
mov
dec
call
test
push
cmp
popf
xchg
cmp
cmp
ja
(bad)
xor
inc
sar
outs
out
dec
xor
popf
mov
inc
test
mov
(bad)
fnstcw
nop
mov
jo
mov
out
rol
push
sti
stos
in
hlt
jmp
mov
mov
push
mov
repnz
sti
and
cmp
push
lea
push
xor
jbe
retf
imul
repnz
lods
mov
push
dec
jp
add
jbe
pop
dec
ins
pop
adc
pop
rcl
ins
jl
cmc
(bad)
push
test
mov
cmp
stos
add
jns
pop
xchg
ds
mov
lods
je
in
xchg
leave
pushf
adc
lock
(bad)
int
sbb
dec
mov
sbb
enter
fdiv
das
push
mov
int3
cmps
add
ret
mov
inc
fild
xchg
in
js
mov
or
test
mov
push
or
xchg
stos
aas
mov
imul
sub
add
mov
inc
add
into
jne
add
push
data16
sub
jno
outs
jno
sbb
lods
cdq
stos
repz
popf
out
xor
(bad)
aas
call
xchg
call
fistp
test
pop
data16
push
push
pop
push
hlt
adc
outs
scas
dec
test
dec
sti
jns
mov
imul
adc
div
shl
rol
adc
inc
dec
sub
scas
jmp
les
sub
imul
push
data16
xor
int
int
in
fdiv
push
fcom
push
mov
(bad)
xor
in
pop
xor
push
std
lahf
repnz
or
push
xchg
cmp
sub
pop
mov
lods
scas
add
push
xchg
fist
mov
add
retf
test
mov
jge
jge
jns
push
(bad)
cmps
xor
mov
in
pop
int3
xchg
xor
ret
jecxz
neg
lock
mov
sub
lea
(bad)
or
addr16
rol
jecxz
cli
mov
retf
call
mov
inc
cld
inc
cmp
lds
cmps
mov
test
std
add
and
inc
and
lods
sbb
sbb
mov
or
jecxz
cmps
mov
cmps
cdq
aas
nop
mov
arpl
xor
mov
dec
mov
popf
ret
(bad)
adc
and
retf
sbb
cwde
fwait
fs
cdq
cmps
sub
jns
ror
icebp
add
mov
das
fwait
add
lock
in
fstp
aas
iret
fdiv
lock
pop
pop
test
mov
mov
rcr
xchg
jb
int3
mov
clc
mov
push
in
loopne
in
inc
mov
popa
(bad)
xchg
cwde
mov
mov
loope
sahf
int3
shr
sub
fwait
dec
sub
ficom
int
sbb
push
aam
pop
adc
adc
push
adc
repz
arpl
test
scas
dec
pop
(bad)
call
imul
bound
mov
cmps
fbld
neg
sbb
xchg
bound
sub
fisttp
data16
aaa
shl
mov
jg
sub
xacquire
mov
jge
cmp
jmp
in
arpl
ja
sti
in
mov
lds
jae
frstor
or
adc
iret
mov
push
xor
inc
jmp
popf
sbb
adc
cmp
les
ins
pop
mov
stos
sbb
ja
loop
ja
xchg
ffree
mov
popf
ins
sbb
pop
int
stc
sub
mov
rep
imul
mov
pop
jno
cmp
hlt
pop
mov
and
(bad)
pop
in
das
cmp
loop
cld
test
sti
mov
div
jp
stos
cmps
fstp
xchg
test
mov
sbb
nop
not
cmp
pushf
outs
mov
xlat
fisubr
psadbw
xchg
add
mov
and
inc
cmp
pop
push
xchg
fcom
hlt
lods
add
jbe
push
mov
sar
stc
fs
imul
add
(bad)
int3
out
sbb
pop
jne
adc
int3
daa
leave
fidivr
rcl
lods
loope
arpl
mov
div
pop
out
mov
cmp
mov
setne
ja
add
lahf
out
add
mov
shr
lahf
or
shr
jnp
mov
packssdw
enter
aad
stc
inc
dec
cli
fwait
mov
retf
popa
xlat
clc
lock
fcmovb
sub
sbb
push
xchg
inc
in
cmp
(bad)
in
addr16
(bad)
inc
popa
fistp
add
call
pop
cmp
and
xor
mov
sahf
cmps
jge
cmp
add
ins
sar
mov
sbb
imul
adc
movsx
loopne
mov
jmp
or
inc
cmp
xor
jb
sub
ins
lar
adc
push
or
jae
imul
adc
loopne
cdq
mov
xor
xchg
movs
jg
popf
and
inc
pusha
imul
xor
outs
outs
shr
arpl
icebp
pop
les
cmp
sub
push
xchg
cmps
and
dec
shr
(bad)
jecxz
jno
sbb
xor
stos
mov
jl
fldcw
cwde
mov
idiv
add
and
stc
pop
xor
into
xor
pop
mov
sbb
pop
jg
adc
in
loope
or
in
mov
out
sbb
sub
dec
xlat
jno
sub
(bad)
mov
jg
imul
mul
mov
cld
or
js
rol
sbb
add
int
scas
mov
sbb
jnp
jne
lds
mov
out
sub
push
test
mov
push
jmp
mov
or
and
popf
jmp
sbb
and
aam
mov
(bad)
nop
inc
cmp
adc
in
std
or
sbb
fstp
in
mov
sbb
les
ret
cmp
jmp
pop
add
pop
cmp
int
out
mov
in
repnz
cmp
ss
xor
daa
mov
push
sbb
out
std
ds
add
stc
scas
outs
stc
popf
mov
leave
outs
cmp
mov
sbb
and
inc
cli
mov
mov
add
mov
call
push
movs
add
push
or
xor
add
or
push
xlat
xchg
adc
dec
inc
jmp
inc
mov
lods
aam
loop
xlat
outs
ds
cmps
mov
movs
sbb
outs
cmps
loopne
into
iret
mov
pop
cmp
dec
test
sahf
mov
jo
xor
shr
mov
inc
push
push
loope
add
dec
sti
cmps
shr
repz
xchg
xor
xor
jp
mov
lds
lods
and
mov
mov
lahf
or
mov
mov
mov
les
and
std
inc
mov
push
pop
je
mov
dec
icebp
je
jmp
push
shr
inc
fbstp
jns
dec
cmp
in
adc
sbb
out
loopne
cmp
jecxz
out
in
idiv
push
(bad)
adc
mul
out
(bad)
arpl
lods
in
and
inc
psrlw
add
and
aaa
cmp
out
das
loopne
loopne
ret
add
aaa
push
jae
sbb
mov
add
(bad)
or
mov
adc
ficomp
jl
test
cmps
mov
mov
sbb
mov
out
das
or
dec
push
push
mov
adc
lahf
sub
dec
fcmovbe
mov
jg
(bad)
dec
lods
inc
cli
fld
dec
js
dec
call
jb
jp
xor
(bad)
and
lahf
bound
push
mov
adc
cmps
sub
dec
cwde
push
push
push
sub
cwde
xlat
cs
fstp
add
or
xchg
or
outs
mov
pop
add
stos
pop
daa
mov
std
xlat
hlt
in
cmp
push
sub
push
mov
lahf
adc
arpl
(bad)
cmp
imul
ds
push
ret
sbb
sbb
repnz
dec
pop
sub
push
popa
mov
int3
add
nop
sub
repnz
scas
adc
(bad)
dec
cmp
bound
push
mov
mov
ret
cbw
jbe
in
ja
push
mov
mov
inc
stc
xchg
adc
adc
pop
push
call
jno
hlt
xor
ins
dec
mov
and
iret
mov
cwde
movs
repnz
mov
sar
push
push
pop
inc
fidivr
sub
bnd
int3
jecxz
shr
dec
in
push
aaa
push
mov
rol
(bad)
in
dec
daa
mov
jle
cmps
pop
iret
pop
jge
movs
inc
jecxz
push
jmp
adc
call
(bad)
mov
inc
or
(bad)
cmps
shl
lods
mov
push
test
push
pushf
adc
add
fimul
add
sar
cli
dec
(bad)
stos
inc
add
mov
mov
fwait
jmp
fcom
jb
fdivr
xchg
cmp
lods
mov
or
jl
sbb
pop
mov
(bad)
mov
out
popa
jle
cmp
mov
mov
adc
push
into
add
sub
sbb
xchg
sbb
push
xlat
daa
jb
enter
js
mov
icebp
jae
test
(bad)
push
outs
xchg
(bad)
cmc
out
mov
xchg
cmp
dec
push
popf
dec
inc
outs
outs
bound
push
retf
ret
ins
cmp
cmp
aaa
call
push
pop
mov
xor
dec
jg
mov
push
js
pop
and
push
es
push
pop
fcomp
push
xor
mov
aaa
div
cmp
cmp
dec
in
in
pop
add
inc
pop
or
outs
lea
les
cmps
add
out
and
or
sub
and
mov
sub
inc
sub
pop
or
retf
mov
bound
jbe
out
adc
cld
cmp
inc
pop
cmp
fs
fiadd
xchg
mov
push
mov
xchg
out
mov
jno
push
xchg
imul
sub
add
lea
test
or
adc
ror
test
out
movs
jae
ficom
jp
ja
retf
xor
cdq
push
mov
lea
cmp
ret
aaa
push
jp
js
loope
cmp
jge
add
xor
xchg
sbb
add
xor
movs
adc
dec
hlt
push
adc
add
je
dec
or
cld
push
imul
je
into
xor
push
adc
or
out
mov
sti
push
out
in
add
xchg
jo
fidiv
jecxz
dec
adc
xchg
xchg
das
or
mov
jmp
jo
and
imul
jno
xchg
arpl
inc
adc
mov
arpl
mov
loop
ins
or
ins
imul
inc
jge
xchg
adc
lods
aad
push
not
inc
jp
jmp
mov
dec
xchg
retf
scas
aam
(bad)
scas
out
jg
mov
jp
pusha
cmp
shr
daa
sub
stc
adc
or
daa
xor
dec
in
jl
adc
pop
xor
inc
push
lods
mov
js
xor
test
ss
clc
inc
adc
mov
cdq
ja
inc
mov
(bad)
aad
aas
stos
inc
test
imul
sub
mov
pop
cli
pushf
idiv
xchg
mov
jmp
(bad)
pop
es
popf
rcl
add
dec
push
shl
test
cld
je
loope
or
jmp
and
jl
out
jmp
imul
and
push
xchg
cmp
lock
je
jno
mov
mov
stc
gs
mov
leave
mov
push
retf
(bad)
ret
cmp
mov
push
jmp
enter
lock
js
fidivr
enter
mov
je
push
xchg
or
sbb
xor
mov
dec
out
push
and
lea
push
jmp
pop
jg
stos
rcl
popf
mov
mov
sti
shr
inc
sbb
cmc
jl
add
and
call
jle
lahf
and
inc
add
mov
js
dec
pop
stc
jecxz
and
jmp
fldcw
push
inc
enter
and
push
retf
push
stos
or
ins
mov
inc
sub
daa
in
mov
enter
xchg
inc
xor
jmp
lea
dec
out
shl
dec
cmp
clc
mov
leave
iret
jmp
mov
adc
movs
lds
jmp
adc
adc
mov
xchg
jecxz
jne
pop
jne
mov
imul
fucomip
je
popf
iret
test
arpl
popf
call
imul
scas
aad
and
fmul
xchg
add
ds
push
aam
arpl
xchg
jne
inc
cli
xor
dec
jmp
pop
aaa
(bad)
es
and
sar
lahf
mov
inc
sub
mov
clc
and
js
dec
pop
add
mov
(bad)
mov
aas
sub
jmp
cld
pop
lods
mov
xor
pop
pushf
lock
pop
push
jbe
call
scas
xchg
icebp
aas
xor
arpl
mov
retf
(bad)
mov
push
dec
xchg
mov
mov
dec
jnp
ds
movs
nop
bswap
jnp
stos
sub
xchg
mov
inc
retf
sub
mov
loope
add
out
ins
xchg
aaa
call
jp
cli
imul
adc
mov
cmc
mov
mov
and
mov
push
add
mov
sbb
xchg
add
out
in
cwde
(bad)
daa
sub
int3
dec
int
lds
cmp
outs
fwait
adc
adc
js
inc
push
cmp
push
fnstsw
mov
mov
popf
dec
or
ins
std
lahf
sub
loop
inc
push
jle
mov
adc
daa
arpl
sbb
mov
cdq
mov
clc
mov
into
jle
lea
pop
mov
mov
add
lock
sub
jecxz
ds
xchg
jl
aad
or
cdq
(bad)
repz
push
jnp
push
stos
pop
frstpm(287
pop
mov
adc
add
xchg
mov
dec
xchg
and
mov
add
(bad)
dec
or
je
mov
sbb
jne
sub
add
mov
dec
in
ss
shr
add
cmp
sub
mov
ror
dec
mov
mov
fwait
push
enter
ror
mov
repz
push
inc
pop
add
xor
add
mov
ror
hlt
js
loope
(bad)
xor
rol
jae
dec
dec
pop
add
mov
mov
xor
cdq
lock
jmp
jo
rol
enter
add
add
push
jp
addr16
mov
daa
mov
fidivr
jmp
xchg
or
sahf
sbb
pushf
sbb
pop
test
cld
jg
mov
lds
div
mov
dec
int3
in
jmp
mov
push
ins
push
or
pop
jmp
leave
mov
fld
movs
push
adc
pop
add
(bad)
repz
cld
jbe
sti
hlt
ror
cld
adc
ret
lods
add
mov
hlt
mov
jae
xor
cdq
dec
cmps
lods
sti
mov
lods
and
push
push
int3
test
jmp
iret
jno
repnz
sbb
sbb
fs
outs
out
xor
or
cmc
popa
and
aam
mov
fist
lds
pushf
ucomiss
retf
and
lds
add
rcl
scas
mov
dec
(bad)
aad
shr
fld
or
jle
test
sub
aad
ja
jns
or
(bad)
push
loopne
js
mov
loope
dec
jmp
dec
inc
mov
and
(bad)
loopne
mov
data16
mov
sbb
add
call
and
cmp
or
inc
xchg
pop
mov
dec
into
repz
xchg
and
push
and
jnp
mov
mov
ret
and
outs
fwait
mov
scas
es
dec
out
leave
pop
gs
clc
test
mov
jo
inc
lds
pushf
retf
(bad)
add
cmp
lock
imul
adc
test
fdiv
sub
mov
xor
es
adc
in
mov
jg
push
pop
test
fidivr
mov
loop
pop
retf
retf
xor
cdq
jecxz
sub
pop
adc
(bad)
std
call
or
push
pushf
pusha
push
mov
pusha
sub
mov
sub
or
fwait
out
push
inc
cmp
mov
xor
sbb
mov
aas
test
or
and
jle
repnz
aas
cs
sub
and
icebp
pop
jmp
inc
aad
test
inc
push
mov
or
jmp
(bad)
in
xchg
movs
dec
in
dec
out
sbb
scas
scas
fbstp
or
or
jmp
leave
or
jecxz
push
test
repnz
sbb
outs
mov
jle
call
sahf
test
les
movs
mov
xchg
pop
push
ror
outs
adc
mov
imul
sub
cmps
or
dec
ja
repz
jge
fwait
push
(bad)
ja
es
or
inc
aad
mov
in
nop
sub
cmp
cld
nop
scas
add
add
stos
out
adc
pop
jmp
loopne
lock
loope
mov
test
adc
inc
out
ror
sbb
pop
aad
cmp
clc
adc
or
jne
sub
jae
bound
ds
js
ret
les
jge
cmps
add
mov
push
sbb
ret
jmp
arpl
and
pop
outs
xor
mov
ins
or
aad
pop
test
out
daa
sub
(bad)
lock
sbb
jbe
pop
lods
dec
xchg
dec
adc
stc
or
inc
sbb
ins
and
cmp
lods
hlt
xor
std
adc
call
push
imul
inc
sub
cmc
push
adc
dec
mov
repnz
xchg
sub
inc
mov
lahf
aaa
es
(bad)
cmp
stos
sbb
fld
retf
adc
dec
aas
iret
jmp
cmp
cmc
xchg
sti
pop
add
jge
mov
fcomp
cld
or
inc
mov
das
loope
std
rcr
int3
push
outs
(bad)
sub
sbb
jae
mov
xchg
jmp
jmp
xchg
xchg
test
fisttp
xor
dec
ja
pop
push
out
addr16
mov
dec
mov
or
sbb
mov
mov
mov
cmp
das
test
mov
out
mov
(bad)
xchg
sbb
scas
inc
iret
jno
fs
and
adc
mov
sub
jae
add
fs
mov
in
sub
pop
movs
mov
std
push
clc
inc
aas
outs
pusha
bound
sub
mov
mov
or
jns
leave
push
aaa
mov
addr16
cli
jle
mov
call
pop
jo
xor
movs
xor
xchg
jge
or
icebp
shl
adc
jns
inc
sbb
add
cs
cmc
sub
daa
pop
dec
outs
mov
out
pop
dec
ss
outs
sub
mov
data16
imul
adc
mov
lea
push
mov
dec
add
sbb
nop
and
jecxz
jae
ins
xchg
mov
xchg
cs
and
stos
pushf
jmp
xchg
aaa
int
mov
or
xlat
scas
leave
mov
les
mov
call
imul
jmp
call
or
fldcw
xor
(bad)
dec
push
ss
aam
push
test
mov
inc
add
inc
cmp
mov
aad
and
jecxz
inc
mov
and
adc
lods
inc
jno
mov
inc
fistp
movs
cvtdq2ps
int
push
push
jno
jmp
mov
dec
xchg
rol
push
sub
jecxz
mov
dec
jp
push
add
push
pop
mov
inc
push
shl
xor
xchg
push
aad
shl
call
imul
(bad)
test
pop
mov
cwde
cmc
mov
scas
mov
imul
pop
mov
lods
imul
xchg
and
jecxz
mov
push
mov
dec
mov
sar
std
push
mov
adc
jle
loopne
mov
out
dec
inc
mov
dec
std
or
dec
xor
ja
jmp
adc
lods
push
out
sub
cmp
sar
pop
mov
stc
push
not
cmp
pusha
jo
imul
(bad)
clc
adc
jl
(bad)
push
xor
jmp
ds
push
add
xlat
adc
push
imul
or
and
add
inc
push
pushf
adc
(bad)
scas
stc
dec
inc
call
adc
xchg
ror
in
in
adc
ds
pop
ret
pop
dec
lahf
mov
push
je
cmps
inc
add
mov
movs
or
mov
mov
fs
ds
pop
jp
add
sub
adc
retf
pop
(bad)
and
dec
jge
and
jle
mov
xchg
mov
(bad)
jg
sub
sbb
aas
loope
add
fild
cmp
ja
rol
pop
mov
aam
fwait
adc
inc
in
repz
mov
popa
xchg
stos
mov
ins
ja
(bad)
sti
fst
pushf
jno
(bad)
sar
mov
inc
mov
ja
sti
push
loop
mov
xchg
fcomp
mov
sub
(bad)
out
movs
icebp
nop
mov
loope
push
mov
jmp
mov
push
dec
repnz
mov
mov
in
xchg
in
push
icebp
push
ins
and
fdiv
or
xchg
dec
ret
int
ins
repz
xchg
cmp
xchg
xor
sbb
push
les
xlat
pop
stc
and
jge
xor
sbb
retf
xchg
xchg
mov
(bad)
dec
adc
push
(bad)
test
mov
xchg
call
pusha
and
out
scas
mov
cmp
mov
out
pop
pop
sub
int3
std
mov
xor
jmp
mov
sbb
or
push
imul
fmul
mov
popa
xchg
out
mov
jmp
mov
inc
push
pop
retf
jmp
mov
and
shr
scas
enter
stc
or
dec
mov
ja
fs
inc
mov
cmp
retf
lock
neg
push
mov
sbb
mov
adc
arpl
push
stc
xor
push
aaa
repz
xchg
jnp
inc
aam
std
mov
xor
loopne
pop
push
and
dec
bound
fsubr
or
cmp
xor
inc
xor
pop
and
push
ins
outs
bound
or
adc
jbe
clc
dec
jmp
mov
das
pop
adc
test
inc
je
xchg
pop
cs
xchg
sbb
mov
sbb
ja
jge
iret
jl
mov
and
iret
mov
call
and
add
fmul
pushf
adc
mov
gs
inc
pop
inc
dec
xchg
fst
fs
repz
and
push
or
push
movs
fsub
push
cmp
push
push
iret
jmp
sti
cmp
mov
xchg
sbb
and
push
ror
stos
mov
cmc
or
cmc
jnp
loope
cmp
scas
xchg
loopne
rcr
mov
scas
mov
shr
jnp
fnstenv
mov
out
dec
mov
xchg
add
and
dec
fdivrp
test
fisttp
jne
in
cmp
scas
hlt
lock
cdq
aaa
fcomp
lahf
cmp
inc
jb
mov
rep
(bad)
int
out
outs
inc
or
out
mov
push
pop
lods
sbb
pop
xor
push
fist
in
sahf
push
nop
push
mov
jl
or
pop
sub
stos
and
clc
push
push
sbb
(bad)
rcl
das
pop
inc
jnp
movs
jle
cs
imul
lock
add
xchg
mov
mov
outs
data16
fimul
mov
cmp
mov
jb
dec
jl
xor
mov
aas
stos
fs
xor
and
aas
sub
or
vmwrite
dec
mov
xchg
stos
mov
outs
sti
stos
aam
push
outs
mov
fisub
rol
rol
in
(bad)
imul
inc
xchg
aas
ds
bound
mov
xor
push
lods
xor
test
ss
ja
in
call
iret
xor
xchg
loope
push
hlt
test
push
or
les
sub
inc
pop
or
stc
retf
retf
jb
outs
xor
jae
fidivr
jno
xchg
cmp
mov
scas
add
push
xchg
or
and
clc
cmp
mov
scas
test
retf
cmp
xchg
dec
sbb
mov
sbb
add
xchg
xchg
fcomi
inc
xchg
jg
out
sub
dec
pop
jl
pop
cmp
dec
inc
pushf
sbb
push
xor
cmp
ror
out
add
dec
mov
xchg
push
mov
cmp
xor
xchg
mov
arpl
rol
sub
imul
jmp
pop
mov
cld
add
jmp
sbb
push
lock
jmp
fs
cdq
dec
test
inc
adc
adc
push
addr16
mov
mov
test
mov
dec
scas
fidiv
shr
or
or
mov
dec
pop
sub
in
inc
shl
fiadd
addr16
test
mov
xor
mov
xchg
popf
cmps
xlat
inc
jns
sub
jg
mov
and
in
aaa
and
outs
scas
or
lods
push
ins
mov
cmps
jmp
rcl
jno
mov
ficomp
dec
and
mov
repz
out
fimul
enter
jo
jae
popf
das
(bad)
sbb
mov
cmp
stos
or
call
sti
mov
enter
ins
es
rcr
ja
shl
loope
inc
in
sahf
cmp
adc
inc
ins
jmp
inc
aas
retf
mov
cmp
movs
adc
and
mov
pop
shl
and
lea
dec
mov
jmp
mov
stos
jnp
retfw
rcr
jecxz
add
sbb
(bad)
shr
std
xchg
ja
icebp
jb
inc
jnp
and
xchg
aaa
xchg
xchg
adc
out
sbb
cmp
sub
sbb
loope
cmp
lods
inc
push
call
mov
in
arpl
pop
xchg
xor
mov
adc
mov
call
pop
xchg
stos
jge
retf
movs
or
dec
je
inc
dec
mov
jbe
inc
push
in
mov
xor
gs
je
sti
pop
mov
retf
repz
inc
icebp
mov
ret
mov
xor
cmps
sbb
inc
sub
sbb
cmc
cmps
mov
test
jl
retf
sbb
retf
mov
retf
dec
jne
js
(bad)
sub
jmp
push
add
test
mov
cmc
mov
pop
les
jle
enter
adc
mov
lahf
test
jmp
inc
pop
xchg
mov
dec
imul
gs
addr16
std
push
lahf
fst
jmp
outs
into
dec
xchg
xorps
out
pop
sub
mov
adc
ja
mov
sub
es
or
add
push
in
xlat
rcr
xor
and
dec
clc
mov
push
(bad)
dec
test
mov
mov
rol
(bad)
sub
mov
xchg
push
add
lds
jecxz
rcl
ins
movs
fst
das
imul
jmp
xchg
xchg
pop
mov
lea
cmp
jae
pcmpgtb
jno
js
in
cmp
xor
imul
pop
xor
stos
xchg
sbb
aas
iret
mov
mov
mov
sub
inc
sti
and
dec
(bad)
call
int3
pop
cmps
and
or
outs
dec
jb
adc
idiv
pushf
ins
push
adc
push
xadd
jb
inc
mov
inc
jne
pop
shl
aaa
aam
and
lahf
aas
mov
fld
pop
outs
mov
cmp
sub
int
fisttp
rol
sub
test
shr
(bad)
outs
js
add
xchg
ror
lods
repz
sub
lahf
mov
mov
jno
fstp
loope
rcr
cmp
jae
(bad)
jg
pop
inc
cmp
dec
adc
and
push
add
imul
sub
mov
mov
sub
sbb
into
mov
lods
jns
adc
sub
or
pop
xchg
jnp
add
pop
cmp
cli
xchg
nop
mov
mov
dec
or
mov
pop
je
add
xor
test
rol
jo
push
and
out
mov
push
mov
inc
mov
xchg
mov
stc
lahf
fdiv
push
js
rol
dec
pop
cld
mov
xor
mov
jno
loop
in
fdivrp
xor
cwde
push
and
xchg
loop
jne
or
sbb
rcr
repnz
inc
js
jo
in
cmp
lods
add
ds
sbb
jge
cmp
dec
inc
xor
mov
cmp
jp
mov
push
enter
ret
jle
test
sub
fld
repz
dec
scas
jge
mov
pop
lahf
xchg
retf
rol
and
clc
pop
jmp
adc
int
es
push
mov
jne
pop
inc
adc
xchg
(bad)
iret
das
retf
(bad)
in
(bad)
clc
ret
adc
into
push
push
pop
jne
mov
inc
ins
dec
push
pop
mov
in
lods
mov
fadd
jo
sbb
loopne
cs
jne
and
rcl
mov
fsub
int3
adc
hlt
scas
mov
sbb
arpl
bound
add
aas
retf
xor
inc
lock
out
lock
pop
bnd
fist
enter
adc
not
imul
mov
or
mov
mov
mov
fwait
mov
fidiv
arpl
jecxz
retf
les
push
push
push
xlat
mov
push
jno
push
aas
shl
jmp
add
xchg
je
push
(bad)
out
sbb
xchg
fidivr
cmps
dec
jle
clc
push
out
dec
es
xor
pop
fistp
push
sub
mov
and
mov
or
jns
cli
adc
nop
clc
cld
xor
movs
aam
sar
pop
(bad)
daa
mov
rol
dec
pop
or
pop
or
dec
add
movs
jmp
ss
sbb
int3
popa
and
mov
dec
and
or
(bad)
sub
rcr
push
xchg
out
repnz
adc
push
pop
or
fld
cs
xor
sti
push
xchg
mov
add
push
inc
xor
xchg
jmp
ret
jnp
lods
cmc
fidiv
mov
sub
jg
mov
xchg
fisubr
les
cmp
jo
int3
retf
je
xchg
fs
add
xchg
pop
pop
lods
mov
cmp
sub
inc
out
or
jle
inc
sbb
pop
jle
mov
jns
mov
jmp
bound
pop
fidiv
mov
adc
add
fbld
ja
mov
jb
popf
jmp
popf
ret
or
pop
mov
(bad)
fwait
inc
cmp
mov
es
jmp
sub
stos
dec
adc
mov
hlt
pop
ds
jle
cmp
fcomp
ja
jns
xor
fldenv
xchg
jne
cwde
push
les
push
es
push
gs
push
lahf
xlat
and
mov
jmp
mov
sbb
int
dec
push
repz
xor
enter
loop
aas
add
fcomp
pop
sub
xchg
pop
pop
mov
icebp
sub
mul
lods
xchg
push
js
and
jl
mov
push
ss
loopne
inc
push
cmp
sbb
sub
movs
and
in
cmps
arpl
or
out
int
addr16
add
(bad)
push
pop
cmp
mov
sub
sub
dec
out
aaa
xchg
mov
push
rol
(bad)
cmp
sub
push
inc
mov
push
inc
cli
test
stos
inc
mov
cli
jo
xchg
stc
push
mov
imul
pop
out
mov
push
mov
int3
mov
mov
mov
arpl
aam
in
add
xor
enter
lea
outs
call
adc
pop
cdq
mov
aaa
lock
mov
data16
aam
call
add
cmp
retf
pop
repz
arpl
daa
pop
ja
ret
jecxz
mov
push
les
cld
dec
inc
outs
cmp
aas
cmc
fdivr
popa
outs
xchg
cmps
sub
les
add
fnstcw
push
test
jae
and
mov
shl
sub
xchg
enter
xchg
jp
jne
inc
and
inc
sbb
stc
cmps
out
xor
push
inc
jecxz
xchg
pshufw
and
jo
and
mov
sbb
sub
dec
xchg
out
lahf
shr
dec
dec
cmp
push
aad
sahf
add
xor
in
xor
inc
adc
or
cmp
pop
add
mov
or
aad
fnsave
(bad)
mov
inc
adc
js
cmps
adc
sbb
inc
inc
aad
sti
xchg
jae
sub
iret
repnz
repz
out
psubq
(bad)
stc
xchg
iret
mov
retf
pop
fld
xchg
sub
jne
out
sbb
test
sub
lds
dec
lahf
movs
mov
jb
sbb
ret
fstp
fisubr
inc
mov
jg
cmp
(bad)
xchg
in
or
dec
(bad)
push
cmps
movs
xlat
sbb
cmps
mov
mov
mov
loopne
cmp
enter
dec
pop
push
push
mov
ror
in
imul
lock
xchg
mov
mov
hlt
test
cmp
xor
icebp
and
sub
mov
imul
shl
pop
into
pop
daa
iret
inc
mov
cwde
cmp
xor
fld
push
xchg
fild
sub
inc
stos
std
ret
aas
stos
in
ins
(bad)
jg
leave
pop
or
mov
call
popa
fld
xor
popf
and
loope
sbb
imul
test
cmp
fwait
cmp
jo
or
aam
pop
clc
cmps
outs
(bad)
cmp
lods
mov
jmp
(bad)
sub
(bad)
call
cdq
push
pop
push
mov
ja
sub
mov
jnp
jle
and
mov
loope
mov
seto
xchg
push
test
xor
mov
mov
dec
sub
movs
jle
popa
xchg
add
mov
sar
nop
aas
ror
and
inc
fwait
in
lods
iret
outs
call
in
and
nop
mov
add
daa
dec
xchg
mov
adc
jnp
jg
les
addr16
test
out
adc
inc
into
cmp
ficom
sahf
mov
ret
test
cli
js
gs
sub
jbe
movs
push
dec
fsub
jl
and
pop
lock
pop
or
dec
adc
mov
sbb
cmp
xor
mov
dec
stos
cli
sbb
call
xor
sbb
adc
xchg
dec
pop
dec
ds
les
add
fidiv
mov
sub
xchg
dec
cmc
aam
xor
shl
jp
arpl
adc
call
push
jae
inc
scas
ret
popa
shr
pop
xor
sar
sub
popa
ret
pop
imul
stos
pop
adc
xchg
enter
sub
test
push
lods
(bad)
cmp
push
jmp
pop
pop
jo
xchg
inc
pop
bound
(bad)
shl
pushf
cmc
cmp
push
bound
retf
fild
iretw
(bad)
in
ins
xchg
repnz
dec
mov
aas
cmp
mov
(bad)
pop
loop
jmp
mov
mov
enter
stc
imul
add
pop
add
push
(bad)
xchg
out
jo
xchg
(bad)
jle
cmps
pop
jecxz
enter
push
mov
gs
push
sub
adc
sar
jns
xchg
test
and
aas
sbb
test
xchg
mov
iret
pushf
mov
pop
xlat
mov
test
push
adc
into
aad
das
mov
xchg
cmp
js
in
jb
ja
not
fld
loop
call
add
pop
sbb
push
rol
xchg
loop
push
xor
push
jns
loopne
pusha
xchg
(bad)
arpl
xchg
mov
es
movs
mov
movs
cmps
ins
push
jl
mov
iret
rcr
loope
(bad)
lock
scas
mov
mov
push
test
mov
cs
hlt
jne
sub
and
cdq
aam
shr
dec
or
into
sahf
cmp
stos
stos
sub
pop
je
int3
mov
sub
pop
out
cmps
repnz
aam
inc
dec
scas
push
push
ss
sub
inc
aas
shl
mov
pop
out
adc
inc
or
sar
outs
repz
stc
sbb
iret
xchg
add
dec
aam
add
push
nop
xchg
stc
xor
addr16
shl
in
cmps
jmp
and
sbb
pop
jno
aad
int
icebp
lods
push
pushf
dec
dec
and
repz
out
jg
not
in
xchg
cmp
call
pop
imul
cmps
and
jnp
sbb
out
mov
nop
stos
or
ss
(bad)
dec
add
in
adc
call
and
rcl
mov
lock
imul
movs
push
in
xchg
test
dec
fst
sub
popa
int3
nop
sub
dec
int
mov
pop
sbb
dec
out
loop
retf
and
jg
out
or
movlps
mov
dec
jno
pop
push
imul
xchg
jbe
retf
fs
shl
(bad)
fisub
mov
mov
and
adc
out
jg
sub
mov
add
cli
in
push
inc
push
adc
gs
xchg
lahf
ss
movs
iret
inc
ja
mov
pop
pop
inc
jg
sub
dec
mov
int
pop
xor
mov
sti
pop
dec
dec
stos
ror
or
je
sub
mov
xchg
sti
std
mov
mov
mov
xor
sbb
in
xor
adc
std
fsub
imul
mov
call
jno
adc
mov
pushf
pop
dec
lahf
and
cmps
jae
xchg
lds
and
mov
test
push
cs
pop
test
out
jne
mov
ss
xchg
popa
push
push
jle
aas
ror
fisttp
movs
sub
mov
es
adc
or
add
sub
mov
push
push
mov
out
adc
sub
loop
cmp
pop
iret
add
sub
rcl
xchg
and
cmp
mov
push
sbb
icebp
outs
pusha
loop
test
push
jmp
rol
add
je
fld
ja
loope
call
and
adc
inc
dec
xor
or
mov
aad
pop
pop
and
ins
cmp
movs
dec
arpl
cmp
push
or
push
out
(bad)
mov
mov
ret
test
mov
pop
jne
fs
popa
or
mov
jo
jo
ss
add
jecxz
retf
pop
ror
scas
sub
inc
in
xlat
shl
mov
lock
jno
xchg
movs
dec
movs
mov
cdq
adc
dec
shl
shl
stos
mov
sbb
mov
cmc
stos
jmp
push
xchg
hlt
sbb
mov
jne
lds
inc
jmp
sbb
into
ins
retf
clc
xchg
test
ins
and
(bad)
lods
iret
test
rol
and
mov
push
adc
dec
jnp
std
dec
cmps
lods
sti
jbe
pop
inc
xchg
mov
outs
jae
jns
shl
mov
mov
pop
inc
mov
leave
test
stos
sub
jge
rol
cmc
ss
pop
push
fistp
fsubr
fmul
add
popf
inc
mov
sahf
inc
shl
xchg
and
(bad)
scas
adc
add
test
or
jl
pop
lea
rol
gs
cmp
sub
cs
sti
test
movs
stos
xor
xchg
rol
test
dec
pop
sbb
icebp
rcl
pop
test
int
or
inc
cli
jle
ret
jle
mov
mov
inc
ud0
pop
pop
push
loop
mov
and
mov
mov
cmp
add
sub
in
outs
or
stos
pop
fs
dec
call
inc
cdq
dec
fild
or
out
test
cs
data16
mov
inc
inc
jnp
push
shl
les
sbb
in
cli
fcmovnb
cli
pop
cmp
xchg
sub
dec
call
dec
test
imul
pop
mov
lahf
add
xor
movs
dec
xchg
lahf
sub
out
xchg
(bad)
mov
xor
add
cs
imul
icebp
cld
fsubr
arpl
mov
repnz
adc
mul
push
fsub
les
xchg
aad
addr16
sub
sbb
sub
jle
movs
cmp
repz
and
fisubr
add
lahf
push
in
pusha
jmp
out
loope
fld
jge
iret
push
mov
xchg
mov
pushf
enter
arpl
xchg
cmp
push
add
inc
cmps
add
xchg
push
jle
test
stos
xor
iret
add
es
mov
fadd
bound
jne
push
mov
cdq
movs
or
dec
in
sbb
outs
jg
xchg
pop
repnz
dec
pop
pop
sub
outs
out
dec
aam
es
xor
jnp
nop
sar
xchg
cmp
jecxz
xchg
push
(bad)
sub
pop
mov
sbb
hlt
or
adc
xchg
int3
mov
rol
cmp
test
xchg
test
pop
fcom
ret
sub
adc
hlt
pop
jbe
adc
fld
mov
xchg
sbb
imul
sbb
call
les
inc
fucom
ret
test
clc
and
stos
cmp
sub
(bad)
fcom
sbb
pop
mov
sub
ja
scas
jno
and
push
fwait
and
jle
in
retf
jp
cmp
fninit
push
das
(bad)
retf
add
cmp
sahf
stos
push
arpl
adc
inc
aaa
mov
bound
cli
inc
ret
cwde
movs
mov
mov
mov
xor
movs
cwde
dec
and
adc
xchg
adc
add
(bad)
pop
mov
mov
shl
xchg
inc
push
cmp
dec
mov
cmp
dec
add
dec
adc
cmp
outs
xchg
test
sub
das
popa
mov
and
fucomip
mov
mov
out
nop
cwde
pop
lods
fild
adc
and
stos
data16
and
cmp
popf
ret
mov
mov
push
inc
cmp
stos
jle
push
cmp
mov
and
lock
fsubp
out
xchg
scas
pop
cld
xchg
jg
push
and
bound
out
shr
or
push
or
call
xchg
cmp
push
aaa
not
xor
int
cmp
mov
outs
mov
and
shl
movs
mov
cld
cmps
fldenv
gs
pop
cwde
add
jge
cli
and
push
out
xchg
mov
movs
ins
lods
into
popf
icebp
shl
mov
sub
(bad)
xor
je
mov
pop
gs
int3
push
or
pop
clc
ins
and
pop
jmp
or
ret
xchg
jecxz
and
aad
sub
ret
push
call
mov
mov
sti
cli
pop
sbb
xchg
arpl
ja
mov
stos
sub
mov
adc
dec
push
repnz
mov
inc
pop
xchg
je
xchg
sbb
cmc
adc
mov
bound
es
scas
fdivrp
aas
cmps
sbb
je
xor
add
dec
cdq
stos
xchg
cmp
pop
out
shr
das
imul
retf
jp
push
mov
fidiv
addr16
icebp
stos
xchg
dec
mov
cs
fwait
jns
mov
sysret
xchg
mov
sub
inc
fstp
jecxz
sahf
shr
pop
popf
mov
jbe
lods
jmp
xor
shl
fsubr
aad
jp
ficomp
xor
aas
test
xchg
pop
or
xchg
jmp
(bad)
hlt
mov
jo
(bad)
xor
cmp
adc
outs
mov
cmp
fs
cmovge
mov
cmps
xor
push
or
and
mov
cs
jno
pop
and
pushf
push
xor
lods
jp
leave
sbb
gs
inc
cmp
mov
enter
mov
fst
adc
sbb
aas
fisub
push
sub
jo
imul
fldenv
mov
icebp
icebp
in
fs
das
jp
mov
mov
mov
pop
aam
in
imul
dec
enter
mov
pop
pushf
loop
popf
sbb
pop
fild
cmps
sbb
lods
cmp
hlt
out
dec
mov
mov
mov
cmp
and
in
cmp
sub
adc
rcl
cs
out
jle
adc
jmp
dec
ja
push
dec
(bad)
jns
and
fwait
sti
adc
pop
test
add
jb
inc
fwait
popa
cli
aaa
mov
mov
inc
pop
bound
cdq
add
fwait
repnz
pop
inc
jae
or
xchg
retf
xor
cmc
inc
leave
jg
mov
mov
out
adc
jg
ins
xchg
push
push
movs
js
push
imul
test
fsubrp
and
mov
in
xor
scas
adc
aaa
pop
push
loopne
cld
inc
mov
shl
sar
jns
imul
mov
jecxz
jb
test
mov
pop
aam
and
imul
popa
dec
fisubr
jmp
in
pop
pop
jne
ret
idiv
(bad)
(bad)
xor
pop
cld
jae
jmp
and
mov
xor
scas
pop
out
ret
dec
cld
or
add
movs
clc
call
xor
enter
stc
mov
and
popf
cmp
retf
add
cld
adc
cmc
fidivr
or
(bad)
in
jle
loop
popa
add
xor
jle
cmps
mov
dec
outs
int
(bad)
jne
dec
sbb
int3
outs
sbb
or
mov
lea
mov
xor
add
cmp
mov
cmp
adc
jl
or
xor
mov
or
repz
aad
adc
sar
sbb
jns
sti
pushf
mov
cmps
cmp
mov
int3
pushf
rcr
jb
xchg
mov
fdiv
xchg
xchg
jo
not
int3
(bad)
jns
pop
cmp
jle
mov
adc
adc
mov
mov
pop
mov
lods
push
and
xchg
hlt
je
cmp
mov
test
rcl
fdivr
es
nop
adc
and
aas
mov
adc
mov
jnp
mov
mov
stos
in
out
push
bt
jle
pop
dec
scas
mov
ror
jp
inc
or
fnsave
sub
imul
adc
dec
imul
daa
outs
es
(bad)
out
adc
pop
push
mov
fidiv
add
inc
cmp
xchg
mov
cmp
mov
mov
jmp
jne
xor
xchg
push
test
inc
(bad)
sbb
add
mov
dec
adc
(bad)
out
sahf
sbb
push
jmp
js
aad
jmp
leave
cmc
mov
in
xchg
ret
iret
mov
repnz
adc
movs
mov
and
leave
adc
push
mov
jne
ss
mov
dec
jno
cmc
inc
push
retf
popf
nop
shr
sbb
and
nop
aam
retf
rol
add
cmp
and
mov
addr16
sar
jno
stc
out
test
sub
call
data16
lods
outs
jne
jb
pop
scas
pop
inc
iret
sub
stos
dec
and
sub
fst
mov
loope
ret
ins
dec
cmp
inc
xlat
lods
(bad)
push
popa
cld
xor
add
out
iret
retf
xlat
dec
in
cs
imul
sbb
pop
fs
imul
dec
fidivr
dec
jg
pop
add
repz
sbb
rcr
(bad)
xchg
and
pop
shr
fs
jmp
shr
mov
test
sub
push
retf
fs
pop
mov
movs
jl
sub
add
rol
jns
xchg
out
paddq
xor
aad
push
mov
test
ins
mov
jl
and
fwait
bound
loope
jmp
xchg
pop
jb
cwde
sub
mov
inc
or
mov
add
mov
(bad)
sub
fs
mov
and
xchg
std
push
jbe
jecxz
jmp
repz
pop
xchg
mov
mov
mov
jae
loope
rol
aam
mov
jae
mov
cmp
xor
popa
imul
sbb
sbb
gs
fucomp
cld
cmp
jmp
pop
sub
std
sbb
int
jl
push
scas
jb
or
adc
xor
aaa
int3
adc
and
jmp
jae
xor
and
jo
out
aaa
test
push
mov
sub
test
in
jb
and
mul
xchg
mov
int3
test
mov
(bad)
jp
pop
inc
mov
xlat
lea
icebp
enter
inc
mov
mov
test
rcr
cmp
shr
(bad)
jl
push
inc
dec
lods
fdiv
push
emms
fiadd
adc
mov
sti
je
fwait
out
cdq
push
sbb
jecxz
cwde
xchg
sub
popf
addr16
jg
push
mov
loop
dec
inc
dec
push
jo
loopne
sbb
sub
pop
sub
mov
sbb
mov
loope
div
jne
lods
fcomp
mov
sbb
sub
mov
shl
push
pop
out
mov
jbe
imul
into
mov
ja
out
(bad)
loope
jge
pop
aad
ins
mov
cmp
sub
shl
pop
cmc
test
xlat
xor
cdq
and
pop
inc
pop
popa
(bad)
ss
lock
outs
push
test
cld
xor
in
rol
and
sbb
pop
ret
fisttp
push
in
inc
imul
pop
sbb
push
pop
xlat
cmps
(bad)
pop
sbb
push
outs
xlat
jo
int
xor
dec
mov
inc
fist
sub
jae
fcmovne
push
mov
sub
xor
dec
das
push
jle
cmps
lea
js
mov
sbb
push
retf
fidiv
je
cmp
ror
in
fidivr
jb
dec
pop
mov
jnp
fnstsw
add
outs
add
pop
pop
adc
or
call
loopne
dec
xor
fistp
jbe
inc
sbb
je
in
add
adc
add
inc
sbb
test
test
mov
pushf
das
xchg
or
pop
sub
pushf
retf
scas
inc
pop
push
dec
lahf
(bad)
cli
stos
mov
nop
cmps
or
daa
in
lds
mov
pushf
jno
sti
cmp
and
out
pop
js
push
mov
retf
pop
scas
pop
and
retf
cmps
push
shl
xchg
int
mov
aas
jae
outs
stc
repnz
inc
push
pop
fld
pop
jnp
movs
jne
ror
sbb
int
xchg
stos
dec
cmps
inc
and
xor
pop
sub
xchg
push
sbb
sti
fild
lock
lods
sub
in
cs
shl
or
inc
popw
cwde
fcomp
(bad)
cld
mov
jl
icebp
out
adc
scas
lds
and
frstor
shl
aad
or
ret
lock
es
jle
sti
and
dec
stos
jae
sbb
aas
and
xor
lods
div
iret
outs
cmp
outs
pop
jg
lods
adc
xor
adc
mov
sub
inc
jae
mov
and
sbb
daa
lahf
ja
sbb
mov
data16
adc
cmp
out
add
sbb
sbb
xor
out
js
xor
mov
cmc
(bad)
fcomp
clc
dec
imul
inc
shr
in
jo
rcl
rcl
je
and
adc
inc
sub
lock
adc
sbb
in
dec
rol
addr16
out
jno
push
je
aaa
sub
in
mov
dec
inc
imul
inc
loope
pop
adc
je
iret
outs
cmps
jmp
xor
sbb
mov
jnp
imul
out
push
sbb
adc
retf
adc
jns
push
mul
mov
pop
test
popa
fdiv
jns
in
mov
lods
imul
jmp
inc
adc
addr16
retf
pop
cmp
fs
dec
adc
xor
loop
(bad)
div
mov
push
xchg
mov
sub
nop
adc
ror
mov
push
mov
into
outs
sub
mov
mov
(bad)
push
sub
hlt
out
mov
mov
aam
stos
mov
fcomp
mov
pop
std
cmps
cmp
jmp
push
fild
arpl
cmp
mov
jp
add
(bad)
jnp
ja
and
fs
jle
fistp
xor
xchg
neg
mov
ins
pop
ja
add
hlt
icebp
xchg
scas
or
mov
mov
push
jmp
xor
inc
cdq
adc
jmp
sbb
mov
(bad)
(bad)
jno
mov
push
loope
or
or
fadd
(bad)
jb
cmp
push
dec
push
sbb
push
sahf
bnd
test
push
add
jbe
rcl
fdivr
in
rcr
daa
push
mov
(bad)
addr16
loopne
mov
mov
adc
icebp
lds
add
xchg
mov
sbb
mov
test
(bad)
xor
xchg
lahf
and
imul
adc
dec
sbb
retf
dec
aam
dec
pop
xchg
(bad)
adc
call
sub
mov
mov
pop
jmp
dec
add
ret
jmp
and
mov
int
cmp
int3
mov
(bad)
jnp
sahf
fcom
push
cmps
jns
and
inc
jmp
das
push
gs
add
adc
stc
push
add
and
retf
and
and
push
cmp
or
add
xchg
nop
movs
sar
popf
mov
mov
xlat
(bad)
and
sub
mov
dec
out
popf
mov
pop
sti
sti
dec
inc
xchg
sbb
adc
bound
bswap
mov
lahf
adc
cmp
int
push
mov
(bad)
xor
push
outs
adc
pop
adc
mov
ss
adc
(bad)
cmc
dec
out
mov
lahf
movs
mov
xor
ffreep
icebp
inc
pop
mov
movs
xchg
inc
repnz
popa
mov
clc
in
outs
push
imul
fwait
pusha
push
das
xchg
mov
jle
mov
xor
shr
loop
pop
icebp
in
push
loopne
sbb
cld
push
mov
mov
pop
mov
ss
cmp
aaa
and
ss
add
jmp
jmp
jecxz
inc
pusha
jmp
mov
inc
sub
push
ret
pop
aam
jae
movs
xor
ins
adc
xchg
xor
imul
(bad)
movs
(bad)
jecxz
mov
test
div
enter
test
repz
pop
imul
dec
lds
push
(bad)
(bad)
push
in
sahf
stos
jle
sbb
or
or
jecxz
pusha
lods
jne
fwait
jb
inc
ja
xchg
add
push
enter
(bad)
or
sti
adc
pop
jbe
mov
adc
jecxz
push
popa
sbb
mov
push
xor
in
gs
sti
cdq
mov
les
cmp
cmps
call
dec
jge
dec
in
pop
in
pop
dec
inc
test
arpl
dec
xchg
jge
xchg
ds
cmp
sbb
pop
cmp
mov
mov
sbb
repz
mov
(bad)
jb
popa
and
aad
loopne
or
stos
enter
cmp
push
shr
xchg
jbe
xchg
mov
mov
push
inc
mov
xchg
adc
sub
or
adc
int3
out
adc
add
mov
xor
push
jp
cmp
fadd
pop
icebp
jmp
lods
and
mov
cmp
ja
mov
imul
aaa
jb
pop
lods
loop
push
mov
xor
push
(bad)
jne
je
sub
shl
inc
sub
jmp
gs
lods
imul
or
iret
xor
mov
xor
shl
jb
mov
sbb
inc
bswap
bnd
jecxz
mov
mov
push
jl
mov
adc
mov
cmp
into
xchg
cmc
and
add
xor
into
test
out
popf
lods
or
pop
repnz
sbb
and
outs
repz
repz
ss
leave
jae
or
sahf
(bad)
std
push
cmp
jne
pop
ret
cmp
imul
push
sbb
cmp
jg
ins
fmul
add
fbld
pop
data16
jmp
stc
inc
movs
dec
xchg
(bad)
ins
dec
leave
fistp
fcomip
xchg
(bad)
ins
mov
jmp
sbb
pop
(bad)
xchg
je
xchg
sub
or
call
add
popa
inc
jo
cs
push
jmp
jns
fs
sub
or
mov
inc
popa
or
loope
adc
pop
shl
(bad)
outs
adc
mov
inc
cdq
(bad)
test
mov
retf
add
xchg
enter
es
push
adc
inc
popf
mov
dec
adc
sbb
xor
retf
aam
fadd
aam
test
jnp
adc
call
jbe
pushf
neg
push
shl
cmp
popa
jae
ror
pop
aaa
jp
call
cmp
jmp
aas
jno
(bad)
aas
stos
jbe
xor
mov
sbb
add
shl
jne
(bad)
push
dec
jge
push
inc
shl
dec
mov
mov
mov
rol
jp
pop
leave
(bad)
aaa
int
xchg
xlat
cmp
mov
or
or
and
aad
inc
sub
and
(bad)
pop
dec
mov
mov
into
cli
mov
sub
jl
sbb
je
jbe
aas
pop
mov
mov
jmp
cld
add
jno
loop
cmp
jnp
imul
mov
or
test
out
rol
lea
cmps
jae
lock
(bad)
movs
test
outs
add
or
cmp
mov
push
mov
mov
cdq
cmps
mov
cmp
adc
pop
in
jl
pop
daa
rol
fwait
mov
shl
adc
lods
bound
(bad)
(bad)
ror
cld
xor
das
mov
icebp
hlt
mov
(bad)
mov
fadd
pop
pop
ret
stos
aad
std
adc
sbb
push
je
mov
or
jne
lods
ret
les
and
push
mov
mov
cmp
xor
mov
cmp
mov
leave
aaa
push
pop
jb
jne
or
inc
adc
sbb
xchg
test
rol
daa
int
mov
hlt
lea
popf
imul
fnstenv
lock
add
fnstcw
scas
rcr
inc
jmp
add
sub
mov
and
mov
jle
jmp
fwait
xlat
push
xor
or
mov
xchg
and
jae
and
adc
imul
inc
mov
push
jmp
jg
ficomp
xchg
imul
jl
inc
repz
or
pop
add
scas
jge
mov
call
jmp
dec
xor
mov
stc
and
pop
loop
psrlq
lahf
in
mov
pop
(bad)
fidivr
cli
call
dec
gs
and
test
pop
mov
test
lock
pop
inc
xlat
adc
jmp
mov
fwait
push
cmps
ja
(bad)
fadd
mov
add
pusha
cdq
test
stos
inc
push
js
dec
push
pop
ret
fdivr
in
sub
ins
inc
mov
jp
dec
sbb
scas
fist
stc
jle
sub
sbb
test
pop
cs
(bad)
(bad)
sub
loopne
inc
cs
cmps
pop
lods
add
fmul
cmp
cmp
sub
mov
xor
and
pop
push
inc
inc
xlat
push
xor
jg
mov
adc
dec
leave
sti
dec
imul
dec
dec
(bad)
inc
add
not
bound
mov
cmp
arpl
inc
mov
push
sub
push
test
icebp
scas
sbb
aas
imul
adc
mov
push
(bad)
xchg
call
jecxz
leave
push
dec
xchg
movs
push
sbb
mov
jmp
je
fucomp
movs
mov
in
pop
in
sbb
adc
xor
cmp
jae
(bad)
cmp
cwde
jge
loope
out
or
cmps
bound
rcr
cmp
cmp
push
or
xchg
xchg
rcr
retf
sbb
repz
xchg
mov
push
inc
jno
jmp
popa
fst
lahf
test
(bad)
push
pmaxsw
xor
dec
idiv
pushw
aam
sbb
call
aad
jmp
repz
fs
scas
mov
sar
mov
push
xchg
xchg
in
addr16
push
mov
gs
daa
and
or
mov
lods
push
cmp
mov
or
dec
scas
sub
loope
movs
sbb
out
std
and
and
jecxz
mov
in
out
shl
cld
mov
add
es
pop
add
fdiv
test
inc
mov
call
xchg
mov
push
lods
out
jecxz
sti
inc
xor
fwait
pop
test
mov
or
movs
(bad)
mov
pop
cmp
fidiv
pop
(bad)
hlt
movs
or
fs
push
dec
pop
mov
jg
mov
jp
cmp
in
push
outs
fwait
scas
mov
pop
cmp
inc
cli
out
mov
sbb
mov
aaa
pop
or
mov
ins
pushf
lahf
or
out
jo
(bad)
aam
stc
std
add
sbb
inc
stc
jg
and
lods
xor
pop
pop
mov
and
iret
rep
lock
cmp
adc
sub
retf
push
int3
sbb
lds
sub
inc
push
mov
push
xchg
test
ror
or
cmp
mov
fist
test
inc
mov
std
jb
mov
sub
xchg
pushf
pop
jge
mov
imul
cmp
loop
xchg
jge
cli
in
clc
push
push
cmp
push
mov
iret
jno
ds
cli
mov
dec
shr
stos
add
mov
out
jge
fadd
dec
jge
jns
popa
sahf
xchg
xlat
iret
(bad)
mov
data16
push
inc
outs
mov
and
(bad)
xor
scas
cdq
or
out
cmps
add
add
jmp
mov
in
stos
inc
int3
push
neg
mov
pop
sub
fnstcw
cmp
nop
cmp
outs
aad
dec
push
lock
or
aam
pop
cmp
das
leave
mov
scas
jns
aaa
push
fisttp
popa
jl
popf
mov
cmp
mov
hlt
iret
dec
daa
mov
inc
mov
movs
pop
and
adc
push
or
mov
sahf
cmp
add
cmp
xchg
mov
cs
test
bound
retf
in
mov
cmp
cmp
sbb
xchg
jns
mov
and
fsub
mov
xchg
jge
pop
mov
imul
push
call
cld
mov
out
xor
ret
ds
dec
cmp
daa
xor
pushf
mov
pop
push
das
mov
xor
cmp
jl
stc
call
iret
sub
inc
mov
xchg
pop
or
cli
loopne
jge
es
xor
not
mov
int
mov
pop
sbb
call
cs
sbb
scas
js
leave
adc
jecxz
ins
loopne
gs
idiv
jae
adc
jns
sub
je
sbb
xor
push
mov
sub
in
jbe
in
adc
mov
retf
ins
adc
xor
xchg
push
mov
add
sbb
xchg
sbb
sahf
(bad)
jecxz
repnz
cs
xor
xchg
inc
sub
adc
sub
dec
(bad)
iret
inc
dec
imul
push
(bad)
in
mov
in
mov
ins
das
add
push
retf
push
and
fwait
or
jg
inc
push
cdq
aam
punpckldq
rcr
cwde
sahf
or
pop
adc
xchg
cmp
inc
xor
pushf
rol
pop
xchg
jmp
and
popa
push
inc
dec
fdivrp
or
cmp
outs
push
cmp
pushf
retf
pop
popf
js
outs
pop
mov
mov
retf
cwde
push
mov
(bad)
into
sub
push
lahf
pop
sbb
jge
js
cwde
test
adc
inc
dec
std
hlt
test
mov
ss
push
xor
add
dec
xchg
mov
xor
xchg
adc
pop
mov
shr
popa
and
sti
mov
outs
mov
mov
cmp
sub
sti
stos
lahf
push
div
and
add
mov
jecxz
lock
mov
ss
fidivr
sbb
fnstcw
cs
(bad)
xchg
sub
xor
test
jl
push
jle
shr
je
or
popa
lea
inc
imul
cmps
jg
popf
xor
mov
xor
inc
gs
mov
jo
f2xm1
mov
outs
pop
pushf
ds
push
add
test
cmp
push
inc
ins
xor
lock
neg
dec
adc
inc
and
(bad)
jne
cli
fdecstp
lock
dec
movs
jge
arpl
test
jae
dec
pop
rcl
in
mov
dec
pop
les
mov
sub
or
xlat
mov
mov
mov
or
mov
mov
ja
xchg
icebp
out
push
aaa
fidivr
jge
aad
pop
xchg
cld
add
push
fnsave
jbe
enter
out
out
mov
xchg
or
push
in
cmps
jae
pop
cmova
dec
das
es
and
sub
and
data16
xor
xor
mov
rcr
stos
fld
cmc
lds
pushf
lahf
xor
pusha
cmp
mov
out
jo
cmps
inc
dec
add
cmps
popf
inc
mov
push
push
scas
add
daa
stos
adc
push
mov
pop
mov
scas
in
sbb
jb
cld
inc
cwde
cmp
xor
sub
mov
(bad)
mov
lahf
adc
jae
adc
push
push
xchg
movs
movs
fisttp
push
out
out
add
sub
pop
add
adc
pushf
mov
gs
xor
lahf
das
lea
and
lods
and
sar
imul
pop
mov
cmps
cmp
ss
mov
int
mov
cmp
xchg
js
xchg
aad
addr16
addr16
inc
xor
adc
fist
iret
mov
adc
pop
xchg
xchg
xchg
test
mov
inc
imul
ret
clc
sbb
push
cmps
push
fcomp
rcl
ror
nop
xchg
mov
hlt
loope
jge
retf
sub
les
sbb
pop
sub
lahf
imul
xchg
(bad)
jmp
addr16
inc
cmp
into
mov
retf
push
xchg
sbb
jbe
mov
fistp
(bad)
outs
test
pop
ret
inc
add
imul
lahf
aam
push
and
xchg
add
sub
movs
mov
call
les
hlt
jae
mov
into
test
cmc
aam
and
in
into
adc
push
repnz
cld
sahf
(bad)
push
or
retf
push
ds
stc
cmp
test
fcom
xor
sbb
les
or
popf
mov
and
push
loopne
cmp
sub
bound
or
fst
xchg
mov
jne
xlat
push
mov
aam
pusha
and
and
(bad)
cmc
inc
mov
mov
mov
aam
mov
cmp
outs
push
xchg
and
mov
jno
ss
scas
add
pop
aam
xlat
mov
mov
cmps
adc
sbb
sub
mov
pop
mov
test
mov
pop
popa
xor
and
dec
xchg
mov
jmp
bound
les
popf
(bad)
(bad)
dec
imul
(bad)
pop
lds
cli
pop
push
mov
dec
inc
outs
sbb
dec
(bad)
add
jb
jns
cwde
xor
pop
lock
fbstp
out
retf
test
or
mov
push
cld
xchg
das
adc
mov
sbb
addr16
dec
test
scas
enter
ret
push
or
push
das
ror
ror
push
popa
dec
rcl
test
ins
pop
push
enter
cmp
xor
xchg
repnz
push
sub
pop
aaa
push
fs
inc
jle
ds
lahf
into
aad
jo
sbb
fdiv
movs
sub
mov
pusha
mov
inc
data16
jmp
int3
mov
outs
je
shl
add
add
ficom
popf
shl
sahf
adc
cmp
out
cld
movs
push
(bad)
(bad)
jmp
call
std
add
nop
dec
push
mov
xor
repnz
aad
imul
adc
sbb
repnz
ret
xchg
adc
inc
ret
loope
loop
mov
sahf
hlt
xor
mov
dec
mov
popf
out
pop
jmp
xchg
mov
popa
pop
cmp
imul
xor
ja
cld
rcr
xor
popw
rol
inc
jmp
xchg
mov
(bad)
int3
leave
and
out
jno
and
pop
in
daa
and
aam
pop
pop
mov
or
cmp
and
int3
icebp
mov
fimul
and
(bad)
push
outs
int
push
loopne
pop
xor
out
popa
xchg
pop
or
cmp
into
jo
and
aam
(bad)
add
jns
pop
push
fidivr
xlat
loopne
loop
sahf
sub
xchg
cmp
in
ds
add
pushf
cmp
and
cmp
loop
out
call
mov
lods
shl
sahf
sahf
fwait
push
and
cmps
sbb
jns
pusha
les
out
mov
aam
mov
mov
stos
or
jae
or
push
or
mov
call
push
mov
dec
mov
jmp
fs
fwait
not
xchg
call
leave
sub
cmps
rcl
mov
into
mov
mov
adc
pop
dec
or
or
inc
or
push
dec
imul
rcl
and
das
imul
pop
mov
clc
mov
frstor
mov
stc
cmp
aaa
cmp
sbb
aaa
inc
es
sbb
(bad)
jecxz
mov
cmp
mov
inc
(bad)
jmp
mov
push
push
push
mov
cmp
sbb
adc
sub
mov
mov
sbb
pop
jne
movs
or
test
ins
icebp
out
sbb
adc
sub
imul
out
pop
cmp
mov
(bad)
rcl
mov
sub
lods
(bad)
outs
inc
cmp
mov
push
movs
jb
ror
fdivr
(bad)
cmp
pop
jbe
nop
pop
mov
xchg
mov
clc
lods
mov
pop
movs
(bad)
jnp
xor
call
mov
ja
mov
cmps
adc
pop
call
bound
or
mov
dec
add
add
in
ds
pushf
cmp
adc
test
push
and
cmp
ret
or
push
cmps
cmp
dec
inc
mov
cmps
sar
mov
fist
xchg
cmp
adc
jbe
jmp
sbb
cmp
aas
cwde
sar
in
mov
adc
xchg
or
push
hlt
loope
dec
or
fsub
xchg
aam
jmp
cwde
push
xor
mov
out
rol
ret
inc
hlt
(bad)
gs
xor
mov
stos
pusha
mov
ja
scas
mov
ja
ret
push
idiv
jmp
popa
jmp
pop
test
ror
mov
ret
pushf
push
pushf
sbb
add
out
mov
inc
scas
stos
push
out
test
xchg
or
(bad)
scas
inc
dec
push
aam
mov
pop
out
fwait
aad
ucomiss
sbb
in
cmp
jmp
enter
call
fwait
int
in
retf
and
out
std
(bad)
cmps
mov
lahf
outs
in
push
ins
dec
adc
dec
cli
inc
or
sbb
push
popf
xor
fs
add
inc
mov
cmp
mov
bound
jns
scas
push
mov
ss
jmp
fdivr
in
and
inc
retf
inc
xchg
mov
and
sub
adc
pop
and
retf
mov
aas
jle
in
clc
xlat
dec
call
ja
dec
add
xchg
push
push
pop
jae
sbb
jp
stos
neg
xchg
pop
stos
int
scas
jae
leave
inc
inc
lods
jecxz
mov
mov
push
fmul
popf
sbb
push
mov
pop
jecxz
sub
mov
pop
fsubr
movs
out
push
lods
fs
add
shr
ja
or
popf
adc
push
pop
cld
push
adc
push
ins
jne
add
shl
add
inc
dec
mov
sub
repz
test
movs
pop
scas
and
jmp
fadd
xchg
clc
mov
sub
call
sub
(bad)
xchg
movd
(bad)
movs
inc
push
dec
nop
push
mov
inc
or
lods
in
sbb
cdq
mov
dec
sbb
movs
push
mov
fsub
jno
and
and
or
mov
(bad)
in
jns
pop
(bad)
cmp
enter
cmp
sbb
or
dec
or
(bad)
sub
dec
test
(bad)
scas
inc
not
mov
in
sub
cwde
cmp
jb
adc
mov
fnstenv
fst
fld
cmp
inc
sbb
jae
fs
cmp
sub
test
arpl
mov
adc
icebp
out
adc
aaa
pop
pop
lock
adc
aas
dec
push
sub
mov
xlat
push
pop
or
jg
inc
mov
cmc
inc
push
sbb
mov
ss
jmp
push
xchg
xchg
jb
jno
inc
jg
jge
jbe
push
(bad)
mov
jae
mov
mov
pop
mov
adc
adc
(bad)
retf
mov
aad
xchg
mov
push
xor
xchg
(bad)
push
cmps
xor
cmps
sub
mov
sub
mov
bound
mov
xchg
dec
loop
outs
jb
add
cmp
(bad)
test
out
mov
ins
test
fucomp
popf
sub
cmc
int3
sub
popa
(bad)
sub
aam
mov
jnp
mov
pop
leave
pop
not
xor
jns
lahf
mov
lds
retf
jge
inc
dec
test
and
retf
mov
enter
cld
sub
idiv
mov
ss
cmp
adc
call
fcomp
mov
push
inc
mov
cmps
fild
(bad)
sti
sbb
repz
sub
sub
mov
pop
xchg
jmp
call
inc
iret
jne
lea
into
test
sahf
jmp
cwde
(bad)
cmp
adc
stc
xchg
cdq
stos
sar
sbb
and
stos
(bad)
popf
in
in
dec
push
out
adc
les
cwde
or
adc
cld
push
retf
lahf
fsub
out
or
sbb
je
popa
mov
adc
and
bound
and
movs
or
mov
cmp
or
imul
push
xchg
inc
test
jg
cwde
aas
push
leave
and
jbe
cli
push
movs
imul
adc
xor
mov
aad
mov
xor
clc
mov
mov
jp
fidivr
push
iret
and
pop
shl
ins
je
lock
lds
xor
stc
adc
hlt
mov
sahf
scas
push
in
ror
(bad)
pop
movs
scas
xchg
mov
add
(bad)
jle
in
div
push
bound
jge
nop
in
jmp
cmps
or
sub
adc
stos
mov
arpl
inc
aas
into
xor
out
retf
test
scas
outs
rol
test
xchg
ins
mov
jle
jle
xchg
or
inc
gs
fisttp
jne
xor
(bad)
push
je
push
xor
dec
das
je
xor
sbb
sub
out
jmp
cmp
lods
push
mov
and
jbe
jmp
stc
mov
xor
imul
mov
inc
or
mov
cmp
iret
sub
scas
xchg
push
xchg
sbb
(bad)
cmc
adc
dec
bound
xchg
jmp
cld
cmps
ret
(bad)
push
movs
inc
sbb
clc
xor
popf
scas
dec
pusha
in
scas
outs
jge
test
in
(bad)
pop
pop
hlt
push
dec
scas
loop
cmp
test
out
mov
test
sbb
push
push
cmp
cli
or
add
jnp
inc
dec
rcl
push
icebp
idiv
mov
test
mov
and
shr
push
js
pop
adc
cmp
mov
pop
in
ins
xor
xor
and
mov
dec
imul
jle
and
mov
rol
inc
cmp
cmp
and
pushf
sbb
cmp
dec
loopne
inc
mov
lds
div
xchg
mov
sti
icebp
or
or
xor
mov
leave
xor
pop
cmp
add
lahf
push
add
jg
adc
leave
dec
ror
std
and
mov
or
or
mov
aaa
shl
imul
outs
leave
jno
scas
(bad)
loop
xor
(bad)
pusha
mov
fisubr
inc
dec
aad
test
xor
pop
dec
ja
mov
jne
xchg
dec
call
ins
cwde
mov
cmc
xchg
pop
push
arpl
push
lock
repz
outs
jbe
mov
inc
adc
cmc
mov
jl
lahf
mov
push
sbb
lods
test
sbb
mov
pop
xchg
xlat
cdq
cdq
mov
stos
dec
and
and
test
inc
jl
clc
push
inc
mov
lods
dec
test
xchg
pop
mul
push
push
mov
xchg
ds
jne
(bad)
(bad)
pop
push
mov
aad
xchg
push
cli
push
test
mov
and
mov
outs
pop
stc
xor
sbb
dec
mov
push
pusha
ins
sub
fldcw
aaa
inc
pushf
shl
popf
xchg
fmul
lea
dec
and
dec
call
jne
adc
test
sti
enter
popa
mov
(bad)
fsubr
adc
rcl
out
dec
inc
outs
cmp
add
xchg
out
dec
pop
sti
sbb
sub
test
ficom
ja
(bad)
in
call
xlat
mov
fsub
(bad)
sbb
jle
fwait
fwait
cld
ja
lahf
dec
(bad)
(bad)
mov
pop
mov
call
movs
jl
out
enter
mov
adc
ss
enter
sbb
cmp
popa
outs
lahf
in
ins
mov
add
jnp
inc
retfw
pop
adc
inc
sbb
(bad)
mov
mov
rcl
fcmovnu
(bad)
imul
adc
das
mov
push
mov
mov
jb
mov
jp
cld
enter
mov
in
add
cli
push
mov
imul
inc
inc
pop
push
adc
jno
movs
cmps
movs
hlt
enter
inc
mov
xchg
sub
daa
js
mov
or
cdq
push
mov
and
cwde
mov
in
or
sbb
retf
out
test
dec
fwait
pop
bound
sub
or
jp
or
pusha
mov
add
pop
cmps
push
retf
lods
lods
cwde
adc
lahf
mov
rcr
fadd
(bad)
push
hlt
mov
js
pmulhuw
ror
dec
lods
sub
push
pop
or
mov
cmp
push
push
inc
or
cld
jl
out
jb
in
dec
mov
loopne
or
call
je
sbb
les
adc
and
mov
sar
push
dec
outs
adc
movs
imul
mov
and
xor
or
shl
push
dec
stos
dec
adc
add
test
mov
and
out
out
add
repz
or
fbstp
adc
ja
rol
sub
movs
mov
gs
or
iret
call
(bad)
mov
cmps
rcr
mov
mov
sub
(bad)
call
xchg
xor
div
mov
ds
mov
fmulp
gs
addr16
sub
cmc
and
ret
mov
bound
in
hlt
sbb
xchg
int
mov
cwde
xchg
sub
fmul
daa
imul
(bad)
jae
leave
mov
into
mov
test
fisubr
loope
mov
mov
mov
inc
lahf
mov
xchg
dec
sbb
pop
(bad)
mov
sbb
jb
mov
xor
scas
ja
cli
or
ret
stos
add
jns
nop
sub
push
mov
sub
push
call
sar
std
cmp
(bad)
pop
aad
xchg
fwait
lea
lods
sahf
dec
jmp
jne
inc
and
mov
mov
int3
sbb
scas
sbb
les
loop
or
dec
xchg
(bad)
xchg
aad
hlt
pop
xchg
inc
fld
mov
dec
mov
sub
shl
add
in
(bad)
addr16
pop
inc
adc
sub
loop
add
sahf
cmp
call
ss
cmp
sbb
xchg
mov
repz
aas
je
jge
loopne
or
mov
sti
or
loop
add
lahf
inc
fdiv
(bad)
hlt
xchg
and
gs
pushf
sbb
sbb
sub
and
nop
xor
aaa
sub
int
mov
xor
movs
or
out
or
aaa
stc
mov
pop
dec
push
xor
daa
inc
ret
mov
fild
or
xor
sti
imul
inc
in
jnp
mov
pop
daa
jbe
mov
movs
int3
pop
adc
sub
cli
sahf
pop
pop
leave
adc
xchg
xor
loopne
inc
cmp
outs
loope
test
jb
dec
dec
pushf
movs
mov
rcl
fcomp
shl
inc
ins
daa
into
sub
(bad)
cld
mov
mov
push
push
arpl
mov
add
fidiv
in
mov
dec
sub
lock
jp
int
leave
push
ds
mov
mov
mov
ss
daa
xchg
adc
push
scas
mov
xchg
cld
cmp
aad
sahf
cmc
call
pop
xchg
xor
pop
retf
jmp
fcom
xchg
(bad)
gs
test
push
mov
xor
pushf
in
(bad)
fisub
test
shl
and
xchg
ss
scas
addr16
retf
mov
jno
or
imul
sub
fcom
shl
dec
sub
cmp
inc
xor
mov
or
cmp
out
leave
(bad)
js
sub
imul
dec
aad
sub
daa
xchg
js
in
int
je
mov
stos
dec
jp
mov
aas
mov
mov
jb
sbb
sbb
sbb
lock
int
into
aaa
das
pop
cmp
push
cdq
add
adc
inc
lods
xchg
xchg
or
dec
mov
xor
jge
xor
dec
pop
in
jecxz
in
lock
jae
imul
add
ins
daa
pop
mov
mov
inc
gs
out
sub
mov
fisubr
xor
aad
inc
out
mov
xchg
push
push
outs
mov
int
xor
in
pop
or
mov
sbb
(bad)
neg
lods
dec
out
or
ins
pop
push
push
lods
add
in
push
out
(bad)
dec
dec
push
adc
loop
inc
ds
aad
add
jns
sub
call
nop
mov
pushf
pop
imul
es
cmp
cmp
icebp
pusha
rol
movs
push
popf
mov
jl
std
mov
dec
add
jmp
adc
fisttp
(bad)
push
jne
push
movs
ret
cmp
mov
fisub
add
gs
ficomp
mov
ret
jge
mov
push
adc
dec
ds
mov
cmp
fcmovnbe
nop
or
test
sti
inc
xor
imul
dec
inc
mov
repz
repnz
je
push
jbe
ins
call
jno
scas
retf
cs
lea
enter
loope
add
mov
ja
sahf
and
shl
dec
out
add
mov
test
add
pop
sub
mov
rol
push
iret
dec
das
(bad)
les
(bad)
rcl
shl
cmp
in
jecxz
pop
imul
retf
aas
jmp
lods
ss
dec
mov
jmp
mov
aam
test
adc
xor
xor
orps
scas
jb
cmp
inc
fnstcw
cdq
sbb
sar
dec
mov
ins
iret
imul
std
(bad)
repnz
sub
int
fiadd
(bad)
sti
test
stos
inc
xor
out
aam
or
mov
cmp
sbb
adc
xor
(bad)
imul
mov
pushf
das
mov
add
add
cmc
xor
sti
test
movs
or
push
adc
inc
pop
rcl
xchg
push
dec
jmp
fsubr
pop
loope
outs
or
push
dec
cwde
dec
rcl
xchg
sub
dec
mov
fidivr
shl
daa
ja
in
sub
hlt
mov
(bad)
iret
xchg
shr
ss
out
scas
and
or
(bad)
out
int
inc
arpl
fidiv
jge
jmp
sbb
std
jbe
mov
sub
loop
inc
and
and
push
xor
pop
push
mov
mov
add
push
sbb
cdq
xchg
shr
test
imul
mov
mov
and
test
xor
loop
pop
pop
mov
not
mov
push
mov
in
movs
clc
jns
jno
iret
mov
xchg
pop
mov
sub
or
idiv
xor
pusha
push
ffree
pop
or
ds
sbb
pop
(bad)
fucomp
int
loopne
sbb
sub
repnz
add
jns
fwait
aam
ins
mov
out
fiadd
inc
daa
call
enter
fcmovnb
stos
xchg
xor
xchg
mov
(bad)
cmp
mov
movs
movs
arpl
add
mov
jmp
jnp
pop
frstor
inc
cmp
pop
out
inc
push
xor
sbb
push
iret
push
sar
xchg
jb
stc
sub
out
retf
push
arpl
xor
sbb
fldcw
aad
jno
(bad)
ja
mov
aam
jmp
sub
dec
gs
cmp
add
dec
js
jecxz
cmp
je
add
movs
adc
fdiv
or
jo
cmps
popf
out
addr16
or
push
xchg
push
(bad)
sti
sbb
retf
test
vmovq
jge
test
jo
fidiv
jge
pop
fst
mov
cmps
cmp
out
pop
dec
enter
imul
mov
cmp
es
sub
out
sar
lahf
jnp
push
sti
pop
xchg
and
adc
xchg
push
sub
add
retf
fdiv
test
adc
lods
or
les
xchg
jg
cdq
retf
sub
or
es
sar
jno
push
inc
jmp
push
jne
fs
pop
pop
stos
mov
xor
int3
retf
in
and
add
pusha
or
or
(bad)
or
xchg
dec
in
xor
aad
rcl
sub
or
lea
sbb
xchg
adc
mov
add
shl
jmp
es
mov
pusha
cmp
cli
test
pop
push
push
(bad)
mov
mov
mov
or
(bad)
pop
adc
push
bound
ja
sbb
adc
adc
xchg
inc
das
inc
hlt
jmp
ds
mov
pusha
aam
adc
push
dec
pop
xchg
dec
jns
mov
mov
inc
add
stc
xchg
loopne
leave
cmp
in
cld
jne
push
sub
aaa
out
fidivr
in
xchg
mov
fadd
icebp
sahf
test
outs
or
xchg
mov
aad
fild
sub
fistp
shl
je
ins
rcl
push
adc
mov
adc
push
icebp
inc
shr
jae
test
mov
sti
or
cmp
push
mov
rcl
pushf
popf
jae
or
test
xor
addr16
or
call
sti
mov
rcr
jmp
hlt
or
mov
mov
js
pop
pusha
pop
and
ss
cwde
ds
ficom
enter
fcom
adc
push
pop
mov
popa
jg
jg
xor
fcmovbe
push
sub
stos
sub
push
xlat
jp
addr16
cmps
xchg
pop
jp
add
es
scas
xor
popf
ret
inc
xchg
fucom
push
mov
jns
xchg
ins
mov
push
push
push
dec
mov
in
bound
inc
in
mov
xchg
adc
mov
sbb
lahf
sbb
call
(bad)
fstp
inc
jmp
int
mov
retf
sub
int
mov
dec
test
loopne
ss
stc
imul
outs
ds
cwde
in
pop
(bad)
cld
xchg
test
xchg
into
ja
hlt
xchg
mov
mov
jns
out
in
fisttp
mov
and
or
pop
xlat
mov
iret
push
mov
repnz
in
dec
outs
lds
sti
hlt
sbb
xchg
cmp
inc
fdivr
push
mov
lahf
pusha
test
mov
mov
scas
dec
fmul
add
imul
mov
aaa
fdivr
dec
inc
bound
outs
sub
pop
les
push
sub
inc
gs
xchg
je
fist
fcomip
sub
in
or
(bad)
cmp
mov
arpl
loop
in
fistp
out
call
push
clc
test
push
fild
push
sbb
ror
icebp
fild
sub
adc
data16
push
cmp
dec
pop
inc
jo
pop
cld
sbb
aam
popf
int3
cwde
repz
dec
ins
ss
or
popf
xor
cmp
out
or
push
jp
mov
jl
scas
xor
xchg
mov
pop
(bad)
cmp
inc
mov
lods
into
mov
jg
aas
(bad)
and
push
pop
js
pop
cmp
xor
int
call
sbb
pop
xchg
fwait
mov
cmp
cmp
mov
sub
mov
inc
mov
pop
loopne
dec
mov
loopne
lock
sbb
mov
out
dec
cmp
mov
mov
imul
xchg
pop
imul
or
fidiv
in
dec
into
retf
xchg
and
adc
push
arpl
ret
les
mov
dec
addr16
movs
inc
das
test
xor
mov
xchg
xchg
adc
mov
or
jmp
xchg
xchg
popf
in
call
add
sbb
dec
dec
test
adc
das
loop
adc
mov
jge
out
inc
mov
mov
jns
loopne
mov
je
out
(bad)
mov
pushf
mov
btc
pop
add
lock
test
mov
and
icebp
xchg
leave
mov
adc
mov
mov
mov
call
push
fist
cmps
sub
icebp
nop
test
mov
xchg
jno
push
or
lods
sbb
sti
int
jmp
push
jne
cmps
popf
xor
cmps
mov
add
out
cmp
dec
lock
or
xchg
lods
fucomi
sbb
(bad)
fmulp
push
mov
mov
jmp
mov
cmps
pop
out
ins
mov
jge
sbb
fmul
iret
push
dec
sbb
pop
add
hlt
mov
pop
mov
fwait
dec
jae
and
lods
shl
push
div
push
ds
mov
ret
scas
aas
fwait
mov
retf
jns
pusha
shl
jne
push
clc
mov
test
stos
ret
cmps
lods
scas
and
inc
(bad)
int
inc
push
sbb
repnz
xchg
ds
stc
movs
mov
jo
or
sub
lods
push
rol
jae
movs
dec
mov
mov
or
jmp
std
aam
jae
dec
aas
(bad)
mov
jno
xchg
sub
shr
and
sti
sbb
dec
mov
ins
adc
add
or
jmp
xor
push
lods
inc
imul
jno
lock
push
mov
or
xor
mov
out
test
into
lods
mov
xor
dec
dec
sbb
xor
jbe
fs
mov
js
xchg
jne
pop
dec
addr16
fnstcw
push
(bad)
jns
pop
bound
or
movs
(bad)
cmp
jnp
in
jno
sbb
xlat
or
clc
sbb
dec
jb
mov
ss
fwait
enter
jmp
ins
clc
mov
(bad)
or
(bad)
in
retf
mov
inc
in
cmps
dec
clc
or
and
(bad)
jmp
add
inc
lods
pop
mov
cmps
adc
jp
pushf
dec
repz
mov
inc
shl
(bad)
pop
jge
cmps
or
xor
imul
(bad)
aad
push
cs
adc
pop
sub
sub
sbb
cmp
loop
js
bound
loop
je
imul
inc
paddb
xchg
jmp
jle
dec
addr16
popa
mov
pop
sub
inc
xor
aam
mov
js
sub
push
push
mov
mov
fld
push
fucomi
pop
or
int3
loop
inc
mov
mov
or
sub
push
xchg
inc
mov
jo
std
jb
cli
pop
push
push
add
(bad)
mov
mov
cs
jno
stos
stc
test
and
xchg
or
push
mov
les
mov
mov
je
xchg
jnp
and
call
test
iret
imul
xchg
cmp
push
ins
jmp
sub
mov
outs
add
seto
iret
mov
xor
add
in
xor
mov
call
xchg
add
add
dec
out
push
imul
add
jnp
jmp
ret
add
call
mov
jne
nop
xchg
add
pop
fsubr
frstor
sub
add
loopne
xchg
cmps
outs
scas
test
xchg
mov
push
cs
dec
fcomp
push
xchg
inc
pop
mov
adc
xlat
push
ret
(bad)
loope
pusha
sbb
stc
int3
mov
pop
sbb
adc
inc
outs
sub
(bad)
xor
je
cli
(bad)
mov
std
inc
dec
out
push
lahf
hlt
xchg
mov
push
test
cmp
aas
adc
fs
pop
and
cmp
adc
cmp
lds
or
ins
push
push
add
test
imul
xchg
cmp
scas
(bad)
retf
dec
rol
pop
imul
and
dec
and
dec
mov
loopne
dec
sbb
mov
mov
inc
jl
jo
mov
inc
or
(bad)
leave
mov
add
cwde
add
mov
cmp
cld
dec
stos
lods
pop
mov
dec
je
inc
push
cwde
adc
sbb
mov
jmp
mov
fnsave
add
add
jmp
imul
or
imul
add
push
outs
push
inc
sbb
mov
or
push
push
push
or
cld
add
rol
lods
push
jmp
inc
nop
push
jae
jle
sub
lods
(bad)
cmc
xchg
push
leave
out
mov
dec
push
test
jnp
xchg
inc
test
fdivr
fimul
pop
aad
or
lds
dec
rcl
jmp
fcomp
les
mov
and
shl
xor
mov
ret
sbb
mov
sub
test
or
cs
dec
push
arpl
test
jb
cli
clc
push
mov
clc
and
shl
(bad)
jnp
cmp
les
and
push
test
ret
les
fadd
into
add
cdq
rcl
out
clc
sahf
shl
test
jmp
sub
push
mov
xor
lds
call
lods
add
sbb
or
fisubr
push
sbb
add
ds
jge
push
cmp
int
fsubr
cmp
push
fsubrp
add
das
push
mov
jg
jno
or
pop
scas
lods
xlat
loop
and
fdiv
mov
test
xchg
(bad)
mov
jno
jmp
pop
and
pop
stc
rcr
fild
pop
jne
aad
test
push
aad
int3
cmp
adc
les
mov
ss
out
outs
ret
add
mov
fdiv
jl
repz
movs
nop
ror
push
popa
and
ret
jmp
les
cmp
push
ins
stos
mov
les
cmp
mov
jnp
ins
pop
out
sub
or
cmp
jg
lods
push
popa
dec
dec
mov
jne
mov
movs
or
jae
cdq
or
mov
daa
xchg
pop
popf
jae
cli
jbe
test
xchg
inc
push
dec
cli
and
jno
pop
adc
lahf
sar
or
pop
or
fistp
shl
push
and
mov
loop
movs
mov
jnp
gs
pop
iret
and
ja
call
push
add
jle
lahf
test
jle
inc
addr16
aam
lds
retf
jae
cmps
jns
in
ins
or
fs
popa
mov
into
xor
outs
outs
xchg
out
dec
dec
movs
mov
shl
ret
cwde
push
test
mov
mov
lahf
cli
int3
(bad)
aad
mov
xor
popf
stos
mov
shr
retf
lea
adc
pop
pop
inc
test
ss
add
fld
xchg
xor
xchg
inc
mov
cmp
xchg
ja
add
sbb
jnp
add
lods
stos
sbb
push
inc
and
dec
add
jne
mov
cmp
mov
(bad)
mov
int3
mov
xchg
mov
bound
fisub
loopne
in
jne
mov
mov
popf
into
hlt
push
mov
mov
add
cwde
mov
ins
fmul
ins
das
push
imul
push
or
daa
les
cmp
and
cmp
adc
add
lahf
mov
test
arpl
in
retf
scas
ror
push
dec
adc
mov
cli
shl
inc
fild
add
push
jge
cld
adc
(bad)
and
pop
lods
rcl
scas
lods
jo
or
mov
imul
pusha
lock
imul
sbb
jg
fadd
fimul
ficom
clc
fistp
cwde
sub
add
inc
mov
fs
bswap
adc
cld
test
leave
rol
sub
fldl2t
pop
add
xlat
push
stc
shl
pop
fwait
iret
xchg
mov
enter
mov
inc
ds
jno
imul
aam
bound
adc
rcr
mov
jecxz
mov
add
imul
xchg
mov
stos
jo
shl
sti
and
lods
sub
(bad)
push
cli
push
add
outs
test
inc
push
xchg
in
test
leave
push
clc
inc
xor
test
out
adc
fwait
pushf
in
sub
and
mov
xor
dec
jmp
je
out
cli
xchg
rcl
rcl
fstp
and
pop
mov
mov
and
adc
mov
jno
inc
mov
mov
lds
jns
(bad)
idiv
bound
mov
hlt
jnp
inc
lods
ins
dec
mov
xchg
fild
and
mov
aam
call
inc
int3
and
addr16
adc
fisub
sub
movs
hlt
jne
push
xchg
shr
out
out
adc
mov
cmps
xchg
mov
aad
or
(bad)
dec
test
(bad)
in
inc
(bad)
jl
sub
cmp
jmp
cwde
mov
jns
push
aaa
mov
mov
cmps
jle
lock
dec
sbb
in
and
mov
jecxz
ret
sub
mov
(bad)
mov
das
sub
dec
je
loopne
sysexit
pop
adc
pop
aas
add
adc
cld
ficom
push
mov
adc
aaa
mov
push
addr16
cmp
push
cmp
hlt
pop
loop
sub
and
jecxz
jge
push
mov
std
add
and
adc
int
push
mov
jnp
jnp
xchg
add
leave
outs
sub
icebp
jge
lock
add
cmp
adc
mov
loopne
dec
nop
mov
enter
jp
push
push
sub
cdq
sbb
int3
add
xchg
(bad)
jmp
cmp
dec
std
test
(bad)
int
or
push
aam
call
push
test
mov
aam
ror
cmp
adc
cmps
clc
push
and
movs
and
dec
shr
sbb
into
jo
sbb
arpl
mov
pop
dec
addr16
dec
movs
pop
xor
test
adc
sub
scas
adc
mov
fcomp
lea
ja
pop
fwait
xchg
adc
inc
lfs
ins
add
dec
mov
xchg
cmp
and
and
outs
xchg
in
jp
pop
icebp
jecxz
push
(bad)
pop
mov
xor
pusha
addr16
popa
les
push
popa
movs
xchg
sub
ror
inc
xor
fstp
mov
fisttp
mov
push
sar
pop
movs
mov
mov
test
cmp
or
add
ins
mov
xchg
fdivr
fimul
imul
xor
cli
int
enter
mov
cdq
sbb
sub
mov
xrelease
repz
into
and
xlat
sub
mov
add
sub
push
arpl
push
out
mov
out
in
mov
mov
mov
shl
test
arpl
and
idiv
pop
lahf
fs
cs
lahf
mov
and
in
mov
in
mov
sbb
push
inc
mov
mov
mov
sahf
xchg
jmp
push
je
pop
cld
bnd
xor
mov
(bad)
ror
popa
mov
fnstcw
mov
scas
jb
sbb
loope
push
pushf
push
inc
mov
xchg
push
out
cmp
or
hlt
cmp
sub
and
push
sbb
fcom
stc
pusha
jle
push
xor
arpl
jb
ds
pop
jge
lea
aad
mov
sub
jne
push
push
jbe
icebp
(bad)
sbb
fdivr
sub
xchg
into
ret
fisubr
sbb
aam
jmp
in
cmp
or
add
sub
fdivrp
lea
and
scas
sti
(bad)
xchg
dec
pop
and
fiadd
lahf
cmps
enter
out
mov
dec
cmp
dec
nop
das
data16
and
outs
sbb
dec
(bad)
mov
mov
xlat
and
add
cmp
loop
sub
imul
into
icebp
xchg
lods
sbb
xchg
pop
xor
cli
push
inc
jo
pop
(bad)
fucomi
movs
xchg
jo
sti
or
out
jp
jg
xor
add
push
fidiv
jge
aad
shl
add
adc
pop
leave
(bad)
mov
sub
cmc
inc
cmps
jg
xor
jmp
lahf
call
pop
push
pop
push
sbb
mov
pop
pop
cmp
mov
fcom
lahf
daa
or
push
fcomp
(bad)
push
cwde
xchg
aas
xchg
outs
sbb
cmc
mov
cmc
adc
das
jecxz
idiv
idiv
fs
inc
adc
xor
or
iret
popa
(bad)
sti
adc
popf
sbb
jae
xor
pop
mov
mov
push
jbe
push
jnp
js
push
(bad)
pop
sub
xchg
cmp
xchg
int3
xchg
mov
fbstp
add
pusha
cmc
sub
inc
jns
movs
and
in
ror
adc
sahf
fbld
mov
xor
cmp
cmp
pop
std
loope
xor
addr16
dec
in
les
pop
fsubr
push
jno
sub
loop
pop
or
jae
test
scas
ins
push
mov
jae
xchg
data16
sbb
lea
(bad)
jg
xchg
clc
stc
cmp
xchg
push
sbb
xor
mov
icebp
xor
sbb
or
ror
mov
stos
jmp
inc
(bad)
or
push
adc
jnp
fstp
jne
add
aam
aad
popf
inc
jmp
cli
in
jle
bound
frstor
sub
push
and
inc
inc
cmp
cld
sub
sub
cmc
and
jge
es
outs
jl
pop
es
shl
stos
test
sbb
dec
or
push
sub
mov
inc
mov
sbb
sub
pop
call
dec
int
xchg
test
aaa
cs
inc
mov
call
sub
mov
rep
sub
(bad)
iret
in
and
cmp
mov
dec
(bad)
js
movs
or
repnz
inc
xor
inc
push
push
movs
jno
inc
mov
or
jb
dec
jg
mov
sbb
call
sbb
push
in
or
in
jbe
push
sub
jg
outs
scas
(bad)
add
mov
dec
fcomip
push
jmp
cmp
jl
xor
dec
data16
cmps
push
(bad)
dec
test
stos
xor
xor
dec
pushf
out
outs
(bad)
and
sbb
or
aam
push
sub
add
test
xor
adc
into
mov
push
push
and
lahf
mov
imul
sar
gs
stos
aad
or
mov
push
jno
push
nop
xor
mov
idiv
xor
pop
adc
jno
pop
stos
mov
cmp
xor
mov
out
mov
sub
mov
cmp
(bad)
inc
shl
aad
or
fs
pop
sub
add
jo
lahf
push
imul
xor
addr16
push
pusha
arpl
sbb
dec
add
pusha
xor
ins
pop
or
mov
pop
pop
xor
or
fidiv
xchg
ror
jne
push
or
inc
ins
jmp
and
pop
popf
ss
add
mov
(bad)
dec
jmp
cli
pop
lds
fcom
push
jle
mov
cmp
ret
test
xchg
mov
mov
inc
test
sti
aad
mov
fbld
add
hlt
or
aaa
in
jae
or
repz
push
dec
sub
scas
mov
xchg
xor
retf
mov
add
push
fdivr
outs
and
mul
cmp
cwde
(bad)
movs
dec
sbb
fnstcw
mov
pop
aaa
push
mov
push
add
mov
inc
xchg
sub
pop
jl
add
mov
gs
mov
rcr
scas
cdq
in
mov
in
leave
icebp
adc
push
mov
fnclex
fs
cs
ret
jno
inc
cmp
xor
pop
mov
imul
in
sub
push
xor
popf
xchg
pop
mov
or
les
stos
push
jecxz
and
arpl
inc
iret
dec
fsub
in
xchg
inc
and
and
das
add
jg
mov
pop
sub
stc
add
enter
test
xor
mov
loope
jge
shl
js
out
retf
popf
jle
xor
dec
sbb
inc
pop
das
xchg
cld
mov
sti
cwde
inc
bound
loop
mov
sbb
arpl
out
sbb
inc
xor
xchg
in
(bad)
in
retf
fmul
inc
es
(bad)
fs
push
dec
ret
ret
mov
ret
fstp
or
adc
lods
adc
xchg
shl
fbld
xchg
(bad)
mov
jmp
push
(bad)
pop
mov
cwde
je
adc
jno
neg
sar
xor
outs
clc
and
stc
hlt
pop
ret
mov
inc
mov
movs
rcr
mov
(bad)
or
popf
xor
enter
dec
jmp
retf
add
push
and
mov
push
mov
mov
add
jae
nop
xchg
outs
rcr
pop
stos
xor
cmp
jns
retf
add
fnstenv
rol
les
jecxz
add
outs
gs
cmp
aaa
or
movs
out
daa
push
cmp
mov
nop
xchg
add
je
dec
jns
or
cmp
push
push
jg
jb
jge
jno
push
adc
push
fist
je
scas
pop
mov
(bad)
dec
stos
rol
adc
arpl
xor
and
fst
pushf
leave
stos
js
ja
pushf
pop
out
mov
into
or
iret
sbb
sub
adc
popa
push
mov
iret
aam
dec
stos
sbb
push
jnp
retf
push
add
bnd
jle
das
rol
inc
imul
mov
addr16
fmul
cmp
and
add
cwde
sub
sbb
mov
test
outs
sbb
xchg
scas
stc
jns
(bad)
sahf
sub
and
jno
shl
rcr
sar
sbb
jmp
mov
push
sub
outs
in
xchg
sub
pop
adc
int
mov
sti
pop
xchg
push
add
sbb
(bad)
ins
(bad)
fisttp
rol
(bad)
mov
adc
and
pop
mov
test
ins
(bad)
mov
(bad)
cli
adc
ror
pushf
pop
fst
cmps
xor
scas
out
lods
call
sbb
xlat
mov
clc
repz
rcl
xchg
pop
cmps
jnp
push
and
sub
mov
test
inc
hlt
rol
mov
add
and
jg
rcr
popa
sahf
stos
loop
outs
xchg
cwde
aas
in
shl
and
xchg
sub
lods
jmp
inc
pop
(bad)
dec
inc
xchg
jge
sub
mov
data16
mov
or
sub
loope
(bad)
lock
adc
sbb
test
mov
cmc
popf
outs
daa
and
out
hlt
sbb
inc
xor
ret
dec
and
cmp
cmc
ja
jae
mov
cmp
push
inc
repnz
es
gs
fnsave
mov
imul
pop
ret
(bad)
mov
inc
pop
lahf
push
rcr
mov
mov
pop
push
rcr
or
(bad)
scas
mov
add
pop
inc
push
dec
push
cmps
shl
mov
push
push
lock
add
scas
mov
xlat
add
(bad)
mov
cmps
xchg
cmp
in
stos
sahf
xlat
out
mul
xchg
xchg
xlat
popf
adc
mov
and
pop
fiadd
sub
movs
test
push
add
fimul
inc
dec
mov
loop
xor
xor
cdq
xchg
jge
gs
or
scas
enter
leave
out
pop
add
inc
outs
imul
(bad)
cmc
xor
cmp
int3
push
cmp
push
inc
fcomp
(bad)
jnp
inc
cmp
inc
dec
or
push
sar
out
mov
mov
adc
jne
jae
or
xor
jge
in
mov
adc
shr
inc
fldenv
pop
pop
(bad)
xchg
cmp
cmp
sti
dec
add
in
push
cmp
cmp
call
loope
out
dec
xchg
jno
dec
fst
mov
in
mov
ret
mov
mov
(bad)
retf
mov
aad
mov
or
sbb
add
in
or
pop
push
or
or
mov
lock
scas
cmps
xchg
mov
cmp
mov
(bad)
mov
mov
movs
std
jmp
cdq
fidivr
enter
addr16
out
xchg
iret
clc
push
inc
sub
add
cmp
jp
xor
sub
cs
in
or
cdq
out
cmp
nop
mov
sti
mov
mov
in
sub
xchg
jp
add
cmp
adc
cmps
or
scas
mov
and
and
test
repnz
or
test
retf
idiv
repnz
sub
xchg
xor
and
mov
xchg
dec
pop
mov
pop
movs
pop
add
push
push
cld
xchg
pop
push
out
jle
push
push
inc
loopne
mov
aaa
sub
push
sahf
pop
call
mov
fstp
add
imul
imul
cmp
and
loopne
push
adc
push
arpl
pop
and
outs
outs
jecxz
and
and
je
xor
cld
lods
dec
and
pop
xchg
dec
inc
scas
push
xor
js
stos
pop
xlat
loope
sub
mov
dec
daa
adc
cmp
mov
jnp
out
xor
movs
in
lds
out
pop
xor
mov
inc
cdq
out
mov
jmp
mov
clc
jl
mov
test
mov
out
lahf
fidiv
adc
xchg
lods
pusha
and
xchg
xlat
aaa
xor
mov
(bad)
push
jg
add
cmp
fs
outs
pop
sbb
sbb
(bad)
cld
movs
popf
cmp
xchg
mov
ret
out
es
test
ret
pop
ins
adc
inc
retf
xchg
jno
imul
cmp
xchg
mov
aam
or
shl
lods
add
cmp
jne
icebp
jae
stos
sbb
imul
mov
and
in
xor
jecxz
xchg
bound
inc
cmp
lahf
or
psrlq
aas
lods
push
shr
pushf
test
or
sub
jns
loop
out
mov
call
mov
mov
cwde
dec
pop
jmp
lods
test
jb
shl
xchg
(bad)
mov
ret
icebp
dec
retf
pop
inc
xor
add
jns
add
std
out
les
add
adc
jp
(bad)
out
(bad)
pop
sbb
mov
mov
push
call
push
daa
stos
mov
call
mov
lds
sar
fldenv
xchg
repnz
dec
adc
xor
leave
adc
add
add
mov
push
add
ficom
cli
ins
cmp
add
retf
loop
inc
add
test
out
cmp
adc
enter
adc
sbb
add
arpl
(bad)
pop
inc
and
movs
mov
mov
daa
jge
scas
aad
cmp
cmp
jno
popa
call
dec
cmp
push
call
sub
mov
sub
jne
pusha
pop
cmp
ins
in
jl
jno
push
ss
mov
in
aad
inc
add
clc
mov
xor
fsubr
fwait
push
outs
xchg
out
ins
push
mov
fcom
test
aaa
idiv
fwait
dec
add
dec
xchg
or
jno
or
and
inc
sbb
mov
fwait
aad
stc
push
sub
cwde
mov
inc
pop
dec
fldenv
xchg
sbb
dec
in
pop
js
(bad)
adc
or
dec
pushf
lods
daa
int3
and
sub
arpl
mov
shl
push
mov
sbb
push
add
shl
cli
fadd
fld
xchg
sar
mov
lea
mov
(bad)
retf
inc
cli
aaa
cmps
mov
pop
or
aaa
push
jecxz
push
(bad)
test
mov
aas
xchg
fdiv
ins
sub
sbb
add
mov
in
sbb
rcl
bound
(bad)
repnz
mov
xchg
das
rcr
or
pop
dec
call
sub
call
or
adc
mov
arpl
out
dec
shr
es
push
and
aad
adc
pusha
gs
mov
mov
sbb
mov
sub
into
fadd
inc
repnz
mov
mov
xchg
mov
sub
das
adc
sub
mov
and
xor
sbb
stos
pop
out
mov
fld
cmp
hlt
sub
dec
jne
adc
dec
sbb
sti
fadd
cs
push
adc
push
call
pop
sbb
shr
mov
jnp
mov
jae
jge
mov
sbb
cmp
pop
pop
mov
pop
xchg
imul
pop
push
out
dec
movs
movs
push
jl
xlat
test
retf
add
inc
and
xchg
mov
aad
nop
iret
xor
xor
loop
mov
inc
stc
scas
sub
call
xchg
cld
loope
add
call
and
addr16
rcr
iret
(bad)
hlt
xor
adc
int
in
shl
retf
and
ret
pusha
adc
scas
push
sbb
pop
push
inc
loopne
xlat
ret
scas
cmc
xchg
in
cmps
cmp
enter
ss
popf
lea
hlt
(bad)
sub
xchg
sbb
mov
jmp
das
cdq
popa
add
(bad)
mov
jp
inc
sub
push
sbb
int3
add
popf
int
sbb
push
ja
scas
add
movs
xor
pop
shl
mov
cld
xchg
idiv
dec
mov
mov
clc
pushf
mov
jle
test
in
sbb
cmc
(bad)
xchg
mov
push
inc
mov
jl
gs
adc
mov
mov
mov
rcl
sahf
or
mov
pop
mov
add
or
mov
fist
sbb
sahf
sbb
ja
pop
sub
and
por
retf
add
push
icebp
in
aad
(bad)
addr16
push
sub
xchg
jae
lea
xchg
xchg
leave
inc
and
icebp
gs
call
ffreep
leave
jnp
adc
das
fst
mov
js
mov
daa
push
arpl
mov
xchg
mov
in
pop
loop
dec
jne
pop
or
(bad)
mov
xor
and
or
int
(bad)
pop
test
push
cmc
add
sahf
mov
cmps
mov
out
and
addr16
test
fmul
sti
mov
pop
mov
test
imul
ins
sub
fild
mov
jecxz
jns
pop
pop
pop
sub
aam
jnp
outs
add
daa
sbb
ins
into
or
inc
loope
out
test
add
fwait
cmps
(bad)
fstp
push
cmps
cdq
mov
call
pop
call
adc
dec
mov
inc
xor
mov
push
dec
lods
cli
pop
int
sahf
cmc
mov
pop
sahf
(bad)
std
rcl
xor
push
and
mov
push
inc
xor
cmp
out
in
xchg
mov
stos
lahf
sar
add
out
icebp
mov
outs
mov
test
pop
jb
lods
push
pop
inc
or
dec
scas
les
ret
pop
inc
(bad)
pop
lock
retf
out
sbb
inc
jae
add
imul
cmp
std
xchg
push
and
jmp
shl
outs
not
daa
mov
loop
into
sub
out
jmp
js
sub
xchg
mov
ficomp
gs
adc
lods
fist
lds
push
loope
aas
stos
outs
jbe
mov
adc
inc
movs
in
ins
fucomi
sar
rcl
dec
and
mov
cwde
cmp
(bad)
loop
fwait
shl
jmp
and
jp
pop
fist
or
push
and
mov
div
or
adc
ss
xchg
aaa
inc
fnsave
cmp
xor
sbb
or
adc
mov
jb
xor
mov
pusha
daa
adc
rol
fisub
xor
nop
xchg
ss
scas
call
dec
mov
fpatan
int3
int
adc
shl
pop
outs
dec
movs
sbb
add
mov
gs
sti
jmp
pop
mov
pusha
dec
adc
cmp
rol
fwait
mov
cli
repnz
aad
push
bound
jge
push
sbb
push
adc
push
outs
loopne
lea
scas
(bad)
add
mov
xchg
xchg
or
sbb
ror
push
inc
adc
or
mov
mov
not
jl
xor
jle
add
(bad)
outs
out
adc
xor
and
dec
adc
in
pop
ja
mov
pop
dec
arpl
xor
pop
inc
bound
dec
sub
jb
loop
mov
xor
jno
cmp
cmps
xlat
sub
pop
add
aaa
mov
dec
sar
inc
das
int
sbb
and
addr16
jae
push
sub
imul
push
inc
and
cdq
push
jle
popaw
push
xchg
loope
push
and
int
and
(bad)
jbe
pop
sbb
mov
xlat
daa
ret
in
adc
(bad)
mov
lahf
add
mov
inc
or
fwait
ja
jp
sub
cmp
idiv
or
or
daa
les
pop
movsx
ins
mov
ss
fsub
jle
or
sti
jns
jb
sub
push
mov
call
xor
xor
pushf
lahf
jmp
sub
mov
sbb
(bad)
sub
push
enter
add
test
les
add
jbe
jecxz
sti
add
out
mov
and
pop
je
pop
inc
dec
mov
call
inc
add
mov
mov
add
and
cmc
fnsave
adc
addr16
jmp
aas
push
push
sbb
or
gs
cmp
cmps
out
mov
out
or
dec
jnp
sbb
jae
call
push
sub
icebp
fisttp
mov
jb
mov
xchg
test
int
rol
mov
xor
cdq
and
mov
leave
cmps
xchg
dec
stos
or
pusha
(bad)
sbb
mov
or
cmp
and
mov
mov
xchg
dec
out
in
sar
fld
bound
sub
ret
push
into
in
xchg
push
leave
(bad)
mov
lods
xchg
cmp
sbb
imul
aas
cmp
arpl
jno
test
fcom
dec
mov
push
fistp
push
jne
sub
aaa
idiv
push
stos
xlat
adc
and
fwait
adc
cli
cmp
add
pop
mov
xor
bound
xor
(bad)
scas
ja
xchg
popa
jecxz
into
and
sbb
sar
cmp
fst
ja
jp
clc
ror
jne
push
scas
jmp
stos
or
or
retf
mov
movs
dec
inc
inc
xchg
psrad
ret
mov
sti
mov
hlt
leave
mov
mov
pusha
fldcw
xchg
sub
push
(bad)
(bad)
add
xor
push
sub
in
sti
xchg
retf
bound
(bad)
inc
jp
jnp
(bad)
jb
add
mov
leave
pop
(bad)
mov
es
mov
mov
fnstenv
das
and
jge
mov
sub
repz
(bad)
(bad)
in
inc
push
loopne
lea
sub
mov
mov
xor
and
jb
mov
adc
arpl
sbb
dec
pop
mov
shl
jecxz
lock
outs
rcl
adc
cmp
call
jmp
sub
dec
adc
ficomp
jle
dec
hlt
sub
movs
mov
cmp
mov
shr
data16
or
mov
push
bndstx
pop
sub
or
push
mul
jo
lock
mov
in
xchg
jnp
inc
or
jle
adc
mov
xchg
jmp
ror
aad
cmps
inc
xchg
inc
or
jmp
push
push
mov
cmp
mov
frstpm(287
imul
pop
pushf
sbb
in
push
pop
popa
cmp
xchg
test
adc
sub
mov
push
mov
scas
adc
mov
in
pop
dec
ins
mov
mov
xlat
push
sub
pop
sahf
ins
jne
(bad)
(bad)
cdq
call
push
xor
ds
cmps
aaa
add
nop
xchg
cmp
outs
dec
sahf
or
xor
fcmove
xchg
add
fidivr
pop
pop
ins
xchg
out
inc
jnp
pushf
adc
call
add
pop
in
xchg
or
not
repnz
loop
(bad)
fwait
push
push
push
repnz
fs
in
push
fcos
sbb
mov
inc
sbb
and
adc
adc
mov
add
test
outs
stos
push
jp
xor
jge
push
imul
sbb
xchg
ja
adc
popf
cmp
sti
in
fisttp
jmp
mov
push
jl
aaa
sbb
pop
jbe
repz
pop
ins
mov
mov
mov
(bad)
dec
js
popf
push
xchg
or
push
sub
int
sub
aas
jp
sbb
xor
adc
fadd
sbb
push
mov
mov
sub
test
xchg
les
imul
jl
cmp
call
test
je
std
fimul
pop
sbb
and
std
jb
add
arpl
dec
hlt
sbb
and
leave
in
cmp
mov
add
push
std
and
dec
inc
aas
addr16
mov
jo
retf
xchg
js
fmul
pop
dec
enter
movs
dec
enter
sub
test
push
cwde
pop
or
mov
adc
xchg
hlt
in
push
sub
mov
xor
(bad)
shl
dec
sub
inc
retf
sbb
out
xchg
xchg
mov
add
mov
movs
sbb
pop
fdivr
xchg
jl
add
pusha
push
stos
out
movs
stos
sub
push
push
add
xor
mov
xor
or
push
jle
cs
out
push
mov
adc
dec
ins
ret
mov
outs
mov
arpl
fcomip
jle
hlt
hlt
(bad)
rcl
xor
pop
in
sub
push
jo
adc
mov
push
dec
das
sbb
jns
add
in
fidivr
shr
sub
sub
ins
pop
jne
call
mov
mov
sub
dec
cmp
push
pop
jae
dec
out
push
sar
shl
mov
jnp
cmp
cwde
adc
loopne
xchg
and
push
xchg
aad
cld
xor
ret
sub
imul
pop
adc
lods
mov
jno
adc
sub
popa
test
and
and
add
sub
add
xor
scas
cmps
push
lock
movs
cwde
sub
add
scas
lock
pop
shr
add
fs
in
movs
mov
adc
sub
jg
push
push
mov
stos
hlt
test
cmp
retf
dec
fdiv
cmp
xchg
xor
mov
fimul
pop
ret
cmc
popa
les
stc
sbb
shl
pop
push
lock
add
cs
inc
jge
(bad)
(bad)
popf
mov
mov
sub
sti
adc
mov
push
fmul
mov
pop
push
lods
es
dec
add
jle
in
mov
popf
jle
sub
xor
stc
mov
push
fimul
xchg
icebp
add
ss
div
cmp
adc
(bad)
mov
addr16
pop
adc
rcr
jle
inc
mov
loop
or
and
dec
shl
pop
and
pop
out
or
pop
es
dec
jle
adc
imul
sub
out
cmp
fisttp
or
call
outs
movs
mov
mov
aaa
jl
pusha
fld
mov
dec
jp
xor
rol
or
sub
addr16
retf
sub
rol
adc
xchg
sub
retf
xor
push
iret
loopne
or
je
pop
push
mov
jbe
loope
loopne
dec
clc
add
mov
les
mov
js
enter
xor
pop
jmp
icebp
cmp
loope
mov
fistp
fstp
popf
sahf
push
mov
or
xchg
clc
xchg
sahf
addr16
cs
mov
and
fsub
(bad)
pop
daa
rcr
jbe
dec
xlat
pop
pop
daa
xchg
mov
ds
repnz
and
ja
sbb
iret
movs
shr
(bad)
loopne
mov
pop
cmps
mov
push
jne
jle
ins
lds
cmp
jg
jne
nop
test
add
xor
mov
and
jg
xchg
inc
push
inc
push
stos
repnz
pop
sbb
stc
and
fcomp
into
dec
mov
sbb
jle
not
mov
inc
mov
test
jl
xor
mov
xchg
jo
inc
inc
pop
and
push
in
pop
jl
jg
cmps
or
xchg
push
(bad)
mov
gs
sbb
cdq
adc
ficom
dec
xor
jne
or
out
dec
add
jns
test
popa
jg
stos
(bad)
loop
cmp
scas
iret
sub
cli
mov
jg
xchg
xchg
and
movs
pop
sbb
cs
icebp
sub
xchg
mov
(bad)
sbb
and
xchg
mov
movs
and
sbb
mov
jg
sbb
and
xor
adc
test
fs
cmp
test
fs
in
std
out
mov
aas
(bad)
sub
dec
(bad)
mov
push
mov
adc
adc
fcomp
xchg
mov
retf
lahf
sti
mov
mov
das
xor
mov
test
pop
outs
xor
aaa
jne
xor
lahf
push
pop
jge
test
call
xchg
in
jecxz
add
inc
ins
sub
sbb
ret
cmp
fsub
dec
aaa
lods
pusha
into
cmp
nop
mov
sub
movs
pop
mov
popf
(bad)
adc
dec
add
lock
xor
xchg
sub
rcl
xchg
mov
and
in
sub
inc
out
dec
clc
push
test
push
xchg
jp
ds
mov
xchg
movs
jmp
popf
(bad)
jo
dec
in
jp
leave
and
jns
aas
xchg
scas
dec
pop
jmp
jb
dec
xor
pushf
mov
add
cmps
(bad)
push
sbb
shr
iret
push
push
mov
pop
add
xchg
mov
leave
pop
dec
sbb
test
arpl
mov
(bad)
shl
jno
out
sbb
add
fs
cld
enter
jbe
aas
inc
sahf
xchg
ficom
(bad)
bound
mov
mov
inc
mul
push
loope
jo
xor
and
dec
mov
mov
retf
xchg
and
out
ret
stc
fbstp
std
cmp
inc
out
call
movs
cmp
push
in
inc
mov
adc
outs
shr
lock
xor
rol
shl
and
and
xor
stos
dec
(bad)
xor
in
adc
dec
es
inc
loop
sub
mov
cmp
fs
xor
jbe
adc
movs
mov
cmps
mov
loopne
xor
xor
pop
dec
inc
das
lock
repz
jge
gs
dec
add
add
and
xor
fsubr
push
xor
shr
cmc
mov
movs
sahf
in
sub
int3
test
enter
or
inc
mov
out
jo
fst
sahf
xor
pop
lods
fidiv
and
mov
ins
fistp
mov
fldenv
cld
mov
scas
mov
stos
je
aad
sbb
jge
movs
idiv
and
shl
pop
add
xlat
jge
push
in
scas
push
sbb
ins
sub
mov
mov
adc
mov
mov
adc
in
jne
sbb
cmp
nop
outs
or
push
sub
add
(bad)
jae
mov
cmc
mov
test
pushf
add
fucomip
ds
test
pop
sbb
cmp
imul
adc
pop
pop
ret
sahf
xchg
or
xor
retf
imul
jp
shl
adc
cmovne
lods
xchg
mov
sub
repz
dec
les
loope
dec
in
mov
div
mov
inc
inc
add
xor
inc
xor
inc
sbb
ja
dec
push
repnz
repz
jne
xchg
fiadd
aam
fdivp
push
cdq
xor
sbb
pop
adc
jne
fdiv
scas
daa
push
sbb
add
and
jbe
int3
inc
(bad)
ds
cwde
fimul
jle
xchg
inc
jns
xor
and
jno
cmps
sbb
stos
xchg
aad
adc
cmps
pop
sbb
(bad)
or
xchg
inc
std
pop
loope
add
sub
(bad)
pop
xchg
in
mov
sub
jecxz
dec
in
inc
out
inc
aaa
mov
inc
out
sar
jmp
sti
arpl
data16
daa
cld
cld
ret
dec
or
pop
retf
adc
pop
mov
sub
loope
jo
bnd
jmp
sub
push
loope
mov
push
inc
call
xor
mov
jbe
scas
dec
sbb
jle
ins
pop
call
inc
pop
imul
jbe
fistp
xor
xor
push
out
imul
mov
sbb
mov
stos
xchg
movs
in
and
in
imul
push
dec
inc
xchg
cli
daa
push
mov
mov
sti
je
movs
xchg
out
jp
enter
inc
jns
mov
adc
icebp
xchg
or
push
iret
adc
sub
xchg
add
(bad)
mov
adc
cli
add
out
push
jo
xor
test
add
pop
inc
push
call
lahf
in
cmovae
pushw
push
xlat
jmp
js
aad
movs
adc
pop
inc
xlat
mov
bound
(bad)
cld
rol
cmp
(bad)
mov
test
sub
pop
sub
cmp
and
lods
jmp
fwait
bound
ins
rol
or
imul
(bad)
push
jb
cmps
rcl
sti
push
fwait
rcl
frstor
xchg
inc
movs
sub
mov
xor
jb
mov
enter
mov
popa
outs
cmp
mov
int3
sub
nop
enter
dec
jae
push
lea
shl
inc
jo
add
cmp
mov
dec
push
pop
repnz
cmp
add
inc
jno
jae
and
(bad)
enter
ret
adc
idiv
enter
or
stc
in
jns
jp
sbb
adc
mov
or
daa
xchg
mov
ror
fimul
into
cmps
cs
sbb
xchg
mov
(bad)
mov
mov
stos
js
movs
out
out
jb
jmp
push
(bad)
cld
sbb
sbb
jnp
inc
push
mov
fistp
in
(bad)
push
cld
sbb
cdq
stos
pop
inc
sbb
js
pushf
mov
xlat
out
mov
aam
or
mov
mov
adc
in
sub
dec
adc
fidiv
mov
mov
int3
fidiv
mul
idiv
outs
jae
xchg
lock
push
loopne
fld
inc
or
and
in
ss
into
movsx
xor
dec
mov
leave
adc
gs
mov
jae
adc
hlt
and
popa
pop
rol
adc
daa
and
jns
push
pop
addr16
sahf
ja
xchg
and
inc
icebp
cmp
adc
adc
mov
fcomp
in
outs
ds
fnstcw
in
and
lahf
sub
pop
mov
push
add
add
and
std
jl
push
push
xor
inc
pushf
stos
daa
inc
(bad)
in
jo
sbb
or
test
sbb
xor
or
pop
add
dec
push
hlt
fdiv
inc
or
shl
icebp
lahf
dec
xchg
mov
pop
mov
mov
repnz
loopne
sbb
jle
outs
stos
into
nop
mov
bound
inc
fisub
mov
dec
mov
out
ret
aad
in
stos
or
sub
jo
in
ds
sbb
mov
adc
pop
fiadd
outs
rol
push
div
cmp
jo
fldcw
sub
shl
jg
repnz
test
aad
jnp
enter
push
test
push
xor
pop
jmp
cmps
adc
popa
xchg
inc
mov
dec
sub
leave
jmp
bnd
sub
mov
(bad)
iret
or
mov
xor
or
test
xchg
jno
lea
push
jmp
adc
cmp
sub
mov
xchg
std
cmp
retf
inc
inc
hlt
cmc
dec
icebp
hlt
pop
je
or
scas
and
rol
jmp
mov
mov
aaa
pop
jmp
je
loopne
push
jmp
sbb
push
inc
xchg
xor
sbb
scas
mov
scas
fwait
stc
mov
pop
retf
jmp
jle
fimul
mov
movs
xchg
sbb
mov
pop
mov
cmp
dec
cdq
mov
inc
sub
sbb
stos
stc
cmp
sub
cdq
cli
into
loop
xchg
stos
sbb
sub
int
add
inc
lds
xor
push
(bad)
sub
mov
or
mov
pop
sub
jmp
into
(bad)
xchg
adc
cmp
push
mov
nop
mov
mov
das
or
das
aam
loop
lods
stos
rcl
int3
cmps
loope
leave
cmps
aaa
mov
pop
cmp
cmp
pushf
and
inc
shl
mov
sti
fs
cmp
push
mov
data16
xchg
sub
adc
push
popa
int
cwde
bound
xchg
clc
rol
or
or
inc
seto
xor
mov
xor
sub
xor
out
cmp
and
daa
pop
jo
jp
inc
push
push
rcr
int
add
pop
rcl
mov
xchg
xor
mov
add
inc
in
jg
push
sub
hlt
bound
adc
push
sbb
dec
bound
fisttp
mov
jmp
es
add
inc
dec
pop
nop
ds
push
idiv
jmp
lock
push
add
push
xchg
dec
and
pop
ret
push
push
ins
inc
dec
inc
mov
cld
push
sar
test
and
jns
dec
mov
fld
loope
fwait
test
jmp
gs
push
inc
shr
rol
in
inc
fld
mov
adc
paddd
mov
push
aam
xlat
mov
push
je
and
cmp
jns
cmp
inc
mov
mov
push
jl
retf
push
das
mov
ins
mov
push
cmp
call
mov
in
outs
shl
ret
add
out
mov
jp
das
jmp
push
mov
inc
sub
retf
clc
xchg
sar
xor
jge
adc
pop
cmp
mov
in
inc
jno
and
add
pop
cld
xor
aas
xchg
das
adc
lea
fsub
pop
sub
out
imul
and
(bad)
into
fstp
fimul
test
daa
cmp
jbe
mov
push
icebp
cdq
push
cmp
cmp
adc
xchg
jns
add
add
xchg
push
cmp
ret
jp
jo
ss
add
(bad)
mov
adc
(bad)
mov
xchg
or
(bad)
cmps
xchg
jg
sub
mov
push
cmp
mov
sbb
arpl
mov
cmps
mov
cmp
retf
pop
call
jnp
mov
cli
mov
mov
pop
stc
mov
mov
and
sbb
rcl
jle
loope
or
(bad)
fs
push
mov
push
mov
in
scas
in
sbb
popf
je
cmp
mov
cmps
jg
sbb
add
xchg
add
ins
cmc
sbb
repz
mov
(bad)
or
dec
push
stos
or
push
aam
sbb
shl
mov
rcr
lods
sub
cwde
sbb
lods
cmps
fbld
and
mov
adc
push
aam
mov
jbe
pop
cmp
push
jle
movs
push
dec
dec
mov
xchg
xor
pop
add
lahf
pop
test
mov
std
test
js
dec
mul
cmp
and
mov
fdivr
(bad)
fcomip
and
jmp
cli
add
(bad)
sub
dec
push
jecxz
test
and
mov
in
hlt
xchg
sub
loopne
push
pop
or
pop
aam
shl
fist
movs
inc
xchg
mov
push
inc
xor
loopne
scas
mov
cmc
retf
pop
adc
je
pop
mov
(bad)
or
xchg
loop
xchg
ret
jge
test
out
sub
mov
rcl
(bad)
jmp
add
and
outs
(bad)
scas
xor
adc
pop
jb
mov
cdq
imul
aaa
jecxz
push
sti
xchg
push
push
mov
fisub
xlat
sbb
cmp
jns
adc
loopne
add
scas
jp
fwait
movs
imul
adc
push
clc
outs
add
jo
push
adc
inc
cmps
cmps
fcomp
and
rcr
mov
dec
mov
popa
cmp
loope
aas
mov
bound
popa
xchg
cli
cwde
jnp
pop
mov
aaa
jle
dec
aas
gs
ja
arpl
mov
mov
lock
imul
cmp
mov
ja
aam
cs
imul
icebp
mov
jp
xchg
jns
cdq
xchg
cmp
rcr
(bad)
out
inc
hlt
jb
sti
repnz
add
enter
lock
adc
fcom
div
dec
mov
or
test
push
mov
mov
push
rcr
adc
mov
data16
xlat
std
test
movs
cmpxchg
add
cmc
ficom
pop
ins
push
sbb
(bad)
xchg
cmp
into
mov
push
loop
xchg
(bad)
sbb
jmp
inc
stos
sub
test
xchg
mov
jo
sbb
in
mov
cmp
adc
xlat
out
jne
jecxz
xchg
fbld
ficomp
int3
mov
std
cmp
jmp
sbb
xor
jo
mov
test
xchg
jo
iret
pop
mov
outs
stc
inc
sbb
test
cmp
pushf
mov
or
je
lahf
push
movs
jae
lods
stc
pop
pop
xchg
leave
loop
rcr
test
mov
or
push
sub
inc
loop
imul
les
jnp
aad
jmp
ds
ins
call
das
imul
mov
xchg
cwde
sbb
pop
and
out
rol
mov
test
adc
fnsave
add
ds
mov
mov
ins
daa
mov
or
lahf
cmp
shl
test
mov
mov
scas
mov
xchg
push
ror
pop
push
pop
mov
xchg
mov
out
cmp
xchg
jle
mov
push
call
and
sbb
aaa
mov
jmp
imul
add
mov
cmp
mov
stos
or
shl
push
stc
mov
or
sbb
fisttp
xchg
rcl
aaa
pop
jecxz
scas
pop
push
jbe
add
dec
mov
jb
sub
arpl
ret
xor
xchg
dec
jle
and
loope
and
push
popa
loopne
addr16
sub
push
ds
and
mov
sahf
fcomp
pop
(bad)
and
push
push
into
jl
xchg
adc
or
imul
repz
sbb
xor
jmp
dec
ja
dec
leave
mov
xlat
js
cmp
sub
jo
ret
and
enter
lock
or
ja
lock
xchg
data16
in
loop
jl
jmp
adc
icebp
mov
into
in
rol
stos
ins
pop
xchg
jns
fs
ins
das
inc
mov
sbb
mov
jno
aad
inc
aaa
fisub
dec
rcr
cmp
pop
jae
sbb
inc
mov
pop
jg
jecxz
and
test
push
arpl
xchg
call
push
fidivr
repnz
cmp
lods
mov
push
je
adc
aaa
aam
jbe
xchg
fild
xor
xchg
inc
add
fdivp
xchg
mov
sub
call
dec
push
sub
sahf
inc
shr
mov
aam
gs
scas
pushf
ret
xor
pop
test
and
ds
xchg
mov
or
sub
jbe
dec
jo
jge
in
sub
cmp
pop
icebp
out
call
xchg
retf
push
in
pop
das
inc
cmp
xor
xor
jno
shl
(bad)
in
xchg
stos
push
mov
out
mov
xor
fcmovne
xchg
scas
dec
inc
gs
pusha
xchg
jmp
or
jne
imul
stos
arpl
jno
arpl
fidivr
push
stc
fnstcw
sbb
inc
in
fs
push
mov
ja
inc
jmp
xor
repnz
sub
test
pop
xor
leave
mov
inc
or
or
add
ss
out
retf
sbb
shr
cmc
adc
cmp
sar
fwait
gs
xlat
ins
stc
lahf
lods
add
fucomp
xchg
ror
call
and
xor
iret
lahf
cwde
loope
stos
add
popa
loopne
movs
cli
xor
sbb
test
mov
adc
(bad)
mov
lods
push
push
inc
stos
inc
add
test
pop
ins
mov
xor
mov
test
sbb
ins
mov
ficom
lds
and
push
popf
adc
bound
pcmpgtb
mov
shr
outs
and
jns
xchg
dec
add
or
sub
mov
mov
cmp
add
cmps
sahf
adc
pop
jae
pop
adc
push
push
ins
js
es
test
inc
xchg
xchg
bound
jmp
adc
ja
call
cdq
movs
pop
push
mov
cmp
mov
jmp
sbb
sub
sub
(bad)
js
and
push
(bad)
je
cmps
(bad)
sub
scas
jbe
outs
call
push
repz
mov
pop
pop
pop
mov
or
pop
aam
fidiv
in
test
iret
aam
ins
inc
and
ins
add
pop
addr16
pop
jae
popf
xlat
call
inc
out
add
sub
leave
stos
std
adc
or
push
xor
jl
test
push
test
jmp
shl
sub
jmp
cmc
inc
imul
push
and
jns
xchg
out
in
cwde
sbb
icebp
ss
cld
fist
or
mov
cmp
or
inc
das
test
sub
mov
popa
fmulp
mov
(bad)
je
pop
push
ins
inc
mov
in
out
jb
out
ins
mov
bound
mov
repz
sub
adc
fsin
(bad)
int3
(bad)
xchg
inc
outs
xor
push
add
pop
inc
test
ss
sahf
fld
sbb
(bad)
test
popf
mov
jl
outs
xlat
dec
fwait
mov
adc
jge
fucom
mov
mov
mov
push
cmp
mov
mov
jl
clc
fs
test
lds
pop
cld
mov
mov
or
mov
clc
jo
punpckhbw
jecxz
call
or
ins
scas
movs
in
sub
xchg
fsub
sub
jecxz
and
adc
jbe
cmp
popf
cmp
addr16
out
jp
xchg
les
cmovo
dec
stos
mov
jmp
cmps
aam
movs
in
cli
pop
std
jmp
div
inc
push
loop
fsubr
mov
jb
jbe
out
arpl
call
cli
inc
mov
cmc
inc
dec
test
js
js
sbb
mov
std
cmps
adc
mov
sub
and
mov
movs
sti
push
lock
xor
xchg
xchg
data16
sbb
call
jmp
pop
jae
cmp
js
ror
(bad)
gs
adc
cwde
out
fbstp
inc
mov
js
dec
inc
add
rol
pop
push
nop
fstp
loope
push
pusha
sub
vpshufd
es
sub
add
pop
pop
call
call
adc
jge
add
mov
hlt
jmp
sahf
enter
cmp
lea
int3
test
loop
clc
jmp
int
lea
movs
mov
xchg
loop
and
enter
std
jecxz
mov
add
inc
push
xlat
xor
push
push
data16
mov
mov
sbb
mov
cs
mov
sub
outs
(bad)
pushf
(bad)
stc
and
mov
push
jmp
adc
jo
mov
jl
sub
scas
push
add
mov
push
or
mov
mov
shl
das
sbb
jb
imul
jo
push
ret
adc
out
jg
mov
repnz
rcr
into
sar
push
sbb
mov
test
sbb
push
or
sahf
mov
jb
(bad)
sar
push
add
sub
(bad)
loop
xor
repnz
int
cs
clc
sub
inc
pop
inc
adc
pusha
lods
int
cmc
push
nop
fsubrp
push
fcom
mov
jmp
cmp
sbb
out
imul
inc
stc
mov
sub
cwde
lea
lods
js
add
xchg
xchg
and
mov
cmp
push
xchg
push
stos
mov
pop
add
pop
ds
pop
shr
pop
add
add
mov
xchg
and
test
repz
dec
xor
(bad)
cmp
pop
sbb
inc
pop
pop
popf
aad
bound
ror
dec
dec
xor
in
lock
mov
retf
mov
cmc
stos
sar
dec
lock
test
inc
sub
cmp
sbb
mov
iret
jg
call
ja
into
mov
(bad)
jmp
out
mov
in
lods
dec
sub
xchg
or
push
inc
neg
add
inc
ret
(bad)
xchg
loopne
cmp
jns
jbe
cmp
daa
add
jge
jp
xor
or
dec
shl
sbb
xchg
popa
pop
or
mov
cld
cmps
sub
push
jg
push
mov
push
outs
int
call
into
into
add
daa
sbb
mov
aas
jmp
ret
movs
scas
and
xchg
mov
cld
aam
push
pop
rol
fnstsw
pop
and
pop
(bad)
and
push
scas
xchg
arpl
mov
adc
push
test
and
jg
jge
push
scas
test
jo
fnsave
jno
mov
out
push
push
and
jne
addr16
inc
ja
out
push
xchg
xchg
sbb
fcomp
test
cwde
loop
xchg
loop
test
and
pop
xchg
and
adc
ss
cmp
add
jb
inc
ret
cmp
add
cmp
lods
xchg
sahf
fadd
imul
mov
push
scas
sub
mov
std
sbb
mov
xchg
jbe
movs
(bad)
jmp
push
hlt
in
popf
hlt
ins
sub
cmps
sbb
int
cmp
pusha
or
xchg
add
inc
fst
push
add
pop
push
movs
jb
xor
push
add
push
adc
test
retf
inc
inc
pop
push
jecxz
xchg
dec
cmp
shl
and
xor
xor
das
pop
adc
cmp
mov
call
test
cdq
bt
pushf
add
enter
popa
stos
lahf
fs
add
push
or
sub
mov
out
or
and
daa
adc
mov
daa
ins
mov
sub
cmp
inc
out
pop
shl
in
lock
in
loop
iret
aad
add
xchg
stos
popf
int3
adc
lds
xchg
pop
test
enter
jecxz
jo
rcr
pop
sbb
pushf
xchg
pushf
sub
test
sar
pop
inc
into
add
xlat
push
scas
mov
pop
xor
dec
fidiv
jecxz
jne
jecxz
dec
xchg
pop
sbb
push
xor
cli
and
arpl
nop
xor
out
pop
pop
xchg
sbb
into
in
sub
mov
inc
or
or
jg
cmps
sub
mov
sbb
cmps
xor
adc
mov
pop
push
jmp
into
inc
aam
xchg
sub
imul
jge
les
mov
pop
addr16
sbb
addr16
aas
xchg
inc
fild
dec
call
cmp
push
mov
shr
xchg
iret
daa
or
cmp
mov
mov
fs
or
clc
adc
int
mov
push
jp
div
xchg
jb
dec
mov
clc
addr16
xor
adc
not
add
outs
popf
loop
bound
aam
inc
das
mov
movs
xor
push
inc
and
lods
test
cmps
into
xchg
shr
mov
cdq
adc
push
dec
fidivr
cmp
jnp
dec
out
dec
mov
sub
clc
aas
je
test
xchg
sbb
jmp
(bad)
lods
dec
movs
mov
mov
and
scas
xor
xor
stos
out
pop
loope
inc
cmps
xchg
cdq
jl
pop
fadd
mov
ins
xlat
pop
mov
stos
das
mov
lds
es
imul
cld
scas
aad
cli
adc
retf
mov
dec
cmc
ret
xchg
or
mov
mov
retf
nop
cmp
mov
add
sbb
jae
ds
fild
xor
popf
fiadd
mov
push
movs
push
sbb
movs
cdq
jmp
pop
and
leave
dec
xor
fisub
daa
adc
enter
and
data16
(bad)
jnp
lock
adc
jg
mov
je
fwait
xchg
fldcw
imul
popf
stos
mov
jae
test
adc
imul
les
xchg
xor
sbb
inc
inc
test
scas
ja
pop
ja
add
icebp
in
jge
test
add
retf
inc
imul
push
mov
push
xchg
cmps
stos
adc
or
loope
adc
idiv
cli
jl
ins
add
jns
lahf
push
xor
aaa
aaa
push
movs
mov
mov
add
lock
hlt
and
aas
es
scas
xchg
cmp
lds
ret
retf
push
pop
add
cmps
push
and
lds
and
fwait
ins
jbe
add
inc
int
ret
sub
mov
xchg
push
sbb
add
xchg
ins
hlt
lods
sub
cmps
xor
adc
jno
mov
les
out
mov
or
clc
xor
test
cmp
sub
push
mul
(bad)
ds
inc
or
adc
jns
sub
sub
push
mov
or
test
fcomip
cmps
push
les
lods
(bad)
jo
push
jmp
push
or
pop
dec
adc
movs
mov
xor
sar
(bad)
aad
call
(bad)
hlt
mov
dec
xor
pop
push
jmp
imul
iret
call
and
sar
aas
push
bound
push
cmp
stos
adc
cld
push
stc
sbb
inc
ja
test
push
cdq
mov
jne
aas
adc
dec
mov
xchg
(bad)
mov
ins
pop
aas
fstp
popa
jmp
mov
xchg
jge
xor
out
fcom
and
dec
cmps
mov
ds
sbb
lock
loope
add
mov
pop
leave
add
clc
ja
js
push
jecxz
xchg
cwde
add
pop
cmp
mov
js
push
push
mov
sub
pop
pusha
dec
push
mov
adc
inc
in
adc
push
je
cmp
stc
mov
scas
popf
cmp
dec
jbe
inc
pop
lods
rcl
sbb
dec
xchg
in
retf
push
or
xor
jnp
inc
sahf
mov
xchg
div
jmp
imul
mov
xchg
xchg
in
mov
iret
mov
jae
stc
inc
ins
es
dec
add
mov
cmp
out
and
and
sub
fsub
int3
dec
sbb
inc
ds
mov
push
icebp
sub
cli
mov
or
adc
test
cmp
nop
movs
aad
js
jns
jle
mov
or
gs
mul
push
add
or
in
int3
mov
shr
jnp
mov
ins
inc
sti
mov
mov
in
test
push
mov
push
mov
out
test
shr
and
out
jge
fs
mov
lods
ret
push
xor
jg
xor
nop
add
sti
shr
fsub
loopne
das
adc
mov
dec
hlt
dec
or
cli
or
inc
les
sbb
inc
push
jne
mov
push
test
xlat
cmp
dec
xchg
jecxz
outs
sub
push
pop
ins
pop
fbld
and
shl
ds
rcl
sti
cld
cdq
or
mov
in
push
fdivr
mov
retf
push
add
imul
clc
inc
mov
dec
fwait
xor
sbb
or
into
sbb
mov
cmps
and
pushf
add
(bad)
fcomip
cdq
adc
xor
pop
mov
pop
push
bound
int
aam
fcom
adc
aaa
test
in
cmp
sub
and
sub
cmps
push
test
lea
das
dec
lds
ss
or
into
fist
outs
fwait
adc
popf
adc
mov
dec
adc
aas
xor
ins
add
shl
test
test
sti
test
mov
fst
sbb
outs
mov
or
(bad)
push
sbb
and
mov
in
sbb
ds
or
repnz
dec
add
sub
fst
fistp
xor
loopne
cmc
push
cmp
lods
repz
fwait
xchg
mov
out
call
bound
hlt
call
mov
pop
jo
pop
jg
lahf
sbb
sbb
loop
xchg
cwde
mov
jnp
dec
stos
mov
dec
adc
jae
pop
in
add
and
push
out
lahf
cmc
xchg
inc
adc
outs
jmp
iret
or
jle
dec
xor
mov
fbstp
push
arpl
scas
mov
nop
loopne
inc
pusha
imul
in
in
retf
mov
pushf
js
xchg
imul
arpl
add
outs
out
push
push
pusha
lods
aad
sbb
xor
adc
outs
xor
sub
mov
pop
pop
pop
or
std
mov
call
lods
sbb
push
jle
inc
jne
(bad)
fs
outs
pop
leave
int3
and
sti
cmp
pop
loop
mov
cmp
scas
ffree
push
enter
cli
adc
(bad)
mov
call
jb
mov
in
into
mov
iret
add
push
sub
cdq
or
inc
pop
or
pop
jno
das
popa
mov
popf
cmp
dec
inc
pop
mov
arpl
(bad)
mov
sti
add
or
xor
ins
call
fstp
sub
std
leave
(bad)
inc
or
pop
xchg
push
xchg
std
xor
push
retf
leave
fiadd
mov
les
clc
out
fs
jge
add
ret
xlat
adc
out
push
mov
gs
push
mov
loopne
add
enter
and
imul
mov
pop
and
xor
pop
jmp
adc
sub
xchg
jecxz
mov
adc
fwait
adc
or
movs
inc
jb
nop
scas
push
retf
aas
cs
add
sub
repnz
mov
xor
or
daa
pop
test
sahf
std
(bad)
ins
cmps
jb
ja
mov
add
xchg
in
sbb
cmp
mov
pop
dec
(bad)
fdivr
shl
ins
jecxz
or
scas
dec
imul
repnz
leave
push
sbb
dec
scas
js
jmp
(bad)
xor
mov
or
aad
data16
into
jmp
jg
adc
clc
bswap
xlat
mov
in
inc
adc
outs
xchg
inc
inc
sbb
xchg
sub
dec
out
fsub
mov
mov
pop
push
lock
xor
ss
mov
loopne
pushf
mov
add
retf
arpl
sub
push
das
adc
mov
cwde
mov
gs
pop
jp
push
push
xchg
xlat
cmp
out
in
loopne
push
retf
jl
and
adc
test
pop
imul
pop
popf
imul
adc
movs
add
pop
xor
mov
xchg
cmp
lea
jg
add
cmp
xchg
or
jno
jno
push
addr16
pop
dec
test
addr16
mov
scas
das
enter
(bad)
and
test
inc
xchg
push
inc
pushf
shr
mov
xchg
or
das
ror
cmp
aad
sar
adc
jg
lock
push
push
mov
xchg
adc
int3
cmp
out
sti
sar
inc
sbb
(bad)
pop
adc
mov
stos
jp
cmp
cli
mov
mul
pop
leave
push
or
adc
das
cmp
push
stc
cld
(bad)
push
dec
call
xor
xchg
sub
iret
sbb
and
ss
js
and
add
push
dec
test
stos
and
jnp
xlat
fdivrp
mov
jae
xchg
mov
test
das
add
pop
ja
int
pop
les
mov
or
repnz
lea
cld
out
(bad)
xor
and
outs
sub
loope
pop
shl
fcomp
(bad)
aad
push
jno
aam
je
shl
movs
jp
pop
push
cmp
pop
adc
sub
mov
mov
mov
xchg
pop
jle
jno
jbe
push
and
mov
vmaxsd
inc
fs
push
push
mov
fxch
(bad)
push
mov
push
and
pop
hlt
cs
jecxz
xchg
into
loopne
sbb
hlt
pop
sbb
cdq
lea
adc
pop
mov
pushf
pop
jmp
sub
and
in
es
push
push
mov
daa
aaa
fsub
mov
aaa
cmps
int
xchg
inc
daa
inc
ret
pop
mov
scas
sub
mov
int3
add
mov
addr16
and
adc
pop
lds
xor
cmps
mov
jb
xchg
clc
retf
add
cmc
ss
push
into
test
mov
mov
leave
les
add
mov
sub
pop
icebp
jg
gs
jg
mov
push
iret
mov
std
mov
das
outs
inc
mov
mov
jp
pop
ds
inc
push
stos
cmp
inc
pop
pop
sti
push
push
xor
lock
cmc
xchg
je
neg
dec
xchg
nop
mov
call
pop
xchg
jne
call
fisttp
xchg
inc
in
arpl
test
add
jle
cmp
xor
mov
repnz
jmp
push
sub
sub
imul
sbb
push
or
xor
rcr
sti
fcomp
or
mov
imul
dec
es
cwde
push
test
pop
addr16
das
inc
ins
es
int
and
or
mov
dec
xchg
push
inc
jb
sti
sar
pop
inc
cdq
in
sti
pusha
inc
scas
es
fiadd
jbe
pop
frstor
mov
xchg
and
adc
loope
jmp
and
sub
push
mov
lods
stos
mov
pusha
xor
xchg
retf
retf
mov
dec
lds
cld
imul
and
sub
test
and
xchg
lods
clc
push
outs
in
cld
or
push
or
and
push
rcl
call
xchg
mov
xor
sbb
push
xor
sbb
test
jnp
mov
jb
xchg
push
jle
xchg
int3
cmp
add
and
cmp
arpl
xchg
mov
movs
movs
push
jge
ror
sbb
pop
pop
push
sahf
popf
xchg
std
aaa
or
into
shr
call
mov
pushf
aam
pop
(bad)
rcl
xchg
mov
cdq
idiv
xchg
push
call
mov
in
pop
and
test
inc
sar
cli
pusha
outs
pop
push
(bad)
add
push
add
jbe
imul
dec
mov
jg
sti
outs
test
dec
pop
cmc
jo
pop
arpl
scas
push
aad
(bad)
and
addr16
fwait
out
jmp
jno
cdq
adc
xor
push
dec
jne
fstp
lods
inc
add
retf
mov
xor
movs
bnd
in
push
int
cmp
data16
scas
jl
scas
cs
mov
idiv
add
mov
pop
jo
sbb
out
add
movs
push
add
idiv
cmp
(bad)
imul
lds
std
out
in
push
cmp
xchg
jge
cs
into
(bad)
cmp
ficom
shl
ja
data16
mov
(bad)
xchg
jmp
les
cmp
inc
je
jo
popa
loope
fadd
xchg
shl
les
fs
outs
or
cmps
jge
mov
out
xor
pop
retf
mov
lods
xor
mov
pop
mov
push
bound
enter
sbb
add
lahf
lea
ss
test
fisub
pushf
adc
xchg
inc
push
pop
mov
jle
xchg
dec
neg
fs
std
mov
mov
dec
xchg
addr16
and
dec
inc
loope
ret
xor
das
jmp
add
imul
aad
cmp
cli
mov
xchg
sub
call
jmp
push
std
push
loope
xchg
xchg
lods
leave
shl
mov
scas
fwait
adc
inc
stos
add
cmp
mov
sahf
(bad)
aam
pop
cs
scas
mov
mov
cmp
out
int
shr
xchg
and
sub
mov
jl
or
push
dec
mov
int
inc
push
pushf
sub
jmp
xchg
loop
movs
scas
xor
push
test
dec
outs
and
sti
(bad)
pop
mov
push
mov
mov
sub
sahf
and
int
test
mov
ss
shr
outs
pusha
pop
ds
aas
test
sbb
and
leave
jmp
add
js
jb
cdq
jae
les
(bad)
sub
mov
xor
(bad)
icebp
adc
jg
xchg
hlt
mov
out
pusha
lods
mov
cld
sbb
mov
call
add
adc
cdq
pop
inc
inc
push
and
add
mov
xor
cmps
jg
(bad)
mov
mov
mov
test
mov
sub
sub
sbb
cmp
cld
int3
mov
mov
jp
into
popa
enter
dec
scas
aaa
(bad)
and
push
cld
das
mov
retf
adc
(bad)
retf
xchg
jns
ins
mov
call
xor
jle
fild
sub
rcr
das
into
pop
pop
push
sbb
and
retf
stos
add
mov
or
das
lods
inc
jae
retf
ja
mov
and
cdq
jnp
add
mov
pop
mov
sub
pop
icebp
or
cmp
sbb
push
je
inc
ret
add
mov
(bad)
repz
xchg
xor
jg
mov
add
mov
mov
mov
push
dec
sub
enter
cmp
(bad)
lods
or
repnz
adc
ret
xor
test
add
cmp
not
sbb
add
inc
sbb
adc
push
xlat
popa
addr16
push
sbb
mov
cdq
ret
(bad)
in
enter
mov
div
adc
jno
add
(bad)
pusha
inc
add
jnp
push
mov
in
lods
jb
sub
pop
mov
stos
jmp
sbb
into
cmps
inc
inc
adc
shl
mov
test
es
mov
sub
test
jg
adc
mov
adc
loopne
push
mov
add
mov
mov
iret
fisubr
rcr
add
shl
(bad)
push
in
cli
test
js
add
cs
mov
xchg
or
hlt
fst
enter
sbb
push
adc
and
hlt
pop
ret
push
mov
movs
pop
enter
stc
mov
or
in
mov
xor
pop
loopne
repz
cwde
call
mov
out
dec
test
(bad)
jecxz
and
in
test
call
into
mov
jl
adc
mov
mov
pop
pop
je
loop
js
out
mov
or
outs
mov
mov
ds
aam
mov
call
push
cmps
push
out
pushf
fild
in
stos
popa
stc
inc
in
test
and
add
nop
mov
jecxz
pop
in
inc
mov
mov
sub
jp
loopne
cs
sti
in
xchg
stos
bound
repz
lds
es
cmp
loope
xor
(bad)
(bad)
in
into
mov
xchg
inc
clc
(bad)
xor
cmp
outs
inc
xchg
inc
outs
cmp
lods
mov
dec
and
ja
call
add
mul
push
and
xchg
cwde
cmp
jmp
xor
jmp
fimul
adc
int3
lahf
sbb
adc
aaa
cmps
cmp
mov
scas
push
test
movs
lea
test
lds
jo
mov
scas
sbb
dec
mov
daa
fild
popf
ss
loope
add
mov
cmp
div
hlt
push
jp
sbb
mov
pop
pushf
pushf
xor
retfw
ds
jp
sbb
add
in
(bad)
mov
test
pop
scas
inc
sbb
mov
out
int
dec
pusha
sub
div
xchg
mov
loopne
cli
sbb
sub
stc
lds
(bad)
push
clc
lock
mov
cmp
std
mov
cmp
std
sar
stos
enter
pop
imul
cmp
fldenv
cmc
cmp
add
nop
jp
das
popf
icebp
cmp
push
jae
mov
jno
mov
test
mov
sub
fistp
jne
mov
sub
inc
dec
xchg
add
icebp
and
xchg
xor
jbe
fwait
(bad)
sbb
fsub
outs
jo
ss
push
aam
sbb
imul
mov
add
popa
int3
rol
dec
pusha
xchg
dec
daa
pop
sbb
clc
jge
jge
out
rol
in
cmp
and
gs
test
adc
pop
inc
test
mov
pushf
(bad)
adc
cmp
sub
mov
gs
add
add
jecxz
leave
pop
jmp
cmp
test
xor
adc
xchg
dec
xor
cmp
icebp
pop
mov
push
push
popf
or
mov
xchg
mov
rol
mov
mov
repz
sub
loop
fs
cld
jne
(bad)
jmp
add
mov
add
call
scas
inc
xchg
lea
dec
std
ja
test
lock
je
(bad)
lods
jmp
das
inc
mov
je
dec
push
xchg
cmp
mov
cmp
add
xchg
add
jl
in
aad
adc
stc
pop
jo
mov
mov
mov
mov
arpl
cmp
jmp
ficomp
or
or
shr
enter
test
xor
imul
dec
cmp
int3
sub
lds
daa
gs
test
push
dec
lods
push
jmp
inc
dec
jo
lea
add
jge
push
dec
cld
adc
movs
cmps
dec
push
popa
mov
xor
pop
xchg
dec
(bad)
push
push
dec
and
aam
push
sti
clc
test
call
xchg
movs
adc
gs
sub
lods
xchg
inc
xchg
sub
mov
in
adc
es
push
mov
and
or
and
mov
dec
inc
popa
sub
lahf
jmp
fwait
cli
cmp
retf
push
mov
dec
popf
pop
mov
cmp
pusha
inc
ror
mov
mov
movs
mov
sub
mov
inc
push
push
add
lods
popa
sub
push
gs
in
loope
xchg
adc
cmp
inc
mov
imul
mov
add
xor
retf
mov
test
pushf
jmp
and
adc
xchg
xchg
cmps
mov
mov
fwait
inc
dec
cmp
inc
clc
xor
cmp
call
mov
jp
enter
sbb
adc
adc
adc
xchg
test
(bad)
aaa
mov
sub
add
add
or
mov
and
xchg
cli
or
mov
add
xchg
mov
jecxz
xchg
xor
mov
sub
pop
push
and
mov
adc
rcl
jo
pusha
loopne
jmp
push
inc
mov
mov
fs
mov
stos
dec
pop
std
out
or
test
mov
cmp
test
xor
cmp
adc
pushf
fdivr
mov
sahf
loope
jg
hlt
loopne
retf
add
mov
stos
push
sbb
mov
xor
jmp
xchg
push
or
cmps
stc
cli
mov
(bad)
addr16
push
and
or
cdq
or
mov
inc
int
mov
xchg
std
out
gs
pop
and
shl
dec
pop
add
int3
sbb
test
daa
cmp
fst
dec
sbb
ja
push
sub
jmp
pop
and
(bad)
outs
xchg
pushf
neg
(bad)
push
and
cmp
adc
xchg
frstor
mov
lods
mov
mov
sub
jbe
jns
(bad)
ror
(bad)
dec
retf
mov
call
xchg
data16
aad
outs
repz
push
jl
mov
push
cmc
mov
mov
and
adc
jge
inc
in
sub
sbb
push
in
fwait
adc
cli
or
outs
ret
popa
dec
xlat
jle
imul
push
iret
js
add
push
iret
mov
aaa
add
jns
ins
aas
test
xor
mov
bnd
ss
sbb
dec
add
outs
pushf
push
imul
gs
stc
mov
sub
mov
icebp
inc
or
jecxz
cmp
rcl
or
lahf
mov
mov
mov
adc
fistp
inc
push
enter
out
mov
dec
jns
pop
les
lods
mov
retf
fbstp
int3
push
and
or
push
loopne
pop
xlat
into
push
cmp
add
scas
cmp
mov
dec
data16
mov
lods
cs
xor
sub
fild
push
sahf
pop
inc
test
adc
cmc
mov
mov
jmp
mov
mov
xchg
jg
dec
jecxz
sar
mov
clc
pusha
out
pop
jnp
mov
lds
inc
jns
xchg
sbb
out
movs
and
cmps
jbe
dec
lods
push
test
cmp
xor
imul
dec
in
ja
sbb
into
push
jg
idiv
pop
xchg
pop
dec
xchg
ins
xor
and
push
push
inc
ja
inc
fld
out
jp
pop
and
popa
xchg
xchg
(bad)
loopne
int3
je
mov
sti
mov
sub
and
push
int3
je
into
sbb
bswap
push
push
gs
aad
push
movs
loope
jo
repnz
cdq
inc
xor
jl
cwde
xor
inc
data16
rcl
inc
rcl
cli
idiv
sbb
sbb
in
cwde
fldcw
inc
loop
mov
movs
pop
test
lods
mov
es
repz
adc
mov
cwde
fwait
hlt
jl
sbb
idiv
cmps
adc
dec
push
sbb
pop
ds
or
sahf
add
iret
mov
push
xor
fcmovnu
aaa
xor
cmp
push
arpl
mov
test
std
cmp
inc
cmp
mov
jle
lds
leave
mov
sar
and
prefetcht1
add
clc
adc
pop
or
cs
inc
pop
jl
movs
enter
fs
xor
pop
retf
pop
mov
jl
imul
imul
adc
in
sbb
data16
out
or
jb
mov
jns
lahf
and
psrld
sbb
mov
retf
add
enter
xchg
addr16
push
push
and
loope
popf
ins
in
pop
jb
rcr
mov
jo
cmps
hlt
pop
push
inc
ret
push
in
jmp
mov
xchg
mov
retf
xchg
dec
jle
dec
cmp
or
jp
aaa
call
push
cs
(bad)
lock
in
mov
push
adc
rcl
lea
outs
or
dec
ret
test
sbb
pop
mov
cmp
outs
(bad)
scas
jl
adc
aam
xor
jno
std
sub
cli
out
and
add
add
mov
cmps
pusha
stc
inc
sbb
int
jp
arpl
popa
sub
nop
inc
adc
xor
shr
lahf
stos
aas
jne
push
aam
icebp
enter
pop
pop
leave
adc
mov
push
mov
mov
xchg
cmp
jb
cmp
mov
aas
and
xchg
sub
(bad)
cmp
loopne
sub
mov
idiv
ror
add
add
cmp
leave
xor
inc
leave
enter
dec
out
lods
sbb
mov
and
jecxz
pop
out
imul
es
jno
and
push
das
cmp
jmp
data16
push
and
pop
bound
jmp
sti
ret
call
clc
mov
js
cdq
push
mov
shr
jbe
mov
mov
(bad)
xchg
cli
imul
cmp
or
xchg
mov
in
mov
cmp
fwait
iret
bound
stc
pop
lods
pop
aad
inc
stc
mov
neg
icebp
dec
(bad)
jp
or
and
(bad)
std
xchg
mov
into
dec
sbb
iret
and
adc
outs
(bad)
add
pop
sbb
es
test
aas
aaa
ins
fadd
push
adc
repz
xchg
xchg
push
mov
(bad)
jecxz
pop
jns
mov
add
pop
push
xlat
push
std
adc
jo
std
xchg
arpl
das
gs
mov
mov
(bad)
pusha
sahf
and
add
xchg
inc
adc
jbe
jnp
mov
test
add
cmc
or
jno
leave
leave
jmp
adc
pop
dec
jo
arpl
repz
jns
pop
gs
sahf
jp
dec
sbb
(bad)
inc
inc
pop
in
aam
push
push
mov
rol
jp
inc
fwait
jmp
add
add
pop
sti
cmp
int3
cmc
outs
fs
push
pop
pop
retf
loop
mov
or
stc
test
aas
mov
inc
stos
adc
popf
je
iret
push
hlt
inc
(bad)
sti
dec
movs
lea
jg
dec
aaa
icebp
pop
test
dec
daa
pop
and
ret
jbe
xchg
rcr
adc
jnp
(bad)
es
adc
sub
xor
daa
dec
xlat
test
cdq
outs
xor
mov
mov
test
ins
fidivr
push
sbb
mov
pop
aad
gs
sub
jge
dec
xchg
lahf
movs
cs
dec
lds
dec
sbb
cld
je
pushf
ins
lods
dec
xor
or
or
int3
rol
rol
jp
mov
jmp
cmp
jecxz
ret
movs
push
sub
dec
inc
scas
sbb
push
cmc
mov
cmp
push
out
mov
sub
mov
push
sbb
std
and
mov
dec
xor
(bad)
push
(bad)
jbe
push
pop
shl
add
fisubr
test
hlt
lds
adc
push
cwde
ins
pop
imul
pop
push
add
pop
add
or
jae
mov
add
or
ret
fnsave
fisttp
(bad)
push
cmps
popa
jno
sbb
test
shr
dec
or
out
sahf
xchg
jne
js
xor
jp
cmps
sbb
(bad)
loope
pushf
je
xchg
xchg
and
aaa
jmp
inc
idiv
outs
retf
fcmovnbe
push
dec
lock
cmps
sbb
xchg
aad
pop
mov
fiadd
shl
sub
push
dec
cld
sbb
xchg
mov
add
test
and
adc
dec
sbb
ins
aas
and
inc
add
jl
ffree
mov
mov
mov
fnstsw
mov
cmc
daa
mov
mov
cmps
bound
(bad)
jmp
mov
push
rol
jle
xor
pop
imul
add
xor
or
jge
out
pop
(bad)
sub
cmps
inc
add
fild
or
adc
aad
xchg
fsub
(bad)
imul
sub
es
pop
(bad)
retf
push
mov
fnstcw
adc
fs
mov
mov
and
and
cmp
pop
mov
or
jle
inc
ins
das
jno
sbb
jo
push
add
out
pop
dec
inc
sbb
out
and
lods
std
xor
popf
dec
jp
enter
jle
adc
xlat
std
test
pop
mov
int3
jg
(bad)
push
ficom
push
imul
into
fwait
bound
cli
lds
loope
std
or
xchg
or
add
add
popf
iret
stc
mov
mov
repnz
push
adc
shl
mov
inc
aad
loopne
sub
sbb
push
es
mov
dec
xor
xchg
add
in
imul
lods
inc
mov
or
and
push
cmps
mov
int3
sub
pop
jne
lods
inc
push
mov
push
xor
(bad)
and
clc
repnz
repz
sub
pop
scas
aaa
lods
mov
push
(bad)
jmp
lods
mov
adc
jo
or
shl
loope
push
popa
(bad)
push
lods
push
rol
lea
pop
xchg
ins
hlt
mov
(bad)
jmp
scas
ror
xchg
mov
xchg
dec
xor
jo
mov
sahf
mov
cdq
xchg
bound
cmp
nop
mov
retf
mov
pusha
jmp
(bad)
sub
daa
mov
call
add
push
aas
(bad)
icebp
aaa
push
cmp
int
xchg
inc
sub
xchg
pop
loop
mov
cmp
mov
dec
jmp
out
jge
and
arpl
addr16
mov
loop
lea
call
aam
addr16
mov
mov
pop
mov
cmp
(bad)
test
imul
sbb
mov
xor
sbb
inc
mov
xchg
push
test
(bad)
cmp
push
xlat
and
fbld
or
xchg
jne
jno
mov
jecxz
jo
push
sbb
rcr
cs
inc
test
gs
add
out
xchg
mov
xchg
mov
jmp
(bad)
mov
jmp
mov
outs
(bad)
jmp
dec
(bad)
mov
stos
push
or
scas
pop
or
adc
pop
mov
xchg
pushf
jge
adc
pop
fs
por
mov
or
dec
jmp
fucomp
scas
and
movs
int
xacquire
push
mov
inc
or
(bad)
mov
pushf
adc
out
or
pusha
cmp
pushf
ss
xchg
add
dec
cmp
sbb
shr
js
xlat
outs
in
xchg
mov
jp
pop
into
mov
dec
mov
icebp
sahf
xor
cmps
dec
cli
dec
clc
xchg
pop
popa
scas
dec
bnd
inc
mov
xchg
push
push
ss
mov
push
cli
pop
dec
dec
out
sub
lods
inc
je
xchg
cmp
sahf
retf
data16
ds
pop
inc
cmp
mov
popf
mov
jmp
push
mov
es
xor
ss
inc
cmp
int
test
pushf
sbb
jne
das
sar
hlt
movs
js
xchg
or
cmp
(bad)
daa
stos
sub
fist
inc
gs
call
inc
js
xor
mov
shr
adc
jmp
sub
int3
bound
and
cmp
popa
test
popf
mov
popa
xchg
mov
sbb
adc
jnp
test
test
pop
xor
mov
push
mov
jb
test
xor
and
adc
movs
xor
shl
les
mov
xor
or
push
cli
rol
sub
cwde
and
imul
rcl
mov
(bad)
mov
push
loope
cwde
inc
sub
outs
mov
and
jl
arpl
clc
gs
mov
xor
mov
inc
lea
ins
or
or
repnz
add
push
nop
mov
clc
xor
inc
push
aam
nop
inc
sbb
ins
sub
call
ins
icebp
stos
pop
ror
adc
ror
frstor
test
pusha
pusha
lods
and
sbb
pop
mov
ja
movs
mov
push
(bad)
and
ins
fistp
cmp
not
je
mov
ins
fisttp
cmp
test
cmps
inc
dec
enter
mov
xor
mov
add
daa
add
mov
xchg
mov
outs
or
or
cli
out
and
inc
retf
mov
or
mov
sti
inc
fisubr
cmc
stc
inc
cmps
dec
movs
retf
add
retf
pop
arpl
mov
jp
neg
test
pop
mov
mov
test
push
je
mov
neg
sbb
sub
xchg
gs
mov
jns
xor
sub
push
push
sub
dec
enter
mov
and
aaa
les
sbb
lds
or
or
push
add
imul
pop
xor
nop
mov
sub
movs
or
push
inc
adc
pusha
dec
loop
sar
mov
push
pop
mov
push
test
je
pusha
push
sbb
ficom
jmp
or
data16
sahf
les
outs
or
cmps
pop
lock
scas
ss
jo
aam
inc
imul
ret
fs
xor
lds
xor
iret
popa
jl
inc
lods
jmp
mov
movs
push
ss
push
cld
pop
push
inc
xchg
xor
neg
in
call
mov
mov
mov
inc
push
xor
movs
cli
push
xor
push
ja
dec
and
push
pop
xchg
pushf
bound
sub
and
pop
dec
adc
cmp
pop
pusha
dec
jnp
rcl
aad
rcr
inc
ins
push
stos
jbe
rcl
and
cmc
test
xor
adc
jmp
inc
(bad)
js
xchg
inc
jbe
mov
outs
push
pop
neg
retf
lods
push
mov
fwait
mov
sbb
mov
in
xchg
mov
ds
stos
cmp
lahf
jns
cs
pop
pop
loop
jmp
in
loop
ss
pop
xchg
push
mov
scas
pusha
test
cmp
shl
dec
jl
adc
imul
clc
test
inc
mov
add
jno
jg
ins
add
and
mov
mov
xchg
arpl
xlat
scas
ins
nop
push
or
aad
inc
inc
inc
adc
sub
out
test
(bad)
retf
jbe
mov
outs
dec
and
cs
out
dec
fwait
jbe
and
fwait
xor
in
inc
data16
mov
add
xor
jmp
push
pusha
ins
dec
jno
out
rol
jns
test
jo
mov
mov
mov
int3
xchg
jecxz
aam
adc
jmp
call
or
pop
movs
or
jge
add
addr16
push
pop
bound
lods
bound
mov
and
popf
or
daa
push
mov
and
inc
iret
fcom
or
sub
inc
xor
push
mov
adc
(bad)
repz
int3
sbb
inc
mov
mov
add
or
adc
dec
sub
or
or
jns
mov
stos
fstp
jg
push
and
mov
dec
call
shl
push
cs
dec
cmc
fisttp
out
adc
rcr
sbb
pop
sub
mov
adc
or
pop
int
arpl
cmc
fs
mov
loope
jnp
add
int3
mov
mov
les
sub
mov
xor
addr16
jnp
dec
(bad)
jae
cmps
outs
mov
sbb
iret
inc
aad
pusha
lahf
mov
mov
xchg
(bad)
sbb
cwde
repz
pop
test
sub
or
into
retf
gs
adc
push
idiv
xor
mov
or
cmp
sub
push
nop
pop
mov
inc
and
pop
int3
test
adc
mov
push
pop
mul
push
and
jns
cmp
jne
xor
sub
clc
xchg
cmc
xchg
inc
mov
rol
inc
mov
xchg
and
adc
cmp
out
mov
push
jno
(bad)
(bad)
pop
mov
lahf
ror
push
mov
jo
loopne
jno
cmp
add
mov
jle
mov
icebp
sub
mov
rcr
mov
(bad)
sbb
fsub
and
pop
inc
jmp
push
mov
das
jbe
cmp
sbb
mov
xchg
push
les
fs
sbb
add
sub
(bad)
cmc
pop
aad
xlat
add
mov
cmp
jmp
xchg
mov
inc
int3
sahf
sub
ja
or
xor
pop
jle
popa
xor
js
les
aas
or
jmp
retf
repnz
mov
in
xor
lods
popf
mov
add
ret
add
imul
int
jae
push
repz
mov
jo
and
cwde
sbb
cmp
xchg
sbb
mov
and
mov
xchg
icebp
ins
aad
loope
std
aam
pop
mov
loopne
jbe
into
mov
(bad)
sub
imul
std
or
loope
pop
ss
(bad)
xchg
fdiv
repz
mov
icebp
sbb
(bad)
sub
imul
or
outs
ss
sbb
dec
mov
pop
cmp
xchg
call
jmp
pop
dec
cmp
js
xchg
into
ficom
popf
imul
jb
rol
push
aas
and
xor
inc
ficom
push
push
cmp
sub
cmp
jno
sbb
jnp
xchg
fidivr
sub
push
xor
push
sar
jecxz
mov
cld
push
movs
addr16
adc
fincstp
xchg
enter
cmp
bound
and
xor
mov
adc
mov
inc
mov
(bad)
sar
jne
mov
dec
test
jo
xchg
adc
retf
in
(bad)
push
xchg
pop
mov
sub
push
stc
jg
jb
ds
ja
add
mov
cmp
pop
push
(bad)
dec
or
jl
jp
jg
int3
aas
repz
outs
cmc
cmc
xchg
and
sub
sub
aas
inc
(bad)
dec
mov
jo
repnz
aam
add
out
jo
daa
or
xchg
enter
ds
jg
lds
add
push
sbb
(bad)
fbstp
push
sub
int
inc
sar
push
mov
(bad)
dec
mov
sub
arpl
sbb
sub
shr
add
cmps
cmp
shl
mov
cmps
push
push
xchg
outs
loope
icebp
push
xlat
mov
(bad)
bound
aaa
loop
sub
push
pop
stos
and
out
js
pop
sbb
pop
cwde
inc
imul
cdq
fisub
cmp
inc
icebp
xchg
dec
dec
ins
mov
jle
out
retf
arpl
push
aad
cld
xor
cs
hlt
sub
dec
ins
xor
pop
jb
loop
dec
push
dec
retf
out
mov
pop
(bad)
outs
xor
imul
sub
mov
xchg
jo
cwde
pop
scas
scas
and
dec
bound
and
mov
dec
dec
xor
jbe
into
in
popf
pop
or
jge
cmp
pusha
push
imul
test
mov
inc
push
mov
jnp
and
adc
fld
sbb
inc
pop
icebp
xchg
out
mov
jne
jbe
mov
movs
lahf
in
int3
mov
imul
sub
xor
xor
or
adc
cmps
inc
fcomp
jmp
mov
sub
je
sub
xchg
call
jo
adc
jp
scas
xchg
and
cmp
mov
sbb
xchg
mov
fs
test
fcmove
jns
js
fbstp
mov
dec
in
fistp
mov
cmp
sbb
ins
fld
in
inc
stos
retf
stos
push
jo
(bad)
repz
jns
xchg
repz
pop
cmp
pushf
outs
in
pop
dec
mov
xchg
(bad)
pop
jl
ss
in
pop
ret
das
mov
clc
aam
leave
xchg
dec
imul
push
ja
jmp
jge
and
out
adc
scas
pusha
call
fcom
loop
fimul
frstor
leave
mov
arpl
ja
imul
pop
mov
mov
test
cmp
mov
and
sub
and
cmp
leave
sbb
sbb
cmp
ds
call
cmp
dec
rcl
lea
jo
push
jmp
sbb
inc
test
sub
stos
mov
out
test
shl
push
dec
dec
pop
fwait
das
std
sub
cli
cmps
repnz
cmps
dec
mov
pop
push
or
not
jle
mov
data16
mov
data16
fcmove
imul
rcl
xlat
xor
fbld
pushf
mov
mov
hlt
loop
xchg
cmp
xor
push
and
pop
cmp
gs
pop
leave
jne
enter
dec
sbb
cdq
jbe
cmps
fsubr
std
or
mov
sbb
jp
in
mov
mov
call
cmp
jo
add
retf
mov
mov
mov
repnz
cs
cmp
mov
std
mov
cmp
pop
push
icebp
popa
fdiv
xchg
add
pusha
ins
inc
jl
cmc
pop
jg
mov
stc
sti
in
(bad)
popf
mov
scas
retf
lea
adc
fbstp
xor
sub
xor
or
adc
add
jns
leave
or
xchg
sub
push
xor
pop
fs
push
add
jae
mov
mov
imul
enter
inc
inc
cld
jbe
aaa
imul
inc
scas
mov
iret
(bad)
int3
aas
or
inc
dec
iret
rcl
std
or
ret
jne
out
pop
je
jl
adc
popa
pop
scas
outs
outs
fs
mov
jecxz
fsubr
aam
jmp
inc
add
xchg
mov
lahf
inc
push
mov
push
push
fisttp
pop
fwait
iret
mov
ror
(bad)
push
(bad)
add
stc
jg
mov
js
push
dec
inc
mov
lods
fs
xchg
repz
sub
lock
pushf
(bad)
ins
adc
cmp
test
mov
xlat
pop
ret
call
mov
test
and
xor
(bad)
ja
mov
push
mov
mov
mov
jno
mov
inc
fadd
push
dec
inc
jae
lahf
in
adc
fadd
cmp
cmp
xchg
mov
retf
xor
dec
stos
push
cmp
xchg
adc
pop
cdq
add
push
(bad)
imul
cmp
cld
iret
in
jo
inc
push
stc
xor
sub
or
mov
cs
pop
mov
in
inc
je
mov
jbe
xchg
arpl
ret
(bad)
and
cmc
push
mov
pop
out
cmp
repz
add
daa
outs
leave
dec
push
in
lahf
aad
mov
jmp
rol
pop
push
xchg
xor
jb
push
nop
stos
sub
out
int3
jno
xlat
(bad)
fist
mov
retf
out
icebp
pop
mov
pop
loope
fsubr
adc
call
imul
push
jmp
jmp
out
adc
stos
retf
ds
xor
xor
fisubr
inc
cmp
xchg
xchg
cmp
not
pop
sub
dec
jle
push
xrelease
adc
neg
pop
imul
prefetcht1
xlat
jb
mul
inc
sti
mov
int
or
lods
je
aad
jle
lds
scas
inc
sar
mov
mov
mov
dec
dec
(bad)
mov
jbe
repz
push
ss
add
in
mov
in
push
or
addr16
repnz
dec
jl
xchg
cld
inc
fnstsw
mov
test
cmp
jne
and
dec
cmp
sbb
sahf
js
sahf
push
popa
rcl
fst
xor
xchg
pop
fnstsw
adc
nop
aad
data16
call
pop
inc
stc
outs
jns
and
inc
lods
(bad)
loopne
lods
cmp
daa
outs
in
nop
or
(bad)
aaa
movs
push
cmp
inc
push
mov
outs
out
push
lahf
or
fs
sar
bound
ficom
jge
mov
stos
aad
xor
jecxz
xchg
and
push
fild
call
movs
sbb
arpl
jno
test
in
ret
jnp
int3
inc
sub
cli
xchg
out
xor
rol
jmp
test
(bad)
mov
movs
lahf
xchg
ja
mov
fs
sub
mov
in
add
ins
jns
and
shl
call
sub
enter
cmc
(bad)
mov
mov
mov
shr
cwde
(bad)
jno
push
mov
lea
sbb
leave
clc
dec
jmp
test
mov
aam
jae
shl
pop
fnstcw
lea
mov
mov
mov
push
jle
adc
loope
ins
addr16
rol
lahf
dec
mov
jnp
aaa
adc
sbb
scas
imul
sbb
mov
fcom
(bad)
pop
cmp
ss
jns
(bad)
mov
aaa
mov
leave
adc
and
adc
enter
xor
and
repnz
inc
inc
inc
in
mov
xchg
cld
adc
call
add
sbb
cli
lds
je
in
icebp
(bad)
jl
cmp
ficomp
sbb
pop
and
nop
loope
retf
add
test
scas
fcomp
daa
jbe
test
cmp
push
push
(bad)
imul
fimul
ror
lahf
xchg
jp
mov
mov
sbb
(bad)
jecxz
fst
cmp
xor
xor
push
mov
adc
sar
pop
mov
push
mov
(bad)
fist
inc
or
(bad)
xchg
sbb
repz
push
call
mov
mov
ror
dec
and
dec
adc
dec
push
dec
add
clc
jmp
and
fcomip
cmp
dec
push
and
sbb
cld
mov
mov
pop
add
pop
test
sbb
aad
je
xor
inc
sbb
fld
std
test
leave
xor
clc
xchg
clc
mov
sbb
loop
mov
out
xor
jmp
stc
inc
jnp
lea
mov
ret
(bad)
mov
mov
dec
mov
mov
push
(bad)
pop
mov
cmps
xchg
(bad)
jg
pop
pop
pop
inc
jns
enter
sbb
mov
ror
inc
out
xor
mov
out
out
or
mov
add
cmp
jno
mov
jmp
scas
lea
sar
pop
dec
jg
push
or
adc
xchg
leave
xchg
sub
rcr
pop
or
shr
dec
enter
not
lahf
pop
fld
add
scas
mov
bound
xor
out
push
add
jge
push
enter
iret
jnp
xlat
into
adc
pop
push
hlt
enter
(bad)
mov
pop
ror
test
xor
stos
inc
push
fidivr
sbb
shr
push
mov
imul
(bad)
ins
sub
dec
cmps
mov
mov
ss
dec
sub
jo
mov
cmp
das
jecxz
mov
shl
(bad)
mov
pop
mov
jns
mov
cmps
add
add
jp
inc
xchg
mov
mov
xor
imul
cmp
arpl
into
xchg
mov
dec
jmp
pop
push
jecxz
push
dec
inc
gs
addr16
jmp
add
pop
cmps
cmp
and
mov
cdq
pop
mov
pop
sbb
sar
sbb
wbinvd
or
mov
mov
or
scas
adc
lahf
push
xchg
cld
popf
shl
inc
loope
mov
aad
add
xchg
adc
mov
js
neg
retf
stc
imul
pop
adc
and
inc
pushf
inc
(bad)
into
aas
pop
pop
clc
in
pop
outs
movs
jecxz
fs
dec
pop
and
add
gs
notrack
mov
cld
or
sub
loope
pop
add
xor
stos
and
adc
cld
cdq
loopne
repnz
in
icebp
repz
add
cmp
xor
shl
push
cmp
xor
fld
cmp
out
stos
push
popf
pop
mov
add
lods
std
bound
xor
ja
retf
xchg
aam
retf
call
inc
mov
xor
popf
xchg
cli
movs
icebp
lock
inc
mov
cmc
iret
inc
mov
pop
adc
mov
jp
hlt
test
push
cmp
bound
jne
leave
adc
imul
jmp
stc
cmp
adc
add
cmp
fimul
add
mov
push
je
out
mov
test
and
dec
pop
and
cli
jg
sti
mov
stos
mov
mov
xchg
ja
pusha
mov
daa
push
inc
or
outs
test
jmp
popf
jecxz
test
(bad)
stc
movs
sbb
adc
push
xchg
popa
push
xor
dec
enter
data16
pop
pop
pop
xor
jo
add
sti
scas
mov
push
ins
ret
xchg
(bad)
jnp
adc
loopne
pop
call
into
aas
scas
or
aam
aaa
push
aam
dec
movs
daa
push
mov
xor
test
fld
add
js
sbb
mov
fdivr
xchg
pop
adc
call
into
jmp
fiadd
sub
mov
ins
lods
enter
sbb
mov
mov
mov
mov
dec
(bad)
push
push
fidivr
cmps
mov
std
ins
in
cmp
mov
mov
inc
mov
mov
pusha
mov
loope
shl
cmp
inc
outs
inc
int
mov
dec
add
mov
sub
test
adc
xor
test
sub
mov
test
pushf
sbb
into
test
mov
adc
mov
mov
clc
adc
stos
fisttp
cmp
ror
xchg
fst
dec
repz
sbb
cmc
jo
mov
ins
mov
out
xor
dec
in
push
in
cs
xchg
retf
movs
pop
fs
dec
and
aas
jle
mov
mov
sbb
jmp
gs
lods
mov
aas
daa
cmp
inc
inc
push
xor
mov
out
pop
in
mov
cmp
sbb
dec
sub
adc
imul
dec
sub
adc
cld
inc
xchg
pop
mov
shl
es
fbstp
repnz
out
mov
outs
mov
fiadd
sbb
fisubr
pop
mov
in
into
lods
pop
inc
mov
in
or
and
xchg
push
add
jmp
jae
fld
sub
xor
shl
js
sar
dec
(bad)
pop
or
in
fdiv
mov
push
sti
mov
test
xor
cdq
(bad)
mov
xor
or
shl
in
add
sti
push
adc
(bad)
mov
xchg
mov
jmp
sbb
sbb
jle
sub
test
jbe
movs
stos
int3
pop
fiadd
and
inc
adc
fst
sbb
cs
movs
not
jbe
lods
inc
enter
sbb
or
mov
xor
pop
test
ds
cmp
scas
(bad)
rol
sbb
arpl
cmp
fst
xor
add
pop
icebp
jl
or
ins
sbb
lods
pop
adc
call
or
fdiv
cmps
xor
fld
and
xchg
movs
mov
mov
aam
bound
or
int3
mov
and
dec
mov
mov
pusha
int
mov
ret
xor
dec
and
jne
clc
(bad)
jbe
jmp
mov
add
sub
mov
pop
add
cmc
clc
inc
repz
mov
cmp
sbb
xor
push
clc
jnp
mov
sub
pop
cdq
scas
push
stos
sbb
popf
xor
ret
inc
or
lods
sti
mov
push
popa
aam
int3
push
mov
(bad)
xchg
add
ja
pop
call
xor
jg
push
xchg
adc
sbb
cmp
mov
and
mov
adc
fcom
cdq
(bad)
fwait
mov
cmp
movs
jae
push
pop
lds
(bad)
std
cmp
xlat
push
pop
std
cmps
adc
nop
cdq
hlt
or
or
xor
inc
mov
or
shl
pop
nop
ret
add
ins
sbb
in
pop
xchg
stos
inc
in
push
fs
pop
bound
or
ins
pusha
sub
cmp
add
mov
test
outs
cmp
xchg
aaa
test
ret
fisttp
push
pop
out
ret
dec
dec
jmp
(bad)
and
sbb
adc
sub
adc
scas
mov
inc
jmp
adc
xchg
(bad)
into
sbb
xchg
stc
jns
mov
jp
test
push
jmp
mov
xchg
test
push
jo
call
mov
pop
mov
xor
js
enter
and
std
js
add
cli
xchg
cld
pop
mov
stos
ds
jle
div
cdq
repnz
leave
fwait
push
push
pushf
push
mov
in
jae
push
loope
mov
push
cmp
mov
or
ss
adc
push
out
rcr
xchg
sbb
dec
jne
adc
mov
lods
sbb
sub
adc
pop
sub
jnp
shr
push
bound
loope
mov
leave
xor
sbb
mov
mov
sti
(bad)
push
lods
cmp
jmp
jmp
push
enter
(bad)
not
imul
jb
into
pusha
jge
data16
push
fstp
dec
in
cmps
jns
enter
fidivr
push
mov
cwde
stos
cmp
lods
adc
mov
out
fcmovnu
adc
test
fistp
nop
xor
pop
shl
js
dec
pop
add
push
sub
xchg
fild
sti
mov
xor
inc
jne
shl
xchg
std
dec
(bad)
ret
popa
cli
sub
or
inc
lahf
adc
imul
sahf
sub
popa
cmps
xchg
push
pop
aad
cmp
int3
mov
stc
mov
jno
mov
sbb
aam
cmp
sahf
imul
or
xor
inc
cmp
loop
in
jge
xor
retf
adc
outs
addr16
shl
retf
clc
push
out
arpl
push
cld
js
and
jge
in
jmp
xchg
add
lahf
movs
mov
mov
shl
inc
ss
mov
bound
sub
xor
cwde
pushw
cmp
sahf
mov
(bad)
sbb
mov
jno
jmp
mov
xchg
mov
faddp
pop
xor
movs
retf
add
sub
cmp
xchg
int3
sub
mov
dec
enter
dec
ret
sub
xor
icebp
jnp
cmp
dec
jg
add
sbb
aad
adc
or
jmp
ja
xchg
inc
mov
mov
xor
out
dec
mov
or
pop
jae
fsub
and
adc
loope
fisttp
loopne
imul
xor
loope
aad
sti
lods
fild
mov
mov
test
daa
push
mov
mov
js
mov
push
dec
xchg
mov
cs
loope
mov
mov
mov
and
lds
mov
xor
add
push
inc
jl
cmc
ins
mov
pop
mov
pop
push
dec
js
sub
or
cmc
mov
jle
mov
sahf
jnp
arpl
retf
sar
dec
fsub
push
or
mov
aam
cmp
and
imul
lea
jnp
or
int3
xchg
lods
(bad)
xor
xor
(bad)
inc
pusha
retf
mov
fs
pop
fldcw
mov
inc
pop
xor
adc
jg
adc
xchg
jp
scas
call
ins
mov
fwait
cmc
popa
rcr
cs
dec
cli
leave
neg
es
cmp
mov
clc
cmp
add
sub
daa
shl
xchg
mov
fbld
push
add
and
dec
das
xor
xchg
sbb
xchg
xor
mov
imul
ja
arpl
sbb
inc
fadd
into
mov
shrd
nop
push
dec
jnp
adc
mov
std
and
ror
test
into
sbb
cmp
shl
pop
mov
aad
inc
rcl
out
into
and
cmc
jb
hlt
pusha
cmps
and
jmp
imul
mov
rol
pop
dec
jae
pop
pop
enter
imul
nop
in
dec
and
sbb
es
sbb
popa
arpl
(bad)
leave
sbb
imul
mov
(bad)
ss
pusha
mov
mov
dec
dec
xor
mov
adc
jne
jmp
cpuid
lock
lock
mov
dec
cli
pop
mov
bound
fstp
xchg
mov
outs
lods
push
(bad)
test
xchg
mov
into
aam
call
imul
jmp
(bad)
test
js
jp
clc
aad
jle
rol
and
(bad)
push
mov
jno
out
ss
sbb
inc
mov
repnz
add
and
or
pop
rcr
jnp
mov
or
cli
adc
mov
mov
mov
hlt
repnz
sbb
xor
lea
jno
pop
popf
cbw
push
shl
xchg
jae
or
and
sbb
fmul
mov
dec
adc
pusha
addr16
(bad)
lahf
cmp
in
daa
push
xchg
adc
push
sub
mov
loop
push
out
mov
mov
push
cwde
mov
fstp
push
or
jle
add
mov
inc
mov
xchg
test
mov
pop
dec
cmp
mov
mov
mov
mov
sbb
out
push
mov
rcr
shl
stos
mov
outs
mov
or
push
fiadd
ins
scas
jmp
add
pop
cmp
add
push
in
pop
inc
icebp
push
dec
mov
jno
push
rcr
cwde
out
(bad)
xchg
js
and
and
sahf
mov
and
xor
ins
push
push
mov
jbe
jnp
sub
mov
loop
mov
out
pop
mov
add
inc
dec
aaa
xchg
imul
(bad)
loopne
fwait
fwait
out
dec
dec
cmp
es
sar
test
sub
aad
das
xchg
idiv
cmc
and
adc
in
jne
adc
lods
fistp
sub
sub
pop
xor
and
aas
jmp
jnp
shr
sbb
xacquire
movs
pop
std
push
jb
pop
ds
mov
jae
in
sbb
popf
aam
push
mov
mov
cmp
pop
or
push
cli
fcomp
repz
or
cmp
aam
dec
mov
cwde
scas
mov
out
inc
sbb
sbb
int
sub
loope
mov
pop
jbe
or
out
out
sbb
adc
sbb
ret
sbb
push
retf
or
adc
mov
cmp
shl
jg
mov
and
cld
rcl
xor
xor
ror
(bad)
push
xchg
or
push
test
jmp
out
shl
sbb
jecxz
ins
and
pop
sbb
(bad)
je
push
neg
dec
or
mov
jae
and
sti
xor
cmps
shl
pop
pop
(bad)
jmp
in
mov
jmp
pop
out
jmp
lds
test
stos
push
jp
cdq
(bad)
adc
xrelease
push
test
sti
adc
lea
adc
mov
jo
and
jp
add
into
ret
pop
push
pusha
scas
sbb
sbb
in
nop
(bad)
sbb
mov
int3
mov
jle
das
cmp
sbb
inc
dec
lods
xchg
add
dec
hlt
sar
adc
sbb
mov
push
dec
shl
pop
out
ds
pop
mov
(bad)
push
es
jne
cdq
pop
xor
int3
or
jge
inc
(bad)
repz
test
sbb
xchg
aam
(bad)
mov
xlat
ja
retf
test
mov
loop
cmp
jp
or
int
jno
sbb
fdiv
xchg
or
push
cmp
imul
lock
lahf
pop
mov
push
mov
dec
xchg
je
mov
scas
lods
jl
out
mov
ds
fcomip
pushf
cwde
push
mov
jg
or
retf
mov
xor
fs
(bad)
lods
std
data16
xor
adc
lods
shl
adc
fs
mov
mov
dec
push
sub
aaa
dec
dec
daa
pop
ret
sub
push
lods
scas
mov
js
inc
pop
jp
iret
add
mov
xchg
aas
inc
push
adc
adc
jp
push
leave
cmc
add
leave
je
sbb
rcr
popa
outs
pop
mov
nop
and
adc
push
xlat
movs
cmps
xor
sbb
test
cmp
add
popf
mov
mov
outs
(bad)
pop
mov
(bad)
shl
jb
and
push
(bad)
xchg
sti
fadd
fisub
xchg
mov
loop
icebp
dec
sar
ins
adc
cmp
jp
test
adc
imul
ins
cmps
imul
arpl
cdq
fadd
cmp
fisubr
in
jmp
int
xor
mov
fldpi
adc
clc
stos
jmp
test
dec
cs
es
cmp
dec
jmp
and
ins
std
or
call
push
add
sbb
inc
mov
push
xchg
ss
fstp
jmp
shr
push
xchg
int3
je
xor
dec
sahf
sbb
aad
jne
inc
hlt
sbb
fs
repz
xor
xor
xchg
fadd
mov
mov
xor
repnz
std
dec
xor
xor
cmp
(bad)
lahf
add
cmps
(bad)
or
in
enter
push
mov
les
pop
jns
mov
adc
add
jecxz
inc
jno
jmp
add
mov
mov
mov
loope
mov
xor
mov
mov
jne
mov
pushf
xchg
int3
jbe
pop
cmp
dec
jbe
mov
nop
jno
shl
mov
loope
repnz
stos
and
ja
scas
ficom
movs
lods
xor
sub
into
pop
lods
pop
je
adc
imul
cmp
pushf
pop
sbb
dec
mov
sbb
pop
push
mov
mov
js
pop
xchg
jno
shl
push
dec
xchg
out
xor
(bad)
mov
push
bound
sbb
adc
dec
xor
pop
sub
xor
xchg
dec
fbstp
and
popa
imul
xlat
sub
call
pop
aam
cmp
xor
int3
push
or
xchg
jb
pop
jae
push
retf
or
fisub
clc
into
cmps
je
aad
push
lea
not
mov
bound
xchg
aam
jecxz
leave
or
push
fcom
inc
jnp
mov
int
inc
dec
jno
popa
mov
sub
or
pusha
fsubr
fnstcw
mov
cmp
sub
xchg
xlat
cmp
lahf
jl
ds
mov
lods
repnz
or
and
cmp
push
mov
dec
push
out
pop
jae
in
jns
jecxz
shr
repz
cmps
sar
icebp
push
mov
ja
sahf
lds
mov
sbb
inc
push
stos
test
imul
pop
jb
(bad)
ins
ins
xchg
mov
and
or
mov
xor
inc
sahf
push
icebp
jnp
and
je
popf
out
xor
int3
mov
retf
push
in
cdq
(bad)
fcomp
pop
mov
add
dec
jmp
call
fisttp
out
mov
loop
pop
cwde
out
sbb
mov
xchg
mov
int
sbb
nop
xor
in
clc
retf
aas
and
ror
sar
std
inc
xchg
jmp
out
push
stos
mov
addr16
outs
icebp
sar
mov
inc
jo
pop
mov
cmps
adc
shl
jl
clc
xlat
div
imul
(bad)
mov
or
mov
and
push
call
mov
sbb
inc
add
xchg
movs
outs
jns
sbb
cmp
push
neg
pop
adc
shr
leave
sbb
mov
sub
(bad)
dec
push
ins
mov
mov
pop
inc
retf
pop
ds
les
sbb
cmp
(bad)
add
into
pop
mov
dec
pop
pop
(bad)
fxch
cmp
sub
mov
cs
pop
cli
(bad)
mov
call
mov
scas
in
mov
fs
sub
retf
pushf
inc
dec
scas
mov
out
sbb
out
sub
add
pop
repz
popf
mov
dec
out
mov
inc
sub
pusha
xor
call
fwait
int
mov
mov
std
sahf
jo
scas
or
xchg
xor
sub
mov
inc
mov
daa
in
mov
pshufw
cld
and
bound
push
sub
or
inc
jnp
sti
in
xor
or
xchg
jl
or
push
pop
mov
inc
cmp
pusha
ds
mov
pop
fdivr
mov
imul
hlt
aaa
imul
(bad)
jo
nop
add
ss
or
mov
jmp
jecxz
sub
fimul
mov
fwait
jmp
stos
dec
add
xchg
movs
sbb
sub
cmp
jo
movs
inc
inc
in
pusha
fisub
jns
in
push
js
sub
sub
xchg
ds
rcl
nop
cli
cwde
cmp
in
sub
popf
sub
inc
push
repz
int
mov
push
lods
fnsave
sub
shl
mov
add
hlt
scas
fsubr
and
cmps
test
mov
mov
dec
jmp
mov
add
pop
pop
retf
fcmovnb
add
pop
mov
outs
cmp
in
mov
xchg
mov
scas
mov
ret
add
std
add
xchg
cdq
mov
into
jp
cmp
lahf
xchg
push
mov
mov
inc
(bad)
cmps
and
imul
out
jle
pop
cmps
ror
jno
sub
push
sbb
cdq
enter
jp
pushf
jno
sahf
aas
sub
movs
shl
mov
test
and
pop
sbb
pop
push
add
pop
(bad)
push
adc
pop
cmc
and
add
or
and
add
adc
xor
mov
adc
repz
movs
scas
loope
inc
stc
loopne
mov
xchg
adc
sub
mov
sbb
mov
jp
lods
icebp
mov
mov
jle
mov
lds
(bad)
std
mov
sbb
sub
out
cs
rcl
jns
sbb
cs
movs
ins
shr
and
inc
imul
(bad)
inc
cmp
inc
ins
inc
jns
retf
mov
sar
mov
xlat
outs
and
dec
aam
or
(bad)
push
gs
dec
aad
into
sub
mov
mov
pop
jg
mov
adc
lods
jmp
ja
xchg
xor
aam
push
stos
cmp
xor
data16
xor
mov
hlt
pop
xor
cli
cld
outs
mov
stos
mov
push
sub
mov
inc
imul
aaa
int3
or
les
mov
pop
and
(bad)
or
xlat
icebp
fidivr
aad
retf
dec
shr
arpl
iret
sbb
out
cmp
je
cmp
and
sbb
xchg
pusha
xor
add
pop
cmp
loop
test
daa
ins
clc
mov
(bad)
mov
fmul
es
jmp
inc
mov
pop
popf
xchg
pusha
adc
sbb
fwait
(bad)
shl
jbe
imul
mov
outs
xchg
stos
push
sbb
inc
aam
mov
movs
dec
mov
adc
(bad)
iret
shl
mov
inc
xchg
jnp
dec
sbb
sub
cli
loope
sub
dec
fcom
pop
imul
scas
lea
adc
mov
pop
push
and
enter
sbb
enter
adc
lea
scas
sub
dec
sub
shr
xor
jmp
mov
rcl
mov
fisttp
jmp
loopne
nop
dec
xchg
pop
jecxz
and
in
inc
cli
xchg
lock
aaa
inc
sbb
jmp
mov
or
push
pushf
xchg
aam
(bad)
push
push
adc
(bad)
call
pusha
out
retf
mov
ins
sbb
or
cld
and
pop
cmps
loop
les
test
mov
add
adc
dec
cwde
fld
mov
(bad)
arpl
xor
js
add
xchg
mov
mov
stos
into
or
jmp
lds
aaa
dec
dec
mov
cmp
push
daa
dec
sub
enter
adc
xchg
mov
imul
xchg
push
loopne
lods
ret
es
mov
inc
adc
lahf
loop
daa
xchg
mov
add
and
call
lods
pop
mov
push
ror
ret
test
rcl
clc
inc
sar
xchg
mov
jge
adc
xchg
in
xor
jo
cdq
cmps
scas
cmp
jno
mov
push
out
aam
fstp
das
cmp
dec
and
sbb
pop
xor
or
jbe
xchg
xchg
xchg
inc
rcl
xchg
mov
repnz
je
mov
mov
stos
mov
popf
pop
repnz
repz
cmp
push
jecxz
xchg
out
shl
call
enter
repnz
and
jmp
mov
fucomp
pop
fild
cmc
sti
and
mov
pusha
sahf
fwait
xor
loope
cli
repnz
sbb
xchg
es
pop
shl
repnz
push
out
xor
push
jl
jl
ds
mov
inc
mov
pop
and
mov
hlt
adc
je
stos
ins
mov
cld
jb
inc
inc
ficom
add
and
add
mov
mov
mov
clc
lahf
adc
aam
jns
fdiv
fadd
xor
into
sub
das
aam
sbb
jl
call
jle
mov
adc
dec
not
and
(bad)
cmps
out
jo
retf
stos
add
fst
jo
loopne
cmp
inc
lock
cmp
clc
dec
int
jae
xor
aaa
mov
lods
or
or
pop
mov
inc
cmp
das
jecxz
cmc
pop
aam
mov
inc
cmc
scas
jnp
jne
cmc
int
or
push
add
js
push
mov
xchg
(bad)
adc
push
sub
fcmovnb
lahf
and
dec
(bad)
sbb
mov
push
push
leave
ins
call
jl
das
inc
pop
outs
push
ficom
and
fiadd
mov
aad
js
dec
jge
mov
fsub
inc
inc
pop
aaa
je
cdq
mov
movs
in
test
imul
idiv
and
aaa
data16
add
mov
push
pextrw
cmp
push
pop
fdivr
mov
sti
add
jns
pop
or
xor
out
rcl
xor
repnz
push
and
adc
repz
in
(bad)
inc
mov
jno
cmp
nop
(bad)
cmp
ss
sar
repz
add
inc
js
(bad)
xlat
sti
dec
lods
jnp
ror
sbb
xchg
mov
ja
ficomp
push
fidiv
bound
pushf
out
std
xchg
out
mov
retf
lods
pop
push
add
cmp
inc
jg
push
pop
xor
or
fmul
sub
sub
fcomp
pop
pop
inc
inc
and
mov
idiv
cld
inc
push
jnp
or
sub
cmps
cmp
jae
and
adc
shl
(bad)
mov
xchg
fs
xor
(bad)
test
out
call
ins
stos
push
push
sbb
mov
ins
xor
xor
fstp
data16
call
jmp
pushf
jle
es
sub
test
cmp
push
add
mov
or
cmp
loop
mov
adc
pushf
mov
and
icebp
xchg
repz
sub
fwait
data16
dec
das
xor
sub
fbld
in
in
pop
repz
dec
xor
test
and
jge
xchg
(bad)
cmp
jecxz
mov
jne
enter
mov
xchg
push
sahf
sub
lock
push
inc
loopne
sub
jmp
and
mov
xor
in
push
add
xchg
stos
jae
push
jmp
mov
xor
aaa
cmc
mov
fld
test
jbe
pop
out
jl
mov
push
inc
dec
add
inc
inc
in
pop
jl
(bad)
mov
scas
ficomp
call
lds
add
cmp
call
dec
ja
dec
out
out
int
mov
xchg
test
xor
mov
push
adc
aad
fdiv
enter
push
adc
add
and
cmp
mov
jne
sub
push
push
pop
fs
outs
adc
adc
xchg
xlat
aad
imul
sub
push
add
push
xor
jb
fcomp
imul
loopne
aaa
cmp
push
aaa
pop
pushf
iret
mov
dec
rcl
and
jns
pop
mov
sar
cli
add
movs
xor
dec
push
sub
mov
jg
in
out
icebp
retf
push
out
pop
aas
popf
fist
scas
js
push
sub
fsub
xor
sti
add
sahf
add
repz
mov
and
imul
scas
sbb
inc
das
and
shr
sub
aas
inc
scas
imul
bnd
cdq
push
leave
adc
mov
(bad)
jns
cmc
jecxz
test
inc
es
rol
dec
test
or
mov
cmp
push
cld
sbb
fsubr
out
push
and
lods
push
xchg
leave
loope
or
or
push
loope
xchg
ja
aaa
add
xor
dec
add
inc
mul
dec
fwait
into
and
sahf
inc
push
jp
jmp
inc
into
loop
pop
mov
or
vpunpckhbw
mov
pop
push
leave
int
cmp
pop
or
jo
cmp
xchg
loop
lds
lahf
mov
dec
mov
adc
js
add
add
bound
mov
ret
mov
out
or
inc
jmp
fdivr
sbb
scas
sbb
jb
cld
cmp
rcl
sbb
movs
test
not
pop
dec
imul
in
rcl
lock
bound
cli
and
aam
jl
ds
js
(bad)
pop
retf
hlt
js
bswap
mov
daa
sar
mov
aaa
in
retf
mov
sahf
fldcw
pop
mov
sub
dec
pop
mov
pop
jle
ds
adc
rcr
imul
xchg
int3
icebp
imul
xchg
out
mov
xchg
imul
dec
rol
sub
mov
(bad)
mov
sbb
xor
push
dec
lods
jb
push
movs
cli
bound
loopne
mov
and
inc
mov
jb
fs
xchg
dec
lods
xlat
cmps
or
dec
jmp
(bad)
fs
(bad)
pop
addr16
push
retf
xchg
mov
lods
data16
mov
jo
out
ret
sub
cmp
adc
mov
fcmovnbe
cmp
inc
(bad)
or
cmps
xchg
mov
dec
cdq
out
xor
dec
in
push
cmp
mov
ja
cmp
xchg
retf
sbb
loop
push
jmp
mov
push
push
adc
int3
inc
popa
mov
lea
sahf
cmp
xchg
int
xchg
xchg
jae
xchg
xchg
(bad)
mul
rcr
or
sbb
xchg
pop
dec
cmp
push
dec
or
ret
sub
pop
jmp
xchg
retf
mov
pop
into
aaa
ja
dec
or
pusha
xor
vrsqrtps
hlt
jae
fadd
mov
stc
unpcklps
cmp
in
lds
push
jp
cli
shr
add
mov
xchg
pop
clc
dec
push
call
push
sbb
in
ins
and
push
mov
sbb
jle
mov
sbb
scas
push
aad
and
lods
mov
and
pop
and
in
dec
mov
cmp
test
fnstcw
jb
outs
pop
cld
fcomp
fisttp
cmp
(bad)
xlat
stc
aaa
xchg
pop
test
mov
stc
inc
mov
xlat
xchg
(bad)
fdiv
xor
add
fist
fldenv
mov
je
jb
jns
dec
xor
scas
(bad)
leave
lock
adc
gs
adc
sub
fsub
cwde
add
mov
and
xor
mov
jne
pop
or
ins
pop
fmul
in
loope
sbb
cmps
hlt
popa
test
icebp
push
cmp
adc
add
jle
std
dec
and
cli
repnz
sahf
mov
popa
jg
(bad)
xchg
sub
mov
test
mov
rcl
into
mov
mov
jle
je
or
imul
or
movs
push
cmp
ror
mov
stos
xor
jge
mov
xchg
dec
sbb
add
pop
mov
fmul
sbb
jae
push
fwait
out
les
push
xor
ins
jecxz
push
sub
add
jmp
cmp
xchg
jb
out
pop
in
rcl
popa
xchg
cmp
pop
push
mov
xchg
hlt
inc
mov
std
in
and
icebp
pop
sbb
inc
inc
jo
je
add
ret
clc
jle
scas
add
(bad)
dec
mov
or
push
repnz
or
push
sub
sahf
loop
lahf
mov
sub
adc
and
xchg
mov
sbb
pop
dec
mov
por
pop
rcr
dec
adc
inc
pop
jnp
hlt
mov
les
jle
lods
mov
pop
lea
inc
ins
push
sbb
mov
mov
cdq
jnp
in
and
(bad)
adc
xlat
das
std
mov
idiv
cmp
sub
push
push
pop
inc
bound
push
outs
das
out
sar
test
hlt
loopne
stc
stos
cwde
mov
lods
cld
mov
cmp
or
mov
xchg
dec
and
shl
xchg
pop
retf
outs
mov
mov
sub
test
push
jg
push
lea
ret
pop
dec
test
mov
fs
aad
loopne
adc
ins
sbb
and
into
in
mov
xor
inc
(bad)
dec
(bad)
fist
(bad)
lods
push
and
enter
sub
aad
ret
or
pushf
xchg
out
les
lods
ror
enter
stc
inc
imul
jnp
jne
mov
sub
adc
xor
sub
cli
cmp
sbb
fld
add
arpl
push
movups
add
dec
dec
(bad)
enter
mov
std
leave
fstp
loopne
lds
xchg
cmp
ficom
mov
adc
dec
dec
fwait
sub
or
or
or
xchg
xor
dec
xchg
test
fidiv
aad
in
mov
call
das
mov
push
cmp
jmp
(bad)
(bad)
pusha
iret
dec
mov
sbb
mov
mov
mov
hlt
mov
inc
mov
cdq
mov
adc
jp
mov
int3
scas
and
iret
es
and
mov
push
nop
or
cmp
adc
jns
mov
push
ror
mov
cmp
sub
xchg
jne
ss
in
pop
test
pop
aas
dec
fnstsw
jmp
cmp
adc
out
js
sahf
xor
push
aaa
push
clc
adc
enter
or
adc
adc
push
mov
or
(bad)
lahf
fstp
cvtps2pd
or
test
inc
cli
leave
or
nop
popf
adc
test
push
aas
and
mov
and
jge
sub
pop
in
xchg
xchg
and
ret
bound
call
mov
(bad)
retf
sbb
lods
loop
mov
adc
jae
std
add
shl
hlt
sbb
mov
inc
mov
dec
dec
xlat
jne
out
xor
inc
cs
lea
jg
mov
into
jmp
sub
cld
lock
or
int3
cli
addr16
push
mov
cmp
test
nop
cwde
xor
pusha
cmp
in
cwde
outs
add
jne
loope
adc
cmp
hlt
test
ins
or
clc
xor
popf
pusha
and
and
test
dec
cdq
sbb
inc
push
adc
in
lahf
into
push
pusha
push
adc
jns
jno
daa
jns
int
or
xchg
movs
inc
push
addr16
adc
mov
shr
or
es
in
dec
push
xchg
icebp
jb
inc
pop
jmp
in
loope
push
mov
or
stos
xchg
ror
fsub
(bad)
ficomp
les
push
add
iret
cmc
out
sub
jbe
mov
jbe
cwde
adc
inc
sbb
sbb
pushf
sti
std
ds
in
mov
int
in
adc
iret
cli
loop
(bad)
cmp
in
and
mov
stos
jmp
jns
out
iret
imul
addr16
mov
push
pop
cmp
push
fbld
cmps
test
jge
cld
xlat
cli
test
icebp
pop
das
gs
inc
das
imul
mov
mov
sar
sub
mov
sti
outs
shl
test
pop
cmps
push
cmp
xchg
or
adc
mov
sub
mov
(bad)
and
je
cmp
ins
mov
jl
sbb
mov
pop
add
cwde
adc
inc
bound
sar
das
ds
inc
xchg
out
iret
repz
sbb
xor
call
push
fidivr
cwde
mov
xchg
xor
out
in
test
or
mov
pop
inc
and
in
das
les
push
add
add
cwde
test
js
inc
repnz
stos
add
sti
sub
jo
mov
lock
int3
in
mov
jb
test
mov
xchg
cmp
cs
and
jmp
pop
leave
std
push
xchg
scas
fld
in
xchg
shl
and
add
xor
xchg
push
dec
leave
sub
jmp
(bad)
sti
cmp
mov
pop
xchg
shl
mov
xlat
cmp
fsubr
iret
mov
js
mov
fwait
mov
push
test
lods
(bad)
add
iret
test
cld
stos
daa
push
mov
fdivrp
retf
js
scas
cdq
push
mov
rol
into
jno
and
lea
stos
sub
rol
fild
xor
movs
xchg
pop
jecxz
(bad)
fdivr
test
mov
pop
mov
and
xor
pushf
aas
push
cmp
jmp
cld
mov
cmp
jne
hlt
(bad)
add
jp
cmp
rol
clc
fwait
mov
imul
lahf
sub
mov
and
ds
(bad)
xor
not
inc
retf
sbb
jbe
mov
and
mov
inc
stos
in
add
and
push
jecxz
dec
in
in
js
mov
cli
jmp
cmp
mov
sbb
mov
js
cmp
xor
and
das
sbb
push
push
rcl
out
sahf
and
ucomiss
rcr
sub
mov
fstp
daa
mov
mov
lea
cli
add
call
jl
out
mov
sbb
in
in
inc
or
mov
sub
aad
cmp
jmp
cmp
cmp
sub
cmp
inc
out
clc
gs
cmp
pop
jnp
inc
inc
inc
dec
dec
xchg
js
cmp
mov
adc
dec
int3
inc
nop
inc
pusha
mov
xchg
test
inc
call
cmp
icebp
sbb
or
jbe
fdivr
ret
jo
jg
ins
mov
dec
inc
and
test
ffreep
call
mov
pcmpeqb
inc
leave
and
pop
ins
add
adc
inc
pop
das
aad
fisttp
fcomp
sbb
daa
icebp
push
xlat
inc
adc
mov
sub
dec
outs
jnp
in
fisub
inc
(bad)
into
ficomp
pop
adc
mov
mov
mov
xchg
sub
fild
xchg
movs
jae
ds
and
xchg
loope
packsswb
xchg
xor
and
xchg
sub
jns
inc
xor
mov
es
adc
xchg
inc
lds
mov
cmc
fsub
pop
inc
sbb
mov
test
ficomp
sbb
push
mov
mov
push
mov
jae
imul
clc
jge
jnp
jb
in
lods
out
mov
call
or
imul
lods
mov
mov
test
ins
test
fs
lahf
mov
lods
push
pop
setnp
test
and
mov
stc
push
movs
loopne
sbb
jmp
add
mov
mov
inc
dec
push
mov
dec
test
pop
sub
add
sub
cmp
stos
pop
push
push
push
rol
cli
jmp
out
push
and
jmp
cmp
addr16
(bad)
fisub
inc
dec
or
mov
xor
es
cmp
cmp
or
push
push
movs
inc
iret
lock
stos
jbe
pop
adc
sub
mov
xor
or
(bad)
xchg
mov
js
add
bound
jp
xchg
sbb
enter
cwde
fwait
pop
mov
daa
adc
jge
or
(bad)
push
cmp
call
adc
sahf
sbb
adc
cmp
cmp
mov
sub
arpl
sbb
mov
cli
arpl
shr
inc
pop
ins
pop
movs
push
aas
imul
and
add
push
cwde
jae
inc
lods
popf
fmul
movs
jo
gs
cs
mov
sub
jmp
rol
xor
fisttp
jl
xor
or
into
xchg
sbb
mov
lea
cmps
enter
popf
sub
mov
out
repz
lock
jmp
mov
pop
fwait
jmp
add
sub
push
xlat
mov
xchg
out
inc
sbb
mov
xchg
mov
push
jmp
ret
out
sbb
xor
repz
ror
xchg
sbb
in
fld
cmp
pop
in
cdq
scas
pusha
push
or
outs
repz
int
imul
jle
inc
sub
lods
pop
sub
sbb
pop
je
push
add
fmul
inc
xor
out
sbb
sub
out
shl
pop
repz
mov
(bad)
inc
xor
stos
jmp
or
nop
sbb
es
pushf
retf
cmps
sti
dec
or
das
jo
ds
mov
sahf
(bad)
fdiv
xchg
test
jmp
outs
xor
xchg
push
je
addr16
in
stc
addr16
and
add
(bad)
test
mov
gs
or
push
out
iret
pop
in
cld
test
inc
jae
inc
push
loope
xchg
jnp
and
sbb
add
dec
add
sbb
imul
in
(bad)
xchg
mov
lods
outs
loope
shl
cmp
and
movs
lds
in
aaa
sar
adc
in
xchg
mov
xor
mov
add
repz
inc
pop
(bad)
pop
inc
sbb
(bad)
stc
cdq
mov
(bad)
sahf
inc
xlat
add
scas
and
leave
jmp
add
dec
mov
fimul
adc
xchg
test
jbe
cmp
xchg
addr16
pop
mov
pop
sar
aas
lods
call
mov
dec
je
out
cmp
loopne
lahf
mov
xlat
add
mov
(bad)
aaa
cmps
add
icebp
jae
fidivr
pop
cmc
fs
jecxz
test
push
(bad)
pop
add
(bad)
seta
bound
dec
dec
repz
jne
adc
adc
lods
mov
push
stc
lock
std
arpl
retf
stc
and
pop
pusha
gs
jo
outs
lods
mov
mov
nop
clc
fs
sub
movs
(bad)
dec
cvtpi2ps
sbb
pop
pusha
xor
and
test
(bad)
scas
(bad)
jo
jno
shr
dec
ret
stos
arpl
sbb
or
mov
xchg
jae
and
xchg
or
fbld
and
pop
out
je
loopne
js
mov
(bad)
clc
mov
in
outs
loope
pop
mov
in
test
sar
xor
imul
sub
or
or
out
or
mov
inc
js
popf
mov
mov
xlat
add
push
in
das
xchg
fist
(bad)
and
pop
pushw
sub
mov
mov
jbe
pop
dec
xor
inc
imul
inc
dec
jl
imul
std
js
mov
or
xor
push
xor
fs
cmps
mov
mov
adc
adc
ins
add
xchg
pushw
outs
add
ror
jne
mov
mov
mov
push
xor
mov
ret
sub
dec
imul
test
in
nop
aas
sub
pop
xchg
xchg
adc
loop
inc
cmp
xor
mov
xor
mov
repnz
ja
inc
jo
dec
add
shl
fidivr
dec
leave
sbb
test
dec
or
(bad)
add
rcl
inc
mov
mov
cmps
test
add
or
dec
inc
xchg
clc
popf
jb
inc
push
lds
xchg
jmp
jecxz
push
(bad)
or
sub
sahf
fcom
or
and
rcl
leave
mov
fistp
addr16
pop
xchg
push
xchg
or
lahf
cmc
daa
ins
outs
mov
xlat
jg
add
shl
push
push
add
sti
outs
and
in
imul
mov
fisttp
xchg
adc
add
sbb
pop
je
cmp
stc
push
push
les
mov
cmp
dec
jg
(bad)
cmp
popa
sub
repz
jg
pop
mov
(bad)
bound
inc
outs
push
fistp
das
(bad)
out
add
pushf
lgdtd
ds
ret
inc
jmp
cmp
jnp
repz
inc
lds
mov
sbb
cli
or
aad
scas
push
sahf
popa
push
pop
jne
jo
push
dec
sub
mov
test
js
into
pop
test
pop
aas
add
js
mov
jmp
push
jae
das
xchg
repnz
out
lods
es
or
loope
pop
adc
call
iret
add
or
lock
xor
ds
xchg
adc
dec
bound
je
jl
inc
xchg
sub
dec
sbb
add
ret
mov
sub
jge
cmp
jmp
push
xlat
dec
test
imul
sub
iret
pop
xchg
sbb
nop
pushf
push
mov
aaa
inc
cs
stos
xor
dec
mov
cmp
fs
cli
cmps
mov
in
arpl
loope
ins
popa
sbb
shl
int
in
push
or
fimul
sbb
sbb
arpl
mov
test
push
pop
sub
push
daa
shl
sahf
clc
call
jecxz
loope
daa
mov
dec
in
mov
xchg
arpl
fdivr
dec
and
push
xor
sbb
(bad)
push
(bad)
cdq
div
nop
mov
sbb
fisubr
pop
xor
push
mov
(bad)
std
call
ret
mov
xlat
jg
cmps
addr16
cmps
rcl
sbb
aad
push
in
shl
pop
and
dec
jl
mov
xor
cli
(bad)
jg
jnp
mov
dec
cmp
nop
in
sbb
or
sub
inc
pop
pop
fs
fst
scas
nop
xchg
pop
enter
push
mov
pop
adc
or
or
and
adc
pop
mov
inc
xor
gs
sbb
lods
and
cmps
xor
inc
inc
test
enter
jae
xchg
mov
sub
ret
sbb
jmp
jno
ret
add
aaa
xlat
and
and
leave
dec
push
dec
out
jecxz
inc
jl
or
jbe
mov
xchg
or
dec
movs
xor
dec
inc
xchg
fld
int
out
cmc
mov
xor
loope
pop
xchg
and
lock
inc
cmp
pop
cmp
xchg
xor
push
popa
inc
pop
hlt
jle
cmps
hlt
xor
(bad)
sub
enter
out
imul
hlt
sub
push
pop
and
(bad)
sbb
loopne
jl
lods
lods
ds
sbb
imul
xor
fs
add
jne
ret
jg
das
enter
xchg
jp
imul
neg
fld
data16
mov
add
(bad)
lods
out
inc
adc
sbb
call
stos
dec
lods
jmp
into
ds
jg
mov
xchg
enter
add
sub
pop
jne
mov
call
lea
jecxz
fst
in
mov
lock
test
cs
cmp
movs
call
aad
adc
or
fs
rcr
loope
xor
out
bound
shl
mov
jb
mov
jb
mov
nop
sub
call
das
xchg
jo
in
sahf
xor
sbb
add
sbb
xlat
fcomp
stos
adc
jbe
cs
call
pop
cmp
int
fwait
jne
(bad)
cmps
xchg
mov
loopne
fstp
cmp
push
mov
retf
fs
jle
stc
aas
retf
sub
cwde
in
pop
or
and
or
jge
sbb
fld
push
xchg
xchg
popa
lea
mov
push
sub
retf
imul
push
xlat
and
mov
rol
aam
cs
mov
test
cmp
or
and
ret
pop
rcr
xor
call
ja
aam
ss
shl
in
mov
add
jecxz
pop
nop
inc
pop
icebp
scas
push
aaa
xor
add
fnsave
mov
sbb
stos
jae
cmp
xchg
sub
jae
sub
addr16
clc
pop
dec
outs
mov
test
(bad)
sub
ret
dec
adc
shl
rol
aaa
xor
mov
xchg
dec
pop
jbe
mov
ins
retf
mov
add
adc
push
lods
add
xchg
jo
jg
dec
and
mov
movs
pop
fist
mov
cs
test
ss
aam
fs
mov
or
jg
adc
movs
lock
mov
(bad)
mov
leavew
xlat
jns
sbb
inc
out
xchg
out
sbb
cmp
fisttp
sub
cmp
dec
sub
dec
loope
adc
test
mov
dec
sub
sahf
cmps
leave
bound
fs
pop
jno
xchg
stos
xchg
pop
mov
xchg
shl
jbe
fsubrp
and
ins
out
ja
jg
pop
cs
es
test
add
mov
inc
outs
mov
retf
add
mov
mov
repnz
sahf
cmp
push
shr
lds
adc
dec
pusha
mov
loope
jle
cld
add
mov
or
int3
shl
dec
pop
je
sbb
xchg
stos
xlat
push
in
dec
mov
test
pop
es
mov
dec
cmps
push
pop
xor
jnp
std
jmp
cdq
jno
(bad)
(bad)
inc
sti
loop
add
sub
mov
js
jns
repnz
sti
add
outs
mov
and
mov
je
and
mov
nop
jmp
push
enter
jmp
xchg
pop
iret
xor
jb
cli
and
cmps
pop
pop
in
scas
push
popf
adc
sbb
rcr
mov
(bad)
movs
mov
push
add
sub
shl
ins
fisub
xchg
push
repnz
jo
into
cmc
jae
js
mov
or
test
jmp
push
cmps
out
adc
sar
mov
jne
adc
gs
dec
xchg
(bad)
shr
std
adc
add
sbb
mov
adc
dec
add
xor
push
or
inc
sti
mov
enter
jmp
and
and
jno
mov
pop
clc
push
call
sub
fs
sbb
xor
jbe
nop
pusha
add
mov
inc
es
shr
pop
push
in
imul
xor
sub
dec
jb
mov
int
retf
mov
push
(bad)
mov
in
loope
pminub
leave
jo
jns
out
arpl
push
out
ss
mov
mov
imul
cmp
xchg
icebp
mov
(bad)
fisttp
clc
mov
jno
sub
xchg
test
in
push
push
and
jne
mov
or
sbb
add
xor
add
inc
xor
pop
aas
lahf
retf
and
sub
in
in
cdq
jne
xlat
mov
lods
dec
push
jmp
xchg
mov
bound
repz
push
push
call
cmps
std
xlat
dec
test
mov
cmp
clc
test
in
pop
std
inc
add
mov
xchg
in
mov
jge
jp
iret
mov
daa
mov
cmp
jne
fs
dec
xchg
jmp
xor
inc
mov
push
xor
fadd
pop
hlt
mov
popf
outs
cs
fmul
pop
pop
ins
pop
jge
sbb
out
shr
cld
dec
pushf
push
mov
sbb
cld
and
loop
push
out
push
mov
jmp
(bad)
int3
pop
test
ins
ins
out
lds
aaa
mov
fwait
pop
jmp
adc
inc
frstor
xor
mov
cli
dec
pop
in
inc
adc
xchg
pop
push
repz
adc
fild
inc
and
ror
test
mov
enter
not
mov
push
inc
cmp
push
jno
dec
xchg
lds
mov
sar
xor
(bad)
xchg
cs
ja
test
mov
std
out
add
in
jp
scas
sbb
sbb
ror
hlt
sub
sub
cmp
ret
and
cwde
push
mov
lahf
ja
cmp
inc
or
add
add
push
repz
addr16
fnstenv
or
jecxz
fdiv
mov
sub
test
(bad)
ss
mov
push
cs
inc
loop
cmp
ret
push
js
jge
pop
push
add
imul
mov
xlat
mov
xor
aas
jp
pusha
xchg
xchg
stc
mov
pop
icebp
push
jecxz
int3
cmp
call
rol
cmp
arpl
jecxz
xchg
dec
pusha
lock
(bad)
lea
fadd
loopne
mov
pusha
cmp
mov
retf
fild
lahf
jg
mov
push
xchg
add
cmp
mov
test
cmp
add
push
sub
cmp
sbb
sbb
enter
sbb
adc
xchg
sahf
in
mov
mov
jmp
xor
sub
sahf
ret
dec
cs
pop
inc
and
fcomp
movs
les
dec
int
aam
arpl
xlat
sub
rcl
push
inc
loopne
out
pop
or
retf
movs
mov
movs
cmp
mov
or
adc
xchg
mov
mov
xchg
pop
push
sbb
imul
mov
retf
test
stos
bound
and
shl
xchg
call
cwde
outs
hlt
jg
sbb
aas
rcr
pop
push
cmp
sub
(bad)
adc
jo
sbb
outs
lock
mul
in
push
mov
mov
lea
cmps
pusha
and
outs
pop
das
adc
add
in
lahf
adc
ins
fisub
into
sbb
push
pop
data16
out
jle
ss
pop
out
cld
int3
and
movs
sbb
mov
inc
hlt
js
sbb
inc
sti
mov
adc
aam
inc
outs
add
push
dec
mov
cs
inc
ror
mov
sti
lock
loop
mov
mov
adc
stos
cmps
test
ficomp
push
lods
jle
jae
mov
adc
cmp
and
jns
test
stos
aad
out
mov
pcmpeqb
xchg
cmp
mov
fwait
sbb
data16
mov
into
fcmovbe
inc
pop
sub
js
nop
pushf
mov
jle
and
imul
rcr
fcomp
stos
test
cld
clc
adc
jge
es
outs
mov
cmc
(bad)
add
lea
push
iret
fcmovnbe
sbb
dec
jecxz
sti
xchg
fstp
test
or
sbb
cmp
inc
jg
call
fmul
mov
in
jle
xchg
call
jno
pushf
jno
jmp
leave
mov
lds
pop
mov
int
xor
pop
outs
cmp
sub
pop
aad
fild
jbe
mov
pusha
pop
adc
inc
xchg
fld
xchg
or
outs
cmp
les
inc
arpl
sbb
xchg
and
aaa
dec
mov
cmp
enter
cmp
mov
push
jno
mov
or
push
push
inc
stos
xlat
mov
popf
(bad)
or
and
int
push
inc
xchg
out
dec
mov
push
das
xchg
retf
sti
or
xchg
inc
xor
jle
add
xchg
std
fdivr
xor
retf
push
cs
inc
push
fbstp
mov
jg
push
pop
mov
(bad)
fstp
jp
fwait
test
xor
or
fiadd
xchg
push
jmp
pop
std
jb
cmp
pop
sub
addr16
and
(bad)
out
pusha
add
push
popf
cld
repz
call
cmc
int
mov
dec
add
inc
mov
adc
mov
pop
xchg
push
fldenv
test
ret
adc
leave
add
add
(bad)
ret
gs
cmps
pop
pop
call
into
fst
mov
adc
ss
jns
loop
ss
sti
daa
mov
mov
push
inc
push
cli
int
xor
and
rol
mov
(bad)
mov
popa
retf
loope
sbb
xlat
mov
push
or
aaa
ja
je
jl
data16
das
jne
pop
and
inc
jecxz
dec
push
mov
mov
push
ret
and
push
out
adc
and
stos
shr
(bad)
jmp
hlt
loopne
(bad)
mov
or
icebp
xchg
cdq
out
and
fsub
mov
ins
cmps
cli
pop
imul
xlat
fidivr
mov
cmp
stos
fldenv
jecxz
stc
adc
das
adc
rol
out
fcmovbe
xor
daa
xor
sti
inc
inc
cwde
loopne
push
cmp
shl
pop
jmp
pop
mov
ror
int
jnp
push
xor
jecxz
mov
mov
pop
and
mov
add
push
mov
retf
add
jle
(bad)
xor
pop
leave
fnstcw
jb
inc
mov
test
add
mov
pushf
mov
into
jmp
mov
ss
pop
sahf
ror
test
faddp
sbb
jo
mov
mov
mov
ins
fwait
shl
stc
aam
cmps
test
adc
adc
jmp
cli
push
xor
repz
adc
jmp
cmc
(bad)
jl
fstp
sar
push
icebp
outs
imul
mov
loope
adc
push
mov
mov
sub
and
cmp
fcomp
pop
jns
test
inc
jns
mov
xchg
push
xchg
js
sub
popf
fwait
lahf
jnp
mov
rol
xchg
xchg
pop
jns
adc
stos
xlat
push
sbb
xchg
pop
inc
xchg
pop
jbe
fist
loope
dec
pop
pushf
inc
cmp
jb
dec
xchg
mov
mov
ret
arpl
fwait
stos
(bad)
mov
lahf
daa
jmp
in
and
test
inc
push
and
imul
mov
push
and
in
dec
sti
mov
neg
ret
lods
mov
retfw
arpl
loope
or
test
mov
jnp
and
jno
xchg
sub
loope
repz
mov
jo
mov
aad
dec
mov
iret
xchg
retf
jp
repnz
dec
mov
adc
mov
fdiv
int3
or
cdq
push
sub
xchg
aad
js
dec
lods
outs
out
mov
mov
pop
adc
into
sbb
idiv
add
out
mov
fimul
push
scas
sbb
xor
pop
inc
jmp
dec
js
cmps
push
mov
or
push
inc
ds
inc
add
push
sub
(bad)
(bad)
sahf
dec
mov
mov
hlt
out
add
mov
dec
sub
mov
jp
fs
xlat
mov
push
sbb
xchg
dec
movs
ja
mov
out
xchg
shl
and
push
dec
cmp
jge
lds
icebp
stos
sti
nop
xchg
test
outs
mov
push
xchg
adc
shl
mov
mov
in
int
loop
push
sub
push
xchg
call
sbb
or
int
xlat
aam
sti
mov
retf
xchg
mov
ja
push
adc
xchg
out
loope
or
sti
mov
push
dec
daa
leave
inc
hlt
mov
sbb
xchg
pop
mov
or
push
push
imul
test
imul
stos
icebp
cmp
ja
mov
pusha
xchg
cmp
and
mov
or
xchg
test
lds
jb
aaa
add
and
adc
lahf
mov
cmp
inc
jne
repnz
pop
(bad)
cmp
xor
cmp
pop
jmp
scas
lahf
lds
or
into
sbb
dec
sbb
aam
ss
mov
sbb
pop
cmp
aad
sbb
mov
arpl
pop
ret
cmp
outs
mov
inc
popa
cmp
lea
ret
stos
jmp
jno
movs
push
adc
cmp
or
fwait
stos
ficomp
lea
sub
pop
mov
xor
jp
pushf
pop
cwde
int
popf
xor
rep
(bad)
jmp
sahf
push
jb
mov
adc
cmp
jl
xchg
adc
add
mov
retf
xchg
popf
mov
adc
adc
aas
mov
adc
fcomp
call
test
data16
das
push
sbb
pop
and
cdq
jg
fidiv
retf
push
push
(bad)
rcl
rcr
sar
cmps
dec
jns
dec
outs
xchg
sub
sahf
mov
test
enter
stos
mov
xchg
lods
jmp
pop
add
jno
shl
or
neg
jnp
outs
fcomi
stos
call
scas
fnstenv
cmc
add
dec
add
sub
xchg
clc
call
arpl
enter
ds
leave
ret
xchg
adc
mov
xchg
adc
push
lods
das
fsubr
retf
mov
mov
sub
out
test
push
fadd
mov
in
cmp
inc
mov
retf
cmps
add
pop
mov
stos
iret
lods
jbe
xor
and
hlt
not
jp
movs
fidiv
mov
(bad)
xor
add
sub
mov
cdq
sub
jle
pop
dec
imul
mov
je
add
push
std
icebp
or
loopne
xchg
adc
cmp
out
jp
cmp
pop
cwde
xchg
sbb
adc
cli
rcl
mov
ja
xchg
retf
aaa
sub
in
jns
push
xchg
sbb
sahf
sbb
xor
ror
loopne
pop
scas
push
and
int3
les
push
cdq
xchg
aas
popf
inc
inc
leavew
jns
aad
sbb
loope
test
int
test
lea
dec
fcom
int3
fld
sub
popf
dec
adc
mov
hlt
stos
mov
add
xor
jo
popf
add
fist
add
adc
adc
jns
sbb
test
test
test
inc
sub
sbb
mov
pop
ins
push
aam
pop
xor
xchg
adc
jmp
xchg
mov
call
mov
or
jb
pop
shr
add
es
jmp
ins
js
fwait
scas
sub
aam
sub
stc
inc
lock
mov
pop
dec
push
jns
push
jl
loop
loop
aam
adc
stos
clc
addr16
stc
outs
jns
sbb
or
movs
mov
enter
imul
mov
push
mov
addr16
jg
mov
data16
aad
aam
daa
jo
ret
test
call
mov
mov
inc
jo
push
mov
sti
fwait
aam
lahf
cmc
aad
push
cld
mov
inc
lea
rcr
cbw
sar
xchg
shr
lods
jl
(bad)
cwde
leave
sub
sub
stos
dec
lock
cmps
retf
(bad)
jmp
stos
(bad)
sub
out
mov
pop
jns
and
ficom
(bad)
jmp
and
dec
imul
add
js
pop
rcl
jp
xchg
outs
jae
outs
mov
daa
push
enter
sub
loopne
daa
sub
les
sbb
int3
mov
jle
je
jnp
and
dec
push
mov
mov
mov
fdiv
add
cmps
and
and
inc
fnstsw
pusha
sub
out
jmp
ins
ss
jle
sub
lea
iret
std
cmp
mov
popf
jle
jmp
repz
push
pop
jmp
dec
lods
dec
sub
clc
neg
inc
cmp
cld
push
xchg
cld
xchg
retf
imul
inc
movs
fdivr
add
mov
mov
push
sbb
pop
and
lea
clc
aam
ficom
adc
scas
xchg
adc
push
ins
or
mov
test
shr
loop
add
mov
mov
dec
cs
out
mov
xchg
sbb
inc
cmp
dec
repnz
cmp
loop
ret
or
les
loope
repz
(bad)
sbb
outs
sbb
and
push
test
fidivr
jns
xor
mov
dec
bound
rcl
cs
pop
cwde
das
out
jno
jle
shr
iret
adc
fs
sbb
nop
call
scas
test
cmp
test
fldenv
dec
ja
mov
in
and
fidivr
int3
push
mov
(bad)
xlat
fwait
or
jmp
jnp
jo
call
ja
dec
push
sbb
les
mov
jecxz
enter
mov
push
push
out
dec
push
dec
ficomp
int
xor
and
(bad)
cld
or
push
xor
xchg
in
xchg
and
ret
sub
or
dec
xchg
ss
cmp
cwde
dec
xacquire
adc
push
lahf
cld
pop
sbb
dec
add
retf
pop
aam
cmp
pusha
cld
loope
cli
icebp
sbb
jl
sub
into
call
outs
inc
inc
pushf
mul
pop
jmp
or
or
sti
add
push
sub
jnp
xor
jno
or
cmps
push
jl
or
pusha
xrelease
popa
xor
ret
stc
nop
xor
pop
push
cdq
inc
call
sbb
js
test
add
or
fbld
pop
cmp
lock
and
or
mov
fimul
mov
iret
xchg
vsubpd
jne
push
inc
jle
sbb
in
mov
pop
push
sub
sub
ss
mov
xor
mov
jg
popf
lock
dec
and
arpl
into
cwde
inc
ret
cmp
les
sub
jnp
jg
movs
and
imul
sub
cmp
cmp
sub
imul
lods
dec
cmp
mov
jmp
add
gs
data16
retf
push
xor
movs
push
fisubr
push
mov
rcr
pop
mov
(bad)
repz
dec
and
imul
neg
ret
mov
push
xor
repz
push
and
xor
call
bound
jae
stos
(bad)
test
clc
repz
lods
jmp
add
sbb
popa
sub
jo
push
loope
jae
aaa
jbe
jnp
xchg
add
xor
adc
ret
cmp
xchg
jbe
xlat
pop
jae
or
fdivrp
js
ja
or
mov
retf
or
stc
sub
call
js
inc
por
cmp
rcr
(bad)
mov
add
push
mov
cmp
xchg
leave
popa
shl
outs
jno
gs
call
call
daa
cmp
pushf
mov
push
jecxz
gs
shl
mov
jo
aad
js
out
js
sti
and
int
add
push
sbb
popa
inc
and
jg
push
shl
retf
lahf
data16
dec
fmul
cdq
in
repnz
es
out
adc
xchg
arpl
xor
pusha
dec
pop
dec
icebp
push
add
fwait
aam
mov
(bad)
inc
nop
popf
add
and
lock
jne
loope
add
push
call
into
add
dec
aad
loope
retf
push
inc
adc
jl
jmp
xchg
cs
ins
(bad)
fimul
push
mov
sbb
add
xlat
jmp
mov
jb
jns
int3
xchg
out
push
in
cmps
add
add
retf
in
sub
mov
pop
je
stos
push
loop
rcr
sub
fsubr
clc
jb
aaa
lds
lods
inc
out
mov
aas
repnz
(bad)
sti
cmps
xchg
mov
fsub
loop
and
pushf
les
or
xchg
cld
xor
sbb
aas
adc
sahf
sti
aas
ss
pusha
adc
retf
mov
sar
xor
aam
jmp
xor
shr
ins
arpl
dec
lods
and
and
ss
and
push
idiv
in
adc
push
push
mov
dec
adc
gs
jge
inc
inc
int
jb
mov
ins
adc
mov
push
bound
jno
sub
pop
adc
pop
mov
or
sub
push
jp
pop
push
or
mov
out
rcl
inc
and
dec
xchg
sub
push
aaa
cmovge
fs
out
(bad)
mov
shr
cmps
sbb
or
shr
dec
(bad)
jp
daa
push
push
inc
mov
jp
or
push
sub
test
xchg
fwait
dec
ss
pop
dec
scas
xchg
je
test
lock
mov
call
test
enter
inc
scas
fbstp
xor
jg
add
dec
outs
(bad)
dec
cmc
cmps
pop
sub
inc
inc
arpl
pusha
ss
cmps
inc
pop
or
inc
lods
cwde
fmul
addr16
jp
fidivr
add
aas
sub
loope
stos
add
mov
rcl
push
movs
jbe
pop
xor
add
inc
(bad)
jge
mov
cmp
outs
mov
mov
fisubr
imul
add
jmp
mov
xor
pop
cwde
ror
jg
popa
jns
pop
or
sbb
mov
lahf
sbb
jb
in
or
cmp
mov
jge
xor
add
mov
pop
xor
iret
rcr
pop
loope
push
mov
(bad)
pusha
jmp
jmp
movs
es
jo
enter
ficomp
imul
shl
mov
mov
sub
mov
jo
js
daa
nop
pop
sbb
leave
lea
hlt
in
mov
ins
mov
pushf
(bad)
jl
iret
out
jecxz
inc
jg
sbb
pusha
cmps
icebp
inc
inc
cmp
je
or
push
mov
or
retf
xor
mov
in
jp
inc
pop
je
push
cmp
arpl
adc
dec
aam
mov
inc
lock
in
and
test
gs
or
rcl
data16
and
push
cmps
sar
mov
mov
sbb
pop
scas
test
cmc
xor
pushf
pop
in
push
or
inc
add
addr16
adc
pop
out
shl
jmp
adc
mov
sbb
adc
mov
push
lods
xchg
and
xor
mov
xor
mov
lds
dec
aam
pushf
idiv
adc
inc
test
popa
jne
mov
push
cld
inc
in
icebp
pop
or
retf
cli
mov
aaa
iret
dec
mov
or
push
inc
sbb
lods
push
cmps
es
test
mov
test
add
cmp
leave
xlat
cmp
and
ret
sub
jmp
mov
pop
(bad)
fdiv
adc
in
pop
pop
call
js
add
adc
push
(bad)
and
jg
mov
pop
jo
lahf
inc
mov
add
imul
adc
sbb
sbb
test
jmp
sub
aas
mov
dec
pop
out
or
dec
mov
xlat
mov
dec
daa
xor
adc
shl
fldenv
dec
int3
pop
rcl
or
stos
mov
pop
movs
das
pop
push
rcr
shl
das
fnstsw
(bad)
pop
push
or
stos
cld
pop
sbb
pop
xchg
dec
outs
xor
hlt
lds
dec
add
adc
arpl
out
in
loop
into
dec
xchg
int
sub
aas
jmp
jbe
leave
into
int3
fist
mov
scas
retf
xor
js
stos
(bad)
xor
adc
in
call
pop
lods
jle
jne
rol
movs
imul
or
and
ins
xor
xchg
repnz
dec
dec
xchg
mov
daa
jno
leave
std
aam
out
mov
push
and
fs
jecxz
push
cmp
push
mov
jno
xchg
xchg
xlat
mov
imul
or
imul
test
mov
jle
jmp
jnp
push
pusha
or
pop
sbb
xchg
gs
popf
push
dec
adc
mov
or
cmp
out
ds
cwde
mov
pop
xor
call
mov
imul
cs
rcl
es
stc
sahf
call
mov
adc
out
out
ror
int
and
jp
je
push
sub
mov
or
mov
ds
sbb
popf
test
sub
cmc
icebp
pop
call
clc
sub
lock
sub
in
test
bound
(bad)
hlt
ds
push
sbb
dec
push
mov
lods
pop
push
xchg
mov
iret
imul
mov
sbb
inc
inc
sub
rol
xor
jp
adc
out
rcr
push
mov
push
jge
daa
leave
stos
mov
clc
or
mov
pop
movsx
mov
mov
push
cmps
enter
adc
dec
xchg
pop
sahf
mov
sti
and
lea
push
stos
addr16
or
or
test
adc
cmp
inc
mov
out
inc
mov
inc
jg
pop
shl
adc
mov
mov
loopne
lahf
fist
mov
aad
mov
enter
movs
test
in
cmp
push
sub
push
clc
pop
(bad)
or
cmc
sub
xor
das
ds
cmp
mov
push
lock
xlat
mov
fcmovnu
cs
mov
mov
(bad)
xchg
in
gs
mov
add
jl
jle
xlat
loop
mov
cmps
movs
aas
gs
jp
retf
jle
leave
add
not
mov
lock
ds
cmp
lods
movs
dec
movs
jge
es
xor
cwde
stc
outs
mov
outs
hlt
pop
sub
fwait
adc
pop
sahf
jg
repnz
add
xchg
cmp
mov
repz
rcl
lea
inc
add
jo
inc
mov
mov
adc
das
out
popa
fisubr
fcom
call
jge
or
mov
jnp
add
(bad)
loopne
push
inc
addr16
adc
pop
dec
sub
fisttp
and
mov
mov
jmp
aam
popf
clc
pushf
aam
inc
sbb
sub
mov
jge
pop
and
nop
sti
sub
mov
mov
mov
xchg
jnp
sub
aaa
rcr
data16
aad
mov
mov
enter
inc
je
mov
out
jle
stc
ins
retf
aas
mov
popa
xchg
and
mov
fsub
pop
imul
sar
outs
mov
cdq
cld
add
pop
sbb
loope
xchg
jecxz
mov
or
or
cmps
gs
or
and
xchg
sbb
das
test
inc
into
mov
xor
popf
mov
mov
xchg
imul
shl
add
ret
sbb
aaa
jmp
mov
xchg
outs
inc
sbb
jno
xor
retf
ret
repnz
nop
inc
in
rcr
push
pushf
and
gs
mov
adc
mov
push
xchg
test
fidiv
(bad)
imul
cmp
mov
fdiv
pop
sbb
mov
fs
xchg
addr16
scas
call
popa
mov
pop
icebp
add
jmp
test
jne
pop
dec
or
mov
test
sub
mov
cmp
mov
sub
adc
ficom
fcmovu
cmp
push
out
mov
lods
xor
ja
into
sub
stc
cmp
jecxz
add
enter
imul
call
in
inc
rcr
aad
inc
xchg
gs
outs
adc
mov
(bad)
xor
xchg
xchg
das
cmc
jb
das
cmp
in
daa
add
ss
xchg
inc
mov
das
inc
mov
(bad)
test
imul
sub
mov
dec
cmp
ins
inc
sti
scas
stc
pop
call
xchg
push
or
test
iret
xor
int
sbb
std
inc
mov
pop
(bad)
aad
push
sbb
inc
xor
sub
or
mov
sbb
inc
inc
fnstsw
movsx
mov
mov
imul
jp
push
pop
and
dec
inc
out
fs
(bad)
mov
cmp
mov
mov
cmps
mov
pop
fcom
cmps
pop
in
jge
mul
mov
dec
bound
(bad)
stos
and
rol
or
out
pop
fld
adc
mov
rcr
sbb
mov
add
pop
clc
gs
out
popa
jg
outs
xchg
pop
je
jb
jae
adc
fstp
mov
test
push
and
cdq
mov
out
pop
xor
add
push
add
(bad)
sahf
xor
adc
pop
adc
call
in
retf
ret
push
cmp
jmp
(bad)
cmp
mov
leave
call
in
mov
(bad)
xlat
inc
clc
xlat
not
cmp
hlt
jae
test
pop
mov
fxch
in
je
pop
pop
nop
pop
loopne
test
adc
jae
mov
jmp
xadd
jge
scas
test
adc
dec
or
jmp
test
mov
mov
out
es
jbe
pop
ror
iret
mov
outs
jecxz
sti
push
mov
add
sbb
shl
les
outs
pop
jmp
pop
cmp
dec
dec
jno
xor
mov
sub
jno
ret
dec
mov
jbe
inc
mov
shl
pop
sbb
cs
mov
rcl
ror
rcl
cmp
cld
pop
adc
in
in
jg
movs
rcr
scas
mov
cmps
and
cmp
ss
(bad)
adc
push
xor
leave
ret
stos
mov
jo
loope
lea
cmc
and
movs
and
cld
sub
jmp
adc
call
xor
in
out
lods
pop
pop
cmps
pop
or
call
mov
(bad)
add
cmp
cwde
jnp
ins
pushf
aam
mov
sbb
fcom
test
xchg
xor
imul
iret
push
mov
push
nop
lods
xlat
pop
pop
scas
scas
xlat
lahf
fdivr
xchg
mov
jno
mov
dec
dec
push
in
mov
stc
test
pusha
(bad)
mov
mov
aad
sahf
in
xor
movs
call
in
lods
(bad)
fcomp
and
adc
jne
pushf
bswap
sbb
pop
jo
test
into
inc
push
pop
cmp
imul
ret
or
xchg
mov
xor
cmp
cmp
out
daa
or
mov
pop
(bad)
mov
mov
jae
ror
bound
inc
cmp
add
jne
pop
cmp
aad
les
ins
mov
iret
sub
shl
rcl
mul
xor
cmps
jl
push
sub
jge
sub
and
scas
repnz
adc
xor
out
xchg
cmp
add
in
dec
cmp
xor
loope
push
cs
and
xchg
call
mov
int3
loopne
and
clc
push
imul
and
add
js
cmps
mov
sar
inc
shl
sbb
lea
xlat
(bad)
adc
loop
outs
(bad)
test
ins
sub
push
cmp
stc
mov
mov
mov
jb
jb
push
leave
pushf
ret
gs
mov
and
mov
xor
and
out
(bad)
clc
inc
cmp
stos
int
or
call
sbb
push
adc
aaa
mov
adc
or
pop
inc
mov
pop
mov
push
jae
movs
aam
add
inc
popa
mov
add
les
fstp
xrelease
xor
sbb
jecxz
and
int
mov
es
push
pushf
sbb
inc
test
adc
pop
mov
pop
int
daa
add
scas
xchg
dec
pop
std
sbb
inc
cwde
test
jno
cmps
dec
stos
(bad)
out
ret
pavgw
mov
sub
xor
mov
outs
rcl
shl
dec
inc
cwde
into
dec
pop
clc
xchg
sbb
ins
fcom
inc
xchg
inc
gs
push
and
adc
jo
sbb
fisub
je
loopne
mov
sbb
(bad)
cwde
xlat
into
es
inc
in
pop
(bad)
dec
clc
lods
(bad)
adc
xchg
jle
xchg
lods
mov
mov
psllw
fsubr
int
cmp
xchg
int3
cli
sbb
adc
mov
ret
fist
ret
dec
adc
fnstcw
xchg
push
out
sar
adc
and
add
fcomp
daa
sub
int3
lods
mov
ss
inc
scas
mov
aad
retf
xchg
call
outs
sbb
dec
movs
aad
in
mov
es
pop
das
retf
add
jbe
aaa
test
hlt
jge
jmp
cmp
mov
movs
arpl
repz
aas
adc
js
movs
fisubr
sub
shl
(bad)
(bad)
js
xor
sub
mov
ja
jge
add
or
sub
mov
add
arpl
cmp
sbb
pop
test
dec
mov
ret
add
sub
cwde
jns
test
jb
dec
mov
loopne
(bad)
aas
sub
imul
push
push
add
cmp
xchg
adc
jo
aas
in
mov
sar
lods
xor
fcmovne
pushf
lea
ins
fdivr
mov
mov
xchg
push
inc
fisttp
out
cmps
iret
sbb
mov
test
(bad)
out
cli
shr
mov
pop
test
retf
push
jns
(bad)
cwde
in
pop
icebp
mov
psubw
popf
or
lsl
sti
push
pusha
sub
jecxz
jo
mov
mov
shl
and
fisubr
jge
hlt
and
xchg
and
sub
lods
movs
cmp
lods
inc
shr
movs
test
mov
cmp
aaa
retf
mov
or
out
or
mov
xchg
aad
xchg
cdq
std
mov
sub
fs
jecxz
mov
xor
(bad)
fisubr
xor
push
repz
mov
int
cmp
dec
inc
dec
pop
in
aaa
xor
adc
mov
int
push
dec
clc
add
xor
mov
mov
or
stos
fsub
mov
dec
rcr
inc
mov
mov
movd
js
out
cmps
outs
push
xor
and
and
jl
cmp
ror
pop
int
dec
hlt
jbe
stos
dec
stos
xor
pop
xchg
gs
cld
pop
xchg
xor
inc
cmps
into
mov
and
pop
aaa
add
xchg
mov
xchg
iret
push
mov
xlat
mov
fwait
adc
jp
jecxz
repnz
test
dec
jnp
or
jg
pop
adc
mov
aam
dec
or
sar
add
cmp
fs
movs
call
cmp
test
mov
push
into
ins
sahf
pop
mul
mov
imul
add
pop
push
shl
lods
out
pop
mov
out
cdq
stos
les
jp
gs
loopne
mov
inc
adc
inc
test
loope
clc
sbb
mov
in
jbe
cli
imul
scas
scas
jae
xor
daa
out
push
jnp
xor
cmp
dec
or
inc
xchg
ins
push
inc
or
xchg
jno
add
and
scas
push
fcmovbe
pop
cld
mov
inc
(bad)
mov
je
lods
xor
test
shr
inc
inc
mov
out
bound
fadd
call
xor
push
out
xor
or
aaa
pushf
clc
lock
scas
sbb
(bad)
lock
dec
das
in
mov
adc
xor
sub
cmp
jae
pop
pop
es
nop
loop
(bad)
or
cwde
mov
fidiv
dec
pop
pop
int3
jecxz
adc
repnz
int
popa
lods
inc
fwait
out
xchg
jno
add
mov
stos
adc
pop
mov
jle
fidiv
sar
cld
ret
cmp
xchg
inc
clc
icebp
xchg
or
cli
movs
cld
jae
lds
les
in
or
stc
mov
cmp
(bad)
fdiv
jbe
scas
out
push
pop
enter
scas
ret
sar
xchg
pushf
cmp
mov
imul
pop
dec
cmp
mov
loopne
retf
jne
(bad)
out
call
adc
or
dec
in
mov
(bad)
or
sgdtd
out
dec
out
cli
rol
xchg
sub
leave
sub
repz
imul
jmp
push
jecxz
adc
out
cmp
out
adc
or
dec
pop
jl
and
pop
fucomp
cmp
fs
les
sbb
shl
xchg
lock
call
ds
ins
imul
add
mov
xchg
call
jbe
loop
dec
lahf
rol
add
xor
fiadd
(bad)
dec
inc
push
push
jns
add
xchg
(bad)
in
leave
test
rcl
add
cmp
and
sub
lock
rcl
pop
cwde
sbb
in
push
ror
push
cmp
sub
xchg
mov
stos
scas
mov
ficom
and
div
cmp
fist
fnstcw
adc
sub
in
nop
in
dec
icebp
test
and
sub
pop
sbb
pusha
adc
jb
in
jnp
xor
sti
push
mov
fsub
cdq
je
leave
inc
adc
dec
pop
sub
gs
dec
or
mov
data16
xchg
movs
or
stos
les
cmp
imul
stos
fstp
xchg
and
push
mov
(bad)
pushf
scas
int3
push
pop
lock
xlat
add
shl
and
mov
push
or
movs
and
mov
mov
cdq
adc
xchg
push
mov
mov
xor
cmp
daa
rcr
add
popf
adc
inc
cli
ret
and
fwait
and
into
pavgw
xchg
pop
pop
push
push
inc
lods
out
or
xchg
add
das
ins
inc
dec
rcr
lds
out
and
test
mul
inc
jecxz
dec
mov
jmp
push
aam
sub
fwait
cmp
icebp
(bad)
cld
cld
in
loop
ja
push
in
sub
cmp
mov
pop
nop
fnop
cmp
sbb
push
dec
jb
inc
xchg
sub
cli
in
xchg
xchg
pop
lahf
ret
(bad)
lahf
sahf
das
out
cmp
popa
push
nop
ja
cli
int3
jbe
outs
out
xchg
cli
mov
aad
hlt
mov
test
pop
call
sub
sub
outs
push
and
jl
mov
jge
pop
dec
cmc
loope
cmp
dec
jecxz
div
movs
test
xchg
aas
pop
mov
into
fiadd
and
shl
call
add
in
sbb
pusha
add
pop
retf
ret
push
push
test
jo
clc
ds
fst
arpl
mov
and
in
sub
pop
call
pop
pop
pop
rol
adc
sbb
iret
daa
xor
pushf
pop
(bad)
loopne
imul
pop
mov
ror
adc
stos
inc
je
xchg
fidivr
out
add
pop
hlt
mul
mov
aad
xchg
inc
mov
(bad)
fldcw
push
and
loopne
jecxz
xlat
cmp
jp
jno
jle
ficomp
sbb
inc
inc
dec
sti
jae
mov
addr16
jl
pop
push
popa
aad
mov
cdq
iret
push
add
cdq
pop
cmp
inc
jno
in
add
retf
mov
cdq
sub
push
xchg
pop
aas
or
push
daa
cmp
and
cmps
sahf
cmp
sub
dec
jne
imul
mov
icebp
fadd
xlat
or
mov
adc
or
jb
pop
mov
sub
cmp
xor
loope
sub
pop
mov
fcmovbe
sahf
inc
jle
ins
inc
pop
fcom
push
das
in
cs
fnsave
push
in
data16
fsubr
out
int3
or
jl
xor
cmp
imul
jae
or
dec
inc
cdq
hlt
mov
sub
inc
shl
sbb
xlat
ror
stos
rcl
(bad)
sar
push
ja
daa
daa
push
pop
or
retf
sar
or
mov
pop
cmps
ds
add
sub
into
mov
aaa
pop
or
or
(bad)
dec
and
rcl
pop
sbb
jae
jmp
adc
pop
daa
inc
add
jecxz
and
push
mov
sbb
clc
rep
std
icebp
movs
dec
or
dec
cmp
pop
imul
push
cwde
shl
sti
leave
jb
sub
icebp
call
(bad)
cdq
gs
fst
cwde
test
sbb
int
in
or
stos
push
lods
arpl
pop
jbe
inc
xchg
jae
div
popf
loopne
and
sbb
loope
js
or
push
mov
mov
cmp
mov
inc
xor
retf
xor
cmps
sbb
jmp
ret
jp
mov
cmp
ret
pop
mov
mov
xchg
inc
sub
jg
sar
adc
jne
sbb
jge
adc
cld
shl
pop
cld
aad
mov
and
pop
imul
adc
push
add
inc
xlat
dec
int
and
ja
or
mov
call
pop
outs
push
add
fsubr
add
or
pop
das
std
mov
pop
mov
jns
pop
adc
pusha
fbld
in
sbb
std
dec
or
jno
out
sbb
das
or
jp
mov
adc
es
out
mov
shl
fisttp
mov
mov
and
pop
ss
pop
int
mov
pushf
mov
xor
call
jns
sbb
mov
out
pop
xchg
bnd
adc
xchg
sbb
call
xchg
(bad)
out
dec
jmp
cli
adc
cmc
jne
cmp
push
add
xor
ins
adc
xchg
sar
ja
mov
xchg
fidivr
pop
(bad)
sahf
jmp
(bad)
cdq
push
sahf
cmps
rcl
xor
fsubr
jg
mov
jbe
and
xor
imul
idiv
retf
jb
arpl
imul
repz
jno
pusha
out
popf
mov
bndldx
pmulhuw
scas
retf
adc
jg
aas
mov
ret
sbb
push
lods
inc
movs
aaa
mov
push
ss
dec
sbb
(bad)
(bad)
pusha
xlat
mov
jmp
and
inc
push
es
mov
mov
ds
mov
adc
jp
jae
xchg
and
mov
mov
jecxz
cld
add
xor
cmp
cmp
mov
xchg
(bad)
jne
push
xor
sbb
dec
xchg
mov
dec
xlat
cmp
mov
js
jnp
push
imul
scas
mov
fxam
fild
mov
stos
hlt
call
mov
sahf
icebp
xchg
xlat
neg
mov
aas
test
sti
xchg
mov
mov
repz
fmul
push
lds
pop
push
(bad)
dec
movs
push
push
push
hlt
outs
jbe
shl
mov
pop
and
jg
push
pop
cmp
cmp
jg
dec
or
mov
xor
cld
inc
je
fwait
or
lea
or
cs
cmp
pop
cmp
arpl
xchg
cmp
bound
sub
inc
adc
aad
es
cmc
outs
enter
jecxz
sbb
sti
dec
iret
xchg
push
outs
retf
nop
jg
shr
inc
jo
or
scas
shr
(bad)
dec
xchg
ins
push
ds
xchg
inc
sub
mov
pop
dec
mov
ss
push
or
mov
cmp
mov
dec
loopne
ins
xchg
or
inc
adc
mov
test
imul
cli
xlat
pop
aam
and
js
mov
xor
mov
nop
sbb
dec
push
sbb
sub
out
dec
inc
mov
xchg
gs
xor
fisttp
fimul
inc
les
cmp
pop
mov
ffreep
bound
ja
retf
push
sub
enter
inc
sub
adc
mov
ret
lds
jge
or
(bad)
in
loop
sbb
sbb
add
sbb
xor
rcl
sbb
test
mov
mov
mov
ficom
sub
push
into
cs
pop
cmp
imul
push
mov
cmp
adc
in
out
rol
(bad)
pop
sub
xor
dec
retf
mov
xchg
xchg
cld
mov
fisub
fld
enter
in
fst
int
adc
pushf
jecxz
dec
pop
aaa
push
cmp
pushf
mov
loop
add
pop
in
repnz
lea
mov
cmps
bound
or
inc
sbb
xchg
mov
and
jg
aam
add
in
dec
and
addr16
mov
nop
and
push
xor
push
shl
xor
lahf
addr16
sub
pop
repz
mov
stc
(bad)
jb
mov
sbb
add
jp
mov
mov
push
sbb
inc
dec
sti
fcomip
pop
leave
or
mov
jbe
int3
sbb
sti
mov
das
push
push
jae
cld
push
pop
iret
mov
and
add
test
jge
mov
sub
movs
pop
pop
adc
adc
call
adc
ss
(bad)
out
push
dec
sbb
pop
test
rol
jge
rcl
or
sbb
mov
and
xor
ror
cli
push
cs
ret
ret
scas
je
inc
inc
mov
test
in
dec
dec
shr
push
mov
scas
test
mov
stos
push
xchg
ins
mov
fsub
and
out
sub
pop
shl
fst
add
cmps
fwait
loope
or
inc
and
xchg
test
popf
add
mov
movs
xchg
in
ja
imul
test
out
and
or
push
ja
add
cmp
push
mov
arpl
and
fsubr
ins
push
push
shl
ror
sbb
jb
jne
out
push
popf
ret
cdq
dec
div
push
inc
xor
mov
cli
mov
not
adc
in
cmp
cmps
mov
cs
sub
mov
cmp
les
xchg
scas
sub
test
iret
push
jp
pop
dec
movs
iret
or
push
sub
lds
ds
xchg
adc
es
ss
xor
pop
push
ds
mov
in
sub
inc
and
call
pop
mov
shl
arpl
pop
push
cmp
add
mov
test
inc
ret
daa
mov
inc
xor
fadd
jl
xor
aad
xchg
jae
sub
mov
adc
push
pop
or
out
push
js
shl
jnp
pop
test
jl
mov
pop
shr
sbb
cli
outs
adc
cmc
dec
or
add
xchg
es
lods
pop
test
dec
les
ins
aad
lods
cli
mov
out
mov
adc
iret
xchg
jge
and
pop
repnz
push
inc
out
inc
push
cmps
mov
ds
data16
push
into
jmp
(bad)
adc
aad
add
std
add
in
push
mov
test
stos
push
add
cwde
cmc
lahf
dec
sbb
mov
retf
scas
sub
loopne
mov
push
jbe
pop
jns
js
fidivr
rol
push
ret
outs
sbb
imul
xor
and
jns
sbb
xor
loopne
xor
jle
xor
test
mov
adc
dec
shl
cdq
xor
es
jle
xchg
mov
sbb
iret
movs
xchg
push
fs
int3
ins
popa
cmc
sbb
jns
jno
imul
mov
xor
push
retf
fisttp
mov
fidivr
stos
xchg
jae
push
int3
fistp
jae
add
or
or
repnz
fs
dec
mov
fwait
mov
loop
test
stc
and
stc
(bad)
cld
movs
pop
jb
push
mov
loop
ins
push
dec
pusha
push
ins
mov
mov
jne
nop
add
and
stos
cmp
outs
adc
or
out
out
push
dec
neg
add
inc
push
out
mov
mov
xor
pop
outs
fwait
pop
sub
out
addr16
cmp
adc
movs
dec
repnz
outs
or
mov
push
xchg
(bad)
or
fwait
push
push
mov
xchg
adc
iret
leave
adc
jge
pop
stc
rol
or
or
in
xor
mov
and
pop
mov
div
mov
push
mov
aam
sub
xrstor
in
dec
and
outs
or
ret
dec
js
imul
cs
(bad)
xor
mov
cmc
xchg
lahf
push
out
pop
dec
dec
mov
push
daa
ins
mov
push
(bad)
imul
test
xchg
jno
mov
sahf
js
adc
xchg
(bad)
xchg
sti
shl
add
pop
dec
jbe
retf
mov
mov
dec
iret
mov
hlt
or
imul
mov
out
mov
mov
stc
mov
lds
fimul
das
sti
lahf
push
neg
push
lds
mov
adc
(bad)
ins
rcl
in
std
push
clc
sub
xchg
mov
ret
jl
inc
xchg
push
inc
jo
in
hlt
push
sbb
repz
cmp
mov
stos
mov
(bad)
stc
ret
mov
(bad)
(bad)
(bad)
mov
stc
in
jbe
fisttp
movs
std
inc
popf
and
pop
aam
in
pusha
jmp
dec
xchg
push
xchg
je
adc
dec
pop
sub
dec
jns
xchg
stc
mov
sti
pop
sahf
(bad)
shl
mov
stos
enter
dec
adc
sahf
mov
adc
jge
ss
gs
sbb
cmps
xchg
sub
cmp
push
mov
rol
cmp
jmp
repnz
cmps
rol
in
add
(bad)
iret
sti
mov
aaa
ficomp
cmps
(bad)
out
mov
xchg
repz
and
or
cmps
push
aaa
jge
(bad)
(bad)
clc
mov
jnp
xor
add
adc
out
and
add
pop
mov
cmps
push
mov
mov
out
(bad)
and
(bad)
(bad)
std
push
in
imul
jmp
dec
(bad)
int
jle
mov
inc
dec
scas
pop
pop
inc
jns
cld
cld
pop
jg
inc
xchg
sub
mov
pushf
mov
xchg
out
jmp
mov
adc
push
ds
push
cwde
mov
xor
fbstp
repz
or
pop
dec
pushf
mov
leave
call
push
pop
mov
adc
push
add
mov
inc
loope
xchg
dec
cmp
imul
vmwrite
in
mov
cmps
pop
adc
or
repz
jb
loop
call
dec
mov
mov
addr16
lods
xor
fcmovbe
sub
std
ficom
dec
mov
shl
jmp
arpl
adc
xor
cmp
xor
inc
enter
jnp
sahf
add
jge
add
cmps
adc
cwde
(bad)
out
or
and
movs
push
jnp
mov
inc
test
adc
and
add
ds
push
jmp
mov
dec
dec
ficomp
enter
sub
mov
adc
jge
dec
mov
xchg
ins
inc
sahf
push
jle
bound
daa
scas
sub
sbb
pop
call
inc
inc
sbb
xchg
mov
test
inc
or
jo
aam
data16
aad
and
fistp
cld
aas
add
inc
pop
push
inc
out
ss
push
ret
or
jns
and
mov
push
mov
jno
pop
mov
ss
ret
inc
stc
fucomi
test
mov
xor
stos
pop
pop
xchg
sub
cmp
pop
sub
repz
cmp
shl
and
into
push
mov
fadd
(bad)
test
pop
fstp
lock
cdq
(bad)
fimul
clc
push
dec
aam
and
ss
jb
mov
sbb
pushf
mov
jle
dec
jns
inc
add
cmps
cmp
or
call
xor
mov
push
imul
or
lock
cs
xlat
cmp
and
sbb
sbb
es
jb
dec
push
sbb
mov
jg
call
mov
call
pop
das
push
hlt
mov
cmp
seto
aas
fld
sub
push
xor
les
adc
retf
aad
jns
jo
movs
mov
mov
fnstenvw
mov
sub
aam
mov
xchg
xchg
les
mov
mov
mov
mov
in
mov
add
mov
cs
add
push
jbe
outs
and
out
xor
xchg
sub
dec
les
enter
adc
stos
adc
bound
xor
mov
dec
xchg
cmp
mov
scas
repnz
dec
adc
mov
lds
rol
jge
stos
imul
lods
cmps
shr
or
jecxz
iret
sbb
fcomp
mov
adc
out
ja
leave
cmps
(bad)
jmp
mov
cmps
nop
sbb
popa
aad
and
int
je
daa
inc
out
aaa
inc
scas
call
imul
in
push
dec
retf
or
adc
and
cmp
jle
mov
mov
sar
out
push
fnstenv
scas
and
inc
adc
pushf
popa
push
pop
ins
jno
lea
xor
gs
xchg
add
imul
push
jbe
push
adc
pop
in
sbb
ret
std
mov
cmp
dec
cs
xchg
sahf
fs
in
cmp
das
and
mov
xchg
and
lahf
fs
mov
xor
add
xchg
int
sbb
add
jmp
add
jmp
mov
push
pop
aaa
xchg
ja
in
test
enter
jle
xchg
movs
cmps
div
jmp
std
lahf
mov
jbe
imul
loop
scas
dec
mov
sbb
and
scas
and
popf
dec
push
push
xchg
stos
fwait
sbb
adc
test
dec
pusha
or
nop
out
mov
in
movs
or
xchg
jp
mov
xchg
pop
in
jnp
lea
ins
xchg
movs
popf
scas
jmp
div
fwait
cs
push
in
cmp
pop
les
mov
pop
fdiv
xor
jno
ds
sti
or
sub
xchg
xlat
cdq
repnz
dec
imul
xor
pop
aas
or
mov
and
sti
jb
jge
and
xchg
clc
sub
jbe
mov
cmps
js
cmp
arpl
sub
ffreep
mov
retf
jb
scas
out
add
dec
bound
sbb
mov
(bad)
int
js
jmp
push
loopne
in
xchg
and
mov
push
out
pop
push
xor
sub
or
fstp
je
mov
inc
iret
aas
outs
movs
loopne
iret
bndstx
inc
lock
outs
iret
inc
stc
popa
xchg
xlat
repz
rol
adc
cmp
or
(bad)
iret
inc
lds
mov
sbb
aaa
cld
mov
div
dec
aaa
(bad)
pop
shr
xchg
adc
jns
test
inc
xchg
fisttp
and
mov
call
fdivr
xor
(bad)
in
rol
inc
imul
or
xchg
shr
xor
call
jmp
cmp
add
dec
outs
xor
pop
sub
push
mov
sbb
test
dec
inc
sub
mov
movs
mov
cmp
cmps
push
mov
es
cmc
int3
cdq
stos
fldcw
lods
mov
sbb
sbb
sub
daa
sbb
scas
sub
sub
inc
sub
(bad)
adc
adc
outs
mov
mov
mov
rol
adc
inc
aas
dec
stc
adc
ffree
pop
sbb
hlt
movs
or
and
das
imul
retf
test
sub
mov
in
and
subps
popf
aad
and
dec
or
and
dec
xor
ins
dec
(bad)
or
cwde
popf
jl
test
push
pop
xchg
test
outs
jmp
je
ins
adc
cmps
fsubr
mov
shr
mov
fimul
out
int3
fldz
nop
xor
sub
xchg
in
sub
gs
cmc
pop
clc
rcl
inc
adc
out
retf
aam
push
sbb
inc
mov
fsubr
daa
jae
dec
aam
xchg
js
pop
fiadd
gs
push
(bad)
push
scas
push
cmp
adc
ret
cmps
mov
(bad)
lods
push
leave
fmul
mov
mov
icebp
int3
mov
inc
(bad)
aas
lahf
push
retf
mov
pop
dec
inc
mov
mov
rol
ss
push
cmp
iret
or
cmps
aaa
mov
sbb
je
loope
loope
jbe
lea
ins
or
sbb
lock
leave
cli
add
ja
cwde
xchg
jmp
push
pop
mov
adc
mov
and
pusha
mov
mov
add
mov
stos
scas
das
lods
lea
js
outs
push
ds
call
das
pop
mov
inc
xchg
dec
adc
xchg
ror
pushf
sbb
hlt
push
test
xchg
cmp
aas
enter
pop
mov
jmp
lahf
sbb
jne
fcom
sub
or
ins
ins
(bad)
dec
(bad)
pop
sub
repz
fimul
mov
shl
ins
xlat
mov
mov
inc
sahf
or
mov
adc
fcomp
repz
neg
mov
xchg
add
test
lds
retf
adc
dec
(bad)
mov
fld
cmp
pusha
mov
mov
add
fs
mov
dec
(bad)
aad
adc
fwait
jl
call
and
add
in
xchg
icebp
into
inc
jo
leave
ja
cmp
gs
aaa
mov
daa
stos
xchg
pop
ret
cmp
enter
adc
pop
push
jno
sub
scas
pop
or
sbb
cwde
jmp
sub
call
leave
jne
stc
push
push
mov
jmp
xlat
push
das
loopne
sub
pop
ret
sbb
sbb
repz
push
push
mov
mov
and
pop
psllq
push
sbb
jae
fs
hlt
rcl
jne
cmps
xor
sub
jmp
xchg
hlt
scas
inc
inc
lods
ds
dec
daa
stos
xor
int3
pop
xchg
addr16
shr
or
mov
xor
ss
movs
aaa
add
add
dec
enter
loope
jl
inc
push
add
fwait
ins
jle
lock
fnsave
push
mov
sub
aam
mov
icebp
jge
les
xor
cmp
enter
mov
sub
fnsave
jle
imul
jns
adc
adc
sub
nop
ret
daa
out
adc
sbb
cmps
call
sahf
jne
popf
sar
xor
shl
xor
sbb
aam
aad
jg
fimul
jmp
cmp
add
inc
adc
test
sub
push
int3
imul
jl
mov
cmc
sub
mov
mov
nop
frstor
aaa
arpl
rcl
or
stc
add
sbb
sub
aam
mov
sub
xchg
retf
jbe
scas
dec
jmp
outs
or
lods
jl
xchg
ret
cmp
mov
pop
sub
sub
and
or
outs
cs
adc
aas
or
cmp
daa
or
sub
mov
nop
dec
sbb
aas
and
les
sub
mov
mov
jmp
leave
fwait
sar
add
cmp
and
enter
test
xchg
std
and
mov
in
jecxz
sar
inc
mov
dec
iret
arpl
gs
outs
and
cmps
adc
stc
movs
js
hlt
jle
aas
retf
test
or
push
imul
add
xlat
sti
pop
pop
xchg
push
sub
cmp
loope
daa
push
or
cmp
mov
rcl
pop
sub
xchg
pushf
add
inc
aaa
jle
jge
das
popf
lds
ds
das
inc
ja
jmp
movs
imul
pop
or
icebp
adc
ins
js
aam
mov
repz
outs
test
lods
js
cmp
fdiv
inc
(bad)
ret
xchg
inc
sar
leave
mov
sub
pop
push
cdq
sbb
cmps
arpl
pop
shufps
mov
pusha
in
lods
bnd
fnstenv
imul
es
xadd
sub
aaa
gs
or
and
mov
mov
mov
cmp
(bad)
outs
cmc
sar
add
and
das
jb
xchg
mov
push
jbe
sub
jge
add
push
or
out
repnz
movs
out
jecxz
push
cmp
pop
nop
push
hlt
(bad)
fcom
ret
push
pop
jl
cwde
aad
mov
mov
hlt
xor
pusha
push
lods
call
xchg
das
shr
hlt
mov
test
mov
ja
ret
adc
xor
movs
add
jo
sub
mov
in
scas
nop
mov
loope
out
add
inc
movs
sbb
popf
outs
popa
pop
pop
pusha
in
js
popa
push
cs
lock
cs
mov
or
xor
retf
mov
xchg
adc
push
mul
lahf
jns
leave
movs
scas
or
rcr
lahf
jl
pop
cli
push
or
ret
ret
xor
inc
arpl
and
call
xchg
or
jo
pop
sbb
xchg
pop
pop
push
cli
sub
das
sub
in
jmp
jmp
mov
dec
adc
sahf
and
pop
mov
and
pop
xlat
cwde
mov
sahf
test
xlat
(bad)
and
adc
xchg
fwait
pop
fadd
jecxz
pushf
add
sub
mov
sbb
mov
cmp
pop
jge
imul
ret
imul
call
jne
mov
stc
dec
cmps
sbb
mov
inc
and
mov
adc
lea
pop
xor
mov
pusha
cmc
retf
xor
pcmpgtd
push
sub
shl
mov
push
mov
into
std
jbe
in
fs
dec
lahf
xor
enter
xchg
xor
nop
cmp
sti
mov
mov
call
sbb
data16
pop
(bad)
jns
or
in
xchg
cmp
in
mov
arpl
mov
jo
sbb
jp
hlt
mov
ins
add
fisubr
jb
push
mov
call
js
sbb
push
lea
inc
mov
pop
jns
pushf
out
test
mov
and
push
mov
or
jbe
in
(bad)
ins
mov
xor
add
call
push
int
cdq
shr
out
sub
mov
popf
out
inc
inc
std
loop
push
dec
ret
push
cwde
clc
inc
jge
add
int3
(bad)
and
and
dec
aaa
outs
popf
arpl
pop
jo
gs
cmp
pop
fidivr
cwde
scas
popf
mov
in
ins
(bad)
iret
pop
pop
xor
arpl
fiadd
nop
dec
movs
mov
sbb
pop
jno
sub
mov
inc
cmc
pop
in
pop
cmps
out
test
fist
and
and
dec
inc
push
push
mov
jle
xchg
inc
ds
lds
push
add
or
pop
mov
lea
stos
cdq
add
adc
push
add
mov
test
pop
and
jg
push
repnz
jle
div
mov
add
popa
add
loop
inc
aas
ret
jno
loope
test
jo
pop
(bad)
sbb
in
push
scas
fcomip
lds
and
aas
jle
in
push
mov
loope
leave
adc
repnz
popf
add
mov
sbb
mov
or
pop
cdq
inc
push
iret
inc
or
sub
add
and
xchg
xor
xchg
test
out
add
jecxz
or
lds
push
xchg
fisubr
das
icebp
jmp
ret
jo
outs
sbb
test
aam
fld
cmp
scas
arpl
lods
mov
aad
mov
xchg
mov
fmul
rcr
mov
rcl
je
data16
pop
or
or
outs
pop
(bad)
or
jnp
call
mov
add
ficom
mov
hlt
jecxz
jnp
inc
call
mov
cs
pop
or
js
pop
(bad)
gs
and
adc
sbb
mov
push
(bad)
lods
std
movs
mov
adc
aas
inc
mov
mov
dec
xchg
jle
stos
cmp
sbb
fnstcw
ins
mov
fcomp
cmp
out
stos
les
pop
push
gs
mov
xor
mov
movs
pop
jno
mov
cmc
dec
jns
pop
test
das
sub
(bad)
sbb
add
cmp
xchg
fisub
push
imul
sub
enter
aam
icebp
ror
jne
pop
push
int
add
int3
mov
mov
adc
adc
add
ficomp
test
pop
movs
ins
out
lea
inc
pop
popf
(bad)
or
mov
inc
sub
sbb
fcmovnu
test
xor
xchg
idiv
inc
mov
sbb
iret
cmp
jae
mov
in
push
mov
out
xchg
push
xlat
push
pop
dec
cwde
nop
aam
stos
dec
in
pusha
mov
retf
es
adc
push
je
cmp
lock
or
dec
adc
ss
sbb
mov
pop
xlat
jge
(bad)
in
out
and
mov
jo
mov
jnp
sub
xor
mov
rol
daa
ficom
sbb
inc
and
les
adc
mov
pop
retf
jg
sub
iret
and
cmc
loope
mov
xchg
jbe
jp
adc
and
pop
scas
adc
or
inc
aaa
movs
call
mov
mov
(bad)
addr16
jns
push
jg
int3
loopne
in
add
xor
jo
icebp
rcl
jmp
cmp
push
jl
cmp
sbb
push
bound
inc
lahf
xchg
mov
jle
sub
inc
add
int3
cs
jle
inc
sub
(bad)
sub
ss
sti
popf
retf
dec
loopne
add
in
inc
popf
popa
mov
or
aam
repz
sub
mov
sbb
fdiv
xchg
(bad)
add
fsub
les
clc
in
adc
add
pop
daa
xor
mov
lods
setle
or
mov
cli
jae
(bad)
std
jb
cmp
xchg
dec
or
push
mov
push
sar
add
xor
repz
bound
lock
sub
mov
push
mov
arpl
iret
xor
mov
mov
adc
repnz
or
dec
xchg
rcr
pushf
mov
les
mov
(bad)
call
xchg
inc
pop
dec
adc
adc
adc
out
(bad)
in
in
(bad)
aam
pop
push
mov
mov
or
imul
clc
out
dec
rcl
rcr
dec
imul
lods
jns
pop
jb
push
cdq
mov
mov
ins
rcl
rcl
mov
pop
push
dec
sub
loope
or
ja
jae
shl
and
dec
or
jo
push
dec
int3
and
jns
cmp
es
mov
adc
push
out
xor
lods
stos
inc
pop
jecxz
sub
push
aad
xlat
and
arpl
test
inc
popa
add
push
movs
fwait
jae
ins
shl
aaa
sbb
into
stc
inc
lods
shl
or
jmp
movs
out
shr
adc
adc
cdq
jmp
popf
mov
xor
mov
hlt
and
jb
or
ins
add
hlt
(bad)
jb
jecxz
int3
jns
add
nop
or
outs
mov
cmp
sbb
sbb
ror
hlt
jl
inc
dec
mov
call
sahf
clc
arpl
test
(bad)
repnz
imul
jle
mov
pop
out
ja
dec
dec
loop
gs
stos
rcl
test
aam
ret
ror
xchg
or
(bad)
adc
sub
mov
jge
imul
pusha
test
out
out
dec
push
or
mov
and
or
mov
stos
pop
push
addr16
rcl
aaa
loopne
jbe
shr
push
xchg
xor
or
jp
cdq
sbb
out
jbe
add
data16
lahf
push
mov
aad
adc
pop
sub
jmp
(bad)
les
fadd
xor
sbb
mov
dec
iret
jns
xor
std
dec
sbb
lock
or
push
in
setp
lahf
add
add
je
in
adc
mov
pop
rcr
into
repnz
(bad)
out
ins
add
enter
mov
inc
movs
cmp
adc
inc
cmp
test
and
jg
fcomp
xchg
in
das
out
push
dec
test
sbb
adc
pop
je
ds
jo
test
nop
xor
hlt
ins
int3
sub
es
dec
retf
or
scas
or
add
ss
imul
jecxz
xor
dec
sub
xor
jo
addr16
push
mov
sbb
fsub
aam
fwait
inc
sub
jo
pop
dec
mov
sbb
mov
aaa
(bad)
pop
mov
pusha
xor
in
jae
sahf
sbb
popf
jmp
ror
fisubr
mov
inc
int
fbstp
scas
dec
loope
call
arpl
xchg
ss
adc
rcl
rol
call
dec
dec
xor
mov
clc
stos
movs
dec
lds
mov
pusha
cmps
inc
repz
push
ins
mov
dec
jbe
pop
inc
mov
mov
nop
and
cmp
pop
push
fwait
aam
and
adc
push
lock
outs
out
xlat
push
sub
inc
mov
pop
cwde
std
loopne
sub
or
mov
sub
ds
and
push
adc
int
ret
mov
in
test
btc
shr
lea
(bad)
clc
cmp
fsqrt
xchg
(bad)
sahf
scas
sub
xchg
cmp
or
sub
sub
add
sbb
cmps
mov
or
dec
daa
inc
xchg
xchg
mov
retf
std
cmps
mov
xchg
or
out
cmps
cmp
xchg
in
mov
pushf
lods
cmps
and
mov
(bad)
sti
mov
in
xchg
pusha
scas
jnp
(bad)
sbb
call
inc
out
das
(bad)
test
lea
repnz
or
push
adc
mov
ds
mov
pop
lea
inc
add
and
mov
ret
xchg
add
cld
pop
mov
xchg
inc
dec
mov
cdq
jne
inc
loope
pop
push
jbe
sub
jno
xor
aam
push
int
push
fcmove
aaa
in
and
mov
pusha
adc
jnp
pop
adc
das
ret
push
js
sbb
repz
leave
or
arpl
push
fwait
mov
or
dec
stc
fwait
(bad)
jb
xor
pop
push
movs
jmp
sub
mov
cmc
and
add
add
frstor
ins
xchg
test
fstp
inc
sub
lods
jge
inc
dec
stos
jno
div
sub
or
sub
pop
mov
scas
stc
jo
(bad)
mov
fsub
push
cs
sar
sahf
dec
push
push
mov
fld
mov
(bad)
out
pop
jbe
push
mov
out
(bad)
pop
or
pop
aam
cmp
sbb
shr
ret
xor
jnp
pop
ret
sub
(bad)
mov
in
out
sbb
nop
xchg
in
cmp
out
or
and
ret
inc
jmp
pop
ins
adc
cmp
adc
sub
test
jno
aad
adc
data16
pusha
jno
adc
pop
ins
sub
adc
or
push
xor
in
cwde
mov
int
out
iret
mov
mov
lods
xor
arpl
jo
jns
mov
pop
rcl
dec
cmps
ds
cli
push
push
bnd
(bad)
mov
fist
ja
fmul
cmc
mov
push
mov
stos
xchg
sbb
mov
pop
pop
nop
enter
cmp
mov
sub
push
adc
xchg
inc
mov
int3
in
leave
nop
scas
sub
sub
arpl
je
imul
inc
dec
dec
mov
idiv
jns
std
xchg
or
push
les
pushf
dec
push
and
ss
test
and
addr16
cmp
sbb
jbe
cli
nop
loopne
ins
nop
stos
lock
rol
push
xor
fcom
xor
leave
cmp
retf
xchg
sbb
dec
cmp
adc
cmc
inc
mov
movs
sti
test
jmp
push
int3
adc
xor
pop
push
cmp
xlat
inc
outs
mov
jmp
mov
cmp
into
inc
ins
mov
dec
ror
mov
loop
sbb
cmp
fidiv
sti
(bad)
push
(bad)
sti
pop
leave
out
out
lock
mov
fnstsw
dec
push
test
out
cli
xor
inc
leave
dec
add
add
xor
int
fiadd
mov
mov
mov
leave
and
adc
stos
add
and
xchg
jl
cli
pop
adc
mov
jecxz
rol
mov
and
popf
cmp
dec
ret
mov
mov
cmp
pop
xchg
dec
div
not
call
or
adc
fldcw
mov
inc
or
stc
push
hlt
leave
jns
push
retf
cmps
mov
ret
mov
xchg
bound
dec
xlat
mov
sub
or
les
sub
dec
popf
scas
push
jb
adc
inc
imul
mov
lods
cmp
jb
shr
in
pop
mov
mov
inc
int
ret
dec
jecxz
mov
shr
adc
mov
push
or
loop
xchg
das
xchg
ds
les
xor
(bad)
or
cmp
jo
enter
add
xchg
pop
or
or
sbb
jae
add
jmp
(bad)
pop
stos
jmp
adc
test
cmp
loopne
pop
les
push
arpl
or
loop
pop
cwde
lds
fnstenv
rcr
stc
leave
push
dec
sub
gs
pusha
and
jns
xchg
stos
lods
inc
out
ins
push
addr16
in
inc
(bad)
test
hlt
call
and
jnp
pop
mov
sbb
dec
dec
loop
dec
sub
pop
out
xchg
jns
and
xchg
xor
add
pop
jnp
pushf
xchg
pop
aas
rcr
cmc
dec
mov
ret
ret
adc
mov
mov
push
add
in
jnp
cld
cli
inc
mov
xlat
out
push
enter
xacquire
mov
test
sbb
icebp
xchg
repz
sub
jno
lods
fs
xchg
push
movs
xchg
dec
xor
cmps
stos
subps
in
inc
nop
sahf
bound
lds
loop
loopne
mov
adc
test
cmp
inc
sub
push
ds
fprem1
sub
xchg
out
out
pop
mov
mov
and
mov
dec
(bad)
in
mov
pop
push
clc
or
pop
or
adc
inc
mov
xor
dec
je
pusha
mov
and
rol
inc
test
mov
push
sub
leave
add
cs
cmps
aam
sar
jnp
rcl
rol
dec
cs
cmps
push
xchg
arpl
cmp
int3
push
je
push
inc
loop
sub
stos
sbb
xchg
clc
dec
mov
and
mov
mov
lods
mov
jmp
mov
inc
popa
popf
mov
jbe
cmps
xchg
dec
pop
aaa
xlat
jmp
mov
sub
retf
jbe
jnp
push
rol
cmps
sbb
dec
out
ret
pop
inc
inc
xor
(bad)
cmps
adc
xor
push
adc
call
dec
ret
pop
mov
jmp
movs
xor
mov
repz
ret
dec
push
xlat
jno
repnz
push
std
mov
pushf
sbb
ja
mov
xor
sbb
test
jl
popa
les
inc
adc
mov
cmp
push
pop
push
movs
pop
ss
xlat
mov
xor
or
push
lods
mov
addr16
in
push
retf
in
cs
xchg
xchg
movs
les
loopne
(bad)
mov
and
faddp
bound
sar
movs
sahf
ins
imul
mov
mov
add
sbb
mov
push
inc
mov
and
mov
sub
jge
adc
sub
aam
mov
cmps
jle
call
enter
outs
push
mov
addr16
jae
cmps
add
fcomip
ds
xchg
add
cmps
test
cmp
sti
jae
rol
xor
xor
addr16
or
imul
mov
add
push
scas
or
pushf
mov
sub
inc
mov
cmp
or
sbb
cli
lahf
push
dec
in
dec
bswap
add
nop
cmps
aaa
xor
xchg
js
neg
push
popa
test
jns
lods
ss
mov
data16
shl
and
loopne
out
mov
arpl
loopne
cmps
(bad)
jmp
inc
dec
lods
ins
cwde
xchg
inc
mov
cmp
add
xor
std
xchg
cmps
clc
mov
fistp
ficomp
int3
test
int3
scas
sub
fcom
mov
dec
test
out
sub
sbb
cdq
jecxz
add
outs
mov
jmp
sbb
repz
mov
ds
xlat
imul
ds
push
jl
icebp
out
pop
mov
out
push
mov
inc
fst
retf
ins
cmovle
jecxz
add
outs
xor
mov
inc
adc
inc
dec
xchg
and
stos
dec
nop
pop
test
ret
jle
lahf
test
int3
cmps
dec
push
sub
ds
xlat
scas
ds
daa
push
jle
outs
mov
jle
repz
(bad)
cwde
jmp
jbe
mov
mov
pop
pop
call
sub
mov
mov
or
xchg
out
xor
scas
mov
les
ffree
loope
adc
fstp
mov
push
aaa
ds
les
cmp
pusha
mov
enter
jg
sbb
inc
jnp
jle
fninit
dec
retf
dec
shl
jo
jg
cs
cdq
xchg
(bad)
call
add
xchg
and
mov
mov
dec
dec
in
ds
sbb
repnz
add
jl
adc
inc
mov
inc
hlt
inc
outs
imul
addr16
jne
push
sbb
cli
dec
mov
fwait
pop
dec
xchg
sbb
inc
fstp
jmp
ffree
mov
xchg
cld
test
jle
and
sub
cld
push
mov
sub
lahf
adc
fisub
aad
and
ficom
xlat
mov
inc
add
xchg
test
add
cmp
inc
repnz
lds
xchg
mov
push
and
popa
xor
test
inc
jb
mov
add
mov
sbb
cmp
sbb
mov
push
add
fnstcw
test
xlat
mov
or
inc
loop
push
test
(bad)
cli
sbb
mov
stc
scas
int3
jmp
les
outs
or
dec
mov
jecxz
stos
mov
sub
xchg
mov
fmul
cmp
push
loope
cwde
adc
mov
mov
icebp
cli
xchg
push
pushf
outs
(bad)
mov
test
scas
adc
mov
add
out
test
outs
int
xor
sbb
aad
and
jne
stc
loop
daa
pop
dec
adc
mov
and
push
xchg
pop
out
mov
push
fsubr
sub
xor
sub
ds
push
(bad)
out
movs
test
mov
adc
fisttp
iret
imul
ins
fcomp
pop
test
jmp
sbb
rcr
and
in
pop
test
addr16
jg
sti
sbb
mov
xchg
loop
mov
outs
stos
mov
das
sub
es
pop
add
loopne
dec
cmp
(bad)
push
dec
int3
shl
idiv
cdq
mov
jb
xchg
mov
cli
or
jle
fild
in
pop
push
push
xlat
test
dec
or
and
shl
cwde
xchg
mov
in
push
or
jp
add
mov
nop
loope
dec
fwait
jno
aad
icebp
adc
popa
call
add
xor
repz
add
sahf
xor
xchg
push
call
lock
retf
or
sub
cmps
xchg
loopne
mov
jmp
fwait
ret
stc
sbb
xor
lods
in
dec
rcl
xor
jmp
aas
mov
nop
sub
mov
pop
mov
push
inc
xor
sub
ds
test
push
addr16
cmps
pusha
sub
js
sbb
rcr
cdq
popf
and
mov
ret
iret
mov
inc
bound
ja
or
das
jbe
inc
shl
ins
fst
xor
stos
add
mov
mov
jno
or
xchg
mov
add
push
xchg
loop
adc
inc
jp
(bad)
xlat
jl
inc
push
fsub
inc
call
dec
and
xor
dec
hlt
call
mov
sar
cdq
call
sahf
push
rcr
jbe
and
ret
iret
sbb
aas
out
or
xchg
packsswb
inc
or
cmps
cli
dec
ins
(bad)
retf
pop
sub
mov
mov
cmp
cwde
(bad)
js
inc
stos
adc
fstp
ss
nop
mov
shl
mov
jo
cmp
es
jae
push
xchg
das
pop
ror
fld
or
sub
mov
mov
mov
sbb
pop
mov
push
rcr
enter
jecxz
inc
gs
jnp
js
mov
inc
rcr
mov
sar
mov
inc
inc
lea
jp
jo
dec
mov
jp
lock
xor
xor
call
cmp
push
js
test
xchg
test
cmc
(bad)
aam
repz
js
(bad)
(bad)
(bad)
imul
icebp
pop
scas
cmp
out
push
xchg
lds
cmp
xchg
aad
xchg
test
dec
fst
aas
loop
ror
loopne
ds
cli
or
std
fwait
cmc
cmc
cmp
loop
in
jle
adc
pop
icebp
enter
shl
ja
adc
out
es
xor
mov
imul
mov
movs
jmp
lods
scas
mov
loope
xchg
mov
xchg
pop
mov
jb
pop
imul
lods
sti
inc
retf
bsr
cli
cmp
cmps
push
popa
adc
add
mov
test
xor
add
mov
ins
in
add
or
pop
add
in
mov
imul
xchg
mov
cs
fimul
pop
sub
mov
adc
in
jmp
jl
add
out
outs
icebp
push
xor
je
pop
addr16
sub
mov
xor
cmc
mov
cmp
(bad)
mov
cmp
push
ins
fidivr
sub
fiadd
sub
icebp
jbe
sbb
aaa
xchg
(bad)
fwait
div
or
add
repz
xchg
popf
sub
loop
sbb
es
xor
lods
out
mov
shl
jno
push
mov
inc
add
mov
cmp
adc
inc
xor
scas
inc
sub
mov
dec
sbb
ins
data16
jge
adc
aas
pop
pop
pop
in
add
jecxz
xor
fwait
in
pushf
jmp
xchg
ret
add
cdq
loope
repz
enter
nop
retf
mov
or
jmp
pop
sbb
xchg
shl
pusha
fild
xadd
in
or
cmp
inc
lea
adc
shl
in
test
cmps
lock
in
data16
cmp
fldlg2
mov
movs
movs
cwde
in
mov
and
repnz
add
add
jmp
sar
and
jo
xor
or
ds
repnz
add
xchg
adc
rol
jmp
pop
xchg
std
ret
sub
or
dec
mov
or
fisub
fucomi
jo
push
add
jbe
dec
jmp
mov
mov
push
push
jo
push
mov
inc
pop
and
cmp
test
shl
movs
int3
in
pop
jmp
(bad)
mul
scas
xor
jp
mov
mov
in
add
push
aas
mov
xchg
sub
das
(bad)
cdq
iret
cdq
rcr
or
jmp
adc
mov
pop
sar
jmp
aaa
sbb
mov
xor
pop
sub
outs
rol
xchg
jecxz
jmp
retf
les
repnz
push
or
mov
and
retf
in
xor
imul
jbe
ret
nop
out
add
push
inc
add
and
clts
and
fistp
test
cmp
dec
in
sti
jbe
(bad)
cdq
dec
sbb
add
pop
fisub
ja
push
imul
rcl
mov
call
adc
cdq
adc
das
outs
mov
lahf
dec
call
aas
mov
inc
addr16
(bad)
bound
rol
push
inc
mov
push
inc
aaa
dec
jmp
inc
das
pop
lea
inc
cmp
jnp
inc
xchg
aad
xchg
jmp
cwde
jmp
gs
inc
xchg
and
sub
jmp
clc
out
ror
push
scas
scas
in
jmp
test
push
and
sub
jo
cmp
sar
loope
adc
mov
or
mov
dec
add
int
(bad)
xor
cmp
jbe
adc
inc
xchg
lock
std
dec
rol
inc
fs
ret
dec
sbb
enter
aaa
cmp
stos
cld
in
xchg
mov
aas
dec
out
aad
push
jl
out
mov
aaa
loop
mov
pop
adc
dec
add
xchg
adc
xor
es
cmc
mov
loope
js
scas
imul
sti
pop
lods
cmp
pop
retf
lock
fdiv
mov
aaa
mov
sbb
mov
fist
xor
movs
mov
jmp
pushf
jb
out
in
adc
jl
mov
mov
mov
rol
outs
push
mov
js
mov
xchg
xor
mov
pushf
sbb
sub
ins
push
aas
sbb
xchg
push
inc
sbb
(bad)
cld
push
or
es
fcom
cld
ret
imul
sub
inc
mov
(bad)
ror
cmp
(bad)
jae
xlat
pop
in
and
mov
adc
or
pop
xor
xchg
(bad)
mov
jbe
stc
jecxz
movs
cmps
jo
push
push
jnp
inc
pop
add
dec
das
imul
adc
inc
call
mov
or
popf
aad
mov
test
test
sbb
repnz
clc
repz
inc
jno
mov
pop
les
sbb
rol
or
push
fdiv
aaa
in
adc
xchg
inc
lock
nop
adc
jb
(bad)
xchg
xor
ja
mov
jle
test
push
mov
and
jle
adc
inc
cmp
push
lods
cmp
sbb
xchg
dec
mov
inc
or
jno
in
cld
push
xchg
push
aaa
mov
into
data16
outs
push
push
(bad)
in
or
mov
jno
push
enter
inc
clc
cmp
mov
xchg
sar
sbb
push
sub
xchg
pop
and
std
int
xchg
add
rcr
adc
es
fiadd
in
add
push
mov
mov
(bad)
cli
pop
hlt
sub
mov
or
jmp
sub
and
adc
loopne
cmp
outs
or
xchg
mov
fisub
jns
add
xchg
xchg
inc
push
adc
test
loopne
push
push
sub
adc
movs
jecxz
adc
or
jnp
push
push
shr
call
cli
xor
push
mov
push
out
je
jnp
pop
es
das
fadd
adc
pop
imul
sub
jmp
and
in
fcmovu
mov
inc
sbb
xchg
in
fist
or
xor
add
mov
cmps
test
sbb
pop
(bad)
sar
cmp
sub
shl
fs
out
or
nop
aad
fistp
add
sar
ret
jecxz
ja
cli
sahf
into
mov
push
pop
ins
mov
mov
jae
add
pop
ret
push
ret
inc
sub
rcl
adc
hlt
xor
repz
dec
imul
outs
in
inc
xchg
fsub
fldcw
stos
mov
cli
jae
mov
fwait
xlat
scas
jecxz
inc
add
pop
call
add
jo
(bad)
or
push
aam
fwait
jecxz
mov
adc
mov
push
das
cwde
jp
out
and
shl
sub
out
popa
fstp
es
sbb
out
adc
loope
cmc
retf
fisttp
push
pop
pop
aad
test
or
leave
test
fdiv
and
aaa
ins
ret
jmp
dec
std
dec
pushf
cmp
xchg
adc
mov
in
and
mov
dec
(bad)
xchg
dec
lods
or
jns
sbb
or
mov
std
lock
adc
mov
lds
loopne
jb
mov
popa
(bad)
mov
rcr
ja
mov
enter
jbe
stos
adc
loop
cmp
aaa
add
mov
push
sti
int3
bound
xchg
cmp
pop
mov
iret
imul
or
popa
inc
xlat
mov
sbb
mov
push
lea
push
mov
jb
xor
xchg
sub
out
mov
push
adc
jae
jbe
jle
rcl
inc
retf
mov
mov
repz
aad
es
jnp
test
outs
cmp
dec
mov
sub
aad
mov
xchg
aam
mov
jne
mov
in
sbb
inc
movs
std
lods
ret
fiadd
push
pusha
leave
add
outs
hlt
mov
in
push
inc
aaa
mov
push
cmps
sbb
in
aad
daa
adc
clc
cmp
xchg
das
retf
lea
mov
in
adc
iret
mov
(bad)
rol
cdq
push
sbb
test
mov
mov
retf
push
movs
mov
mov
pop
xor
dec
lea
int3
movs
(bad)
push
fist
rcl
adc
xlat
mov
push
shl
ret
sbb
cmp
daa
add
popf
mov
popa
dec
xchg
(bad)
pop
sar
add
push
mov
pop
sub
(bad)
cmp
or
fsubr
and
cdq
mov
inc
push
sub
cwde
sub
fs
inc
mov
push
add
pop
out
pop
(bad)
test
mov
push
dec
loop
cmp
setbe
mov
je
add
stc
sbb
sub
mov
retf
inc
pop
push
inc
popf
ja
fnstsw
push
sti
xchg
scas
dec
inc
mov
push
in
mov
dec
shl
je
xchg
ins
adc
nop
out
mov
pop
inc
in
add
xor
inc
jl
sub
mov
cdq
xchg
and
and
icebp
mov
and
xlat
imul
leave
xchg
jne
dec
outs
jne
fs
std
xchg
aad
outs
sbb
loop
mov
test
inc
push
and
jns
cs
mov
xchg
aaa
in
mov
fwait
push
push
cli
and
test
lea
mov
mov
pop
mov
mov
add
shl
dec
repnz
pop
nop
fimul
sbb
pop
add
push
adc
sub
dec
xchg
dec
test
xchg
cmp
cmp
stos
xchg
or
mov
(bad)
int
mov
mov
ins
inc
cmp
in
imul
test
mov
xchg
call
pop
int3
inc
or
movs
adc
push
dec
aad
mov
xchg
test
sahf
lods
ins
leave
jp
data16
and
lock
pop
or
mov
add
mov
xor
fwait
ret
aad
push
pop
dec
sub
test
cmps
ror
sub
and
in
cs
scas
movs
cmp
and
and
das
std
inc
cmp
adc
inc
or
push
jmp
push
(bad)
and
cdq
inc
loopne
call
mov
push
push
movs
mov
xchg
dec
stc
sbb
add
sbb
and
jbe
inc
out
out
aam
aaa
mov
mov
nop
(bad)
in
js
push
jge
cli
xlat
rol
out
push
xchg
es
fild
dec
dec
xchg
jne
scas
sbb
cmc
sbb
xor
ins
dec
(bad)
adc
add
mov
(bad)
add
les
xor
loop
push
mov
adc
ss
mov
shl
shr
dec
out
mov
ins
ins
shr
ret
mov
pop
or
or
inc
push
out
aas
sub
cmp
mov
clc
mov
lods
mov
pop
jne
test
mov
xor
push
mov
push
sub
add
shld
sbb
mov
xchg
pop
xchg
push
fmul
rcr
mov
hlt
jge
int
adc
xor
imul
push
(bad)
mov
add
inc
je
xor
jo
clc
ficomp
retf
iret
sbb
add
and
loopne
sahf
fld
out
fs
aaa
test
jmp
pop
lock
xchg
int
jns
idiv
xor
mov
xor
or
mov
push
add
retf
ds
loop
inc
(bad)
retf
rcl
xchg
push
pop
loopne
mov
or
into
mov
pop
pop
push
call
fimul
dec
jge
sbb
push
inc
hlt
aam
pop
ins
icebp
mov
pop
popf
mov
push
sub
leave
das
xor
jb
push
les
cmps
out
or
stos
inc
mov
das
in
sub
rol
jae
mov
aam
fs
or
pop
mov
cwde
dec
inc
dec
lods
lahf
inc
mov
xchg
sub
add
inc
out
inc
idiv
retf
adc
shr
jnp
mov
add
and
fcomip
add
push
sbb
and
sbb
and
or
call
repnz
cmp
clc
cmc
popa
add
jg
repz
jnp
cmp
mov
xor
rcl
ins
iret
mov
mov
jge
loopne
jo
xchg
cmp
icebp
gs
cmp
int3
aas
xchg
add
movs
jo
retf
sub
sub
sub
movs
mov
xor
cdq
mov
data16
and
scas
push
mov
das
push
test
sbb
inc
jae
adc
adc
jo
adc
(bad)
out
sub
test
retf
add
sub
add
xor
pop
aad
ror
(bad)
ds
loope
movs
inc
xchg
movs
dec
xor
jmp
pop
sbb
(bad)
ror
rol
aas
mov
mov
sub
shr
and
lods
mov
rol
popa
mov
fisub
pop
sahf
test
ins
sahf
mov
aad
mov
int
jl
repz
imul
dec
sub
or
test
out
rcl
cs
ret
fdiv
gs
fidivr
aas
not
pop
mov
pop
and
jg
addr16
cs
ins
adc
mov
(bad)
adc
inc
or
jb
outs
loop
jo
aaa
fsub
cdq
iret
fstp
mov
stc
mov
jne
sub
mov
cmps
std
xchg
(bad)
jmp
rcl
ret
pop
jns
mov
dec
int3
sub
dec
and
pop
or
icebp
pop
push
(bad)
call
stos
icebp
mov
out
and
lods
or
test
xlat
sub
fisub
cmp
push
pop
jno
xor
mov
add
inc
dec
ss
pop
stos
adc
enter
cld
add
mov
jns
xchg
sbb
ror
mov
ja
xchg
push
sbb
jnp
iret
mov
xor
xor
mov
sbb
jae
dec
pop
pop
cmp
popa
push
xchg
adc
cmovg
xor
arpl
lods
test
dec
hlt
retf
ins
outs
in
mov
add
adc
fimul
mov
les
jae
jg
ja
jne
jmp
mov
adc
add
aam
mov
adc
jns
inc
sub
adc
movs
(bad)
mov
lock
lods
out
loope
jne
xlat
cmp
outs
fwait
xchg
sub
ror
loop
jne
sub
ret
jl
jmp
xchg
loope
imul
add
sbb
cmp
xchg
into
sbb
call
mov
in
(bad)
adc
mov
jae
pop
or
mov
fbstp
(bad)
fdivrp
addr16
or
pushf
mov
gs
mov
repnz
icebp
push
lahf
in
pop
add
enter
and
imul
sbb
(bad)
and
ins
pusha
add
mov
lods
rcr
mov
mov
and
(bad)
or
fsincos
mov
mov
mov
icebp
stos
ins
add
(bad)
das
imul
test
mov
aam
aam
cdq
rcr
and
xchg
pop
lahf
lock
repnz
leave
dec
sbb
inc
jne
mov
shl
push
xor
aad
cdq
or
xor
into
jo
inc
fimul
fsub
xlat
xor
movs
mov
ss
dec
out
daa
repz
data16
pusha
inc
mov
test
sub
test
in
fcomp
lods
or
inc
adc
jnp
jnp
cmps
scas
imul
adc
sti
sbb
cmp
inc
popa
sar
pop
out
cwde
mov
push
mov
dec
push
pop
sbb
sub
jae
call
(bad)
lods
or
repz
push
push
xor
pop
xor
push
adc
cdq
jge
mov
jl
and
retf
adc
lea
pop
int3
xchg
adc
ss
pop
push
and
std
xlat
popf
int3
jne
push
jg
cmp
into
pop
sbb
mov
test
xchg
inc
and
jecxz
push
mov
mov
imul
jle
dec
and
jo
or
inc
jl
lahf
sbb
pop
mov
test
ins
dec
iret
sbb
sbb
push
sub
div
sub
ins
pop
jno
(bad)
fsub
ds
push
xchg
dec
cs
in
call
rcl
call
jl
cdq
fidivr
xor
call
jge
and
xchg
out
xor
mov
imul
jo
adc
dec
dec
test
rcl
ss
jnp
movs
ret
cmp
add
std
mov
fs
aaa
hlt
push
jge
sbb
xchg
lea
mov
pop
das
dec
repz
pop
xor
addr16
jecxz
mov
mov
dec
stc
ror
or
stos
xor
mov
hlt
or
sbb
pop
jecxz
jno
sahf
inc
ja
add
aas
inc
in
push
dec
ret
stos
sub
leave
(bad)
cdq
ret
jo
fsub
bound
mov
push
inc
dec
cmps
shl
inc
push
int3
adc
icebp
(bad)
sub
popa
mov
aad
shl
fxam
lods
and
leave
icebp
addr16
test
mov
div
push
gs
repnz
mov
mov
mov
pop
fistp
shr
aaa
xor
inc
ror
fucom
mov
fmul
push
mov
mov
mov
neg
clc
push
push
jno
mov
sub
jnp
jmp
and
cld
sbb
aaa
mov
shr
mul
out
mov
and
cli
out
in
retf
mov
or
fwait
scas
jl
jne
xor
(bad)
clc
retf
retf
jp
in
jmp
daa
out
je
mov
xor
sbb
cmp
sbb
cld
in
cld
ds
and
test
movs
jl
mov
test
inc
cli
aad
push
(bad)
bound
inc
out
out
push
mov
mov
pop
sub
add
rcr
sbb
lea
lock
add
sar
push
xchg
sub
in
mov
lods
outs
mov
test
mov
add
pushf
ja
retf
icebp
pop
inc
(bad)
shl
mov
out
mov
in
adc
bound
jb
lods
xor
jg
out
in
in
out
dec
push
rol
push
sbb
popf
xor
adc
and
retf
loop
inc
popf
sbb
sbb
outs
and
xlat
scas
xor
aad
test
pop
adc
mov
and
das
and
mov
in
jmp
scas
in
sub
int3
scas
xor
push
mov
cmps
jb
lods
test
or
cs
lods
cdq
loopne
push
retf
jbe
shl
adc
push
loop
pushf
mov
add
jmp
push
mov
mov
in
xor
or
retf
dec
addr16
xchg
adc
out
fwait
inc
lahf
add
shl
ja
cmp
jae
or
jo
repz
cdq
sbb
mov
mov
fmul
push
jmp
xlat
or
mov
mov
xchg
in
or
cmp
pop
push
mov
push
xchg
dec
sbb
push
outs
xor
loop
out
xor
inc
jl
inc
das
adc
pop
daa
outs
pop
cmps
out
push
loope
sub
sub
push
test
inc
and
push
inc
mov
jae
std
sbb
imul
rcl
cmc
cmp
mov
test
add
cli
push
and
addr16
add
inc
out
sbb
dec
popa
fimul
mov
sbb
popa
loope
aaa
popf
xchg
mov
stc
mov
cwde
dec
adc
adc
fisttp
test
dec
adc
int3
ret
inc
inc
cwde
movs
mov
ja
xor
add
aam
mov
ja
dec
outs
out
cwde
lds
push
adc
or
pop
outs
test
jp
out
push
and
call
pop
cld
pusha
jle
mov
jno
mov
pop
dec
mov
adc
adc
xor
inc
je
xor
inc
adc
and
add
or
or
pop
add
movs
or
and
xor
dec
lea
(bad)
jmp
das
adc
fadd
dec
add
ret
adc
ja
mov
pushf
mov
ja
pusha
test
cmp
mov
into
cmp
dec
aaa
adc
movs
mov
mov
jne
dec
cmc
(bad)
cli
int
cmp
lahf
int
push
in
sti
jb
sbb
add
test
sub
push
sbb
js
and
and
ret
lods
test
xor
xchg
mov
sbb
and
mov
popf
loop
cmp
sbb
cs
std
adc
mov
sbb
dec
inc
sti
in
dec
(bad)
pushf
bound
mov
ror
in
sub
and
cdq
pushw
mov
int3
inc
sub
(bad)
xor
push
rcl
mov
jecxz
push
popa
out
loop
mov
xchg
daa
outs
call
mov
push
sbb
fisub
and
lock
movs
fnstsw
push
jg
clc
aas
inc
stos
daa
ja
pop
jne
mov
sbb
fimul
xchg
sbb
out
mov
sub
je
rcl
popa
je
das
pop
xor
jo
aaa
sbb
xlat
leave
mov
sub
std
outs
ret
cdq
adc
(bad)
lahf
push
jle
sbb
push
jmp
xor
and
adc
(bad)
dec
inc
or
push
sahf
inc
hlt
jne
ja
sbb
add
retf
out
fwait
mov
inc
xor
dec
hlt
mov
popa
pushf
aas
aad
sbb
outs
xor
(bad)
pop
sbb
adc
repz
jl
aaa
lock
cli
dec
sti
jecxz
sbb
retf
jb
out
cmc
scas
sbb
inc
mov
in
in
dec
cmc
pop
(bad)
test
jg
ficom
mov
xor
imul
and
mov
fs
pop
adc
jp
in
xor
imul
cs
jmp
ja
dec
pop
(bad)
xor
inc
out
in
cdq
push
or
sti
adc
push
push
enter
mov
xlat
jl
aaa
inc
sub
mov
imul
pop
sub
stos
xchg
(bad)
xor
fs
sahf
adc
push
cmc
sbb
xor
out
ins
inc
jecxz
sbb
xor
jae
xor
js
mov
fcmovnbe
dec
jg
push
stos
jns
iret
and
test
ins
sub
adc
rol
mov
xchg
mov
cmc
mov
xor
or
add
out
push
or
push
sbb
js
into
test
call
and
lahf
adc
js
and
dec
jecxz
aas
hlt
dec
in
sbb
ins
mov
push
xchg
xor
and
sub
or
pop
mov
call
inc
sti
pop
jo
pop
xor
lahf
ss
add
xor
mov
popf
scas
inc
sub
xor
push
jnp
es
mov
dec
into
(bad)
retf
mov
pusha
push
sar
mov
jo
daa
cwde
and
mov
shr
stos
mov
mov
cmp
inc
imul
test
add
jnp
inc
pop
adc
adc
inc
mov
bound
jne
lea
mov
or
dec
xchg
int3
mov
mov
xchg
cmps
imul
mov
aas
jb
dec
in
sub
loop
mov
dec
bndstx
jmp
add
outs
dec
not
in
mov
pop
push
lahf
xor
int
aam
psraw
cld
leave
bound
jbe
daa
mov
(bad)
ins
test
push
add
pushf
xor
add
jge
jae
add
pop
jno
inc
inc
sbb
mov
push
in
fstp
es
cwde
inc
push
stos
fisub
xchg
xchg
xchg
rol
mov
add
or
ins
ret
(bad)
adc
push
ret
addr16
es
xchg
jae
add
jg
(bad)
loop
(bad)
mov
cmps
adc
repnz
add
aad
or
dec
push
or
fwait
mov
cmc
sbb
inc
adc
mov
or
or
imul
cs
fst
cmp
dec
inc
stc
out
dec
pop
push
enter
push
daa
ja
in
mov
jl
xchg
cmc
sbb
fsubr
dec
jl
aas
scas
adc
test
iret
fstp
pop
mov
jne
ret
push
aam
jmp
scas
sbb
mov
mul
ret
lods
in
repz
mov
movs
out
sub
(bad)
test
popa
test
sti
lock
test
cmc
pusha
shl
mov
pop
inc
xor
cmp
ret
test
cmp
mov
(bad)
sbb
sub
sbb
outs
out
add
push
mov
lds
fld
adc
sbb
mov
aad
add
iret
adc
mov
sbb
imul
(bad)
frstor
pop
mov
cmps
vpshufhw
mov
(bad)
(bad)
fst
mov
bound
fistp
adc
add
ret
ins
or
outs
mov
frstor
pop
or
stos
dec
jmp
(bad)
fdiv
push
inc
iret
xchg
jb
adc
dec
test
int3
(bad)
popf
pop
jmp
adc
in
cld
es
sub
push
into
addr16
cmp
push
dec
movs
push
adc
xchg
scas
pop
mov
adc
adc
retf
loopne
das
push
dec
cld
into
and
js
rcl
shl
or
cmc
mov
hlt
xchg
in
mov
push
dec
cmp
inc
mov
mov
scas
push
ins
(bad)
daa
sar
cmp
out
mov
cmp
les
fprem
or
sub
repnz
push
xor
jns
pop
gs
ds
dec
out
sub
or
cmp
iret
pop
lods
outs
(bad)
dec
fs
movs
mov
sub
leave
cmp
or
rcl
cmp
and
or
mov
push
sahf
mov
cmp
aaa
cmc
test
mov
out
and
lods
mov
or
jbe
hlt
jo
ror
aam
shl
mov
dec
xlat
data16
nop
daa
mov
retf
loope
or
inc
add
push
imul
adc
aam
jge
popa
out
adc
imul
lds
cmc
xchg
jle
mov
push
xlat
and
push
dec
inc
jae
mov
sub
pop
popf
dec
adc
sbb
popf
loopne
mov
xchg
or
sub
int3
sbb
mov
push
jae
pushf
call
clc
or
retf
xchg
push
fwait
sbb
pop
mov
hlt
les
inc
add
cmp
cmp
jmp
push
outs
outs
pop
movs
sub
test
leave
jg
or
iret
sar
xor
es
xlat
or
pop
push
lods
test
mov
cmc
mov
les
scas
xchg
sbb
ja
(bad)
call
inc
dec
adc
sub
xor
lock
popa
push
cmps
outs
mov
fsub
lahf
je
cwde
push
in
cmp
popa
xchg
in
repz
inc
push
les
mov
xchg
push
ret
xchg
sub
jae
xchg
rcl
imul
fucom
fsubrp
iret
adc
sar
mov
cmp
int
repnz
cld
sub
stc
popf
add
enter
lods
test
pop
jno
pop
in
push
div
mov
nop
adc
mov
clc
pop
push
jl
mov
clc
push
xor
movs
jge
jl
(bad)
inc
adc
stos
add
dec
xchg
(bad)
cmp
arpl
ret
cmp
retf
out
mov
add
call
xchg
pop
addps
mov
sbb
imul
mov
jb
xlat
mov
add
push
repz
mov
pop
jno
mov
pusha
pusha
add
enter
fnstsw
pop
js
lods
ret
es
xor
leave
popf
mov
jnp
ror
and
fdivr
jo
lock
mov
fidivr
scas
stc
fldenv
cmp
pop
lahf
mov
stc
pushf
push
mov
stc
adc
cli
les
dec
dec
mov
fcomp
push
and
cwde
(bad)
jo
xor
push
call
mov
xchg
leave
push
sti
rcr
movs
jmp
pushf
mov
mov
xor
retf
and
push
(bad)
out
inc
jo
jle
fs
hlt
daa
mov
dec
sbb
movs
jno
pop
jl
push
cmc
mov
bound
inc
jl
sub
into
dec
enter
dec
or
and
push
sti
adc
dec
loop
ja
push
adc
(bad)
jmp
ror
or
and
push
addr16
fs
(bad)
push
push
push
mov
fwait
outs
sti
test
mov
fdivr
and
xchg
imul
add
sbb
cmc
mov
add
inc
hlt
retf
scas
xor
sbb
pop
add
cdq
cmp
push
or
xchg
addr16
mov
push
repz
mov
xor
shr
retw
add
cmp
stos
loope
push
scas
sub
mov
(bad)
sbb
aaa
sbb
sub
jno
push
xchg
das
mov
pop
aas
push
es
dec
out
test
in
ins
adc
and
iret
push
dec
mov
ss
inc
cli
push
mov
imul
xor
aaa
movs
out
lds
mov
jg
push
mov
fmul
mov
pusha
xchg
push
push
xchg
jmp
lods
mov
repz
jbe
mov
mov
mov
xchg
clc
sbb
stos
dec
mov
rol
push
xchg
xor
jne
cmp
adc
jg
test
loopne
dec
scas
dec
push
mov
test
imul
repnz
mov
not
or
jno
jle
sub
push
cmp
clc
sahf
addr16
fmul
es
mov
push
rol
jle
(bad)
iret
xchg
fcmove
in
clc
pusha
sub
movs
lock
sbb
push
and
cld
xchg
dec
js
inc
xor
stc
mov
xor
cmps
add
cmp
lods
or
mov
test
xchg
retf
push
push
bound
ds
sub
pop
test
and
sar
out
cmp
adc
push
push
loop
add
cmps
jecxz
xor
addr16
adc
mov
lea
dec
adc
mov
outs
push
mov
cmp
mov
lods
jmp
enter
mov
ins
pop
sahf
ret
push
adc
sahf
fcom
or
aaa
ja
rol
pop
xor
imul
cmp
mov
xor
add
or
xchg
fld
mov
enter
outs
cmps
js
shr
sbb
(bad)
mov
aad
shl
cmp
jg
jg
rol
sub
push
add
jp
sbb
shr
aas
arpl
cs
pop
test
cmp
add
gs
jmp
pusha
call
(bad)
or
in
push
ds
jge
popf
(bad)
and
loopne
mov
std
pop
popa
mov
in
leave
fucom
mov
ror
imul
hlt
daa
add
jl
adc
add
loop
inc
nop
sti
jmp
js
outs
xchg
ret
and
sar
sbb
cli
add
scas
shl
cmp
push
add
scas
test
cmp
dec
not
test
jb
addr16
push
shl
imul
and
pop
mov
mov
sub
adc
pop
icebp
sub
inc
jge
sub
sbb
cli
sbb
adc
or
mov
xchg
adc
sub
je
lds
data16
aam
sub
xor
inc
cmp
pop
pop
add
ja
jae
clc
into
jbe
mov
mov
and
aad
call
out
sbb
xlat
or
jge
push
out
outs
adc
test
add
mov
js
sbb
les
aaa
mov
adc
loopne
pop
in
ret
mov
jns
mov
js
push
mov
mov
clc
xor
mov
adc
cs
lock
mov
pusha
jmp
(bad)
mov
xor
(bad)
inc
sbb
sbb
test
lods
test
sahf
and
(bad)
shl
and
lock
and
lea
sahf
aam
call
mov
mov
(bad)
jle
xchg
sbb
pop
lds
lock
cmps
jno
mov
shl
pusha
out
movaps
in
int3
cld
push
(bad)
jnp
add
push
xchg
out
xor
push
xlat
lds
js
cs
call
push
into
cmps
cmp
test
fwait
arpl
in
in
lock
fst
jmp
jl
shl
inc
sub
lock
icebp
add
cli
jp
and
dec
jo
inc
pop
fcomp
shl
mov
cmp
retf
stos
xor
mov
push
mov
or
pusha
in
mov
leave
test
lahf
js
(bad)
dec
stos
popf
mov
adc
sbb
out
je
pop
add
and
pushf
(bad)
adc
and
inc
or
out
repz
mov
mov
movs
test
stos
popa
fdivr
int3
daa
cli
push
jg
push
cli
(bad)
sbb
sbb
(bad)
mov
jmp
or
and
shr
jge
imul
xchg
lods
and
jne
daa
jbe
ror
mov
cdq
scas
pop
xor
in
mov
dec
cmps
fld
aas
xor
add
adc
dec
fld
pop
pop
push
in
ret
pop
inc
push
shl
mov
or
scas
cmp
jl
xchg
out
in
or
outs
sahf
mov
mov
aam
jns
push
cld
enter
movs
inc
aad
stos
popf
xchg
dec
push
imul
sahf
scas
mov
scas
dec
repz
rcl
dec
aad
or
mov
ds
(bad)
(bad)
ror
cld
mov
sub
xchg
stos
and
push
mov
gs
into
nop
xchg
sub
js
jge
xchg
jns
gs
fisttp
mov
pop
inc
in
pop
mov
fs
test
push
enter
cwde
xor
cwde
push
sti
das
arpl
pop
inc
(bad)
jp
xor
add
cdq
out
pop
and
mov
mov
rcl
add
cmp
aas
sbb
push
cmp
and
pop
leave
mov
arpl
fs
fs
jae
popa
cwde
mov
scas
mov
inc
pushf
dec
stc
ds
ins
xor
ins
fldcw
cmp
sahf
mov
enter
lea
sbb
cdq
push
out
mov
scas
jae
mov
add
add
xchg
or
inc
aaa
outs
fnstcw
(bad)
sti
push
fmul
mov
cwde
mov
shl
addr16
dec
mov
jb
sbb
pop
push
outs
or
add
mov
jmp
pop
call
or
mov
cmp
fmul
hlt
and
cmps
aam
(bad)
inc
ss
fimul
jne
add
push
add
or
int
loopne
add
sbb
push
int
out
into
shl
scas
cmp
mov
push
pop
mov
sub
add
mov
xchg
and
pushf
stc
pop
xchg
rol
enter
add
(bad)
dec
addr16
arpl
xlat
fwait
xor
std
xor
xchg
sbb
pop
in
or
mov
dec
or
inc
sub
push
push
sub
sub
sub
idiv
jmp
es
and
and
cmp
jnp
retf
push
mov
aas
cmp
mov
out
daa
cmc
xchg
inc
outs
das
sub
mov
xor
(bad)
stc
jg
test
stc
xchg
daa
into
pop
es
dec
mov
pushf
daa
stos
adc
sbb
sbb
mov
pop
jnp
scas
xchg
push
jp
ret
xchg
xchg
ja
adc
xchg
nop
adc
push
xchg
lds
in
sbb
xchg
retf
retf
popa
inc
scas
ja
pop
test
xchg
jge
jae
jmp
pop
pop
imul
xor
cmc
push
repz
sub
dec
inc
mov
ret
inc
call
popf
jmp
sub
xor
push
mov
xor
cwde
jbe
sbb
jae
mov
mov
jmp
inc
repz
adc
out
out
xchg
add
adc
inc
cmc
mov
push
hlt
mov
iret
mov
shl
mov
outs
fistp
xchg
cmp
push
and
adc
fwait
imul
push
pop
popf
jns
std
bound
scas
push
push
popa
aas
adc
sahf
jns
dec
fwait
loope
loop
in
push
aas
fild
mov
mov
mov
test
inc
jae
jg
jnp
ret
jbe
and
cmp
push
shl
cwde
js
mov
cli
in
mov
shl
jno
and
gs
lods
cmps
fist
idiv
ins
sub
inc
(bad)
jmp
and
mov
dec
fdivr
shr
push
int
icebp
adc
jmp
sub
mov
fcomp
dec
stc
and
pop
mov
cmp
mov
call
frstor
push
inc
fwait
into
jecxz
fsub
lahf
out
mov
and
fidivr
and
sub
ret
and
mov
int
scas
add
cli
adc
add
mov
cmp
icebp
or
cmps
js
int3
bound
retf
pop
cli
dec
mov
pushf
int3
xchg
cmps
sahf
enter
arpl
aaa
rol
retf
stos
bound
shr
(bad)
retf
mov
pop
adc
cmp
pop
cs
pusha
cld
jbe
push
mov
cmp
sub
add
stos
cmps
ret
sub
loope
mov
mov
aaa
jl
jge
std
les
mov
(bad)
ret
jmp
dec
jg
jbe
xor
aad
stos
xor
or
cmp
cmp
std
mov
mov
dec
mov
xor
addr16
cld
test
cmp
out
xchg
add
fbld
mov
into
stc
push
fiadd
sti
sbb
outs
imul
and
daa
xor
jle
xchg
or
inc
xchg
in
aam
xchg
loope
out
int
in
std
bound
xchg
xor
fistp
sub
pop
push
dec
mov
add
outs
lea
fcom
and
popf
aaa
cmp
fistp
cs
inc
pop
cli
sub
dec
in
push
pop
mov
cmp
xchg
call
pop
jl
sbb
je
(bad)
movs
aam
cmp
mov
inc
jns
shl
mov
ins
mov
popf
add
std
test
imul
clc
mul
adc
lea
add
test
les
iret
es
aam
cdq
xchg
lea
xor
xchg
and
(bad)
cmp
ins
lahf
(bad)
cmp
sbb
and
inc
mov
retf
mov
in
push
sbb
jl
or
lods
or
xchg
out
inc
fwait
(bad)
and
arpl
mov
pop
iret
and
sahf
loop
sahf
adc
jo
xor
outs
adc
rcl
xchg
lahf
sub
jae
push
add
fwait
pop
inc
inc
jge
pop
xor
ror
cmp
js
mov
push
or
xchg
mov
ret
rcr
inc
cli
xchg
lahf
mov
sbb
mov
mov
in
and
and
pushf
leave
fiadd
and
jmp
cmc
mov
loopne
in
pop
dec
jp
and
test
retf
mov
(bad)
and
aaa
fwait
(bad)
enter
sar
outs
mov
fsubr
dec
aam
rcl
jg
cmp
push
or
and
xchg
push
cmp
adc
mov
xor
loop
loope
scas
add
stos
and
mov
push
cmp
jg
mov
daa
out
(bad)
mov
cmps
into
ds
xchg
jb
in
shl
jecxz
pop
and
call
daa
adc
(bad)
or
mov
fwait
sub
popa
adc
adc
mov
inc
jae
mov
ret
into
mov
es
adc
daa
mov
jge
inc
sbb
sbb
out
sbb
xor
or
(bad)
and
ja
aad
xlat
pusha
mov
push
add
cmps
dec
add
fadd
adc
xor
jl
cli
ror
xor
mov
pop
push
push
in
fwait
je
and
xlat
add
mov
std
adc
push
test
dec
adc
test
pop
movs
(bad)
fst
push
sbb
sti
mov
cmp
shr
pop
dec
jg
aad
imul
sub
in
jmp
lods
or
inc
adc
push
jecxz
retf
sub
arpl
in
das
xchg
aaa
cmp
mov
push
movs
int
fucomip
lahf
dec
sub
test
push
aam
pushf
pop
inc
jecxz
xchg
dec
lds
test
leave
sbb
and
push
sti
and
add
sti
lea
push
dec
imul
jnp
neg
mov
or
push
cmps
add
fs
sbb
xchg
push
cmc
fucomp
repz
inc
push
push
test
out
push
add
out
mov
mov
lock
sub
into
std
je
sar
xor
les
mov
xchg
mov
ret
dec
imul
movs
push
sbb
mov
xchg
cwde
(bad)
lea
push
fdiv
test
pop
leave
pop
xchg
mov
push
out
retf
push
xchg
push
dec
mov
aas
pop
dec
cmp
xor
sub
xchg
das
mov
cmps
add
xor
sub
fs
jecxz
or
mov
sbb
test
adc
xor
rcl
lahf
cmp
fs
pop
rcr
cmp
stos
gs
(bad)
rep
and
int
push
cld
xchg
stos
jbe
(bad)
popa
and
add
movs
mov
test
imul
into
inc
sbb
add
add
inc
inc
inc
xchg
stos
fistp
stc
adc
ja
push
fld
mov
out
jle
jb
push
jecxz
jmp
vmread
jle
cmp
test
jp
lods
xchg
cmp
xchg
addr16
(bad)
xchg
ret
push
push
pop
int3
push
mov
stos
and
in
push
xchg
repz
jmp
sti
mov
xchg
sub
int3
inc
inc
add
(bad)
cmp
pop
xchg
mov
dec
repnz
sub
add
mov
cdq
dec
repnz
clc
rol
mov
fisubr
pop
addr16
scas
shl
in
dec
loopne
nop
mov
or
and
test
jmp
scas
call
xchg
dec
repz
ins
lods
sbb
sub
je
(bad)
arpl
and
pop
jle
inc
popf
stc
jle
and
push
sbb
cmp
mov
push
out
push
cmps
push
fwait
adc
mov
add
mov
cmp
inc
dec
imul
clc
inc
jns
jno
mov
ins
fwait
sub
or
in
ret
xor
in
call
inc
jae
iret
sub
inc
jmp
dec
lods
xchg
in
add
js
stos
sub
pop
sub
icebp
adc
fdivr
push
xor
inc
cmp
cdq
fs
inc
or
and
cmp
mov
inc
jnp
adc
inc
test
loope
cmp
cs
pushf
push
dec
and
cmp
jmp
arpl
jmp
retf
jp
push
mov
or
test
int3
dec
mov
sub
loope
inc
test
and
loop
popfw
xor
imul
(bad)
xor
or
jbe
imul
popf
gs
stc
js
pop
add
mov
inc
mov
lods
dec
adc
jl
mov
lahf
mov
xchg
and
add
pop
aas
sub
pop
pop
inc
in
mov
pop
in
add
jo
push
stc
cli
fist
nop
and
repnz
aaa
jae
jnp
inc
adc
daa
adc
push
xchg
imul
fwait
lock
add
fdivr
js
xor
test
pop
add
jo
popa
or
xor
rcr
mov
arpl
cmps
das
mov
enter
jno
cmp
or
push
imul
dec
in
movs
add
jae
ja
clc
or
mov
mov
jne
or
xchg
jle
retf
add
jge
out
lods
scas
mov
bound
fisttp
es
cdq
lahf
xor
add
jb
cmp
dec
mov
loopne
push
sahf
cmp
push
shr
mul
inc
xor
lea
mov
nop
ins
pop
mov
std
mov
xor
cld
cmps
into
and
scas
ins
fimul
adc
out
push
add
retf
pop
fdivrp
(bad)
pop
mov
(bad)
cmp
imul
and
pop
pop
lods
jae
sbb
inc
or
ror
lahf
add
mov
and
cs
mov
mov
cmp
pop
ja
mov
adc
rol
fstp
cmp
xchg
sar
es
sbb
jae
clc
ds
cld
and
mov
push
mov
mov
push
push
gs
rep
jl
mov
xchg
scas
inc
mov
sub
dec
bound
pop
xchg
popa
sub
addr16
sbb
idiv
cmps
inc
xchg
bound
movs
and
out
daa
ficom
lahf
stos
pop
push
add
pop
outs
ins
shl
xchg
xor
and
mov
popf
lea
mov
or
xchg
aaa
or
dec
adc
ins
add
mov
pop
inc
test
lds
sbb
mov
ss
cmp
jg
mov
arpl
pop
out
cmp
xchg
lock
mov
cmp
test
rol
cmp
dec
jp
mov
ficom
adc
mov
and
jl
std
pop
scas
cmp
mov
ins
xchg
(bad)
into
fadd
movs
jecxz
add
xor
sbb
ror
mov
xlat
mov
je
call
or
mov
inc
cmp
jb
xchg
and
xchg
bnd
data16
mov
(bad)
push
sbb
push
xor
push
(bad)
xlat
xor
sti
stc
stos
pop
adc
lds
sbb
(bad)
sahf
test
mov
push
push
cmp
lock
mov
jo
and
push
push
lock
std
(bad)
outs
lods
mov
imul
mov
pop
dec
push
fcom
aaa
xchg
and
cdq
pop
and
push
stc
cmc
mov
das
outs
dec
pop
test
popa
popf
inc
ins
out
scas
add
xchg
imul
add
in
adc
in
shr
or
pop
stos
pushf
out
ror
push
mov
adc
dec
xor
scas
fisubr
jae
aad
out
or
mov
sub
popf
push
pop
movs
sahf
xor
push
fdivr
jmp
jecxz
in
fs
cmp
call
out
sbb
pop
adc
sahf
sahf
xor
and
ror
dec
sub
(bad)
push
mov
sti
fisttp
dec
sub
push
add
loop
or
xor
das
dec
out
ret
pop
(bad)
adc
cwde
dec
cmp
and
mov
int3
adc
jb
pushf
mov
neg
es
pop
inc
adc
xchg
mov
scas
pop
outs
std
xor
in
push
xchg
cmp
in
lock
out
dec
fs
iret
xor
fwait
in
mov
mov
lods
pop
sub
stc
xor
(bad)
imul
sub
jle
xor
ins
pop
movs
jmp
imul
xchg
inc
dec
inc
rcl
xor
xor
ret
test
hlt
push
or
mov
sti
push
dec
shl
sub
dec
xchg
and
and
pop
xor
loop
cld
mov
push
aas
int
xchg
jo
add
mov
call
xor
loope
xchg
jg
pusha
(bad)
xlat
or
call
mov
cli
ss
jnp
hlt
movs
jge
jge
and
mov
push
lods
ja
mov
cmc
nop
mov
aad
sub
cmp
ja
int3
push
pushw
bnd
mov
loopne
sahf
inc
mov
shl
dec
push
and
jb
lds
mov
data16
jo
jge
jns
cdq
inc
(bad)
or
mov
push
adc
fistp
xchg
xchg
es
retf
imul
or
cld
aas
jne
xlat
mov
cli
les
jmp
in
les
xchg
jge
retf
sbb
push
jge
jno
cwde
shl
test
push
xlat
cli
stos
xor
test
fwait
jo
mov
xor
pop
mov
jg
js
push
fnstcw
cwde
sbb
jae
jl
ret
xchg
add
mov
pop
or
loop
and
xor
pushf
push
mov
icebp
outs
aaa
cmp
dec
les
cmp
mov
sbb
cmc
jl
dec
pop
mov
push
mov
add
sbb
ins
je
pop
mov
setle
push
test
or
dec
push
adc
sbb
add
ss
xor
adc
cmp
mov
cmp
mov
xchg
mov
and
or
cmc
jno
sub
jl
test
inc
rol
sahf
retf
inc
dec
rol
jae
stc
(bad)
xor
and
lea
in
xlat
lahf
daa
ror
mov
mov
mov
rcr
leave
mov
je
mov
mov
gs
pop
fidiv
aaa
sbb
icebp
(bad)
mov
and
pop
pop
pop
ret
adc
cmc
div
in
(bad)
or
add
rol
cld
pop
or
adc
and
sub
xchg
and
cmps
lahf
inc
and
jnp
sbb
int3
inc
jb
xchg
imul
xor
push
leave
sub
inc
jns
sbb
(bad)
sub
dec
cmp
push
mov
jl
mov
mov
pop
push
add
push
lds
push
popa
(bad)
cmps
sub
and
jb
mov
push
jl
inc
mov
dec
add
mov
mov
push
repz
adc
or
fwait
xchg
div
ss
xor
adc
in
mov
xor
jno
call
lahf
dec
push
pushf
pop
retf
outs
adc
(bad)
or
mov
pusha
lea
(bad)
push
clc
call
add
cli
cmp
dec
stos
cmp
(bad)
adc
lock
sbb
repnz
or
dec
ss
rcr
lock
loopne
or
data16
gs
cmp
jbe
mov
fisub
loope
pop
stos
push
imul
mov
imul
push
add
adc
cmp
sahf
test
mov
mov
adc
pop
lock
das
(bad)
scas
push
push
ins
push
retf
js
cmp
inc
mov
cs
call
lea
bound
mov
lods
pusha
mov
pop
test
retf
jb
sub
ret
mov
andps
jnp
mov
add
xor
push
repnz
lods
sbb
mov
repnz
pop
ret
clc
add
ins
test
sti
out
add
jae
mov
sahf
bound
sub
jno
xchg
push
lock
ficomp
loop
inc
imul
push
dec
xor
lds
inc
aaa
and
adc
mul
out
icebp
mov
sub
mov
pop
loop
shl
cs
sahf
imul
adc
nop
sub
shr
and
mov
out
popa
daa
xor
sub
retf
lea
sbb
cmp
jno
scas
movs
mov
push
jno
ror
mov
or
je
mov
mov
imul
xchg
cmp
xchg
test
jnp
mov
and
(bad)
cmp
cmc
je
sub
idiv
mov
outs
mov
cli
mov
es
pop
jne
out
mov
push
imul
test
inc
imul
push
sub
pop
cmc
adc
lock
pop
sub
lea
or
sub
push
inc
mov
cmps
loop
jne
mov
sub
and
push
jae
cmps
(bad)
in
sub
mov
(bad)
mov
hlt
in
xor
clc
jmp
outs
push
ins
nop
test
enter
mov
xchg
addr16
lods
push
jecxz
fs
push
add
ds
pop
mov
adc
jge
pop
hlt
fs
mov
lds
cmp
ficom
enter
mov
cmps
(bad)
in
stos
adc
scas
out
call
gs
scas
jmp
jle
mov
call
dec
mov
repnz
call
les
mov
or
push
clc
and
fcom
or
mov
push
test
mov
pop
fs
(bad)
sbb
sbb
cmp
bound
aaa
std
or
sbb
mov
sub
pop
dec
mov
sbb
pop
mov
adc
xor
dec
mov
aaa
sub
rol
iret
dec
jbe
sub
out
sbb
mov
pop
popf
push
int
adc
addr16
xchg
xlat
xor
jbe
xchg
int
xchg
jbe
dec
xchg
jl
mov
xchg
jnp
arpl
pop
push
pop
(bad)
fcomp
ror
add
inc
ficomp
sbb
bound
cli
mov
test
cmp
neg
xchg
dec
cmps
movs
pushf
pop
xlat
inc
inc
sub
sub
add
dec
das
mov
popa
mov
icebp
(bad)
push
into
adc
cs
ja
jne
outs
aas
int
int3
fisubr
inc
jno
fdiv
mov
cmc
popa
mov
inc
jge
mov
cs
mov
ds
cmps
dec
sub
mov
sar
(bad)
movhps
dec
sbb
inc
mov
ret
aaa
mov
xor
inc
jle
jo
jae
xchg
je
push
pop
outs
aaa
outs
(bad)
sbb
xchg
mov
inc
enter
sahf
cmp
sub
lock
mov
movs
loopne
(bad)
js
push
push
loopne
jo
addr16
pop
mov
push
xchg
add
cmp
cld
mov
in
mov
stos
ds
add
lock
fbld
pop
aas
dec
mov
xchg
mov
xor
mov
cdq
adc
and
gs
shr
imul
jmp
mov
scas
pop
leave
mov
ins
aad
sbb
pop
mov
pop
cmp
push
test
dec
cmps
adc
xor
and
xor
scas
std
jnp
jae
or
sti
test
popa
and
(bad)
ficom
sub
pop
rcr
or
scas
xor
mov
mov
cmps
push
pop
sub
add
push
out
fisttp
add
xor
or
push
sbb
mov
shl
sub
lods
sbb
cmp
out
arpl
dec
sar
mov
loop
stos
shl
dec
(bad)
dec
add
sbb
push
test
or
xor
aaa
into
jns
mov
push
test
xchg
repnz
je
cli
mov
sbb
pop
arpl
push
mov
pop
sub
add
and
pop
pusha
loop
mov
mov
pushf
inc
pop
dec
xchg
xchg
or
push
or
cmp
fimul
pop
iret
mov
adc
rol
cwde
adc
jae
push
adc
int3
hlt
push
int3
or
push
sbb
lods
mov
jge
sbb
dec
rdpmc
mov
ja
pop
je
adc
jno
jle
mov
cmp
aad
mov
fnstenv
ins
daa
test
nop
jge
mov
add
inc
xor
jmp
ja
fwait
adc
and
mov
sub
inc
xchg
lods
pop
ret
mov
enter
push
push
jg
cwde
mov
stos
or
enter
ins
mov
ror
loope
pop
jmp
mov
sbb
cmc
mov
(bad)
push
cmps
xor
adc
in
mov
mov
retf
mov
adc
sub
mov
pop
test
outs
dec
fstp
xchg
ins
and
mov
ror
pop
loopne
test
sbb
sbb
into
loope
je
(bad)
mov
adc
rcr
cmp
push
lar
call
lods
mov
push
cmc
call
xchg
jnp
ins
je
stc
clc
xchg
es
aam
js
push
jmp
push
inc
lods
movs
and
push
dec
mov
test
add
js
clc
ret
push
dec
icebp
xchg
push
ja
inc
cli
ficom
push
cli
jae
in
pop
fsub
shl
mov
movs
cmc
cmp
lods
pop
dec
loopne
int3
stos
dec
stos
mov
fisttp
lods
dec
rol
gs
aad
jo
sub
pop
jp
(bad)
out
dec
pop
ss
lods
dec
mov
push
rol
mov
cs
mov
test
jmp
sub
jnp
call
adc
mov
cmp
test
push
adc
out
out
cmp
nop
xchg
and
iret
(bad)
mov
outs
dec
or
mov
les
cmp
fnstcw
daa
xlat
xchg
inc
mov
in
cmps
or
sar
fcomp
mov
mov
dec
pop
jnp
push
lods
add
mov
adc
inc
xchg
imul
fisttp
mov
imul
not
pop
pop
add
js
xchg
pushf
xor
inc
sub
and
outs
fadd
dec
div
sub
aas
cld
arpl
idiv
das
movs
shr
and
pavgb
xor
jl
or
lahf
xor
jns
mov
jp
retf
cmp
in
call
xchg
(bad)
repnz
mov
mov
fs
ja
cmps
outs
sbb
lock
and
in
sub
and
mov
xor
pop
(bad)
imul
movs
inc
sti
outs
jo
and
test
repnz
lods
inc
sub
sub
xchg
int3
(bad)
xlat
into
movs
outs
dec
xlat
pop
sub
lea
push
aam
mov
imul
rol
pop
jmp
in
xchg
or
xchg
fistp
sbb
dec
cmp
icebp
or
cmp
sub
dec
jl
mov
jle
inc
jge
mov
xchg
in
mov
lds
fidiv
test
cmps
mov
lods
jmp
(bad)
fbstp
jecxz
enter
imul
xor
stos
ret
test
dec
mov
inc
or
or
arpl
(bad)
rcr
ins
and
loopne
int
mov
in
push
fiadd
repnz
cmps
iret
fisub
dec
(bad)
cmp
push
retf
adc
or
mov
jmp
xor
sbb
xor
jno
xor
bound
mov
cmps
push
cmp
enter
adc
add
cvtdq2ps
jns
or
hlt
imul
lea
rcl
xor
mov
jp
or
mov
pop
(bad)
mov
fstp
inc
stc
aad
into
mov
mov
add
retf
jmp
(bad)
fdivr
xchg
cmp
outs
jp
retf
or
pop
sbb
mov
dec
adc
or
int3
push
jle
mov
and
push
rol
mov
popf
jo
jbe
lods
aam
mov
push
pop
lock
mov
pop
test
sbb
mov
xchg
xor
out
cmp
jmp
ds
xor
stos
mov
sub
cmps
cmp
and
repnz
sahf
mov
jmp
cmps
dec
loopne
fimul
add
call
sub
fdiv
bound
or
and
inc
hlt
inc
les
jecxz
addr16
pop
adc
jbe
into
inc
or
sub
inc
psrlq
aad
sub
or
inc
dec
(bad)
xor
ror
shl
inc
fcompp
fmul
test
(bad)
cs
add
mov
sti
in
dec
adc
dec
ss
outs
push
and
mov
inc
fdivr
mov
shr
mov
popf
out
and
sahf
test
lahf
push
rol
addr16
dec
mov
or
fadd
js
mov
jge
xor
xchg
arpl
jne
movs
ror
push
add
push
iret
add
add
sub
loop
loopne
dec
xchg
mov
and
xor
imul
and
push
ins
add
push
cmp
cmp
retf
cdq
push
xor
mov
sbb
in
push
aas
add
bound
cli
xchg
xchg
pop
mov
xor
sub
or
mov
or
xchg
mov
jns
xchg
repz
xchg
fld
iret
adc
or
add
xchg
pop
jb
mov
cld
cmp
test
loope
mov
test
or
push
xor
mov
cdq
pop
push
cmp
pinsrw
out
aas
jb
out
retf
jns
jge
inc
pusha
(bad)
cdq
fnsave
loope
gs
scas
stos
fnstsw
sub
sbb
das
xchg
(bad)
fcmove
cmp
jg
int
push
cmp
xor
sti
in
ins
sub
out
in
push
mov
(bad)
mov
outs
movs
and
lock
test
movs
cmp
into
cmps
test
push
fwait
jp
call
int3
popa
xchg
cmp
cmp
aam
test
cmps
and
aaa
dec
jecxz
mov
sbb
push
in
fcmovbe
jl
mov
mov
sub
inc
ja
inc
nop
and
add
sub
or
leave
mov
mov
mov
push
test
mov
and
push
div
cmp
fimul
scas
aas
jnp
cmp
pop
scas
mov
and
add
dec
push
sbb
lock
mov
mov
dec
bound
pusha
mov
push
movs
mov
pop
mov
icebp
add
jecxz
mov
cld
dec
pop
sub
pop
enter
push
fsub
lea
sbb
and
xchg
adc
or
mov
sbb
adc
inc
mov
push
fsub
or
push
pop
jb
jno
mov
add
mov
ror
xchg
xchg
adc
in
or
and
pop
xor
pop
or
std
xor
cmps
lea
sbb
js
int3
jmp
cmc
ficomp
stc
scas
ins
mov
enter
push
in
popa
stos
test
mov
xchg
test
fist
sbb
imul
push
(bad)
idiv
hlt
and
outs
clc
or
mov
lods
retf
aaa
pop
mov
scas
bound
cdq
stc
aas
enter
sbb
mov
sub
push
jo
(bad)
and
in
nop
data16
cli
and
xor
mov
es
(bad)
fnsave
daa
dec
push
or
bound
imul
mov
xchg
imul
add
rol
js
push
xor
dec
adc
jbe
scas
lods
cmps
jo
xor
push
pushf
jbe
test
mov
js
jno
inc
push
dec
cmps
ja
(bad)
xor
dec
jg
scas
sbb
sbb
adc
mov
mov
lods
pop
mov
cli
xchg
jge
or
(bad)
cmp
mov
jo
mov
xor
fcmovnbe
xor
test
fmul
or
lock
and
adc
fcomi
cmp
aas
sbb
adc
cmp
popf
push
outs
adc
movs
iret
bound
or
jg
mov
rcl
or
jle
(bad)
sbb
pop
adc
pushf
mov
retf
jmp
sub
std
or
mov
sbb
add
and
mov
push
rcr
fld
push
clc
fild
mov
and
gs
pop
leave
or
mov
loope
lock
cwde
pop
jno
add
or
call
jb
push
add
jae
pushf
not
or
push
lods
xchg
cmc
sub
data16
shr
cmp
cld
test
fnstsw
aaa
fadd
push
imul
popf
mov
jp
ds
dec
push
xor
bound
cmp
inc
dec
mov
dec
mov
ret
or
iret
lea
xor
ss
sti
outs
or
fisub
retf
(bad)
xchg
mov
ss
mov
cmp
inc
popa
push
fidivr
dec
or
push
or
jmp
dec
inc
test
cmp
test
jp
imul
inc
add
aas
ds
shr
(bad)
iret
cmp
mov
dec
dec
pushf
div
mov
xor
into
adc
outs
scas
push
in
sub
jmp
(bad)
dec
cwde
and
ffreep
lds
cmps
and
xor
rcr
mov
test
repz
fwait
or
ror
sbb
jbe
fcom
bound
push
test
lods
les
cmp
fsubr
sbb
xchg
sbb
lahf
mov
xchg
stos
cmps
push
aas
jecxz
bound
push
fs
std
mov
fxch
adc
jecxz
rcr
shr
mov
dec
aam
aaa
and
mov
ins
js
lds
cmc
add
adc
jne
xor
pop
add
loopne
mov
adc
xchg
or
jnp
mov
fidiv
mov
xchg
jg
mov
xor
daa
sar
and
jge
pusha
daa
cmp
cmp
pop
cmp
xlat
add
inc
test
aaa
repz
in
(bad)
lods
in
fild
sbb
pop
and
add
push
jae
sbb
pop
xor
pop
jmp
and
shl
iret
gs
cs
cmp
cmc
cdq
sbb
sub
les
cmp
cwde
rcl
into
mov
and
inc
test
pop
ret
retf
xor
fs
xor
dec
xor
adc
push
sub
sti
cmps
dec
into
pop
(bad)
outs
es
dec
inc
pop
stos
xchg
int3
push
cmp
inc
pop
adc
icebp
out
ror
sub
pop
sbb
mov
cmp
and
cmp
or
in
jp
pop
loope
dec
mov
in
or
repnz
in
cmp
and
mov
in
pop
pop
les
retf
stc
out
mov
fnstenv
mov
outs
sahf
loop
lahf
jbe
out
repz
retf
(bad)
mov
imul
jbe
push
test
inc
cs
and
mov
jnp
push
mov
dec
cmp
iret
shl
mov
pop
sbb
jl
sub
aam
jmp
pop
push
inc
(bad)
out
stos
and
cmps
push
fs
inc
inc
lods
aam
lods
je
sub
lea
push
mov
clc
add
lods
mov
mov
lds
mov
xchg
pop
in
push
imul
xor
mov
fadd
pop
pop
and
ins
and
hlt
jae
loope
jae
mov
mov
mov
add
jb
rcl
sub
stc
scas
xchg
xor
clc
arpl
mov
fiadd
dec
lahf
bound
retf
fwait
jnp
mov
ficom
shl
xchg
(bad)
xor
cmp
add
jb
jnp
pop
pop
adc
or
jecxz
sub
sub
aam
adc
loope
mov
pop
fbld
fdivr
dec
mov
mov
ja
jbe
enter
cmps
pop
(bad)
test
fcom
mov
shr
fsub
scas
scas
mov
mov
fs
pop
or
pop
xchg
(bad)
cmp
js
push
call
fnsave
sahf
pop
mov
xchg
inc
in
xchg
sbb
pusha
sbb
retf
into
adc
sbb
mov
movs
aam
mov
lods
jmp
(bad)
aad
rol
and
and
sbb
adc
xor
and
dec
cmc
in
(bad)
div
add
stos
jno
cmp
mov
outs
jae
inc
movs
das
push
(bad)
icebp
xor
push
iret
dec
inc
mov
clc
jmp
sub
sbb
pop
add
jecxz
adc
cmp
cmc
xor
add
jmp
outs
ja
fsubr
push
and
mov
or
fs
fwait
hlt
mov
nop
loope
retf
xlat
inc
add
call
jne
sub
sbb
adc
add
test
pop
inc
mov
or
xor
in
pop
inc
aam
nop
mov
mov
and
(bad)
mov
jmp
cmp
cmp
std
cmp
add
shr
dec
mov
add
(bad)
cmps
inc
cmp
mov
adc
stos
arpl
lods
sbb
push
sbb
aad
loopne
shl
mov
or
out
jb
daa
adc
and
es
jbe
jmp
aaa
xchg
pop
push
xchg
(bad)
pop
pop
mov
les
mov
retf
arpl
xchg
rol
xchg
sbb
xor
ja
and
xor
leave
fdivr
and
dec
jns
outs
jae
dec
push
gs
test
ins
cmps
adc
dec
dec
fdivr
out
dec
popa
sahf
aam
push
mov
mov
ds
xor
in
dec
outs
and
pop
(bad)
push
mov
pop
add
andps
es
bound
and
xchg
dec
sub
xchg
pop
cmp
push
jmp
cmp
push
push
outs
clc
sub
adc
loopne
jbe
outs
lds
mov
xchg
stos
data16
imul
mov
ret
fmul
addr16
das
pop
mov
shr
cmc
mov
inc
sbb
add
fnstenv
push
sub
les
aam
movs
mov
inc
mov
leave
mov
push
pop
js
fst
test
fucomi
loopne
add
leave
jle
cmp
xor
int3
call
pop
aad
mov
mov
push
mov
fist
mov
daa
fsub
mov
in
sbb
mov
jne
ins
call
inc
or
pop
xor
ss
pusha
xchg
imul
das
adc
ret
lahf
fcom
aad
iret
jle
ffree
dec
sbb
xchg
and
mov
jge
pushf
mov
adc
push
mov
xchg
cmp
sub
pop
cs
or
pop
add
push
popf
add
xchg
cmps
sbb
pop
inc
adc
loope
xor
sbb
les
dec
mov
movs
out
out
push
push
cld
enter
inc
bound
arpl
shl
add
aas
enter
jmp
ins
sbb
cld
pop
inc
jecxz
mov
fcom
fs
jge
imul
(bad)
mov
inc
dec
mov
loope
mov
push
push
xor
movs
test
dec
call
js
lds
mov
pop
(bad)
xchg
call
mov
xchg
in
cmp
ficomp
sbb
mov
mov
stos
stos
lods
test
inc
xchg
xlat
mov
iret
mov
in
dec
enter
js
imul
jo
loope
outs
ffree
ja
into
cmp
push
jnp
dec
cli
add
ror
or
gs
cld
out
sub
ds
cmp
dec
or
stc
push
sti
bound
jmp
in
pop
loop
sub
js
mov
out
dec
dec
in
dec
or
movs
mov
or
and
out
dec
mov
sti
lods
cdq
(bad)
in
into
into
shl
into
sub
ja
jno
cmp
dec
rol
cmp
jmp
and
fnsave
add
sbb
mov
sahf
jb
xchg
fisttp
add
cmc
push
das
enter
xchg
aaa
and
je
pop
repnz
jg
add
loopne
arpl
adc
call
int3
dec
imul
mov
cmp
sub
xchg
or
mov
retf
xor
dec
pop
push
pop
mov
inc
(bad)
movs
push
pop
das
mov
ret
push
jb
popf
dec
add
out
stos
mov
imul
sub
mov
pop
fwait
push
mov
add
loopne
cli
jmp
popa
inc
outs
stc
aam
ret
push
pop
out
or
mov
jnp
jo
dec
mov
test
rcr
movs
pop
jg
outs
cmps
pop
cmps
sbb
or
pop
mov
ds
dec
aad
stc
sub
call
test
pop
ds
inc
aas
cmp
rol
int
push
daa
pop
pop
jno
(bad)
adc
mov
imul
das
fisub
call
sub
les
pop
je
xchg
mov
daa
and
pusha
pop
mov
std
js
cmp
xor
lea
(bad)
hlt
sbb
ins
test
cmp
(bad)
xor
mov
and
retf
dec
mov
dec
lods
xor
sar
cdq
ret
and
fnstenv
mov
popa
not
or
pop
(bad)
data16
cs
mov
dec
test
shl
lods
mov
jge
mov
cli
adc
pop
mov
std
std
outs
jecxz
inc
shl
pop
push
xchg
adc
lea
jmp
js
mov
pop
les
into
mov
fnsave
shr
cmps
mov
fadd
sbb
std
dec
movs
imul
aas
mov
rcl
ins
mov
pop
leave
ficom
lahf
or
jge
test
add
repnz
movs
out
call
or
pop
xor
int
jnp
jle
jecxz
adc
sub
mov
cmp
inc
jbe
xor
lds
pusha
pusha
(bad)
aas
jle
rol
jmp
das
sbb
fninit
fmul
cmp
mov
ins
inc
call
mov
in
mov
sbb
mov
int3
sti
jne
push
xchg
push
std
push
rcl
pop
into
iret
dec
(bad)
es
dec
or
popa
mov
mov
js
test
xlat
add
or
push
cmp
and
cmp
fcmove
push
jmp
sub
pop
idiv
shl
fild
ret
rol
add
call
inc
lock
jae
sub
pop
imul
mov
and
sbb
pop
pushf
pop
inc
leave
cmp
pop
add
addr16
jae
loopne
fmul
sahf
mov
jge
sbb
mul
xchg
not
cwde
mov
xchg
js
lahf
shl
mov
adc
sub
xor
cmp
punpcklwd
add
xlat
xlat
sbb
inc
inc
sub
div
fwait
cmp
int
lds
sahf
dec
sbb
jns
xchg
test
aas
jbe
call
jns
pushf
cmp
mov
sar
sub
pop
outs
in
scas
xor
ins
mov
pop
jbe
xor
arpl
cmp
add
dec
xor
jae
push
dec
loopne
mov
jne
dec
mov
bnd
dec
test
ins
dec
jbe
cli
mov
movs
jl
gs
xchg
and
in
aam
xlat
pop
cdq
sbb
sti
lds
push
bnd
pop
dec
adc
push
addr16
dec
jne
outs
retf
cdq
inc
adc
fild
inc
pop
int
pop
jmp
cmc
mov
std
outs
retf
ja
scas
repz
jbe
jg
adc
inc
out
sub
or
mov
test
ds
out
ins
es
and
out
in
inc
aam
dec
push
es
xor
xor
jbe
(bad)
into
dec
fdivr
xchg
ficom
push
push
cmp
lds
inc
add
out
dec
cmps
shr
test
je
add
mov
adc
loop
dec
das
inc
add
ds
in
int
and
push
arpl
cmc
jmp
jne
push
sar
jl
push
or
jmp
cld
mov
aas
test
stos
or
out
push
ror
ds
push
push
push
ins
je
jmp
in
jmp
daa
jge
in
mov
in
jecxz
loope
mov
stos
out
inc
sub
inc
jae
popa
test
(bad)
ss
mov
ds
mov
test
aaa
out
arpl
shl
fsubr
dec
sar
loop
cmc
aas
and
sub
shl
(bad)
(bad)
in
mov
mov
push
cmc
in
cmp
shr
jmp
jecxz
mov
xor
cld
addr16
in
mov
fsubr
mov
adc
push
jnp
adc
jmp
cli
ret
out
add
pop
(bad)
mov
fstp
dec
icebp
xor
loope
test
test
std
in
xor
add
dec
sub
push
mov
xchg
(bad)
std
retf
cmp
fcom
mov
ds
lods
sbb
retf
adc
push
add
mov
dec
xchg
popf
or
std
fisub
int
pop
mov
cdq
pop
mov
inc
mov
pop
or
sub
int
call
sub
scas
fs
sti
mov
(bad)
mov
jle
inc
sub
in
fwait
pop
mov
es
and
mov
jo
push
xchg
mov
cmp
sbb
mov
pop
mov
inc
dec
or
icebp
data16
mov
test
sbb
mov
pop
(bad)
mov
ret
ss
bound
das
ret
pop
jne
sbb
jge
xchg
pop
push
or
dec
mov
adc
adc
inc
push
lods
arpl
add
(bad)
xchg
xor
xor
stc
(bad)
(bad)
shl
int
ds
ret
outs
push
js
adc
push
push
bound
jno
popa
pop
or
add
xchg
out
pushf
or
retf
xor
inc
outs
ds
dec
in
dec
inc
push
popa
jb
mov
(bad)
imul
inc
popf
lea
push
in
pusha
retf
mul
out
ror
das
pop
cdq
push
and
rcl
or
mov
push
daa
jnp
pushf
ins
adc
out
ja
pop
into
cmp
arpl
(bad)
jns
leave
dec
sub
nop
cld
inc
inc
push
into
xchg
es
push
pop
dec
xchg
cmp
mov
xchg
jae
out
adc
sub
rol
repnz
dec
mov
sub
scas
das
(bad)
mov
pop
out
sub
ficomp
push
and
xlat
test
lds
mov
mov
dec
(bad)
aad
push
jecxz
stos
dec
jne
je
xchg
adc
retf
js
mov
cld
mov
mov
pusha
je
xchg
mov
cmp
mul
sbb
sar
or
das
adc
fcmovu
fs
(bad)
movs
jmp
ficom
cwde
add
pop
outs
and
jmp
leave
mov
xchg
call
popa
mov
jmp
sub
pop
scas
movs
out
retf
jg
scas
(bad)
inc
or
push
les
push
push
mov
mov
inc
mov
jbe
or
xor
adc
icebp
mov
js
pop
popa
outs
inc
das
jns
lods
add
scas
out
cmps
and
sbb
je
loopne
mov
sub
out
jmp
push
jl
and
pop
xor
hlt
stos
push
mov
repz
in
rol
ss
dec
xchg
lds
rcr
(bad)
fcom
sub
popf
sbb
xchg
cli
and
fld
sub
cli
xor
jg
sbb
pop
pop
cli
dec
dec
mov
xor
shl
jmp
xor
addr16
push
mov
ds
ins
xchg
mov
out
sub
xchg
dec
adc
ja
je
mov
scas
adc
add
xor
cdq
lea
mov
in
das
lods
(bad)
pop
fwait
mov
ret
(bad)
fdivr
xor
mov
test
add
mov
inc
mov
sbb
jns
sbb
test
shr
into
and
sbb
jae
fist
(bad)
jns
xchg
fs
mov
jns
xor
adc
sub
fisub
enter
je
xchg
outs
pop
push
cmps
pop
push
aam
inc
pop
and
mov
jl
jb
jg
out
mov
sbb
call
outs
pop
pop
inc
ja
cmp
in
push
adc
dec
mov
add
(bad)
add
mov
mov
fisubr
add
push
push
mov
and
dec
sub
xchg
or
bswap
enter
dec
repz
inc
inc
aaa
pop
jge
inc
out
mov
or
jbe
inc
into
or
mov
dec
es
int3
jmp
aad
movs
aas
movs
and
xor
int3
mov
call
push
cmp
retf
fdiv
or
dec
fstp
into
fadd
mov
pop
mov
retf
fnstsw
and
mov
lock
mov
xor
pushf
jl
inc
jb
scas
xor
pop
cmps
out
xchg
add
pop
outs
ds
and
sub
scas
mov
fisubr
jp
add
fnstenv
loope
das
cmc
cmp
ficomp
mov
sbb
push
into
dec
retf
push
not
cmp
int
in
or
punpckhbw
retf
push
adc
or
(bad)
mov
repnz
dec
mov
jmp
aam
jmp
cmp
adc
add
(bad)
in
xchg
fdivr
inc
rol
jns
in
mov
cmp
out
in
mov
pop
xchg
push
jns
mov
push
mov
add
pop
cmp
adc
les
aad
(bad)
add
daa
inc
in
mov
lea
(bad)
adc
mov
(bad)
dec
not
cwde
sub
xchg
jns
xchg
mov
pop
popf
fcomp
shl
sub
lds
inc
mov
mov
icebp
dec
push
bound
sub
fidiv
cwde
clc
xor
xchg
dec
cmc
mov
or
div
loop
mov
cmp
addr16
dec
rcr
daa
jp
(bad)
and
shl
cmp
push
(bad)
xor
lds
sbb
(bad)
sbb
push
fistp
push
xchg
mov
imul
dec
or
mov
push
sub
cmps
jge
sub
pop
add
in
or
push
cmp
lods
mov
test
pop
shl
mov
shl
jmp
cmp
loope
pop
or
mov
cmp
cli
push
in
mov
lds
add
push
cmc
inc
sbb
lock
repz
popf
in
icebp
mov
retf
add
ds
add
add
not
jns
cmps
mov
xor
push
cmp
xor
mov
xchg
imul
popf
sub
mov
es
mov
inc
push
push
push
jnp
push
xor
or
xchg
mov
cs
fs
lods
aad
mov
imul
scas
push
sbb
scas
test
leave
mov
and
mov
fcom
mov
sbb
les
bound
xchg
mov
(bad)
mov
popf
js
ror
xchg
mov
test
mov
pushf
das
or
inc
sbb
leave
ficom
bound
je
in
cmp
jmp
inc
mov
test
call
push
cdq
sbb
fadd
cld
and
imul
xchg
bound
dec
stos
(bad)
fisub
test
into
out
xchg
inc
pop
mov
mov
mov
mov
in
xchg
jp
icebp
leave
push
push
push
mov
or
clc
mov
mov
bnd
out
fiadd
xor
mov
pop
sbb
ret
jp
push
imul
sub
pop
sar
jp
xor
out
adc
jns
push
fwait
ds
or
jmp
sub
and
or
or
jp
(bad)
cmp
mov
stos
shl
jp
sti
loope
mov
sbb
xor
inc
test
dec
cmp
inc
add
shl
retf
add
pop
add
scas
loopne
arpl
mov
shl
sbb
add
fwait
out
mov
xor
cmps
sub
inc
xor
inc
std
or
hlt
bound
xor
inc
lds
mov
into
cwde
pop
sbb
adc
out
aam
dec
mov
cmp
cmc
jo
cmps
fsubrp
add
push
mov
mov
push
stos
pop
push
dec
mov
(bad)
scas
aad
or
xchg
push
or
mov
push
xchg
pop
push
mov
sbb
stos
add
mov
(bad)
pop
div
retf
jns
outs
fmul
mov
nop
mov
das
aaa
push
push
cmps
movs
out
inc
pop
aam
pop
repz
add
int
cmp
std
dec
cmp
nop
jo
jge
cmp
and
mov
inc
js
push
in
fs
or
add
adc
ret
popf
push
scas
les
inc
xchg
int3
inc
dec
xchg
mov
imul
sti
fsub
xchg
out
push
pop
add
fidiv
cdq
int
icebp
cmp
sbb
xchg
in
xchg
rol
je
fmul
xchg
out
sbb
mov
repz
cdq
xchg
mov
(bad)
dec
enter
mov
stos
push
fbstp
mov
daa
jp
push
sub
pop
nop
sbb
and
jns
push
lock
xor
xlat
jmp
xchg
mov
mov
push
fwait
sub
xchg
daa
(bad)
(bad)
fild
sbb
ret
mov
xor
inc
jmp
or
rol
pop
shl
sub
mov
adc
or
stc
inc
mov
and
jne
or
addr16
sub
xor
repnz
cwde
in
fst
retf
or
test
mov
xor
sub
(bad)
stc
cmp
mov
or
adc
hlt
fisub
xor
add
(bad)
mov
adc
cdq
popa
retf
outs
int
int
bound
push
mov
and
aam
fdiv
push
imul
ret
les
out
fdiv
gs
hlt
add
mov
lods
in
cmp
bound
pop
mov
cmc
ficom
lock
mov
js
fidiv
and
ins
pushf
js
sbb
mov
cs
inc
mov
mov
pop
cmc
and
nop
stos
bound
ficom
jne
pusha
mov
mov
dec
add
test
enter
adc
in
or
sbb
iret
gs
repnz
mov
lds
jo
add
and
ins
outs
fisubr
pop
inc
xor
out
das
and
or
pop
mov
xchg
xor
sub
sbb
pop
movs
sbb
mov
inc
nop
push
inc
mov
stc
mov
cmp
jmp
movs
mov
fild
jmp
inc
sub
imul
mov
xchg
out
sbb
out
sbb
dec
shl
aas
and
repz
and
sbb
out
cmp
fadd
xor
into
push
add
adc
jmp
shl
mov
sub
popa
xor
adc
and
dec
div
sub
pop
retf
loope
sub
sbb
lahf
arpl
clc
xor
ror
push
int
mov
sub
mov
lds
and
mov
push
xchg
mov
shl
cdq
or
pop
cmps
jl
sbb
js
sbb
jo
inc
je
add
adc
sub
sar
dec
add
pop
mov
inc
mov
pop
lea
movs
les
inc
scas
cvttps2pi
and
dec
cwde
sbb
pop
xlat
jmp
or
inc
jb
loope
rol
mov
xor
mov
cmc
add
jae
mov
sub
outs
inc
rcr
sahf
test
jl
pusha
ror
scas
mov
push
outs
std
shl
sub
cld
add
adc
cmps
stos
jbe
les
and
or
pop
test
out
push
dec
inc
push
and
mov
test
xor
(bad)
push
or
xchg
lock
adc
or
adc
dec
and
jo
mov
xchg
cmp
data16
push
mov
scas
jl
outs
inc
dec
mov
mov
sbb
clc
push
push
clc
sub
inc
mov
test
push
es
sbb
scas
add
jl
(bad)
mov
jno
nop
fs
pop
sbb
sbb
dec
gs
mov
pop
push
xchg
add
or
clc
sbb
inc
pop
sbb
shr
sub
daa
dec
std
dec
cwde
mov
ins
in
inc
sub
mov
sub
data16
adc
cmp
inc
loop
je
(bad)
cmps
mov
shl
sub
jno
add
test
mov
out
pop
pop
clc
bound
jmp
inc
aas
xor
pop
or
mov
adc
mov
stos
int3
push
outs
sbb
movs
jmp
sbb
nop
sbb
jno
mov
ins
aas
in
or
mov
dec
jg
daa
sbb
inc
cmp
jg
loopne
or
xchg
hlt
sub
ret
lea
stos
cmp
lods
push
add
sbb
push
or
fst
push
lahf
inc
mov
cmps
xchg
add
dec
xor
mov
(bad)
mov
(bad)
jle
jl
inc
push
(bad)
sar
fptan
test
call
shl
inc
cmp
(bad)
mov
xchg
pop
mov
xor
pop
xor
add
data16
mov
cwde
adc
sub
clc
stc
jnp
das
cdq
icebp
cmc
aad
pushw
pop
and
or
adc
jg
pusha
fwait
movs
add
cmp
icebp
xchg
out
cs
fstp
xchg
dec
or
retf
jae
retf
xor
mov
not
mov
mov
mov
sbb
add
and
push
jae
stos
mul
xchg
in
jge
pop
scas
sbb
out
js
sbb
and
adc
pusha
mov
dec
add
push
and
pop
aaa
in
mov
out
stos
mov
popf
push
adc
push
pop
jb
pop
mov
cs
adc
push
data16
mov
std
pop
stos
in
out
je
xchg
aam
mov
loopne
retf
into
cs
mov
push
add
retf
and
int3
and
into
out
mov
dec
in
push
mov
pop
ins
mov
mov
jmp
mov
rcr
cmp
outs
gs
shl
adc
dec
lods
js
push
ja
xor
jle
mov
out
inc
xor
push
mov
cmp
jmp
ret
shl
bnd
imul
dec
inc
inc
push
xor
outs
cmp
adc
sub
xchg
xchg
dec
xor
ror
mov
mov
mov
std
add
(bad)
leave
dec
shl
dec
mov
shr
and
outs
outs
jmp
stos
and
adc
push
jne
fisttp
adc
test
jg
mov
nop
pop
push
idiv
mov
add
mov
scas
push
out
outs
and
xchg
cmp
mov
xchg
cmp
fsub
shl
sub
xor
dec
sbb
mov
mov
loopne
dec
jo
sbb
jo
ins
(bad)
nop
mov
jmp
push
int3
jno
or
inc
(bad)
adc
xor
test
and
out
sub
mov
xchg
(bad)
mov
lods
lds
jle
xchg
imul
pinsrw
pop
stos
add
cmp
sbb
stos
fidiv
dec
out
pop
movs
add
push
fldcw
jmp
outs
jne
aam
or
jbe
enter
outs
fimul
stos
jno
ins
jns
mov
cmp
mov
jmp
and
or
icebp
inc
and
pop
arpl
jnp
xchg
cld
jno
js
xchg
mov
inc
or
dec
push
push
leave
lods
push
sub
xor
ret
mov
out
es
jnp
iret
pop
mov
cmps
or
std
pusha
pop
or
or
lods
xor
movs
sar
inc
and
inc
mov
xchg
call
mov
sbb
inc
retf
inc
push
imul
cmps
xchg
push
pop
in
sbb
popa
adc
cmps
xchg
lahf
dec
shr
sub
pop
jno
mov
add
mov
ror
xchg
cmp
mov
ins
pop
jmp
xchg
out
loop
and
fst
jns
mov
cmp
sbb
mov
jb
into
out
pop
pop
cli
push
imul
mov
pop
rcl
push
jb
dec
or
lods
in
or
outs
jmp
cwde
rcr
mov
sbb
mov
mov
xlat
lods
rol
and
test
cs
inc
sbb
jg
popf
and
in
mov
call
or
in
jbe
sahf
pop
rcr
(bad)
mov
xchg
div
mov
aas
cmp
test
shr
jmp
lock
mov
adc
fsubr
adc
mov
adc
cdq
mov
mov
jl
rcl
rcl
add
lods
fisub
addr16
stos
mov
xor
jmp
jecxz
mov
pop
cmp
jne
and
dec
push
imul
inc
mov
mov
call
cmp
sbb
mov
and
in
ss
test
mov
sub
and
mov
repnz
addr16
repnz
out
cli
lods
nop
aad
sbb
in
rcl
rcr
inc
mov
add
mov
arpl
rcl
(bad)
xor
stc
jp
push
or
daa
dec
xchg
out
sar
in
push
call
(bad)
or
es
mov
aam
cmp
pop
repnz
mov
enter
and
or
inc
add
dec
dec
mov
jns
lea
mov
mov
iret
popa
and
xchg
mov
push
jecxz
out
pop
call
mov
dec
cli
inc
mov
icebp
xchg
add
(bad)
jmp
sahf
fimul
mov
sub
int3
iret
cmp
jb
xchg
cmp
mov
xor
loopne
mov
mov
test
stos
lods
loope
ja
xchg
rcl
push
arpl
add
sub
stc
jmp
psubq
pop
push
mov
push
test
lods
mov
or
int
das
cmps
shl
sub
pop
inc
dec
popa
dec
hlt
push
and
dec
push
cmps
sub
xchg
stc
add
mov
rcl
mov
or
mov
arpl
push
(bad)
hlt
lods
leave
mov
aas
sbb
dec
sub
pushfw
sbb
aas
cmps
in
fisub
std
push
jnp
xchg
enter
xchg
mov
aas
adc
cld
cmp
out
or
push
pop
mov
imul
xlat
jmp
enter
pop
sub
add
out
dec
dec
cwde
bound
cmp
jb
popa
fld
(bad)
in
inc
inc
sub
call
lahf
inc
push
movs
xchg
cs
cmp
cli
arpl
cmp
adc
enter
push
sub
imul
cs
and
lods
(bad)
out
ret
sbb
push
ins
(bad)
push
retf
push
or
push
jo
cmovns
jno
jmp
imul
push
xor
in
mov
mov
xlat
dec
or
xchg
lock
and
dec
cli
mov
pop
lahf
xchg
xor
cwde
hlt
cmp
push
fst
add
ja
fsubr
stos
stos
xchg
dec
test
(bad)
mov
pushf
daa
add
xlat
push
imul
push
push
rcl
sbb
pop
clc
pop
dec
or
pop
fsubr
loope
sbb
xor
or
in
cmp
sbb
add
add
das
mov
jb
add
test
dec
cdq
add
fisub
test
scas
add
in
inc
int
xor
add
pop
mov
aas
movs
retf
push
mov
fsin
inc
stos
daa
mov
inc
and
dec
and
jns
push
dec
pusha
pop
jle
sbb
pop
imul
sub
jno
adc
mov
mov
bound
mov
sub
push
test
inc
jo
aas
mov
retf
pop
add
xor
out
pop
or
shl
leave
mov
and
pop
cmp
mov
sub
jmp
loopne
xor
push
je
ror
idiv
repz
dec
ret
sbb
mov
dec
bound
in
popf
lahf
cli
movs
xchg
fisubr
push
add
loope
mov
call
push
pop
mov
xor
lock
add
scas
fist
add
popa
adc
push
ins
push
push
or
test
in
mov
jae
bound
pop
les
pop
pop
sub
sub
cmp
jmp
pop
lds
(bad)
outs
ror
(bad)
jl
sbb
mov
lods
jae
pusha
mov
in
fwait
shr
scas
in
jo
mov
fwait
dec
cli
dec
dec
cdq
hlt
add
iret
mov
setns
jb
fst
mov
outs
push
out
add
ror
add
and
es
mov
inc
sub
dec
adc
(bad)
(bad)
xchg
add
ret
jno
or
mov
scas
and
ja
cmc
sahf
(bad)
test
push
pop
jge
pop
imul
test
icebp
xchg
pop
ds
ja
add
adc
xor
in
or
inc
hlt
mov
mov
mov
(bad)
cmp
add
or
adc
(bad)
out
lock
jmp
pop
pop
out
xchg
data16
push
leave
cs
or
sbb
ss
mov
fwait
sahf
je
xchg
pop
loope
xchg
movs
mov
hlt
stc
mov
sbb
fimul
add
dec
pop
scas
call
push
mov
mov
repz
pushf
dec
cdq
inc
mov
movs
xchg
xchg
jecxz
mov
mov
mov
int3
push
fiadd
por
les
cmc
inc
rol
sbb
and
mov
push
xchg
jne
cmp
sub
dec
int
mov
dec
push
inc
test
sub
test
push
das
add
bound
sar
loopne
mov
ins
fmul
push
mov
cmp
inc
adc
xchg
fisttp
sbb
xchg
mov
(bad)
in
(bad)
push
pop
int
out
into
ins
xchg
arpl
ret
pop
mov
bound
mov
cmp
and
jmp
fisub
ins
rcr
and
loope
ret
pop
jo
jge
fldcw
add
pop
imul
test
sub
popa
xor
lds
sahf
movs
ret
inc
dec
mov
cmps
scas
pop
cwde
leave
mov
sub
fdivr
adc
rol
sub
mov
(bad)
call
jb
add
ins
mov
inc
xor
adc
and
imul
add
retf
aam
mov
push
movs
mov
and
(bad)
pop
mov
mov
clc
push
data16
popf
lods
loope
stos
mov
call
jecxz
jne
fnsave
fucom
lods
outs
xor
nop
shl
adc
shl
cld
mov
ins
mov
or
or
cmps
and
pop
pop
aam
add
push
call
dec
mov
pop
rcr
xlat
dec
cmp
xor
not
and
sbb
sub
mov
out
lods
adc
mov
jbe
movntps
retf
mov
mov
fwait
leave
push
xchg
adc
cmp
ror
es
clc
test
pop
jmp
in
pop
mov
ins
mov
scas
xor
lods
into
rcl
sub
and
retf
xor
dec
(bad)
outs
mov
push
stc
sub
out
ret
gs
iret
mov
push
push
or
lods
neg
jle
push
ins
push
rcr
adc
sub
mov
push
fdiv
push
sub
lock
inc
popa
inc
arpl
dec
int3
(bad)
popf
daa
cmp
shr
lods
pusha
or
inc
iret
cmp
cmp
xchg
push
jne
push
sbb
into
mov
and
fst
cmps
ret
sub
push
fld
gs
sub
and
sub
sbb
bound
hlt
(bad)
jmp
retf
jns
or
cmc
cld
mov
in
sub
neg
in
movs
dec
or
xor
xchg
dec
inc
vprotd
scas
rcl
(bad)
xor
cs
mov
ins
retf
stos
cmp
cmps
push
push
pusha
sub
or
enter
outs
dec
lods
jbe
daa
sub
and
sub
scas
xor
push
cwde
clc
ficomp
sbb
pop
jnp
xor
inc
ins
inc
popa
out
vpxor
and
mov
cs
dec
sub
add
psubsw
mov
(bad)
fistp
int
fnstenv
test
(bad)
ficom
xchg
pop
pop
into
addr16
dec
xor
adc
jge
pop
inc
ror
mov
mov
xor
fadd
das
movs
xor
lea
ja
in
test
test
jno
data16
es
fcmovu
(bad)
(bad)
test
leave
pop
inc
iret
dec
mov
retf
mov
popf
aas
and
or
cmp
xchg
test
xchg
scas
xor
sub
mov
es
and
inc
cmp
movs
inc
jmp
adc
mov
mov
cmp
push
std
cdq
pop
adc
and
aas
repnz
loope
mov
adc
lahf
inc
jge
fisub
in
inc
inc
push
sbb
push
mov
pop
(bad)
add
xchg
iret
xchg
adc
lock
cmp
pop
jge
jbe
push
push
stos
sbb
and
mov
rcr
aam
loopne
mov
fistp
cld
mov
aaa
rcl
or
xchg
fst
push
das
mov
aam
lods
sbb
sub
out
sub
push
xchg
jecxz
adc
sahf
or
lods
jb
xchg
movs
test
sar
add
lods
cli
sub
jns
inc
inc
dec
bndldx
aaa
sbb
add
xor
add
popf
ret
out
(bad)
hlt
or
in
push
adc
mov
and
aad
and
xchg
stos
pop
cmp
dec
push
xor
sub
xor
ins
xor
pop
(bad)
enter
fwait
retf
imul
mul
popf
cwde
jmp
inc
fsubr
jnp
pop
fs
mov
test
jb
mov
sbb
xchg
addr16
call
int
mov
mov
or
mov
pusha
inc
push
ds
(bad)
retf
xchg
fs
dec
add
in
push
wbinvd
add
adc
sub
je
lds
mov
icebp
push
lods
mul
lock
mov
movs
mov
rcr
cli
add
pushf
mov
cmp
add
mov
cmp
adc
push
cmp
inc
icebp
add
sub
push
ins
sar
mov
lods
sahf
popa
mov
mov
cmp
std
push
retf
push
pop
and
ins
into
and
add
mov
aad
xchg
icebp
stos
xchg
es
sbb
inc
and
dec
cmp
xlat
push
mov
clc
cmp
mov
jl
push
jnp
fcom
ror
out
mov
retf
or
pop
adc
call
in
mov
ds
ins
add
lea
arpl
std
stos
ror
cwde
mov
hlt
dec
movhlps
mov
loopne
mov
jp
add
das
cmc
(bad)
push
aas
cmp
and
(bad)
push
shr
xor
nop
mov
fldcw
add
sub
add
js
mov
cmp
aam
(bad)
shl
jg
xlat
cmp
jns
mov
dec
xlat
jle
push
fwait
jmp
cmps
jecxz
pop
ja
popf
mov
sti
mov
movs
mov
aas
pop
nop
lods
jecxz
xchg
lods
fimul
inc
jb
test
in
xor
sahf
dec
mov
and
mov
sti
in
mov
inc
dec
rcl
sub
adc
or
adc
push
cmp
fwait
dec
ins
dec
and
cmp
retf
mov
pop
adc
dec
push
xor
ret
add
lds
scas
sbb
int
or
mov
dec
pop
and
inc
out
push
mov
mov
mov
jg
sub
fbstp
jg
out
sbb
inc
or
mov
mov
mov
push
xor
cmp
sar
cmps
or
mov
push
jae
sbb
std
ja
jae
cs
inc
xchg
fiadd
or
mov
test
mov
div
repz
cmp
jle
push
lock
jl
pop
sub
daa
jnp
popa
call
jmp
push
add
lahf
adc
popf
lea
(bad)
adc
not
push
push
imul
scas
in
cs
xor
in
xchg
(bad)
push
jno
or
sbb
pop
push
movs
loop
adc
popf
mov
out
in
inc
aam
iret
pop
ins
cmp
in
pop
dec
xchg
jmp
fdivr
(bad)
pop
jns
in
in
sbb
xor
and
daa
mov
xor
cmps
xor
lahf
cmps
xor
bound
int3
clc
sub
pop
sbb
xor
leave
dec
rcr
fwait
int
jmp
and
push
mov
scas
imul
mov
ja
mov
daa
psadbw
pop
and
mov
mov
inc
adc
sbb
dec
cmp
es
int
es
fnsave
or
aad
stos
js
mov
inc
sar
out
jnp
clc
jmp
jbe
ss
xchg
or
inc
es
movs
and
mov
dec
or
mov
sbb
push
stc
inc
int
inc
pop
pop
not
ret
cld
mov
sub
ins
xchg
jecxz
rcr
push
test
out
cld
fcomp
sti
xor
lods
pushf
retf
jmp
sbb
call
sar
shld
std
mov
lea
fxch
neg
(bad)
jmp
push
mov
dec
dec
sbb
popa
aad
mov
(bad)
in
mov
scas
jmp
ret
mov
fs
div
jp
sub
push
cmp
or
dec
out
push
sbb
dec
xchg
push
pop
data16
push
and
std
(bad)
rep
test
in
daa
mov
loop
adc
movs
sub
inc
mov
pop
nop
adc
lahf
push
outs
retf
jb
ins
inc
fisubr
mov
pop
neg
in
jl
inc
loop
mov
int3
fucomp
adc
nop
fucomp
or
adc
in
xlat
stos
or
stos
stos
fstp
or
mov
or
mov
adc
add
jle
jg
call
outs
std
arpl
(bad)
or
cmc
rcl
js
hlt
into
sub
xchg
cmovno
jl
fwait
mov
mov
test
jno
fild
out
repnz
shl
cli
out
push
rcr
xchg
in
movs
daa
cwde
add
hlt
sub
push
mov
xchg
adc
xchg
ds
mov
loopne
icebp
cmp
movs
movs
call
push
pop
mov
or
xor
jae
imul
sbb
and
push
ret
dec
stos
sub
sar
enter
test
and
rcl
call
je
mov
or
(bad)
dec
xlat
or
jge
mov
push
repz
sub
call
loopne
mov
pop
popa
data16
fst
inc
add
pop
fwait
dec
mov
test
lods
icebp
aas
in
jle
or
or
(bad)
retf
(bad)
out
scas
cmps
ret
push
mov
imul
ret
int3
mov
daa
push
movs
in
push
sub
call
rol
mov
cs
adc
imul
push
(bad)
push
pop
jne
push
adc
leave
push
inc
fsub
dec
jno
xchg
xchg
call
xor
and
fwait
xchg
mov
inc
sub
add
ss
sbb
lods
div
test
out
dec
cli
sahf
inc
dec
call
pop
aam
in
(bad)
sub
pop
fstp
mov
jp
xchg
jnp
sbb
xchg
xchg
sbb
add
das
outs
mov
nop
cvttps2pi
add
adc
nop
retf
jge
dec
adc
pop
sbb
mov
xchg
sbb
mov
push
nop
and
sbb
aas
inc
mov
loop
push
daa
adc
leave
icebp
push
dec
sub
mov
clc
dec
(bad)
enter
mov
xchg
cmp
add
adc
ins
ror
jne
push
gs
pop
ins
pushf
dec
mov
shr
or
gs
inc
daa
jno
mov
(bad)
or
xor
cmp
popa
ror
xchg
jno
add
push
daa
mov
mov
xchg
aam
lock
pop
(bad)
jns
cmps
out
sbb
movs
jnp
scas
push
(bad)
xchg
dec
rol
sub
mov
sbb
jp
adc
pop
test
jecxz
mov
enter
sub
lahf
and
xor
fnstenv
addr16
mov
arpl
loopne
pop
retf
movs
lods
push
ror
cld
sahf
and
fwait
(bad)
cmp
xor
loop
jecxz
fwait
call
mov
mov
es
pop
leave
sbb
adc
idiv
push
jecxz
pop
fmul
inc
pop
ret
mov
outs
xchg
xchg
pop
loope
ja
(bad)
cmp
jno
inc
ins
in
and
out
xchg
inc
lods
inc
xchg
adc
fsub
outs
lods
push
jnp
inc
push
cs
and
dec
adc
imul
add
pop
xchg
test
sbb
jb
pop
push
(bad)
mov
push
xor
push
rcr
cmp
xchg
cmp
nop
pop
out
scas
je
fidivr
xor
fld
push
lods
test
div
lea
std
call
pop
add
pop
jo
jne
scas
cmp
icebp
push
push
into
sub
shl
std
cmps
int
jb
cwde
int3
and
ret
dec
jns
rol
push
out
div
lea
mov
mov
cmp
sub
pop
adc
dec
out
xchg
and
mov
in
cwde
(bad)
mov
pop
sar
dec
(bad)
ins
sti
push
cmp
push
gs
leave
dec
jns
mov
sbb
popf
add
push
pop
rcl
mov
push
mov
adc
neg
push
or
xchg
test
xor
mov
jns
rol
(bad)
jmp
jle
pop
inc
cmp
test
push
fdiv
mov
imul
sar
fiadd
dec
inc
xchg
adc
pop
inc
pop
mov
xchg
call
scas
or
sub
add
imul
out
add
dec
bound
cmc
mov
retf
jae
call
xchg
mov
std
xchg
jmp
pop
es
bound
pop
xor
jo
mov
cmc
(bad)
mov
and
inc
pop
es
sti
clc
inc
inc
and
(bad)
and
jecxz
sti
jmp
jo
or
(bad)
mov
imul
popf
enter
adc
pop
movs
ja
xchg
in
mov
add
sbb
ins
pop
add
int3
mov
mov
push
adc
push
aaa
xchg
lods
aaa
fcmove
pop
xchg
clc
cli
add
pusha
sub
in
das
mov
dec
mov
(bad)
retf
add
or
(bad)
cmp
aad
or
sbb
add
jne
pop
lods
popf
dec
cmps
in
mov
in
xor
cmp
mov
xor
cmp
movs
rol
push
mov
hlt
aas
push
pusha
in
cwde
add
inc
cmp
(bad)
iret
lds
or
leave
jmp
jle
out
cmp
push
sbb
pusha
mov
retf
sub
out
jae
enter
add
sub
push
sbb
mov
xchg
sbb
mov
cmps
pop
ins
cs
and
sub
sub
repnz
mov
cli
in
cmp
add
mov
sbb
sub
pop
push
or
ror
call
mov
inc
fild
out
cmp
adc
shr
pop
sub
sti
pop
pop
aam
dec
in
xchg
pop
test
jle
cmp
lea
and
adc
not
les
push
adc
icebp
sahf
hlt
cmp
sbb
xor
lods
jbe
int3
div
lds
sub
mov
cdq
push
(bad)
xchg
push
repz
mov
sub
cmc
jae
mov
mov
push
sub
jnp
or
in
inc
jecxz
movs
fstp
loopne
and
lods
std
clc
and
in
ret
or
push
scas
jnp
test
cmps
aam
mov
cs
push
inc
leave
fistp
or
repz
push
ret
cmc
add
cmps
movs
jne
fcmovb
icebp
mov
push
dec
and
adc
and
dec
dec
add
jmp
cmc
cmp
je
xchg
fild
arpl
daa
pushf
fadd
xor
xchg
xlat
push
cli
jae
ror
or
sub
sub
das
or
data16
cmps
sub
mov
mov
pop
pusha
data16
lar
in
ins
mov
stos
jne
mov
enter
fwait
mov
pop
mov
jno
sub
push
stos
sbb
je
scas
lock
aas
dec
push
scas
jns
push
sub
dec
mov
bsf
cwde
xchg
and
sbb
imul
mov
outs
call
sub
sbb
or
sti
aad
mov
lods
mov
push
xchg
test
and
cmps
js
aas
(bad)
mov
mov
pop
inc
mov
add
mov
mov
stos
inc
(bad)
pop
imul
ds
inc
sbb
jbe
xchg
pushf
sbb
sub
pop
je
loope
inc
int3
add
cmp
iret
lahf
pop
push
or
mov
gs
in
mov
mov
pop
ins
movs
test
test
jecxz
jbe
mov
inc
or
(bad)
push
imul
call
sub
fnstenv
cmp
add
pop
adc
les
(bad)
pop
enter
pop
cmp
aad
add
out
jns
lock
ds
and
push
popf
retf
adc
mov
lahf
in
or
outs
xlat
xchg
jo
adc
and
pop
sti
sbb
mov
inc
mov
and
icebp
lods
(bad)
jg
cmp
xchg
popf
add
and
jo
pop
popa
test
std
test
(bad)
add
push
mov
add
jb
sbb
mov
cwde
mov
lahf
retf
cmp
jmp
iret
pusha
push
or
mov
loop
mov
aam
fwait
push
pop
(bad)
adc
push
jge
fbld
cmp
push
out
xchg
fcmovnbe
mov
popa
and
add
(bad)
and
sar
pop
mov
retf
inc
mov
xchg
fwait
xchg
cwde
sar
(bad)
mov
movs
or
jg
adc
xchg
inc
add
fdiv
lods
popf
xchg
or
sub
js
hlt
or
jno
ins
movs
outs
add
mov
sub
xor
pop
mov
jbe
jne
inc
or
movs
sar
push
movs
out
sub
loope
test
fnstenv
scas
mov
pop
and
mov
mov
pop
test
test
sar
mov
inc
hlt
pop
dec
dec
je
stos
popa
stos
fnsave
mov
cmp
jns
pop
jl
jnp
cs
cli
mov
and
(bad)
fdiv
lock
test
mov
data16
pop
sub
inc
test
sbb
mov
or
out
leave
pop
sbb
mov
push
clc
repnz
or
mov
je
mov
(bad)
ret
es
xor
pusha
cld
popa
push
shl
rol
cmp
arpl
sub
dec
push
popa
fimul
sub
dec
mov
(bad)
mov
cmp
pop
xchg
mov
add
(bad)
cld
rdtsc
mov
mov
arpl
and
push
mov
fptan
test
lea
fnsave
lods
push
daa
mov
cs
ins
int
cmp
out
push
push
mov
daa
mov
movs
cwde
les
(bad)
fdivr
and
pop
jno
scas
adc
imul
lods
mov
cs
js
clc
retf
(bad)
hlt
(bad)
mov
sub
and
push
stos
xor
or
jp
cli
outs
mov
sbb
jno
into
xchg
mov
push
xchg
sti
les
arpl
repnz
xor
cmps
icebp
jmp
add
mov
aad
daa
ror
adc
jbe
xchg
mov
jns
mov
or
push
fidivr
inc
xor
sbb
push
jmp
pop
cmovg
push
push
push
test
cli
ins
mov
and
cmp
push
adc
les
ror
fiadd
rol
or
push
test
and
xchg
(bad)
mov
jae
dec
test
call
out
push
pop
cmp
pop
in
andps
xchg
mov
and
pop
sbb
pop
cli
or
inc
fdivr
das
pop
test
pop
daa
inc
sbb
and
jnp
or
xor
leave
jp
add
or
xor
lahf
pop
inc
xchg
xchg
das
retf
pop
inc
adc
push
ret
pop
nop
movs
mov
sbb
xor
(bad)
pop
push
xor
dec
mov
lea
(bad)
fidivr
ret
leave
push
pop
dec
nop
sahf
mov
and
cmp
jmp
jmp
lds
icebp
push
ficom
fiadd
adc
pop
loopne
clc
faddp
lods
lock
jns
jp
imul
and
rcl
sub
inc
(bad)
and
push
(bad)
loope
mov
arpl
push
xor
jb
ret
add
push
scas
adc
lock
jb
cwde
(bad)
mov
cmps
add
sub
cs
stc
out
mov
fs
hlt
aas
and
test
fsub
dec
test
push
sbb
mov
sub
(bad)
rol
and
test
sbb
mov
addr16
add
out
dec
cdq
scas
(bad)
movs
in
adc
cmc
adc
(bad)
je
repnz
xchg
mov
popf
pop
jno
sub
das
ds
sub
or
mov
pop
inc
cmp
jmp
stc
pop
sub
jae
adc
xor
shl
fnstcw
push
fdivr
retf
movs
xor
xor
aad
enter
xchg
sti
xchg
cmps
fst
inc
(bad)
cli
mov
and
push
out
xchg
mov
addr16
dec
imul
icebp
mov
leave
popf
push
push
mov
pop
add
jmp
mov
(bad)
jne
inc
dec
and
jge
bnd
add
retf
fdivr
aad
mov
push
das
jno
cdq
ds
inc
rcl
fs
retf
dec
sahf
mov
add
jmp
mov
and
out
push
and
cmp
cmp
push
cli
imul
rcl
dec
sub
pop
and
dec
pop
mov
repz
loope
xor
push
jmp
test
pop
(bad)
pop
sub
sahf
or
leave
jle
or
xchg
add
mov
xchg
test
(bad)
mov
call
call
cmp
push
cld
je
xchg
xlat
add
je
push
les
das
lods
lea
out
inc
or
in
push
push
cmps
xor
sbb
in
pop
into
cmps
fisubr
call
jle
xchg
xchg
out
cmp
mov
(bad)
mov
jg
test
sbb
std
add
dec
in
fs
sub
push
mov
fisubr
sbb
xchg
ror
cmp
jg
hlt
or
into
push
jp
or
cs
out
(bad)
nop
sbb
pop
loope
sbb
mov
arpl
dec
fwait
sub
mov
shl
jb
nop
xchg
sbb
icebp
aam
inc
sub
mov
or
xchg
mov
xor
mov
repnz
dec
adc
dec
cmps
push
pop
or
pushw
or
pop
xor
cmp
dec
into
adc
dec
add
in
jle
mov
loope
xchg
cwde
and
jno
das
sub
out
mov
iret
inc
and
mov
and
imul
out
xchg
jne
jo
add
sub
into
loop
repz
fisub
shl
scas
enter
or
movs
sub
mov
dec
pop
mov
jb
push
loop
pop
cmp
xor
mov
add
xchg
or
mov
clc
xchg
mov
sar
cmp
xchg
(bad)
xchg
inc
add
sbb
xor
out
push
(bad)
arpl
les
xchg
nop
int
outs
push
xchg
fimul
mov
dec
retf
rcr
xor
or
mov
dec
aas
push
ins
shl
movs
aam
or
pop
cs
push
sahf
mov
test
loope
jmp
xchg
inc
adc
xchg
movs
test
fadd
add
and
pop
or
adc
xor
push
fbstp
(bad)
mov
xor
outs
pop
imul
mov
xor
mov
mov
lea
mov
stos
call
push
loopne
cmps
mov
or
js
fs
sub
test
(bad)
push
aas
les
leave
sti
xchg
sahf
iret
(bad)
pop
jmp
jmp
rol
in
sub
add
fild
ret
or
xor
cs
pop
sbb
cmp
mov
and
lahf
mov
inc
sbb
push
out
mov
mul
cmp
shl
iret
inc
lods
mov
int
cmp
push
dec
or
and
std
rcl
mov
push
pop
stos
pop
fmul
cli
lods
inc
or
sbb
test
lock
or
outs
stos
aas
fild
adc
pop
hlt
(bad)
mov
test
call
jg
xor
and
out
push
jg
pushf
fucomip
mov
in
xchg
adc
pop
repz
inc
fs
jo
cli
cmp
sub
push
js
jbe
mov
dec
retf
adc
and
xor
stos
mov
mov
or
push
push
and
mov
inc
jmp
inc
scas
enter
and
pop
fdiv
movs
lea
bound
adc
mov
push
scas
push
xor
repnz
int
pusha
cmp
push
iret
and
pop
fldcw
jmp
stc
add
sub
jne
fisub
push
jnp
cwde
xor
mov
addr16
lock
cwde
cmp
fst
retf
fiadd
or
add
xor
call
test
or
xor
add
jne
add
and
cmp
fisub
push
fld
mov
nop
push
fadd
aam
cmp
ss
push
and
mov
(bad)
mov
aad
enter
push
mov
sti
aaa
mov
mov
scas
push
stc
cmp
mov
xor
out
call
lds
cmps
push
add
jmp
pop
pop
popa
call
push
pop
loopne
inc
scas
inc
pop
icebp
cmp
out
push
ret
jmp
mov
pop
imul
(bad)
lock
iret
iret
and
xchg
mov
lods
and
fdivrp
popa
repz
xor
jne
mov
push
cmp
mov
pop
adc
arpl
cld
sahf
rol
xor
and
jns
inc
iret
movs
cli
cmp
pop
push
xchg
mov
xor
(bad)
shl
and
out
pop
sub
mov
push
xchg
xchg
add
cmp
mov
enter
pop
neg
mov
fnstsw
jle
cli
inc
inc
leave
ja
cmp
add
cld
mov
jecxz
ins
popa
xchg
je
pop
fwait
xlat
and
push
div
mov
mov
call
mov
ror
adc
pop
in
nop
dec
dec
retf
push
jmp
mov
fisub
fnstenv
stos
rol
icebp
je
lock
mov
cmp
mov
mov
xor
mov
mov
test
sbb
(bad)
lea
inc
mov
pop
mov
lahf
mov
les
cmp
outs
lods
dec
sub
fsub
mov
les
mov
int3
cdq
(bad)
fbstp
and
push
sub
ds
jecxz
or
test
(bad)
sbb
cmp
shr
push
jo
cmp
movs
jle
ret
dec
outs
mov
test
xor
jo
jl
add
mov
repnz
addr16
fprem1
add
xchg
add
push
push
push
cmp
and
icebp
(bad)
jl
sahf
mov
mov
(bad)
push
out
jae
fwait
sahf
jmp
js
inc
(bad)
cmc
push
xchg
pop
fwait
xchg
mov
add
dec
mov
out
jle
ret
xor
les
dec
inc
mov
and
cmp
inc
push
sbb
cmp
mov
and
jno
and
std
add
cmps
push
ins
in
ret
in
pop
gs
outs
dec
adc
mov
mov
cli
push
dec
add
arpl
mov
stos
icebp
aas
mov
out
sub
mov
mov
mov
jg
add
inc
bound
push
dec
aaa
(bad)
or
xor
mov
jbe
and
int3
sbb
inc
or
test
sub
pop
outs
adc
ficom
xor
fisub
mov
dec
popf
pop
shr
bound
mov
outs
fmul
mov
mov
xor
in
call
adc
jmp
mov
mov
jne
push
inc
push
inc
leave
mov
popa
xchg
inc
repnz
ret
daa
into
dec
into
sbb
sbb
jae
mov
ret
dec
sbb
cmp
push
jmp
js
fild
xor
call
adc
fld
dec
leave
pop
add
add
sub
fadd
fucomip
xchg
cld
xchg
movs
and
dec
aam
pop
xor
push
add
iret
jb
jb
xor
mov
lahf
push
jbe
mov
or
pop
cld
loope
mov
cmp
aam
pop
jb
push
imul
pop
int
into
pop
push
cmp
pop
fwait
mov
mov
fwait
mov
lds
xchg
add
enter
xlat
adc
out
dec
xor
jle
pop
mov
jmp
nop
mov
and
adc
add
cmp
adc
dec
add
lods
pop
in
inc
retf
or
fnstcw
cmp
sbb
xor
mov
out
dec
iret
(bad)
jo
adc
inc
or
sub
sub
or
inc
add
scas
push
xor
aad
dec
xchg
imul
inc
idiv
xor
jmp
mov
pop
xchg
loope
adc
mov
sub
mov
xor
scas
dec
jae
retf
hlt
xor
xor
add
mov
mov
gs
jle
stc
sbb
daa
fidiv
sbb
nop
movs
(bad)
lock
xor
outs
cmps
shl
push
test
xchg
aam
cmp
jp
xor
fisttp
cmp
std
sub
xchg
inc
mov
lea
mov
push
cmp
xor
(bad)
sub
dec
dec
add
sbb
adc
lds
iret
ficom
mov
jg
cmp
in
mov
aaa
mov
inc
push
cwde
or
mov
dec
mov
and
dec
and
dec
push
cmp
jecxz
xor
xor
cmps
int3
inc
push
xor
mov
xchg
jne
repz
cwde
mov
pop
xchg
rcr
pop
sti
or
jl
mov
jmp
ret
cmp
ror
lods
sti
clc
mov
std
jae
mov
add
push
lds
rcl
mov
mov
aaa
adc
sti
popf
cmp
push
loop
stc
rcr
das
mov
rol
(bad)
sbb
mov
adc
(bad)
js
aaa
push
fmul
loope
outs
and
push
pop
pusha
push
je
add
sbb
in
fwait
movs
div
adc
test
aad
leave
fs
mov
shl
leave
jmp
mov
mov
mov
mov
adc
pop
xor
dec
int3
inc
in
pop
pop
pop
in
push
jecxz
(bad)
fcmovnbe
sbb
xchg
adc
mov
add
pusha
or
xor
fsubr
stos
push
cdq
xlat
imul
int3
inc
or
lock
mov
push
or
push
jecxz
(bad)
fsubp
arpl
or
and
aad
test
jmp
pusha
and
mov
jb
add
xor
pop
retf
mov
sub
sbb
pop
cli
xchg
mov
xor
xor
sbb
outs
int
nop
fistp
jns
(bad)
sbb
sti
mov
pushf
xor
sub
nop
mov
in
add
sbb
cld
sbb
xchg
mov
movs
push
cmp
stos
std
sbb
es
sahf
or
jecxz
rcl
mov
add
div
fst
int
inc
mov
adc
nop
cmp
jl
je
out
sbb
dec
test
lahf
dec
cmp
lahf
mov
xchg
jmp
jbe
loope
dec
popa
ficomp
and
sub
ins
mov
call
fcmovne
call
pop
xor
repnz
ss
mov
mov
adc
sbb
jo
xor
xor
outs
xor
push
and
sub
popa
hlt
mov
fist
xchg
adc
cwde
sbb
push
adc
mov
add
mov
cmp
ficom
and
xchg
lahf
sbb
sub
in
fldcw
cwde
xchg
dec
sub
cmp
jmp
les
das
push
or
cmp
pop
sub
test
pop
scas
cmp
ins
imul
sbb
rsm
div
jno
pusha
in
add
je
push
push
xchg
loop
xchg
xor
xchg
add
push
jle
scas
cmp
mov
adc
aad
mov
jmp
fdivrp
inc
rcl
jns
loope
shl
xor
sti
pop
jnp
pop
mov
or
cdq
pop
push
push
ins
push
out
fsub
mov
test
dec
popf
shl
adc
sbb
mov
sbb
mov
xchg
sub
call
fmul
cs
and
sbb
push
(bad)
(bad)
leave
mov
mov
or
jge
pop
(bad)
mov
popf
sahf
jg
jg
pusha
ja
mov
push
pop
mov
dec
push
rol
mov
and
push
adc
mov
test
shl
mov
bound
mov
call
cmp
cmps
jle
aad
cmps
fadd
or
into
xchg
jo
(bad)
retf
jecxz
pop
cld
lock
fwait
loopne
iret
cmps
inc
fild
xor
gs
mov
retf
fidivr
pop
pushf
pop
jmp
es
mov
xor
xchg
jbe
pop
push
pop
inc
scas
or
jp
inc
test
js
pushf
jcxz
mov
imul
lea
ss
mov
retf
retf
scas
cmp
sub
retf
aas
imul
rol
inc
adc
xchg
aas
outs
xor
pop
sub
test
cmp
pop
ret
and
fisttp
jge
rol
int3
out
mov
xor
mov
lods
push
je
or
outs
les
cmp
inc
mov
loop
push
lods
jg
fstp
jne
lahf
ret
popa
movs
pop
out
xchg
jle
xchg
lock
out
adc
aad
mov
pop
das
pop
icebp
dec
sti
fucomp
(bad)
int3
pop
(bad)
fisttp
jp
loope
das
je
jno
pop
outs
clc
xor
sbb
push
cmc
rcl
mov
mov
dec
(bad)
std
repz
imul
cmp
lahf
lahf
mov
js
fstp
pushf
pop
add
or
sub
cli
mov
arpl
mov
es
lahf
loop
inc
sbb
inc
clc
imul
cmps
test
mov
mov
mov
dec
jmp
lahf
xchg
je
call
push
sub
jno
cli
mov
pusha
cmc
shr
sahf
nop
js
cmps
and
adc
sti
sbb
mov
or
mov
(bad)
repz
rol
fwait
neg
aas
dec
into
repz
inc
xchg
jp
cmps
test
and
or
out
jecxz
ret
xchg
pushf
cmp
cld
and
ror
arpl
das
in
retf
test
or
(bad)
(bad)
call
and
sub
sbb
inc
push
push
mov
jno
aas
shl
fwait
or
push
dec
movs
pop
inc
jg
jecxz
icebp
cwde
pusha
or
shl
push
ds
push
loopne
cs
cmp
dec
push
push
jo
push
inc
inc
repz
or
shl
std
cmp
or
popa
in
xchg
cs
(bad)
outs
popf
push
push
push
inc
call
or
aad
into
push
mov
xchg
jp
ja
mov
mov
mov
pushf
and
sbb
(bad)
fidiv
not
inc
push
(bad)
outs
mov
cmp
inc
jle
pop
jbe
ret
sbb
pop
sub
iret
(bad)
sti
cli
xor
adc
stos
aaa
fisubr
mov
idiv
es
mov
sbb
repnz
xor
popa
test
mov
inc
sub
enter
cmp
ror
data16
fstp
data16
xchg
ins
inc
mov
movs
and
fadd
and
jecxz
dec
and
cmp
popa
xor
xchg
rcr
mov
cdq
dec
inc
sbb
call
xor
push
sbb
loop
add
mul
pushaw
pusha
loope
xlat
cmps
mov
(bad)
ins
movs
sbb
es
gs
or
xchg
out
ins
and
adc
rcr
xor
and
cmp
test
lahf
push
cmp
(bad)
mov
add
in
ins
mov
push
rol
mov
nop
add
adc
push
jge
test
cmp
add
sub
popf
repnz
mov
popf
movs
sti
xchg
mov
test
mov
rol
aaa
pop
mov
add
out
inc
sar
mov
mov
cmp
(bad)
loope
lods
ins
pop
dec
cli
cld
inc
push
sti
inc
out
xlat
mov
pop
out
in
cli
rcl
scas
mov
and
add
ins
lahf
pop
ds
sbb
fdivr
ins
push
out
mov
cmp
mov
sub
and
(bad)
lock
mov
push
sbb
repz
test
mov
jg
cmp
outs
add
xchg
sar
mov
cmp
adc
retf
mov
mov
cld
shl
(bad)
cs
movs
retf
(bad)
out
sub
out
in
dec
rcl
push
(bad)
pop
mov
out
or
push
sbb
int3
stos
mov
leave
sbb
(bad)
and
cmc
pop
mov
inc
cs
aaa
sub
mov
mov
dec
mov
add
push
push
or
mov
mov
lds
ss
push
lahf
sbb
jge
inc
mov
movs
adc
in
fdivr
int
outs
fstp
push
jns
popf
es
pusha
mov
std
add
adc
enter
iret
lods
mov
sbb
js
jmp
fs
add
ins
popa
jp
arpl
inc
sub
retf
into
xor
add
or
push
icebp
mov
gs
adc
mov
(bad)
jmp
pop
sub
mov
mov
aam
pop
jp
cmp
inc
sti
mov
in
gs
xchg
jae
xor
call
mov
int3
sub
cdq
cmp
dec
jecxz
(bad)
jbe
adc
cmps
or
xor
sub
bound
cmp
add
loope
jge
movs
mov
dec
test
pop
pop
pop
adc
jns
sbb
aad
je
sub
in
arpl
addr16
outs
dec
inc
pop
xchg
xchg
dec
jnp
xchg
lds
jae
std
fcom
xchg
xchg
mov
or
pop
mov
in
ins
sub
xor
jle
outs
aam
call
pop
mov
mov
ds
movs
mov
add
jno
clc
mov
add
stos
xchg
outs
xor
std
stc
sub
daa
jecxz
lods
push
mov
push
inc
es
lods
icebp
mov
mov
cmp
mov
retf
pop
adc
ds
jle
test
aaa
out
sub
cmps
lods
nop
jl
sbb
sbb
mov
xor
pop
sbb
mov
loop
adc
fnstsw
sti
sub
js
ret
cld
sbb
xchg
cmps
aam
daa
stc
pop
adc
xor
xchg
mov
int
imul
lods
push
cs
jo
mov
test
daa
jmp
out
cli
retf
ret
fwait
sub
cmp
mov
jg
dec
imul
cli
call
mov
mov
sar
xchg
daa
sub
cmp
xchg
sub
arpl
fsub
aas
loop
adc
(bad)
jmp
retf
sbb
call
mov
sar
out
xor
daa
sub
push
shr
sub
jmp
(bad)
cmp
into
inc
or
inc
pop
dec
mov
cdq
dec
mov
sub
repz
jl
mov
(bad)
fnstsw
sub
mov
mov
loopne
outs
dec
lds
call
jno
or
stc
sub
rcr
icebp
dec
mov
or
xchg
out
mul
push
jae
jle
pop
pop
push
std
outs
mov
mov
mov
into
or
push
cmp
stc
mov
or
mov
fld
adc
fwait
ds
jecxz
xor
pop
mov
ins
mov
mov
pushf
bnd
add
and
adc
adc
into
sbb
neg
mov
mov
xor
sub
jg
das
scas
jbe
stc
arpl
add
mov
mov
sahf
fdiv
je
lahf
or
add
pop
fdivrp
loop
xor
fdiv
or
jns
hlt
push
movs
test
push
cwde
sub
xchg
fwait
shr
std
sahf
sti
loope
sbb
and
mov
adc
dec
add
stos
daa
retf
movs
add
pop
xchg
inc
mov
out
jmp
sub
ss
mov
or
cs
mov
push
jecxz
cmovno
fidiv
aam
adc
xlat
xchg
dec
cmp
mov
pusha
jg
sbb
or
xchg
popa
test
mov
adc
fcomp
jecxz
daa
add
loop
fwait
mov
mov
push
out
mov
aas
add
xor
push
and
ins
mov
daa
xchg
push
dec
iret
dec
fwait
dec
movs
cmp
pop
stos
mov
xchg
out
mov
daa
lahf
(bad)
mov
mov
rcl
test
add
scas
and
mul
in
out
adc
lods
or
xchg
imul
dec
xor
(bad)
xchg
jp
dec
lods
jg
es
add
xor
sub
neg
xchg
lahf
adc
xor
lea
loop
into
data16
mov
aaa
add
add
fs
movs
pause
mov
jle
xchg
pop
imul
cmps
push
arpl
cwde
ror
cmps
pop
mov
cs
stos
sub
ret
arpl
es
add
addr16
push
mov
push
stc
fidiv
dec
xchg
aas
mov
and
or
out
lock
xchg
outs
dec
leave
dec
add
loop
in
dec
int
xchg
icebp
xchg
mov
dec
fucomi
dec
pop
xor
inc
or
mov
mov
sbb
hlt
les
arpl
fs
mov
cmps
mov
xchg
inc
in
sti
lea
cmp
inc
dec
sar
out
mov
adc
pop
adc
ins
and
push
xchg
iret
cmp
mov
in
xchg
cmp
(bad)
(bad)
sbb
pop
xor
or
jmp
pop
jmp
add
fbstp
cmp
jecxz
(bad)
ficomp
pop
fldcw
and
mov
loop
push
adc
out
(bad)
push
ret
cmps
cmp
sub
stc
jle
add
cwde
mov
call
sub
jae
jge
call
daa
fisubr
dec
fild
sub
cmp
daa
and
out
js
add
dec
int
aas
and
adc
push
dec
adc
add
int3
mov
icebp
push
adc
mov
or
pop
ror
in
test
inc
idiv
push
dec
cli
cmp
lods
stos
leave
in
movs
jne
pop
repnz
xor
repz
pop
mov
mov
mov
and
or
lock
aas
adc
repnz
clc
fldenv
xor
dec
and
add
mov
cmp
xlat
clc
jecxz
leave
pop
push
mov
sahf
int3
in
mov
arpl
call
ret
bound
adc
cmp
rcr
dec
dec
push
cmp
scas
xlat
js
cld
sbb
call
loopne
outs
rcl
xchg
jno
test
mov
cli
fidivr
movs
(bad)
push
stos
jp
sbb
inc
mov
pop
or
test
test
dec
fldenv
pop
jbe
jp
cmc
jne
push
out
or
out
(bad)
mov
jae
cli
enter
inc
sbb
mov
test
(bad)
or
mov
in
mov
add
cmp
adc
sti
fbstp
mov
imul
and
pop
jo
pop
inc
dec
shl
mov
(bad)
sbb
mov
rcr
and
and
and
mov
jle
scas
fsubp
mov
ins
pushf
sbb
ds
sbb
rcr
hlt
push
in
inc
mov
mov
sub
fcomp
add
lock
retf
ins
pusha
frstor
ins
call
out
jg
jno
cmp
mov
sbb
sbb
mov
(bad)
aaa
es
nop
test
imul
sub
mov
fistp
add
xchg
inc
add
loopne
inc
push
popf
xchg
push
popf
lahf
inc
ins
test
inc
into
(bad)
pop
xor
mov
lock
in
ficomp
push
cwde
loopne
pop
pop
inc
push
pusha
call
push
lahf
pushf
hlt
test
push
or
pop
cmp
mov
cmp
sub
mov
idiv
jae
dec
jnp
rcr
cli
shr
inc
add
ret
push
ins
sub
pop
xchg
and
aam
loope
mov
mov
(bad)
in
leave
cmp
mov
push
int3
daa
xor
div
cmps
(bad)
jecxz
adc
xor
mov
xchg
stc
rol
lds
(bad)
std
out
sbb
mov
pop
std
and
sub
sub
inc
bound
jae
(bad)
test
(bad)
mov
mov
mov
jnp
cmp
add
pusha
sbb
fld
or
mov
sub
inc
and
test
mov
sub
shl
cwde
push
push
sti
and
inc
jns
loop
in
dec
test
lods
pop
xbegin
sbb
mov
shr
out
inc
jae
sbb
popw
or
mov
push
sti
fisubr
movs
jl
pushf
pop
mov
aad
push
and
pop
sbb
jne
daa
dec
or
mov
jno
cmc
out
and
stos
sub
dec
sbb
or
inc
icebp
or
inc
stos
or
xchg
jp
popf
test
or
cmp
arpl
hlt
adc
cmp
or
sub
add
pop
xchg
in
jb
rcl
cmp
mov
inc
dec
sbb
es
add
icebp
fldcw
jge
cmp
lock
fwait
mov
test
test
out
push
je
adc
js
dec
arpl
push
inc
jnp
das
jp
mov
pop
mov
jmp
jle
mov
ret
repnz
call
push
pushf
adc
stc
or
mov
add
pop
test
or
pop
adc
jp
clc
inc
xchg
call
movs
sbb
adc
stos
std
add
or
mov
pop
cld
jmp
push
xchg
test
fnstsw
movs
dec
mov
fild
and
mov
sbb
stos
cli
push
ins
push
xor
enter
and
hlt
stc
xchg
xor
jl
stos
js
inc
add
mov
fs
aad
sbb
fldcw
pusha
or
imul
mov
mov
cmps
jg
dec
pop
pop
daa
add
icebp
fcmovbe
add
mov
popf
aad
movs
adc
cmp
sbb
repnz
mov
ds
mov
push
cwde
mov
mov
jg
jnp
xchg
ss
mov
mov
cli
scas
aaa
aad
pop
xor
arpl
push
lock
cmp
jbe
dec
pop
xlat
popa
xor
push
push
adc
xchg
repnz
dec
mov
add
jecxz
pop
dec
repnz
ins
dec
mov
lods
add
mov
stos
out
fwait
add
ins
push
inc
les
mov
ret
pop
stos
cld
shr
ja
(bad)
bswap
and
inc
ja
nop
psrad
out
mov
test
pop
ss
mov
xor
inc
mov
imul
addr16
in
icebp
int
imul
jae
out
xchg
and
xchg
jns
test
cmps
dec
cmps
mov
inc
lahf
adc
sbb
jmp
ror
arpl
(bad)
loop
dec
push
loop
mov
and
es
out
call
ss
adc
pop
xor
xlat
xchg
xchg
sbb
nop
mov
mul
test
cdq
arpl
(bad)
(bad)
add
mov
inc
jg
loope
test
jg
retf
inc
and
imul
xchg
adc
iret
test
call
fisub
sbb
fisttp
loopne
data16
jae
movs
popa
inc
push
cmp
mov
js
pop
(bad)
clc
mov
cmp
push
aad
mov
(bad)
lahf
mov
mov
sbb
lds
pop
cs
cmp
sbb
push
addr16
(bad)
ss
enter
scas
(bad)
jmp
push
mov
jmp
aam
inc
mov
fsub
mov
and
ss
push
adc
push
fcomip
mov
pop
push
cdq
hlt
add
outs
xlat
dec
xchg
nop
jno
imul
xor
mov
icebp
int
jmp
pop
dec
into
fist
dec
cdq
sub
mov
xor
test
rcr
and
je
pusha
not
jbe
dec
in
ins
pop
adc
mov
(bad)
push
add
fcomp
mov
pop
je
pop
mov
call
stos
neg
add
sub
sbb
adc
mov
push
ja
hlt
maxps
addr16
push
popf
mov
jbe
pop
jno
inc
bound
push
push
adc
fiadd
mov
xchg
cmp
xchg
lods
shl
xchg
pop
inc
mov
mov
sbb
push
mul
jle
je
repz
int
mov
jle
repz
jmp
and
out
fs
test
loope
mov
int
pop
call
js
ficomp
sbb
shr
push
ror
push
xchg
aaa
inc
pop
push
mov
and
push
adc
dec
fldenv
test
mov
ins
jbe
mov
xor
fucomp
mov
push
mul
add
shr
test
pop
mov
dec
lahf
cdq
pop
mov
pop
sbb
jl
push
or
shl
cwde
call
sbb
mov
cdq
out
pusha
mov
inc
and
jae
aaa
mov
dec
cmc
adc
or
mov
fstp
out
xor
das
adc
pop
in
or
dec
les
push
in
sbb
aad
pop
cmp
adc
retf
mov
and
jae
xor
enter
in
aam
ror
clc
jnp
(bad)
xchg
out
cwde
repz
and
jns
jne
inc
add
dec
dec
call
int
(bad)
loopne
dec
or
pop
xchg
imul
pop
sub
pop
(bad)
shl
add
push
cmps
jno
movs
push
std
retf
pop
inc
test
lock
pop
in
mov
add
mov
ror
cmp
jmp
ror
fsub
cmps
and
test
fist
mov
fisttp
fsub
mov
ins
cmp
or
and
and
sub
cmp
ficom
arpl
push
ret
add
idiv
aad
or
in
pop
mov
outs
mov
lea
(bad)
dec
xlat
sbb
fwait
mov
clc
in
mov
push
int3
enter
jg
mov
test
cmova
pop
mov
dec
adc
test
mov
mov
xor
xor
outs
inc
cdq
sti
ins
imul
jmp
sbb
fiadd
adc
mov
nop
sbb
push
jae
mov
mov
fld
sahf
(bad)
test
out
(bad)
pop
sbb
dec
or
push
xchg
push
div
add
out
data16
sbb
test
je
std
lods
in
mov
std
xchg
jae
sub
fsub
daa
je
xchg
add
dec
data16
sub
adc
cld
cmps
enter
xchg
scas
and
shl
scas
xchg
(bad)
out
dec
loopne
out
dec
pop
push
mov
rol
outs
fldcw
mov
xchg
mov
pop
rol
jo
rol
stos
mov
add
fcomp
or
push
out
xchg
and
inc
or
add
push
mov
or
push
pop
jae
ficom
xor
out
mov
push
je
in
jns
or
jl
sbb
jno
mov
mov
cmp
xchg
adc
mov
or
fild
cdq
pop
inc
nop
xchg
(bad)
(bad)
mov
push
mov
mov
shr
fld
dec
and
cmp
mov
popa
inc
and
(bad)
aad
stos
out
cdq
push
ret
call
outs
pushf
ds
sbb
hlt
pop
jae
cli
in
icebp
test
hlt
jo
cmps
pop
out
jmp
daa
lea
mov
pop
outs
cmp
fbstp
call
pop
and
cmp
or
cs
sbb
push
push
sub
mov
(bad)
fld
mov
(bad)
sub
test
aam
rcr
out
cmps
pop
sahf
scas
hlt
jp
dec
aas
inc
pushf
push
fidiv
lods
stos
cmp
pop
daa
push
adc
outs
stos
fisub
cwde
out
mov
mov
cmp
jmp
pop
je
pop
push
shr
xchg
std
push
in
addr16
jae
ret
push
rcr
sbb
xchg
cmp
aad
add
cmp
lods
jl
xchg
cmp
pop
fist
fsubr
push
sbb
rcl
cmp
je
test
cdq
ja
jp
jmp
mov
sub
ret
pop
aaa
and
sbb
int
test
push
adc
push
or
cmc
fist
fist
data16
pop
jo
sbb
push
mov
in
pop
xor
or
mov
xchg
aaa
and
out
outs
in
inc
sub
mov
jb
xchg
xchg
and
xchg
shl
movs
inc
cmp
test
repnz
fbld
loopne
add
cmps
sub
dec
aaa
mov
inc
mov
inc
inc
jnp
xor
cdq
jb
pushf
mov
and
jl
inc
adc
xor
dec
test
dec
push
xor
aaa
into
mov
push
sbb
xchg
cwde
xlat
add
cwde
(bad)
lods
xchg
scas
in
lods
and
adc
mov
cdq
xor
in
and
xchg
cmps
sbb
repz
in
xlat
push
xchg
xchg
hlt
shl
outs
xor
test
pop
sub
clc
bound
inc
ffreep
fmul
ret
neg
in
xchg
ds
push
add
cmps
aaa
jmp
pop
sub
add
rol
pushf
popf
jl
jo
fisubr
sub
mov
retf
inc
iret
sbb
or
adc
cmps
hlt
or
or
loop
mov
fisttp
cmp
sub
cld
inc
and
dec
test
pop
mov
sub
and
sub
fwait
pop
and
das
shl
popa
jl
mov
js
push
mov
imul
sbb
lds
cwde
push
inc
std
fcmovbe
adc
int3
push
fs
fwait
mov
jmp
mov
les
sub
mov
jmp
add
xor
push
adc
and
xor
es
mov
arpl
inc
pop
jno
ret
mov
or
(bad)
adc
push
xchg
mov
dec
inc
xor
lahf
pusha
pop
push
cwde
mov
xchg
daa
shr
fstp
inc
jo
inc
cmps
lds
pop
mov
stos
push
sbb
ins
add
pop
cs
mov
dec
and
mov
cmp
cmc
push
adc
inc
leave
sbb
loopne
push
lds
es
mov
in
and
or
hlt
data16
popa
xor
lds
xor
inc
jg
mov
jo
(bad)
aad
aam
data16
dec
add
inc
cmc
popf
imul
or
sbb
jns
jle
dec
xchg
push
leave
fldcw
mul
jb
mov
dec
out
jle
imul
hlt
in
pushf
jg
(bad)
cmp
test
xchg
dec
(bad)
nop
es
sbb
pop
xor
lds
nop
call
movs
and
jns
scas
cmp
imul
(bad)
cmp
mov
and
pop
je
pop
int
pop
adc
push
ins
xor
test
mov
jg
mov
in
cmp
lea
mov
cmp
test
(bad)
adc
xor
outs
sbb
test
push
pop
adc
sbb
mov
mov
xor
movs
loop
jg
adc
mov
jmp
enter
add
push
add
sbb
sahf
test
jp
idiv
xlat
sbb
pop
lock
add
sti
add
mov
mov
retf
and
test
in
es
fadd
bound
xchg
jbe
push
jns
ss
xor
pusha
dec
jnp
test
call
jae
push
xor
cld
fldl2t
jo
and
xchg
rol
xchg
out
ret
addr16
fucomp
xchg
inc
mov
dec
(bad)
js
retf
add
ja
(bad)
mov
xlat
mov
adc
or
movs
and
lock
popf
dec
retf
add
fdivr
mov
mov
adc
mov
mov
adc
and
popf
add
jns
cli
sub
sub
shl
mov
add
xchg
pop
dec
(bad)
sbb
or
push
in
sub
sub
dec
mov
xor
cmp
push
in
xchg
mov
(bad)
not
jbe
aaa
sub
xor
adc
(bad)
mov
inc
sub
aam
je
jle
pushf
repnz
lahf
stc
jg
jbe
or
xchg
repnz
mov
mov
push
cmps
mov
cmp
test
mov
int3
mov
add
outs
mov
inc
pop
es
in
loope
push
jp
xlat
stos
cwde
fs
je
and
and
sbb
jmp
mov
inc
ss
in
mov
mov
es
xor
shl
call
xor
retf
mov
adc
sub
lods
je
popa
rol
lods
(bad)
stos
popf
inc
shr
pop
push
xchg
les
xlat
adc
mov
das
(bad)
adc
cmp
jp
loopne
or
pop
push
leave
xor
rol
adc
test
push
mov
jmp
popa
adc
mov
in
jl
cli
sub
mov
lods
jl
sar
mov
inc
aad
add
cmps
jg
js
rcr
and
lock
ins
mov
sti
jne
int3
add
inc
inc
(bad)
adc
ja
add
jmp
and
in
into
sbb
leave
xchg
scas
inc
jl
cli
icebp
xchg
inc
iret
xor
mov
mov
test
cmp
or
sbb
push
mov
pop
repnz
pop
mov
fistp
jb
(bad)
mov
inc
daa
jg
retf
gs
repz
adc
enter
jecxz
ins
cli
pop
and
aam
call
sbb
jp
lahf
mov
mov
push
retf
(bad)
sti
pop
cmp
icebp
mov
lods
push
es
les
jb
pushf
cmp
or
and
pop
xchg
aad
xchg
iret
mov
mov
aas
xchg
imul
add
pushf
xor
sub
push
add
ret
cmp
loopne
nop
cld
pop
mov
xchg
ret
mov
loop
dec
xor
jmp
xor
sbb
lock
inc
scas
icebp
clc
push
fst
cmps
shr
jne
xchg
es
jecxz
lds
mov
lods
(bad)
fcmovu
add
xchg
inc
mov
xor
daa
cld
pop
inc
popf
aaa
inc
xor
mov
add
fisttp
imul
and
push
mov
push
adc
cmp
pop
jo
sar
cli
adc
inc
ficom
or
push
xchg
test
cmp
or
in
stc
in
sahf
jecxz
xchg
jp
inc
repnz
enter
ret
(bad)
repnz
pop
mov
xchg
xor
or
pop
cmp
loope
paddd
clc
jmp
fwait
in
lods
cmp
dec
inc
pop
add
inc
add
je
inc
imul
mov
cs
les
outs
adc
adc
jnp
xchg
add
adc
cld
aad
dec
cld
gs
sub
adc
xchg
imul
jns
aam
into
jmp
push
xchg
arpl
push
inc
inc
(bad)
in
out
icebp
xor
not
ja
(bad)
xor
push
test
cli
ret
adc
mov
inc
out
pop
scas
push
mov
and
pop
xor
add
mov
out
lods
std
loope
mov
stos
ret
jg
imul
cmp
das
inc
inc
stos
sub
in
xor
jae
pop
jnp
sbb
test
(bad)
aad
cs
cmc
in
inc
adc
inc
mov
int
ss
je
pop
(bad)
imul
repnz
(bad)
pop
shl
dec
(bad)
repnz
fistp
pop
push
mov
(bad)
call
ror
aaa
std
pop
stos
out
add
(bad)
xchg
sbb
fidivr
or
cld
nop
test
out
test
jo
cmp
les
sbb
out
in
cmp
(bad)
jb
fsub
jns
push
jae
cmps
xchg
in
ror
push
add
adc
pop
int3
adc
(bad)
std
mov
(bad)
mov
sub
int3
outs
sub
adc
and
xchg
add
je
jp
out
add
push
and
stos
ja
sbb
push
xchg
xor
mov
int3
add
cld
add
test
repnz
lahf
out
jmp
mov
daa
lock
outs
or
(bad)
bound
popa
xchg
xor
add
call
popf
mov
adc
es
test
out
aas
jle
mov
outs
or
test
and
iret
fild
jge
adc
jns
push
clc
mov
push
jb
mov
xchg
mov
aas
sub
dec
sbb
inc
icebp
in
stc
aad
cmc
out
in
fdiv
push
(bad)
sbb
or
ins
mov
adc
fstp
sbb
inc
test
mov
cli
and
jb
stc
mov
mov
enter
jns
mov
pop
mov
xor
pop
cmps
xchg
jb
pop
pop
out
xchg
fld
xor
and
adc
dec
pop
pop
pop
xchg
nop
mov
push
mov
lock
repnz
add
test
mov
inc
xor
clc
(bad)
sbb
aas
stc
jmp
ret
mov
or
mov
mov
loopne
sbb
das
stos
into
sti
or
aad
add
jge
jl
loop
push
mov
adc
mov
mov
out
xlat
dec
ds
inc
cmp
in
or
mov
inc
int3
adc
repnz
(bad)
push
(bad)
cmp
test
push
dec
xchg
ss
dec
xor
xor
hlt
call
cmp
inc
and
(bad)
popa
cmps
(bad)
sahf
arpl
scas
rol
fisttp
imul
fsub
pop
ins
cmc
aam
cdq
popf
pop
and
jg
sbb
sub
push
and
jne
sahf
xchg
fsubr
pop
sub
out
mov
mov
cmp
inc
int3
adc
pop
retf
cs
xor
scas
stos
out
mov
adc
sbb
sbb
fnsave
jns
(bad)
ror
stos
aas
mov
scas
cmp
mov
mov
ret
pop
xchg
xor
je
lods
sbb
loop
loope
sbb
ret
or
mov
or
outs
scas
xor
sbb
and
add
push
sbb
cmps
lock
pop
mov
jge
inc
aaa
sbb
lds
cvtps2pi
sbb
fwait
sbb
jp
pop
in
cmps
test
jmp
dec
stc
mov
mov
movs
out
int3
mov
jmp
cmp
out
je
jmp
imul
pop
ins
cmp
cmp
jge
call
mov
xchg
dec
rcl
leave
test
jp
mov
daa
push
mov
out
or
rcr
fisub
adc
fisubr
cmp
dec
ret
pop
outs
not
imul
fst
ret
sub
cwde
clc
iret
icebp
ret
pusha
jno
adc
aas
push
cmp
inc
lds
inc
repnz
ss
gs
out
xchg
jnp
and
ficomp
ds
sbb
(bad)
loope
pop
in
xor
clc
mov
mov
int
sbb
not
jle
inc
call
push
lahf
dec
sub
jno
cdq
imul
cmps
pop
fdiv
popf
repz
iret
(bad)
dec
xchg
mov
pop
dec
dec
sar
push
push
or
cmc
inc
push
fcomp
rcr
loope
mov
inc
push
mov
and
mov
retf
out
addr16
xchg
enter
fwait
lods
aam
jns
(bad)
fimul
ret
mov
adc
cmp
pop
out
sbb
mov
mov
ret
shr
ror
ins
fs
jnp
mov
mul
ret
jl
jl
sbb
xor
pop
ins
call
adc
sbb
(bad)
into
mov
sti
aas
int
and
xor
or
call
(bad)
mov
test
and
mov
retf
js
and
dec
imul
xor
cmps
call
push
jmp
jae
fisttp
out
jo
fisttp
mov
inc
test
xchg
or
(bad)
mov
in
push
(bad)
clc
call
add
jbe
and
jg
call
std
mov
div
mov
les
xlat
dec
pop
or
mov
and
in
cmp
rcl
and
enter
getsec
xor
and
dec
push
mov
jmp
scas
icebp
pop
cmp
clc
mov
adc
mov
int3
xor
cdq
call
or
test
imul
cmp
js
push
inc
pop
in
or
js
cmps
cs
sub
jmp
inc
xchg
std
jmp
pop
in
stos
xlat
push
jns
cmps
bound
sub
lahf
or
test
mov
jno
and
jge
and
jg
pop
in
dec
mov
mov
xlat
mov
dec
stos
dec
pop
ret
fwait
add
and
gs
pop
(bad)
adc
leave
fwait
push
lods
xchg
mov
out
fs
iret
dec
icebp
bound
in
(bad)
xor
pop
sbb
test
loopne
sti
mov
lock
jb
xor
mov
mov
das
and
aaa
mov
gs
and
push
inc
hlt
ss
adc
push
(bad)
cwde
cmp
mov
in
xchg
add
js
sti
imul
push
mov
imul
out
jnp
daa
das
movs
pop
retf
sbb
inc
or
daa
movs
lea
inc
inc
adc
ins
das
setle
cmc
pop
add
fisub
mov
xchg
addr16
xchg
jmp
lock
sbb
sahf
jmp
popa
jmp
inc
stc
clc
jmp
mov
out
mov
outs
xchg
cs
inc
fdivr
and
or
mov
or
das
lahf
ret
jmp
je
popa
add
fcom
cmps
outs
rcr
pop
cmp
dec
mov
jmp
aaa
ret
inc
lahf
mov
shr
movs
jge
inc
mov
jbe
in
dec
pushf
xchg
mov
test
sub
mov
lahf
cmps
in
mov
pop
push
mov
pop
inc
fiadd
loop
mov
sub
push
rcl
test
(bad)
fistp
(bad)
aam
mov
sub
push
sbb
pop
mov
push
test
xchg
mov
mov
jmp
xchg
scas
fs
in
hlt
cwde
test
fistp
in
push
popa
dec
repz
or
mov
shl
jl
xchg
enter
cmp
push
pop
popa
cmp
movs
cs
shl
test
xor
repz
daa
jl
icebp
(bad)
mov
ficom
in
sar
rcr
add
into
lods
jnp
ret
add
jmp
dec
data16
and
mov
dec
hlt
cld
imul
js
pop
pop
mov
into
int3
mov
mov
lea
push
das
ror
or
ja
pop
inc
mov
in
imul
mov
sbb
jno
das
shl
cmps
dec
shr
jbe
mov
jne
cmps
mov
call
push
sub
pop
adc
fbld
ins
(bad)
jg
inc
and
jl
cs
mov
bound
xchg
nop
stc
adc
retf
xor
lock
sbb
xor
aam
arpl
jo
into
jnp
lds
mov
inc
mov
and
add
sub
out
and
icebp
mov
push
sub
and
sar
ror
ret
test
out
lods
mov
mov
inc
imul
lods
outs
sub
xchg
sub
cld
out
(bad)
ret
aad
jl
jl
lea
in
ret
(bad)
fxam
mov
xchg
rol
movs
mov
cmp
shr
jle
dec
les
xchg
inc
mov
pusha
dec
hlt
cwde
in
pop
jmp
push
fisub
daa
or
mov
fdivr
(bad)
lock
cld
add
pop
adc
push
mov
add
int3
scas
adc
jo
and
push
jecxz
xchg
fistp
scas
in
adc
push
mov
sbb
jmp
and
push
push
sub
pop
xor
dec
js
ror
ja
setnp
mov
mov
pushf
(bad)
xchg
xchg
add
pop
pop
dec
pop
test
or
les
pop
fsubr
iret
adc
pop
push
and
sti
ins
cmp
scas
out
xchg
sub
fs
xor
movs
sbb
lock
xchg
adc
adc
xor
xchg
mov
sub
or
mov
or
push
mov
(bad)
mov
(bad)
pop
add
adc
in
sub
or
dec
ins
add
ja
xchg
nop
pop
mov
nop
outs
push
jge
cmp
adc
inc
mov
test
fcomp
mov
cmovl
adc
es
sbb
sbb
xchg
cdq
repz
scas
out
in
and
dec
call
or
fstp
cdq
data16
sti
inc
mov
xor
mov
pop
(bad)
repz
push
push
stc
and
aaa
(bad)
adc
inc
cmp
jbe
gs
mov
jb
popa
inc
pop
cmp
rcl
sub
rol
fst
jbe
mov
or
mov
xchg
push
ins
je
loop
leave
sbb
and
hlt
push
mov
inc
lods
ret
mov
add
sbb
xchg
sti
mov
jl
adc
pop
enter
loopne
adc
popf
mov
or
mov
ss
iret
or
cmp
jmp
jp
in
out
std
jnp
jmp
rcl
inc
lods
sar
mov
add
mov
cdq
ins
imul
ins
mov
stos
ficom
leave
push
fidiv
int
mov
inc
shr
dec
xchg
push
sub
mov
pop
xlat
cmp
in
pushf
lea
stos
ins
mov
inc
ret
jecxz
lods
add
jnp
adc
sti
in
shl
dec
adc
xor
lods
jp
sbb
jp
mov
jno
and
or
cli
inc
push
lds
push
test
loope
data16
dec
outs
in
mov
sub
adc
push
dec
in
imul
push
lods
inc
xlat
sbb
movs
addr16
xchg
mov
and
retf
(bad)
dec
xor
cmp
mov
js
mov
pop
sub
movs
jbe
push
not
clc
push
fadd
shl
aam
repnz
pop
xchg
lds
or
push
inc
test
push
or
and
aaa
das
fsub
popf
int3
rcr
mov
out
fdiv
add
xor
mov
add
add
jno
test
hlt
or
cwde
mov
mov
test
shl
mov
sub
sbb
fwait
loopne
mov
mov
daa
mov
fcom
shl
jmp
idiv
add
push
adc
shl
pushf
pop
rcl
xor
into
shl
mov
stos
pop
pusha
pop
(bad)
cmp
mov
xor
loope
push
jno
pop
pop
vcvtss2sd
mov
mov
or
arpl
xchg
jl
adc
xchg
mov
dec
sub
jne
mov
(bad)
std
and
jmp
test
push
pop
adc
adc
pop
xchg
cmp
pop
mov
sbb
aaa
jb
pop
or
aaa
jmp
mov
loope
jmp
out
lods
cmps
test
or
inc
imul
mov
cmps
mov
add
lock
icebp
mov
imul
test
push
push
fnstenv
jmp
mov
cmp
inc
clc
fisubr
das
mov
sub
xor
cli
push
sub
push
sub
cdq
imul
nop
addr16
dec
iret
mov
inc
add
icebp
jnp
cmp
daa
repz
mov
adc
int3
push
xor
or
aaa
sub
or
clc
mov
jmp
ror
cmp
jl
jns
mov
adc
bound
xchg
inc
stos
jle
or
push
mov
jmp
push
mov
mov
(bad)
fisttp
pop
dec
dec
lock
mov
ret
icebp
mov
stc
jg
push
or
adc
mov
sbb
aad
jnp
dec
cmp
dec
scas
in
sub
sti
outs
dec
aas
fcmovnbe
cld
test
aam
sub
cmp
add
pop
icebp
pop
sahf
sub
std
lea
mov
adc
cmp
jbe
mov
jl
adc
pop
or
bound
adc
ss
pop
ds
xor
and
and
xor
arpl
sbb
leave
inc
adc
lods
jbe
jmp
mov
shl
movs
jp
rcr
dec
push
frstor
and
loopne
sbb
jb
jmp
fisttp
in
vmovaps
mov
mov
je
adc
repnz
sub
mov
pop
arpl
mov
mov
cmp
cli
retf
adc
into
and
mov
ins
xchg
(bad)
push
xlat
clc
ja
pop
ret
push
inc
mov
loopne
shr
sbb
sub
pop
ret
adc
sbb
mov
je
or
dec
add
dec
xchg
fadd
pop
jno
out
rcl
inc
(bad)
push
and
sbb
inc
add
push
mov
dec
cmps
ss
add
stc
imul
xor
ret
cld
es
push
xor
retf
cwde
out
jae
out
loopne
jecxz
lods
xor
(bad)
cli
xchg
nop
mov
sbb
adc
and
or
hlt
sub
in
push
mov
leave
fidiv
mov
and
cs
cmps
stos
test
sbb
pop
jae
mov
xor
(bad)
outs
xchg
mov
movs
out
mov
jo
ds
js
lahf
stos
or
xor
sar
push
sub
mov
adc
sahf
add
mov
retf
mov
jecxz
fstp
jns
add
jecxz
push
adc
sbb
int
mov
jle
sbb
xor
int
or
test
inc
cmp
shr
cmp
loop
inc
dec
add
mov
and
test
ss
add
jecxz
sbb
xchg
clc
out
inc
fmul
imul
and
push
les
fcomp
pop
mov
cmps
sahf
loopne
mov
or
adc
and
dec
add
dec
xchg
cmp
jae
gs
xchg
push
int3
shl
jp
cmp
call
retf
mov
test
cli
pop
aaa
inc
mov
sub
xor
aad
cli
sbb
xchg
xor
out
aaa
outs
xor
mov
(bad)
push
ds
sahf
stos
xor
dec
pop
sbb
jo
adc
cli
mov
cli
cwde
pushf
adc
(bad)
mov
jnp
sub
cmp
out
lock
add
sbb
xor
mov
push
dec
rol
cld
jne
cmp
and
adc
mov
xor
mov
mov
ss
movs
mov
add
dec
or
dec
rol
pusha
ret
adc
sahf
leave
out
xor
sbb
pop
mov
and
rcr
xor
cmps
movs
xchg
pop
add
lahf
test
xchg
mov
lods
fbld
das
int3
lahf
mov
and
fwait
pop
cmc
call
rcl
ins
pop
dec
pop
add
mov
push
inc
adc
pop
mov
hlt
mov
in
mov
pop
xchg
xor
sub
push
out
out
or
add
cmp
loop
call
(bad)
out
rcl
sti
pop
sub
ret
mov
repnz
xchg
sub
js
cmps
mov
fcomp
std
and
fwait
movs
cwde
adc
rcl
sub
xlat
enter
dec
ins
jns
add
ret
out
adc
sbb
cwde
js
jae
sub
pop
pop
imul
dec
movs
xor
mov
leave
sbb
fs
(bad)
aad
mov
in
cmc
test
xchg
mov
mov
idiv
push
pop
push
inc
fcom
mov
inc
test
hlt
mov
dec
movs
add
out
in
mov
call
add
sbb
add
in
outs
jle
xchg
and
adc
or
and
sub
cmc
call
push
mov
fmul
call
mov
inc
jg
nop
sahf
arpl
cmp
mov
mov
movs
fs
(bad)
iret
(bad)
mov
xor
out
adc
mov
add
xor
adc
call
pop
jecxz
(bad)
push
fidiv
inc
pop
add
jb
cdq
push
in
xchg
cmp
sub
daa
pop
outs
imul
(bad)
fist
adc
sar
call
xlat
sub
clc
push
sbb
dec
add
mov
or
pop
push
cdq
lahf
movs
arpl
cmp
ja
arpl
xor
pop
add
jnp
aam
xlat
cmps
cmp
push
xlat
sub
loope
sub
arpl
add
jl
xor
push
test
and
dec
or
(bad)
and
adc
mov
or
arpl
jg
jns
leave
cdq
push
dec
stos
ret
out
mov
test
cmp
mov
and
fild
jo
fs
or
xchg
cmp
inc
out
call
cmp
and
out
sub
mov
ds
pusha
out
adc
mov
mov
aas
(bad)
jo
xchg
scas
shl
mov
gs
pop
inc
mov
mov
arpl
pop
div
(bad)
ror
inc
cmps
call
mul
mov
and
clc
cmc
cmp
nop
sbb
mov
in
mov
push
das
movs
arpl
sbb
idiv
push
sub
out
(bad)
in
xor
xlat
jne
mov
xchg
lea
add
mov
mov
cmp
mov
inc
aaa
mov
add
loopne
(bad)
and
cmp
sub
pusha
hlt
mov
loop
out
int
or
mov
in
out
in
or
mov
sub
xor
sbb
cmp
in
jno
(bad)
mov
xchg
outs
xchg
(bad)
test
add
es
not
loopne
mov
add
sbb
les
movs
jb
int3
fldenv
pop
loope
cmp
and
dec
movs
adc
test
sub
or
xor
jno
xlat
sbb
cmp
sbb
sbb
call
fs
add
xor
cld
out
test
mov
sub
add
pop
xchg
pusha
push
push
aaa
fcom
pop
pop
xchg
xchg
out
inc
jo
or
stc
ins
dec
hlt
adc
mov
enter
xchg
and
stos
mov
icebp
ins
or
or
sub
loope
loopne
and
jnp
or
shr
test
sahf
mov
mov
push
push
into
(bad)
adc
call
jl
xor
data16
xchg
jg
mov
push
pop
aas
iret
and
mov
es
mov
xchg
sbb
sbb
stc
pop
jg
cld
push
int3
outs
out
sbb
enter
shr
mov
adc
cmp
ja
in
sub
and
mov
jg
cmps
sub
and
xor
xchg
out
outs
sub
jno
mov
les
add
pop
mov
add
repnz
jl
push
or
ins
inc
push
or
or
mov
sub
jno
and
and
inc
and
out
push
cmp
pop
sahf
inc
(bad)
or
(bad)
push
imul
inc
adc
inc
pop
inc
cmps
push
xlat
hlt
sti
sub
mov
dec
hlt
das
push
imul
jmp
loopne
xor
out
or
mov
stos
xchg
add
and
outs
jmp
jbe
pop
call
add
fwait
jo
and
jecxz
mov
pusha
int
sbb
sbb
cmps
cmp
push
(bad)
mov
dec
jge
sbb
cmp
loop
sbb
dec
pop
push
mov
jl
mov
sub
fsub
cs
sbb
jle
dec
dec
stos
push
xor
imul
adc
dec
mov
lea
test
lea
test
int3
jp
mov
sbb
shr
stos
cmp
cld
pop
cld
cmp
mov
cmps
test
adc
dec
popf
push
std
cdq
or
push
sub
inc
data16
push
ret
pop
gs
inc
adc
dec
cmc
xchg
inc
inc
arpl
mov
dec
push
movs
out
cmp
mov
mov
mov
clc
cmp
rcl
pop
popf
cwde
retf
pop
inc
sbb
pop
(bad)
jae
sti
inc
ja
and
xor
xor
pop
mov
mov
das
pop
shl
push
(bad)
jb
movzx
in
pusha
stos
or
shl
jo
cmp
fcom
stc
add
test
or
inc
mov
adc
or
jp
mov
xchg
jbe
push
or
cmp
cmp
ret
push
jo
xchg
xor
into
test
or
test
repnz
mov
cmc
test
or
sub
sbb
sbb
shl
xchg
jns
xor
fstp
in
cs
or
or
mov
inc
fwait
jb
jl
stos
xchg
xchg
mov
loopne
or
(bad)
in
mov
jp
mov
sub
mov
xor
(bad)
in
xchg
sub
aaa
inc
cmp
jle
in
xlat
shr
ror
mov
and
adc
inc
ins
int
repnz
out
hlt
cmp
ja
stos
shl
repz
mov
sahf
xchg
movs
lea
pusha
xchg
push
inc
sub
push
ins
dec
jecxz
scas
or
jno
jmp
repz
xchg
mov
jg
push
out
jle
jne
loopne
leave
sti
cmc
xchg
xchg
dec
mov
and
outs
cmp
sbb
push
pusha
retf
es
lahf
push
ret
loop
ror
ret
retf
popa
inc
movs
jecxz
test
out
les
pop
fidivr
pop
adc
loopne
and
jg
call
(bad)
rcl
cmp
test
imul
inc
adc
jb
sar
inc
out
fistp
mov
dec
dec
xor
sbb
push
call
push
daa
push
push
push
shl
xor
(bad)
cld
fnstsw
ins
retf
sub
outs
cwde
stos
push
jle
and
je
lds
ucomiss
push
int
cmp
push
ins
test
cmp
push
inc
pop
ds
sbb
pop
add
and
scas
cmp
inc
aaa
fadd
ins
mov
addr16
xor
fnsave
push
push
adc
(bad)
mov
(bad)
int3
loop
sbb
gs
gs
loop
call
cmp
cmp
(bad)
arpl
jl
mul
shr
add
aaa
jmp
loopne
lahf
xor
pop
fcomp
(bad)
out
or
aad
in
mov
jmp
cmp
cwde
js
push
leave
shl
dec
and
sub
mov
jns
repnz
addr16
xchg
fldcw
fcomp
repnz
dec
and
sbb
dec
(bad)
jl
or
xchg
mov
aam
not
test
push
and
mov
scas
ds
jo
sbb
dec
int
sbb
or
add
xchg
clc
cmps
ret
adc
sahf
std
je
adc
imul
popa
fiadd
cli
mov
pushf
fstp
stos
push
in
cwde
pop
push
call
cmp
es
stc
test
xchg
sbb
xchg
inc
sub
pusha
mov
aam
mov
lahf
xchg
popa
rol
gs
jl
mov
add
inc
mov
push
xor
pop
mov
and
xchg
add
in
js
adc
data16
int
mov
add
in
cld
or
loopne
sbb
arpl
fldcw
out
in
cwde
add
xchg
ss
cvttps2pi
and
adc
mov
iret
rcl
push
retf
xor
mov
dec
lock
fmul
add
fidiv
mov
pusha
or
jmp
cmp
jl
test
xchg
daa
xor
shr
call
mov
test
cmp
(bad)
in
shl
lahf
(bad)
int
dec
push
rcr
mov
sub
adc
cwde
mov
push
aam
shl
je
out
(bad)
ror
out
call
ja
retf
push
or
xchg
je
ins
jle
add
or
jmp
(bad)
xchg
out
xchg
(bad)
out
not
std
fdivr
and
xlat
xchg
loope
lods
cdq
cmp
jmp
(bad)
ret
pop
nop
mov
mov
icebp
in
cwde
pop
xlat
cld
adc
push
mov
sar
gs
and
add
rol
pop
inc
mov
or
pop
jo
pop
adc
repnz
and
pop
push
std
ja
pop
push
cdq
lock
mov
mov
xchg
xor
hlt
and
pushf
add
scas
loope
and
push
cwde
mov
mov
jl
movs
cmp
xchg
mov
gs
sahf
movs
out
and
push
lods
inc
fld
jno
in
or
push
cdq
add
mov
rcl
xchg
and
xor
stos
out
and
jp
jle
xor
lds
je
(bad)
mov
outs
mov
sub
lods
cmp
cmp
fsubp
mov
pop
push
mov
call
sbb
sahf
sub
fild
xchg
jmp
popf
cld
sub
out
mov
and
vunpcklpd
out
rcr
fs
push
xchg
cs
cmp
fisttp
adc
add
sahf
jns
mov
or
in
dec
dec
int
loope
sahf
and
mov
adc
arpl
shr
in
pop
xor
fild
lock
dec
pop
push
add
stc
pop
mov
adc
xchg
(bad)
ret
xchg
inc
fsubr
lea
popf
add
inc
movs
rcl
mov
jg
cmp
mov
mov
push
(bad)
pop
cs
pop
push
popf
sub
out
fsub
scas
test
fwait
and
mov
cmp
and
mov
ins
push
icebp
xchg
ds
cmp
call
pop
aam
pop
je
jecxz
stc
xchg
mov
ds
add
cmps
inc
xor
enter
xchg
out
in
stos
jge
cld
xchg
sub
aam
mov
sbb
fstp
je
out
pop
loope
inc
ins
push
xor
out
push
(bad)
outs
jge
dec
xor
pop
pop
mov
or
mov
inc
mov
fisubr
pop
addr16
xchg
mov
mov
stos
sub
dec
pop
bound
out
adc
shr
mov
and
(bad)
xor
inc
mov
cbw
push
xchg
cmps
cmps
sbb
push
cli
out
int3
add
or
(bad)
in
jge
mov
jge
jnp
outs
lahf
sti
out
jno
mov
mov
mov
pop
mov
sahf
dec
test
add
shl
lock
xchg
es
push
out
mov
mov
jmp
rol
mov
xor
repnz
mov
fidivr
cmp
add
paddq
jecxz
or
inc
jl
in
sub
xchg
and
cmp
cmp
dec
cdq
test
and
hlt
lock
(bad)
hlt
push
jp
pusha
and
mov
add
fdivr
pop
pop
cmp
sbb
(bad)
and
lods
adc
rol
mov
mov
cmc
ins
mov
xchg
iret
or
leave
fisub
call
scas
dec
adc
enter
mov
enter
in
cmp
push
(bad)
aas
add
mov
ja
mov
xor
shr
call
push
mov
std
cmp
lahf
cmps
dec
fcmovbe
scas
pushf
mov
xchg
push
push
mov
addr16
sub
cmp
movs
stos
or
rcl
adc
enter
jg
ins
dec
pop
movs
push
popf
aam
or
(bad)
mov
imul
imul
inc
ds
aaa
fnstenv
sbb
popf
pop
(bad)
lahf
inc
push
(bad)
jmp
into
pop
add
inc
mov
adc
dec
add
cmps
xchg
dec
jl
icebp
jge
ins
inc
shl
ret
sbb
leave
jne
jae
icebp
outs
mov
cwde
not
lahf
xchg
aad
push
arpl
test
cmc
sbb
gs
and
loopne
inc
or
sub
sub
mov
pushf
mov
cmc
(bad)
jl
clc
imul
cmps
mov
jae
push
push
imul
push
mov
dec
xor
(bad)
push
cmps
adc
sbb
adc
lods
cdq
call
retf
or
outs
es
sbb
aam
xchg
popa
mov
adc
inc
sub
inc
les
xchg
(bad)
ins
(bad)
xor
ret
nop
sbb
or
mov
push
out
jno
inc
call
or
inc
mov
cli
mov
scas
inc
fcom
sar
add
aas
jne
push
test
pop
into
sbb
daa
adc
xor
xchg
test
adc
mov
jge
sbb
sahf
ins
outs
outs
movs
out
mov
pop
inc
xor
xchg
xor
scas
cwde
dec
call
mov
gs
dec
psadbw
and
(bad)
and
mov
je
xor
cmc
sbb
neg
adc
cld
in
int
sbb
(bad)
jmp
addr16
sub
clc
and
imul
cmp
pop
fstp
jae
stos
rol
adc
xor
xor
mov
pop
pop
add
addr16
fs
or
movs
or
stos
(bad)
mov
fwait
mov
pop
scas
jle
nop
jl
retf
fild
repnz
jle
pop
rcr
lock
sbb
jmp
dec
mov
or
(bad)
dec
ins
cdq
clc
push
out
and
cmp
fld
fdiv
jp
sub
fst
or
xchg
aam
fstp
(bad)
xchg
bound
sti
pop
pop
sbb
mov
mov
mov
cmp
in
repz
sbb
cs
(bad)
fsub
imul
cmps
adc
iret
ret
movs
mov
aad
out
cs
jge
cmc
retf
sbb
xchg
ins
mov
rcl
arpl
mov
les
mov
inc
int3
stos
push
pop
mov
jp
mov
or
fst
inc
dec
mul
fs
stos
adc
in
ins
jb
int
repz
jmp
repz
cmps
out
sbb
xchg
add
(bad)
adc
dec
and
sub
mov
or
inc
and
and
imul
mov
les
fs
jo
pop
mov
test
xchg
pop
dec
cmps
sbb
out
lods
dec
ins
int3
jnp
jno
call
stos
sbb
jle
xor
and
sahf
mov
(bad)
rcl
adc
neg
mov
out
mov
sahf
ins
mov
in
(bad)
add
xlat
pop
cs
adc
ret
mov
mov
aaa
test
outs
mov
in
cmp
adc
pusha
ret
sbb
inc
out
movs
mov
sti
call
fnstenv
rcl
ret
shl
mov
into
adc
add
out
adc
fwait
mov
clc
xchg
(bad)
iret
jae
dec
test
and
and
jle
mov
ja
es
push
lds
movs
das
ins
idiv
movs
shl
loope
push
jo
cmp
push
dec
ds
jae
jnp
sar
and
cmp
mov
sub
in
xor
sti
repz
and
push
xor
pop
sub
test
dec
push
ja
int3
cld
pop
mov
and
(bad)
rol
das
in
ja
cld
or
das
inc
bound
icebp
xchg
shl
mov
enter
shl
bound
xor
cmp
inc
ret
add
popf
sbb
jp
xchg
push
ja
scas
push
sahf
add
loopne
xlat
std
inc
out
call
pop
add
xchg
rcl
aas
adc
jp
scas
test
stc
mov
jne
mov
out
push
pop
xchg
aam
out
leave
ror
dec
dec
sbb
lock
mov
cs
mov
inc
sub
jmp
sbb
pop
fisttp
pop
call
dec
pop
sbb
rcr
test
mov
mov
jo
push
inc
sbb
pushf
mov
call
nop
outs
mov
mov
dec
xchg
ins
mov
jle
jmp
sub
mov
xchg
mov
(bad)
mov
pop
dec
inc
add
das
lods
cmc
pop
ror
test
lds
dec
pop
cwde
(bad)
call
ins
test
jle
retf
mov
jnp
lea
adc
ss
das
pop
fbld
pop
(bad)
retf
mov
mov
ss
arpl
jnp
add
cmp
inc
sub
mov
test
shl
nop
inc
push
or
and
mov
pushf
aam
or
push
sub
rol
stos
leave
shr
jae
xlat
retf
dec
sub
sbb
inc
add
xchg
cs
mov
fisub
add
push
in
fwait
iret
mov
adc
cs
pop
ins
rcl
inc
test
mov
retf
add
mov
rcl
loopne
iret
mov
jg
test
mov
inc
test
inc
sub
ins
pop
fisubr
ret
pusha
push
push
adc
ret
cli
mov
loop
rol
sub
sub
in
xchg
pushf
mov
sub
bound
xchg
mov
mov
pop
lods
js
leave
mov
int3
shl
out
inc
xchg
add
iret
jno
(bad)
lahf
dec
lea
cdq
inc
icebp
or
ror
push
ss
loope
pop
ret
std
scas
jp
fs
mov
aam
loope
jmp
inc
sub
jne
adc
sub
adc
ins
xor
jmp
int
(bad)
push
push
pop
scas
je
les
fidiv
loope
and
jle
push
mov
mov
je
pop
add
mov
mov
out
jns
mov
pop
mov
inc
aaa
fwait
cmps
retf
cmp
ins
shl
jmp
add
or
(bad)
mov
sahf
clc
out
retf
test
push
mov
mov
leave
in
sub
fld
mov
sbb
add
jae
sub
dec
pop
push
push
push
pop
(bad)
mov
jno
leave
fwait
mov
fnstcw
aam
enter
shr
ss
(bad)
sub
loope
(bad)
call
cmp
loope
int
fs
lock
sbb
adc
sar
mov
cmp
cwd
and
xor
jbe
sub
sbb
das
scas
lea
out
iret
or
outs
add
aam
iret
and
or
int3
lock
fadd
stc
in
lahf
xchg
cmps
cmp
icebp
fwait
bound
mov
out
jmp
adc
cmp
out
fidivr
cmp
cmp
mov
sbb
and
retf
test
sahf
mov
test
ret
jnp
(bad)
enter
pop
xchg
mov
add
pop
cmps
test
popa
(bad)
mov
aas
test
ins
mov
dec
je
pusha
into
jno
push
pop
sub
and
into
xchg
mov
shl
ret
jmp
xchg
popf
jns
mov
xchg
and
and
aam
in
jb
shl
xchg
sub
aaa
or
popf
mov
adc
in
mov
out
add
cmp
out
mov
push
retf
xlat
retf
fstp
(bad)
jnp
jp
cdq
xor
sub
test
sub
xor
out
push
sti
inc
shr
lea
mov
pop
sbb
and
cmps
loopne
xchg
neg
add
push
or
cld
push
and
rol
iret
outs
sti
add
add
outs
dec
inc
dec
adc
xchg
mov
int
cmps
dec
sub
mov
or
sbb
xchg
jmp
pushf
jne
das
mov
pop
mov
add
xlat
aam
mov
jg
test
arpl
add
fwait
pusha
or
push
div
aad
jg
rcl
push
in
cmp
loope
in
push
call
inc
dec
sub
add
jl
movs
lahf
retf
jo
out
inc
in
in
xchg
jmp
mov
ins
int
stos
mov
mov
imul
cld
adc
icebp
jne
data16
pop
inc
sbb
jb
mov
cmp
adc
inc
or
add
jge
inc
out
add
pusha
add
ret
adc
outs
imul
pop
shl
pop
ret
sbb
add
mov
and
stos
cwde
xor
sbb
shr
test
or
add
sub
sub
jg
sub
adc
xchg
jb
xchg
into
mov
dec
xor
sub
test
or
aam
mov
jl
ret
sti
add
add
sub
push
(bad)
lock
mov
pop
scas
and
xchg
mov
xchg
daa
add
lea
jne
push
and
xor
mov
push
fs
cmp
push
test
cmp
pop
dec
cmps
sar
stc
pop
fisub
sbb
cmps
cmps
add
mov
dec
inc
mov
fsubr
sbb
les
je
in
retf
dec
pop
sbb
sbb
mov
in
sbb
iret
fiadd
ficom
fbstp
sub
xor
push
jmp
push
mov
and
ficomp
lock
inc
mov
lods
mov
pop
mov
fwait
push
shr
stos
outs
pop
push
dec
add
aam
ins
jg
fdiv
xchg
xor
add
and
ss
mov
mov
stc
aas
icebp
and
jae
jmp
call
(bad)
pop
mov
in
mov
hlt
ja
mov
mov
dec
cmp
into
mov
sub
ins
aam
mov
xchg
mov
clc
xchg
inc
jmp
sbb
arpl
mov
jae
mov
stos
das
jnp
sti
outs
in
sub
xor
idiv
cmp
iret
inc
jno
inc
jb
adc
leave
adc
aas
xchg
mov
leave
inc
xlat
push
xor
mov
in
sub
push
sbb
xchg
jns
inc
inc
cs
xchg
shr
enter
retf
loopne
add
jns
inc
add
mov
adc
adc
jecxz
xor
lahf
jne
jle
push
cmc
int
rcr
mov
scas
mov
inc
ret
sti
inc
(bad)
sub
mov
test
cs
je
icebp
jns
bound
inc
push
mov
imul
and
add
sbb
sbb
adc
pop
jmp
jb
in
jbe
sar
inc
retf
mov
add
cmc
mov
cmp
cwde
lock
jnp
add
push
pop
adc
inc
push
imul
aas
pop
inc
adc
sub
movs
pushf
cmp
push
bound
jbe
scas
push
and
sub
xchg
stos
inc
mov
xchg
adc
fdiv
ret
in
sub
pop
adc
aas
push
jns
pop
mov
push
sub
inc
mov
addr16
cmp
out
fdiv
cmp
sar
mov
mov
cwde
mov
aaa
pop
test
in
mov
pusha
mov
adc
jg
stos
mov
mov
adc
dec
inc
popa
(bad)
mov
pop
mov
pop
outs
fs
inc
inc
cmc
add
js
cld
add
inc
fcmovne
sbb
ffree
lods
xchg
adc
push
sbb
gs
mov
or
push
mov
mov
retf
out
push
ja
xor
mov
cmp
push
ja
adc
test
push
ret
aaa
lahf
jl
inc
dec
das
jp
sub
pop
(bad)
sub
inc
dec
lock
stc
das
pop
cli
nop
push
mov
xchg
cmps
jnp
ins
lock
mov
aad
sahf
fild
xchg
lods
sub
dec
dec
mov
pop
pop
mov
addr16
mov
jle
add
bound
iret
push
ins
ret
pusha
call
pop
adc
and
das
mov
popf
fistp
cdq
sub
push
adc
jne
xchg
mov
and
pusha
adc
out
call
sub
jl
add
(bad)
fldenv
jns
mov
test
sti
fistp
or
in
(bad)
jne
mov
pop
push
adc
(bad)
xchg
call
mov
push
sbb
push
neg
sub
std
cmp
adc
dec
(bad)
or
fdiv
jbe
jae
mov
dec
cmp
sbb
inc
out
mov
call
outs
loope
jle
dec
add
sbb
jno
fucomi
in
lock
ja
mov
retf
das
and
imul
jecxz
push
push
test
pushf
(bad)
jg
enter
pop
int
iret
fcom
jne
call
sub
sahf
xor
mov
stc
dec
mov
fdiv
das
push
dec
sbb
addr16
mov
je
or
mov
xchg
fadd
test
cmp
shr
xor
ror
mov
es
fistp
push
push
inc
scas
mov
or
out
adc
mov
out
fmul
popf
push
aam
adc
xchg
push
xchg
hlt
fs
aam
out
lds
cli
xchg
iret
mov
jbe
outs
dec
inc
xchg
enter
xor
std
jb
or
cmp
and
sub
adc
int
clc
test
xor
test
cmp
pop
scas
mov
cmp
xchg
inc
mov
daa
inc
pop
sbb
mov
inc
imul
int
dec
push
mov
jp
div
fucomp
ret
aaa
jb
cmc
sbb
mov
mov
test
jp
adc
mov
add
in
dec
arpl
out
inc
jl
and
push
gs
dec
xchg
sub
or
aam
loopne
and
clc
int
mov
cmp
nop
pop
dec
jns
imul
(bad)
fist
iret
fwait
mov
aaa
mov
xor
mov
adc
pop
sahf
adc
outs
push
imul
iret
fst
dec
call
lock
retf
add
adc
mov
ret
mov
xchg
or
jg
mov
xchg
fstp
or
jne
fs
(bad)
leave
addr16
adc
jl
into
cmps
and
xchg
out
std
jge
xchg
mov
mov
cmp
dec
rol
dec
test
inc
out
mov
inc
ins
scas
imul
lds
stc
inc
lea
add
mov
pop
xchg
mov
mov
or
jmp
mov
adc
adc
enter
lock
push
rcr
pop
sbb
push
or
ins
in
into
inc
inc
and
dec
mov
push
xor
data16
in
out
add
out
sbb
leave
jge
mov
xchg
or
sbb
sub
fdiv
pop
test
pop
xor
cmp
dec
(bad)
xor
and
mov
clc
enter
(bad)
push
sbb
addr16
add
jmp
lahf
(bad)
sbb
test
arpl
popf
shr
lea
fisubr
in
retf
jecxz
push
int3
out
cld
cmp
xor
mov
lods
shl
xchg
push
mov
nop
loope
xlat
stc
mov
xor
aaa
add
or
push
xor
popa
sbb
test
mov
in
test
fisubr
mov
or
pop
push
cmc
jp
(bad)
ror
jp
into
mov
sub
jbe
fisub
pop
dec
movs
rol
bound
sub
dec
lods
out
sub
leave
pop
(bad)
add
ds
sub
in
daa
cmps
cmp
and
jae
es
cmp
xchg
mov
stos
in
mov
push
inc
inc
mov
rcr
shr
adc
loop
stos
hlt
fild
mov
lds
push
outs
xchg
in
mov
mov
ss
fdiv
(bad)
aam
inc
jmp
dec
pop
xchg
jle
(bad)
in
jmp
mov
jne
scas
pop
push
mov
jmp
push
ds
enter
pop
and
cs
movs
mov
adc
push
jg
mov
mov
sbb
fdiv
cs
das
ins
shr
pop
inc
retf
inc
pop
call
stos
(bad)
mov
popa
pop
(bad)
loop
push
(bad)
push
imul
out
cmps
sar
sar
inc
mov
cmp
pop
imul
sbb
jae
pop
fcmove
mov
shl
pop
in
test
add
mov
mov
inc
mov
fucom
pop
push
ins
(bad)
and
cmp
fs
fistp
out
out
jb
inc
inc
enter
push
cmc
jb
inc
pop
cmp
mov
mov
dec
stos
test
rol
jle
shl
jecxz
push
inc
mov
push
xlat
out
aaa
or
push
jae
inc
xchg
sub
push
pop
lods
jns
outs
inc
add
jmp
loop
or
mov
inc
jbe
clc
scas
mov
out
pop
nop
mov
out
cmp
in
out
push
and
pop
push
inc
ror
mov
seto
int3
xchg
mov
out
mov
adc
into
(bad)
jo
lods
mov
(bad)
mov
ins
imul
mov
lock
mov
fsubrp
and
out
aaa
out
fwait
dec
fidiv
aam
mov
mov
sub
fidivr
mov
imul
sbb
inc
repnz
in
and
sbb
je
jns
dec
mov
(bad)
out
popf
fnsave
mov
push
call
shl
outs
test
jae
jmp
mov
repnz
jnp
or
push
loop
arpl
xchg
and
ret
imul
pop
and
cmp
dec
mov
pop
push
repnz
arpl
rol
out
cmp
add
clc
scas
ds
mov
dec
mov
(bad)
adc
cs
inc
add
push
xchg
test
push
pusha
cmp
inc
pop
xor
pop
dec
add
ds
fidiv
push
ins
xor
xor
repnz
(bad)
repnz
popa
push
cwde
fidiv
into
arpl
test
jmp
or
mov
aas
cmp
jmp
jnp
out
xchg
(bad)
mov
ret
jle
xchg
ins
sub
or
add
enter
mul
fsubr
int3
enter
and
jo
or
dec
inc
cmps
repnz
test
mov
ret
add
call
stos
pop
jmp
xchg
xchg
push
jb
js
push
add
sub
mov
jg
dec
sahf
arpl
mov
adc
and
or
fucomi
cli
sub
test
pop
cmp
jne
and
test
mov
sub
sar
cmp
adc
xchg
pop
nop/reserved
(bad)
pop
out
fcmovne
jns
mov
xchg
pop
or
aas
push
pop
(bad)
(bad)
imul
dec
xlat
inc
les
mov
inc
mov
call
out
test
and
pop
imul
retf
jl
adc
dec
aaa
outs
pop
into
mov
ja
mov
jmp
data16
add
rol
mov
adc
fwait
mov
and
xchg
shr
sbb
es
mov
add
sub
jle
jb
cmp
es
push
sbb
(bad)
scas
sbb
cmp
gs
or
sub
and
cdq
pushf
fcmove
shl
pop
pop
mov
ror
mov
out
xlat
(bad)
cmp
enter
popa
push
jbe
xor
adc
jmp
mov
rcr
fcom
sbb
xchg
jp
call
cmp
fcom
ret
mov
repz
popf
jl
pop
xor
and
fs
inc
sub
aas
jbe
int3
mov
daa
dec
nop
sbb
cld
cmp
mov
das
imul
adc
mov
xchg
arpl
pop
xchg
ds
imul
jg
icebp
xchg
mov
mov
test
add
ins
dec
or
jmp
mov
or
add
jge
pusha
mov
in
dec
mov
add
pushf
enter
retf
into
out
push
mov
and
adc
inc
dec
dec
sub
fisubr
pop
or
jmp
or
wrmsr
cmp
inc
lods
and
and
jp
mul
cmps
push
xchg
shl
mov
aam
cmp
aad
test
(bad)
loop
fsubr
retf
out
sub
pushf
rcr
xchg
or
or
cmp
mov
jmp
xchg
xor
push
clc
cmp
cmps
add
mov
and
mov
lahf
and
cmp
cmp
mov
in
xor
idiv
jle
add
pushf
ins
mov
mov
jnp
mov
xor
dec
cmp
aad
(bad)
(bad)
cmp
movs
mov
pop
push
or
adc
fs
or
pop
jnp
push
js
dec
nop
pop
lods
xor
mov
rcr
cli
neg
push
iret
or
pushf
cmc
mov
add
lahf
fdiv
xchg
sub
pop
out
sub
lds
push
adc
jecxz
test
fwait
adc
add
std
(bad)
xor
aas
cmps
xchg
icebp
iret
add
xchg
neg
pop
arpl
out
push
jae
pop
xchg
jp
loopne
sub
push
or
jne
xor
mov
push
fdiv
sub
push
xchg
mov
loopne
out
xor
xchg
jno
dec
pop
push
dec
cmp
pusha
jae
sbb
mov
sub
push
mov
xor
pop
lock
mov
cmp
cmp
xchg
jns
sbb
dec
inc
fild
inc
lods
aaa
push
add
mov
or
jns
bnd
add
jle
inc
loope
mov
dec
stos
fbld
and
nop
dec
cmp
mov
je
repnz
push
jnp
aaa
int3
gs
push
je
xor
sub
sub
test
add
je
cmp
push
fstp
stos
or
mov
pop
sbb
mov
jno
and
fwait
or
cwde
push
or
mov
jo
push
sahf
cli
out
sub
pop
ret
rcr
pop
js
or
jecxz
cmp
and
inc
xchg
mov
push
(bad)
pop
mov
test
sbb
mov
lods
and
fstp
jae
inc
je
daa
pop
mov
cs
inc
push
popf
mov
push
popa
add
push
repnz
loope
add
je
jp
popa
inc
lea
sbb
xchg
into
mov
retf
inc
out
lods
ins
sub
ja
nop
adc
jmp
xor
xor
or
mov
fist
xor
pop
fild
lea
inc
clc
ds
stos
sbb
test
cmc
push
in
sbb
jae
and
jmp
lea
push
(bad)
jo
scas
out
jle
pop
inc
mov
in
mov
sub
(bad)
hlt
push
icebp
fisttp
(bad)
jmp
test
in
in
mov
rol
cmp
cmp
dec
mov
jge
push
lods
ret
fwait
imul
neg
inc
push
popa
mov
outs
or
push
dec
mov
sub
and
imul
add
cdq
mov
dec
push
sub
in
arpl
sbb
add
(bad)
push
enter
cmc
pop
in
jb
or
adc
xchg
out
and
fwait
ret
xchg
add
push
or
loope
retf
pusha
inc
cmp
add
push
leave
loope
mov
outs
or
je
out
or
dec
outs
movs
mov
add
push
mov
dec
xor
add
cmp
cmc
sbb
or
mov
inc
(bad)
or
imul
cmp
iret
jmp
cmc
clc
xchg
out
jg
aas
jae
movs
test
mov
pop
rcr
int3
pop
xor
pop
inc
pop
cld
popa
mov
inc
fist
xchg
jb
xlat
sbb
ss
out
movs
push
loopne
imul
mov
imul
(bad)
out
cmp
out
in
cwde
jbe
add
sbb
xchg
(bad)
xchg
cmp
pop
cmp
addr16
call
aad
and
xor
mov
mov
jl
dec
inc
lahf
leave
and
mov
lds
call
sbb
sbb
sub
cmp
jge
jb
lods
in
rcr
fistp
nop
jns
scas
fldenv
dec
ror
daa
mov
jmp
sub
dec
inc
xor
mov
retf
cmc
stos
push
or
sbb
and
stos
xchg
rol
in
push
out
mov
sti
cmp
clc
push
mov
jmp
shl
outs
aaa
loop
pop
inc
pop
xor
pop
push
jmp
cld
fstp
or
out
xor
add
or
ins
pop
sar
jge
ret
sbb
rol
mov
in
(bad)
cmp
cmp
test
loopne
movs
inc
out
loopne
aam
rol
out
(bad)
jbe
dec
dec
(bad)
js
jmp
jno
xor
outs
neg
cmp
push
xchg
dec
ret
je
push
js
adc
je
xor
in
pop
mov
push
movs
inc
adc
pop
scas
imul
test
pop
leave
outs
mov
int
dec
inc
stos
cmp
movs
and
push
movs
adc
jle
cwde
jns
je
ret
dec
out
addr16
out
aad
mov
cdq
sbb
jb
inc
xchg
mov
lock
fnsave
add
push
clc
jo
in
sbb
or
xchg
jnp
(bad)
mov
ds
and
ficom
pushf
jne
add
pushf
ret
push
js
add
sti
push
neg
pushf
sti
pop
mov
pop
ss
into
cmp
sar
mov
enter
sar
jne
add
sti
rcl
or
sub
movs
and
into
xchg
int3
pop
fadd
repnz
add
sbb
jp
mov
ret
into
stos
aam
fsub
daa
xor
cwde
retf
mov
inc
lds
mov
mov
dec
lods
outs
lea
add
push
mov
test
lods
pop
sub
sar
xor
cmc
pop
push
pop
mov
out
or
ins
aam
mov
repz
sub
cmp
xchg
arpl
mov
dec
mov
cmp
mov
into
and
fs
bound
hlt
cmp
or
icebp
sar
push
cmp
out
retf
push
scas
jle
fs
adc
jmp
cmp
push
in
and
or
data16
mov
repnz
out
add
cmp
aad
push
mov
cmp
loope
add
int3
sbb
cmp
rol
fcomp
fistp
add
add
leave
imul
cmp
dec
xchg
mov
fwait
push
mov
jmp
loop
mov
retf
xlat
jb
rol
dec
test
stos
push
outs
sub
xor
fs
loope
sub
cmc
cmp
nop
sbb
inc
mov
add
xchg
xchg
in
fist
dec
jp
fiadd
fnstsw
mov
out
mov
add
aas
inc
mov
sub
sub
push
xor
inc
sub
(bad)
xor
pop
jno
mov
ja
(bad)
std
pusha
dec
fs
jne
stc
jge
aaa
mov
std
(bad)
mov
cld
xchg
mov
mov
mov
inc
adc
enter
ds
mov
dec
sar
pop
pop
adc
push
cmp
cmp
add
and
ins
mov
jg
xor
outs
mov
xchg
dec
xchg
cmps
sti
loope
inc
cmp
add
aad
cli
adc
add
fistp
in
in
out
adc
lea
pop
inc
push
sub
mov
loop
and
jge
inc
clc
sub
mov
mov
loop
mov
out
jbe
scas
pop
pop
xor
shr
mov
das
scas
cmovge
enter
fwait
jb
xor
cmps
stos
out
mov
bound
inc
xor
rcl
xor
jne
in
push
enter
xor
jmp
out
std
mov
jg
sub
repnz
dec
dec
xchg
cmp
call
gs
scas
daa
xor
mov
int
call
scas
dec
into
add
iret
retf
shl
and
mov
xchg
div
out
add
jbe
mov
enter
pop
pop
add
xchg
or
mov
mov
test
push
hlt
pop
enter
popa
adc
pop
shr
sub
pushf
mov
retf
ror
ror
push
xchg
pop
cmps
call
pusha
sti
shl
xchg
sub
data16
push
ja
gs
inc
jae
icebp
sbb
sbb
cmp
lds
std
test
push
retf
xchg
aas
sbb
mov
jge
repz
jns
ds
pusha
adc
dec
ins
comiss
rcr
mov
and
(bad)
or
scas
jb
pop
ins
xchg
test
lds
xchg
xchg
adc
dec
test
ret
dec
and
cmp
sti
xor
aaa
retf
mov
mov
xchg
xchg
pop
std
or
(bad)
(bad)
lea
lods
in
mov
dec
xchg
aaa
xor
xchg
cdq
mov
xor
stos
mov
xlat
int3
(bad)
mov
out
cmc
ins
sbb
pop
dec
or
imul
aas
and
push
in
fld
xor
dec
das
pop
add
push
sub
add
inc
pop
lds
push
(bad)
jne
jecxz
(bad)
dec
adc
push
adc
leave
fs
jmp
aas
mov
es
adc
mov
daa
fs
pop
retf
cdq
inc
clc
out
cmp
xor
xor
push
loop
jnp
xchg
cmp
jb
aad
shr
mov
int
fild
xor
pusha
in
jb
pushf
xchg
(bad)
sbb
rol
addr16
push
(bad)
push
mov
mov
jnp
call
icebp
nop
les
push
loope
or
nop
call
pusha
div
mov
or
test
mov
mov
in
lea
enter
sbb
mov
jmp
and
test
lahf
mov
arpl
rcr
mov
sub
gs
neg
cmp
fwait
repz
push
ins
pop
cmp
fnstcw
adc
repz
jb
jb
xchg
jle
or
and
psllq
inc
sub
dec
or
jbe
lea
out
or
xor
push
adc
(bad)
std
or
shl
ret
xor
mov
add
push
or
sti
and
aam
mov
jmp
in
jle
lock
js
mov
nop
and
(bad)
cmp
cmp
mov
je
out
mov
add
sbb
ds
pop
(bad)
cmp
pusha
pop
pop
mov
jb
mov
iret
cmps
cdq
push
sbb
xor
xchg
jp
lahf
push
xchg
in
inc
pusha
out
jmp
or
sub
data16
ins
in
sub
push
push
dec
sub
imul
adc
adc
lds
cwde
sahf
fisubr
mov
xchg
leave
mov
popa
lods
push
aaa
add
lods
sti
shl
push
popa
or
cmp
in
add
js
jecxz
mov
sahf
jmp
adc
pop
pop
xchg
or
mov
sub
sbb
fsubp
jle
push
sbb
outs
dec
outs
sub
push
(bad)
ds
dec
addr16
inc
xchg
data16
cwde
dec
dec
pusha
jbe
cmp
lods
(bad)
jle
fdivr
pushf
cmps
fwait
pop
xor
jbe
loope
xlat
cdq
add
test
cdq
adc
or
mov
xlat
pusha
sbb
sub
push
repnz
dec
clc
nop
fidivr
xor
adc
rol
and
mov
loop
xchg
sbb
ret
test
jns
sbb
inc
repnz
jb
retf
fnstcw
sub
stos
les
mov
lahf
or
push
add
les
jnp
movs
fstp
mov
lahf
xchg
xchg
pop
arpl
mov
fcomp
repz
or
and
int3
mov
or
js
xchg
or
adc
lods
xor
inc
sbb
out
sbb
lock
push
inc
mov
sbb
pop
mov
jp
ja
das
jb
mov
jns
xchg
hlt
into
mov
adc
sub
mov
mov
sub
ja
pop
stos
in
test
inc
jle
stos
xor
or
mov
jbe
mov
or
jne
repz
add
xchg
add
aam
jno
jp
mov
dec
sbb
cmp
es
fsub
sahf
sub
enter
scas
sbb
dec
cmp
call
lods
bound
xor
xchg
lds
call
fsub
mov
sbb
or
xor
enter
jbe
cdq
shl
jecxz
xor
mov
mov
sub
sahf
test
inc
stos
mov
adc
xchg
xor
stos
aaa
mov
mov
in
data16
js
cmp
std
or
sbb
push
xor
jle
dec
mov
scas
jne
xchg
mov
cmp
and
cmps
mov
les
dec
cs
push
or
add
and
push
lods
test
js
dec
sub
in
daa
dec
loop
repnz
cmp
add
(bad)
in
fiadd
and
mov
jl
jge
jno
and
call
adc
sub
jmp
push
cmc
jl
or
loopne
inc
push
mov
mov
loopne
pop
adc
xchg
mov
sahf
dec
fidivr
in
loope
mov
je
push
mov
adc
jae
int
in
mov
movs
ja
dec
inc
icebp
inc
sub
dec
xor
sub
add
jl
sti
lods
sbb
pop
sub
mov
jp
sbb
adc
push
dec
add
div
(bad)
int3
dec
inc
cwde
mov
std
mov
jl
cs
mov
pop
retf
mov
les
hlt
xchg
sub
lods
fwait
or
inc
lds
enter
fldpi
or
xor
mov
cmps
pop
clc
jmp
sar
bt
loop
jo
in
je
push
mov
push
and
(bad)
add
idiv
jo
mov
imul
shl
(bad)
lea
pop
scas
sub
mov
div
test
cmp
xor
sbb
lods
pop
daa
ss
fmul
in
lods
sar
ins
add
ins
jnp
pop
inc
aam
adc
jmp
mov
mov
cmp
cmp
sub
mul
sub
fiadd
inc
sub
(bad)
inc
loope
and
jb
dec
jns
sub
inc
xor
fnstsw
xchg
cmps
mov
retf
xor
adc
mov
and
xchg
xchg
loopne
ret
cmps
jmp
add
push
inc
xor
mov
mov
jg
mov
out
dec
jg
mov
adc
inc
aas
in
xchg
ss
jbe
fisttp
call
jl
repnz
mov
std
adc
add
inc
test
cmp
jg
scas
xchg
jae
je
stos
out
lea
and
push
sbb
mov
mov
adc
test
(bad)
je
mov
inc
add
pop
xchg
pop
in
sub
sbb
movs
out
out
outs
mul
jg
es
or
dec
mov
shl
sti
cmp
sar
pushf
or
sahf
jmp
fwait
dec
add
xor
(bad)
loopne
add
xchg
inc
call
inc
icebp
ret
sub
(bad)
sbb
ds
push
outs
imul
mov
sub
push
sub
xor
adc
lock
fdivr
pop
addr16
jns
(bad)
adc
adc
data16
jmp
fstp
sbb
(bad)
lods
call
jl
test
and
popf
sbb
or
ud0
mov
sahf
or
outs
inc
add
jl
enter
jb
jb
lahf
mov
lods
push
xchg
icebp
inc
xchg
add
pop
jl
mov
cmc
aaa
jmp
sbb
cdq
fist
mov
pop
mov
cld
or
jns
adc
std
add
push
mov
jbe
jge
add
ins
dec
aad
jb
fldcw
dec
pop
(bad)
xchg
push
call
sar
mov
sub
sub
mov
xor
stos
fucomp
jb
dec
aad
test
stc
setns
push
mov
mov
or
dec
cmp
call
popa
push
movs
lea
out
mov
cmc
cmp
fldenv
imul
scas
ins
les
xchg
test
mov
jno
out
lods
pushf
fs
jnp
dec
jl
loopne
ret
je
fistp
icebp
mov
(bad)
xor
jl
add
xchg
jnp
imul
dec
popf
pop
sti
pusha
dec
add
mov
xor
xchg
repnz
and
in
dec
pop
xor
out
inc
sub
mov
push
pop
bound
push
loopne
xor
ss
mov
ret
xchg
sub
ins
cmc
stos
retf
cmc
(bad)
sar
out
mov
xchg
loop
jae
lea
test
mov
ret
mov
loop
cwde
dec
imul
(bad)
fstp
fmul
mov
cdq
aas
outs
push
retf
cdq
cmp
jge
dec
jecxz
fld
mov
mov
dec
cs
ret
dec
repz
jecxz
mov
aad
pusha
jno
aaa
stc
js
lahf
cmp
ds
ror
rcr
jne
aad
cwde
jns
das
(bad)
sti
mov
adc
arpl
or
lods
mov
adc
(bad)
mov
mov
cmp
arpl
lods
stc
sti
nop
xrelease
out
rcr
pop
adc
pop
xor
push
aam
push
and
addr16
bnd
jle
(bad)
dec
arpl
push
fcomp
push
push
loope
sbb
inc
enter
(bad)
in
and
pop
pop
and
xchg
xchg
pop
aad
mov
mov
or
jnp
imul
xchg
arpl
adc
xor
and
cmp
jno
loopne
mov
cmp
xlat
scas
int
ss
jns
xchg
sub
pop
pop
xchg
enter
sbb
push
push
fabs
pop
push
ja
xor
xor
inc
into
clc
xchg
push
outs
pop
sbb
das
sbb
xor
sub
xchg
jg
leave
bnd
loop
imul
fucompp
in
mov
add
inc
cmc
retf
push
fcomp
rol
fdivr
fidiv
cli
outs
xor
cmps
leave
or
cmp
sub
mov
fild
int3
daa
hlt
push
movs
fdivr
jg
rcr
mov
pop
rcl
in
pop
dec
push
mov
mov
stos
out
popf
imul
cli
ret
pop
fnstsw
sbb
gs
repnz
mov
push
mov
cwde
push
in
pop
mov
clc
xor
jge
cmp
dec
inc
or
dec
mov
adc
or
(bad)
ins
mov
popa
add
or
add
jae
jmp
push
xchg
(bad)
pop
std
dec
out
shr
aam
stos
jg
out
and
push
fmul
jo
jmp
cwde
pop
aad
adc
sahf
sbb
mov
ds
sbb
mov
xor
sar
or
xchg
mov
bnd
mov
mov
sbb
and
stos
icebp
or
(bad)
js
pop
mov
mov
push
push
into
popf
pop
mov
xchg
pop
inc
or
fnsave
sub
(bad)
aad
and
(bad)
cld
xchg
jno
bound
sbb
dec
adc
xor
stc
cs
(bad)
sub
ficomp
das
xchg
push
int
add
pop
xchg
jns
fsub
in
movs
xor
ins
cmps
(bad)
jmp
ins
add
call
lods
or
fstp
fsubrp
inc
adc
push
int
dec
dec
or
mov
sub
xor
sbb
jl
daa
add
mov
ret
xchg
xchg
adc
stc
jecxz
cmc
daa
or
xchg
inc
xlat
push
enter
dec
arpl
add
mov
clc
push
mov
push
lods
or
sbb
(bad)
sti
and
hlt
sub
cli
je
jo
pushf
in
cmp
mov
div
mov
xor
jmp
add
not
adc
out
and
pop
ds
sbb
pop
pop
ret
add
jp
clc
push
xor
xor
imul
nop
jns
shl
cdq
imul
mov
jmp
(bad)
pop
mov
xor
xor
or
mov
data16
ret
aaa
xchg
dec
test
add
out
cli
cdq
clc
xchg
cmp
and
dec
rcr
or
and
daa
jl
in
les
push
add
dec
es
sbb
imul
xlat
repz
sub
push
movs
dec
fidiv
mov
mov
mov
mov
call
adc
fwait
jecxz
mov
mov
mov
popa
hlt
push
mov
inc
enter
fisubr
mov
xchg
out
fild
and
lock
mov
sub
test
enter
pop
sbb
cli
sbb
mov
scas
pop
xchg
mov
mov
xor
call
int3
out
mov
and
push
lea
adc
sti
imul
iret
sar
test
pop
sar
jnp
inc
push
inc
add
sbb
test
push
fucomp
jno
ret
mov
inc
aam
and
sti
inc
adc
(bad)
lahf
add
cwde
daa
pop
pop
fcomp
jecxz
hlt
stc
gs
and
or
fcmovnu
xor
mov
lahf
js
xlat
test
inc
icebp
in
dec
push
push
pushf
popf
outs
inc
loopne
inc
dec
icebp
xchg
push
inc
gs
popf
enter
test
ins
cmp
jecxz
movs
push
fnstcw
sar
dec
repnz
xor
imul
cmp
in
pop
mov
es
pop
popf
adc
mov
arpl
mov
dec
push
iret
or
dec
dec
inc
pop
retf
pop
movs
scas
mov
cs
dec
inc
call
test
popf
mov
int3
dec
sbb
outs
or
dec
adc
pop
je
pop
es
add
sti
sub
dec
sbb
les
mov
mov
cdq
loopne
fisttp
pop
call
fisttp
push
xchg
cld
pop
ss
loopne
rol
mov
sub
dec
pop
rcl
xlat
dec
inc
loope
mov
jle
cmp
bound
and
xchg
(bad)
mov
push
into
mov
cmps
add
into
pop
lahf
cdq
mov
mov
lahf
add
aaa
sbb
inc
xor
or
popa
mov
sub
into
hlt
dec
cmp
sbb
ja
(bad)
cwde
mov
adc
shr
xchg
xor
call
(bad)
ins
in
jo
or
imul
dec
inc
jmp
dec
jmp
xchg
xchg
add
add
lods
ins
fwait
int
and
dec
mov
xor
call
pop
dec
ror
pop
lods
es
sbb
std
inc
mov
shl
sub
inc
ds
mov
pop
or
jge
mov
stos
lds
out
fisttp
xlat
cmps
lock
push
loope
or
outs
or
pop
inc
push
xchg
shr
or
iret
xchg
mov
push
sub
popf
cmp
xchg
(bad)
mov
cmps
xor
mov
adc
std
les
pop
stos
lock
xor
not
and
cmp
pop
int
stc
xchg
push
pop
pop
out
scas
inc
in
out
cs
add
in
std
out
mov
in
sti
xor
fs
(bad)
xchg
(bad)
stos
mov
sub
daa
mov
aad
xchg
mov
or
xchg
dec
jg
add
mov
std
aas
inc
imul
jge
sbb
test
mov
xor
or
je
sub
ins
int
xor
out
mov
pusha
cs
jmp
loopne
pop
(bad)
jp
jno
int
sbb
outs
xchg
inc
adc
push
std
mov
xchg
xchg
popf
in
sub
sahf
div
sub
icebp
dec
push
xchg
inc
mov
scas
sbb
mov
mov
aas
lea
dec
inc
jmp
call
and
xchg
cmp
dec
std
mov
cwde
xchg
adc
pop
ror
lock
stos
push
xor
xchg
push
scas
push
cld
xchg
(bad)
shr
repz
cmp
mov
movs
int3
xor
(bad)
aad
shl
pusha
jge
and
inc
mov
hlt
mov
adc
movs
cmp
movs
sub
outs
pop
enter
sub
or
dec
fwait
pop
scas
inc
cmp
sbb
mov
mov
and
hlt
lds
bound
dec
lods
mov
and
dec
sti
js
std
(bad)
xor
jecxz
xor
cs
not
dec
cli
pop
or
fisub
add
xchg
jns
test
xor
cli
mov
mov
mov
nop
pop
pushf
in
mov
(bad)
mov
out
cmp
stc
push
icebp
ja
out
scas
or
std
sbb
push
enter
dec
pop
mov
or
loop
stos
sar
sub
test
sub
fist
mov
or
fld
loope
and
and
xchg
sbb
dec
inc
sbb
neg
xor
addps
mov
out
xlat
jge
xchg
jecxz
cmp
cli
and
(bad)
push
ror
lods
jmp
inc
xchg
inc
cmc
dec
and
sub
nop
mov
mov
fnsave
sti
icebp
cmp
or
fs
addr16
push
xchg
mov
dec
aaa
outs
cmp
test
daa
test
inc
or
pop
fcmovnbe
jne
mov
jp
(bad)
sbb
push
jae
das
sub
pusha
(bad)
out
push
jnp
push
imul
repz
jl
mov
and
ret
dec
mov
jecxz
jl
pop
jl
into
mov
into
and
xchg
or
iret
cmp
mov
popa
mov
test
mov
and
scas
out
icebp
mov
cmp
inc
jl
retf
inc
imul
mov
(bad)
adc
dec
mov
cs
dec
jge
push
inc
enter
mov
dec
jno
cmps
push
scas
rcl
and
cmps
int3
aaa
inc
loopne
les
mov
loop
mov
xchg
push
ficomp
imul
jmp
inc
adc
call
fld
xchg
add
ffree
fwait
call
scas
adc
adc
mov
icebp
test
lock
test
cmps
ret
(bad)
into
shr
jle
aas
fld
dec
push
das
sub
mov
sbb
iret
pop
pop
xor
scas
mov
jno
push
es
cli
add
mov
jns
jne
sub
mov
(bad)
jns
or
int3
leave
out
jo
mov
in
adc
arpl
popf
test
push
sub
add
rcl
jp
pop
cs
(bad)
or
adc
test
les
and
mov
xchg
out
or
shr
push
stos
js
les
(bad)
cmp
shl
popf
push
xchg
in
cld
jge
aad
sub
in
jge
dec
or
test
lock
mov
repz
mov
adc
(bad)
xlat
iret
sbb
scas
add
ret
fs
fsubp
imul
push
lea
aaa
pop
lahf
or
mov
mov
fiadd
dec
mov
fcom
dec
dec
add
cs
xor
imul
jne
dec
in
rol
and
mov
fbld
(bad)
jns
and
iret
cld
mov
nop
cwde
dec
push
mov
out
pop
jns
imul
jg
sub
xchg
push
mov
(bad)
mov
hlt
loope
stc
dec
inc
stc
out
mov
pusha
test
sti
test
bnd
in
cmp
sbb
inc
sub
pushf
sbb
mov
out
mov
aam
mov
sub
cmps
out
movs
movs
mov
inc
dec
push
outs
jp
jl
div
and
call
aam
(bad)
push
into
adc
into
movs
add
mov
xor
fimul
movs
ret
add
xchg
mov
out
mov
dec
mov
pop
jle
fnsave
cmp
xor
das
jmp
mov
add
cmps
into
(bad)
mov
and
cmp
sbb
int
xor
bound
in
pop
push
adc
or
imul
aad
sbb
xor
push
rcr
mov
xchg
lds
mov
mov
push
xor
retf
lea
and
xor
shl
stos
mul
movs
scas
dec
cmp
push
in
mov
sub
imul
or
xor
mov
jmp
in
(bad)
in
adc
fnstenv
retf
or
mov
dec
mov
scas
aas
leave
mov
push
cli
xchg
test
cdq
cmp
fmul
pop
into
cld
jge
adc
dec
setae
enter
(bad)
test
test
pop
dec
sbb
dec
fcomp
adc
push
call
push
jno
sub
not
mov
(bad)
pop
test
pop
ins
int
mov
sahf
and
mov
nop
or
ret
xor
leave
pop
cmp
lahf
aas
mov
out
inc
or
imul
shr
cli
mov
pop
cmp
(bad)
or
ret
mov
aam
sub
iret
sbb
fwait
cmp
adc
scas
sub
xchg
fs
sahf
(bad)
or
rcr
outs
call
cmps
and
(bad)
sub
aam
xlat
xchg
fs
ret
sbb
je
push
imul
jg
outs
(bad)
je
std
fild
retf
adc
pop
sub
mov
push
(bad)
cmps
iret
scas
inc
jge
stc
addr16
imul
mov
test
sti
cmps
jge
push
pop
ss
aad
int3
pop
or
xor
sbb
std
sbb
cmp
adc
and
ds
lock
out
sbb
aad
bound
pushf
sub
cmp
cdq
fstp
out
lahf
pushf
mov
xor
(bad)
jb
(bad)
push
or
(bad)
jmp
clc
mov
xchg
push
mov
dec
pop
mov
cmps
call
pop
sub
jmp
arpl
add
jg
sbb
mov
sbb
popa
mov
adc
dec
inc
loopne
mov
cdq
mov
jb
mov
and
sahf
adc
mov
ds
push
dec
(bad)
out
inc
mov
cmc
loop
jg
adc
inc
push
push
aad
and
sbb
add
es
jmp
dec
stos
das
xchg
test
dec
daa
xchg
mov
mov
jnp
daa
(bad)
(bad)
mov
jg
jno
xchg
sbb
pop
div
mov
or
retf
lds
lods
inc
dec
and
or
jmp
mov
fucomip
cdq
les
sub
dec
not
push
div
and
outs
int
xor
jbe
and
aaa
push
neg
nop
idiv
pop
daa
jge
dec
jp
test
sub
iret
cld
bound
loope
push
pop
sahf
jb
add
dec
adc
adc
cmp
iret
into
ret
xchg
xor
or
fmul
mov
pop
add
inc
pop
mov
dec
or
or
lods
lods
ins
xchg
(bad)
retf
arpl
xchg
dec
pop
sbb
div
mov
xchg
and
sbb
and
sbb
push
sbb
jno
mov
shr
rcl
cmp
xchg
or
(bad)
sbb
push
mov
jns
cmp
inc
pop
es
pop
xchg
mov
push
out
pop
mov
aas
mov
popa
pop
xor
leave
in
dec
dec
cld
rcr
sub
fimul
out
fwait
and
mov
xchg
jno
leave
mov
shl
dec
xchg
or
jnp
shl
and
mov
jp
cmps
sahf
mov
jle
sbb
push
stc
dec
mov
lahf
push
inc
popa
inc
sbb
repz
outs
iret
cmps
push
std
outs
ss
call
adc
mov
and
dec
out
or
sbb
fwait
ds
inc
xor
call
mov
dec
inc
enter
xchg
sbb
mov
mov
in
jecxz
std
popf
jns
jno
inc
cmp
scas
fsubr
push
and
sub
(bad)
in
test
push
arpl
les
jge
jnp
mov
hlt
inc
in
loopne
mov
fimul
aam
mov
out
cmp
aad
or
mov
adc
pop
lods
es
out
push
mov
mov
mov
pop
lock
popa
mov
enter
and
xchg
cmp
or
test
push
ret
pop
fwait
inc
cdq
sbb
test
mov
ja
sub
psraw
xchg
nop
xlat
mul
(bad)
mov
or
sbb
mov
bound
cmp
jmp
cli
fidiv
rcl
mov
loopne
inc
and
loopne
jns
lahf
inc
push
mov
cmp
loopne
push
outs
fsub
xchg
std
lahf
icebp
imul
dec
cmp
loope
mov
xchg
ds
dec
mov
push
repz
cmp
dec
data16
popf
add
xchg
shl
dec
pop
repz
inc
inc
lahf
stos
nop
cs
cli
(bad)
lods
shr
cmp
ffree
out
repnz
jge
mov
ins
in
das
and
iret
fstp
inc
mov
cmp
add
call
lea
sub
or
mov
iret
xlat
lock
in
and
ficom
mov
jecxz
xor
and
mov
jmp
mov
movs
and
std
push
fptan
xchg
jae
ss
clc
lods
push
pop
push
out
test
add
loop
xchg
lea
mov
jnp
or
jmp
cmps
adc
inc
adc
jbe
add
(bad)
or
xor
nop
dec
sub
daa
push
pop
and
pop
mov
push
loop
xor
dec
cs
cmp
sbb
jmp
inc
(bad)
in
pop
push
(bad)
jl
shl
sub
or
xchg
stos
stos
sub
pushf
jbe
std
fcom
pop
sub
(bad)
cmps
xchg
addr16
mov
retf
mov
popa
mov
ret
(bad)
xchg
fcomip
add
dec
enter
push
mov
sbb
add
into
arpl
mov
idiv
pop
sar
gs
clc
cmc
out
or
(bad)
ins
in
or
jmp
lea
idiv
pushf
not
dec
push
inc
fdiv
mov
push
cmc
xchg
rcl
stc
lods
movs
data16
(bad)
repz
shl
loope
mov
inc
(bad)
jp
js
inc
add
pop
call
or
jb
outs
xchg
push
movs
dec
xor
add
scas
rcl
dec
mov
pop
fidivr
movs
(bad)
cmp
xacquire
jnp
push
or
out
cwde
adc
adc
or
fwait
cli
or
push
retf
lods
(bad)
shl
and
inc
arpl
sub
mov
sar
imul
mov
inc
add
cs
adc
xchg
iret
(bad)
shr
cmc
sbb
mov
clc
fnstsw
int
retf
loop
in
pop
xchg
and
sbb
jmp
inc
mov
mov
mov
repnz
pop
call
es
sub
mov
fnstcw
mov
mov
cs
jp
inc
and
or
mov
nop
mov
jmp
xchg
shr
pop
das
jge
or
pop
dec
mov
and
mov
xor
sti
and
popa
mov
in
iret
dec
inc
pusha
sahf
hlt
aas
cmp
jbe
stos
and
out
verr
push
and
adc
push
sbb
loopne
cmovl
jne
jmp
retf
xchg
in
pop
and
fwait
scas
or
xchg
adc
jge
or
popw
inc
pop
jl
mov
xor
fnstcw
jae
enter
inc
dec
adc
neg
lds
popf
sub
add
push
push
jmp
lahf
paddusb
repnz
mov
cld
cli
loop
adc
xor
push
jns
out
mov
mov
nop
or
jp
(bad)
mov
mov
mov
jmp
shl
aam
xor
or
mov
js
mov
test
fisub
aad
xor
jns
or
cmps
ins
lock
sbb
sbb
sub
adc
push
je
sbb
sub
das
cmp
push
dec
mov
rcl
push
test
push
pop
inc
mov
xlat
nop
fs
retf
pop
fsubr
push
inc
loopne
inc
jmp
xchg
xor
sbb
int3
daa
leave
popf
xchg
and
lahf
dec
mov
popa
push
es
mov
mov
or
fisub
adc
aas
daa
fadd
js
mov
push
dec
sub
mov
pop
bnd
cmp
inc
ins
mov
(bad)
mov
outs
btr
add
data16
push
jmp
and
jb
push
leave
push
add
aad
outs
test
mov
mov
pop
mov
jmp
cmp
dec
loope
nop
repz
shl
mov
add
dec
cmc
xor
xor
xchg
lods
jnp
into
dec
sub
or
push
rcl
dec
jno
je
ins
push
jo
cwde
in
bound
inc
push
shl
jo
jmp
xor
shl
outs
popa
loope
push
push
test
xlat
mov
rep
ret
imul
cmp
jae
and
or
xchg
jns
or
mov
pop
stos
aas
cmp
test
jg
jae
push
aad
pushf
pop
adc
cmp
jp
(bad)
push
arpl
xchg
or
div
aad
xchg
cmp
jmp
arpl
xchg
int
fcomp
vmread
mov
cmp
jno
dec
mov
imul
push
fisttp
and
imul
rcl
sub
dec
mov
add
pop
scas
fistp
inc
pop
jnp
sbb
jne
push
retf
addr16
mov
xor
mov
addr16
je
push
and
mov
arpl
and
jb
mov
outs
xchg
fst
xor
xor
xchg
inc
repnz
pop
and
retf
mov
or
add
out
call
in
xchg
imul
add
(bad)
pop
jo
jmp
loope
pop
xchg
adc
dec
mov
(bad)
arpl
sbb
pusha
cmps
in
mov
clc
pop
frstor
xor
stc
(bad)
test
aam
pushf
mov
ss
cwde
sahf
mov
mov
sbb
in
push
je
stos
jle
or
aaa
in
mov
cmp
ds
pop
mov
shl
add
jge
or
sbb
test
add
sbb
test
xchg
fdivr
or
mov
cmp
(bad)
stc
mov
rcr
jb
inc
lds
pop
cs
in
(bad)
pop
(bad)
xchg
xor
es
jge
sub
ss
mov
(bad)
cli
add
aam
xor
adc
mov
pop
stos
loopne
fcomp
outs
lahf
xchg
repz
stos
dec
arpl
jge
xchg
ins
jno
or
test
fs
adc
cmp
mov
lock
and
lds
mov
(bad)
lods
push
mov
dec
in
jb
and
les
loopne
int
lahf
clc
imul
not
sbb
xchg
fisubr
pop
mov
cmp
add
mov
sub
cmps
shl
xchg
mov
xchg
lahf
arpl
cdq
xor
pop
adc
xchg
pmaxsw
clc
iret
lods
(bad)
in
pushf
popf
pop
gs
sahf
(bad)
or
sub
adc
jns
pop
shl
leave
mov
shl
dec
mov
int3
adc
jg
or
pop
push
push
mov
inc
inc
inc
inc
mov
pop
leave
ret
test
out
std
lock
lea
and
xor
addr16
jg
popa
adc
icebp
mov
push
repnz
push
mov
out
popa
movs
adc
inc
mov
jmp
(bad)
call
test
xchg
leave
sbb
jl
mov
push
hlt
aas
inc
mov
fisttp
lahf
sbb
je
or
adc
dec
cmp
sar
xor
cmp
fst
mov
jle
pop
ja
cmp
je
pop
jl
sahf
fisttp
xor
cwde
push
nop
mov
push
add
mov
retf
iret
lods
aam
lods
adc
sbb
sub
loopne
cmp
rol
dec
mov
pop
loope
test
or
and
jecxz
neg
or
lods
and
xor
mov
sub
mov
or
xor
pop
es
cmps
mov
or
or
mov
mov
push
push
jg
push
push
call
test
arpl
neg
jg
adc
movs
cmp
hlt
cmc
push
jae
out
mov
sbb
retf
rcl
rcr
jno
je
dec
out
pop
(bad)
inc
mov
out
jno
push
jo
xor
inc
push
add
inc
stos
(bad)
sub
fsub
jae
add
sbb
pop
stc
loop
push
cmp
mov
pop
adc
mov
mov
and
adc
popa
push
xchg
mov
push
dec
jmp
and
mov
cmp
cmp
jae
or
outs
in
cmp
add
inc
and
push
xor
shl
iret
loopne
outs
mov
mov
push
adc
out
jnp
mul
xor
xor
les
xor
jg
or
mov
scas
xchg
push
nop
scas
test
pop
cwde
icebp
iret
leave
mov
int
adc
or
arpl
jbe
ja
lods
hlt
push
xor
mov
mov
icebp
pop
into
cmovns
test
inc
test
add
dec
(bad)
stos
or
pushf
sbb
test
adc
(bad)
mov
xor
jbe
mov
mov
xor
mov
movs
xchg
stc
sti
cmps
sbb
out
cli
mov
jb
xchg
add
fisub
icebp
stos
sbb
jns
or
or
les
dec
pop
cdq
xor
mov
mov
sbb
mov
push
jp
or
cmp
or
nop
stc
xor
dec
xchg
lahf
push
mov
mov
rcr
pop
xchg
dec
outs
pop
xchg
sub
popf
std
mov
dec
(bad)
leave
push
jno
retf
popf
pusha
jnp
call
inc
dec
cwde
push
dec
leave
jns
and
lock
fdivr
jnp
jns
jbe
xor
cmp
rcr
mov
iret
mov
(bad)
in
fwait
xor
mov
stos
lock
sub
retf
mov
mov
sbb
xlat
sar
ror
jmp
lods
or
in
lods
adc
pop
in
mov
add
out
push
cmp
(bad)
inc
mov
or
int3
into
dec
(bad)
push
sub
shl
mov
push
adc
gs
sbb
ret
inc
call
xor
dec
pop
or
add
stos
rcr
mov
and
enter
mov
pop
mov
shl
shl
sub
xchg
cmps
adc
fnsave
mov
push
jo
pop
jnp
inc
adc
inc
lods
and
mov
pop
xor
inc
movs
(bad)
ror
sbb
imul
std
mov
mov
xchg
mov
in
pop
xor
lods
cmp
jmp
mov
shl
xchg
ds
push
div
stc
sub
lock
jg
in
add
xor
leave
sbb
jo
dec
sbb
mov
sbb
push
xlat
add
sti
pop
mov
or
jl
aam
ds
int
movs
movs
shl
into
sbb
enter
mov
inc
mov
sbb
in
mov
lods
cmps
cmps
test
cdq
and
clc
jne
add
mov
mov
sbb
outs
mov
dec
sub
jmp
add
mov
mov
fsub
sub
lahf
stos
jno
sbb
js
rcr
retf
dec
mov
in
sahf
fst
or
outs
pop
loopne
ror
xor
(bad)
pop
call
movs
js
push
mov
jl
push
gs
in
adc
ficomp
es
sahf
sub
int
xor
mov
popf
jl
iret
inc
jmp
and
dec
mov
lock
or
pop
cli
aaa
loope
and
out
mov
or
loopne
dec
xchg
cmp
xor
cmp
mov
lahf
mov
(bad)
imul
mov
inc
in
aam
fcmovne
pop
xor
mov
aas
lea
into
add
sahf
outs
pop
xor
mov
or
sbb
inc
shl
test
sbb
test
mov
popf
sbb
sbb
push
(bad)
repnz
jecxz
jnp
inc
fcmovb
sbb
pop
mov
jmp
jmp
(bad)
in
mov
popa
xchg
gs
cmp
and
(bad)
sub
sub
(bad)
mov
ins
pop
ror
mov
ins
fisttp
imul
mov
or
pop
rcr
inc
loope
fst
(bad)
retf
lahf
mov
xchg
mov
adc
lea
es
jle
push
test
test
ins
dec
cmps
cld
cmp
loopne
cmp
(bad)
push
inc
add
pop
test
jmp
nop
pop
mov
jno
cmp
cmp
mov
mov
push
adc
cli
xchg
mov
mov
stos
dec
adc
jle
enter
and
retf
(bad)
jnp
push
cmps
jmp
mov
push
or
imul
cmc
add
adc
push
cdq
xchg
repnz
movs
mov
shl
dec
push
and
push
into
lock
sbb
retf
stos
sub
arpl
xor
xor
or
stos
push
mov
fisttp
neg
inc
mov
pop
sbb
xor
pop
dec
ins
outs
sub
push
push
mov
leave
into
cs
test
mov
jle
push
call
ss
sub
or
sar
scas
mov
lock
mov
add
mov
mov
mov
test
inc
test
movs
push
jg
pop
dec
loop
inc
jg
mov
adc
mov
sbb
out
aam
out
pop
push
lea
mov
scas
xchg
jmp
icebp
inc
popf
repnz
retf
ret
cmp
(bad)
mov
test
ins
ret
loope
mov
loopne
mov
mov
push
test
cmc
div
scas
test
mov
push
test
mov
sbb
add
mov
out
in
pop
lods
test
movs
mov
mov
xchg
loope
dec
int
mov
push
sub
(bad)
imul
and
mov
pop
retf
pusha
iret
mov
mov
adc
fnsave
cmps
xchg
bound
lahf
out
fistp
sahf
cmp
pop
retf
jge
jmp
mov
fsubr
shl
add
inc
push
mov
ret
js
idiv
(bad)
mov
push
push
outs
call
outs
push
mov
push
sub
or
retf
dec
inc
shr
xchg
mov
fsubr
dec
ins
cmc
mov
aad
add
ds
inc
mov
mov
pop
pop
clc
test
mov
fcomp
and
cmp
mov
movs
js
bound
push
mov
mov
fild
jne
cmp
int3
mov
movs
xlat
stos
jp
pop
sbb
mov
retf
dec
loope
js
cmp
cld
mov
lea
add
fadd
sub
cmps
dec
jg
pusha
lds
jl
iret
int
loope
int
in
test
and
adc
sbb
xchg
pusha
rol
movs
in
mov
mul
pop
sbb
sub
sar
rcl
sbb
cmp
cmps
in
stc
jg
sub
scas
gs
lods
push
lahf
jge
test
aaa
dec
nop
lods
into
jb
mov
push
fidivr
xor
fcom
jno
mov
je
add
mov
icebp
arpl
push
dec
(bad)
mov
(bad)
sbb
iret
lock
xor
jne
mov
inc
es
repnz
adc
in
mov
ja
in
push
cmps
sub
fcom
push
ficom
adc
add
mov
std
sub
ins
dec
dec
sub
xlat
xor
imul
xchg
ja
out
sbb
stos
cli
in
jns
out
scas
call
div
call
push
and
aad
xchg
xchg
adc
scas
fimul
sbb
and
pusha
fisub
ret
mov
ret
mov
push
mov
sti
outs
mov
add
sbb
and
int
clc
dec
or
sub
inc
mov
test
clc
imul
hlt
jp
(bad)
int3
outs
es
fdiv
ja
in
sub
ret
iret
cdq
pusha
(bad)
jbe
rcr
pushf
popa
adc
jmp
retf
loop
pop
lock
mov
stc
push
pop
xchg
or
aaa
popf
sub
cmp
mov
jecxz
rol
aad
mov
aam
into
or
xchg
arpl
mov
sbb
scas
mov
lahf
mov
jecxz
or
sbb
data16
push
adc
adc
inc
in
gs
xor
bndstx
(bad)
mov
or
aas
or
rol
add
sar
push
xchg
lods
clc
jno
hlt
shr
jp
movs
xchg
push
jl
jle
mov
imul
loop
fwait
jae
in
clc
push
rol
inc
imul
js
and
and
sahf
mov
mov
inc
pop
push
jmp
mov
inc
movs
xor
cmc
(bad)
in
xchg
retf
jecxz
in
rcl
outs
cwde
mov
sar
mov
inc
retf
ror
cmp
mov
jle
lods
mov
out
jmp
(bad)
dec
hlt
cmp
mov
pop
and
inc
jmp
nop
sub
sub
in
lock
lea
mov
xor
out
(bad)
xchg
ins
cmp
aas
popf
inc
sub
xor
push
shr
rcl
xchg
outs
imul
xchg
adc
jo
sbb
mov
je
lock
cld
xchg
in
add
popf
ja
fistp
arpl
mov
sub
mov
or
sbb
sub
(bad)
out
mov
in
iret
inc
mov
fmul
xor
rol
pop
aam
adc
inc
loopne
fcmovnbe
push
(bad)
cmp
js
cwde
std
cwde
dec
mov
mov
push
xchg
sub
mov
cwde
sahf
aam
sbb
mov
mov
push
mov
cmp
into
aam
ret
(bad)
cmps
aam
push
sbb
mov
sbb
cmp
lea
test
cli
push
(bad)
lahf
movs
out
jl
in
push
pop
push
mov
popf
jge
adc
shl
leave
push
data16
mov
push
mov
out
xor
imul
mov
pop
movs
in
mov
push
push
gs
sbb
popa
aam
add
in
out
outs
dec
fs
adc
mov
and
xor
retf
inc
adc
ins
xlat
sbb
stos
cld
dec
call
cld
mov
or
adc
test
fstp
fnstcw
fstp
xor
stos
popa
mov
dec
sbb
mov
xor
out
mov
pop
ret
ja
pop
popf
pushf
push
push
add
in
lods
xchg
jp
(bad)
push
aaa
lds
fwait
test
or
pop
pushf
cmp
jbe
sbb
jmp
cmp
mov
mov
mov
cmp
imul
clc
movs
rcl
mov
sti
pop
dec
cli
sahf
icebp
nop
push
fs
push
bound
out
test
loop
retf
cmc
out
cmp
pop
in
inc
hlt
shl
xacquire
mov
fdivrp
imul
dec
lods
out
leave
in
mov
xchg
push
jg
push
jl
mov
add
mov
sub
pop
mov
adc
sub
aam
mov
add
data16
pop
adc
dec
mov
ret
mov
movs
fdivr
arpl
shl
test
inc
sbb
ds
(bad)
out
sahf
fnstsw
in
(bad)
and
inc
in
les
(bad)
jp
push
pop
(bad)
lods
nop
xchg
outs
call
ins
adc
cmc
icebp
pop
retf
(bad)
push
xchg
xchg
rol
mov
std
sbb
jno
cmp
in
jns
jge
or
js
add
out
retf
jno
mov
or
xor
inc
push
data16
aam
fdivr
(bad)
dec
cmp
push
(bad)
sub
mov
daa
movs
daa
cmp
lock
xor
or
push
push
sti
sub
xor
or
mov
(bad)
mov
xor
dec
neg
icebp
loope
xchg
or
sbb
xor
cwde
dec
and
ja
mov
pop
dec
sbb
dec
inc
and
test
scas
mov
ins
dec
mov
mov
stos
scas
scas
mov
or
jae
dec
inc
int
mov
outs
add
ret
pop
jg
and
in
rol
fsubr
(bad)
gs
sub
cmc
push
shr
fidiv
and
or
aam
lahf
dec
adc
inc
ret
inc
inc
repnz
int3
(bad)
out
adc
pop
jg
jecxz
out
ror
push
outs
ins
pop
sub
pop
stc
inc
out
out
or
or
pop
or
mov
es
in
jl
data16
jmp
jl
xor
pop
loopne
cmp
mov
call
stos
je
adc
cli
pop
mov
outs
jmp
inc
xchg
xor
fst
add
imul
jge
ins
mov
add
aas
hlt
popa
jbe
jecxz
ror
leave
pop
rol
ret
stos
call
outs
jecxz
ret
(bad)
push
arpl
cmps
test
in
cmp
pop
int
ret
adc
xor
retf
test
cmp
dec
inc
loope
or
data16
add
bound
mov
leave
aas
dec
add
(bad)
sub
adc
cmp
pop
mov
and
js
aad
(bad)
cs
mul
cmp
out
cwde
xchg
ja
icebp
cmp
and
outs
std
fmul
dec
xchg
mov
sti
dec
retf
inc
adc
jg
mov
fild
sbb
sub
dec
fs
pop
or
ret
je
int
push
pop
add
lods
and
ja
lods
push
jae
dec
popf
ss
js
dec
imul
and
cli
stc
mov
and
mov
retf
add
std
pusha
cmp
lea
std
test
mov
aam
out
push
mov
xchg
frstor
hlt
xor
sub
mov
mov
cmp
ins
dec
mov
int
jl
jnp
dec
js
mov
push
xor
inc
icebp
pop
or
loopne
rcl
jmp
ins
or
fmul
inc
inc
jno
dec
pusha
xchg
in
mov
fcom
imul
add
push
xor
jmp
jb
test
cmp
fisttp
(bad)
in
ds
sbb
lock
inc
jns
jno
adc
jg
pop
sbb
pushf
popf
stc
test
loop
xchg
jmp
idiv
inc
inc
popf
test
jae
xchg
cdq
lods
out
sub
out
cmp
scas
xchg
pop
push
jge
les
enter
(bad)
mov
addr16
test
xor
push
jmp
fbld
or
mov
jne
test
int3
pop
(bad)
xlat
jmp
adc
mov
stos
imul
xchg
or
or
iret
int
(bad)
or
fs
fstp
inc
dec
rcr
fst
mov
shr
xchg
arpl
mov
in
(bad)
push
movs
push
int
cs
movs
pop
leave
sbb
mov
cmp
stc
jmp
xor
pop
sub
call
add
and
call
mov
inc
or
pop
fwait
or
maxps
ins
mov
push
scas
jl
call
mov
out
cwde
(bad)
call
sbb
lahf
xor
inc
mov
mov
mov
ss
outs
add
call
inc
gs
sbb
(bad)
in
xchg
mov
repnz
jmp
add
add
sbb
xor
test
hlt
(bad)
fs
js
or
(bad)
popf
(bad)
aas
adc
xor
or
ds
push
push
ss
ret
jle
in
cmc
cmp
lock
lds
lods
mov
pop
je
xchg
pop
pop
movs
push
leave
outs
call
sbb
cmp
nop
arpl
adc
mov
test
ins
xchg
cmp
scas
jb
push
ret
test
bound
in
pop
sub
lods
inc
sub
dec
add
sub
push
leave
pop
jecxz
les
in
pop
lods
movaps
mov
stos
jg
push
and
pop
sub
dec
mov
xor
das
imul
call
dec
test
out
push
arpl
jp
daa
clc
ficom
ds
add
int3
xor
push
sub
shl
in
sub
test
adc
xlat
push
mov
jg
xchg
pop
ins
jne
inc
sbb
mov
outs
js
jmp
adc
movs
mov
outs
adc
mov
sub
call
jb
jbe
push
stos
sbb
idiv
je
jb
mov
mov
jns
(bad)
mov
(bad)
loopne
imul
in
daa
xchg
test
adc
mov
into
out
daa
mov
cmps
adc
sahf
cwde
test
aad
cli
xor
add
mov
sub
(bad)
sub
in
arpl
or
mov
pop
adc
inc
mov
popf
mov
mov
cmps
in
adc
or
cmp
mov
aaa
jmp
jno
cmp
aam
adc
ret
mov
lods
ja
ret
sahf
aad
in
sar
cmps
cli
dec
xchg
scas
repz
(bad)
ret
test
xchg
icebp
out
pop
hlt
div
ja
popa
or
cmp
add
nop
mov
cmp
(bad)
fisub
call
or
stos
mov
ja
int3
cwde
and
imul
adc
sbb
arpl
jmp
mov
test
cmp
dec
inc
je
inc
repnz
adc
pop
adc
pushf
fwait
add
int
jns
xchg
sbb
inc
mov
cs
jb
jno
mov
popa
mov
jns
inc
repnz
mov
cmps
or
(bad)
dec
cmp
jb
popa
cmp
mov
jge
xchg
lods
fstp
outs
jnp
xchg
clc
das
arpl
jle
push
lahf
(bad)
xor
or
jmp
mov
add
loopne
pslld
rcl
jle
or
pop
ja
mov
fcomp
je
stos
and
push
dec
or
jae
push
mov
xor
ds
rol
pop
in
cdq
ja
and
adc
add
mov
jne
lods
mov
mov
arpl
sbb
mov
mov
jno
pop
ins
cdq
imul
cdq
inc
jbe
and
rcr
inc
ror
inc
lods
sbb
sbb
inc
adc
or
jecxz
div
(bad)
push
imul
lahf
retfw
loope
xchg
jmp
sbb
aas
jae
pop
xchg
lods
inc
sub
push
ds
f2xm1
cmp
and
scas
jecxz
mov
sub
and
pop
(bad)
rol
mov
out
das
and
aaa
pop
sahf
add
or
mov
imul
idiv
xor
pop
xchg
movs
and
dec
mov
mov
ror
ret
mul
test
add
mov
pop
xor
ds
pop
mov
dec
cwde
or
xchg
sub
ret
cmp
iret
fstp
aam
mov
cmp
sub
cmps
ds
dec
into
xor
or
and
push
xchg
test
jp
sub
addr16
inc
add
in
ins
mov
dec
jnp
and
pop
stos
lods
push
add
jge
xchg
jnp
inc
cmovne
jnp
rcr
pop
or
rcr
sar
push
out
sub
stos
stos
ret
imul
scas
xor
jg
(bad)
jb
mov
xor
or
in
sub
test
add
pop
test
xor
sub
cmp
sub
stos
adc
add
mov
push
enter
mov
jbe
mov
pop
jne
mov
sbb
cli
mov
ins
xchg
enter
xchg
cmp
mov
jl
fdivp
dec
int3
mov
arpl
xchg
adc
add
sub
(bad)
sti
sub
sbb
jb
inc
adc
jmp
sub
adc
cmp
stc
xor
aas
icebp
inc
fisubr
xor
sbb
out
lods
mov
(bad)
push
not
push
or
push
adc
sbb
push
cmp
inc
mov
mov
in
mov
inc
scas
cmp
xor
cmp
mov
leave
add
sub
scas
mov
repnz
push
or
sub
push
pop
inc
pop
jbe
xchg
inc
in
aam
mov
xor
or
dec
mov
lock
out
pop
into
inc
aaa
mul
mov
repz
fstp
or
paddsb
ficom
inc
mov
frstor
mov
inc
sub
aam
sub
mov
icebp
call
inc
adc
scas
cmp
pop
cmps
cdq
mov
retf
dec
repnz
mov
jmp
je
in
pop
pop
cli
and
xor
gs
push
jae
fs
mov
imul
imul
pop
add
into
add
into
mov
cmps
bound
pop
pop
mov
mov
retf
sub
jmp
or
inc
popa
fisttp
aam
fld
bound
sub
mov
mov
pop
or
(bad)
sub
retf
(bad)
push
loop
mov
and
retf
push
inc
jne
pop
or
outs
sub
ret
jmp
(bad)
fisub
jge
imul
scas
rcr
inc
mov
call
or
add
aad
sub
aam
je
hlt
retf
sub
inc
fist
xor
adc
mov
mov
jecxz
mov
jmp
xchg
daa
sub
xchg
cmp
mov
inc
nop
outs
call
dec
jecxz
jb
mov
or
cmps
ret
fnstenv
xchg
jns
add
aad
pop
into
and
inc
loope
pop
lods
outs
in
nop
retf
xchg
ror
aas
adc
sar
sbb
inc
aaa
jmp
or
sbb
std
pusha
imul
in
(bad)
scas
cmp
or
dec
xchg
pop
add
xor
jmp
xor
cs
ds
movs
jle
push
mov
mov
int
push
outs
sahf
push
std
xor
adc
mov
inc
loop
mov
rcl
mov
dec
jnp
leave
sbb
pop
adc
test
mov
loopne
mov
push
jne
movs
xor
inc
fnstenv
into
push
fs
aas
(bad)
xor
adc
(bad)
mov
les
fwait
out
adc
clc
sub
test
lods
lea
icebp
sbb
movs
aas
lock
cld
hlt
xor
inc
xor
sub
rcl
inc
dec
pop
mov
xor
inc
ja
int3
adc
push
mov
dec
jl
dec
and
fstp
ficom
nop
out
mov
cmp
adc
jbe
sub
jmp
adc
mov
in
or
stos
scas
xchg
iret
xchg
mov
mov
popf
pushf
push
outs
fstp
mov
sbb
fsubr
mov
out
mov
test
add
hlt
xchg
test
dec
sbb
(bad)
push
pop
retf
add
inc
sub
or
sub
sahf
call
cli
(bad)
lods
dec
sbb
xor
(bad)
adc
hlt
add
adc
cmc
sbb
dec
inc
leave
cwde
jnp
cmp
inc
dec
push
jno
aas
pop
xor
sahf
bound
push
mov
stos
mov
mov
pop
outs
xor
test
jo
shl
ror
mov
cwde
sub
lock
or
jne
popa
loope
pushf
mov
lahf
test
or
les
adc
call
pusha
sub
push
inc
xor
sbb
jns
mov
daa
aad
(bad)
in
fwait
lock
add
fcmovne
push
jle
adc
push
cmc
jns
pop
jmp
jp
xchg
sub
in
push
imul
ins
aaa
cli
pushf
scas
js
xor
stos
mov
mov
dec
outs
leave
pop
pushf
mov
sub
push
scas
or
push
inc
test
jne
mov
adc
xchg
jbe
xor
enter
fsubr
adc
cmps
in
call
inc
into
jnp
pop
pop
jnp
mov
cwde
cs
mov
or
lods
test
add
cmc
adc
addr16
icebp
or
push
cmp
cmp
lock
repnz
pop
inc
shl
jp
out
push
call
sbb
sbb
jmp
mov
pop
inc
test
cmp
inc
push
icebp
xchg
cld
pop
xchg
and
js
xor
xor
pusha
and
and
imul
stos
jbe
pop
in
pop
(bad)
js
scas
lea
fs
mov
call
fmul
or
cmp
add
sti
bound
cmps
cmp
ss
pop
icebp
test
movs
and
push
push
inc
movs
dec
repnz
mov
jbe
inc
sub
(bad)
loope
cmps
xor
test
xchg
and
sbb
and
push
mov
data16
pop
or
nop
inc
std
in
fld
test
pop
xchg
addr16
jno
int3
jle
jp
adc
or
xchg
sbb
in
jno
mov
not
sub
cmps
retf
inc
cmp
and
xor
data16
int3
sub
sti
xchg
mov
cdq
cmps
mov
arpl
add
stc
popa
das
or
nop
mov
cwde
dec
mov
in
and
shl
cmp
in
cmc
jno
sub
imul
popa
retf
inc
sahf
mov
or
bound
and
fdiv
adc
pop
repz
or
mov
push
adc
adc
movs
pop
cmp
mov
xor
fs
jno
sub
int3
icebp
fbld
mov
jb
dec
or
and
cmps
pop
loop
int
adc
mov
xchg
in
push
xchg
mov
adc
inc
leave
das
sub
outs
repnz
push
mov
jne
(bad)
stc
add
ja
pop
inc
ja
in
jmp
ins
push
repnz
jg
sub
cs
mov
fwait
ret
and
pushf
jmp
lds
xchg
iret
mov
jp
hlt
or
in
sub
add
test
(bad)
xor
mov
mov
mov
jp
pushf
movs
ins
out
jns
and
(bad)
xchg
mov
fld
fsubr
movs
pop
jae
ror
cdq
loope
mov
jns
add
adc
test
mov
gs
(bad)
mov
push
xor
cwde
stc
jmp
jp
sub
mov
or
popa
scas
aaa
shr
pop
sbb
sbb
adc
xchg
push
and
inc
sti
(bad)
dec
fisubr
shr
sub
js
sub
push
loope
jb
sbb
popa
inc
cmp
enter
hlt
int
imul
adc
jo
pop
jbe
xchg
lds
xor
ja
sub
lods
sub
pusha
dec
fistp
sahf
mov
cmp
out
jmp
out
pop
ins
add
sbb
adc
out
enter
pushf
pop
test
jns
pop
loope
xlat
mov
sub
sar
sar
jmp
imul
mov
int3
push
popf
call
lds
xchg
inc
std
in
retf
loope
jp
add
mov
cmps
out
push
inc
fidiv
js
pop
sub
fist
sbb
fcom
idiv
imul
sbb
pop
lds
dec
pop
jecxz
or
mov
adc
mov
pop
rcr
gs
fsub
jb
std
mov
not
cmp
ret
shl
push
dec
push
(bad)
ss
pop
dec
or
(bad)
ss
sbb
icebp
test
jmp
cmp
fucom
aaa
arpl
inc
add
icebp
mov
(bad)
leave
xor
es
inc
ret
mov
add
push
adc
pop
cdq
mov
dec
pavgw
or
imul
es
test
and
imul
ss
or
fwait
cmps
adc
and
scas
or
push
stos
mov
mov
sbb
test
(bad)
cmp
enter
push
add
je
jns
daa
icebp
cwde
pop
mov
outs
ror
ins
sbb
and
xchg
test
pop
mov
test
inc
and
es
sbb
lea
dec
add
xchg
inc
int3
mov
shr
and
pop
cmp
jp
out
mov
mov
adc
ror
sub
mov
test
mov
xchg
mov
ret
dec
xlat
mov
xchg
jne
sub
cdq
inc
jb
and
(bad)
fidiv
sub
ret
(bad)
sti
and
and
jnp
fiadd
out
mov
add
mov
dec
mov
cmovbe
mov
repz
addr16
add
outs
shl
nop
sbb
jae
jg
es
loopne
repz
mov
movs
dec
addr16
clc
sub
cwde
lock
sbb
daa
ds
dec
stos
std
enter
ins
call
enter
adc
popa
outs
dec
cmps
xchg
fild
and
or
cmps
sub
or
adc
aas
mov
ss
push
mov
popf
repnz
dec
sti
or
jb
(bad)
mov
pop
aad
xchg
iret
sbb
and
add
mov
scas
movs
ret
std
test
or
lea
ins
inc
inc
fwait
adc
adc
data16
pop
cdq
push
and
inc
scas
mov
inc
shl
(bad)
pop
cwde
sahf
cmc
mov
in
cwde
xchg
dec
and
add
in
sbb
in
mov
jbe
xchg
jmp
shl
or
push
inc
clc
pusha
imul
xchg
cmp
(bad)
fcomp
mov
or
fnstenv
test
and
jae
retf
dec
jge
sub
arpl
shl
xchg
cmp
das
adc
push
pusha
add
cdq
push
jge
int3
or
(bad)
fld
or
movs
pop
inc
push
fs
(bad)
jns
in
inc
mov
jmp
fsubr
fild
fst
xor
test
fisub
push
loope
xchg
dec
xor
ret
mov
sub
clc
imul
mov
inc
sbb
test
sub
mov
cmp
std
sbb
sub
mov
aad
pop
call
imul
test
mov
push
add
jb
cmp
sbb
cmc
fsubrp
or
jmp
sbb
adc
iret
in
loope
push
pop
out
retf
hlt
fiadd
(bad)
aaa
shl
aad
xchg
sbb
cdq
loope
cmc
and
(bad)
mov
inc
push
mov
ja
shl
xlat
mov
mov
sbb
push
jge
mov
sub
mov
mov
xchg
mov
xchg
out
mov
scas
aam
stc
push
leave
lods
mov
xchg
addr16
ins
push
mov
not
mov
push
inc
inc
pop
add
inc
jo
push
repz
das
cs
test
mov
inc
dec
and
mov
push
out
hlt
pop
mov
mov
mov
jge
sti
stos
arpl
add
mov
enter
ds
pop
and
in
dec
push
cmp
imul
jno
pop
and
inc
cmc
cs
sbb
pop
xor
arpl
pop
div
bound
adc
xor
out
idiv
push
add
stc
push
mov
jg
(bad)
call
fstp
sub
xchg
cmp
mov
lahf
pop
mov
push
mov
xchg
fadd
dec
jns
ret
clc
sbb
das
rol
xor
out
add
jmp
sbb
sti
jbe
and
mov
in
inc
adc
push
adc
mov
icebp
mov
retf
mov
mov
mov
and
cli
gs
jb
and
inc
add
dec
dec
aad
mov
fnsave
mov
lock
cmp
mov
push
mov
cld
jge
in
cmp
pop
je
mov
inc
mov
jge
or
jp
pop
xchg
iret
sub
jle
sti
pop
fmul
cmc
neg
lods
into
(bad)
xor
mov
adc
sub
mov
lea
mov
bound
test
int3
adc
mov
mov
fsub
retf
pop
cmp
sub
cmps
imul
(bad)
cwde
ins
lock
adc
adc
out
pop
dec
mov
mov
and
shl
cmp
aad
test
nop
xchg
cli
daa
xchg
fwait
aad
dec
push
out
mov
cs
xchg
aad
(bad)
xchg
movs
cdq
pop
shr
dec
jg
das
or
mov
loope
xor
in
not
sbb
ret
pop
inc
add
pop
cs
or
push
mov
addr16
xchg
cmp
sbb
xchg
dec
jp
dec
jnp
push
retf
jge
jp
cmp
std
sbb
lea
sub
dec
ficomp
fnsave
sar
test
mov
push
pop
mov
fmulp
ja
adc
std
push
retf
mov
jl
push
jo
(bad)
xor
push
mov
test
outs
pop
push
adc
movs
xchg
lahf
push
mov
push
cmp
inc
and
cmc
cmp
adc
in
js
cmp
adc
mov
pop
push
xchg
sbb
dec
inc
mulps
xor
sbb
lea
adc
jae
aam
jg
push
dec
jg
push
pop
mov
jmp
pop
iret
adc
fsub
mov
enter
lock
xchg
es
pushf
mov
imul
mov
push
sbb
mov
or
xchg
inc
mov
jb
push
mov
push
lods
fstp
jmp
push
xor
jno
jl
jge
lods
dec
in
cmps
jb
leave
or
fiadd
loope
cmp
call
outs
(bad)
aam
cdq
dec
jp
movntq
(bad)
movs
or
dec
out
add
jl
mov
pop
repnz
mov
pop
adc
loop
sub
mov
test
leave
adc
xchg
mov
mov
mov
ret
imul
jbe
sbb
mov
fdivrp
push
cmps
(bad)
or
sub
and
loopne
rol
add
or
mov
add
sub
pop
(bad)
mov
mov
sub
imul
cmp
fild
adc
inc
out
rcl
fcomp
stos
out
inc
mov
ret
test
jge
pop
pop
add
add
hlt
pop
mov
xchg
aaa
pop
push
outs
out
sbb
push
inc
mov
push
hlt
xchg
push
xor
xlat
jmp
aas
inc
ror
or
sti
clc
repz
fadd
ins
or
in
pop
jmp
add
cmc
in
mov
mov
enter
xchg
push
push
call
mov
(bad)
xchg
arpl
ret
das
inc
mov
lock
loopne
xor
jbe
dec
and
dec
movs
or
jno
xchg
and
cli
sti
add
(bad)
cmp
pop
xchg
pop
dec
fdivr
xor
pop
mov
cs
stc
test
leave
call
sub
add
(bad)
jmp
jnp
add
sub
inc
shr
pop
pop
scas
inc
iret
sub
sub
sahf
out
int3
idiv
lea
addr16
dec
or
cmp
xchg
mov
fdivr
lahf
xor
fsubr
cwde
cmps
pop
inc
xor
retf
xor
lds
jl
jmp
and
and
call
cmc
inc
or
add
imul
sub
repnz
add
aas
das
jmp
or
das
aaa
push
mov
adc
popf
push
fld
inc
jecxz
aaa
jb
xchg
test
add
ja
dec
rcl
pextrw
adc
adc
xlat
push
and
nop
(bad)
leave
into
jmp
(bad)
jmp
std
pop
xor
pop
and
sub
jmp
lea
enter
popa
xchg
shr
imul
outs
mov
ins
jmp
or
stc
and
mov
fldenv
push
aas
mov
xor
retf
xlat
push
mov
outs
xor
xchg
sub
jmp
fwait
push
cdq
lods
rcl
push
dec
daa
sub
or
add
ret
(bad)
into
cdq
test
mov
dec
je
lock
ja
add
addr16
loopne
xor
test
mov
mov
test
ret
shl
cmps
(bad)
pusha
inc
rol
ja
ins
imul
rcl
sbb
jae
dec
mov
fbstp
push
or
fcom
in
cmp
sub
sub
call
cmp
(bad)
pop
dec
xchg
adc
(bad)
loopne
cmps
stc
pop
in
ret
movs
cmc
pop
jge
mov
adc
fwait
test
xor
ret
mov
push
jnp
mov
(bad)
shr
es
icebp
mov
inc
ja
ret
scas
sbb
mov
lds
out
retf
and
or
lock
xchg
call
mov
popf
mov
hlt
sbb
cmp
xlat
inc
int
in
in
mov
data16
cmc
mov
cld
rcr
xor
enter
jmp
inc
adc
fwait
jle
adc
scas
mov
xlat
sub
mov
adc
push
scas
sub
xor
push
inc
jle
add
xchg
mov
sub
cmp
mov
loop
pop
(bad)
lods
pop
mov
push
inc
sub
aaa
in
add
cmc
je
(bad)
pop
out
dec
xchg
or
retf
loope
das
mov
icebp
sub
push
out
in
jb
or
mov
cmp
mov
mov
and
movs
cmp
push
xchg
clc
sbb
or
test
xchg
aam
scas
mov
ja
int3
loopne
mov
mov
and
lods
dec
dec
fwait
imul
pop
pop
cmc
xchg
xchg
lds
imul
imul
jbe
(bad)
cmps
adc
fistp
inc
or
push
sub
add
aad
inc
jbe
data16
dec
fcom
push
pop
adc
lahf
mov
or
cld
push
dec
jo
cmp
dec
sub
sub
into
cdq
sub
fwait
or
pop
jp
mov
aad
push
loopne
add
sbb
inc
gs
sub
dec
out
and
mov
xchg
movs
test
(bad)
scas
ds
(bad)
cmp
push
mov
cwde
xor
fidivr
(bad)
sti
ret
rol
add
inc
cwde
xor
and
outs
push
or
inc
jno
mov
mov
xchg
(bad)
in
inc
xor
or
loop
(bad)
or
lods
call
rcr
sbb
gs
scas
or
adc
pushf
(bad)
aad
addr16
fs
xor
cwde
mov
(bad)
add
mov
add
in
les
inc
retf
int
pusha
mov
adc
cdq
nop
std
hlt
jbe
xchg
xor
into
pop
pop
nop
(bad)
scas
xchg
ret
into
jo
jne
add
jns
xchg
sar
mov
xchg
rcl
cmp
icebp
stos
test
ficomp
mov
or
call
mov
pop
cmp
ins
aam
jne
call
dec
cmp
xor
setnp
sahf
int
jbe
loop
cmp
jecxz
mov
cld
pop
mov
push
fsub
stos
out
xor
and
dec
mov
cwde
(bad)
mov
(bad)
imul
ds
and
popa
enter
jnp
and
out
fimul
jle
mov
or
dec
mov
adc
popa
loopne
imul
cmp
fsubr
pop
mov
inc
aaa
inc
xor
fs
pop
cwde
lea
inc
xchg
shl
cwde
jae
popa
xchg
shl
(bad)
idiv
pop
pop
jno
ret
lods
bound
(bad)
stos
xchg
or
add
add
push
and
xor
mov
mov
stc
or
lahf
popf
hlt
call
lods
test
out
stc
xchg
jne
stos
pop
jmp
sbb
jmp
jmp
xor
cmp
mov
fild
popf
push
inc
mov
or
je
xor
adc
int3
fcmovne
inc
sub
jmp
repnz
xlat
jnp
xlat
adc
jge
outs
dec
(bad)
mov
xchg
cmp
int3
std
scas
or
xchg
jg
in
xchg
push
xchg
dec
push
movs
leave
ffreep
ret
out
inc
mov
enter
daa
push
mov
push
push
xchg
and
daa
xchg
lods
jmp
movs
and
mov
psubw
adc
dec
and
mov
inc
test
mov
jmp
mov
mov
js
in
push
push
mov
adc
inc
(bad)
repz
shl
and
test
(bad)
xor
add
repnz
add
mov
mov
out
imul
inc
mov
xor
pushf
and
hlt
and
pop
ins
iret
and
mov
push
adc
adc
push
div
ja
xchg
pop
jo
fdivr
imul
call
pop
lock
call
push
and
pop
out
dec
xchg
pushf
or
mov
add
push
sub
stos
push
pop
hlt
aas
xor
out
mov
repz
call
cmps
mov
addr16
jns
shl
dec
jbe
xor
das
data16
outs
adc
pusha
repnz
pop
in
and
test
xchg
in
dec
dec
pusha
out
xlat
fld
or
daa
add
adc
(bad)
ins
fs
inc
push
jg
sub
push
push
in
adc
fcmovbe
adc
out
lods
push
cmp
push
jl
rcl
pop
mov
ins
sbb
scas
repz
clc
rol
push
push
xor
cmp
jmp
push
mov
jnp
jb
std
fisttp
adc
xchg
pop
or
mov
adc
adc
ss
mov
mov
add
das
ret
das
mov
hlt
pop
pop
pop
mov
push
inc
fnstcw
aad
sub
or
xchg
dec
outs
push
dec
push
(bad)
cmp
mov
cwde
fs
fs
adc
aaa
mov
aaa
xchg
mov
pop
jmp
(bad)
lea
cmp
ret
mov
js
pop
popf
push
cmc
shl
int
lock
(bad)
bnd
jbe
and
mov
(bad)
push
xor
sbb
or
ins
mov
jmp
xchg
fnstsw
mov
out
sahf
fisubr
push
aad
popf
jecxz
inc
push
add
push
cmovno
push
sbb
sub
retf
sbb
dec
jmp
push
mov
shr
pusha
sbb
pop
fstp
loopne
fidivr
jne
adc
and
dec
add
or
popf
xor
ror
dec
fidivr
gs
test
ds
add
push
imul
sub
push
cmp
jno
in
pop
pop
test
ror
jae
cmp
mov
adc
in
ret
dec
bound
test
or
dec
mov
out
jo
not
es
add
cmps
loop
pop
push
stc
bnd
push
fdiv
mov
rcr
mov
out
mov
ror
jp
xchg
pop
push
jo
stos
xor
xor
jmp
test
icebp
and
or
pushf
stc
mov
(bad)
div
or
pushf
sub
dec
call
lock
adc
loop
adc
pop
out
mov
bound
xor
arpl
or
les
test
or
das
add
sbb
test
aam
xor
sbb
icebp
push
fwait
mov
sbb
mov
adc
cld
pop
pop
jno
test
gs
pop
sahf
and
(bad)
fmul
aam
(bad)
push
add
jns
push
adc
rol
cmp
or
dec
out
add
jge
scas
add
push
jecxz
cli
fmul
scas
xchg
test
pop
sti
ins
dec
cld
into
xchg
mov
(bad)
pop
out
ins
mov
lods
out
inc
jne
mov
inc
dec
sub
add
adc
imul
dec
jge
jae
pop
fs
or
fiadd
push
inc
add
inc
push
hlt
xchg
sub
outs
cmp
std
cli
mov
cmp
jp
(bad)
mov
test
loopne
adc
pop
icebp
stos
imul
add
push
(bad)
and
lea
dec
in
inc
(bad)
loope
sub
sbb
leave
popf
and
adc
adc
cmp
outs
gs
or
retf
ins
dec
push
ror
push
sub
movs
cmp
pop
push
inc
sbb
shr
push
inc
data16
pusha
adc
daa
aas
pop
pop
mov
imul
xchg
jb
dec
mov
sub
shl
cmp
dec
sbb
leave
push
pop
int3
mov
mov
push
rcr
jecxz
test
pop
outs
shl
xor
inc
shl
movs
ins
ss
or
or
lock
jmp
sahf
fdivr
xlat
adc
cli
outs
jnp
push
pop
fsub
call
pop
sbb
retf
in
call
mov
das
inc
push
cmp
mov
add
loope
ins
loop
in
retf
stos
sub
or
push
mov
outs
test
ret
add
(bad)
lods
xchg
mov
(bad)
pusha
push
dec
dec
push
stc
add
icebp
popf
mov
fist
sbb
int
pop
fs
jns
pop
pop
out
dec
(bad)
mov
xchg
scas
push
out
add
es
jns
in
leave
mov
out
inc
ds
sub
add
mov
sub
cdq
ror
mov
cmps
pop
inc
push
mov
sub
jg
jno
popf
iret
add
mov
pusha
mov
fs
fsubr
jmp
aas
cmp
xor
dec
mov
popa
push
push
dec
lahf
jno
outs
jecxz
xchg
dec
icebp
ficom
sub
dec
sub
jae
xchg
mov
pop
xchg
mov
pop
jns
pop
leave
sbb
cmps
add
mov
add
(bad)
lock
int
pop
and
xor
cmp
int3
sub
pop
dec
fst
push
repz
jae
sbb
mov
movs
fdiv
sbb
and
fcomp
xchg
neg
jo
fdiv
test
enter
inc
dec
push
scas
mov
retf
add
pop
xor
dec
imul
inc
mov
sub
js
xor
jbe
std
movs
cdq
mov
in
loopne
dec
xchg
inc
cld
fld
sbb
arpl
ins
cmp
out
mov
in
and
xchg
rcr
movs
sbb
(bad)
and
(bad)
mov
call
ror
dec
pushf
fistp
inc
and
inc
ret
xlat
fnsave
mov
sbb
and
cmps
int3
adc
mov
enter
lock
scas
mov
fdiv
xchg
push
in
xor
ror
xor
test
leave
(bad)
popa
mov
pop
sbb
xchg
or
mov
test
add
arpl
jmp
mov
jo
ins
adc
call
pop
mov
xchg
outs
xchg
loop
xlat
in
sbb
xor
lds
sub
mov
mov
cmp
lsl
(bad)
or
sub
repnz
stos
push
xchg
xchg
adc
popa
add
ss
and
lds
imul
ss
add
add
stc
ins
(bad)
gs
imul
and
adc
and
xor
cs
pop
lock
or
mov
and
dec
mov
xchg
aad
cli
pusha
fadd
or
mov
(bad)
(bad)
and
xor
sar
sub
ror
push
mov
outs
iret
ins
add
and
jl
push
shl
or
or
imul
mov
mov
xlat
cmp
or
fcom
sbb
jnp
jg
in
xchg
push
scas
xchg
inc
add
bound
cmp
fs
mov
fwait
xor
adc
mov
rcl
adc
sub
fcomp
movs
jno
pop
in
jle
retf
dec
repnz
lods
aad
xor
dec
outs
mov
movs
adc
push
loope
pop
and
or
call
out
jno
test
lds
xchg
push
push
and
cmps
jecxz
sub
mov
dec
movs
mov
retf
cmp
mov
outs
sub
cs
adc
dec
fldcw
mov
cmp
ja
pushf
adc
jno
ins
sbb
mov
iret
retf
push
push
ds
pop
loope
fldcw
movs
aad
push
and
rcl
push
xor
gs
fild
mov
nop
repz
sbb
pop
shl
cmp
ins
cmc
ss
inc
mov
jbe
lahf
int3
popf
stos
inc
ins
ss
jbe
jnp
test
jl
pop
imul
fimul
add
add
cmp
sub
inc
cmp
or
mov
leave
scas
mov
sbb
ret
lods
(bad)
sbb
sti
std
int
mov
and
fsub
inc
add
adc
sbb
aaa
test
jmp
sbb
leave
mov
(bad)
enter
gs
shr
adc
adc
out
stc
mov
adc
mov
mov
fist
jle
dec
adc
clc
dec
pop
shr
pop
ss
xchg
inc
adc
push
xlat
dec
sub
xchg
cld
movs
popa
das
add
sbb
repnz
aad
push
(bad)
cdq
adc
pop
sbb
add
ds
push
clc
sbb
loop
inc
mov
xchg
push
lods
mov
sub
xor
mov
jmp
pop
or
push
xor
mov
les
mov
jl
inc
rol
rcr
xor
shr
inc
cmc
lahf
jle
or
fmul
jl
cmc
cmps
mov
das
inc
pause
cmp
stc
imul
or
sti
jg
sbb
mov
lock
fbstp
mov
or
ror
push
xor
call
xchg
xchg
mov
mov
pushf
pop
jae
jbe
jl
adc
dec
jp
jo
popa
mov
pop
mov
and
mov
add
cmps
or
lods
call
mov
inc
inc
or
je
and
mov
fcomp
sub
jae
lahf
rol
mov
mov
push
xchg
and
xchg
inc
nop
(bad)
call
imul
cmp
cmovl
in
inc
mov
and
xlat
cmc
(bad)
or
loop
xchg
jb
lds
call
mov
test
or
dec
push
call
pop
(bad)
mov
test
icebp
sub
call
mov
mov
dec
data16
push
mov
daa
sub
jle
lahf
mov
xchg
imul
xchg
cmp
xchg
jnp
pop
add
pop
rol
xchg
dec
adc
dec
or
cmp
push
cmp
and
ins
push
sbb
lock
jp
aas
push
call
dec
mov
or
dec
cmps
arpl
xlat
outs
pop
imul
adc
sbb
and
push
pop
popf
ror
loop
mov
add
jmp
scas
ror
daa
push
mov
or
mov
test
xchg
(bad)
int
ins
push
jmp
scas
mov
dec
sbb
aad
inc
xchg
int3
mov
(bad)
pop
xchg
inc
ret
push
mov
add
int3
xchg
jns
call
test
retf
into
daa
push
jae
push
mov
ret
jp
mov
mov
push
sub
lea
sbb
jecxz
mov
pop
shl
mov
cmp
leave
pusha
imul
add
mov
lahf
stos
cmp
call
add
sub
cmp
pusha
xchg
mov
xor
dec
adc
(bad)
push
jl
xor
ret
inc
fs
retf
and
cmc
mov
mov
mov
or
xor
repz
xchg
sbb
test
mov
imul
pop
bound
gs
push
inc
push
inc
dec
jecxz
xchg
into
jb
pop
push
inc
bndldx
and
daa
sub
dec
inc
xchg
pop
adc
mov
inc
addr16
leave
hlt
or
xor
rol
jne
cwde
sbb
cs
xchg
adc
outs
pop
jnp
jl
idiv
(bad)
retf
jge
sub
out
xor
lods
mov
mov
lock
pop
xchg
jns
sti
imul
into
or
mov
pop
inc
nop
and
dec
rcr
into
jne
xor
(bad)
ds
inc
jmp
mov
xchg
mov
pop
push
loopne
cmp
sub
pop
inc
xor
out
mov
push
mov
(bad)
xlat
push
push
ret
jnp
sub
mov
in
call
cmc
inc
shr
ja
or
aam
stc
add
xor
cli
std
sub
shl
sar
cmp
mov
arpl
cmp
and
pop
xchg
cs
iret
repnz
inc
or
aam
add
xchg
fs
fild
xchg
rcr
mov
(bad)
push
xor
adc
aaa
inc
push
xor
xchg
mov
mov
mov
in
mov
into
dec
arpl
int3
addr16
ja
shl
inc
jno
push
xor
cwde
(bad)
outs
outs
pop
test
lea
or
dec
aam
sbb
ret
shl
data16
out
dec
fwait
arpl
js
(bad)
and
push
fstp
mov
or
and
pop
mov
lds
add
jmp
mov
rcl
mov
jne
push
out
push
mov
ficom
(bad)
mov
lock
mov
aad
mov
lods
cmp
jno
push
fmul
in
jnp
in
jge
inc
xor
mov
and
js
jmp
dec
(bad)
scas
aad
lods
(bad)
enter
in
or
jnp
jae
inc
xor
xchg
cmp
ret
mov
outs
in
test
lock
mov
iret
test
xor
lahf
mov
push
jl
add
sub
jnp
clc
sub
cmps
sbb
cmp
test
add
(bad)
sbb
dec
xor
aam
and
add
sti
xor
xchg
xor
xor
ret
out
push
arpl
adc
test
popf
mov
popa
inc
ret
mov
cmps
pushaw
sub
shl
adc
cmp
sub
sub
add
add
ss
mov
cwde
sti
inc
push
or
ret
mov
xchg
mov
aaa
pop
imul
jl
pop
stos
xchg
fwait
mov
jne
dec
mov
sub
xchg
test
adc
jns
out
push
rcr
or
sub
mov
(bad)
jnp
ret
loopne
ja
push
dec
pop
aaa
mov
test
jg
jmp
scas
or
pop
nop
loope
add
push
mov
mul
test
mov
mov
stos
cmp
aas
cmp
inc
arpl
jl
sub
mov
sub
jl
jbe
outs
add
les
ins
movs
jg
and
call
sub
sti
pop
xchg
fisubr
push
call
cs
or
xchg
fidivr
sar
loopne
inc
push
push
fnsave
sbb
arpl
aam
(bad)
cmp
mov
bound
loopne
sahf
add
aad
mov
aam
out
adc
inc
jns
mov
mov
ret
test
sbb
xor
add
mov
sub
mov
and
sub
or
(bad)
cmp
sar
int3
outs
pop
pop
lods
pop
mov
outs
or
cld
pop
dec
out
mov
cld
arpl
sub
add
adc
mov
push
push
ins
ficom
out
sbb
imul
cmp
xor
stos
mov
dec
std
ja
fadd
dec
or
fiadd
cmp
or
xchg
mov
imul
jp
pop
cmp
push
and
and
pop
popf
xchg
dec
(bad)
cmp
ins
(bad)
adc
(bad)
xchg
in
jmp
fldenv
leave
add
stos
push
push
call
fcom
mov
jb
iret
cmp
push
mov
mov
dec
jle
push
jg
rol
mov
and
nop
sahf
test
call
push
push
jmp
rcr
cmp
pop
add
sti
dec
and
ret
bound
inc
xchg
mov
cwde
mov
imul
test
aad
jge
xor
in
lea
sti
iret
stos
mov
sbb
pop
scas
mov
ja
aad
jl
xchg
or
idiv
call
jmp
fs
xchg
movs
pop
and
and
repnz
(bad)
mul
(bad)
pop
mov
xor
jbe
lds
push
xor
gs
or
(bad)
sub
test
xchg
cdq
out
movs
out
popa
jo
sbb
add
int3
retf
adc
mov
int
addr16
idiv
ja
jecxz
imul
inc
pop
pop
(bad)
stc
and
cmp
nop
mov
hlt
jecxz
out
add
ss
(bad)
jno
ja
mov
push
(bad)
xchg
or
daa
mov
mov
mov
push
in
leave
div
lds
mov
shl
sbb
or
cmps
pop
cmp
sti
lahf
test
outs
loopne
neg
sub
and
sub
push
test
sbb
ret
push
int
mov
jbe
cmps
jg
retf
push
dec
adc
mov
jnp
xor
jmp
cmp
popf
jmp
xchg
jb
aam
fnstenv
cld
call
push
and
nop
enter
dec
sbb
popa
aad
inc
jae
imul
fmul
jb
cmp
mov
xchg
cli
inc
out
mov
sub
call
aaa
cmp
aaa
int3
jmp
nop
mov
and
adc
ret
push
cmp
aas
or
jns
cmp
xor
sub
ins
pop
lea
dec
xor
or
femms
js
inc
mov
adc
loop
outs
das
call
push
sbb
movs
pop
add
mov
icebp
cmp
(bad)
xchg
dec
push
inc
sahf
repz
push
dec
sbb
sub
mov
mov
jmp
jecxz
push
cli
fdiv
push
or
imul
xor
jl
mov
addr16
xor
out
xchg
jo
fcom
pop
cs
inc
retf
or
xchg
pop
(bad)
stos
xchg
ret
pop
mov
adc
out
mov
jle
add
and
sbb
mov
cmp
ins
add
loopne
fisubr
mov
adc
lods
sti
or
nop
push
arpl
jno
push
sbb
or
cmp
fnstenv
mov
mov
xchg
outs
and
nop
push
in
repnz
das
pop
xchg
dec
pmaddwd
fiadd
push
dec
sbb
loope
xchg
pop
js
adc
mov
outs
xchg
push
jecxz
je
int
dec
add
adc
cmp
pop
fcomp
jg
inc
or
adc
rcr
enter
mov
cmps
addr16
adc
xchg
sbb
mov
mov
pop
scas
push
jno
int
add
or
mov
mov
jecxz
rol
(bad)
sub
inc
bound
js
mov
add
mov
lock
pop
loop
xchg
add
out
sub
pop
aaa
repnz
nop
mov
(bad)
hlt
sub
inc
nop
movs
add
enter
or
xlat
movs
pop
test
cmc
mov
jecxz
cmp
and
cs
xchg
add
in
sub
sub
cmp
inc
test
les
jge
push
sahf
sbb
mov
or
adc
inc
cmp
jg
(bad)
aad
add
(bad)
pop
add
pop
and
adc
pop
(bad)
sub
call
add
mov
outs
out
pop
rol
jmp
sub
imul
or
inc
test
(bad)
mov
fcos
jno
xor
jno
enter
dec
dec
(bad)
jnp
aas
dec
movs
pop
pop
les
or
loopne
pop
xor
jo
or
add
xchg
lods
repz
inc
mov
lock
jmp
sbb
sahf
cmp
cmp
cmp
cdq
popf
sbb
push
xor
xor
mov
adc
dec
push
jae
jp
adc
cs
fwait
hlt
xor
push
loope
xchg
mov
push
sub
jae
stos
outs
push
stc
push
(bad)
dec
cmps
iret
xor
loop
push
fs
inc
add
or
dec
cld
xchg
cmp
not
adc
sbb
jb
inc
and
imul
fisubr
imul
push
fst
mov
add
adc
retf
xchg
cs
sub
sub
retf
jo
add
adc
push
popa
lds
daa
mov
xchg
popa
and
adc
shl
cmps
test
sar
(bad)
bnd
adc
pop
mov
sub
push
jl
xchg
push
(bad)
loop
imul
mov
shl
retf
test
cmp
outs
aam
pop
mov
je
add
push
xchg
mov
jmp
outs
pop
adc
adc
push
mov
mov
mov
pop
jmp
dec
jecxz
push
aaa
mov
jmp
in
pop
pop
sbb
(bad)
mov
cmp
cmp
repz
repnz
xchg
jae
movs
int3
push
mov
pop
push
aad
add
mov
xor
or
cwde
cmp
cs
mov
xor
jbe
lods
sub
cli
scas
lods
cmp
push
dec
mov
enter
repz
cmp
call
popf
lods
(bad)
mov
xor
adc
movs
xchg
repnz
pop
inc
mov
fisttp
mov
push
mov
xchg
cwde
dec
arpl
sti
jae
and
sub
mov
out
rcl
loopne
scas
in
adc
push
jnp
push
shl
movs
sub
retf
dec
hlt
inc
adc
dec
in
std
jne
push
inc
pop
push
xor
inc
fld
jg
cmp
mov
mov
ins
ss
icebp
mov
jno
sar
shl
rcr
mov
mov
loope
test
(bad)
xor
inc
jp
mov
loope
repz
jmp
mov
clc
dec
xor
xchg
dec
fwait
cmc
jne
and
mov
mov
jmp
jae
in
inc
aaa
jns
sbb
call
adc
loope
adc
pop
xor
or
push
pushf
mov
fldcw
retf
xor
mov
mov
aad
lds
mov
retf
ins
inc
adc
jp
cwde
adc
scas
inc
movhps
mov
jg
mov
aaa
ret
rcr
push
jg
adc
xor
jl
pop
mov
in
cmp
push
mov
icebp
xchg
es
outs
dec
inc
sub
addr16
adc
(bad)
xchg
scas
nop
les
popa
cdq
mov
or
xchg
or
in
dec
mov
mov
lock
cmp
or
in
aad
ins
rcl
aad
sbb
add
jns
cmps
(bad)
adc
dec
lods
mov
xor
mov
sub
sub
xor
and
pusha
or
scas
jo
lods
not
out
inc
in
ret
ins
cmp
sub
scas
ss
adc
and
bnd
cs
jnp
mov
and
retf
cld
jle
les
and
int
imul
call
dec
and
cmc
pop
mov
xor
mul
test
outs
fwait
pcmpgtd
xchg
adc
imul
xor
jbe
add
shl
(bad)
and
and
cld
in
sbb
inc
xchg
(bad)
mov
ins
sub
cmp
xchg
cmp
fild
inc
sar
push
cmps
fwait
inc
mov
dec
dec
rcr
push
xor
iret
dec
push
add
xchg
jg
mov
adc
loop
iret
mov
mov
xor
shr
or
int
sub
inc
xchg
sub
out
mov
out
or
cmps
mov
jle
inc
adc
mov
or
push
mov
xchg
test
jle
jge
fmul
pop
mov
push
outs
pop
sbb
pusha
jmp
mov
mov
test
push
loope
dec
jmp
xlat
repz
mov
cld
ret
retf
lds
in
cmp
repz
mov
mov
mov
hlt
lahf
dec
scas
cmp
ret
out
mov
neg
jp
mov
pop
out
jae
cs
test
or
ds
div
adc
add
adc
mov
loop
shl
jmp
ror
pop
cmps
int
ficomp
rol
sbb
hlt
inc
inc
dec
dec
inc
and
inc
out
mov
les
push
cmp
gs
ret
std
pop
jge
rcr
dec
dec
inc
test
test
push
(bad)
leave
in
push
sbb
xchg
daa
inc
ja
mov
sar
not
ja
loop
hlt
loope
cmc
pushf
mov
(bad)
out
fidiv
cld
imul
mov
jle
fwait
mov
ror
gs
pop
jp
lods
scas
mov
sub
cdq
jne
xor
out
mov
push
adc
sti
sbb
mov
movs
mov
push
fldcw
fs
dec
xor
repz
ja
leave
addr16
inc
or
jae
lahf
scas
dec
adc
loop
mov
pop
popf
mov
mov
mov
scas
mov
cmc
add
sub
xor
jnp
mov
ins
add
jmp
enter
cwde
inc
cli
fidivr
add
sub
ret
mov
cmps
inc
adc
pop
fimul
jg
inc
out
cmps
dec
xor
pop
inc
adc
sub
loope
cmps
sub
cmps
ins
cmc
sbb
or
popa
scas
mov
pushf
mov
and
jae
dec
and
int
aaa
mov
shl
ja
imul
add
xor
mov
cmp
dec
jmp
mov
std
jne
push
lods
jnp
sub
(bad)
jo
push
(bad)
repnz
push
popf
add
and
and
and
(bad)
push
pop
mov
arpl
jne
aaa
jp
jmp
shr
gs
cmps
adc
and
cmp
ror
pop
test
sahf
icebp
cmp
xchg
jb
and
or
arpl
gs
gs
cdq
mov
jo
mov
test
xor
pushf
or
sti
pop
imul
ret
xchg
push
mov
pop
mov
aad
sahf
and
and
imul
mov
dec
lods
sti
fild
mov
iret
xchg
mov
repnz
inc
inc
popa
stos
pop
add
push
mov
lahf
fistp
add
xchg
pop
push
cmp
je
inc
cs
enter
call
xchg
cmp
or
outs
or
mov
or
sbb
dec
rcl
fadd
push
cwde
add
hlt
das
fimul
std
sbb
pusha
push
sbb
push
scas
mov
inc
repz
push
jg
sub
mov
mov
(bad)
jle
fnstcw
mov
(bad)
pop
mov
pop
into
jmp
sub
loopne
out
lods
sub
xor
push
xchg
inc
mov
mov
dec
add
imul
push
jg
arpl
ins
inc
xor
mov
mov
leave
pusha
stos
inc
std
and
add
stos
mov
mov
xor
adc
pop
ret
imul
dec
(bad)
or
mov
lahf
lea
inc
jmp
rcl
cdq
movs
cmp
outs
in
test
or
cld
xor
aad
cs
push
imul
adc
(bad)
cld
cmp
jg
add
cli
xchg
sub
add
bound
push
sbb
add
mov
fistp
(bad)
cli
mov
pop
shl
shl
mov
pushf
push
mov
xchg
call
(bad)
xchg
mov
adc
dec
push
mov
orps
mov
test
adc
lea
pop
scas
adc
in
xchg
(bad)
and
jmp
outs
mov
pop
loopne
push
jmp
(bad)
mov
cmp
pop
int
call
mov
pop
lods
mov
sub
push
bound
mov
ds
mov
clc
adc
mov
mov
push
push
or
pop
push
idiv
push
mov
stos
push
arpl
leave
push
scas
xchg
pop
mov
add
das
test
xor
cli
(bad)
xor
ficomp
sbb
xor
xchg
mov
call
xor
push
shl
jp
shr
nop
dec
sbb
sub
popa
les
in
jecxz
mov
pop
inc
lds
xchg
rcl
xor
ja
dec
(bad)
and
(bad)
jnp
rcl
ror
imul
and
inc
into
sub
and
out
nop
sbb
pop
fwait
dec
mov
xchg
clc
adc
jp
lea
jae
ja
cmps
cmp
stos
push
sbb
bound
and
enter
jp
lds
loop
add
(bad)
cs
cmp
push
jp
lahf
(bad)
adc
outs
cld
out
stc
(bad)
out
pop
jmp
inc
jmp
inc
dec
in
lock
inc
in
sbb
xchg
pop
arpl
lods
push
and
push
div
outs
adc
mov
cmc
jecxz
adc
pusha
jnp
push
and
in
cmp
push
adc
jns
inc
xor
aas
stos
je
or
in
cmc
jmp
out
jmp
mov
call
(bad)
jecxz
fsubr
js
adc
arpl
jmp
pop
call
(bad)
imul
call
test
xlat
inc
or
scas
bound
add
ja
outs
xchg
xchg
xchg
mov
int
push
add
xchg
in
daa
push
pop
sbb
call
test
pushf
jbe
in
or
test
jmp
xor
and
add
jg
mov
mov
test
leave
loopne
mov
loope
push
dec
mov
shr
dec
adc
cs
fild
js
xchg
scas
mov
jg
cmp
call
popa
pop
push
stos
mov
loope
aam
dec
shufps
test
jo
push
sbb
push
sub
push
sbb
xor
add
hlt
jp
xor
ja
ins
stc
stos
push
jo
movs
jl
das
mov
push
int
mov
imul
jmp
imul
xor
jg
out
cmp
out
fisttp
shl
mov
mov
cmps
fsubp
popf
std
cdq
mov
outs
clc
cvtps2pi
pop
pop
inc
push
or
popa
sbb
cmp
or
and
push
push
and
xchg
pop
cmp
adc
jle
cmps
movs
clc
and
fimul
daa
inc
xor
jae
aaa
outs
adc
gs
int3
push
es
nop
and
push
mov
add
or
mov
mov
mov
xchg
fdivr
mov
das
dec
movs
mov
pop
cmp
pop
gs
lods
pop
xor
adc
in
xor
(bad)
popa
mov
dec
retf
and
sub
aaa
aad
stc
(bad)
inc
scas
inc
push
fmul
jns
fiadd
js
push
lds
shr
iret
xchg
div
mov
pop
fs
mov
inc
dec
mov
dec
cmp
add
fidiv
add
call
ret
out
push
and
mov
mov
push
aam
add
inc
push
pop
adc
inc
fdivr
and
movs
adc
jns
mov
dec
arpl
mov
test
out
mov
adc
xor
clc
dec
pop
enter
cmp
mov
sti
and
lds
daa
dec
and
in
sbb
call
mul
xlat
mov
hlt
mov
xor
loopne
sub
cmp
pop
mov
xchg
(bad)
iret
movs
xor
sbb
stos
aad
dec
test
in
jno
pop
in
mov
ret
loopne
nop
and
dec
jmp
call
pop
mov
in
mov
lods
push
xchg
push
loop
cwde
xchg
shl
iret
std
inc
nop
inc
sar
inc
adc
push
rcr
inc
sub
aam
pop
dec
xchg
aas
xchg
xor
aam
in
sbb
push
out
mov
lods
fdiv
fwait
xor
jp
scas
add
push
lods
mov
push
mov
sti
add
cmps
mov
xchg
xchg
sahf
sar
inc
lds
xlat
adc
call
and
push
xchg
aad
sbb
into
pop
outs
xor
jp
pop
ins
in
pop
xchg
das
in
popf
dec
aam
mov
in
mov
hlt
pop
outs
cmp
mov
fidiv
and
cmc
pop
cwde
pusha
cli
outs
and
jb
icebp
inc
mov
or
mov
add
dec
dec
mov
mov
cmp
or
test
movs
push
rcr
add
xchg
and
call
xchg
sub
adc
outs
xor
cwde
fistp
aaa
push
jmp
into
mov
sbb
icebp
mov
mov
cmp
ds
mov
sub
enter
xor
inc
int3
ss
ds
pop
test
das
add
add
push
cmp
jmp
call
push
inc
xchg
enter
sbb
cdq
hlt
mov
mov
add
and
xchg
dec
ret
fisttp
mov
inc
ins
test
xor
mov
or
fisubr
sub
adc
repz
inc
jno
lea
pushf
ins
sub
adc
push
push
jno
loop
iret
int
lds
push
sar
mov
loope
(bad)
cmps
ins
push
ds
aad
sahf
fldenv
mov
xchg
sbb
scas
xlat
cld
mov
xchg
adc
stc
clc
out
jne
sbb
pusha
push
adc
inc
(bad)
stc
retf
cld
sahf
mov
jle
mov
mov
leave
or
xchg
fs
xor
les
arpl
cmc
mov
loope
std
jbe
(bad)
fnstenv
mov
jecxz
int
icebp
adc
pop
sahf
push
cmps
xor
out
in
sub
push
push
sub
cmc
call
add
loop
in
adc
xchg
fild
xchg
call
(bad)
scas
test
or
sbb
dec
mov
xor
ret
sub
in
inc
fldcw
mov
ret
dec
jno
xor
sub
dec
leave
sti
add
in
popf
lods
clc
mov
xor
and
sbb
mov
adc
inc
xchg
repz
jp
test
and
inc
xchg
iret
movhps
shr
mov
test
(bad)
push
out
ja
out
add
shl
fwait
int
and
aaa
dec
and
lds
and
xor
inc
jns
cmp
cmps
mov
scas
cmp
popa
dec
jno
push
jne
rcl
inc
stos
mov
mov
call
loope
jecxz
jmp
jbe
mov
adc
outs
fisub
arpl
clc
dec
or
jns
retf
add
daa
fist
and
shr
adc
mov
popa
xchg
dec
jno
mov
mov
mov
xchg
xchg
add
mov
mov
or
outs
or
xchg
ja
(bad)
mov
or
dec
cmc
cmp
mov
mov
cmps
jmp
push
repz
addr16
adc
hlt
shl
push
retf
xchg
lea
shl
xchg
sub
imul
add
mov
or
and
stc
test
jmp
inc
cmp
cdq
cmc
int3
dec
pop
push
loope
adc
sbb
outs
int
push
mov
imul
jmp
das
stc
fwait
push
or
imul
mov
clc
push
dec
sbb
xor
aas
iret
push
adc
sysenter
nop
mov
xor
loopne
dec
pop
leave
rcl
bnd
cdq
cmp
mov
mov
add
mov
div
and
sub
pusha
shr
pop
fcom
jmp
pop
cwde
push
repnz
ret
inc
add
xchg
enter
aas
add
repnz
das
xor
daa
dec
test
pop
mov
in
nop
sbb
movs
fs
xchg
jo
scas
mov
iret
ins
sti
stos
cmp
pop
push
or
dec
dec
lods
icebp
and
aad
repz
sub
lahf
mov
mov
aaa
jb
push
(bad)
movs
mov
push
jb
ins
xchg
jp
jmp
mov
xchg
and
mov
mov
jnp
add
pop
push
add
mov
push
xchg
jg
mov
lock
add
test
cmps
xor
mov
pop
iret
imul
(bad)
fmul
in
call
mul
dec
add
loop
imul
(bad)
stc
in
nop
jae
xchg
gs
sahf
scas
in
(bad)
fwait
mov
cdq
pop
inc
push
repnz
sbb
ret
test
pusha
mov
cmc
push
xor
movs
sub
pop
(bad)
int
cmp
pop
lds
or
sub
inc
test
cmp
jns
scas
ins
sub
or
dec
mov
xor
loope
xchg
sbb
sti
cmp
outs
or
inc
aad
jmp
not
jb
and
leave
inc
mov
sbb
or
xchg
test
push
sahf
ins
in
aad
rcr
jnp
fistp
mul
mov
addr16
jns
mov
js
pusha
fmul
mov
aad
fdiv
test
pop
or
jne
cmp
adc
cli
test
fwait
inc
push
int3
pushf
xchg
inc
lahf
xor
lods
xchg
mov
pop
repnz
push
xor
les
jge
push
repnz
jle
std
jmp
xchg
leave
jle
or
adc
ins
jmp
mov
pop
mov
mov
cli
mov
add
dec
xchg
or
mov
sbb
xchg
cmp
or
add
jg
sub
inc
xchg
xor
fild
and
sar
adc
imul
out
fninit
sub
xchg
push
pop
aam
mov
js
sti
add
fisttp
imul
fs
iret
repz
stos
xor
test
pop
inc
scas
fld
dec
mov
cli
popf
mov
gs
ret
aas
dec
mov
rcr
dec
add
push
neg
cld
dec
dec
xchg
mov
mov
push
fdiv
pop
pusha
lea
pop
adc
cdq
pop
out
sbb
leave
pop
loopne
sbb
movs
pop
leave
and
fnstenv
int3
sbb
inc
mov
rcr
jbe
xor
and
jo
pop
mov
sub
test
push
adc
jmp
popf
or
popf
mov
add
repnz
jmp
ficomp
addr16
outs
xchg
push
and
in
or
mov
jnp
loop
(bad)
push
sub
ss
and
cli
mov
icebp
cmp
adc
dec
add
js
imul
bound
jne
mov
std
xor
es
adc
lds
hlt
rol
popf
int3
test
jl
xchg
or
(bad)
ror
outs
jne
adc
push
jle
dec
xchg
call
add
imul
mov
add
xchg
into
mov
jne
xchg
call
or
cmp
pop
jb
or
add
jmp
lahf
pop
fnstsw
xor
outs
adc
cmps
fimul
hlt
or
xchg
lods
pinsrw
mov
mov
(bad)
call
les
mov
aaa
sbb
mov
popa
dec
and
pop
xchg
(bad)
out
daa
call
fiadd
mov
adc
fwait
jmp
js
ret
mov
mov
mov
cmp
outs
mov
push
jmp
adc
and
cmp
icebp
fcom
jb
test
je
dec
mov
mov
sahf
xor
sbb
xchg
in
jns
loope
fnsave
cdq
xchg
adc
mov
mov
fstp
ins
aam
sub
aad
mov
nop
pop
clc
out
mov
stos
dec
mov
push
and
jmp
push
jge
fs
add
push
loop
cmps
or
mov
jmp
mov
loop
mov
cmp
jo
call
fwait
lea
cwde
mov
sub
push
iret
xor
daa
mov
jne
inc
xchg
pop
mov
jle
jmp
push
jmp
cdq
jno
sub
stc
mov
or
mov
add
jae
call
test
(bad)
out
lahf
xchg
push
mov
push
xchg
xor
cmp
fcmovu
aaa
popa
ret
fst
cmps
xor
xchg
in
mov
fnstenv
sub
cmp
mov
and
std
lods
(bad)
cmp
cmp
inc
ins
xchg
xchg
push
fcom
mov
ins
push
pushf
ja
rcl
(bad)
out
pusha
cmp
adc
(bad)
mov
dec
and
and
jns
push
inc
cmp
jno
loopne
fdiv
add
sti
cmp
in
lahf
sbb
enter
mov
add
xchg
dec
fimul
ja
movs
into
sbb
mov
ror
pusha
push
dec
jae
call
imul
cmc
and
add
xchg
(bad)
call
and
jbe
mov
cdq
fidiv
es
push
inc
jl
pop
jg
xchg
inc
dec
fwait
cli
imul
dec
xor
jbe
lock
jae
popa
bound
fs
or
and
out
inc
adc
mov
add
popf
jge
jecxz
sbb
mov
rcr
fwait
and
mov
xchg
jmp
icebp
and
mov
xchg
mov
fisub
inc
adc
cld
sbb
iret
nop
arpl
inc
cmp
icebp
(bad)
jmp
cs
test
fild
inc
lock
daa
fisttp
dec
or
outs
(bad)
mov
jmp
dec
jl
sub
ret
pop
rcl
mov
(bad)
pop
add
fst
loop
scas
inc
mov
iret
mov
xchg
jge
int
std
shr
cmc
mov
jb
jnp
and
fld
ins
dec
inc
sahf
sbb
xchg
pop
lods
mov
idiv
enter
pushf
mov
adc
sub
sbb
pop
add
mov
mov
int
fidivr
in
enter
mov
sar
ins
pop
fimul
data16
add
add
mov
lea
xchg
xchg
mov
mov
aas
push
mov
xor
arpl
mov
sahf
push
mov
cmp
adc
jae
clc
fsubr
and
jmp
pop
imul
mov
hlt
jmp
mov
rcr
xlat
or
fiadd
icebp
xchg
outs
mov
lea
inc
cmps
aaa
scas
push
cmp
mov
leave
retf
pop
mov
bound
lock
pop
in
pop
int3
out
adc
xlat
shl
xchg
add
adc
call
fwait
adc
add
or
out
popa
xlat
and
popa
int
lmsw
std
(bad)
jmp
push
sahf
inc
sbb
lods
cmp
sub
and
sbb
ss
cmp
mov
test
ins
adc
xchg
push
xor
and
das
jl
mov
repz
pushf
jmp
loopne
mov
aas
mov
inc
fld
or
and
rol
or
(bad)
cmps
sub
js
dec
les
mov
sbb
inc
pop
nop
xor
mov
shl
and
outs
hlt
sbb
adc
pop
stos
loope
adc
loopne
(bad)
shr
movs
mov
(bad)
iret
sub
(bad)
mov
push
xchg
inc
iret
xchg
into
dec
pusha
bound
sar
in
inc
int
jo
push
mov
pop
mov
sub
add
out
jle
mov
jno
stos
pop
cs
mov
gs
stos
jg
xchg
pop
push
mov
inc
cwde
stos
jge
pop
js
sub
ss
inc
cmp
std
xor
jno
cmp
aaa
inc
mov
push
xor
xor
mov
xor
fistp
sub
ret
aas
jo
mov
or
jbe
xor
cld
xor
loop
add
mov
jg
nop
mov
test
fmul
mov
cld
loop
in
adc
shl
jnp
mov
test
clc
rol
gs
(bad)
movs
push
xchg
and
shl
(bad)
retf
mov
jmp
sbb
(bad)
fisttp
cdq
cs
sbb
adc
out
jns
sbb
jbe
cmp
repnz
xchg
gs
in
popa
popa
xor
dec
jae
ja
pop
jno
adc
loop
mov
dec
sar
cmp
xchg
cld
inc
aas
mov
mov
rol
mov
dec
mov
sub
outs
pop
xor
ins
xchg
mov
ja
ret
ror
pop
repnz
push
or
inc
call
add
mov
mov
out
mov
loop
cmc
ja
jo
aaa
xchg
xor
std
movs
cmp
(bad)
push
cmp
ret
mov
add
sti
jb
add
sbb
sar
test
mul
out
sti
sahf
dec
adc
cmp
fs
dec
mov
xor
cmp
jbe
mov
dec
and
(bad)
loopne
stos
mov
adc
mov
int
jo
outs
test
mov
xchg
(bad)
int3
mov
jo
test
pop
mov
imul
ret
call
popf
cmp
cdq
jbe
jae
les
cdq
dec
adc
pop
movs
imul
mov
ins
dec
xor
dec
mov
imul
push
and
and
cwde
adc
sub
mov
std
fcom
lds
dec
loopne
imul
bound
sti
jecxz
mov
jl
sbb
mov
push
in
(bad)
stc
das
push
mov
ins
pop
lock
int3
and
and
cmc
adc
daa
repnz
nop
and
cmp
(bad)
and
imul
dec
add
push
sbb
outs
out
loop
mov
add
pop
jmp
mov
and
mov
mov
es
arpl
fs
or
repnz
mov
stos
push
xlat
inc
adc
mov
stos
dec
or
fst
mov
add
sahf
push
fimul
sub
inc
das
add
or
xchg
outs
int
dec
pop
push
jo
sub
jo
mov
cmp
cmp
sti
lock
outs
js
daa
retf
js
test
int
test
mov
mov
push
xchg
test
test
dec
sbb
xor
mov
adc
retf
out
test
adc
sahf
push
in
fidivr
mov
sahf
mov
xchg
fistp
adc
inc
jbe
sub
daa
bound
xchg
push
sbb
push
fimul
push
add
div
daa
call
jmp
mov
sbb
mov
inc
das
addr16
test
jecxz
jle
nop
mov
sbb
shr
jbe
mov
ss
pusha
movs
mov
dec
mov
daa
push
movs
scas
cld
sub
call
shr
in
sub
mov
push
fisttp
adc
test
loop
fdiv
inc
ret
jns
adc
xchg
xchg
cmc
rol
loope
int
xor
sub
jnp
ret
mov
and
repnz
mov
mov
adc
xchg
ins
mov
in
push
xchg
shl
dec
int3
stos
mov
or
mov
push
and
lods
cmp
fild
addr16
xchg
rcr
mov
jnp
adc
in
(bad)
ins
mov
(bad)
movs
sub
mov
jl
nop
cmp
aas
ins
mov
xor
and
xchg
dec
outs
add
(bad)
mov
out
pop
pop
dec
xchg
ficom
int3
into
icebp
inc
fadd
pop
mov
adc
mov
fild
mov
ss
sti
in
imul
out
add
jecxz
nop
sar
cli
dec
gs
sbb
push
fwait
inc
imul
lods
cmp
push
mov
or
mov
movs
cmp
dec
jmp
pop
imul
inc
lds
fs
pop
in
gs
and
push
fidiv
loopne
das
(bad)
retf
or
outs
push
push
sub
mov
xor
mov
pop
xchg
fistp
out
jle
test
mov
leave
movs
mov
rcl
dec
xchg
imul
test
dec
ds
mov
aaa
cmp
and
xchg
mov
cdq
push
lahf
call
imul
ja
xor
inc
dec
ins
inc
cmp
push
das
(bad)
(bad)
sti
push
mov
scas
mov
xor
jo
mov
adc
mov
fnsave
fcmovb
out
adc
sub
int3
cmp
mov
and
pushf
inc
xchg
pop
je
xor
sub
xchg
add
in
adc
lods
cmp
fbld
sbb
push
mov
xchg
mov
test
shr
imul
push
xchg
lds
addr16
or
iret
jns
jo
in
xchg
leave
not
or
das
pop
push
shl
(bad)
add
fld
xor
push
repz
sahf
movs
imul
into
popf
test
jl
imul
sub
pushf
push
sbb
leave
dec
js
in
add
jbe
add
mov
icebp
xor
loopne
add
in
fwait
sub
outs
loope
into
sbb
add
dec
clc
adc
popf
es
scas
mov
add
(bad)
es
adc
cmp
out
mov
xchg
pop
sub
stos
inc
sub
loope
pop
inc
pop
test
inc
fdivr
xor
sbb
mov
xor
dec
or
cmp
outs
nop
imul
sbb
add
enter
pop
call
pop
scas
in
arpl
je
adc
mov
xor
mov
inc
(bad)
lods
mov
fist
xchg
test
out
inc
xor
jg
cmp
xor
push
bnd
cwde
jbe
or
xor
stc
mov
push
jg
in
mov
out
mov
or
xchg
das
fcom
or
and
dec
(bad)
jmp
es
pop
test
push
xor
jge
out
lahf
xor
jl
out
push
push
call
add
(bad)
pusha
mov
sub
sub
fdivr
popf
int
mov
cmps
xor
loopne
fsub
and
aas
add
jecxz
stc
mov
aam
sbb
add
js
jecxz
sub
ins
fwait
and
push
xlat
lock
jb
xor
inc
movs
ja
dec
push
imul
cld
mov
arpl
add
aaa
sbb
nop
cwde
popa
lock
cmps
cld
jb
mov
mov
movs
xchg
mov
scas
rol
retf
mov
adc
xchg
outs
jp
je
fdivrp
add
jecxz
sub
test
mov
jmp
scas
xor
out
add
push
mov
loope
lds
es
repz
xchg
sub
dec
mov
cmc
adc
out
in
sbb
push
add
jb
mov
lods
pop
xchg
fstp
mov
jne
inc
ss
add
retf
add
pop
fadd
push
cmp
je
test
and
mov
inc
inc
and
fdivr
mov
xor
call
xchg
(bad)
div
mov
push
push
into
mov
sbb
jbe
mov
(bad)
iret
imul
aaa
fcomp
cmp
sub
inc
arpl
fdivr
movs
lds
add
out
pop
push
rcl
and
mov
clc
ins
std
(bad)
(bad)
cmp
lods
test
push
loopne
sar
add
lods
and
mov
aad
cmps
call
call
pop
adc
enter
mov
ja
cmp
imul
imul
pop
nop
xor
jns
stos
retf
das
cld
pusha
icebp
adc
(bad)
sub
popa
mov
sbb
out
stos
and
inc
loop
adc
retf
popf
ret
pop
bound
ss
pop
jb
mov
mov
retf
cmc
push
pop
sbb
fistp
pop
xchg
mov
cli
mov
fcom
loopne
adc
dec
jecxz
test
adc
xchg
jg
int
xchg
xor
movs
out
dec
dec
mov
mov
or
bt
push
clc
push
adc
add
xchg
repnz
sbb
icebp
xchg
xchg
sbb
xor
inc
outs
(bad)
(bad)
push
xlat
leave
xchg
iret
jae
movs
hlt
iret
adc
mov
mov
retf
ins
sub
fsub
xor
movs
pop
in
xor
sub
stos
mov
push
mov
(bad)
mov
and
push
ds
test
inc
ficom
fstp
fcom
test
inc
sub
sar
inc
outs
bound
out
mov
dec
add
and
cmp
adc
or
and
adc
cli
pop
aam
lea
ret
adc
mov
cmc
xchg
dec
gs
lahf
add
dec
adc
lods
neg
je
cmc
cmp
pusha
sbb
sbb
sub
xlat
xor
daa
mov
daa
fwait
mov
into
repz
cmp
(bad)
icebp
jecxz
test
xchg
imul
stc
jnp
fsubr
(bad)
sbb
mov
adc
jno
mov
lods
push
xor
mov
or
mov
lea
mov
aad
sub
aas
mov
ret
cwde
sub
dec
in
jl
dec
or
out
stc
shl
test
mov
fcomip
gs
aad
ins
mov
mov
fldcw
and
test
lods
mov
push
enter
ficom
mov
pop
rol
xlat
sub
test
pop
ss
adc
out
jp
xchg
cld
lods
dec
arpl
dec
out
or
jns
scas
mov
or
inc
mov
jae
sbb
test
push
push
lds
adc
jg
mov
push
push
ret
bswap
test
(bad)
int
pusha
dec
cmp
test
in
sbb
or
mov
push
fisubr
add
xchg
movs
imul
mov
test
cwde
pusha
add
ds
mov
jle
sub
cld
inc
lods
mov
add
shr
sbb
shl
cs
mov
lods
scas
in
fistp
hlt
and
xor
not
popf
mov
stos
dec
loopne
div
mov
fadd
push
jo
mov
push
and
jg
jge
pop
pop
ficomp
mov
movs
test
sbb
inc
and
sub
xor
out
cmp
cs
jno
jbe
xor
shr
ja
add
int
push
mul
mov
jno
test
xchg
cmps
inc
call
push
int
cdq
stos
ficom
dec
mov
pop
pop
xchg
jecxz
jno
adc
pop
push
dec
fdivr
xchg
xchg
das
jp
mov
test
lahf
dec
mov
and
pop
jbe
mov
dec
cwde
dec
loope
mov
push
mov
inc
fcom
sbb
rcl
jle
hlt
(bad)
mov
fimul
sub
jge
sbb
jg
cmp
or
sbb
xor
into
inc
les
add
int
daa
scas
lahf
pusha
dec
mov
inc
stc
jae
xor
rcr
jo
cmp
mov
or
pop
cmps
mov
or
stc
adc
js
sub
sbb
sbb
aam
adc
movs
add
adc
cmp
repnz
(bad)
iret
lods
pop
xchg
pusha
sbb
(bad)
mov
data16
sbb
inc
push
lods
das
mov
and
pop
cdq
dec
jmp
(bad)
fistp
int
mov
mov
xor
mov
ret
stos
mov
loope
push
or
or
push
cmp
add
xchg
fld
inc
cld
mov
mov
xor
pop
test
adc
movs
jb
sbb
es
add
xchg
ret
inc
in
fstp
push
cmp
stos
pop
(bad)
jge
out
call
jns
or
inc
(bad)
mov
outs
pop
push
scas
xor
out
outs
mov
push
jae
and
stos
sbb
mov
and
mov
jnp
mov
fisubr
xchg
or
jle
jns
ret
mov
mov
enter
mov
ds
ja
push
mov
mov
retf
inc
outs
cdq
pop
in
cs
int
retf
(bad)
retf
daa
sbb
aas
mov
rcl
shr
cmc
lea
lods
arpl
dec
xchg
push
je
mov
inc
std
push
and
jbe
cmp
pop
pop
cmps
sbb
lds
mov
ss
mov
aas
mov
fsub
xchg
dec
(bad)
sbb
sahf
dec
test
push
pop
or
jmp
cwde
out
cli
xchg
in
sub
push
and
mov
cmp
(bad)
jp
mov
jns
loop
sub
xor
mov
add
push
xchg
cdq
loope
or
(bad)
sub
cli
jb
mov
jnp
inc
pushf
xor
mov
aam
ins
dec
(bad)
test
test
add
xchg
push
xor
fldenv
xchg
lods
mov
adc
mov
leave
and
push
cwde
jge
add
leave
std
sub
addr16
fisttp
mov
in
sub
fisub
cmp
and
mov
cmp
pop
push
xchg
cli
dec
clc
sbb
neg
ds
loope
imul
(bad)
fwait
into
push
div
shl
test
jmp
call
out
and
cdq
into
movs
mov
sub
xchg
cmc
pop
fadd
aas
stc
inc
and
xor
jo
test
ret
ds
repz
cmc
inc
xchg
fcom
mov
mov
repnz
mov
fcmovnb
inc
mov
popf
or
sbb
leave
mov
and
add
retf
adc
je
(bad)
sbb
lea
cmps
add
in
call
mov
(bad)
mov
inc
popa
mov
std
push
inc
cli
xor
pop
call
cs
dec
movs
mov
adc
je
push
mov
loop
mov
into
and
jle
enter
jg
adc
sub
jp
sub
mov
inc
mov
int
mov
mov
adc
int3
add
in
mov
loope
jae
(bad)
icebp
mul
xchg
or
icebp
das
adc
dec
arpl
add
je
xchg
iret
jle
call
stos
lahf
xchg
pop
sub
popa
mov
fcom
xchg
(bad)
and
dec
mov
xchg
adc
dec
jbe
shl
test
pop
inc
or
nop
mov
div
jle
dec
dec
sti
fsub
in
and
jae
in
bound
aam
repnz
xchg
add
test
dec
add
jg
xor
test
sar
mov
cmps
inc
inc
jbe
jae
adc
sub
pusha
dec
outs
arpl
pop
mov
out
dec
aam
loopne
into
fiadd
cmps
add
jp
add
mov
call
ror
mov
pop
jnp
mov
xchg
mov
cmc
repnz
add
(bad)
cmp
mov
stos
outs
loopne
fist
push
lods
ret
imul
adc
in
mov
cmc
fcmovne
je
xchg
cmp
imul
int
jle
mov
xchg
dec
add
fcmovu
xor
cmp
call
and
mov
mov
mov
adc
sbb
or
jmp
retf
out
loop
ins
cdq
dec
dec
mov
retf
and
ja
xor
sbb
cmp
aad
fist
mov
dec
pop
sub
cmc
stos
mov
out
push
lea
inc
mov
jbe
add
xchg
mov
inc
xor
sahf
mov
jns
aad
ja
test
mov
xchg
sar
in
retf
xor
std
push
stos
ss
sub
fxtract
xlat
movs
adc
cld
stc
jp
push
fiadd
imul
cmp
ror
dec
js
mov
or
xlat
loop
rol
xchg
movs
and
jnp
aam
xor
popa
inc
mov
adc
dec
cmp
std
and
dec
jl
adc
mov
call
aaa
cdq
jmp
sbb
adc
cmp
retf
ret
adc
mov
out
cmp
das
xchg
mov
stos
ja
enter
aam
jne
jg
int3
sbb
push
mov
ret
cli
or
hlt
daa
lea
(bad)
mov
pop
jmp
fdivr
gs
rol
cli
pop
jmp
cli
outs
pusha
fimul
retf
pop
cli
cmps
ins
cmp
or
jne
push
test
jb
jmp
and
shr
mov
in
jg
mov
mov
enter
in
adc
pop
add
pop
sub
mov
push
and
popf
out
enter
enter
mov
(bad)
out
test
mov
fdivr
jmp
loopne
in
cwde
pop
pop
xor
das
mov
nop
das
push
mov
sbb
aam
sbb
lds
out
fcomp
jns
cmps
sbb
out
(bad)
enter
dec
adc
fcomp
or
mov
add
xchg
sti
pop
xchg
jle
jo
push
fwait
into
loopne
dec
cli
inc
hlt
add
jle
mov
out
or
pop
out
loop
stc
dec
stc
mov
push
cwde
xchg
xchg
xchg
mov
xchg
pop
movs
ins
pop
and
mov
jae
ins
lods
push
les
push
xchg
ss
stos
out
add
inc
lahf
dec
ret
pop
cmp
retf
aas
shr
in
lods
js
xchg
push
inc
mov
int3
ret
sahf
les
lods
push
mov
xor
xor
sbb
mov
fsub
iret
adc
retf
lods
xlat
sub
push
repz
ficom
mov
test
cs
adc
xchg
mov
sbb
mov
rcl
inc
out
cmp
ffree
xchg
xor
pop
sbb
inc
ja
cmp
adc
dec
arpl
lahf
sar
test
mul
dec
imul
cmp
rol
out
add
inc
mov
movs
cmp
sar
pushf
or
push
pop
add
loope
xor
js
int3
xlat
adc
addr16
ins
sbb
addr16
push
xor
add
rcr
repz
cmp
adc
in
jle
push
mov
cs
in
fisubr
test
pop
jbe
mov
sbb
addr16
aad
and
adc
sub
lock
push
(bad)
ret
cmp
and
xor
or
cmp
fadd
jl
cdq
lods
retf
(bad)
ret
jg
push
into
sbb
mov
sar
cmps
into
jmp
imul
cmp
inc
push
inc
mov
xchg
in
ss
movs
xor
cmp
sub
jbe
sub
and
into
ja
sub
inc
je
test
int
ins
sub
add
inc
sub
icebp
mov
mul
push
repz
test
jne
scas
push
push
mov
adc
mov
pop
inc
cmp
or
std
mov
and
jmp
sbb
mov
shr
stos
xchg
test
jb
fmul
jb
pop
not
nop
js
shl
out
int3
test
scas
lea
inc
mov
xor
dec
das
lds
and
push
fimul
xchg
jo
repnz
pop
sub
mov
and
rcl
push
add
scas
cmp
cmc
inc
push
push
and
das
out
cwde
(bad)
push
scas
mov
sbb
ja
lahf
sahf
mov
scas
leave
cmps
std
addr16
mov
inc
xor
push
dec
jb
xor
cmp
pop
adc
retf
leave
and
sar
adc
call
inc
sbb
and
shl
inc
mov
and
lock
aam
(bad)
mov
cs
pop
cli
jb
test
mov
ror
inc
cmp
pop
stos
lock
mov
scas
mov
mov
js
(bad)
(bad)
jge
in
sbb
sub
fild
jl
in
pop
(bad)
sub
mov
out
bound
add
shr
jecxz
or
xchg
sbb
rcl
pop
jmp
mov
lods
ds
sbb
jle
inc
xor
jle
dec
mov
aad
in
push
jecxz
shr
inc
inc
jns
shr
add
int
cwde
loope
mov
push
inc
ins
test
jmp
xor
xchg
gs
jns
sbb
sub
mov
jbe
loopne
int3
ret
les
ss
cld
cmp
pop
sub
mov
xor
jg
pop
jbe
add
cdq
int3
sahf
jp
sbb
out
rcr
es
cld
ss
push
stos
imul
retf
pusha
arpl
in
ja
out
out
sub
jg
sub
ss
jp
and
xor
rol
outs
repnz
fcomp
call
out
aad
mov
rcl
sbb
sbb
add
inc
test
mov
push
rcl
pop
sar
or
inc
lods
cmp
inc
mov
hlt
add
fbstp
out
and
dec
adc
push
cmp
mov
mov
inc
inc
mov
mov
aas
xchg
mov
mov
lds
adc
(bad)
and
js
mov
and
adc
or
cmp
cmp
inc
fistp
xor
inc
pop
or
xchg
jmp
movs
xor
mov
mov
jmp
add
xchg
repz
and
lods
aaa
gs
mov
xor
mov
in
lar
mov
imul
pop
icebp
push
jle
jg
outs
leave
cmc
add
sar
bound
pusha
ret
sbb
ins
ins
sbb
popf
iret
test
test
inc
inc
sub
inc
call
add
sub
push
sub
in
shl
pop
dec
pop
in
not
popa
jno
js
push
pop
daa
sub
add
mov
mov
inc
pop
(bad)
and
adc
mov
(bad)
and
inc
lahf
fiadd
push
jo
xor
add
popf
cli
js
ds
leave
call
scas
push
adc
push
pushf
push
leave
mov
adc
and
jge
adc
mov
das
mov
dec
repz
retf
inc
jbe
dec
outs
mov
js
pop
call
fstp
push
rcl
add
jge
push
cmp
fadd
fdiv
dec
dec
daa
inc
loopne
iret
sbb
mov
xchg
cwde
mov
adc
(bad)
jmp
retf
mov
pusha
bound
fs
push
(bad)
add
sub
jmp
ja
push
sub
loope
(bad)
mov
inc
xor
in
retf
lock
mov
adc
dec
dec
retf
out
inc
pop
push
jnp
push
jle
xchg
pop
jmp
jae
push
sbb
fnstenv
mov
out
pop
movs
popf
inc
jo
(bad)
ins
fst
push
pop
jne
fild
nop
mov
or
xor
push
int3
stc
int3
push
ds
push
sti
push
cdq
sub
sub
push
sahf
es
or
and
pop
sahf
in
ret
push
jp
and
call
jo
and
mov
es
adc
aaa
mov
icebp
lock
mov
das
jmp
inc
ret
jl
loope
je
in
push
adc
jl
aas
call
(bad)
in
in
cdq
cmp
js
popf
ins
dec
sti
stc
and
mov
jno
pop
ret
cwde
or
popf
push
test
mov
ret
in
cmp
je
leave
cdq
out
inc
loope
into
test
pop
out
add
rcr
in
and
or
lds
rol
adc
lds
ins
push
jmp
mov
icebp
pop
fidiv
cmp
mov
sub
f2xm1
or
outs
cmps
jbe
iret
xor
int3
cli
sbb
test
aad
and
push
aad
repz
les
je
rol
jmp
fild
inc
cli
xchg
mov
mov
imul
mov
pusha
sar
push
je
mov
jg
scas
popa
das
add
mov
dec
es
inc
push
mov
sti
fisubr
and
cmc
sub
mov
pop
and
and
leave
xor
aad
mov
repnz
out
dec
fs
in
(bad)
mov
cmp
stos
out
pop
jecxz
mov
(bad)
push
jecxz
or
or
addr16
push
loope
push
loopne
cdq
or
adc
js
and
std
lods
int3
cdq
adc
(bad)
pusha
outs
cmp
jbe
call
mov
in
sbb
shl
mov
xchg
sub
into
jmp
cs
mov
popa
shr
sbb
fdiv
jo
sbb
pop
or
ins
jbe
loope
jb
xor
shl
dec
sbb
outs
dec
(bad)
in
sub
mov
(bad)
shl
in
mov
mov
mov
inc
jnp
mov
adc
scas
add
push
ret
or
cmp
pop
xchg
outs
or
sub
aaa
retf
pop
and
ret
stos
jp
jns
out
sbb
dec
idiv
adc
cs
ds
clc
movs
sub
xchg
out
push
mov
cwde
xor
and
xor
cld
jg
aas
inc
cmp
mov
sbb
add
loopne
adc
jg
xchg
ror
iret
stc
cli
lds
test
jo
jle
push
sub
daa
push
pusha
add
push
cmp
mov
js
imul
mov
mov
push
sbb
jp
mov
cmc
add
test
clc
xor
test
xchg
inc
mov
cmps
xor
hlt
popf
fucom
sub
outs
jmp
cmp
ss
xchg
movs
xor
dec
push
mov
imul
mov
ss
pushf
cmp
sti
add
push
adc
sbb
inc
daa
jecxz
aam
xchg
inc
cmp
js
cmp
jg
adc
inc
inc
jo
fcom
stos
xchg
les
and
inc
sti
mov
push
fs
fisttp
hlt
xor
xor
push
dec
sahf
js
xchg
sbb
outs
sub
outs
daa
jg
xchg
cmp
xlat
stos
sub
xor
or
icebp
mul
test
push
lods
and
dec
imul
add
movs
scas
sbb
cmp
push
push
xor
jge
jb
cwde
leave
aam
mov
or
fsub
int
xchg
dec
(bad)
cld
ja
push
and
fidiv
ins
aaa
add
cmc
fidivr
cmp
fxch
loop
xchg
or
bound
sbb
mov
cmp
sbb
(bad)
pusha
popf
in
jge
(bad)
out
call
aaa
mov
or
xor
movs
lahf
xchg
xor
ret
add
jns
rol
repnz
pop
ins
movs
jb
test
pushf
lds
lods
fwait
mov
adc
xchg
inc
push
in
push
daa
dec
dec
xchg
add
pop
mov
sbb
retf
(bad)
mov
jg
and
test
inc
xlat
mov
cwde
pop
(bad)
pop
bound
fwait
enter
fwait
mov
cmp
xchg
xor
fadd
xor
push
push
or
push
in
dec
shr
int
popa
gs
pop
sub
outs
fdiv
int
ret
mov
xlat
cmp
push
movs
leave
cmps
je
adc
or
je
cli
je
xchg
push
hlt
(bad)
adc
xor
push
retf
std
xchg
xor
sbb
cdq
xchg
neg
xchg
or
jge
jge
add
cmp
adc
push
pop
sbb
into
mov
mov
jbe
mov
arpl
xor
lods
push
jae
imul
jo
mov
mov
leave
loopne
(bad)
das
movs
cdq
scas
int3
sub
mov
mov
cmc
retf
(bad)
fiadd
int
lahf
in
pop
aad
cdq
or
or
jmp
pop
mov
aas
les
hlt
add
jmp
fidiv
jae
xchg
sub
loope
inc
cmp
add
mov
outs
inc
fmul
loopne
mov
xlat
sub
mov
js
hlt
push
xchg
fst
gs
pop
in
into
fdivr
sbb
repz
sub
and
cmp
(bad)
dec
push
cld
test
js
dec
sbb
mov
push
dec
in
(bad)
mov
imul
test
adc
pushf
movs
push
dec
adc
rcl
adc
retf
mov
dec
in
push
retf
mov
test
cld
jp
(bad)
jg
push
mov
es
or
inc
leave
stos
xor
xchg
rol
inc
push
fwait
lea
arpl
mov
out
jg
xor
ja
push
ja
(bad)
pop
push
(bad)
or
adc
fwait
sar
mov
loop
pop
fisttp
call
aam
or
pop
mov
cmp
retf
jns
mov
dec
test
lods
push
mov
mov
mov
mov
ss
add
mov
aas
stc
test
dec
cmp
cld
fwait
mov
and
test
sub
js
(bad)
je
adc
sbb
pop
sbb
shl
cmp
mov
outs
xor
mov
push
(bad)
jecxz
das
js
shr
or
pop
lods
push
ins
shr
push
je
cmp
pop
jecxz
repnz
daa
sar
mov
lds
into
lahf
inc
add
cdq
test
push
mov
sub
or
jmp
adc
clc
xchg
fcmovb
ds
ror
push
in
dec
mov
pop
or
fwait
int3
push
jne
xlat
int3
(bad)
sahf
in
jle
cmps
inc
sbb
push
mov
push
cmp
fiadd
push
sbb
leave
and
jp
(bad)
fstp
xor
bound
pushf
inc
inc
cs
fild
movs
into
adc
cmp
call
push
sub
sub
hlt
push
ret
call
xchg
add
call
dec
retf
lahf
iret
fwait
jecxz
mov
or
adc
and
enter
adc
jmp
mov
cmps
ficom
pop
(bad)
dec
daa
lahf
fisttp
hlt
into
int3
pop
vpsubusb
add
ror
sub
mov
sub
nop
mov
mov
jnp
cmp
and
idiv
dec
adc
call
fistp
fcmovnbe
xor
adc
inc
cwde
rcr
movs
mov
pop
out
jecxz
lea
das
add
xchg
jbe
jbe
cmp
mov
sahf
loopne
pop
scas
sub
inc
in
or
pop
stos
stos
xor
out
xor
dec
cmp
leave
ins
sbb
adc
push
pop
inc
ds
cmps
and
iret
jecxz
sbb
jg
fisub
mov
loop
sbb
repz
sbb
pop
pop
popa
push
inc
pop
loop
or
inc
adc
xchg
adc
adc
mov
in
pop
push
or
jns
std
shl
rol
popf
dec
sbb
pop
fsubr
sub
and
stc
call
out
call
cmps
xor
xchg
add
les
push
and
cli
pop
outs
vpaddusw
jo
sbb
cmp
jmp
dec
push
out
scas
xor
xor
test
mov
dec
test
scas
pop
lahf
ja
jl
out
add
jle
test
push
int
sbb
aam
(bad)
psubusw
cld
or
loop
mov
in
call
xor
ud0
jmp
stos
mov
jmp
adc
fidiv
dec
sub
rcl
or
xchg
xchg
push
(bad)
sti
aam
into
sub
and
imul
pop
push
bound
je
call
dec
mov
in
xchg
add
dec
jne
xchg
push
dec
cmps
cmp
adc
ins
add
sbb
iret
xor
jmp
call
clc
push
jge
fldenv
sbb
int3
aas
fdivr
mov
push
es
sub
xchg
mov
(bad)
xchg
(bad)
push
ss
call
and
push
inc
sbb
stos
aam
sub
cmp
pushf
mov
rcr
cmp
ins
push
dec
jle
and
test
and
call
cld
add
ror
sub
movs
adc
leave
sbb
aad
outs
stos
mov
inc
and
dec
sbb
push
es
pop
cmps
repz
or
enter
xchg
mov
mov
lods
pop
imul
sub
push
mov
mov
call
ficom
out
lahf
(bad)
iret
dec
movs
sbb
mov
or
movs
sub
je
pushf
xor
pop
addr16
aam
stos
and
mov
cdq
adc
hlt
ret
add
sbb
out
mov
pop
add
push
std
jg
pop
pop
adc
and
outs
mov
pop
sbb
test
repnz
addr16
sbb
loope
and
inc
dec
in
sub
jp
nop
mov
(bad)
(bad)
add
(bad)
mov
clc
dec
cwde
addr16
movs
call
adc
xchg
mov
or
je
pop
cmp
cmp
out
mov
sbb
std
test
adc
sub
sub
mov
push
mov
popf
int3
xchg
dec
xor
in
and
or
xor
es
pop
lods
jg
xor
or
(bad)
jmp
leave
aad
(bad)
call
cs
inc
mov
push
sub
sahf
pop
adc
mov
(bad)
pop
pushf
imul
xchg
dec
fsubr
push
mov
cs
cmovb
gs
loopne
retf
dec
adc
pushf
mov
add
rcl
stc
lock
sar
cmp
neg
imul
push
ja
xchg
or
leave
jge
push
out
or
stc
mov
js
mov
push
mov
icebp
out
jg
mov
pop
jne
lods
jae
pop
stos
(bad)
lods
mov
sub
sbb
in
rcr
test
bound
xchg
or
mov
jbe
xor
xor
cmp
inc
lahf
or
pushw
pusha
mov
adc
and
inc
daa
xor
jnp
inc
mov
mov
imul
xor
test
or
mov
pop
je
and
xor
stc
cmp
stc
retf
sub
scas
or
aaa
jge
aad
add
aaa
adc
jle
jo
enter
scas
cs
cli
cmps
out
cmp
cmp
data16
and
xchg
inc
cmp
push
nop
jno
add
cwde
xchg
cmps
cs
pop
scas
push
xchg
and
or
xchg
(bad)
sbb
or
sub
dec
inc
cmp
sub
jne
jmp
cmp
dec
push
add
js
(bad)
les
stos
push
inc
adc
rcl
lea
(bad)
call
xlat
cld
(bad)
push
inc
pop
les
or
rol
mul
adc
push
add
pop
mov
fnstenv
jle
repz
test
sub
push
outs
inc
cmp
mov
push
ror
sbb
xor
jle
je
jae
xchg
sbb
add
mov
test
and
(bad)
xchg
push
dec
jbe
pop
dec
fwait
movs
lea
addr16
dec
jmp
pop
ficom
mov
rol
lea
(bad)
aam
push
lods
pop
mov
cli
mov
es
inc
mov
mov
nop
or
dec
in
outs
fidiv
es
mov
shr
mov
mov
call
jle
pop
mov
call
shl
mov
cmp
cmps
jo
test
leave
je
push
sub
push
pop
ret
(bad)
ins
mov
test
loop
pop
ror
outs
push
or
ss
pop
ror
inc
in
adc
fistp
out
jnp
mov
fdiv
mov
inc
cmp
sbb
jne
je
or
add
adc
in
and
retf
leave
in
mov
cmp
imul
adc
push
mov
test
or
test
call
sbb
xor
cs
rol
pop
jns
pop
adc
jae
call
enter
and
fsubp
pop
(bad)
jne
stos
cs
imul
xor
js
mov
in
scas
xchg
in
inc
je
push
mov
mov
cmp
push
icebp
jne
stc
fstp
fs
out
adc
xor
test
mov
jns
dec
dec
inc
or
dec
out
ror
add
popf
pusha
repz
stos
or
xchg
loope
mov
outs
cmp
(bad)
mov
scas
jmp
lea
mov
xor
mov
or
in
outs
dec
jno
mov
inc
jo
xor
mov
lods
sbb
dec
pop
dec
ror
ins
inc
dec
push
sbb
repz
cs
sub
push
add
mov
pusha
push
xchg
loop
hlt
mov
in
pop
cmp
cmp
xchg
mov
dec
cmps
mov
int
(bad)
repnz
out
sbb
jae
call
daa
vsubpd
in
mov
mov
sub
xchg
mov
mov
aam
test
js
das
and
inc
pop
nop
out
push
pop
inc
mov
pop
pop
mov
(bad)
repnz
cmc
pop
push
add
mov
ret
adc
mov
lock
in
xchg
and
sub
pop
mov
and
mov
shr
mov
fucom
push
mov
ds
sar
mov
sub
gs
retf
pop
(bad)
je
popa
push
cmps
sub
push
lods
(bad)
and
loope
ins
xor
or
adc
jns
push
aad
sahf
jne
dec
sete
adc
dec
mov
mov
call
fs
and
je
cwde
lods
add
sub
repnz
xor
clc
jb
in
or
scas
nop
cli
xor
mov
or
pushf
and
ret
ret
inc
fimul
or
gs
mov
adc
xor
adc
jb
and
sti
inc
js
adc
sub
cs
mov
in
sbb
pusha
pop
retf
sbb
hlt
arpl
inc
(bad)
mov
mov
(bad)
push
adc
call
inc
outs
mov
fs
sub
cs
and
mov
mov
movs
inc
jmp
in
add
sbb
sbb
add
jo
pop
retf
fimul
dec
push
and
shr
nop
in
sub
mov
cmps
hlt
adc
jmp
and
sbb
mov
scas
popa
or
add
(bad)
jae
popf
retf
int3
adc
mov
in
outs
inc
pop
movs
mov
dec
sti
add
cmc
mov
sahf
std
pop
mov
mov
aaa
into
inc
adc
add
fcom
mov
jmp
sbb
bound
arpl
mov
cmp
xchg
xor
cmp
xchg
jnp
pop
sbb
adc
aaa
add
test
pop
and
push
ins
and
sub
stos
and
xlat
mov
jecxz
loopne
gs
aam
rcr
(bad)
fisttp
xchg
outs
mov
adc
popf
jmp
loop
in
fcomp
cli
cmps
lods
(bad)
loope
xor
mov
push
adc
aad
pop
retf
mov
add
sub
lock
sub
push
jmp
dec
xchg
out
retf
lea
jb
call
leave
cmp
mov
lods
(bad)
cdq
cmp
xor
icebp
pop
scas
pop
fwait
dec
mov
cmc
push
mov
sub
or
out
cmp
mov
clc
js
lahf
cmps
push
in
mov
pop
ins
push
lds
aad
push
test
add
sub
imul
imul
jne
push
cmp
and
lock
mov
in
mov
mov
xchg
mov
jb
mov
das
int3
and
fldenv
xor
imul
shr
inc
mov
push
pop
add
add
jge
cmp
sbb
sbb
push
sahf
mov
(bad)
arpl
leave
jb
adc
mov
mov
push
xchg
sub
mov
call
cmc
mov
loopne
and
push
xchg
es
fisub
and
(bad)
dec
xchg
inc
jb
add
das
jecxz
jbe
mov
stos
pop
lahf
sub
ins
iret
cmp
jmp
inc
movs
add
add
sar
repnz
shl
dec
sbb
clc
mov
and
nop
and
lahf
jge
mov
fcmovne
(bad)
or
push
xchg
mov
mov
loopne
cmp
shl
repz
push
jno
dec
sar
sar
lods
xor
cmp
jnp
add
jns
cmp
mov
(bad)
fisub
jp
adc
push
push
add
fs
or
pop
pop
data16
or
sbb
inc
jno
sbb
(bad)
neg
lods
call
sub
out
in
pop
push
dec
outs
add
bound
je
mov
ret
jne
push
leave
stos
in
mov
les
or
jae
lahf
and
mov
mov
jbe
loope
in
jno
imul
fsub
aam
es
daa
add
pop
int3
mov
inc
dec
jns
ss
call
push
adc
or
aaa
push
pop
sbb
pop
stc
or
ja
iret
mov
(bad)
adc
pop
call
cmp
imul
mov
cwde
loop
retf
jge
ss
jb
lods
stos
push
jmp
or
pop
icebp
data16
std
sete
mov
adc
test
aam
push
ss
aas
mov
sub
mov
mov
pop
jmp
dec
or
push
jge
sbb
arpl
test
cmp
inc
cmp
inc
les
cs
xchg
mov
std
cmp
loopne
mul
xchg
xchg
sbb
jnp
sar
xor
mov
in
data16
mov
fdivr
lds
dec
dec
(bad)
dec
dec
dec
out
push
pop
or
mov
shl
rcr
jne
repnz
fs
dec
popf
adc
push
int3
or
jns
aas
daa
(bad)
xchg
lock
fsub
pop
inc
add
shr
dec
jmp
in
mov
xor
dec
(bad)
push
fld
cwde
or
scas
and
sahf
jle
into
sahf
sar
cmp
es
test
std
fs
jmp
into
fnstcw
and
clc
and
outs
rol
rcr
jns
inc
ret
jo
aad
cmp
and
sbb
sub
nop
iret
idiv
push
push
pop
sbb
mov
outs
test
pusha
inc
out
inc
push
cmp
and
pop
lds
jp
(bad)
shr
retf
aaa
and
movs
inc
adc
test
mov
sbb
dec
in
mov
push
add
xor
das
xor
movs
mov
cdq
mov
or
es
lea
sub
(bad)
test
cli
dec
xor
sbb
fstp
sub
pop
mov
inc
mov
sub
cli
ins
sar
sbb
pop
fcom
ss
mov
mov
cmc
loop
test
mov
cmp
and
retf
daa
mov
jg
jmp
or
ret
and
aaa
lds
inc
(bad)
out
cmp
cld
or
mov
enter
out
mov
push
mov
adc
stos
adc
fbld
xor
icebp
pop
aam
rcr
xchg
inc
jle
jb
lock
(bad)
sbb
aam
shl
jp
pop
enter
jmp
xor
ja
xchg
lods
mov
sub
loop
sub
mov
mov
jo
and
fisttp
ret
push
fxtract
mov
(bad)
mov
jmp
inc
push
inc
repnz
mov
xchg
int
out
jbe
pushf
push
or
in
daa
jb
mov
mov
push
sbb
popa
add
or
jecxz
xchg
into
pushf
mov
aaa
test
call
hlt
out
loope
mov
imul
cdq
push
test
iret
cmp
push
in
inc
fstp
ins
ror
mov
inc
stos
loopne
jecxz
xlat
inc
in
movs
push
jne
fs
repz
enter
pop
cwde
ret
test
rcl
sub
retf
inc
pop
mov
adc
or
hlt
fld
loop
dec
adc
rol
inc
jo
dec
clc
(bad)
dec
pop
sub
xchg
cmp
iret
lfs
adc
inc
push
test
mov
push
push
adc
pop
call
or
or
std
jg
sbb
jae
push
stc
dec
or
xlat
scas
mov
pop
xor
rcr
jnp
jg
xchg
out
mov
mov
and
mov
and
dec
jle
icebp
mov
cmps
movs
push
pop
cdq
sub
pop
push
add
not
stc
outs
dec
loope
lock
add
or
loope
sbb
jmp
pop
jg
les
inc
cs
adc
sub
pusha
dec
inc
hlt
sbb
in
jns
xchg
sbb
adc
add
xchg
dec
cmp
movs
movs
push
add
sti
(bad)
in
loope
in
neg
push
pusha
inc
xchg
jge
shl
pop
fiadd
inc
adc
mov
dec
iret
xor
mov
mov
ins
pop
hlt
rcl
sbb
test
mov
fwait
js
in
fstp
dec
test
out
mov
fwait
retf
dec
xlat
sub
call
hlt
sub
jle
cli
dec
popf
test
pop
gs
movs
fld
jl
pop
cmp
mul
push
ins
js
jmp
pop
fwait
push
inc
jmp
push
cmp
test
inc
cwde
cmp
push
adc
mov
bound
push
jecxz
outs
sub
loope
ror
cs
(bad)
add
jg
rol
jb
xchg
fcomp
dec
cmps
adc
jmp
in
sahf
cs
or
pop
sub
(bad)
xor
sbb
sbb
jbe
call
cmp
add
mov
jl
dec
and
imul
aad
pop
sub
mov
dec
jno
mov
cli
fild
cmp
pop
jne
dec
xor
mov
xor
push
and
mov
sub
dec
cmps
inc
outs
push
int3
jmp
fistp
adc
shr
mov
sub
dec
xchg
pop
addr16
retf
not
imul
xor
std
pop
sub
or
cmc
and
in
mov
ins
add
xlat
bound
dec
pop
add
xor
inc
mov
cs
nop
and
jmp
sub
daa
(bad)
popf
stos
sbb
sbb
shl
xchg
aad
dec
fisubr
cwde
(bad)
retf
mov
mov
shl
and
cmp
pop
jae
jmp
enter
iret
in
xchg
fs
mov
neg
cmc
sti
dec
std
mov
jns
leave
jl
inc
lods
xchg
xor
pop
lock
push
xchg
addr16
pop
jne
icebp
adc
xchg
hlt
stc
mov
xor
mul
xchg
sbb
sub
adc
imul
loope
out
inc
mov
retf
cmc
or
shl
push
arpl
push
daa
cli
mov
aad
idiv
jmp
inc
xor
mov
stc
outs
leave
or
cmc
(bad)
xlat
mov
xchg
adc
push
ins
inc
mov
inc
mov
xor
sbb
add
loop
push
inc
vmread
mov
dec
and
jg
adc
je
cld
cmc
push
(bad)
ins
(bad)
mov
mov
cmp
xchg
aas
jmp
adc
add
cs
jne
push
add
and
cli
mov
pop
and
pop
pop
gs
bsr
pop
fs
in
cmps
sub
push
jl
dec
lea
push
stos
pop
xor
xor
test
mov
xchg
cmc
(bad)
out
cmc
loop
ret
iret
xor
jmp
inc
into
imul
daa
int
les
ret
add
push
test
mov
cmps
mov
and
arpl
mov
pop
outs
xabort
fwait
data16
and
inc
mov
xchg
dec
dec
dec
ret
and
add
inc
pop
inc
retf
xor
jp
jmp
mov
jmp
mov
cmp
out
push
mov
pop
push
ss
call
sahf
xor
into
xchg
add
xor
or
ins
enter
pop
add
xor
ret
dec
sub
fnstsw
add
jbe
shr
into
jp
(bad)
in
arpl
mov
cmps
out
dec
leave
mov
pop
push
push
adc
adc
jmp
movs
pusha
cli
mov
and
sahf
jo
das
xor
add
mov
jp
adc
jns
xor
pop
mov
popf
pop
ins
scas
sub
mov
xor
cmp
das
xchg
dec
mov
es
jl
dec
ret
popw
cmp
shl
mov
add
xchg
into
aas
inc
test
sub
or
adc
popf
mov
jmp
mov
cmp
xchg
push
outs
fsub
dec
into
sbb
xchg
inc
mov
adc
jnp
(bad)
dec
into
test
stos
bsf
fistp
repz
adc
sub
mov
loop
into
rcl
mov
cld
test
pop
jecxz
xchg
lods
in
test
inc
clc
in
aad
enter
call
mov
out
gs
out
jmp
fucomp
unpcklps
ins
in
mov
pop
out
popf
(bad)
or
retf
call
xor
sbb
imul
pop
in
mov
adc
pop
leave
pop
add
mov
sub
imul
xor
stos
or
pop
(bad)
icebp
aas
mul
adc
xchg
loope
je
ins
(bad)
in
into
das
push
pop
es
mov
loope
imul
adc
mov
shr
inc
inc
and
dec
xor
sbb
pop
add
lahf
fisub
pop
add
sub
loope
sahf
cmps
and
sub
test
xchg
cwde
mov
xchg
repnz
jne
sbb
push
cwde
dec
cwde
std
fsubr
popf
pop
dec
cld
cli
cmps
dec
jns
push
inc
in
inc
cwde
xor
sbb
or
jle
and
je
sbb
push
push
dec
mov
mov
inc
xor
xor
jg
je
add
xor
shl
inc
push
sbb
nop
aaa
xchg
add
push
leave
mov
adc
aas
mov
and
int
xor
adc
mov
in
in
imul
mov
cwde
(bad)
cmp
shl
arpl
mov
ds
je
add
not
cli
and
inc
scas
fcomp
cmp
pop
push
cmp
inc
and
hlt
push
sub
push
adc
in
cmp
adc
or
lea
xor
imul
push
inc
and
ror
sahf
sub
jb
ins
cs
fdivrp
div
pop
(bad)
std
sti
dec
in
(bad)
stos
push
mov
inc
push
imul
aam
mov
or
aaa
lock
or
cmp
xor
fucomi
movups
dec
sti
cmps
mov
fild
jno
xor
daa
movs
ins
pop
dec
push
popa
xor
mov
enter
sbb
movsx
push
sub
int3
popa
or
loop
sbb
sub
repz
repnz
dec
icebp
cmp
bound
pop
add
adc
test
jmp
pushf
mov
mov
cmp
xchg
pop
jecxz
or
sti
inc
push
add
jecxz
cmp
in
cmp
sbb
or
sub
mov
fwait
jp
movs
sahf
xor
sbb
movs
or
inc
jmp
xlat
mov
retf
pop
and
loope
in
inc
data16
push
jne
mov
sub
rcl
loopne
mov
mov
imul
sub
(bad)
hlt
dec
pop
out
scas
fs
rcl
dec
xlat
push
inc
add
mov
fisub
mov
xchg
lds
fnstenv
or
jg
or
(bad)
out
shr
sbb
cli
pop
push
jo
cmps
div
lock
cmps
ret
push
sbb
sbb
sub
mov
fnstcw
mov
sbb
clc
es
sar
popf
popa
xor
fcomp
imul
jl
inc
xlat
fsubrp
test
xchg
inc
inc
test
mov
test
jle
int
shr
push
int
lds
sbb
sbb
or
adc
inc
xchg
or
mov
jge
ss
fisub
push
movs
push
pop
sahf
cmp
imul
and
cmps
pop
mov
(bad)
pop
jl
js
xchg
ror
mov
push
out
cli
sbb
(bad)
mov
push
xor
push
mov
test
sub
popf
retf
rcr
jnp
repnz
push
out
cmp
add
arpl
sub
repz
pop
xchg
xchg
cmc
cdq
push
and
imul
sub
jns
pop
inc
xchg
adc
cmp
test
or
push
push
jl
dec
cmp
out
popa
xchg
ror
and
retf
js
xchg
test
cwde
std
push
cdq
arpl
and
das
jbe
imul
pop
lds
pusha
pop
sbb
ret
lea
scas
push
mov
mov
pop
jge
and
mov
shr
pop
rcr
and
sbb
adc
sbb
scas
(bad)
sar
dec
pop
push
pop
dec
and
mov
shl
test
sub
stc
ret
stc
scas
mov
add
bound
call
dec
xchg
jne
cmp
rep
stc
das
jae
mov
(bad)
iret
sbb
ficom
xor
pop
xor
sbb
mov
sub
jle
das
sub
xchg
jne
or
push
sub
test
loop
(bad)
icebp
cmc
(bad)
sti
imul
push
arpl
pushf
rcl
pushf
push
mov
sbb
inc
adc
in
movs
das
stc
imul
pop
lock
xor
push
mov
push
(bad)
scas
pop
int3
fstp
ficomp
dec
inc
into
add
xchg
pushf
xor
sbb
leave
push
std
inc
pop
test
pop
in
mov
call
lds
xrelease
xor
lahf
mov
test
xor
fmul
retf
pop
cmp
mov
popw
test
mov
pop
add
inc
in
adc
ret
sub
je
mov
out
out
jge
jae
xchg
mov
and
and
loop
mov
jecxz
xor
out
xchg
cdq
jae
enter
mov
mov
jbe
xchg
lea
push
mov
sbb
cmp
dec
mov
enter
mov
adc
push
stos
xor
add
test
js
mov
rcl
scas
sub
ins
pop
stc
fnsave
cmp
ror
mov
mov
in
movs
cli
cmp
or
mov
xchg
je
fisubr
mov
test
jnp
adc
jp
sub
scas
retf
enter
ficom
setno
out
mov
pop
cli
jno
imul
add
jbe
or
adc
mov
jmp
dec
out
mov
push
adc
iret
inc
rcl
mov
mov
add
fcomp
icebp
dec
js
sub
mov
inc
sub
mov
pop
cmps
mov
mov
sub
shl
adc
jb
cmps
dec
xchg
pusha
adc
xor
jbe
in
mov
add
aaa
inc
shl
jbe
mov
mov
mov
sahf
into
jle
xor
sahf
stos
cmp
cmp
je
lods
sbb
jbe
sahf
hlt
cwde
mov
ret
fnstcw
xor
mov
dec
xor
mov
mov
outs
dec
xchg
ret
out
push
jno
js
(bad)
out
fcomp
pop
nop
lock
mov
jmp
sar
xor
or
sub
repz
fistp
pop
jge
std
jg
xchg
dec
xchg
out
mov
lods
mov
cmp
iret
pop
jo
xor
icebp
movs
pusha
jg
cwde
inc
(bad)
cld
add
inc
adc
mov
sub
cmps
inc
cli
fcmovbe
out
out
fild
jp
(bad)
mov
fcomp
mov
xor
ret
adc
mov
dec
enter
mov
inc
in
sti
cmps
in
adc
lods
pop
(bad)
mov
push
fidiv
ins
cmp
loop
fisubr
sbb
mov
hlt
ret
outs
ins
sahf
xchg
jo
test
pushf
cmp
js
mov
xchg
(bad)
neg
outs
cmp
inc
pop
sbb
and
add
stos
and
outs
mov
pop
push
mov
mov
lods
mov
cwde
addr16
sub
shr
test
lds
outs
and
cmc
pop
ja
imul
xor
mov
cmp
dec
xchg
pop
pop
loope
adc
sub
std
pop
mov
inc
pop
push
imul
adc
jae
adc
out
adc
pop
dec
jb
or
dec
dec
mov
ins
(bad)
push
xlat
and
rcl
xor
stos
jne
rol
repnz
xchg
test
or
loope
cmp
add
fwait
xchg
retf
outs
sti
cmps
or
add
pusha
fidivr
out
add
cmp
jmp
jmp
ds
(bad)
popf
sbb
lods
out
and
mov
add
loop
jnp
jmp
and
loope
cmps
pop
jle
repz
and
sub
and
js
cmp
imul
add
xchg
jp
jl
lahf
and
adc
retf
jge
gs
icebp
push
retf
adc
jmp
out
aam
sub
mov
mov
or
pushf
sar
test
cmps
hlt
test
packssdw
test
nop
sub
aas
je
mov
inc
lea
xchg
or
sbb
loopne
jae
jp
out
pop
add
cmp
mov
shl
cld
xchg
jge
sbb
cmps
nop
loop
outs
test
jecxz
mov
pop
push
cs
jmp
loopne
rol
pop
or
jno
repz
sti
repnz
lock
pop
mov
out
push
sub
cmps
test
hlt
adc
imul
sbb
movs
stos
ror
jg
mov
movs
je
fsubr
hlt
ja
outs
push
add
mov
scas
mov
(bad)
cli
xchg
pop
enter
popa
mov
bound
(bad)
bnd
push
jnp
test
add
sub
cmp
aas
dec
and
ret
jmp
mov
cmp
mov
cmps
add
jmp
jmp
clc
cdq
fisubr
jmp
xlat
out
mov
ds
lods
leave
mov
ins
push
aam
imul
js
mov
(bad)
push
mov
jns
mov
lods
fisub
sub
and
dec
xlat
fnsave
daa
loope
push
scas
add
mov
lods
cmp
add
data16
mov
pop
outs
movs
jg
ret
leave
nop
inc
xor
adc
jns
mov
dec
out
add
or
xor
scas
xor
repz
or
mov
and
push
lock
cmps
adc
push
mov
inc
adc
es
inc
out
fistp
movs
add
mov
jp
(bad)
or
(bad)
dec
cwde
out
sbb
into
out
neg
gs
mov
std
dec
and
leave
aaa
xchg
scas
iret
mov
pusha
adc
dec
mov
test
sbb
xor
ret
aad
in
xchg
xor
es
xor
push
inc
dec
mul
sahf
les
inc
add
add
inc
int
push
sbb
inc
test
add
mov
in
sti
outs
adc
std
cmps
fwait
inc
add
sbb
or
lds
repnz
cmovp
fdiv
mov
cdq
imul
ja
lods
inc
stos
dec
loop
pop
mov
stos
(bad)
inc
inc
lods
icebp
fldenv
inc
mov
adc
push
mov
fidivr
sbb
or
fistp
fnstcw
or
out
sbb
sti
add
in
jmp
test
dec
leave
dec
and
leave
sbb
out
add
fdivrp
cmp
cmp
mov
or
std
push
xor
cld
fwait
cmp
sbb
xor
jns
(bad)
sbb
cwde
push
je
inc
adc
out
into
xchg
iret
(bad)
add
xor
movs
pop
xchg
push
sahf
into
cmp
xor
dec
fdivr
call
stc
jnp
mov
and
lea
ins
ja
bnd
or
mov
es
jge
int
test
popa
call
inc
sahf
aaa
mov
mov
jl
(bad)
sub
pop
(bad)
cld
adc
jmp
loope
cli
outs
dec
push
pop
cwde
adc
mov
cwde
dec
syscall
aad
xor
js
and
mov
mov
xor
loope
lock
popa
pop
mov
mov
(bad)
fild
xor
mov
xor
data16
and
and
inc
ret
cmp
rcr
retf
rcr
js
add
dec
lods
cmc
or
cdq
loopne
xchg
fwait
addr16
mov
popa
push
push
xchg
fsub
cmp
outs
cld
gs
fsubr
js
cmp
mov
jo
xchg
loopne
push
mov
sti
cmp
and
adc
ret
push
movzx
mov
xor
int3
stc
jp
cmp
push
enter
jecxz
xor
out
sbb
sbb
jnp
mov
cmp
fsubr
jg
das
daa
in
stos
mov
jo
imul
mov
sbb
div
int3
and
out
or
fwait
inc
pop
adc
and
aad
repz
cmp
jg
or
and
mov
in
in
cmp
push
add
mov
data16
jmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
not
jne
xor
ret
xchg
and
jo
adc
xor
cwde
movs
adc
or
in
stos
call
lods
jb
push
xchg
cmps
mov
jo
cmps
and
sub
test
xchg
cwde
mov
xchg
repnz
jne
sbb
push
cwde
dec
cwde
std
fsubr
and
xor
shl
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
rcr
lods
cmp
movs
mov
xchg
pop
jp
in
adc
xchg
cmp
sbb
retf
loop
cmps
lahf
pop
mov
(bad)
aas
push
sbb
pop
loope
push
out
ins
cmp
int3
pushf
sub
int3
mov
es
aam
sbb
push
mov
dec
scas
call
or
das
push
mov
and
dec
inc
ret
adc
xchg
dec
nop
call
test
sbb
or
(bad)
mov
arpl
loopne
test
mov
outs
sub
call
sti
aad
xor
in
or
mov
nop
cmp
ror
add
sub
cmps
stc
push
mov
jmp
jae
push
rcr
mov
js
(bad)
repz
dec
inc
aas
imul
push
ss
sbb
xchg
push
lock
pusha
popa
pop
inc
jg
(bad)
clc
sub
and
ficomp
xchg
inc
cmp
inc
push
cmp
in
lea
lods
lods
fcomp
add
mov
sar
in
outs
test
mov
sbb
dec
(bad)
jmp
xor
sbb
outs
(bad)
mov
lock
fdivr
add
in
in
jp
int
cmc
in
fisubr
scas
cmp
mov
jge
push
loopne
rcr
or
mov
popa
push
ja
dec
dec
cmp
std
adc
in
dec
and
adc
(bad)
sbb
inc
lahf
test
icebp
cli
pop
mov
jbe
out
jbe
adc
and
inc
aaa
pop
jo
dec
or
movs
pop
in
mov
or
pop
js
cmps
fst
pop
mov
add
shl
xlat
cs
sub
(bad)
jb
cmp
dec
pop
add
in
leave
test
or
cmc
inc
repnz
ins
jae
and
dec
sbb
push
jnp
aas
or
fwait
mov
add
sar
jecxz
imul
fld
dec
jo
arpl
push
test
mov
pop
mov
into
jmp
inc
popa
xchg
(bad)
dec
push
inc
add
rcl
les
(bad)
dec
sub
cmp
nop
xor
punpckhdq
adc
inc
and
imul
mov
outs
pop
cs
push
pusha
movs
dec
sub
retf
jecxz
mov
loopne
pushf
arpl
pop
(bad)
xor
fcmovnb
outs
rcl
scas
(bad)
sub
je
pop
cmp
add
nop
mov
daa
or
retf
dec
inc
lds
xchg
movs
pop
xor
and
(bad)
sti
adc
pop
jnp
mov
aaa
push
inc
sti
loope
bound
and
inc
jl
fcom
enter
stos
sbb
retf
pop
jle
(bad)
(bad)
je
lods
add
cmp
mul
xor
xor
dec
pop
push
jecxz
test
lea
xor
in
shl
add
scas
iret
or
adc
adc
icebp
repnz
sub
rol
sub
and
push
jno
dec
movs
add
push
jl
ins
mov
(bad)
aam
js
mov
test
pop
mov
push
push
cmps
lock
xchg
ror
test
mov
mov
push
jecxz
pop
xor
fisub
sahf
jbe
dec
repz
dec
push
mov
mov
retf
fs
out
(bad)
retf
xor
xor
fist
mov
cmp
pop
adc
mov
push
cmp
mov
out
cld
xchg
xor
int3
jbe
xchg
and
movs
jp
std
std
sub
pop
mov
ror
lods
xchg
dec
(bad)
aam
sbb
retf
cmc
jne
sbb
(bad)
dec
push
xor
and
fidivr
stos
(bad)
xchg
sahf
or
fwait
arpl
mov
loope
enter
sar
adc
pop
push
or
adc
push
or
das
stos
mov
ins
pop
push
push
or
int3
mov
mov
or
repnz
fsub
in
jg
xchg
xchg
jle
cmps
ins
mov
shr
data16
bound
fcmovbe
cmp
jmp
icebp
(bad)
mov
popa
aad
mov
mov
neg
cmp
ins
test
sub
test
push
or
pop
jecxz
jle
push
xchg
in
inc
push
je
pop
mov
mov
pop
and
loop
jmp
and
mov
test
shl
call
lods
mov
fisub
cmc
inc
or
in
sub
std
jp
jo
mov
sbb
rol
ss
mov
mov
pop
dec
mov
aam
inc
data16
movs
push
jbe
loopne
xor
aam
pushf
jae
jbe
outs
sub
in
jns
cmps
(bad)
jbe
pop
imul
mov
mov
cmp
cmp
mov
movs
ffree
pop
sub
dec
adc
push
mov
sbb
xor
outs
and
xor
cmps
inc
retf
sub
and
inc
or
arpl
fsub
inc
pusha
fs
fisttp
out
mov
cmps
js
retf
push
fmul
mov
loopne
dec
out
dec
sub
mov
test
loopne
adc
jmp
bound
or
ret
in
nop
mov
(bad)
cmp
mov
nop
mov
sbb
mov
jmp
fs
out
adc
jbe
push
xchg
std
lods
cs
sbb
sahf
inc
or
fnstsw
mov
inc
adc
mov
pusha
neg
sbb
sub
jl
(bad)
mov
cmp
stos
adc
mov
and
lahf
push
pop
cmps
shr
mov
or
retf
mov
mov
inc
jmp
adc
mov
xor
push
arpl
test
(bad)
ss
aas
mov
add
ror
enter
jmp
(bad)
lock
repz
sub
xchg
call
icebp
cmp
leave
je
nop
xor
xor
inc
mov
call
push
in
loopne
jne
sub
jg
aas
xchg
inc
xchg
inc
sub
push
dec
add
inc
into
rol
mov
hlt
xchg
dec
fistp
cmp
xor
cmp
sbb
dec
(bad)
push
or
inc
outs
cmp
into
shl
xor
stc
pop
je
lods
popf
rol
jmp
bound
call
add
sub
cmp
out
in
inc
or
mov
cmps
fimul
lds
mov
cs
sbb
sbb
pop
je
ss
sub
das
inc
mov
push
jne
mov
jae
cvtpi2ps
dec
in
mov
popf
push
sar
xor
(bad)
or
jno
add
inc
and
or
lods
add
sbb
push
mov
int
nop
loope
push
pop
dec
fcomi
lds
addr16
push
fwait
lods
not
add
dec
popf
jmp
test
pop
jo
sahf
fwait
sbb
mov
adc
cmp
repz
dec
mov
movs
lahf
popf
jle
inc
add
mov
fild
jecxz
movs
push
mov
cmps
mov
mov
lods
sub
ja
cmps
push
sahf
cdq
(bad)
cli
pop
ins
xlat
push
inc
(bad)
stc
arpl
jno
dec
xor
mov
jns
dec
test
es
jnp
sbb
pop
or
xchg
retf
xchg
out
aad
adc
sbb
add
xor
scas
push
or
inc
in
lods
jo
fcomp
popa
fwait
sub
ret
dec
call
jne
jl
push
dec
mov
jbe
mov
(bad)
ss
dec
dec
popa
push
adc
movaps
in
sbb
mov
mov
pop
out
ret
jg
retf
cmps
or
mov
mov
lods
in
icebp
(bad)
mov
das
xor
cwde
pop
mov
sbb
or
push
sbb
gs
(bad)
addr16
jne
mov
jb
mov
jmp
iret
push
sahf
add
mov
out
bound
out
inc
inc
push
enter
pop
arpl
mov
aas
jb
inc
jmp
mov
xchg
push
(bad)
push
jne
cmc
stc
stc
xor
xor
pop
and
jle
clc
mov
sub
pop
add
or
imul
mov
ret
add
mov
pop
imul
daa
test
les
mov
and
cld
(bad)
mov
ret
and
cmps
mov
cdq
mov
pop
xor
xor
or
pop
mov
arpl
cmps
adc
div
or
int
mov
inc
movs
int
lock
jne
dec
ja
xchg
mov
gs
out
lods
jo
push
add
dec
(bad)
cld
les
iret
mov
out
fwait
jo
jno
test
push
sub
or
ins
sbb
dec
rcr
lea
stc
icebp
dec
push
sub
test
mov
add
shl
jmp
daa
jno
sub
or
jb
dec
mov
mov
lods
call
jp
out
jbe
push
sbb
jmp
aad
pop
push
pop
out
fadd
add
aas
and
pusha
pusha
dec
and
pmulhw
fs
cmp
call
fidivr
icebp
les
push
push
sub
stc
jbe
(bad)
xchg
repnz
test
je
dec
cmps
aaa
push
inc
(bad)
imul
movs
xchg
das
jo
sar
(bad)
push
push
enter
xchg
mov
js
cld
adc
dec
cmp
fwait
fwait
mov
or
js
aaa
jl
cmp
xor
mov
test
sahf
cmp
int
xchg
fwait
mov
int3
shl
adc
add
cld
shl
mov
cmps
push
out
xchg
std
ins
int
retf
loopne
and
cli
ret
in
adc
xchg
pop
lods
inc
test
dec
hlt
cmp
push
sbb
lahf
(bad)
test
ret
addr16
fsqrt
mov
popa
push
popf
lds
hlt
jo
and
pop
xchg
add
mov
and
push
adc
in
sub
sar
data16
add
(bad)
int3
sub
not
sbb
and
add
sbb
cli
mov
xchg
ret
(bad)
jns
mov
aaa
jg
out
inc
mov
push
sbb
push
popa
push
mov
mov
js
fyl2x
int3
stc
xchg
mov
pop
loopne
pushf
movs
sahf
xchg
fincstp
pop
stos
dec
cvtps2pi
or
inc
loope
add
stc
(bad)
retf
xchg
sub
mov
and
je
sbb
test
jb
out
pop
mov
cli
test
inc
mov
lods
sbb
int
rcr
sbb
dec
jmp
pop
add
sbb
pushf
jno
and
stos
test
mov
xchg
mov
dec
jnp
jbe
mov
xchg
push
and
aas
push
push
cmps
retf
push
pusha
lea
mov
dec
jns
pop
sbb
leave
pop
leave
cwde
call
nop
xor
leave
or
pop
in
loope
fsubr
jne
loope
jb
addr16
jmp
mov
pusha
(bad)
in
push
mov
lahf
mov
outs
stos
std
and
sti
mov
cmc
jno
rol
and
xor
sbb
or
pop
pushf
aas
inc
dec
inc
lds
inc
and
jmp
mov
in
das
stc
popf
cld
call
mov
pop
xchg
call
out
lods
mov
mov
push
clc
pushf
popa
mov
bound
retf
hlt
ret
sahf
out
lea
test
cwde
pop
lds
push
or
sbb
les
pop
mov
lods
mov
sahf
(bad)
lahf
pop
mov
add
out
dec
test
or
outs
jge
pop
cdq
in
pop
xchg
fadd
lahf
pushf
jo
add
xor
adc
xchg
inc
mov
inc
cmps
enter
xor
and
das
and
mov
sbb
pushf
rol
sbb
pop
addr16
movs
xchg
jae
xchg
gs
dec
add
cmps
out
mov
mov
xor
push
jle
mov
adc
ja
ret
adc
ins
aaa
mov
mov
cmp
mov
shl
add
pushw
addr16
mov
sbb
repz
mov
movs
mov
dec
mov
inc
addr16
xchg
shr
mov
fist
nop
rcr
data16
jo
and
mov
mov
mov
jmp
cmp
sbb
enter
clc
xor
or
out
movs
jl
jmp
rcl
data16
clc
int
mov
mov
sahf
fldenv
pop
mov
or
stc
jo
pushf
sub
jnp
test
pusha
retf
shl
pusha
push
stos
adc
add
inc
dec
jbe
(bad)
adc
ja
aam
xor
push
jmp
push
push
fisttp
adc
js
unpckhps
pop
sbb
jp
and
xor
push
fld
lock
jmp
and
and
push
mov
out
retf
outs
into
icebp
pop
fst
pop
movs
adc
add
push
icebp
pop
inc
or
bound
mov
mov
or
adc
xor
cmps
aad
in
loope
adc
mov
mov
push
sbb
sti
cmps
into
xor
cmp
cmp
lods
lahf
ss
jne
cld
in
fistp
inc
hlt
popf
mov
xor
fcom
mov
push
xchg
in
ss
pop
stos
sahf
inc
dec
mov
repnz
jg
aas
loope
adc
(bad)
cdq
rcl
shr
add
sti
test
push
pop
pop
xchg
mov
in
add
gs
mov
adc
mov
cwde
hlt
push
addr16
neg
fld
pushf
out
mov
push
pushf
daa
and
xchg
nop
pusha
aam
mov
or
fnstsw
fst
out
inc
inc
iret
fs
aaa
mov
popf
and
and
sub
push
mov
rcr
jmp
xor
push
out
xlat
hlt
jmp
or
loop
dec
ror
pusha
clc
fs
retf
iret
lods
popa
xchg
jo
(bad)
dec
js
ja
xchg
adc
in
inc
mov
cld
jle
push
mov
jo
mov
add
jl
(bad)
cmc
(bad)
outs
inc
popa
mov
xor
pop
sbb
(bad)
add
jmp
fucom
jmp
(bad)
and
mov
jnp
test
jp
or
push
les
xchg
into
pop
add
lock
ins
xor
dec
leave
push
out
enter
push
xor
adc
out
out
jmp
xchg
inc
ret
sbb
sbb
ficomp
and
idiv
pop
mov
stc
in
pop
pop
inc
dec
add
and
cmps
pop
push
sbb
popa
sbb
and
mov
out
mov
sbb
sbb
jb
loop
pop
sub
jne
clc
sbb
comiss
jae
add
movs
fbld
mov
lea
fld
cmp
pop
call
jle
xor
gs
jo
fidivr
mov
push
scas
stos
cli
neg
ins
scas
jl
add
pop
mov
cmps
in
add
leave
inc
xchg
aaa
cmp
jge
sub
inc
push
std
in
push
outs
int3
in
in
fs
adc
xchg
adc
push
mov
push
fimul
jne
or
push
test
rol
fistp
sbb
pop
test
stos
pop
jp
mov
call
pop
or
stos
cwde
inc
jbe
in
xor
mov
push
mov
pop
mov
cmp
rcr
dec
inc
sub
or
inc
mov
or
cmp
sub
adc
pop
out
xchg
enter
fsubr
mov
in
in
jge
aas
call
aad
push
or
sbb
push
sti
add
loope
jnp
test
xor
movs
shl
xchg
shr
test
sar
or
jge
sub
fdivr
ins
or
jne
out
call
cmp
and
mov
repz
dec
pop
popa
(bad)
ins
sbb
sti
xchg
stos
fldenv
sub
punpckhdq
cmc
jp
sub
pop
leave
add
add
mov
and
loop
jge
cmc
dec
pop
pushf
sub
lds
(bad)
int3
pusha
outs
sub
retf
leave
sbb
loopne
sbb
inc
fiadd
aas
xlat
sar
mov
cmp
mov
adc
xchg
(bad)
rcl
cmp
and
test
jmp
pushf
ja
daa
daa
dec
imul
out
or
into
dec
movs
das
outs
(bad)
in
or
adc
or
(bad)
rcl
arpl
inc
test
lahf
mov
sub
mov
mov
repnz
in
repz
xchg
push
mov
or
test
aad
loope
pop
ret
and
jecxz
in
out
or
neg
cli
add
shr
sti
pop
cmps
pop
adc
xor
in
mov
pop
test
push
es
mov
adc
push
mov
add
fucomi
xchg
pop
std
movs
test
dec
ret
ret
shl
aad
cmp
fnstenv
into
outs
push
jg
jae
mov
je
add
sub
call
or
jbe
es
retf
jmp
les
push
push
(bad)
jno
push
iret
call
sub
push
mov
adc
popf
jae
push
fchs
int
sub
call
fcom
cdq
les
or
ja
fldenv
adc
das
jmp
stos
mov
push
out
dec
dec
call
cmp
and
(bad)
popa
jbe
push
xchg
jnp
clc
daa
dec
add
add
int3
jno
pusha
stos
jbe
adc
xchg
imul
push
and
movs
push
in
std
lock
jecxz
loopne
(bad)
mov
pushf
imul
les
add
fiadd
mov
mov
call
bnd
pusha
mov
stos
push
pushf
mov
ins
jge
xor
add
in
and
mov
cmp
add
dec
push
nop
bound
movs
sub
stos
xchg
mov
loopne
out
ja
jmp
adc
lods
cdq
add
sbb
test
mov
add
fnstsw
lds
xor
ds
cld
sahf
xchg
out
sar
mov
mov
stos
push
pop
test
xchg
adc
adc
cli
pushf
movs
pop
movs
mov
mov
pop
iret
xor
ds
mov
push
(bad)
cld
test
push
enter
adc
test
dec
cli
mov
cs
mov
and
cwde
mov
push
sbb
sub
xor
es
cdq
mov
imul
ins
sub
lock
dec
call
mov
pop
idiv
push
scas
mov
int
pop
pop
push
sub
jb
dec
iret
pop
ja
and
fadd
not
aam
or
pop
in
fmul
and
xchg
mov
jecxz
test
int
mov
fadd
(bad)
int
cmp
loope
xor
mov
or
sbb
fistp
or
push
sub
in
jae
xor
sbb
(bad)
cmp
cmp
fucomp
push
ins
movaps
and
psubsw
je
test
mov
sub
je
xchg
mov
and
test
add
xchg
xor
div
inc
xchg
adc
addr16
pop
mov
test
or
mov
mov
gs
(bad)
int
lahf
pushf
mov
(bad)
adc
add
jl
es
jmp
aam
and
lods
mov
mov
pop
cmc
mov
lock
push
test
push
movs
pop
xor
mov
or
scas
add
jns
pushf
add
sbb
js
in
pop
sub
mov
sbb
cdq
push
inc
and
shl
jl
lods
pop
imul
aam
jl
push
adc
loopne
mov
js
dec
(bad)
cli
jecxz
add
(bad)
jp
idiv
leave
idiv
(bad)
loope
jno
mov
push
aas
sbb
push
push
imul
mov
mov
cmps
jbe
popa
cwde
popf
je
js
pop
mov
mov
xchg
aaa
addr16
dec
jmp
iret
aas
xchg
mov
imul
mov
lods
cvtdq2ps
mov
ins
pop
jge
adc
pop
pop
scas
out
movs
mov
inc
xchg
adc
loopne
lods
popf
arpl
out
cmp
neg
or
inc
mov
mov
ds
loop
or
push
ins
xor
sub
xor
mov
in
sub
hlt
dec
pop
or
jae
sbb
lds
popa
loope
inc
xchg
lds
jno
cmps
movs
sti
and
push
lock
sub
push
cmp
ficomp
enter
repnz
stc
lds
loop
cmps
xchg
mov
sub
sub
dec
in
rcr
test
ja
and
scas
xchg
add
fst
(bad)
jle
or
scas
cmp
idiv
sbb
imul
mov
inc
inc
sbb
call
mov
lods
push
sub
je
mov
mov
mov
repz
aas
fist
and
jl
and
xchg
stos
and
inc
jmp
jl
dec
nop
outs
pop
and
aaa
sbb
out
shr
(bad)
sar
out
enter
pop
cmp
mov
data16
mov
rcr
pop
lods
pop
mov
push
addr16
add
and
jno
sub
iret
push
inc
pop
or
aaa
aaa
ror
stos
xchg
std
(bad)
pop
pop
test
mov
les
les
ror
(bad)
mov
fild
jp
inc
rol
cwde
pop
scas
adc
push
mov
mov
mov
cwde
loope
or
cld
xchg
jbe
and
mov
in
cmp
pop
mov
outs
or
(bad)
cmps
es
sbb
cmp
fidivr
mov
mov
ja
push
fbld
dec
xor
jnp
push
sub
cmps
lea
mov
push
cmc
(bad)
aam
push
mov
or
mov
mov
mov
(bad)
fs
xlat
imul
adc
ins
pop
(bad)
ja
(bad)
and
jecxz
sbb
fcom
es
xchg
inc
mov
test
add
xor
dec
rcl
popa
out
sbb
adc
cmp
inc
push
out
scas
add
jmp
arpl
mov
popf
neg
and
aad
and
test
jle
imul
sub
fisubr
adc
out
or
sub
add
mov
xor
inc
mov
setne
xlat
xlat
mov
(bad)
aas
xchg
add
cmp
add
cmp
xor
loop
pop
int
jge
test
hlt
or
cmp
(bad)
dec
or
es
unpckhps
adc
neg
pop
daa
mov
ret
ror
int
lods
ret
and
ins
jmp
clc
outs
int3
jecxz
(bad)
cmps
xlat
aad
mov
and
dec
fst
data16
sahf
shr
pop
mov
push
mov
out
repz
mov
loop
(bad)
mov
shl
sbb
out
test
je
xchg
sub
mov
mov
or
pushf
add
out
push
outs
stos
cmp
ds
repnz
in
iret
xlat
mov
cmp
cmps
bound
test
mov
mov
pop
ds
not
mov
mov
jmp
push
jecxz
inc
inc
or
inc
sahf
sbb
in
mov
xchg
pushf
into
sbb
(bad)
xchg
xchg
xlat
sti
push
jbe
repz
clc
push
ins
add
xor
cmp
xor
ficomp
ins
(bad)
cmps
cmp
pop
xor
jle
mov
cmp
hlt
call
dec
mov
mov
pop
push
cdq
dec
rcl
mov
nop
out
repnz
pop
mov
loope
add
clc
test
jg
cmp
loope
or
jmp
inc
lods
in
retf
mov
dec
sbb
(bad)
outs
jbe
hlt
mov
bound
jp
jo
ficom
call
daa
rcr
mov
mov
mov
call
push
cmp
bound
fs
dec
gs
jmp
xchg
pushf
lea
push
jo
adc
jp
xlat
loope
mov
add
mov
lock
shl
sbb
push
imul
xor
ret
int
xor
mov
aaa
sub
xor
dec
(bad)
std
cld
(bad)
jmp
icebp
out
popf
sub
pop
pop
mov
xchg
fld
movs
jge
ins
sbb
sub
repnz
cld
lods
inc
xor
sar
dec
pop
cdq
and
rcl
ss
lods
hlt
sbb
push
adc
int
mov
add
cmp
loopne
das
pop
nop
mov
fdiv
bound
xor
sar
or
aad
pop
mov
movs
xchg
dec
(bad)
(bad)
js
cmps
and
add
cmps
dec
iret
lods
dec
dec
retf
inc
movs
inc
pop
int3
mov
mov
leave
mov
push
add
and
and
lahf
std
and
jge
aas
jg
ret
jbe
jmp
ds
out
cmp
call
fld
adc
fld
int3
or
pop
push
sbb
jmpw
loope
adc
call
jg
inc
mov
sbb
pop
jb
add
ret
ror
lock
sub
rdmsr
prefetch
or
aaa
jge
sahf
(bad)
push
adc
jo
and
pop
push
cmp
(bad)
or
out
leave
outs
push
(bad)
adc
inc
pop
mov
jge
mov
rol
pushf
pop
ds
dec
adc
fsubr
(bad)
adc
movups
mov
pop
call
dec
push
xor
repnz
sub
das
lea
cld
mov
push
add
repnz
scas
shr
icebp
lods
add
add
add
push
jb
ret
sbb
fnstenvw
pop
(bad)
icebp
add
cwde
xor
sahf
shl
in
lea
ds
ret
mov
cs
pop
sbb
cmp
test
mov
adc
gs
rcr
popa
js
mov
xor
cwde
pop
out
xchg
push
outs
int
dec
lgs
mov
das
enter
push
fst
adc
dec
outs
xchg
lahf
cwde
(bad)
mov
sub
mov
dec
push
and
sub
mov
sub
ret
cmc
or
inc
mov
push
pop
je
imul
fwait
xchg
jmp
inc
jne
jnp
mov
pop
cmp
sbb
enter
or
jecxz
out
adc
pop
cld
push
jl
imul
stos
inc
ja
test
out
pextrw
sbb
cmp
(bad)
ficomp
add
pop
push
mov
sub
std
mov
push
add
fcmovb
xchg
in
jge
sbb
stos
shr
(bad)
cmc
(bad)
mov
movs
(bad)
push
call
sub
jmp
dec
cmp
pop
cmps
push
lock
pop
pop
fsubr
sbb
int
les
push
repz
cdq
mov
outs
pusha
aaa
test
sub
adc
add
fnstsw
clc
or
mov
inc
nop
xchg
and
push
xor
and
mov
scas
ret
shl
outs
sub
lods
and
lds
mov
push
sahf
adc
mov
mov
ret
ret
daa
cdq
jecxz
xor
js
test
je
cmp
in
lods
mov
inc
ficom
xchg
ror
into
jb
add
jge
mov
(bad)
(bad)
jg
adc
or
dec
repz
ds
mov
mov
sbb
in
xchg
xor
dec
(bad)
stos
push
fld
mov
push
call
pop
jbe
jns
gs
cwde
in
outs
jmp
sub
aas
std
clc
add
mov
lea
ror
push
mov
outs
imul
add
in
mov
out
mov
popf
pop
inc
and
dec
xor
sbb
mov
jmp
je
push
retf
gs
mov
cli
test
xor
ret
mov
jbe
adc
cld
pusha
je
mov
gs
mov
(bad)
pop
jl
adc
movs
xchg
xchg
adc
xchg
inc
scas
mov
hlt
push
test
sbb
mov
fimul
aam
mov
int
xchg
xor
push
lahf
mov
or
or
sahf
jns
rcr
fs
imul
int3
lahf
mov
xchg
ins
test
lahf
aam
mov
outs
jle
std
fsub
fnstenv
xchg
sti
dec
jb
(bad)
adc
test
pop
jge
cmp
xchg
jbe
sahf
(bad)
adc
add
jne
pushf
mov
push
popa
dec
or
test
outs
mov
add
daa
xchg
push
std
(bad)
es
pop
ins
nop
ss
(bad)
lods
push
cdq
or
ss
pop
mov
es
inc
mov
hlt
les
imul
and
or
mov
lods
jecxz
das
aas
cmp
fcomp
imul
xchg
mov
or
ficom
les
in
leave
ds
sub
shr
cmps
mov
inc
cmp
jp
leave
mov
ret
dec
(bad)
push
fiadd
push
test
and
sub
and
fiadd
lds
pop
mov
xor
jmp
mov
and
push
sbb
mov
mov
cmps
ins
popa
push
adc
shl
ins
and
mov
and
fist
(bad)
je
push
push
ins
out
lock
retf
push
jae
stc
inc
(bad)
fucomi
or
fs
enter
push
les
stos
pop
shr
xchg
je
mov
jbe
pop
retf
push
(bad)
out
push
mov
movs
fwait
push
rcl
add
ror
fmul
jg
(bad)
movs
adc
sub
sub
mov
enter
into
out
clc
inc
or
jmp
push
rcl
je
jb
sub
mov
add
jle
nop
sub
rol
in
cmp
cli
js
and
aaa
mov
popf
and
cmp
inc
xor
loopne
jnp
mov
aaa
cmp
ja
loopne
movs
iret
add
repnz
jbe
inc
cmps
inc
or
inc
je
fsubr
cmp
add
mov
(bad)
enter
push
mov
push
(bad)
repnz
xchg
nop
into
stos
inc
adc
(bad)
adc
inc
xlat
pop
out
cmp
sbb
or
outs
into
mov
int3
fcomp
and
mov
mov
or
jno
lods
mov
(bad)
fdivr
(bad)
in
sar
push
push
dec
ja
out
imul
pop
scas
xlat
cmp
sub
push
mov
call
icebp
pop
(bad)
fild
add
das
cmp
cmps
jge
push
jb
or
xchg
sbb
rol
hlt
pop
mov
test
in
imul
inc
xchg
mov
into
inc
inc
cmp
clc
xchg
loop
stos
fisub
or
retf
sbb
cmps
xchg
push
pop
imul
addr16
idiv
inc
fwait
mov
fisub
cmp
lock
(bad)
shr
ror
sahf
test
jbe
fucomp
or
mov
add
loop
dec
les
les
jl
out
cmp
mov
sub
lods
(bad)
aas
stos
xlat
sub
sar
(bad)
rcr
inc
popf
(bad)
cmp
and
cmc
sahf
inc
loopne
bound
(bad)
or
mov
pop
aas
fidiv
addr16
repnz
mov
cli
push
pop
js
mov
cs
rol
pop
cmp
cmc
int3
int
sub
dec
jnp
add
(bad)
jns
sahf
mov
mov
pop
sbb
mov
cld
clc
int3
jne
push
inc
loopne
shl
adc
addr16
or
add
mov
cs
pop
pop
not
push
pop
pop
add
jns
sti
pop
dec
push
out
xchg
repnz
jge
int3
(bad)
cmp
scas
sbb
mov
popa
adc
or
fisubr
and
repz
mov
lods
ds
es
cdq
mov
fucomp
enter
push
mov
or
test
sub
jl
lods
fadd
dec
xlat
mov
ja
jbe
icebp
sahf
ds
and
inc
test
test
ds
mov
xor
xchg
into
adc
or
or
mov
jg
mov
or
mov
pushf
mov
sub
mov
sbb
jmp
adc
in
pop
mov
loop
into
test
int
xor
push
outs
add
and
add
xor
xchg
sbb
cld
mov
xchg
xchg
xlat
jnp
xor
aad
mov
mov
aas
rcr
aad
pop
iret
loop
rol
lods
add
daa
add
cmp
(bad)
dec
push
aam
mov
pop
and
test
jbe
mov
ret
cld
fdivr
mov
push
dec
je
xchg
mov
sub
mov
push
mov
out
fisub
pop
cmp
test
movs
mov
xor
jb
aaa
cmp
fnstcw
sbb
fist
pop
repnz
in
shr
arpl
bound
ja
push
pushf
(bad)
sub
ss
stos
jbe
dec
int
xchg
enter
outs
inc
enter
dec
adc
mov
mov
ss
lods
adc
xchg
mov
mov
pop
or
imul
mov
or
das
nop
ret
fistp
mov
ds
pop
jl
adc
arpl
test
pop
lahf
mov
pushf
mov
stos
and
mov
sub
mov
jl
sti
and
adc
fst
(bad)
leave
sbb
or
jge
mov
push
test
test
popa
xchg
jo
enter
lods
out
in
pop
int3
pusha
shl
inc
xchg
rcr
push
(bad)
out
mov
dec
cmc
sahf
fmul
in
aas
mov
xchg
test
imul
inc
(bad)
lods
test
xor
ret
les
shr
test
or
sahf
ret
sub
xchg
inc
mov
mov
inc
test
dec
lahf
xchg
push
cwde
enter
shr
xor
jl
mov
scas
retf
mov
add
test
adc
rcr
push
push
inc
cli
mov
push
fst
dec
jns
loopne
daa
pop
fdivr
out
cmp
add
jbe
xor
xor
cmp
sbb
cmp
xchg
les
daa
mov
push
test
mov
call
or
sbb
add
push
(bad)
repnz
sbb
mov
ds
clc
loop
call
sbb
out
xor
cmp
push
outs
pop
push
ror
icebp
push
mov
int3
gs
out
jno
jl
(bad)
and
and
fistp
int3
push
sub
xchg
sub
inc
adc
aam
adc
jle
iret
(bad)
iret
or
daa
inc
sub
sub
idiv
inc
popa
mov
push
inc
pop
aas
lock
jb
xchg
add
push
xchg
(bad)
cmps
pop
mov
xor
and
pusha
sbb
mov
xchg
jmp
das
pop
repnz
cmc
lock
in
int3
add
lods
mov
pop
dec
clc
(bad)
in
add
imul
inc
adc
cs
int3
call
dec
pop
lods
jno
jp
dec
jne
into
in
mov
mov
fistp
pop
mov
jge
sbb
mov
adc
(bad)
leave
jmp
rol
mov
jmp
out
imul
jne
ss
fs
fsubr
and
add
cwde
in
movs
xor
imul
add
mov
or
jg
adc
loope
sub
fwait
test
lods
jne
push
push
outs
lock
outs
cs
jp
mov
push
push
or
jno
jno
xchg
dec
xchg
neg
jmp
inc
sbb
inc
mov
cmps
inc
test
inc
lock
daa
jge
fwait
iret
or
jne
mov
outs
clc
jmp
mov
mov
mov
mov
or
cmp
and
xor
leave
mov
xor
loopne
sar
mov
test
imul
jnp
(bad)
int3
xchg
enter
add
aas
push
mov
xchg
jo
xor
jno
or
pop
mov
add
push
and
pop
jp
cmps
and
pop
sbb
and
jno
(bad)
mov
mov
mov
pop
dec
leave
dec
dec
std
(bad)
les
aaa
mov
jo
mov
push
and
pop
lock
or
jge
mov
push
or
pop
xchg
inc
popf
ficom
lods
lods
nop
cmp
jl
sbb
pop
fwait
and
or
mov
pop
sbb
into
sbb
mov
lods
mov
movs
aam
ret
es
call
sub
jmp
sub
fs
cmps
sbb
cmp
ret
jnp
dec
sti
imul
jbe
retf
mul
jmp
xchg
or
xor
jmp
sbb
(bad)
mov
imul
sar
jb
mov
cmp
push
mov
cdq
fidiv
iret
pop
les
push
sti
add
clc
(bad)
test
rcr
rcl
ins
mov
test
mov
ffree
stos
jmp
pushf
or
ds
dec
mov
or
adc
and
ins
dec
arpl
push
lock
xor
push
lea
add
xchg
out
femms
pop
jmp
sub
and
and
mov
popa
push
xor
add
iret
dec
jl
out
push
dec
int3
or
arpl
mov
sti
js
scas
retf
test
sahf
and
adc
mov
xchg
mov
(bad)
xor
mov
pop
jae
popa
loope
in
enter
push
(bad)
pusha
mov
jns
stos
dec
or
jbe
xchg
or
pushaw
sub
stos
int
mov
cmp
imul
cmp
sbb
mov
out
test
push
pop
lods
add
push
sti
shl
cmc
cli
xchg
call
mov
das
shr
scas
mov
stc
repz
cld
loop
sar
push
dec
stos
push
mov
xor
xor
dec
loop
or
inc
push
call
iret
test
pop
(bad)
sub
xchg
and
pop
stos
xchg
add
das
mov
add
cmc
aaa
syscall
push
adc
xor
sbb
aaa
push
out
fcmovnu
mov
retf
add
les
popf
push
mov
mov
push
leave
cdq
fwait
push
push
pushf
inc
mov
or
(bad)
jp
push
ret
loopne
das
sar
pop
test
adc
pop
add
lods
and
into
addr16
sbb
out
jg
dec
cli
lea
scas
mov
addr16
push
ss
mov
or
scas
iret
and
daa
add
retf
xor
xor
stc
lods
cdq
into
into
mov
mov
or
cmp
mov
sub
mov
pop
in
xchg
je
cmc
movs
loope
out
mov
lods
loop
jo
jo
push
sub
jae
ja
adc
or
mov
dec
fs
sbb
xchg
mov
imul
dec
and
popa
pop
push
fdivrp
outs
data16
loope
and
test
popa
pop
inc
call
xor
adc
outs
fwait
mov
cmp
cmp
push
and
push
adc
outs
ret
icebp
inc
psrlq
xchg
inc
jmp
push
xchg
sar
pop
out
xchg
mov
sahf
dec
fpatan
lea
mov
mov
mov
cmp
in
sbb
or
inc
inc
sbb
cmp
out
daa
fisttp
sbb
sub
ja
popf
jmp
ret
inc
add
mov
add
inc
add
sub
jle
dec
stos
bound
popf
add
repnz
imul
ret
xor
xor
aas
movs
xor
cli
inc
mov
mov
mov
sub
movs
jo
dec
test
lods
sti
xchg
mov
push
xchg
or
retf
fcomp
sbb
sbb
cli
mov
or
mov
ins
add
js
fldcw
mov
mov
(bad)
add
dec
mov
(bad)
sub
sub
jmp
dec
jmp
jo
fst
and
xor
cmp
sar
cmp
lahf
aaa
iret
ds
mov
lods
in
cmp
enter
call
mov
and
ret
sbb
shr
mov
in
adc
sbb
loope
shr
retf
lods
mov
cmps
and
jb
dec
es
mov
xchg
cmp
shl
div
mov
dec
mov
(bad)
push
or
fldcw
cmps
xor
imul
inc
sub
movs
mov
sar
(bad)
pop
cld
dec
mov
pop
ins
aad
inc
lds
mov
in
loope
(bad)
adc
loop
ficomp
xor
in
pushf
mov
cmp
xchg
inc
repnz
push
ins
cmp
scas
mov
(bad)
cld
push
test
sbb
ins
mov
mul
cmp
lods
sbb
dec
stos
sub
push
rcr
xchg
add
jp
movs
dec
push
mov
push
xchg
pop
jbe
repnz
rcl
cs
cli
fidivr
ds
push
lds
push
mov
es
jge
xor
xchg
sub
jge
pop
leave
pop
int3
and
sub
add
xor
cmps
in
inc
scas
sub
dec
mov
(bad)
mov
adc
mov
and
xor
retf
dec
mov
add
push
in
inc
loopne
stos
mov
jbe
movs
push
gs
or
sub
loopne
xlat
push
mov
ins
xchg
rcl
jmp
or
and
cwde
or
scas
lods
sub
cs
imul
(bad)
dec
push
fimul
adc
xor
or
cmps
repz
idiv
xor
sbb
pop
pop
jecxz
test
ret
mov
jecxz
lds
push
int
or
jg
mov
ret
jg
retf
inc
mov
mov
int
mov
push
mov
scas
pop
loopne
test
test
mov
call
cmps
mov
mov
pop
inc
mov
xchg
or
add
jmp
mov
mov
xor
pop
mov
xor
xchg
test
fs
fcomp
pop
and
fild
scas
jbe
sbb
inc
pop
lea
sti
pop
pusha
cli
inc
push
cmp
xchg
popa
mov
(bad)
jmp
mov
pop
shr
pop
mov
popf
in
and
mov
adc
mov
rcl
mov
out
test
stc
sub
push
stos
out
xor
push
neg
sti
pop
jnp
(bad)
adc
cmps
mov
mov
inc
sub
loope
xor
je
mov
dec
(bad)
xchg
call
(bad)
mov
scas
(bad)
into
inc
test
add
mov
adc
or
mov
dec
loopne
adc
in
push
mov
sbb
repz
push
fcomp
enter
cdq
in
fisub
jo
out
jne
leave
loopne
mov
popa
inc
hlt
xchg
push
mov
fld
xor
daa
mov
pop
cmp
je
xchg
dec
out
inc
add
and
and
(bad)
jno
push
das
into
imul
jl
inc
inc
in
mov
or
movs
stos
mov
sbb
or
ins
das
sbb
jae
xchg
fisttp
cmp
cmp
repz
int3
dec
add
adc
cmp
xor
popa
out
pop
or
cld
sub
and
inc
add
adc
cli
push
xor
in
rcl
sahf
push
sub
sub
aad
jmp
test
dec
imul
lahf
adc
mov
aad
inc
mov
data16
cmp
cmps
std
call
pushf
ja
and
test
scas
mov
jle
cli
sar
mov
aaa
lds
sbb
or
jecxz
push
jp
and
outs
rol
add
push
mov
fsubr
jmp
adc
jbe
inc
movs
ret
inc
pushf
data16
mov
and
sub
outs
(bad)
jg
adc
xor
xor
sub
popf
cli
int
pop
test
fidivr
sbb
xchg
and
repz
dec
ja
push
ja
xor
push
push
jnp
aad
mov
sbb
gs
jp
and
sub
push
or
je
rol
(bad)
iret
jae
inc
mov
mov
(bad)
shl
xchg
std
sbb
icebp
mov
imul
es
repnz
push
popf
(bad)
jmp
addr16
outs
sbb
test
pop
imul
mov
out
popf
mov
mov
push
pop
sub
add
jp
scas
dec
inc
push
add
sahf
test
jb
jae
add
mov
outs
xchg
fwait
mov
push
test
jns
ds
jns
daa
dec
cmps
scas
jg
stos
sahf
(bad)
jmp
ret
dec
pusha
loop
push
push
mov
shl
loopne
sub
add
in
rol
cli
inc
inc
call
sti
(bad)
(bad)
fimul
jmp
and
enter
adc
imul
push
mov
mov
shl
inc
or
xor
add
and
and
and
adc
add
aad
adc
mov
loope
jne
nop
fcomp
aas
xchg
sub
sub
std
mov
jmp
jmp
stos
cmc
test
enter
or
jmp
mov
out
jae
mov
jo
push
push
lahf
mov
fwait
shl
dec
pop
(bad)
adc
mov
and
fdivr
dec
jae
xor
pushf
test
mov
adc
imul
jb
(bad)
inc
jbe
mov
inc
(bad)
add
stos
jo
ror
sbb
inc
xor
push
rcl
inc
inc
push
xor
xchg
aas
add
in
sub
dec
and
out
or
bound
call
les
call
jae
(bad)
(bad)
in
push
das
pop
pop
sub
(bad)
ror
sub
mov
cmc
and
out
lock
adc
mov
or
push
out
cs
xchg
pop
and
out
mov
jbe
jbe
cmp
or
stos
sub
sbb
sbb
les
add
scas
jp
jbe
sub
(bad)
data16
aad
dec
inc
jb
push
out
pushf
jbe
cmp
sbb
mul
push
mov
add
mov
push
xor
gs
sub
ret
sub
sub
cwde
fucompp
jmp
aam
aad
and
aam
cmp
push
pushf
pop
pop
push
fadd
adc
jno
imul
pop
xor
gs
cdq
mov
dec
inc
mov
retf
jb
out
(bad)
cmp
xchg
xchg
jle
xchg
(bad)
imul
loope
pop
sub
push
not
inc
loopne
mov
and
sbb
clc
lock
rcl
sbb
leave
xor
pop
push
mov
int
pop
(bad)
cld
dec
and
sub
or
lods
fisubr
popa
ss
loop
and
sbb
in
cmp
test
add
and
mov
fimul
dec
push
lahf
adc
xor
fidivr
stos
inc
out
inc
(bad)
mov
or
and
mov
mov
pop
xchg
add
jmp
pusha
sub
arpl
sbb
lock
add
and
hlt
dec
cmp
leave
mov
not
fist
xchg
loop
in
lods
push
add
mov
sar
out
jle
mov
mov
ins
jae
xchg
xchg
stos
test
test
ss
dec
lds
cwde
pop
test
jecxz
fistp
push
push
fxch
pop
push
sub
out
xor
lods
fisttp
(bad)
cmp
xchg
pop
xchg
imul
jge
in
mov
add
jae
adc
ds
push
(bad)
push
jns
jbe
add
dec
bound
fs
or
fstp
(bad)
and
mov
jnp
cmps
(bad)
leave
mov
aas
xchg
hlt
rcl
add
pop
inc
es
xchg
scas
add
xchg
jg
scas
enter
jg
adc
out
arpl
test
scas
or
cdq
and
aam
sub
push
es
cmp
int
lock
jmp
scas
nop
dec
sbb
pop
mov
adc
into
push
cmp
xor
add
and
hlt
les
xchg
jl
jmp
lods
fstp
fiadd
out
cs
std
(bad)
retf
or
cmp
imul
mov
lods
pop
ja
push
jle
test
popa
or
xchg
inc
outs
das
add
popf
(bad)
enter
dec
dec
sbb
lea
mov
stos
xchg
dec
sub
inc
xchg
je
lds
dec
push
mov
inc
clc
int
sbb
repz
mov
call
adc
xchg
pop
or
push
push
shl
ret
inc
mov
mov
add
xchg
jl
fwait
nop
xor
js
sbb
lods
add
fld
stos
fsubr
dec
pusha
cdq
fnstcw
pop
push
mov
out
sub
aaa
ror
call
or
test
adc
xor
adc
fnsave
out
or
jae
test
lods
fwait
mov
aam
mov
xchg
sbb
ins
jnp
arpl
cli
jne
cmc
mov
jnp
mov
jnp
inc
mov
ins
sub
pop
mov
add
div
mov
and
icebp
pop
add
int
jge
std
cwde
sub
add
mov
adc
add
scas
(bad)
movs
or
cdq
push
sub
jne
lods
sahf
jno
(bad)
ja
shr
cmp
rep
in
fimul
adc
in
jne
in
jns
cmp
leave
push
iret
mov
outs
pop
lods
or
loope
test
and
icebp
fabs
xchg
sbb
add
gs
xor
mov
xchg
cld
mov
pop
daa
faddp
pop
les
dec
hlt
pop
xchg
das
test
or
xchg
mov
lea
cmp
dec
inc
ins
int
jecxz
inc
test
mov
push
cld
aaa
fild
sete
jle
jg
pop
pusha
adc
aas
inc
clc
ss
xchg
int
sub
sbb
dec
imul
mov
xchg
repnz
xchg
xor
push
mov
sub
ror
push
lods
fild
in
adc
dec
adc
pop
into
mov
mov
xor
imul
push
sbb
out
push
pusha
mov
and
pop
mov
inc
mov
jge
pop
add
retf
mov
mov
hlt
jecxz
sbb
mov
xchg
popf
sbb
lea
sub
push
xor
out
jns
adc
fdivr
cmp
mov
imul
cwde
mov
mov
sub
dec
push
push
mov
cmp
push
pusha
mov
(bad)
data16
inc
cs
xchg
sub
and
stos
icebp
retf
gs
inc
gs
sub
test
dec
and
sbb
adc
sub
cld
xchg
cld
and
pop
mov
call
enter
cmp
xchg
(bad)
jge
push
mov
adc
mov
scas
in
mov
mov
sub
cmp
xchg
adc
mov
sahf
cmp
xchg
push
loope
mov
mov
mov
add
fneni(8087
jle
xor
in
scas
or
(bad)
xor
push
leave
imul
das
(bad)
xchg
mov
push
xchg
lea
inc
(bad)
outs
into
dec
das
mov
fcmovnu
fadd
push
imul
and
push
icebp
or
jmp
(bad)
pop
mov
xor
fnsave
loopne
jno
jg
xor
sbb
rol
loopne
not
aas
xor
pushf
jle
or
sub
test
adc
fidivr
(bad)
js
test
mov
out
in
xor
aas
pop
fucomi
jno
xor
int3
jns
shl
bswap
out
push
adc
jl
popa
aam
cmp
mov
mov
inc
sbb
jno
jbe
ficom
(bad)
pop
in
pop
push
hlt
or
or
jb
dec
cmp
jne
daa
movs
clc
xlat
sbb
cmps
das
pop
es
mov
mov
clc
push
mov
fwait
psadbw
sar
lods
adc
nop
mov
aas
fsubr
jmp
cmp
sbb
mov
adc
cmps
mov
es
pop
je
pop
xchg
fbld
dec
or
pop
retf
jmp
das
loop
cmc
sbb
jmp
ret
retf
xchg
in
repnz
ret
jg
ins
dec
sub
jge
dec
adc
sub
pcmpeqw
es
pusha
das
inc
cmp
sbb
inc
(bad)
ins
or
inc
loopne
mov
int
sahf
rol
adc
cwde
(bad)
pop
cwde
mov
push
add
mov
mov
inc
or
leave
jmp
das
imul
(bad)
and
clc
dec
add
sbb
dec
outs
fsub
push
adc
mov
stos
cmp
in
cld
sbb
scas
test
mov
sub
(bad)
dec
stos
aad
cld
lods
mov
and
or
push
ins
jmp
sbb
mov
add
mov
sar
add
rcl
cmp
popf
fwait
mov
or
push
dec
jg
cs
dec
movs
leave
mov
push
pop
repnz
fsub
fld
sub
ror
xchg
bnd
call
sub
add
pop
push
push
xchg
popf
push
mov
aam
mov
xchg
shl
je
(bad)
mov
test
add
scas
and
lods
jns
adc
shr
sar
jne
jg
in
add
mov
push
div
push
jnp
jne
adc
int
retf
mov
xor
out
test
out
push
mov
inc
push
int
xor
push
aam
cli
sbb
clc
mov
rcr
dec
scas
into
out
add
mov
mov
movs
jmp
mov
test
sbb
in
mov
push
cmps
(bad)
push
sbb
xor
and
cwde
sbb
das
dec
dec
shr
jl
dec
popa
pop
shl
mov
jle
sub
push
cdq
sti
push
mov
test
js
dec
fcmovnb
fidivr
or
pop
mov
repz
or
rcl
(bad)
mov
pop
mov
(bad)
or
(bad)
inc
cmp
(bad)
ja
pop
int
lods
add
xchg
test
test
push
mov
in
ret
add
in
adc
movs
shl
jnp
sbb
test
sar
lods
xor
out
lock
cmps
fbld
sar
scas
jno
pop
add
push
aam
fnstsw
ds
leave
scas
fldcw
cmc
push
ins
mov
mov
xor
nop
xor
(bad)
adc
outs
jmp
mov
call
cmps
add
loop
out
sub
call
ins
xor
repz
or
scas
imul
fstp
arpl
in
jg
div
inc
les
cmc
shl
enter
cld
jp
leave
sti
leave
pushf
jae
push
add
cmp
stos
sub
push
mov
in
leave
dec
call
popa
(bad)
mov
sar
loop
outs
push
xor
sub
pop
adc
push
fnsave
dec
adc
lea
sbb
into
cmp
iret
add
outs
adc
adc
xchg
int3
xchg
mov
(bad)
call
fs
sbb
xor
stos
das
pop
test
mov
ds
push
xor
dec
sbb
cmc
and
data16
jo
scas
out
xchg
push
cmc
xchg
inc
fnstsw
jne
or
mov
sub
pop
aas
scas
stos
in
mov
lds
fadd
icebp
aaa
xchg
mov
cmp
xor
mov
out
push
ins
mov
sar
sub
sub
xchg
push
loope
cmp
push
imul
and
cdq
add
sbb
xchg
or
in
retf
jmp
lods
cmc
and
lods
jg
call
ret
nop
shl
pop
ss
retf
pushw
aaa
mov
fistp
je
dec
pusha
(bad)
xor
dec
xor
sub
vmread
mov
hlt
inc
inc
mov
mov
pushf
add
xchg
inc
test
dec
mov
inc
leave
lahf
push
inc
retf
push
loopne
adc
push
push
mov
sub
jno
pop
movs
jle
popa
out
es
cmp
mov
mov
mov
sub
mov
daa
(bad)
dec
ja
jp
unpcklps
dec
mov
shr
hlt
xchg
lock
out
cmp
cmp
xor
dec
out
(bad)
mov
imul
xchg
mov
adc
dec
std
sar
in
gs
pop
aaa
cmp
pop
icebp
adc
inc
mov
xor
loopne
popa
repz
dec
push
std
push
jle
xor
inc
test
mov
add
lods
mov
xor
pop
pop
dec
fcmove
ds
mov
cmps
inc
or
pop
in
and
mov
mov
(bad)
mov
or
sbb
int3
cmp
pop
sbb
int3
cld
inc
mov
lea
xchg
dec
fistp
pop
mov
xor
add
iret
dec
fild
jg
xchg
jmp
(bad)
mov
out
or
in
push
cmc
scas
sbb
push
cmp
xor
das
cmp
shl
jg
jmp
je
je
in
in
sahf
sub
in
mov
pop
or
out
adc
mov
lds
mov
sbb
jne
hlt
ficom
hlt
mov
in
dec
mov
(bad)
xlat
dec
(bad)
outs
mov
xchg
dec
xor
imul
sbb
pop
in
sub
jp
sbb
js
scas
and
lock
out
cmp
add
push
jae
cs
addr16
xchg
popf
add
sbb
call
jmp
or
mov
out
dec
mov
fld
inc
retf
push
lds
rcl
or
xchg
mov
cwde
in
pop
test
(bad)
leave
test
lahf
and
sbb
fdiv
or
sub
cmp
push
jne
xchg
int3
push
(bad)
xchg
sar
mov
sub
shl
rcl
sbb
loopne
push
dec
cmp
leave
into
into
scas
mov
out
scas
pop
xchg
(bad)
mov
fistp
nop
jbe
(bad)
xor
popa
lods
retf
aam
ret
hlt
dec
rcr
xor
push
int3
bound
out
or
cmp
mov
add
arpl
push
push
jns
xor
sub
sahf
sbb
outs
fst
jae
cmp
hlt
or
jns
mov
mov
xor
sub
dec
xor
hlt
and
adc
lods
(bad)
aam
mov
cld
fdiv
lea
shr
sub
ret
jne
jne
js
add
stos
inc
or
(bad)
out
inc
or
xchg
ss
ret
jnp
sub
call
aaa
inc
rol
cs
stc
(bad)
js
dec
sbb
push
aam
dec
leave
push
xchg
in
pop
ret
cmp
mov
in
ret
mov
stos
leave
cdq
fdiv
jbe
outs
jg
test
fcomp
into
rol
jae
or
mov
or
bound
ret
xchg
cmp
or
push
add
inc
dec
mov
mov
sbb
xor
cmp
jno
and
add
ret
sahf
add
adc
adc
mov
sub
mov
push
pop
or
push
xor
lock
jp
xchg
xchg
fimul
hlt
jns
jle
pop
dec
mov
pop
pop
aam
cwde
add
inc
daa
pop
fist
cdq
or
add
movs
shr
push
jbe
and
cmps
dec
dec
push
loopne
mov
das
scas
xor
jns
out
xor
push
mov
add
out
or
imul
movs
mov
mov
mov
sub
fcom
xchg
scas
inc
pop
movs
rcl
nop
mov
cmc
je
mov
lahf
scas
inc
das
stos
xor
mov
jae
or
push
mov
pop
sub
aaa
or
jns
fstp
in
and
repz
rol
enter
outs
xor
hlt
and
adc
fldenv
int3
push
push
shl
idiv
sub
add
in
jns
out
scas
pop
cli
adc
lahf
cmp
ss
and
xchg
leave
fist
sub
clc
adc
inc
out
shr
sub
sub
fild
(bad)
pop
pop
in
push
fs
inc
test
jg
lahf
out
call
cmps
out
pop
clc
cmp
jg
call
inc
mov
mov
bound
mov
adc
mov
push
xchg
mov
aam
sbb
je
(bad)
adc
pop
js
xchg
out
lods
cmp
sbb
fdiv
xchg
jmp
icebp
aaa
pop
mov
icebp
test
fmul
mov
push
mov
(bad)
cmp
pop
arpl
stc
sub
add
jno
movs
jmp
in
test
clc
and
nop
call
sub
(bad)
retf
mov
fild
dec
mov
sbb
ret
sbb
nop
dec
push
cmp
push
(bad)
popa
jbe
ror
push
rcl
retf
mov
mov
pop
xor
mov
add
(bad)
mov
jae
call
jl
rcr
(bad)
jno
lea
push
adc
gs
mov
ret
lods
rol
and
lods
sahf
cdq
sub
jne
(bad)
push
test
mov
cli
xchg
pop
xchg
ja
test
lds
xor
and
xchg
xchg
cmc
and
adc
mov
xchg
les
xchg
dec
out
jae
mov
fld
mov
call
fnstenv
out
pushf
add
and
es
out
or
ret
inc
mov
mov
(bad)
jecxz
enter
push
fxch
jno
sbb
scas
xor
or
push
push
inc
dec
test
cmp
mov
mov
adc
pop
leave
rcr
dec
mov
mov
lods
or
or
mov
push
pop
mov
pop
ja
mov
lea
lock
jne
mov
pop
out
repz
sub
je
pop
xlat
(bad)
shr
mov
sbb
int
sub
mov
icebp
cmc
xchg
ins
(bad)
imul
outs
das
rol
adc
fdiv
fnstsw
addr16
icebp
push
addr16
mov
and
popf
je
popa
inc
or
push
leave
xchg
or
jno
ja
imul
les
mov
test
fcomp
dec
push
push
out
add
repz
lods
sub
data16
ffreep
dec
mov
pop
pop
adc
or
xchg
hlt
call
xchg
packssdw
enter
xchg
push
call
bnd
aaa
xor
mov
pushf
fsubr
repnz
ss
into
pop
ja
push
dec
sub
dec
test
ja
rol
mov
lock
push
retf
sub
aad
mov
arpl
mov
ret
js
xchg
and
aaa
mov
outs
out
out
adc
sub
ficom
cvtpi2ps
imul
mov
sti
xlat
jnp
mov
outs
ss
dec
mov
(bad)
(bad)
mov
fwait
and
add
inc
test
jge
mov
dec
call
xchg
pop
sbb
or
mov
sbb
adc
daa
mov
push
sti
ds
rcr
push
xchg
lea
into
test
aad
inc
push
dec
test
add
lock
pop
mov
pop
and
movs
ret
ins
je
out
es
loope
lock
stc
push
jmp
xlat
fwait
das
sub
mov
and
push
in
sbb
push
inc
or
hlt
mov
adc
or
ret
(bad)
xchg
sub
lods
(bad)
in
dec
jns
ins
outs
cld
jp
(bad)
pusha
add
ss
push
mov
cmp
xor
aas
mov
mov
or
lea
push
jp
out
xchg
pop
pop
(bad)
arpl
fstp
in
shl
inc
fscale
cmp
ins
sar
inc
and
and
loopne
push
and
xlat
jle
data16
sti
dec
outs
into
in
(bad)
sbb
fwait
jo
xchg
dec
push
inc
push
inc
dec
or
out
out
mov
jno
bound
test
adc
loopne
jecxz
jno
loope
push
cmps
imul
ror
inc
mov
hlt
push
mov
mov
adc
jle
repnz
in
cli
mov
jl
mov
outs
stc
push
inc
arpl
adc
xor
imul
xchg
xor
cmp
add
repz
js
mov
adc
in
sbb
clc
xchg
inc
push
mov
pushf
jmp
xor
sahf
es
dec
push
pop
js
mov
js
fiadd
hlt
(bad)
mov
ins
jecxz
xchg
arpl
jl
dec
lds
jp
push
adc
lods
push
int
imul
js
push
pop
or
imul
lds
sub
adc
leave
sub
stos
inc
lahf
dec
out
mov
movs
pop
sbb
mov
push
adc
cli
mov
dec
test
pop
das
pop
jnp
pop
retf
or
cwde
test
call
add
mov
retf
and
bswap
imul
cdq
add
mov
xchg
ins
xor
cmp
mov
data16
gs
mov
pop
jmp
lds
cmps
pop
shr
pusha
aas
aaa
xchg
lock
jnp
mov
push
pop
xchg
(bad)
sbb
leave
adc
and
jg
jg
and
cs
add
mov
hlt
arpl
mov
sbb
(bad)
fild
push
jne
loopne
mov
xchg
out
sub
sub
jnp
test
sbb
jl
jae
addr16
popf
leave
xchg
mov
in
mov
popa
push
es
mov
and
scas
jnp
cli
test
lock
xor
loopne
sub
loop
mov
cmp
(bad)
fisttp
mov
stos
and
rcr
test
xchg
mov
stos
or
cld
repz
pop
mov
mov
(bad)
cwde
mov
add
xchg
fnstenv
jb
sbb
bsf
mov
cmps
shr
cmp
mov
adc
dec
push
or
retf
in
mov
(bad)
cmp
imul
lods
rcr
pop
dec
sahf
clc
dec
mov
pushf
pop
les
inc
push
push
cwde
(bad)
cmp
lds
jno
fisubr
stos
pop
jmp
sahf
add
inc
xor
adc
xchg
mov
outs
retf
sub
aam
std
push
mov
jge
(bad)
clc
ret
mov
push
imul
adc
mov
fsub
fnstcw
scas
arpl
dec
sbb
push
retf
sbb
test
mov
mov
sbb
daa
cli
out
popf
push
push
cmp
mov
aad
pusha
cmp
(bad)
and
leave
cmp
loop
xor
dec
movs
retf
jnp
test
fnsave
cmps
das
mov
xchg
dec
dec
(bad)
stos
mov
das
das
jg
add
dec
xchg
and
cmp
test
dec
inc
fistp
ss
xor
and
xchg
lea
ins
add
sub
cmps
dec
push
pop
sbb
xchg
inc
xchg
test
call
mov
xor
call
and
outs
or
shl
sub
pop
loope
dec
lods
mov
aas
fadd
mov
mov
(bad)
sar
mov
lds
and
aad
or
jmp
int
sub
addr16
cmps
(bad)
mov
push
ins
outs
or
jl
mov
push
jmp
jae
lds
mov
mov
arpl
dec
add
add
or
daa
outs
(bad)
outs
lea
stos
xor
jmp
lods
and
adc
and
adc
inc
mov
test
mov
dec
inc
mov
xchg
mov
inc
fcompp
and
scas
mov
and
hlt
mov
call
bound
sub
out
int
or
test
jl
inc
aaa
mov
int
mov
in
(bad)
mov
or
jecxz
lods
push
(bad)
ins
cmc
fldenv
inc
rol
mov
jnp
cmps
shl
mov
sahf
mov
adc
cmp
xor
mov
pop
lods
movs
outs
mov
gs
mov
xchg
sahf
cmps
nop
repnz
push
nop
test
sti
inc
popa
out
jmp
lock
(bad)
leave
inc
jb
fstp
pop
mov
and
(bad)
movs
and
add
sahf
stos
pop
or
cmps
pop
cmp
into
mov
out
inc
or
stc
loop
lods
jo
test
callw
sbb
push
mov
mov
adc
das
fild
sbb
ds
ret
inc
mov
pop
add
out
cdq
push
movs
(bad)
fwait
aad
ja
xor
mov
sub
inc
inc
xchg
push
add
inc
in
out
xor
aam
and
stos
xor
push
loop
and
retf
outs
test
inc
mov
fstp
and
push
push
or
jmp
cli
cmp
inc
mov
mov
mov
lds
xchg
neg
outs
movs
adc
or
jo
mov
arpl
int3
or
rcr
or
jmp
cmp
jne
push
test
xchg
sbb
mov
out
push
call
jo
out
push
pop
sub
sbb
xchg
xchg
mov
adc
or
cmp
pusha
dec
std
add
je
xor
stos
or
mov
(bad)
jle
dec
inc
repnz
or
dec
sti
sub
and
xlat
inc
push
cld
mov
or
inc
dec
sahf
push
repnz
mov
stc
mov
lods
inc
jmp
rcr
fst
sbb
fimul
cmp
(bad)
sub
call
loope
push
outs
sbb
xchg
push
clc
enter
jg
mov
add
in
aam
push
fadd
xchg
jno
(bad)
mov
and
dec
xchg
pusha
inc
outs
push
xchg
sbb
xor
pop
je
cmp
mov
test
outs
iret
ins
shl
push
dec
and
mov
inc
out
pop
dec
fcomp
sub
popf
jmp
push
call
mov
push
in
fs
adc
push
push
out
inc
out
call
inc
inc
pop
leave
dec
xchg
scas
(bad)
aaa
fwait
addr16
xor
push
repz
lock
inc
test
mov
mov
mov
clc
out
adc
xchg
fild
cwde
(bad)
jge
icebp
mov
aad
push
repz
loope
mov
test
fwait
or
jbe
stc
loop
dec
dec
aas
add
push
cmp
arpl
push
imul
sub
jle
dec
lahf
fdiv
sbb
pop
call
out
rol
imul
jbe
inc
adc
dec
push
mov
and
mov
dec
sub
xor
jmp
popa
scas
fld
imul
test
pop
outs
neg
sti
dec
(bad)
dec
adc
xchg
mov
jmp
mov
jmp
sbb
stc
pop
sbb
movs
sbb
pushf
gs
jae
sub
addr16
cdq
stc
mov
ror
push
ds
retf
xchg
cdq
push
sub
aad
fisub
mov
sahf
pop
mov
lds
stos
(bad)
ror
push
aam
jmp
sar
out
and
cmps
sub
jnp
das
xchg
push
ins
rcr
mov
push
jmp
scas
lea
sar
or
mov
in
in
inc
ret
sbb
and
jmp
out
arpl
cmp
movs
std
aad
xor
inc
retf
xlat
adc
mov
std
out
pop
sahf
fs
cwde
jno
(bad)
mov
icebp
push
fwait
mov
jl
sar
jno
inc
jb
call
jmp
leave
sbb
sbb
mov
iret
mov
call
fmul
xor
test
aam
sbb
push
retf
xlat
push
stc
in
xor
add
scas
or
inc
enter
mov
xor
or
ds
in
pop
xchg
add
xchg
mov
aas
lea
pusha
add
add
fisttp
dec
imul
xor
int3
dec
hlt
repz
sub
jne
lea
xor
dec
in
cmps
sbb
cmc
stos
(bad)
fisttp
or
xchg
das
repz
add
test
stos
sti
cmp
ret
dec
sbb
ret
xchg
push
xor
and
pop
iret
lods
ss
shr
shl
mov
test
mov
mov
repz
ins
(bad)
mov
mov
(bad)
rcr
fisttp
jl
out
adc
test
mov
mov
pop
ficom
stc
xchg
adc
pop
dec
call
sar
jecxz
arpl
mov
out
rcr
sbb
call
sti
rcr
mov
pop
mov
add
mov
fyl2x
dec
mov
int3
jle
cmp
jmp
add
gs
cdq
pop
jne
lods
jl
mov
pop
sub
mov
jae
pop
data16
jl
mov
into
les
push
ficom
add
adc
ror
ins
jg
dec
or
cmp
fdivr
lods
aam
mov
lahf
sar
add
inc
div
push
xor
ins
push
xchg
cmp
hlt
add
pop
mov
dec
push
aad
pop
popa
inc
push
and
sbb
js
(bad)
pop
mov
mov
xor
add
mov
gs
push
jmp
scas
outs
mov
dec
daa
pop
lods
mov
pop
push
dec
mov
imul
(bad)
sahf
mov
scas
les
lea
sub
mov
fdivr
fdivr
push
mov
or
in
push
jmp
fwait
dec
js
mov
retf
pusha
aad
mov
push
xor
pop
std
mov
xlat
movs
fild
pop
ds
xchg
jecxz
jecxz
shl
jl
mov
pop
test
hlt
jl
scas
(bad)
mov
psadbw
dec
out
lods
push
and
setl
int
(bad)
out
cmp
push
popf
cmp
jle
inc
sbb
in
mov
jmp
or
fisttp
retf
popf
sub
sub
pop
in
jbe
jmp
les
mov
push
xchg
js
das
retf
or
cld
(bad)
mov
pop
mov
push
cld
jg
and
mov
xchg
or
shl
adc
test
in
gs
mov
mov
dec
(bad)
fcomip
push
mov
mov
adc
sub
jno
das
fnstcw
enter
ds
add
pop
or
ja
dec
jns
sbb
mov
rol
cmps
stos
in
movs
jle
aas
repnz
test
mov
jecxz
fnsave
loop
out
sub
int
test
cs
inc
sub
pop
js
adc
add
sub
and
stos
ja
push
scas
lods
retf
bound
in
sbb
inc
sub
in
inc
lds
out
inc
sti
shl
mov
mov
ds
xchg
out
xchg
bnd
in
jmp
sti
jp
sbb
jge
push
push
jge
aaa
mov
pop
lods
fucom
leave
call
mov
push
(bad)
fsubr
xor
dec
jns
test
adc
sbb
xchg
mov
xor
inc
mov
or
mov
dec
stos
mov
retf
xchg
sub
adc
mov
push
fldcw
jnp
jae
mov
shl
push
xchg
adc
(bad)
mov
or
ficomp
outs
push
hlt
fcmovnbe
xor
ret
aad
stc
sahf
iret
add
adc
mov
mov
fbld
cdq
dec
lea
push
push
bound
jge
mov
imul
leave
ret
stos
lea
sub
dec
test
jle
dec
or
adc
add
xchg
adc
sub
cmp
outs
add
lahf
je
jo
sbb
(bad)
or
fst
inc
and
aam
adc
ins
xlat
cdq
push
dec
(bad)
cld
shl
sub
(bad)
aam
or
sub
push
std
cmp
cmp
xchg
inc
push
pop
and
pop
add
and
jbe
pop
aad
push
mov
retf
sub
dec
jo
bound
push
cwde
or
cli
mov
out
push
push
aad
ins
in
in
int3
mov
push
sahf
fild
imul
(bad)
xor
sub
jb
mov
sub
pushf
jle
pop
in
pop
or
cmp
lock
(bad)
xchg
push
push
sbb
push
mov
mov
into
neg
je
xchg
and
or
xor
dec
mov
xchg
sbb
add
xor
jp
inc
mov
jge
sbb
inc
xor
push
in
jns
jle
cmp
stos
xchg
adc
das
dec
fidiv
jmp
inc
ss
xor
or
lods
retf
mov
xchg
out
(bad)
push
ja
fdivr
xor
jle
jno
stc
push
adc
nop
cmp
imul
pusha
hlt
push
call
push
cmp
sar
and
fsubr
mov
fiadd
or
sbb
sahf
daa
int3
and
fcomip
test
dec
xchg
cli
adc
pusha
mov
pop
pop
addr16
into
jg
push
imul
(bad)
mov
(bad)
jb
mov
rol
mov
xchg
ror
cmp
mov
out
cmps
jbe
add
bnd
out
adc
jb
ret
scas
mov
add
sbb
(bad)
push
jp
shl
fs
ins
and
data16
and
dec
in
add
retf
ja
clc
dec
or
mov
push
lods
and
or
pop
push
jns
push
mov
push
cld
mov
push
lds
fdiv
lds
repnz
ins
dec
pop
mov
popf
cmps
outs
cmp
mov
jle
push
or
xchg
sub
dec
in
mov
test
sub
xchg
mov
push
cmc
push
dec
not
and
ds
std
sub
loope
in
cmc
pop
sahf
cmp
pop
loope
(bad)
stos
loope
pop
adc
mov
bound
push
inc
xchg
or
jle
pop
inc
clc
mov
push
imul
cmp
mov
and
xor
pop
sub
mov
cmps
clc
ror
imul
xor
addr16
jno
mov
mov
cmp
aam
inc
jecxz
shl
jmp
inc
dec
stos
mov
movs
mov
sub
push
mov
out
in
js
mov
jmp
mov
mov
enter
ja
add
ds
cmc
and
inc
jecxz
mov
xchg
and
shl
cmp
loope
adc
xor
addr16
and
cmp
lods
lds
pusha
sub
je
dec
add
sar
mov
and
out
int
xlat
inc
mov
(bad)
out
sbb
add
xlat
xchg
xchg
dec
fwait
lds
cmp
xchg
ror
xchg
adc
mov
mov
bound
(bad)
adc
rol
es
lea
aam
and
xor
ins
cmps
lock
aad
out
sahf
les
in
(bad)
and
pop
les
xchg
iret
mov
ins
xchg
mov
jp
add
jns
inc
outs
cmc
gs
inc
pop
and
pop
je
out
lods
adc
pop
repz
and
mov
(bad)
fdiv
scas
push
sub
mov
movs
dec
bound
push
lea
test
cld
mov
add
jbe
fwait
push
into
pop
retf
xor
std
sub
mov
mov
cmp
ss
ret
adc
movs
push
cdq
sub
stc
xchg
sbb
mov
js
in
cwde
push
sub
jne
push
inc
mov
es
fdivp
popa
in
test
add
and
mov
dec
adc
ret
or
push
scas
pushf
mov
aad
and
dec
push
es
push
stc
enter
cmp
mov
stos
sbb
and
pop
adc
call
mov
fist
(bad)
ins
jecxz
jge
push
sbb
lods
or
fdiv
mov
mov
jb
in
jle
fld
and
shl
mov
mov
(bad)
repnz
mov
test
daa
cs
fiadd
shl
in
lods
jmp
mov
scas
push
or
loope
sub
loop
jns
jecxz
xchg
stos
sti
fsubr
iret
pusha
mov
aam
shl
mov
pop
leave
sbb
or
mov
xchg
cmps
pop
dec
inc
dec
sub
jns
sti
das
sbb
out
pop
test
and
inc
dec
adc
mov
add
cld
xchg
xchg
dec
sti
or
jo
cmp
mov
gs
jmp
es
popf
inc
daa
aaa
sub
xor
loop
cmp
sbb
adc
cdq
pop
add
sub
retf
adc
sti
xchg
push
sub
dec
mov
imul
jmp
loop
or
(bad)
out
cmp
jp
push
inc
loopne
call
mov
cmp
lahf
cmp
in
test
std
leave
sub
push
dec
test
mul
ss
dec
js
push
and
dec
mov
mov
ins
xor
ins
mov
xchg
inc
sub
pusha
(bad)
shl
retf
mov
cmps
dec
fdivr
pop
push
xor
xor
add
mov
mov
loop
cmps
pop
jmp
aas
pop
sbb
push
test
dec
sbb
mov
(bad)
(bad)
mov
aad
mov
mov
loopne
push
mov
xchg
stos
lock
test
sub
pop
popf
adc
sti
push
test
sub
dec
xor
loop
mov
jl
cli
mov
mov
or
jp
cmp
sub
add
mov
mov
inc
gs
ins
jo
mov
pop
xchg
sahf
xor
inc
pop
les
popa
xchg
xchg
ja
cmps
mov
or
stos
and
fnstcw
and
(bad)
std
sub
lahf
push
dec
push
adc
push
stc
das
sbb
mov
add
int3
loop
(bad)
and
call
(bad)
xlat
fild
push
inc
or
test
scas
(bad)
pushf
and
out
movs
sub
ror
(bad)
das
mov
(bad)
aaa
xor
in
(bad)
call
add
ret
fcom
sbb
pop
dec
mov
jo
or
shl
(bad)
cmp
mov
push
(bad)
inc
loope
sub
sbb
mov
xor
sbb
jnp
inc
and
adc
xchg
jle
icebp
sbb
(bad)
jg
in
aad
or
or
mov
xor
push
inc
and
sub
out
(bad)
mov
mov
fstp
das
rol
jns
cmps
inc
in
jb
retf
and
mov
or
test
ror
stos
movs
(bad)
iret
sub
dec
pop
ins
call
mov
fwait
sar
js
xor
pop
adc
cmp
and
add
nop
stos
imul
dec
(bad)
jecxz
test
mov
jb
mov
sbb
or
dec
add
stos
rol
sub
mov
cmp
inc
push
pop
lea
cmp
aaa
stos
iret
mov
add
mov
ret
ins
repz
out
jns
loope
js
inc
jge
and
lods
add
es
test
nop
add
pop
cmp
movs
fstp
repnz
fcomp
movs
fs
cs
dec
cs
ss
cmp
fcomp
out
xor
mov
push
push
mov
jnp
jne
jg
push
jns
mov
jb
sbb
push
add
call
xor
mov
icebp
test
ss
cmps
pusha
jnp
in
das
push
outs
int
add
pop
ins
leave
ds
pop
jnp
adc
jle
sub
xchg
or
mov
cmp
dec
gs
iret
scas
loopne
test
pop
and
xchg
xor
jmp
pop
jae
xchg
xlat
stc
imul
mov
outs
mov
mov
xlat
sub
sub
sub
lahf
jo
lods
jg
cdq
repz
leave
das
scas
or
popf
cmp
imul
fwait
(bad)
fcom
xchg
lahf
jmp
push
ret
mov
xchg
xchg
hlt
add
push
jns
mov
xchg
mov
mov
and
inc
in
inc
das
or
jo
sbb
or
stos
je
or
add
and
mov
(bad)
in
and
outs
mov
aam
mov
lds
mov
xor
push
add
dec
repnz
sub
push
add
sub
or
push
sbb
cld
jae
dec
push
ficom
mov
or
repnz
xor
or
xchg
inc
aaa
ret
div
sub
sub
repnz
outs
scas
mov
imul
or
mov
pop
push
cwde
inc
or
loope
and
jecxz
sub
stos
stos
retf
pop
movs
add
push
mov
push
pop
inc
scas
out
dec
dec
xchg
cld
das
jmp
add
pop
jmp
rcl
push
in
test
push
sbb
in
xchg
aad
retf
mov
jbe
icebp
sub
imul
ins
pop
pop
adc
cmp
cdq
std
es
jmp
repnz
sar
cmp
ss
jne
dec
pop
xchg
cli
or
adc
push
or
xchg
xor
sbb
leave
mov
sub
push
dec
out
jle
jno
mov
or
xchg
cmp
retf
jmp
retf
sub
bound
outs
add
xchg
dec
and
jns
xchg
stos
mov
push
mov
adc
repz
cmps
fsub
ins
pushf
(bad)
and
pop
adc
aaa
mov
int
in
sub
inc
xchg
sub
lock
retf
test
(bad)
pop
movs
jg
push
movs
popa
scas
dec
stc
cmp
jge
cmp
test
adc
pop
xchg
das
pusha
stos
cmp
iret
push
in
cmp
pushf
leave
ja
lahf
jb
fwait
sti
inc
stos
sub
popf
lea
jl
cmp
add
out
mov
(bad)
sar
jmp
sbb
lods
push
rol
or
mov
inc
pop
cmps
jg
inc
xchg
pop
and
aam
jp
pop
jecxz
outs
jmp
xchg
pop
jmp
lds
out
nop
cmp
and
cld
xor
xchg
nop
mov
cmc
es
rol
sti
loopne
push
dec
jmp
xor
dec
aam
int3
mov
lods
fidiv
pop
and
inc
push
or
ds
sub
int3
stos
mov
and
ret
fwait
inc
jge
push
mov
ret
push
mov
or
inc
jl
xlat
lea
adc
or
sbb
rcl
xor
(bad)
jne
imul
and
mov
repz
addr16
push
or
test
movs
call
addr16
mov
sub
add
jnp
aas
out
les
sar
mov
mov
dec
cmp
out
sbb
inc
mov
jbe
(bad)
xor
pop
ret
ds
call
ins
lahf
movs
ja
stos
cmps
rcl
inc
sti
xor
cli
lods
ja
add
dec
pop
cmp
dec
test
jbe
sbb
sub
adc
retf
and
or
mov
mov
test
les
mov
push
add
sub
push
mov
sbb
mov
scas
cmp
adc
mul
sub
push
vmulss
das
push
nop
xor
inc
or
push
add
jns
push
pop
jle
fidiv
cmp
retf
aas
(bad)
xor
pop
jecxz
and
mov
pop
jg
gs
xor
test
sub
pusha
jne
outs
jb
pop
push
add
sub
into
(bad)
adc
sub
repnz
xchg
mov
and
test
or
sti
jg
or
xchg
xchg
shr
xor
sub
push
xchg
dec
div
push
fs
nop
aam
stos
js
mov
sbb
cmps
sti
cmp
pop
(bad)
mov
push
cwde
jmp
and
imul
pop
das
jns
xor
adc
mov
jae
outs
mov
push
push
clc
pop
push
data16
div
jmp
inc
xchg
out
xlat
add
inc
adc
mov
cmps
lods
ss
ins
xchg
push
neg
dec
and
fcomp
icebp
call
inc
sub
mov
mov
adc
mov
rcl
mov
and
xchg
out
pop
shl
aaa
or
sub
mov
(bad)
aad
sbb
inc
push
ret
adc
fild
xor
pop
lahf
nop
sub
call
push
xor
aam
adc
stos
fld
sbb
dec
and
mov
push
xor
loop
es
test
pop
cmp
(bad)
int
jmp
hlt
fcom
push
pop
shr
ret
inc
(bad)
(bad)
jnp
dec
adc
or
push
les
addr16
mov
addr16
add
mov
push
pop
mov
adc
aas
push
or
adc
mov
imul
cmps
pop
add
add
push
nop
cmc
out
adc
ins
mov
or
cmps
lock
mov
pop
dec
popa
ds
ret
je
pop
ins
adc
mov
lahf
ja
mov
lds
mov
into
movs
gs
lods
int
cmp
xor
xchg
mov
jg
in
movs
fiadd
stc
mov
ins
es
inc
or
xchg
in
fmulp
aad
and
push
daa
sbb
fsub
(bad)
repnz
pop
and
adc
mov
ja
mov
mov
in
gs
lahf
cmp
jmp
aam
pop
jae
imul
imul
pushf
popf
test
dec
xor
ins
cwde
call
shl
cwde
xor
or
test
xchg
cwde
mov
mov
ja
std
push
lock
add
cmps
mov
push
int
xor
inc
daa
bound
outs
cmp
pop
inc
push
sub
xchg
jmp
sub
jmp
cmps
or
mov
cwde
fidiv
lea
or
iret
pop
out
pusha
push
mov
dec
movs
icebp
movs
mov
retf
jg
pop
jecxz
and
ins
dec
cwde
mov
pop
fisttp
sub
cmp
mov
ret
or
(bad)
xchg
hlt
int
jno
enter
mov
dec
aas
sub
pusha
enter
in
inc
mov
ror
push
stos
xor
xor
mov
retf
gs
cmc
jl
ret
daa
sbb
jge
iret
pop
sub
lock
fld
aad
adc
rcl
mov
add
test
leave
add
sub
repnz
sub
or
mov
jmp
inc
aaa
fmul
sbb
mov
lods
es
xchg
cmps
jmp
jg
cs
dec
mov
ror
push
enter
adc
aad
scas
cmps
dec
cmc
fnstsw
mov
sbb
stc
cmp
pop
adc
inc
out
leave
xor
(bad)
adc
sub
adc
mov
adc
shr
jo
mov
or
pop
sub
push
mov
out
or
pop
jno
fist
pop
fnsave
add
xor
jge
out
stos
and
in
out
nop
daa
mov
cmp
aam
nop
mov
mov
and
jl
ins
cs
imul
dec
ret
aaa
sub
int
and
cmps
inc
jle
jbe
mov
ror
ja
shr
fcmovbe
mov
gs
inc
(bad)
das
dec
mov
and
jmp
call
jmp
xor
xlat
push
dec
hlt
jo
and
gs
movs
pusha
mov
ret
dec
into
add
and
mov
jns
das
mov
arpl
pop
pop
fmul
fadd
das
pop
fbstp
sub
push
cmp
sahf
and
aad
aaa
imul
stc
clc
aaa
mov
push
fwait
mov
xchg
shl
jae
sub
cwde
xor
aam
imul
outs
(bad)
fisub
sub
dec
inc
sub
inc
cld
or
sbb
jb
mov
sbb
mov
stc
sub
xchg
push
outs
or
jl
fisttp
sub
pop
pushf
mov
out
mov
int
imul
lock
in
ret
mov
pop
xchg
leave
push
addr16
popf
shl
pop
mov
cmp
mov
xchg
(bad)
adc
sti
cwde
adc
inc
ret
cmp
add
movs
sub
sub
retf
pop
push
jae
push
lods
outs
test
and
das
add
icebp
inc
arpl
mov
mov
imul
sar
sar
cld
dec
aam
add
mov
test
dec
jl
test
nop
stos
mov
cmp
inc
inc
or
and
ss
add
jg
mov
adc
cli
sbb
cmp
add
mov
cli
(bad)
push
sbb
repnz
dec
daa
repz
inc
cmp
clc
and
push
aad
sbb
nop
test
dec
hlt
inc
pop
aad
push
push
mov
imul
(bad)
(bad)
pop
mov
inc
inc
int
inc
scas
cmc
add
ret
jno
in
scas
sub
repnz
pop
(bad)
unpcklps
cmps
mov
or
shl
and
into
(bad)
fdiv
ret
sbb
cmp
pop
dec
or
push
lahf
mov
pop
sti
jo
ja
outs
and
loope
mov
inc
lods
inc
and
xor
dec
cmp
push
adc
dec
jns
sbb
pusha
shl
je
and
es
push
push
pop
xchg
outs
adc
cmps
into
dec
xchg
loopne
jg
adc
mov
dec
cdq
aas
jmp
xor
jmp
lds
xchg
and
mov
cwde
or
jmp
inc
int
loopne
lahf
fldcw
nop
add
(bad)
mov
pushf
(bad)
or
xlat
mov
call
aad
mov
dec
push
fsubr
cs
pop
xor
mov
jb
add
sub
outs
retf
hlt
ds
mov
mov
es
sbb
jmp
mov
retf
jo
jo
add
lahf
je
aad
imul
scas
cdq
pop
cs
inc
mov
call
mov
push
mov
sbb
add
(bad)
xlat
fwait
dec
dec
mov
stc
bound
jnp
sub
(bad)
sub
outs
outs
sbb
pop
ret
inc
push
cli
pop
std
dec
retf
bound
cmc
ret
pop
mov
in
sub
adc
cli
sar
and
cwde
mov
and
cmp
sub
jmp
sub
jb
ror
or
xor
xor
push
ret
push
sub
sub
or
and
es
adc
mov
jg
or
movs
(bad)
call
cs
inc
fwait
add
adc
rcr
dec
xchg
inc
and
movs
shr
(bad)
and
es
sub
dec
pop
loopne
push
aad
xor
test
(bad)
aas
mov
inc
das
xchg
fist
sub
dec
jecxz
or
jmp
daa
dec
push
shl
hlt
movs
inc
clc
cmp
mov
adc
adc
fsub
or
shr
loopne
and
outs
sar
pop
idiv
xor
daa
mov
hlt
into
js
(bad)
mov
mov
inc
(bad)
sbb
cld
dec
add
xchg
imul
ja
dec
addr16
arpl
adc
sub
jmp
lea
nop
push
gs
clc
pop
adc
outs
aam
and
mov
hlt
cld
and
fst
in
xor
es
daa
add
or
sbb
repnz
lds
or
jg
cmps
jo
or
xchg
pushf
test
test
mov
enter
adc
in
dec
bound
(bad)
push
push
mov
mov
(bad)
(bad)
mov
sbb
sbb
sub
bound
test
fs
cmp
fsub
add
jbe
inc
mov
mov
inc
iret
js
and
icebp
(bad)
adc
scas
lahf
mov
sbb
push
dec
out
sub
adc
xor
leave
les
pop
imul
(bad)
sbb
je
out
rcr
cmp
add
cmp
mov
clc
scas
push
push
mov
mov
int
addr16
inc
jnp
mov
lock
cmp
fst
js
pop
inc
(bad)
mov
pop
pop
or
sbb
jle
in
fnstenv
rcr
pop
aas
cmp
inc
repnz
fnstcw
in
adc
mov
xchg
jle
cdq
cmp
cmp
dec
jns
pop
(bad)
add
mov
push
(bad)
popf
inc
adc
cmp
push
(bad)
mov
sahf
mov
test
xor
lock
mov
mov
jmp
ret
popf
fcmovbe
and
xchg
in
imul
jge
aam
leave
and
or
data16
xchg
aam
push
lahf
xchg
mov
adc
mov
cmps
pop
std
out
(bad)
jmp
adc
outs
adc
mov
repnz
adc
push
sub
cwde
xor
imul
and
push
pop
shr
(bad)
ficom
inc
cwde
jno
(bad)
clc
je
jae
cmps
xchg
cmp
sub
lods
lods
lock
sub
nop
jnp
aad
mov
lock
jecxz
(bad)
clc
mov
xor
mov
mov
inc
scas
test
push
sub
aas
scas
or
jae
popf
popa
ss
(bad)
mov
mov
mov
xor
mov
movs
inc
push
jecxz
pop
dec
xchg
push
mov
rcl
dec
cmp
fptan
mov
dec
or
fs
dec
mov
add
jno
(bad)
sbb
dec
mov
push
sub
stos
in
mov
dec
dec
addr16
push
bound
dec
xlat
or
inc
push
jne
iret
scas
(bad)
xor
(bad)
sar
or
bound
xor
test
add
push
cmp
rcl
xor
sbb
mov
movs
loope
cld
xchg
test
ss
mov
xchg
retf
mov
sbb
mov
loop
imul
jbe
jg
test
call
mov
mov
mov
test
add
inc
jp
jbe
aad
xor
push
test
test
add
jl
retf
pop
mov
xor
and
cmps
or
sti
xorps
fisub
cmp
cmc
add
or
ins
cmp
dec
cmp
fxch
stc
xchg
pop
or
dec
push
cmps
pop
mov
(bad)
movs
inc
popa
data16
xchg
adc
mov
hlt
push
jne
mov
add
mov
xchg
mov
dec
rcl
xchg
xor
loope
in
or
mov
sbb
push
push
add
ds
cmp
repz
jecxz
(bad)
dec
dec
add
xchg
or
cwde
or
jo
jg
sub
shl
mov
ja
lea
jle
in
pop
lea
jo
add
push
pusha
sub
data16
xor
enter
sbb
int3
inc
cmp
jp
sbb
call
push
or
pop
dec
pusha
mov
std
push
es
add
pushf
push
pop
test
jae
idiv
push
icebp
xchg
jb
push
mov
ret
sbb
(bad)
jecxz
pop
pop
pop
shl
fisub
xchg
cmc
push
scas
inc
jl
mov
(bad)
mov
imul
mov
(bad)
push
mov
mov
jno
mov
iret
std
mov
inc
bound
mov
sub
daa
js
cmp
pop
(bad)
push
push
mov
mov
pop
es
jmp
enter
(bad)
fistp
inc
push
ja
into
aam
pop
cmp
mov
cmp
repz
js
or
lds
das
jmp
ret
das
pop
cmp
imul
mov
stos
adc
int
mov
mov
lahf
jmp
sbb
mov
xchg
cdq
jle
jmp
sbb
shl
push
hlt
dec
pusha
repnz
push
dec
cmps
xchg
sbb
inc
jb
dec
test
mov
shr
in
sub
nop
sbb
stos
mov
xor
pop
jp
mov
and
mov
jnp
scas
xchg
dec
cmp
push
out
fsubr
ss
mov
ficomp
imul
push
add
loope
(bad)
int3
shl
enter
sbb
xor
push
or
inc
lahf
jne
push
psubw
jae
outs
ins
jmp
in
cmp
mov
sar
test
inc
mov
xchg
mov
cmp
or
ins
dec
or
add
fwait
(bad)
mov
sub
jmp
ins
les
lock
sbb
fcmove
test
xchg
stos
jns
adc
cmp
dec
xchg
jmp
jmp
out
and
lds
xor
les
inc
inc
add
dec
movs
gs
mov
xor
push
data16
mov
xchg
(bad)
loopne
inc
dec
mov
mov
jns
jbe
(bad)
cmp
mov
mov
icebp
mov
outs
adc
or
fiadd
enter
mov
fs
xchg
cmp
in
mov
push
add
nop
sbb
movs
mov
or
int3
xor
or
retf
pusha
in
(bad)
adc
pusha
mov
iret
add
push
jne
jecxz
xor
gs
xlat
pop
push
lods
and
push
or
cli
dec
cmp
shr
xchg
inc
inc
mov
fsubp
jns
push
fiadd
inc
fist
cmps
and
xor
inc
xor
jle
inc
cdq
inc
mov
xchg
jns
sbb
sbb
movs
jae
movs
bound
dec
jle
or
mov
call
imul
mov
cwde
retf
data16
repz
jmp
inc
data16
or
das
inc
in
xor
popa
or
stos
ror
cld
sbb
inc
lahf
xor
fstp
imul
cwde
ror
mov
aad
mov
jle
cmp
fist
call
pusha
sbb
daa
stos
xor
xchg
(bad)
dec
sbb
mov
shl
retf
(bad)
push
fild
test
cmp
mov
sub
add
out
(bad)
in
sub
icebp
push
add
cmps
cmp
mov
out
ror
std
repnz
pop
les
adc
fbstp
jns
mov
mov
pop
mov
push
call
dec
outs
fucom
sub
mov
lods
leave
or
repnz
mov
mov
in
cs
push
dec
(bad)
and
das
or
jmp
add
adc
bound
in
mov
or
sub
cmp
sqrtps
arpl
dec
(bad)
inc
or
xor
iret
cli
sbb
cmp
aad
repnz
push
js
xchg
dec
jmp
cld
and
lahf
fsubp
ret
xlat
dec
jo
das
or
into
dec
xor
sub
repz
push
test
in
jnp
icebp
jae
mov
xchg
mov
scas
pop
inc
add
(bad)
std
ja
shr
mov
shl
retf
inc
add
push
xor
loop
(bad)
gs
dec
mov
mov
jg
(bad)
dec
fwait
lds
inc
add
mov
jo
cmp
inc
mov
es
pop
sti
retf
iret
into
outs
mov
jns
retf
jecxz
jmp
xchg
popa
test
fistp
sti
shl
gs
neg
enter
push
dec
jmp
or
push
mov
mov
out
stos
jp
fdiv
mov
call
inc
jecxz
loopne
popa
mov
mov
das
add
dec
ins
out
mov
sbb
ror
jns
popa
movs
pop
xchg
sub
xor
popf
(bad)
jne
cmc
inc
pop
shl
push
push
jns
ins
scas
xor
dec
mov
enter
adc
sahf
mov
icebp
dec
scas
cmp
push
dec
xor
repz
and
dec
mov
sti
inc
push
pop
inc
mov
fmul
jns
scas
or
lods
mul
mov
sbb
jns
and
push
add
in
cs
and
inc
cmp
jmp
aas
inc
int3
xchg
ins
pop
hlt
ror
push
out
inc
inc
pop
dec
shr
test
std
adc
ss
sub
rol
aam
movs
add
inc
mov
or
sub
out
cmps
aad
cdq
mov
xor
mov
ja
mov
xchg
pop
bound
push
lahf
mov
int3
inc
jecxz
push
mov
add
sub
shl
mov
or
outs
cdq
sbb
out
in
push
push
imul
push
sub
int3
xor
push
iret
push
ds
xchg
fild
clc
(bad)
push
fistp
ror
ficomp
cmp
sub
add
retf
(bad)
aam
pop
mov
cmps
rcl
xor
mov
hlt
cmp
popa
jns
retf
in
and
adc
nop
push
imul
sub
jmp
mov
test
std
imul
cmp
or
(bad)
js
inc
pop
fbstp
shr
mov
and
stos
(bad)
gs
mov
repnz
imul
rcr
dec
adc
pusha
sub
inc
(bad)
retf
ss
dec
retf
loopne
mov
jns
push
ds
sub
adc
add
call
cmp
cmp
xchg
popf
push
jno
xchg
sub
cmps
cdq
mov
fwait
add
sti
sbb
cmp
push
je
(bad)
nop
push
mov
jbe
add
jle
(bad)
xor
pop
(bad)
outs
fidivr
cmp
push
add
mov
ror
repz
movs
sub
mov
mov
outs
xor
in
or
adc
ret
fsub
test
cwde
in
data16
scas
sub
test
ja
rcl
adc
mov
jl
cmps
xchg
cmp
push
inc
and
call
les
in
add
(bad)
xor
sbb
mov
int3
repz
jle
pop
lock
ret
inc
in
jge
(bad)
movs
mov
cmp
jo
cmp
into
mov
ret
and
or
call
mov
mov
lods
mov
jae
les
movs
ror
sbb
test
dec
jecxz
mov
xchg
icebp
cmp
adc
mov
cs
movs
test
lahf
fwait
outs
aaa
rol
ror
gs
ins
pop
push
jl
popf
mov
add
or
push
clc
and
sbb
cs
sar
cmc
dec
lock
into
inc
push
mov
xchg
movs
inc
daa
add
pop
cmp
jno
mov
dec
cmp
push
jg
or
mov
dec
mov
adc
jae
js
scas
inc
stc
inc
mov
cmc
push
dec
add
cwde
mov
pushf
cmp
pop
repnz
push
mov
sub
xor
ins
mov
or
iret
xor
jl
jecxz
mov
jo
dec
out
xor
das
ret
cmps
adc
loop
and
push
scas
out
outs
mov
int3
push
mov
xor
rcr
sub
fidivr
(bad)
xchg
outs
imul
dec
push
cmps
push
xchg
pop
cdq
mov
stos
mov
or
xor
mov
movs
jge
test
inc
lds
test
push
retf
fdivr
mov
into
cmp
mov
jmp
enter
jge
movs
fistp
xchg
pop
xlat
repnz
lock
jbe
sahf
movs
mov
inc
enter
cmp
jo
xchg
inc
movs
fsubr
leave
(bad)
dec
cmp
outs
fwait
push
jmp
mov
mov
xchg
mov
push
dec
lds
xor
sti
(bad)
ins
shl
hlt
repnz
cli
adc
cli
iret
ins
sbb
fstp
adc
shl
cmp
add
(bad)
fxch
adc
or
jmp
sub
xor
and
int3
scas
nop
push
into
xchg
sub
push
pop
arpl
adc
lds
js
jae
(bad)
stos
push
mov
repnz
shl
rep
sbb
call
cmp
inc
mov
cmp
scas
xchg
sub
je
jne
imul
jmp
shr
fsub
adc
sub
ins
mov
jae
pop
pop
xchg
or
sbb
int3
adc
push
fs
test
(bad)
push
or
xor
jb
call
fld
mov
xor
pop
jne
icebp
jg
out
sub
inc
cmp
or
aam
ds
jge
push
fucom
mov
lods
sub
cmp
repnz
xor
cmp
sub
cmps
cmp
sti
bound
shl
cmp
loop
das
popa
cld
mov
xchg
jns
xchg
xchg
push
mul
jmp
jno
xor
mov
or
push
mov
cwde
cmps
daa
pop
and
fbld
movs
in
and
in
das
inc
mov
sti
and
mov
xor
aad
push
sub
call
xor
pop
and
mov
pop
(bad)
rcr
retf
mov
scas
adc
cmp
dec
xlat
cmc
mov
add
push
scas
cmc
in
pop
xchg
add
mov
mov
pusha
ins
imul
pop
xchg
push
mov
in
pop
mov
dec
push
push
(bad)
xchg
and
xchg
es
or
push
sub
ret
ds
out
xchg
mov
rcl
daa
add
cmp
lea
mov
xor
sub
inc
dec
or
or
add
pop
movs
and
cmps
mov
pop
mov
call
inc
in
push
sbb
loopne
call
call
xlat
xor
rol
xchg
into
pusha
sub
cmp
mov
mov
out
aaa
inc
jle
sbb
adc
int
pop
push
(bad)
in
into
out
fld
test
push
mov
cmp
jo
sub
in
pop
cmc
push
mov
iret
inc
nop
xchg
and
jl
mov
cwde
lds
push
mov
ins
sub
stos
icebp
inc
cwde
adc
sub
add
adc
mov
enter
retf
rcr
xchg
mov
xchg
ins
and
dec
adc
push
jbe
adc
cli
ins
adc
lock
adc
adc
or
jae
cmp
stos
push
xor
call
or
mov
inc
jge
push
pop
adc
rcr
inc
add
cli
add
add
fwait
test
pop
mov
sbb
repnz
ins
sbb
jp
ss
lods
out
ret
stos
(bad)
pop
adc
inc
and
jae
arpl
cwde
cmp
(bad)
fcom
dec
clc
bound
retf
dec
aam
test
xor
xchg
xor
adc
cwde
enter
stos
je
mov
pop
addr16
push
pop
push
xor
xor
jmp
ret
gs
mov
pop
sbb
cs
xlat
out
int
fnstcw
mov
mov
popa
nop
cmc
sub
xchg
div
jno
mov
adc
sbb
lods
dec
retf
ja
dec
jo
test
out
imul
cdq
or
jo
mul
jne
dec
adc
sbb
packsswb
push
or
scas
(bad)
pop
shl
mov
lahf
sub
push
jmp
repnz
mov
int
retf
push
add
ret
dec
pop
cs
mov
in
mov
push
cdq
cmp
out
rcl
daa
xchg
cmps
sub
dec
adc
movs
repz
adc
sub
test
aam
popf
push
xchg
mov
(bad)
and
fmul
sbb
cmp
cmp
xchg
out
ss
and
sbb
int3
push
pusha
push
cmp
inc
stos
add
int
hlt
mov
movs
sub
pusha
xchg
mov
sub
inc
sbb
mov
xor
sub
push
sbb
pop
out
pop
in
inc
mov
cmps
into
add
arpl
add
push
enter
adc
shl
push
out
scas
ret
push
jmp
xchg
movs
hlt
xchg
in
or
sbb
sub
lea
enter
add
inc
stc
xchg
ds
dec
xor
(bad)
or
cmps
xchg
rcl
cmp
scas
add
or
mov
rcl
icebp
fdivr
inc
movs
lods
adc
mov
mov
hlt
loopne
add
in
aam
pop
ror
dec
xor
call
dec
stos
adc
inc
mov
enter
mov
jae
lods
not
cwde
and
adc
xchg
out
mov
stos
scas
inc
jmp
mov
clc
lods
pop
retf
ret
iret
mov
xchg
div
fsubr
push
fisttp
mov
rol
and
xor
cmp
push
stc
push
sbb
push
pop
jmp
and
nop
add
out
fwait
adc
ins
or
dec
imul
mov
push
lock
stos
sti
stos
js
ret
push
fwait
ds
(bad)
cmp
sbb
mov
dec
dec
adc
mov
lods
fmul
ins
push
mov
bound
out
cmp
sahf
pop
xlat
sbb
xor
or
cdq
and
test
sar
ins
pop
xor
out
cmp
sub
pusha
xchg
mov
jb
movs
mov
setge
sub
imul
retf
int
es
sahf
push
ins
xor
mov
(bad)
cmp
or
fmul
das
outs
fdivr
jl
mov
repnz
jp
sub
subps
sbb
cwde
and
mov
aaa
cmp
neg
mov
push
adc
mov
stc
push
je
xchg
in
sub
jecxz
pop
cmp
fadd
(bad)
mov
dec
cmp
dec
push
pop
in
xor
test
ret
cs
and
xor
sub
sbb
mov
mov
mov
cmc
fistp
push
inc
xor
std
lds
test
popf
lods
dec
add
test
(bad)
or
movs
mov
ja
loope
add
(bad)
inc
hlt
cmc
sbb
cmp
outs
adc
and
and
push
hlt
enter
jne
in
hlt
test
in
jle
loopne
int3
test
jns
and
clc
adc
cmc
mov
dec
fs
loop
mov
pop
adc
aad
jge
inc
cli
cs
retf
jecxz
cmps
mov
cdq
scas
into
add
xchg
addr16
cmp
stos
and
cmps
jl
lahf
and
imul
fimul
mov
adc
mov
pop
inc
and
inc
fcomp
stos
jae
ja
in
dec
xor
fstp
mov
mov
mov
or
push
std
scas
xchg
(bad)
fst
mov
cmp
push
into
push
test
sahf
dec
xchg
push
call
retf
xchg
add
mov
sbb
cmp
fsubr
cld
ror
inc
cmp
xchg
cld
adc
add
stos
ins
cmp
and
dec
bnd
(bad)
xchg
and
mov
aam
das
adc
pop
js
mov
inc
or
adc
xchg
aaa
aaa
ds
loopne
ror
aad
mov
imul
faddp
dec
mov
cmps
ret
xor
rol
inc
loop
enter
or
inc
jb
mov
push
sti
pop
mov
adc
inc
icebp
or
mov
pop
sub
ficomp
jmp
je
call
mov
cmp
adc
or
mov
push
nop
stos
into
pop
mov
int3
jp
leave
jl
mov
sub
jb
stc
or
pop
inc
mov
xchg
sbb
sbb
call
movs
cmp
lahf
pusha
push
xchg
pop
sub
cli
std
in
in
into
aas
adc
xchg
das
or
out
pop
into
push
adc
ins
les
out
mov
retf
xor
stc
fcomp
(bad)
popf
loop
jmp
pop
add
stos
scas
nop
jns
dec
sbb
aaa
cdq
dec
imul
and
pop
es
inc
bound
xor
cmp
fist
push
dec
mov
loop
jno
jmp
repnz
imul
adc
les
mov
sahf
xchg
push
pop
xchg
adc
lahf
sti
nop
and
shr
sub
cmp
outs
test
mov
js
xor
imul
imul
dec
pushf
neg
fwait
xchg
dec
fiadd
xchg
scas
adc
fstp
ins
out
stos
aam
add
shl
xchg
sbb
jno
mov
lods
push
sub
mov
pop
jnp
mov
inc
ds
mov
mov
pop
mov
and
or
outs
jge
mov
mov
adc
cmps
ds
jmp
call
jmp
ins
jne
js
cld
loop
mov
dec
or
pushf
add
retf
or
imul
push
mov
arpl
mov
ja
js
push
jns
mov
sub
clc
movs
push
aaa
sub
sbb
mov
inc
(bad)
jg
sub
push
jle
pop
nop
bound
(bad)
stc
add
stos
(bad)
pop
push
fimul
mov
cmps
sbb
fld
mov
sub
xchg
retf
xchg
fisubr
(bad)
leave
jg
mov
mov
push
and
mul
mov
imul
leave
fmul
cli
mov
enter
aaa
movs
sar
ja
cdq
cmp
jmp
xor
into
dec
ror
cdq
cmp
mov
movs
outs
cmc
mov
xor
pop
data16
aad
cmp
cmp
pop
fild
add
cs
xchg
popf
add
pushf
or
xchg
and
rcr
test
inc
sti
pop
push
and
les
jg
js
shl
(bad)
stos
dec
iret
jmp
imul
pop
push
clc
out
call
cs
ror
cdq
cmps
dec
jp
push
mov
(bad)
in
rol
test
and
into
shl
cmps
sub
sbb
mov
pop
xchg
push
movs
fisttp
mov
enter
xchg
sbb
int3
dec
push
fdiv
data16
jp
int
loopne
ins
push
sbb
add
inc
lock
fsubr
movs
mov
repnz
push
add
imul
enter
outs
inc
mov
test
push
lea
je
movs
icebp
popa
outs
dec
ins
nop
or
loope
mov
adc
mov
test
addr16
add
sbb
dec
push
and
rcr
lods
jne
mov
fcmovnbe
call
and
cmp
inc
push
cs
out
lock
aas
lea
(bad)
neg
out
not
adc
pop
das
bound
cli
sub
mov
iret
les
fwait
pop
lods
loope
sbb
int3
xchg
mov
mov
cmp
push
xchg
and
mov
sub
xor
jecxz
add
(bad)
sti
xchg
lds
in
xor
jo
retf
lods
popf
dec
pop
sbb
mov
cmp
lds
fwait
or
js
xchg
loop
cmp
jnp
aaa
push
inc
jmp
and
jge
add
sbb
inc
sub
popa
pop
fimul
mov
imul
sar
or
cmp
repnz
outs
inc
xor
popa
add
inc
adc
test
out
aaa
call
add
enter
xlat
pop
je
mov
outs
mov
clc
pushf
das
mov
pop
adc
stc
ffreep
sbb
cld
add
jge
add
or
dec
xor
jmp
jg
addps
xchg
sub
jnp
test
movs
vmwrite
fst
scas
stos
out
retf
dec
jne
jecxz
mov
test
push
sub
push
lods
mov
(bad)
neg
jl
or
inc
lods
test
cmp
in
mov
lea
sti
inc
mov
push
pop
pusha
adc
(bad)
mov
and
addr16
jne
xchg
repz
pop
shl
xlat
es
cmp
cmp
(bad)
shl
push
call
cmp
out
cmp
bound
push
nop
ins
dec
sub
adc
in
and
or
clc
xchg
add
movs
popa
cmp
call
jmp
es
or
je
jge
repnz
mov
dec
mov
mov
fistp
test
push
scas
sbb
add
movs
mov
mov
das
aas
add
ret
mov
icebp
push
sub
pop
push
push
adc
xchg
popa
mov
cdq
jg
cwde
and
jmp
dec
scas
dec
and
push
sbb
les
jno
mov
nop
xchg
xlat
inc
clc
mov
sahf
jecxz
sti
pop
sbb
test
out
or
ds
(bad)
pop
adc
dec
sahf
sub
outs
and
lods
jae
push
jle
int
imul
sub
gs
bound
movs
ins
mov
jg
inc
xlat
mov
push
ins
ss
stos
mov
push
push
sub
retf
jns
add
jbe
mov
push
adc
cld
jle
cmp
sbb
fld
retf
dec
jle
fmulp
scas
dec
pop
inc
stc
sub
icebp
icebp
gs
cmp
mov
push
lods
cmp
sbb
data16
pop
fldenv
call
shl
inc
dec
mov
leave
iret
jne
rcr
mov
iret
dec
les
jl
xor
sbb
mov
retf
cwde
pop
test
dec
data16
neg
inc
mov
(bad)
dec
xchg
out
mov
cmp
push
jb
push
cmps
mov
mov
lods
sbb
dec
sub
shl
fs
and
inc
cmp
rcl
mov
cmp
pop
rol
ins
(bad)
clc
js
cmp
leave
jg
cmp
push
mov
cdq
stos
(bad)
test
hlt
stos
mov
xor
lock
push
hlt
pop
rcl
outs
invd
imul
mov
call
inc
stos
loope
adc
(bad)
cmp
pop
inc
icebp
arpl
fstp
pop
stc
add
and
inc
xchg
(bad)
popf
inc
mov
xor
icebp
enter
fidiv
sub
hlt
adc
in
stos
push
or
nop
fistp
mov
push
pop
clc
int
repnz
xor
repz
aas
fmul
mov
mov
mov
outs
int
or
clc
es
es
pop
jne
cdq
call
mov
sar
les
adc
pop
scas
(bad)
xchg
and
out
call
movs
popf
mov
xchg
push
pop
xchg
enter
push
int
fwait
lods
mov
sbb
mov
sub
mov
cdq
fwait
bound
cdq
pop
iret
stc
xchg
hlt
movs
int
cmp
repz
adc
mov
or
outs
mov
adc
push
outs
xor
pop
arpl
push
add
(bad)
sar
aam
jae
clc
test
xchg
shl
inc
adc
adc
add
cld
dec
pop
adc
xor
fimul
aam
call
popf
ror
push
popf
adc
jmp
add
aad
ins
ret
pop
sbb
test
push
stos
aaa
mov
jmp
sub
pop
mov
adc
mov
cli
jno
ffree
outs
mov
mov
shr
ja
jmp
push
nop
add
sub
xchg
xchg
mov
loope
jmp
cmp
mov
cli
out
and
inc
lods
jle
mov
sbb
(bad)
stos
into
pushf
ror
and
xchg
pop
sbb
rcr
hlt
leave
inc
mov
out
mov
sub
enter
ret
dec
popaw
inc
daa
and
mul
into
jae
sbb
push
pop
xchg
repz
shr
dec
and
stos
cmp
sub
fwait
repnz
dec
retf
inc
aam
sub
add
pusha
(bad)
adc
dec
pop
pop
xchg
ins
enter
xor
xchg
ror
push
dec
xor
xchg
inc
xlat
je
jl
pop
ja
and
cmp
sub
jnp
adc
fbld
ja
out
in
and
mov
lds
sbb
icebp
or
test
(bad)
mov
fst
movs
xchg
icebp
and
addr16
call
xchg
mov
and
mov
jg
(bad)
mov
arpl
iret
neg
out
dec
xor
and
outs
cmp
cmp
mov
ss
mov
sti
or
jmp
cmp
pause
je
cdq
scas
jnp
fnstenv
repz
mov
stc
fisubr
pop
out
adc
push
leave
add
push
in
out
lods
sub
fucom
lods
pusha
iret
push
adc
fwait
ja
je
sar
push
pop
jmp
cmps
add
mov
jg
mov
mov
inc
mov
xchg
inc
sbb
cmp
nop
sub
rep
repnz
repnz
out
lahf
setle
lahf
cmp
pop
fdivrp
es
add
mov
xor
arpl
sub
lea
ret
ss
xchg
or
pop
repz
add
imul
xor
mov
add
push
lea
lock
mov
or
in
jg
out
in
mov
inc
rcr
ficom
xchg
sub
retf
adc
xor
adc
lock
in
aad
ja
jb
push
(bad)
test
(bad)
aam
jo
imul
lods
add
xor
(bad)
mov
in
xor
or
jns
ja
movs
mov
adc
fwait
or
(bad)
jg
xchg
test
lea
jb
retf
inc
cmps
cdq
std
mov
adc
daa
and
sub
pop
movs
cs
push
lods
push
repz
add
mov
fcomp
(bad)
mov
xchg
or
push
xchg
inc
fild
dec
cmp
shr
sbb
pop
mov
lea
ds
push
and
mov
out
icebp
mov
or
xchg
bound
outs
or
mov
enter
push
out
mov
mov
in
rcl
adc
dec
cmp
dec
loop
mov
sti
fucomi
inc
or
pop
scas
jno
inc
(bad)
xor
xchg
lods
xor
shl
push
inc
cmp
mov
imul
or
or
push
jo
mov
inc
fadd
arpl
sahf
aam
and
cmp
ins
popf
push
stc
dec
into
iret
ret
mov
xor
cmp
jmp
lds
pop
jecxz
into
int
mov
push
pop
aad
mov
imul
xor
out
add
mov
loopne
out
sbb
lahf
mov
mov
ins
pop
dec
fbld
and
scas
cmp
xchg
(bad)
fmul
(bad)
sti
sub
jmp
push
sbb
or
push
aad
movs
cmp
add
call
stos
rcl
fdiv
outs
cld
(bad)
shl
jl
jns
(bad)
pushf
out
js
(bad)
hlt
jae
das
fcomp
mov
add
adc
daa
clc
adc
jmp
out
daa
out
pushf
pop
jge
mov
xchg
in
inc
push
add
repz
jmp
inc
cmp
shr
add
cmps
pushf
fldcw
mov
pop
mov
cmp
cmp
xchg
push
mov
in
push
jmp
daa
adc
xor
inc
imul
shl
cmc
pop
movs
les
rol
test
sub
scas
xchg
fwait
push
mov
mov
push
cdq
rol
mov
dec
les
stos
jnp
test
xchg
(bad)
push
(bad)
in
cmps
sahf
loop
stos
mov
pushf
sub
inc
mov
in
scas
xor
sub
mov
mov
xchg
cmp
jb
mov
inc
xor
es
jmp
addr16
jg
cdq
test
jno
jecxz
test
sbb
loopne
push
test
xor
jae
mov
retf
ds
mov
add
movs
mov
add
hlt
mov
and
clc
cld
ss
or
out
sub
adc
std
cmps
cmp
scas
in
inc
sub
sub
std
icebp
scas
cmp
(bad)
cmp
sub
jp
pop
fst
push
rol
pusha
jl
adc
jp
push
imul
dec
dec
mov
ror
mov
push
inc
dec
adc
jmp
das
adc
mov
call
nop
nop
fs
adc
mov
add
movs
rcl
dec
sbb
push
dec
add
in
fdivr
popa
(bad)
fsub
outs
(bad)
jl
ja
stos
ja
sbb
outs
frstor
push
cmp
add
cmova
faddp
das
call
xchg
inc
xchg
mov
call
xor
ret
sub
push
stc
inc
stc
push
arpl
and
add
ror
jecxz
push
out
shl
mov
and
xchg
jbe
call
out
clc
cmp
stos
mov
push
repz
in
jae
adc
out
sbb
dec
mul
add
push
inc
mov
clc
lahf
dec
cwde
mov
jb
mov
jge
hlt
sub
test
dec
cmp
or
outs
lods
pop
mov
mov
stc
sti
lds
js
bnd
dec
or
hlt
gs
adc
inc
or
or
jo
je
out
cmc
pop
or
int
dec
pop
out
dec
cld
lahf
pop
xchg
push
mov
cmp
popf
repz
loopne
push
push
in
jmp
mov
out
jp
iret
inc
cmp
loope
cwde
and
out
inc
add
cmp
aas
int3
sbb
pop
cmp
fcom
sub
repnz
popa
cmp
mov
fcomip
xor
lds
mov
mov
loope
jecxz
mov
icebp
and
mov
jp
jg
or
test
or
push
popf
xchg
jb
jg
jge
cmp
mov
(bad)
iret
dec
mov
fistp
mov
fbstp
shl
loopne
inc
mov
pusha
sbb
jno
in
sbb
pop
sbb
mov
jne
sub
fs
dec
loopne
popf
mov
repnz
stos
jmp
add
fdiv
or
lock
adc
cli
aad
jmp
pop
aaa
xchg
into
jecxz
mov
add
ss
push
xchg
xor
sub
and
dec
imul
sbb
inc
add
test
inc
mov
inc
ins
mov
rol
sbb
dec
dec
mov
mov
sbb
adc
mov
sbb
inc
pop
stc
ins
or
outs
push
cmp
inc
xchg
cmp
dec
mov
aad
fwait
addr16
scas
mov
xor
loope
add
or
mov
push
pop
aas
push
xchg
push
adc
or
sub
fiadd
sti
push
rcl
sbb
xchg
jno
mov
into
mov
jle
dec
ret
xchg
and
xlat
aaa
pop
call
test
stc
adc
mov
push
push
(bad)
or
lods
leave
movs
clc
jl
sbb
bound
sbb
and
in
into
push
aas
dec
xor
sbb
stc
cli
dec
das
cmp
xchg
(bad)
es
xchg
cmp
hlt
imul
sub
jge
fidiv
scas
pop
inc
push
inc
push
jmp
dec
scas
aad
std
int
push
aas
jecxz
adc
sti
xchg
push
fld
pop
or
push
dec
(bad)
gs
mov
push
pop
dec
adc
jecxz
cmps
adc
sub
aas
mov
ja
sub
sub
push
xor
mov
ret
mov
adc
fdiv
lods
fcom
jmp
sbb
jecxz
dec
(bad)
mov
popf
lds
js
mov
xor
mov
ds
or
xchg
ds
shl
cmps
in
fadd
test
out
push
cmps
cld
movs
pop
cwde
or
pop
inc
sub
push
js
push
ret
imul
push
shl
cmp
leave
jne
or
dec
inc
(bad)
jns
sbb
fisubr
sub
or
rcl
adc
or
mov
cwde
(bad)
repz
data16
xor
cmp
addr16
dec
fdiv
push
call
push
xlat
lods
jg
inc
xchg
xchg
ror
mov
std
mov
push
xchg
xchg
aas
jmp
inc
push
cld
jg
and
clc
xlat
push
jmp
cmp
in
push
xchg
pop
dec
inc
popf
xchg
cld
mov
cmp
sbb
sbb
xchg
jns
jnp
lods
jl
sbb
int3
push
jnp
lods
xchg
adc
xchg
mov
sahf
cmove
imul
sub
mov
cmc
popf
ins
test
jmp
push
aas
mov
addr16
mov
pop
cmp
push
inc
fmul
sbb
push
fadd
xor
xor
xor
movs
(bad)
sbb
dec
in
add
icebp
mov
not
inc
jmp
mov
cld
(bad)
add
mov
xchg
das
push
jns
in
outs
mov
enter
jl
sti
xchg
pop
mov
sar
lock
in
ins
cmp
pop
xchg
arpl
mov
dec
mov
mov
sbb
xor
mov
mov
pop
add
and
in
mov
inc
loope
xor
pop
dec
cdq
jle
xchg
pop
into
mov
fwait
and
iret
xor
or
mov
jmp
mov
pop
outs
add
(bad)
hlt
sbb
into
inc
bnd
mov
std
mov
lods
push
and
adc
fdivr
cmp
mov
dec
mov
cmp
push
test
cld
xchg
mov
ja
dec
dec
add
imul
pushf
std
adc
inc
fisttp
int
pop
mov
sub
and
push
fmul
adc
jno
inc
outs
xchg
pop
ds
stc
dec
mov
push
sti
add
jmp
aaa
rcr
jbe
inc
dec
adc
in
repz
cmps
inc
mov
cdq
imul
rcl
dec
push
push
mov
aas
dec
dec
dec
test
sti
out
ds
shr
dec
adc
inc
push
pop
gs
jmp
retf
data16
and
cmp
(bad)
cmc
pop
xchg
add
dec
cmp
cmc
and
add
cmp
or
cld
mov
test
or
out
test
fnsave
add
fwait
push
mov
push
or
out
test
push
add
out
movs
or
cmp
push
mov
adc
inc
inc
call
test
add
sub
pusha
push
xor
jmp
jnp
stc
push
mov
ins
rol
jbe
aam
dec
xor
call
xor
mov
pop
(bad)
jns
(bad)
int3
ret
jnp
push
pop
out
addr16
cdq
push
pop
pop
jp
mov
and
jns
mov
inc
arpl
adc
dec
jns
jmp
push
jp
mov
cmp
push
popf
movs
loopne
jb
pop
push
dec
stos
jmp
jno
bound
or
jle
xor
mov
adc
stos
fsub
jne
ret
ret
mov
(bad)
movs
dec
jmp
call
adc
pop
shl
dec
repz
pop
jbe
fadd
mov
movs
call
enter
fsub
adc
cli
sub
pop
imul
mov
out
addr16
mov
and
mov
test
lods
and
repnz
das
ss
mov
push
enter
mov
jle
sti
cs
jbe
stc
test
pop
sti
mov
(bad)
jmp
jne
xchg
shld
(bad)
cs
cmp
icebp
mov
push
icebp
retf
pop
out
sub
fisubr
push
pop
sub
mov
xchg
mov
adc
xor
push
xchg
add
jne
mov
test
add
jg
and
cli
mov
adc
sbb
xor
ret
sub
pop
jb
add
mov
jns
cwde
jl
inc
loopne
pop
sbb
mov
clc
adc
(bad)
push
xchg
(bad)
xchg
icebp
jmp
mov
mov
add
dec
out
sbb
mov
ret
call
xor
addr16
hlt
push
sub
jmp
mov
loop
push
xor
dec
bound
(bad)
dec
jl
hlt
dec
sbb
popf
add
dec
shr
retf
iret
and
ret
pop
jne
call
push
shl
adc
sbb
repz
dec
(bad)
loopne
and
mov
xor
arpl
adc
retf
mov
leave
pop
aad
lods
sbb
add
ror
add
mov
mov
ror
int3
int
out
add
xchg
jge
fcom
mov
mov
inc
cs
leave
jns
jle
dec
cld
and
fild
das
int3
inc
stos
xchg
outs
lea
xor
call
sti
jp
mov
stos
ret
enter
daa
sub
mov
pop
pop
or
xchg
dec
fcmovbe
gs
ret
jns
jbe
popf
mov
push
or
cmp
mov
test
mov
in
icebp
sbb
not
inc
cmps
call
lods
int3
test
sbb
dec
cmps
cmc
test
repz
les
or
aas
leave
mov
jnp
cs
(bad)
or
push
mov
aas
lods
pop
fld
dec
out
fisub
xchg
rol
in
sub
ffreep
das
mov
jle
ds
dec
sbb
into
xor
aas
add
or
scas
pushf
inc
jp
xchg
push
inc
ret
fwait
xchg
jl
imul
mov
test
or
bound
int3
rcl
xchg
scas
movmskps
ins
stc
loopne
(bad)
retf
outs
test
mov
xchg
cmps
mov
sub
xlat
push
mov
repz
xlat
std
mov
mov
out
bound
xchg
mov
fwait
inc
pop
ret
jge
sti
ret
(bad)
mov
or
andps
fiadd
call
into
jmp
jnp
mov
sbb
in
addr16
(bad)
fidiv
data16
fld
xchg
popf
sbb
adc
dec
fimul
push
adc
je
push
and
cmp
adc
adc
push
or
arpl
call
pop
cmps
enter
call
or
mov
push
xlat
xor
adc
pop
push
call
xor
es
push
scas
ror
scas
dec
jge
not
(bad)
dec
and
cmp
clc
lock
cld
and
pop
mov
dec
push
shl
movs
bound
aad
dec
inc
cld
push
xchg
push
icebp
arpl
sahf
or
mov
xor
shl
ret
push
mov
add
mov
rcr
xor
inc
adc
cmps
lea
sbb
sub
pop
aam
rcr
shl
jo
pop
retf
loop
jp
mov
lds
push
mul
mov
mov
or
cmp
fs
jmp
mov
icebp
push
sti
jl
sbb
push
push
pop
adc
(bad)
sbb
fbld
cmp
lahf
mov
sbb
into
cld
cmc
out
xor
jo
(bad)
push
sbb
add
out
retf
xlat
repz
mov
mov
xor
pop
movs
jns
xchg
lods
jmp
loop
pop
lds
data16
out
mov
(bad)
adc
fild
aad
add
and
xchg
push
bound
shr
ins
fbld
(bad)
call
mul
addps
ret
imul
sti
push
imul
adc
into
cmps
mov
retf
pop
in
outs
cmp
(bad)
int3
loope
pop
repnz
shl
push
rcr
mov
add
cmp
mov
jnp
cmp
mov
dec
sbb
mov
push
dec
xlat
popa
mov
ss
mov
ror
push
scas
mov
pop
push
xchg
push
xor
mov
dec
clc
in
in
cwde
inc
sub
fist
and
or
(bad)
jae
jb
inc
test
or
div
jo
sahf
jl
out
aaa
scas
jbe
loopne
movs
jb
shl
retf
mov
sbb
sbb
ins
inc
ins
ret
xchg
sbb
adc
out
add
jne
or
push
jb
daa
mov
push
sub
daa
or
xchg
arpl
aaa
repnz
stc
iret
inc
call
and
mov
cmps
test
clc
(bad)
xchg
dec
scas
cwde
sbb
std
out
sub
in
and
mov
in
jae
stos
(bad)
pusha
push
rcl
xchg
and
movs
push
adc
xchg
fwait
xchg
sbb
inc
stc
mov
push
dec
js
inc
imul
ins
out
inc
adc
call
repz
rep
hlt
jb
fldenv
(bad)
stos
mov
inc
(bad)
std
test
fdivr
pop
pop
mov
stos
retf
xchg
sbb
mov
jno
sbb
sti
dec
std
les
xchg
xchg
mov
dec
adc
or
cmp
or
jmp
sbb
jo
cmp
jno
cmps
(bad)
int
jl
int
cmp
movs
mov
ins
out
aas
call
push
icebp
cmc
ins
xlat
add
jo
mov
mov
loope
in
xchg
xchg
out
add
cmp
pop
hlt
mov
in
add
mov
or
daa
xor
jmp
loopne
pop
dec
adc
ins
xor
outs
into
or
test
sbb
sbb
dec
mov
das
xchg
add
or
jge
cmp
or
ret
cdq
stos
movs
aam
imul
imul
(bad)
gs
adc
jae
xchg
dec
in
pop
mov
mov
or
ss
aad
cmp
cmp
cmps
jp
fisttp
les
fmul
push
shl
sbb
in
in
mov
push
push
je
mov
sub
sbb
xchg
sbb
jb
adc
movs
lea
or
(bad)
xor
call
push
inc
fld
leave
retf
pop
pop
enter
shl
or
ror
cmp
outs
push
adc
repz
jmp
iret
push
push
mov
sbb
out
leave
dec
jbe
lock
sahf
xor
xlat
xchg
xor
jnp
aam
(bad)
sar
gs
mov
jae
inc
cmp
lds
loopne
arpl
push
arpl
sbb
mov
push
retf
clc
je
adc
jmp
lods
adc
jo
fxch
rcl
out
xor
fld
aas
adc
jmp
sub
cmp
jg
sbb
out
sub
mov
adc
in
or
adc
cld
test
outs
xchg
push
ja
leave
imul
stos
inc
mov
pop
(bad)
fisubr
jmp
adc
leave
xor
(bad)
fisubr
popa
push
xchg
sbb
dec
pusha
push
outs
scas
loopne
pop
mov
sub
fadd
jb
movs
(bad)
add
rol
sub
bswap
adc
movs
push
bound
sub
dec
cmp
out
in
xchg
jl
xor
sahf
jmp
outs
movs
push
mov
pop
xor
jbe
jmp
or
push
aam
adc
ja
push
fst
cmp
arpl
fisttp
push
push
addr16
push
mov
sub
fstp
sbb
adc
or
cli
ret
dec
test
aas
(bad)
addr16
inc
imul
mov
push
adc
cwde
loopne
dec
call
scas
mov
jno
inc
out
test
and
(bad)
adc
xchg
cmp
jmp
repz
(bad)
dec
push
fcmovnb
cmps
adc
in
ins
adc
xchg
popa
mov
xor
fistp
stc
pop
mov
fbld
idiv
mov
mov
cs
mov
xor
jp
std
into
add
xor
xor
jmp
fimul
cmp
add
push
retf
fist
mov
cmp
jmp
push
and
cmp
adc
popf
(bad)
cld
ins
sbb
inc
add
gs
lods
pop
push
rcl
cmps
jbe
xchg
dec
shl
neg
pop
(bad)
stos
in
leave
stc
aad
lock
(bad)
aas
addr16
sar
jecxz
mov
or
inc
(bad)
out
cmps
push
int
outs
jnp
pop
pop
imul
out
pop
ror
sahf
lods
js
sbb
mov
dec
push
idiv
inc
sub
push
aad
mov
out
mov
or
int3
adc
pop
push
stos
rcl
mov
lahf
push
out
rcl
jns
arpl
add
mov
and
cdq
sub
aaa
xchg
inc
mov
jge
xchg
pop
daa
aam
cmps
repz
cmp
fiadd
dec
mov
pusha
movs
xlat
dec
(bad)
lds
push
adc
cmps
push
sub
fcmovnb
clc
ret
loop
rol
test
(bad)
out
push
and
pop
cmp
mov
mov
sub
add
add
inc
xor
shr
sahf
retf
arpl
jp
ds
cmp
and
add
jg
and
cld
or
mov
and
or
dec
push
push
(bad)
pop
mov
push
inc
xlat
arpl
jb
nop
test
test
mov
fbld
sbb
jl
dec
mov
xor
mov
adc
sub
fistp
in
xor
push
gs
lods
(bad)
(bad)
aad
push
and
std
sub
shr
sbb
jbe
jno
outs
test
repz
out
sbb
mov
scas
cmp
fwait
cmps
std
mov
idiv
adc
xchg
imul
jp
mov
dec
push
cmp
push
(bad)
xchg
test
sbb
mov
inc
sar
repnz
sub
inc
push
shr
daa
cmp
mov
cmps
daa
mov
pop
jne
ficomp
dec
dec
dec
test
outs
push
ins
inc
cmps
sub
sar
pop
cli
and
pop
pop
jo
cmp
ja
mov
sar
jno
mov
jb
inc
clc
inc
mov
cld
in
pop
pop
pop
fwait
mov
mov
sbb
jb
adc
mov
int
arpl
scas
scas
loopne
inc
xchg
jg
nop
inc
jmp
imul
test
mov
stos
mov
leave
into
ds
push
adc
or
loopne
(bad)
aad
push
pop
aas
lds
mov
xlat
test
mov
clc
jg
popf
bound
pop
sahf
dec
pop
pop
out
or
and
cmps
xchg
sahf
fdiv
push
ror
test
call
popa
addr16
adc
xchg
lods
repz
fist
dec
aas
shr
adc
xchg
std
jle
inc
sub
push
adc
pop
mov
mov
mov
push
pusha
imul
add
jbe
pop
pop
fcom
imul
lds
inc
movs
lahf
(bad)
mov
push
cmp
pop
mov
(bad)
jnp
mov
call
jne
mov
inc
test
out
mov
or
xor
mov
mov
add
bswap
mov
pop
ss
pop
xchg
mov
enter
dec
movs
fs
sbb
rcl
jne
adc
add
push
add
movs
fmul
leave
cdq
jb
mov
push
add
add
outs
daa
pop
jmp
mov
clc
gs
in
mov
ins
mov
adc
loopne
out
fucomi
push
out
cdq
xchg
mov
sub
mov
xchg
sub
addr16
mov
loope
loopne
push
push
pop
push
mov
jp
outs
xor
icebp
add
lea
arpl
ss
lods
stos
xchg
or
mov
mov
mov
loope
std
retf
nop
das
cmps
jo
adc
loopne
sar
mov
call
fcomi
jg
repz
adc
mov
mov
xchg
pop
stc
jbe
lea
and
jns
addr16
xor
mov
jp
enter
xchg
lahf
xor
mov
jo
cmps
mov
lea
loopne
add
inc
xor
add
pop
jae
jecxz
cs
sbb
push
int
cmps
je
lahf
das
out
lea
pusha
and
fst
add
push
out
pop
repnz
add
adc
iret
int3
mov
add
cmps
jp
in
sub
and
push
push
loop
add
cs
inc
add
dec
fidiv
bound
sub
and
xor
lods
inc
fcomp
jecxz
xor
retf
adc
pop
fs
sub
cmp
fs
dec
and
xchg
xor
or
push
cmps
sbb
outs
pop
sbb
xor
xor
push
jo
jl
out
inc
mov
and
xchg
mov
es
jmp
jnp
add
je
fidiv
fs
jle
(bad)
pop
in
jne
div
test
inc
cs
sub
xchg
les
mov
ret
sbb
or
cmp
retf
sbb
jb
jne
push
xchg
(bad)
lea
cmps
lds
xor
aad
enter
(bad)
mov
mov
(bad)
dec
rol
adc
out
jb
inc
lods
imul
in
mov
div
cmp
retf
pop
push
mov
or
sub
push
int3
jecxz
ss
push
cmps
add
movs
jae
test
jno
out
inc
cld
mov
pop
xchg
popa
(bad)
(bad)
dec
les
cli
leave
inc
fsubr
adc
call
push
sub
dec
mov
push
repz
(bad)
pop
aam
scas
cs
dec
repnz
add
int3
rcl
mov
xchg
sbb
sbb
pop
or
int
aam
neg
sti
pushf
push
sar
idiv
ret
ins
gs
push
push
pop
xlat
jle
adc
je
or
imul
push
outs
dec
pop
scas
sub
movs
add
mov
sub
dec
fwait
push
jae
in
mov
shl
adc
cld
jne
add
ds
outs
pop
shl
data16
(bad)
pop
push
mov
push
into
scas
stos
fist
mov
dec
aam
push
icebp
lods
(bad)
xor
or
shr
mov
dec
add
inc
lods
mov
int
inc
daa
sub
or
test
jnp
shr
(bad)
jle
in
push
pop
pop
cwde
bound
retf
in
sbb
push
push
pop
sub
or
daa
popf
sub
daa
rcl
outs
jle
or
(bad)
sub
imul
cmp
icebp
dec
ins
cwde
loope
or
pusha
push
dec
dec
lods
(bad)
jne
cmp
repz
sbb
aas
mov
mov
pop
and
imul
pop
jp
retf
and
mov
mov
inc
(bad)
dec
push
add
push
out
add
mov
cmc
dec
stc
adc
pop
int
pushf
pop
cmp
in
jge
jle
xchg
leave
leave
scas
cmp
repz
(bad)
imul
cmp
add
cmp
sub
cmp
jb
mov
hlt
pop
fs
fmul
popf
mov
dec
push
mov
dec
test
shl
push
jecxz
in
dec
mov
imul
test
sbb
int3
aad
inc
jnp
cmp
inc
int
inc
mov
stc
adc
push
ins
mov
xchg
(bad)
and
(bad)
cwde
mov
push
inc
loopne
movs
retf
mov
int3
fisubr
inc
or
arpl
sbb
mov
test
jmp
int
(bad)
and
pop
lea
in
mov
inc
jecxz
dec
adc
mov
in
lods
stc
mov
mov
shl
loope
jmp
adc
sti
std
jne
sub
les
mov
inc
push
xor
out
xchg
les
lea
xchg
pop
jo
mov
push
mov
(bad)
in
aam
xchg
loop
jge
and
scas
pop
js
pop
les
daa
stos
je
ret
retf
dec
shr
xor
xor
or
pop
dec
sub
mov
mov
ss
pop
or
dec
call
data16
mov
xchg
cmp
dec
stc
dec
and
dec
mov
pop
popf
lahf
xor
and
lock
cmps
mov
data16
nop
(bad)
loop
loop
cmp
icebp
mov
addr16
xchg
push
pop
xchg
adc
in
push
jmp
fadd
or
inc
cs
je
pop
cmp
or
pop
outs
stc
pop
and
mov
push
push
adc
imul
sub
mov
push
push
push
push
dec
sub
cmps
pop
sub
jae
push
std
pop
shl
imul
scas
adc
aam
mov
mov
cwde
jmp
icebp
push
mov
add
mov
sahf
stos
sbb
test
adc
pop
fdiv
jmp
enter
pop
cmp
adc
shl
jae
or
fs
in
fcomp
fld
fwait
sub
dec
ss
add
pop
fld
jns
clc
jb
rcl
enter
inc
add
or
imul
adc
cmp
jecxz
push
xchg
mov
shl
xor
adc
mov
ret
jne
xor
in
call
mov
fcmovb
dec
xchg
hlt
or
std
into
dec
pop
out
sar
movs
cmps
or
xor
mov
push
or
mov
(bad)
dec
cdq
jmp
and
fdiv
loopne
cld
pop
sub
or
mov
movs
addr16
lods
pop
mov
push
fs
dec
push
aaa
mov
dec
push
retf
pop
ds
test
not
mov
and
cmps
loopne
jle
jge
popa
pop
push
add
sbb
push
push
adc
pop
push
push
jmp
pusha
mov
pop
pop
fisub
jge
lds
jmp
btr
sub
mov
mov
xchg
int3
sbb
jne
test
sbb
into
mov
sahf
push
jmp
std
push
push
push
in
cmps
cwde
and
clc
sbb
outs
dec
push
in
fadd
and
pop
xor
popf
jo
inc
pop
mov
mov
cmps
fstp
ins
adc
out
std
cmc
push
lock
cmps
in
fidiv
adc
mov
(bad)
out
aaa
cli
sti
stc
push
add
sub
retf
jle
push
mov
out
xor
std
repz
jg
fucom
clc
retf
and
cmp
rcl
aad
sub
test
mov
xchg
mov
data16
je
xchg
add
sahf
inc
mov
sbb
adc
xor
cmp
jb
sub
mov
stc
mov
inc
call
pop
push
add
jecxz
mov
add
sub
movs
add
mov
aaa
dec
push
or
xchg
cmovne
fisubr
and
(bad)
nop
int
push
mov
rol
sub
inc
mov
mov
xchg
cli
dec
xor
cmp
cmp
mov
mov
or
dec
dec
das
sub
add
mov
xor
ja
jmp
and
push
jne
ror
pop
jb
cmp
stos
hlt
mov
cmps
jg
mov
sub
mov
popf
pop
shl
jbe
aad
clc
imul
das
enter
and
sub
xor
(bad)
addr16
jmp
(bad)
stos
mov
(bad)
mov
je
sahf
push
sti
pusha
cmp
out
xor
nop
sub
cmps
imul
xlat
jecxz
jmp
jmp
jnp
inc
stc
add
add
mov
or
sub
imul
sub
inc
lds
or
mov
test
sbb
push
outs
sbb
mov
rep
movs
pop
fs
rol
test
imul
sbb
cmp
pushf
imul
push
dec
into
rcl
scas
arpl
dec
fsubr
jns
jbe
cmc
movs
scas
mov
xor
push
lods
pop
scas
ins
mov
jmp
xchg
sub
xchg
mov
cmc
inc
push
pop
stc
shr
retf
fadd
in
ds
adc
mov
adc
lods
sub
inc
nop
xchg
mov
xor
inc
frstor
imul
or
xor
fld
or
and
scas
mov
iret
cmc
jle
les
aad
sbb
sub
test
adc
adc
cwde
xor
cmps
sub
imul
imul
xchg
(bad)
push
addr16
loopne
lea
adc
push
dec
jecxz
push
ins
xchg
xchg
pushf
and
xor
mov
mov
lods
in
adc
shl
ret
sub
jno
retf
add
das
mov
lods
jmp
mov
mov
cmp
inc
out
movs
sub
int
xchg
jmp
ret
mul
shl
hlt
mov
jnp
jbe
inc
lahf
and
movs
jae
adc
ja
inc
mov
iret
clc
mov
pusha
ins
dec
jle
movs
add
jl
test
cmp
and
arpl
and
(bad)
cmps
cmp
cmp
loop
retf
les
outs
loope
xchg
or
sbb
or
inc
and
popa
pusha
cmp
mov
add
cmp
aad
jmp
adc
xor
lods
mov
pop
add
pop
sub
inc
cmp
sub
and
sub
popa
jmp
push
xor
mov
test
jmp
sar
out
iret
jbe
imul
jecxz
mov
ins
ins
aas
ins
test
call
pop
push
daa
xchg
push
cmp
in
cmp
push
cmp
pop
mov
sbb
sar
mov
jmp
mov
pop
test
inc
stc
cmps
ss
loope
dec
jno
xchg
push
inc
or
mov
out
push
and
jmp
push
jno
pusha
scas
or
pusha
xchg
push
cmovs
jo
sbb
xchg
nop
cmp
retf
retf
jmp
sub
jae
sahf
scas
ficom
ja
or
adc
mov
inc
fsub
jge
lds
int3
jg
repnz
iret
das
lds
push
sbb
cmp
xchg
xor
jbe
pop
scas
xor
scas
ret
arpl
add
retf
push
retf
sub
stos
jmp
push
and
pop
popf
push
lea
mov
ja
mov
dec
or
jmp
push
sbb
bound
mov
repnz
xchg
sbb
loope
dec
ja
mov
addr16
mov
xchg
mov
jnp
in
sbb
sbb
cmp
enter
in
push
mov
cli
add
pop
dec
push
xor
test
mov
adc
pop
and
repz
je
js
idiv
lds
inc
aas
popf
xchg
mov
stos
xlat
dec
in
push
hlt
mov
mov
mov
sbb
fld
jmp
push
push
outs
pop
inc
push
retf
inc
jns
iret
push
xlat
(bad)
rol
dec
mov
in
pop
cmp
jp
xor
es
push
push
sbb
dec
and
int
loopne
retf
and
fnsave
imul
scas
dec
push
dec
pop
in
xchg
lods
fnstsw
xchg
xor
push
mov
adc
test
rcl
popf
mov
fwait
pop
test
test
pop
daa
dec
mov
jo
aad
push
cmps
mov
mov
imul
mov
fisub
fadd
mov
and
inc
adc
jle
enter
and
add
mov
pop
stos
mov
cmc
loop
mov
add
adc
mov
push
out
jmp
ror
retf
mov
push
xchg
aad
jmp
aad
add
fs
cmp
(bad)
mov
loopne
mov
xchg
mov
mov
cmp
push
adc
inc
mov
mov
jns
call
sbb
dec
dec
add
not
jge
stc
sbb
popf
(bad)
mov
mov
dec
lock
xor
aaa
add
in
fwait
rol
mov
jecxz
jne
add
pop
push
dec
sbb
xlat
fldcw
push
call
jecxz
aad
test
cmc
dec
int
sbb
xlat
or
sub
data16
push
les
imul
push
cmc
int3
pop
ret
idiv
fist
retf
loope
fstp
ins
inc
cdq
fdiv
mov
aas
and
fisttp
push
cdq
add
pop
sub
jmp
jp
jmp
jns
dec
pop
dec
imul
dec
mov
ret
in
jl
pop
stos
inc
adc
mov
dec
and
fs
mov
inc
lock
mov
mov
test
mov
ds
in
mov
pop
nop
adc
add
movs
sahf
(bad)
mov
and
lock
or
push
mov
mov
xlat
push
inc
xchg
test
mov
jb
cs
fcmovnbe
and
fnstcw
in
jbe
mov
call
add
mov
jne
ror
lods
aad
dec
inc
cmp
sub
std
test
or
mov
xchg
leave
pop
adc
push
jmp
ins
ss
adc
retf
adc
ds
imul
xchg
jmp
hlt
jge
xor
push
lods
push
ret
jl
xlat
shl
jb
loop
(bad)
stos
mov
xchg
xor
scas
shr
and
js
mov
mov
imul
lock
sub
mov
outs
lods
mov
test
xor
into
push
bound
xchg
adc
sbb
xor
pop
addr16
nop
(bad)
sti
in
cmp
or
jmp
out
call
xor
adc
retf
push
fisub
push
enter
mov
adc
aam
fild
in
lods
dec
sbb
sbb
or
int
int3
fstp
sub
lea
jl
xor
pop
ins
and
stos
sub
sbb
sbb
shl
pop
push
mov
xchg
jae
in
lods
sub
push
push
ins
adc
pop
pop
mov
fs
(bad)
adc
xor
into
push
mov
adc
or
pop
dec
cmps
jl
jmp
cmp
std
lahf
lahf
das
pop
in
mov
fsub
nop
imul
jbe
pop
fstp
jb
mov
push
pop
aas
lahf
cmp
dec
xchg
popa
pop
popf
cmp
push
shr
ss
ror
xchg
imul
jns
mov
stc
in
call
fidivr
aas
out
jbe
xchg
into
sbb
dec
dec
loop
sbb
mov
jbe
cmp
push
sub
xor
xchg
adc
adc
das
data16
xor
data16
enterw
repz
cmp
neg
retf
add
and
mov
shl
jmp
loop
leave
or
or
outs
pop
xchg
ds
(bad)
je
cmp
movs
repz
or
add
cwde
test
mov
je
jmp
sub
xor
imul
add
sbb
jnp
rcr
add
sahf
ret
lahf
fs
mov
adc
jns
lods
gs
loope
aas
sub
inc
pop
icebp
dec
adc
push
push
or
inc
fldcw
ds
mov
es
or
imul
adc
push
bound
out
jno
sbb
pushw
cdq
mov
sbb
pop
xchg
cmps
adc
cli
jp
outs
jmp
loopne
inc
rcr
xchg
fldcw
scas
fsub
(bad)
xchg
rcl
imul
popf
cmp
and
push
jnp
dec
pop
daa
into
cmp
xlat
pop
mov
int
into
mov
pop
(bad)
mov
jmp
mov
dec
pop
add
xchg
mov
push
shl
shl
inc
dec
loopne
in
xchg
dec
inc
jns
repnz
aad
shl
or
pop
arpl
or
or
xchg
sbb
loop
pop
sbb
or
(bad)
jg
inc
or
push
adc
popa
into
mov
mov
hlt
cmp
push
in
pop
add
stos
push
clc
pop
dec
in
leave
int3
xor
or
push
push
mov
cmp
pop
lea
push
das
iret
popf
inc
(bad)
(bad)
shl
mov
retf
int
mov
fwait
repnz
add
es
lea
neg
pop
popf
push
jmp
and
dec
mov
pop
sbb
out
mov
adc
popa
pop
or
mov
add
in
sbb
lds
fincstp
adc
in
mov
mov
ds
or
adc
(bad)
mov
stc
retf
cmps
repz
mov
and
pop
ret
rcl
cmp
fdiv
xchg
rcl
push
or
(bad)
aam
push
dec
hlt
out
pop
lods
xchg
adc
push
and
dec
ret
cmps
lods
cld
push
not
sub
inc
popa
xchg
(bad)
mov
aam
pop
scas
or
loop
adc
inc
adc
std
mov
in
fisttp
inc
in
call
out
iret
outs
sub
inc
gs
dec
and
(bad)
and
int3
test
sub
int3
popa
push
sub
or
shl
repnz
inc
mov
jb
outs
push
xor
dec
call
movzx
mov
inc
or
in
pop
adc
xchg
mov
dec
pop
aad
leave
loop
aaa
mov
jmp
push
mov
dec
adc
jmp
mov
adc
or
push
das
in
stos
fidiv
lods
xchg
xor
cmp
sahf
stos
into
inc
jp
mov
out
cmps
inc
int3
mov
jle
xlat
jb
test
lds
std
push
sub
out
push
sbb
push
cmps
sbb
xlat
lea
push
inc
fs
out
jl
pop
inc
(bad)
out
pop
aas
or
stc
sbb
imul
xchg
int3
xchg
lahf
fisub
inc
fiadd
xchg
xchg
mov
pop
xor
adc
jl
dec
jb
adc
test
call
ret
ins
or
jmp
sbb
inc
pop
js
imul
pop
rcr
jne
pop
in
das
lea
pop
dec
int3
sahf
popf
mov
xchg
sbb
out
inc
or
shl
nop
jmp
js
jno
popf
data16
jbe
push
das
mov
rol
fnstcw
xor
outs
xchg
imul
repnz
fld
mov
dec
ss
jo
and
pop
mov
add
lock
push
push
jl
out
xor
cmps
push
lea
fs
push
ds
cmps
repnz
push
jmp
push
sub
dec
in
add
or
xchg
jmp
icebp
push
aad
pop
push
sbb
pop
cmp
xchg
dec
daa
adc
add
repnz
push
stc
xor
pop
enter
lds
mov
adc
cmp
in
and
push
and
(bad)
adc
mov
mov
cmps
xchg
push
aad
and
adc
sbb
dec
sub
aad
mov
xchg
xchg
adc
push
imul
sub
(bad)
enter
and
mov
in
sbb
push
movs
ret
ss
aad
dec
and
xchg
xchg
fmul
inc
mov
hlt
sar
inc
pop
xchg
hlt
outs
nop
gs
cmc
shr
shl
or
(bad)
lds
ins
test
out
push
pop
dec
out
fstp
retf
add
fs
pusha
xor
(bad)
(bad)
loop
hlt
pop
pop
pop
cmc
mov
cwde
lahf
mov
push
push
imul
jg
xchg
fisub
adc
movs
sub
xor
enter
inc
xor
test
mov
mov
inc
mov
test
imul
js
mov
pop
adc
xor
xlat
sbb
jbe
dec
into
lods
sub
sti
xchg
in
jnp
aas
shl
xor
and
(bad)
pop
pop
push
sbb
push
xor
push
es
imul
xlat
pop
inc
cmp
xchg
daa
fdivrp
loop
pop
test
mul
adc
mov
int3
retf
sar
je
jmp
inc
mov
and
in
push
jle
test
xor
add
cmp
jle
rcl
add
into
lods
loope
clc
loopne
adc
jle
mov
inc
jo
adc
arpl
add
and
rcl
cmp
ss
adc
xchg
(bad)
(bad)
imul
ret
push
sahf
fdiv
jg
xchg
mov
cmp
(bad)
arpl
push
stos
and
call
fist
mov
je
shl
mov
fistp
movs
and
fild
pop
adc
xchg
repz
pop
mov
test
test
fild
inc
fdiv
xor
addr16
add
retf
xor
js
loop
dec
das
test
xor
or
xchg
(bad)
sbb
pop
push
iret
icebp
in
cld
pop
mov
fldcw
jmp
not
mov
int3
dec
or
mov
jnp
out
mov
(bad)
cmp
or
mov
mov
xchg
dec
repnz
aas
xor
pusha
add
and
pop
push
mov
aaa
jno
leave
aas
lock
cmp
or
add
les
push
sbb
jns
mov
fcom
sub
into
(bad)
push
push
cld
ds
sub
sbb
pop
jle
call
out
inc
ss
das
enter
leave
inc
test
xchg
adc
cmp
popf
das
mov
sub
xor
cmpxchg8b
(bad)
int3
jl
pop
cmp
xchg
pop
dec
arpl
test
dec
mov
add
pop
push
lds
mov
vmovhps
push
(bad)
hlt
sbb
push
leave
(bad)
int
sbb
adc
lea
aam
xor
jo
rcr
mov
jge
scas
inc
pop
bound
mov
push
rcr
iret
or
inc
add
jb
movs
cmp
in
cwde
ror
xchg
or
sbb
adc
(bad)
adc
je
es
(bad)
in
inc
fisttp
jp
and
jl
cmp
mov
arpl
retf
add
push
loop
mov
enter
dec
push
jb
mov
shl
sbb
mov
mov
push
ret
xchg
mov
mov
mov
push
inc
adc
lahf
or
pop
cmp
xchg
stos
xchg
and
jle
sub
pop
scas
lock
bnd
cli
jmp
cmp
push
dec
add
neg
mov
(bad)
scas
fiadd
lahf
jecxz
pop
jl
sti
(bad)
fs
imul
mov
mov
(bad)
mov
mov
fbld
not
sub
imul
stc
bound
pop
jmp
jno
jbe
pop
pop
sub
ins
xchg
inc
ins
es
cmp
sub
stos
rol
movs
cmps
xor
les
mov
loop
dec
hlt
fcomp
js
or
jb
pop
enter
aas
pop
cmp
dec
and
pop
aad
out
mov
pop
add
ja
pop
jge
dec
push
jno
pop
inc
aam
mov
cmovge
inc
ins
cmp
pop
js
jg
xchg
fwait
int3
jle
push
lods
sar
inc
cmp
test
inc
sub
mov
jmp
idiv
add
push
fsub
mov
movs
push
out
mov
xor
cwde
dec
ror
sbb
fimul
xlat
inc
xor
fisub
xchg
mov
rol
pop
inc
push
sbb
shl
sub
fidivr
push
je
mov
push
add
xchg
imul
push
push
adc
stc
cld
add
or
in
dec
sub
je
mov
jmp
in
xchg
iret
sar
xchg
mov
and
xor
je
jbe
sti
cmc
cwde
ret
pushf
adc
jp
sub
dec
fiadd
adc
pushf
test
or
push
iret
add
cmp
sti
xor
jmp
cmp
xchg
cmp
mov
ss
(bad)
nop
mov
pop
stos
into
inc
ja
fisubr
and
or
push
jbe
inc
fimul
test
jnp
pop
cmc
mov
inc
dec
jge
into
mov
in
stc
mov
mov
sahf
xchg
pop
mov
sbb
jg
cli
aas
jg
pusha
cmp
jnp
push
push
arpl
mov
dec
ins
dec
(bad)
push
mov
out
sub
sub
loope
and
cmp
push
lds
push
xlat
cwde
loope
daa
xchg
xchg
movs
les
sbb
adc
jb
hlt
add
mov
push
pop
(bad)
mov
inc
(bad)
int
mov
in
mov
jb
retf
dec
push
sahf
cmp
fwait
iret
ss
cs
shl
adc
ds
cmp
in
jns
fbstp
or
xchg
movs
and
jns
cli
pop
mov
movs
xor
shl
js
sub
mov
xor
and
xchg
clc
mul
cmp
xor
cmp
cli
add
das
or
xchg
inc
lock
out
je
cmp
or
scas
daa
fld
inc
inc
pop
xchg
hlt
repz
mov
jno
repz
fwait
movs
call
mov
js
xchg
in
es
and
mov
push
ror
mov
mov
out
cmp
push
fdivr
push
adc
mov
push
mov
sbb
cmp
xchg
push
aad
fdiv
jp
enter
mov
cmp
sbb
fstp
aam
ins
sub
out
adc
shl
rcr
and
cmp
hlt
sub
mov
dec
pop
cmp
retf
sub
and
cmc
inc
retf
popa
push
fnsave
adc
mov
lods
cmp
pop
cmp
gs
les
movs
cmp
mov
xchg
add
int3
jmp
mov
into
mov
(bad)
jmp
mov
pop
pop
sahf
jle
test
sbb
xlat
xchg
jge
sbb
outs
sub
mov
push
rcr
ins
mov
repnz
mov
adc
and
daa
and
loopne
je
mov
cdq
xchg
ret
mov
cmp
mov
in
add
test
or
int3
sub
push
enter
sub
push
cmp
fisub
aas
les
cdq
push
fdivr
mov
mov
cs
mov
sar
aam
add
dec
and
sub
(bad)
push
sar
mov
xchg
mov
inc
je
push
je
loope
mov
xchg
movs
mov
(bad)
push
mov
stc
popa
in
sub
inc
pop
(bad)
and
pop
add
pop
push
popa
sub
inc
mov
imul
test
lock
xchg
test
(bad)
loop
into
and
sub
shr
cmp
or
dec
fadd
ret
leave
ror
cmp
or
add
fidiv
xlat
push
xchg
pop
fild
ins
mov
scas
mov
pop
ret
jno
mov
add
test
pop
xor
sahf
cwde
cmp
in
xchg
sar
arpl
mov
ins
sbb
adc
mov
jmp
loope
and
ja
call
loop
mov
xchg
or
sub
dec
mov
or
rcr
inc
inc
sahf
push
mov
out
jb
cmp
sub
mov
(bad)
mov
test
sti
das
mov
mov
pop
pop
add
adc
push
test
rcl
fld
push
lods
xchg
sbb
cmp
scas
sar
push
add
aam
push
inc
(bad)
jmp
pop
stos
mov
jne
push
and
add
inc
sbb
imul
add
loope
js
(bad)
jmp
inc
and
push
mov
retf
jmp
xor
retf
mov
or
or
and
popf
sbb
(bad)
es
aad
or
push
push
ds
stos
pop
test
jp
mov
mov
jae
mov
ret
ins
enter
cmp
push
outs
mov
mov
xlat
push
jmp
fsub
out
popa
pushf
out
xor
xlat
xor
or
mov
add
in
and
mov
loope
mov
inc
sahf
xor
xor
fisubr
test
mov
or
mov
outs
les
xor
jecxz
inc
pop
in
and
push
pop
clc
shr
or
xchg
cs
test
or
pop
mov
xlat
pop
movs
arpl
inc
push
(bad)
pushw
sahf
shl
push
out
sub
cmp
inc
push
inc
fidiv
and
lahf
xor
inc
cmps
outs
or
in
jge
xor
adc
push
das
jae
and
xchg
sub
add
xchg
icebp
daa
dec
lods
retf
imul
mov
outs
or
push
popa
sub
or
stos
push
dec
or
xchg
(bad)
jmp
xchg
mov
xchg
div
fidiv
loope
imul
mov
mov
ret
test
jmp
pop
fimul
and
jno
out
call
hlt
mov
mov
inc
inc
imul
cdq
stos
inc
and
fcom
xchg
dec
pop
paddd
cmp
cmps
std
popa
test
ds
cmps
xchg
adc
cs
xchg
cmp
call
mov
movs
mov
inc
clc
add
and
mov
inc
push
psrlq
std
imul
in
cmp
cmp
adc
rol
in
mov
pop
push
xor
fdivr
inc
inc
mov
add
inc
mov
aad
std
add
ror
mov
scas
outs
mov
fs
and
pop
pop
arpl
shr
ins
add
pcmpeqw
and
ror
sub
dec
or
scas
fdiv
or
lds
fs
pusha
push
adc
jle
push
xchg
sbb
out
test
aad
add
ret
es
and
mov
aaa
jne
scas
fwait
loop
loop
mov
xlat
(bad)
jmp
xor
cli
inc
bound
push
inc
hlt
cwde
fldl2e
imul
mov
fld
xchg
dec
loope
movs
push
xor
cmp
lds
pop
fldcw
cmps
sub
xchg
enter
jo
cmp
(bad)
imul
into
lds
fisubr
ret
mov
jo
adc
inc
loop
sbb
mov
push
mov
sub
into
iret
pmulhw
retf
aam
addr16
dec
nop
jno
jl
cmp
jb
inc
sbb
xor
rol
and
cmp
fs
out
icebp
fidivr
lods
ins
pop
ret
fsubr
xchg
mov
aaa
inc
sbb
xchg
fmul
and
jecxz
dec
imul
xchg
xchg
adc
sbb
scas
fisub
mov
int
jmp
pop
mov
xchg
call
bound
test
mov
hlt
outs
aaa
dec
or
mov
dec
and
sub
mul
jns
movs
or
imul
inc
xchg
dec
pop
out
cmp
inc
dec
call
cdq
data16
xchg
lods
pusha
cmp
shl
lods
xchg
test
sbb
xchg
stos
cmp
neg
mov
call
jl
or
xor
mov
and
cdq
cs
cmp
mov
and
lahf
out
in
jb
ins
ret
aas
xchg
sti
mov
jmp
fisubr
xor
aad
test
mov
xchg
aas
bound
xor
sti
out
mov
loope
cvtdq2ps
out
xor
fdivr
aam
and
aaa
jne
dec
cmp
or
test
mov
sbb
mov
std
fmul
repnz
repz
jb
and
add
(bad)
lock
ror
outs
cwde
or
jle
push
cmp
add
es
loop
mov
mov
inc
adc
or
pop
mov
push
push
imul
imul
neg
jae
mov
mov
cmps
fldpi
inc
or
dec
aaa
ds
and
pop
ret
sbb
and
pop
jae
mov
aaa
jmp
jo
jmp
sub
mov
xchg
xor
inc
fdiv
dec
imul
aaa
pop
inc
and
in
movs
movs
dec
lds
imul
push
xor
push
sbb
test
ror
add
or
iret
or
mov
je
mov
add
sub
dec
and
je
push
stos
mov
fsubr
mov
jge
push
add
mov
(bad)
js
jns
and
mov
dec
fsub
and
fnstsw
out
xchg
jnp
dec
int3
in
pusha
popa
xor
aaa
cmc
vhsubpd
stc
cmp
sahf
adc
ret
or
cmp
rcl
int3
push
and
push
jne
adc
rol
xchg
xlat
mov
pop
ret
sar
nop
mov
cwde
std
mov
mov
icebp
leave
mov
clc
dec
inc
add
mov
and
fwait
in
clc
xlat
cmc
(bad)
sub
dec
jno
in
ret
cmp
push
call
pop
enter
enter
inc
and
xchg
pop
cmp
lods
inc
jmp
jbe
fdiv
fs
jae
jno
in
test
outs
les
xchg
dec
lea
ins
inc
out
loop
outs
jg
popf
and
pop
fwait
sbb
repz
push
pop
and
ret
sbb
inc
mov
pop
or
push
and
jne
dec
xchg
push
iret
jmp
pop
ds
adc
mov
daa
rcr
nop
inc
adc
adc
cmp
or
cmp
cli
inc
ja
arpl
sar
shl
dec
xlat
call
dec
dec
or
jmp
dec
push
fsubr
mov
mov
xchg
les
popa
adc
jnp
cmps
inc
jnp
icebp
xchg
daa
sti
fsubr
retf
jg
(bad)
(bad)
loopne
cmp
lahf
jmp
dec
xchg
test
or
loop
jb
(bad)
imul
xchg
mov
ins
scas
shr
in
mov
sbb
pop
or
into
loop
lock
inc
test
retf
add
jbe
push
mov
inc
jmp
pop
jmp
nop
mov
mov
pop
mov
sbb
fcom
div
push
and
inc
sbb
stc
add
sub
cmc
cmp
xor
mov
lock
dec
data16
repnz
mov
mov
pop
or
rol
je
add
mov
icebp
jmp
sar
pop
cmp
out
aaa
lds
bound
repnz
ror
addr16
mov
dec
clc
sub
int
add
cmp
bound
test
sbb
xor
mov
adc
jl
out
aad
rol
add
shr
aaa
xchg
or
mov
push
mov
xor
dec
xor
in
scas
mov
lds
cld
addr16
cwde
cli
mov
test
pop
(bad)
sub
ret
and
repnz
pop
and
imul
adc
or
cwde
mov
out
shl
pop
or
repz
inc
add
xor
cmp
addr16
xor
call
data16
pop
sub
lods
fdivrp
sahf
std
inc
inc
add
and
shl
jp
fs
fpatan
sar
mov
pusha
es
outs
rcr
outs
jmp
shr
ins
bsf
mul
pushf
(bad)
pop
arpl
xchg
sbb
cld
cli
aaa
sbb
jge
dec
mov
(bad)
jb
push
pop
push
arpl
add
push
(bad)
nop
push
push
dec
into
shl
pop
mov
mov
ins
retf
push
and
vphaddbq
inc
mov
jg
jno
jmp
pop
fild
arpl
test
stc
push
loopne
xchg
and
jl
cmp
aaa
cmp
dec
mov
popa
pushf
lea
xchg
inc
jns
adc
retf
xchg
mov
mov
cld
xchg
cmp
add
retf
xchg
cwde
jle
push
sub
sbb
mov
mov
jo
aaa
add
cli
mov
in
inc
cmps
es
arpl
mov
repz
xchg
loop
hlt
cli
mov
rol
test
inc
sub
pop
cmp
push
loope
pop
repnz
repnz
mov
(bad)
xor
mov
pop
sbb
xor
sbb
and
mov
mov
rcl
dec
data16
cmc
add
dec
inc
retf
push
or
mov
xchg
test
push
ins
adc
or
push
mov
scas
lds
add
dec
cld
in
repz
pusha
sbb
mov
and
mov
dec
(bad)
ror
add
pop
sub
lods
ins
sub
nop
inc
mov
mov
mov
stos
push
gs
(bad)
cmp
sub
or
std
mov
or
mov
fldpi
aaa
or
outs
mov
out
add
add
es
mov
int3
in
ret
pop
div
int
(bad)
test
adc
ins
jg
sbb
pop
mov
enter
or
adc
xchg
and
(bad)
movs
mov
(bad)
cmps
xchg
xchg
cdq
cmp
bound
or
add
pop
inc
hlt
(bad)
jbe
or
popf
mov
repnz
test
test
adc
test
sbb
out
test
pop
jnp
jecxz
fsub
or
and
shl
or
mov
mov
ja
xchg
mov
sbb
and
add
in
imul
mov
outs
aam
aas
jae
movs
ja
mov
sub
pop
push
sbb
push
(bad)
pop
fwait
int
out
ss
push
xor
inc
fwait
daa
cmovs
(bad)
cs
and
and
mov
scas
mov
dec
push
mov
mov
sub
fiadd
data16
sub
and
sub
into
pop
stc
push
jae
inc
outs
xchg
jecxz
aam
cmps
add
lea
xor
ret
add
inc
int
hlt
aaa
lahf
mov
sub
inc
sahf
pushf
arpl
ins
push
sub
pshufw
mov
mov
cmp
psraw
cmp
popa
xchg
or
and
push
aaa
or
or
jmp
xchg
jge
pushf
arpl
inc
iret
or
jbe
ret
add
(bad)
in
jp
mov
lahf
xor
aam
(bad)
sar
das
movs
(bad)
out
cmp
mov
jp
enter
mov
(bad)
jnp
sar
xor
jno
inc
cld
ret
push
sub
mov
mov
iret
ret
das
retf
sbb
xor
in
inc
and
jmp
mov
mov
mov
loope
inc
add
lds
frstor
xchg
pop
or
pop
test
mov
add
mov
inc
pop
das
cs
outs
cmp
xchg
add
dec
sbb
cs
int3
ror
sbb
fwait
movs
cmps
fmul
add
movs
or
cwde
push
mov
test
mov
in
mov
mov
mul
lock
fwait
jnp
add
movs
pop
push
mov
push
outs
aam
std
mov
aam
mov
pop
adc
mov
cld
retf
mov
push
(bad)
aam
inc
pop
cmp
pop
mov
in
push
and
ins
xchg
pop
js
sti
pop
lock
(bad)
(bad)
mov
or
mov
add
push
sub
cmp
in
in
push
lods
pop
aas
mov
xchg
sbb
xor
xchg
dec
add
das
xchg
adc
shl
lock
pushf
ins
xor
(bad)
push
ins
push
sbb
outs
out
pop
or
xchg
(bad)
and
ins
imul
aaa
push
add
fisubr
adc
stos
and
cmps
out
int
scas
cs
adc
jl
in
repnz
test
rcr
sti
dec
aas
xchg
cli
mov
pop
pop
pop
aas
fucomi
ret
adc
dec
add
sbb
mov
sub
xor
and
fsubr
rol
dec
xor
sahf
jp
jp
sbb
xor
mov
mov
(bad)
push
jecxz
adc
xor
mov
sbb
jnp
mov
mov
cmps
and
jnp
stc
cdq
jg
ins
jnp
inc
mov
jbe
adc
push
retf
ret
(bad)
push
outs
xor
sbb
dec
arpl
pop
fadd
lea
dec
mov
(bad)
js
jecxz
mov
dec
(bad)
dec
pop
das
stos
out
sub
sub
(bad)
rol
pusha
mov
retf
cld
fcom
sti
sbb
pop
loopne
pop
outs
ins
adc
loop
xor
mov
sbb
movs
out
stos
mov
or
mov
push
daa
outs
inc
(bad)
lock
dec
test
sub
jns
in
sbb
inc
xchg
movs
rcr
dec
aam
pop
js
pop
mov
push
mov
loop
adc
add
adc
jg
sbb
jge
or
lds
imul
repnz
in
adc
xor
adc
lock
inc
adc
cmp
repnz
pop
dec
inc
lods
mov
rol
mov
es
xchg
dec
mov
inc
sbb
push
adc
add
mov
repz
sbb
pop
das
mov
or
cli
movs
xchg
ins
jecxz
out
pop
dec
push
xor
enter
out
cdq
fdivr
or
fidivr
pop
call
and
cmc
scas
jmp
add
push
outs
in
add
or
pop
push
call
pop
cmc
mov
mov
fdivr
movs
jg
(bad)
int
add
pop
and
test
es
and
dec
mul
adc
push
in
jg
adc
sbb
imul
mov
mov
adc
movs
push
pop
stos
(bad)
nop
popf
(bad)
int
jb
cmovno
test
out
mov
or
ret
fsub
repnz
lds
jnp
rcr
shl
inc
out
and
test
pslld
sbb
ret
add
xchg
fidiv
mov
inc
fs
cmps
mov
push
push
jmp
dec
nop
aad
xor
test
push
aaa
sar
xchg
pop
ins
pop
add
pop
lahf
or
mov
xchg
and
cmc
hlt
and
mov
and
mov
and
adc
(bad)
mov
add
icebp
dec
jb
jle
and
dec
xchg
pop
daa
jp
mov
sbb
push
push
sub
add
stos
push
int
sbb
jnp
popf
fwait
mov
cli
mov
mov
lahf
mov
cmps
in
adc
mov
xchg
mov
or
and
cmp
mov
xchg
and
cmp
pop
aaa
pop
inc
or
jne
jbe
aad
dec
push
pop
jmp
mov
xchg
cli
add
(bad)
and
push
xor
mov
mov
shl
loope
dec
stos
in
jle
mov
push
jge
mov
mov
push
dec
adc
je
xor
xchg
mov
push
cld
push
int
ins
add
or
mov
xor
jp
push
fisttp
xchg
pushf
sar
fimul
or
aam
fmul
nop
lock
adc
or
ror
rep
fdiv
push
cli
push
std
iret
xlat
loope
mov
pop
popf
mov
push
adc
dec
xor
sbb
inc
fst
mov
adc
xchg
loope
leave
sub
xchg
sti
inc
inc
ins
fiadd
and
sub
sbb
(bad)
cmc
dec
bound
xor
add
xchg
js
push
mov
dec
fs
dec
popf
jmp
or
or
rcr
pop
aas
pop
aaa
add
xchg
inc
shl
std
in
cmps
dec
aam
outs
jmp
adc
out
mov
int3
test
jbe
dec
mov
clc
mov
mov
adc
(bad)
int
mov
je
inc
add
shl
mov
in
xor
sar
ds
jae
js
sbb
push
in
mov
inc
lds
sub
sub
jae
cmp
push
out
mov
cld
mov
and
popa
xor
pop
xor
(bad)
hlt
push
repz
jae
cmp
push
xchg
movs
jle
pop
movs
(bad)
call
pop
in
fidiv
or
iret
jg
into
adc
or
sahf
jg
(bad)
outs
add
mov
jmp
les
rep
mov
enter
jle
inc
fsub
cdq
das
xor
jb
cmps
aam
dec
sub
jbe
xor
cdq
dec
mov
push
repz
js
adc
int
in
mov
aaa
test
cmp
adc
and
shr
sbb
icebp
push
dec
lock
(bad)
jmp
pop
push
dec
jl
nop
mov
dec
push
aam
mov
enter
(bad)
cmp
out
std
mov
aad
ja
int
add
sbb
stos
inc
pushf
ficom
xor
inc
sbb
fst
xchg
sbb
jns
rcl
mov
xlat
int3
ins
xchg
jb
sti
cmp
std
repz
or
mov
adc
mov
(bad)
retf
adc
and
shl
mov
test
les
push
sbb
jmp
mov
push
sub
jmp
push
daa
pop
sub
jo
hlt
push
gs
or
fcomp
add
jnp
adc
adc
call
fisttp
pop
jno
jnp
je
scas
cmc
sbb
std
mov
inc
jb
ret
or
shr
test
imul
fstp
push
mov
dec
dec
push
sub
rol
mov
sub
leave
jl
daa
test
rol
xchg
push
loopne
rcr
js
int
fmul
sti
xchg
adc
pop
mov
pop
in
ins
sbb
mov
outs
je
add
and
jmp
(bad)
xchg
test
in
mov
sub
test
fisubr
and
dec
mov
cmp
iret
mov
cmp
lods
nop
pusha
mov
dec
enter
sahf
jp
sub
jl
cmp
fadd
add
adc
mov
(bad)
lahf
cwde
retf
enter
push
aaa
xchg
and
leave
pop
dec
repz
test
mov
lea
adc
mov
in
or
jp
dec
push
popf
int3
cmp
mov
add
dec
pop
mov
gs
xor
mov
loope
fstp
mov
add
movs
jnp
xchg
data16
xor
out
sub
stos
dec
std
daa
or
(bad)
mov
add
jo
push
add
jae
mov
mov
sbb
fidivr
ret
mov
cmp
xchg
mov
es
popa
daa
sub
rol
ror
push
cs
std
mov
push
ret
dec
shl
mov
lods
or
cdq
xchg
out
or
cmps
add
cmp
nop
inc
mov
sub
pop
xchg
xor
pop
dec
rol
jge
dec
dec
inc
pop
jp
test
mov
loope
pop
add
inc
sub
adc
jp
jl
movs
jnp
mov
inc
(bad)
mov
inc
mov
push
mov
pusha
push
nop
pop
mov
jns
(bad)
mov
(bad)
adc
stos
ins
mov
sbb
hlt
outs
sub
mov
mov
mov
push
fld
dec
lds
push
mov
pop
test
fstp
stc
cmc
dec
call
std
mov
mov
mov
(bad)
adc
aas
lods
cs
adc
scas
repnz
push
repnz
stc
cwde
inc
rol
rol
lea
cwde
adc
add
jno
ins
sub
lods
test
or
out
cmps
pop
add
cdq
aaa
xor
dec
mov
imul
sahf
aad
mov
xchg
mov
push
out
jmp
inc
push
dec
in
dec
(bad)
or
(bad)
mov
push
les
mov
sbb
stos
sub
xor
lea
adc
xchg
ss
or
or
push
add
(bad)
jo
fild
add
test
pop
push
push
je
scas
inc
xchg
xchg
call
mov
outs
test
sbb
and
cmp
mov
pop
leave
stos
call
int3
jae
cmp
retf
cmc
(bad)
jmp
inc
inc
sar
outs
arpl
dec
cmp
dec
daa
pop
push
aaa
or
imul
adc
pop
mov
leave
mov
inc
xchg
movs
test
fdivr
mov
and
cld
aaa
xchg
pop
lods
jle
pop
add
jmp
rcr
(bad)
push
jmp
stos
rol
int3
mov
pop
push
mov
jl
call
cmp
ds
or
icebp
sub
test
lods
fs
hlt
pop
scas
mov
fmul
xchg
cld
in
enter
bound
dec
cmp
and
sbb
(bad)
xor
inc
inc
adc
(bad)
sti
in
sahf
in
test
call
fcomp
mov
cmp
fmul
and
mov
pop
cmp
sti
dec
pop
ins
int3
and
or
sbb
shl
sub
js
out
inc
inc
inc
mov
loope
pusha
jmp
mov
mov
push
xchg
cmp
xor
cdq
shl
or
loopne
out
sbb
not
dec
ds
mov
adc
inc
movs
cmp
pop
push
add
push
xchg
fadd
inc
push
(bad)
xor
inc
loop
aad
sar
xor
(bad)
test
ja
js
ds
mul
rcl
scas
dec
lea
setge
mov
sub
stc
and
lock
popa
call
aaa
sub
int
dec
retf
mov
cmp
cmps
fst
enter
sbb
jmp
adc
cdq
pop
(bad)
rcl
cld
jno
cmp
push
icebp
mov
pop
and
xor
or
pop
xchg
jno
sub
sbb
dec
add
xchg
xor
lods
pop
add
sbb
repz
and
xchg
ret
repnz
cmp
hlt
and
out
popf
std
push
cmp
retf
xor
jecxz
adc
sub
cmp
retf
inc
adc
and
xchg
pmullw
jae
mov
and
pop
aam
adc
push
lea
xor
dec
inc
jl
movs
hlt
daa
xor
xchg
or
mov
shl
and
out
and
pusha
and
sbb
lods
loopne
movs
and
stc
and
adc
dec
fs
xor
jo
aam
fs
sets
fmul
idiv
dec
xchg
adc
mov
mov
ficom
xor
daa
das
adc
dec
ds
pop
fwait
into
or
inc
jnp
cmp
outs
jp
xchg
push
cmp
ins
in
dec
jbe
lods
sti
neg
sbb
add
and
movs
inc
inc
lods
sub
adc
or
ins
mov
inc
imul
adc
jge
retf
xchg
push
inc
jl
int3
inc
pop
es
std
xchg
mov
xor
push
xchg
dec
scas
loopne
cmp
xchg
push
and
mov
movs
pop
mov
xchg
dec
iret
aad
(bad)
and
push
data16
adc
add
shl
movs
sub
xchg
sub
setnp
cmp
aas
je
pushf
jp
jmp
jmp
xchg
(bad)
outs
mov
pop
dec
les
add
movs
fcomi
in
push
dec
loopne
add
mov
push
mov
stos
add
xor
xchg
shr
mov
jl
cdq
repz
push
xchg
lods
gs
or
jg
adc
push
scas
stos
cmp
jae
push
xchg
pop
in
sbb
mov
and
fld
xor
retf
jmp
jle
out
adc
adc
mov
bnd
(bad)
fcmovnu
mul
jl
idiv
xchg
aaa
fadd
shr
and
mov
cmp
shl
push
adc
aad
shr
push
push
inc
sub
inc
mov
cmp
pop
mov
push
das
pusha
retf
fcom
adc
bound
dec
les
in
pop
popa
mov
pop
pop
xchg
dec
rcl
popa
in
jge
sub
fiadd
loopne
outs
daa
stc
sbb
pop
jae
fninit
push
aam
mov
or
ficom
add
das
xchg
adc
jg
es
mov
xlat
and
icebp
mov
ret
push
outs
test
inc
or
and
and
lea
and
cmps
popf
fmul
sub
jmp
iret
or
fsub
cmp
mov
pop
add
test
mov
test
jb
int
dec
(bad)
js
aaa
pop
jmp
es
push
adc
inc
and
push
jno
ficomp
mov
push
xor
inc
je
mov
and
adc
cmps
aaa
retf
jmp
rcr
or
inc
je
aam
in
cmp
clc
out
cmp
movs
mov
sub
push
cmp
sar
repnz
fbld
out
maskmovq
div
jge
mov
xor
imul
dec
pop
not
mov
mov
and
adc
into
inc
test
sahf
rcl
lahf
arpl
adc
mov
cdq
popa
and
push
dec
(bad)
call
mov
test
pop
lods
les
cmp
clc
repz
in
xchg
pop
and
pushw
ficomp
cmc
or
cmc
mov
icebp
and
in
xchg
mov
jno
sar
mov
ss
sahf
and
ror
inc
dec
hlt
mov
mov
mov
push
loope
jl
add
xor
mov
repz
push
or
adc
cmps
push
int
mov
add
xor
add
adc
xor
adc
out
cdq
push
fnstsw
adc
dec
(bad)
cli
imul
mov
inc
inc
pop
repnz
inc
mov
jnp
nop
pop
mov
xchg
(bad)
mov
add
loope
xor
(bad)
cmp
cmp
mov
inc
cmp
sub
xchg
int
pop
and
push
inc
mov
sbb
pop
data16
clc
shl
jmp
push
jmp
and
adc
in
(bad)
jmp
movs
cmp
mov
(bad)
fwait
dec
call
jmp
pop
popa
scas
mov
jp
inc
addr16
add
dec
pop
dec
xchg
jns
enter
repnz
stos
ds
sub
test
aaa
rcr
daa
lods
shr
mov
push
jbe
fild
icebp
mov
fimul
mov
int3
cmp
movs
lods
stos
int
and
mov
or
push
and
rcr
imul
add
mov
fs
outs
pop
xor
push
push
mov
xchg
push
lods
mov
or
iret
mov
imul
xchg
and
sar
sub
mov
call
inc
call
arpl
rol
jmp
out
xor
jo
pop
shr
jmp
ds
sub
jo
sub
popa
sti
adc
mov
retf
test
rcr
popf
int3
jecxz
pop
mov
pushf
fs
sub
shl
push
and
sub
leave
pop
push
inc
mov
and
mov
mov
(bad)
mov
call
ins
jmp
adc
sbb
mov
push
into
inc
or
pop
je
rcl
mov
cmp
in
mov
sub
fmul
mov
sub
pop
and
retf
push
or
int
inc
sub
cmps
sbb
push
fwait
jae
sbb
push
jno
nop
and
push
loopne
sbb
jae
jl
lahf
ins
xor
jne
push
es
or
and
aaa
into
xlat
add
les
mov
sbb
sub
imul
push
int3
or
and
jae
rcl
ja
mov
pop
cmps
(bad)
(bad)
jl
ja
adc
mov
inc
jns
cmps
cmp
inc
xchg
je
faddp
sub
add
or
or
sbb
call
sbb
imul
jns
mov
fldenv
pop
pop
(bad)
xor
add
mov
stos
mov
nop
push
or
or
aam
bound
sti
cmp
cmp
push
cwde
jmp
dec
xchg
cmp
outs
xor
popf
pusha
es
cs
mov
adc
das
jno
setns
cmps
jl
aas
shl
and
int3
out
out
(bad)
inc
mov
push
fiadd
pushf
xor
enter
and
in
nop
jns
nop
jg
jne
mov
mov
or
xor
jno
adc
mov
cmp
les
movd
inc
xlat
mov
xchg
test
jle
and
(bad)
enter
xor
outs
lahf
xchg
sti
ins
ins
ins
or
pop
push
lock
xor
imul
ror
iret
shl
inc
out
mov
repz
scas
call
dec
es
repz
mov
mov
cmp
and
dec
(bad)
jle
sbb
push
(bad)
and
pop
xchg
mov
fyl2x
in
pop
inc
mov
ret
push
mov
and
aaa
jbe
add
fsub
jp
jo
enter
xchg
push
push
jmp
in
loop
mov
and
and
jo
xor
clc
fisttp
jne
xchg
daa
cs
call
mov
jmp
mov
mov
push
rcr
aaa
jmp
in
pop
and
ror
jecxz
mov
mov
imul
pop
push
add
xchg
addr16
inc
int3
cmp
push
mov
jbe
shl
mov
jmp
test
scas
(bad)
mov
pop
inc
inc
cmp
shl
jmp
rcr
push
pop
adc
push
adc
popf
sub
dec
enter
in
inc
retf
imul
xchg
jg
jo
mov
jo
loop
cmc
mov
push
shl
in
out
and
das
out
mov
sbb
mov
movs
sub
jmp
jmp
add
icebp
test
cdq
push
push
into
mov
xlat
cmps
enter
out
ds
fs
jo
pop
pop
mov
sub
call
mov
add
inc
mov
inc
mov
fiadd
stos
mov
mov
cwde
imul
cmps
aas
jno
fld
popf
fwait
shr
mov
pop
pop
push
pop
inc
mov
out
inc
ficomp
cli
xor
test
inc
cwde
fldcw
rep
cmps
lods
sub
xchg
fsubr
add
pop
in
call
retf
(bad)
ja
and
lods
inc
xchg
in
mov
adc
pop
xchg
mov
popf
fs
jmp
sti
les
das
stos
jb
sar
icebp
test
and
popa
repnz
clc
pop
sti
arpl
arpl
inc
fsubr
fs
mov
adc
cmp
jbe
fistp
movs
sbb
jge
and
cmps
jl
int
xor
pusha
shr
sbb
push
test
jmp
repnz
xor
push
out
dec
call
out
call
sub
mov
adc
jne
and
cmps
ss
stc
int
cld
(bad)
dec
mov
inc
mov
and
mov
sahf
cmp
jecxz
jle
stos
sub
sub
icebp
jg
xor
inc
add
loop
out
gs
push
mov
inc
daa
push
mov
mov
inc
push
repnz
shr
es
mov
std
inc
xchg
push
pop
cmp
fldenv
add
sbb
mov
or
mov
rol
ror
aaa
jecxz
iret
in
and
jnp
push
cmp
iret
xchg
div
inc
int
sub
inc
dec
popa
mov
sbb
js
outs
jmp
cmp
aaa
pop
repz
cli
xchg
mov
push
in
push
mov
xor
mov
div
sbb
cmp
ja
fwait
adc
or
test
int3
dec
push
cmp
clc
fcom
(bad)
add
rol
mov
push
add
adc
(bad)
or
cmps
dec
repnz
arpl
sub
xor
in
inc
xchg
fimul
stos
in
mov
xchg
je
loope
js
stc
cmps
fsubr
in
fsubr
out
loopne
inc
out
iret
jmp
xor
test
sbb
aaa
in
fisubr
pusha
sub
push
pop
xchg
dec
mov
xchg
inc
neg
dec
sub
or
lods
sub
test
add
daa
pop
xor
inc
jg
adc
dec
mov
jecxz
xchg
shr
push
(bad)
or
movs
add
fwait
mov
fwait
lock
mov
and
call
sbb
pop
movs
jmp
push
ret
test
fistp
in
loopne
jp
pushf
in
sub
shl
inc
push
addr16
lods
cmps
cmp
ins
cmp
(bad)
lods
and
nop
clc
pop
mov
dec
nop
jno
jmp
inc
cmp
fisubr
call
inc
xlat
sbb
dec
mul
pop
jns
aam
add
mov
xchg
retf
add
pop
out
push
outs
adc
aam
xchg
mov
call
mov
daa
out
call
mov
xchg
leave
inc
dec
sub
push
jl
xchg
xor
inc
sub
addr16
jnp
stc
retf
and
jb
pop
dec
xchg
adc
and
div
dec
ror
jo
pop
scas
dec
add
leave
idiv
push
jbe
dec
sahf
call
in
pop
cmp
or
iret
(bad)
cli
pusha
shl
and
mov
and
jge
pop
or
sti
fldenv
pop
pop
mov
movs
cli
push
movs
mov
out
xchg
cmp
movs
ins
xor
fiadd
stos
aam
int
xchg
dec
scas
sub
mov
adc
add
adc
jbe
or
push
je
lods
adc
rcl
shl
pop
ror
ds
xlat
push
add
je
adc
mov
(bad)
callw
mov
pop
mov
mov
out
ins
pop
fst
das
cmps
xor
mov
add
ja
sub
and
and
push
stos
ins
imul
dec
js
das
mov
ficomp
cld
int
sahf
daa
cdq
call
push
cld
movs
ja
xchg
clc
or
(bad)
outs
imul
dec
xor
jle
das
ret
adc
lods
outs
gs
pop
enter
jle
popa
mov
mov
movs
sub
fld
popa
int
cmp
stos
push
sub
stc
mov
inc
mov
xchg
jo
shl
cld
mov
mov
nop
test
in
mov
test
adc
mov
pop
addr16
jno
loopne
mov
shr
gs
ds
jns
jmp
push
sub
lahf
pop
adc
cmps
or
lock
sub
fmul
lds
add
sbb
test
outs
sbb
add
cmc
lock
push
fidiv
mov
pop
xchg
fld
rcr
call
cmp
mov
les
jle
jle
xchg
hlt
sbb
and
pop
pushf
cmps
aaa
icebp
inc
fisub
mov
jg
sbb
mov
pop
les
jmp
and
or
test
add
mov
and
outs
and
cs
dec
and
lds
stos
jp
mov
push
xchg
jecxz
add
loop
push
into
std
and
rcr
sub
dec
bound
(bad)
push
int3
ds
jae
arpl
addr16
jnp
mov
mov
inc
adc
jns
shl
out
js
jle
jmp
inc
inc
lock
and
xor
mov
call
retf
or
add
cmp
ret
mov
mov
sbb
enter
xchg
xor
mov
ins
mov
(bad)
jecxz
cwde
push
scas
and
push
mov
jo
js
cmps
mov
call
push
test
adc
(bad)
cmp
outs
(bad)
cmc
je
pop
mov
xchg
ficom
mov
nop
aaa
popf
mov
data16
test
stc
jns
aad
mov
fisttp
pop
bound
push
mov
cmp
cmp
sub
xchg
ins
jbe
cmc
xor
mov
mov
jecxz
cmp
jp
pop
jmp
mov
ds
sub
in
push
jg
pop
mov
dec
adc
icebp
sti
jne
add
in
pushf
movs
inc
pop
inc
jb
jmp
adc
push
mov
pop
pop
pop
ret
or
and
ins
xlat
dec
iret
jo
dec
mov
or
and
lock
and
rcl
call
imul
sbb
adc
mov
(bad)
and
push
xchg
mov
and
jne
xchg
repz
jmp
hlt
and
push
pusha
lods
xchg
test
lahf
cwde
ret
pop
push
aaa
adc
jmp
sub
aas
outs
test
sbb
mov
sahf
jb
clc
adc
pop
std
loopne
fs
mov
mov
add
ret
and
sti
sbb
inc
pop
shl
mov
add
dec
jmp
and
inc
sub
das
mov
dec
and
pop
push
into
sahf
icebp
fsubr
adc
(bad)
aaa
repz
inc
imul
sub
adc
fldcw
test
cmp
fdiv
ins
push
mov
jne
xlat
call
popa
aam
iret
push
andnps
pop
mov
sahf
rcr
cmc
lods
dec
mov
xchg
movs
mov
jo
or
adc
gs
jmp
xor
mov
sbb
xchg
sti
cmps
dec
or
lock
xor
retf
or
cmp
sub
xchg
test
jne
repz
sub
lock
mov
(bad)
mov
mov
cmp
loope
jle
pop
mov
inc
scas
dec
push
shr
and
ins
lods
adc
stos
movs
scas
cmp
mov
sub
or
dec
adc
inc
mov
rol
xchg
sub
addr16
(bad)
and
sub
sti
test
jecxz
repnz
inc
xor
add
imul
mov
add
push
into
or
test
mov
push
fsubr
fist
arpl
pop
mov
retf
int
dec
jbe
sub
sbb
lods
arpl
or
or
inc
cmp
hlt
data16
sete
sbb
xchg
nop
or
fnstcw
sbb
xlat
sub
jecxz
dec
or
inc
pop
loop
and
adc
push
cmp
cmps
or
into
repz
dec
outs
lods
ins
push
fldcw
xor
mov
mov
push
lods
mov
aas
mov
sar
lds
rcr
push
push
je
cmc
cmp
jbe
sub
cld
mov
enter
daa
in
repz
inc
pop
rcl
mov
xor
add
mov
sbb
push
adc
inc
call
xchg
mov
cwde
inc
push
bound
pop
out
dec
stc
jae
pushf
push
cmp
cmp
sub
cdq
pop
arpl
inc
ret
out
jnp
cwde
lock
pop
mov
mov
xor
(bad)
movd
rcr
sahf
cs
mov
add
loope
add
mov
fcmove
movs
out
(bad)
mov
fadd
or
add
xor
sub
imul
je
retf
push
test
or
adc
sbb
adc
lds
adc
sar
jbe
fimul
fidiv
daa
xchg
sti
mov
jnp
dec
lds
mov
xor
test
cdq
ret
xlat
add
mov
jecxz
iret
cs
jb
adc
push
aam
push
leave
sub
sbb
int3
mov
and
push
outs
dec
cmps
rcr
jg
xor
and
cmp
mov
outs
mov
add
lods
jbe
add
mov
out
xchg
xchg
inc
push
pop
adc
hlt
xor
(bad)
stc
sbb
arpl
rol
int3
inc
loop
popf
sbb
mov
es
jp
cli
xor
inc
push
xchg
and
cld
aam
push
cmp
cmp
pop
sbb
mov
lock
jl
outs
(bad)
pop
stc
out
xchg
lods
(bad)
int
mov
adc
mov
addr16
adc
sbb
popa
movs
xor
daa
sub
push
xor
mov
test
addr16
test
jne
inc
and
inc
loope
icebp
out
ds
stc
mov
cmp
or
(bad)
or
jb
lods
mov
pop
xchg
add
shl
bound
push
int3
dec
inc
xchg
das
inc
mov
outs
and
fs
inc
rcl
xor
dec
loope
es
jo
es
pop
nop
push
mov
pop
xor
leave
xlat
shl
iret
mov
aaa
dec
int3
sbb
call
(bad)
mov
adc
sbb
add
cdq
cwde
push
nop
xor
ins
hlt
pop
inc
xlat
xchg
dec
aam
dec
and
outs
xor
int3
(bad)
test
clc
clc
stos
mov
adc
ins
jl
inc
out
lds
(bad)
outs
outs
dec
movd
xor
leave
sbb
shr
inc
scas
test
mov
pop
pop
pushf
pop
ins
push
sub
gs
sub
sub
(bad)
fldcw
dec
or
shl
adc
sub
movs
cld
les
adc
sbb
xor
push
dec
shr
cmp
repz
int
cmp
or
mov
adc
adc
mov
cmc
outs
mul
jb
inc
sbb
fisttp
int3
imul
gs
arpl
push
fst
sti
js
xor
push
add
inc
xchg
mov
jb
mov
out
mov
mov
and
push
repnz
xor
stos
xor
ret
pop
test
mov
jno
add
pop
fstp
(bad)
mov
jmp
xchg
cmp
jb
gs
sti
xchg
inc
lahf
dec
call
inc
cmp
ins
xor
das
push
addr16
je
adc
lods
fcom
vfmaddps
jle
(bad)
nop
addr16
enter
add
sub
ds
or
and
lods
inc
cli
sbb
and
cmp
mov
push
add
cli
popa
add
push
sub
pop
inc
pop
popa
add
pop
(bad)
fwait
mov
cld
mov
add
push
jmp
call
adc
fadd
inc
retf
test
push
loope
fidiv
das
pop
bound
add
add
jle
dec
jnp
ins
loop
or
sub
lds
call
icebp
xor
aaa
pop
jbe
retf
push
lods
sub
jmp
add
cld
dec
sbb
ins
fmulp
outs
movs
jbe
and
inc
call
push
fist
ss
in
lods
xor
jmp
stos
jg
mov
xor
shl
mov
outs
addr16
push
xchg
dec
test
mov
movs
cs
inc
or
fmul
fwait
add
imul
or
or
mov
(bad)
adc
jle
add
pushf
int
cmp
jge
test
pop
jae
xor
mov
mov
mov
out
lea
adc
fst
sbb
test
cmps
and
mov
int3
xchg
inc
jns
xchg
(bad)
mov
pop
test
ret
cdq
call
loopne
xchg
pusha
dec
pusha
mov
fadd
and
adc
in
cmp
fldenv
mov
push
repz
test
fsub
mov
push
(bad)
sub
out
adc
adc
arpl
dec
data16
adc
xlat
sub
movs
sahf
in
inc
icebp
mov
shr
fisub
out
add
or
inc
add
aas
mov
ins
dec
jno
iret
aam
adc
xchg
test
jp
and
pop
mov
lock
bound
test
vcvtss2sd
sbb
cld
div
and
lea
dec
test
fisttp
ja
cmp
pusha
pop
fstp
sbb
mov
pop
xor
test
push
push
enter
pop
mov
dec
sub
enter
in
or
ja
mov
mov
push
pop
sub
test
aas
pop
cwde
icebp
dec
pop
inc
jb
sub
call
test
shl
js
shr
pop
aaa
jnp
or
(bad)
sbb
leave
pop
sbb
lahf
xchg
sbb
aam
sbb
push
mov
xor
sbb
pop
(bad)
out
int3
mov
sahf
xor
jl
add
adc
mov
loopne
mov
pop
aad
mov
popf
popa
add
push
addr16
outs
cmps
ss
hlt
inc
sub
(bad)
xor
cdq
dec
sub
xchg
shr
fadd
ss
sbb
and
fisttp
leave
test
pop
nop
cmc
repz
inc
sti
ss
sub
mov
ret
jecxz
inc
std
or
and
jo
push
out
xchg
adc
lea
mov
or
xor
mov
dec
js
jo
popf
cld
cld
xchg
cmp
jo
xchg
sti
std
fbstp
aam
mov
ja
pop
ins
bound
xchg
gs
cmc
xor
inc
ret
das
dec
push
test
(bad)
je
inc
push
lahf
push
(bad)
cld
mov
mov
cmp
mov
imul
ja
cmp
and
and
jg
and
test
mov
or
not
push
mov
cli
cmc
mov
mov
mov
cmc
adc
mov
mov
hlt
mov
inc
add
lahf
mov
mov
out
fild
cs
push
xor
sar
cmps
inc
dec
into
out
(bad)
xlat
cmp
mov
jae
inc
inc
fadd
dec
mov
outs
leave
outs
cs
ss
div
or
fldenv
lea
clc
sbb
jmp
and
fmul
jg
call
dec
jb
retf
push
adc
fisub
mov
stos
mov
inc
xchg
fdivr
test
aaa
shl
push
aas
dec
mov
push
jns
pushf
mul
(bad)
lahf
adc
maskmovq
test
ss
push
xchg
iret
xchg
cli
mov
xor
mov
mov
push
pop
in
xchg
pop
mov
mov
mov
lods
adc
enter
lds
sub
jge
push
push
sbb
jns
js
out
push
(bad)
sbb
cmps
jb
call
push
mov
out
cmp
push
mov
adc
adc
jecxz
mov
add
pop
fs
or
or
xchg
adc
je
ins
cwde
gs
imul
gs
das
jl
scas
jno
sub
iret
and
mov
es
xchg
and
mov
sbb
in
lahf
xor
mov
jo
out
xchg
xor
pusha
sub
pop
gs
loop
cmp
or
frndint
mov
retf
daa
push
addr16
sub
adc
ret
outs
mov
iret
enter
dec
std
xchg
(bad)
jl
hlt
comiss
jle
xchg
push
jae
pop
cmp
sub
dec
mov
bound
movs
dec
mov
jno
cmp
stc
adc
mov
adc
loop
sbb
and
mov
adc
and
mov
xor
(bad)
jns
fwait
sbb
sbb
xor
dec
(bad)
cli
pop
(bad)
into
in
pop
push
mov
mov
test
jnp
fidivr
adc
stos
jmp
arpl
pop
push
mov
jl
push
in
sbb
xchg
jns
xchg
add
mov
gs
lea
test
add
es
or
rcl
popa
pop
nop
(bad)
cs
lods
xor
sub
icebp
rcr
ja
mov
retf
push
dec
fcmovnu
push
lock
aam
dec
dec
addr16
push
sahf
fild
enter
mov
jg
jl
out
mov
or
leave
(bad)
ficom
pop
es
call
jae
or
call
xor
jg
adc
(bad)
popa
sub
(bad)
mov
jl
jmp
into
mul
in
data16
jmp
push
xlat
js
mov
adc
cmp
into
push
(bad)
mov
sub
add
sub
test
bound
cwde
(bad)
mov
mov
pop
push
imul
fidivr
shl
mov
jle
movs
jne
jecxz
test
loopne
repz
push
jmp
add
sub
mov
jp
out
xor
(bad)
push
mov
xor
sbb
mov
mov
test
out
sahf
jae
push
inc
movs
fild
lods
(bad)
lods
push
mov
push
jne
cli
cmp
cli
pop
push
jmp
add
cmp
xor
mov
add
pop
int3
jmp
repnz
push
mov
and
out
cdq
cs
pop
out
xor
add
repz
sub
xor
sub
loopne
(bad)
mov
jo
or
out
xchg
pop
or
xor
hlt
inc
and
out
jle
sub
mov
scas
jle
mov
or
repz
sbb
call
data16
lods
xor
lea
mov
dec
pop
jmp
cmp
inc
xchg
aaa
das
xlat
pop
xchg
jmp
cwde
xchg
xchg
pop
jo
test
ds
push
cmp
das
inc
pusha
mov
es
pop
sbb
mov
or
lods
cmp
cmps
lods
xchg
mov
scas
inc
stos
repz
push
movs
addr16
pminsw
xchg
or
push
gs
inc
jb
inc
jnp
inc
xchg
push
sub
push
call
stc
shl
adc
loop
(bad)
push
cmc
xor
or
xor
fld
fnstenv
xor
sub
lds
dec
inc
ficomp
mov
adc
mov
pop
add
outs
clc
push
pop
pop
jno
push
pop
and
scas
fld
and
mov
dec
inc
test
inc
sub
aad
push
jle
adc
mov
aas
xchg
mov
in
push
sbb
retf
mov
fisubr
push
pop
(bad)
cmp
out
and
outs
sub
sahf
mov
pop
adc
mov
xchg
pop
pmaxsw
push
dec
popa
xor
enter
add
fwait
call
mov
test
xor
cmc
jb
jle
dec
mov
shr
mov
out
(bad)
cli
push
adc
sbb
adc
iret
int3
add
test
cs
daa
(bad)
xor
lods
in
out
shl
imul
mov
xor
in
test
ds
sbb
in
xor
fcmovne
fwait
xor
dec
shr
mov
jl
mov
xchg
sbb
add
fadd
ror
test
mov
(bad)
mov
and
add
push
cmp
mov
jb
fnsave
mov
jo
ins
pushf
adc
sahf
push
jl
movs
addr16
push
gs
loop
sbb
nop
mov
(bad)
cmp
push
jo
and
xchg
cwde
mov
daa
hlt
sbb
sbb
xchg
imul
imul
mov
popf
mov
inc
or
adc
out
jmp
pop
inc
retf
js
pop
jae
neg
xchg
xchg
mov
sahf
leave
jl
dec
(bad)
jb
mov
enter
into
fcom
inc
dec
or
fucomp
stos
icebp
dec
fadd
jl
inc
fiadd
rcl
bound
fadd
mov
xor
outs
movs
cmp
cmp
xchg
add
(bad)
xchg
dec
mov
xchg
jmp
sub
jae
lods
adc
cmp
ror
sbb
xchg
popf
xor
out
icebp
and
pop
or
xor
push
scas
rcr
into
aam
mov
add
test
int3
lea
mov
pop
ret
adc
(bad)
sub
push
out
pop
stos
fst
xor
adc
test
into
add
adc
push
lods
clc
inc
xor
or
and
out
jbe
mov
jno
adc
or
push
(bad)
dec
mov
jle
(bad)
idiv
mov
repz
dec
stos
arpl
inc
not
dec
add
add
pop
or
in
call
(bad)
loop
imul
sbb
aam
or
popa
shl
pop
gs
stos
les
or
out
adc
add
add
out
cmp
cs
outs
retf
push
gs
loop
(bad)
data16
jl
xchg
sbb
nop
push
mov
aam
(bad)
adc
stos
aad
je
aad
sub
pop
bound
add
cld
(bad)
cmc
fwait
in
pushf
xchg
add
jmp
inc
xchg
pop
xor
mov
movs
imul
push
dec
push
jle
mov
outs
mov
cmp
jb
dec
popf
arpl
out
cmp
fst
(bad)
fisubr
fwait
sti
aas
pop
and
popf
ror
push
mov
sub
push
test
jnp
sub
call
rcr
sbb
push
pop
mov
jnp
loop
adc
mov
lods
lea
mov
(bad)
mov
loop
and
cmp
cmp
add
repz
(bad)
das
icebp
cs
sub
sub
push
mov
jbe
or
mov
ss
mov
ja
ret
jno
xor
(bad)
in
or
mov
int3
xchg
shld
cmp
js
xor
repz
pushf
lea
xchg
jp
jmp
sbb
jbe
xchg
(bad)
jp
or
in
push
jmp
cmps
daa
xchg
pop
pop
mov
es
add
test
ins
dec
mov
cmp
arpl
sahf
cs
aam
adc
adc
ds
jnp
sub
test
add
mov
adc
pop
iret
cmp
and
or
stc
xor
jbe
pop
push
mov
icebp
clc
sbb
mov
aaa
in
dec
adc
cmp
push
mov
jmp
fnstenv
jb
bound
push
retf
or
mov
ins
imul
mov
nop
dec
sbb
repz
jne
repnz
cmp
repz
xor
jo
push
jle
add
dec
in
or
mov
inc
test
inc
cmps
ficom
fs
mov
jmp
fwait
shl
jmp
aaa
cdq
shl
rcr
xchg
ror
popf
fdivr
retf
dec
imul
pop
cmp
out
sub
pop
and
cld
repz
in
push
aam
or
pop
cmc
movs
(bad)
in
fld
xor
icebp
(bad)
or
mov
clc
xchg
punpckhbw
mov
repz
int
push
fiadd
cli
push
outs
fucomp
sbb
popf
xlat
mov
pop
push
cli
aaa
sbb
sbb
cmps
idiv
pop
aas
mov
loope
push
mov
mov
mov
(bad)
jne
sbb
or
int
xor
and
out
pop
push
add
sbb
sub
test
out
iret
test
mov
push
aad
cli
xor
outs
ss
inc
push
xchg
loope
adc
inc
push
ds
xor
inc
fdiv
push
arpl
adc
dec
(bad)
push
fwait
jle
pop
int3
test
xchg
push
xor
fcom
inc
mov
mov
cmp
sub
cmp
in
and
popa
sub
mov
push
repnz
mov
(bad)
xchg
js
std
call
cmps
call
stos
icebp
sub
add
lahf
jo
xor
push
(bad)
mov
push
stos
mov
adc
(bad)
sbb
pop
ss
xor
cs
jmp
push
inc
mov
mov
mov
xchg
imul
cmc
adc
pusha
stos
scas
inc
mov
jne
xchg
retf
mov
mov
ins
bound
dec
mov
cmps
fistp
ja
xchg
hlt
out
(bad)
fld
add
sub
sbb
jbe
mov
inc
add
int3
sub
and
mov
test
test
out
fmul
jns
ds
(bad)
jmp
dec
aad
mov
xchg
scas
mov
cmps
test
leave
sbb
jmp
fsub
outs
cld
mov
xchg
xlat
loop
xor
pusha
jbe
dec
jp
or
and
or
ja
mov
movs
mov
ins
fidivr
int
xchg
arpl
sahf
adc
push
mov
mov
ins
cmp
sub
mov
mov
mov
pusha
mov
adc
push
or
aad
mov
cs
push
(bad)
enter
ins
jns
pop
jnp
cdq
cld
mov
in
lods
xchg
push
pushf
add
add
nop
ins
adc
mov
imul
loopne
fadd
jb
adc
cwde
adc
call
fiadd
iret
int
cli
push
fs
dec
dec
sbb
jg
adc
rcl
not
cs
and
or
(bad)
das
jb
jle
test
std
dec
pop
add
jno
mov
mov
sbb
dec
popf
dec
sub
jno
(bad)
aam
movs
jle
lea
addr16
and
pop
jl
out
mov
sbb
popa
sbb
(bad)
outs
mov
js
clc
imul
(bad)
fistp
mov
fwait
(bad)
jmp
mov
ret
mov
(bad)
std
pop
pop
sbb
add
test
xchg
push
sub
sub
sti
pushf
jle
lahf
ror
mov
push
fnsave
fmulp
inc
jmp
mov
pop
push
mov
cmp
xor
or
dec
cmc
fnstenv
pop
push
lds
ins
pop
xor
mov
pop
mov
ins
xchg
fidiv
ror
pop
adc
clc
mov
jp
push
rcr
test
xchg
add
adc
mov
sub
mov
test
in
inc
jmp
aad
outs
outs
pop
jbe
mov
xor
inc
dec
daa
out
aaa
test
je
outs
pop
movs
icebp
cmc
scas
jbe
sub
xor
add
ret
lds
mov
shl
mov
and
xchg
jle
pop
or
popa
cli
int3
stos
outs
aas
pop
sub
sub
cmc
adc
xchg
js
or
mov
sbb
lods
sbb
add
jle
retf
mov
int
mov
pop
cs
xchg
mov
rcr
fisubr
pop
fisubr
call
ret
xchg
stos
out
(bad)
retf
dec
adc
fnsave
mov
pop
call
adc
aas
xchg
fidiv
shr
int3
test
inc
sub
push
fdivr
sbb
sbb
fcmovnu
pop
xchg
jbe
push
pop
retf
(bad)
mov
neg
mov
xchg
out
fwait
jnp
mov
(bad)
pop
sub
dec
xchg
push
jecxz
pushf
mov
lahf
div
ficomp
(bad)
mov
mov
add
mov
mov
xchg
data16
stc
sbb
in
jmp
cmps
mov
sub
add
adc
jge
add
jne
aam
imul
push
test
xchg
sub
int
pop
ja
aas
mov
sbb
push
add
fiadd
mov
xchg
les
ds
mov
push
das
sbb
adc
int
imul
ins
mov
ins
inc
ror
jae
add
cmp
and
mov
cdq
push
(bad)
cli
jbe
call
das
xor
(bad)
mov
nop
add
mov
mov
jmp
imul
dec
pop
mov
loope
sti
in
daa
sub
xor
adc
mov
ins
xor
mov
data16
std
xchg
adc
pop
aam
ins
xchg
(bad)
jo
pop
sbb
xchg
cli
add
loopne
test
mov
clc
rol
pop
aaa
mov
xlat
and
sbb
mov
cmp
aaa
je
mov
clc
fs
movzx
clc
mov
adc
xor
fadd
add
cdq
adc
scas
or
add
sbb
ret
test
mov
pop
mov
inc
push
xor
jne
and
nop
mov
and
dec
inc
or
cli
dec
test
in
into
pop
pop
cmp
imul
inc
mov
fnstenv
push
adc
jmp
sbb
mov
mov
push
sub
lock
xchg
sub
fmul
mov
jae
leave
mov
das
mov
xchg
jno
add
cmp
dec
jb
inc
add
or
shr
icebp
std
and
fmul
xor
pop
mov
(bad)
mov
int3
and
cdq
call
xchg
lods
mov
mov
sub
add
cwde
jbe
scas
(bad)
cmp
icebp
imul
sbb
ss
sar
or
pop
in
xor
ins
push
inc
movs
loop
fs
xchg
ror
add
mov
fwait
popf
cmp
xor
mov
pop
mov
arpl
or
jo
(bad)
frstor
fmul
(bad)
sti
sbb
pop
cli
retf
fwait
shl
cdq
mov
clc
and
or
test
leave
int
dec
js
xor
sbb
(bad)
xlat
jnp
outs
test
retf
call
inc
pushf
adc
sbb
push
xchg
fsubrp
leave
jg
xchg
push
pusha
inc
push
jge
xor
jl
or
imul
out
xor
imul
jp
in
mov
sbb
fcmovu
(bad)
arpl
sbb
add
fdiv
and
(bad)
retf
adc
je
cdq
imul
jo
pop
cmps
add
add
or
arpl
xchg
and
ins
ins
push
cmps
jmp
ins
out
fs
fdivr
cmps
xor
movs
xchg
mov
fcom
jbe
stc
retf
ret
call
mov
add
ret
cmp
mov
jg
data16
cmps
(bad)
pop
shl
outs
or
jle
xchg
fucom
xchg
push
sbb
pushf
mov
rcr
cli
push
stos
mov
scas
push
clc
andnps
sub
je
or
ja
and
jle
mov
(bad)
shl
adc
lahf
xor
out
pop
xlat
(bad)
stc
pop
rep
or
fsubr
fisub
adc
jne
push
fs
test
(bad)
push
pop
call
adc
mov
add
inc
retf
push
inc
push
mov
das
jmp
pop
enter
push
xchg
xlat
repz
jae
sub
mov
in
ret
js
xchg
fwait
es
mov
mov
nop
jecxz
add
cmp
push
hlt
add
jno
mov
in
xchg
ins
push
(bad)
loop
dec
icebp
pop
out
xchg
aas
jbe
jge
push
clc
xor
icebp
test
inc
pop
ins
xor
cmps
pushf
push
or
and
pop
test
jns
jne
xchg
mov
xcrypt-ecb
cmps
mov
pop
inc
aaa
pop
jmp
mov
mov
aad
pop
inc
test
jo
push
dec
jo
aam
(bad)
mov
sbb
mov
imul
dec
shl
inc
sub
xchg
add
lock
rol
cmp
aas
mov
fistp
in
xor
inc
xor
mov
mov
jp
lea
imul
jl
pop
sbb
jle
and
icebp
mov
xchg
js
lods
cmp
adc
dec
nop
out
push
fadd
mov
(bad)
ds
adc
xchg
lahf
sub
hlt
sbb
jbe
ins
stos
xor
test
cmc
mov
fs
adc
into
in
neg
mov
xchg
mov
cmp
mov
sar
out
inc
les
daa
pop
daa
pop
pop
fdiv
lock
jae
sbb
retf
mov
mov
or
sub
(bad)
bound
icebp
push
sbb
fbld
xor
mov
sbb
(bad)
jge
mov
fstp
pushf
jno
jl
jge
scas
push
or
xor
mov
mov
xor
pop
adc
aam
stc
add
push
mov
inc
gs
mov
xlat
xchg
js
rcr
sub
loop
leave
inc
fistp
outs
add
mov
cmps
push
push
cld
cmp
es
aam
jle
mov
out
push
or
cmp
sub
add
movups
lods
dec
sbb
sub
jae
addr16
fst
sub
and
mov
fnstenv
dec
mov
sub
retf
test
cmp
pop
not
jp
fs
je
cld
jl
mov
cmps
mov
xlat
push
mov
rcr
enter
pop
or
pop
sti
sahf
and
lds
pop
pop
push
cmc
cs
cmp
pop
and
adc
dec
out
and
and
jl
sbb
ins
lea
add
sub
and
cs
nop
mov
(bad)
xor
dec
dec
and
aas
das
pop
mov
inc
mov
and
sti
sbb
retf
jle
(bad)
mov
pop
fdivr
push
ds
loop
sub
mov
das
retf
xchg
jge
ret
ja
inc
test
pop
cmp
xor
or
inc
es
jo
xchg
into
int
sub
cmps
sbb
std
pop
stc
leave
push
test
xlat
ja
or
jmp
pop
es
sbb
fisttp
fnstcw
inc
cld
outs
xchg
mov
loopne
adc
(bad)
sbb
jbe
pop
sbb
jmp
je
or
lods
fwait
sub
or
daa
sbb
icebp
and
sub
test
and
rol
inc
mov
(bad)
push
lock
in
out
push
mov
mov
inc
cmps
jo
fidivr
lods
cwde
cld
(bad)
cli
fsub
addr16
and
lods
mov
jp
xor
mov
hlt
push
jle
pop
loopne
push
mov
xchg
xchg
xor
das
imul
push
mov
inc
mov
mov
out
into
icebp
push
rcr
mov
or
jmp
push
jne
mov
push
aaa
fnsave
inc
and
(bad)
hlt
mov
out
(bad)
jmp
mov
push
pusha
push
dec
(bad)
psubb
inc
stos
scas
push
jle
cmp
cli
and
fdivr
jo
inc
xor
push
pop
std
push
add
pop
div
cmp
fbstp
and
(bad)
sti
jmp
shr
in
sub
lahf
shl
push
(bad)
sti
jle
xor
retf
mov
call
ror
jo
(bad)
adc
(bad)
movd
test
jl
or
gs
lds
rcr
adc
lods
ret
int3
xor
mov
mov
push
lds
mul
xchg
neg
out
loop
mov
mov
shr
cs
out
lods
xor
mov
imul
add
sub
imul
jl
(bad)
out
test
mov
adc
sahf
cs
pop
push
push
mov
data16
das
or
add
pop
das
sti
les
outs
fcomp
arpl
or
jae
imul
outs
jb
mov
push
mov
push
arpl
icebp
cmp
cld
not
push
dec
add
icebp
sbb
mov
(bad)
mov
icebp
dec
pop
push
adc
jo
retf
lods
mov
out
ja
xor
cmp
sbb
cmp
sub
aam
mov
aad
lods
sbb
jns
pop
aaa
cmc
sbb
xor
in
sub
test
push
jp
adc
cmp
jle
test
enter
mov
add
sub
scas
mov
ss
or
add
loopne
lock
mov
add
test
xor
(bad)
lahf
(bad)
ds
scas
fadd
pop
loopne
pusha
(bad)
push
jno
fidivr
fld
in
in
cmp
push
ja
ret
adc
sbb
rol
jle
mov
inc
in
inc
hlt
jp
outs
xor
dec
fstp
or
sub
data16
cmc
push
(bad)
out
stos
cmp
push
xor
sar
inc
push
xor
push
hlt
xchg
clc
cld
inc
xor
pop
aad
cwde
push
inc
retf
jmp
ret
sbb
push
sub
ret
sbb
ds
loop
adc
stc
scas
lock
mov
mov
inc
or
outs
xchg
ss
das
jmp
cmp
mov
daa
mov
pop
mov
inc
mov
dec
inc
jecxz
shl
dec
mov
retf
dec
xchg
movs
or
shl
add
mov
pushf
or
pusha
arpl
(bad)
jbe
xor
sub
call
stos
inc
rcl
mov
sbb
pop
jg
imul
add
inc
jmp
stos
loop
or
adc
hlt
std
rol
cmps
pop
sub
mov
pusha
fsubr
xchg
in
aas
cmp
pop
movs
into
push
inc
inc
dec
test
pop
xchg
out
xchg
bound
hlt
repnz
(bad)
pushf
add
nop
cmc
test
fild
pop
cmp
push
xchg
pop
retf
inc
pop
push
sub
mov
stos
scas
popa
out
push
mov
mov
adc
hlt
hlt
std
in
jge
mov
mov
ins
pop
inc
movs
lods
jle
pop
mov
sub
xchg
retf
dec
rcl
retf
popa
mov
popf
sub
add
les
sbb
jo
fsubrp
xor
inc
out
xchg
fs
shl
(bad)
rcr
rcl
aas
xchg
add
jecxz
loop
scas
mov
xor
xchg
xor
jne
retf
fcom
jle
popa
mov
retf
xchg
test
pop
ds
pushf
adc
xchg
add
dec
bnd
xor
push
ja
mov
fucom
pop
aaa
stos
xor
mov
movs
mov
inc
test
dec
push
or
loopne
pop
mul
addr16
movs
pop
mov
mov
ret
idiv
mov
aaa
cmp
lock
jno
xchg
sbb
xchg
dec
test
popf
cmp
out
das
out
mov
mov
test
div
cmc
dec
fs
bound
adc
fnop
jmp
in
hlt
sub
xchg
pusha
jl
push
aad
pop
cs
hlt
push
fucom
mov
mul
mov
adc
test
and
pop
(bad)
(bad)
and
and
cmp
sub
dec
int3
cmc
sub
shr
(bad)
xchg
rcl
xor
jbe
(bad)
int3
test
adc
push
pushf
repnz
dec
jo
pop
pop
lea
inc
dec
hlt
mov
xchg
and
das
mov
inc
data16
cwde
adc
pop
mov
mov
mov
fcomp
clc
jo
mov
cwde
pop
pop
(bad)
js
jno
loope
(bad)
(bad)
inc
nop
cmp
adc
xor
mov
mov
push
(bad)
call
in
movs
sub
dec
js
jbe
pushf
pop
aaa
push
mov
popa
scas
dec
pop
fstp
jp
jne
pop
xor
xchg
inc
aam
addr16
gs
cs
push
std
mov
ja
pop
or
sar
outs
sahf
shl
fstp
pop
jns
out
(bad)
push
dec
jnp
pop
pop
push
add
mov
mov
loopne
dec
or
in
ror
jmp
out
es
into
xor
mov
sub
aad
test
ficom
jnp
cmp
adc
sbb
fxam
sbb
adc
hlt
jl
jmp
jae
pop
xchg
xlat
pop
les
int3
mov
mov
mov
aam
je
xchg
xchg
jbe
fisttp
jb
std
pusha
into
xor
or
jmp
fisub
or
push
shl
rol
mov
leave
jge
and
adc
dec
xor
call
aam
or
mov
xor
sbb
std
push
add
mul
and
popf
mov
and
and
fadd
jecxz
icebp
cmp
jae
cld
std
enter
sbb
push
sbb
sbb
test
pop
arpl
cs
les
pop
movups
dec
jno
add
push
push
push
inc
or
stc
cmp
or
out
mov
stos
cld
or
fcomp
ins
scas
push
movs
out
pop
outs
dec
add
cdq
or
js
in
mov
inc
xchg
gs
dec
xchg
je
adc
repnz
pop
(bad)
adc
cmp
shr
sbb
popf
jae
jmp
or
pop
scas
out
lea
mov
add
aad
add
push
jecxz
cmovno
mov
xchg
push
add
xchg
into
inc
dec
es
shr
rcl
vmread
jle
jl
shr
and
loope
hlt
xchg
outs
cmp
mov
(bad)
xchg
mov
cmc
cwde
aaa
loope
xor
(bad)
in
fst
pop
jle
shr
xchg
int
add
into
cmp
push
mov
fld
arpl
push
fs
loop
and
sub
lahf
jb
adc
jae
nop
add
xlat
jecxz
push
stos
(bad)
push
nop
adc
add
int
retf
pusha
mov
jbe
xor
xchg
bound
jl
push
push
(bad)
jnp
jecxz
movs
scas
cdq
(bad)
jne
mov
ret
lods
cwde
sub
pop
(bad)
fisub
mov
mov
js
(bad)
mov
sbb
mov
fdivr
pushf
jle
push
aam
dec
cmp
rol
ja
ret
ret
mov
xchg
add
jp
stos
jb
dec
push
sub
push
cmp
inc
add
sbb
jae
lea
or
xlat
xchg
mov
mov
popf
sub
shl
fisub
repz
scas
push
rcl
rep
or
jbe
sbb
sub
icebp
stos
in
xor
retf
gs
push
and
or
and
mov
mov
clc
out
push
jnp
clc
adc
test
mov
sub
mov
lahf
sub
push
pop
aam
lea
lahf
int
push
jecxz
ss
jmp
mov
nop
dec
mov
mov
pop
inc
arpl
stos
pop
jbe
enter
imul
pop
out
out
pop
div
shl
pushf
(bad)
cmovo
div
sbb
xor
mov
mov
push
pop
dec
fmulp
or
adc
push
adc
jecxz
in
repnz
xor
fsub
xor
mov
and
xor
leave
inc
xchg
loop
xchg
pop
call
cmc
mov
cmp
mov
push
xor
(bad)
jno
adc
mov
daa
or
sub
push
std
retf
xchg
mov
cmp
lea
jmp
pop
and
jle
jl
int3
shl
or
add
and
sbb
inc
push
cmps
cmc
sub
push
jae
and
mov
inc
je
jp
cs
bnd
hlt
push
fistp
xor
jl
push
mov
sub
fidiv
clc
(bad)
pusha
data16
push
dec
mov
(bad)
mov
(bad)
stc
aaa
ret
push
sub
and
pop
mov
pop
mov
rol
push
sub
fdivr
jnp
pushf
jo
aas
sahf
(bad)
(bad)
xchg
sbb
sub
and
dec
push
cwde
adc
stos
(bad)
xchg
es
mov
inc
and
cmps
inc
cmp
aas
pop
in
cmp
or
sti
and
mov
mov
add
sbb
cmp
cmp
sub
aas
cmp
arpl
jno
fild
shl
sbb
fistp
cmc
dec
push
mov
push
jle
mov
push
loopne
aas
(bad)
or
mov
xchg
test
scas
push
cdq
push
test
daa
mov
in
inc
neg
mov
loopne
push
add
loopne
movs
es
dec
push
xchg
mov
lea
sub
inc
mov
push
sbb
and
and
inc
xchg
xchg
je
push
in
jne
xor
adc
or
sbb
mul
lods
push
shr
inc
sti
xchg
dec
inc
imul
pushf
retf
or
inc
popf
pop
aam
dec
sbb
div
ret
mov
mul
aam
xchg
pop
mov
mov
adc
sub
pop
int
sar
fist
test
test
jl
fs
xlat
add
pop
adc
lods
or
dec
mov
push
mov
shr
fcom
int
xchg
mov
aaa
ins
nop
xor
dec
sub
fiadd
dec
or
(bad)
popa
outs
dec
mov
add
pop
out
pop
sub
lods
sub
push
shr
mov
scas
pop
add
dec
lods
xor
mov
push
push
mov
(bad)
popf
add
ins
shr
dec
jns
aam
xlat
je
fidivr
inc
jns
sub
xchg
xchg
and
(bad)
and
dec
ja
push
jmp
jecxz
loop
mov
cmps
fbstp
dec
sbb
mov
sti
dec
and
add
add
int3
push
xor
gs
jns
inc
imul
(bad)
adc
sub
sbb
(bad)
jb
das
add
inc
shl
or
nop
rcr
movs
je
loop
dec
dec
push
add
and
ret
ins
adc
inc
mov
ror
shr
sbb
pop
mov
xor
inc
push
mov
and
jae
pop
xchg
xchg
mov
sbb
xchg
(bad)
dec
lahf
dec
push
jge
aad
jle
add
loope
scas
shr
and
dec
pop
std
inc
mov
jg
mov
sbb
xor
cs
jp
or
cwde
sbb
into
gs
xor
ret
cld
ret
mov
adc
pop
xor
add
test
out
ds
jl
inc
mov
xor
push
lea
hlt
lods
hlt
test
(bad)
out
xchg
or
lea
int
inc
jbe
imul
dec
adc
mov
daa
cmp
xor
and
imul
mov
mov
pop
aas
fimul
cli
jno
jno
fcom
pop
cmp
ret
sbb
cmp
xor
push
adc
inc
je
ins
test
push
int
clc
push
es
xor
or
xor
push
nop
sahf
fnstsw
popf
pop
jne
sahf
in
sub
fcmovnu
adc
pop
push
mov
sbb
mov
push
ins
and
mov
sar
scas
mov
pop
xchg
add
into
lahf
sub
sbb
in
push
rcr
les
or
inc
stc
fldcw
dec
enter
xchg
inc
adc
imul
loopne
push
mov
dec
ror
(bad)
mov
dec
cmps
retf
ret
jge
outs
cmp
(bad)
repz
mov
adc
rol
icebp
fsub
pusha
jp
aam
fiadd
inc
cwde
pop
pop
push
mov
repnz
cmps
xchg
sub
in
mov
cmp
pop
xchg
das
or
xor
push
add
bound
(bad)
retf
(bad)
std
call
or
add
add
and
dec
cmc
xchg
fst
sub
or
push
add
pop
jb
xchg
add
cmp
rcr
cmps
mov
enter
in
mov
mov
or
adc
sti
shl
jb
push
loop
lahf
jns
lods
dec
es
push
mov
mov
sub
push
loop
mov
sub
mov
iret
into
movs
adc
std
mov
push
xchg
xlat
test
js
fistp
stos
mov
xchg
aam
fld
mov
cdq
outs
jns
xchg
mov
cmp
js
fidivr
outs
pop
push
lods
and
shr
push
cmp
mov
push
adc
repz
adc
(bad)
mov
jge
push
and
sub
adc
(bad)
loope
mov
rcl
push
xchg
(bad)
cld
dec
out
jmp
push
retf
imul
cwde
sbb
bound
mov
mov
inc
lds
mov
popf
mov
stc
jp
sti
xlat
add
push
in
fwait
xor
xchg
clc
jl
push
sar
out
sbb
or
loopne
or
push
mov
mov
inc
(bad)
adc
or
int
mov
dec
mov
popf
sub
push
xor
les
repnz
sbb
call
pop
push
mov
(bad)
mov
and
movs
popa
daa
and
jmp
outs
push
enter
test
(bad)
adc
adc
and
mov
ret
aad
mov
enter
jo
retf
inc
test
xchg
sar
cwde
int
outs
dec
rcr
jb
pop
jecxz
cdq
jp
add
mov
pop
(bad)
sub
add
(bad)
icebp
jecxz
mov
or
mov
outs
ds
jo
fcmovne
repz
xor
lods
repnz
aaa
aam
and
xchg
add
dec
xor
(bad)
stos
stc
js
dec
xor
mov
mov
pop
call
mov
xchg
inc
movs
dec
push
je
data16
aaa
or
add
bound
pop
rol
and
mov
imul
add
clc
aam
mov
shl
shl
cmp
addr16
ins
inc
test
out
pusha
fsubrp
pop
rcr
adc
cs
push
sbb
out
ss
push
mov
sbb
dec
fsub
xlat
sti
sbb
movs
clc
xor
retf
and
xlat
retf
push
scas
cwde
xor
clc
gs
xchg
inc
mov
push
mov
push
push
pop
pop
test
inc
jbe
pop
xor
ins
cli
and
out
inc
cmp
mov
jl
outs
es
sbb
clc
dec
ss
jnp
adc
mov
mul
jle
fcom
sbb
fwait
mov
repnz
dec
pop
mov
iret
mov
leave
sbb
lds
fnstenv
popf
es
(bad)
iret
push
repz
stos
adc
ins
ss
les
pop
call
pop
push
adc
jecxz
dec
sbb
push
sar
retf
loope
leave
sub
icebp
daa
sub
pop
dec
and
sahf
cmps
ins
stos
rol
adc
inc
popf
lods
pusha
sub
call
jmp
add
mov
xchg
pusha
outs
cmp
lea
cs
mov
or
shl
ja
fild
xor
cli
inc
std
xor
aaa
jge
movs
leave
aaa
pop
xchg
fcmove
push
inc
outs
jnp
(bad)
sti
jmp
inc
sbb
sbb
bound
lds
or
push
ja
ins
mov
aam
(bad)
jg
cmc
push
sub
add
inc
fcom
cmps
arpl
xchg
push
sti
mov
sbb
sahf
add
add
test
adc
and
loop
jno
out
jnp
xchg
and
idiv
or
cmp
ja
retf
jae
mov
push
xor
dec
pop
es
xor
xor
cmp
adc
dec
adc
stc
sbb
push
in
scas
mov
inc
or
int
scas
sti
fcomp
add
cld
das
scas
push
push
xchg
dec
dec
cmp
xor
aaa
rcr
clc
(bad)
ror
jae
stc
dec
inc
inc
pop
mov
fwait
mov
test
call
mov
(bad)
cld
inc
jecxz
movs
sub
dec
aad
push
(bad)
int
pusha
add
fsubp
xchg
mov
ret
lods
test
test
bound
dec
jno
ja
lahf
outs
fsubr
in
jno
jbe
sbb
mov
jo
sbb
jo
push
sbb
stc
lock
sbb
and
dec
test
fmul
xor
cmc
xchg
mov
dec
and
and
mov
icebp
ficomp
xchg
push
add
mov
adc
fstp
ins
lea
sar
mov
xor
cdq
fstp
sub
jns
dec
dec
push
into
jne
push
inc
(bad)
fwait
pop
xchg
cdq
push
mov
sti
popf
es
push
rcr
pop
sbb
adc
test
push
pop
test
std
xchg
je
popf
sahf
das
inc
sbb
dec
loope
(bad)
retf
dec
mov
scas
fbstp
iret
push
sbb
and
and
sbb
sbb
sub
repz
jne
inc
repnz
adc
dec
mov
clc
xchg
ja
adc
into
out
scas
xchg
xchg
pushf
int
adc
sbb
inc
fwait
mov
lahf
and
data16
xchg
jb
inc
(bad)
jae
lods
mov
retf
add
or
mov
sbb
call
ror
sbb
sti
pop
jge
add
stos
fucomip
enter
loope
ds
xchg
dec
cmp
fs
jmp
inc
push
xor
mov
cmp
lock
stc
call
or
sub
pop
bound
scas
or
push
fwait
mov
ds
or
movs
mov
sbb
cmp
jne
(bad)
ficomp
pop
out
xor
(bad)
xchg
dec
pop
add
pop
xchg
out
sub
out
mov
mov
shl
pushf
dec
and
cdq
aaa
pop
xchg
or
loopne
dec
ss
mov
mov
sbb
dec
and
lds
sub
sti
or
push
repz
test
mov
and
jns
gs
cdq
je
sbb
clc
xlat
jge
lds
dec
pusha
lock
push
pop
or
mov
mov
in
shl
(bad)
ins
call
shr
imul
in
pop
bnd
and
ror
xchg
jnp
lods
mov
lods
and
push
aaa
pop
outs
xchg
ins
push
mov
ins
stos
pop
test
mov
shr
and
xchg
fnstenv
xchg
test
pushf
xchg
fwait
pop
xchg
dec
or
fsubr
pushf
retf
push
adc
int3
and
aad
sbb
fldenv
fcomp
mov
jp
in
imul
(bad)
jmp
ins
and
push
and
arpl
pop
or
mov
imul
pop
popa
loope
cmp
fldenv
dec
sbb
loop
jmp
dec
call
bound
fs
and
xor
lock
scas
mov
cld
xor
(bad)
mov
push
sbb
mov
bound
les
cmps
mov
(bad)
inc
mov
push
ds
push
mov
lea
or
call
add
cdq
jmp
add
test
daa
adc
adc
cmps
cmp
mov
add
inc
(bad)
dec
push
dec
add
pop
sahf
stc
or
mov
nop
out
pop
cmp
or
loope
jns
pop
int3
or
cmps
mov
ficomp
cmp
xchg
inc
aaa
and
inc
mov
mov
cmps
sahf
push
dec
cli
fisttp
fucomi
xchg
cmp
into
sub
ds
popf
imul
xchg
addps
ins
sar
out
mov
retf
test
lea
mov
push
jmp
push
cmc
sbb
imul
adc
loope
or
xchg
xor
mov
ficom
aam
(bad)
pop
jb
iret
jmp
xlat
addr16
dec
cmp
pop
in
mov
cld
push
arpl
retf
sub
push
sti
push
xor
mov
fbld
adc
int3
push
mov
out
xor
les
dec
jecxz
out
inc
or
shl
sub
add
and
or
adc
adc
(bad)
int3
pop
mov
cdq
cs
mov
cmc
imul
stos
(bad)
pop
dec
pop
retf
inc
jecxz
pop
pop
sub
push
mov
pop
cwde
scas
mov
pushf
je
mov
mov
add
mov
or
sbb
and
adc
dec
mov
pop
dec
aad
es
nop
pusha
xchg
jge
add
aad
or
push
push
stc
jge
fidiv
pop
ror
enter
xchg
fadd
imul
inc
jb
mov
nop
sbb
push
ja
ja
push
ins
sub
and
pop
fadd
add
push
sbb
sbb
gs
cmp
jb
push
cs
int3
mov
mov
push
btc
pop
mov
in
dec
sar
jo
inc
fsub
mov
sub
adc
icebp
sti
jg
dec
sub
stos
imul
pop
jmp
cli
cmp
enter
push
cmp
data16
cs
sbb
and
(bad)
call
add
(bad)
mov
ds
mov
jo
pop
ficomp
adc
mov
sar
pop
sbb
sahf
loop
lods
xor
lds
pop
pop
enter
jmp
iret
pop
inc
mov
ins
popa
sbb
popf
mov
bound
(bad)
xor
push
pop
sbb
and
mov
inc
sbb
iret
rcl
mov
pop
aaa
les
hlt
adc
sbb
dec
je
or
retf
xor
repz
or
retf
mov
fcom
fdiv
jb
imul
arpl
jns
mov
jmp
dec
(bad)
test
cmp
inc
shl
pop
mov
mov
pop
(bad)
out
cmc
adc
sbb
adc
mov
sub
jns
sbb
loope
imul
retf
push
fwait
ror
bound
in
mov
pop
push
pop
sub
sbb
in
test
xchg
sub
xor
test
lock
and
adc
cld
jnp
inc
pushw
iret
push
sbb
jae
repnz
jae
push
int3
adc
popa
(bad)
aaa
mov
inc
les
bound
cs
les
sub
xchg
inc
rep
push
pushf
dec
sbb
or
fdivr
mov
in
xchg
add
(bad)
mov
bound
sub
scas
xor
mov
clc
outs
je
mov
ds
dec
push
aas
loopne
(bad)
dec
into
les
push
hlt
outs
xchg
dec
and
xchg
jnp
push
or
pop
addr16
xchg
xchg
jae
les
stc
inc
adc
xor
jb
or
fwait
scas
mov
lea
je
pop
push
popf
test
mov
sbb
and
add
inc
or
jmp
inc
sub
test
dec
push
inc
pop
aad
mov
and
retf
enter
es
or
ss
mov
fist
outs
data16
push
test
inc
outs
dec
sub
mov
pop
sub
call
mov
pusha
sbb
mov
mov
adc
jno
ja
gs
or
push
rcl
mov
fdivp
ds
xchg
mov
xchg
int
int3
rol
or
adc
ss
push
rcl
adc
pusha
scas
jno
dec
adc
xor
in
dec
pop
mov
(bad)
in
enter
xchg
xchg
push
cmp
or
sub
es
call
jns
push
or
je
pop
sub
jo
jmp
sub
shl
sar
ror
pop
stos
enter
inc
inc
popf
fisub
jmp
pop
adc
cli
and
ins
cli
add
adc
loop
cmp
jecxz
xchg
pop
mov
or
mov
test
sbb
inc
xchg
jl
adc
push
lock
fwait
mov
rcl
inc
call
inc
cmp
popf
inc
adc
pop
call
stc
nop
std
pop
push
jno
mov
mov
fistp
or
pop
in
dec
adc
out
(bad)
sub
test
mov
loope
mov
ja
jmp
sub
or
pop
mov
and
enter
jmp
jae
das
sub
xor
jle
add
and
jb
sbb
jae
repz
in
in
loope
cs
and
stc
das
jae
aaa
or
mov
xor
lds
xor
jmp
or
lods
push
or
lock
mov
or
movs
cs
(bad)
(bad)
addr16
leave
lods
push
fisttp
dec
sbb
mov
scas
xor
jmp
fdivr
adc
mov
mov
(bad)
and
out
mov
mov
lahf
stos
jmp
mov
js
pop
outs
mov
mov
sbb
pusha
mov
(bad)
aaa
xchg
loope
pushf
lods
fwait
icebp
push
cmp
fwait
icebp
and
test
mov
or
sub
dec
std
dec
lock
xchg
aas
and
nop
cmp
rcl
adc
dec
pop
jns
add
imul
mov
scas
mov
add
out
mov
(bad)
cmp
push
outs
(bad)
push
retf
xlat
ss
mov
cs
cmp
mov
sub
je
push
mov
and
mov
jecxz
imul
sbb
push
and
mov
xlat
add
das
xchg
or
lahf
(bad)
call
xchg
str
mov
push
pop
retf
loop
pop
jmp
pop
daa
(bad)
cmp
das
sub
sub
sbb
cmpxchg
sahf
sbb
cmp
or
test
ja
jmp
enter
int
or
pop
xchg
shl
jl
outs
outs
and
(bad)
push
lods
add
stos
xchg
push
test
sub
mov
ins
rcl
lods
pop
or
pusha
lods
and
or
std
mov
cmp
out
mov
cmp
test
out
mov
cmc
addr16
daa
je
arpl
aam
cmp
lock
jg
rcl
lea
pop
sti
in
push
leave
movs
push
cmp
add
mul
into
add
push
inc
sub
inc
stos
retf
add
push
pushf
inc
xchg
inc
retf
xor
mov
pop
out
rcr
test
movs
push
(bad)
mov
xor
daa
mov
inc
mov
stos
out
sbb
out
sbb
add
or
push
mov
dec
push
cld
iret
or
push
test
int3
loopne
pop
cmp
loope
pusha
test
push
jg
pusha
pop
data16
loop
push
xor
inc
jmp
shl
mov
push
lods
and
jle
lds
jl
or
fdiv
ret
and
clc
add
add
test
pop
xor
out
and
jb
xor
imul
pop
sar
jmp
cli
and
cmp
xor
mov
fsub
push
leave
or
mov
aaa
int
es
pusha
xchg
mov
test
test
push
mov
push
test
mov
fdivr
es
inc
adc
nop
cmp
jb
inc
invd
add
out
cli
inc
pop
inc
(bad)
scas
push
push
xor
sbb
nop
je
dec
cmp
cmp
repnz
sub
mov
adc
or
dec
pusha
jns
pusha
in
sub
jg
outs
xor
mov
fist
or
add
push
and
dec
cmc
cli
js
vpsubusb
in
cmp
pop
outs
fs
xchg
mov
mov
and
mov
sbb
iret
inc
les
les
pop
jmp
push
xchg
stc
aam
ret
outs
xchg
ror
(bad)
mov
dec
adc
dec
retf
xchg
cmp
ja
aam
mov
inc
mov
das
pop
mov
pushf
pop
inc
mov
sahf
push
test
mov
lahf
sub
mov
outs
enter
das
fsub
div
mov
jns
mov
dec
or
ret
xor
mov
xor
in
dec
add
out
push
or
sub
mov
pop
fld
dec
xor
xchg
inc
mov
push
or
lods
je
lea
mov
repz
sub
inc
sub
and
lea
sbb
repnz
lea
xchg
bound
sbb
cs
push
sbb
int
sub
sbb
(bad)
jnp
pop
xor
add
mov
dec
or
call
and
leave
sub
dec
mov
cmp
xchg
pusha
mov
data16
nop
dec
push
jp
cmp
cmps
int
mov
xchg
xor
repz
push
clc
mov
xor
cmc
jle
mov
cmp
not
retf
or
or
cmp
add
cli
repnz
movs
fs
aas
jge
mov
jmp
pop
mov
int
shl
mov
adc
invd
jno
pop
jb
pop
mov
addr16
push
dec
adc
aam
ins
sbb
dec
push
cmc
pop
pop
mov
fs
push
mov
(bad)
jne
push
movs
xchg
push
stos
enter
xchg
lea
xor
jbe
outs
inc
cdq
pop
jmp
pop
into
mov
js
test
pop
push
jbe
dec
ffreep
imul
cmp
std
and
mov
mov
rcl
adc
mov
pop
mov
xchg
xor
popa
pop
sbb
jmp
cmp
jnp
and
mov
fdiv
mov
push
xchg
jo
call
pop
test
push
adc
push
xor
and
fcomp
pusha
sbb
in
inc
loope
mov
(bad)
mov
repz
and
call
pushf
dec
xchg
add
sar
fadd
push
jno
and
dec
cmp
dec
int
sub
psllq
push
icebp
inc
pop
hlt
sbb
in
xor
pop
jmp
pop
stos
in
(bad)
fld
xor
loope
outs
xchg
loope
sar
lea
and
mov
shr
das
in
mov
sahf
adc
cmp
jmp
cmp
movs
or
shr
cmp
retf
cmc
je
xor
(bad)
fisubr
push
repnz
in
xchg
sub
jl
mov
mov
repnz
aas
adc
adc
sbb
jns
repnz
bound
and
mov
mov
push
xlat
shl
(bad)
xchg
rcr
sub
test
jo
mov
dec
xor
mov
add
in
pop
popf
adc
jmp
loope
(bad)
sar
shl
dec
add
(bad)
fbstp
cmp
cmp
jg
mov
xchg
inc
aaa
sbb
sti
dec
(bad)
and
add
cmpxchg
call
mov
in
mov
xchg
pop
cdq
scas
pop
xor
test
cwde
push
xor
scas
popf
imul
pop
mov
rcr
jb
and
mov
adc
mov
(bad)
(bad)
in
test
dec
push
aam
std
lea
mov
jmp
(bad)
fwait
pop
pusha
dec
adc
sbb
iret
fldenv
add
cmp
push
add
fucomip
pop
dec
out
je
in
retf
pop
jbe
ja
xor
icebp
jmp
pop
mov
add
mov
xchg
inc
addr16
push
pop
lds
fild
push
and
jge
test
out
neg
inc
or
cli
xchg
(bad)
mov
aam
nop
mov
dec
imul
ins
inc
scas
and
sbb
or
std
arpl
sub
scas
ins
jae
lods
hlt
pop
adc
add
adc
push
xchg
mov
mov
shr
popa
mov
push
imul
cdq
pushf
call
xchg
mov
nop
push
lahf
mov
(bad)
pop
push
jo
xchg
push
mov
adc
retf
and
loope
movs
mov
dec
popa
test
push
cwde
inc
rcr
test
add
(bad)
stc
xor
(bad)
push
outs
and
aad
add
adc
sub
jmp
push
push
push
jns
or
inc
ds
test
fisttp
xchg
mov
xchg
cli
nop
std
jmp
cs
sti
js
pop
lods
sar
mov
cmp
clc
and
jo
jne
push
mov
sbb
(bad)
cmp
jo
pop
push
sub
(bad)
inc
shr
scas
xor
clc
cmp
push
xchg
and
std
push
or
loopne
push
loope
push
jle
pop
(bad)
dec
adc
inc
sub
repnz
call
test
outs
xchg
adc
push
ins
and
std
mov
pop
and
dec
imul
add
pop
pop
and
ret
sbb
clc
jge
or
mov
aaa
test
(bad)
xor
push
cmp
jmp
imul
mov
call
ja
fistp
xchg
lods
test
xor
jp
sub
push
mov
cmps
addr16
out
pop
shl
inc
cli
jmp
test
mov
loopne
add
mov
in
lock
mov
push
or
inc
lods
dec
enter
pop
mov
jmp
pop
stc
out
daa
mov
add
jae
cs
int
sub
(bad)
xchg
rcl
and
and
xchg
mov
dec
int
outs
daa
sub
int3
iret
sahf
retf
and
or
push
jge
rcl
mov
pushf
sub
xor
test
dec
ins
test
pop
fild
mov
stos
out
lods
push
cli
push
push
retf
push
leave
push
and
add
inc
cdq
stos
sbb
jl
jl
ja
mov
js
xchg
jb
icebp
sub
push
dec
cmp
inc
mov
outs
scas
dec
fnstcw
and
mov
scas
retf
jle
inc
jae
dec
js
mov
loope
jmp
jecxz
dec
sub
lods
imul
and
mov
int
pushf
jp
pop
xchg
or
xchg
imul
adc
xor
shl
push
(bad)
cmp
push
xchg
jmp
aas
ror
cmps
push
dec
dec
vpsubq
out
xchg
test
cmp
out
push
jge
dec
lahf
adc
sbb
cmp
call
xchg
sub
mov
sub
hlt
sub
push
cmp
int
cwde
add
add
lea
cmc
loopne
fild
jo
test
mov
push
dec
push
pop
push
xor
stos
add
jmp
mov
xchg
les
in
mov
dec
adc
jmp
push
addr16
sub
fnsave
test
imul
das
sub
lahf
addr16
cmp
inc
stos
sub
rol
pop
pop
adc
add
push
cmp
sbb
in
cmc
out
add
pop
mov
(bad)
lods
aaa
inc
imul
imul
out
lock
jle
dec
or
and
sbb
push
aas
dec
pop
outs
pop
sub
scas
xchg
pop
and
cmp
dec
(bad)
shr
mov
hlt
std
aas
ror
xchg
pop
and
out
jl
pusha
lods
hlt
mov
shr
push
and
mov
int
xchg
add
pop
iret
bswap
in
add
and
xchg
jecxz
and
sbb
out
adc
scas
push
mov
jnp
dec
pop
pop
sbb
rol
pop
aaa
fcomp
xchg
div
icebp
dec
(bad)
ror
pop
add
add
inc
fnstenv
clc
call
addr16
cmp
jmp
mov
push
fcomp
shr
neg
inc
leave
inc
test
arpl
xchg
inc
jecxz
add
push
(bad)
sub
sub
mov
ss
xchg
fimul
sti
rcr
push
xchg
fldenv
push
dec
mov
or
cmp
aad
das
mov
mov
mov
sbb
daa
jmp
push
lock
lea
stc
adc
cmps
xor
nop
xor
jo
inc
cmps
push
in
sti
dec
inc
mov
mov
pop
sub
push
int3
lods
pop
inc
in
call
sbb
xchg
inc
mov
cmp
adc
xlat
sbb
les
arpl
xchg
jp
cmp
mov
mov
push
jecxz
cmp
cmp
sub
xchg
mov
movs
cdq
pop
add
out
ins
mov
jmp
(bad)
in
add
hlt
sbb
movs
imul
(bad)
push
fs
rcr
repz
dec
in
and
mov
jne
out
(bad)
jge
aaa
sbb
add
inc
pop
outs
pushf
or
xchg
mov
mov
into
sbb
dec
cmps
data16
mov
cmp
scas
frstor
stos
mov
loopne
call
and
stc
cmp
sub
addr16
dec
push
outs
stos
call
dec
xor
sub
(bad)
ret
sbb
outs
mov
movs
push
and
pop
ror
adc
sbb
and
enter
mov
cmp
sub
fmul
lahf
xor
shr
leave
sti
lock
xlat
inc
xor
js
pop
cmps
lahf
call
fwait
jae
add
push
adc
jo
cmc
pop
xor
mov
xor
mov
inc
dec
arpl
cld
ror
into
mov
fs
push
add
call
push
sbb
arpl
xor
inc
jne
leave
mov
sub
add
cmps
loope
xchg
bound
int
in
inc
(bad)
mov
(bad)
rol
inc
fiadd
lds
daa
cmp
cmps
mov
enter
xor
outs
in
add
adc
or
mov
add
pop
fwait
mov
fs
pushf
mov
call
ficom
sub
cwde
and
xlat
adc
cmp
pusha
into
pusha
out
fld
lods
imul
adc
cdq
lahf
mov
xchg
inc
sbb
mov
seto
cmps
xor
inc
rol
das
and
mov
push
and
mov
shr
mov
outs
retf
xor
addr16
push
adc
repz
xchg
aad
mov
mov
cmp
jbe
and
push
aad
mov
clc
sub
fdiv
pop
(bad)
outs
xlat
dec
pushf
hlt
adc
loopne
push
and
push
mov
mov
inc
in
sbb
mov
popa
int3
in
add
push
adc
call
lods
(bad)
movs
arpl
hlt
pop
mov
mov
jecxz
fwait
add
dec
int
dec
sbb
cmp
or
das
dec
jns
add
les
leave
dec
retf
mov
add
mov
sub
scas
push
mov
dec
hlt
(bad)
(bad)
(bad)
repz
xchg
ja
pop
sbb
lods
scas
mov
gs
mov
sbb
dec
scas
push
test
leave
aad
inc
adc
pop
inc
clc
inc
xor
cdq
std
daa
int3
loope
sub
pop
sub
jns
lock
and
aam
mov
xchg
add
jle
lahf
adc
mov
int3
out
xchg
xchg
xchg
xchg
sbb
dec
popf
gs
pop
push
pop
inc
or
mov
sbb
sub
sbb
inc
mov
and
es
mov
dec
and
loopne
push
push
pop
les
and
gs
xor
push
les
add
test
(bad)
sbb
add
fdiv
xor
mov
sub
das
outs
bound
xchg
mov
pop
mov
ret
(bad)
mov
fwait
push
stc
xchg
add
jnp
jno
call
jne
push
cld
push
(bad)
sar
add
xor
pop
mov
or
sbb
xchg
push
and
or
jp
mov
leave
inc
mov
dec
imul
out
aam
loop
dec
fadd
arpl
hlt
xor
push
es
rcl
aam
repnz
sub
xchg
sub
aas
and
ret
dec
repz
mov
pop
mov
adc
fist
jns
hlt
xor
sub
mov
bound
stos
pushf
push
add
mov
inc
ror
inc
idiv
lea
in
rcr
call
add
jl
jnp
mul
or
ds
mov
pop
arpl
sbb
dec
xor
arpl
cli
int
xor
out
aad
mov
sub
sub
cwde
clc
rol
out
cli
mov
test
xchg
ja
ret
xlat
mov
mov
sub
(bad)
test
mov
lods
sub
push
inc
sahf
mov
jo
jo
mov
fwait
mov
dec
add
xor
bound
shr
add
cld
stos
xchg
xchg
adc
fwait
popf
je
imul
push
call
stos
inc
shr
outs
rcl
xchg
loopne
pop
data16
clc
out
(bad)
outs
in
and
mov
pop
rol
mov
sub
jmp
not
popf
icebp
mov
(bad)
jle
xchg
hlt
adc
mov
icebp
cs
arpl
lds
ret
or
cmp
out
push
and
sahf
rol
jmp
or
loop
test
(bad)
or
add
idiv
repnz
adc
stos
bound
repz
imul
cli
pop
mov
dec
adc
out
mov
cmp
pusha
sahf
inc
pop
push
jmp
jb
sti
pop
cmps
xchg
xor
mov
xchg
retf
movs
mov
call
ins
pop
push
mov
mov
sbb
lods
out
(bad)
and
xchg
and
push
imul
test
(bad)
iret
push
push
in
lods
ja
bound
push
lds
or
retf
out
mov
test
xor
das
xchg
push
inc
sbb
mov
cld
jp
and
sar
cli
in
cmps
inc
push
sub
or
pop
daa
inc
xor
jle
aad
aaa
dec
xor
add
in
push
scas
jmp
and
add
movs
mov
hlt
add
pop
shl
dec
push
add
psadbw
fistp
fnstsw
xor
jmp
test
inc
outs
mov
mov
jp
ss
or
out
or
pushf
add
mov
push
sub
push
xchg
xor
aaa
sahf
mov
sbb
dec
ins
(bad)
aad
mov
mov
cmc
mov
dec
in
inc
mov
and
mov
jnp
add
push
imul
lea
dec
sbb
push
nop
adc
xor
std
or
arpl
pop
popa
sub
inc
int
scas
xchg
daa
mov
fadd
daa
mov
aam
jg
mov
pop
gs
mov
xchg
adc
xchg
shr
push
mov
sbb
xor
not
out
call
std
push
test
xchg
or
cld
mov
pop
ins
gs
call
retf
cmp
add
xchg
fwait
int3
fisub
jno
or
cmps
sbb
push
rcr
bound
outs
cmp
out
sub
mov
jmp
aam
xchg
imul
das
fs
test
dec
xchg
imul
add
xor
repz
retf
jl
test
mov
xor
(bad)
aas
add
mov
movs
pop
lahf
inc
and
adc
ror
and
add
jb
lea
mov
ss
lock
inc
aas
sub
jl
pop
hlt
mov
enter
xchg
dec
dec
jne
int
loop
mov
cmc
sub
movs
mov
mov
pop
into
cdq
or
xchg
movs
call
out
push
daa
popa
jne
shr
adc
and
mov
adc
mov
inc
add
(bad)
mov
movs
(bad)
sub
add
out
xor
test
enter
mov
push
mov
mov
xchg
lock
repz
jecxz
push
stos
adc
gs
imul
fcomi
dec
enter
test
pop
xchg
lods
sbb
jle
stc
in
pop
xchg
inc
outs
aaa
push
test
stos
dec
lock
out
rol
mov
aam
cmp
out
ins
stos
test
add
jno
xor
(bad)
xor
imul
(bad)
jl
inc
mov
out
mov
inc
mov
jmp
adc
pop
shl
mov
in
inc
mov
inc
and
retf
cmps
or
pop
xchg
daa
icebp
push
fsub
and
xor
and
cmp
pop
jmp
dec
sbb
pop
inc
lea
fcmovnu
cmc
data16
add
dec
mov
popa
stc
movs
cmp
dec
mov
lods
cld
out
test
add
and
in
add
(bad)
adc
std
bound
out
cmps
sar
shl
mov
outs
push
lea
stos
mov
enter
dec
stos
xor
mov
dec
jae
(bad)
sar
popa
jle
stos
out
mov
sbb
(bad)
xchg
enter
stos
adc
aam
lahf
cmp
dec
push
dec
ret
xlat
fsub
xor
pusha
test
mov
and
sti
lock
cmps
jge
jne
push
int3
mov
imul
int
xor
pop
enter
jns
jg
jae
xor
sbb
bound
jmp
cmp
or
les
inc
repz
call
mov
inc
aas
fimul
jae
or
test
imul
jb
cmps
shl
ret
lds
sbb
pop
scas
popf
jo
jb
mov
retf
(bad)
out
cmp
sbb
jle
aam
out
jg
rol
nop
pop
sub
loopne
not
int3
jmp
cmp
sti
clc
mov
adc
gs
out
jno
loop
sbb
jg
xor
pop
icebp
std
sub
idiv
adc
mov
shl
fst
mov
test
inc
test
or
xor
jle
inc
jp
fcmovb
cmp
aam
jl
stc
in
mov
dec
jg
dec
fwait
enter
add
jl
xchg
lds
test
mov
mov
lea
test
xchg
(bad)
out
and
ffreep
jecxz
cmp
jns
adc
bound
call
aaa
out
inc
lods
fs
gs
sahf
xchg
popa
and
dec
jmp
adc
out
out
and
out
sti
dec
ss
test
lahf
pop
jecxz
popf
retf
pop
dec
fld
xchg
mov
jae
pusha
dec
or
mov
data16
sub
push
scas
sbb
add
sbb
jecxz
xor
daa
jns
retf
sub
jno
pop
jge
lods
xchg
cmps
mov
jmp
adc
outs
mov
push
jle
icebp
mov
push
cli
sahf
loop
cmp
sbb
and
jmp
add
xchg
outs
cmp
adc
test
cmp
je
sbb
daa
cmp
adc
jb
out
and
and
jle
imul
mov
xlat
std
retf
dec
mov
add
cmp
ss
push
and
push
ja
and
adc
dec
(bad)
sbb
sub
test
and
out
cld
jbe
jnp
mov
fwait
sub
or
push
iret
cs
fisub
(bad)
mov
js
in
fild
mov
movs
xchg
cs
daa
cs
sub
frstor
and
in
aaa
or
cmp
rcl
clc
dec
mov
imul
hlt
xor
cmc
out
dec
mov
cmps
jecxz
pop
or
inc
and
out
mov
add
jmp
dec
ss
lds
popf
ret
jo
dec
push
(bad)
jecxz
pop
lock
cld
es
mov
or
ficom
sub
sub
lea
add
(bad)
cli
(bad)
cmps
nop
adc
inc
les
cmc
xchg
inc
xchg
pop
mov
mov
fadd
mov
or
popa
and
xor
adc
pop
les
xchg
add
add
mov
int3
imul
popf
dec
mov
dec
or
xchg
shr
xchg
push
jmp
rcr
pusha
retf
and
mov
cli
movs
mov
int3
mov
retf
into
dec
aam
inc
cmps
cmp
or
mov
cmp
mov
push
add
icebp
sbb
sbb
push
ret
inc
mov
arpl
jbe
push
stos
or
ds
jecxz
movs
or
call
dec
mov
push
jmp
aad
push
sbb
dec
lds
enter
int3
fld
in
mov
in
fs
mov
pop
dec
add
rol
add
jo
adc
xchg
jne
push
call
adc
add
mov
retf
fcomi
push
inc
jmp
mov
std
inc
(bad)
into
ins
jecxz
cmp
or
pop
push
xor
add
ins
in
push
inc
lds
push
cld
and
dec
add
retf
retf
mov
int3
jg
push
fisttp
scas
cmp
shl
xchg
mov
mov
jl
jne
in
jb
popf
in
cmp
cwde
push
xchg
call
push
ds
ins
(bad)
jnp
xchg
pop
retf
inc
cli
dec
lods
imul
(bad)
mov
dec
inc
lods
repnz
dec
nop
out
int3
pop
mov
loopne
clc
sbb
gs
mov
cwde
xor
icebp
push
sbb
out
or
aas
test
ins
in
mov
or
lods
cld
retf
push
push
push
test
nop
icebp
ja
push
jmp
cmp
cdq
aam
push
adc
mov
add
mov
push
dec
dec
clc
push
mov
add
imul
jae
out
aam
inc
cmp
xchg
mov
imul
aam
popf
inc
mov
das
inc
ret
push
(bad)
stos
xlat
pop
add
pop
loop
das
cmps
loope
jmp
or
mov
(bad)
mov
push
jl
jle
inc
inc
mov
pop
scas
cwde
jmp
xchg
scas
in
dec
loop
xchg
xor
fsub
icebp
or
pop
fs
push
xchg
and
mov
lods
sub
ins
jmp
adc
jmp
xchg
adc
lods
xor
xor
(bad)
sbb
add
fsub
out
mov
rcl
shl
pushf
jno
adc
adc
enter
cdq
sbb
mov
jg
movs
sub
or
xchg
sti
lods
pusha
mov
push
pop
inc
and
rcl
push
std
mov
in
mov
add
xchg
int
aas
sbb
mov
cmps
ins
shr
jb
push
jns
push
(bad)
push
sub
xor
cli
adc
fst
pop
adc
push
call
jbe
jnp
adc
xchg
out
loop
sti
das
int3
dec
jno
retf
cli
test
add
pop
xor
rcl
pushf
sahf
lds
adc
leave
test
inc
adc
push
pop
pop
dec
stos
outs
dec
nop
pop
xor
das
retf
mov
cdq
xchg
les
test
add
pop
inc
icebp
dec
push
cmp
js
out
jecxz
sub
out
movs
inc
movs
mov
outs
leave
mov
btc
nop
mov
lea
std
or
in
jns
in
ja
cmp
aam
jl
mov
in
(bad)
pop
lods
jl
cs
fcmovnbe
inc
mov
dec
pushf
fistp
or
cmp
cld
fwait
add
xor
sbb
cmc
pop
pop
aad
enter
inc
inc
mov
sti
jo
ins
test
loope
push
xchg
sbb
adc
pop
cmp
ds
push
rcr
add
jmp
sub
xlat
xchg
test
pushf
lods
mov
rcr
arpl
mov
dec
add
fdiv
pushf
inc
adc
pop
cmp
push
cmp
fabs
stos
and
scas
out
call
dec
sbb
out
xchg
call
cmp
stos
popa
repnz
aad
pop
cmp
mov
mov
mov
xchg
pop
iret
mov
xchg
and
shl
mov
cmp
cmc
retf
rcl
aaa
inc
call
or
jne
xchg
(bad)
aad
pushf
dec
or
add
sbb
or
repz
xor
jp
pop
in
aam
fiadd
pop
imul
in
mov
mov
push
or
jo
int
xchg
loope
mov
mov
pop
jl
sahf
out
stos
jecxz
data16
pop
sub
xor
jecxz
fwait
ds
(bad)
cs
jne
adc
loope
fwait
psllw
nop
dec
je
ret
imul
inc
or
arpl
call
je
mov
hlt
(bad)
in
push
or
xchg
sub
and
mov
adc
mov
mov
or
jle
retf
data16
xchg
and
push
mov
jl
stos
mov
ror
ficom
mov
sub
fimul
sbb
cld
in
int
and
popa
icebp
cmp
leave
push
je
movs
ja
cdq
cmp
sub
jmp
leave
inc
jecxz
adc
mov
std
ins
pop
out
add
or
fldenv
inc
push
aam
cmps
std
inc
movs
xchg
or
cmp
mov
popa
mov
lock
or
shr
out
rol
sbb
cdq
cwde
cmp
ds
inc
imul
in
mov
push
mov
mov
xchg
(bad)
in
mov
pop
xchg
aas
adc
or
sti
data16
test
adc
dec
adc
sub
mov
imul
cmp
sub
sub
clc
fisub
jb
repnz
test
fsubrp
push
push
sub
cmp
add
cmp
inc
mov
pop
es
xor
mov
ins
mov
xchg
in
out
and
sub
sub
data16
imul
ins
inc
mov
mov
inc
mov
les
scas
jo
sbb
gs
rcr
mov
out
pop
dec
mov
cmp
pushf
cwde
cmp
in
lods
mov
jne
sbb
adc
xor
scas
int3
cmp
dec
xlat
and
mov
loope
das
push
inc
mov
out
ret
sbb
das
(bad)
xchg
jmp
sub
mov
into
(bad)
fwait
mov
mov
out
in
mov
pop
movs
out
mov
mov
(bad)
movs
call
loopne
push
ss
jmp
shl
push
push
xchg
popf
retf
adc
in
mov
push
inc
dec
and
(bad)
scas
(bad)
rcl
setne
xchg
jmp
cmp
jno
sub
and
cmp
sbb
push
inc
sub
cld
ds
xlat
idiv
in
sbb
retf
fidivr
lods
jns
push
shl
aaa
jg
cmp
movs
shl
push
sub
xor
add
mov
sbb
lahf
mov
mov
mov
gs
push
mov
popf
test
mov
mov
inc
cdq
adc
add
mov
sbb
and
ret
shl
mov
test
xchg
add
jmp
inc
iret
enter
push
cmp
sub
loop
cmp
ss
pushf
repz
shr
sub
add
push
pop
ficomp
out
inc
mov
xchg
mov
or
outs
jmp
push
mov
movs
and
iret
movs
adc
jne
sub
aas
xchg
or
dec
loop
xor
popa
jo
popf
outs
out
aas
jge
out
clc
dec
addr16
sub
shl
push
and
popf
ins
les
cmp
loope
xchg
mov
mov
lods
pop
mov
mov
mov
(bad)
pop
mov
add
ror
jmp
pop
loopne
xor
sahf
cmp
jl
sub
retf
adc
repz
int3
sbb
jo
mov
sbb
mov
dec
mov
ds
pop
adc
aas
jnp
and
ins
fs
addr16
scas
fnstcw
daa
inc
cwde
cmp
mov
lea
not
loope
push
int
lock
std
lock
xlat
sub
or
mov
rcr
add
xchg
adc
or
cli
inc
fild
(bad)
fs
or
cmps
scas
sub
lahf
enter
mov
xlat
test
daa
xchg
push
dec
pop
jno
xlat
mov
repz
iret
sbb
push
mov
imul
inc
xlat
(bad)
sub
aam
pop
dec
std
fsub
push
push
jnp
js
retf
and
fld
mov
sbb
icebp
push
test
or
pop
push
movs
xor
sub
mov
jo
cmp
out
cmps
adc
mov
dec
cmc
sbb
jmp
jb
jo
inc
daa
cwde
dec
cmp
jno
lahf
mov
mov
lahf
mov
mov
cmps
ins
push
call
mov
xchg
leave
out
xchg
jne
int
sub
sbb
mov
pop
add
pop
cmp
inc
imul
jno
stos
ss
dec
sbb
xor
xor
fstp
mov
mov
daa
bound
mov
fmul
icebp
jnp
fidiv
fidivr
pushf
(bad)
(bad)
push
push
or
(bad)
repnz
in
iret
mov
hlt
mov
or
adc
sbb
ret
fst
pop
xor
inc
pusha
fdiv
sub
jae
push
mov
mov
adc
inc
movs
or
push
jmp
push
push
push
cmp
mov
gs
test
(bad)
dec
mov
lods
(bad)
pop
jmp
and
outs
out
ret
loope
pop
or
mov
cmp
movs
cwde
loop
jl
popa
cmp
or
jp
arpl
push
xor
daa
mov
cmp
fcomp
jle
mov
sbb
adc
inc
ds
cmp
xor
dec
inc
inc
xchg
pushf
jmp
cmp
cld
dec
(bad)
popa
mov
stc
jecxz
adc
lock
dec
fwait
movs
sub
jle
push
hlt
add
xor
cwde
int
les
aaa
in
or
inc
jg
pop
jecxz
in
sub
(bad)
mov
loopne
mov
cmp
or
fld
pop
cmp
daa
dec
pop
cmc
rcl
sub
sub
idiv
sbb
dec
(bad)
aam
mov
les
call
(bad)
mov
mov
hlt
adc
pushf
inc
mov
test
mov
shl
(bad)
xor
std
cmp
int
loope
out
aam
ins
sbb
sub
xor
adc
ds
push
adc
cli
ret
repnz
pop
and
fcmove
mov
in
jg
jge
cld
mov
cmps
add
jecxz
mov
not
ds
dec
sbb
call
gs
int
cli
sub
mov
mov
adc
jb
jmp
popf
push
aaa
adc
xor
mov
mov
stos
inc
in
fbstp
mov
cli
sbb
(bad)
daa
out
shl
and
jmp
pop
push
jns
test
sahf
test
movs
push
add
push
repnz
xchg
mov
mov
in
sub
lea
pusha
jbe
jmp
push
sub
pop
and
mov
int
out
icebp
xchg
mov
cdq
pop
pushf
pop
and
dec
or
push
ja
inc
(bad)
jp
jl
imul
loopne
jno
mov
cmp
pop
dec
cld
add
lahf
aam
(bad)
sahf
jg
cld
xchg
adc
enter
adc
pop
aam
jg
push
push
jecxz
jmp
int3
lds
mov
xchg
mov
and
push
mov
dec
sar
jecxz
xchg
ja
loope
push
lods
imul
mov
in
loopne
ins
inc
sub
scas
movs
pushf
ins
mov
mov
test
sub
scas
push
jb
lods
lods
lods
rcl
lods
sbb
cmc
sbb
jge
pop
daa
fwait
nop
rcl
into
dec
adc
scas
fidiv
mov
shl
add
push
fcmovnu
adc
sub
adc
aaa
ja
aas
mov
arpl
bound
mov
iret
add
add
mov
test
cmp
pusha
inc
pushf
inc
je
jecxz
push
mov
in
push
mov
aas
push
mov
hlt
ss
js
or
iret
push
jl
clc
mov
pop
cmps
test
mov
out
mov
ret
mov
sub
sub
repz
nop
add
mov
ins
in
cmp
fwait
and
pop
pop
cmp
vpunpckhbw
dec
xchg
test
jmp
mov
dec
jns
clc
lock
(bad)
cmp
sub
retf
ror
ins
stc
call
(bad)
lods
sub
(bad)
jnp
cs
xchg
mov
popa
(bad)
cmp
cmp
inc
pop
pop
(bad)
sbb
into
arpl
stc
sbb
out
sbb
mov
xchg
jle
inc
(bad)
xlat
outs
int
sub
pushf
jp
xchg
cmp
mov
dec
adc
jge
and
mov
mov
mul
inc
hlt
cmp
loop
jl
lock
ror
in
dec
aas
inc
repnz
inc
fidivr
outs
mov
out
inc
ja
pop
fcomp
mov
jmp
pop
dec
shr
add
mov
out
jmp
(bad)
lods
out
and
sub
jno
jg
aaa
rcl
inc
mov
jmp
call
sub
jmp
es
cmc
sub
repz
outs
retf
inc
pusha
ror
mov
out
jl
shr
jnp
out
(bad)
mov
rcl
pop
sub
sbb
mov
add
movs
in
mov
arpl
push
out
rcr
sub
aad
sbb
out
mov
out
jno
movs
mov
push
test
push
sub
fdiv
mov
sub
pop
sub
rol
ins
out
cmp
cld
test
ja
stc
jge
nop
ficom
lahf
call
retf
cvtps2pi
inc
adc
adc
enter
push
and
sub
mov
xor
mov
xchg
inc
pop
dec
cmp
int3
lea
dec
xchg
cmp
pop
(bad)
ret
mov
add
jmp
fidivr
cmp
xchg
cmp
mov
das
dec
test
jmp
cld
push
xchg
sub
loopne
sub
imul
ds
repz
movs
lods
in
fucomip
mov
sahf
xchg
push
dec
in
sar
jmp
sbb
cwde
ins
inc
fcom
mov
int3
mov
ds
mov
push
adc
(bad)
mov
jg
test
sub
sub
lea
jb
movs
shl
mov
adc
mov
cmp
add
nop
adc
add
sbb
dec
inc
dec
sub
mov
dec
mov
(bad)
fisttp
xor
add
mov
cmp
add
ss
mov
and
jmp
sbb
xor
or
mov
dec
mov
mov
inc
jg
stos
and
hlt
cmp
mov
in
cwde
das
(bad)
std
xor
std
jecxz
add
push
mov
jmp
mov
jge
mov
int3
mov
ja
call
mov
data16
cdq
int
push
in
dec
mov
fidiv
and
cmc
jg
shr
(bad)
push
cwde
popf
adc
pop
cmps
push
or
adc
mov
aam
aaa
rcr
pop
hlt
pop
mov
cld
test
inc
in
stos
iret
movs
cmp
mov
adc
clc
jg
outs
inc
mov
mov
adc
push
dec
mov
add
or
mov
cmp
shr
lock
bound
fsubr
jmp
jns
adc
aad
sbb
sub
adc
cmp
ins
jmp
xchg
sub
mov
movs
jne
adc
retf
leave
mov
inc
push
(bad)
pop
jl
data16
test
ins
out
sub
(bad)
lahf
sti
bound
cmps
and
xchg
mov
inc
(bad)
mov
(bad)
repnz
mov
shr
push
fadd
jl
xchg
xor
dec
cmc
pusha
xor
mov
imul
mov
inc
cmc
mov
je
or
mov
lahf
imul
mov
xchg
clc
aad
nop
fldlg2
mov
adc
sub
daa
pop
and
je
stc
cld
jmp
push
dec
call
(bad)
das
inc
pop
push
(bad)
push
je
mov
shl
loopne
jp
in
stc
or
adc
mov
repnz
sub
xchg
inc
dec
inc
mov
jb
sti
inc
shr
or
or
data16
and
mov
out
in
clc
mov
mov
push
xor
push
mov
shr
mov
mov
je
enter
popa
push
(bad)
retf
cmps
jmp
jecxz
push
mov
jnp
(bad)
fldcw
adc
sbb
cmp
mov
cs
dec
into
and
in
call
jae
imul
repnz
cwde
cmp
test
xor
ds
push
cmps
scas
sub
adc
mov
stos
lahf
out
jne
fdiv
and
ret
xlat
and
stos
inc
aad
cmp
inc
dec
out
mov
scas
or
fidiv
dec
out
das
mov
xchg
mov
inc
rcr
xor
loop
sbb
lea
push
xor
out
jmp
and
stos
rcl
pop
mov
pop
pop
jne
jns
pop
jmp
scas
cmps
(bad)
xor
aad
outs
jge
test
ja
pop
inc
dec
inc
sti
jl
repz
mov
bound
out
cmp
ja
sub
or
jne
jmp
dec
adc
stc
shl
jl
(bad)
hlt
mov
mov
int3
stos
sbb
aas
jnp
push
int3
xchg
test
pop
mov
and
int3
jmp
sub
mov
jecxz
sbb
mov
cmp
add
fwait
neg
xchg
scas
aas
repz
jmp
dec
and
pop
retf
pop
imul
fistp
ins
retf
mov
stc
nop
cmp
cmp
push
jp
push
lea
dec
mov
lds
das
shl
mov
pusha
ret
loope
aaa
test
ins
mov
pop
pop
ins
out
add
sub
in
add
sbb
mov
and
add
pop
dec
lods
out
ret
and
sbb
(bad)
aad
and
mov
sbb
sahf
add
and
jns
mov
mov
jae
cmp
cmp
mov
push
enter
dec
inc
sar
add
jge
inc
push
out
mov
addr16
mov
push
jbe
out
retf
scas
and
neg
and
xor
pushf
sahf
movs
mov
push
jecxz
xchg
je
jns
shr
push
bound
pop
mov
movs
cld
sub
imul
and
xlat
mov
leave
in
cmp
sbb
cdq
and
jne
ins
xchg
inc
sahf
sbb
sbb
jbe
clc
(bad)
repnz
mov
pop
test
fldcw
mov
stc
or
int3
out
call
movs
inc
mov
xor
xchg
mov
inc
das
mov
cvttps2pi
lds
ja
push
aam
or
mov
sar
xchg
jns
xchg
pop
cmps
(bad)
mov
xor
fmul
in
aad
sub
rol
or
mov
aaa
mov
rcr
inc
mov
mov
cmps
add
aad
mov
aas
shl
mov
and
cmp
cmp
and
pop
scas
mov
aaa
shr
inc
mov
out
fisub
mov
mov
and
inc
sahf
mov
add
mov
mul
mov
test
(bad)
sbb
cmp
movs
pop
mov
jns
ret
add
ds
mov
mov
push
mov
daa
jo
dec
mov
int
fdivr
fstp
push
ja
mov
cdq
or
sub
and
pop
cmp
(bad)
push
daa
jl
push
and
cmp
jp
out
jae
and
xor
dec
xor
pop
shl
push
push
gs
lahf
cmps
(bad)
pushf
push
mov
mov
mov
js
lds
and
stos
push
pop
nop
nop
popf
stc
push
(bad)
(bad)
cli
mov
neg
xlat
sub
mov
or
outs
xchg
adc
or
cmp
jg
adc
xchg
xchg
push
xlat
xor
out
cmp
add
xor
jno
outs
sbb
sub
lea
mov
sbb
js
addr16
push
retf
sub
repz
ret
(bad)
mov
sub
jmp
push
mov
xor
push
and
push
stc
mov
push
jmp
push
jo
cmp
jne
mov
cmp
sub
lds
jge
mov
je
and
sbb
in
add
xchg
rol
sub
popf
bound
mov
into
ss
imul
mov
push
popf
jne
test
mov
and
loopne
pop
add
sbb
push
xchg
inc
mov
mov
jl
mov
scas
int
ds
arpl
adc
pop
addr16
xchg
int
jp
push
xor
push
pop
pop
inc
jns
push
(bad)
jnp
jb
cmp
into
fist
pop
cmps
mov
mov
inc
and
(bad)
sbb
das
and
mov
pop
pushf
pusha
push
or
jnp
mov
pushf
pop
pop
dec
aas
outs
adc
out
lods
fidiv
lods
xor
aaa
pop
pop
mov
mov
imul
call
xlat
sub
dec
and
cmp
push
adc
dec
dec
hlt
sub
xor
hlt
cdq
sbb
sbb
movs
into
adc
out
inc
xchg
jo
fld
pop
aad
xor
push
test
movs
ror
fs
cmps
add
into
outs
mov
fs
jl
and
jl
(bad)
mov
lock
lods
mov
jmp
pop
clc
or
cmp
jecxz
jae
add
ja
mov
mov
mov
mov
or
push
lods
xor
fstp
push
fdiv
jl
pop
sub
movs
bound
and
add
xor
fsub
jo
loope
out
inc
jae
je
pop
cmp
mov
test
xlat
push
mov
xchg
xlat
imul
dec
addr16
mov
xor
mov
addr16
mov
gs
hlt
lds
mov
test
movs
or
and
cld
(bad)
fisubr
(bad)
popf
ja
inc
fisttp
fistp
add
repnz
(bad)
push
ret
je
retf
cmp
mov
out
(bad)
pop
data16
adc
and
and
inc
sub
js
mov
add
push
push
mov
sbb
add
(bad)
push
shr
test
adc
fisub
jb
and
pushf
shl
add
movs
test
jmp
xchg
or
ins
ret
lods
and
hlt
ds
pop
das
xor
lods
adc
ds
lods
mov
lods
icebp
pop
aad
inc
scas
cmp
lods
jg
in
xor
or
stos
arpl
mov
sbb
jns
dec
xchg
cmps
add
in
dec
pop
scas
stos
jg
shl
ret
sub
push
inc
or
jmp
adc
push
je
jecxz
or
xchg
adc
push
clc
jb
xchg
mov
mov
mov
pop
push
xchg
enter
cmps
int
or
and
pop
jl
push
dec
adc
loopne
xlat
ss
or
add
dec
lahf
or
jns
jmp
sub
nop
(bad)
jp
dec
fsub
pushf
call
add
mov
and
fdivrp
test
call
das
push
inc
or
mov
jbe
mov
hlt
cmp
aas
pop
pop
nop
cs
ret
push
ret
iret
(bad)
clc
pop
and
dec
or
sbb
or
add
ss
push
or
je
lea
push
xchg
xchg
out
test
loopne
outs
(bad)
cli
(bad)
xchg
jge
pop
push
push
and
retf
fimul
mov
mov
mov
xchg
and
xchg
test
push
adc
jge
xchg
adc
inc
push
add
loope
mov
jg
stos
jmp
inc
jecxz
or
retf
push
xor
mov
stos
sub
xchg
scas
les
pop
mov
(bad)
stos
xor
leave
ds
dec
sti
jnp
(bad)
rcl
pop
call
cmps
int3
push
xchg
push
cmc
outs
in
or
js
adc
sbb
sbb
enter
icebp
ss
inc
pop
dec
fist
pop
addr16
gs
xchg
jne
and
ficomp
imul
jne
js
pop
add
repz
ss
dec
scas
pop
repz
in
and
int
dec
and
dec
or
dec
jo
mov
sbb
test
pop
movzx
push
pop
or
jo
push
jb
pop
add
in
xor
dec
add
xor
or
ror
sbb
call
pop
js
pop
pop
mov
bound
(bad)
loope
cmp
ja
mov
pop
fcmovu
mov
outs
mov
sub
(bad)
aad
test
cmp
cmps
inc
shr
sub
mov
xor
or
xor
aad
mov
out
add
sub
ficomp
sub
(bad)
fist
aad
pop
(bad)
out
enter
loop
lea
add
and
and
xchg
icebp
jmp
(bad)
mov
pop
(bad)
fucom
mov
pusha
xor
ficomp
out
rol
lods
add
xchg
loope
dec
(bad)
or
fld
fs
stos
push
adc
dec
popf
xchg
(bad)
jg
outs
jecxz
xor
sub
mov
int
addr16
shr
ret
test
or
adc
push
cmp
jae
nop
xchg
rcl
cmp
sbb
inc
or
sbb
pop
fwait
pop
repnz
fisttp
add
inc
jae
(bad)
fsub
xor
mov
push
push
(bad)
jno
sub
es
sub
mul
dec
mov
std
mov
add
nop
jo
scas
push
push
cmp
or
in
lea
je
dec
ja
push
(bad)
mov
aad
stos
xchg
cmps
and
loopne
push
test
imul
push
js
mov
and
push
xor
mov
cdq
mov
lds
inc
and
jne
fwait
addr16
mov
pushf
retf
in
sbb
xor
push
(bad)
fld
les
add
fbld
das
sub
dec
loope
inc
(bad)
sbb
xchg
mov
and
ja
cmc
in
aam
loope
retf
xchg
sub
cld
mov
pop
jns
add
ds
xor
fdivr
lock
jae
bnd
push
mov
add
mov
and
hlt
in
cs
pop
loop
dec
dec
add
mov
popa
cs
sbb
inc
cdq
dec
push
in
retf
jns
dec
mov
push
repnz
dec
pop
ins
scas
dec
pop
test
call
sbb
cmp
sub
inc
fcmovne
fwait
dec
add
xchg
or
dec
test
jnp
(bad)
mov
adc
test
pop
mov
(bad)
sub
clc
out
sub
nop
lahf
mov
pop
scas
xor
sbb
sar
xor
js
inc
ret
and
cmp
mov
pop
add
mov
(bad)
iret
mov
and
iret
imul
int3
scas
xor
daa
imul
xacquire
xor
ins
sub
int
xchg
xchg
iret
mov
push
shl
loope
loop
sbb
int3
mov
repnz
loope
add
imul
mul
ret
adc
mov
xchg
scas
cmp
cmp
shl
bound
cmps
jb
and
push
out
popa
iret
cwde
and
rcr
lock
pusha
shr
shr
adc
jmp
ja
jp
mov
in
and
es
inc
adc
(bad)
cli
mov
stos
nop
cmps
ds
adc
and
ds
or
cmp
and
pop
jae
std
sbb
mov
jb
inc
xor
enter
xchg
fisub
lahf
ret
(bad)
ret
jmp
ror
scas
je
ret
push
(bad)
cmp
les
xor
jg
fs
xchg
out
lods
lods
jmp
inc
inc
and
cmp
call
sub
dec
out
fisubr
(bad)
push
call
push
jg
mov
xor
mov
aad
pusha
or
aaa
call
mov
es
push
mov
ss
and
pop
dec
adc
call
xchg
adc
pop
aad
fcom
shl
fmulp
test
out
or
cmps
scas
in
into
mov
add
pushf
push
cmps
jg
dec
inc
inc
inc
cmp
aam
jmp
enter
shl
xor
fucomip
ret
fld
inc
cmp
dec
or
and
push
retf
pop
mov
or
jecxz
mov
sub
out
cs
lds
shl
sbb
imul
add
out
gs
or
cmp
xchg
mov
push
js
movs
pop
fwait
mov
sub
loope
push
mov
push
inc
inc
(bad)
jmp
(bad)
xor
aam
stos
mov
pop
jmp
(bad)
xchg
push
lods
xchg
div
cmps
retf
int
addr16
xchg
pop
retf
lock
add
xchg
xchg
add
out
imul
gs
pop
pusha
and
out
(bad)
fbstp
aas
(bad)
fistp
jo
adc
rcr
shr
out
sbb
pop
xchg
push
loop
inc
lss
push
dec
int3
mov
inc
lods
xor
dec
inc
mov
stc
dec
xor
push
ret
loop
rcr
fs
mov
mov
and
cmps
sti
pushf
arpl
leave
mov
xchg
ja
scas
mov
arpl
test
(bad)
jae
mov
xchg
cli
and
enter
adc
pop
(bad)
push
cmp
mov
sahf
iret
rcl
and
adc
sbb
imul
test
cmps
jo
pushf
jne
sub
sub
ds
mov
mov
loope
iret
inc
iret
or
jo
sub
out
test
dec
inc
shl
(bad)
jmp
fbld
pop
int3
mov
sar
and
daa
ficomp
lods
xchg
xchg
ret
xor
stos
out
mov
pushf
aad
mov
stc
stos
gs
cli
call
mov
fcomp
loope
pop
and
scas
pop
fisttp
mov
mov
xchg
(bad)
int3
xor
mov
rol
out
sti
xor
mov
cwde
mov
dec
xchg
ins
fwait
mov
les
mov
jp
push
jno
push
fimul
cwde
mov
fdiv
pop
ins
test
dec
ins
mov
out
xchg
les
sahf
or
mov
sbb
sub
dec
hlt
adc
jmp
xlat
xchg
js
jb
inc
push
inc
enter
cmps
stos
je
cli
loope
adc
popf
ror
xor
cld
push
repz
mov
ins
retf
fisubr
mov
sbb
lea
cmc
push
aad
xchg
pop
push
adc
cmp
jecxz
dec
sti
inc
mov
jns
cmps
fwait
movs
sub
dec
sar
shr
push
xchg
mov
out
mov
je
sbb
xor
in
cmp
push
xor
mov
mov
movs
and
rol
mov
les
push
aaa
add
nop
sti
dec
inc
loope
mov
cwde
jge
ds
sub
aaa
mov
shrd
mov
in
imul
out
inc
sub
movs
int
xchg
inc
cmc
dec
dec
cli
jno
ja
xchg
outs
lock
adc
fild
sbb
mov
mov
sbb
push
push
fwait
js
outs
cmp
push
bound
mov
jno
mov
arpl
push
push
jnp
push
adc
mov
std
sub
pop
and
ss
pop
test
adc
inc
loop
xchg
sar
add
xchg
sti
loopne
jl
mov
mov
fist
clc
dec
sbb
jp
add
jl
lods
xor
ss
sti
frstor
(bad)
shl
mov
jns
fs
cwde
xchg
add
les
adc
test
in
xchg
jbe
push
imul
ret
loope
xchg
dec
hlt
fwait
nop
jae
out
xchg
into
movs
sbb
push
push
pop
aad
stc
gs
shl
outs
sub
xchg
push
aas
ins
or
mov
in
and
add
pushf
int3
or
or
lds
push
call
call
sti
mov
stc
cs
lds
push
test
jo
in
clc
pop
cs
or
mov
in
mov
jecxz
bound
nop
mov
sub
scas
mov
repnz
das
mov
sub
or
push
cmp
das
xchg
ror
xchg
nop
lock
dec
sub
fstp
sbb
dec
push
movs
arpl
out
ja
and
mov
push
pop
sbb
mov
sub
in
mov
xlat
and
mov
push
push
mov
cmp
addr16
mov
in
shl
add
mov
cmc
pop
call
adc
mov
sahf
in
xchg
pop
mov
dec
mov
and
xlat
cmp
sahf
arpl
clc
ins
lods
js
push
xchg
(bad)
xchg
xor
xor
xchg
pop
push
imul
pop
adc
jmp
mov
push
xor
pusha
test
out
add
mov
mov
mov
test
inc
sti
jo
popf
push
cdq
push
out
fld
aam
fiadd
mov
push
mov
and
sub
sub
dec
jmp
or
into
dec
mov
sar
xchg
das
xlat
popf
loope
dec
mov
mov
and
icebp
icebp
add
(bad)
paddsb
hlt
scas
push
es
hlt
jl
sbb
dec
mov
pusha
fld
jno
loopne
add
dec
aaa
fistp
xchg
sub
ins
ds
pushf
sbb
sbb
inc
iret
in
push
(bad)
gs
pop
push
mov
sbb
aad
inc
es
out
fwait
out
add
sub
sti
pop
pop
fldcw
loope
rol
pop
add
aas
and
and
sahf
std
jmp
or
stos
cdq
xor
pop
mov
shl
mov
cmp
sbb
ja
cmp
mov
(bad)
mov
test
mov
pshufw
mov
ds
aas
fidivr
mov
mov
les
mov
int3
stos
push
sbb
mov
fnstsw
aaa
pop
dec
xlat
mov
das
dec
mov
adc
sub
(bad)
idiv
stos
test
(bad)
daa
jecxz
in
call
mov
or
ins
sbb
xlat
jle
mov
fisttp
pop
scas
sbb
xor
mov
xorps
mov
and
mov
icebp
mov
pushf
sbb
mov
jo
fld
mov
adc
jl
mov
lock
into
xlat
les
push
jne
push
sbb
mov
sahf
mov
pop
test
addr16
je
shl
push
dec
jl
inc
xchg
pop
imul
jecxz
fnstenv
or
(bad)
cmp
mov
outs
(bad)
jle
xor
push
cmp
mov
add
jbe
mov
lea
not
mov
in
lods
stos
inc
xchg
cmps
stos
inc
xchg
fsub
sbb
push
cmp
lds
mov
and
cdq
les
pop
(bad)
jmp
out
cli
repz
mov
ret
mov
jmp
loopne
mov
jno
mov
es
xor
mov
out
sbb
mov
fwait
pusha
sbb
lods
arpl
movs
aas
adc
add
sub
pop
sbb
jns
jecxz
or
call
ins
sbb
pop
loopne
ins
sub
lock
ins
jbe
xchg
mov
scas
push
add
jne
or
stos
loopne
push
sbb
add
sahf
dec
cmp
jle
sbb
loopne
jns
ja
mov
nop
gs
jle
call
xor
sbb
push
xor
mov
or
xchg
add
fs
popf
and
dec
or
dec
xor
les
test
rcl
mul
icebp
xlat
sub
adc
in
mov
imul
daa
cmps
jno
and
adc
neg
or
cmp
cmps
pop
enter
adc
scas
ficom
mov
scas
aas
sahf
jb
xchg
call
movs
dec
xor
ror
pop
int
jecxz
ret
mov
sub
push
nop
mov
sbb
xchg
addr16
imul
lds
js
(bad)
adc
in
les
rcr
sbb
xchg
inc
(bad)
je
mov
cwde
ficomp
inc
movs
fild
(bad)
cld
sbb
shr
repz
movs
(bad)
fsub
cmp
dec
sub
xchg
xor
dec
(bad)
or
stc
jae
retf
jl
dec
mov
lea
push
push
icebp
mul
outs
sbb
adc
shl
daa
inc
sbb
icebp
ret
cdq
lock
inc
addr16
sti
cmp
cmc
add
cmps
cwde
adc
ret
sbb
mov
push
sub
enter
outs
mov
cwde
sbb
rcl
outs
loope
jbe
dec
xchg
es
addr16
js
das
sahf
pop
inc
push
std
dec
lahf
rsm
retf
cmc
xchg
test
rcr
(bad)
dec
inc
leave
cs
xchg
and
fs
mov
pop
xchg
retf
push
ja
mov
jmp
or
sub
in
dec
out
ret
fwait
jnp
pop
pusha
imul
xchg
push
retf
mov
mov
data16
mov
lock
stc
fimul
jle
and
add
int3
data16
mov
hlt
xchg
popa
repnz
aam
fs
inc
shl
imul
adc
dec
cmp
repnz
in
mov
call
pushf
sar
inc
adc
jp
fnstenv
(bad)
xchg
mov
pop
(bad)
or
inc
ja
push
xchg
aas
std
test
(bad)
adc
sub
cmp
cwde
adc
mov
xchg
jne
cmp
cmc
in
arpl
movs
cmp
cld
sahf
cld
imul
xor
call
retf
adc
out
mov
stc
(bad)
call
cmp
push
jns
xchg
and
popf
js
jge
inc
and
sub
int
cwde
xor
lods
fist
fcom
dec
add
inc
aas
sbb
cmp
(bad)
(bad)
and
cmc
sahf
and
rcl
dec
jo
in
lahf
pop
fsubr
test
nop
jae
mov
(bad)
shl
push
jno
jecxz
maskmovq
mul
iret
jno
add
(bad)
mov
movs
mov
jge
xchg
stc
push
xchg
xchg
mov
xchg
out
out
sub
mov
cwde
mov
fild
shr
adc
fwait
dec
adc
xchg
shl
sub
adc
bound
jp
cmp
pop
test
jnp
loopne
inc
ror
shl
(bad)
mov
sub
je
push
mov
jae
inc
fistp
lahf
and
mov
inc
(bad)
(bad)
jbe
(bad)
jne
mov
stos
lahf
fs
add
das
dec
adc
pop
aaa
mov
out
or
das
test
mov
mov
shl
inc
push
fsin
push
adc
lea
adc
dec
mov
push
cmp
ins
mov
mov
ins
dec
or
mov
test
test
popf
xchg
mov
push
pop
popf
(bad)
hlt
cmc
dec
aad
aas
mov
xor
rol
or
inc
fwait
ins
sbb
push
(bad)
mov
jo
mov
jmp
xor
xor
(bad)
mov
mov
cli
mov
cld
leave
cmp
data16
jg
pop
or
xchg
mov
add
mov
mov
mov
fnstenv
inc
cmp
aam
cmp
cld
fcmovbe
mov
in
aad
xchg
jmp
and
cmps
(bad)
xchg
or
jns
mov
clc
and
clc
add
push
push
dec
mov
(bad)
cmp
mov
mov
stos
aas
loopne
and
cs
or
push
jb
adc
out
inc
es
cmp
das
int3
iret
fcom
outs
or
jno
and
adc
ins
cs
adc
pop
mov
mov
add
aas
mov
inc
in
mov
push
mov
es
jp
push
int3
mov
lods
mov
mov
popf
sub
mov
jle
mov
xor
pop
fsub
xchg
sbb
or
sub
jecxz
mov
mov
add
mov
and
stc
rol
enter
add
mov
ficomp
or
adc
call
pop
push
arpl
jnp
xchg
jnp
test
jbe
jp
mov
mov
push
adc
test
loop
mov
lods
mov
shl
sub
sbb
or
stos
das
nop
sti
in
pop
out
rol
pop
push
dec
mov
mov
xlat
cmp
test
or
dec
jno
push
dec
test
out
mov
pop
push
push
rcl
adc
leave
xchg
out
in
pop
add
scas
inc
pop
sahf
popf
push
stc
std
pop
(bad)
aaa
mov
or
lock
mov
xchg
rol
sbb
into
sub
fiadd
push
fstp
cs
jle
scas
jbe
jle
jmp
xchg
and
pop
stos
fistp
cmp
shl
in
lock
push
into
cmc
xchg
fidiv
mov
sub
rcl
loope
ror
fnstenv
ds
scas
and
data16
mov
push
stos
mov
xor
inc
pusha
push
cmps
fnstsw
inc
cmp
in
cld
pop
mov
adc
jno
cdq
and
ds
xchg
mov
jb
pop
or
inc
rcr
lods
imul
aas
fdiv
repnz
pop
or
stc
xor
cli
mov
cmp
js
rcl
sbb
gs
adc
adc
inc
jmp
fsubp
push
ret
mov
xor
out
sub
or
pop
cmp
iret
or
out
imul
mov
sahf
adc
loopne
add
icebp
inc
ja
mov
add
cli
cmp
mov
loop
es
jbe
push
fisub
je
es
mov
pop
mov
retf
rol
nop
aaa
jno
push
xchg
and
dec
xor
cmps
jle
and
xor
fs
clc
cmps
dec
mov
and
inc
(bad)
pop
stos
mov
cmp
jmp
movs
jmp
mov
movs
(bad)
sbb
xor
jecxz
std
sar
add
stos
lods
mov
add
push
xor
call
jmp
mov
loopne
xchg
xchg
mov
aas
shl
fcomp
inc
cmp
adc
sar
jns
xchg
xchg
xchg
dec
cmp
mov
iret
push
add
retf
mov
outs
das
shl
test
dec
cwde
push
cmp
gs
outs
dec
cmp
add
cs
sbb
cwde
mov
in
inc
pop
or
int
jg
outs
mov
cmps
mov
pop
std
les
xchg
xlat
inc
fwait
fwait
in
repz
cmp
sbb
gs
add
add
sbb
push
into
sub
inc
cli
or
push
jl
ds
xor
and
xchg
xor
test
aas
dec
hlt
jmp
xchg
sbb
dec
hlt
mov
test
outs
add
xchg
jae
add
pop
mov
pop
xor
(bad)
mov
mov
loop
mov
jecxz
or
fmul
push
call
ret
in
in
or
cmp
cwde
popa
in
js
inc
sbb
and
cdq
fistp
xchg
cmps
pop
popa
and
mov
xchg
jmp
mov
xor
add
adc
mov
fs
dec
jno
mov
push
jl
shr
sub
cs
dec
xchg
out
repz
fwait
call
ror
jle
int3
in
xchg
jmp
mov
cmp
shl
mov
inc
daa
jge
mov
je
sahf
xchg
jbe
retf
imul
call
mov
and
mov
retf
sub
lahf
mov
test
push
idiv
jno
aaa
cmp
sar
stos
pop
dec
lods
int
mov
mov
cmps
aad
sub
push
bound
test
sahf
and
fmul
jae
dec
mov
or
dec
jmp
cmp
daa
mov
cld
stc
call
jne
inc
repnz
dec
pop
sub
cmp
jbe
ins
jb
add
sub
sub
ret
mov
pop
inc
adc
mov
push
pop
lds
fdivr
xlat
shl
test
or
and
mov
cs
mov
add
imul
mov
nop
jge
xor
inc
repnz
push
cs
(bad)
(bad)
pop
xchg
pop
out
mov
out
clc
xchg
cmp
xor
add
mov
std
out
push
push
test
mov
loop
jno
mov
out
hlt
dec
xchg
cmps
ins
xor
sar
dec
sti
lods
or
jne
adc
int3
iret
jp
aam
jo
fs
lds
dec
lods
(bad)
and
and
xchg
stos
xor
dec
bound
mov
jle
cmp
(bad)
jmp
(bad)
pop
jb
cmp
(bad)
mov
das
fiadd
dec
std
or
sbb
shl
aad
push
push
fsubp
lahf
jmp
test
xchg
fisttp
pushf
mov
mov
sub
cmp
cmp
(bad)
movs
jecxz
fstp
arpl
dec
repz
dec
and
and
jge
or
(bad)
js
cs
lods
gs
repz
jl
cmp
lods
or
(bad)
sub
std
in
scas
test
repz
dec
mov
sti
sbb
jge
mov
hlt
jnp
clc
das
fiadd
mov
ror
ret
jp
dec
pop
aam
mov
frstor
std
ror
(bad)
fnstsw
data16
mov
(bad)
in
or
dec
jb
ja
jge
mov
jle
mov
in
stc
imul
inc
xchg
jle
int3
and
sub
inc
loope
std
dec
add
mov
aad
fcmove
fwait
hlt
cmp
je
sub
inc
loop
in
(bad)
sbb
inc
and
jae
cs
imul
(bad)
stc
sub
leave
sbb
push
fs
ja
xchg
jbe
push
xor
push
push
cmp
mov
outs
idiv
cmp
les
adc
xchg
sbb
xchg
and
mov
dec
jae
pop
iret
out
(bad)
adc
pushf
pop
in
ss
(bad)
sbb
mov
dec
mov
mov
mov
dec
xchg
jmp
lods
adc
scas
inc
push
mov
push
lods
adc
out
pop
xchg
fwait
cdq
xchg
fs
dec
loope
pop
push
cdq
mov
retf
(bad)
mov
add
cli
push
sub
sbb
test
lahf
aas
enter
cmps
popf
loopne
call
out
ins
lods
adc
jmp
pusha
dec
mov
out
das
or
mov
ret
in
cmp
inc
push
loopne
loope
and
mov
enter
sbb
xor
inc
scas
gs
gs
pop
and
inc
cmp
or
inc
and
gs
add
dec
hlt
adc
pop
mov
or
das
adc
ret
sbb
imul
push
push
lods
shr
xchg
pop
aad
sub
pop
mov
inc
movs
cmps
mov
mov
aam
ret
ins
in
jbe
je
lock
in
clc
jns
mov
aad
inc
cmc
(bad)
sbb
sti
shl
push
jp
out
ret
movs
sbb
cmp
push
test
pop
push
out
fimul
shr
imul
in
jl
out
mov
or
retf
out
fcmove
push
add
cmp
mov
in
add
pop
je
loopne
dec
adc
and
popa
mov
ror
sar
mov
adc
shr
lds
jmp
call
das
imul
loop
iret
aad
in
int
push
push
jg
add
mov
sbb
aad
lahf
xchg
jp
jae
sbb
mov
cli
and
ins
push
pop
pop
jns
adc
addr16
mov
sti
ja
ret
and
xor
jg
test
add
cld
lods
pop
mov
aad
(bad)
mov
jne
inc
jbe
or
repz
xor
test
jbe
or
in
inc
or
cmps
std
cmp
mov
xchg
nop
pinsrw
mov
xor
mov
retf
test
sbb
jne
out
xor
test
push
mov
aaa
and
(bad)
push
xlat
mov
test
or
sub
aad
mov
pop
arpl
xchg
add
pop
add
fist
mov
pushf
mov
fild
xor
sub
jle
pop
mov
push
jecxz
jns
jbe
lock
inc
mov
cld
and
jl
xchg
fist
out
sbb
pop
push
xchg
jne
sbb
or
lods
shr
sub
or
shl
push
sub
mov
inc
or
xor
jne
ret
xor
(bad)
jb
cmp
mov
movs
ins
sbb
and
xchg
in
loop
lahf
iret
push
loop
push
sub
inc
fadd
enter
sbb
das
pop
stc
push
ins
rcl
xor
xchg
hlt
scas
cmps
sbb
xor
(bad)
mov
jge
addr16
xlat
into
test
and
icebp
les
and
adc
rcr
adc
xor
sub
lock
popa
jecxz
mov
mov
bound
add
rcl
loope
leave
fdivr
cmp
push
lods
test
(bad)
mov
inc
aaa
in
adc
test
sbb
jge
mov
inc
push
mov
loope
ret
pusha
cmp
out
and
fistp
out
adc
xor
xchg
mov
sets
push
adc
cs
adc
jae
inc
dec
push
sub
stos
lea
push
adc
lods
and
mov
pop
pop
add
mov
cld
aam
inc
(bad)
loope
fstp
cwde
dec
out
sub
outs
stos
push
icebp
stc
add
jae
gs
leave
cmp
lds
ds
clc
mov
add
cmp
jns
test
cmps
(bad)
push
push
cld
sbb
out
lock
cdq
lds
cmp
enter
mov
xchg
cwde
dec
dec
int
dec
pop
clc
xor
jo
arpl
xchg
int3
dec
add
cmps
mov
cmps
or
(bad)
mov
adc
mul
mov
add
mov
sahf
xchg
ret
push
adc
cmp
test
outs
or
or
mov
lods
mov
inc
int
mov
popa
fmul
mov
jae
imul
imul
mov
push
scas
dec
dec
int3
or
fidiv
shl
push
mov
lods
add
cmps
test
sub
or
adc
cld
fisubr
add
retf
out
cld
add
cdq
sub
sub
cs
add
cmc
inc
mov
jae
pop
add
mov
xor
jge
and
loope
cmp
add
xor
cli
aam
jbe
add
fs
dec
aaa
push
pop
and
enter
sub
push
inc
xchg
xchg
sub
mov
or
pop
movs
sub
or
sbb
out
fbld
mov
sub
pop
xor
xchg
lods
add
jmp
and
jne
mov
arpl
clc
shl
pop
arpl
mov
arpl
retf
xchg
inc
add
pop
and
in
popf
test
cmc
pop
or
lods
int
loop
jne
jecxz
movs
shl
sub
movs
ja
jmp
push
lods
stos
jns
(bad)
stc
shr
xchg
pop
bound
mov
lea
ds
test
mov
sti
ins
das
or
mov
scas
mov
jmp
xchg
test
adc
fild
stos
aam
mov
jge
pop
movs
jb
fwait
sub
mov
dec
mov
mov
sub
(bad)
fisttp
mov
jl
mov
sub
fs
pmaddwd
inc
pop
jmp
imul
mov
xchg
pop
or
add
ret
cmps
adc
pop
retf
imul
call
hlt
add
out
cmp
and
cmp
loope
stos
push
lods
xchg
rol
lods
test
imul
pushf
pop
xor
into
fld
test
adc
aaa
push
pop
aas
ins
sub
fsub
aam
cmp
inc
mov
or
pop
ins
push
in
adc
push
ins
out
push
in
(bad)
test
mov
xchg
and
out
in
loop
mov
pop
addr16
cmp
clc
jecxz
jmp
(bad)
jbe
popf
das
push
fiadd
or
nop
call
pop
fcmovbe
ffree
scas
lods
and
hlt
pop
pop
jl
inc
fld
les
sub
aas
dec
int3
out
push
push
int
je
mov
sub
mov
int
xor
fldenv
pop
push
aad
or
sub
mov
mov
cmp
movs
mov
xor
loope
inc
leave
pop
adc
mov
mov
dec
mov
cwde
stc
mov
sbb
mov
mov
cmp
mov
xchg
fwait
push
(bad)
ins
repnz
push
fisubr
arpl
xchg
ins
cmc
xor
pop
adc
imul
mov
cmps
dec
cdq
(bad)
xlat
sbb
aas
jge
fidivr
adc
test
cmps
xchg
xchg
into
lods
push
pop
cmp
push
(bad)
fiadd
movs
sub
imul
std
push
imul
fcmovnbe
add
cmp
in
les
push
(bad)
call
call
pop
sub
stc
push
mov
jae
dec
cmp
and
mov
lock
push
bound
lods
inc
stc
sub
xchg
push
sub
int
shl
outs
adc
xor
xchg
(bad)
cmp
test
cli
imul
lods
lods
cmps
inc
mov
dec
outs
add
push
push
pop
call
pop
cmp
imul
inc
retf
(bad)
mov
(bad)
jae
mov
cmp
add
shl
dec
xchg
in
sbb
ror
or
and
movs
and
bt
jnp
(bad)
ficom
mov
retf
sti
rep
sbb
push
jmp
sub
js
cmp
push
outs
cmps
inc
not
popa
push
rcr
xchg
repnz
add
pop
pushf
not
test
int3
not
xchg
mov
cmp
sti
mov
jmp
test
sti
aad
xchg
fistp
mov
sub
xor
fild
xchg
ja
hlt
xchg
cmps
std
gs
push
or
out
popa
push
bound
inc
adc
loope
call
dec
sar
mov
pushf
xor
ret
cmps
ret
repnz
pop
sar
(bad)
aad
mov
xchg
mov
push
and
dec
jns
cwde
cs
add
or
jmp
inc
dec
xor
mov
clc
xlat
out
popf
hlt
jbe
jae
pop
lds
and
pop
ret
xlat
adc
or
dec
or
mov
fwait
sub
mov
jmp
mov
xor
leave
popf
neg
sbb
ds
push
xor
dec
icebp
data16
imul
mov
(bad)
jns
test
imul
icebp
cmp
adc
or
mov
ret
add
scas
xchg
jbe
or
jge
xor
mov
sub
cmp
sub
jle
inc
call
pop
pusha
call
mov
push
push
stos
lahf
and
push
(bad)
mov
bound
or
xlat
les
adc
push
fimul
xchg
mov
and
lahf
mov
addr16
xlat
mov
repnz
sbb
mov
cmps
sub
rcl
das
mov
cdq
pop
in
mov
cli
and
shl
aaa
xchg
xor
mov
add
mov
aaa
cmp
ror
add
outs
push
mov
mov
push
xchg
sbb
mov
aaa
arpl
xor
dec
xchg
das
stos
mov
stos
pop
jle
xchg
(bad)
sub
out
fst
test
aam
sub
fcomip
jmp
cs
jae
mov
mov
mov
fadd
in
sbb
sub
rcl
pop
sub
xlat
dec
stos
ficom
fst
in
or
adc
push
clc
sbb
add
pop
das
fild
(bad)
into
xlat
jns
dec
sub
inc
js
push
mov
and
push
jae
test
cmps
not
fcmove
in
pop
pop
sub
cli
daa
push
ficomp
jnp
push
pop
gs
js
js
stos
add
sbb
aas
pop
jmp
rcr
outs
xchg
sub
push
idiv
dec
repz
or
pop
xor
cmc
and
push
fadd
push
mov
pop
es
sbb
les
jg
dec
xchg
stc
inc
add
movzx
adc
jne
jecxz
adc
call
sbb
xchg
inc
push
lods
ins
cmp
cdq
pop
sbb
leave
inc
sub
cmp
push
pop
push
cmc
inc
fstp
push
mov
in
inc
into
outs
mov
dec
inc
aaa
adc
sub
mov
ins
mov
cmps
xchg
cmp
out
sub
repnz
call
rcr
push
inc
arpl
cmp
sub
test
xor
in
xor
xor
fwait
inc
add
shr
ret
mov
fst
in
cmp
cs
pop
pop
dec
pcmpeqb
pop
dec
int
retf
cmps
std
xchg
jg
adc
inc
jmp
push
rol
test
sub
cmp
in
sub
push
jg
(bad)
sbb
loope
add
mov
xor
xlat
stos
xor
dec
test
loop
das
jb
cmp
push
mov
mov
and
inc
or
xor
(bad)
shl
sahf
mov
scas
push
mov
mov
inc
cmps
popf
repz
jmp
lea
push
stos
push
add
adc
in
sahf
mov
mov
sbb
hlt
jg
sbb
pop
mov
inc
jae
inc
jb
fnstcw
call
leave
and
sbb
aaa
shl
pop
push
push
out
sub
jbe
pop
in
scas
adc
sbb
js
cmc
or
mov
dec
pop
mov
repz
es
in
xchg
jne
retf
out
jb
push
mov
pop
mov
pop
call
jmp
mov
jle
cmp
or
cld
mov
clc
pop
dec
test
imul
jmp
std
icebp
and
xor
ficom
in
jge
lahf
sbb
adc
inc
push
xor
shl
push
mov
rdpmc
or
jbe
ins
or
inc
mov
mov
dec
data16
adc
sbb
add
in
std
aaa
xchg
fs
movs
pop
int3
icebp
icebp
jb
inc
(bad)
out
add
in
sahf
jecxz
loopne
mov
or
and
mov
and
dec
data16
inc
movs
cli
push
lods
popa
push
lods
mov
push
add
cmp
es
push
clc
push
(bad)
cmp
dec
js
arpl
retf
jg
call
mov
push
and
shl
enter
fnstcw
and
cmps
jmp
mov
sbb
leave
dec
mov
push
std
retf
jmp
and
lock
dec
fild
sbb
dec
pop
dec
loope
dec
inc
push
rol
inc
fisttp
mov
pop
inc
cmp
xchg
dec
popf
jl
dec
test
aas
xor
inc
push
les
dec
cli
inc
ds
test
add
nop
sbb
mov
out
mov
es
pop
cmp
out
xor
sub
pop
jmp
add
and
shr
(bad)
repnz
sti
das
mov
and
call
cmps
and
ins
xchg
shl
fwait
dec
push
cmps
lods
add
inc
xor
out
mov
push
push
mov
cmp
mov
xor
mov
mov
int3
ds
mov
lds
or
(bad)
pop
movs
mov
addr16
arpl
mov
out
sbb
fimul
loope
leave
jg
addr16
inc
mov
xchg
fisubr
mov
int
pushf
shl
sbb
xlat
loope
imul
mov
and
mov
cwde
sub
rcl
xor
inc
sti
mov
xor
jbe
cmc
jmp
stos
or
jb
(bad)
sub
push
shl
test
ficomp
push
(bad)
jmp
pusha
aas
adc
and
pushf
jle
pop
add
arpl
ret
sub
sbb
inc
test
cmps
call
xchg
sub
mov
pop
in
movs
or
mov
fdivr
ja
cmps
lock
shl
outs
jbe
or
jecxz
out
sub
and
fstp
mov
jle
jnp
mov
inc
inc
sahf
sahf
add
xor
iret
ret
or
lods
push
imul
mov
fwait
adc
ja
adc
ror
mov
fadd
das
sti
ret
fstp
xor
je
loope
and
aad
movs
cmp
jmp
add
pop
adc
test
sub
mov
push
sub
call
inc
push
xor
loop
mov
outs
out
scas
mov
adc
je
push
pop
retf
pop
dec
add
pusha
adc
push
call
mov
in
shl
rcl
retf
scas
sbb
dec
movs
jg
outs
add
inc
sbb
stos
test
popa
jns
mov
or
(bad)
xchg
mov
jge
or
mov
(bad)
jmp
mov
dec
jmp
in
in
or
clc
dec
jmp
out
sub
shr
aad
xor
jg
add
push
sub
dec
adc
out
adc
jge
(bad)
sub
ds
dec
mov
xor
pop
cmp
call
mov
fistp
pop
repnz
aam
xor
xchg
sti
ror
skinit
mov
aaa
loope
sbb
das
or
jge
or
(bad)
mov
mov
gs
adc
mov
pop
pop
movs
push
push
mov
or
arpl
pop
call
pop
jns
and
sbb
jp
or
mov
dec
dec
pop
xchg
repnz
sub
loope
push
in
mov
pop
or
mov
movs
pop
mov
and
test
jne
add
out
push
mov
mov
push
cwde
mov
leave
or
mov
jb
dec
dec
fidivr
dec
es
std
mov
pop
mov
xchg
adc
fdiv
fiadd
das
(bad)
push
push
add
jnp
jb
loop
(bad)
jl
xchg
lods
add
cs
jl
mov
and
mov
mov
stos
push
aaa
bound
aam
cld
stos
(bad)
pop
mov
add
cmp
push
push
lds
out
in
sbb
cmp
sahf
mov
ss
push
leave
test
and
adc
jl
(bad)
rol
inc
cmp
out
stos
sbb
jle
les
int
sbb
ins
out
push
inc
div
jmp
ds
call
xor
pop
mov
call
jmp
dec
dec
dec
mov
test
mov
push
mov
jl
cld
cmps
jns
fadd
pop
popa
jl
enter
add
dec
fist
sub
mov
stos
xor
arpl
call
jmp
fisub
std
cmp
inc
push
mov
pop
and
cmc
and
or
xchg
aam
fwait
ins
dec
aas
fstp
dec
outs
xlat
ret
mov
and
adc
aas
jno
pop
into
data16
pop
std
cs
mov
std
test
dec
leave
aaa
sub
pop
fdivr
and
xor
lods
pop
(bad)
xor
mov
movs
or
xor
popa
bound
fcomp
jl
ds
(bad)
jo
push
imul
lods
dec
mov
add
inc
(bad)
xchg
sub
lods
xchg
xchg
stc
and
ds
cmp
adc
mov
push
cli
mov
jmp
adc
push
or
jne
(bad)
jbe
retf
push
and
dec
sub
jmp
(bad)
mov
ins
stc
pop
xor
xchg
les
loop
cs
repnz
lods
mov
inc
inc
dec
cld
out
leave
(bad)
in
sbb
test
ret
pop
movs
push
rcl
pop
mov
mov
(bad)
jl
or
test
shr
cmc
in
inc
and
outs
push
test
pop
mov
data16
sti
xchg
pop
adc
and
push
ror
bound
jg
adc
mov
out
test
sbb
cli
les
push
mov
ss
lock
xor
cmps
or
push
pop
push
shl
inc
xor
inc
xor
mov
cmps
xchg
and
ror
pusha
push
or
xchg
loop
cmp
push
pop
push
ss
paddusw
neg
in
inc
test
fstp
mov
push
mov
sar
ror
xchg
jg
(bad)
in
sti
in
dec
pop
jge
cs
xchg
sbb
push
outs
xchg
pop
push
cmc
lods
mov
scas
dec
inc
jp
lds
(bad)
sbb
sub
pop
popf
jnp
ret
xor
aam
scas
jns
mov
mov
push
(bad)
out
in
add
xchg
and
add
push
xor
inc
xor
call
mov
cld
(bad)
cmps
fcmovu
in
ss
or
imul
cmc
mov
xchg
in
mov
jns
jmp
adc
xchg
aam
adc
pushf
mov
sub
xor
lahf
sbb
push
retf
xchg
xchg
in
ror
scas
ret
and
gs
sbb
sbb
and
jmp
cli
mov
mov
rol
pop
or
nop
pop
in
(bad)
jmp
aad
icebp
retf
inc
jl
arpl
push
repnz
je
xchg
aam
push
adc
sub
jnp
aaa
add
jp
mov
mov
or
cli
inc
jg
loopne
inc
dec
sub
and
sbb
dec
sbb
jmp
stos
dec
and
loop
fistp
enter
inc
pop
ret
mov
icebp
push
sbb
inc
push
mov
add
jnp
or
movs
call
loop
les
sahf
and
mov
xor
cmc
loope
inc
xchg
jge
jne
sbb
es
mov
mov
outs
sbb
cmp
fld
cli
fs
and
(bad)
jns
or
push
add
out
cli
and
shr
(bad)
xchg
xchg
jns
imul
gs
adc
mov
aas
cld
in
and
adc
cmc
inc
mov
dec
and
xchg
stc
mov
xor
jmp
sbb
dec
stos
push
xchg
xchg
dec
shr
pop
sub
call
shr
add
aaa
aaa
loopne
add
fwait
les
cmp
or
mov
lahf
data16
lods
lods
and
and
fucom
push
pop
(bad)
mul
call
mov
shl
sbb
shl
(bad)
fstp
mov
fnsave
dec
add
hlt
mov
test
ins
(bad)
outs
adc
int
adc
hlt
loope
jo
in
sbb
add
mov
pop
movs
jle
mov
inc
pop
xchg
xchg
mov
cs
loop
aam
sbb
daa
push
pop
mov
in
push
dec
inc
mov
mov
jge
sbb
pusha
adc
cli
loope
or
push
clc
mov
fisubr
push
push
mov
test
clc
cmp
push
xor
std
jnp
mov
and
inc
inc
out
jmp
fnstsw
in
push
loope
call
push
add
std
cmp
int
xchg
leave
sub
(bad)
(bad)
in
mul
sahf
ret
adc
inc
inc
popa
and
movs
mov
in
push
test
pop
outs
mov
sub
dec
and
scas
push
jne
(bad)
mov
add
mov
stos
fiadd
ins
outs
inc
pop
daa
push
cwde
dec
dec
and
dec
test
jae
pop
push
mov
pop
jne
sub
ret
add
mov
dec
fnstsw
cmc
sar
add
adc
test
adc
jo
(bad)
cwde
loop
push
sbb
mov
mov
inc
ficomp
mov
mov
movs
test
add
rol
daa
add
cmp
mov
pop
das
xor
sub
pop
fdivr
xor
adc
(bad)
das
push
xor
(bad)
das
mov
int
jg
repnz
pop
cmps
pop
rcl
mov
inc
leave
dec
add
add
repnz
sub
mov
les
xchg
dec
sub
lea
cmp
push
or
ja
mov
out
cmp
inc
ror
mov
retf
es
cmp
aad
lock
add
xor
sub
jle
pusha
mov
push
mov
in
leave
jge
fld
retf
fidivr
xchg
loope
adc
adc
mov
pop
jne
cwde
in
adc
clc
xor
lea
add
jbe
push
(bad)
in
cmps
test
call
(bad)
mov
pop
cmc
sub
cmc
push
add
pop
and
popf
dec
(bad)
popa
das
push
repnz
movs
sub
add
loope
adc
retf
mov
fistp
cmp
xchg
xchg
iret
inc
mov
fsubr
xor
bound
and
popf
es
push
push
mov
movs
adc
movs
pop
je
es
push
inc
or
pop
sar
sahf
xor
mov
cmp
pop
cmc
xor
cmp
cdq
xchg
mov
cmps
dec
(bad)
xchg
loopne
xor
push
pop
je
cmps
data16
cli
loopne
dec
icebp
outs
fst
repz
sub
punpckldq
or
mov
push
xchg
lock
fsubp
jnp
daa
addr16
es
into
enter
xlat
stc
(bad)
push
outs
xchg
rcl
ret
add
cli
stos
cmp
jmp
sar
sub
mov
mov
add
xor
stc
outs
ss
scas
in
add
jmp
loop
and
pop
retf
dec
inc
call
jo
jnp
or
(bad)
pop
aad
mov
sub
cmc
scas
adc
jo
sub
fwait
popf
call
sub
ret
test
mov
add
xchg
mov
and
add
je
xlat
jge
dec
fldenv
jno
adc
jb
push
in
test
call
push
addr16
xchg
out
es
(bad)
cld
(bad)
and
test
jae
jae
stos
cwde
or
aad
(bad)
cmp
sub
imul
aas
and
jmp
add
imul
add
sbb
push
jg
add
xchg
sar
daa
cmp
mov
inc
fnstcw
clc
fnstenv
xor
call
ret
scas
mov
xchg
jnp
mov
repz
pushf
movs
sub
mov
test
movs
sub
inc
mov
dec
adc
mov
cmp
stos
stos
push
mov
jno
mov
push
adc
daa
pop
inc
ss
xchg
mov
pop
dec
jmp
sub
inc
push
popa
jmp
int3
shl
shl
and
mov
push
mov
jns
fs
add
or
jmp
ror
fstp
or
js
mov
call
add
and
jno
or
movs
adc
lock
ins
stos
(bad)
jl
(bad)
clc
mov
jmp
mov
dec
push
dec
mov
inc
xor
ins
icebp
and
or
cmp
fld
mov
das
push
in
into
(bad)
aas
in
cs
rcl
mov
fcom
phsubw
pop
test
push
xchg
fisttp
lock
push
sbb
xor
in
ret
cmp
call
pop
fwait
in
jne
jle
ins
xor
xchg
pop
jp
cmp
push
shr
je
jge
ss
or
fisttp
jmp
push
outs
xchg
mov
mov
fcomp
sub
inc
xchg
int3
mov
popa
cmp
inc
pop
repz
popf
shl
in
sbb
shr
sub
xor
pop
arpl
sbb
xor
lahf
sbb
pop
mov
pop
pop
add
les
(bad)
psllw
jl
js
inc
out
push
push
sub
jne
fld
scas
cdq
cmps
adc
imul
movs
outs
jmp
imul
inc
lahf
aad
imul
ja
stos
sub
jbe
test
retf
fwait
ins
cmp
ror
mov
or
pop
movs
clc
xor
repz
nop
sub
fld
aad
cmp
cmp
mov
aam
sub
ror
lods
test
cmps
mov
ss
je
pop
fnstcw
lds
shr
cmp
sbb
int
cmp
xor
nop
in
dec
cmps
xor
sub
xor
push
adc
test
xchg
(bad)
jp
sbb
div
xor
aad
(bad)
dec
test
das
dec
or
mov
mov
fimul
xlat
test
(bad)
jo
sbb
jne
and
pmaxub
fidivr
in
ja
xchg
popa
mov
sbb
cmp
pop
mov
(bad)
jl
or
pop
fucom
ret
pop
clc
jae
dec
cli
call
jo
test
dec
out
push
jle
pusha
cdq
dec
enter
mov
daa
ret
xor
sar
ja
jmp
rcl
dec
inc
out
xor
push
aam
mov
push
jl
cmp
movs
pop
sbb
jae
fs
jbe
mov
inc
push
push
adc
stos
push
pusha
out
xor
push
daa
and
je
pop
int
ficom
pop
mov
mov
outs
aas
cmc
clc
adc
jmp
ds
enter
popa
jns
rcr
xor
cmp
xor
jp
xchg
mov
ret
xchg
jle
inc
adc
pop
icebp
dec
inc
lahf
loopne
lods
sbb
daa
push
lea
nop
and
dec
cs
and
sbb
xor
leave
mov
call
aaa
xchg
mov
jo
popf
pop
cmp
test
or
cmp
cld
and
imul
xchg
rol
fisttp
cld
cli
loop
loopne
das
pop
and
test
mov
inc
(bad)
stos
out
into
mov
loope
fisub
cmp
and
inc
xor
xchg
(bad)
arpl
mov
mov
arpl
xor
stc
enter
mov
pop
cs
clc
dec
xchg
push
aas
push
push
movs
xchg
call
xchg
(bad)
jno
push
push
mov
push
(bad)
shl
pushf
mov
push
jmp
ins
ss
mov
and
ss
xor
mov
mov
in
mov
fsub
mov
test
or
enter
repnz
add
add
and
and
jl
jnp
ret
mov
out
addr16
aad
out
xchg
in
pop
les
loope
mov
cdq
push
or
mov
mov
mov
push
add
aam
aas
rcr
and
cwde
stc
push
or
mov
pop
cld
and
pop
mov
ret
dec
in
fsub
inc
sbb
mov
jl
in
rcl
rcr
push
pop
pop
ins
jae
retf
push
in
xchg
sahf
push
add
add
adc
ins
lds
or
push
mov
shl
in
xor
mov
mov
lods
or
pop
mov
scas
in
mov
lods
push
cmps
(bad)
xor
push
(bad)
jmp
std
adc
cmp
fdiv
outs
(bad)
std
int3
outs
neg
sbb
adc
xor
cmps
sub
test
out
jmp
shl
sbb
push
pop
push
push
mov
mov
push
sbb
mov
push
in
push
inc
sbb
mov
addr16
ret
pop
pop
xchg
dec
pop
cmp
fstp
addr16
jno
push
mov
retf
mov
nop
mov
and
shr
inc
ins
adc
div
aad
rcl
adc
cmp
pop
pop
test
iret
ret
cmp
pop
fdivr
and
stc
lahf
retf
enter
dec
and
jns
add
stos
cs
mov
pusha
mov
jp
aad
ret
xor
fist
mov
dec
enter
cmp
rol
sbb
cdq
push
jl
sub
ds
add
in
jmp
and
jne
icebp
out
jo
jmp
mov
pusha
adc
xchg
cmp
inc
test
scas
sbb
lods
mov
jg
outs
sub
sub
in
adc
lods
ja
hlt
int
adc
in
pop
aad
push
fucomp
fiadd
test
cmp
retf
int
cmp
push
imul
and
fld
or
inc
mov
dec
imul
ins
or
jmp
push
cld
xor
std
sub
cli
sbb
popf
xor
pop
xchg
in
adc
mov
xor
mov
push
(bad)
sbb
movs
(bad)
loop
js
sub
sub
inc
add
push
inc
or
rcl
dec
push
sub
sbb
lods
loope
sti
inc
mov
aaa
push
fadd
lods
out
call
ret
xchg
jg
xor
out
fsubr
jb
and
push
sbb
pop
push
dec
shr
ins
pop
or
jb
(bad)
ds
add
pop
add
push
fld1
xchg
and
stc
icebp
mov
rcr
jno
lahf
stos
mov
mov
or
pop
dec
sbb
and
in
pop
imul
dec
sub
push
xchg
in
xchg
xchg
inc
cmps
xchg
div
mov
adc
popf
pop
outs
mov
(bad)
in
arpl
hlt
jo
mov
jmp
addr16
mov
xor
data16
mov
pop
lds
sbb
hlt
test
test
cmps
sub
ds
retf
jno
cmp
fmul
add
test
and
pop
(bad)
bound
sub
aas
cmp
clc
rcl
scas
jns
in
fadd
dec
sbb
movs
push
sub
jl
int
xor
sub
div
mov
sbb
xor
and
push
repnz
push
push
out
push
jg
ds
pushf
cmp
adc
lock
cmp
shl
xchg
movs
repz
jp
mov
out
dec
in
inc
mov
mov
jp
pop
jnp
mov
xchg
and
les
cmp
jmp
or
push
rcr
push
mov
adc
add
nop
mov
jl
push
dec
(bad)
in
pop
lods
cld
sar
pushf
bound
sbb
xlat
je
jle
xlat
ret
mov
add
faddp
mov
inc
push
mov
iret
adc
fld
in
push
lahf
push
jno
cmp
(bad)
out
(bad)
rol
and
aas
push
and
stos
adc
push
fbld
(bad)
ficom
sub
jae
fnstenv
std
dec
mov
or
push
push
jmp
xchg
sar
out
icebp
and
jp
and
xor
fucomp
mov
ins
js
popf
pop
mov
aas
std
jbe
inc
loopne
jmp
cwde
xchg
test
int
(bad)
in
xor
and
push
mov
sbb
das
push
ins
mov
mov
pop
int3
adc
in
mov
add
ds
jmp
sbb
adc
lea
(bad)
and
sub
gs
xchg
pop
nop
mov
pop
dec
dec
imul
leave
(bad)
push
cmp
pop
adc
fucomip
push
xchg
push
jp
into
sub
and
(bad)
imul
mov
mov
movs
pop
mov
xor
cmp
scas
pop
sbb
mov
mov
popf
ret
xchg
sub
lea
fstp
test
daa
test
nop
retf
add
(bad)
das
jno
xchg
rol
mov
lock
into
mov
ret
add
mov
lock
mov
mov
push
jle
sti
cmc
ins
scas
lods
cs
pop
push
daa
gs
call
call
push
movs
mov
dec
inc
push
cwde
jecxz
pusha
loop
inc
push
or
pop
and
gs
hlt
fsubrp
stc
out
(bad)
leave
mov
das
jl
xor
sbb
push
mov
pop
push
in
ror
int3
inc
rcl
mov
pop
pop
in
add
xlat
imul
xor
xor
outs
fnsave
xor
or
add
repz
xor
data16
fcmovu
das
xchg
mov
jle
std
(bad)
je
lahf
fisttp
in
neg
loope
sub
lahf
sbb
pushf
sar
cmp
pop
and
xchg
int3
xlat
loop
out
cmp
call
cmp
jo
ins
xchg
iret
je
sbb
loope
lods
mov
sbb
retf
shl
jno
pop
sti
mov
fsub
or
retf
adc
(bad)
(bad)
loop
shr
push
or
outs
pop
(bad)
mov
mov
(bad)
push
loopne
hlt
pop
test
scas
ins
fimul
mov
add
jns
push
not
pop
cmp
pop
or
or
ror
pop
jg
mov
push
icebp
xchg
mov
stos
mov
enter
mov
adc
mov
lds
movs
sbb
(bad)
push
adc
ret
(bad)
arpl
out
(bad)
std
or
daa
jb
aad
iret
inc
xchg
ror
neg
jae
or
sbb
xor
cmp
ds
bound
out
jmp
and
fadd
lods
das
scas
inc
cmp
jae
mov
inc
xchg
pop
aad
test
rcl
(bad)
pop
pop
cmp
xchg
imul
xchg
adc
mov
sub
mov
data16
dec
mov
add
lahf
das
(bad)
and
popa
ja
iret
sbb
test
mov
fldz
push
add
fcmovu
xor
sub
push
or
shr
pop
xchg
mov
loopne
(bad)
or
pop
push
push
sub
enter
add
and
pop
movs
stos
in
add
push
push
pop
in
sti
and
fiadd
add
aaa
nop
push
mov
xchg
mov
mov
dec
pop
inc
dec
adc
movs
push
call
and
mov
cmp
push
iret
push
or
jno
push
push
cmps
cli
in
or
fwait
dec
hlt
mov
xchg
retf
or
push
into
loopne
sub
jns
sub
mov
out
mov
add
aad
sub
sub
lahf
push
sbb
cmps
in
repz
outs
push
js
ret
jge
inc
gs
jp
clc
pop
mov
enter
pop
xchg
inc
add
call
sub
pop
sbb
sbb
je
pop
or
pop
popf
je
sbb
and
(bad)
cmps
pop
mov
rcr
daa
xchg
dec
xchg
jle
pop
adc
or
ins
cmp
mov
mov
add
loope
or
cmp
int
stc
or
stc
push
aaa
dec
je
adc
aas
pop
cli
rcl
jo
pop
imul
shl
fmul
cmp
js
repz
mov
inc
scas
mov
imul
retf
outs
or
ja
cs
cmp
sub
daa
adc
scas
mov
jno
mov
adc
popf
push
dec
je
out
xor
mov
or
scas
iret
mov
loop
div
(bad)
sar
retf
xchg
shr
scas
stos
mov
sub
add
mov
pop
xor
cmps
cdq
in
push
pop
xchg
adc
xor
push
stos
pop
mov
push
ficomp
pop
xor
pop
lods
test
outs
int3
jb
bnd
mov
loop
jae
inc
in
das
scas
int
scas
sbb
je
mov
xchg
arpl
jmp
push
push
sub
mov
adc
lahf
inc
mov
ss
ss
call
cmp
xchg
test
fs
imul
jb
fwait
popf
mov
or
push
scas
jb
(bad)
and
adc
xchg
jae
push
mov
and
(bad)
mov
jnp
jb
sbb
jl
mov
(bad)
pushf
push
xchg
(bad)
cmp
(bad)
mov
fisubr
(bad)
jg
or
sub
stos
add
fisubr
adc
bound
xchg
inc
pop
add
pop
inc
retf
sbb
outs
outs
(bad)
in
cld
and
fidiv
sahf
rol
push
push
and
out
and
daa
cmp
push
ret
repnz
ret
push
out
inc
inc
jmp
movs
sub
retf
cmps
ret
jecxz
gs
dec
or
jmp
les
xor
mov
ror
les
mov
ds
in
push
inc
test
xchg
pusha
xor
dec
in
cmp
pop
stos
test
outs
scas
pop
xor
dec
iret
inc
xadd
outs
sub
mov
mov
ins
adc
les
dec
sub
stos
out
cmps
cmps
pop
push
jmp
in
mov
cmp
cld
push
cmps
into
cdq
hlt
add
mov
dec
jbe
out
adc
arpl
in
retf
aaa
xchg
jge
jmp
push
adc
stos
sbb
jmp
daa
ins
shr
movs
pop
push
push
xor
shr
push
add
loop
ret
mov
scas
fwait
jmp
(bad)
sub
fdiv
ja
cmp
(bad)
vmovd
hlt
retf
scas
dec
mov
push
(bad)
xchg
movs
pop
call
dec
sub
jno
inc
in
aam
cmp
xor
mov
jle
and
(bad)
cmps
movs
inc
adc
lods
or
push
ins
(bad)
pop
imul
cld
jl
jmp
inc
mov
imul
jecxz
mov
push
xor
xor
mov
(bad)
cwde
icebp
dec
xor
outs
ss
movs
inc
repnz
inc
sub
je
sahf
in
cmps
mov
push
pop
f2xm1
adc
(bad)
ins
push
mov
jecxz
dec
out
je
push
out
add
xor
and
adc
cmp
call
adc
sbb
enter
jl
das
xor
push
add
lods
inc
mov
dec
inc
mov
les
xchg
sub
xchg
xchg
lock
std
and
(bad)
adc
ficom
cmc
pmaxub
or
aaa
(bad)
ds
sbb
add
cmp
in
loopne
dec
dec
jle
mov
xchg
mov
and
stos
jne
jmp
sbb
or
das
ss
(bad)
mov
leave
(bad)
ins
jne
ja
mov
aas
adc
bnd
jb
sbb
add
aas
outs
xchg
push
push
xchg
jbe
jae
sbb
and
cmp
repnz
mov
fs
cmc
and
mov
add
mov
xor
retf
pusha
cmp
push
pop
adc
(bad)
pushf
ror
xchg
pop
pop
xor
popf
rol
xlat
jae
jmp
aaa
sbb
je
stos
mov
jne
fldenv
mov
sti
add
dec
jbe
cmc
fcomip
fsubr
inc
lods
pusha
xchg
es
pop
iret
add
stc
dec
std
pop
sub
mov
xchg
loopne
adc
in
addr16
push
jge
adc
sub
mul
jae
out
lods
dec
xchg
mov
or
xchg
cmps
and
and
(bad)
xchg
in
push
ss
pop
in
test
or
je
sbb
test
add
mov
jb
adc
jle
dec
pusha
jle
test
outs
adc
xchg
sub
mov
inc
push
dec
(bad)
jle
jge
stos
mov
repz
xchg
push
sub
adc
jmp
imul
mov
sbb
loope
clc
std
stos
pop
cdq
daa
lahf
pop
and
xlat
mov
push
sub
mov
in
dec
xchg
(bad)
aam
pop
sbb
or
bound
xchg
sbb
mov
mov
sub
push
out
pop
push
mov
xor
jnp
xor
add
ret
jns
or
adc
sbb
sbb
sub
and
sub
test
xlat
inc
add
jnp
cs
sbb
push
sbb
dec
sub
xor
pop
in
repnz
loope
adc
or
es
add
lods
and
xchg
iret
or
in
movs
ins
or
je
ret
bound
retf
lods
cwde
add
movs
pop
pop
fnstcw
sub
cmp
jnp
adc
aam
mov
test
das
out
xchg
push
cwde
int
jo
inc
pushf
in
push
sub
sbb
adc
jae
ror
jmp
les
add
or
sub
sub
loopne
push
xchg
push
imul
xchg
cmp
aaa
outs
std
aas
hlt
retf
jp
jmp
retf
leave
and
mov
pop
push
mov
inc
sub
loopne
(bad)
jno
sub
or
mov
and
test
sub
cmovns
movs
movs
repz
push
pop
sub
cmp
popf
pop
cmps
scas
sbb
jmp
imul
cmp
pusha
shr
loope
stc
adc
cmp
stos
mov
sbb
pop
shl
adc
fisub
add
mov
adc
xchg
cmps
mov
es
jno
aad
xchg
cmps
rcl
stos
test
out
clc
mov
jbe
dec
out
lea
into
pop
dec
into
scas
mov
int3
sti
jae
pusha
push
xlat
jb
idiv
add
inc
xchg
fwait
mov
xor
mov
sbb
pop
add
in
push
or
in
cmp
std
jb
popa
sbb
jae
repnz
and
pusha
ficom
or
int
movs
fisttp
jnp
imul
sbb
sub
cmp
sub
movs
pop
dec
sar
test
sub
fimul
jno
mov
sbb
ins
sahf
mov
jp
out
(bad)
test
mov
sti
lea
mov
imul
inc
or
push
fs
cwde
jp
xor
mov
or
inc
dec
sub
push
loope
mov
(bad)
int
pop
jo
push
sub
xor
or
cmp
lahf
rcr
out
jp
lea
imul
rcr
(bad)
and
rcr
xchg
in
fisttp
repz
pop
shr
mov
ret
shl
push
sub
jno
pop
mov
sbb
hlt
cmps
push
inc
out
ds
cmp
dec
mov
(bad)
aaa
ss
(bad)
fld
fidiv
lds
fcomp
loopne
xchg
js
pop
dec
outs
xchg
cdq
mov
and
test
mov
cmp
(bad)
outs
lahf
pop
in
sbb
jp
cmp
fsubr
cmp
ja
inc
adc
xchg
push
push
sbb
jne
test
popa
movs
mov
mov
mov
sub
xchg
mov
xchg
push
std
push
mov
pop
fist
fst
retf
push
(bad)
sub
cdq
aad
jl
inc
fwait
outs
sbb
xchg
sbb
shr
(bad)
pop
adc
push
rcl
sbb
outs
and
xchg
mov
dec
jae
adc
addr16
sbb
push
cmp
cwde
add
pop
jno
sbb
sub
xchg
or
xchg
jae
mov
sbb
lock
out
jp
mov
mov
jp
jns
inc
rcr
dec
xchg
pop
js
xor
hlt
inc
int3
sbb
cs
retf
test
add
dec
ret
push
add
imul
xchg
sub
sahf
xchg
mov
call
call
(bad)
jbe
inc
sbb
add
pop
fs
sub
in
pop
rol
(bad)
sub
inc
fcom
xor
sahf
repnz
or
call
leave
call
xor
cdq
inc
mov
xchg
and
xor
mov
out
jmp
out
pop
js
lods
and
in
push
cwde
outs
data16
ins
mov
call
mov
or
das
mov
pop
xchg
and
dec
or
iret
in
xchg
adc
icebp
sbb
sbb
int
aaa
out
mov
adc
mov
test
or
cld
push
stos
or
mov
mov
add
xor
adc
jo
sbb
ja
(bad)
inc
and
xchg
pop
int
es
jno
nop
jae
aam
(bad)
push
sub
and
mov
and
mov
pop
fisttp
add
lods
jo
inc
sahf
icebp
mov
jns
and
iret
xchg
nop
push
adc
mov
pusha
dec
loope
xchg
ror
lsl
ret
pop
adc
es
nop
push
(bad)
dec
fwait
stc
xchg
mov
ror
addr16
mov
inc
push
retf
lods
jmp
push
in
jle
adc
rcl
cld
in
test
push
out
push
pop
arpl
add
imul
rcl
xchg
scas
jecxz
ffreep
imul
cmp
lea
dec
xor
out
jmp
imul
das
dec
sub
or
or
mul
jae
inc
call
xchg
jb
pop
and
inc
push
xor
pop
xchg
xor
stc
add
add
pop
fs
ja
loopne
fild
retf
sub
push
out
xor
shl
jbe
sbb
mov
mov
or
or
lahf
idiv
cli
js
ss
fcomp
cmp
inc
mov
and
cmp
xchg
push
out
test
xor
sbb
pop
jno
xchg
outs
xchg
outs
bnd
cmp
push
stc
fwait
xchg
pusha
cmp
lds
cld
shl
adc
push
or
inc
ret
dec
mov
xor
cmp
mov
or
lahf
(bad)
retf
mov
adc
lea
ins
inc
jns
rcr
xchg
in
fistp
xor
and
pop
repz
cwde
leave
scas
ins
and
mov
xchg
retf
xor
xchg
xchg
aas
mov
mov
cmc
cmps
repz
or
call
or
fiadd
in
inc
inc
jno
xor
pop
dec
and
mov
in
(bad)
adc
xchg
dec
sbb
clc
xchg
fmul
sub
cmps
xchg
pop
(bad)
push
test
(bad)
and
mov
jnp
int
jmp
push
add
pop
imul
jb
imul
jno
jl
adc
jae
sub
in
bound
dec
pop
sbb
sub
and
repz
pop
clc
pusha
popf
dec
or
and
jmp
data16
adc
mov
cld
add
fwait
mov
mov
rol
pop
push
sub
setb
clc
outs
adc
(bad)
mov
xor
iret
pop
ins
inc
sbb
sub
bound
cmp
outs
(bad)
rol
outs
sti
out
push
or
push
ins
mov
mov
pushf
push
inc
mov
lods
std
or
int
sbb
ret
and
(bad)
clc
lahf
aam
lods
xchg
jns
jae
adc
hlt
and
and
addr16
addr16
test
sub
gs
jne
nop
xor
mov
out
pop
mov
rcr
stc
pop
jecxz
mov
popf
aad
rol
pop
jmp
leave
cmp
pop
mov
jle
or
inc
in
pop
js
pop
mov
ins
stos
pop
xchg
xor
inc
inc
ret
cmp
les
mov
arpl
sub
push
adc
mov
rol
sub
ins
dec
aas
push
mov
inc
retf
or
xchg
xor
sahf
jns
scas
or
mov
adc
not
pop
mov
shl
pop
push
rcl
inc
fld
(bad)
mov
jnp
dec
mov
in
(bad)
jl
jae
repnz
popf
mov
aad
xor
sub
jg
xchg
add
jmp
jg
fild
pop
call
lods
xor
stos
retf
and
pop
test
sub
out
int3
push
pop
push
retf
imul
fadd
xor
sbb
pusha
popa
sub
cmps
or
fcomp
adc
adc
or
cmps
pop
mov
sbb
bound
dec
call
aaa
push
movs
mov
aad
lods
int3
adc
jno
ret
cmp
add
test
das
mov
xor
jmp
add
mov
call
loope
imul
xchg
test
mov
xchg
arpl
aad
sbb
jno
test
sub
fbstp
adc
sbb
aam
(bad)
js
mov
cmps
inc
jae
and
mov
dec
jae
ret
loop
(bad)
fcomp
push
mov
pop
sbb
sbb
jb
loopne
mov
(bad)
or
sbb
pop
sar
mov
xchg
bound
outs
push
or
stos
iret
pop
dec
jmp
cmp
les
or
inc
sbb
push
loope
scas
dec
inc
pop
add
pushf
xor
xor
add
pop
cs
(bad)
popa
adc
out
cld
test
xchg
clc
cmp
mov
mov
adc
(bad)
jl
dec
int3
stos
loope
sbb
and
out
push
xchg
ss
aad
(bad)
in
dec
ja
xchg
xchg
or
shl
inc
(bad)
mov
sbb
sbb
sub
enter
mov
int3
and
je
ins
es
sub
push
(bad)
sbb
arpl
push
pop
dec
popf
fild
cmps
mov
dec
xor
shr
dec
push
push
mov
or
cdq
rol
or
stos
lahf
cmp
and
xchg
pop
and
mov
call
cmp
push
repnz
xchg
jmp
push
mov
xchg
pop
push
leave
aaa
je
fdivr
mov
or
scas
inc
mov
sub
lods
loopne
xor
pop
jmp
cmps
in
pusha
mov
xchg
mov
xchg
and
repnz
jmp
cmc
adc
test
es
inc
int3
jne
cdq
out
jo
pop
mov
and
jnp
mov
inc
mov
adc
mov
or
ror
or
rcr
mov
xor
into
xor
xchg
ins
lahf
add
jl
test
mov
dec
bound
inc
cmp
and
jmp
aas
jg
sbb
(bad)
mov
mov
je
es
neg
test
cdq
idiv
cmp
push
push
mov
jne
js
je
shl
loop
pusha
push
ins
dec
xor
mov
cmp
push
test
fstp
daa
cs
sbb
mov
or
xor
mov
lea
aam
jb
sub
enter
dec
push
fidivr
and
nop
push
sti
jbe
(bad)
cmps
in
or
add
push
push
push
xchg
(bad)
sub
pop
cmp
lds
inc
js
pop
add
lahf
dec
movs
stos
adc
dec
mov
jl
bound
or
cmp
xor
add
push
loopne
shl
aaa
int
test
es
mov
pusha
aas
test
jnp
jmp
test
pop
cmps
std
push
dec
mov
inc
mov
shl
nop
(bad)
push
jmp
lods
jp
retf
outs
out
inc
sbb
dec
xor
clc
mov
mul
aam
pop
xlat
nop
repz
mov
mov
into
sub
cmp
iret
jbe
inc
add
adc
xchg
inc
lds
mov
out
and
mulps
and
pop
(bad)
xchg
pop
inc
ret
vmovhps
mov
test
mov
sub
fnstsw
mov
jge
and
gs
sub
add
mov
jg
fdivr
(bad)
ins
mov
lods
mov
shr
stc
imul
pusha
outs
push
adc
sbb
(bad)
dec
call
movs
xor
mov
stos
in
push
loope
pop
add
and
dec
mov
inc
shl
xor
jne
loope
pop
dec
and
fucomip
mov
or
pusha
add
and
sbb
jo
and
out
fidiv
iret
mov
push
push
add
outs
pusha
addr16
leave
cmp
js
dec
mov
xchg
sbb
xchg
cs
scas
aam
shr
ja
sbb
stc
xchg
sar
mov
jns
cli
xchg
pop
pop
push
hlt
adc
shl
bound
popf
inc
xchg
jl
jne
lahf
inc
shl
fmulp
into
jmp
lods
retf
push
jnp
not
push
mov
jbe
sbb
xor
rcl
ins
or
inc
push
dec
jg
and
aad
dec
sbb
xchg
mov
push
sbb
clc
sub
aam
shr
sub
inc
push
ret
dec
(bad)
sbb
clc
(bad)
add
mov
mov
or
(bad)
mov
mov
add
repz
xchg
xor
or
xchg
xor
and
cmp
or
mov
or
cmps
mov
ins
loope
inc
fild
test
mov
pop
pop
sub
or
mov
sbb
sub
add
push
dec
shl
call
jmp
(bad)
pop
enter
je
push
popa
repnz
jp
out
rcl
ret
add
add
icebp
(bad)
pop
(bad)
fdivp
out
mov
loop
ins
cs
cmps
fidivr
scas
inc
into
call
mov
add
jmp
adc
and
push
mov
sub
jmp
gs
lds
scas
stos
xchg
pop
js
test
test
rcr
fcmovnbe
mov
xor
(bad)
pushf
pop
xchg
daa
(bad)
adc
out
pop
jb
sub
adc
ret
mov
jbe
xlat
pop
xchg
or
sti
inc
sub
mov
xchg
hlt
pop
inc
imul
inc
jp
not
pop
push
lea
mov
jmp
pop
mov
pop
retf
outs
in
dec
into
fcom
mov
fild
sub
pop
test
retf
fistp
std
inc
jp
pop
imul
retf
cli
inc
inc
xchg
test
jmp
pop
add
sti
mov
das
xor
in
inc
outs
(bad)
xchg
sub
int
xchg
(bad)
mov
and
sti
cmp
shl
pop
push
loope
lock
hlt
and
in
addr16
aaa
mov
adc
pop
js
sbb
out
fdiv
jmp
mov
(bad)
imul
fisub
loop
push
ds
(bad)
idiv
jmp
repnz
mov
int
xchg
aam
jmp
retf
sub
mov
test
xchg
push
ja
inc
vpminub
jg
ins
add
push
lock
mov
xchg
loope
inc
xchg
jecxz
jmp
mov
aad
into
add
rol
mov
fcom
jmp
(bad)
mov
add
or
hlt
stc
popf
xchg
fist
add
inc
imul
and
shl
adc
push
push
imul
(bad)
mov
in
daa
out
mov
xchg
pushf
jl
mov
repz
and
cmp
out
or
xor
dec
sar
test
hlt
lods
arpl
es
pop
pop
in
shr
or
jmp
shr
jmp
idiv
inc
or
push
xchg
ins
fwait
imul
jle
or
and
(bad)
push
push
mov
sub
lods
fstp
ins
inc
mov
out
jnp
pop
mov
push
(bad)
popf
jle
inc
sub
aad
push
mov
das
out
cmp
movs
push
push
sub
mov
mov
(bad)
xchg
dec
and
and
cmp
scas
xchg
sbb
add
jnp
sub
lahf
popa
sub
pop
mov
dec
cmp
in
add
test
mov
and
xor
inc
(bad)
dec
or
sahf
shl
iret
outs
adc
adc
repz
or
xchg
or
jnp
push
inc
shl
or
adc
loop
or
lahf
or
inc
ins
xor
and
add
(bad)
pop
mov
lods
pushf
jbe
inc
dec
jb
nop
pop
pop
(bad)
xchg
push
sbb
fstp
mov
mov
retf
dec
mov
loope
(bad)
ins
pop
in
add
sub
into
enter
jns
test
movs
add
inc
outs
mov
inc
popa
xor
cmp
sbb
(bad)
xlat
pop
nop
fmul
out
pusha
stos
retf
jecxz
push
cli
dec
scas
or
push
mov
retf
retf
xor
pushf
repnz
mov
aam
adc
add
(bad)
xchg
inc
or
add
jo
xor
movs
lock
adc
cmp
adc
loop
fdiv
push
retf
movs
out
push
xor
jnp
test
es
jge
xor
push
push
sbb
sbb
aam
push
pushf
sub
loopne
out
mov
sub
or
lds
lods
mov
aaa
xchg
add
add
jg
xchg
mov
pop
add
cmps
aaa
dec
lea
sahf
add
rol
in
outs
stos
dec
cs
xchg
sbb
add
push
movs
rcr
or
jne
clc
xchg
cmp
jne
pusha
rcr
mov
lods
mov
or
mov
mov
push
mov
cmp
mov
inc
cli
lods
inc
push
mov
scas
inc
sbb
cmp
fst
xor
(bad)
cmps
mov
mov
(bad)
sub
mov
mov
daa
add
pop
jmp
push
loopne
stos
hlt
cld
mov
mov
test
int3
or
stos
ror
addr16
in
out
icebp
cmp
aaa
pop
pop
push
jno
shr
ret
jne
xor
cwde
addr16
cmps
aam
fwait
js
jmp
cli
sub
fdivr
jns
imul
mov
sub
rcl
cmp
repnz
sahf
push
fild
sbb
xchg
(bad)
int3
push
or
ins
xchg
mov
outs
pop
push
pop
(bad)
test
call
mov
xor
xlat
das
push
dec
jbe
gs
mov
pop
sub
and
mov
dec
cmc
adc
mov
mov
inc
mov
sbb
cmp
push
icebp
adc
ret
xor
sbb
cmp
fwait
dec
pop
pushf
push
retf
adc
loope
loop
scas
aas
and
pop
cmps
and
out
xchg
popf
push
add
sbb
fld
add
pop
stc
sahf
xor
cld
or
hlt
xor
and
push
sub
cmp
scas
bound
(bad)
xchg
fistp
xor
out
mov
push
add
xchg
into
iret
xor
dec
mov
mov
push
xlat
pop
mov
fidivr
cli
loopne
cmc
pop
cmc
les
xchg
xchg
movs
nop
push
out
dec
ja
add
and
pop
daa
bnd
punpcklwd
aad
movs
push
dec
mov
or
loope
inc
and
mov
push
ins
das
cmp
and
(bad)
pusha
movs
cmc
inc
mov
addr16
clc
test
arpl
mov
cmps
popf
nop
inc
xchg
hlt
or
(bad)
inc
dec
and
xchg
arpl
outs
rol
sub
sub
cmp
sub
mov
dec
(bad)
pop
dec
iret
pop
nop
push
jbe
mov
dec
bound
lods
cmp
push
test
lods
inc
pusha
and
pop
out
(bad)
inc
dec
xor
sahf
xchg
cli
xchg
mov
aas
jbe
inc
dec
hlt
lods
xchg
mov
jns
xchg
xor
adc
inc
inc
mov
cmp
mov
and
pop
inc
ins
in
sub
mov
std
dec
enter
pop
mov
pop
data16
das
xor
into
cdq
dec
mov
pop
retf
cmp
dec
stos
push
repnz
and
lock
xor
lahf
cwde
je
jns
mov
gs
lods
movs
sbb
imul
mov
ret
sub
aas
or
jns
aam
dec
mov
and
lea
sub
mov
or
movs
or
cmps
cmps
leave
jo
mov
sub
test
and
add
ret
push
sub
or
push
or
stos
or
lea
jle
sbb
mov
push
call
jb
adc
sahf
movs
add
jle
and
or
aam
es
mov
xchg
inc
in
iret
stc
jecxz
(bad)
mov
ins
inc
fdivr
cmp
add
mov
fsubp
sub
scas
and
pop
ins
mov
dec
cwde
add
ja
dec
jmp
fistp
sbb
cmp
push
jle
in
idiv
xor
test
jmp
lea
adc
pushf
test
xchg
in
(bad)
std
mov
ret
movs
pop
jbe
test
outs
xchg
repnz
jecxz
xchg
int3
lock
dec
cmp
xor
mov
and
call
xchg
arpl
retf
rcr
leave
sbb
outs
or
sbb
xor
addr16
dec
mov
scas
inc
mov
xchg
xchg
test
lds
lahf
xlat
cmp
jne
nop
out
cmc
mov
jae
push
aam
mov
mov
rcr
stos
lods
inc
xchg
bound
rsm
pop
dec
shr
mov
pop
test
sti
clc
mov
retf
cs
push
popf
fs
pop
sbb
mov
je
into
mov
cwde
jne
lods
mov
in
out
cs
cmp
cwde
dec
push
(bad)
retf
imul
mov
xchg
data16
cmp
out
xlat
ds
mov
sti
sar
outs
div
push
jl
sbb
rol
ret
cmps
xor
in
mov
fidivr
push
loope
pop
retf
call
xchg
data16
inc
mul
inc
retf
xor
ins
push
jae
ror
out
iret
adc
rcl
mov
xchg
and
rcr
rol
pop
lods
ret
iret
movs
xor
ins
in
mov
test
mov
arpl
push
out
mov
retf
cmps
in
mov
scas
lock
(bad)
mov
sbb
dec
push
xor
or
lea
dec
push
xor
shl
xlat
mov
xchg
adc
cli
arpl
xor
sub
pop
mov
add
xchg
jp
(bad)
pop
pop
bound
cmc
fsub
mov
jbe
fistp
addr16
xor
mov
cmp
ficom
mov
aad
jl
and
adc
inc
push
cmp
sbb
sbb
lahf
mov
sahf
pop
pop
jno
bound
adc
imul
sub
and
inc
xor
fucomp
into
inc
nop
mov
mov
and
jle
ret
jmp
jp
sub
aad
cmps
pusha
pop
retf
lahf
mov
sub
and
mov
inc
loop
lea
in
test
mov
jae
aam
push
jg
sub
loop
rol
xor
jbe
scas
dec
or
nop
jnp
adc
adc
mov
dec
bound
(bad)
xchg
lods
xor
inc
push
int
or
xchg
inc
int3
push
sub
(bad)
out
(bad)
in
not
push
stos
pop
jbe
pop
inc
and
cmps
mov
hlt
push
or
jmp
pop
ret
out
bnd
cmps
pop
repnz
jp
pop
popaw
adc
mov
sub
js
cmc
sub
sub
mov
movs
ret
(bad)
js
push
in
mov
mov
sbb
sbb
ret
loop
lock
pop
loopne
mov
movs
inc
cs
sub
outs
push
or
and
test
jmp
push
sbb
mov
push
jno
cmp
jmp
ret
push
xor
mov
aaa
mov
xor
jbe
jl
ret
cmp
xchg
repnz
les
imul
add
xor
dec
lea
shl
add
sbb
mov
xchg
jecxz
mov
inc
fsubr
mov
pop
fisttp
test
mov
mov
cmp
test
dec
or
adc
pop
xchg
aad
xchg
lods
not
inc
sbb
ja
mov
or
in
jle
sti
stos
inc
jle
retf
imul
xlat
or
dec
cmp
shl
repz
inc
inc
cmp
sub
lds
add
ja
pop
mov
in
add
mov
fisub
cld
test
js
es
pop
lahf
adc
dec
pop
push
adc
pop
hlt
jl
push
fwait
pop
idiv
lds
test
pusha
push
sub
pop
addr16
jle
rcr
inc
xchg
dec
jno
cmp
ins
stos
inc
sub
inc
gs
or
mov
test
sbb
jae
pop
imul
aas
dec
xchg
pop
movs
sub
retf
jmp
jmp
and
cmp
mov
push
ret
std
shr
mov
out
add
inc
lahf
enter
and
test
cli
imul
enter
dec
jl
out
mov
test
add
pusha
ss
test
ror
ds
cs
js
scas
mov
add
xor
sahf
out
dec
add
dec
cmp
ret
inc
dec
cwde
inc
arpl
jmp
mov
jecxz
sub
add
lods
jo
das
xchg
pop
scas
fldenv
icebp
mov
call
arpl
out
jmp
cs
sti
das
ja
mov
mov
lea
cmp
jae
mov
jne
test
lods
test
int
(bad)
jb
out
out
add
mov
dec
cmps
sbb
xor
in
fwait
dec
or
xor
jno
shl
xchg
cmp
mov
mov
xor
sub
addr16
mov
in
jnp
jb
and
sar
inc
sbb
xchg
jae
rcl
jo
jg
(bad)
stos
mov
loopne
mov
ror
dec
test
out
inc
xor
shl
jle
mov
aaa
and
pop
jno
gs
push
sbb
lock
fwait
push
int
retf
inc
mov
clc
xor
dec
jmp
pop
into
pop
arpl
push
std
push
cdq
push
add
sub
mov
push
stos
stos
push
fisubr
mov
pushf
shl
jns
aad
test
lea
(bad)
and
gs
das
lods
int
ja
icebp
cmc
stos
jbe
inc
call
and
sbb
mov
xchg
rol
lods
cmp
mov
mov
rol
jge
ss
icebp
mov
pop
and
scas
sub
aad
push
inc
out
or
(bad)
iret
fnstsw
sti
out
imul
(bad)
cld
jae
push
mov
xlat
loopne
mov
xchg
jae
sbb
test
xchg
xchg
cmp
scas
sub
mov
daa
dec
arpl
mov
movs
cmp
pop
cmp
(bad)
adc
stc
adc
xor
or
cmc
into
sbb
mov
dec
and
cwde
jb
ins
icebp
icebp
cmp
xor
sub
sbb
cmp
leave
mov
mov
in
adc
adc
dec
cmp
(bad)
ds
dec
mov
jmp
and
fst
mov
in
popf
add
xor
xchg
cwde
outs
sub
inc
ror
rcr
xchg
out
fistp
push
xchg
movs
dec
push
aad
dec
xchg
cli
pop
(bad)
cmp
movs
xchg
push
ins
data16
fwait
jno
daa
cmps
mov
pop
mov
push
stc
lods
int3
loop
cmp
pusha
bound
pop
bound
fcmovnb
mov
mov
and
pop
adc
add
fcom
movs
loope
in
add
xor
jmp
sub
mov
pop
mov
iret
mov
pop
shr
dec
mov
call
pop
aam
add
mov
ins
(bad)
repz
ins
lock
push
jne
mov
int3
shl
(bad)
mov
out
xor
jl
pop
fdivr
movs
shl
pop
xor
cwde
inc
push
jne
ret
aas
stos
cmp
gs
(bad)
aam
inc
push
clc
div
hlt
xor
sbb
popa
jmp
dec
ss
in
push
jnp
adc
loopne
push
xor
(bad)
adc
or
push
popf
push
fiadd
cmps
cdq
inc
dec
aad
(bad)
fisttp
push
jl
aad
imul
call
sbb
cmp
aaa
aam
mov
in
xor
jmp
out
adc
dec
mov
outs
dec
xchg
jle
rcr
and
addr16
in
cmp
mov
or
aas
call
xchg
dec
jo
adc
mov
jnp
mov
pop
push
push
loop
scas
pop
sub
or
pop
(bad)
movs
bound
popa
daa
aad
fwait
push
ins
arpl
dec
xchg
repnz
push
sub
push
dec
les
cmp
jb
or
int3
and
pop
push
xchg
inc
sahf
xor
push
push
std
inc
or
int
add
(bad)
icebp
sub
mov
idiv
js
shl
imul
dec
adc
dec
jbe
sahf
iret
and
stos
jne
outs
sbb
daa
or
push
xchg
or
sub
cmp
dec
pop
dec
push
retf
jge
cs
fwait
mov
push
lock
dec
sar
adc
adc
inc
xlat
mov
push
cmp
xchg
xor
fwait
jge
bnd
(bad)
dec
shr
aaa
lea
in
call
outs
fsub
and
popa
dec
pushf
mov
cmp
repnz
popf
iret
stos
test
xor
jno
inc
aas
sub
into
sub
mov
pop
imul
sbb
jle
cmps
adc
pop
mov
xor
pop
scas
and
dec
xor
out
repnz
fidiv
jne
xchg
dec
movs
pushf
xchg
enter
pop
mov
in
fld
sub
iret
xchg
sti
scas
cmp
fisubr
mov
pop
pop
(bad)
mov
es
lods
imul
fst
adc
pop
pop
push
fidivr
sub
imul
stos
jg
xchg
imul
cdq
aas
sub
(bad)
and
mov
mov
jno
aam
dec
sub
dec
data16
into
add
pop
mov
je
imul
stos
mov
add
ret
mov
(bad)
jmp
cmps
push
shr
mov
stc
jl
sub
pop
test
cs
fsubr
inc
jne
cld
repz
jnp
sub
xor
hlt
inc
popf
hlt
sub
mov
pop
push
xadd
jge
cmp
hlt
and
in
xchg
fld
(bad)
inc
repnz
xchg
cmp
(bad)
mov
mov
aaa
pop
xor
cmp
repz
dec
repnz
xor
movs
arpl
or
repnz
mov
call
icebp
movs
test
inc
mov
outs
adc
hlt
push
xchg
and
(bad)
aad
out
cmp
jae
mov
cmp
aam
ror
mov
mov
cmps
jl
pop
xchg
mov
lods
mov
rcr
and
movs
ret
dec
inc
mov
in
cmp
and
dec
push
dec
pop
in
loope
clc
mov
xchg
cld
mov
or
pop
arpl
push
pop
jecxz
pop
xor
in
nop
xchg
rcr
mov
out
xor
xor
fadd
(bad)
jge
lahf
jne
mov
(bad)
out
mov
mov
jle
test
mov
repnz
std
into
sub
imul
dec
idiv
movs
xor
enter
outs
xchg
enter
in
and
(bad)
outs
das
repz
pusha
mov
jg
xlat
and
jne
call
(bad)
adc
enter
ds
or
arpl
mov
ss
mov
addr16
aas
mov
les
and
(bad)
or
jno
or
jle
test
mov
into
sub
xor
mov
pop
call
imul
sahf
aad
xlat
popa
push
sti
cmp
inc
ins
sbb
mov
in
scas
or
adc
pop
scas
xor
sbb
popa
inc
hlt
(bad)
ins
in
pop
and
pop
(bad)
fldenv
push
ror
add
mov
sbb
mov
lahf
into
mov
and
xor
fstp
movs
outs
and
push
cld
inc
or
sbb
retf
out
sar
popa
ret
aas
pop
and
xor
add
cmps
(bad)
int3
test
add
clc
jg
(bad)
out
push
xchg
jp
sub
cmps
pop
movs
ss
dec
push
(bad)
clc
mov
mov
lods
sar
test
dec
sbb
cmc
pop
mov
daa
push
das
and
mov
nop
lahf
jb
sub
cs
sbb
cdq
call
mov
xor
or
not
xchg
stc
sub
or
xor
mov
mov
adc
jge
nop
jb
arpl
(bad)
and
(bad)
int
ret
cmp
xlat
retf
cmc
push
repnz
jecxz
and
sbb
jno
sub
sbb
fs
loopne
xor
dec
mov
jns
call
into
sub
enter
fwait
cwde
ins
pop
sbb
jg
pop
or
xor
jge
inc
jmp
pop
sub
push
fistp
pop
pop
mov
repnz
addr16
jmp
cmp
push
mov
retf
lock
and
push
imul
icebp
mov
pushf
inc
mov
dec
inc
and
add
xsha1
cmps
or
jnp
ds
add
lods
inc
fidiv
sbb
xchg
push
fldenv
sbb
sar
cld
ja
call
mov
add
xor
cmp
xchg
push
and
test
rol
leave
inc
(bad)
je
and
pushf
jp
ffreep
push
clc
mov
push
cli
fldenv
sub
out
ja
mov
jns
lock
out
mov
fisttp
jecxz
jecxz
(bad)
aaa
xor
cli
or
loope
fwait
sahf
fist
in
jae
cmp
mov
sub
mov
(bad)
mov
out
inc
pop
dec
dec
xchg
mov
push
mov
sbb
shl
addr16
das
shl
push
ds
fisubr
sbb
inc
mov
push
fsub
inc
stos
ror
out
inc
call
xchg
xchg
fwait
retf
int
bound
test
or
hlt
cmps
jle
xchg
test
or
pop
jbe
cld
addr16
sbb
in
cld
sbb
xor
push
sbb
shl
or
inc
mov
sbb
imul
js
loope
lods
test
inc
fcomp
adc
in
push
sub
ins
xlat
mov
and
das
fimul
jae
call
dec
fst
adc
repz
jnp
movs
sbb
cmps
push
pop
mov
push
inc
imul
mov
xchg
sbb
shr
pop
aam
and
jb
mov
mov
dec
mov
out
mov
(bad)
adc
pushf
sub
push
lea
fisubr
push
sub
xlat
nop
sbb
jo
stos
mov
(bad)
in
xchg
jb
dec
popf
fwait
imul
(bad)
retf
or
push
ror
dec
int
mov
xor
cwde
jmp
pop
pop
repnz
fild
xor
(bad)
out
and
mov
ja
pop
cdq
ret
push
arpl
cmc
fs
rcr
scas
push
inc
pop
jg
es
in
sub
ss
lea
pop
pop
mov
sub
cmp
lods
fst
jp
addr16
ss
es
mov
sar
pushf
xchg
cmp
sub
retf
xchg
clc
and
and
div
xchg
jno
xchg
js
adc
es
inc
sub
shr
stos
dec
mov
shr
sahf
cmp
xlat
ficomp
push
movs
and
cmps
outs
inc
sar
nop
or
xchg
enter
and
imul
mov
jno
loope
jns
push
rol
out
adc
cmp
sub
cli
out
out
jae
pop
int
pop
fwait
xor
mov
fnsave
cwde
(bad)
nop
push
mov
xor
sbb
and
cmp
add
aas
lds
fdivrp
(bad)
mov
fld
xlat
scas
daa
das
mov
jmp
mov
or
or
mov
cli
cld
xchg
jmp
mov
je
test
add
mov
pop
or
push
cmps
or
mov
jnp
xchg
das
cmp
mov
sub
xor
sbb
and
sub
mov
jp
mov
pop
and
stos
rcl
sub
sbb
in
clc
and
outs
push
in
jne
sub
dec
int3
inc
icebp
in
pop
or
sub
scas
loop
dec
fs
lahf
xchg
ss
and
jl
test
into
or
iret
test
mov
lock
xchg
faddp
xchg
mov
xchg
or
and
enter
imul
dec
mov
inc
ins
add
neg
mov
ds
mov
inc
cdq
lds
dec
cmp
jnp
arpl
je
lods
pop
adc
cmp
dec
sub
jle
outs
js
test
shl
bsr
adc
call
jmp
cmc
mov
jae
sbb
out
mov
fidiv
and
sbb
mov
clc
adc
xchg
fnstsw
lods
mov
xor
mov
shl
in
dec
cmc
cmp
pop
pminsw
mov
jbe
ins
fwait
cmp
imul
lahf
xor
sbb
add
out
sbb
lahf
lea
xor
push
mov
loope
jmp
in
mov
mov
jno
lods
cmp
xor
and
fcom
jae
lock
clc
rcl
add
lods
pop
mov
in
fisttp
int
xchg
push
pop
int3
lods
mov
xor
cld
nop
daa
xor
outs
add
xlat
call
into
test
xor
xchg
or
(bad)
push
aas
xlat
add
jmp
fnstcw
scas
das
repz
cmp
sub
fisub
(bad)
in
jge
loopne
bound
xchg
jbe
push
adc
sub
cdq
dec
ds
sbb
js
xchg
add
loopne
cmp
hlt
push
mov
adc
sub
cmp
push
add
pop
adc
out
in
aad
nop
mov
pop
fwait
outs
jo
dec
add
dec
dec
bsf
fst
repnz
fs
neg
adc
lods
clc
data16
pop
mov
sbb
adc
test
mov
ins
inc
dec
loop
mov
xor
jmp
inc
hlt
imul
cmp
ins
sahf
lahf
leave
inc
out
push
lfs
popa
int
repz
cmps
out
fdivr
dec
in
shl
pop
rol
mov
stos
dec
and
les
es
jmp
(bad)
adc
les
into
pushf
adc
cmovl
jge
sub
test
loopne
into
or
fnsave
inc
jecxz
push
pop
outs
pop
xchg
mov
xor
je
cmp
jns
stos
sub
jle
(bad)
pop
clc
push
ja
lea
(bad)
fisub
shl
xchg
and
scas
mov
lods
ret
and
jo
inc
jp
iret
dec
ins
sbb
and
xlat
lds
out
imul
into
aas
mov
jns
mov
fadd
pushf
jecxz
adc
xchg
out
xchg
inc
xor
xlat
clc
das
daa
cmps
mov
or
es
and
data16
cmps
out
pop
xor
retf
shl
xor
jbe
xchg
fisttp
sar
push
mov
call
call
neg
dec
lahf
std
movs
jg
pushf
pop
popf
and
lods
cmp
pop
and
mov
lock
push
sub
nop
pop
cmps
cwde
jmp
leave
add
push
out
mov
jp
cmp
inc
popf
sbb
jle
dec
cmp
scas
(bad)
sbb
or
lods
mov
aas
nop
leave
mov
es
dec
cld
outs
cld
pop
mov
push
push
lods
call
in
or
jno
ja
xor
mov
lock
ret
gs
hlt
push
lea
inc
cs
leave
or
mov
sub
jnp
in
add
inc
jno
mov
mov
pop
loope
in
outs
adc
pop
dec
popf
lods
or
cmp
movs
adc
xchg
fmul
mov
jmp
jns
mov
push
jae
xchg
int
fisttp
test
or
neg
cmc
mov
xor
fild
ret
and
and
inc
mov
loop
mov
pop
scas
aam
adc
out
outs
mov
cs
xchg
sub
jae
out
sar
dec
int
mov
pop
out
lock
jno
mov
aas
mov
inc
out
scas
cmp
ret
js
leave
mov
xchg
out
cs
jg
xor
jno
add
mov
mov
pop
mov
fnstcw
push
xor
(bad)
fcom
push
mov
dec
sub
pop
in
mov
(bad)
cdq
mov
sbb
pop
push
push
xchg
int
into
not
in
(bad)
mov
fcomip
add
pop
add
or
cmps
jmp
mov
int
in
nop
mov
(bad)
lods
dec
call
ins
popa
fistp
sar
xlat
daa
xchg
and
and
aas
sub
mov
cs
mov
cmp
push
lock
std
add
lahf
jmp
or
adc
mov
dec
popf
scas
popa
fisubr
rcr
outs
pop
pop
(bad)
stc
es
mov
mov
pushf
sub
jp
call
mov
enter
inc
pop
push
out
jge
fbstp
shl
push
mov
dec
(bad)
ds
or
jns
and
push
fnstcw
iret
xchg
in
add
bound
or
and
jmp
jae
leave
lea
mov
pop
ss
pop
jmp
outs
mov
xlat
pusha
cmp
pop
nop
mov
inc
add
mov
jno
movs
test
popf
jns
pop
xlat
inc
or
pop
into
call
ins
daa
vpsubsb
loop
jnp
shr
es
and
leave
xor
mov
cs
inc
sub
lods
test
jmp
pop
push
mov
mov
mov
stos
leave
pop
add
ret
mov
sub
add
hlt
call
inc
cwde
fcmovnbe
int
lds
and
inc
aad
lahf
push
and
arpl
stos
cmp
cmp
mov
adc
mov
aad
xchg
popa
dec
or
sbb
call
into
jp
in
in
and
mov
outs
ret
aas
add
and
fsubr
sbb
in
jmp
mov
jae
mov
dec
or
js
add
adc
push
outs
dec
push
or
out
pop
mov
xchg
xor
jmp
adc
leave
pop
push
retf
xchg
aam
cmp
enter
stos
push
pop
pop
and
add
xor
jb
dec
push
pop
rol
pop
inc
push
jae
in
out
sub
xchg
dec
push
shr
inc
jmp
test
mov
in
dec
and
jg
shr
add
fsub
in
test
mov
pop
je
mov
sahf
cmps
in
nop
xchg
popa
push
cdq
outs
xchg
repnz
inc
aaa
pop
and
sub
or
push
leave
adc
or
xchg
push
aad
pop
addr16
pop
inc
mov
mov
mov
test
push
mov
(bad)
test
sbb
inc
cdq
nop
or
cwde
xor
push
out
push
mov
dec
and
pop
sub
push
xor
loop
and
xchg
daa
int3
sti
int3
ins
cmp
shr
inc
mov
outs
push
shl
pop
in
lock
jg
cmp
fucomp
inc
or
jb
xor
(bad)
lds
ins
inc
cmp
popa
data16
lods
or
idiv
int
fst
pop
inc
push
outs
rol
xchg
call
fidiv
jp
mov
stc
pop
mov
jecxz
adc
cmp
fild
xor
shr
adc
sbb
push
sub
inc
push
xor
push
adc
mov
xchg
xchg
aad
push
fstp
jmp
mov
cmp
sub
inc
loop
and
(bad)
fist
push
mov
repz
int
inc
mov
push
cli
add
push
fs
mov
lock
fwait
mov
in
sub
push
or
retf
jnp
shr
(bad)
imul
pop
xchg
mov
add
mov
xor
repz
inc
rcr
jbe
mov
(bad)
es
adc
imul
in
out
fsubp
mov
test
fwait
cdq
cmp
(bad)
jle
jnp
pop
lods
fwait
xchg
cli
mov
retf
imul
pop
retf
lods
mov
sbb
adc
adc
pushf
(bad)
shl
xchg
push
leave
pop
(bad)
adc
stos
adc
stos
outs
fisttp
xchg
and
xor
(bad)
xchg
adc
shl
mov
sub
inc
pop
add
jp
mov
in
mov
jmp
imul
sbb
loop
jg
jno
xchg
pop
cdq
mov
add
inc
jnp
ss
outs
mov
das
pop
(bad)
aaa
fisubr
mov
and
sub
xchg
jbe
jp
call
lods
push
in
stos
int
push
cmps
dec
cmp
inc
popf
mov
ja
shl
stos
xchg
mov
jmp
test
inc
push
iret
les
push
xor
aas
mov
dec
and
adc
pop
loop
pop
cli
push
retf
dec
fiadd
iret
fld
cwde
mov
stc
shr
fwait
ins
ret
je
out
and
fistp
cmp
or
mov
mov
pop
push
push
les
fwait
ins
add
sub
dec
mov
js
fwait
sub
(bad)
mov
into
add
retf
mov
mov
aaa
xchg
pop
jne
bound
dec
enter
scas
jle
pop
sbb
(bad)
out
ja
stos
aam
pop
lea
dec
loope
push
pop
(bad)
fnstcw
std
or
(bad)
jo
mov
pop
push
adc
(bad)
arpl
das
dec
fs
shl
xchg
add
movs
mov
push
cwde
sub
fs
in
retf
ret
fs
cs
add
pop
in
fstp
les
jecxz
inc
stos
(bad)
cld
bound
aaa
pop
test
xchg
xor
lods
sbb
fnstsw
pop
xchg
(bad)
xlat
or
mov
cmp
inc
in
sbb
jmp
jle
repz
jo
mov
mov
rcr
lods
xchg
sar
xchg
neg
mov
setl
push
ret
clc
hlt
jae
add
ins
jp
and
sbb
cwde
lahf
arpl
leave
mov
push
ins
push
(bad)
pop
inc
xchg
ret
call
cmc
adc
aam
ss
jne
pop
cmp
add
cmp
cdq
fild
and
sbb
cmp
mov
stos
mov
jg
sub
(bad)
mov
push
jbe
push
iret
push
dec
and
dec
pop
nop
scas
xchg
sbb
rol
inc
sar
xchg
mov
sahf
ret
rcr
sub
xchg
mov
adc
rcl
cmc
rcl
iret
xchg
xor
mov
dec
cmp
pop
icebp
push
and
rol
hlt
(bad)
push
jg
pushf
xor
sub
ror
call
sbb
xchg
adc
sub
adc
push
adc
cmp
xchg
pop
(bad)
cmps
xor
add
es
add
inc
mov
jbe
add
aaa
retf
cmp
aad
pop
and
xor
xchg
ins
pop
data16
sub
dec
shl
mov
and
dec
mul
fimul
in
mov
pop
stos
inc
out
scas
in
mov
sub
mov
test
sysret
loop
xchg
jle
jne
lods
pop
outs
push
adc
add
lahf
in
xor
in
sub
div
add
cmp
int
push
ss
sbb
adc
mov
dec
std
jecxz
arpl
push
in
mov
inc
jae
push
daa
repz
sbb
(bad)
xor
adc
imul
mov
(bad)
cmp
clc
jp
out
pop
mov
dec
movs
xchg
mov
movs
lods
loopne
inc
cdq
mov
addr16
or
xchg
xchg
hlt
ins
mov
fild
add
xchg
sbb
dec
cld
push
cs
in
adc
fstp
cmp
ucomiss
and
pusha
scas
cs
sti
retf
in
jns
jmp
cli
aad
inc
sub
sbb
xchg
lods
ja
mov
inc
cmp
stos
imul
and
inc
stos
cld
cmp
(bad)
jo
test
mov
push
push
dec
mov
ja
add
push
and
xchg
xchg
cmp
mov
xchg
int3
in
dec
in
or
icebp
jecxz
repnz
shr
neg
cmc
mov
(bad)
in
mov
or
cmp
enter
xchg
lock
pop
loop
or
xchg
xor
sub
pcmpgtd
and
mov
imul
xchg
(bad)
mov
(bad)
xor
test
push
xor
dec
popf
adc
aas
xchg
inc
ror
pop
push
fbld
repnz
sub
xchg
shr
call
push
jbe
ins
out
jle
sub
pop
div
movs
adc
xchg
mov
aas
push
cwde
ror
sbb
idiv
out
test
outs
cdq
sub
and
cwde
scas
pop
or
call
jecxz
or
add
neg
(bad)
or
xchg
gs
sbb
xor
ds
(bad)
and
addr16
bound
gs
ret
hlt
mov
inc
aam
cdq
stc
xchg
scas
xchg
dec
clc
mov
imul
dec
outs
icebp
icebp
mov
hlt
outs
inc
pop
sahf
and
dec
cmp
mov
jg
sbb
xor
popa
les
iret
fdiv
and
inc
or
pop
sub
retf
data16
retf
fmul
leave
dec
cs
popf
idiv
xor
test
adc
pop
pop
cmp
mov
sbb
rol
stc
pushf
ins
mov
jmp
icebp
iret
fnsave
jl
call
iret
push
xor
out
dec
ror
fdiv
cwde
int3
xor
lods
jmp
lods
aaa
add
xchg
rcl
cdq
cmps
fcom
inc
pusha
xchg
pop
xor
adc
jno
inc
xor
(bad)
sbb
sub
dec
xor
imul
jbe
pop
push
dec
xor
ins
mov
sbb
test
(bad)
dec
cld
jl
jmp
or
mov
sbb
ins
call
(bad)
(bad)
mov
mov
shr
xor
movs
xchg
mov
in
sub
fs
xchg
fs
inc
mov
call
jns
mov
ins
xchg
inc
loope
dec
daa
pop
imul
and
jl
call
nop
xchg
int3
sub
pop
je
sub
cmps
leave
cdq
popf
pushf
popf
mov
repz
sti
fiadd
mov
ja
repnz
mov
push
cmp
jg
nop
adc
into
mov
xor
loope
xchg
cld
iret
jns
lock
inc
mov
cdq
lea
mov
(bad)
cmp
cmp
push
movs
ins
out
dec
add
(bad)
dec
inc
cli
inc
and
cmp
xlat
(bad)
or
mov
cdq
sbb
cmp
cmp
ficom
mov
cld
and
mov
ins
rol
adc
xor
sbb
mov
(bad)
mov
lds
xchg
enter
xchg
push
rcl
push
push
push
xchg
inc
pop
stos
pushf
mov
shr
inc
pushf
inc
fmul
sub
pop
ins
or
push
xchg
ret
loop
cmp
mov
mov
pop
xor
jno
inc
and
add
xchg
fisubr
sub
setg
stc
loop
xchg
mov
pop
shl
and
loopne
arpl
and
nop
adc
lods
jae
add
inc
lds
inc
cmp
push
scas
xchg
int
jmp
jmp
(bad)
jp
adc
mov
mov
xchg
mov
dec
and
jmp
std
push
clc
fsincos
jb
arpl
ins
ins
sub
fisubr
ins
in
jb
dec
cmp
cld
int
jne
adc
jns
xor
cwde
packssdw
mov
mov
sub
push
add
pop
push
js
xor
aam
imul
int
hlt
fdiv
cmp
in
cli
push
dec
adc
or
pushf
push
adc
push
lods
or
fcom
bound
fist
sbb
in
rol
loopne
jns
adc
cdq
or
nop
mov
jae
fisttp
pop
int3
outs
inc
out
mov
sbb
test
dec
mov
pop
aaa
in
and
xchg
jg
adc
jmp
dec
jns
enter
mov
lods
cdq
xchg
inc
aas
aas
add
enter
fcomi
mov
retf
adc
xchg
add
jae
jp
lods
adc
in
jns
and
push
sbb
cmp
dec
popa
sbb
ficom
xlat
or
enter
lods
or
adc
dec
dec
mov
or
push
rol
adc
pop
(bad)
pop
out
cmp
dec
cmp
cmp
icebp
sub
aas
jg
mov
adc
retf
mov
loop
sbb
ja
arpl
loop
sti
inc
push
cmovs
rcr
lock
mov
mov
add
jae
cmp
jnp
push
sub
ja
push
test
pop
stos
pop
add
rcr
jl
loopne
dec
test
in
out
lea
sub
shl
ins
jmp
xor
mov
pop
push
test
pop
xchg
mov
xchg
(bad)
fs
movs
clflush
es
or
btr
movs
ins
clc
stc
jne
sbb
ja
std
std
mov
dec
push
cmp
mov
in
cld
xchg
hlt
loop
ins
sbb
mov
popa
inc
inc
ret
dec
aad
push
or
mov
in
inc
cld
xchg
pop
in
bound
shl
mov
gs
pop
jmp
sub
adc
sub
push
scas
mov
sub
mov
cmovne
outs
je
fstp
clc
push
ins
inc
ds
dec
int3
jl
or
adc
fisub
jo
cli
fcomp
dec
lods
adc
lods
imul
pop
in
and
aas
xchg
(bad)
cmc
dec
hlt
xchg
aaa
pop
in
das
jnp
lock
sub
pop
hlt
out
sub
cmp
(bad)
lods
dec
push
jo
pop
xor
mov
cmp
and
test
cmc
xor
mov
int
jmp
sbb
sahf
fistp
movs
std
sub
call
aam
ds
les
xchg
mov
inc
push
jle
dec
inc
jno
jmp
pusha
xor
cld
push
mov
gs
cwde
ins
and
call
jl
fs
cmp
fs
(bad)
(bad)
mov
pop
sti
pop
loop
int
inc
mov
cwde
jle
sub
cld
mov
mov
cdq
retf
push
icebp
dec
push
ins
add
or
(bad)
iret
pop
xchg
sub
sbb
pop
mov
sub
scas
inc
icebp
dec
outs
fst
in
or
or
aas
cmp
in
outs
jge
inc
mov
xchg
ret
cmp
nop
(bad)
sbb
mov
inc
(bad)
std
test
adc
push
push
inc
pop
loop
push
add
push
and
sub
or
inc
xor
sar
call
je
call
jne
hlt
or
pop
mov
scas
sub
or
dec
ret
out
imul
pop
nop
push
pushf
mov
xchg
push
arpl
add
push
push
out
das
adc
jo
bound
ins
outs
stos
(bad)
out
popf
(bad)
jge
ds
sub
push
mov
lock
and
and
loope
pusha
or
xchg
pop
(bad)
mov
add
sbb
push
or
dec
shl
xor
lods
and
sbb
pop
ret
cmc
nop
push
sub
pop
jbe
movs
sub
sbb
int3
xchg
call
loopne
js
lock
es
mov
and
sbb
pop
cmp
sub
xor
fdiv
mov
xlat
jg
lock
retf
push
and
sub
add
mov
ror
cmp
dec
pop
push
imul
sbb
jae
xor
sub
test
aaa
loop
int3
xchg
inc
and
xchg
push
or
add
jbe
mov
mov
cmp
add
into
repz
jno
push
xchg
jg
cwde
fidivr
(bad)
mov
aad
cli
scas
test
cmps
xor
loop
aad
jae
inc
pop
mov
adc
aad
in
out
rcl
jae
sub
scas
test
jmp
nop
mov
rcr
pop
and
add
repz
mov
xchg
push
jnp
inc
jle
or
adc
jae
outs
retf
xor
in
adc
push
std
dec
cld
call
(bad)
out
test
jb
lods
or
movs
push
xchg
xor
call
mov
pop
cmp
adc
xor
mov
push
mov
js
test
outs
add
imul
out
int
push
shr
out
add
mov
inc
test
cmp
add
pop
shl
test
mov
cmp
loope
sub
hlt
je
enter
jno
jns
lods
es
inc
mov
out
add
adc
push
setae
hlt
popa
sbb
out
imul
cld
xor
mov
cmp
xchg
nop
in
aaa
inc
mov
or
jae
and
sub
out
cmp
inc
repnz
mov
sub
mov
and
aaa
out
dec
xlat
mov
jns
movs
sub
inc
adc
cmps
pushf
js
aad
sti
cmps
fnstcw
xor
sbb
fwait
stos
adc
and
mov
mov
imul
retf
sub
fistp
sub
mov
imul
pop
inc
shr
push
aam
cmp
push
jmp
(bad)
iret
add
sbb
mov
mov
sub
xlat
sub
scas
jl
inc
jmp
adc
retf
dec
add
pop
xchg
mov
sbb
loopne
cmp
cmp
int
js
and
cmp
xchg
xchg
addr16
or
aad
mov
into
in
scas
cmp
outs
aas
push
gs
mov
cmp
fisttp
push
jp
(bad)
cmp
push
jp
mov
pop
jne
sti
fcomp
and
sub
jmp
adc
movs
inc
test
pop
push
repnz
pop
pop
ret
xor
xor
inc
dec
push
mov
mov
jae
xchg
icebp
and
mov
sbb
xor
adc
test
ret
sbb
mov
adc
test
pop
add
mov
(bad)
jle
fistp
test
push
out
dec
dec
xor
and
test
add
aaa
test
test
repnz
xchg
or
xchg
jge
pushf
pop
not
or
sub
popf
int
mov
add
pop
pop
ja
movs
sub
fs
outs
aam
fs
sub
add
sub
pop
adc
mov
(bad)
push
test
test
adc
iret
daa
adc
out
mov
sub
stos
and
icebp
fs
xor
or
iret
or
pop
add
test
xlat
jo
mov
push
sti
in
push
push
mov
xor
or
dec
xchg
in
cld
out
les
movs
cmp
mov
sbb
hlt
sub
cmp
cmp
sub
aad
loopne
inc
add
(bad)
ficomp
add
out
lea
das
inc
pop
cmp
das
enter
xor
or
dec
mov
cmp
adc
and
sahf
ret
(bad)
fdiv
fisub
cmp
test
in
cmp
dec
mov
push
xchg
out
and
jecxz
inc
or
mov
jns
shl
and
push
pop
push
mov
add
(bad)
jmp
jb
outs
pop
outs
lods
jbe
xchg
jecxz
ins
data16
xor
push
jge
cmp
ds
rol
xor
leave
or
int
pop
mov
sub
dec
and
in
jae
mov
push
mov
pop
and
sub
xchg
inc
pop
and
mov
add
sbb
sub
loopne
xor
jbe
loope
dec
adc
call
sahf
fsubr
mov
sbb
cmps
ret
jno
inc
pop
enter
repz
mov
xor
mov
popf
int3
sub
cmps
sbb
sbb
pop
das
inc
fucomp
mov
aad
popa
test
fwait
push
mov
(bad)
mov
sti
sbb
add
enter
in
mov
sbb
xchg
bound
popa
or
sahf
fadd
cmps
inc
xchg
dec
sbb
sbb
ja
je
jg
xchg
add
jmp
sub
js
iret
sbb
pop
aas
int3
test
xchg
lods
sub
cld
fld
mov
jmp
push
addr16
in
bound
gs
sbb
fild
pop
adc
arpl
mov
ins
or
xor
cmp
add
sbb
scas
(bad)
stc
xor
sbb
div
push
push
xor
xor
mov
stos
call
out
ret
data16
mov
aaa
ins
xchg
ins
push
sub
xchg
loopne
xlat
mov
cmps
xchg
jnp
ret
test
sub
loope
addr16
(bad)
jae
cmp
fsubr
jecxz
jns
stos
add
or
ret
xor
adc
ja
fs
in
sub
movs
les
cwde
(bad)
clc
xchg
mov
repz
mov
pop
mov
fidiv
call
xor
ror
fst
aad
xchg
push
and
sbb
inc
xchg
ins
inc
in
sub
xchg
int
pop
inc
lods
(bad)
cld
mov
ja
mov
in
add
inc
mov
xor
cmp
jmp
pop
jbe
jns
in
icebp
sbb
dec
imul
popa
in
test
shr
stc
out
pop
mov
mov
pop
imul
cmp
xor
aad
inc
pushf
dec
or
dec
jmp
dec
repnz
(bad)
cli
cmps
fwait
mov
leave
(bad)
pop
call
jl
popa
mov
inc
imul
dec
cmc
jmp
int3
lock
ror
ss
push
sbb
xor
sbb
stc
out
loop
cmp
js
jmp
pop
mov
pop
not
stos
hlt
(bad)
popa
sti
inc
push
dec
bound
inc
push
and
adc
fistp
cmp
inc
jg
ins
mov
clc
scas
push
mov
in
pop
shr
cmp
sbb
sbb
test
push
cmp
outs
adc
rcl
pop
xchg
add
dec
das
pop
call
cmp
out
clc
pop
sbb
clc
pop
nop
repz
stos
imul
rcr
fwait
je
jmp
call
and
fdiv
jmp
sbb
daa
into
or
test
add
dec
cld
dec
fucomi
or
pop
mov
mov
pop
call
push
int
movs
cmp
enter
call
mov
(bad)
rcr
(bad)
fldl2t
(bad)
call
mov
cmp
mov
iret
sbb
cmc
aad
push
jno
popf
ret
cld
sub
std
(bad)
jmp
adc
dec
rol
rol
and
repz
ficomp
or
stos
sub
test
popf
and
jae
sub
(bad)
jmp
std
pop
cdq
mov
inc
dec
mov
out
mov
shr
push
jb
cmp
(bad)
pop
push
cmp
fprem1
dec
jp
xlat
test
fist
xchg
mov
pop
cmp
test
push
test
add
hlt
fnstcw
pop
adc
mov
js
icebp
in
jmp
mov
fst
in
bound
xor
mov
daa
cwde
test
stos
push
cmp
push
xor
gs
push
inc
fisttp
sahf
jae
add
push
mov
out
jmp
mov
enter
repz
pop
mov
fwait
test
outs
inc
mov
add
sbb
and
outs
dec
addr16
or
cli
in
es
cdq
(bad)
pusha
inc
cs
ins
test
mov
div
ins
nop
jae
jle
shl
push
xor
nop
ret
cld
push
pop
fadd
xchg
out
es
(bad)
test
pusha
enter
sub
cs
pop
push
dec
ss
jo
popf
or
imul
daa
add
push
aad
inc
scas
lds
dec
xchg
stc
dec
pusha
arpl
out
mov
sub
sbb
xchg
sbb
inc
or
and
aam
push
mov
mov
fst
aad
mov
cwde
fcom
pop
xchg
stc
(bad)
cmp
gs
mov
adc
jl
retf
cmp
outs
aad
push
popf
neg
add
sub
loop
ss
xor
mov
add
dec
xor
imul
or
push
fild
mov
jl
and
jmp
mov
mov
in
jb
push
in
jge
mov
je
std
fnstcw
sti
push
cmp
rcr
sbb
sbb
addr16
mov
and
(bad)
dec
and
jecxz
mov
scas
(bad)
mov
mov
push
popa
jo
das
(bad)
clc
mov
and
das
inc
pop
clc
pop
shl
je
dec
pusha
scas
cdq
jle
adc
lea
movs
cmp
les
std
pop
pop
in
xor
in
test
mov
rol
pop
dec
fwait
jnp
lock
ret
das
xor
push
inc
or
sbb
lds
xlat
inc
add
xlat
jo
sbb
fadd
mov
lods
(bad)
adc
int
sub
pop
fiadd
out
pop
push
cmp
push
mov
gs
movs
paddsw
mov
out
xchg
out
leave
jg
ins
xor
xlat
sbb
cld
sti
test
mov
push
jbe
pop
mov
in
jno
xor
sti
mov
in
xchg
sti
mov
rol
add
pop
pushf
mov
xchg
jl
nop
retf
mov
fstp
ss
and
and
cld
xor
hlt
dec
cmp
push
jmp
repz
add
add
xor
movs
ds
pop
inc
mov
jnp
imul
popf
das
sbb
mov
mov
dec
jns
add
les
adc
cwde
push
push
outs
arpl
arpl
mov
push
nop
push
adc
inc
test
push
mov
xchg
popa
(bad)
stos
(bad)
pop
retf
mov
mov
(bad)
mov
xlat
icebp
push
leave
push
dec
(bad)
ret
rol
xchg
adc
out
sub
cwde
and
adc
pop
and
jnp
cmp
in
dec
int
fisttp
test
dec
scas
stos
xor
(bad)
pop
cli
pusha
mov
retf
or
jmp
xor
jp
mul
xor
add
inc
fcom
test
sbb
cwde
xchg
cmpxchg
pop
sar
clc
adc
mov
and
pop
mov
pop
dec
js
sbb
frstor
mov
xor
or
pop
jmp
in
cmp
add
ret
inc
adc
pop
jo
mov
lods
or
mov
in
jo
cmp
sub
or
push
cmp
imul
push
dec
jb
sub
sahf
mov
shr
and
adc
clc
push
jmp
and
out
inc
fnstenv
push
mov
mov
jb
push
mov
(bad)
and
mov
ins
retf
fwait
push
rol
sar
addr16
jl
mov
pushf
sub
cmp
mov
xchg
ins
xor
lds
cmp
(bad)
jnp
outs
dec
push
or
jmp
leave
jecxz
mov
inc
sti
in
lea
xchg
add
sub
daa
dec
push
arpl
mov
dec
pop
scas
ret
pushf
mov
std
sbb
fisub
ficomp
jmp
in
push
outs
in
mov
rcl
repz
rcl
popa
mov
(bad)
sbb
adc
je
sbb
iret
mov
(bad)
adc
movs
dec
test
lods
sbb
or
ins
pop
mov
imul
jbe
lods
push
out
and
out
add
mov
xchg
jnp
frstor
mov
xchg
scas
popf
mov
retf
jmp
sbb
add
sbb
mov
fcomp
inc
xchg
mov
bound
dec
push
std
rcl
addr16
xor
xchg
pusha
shl
int
dec
clc
xor
cld
fsubr
xor
mov
sub
js
ja
(bad)
inc
cmp
sbb
sar
and
leave
sahf
jg
push
loope
or
push
scas
sahf
push
push
in
imul
or
mov
(bad)
jo
pop
mov
push
cmps
jno
(bad)
(bad)
int
jns
sub
scas
or
test
xchg
ret
push
mov
ret
or
xchg
ffreep
ret
inc
push
and
fxch
fsubr
jne
addr16
jp
and
sub
dec
jae
stos
push
sti
into
cmp
sub
sub
imul
(bad)
ja
fstp
cmps
in
push
out
sub
movs
ds
aaa
cli
nop
xchg
adc
fcom
and
push
cmp
sbb
lds
ret
sbb
pusha
out
cmps
out
jmp
cs
xor
mov
pop
rcr
mov
mov
pop
dec
add
mov
sub
push
imul
mov
(bad)
call
les
aaa
push
sub
rcl
cmp
push
xchg
fstp
dec
add
push
shr
dec
test
pop
mov
jb
cmp
js
push
sbb
jbe
cld
mov
cmp
test
inc
sub
push
xor
sbb
cmp
xor
daa
xor
adc
sbb
inc
outs
call
fadd
(bad)
and
scas
push
jae
pop
(bad)
xchg
or
mov
cmps
add
jle
rcl
aad
pusha
pop
stos
sbb
mov
inc
in
movs
aam
xor
inc
jne
dec
ss
ss
adc
push
xchg
cmp
(bad)
fsubr
dec
or
addr16
lods
inc
mov
pop
pusha
adc
xchg
mov
push
cwde
(bad)
and
cmp
movs
in
cmp
adc
cdq
popf
mov
cmc
lds
pop
pop
pop
adc
mov
ja
rol
and
mov
retf
mov
aad
test
sar
aaa
cmps
popa
push
(bad)
(bad)
mov
jo
xchg
dec
imul
fnstsw
pop
out
or
cmp
sti
xchg
xlat
xchg
cmp
push
sbb
sbb
xchg
call
mov
ds
test
cmp
popa
mov
mov
add
add
mov
ret
rcl
aas
aas
mov
call
and
and
jmp
or
dec
loop
ins
pop
adc
(bad)
in
push
(bad)
sub
pop
add
jo
jp
pop
push
push
(bad)
mov
das
enter
jmp
aad
(bad)
clc
sbb
pop
sahf
dec
test
or
sub
mov
jns
mov
int3
pop
mov
mov
mov
jbe
shl
(bad)
dec
ror
ret
add
xchg
pop
mov
xlat
xor
and
lahf
dec
lea
xlat
das
inc
cld
lods
push
aam
retf
mov
dec
adc
movs
bound
data16
ds
aad
loope
mov
test
in
xchg
sub
add
popf
sti
aaa
jno
and
aaa
int3
jae
sub
fwait
mov
xor
mov
ja
js
cld
xor
jno
fs
bound
pop
jae
xlat
and
aaa
mov
sbb
pushf
mov
cwde
std
mov
loope
mov
pusha
call
add
popf
out
mov
inc
shr
fnstenv
das
sbb
cdq
xchg
mov
(bad)
arpl
aad
out
daa
mov
dec
push
test
das
jg
les
push
imul
dec
push
or
push
enter
xor
mov
dec
push
lahf
xor
shl
repz
mov
mov
pusha
xchg
jle
nop
int
(bad)
or
inc
push
repnz
dec
nop
iret
pop
dec
jo
xchg
dec
pop
adc
jnp
int3
jno
pop
push
adc
xor
fwait
jns
lea
cmps
imul
fs
mov
movs
shl
cwde
mov
push
(bad)
and
out
int3
dec
iret
test
xor
jmp
pop
jno
push
(bad)
stos
jp
fmul
arpl
jecxz
movs
and
pop
cs
push
cmp
jnp
mov
pop
test
cmp
leave
xchg
adc
mov
cmp
dec
(bad)
push
cmps
cli
add
popa
jbe
xchg
jecxz
jge
shl
cmp
mov
mov
cmps
cmp
movs
jg
pop
cmps
or
test
sbb
inc
cld
mov
add
push
push
and
jnp
mov
mov
pusha
aaa
mov
mov
mov
xchg
dec
and
sub
pop
add
cmps
jge
mov
or
dec
dec
hlt
mov
loopne
repnz
frstor
cmp
fisub
rol
call
jg
aaa
in
mov
fwait
pop
push
pop
outs
xlat
mov
in
cld
in
sar
fstp
sub
cmc
cmp
and
jb
jmp
pop
scas
sub
mov
sbb
or
leave
pop
dec
cmp
outs
pop
nop
retf
fs
xchg
pop
lock
in
fadd
ror
add
dec
pop
leave
mov
imul
pushf
call
mov
pop
jo
fidivr
cmp
pushf
jo
clc
pop
lods
outs
mov
test
mov
and
jge
sub
shl
adc
dec
call
push
sbb
pop
mov
scas
sahf
pop
fbld
adc
lods
inc
cmp
add
dec
ins
mov
pop
sti
daa
mov
pusha
imul
push
addr16
or
adc
ss
pop
iret
sub
mov
push
call
mov
sti
outs
lock
sub
enter
fwait
lock
push
jmp
mov
mov
mov
repz
fs
pop
aad
popa
retf
sbb
dec
daa
mov
jecxz
dec
ins
je
mov
inc
sub
popf
pusha
sbb
test
fistp
add
jns
sub
div
je
push
cmp
jae
push
add
push
cli
add
mov
cmp
inc
ss
xlat
or
cld
or
jp
xchg
push
lea
(bad)
cmp
fld
cmp
shl
ret
jae
jb
mov
jns
stos
mov
sub
test
in
test
mov
and
div
sbb
movs
xor
adc
add
add
or
lea
cmc
hlt
add
and
or
add
push
aad
leave
test
mov
jno
adc
xchg
daa
xchg
mov
add
push
call
pop
sub
add
adc
int3
outs
dec
cmp
cmp
std
sbb
rdtsc
and
mov
hlt
add
sahf
call
gs
(bad)
in
mov
out
and
lods
xchg
pop
mov
data16
xor
scas
xchg
inc
mov
cli
xchg
je
xchg
or
mov
enter
pop
jge
mov
xor
hlt
add
cli
cmps
fwait
imul
arpl
stos
loopne
cmp
jae
cs
mov
jno
dec
add
push
cmp
dec
rol
lods
jmp
into
loopne
ret
jno
mov
shl
nop
iret
mov
jne
stos
xor
rcl
movs
push
sbb
push
cwde
xchg
jmp
xchg
inc
pop
push
sbb
in
rcl
add
lea
lods
and
call
sbb
sti
addr16
mov
or
xlat
(bad)
mov
jo
lds
fucom
push
cmp
outs
in
rcr
pop
mov
dec
jno
jno
mov
xchg
pop
and
pop
fcmovnb
pop
sbb
ds
fwait
push
mov
retf
or
repnz
sub
mov
sbb
push
js
ins
inc
gs
mov
scas
js
scas
and
jg
or
cmp
movs
int
fwait
mov
jo
pusha
adc
inc
repnz
(bad)
stc
scas
pop
sbb
inc
add
pop
repz
lea
jno
inc
sbb
push
sbb
inc
mov
sub
adc
mov
pop
pop
pop
js
push
loop
dec
mov
mov
clc
jbe
std
outs
out
loopne
jae
xchg
push
loopne
lds
jbe
add
mov
lds
mov
lahf
adc
das
xchg
mov
mov
in
or
xchg
ins
cmp
xor
sub
jg
mov
gs
aas
adc
jne
in
loope
lea
push
imul
fucomip
mov
mov
mov
cdq
dec
nop
ror
iret
cmps
into
rcr
dec
clc
cmp
arpl
sub
rol
sbb
(bad)
fbld
inc
xchg
adc
inc
jbe
fucomi
or
cld
test
rol
mov
sub
pop
or
dec
imul
sub
movs
(bad)
repnz
xlat
mov
sbb
sbb
jne
inc
jb
pop
loopne
dec
sbb
fs
mov
sbb
rcr
add
mov
add
pop
leave
pop
dec
int3
jle
fnstenv
ins
adc
jge
sbb
push
xor
loope
push
mov
retf
xchg
xor
pop
pop
(bad)
out
and
ret
mov
cmp
repnz
iret
retf
aas
repz
retf
out
inc
int3
sahf
push
jle
fistp
jns
rol
ins
mov
or
dec
push
mov
pop
pusha
sbb
jne
bnd
popf
mov
ss
cli
mov
popf
loope
add
xchg
add
in
mov
push
mov
and
in
xlat
xchg
sub
or
(bad)
call
scas
lods
aaa
cmp
sbb
repnz
add
pop
gs
sub
or
pop
push
push
fadd
repz
mov
repnz
pop
cmps
cmp
xchg
mov
fwait
(bad)
fucomi
sbb
sub
pop
(bad)
xor
or
mov
retf
push
pop
and
inc
leave
shl
adc
inc
mov
stos
pshufw
jo
pop
outs
hlt
pop
xchg
cwde
sub
les
leave
data16
dec
(bad)
daa
push
xor
mov
stos
xchg
test
add
lods
dec
xor
xchg
pop
add
aas
mov
iret
retf
push
outs
mov
test
and
cmp
pop
and
pop
adc
inc
mov
fld
push
dec
or
cmps
leave
test
shl
lds
test
push
loope
and
outs
(bad)
mov
inc
adc
aad
push
mov
(bad)
ror
sub
arpl
outs
xchg
pop
mov
adc
aas
push
inc
(bad)
pop
fdiv
pop
and
adc
iret
cmp
inc
cs
mov
out
pushf
xor
inc
inc
sub
xchg
into
scas
inc
sysenter
add
adc
adc
pop
std
mov
jl
xchg
sahf
cdq
sub
(bad)
sar
(bad)
jmp
pop
sbb
test
shl
int3
sbb
and
fcomi
das
push
bound
push
adc
cs
fmul
push
push
mov
mov
les
mov
xor
sub
push
sbb
cwde
jbe
pop
mov
iret
sbb
neg
stos
pop
pop
sub
(bad)
mov
imul
push
add
repz
jge
pop
popf
call
add
add
neg
ins
push
xlat
mov
daa
sahf
popa
xchg
lock
repnz
dec
movs
mov
pop
ret
mov
mov
jnp
das
or
pop
adc
mov
cmp
cmps
inc
pusha
sahf
cmps
cmpxchg
ss
test
sbb
daa
arpl
pop
ficom
dec
dec
add
test
push
scas
xchg
add
push
push
movs
mov
push
push
ror
imul
mov
sub
adc
cmps
repz
aaa
shl
jmp
movs
pop
test
rcr
mov
dec
pop
mov
pop
xor
aaa
fdivp
out
test
jle
rcr
in
jg
(bad)
add
(bad)
call
arpl
pop
pushf
sub
out
inc
psubsw
sub
xor
stos
out
nop
xchg
push
or
mov
call
lods
call
add
fdivr
sbb
sbb
inc
jg
sub
fs
iret
inc
mov
jnp
dec
jbe
pop
lods
sbb
pop
push
sub
mov
enter
mov
sub
pop
cmp
xchg
pop
mov
and
mov
cmp
adc
push
inc
outs
cmp
and
adc
jbe
js
dec
in
or
push
inc
mov
and
adc
cdq
xchg
jbe
cmp
js
in
cld
mov
repnz
cmp
mov
out
lea
dec
sahf
repnz
cmc
rcr
jnp
jb
jbe
add
mov
pop
xor
mov
retf
sub
aad
pop
push
kmovw
xor
xchg
pop
push
and
cmp
mov
in
int3
popa
pop
dec
(bad)
and
aad
sbb
retf
jns
mov
repz
dec
adc
and
adc
repnz
or
aad
sbb
mov
push
in
add
imul
push
sub
rcr
iret
sbb
inc
bound
sub
pop
(bad)
fist
jbe
and
adc
dec
hlt
adc
cmp
cs
arpl
and
mov
sub
ret
adc
inc
repnz
mov
lods
stc
lods
xor
sti
mov
adc
sub
push
jnp
(bad)
arpl
int3
mov
(bad)
(bad)
aam
sub
enter
lea
out
xlat
sub
or
lods
popa
imul
in
enter
adc
pop
mov
sbb
call
nop
sub
fs
jl
pop
xor
and
sub
push
pop
les
inc
mov
sbb
mov
test
mov
add
jmp
aaa
jle
shl
dec
adc
ss
cdq
(bad)
pop
test
and
jmp
pop
dec
push
and
and
xchg
loopne
imul
nop
retf
add
aad
add
xor
(bad)
jo
rcl
or
cs
aaa
sbb
pop
mov
adc
jb
mov
pop
cmp
cmp
mov
jecxz
pop
cmp
sbb
out
jle
add
(bad)
inc
push
sbb
push
sub
mov
and
popa
sbb
mov
aam
jecxz
(bad)
les
das
movs
scas
jmp
shl
mov
das
dec
jb
adc
repz
xchg
jb
push
retf
fdivr
les
jg
pushf
adc
pop
sbb
cmp
mov
dec
cmp
or
push
cld
push
xchg
mov
mov
mov
cs
imul
fwait
lods
inc
mov
and
call
test
cmps
fs
loop
and
mov
jl
or
sbb
div
js
fcom
sbb
cmp
mov
mov
loope
mov
dec
std
stos
sbb
shl
frstor
cmc
jbe
sbb
iret
mov
test
aaa
jle
inc
sub
sbb
adc
xlat
sub
xchg
xchg
jmp
cmp
daa
xor
sub
std
xor
or
test
mov
pop
call
aaa
xchg
push
test
fcom
jle
mov
mov
xor
jmp
neg
pop
jmp
out
xchg
inc
and
xchg
and
leave
test
sbb
(bad)
cmc
arpl
(bad)
push
mov
and
cmp
jmp
repz
add
xchg
je
hlt
xor
inc
loop
(bad)
mov
pop
adc
fist
lea
push
outs
std
mov
pushaw
pop
retf
imul
add
mov
push
ds
xor
fsubr
cmp
pop
and
jp
xchg
rcr
mov
add
test
mov
loop
sbb
jp
mov
add
or
pusha
test
iret
retf
lds
sub
jg
mov
lods
ins
push
es
xor
shl
xor
jbe
mul
rcr
mov
xchg
das
xor
push
xchg
ins
add
shl
test
jmp
in
mov
lea
je
cmp
push
xor
mov
aaa
enter
(bad)
loop
out
pop
dec
mov
fisttp
lock
inc
mov
loop
out
ins
in
ror
movs
fsubrp
retf
xchg
sahf
mov
pop
ret
bound
xchg
fwait
inc
cmps
loop
or
movs
cmp
and
cmp
std
mov
dec
pushf
xchg
call
adc
jno
pop
call
in
cli
sbb
fbld
test
dec
jae
imul
stc
fstp
mov
cmp
dec
push
shl
pop
pop
lods
dec
ins
popa
or
in
iret
sub
retf
ins
js
rcr
mov
jne
xchg
inc
cmp
cmps
push
out
mov
and
ret
cmc
jns
loopne
cmp
clc
mov
inc
icebp
int3
sbb
popf
inc
push
aaa
clc
cdq
xchg
int
inc
push
or
fldenv
lods
mov
add
add
xor
shr
outs
jbe
pop
movs
cld
fnstcw
clc
aad
in
mov
jno
or
mov
bnd
mov
out
fbstp
in
les
and
std
sub
mov
imul
jmp
lahf
mov
dec
add
fdivr
jmp
popf
xor
inc
idiv
arpl
scas
ret
leave
adc
add
dec
int3
scas
sbb
push
clc
add
cmp
ds
adc
leave
dec
sub
and
mov
mov
aad
imul
pop
test
jle
xchg
push
xchg
lds
aam
fist
daa
test
dec
sub
xor
push
cmp
in
hlt
sub
jp
(bad)
ins
hlt
and
jae
adc
mov
pop
mov
and
inc
popf
adc
dec
inc
rol
loop
in
ins
sbb
jb
dec
mov
dec
loopne
adc
mov
jmp
sar
aad
pop
xor
jmp
xchg
jnp
outs
cld
xor
push
mov
dec
popa
sub
in
nop
and
dec
or
sub
aas
movs
fist
pop
xchg
xor
mov
das
mov
push
cdq
scas
add
inc
int
fld
xor
aas
mov
pop
imul
mov
test
push
mov
push
or
xchg
jo
cmps
jle
push
rcr
nop
ds
(bad)
movs
(bad)
ins
mov
leave
hlt
push
(bad)
and
cmp
dec
lods
mov
pop
fsub
into
fwait
xor
in
sbb
retf
enter
sbb
mov
(bad)
ss
pop
mov
mov
(bad)
aad
lahf
cmp
ins
jnp
je
les
mov
sti
mov
(bad)
call
xchg
add
in
pusha
sbb
(bad)
push
mov
loop
mov
inc
jmp
rcr
in
fisttp
push
add
mov
lahf
mov
imul
mov
popa
std
test
cmps
(bad)
add
ins
ins
adc
jle
scas
scas
xor
cmp
jecxz
int
cmp
mov
cmp
sub
and
pop
cmp
in
inc
mov
bound
or
add
sbb
cmp
mov
mov
shr
aas
ret
gs
mov
fsub
mov
test
sahf
xor
cdq
cmp
pop
mov
in
es
addr16
je
cmp
nop
mov
sahf
stos
mov
test
aam
dec
out
fcomp
dec
(bad)
out
js
(bad)
jae
add
mov
fiadd
inc
cmps
pop
mov
mov
jae
mov
or
ins
hlt
gs
div
mov
popf
repnz
or
inc
xor
sar
adc
or
test
xchg
dec
imul
ja
jbe
test
jg
pusha
cmp
sub
repnz
add
int3
repnz
pushf
cld
mov
xor
push
pop
and
pop
xor
retf
mov
retf
push
or
(bad)
mul
xchg
fs
ins
js
outs
aas
popa
in
popa
jnp
ror
lods
ins
pop
xor
call
pop
xor
pop
sbb
mov
test
push
cmp
cli
cmp
xor
in
scas
sbb
and
xchg
mov
or
push
out
(bad)
out
dec
lods
push
cmp
in
dec
stos
stos
in
call
(bad)
sub
int
xor
pop
sub
psubw
or
sbb
rol
mov
fstp
cmp
push
imul
shl
rol
dec
push
loope
push
xor
jne
push
push
dec
pop
fldcw
xor
pop
in
fsubr
jbe
aas
sub
mov
rcr
(bad)
mov
xor
push
aaa
cld
lock
mov
adc
shl
sahf
inc
daa
mov
int3
adc
push
movs
xor
(bad)
data16
jae
rcr
ret
pop
xchg
xchg
or
test
in
and
inc
mov
pop
movs
and
cmps
mov
adc
xchg
cmps
adc
icebp
or
dec
cmp
cmp
jge
mov
jo
popa
bound
sub
push
cdq
jmp
dec
jo
xchg
daa
scas
repz
cdq
push
jb
push
sbb
and
je
xor
adc
test
jno
push
lods
fwait
dec
mov
in
aas
out
repnz
add
(bad)
cdq
mov
mov
dec
push
and
add
js
imul
(bad)
gs
dec
movs
dec
mov
retf
sti
jle
lahf
leave
mov
pop
sbb
(bad)
xor
jbe
aam
cli
jl
imul
inc
std
inc
sbb
and
call
sbb
cmps
or
(bad)
loope
jecxz
cmp
cwde
es
icebp
fs
or
stos
push
add
pop
loopne
add
(bad)
(bad)
fcomp
fwait
cmps
mov
cld
call
jmp
ret
jnp
call
mov
aaa
mov
lods
cmps
ret
bound
test
in
jne
sub
xor
cli
jmp
inc
test
pop
popf
mov
fcmovb
sub
inc
in
cmp
pop
or
cmp
cmp
(bad)
out
imul
sub
cmp
mov
adc
jbe
xor
scas
push
lahf
or
sbb
in
(bad)
mov
cs
cmp
lahf
stc
jne
cmps
sub
sub
xchg
aaa
push
push
xor
xchg
pop
cmp
dec
push
stos
dec
cmps
lock
ss
jae
pop
inc
jl
sar
pop
xchg
out
cmps
mov
mov
mov
loopne
mov
mov
cmp
pop
int
xor
ss
adc
repz
xchg
out
test
push
xor
cmp
mov
sub
xchg
leave
sbb
outs
outs
sub
outs
fadd
das
and
inc
rol
scas
and
or
dec
outs
mov
push
unpckhps
push
jo
and
push
lock
cmp
pop
call
(bad)
out
push
loop
push
xchg
cli
(bad)
and
ror
out
stos
xchg
cs
mov
adc
pusha
sub
dec
xchg
retf
sbb
(bad)
mov
sahf
adc
stos
rol
loop
pop
push
out
mov
xchg
stos
rol
push
ret
out
loope
xor
aas
lods
pop
xchg
out
fsub
not
out
sbb
loopne
push
out
repnz
frstor
es
pop
mov
ror
das
stos
out
arpl
mov
es
jle
int3
add
xchg
repnz
stos
fisttp
jmp
pushf
adc
xchg
cmc
push
cmp
rcl
bound
ins
jle
xchg
clc
jno
pop
lea
aam
rcr
push
sar
sti
xchg
lds
nop
and
push
ins
push
dec
call
xchg
sbb
pusha
xor
jmp
and
call
jge
or
lds
push
cli
frstor
fimul
sbb
mov
pop
pusha
js
jmp
bound
mov
xchg
add
imul
test
rcl
xor
into
xlat
pop
or
in
imul
sub
data16
js
fistp
iret
inc
dec
push
mul
in
inc
scas
stos
call
addr16
aam
cmp
shr
hlt
cmps
fsub
sar
dec
mov
rcl
outs
idiv
adc
fcmovb
pop
mov
mov
push
out
xor
shl
and
dec
xchg
inc
outs
fwait
xchg
cmp
pop
mov
pusha
push
sbb
fidiv
add
jno
or
shr
mov
fsubr
adc
arpl
add
cmp
icebp
dec
loop
sub
push
dec
imul
and
sbb
xlat
jo
add
repz
dec
push
and
bound
inc
or
adc
xchg
adc
hlt
pop
xor
jb
retf
mov
sbb
mov
push
mov
lods
fild
outs
scas
ins
or
pop
dec
inc
dec
fstp
iret
std
lea
dec
mov
movs
stc
test
xchg
lahf
mov
xlat
stos
in
or
xchg
xchg
jo
dec
pop
jmp
push
and
int3
pusha
adc
jb
cmps
outs
addr16
shr
movs
jns
sbb
in
sbb
das
cli
or
pop
popf
call
mov
jl
daa
xchg
je
js
pop
add
or
cli
push
xor
(bad)
mov
jnp
shl
sbb
sbb
cmp
sbb
inc
jns
xchg
jb
aas
daa
push
or
pop
and
inc
stos
adc
mov
adc
enter
jno
nop
mov
sbb
movs
xor
js
and
popf
inc
not
dec
mov
jge
mov
adc
sar
das
pop
mov
pop
gs
jmp
retf
ror
ja
call
movs
int3
xchg
push
inc
cmp
cli
fmulp
xchg
push
lahf
(bad)
in
pop
mov
pop
inc
nop
push
fs
sub
dec
mov
sub
cdq
movs
inc
ret
push
mov
adc
or
jecxz
mov
shr
pop
lock
mov
xor
fwait
pop
xchg
shl
mov
test
pop
out
outs
jge
loope
cmp
xor
mov
fdivr
push
lahf
mov
cmps
je
imul
jnp
xchg
popf
int
sbb
pop
push
push
sbb
cs
scas
jecxz
xor
in
out
or
push
pop
push
mov
aad
shl
inc
sahf
and
cmps
clc
cmp
and
fisub
or
pop
cmc
jns
fstp
ins
cs
mov
add
pop
jmp
dec
add
test
cmp
sbb
xor
pop
sub
add
sbb
mov
pusha
mov
mov
aad
aam
adc
loope
mov
inc
adc
lds
cmps
adc
fwait
(bad)
jno
pop
or
xchg
popa
add
adc
xchg
jne
or
inc
std
enter
jmp
push
nop
sldt
push
(bad)
jge
lea
adc
(bad)
fmul
iret
(bad)
out
jns
xchg
cmc
xchg
fisub
leave
in
sbb
add
adc
mov
or
jne
add
js
xor
pop
or
cld
sub
ins
jno
fidiv
loop
sahf
pop
adc
mov
jle
(bad)
jp
call
add
push
mov
repnz
and
pop
in
(bad)
sub
add
jo
or
sub
push
mov
dec
sbb
cmc
pop
iret
xchg
mov
repnz
and
mov
jae
std
add
sbb
js
call
(bad)
fdivp
icebp
xchg
and
and
adc
int
icebp
mov
jb
xchg
sbb
xor
mov
movs
xlat
mov
adc
mov
mov
and
loopne
add
xor
push
pop
mov
je
push
icebp
pop
dec
das
lea
cmp
push
mov
movs
cmp
add
push
mov
push
inc
lods
xchg
push
mov
cmp
xor
jmp
jbe
adc
push
pop
imul
mov
mov
mov
cmp
sub
pop
xor
in
dec
cmp
call
call
sub
in
adc
cmps
dec
jmp
push
scas
cmp
cmp
int
cmp
mov
cdq
(bad)
xchg
pop
mov
std
retf
cmp
(bad)
adc
in
xor
pop
mov
pop
or
imul
aam
pop
inc
jmp
dec
(bad)
dec
xchg
xchg
(bad)
rcr
pusha
dec
inc
or
or
data16
sti
lods
xor
rcr
ss
out
inc
and
push
call
ins
ds
ja
fs
mov
inc
xor
loop
xchg
daa
in
push
dec
sti
or
lods
(bad)
jecxz
add
sub
dec
jb
pushf
mov
sub
add
xchg
cmp
cmp
fmul
imul
lea
shl
and
cdq
jbe
xor
sbb
jae
call
retf
lods
pushf
rcl
ror
jne
jecxz
ffreep
xchg
jmp
jne
rol
(bad)
out
ret
pop
retf
adc
pslld
add
gs
lock
cmovbe
and
popa
jbe
rcr
adc
dec
jmp
push
mov
xor
lock
and
fist
into
call
popa
int
sbb
pushw
cld
into
mov
add
add
lds
push
or
mov
addr16
mov
sbb
movs
mov
mov
mov
and
aam
pop
outs
aam
or
jns
cmp
sbb
bound
inc
pop
add
mov
je
mov
es
push
xchg
sub
mov
aas
pop
aad
loopne
pop
inc
sbb
xor
outs
call
jecxz
out
ja
setg
out
and
push
pop
xchg
ficomp
movs
inc
ss
ins
push
outs
lds
fwait
ins
xchg
sbb
xlat
icebp
aas
inc
mov
in
ins
popf
sbb
fisttp
cwde
mov
sbb
or
mov
add
mov
lock
loop
cmp
test
jbe
push
movs
xor
sahf
jg
popf
pop
pop
mov
loopne
dec
sbb
and
in
out
clc
push
retf
or
and
mov
add
cmp
leave
mov
fsubr
int
cmp
jbe
pop
sub
ins
scas
sar
lds
push
add
cmp
imul
add
rcr
nop
sub
cld
jmp
cmp
jmp
jmp
mov
add
pushf
pop
es
out
jb
lock
jg
mov
(bad)
cmp
add
aas
mov
jno
push
rcr
repnz
mov
and
arpl
sbb
pop
retf
pop
sahf
jp
icebp
repz
stos
sbb
and
pop
into
adc
aad
das
arpl
and
pop
ins
popa
xchg
sbb
mov
mov
sbb
test
cmp
popaw
pop
xor
add
lods
ss
repnz
jb
ret
ins
int
push
pushf
int3
or
cmps
or
mov
sub
jle
xchg
jae
ret
cld
mov
mov
and
xchg
cmp
retf
ret
mov
add
push
push
into
mov
cmps
and
mov
shl
js
xchg
inc
mov
or
in
call
sub
mov
push
test
mov
add
push
out
or
call
sbb
std
sahf
or
ja
fidiv
add
(bad)
xchg
out
punpckhdq
mov
popf
in
and
mov
dec
je
inc
inc
int
sbb
or
rol
fwait
dec
in
mov
stc
pop
sub
push
movs
adc
xchg
in
add
push
neg
jmp
std
push
push
add
jmp
fcomp
aaa
in
fnstsw
out
imul
cmp
and
dec
js
scas
xor
call
push
test
in
dec
cdq
xchg
xchg
loopne
push
xchg
popa
sub
mov
add
fcom
inc
push
jmp
dec
push
pop
test
(bad)
jae
jns
and
mov
test
cmp
jge
add
mov
sbb
cmc
jnp
lods
loop
xlat
xchg
cmps
sub
mul
cdq
cmps
sub
mov
dec
adc
pop
div
enter
adc
in
stos
sub
sbb
mov
and
leave
js
and
movs
add
imul
dec
dec
xor
jae
sbb
(bad)
fist
fist
in
(bad)
jmp
or
stos
(bad)
jmp
ror
and
pop
test
pop
jp
cli
xor
fadd
mov
rcl
add
mov
cmp
sbb
pop
xchg
test
dec
imul
scas
adc
inc
lods
dec
sbb
mov
adc
xor
push
add
dec
dec
int3
cmp
std
movs
dec
xor
hlt
imul
ins
inc
jg
inc
add
retf
cmps
in
jg
push
mov
retf
les
jl
pop
push
mov
ins
xlat
out
xchg
cwde
das
xchg
inc
mov
inc
pop
mov
inc
aaa
imul
shl
div
cli
sub
mov
and
and
fdivr
inc
ja
and
sub
cld
nop
pusha
pop
sub
data16
jp
jmp
mov
jo
pop
sbb
xchg
mov
pop
in
ss
scas
fdivr
mov
nop
pop
xchg
dec
loop
into
adc
mov
jecxz
cmp
add
mov
add
(bad)
scas
and
clc
fwait
mov
test
nop
add
xchg
jae
pop
or
stos
dec
cmp
xchg
cmp
arpl
nop
push
jl
adc
call
movs
and
call
stos
fwait
xchg
test
xchg
(bad)
pop
aas
add
xor
(bad)
dec
sti
retw
mov
js
shl
jge
mov
test
xchg
push
mov
leave
jmp
fidivr
pop
adc
or
xchg
repz
mov
xlat
lea
in
ret
shl
xor
mov
test
ja
sbb
cmp
fwait
sbb
out
in
jg
or
imul
dec
std
es
and
push
xchg
nop
int3
scas
mov
(bad)
enter
dec
xor
fadd
cmovge
sbb
ficomp
iret
fdivr
call
mov
add
int
dec
inc
sub
dec
loopne
mov
(bad)
push
pop
arpl
popf
mov
fcomp
or
stc
icebp
sub
xor
jnp
jae
sub
adc
mov
pop
mov
aas
scas
xor
call
sub
push
scas
aas
ret
imul
pushf
cmc
cmp
int3
int3
ror
in
in
mov
xchg
js
or
popf
cs
cmp
add
movs
in
xor
dec
je
pop
cwde
sub
sub
icebp
xor
sub
dec
xchg
xlat
inc
ret
ss
xlat
lock
push
mov
int
push
mov
test
das
out
sub
dec
sub
push
xchg
bound
cmp
adc
mov
xor
or
xor
xchg
jmp
xor
call
xor
popf
inc
mov
imul
scas
mov
pop
test
pop
or
stos
das
jnp
or
cmp
test
int3
enter
rdtsc
dec
mov
dec
add
jle
mov
add
lods
jmp
mov
stos
push
ficom
inc
jl
fs
mov
rcr
movs
xchg
xor
add
cli
cmps
movs
(bad)
fst
jge
add
sbb
test
ret
xor
push
add
sub
pop
fldcw
mov
inc
fistp
js
lea
outs
add
int3
pop
pop
out
stos
jle
ja
shl
cdq
mov
repz
dec
pop
dec
or
xchg
in
pusha
daa
mov
jmp
push
(bad)
xchg
inc
fcmovu
and
jnp
cmp
jg
inc
mov
pop
cmp
daa
sbb
adc
add
pop
mov
mov
cld
ins
inc
add
or
inc
mov
mov
frstor
xchg
push
xor
xchg
jns
ins
mov
jo
adc
ins
add
test
add
or
or
sub
sub
mov
stos
mov
cmc
add
outs
test
jbe
lods
mov
or
iret
mov
arpl
or
std
retfw
dec
aaa
test
lea
fs
sbb
rcl
cmp
loop
in
mov
call
stos
jmp
push
mov
dec
cmps
push
cmp
test
mov
push
sub
inc
fistp
movs
inc
repz
jmp
ret
lea
fdivr
rcl
idiv
inc
dec
push
xlat
lods
jmp
not
push
ja
mov
pop
add
sti
std
popa
and
cwde
ret
push
stos
cmp
sti
inc
retf
adc
mov
call
jo
hlt
test
cmp
push
and
ins
shl
rcl
retf
jnp
or
or
cmps
push
(bad)
jle
sub
popf
jb
adc
jb
sbb
xor
xor
cld
cmc
popf
cli
mov
adc
jmp
std
in
dec
clc
sub
in
std
test
div
leave
sbb
imul
aad
es
sub
xchg
jno
cmp
push
add
loopne
adc
iret
mov
outs
repnz
inc
mov
cmp
stc
in
test
lods
dec
inc
pop
push
(bad)
fisub
push
sar
sub
ret
xor
push
mov
stc
rcl
sub
add
jmp
cwde
inc
xchg
data16
jge
mov
je
(bad)
jne
jno
add
enter
outs
and
popa
aad
pop
mov
mov
jne
inc
shl
nop
sub
xor
int
sbb
jge
mov
add
mov
(bad)
pop
dec
pop
sbb
jns
jmp
fld
add
jge
ds
xor
xchg
loope
cmps
xchg
(bad)
out
mov
stos
add
sbb
cld
retf
in
int
xlat
cmps
mov
rol
xor
mov
xor
aam
mov
clc
inc
sahf
xchg
xor
cmp
dec
fs
repz
(bad)
in
repnz
int
adc
bound
push
je
shl
les
mov
mov
outs
bound
and
loopne
in
cmp
aaa
in
adc
(bad)
in
dec
in
or
das
jge
mov
jmp
lahf
lock
push
or
icebp
mov
aaa
xlat
loopne
push
imul
clc
jmp
cmp
adc
jp
jne
add
xchg
dec
mov
add
test
inc
pop
xor
sub
js
or
stos
cmp
lods
mov
ret
jge
test
cdq
(bad)
cmp
push
nop
xchg
and
jg
xchg
out
ds
push
pop
(bad)
jnp
push
bound
cdq
and
pop
pop
loopne
sbb
adc
push
test
xchg
sbb
add
add
push
int
dec
out
mov
in
sbb
xor
mov
pop
adc
sbb
rcr
(bad)
mul
cmp
mov
cmp
dec
popf
pop
out
add
pop
lahf
jg
test
in
adc
jno
push
mov
push
add
fisttp
mov
mov
pop
sbb
and
cmps
cli
out
push
cs
sub
mov
jbe
mov
dec
cmps
cmp
sub
daa
cmps
sub
cmps
ds
cmp
xor
mov
jle
dec
fimul
ret
das
popa
push
sub
outs
or
xor
fld
(bad)
dec
and
mov
ss
inc
cmp
add
jecxz
xchg
es
adc
jne
repz
(bad)
xor
out
pop
lock
mov
bnd
stos
xlat
in
fimul
sbb
xchg
or
loopne
adc
pop
fcmovb
gs
push
movs
xchg
cmp
mov
inc
and
inc
xchg
sbb
pop
in
push
leave
dec
shl
xchg
jg
test
and
xchg
mov
ins
daa
fwait
call
in
fwait
repnz
jle
pop
fs
adc
loopne
pop
xchg
scas
out
in
cmp
test
sbb
hlt
clc
xchg
aam
scas
lock
aad
sbb
jnp
int3
ficom
cmp
arpl
dec
push
test
inc
xor
call
bound
mov
cmp
jecxz
sbb
retf
aad
xor
clc
dec
mov
loope
test
scas
adc
dec
push
push
ret
push
mov
jecxz
mov
pop
fbstp
jno
xor
xchg
lds
scas
mov
shl
jle
call
test
in
pop
jl
std
pop
jbe
mov
push
or
xchg
dec
sub
cmp
sahf
sahf
rol
shl
dec
jne
popa
data16
adc
mov
or
mov
arpl
mov
and
cmp
or
retf
mov
mov
cmp
call
daa
adc
(bad)
retw
aas
xchg
adc
or
inc
inc
cmp
out
dec
repnz
pop
mul
xchg
sahf
sub
sub
sub
cmp
inc
jle
in
pop
mov
cli
hlt
cmp
out
inc
cmp
fbld
mov
pop
sub
clc
scas
xor
ret
test
fistp
imul
shl
xor
inc
jmp
xor
push
or
cs
lahf
test
jp
pop
not
cmps
xchg
mov
loop
cli
sub
xor
pushf
mov
cs
sbb
mov
mov
rol
mov
sbb
cmp
xor
stos
pop
or
mov
lea
mov
adc
popf
inc
inc
xlat
fsub
mov
inc
cmp
cmp
pushf
cmp
fst
scas
hlt
lds
push
add
rcr
add
add
leave
or
xlat
or
cmc
or
and
pop
jnp
adc
push
cmp
fld
pop
mov
sbb
clc
aam
out
xchg
je
mov
jl
or
dec
adc
je
ret
sub
cli
fs
xor
in
xor
dec
mov
test
jge
loope
add
xor
xlat
in
call
aam
push
jge
mov
lahf
add
je
ds
push
loop
mov
movs
xor
pop
ins
cli
jmp
pop
xor
ret
das
scas
imul
movs
out
(bad)
sbb
xor
rcl
xchg
gs
mov
and
aaa
jle
test
retf
aam
push
jnp
mov
xor
xchg
aam
retf
mov
mov
xchg
out
xor
lods
xchg
add
pop
pop
mov
out
dec
dec
xor
jp
daa
and
cwde
icebp
neg
pop
sbb
ret
push
retf
sub
nop
mov
lds
pop
sbb
mov
lea
sub
xor
xchg
fs
movs
scas
inc
or
and
ret
mov
dec
sbb
test
inc
sub
xchg
pop
jae
test
xchg
add
xchg
mov
mov
mov
retf
jp
jge
sub
bound
mov
fs
in
cmp
dec
lods
mov
jge
fs
mov
js
mov
addr16
pop
shl
xor
lods
mov
test
jmp
inc
rcl
stos
not
sub
ins
popf
ja
mov
xor
(bad)
xchg
shr
sub
inc
loop
lea
inc
mov
jae
and
mov
addr16
add
movs
mov
xchg
sub
enter
add
jl
jp
cs
mov
or
lods
es
jmp
cwde
cmps
pslld
add
(bad)
push
xchg
outs
push
(bad)
addr16
scas
in
aaa
(bad)
aas
mov
das
mov
movs
aam
mov
call
and
and
or
cmps
and
iret
or
xchg
mov
jae
loop
out
inc
and
outs
clc
adc
ss
inc
mov
and
(bad)
jmp
sbb
sub
outs
dec
or
mov
xchg
push
in
iret
mov
stos
enter
mov
sbb
data16
outs
int
ret
lods
push
push
(bad)
iret
xor
(bad)
cmp
mov
iret
mov
(bad)
dec
and
xchg
aad
in
sbb
dec
fild
push
push
mov
aam
mov
mov
xchg
aas
add
mov
out
iret
add
add
mov
lods
iret
adc
mov
xor
or
and
push
mov
idiv
lds
popa
pop
fcomp
xchg
xlat
adc
add
xlat
sbb
xor
rcr
in
sti
lods
and
push
lods
jmp
clc
sbb
clc
jne
lea
jnp
push
inc
es
imul
out
(bad)
pop
mov
jbe
repnz
cwde
ret
push
inc
sbb
xor
ret
out
dec
mov
pop
mov
or
jmp
in
push
imul
mov
int
mul
iret
sbb
into
sti
imul
mov
test
iret
pusha
add
sahf
pop
push
inc
pop
and
lods
imul
mov
rol
(bad)
cmp
test
fmul
mov
cmc
mov
mov
loope
add
gs
popf
sbb
adc
fidiv
sar
lea
cli
sbb
cmp
sub
movs
or
ficomp
sti
mov
dec
aam
aaa
out
xorps
mov
jg
xchg
test
jns
inc
mov
test
mov
loope
ins
mov
iret
xchg
(bad)
sbb
mul
xor
(bad)
mov
push
aam
add
push
inc
pop
jne
loopne
jp
xchg
or
sub
adc
mov
out
test
in
dec
popf
aas
mov
ret
data16
in
int
pop
outs
es
or
and
in
or
mov
lods
addr16
dec
iret
dec
int3
fnstsw
(bad)
pop
xor
test
fdivr
jo
inc
mov
mov
dec
mov
jbe
sar
mov
xor
in
xchg
(bad)
xchg
into
jne
adc
pop
mov
adc
add
xchg
push
add
push
cmp
mov
dec
clc
adc
pop
inc
mov
int3
xlat
movs
adc
fld
push
pop
fs
adc
cmps
call
mov
adc
popa
mov
mov
out
inc
jo
pop
mov
outs
icebp
or
and
pop
pop
mov
jecxz
jge
inc
mov
cmp
test
ja
sub
jne
jbe
add
mov
xchg
mov
scas
jle
adc
dec
pop
and
stc
mov
lds
nop
lock
lahf
hlt
test
retf
inc
and
clc
mov
je
call
mov
pop
clc
shl
xorps
inc
cld
int
imul
mov
retf
test
minps
pop
jp
or
loop
push
in
mov
lods
xchg
cdq
fstp
cmp
fdiv
(bad)
jecxz
aas
repz
jae
fistp
xchg
lods
pusha
fcom
mov
or
mov
stos
jns
sbb
movs
mov
xchg
movs
ret
push
xchg
fistp
push
xor
fistp
into
or
std
and
jg
lods
mov
fdiv
jnp
sub
cdq
mov
dec
xor
sbb
ds
sub
sbb
es
mov
lods
adc
jg
inc
dec
and
(bad)
jmp
leave
or
mov
adc
mov
cld
pop
mov
mov
pop
dec
cs
xor
mov
jae
jns
stos
fidiv
ret
mov
cmp
test
inc
mov
sbb
sbb
mov
jns
loope
jp
sbb
xor
cdq
in
dec
test
hlt
ins
mov
xor
test
cli
inc
es
(bad)
(bad)
pusha
xor
mov
fisub
mov
call
out
mov
fbld
loop
pop
adc
sbb
dec
jp
repnz
sub
or
es
add
sbb
ficomp
jns
jmp
mov
leave
sbb
out
push
push
or
(bad)
ret
out
add
xor
mov
mov
mov
pop
int3
mov
jno
enter
clc
pop
aam
mov
in
mov
sub
dec
je
cmp
mov
xchg
popa
and
in
xchg
(bad)
int
xor
(bad)
(bad)
(bad)
push
retf
aad
stc
jmp
add
in
retf
sbb
push
mov
dec
mov
(bad)
mov
out
aaa
and
into
inc
aaa
outs
in
popa
dec
outs
push
xchg
sub
pop
outs
mov
outs
test
jmp
pusha
aam
mov
in
mov
cld
test
es
aad
int3
pop
out
inc
test
add
or
adc
xchg
add
jmp
jmp
out
jb
inc
je
lock
adc
push
or
jae
dec
lock
loop
dec
jmp
repnz
loope
cmp
xor
jge
pop
push
pop
sti
and
cmp
imul
cmps
mov
jbe
test
add
lds
cmp
or
mov
fcmovu
xchg
movs
(bad)
add
outs
adc
fs
nop
lods
or
rcl
les
test
rcl
mov
adc
sbb
add
and
jge
cli
cdq
jnp
or
mov
int3
cli
dec
(bad)
push
inc
cli
mov
mov
dec
iret
shr
dec
stos
call
pushf
sbb
loopne
fisubr
sti
imul
adc
push
sub
and
cs
add
fidiv
xor
xchg
test
(bad)
jae
mov
and
or
jne
lods
stc
mov
pop
adc
mov
mov
std
into
cmp
pop
or
aas
sbb
mov
jecxz
std
lods
push
cwde
push
call
xchg
push
in
pop
ja
lea
(bad)
cmp
inc
shl
jo
xor
adc
out
xchg
push
outs
lds
arpl
mov
and
int3
mov
imul
out
mov
(bad)
cmps
inc
xchg
jl
clc
mov
or
and
(bad)
(bad)
retf
in
loop
hlt
mov
or
fcmove
in
mov
call
jp
(bad)
cld
jmp
mov
push
call
pop
pop
and
mov
or
inc
sbb
jae
dec
xor
rcl
shl
push
push
iret
jp
mov
dec
or
icebp
cmp
mov
xchg
into
push
adc
push
add
push
aas
imul
lods
inc
push
imul
push
outs
in
loope
jb
inc
shl
add
and
xchg
(bad)
stc
adc
mov
adc
or
mov
push
xchg
mov
cmp
stc
int
jne
je
sbb
out
mov
sub
aad
sti
bnd
push
std
std
stc
in
dec
pusha
inc
mov
es
je
or
inc
mov
sub
xor
stos
xchg
add
into
mov
dec
push
push
xchg
(bad)
test
sahf
shl
sbb
push
xor
jge
outs
hlt
sbb
daa
lock
xor
imul
pop
movs
rcl
popa
clc
jg
jle
pop
adc
jno
inc
adc
push
inc
mov
jg
daa
jae
(bad)
cmc
loopne
cmp
xor
sub
fist
xor
or
outs
lock
ins
fsubr
jo
mov
daa
cmps
sbb
pop
out
cmp
gs
(bad)
arpl
inc
retf
pop
sbb
stos
inc
add
cmp
pop
cmp
and
or
jae
out
jae
repnz
aad
movs
mov
jle
leave
and
cdq
pop
in
mov
arpl
stos
mov
ins
inc
jp
mov
mov
lahf
cld
adc
xchg
jns
in
sub
adc
mov
ror
pop
bound
leave
mov
mov
mov
and
outs
gs
leave
je
xchg
cld
in
pop
dec
or
mov
std
mov
mov
xchg
call
int3
(bad)
nop
dec
fptan
loopne
outs
out
inc
clc
mov
or
adc
pop
popf
cwde
mov
inc
jl
das
addr16
retf
mov
test
out
push
fisubr
clc
and
fisubr
enter
or
mov
pop
sub
add
mov
pop
addr16
mov
aam
jbe
popf
cmp
sub
xchg
retf
or
scas
loop
pop
fstp
lock
into
pushf
mov
cmp
enter
and
pop
shl
xor
adc
adc
test
dec
jnp
xchg
aad
inc
iret
retf
repz
into
sub
mov
mov
and
pop
mov
shl
mov
mov
add
sbb
dec
xor
fwait
mov
mov
jle
adc
inc
pop
inc
loope
cld
ret
test
push
and
push
test
hlt
lods
xchg
add
jge
gs
(bad)
bound
jp
and
arpl
retf
call
dec
cmps
xor
mov
sbb
add
scas
sbb
cwde
clc
neg
inc
adc
mov
jge
popa
cs
mov
dec
sub
jo
jge
sbb
mov
jo
fcom
fmul
scas
in
jns
jle
fstp
or
cmps
mov
je
rcr
into
push
test
jl
mov
pop
push
int3
fwait
mov
and
sbb
cs
add
push
inc
aaa
(bad)
in
pop
enter
cmp
in
pop
adc
push
inc
test
dec
or
push
lds
hlt
mov
inc
ret
rol
fistp
bound
mul
in
std
sub
scas
aad
xchg
gs
imul
push
ret
pushf
test
inc
pop
hlt
aaa
add
xor
push
sub
and
mov
retf
mov
cs
aaa
jne
ret
call
or
ret
leave
mov
sub
pop
loop
sbb
scas
dec
pop
fwait
enter
cmp
add
mov
mov
push
mov
in
and
in
xor
addr16
or
int
in
mov
arpl
xchg
mov
clc
daa
mov
or
push
jbe
jb
popa
pop
or
dec
pop
xchg
mov
mov
xor
(bad)
cmp
and
test
xor
lods
call
lds
sub
inc
push
cmp
mov
xchg
rcl
clc
sbb
sbb
inc
xor
sar
fidivr
xchg
ror
enter
fadd
(bad)
jle
les
ret
sbb
dec
xchg
dec
stos
leave
xchg
(bad)
jl
add
repnz
sub
inc
xor
ja
call
lock
push
adc
xor
mov
fidiv
shl
call
pop
(bad)
mov
mov
(bad)
sti
sbb
mov
jmp
movs
ret
sub
cmp
and
sbb
call
ret
jne
inc
aaa
inc
push
and
das
fdivr
(bad)
and
popf
sub
xor
bswap
fdivr
mov
call
ret
out
in
or
rol
aam
pusha
mov
or
cwde
jo
jle
jno
es
cmp
fwait
outs
arpl
ret
sti
mov
dec
xor
je
adc
adc
sbb
sub
movups
mov
ss
pop
or
mov
pop
sbb
xor
cmp
lods
push
test
dec
adc
retf
cmp
lock
mov
out
jo
leave
pop
aam
mov
adc
hlt
sbb
and
cmps
mov
xor
xor
cmc
sub
xchg
mov
(bad)
in
ror
push
inc
lea
mov
add
out
sub
push
cdq
inc
out
mov
jno
lds
mov
push
cli
loope
add
ja
outs
stc
push
retf
fldenv
sbb
aad
fs
mov
sub
rol
push
scas
mov
pop
jecxz
and
mov
mov
jmp
xor
sub
adc
inc
cli
sahf
sub
adc
imul
repnz
push
adc
aas
mov
or
mov
lds
mov
lock
push
adc
clc
(bad)
shl
dec
les
ftst
inc
enter
(bad)
std
movs
ja
mov
pop
retf
pop
mov
cmp
fisttp
sub
mov
lods
test
stc
movhps
add
inc
shl
or
or
dec
call
je
leave
mov
lock
mov
rcr
pop
leave
dec
and
in
inc
cmp
dec
add
sub
inc
ins
fsubr
dec
cmps
add
mov
repnz
les
loopne
adc
add
pop
inc
inc
or
sub
loope
mov
out
movs
inc
aad
or
bound
add
fadd
push
in
pop
test
xor
retf
cmp
add
int3
scas
cmp
push
inc
fs
idiv
mov
cmps
(bad)
imul
ss
xchg
mov
cmp
jl
jne
movs
pop
pop
and
out
fisttp
(bad)
into
icebp
jmp
jg
addr16
jle
mov
mov
push
lock
jb
cmp
adc
xlat
mov
adc
(bad)
xor
jecxz
pop
retf
sbb
cmp
jmp
inc
int
xchg
mov
ret
push
xchg
mov
loope
jmp
test
sub
outs
jo
dec
cmps
in
in
cld
jnp
push
fld
push
jo
outs
push
cld
pop
cmp
dec
stos
repnz
neg
cmp
prefetch
or
sahf
shr
or
dec
push
push
adc
(bad)
pop
jmp
sub
cmp
loopne
data16
out
call
test
jmp
xor
push
or
add
(bad)
mov
sbb
je
mov
test
push
cmp
daa
(bad)
cmps
and
shr
idiv
repz
or
sbb
pop
sti
and
mov
into
sub
xor
loopne
in
stos
ret
pop
cwde
call
and
retf
mov
int3
(bad)
in
bound
and
ins
xchg
test
and
and
pop
mov
jae
test
rcl
inc
int3
inc
push
mov
jnp
dec
outs
(bad)
push
(bad)
cli
fdiv
lahf
jg
hlt
dec
outs
push
jmp
mov
pop
into
cwde
sbb
loope
imul
mov
and
scas
push
in
dec
jae
sahf
(bad)
int
dec
bound
pop
dec
dec
mov
iret
imul
adc
inc
add
and
test
shl
test
(bad)
and
stos
sahf
or
lods
xor
pop
movs
cld
mov
add
addr16
cmp
repz
cmp
js
sbb
sbb
jbe
fwait
mov
ins
popf
jnp
or
or
adc
mov
out
or
stos
xor
jo
inc
adc
mov
fs
cdq
leave
loopne
mov
pop
ror
push
adc
sub
iret
sbb
xlat
xchg
popa
dec
pop
in
loopne
adc
aad
cli
xchg
cmps
cli
es
imul
sbb
jb
cld
xor
jae
pop
sar
stc
mov
jnp
dec
test
popa
arpl
add
mov
and
inc
xor
hlt
dec
or
adc
inc
and
hlt
dec
sbb
mov
xchg
movs
stos
push
xor
rol
stc
fs
neg
inc
stc
mov
fwait
cmps
push
sbb
xor
mov
inc
stc
dec
push
aam
leave
cmp
(bad)
shl
les
test
pop
jne
dec
rcl
xor
test
(bad)
test
ret
daa
bound
(bad)
test
pop
mov
dec
cmp
sar
mov
loope
xchg
call
xchg
mov
xchg
aam
jae
inc
test
outs
inc
jo
xor
and
nop
mov
mov
sub
repz
cdq
mov
xchg
stos
sbb
adc
fisubr
mov
adc
mov
sub
scas
jle
inc
push
push
fsub
movs
repnz
dec
je
push
test
inc
push
pop
inc
inc
and
scas
mov
pusha
inc
fldcw
push
test
jnp
and
or
add
outs
ror
das
sub
push
rcr
lock
jmp
or
jl
jmp
push
outs
push
sbb
mov
pop
nop
enter
xchg
sub
(bad)
inc
inc
dec
retf
scas
out
lahf
lahf
pop
out
dec
movs
repnz
cmp
and
cmps
mov
pop
pop
lods
scas
xor
gs
shl
movs
mov
jg
xchg
cmps
aaa
test
hlt
pop
mov
loop
in
push
(bad)
cmp
inc
sbb
sti
loopne
xchg
bound
ret
cdq
dec
in
mov
add
shl
retf
ins
sub
(bad)
xchg
adc
push
fild
inc
leave
jmp
dec
enter
dec
pop
or
lahf
xchg
(bad)
out
ficomp
fcom
fwait
scas
sbb
fisubr
in
(bad)
dec
jg
sub
pop
add
std
mov
dec
jno
cmc
lods
enter
dec
test
test
adc
out
push
out
out
pop
test
test
adc
rcl
dec
mov
jnp
hlt
xor
dec
mov
push
ret
icebp
xchg
and
imul
xchg
nop
sahf
shl
xchg
adc
cmp
jmp
stc
push
jecxz
mov
fisub
jno
mov
cmp
and
push
inc
scas
int
scas
std
popf
stos
loop
cli
(bad)
stos
int3
lods
aad
mov
cmp
sahf
lea
fild
xor
mov
cmp
push
mov
mov
cmps
stos
adc
test
movs
mov
dec
outs
movs
add
add
adc
lock
mov
outs
ret
into
int
inc
aaa
sbb
movs
xchg
jb
push
push
mov
dec
sbb
test
call
adc
and
in
gs
jno
jno
add
push
(bad)
jmp
(bad)
out
inc
je
icebp
call
cmp
jnp
jb
pop
pop
sahf
mov
movs
pop
fbld
add
or
ret
mov
jnp
mov
mov
sub
ds
push
mov
dec
jno
pop
enter
mov
cmp
push
add
test
pop
pop
scas
stos
gs
es
(bad)
mov
test
mov
shl
inc
leave
addr16
mov
xor
dec
ret
(bad)
fsub
cmp
adc
fst
push
xor
mov
dec
cmc
mov
xor
push
je
ret
test
and
push
push
mov
mov
sbb
inc
aaa
pop
jp
ja
cli
push
sbb
mov
push
cmp
imul
aad
mov
push
loop
mov
add
loop
enter
fxch
dec
outs
jg
jno
in
add
mov
cmp
sub
xor
in
lods
out
sub
test
xchg
sbb
nop
or
mov
scas
retf
jp
jl
cmps
pop
pop
add
in
mov
adc
jge
sub
ja
shl
mov
push
xor
adc
push
aaa
lods
stos
xor
fwait
and
nop
and
aaa
adc
xchg
aas
xchg
nop
adc
iret
rcr
ds
and
and
add
pop
call
jae
inc
add
xchg
sti
test
push
adc
aaa
rol
sbb
retf
jmp
mov
shl
sti
xor
rcr
rcl
adc
cmp
dec
(bad)
int
add
aad
sub
xlat
xor
fadd
and
imul
dec
mov
ret
mov
into
stos
lds
sbb
xor
into
cmp
retf
dec
fcmovnb
pop
jle
out
mov
mov
test
sub
jle
js
movs
int
enter
inc
fnstcw
cmp
pop
fmul
xor
mov
add
imul
add
mov
push
rcl
fnstenvw
inc
std
jns
pushf
mov
fcmovu
xlat
test
(bad)
test
mov
push
push
rcr
(bad)
addr16
jns
jo
aam
mov
mov
in
mov
lock
repnz
sahf
xchg
mov
imul
ret
sbb
add
mov
pop
add
shr
in
addr16
mov
je
loope
xor
jae
xchg
lds
nop
pop
bound
jmp
and
mov
nop
lea
and
sbb
xchg
mov
xchg
cld
or
in
test
push
leave
sahf
das
xchg
add
jo
push
js
mov
ret
cld
mov
mov
xchg
add
lods
mov
add
in
aaa
and
mov
mov
xor
push
pop
mov
xchg
dec
inc
mov
add
imul
inc
pop
loop
jg
addr16
dec
ss
push
adc
cmp
(bad)
jbe
lea
out
test
inc
dec
xor
cmc
mov
mul
xchg
cmp
std
mov
and
push
cli
xchg
imul
hlt
pop
lds
adc
retf
cmps
dec
adc
or
add
inc
inc
inc
mov
(bad)
retf
cmps
cli
dec
imul
pop
lds
outs
or
(bad)
not
stc
inc
pop
inc
inc
out
mov
out
fdivp
out
xlat
sbb
lahf
bound
jnp
call
add
ret
pop
shr
cmp
aaa
inc
scas
sbb
stos
stos
push
movs
dec
fnstcw
xchg
jno
add
mov
fistp
jne
add
sbb
pop
mov
aam
aas
add
dec
add
dec
gs
push
stos
out
in
sbb
mulps
fstp
call
fistp
lods
sbb
or
fsubr
pop
pop
(bad)
js
into
xchg
or
(bad)
mov
call
push
mov
push
out
jmp
call
mov
dec
push
std
in
imul
sbb
lea
daa
mov
sub
pop
adc
mov
dec
(bad)
mov
scas
cs
cwde
dec
dec
fsubr
mov
fsub
idiv
shl
xchg
clc
lds
fidivr
shr
mov
jae
cs
test
es
out
ja
test
xchg
mov
sub
fbld
cli
add
jns
mov
scas
ins
dec
xchg
fs
movs
pop
ins
mov
jb
xchg
mov
sub
in
pop
xchg
pop
aam
bound
sub
call
neg
gs
mov
arpl
cmp
data16
pusha
inc
fdiv
retf
jb
call
icebp
(bad)
stos
int3
(bad)
mov
mov
not
mul
ror
jo
sub
imul
lea
out
outs
xor
fs
xchg
cmp
mov
nop
dec
cld
push
inc
mov
nop
dec
or
int
pop
and
mov
stos
cmp
xchg
in
sbb
sub
mov
and
or
in
cmp
add
jae
jp
and
outs
dec
dec
lods
xor
mov
and
movs
retf
or
push
pop
ds
outs
retf
sub
scas
mov
pop
je
rcr
and
adc
dec
cmp
xchg
cs
scas
imul
leave
pushf
les
cmp
jmp
xchg
aas
pop
mov
sbb
sahf
adc
mov
in
lea
cmovp
or
cs
out
fiadd
jle
movs
ja
fwait
and
aam
pushf
icebp
aas
mov
mov
and
out
bound
cmp
ja
inc
nop
push
stos
cmp
aad
mov
fadd
popf
scas
call
and
mov
addr16
pop
lock
out
inc
mov
in
push
cmp
mov
in
sbb
test
xlat
iret
jns
cmps
stos
neg
sti
inc
jecxz
movs
leave
arpl
add
out
inc
and
inc
or
sar
or
(bad)
xor
push
in
push
popa
or
into
popf
test
movs
add
ins
in
mov
bound
loopne
mov
xchg
xor
sbb
rcl
sub
sbb
loopne
mov
in
std
or
ja
sbb
das
push
cmps
test
mov
sub
aas
fs
data16
xchg
call
rcr
gs
or
cdq
cs
loope
scas
mov
loopne
mov
cld
pop
sti
sbb
pop
adc
xor
ja
(bad)
xchg
inc
push
pop
and
outs
cmp
stos
mov
cmp
sti
pusha
xor
xchg
cmp
repz
into
aas
out
mov
out
pushf
cwde
and
jp
jg
loop
jmp
out
sbb
add
xor
enter
and
test
sub
cmc
cs
mov
cld
iret
mov
ja
xor
and
nop
repz
aam
mov
movs
js
shl
jb
xor
mov
xor
sbb
out
aaa
loope
out
rol
lahf
test
mov
mov
ret
pop
scas
mov
mov
or
cmp
push
jg
cvtps2pd
test
outs
out
mov
jb
shr
dec
mov
ss
adc
jno
adc
mov
xor
js
pop
es
cmp
fwait
rol
imul
pop
sub
ja
inc
push
push
fisttp
(bad)
pop
(bad)
stc
enter
stc
(bad)
nop
add
inc
add
leave
out
popa
mov
test
add
bound
and
jns
rcl
jbe
mov
pop
in
jmp
scas
scas
sbb
test
inc
shl
push
outs
and
ror
xor
shl
imul
jns
icebp
sub
or
pop
add
inc
loop
mov
push
test
loopne
out
add
in
call
sti
add
retf
fdivr
in
xchg
pop
pop
add
adc
dec
retf
xor
pop
mov
adc
cmp
(bad)
pop
mov
mov
mov
mov
add
jg
mov
fucomi
mov
inc
sub
dec
adc
(bad)
jmp
jge
xchg
mov
shl
sbb
gs
leave
popa
outs
xor
in
data16
fst
call
adc
outs
jl
imul
xor
sub
and
xchg
cmp
push
dec
pop
add
loop
fsubr
aas
add
movs
ret
xor
sti
mov
sti
fisttp
xchg
cmp
xchg
pop
loop
ss
xchg
xor
(bad)
frndint
test
dec
or
and
gs
fstp
imul
mov
pop
test
je
retf
jp
xchg
into
sub
mov
push
(bad)
sbb
std
ficom
lods
mov
push
jp
aas
xchg
and
aaa
retf
repz
sti
sbb
and
mov
bound
push
xchg
or
mov
sbb
pop
retf
sbb
ret
sbb
test
sti
loope
test
pop
dec
or
adc
outs
out
adc
outs
mov
mov
cmp
inc
pop
or
dec
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
inc
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jb
mov
sub
jne
xchg
rol
xchg
sub
add
sub
stos
sub
jb
mov
inc
jmp
sub
jae
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
das
xchg
add
