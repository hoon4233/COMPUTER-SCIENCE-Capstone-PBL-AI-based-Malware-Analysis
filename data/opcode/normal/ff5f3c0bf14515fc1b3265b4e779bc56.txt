std
idiv
(bad)
call
push
mov
add
pop
ret
int3
or
sbb
jo
add
fist
jb
mov
aas
jne
loopne
and
lock
dec
mov
add
adc
test
push
jo
idiv
leave
nop
mov
push
imul
(bad)
inc
push
mov
xor
push
mov
mov
shr
rep
adc
mov
loop
xor
lea
rep
pop
pop
ret
pop
mov
mov
jg
clc
cmp
je
push
call
sub
add
inc
and
add
or
push
fisubr
les
mov
pop
ret
jg
sub
pop
fcmovnu
push
pop
jnp
sub
add
add
(bad)
cli
add
pop
shl
and
gs
shl
mov
pop
pusha
cmp
or
loopne
ror
or
cmp
jne
or
or
fs
jle
ja
mul
mov
and
mov
push
mov
mov
mov
jne
cld
(bad)
and
mov
push
cmp
outs
mov
js
(bad)
jl
cmp
jb
push
xor
test
xor
inc
add
test
add
aam
nop
push
mov
xchg
sbb
(bad)
sub
push
lea
push
aam
xchg
in
ud0
js
xor
push
add
cmp
jb
ret
jo
sti
pop
pop
ret
or
cmp
or
push
mov
adc
push
test
or
dec
movs
fnstsw
push
daa
mov
lock
xor
test
adc
pop
pop
call
dec
iret
lock
sbb
push
push
mov
cmps
mov
or
sti
call
out
xchg
or
ins
lods
ins
mov
xor
cmp
sub
cmc
je
ja
xchg
cdq
push
push
push
sub
fwait
in
and
pop
lds
mov
inc
sbb
mov
in
mov
in
pop
add
cmp
ja
(bad)
and
or
lock
jb
cli
jg
cmp
jne
cmp
jne
pusha
dec
and
fild
or
rcr
sub
(bad)
fisubr
pop
sub
push
jg
push
sbb
xor
sub
sti
jge
add
sbb
and
push
pop
mov
pop
cmp
lds
ins
push
push
push
hlt
add
inc
push
sbb
pop
push
pop
xchg
jmp
sub
xchg
add
xor
test
je
xor
(bad)
(bad)
icebp
movsx
push
and
mov
mov
xor
inc
cmp
(bad)
icebp
(bad)
jb
scas
and
mov
in
ins
je
xor
push
cli
or
cmp
(bad)
push
(bad)
fnstenv
and
in
fucomip
dec
fs
mov
pop
sti
into
loope
xchg
ins
adc
les
xor
hlt
stos
lods
add
add
call
int3
mov
fwait
push
or
push
mov
lods
sahf
push
and
add
add
add
cmp
cmp
addr16
mov
jl
(bad)
outs
xchg
xor
ror
adc
and
(bad)
xchg
int
and
pop
test
adc
and
ja
inc
add
imul
or
shl
pop
xchg
push
and
fisubr
sahf
xchg
mov
call
int
jl
cli
and
sub
mov
std
mov
xor
cdq
add
adc
mov
adc
jg
pop
lock
(bad)
mov
js
add
push
push
or
sub
mov
cmp
cdq
cmp
ja
or
pop
and
adc
sbb
adc
ja
cli
mov
cmp
cmp
adc
inc
push
sub
sub
cmp
mov
lea
xchg
push
mov
test
retf
clc
ja
inc
jge
inc
add
add
jge
jmp
inc
inc
add
cmp
jo
push
out
loop
inc
mov
push
xor
sbb
call
push
fsubr
retf
test
mov
aaa
pop
add
imul
or
mov
sbb
movs
mov
xor
jbe
shl
hlt
xor
pop
mov
sbb
cli
dec
mov
lea
lock
mov
lea
les
or
lahf
sub
lea
push
push
push
mov
ins
lock
or
add
(bad)
or
sbb
nop
pop
push
(bad)
fldenv
add
sbb
dec
inc
imul
cmp
mov
adc
cmp
add
je
cli
xor
ret
mov
out
xor
mov
fmul
inc
or
mov
and
in
pop
cmp
xor
ins
mov
push
(bad)
imul
mov
xchg
out
(bad)
mov
sldt
xchg
cmp
cmp
xchg
xchg
and
mul
jns
cmp
ja
or
cmp
mov
gs
inc
adc
push
jb
cmp
mov
out
pushf
imul
xchg
aas
movd
leave
push
(bad)
mov
or
fmul
xor
ins
enter
jmp
cmp
data16
js
pop
push
sub
enter
imul
sbb
cmp
ret
jg
add
sub
imul
or
movlpd
cmp
sub
in
ret
mov
clc
or
push
or
ja
jo
mov
mov
push
sbb
sbb
loope
add
or
add
mov
and
loopne
add
add
movs
pusha
dec
xchg
xor
mov
fdiv
rol
cmp
test
aaa
cmp
and
cmp
(bad)
lds
add
ret
cmps
jb
jmp
sub
cs
or
dec
sub
mov
movs
pop
icebp
jb
jo
mov
jmp
push
test
(bad)
fnstsw
xchg
mov
int3
xor
je
cmp
sub
xor
jno
push
scas
(bad)
loop
or
add
xor
sbb
and
repz
add
ret
dec
shr
adc
jmp
inc
ins
fiadd
push
(bad)
mov
pop
pop
jno
sar
adc
mov
add
push
or
ja
or
leave
add
jo
sbb
xor
retf
cmp
jl
push
push
and
pop
cmp
int
xchg
sbb
mov
adc
xchg
lahf
lahf
test
push
mov
add
pop
and
fimul
shl
call
cmp
out
xlat
aas
dec
dec
pop
mov
ror
xor
push
ret
dec
test
sub
add
out
fadd
rol
rol
mov
cmps
rol
lods
bound
adc
ins
sbb
iret
jne
push
pop
pop
jnp
(bad)
arpl
add
repz
mul
push
push
and
sub
add
cmps
setne
mov
loope
push
scas
or
mov
mov
pop
nop
mov
pop
pop
mov
lea
js
ss
mov
lods
add
cmc
sub
mov
sub
stc
and
(bad)
lea
icebp
jg
test
loop
nop
shl
or
cli
add
mov
push
xchg
or
(bad)
cmp
mov
push
bound
xor
mov
test
je
fcmovnb
dec
retf
pop
add
retf
mov
sub
loopne
jns
xor
inc
mov
fadd
push
push
push
lods
test
cmps
mov
or
je
jbe
(bad)
push
xor
jns
push
adc
je
sbb
inc
fcom
stos
popa
(bad)
mov
add
ret
push
sbb
or
sub
xor
loope
jle
sbb
push
or
into
push
add
lahf
cmp
mov
mov
mul
sub
pop
sbb
jp
pop
sbb
add
or
add
jg
add
xor
push
xor
leave
xor
dec
push
mov
fist
ins
adc
push
fnstenv
(bad)
ja
jne
stos
add
mov
pop
loopne
and
cmps
and
ret
fistp
push
ret
out
stc
xchg
dec
cld
lock
add
sub
and
ds
sub
pushf
pop
pop
jbe
enter
push
mov
xchg
jmp
and
call
pop
mov
sar
pop
test
sbb
sbb
data16
out
ret
inc
(bad)
cmp
in
mov
inc
cmp
jb
fistp
sbb
rcl
xor
mov
mov
mov
xor
ds
sbb
or
lock
mov
shr
shl
or
loop
ret
adc
loop
shl
push
loopne
or
out
(bad)
xchg
test
add
shr
xor
dec
inc
add
sub
hlt
mov
add
dec
in
mov
mov
add
cmp
neg
je
jmp
xor
retf
and
and
xor
adc
pop
inc
push
mov
xor
adc
jbe
jmp
xor
ds
lods
push
mov
or
je
out
icebp
or
ror
lods
or
ret
cmp
rep
adc
or
retf
adc
push
pop
fist
push
jmp
mov
fiadd
ror
cmp
sbb
(bad)
rcl
mov
sti
outs
dec
cmp
jne
mov
inc
cmp
jb
or
clc
cmp
ss
inc
fisub
or
push
cmp
push
dec
sub
ret
jnp
lahf
cli
pushf
cmp
lea
(bad)
retf
das
push
push
pusha
inc
mov
fisubr
sbb
adc
jne
pop
inc
imul
push
or
adc
or
dec
retf
fild
cdq
inc
or
or
pop
fist
dec
inc
cmp
mov
add
or
inc
xor
lahf
adc
imul
inc
das
add
das
inc
jecxz
add
xchg
xchg
mov
imul
xor
pop
or
leave
and
add
xchg
adc
mov
pop
retf
adc
adc
cmp
cmp
push
sbb
fiadd
ret
int
pop
je
lea
ins
lock
lock
cdq
mov
or
or
adc
push
cmp
xor
mov
pop
xor
pop
sub
lods
imul
xor
push
rol
dec
out
jle
pop
jbe
out
push
push
xor
cs
psubb
into
pop
and
push
fs
push
push
jp
pop
bound
fst
shr
or
add
aas
test
les
cmp
and
shl
push
adc
add
inc
jne
std
cmp
test
lods
cmp
jae
sbb
fidivr
(bad)
push
add
jb
cmp
clc
call
xchg
and
ja
pop
dec
xor
pop
push
push
(bad)
ficomp
mov
pop
or
mov
ja
test
add
(bad)
(bad)
adc
xor
and
push
popa
pop
mov
adc
(bad)
js
xchg
aas
mov
inc
jg
push
sbb
or
out
test
cwde
cmp
(bad)
jne
ror
mov
sub
cmp
(bad)
setge
add
add
ret
aas
adc
push
or
loop
pushf
test
dec
jecxz
int3
mov
adc
cmp
ss
dec
hlt
les
loope
adc
and
or
xor
mov
pop
mov
jne
cmp
or
or
mov
jg
push
xor
dec
mov
adc
push
xor
call
mov
cs
iret
repz
sub
movq
fwait
fs
push
or
push
xor
clc
loope
pop
push
push
pop
pop
ins
xor
popf
xor
inc
loopne
adc
mov
sbb
sbb
add
dec
xlat
jbe
or
pop
inc
push
pop
(bad)
push
mov
jbe
mov
mov
sbb
ja
xor
fmulp
and
mov
sub
jo
sbb
pushf
lock
fnsave
sbb
push
and
movs
cmp
pop
imul
pop
shrd
xchg
(bad)
imul
or
mov
jmp
js
sub
fwait
inc
in
push
or
adc
jbe
repz
push
sub
push
or
test
cwde
je
jb
nop
sub
sti
or
cmp
sbb
inc
push
push
mov
xchg
jg
aaa
add
pop
mov
sar
jbe
idiv
adc
scas
sbb
push
pop
cmp
mov
mov
jg
addr16
in
cmps
mov
jae
lock
sar
push
in
cmp
je
or
out
xor
cmp
jbe
fild
icebp
mov
dec
push
adc
gs
inc
or
inc
add
cmp
jb
sbb
add
push
dec
mov
stos
mov
(bad)
mov
inc
mov
cmp
mov
imul
mov
aas
and
cmp
jne
bnd
mov
mov
and
and
popa
add
cmp
pop
outs
push
(bad)
cmp
xor
adc
xchg
and
or
add
xor
rcl
sbb
fstp
add
or
ss
push
jne
std
mov
lea
repnz
sub
push
push
sar
xchg
mov
sub
repz
movzx
push
das
xor
mov
lea
push
push
push
jne
(bad)
pop
ja
lock
inc
pop
pop
ret
sub
dec
jg
popf
js
pop
fs
call
or
or
dec
sub
inc
aam
scas
nop
inc
mov
cdq
hlt
pop
cmp
jne
jmp
push
or
(bad)
push
or
data16
add
lock
mov
hlt
pop
mov
lock
add
or
jae
stos
sub
adc
(bad)
mov
and
and
hlt
arpl
adc
push
mov
add
pop
sbb
lods
add
ds
popa
mov
push
mov
inc
pop
xchg
pop
les
aas
hlt
adc
pop
add
add
pop
lods
xsha256
cmps
adc
neg
aam
add
push
push
loop
ins
jns
cmps
fldcw
jne
das
data16
mov
sub
enter
jnp
sbb
outs
push
(bad)
cmp
mov
jp
inc
ret
jo
cmp
mov
push
lahf
jmp
je
es
adc
out
mov
cmovb
push
mov
push
jb
sub
popa
pop
cs
in
pop
jne
fdivr
adc
jne
das
push
pop
xor
mov
out
adc
inc
and
sbb
inc
push
pusha
fs
ins
jo
js
into
in
jae
fcom
fsubr
add
or
push
mov
cmp
cwde
sti
dec
and
xchg
add
les
imul
add
xchg
ja
test
outs
scas
dec
adc
ss
repnz
movups
test
aam
sub
xchg
retf
mov
xchg
int
adc
dec
mov
in
pop
mov
nop
arpl
adc
movs
test
pop
push
pop
xchg
mov
mov
mov
push
pop
push
push
dec
into
and
ins
stos
jne
xchg
mov
das
jl
push
pusha
pop
mov
pmuludq
bound
adc
dec
push
cmp
(bad)
std
xor
xchg
lods
pop
add
xchg
shr
or
fadd
ins
out
or
xchg
sub
adc
lods
add
call
pop
and
sbb
add
add
stos
jnp
imul
iret
or
jl
push
outs
push
setg
adc
lea
into
fimul
(bad)
fimul
inc
adc
jmp
push
out
test
dec
and
and
int3
and
pop
mov
loope
sbb
mov
mov
sub
xchg
mov
(bad)
cmps
or
test
std
pop
psraw
xchg
aaa
call
lea
or
std
ins
hlt
fucomi
adc
ret
mov
sub
sub
loopne
push
cmp
(bad)
out
clc
push
cld
cs
dec
fs
or
inc
mov
je
lea
sbb
test
call
adc
sub
lds
push
inc
add
loopne
mov
das
push
xchg
add
outs
cmp
and
call
rcl
jae
xchg
stos
xor
jg
lea
popa
fs
pop
out
adc
cmc
mov
aas
sub
jne
mov
or
je
or
add
and
and
push
push
pminub
lea
xor
jge
cs
inc
push
sub
sbb
cs
imul
fsub
or
or
loop
inc
shl
lahf
bound
pop
adc
js
loopne
push
push
je
imul
sbb
sbb
js
sub
into
dec
and
xor
sub
xchg
test
cli
and
mov
adc
mov
add
mov
mov
in
daa
inc
jge
mov
mov
cmp
jne
popf
push
add
push
push
sub
pop
clc
ss
shl
ret
cmp
mov
test
cmps
jp
and
jns
out
sub
and
imul
push
es
ins
inc
pusha
test
cld
sub
cmp
mov
mov
xor
popa
call
stos
pop
add
test
mov
jg
add
ja
js
cs
je
lea
push
add
xchg
push
and
in
mov
jmp
mov
ds
rcr
inc
sub
aas
lds
add
test
enter
rcr
cmp
sub
or
and
sti
mov
push
adc
adc
dec
je
sbb
out
add
sbb
adc
pusha
xchg
mov
add
sbb
mov
push
pop
rcl
xchg
retf
add
sahf
cmps
std
jmp
stos
lock
(bad)
inc
jne
mov
mov
push
cwde
not
or
ja
addr16
movzx
dec
es
call
shr
ins
fbstp
ja
retf
call
lods
sub
jmp
cmp
or
knotw
mov
hlt
inc
cdq
into
inc
push
bound
pop
movs
movs
dec
jg
push
(bad)
xor
and
jb
push
pop
xchg
in
outs
cmc
cmp
xor
daa
jne
mov
shr
fisttp
lahf
or
sbb
push
sbb
out
in
jge
lock
mov
sbb
jne
xor
push
cmp
mov
sbb
int
test
jno
or
ret
pop
pcmpeqw
or
(bad)
jne
mov
pop
cmp
and
add
add
add
int3
jmp
cmps
and
and
ss
jne
or
cmp
addr16
test
jp
mov
mov
jb
jne
inc
(bad)
mov
xchg
sbb
adc
add
jp
out
mov
and
movzx
neg
sbb
xchg
add
sub
cmc
jne
xor
add
lea
lock
or
mov
lock
dec
jo
add
out
loopne
cld
xor
cmps
(bad)
test
xchg
mov
add
mul
shr
push
cmp
dec
sub
push
cdq
inc
es
ror
jbe
add
xor
inc
ror
add
push
adc
test
pslld
(bad)
and
and
cs
pop
inc
dec
mov
and
test
lea
add
xchg
mov
or
pop
dec
or
jecxz
mov
jl
scas
movs
cmp
sub
test
call
inc
pop
xchg
pop
mov
sub
pop
pop
jo
add
inc
(bad)
in
and
je
idiv
test
and
and
ja
into
mov
(bad)
xor
bound
cld
(bad)
ins
jne
dec
out
sub
int3
or
popa
and
or
repz
cmp
or
mov
and
push
stos
mov
mov
mov
shr
sub
push
push
lea
xchg
push
dec
lock
xchg
push
ss
push
push
mov
into
jne
fwait
and
or
add
into
int3
ret
test
and
jmp
int3
mov
cdq
or
inc
ja
lock
repz
cmp
popa
clc
std
mov
test
xlat
ret
and
pop
xchg
fisub
pop
add
add
xchg
or
adc
push
push
mov
sahf
pop
pop
mov
xchg
inc
loop
sbb
test
push
jo
scas
lock
lea
scas
inc
loopne
(bad)
imul
pusha
or
je
push
cmp
mov
enter
push
gs
add
je
cmp
stos
xor
xor
movs
imul
add
sbb
sbb
das
fsubr
or
imul
pop
fld
push
or
repnz
ret
rcr
hlt
adc
cmp
push
and
shr
mov
jb
neg
push
push
and
xor
and
push
test
jge
mov
push
je
inc
mov
mov
dec
loop
enter
pop
pop
pop
cmp
inc
rcr
add
push
sar
int3
rol
adc
outs
(bad)
jns
and
inc
shl
inc
add
inc
jne
(bad)
ins
ror
out
pop
pop
add
shr
push
mov
pop
mov
sub
push
dec
aas
push
cmp
loop
mov
movs
(bad)
outs
xchg
cmp
data16
jmp
push
clc
lds
adc
xor
or
xor
retf
adc
int
mov
mov
loop
inc
or
inc
xor
xor
push
test
ins
movs
ds
sbb
jmp
data16
cmp
je
inc
jne
jo
div
ror
dec
and
ret
js
int
pop
and
jo
sti
add
pop
sar
push
call
push
fdivr
or
shl
adc
cmp
jl
dec
mov
or
(bad)
push
movs
outs
dec
xor
mov
jno
movs
cmp
adc
sbb
pop
arpl
scas
xor
clc
push
push
mov
push
add
inc
cs
div
push
pop
daa
pop
adc
and
sub
mov
mov
push
sbb
std
call
rcl
call
mov
push
or
in
jne
pop
pop
cmp
push
and
pop
sbb
xlat
pusha
mov
add
cmc
xchg
sub
sbb
fwait
xor
loop
or
or
imul
aas
xor
ds
mov
pop
mov
gs
xchg
adc
setl
mov
ret
retf
add
push
or
mov
push
xchg
add
(bad)
and
add
and
ret
dec
xor
pop
adc
add
cmps
sbb
mov
in
cmps
outs
sub
fcom
sbb
sbb
dec
mov
ins
sub
and
aas
and
mov
or
ret
or
and
or
mov
xor
fsub
scas
adc
inc
aaa
pusha
lock
sbb
push
push
and
dec
xchg
fcom
push
cdq
in
mov
cdq
fs
and
push
jmp
and
mov
jle
xlat
leave
jns
cmp
cmp
imul
jmp
inc
dec
mov
lods
xor
ja
push
inc
add
pop
pop
cmp
sbb
xchg
inc
and
jmp
xor
adc
and
aas
xchg
stos
fsub
xchg
push
dec
or
aam
adc
movs
jp
pusha
mov
js
pop
adc
mov
add
dec
sub
mov
xchg
push
idiv
test
lods
push
cmp
add
mov
into
xchg
int3
dec
mov
jle
fld
(bad)
dec
xor
cmp
or
mov
xlat
xor
mul
mov
add
mov
inc
call
cmp
fcom
push
cwde
or
push
mov
mov
scas
lock
jecxz
pop
stc
sbb
sbb
pushf
push
ror
dec
cwde
and
repnz
shr
ss
adc
sbb
hlt
adc
push
push
ficomp
inc
mov
iret
adc
in
inc
shl
adc
mov
add
dec
xor
jmp
jle
push
(bad)
(bad)
jle
jne
or
ds
in
cmps
jno
mov
jb
xchg
jnp
ret
idiv
sub
sbb
sbb
loopne
xlat
daa
push
sub
pop
adc
push
ror
mov
je
addr16
imul
sbb
sub
out
mov
pop
or
cmps
xchg
in
add
xor
adc
add
sbb
cmp
cmp
mov
or
and
xchg
pushf
cs
mov
lods
test
pcmpeqb
push
xchg
mov
loopne
loopne
adc
ror
mov
dec
stos
mov
mov
std
jbe
cmp
cmp
je
push
dec
jnp
sti
cmp
and
xchg
mov
ficomp
dec
xor
por
out
pushf
pop
cmp
dec
cmp
jl
imul
jmp
sbb
fs
sbb
inc
xlat
inc
rcr
fsub
fldcw
loopne
psubb
sbb
adc
pop
inc
rol
inc
inc
pop
leave
pusha
rol
ret
into
dec
inc
jo
fsubr
cdq
inc
cmp
xor
cmp
adc
sbb
sub
test
inc
xor
or
arpl
cmp
pop
push
addr16
sbb
aaa
push
add
xor
add
mov
mov
fwait
inc
or
cmp
je
mov
fisubr
and
call
or
dec
dec
jae
push
push
int3
scas
inc
call
pop
add
cmp
xchg
fimul
adc
loope
int3
jl
pop
and
push
inc
aad
inc
pop
add
xor
and
sahf
les
xor
add
shl
out
push
push
push
jg
pusha
jl
fnsetpm(287
jle
scas
and
add
in
add
cmp
cmp
loope
mov
js
call
mov
shl
adc
test
mov
push
lods
adc
mov
sub
lods
add
add
jp
(bad)
aaa
and
(bad)
or
or
dec
(bad)
xlat
inc
and
lods
(bad)
(bad)
pop
add
xchg
movs
sbb
adc
push
add
adc
rol
adc
popf
adc
and
or
cli
loopne
test
test
enter
test
push
jmp
add
push
lea
cmp
pop
adc
hlt
push
jmp
fdiv
mov
call
pop
push
mov
outs
sub
jno
mov
sbb
cmp
ss
test
add
inc
push
sub
dec
cmp
mov
dec
adc
in
jmp
icebp
sbb
(bad)
cld
and
xchg
fcomp
jne
sub
mov
or
push
dec
shl
mov
xor
jmp
pop
mov
lea
sbb
mov
or
ja
push
mov
lahf
aam
or
xor
in
or
je
mov
dec
add
push
in
cmp
add
mov
jg
jbe
or
ds
scas
aas
adc
mov
mov
not
add
rol
add
ins
add
mov
fld
adc
inc
cmp
inc
inc
jmp
mov
lock
dec
jmp
add
mov
or
mov
inc
es
jno
sahf
sbb
and
adc
jo
ins
adc
cli
and
add
and
or
dec
lea
mov
mov
mov
clc
js
push
or
loopne
or
xchg
or
and
or
and
jne
inc
(bad)
push
jg
push
xchg
cld
mov
cld
aas
data16
push
dec
xor
ret
add
das
cli
pop
dec
xchg
in
inc
inc
lods
es
mov
jmp
xchg
lods
pop
mov
add
in
and
ja
or
repnz
lahf
or
adc
mov
cli
inc
fimul
mov
or
xchg
in
aaa
inc
dec
imul
or
pusha
pop
xor
sbb
push
jne
and
xchg
icebp
(bad)
sub
jle
or
inc
je
movs
inc
outs
fistp
cmp
pop
pop
ret
sar
nop
ret
dec
mov
sub
pop
sti
outs
and
std
add
jl
dec
push
xor
lea
push
push
cmps
pop
in
es
dec
ds
and
adc
add
sbb
sbb
jbe
adc
dec
(bad)
push
inc
mov
iret
mov
add
lahf
in
push
pop
pop
mov
push
sbb
das
lods
imul
inc
inc
push
add
into
aas
inc
mov
adc
or
inc
and
xor
xor
scas
jmp
call
or
pop
ret
xor
int3
fild
adc
ds
jge
retf
mov
jmp
jg
cld
xor
aam
mov
bndldx
cli
sti
movs
xor
xor
fidivr
dec
sub
pushf
jo
xchg
or
cs
daa
pushf
sbb
xor
pop
daa
sti
outs
inc
push
ja
jmp
test
dec
les
rcl
pop
or
scas
int
outs
inc
adc
xor
loop
inc
xor
std
mul
jns
sub
jmp
mov
cmp
mov
cmp
inc
rol
ss
inc
and
mov
adc
cdq
clc
or
mov
and
jbe
mov
xchg
jae
out
aam
dec
inc
sub
cld
dec
movups
adc
and
ins
jb
arpl
xchg
inc
inc
sahf
xlat
push
mov
xlat
add
jg
inc
and
out
ss
mov
data16
adc
inc
inc
mov
push
sar
ret
(bad)
fldcw
push
lods
(bad)
push
mov
into
into
mov
repnz
fisttp
cwde
scas
or
rcr
mov
cmp
inc
or
fild
repnz
aad
push
in
les
cmp
push
movs
add
xor
stos
ret
inc
push
adc
xchg
mov
and
push
xor
pop
mov
adc
je
mov
mov
mov
jg
xchg
jl
xchg
and
cmp
push
push
inc
inc
lods
cmc
pop
fdivr
jmp
ret
sbb
fidivr
push
push
fist
mov
add
in
pop
cmp
add
xor
sbb
test
sub
inc
push
lock
loopne
movs
sbb
retf
pop
push
mov
nop
push
push
cmp
out
sbb
xor
and
sub
mov
inc
in
or
jg
add
sar
inc
push
stc
leave
dec
or
or
or
mov
sub
stos
pop
pop
jo
add
mov
jb
inc
arpl
push
mov
mov
out
mov
sbb
mov
adc
lock
push
fistp
add
aas
sbb
pop
jecxz
adc
das
cmp
sbb
out
pop
push
test
inc
jbe
mov
adc
es
les
jne
div
push
mov
or
dec
jp
call
cmp
pop
jmp
add
inc
or
or
sub
jo
xchg
push
jb
ret
ds
dec
ror
pop
pop
dec
push
rol
xor
ror
in
add
add
xchg
push
lods
add
cmp
push
adc
adc
add
sub
daa
popa
cmp
jne
inc
mov
inc
outs
or
idiv
ror
pop
and
push
jl
mov
pop
enter
and
xor
cs
or
xchg
mov
sbb
or
and
push
push
mov
sbb
and
push
fistp
(bad)
adc
push
adc
ret
push
inc
inc
inc
cmp
mov
dec
scas
add
adc
adc
xchg
outs
dec
cmp
cld
mov
loopne
cs
dec
add
add
test
push
inc
xor
jmp
cwde
addr16
or
or
out
loop
ret
loopne
jecxz
(bad)
fmul
dec
lods
adc
ins
shr
mov
ja
or
(bad)
adc
mov
scas
adc
movs
push
adc
pop
push
pop
je
pop
mov
or
jmp
push
jg
fist
jecxz
ins
std
(bad)
pop
dec
push
mov
push
js
bndldx
std
jp
sti
fsub
mov
push
(bad)
jb
add
sub
imul
adc
in
or
adc
pop
popf
and
ret
sbb
sub
push
push
push
mov
mov
aas
shl
movs
ret
cs
jle
and
push
jbe
inc
mov
shl
adc
jmp
xchg
push
mov
adc
popf
push
push
jg
icebp
add
and
inc
mov
aas
jo
lea
out
je
int
cmp
mov
out
mov
add
add
xor
inc
loopne
xor
inc
and
or
div
and
or
cmp
test
sti
cld
out
push
fdivr
push
aaa
xor
fist
add
inc
xor
test
addr16
cmp
sub
or
movsx
cwde
fcom
push
es
dec
bound
jnp
adc
repz
dec
bound
out
sbb
sub
add
sti
and
mov
push
inc
jmp
inc
sub
push
in
es
lock
pop
test
pop
push
pop
ss
hlt
adc
es
fbstp
sbb
outs
xchg
sbb
enter
or
jns
cwde
das
sbb
es
sub
sbb
inc
ret
xor
or
pop
lods
xor
pop
sub
pop
popf
je
add
ret
mov
xchg
mov
test
in
xchg
jo
push
xchg
fs
xchg
adc
or
in
or
or
or
and
arpl
pushf
loop
cmp
xor
pop
lahf
and
loop
adc
adc
adc
jg
push
test
movs
pop
add
shr
sbb
cld
imul
adc
mov
cmp
dec
xor
mov
into
fcomp
daa
pusha
mov
int3
jno
js
cmp
popa
sub
icebp
cld
pop
push
and
cmp
jbe
pop
jnp
pop
mov
and
(bad)
inc
stos
dec
sub
sar
cmp
push
sbb
neg
cmp
cmovb
pop
add
imul
nop
jge
clc
scas
cmp
pavgw
jl
push
mov
pop
mov
fst
xlat
adc
mov
shl
mov
inc
sbb
clc
lock
jmp
inc
enter
cmp
push
js
mov
inc
sahf
hlt
pusha
jo
jmp
jg
or
adc
adc
or
es
sub
inc
xor
sbb
popa
pop
xchg
sbb
push
cmp
sbb
and
sbb
xchg
rcr
adc
add
jge
sbb
leave
adc
xchg
(bad)
mov
push
pop
(bad)
mul
jge
sub
adc
add
or
mov
cmps
test
sti
je
xchg
mov
je
sub
push
fld
pop
cmp
pop
mov
add
fmul
(bad)
int3
sahf
xor
out
ret
cmp
out
inc
test
in
push
inc
add
jle
js
je
fs
inc
jl
aaa
xor
std
adc
and
ds
dec
mov
test
imul
sti
push
ficom
gs
sbb
sbb
add
enter
jl
add
xor
push
jo
add
push
shl
cs
push
std
aam
xor
sti
xchg
or
add
mov
jl
fidivr
in
js
mov
adc
xchg
retf
mov
cs
iret
mov
ds
pop
sbb
popa
lea
adc
pop
shl
mov
jne
sbb
push
dec
daa
sub
jbe
inc
and
jg
lea
cmp
xchg
push
mov
inc
push
scas
inc
xchg
mov
data16
stos
push
jbe
inc
jecxz
mul
jne
push
outs
call
mov
mov
daa
or
(bad)
or
push
sbb
xlat
push
mov
dec
sub
xchg
or
call
loopne
mov
xor
or
adc
push
and
int3
mov
pop
sar
rcr
xor
inc
jns
lods
sub
pop
ret
adc
xor
jmp
aas
ror
aas
pop
xor
and
xor
jo
adc
adc
xor
ss
(bad)
(bad)
push
push
mov
add
inc
clc
cmp
je
add
xlat
repz
mov
pop
push
loopne
into
cmps
adc
add
mov
data16
sub
mov
imul
test
inc
enter
and
lods
adc
cmp
push
push
xchg
pop
test
add
jp
aas
ins
lods
aas
in
add
nop
sub
loop
cmp
sbb
enter
sbb
push
loope
pop
aas
adc
push
mov
imul
xor
or
aam
push
ins
and
pop
inc
ins
lock
and
and
and
loope
add
sub
and
and
mov
ret
rcl
push
xor
jmp
inc
ror
out
daa
mov
push
pop
xchg
xor
pop
fcomp
hlt
jne
mov
loope
test
pop
cwde
cmps
fdiv
jno
hlt
adc
lea
mov
sahf
sbb
and
pushf
or
aas
push
es
pop
lods
jb
adc
and
sbb
dec
xor
adc
fcom
xchg
aas
sub
cmp
dec
inc
and
(bad)
mov
ss
popa
xor
pop
push
enter
cmp
adc
cs
mov
cmp
inc
or
lahf
sub
enter
outs
(bad)
add
aaa
push
push
repz
adc
adc
xchg
or
xor
jecxz
and
add
push
or
mov
(bad)
not
movs
clc
inc
dec
xchg
push
pop
sbb
cmp
fmul
lods
cdq
call
inc
out
pusha
mov
xlat
xchg
add
add
sub
add
sub
xchg
sub
push
cmp
sub
cmp
sbb
dec
es
xor
pop
pushf
mov
scas
xchg
or
ins
retf
mov
jp
out
shl
or
pop
cmp
xor
ins
popf
mov
int
sub
adc
adc
enter
call
xor
push
nop
sbb
adc
fbld
sbb
pop
int
mov
sti
dec
fstp
adc
mov
(bad)
cwde
fwait
dec
out
js
mov
mov
add
mov
mov
rcr
(bad)
cmp
sbb
loope
cmp
sbb
scas
mov
ds
xor
test
inc
jl
leave
adc
mov
or
jno
xor
jg
sub
(bad)
invd
ret
lds
pusha
sbb
sub
adc
and
xchg
inc
adc
jno
sub
shl
push
ret
adc
ja
push
mov
xchg
and
(bad)
movs
dec
imul
pop
imul
cmp
sbb
outs
sbb
push
adc
sbb
or
pop
rcr
sbb
sbb
inc
or
fmul
(bad)
push
ret
mov
les
cs
scas
jne
and
add
sbb
mov
push
xor
push
sub
popa
add
cmp
push
cmp
or
movs
add
rol
test
shl
pop
cmp
xor
loope
add
sbb
adc
adc
xor
pop
(bad)
in
daa
push
dec
push
lods
sub
in
mov
paddd
adc
adc
mov
sbb
sub
js
fist
push
cli
dec
jl
fadd
rcr
les
adc
mov
sub
aam
lea
inc
in
imul
sar
mov
pusha
mov
ss
mov
xor
fld
repz
push
cmp
cmp
jne
push
sub
ja
add
jge
cld
mov
sub
jb
mov
mov
add
(bad)
out
clc
mov
ret
jae
cmp
mov
cmp
daa
adc
jae
sti
std
je
mov
inc
add
sbb
je
add
or
int
jne
push
add
mov
or
in
lea
dec
xlat
dec
push
sbb
icebp
pop
sub
adc
je
mov
sbb
or
mov
icebp
arpl
inc
pop
pop
cld
test
or
test
cmp
imul
jae
es
pop
push
cmps
enter
gs
mov
mov
push
jnp
jl
lods
sbb
dec
pop
cld
cmp
sete
popa
xchg
fstp
ror
icebp
push
xor
xor
ret
mul
xchg
inc
mov
and
push
push
gs
(bad)
xchg
mov
and
or
mov
jmp
lea
xchg
movs
inc
add
pusha
loopne
test
push
mov
iret
mov
pop
or
movq
cld
lea
push
loopne
lea
dec
sbb
sbb
mov
lea
call
sub
dec
mov
add
pop
mov
out
jae
push
or
jmp
out
cwde
pop
shr
fisttp
push
fcmovb
movs
xlat
daa
addr16
mov
and
adc
push
sbb
clc
shr
and
inc
mov
mov
sub
xor
in
fucom
push
sar
dec
xor
je
xchg
shl
or
push
jle
and
dec
mov
xor
cmc
xor
mov
or
mov
adc
inc
mov
in
jl
jmp
dec
lahf
out
add
test
test
push
pop
push
ds
push
je
sbb
ret
and
mov
xor
xor
dec
and
or
jecxz
mov
call
or
cmp
pop
fs
jl
dec
fnstcw
nop
fstp
movs
dec
sub
out
sub
xchg
(bad)
or
addr16
stc
jl
adc
pop
mov
xchg
mov
dec
call
shl
cmp
je
adc
fcmovnb
cmp
les
jbe
mov
clc
and
push
add
push
fstp
loop
mov
pop
test
push
mov
jle
lock
fidivr
mov
jno
push
mov
jne
les
mov
push
or
jne
aaa
lock
out
and
xor
push
rol
test
dec
dec
stc
and
xchg
test
jle
or
and
(bad)
cld
jmp
dec
ss
mov
ret
mov
push
mov
push
loop
imul
jae
push
scas
cmp
popa
add
or
or
xchg
xor
mov
push
push
sbb
pop
fmul
mov
call
pop
jno
adc
mov
cmp
(bad)
das
sbb
jmp
ins
adc
adc
pop
sbb
imul
push
cmp
lods
push
test
push
pop
or
add
mov
xchg
enter
cmc
xor
or
push
push
push
push
sub
aaa
popa
add
cmp
cmp
cmp
leave
push
dec
sub
adc
rcl
xchg
js
test
je
loopne
aaa
imul
pop
and
ja
adc
aas
xor
and
or
inc
(bad)
add
mov
adc
xor
adc
xor
add
out
cmp
movs
mov
or
rsqrtps
inc
and
mov
cmp
sbb
dec
inc
popa
sub
mov
jecxz
loopne
pop
jo
xchg
not
adc
jno
test
pop
lahf
sbb
jo
xchg
aas
pusha
pop
mov
mov
dec
mov
add
pop
xor
add
mov
cdq
and
aas
mov
lds
test
dec
or
xchg
add
test
cmp
(bad)
cmp
rcl
inc
and
add
or
leave
aaa
pop
add
and
int
and
je
imul
dec
pop
mov
pop
pop
stos
inc
sub
lds
and
sbb
mov
ins
das
push
or
lahf
dec
push
mov
cs
or
push
pop
or
adc
in
add
or
loopne
add
pop
inc
ds
(bad)
cmp
pop
sar
mov
int3
movzx
dec
data16
mov
repnz
pop
movs
cs
adc
push
xor
les
scas
push
mov
das
xchg
neg
mov
pushf
and
imul
sub
iret
mov
cmp
sub
jne
jmp
inc
adc
add
addr16
iret
sub
rol
mov
outs
xchg
(bad)
mov
or
mov
and
test
out
cdq
mul
add
and
cmp
add
test
fadd
mov
jne
add
add
xchg
and
and
test
mov
cmp
sub
push
and
push
fs
mov
sub
and
or
add
sbb
push
cdq
or
xor
add
cdq
push
push
sub
lahf
xchg
in
sbb
mov
add
movs
test
jl
dec
and
push
or
add
lahf
inc
inc
pop
iret
mov
mov
fsub
adc
push
xchg
repz
shr
adc
xor
pop
ja
aad
(bad)
cli
mov
push
and
xchg
push
ins
push
or
mov
dec
loope
mov
jl
sbb
call
push
sub
test
fnstenv
xor
int
ins
call
dec
cmp
sar
dec
mov
adc
loopne
push
jmp
xor
inc
inc
xor
or
fstp
pop
shl
xchg
xor
or
lods
xor
cmp
jne
cdq
icebp
in
das
cmp
sub
and
(bad)
add
jbe
add
call
mov
fidiv
movs
cmps
dec
stos
push
add
neg
mov
cmp
jne
and
cmp
jne
push
xor
fwait
or
jne
or
jne
test
mov
push
icebp
jmp
push
ins
xor
cli
jo
sbb
mov
(bad)
(bad)
xlat
pop
pop
xchg
fld
mov
or
add
je
hlt
pushf
hlt
das
addr16
adc
cmp
mov
into
in
xor
daa
mov
inc
sub
js
(bad)
lds
cmp
mov
outs
push
mov
lods
add
or
(bad)
mov
inc
mov
leave
add
push
xor
adc
mov
sub
adc
push
push
or
(bad)
ss
aaa
lock
adc
lea
sub
fmul
pop
inc
(bad)
or
out
xor
mov
into
add
call
mov
rol
push
fmul
sbb
and
xor
jo
xor
add
and
xor
pusha
push
adc
and
cmp
pop
pop
xchg
shl
cdq
ret
aas
add
sbb
push
inc
mov
or
lods
sub
mov
test
pusha
call
inc
mov
shl
lock
or
das
jmp
dec
out
cmp
lock
xchg
or
ins
daa
xchg
ret
dec
and
or
add
ror
test
mov
cli
pushf
mov
ins
inc
xor
bound
gs
ins
mov
inc
cmp
mov
or
enter
ins
sub
enter
movs
pop
rol
mov
add
push
aaa
and
mov
or
and
lods
dec
sub
dec
mov
mov
jmp
cs
and
and
(bad)
stos
mov
mov
rol
cmp
fiadd
mov
jae
daa
dec
fldenv
(bad)
sbb
pop
or
push
das
jmp
xchg
add
mov
dec
xchg
arpl
lock
or
adc
movq
jp
push
and
jmp
test
ss
sbb
jmp
pop
add
lock
jmp
fld
ret
test
adc
add
add
jg
mov
jmp
jb
lea
cmp
jb
repnz
add
lods
add
aas
ja
push
iret
jo
arpl
push
add
sub
jle
mov
lea
mov
mov
ror
popf
test
es
les
aas
ss
arpl
cmp
sub
and
das
jecxz
sar
clc
push
fsub
aas
adc
sub
daa
js
and
or
mov
sar
jns
mov
ret
xor
outs
xchg
ret
sbb
fcmovu
rol
adc
jne
jnp
jnp
aaa
hlt
fcom
imul
(bad)
nop
mov
bound
add
fadd
mov
loopne
pusha
fldcw
loope
loopne
inc
add
and
gs
rcr
ret
sub
imul
(bad)
xor
jmp
test
xor
or
xchg
mov
push
out
movs
aaa
mov
jo
movs
(bad)
adc
mov
sbb
jp
jg
jmp
adc
cli
jmp
gs
and
sbb
rcl
rcr
(bad)
push
sub
jb
xor
push
pop
add
out
(bad)
cmp
push
out
xchg
adc
mov
popf
pop
add
dec
loopne
sub
adc
popa
xor
int3
or
cmp
je
pop
aam
xor
imul
daa
push
cmps
push
or
push
in
mov
sub
push
aad
adc
imul
in
xchg
lods
or
popf
pop
ja
jns
add
xchg
add
ret
nop
shr
loopne
pop
in
xor
int
cmp
inc
pop
adc
rol
xchg
or
aad
pop
lahf
adc
int
(bad)
add
adc
lock
ror
cld
and
add
jp
and
add
lea
retf
pop
stc
inc
cmp
or
mov
add
imul
add
add
push
int3
push
pop
xchg
bound
pop
push
add
jl
push
adc
and
or
inc
dec
and
dec
mov
jo
lahf
outs
or
cmp
clc
stos
xchg
inc
fs
xor
fcmovnu
shr
push
or
inc
cmp
push
outs
adc
or
inc
shl
ret
and
sub
popa
mov
add
cs
add
lods
repnz
mov
int
retf
jmp
jle
xchg
add
pop
test
mov
xor
jns
repz
inc
add
inc
or
or
cmp
pop
inc
lea
sbb
xchg
mov
cmp
mov
jle
xor
sub
xor
adc
xchg
push
fnsave
inc
cmp
adc
inc
mov
and
cmp
rcl
add
inc
jbe
push
cmps
adc
jp
jecxz
ror
in
shr
daa
je
push
dec
or
fsubr
xor
mov
or
test
cmp
sub
and
cmp
mov
mov
test
jnp
repnz
cmps
test
add
cmp
cmp
cwde
jmp
jbe
lods
test
das
inc
bound
mov
and
xchg
mov
push
das
cmp
jno
mov
and
jb
mov
adc
sub
adc
dec
sub
jns
mov
adc
fst
fwait
sub
push
cmp
sbb
add
cmp
pusha
jge
push
lea
shl
add
pop
shr
pop
cdq
hlt
fwait
xor
test
cmp
mov
xchg
shl
inc
add
xchg
jg
call
xor
jl
(bad)
rol
imul
push
cs
jl
adc
add
or
cmp
leave
fadd
cmp
dec
sub
mov
push
shl
fs
repnz
or
or
or
pop
les
fs
mov
sbb
add
loopne
fild
in
push
adc
into
inc
xor
mov
and
cdq
sahf
add
push
add
pushf
ja
iret
fdiv
rcr
lock
xlat
enter
and
mov
ret
sub
dec
inc
push
inc
(bad)
lock
or
cmps
fdiv
push
popa
dec
push
sti
adc
cmp
push
bswap
(bad)
(bad)
jle
dec
mov
adc
and
xlat
ins
inc
test
and
adc
jb
mov
scas
xchg
or
cmp
xor
hlt
add
inc
add
xchg
add
out
xchg
fdivr
add
inc
aaa
xor
pop
and
or
mov
repz
inc
js
pop
(bad)
push
sahf
and
cld
xor
and
loop
add
mov
mov
shl
push
jl
aad
push
push
mov
mov
rcl
add
push
js
xchg
out
fadd
push
and
(bad)
adc
mov
or
sbb
(bad)
and
jmp
xor
xor
sbb
jae
fsub
out
or
xchg
push
shl
cmc
jns
and
and
popf
stos
clc
sub
es
mov
pop
mov
adc
enter
inc
jp
(bad)
jg
and
stc
xor
sub
xchg
mov
mov
nop
mov
pop
push
xor
mov
cmp
adc
cmp
sbb
push
nop
cmp
mov
ret
add
dec
pop
pop
mov
stos
cmp
jae
inc
mov
ret
pop
adc
mov
mov
ins
data16
fild
mov
or
xchg
lock
jmp
sbb
(bad)
lea
setnp
mov
loop
sbb
mov
dec
and
es
dec
or
(bad)
push
fmul
and
mov
das
or
jmp
jmp
into
inc
cmp
fdiv
mov
add
popa
push
pushf
xor
sti
inc
jl
aas
add
push
cmp
jae
clc
mov
je
jl
loop
pop
test
in
inc
sbb
(bad)
(bad)
fstp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
idiv
add
(bad)
fidivr
je
cmp
je
cmp
je
enter
ins
xchg
cmp
inc
retf
inc
mov
add
popa
imul
loop
or
xchg
ja
sbb
sbb
mov
mov
add
and
add
add
repz
add
push
in
pop
das
or
mov
sub
adc
sub
xor
or
xor
or
push
and
lea
fcmovnu
pusha
pusha
sub
or
cmp
jae
popa
movs
adc
xchg
mov
inc
inc
push
pop
push
adc
retf
ror
bnd
jne
inc
call
jb
mov
out
sbb
add
cmp
mov
ret
lea
and
xor
push
and
xlat
add
lea
mov
inc
loop
call
mov
fisttp
adc
or
test
mov
jb
minps
sbb
test
add
mov
jnp
dec
xor
push
adc
call
add
push
sbb
mov
lods
push
mov
and
pop
or
jne
xlat
je
(bad)
adc
cmc
and
pop
inc
popa
xor
shl
or
sbb
adc
scas
dec
pop
test
and
or
dec
add
cmp
adc
cmp
jne
add
bound
sahf
cmp
mov
add
jne
adc
retf
mov
inc
add
xor
(bad)
xor
repz
mov
push
add
rcr
push
cs
sbb
outs
pop
add
ror
(bad)
jnp
xor
jb
int3
push
dec
inc
dec
push
ret
or
shl
xlat
test
push
xor
mov
rol
ficomp
loope
adc
pop
mov
add
hlt
loope
add
imul
xor
adc
aas
push
adc
add
lahf
jg
dec
or
sub
sbb
xchg
cmp
int3
test
or
sbb
sbb
push
mov
pop
pop
and
inc
pop
lea
xor
aad
les
jae
popa
push
imul
and
aam
test
je
into
sub
cmps
add
sub
ror
fldcw
fsubr
add
fmul
imul
adc
shl
push
cmp
data16
in
xor
adc
mov
push
lea
push
sub
and
xchg
xor
mov
sub
scas
mov
nop
and
pop
push
xor
xchg
sbb
dec
je
arpl
sub
sub
(bad)
enter
and
sbb
xchg
nop
mov
(bad)
jne
and
cmp
pop
neg
lea
cld
jmp
inc
mov
or
jns
xor
push
inc
inc
push
jns
push
mov
rol
or
mov
inc
cld
cmp
sub
dec
pop
inc
or
xor
pop
pushf
sub
or
fsub
mov
adc
jecxz
inc
fmul
ficomp
ror
in
mov
shl
lock
clc
lea
fsub
jae
dec
clc
enter
fsubr
pusha
push
cli
push
inc
push
inc
cli
push
sub
push
pop
add
cdq
nop
mov
add
jmp
mov
ret
or
xor
add
xor
in
pop
test
enter
add
lahf
nop
mov
jl
xchg
sbb
sbb
inc
jl
mov
iret
dec
bswap
in
push
(bad)
(bad)
(bad)
xchg
in
shl
push
sbb
sub
inc
int
jae
fsubr
fsubr
push
test
std
sub
imul
mov
push
and
mov
test
dec
sub
mov
mov
sar
pop
jmp
push
sub
cwde
xor
jl
pop
ja
dec
es
aad
add
clc
push
clc
add
clc
pop
rol
adc
xchg
ror
mov
adc
mov
pop
mov
jmp
jmp
dec
jo
(bad)
sub
test
movs
div
mov
(bad)
jle
lock
mov
add
ja
imul
inc
mov
ret
in
push
int3
adc
sbb
sub
xor
sbb
and
inc
es
mov
mov
xor
mov
dec
out
mov
jmp
xor
mov
test
jp
nop
lea
push
sub
pop
adc
aaa
clc
ins
cmp
mov
retf
loope
xor
jmp
inc
out
mov
and
pushw
cmp
lods
jmp
fadd
jmp
outs
add
add
sbb
or
jge
add
inc
add
ret
popa
jnp
or
add
add
out
sbb
inc
sbb
jne
cs
cmp
jb
out
sbb
ret
mov
mov
sbb
or
and
adc
stos
or
ds
or
and
das
dec
js
enter
dec
adc
shl
jg
lea
loop
call
inc
ret
fild
ins
gs
mov
pop
cmp
mov
xchg
clc
mov
mov
or
in
out
pop
push
push
mov
push
mov
push
or
cmp
xor
in
pop
pop
mov
cmp
mov
sbb
jmp
retf
ja
pop
jmp
sub
movs
jmp
adc
or
ss
shl
pusha
lock
and
pusha
pop
and
pop
dec
fiadd
and
inc
xor
shl
mul
aam
push
push
push
pop
mov
mov
repnz
leave
(bad)
pop
or
stos
and
aas
cmc
and
xor
imul
pop
retf
cmp
or
sbb
(bad)
cmp
les
or
cmp
test
or
out
ror
and
xchg
xchg
fild
cmp
mov
js
dec
add
pop
cmp
lods
stc
adc
mov
fst
div
ret
adc
or
inc
or
add
adc
mul
or
stos
or
not
daa
leave
je
pop
xor
test
sbb
add
test
jne
daa
nop
fcomp
sbb
dec
add
sahf
xor
scas
test
xor
cmc
jmp
xchg
stc
jmp
sbb
add
leave
xor
cmp
aas
jne
adc
cmp
(bad)
aam
add
mov
pop
enter
jnp
fsubr
cld
push
test
xor
leave
mov
lds
call
add
mov
frstor
push
dec
jmp
jge
adc
pop
push
inc
push
(bad)
xchg
add
ret
inc
push
push
pop
pop
mov
loopne
push
mov
je
ja
mov
mov
sbb
cmp
ja
and
pop
mov
je
add
sub
out
or
jmp
or
jmp
dec
aad
outs
dec
push
jne
cmp
aaa
lea
sti
jge
push
mov
pop
cwde
lods
jmp
mul
jae
fdiv
jmp
or
or
jmp
mov
popa
repz
or
pop
pop
cmp
dec
ja
jmp
inc
js
cmp
cmp
dec
imul
mov
adc
xor
sbb
cmps
les
cmp
push
inc
mov
popa
jns
cwde
push
test
sbb
push
cmp
inc
push
pop
sbb
pop
and
jl
stc
movs
sbb
push
pop
mov
jp
mov
push
add
aas
daa
nop
pop
mov
clc
sub
dec
cs
add
add
jmp
mov
mov
sbb
cmp
loope
push
nop
lods
fild
test
cmp
and
and
dec
dec
add
sub
xchg
loop
jbe
add
push
pop
sub
repnz
outs
fwait
dec
jmp
and
dec
das
push
pcmpgtb
ins
push
and
retf
stc
inc
add
push
into
add
stos
pop
xor
adc
aas
test
imul
inc
jmp
pop
fldl2t
clc
inc
fwait
in
jge
clc
js
push
cmp
or
jbe
test
or
pop
pop
or
push
in
inc
cli
or
dec
cld
xor
pop
or
add
cmp
jae
push
or
aad
push
mov
fadd
fidivr
adc
and
shl
test
sub
dec
pop
push
push
push
push
or
dec
adc
and
pop
and
pop
or
dec
out
rol
mov
xchg
lods
popf
sub
mov
inc
ja
out
push
js
push
mov
cdq
add
pop
mov
xchg
test
or
pop
stc
mov
xor
add
or
popa
mov
inc
xlat
call
je
fdivr
aad
push
push
and
xor
pusha
lock
mov
jb
dec
sbb
(bad)
sbb
cdq
mov
sbb
popa
jmp
and
xchg
add
loope
jne
add
and
(bad)
cmp
enter
(bad)
mov
sbb
push
inc
jb
rol
out
xchg
or
or
in
pusha
pusha
add
daa
cmp
sbb
adc
in
mov
stos
adc
call
push
cmp
cs
sub
mov
out
je
push
xchg
mov
lock
sbb
xor
lds
lods
out
mov
mov
dec
sbb
movs
cmp
loopne
xchg
inc
jbe
jmp
xor
shl
add
imul
add
xchg
rol
sbb
adc
sub
jno
test
fmul
sub
das
adc
or
repnz
and
or
mov
lock
add
mov
add
hlt
add
or
xchg
mov
int3
movs
repnz
ds
adc
add
vmwrite
or
inc
and
sub
xchg
sbb
hlt
add
add
inc
push
repnz
add
or
sbb
(bad)
mov
stc
mov
int3
aas
mov
jnp
inc
addr16
cdq
mov
mov
fdivr
xor
lea
push
fs
loope
into
adc
mov
fdivr
dec
push
ins
jl
mov
arpl
aaa
sub
sub
sbb
add
mov
dec
push
mov
cs
js
movs
js
scas
and
repnz
or
pusha
mov
lods
inc
retf
inc
cmp
sbb
add
adc
pop
mov
xchg
dec
lds
aas
dec
in
xor
fsubr
sbb
and
cmps
jb
stos
rcl
xchg
sbb
push
xchg
or
mov
xlat
xchg
sub
ror
or
add
cmp
ja
in
add
repnz
cmp
jecxz
(bad)
enter
or
adc
rol
jo
fcomp
adc
mov
sbb
pand
adc
adc
jb
or
test
pop
adc
mov
or
(bad)
xlat
xchg
pop
add
dec
adc
rol
jmp
adc
mov
and
loopne
xchg
sub
mov
mov
ins
(bad)
ffreep
bound
xchg
dec
adc
sub
pop
inc
rcr
add
inc
js
ss
mov
sub
fstp
xor
mov
pop
inc
and
add
sbb
adc
sub
cs
add
jmp
adc
movs
fwait
mov
and
mov
inc
pop
mov
cmp
adc
and
fidiv
and
pop
mov
cmp
add
xchg
pop
call
jo
outs
push
mov
mov
lock
out
and
in
sbb
(bad)
jp
fcmovnu
xor
(bad)
sbb
xchg
cmps
retf
adc
push
sbb
or
mul
add
add
push
mov
shr
lea
shl
dec
int3
sti
add
or
add
xor
push
movs
xor
dec
adc
jnp
lods
add
pop
add
fstp
sub
dec
add
(bad)
int3
adc
dec
push
dec
xlat
fdivr
lods
add
push
mov
adc
pop
jns
js
xor
sub
add
arpl
mov
pop
push
push
or
popa
inc
mov
cmp
mov
sbb
pop
jae
out
inc
adc
and
in
add
mov
aam
mov
loopne
cmp
jns
mov
in
mov
pop
jecxz
xchg
(bad)
jmp
mov
jno
movs
mov
nop
and
(bad)
test
sbb
adc
dec
ja
adc
sub
or
adc
push
lock
pop
and
pop
sub
(bad)
sbb
and
jmp
and
dec
ds
in
mov
fs
add
push
push
cmpps
out
sub
mov
rcl
lahf
loopne
or
xor
daa
adc
pop
jb
dec
inc
les
repz
(bad)
out
dec
mov
mov
sbb
jmp
idiv
add
sar
daa
pop
add
cmp
pop
data16
loope
mov
mov
and
sub
imul
or
retf
jmp
lods
(bad)
out
push
mov
lds
movs
xlat
sub
mov
or
push
in
mov
mov
sub
ret
pop
dec
sbb
jo
or
cdq
mov
les
(bad)
pop
mov
iret
sbb
add
adc
push
add
and
les
dec
js
push
mov
loop
js
xchg
cmps
sub
in
cmps
xor
sbb
mov
dec
les
movs
add
cmp
(bad)
popf
push
push
cmps
xor
inc
push
js
mov
sbb
jo
push
fmul
aad
sub
or
adc
xor
cmps
(bad)
add
vdivps
and
sbb
jg
or
movs
push
mov
shr
sahf
mov
jb
in
in
pop
add
or
popf
ret
adc
sub
mov
pop
sub
or
sbb
mov
xchg
add
psrlq
xchg
push
dec
loope
mov
cs
clc
pop
stos
adc
jne
icebp
mov
mov
and
sbb
push
cmp
sub
xlat
retf
(bad)
fcomp
jnp
or
sahf
sub
test
push
les
mov
sub
leave
push
test
add
lock
adc
call
mov
cmp
lea
jmp
(bad)
jae
inc
outs
iret
push
jns
sbb
sub
sub
or
mov
push
add
nop
outs
sbb
xor
add
jbe
ret
or
sbb
enter
pushf
or
jecxz
dec
or
cmp
sbb
add
inc
loope
cmps
cmps
or
rol
pop
ret
add
clc
push
test
and
inc
cmp
mov
sbb
pop
mov
into
popf
pop
dec
imul
inc
mov
or
dec
outs
cmp
addr16
xchg
popa
xchg
xchg
adc
add
push
or
inc
adc
add
lods
in
sbb
adc
cmp
stc
sbb
mov
xor
add
sbb
pop
call
rcl
adc
and
push
ins
dec
pop
inc
aam
mov
add
adc
and
sub
dec
inc
inc
ficom
pusha
dec
cld
inc
sar
push
test
pusha
aaa
lock
or
std
xchg
mov
ins
lock
xcrypt-ctr
cmps
sbb
add
sub
xor
and
out
hlt
push
pop
in
push
mov
cli
outs
aam
sbb
fsubr
pop
push
stc
push
xchg
inc
lock
idiv
cld
loopne
add
adc
hlt
or
mov
bnd
adc
or
and
or
mov
xchg
inc
push
add
int
into
mov
xchg
dec
push
and
les
sub
scas
sub
xor
add
clc
xor
sbb
sub
cmp
mov
jbe
fadd
pusha
add
pop
(bad)
repnz
inc
add
push
ins
push
or
add
sub
pop
lods
sahf
outs
mov
cld
xor
inc
jmp
cld
out
or
leave
jmp
dec
arpl
sub
mov
cdq
dec
jl
ins
fild
jne
(bad)
hlt
pop
mov
loope
test
rep
sahf
rcr
push
cmps
or
fwait
mov
outs
call
pop
inc
push
retf
retf
dec
retf
cmp
xor
jb
lock
pop
xor
(bad)
ror
push
lods
rcr
or
sbb
push
dec
push
adc
inc
xchg
xchg
adc
in
cmps
cmp
jne
cmp
and
shr
cld
add
adc
dec
popf
add
cmps
pop
std
sbb
leave
mov
cmp
cs
push
inc
sbb
stos
in
mov
sbb
fstp
push
add
or
enterw
push
lea
add
in
rol
inc
and
popa
mov
jp
xor
(bad)
push
dec
mov
pop
sahf
movs
mov
lock
xor
mov
add
push
push
ret
xor
mov
mov
pop
or
test
fstp
jb
icebp
inc
jmp
or
adc
loope
push
adc
xchg
cmp
inc
jecxz
nop
clc
or
sbb
push
sbb
cld
xchg
ret
mov
or
sub
cmps
xor
xor
ret
(bad)
mov
ins
or
ror
inc
mov
add
mov
and
sti
jb
mov
push
or
movs
inc
jb
shl
push
cmp
cmps
push
retf
add
out
dec
inc
loope
mov
xchg
xor
pop
cmp
mov
or
sbb
sub
inc
jbe
je
test
push
sub
in
out
sti
push
push
mov
jmp
aaa
xor
xor
sbb
sbb
or
add
push
rcl
adc
fucomip
adc
jmp
sbb
jmp
xchg
xchg
cs
pop
push
dec
lahf
add
inc
mov
mov
pop
jmp
stos
ror
fst
fsub
inc
push
in
aas
lock
mov
cmp
rcr
scas
mov
jb
ja
adc
jb
inc
add
cmc
mov
cmp
je
xchg
inc
inc
fst
sahf
daa
scas
dec
jns
push
jecxz
das
adc
or
add
or
adc
cmp
xchg
jo
sbb
xchg
mov
add
push
push
loop
add
fs
sbb
or
adc
inc
repz
loopne
mov
mov
out
cmp
inc
test
adc
jno
in
aas
jl
imul
repnz
adc
push
sub
sub
sub
adc
mov
ficom
xchg
mov
push
ss
mov
jb
mov
xor
cmc
aas
rcr
out
and
mov
movs
add
push
shl
rol
pop
dec
lods
pop
push
cmp
push
sub
xor
dec
dec
sbb
in
xor
das
div
xlat
ins
pop
or
cwde
int
cmp
adc
jp
add
fisttp
gs
add
test
je
or
and
mov
rcr
jo
fimul
ret
dec
cmp
sub
dec
addr16
mov
jp
cdq
pusha
stos
lods
outs
dec
push
sbb
shl
mov
jp
inc
rcl
inc
cmp
pop
das
sbb
or
shl
jne
daa
adc
mov
daa
sub
fisub
sti
jmp
push
jne
ror
mov
mov
cmp
add
pop
gs
mov
(bad)
jne
and
cmp
push
adc
sub
adc
lea
pop
sub
fsub
(bad)
push
(bad)
xchg
add
jbe
push
jl
cld
mov
lods
add
sub
sbb
mov
iret
nop
push
add
mov
mov
adc
inc
cmp
je
mov
inc
adc
inc
pop
daa
push
repnz
loopne
mov
loopne
add
ins
repz
add
clc
jl
mov
or
mov
in
cmc
add
hlt
inc
mov
cmp
in
mov
das
or
and
jno
or
push
push
push
ret
into
sar
or
addr16
mov
in
dec
in
div
mov
add
and
cmp
inc
cmp
mov
adc
sbb
dec
lea
inc
inc
xor
pop
fdivr
cs
ds
cmp
xlat
and
push
pop
pusha
je
ss
add
rol
xchg
imul
or
movs
inc
in
aas
sbb
sar
fsub
out
sbb
mov
jle
pop
je
xchg
push
or
adc
mov
xchg
out
jle
ror
adc
xor
jnp
or
and
mov
sub
movs
mov
das
xor
fldcw
pop
xor
add
enter
cmp
and
push
ror
mov
ds
and
imul
mov
xchg
pusha
adc
and
and
inc
push
push
imul
int
leave
add
cmp
dec
pushf
adc
data16
or
fisub
leave
pop
mov
dec
call
add
xchg
mov
and
ret
xchg
add
test
sbb
in
ror
into
(bad)
fisttp
aad
(bad)
push
pusha
or
mov
push
sub
adc
clc
pop
push
ror
mov
scas
mov
and
dec
mov
pop
mov
imul
mov
and
cld
(bad)
mov
or
into
mov
iret
in
int3
sub
lock
rcr
adc
add
add
add
mov
cmp
push
js
pop
ror
movs
lock
inc
scas
ret
xchg
loop
ret
xchg
pop
mov
pusha
sar
inc
dec
mov
xor
loop
push
xor
mov
pop
ret
cmc
sub
mov
mov
aaa
xchg
mov
scas
push
arpl
push
(bad)
push
mov
retf
or
xor
shl
pop
scas
repnz
push
loop
mov
or
or
lods
sbb
shl
push
sahf
xchg
mov
xor
add
fnsave
sbb
cmp
fs
int3
and
push
and
rcl
jle
push
jecxz
ret
push
push
(bad)
mov
push
retf
jnp
push
mov
hlt
pop
xor
stos
xor
pop
aam
xchg
es
movs
nop/reserved
dec
in
aad
out
sbb
dec
pop
xchg
pop
pop
push
mov
call
test
cmp
inc
shr
xor
sbb
ds
sub
pop
mov
in
fnstsw
mov
jmp
cmps
inc
mov
rol
pop
ins
call
push
cmp
inc
mov
jp
movs
pop
cmp
sbb
mov
sub
(bad)
ret
and
outs
mov
inc
inc
sbb
push
lock
lock
mov
cdq
loope
bound
jb
lock
inc
outs
sub
mov
sbb
ror
mov
jp
mov
jnp
and
pop
in
dec
push
adc
pop
add
and
pop
sub
gs
or
adc
jg
adc
pop
popa
aas
xchg
lea
pop
stos
mov
adc
cmp
pop
or
mov
je
mov
add
adc
sti
mov
mov
or
ins
outs
xchg
mov
fidiv
(bad)
sbb
inc
adc
enter
dec
inc
pop
fist
push
inc
inc
rep
clc
pop
or
add
mov
and
pushf
and
cmp
adc
outs
and
and
inc
fsubrp
mov
or
ficomp
and
pusha
ror
adc
dec
pop
ficomp
(bad)
fwait
mov
cmp
data16
dec
sub
dec
mov
xor
sbb
lods
inc
pop
dec
jnp
xchg
(bad)
std
fisttp
mov
push
fisttp
jo
mov
xchg
jo
rcr
lds
fisttp
xchg
jmp
ins
jns
js
xor
jo
fbstp
in
mov
jl
and
movs
cmp
test
mov
sbb
lods
cmp
mov
nop
daa
xor
fcom
in
and
pop
adc
sbb
cmp
inc
(bad)
daa
jnp
push
cmp
sub
daa
cmp
sub
push
mov
call
push
js
test
aas
push
sub
or
pop
stos
hlt
out
fcom
enter
enter
mov
icebp
dec
push
jbe
mov
inc
cmps
xchg
inc
add
ret
inc
mov
pop
shl
sbb
jns
push
xor
add
push
movs
dec
and
(bad)
pop
add
push
add
movs
hlt
push
aas
repnz
je
mov
jg
or
or
and
ss
push
push
fld
ja
add
push
mov
add
pop
pop
or
lods
push
lahf
int
cmc
push
or
and
sub
sub
and
sbb
adc
pop
iret
leave
jmp
adc
sbb
sbb
daa
adc
or
loop
adc
lods
mov
cmp
mov
xchg
lock
mov
or
das
mov
scas
rol
retf
push
mov
jmp
cmp
fnstenv
pop
inc
adc
fcomp
jo
inc
in
adc
sub
scas
mov
movs
dec
push
mov
mov
adc
jmp
lahf
mov
mov
jmp
and
aam
ret
cmc
sahf
cmp
jae
push
cmp
clc
shl
lahf
(bad)
adc
sub
mov
mov
push
mov
sub
push
mov
ins
mov
ds
push
in
repz
push
test
in
mov
mov
push
pushf
sbb
mov
sub
pusha
pop
and
push
mov
add
neg
pop
sbb
jl
jl
push
imul
or
and
sub
push
push
sbb
push
pop
push
adc
fcmovnu
mov
clc
inc
ud0
daa
pop
aad
aad
add
test
push
cmps
inc
jecxz
enter
je
pop
mov
adc
int
add
and
clc
pop
ret
mov
cmp
pop
fisubr
mov
das
movs
pop
and
mov
in
es
rcl
xor
push
jmp
sbb
adc
jae
rol
movs
push
push
nop
clc
bound
movs
test
not
pop
pop
mov
pop
aas
dec
add
not
pop
dec
ret
jg
add
or
loop
std
test
mov
cmp
jne
push
rcl
das
and
shl
aad
aam
or
into
std
(bad)
or
push
mov
call
(bad)
(bad)
mov
dec
or
jbe
jne
push
lea
adc
xor
cmp
mov
call
sbb
call
add
mov
pop
pop
dec
pop
pop
clc
push
call
jmp
fild
sahf
fs
cmp
loope
adc
mov
jno
inc
dec
lods
and
push
push
mov
out
cmp
or
jne
imul
pop
call
push
test
enter
sbb
mov
or
aad
push
int
and
push
mov
jecxz
or
lock
add
(bad)
sub
lock
pop
pop
or
mov
mov
call
sub
add
ss
ret
leave
hlt
cmp
and
test
scas
cld
pop
mov
test
retf
fmul
adc
cli
jo
lock
loope
dec
adc
cmp
or
clc
scas
cmps
rol
mov
pop
dec
ficom
xor
cmp
pop
inc
pop
mov
mov
dec
jae
into
mov
stc
mov
(bad)
cmp
imul
or
jo
sub
ret
mov
imul
pop
dec
call
dec
lahf
adc
and
sbb
mov
push
or
punpcklwd
cld
jg
sub
popf
sahf
xchg
fmul
mov
xor
fwait
shl
jmp
sbb
inc
je
mov
xor
xor
dec
or
mov
popa
and
dec
movs
jb
mov
sub
and
sub
add
fistp
jb
xor
jp
add
fsubr
pushf
test
arpl
popa
xchg
aas
pop
push
mov
imul
or
pop
outs
pop
js
add
add
cmp
cmp
neg
sub
push
scas
push
je
xor
xor
(bad)
cmp
(bad)
aam
(bad)
jne
inc
cmp
jae
push
sbb
(bad)
mov
fisub
or
fild
fstp
sbb
sbb
(bad)
fst
inc
(bad)
lea
dec
push
movs
jg
rcr
ret
cmp
retf
push
into
push
push
int3
adc
outs
adc
or
and
mov
pop
dec
mov
and
add
sbb
fild
bound
inc
or
mov
gs
addr16
pop
mov
xor
cmp
jge
xchg
je
mov
jb
and
push
push
test
retf
dec
adc
mov
or
dec
movs
fwait
wbinvd
cmp
push
add
push
jle
add
mov
test
int
mov
fstp
retf
js
mov
nop
test
pop
jmp
loopne
daa
and
mul
(bad)
test
xor
adc
pusha
loope
nop
sahf
and
add
push
fcom
or
push
jb
xchg
jp
sbb
sbb
sbb
lods
cmps
je
or
call
frstor
add
pop
arpl
popf
fs
pop
ret
add
adc
fild
or
cmp
adc
jmp
lahf
out
push
rol
push
dec
xchg
test
fsubrp
adc
out
pop
xor
pusha
data16
in
mov
xchg
mul
fisub
cmp
outs
cmp
push
cmp
jns
jl
aas
into
mov
xchg
push
add
xor
les
inc
pop
dec
or
popa
mov
inc
cwde
cwde
inc
add
sbb
or
repnz
adc
xor
mov
xor
ins
jle
jo
mov
bound
add
es
(bad)
mov
push
push
and
cmp
or
out
add
cmp
popa
loop
jle
test
jo
adc
cmp
sub
jbe
shr
jge
pop
ja
sbb
test
pop
ror
cmp
hlt
push
mul
sar
ja
inc
mov
mov
sub
cmp
jg
loop
shl
mov
and
dec
iret
xchg
fadd
sbb
xchg
or
js
mov
jp
(bad)
xor
movs
ins
cli
adc
int
push
or
xlat
dec
or
push
pusha
fs
mov
sbb
jp
cmovl
mov
(bad)
lods
ja
sub
shr
mov
out
or
mov
ret
mov
push
xor
push
sub
adc
cmp
push
xor
xor
xor
daa
mov
test
dec
iret
int
jecxz
push
mov
inc
(bad)
sub
push
shl
ss
fisubr
xor
push
inc
hlt
sbb
scas
jne
and
stos
jo
inc
push
add
mov
dec
cmp
jne
test
mov
stos
call
jmp
pop
and
xor
call
push
out
enter
sub
loopne
ja
xchg
jle
mov
jle
out
jnp
add
imul
add
jne
cmp
clc
retf
or
dec
dec
loopne
pushf
cmp
jne
loopne
popa
(bad)
(bad)
das
iret
retf
adc
push
js
pop
jle
jo
shl
(bad)
pop
mov
scas
repnz
(bad)
sbb
and
jecxz
test
jg
sub
push
retf
arpl
push
add
mov
adc
push
adc
add
sbb
add
pop
adc
push
push
test
pop
push
inc
lock
push
je
loopne
adc
add
ret
jne
mov
sbb
loop
lea
ror
movs
in
inc
add
lods
add
xchg
adc
ins
(bad)
je
test
sbb
inc
cmp
sub
pop
sub
adc
xor
push
out
in
dec
add
inc
loop
mov
nop
pushf
sub
out
pop
(bad)
je
not
adc
jne
dec
fstp
(bad)
out
sbb
pop
and
inc
push
sbb
jl
xchg
sbb
pop
icebp
dec
dec
or
fcomp
fsub
sub
shr
popf
xor
push
test
and
pop
add
sbb
and
nop
xchg
sub
ret
and
push
pop
popa
push
inc
fsub
test
sbb
loopne
jmp
sbb
add
mov
movs
div
or
mov
ret
ror
push
inc
fadd
mov
mov
dec
aam
pusha
in
ss
cmp
ins
xor
(bad)
dec
sbb
xor
xor
fmul
jb
or
push
add
adc
inc
sub
sub
clc
jb
and
mov
or
xchg
fsubr
jo
inc
adc
fcomip
mov
mov
mov
and
sub
(bad)
sbb
jb
dec
pop
jo
das
sbb
inc
or
sar
push
push
cli
mov
dec
mov
pop
jne
add
or
sbb
xor
inc
or
jle
mov
aas
add
cmp
sub
js
or
into
inc
jecxz
mov
push
push
push
mov
or
cmp
jae
push
pop
mov
jecxz
pop
or
sub
bnd
leave
ja
sub
sbb
add
xor
je
inc
ins
jle
ja
movzx
mov
fcmovbe
ret
push
leave
test
sbb
jns
jge
inc
add
retf
adc
add
add
and
and
and
cld
mov
adc
push
mov
sbb
loopne
fsubp
add
pop
movs
push
mov
push
ss
std
int
arpl
xor
ins
cdq
sbb
popf
inc
or
adc
lods
and
shr
sbb
mov
add
jne
sub
pop
add
sti
sbb
inc
in
ret
and
ret
les
call
ds
xlat
sbb
dec
loopne
cmp
adc
iret
adc
jo
cmc
lods
pop
pop
dec
mov
add
add
add
jle
fdivp
outs
hlt
fisttp
out
add
cmps
pop
mov
mov
and
(bad)
sub
shl
or
cmp
jl
mov
xchg
push
sbb
(bad)
cmp
dec
xor
cmp
ror
and
dec
push
jne
xor
mov
mov
sub
sub
cmp
or
cmps
xor
arpl
jmp
sbb
xchg
dec
sbb
leave
sbb
(bad)
cld
push
cmp
jae
add
and
lock
jmp
cmp
lods
xor
add
inc
jg
dec
add
and
push
xor
test
xor
icebp
mov
clc
pop
jne
mov
ret
jp
cvtpi2ps
cmp
cmp
popf
es
aam
in
jl
rcr
(bad)
iret
popf
pushf
int
add
xor
in
cmp
int3
xchg
ss
sbb
dec
sbb
or
mov
pop
mov
dec
or
add
mov
lock
pop
fadd
mov
cmp
add
xor
fist
xor
push
xor
or
pop
dec
aaa
push
cmp
push
cmc
dec
add
sub
add
fiadd
and
rcr
mov
cmp
mov
pop
aam
mov
lods
dec
sub
add
loope
pop
cdq
fucomip
sbb
pop
sbb
clc
data16
push
adc
cmp
jnp
dec
daa
sub
push
jecxz
xor
repz
pop
js
inc
push
gs
mov
adc
and
inc
jmp
daa
xor
inc
call
push
mov
ret
(bad)
fcomp
aad
sub
hlt
and
shl
xor
pop
adc
fcomi
add
or
cmp
push
mov
mov
addr16
pusha
adc
xchg
add
inc
bound
jns
or
cmp
sahf
cmp
xor
sbb
cmp
ins
mov
popa
adc
jp
(bad)
pop
mov
inc
jmp
dec
mov
fisubr
sbb
or
or
or
(bad)
out
sub
or
add
sbb
sbb
and
fwait
test
or
ss
adc
inc
sbb
mov
pop
gs
inc
enter
xor
dec
call
jecxz
and
shl
mov
movs
adc
push
retf
sub
pop
and
mov
adc
cmps
bound
xor
mov
sbb
pusha
adc
jbe
mov
cmc
jmp
xlat
mov
ins
dec
mov
ja
lods
and
sub
sub
adc
js
out
inc
unpckhps
cmp
lea
xchg
in
mov
scas
pop
inc
add
je
pop
addr16
or
sbb
xor
test
pop
push
ret
call
jge
clc
mov
sub
sar
lea
push
mov
shl
jle
sub
add
xor
out
add
pushf
loop
jmp
jmp
add
adc
call
popf
xor
or
pop
xchg
mov
add
add
ja
mov
retf
loope
loope
int3
mov
adc
jae
xor
neg
pusha
adc
pop
sti
pop
in
test
test
pop
(bad)
loopne
push
inc
add
add
dec
ficom
pop
mov
ror
jns
push
sub
pop
sub
dec
leave
adc
jmp
xor
adc
adc
nop
push
pusha
out
jge
call
fist
and
add
xchg
cmps
push
scas
xor
int
mov
and
mov
dec
or
int3
push
xchg
xchg
and
clc
pop
jp
xor
cdq
out
jmp
xchg
bnd
add
sbb
cs
xchg
dec
jecxz
aam
or
ins
call
shr
adc
adc
mov
and
mov
sub
arpl
push
jne
xor
outs
push
or
pop
pop
mov
xor
mov
jecxz
xchg
pusha
add
daa
pushf
imul
push
pop
mov
jo
retf
(bad)
cmp
jp
inc
adc
test
das
bswap
sub
and
add
iret
shl
or
cmovl
enter
push
inc
loopne
in
(bad)
push
push
sahf
sbb
xlat
lds
test
pop
and
(bad)
xchg
or
add
ins
mov
and
repz
das
xor
inc
popa
cmps
inc
inc
or
clc
clc
sub
test
adc
rcr
sub
push
hlt
in
jnp
push
push
mov
out
test
aam
lahf
fwait
add
xchg
add
push
xchg
out
nop
loop
xchg
aam
jae
xor
jnp
push
int
jg
shl
shl
adc
mov
out
or
or
mov
sub
outs
js
sub
mov
sub
test
push
mov
outs
pop
mov
or
push
cmovne
arpl
nop
movs
fs
std
out
out
pop
or
sub
or
sub
lahf
add
or
das
jne
gs
dec
ja
pushf
jns
push
in
popf
push
dec
dec
add
cmp
inc
mov
adc
xchg
inc
(bad)
jne
out
sub
or
je
mov
fcomp
mov
jo
jg
outs
push
jnp
push
loope
push
sbb
jnp
rcl
sbb
fsubr
or
adc
mov
fcmovbe
and
mov
hlt
push
push
pop
imul
dec
push
sub
dec
push
xor
jmp
(bad)
jmp
mov
mov
jmp
adc
js
adc
inc
push
cdq
fs
daa
sbb
inc
dec
pop
sbb
add
and
push
fs
sbb
idiv
retf
xchg
movs
out
push
mov
jmp
pop
ret
nop
and
test
popf
cwde
inc
dec
cdq
adc
popa
mov
ftst
rcl
push
add
inc
loop
sbb
xor
or
js
out
loopne
jg
pop
push
mov
jns
fiadd
(bad)
jo
out
add
jns
adc
push
or
pop
or
pop
and
in
xlat
ror
jnp
jl
or
jne
movs
sbb
adc
sub
inc
sub
or
call
sub
clc
cmp
rol
pop
call
mov
lea
aas
push
dec
inc
lds
mov
and
pop
nop/reserved
pop
test
lds
push
popf
sbb
iret
pop
js
hlt
mov
xor
imul
jge
sub
repz
push
icebp
mov
(bad)
jae
daa
jmp
jne
je
dec
into
in
popf
jne
inc
arpl
mov
fwait
lods
mov
test
sbb
aaa
mov
outs
ins
jne
sub
stos
jl
pop
push
call
rcl
bound
sbb
push
xor
push
adc
inc
add
fiadd
jl
mov
xlat
push
and
test
xchg
jo
js
cs
cmp
rol
and
dec
jp
adc
and
test
sub
nop
dec
imul
mov
in
adc
or
loopne
and
pop
adc
jae
pop
push
adc
gs
dec
cmp
ss
and
pop
int
pusha
and
cmp
ins
or
sub
je
add
mov
loope
and
sbb
sahf
ret
adc
test
sub
or
dec
pop
add
fs
jmp
shr
in
and
je
test
sbb
test
(bad)
sbb
sub
scas
fimul
pop
xor
inc
pop
and
push
dec
rol
or
push
out
add
push
add
add
pop
les
adc
adc
xor
xor
adc
mov
pop
xor
and
mov
pushf
fnstenv
xor
fidivr
xor
enter
add
fsub
and
adc
sub
mov
out
pop
or
jle
push
outs
push
push
pop
es
push
add
add
push
add
add
xchg
and
xchg
xor
jbe
xor
mov
sub
leave
mov
adc
aam
js
xchg
mov
cwde
ja
dec
pop
mov
and
je
cmp
shl
jb
std
jl
xor
push
aaa
push
cmp
xor
jae
dec
aaa
(bad)
in
xchg
sti
jne
mov
add
push
fwait
out
lods
or
xor
adc
outs
mov
dec
sub
xor
pop
push
and
dec
mov
add
mov
lods
inc
sbb
jae
mov
sub
(bad)
cwde
sub
adc
mov
add
pop
popa
mov
repz
rcl
xor
and
popf
pop
sbb
push
pop
mov
adc
pop
fs
push
int3
dec
loopne
pop
push
xor
inc
loope
mov
outs
sbb
mov
je
lea
push
rcl
or
daa
movs
inc
dec
mov
dec
gs
shr
sbb
in
jb
pop
pop
pusha
cmp
mov
jmp
lea
call
adc
xor
inc
mov
sub
sub
aaa
add
je
push
call
mov
xor
jmp
mov
ret
pop
add
mov
mov
or
xor
mov
jl
jns
push
inc
shr
jle
xor
or
rcr
syscall
mov
xor
pop
sbb
pop
nop
shl
sub
dec
mov
mov
in
adc
adc
leavew
and
das
cmp
imul
stc
shl
sahf
sub
and
ins
pop
cmp
lock
into
enter
aaa
sti
outs
and
shl
adc
add
push
test
add
sub
aaa
aaa
aaa
add
push
pop
je
or
adc
prefetch
push
pcmpeqw
and
push
and
inc
pop
int3
mov
jp
jg
xor
pop
or
pop
call
cs
jne
and
aam
jg
lock
jbe
jb
xchg
iret
test
pop
clc
sti
ins
mov
mov
and
inc
xor
inc
push
scas
ret
adc
retf
xor
xor
xchg
dec
and
dec
and
push
xor
inc
push
jne
fld
or
es
pop
ret
mov
test
adc
push
mov
test
xchg
push
inc
xchg
inc
int
jne
out
int3
jmp
fcmovbe
ja
push
lea
mov
inc
lds
inc
sub
inc
ss
mov
outs
jmp
sub
loopne
xchg
push
and
mov
lock
pop
cmp
push
rcl
js
cmp
xlat
cld
add
sub
cmp
dec
mov
lock
test
lock
add
dec
not
shl
or
adc
test
dec
leave
popa
xlat
adc
sbb
jecxz
sub
test
xchg
and
in
xor
and
xor
and
out
inc
or
mov
jg
sbb
add
dec
and
mov
add
popa
dec
pusha
adc
add
inc
loopne
push
or
dec
xor
cmp
add
and
sub
loop
not
js
push
add
mov
lods
or
ucomiss
pop
ds
mov
in
fadd
sub
sbb
cmp
sub
or
xor
xor
pop
ss
pop
sbb
or
cmp
gs
inc
loopne
push
adc
inc
xor
add
add
in
shr
int3
mov
repnz
mov
push
xor
pop
mov
fistp
add
jmp
push
cmp
lock
or
in
push
lahf
sbb
sti
(bad)
and
jmp
fild
push
jmp
test
imul
sub
xor
dec
jae
xchg
pop
push
mov
aam
ds
inc
mov
cmp
div
icebp
inc
pop
push
dec
cmp
pop
push
cmp
push
jle
xor
ins
xchg
icebp
pushf
cmp
jne
push
mov
sbb
inc
mov
shl
add
mov
call
cmp
cmp
sub
and
jb
add
in
mov
sbb
enter
clc
xchg
lea
cwde
or
aaa
loopne
sub
sbb
sub
call
or
add
push
out
jecxz
xor
stc
mov
cmps
push
sub
pop
inc
loopne
dec
pop
std
adc
cmp
adc
ja
hlt
out
or
push
sti
sbb
push
mov
cmps
add
push
xor
mov
push
adc
mov
cmp
sub
lea
mov
rep
inc
sub
add
ret
sub
sbb
scas
loope
push
inc
add
add
adc
fcom
adc
or
nop
sahf
pop
(bad)
or
push
dec
mov
sbb
push
or
cmp
je
stos
or
jle
loop
pop
fidiv
cmp
call
and
test
pusha
sbb
or
or
xor
adc
sbb
mov
jno
je
and
adc
push
ja
mov
ret
cwde
js
and
lahf
mov
mov
dec
push
mov
and
cmp
jne
pop
imul
push
fs
pop
ret
xor
dec
mov
fs
adc
dec
dec
pop
cmps
ds
add
loope
in
sub
mov
jp
mov
outs
mov
push
sub
test
ret
xchg
ret
je
(bad)
push
fdiv
add
aad
pop
test
jecxz
test
xor
iret
sub
cmp
cmp
pop
and
or
sub
or
in
sub
adc
adc
mov
dec
and
or
stos
xor
push
daa
xchg
je
and
or
shl
adc
sbb
add
xor
xor
mov
mov
mov
add
sbb
adc
fiadd
lock
push
pop
ret
aas
push
add
test
fimul
mov
and
inc
out
js
inc
leave
push
xlat
lods
push
dec
inc
add
aad
imul
adc
sahf
and
and
int3
add
pop
fidivr
push
jno
sbb
adc
inc
lods
cvttps2pi
mov
mov
cmc
ja
push
arpl
cmp
jp
cmp
sahf
dec
mov
inc
nop
or
cmp
rcl
shl
push
inc
or
ins
push
cmp
sub
sbb
into
test
adc
aaa
push
jno
mov
add
push
sbb
pop
sub
add
sub
data16
aaa
jnp
push
or
or
out
push
es
jl
dec
dec
int3
les
sub
sub
pop
pop
fstp
pusha
sub
call
loopne
xchg
jge
sub
sbb
rol
adc
xchg
popa
add
jge
xlat
or
xor
sub
cwde
jo
or
jle
sahf
push
inc
sub
fadd
rcl
pop
and
ret
push
xor
push
or
pop
mov
pop
outs
adc
movaps
mov
adc
lea
lods
add
adc
push
fild
jbe
push
fxch
xor
push
call
in
test
je
les
xchg
inc
in
test
ins
out
mov
test
push
je
scas
inc
cmp
xor
(bad)
cmp
xchg
push
push
inc
cmp
out
and
inc
adc
push
adc
mov
inc
xor
sub
cmp
rol
and
push
add
add
cmp
push
xor
stos
xor
cs
(bad)
repz
xchg
sar
clc
sub
cdq
mov
push
not
add
(bad)
es
and
jnp
cdq
xchg
add
test
pop
in
dec
and
jle
movs
test
add
jl
or
in
shl
cmps
adc
sti
out
repnz
mov
pop
jle
sti
and
fs
push
inc
jmp
gs
imul
ja
hlt
jnp
jmp
sbb
pop
jne
scas
xor
adc
adc
pop
inc
cwde
in
std
pcmpeqw
ins
mov
cmp
adc
clc
sbb
retf
mov
leave
jbe
jne
fimul
dec
add
cmp
mov
mov
je
pop
div
jmp
pop
je
jnp
stc
pop
dec
je
retf
mov
and
int
xchg
dec
inc
or
add
add
add
xchg
and
mov
inc
adc
mov
stos
cwde
push
push
in
pop
xchg
movs
out
sti
cmp
add
test
jo
fsubr
bound
int
stc
jmp
adc
jne
mov
addr16
in
jmp
push
sbb
sbb
cvtps2pd
div
mov
inc
xor
sub
xor
loopne
adc
stos
call
add
push
fs
std
or
sub
mov
dec
mov
fidiv
mov
add
pop
in
inc
sbb
inc
add
not
or
jae
mov
cmp
sbb
fs
sub
xor
sub
sub
jbe
fst
jbe
add
mov
mov
iret
in
sub
(bad)
mov
mov
push
or
xor
fsubr
jne
ror
xchg
push
sbb
test
movs
cld
push
adc
jae
sub
xor
in
jge
xchg
xlat
aas
push
das
inc
add
or
pop
inc
arpl
and
retf
sbb
adc
jl
xor
jb
add
outs
sub
or
push
push
sub
dec
push
cld
(bad)
inc
std
mov
clc
mov
in
shr
scas
cs
cmp
fld
fcmove
enter
mov
lahf
inc
mov
adc
xchg
inc
in
inc
mov
dec
repz
inc
inc
and
add
mov
test
pusha
sub
jmp
cvttps2pi
add
pop
cmp
jno
mov
pusha
pop
int3
(bad)
cmp
jne
jecxz
and
jns
fld
ds
push
xchg
cmp
cdq
jmp
int3
vprotw
jmp
mov
mov
lahf
(bad)
pop
push
and
xor
inc
xor
in
(bad)
xor
out
inc
scas
jp
sbb
cmp
sbb
clc
sbb
sub
or
or
jmp
fdiv
push
loope
jg
push
inc
cmp
aas
jl
cs
sub
inc
xlat
xchg
and
sbb
xor
sti
stos
mov
jbe
in
jmp
ficom
rcr
jb
jecxz
inc
mov
mov
sbb
aas
lahf
sbb
test
je
or
inc
mov
hlt
sub
mov
xchg
setle
mov
in
inc
jnp
mov
push
and
pushf
dec
inc
jo
les
dec
pop
pop
jne
loop
cwde
add
test
test
push
mov
clc
mov
sub
adc
repnz
xor
fdiv
push
addr16
adc
mov
mov
jmp
pop
xor
fld
push
test
pushf
sub
mov
jae
pop
mov
loope
lahf
or
or
inc
pop
mov
lea
clc
icebp
or
sti
(bad)
and
mov
push
ss
mov
push
sbb
pop
and
add
cmp
rcl
test
xor
ret
jmp
pop
out
fistp
and
and
enter
dec
jmp
sub
xor
push
add
je
jmp
in
xor
test
lock
sbb
cmps
mov
or
ret
pop
call
pop
lods
adc
cmp
in
loop
sbb
loop
pop
add
sbb
push
inc
or
rcl
sub
lea
movaps
fs
and
test
or
aas
(bad)
ret
or
ret
mov
dec
shl
and
shl
hlt
and
aam
cmp
pop
les
push
push
xor
jae
lods
and
push
iret
or
pop
or
mov
jl
scas
shl
inc
or
cmc
call
add
fs
jae
pop
inc
(bad)
jae
and
sbb
xchg
aas
add
fistp
or
lods
mov
(bad)
in
ror
xchg
dec
pop
mov
mov
inc
pop
lock
pop
mov
and
dec
adc
xchg
hlt
ret
push
sub
or
mov
fidivr
xchg
xor
dec
mov
jp
(bad)
psadbw
ret
adc
int
daa
push
(bad)
es
inc
adc
out
jle
jecxz
add
push
and
push
mov
push
jmp
lea
js
add
sbb
lahf
mov
inc
ds
or
pop
jecxz
cmp
ja
push
jp
mov
dec
jmp
test
clc
pop
dec
inc
daa
loop
sti
push
mov
xchg
or
adc
pop
mov
sti
out
push
jmp
lea
sbb
and
jg
iret
pop
ret
pop
movs
adc
sub
ins
add
push
(bad)
jbe
out
fstp
dec
mov
push
mov
pop
dec
cmp
cmps
mov
dec
aaa
sbb
push
or
push
pop
sbb
cmps
xor
call
sub
retf
mov
add
cmp
jae
sub
push
fs
push
or
les
and
jnp
dec
call
dec
ja
leave
pop
ss
mov
pop
jae
lock
nop
add
sub
and
imul
push
ss
inc
test
dec
cmp
push
sbb
sbb
push
nop
cmps
aam
cli
or
inc
adc
jp
aam
outs
adc
cmp
add
shr
adc
xchg
add
imul
push
xor
sub
pop
inc
mov
iret
sbb
mov
out
sbb
int
lods
xchg
ret
cli
(bad)
dec
cmp
inc
dec
ror
sbb
hlt
ret
mov
or
outs
and
cli
adc
adc
ret
push
rol
xor
push
sub
add
addr16
punpckhdq
add
push
push
fadd
or
dec
daa
stos
mov
jecxz
inc
adc
xchg
test
add
sub
and
aaa
lods
and
and
pop
icebp
jno
push
xchg
push
mov
shr
inc
div
movs
sub
cmp
jg
shr
call
mov
pop
sbb
cmp
iret
mov
stos
inc
repnz
push
(bad)
jo
(bad)
mov
ror
push
jno
iret
mov
dec
push
dec
lea
jne
xchg
and
aaa
dec
or
push
push
into
call
fcomp
add
push
push
or
add
fsubr
das
mov
sbb
xchg
inc
sbb
and
jmp
ins
add
test
lock
pop
jl
inc
mov
inc
scas
push
sub
clc
mov
and
pop
imul
push
push
or
sbb
push
(bad)
sbb
dec
inc
(bad)
jmp
and
pop
xor
ret
and
pop
push
jne
and
test
push
push
psllq
cli
mov
ds
sbb
cdq
nop
arpl
dec
daa
in
adc
and
dec
daa
xor
push
in
daa
jo
and
fwait
fs
int3
lahf
xor
or
mov
fcom
mov
adc
cmp
inc
imul
loopne
add
in
add
mov
lods
add
xchg
pop
imul
sub
pusha
jns
inc
mov
(bad)
inc
aad
add
and
sar
add
pushf
icebp
mov
mov
pop
and
popf
adc
or
mov
ins
ins
test
leave
and
sti
sbb
lods
fcmovb
loopne
ss
jbe
test
in
sbb
add
lods
adc
sar
mov
push
jbe
ja
popf
popa
daa
cwde
adc
sub
mov
mov
les
not
xor
sub
test
loopne
mov
ret
inc
adc
add
add
push
bound
rcr
add
(bad)
pusha
shl
and
xadd
adc
or
or
push
dec
and
test
cmp
je
pavgb
sbb
cmp
adc
inc
cmp
aaa
mov
mov
cmp
sbb
cmc
add
aam
push
enter
and
pop
ror
mov
jae
jnp
or
xchg
in
in
mov
xchg
mov
loope
aas
call
aaa
or
je
mov
mov
ds
push
or
fild
sbb
add
ror
enter
pop
sub
sbb
mov
pop
jnp
inc
cmp
xchg
ja
or
inc
sbb
mov
push
mov
mov
(bad)
mov
cmp
fistp
mov
inc
std
cs
or
jbe
aaa
mov
jl
cmp
inc
inc
je
push
xor
cmp
ret
loop
inc
sbb
sbb
daa
shl
jmp
cmp
xor
test
hlt
dec
fadd
dec
sub
add
mov
adc
(bad)
jne
mov
add
cs
mov
sbb
inc
jno
and
movs
mov
enter
jp
dec
imul
dec
sbb
push
inc
jno
sar
cmps
and
jbe
jmp
outs
add
xor
dec
(bad)
sbb
mov
or
aam
dec
rol
or
jmp
cmp
sub
(bad)
rol
and
jbe
mov
add
scas
cmp
xor
outs
or
xor
and
push
arpl
or
push
or
pushf
or
add
inc
or
data16
mov
repz
add
test
push
jne
shr
mov
dec
mov
leave
in
loopne
pop
pop
inc
rol
sahf
add
(bad)
xchg
and
mov
add
jo
cmp
sete
cli
pop
or
mov
mov
mov
lock
in
in
rol
sub
in
in
cmp
or
(bad)
fsub
fild
in
sub
(bad)
in
mov
mov
cmp
mov
jmp
mov
cmp
jmp
add
xchg
xchg
sub
lock
lea
and
sbb
cmp
div
lahf
rcl
inc
inc
and
push
xor
loope
imul
pop
adc
jmp
repnz
sbb
sub
push
mov
mov
ret
push
mov
sub
(bad)
push
lods
push
sbb
jecxz
ror
xlat
cwde
fs
xchg
std
std
jmp
and
add
jmp
push
or
(bad)
icebp
frstor
sbb
cmp
sub
or
loopne
inc
adc
imul
adc
push
push
cli
xor
or
mov
dec
mov
(bad)
fwait
lods
fbld
cmp
jbe
dec
nop
mov
adc
dec
std
mov
pop
fcomp
lods
ins
mov
cmp
push
jb
repnz
add
add
or
icebp
push
and
leave
jb
gs
arpl
leave
fisttp
imul
pop
mov
inc
or
sbb
daa
call
(bad)
outs
test
add
rcl
or
cmps
dec
shl
enter
pop
or
fwait
clc
lea
mov
loope
nop
push
push
sbb
clc
add
clc
inc
hlt
scas
pusha
jnp
clc
jae
into
push
daa
inc
cmp
dec
sahf
out
jne
clc
hlt
or
movs
shr
adc
add
mov
pop
pop
dec
or
xor
add
iret
pop
icebp
in
xor
inc
xlat
jnp
test
or
mov
lods
imul
jo
pop
fld
sub
and
push
adc
mov
xor
inc
xor
xchg
xchg
(bad)
adc
or
pop
ins
cld
and
or
stos
inc
add
and
xchg
mov
cwde
xor
add
pop
gs
mov
daa
scas
xchg
or
stos
cwde
sbb
dec
jle
repz
add
or
push
dec
sub
jmp
imul
or
stc
xchg
lahf
adc
jns
add
dec
cld
out
xchg
mov
dec
sub
nop
data16
sub
daa
xor
cs
in
add
adc
out
mov
out
cmps
sbb
adc
sbb
xchg
mov
inc
fisubr
(bad)
mov
or
mov
xchg
xchg
cdq
cmp
add
and
fadd
ja
and
sub
xor
push
xchg
test
fwait
and
aaa
sbb
fild
aas
adc
mov
add
rol
leave
mov
push
fimul
in
aas
mov
inc
and
lea
in
push
rol
pusha
inc
loopne
dec
mov
call
ret
jge
adc
xor
repz
cld
xchg
mov
rep
add
loope
jmp
and
mov
add
aaa
pusha
or
dec
adc
and
sbb
mov
jl
push
inc
lea
ja
popa
addr16
inc
call
popf
inc
adc
pushf
daa
lahf
push
sub
and
inc
cmp
jb
mov
dec
adc
jo
jg
ret
fwait
dec
ins
adc
ret
mov
push
ret
xchg
rol
into
xor
and
cmp
xor
jmp
sti
pop
jae
std
mov
push
lea
mov
sub
dec
push
sbb
adc
xchg
mov
adc
add
cmp
xchg
xor
pop
out
aam
mov
pop
or
outs
inc
add
push
jns
fs
cmp
add
and
sbb
cmp
inc
je
rol
aad
mov
and
cmps
pop
daa
aas
(bad)
test
jl
dec
ss
inc
sahf
inc
retf
sub
jmp
push
popa
fwait
mov
push
xor
xchg
sbb
mov
push
dec
push
mov
rcl
(bad)
mov
mov
mov
jo
addr16
jae
dec
mov
ins
inc
call
fcomp
aas
(bad)
push
push
push
push
push
jne
push
mov
push
mov
dec
mov
(bad)
jne
xor
mov
fwait
push
call
pop
mov
jp
cld
push
cmp
call
in
ins
cld
rol
lods
inc
cmps
sbb
aas
inc
sub
dec
jle
imul
sbb
in
mov
popf
sbb
rol
repz
iret
in
in
out
stc
stc
pop
ret
add
inc
fild
or
stc
add
lock
mov
cld
cmp
clts
mov
cld
rol
shl
inc
jg
sub
lock
test
fisub
out
cmc
add
imul
clc
cld
add
xchg
pop
mov
xor
retf
in
imul
cpuid
addr16
push
adc
imul
or
test
add
repnz
or
xchg
push
add
inc
add
add
sbb
arpl
js
hlt
xor
shl
daa
aaa
push
add
jo
cli
and
dec
shr
xor
jmp
fadd
in
or
pop
movs
ror
mul
sub
and
push
(bad)
into
and
cmps
push
popf
and
adc
xor
push
pop
pusha
fld
and
xor
cs
jmp
stc
push
mov
mov
pop
sub
enter
xor
fldenv
ins
mov
ins
adc
jmp
into
mov
jmp
inc
and
push
aaa
hlt
dec
jp
rol
xor
mov
ret
sbb
sbb
sub
sahf
inc
enter
sub
rcl
ror
push
jecxz
cmps
nop
xor
jg
cs
stc
sar
sub
ss
xor
and
scas
mov
out
idiv
inc
retf
mov
cmp
jle
jo
retf
(bad)
push
and
adc
(bad)
push
cmp
pop
cli
fidivr
ret
in
cmp
xchg
xor
inc
push
nop
mov
aas
cdq
dec
add
or
sub
adc
and
push
outs
cmc
push
dec
xor
out
jmp
dec
jge
ins
xor
mov
sbb
adc
cmp
imul
cmp
test
or
jb
or
test
dec
jg
popf
mov
int3
sub
or
add
push
je
arpl
mov
fidivr
pushf
vmovups
or
mov
sbb
inc
push
movs
and
in
imul
movs
adc
adc
nop
or
adc
xor
ja
xor
xor
shl
daa
lea
and
pop
das
pop
inc
xor
lods
jne
push
dec
dec
mov
pop
xor
nop
or
in
add
and
(bad)
xor
repnz
pop
jle
lea
mov
ret
shl
cmp
jbe
int
dec
adc
cmc
dec
or
mov
ins
nop
ret
push
pop
sbb
pop
adc
stos
neg
je
mov
je
jl
dec
mov
icebp
test
jmp
adc
jge
push
push
adc
lea
es
rcl
daa
ja
stc
or
pop
inc
add
aad
cld
add
pop
pop
ret
lahf
push
sbb
adc
dec
sub
and
xor
dec
add
pop
sbb
push
dec
sub
sbb
pop
mov
pop
push
pop
push
and
in
add
push
stos
pop
mov
mov
xor
fidiv
test
pushfw
push
pop
dec
xlat
daa
iret
inc
or
push
xchg
ss
cmp
push
pushf
dec
cmp
rcl
sbb
jb
or
cmp
or
pop
add
das
aas
or
and
xor
cmp
leave
enter
push
scas
mov
or
push
int
nop
cmp
xor
(bad)
in
loopne
retf
inc
push
cs
sbb
in
jl
cmp
xor
repnz
ss
in
ficom
pop
sti
das
adc
adc
cdq
mov
pop
push
fwait
add
jne
mov
sbb
sbb
loope
xchg
adc
inc
inc
fild
retf
push
fsub
or
push
pushw
sub
dec
or
pop
sbb
xor
(bad)
mov
and
repz
dec
push
call
add
adc
jbe
inc
sbb
push
xor
xor
adc
loop
jo
pushf
test
movs
jne
call
push
pop
imul
xor
push
pop
imul
xchg
jmp
push
add
add
add
add
mov
mov
fimul
loopne
mov
movq
cli
adc
mov
pop
or
or
popa
ret
rcr
in
sub
ss
retf
test
push
jmp
jb
jne
jbe
pushf
and
inc
fiadd
call
es
dec
jne
add
jns
sub
cs
cld
and
mov
sar
add
or
or
xchg
fs
xor
jbe
stc
xor
jnp
dec
push
sbb
push
and
test
inc
outs
or
je
lock
and
enter
aaa
mov
dec
iret
mov
mov
adc
cmp
xor
lods
adc
rep
ret
sub
adc
push
jne
sbb
mov
ja
or
hlt
gs
iret
xor
add
push
push
test
rol
push
jle
fstp
push
enter
dec
pop
inc
enter
scas
dec
or
jb
dec
jl
movs
add
mov
add
cmp
push
sbb
and
cmps
push
aas
xchg
pushf
call
add
mov
cmp
xchg
sbb
loope
enter
cs
imul
push
cmc
nop
xchg
bound
bound
mov
mov
ss
aas
(bad)
lods
add
pop
je
inc
adc
xor
call
int3
mov
aas
mov
push
push
imul
add
idiv
ins
sbb
and
lock
stos
xor
and
xchg
lods
mov
adc
and
pop
mov
cmp
mov
cmp
jl
sub
pop
int
pusha
fnstcw
stc
add
inc
fs
leave
pop
and
or
inc
cmps
lods
cmp
inc
into
rcl
shl
cmp
fnstsw
jns
and
(bad)
cmp
inc
pop
rcr
mov
sub
(bad)
xchg
test
ds
loop
scas
inc
cld
pop
or
inc
rcr
pop
adc
dec
loope
(bad)
ret
cmp
aaa
stc
and
add
inc
cmp
lea
xor
jle
inc
scas
pop
sbb
fs
pop
(bad)
adc
enter
scas
xchg
leave
add
xor
mov
sbb
push
stos
loop
cmp
xchg
pop
and
sbb
outs
cdq
or
movs
shl
pop
jo
xchg
imul
movs
pop
test
mov
dec
cmp
test
xor
jle
cmp
inc
cmp
imul
enter
inc
xchg
pusha
cmp
mov
push
aas
push
cmp
push
or
pop
mov
mov
shr
inc
sub
shl
pushaw
cwde
jmp
sub
inc
fbld
dec
dec
and
jbe
jno
sbb
ss
ins
sbb
inc
lods
ret
ffreep
(bad)
repnz
xor
add
pop
rcl
sbb
lods
push
ds
push
push
dec
xchg
push
imul
fist
fdivrp
rcl
jmp
mov
sub
lock
cli
out
das
je
push
sbb
or
xor
inc
sub
add
jmp
mov
push
xchg
jg
shr
fimul
mov
jmp
ret
sbb
mov
mov
lea
push
in
xor
mov
ins
mov
shr
push
add
inc
push
xchg
mov
push
adc
clc
sub
cdq
ret
and
add
cmp
fmul
test
mov
or
or
js
adc
push
dec
retf
sub
pop
adc
pop
loopne
dec
add
jbe
mov
add
push
cmps
sbb
inc
pusha
xchg
add
xchg
pop
mov
retf
add
in
pop
dec
mov
movs
fwait
cmc
lahf
push
mov
imul
test
xchg
or
and
mov
cmp
(bad)
imul
clc
xor
mov
lock
mov
cmp
sub
xchg
ds
gs
sub
dec
fnstcw
cmps
cmp
cmp
and
push
pop
ds
dec
dec
sub
inc
push
inc
test
add
test
jmp
jne
adc
mov
sbb
inc
pop
mov
pop
data16
(bad)
dec
push
cmp
ja
push
ins
xor
leave
and
lods
sub
jg
sub
test
sbb
or
fs
cmp
shl
xor
inc
and
test
pop
lahf
adc
inc
add
mov
call
pop
or
or
imul
out
mov
dec
add
nop
outs
int
hlt
imul
inc
cmp
push
add
mov
push
cld
dec
cmp
mov
pop
not
add
add
add
sbb
jg
push
loopne
and
and
mov
pop
sbb
mov
or
jecxz
mov
add
fld
cli
std
imul
add
ds
mov
jns
daa
and
adc
ins
stos
aas
nop
rol
xchg
xchg
or
xor
mov
mov
add
xchg
bound
add
retf
rcr
inc
ins
ret
retf
and
cld
test
arpl
and
mov
ror
fstp
push
or
mov
cli
pop
sub
add
add
dec
or
xchg
pop
or
lods
fs
loop
test
mov
push
pop
imul
jae
xor
mov
popa
inc
cli
add
inc
fist
push
sub
inc
add
pop
repnz
push
mov
lods
inc
enter
inc
push
jl
aas
sbb
test
sub
je
dec
test
rcl
add
mov
sbb
div
dec
call
retf
enter
hlt
ins
inc
cld
mov
push
sbb
push
hlt
jae
nop
imul
push
call
dec
inc
fsubr
(bad)
dec
adc
popf
mov
ins
call
mov
pop
inc
lods
dec
mov
aas
sub
and
mov
ins
sub
popa
and
xor
pop
adc
add
pop
test
mov
gs
sub
add
mov
es
out
rcr
or
mov
movaps
jne
sub
imul
pop
outs
jge
pushf
add
jg
cmp
and
js
dec
mov
adc
(bad)
rol
dec
cs
cmp
or
inc
scas
inc
clc
or
loope
sbb
sub
pop
push
lea
mov
dec
add
pop
sbb
or
fwait
in
jbe
cmp
inc
jp
movs
jb
pop
mov
neg
sub
dec
or
push
dec
call
in
inc
add
or
and
sub
addr16
mov
dec
inc
mov
sbb
push
push
push
cmp
jp
int3
inc
sti
ins
and
mov
add
sub
call
sbb
repz
cmp
popa
int
push
mov
sahf
cmp
inc
add
cmc
pop
sar
pop
mov
(bad)
in
xor
pop
mov
and
pop
fisttp
mov
xor
xchg
xchg
pop
jmp
retf
xchg
or
std
dec
push
cli
callw
call
add
add
add
adc
pop
adc
into
popa
ror
ror
push
ds
ss
or
and
pop
jmp
jb
sub
std
and
leave
daa
push
(bad)
inc
shl
dec
cmp
mov
jb
adc
pop
sbb
aas
dec
arpl
in
cmp
jbe
and
mov
sar
clc
pop
mov
pop
pop
in
pop
xor
ss
add
in
sbb
cdq
mov
call
bound
shr
push
jne
jns
imul
and
jle
(bad)
push
xlat
xchg
or
dec
add
add
push
pop
leave
xchg
sub
inc
shl
ret
in
lods
xor
ja
cmp
js
jmp
adc
push
mov
inc
std
mul
or
adc
pop
pop
clc
sbb
or
ret
call
add
mov
pop
pop
sub
xor
jo
enter
bound
pushf
dec
push
ja
and
or
cwde
sub
push
inc
or
mov
pop
pop
and
daa
test
sbb
dec
dec
std
mov
ret
jae
add
movs
or
or
nop
mov
ja
sbb
adc
in
mov
mov
jg
js
test
(bad)
mov
xor
inc
xor
push
cwde
and
dec
mov
aam
leave
movs
shr
xor
adc
sar
mov
dec
inc
xchg
add
enter
pop
pop
pop
inc
jbe
jno
popa
inc
mov
icebp
jp
jbe
cmp
mov
add
pusha
sub
fnsave
add
data16
test
mov
jne
pop
mov
add
push
test
inc
fwait
mov
in
push
cmps
add
mov
mov
(bad)
mov
adc
mov
pusha
sub
mov
lahf
test
inc
jp
shl
or
sbb
pop
add
cmp
adc
mov
pop
shl
push
sub
and
jmp
fcmove
ficomp
adc
or
stos
(bad)
ds
add
(bad)
cmp
adc
adc
and
mov
inc
fcmovb
push
add
or
add
or
sub
ja
mov
sub
movs
push
dec
or
xchg
xchg
mov
adc
movs
ret
jo
or
jle
in
mov
fadd
sub
mov
call
xchg
cmp
sahf
out
pop
pop
or
or
dec
dec
ret
xchg
pop
leave
(bad)
cmp
mov
cli
aam
aam
or
cmp
cmp
inc
mov
push
sbb
push
mov
sub
cmp
pop
sbb
out
mov
dec
fwait
adc
add
lods
push
or
fwait
xor
xchg
int3
(bad)
inc
pop
push
cdq
xchg
mov
loopne
je
and
fwait
inc
xor
adc
push
mov
aaa
add
das
data16
das
push
pop
das
sahf
inc
sbb
ins
mov
cmp
ficom
sar
push
jmp
push
mov
dec
cmp
inc
in
mov
sub
ret
dec
arpl
inc
fiadd
cmp
clc
push
push
fadd
add
add
lahf
mov
add
sbb
jge
cs
or
sub
popa
nop
inc
jbe
push
les
add
movs
mov
pop
ret
mov
test
aas
cmp
adc
mov
inc
loopne
xchg
js
xor
adc
push
cmp
lods
add
retf
xchg
dec
in
out
loope
cdq
add
fsqrt
dec
pop
nop
xor
sub
ja
cmp
not
imul
pusha
sbb
xchg
clc
sub
call
cli
mov
jae
adc
jnp
ret
loope
popa
or
sbb
mov
je
adc
aam
mov
jne
xchg
cmp
mov
in
push
fdivr
xor
add
pop
data16
xor
shl
rcl
jo
das
pusha
mov
ja
add
rcr
sbb
jp
jne
push
inc
inc
cmp
mov
lahf
sar
push
pop
call
sub
sub
es
and
and
sbb
add
xchg
add
add
nop
dec
sbb
adc
imul
xchg
push
add
inc
jb
out
aam
scas
popa
(bad)
(bad)
nop
dec
ror
cmp
xor
cmp
xor
push
stos
mov
sbb
push
cld
pop
push
push
jbe
xchg
push
mov
stc
push
lds
sti
call
in
repnz
movs
sti
sti
sti
sti
ins
fs
sti
sti
sti
inc
imul
inc
inc
jle
jb
dec
inc
sbb
pop
mov
pop
mov
iret
and
rcr
and
mov
pop
sbb
es
push
arpl
adc
xor
lds
cmps
imul
sbb
mov
push
sub
stos
push
or
jmp
fldenv
shl
push
ret
xor
push
imul
dec
inc
adc
pop
xchg
test
cmp
rcl
xchg
outs
call
push
test
push
xor
jmp
test
inc
add
sahf
(bad)
cld
pop
imul
push
ds
mov
inc
and
ss
ja
dec
sbb
jmp
mov
pop
sbb
inc
pop
lahf
rcr
lock
out
jg
(bad)
addr16
sub
dec
test
cwde
bnd
sub
dec
das
mov
add
rol
or
cmp
sbb
jne
cs
and
test
in
mov
jb
not
add
and
mov
xor
xor
xchg
ret
cmps
out
mov
add
retf
pop
mov
dec
mov
add
shr
or
mov
xor
add
pop
cmp
mov
or
int
clc
lea
rol
ror
dec
cli
xor
scas
mov
in
mov
sbb
jmp
ja
out
inc
lock
stc
lock
out
sbb
mov
pop
jl
mov
jmp
ret
call
adc
aaa
and
hlt
cmp
repnz
adc
sbb
pop
and
add
sub
jl
and
ret
outs
call
(bad)
pushf
lods
fwait
sub
jo
add
push
lea
out
adc
js
inc
out
ins
xor
sbb
dec
push
xchg
call
sbb
inc
dec
inc
icebp
mov
shl
test
rcl
ror
xchg
js
test
mov
test
mov
cld
lea
mov
dec
sbb
push
rcr
jle
out
add
sub
jne
mov
call
adc
ins
repnz
jle
sub
jl
sti
push
mov
mov
push
xor
xchg
mov
or
add
test
enter
cmp
leave
xchg
js
add
je
fs
cs
js
mov
hlt
je
mov
dec
es
lock
nop
dec
xchg
push
sub
fs
cs
fs
in
xchg
and
in
es
pop
pop
cdq
nop
dec
xchg
pop
push
sbb
dec
scas
fs
push
push
xchg
or
jb
and
inc
jb
adc
int3
xchg
dec
enter
and
dec
xor
xor
les
pop
inc
cmp
adc
nop
rol
inc
jb
cmp
xor
xor
xchg
or
cmp
pop
xor
xor
sub
and
xor
enter
sub
and
test
xor
xchg
sub
and
lods
and
ins
ret
ficom
xchg
and
or
sub
in
and
mov
xchg
retf
nop
pop
test
rcr
add
nop
retf
add
add
xchg
add
and
adc
add
sbb
fs
sbb
nop
pusha
add
xchg
xchg
add
add
pushf
pop
inc
push
and
leave
and
pushf
pop
jb
add
add
leave
and
mov
pop
and
inc
xor
xchg
pop
and
sub
and
dec
or
xor
gs
and
sbb
sbb
in
jne
xchg
or
in
and
in
sbb
pushf
sub
inc
sbb
dec
scas
adc
xchg
mov
or
xlat
mov
add
add
int3
add
jg
mov
sbb
lock
xchg
xlat
js
xor
pop
shufps
add
mov
jne
movzx
test
in
adc
or
(bad)
mov
jp
hlt
inc
les
in
add
int3
xor
ror
cmp
cwde
cmp
in
adc
dec
sbb
sub
(bad)
imul
inc
sar
dec
scas
fst
mov
ficom
out
out
pop
cmp
add
scas
xor
sbb
in
fist
inc
cld
add
sbb
xor
scas
jl
sar
clc
add
stos
hlt
push
out
in
pop
js
pop
cmp
jne
sti
ja
push
dec
daa
stos
ins
adc
cwde
inc
loopne
dec
mov
lea
mov
add
hlt
or
push
sub
jle
out
dec
test
je
dec
sub
sub
mov
icebp
inc
aam
adc
jno
push
push
dec
movzx
sbb
pop
jo
int
je
cmc
ss
sbb
adc
jmp
aad
loopne
js
movs
jne
inc
cwde
adc
pop
push
inc
test
and
and
sti
sbb
push
push
fsub
mov
pop
inc
repnz
jle
add
inc
adc
inc
sub
les
adc
xchg
aam
jle
adc
pop
dec
add
pop
ret
(bad)
lds
add
stos
add
xor
setl
jp
xchg
xor
loop
or
sub
sysenter
je
dec
in
(bad)
es
sbb
imul
mov
lock
pop
inc
add
dec
push
inc
js
and
out
mov
repnz
repnz
mov
lock
mov
neg
lods
mov
jg
push
adc
push
sub
add
dec
pushf
je
or
xor
add
addr16
mov
stos
retf
std
inc
stos
or
add
mov
mov
cmp
adc
(bad)
test
push
movs
add
adc
mov
iret
and
push
aas
or
xor
inc
mov
add
and
mov
add
cmp
mov
add
cmp
js
loop
sub
jmp
push
rcr
dec
add
data16
loope
(bad)
xchg
xor
push
sub
jmp
jb
xor
or
cmp
fsubr
inc
sbb
js
pusha
jl
test
imul
popa
sub
dec
gs
test
push
mov
push
push
sbb
lea
lock
sbb
xor
nop
push
inc
or
mov
add
jp
xor
jne
xchg
mov
add
mov
dec
mov
or
call
xor
or
inc
or
push
cs
jb
test
jae
adc
cmp
mov
push
pop
(bad)
stos
and
lods
push
repnz
scas
sub
sub
adc
outs
cld
cmp
fiadd
popf
in
jmp
gs
mov
outs
(bad)
sti
cwde
lds
push
add
dec
inc
cmps
cld
push
fsubr
cmp
push
mov
adc
imul
lahf
pop
add
jmp
lea
ja
out
fucomp
add
rol
push
and
and
and
cmc
xchg
dec
add
adc
inc
mov
sbb
ret
test
add
xor
shl
sub
jne
iret
bound
mov
lock
mov
popf
push
iret
jl
dec
int3
int3
call
vphadddq
lods
outs
mov
sbb
ror
dec
jmp
pop
xchg
cmp
rol
mov
push
push
mov
xchg
call
inc
pop
fs
mov
stos
test
or
inc
add
gs
jne
dec
add
jb
arpl
inc
mov
ds
jmp
test
add
add
pop
or
sub
or
push
test
cdq
adc
mov
aaa
movs
test
jmp
inc
test
cwde
repz
cmp
vmwrite
cli
sahf
and
adc
scas
and
jmp
fistp
adc
nop
or
lds
hlt
mov
mov
lock
gs
fwait
adc
js
ret
ror
xor
pop
cmp
jo
cmp
jp
test
inc
adc
push
adc
adc
imul
add
and
or
cmp
jb
xchg
cld
mov
mov
adc
jb
add
xor
ins
pop
ret
mov
jmp
inc
add
clc
ja
cmp
pop
push
mov
rcr
sbb
add
shr
lock
mov
inc
jne
xor
add
xchg
clc
inc
js
xchg
lods
cli
cmp
xchg
or
xchg
aam
es
bound
inc
adc
push
ds
sar
ins
jl
je
call
pushf
jbe
jnp
xchg
jmp
and
test
fcomp
sar
imul
loopne
mov
sub
mov
aaa
fldenv
clc
cld
movs
add
rcr
test
fs
sub
aas
inc
mov
add
shl
mov
hlt
sti
add
das
add
or
add
cmp
out
ja
sar
jne
mov
sbb
add
aaa
sub
mov
sbb
cmp
jl
(bad)
mov
mov
(bad)
jmp
dec
pop
je
dec
inc
arpl
ror
xor
inc
mov
(bad)
nop
mov
pop
xchg
imul
cmp
xchg
scas
loope
rcr
bswap
pop
retf
sti
shl
inc
mov
inc
fsub
or
dec
jmp
mov
loope
sar
dec
mov
shl
mov
jo
sub
pusha
sub
mov
je
mov
inc
pop
dec
ret
pop
out
add
dec
cmp
hlt
push
adc
int
sub
push
fcomp
sub
inc
and
aaa
icebp
jle
cmp
xor
and
mov
sub
pop
jno
push
or
adc
mov
cmp
mov
mov
popa
sub
pop
clc
js
and
pop
push
sbb
ret
push
mov
daa
mov
xchg
pop
repz
loop
sbb
inc
push
aaa
pop
cmc
sti
fiadd
adc
repz
mov
repz
stos
jg
sub
movs
fs
inc
push
lods
sar
or
out
mov
add
or
pop
mov
stc
(bad)
jne
ret
into
xor
(bad)
into
ja
jnp
dec
bswap
sbb
mov
les
cmp
ss
cli
movs
fmul
mov
popf
jecxz
jmp
iret
sub
shl
test
push
loope
popf
xchg
push
hlt
jp
dec
daa
dec
jae
xor
xor
add
or
jp
cmp
cli
outs
aam
push
add
jo
sbb
adc
clc
cmp
jnp
ror
and
xchg
in
lea
mov
xor
fld
loop
fnclex
push
mov
xchg
outs
stc
sub
jo
das
imul
dec
xlat
shl
push
or
fistp
pop
movs
fmul
cmp
sti
in
pop
pop
mov
add
mov
jmp
and
fcom
pop
jge
mov
aam
jne
pop
inc
adc
sub
jno
sub
outs
fistp
add
xor
mov
jmp
stos
mov
cmps
test
inc
into
mov
dec
lock
sbb
pop
or
push
frstor
pop
push
mov
lods
jo
jne
outs
push
stc
je
xor
clc
add
popf
test
sbb
jo
cld
add
push
popf
jnp
and
sbb
shl
outs
scas
idiv
ror
jmp
mov
adc
mov
lds
out
sub
push
fnstsw
push
push
push
xor
push
push
push
int3
clc
popa
xlat
sub
add
jo
sub
dec
xor
jge
(bad)
jb
mov
add
loopne
xchg
jecxz
add
push
add
cmp
xchg
pop
sub
loopne
jle
out
(bad)
pusha
jnp
jecxz
push
and
cmp
bnd
bnd
repnz
or
rcr
and
(bad)
out
push
rol
sbb
xchg
pop
add
ins
xchg
gs
enter
jns
inc
dec
jmp
lea
push
cpuid
mov
add
mov
pop
push
fld
push
or
fmul
mov
xor
push
xor
or
fsubr
xor
or
push
ds
jae
cli
mov
and
cmp
cmps
jge
idiv
sbb
jo
cmp
push
jb
jbe
add
or
mov
in
iret
into
adc
push
and
pop
aaa
adc
rcr
in
jl
lock
add
stos
pop
je
lea
mov
mov
lods
dec
push
fs
push
fsubr
dec
mov
add
cld
cwde
loopne
xchg
add
loopne
xlat
add
adc
dec
arpl
mov
or
xor
push
loopne
jne
mov
das
mov
jge
ret
ins
shl
and
scas
test
inc
add
pop
and
or
dec
dec
out
cwde
push
ins
dec
stc
push
cmp
jbe
fsub
int
adc
mov
mov
push
cmc
imul
outs
test
mov
popf
xor
mov
movs
or
icebp
iret
retf
retf
test
ins
lods
push
std
lock
pop
jmp
add
xchg
adc
movs
jo
jl
ja
xchg
jbe
push
cmp
ds
push
jns
adc
aas
aam
dec
fbstp
push
inc
neg
pop
push
(bad)
sbb
gs
js
inc
jg
xor
add
js
js
movzx
push
sub
loope
and
out
fcomp
inc
push
mov
ret
and
fsubr
add
push
mov
into
or
add
or
sub
aad
adc
aam
mov
and
rol
mov
dec
sbb
cmp
aad
shl
sub
in
sub
adc
push
outs
arpl
fcomip
imul
jne
pop
adc
jne
sbb
je
cmp
push
call
add
pop
cwde
arpl
push
call
call
push
cld
add
fs
xor
jns
or
jecxz
clc
sub
pop
xor
adc
push
push
xchg
or
add
jmp
or
pop
pop
push
repnz
sbb
xlat
mov
jns
adc
jecxz
inc
cmp
(bad)
dec
sbb
popa
mov
or
push
cwde
sti
lea
je
add
gs
jb
inc
nop
mov
mov
and
add
mov
xchg
xor
das
xchg
pop
mov
div
je
cmp
ins
mov
jnp
jecxz
pop
dec
jns
rcl
out
cs
addr16
cmp
cwde
(bad)
sti
or
add
loope
or
adc
hlt
clc
clc
add
sar
and
inc
xchg
int3
mov
or
lea
shl
mov
xor
xor
push
dec
outs
int
pop
pop
mov
or
dec
mov
jne
mov
into
sahf
cli
sub
adc
adc
xchg
pop
jecxz
hlt
not
invd
inc
mov
fsubr
arpl
add
pushf
add
add
sbb
out
or
pop
cmp
or
sub
jne
adc
int
and
mov
mov
fisttp
mov
or
mov
ins
or
dec
add
fs
retf
int3
pop
push
mov
out
mov
push
jno
mov
or
inc
adc
fs
loope
jbe
or
push
pop
mov
out
out
hlt
mov
mov
mov
and
xor
adc
cmp
or
fsub
cmps
sub
fsub
cld
push
add
add
push
inc
adc
(bad)
jno
mov
mov
outs
adc
dec
sub
mov
add
pop
imul
or
sub
addr16
xchg
xchg
outs
add
or
mov
loopne
test
jl
mov
(bad)
call
mov
push
or
lods
push
push
les
imul
arpl
jbe
cmp
adc
jb
pop
test
popa
cld
mov
enter
(bad)
jp
or
mov
(bad)
js
pop
cmp
lock
sub
sub
pxor
outs
test
leave
je
adc
fadd
or
rol
push
pushf
sahf
xchg
cli
add
lods
sub
jne
fbld
pop
loopne
mov
xchg
add
push
mov
push
adc
push
inc
push
mov
cli
add
add
cmp
or
mov
ja
prefetch
js
mov
stos
test
jmp
add
and
jmp
movs
push
mov
(bad)
jmp
cli
jo
ret
cmp
or
jne
inc
lock
into
jmp
ss
jmp
or
sbb
out
jne
fisttp
or
pop
mov
shl
jo
cmp
pop
sti
sbb
pop
sub
sub
xor
jne
outs
loopne
imul
adc
sub
mov
lea
cld
xor
sub
stos
cmp
jne
mov
lahf
mov
xor
ss
sahf
out
retf
retf
enter
add
mov
xabort
int
cmps
rol
clc
clc
je
add
cmp
sub
aam
xchg
aam
enter
cmp
xchg
and
aaa
pop
out
jl
pop
bnd
mov
xchg
ror
jl
js
jae
add
in
push
or
stos
int
lds
or
ficomp
add
cmovl
cmp
or
mov
out
jecxz
scas
and
inc
sbb
sub
adc
ror
inc
mul
cmp
jmp
test
add
dec
pushw
bound
inc
fisub
jmp
arpl
sbb
mov
jno
sub
pop
outs
test
push
jne
out
push
adc
mov
sub
shl
inc
add
adc
pop
cmp
jmp
stos
xchg
leave
inc
xor
lea
fmul
adc
inc
add
cwde
sar
add
push
or
inc
ret
xor
sar
mov
out
leave
enter
mov
or
or
pop
js
add
dec
sub
mov
sub
sbb
push
popa
pop
adc
mov
out
cld
adc
adc
(bad)
popf
inc
adc
push
inc
rol
cmps
adc
add
fwait
aam
(bad)
inc
adc
sub
or
jae
bt
aas
dec
mov
push
and
add
pop
daa
call
mov
xchg
jl
xor
(bad)
test
and
test
inc
rcl
test
and
ins
push
fimul
adc
lea
lea
sti
gs
and
jae
movq
sub
jl
cvttps2pi
and
je
cmp
add
ja
mov
mov
outs
dec
hlt
inc
hlt
mov
adc
pop
xor
sti
push
inc
and
xor
mov
ins
pop
nop
psubusw
jg
sbb
ret
push
fiadd
sbb
in
outs
and
xor
ins
mov
scas
inc
or
or
mov
cmp
or
jmp
addr16
cld
inc
push
jbe
add
add
fadd
fs
ins
adc
outs
jno
and
bound
push
rcl
mov
mov
mov
out
xchg
jmp
push
je
loope
(bad)
mov
mov
dec
add
mov
aas
and
add
sti
loop
jmp
nop
or
lods
rcr
iret
mov
pop
xchg
jbe
dec
add
(bad)
daa
or
fwait
ret
add
xor
cmp
je
add
repnz
adc
push
hlt
adc
retf
mov
dec
dec
cwde
repz
inc
mov
ds
je
cld
out
out
pop
test
or
pop
push
jl
add
adc
js
das
daa
adc
cmovns
sti
dec
addr16
cmps
sbb
push
cs
cmps
shr
push
push
dec
adc
ds
iret
out
and
inc
outs
push
jbe
ds
jl
jo
pop
push
dec
dec
jg
jg
cli
repz
jl
addr16
jg
jg
jo
cmp
lea
ins
test
jne
cld
jb
lds
and
xchg
out
inc
adc
dec
loopne
push
add
or
inc
mov
je
push
sub
xor
inc
leave
ror
xor
pop
jo
icebp
retf
jmp
sahf
int3
mov
and
push
(bad)
aas
xor
jg
jmp
dec
movs
jb
mov
push
sub
data16
test
data16
data16
retf
mov
ss
jo
dec
mov
lea
sub
mov
push
inc
add
mov
fisttp
adc
mov
fiadd
cwde
and
mov
sub
mov
inc
inc
dec
jne
jge
adc
lahf
sbb
rcl
push
mov
imul
push
mov
shr
movs
mov
mov
retf
outs
push
shl
bound
pop
sti
dec
shl
dec
call
enter
ins
xor
pop
or
inc
cmp
rcl
push
mov
into
push
mov
std
dec
adc
or
je
jo
fcomp
(bad)
push
fistp
mov
cmp
push
dec
cmp
sbb
push
adc
mov
fcomp
inc
clc
fld
ja
fidivr
sbb
fadd
ins
mov
push
rol
pushf
retf
rcl
jp
call
call
sbb
sbb
aam
add
sahf
(bad)
xchg
test
jne
and
cdq
das
or
retf
cmp
stc
mov
lahf
div
mov
lds
test
adc
pminub
add
mov
dec
dec
lods
or
cmp
test
fisttp
(bad)
xor
aas
sbb
and
pmulhuw
dec
ror
jmp
lock
push
push
push
fadd
jbe
xor
push
dec
(bad)
mov
jmp
int3
jo
clc
scas
inc
or
aad
mov
ror
out
cmps
dec
loope
sub
jb
mov
shl
jno
jns
or
xor
sub
xchg
cmp
lods
dec
push
sub
mov
mov
push
mov
mov
inc
mov
cmp
ret
dec
push
lods
pop
cli
or
mov
cli
int3
and
xor
xchg
(bad)
jle
mov
test
je
add
les
movq
addr16
push
mov
shl
fucomip
stos
imul
or
push
pop
pop
ds
mov
xlat
inc
ret
adc
imul
add
mov
add
mov
or
stos
inc
cli
ret
push
popa
push
add
data16
add
sub
jne
je
out
sub
test
mov
nop
movs
rol
cmp
or
xor
push
pusha
jo
sub
jg
add
jmp
arpl
out
push
pop
test
and
mov
inc
sti
es
push
inc
bound
jne
fiadd
sbb
dec
cmp
sbb
sub
vmread
retf
cmp
inc
clc
ins
and
scas
add
mov
pusha
addr16
retf
fwait
js
mov
dec
call
xor
mov
mov
or
in
add
mov
add
add
jno
cld
fisubr
cs
cld
xor
scas
cli
sbb
inc
xchg
mov
or
(bad)
adc
push
cmp
shl
in
sbb
mov
out
add
int3
lods
or
fmul
mov
shr
add
sbb
and
in
push
call
pop
or
in
ins
sub
and
and
pushf
or
push
aaa
pop
jle
inc
aas
or
xor
push
xchg
imul
jge
fs
and
fs
pop
xor
imul
or
or
add
or
mov
push
pop
(bad)
mov
or
adc
or
dec
ins
inc
lods
mov
enter
jge
test
or
cmp
jle
cmp
loope
adc
cli
dec
imul
inc
mov
jge
push
xor
inc
push
ror
ja
xchg
pop
pop
aaa
fidiv
out
fsub
sbb
ret
sar
pop
cmp
adc
add
arpl
xadd
sub
jne
test
popa
inc
or
and
pop
push
out
inc
in
lods
push
loopne
sub
std
dec
inc
add
cmp
int3
cmps
or
sbb
pop
(bad)
ss
inc
jne
pushf
push
jp
aam
adc
lods
icebp
adc
mov
enter
stos
xor
push
pop
dec
and
cmp
mov
mov
in
dec
cmp
mov
shl
cs
push
cmp
xor
sub
call
icebp
jmp
inc
es
dec
enter
jmp
enter
mov
lock
sub
dec
inc
dec
cmp
push
or
adc
(bad)
jle
pusha
stc
jle
(bad)
jmp
jmp
push
and
jo
or
add
loope
clc
dec
mov
test
cmps
(bad)
push
push
test
or
cdq
scas
arpl
imul
lds
sub
pop
cdq
cld
shr
jo
out
pop
test
es
or
jl
add
les
push
push
add
fucom
sub
lds
or
das
xor
dec
pop
int3
or
cs
or
clc
(bad)
mov
ror
or
pop
inc
or
or
jne
loope
bound
test
gs
mov
pop
outs
xor
in
push
push
push
int3
addr16
dec
xchg
inc
push
idiv
mov
inc
movs
test
out
in
jge
mov
add
mov
cmp
je
lea
mov
add
mov
icebp
add
push
jnp
fidiv
loop
dec
push
imul
popa
aaa
jb
cmp
push
retf
out
xlat
sbb
dec
aam
dec
and
adc
hlt
je
cmp
(bad)
xor
cmps
or
add
ret
fisttp
mov
sti
cmp
adc
fiadd
xor
ins
push
shl
fsubr
out
mov
jmp
sbb
push
aad
mov
jl
(bad)
enter
shl
ret
push
dec
mov
mov
dec
mov
pop
adc
jmp
popa
shl
add
retf
ds
sub
test
add
adc
rol
repnz
cmp
je
jmp
arpl
mov
or
pop
cs
push
xor
dec
push
xchg
ja
mov
push
ret
inc
adc
and
jbe
xchg
jmp
dec
jmp
jnp
mov
rcl
shl
cli
xchg
pusha
js
gs
xchg
push
push
add
sahf
jg
push
xor
lea
in
test
and
je
jae
into
mov
or
inc
aad
(bad)
(bad)
sub
or
lock
cmps
out
or
add
stos
push
xchg
ins
(bad)
push
mov
scas
mov
inc
std
mov
fstp
adc
popa
loop
and
nop
jb
ins
dec
ret
loopne
bound
inc
retf
add
adc
cmp
push
jae
js
js
in
neg
or
push
out
sbb
out
dec
mov
scas
js
push
jae
fadd
jle
xchg
mov
push
jae
jns
retf
xor
adc
xor
sbb
push
fs
jg
sbb
aaa
lods
and
sahf
(bad)
sbb
sbb
cmp
cmp
sbb
and
jb
cli
test
not
ds
pop
mov
push
mov
cmp
adc
test
xchg
test
cwde
jne
pop
(bad)
adc
arpl
imul
jo
or
repz
mov
pop
add
lock
sbb
ror
sbb
aaa
push
jnp
add
dec
mov
(bad)
jno
mov
or
jmp
add
adc
pop
cmp
inc
cmp
les
dec
adc
push
rol
xchg
add
lds
or
push
les
sbb
xchg
jno
sbb
pop
mov
enter
sub
inc
jo
mov
scas
add
ins
jne
sub
dec
or
pop
jge
call
loopne
jne
in
lock
mov
mov
inc
in
add
add
rol
jne
clc
gs
data16
in
mov
cmp
in
rol
mov
int3
pop
and
add
jbe
add
xchg
mov
(bad)
sub
jb
imul
jbe
or
call
loopne
rol
or
retf
pusha
sub
mov
bsf
add
and
fcom
push
idiv
adc
mov
fadd
movs
or
ret
(bad)
lea
mov
cmp
je
jge
(bad)
push
sub
fdivr
push
neg
mov
(bad)
(bad)
(bad)
jle
div
retf
add
add
xor
shl
or
jo
loope
jbe
and
or
ins
ins
or
sbb
xor
shl
icebp
(bad)
cld
cmp
je
cmps
jmp
jns
out
pop
and
xlat
push
repnz
cmp
fs
or
js
std
js
test
cld
or
jl
sti
dec
lock
mov
rol
inc
or
sub
add
arpl
push
mov
daa
mov
xchg
pop
or
out
shl
pop
push
pop
dec
mov
inc
(bad)
fstp
mov
jmp
push
push
mov
imul
dec
adc
inc
pop
add
sub
mov
adc
cmp
das
test
adc
xchg
mov
pop
and
movs
loopne
xchg
jmp
adc
call
push
cmp
fcmovb
xchg
mov
push
push
mov
dec
adc
test
pop
es
jno
mov
jmp
mov
xchg
and
pop
leave
xor
dec
sar
jae
cmp
arpl
adc
or
dec
or
add
jge
mov
sbb
push
hlt
xchg
lahf
dec
adc
jmp
sbb
dec
mov
dec
icebp
test
arpl
and
add
mov
out
pop
cmp
mov
lea
and
in
les
bound
cld
dec
mov
in
push
fidivr
xor
lea
and
fcomi
cmp
sahf
sbb
mov
cmp
add
add
test
clc
add
cmps
test
pop
and
dec
mov
test
pop
sub
inc
das
mov
sub
cmp
add
mov
pop
and
push
bound
fdivr
dec
or
sti
std
div
imul
pop
fdivr
inc
cmp
jle
mov
or
and
jg
shl
lods
les
adc
stos
or
dec
ret
(bad)
push
push
loopne
push
cld
ja
push
or
fimul
or
je
inc
cmps
jg
or
iret
lods
cmp
sbb
cmp
inc
scas
and
sbb
pop
enter
jecxz
aas
daa
push
cmp
jg
xor
enter
cmps
bnd
push
(bad)
fidiv
sub
or
or
jnp
sbb
xchg
or
pop
adc
enter
ss
mov
add
js
inc
and
add
cmps
jae
jo
or
sbb
xchg
sub
xor
mov
cmp
jge
cli
call
imul
(bad)
mov
pop
mov
jg
pop
add
jne
push
push
sub
cwde
inc
adc
and
outs
cdq
xchg
iret
sub
pusha
push
push
mov
mov
ss
xor
or
push
add
push
dec
mov
sbb
push
ret
sbb
call
verr
mov
add
or
(bad)
in
dec
ret
mov
mov
adc
or
add
jle
push
adc
or
jbe
scas
push
adc
in
sbb
lea
jl
dec
mov
das
hlt
out
in
sub
fnstsw
jne
sar
and
or
dec
faddp
mov
shl
je
out
push
cmp
inc
in
xor
pop
fcomp
and
jp
jne
test
adc
lods
dec
hlt
mov
sbb
jecxz
add
push
xchg
adc
addr16
aam
pushf
push
push
push
and
push
push
sub
cmp
jae
push
pop
test
loopne
jns
mov
or
inc
lock
hlt
adc
sbb
pop
cld
into
loop
cli
mov
mov
daa
inc
inc
mov
xchg
and
call
lock
call
jle
sub
into
xor
pop
test
adc
fidivr
push
repnz
dec
sbb
ffreep
repnz
and
mov
or
jmp
xchg
push
icebp
hlt
(bad)
sub
in
fs
lds
test
mov
inc
xchg
mov
pop
cld
fcmovb
and
cmp
jmp
push
sub
call
outs
loope
or
pop
inc
(bad)
xchg
popa
jb
push
or
inc
and
(bad)
push
popa
jne
mov
pop
dec
lds
imul
jg
ins
cmp
and
fs
xor
jo
mov
jmp
mov
pusha
and
xchg
jno
cdq
dec
adc
push
popf
repnz
adc
rol
(bad)
push
les
adc
mov
mov
xchg
loopne
adc
mov
mov
dec
nop
xchg
sub
dec
test
pop
sbb
or
mov
(bad)
das
cmp
mov
div
je
pop
dec
dec
inc
loopne
sub
push
inc
and
imul
add
ret
jmp
add
mov
sbb
popf
cmp
xlat
dec
clc
stos
cmp
jae
lea
loopne
inc
hlt
jl
or
jg
mov
mov
xchg
loopne
pop
hlt
scas
add
push
sub
hlt
pop
or
cmp
pop
inc
(bad)
lock
xchg
test
adc
hlt
shl
cmp
je
jae
out
adc
into
inc
add
adc
jb
xchg
(bad)
mov
cmovb
push
mov
(bad)
jle
retf
xchg
inc
stos
mov
lods
or
lea
mov
cwde
enter
mov
push
sub
cmp
ret
adc
push
xor
ins
test
sbb
push
xchg
add
aaa
sbb
pop
push
jg
jmp
mov
pop
xor
sub
mov
jne
sbb
add
shl
ins
mov
fimul
sar
fmul
add
adc
iret
cmovbe
dec
add
xor
cmps
neg
xchg
loopne
dec
xor
mov
(bad)
loop
push
cld
scas
push
mov
or
mov
add
add
loopne
adc
pop
sub
lds
jge
stc
out
sbb
jp
movs
mov
inc
mov
mov
push
or
mov
add
jae
xor
mov
jno
adc
sbb
jmp
xor
push
or
and
push
int3
push
sbb
sub
cmp
aaa
popf
or
cmp
out
dec
jmp
adc
jge
repnz
shl
(bad)
pusha
repnz
jge
stos
adc
hlt
test
jns
cmp
mov
adc
cwde
or
add
in
jmp
loope
dec
xor
dec
scas
xchg
add
ins
loop
lea
jmp
xor
cmps
jmp
aam
shr
dec
rcl
enter
cmps
adc
pop
mov
push
ret
jbe
cmps
dec
cmp
repz
movs
cdq
je
cmps
sub
mov
adc
mov
pop
imul
shl
xchg
loopne
ret
ja
pop
jmp
dec
test
pop
add
jne
gs
push
and
push
imul
movs
les
adc
cdq
sbb
sbb
or
les
sub
inc
push
in
fmul
addr16
lea
cmp
out
jo
mov
gs
sbb
mov
(bad)
movs
ss
pushf
jle
test
cmp
mov
mov
or
arpl
jl
adc
lock
ja
add
inc
mov
sub
jmp
mov
sub
loopne
jmp
sub
inc
mov
push
and
scas
dec
imul
mov
out
and
sar
push
sub
add
ret
push
or
inc
sar
shl
add
je
cmp
push
cmp
cs
iret
push
xlat
or
cmp
fsubrp
pop
pushf
call
or
jle
je
xlat
jne
cmp
jb
cmp
jbe
mov
adc
cmps
hlt
pop
bound
test
and
mov
add
inc
cmp
mov
sti
jmp
(bad)
mov
mov
sub
retf
pop
dec
cld
sbb
jbe
dec
or
outs
test
dec
adc
add
sbb
ret
je
lea
mov
cmp
sub
xor
add
clc
push
mov
lods
and
add
je
push
jmp
add
test
sbb
or
xlat
fimul
add
mov
and
adc
aaa
jmp
mov
nop
push
nop
mov
sbb
(bad)
std
aam
lea
add
ds
in
fist
imul
mov
dec
std
stos
mov
sbb
rol
lock
out
or
lods
lahf
fisttp
std
pop
aaa
sbb
ficom
adc
movs
jo
(bad)
retf
ins
imul
icebp
sti
xor
xor
push
or
loop
jnp
cmp
add
repnz
lea
ret
nop
pop
mov
or
push
std
jl
push
mov
ret
sbb
mov
mov
ja
pop
inc
sbb
lods
add
inc
add
cmps
xor
test
popa
add
add
mov
bound
aas
pop
out
stc
mov
adc
movs
fcomp
mov
add
scas
adc
cmp
sbb
das
mov
fisttp
fwait
push
push
mov
xor
xor
in
xor
rcl
adc
and
loope
mov
shl
leave
xor
out
jecxz
hlt
rol
and
push
or
mov
sub
arpl
and
dec
push
pop
sar
rcr
adc
cmp
outs
dec
nop
push
sub
and
fsub
ror
ret
adc
push
push
push
leave
pusha
ja
pushf
sub
add
mov
(bad)
imul
mov
icebp
lds
push
or
push
mov
jl
outs
pop
inc
mov
popa
sbb
push
lods
dec
and
mov
retf
push
test
loopne
sbb
or
or
push
or
add
fild
pop
dec
push
mov
adc
nop
sub
movs
mov
push
push
pop
pop
ror
jae
fs
mov
push
sbb
adc
or
(bad)
ror
sbb
xchg
add
xor
pushf
pop
and
xor
sbb
mov
push
in
jo
mov
cmps
fimul
mov
add
adc
xchg
(bad)
mov
and
ret
xacquire
or
pop
fstp
jns
push
dec
cmp
inc
adc
out
mov
data16
xor
push
rcl
add
js
cmp
rcl
ret
inc
inc
add
test
unpcklps
sub
push
bound
fist
mov
xchg
push
sbb
and
push
add
sub
jne
push
cmp
and
adc
sub
pop
mov
arpl
add
xor
outs
les
mov
sub
push
dec
sbb
push
add
nop
push
or
fs
retf
or
repnz
sub
and
xchg
pop
leave
aas
or
dec
pop
(bad)
aaa
sub
push
add
sub
montmul
cmps
push
push
mov
sbb
sbb
scas
mov
push
xor
in
popf
lock
loopne
(bad)
popf
rcr
mov
lea
rcr
in
add
mov
(bad)
sbb
xchg
or
in
mov
push
test
pop
mov
lea
data16
movs
stos
pop
pop
loopne
sub
mov
movs
ins
adc
adc
xor
or
jne
stos
int
(bad)
inc
test
fsubr
and
cmp
out
shl
jbe
jmp
sub
je
ffree
pop
gs
mov
jmp
push
sub
jle
mov
mov
cmp
jmp
mov
and
mov
pop
out
call
test
fist
ret
out
mov
and
jb
xchg
in
pop
mov
xor
repnz
add
jbe
enter
xor
bound
cmp
js
neg
pop
das
jmp
fbld
jo
std
push
sbb
add
pushf
test
(bad)
jmp
add
adc
jns
and
jmp
test
sar
inc
adc
jbe
inc
test
pop
cmps
xchg
or
cmp
pop
arpl
mov
dec
push
mov
fcomp
shr
aaa
inc
inc
jmp
div
movs
sub
stc
lods
add
xchg
or
jnp
push
push
push
pusha
add
cmp
push
dec
gs
mov
xor
mov
xor
xlat
pop
(bad)
jp
pop
sbb
(bad)
pop
xchg
and
add
mov
or
pop
(bad)
or
add
imul
cli
dec
(bad)
or
xchg
call
push
mov
mov
cmp
push
leave
jmp
mov
xchg
add
js
leave
jl
push
sub
jnp
fdivr
xor
scas
mov
add
cs
(bad)
data16
sahf
pop
or
rol
jns
inc
sti
call
add
hlt
add
ret
mov
inc
lea
mov
jmp
clc
xor
xchg
push
outs
pop
jg
mov
clc
mov
mov
mov
dec
add
mov
mov
cmp
jle
cmp
jmp
add
add
xchg
popa
jg
xor
lds
sub
push
dec
mov
dec
cld
dec
push
in
push
or
sub
mov
out
cmp
xor
cmp
push
mov
inc
mov
add
pop
cld
push
cmp
or
sub
mov
add
jle
lea
push
inc
aam
cmp
cmp
xor
xor
jmp
sub
aad
and
movsx
arpl
fcom
pop
pop
popa
push
adc
add
add
shl
sbb
jl
xor
and
mov
cmp
mov
movs
adc
(bad)
rcl
call
push
push
push
push
push
ficomp
push
push
sub
retf
movs
imul
jg
inc
mov
pop
xchg
or
sub
sbb
shl
adc
sbb
pop
fiadd
icebp
and
scas
add
test
jl
scas
or
cmp
push
add
add
pop
push
daa
imul
pop
mov
pop
inc
cmp
lock
mov
mov
sahf
inc
xor
jmp
push
rcl
ja
dec
mov
dec
dec
push
adc
and
aaa
pop
jo
fmul
dec
mov
mov
mov
or
(bad)
enter
fadd
pop
pop
or
adc
push
sub
pop
xor
mov
js
cmp
pop
mov
mov
xchg
pop
lea
mov
or
add
ror
push
push
push
or
adc
daa
mov
pop
mov
push
push
xor
fs
mov
mov
cmp
lods
ficom
push
pop
dec
shl
int
jno
add
or
test
sbb
add
or
cmc
sbb
add
jmp
push
or
mov
call
cmp
je
cmp
jne
dec
mov
inc
inc
mov
jmp
inc
loopne
pop
ja
lods
ror
cld
dec
js
inc
test
mov
out
inc
mov
or
test
sub
ss
add
add
imul
and
arpl
push
mov
shr
adc
ins
aad
adc
push
sub
inc
aas
jnp
nop
js
jb
jmp
inc
dec
sbb
outs
adc
or
cmp
js
add
daa
xor
xchg
mov
mov
mov
mov
mov
or
rol
sbb
push
inc
push
push
push
into
mov
and
sti
rcl
pop
xchg
inc
(bad)
das
imul
pop
xor
int3
cmp
pop
add
and
cs
dec
or
pop
and
inc
sub
mov
xchg
iret
inc
cli
mov
jne
mov
push
loope
pop
and
cmp
push
adc
mov
sti
stos
mov
mov
add
adc
mov
jl
add
mov
inc
and
inc
ins
and
in
lds
mov
mov
mov
dec
sub
xchg
pop
xor
and
sub
sti
imul
cmp
cmp
pop
jmp
adc
sub
lahf
adc
loopne
js
pop
mov
and
std
cmp
push
into
addr16
test
xchg
and
sub
outs
rol
sbb
or
mov
out
ss
sub
aaa
sub
nop
xchg
mov
jb
cmps
xchg
cmp
loope
cmc
xor
inc
push
iret
cmp
jb
sub
push
(bad)
cmp
repz
cmp
loop
xor
ret
adc
dec
popf
call
cs
sahf
out
aaa
dec
push
pop
arpl
sbb
bswap
xchg
fnstcw
in
xchg
nop
mov
xor
mov
les
enter
ret
dec
add
leave
and
lock
call
sub
inc
out
daa
xchg
pop
mov
xchg
jns
jb
or
mov
leave
sub
mov
add
dec
inc
inc
repz
or
push
test
repz
cdq
mov
std
adc
sub
je
or
je
aam
push
or
dec
and
jmp
or
adc
jmp
sub
icebp
cld
and
add
push
mov
xor
mov
lock
jb
xor
dec
mov
sbb
dec
gs
lock
push
and
cmp
push
dec
cwde
movs
sbb
scas
push
(bad)
aad
stos
and
mov
push
push
xor
shl
and
mov
mov
xor
movs
inc
jae
rol
scas
adc
push
je
test
sbb
add
cmp
sub
test
cmps
jne
xchg
jmp
sbb
and
daa
inc
in
pop
test
or
movs
jb
int
mov
add
adc
into
or
sub
enter
clc
xor
adc
sbb
inc
inc
dec
sub
add
inc
rol
xchg
sub
mov
lock
cmp
pop
add
pop
and
push
and
stc
aas
xor
mov
js
push
aaa
mov
jg
outs
cmps
scas
sbb
je
or
push
je
add
and
push
mov
push
out
push
enter
loop
ficomp
sbb
pop
or
inc
xor
cmp
jle
in
inc
mov
cmp
jne
ss
ucomiss
inc
or
jne
div
call
imul
jne
js
add
pop
jne
inc
add
push
push
adc
sbb
je
inc
dec
in
fidiv
cmp
adc
sub
fiadd
in
ret
jns
add
(bad)
cmc
stc
xchg
sbb
ret
inc
pop
or
or
ret
wrmsr
or
xchg
sbb
aad
dec
mov
bound
daa
xchg
psrlw
mov
loope
xor
pop
cmp
aam
cmp
push
xchg
push
test
pop
fld
ret
nop
dec
mov
ret
and
push
sbb
mov
and
ss
jecxz
cmp
fidivr
imul
repz
out
popa
shl
js
pop
dec
push
outs
repz
cmp
daa
push
pop
or
neg
sub
add
mov
jg
ins
shl
jg
je
or
pop
inc
push
or
mov
inc
jle
pop
xchg
fcomp
xchg
and
out
push
pushf
push
sub
sti
not
pop
(bad)
call
jne
push
push
iret
(bad)
jmp
adc
mov
jmp
jo
dec
je
or
jle
jnp
movs
shr
outs
jne
mov
jmp
adc
and
or
or
shr
jmp
cli
jmp
inc
retf
repnz
rcr
scas
imul
(bad)
(bad)
cmps
push
cmp
cmp
jl
pop
mov
dec
mov
push
cmovne
leave
push
clc
mov
sbb
mov
je
adc
push
(bad)
xor
adc
jmp
fist
inc
clc
shr
das
and
mov
cmp
cmp
addr16
mov
or
xor
lock
adc
shl
cmp
rol
inc
jnp
mov
std
call
cmp
cmp
shl
test
jbe
push
lea
movs
sub
fdivr
nop
aas
loope
or
push
lea
xlat
xchg
lea
loopne
jmp
pop
jne
push
mov
xor
dec
ror
gs
fdivr
out
call
arpl
adc
inc
or
add
inc
enter
fcom
and
leave
add
adc
repnz
xchg
aas
(bad)
test
jne
inc
pop
push
icebp
mov
jnp
loope
rcr
jbe
aas
push
jns
xchg
adc
mov
retf
jno
add
push
rcl
adc
enter
jmp
mov
test
push
mov
jb
pop
into
push
jmp
leave
jle
add
push
cmp
pusha
push
leave
push
rol
fadd
pop
hlt
fs
data16
bound
shl
or
pop
mov
jmp
inc
sub
adc
rol
jbe
push
inc
fmul
shr
hlt
jl
dec
xor
outs
xchg
dec
cmp
jne
jg
clc
test
push
add
mov
ss
push
jl
mov
xchg
xor
jl
jb
(bad)
ret
sbb
call
jle
sti
imul
push
hlt
in
push
movs
pop
push
push
push
in
push
xor
cmp
add
int
xor
mov
aam
leave
and
pop
inc
neg
sub
and
call
aam
or
and
pop
jnp
int3
or
movs
push
jmp
push
jmp
(bad)
fucomi
jns
or
lock
cmc
cli
pop
inc
or
xchg
lock
add
aaa
bound
inc
cli
inc
js
cmp
hlt
mov
sbb
mov
out
ss
mov
mov
cmp
mov
cmp
aam
push
jmp
loop
inc
and
cmp
lods
adc
test
(bad)
outs
iret
sbb
push
int
push
enter
cmp
mov
mov
imul
mov
and
daa
mov
cmp
pop
adc
mov
hlt
inc
push
mov
ror
add
push
push
mov
or
test
sbb
sub
xor
xchg
rol
pop
pusha
sub
adc
push
mov
inc
sub
fs
ret
mov
jne
call
cmp
inc
ror
xor
mov
push
(bad)
js
add
push
sub
(bad)
xor
push
jbe
pop
pop
push
in
sbb
xchg
jnp
sub
push
test
xor
or
or
dec
call
ror
sbb
mov
jae
jp
mov
inc
test
repnz
xor
mov
dec
mov
call
mov
icebp
mov
xchg
jnp
imul
pop
jne
inc
push
pop
xchg
nop
add
mov
xchg
out
inc
addps
pop
xor
pop
scas
shl
(bad)
not
fld
popa
ins
and
push
jecxz
fs
mov
cmp
push
add
cmp
cmps
leave
iret
mov
bound
je
test
movs
pop
pop
ins
push
aaa
rcl
jno
cld
into
ds
push
jns
jne
aad
pop
and
sub
mov
inc
and
mov
repnz
mov
push
dec
adc
cmp
loope
sbb
and
movs
dec
mov
sub
popa
sub
xor
push
push
dec
or
je
pop
sub
popa
push
daa
adc
xor
add
cdq
fisttp
dec
sbb
jmp
sub
add
loop
mov
aam
jmp
cmp
movsx
and
cmp
or
sbb
mov
xchg
or
cmp
and
adc
adc
neg
imul
fiadd
pop
jge
adc
rcl
and
jnp
jnp
loopne
and
sub
sbb
ret
add
fstp
jecxz
or
mov
jmp
adc
push
pop
rcr
movs
cmp
xor
sub
push
retf
mov
inc
inc
mov
call
add
ins
fbstp
pop
popf
pop
adc
test
shl
into
push
cdq
push
or
sub
push
add
adc
push
(bad)
push
aam
mov
mov
aad
mov
and
or
push
(bad)
vpmacsdql
jp
and
cdq
ja
popa
jno
das
xchg
pop
mov
and
add
push
mov
dec
outs
push
sbb
sub
and
xchg
mov
push
jge
mov
xor
dec
mov
mov
or
or
test
xor
sti
or
mov
mov
cmp
jle
push
pop
fst
mov
cld
(bad)
xor
dec
je
inc
inc
test
add
dec
or
mov
add
sbb
add
cmp
sbb
inc
test
or
or
push
call
sar
(bad)
jg
mov
mov
(bad)
loopne
retf
xor
stc
push
bound
lods
add
jmp
js
cld
and
adc
sub
clc
xor
test
inc
dec
adc
mov
inc
push
mov
mov
inc
and
push
pusha
rcl
jp
in
dec
fcmovb
cmps
sbb
xchg
jecxz
mov
add
ror
add
cmp
pop
add
jl
push
mov
ins
mov
js
jmp
sbb
inc
pusha
or
cmps
mov
sbb
sbb
inc
or
test
adc
sar
cmp
pop
sar
add
movs
add
push
lock
mov
sbb
push
dec
sub
ins
xchg
push
je
jecxz
movs
arpl
inc
jle
cmp
add
jne
in
mov
inc
or
sbb
cmp
les
ss
push
nop
bound
inc
pop
fcom
fcom
cmp
or
push
aaa
jne
dec
mov
pushf
mov
jmp
js
xor
inc
or
fbld
fwait
cli
sbb
dec
shr
add
inc
cmp
ret
sbb
movs
unpckhps
(bad)
add
push
pop
push
dec
outs
add
das
call
xor
inc
outs
test
push
xor
fsubr
xchg
clc
mov
adc
jnp
cmp
xor
in
and
sub
cs
cmp
cli
push
ss
xor
push
pop
add
adc
jns
mov
pusha
psubb
fadd
jo
push
add
leave
dec
shr
rol
pop
dec
neg
sub
jl
push
sub
js
jb
xor
mov
adc
(bad)
mov
push
jnp
sbb
or
add
xor
test
dec
cs
bndstx
and
or
and
jp
jp
lods
dec
push
push
dec
sub
and
add
mov
scas
loopne
add
pop
xor
or
ins
jge
psrld
xor
pop
pop
or
int3
rol
jmp
fld
test
lock
test
lods
(bad)
cmp
cdq
jmp
movs
out
sbb
inc
clc
lea
int3
cmp
push
cdq
aam
ret
in
les
pop
cmps
loopne
xor
loope
mov
jo
xor
dec
test
and
in
repnz
mov
dec
cmp
sbb
in
xchg
jne
xlat
add
push
pop
mov
ret
xchg
xor
xlat
das
jmp
mov
sub
nop
ds
(bad)
and
in
xchg
mov
push
ins
and
(bad)
and
leave
xchg
fwait
imul
jne
pop
cmp
and
mov
xlat
jp
cmp
je
add
std
ins
shr
(bad)
adc
lea
lock
mov
mov
cmp
lock
inc
and
mov
push
ss
imul
push
movzx
or
rcr
push
std
inc
cld
ret
inc
or
xchg
ret
inc
fstp
and
lds
xor
add
enter
fdiv
mov
push
pop
xchg
loop
jp
dec
jg
loope
js
div
js
mov
or
mov
pop
cdq
out
fsub
or
and
jmp
add
repnz
add
ss
inc
in
inc
sbb
fs
xor
inc
lock
lods
push
mov
adc
mov
faddp
pop
es
or
(bad)
out
into
or
arpl
xor
repz
sbb
pslld
gs
mov
pop
add
repnz
jge
mov
cmp
std
push
shr
retf
fdivr
mov
out
mov
cmp
test
cmp
sbb
pusha
lods
sbb
adc
or
add
push
xor
pop
inc
inc
add
and
inc
mov
inc
sahf
ror
dec
shl
loopne
mov
xchg
adc
ins
or
ja
push
dec
test
cwde
sub
sub
cmp
sub
jne
ins
sub
(bad)
adc
mov
xor
push
(bad)
sub
lods
mov
clc
inc
sub
lea
rol
xor
and
lock
mov
adc
or
dec
and
mov
adc
add
xchg
cmps
inc
push
icebp
push
int3
sub
and
and
mov
mov
sub
inc
adc
fimul
dec
icebp
daa
stos
dec
mov
mov
jbe
cmp
or
popa
push
clc
sbb
scas
mov
push
clc
stos
push
pop
add
pop
push
cmp
mov
ror
shl
and
xchg
cmp
sar
imul
outs
xor
out
fwait
mov
add
clc
mov
cwde
jne
xor
out
sbb
adc
sub
sbb
sti
push
iret
adc
call
retf
lods
sub
stc
mov
dec
adc
push
xor
verw
cs
into
cli
rcl
aaa
clc
or
dec
call
add
add
push
loopne
pop
push
and
lock
test
cwde
cmp
test
int3
jno
push
dec
dec
hlt
push
adc
adc
enter
push
xor
loope
adc
cli
dec
loopne
sub
or
mov
das
mov
jo
jg
xlat
pop
mov
out
and
and
dec
ja
jo
inc
jo
mov
jb
inc
or
jo
push
in
jo
push
and
or
int3
jo
push
push
mov
xchg
das
das
lods
fisub
sahf
out
retf
retf
mov
loopne
mov
repnz
adc
ins
sbb
push
sub
pop
inc
add
add
pop
xchg
popa
or
iret
add
or
adc
jae
push
mov
call
and
ret
jae
push
loopne
push
iret
xchg
add
jae
sub
or
ret
shl
xchg
fldenv
mov
in
js
mov
in
in
pop
jg
test
jb
jb
jo
mov
dec
inc
and
or
push
pop
pop
es
jecxz
mov
in
ror
sar
(bad)
int3
jns
cmp
enter
test
jns
cdq
mov
lods
jae
sar
fsubrp
jmp
push
movs
jb
sub
repnz
xchg
jb
mov
dec
cmp
jb
dec
jl
loopne
xor
jb
ss
and
nop
not
pop
fs
add
pushf
cmp
xchg
ins
ja
inc
push
repz
lahf
push
jbe
adc
sub
push
ja
sbb
ins
call
xchg
jge
shl
call
or
test
push
dec
push
test
test
pop
pop
test
ffree
pusha
sbb
jnp
mov
xchg
xchg
mov
ins
push
(bad)
pop
inc
mov
or
or
push
sub
and
push
jge
out
jne
dec
cmp
dec
xlat
je
loopne
cmc
xlat
rcr
or
shl
(bad)
in
and
lea
in
inc
fistp
xlat
dec
sar
dec
ror
ss
xlat
ds
lods
push
test
push
xchg
in
xlat
jle
movs
lods
push
aam
push
xchg
in
xlat
ds
imul
mov
ss
dec
xlat
dec
rcl
dec
rcl
dec
shl
retf
and
ror
xchg
retf
dec
dec
ror
fs
(bad)
ror
ror
lea
add
rol
adc
mov
inc
dec
movs
ror
dec
pop
loope
loope
cmp
mov
ret
cld
std
jp
mov
mov
dec
push
loope
das
xor
pop
inc
ror
daa
sbb
hlt
into
xchg
mov
enter
pop
inc
xor
imul
jp
add
scas
test
or
or
loopne
pop
push
push
cmp
sar
(bad)
scas
icebp
out
aaa
pop
or
cmp
pop
cwde
stc
inc
imul
push
enter
sbb
mov
sbb
mov
mov
jmp
scas
jmp
pushf
jmp
jb
popf
jmp
popf
jmp
and
popf
fs
icebp
pop
jl
jae
imul
fimul
mov
push
in
cmp
jg
icebp
movs
in
inc
pop
add
call
out
push
aam
pop
push
retf
or
mov
sub
inc
in
movs
mov
sbb
adc
sbb
or
jb
mov
in
sbb
div
dec
dec
fs
out
cmp
mov
push
sbb
push
jb
mov
push
imul
xor
aas
xor
fs
dec
dec
push
and
sbb
push
shr
cdq
int3
pop
xchg
int
in
cmp
ds
and
sar
int
dec
mov
push
mov
sub
mov
or
xchg
das
and
into
in
sbb
shr
and
add
cmp
stc
mov
div
loope
out
adc
pop
xchg
mov
sbb
movs
test
sbb
pusha
lea
inc
mov
mov
rcr
jns
int
mov
adc
cmc
sbb
fistp
mov
jl
push
pusha
test
sbb
inc
or
add
add
adc
mov
pop
push
jmp
dec
jge
add
add
push
sub
pop
rol
mov
(bad)
sbb
or
fdiv
es
out
xchg
jmp
and
ror
mov
sbb
inc
adc
adc
mov
sbb
or
inc
iret
pop
add
dec
fdiv
loopne
jb
cmp
or
or
cdq
inc
sub
dec
rcl
int
jns
ss
adc
call
push
xchg
jne
push
inc
cmp
or
(bad)
ret
sahf
fwait
lea
leave
add
pop
out
rol
lea
sbb
cmp
add
(bad)
sub
adc
test
xor
jg
dec
add
or
add
stc
push
cmp
pop
(bad)
sub
adc
jnp
push
lock
mov
push
push
je
cmp
lods
out
lock
and
or
outs
pop
imul
push
pop
push
stc
inc
jmp
push
clc
(bad)
loopne
pop
mov
je
jo
xor
out
gs
sbb
lahf
xor
adc
pushf
pop
jns
fiadd
(bad)
jl
dec
adc
test
cmp
mov
cs
dec
sub
jne
xchg
pop
aaa
cwde
pop
xor
dec
fdiv
jns
jg
sbb
adc
mov
xchg
cdq
and
inc
adc
sahf
in
mov
faddp
shl
sbb
sar
movs
jmp
push
sti
test
lds
into
push
lock
pop
shr
sbb
js
inc
xor
mov
mov
mov
sti
fst
out
sahf
ins
jp
lods
(bad)
fild
cmc
out
adc
or
popf
sbb
adc
push
paddsw
jl
fmul
sbb
not
jmp
cmc
jmp
and
ds
dec
jmp
push
mov
outs
rcr
out
out
add
mov
push
icebp
outs
push
jge
iret
repz
mov
std
and
push
pop
(bad)
pop
jg
(bad)
pop
and
retf
mov
cwde
pop
sub
adc
sbb
add
jne
jmp
mov
fmul
clc
cmp
js
gs
inc
rol
mov
mov
sbb
push
cmp
bound
into
inc
aad
mov
movs
nop
test
sub
outs
lahf
push
mov
and
inc
sbb
test
in
mov
inc
or
or
neg
adc
jb
or
jne
(bad)
sub
hlt
mov
repz
jae
ret
(bad)
stos
or
jb
mov
daa
cmp
sar
dec
jbe
xor
and
pop
or
and
jb
data16
repz
or
mov
daa
fnstenv
cmp
push
cs
or
das
stc
sahf
inc
arpl
xor
jb
daa
fild
rcl
loop
(bad)
mov
test
xor
pop
daa
out
test
mov
push
or
(bad)
call
push
and
cmps
pop
push
test
or
adc
rol
pop
hlt
popf
push
inc
push
pop
mov
aas
and
mov
adc
push
mov
jle
sub
popa
sbb
xlat
mov
movs
add
shr
fsubr
adc
loopne
in
mov
icebp
lock
push
pop
push
repnz
adc
mov
jle
dec
lea
dec
xor
daa
sub
or
dec
mov
dec
jbe
sbb
add
add
cs
sar
mov
arpl
mov
fidivr
jb
and
push
inc
idiv
dec
push
xchg
push
add
pop
inc
mov
inc
xor
ficomp
jae
jmp
mov
jns
jae
push
stc
loop
pop
test
push
or
outs
scas
mov
push
ja
out
out
(bad)
add
pop
sbb
jle
das
cli
stos
movs
(bad)
enter
pop
jge
jae
xchg
sar
dec
cmp
and
push
xchg
pop
mov
mov
and
sub
je
inc
adc
pop
hlt
cmp
inc
in
emms
add
dec
adc
add
sbb
cld
push
inc
mov
pop
add
add
rcl
out
pop
fiadd
cmc
popa
push
sub
jne
lahf
adc
shl
sub
xchg
shr
add
repnz
inc
inc
add
mov
pusha
movs
fiadd
out
ins
inc
loopne
jl
add
dec
loopne
es
or
nop
push
inc
data16
adc
cmp
psadbw
cld
movd
neg
sub
fisttp
add
xor
adc
rol
add
nop
jg
(bad)
mov
fldz
add
adc
dec
loopne
lods
and
sbb
int3
fstp
sub
push
or
sbb
fiadd
push
mov
mov
movs
in
adc
setb
and
sub
push
mov
lock
cmps
nop
push
fistp
lock
(bad)
sub
sbb
push
push
jne
add
push
loopne
sbb
repz
or
cli
xchg
push
mov
out
ds
and
add
(bad)
test
dec
or
jecxz
xor
mov
test
repnz
cmp
push
jmp
inc
mov
inc
add
mov
jb
lock
lods
in
sbb
cmp
jne
dec
in
je
lods
or
sbb
mov
loopne
jecxz
sbb
les
rcr
jne
jmp
add
mov
mov
ss
js
sbb
jmp
addr16
xor
ds
fistp
push
push
neg
cmp
(bad)
icebp
cmova
fimul
pop
add
inc
pop
out
fistp
push
scas
test
or
sbb
mov
fs
cld
clc
hlt
sbb
dec
cs
call
repnz
jo
(bad)
in
adc
jo
mov
shl
fst
pusha
cli
not
loopne
loope
push
ror
rol
jae
in
call
pop
push
call
and
mov
pusha
test
out
cmps
or
inc
push
shl
ror
inc
pop
pusha
addr16
jo
mov
ins
adc
imul
pusha
add
rol
jne
lock
or
push
movs
mov
xor
ficom
jg
adc
or
fdiv
and
push
adc
xchg
pop
dec
push
push
add
mov
mov
xchg
push
xor
or
aaa
test
jnp
fwait
mov
dec
push
movs
movs
cmp
pop
arpl
xor
inc
push
ss
or
ret
or
push
ins
inc
sub
xchg
loopne
mov
add
and
pop
movs
or
popa
adc
add
sbb
pop
push
cmps
sub
xchg
mov
pop
mov
xor
push
cld
dec
aam
cmps
cmps
pop
sti
push
mov
push
and
bound
xchg
outs
loop
sub
cmp
jne
adc
cmps
sbb
mov
int
cmp
cmp
es
aam
fcomi
pop
aam
sahf
jge
and
fs
lea
xchg
jp
jns
add
arpl
sti
add
or
and
and
dec
sahf
cmp
fwait
clc
push
inc
imul
mov
add
lods
xchg
je
test
rol
inc
fdivr
cmp
cmp
ja
mov
push
or
jo
jmp
inc
int3
dec
jne
push
and
cli
gs
jno
mov
add
popa
iret
int3
and
pop
xchg
sbb
sub
inc
and
aad
dec
pop
cmp
ja
pusha
ja
and
inc
pusha
mov
sbb
jmp
and
sub
add
and
mov
inc
mov
sub
and
call
push
scas
inc
outs
sub
mov
icebp
sub
add
mov
jmp
adc
(bad)
repnz
in
aam
bound
add
pop
cld
(bad)
inc
jbe
les
mov
add
test
add
neg
mov
mov
pusha
adc
fsub
test
lock
mov
mov
inc
mov
sbb
loopne
ror
repnz
out
dec
inc
and
xlat
cmp
xchg
add
mov
test
sub
into
sbb
loop
add
enter
cmp
hlt
mov
push
fdiv
push
mov
je
mov
inc
inc
inc
(bad)
daa
data16
fs
mov
mov
sbb
sahf
ret
jmp
loopne
fcomp
jne
std
jle
add
sub
(bad)
or
call
adc
(bad)
adc
or
je
add
mov
(bad)
fdiv
xchg
scas
and
pop
in
add
dec
xchg
push
xchg
arpl
lea
add
aam
call
mov
in
aaa
and
push
ficom
cmp
jb
mov
mov
push
push
add
xor
xor
mov
fsub
sbb
and
loopne
(bad)
call
std
in
jb
shr
std
dec
xchg
mov
dec
inc
fadd
cmp
sub
cmp
mov
xchg
pop
dec
lods
test
inc
add
(bad)
fucom
pop
cmp
jle
push
cmp
stos
movnti
push
xchg
cmps
jns
js
adc
inc
outs
add
push
fsubr
les
cmp
add
adc
push
or
cmps
ret
test
cmp
loopne
les
add
push
cmps
ds
push
or
fcom
pop
loope
mov
add
push
xchg
add
jl
push
fs
and
xor
xchg
rcr
loopne
(bad)
test
xchg
lahf
mov
jo
add
adc
mov
xor
cmps
add
mov
mov
sbb
cmps
inc
inc
aas
cmp
and
shl
scas
hlt
in
cmp
(bad)
fdiv
jmp
inc
das
mov
cld
and
add
inc
add
rcr
(bad)
xor
gs
call
inc
dec
test
jne
and
xchg
lock
push
mov
mov
add
pop
adc
aas
movs
xor
fisub
inc
inc
mov
pop
not
ret
scas
not
adc
and
mov
or
int
push
fadd
adc
popa
push
in
test
mov
pop
push
clc
mov
imul
cmp
cs
in
js
and
sub
or
fmul
repnz
or
adc
call
enter
mul
mov
sub
out
xchg
rcr
test
adc
(bad)
sub
sar
sbb
add
les
(bad)
cmps
in
push
and
and
popa
push
jns
lock
aam
test
hlt
imul
fcomp
cmp
(bad)
test
dec
mov
retf
js
mov
test
add
xchg
jo
sub
mov
mov
popf
add
ror
jne
loope
cmp
shl
das
add
jae
mov
jg
inc
add
xor
(bad)
retf
loopne
or
sub
pop
cmp
int3
pop
cmps
cmp
lods
sub
test
adc
mov
mov
ins
adc
inc
dec
pop
add
mov
gs
nop
inc
and
in
stos
or
aas
popf
xchg
into
es
push
cmp
ret
dec
and
clc
or
lock
inc
fnstenv
sar
sub
push
lock
icebp
pop
enter
mov
repz
es
push
pop
mov
adc
cwde
or
dec
inc
push
xor
cmc
shr
rol
out
push
add
stos
pop
xor
jns
dec
and
mov
es
inc
lea
cmp
inc
outs
add
jnp
rol
add
(bad)
sbb
pop
div
pop
or
mov
adc
fld
cmc
bnd
daa
cmp
inc
sti
mov
and
add
sub
sub
or
(bad)
aaa
push
daa
push
jne
and
(bad)
cmp
mov
in
mov
jns
add
(bad)
cmp
je
out
gs
or
mov
rol
mov
mov
inc
ror
jg
push
push
adc
mov
inc
xlat
dec
sub
xchg
je
cmp
leave
and
loopne
aas
cld
pop
dec
pop
add
cmp
lea
pop
test
pop
and
xchg
ret
or
rcl
lods
add
fwait
adc
aas
jbe
out
jo
mov
xor
or
repz
dec
pusha
stos
mov
icebp
sbb
lock
scas
mov
mov
jge
sbb
or
test
dec
or
scas
push
in
(bad)
in
jecxz
mov
add
cmp
je
mov
and
mov
scas
outs
add
inc
jno
sti
stos
out
dec
pop
(bad)
rol
movs
rol
test
out
test
shr
inc
inc
and
(bad)
and
xchg
fsubr
into
adc
inc
add
cmp
jle
rol
enter
push
cmp
popf
(bad)
cli
mov
push
pop
test
sub
fisttp
dec
mov
in
sub
cmc
pop
stos
add
leave
out
(bad)
ror
cmp
jl
push
dec
mov
lss
pushf
xchg
xchg
jns
neg
fs
outs
inc
je
push
or
je
pop
fsub
xor
shr
test
ror
iret
or
xor
lea
jne
cmp
and
movs
add
xchg
sub
add
adc
add
lods
sbb
dec
and
mov
xchg
xchg
inc
xor
inc
inc
or
lods
mov
nop
and
add
mov
jmp
sbb
stos
stos
push
clc
jae
adc
movs
add
cmps
retf
xlat
fwait
jmp
cmp
adc
and
adc
fld1
sbb
scas
das
add
adc
clc
xor
addr16
sbb
xchg
push
sbb
enter
pop
sub
js
xchg
enter
mov
push
sti
mov
ins
pop
jmp
cmp
adc
xchg
lea
mov
fs
retf
mov
bnd
test
xchg
mov
jmp
bound
nop
stc
jae
push
cmp
lea
rcl
mov
lock
jnp
inc
stos
cli
mov
pop
test
call
imul
pop
or
pushf
(bad)
sbb
je
inc
enter
ror
or
bound
rol
arpl
add
movs
mov
sbb
dec
fcomp
inc
pop
(bad)
jmp
cmc
arpl
jge
or
loop
call
ins
push
add
add
out
aas
xor
add
cld
lods
movs
xchg
cmp
fs
sbb
add
(bad)
sbb
fs
cmps
push
lods
add
test
adc
mov
pop
mov
in
push
pop
inc
inc
add
cli
add
mov
xor
call
enter
(bad)
icebp
xor
lods
sub
push
and
mov
lea
or
fcomp
sti
popf
mov
bound
cmp
or
add
lea
nop
fs
ret
dec
test
or
adc
scas
xchg
dec
mov
rol
jmp
jmp
xchg
xchg
nop
cli
inc
jne
and
inc
sbb
enter
test
jne
inc
dec
cmp
inc
dec
jbe
mov
test
mov
out
ins
cli
push
scas
sbb
push
(bad)
ret
loope
xor
test
and
pop
push
add
inc
fcomp
repnz
retf
dec
adc
imul
cli
nop
cli
(bad)
pop
add
xlat
nop
cli
scas
or
inc
mov
in
pop
jns
or
gs
cmp
das
popf
mov
nop
cli
sbb
jb
cli
ror
fs
in
stos
loope
adc
or
lock
jns
inc
jmp
inc
push
cmp
test
or
adc
mov
mov
and
shl
and
rol
mov
les
add
lock
andps
pop
push
xor
cmp
nop
cli
pop
fsubp
and
ret
mov
inc
fadd
xchg
xchg
retf
loop
push
loopne
movs
(bad)
out
retf
xchg
dec
mov
add
enter
fstp
in
cmps
or
mov
nop
cli
ja
enter
mov
jne
sbb
nop
or
inc
rcl
mov
push
dec
xchg
and
mov
icebp
popfw
xchg
mov
jge
sub
xor
mov
je
fs
pop
neg
movs
xchg
das
mov
or
aam
and
mov
je
daa
and
inc
ret
add
add
nop
cld
pusha
cld
jg
js
mov
mov
mov
std
cmp
ret
sub
repnz
push
xor
dec
sub
xchg
xor
pop
pop
add
loopne
sbb
xchg
xchg
push
retf
inc
dec
jmp
xchg
addr16
jmp
jle
mov
mov
in
jo
mov
sbb
adc
int
or
rcr
lea
push
jg
jbe
lock
in
in
cmp
dec
pop
loope
mov
mov
add
pop
dec
mov
dec
add
cmp
push
ret
out
push
clc
add
stc
out
cmp
(bad)
fmul
dec
jbe
in
and
movs
xor
or
push
aad
out
xor
out
and
fldcw
aam
dec
test
gs
inc
inc
test
fsub
jle
fdiv
aam
dec
fimul
loopne
stc
inc
aaa
mov
lahf
test
retf
mov
shr
test
dec
add
repnz
scas
add
clc
loopne
push
ins
popf
lock
pop
push
(bad)
pop
and
jmp
jmp
clc
dec
cmc
add
and
imul
enter
and
in
jl
aam
fdiv
jmp
in
sbb
mov
jne
sbb
jbe
mov
pop
cld
jae
mov
nop
push
mov
inc
enter
lods
pop
sbb
push
daa
cli
push
aas
push
xor
cwde
outs
inc
adc
push
xor
adc
jmp
push
dec
push
dec
push
inc
fmul
adc
iret
fcomp
(bad)
and
mov
scas
mov
out
add
xor
adc
cdq
push
loop
xchg
(bad)
cmp
inc
(bad)
cwde
push
sbb
and
pop
jbe
sub
cdq
push
shr
pop
or
add
addr16
jnp
and
mov
shl
fiadd
jl
sub
inc
xor
push
cmp
push
dec
xchg
sbb
jae
test
pop
rcr
push
mov
add
cmp
jb
sub
out
loop
jb
or
pop
ja
ds
stos
loope
xlat
or
int
les
aam
movs
mov
adc
ins
(bad)
and
add
add
sbb
or
add
mov
xchg
mov
inc
and
enter
jo
or
or
mov
shl
jmp
mov
in
dec
loope
xor
mov
inc
cmp
stos
push
cmp
ret
push
pop
jl
xor
(bad)
cmp
sub
inc
movs
mov
std
or
or
lock
test
push
test
and
leave
push
mov
jmp
enter
cmp
ja
es
shl
lods
mov
mov
cmp
xchg
(bad)
and
jmp
pop
(bad)
int3
jne
ja
ret
movs
xchg
retf
(bad)
jecxz
inc
dec
test
pop
cmp
cwde
sub
dec
push
inc
jp
(bad)
in
adc
inc
xchg
xchg
mov
xor
in
and
jnp
in
sub
cld
cmp
jl
sub
dec
fcomp
mov
cmp
jb
mov
add
adc
nop
cmp
add
(bad)
movs
div
sbb
xor
adc
(bad)
xor
adc
and
and
pop
xchg
adc
ror
cwde
push
pushf
iret
jecxz
push
adc
cmp
add
inc
and
sbb
mov
(bad)
adc
mov
add
adc
js
jmp
sub
and
push
push
mov
mov
dec
jbe
aam
xchg
mov
xchg
gs
add
add
mov
push
push
or
xor
or
dec
lock
ins
cmp
and
and
add
add
and
cld
dec
movs
imul
icebp
je
stos
jns
lock
stos
fidiv
jb
push
mov
shld
cdq
shl
clc
adc
sub
inc
cmp
jmp
xor
out
fcomp
je
xor
sbb
sub
cwde
jne
popa
and
add
inc
ret
push
push
inc
push
add
jne
cmp
sub
and
and
popf
movs
add
inc
jb
jmp
ret
mov
xor
mov
movs
mov
mov
outs
mov
or
fisttp
push
leave
add
dec
call
push
mov
inc
inc
add
mov
cmp
mov
pop
mov
sahf
fadd
das
mov
push
pushf
inc
pop
cld
add
in
mov
jmp
push
adc
sub
enter
dec
gs
sbb
fdivr
icebp
imul
ins
mov
jne
sbb
cmp
and
mov
pop
neg
sub
or
cmps
mov
and
push
push
inc
js
clc
inc
popa
inc
inc
push
xor
lea
mov
push
mov
shr
cld
mov
(bad)
stc
xchg
add
adc
ins
in
or
mov
pop
scas
jne
sub
add
outs
aaa
sbb
lock
cmp
inc
inc
ds
sub
or
dec
pop
inc
pusha
and
(bad)
inc
mov
and
rcr
cmp
jl
adc
mov
cmp
loop
xor
jne
dec
xor
lock
into
jge
inc
add
inc
mov
sahf
add
lds
loop
add
or
mov
enter
nop
jl
call
aam
inc
push
fidivr
add
idiv
fiadd
inc
les
push
dec
dec
(bad)
cld
shl
shl
or
push
fld
adc
loop
call
cmp
dec
push
dec
pop
ret
loop
xchg
xor
ror
cmps
cmp
cmp
in
clc
sbb
mov
loopne
add
imul
jmp
sub
stos
lea
lock
pop
shr
inc
shr
imul
or
or
mov
mov
xlat
and
clc
add
jb
jns
test
test
mov
or
pop
rcr
push
lds
lahf
pop
fcomp
imul
es
hlt
mov
jmp
shl
cmp
retf
adc
fnsave
pop
call
jb
dec
jnp
jg
dec
push
cmp
or
loopne
jno
inc
fs
cmp
jb
test
jbe
mov
cmp
je
add
ror
mov
mov
jbe
rcr
fsubr
cmp
inc
push
pop
arpl
push
jnp
adc
and
fisub
mov
gs
push
mov
add
fmul
lods
xchg
(bad)
cmp
jae
mov
lock
ins
js
hlt
add
inc
stos
cld
mov
mov
jae
retf
jmp
(bad)
pusha
fsub
or
pop
and
jl
cmp
clc
das
push
dec
cld
adc
add
mov
xchg
shl
sub
loop
lods
xchg
fsubr
push
bound
pop
mov
push
dec
push
add
ror
shr
adc
out
lock
dec
data16
js
ss
jge
inc
or
inc
(bad)
rol
sahf
out
pusha
adc
inc
xchg
add
sbb
push
jmp
fild
pop
inc
ss
imul
jb
mov
mov
add
adc
cmp
jne
out
cmp
aaa
mov
arpl
(bad)
adc
sahf
or
adc
or
(bad)
call
test
adc
pop
ja
cmp
ja
rcl
into
test
add
arpl
call
lea
dec
add
das
pop
aaa
icebp
mov
test
lods
mov
test
add
push
nop
pushf
mov
pusha
sub
inc
push
not
and
je
not
inc
inc
push
clc
mov
sub
jo
in
add
sub
add
jne
push
rcr
arpl
test
pop
aam
mov
jbe
or
sbb
inc
rcr
loop
cmp
iret
jl
in
sbb
adc
sbb
pop
outs
xchg
mov
inc
call
adc
cmps
xor
mov
pop
jmp
lea
es
loopne
lock
xchg
jmp
cmp
xchg
adc
daa
push
adc
xchg
test
imul
mov
or
or
ja
add
cmps
jmp
aam
jne
xchg
cmp
sub
js
mov
or
sub
mov
pop
add
adc
pop
xor
mov
lock
sub
sar
pop
hlt
loopne
fld
xor
and
shl
xor
add
add
les
pop
jmp
push
push
and
mov
cmp
hlt
sbb
out
or
adc
jmp
lods
out
add
pop
jbe
sahf
out
or
push
(bad)
xchg
mov
out
mov
xchg
mov
sbb
pushf
sbb
in
add
adc
aam
dec
mov
retf
test
mov
jbe
jp
pop
(bad)
mov
adc
int3
mov
(bad)
repz
repnz
add
dec
adc
mov
pushf
push
push
mov
(bad)
pop
add
jne
loope
fnsave
adc
add
push
inc
push
shr
jmp
clc
pusha
jl
jno
loop
jmp
pop
lea
sub
inc
pop
sbb
jo
and
xor
or
lock
test
sbb
or
mov
mov
sbb
and
shr
and
dec
sub
mov
or
mov
dec
inc
sub
dec
mov
mov
inc
adc
imul
inc
inc
sub
ss
mov
js
and
add
sbb
dec
popa
mov
pop
jns
add
add
sahf
mov
mov
cmps
sbb
lds
adc
pop
add
adc
mov
inc
cmc
shr
outs
sbb
in
adc
and
out
inc
add
lock
(bad)
call
jne
push
xor
fist
inc
and
inc
and
or
das
int3
outs
pop
add
add
loop
and
sub
pop
mov
jns
ror
or
xor
mov
and
add
pop
shr
push
push
xchg
adc
sahf
rcl
and
mov
mov
and
and
adc
out
jns
sub
xor
test
push
add
retw
inc
test
call
mov
cmp
bound
jecxz
ror
popf
push
pop
iret
adc
sbb
cli
cmp
xchg
xchg
adc
xchg
sub
mov
inc
or
daa
sbb
jb
mov
mov
ds
inc
cmps
lea
daa
xor
pop
push
jnp
repnz
dec
xchg
pop
arpl
add
in
dec
dec
loop
aad
mov
arpl
dec
push
add
mov
stc
sbb
(bad)
jb
daa
rol
pop
pop
arpl
lahf
and
test
imul
xor
xor
sbb
sub
cmp
inc
adc
push
add
fnsave
(bad)
ja
(bad)
loopne
sub
jp
push
ret
jbe
aaa
shr
pop
xchg
add
out
mov
push
and
cmp
push
and
jmp
mov
jecxz
(bad)
stc
jle
pop
jmp
cmp
iret
mov
clc
aaa
mov
or
push
je
push
pop
cmp
movs
inc
mov
cmps
xor
add
lea
loop
push
add
or
mov
xor
or
or
push
out
jnp
mov
xchg
push
xor
dec
mov
inc
or
ss
add
jns
or
pop
cli
clc
iret
repz
cli
cli
cli
pop
jne
mov
push
xor
sar
je
and
pop
imul
push
and
xor
mov
mov
fs
or
ja
jmp
and
or
int
lods
jle
add
inc
sub
or
hlt
lea
or
iret
leave
jle
mov
xor
es
mov
pop
dec
xchg
adc
push
mov
fcomp
inc
adc
clc
jp
pop
shl
mov
mov
sbb
and
or
sbb
cmp
adc
je
lods
das
movs
outs
push
dec
dec
mov
add
xchg
or
ja
and
scas
ins
xchg
imul
repnz
push
and
out
(bad)
dec
and
mov
pop
rol
jmp
sub
dec
adc
xor
pop
fsub
mov
js
mov
add
sub
outs
stos
mov
and
or
inc
punpcklbw
mov
stos
lock
popa
jmp
inc
sub
loop
in
rcr
add
outs
xor
and
pop
lock
or
add
add
xor
mov
pop
movs
aad
dec
push
jge
shr
and
cdq
shr
clc
inc
pusha
iret
inc
push
shl
add
push
test
push
and
lods
push
adc
or
loope
inc
add
fs
stc
xor
or
xor
mov
repz
ss
lods
mov
mov
test
js
daa
mov
out
stc
and
push
jb
sbb
dec
jno
push
cmp
add
loopne
mov
add
jp
jnp
inc
or
push
or
inc
mov
push
cmp
add
add
inc
loopne
call
xlat
dec
mov
or
sbb
dec
and
mov
inc
cmp
je
cmp
xor
sub
jne
jmp
add
push
sub
mov
jge
pop
push
pop
dec
or
mov
cld
or
pop
sub
sbb
stos
mov
scas
mov
jo
div
dec
or
mov
mov
sub
or
(bad)
and
jnp
mov
sbb
adc
xchg
or
cmp
sbb
fld
xor
mov
pop
scas
test
add
mov
retf
dec
and
and
adc
push
shr
popa
out
pop
add
push
popf
add
jo
or
push
xchg
add
push
mov
xchg
or
sbb
ss
mov
cld
add
adc
jmp
outs
fidivr
mov
inc
add
mov
add
jb
mov
div
jmp
and
div
cld
jmp
jne
pushf
pop
test
pop
jne
jae
add
push
mov
jmp
(bad)
xchg
fiadd
xor
xor
xchg
loope
add
jg
jbe
mov
add
cmp
add
retf
push
stc
(bad)
sub
add
ds
cli
sahf
dec
adc
add
jb
add
call
sbb
pop
sar
sti
nop
sbb
paddd
push
mov
dec
add
pop
push
sub
mov
push
pop
xor
aas
lods
sar
je
daa
mov
clc
jg
int
sti
mov
lea
push
pop
dec
pop
push
pop
enter
pop
test
add
cmp
cli
int3
lea
mov
mov
adc
pusha
inc
sub
and
mov
fcomp
fadd
test
loope
mov
push
fild
jb
pop
ret
scas
xlat
push
mov
hlt
pop
sti
sub
div
out
sub
ja
cs
loop
jmp
cmp
shr
sbb
and
cld
mov
push
push
test
and
pushf
xchg
pop
ins
sub
ret
arpl
mov
push
dec
mov
jo
jnp
xchg
daa
inc
push
nop
cmp
jbe
cwde
mov
sbb
fdivr
add
xchg
sbb
mov
pusha
ja
lahf
mov
mov
pop
dec
iret
xlat
pop
pop
xor
push
jle
push
fxch
mov
fidiv
push
pop
pop
sub
shl
and
adc
mov
mov
mov
push
stc
test
adc
in
shr
mov
mov
sub
aas
mov
jae
adc
or
cmp
std
and
sub
fiadd
cmp
cli
or
cmp
xor
sub
xor
fldenv
das
mov
or
pusha
mov
sbb
push
fstp
xchg
(bad)
sub
dec
pop
dec
into
sub
cmp
jl
clc
sbb
add
jl
test
and
popf
in
dec
mov
fdivr
popa
sub
mov
mov
fs
dec
gs
jae
mov
jno
and
test
(bad)
fwait
mov
pop
jmp
repnz
inc
or
or
pop
mov
or
xchg
or
adc
or
ror
outs
test
(bad)
xor
push
data16
rcr
mov
xchg
movs
and
jmp
and
sbb
jmp
add
les
pop
jl
jg
cmp
push
inc
ja
imul
add
adc
sub
sub
inc
sar
jge
stos
push
stos
add
pop
add
fadd
sub
loope
clc
rol
add
push
add
or
add
into
test
jge
ja
sbb
les
and
movs
pop
arpl
dec
adc
adc
push
ret
leave
lahf
jmp
push
(bad)
jmp
es
mov
ss
inc
pusha
inc
mov
cmc
or
sub
loopne
mov
or
sbb
push
rol
test
push
inc
add
push
mov
or
lods
movs
outs
dec
sub
cmp
outs
stos
or
sub
jbe
mov
js
inc
pop
call
aad
adc
sub
cmp
ja
mov
pusha
and
ds
push
popa
cmp
test
daa
inc
sub
ss
cmp
mov
lods
inc
lock
ja
add
cmp
je
xor
ss
sahf
imul
or
dec
data16
call
adc
xor
xchg
div
mov
lock
aam
lock
cmp
retf
add
sub
pop
nop
rol
js
adc
aam
retfw
xchg
push
adc
or
jbe
pusha
sub
and
pop
scas
(bad)
push
adc
add
cld
xchg
sar
add
(bad)
fmul
xchg
push
push
xchg
cmp
lods
sub
xor
mov
fwait
adc
or
jmp
je
add
inc
cmp
out
les
pusha
push
pop
mov
cmp
push
clc
std
movs
sbb
mov
add
aad
shr
movs
outs
outs
dec
jge
fstp
pop
inc
ret
imul
cmps
popa
cmp
aaa
and
lods
add
mov
jl
or
pusha
mov
retf
imul
pop
rcl
dec
dec
pop
and
mov
adc
movs
dec
pop
stc
add
out
push
iret
outs
mov
inc
pop
es
jmp
sbb
jae
popa
lock
add
jns
nop
lock
add
sbb
jbe
inc
out
inc
jb
jae
mov
call
ja
ss
xchg
push
or
nop
and
cmp
or
xchg
in
push
or
or
jmp
or
fld
enter
cmp
inc
push
movs
shl
paddusw
xchg
pushf
or
jmp
mov
jnp
jb
aaa
inc
adc
loopne
sbb
xchg
pop
dec
loopne
xor
dec
inc
cs
pop
inc
add
retf
adc
pushf
aam
pop
or
pop
in
adc
adc
shr
sbb
mov
ss
inc
mov
stos
pop
adc
jmp
nop
pop
jne
repz
rcr
sbb
pop
push
add
lods
push
daa
dec
or
test
adc
adc
push
(bad)
iret
inc
push
mov
push
inc
push
(bad)
xchg
inc
leave
inc
push
inc
push
inc
push
cmp
push
and
repnz
inc
push
inc
push
leave
mov
inc
push
pop
stos
nop
inc
inc
push
push
je
cs
jne
or
jle
jbe
cli
jp
ret
add
or
scas
sbb
mov
or
xchg
es
mov
leave
hlt
lahf
mov
stc
mov
inc
sub
retf
pop
fstp
push
inc
push
xor
and
std
pop
test
and
push
push
sar
push
enter
jl
pop
fld
adc
dec
sbb
xchg
fisub
dec
or
push
xchg
bound
or
sub
ins
or
mov
push
pop
mov
in
repnz
(bad)
xchg
dec
xor
sar
mov
jge
inc
cmps
lea
daa
xor
pop
push
jp
das
in
xchg
or
(bad)
out
add
movs
adc
jbe
and
sbb
movs
add
mov
mov
(bad)
jb
daa
mov
rcl
ret
push
jns
iret
mov
test
nop
mul
sub
inc
or
(bad)
cmp
inc
inc
outs
adc
retf
(bad)
push
pop
data16
inc
sbb
push
adc
in
push
call
ficom
(bad)
rcl
jmp
sub
mov
fdiv
add
ficomp
in
pop
test
pop
mov
mov
inc
lahf
(bad)
sub
dec
stos
pop
dec
push
pop
popf
imul
jbe
xor
pop
sub
imul
sahf
inc
jbe
xor
inc
lahf
das
pop
jp
jns
(bad)
out
add
inc
lock
mov
das
sbb
xor
sahf
daa
lahf
shl
inc
in
ret
or
push
lahf
pop
aaa
in
pop
xchg
xor
scas
call
mov
fwait
fs
push
dec
inc
mov
scas
popa
dec
cmp
jae
mov
sti
cmp
mov
test
pop
push
lock
jb
push
jne
cmp
or
adc
cmp
sbb
cs
jmp
or
test
mov
push
cld
push
mov
clc
adc
ffree
and
or
cmp
je
ret
fdiv
xchg
xchg
pop
inc
hlt
mov
push
push
xor
pusha
lea
inc
or
xor
fld
sub
pop
aas
inc
clc
jmp
inc
fild
adc
enter
cmp
sub
or
mov
in
mov
dec
add
dec
jecxz
mov
or
dec
cmps
push
push
cmp
das
mov
cwde
and
add
les
fdivr
pop
es
dec
call
and
push
scas
adc
push
sbb
mov
add
xchg
add
mov
sbb
neg
fimul
mov
mov
and
and
mov
fisttp
pop
add
xchg
dec
jmp
jle
dec
pop
mov
inc
icebp
pusha
pop
lods
fcomp
or
aam
or
ret
mov
push
sbb
mov
cld
xchg
in
cmp
dec
xchg
adc
cli
or
or
ret
and
(bad)
mov
sar
sub
push
push
cdq
or
adc
push
and
aas
sbb
cld
jle
push
or
mov
jno
dec
les
dec
push
sbb
sub
xor
bound
xor
push
es
xchg
xlat
sub
movs
add
adc
test
popa
aad
call
leave
and
push
out
es
cmp
cmp
and
xchg
xchg
cmp
sbb
inc
inc
add
cmps
cmp
and
fisttp
outs
lock
pop
dec
(bad)
mov
enter
(bad)
add
add
xchg
ficomp
shl
push
push
add
or
or
xchg
(bad)
add
into
sbb
sub
into
sub
aaa
sbb
fsubr
sub
vxorps
add
jmp
lds
je
(bad)
jmp
jno
jmp
test
jl
jb
vzeroupper
pushf
dec
les
add
adc
daa
punpckhdq
jne
stc
dec
add
xor
(bad)
clc
adc
sub
and
call
jmp
je
xor
mov
ret
mov
loope
adc
dec
jb
mov
movs
hlt
jl
clc
shl
ror
rcl
pop
jo
cmp
add
cmp
shl
mov
paddusw
test
in
pop
jg
shr
cmp
mov
lea
push
(bad)
sar
dec
cld
je
jl
or
jne
sub
sar
inc
xchg
fst
ror
pusha
ret
xchg
push
add
retf
enter
int
rcr
jne
ret
add
sbb
rcr
out
add
sub
cwde
fst
mov
and
mov
add
dec
leave
lods
add
mov
pop
or
jne
or
fidivr
add
iret
adc
xchg
jmp
pop
je
call
popf
rcl
push
cmps
cwde
popf
xor
loopne
and
pop
add
jmp
push
fimul
push
sbb
cmps
jl
inc
cmp
ja
sub
push
adc
jmp
sub
out
mov
jae
lods
jb
xchg
setbe
push
cmp
xor
pop
jmp
add
repz
push
aad
xor
or
sub
loopne
push
ret
inc
outs
pop
leave
mov
pop
mov
test
cld
fwait
daa
mov
xor
xor
sar
pop
jl
cmp
cmp
loopne
fcom
push
sub
aam
int3
cs
retf
in
in
enter
cmp
hlt
je
add
xor
fisttp
sbb
fisubr
mov
stc
adc
cdq
and
mov
xchg
or
ins
jne
test
prefetchwt1
or
inc
pop
pop
cmp
sbb
mov
sub
sbb
xchg
or
pop
stc
sub
cwde
nop
cmp
sub
jmp
scas
xor
sub
adc
into
jnp
mov
icebp
mov
sbb
mov
xor
je
pop
rcr
add
sbb
xchg
xor
scas
stos
ficom
dec
or
and
cmp
icebp
lea
in
push
adc
or
cwde
mov
pop
sub
fs
pop
mov
or
mov
dec
mov
jmp
xor
mov
mov
inc
adc
push
out
ret
adc
push
push
or
add
sbb
(bad)
div
cmp
ret
sub
inc
jp
pop
push
and
push
call
shr
rcl
push
cmc
mov
dec
ds
sub
add
adc
add
xchg
mov
mov
push
or
(bad)
adc
cmp
push
out
stos
push
in
loop
fwait
pop
mov
sti
fadd
jle
adc
cmp
inc
aam
add
jb
push
inc
and
retf
shl
retf
mov
fdiv
adc
mov
mov
mov
inc
shr
(bad)
sub
bnd
and
call
sub
cmps
cwde
ss
push
jno
cmp
xor
cmp
loop
add
xchg
sub
and
xchg
cmps
iret
sub
pop
add
push
jp
pusha
adc
sbb
hlt
mov
ret
pop
in
mov
and
adc
into
cmp
mov
icebp
(bad)
xor
movs
xor
std
hlt
or
adc
mov
mov
mov
sbb
mov
pop
pop
clc
add
xchg
movs
and
mov
or
push
ins
popa
neg
pop
and
shr
jo
cmp
cmp
lods
loopne
push
imul
dec
or
add
and
in
dec
test
lods
(bad)
call
call
push
xchg
mov
test
lock
and
and
je
jmp
je
es
mov
or
imul
das
bound
enter
shr
or
cmp
int
fsub
or
push
ja
pop
pop
add
sbb
call
in
iret
xchg
dec
aad
adc
ss
push
imul
int3
(bad)
daa
sbb
je
je
or
out
sub
daa
fist
jmp
or
pcmpeqb
rcr
cmp
jg
push
out
shl
bound
ret
sub
xor
inc
cmps
pop
push
xchg
shl
lea
lods
xor
xor
leave
or
call
jp
cmc
mov
fsub
cmp
inc
loop
ja
(bad)
cmp
adc
retf
loopne
add
mov
fild
cmps
push
enter
and
test
aas
inc
add
jns
or
dec
xor
push
les
push
add
inc
enter
sti
and
cs
inc
pop
and
int3
adc
mov
and
test
mov
pusha
nop
mov
test
and
mov
lock
xlat
push
add
xchg
jo
(bad)
jmp
jne
cmps
ss
pop
jo
int
push
jle
mov
pop
push
dec
pusha
imul
enter
push
shl
ret
push
pop
cdq
adc
push
mov
inc
sbb
or
mov
ret
sbb
dec
lock
hlt
movzx
cmp
int
add
rcr
fidiv
sbb
xchg
or
add
xor
movs
xchg
ins
(bad)
sbb
jmp
push
inc
es
ds
add
sub
stos
or
or
iret
add
dec
mov
xchg
add
sbb
adc
adc
dec
and
push
stc
push
scas
sbb
clc
adc
pop
cmc
popf
adc
sub
cmp
jb
bound
shr
xor
jecxz
xor
ds
inc
push
push
cmp
and
xlat
movaps
xchg
xor
jne
js
into
dec
test
adc
cld
sbb
clc
inc
jb
mov
xchg
and
xchg
in
inc
cmp
and
mov
jae
jecxz
mov
mov
sbb
test
or
sbb
pop
and
in
mov
push
mov
int3
int3
xor
push
hlt
jbe
lock
and
adc
or
cmp
and
sbb
out
mov
adc
cmp
push
mov
lds
ret
xor
add
xor
out
cmc
cmp
mov
(bad)
lea
sub
push
add
sub
sbb
int
sbb
int3
loope
pop
aas
dec
adc
arpl
dec
pop
jg
jno
or
(bad)
nop
daa
push
popf
sub
cmp
jne
or
add
out
fmul
sub
test
jb
test
sub
mov
add
jmp
rol
sbb
adc
push
push
xchg
lahf
mov
mov
add
neg
or
or
jae
xchg
mov
in
test
daa
and
jne
je
pop
inc
mov
xor
push
mov
loop
pusha
hlt
jg
inc
pop
push
sub
pop
cli
clc
add
icebp
rol
(bad)
fsub
lock
lock
popa
jo
clc
sbb
sub
push
enter
or
in
cwde
pop
pop
pop
retf
add
or
fsub
sbb
jecxz
and
pop
mov
dec
loope
cmp
pop
xchg
xchg
mov
inc
inc
push
pop
ficomp
xor
ret
push
stc
cmp
shr
cmp
jmp
and
sahf
push
cmp
jo
jl
bound
and
push
mov
push
xlat
and
rcr
daa
inc
pop
(bad)
pop
pop
popa
ret
leave
mov
xchg
inc
push
sub
push
loop
mov
xchg
mov
sahf
bound
xchg
jno
mov
or
(bad)
test
std
shl
mov
sub
stc
test
pop
movs
lock
lock
adc
aam
pop
clc
add
cdq
pop
and
je
jecxz
add
mov
pop
jb
pop
rcl
cmp
ret
cdq
idiv
jns
js
push
hlt
nop
add
add
push
cmp
jge
(bad)
mov
dec
lods
push
cmc
sbb
aas
add
add
mov
ror
sbb
pop
xchg
mov
mov
sahf
icebp
lea
(bad)
add
(bad)
cmc
ja
xlat
sar
mov
and
imul
add
sbb
(bad)
push
movs
inc
or
or
ins
sbb
or
les
inc
jne
cmp
sub
mov
adc
retf
out
out
dec
call
mov
xor
daa
add
ret
mov
gs
ds
dec
mov
or
cmps
mov
and
data16
mov
pop
enter
bound
xchg
(bad)
repz
inc
dec
lods
aas
or
sbb
push
imul
ret
mov
mov
imul
test
cli
mov
mul
ds
dec
push
stc
jge
pop
or
pop
push
add
mov
jno
repnz
or
idiv
sti
pop
out
sub
js
inc
mov
adc
inc
push
add
mov
(bad)
and
sub
mov
fs
add
iret
push
cmp
jp
inc
leave
sub
push
arpl
dec
pop
add
add
and
or
ins
test
sub
push
xor
pop
sub
sub
pop
cmp
sub
aas
push
pop
push
pop
sub
loop
jns
xor
add
test
dec
shl
or
cmp
mov
mov
jno
adc
add
cmps
adc
inc
stc
adc
xor
inc
mov
mov
ret
dec
sbb
xchg
add
sbb
in
aaa
lock
lar
fist
xchg
cmp
pop
sub
rcr
(bad)
jmp
xchg
inc
jmp
mov
and
out
or
or
or
out
int3
push
(bad)
xor
ins
clc
js
call
mov
sti
sahf
loop
fsubr
mov
inc
or
jne
push
inc
sbb
push
cld
inc
mov
lea
or
cld
stos
out
adc
push
xor
inc
or
dec
mov
movs
test
push
movs
retf
lea
inc
lock
js
cmp
pop
ror
ror
mov
push
mov
mov
retf
pusha
stos
or
mov
adc
inc
pop
push
icebp
mov
leave
add
inc
pusha
icebp
dec
ins
jmp
mov
mov
int3
pop
or
ja
je
or
push
test
and
adc
jns
inc
cmp
push
or
daa
daa
lods
inc
cwde
xchg
xchg
mov
xchg
push
jns
mov
and
sbb
mov
jo
test
push
into
or
pop
mov
push
sbb
xor
sbb
movs
mov
cmc
mov
or
push
push
pop
sub
xor
adc
or
push
push
jge
pop
adc
mov
xor
jecxz
call
cli
or
mov
jbe
lock
fisubr
or
or
cdq
cld
jl
(bad)
cmc
test
imul
dec
clc
add
cdq
add
jmp
outs
imul
hlt
mov
jne
sub
mov
pop
mov
not
or
clc
or
scas
in
loopne
add
iret
mov
loopne
inc
inc
scas
retf
cmp
sbb
neg
sub
mov
xchg
add
popf
daa
stos
add
sbb
xchg
and
mov
inc
sub
(bad)
ror
push
xchg
rcl
push
cli
xchg
shl
pop
mov
inc
cld
xchg
jo
(bad)
cmp
scas
add
mul
pop
inc
jne
add
mov
jne
adc
or
push
aaa
cwde
inc
add
xor
xchg
and
pop
movs
aas
jp
addr16
arpl
mov
push
cmp
mov
pop
sub
ret
jmp
pop
inc
push
xor
add
into
mov
jp
jge
ja
js
daa
jno
sub
aam
xor
sbb
shr
jmp
dec
cmp
mov
adc
out
fwait
sub
fsubr
fdiv
fld
or
add
test
sbb
movs
xor
stos
addr16
adc
sti
pop
jge
jmp
(bad)
aas
jb
add
test
cmp
add
adc
push
jne
jg
call
out
sub
cmp
ja
sbb
dec
ins
rcr
add
jl
mov
pop
(bad)
and
je
in
call
idiv
jnp
(bad)
jmp
daa
imul
pop
(bad)
mov
mov
fcom
ins
jnp
test
cmp
or
clc
inc
add
cmp
dec
add
cmp
mov
adc
pop
xor
push
jne
cmp
pop
or
es
retf
sub
cmp
pop
jno
xchg
mov
or
daa
popa
xor
jno
xor
jbe
add
push
pop
mov
adc
sbb
mov
sbb
popa
lea
jle
jne
pop
mov
ins
les
mov
loope
add
push
inc
jnp
push
add
pop
xchg
push
cs
movs
dec
shl
mov
jmp
loopne
lea
adc
xor
not
mov
add
add
ins
les
cmps
dec
xor
fdiv
nop
hlt
push
call
jmp
xor
inc
mov
lea
mov
mov
jl
ins
aaa
repz
repz
dec
and
mov
mov
iret
pop
and
jbe
test
ds
aas
mov
jo
add
inc
repnz
inc
xchg
outs
out
push
push
adc
daa
dec
xor
mov
push
jno
lea
jmp
inc
sbb
call
lock
outs
clc
cmp
cmp
pop
add
add
push
cli
into
jp
sub
cld
fcmovbe
iret
ror
test
mov
into
mov
dec
imul
ret
or
mov
cmc
mov
scas
outs
mov
ror
cmps
add
xlat
popf
gs
call
add
or
dec
inc
nop
xor
pushf
dec
dec
data16
pop
ror
test
mov
mov
inc
jmp
stc
push
ins
mov
push
lock
pop
enter
ror
pop
call
(bad)
in
adc
push
add
or
inc
dec
pop
sub
clc
push
push
xchg
push
repnz
dec
cdq
add
sub
mov
add
sub
cmp
or
ret
repz
push
cmp
es
lea
push
inc
cmp
mov
pop
adc
rcl
mov
movs
fmul
mov
sub
add
adc
(bad)
adc
mov
cmp
mov
sub
pop
ins
popa
xchg
hlt
mov
scas
cld
sub
push
sub
les
sbb
shr
je
push
or
push
inc
aad
inc
mov
clc
das
adc
outs
ret
cmp
loopne
retf
or
mov
or
sbb
sbb
xor
xchg
in
test
outs
test
cmp
pop
pop
lods
adc
outs
pop
or
mov
loopne
push
cld
jo
sub
jne
pop
xor
dec
mov
movs
add
leave
movs
int
mov
pushf
cli
aam
mov
sbb
adc
jnp
movs
or
pop
xor
ret
mov
push
repnz
xor
adc
dec
xchg
outs
and
fsub
jae
jmp
push
pop
mov
mov
sub
mov
sub
lock
nop
cmp
add
inc
ins
stc
xor
jnp
pusha
and
jl
pop
retf
sub
mov
daa
inc
mov
jo
je
loopne
push
out
mov
mov
loope
jb
cdq
inc
push
or
cmc
pop
mov
pop
cmp
jl
and
or
inc
mov
xchg
pop
(bad)
or
mov
mov
mov
lahf
sbb
pop
dec
push
xchg
dec
pop
inc
push
add
dec
stos
xchg
adc
jge
xchg
or
add
mov
imul
add
iret
rcr
in
aaa
push
push
data16
pop
ins
cmp
ja
jbe
mov
sbb
and
stos
xchg
mov
cmp
adc
xor
call
mov
cmp
sub
jp
jmp
fcomi
shl
fmul
aad
clc
push
retf
stos
jo
enter
inc
add
mov
call
inc
jmp
ins
lea
or
pop
pop
sub
fcmove
xchg
jecxz
repz
dec
pushf
and
sbb
push
inc
or
rol
mov
adc
and
dec
call
imul
mov
mov
adc
xchg
ret
push
mov
js
pop
or
imul
xchg
clc
idiv
and
xchg
jo
fcomip
test
je
or
cmp
mov
or
imul
pop
stc
xor
aad
into
div
add
test
add
retf
pop
mov
pop
dec
int
cmovns
fmul
adc
mov
sub
(bad)
cli
sub
mov
sbb
loopne
sbb
pop
(bad)
inc
clc
xor
cmp
ja
pop
inc
jmp
jmp
jne
pop
movs
sub
push
stos
cld
hlt
jmp
or
or
pop
in
out
xor
pop
lods
pop
call
push
stos
in
inc
mov
sti
mov
test
cmp
push
aam
cmps
and
cli
ret
xor
pop
add
out
xchg
in
shr
mov
jo
ret
sub
les
mov
xor
call
daa
add
xor
push
cld
fs
mov
pop
jmp
xor
lods
sbb
jbe
and
std
imul
lods
cli
jbe
or
push
push
or
in
scas
cld
cmp
xchg
mov
xchg
adc
inc
lock
push
push
xchg
pop
ja
jne
popf
or
scas
push
sub
call
stc
push
shl
rcl
ret
or
push
popa
or
repz
cmp
std
in
test
pop
pop
adc
ror
and
dec
rcl
es
dec
popa
push
out
and
clc
aad
je
movs
push
(bad)
shr
add
and
pop
mov
dec
aad
adc
push
lods
adc
mov
inc
push
jns
stos
cmp
and
jg
add
pop
pop
daa
cmp
jl
stos
add
retf
ins
sub
test
or
cmp
jnp
lods
push
mov
cmp
mov
jmp
arpl
add
inc
pop
outs
shr
fs
mov
push
ret
mov
(bad)
pop
adc
pop
or
xor
adc
mov
ret
jg
add
push
or
scas
jmp
sbb
push
lock
fnsave
jmp
sbb
add
sub
data16
mov
add
jbe
mov
je
or
add
mov
push
pop
mov
xor
push
adc
(bad)
push
jmp
pop
inc
mov
add
sahf
push
jbe
jp
xor
xor
cwde
ins
pop
mov
lahf
addr16
dec
xor
and
mov
and
je
scas
adc
and
sub
adc
out
pop
and
add
sub
mov
movs
jne
enter
lahf
mov
ins
cwde
test
(bad)
fwait
sbb
call
je
push
in
or
jl
rcl
push
jl
fs
dec
ror
cdq
bound
jmp
nop
adc
jl
call
dec
fdivr
push
push
rol
sub
xchg
push
adc
adc
stos
dec
ins
or
js
rol
mov
add
jmp
or
stos
int3
xor
mov
addr16
jge
punpckhbw
adc
push
mov
aaa
push
jbe
imul
pop
adc
fs
dec
es
sub
inc
inc
and
(bad)
sti
sbb
jl
and
cmp
pop
cmp
push
adc
ret
sub
jne
push
push
add
or
push
mov
pop
xchg
dec
xchg
fwait
and
jo
jbe
out
fcomp
push
inc
add
mov
rol
xchg
push
adc
js
or
repnz
cmp
or
xchg
imul
in
push
mov
mov
nop
test
cmp
aaa
scas
cmp
pop
adc
xor
or
push
push
sub
imul
mov
pop
push
rcr
mov
mov
jo
out
pop
jmp
inc
or
lahf
or
dec
and
adc
sub
xor
mov
push
jmp
pop
xchg
in
push
mov
add
add
leave
add
mov
and
push
movs
inc
cmp
jne
or
ja
mov
ret
ror
jle
jmp
test
push
sub
sar
or
mov
push
jmp
and
or
je
mov
repz
imul
enter
loop
add
mov
shl
pop
or
inc
imul
push
adc
lock
adc
adc
mov
sub
add
add
pop
mov
mov
test
sub
fs
add
xor
js
sbb
jg
or
cmp
jne
mul
push
mov
push
push
je
fs
cli
cdq
dec
cmp
ret
gs
and
cld
dec
cmp
jmp
leave
and
add
mov
mov
sub
sbb
cmp
jge
add
sub
adc
sub
push
in
cmp
jo
adc
dec
fdiv
add
jecxz
push
lock
ret
daa
push
or
mov
push
sbb
ins
push
and
push
js
test
ins
ficomp
into
inc
jb
ror
mov
mov
out
cmps
cwde
inc
aam
add
in
mov
adc
cs
cmps
cmp
cmps
mov
push
aad
fwait
lock
and
add
fsub
ror
and
jg
ret
sub
rcr
fsubr
cmp
movs
lock
frstor
sbb
shr
inc
clc
loop
and
scas
pop
dec
pushf
test
jns
or
mov
mov
jbe
mov
adc
or
pop
jo
inc
xchg
mov
dec
int3
cs
xchg
xor
adc
ret
cmp
fbstp
shl
adc
mov
push
fwait
and
jae
xchg
pop
adc
jbe
loopne
and
mov
dec
inc
lds
sbb
and
adc
inc
xchg
fsubrp
and
fsub
pop
inc
jge
sub
jg
jb
mov
jns
sub
jmp
adc
jge
lahf
dec
jl
fstp
cmp
pop
das
push
test
push
push
vpavgb
nop
sbb
cli
xchg
push
dec
sbb
fs
cs
lods
inc
push
or
add
mov
mov
(bad)
inc
sbb
dec
rol
mov
jmp
push
lea
pop
das
mov
mov
or
sbb
dec
adc
(bad)
and
cmp
sbb
adc
icebp
ss
adc
leave
cmp
xor
sbb
inc
ss
sbb
(bad)
loopne
mov
or
push
jo
cmp
push
pop
cmps
jg
jne
popf
jle
mov
ror
and
or
pop
dec
mov
jecxz
mov
mov
fiadd
sbb
push
cmp
jge
or
mul
mov
rcl
repz
mov
lea
out
or
lea
sbb
mov
cmps
add
lock
inc
sbb
adc
sub
and
and
out
and
sbb
dec
cmp
ins
mov
fiadd
inc
mov
inc
or
sahf
dec
mov
cmp
jmp
pop
cmp
jl
cmps
clc
lds
idiv
add
cwde
sbb
pusha
push
push
jge
add
adc
mov
add
icebp
sbb
lock
mov
rcl
inc
mov
shr
sbb
bound
hlt
lock
in
aad
mov
xor
das
push
imul
mov
inc
movs
and
sbb
mov
mov
pop
xchg
sbb
xor
adc
test
sbb
out
jg
mov
shl
sbb
add
mov
push
sub
ret
inc
popa
and
jg
xor
or
xor
mov
lods
add
push
xor
bound
aaa
enter
sub
nop
shl
cmp
cmc
dec
sti
mov
neg
push
jae
sbb
ret
xor
inc
mov
and
enter
mov
mov
or
pop
lock
hlt
(bad)
adc
call
sub
xor
push
popf
mov
pop
push
jp
cmp
shr
jl
daa
test
or
std
xchg
push
stc
mov
mov
inc
notrack
cs
mov
jmp
jmp
lods
mov
dec
push
aam
mov
shl
out
inc
loop
cmp
fwait
add
lods
or
sub
loopne
add
add
mov
mov
in
and
adc
dec
in
in
and
daa
adc
push
dec
es
push
mov
add
jo
js
cmp
scas
lods
adc
pop
lea
rol
rol
inc
je
mov
movs
inc
mov
cmp
sbb
inc
or
mov
push
push
sub
test
aam
mov
aam
shl
mov
loop
aaa
cmps
mov
out
push
push
push
and
mov
movs
das
nop
lfs
mov
cmp
cli
fwait
or
rol
pusha
shl
mov
aaa
mov
add
or
push
inc
je
mov
outs
imul
inc
jne
sbb
sub
adc
jo
fild
push
clc
mov
out
jnp
xchg
ds
sbb
sbb
out
dec
add
mov
scas
popa
jg
add
mov
or
sub
jno
pop
into
cld
or
daa
jno
in
gs
out
sti
add
es
xchg
das
sub
out
data16
popa
inc
add
adc
pushf
sub
adc
clc
or
or
jns
push
add
bnd
add
xchg
xchg
adc
mul
arpl
add
or
fdivr
fldenv
and
test
inc
sti
dec
and
inc
ficomp
mov
mov
and
fs
lea
test
fdivr
inc
and
or
cmp
fidiv
push
or
pop
inc
pop
rcl
dec
or
inc
sbb
or
push
jbe
push
push
and
rcl
retf
fwait
adc
sbb
inc
mov
shl
shr
test
test
pop
pop
mov
inc
jbe
add
cwde
sbb
mov
adc
mov
retf
adc
add
add
mov
mov
lea
pop
adc
dec
mov
das
mov
jl
mov
mov
or
jo
and
das
mov
or
inc
or
je
mov
test
je
mov
push
rol
mov
pusha
add
shl
add
adc
mov
mov
es
cwde
inc
jmp
sti
cmc
jle
add
into
jnp
xor
xor
fistp
and
push
or
push
sbb
sti
dec
sub
inc
sub
std
std
pop
push
or
push
push
mov
int3
sub
mov
nop
push
cmp
mov
div
push
mov
dec
mov
mov
jne
or
push
and
lock
stos
movs
sahf
(bad)
push
and
sar
cvtdq2ps
out
push
fisttp
or
xor
pop
and
pushf
mov
pop
daa
jo
or
lea
xchg
ret
mov
dec
pusha
xchg
pop
mov
test
pop
add
loopne
jno
call
and
rol
pusha
dec
cld
pop
shl
push
test
loopne
out
add
push
xor
pop
inc
mov
sbb
push
dec
push
xchg
add
lock
jmp
adc
(bad)
mov
ja
or
lea
les
cdq
push
cld
cs
or
shl
dec
popa
add
lods
dec
loopne
push
jbe
xchg
inc
add
jb
push
call
in
retf
(bad)
movs
(bad)
mov
icebp
adc
pop
jmp
lods
lea
sbb
inc
xor
into
inc
sub
xchg
inc
into
jge
xchg
push
push
lea
lea
add
mov
fdivr
sub
jmp
jb
and
jmp
xor
add
aaa
mov
add
lahf
mov
mov
movs
add
(bad)
into
inc
or
aaa
xor
dec
pop
dec
cmp
punpckhwd
cmp
or
call
imul
mov
or
add
nop
or
test
cmc
xor
ror
shl
xchg
adc
mov
push
sub
and
dec
or
mov
sbb
mov
or
add
mov
mov
xchg
push
or
add
and
xor
add
adc
pop
xor
or
push
xchg
push
in
push
adc
sub
enter
clc
int
rcr
clc
push
ret
daa
sub
stos
adc
aaa
jns
xchg
inc
stos
xchg
in
js
and
adc
or
push
movlps
lods
in
(bad)
(bad)
pop
aaa
call
sub
push
sub
mov
scas
repnz
sbb
cmp
popf
imul
mov
or
xchg
mov
or
es
add
ins
stc
push
in
adc
inc
hlt
jae
lahf
mov
or
or
nop
fwait
into
sbb
push
jl
mov
xchg
xchg
or
mov
sbb
shr
cmp
or
sbb
enter
and
pop
sbb
mov
xor
add
jmp
or
push
add
adc
pop
idiv
loopne
and
push
int3
pop
out
sti
sbb
leave
nop
es
rcl
fistp
mov
in
rcl
add
add
mov
neg
(bad)
ins
sub
mov
add
ins
add
or
xchg
add
add
(bad)
imul
je
or
pop
push
pop
nop
sbb
push
sbb
mov
mov
std
(bad)
ins
sub
jle
pop
pop
cmp
pop
mov
pop
xlat
or
in
inc
push
and
pop
sbb
sbb
rcr
mov
mov
call
xor
leave
jne
call
inc
or
add
or
mov
mov
cmc
pop
add
xor
lds
data16
nop
mov
add
jns
(bad)
sbb
xor
or
jp
in
xchg
inc
add
cld
push
rcl
sub
sti
call
outs
pop
push
mov
mov
dec
aaa
and
shr
xchg
pop
cs
sbb
retf
and
and
in
loopne
in
pop
jb
in
cmp
inc
dec
cs
lods
cwde
add
retf
and
or
dec
mov
imul
ror
fbld
jb
in
enter
mov
sbb
hlt
shl
inc
dec
gs
or
sbb
xor
sub
dec
test
xor
inc
sahf
pop
cmps
bound
mov
ror
jp
cmp
imul
push
cmp
push
xchg
mov
rcl
fs
movs
test
shl
rol
ror
movs
inc
and
mov
nop
rol
push
ror
add
xchg
pop
pusha
movs
xchg
xchg
mov
aas
nop
push
popa
jp
or
jp
aas
cli
mov
mov
mov
sbb
mov
fs
mov
sbb
loop
lahf
sbb
pop
push
jne
imul
cmp
add
jne
xor
test
or
push
or
and
ror
and
hlt
and
test
lea
ins
lea
jg
adc
jle
fldenv
pop
xor
pusha
fld
cld
or
push
push
mov
int3
sub
sbb
cmp
adc
push
and
pop
mov
dec
lods
adc
(bad)
sbb
push
cmp
push
test
jmp
add
mov
or
or
dec
dec
cmp
popf
loop
mov
add
add
pop
mov
adc
mov
cld
pushf
call
mov
cmp
(bad)
jl
pop
mov
dec
sti
jb
cmp
scas
nop
imul
mov
sbb
push
ins
jbe
mov
jge
gs
inc
sbb
sub
fsubr
imul
(bad)
and
loope
call
ret
and
lea
aas
stos
jle
cmp
pop
movs
fcom
test
sbb
xchg
aad
push
cmp
inc
dec
cli
and
retf
jb
add
add
xchg
lock
adc
js
ficom
jo
inc
add
inc
inc
pop
mov
add
mov
push
jle
add
call
mov
mov
push
dec
enter
or
jae
dec
or
or
or
inc
jb
inc
or
popf
or
xchg
jo
das
dec
clc
inc
cmp
sub
(bad)
jle
repz
xor
lea
push
xchg
retf
popa
and
adc
inc
cmp
test
movs
daa
pop
es
inc
jo
push
cmp
(bad)
and
(bad)
xor
push
mov
lods
test
mov
jmp
lock
xchg
xor
jne
cmp
mov
push
xlat
jmp
pop
dec
and
mov
cmp
loope
sbb
dec
ss
sahf
mov
push
mov
fadd
in
add
or
xchg
dec
pop
or
push
call
and
push
mov
in
cmp
ss
xchg
mov
add
shufps
nop
popf
les
test
xor
mov
pop
scas
(bad)
jmp
sub
pop
mov
cmc
mov
mov
dec
pop
lock
mov
lock
and
ins
data16
and
test
ss
dec
fiadd
cwde
jmp
sub
js
adc
inc
cli
hlt
xor
shl
sub
inc
loopne
pop
add
mov
mov
icebp
mov
bt
sbb
out
aaa
mov
ds
lea
jns
sub
mov
inc
sub
mov
pop
js
clc
cmps
fild
sti
es
xlat
xchg
xor
mov
adc
ja
xchg
pop
mul
inc
add
mov
mov
mov
(bad)
pop
test
or
pop
and
and
out
or
sbb
mov
push
mov
fwait
mov
cmc
outs
pushf
push
push
xor
std
or
push
push
dec
rol
cld
mov
sub
push
inc
pop
dec
pop
aaa
and
and
retf
and
int
sti
out
add
dec
push
sbb
mov
jmp
and
lods
push
add
mov
je
shr
push
lea
xchg
fcmovbe
enter
dec
or
lock
mov
inc
not
cmp
and
lea
dec
mov
jmp
out
mov
xchg
mov
push
jo
sub
das
lahf
in
sub
push
repz
pop
test
dec
and
add
lock
push
add
aas
ror
cs
mov
mov
dec
rep
sub
hlt
into
and
and
dec
cmps
inc
xchg
push
and
push
mov
or
ror
pop
add
and
jmp
sbb
mov
cmp
imul
fwait
pop
xchg
iret
cmp
dec
push
test
retf
lock
adc
jo
das
jns
sahf
cmc
lds
je
ds
pop
lea
(bad)
jmp
pop
adc
xor
clc
adc
push
mov
ins
dec
mov
das
shr
rcl
jg
or
dec
or
sahf
push
and
in
je
ficomp
or
cmp
je
cs
dec
push
lock
fs
(bad)
cdq
push
xor
dec
pushf
push
push
xchg
or
movs
cmp
mov
in
cmp
add
fld
or
cmps
sub
(bad)
iret
add
cmp
mov
push
shl
add
sar
sti
call
dec
mov
sbb
jae
cmp
sbb
and
mov
pop
out
in
pop
cmp
inc
cmp
jbe
sbb
jb
je
mov
data16
and
add
add
call
jl
jbe
mov
or
or
mov
mov
test
and
(bad)
xor
sbb
pop
or
add
ror
sub
je
cmc
push
inc
ja
and
cmp
imul
lea
sbb
adc
lock
je
mov
sub
pop
in
mov
adc
inc
push
sbb
rcl
fiadd
jbe
enter
call
add
push
mov
test
xor
adc
pop
xlat
test
gs
dec
or
nop
xchg
add
cmps
icebp
pushf
pop
mov
pop
sbb
sub
pop
les
test
cmp
push
adc
adc
jo
ud0
adc
push
or
add
loopne
dec
das
test
dec
je
fild
dec
ror
cmp
push
cwde
mov
push
out
imul
xor
popf
sub
dec
aam
cmps
push
loopne
or
ret
lods
lea
and
cmp
or
dec
jnp
push
test
div
sub
push
pop
pop
push
add
dec
xor
sub
cs
or
pop
je
xchg
lock
inc
adc
or
and
aam
inc
(bad)
and
push
std
adc
jmp
sub
jne
push
jne
inc
jbe
test
add
adc
fsubr
fisttp
jmp
sub
ret
imul
sub
add
push
pop
pop
outs
add
mov
push
and
imul
mov
and
adc
cmps
(bad)
fbld
add
call
jbe
jmp
movs
(bad)
jne
inc
fcom
xor
lods
(bad)
jmp
ss
and
je
fadd
add
test
mov
inc
dec
adc
pop
sbb
out
js
or
xor
pop
movs
xchg
mov
push
or
add
or
push
xchg
inc
mov
pop
xor
or
test
push
pop
fidiv
dec
or
lods
call
inc
or
adc
shl
sbb
aad
iret
and
adc
scas
cmp
iret
in
and
cli
mov
js
or
gs
push
jp
jne
pop
clc
popf
or
shr
int
mov
pop
jl
(bad)
pusha
inc
xchg
and
pusha
or
and
xor
retf
jle
add
aad
jae
cs
pushf
mov
xor
mov
aam
fldenv
rol
and
mov
rcl
adc
popa
push
push
outs
mov
or
retf
(bad)
push
jne
mov
mov
adc
sub
push
cmp
xchg
lock
test
fidivr
mov
movs
mov
mov
mov
shr
sub
sub
call
sub
adc
and
fbld
sbb
not
and
cmp
and
pop
mov
mov
int3
adc
jecxz
adc
ret
stc
add
inc
xchg
(bad)
jne
dec
leave
outs
inc
and
xchg
xor
shr
push
das
or
in
push
mov
shr
pop
js
add
fld
lock
sub
retf
cmps
aaa
cmp
inc
bound
dec
and
rol
adc
repz
std
outs
and
retf
adc
mov
stos
icebp
and
test
mov
lea
test
inc
mov
sub
jae
ret
dec
push
mov
sbb
push
add
add
push
xchg
add
sub
inc
adc
mov
outs
xchg
enter
pop
jmp
dec
(bad)
push
or
jl
test
adc
sub
xor
dec
outs
or
push
push
push
push
xor
sub
add
xchg
xchg
jl
mov
sbb
xchg
mov
push
add
push
mov
repz
pop
mov
ret
and
pop
aad
add
retf
jmp
jecxz
xor
jne
lea
je
push
xor
lock
pop
lods
push
push
mov
add
push
je
les
dec
das
(bad)
stc
or
cmp
pusha
ret
sub
jle
inc
loopne
xor
cmp
mov
inc
add
psubsb
fistp
add
test
add
dec
mov
add
pop
push
idiv
(bad)
fsub
mov
lea
les
in
gs
loop
add
cmp
in
pop
push
test
push
jne
adc
ficom
fdivr
loop
xor
mov
push
sbb
sbb
(bad)
cs
jne
mov
in
mov
mov
xchg
inc
shl
test
in
dec
test
inc
loopne
pop
mov
bound
aaa
jmp
lahf
push
xor
jmp
int
repnz
adc
cmp
aas
stos
dec
mov
ret
cmps
inc
add
sub
mov
lahf
xor
mov
add
loope
sub
mov
pop
jge
xchg
data16
push
inc
rcl
push
popa
dec
pop
adc
(bad)
call
sar
mov
loope
jmp
sbb
push
add
pop
jmp
popf
test
cwde
scas
inc
mov
lds
test
pop
jmp
ins
mov
aad
and
retf
je
and
jo
lea
adc
aad
(bad)
into
loop
dec
mov
or
ds
jecxz
mov
jo
retf
fist
icebp
scas
adc
(bad)
sar
or
sbb
xchg
dec
jmp
ins
add
cdq
jg
pop
sub
in
mov
out
call
dec
fcom
inc
cmp
mov
test
or
sbb
add
xor
hlt
stos
je
cmp
sub
cmp
arpl
hlt
out
mov
inc
xor
mov
pop
mov
out
dec
lods
push
or
sbb
enter
mov
inc
test
jo
rcl
mov
dec
sbb
push
sbb
jmp
lea
pop
ins
add
xchg
loopne
xor
das
or
mov
clc
mov
or
mov
fdivr
or
mov
and
mov
mov
mov
adc
dec
addr16
push
lea
leave
jp
dec
or
adc
add
xchg
pop
adc
cmp
js
mov
adc
mov
push
push
or
mov
loopne
jl
xlat
ret
cmp
sbb
sbb
jp
mov
jmp
jae
inc
mov
mov
mov
xor
popa
shl
add
inc
in
mov
daa
mov
addr16
xchg
sahf
jl
jae
ins
dec
(bad)
xor
sub
je
cmp
adc
push
cmp
mov
sub
je
or
inc
or
test
cmp
jmp
imul
enter
je
push
jns
xchg
cmp
jne
rcl
imul
jmp
mov
cmp
addr16
or
leave
test
mov
sub
jg
or
mov
sub
shl
push
dec
dec
inc
pop
dec
mov
xor
add
(bad)
xor
mov
xor
add
add
test
and
ffreep
xchg
sub
sar
nop
mov
mov
mov
xlat
jmp
(bad)
cmp
push
or
jo
inc
adc
pop
cmp
add
retf
cmp
or
cwde
adc
cmp
mov
inc
inc
or
jge
sar
mov
xor
leave
hlt
ins
adc
jle
test
je
mov
scas
pop
stc
jbe
test
or
retf
or
adc
test
loope
dec
push
add
xlat
stmxcsr
inc
ins
pusha
test
push
hlt
fs
in
sbb
fs
leave
iret
or
cld
pop
jmp
data16
lods
sub
or
push
dec
push
imul
or
or
push
call
stos
xlat
pusha
sbb
daa
and
add
mov
xchg
mov
adc
dec
mov
pusha
ins
cs
cmp
adc
jmp
push
inc
jbe
and
div
mov
xor
ret
jmp
not
or
and
or
cmp
add
dec
les
push
fldcw
test
loopne
cld
and
xor
xor
into
into
into
into
(bad)
jg
test
retf
je
push
cs
sub
stc
retf
jne
or
repz
add
adc
daa
pop
aaa
mov
fistp
mov
pop
add
add
aaa
or
lock
jns
call
add
or
xlat
loope
add
ds
mov
jmp
cs
outs
cli
add
leave
leave
jg
xchg
push
and
je
sub
mov
jle
ss
aam
mov
and
pusha
rol
test
adc
rol
out
outs
hlt
mov
push
fs
sub
pop
mov
shr
hlt
adc
xchg
in
cs
mov
pop
and
add
int
jecxz
sub
sti
dec
shr
rcl
mov
adc
and
push
jne
jmp
cmp
cmps
mov
push
loopne
push
cs
or
adc
ret
adc
pop
out
adc
mov
sbb
mov
mov
loopne
shl
cld
inc
push
sbb
adc
xor
(bad)
dec
dec
and
jle
jecxz
daa
js
mov
test
in
rol
push
inc
add
push
lea
out
or
fsubr
or
iret
add
sbb
neg
lock
jg
adc
sub
imul
paddusb
mov
(bad)
clc
lods
mov
sub
add
(bad)
pop
mov
inc
test
lea
sub
sub
in
inc
cmp
jg
dec
in
adc
movs
mov
nop
scas
mov
ss
cwde
ja
(bad)
cld
test
je
mov
dec
loopne
push
mov
popa
add
pop
sub
pusha
sub
sahf
xchg
jne
or
or
sbb
push
inc
test
adc
adc
pop
xchg
mov
xchg
or
pop
inc
mov
xor
mov
jno
inc
adc
add
mov
loopne
jbe
mov
cmp
rol
xchg
lock
aaa
aaa
je
push
jb
and
ds
add
push
mov
test
bound
dec
and
in
inc
(bad)
jmp
cmp
jl
jmp
sbb
dec
cmp
je
(bad)
pop
inc
adc
cmp
xor
push
ds
imul
push
cmp
cld
inc
ret
add
push
pushf
jecxz
xor
push
cmp
push
mov
jmp
sub
pop
sbb
dec
or
and
and
lea
mov
cmp
mov
popa
bound
das
xchg
sub
jne
add
movsx
pop
fnsave
pop
or
sub
and
mov
adc
rol
mov
adc
xchg
sbb
repnz
nop
xchg
pop
xchg
jnp
inc
test
outs
cmp
adc
mov
jge
dec
cmp
sub
movs
jl
push
imul
fucomp
fst
pushf
or
mov
ss
and
or
jp
mov
or
rol
mov
popf
mov
adc
mov
adc
sti
clc
dec
addr16
inc
pop
in
rcr
ror
jl
pop
inc
or
cmp
pop
sbb
lods
ins
cmp
sub
ins
sub
xchg
(bad)
in
adc
outs
hlt
icebp
and
shl
in
hlt
test
daa
cld
(bad)
bound
sub
mov
cmp
push
out
xchg
outs
or
out
stc
fsub
jne
or
shl
lock
mov
(bad)
and
nop
clc
mov
push
adc
iret
mov
stc
and
sahf
push
add
mov
and
mov
jmp
jb
imul
mov
push
mov
dec
add
xchg
repnz
xor
lock
mov
cs
scas
push
adc
out
mov
or
mov
mov
fmul
push
and
call
loope
out
retf
stos
xchg
jnp
sub
dec
cld
rcl
xor
(bad)
jp
and
add
pop
mov
xchg
rcl
or
mov
xchg
sahf
mov
fldenv
imul
aaa
inc
les
(bad)
or
rol
mov
out
mov
cs
add
inc
pop
nop
lea
dec
sub
(bad)
iret
nop
cli
inc
mov
pusha
ret
inc
mov
out
loop
or
mov
dec
out
push
mov
int3
leave
adc
daa
pop
and
cmp
lods
xchg
repnz
and
lea
jb
cmp
inc
mov
and
lds
mov
test
int3
les
scas
movs
mov
fisttp
(bad)
clc
rcl
inc
(bad)
xchg
bound
sub
mov
inc
popa
adc
in
xchg
mov
and
cmp
add
pop
sar
retf
(bad)
fincstp
add
adc
adc
mov
(bad)
mov
lods
or
mov
cmp
cmps
or
cmp
inc
xchg
mov
mov
jmp
out
or
sar
push
fisub
and
pop
push
fs
shr
xor
shl
push
(bad)
lods
rcr
or
int
sub
adc
ret
xor
cmp
movs
push
and
mov
xor
xchg
es
pushf
clc
mov
and
gs
mov
or
dec
sti
cmp
cmp
jae
pop
popf
gs
imul
push
sub
imul
adc
lea
in
pop
inc
pushf
inc
lods
test
clc
je
cli
ja
inc
sub
mov
sar
and
xchg
pop
out
xor
fisttp
iret
mov
mov
(bad)
fcmovnb
sbb
ret
rol
and
not
arpl
cs
clc
and
es
pmulhuw
xor
movs
clc
pop
jmp
in
clc
nop
cli
xor
dec
dec
or
sbb
stc
add
mov
rcr
nop
pusha
mov
imul
and
add
inc
adc
jne
or
enter
cld
mov
push
stos
mov
mov
retf
cmps
rol
dec
ret
mov
cmps
xor
es
add
movs
rcl
ror
mov
outs
mov
jns
in
push
or
inc
push
push
popf
dec
(bad)
ja
inc
sub
sub
test
mov
adc
mov
mov
or
test
shl
test
pop
mov
rol
adc
clc
jl
xchg
inc
ds
sar
clc
faddp
or
jo
clc
and
clc
adc
aaa
arpl
sub
outs
jb
dec
push
push
sar
xor
nop
or
mov
test
rol
cmp
cmp
dec
adc
add
repnz
xchg
clc
mov
clc
jmp
push
inc
or
and
sub
adc
mov
mov
and
shr
fist
dec
pop
push
push
jl
pushf
clc
adc
pop
mov
and
mov
push
test
push
xor
mov
mov
sti
mov
cdq
push
lea
xor
pop
cmps
lea
and
cmp
idiv
cmc
mov
jmp
int3
dec
neg
and
cmp
leave
lods
test
sub
mov
ret
pop
dec
aad
xchg
rcr
lods
cs
dec
sub
(bad)
xor
push
mov
pop
sub
ins
sbb
sbb
pushf
cmp
jl
xor
data16
dec
jmp
fld
jmp
inc
retf
add
cli
xor
or
loop
pop
das
stc
shr
adc
add
leave
or
rol
jns
ja
(bad)
nop
inc
repnz
retf
mov
(bad)
and
push
xor
jne
ja
movs
cmp
movs
test
movs
or
and
dec
(bad)
mov
sub
pop
ja
shl
jmp
lods
sub
test
add
pushf
mov
xchg
es
sbb
mov
push
scas
cmps
xor
xor
push
pmulhuw
inc
xlat
cmp
imul
push
aam
and
mov
enter
inc
sub
aaa
push
mov
mov
ss
mov
fldl2e
inc
stc
jbe
jae
or
dec
mov
mov
stc
xor
loope
jle
xchg
pop
repz
inc
test
cmp
xchg
es
mov
and
dec
push
sub
pop
pop
add
(bad)
or
(bad)
lea
xor
pop
xor
inc
push
adc
sbb
(bad)
cmps
push
mul
push
nop
into
jo
call
in
add
movzx
cmp
add
sar
or
dec
jmp
add
xor
pop
and
push
(bad)
lea
stc
lock
inc
daa
sbb
xor
bound
and
push
lods
add
or
or
popa
dec
xor
jno
inc
sub
and
or
and
add
rol
inc
inc
outs
shl
mov
ja
outs
push
call
and
add
dec
aam
jp
ja
mov
icebp
(bad)
mov
(bad)
pop
gs
sub
jb
cmp
or
jmp
lods
mov
push
retf
push
popf
aas
mov
cmp
dec
test
xchg
xor
rcr
les
and
les
in
neg
and
dec
shr
adc
lock
shl
xchg
out
xor
xor
adc
push
add
sub
mov
mov
cmps
(bad)
test
push
push
rcr
outs
sub
sub
push
ret
jno
aam
ins
mov
shl
jp
push
iret
sar
rcl
pop
adc
outs
sub
inc
mov
(bad)
bound
push
and
mov
mov
mov
inc
adc
jb
aad
dec
xlat
add
sbb
or
loopne
test
dec
jmp
dec
fs
jae
mov
and
ret
mov
test
je
sub
fwait
sub
icebp
call
pop
lods
jne
push
push
add
fadd
mov
add
not
scas
inc
mov
inc
call
cmp
inc
inc
pop
sbb
es
adc
test
adc
pop
cmc
or
jl
adc
rcl
inc
shl
push
js
test
mov
inc
data16
add
sbb
adc
dec
or
daa
add
movs
pop
xor
cmp
jo
pop
mov
ret
pop
addr16
aad
rcl
enter
fst
and
add
push
and
cmp
pop
inc
cmp
jns
cmps
sbb
pop
add
or
test
and
fs
cmp
cwde
pop
in
sti
push
cmp
add
push
inc
iret
xchg
or
push
and
or
or
jo
and
ins
neg
in
add
add
sub
sub
add
adc
and
or
cs
xchg
xchg
add
or
dec
xchg
pusha
and
jo
and
push
(bad)
stc
test
stc
outs
(bad)
adc
jmp
std
and
bound
out
pop
push
je
mov
pop
shr
adc
or
cmp
in
xor
pop
or
inc
jb
pop
sub
and
das
cwde
sbb
rcl
enter
or
add
push
repnz
dec
add
add
push
daa
loope
adc
and
adc
jge
in
add
loopne
ds
push
rcl
xor
or
sbb
inc
mov
jb
adc
cmp
or
cmp
pusha
push
cmp
jns
adc
ja
pusha
jo
loopne
push
and
dec
cmps
es
jae
mov
or
out
into
mov
adc
jns
or
rcl
pop
pop
test
pop
stos
inc
test
in
pop
jge
ror
hlt
mov
jne
mov
dec
rcr
movs
or
mov
call
gs
push
ficom
mov
fs
mov
or
jnp
cld
sbb
adc
and
pop
xor
jl
mul
sbb
enter
outs
and
jb
mov
and
dec
add
dec
push
pop
dec
adc
retf
add
loopne
push
loop
into
or
repnz
(bad)
rcl
sub
adc
xchg
rcr
je
jbe
popf
lods
sahf
fmul
and
push
or
fdiv
jns
dec
add
push
inc
mov
add
popa
or
adc
jmp
mov
movs
addr16
lds
clc
add
ds
cmp
add
fldenv
aas
mov
jmp
add
mov
loopne
cld
xor
fs
xchg
test
pusha
clc
adc
add
mov
sbb
je
mov
push
xchg
cmp
jmp
(bad)
cmp
jo
xchg
rcl
pop
pop
arpl
js
adc
dec
pop
inc
addr16
jmp
stc
mov
mov
sub
lock
xchg
xlat
or
(bad)
sub
sub
lods
cmp
xor
stos
movs
and
les
mov
mov
pop
add
pushf
xor
or
rcr
mov
fwait
sub
sub
sbb
mov
lahf
add
cmc
fsubr
test
or
dec
fidiv
add
xor
xchg
adc
adc
lds
loop
and
in
push
les
add
xchg
adc
(bad)
jge
aam
inc
sbb
dec
dec
popf
dec
add
mov
cmps
xchg
sub
sbb
mov
dec
gs
pusha
mov
sbb
nop
mov
aas
test
les
sbb
repnz
sbb
and
mov
inc
inc
lods
mov
xor
outs
jp
out
adc
mov
mov
je
add
fsub
xchg
mov
mov
jmp
mov
ss
or
aaa
das
loope
ret
pop
enter
mov
xchg
test
sbb
cmps
xor
sub
ficom
mov
inc
loopne
data16
jne
xlat
push
push
xor
add
mov
movs
cmp
in
cmp
sub
cmp
jl
jge
pop
push
jg
out
xor
mov
mov
or
push
ret
mov
add
sub
mov
imul
mov
cli
enter
(bad)
dec
clc
jae
dec
(bad)
sbb
push
pop
loop
add
xor
pop
adc
pop
das
adc
ss
xchg
add
jb
in
push
and
test
cmp
pop
push
fsub
imul
sub
jbe
or
cmp
bound
es
jns
sub
(bad)
push
and
sbb
movs
add
mov
xchg
push
cdq
cmp
retf
movs
les
pop
pop
fldcw
dec
or
sub
add
mov
mov
pop
jp
clc
jmp
lea
jae
pop
xor
add
pop
cli
mov
stc
xlat
mov
inc
mov
and
inc
jo
dec
jb
lea
(bad)
push
hlt
xchg
xchg
cmp
pop
mov
jnp
jl
add
sbb
fst
sub
mov
mov
xor
loop
stos
mov
mov
sbb
jmp
mov
dec
(bad)
clc
or
adc
int3
or
cli
adc
rol
mov
daa
push
fild
sbb
xor
or
fcmovnu
inc
dec
adc
loopne
out
fcomp
shl
dec
push
adc
mov
inc
mov
call
jae
jae
fisub
push
out
sbb
push
push
pop
pop
mov
or
ins
or
or
jo
loopne
mov
jno
mov
imul
and
jp
or
call
dec
sub
cmp
mov
mov
cmp
out
arpl
add
retf
daa
sub
adc
mov
mov
xchg
pop
jl
aaa
icebp
or
daa
add
push
mov
ror
or
sbb
and
or
pop
add
adc
mov
inc
mov
les
inc
aad
into
dec
mov
fnstcw
jp
xor
adc
fbstp
rcr
push
sub
sub
pop
push
stos
(bad)
test
test
scas
or
and
aad
pop
movs
call
inc
pop
(bad)
dec
ss
pop
in
add
add
sub
dec
mov
enter
cmp
not
test
sbb
test
int3
bound
adc
mov
push
xchg
rdtsc
push
xchg
ror
sbb
adc
jle
in
or
and
dec
and
retf
cmps
cmp
xchg
push
out
push
js
xlat
popa
and
xchg
popa
sub
push
sahf
fstp
scas
sbb
mov
or
int3
call
mov
and
cs
inc
add
sbb
pop
jns
ds
(bad)
jmp
pop
ffree
jmp
test
shl
push
or
and
inc
sub
pop
or
add
jne
jge
dec
or
fsub
or
mov
and
add
popa
in
lock
jmp
scas
xor
push
sbb
push
inc
cmp
pop
jb
addr16
(bad)
sbb
adc
pop
and
fst
ins
test
or
and
adc
add
fistp
sbb
leave
dec
shl
(bad)
mov
mov
add
leave
das
and
xchg
imul
ret
push
cs
push
push
cwde
ret
cmp
cmp
jmp
aas
or
je
add
sbb
movs
mov
or
push
or
xor
ror
mov
dec
xor
add
or
and
sub
or
fldenv
aam
ins
clc
push
mov
mov
js
sub
pop
cld
fwait
imul
fstsw
and
pop
hlt
fwait
sbb
sti
jg
cmp
and
call
sbb
mov
or
sbb
push
aam
cdq
push
inc
add
cmp
stos
enter
add
push
adc
sbb
inc
mov
xchg
aad
call
mov
jo
add
cmp
cld
sbb
xor
inc
push
and
dec
lods
sar
inc
adc
pop
push
mov
inc
jo
and
add
mov
mov
add
loop
lock
sahf
inc
pop
les
and
pop
popa
mov
cmp
fs
dec
inc
test
jg
jg
fidivr
push
dec
jmp
loop
test
add
xchg
ret
icebp
les
ja
imul
fwait
jo
mov
fdiv
inc
mov
xchg
clc
xor
sbb
ret
fisttp
inc
fldlg2
fxch
fyl2x
mov
add
sar
shl
mov
sti
out
out
pop
jmp
test
or
jne
and
mov
lds
fld
fninit
jmp
imul
push
lds
(bad)
into
mov
inc
dec
mov
(bad)
loope
jb
jecxz
ret
lahf
scas
movlps
pusha
jmp
sti
cmc
stos
pop
jle
movapd
jb
push
enter
mov
outs
jae
xor
xor
mov
cmp
cli
rcl
retf
sti
mov
dec
cmp
jge
repz
or
jg
or
neg
(bad)
dec
mov
xchg
ret
adc
(bad)
jnp
mov
(bad)
nop
es
enter
xchg
inc
pop
adc
test
clc
pop
repz
les
xchg
mov
fnstsw
mov
jo
dec
lock
jno
addsd
int
cmps
mov
fcmovb
sbb
sbb
xchg
pop
push
push
dec
jge
cmp
out
inc
out
test
js
push
pop
dec
daa
les
dec
test
(bad)
(bad)
popa
push
pop
inc
xchg
xchg
xchg
lea
jl
adc
loop
aam
pop
fcom
sbb
mov
imul
mov
je
push
(bad)
out
xchg
ficom
out
mov
sbb
sub
sbb
pop
and
addr16
jae
or
xor
loopne
push
sbb
and
add
pop
jl
sbb
adc
pop
or
rcl
jmp
dec
cld
and
push
stc
inc
xlat
lods
(bad)
pop
into
int3
stc
or
ror
xor
std
dec
or
int3
xor
out
push
imul
push
and
mov
inc
xor
sub
dec
jmp
aad
loope
call
shl
sbb
mov
mov
inc
adc
sbb
gs
sub
cmp
or
pop
ror
dec
adc
sub
sbb
inc
pop
push
data16
pop
push
inc
outs
loopne
add
shr
or
adc
pop
sub
xlat
mov
sahf
or
push
cmp
cs
add
or
add
pop
or
adc
popf
shr
xchg
sbb
or
or
mov
xchg
cmp
cmc
lock
dec
stc
xor
push
xor
jmp
inc
mov
add
addr16
aaa
or
dec
aad
inc
fs
push
sar
je
repnz
push
jp
jge
retf
adc
outs
sar
add
call
aad
int
iret
repz
push
adc
iret
repz
pusha
xor
in
add
push
push
cwde
pop
loopne
les
and
dec
fist
js
mov
push
mov
hlt
repnz
(bad)
push
les
push
add
jecxz
(bad)
push
xchg
jmp
aas
shl
jl
or
loopne
ins
pop
sub
cmp
shl
add
in
ins
xchg
inc
ror
out
mov
push
jae
mov
push
(bad)
outs
daa
and
push
sub
rcl
cmc
stos
nop
dec
push
in
push
imul
imul
fst
stc
mul
adc
rol
faddp
adc
mov
jmp
loopne
mov
lea
enter
cmps
loopne
fsubr
dec
mov
(bad)
aaa
dec
ret
fidiv
push
loope
mov
cmp
rol
je
add
loopne
mov
pop
dec
pop
shl
jne
push
and
sbb
jge
sar
add
clc
or
dec
push
leave
or
(bad)
cli
jp
mov
dec
and
or
adc
mov
pushf
rcr
adc
jns
push
jae
and
shr
adc
xor
mov
pop
adc
(bad)
mov
clc
(bad)
mov
or
jne
mov
or
loop
in
fldl2e
fmulp
(bad)
out
mov
not
push
retf
adc
dec
add
std
data16
xchg
lock
pop
mov
loop
sar
not
cwde
loope
scas
cmp
fnstsw
int
fsubr
fldln2
inc
in
fnstsw
pusha
sbb
rol
push
ret
inc
pushf
stos
std
test
push
pop
in
scas
gs
fdivr
sbb
sub
fldz
or
or
in
ins
sahf
cs
jmp
inc
inc
or
add
js
or
adc
pusha
add
scas
daa
dec
sar
pop
fcompp
mov
cmp
(bad)
push
sub
fsub
daa
fcmovbe
mov
test
fcomp
mov
test
daa
fisubr
ret
mov
gs
ja
icebp
push
push
je
hlt
or
stos
or
ins
and
div
frstor
jno
enter
jle
pop
xor
inc
add
cmp
jne
add
and
iret
fiadd
mov
fs
pop
pusha
popf
pop
sub
movs
pop
push
into
fxam
mov
pop
sub
(bad)
shl
sar
rcl
shl
xchg
out
stos
ins
fst
fiadd
fmul
lods
push
push
iret
cmp
cld
(bad)
das
and
rol
mov
mov
dec
add
in
or
pop
call
add
ret
adc
imul
jp
or
ret
mov
mov
or
loopne
je
and
paddusb
jae
ret
ins
dec
push
cwde
mov
adc
fadd
xor
not
popf
add
mov
pusha
mov
cmp
leave
mov
and
movs
push
pop
fld
call
and
sub
(bad)
loopne
shr
cli
imul
pop
or
data16
fldcw
push
not
jmp
pop
sahf
fmul
push
add
add
add
mov
or
add
or
mov
and
sub
les
test
jbe
pusha
sub
xchg
and
xlat
sbb
sbb
ret
test
lea
nop
and
adc
cmp
add
ror
cmps
jbe
adc
je
xlat
pop
mov
sti
retf
and
jne
sbb
mov
leave
int3
stos
not
mov
loope
(bad)
out
fcomp
xor
ja
sbb
mov
push
add
add
sbb
mov
(bad)
loopne
pop
xchg
pop
add
sbb
jmp
sub
fstp
and
daa
sub
push
call
push
push
sub
and
clc
add
jge
ins
or
xchg
sbb
test
or
mov
mov
xchg
inc
xchg
test
aaa
push
add
xor
inc
clc
sbb
(bad)
and
in
cwde
rcl
mov
push
cmps
add
pop
sub
je
aam
add
js
adc
cmp
and
sub
sbb
pushf
ror
inc
frstor
inc
adc
inc
fsubr
sbb
add
js
sbb
xor
daa
and
and
ins
and
lahf
sbb
in
pop
and
mov
sbb
fcom
mov
push
or
dec
and
popa
jp
cmp
jmp
push
lods
ret
lods
jnp
fstp
cmp
rcr
pop
adc
adc
je
sub
sub
push
push
add
xor
inc
fcmovu
mov
cmp
xchg
pop
inc
add
xchg
pop
dec
xor
inc
ror
jge
mov
jne
imul
cmp
hlt
fstp
mov
(bad)
push
mov
sbb
loop
ffree
fdiv
dec
mov
adc
mov
enter
jno
out
aaa
movs
add
in
push
int3
ja
push
push
pop
push
arpl
sub
ror
rcr
cmp
ds
or
aas
dec
stc
sub
jge
clc
inc
cld
fucom
dec
les
push
std
fadd
and
mov
push
test
fst
jmp
jge
bound
sub
inc
inc
dec
jl
adc
push
retf
imul
inc
sub
jo
dec
loopne
ret
push
push
mov
outs
add
ins
retf
mov
mov
cmc
jg
pop
mov
mov
or
mov
je
jb
(bad)
(bad)
fadd
out
out
push
cmp
ja
add
cmp
inc
retf
lock
(bad)
cmp
mov
ss
inc
or
sbb
jb
push
xor
pusha
pop
pop
leave
je
sbb
inc
xchg
dec
and
jne
fdiv
add
sub
jl
cmps
jl
jo
inc
inc
clc
fucompp
inc
sbb
xchg
push
add
mov
dec
mov
mov
jne
fsubr
adc
fcom
(bad)
push
data16
add
xor
jp
out
clc
sbb
in
inc
(bad)
xor
adc
aaa
ret
ja
sbb
inc
fdiv
sbb
ss
dec
in
cs
lea
popf
sub
inc
test
fnstenv
das
xchg
stos
jle
(bad)
(bad)
jmp
call
pop
inc
mov
lea
jp
enter
jno
sub
daa
fsubr
pushf
sbb
enter
and
xor
sbb
arpl
mov
inc
enter
inc
jae
in
stos
pop
and
jl
push
mov
or
ret
push
mov
(bad)
adc
call
popf
test
xchg
push
mov
or
jb
inc
std
or
cs
cs
adc
jecxz
mov
sbb
(bad)
(bad)
rcr
cs
rcr
sub
jecxz
add
inc
jne
into
or
std
pushf
sbb
retf
add
and
and
push
in
cmp
mov
or
push
adc
jmp
pop
jp
shl
sub
frndint
cwde
enter
and
popa
jae
mov
test
shl
test
aaa
xchg
or
mov
loope
dec
xor
loopne
add
mov
dec
or
adc
das
xlat
fidivr
push
adc
or
and
push
ja
out
outs
in
stc
inc
popa
or
inc
shr
adc
fnsave
sbb
push
out
mov
add
dec
or
jbe
call
xchg
push
imul
das
sub
dec
imul
adc
test
push
idiv
adc
add
loope
sub
cld
add
xor
mov
add
pop
mov
daa
es
mov
push
loopne
cmp
je
or
sbb
pop
push
pusha
jo
push
mov
push
mov
jg
mov
sub
in
lods
sbb
sub
jmp
sub
fwait
jmp
dec
jmp
call
inc
inc
retf
cmp
push
dec
cwde
call
fld
mov
adc
jns
call
shl
push
and
add
xchg
xchg
ds
mov
rcl
pop
cmp
cli
ins
jge
mov
leave
inc
jmp
fisubr
pop
add
idiv
jo
dec
sub
push
pop
pop
fidivr
mov
test
aam
lods
outs
repnz
sbb
cwde
or
push
adc
ins
hlt
into
fcmovu
adc
inc
sbb
shl
sbb
dec
(bad)
jbe
inc
pop
dec
clc
test
outs
popa
cwde
fsubr
out
lods
push
and
jne
aam
arpl
add
dec
mov
pushf
pop
pusha
cmps
push
(bad)
aam
pop
push
mov
add
fimul
or
mov
sbb
add
and
xchg
sub
add
add
mov
ins
and
ror
nop
add
or
pusha
jmp
pop
not
xor
adc
or
cmp
aam
or
and
leave
shr
add
pop
ficom
and
add
inc
loopne
cs
ror
adc
add
pop
aaa
das
mov
pop
add
and
mov
or
jns
fnstsw
sub
add
and
(bad)
ss
into
xor
sbb
lock
and
movs
pop
mov
jl
and
mov
aam
jecxz
sbb
dec
jmp
xchg
jmp
xor
xor
inc
fisubr
xor
and
or
pop
pop
sub
add
and
sbb
outs
fstp
retf
adc
pusha
ins
pop
sbb
pusha
loope
sbb
scas
inc
and
sub
xchg
jecxz
data16
mov
rcl
add
and
inc
(bad)
push
scas
mov
pop
add
push
fild
or
jns
dec
in
test
pop
push
fbld
int
fstp
jne
add
sub
and
aam
mov
mov
out
and
mov
mov
sbb
cmp
xor
xor
and
dec
add
mov
add
inc
push
fstp
jmp
xchg
movs
fild
pop
in
ror
dec
ja
ins
add
icebp
pop
and
sar
outs
xchg
push
mov
sub
mov
test
and
or
sub
mov
add
adc
dec
in
cdq
inc
call
and
mov
and
loopne
and
cwde
inc
(bad)
loope
dec
xchg
dec
in
and
pop
push
xchg
push
pop
jmp
imul
ss
push
lea
lea
or
adc
fstp
cmp
push
data16
and
test
cmps
jne
pop
test
cmc
add
push
or
pusha
cmp
push
inc
stos
push
inc
and
leave
mov
lods
(bad)
sbb
adc
ror
je
movs
mov
sub
sbb
jo
add
add
lock
sbb
mov
xchg
push
jmp
and
fsub
dec
sub
out
add
out
jecxz
aaa
mov
(bad)
jg
cmp
adc
fwait
es
mov
(bad)
je
mov
lods
or
xchg
pop
or
iret
int3
mov
test
popa
jle
nop
and
sub
cwde
and
pop
pop
(bad)
push
mov
retw
daa
or
aam
call
loope
sbb
test
inc
cwde
adc
icebp
pop
jno
or
add
arpl
xor
add
test
pop
sbb
cmp
sbb
rcl
sbb
push
mov
(bad)
and
(bad)
and
lea
xor
out
fnstcw
cmp
lea
push
mov
push
fstp
push
add
int3
add
xor
or
or
push
pop
shl
jae
and
and
lods
and
pop
push
jo
add
or
xchg
mov
stc
jb
inc
cmp
cmp
jb
mov
mov
(bad)
lock
add
dec
fist
mov
push
pop
clc
inc
or
lock
or
or
pusha
int3
cmps
push
mov
lods
push
xor
sbb
ret
add
and
pop
or
or
inc
pop
add
mov
ror
inc
mov
sub
lea
jg
mov
and
fstp
cmp
cmp
push
sbb
aas
dec
and
sub
cmp
popa
into
bnd
xchg
sbb
loopne
cld
in
jmp
repnz
outs
adc
inc
loopne
add
xor
shl
mov
test
xchg
mov
cs
lsl
jmp
push
pop
push
push
sahf
std
dec
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
fild
inc
inc
mul
pop
jb
cmp
or
cmp
ja
or
or
xor
adc
adc
push
fidivr
fisubr
sbb
push
jp
iret
cmp
xchg
or
jnp
cmp
loope
push
or
mov
fsubp
add
loope
rcr
or
out
jae
and
shld
shl
xchg
rcl
dec
or
jmp
fwait
shrd
lods
rcl
jmp
shl
push
push
push
cmp
dec
ss
xor
jge
inc
inc
repnz
mov
cld
sub
mov
sbb
nop
arpl
mov
xor
push
push
inc
pop
sahf
setnp
rcr
mov
icebp
sbb
dec
push
mov
xor
popa
jns
leave
dec
jns
mov
dec
jne
pop
pop
pop
push
xor
pop
jmp
repnz
ror
xchg
push
or
scas
in
jecxz
sbb
or
jmp
mov
sbb
adc
mov
cmp
add
in
and
sbb
adc
jg
mov
pop
enter
and
ret
gs
or
(bad)
loope
push
mov
inc
push
enter
les
lock
inc
jno
cmp
sub
pop
cmp
adc
mov
test
sbb
cdq
lods
adc
xchg
jmp
or
out
fnsave
adc
dec
ds
sbb
sbb
jmp
dec
jns
jmp
popa
pop
mov
add
xor
adc
jae
cmp
or
sbb
mov
adc
sbb
ins
add
mov
outs
scas
adc
clc
cvttsd2si
leave
ret
aaa
push
call
pop
(bad)
sub
outs
pop
je
fild
dec
jp
(bad)
sub
shl
push
out
jl
fistp
and
fsubrp
adc
fstp
xor
pop
add
xchg
fnstenv
cmp
fsubr
sub
sub
fstp
add
pop
xor
ret
les
fs
cmp
bnd
mov
or
mov
sub
add
add
pop
sub
sub
add
in
and
hlt
nop
add
push
cld
or
sbb
push
add
lahf
xor
nop
add
mov
leave
inc
adc
loopne
sub
add
fstp
ret
inc
add
push
xor
inc
adc
ja
sbb
bound
pop
dec
aam
xchg
and
and
sub
xor
mov
xchg
sbb
leave
fsubr
xchg
add
test
pusha
(bad)
out
xchg
add
fldenv
fcom
loope
shr
inc
loopne
aaa
dec
and
pop
dec
inc
ret
and
in
je
cmp
adc
cmp
retf
je
inc
outs
jmp
clc
jmp
and
sahf
loop
inc
lock
out
push
inc
(bad)
cmovb
adc
and
and
rol
mov
mov
loop
clc
and
jne
cmp
dec
sub
mov
lock
jmp
clc
dec
push
scas
jne
fsubr
neg
into
mov
std
sbb
mov
pop
fdivr
sbb
mov
not
mov
xchg
test
sbb
inc
xor
dec
xor
xchg
jne
push
cmp
mov
in
out
shr
jae
jbe
jle
or
punpcklwd
mov
add
outs
xchg
sbb
test
cmp
adc
out
dec
add
(bad)
pop
jnp
add
in
mov
data16
ja
sbb
sbb
ret
ret
outs
mov
jae
out
(bad)
shl
add
ret
ret
push
add
fstp
and
mov
fisttp
adc
mov
or
add
fdivp
adc
xor
sbb
or
or
in
fild
push
pop
sub
pop
fimul
mov
inc
sub
les
mov
(bad)
das
add
mov
lahf
mov
pop
add
out
outs
sub
retf
fistp
out
adc
imul
dec
les
and
mov
loop
push
ss
add
mov
jmp
sahf
ins
add
fadd
imul
mov
test
ins
les
add
adc
xor
inc
cmp
ins
je
int3
sar
dec
push
in
jnp
pop
or
mov
(bad)
push
adc
dec
xor
pushf
imul
mov
adc
xchg
(bad)
(bad)
sub
pop
jmp
xchg
sahf
in
xor
(bad)
inc
push
push
jmp
pop
sub
hlt
dec
or
or
push
imul
mov
push
arpl
inc
mov
sub
mov
jmp
stos
add
push
and
popa
aaa
pop
fsubr
mov
es
shr
ret
fcom
sub
in
stc
jmp
xor
sbb
cdq
or
mov
mov
bound
sub
mov
jmp
fstp
into
pusha
(bad)
fdiv
in
add
cs
push
xor
dec
inc
sbb
daa
adc
jmp
lea
cmp
aam
jbe
call
push
push
mov
inc
lea
test
xchg
pusha
mov
xchg
div
mov
and
push
and
push
pop
mov
xchg
mov
pop
ficomp
aas
cmps
or
push
(bad)
lds
xlat
les
sbb
pusha
add
lahf
jae
pop
push
sub
inc
add
dec
ja
popf
add
push
je
adc
frstor
jmp
or
in
cli
cli
cmp
lea
in
mov
xchg
inc
pop
add
out
lar
adc
hlt
push
or
mov
push
or
add
add
popa
sbb
pop
cmp
add
xor
xchg
jecxz
ret
xor
sbb
cs
loop
les
xor
xchg
mov
pop
jg
fstp
or
or
je
pop
outs
int3
mov
stc
scas
pop
push
mov
jecxz
ins
fcmovb
call
pop
xchg
push
outs
stos
out
sar
mov
das
dec
sbb
jns
fidivr
arpl
xor
pop
push
mov
mov
(bad)
enter
mov
and
and
nop
out
push
les
inc
test
xchg
(bad)
aad
sbb
adc
mov
and
scas
sbb
fistp
push
mov
jmp
adc
loope
retf
mov
mov
inc
push
test
pop
leave
add
daa
cmp
sbb
mov
dec
pop
push
sbb
nop
aam
sbb
add
in
ds
adc
mov
movs
jo
adc
cdq
add
mov
xlat
dec
push
scas
in
mov
xchg
dec
mov
xor
clc
sbb
dec
nop
push
popa
shl
and
in
adc
pop
cld
add
cmp
fist
push
cdq
add
push
adc
add
add
mov
mov
and
sub
sbb
sahf
xor
out
test
cld
nop
sub
ins
fcmovnbe
nop
outs
jecxz
pop
adc
sbb
sahf
in
and
sbb
mov
or
into
jle
add
add
add
fwait
rol
fcomp
push
mov
inc
sbb
cs
or
xor
inc
ret
dec
or
je
pop
push
mov
stc
and
sbb
cdq
push
inc
xchg
add
push
sub
xchg
cmp
pop
adc
sti
in
mov
add
fs
xor
cmp
dec
cmp
push
aas
pusha
jns
cdq
inc
inc
and
cmp
jo
into
call
cmp
aad
and
and
cmp
mov
inc
movs
fisubr
out
mov
inc
adc
stc
and
or
sub
mov
enter
or
or
mov
mov
popa
fucomp
bound
jp
cmps
mov
push
rcl
or
ror
ds
push
mov
push
push
adc
sbb
add
mov
push
sbb
push
arpl
(bad)
not
mov
loopne
jmp
pop
js
imul
mov
mov
add
or
js
pushf
dec
lds
jb
cmp
inc
xor
clc
rcr
push
cmp
jne
fs
outs
adc
cmp
or
ins
js
mov
push
cmp
dec
mov
aas
dec
dec
in
sub
adc
loopne
ret
dec
add
push
leave
shl
add
mov
pop
jl
in
lock
(bad)
sub
ja
loopne
cmp
nop
jb
mov
(bad)
jnp
es
shr
and
js
test
cmp
inc
xchg
jmp
and
dec
xor
xchg
ds
push
sbb
mov
cmp
add
jmp
push
push
hlt
cmp
add
add
sub
and
enter
inc
repnz
inc
cmp
cmp
add
clc
leave
test
in
aas
cmp
pop
and
dec
or
mov
mov
pop
pop
jge
rcl
push
loop
cmp
popf
pop
sbb
movs
pop
xchg
test
sbb
push
dec
pop
ret
pop
push
push
jmp
imul
in
icebp
cdq
cmp
mov
jge
add
aam
add
push
push
les
cmps
cmp
jmp
enter
stos
mov
inc
add
popa
cmp
mov
xchg
fcom
pop
cmp
xor
add
jae
es
add
outs
idiv
sbb
ins
jp
or
hlt
push
xchg
(bad)
push
ds
lds
pop
sbb
fstp
fwait
add
push
sub
jmp
push
enter
add
das
push
pop
in
mov
jb
outs
imul
aaa
retf
cmp
mov
into
adc
xchg
xor
out
or
xor
mov
sbb
push
movs
mov
xchg
sub
dec
fs
cdq
(bad)
or
push
inc
dec
and
push
lsl
ss
sbb
pop
pop
sub
jno
or
(bad)
pop
xor
or
cmp
jp
add
xor
sub
loope
pop
push
sub
je
cmp
ret
je
mov
cmp
mov
jl
ret
pop
jo
call
pop
jl
mov
mov
and
scas
add
add
and
push
add
inc
push
mov
dec
pop
inc
leave
mov
dec
add
mov
jb
test
pop
in
mov
sub
push
test
push
sbb
add
mov
or
sbb
pop
adc
mov
mov
enter
call
and
and
push
sub
cld
in
push
and
in
jb
aam
dec
ret
iret
out
test
xchg
inc
ror
add
rol
sbb
xchg
pop
mov
adc
xchg
and
cmc
adc
(bad)
fist
clc
adc
and
(bad)
aas
mov
and
shr
mov
mov
shr
add
shl
loope
or
mov
data16
pop
pop
pop
in
adc
pop
sbb
xor
inc
sti
inc
jne
mov
call
pop
mov
test
push
sub
pop
mov
in
ror
sti
push
pop
add
pop
mov
into
loope
cmp
test
sub
adc
es
add
pop
bound
xor
inc
cli
jbe
or
sub
cmp
add
jmp
test
jne
mov
mov
jle
mov
xor
out
add
sbb
sub
push
cmp
and
push
and
sub
or
and
ret
or
push
sub
loop
test
and
ror
fiadd
push
dec
adc
xchg
add
sbb
ret
jno
call
push
in
sbb
adc
xchg
adc
add
jb
fdiv
imul
dec
lods
es
sbb
sar
adc
xor
emms
add
add
and
pop
in
sub
pushf
(bad)
jne
add
scas
into
fist
xchg
clc
adc
sbb
sbb
iret
sub
ins
adc
and
push
into
xchg
in
pop
push
aad
lds
mov
stos
ins
xor
xor
xor
pusha
daa
mov
in
ror
sbb
dec
jmp
adc
cld
jmp
stos
in
adc
or
sub
add
mov
imul
xor
lock
adc
add
mov
adc
jl
mov
mov
sbb
mov
push
daa
js
cwde
mov
out
retf
sub
mov
cmp
adc
sub
pop
add
pop
sub
pusha
cmc
and
mov
mov
sub
sub
cld
adc
jnp
leave
and
jl
push
push
push
lock
pop
bound
inc
pop
pop
aam
call
push
dec
adc
leave
retf
ror
ret
ja
out
pusha
mov
add
daa
push
fdivr
xchg
and
sbb
sbb
adc
mov
loope
cmps
mov
pop
and
inc
repz
and
adc
ror
iret
and
pop
mov
jecxz
jne
shr
ret
fs
neg
pop
out
dec
aaa
dec
inc
mov
mov
test
mov
dec
outs
int
push
mov
sub
sbb
fidiv
adc
xchg
add
aad
loop
loop
jb
dec
mov
push
loop
pop
fiadd
(bad)
mov
je
bound
imul
aam
inc
mov
fbstp
jg
rcl
ja
sub
ror
or
adc
xchg
aam
inc
jne
mov
nop
out
cs
push
shl
inc
xor
or
sahf
test
out
ficom
enter
mov
mov
mov
mov
mov
sub
je
dec
xor
adc
jmp
push
or
nop
(bad)
pop
in
retf
jge
aad
sbb
push
and
dec
and
push
mov
sar
mov
dec
xchg
into
jb
push
adc
pushf
inc
or
push
fs
or
xor
xor
sub
imul
or
es
mov
adc
jne
int
pop
ja
add
scas
sti
push
cmp
jecxz
add
or
lahf
and
cwde
pop
rol
push
js
clc
push
ins
data16
adc
mov
adc
dec
mov
or
inc
or
pushf
cmp
inc
or
xor
push
dec
push
inc
in
fcmovb
repnz
dec
popa
mov
and
mov
sub
hlt
dec
lea
xor
jl
add
add
in
or
cmc
and
outs
sbb
in
push
sbb
sbb
push
push
pop
loopne
add
ds
inc
dec
add
xor
push
push
jne
sub
sbb
xor
ret
inc
push
enter
inc
cmps
or
mov
adc
mov
push
dec
(bad)
sti
inc
test
push
nop
xchg
sbb
mov
push
sbb
inc
mov
xchg
je
pop
push
es
sbb
mov
adc
push
sub
fistp
xchg
pop
sbb
popa
pop
data16
pop
sbb
xlat
popf
add
das
mov
or
inc
dec
mul
add
repz
push
rol
mov
add
or
pop
fs
add
sbb
and
imul
shr
aas
mov
dec
nop
(bad)
cli
cmp
or
setnp
loopne
push
push
xchg
xlat
or
xor
sbb
das
movs
sub
test
shl
jmp
ss
cs
out
cmp
xchg
popa
cld
push
cld
push
inc
sbb
ficom
fcomp
add
xor
daa
push
test
je
dec
push
jmp
add
add
rcl
mov
div
add
loop
dec
mov
ja
add
push
sub
push
arpl
test
cmp
push
retf
sub
push
fst
ror
jb
gs
mov
xor
push
jp
push
test
xchg
add
push
hlt
xchg
xor
(bad)
cli
fidivr
mov
imul
scas
popa
push
js
xlat
mov
pop
fnstcw
or
dec
cs
push
or
cmp
push
pop
add
xlat
mov
jb
fnstsw
ins
adc
sahf
add
jbe
fmul
pop
ins
dec
mov
xchg
inc
imul
leave
adc
pop
add
mov
mov
aas
ins
mov
xchg
cs
out
push
mov
xchg
xchg
mov
pop
test
aaa
cmc
faddp
push
mov
(bad)
add
dec
push
aaa
adc
stos
add
repnz
xchg
cmp
lahf
in
jns
pop
outs
sub
push
sub
push
xor
ins
ss
shr
das
jge
retf
ins
mov
mov
call
xchg
mov
push
adc
push
cdq
jns
jbe
jnp
out
adc
pusha
push
dec
dec
out
push
jle
sti
add
add
or
or
or
push
bndldx
adc
adc
jg
loope
pop
sbb
adc
pop
ins
sbb
cmp
mov
dec
push
inc
jmp
or
or
mul
les
jmp
or
mov
adc
adc
lods
xchg
fmul
jmp
cmps
sub
or
mul
popa
out
add
mov
cmps
cmp
stos
outs
dec
sar
test
test
or
test
add
jmp
lods
push
mov
add
or
leave
or
add
or
mov
xchg
or
sbb
jmp
clc
sbb
adc
enter
jecxz
cmp
das
icebp
arpl
je
mov
or
cmp
and
xchg
push
cmp
cmovne
jmp
jbe
(bad)
adc
jnp
xchg
cmp
mov
sub
adc
or
daa
or
cmp
dec
sub
(bad)
pop
push
inc
sbb
inc
adc
sbb
add
(bad)
test
ret
xor
je
leave
dec
push
jb
sub
add
push
pushf
inc
ficom
cmp
lahf
mov
test
sbb
or
adc
mov
call
(bad)
stos
pushf
cdq
cli
adc
mov
and
jo
outs
sub
or
fsub
cmp
jb
cwde
sub
cmp
enter
adc
cmp
sbb
enter
inc
dec
jmp
into
jbe
popa
adc
or
rcr
cmp
dec
cmp
cmp
aas
fstp
and
push
repz
and
xor
cmp
cmp
enter
cwde
pop
fild
out
add
test
sbb
push
sbb
lds
(bad)
push
or
lea
je
jmp
dec
cmp
xchg
jae
(bad)
and
mov
ret
inc
fbld
adc
ins
ret
push
sbb
bound
sbb
jns
add
cdq
pop
pop
arpl
repnz
imul
xchg
sahf
leave
test
cmp
sti
mul
imul
or
add
add
adc
or
or
mov
(bad)
mov
dec
mov
pop
idiv
outs
adc
sbb
out
xor
mov
xor
jl
cmp
sbb
test
mov
push
cmp
dec
pushf
add
fisttp
xchg
mov
adc
in
adc
xor
add
mov
test
or
mov
aas
cwde
retf
fsubr
dec
jo
cmp
sbb
mov
jns
fwait
test
movs
rol
lea
je
jno
xlat
sub
sub
es
pushf
(bad)
cmc
inc
clc
xor
cs
or
mov
ds
cmp
mov
inc
mov
add
mov
push
mul
imul
or
xlat
adc
mov
mov
mov
xchg
add
adc
push
pop
xchg
cmp
or
cmp
pop
sub
xor
mov
aas
ret
and
cmp
fs
jne
loope
aad
cmp
mov
inc
add
mov
push
cmove
mov
jmp
(bad)
sar
shl
call
adc
inc
sbb
mov
lea
jnp
mov
xchg
fsub
fwait
mov
ret
push
push
jnp
inc
sub
mov
js
jns
jmp
add
outs
push
add
fwait
and
sar
jle
xor
loopne
mov
jbe
imul
das
sbb
scas
stos
pop
dec
adc
inc
add
cmp
mov
add
xchg
out
add
jp
sub
rcr
pop
je
sbb
bound
or
outs
movs
jmp
sbb
xchg
xor
sbb
shl
sbb
jne
lahf
adc
lods
cwde
mov
popa
icebp
xchg
push
xchg
rcl
out
cmp
cmp
cli
test
iret
and
or
cmp
cmp
dec
push
iret
mov
push
push
mov
xchg
sbb
jne
(bad)
add
(bad)
int
cmc
jne
neg
into
jae
rcr
add
icebp
add
xor
lock
addr16
adc
adc
add
loopne
ins
fs
mov
jne
jb
pop
and
imul
jne
push
test
mov
push
imul
cmp
mov
in
add
or
into
fdivrp
add
push
adc
mov
add
test
inc
add
popa
inc
shl
or
lods
loopne
xchg
imul
imul
sub
sub
in
adc
or
hlt
push
cwde
xor
push
retf
inc
(bad)
jmp
and
cwde
mov
sbb
ret
sbb
fisttp
aaa
fiadd
inc
mov
sub
outs
(bad)
test
mov
mov
dec
cmovne
sub
pusha
outs
mov
mov
ror
adc
loopne
aam
loope
ror
adc
pop
ficomp
push
lods
jmp
stos
rcl
sub
push
fsub
pop
mov
push
das
cmova
mov
push
pushf
lea
call
xchg
je
sbb
nop
ja
rcr
out
cmp
mov
lock
pop
or
cmp
inc
sub
cli
inc
cs
sbb
jbe
in
and
sbb
push
les
mov
pop
lahf
mov
and
mov
fldcw
and
shl
ret
xor
push
daa
cmp
hlt
fst
jne
lea
xor
stc
repnz
cs
mov
adc
add
pop
rcl
loopne
adc
idiv
inc
sub
imul
push
sbb
pop
and
test
aaa
mov
in
pop
adc
add
les
adc
push
fldenv
add
add
push
call
xchg
fsub
mov
pop
mov
adc
or
push
jmp
or
je
ret
je
sbb
arpl
jp
mov
mov
push
rol
pop
mov
cmp
xor
xchg
sub
mov
adc
add
dec
pop
dec
iret
ret
sub
mov
fstp
jns
dec
and
add
cld
test
lock
push
lsl
fs
or
jne
mov
add
sbb
or
movs
xlat
push
lea
push
inc
js
or
sar
add
(bad)
ss
cmp
sbb
call
(bad)
iret
pop
sbb
or
add
rol
aaa
mov
stos
and
xchg
sub
jle
ja
sub
lock
inc
mov
cmp
in
loop
sbb
add
or
dec
and
rcr
(bad)
je
ret
ins
clc
and
aam
sbb
test
push
jno
pushf
lock
push
inc
dec
lahf
sbb
lods
and
mov
inc
xor
xchg
adc
add
lea
push
cmp
cmp
mov
clc
je
ret
jg
sub
mov
inc
les
mov
and
lods
sub
adc
leave
dec
out
jl
push
call
aad
xchg
outs
xor
(bad)
enter
add
lds
call
ret
push
sar
sbb
rcr
mov
jbe
jl
in
ins
mov
jmp
mov
retf
ss
cmp
cmp
jno
sub
(bad)
clc
xor
dec
lods
fadd
mov
cmp
push
dec
ja
(bad)
imul
shr
inc
sub
mov
xor
xchg
cwde
mov
clc
ins
add
add
sbb
cli
mov
sti
sub
sbb
push
outs
mov
adc
(bad)
cld
js
sti
nop
jmp
dec
int3
sub
sub
jg
or
xchg
and
cmp
mov
xor
cmp
call
(bad)
leave
nop
mov
sbb
add
idiv
je
mov
nop
cmp
jae
aas
aas
mov
das
je
and
je
sti
inc
xchg
cmp
or
loope
ss
add
cmp
sbb
pusha
rcr
mov
cmps
sar
or
paddsb
mov
add
dec
xchg
push
xor
sar
jne
cmp
dec
sbb
(bad)
sti
push
jle
sbb
cmp
pop
jmp
aam
mov
xor
push
pop
rol
aaa
dec
sbb
ja
jo
rcl
adc
mov
mov
add
sub
or
mov
push
xor
fisub
pop
scas
lds
xor
xor
mov
cmp
enter
pop
add
std
pop
sbb
xor
mov
lods
push
adc
push
inc
sbb
fcom
jmp
test
and
ds
adc
adc
and
adc
movsx
xchg
stc
mov
inc
add
dec
jno
jecxz
or
sub
imul
das
int
adc
mov
adc
outs
fcmovnu
lahf
mov
shl
mov
stos
adc
mov
test
lods
add
mov
cmp
in
popa
adc
arpl
sbb
cmp
adc
mov
mov
adc
jge
inc
test
call
mov
mov
setne
push
add
popa
imul
daa
or
dec
xor
imul
jmp
mov
or
or
popa
pop
test
cmp
addr16
inc
ss
aas
fnstsw
jae
ds
mov
into
cld
and
daa
shl
add
leave
adc
push
xor
jmp
mov
nop
(bad)
push
(bad)
adc
popf
test
xor
or
mov
sbb
sbb
sub
(bad)
or
sub
and
or
enter
pop
es
outs
push
add
inc
lock
cmp
ja
jb
lods
cmp
es
add
and
jno
push
or
movs
iret
cmps
lock
outs
mov
jge
push
mov
(bad)
adc
adc
jmp
sbb
inc
push
and
jl
jo
aaa
sub
cmps
das
or
add
loop
or
adc
cmc
lahf
push
or
(bad)
add
pop
jae
inc
sbb
xchg
xchg
clc
test
jmp
adc
loope
push
loope
inc
pop
loopne
cdq
or
xchg
mov
sbb
stc
or
push
dec
es
jnp
mov
mov
inc
gs
loopne
and
mov
mov
mov
popa
mov
xor
pusha
stos
xor
pop
int
loopne
test
ins
push
test
je
jns
sbb
in
out
scas
ss
sti
xor
and
and
lods
sahf
jl
sbb
fld
or
sbb
les
dec
sbb
test
jl
mov
inc
push
mov
cmp
dec
inc
inc
and
cmp
pop
stos
adc
shr
add
push
xor
add
add
(bad)
rcl
data16
xor
in
pop
jle
pop
call
aas
add
sbb
movs
cmc
loop
add
push
rol
xchg
je
lock
cmps
ja
jb
rcr
adc
or
push
cmps
loope
add
or
inc
dec
lods
scas
adc
inc
out
sub
push
adc
mov
pop
mov
in
xchg
pop
sub
pop
sub
push
fiadd
and
enter
add
stc
push
jmp
xor
js
outs
jl
or
xchg
xor
fwait
hlt
inc
add
ins
push
or
xor
fild
pusha
pop
cli
ja
adc
cmp
cdq
and
push
mov
xor
xchg
dec
dec
ja
pop
ja
popf
mov
(bad)
add
push
sub
shl
iret
pop
mov
add
inc
or
mov
in
adc
test
test
movs
jb
push
or
das
push
push
push
cmp
inc
adc
fldenv
outs
rcr
(bad)
jo
loop
sbb
lock
lods
xor
mov
movs
cmp
test
push
dec
in
xor
xchg
mov
cmp
and
xor
jbe
ror
(bad)
inc
call
std
or
sub
inc
enter
nop
arpl
jbe
push
retf
adc
test
call
add
inc
adc
pop
mov
mov
inc
inc
sbb
lods
lock
(bad)
sub
sbb
ror
cwde
mov
arpl
cmps
mov
mov
loopne
sub
cs
adc
cmovns
cwde
and
xor
cmp
icebp
cmps
push
dec
loop
(bad)
enter
mov
iret
jmp
xor
add
pop
push
dec
ins
dec
test
xchg
int3
lock
icebp
test
repnz
(bad)
sbb
enter
pop
and
and
sub
out
pop
mul
xor
cmp
sub
mov
and
and
or
setle
inc
mov
ins
imul
sbb
mov
inc
push
xor
lahf
xor
push
ja
mov
jb
cmp
xor
adc
fisubr
cmc
cwde
and
xor
mov
popa
or
rol
sahf
jb
add
and
mov
mov
mov
or
mov
mov
pusha
and
popa
xchg
call
sar
jo
rol
aaa
push
ss
je
adc
(bad)
dec
popa
sub
mov
push
loop
out
frstor
loopne
push
dec
dec
(bad)
dec
aaa
pusha
adc
pushf
loop
xor
push
cld
test
and
clc
mov
mov
clc
fnsave
mov
sub
cli
cmps
xor
pop
cld
shl
jmp
fadd
sbb
repnz
cmp
ret
scas
stc
add
leave
mov
idiv
sub
enter
pusha
loopne
pop
fwait
jo
retf
pop
mov
mov
mov
xor
dec
js
inc
xor
pop
adc
xor
ds
cmps
or
jb
shr
icebp
push
fst
ret
sub
push
add
icebp
fisubr
pop
int3
mov
push
push
mov
push
pop
fild
sbb
sub
push
dec
cmp
jne
out
std
pop
enter
xor
jne
adc
jne
add
push
jg
retf
loope
or
pop
dec
js
loopne
sub
fcmovu
adc
test
push
rol
lods
adc
push
cdq
add
fsubr
mov
jl
adc
lods
push
mov
push
push
mov
pop
jmp
lahf
sub
sbb
imul
fs
push
lods
in
ror
adc
mov
sahf
inc
add
push
pop
mov
dec
push
(bad)
mov
sbb
mov
cmp
inc
ins
jb
mov
es
push
inc
push
movs
inc
fild
cmp
xchg
stc
cmc
(bad)
pop
jo
fwait
ret
sbb
in
repz
pusha
dec
add
mov
lea
mov
ret
and
pop
(bad)
jae
pop
ret
cmp
fistp
cmp
loop
add
pusha
inc
adc
mov
or
xor
pop
pop
push
cmp
sahf
rol
les
imul
xchg
cmp
push
pop
push
push
pop
scas
cmp
and
jno
ins
xor
sbb
js
cmp
rcr
mov
add
js
push
sub
adc
jns
mov
or
inc
push
mov
or
leave
sahf
rol
js
int3
push
sbb
aaa
adc
pop
push
repnz
jl
not
mov
ins
sbb
adc
sbb
xchg
int3
adc
push
and
or
push
iret
xlat
jmp
fsub
and
sbb
clc
mov
jg
call
sub
dec
pop
jl
pusha
repnz
ror
push
movs
sub
shl
inc
pop
mov
popa
cmp
dec
sbb
mov
adc
and
jp
and
mov
or
pop
dec
fidiv
es
pop
pusha
or
call
mov
call
or
aaa
aas
dec
sbb
mov
fsub
adc
lds
sub
outs
push
sub
lock
retf
scas
iret
addr16
sbb
and
sbb
push
imul
sbb
mov
mov
test
pop
pop
fs
imul
jo
js
and
cmp
fdivr
je
das
ret
pop
push
xor
fadd
or
jo
mov
xor
and
cmps
xchg
jl
ins
pushf
mov
scas
fcomp
add
inc
inc
push
js
ja
pop
mov
pop
xor
es
cmp
aaa
jge
cli
push
add
jo
(bad)
push
add
mov
or
shl
inc
xor
xor
jmp
and
mov
es
mov
fisub
test
mov
push
xor
or
loope
sub
in
or
(bad)
mov
(bad)
in
ret
mov
jg
or
add
shl
pop
(bad)
xchg
(bad)
xor
pop
jp
pop
jbe
inc
dec
jp
push
scas
(bad)
movs
fidiv
adc
ror
ss
or
out
iret
(bad)
mov
mov
inc
movs
push
add
push
push
push
mov
push
mov
rol
sbb
and
push
test
(bad)
rcl
cmp
sar
add
mov
sbb
retf
xor
sub
rol
xchg
bound
in
or
stc
mov
sbb
scas
or
jbe
push
push
dec
add
add
or
mov
inc
push
fist
push
pushf
out
mov
int
retf
fsubrp
add
add
cmp
adc
ror
shl
movs
paddusw
and
sub
dec
mov
in
add
shl
sbb
dec
sbb
ja
sub
and
cmp
sbb
pop
aam
jbe
adc
rol
xchg
lea
jbe
cmp
in
js
xchg
add
adc
jne
push
mov
fild
sbb
jbe
mov
add
loopne
push
ffreep
push
rcl
imul
sbb
sub
int
cs
xchg
sbb
push
adc
iret
inc
shl
sub
or
mov
push
ret
cmp
xchg
data16
mov
adc
outs
mov
mov
cmp
push
add
into
inc
das
dec
loop
aaa
(bad)
jne
js
dec
clc
stos
addr16
repnz
fst
mov
adc
fsub
sub
inc
ins
(bad)
jg
fadd
sub
mov
sbb
jo
adc
xchg
pop
mov
cmp
mov
and
push
imul
push
pop
ins
and
pusha
int3
popf
cli
hlt
xchg
push
add
ror
fbld
push
pusha
xchg
movs
clc
fwait
cmps
jb
push
xchg
pop
pop
pop
ret
push
mov
(bad)
sbb
jp
jo
ins
jae
cmp
and
mov
add
pop
xor
adc
lods
and
inc
ret
add
add
sub
inc
lods
pop
sub
push
bound
mov
push
xor
dec
adc
xor
inc
scas
rol
sbb
shr
adc
sub
push
push
or
das
sub
and
sub
pop
sbb
or
jbe
jmp
sbb
or
push
pop
pusha
shr
mov
inc
sub
inc
in
adc
adc
shr
test
dec
adc
not
mov
xlat
sbb
test
je
push
adc
adc
mov
in
mov
retf
pop
je
sub
add
ins
popa
mov
jmp
cmp
nop
fld
frstor
and
mov
test
sti
mov
adc
or
bound
sahf
and
xor
push
push
cs
cs
mov
in
cwde
jg
adc
in
inc
push
mov
add
les
adc
imul
dec
les
xchg
gs
lods
lea
cmp
clc
cmp
add
xor
dec
dec
or
xchg
test
outs
mov
int3
mov
and
mov
int3
push
pop
inc
hlt
push
addr16
mov
or
inc
pop
pop
mov
xchg
mov
ret
add
adc
sbb
mov
lea
push
ins
movs
fwait
lock
cmp
popf
push
test
enter
shl
popa
loop
clc
ror
jecxz
(bad)
popf
or
pop
leave
xor
xor
jns
xor
lea
adc
loopne
xor
dec
imul
jo
dec
repz
imul
add
cmp
jne
push
push
je
inc
or
cmp
or
mov
cmp
push
ret
xchg
xor
fadd
(bad)
fdiv
aam
add
and
cmp
call
retf
or
jl
sbb
lea
jno
jg
mov
adc
(bad)
outs
retf
push
xor
adc
ja
clc
jl
test
repz
shr
pop
fsubr
into
cs
sub
ret
jae
mov
mov
aam
inc
jne
lar
adc
mov
push
retf
dec
jne
or
(bad)
push
call
jmp
xor
xchg
add
xlat
push
push
pop
enter
push
sti
add
nop
add
adc
pop
push
cld
jb
sbb
(bad)
into
(bad)
mov
inc
(bad)
cld
test
into
clc
inc
fstp
add
lock
dec
push
cs
in
push
push
je
ds
scas
push
jecxz
neg
push
test
les
rcl
push
mov
adc
push
hlt
out
xor
push
cld
jne
pusha
xchg
addr16
push
or
test
in
hlt
cmc
push
outs
mov
(bad)
in
movs
repnz
jp
jmp
push
ror
dec
add
scas
pop
cmps
imul
lods
xlat
movs
sub
lock
dec
xlat
mov
xchg
(bad)
aas
xor
and
push
data16
add
test
imul
movs
add
push
push
and
push
test
xchg
rol
jle
pop
jecxz
pop
mov
mov
popa
dec
add
aas
xor
push
jne
imul
and
push
push
js
js
mov
aas
add
push
xchg
inc
imul
fs
push
sbb
mov
and
mov
inc
or
pop
(bad)
outs
jmp
out
push
mov
imul
inc
cmps
add
ins
adc
int
ja
mov
sbb
push
cmp
xor
push
iret
lods
add
mov
cli
and
mov
call
pop
(bad)
jp
(bad)
aaa
xchg
adc
shr
(bad)
push
adc
pop
daa
call
add
mov
push
lods
ror
aas
push
rol
in
add
dec
outs
and
jp
es
push
sahf
sbb
mov
adc
sub
push
or
int
mov
add
xor
gs
push
push
ficomp
int3
(bad)
or
inc
test
jecxz
repz
pop
test
les
lods
adc
push
xchg
cmp
or
mov
daa
sbb
jno
mov
adc
adc
inc
les
mov
mov
sbb
jb
xchg
xor
pop
jb
popa
pop
or
mov
stc
or
jne
pop
mov
scas
std
push
adc
add
in
add
push
push
mov
sbb
push
ja
mov
mov
push
mov
ss
les
push
mov
jb
pop
(bad)
lea
cmp
push
call
pop
fild
or
int3
or
mov
push
xlat
mov
ret
jmp
or
sahf
fwait
rol
mov
sar
sub
retf
rol
punpckhbw
add
pop
push
or
fnstenv
jecxz
or
inc
mov
pop
jae
xor
outs
cmp
sub
(bad)
in
out
and
movs
mov
cmp
pop
xor
push
sbb
and
dec
cmp
sub
cmp
xor
adc
inc
mov
sbb
mov
fadd
adc
add
inc
or
arpl
xor
jb
pop
jae
push
jge
mov
add
movs
or
xchg
cmp
and
mov
mov
loope
outs
xor
push
adc
inc
pop
xchg
cmp
fsubr
adc
(bad)
test
mov
fcomi
rol
xor
sub
pop
cmp
movs
fmul
xchg
or
push
adc
push
nop
jno
cmp
dec
sti
out
cmp
sbb
push
js
adc
jo
dec
sbb
in
pop
mov
cwde
add
dec
mov
xchg
icebp
pop
sbb
or
add
aam
inc
or
sbb
xchg
push
push
push
cmps
mov
or
cmp
outs
push
lea
jo
(bad)
jbe
pushf
les
cld
dec
add
mov
adc
pop
inc
pop
inc
mov
shl
fbstp
xor
fs
jecxz
loope
push
sub
out
sub
jo
push
sti
rcr
or
mov
inc
test
fist
dec
nop
push
dec
sbb
cmp
jne
cs
loopne
fistp
sub
movs
in
ffree
sahf
and
call
mov
rcr
sub
add
sub
inc
sub
in
adc
add
test
fidivr
lea
cmp
mov
sub
lea
push
mov
adc
jns
sub
mov
ret
adc
je
push
fiadd
push
sbb
ret
add
movs
mov
sub
adc
dec
push
adc
add
or
fsub
jge
imul
sar
fadd
loopne
add
les
jne
xor
inc
adc
cs
sub
fisub
xor
add
aad
add
loop
enter
sub
pop
jns
adc
adc
fld
jo
inc
dec
push
or
add
loope
popa
dec
mov
dec
int
mov
sbb
in
daa
or
ret
lea
inc
add
or
into
jno
push
icebp
inc
lea
mov
mov
mov
je
mov
xor
add
popa
mov
dec
gs
jmp
push
adc
or
jl
add
dec
or
arpl
dec
loop
nop
and
dec
pop
and
mov
in
and
dec
mov
rol
(bad)
cmp
ja
rcr
fiadd
ja
jle
mov
or
inc
and
dec
js
cmp
dec
cmp
jne
lahf
cmp
daa
and
addr16
test
call
test
jo
sub
movs
inc
push
adc
or
in
mov
test
push
inc
jno
xchg
or
pop
sub
mov
adc
cmp
mov
les
in
ds
outs
mov
imul
push
rcl
push
adc
ret
dec
sbb
mov
add
and
enter
(bad)
call
push
xchg
lock
mov
ss
jbe
test
cmp
out
mov
sahf
sub
xor
les
jne
fmul
xor
or
jmp
and
or
push
jo
mov
fdivr
pop
xor
jnp
pop
sbb
sbb
sbb
add
xor
js
adc
mov
test
sub
adc
or
or
mov
xchg
xchg
or
xchg
jl
inc
inc
add
adc
xchg
lds
rcr
lods
add
add
icebp
xchg
pop
in
dec
push
sbb
sub
xchg
mov
add
fs
sbb
cdq
inc
xor
ins
das
mov
leave
outs
rcr
pop
or
inc
xchg
and
and
inc
lods
add
sbb
adc
dec
aas
mov
push
test
mov
xchg
adc
nop
sti
mov
mov
add
push
mov
sub
ds
xor
cmp
mov
jl
xor
push
icebp
or
cs
or
mov
push
daa
inc
and
push
push
ret
ins
adc
mov
add
xchg
ret
push
push
pop
sahf
loope
bound
mov
lahf
inc
ror
fbld
and
jmp
ucomiss
add
mov
adc
cmps
push
leave
add
push
adc
hlt
retf
sub
repnz
add
adc
lods
and
cmps
xchg
neg
daa
pop
sub
cs
sbb
mov
add
adc
sbb
popa
ret
lods
or
mul
or
push
mov
(bad)
jne
push
test
sbb
inc
inc
push
sub
imul
(bad)
push
sub
(bad)
adc
mov
and
mov
or
mov
enter
sub
or
retf
inc
and
inc
dec
ret
jbe
add
adc
push
mov
sub
ins
adc
loop
sbb
cld
mov
imul
lahf
pop
mov
aaa
and
ins
mov
adc
adc
lock
test
jecxz
mov
xchg
mov
xlat
sbb
push
adc
push
jg
adc
imul
aaa
mov
inc
mov
push
dec
add
sub
or
je
fldenv
push
fisub
pmaxub
cmp
inc
and
jg
fsub
add
inc
cmp
dec
sub
push
ret
ss
sub
inc
cmp
xchg
je
pop
js
xlat
cmp
xor
adc
sbb
call
inc
push
js
adc
rol
daa
mov
aaa
and
or
and
xlat
adc
push
and
sbb
and
scas
mov
and
push
inc
sbb
push
jb
in
push
mov
and
dec
aad
sar
js
xchg
pusha
pop
pop
repz
mov
and
and
xchg
xchg
jmp
and
stc
imul
mov
ror
xlat
jecxz
rol
or
push
outs
cmc
loope
je
sbb
outs
inc
or
mov
aam
pop
pop
loop
or
and
cmp
adc
sbb
cwde
loope
test
mov
jle
(bad)
push
in
nop
mul
fwait
mov
or
popa
pop
std
fdiv
inc
push
sub
out
push
push
mov
in
mov
jmp
cmp
pop
and
outs
sub
ja
jle
out
jne
mov
clc
pop
mov
cwde
lds
inc
fild
inc
adc
mov
cld
mov
fs
sub
xchg
arpl
sub
add
jne
sbb
lds
ret
lods
add
lahf
mov
sti
cmp
add
outs
js
mov
jl
dec
rcl
sub
cld
pop
cld
div
jb
lea
add
test
imul
push
div
add
jmp
std
dec
jb
dec
sub
dec
sub
and
pop
repnz
dec
dec
mov
xor
mov
or
xor
in
test
sub
push
jns
and
sub
mov
cmp
test
push
inc
push
js
fimul
and
mov
mov
ss
mov
imul
ffree
data16
sar
jle
cmp
jge
and
iret
sbb
pusha
mov
add
sub
add
(bad)
cmp
sub
sti
loope
push
lds
add
dec
dec
in
js
cmp
stos
sub
push
and
mov
and
arpl
ins
sbb
dec
lea
test
dec
mul
push
dec
bound
retf
xchg
or
out
push
adc
rcr
inc
add
xchg
lahf
lods
cmps
push
dec
or
pop
mov
push
push
pusha
int
popa
(bad)
adc
mov
mov
sub
jmp
inc
jbe
lock
fcmovb
stos
xchg
cmp
push
pop
lock
push
jno
mov
inc
add
test
xor
(bad)
mov
ror
daa
xchg
mov
lods
and
out
mov
mov
and
inc
sub
cdq
pop
or
jns
push
fadd
cmps
xor
in
push
adc
sub
sbb
jg
retf
xor
jns
xor
or
pop
sahf
fsub
add
sub
sub
rol
retf
mov
aam
gs
lods
xchg
retf
xor
inc
les
inc
ins
sbb
dec
cmp
mov
and
push
xor
xor
aam
mov
add
retf
cmps
out
jmp
and
and
mov
aaa
and
xchg
jno
ficom
sub
outs
loopne
xchg
push
dec
and
xchg
push
cmps
(bad)
dec
sbb
mov
ss
push
mov
cmp
and
pop
enter
inc
xchg
lahf
pop
add
js
icebp
mov
push
adc
inc
popa
retf
fdiv
and
push
and
pop
push
cwde
js
ret
pop
inc
mov
or
and
add
sbb
(bad)
pop
dec
loopne
cmp
push
adc
dec
loopne
xor
mov
mov
xchg
jbe
clc
or
dec
repz
pop
leave
dec
dec
ret
or
pop
nop
xor
into
dec
dec
loope
adc
sbb
scas
scas
or
push
add
fnstcw
pop
retf
cvttps2pi
pop
mov
daa
dec
xor
lock
inc
shl
retf
jno
jecxz
pop
adc
adc
inc
loopne
daa
(bad)
(bad)
adc
jmp
pop
jo
xor
je
pop
add
iret
or
add
aas
and
and
add
pop
sbb
dec
ss
mov
xchg
or
mov
or
pop
(bad)
iret
test
jmp
dec
test
or
lahf
not
and
cmp
dec
cmps
ins
and
lods
and
push
inc
pop
lods
gs
jbe
mov
into
popa
pop
xchg
nop
ret
adc
push
adc
mov
stc
je
mov
fld
jmp
or
jo
or
jg
icebp
ror
dec
jge
mov
adc
and
sub
cwde
in
add
data16
mov
add
sub
and
push
(bad)
or
icebp
pop
in
and
loopne
or
jb
jnp
cmp
js
adc
aas
sbb
push
lea
xchg
rol
and
sub
xor
nop
xchg
lea
mov
mov
mov
xor
xchg
pop
jne
ins
and
in
sub
add
(bad)
mov
xlat
push
jmp
ror
(bad)
adc
mov
and
add
cmp
jbe
retf
ja
cwde
or
push
cmp
ja
mov
sub
jg
ins
movs
shr
add
sbb
ins
xor
adc
cs
in
adc
inc
xchg
sbb
jle
inc
and
cmp
sti
or
inc
pop
xor
dec
icebp
rol
and
inc
pop
push
mov
and
push
and
pop
lahf
jmp
push
jae
ret
test
xchg
jg
inc
dec
inc
fst
xchg
into
pop
dec
ins
cmp
rcl
adc
jg
popa
xor
jg
arpl
fwait
sbb
mov
jne
cmp
(bad)
pop
adc
xor
push
cmp
pcmpgtd
mov
or
mov
ds
add
add
int
or
pop
call
mul
out
and
mov
sbb
test
xchg
inc
inc
mov
pop
inc
or
and
push
jno
push
nop
pop
or
cdq
add
test
aas
mov
rcr
inc
jmp
stc
cmp
rol
push
cmps
pop
adc
lock
cmp
push
sbb
dec
add
popa
or
int3
jbe
sbb
jl
lea
pop
rol
mov
xchg
(bad)
jae
jae
popf
jge
(bad)
xchg
push
das
fidivr
test
dec
mov
fistp
fisubr
adc
push
dec
jmp
jg
aam
data16
push
add
xchg
add
mov
mov
jne
pop
das
(bad)
inc
mov
adc
mov
mov
adc
lea
and
jg
sbb
push
mov
mov
leave
je
adc
test
leave
or
movs
sbb
inc
push
mov
and
or
push
in
sar
js
sbb
mov
pop
dec
inc
mov
inc
hlt
add
repnz
fsub
dec
and
scas
sub
xlat
jmp
or
jle
xor
mov
sub
mov
pop
call
and
and
xchg
and
sbb
inc
into
jno
adc
cdq
inc
mov
aas
in
nop
or
add
push
mov
and
enter
lock
inc
jg
fld
jb
pop
adc
mov
mov
xlat
pop
ror
pop
pop
add
mov
rcl
mov
inc
xchg
sahf
pop
les
nop
inc
xchg
add
xchg
push
adc
add
stos
mov
mov
pop
dec
push
pop
sar
or
sub
ret
pusha
sbb
jg
adc
fsubr
mov
mov
movs
mov
leave
cmps
std
lea
sbb
pushf
in
lahf
pop
xchg
cmps
xchg
out
mov
push
mov
push
xor
sbb
jo
dec
xor
inc
sbb
jl
pop
xchg
mov
(bad)
cli
fld1
mov
retf
out
jae
mov
fwait
retf
pop
cmp
int3
inc
gs
dec
ror
and
movs
inc
xchg
push
(bad)
push
popf
pop
pop
popa
mov
rep
xor
hlt
push
pop
jae
xchg
jle
adc
call
and
push
mov
popa
sbb
stos
out
sbb
sbb
add
adc
push
out
lods
ss
in
jl
mov
cwde
sbb
mov
adc
adc
or
fbld
ja
pushf
add
xchg
jne
xchg
xchg
mov
cmp
mov
jmp
or
and
jle
xor
retf
and
dec
push
and
inc
mov
imul
fcomp
shl
inc
sbb
sub
dec
sub
pop
jb
xchg
sahf
mov
xchg
add
push
xchg
or
(bad)
or
xchg
or
ret
pop
mov
cmp
push
and
aaa
push
outs
adc
cmps
xchg
ss
cmp
aam
inc
pop
mov
or
mov
cmp
cmp
sbb
sbb
ss
add
ins
or
mov
mov
cmp
add
push
out
dec
xor
mov
jg
push
inc
retf
call
and
shr
jns
sub
dec
or
cmp
and
dec
test
or
mov
inc
and
and
or
movs
add
ficom
das
pop
add
lea
inc
cmp
jmp
(bad)
pusha
retf
adc
mov
push
pop
push
push
jns
cmc
pop
pop
scas
adc
gs
sbb
fnstenv
xor
in
mov
dec
dec
cmp
pop
pop
pusha
adc
rcr
loop
pop
push
cmp
add
in
mov
inc
add
dec
inc
inc
arpl
jne
cmp
or
sbb
ss
adc
or
adc
sbb
in
inc
and
out
inc
push
xor
inc
mov
xchg
add
adc
xchg
jbe
dec
dec
xchg
enter
pop
sbb
enter
push
ins
pop
mov
add
sub
push
pop
mov
add
prefetch
add
jl
fiadd
jns
(bad)
jae
or
stos
lea
sub
sar
inc
shl
icebp
or
lods
add
fbld
and
sahf
ret
stc
fisttp
jge
mov
dec
jne
fst
adc
mov
daa
dec
mov
test
mov
inc
aad
sub
inc
inc
xor
jb
inc
inc
inc
sbb
xor
ja
or
mov
mov
pop
mov
or
adc
ficomp
push
and
sbb
inc
inc
sub
jg
mov
outs
pop
or
lahf
rcl
(bad)
mov
mov
xchg
movs
sbb
sub
sub
inc
mov
jg
cmps
add
xor
xchg
sbb
xor
nop
pop
mov
jbe
aad
mov
xor
sbb
add
js
jne
pop
clc
or
test
addr16
addr16
test
adc
in
xchg
ss
cmp
cmp
or
push
and
sub
sbb
sub
cwde
fs
mov
outs
pop
adc
inc
and
or
jne
adc
sub
pop
mov
cmp
outs
addr16
mov
dec
(bad)
xlat
push
mov
push
push
xchg
mov
jae
xchg
les
imul
sbb
or
add
or
mov
jecxz
stc
xor
das
lds
inc
xor
fsub
add
mov
push
add
pusha
dec
pop
adc
push
sub
ret
mov
dec
loope
test
add
add
test
dec
push
sub
pop
pushf
mov
push
popf
int3
call
bound
aad
xchg
xor
sub
push
push
add
xchg
mov
inc
pop
adc
mov
inc
cmp
daa
jne
dec
sub
push
jle
not
adc
lods
inc
nop
sub
jno
adc
mov
mov
sub
mov
adc
push
add
sub
mov
mov
sub
jle
and
jb
cmps
or
mov
mov
adc
test
adc
dec
adc
mov
adc
popf
ret
or
mov
inc
ja
ret
and
je
inc
sahf
fwait
lods
sub
xchg
or
(bad)
push
int
retf
and
xor
push
dec
imul
and
adc
sub
mov
test
lds
adc
pop
fld
jmp
adc
add
cdq
inc
ret
sbb
adc
mov
sbb
std
ds
add
lock
lahf
mov
(bad)
sub
(bad)
add
sbb
adc
arpl
(bad)
or
ficomp
mov
jnp
inc
mov
xchg
out
into
sbb
out
cmp
mov
push
push
mov
in
xor
or
rcl
push
inc
dec
mov
in
xor
xor
xor
sbb
arpl
mov
dec
mov
sbb
add
mov
pop
and
int
push
push
cs
mov
xchg
loopne
clc
inc
es
mov
adc
mov
xor
push
pop
sbb
outs
sub
inc
adc
inc
daa
ss
sub
mov
inc
cmp
mov
xchg
mov
shl
mov
mov
push
sbb
sub
xor
ret
popa
xlat
xchg
ins
mov
or
mov
add
call
mov
retfw
sahf
jns
ins
jbe
push
cli
sub
push
mov
popa
mov
cmc
and
and
sbb
cmp
mov
xchg
div
movs
mov
push
sbb
rcl
adc
mov
int
cmc
call
or
fisubr
mov
imul
repz
sbb
stc
mov
cld
xchg
mov
lea
fsub
jmp
push
dec
aas
xor
inc
(bad)
cmps
xor
and
rcl
pusha
inc
ja
cmp
mov
and
sbb
sub
enter
movs
inc
cdq
cs
scas
push
ret
pop
push
or
jp
push
xor
(bad)
sahf
sub
inc
stos
inc
cwde
mov
(bad)
jb
mov
xchg
sbb
xor
iret
cdq
fwait
int
inc
int3
dec
xchg
retf
mov
enter
mov
push
xchg
cmp
adc
or
add
and
lea
ret
les
pop
push
cmp
inc
add
add
out
shl
pusha
add
and
jo
push
xor
cmp
add
inc
rol
fdivr
cmp
add
lods
add
mov
dec
jo
pusha
sbb
dec
je
push
int
mov
cmp
pusha
mov
je
fxch
cmpps
add
jae
xor
rol
inc
ins
loopne
cmps
inc
(bad)
xchg
ins
test
jns
leave
or
ret
iret
in
stos
inc
stos
gs
leave
push
iret
push
pusha
cdq
adc
cdq
mov
inc
adc
out
fwait
xlat
adc
lea
in
xlat
mov
adc
mov
cmp
cmp
xor
cmps
push
les
mov
push
adc
push
daa
in
adc
adc
push
or
lock
test
xchg
test
inc
lods
or
arpl
push
xlat
retf
les
in
xor
gs
ret
inc
loope
pusha
outs
push
jp
les
mov
sbb
add
fdiv
inc
add
push
ss
test
test
ins
cmp
test
jmp
xchg
sub
push
cli
cs
adc
add
ds
cmp
div
pop
pop
xor
fsubrp
mov
push
xor
ret
out
pop
add
add
nop
mov
push
mov
or
mov
jb
push
dec
nop
cmp
or
mov
mov
push
retf
mov
fadd
test
jp
inc
or
or
cmps
mov
test
push
add
(bad)
dec
sub
enter
jg
pop
xor
xor
sahf
xchg
cmps
mov
sbb
mov
or
add
and
scas
ins
jge
lock
nop
cwde
xor
push
test
xchg
mov
mov
loopne
push
mov
inc
push
stc
dec
mov
pop
dec
daa
cmp
bound
adc
mov
push
sbb
cmp
adc
ret
out
mov
dec
sbb
neg
push
sub
inc
push
push
inc
push
mov
ss
push
or
test
ret
xchg
sbb
cmp
inc
aam
mov
dec
pusha
ror
adc
cdq
and
mov
loope
rcl
push
fwait
jg
adc
dec
(bad)
and
xchg
pusha
and
enter
fisub
sub
fst
sbb
sbb
pop
movs
push
and
out
test
mov
dec
xor
or
add
rol
loop
pop
jl
aas
dec
mov
lea
test
out
pop
inc
inc
or
pop
adc
dec
adc
pop
cmp
mov
adc
push
mov
mov
lea
push
jo
(bad)
mov
add
inc
adc
std
adc
xor
jbe
movzx
inc
push
jmp
adc
and
sbb
aad
sub
cmp
sbb
sbb
mov
cmova
jae
(bad)
outs
retf
ins
sbb
mov
dec
xor
adc
jge
add
xor
test
fcomp
fild
(bad)
pusha
in
dec
mov
xor
in
ins
or
sub
ror
add
xlat
sub
add
outs
test
dec
add
and
ins
ret
ror
push
sbb
inc
jl
mov
sub
fst
loop
and
(bad)
sub
je
cld
ins
mov
add
sub
lea
xor
test
(bad)
cwde
push
inc
xchg
jo
jb
add
ja
out
test
fnstenv
dec
inc
add
jb
add
add
add
outs
add
pop
ja
xor
cdq
mov
push
cmps
ret
xchg
imul
fmul
xor
pop
jne
or
add
daa
pop
mov
ja
pop
adc
movs
xlat
add
push
out
int3
add
sub
cmp
daa
mov
jbe
pop
mov
sub
cli
add
ficom
dec
cli
ret
add
and
sbb
jle
mov
das
aad
sbb
dec
retf
jb
ret
add
outs
sbb
lods
mov
mov
test
push
dec
cmp
push
add
cmp
hlt
pusha
push
fwait
mov
ja
sub
ja
add
call
pop
pop
les
jno
pop
or
push
add
test
cmps
shrd
inc
mov
sbb
push
push
push
push
mov
(bad)
(bad)
push
push
popf
fld
icebp
stos
test
mov
push
icebp
out
sbb
(bad)
in
pop
mov
xchg
ins
or
pusha
out
and
or
jg
fcmovnb
aaa
jmp
dec
add
call
fmul
sub
aaa
ret
repz
cmp
mov
dec
or
rol
mov
mov
in
(bad)
loop
bound
xor
ret
(bad)
adc
mov
ficom
je
cmps
sbb
out
pusha
pop
jne
aas
rcl
inc
push
xlat
mov
jmp
push
shl
mov
pop
inc
cmp
mov
test
aam
jl
imul
retf
fsub
mov
dec
(bad)
adc
jo
movs
imul
inc
(bad)
xor
add
jae
cmp
ss
(bad)
fcomp
or
dec
js
icebp
cmps
dec
mov
clc
cmp
jne
popa
or
icebp
push
mov
dec
pop
call
in
inc
push
cli
es
movs
aas
(bad)
sahf
lahf
and
das
adc
lea
sbb
and
push
jne
outs
popf
sub
adc
pop
adc
mov
mov
int
xchg
xlat
gs
add
push
fs
aas
pop
xor
add
in
sub
xchg
inc
jmp
mov
fiadd
jno
sbb
mov
push
cs
add
sbb
push
fcomp
es
test
adc
gs
sbb
pushf
and
adc
enter
sbb
sub
xor
into
push
addr16
test
cdq
(bad)
es
jbe
jnp
sbb
mov
dec
mov
ins
jo
inc
inc
cmp
in
pop
xor
outs
dec
xchg
into
xchg
ret
popf
movs
add
cmp
mov
jne
(bad)
xor
or
fdivr
adc
push
or
sar
mov
adc
add
inc
push
dec
push
mov
cmp
rcr
xchg
and
push
pop
inc
dec
fild
ins
clc
or
fwait
sub
and
and
stc
popa
cmp
rol
push
aam
loopne
xchg
scas
push
fild
jne
dec
adc
rol
(bad)
push
pop
add
rcl
jmp
jle
aaa
sbb
stc
outs
addr16
and
push
ror
cmp
cmp
sub
out
stos
inc
jnp
or
adc
dec
fbstp
mov
add
test
sub
pop
xor
ins
(bad)
push
xchg
rcl
nop
ss
or
fld
out
mov
mov
xchg
jne
lds
sbb
sbb
sbb
xor
push
int3
pusha
cmp
pop
inc
pop
ins
loopne
gs
sub
sub
leave
clc
fs
jbe
sub
xchg
test
push
pop
into
and
rol
push
jl
jbe
pop
pop
mov
mov
sub
jmp
cmp
cli
xchg
sti
test
jo
into
(bad)
push
and
mov
mov
cmp
push
dec
inc
jg
cmp
dec
xchg
stc
into
mov
sbb
cmp
repnz
aad
loopne
pop
lock
add
push
fdivr
or
jne
fs
sub
adc
mov
mov
jmp
adc
jb
push
into
js
cdq
adc
push
push
sbb
arpl
test
dec
jg
add
pop
in
push
dec
sbb
xor
inc
js
add
cmp
jp
mov
mov
add
test
dec
mov
shl
(bad)
pop
pop
lods
in
imul
loope
mov
push
push
xor
pushf
or
in
add
nop
shr
mov
mov
test
adc
dec
fs
ins
xchg
inc
inc
imul
popf
and
mov
jmp
fxch
sbb
loope
inc
mov
les
retf
jmp
xchg
xor
add
add
push
(bad)
fst
arpl
jbe
cmp
hlt
fwait
or
sti
in
sbb
pop
fwait
fs
add
xor
dec
add
mov
mov
xor
sub
adc
nop
int
cld
add
icebp
add
or
or
inc
sbb
jo
in
mov
add
add
js
and
int
rcl
(bad)
icebp
xor
add
imul
jge
ss
jne
push
sub
mov
sbb
rcr
add
sbb
daa
movs
movs
add
mov
mov
xor
lock
cmp
cmp
sbb
pushf
sub
jmp
adc
xchg
and
rcr
xor
pop
push
js
sub
je
sbb
aam
sbb
rcl
js
hlt
push
shr
nop
lea
sar
ret
inc
leave
cmp
shl
ins
stos
mov
adc
mov
repz
mov
and
mov
mov
daa
(bad)
jle
fdiv
mov
jle
or
or
dec
sbb
shl
or
lods
adc
sub
ret
pop
or
sub
adc
retf
add
sub
add
adc
(bad)
mov
sbb
mov
icebp
arpl
sbb
jne
frstor
push
dec
fs
shl
jnp
inc
inc
nop
retf
add
jns
xchg
xor
jmp
dec
xor
xchg
js
sbb
dec
std
fs
or
mov
inc
xor
dec
gs
mov
mov
add
add
add
and
xchg
call
mov
ins
mov
cmp
in
iret
add
addr16
loop
frstor
fdivr
mov
out
and
mov
je
mov
retf
add
stc
mov
loope
test
sbb
adc
jbe
ror
sbb
popf
outs
loopne
out
sbb
call
mov
inc
jne
and
ins
push
add
inc
xchg
add
push
add
push
xchg
pop
cmp
test
icebp
add
call
outs
adc
sub
mov
xor
call
pusha
sub
xchg
xor
push
shr
xor
and
shl
test
xchg
or
pop
pop
pop
add
or
imul
into
std
int3
idiv
shr
sbb
(bad)
test
pushf
mov
jb
dec
mov
pop
xor
xchg
pop
sbb
imul
adc
push
fild
dec
adc
xor
cs
jg
push
add
sub
xchg
push
fs
pop
test
add
loop
jns
(bad)
and
mov
push
sub
adc
xchg
mov
sbb
push
push
inc
nop
sub
xor
inc
cmc
test
jo
push
push
(bad)
je
pop
add
cmp
sub
cwde
sub
es
repnz
and
xor
sub
xchg
pop
add
aam
adc
pop
aas
xchg
fdiv
jbe
mov
inc
xor
aad
(bad)
adc
pop
mov
fsub
pusha
int
xor
inc
pop
or
test
sbb
cli
add
inc
cmp
jmp
mov
xor
mov
mov
sub
xor
inc
push
stos
and
sub
test
pop
cwde
ret
aas
adc
mov
add
push
add
es
push
cli
inc
push
leave
add
sbb
(bad)
mov
daa
xor
shr
mov
adc
mov
or
mov
aam
mov
mov
retf
not
mov
and
and
or
add
lock
push
add
ret
add
add
rol
mov
ins
call
dec
and
inc
cmp
arpl
and
icebp
shl
in
call
and
add
cmp
cmp
(bad)
mov
ror
add
and
mov
retf
sub
fld
retf
out
jg
in
or
(bad)
jecxz
sub
add
cmp
pop
cmp
addr16
retf
iret
adc
sub
out
fisttp
xchg
xor
adc
test
cmp
iret
ror
jnp
dec
repnz
add
add
cwde
sub
xchg
out
mov
adc
inc
mov
jg
iret
dec
add
ror
jnp
sub
les
xlat
(bad)
ins
in
mov
fucomp
jg
mov
sub
ret
imul
mov
adc
shl
lea
xchg
jno
std
ret
push
mov
out
mov
not
out
fadd
xor
loop
push
dec
dec
addr16
pop
bnd
mov
cmps
pop
es
push
lods
rol
sahf
jg
loopne
iret
cmp
and
mov
pop
dec
cld
int3
jbe
iret
or
xlat
or
neg
fxch
jle
fsub
test
scas
cmp
add
add
ss
inc
mov
shl
ret
add
sub
add
ret
or
das
mov
sbb
rol
js
or
aam
fimul
stos
(bad)
mov
adc
repz
loopne
fs
sub
adc
adc
(bad)
(bad)
adc
jg
in
(bad)
ds
jb
push
adc
add
rol
out
fdiv
mov
jbe
aad
enter
out
shl
xor
out
repz
loope
jmp
cmp
iret
iret
call
or
adc
pop
add
lea
fmul
repz
or
out
mov
xchg
mov
ffree
jmp
test
ror
jb
fs
shl
rol
stos
xchg
mov
mov
out
cld
inc
pop
cmp
add
or
pop
dec
icebp
loop
lea
mov
dec
xlat
popa
mov
sub
xchg
(bad)
loope
xchg
shl
push
xor
pop
cmc
aaa
lea
inc
cmp
jmp
xor
(bad)
sbb
add
loopne
sar
sub
(bad)
or
push
jno
dec
mov
and
ins
mov
mov
std
adc
and
sub
in
xchg
fsubr
or
xor
jmp
fcom
lods
test
or
mov
lea
mov
sub
mov
ret
and
mov
lds
and
dec
jnp
es
out
aam
mov
mov
add
ror
retf
sub
xlat
xor
into
(bad)
cmp
aam
and
int3
enter
retf
add
push
icebp
xor
out
iret
dec
sub
jl
pop
stos
pop
and
jg
gs
lods
les
clc
in
ror
pop
mov
fisub
lods
xchg
jmp
inc
cmp
(bad)
jle
cs
cmps
and
xchg
push
cs
mov
xchg
cld
dec
mov
or
cld
xor
push
xchg
cmp
xchg
out
or
sub
hlt
out
dec
in
nop
rcr
test
xor
mul
aaa
mov
adc
mov
lea
in
out
(bad)
ds
mov
lea
loop
outs
mov
ret
(bad)
ret
adc
add
cmp
mov
xor
jle
dec
add
(bad)
mov
int
mov
out
or
cmp
pop
cld
or
push
sub
or
imul
ret
cmp
push
or
movs
jae
jo
sub
test
pmuludq
add
pop
mov
jmp
dec
icebp
xor
test
cmp
jp
pop
push
dec
adc
sub
xchg
mov
(bad)
push
and
out
sub
jno
inc
jno
jl
mov
mov
push
sbb
repz
ret
and
mov
adc
and
inc
jb
popf
in
sbb
bswap
pop
cmp
mov
fcmovb
rol
and
sbb
and
inc
push
cli
neg
xor
adc
inc
movsx
inc
aaa
add
mov
jecxz
test
inc
inc
mov
push
push
mov
mov
xor
clc
retf
pop
lahf
sbb
div
mov
sub
adc
inc
sbb
retf
fisttp
dec
outs
and
lea
push
sub
adc
push
retf
data16
or
and
ja
jb
cmp
inc
js
add
push
(bad)
fsubr
in
fmul
(bad)
xor
jecxz
scas
add
pop
adc
or
mov
add
and
aad
or
mov
adc
adc
jmp
popf
sar
fiadd
or
cdq
pusha
cld
outs
repnz
in
das
sub
(bad)
pop
mov
push
mov
add
mov
ret
add
(bad)
mov
xchg
retf
loope
loopne
mov
inc
popa
pop
mov
mov
lahf
out
xor
mov
shr
ret
cmp
outs
shl
call
push
outs
mov
movups
fdivr
inc
pop
inc
mov
add
pop
jg
and
sbb
add
or
lods
cdq
cmps
push
add
std
call
inc
ror
lea
or
mov
or
sub
add
inc
mov
std
dec
rol
sbb
cmp
jb
push
lea
xor
sub
add
aas
sub
and
fcomp
popa
ins
xchg
push
(bad)
aaa
dec
mov
cdq
push
(bad)
mov
inc
sub
jmp
jecxz
cmps
pop
or
inc
inc
lds
(bad)
mov
and
inc
sbb
mov
or
mov
mov
inc
mov
jb
pop
pop
lea
push
push
lea
or
inc
add
mov
sbb
fild
ret
mov
inc
into
fadd
out
movs
ret
lahf
in
js
sbb
test
add
jl
ffreep
inc
push
clc
or
fwait
ja
mov
mov
shl
js
or
mov
jae
mov
pop
mov
pop
jmp
add
js
inc
add
shl
xor
dec
inc
mov
(bad)
(bad)
adc
cs
push
inc
inc
inc
and
int3
pop
mov
sub
push
fild
test
jb
add
int
popa
shl
pushf
and
inc
repnz
jl
rcl
mov
or
pusha
xchg
xor
mov
push
add
mov
fild
and
test
jnp
sub
scas
and
mov
jmp
pusha
sub
popf
sbb
dec
addps
push
ret
jge
popf
push
or
xchg
clc
sar
test
test
shl
test
jl
push
les
imul
push
popa
dec
and
fmul
stc
mov
pop
push
cmp
mov
dec
into
sub
cli
add
std
cld
je
mov
cmp
daa
adc
je
outs
call
sbb
je
add
jne
push
xchg
push
inc
ficomp
pop
xchg
enter
pusha
jp
(bad)
(bad)
es
and
mov
fldcw
add
popa
and
sub
(bad)
cdq
fs
add
and
loope
push
dec
imul
add
mov
cwde
push
int3
adc
add
jns
cmps
shr
stc
aas
add
push
call
inc
sub
test
push
and
or
in
ret
sbb
lahf
mov
ror
add
cdq
enter
jns
loop
jp
mov
and
inc
pop
push
xchg
jns
or
aam
dec
add
cmp
pop
mov
jp
mov
add
test
push
push
pop
enter
fnstsw
jns
and
jle
push
or
shr
mov
or
or
mov
(bad)
rcl
daa
cmp
push
lea
arpl
mov
lock
loop
push
push
sbb
es
arpl
push
adc
lods
cmps
jo
idiv
out
ror
or
data16
retf
and
es
pop
mov
repz
sbb
dec
xor
jae
and
out
push
xor
or
popa
loope
cdq
rcr
push
adc
rcr
add
pop
and
adc
inc
mov
mov
add
sahf
cmc
adc
nop
daa
adc
imul
xor
gs
popa
nop
or
dec
sbb
das
sub
jns
ins
jnp
rol
sub
pushf
cmp
out
dec
shl
or
aaa
push
mov
dec
popa
sub
mov
pop
xchg
or
inc
inc
push
cmp
adc
out
adc
jmp
inc
cdq
sbb
pop
cmp
imul
shl
and
stos
sahf
and
inc
mov
add
mov
push
popf
xchg
adc
(bad)
shr
mov
je
mov
and
inc
movs
pop
lahf
lds
aam
and
mov
xchg
(bad)
xchg
push
popa
push
dec
in
mov
adc
inc
jle
cmps
lods
scas
push
push
lea
adc
fist
cs
xchg
xor
mov
dec
mov
enter
nop
out
cmp
add
rcl
add
sub
arpl
xchg
rol
add
outs
ins
push
and
xchg
pop
inc
nop
sbb
jo
not
pop
repz
add
push
scas
add
inc
inc
popa
mov
pop
lds
int
dec
cs
sbb
enter
out
or
fdivr
popa
xor
add
xor
fwait
(bad)
lods
jg
jg
adc
jo
dec
stos
push
fs
or
and
gs
and
sbb
sub
int
xor
loop
mov
fdiv
mov
or
leave
push
sub
pop
das
int
es
je
mov
add
mov
shr
and
mov
inc
idiv
push
out
bound
aad
xchg
(bad)
call
xchg
pop
push
stc
mov
sbb
adc
sbb
or
or
daa
sbb
outs
into
js
mov
dec
or
push
mov
out
sbb
push
push
jmp
or
pop
sbb
fmul
arpl
jge
add
(bad)
hlt
rcr
or
ret
adc
rcr
mov
add
cmp
add
cmp
add
adc
jno
cdq
jno
in
stc
adc
and
mov
in
dec
xor
fld
inc
int3
mov
fidiv
sbb
test
cmp
mov
ins
inc
dec
fcomp
les
dec
mov
fiadd
pop
add
mov
pop
adc
adc
test
push
mov
scas
setne
imul
pop
call
cmp
hlt
repz
test
jb
push
(bad)
pop
xchg
out
pop
rcr
push
sbb
cdq
retf
cmps
and
xchg
out
jmp
pop
cmp
rcr
iret
jns
fs
xor
cmp
add
leave
ror
or
adc
mov
leave
xchg
or
(bad)
adc
(bad)
fidiv
push
sbb
adc
pop
xchg
mov
outs
mov
sbb
imul
dec
loop
push
shl
das
retf
mov
and
inc
nop
(bad)
sbb
sub
lods
push
add
inc
call
xor
pop
pusha
or
or
jno
push
ret
push
push
cdq
jno
xchg
sbb
ins
inc
adc
push
xor
hlt
enter
pop
pop
fwait
sti
cli
add
xor
jmp
and
and
cdq
cmc
fsubr
push
or
imul
or
pop
pop
jbe
jno
pop
mov
sub
or
movs
(bad)
fistp
dec
scas
jne
imul
mov
xchg
push
mov
shr
and
ds
bound
loope
test
shl
call
ins
sub
jge
xor
inc
mov
jle
jb
push
arpl
dec
xchg
mov
push
inc
pop
adc
sahf
arpl
mov
in
fisub
rol
(bad)
fmulp
add
jge
cmp
xchg
push
xor
jg
ror
add
in
nop
pusha
mov
dec
sub
xchg
jno
add
ret
dec
mov
pop
pop
test
pop
cwde
inc
ret
call
sbb
add
sahf
rol
call
or
outs
mov
cmps
sub
or
xor
sbb
dec
cld
jle
add
add
xchg
jae
jmp
sbb
outs
outs
push
pusha
or
jmp
add
add
int
inc
int
ins
xor
mov
cmp
pushf
add
ins
or
push
js
mov
add
or
out
or
sub
mov
dec
dec
sbb
orps
pop
sub
and
push
pop
or
ret
add
cdq
pcmpeqd
jmp
push
ret
push
mov
xor
and
inc
retf
mov
movs
je
push
add
pop
popf
out
add
stc
je
cdq
push
mov
cs
(bad)
jne
sbb
push
ds
jge
out
pop
inc
or
add
push
sub
sub
add
stc
push
jb
mov
test
daa
add
jae
or
neg
sbb
loopne
scas
add
jb
inc
enter
jmp
nop
hlt
sub
inc
mov
sbb
push
sub
das
adc
sbb
jmp
sub
fsub
xchg
cli
adc
sub
mov
cmp
jmp
adc
jmp
inc
or
push
inc
push
inc
ret
cdq
adc
ficom
inc
xor
je
int
dec
lds
pusha
sub
pop
pop
icebp
mov
sub
push
adc
rol
mov
mov
pop
(bad)
xchg
idiv
push
lock
jle
enter
inc
adc
loope
xchg
push
jmp
pusha
push
jo
shl
adc
retf
imul
out
inc
xor
lods
dec
mov
push
adc
(bad)
shr
dec
ret
loope
jmp
sub
add
xlat
jne
nop
lock
test
shr
or
sub
add
or
add
(bad)
mov
or
inc
std
jo
icebp
add
daa
jne
adc
in
movs
test
or
jg
or
adc
xchg
leave
js
pop
push
dec
and
fcom
dec
add
cmp
xor
xlat
pop
xor
adc
mov
pop
pusha
pusha
mov
aaa
jb
aaa
xor
add
int
sub
scas
push
fmul
cwde
dec
ins
jl
or
cmp
cmp
pop
inc
aam
jnp
sbb
enter
xchg
mov
inc
push
pusha
or
push
aas
loopne
rol
test
jmp
sub
mov
mov
or
mov
xor
add
xor
mov
pusha
loope
sub
add
pop
(bad)
lods
lods
jle
loope
add
xchg
pusha
and
or
aad
ror
jmp
fist
sub
jmp
add
xor
test
(bad)
xchg
(bad)
push
and
and
jne
adc
jmp
xchg
imul
cmp
test
inc
dec
and
cld
push
mov
cmps
mov
nop
pop
add
aaa
ret
and
sti
nop
ss
xor
nop
pop
aaa
sub
push
inc
ins
not
cmp
add
sbb
and
or
sub
cmp
dec
pop
sbb
imul
mov
sub
dec
mov
pop
adc
dec
inc
sti
jbe
outs
mov
es
jns
add
test
or
stos
aad
popa
ret
sub
inc
sub
dec
icebp
xor
repz
xor
pop
add
cmp
(bad)
in
sub
sub
imul
xchg
mov
scas
jmp
dec
and
leave
pop
scas
cmp
out
(bad)
push
subps
push
lds
ret
pop
clc
inc
ins
(bad)
les
sbb
pop
lds
(bad)
sbb
ins
push
sti
test
sub
or
dec
cmp
pop
jne
or
sbb
retf
adc
adc
dec
adc
cmp
outs
enter
mov
mov
pop
out
jno
pusha
test
jp
jae
movs
loopne
cld
aad
inc
pop
add
sbb
cmps
sahf
test
fdiv
fisttp
push
dec
inc
add
pusha
pusha
sub
pop
add
or
sub
jl
or
pop
out
rol
sbb
icebp
shr
jo
int
jge
adc
push
sbb
shl
push
xor
jge
adc
push
mov
push
add
xor
stc
rol
fs
add
call
xor
retf
aad
retf
mov
jae
cmp
push
inc
add
inc
mov
test
jmp
int3
inc
inc
aaa
fistp
push
dec
sub
mov
ins
fadd
hlt
mov
inc
xor
mov
jecxz
imul
nop
xor
outs
out
fiadd
inc
jbe
and
mov
loope
jmp
inc
jmp
mov
adc
add
push
add
pop
ins
jmp
nop
mov
setl
bnd
(bad)
cs
jae
bnd
cmp
push
cwde
clc
dec
in
sub
mov
mov
add
mov
xchg
pop
mov
mov
mov
mov
sbb
xor
loop
xchg
sbb
cli
enter
adc
cmp
shl
sub
push
ret
add
call
cli
adc
in
inc
adc
lock
mov
add
repz
cmp
add
mov
cmp
fisubr
popa
push
mov
push
mov
sbb
xchg
aam
stos
or
jne
fsubp
jns
std
cli
cmp
xchg
sbb
repnz
and
jge
xchg
daa
jmp
mov
or
sbb
lock
xor
out
cmp
add
cmova
adc
add
cli
pop
ret
ja
pusha
pop
pusha
mov
push
adc
sub
shl
or
add
(bad)
mov
in
cmp
(bad)
sar
or
xor
jp
mov
dec
adc
or
push
xor
mov
mov
and
mov
sub
jnp
out
add
arpl
mov
mov
std
inc
shl
inc
push
mov
in
push
inc
adc
cld
lea
int
mov
xchg
add
or
pop
add
js
imul
mov
mov
add
loopne
pop
and
pop
je
and
cld
sub
imul
inc
shr
pusha
rcr
ror
jp
pop
push
sub
inc
arpl
jmp
or
sub
rcl
dec
ins
pusha
sub
mov
push
fbstp
repnz
outs
repnz
sub
es
les
mov
ss
mov
es
scas
xor
js
gs
xchg
dec
inc
push
aas
sbb
retf
cmp
cld
jge
lea
mov
push
push
mov
add
jbe
dec
and
fnstsw
inc
mov
in
imul
inc
test
xchg
retf
les
cmp
xchg
jle
data16
cmp
dec
mov
xor
jmp
mov
pop
int
add
int
into
fwait
cmp
outs
or
add
sub
sub
inc
(bad)
shl
pop
das
sar
add
fwait
jl
mov
push
jo
pop
cmp
push
or
test
(bad)
xlat
outs
jl
mov
arpl
icebp
icebp
cmp
sub
in
outs
pop
xor
pop
out
dec
scas
mov
lock
push
xchg
std
(bad)
and
cmp
push
mov
shr
lea
jo
(bad)
mov
xor
js
add
mov
mov
jmp
or
mov
inc
mov
mov
mov
stos
add
adc
mov
add
mov
lock
push
and
mov
dec
mov
xor
cmp
push
xlat
out
pop
push
pop
dec
loope
aas
and
adc
pusha
mov
xor
cld
sub
jno
jl
sbb
add
stos
mov
rcl
rcr
cwde
js
movs
mov
frstor
push
mov
push
add
inc
push
push
das
mov
mov
shr
or
test
lock
jg
shr
ss
into
jle
pop
and
cmp
out
or
test
push
inc
ds
jle
fild
xchg
sub
jecxz
cmp
sub
jo
in
sbb
sbb
sbb
push
les
test
mov
push
inc
jle
add
cmp
aam
push
adc
adc
xchg
xchg
add
pop
(bad)
jo
nop
mov
imul
add
into
jle
inc
add
mov
sub
xor
push
lods
dec
cld
or
sbb
adc
or
cmc
adc
jo
jb
add
gs
sub
movsx
add
push
pop
mov
sti
push
inc
inc
push
inc
sbb
cmp
sub
movs
outs
push
inc
daa
add
aas
xor
jne
cmp
or
(bad)
cmp
inc
cmp
push
pop
pop
cvtpi2ps
dec
dec
fsub
xchg
inc
dec
cli
loopne
pop
mul
mov
sub
xchg
dec
sub
movs
jg
jmp
imul
push
pop
adc
dec
xchg
call
sub
cmp
jg
arpl
pusha
loopne
sub
and
push
lock
xchg
aad
jl
pop
xchg
mov
dec
xchg
jmp
pushf
dec
popa
inc
and
jecxz
xchg
movs
sub
lahf
adc
push
icebp
ror
xor
pop
mov
xchg
sub
xchg
pop
add
aam
xor
outs
push
jge
mov
push
shl
mov
adc
push
or
test
mov
or
mov
gs
push
sub
int
(bad)
(bad)
jb
jne
sub
jbe
popf
loopne
in
xchg
cdq
pop
fidiv
push
sub
xor
neg
imul
fist
ret
inc
fcomp
aas
cmc
adc
mov
mov
push
mov
sbb
mov
jl
lds
inc
mov
nop
inc
popf
shl
sti
dec
mov
bnd
movs
ins
adc
dec
loop
or
mov
inc
mov
adc
or
imul
adc
fidivr
sbb
pop
adc
inc
xchg
daa
lea
jmp
cmp
sub
fcomp
push
inc
std
jmp
mov
cmp
xor
xor
adc
rcl
js
dec
enter
lods
xchg
dec
loop
jle
and
cmp
jmp
mov
inc
dec
xacquire
jb
enter
inc
sbb
xchg
mov
mov
mov
cmp
jmp
fcom
adc
dec
hlt
ins
or
jge
out
sub
push
sbb
add
push
xchg
aas
loop
loop
or
and
leave
pop
mov
inc
mov
mov
and
stos
and
lods
inc
rcr
mov
dec
ins
or
jl
cmc
cmp
push
and
push
cmps
fld
jl
pop
sar
inc
imul
mov
add
rcr
call
fimul
push
cs
enter
adc
add
and
inc
add
adc
jns
adc
cmc
int3
cmp
int3
cli
jle
pusha
popf
inc
test
lea
and
adc
out
jl
aad
retf
nop
mov
repnz
call
inc
xchg
xchg
in
ds
lock
push
add
xchg
mov
mov
xor
add
mov
mov
pop
and
cmp
pop
nop
add
je
pop
pop
push
out
fadd
dec
in
mov
add
sbb
sub
div
push
jo
sub
jnp
in
repnz
pop
pop
bnd
fwait
jne
jne
inc
sub
out
ret
das
adc
(bad)
icebp
aaa
test
or
and
test
and
sbb
repz
pop
add
mov
leave
add
les
mov
xchg
retf
jle
cmc
imul
mov
dec
rcl
cmc
pop
jecxz
(bad)
adc
dec
daa
lods
xchg
or
(bad)
imul
adc
and
(bad)
sti
sbb
adc
add
lahf
rcr
cmp
daa
mov
or
inc
shr
sub
mov
out
lods
sub
jns
add
inc
jle
xor
jnp
add
or
inc
mov
xor
rol
jo
and
lods
and
movs
xchg
mov
fist
push
pop
mov
jp
pop
and
jb
inc
xor
add
scas
jg
sbb
or
scas
cs
or
nop
pop
lea
cmp
fcmovu
dec
adc
push
adc
xchg
sub
inc
retf
(bad)
add
and
mov
test
cdq
xor
cmp
call
adc
or
mov
mov
test
scas
ror
xor
out
mov
sbb
and
leave
or
addr16
fcom
push
ds
jo
aas
in
cmp
fstp
shl
iret
cld
add
outs
add
pop
xor
mov
cmp
lea
push
jle
jg
test
aad
in
lea
in
shl
test
adc
dec
cmovae
cmp
mov
or
pop
sbb
fisttp
scas
leave
retf
lea
or
stos
ret
mov
jl
xlat
shl
js
sahf
jle
call
xchg
or
fidivr
pop
shl
sub
sub
sub
xor
loopne
push
sbb
jmp
shl
sbb
add
jl
imul
fcomp
lahf
add
push
movs
popa
in
mov
mov
imul
and
fimul
push
mov
les
fst
(bad)
data16
inc
imul
dec
or
adc
sub
sub
push
or
xor
and
pop
fwait
xchg
and
adc
dec
xchg
sub
fld
cmp
xor
fldz
outs
pop
rcr
mov
mov
not
and
push
inc
not
inc
arpl
cmp
xor
adc
inc
jo
fimul
push
inc
xchg
jmp
pop
mov
mov
fwait
push
ficomp
cmps
dec
dec
cmp
mov
pop
sbb
xor
call
cs
pop
movs
ins
push
(bad)
jo
sar
mov
push
ins
xchg
add
aas
jl
xlat
inc
or
jae
cs
test
or
test
mov
sub
add
add
cmp
aam
jge
jo
popf
call
out
nop
mov
ins
mov
push
inc
ret
jmp
jl
dec
inc
rol
cli
cmp
ffreep
int
xor
ret
adc
ror
ins
lea
outs
sbb
stc
mov
jno
test
aaa
sbb
inc
icebp
mul
cmp
fsubr
add
retf
mov
inc
scas
jnp
dec
cli
test
cld
shr
fild
and
mov
pushf
jl
or
stc
lar
add
pushf
pushf
pushf
add
pushf
pushf
pushf
or
or
pushf
pushf
pushf
or
adc
jne
mov
loope
int3
or
lods
imul
popa
div
xor
pop
cmp
and
les
popa
mov
ds
je
add
sahf
pushf
add
jb
mov
shr
sahf
mov
cli
shl
or
mov
add
jns
cmp
inc
xchg
sbb
js
ins
sbb
mov
js
mov
sbb
push
sub
jo
add
mov
lock
mov
fcom
push
push
in
ficomp
jbe
out
and
in
push
retf
sbb
or
(bad)
mov
pop
add
pop
inc
js
sbb
call
test
lea
(bad)
outs
sub
xchg
aad
xor
nop
imul
sub
dec
movs
shl
into
loopne
jle
ins
retf
and
rcr
stc
into
pop
mov
or
leave
rdmsr
leave
retf
inc
xor
daa
xchg
fstp
ins
ret
adc
xchg
or
dec
sub
pusha
sub
or
or
adc
sbb
pop
xor
add
arpl
xor
inc
fwait
add
retf
ss
jge
adc
(bad)
jne
loopne
icebp
xor
js
test
dec
jmp
add
push
mov
nop
lds
mov
add
setle
js
sbb
mov
mov
add
in
xchg
shrd
imul
pop
jl
and
add
and
dec
pmuludq
in
in
mov
xor
cdq
in
mov
and
test
nop
cmp
(bad)
or
or
mov
dec
jg
inc
sub
add
push
enter
ret
nop
dec
cs
lds
rcl
push
pop
jg
je
sbb
pop
add
xor
movs
inc
je
push
arpl
add
int3
and
sub
fist
shr
jle
sub
das
mov
sahf
dec
pop
shl
movsx
and
mov
shl
push
push
cs
sub
xor
push
xchg
adc
je
sbb
and
pop
inc
lods
fs
add
ins
in
cmp
xor
retf
sbb
jo
(bad)
push
aad
call
sbb
mov
xor
dec
fsubr
retf
sub
dec
sub
mov
adc
add
adc
rcl
daa
dec
push
jne
lock
sub
jbe
adc
ja
jecxz
xor
dec
add
sub
cmp
xchg
cmc
in
ss
cmp
sti
loopne
and
xchg
pop
add
data16
jg
sub
mov
call
mov
inc
mov
(bad)
(bad)
pop
sub
icebp
(bad)
movs
mov
sbb
pop
ror
xchg
jae
xchg
or
or
pop
jb
fcom
pop
rcr
js
icebp
push
add
popf
stos
pusha
mov
(bad)
rol
jb
mov
dec
ins
or
dec
inc
jle
xor
pop
aaa
pop
inc
sbb
shl
ss
push
xchg
cmps
lds
dec
mov
js
sbb
ret
mov
lock
int
add
mov
jnp
add
sbb
movs
jne
xor
pushf
cmp
ror
shr
sub
xchg
mov
adc
pushf
mov
push
mov
adc
pop
mov
xchg
xchg
das
mov
ja
pop
xor
mov
add
sbb
cs
adc
jo
xchg
add
xor
xor
pop
push
jmp
jle
and
add
xor
mov
cmp
add
out
and
das
jne
xchg
mov
xchg
in
mov
mov
push
pop
sbb
mov
mov
mov
dec
cld
ins
or
and
shl
loopne
pushf
mov
std
je
test
sbb
add
cmp
push
out
sbb
lds
jne
pop
xor
push
inc
pop
out
pop
in
aam
cmp
(bad)
pop
or
or
cmp
xor
add
push
mov
inc
ss
movs
add
daa
pop
jno
xlat
shl
cmps
movs
jb
fsub
pop
pop
pop
sub
xor
leave
and
jne
xor
test
xor
push
pop
pop
sbb
dec
sar
xor
mov
cld
adc
xor
neg
xchg
dec
sub
cmp
inc
je
arpl
push
dec
push
(bad)
aas
fimul
js
pop
add
in
shl
shl
add
and
cmp
fisub
jmp
mov
inc
fwait
mov
aaa
mov
inc
hlt
mov
add
loop
sbb
push
xlat
push
or
xchg
iret
xor
or
add
ret
mov
test
inc
aad
cmc
or
xor
ret
and
and
cli
inc
inc
test
pop
and
fcomp
mov
or
inc
lods
push
sbb
adc
stos
mov
rol
lods
or
push
stos
sahf
xor
sub
jp
mov
ins
dec
add
(bad)
sub
or
loop
mov
aas
lock
(bad)
mov
cdq
add
xchg
pop
movs
lock
shl
iret
pop
sbb
mov
mov
imul
out
in
push
outs
add
outs
outs
push
add
sti
xor
sti
xor
aad
cs
cli
jb
inc
ins
add
add
(bad)
std
repz
lea
jne
mov
cmp
jo
fdiv
ret
mov
mov
sub
inc
adc
jne
xchg
inc
push
jns
jne
add
sub
jns
push
jne
pop
jne
xchg
or
push
jne
loopne
add
mov
mov
je
push
inc
enter
pop
or
cmp
imul
inc
test
push
xchg
and
add
js
mov
es
lahf
mov
cli
xabort
icebp
jbe
sub
add
push
out
push
push
enter
pop
dec
lock
cmp
mov
sbb
cmp
fmul
mov
jl
imul
push
mov
aas
ret
push
je
dec
push
and
cs
push
cmp
rcr
fiadd
cmp
sbb
or
mov
dec
sbb
ret
repnz
dec
dec
or
enter
dec
cmp
and
ret
cld
(bad)
lea
jle
xchg
sbb
jo
sbb
js
jge
loop
add
adc
je
adc
and
clc
inc
mov
jbe
adc
pushf
sbb
adc
lea
inc
(bad)
sbb
mov
mov
fsub
push
cmp
shr
push
je
ins
xchg
arpl
pop
les
inc
ins
jb
sub
push
enter
mov
inc
sub
dec
push
push
rol
pop
xchg
push
ds
add
jae
dec
dec
xor
cdq
push
inc
jne
jbe
mov
int3
cmp
inc
xchg
dec
pop
inc
es
add
fs
ret
rcr
add
xlat
inc
and
xor
jmp
es
push
and
inc
(bad)
sti
dec
fdiv
dec
xor
in
jmp
push
or
jne
aaa
xor
sub
xor
mov
add
add
or
push
je
pop
je
imul
lock
jl
jns
pop
adc
push
sbb
inc
mov
retf
xchg
ret
mov
movs
cmp
push
adc
pop
push
adc
and
cld
adc
mov
push
add
xor
arpl
ss
imul
xlat
dec
push
xchg
les
(bad)
sub
pop
imul
sbb
in
add
daa
push
jge
in
cmps
push
or
mov
sub
mov
mov
xchg
push
hlt
push
arpl
into
jp
xor
xor
xchg
clc
std
nop
retf
add
cld
mov
les
cmps
sub
add
and
rcr
push
jo
adc
lods
sbb
cmps
xchg
mov
pop
push
push
rcl
pop
aas
cmp
sub
and
out
fidivr
fiadd
sub
adc
fadd
inc
add
sbb
pop
or
(bad)
inc
je
jbe
sbb
daa
add
push
sbb
xlat
lock
mov
out
dec
inc
or
cmp
push
js
lock
push
ss
(bad)
pop
sahf
pop
sbb
sub
bound
or
pop
sub
and
sahf
mov
or
loopne
pop
div
loopne
inc
stos
dec
dec
jb
jbe
pop
sub
cli
pop
mov
lods
add
leave
js
pop
ins
test
(bad)
popa
xchg
stos
dec
enter
test
es
iret
adc
(bad)
xchg
out
xchg
test
xor
mov
xor
push
or
or
sub
je
xchg
pop
or
jne
jb
pop
inc
dec
dec
jle
xchg
dec
hlt
cmps
hlt
shr
retf
mov
aad
or
dec
and
inc
push
and
push
mov
or
ins
loope
cdq
and
inc
push
add
or
or
pop
dec
jbe
xor
aas
adc
ror
out
adc
mov
pop
push
loopne
and
ins
sub
ret
addr16
push
add
sbb
sbb
fiadd
dec
pop
xor
push
and
fdiv
loop
and
dec
lds
add
or
cmps
nop
sub
adc
int3
popa
xor
mov
add
int3
xor
xor
or
inc
adc
(bad)
int
sbb
clc
and
xchg
and
add
aaa
and
loope
sahf
aas
inc
adc
xor
inc
jmp
fcom
jne
jl
retf
xchg
pusha
jbe
add
aam
jmp
and
les
int
push
add
inc
add
sub
enter
jmp
jl
and
cdq
syscall
or
sbb
jbe
xchg
inc
sub
iret
adc
push
cmp
ins
iret
xchg
adc
sub
and
mov
std
mov
add
pusha
pop
mov
addr16
inc
inc
loop
sub
popa
sar
into
out
call
fldcw
mov
mov
push
dec
dec
push
cmp
pushf
or
push
call
add
inc
call
mov
sbb
push
setnp
dec
cmp
jge
dec
inc
adc
lods
xor
sbb
call
out
popf
cwde
adc
dec
add
les
fidiv
(bad)
or
shr
sbb
or
adc
cmp
sbb
fldcw
jmp
sar
lahf
sbb
cmp
retf
enter
sub
jb
nop
and
or
imul
ja
adc
xadd
movzx
shl
(bad)
and
mov
clc
or
inc
sub
in
add
and
jp
adc
dec
xor
or
add
xchg
add
icebp
sbb
adc
adc
in
leave
outs
ror
add
iret
sub
test
or
add
mov
sbb
aas
xor
arpl
sub
sbb
loope
shr
sub
mov
add
ficomp
add
adc
daa
inc
test
aam
pop
add
sub
add
(bad)
stos
(bad)
jecxz
aaa
adc
xor
sub
or
mov
pop
and
mov
pop
or
mov
pop
call
(bad)
(bad)
mov
jl
cmp
(bad)
dec
push
and
lds
sahf
in
xchg
or
or
retf
dec
xchg
aam
aas
mov
inc
and
sub
add
adc
loop
in
mov
cmp
adc
sub
push
xchg
out
push
inc
dec
jmp
dec
sti
dec
ret
int3
mov
fs
mov
rol
jg
push
dec
pop
ja
mov
mov
out
inc
stos
sub
pushf
and
cmp
outs
aas
and
push
and
mov
dec
dec
sub
add
inc
add
cmp
jle
movs
test
cmp
jb
jmp
fsubr
sbb
inc
xor
fmul
push
fisttp
test
dec
inc
push
push
lock
outs
add
stos
xor
loopne
shl
push
shl
or
add
mov
(bad)
sbb
sbb
xor
leave
sub
xor
loop
inc
mov
jb
add
lock
xchg
mov
icebp
into
jbe
data16
nop
inc
jmp
or
clc
inc
(bad)
out
xor
or
and
ja
mov
add
mov
or
fcmovu
cmps
adc
inc
lods
mov
and
inc
test
or
int3
loop
movs
fstp
loop
push
inc
push
(bad)
jbe
lods
ds
push
xor
shl
fidiv
(bad)
les
sbb
not
or
fiadd
imul
dec
mul
add
pop
je
jb
sbb
adc
mov
ins
in
inc
jne
lea
mov
in
pop
repz
scas
mov
and
loop
pop
lods
sbb
lods
retf
jmp
enter
sahf
pop
xchg
sar
stc
mov
hlt
lock
pop
fsub
mov
imul
push
cmc
push
movs
call
cmp
and
pop
push
jmp
jmp
mov
inc
xchg
pop
lock
and
inc
mov
fwait
sbb
sbb
push
pushf
aaa
adc
mov
mov
in
imul
imul
mov
adc
xor
data16
ja
fisubr
jg
xchg
fs
cmp
add
push
cmp
ss
and
push
mov
pop
push
add
cmp
in
pop
mov
sbb
push
sbb
(bad)
fld
lea
int3
fwait
inc
and
cmp
or
dec
into
ret
and
sub
mov
cmp
fwait
and
mov
ja
and
test
(bad)
fsub
fnstcw
xor
rol
sbb
sub
enter
push
add
cwde
repnz
dec
scas
cmp
mov
sbb
cwde
out
and
push
mov
enter
adc
inc
push
bswap
pop
adc
add
or
mov
cmp
or
or
and
call
push
push
sub
dec
and
xor
in
xchg
aad
mov
pop
bound
xchg
sbb
inc
pop
add
inc
aam
iret
pop
jns
push
cmp
sbb
add
push
inc
cmp
mov
jmp
add
or
scas
jmp
add
dec
mov
test
aad
push
jb
daa
pop
mov
pop
push
sbb
inc
inc
jno
cmps
loop
test
cmps
push
pop
inc
and
nop
inc
push
inc
lds
movs
xor
xchg
and
enter
xor
or
xor
inc
mov
fadd
icebp
icebp
mov
sbb
test
imul
sub
pop
fbstp
xchg
inc
mov
push
cwde
fs
sub
sar
xchg
adc
jae
test
mov
int3
pop
dec
cmp
jo
push
sub
add
jmp
xor
or
inc
add
or
fs
jns
xor
inc
adc
or
jg
push
inc
or
inc
retf
sub
sub
and
mov
mov
sbb
out
jne
dec
cmps
and
mov
jnp
rcl
add
js
dec
adc
mov
push
int
sub
mov
cmps
mov
retf
mov
push
leave
jge
xchg
(bad)
mov
cmovns
inc
xchg
adc
rcr
xor
fdivr
push
sbb
loop
sub
shr
setle
cmp
push
addr16
jg
lods
jno
fnsave
push
arpl
ss
xor
enter
sbb
shr
jmp
jmp
jmp
mov
push
aaa
into
mov
xchg
add
fs
cmp
je
scas
or
dec
addr16
cmps
push
inc
rol
add
lock
rcr
cmp
or
adc
ins
adc
jae
inc
and
leave
inc
dec
popa
mov
mov
inc
adc
mov
ins
or
and
sub
in
push
cmp
cmp
jge
cmp
mov
aad
fstp
sahf
mov
fdiv
cmc
fwait
mov
push
jno
pop
add
pop
fwait
mov
je
imul
adc
or
cmp
ja
test
push
push
adc
mov
push
xchg
adc
push
jg
call
ja
add
xor
cdq
xchg
loope
cmp
add
out
loop
add
dec
sub
add
lock
push
ret
dec
sbb
jo
pop
mov
out
loope
push
dec
cmps
adc
push
fnstcw
sbb
sbb
sbb
ins
sahf
int
sbb
cli
pop
pop
fwait
out
repnz
inc
cmps
std
and
fldcw
inc
and
fldcw
sub
sub
sub
sub
fidivr
out
mov
sub
jmp
test
adc
push
das
jg
rol
add
les
sub
add
aas
sar
add
test
add
gs
sub
add
test
xor
dec
or
lock
push
inc
inc
or
je
enter
pop
jne
call
gs
cs
mov
dec
in
jmp
and
jne
mov
adc
lds
pop
push
jnp
xchg
sbb
cmp
lahf
inc
xchg
cmp
sbb
mov
cs
adc
xor
push
jnp
pop
sbb
jne
shl
dec
add
cld
mov
js
je
inc
pop
add
jne
add
add
mov
or
out
mov
mov
mov
sub
pop
aas
js
sbb
test
mov
jns
mov
ins
dec
pop
sbb
and
es
ins
sub
add
sub
adc
clc
lock
les
(bad)
test
xor
sbb
xor
pop
push
xchg
sub
call
lea
add
or
inc
or
jne
rol
add
mov
jmp
popf
mov
(bad)
push
ins
inc
(bad)
pop
pop
add
test
jo
loope
and
cld
xor
add
sbb
inc
mov
fs
and
mov
add
xor
jmp
add
retf
nop
inc
or
mov
bound
xor
gs
push
push
add
add
add
dec
push
xchg
into
(bad)
sbb
add
push
pop
arpl
jae
inc
clc
call
daa
push
pop
retf
jne
fsub
inc
adc
jae
test
aaa
in
inc
sbb
lods
clc
xor
and
call
test
adc
(bad)
nop
and
xlat
xor
sbb
nop
inc
push
fs
les
or
fcomp
add
hlt
push
inc
adc
inc
cmp
in
xchg
jae
mov
adc
and
push
enter
jmp
inc
add
sbb
cmp
add
inc
pusha
ror
adc
mov
inc
sub
mov
mov
inc
mov
cmp
mov
add
sub
inc
ja
and
leave
jae
call
or
xchg
sub
inc
ret
or
mov
jmp
xor
fld
mov
push
mov
cmp
add
call
dec
sbb
xor
xor
sbb
xor
pop
mov
fwait
nop
sahf
adc
sbb
or
and
adc
in
sub
and
pop
push
sub
int3
neg
enter
sbb
ret
imul
sub
jns
fidiv
ds
add
mov
in
xchg
or
add
nop
sbb
push
add
ss
movs
jge
dec
mov
push
mov
add
xchg
test
mov
stos
fidiv
icebp
push
pop
pop
adc
dec
inc
and
and
pop
data16
stos
push
lods
ins
and
icebp
xchg
cmp
loope
adc
movs
jmp
fwait
pand
jmp
test
push
add
push
push
xchg
and
add
add
inc
sahf
emms
pop
sti
xor
fwait
jecxz
sub
cmp
fwait
sub
mov
dec
dec
ret
and
fidiv
aas
scas
ror
arpl
and
xor
cmp
or
dec
xor
jo
fsubr
sahf
lock
enter
out
(bad)
std
shr
mov
shl
es
jbe
loope
into
imul
inc
mov
mov
stos
push
or
mov
mov
mov
or
and
outs
xor
pop
fdiv
lea
jo
out
jne
add
xor
pushf
cmp
rcl
cwde
xchg
inc
mov
je
leave
arpl
dec
imul
(bad)
or
xchg
int3
jmp
jne
or
jne
or
and
inc
sar
inc
rol
or
rol
adc
lods
xor
loop
or
shl
addr16
mov
inc
div
gs
xchg
inc
and
fadd
mov
scas
cmp
add
dec
lds
push
and
adc
dec
(bad)
popa
add
push
xchg
push
xor
cmovae
pop
outs
or
adc
inc
add
push
inc
enter
jbe
jl
out
cwde
xor
push
push
popa
cmps
les
add
xchg
retf
out
pop
lods
mov
pop
repnz
int
mov
mov
and
push
xchg
jl
movs
add
ins
xor
stos
fild
and
imul
adc
aad
lea
in
mov
mov
dec
xchg
push
sbb
push
dec
mov
stos
inc
ins
mov
add
xchg
inc
mov
or
add
mov
dec
mov
sbb
fiadd
sub
dec
jmp
sti
sbb
cs
ret
in
push
loope
sub
fstp
aam
add
inc
jmp
add
mov
mov
xchg
pop
mov
or
push
inc
jmp
fstp
das
add
add
mov
inc
ret
cmp
dec
xchg
into
pop
xchg
ins
pop
mov
rcl
int3
pop
lods
mov
and
call
in
or
mov
mov
movs
mov
xchg
lahf
add
dec
jmp
add
(bad)
das
or
xchg
adc
sbb
call
jo
inc
or
add
es
fld
mov
cmp
and
pop
jl
cmp
daa
sbb
cmp
or
sub
push
add
and
sahf
stos
xor
add
dec
push
scas
push
lds
ror
push
mov
add
adc
jne
inc
shl
or
xlat
sbb
inc
inc
push
scas
sbb
lea
rcl
dec
(bad)
sub
mov
inc
jl
sbb
xchg
add
mov
jp
push
shr
xchg
(bad)
arpl
mov
rcr
jle
push
jle
pop
movs
sar
pop
jg
jbe
mov
popa
push
push
ja
cs
inc
neg
inc
sub
inc
jmp
xchg
cmp
jae
in
push
mov
mov
xchg
aas
aas
push
and
retf
dec
test
adc
cmp
push
mov
lea
push
cmp
cmp
adc
inc
xchg
ds
pusha
mov
cmp
xor
lods
or
js
sbb
ss
pusha
adc
repz
xor
sub
xchg
or
adc
mov
add
test
test
cmp
frstor
inc
push
cmp
pop
adc
sub
add
jg
(bad)
inc
fcomp
inc
nop
sbb
or
pop
sbb
mov
pop
xor
xchg
sub
test
or
aaa
cmp
stos
nop
shl
push
int3
pop
sbb
adc
je
(bad)
enter
xchg
xor
inc
pop
inc
push
inc
sub
hlt
ss
(bad)
frstor
lahf
mov
and
cdq
push
jp
shl
mov
dec
mov
lock
(bad)
fsubr
pop
cmp
push
lock
dec
and
mov
rcr
in
rol
jmp
sub
mov
sbb
loopne
jb
aad
into
mov
(bad)
xor
stc
sub
sbb
leave
mov
test
mov
and
xchg
sbb
cdq
push
cmp
sub
add
je
div
or
sub
add
or
je
call
ret
addr16
add
and
push
pop
test
add
mov
pop
add
xor
add
xor
pop
(bad)
pop
dec
sbb
xor
pop
fdivr
cmp
sbb
cmp
fcom
jmp
sbb
hlt
sub
lock
jb
dec
xor
les
or
and
int3
test
icebp
pop
fwait
sbb
aam
sub
jecxz
ss
push
sbb
imul
push
adc
adc
cmp
push
and
pop
or
xchg
pop
aas
in
pop
mov
mov
mov
ret
aas
sbb
gs
or
push
add
push
call
push
and
inc
inc
push
mov
arpl
xchg
mov
push
mov
inc
push
and
aaa
outs
das
add
shl
rol
adc
mov
nop
push
sub
pusha
push
jae
pusha
jb
push
add
dec
sbb
enter
xor
add
retf
in
imul
pusha
dec
adc
es
sbb
sbb
lahf
adc
mov
fist
add
add
push
dec
or
outs
enter
lock
jmp
test
mov
(bad)
jo
je
dec
sahf
aas
add
add
jmp
jp
sub
add
icebp
inc
inc
cmp
mov
imul
or
dec
call
cdq
dec
jmp
test
ret
aaa
cli
sbb
push
inc
sub
rcl
aam
pop
pushf
jmp
repnz
or
in
add
and
pusha
popa
xchg
dec
adc
mov
clc
cmp
and
push
and
fnstenv
mov
cmps
pop
mov
cmp
push
push
jbe
clc
std
and
lea
xchg
xchg
retf
sar
mov
aam
cmp
adc
push
sub
push
pop
xchg
mov
xor
inc
daa
movs
push
adc
mov
in
dec
push
mov
push
mov
or
xor
or
shl
fidiv
xchg
add
sbb
cmp
sbb
add
jge
das
sbb
push
in
mov
cmp
xchg
fs
pop
inc
inc
arpl
cmp
jge
shl
push
pop
popf
and
pusha
shl
test
(bad)
xchg
in
push
ja
and
jne
add
cmc
dec
adc
leave
inc
jo
jae
lods
popf
lock
aad
lods
push
and
ror
jns
inc
or
inc
loope
sub
iret
rcr
jne
xor
mov
cmp
fisub
inc
adc
xchg
mov
sbb
or
sub
pop
popa
mov
inc
jbe
or
leave
and
ror
pop
mov
push
push
pusha
push
mov
imul
adc
mov
cmp
mov
out
xor
mov
add
sbb
add
out
inc
ucomiss
ds
push
inc
icebp
rcl
es
sub
or
pushf
pop
pop
adc
ins
add
in
adc
adc
ins
mov
mov
int
xor
dec
dec
or
imul
aas
pop
jne
push
mov
outs
stc
add
icebp
add
fdiv
add
aam
xchg
out
or
in
add
or
jns
mov
or
aas
push
enter
sub
and
shl
or
sub
xchg
add
inc
loope
adc
mov
push
test
mov
mov
xchg
sahf
inc
rol
or
aas
lods
add
or
inc
ror
in
call
inc
ins
xor
sbb
outs
lds
push
inc
movs
adc
push
sub
xor
cmp
sar
pop
inc
test
loopne
shr
inc
cmp
and
sub
icebp
inc
push
push
cld
lods
or
dec
inc
and
dec
lods
push
pop
gs
popa
movs
jae
push
or
fbld
stos
sub
mov
jae
and
inc
rol
in
add
sbb
add
clc
sar
sbb
mov
loope
push
push
cld
lea
enter
(bad)
sbb
ds
cdq
rcr
add
ror
or
sub
dec
mov
lahf
mul
loope
call
xor
mov
adc
add
xor
fldenv
es
xor
sti
mov
mov
cwde
pop
inc
fild
imul
aam
or
pop
and
mov
mov
mov
call
shl
sbb
push
loope
lock
sub
(bad)
out
xchg
mov
dec
cs
mov
sbb
into
sub
(bad)
fs
pushf
sbb
fidiv
mov
idiv
jmp
xor
and
in
fwait
xchg
test
xchg
loopne
pop
out
add
test
push
xchg
and
lea
inc
inc
pop
or
pop
mov
call
mov
iret
pop
dec
mov
addr16
ret
and
cmp
add
xor
adc
lods
add
and
ret
pop
test
jp
imul
jne
add
sbb
ss
popa
mov
test
xchg
or
xchg
mov
(bad)
aaa
or
sub
or
sub
sub
cwde
cmp
xor
sbb
nop
call
movs
sub
cmp
pop
les
arpl
add
xlat
push
aam
test
cmp
xchg
cmp
sub
add
inc
or
or
xchg
lock
mov
retf
sub
add
or
(bad)
push
fbld
fadd
rcl
and
xor
mov
ins
rol
inc
add
dec
cmp
jbe
push
dec
mov
repnz
mov
dec
jb
add
jb
mov
xchg
push
out
xchg
in
pop
mov
pop
(bad)
mov
bound
movss
cdq
mov
jnp
ss
pop
or
rcl
enter
rol
ror
ror
cmp
lds
cmp
test
push
in
cdq
push
popf
and
push
add
lahf
push
jbe
lea
dec
dec
add
push
pop
dec
add
mov
mov
adc
test
rcl
sub
and
pushf
shr
and
je
stos
push
dec
sbb
push
dec
add
inc
xchg
cld
pop
xor
xor
clc
dec
dec
rcl
adc
and
dec
mov
mov
pop
fisttp
add
test
movs
lea
pop
or
xlat
cmp
inc
jge
pop
inc
popf
sub
sbb
outs
fdivr
inc
inc
lea
add
or
in
mov
inc
jno
(bad)
out
bound
imul
or
adc
cmp
test
inc
add
xchg
cmp
adc
(bad)
cmps
push
rcr
push
fld
pop
and
xor
xor
shl
pop
xor
cmp
or
xchg
popf
xor
cs
leave
sub
or
call
cmps
aaa
pop
loope
fs
xlat
mov
cmps
aaa
and
mov
or
and
dec
(bad)
icebp
or
ins
adc
sbb
add
nop
add
push
out
sub
test
mov
outs
pop
jmp
jmp
rcl
retf
repz
sbb
cmp
pop
in
fbld
and
ud1
pop
es
sbb
movs
mov
xchg
adc
stos
pop
fistp
gs
or
mov
loopne
pop
dec
add
push
push
ins
mul
cld
fwait
dec
pop
mov
stos
jno
add
pop
cmp
pop
or
jl
cmp
lea
xchg
out
sbb
jnp
and
cmps
pop
or
movs
movs
add
enter
mov
adc
or
xchg
and
or
adc
bound
sbb
mov
dec
rol
in
sbb
xchg
add
loopne
fs
or
int3
dec
(bad)
in
mov
inc
pop
sar
mov
rcl
push
lea
cmp
cmp
pop
lods
inc
inc
inc
lea
popa
jne
and
push
mov
dec
(bad)
cmp
cmp
add
dec
jmp
jbe
lods
inc
sub
dec
rol
sbb
cmp
jbe
sbb
and
cld
adc
iret
sbb
shr
xor
mov
pop
sbb
sbb
xlat
cmps
aas
(bad)
in
dec
xor
sti
cwde
cwde
inc
mov
jle
xor
(bad)
mov
out
imul
je
stos
xchg
xor
push
lods
add
jnp
int
dec
push
and
lock
dec
xchg
push
xchg
mov
jno
cmp
pop
add
ret
scas
nop
mov
jle
add
out
je
jmp
cmp
push
push
pop
adc
mov
mov
push
xchg
rcr
push
mov
mov
mov
mov
push
inc
cmp
in
shl
xchg
(bad)
fistp
lea
retf
inc
jge
or
add
lea
retf
rcr
add
sub
add
mov
fs
or
or
dec
int3
lea
push
or
add
cmp
inc
sbb
ror
cmp
adc
pop
adc
das
xor
loopne
js
inc
xchg
dec
or
mov
xchg
add
mov
sub
pop
mov
dec
pusha
sbb
or
pop
jne
lea
mov
pop
mov
dec
or
and
push
jecxz
sub
mov
or
sbb
ret
jno
push
cmp
retf
xchg
adc
ss
mov
mov
hlt
popa
mov
sbb
add
ss
sbb
mov
push
mov
addr16
les
je
push
mov
test
add
bnd
les
in
push
cmps
pop
dec
mov
mov
and
add
mul
je
add
test
js
jbe
ds
sub
xor
lea
xchg
add
js
jg
push
sub
es
xchg
push
inc
and
sub
lds
pop
push
cld
jg
call
add
or
shr
sub
xor
or
sqrtps
ret
mov
(bad)
xor
popf
push
mov
imul
mov
les
shl
push
int3
and
cmp
and
mov
pop
test
inc
cmp
cld
ins
push
xlat
push
jmp
jp
daa
or
or
jmp
dec
sti
out
or
adc
outs
lods
sub
pop
xor
out
mov
das
bound
cmp
mov
pusha
bound
and
xchg
jl
loop
cmc
xlat
lahf
nop
xchg
pop
repnz
(bad)
xchg
les
and
pusha
out
adc
out
repz
stos
adc
lea
pushf
fidiv
inc
add
jmp
popf
or
in
outs
adc
lock
sub
adc
mov
ins
je
fld
loop
and
sbb
push
sbb
add
push
outs
imul
push
ret
cmp
or
lahf
jbe
loopne
sahf
pushf
mov
cmp
pop
(bad)
fadd
int3
add
inc
ins
xchg
cmp
clc
xlat
cmps
das
sbb
mov
mov
pop
pop
jne
lock
mov
pop
sbb
sub
fldcw
adc
xor
mov
adc
sbb
mov
pop
imul
cmp
and
xchg
mul
fld
ja
push
popa
sub
adc
jbe
cmp
popf
mov
jg
push
add
(bad)
adc
sbb
rol
adc
adc
les
popf
(bad)
imul
and
adc
xor
daa
call
inc
enter
daa
adc
ds
mov
clc
and
mov
fistp
xchg
ret
ins
nop
sub
inc
test
add
sub
es
xor
cmp
pop
enter
cmc
add
pop
cmp
(bad)
xor
mov
jecxz
dec
xchg
movs
adc
xchg
test
mov
cs
pop
sahf
cmps
out
call
cmp
and
mov
sub
and
adc
inc
mov
rol
(bad)
aam
add
mov
scas
push
sbb
dec
fs
data16
xor
mov
cmc
push
inc
and
cmp
in
pop
test
fst
movs
add
daa
enter
lods
inc
cld
adc
push
or
dec
inc
push
push
push
nop
lea
sbb
adc
loopne
lods
lea
cmp
leave
js
xchg
adc
inc
pop
cmp
rcl
pop
(bad)
adc
mov
xchg
psubw
lods
and
xor
mov
jno
data16
(bad)
push
aam
pushf
or
fcom
loopne
adc
call
ins
pop
js
in
inc
dec
daa
(bad)
nop
mov
inc
test
fs
jns
push
push
push
daa
nop
inc
mov
mov
in
enter
ud1
sub
sub
mov
adc
sti
ror
push
int
sub
mov
jb
xor
int
push
xchg
sbb
dec
in
repnz
push
imul
xchg
mov
cmps
push
mov
adc
mov
add
cmp
jnp
and
jne
sbb
add
jmp
jecxz
xchg
hlt
mov
or
and
add
sub
pop
sbb
ja
ret
xor
shr
stos
das
pop
pop
xchg
or
pop
lahf
rol
les
xchg
mov
shl
jns
add
loop
popf
or
jge
pop
(bad)
mov
add
add
inc
jbe
add
xor
xor
and
dec
inc
lods
inc
xor
jbe
pusha
imul
xchg
add
jmp
push
sub
rol
or
jbe
mov
add
inc
push
jle
or
nop
cmp
cmp
push
mov
mov
push
pushf
sbb
jmp
dec
fwait
stos
or
push
jb
push
jbe
or
mov
lea
sbb
ins
add
push
sub
aas
int3
ret
or
mov
mov
sub
and
inc
imul
mov
mov
lods
popa
popa
fist
inc
mov
sbb
mov
add
inc
xor
nop
cmp
jg
imul
in
push
out
mov
push
in
jge
pop
cmp
inc
add
(bad)
cmp
jl
pop
pop
and
lea
and
sbb
movs
sbb
inc
xchg
add
fs
xchg
sbb
and
xor
cmp
or
test
xchg
add
sub
sbb
push
mov
xchg
add
cmp
and
or
add
scas
or
cmps
mov
enter
cmp
add
push
jp
pop
sub
or
add
enter
lea
push
fs
in
dec
retf
retf
es
lea
sbb
adc
xor
push
sbb
les
dec
pusha
jnp
shr
xlat
test
les
mov
add
push
push
mov
mov
or
mov
out
adc
lds
fs
xchg
call
aam
out
mov
sub
and
fdivr
sub
push
movs
dec
leave
out
fadd
je
mov
push
push
adc
cli
inc
xchg
sub
fs
push
clc
stos
push
inc
mov
add
ins
dec
jns
inc
or
push
ret
sti
cmp
push
add
push
sub
imul
stc
and
pop
sbb
es
fdivr
mov
pop
sbb
add
push
sbb
dec
popa
mov
mov
or
jmp
fs
dec
hlt
pop
jns
pop
push
cmp
or
idiv
lods
push
sub
clc
dec
sbb
push
lods
fild
and
or
pop
push
jo
mov
(bad)
inc
cmp
xor
jae
mov
sbb
dec
ror
pop
jecxz
ror
sti
rol
cmp
mov
pushf
pop
ficom
inc
sub
xor
pop
inc
imul
mov
and
jo
and
pop
push
push
push
push
aam
add
or
cmps
xor
pop
push
inc
and
imul
pop
sbb
js
jl
call
cmc
cmp
enter
pop
nop
and
inc
test
adc
adc
xor
pop
outs
mov
retf
and
xor
sbb
js
aas
dec
and
dec
call
or
inc
push
push
or
mov
fs
push
pop
sbb
outs
adc
aaa
adc
jb
push
sbb
and
enter
jge
ror
jbe
pushf
outs
pusha
xor
ja
add
mov
sub
leave
inc
push
xchg
xlat
fld
add
ins
pop
mov
dec
pop
push
lds
rcl
enter
test
jge
sub
aaa
dec
cmp
add
pop
xchg
(bad)
pop
out
in
sub
dec
daa
aam
in
inc
cmp
or
xor
or
add
cmp
pop
nop
sbb
sub
and
retf
fdiv
xlat
push
push
fisub
mov
adc
cwde
fdiv
add
(bad)
push
(bad)
push
dec
ins
dec
retf
jg
or
push
push
popa
stc
call
mov
add
mov
add
pop
cmp
lods
jecxz
xor
adc
mov
sar
push
icebp
push
test
loop
in
jl
or
int
jnp
mov
or
repz
sub
je
cmp
ins
cld
pop
test
jl
and
nop
fiadd
dec
or
sub
or
pop
dec
jp
mov
popw
xor
hlt
pop
jne
std
or
imul
sub
and
into
xor
adc
cmp
cmp
add
inc
cmp
add
bound
push
push
jo
shl
jb
add
es
sub
adc
xor
cmp
or
loopne
lahf
dec
pop
mov
test
pop
out
iret
push
sub
mov
cli
test
adc
xor
(bad)
mov
sub
retf
jg
lods
xor
shr
dec
imul
sub
xlat
outs
adc
dec
inc
and
hlt
xchg
je
mov
out
sbb
pop
mov
cwde
sub
add
int
cmp
rcr
or
sbb
sahf
or
sbb
adc
cmps
add
lock
cmp
and
adc
dec
xchg
sbb
inc
mov
(bad)
xlat
push
es
dec
rcl
mov
cmp
push
dec
mov
sti
adc
dec
adc
mov
sub
pusha
test
cmp
push
and
repz
rcl
cmc
dec
ret
push
mov
adc
pusha
outs
je
sub
cs
pop
ret
sbb
add
cmp
adc
and
sbb
pop
aaa
scas
fistp
push
sub
jle
sbb
cmp
jae
and
mov
iret
jbe
xchg
xchg
sbb
jg
or
xchg
xor
bound
mov
in
push
mov
inc
mov
push
stos
arpl
and
push
test
adc
mov
jno
sahf
or
movs
pop
scas
test
mov
xchg
sub
aaa
je
sub
lea
das
pop
mov
icebp
add
dec
popf
adc
push
add
add
or
sub
gs
push
and
xor
xor
mov
out
(bad)
jge
sbb
in
cmps
ds
ret
std
retf
xchg
and
mov
stos
stos
dec
pop
jmp
xor
or
add
add
jle
movs
xchg
das
adc
enter
int3
mov
and
in
fdiv
pop
mov
xor
adc
xor
(bad)
mov
arpl
mov
ins
test
and
push
(bad)
pop
mov
and
pop
enter
push
add
push
rol
sbb
repnz
adc
popf
or
add
or
push
imul
cmp
sub
xor
sub
xor
lahf
add
xor
ins
xor
cmp
aad
ror
sbb
stos
cs
mov
mov
add
and
adc
inc
jbe
loopne
sbb
push
jbe
test
js
mov
shr
retf
sbb
dec
push
push
stc
sub
sbb
dec
pop
imul
cmps
pop
dec
jbe
sbb
or
xchg
dec
dec
enter
and
sub
rcr
cmp
mov
iret
add
adc
fidivr
add
adc
fwait
push
push
adc
adc
mov
mov
dec
test
dec
sbb
add
xchg
sbb
cmp
inc
test
and
data16
mov
cld
outs
retf
cwde
inc
mov
addr16
sub
push
(bad)
push
imul
pop
ja
fst
mov
enter
xor
pop
(bad)
jmp
fist
lahf
sbb
jmp
scas
adc
jbe
jge
inc
or
in
add
jp
or
xchg
cmp
lods
adc
inc
add
adc
jns
xchg
fwait
dec
arpl
inc
xchg
push
add
sub
sbb
cli
push
fistp
pop
mov
xchg
imul
adc
pusha
or
scas
push
pop
fs
add
xor
dec
dec
bound
cmp
test
daa
arpl
out
loopne
cmp
add
sub
cmps
inc
dec
pop
sbb
cdq
call
(bad)
test
pop
out
inc
dec
sbb
jns
dec
and
adc
loope
test
sub
xlat
je
push
lahf
push
push
jbe
out
fst
sbb
sbb
scas
and
sub
nop
push
cmp
mov
pop
les
jns
popf
or
sbb
gs
and
aaa
sub
xor
int3
xor
sub
or
ror
cmps
repz
add
add
add
xor
hlt
and
cmp
dec
adc
pop
or
sub
pop
gs
sbb
xor
pop
dec
xchg
popf
dec
cmp
mov
mov
mov
fdivr
add
xchg
les
push
add
nop
aad
or
sbb
push
inc
and
jo
popa
jge
int
pop
sbb
movs
xor
cmp
xchg
or
in
arpl
inc
ja
mov
xchg
xlat
and
push
dec
add
js
push
sub
sub
scas
mov
jo
or
pusha
mov
and
stos
lods
inc
pop
cmps
pop
shr
mov
and
ins
ror
test
mov
jo
je
push
es
daa
mov
sub
xor
cmp
cmp
retf
cs
fbstp
push
adc
jg
jnp
dec
mov
xlat
cdq
ins
loopne
das
jne
mov
ins
imul
cmp
arpl
(bad)
pop
addr16
push
dec
sahf
mov
pop
pop
mov
sbb
xchg
inc
jmp
pop
stos
push
adc
sbb
sbb
ss
sbb
mov
jb
je
test
cmp
fidivr
dec
adc
mov
dec
xor
xor
inc
sub
and
mov
mov
push
loop
add
aam
sub
jle
js
jno
pop
push
or
rcl
jl
fnstenv
test
xchg
enter
fs
(bad)
push
es
inc
dec
mov
add
lahf
(bad)
dec
in
inc
xor
test
add
pop
std
jg
test
iret
addr16
les
dec
cld
enter
pop
mov
mov
shr
push
cs
ins
out
xchg
es
data16
mov
lea
push
mov
into
cdq
xchg
push
dec
movs
add
test
xchg
inc
mov
fistp
int3
aam
sub
sbb
jb
enter
and
mov
jp
mov
sub
(bad)
outs
pavgb
inc
or
mov
pop
pop
mov
add
mov
jmp
adc
add
jnp
popf
popa
and
ss
test
mov
pusha
add
sbb
cmc
jp
mov
rep
xor
inc
inc
fiadd
push
dec
push
inc
sub
cmps
sbb
add
add
jmp
dec
shl
push
pushf
add
mov
movs
push
movs
jg
xlat
xor
(bad)
je
hlt
pop
sbb
xchg
sub
inc
call
sub
(bad)
rol
cmp
lods
cmp
lahf
cmp
jo
test
es
inc
aad
dec
add
adc
jno
xchg
(bad)
lahf
or
pop
int3
add
pop
ss
push
fld
xor
mov
xchg
imul
jg
in
das
mov
jl
repz
xchg
or
or
inc
es
or
xor
mov
adc
xlat
inc
push
bound
ror
inc
pop
pop
ja
(bad)
jle
add
sub
mov
es
add
hlt
mov
or
cmp
xor
xchg
daa
push
clc
or
lock
or
or
call
les
movs
mov
or
mov
shr
in
mov
pop
test
add
sbb
pop
inc
call
inc
add
not
pushf
aaa
dec
xchg
cmovbe
push
cmps
dec
adc
or
and
xchg
ss
stc
push
pop
(bad)
cmp
dec
rol
xchg
and
or
xor
push
add
std
inc
dec
es
inc
inc
jb
nop
jl
js
jb
in
mov
adc
shr
add
xchg
add
shl
add
mov
cmp
mov
mov
add
mov
cmp
jns
add
jns
xchg
shl
jg
and
sub
sbb
push
add
sub
xchg
inc
and
xor
dec
inc
adc
iret
test
jmp
xor
jne
push
add
adc
test
cmp
sbb
xchg
or
mov
cmp
xor
pand
shl
cs
jns
fisttp
dec
mov
pushf
(bad)
stos
loopne
pop
mov
call
retf
adc
nop
xchg
cmp
push
xchg
add
add
(bad)
add
mov
ror
lods
xchg
or
xchg
sub
mov
jp
sbb
retf
mov
aam
cmps
sbb
adc
mov
aad
adc
fcmovbe
(bad)
jl
jmp
test
add
sar
xor
mov
xchg
cmp
mov
fbstp
jl
cmp
int3
push
popa
pop
add
retf
or
lock
and
pushf
dec
pop
in
shl
dec
mov
outs
and
push
cwde
xor
pop
dec
cmp
stc
addr16
(bad)
cmc
or
or
in
leave
pusha
or
push
sbb
nop
inc
sub
in
outs
test
and
add
dec
pop
inc
or
or
in
mov
sbb
xor
dec
jl
dec
pop
inc
xchg
or
or
xchg
sbb
and
sbb
fld
or
mov
or
ins
sub
add
shr
pop
in
les
sbb
inc
popa
lock
pop
nop
jecxz
mov
fs
sub
nop
push
sub
fcmovnu
dec
in
loopne
fstp
adc
push
addr16
stc
mov
int
jg
mov
mov
adc
movs
jecxz
loop
xchg
ret
xchg
or
adc
fs
or
outs
rcl
xor
pop
pushf
pop
in
adc
fwait
pop
push
cmp
jbe
rcl
jp
aam
in
inc
fcomp
mov
shl
mov
call
les
push
outs
pop
push
aam
dec
add
aaa
pmulhuw
ror
add
cmp
in
mov
mov
movs
(bad)
mov
jo
push
cmp
add
mov
add
xor
inc
sub
rol
sbb
and
cmp
pop
xor
add
(bad)
gs
call
or
xor
xchg
dec
not
cmps
lock
test
movs
and
push
push
call
das
popf
ja
jbe
(bad)
je
adc
sub
movs
ficomp
mov
dec
inc
sub
dec
push
enter
mov
stos
jns
add
and
in
sub
test
mov
xor
or
push
repz
pop
cmp
mov
js
push
pop
inc
(bad)
loope
and
aaa
imul
movs
dec
push
cwde
push
push
cmp
mov
dec
pop
outs
enter
aam
in
fsubr
or
mov
imul
fwait
and
xchg
push
sar
loopne
inc
ret
aas
or
push
push
cmp
int3
and
inc
jecxz
enter
add
test
or
xchg
pop
dec
add
test
and
inc
sbb
retf
inc
mov
inc
or
stos
pop
inc
gs
pusha
lahf
dec
inc
push
pop
mov
cmps
sbb
push
push
inc
and
in
push
js
cmc
xchg
popa
jle
cmp
fdivr
jle
xor
ins
and
add
pop
sbb
ja
movs
mov
das
(bad)
pop
ss
scas
and
mov
push
jbe
mov
pop
inc
(bad)
add
and
clc
repz
xchg
cmp
lea
push
jg
xchg
xor
leave
gs
jecxz
fs
push
hlt
mov
aad
or
mov
xor
idiv
loopne
add
push
jle
repnz
loopne
xchg
call
repnz
jge
push
add
xchg
add
je
(bad)
(bad)
pop
push
mov
in
dec
xchg
cmp
je
in
jmp
add
xchg
lock
mov
(bad)
pop
fs
cmp
inc
mov
iret
cmp
jl
je
pop
inc
push
cmovne
std
or
fisttp
jmp
cmp
mov
cmp
shr
or
aad
mov
lea
test
push
cmp
es
in
jmp
ror
mov
bound
pop
add
imul
pop
loopne
std
cmp
dec
ins
fst
and
stos
pop
jmp
and
xor
or
add
mov
lods
sub
inc
lods
cmp
cs
fsubr
add
xchg
sbb
cmps
dec
dec
movs
xchg
xchg
cmp
ret
movs
popa
cs
sbb
adc
adc
add
call
push
dec
inc
inc
cs
inc
push
push
fs
sub
pop
popa
xchg
push
xchg
add
or
lea
arpl
nop
mov
lock
lods
xchg
hlt
or
movs
and
xor
int
jmp
mov
ds
stos
add
mov
sahf
out
or
shl
sahf
mov
cmp
mov
sbb
clc
or
jbe
sub
int3
jl
mov
pop
push
mov
imul
add
xor
push
and
clc
dec
adc
xlat
xor
and
inc
sbb
loope
ins
mov
and
test
and
mov
or
sbb
mov
inc
mov
xor
out
inc
sbb
cmp
icebp
add
push
je
sbb
popa
add
xor
mov
or
push
or
popa
pusha
imul
mov
dec
adc
xchg
cmp
xchg
and
dec
mov
mov
psubsw
es
lods
scas
ss
or
es
push
fsubp
add
cs
je
(bad)
fistp
xchg
add
cld
or
cmp
test
call
or
mov
push
push
or
jl
cmp
jmp
mov
cmp
cmp
mov
cdq
mov
jmp
xchg
xor
add
xchg
or
sbb
add
pop
and
pop
mov
cmp
in
sub
rcl
xchg
enter
mov
push
add
scas
cmp
sti
mov
xor
push
adc
push
sbb
jae
mov
test
mov
pop
inc
adc
ins
fsub
dec
js
xor
pop
call
and
or
ja
cs
or
sar
dec
hlt
or
je
xchg
pop
sbb
imul
sub
xor
pop
and
mov
push
or
(bad)
pop
mov
dec
push
inc
sub
fst
push
ins
jle
push
dec
and
icebp
js
ret
pop
hlt
sbb
xor
retf
and
push
dec
out
loopne
nop
push
adc
pop
neg
js
push
xor
sbb
popf
dec
fiadd
or
int
sbb
lea
or
int3
lea
push
push
das
add
das
xchg
lea
hlt
xor
dec
enter
or
mov
cmp
lock
call
adc
shl
xchg
movs
out
ja
adc
and
adc
xor
inc
enter
je
add
push
inc
mov
inc
jo
rol
push
jge
jo
mov
(bad)
push
sbb
dec
sbb
mov
dec
js
xor
push
adc
adc
xor
iret
push
push
push
cmp
cmps
std
xor
push
ret
scas
inc
adc
adc
retf
sbb
inc
test
add
ds
lock
push
and
xchg
sub
stos
mov
stos
mov
or
ror
cmp
add
push
push
xchg
mov
adc
xor
das
mov
ss
jno
or
jb
push
add
jbe
add
movs
pavgb
mov
adc
je
cli
mov
mov
push
inc
and
popa
jmp
call
xor
pop
xor
jmp
sub
cwde
fwait
dec
inc
adc
inc
pop
adc
adc
xor
cs
add
xor
in
cmp
push
fidiv
sub
xor
mov
inc
movs
jecxz
push
jne
mov
mov
pushf
dec
pushf
inc
into
scas
outs
and
mov
dec
jo
add
pop
mov
(bad)
and
cmp
and
(bad)
xchg
xchg
and
jno
fiadd
and
push
stos
push
cmp
aaa
mov
mov
fstp
ds
fs
pop
add
dec
lods
fs
or
repz
cmc
into
and
adc
movs
xor
xlat
add
aaa
adc
dec
in
hlt
test
dec
inc
rcr
cmp
nop
aaa
cmp
and
add
mov
sub
mov
mov
adc
es
lods
das
mov
sbb
mov
ret
aas
pop
jg
rcl
ins
push
add
(bad)
sub
cmp
shl
jbe
in
fs
add
inc
aam
mov
fld
mov
inc
xchg
xchg
lea
mov
movs
add
outs
ret
sbb
add
sub
push
mov
faddp
pop
lds
enter
mov
(bad)
imul
outs
jno
pusha
push
fmul
or
mov
inc
icebp
sahf
xchg
adc
shl
pop
sahf
or
dec
push
push
sbb
jecxz
call
sub
and
fld
pop
adc
xchg
jb
xchg
pop
(bad)
js
jl
or
xchg
inc
je
pop
scas
ins
loop
dec
mov
and
outs
mov
push
adc
cdq
js
je
pushf
dec
xor
jl
mov
push
pop
dec
push
cwde
add
test
mov
in
ret
adc
cmc
mov
shl
cmps
mov
add
add
movs
cmp
(bad)
push
pusha
out
inc
mov
and
test
shrd
adc
xchg
les
push
in
mov
nop
push
xchg
aaa
jo
jg
cmp
cld
push
scas
popf
push
or
xor
add
test
add
test
adc
or
imul
or
lahf
ret
sub
pusha
or
(bad)
add
lods
mov
adc
mov
dec
arpl
in
ds
add
add
jmp
jmp
(bad)
(bad)
in
and
adc
or
add
das
jl
std
mov
push
movs
mov
add
mov
lea
mov
xor
inc
test
mov
adc
add
mov
add
or
sbb
add
je
das
lods
xchg
ins
mov
add
cmp
dec
shl
(bad)
dec
loope
mov
call
jp
rcr
or
scas
and
dec
add
shr
test
rcr
xchg
mov
aad
repz
or
push
jnp
push
xor
gs
push
ins
fadd
jbe
sub
xor
sahf
or
loop
add
pop
loop
je
adc
push
push
popf
xchg
mov
add
sub
jp
dec
ja
jb
sbb
ds
cmps
cdq
clc
inc
xor
lods
je
out
in
dec
shl
sar
add
cmp
mov
sar
lods
mov
mov
jge
pop
xchg
push
stos
jg
push
push
inc
dec
test
add
add
scas
dec
push
mov
dec
mov
outs
push
mov
add
pusha
fwait
or
xchg
das
mov
retf
fdiv
sub
push
inc
jmp
loopne
dec
loopne
push
outs
or
mov
mov
imul
or
mov
fdivr
add
jmp
repz
and
popa
dec
arpl
repnz
push
ins
push
jl
ins
push
push
push
sbb
jb
rcl
bound
lea
pop
xchg
inc
fisttp
cmp
dec
inc
call
stc
sbb
jbe
inc
push
push
(bad)
adc
scas
adc
mov
push
mov
pop
sub
inc
or
dec
add
sbb
jne
adc
inc
or
ins
out
mov
and
pop
lahf
js
jnp
xor
xor
adc
cmp
(bad)
movs
push
xchg
shl
fild
push
inc
fnstsw
adc
push
push
inc
adc
lea
fwait
add
add
xor
push
scas
in
in
addr16
jmp
cmc
rol
push
xchg
mov
(bad)
in
ins
(bad)
adc
mov
pop
movs
or
xchg
ins
mov
pop
mov
scas
ror
sbb
movs
mov
add
xchg
cmp
cmp
add
test
jb
ja
dec
xchg
shl
or
inc
shr
and
mov
add
inc
pushf
clc
mov
rcl
test
call
dec
les
js
mov
dec
push
cmps
sbb
cld
push
mov
inc
push
jb
jmp
pop
in
cld
movs
lea
mov
adc
or
adc
or
mov
mov
sbb
or
jg
retf
mov
sahf
aad
push
imul
push
mov
test
push
jns
test
adc
jp
push
xor
and
sub
dec
pushf
adc
jp
sti
jne
push
dec
xchg
jl
and
ss
sub
in
or
mov
sti
sub
mov
push
div
nop
add
cmp
test
xchg
pushf
dec
js
mov
mov
mov
or
jle
push
enter
dec
xchg
push
scas
in
add
adc
add
in
inc
push
pop
sub
pop
xchg
xor
or
mov
rcr
fidiv
pop
shr
dec
call
pop
lds
add
or
call
movs
test
fadd
cdq
push
cmp
in
sbb
jo
xor
loopne
mov
(bad)
stos
adc
xchg
jo
add
sub
loopne
adc
push
adc
fld
aaa
or
adc
and
dec
cmp
push
cmp
(bad)
jmp
lods
xchg
jne
adc
push
xchg
fsubr
and
cwde
lea
and
dec
arpl
aad
(bad)
push
inc
scas
shl
or
stos
je
and
setg
in
leave
adc
mov
pop
nop
push
mov
aas
mov
jne
inc
jmp
push
mov
sub
jle
sub
sbb
inc
sbb
add
mov
xor
or
push
xchg
add
lods
mov
push
push
not
pusha
pop
jbe
and
jle
jb
lods
xchg
adc
mov
push
mov
adc
ja
cwde
push
ins
cld
pop
adc
or
(bad)
fisub
or
push
jg
push
xchg
push
or
jg
mov
js
push
lea
pushw
scas
lock
push
sbb
add
jo
jl
lea
cmp
and
arpl
add
jb
lods
sub
mov
sbb
enter
bound
cs
jb
inc
inc
inc
inc
loope
gs
int
mov
dec
pop
xor
lods
inc
add
xchg
mov
les
and
mov
push
das
xor
mov
leave
ss
dec
add
test
test
or
lods
rol
ror
or
in
mov
fcom
push
sub
stc
and
fs
test
inc
inc
and
inc
and
mov
mov
dec
xchg
jmp
test
fstp
sub
add
imul
inc
int3
and
lods
test
retf
rcl
in
fcomp
inc
inc
push
inc
add
and
in
jmp
and
and
lea
popa
jnp
ror
and
push
adc
int
clc
push
lock
or
xchg
inc
pushf
aaa
xchg
push
xor
pop
inc
ja
and
jmp
cmp
sub
rol
mov
jmp
int3
leave
push
sub
add
adc
movs
push
lea
shl
add
add
add
(bad)
lahf
jle
sbb
or
xchg
pushf
add
rol
movs
push
pop
loope
in
mov
mov
cmp
add
bound
lahf
aam
pusha
inc
push
sbb
mov
mov
cli
ins
sbb
sahf
cmp
stc
xchg
inc
xchg
mov
xchg
push
inc
add
lods
push
push
xchg
sub
mov
sbb
or
push
clc
xchg
sbb
add
pusha
dec
sbb
sti
es
in
ror
shl
adc
(bad)
sahf
xor
adc
(bad)
or
in
add
push
xor
or
jae
jo
inc
xor
xchg
lea
push
jge
mov
mov
inc
lea
call
lods
lods
push
in
sub
inc
xchg
jne
enter
pop
xchg
lock
xor
mov
mov
adc
jb
inc
loop
stos
or
push
cmp
test
aam
sbb
mov
js
mov
mov
mov
mov
shl
ret
fwait
test
inc
rcl
push
arpl
cmp
dec
xchg
ret
repz
sbb
ins
out
or
cld
cdq
push
cmp
push
xlat
shl
adc
pop
lea
fcmovb
cmp
cld
fdivr
adc
jp
ret
lods
cmp
ficom
in
popf
loop
or
jbe
mov
test
adc
pop
mov
call
adc
and
ins
(bad)
les
cmps
imul
add
out
es
rol
sbb
shr
mov
jle
daa
loopne
mov
(bad)
call
cdq
rcl
lods
sub
inc
fistp
retf
out
rcl
push
inc
inc
mov
mov
xchg
push
mov
ins
loope
pminub
mov
fs
and
lock
or
call
ror
popa
stos
adc
mov
loopne
mov
xor
lock
push
mov
push
lods
retf
les
sub
pop
add
push
int
enter
aas
add
aam
xchg
aam
jo
xor
ret
aas
fwait
sbb
lods
cmp
push
popa
stc
jbe
shl
add
push
pop
push
(bad)
inc
mov
push
pop
popa
jne
jno
sbb
pop
and
xor
sbb
adc
jecxz
and
sbb
mov
and
outs
add
aas
xlat
test
aaa
movs
push
mov
jmp
sbb
sbb
jmp
jb
(bad)
xchg
ror
hlt
cmp
movs
cmps
and
sub
(bad)
dec
mov
sub
aas
adc
cli
add
(bad)
imul
xor
leave
arpl
inc
sbb
or
arpl
jnp
iret
rcr
push
mov
lock
sahf
out
push
or
(bad)
fwait
retf
xchg
ret
sbb
dec
rcl
inc
(bad)
sbb
aad
pop
or
les
mov
adc
push
adc
adc
xchg
sar
push
retf
jo
nop
out
nop
jp
lea
ret
jmp
push
call
iret
pop
ss
shl
jg
out
jne
in
dec
jmp
(bad)
push
mov
push
mov
dec
push
inc
xor
xor
push
pop
fidiv
(bad)
call
xor
or
ins
add
or
test
fcmovu
out
mov
push
or
dec
or
dec
sbb
mov
push
dec
movs
test
xor
jb
mov
and
iret
adc
pop
dec
movs
or
shl
pop
test
lods
jle
scas
push
sbb
fbld
test
mov
or
mov
push
ret
or
jmp
xor
out
mov
sbb
mov
cmp
test
in
dec
fadd
and
aaa
and
pop
pop
mov
inc
adc
loop
lea
inc
push
ds
sub
pop
test
rcl
and
mov
cs
pusha
adc
leave
int
dec
pop
(bad)
pop
pop
pop
dec
out
push
repnz
lea
lods
inc
pop
fiadd
mov
mov
test
fadd
add
sbb
std
mov
push
and
push
leave
sub
(bad)
xchg
mov
cdq
sub
int
and
ins
push
fdiv
cmp
pop
sbb
add
push
inc
mov
add
jo
ja
les
mov
pop
ret
dec
out
dec
in
push
in
dec
popa
xlat
xchg
and
and
xchg
sbb
push
sbb
jo
push
clc
sbb
mov
add
cmpps
(bad)
add
mov
dec
cmp
fsubr
pusha
push
xchg
hlt
gs
or
mov
push
(bad)
pop
inc
adc
push
push
jl
test
cmp
fsub
ins
sbb
test
push
or
jmp
xchg
or
inc
lds
bound
mov
mov
bound
dec
inc
cmp
xchg
dec
sub
jle
pusha
adc
pop
mov
cvttps2pi
dec
leave
inc
mov
mov
mov
add
or
jmp
or
out
daa
xor
adc
imul
sbb
inc
xchg
push
lea
push
mov
inc
sub
imul
in
sbb
jl
test
cli
or
push
pop
mov
je
push
ja
and
push
push
cmp
adc
pop
les
(bad)
js
cmp
leave
mov
repz
dec
push
xor
stc
pop
aam
retf
rcl
inc
lods
fst
(bad)
cs
(bad)
sub
sub
enter
std
add
and
jmp
fld
sub
and
cmp
add
mov
add
dec
or
addr16
mov
xor
and
adc
adc
je
wrmsr
push
leave
push
mov
jae
pop
cmp
inc
cmps
cmp
rcl
pop
mov
loope
repz
js
inc
dec
cmc
jb
mov
cmp
mov
rol
jmp
test
inc
dec
jb
jb
mov
add
add
or
or
xchg
and
mov
pop
lahf
nop
cs
push
pop
mov
add
and
inc
add
mov
sbb
xor
sbb
mov
test
jp
shl
cli
div
adc
inc
mov
jo
sub
cmp
inc
lahf
daa
sub
mov
sbb
adc
js
cmp
xor
or
or
xor
sbb
dec
adc
inc
movs
xchg
sub
rcr
push
adc
lds
aaa
or
fiadd
inc
sbb
lahf
dec
inc
cmps
mov
inc
rcl
xchg
fld
mov
dec
fwait
outs
lds
imul
test
fs
sbb
sub
cmp
mov
mov
xchg
push
sbb
movs
xchg
call
adc
inc
(bad)
inc
int3
mov
pop
enter
push
or
adc
fs
push
ins
sahf
mov
mov
pop
sub
xor
pop
cmp
popf
mov
mov
xchg
sub
retf
mov
lock
pop
inc
inc
jp
sub
mov
and
jb
add
or
adc
sub
dec
dec
and
lea
push
mov
jge
enter
sub
popf
adc
std
jmp
das
dec
dec
movs
sub
hlt
xor
inc
inc
fcmovnbe
mov
push
xor
nop
xchg
add
cld
xchg
sbb
aam
push
jnp
dec
daa
cmp
jmp
push
adc
inc
lock
inc
mov
sub
pop
dec
pop
mov
adc
xchg
inc
xchg
int3
pop
jp
mov
loopne
sar
or
push
mov
lahf
mov
cli
pushf
xchg
cwde
pop
mov
or
adc
cld
retf
xchg
lods
daa
add
jmp
add
stos
push
jb
das
inc
mov
lahf
xor
xor
adc
movs
repnz
pop
sub
shl
adc
push
sub
rol
retf
pop
inc
ret
jns
xor
xor
dec
enter
sbb
xor
es
cmp
dec
xor
into
inc
popf
mov
mov
mov
xchg
call
leave
lea
pop
mov
push
push
push
outs
jo
mov
stos
ret
pop
adc
pop
jae
data16
mov
nop
sbb
loopne
and
push
add
adc
dec
aad
mov
shr
and
push
call
cs
lea
pop
fmul
std
add
aam
data16
inc
add
mov
mov
push
es
jne
call
xor
or
xor
mov
(bad)
nop
dec
aaa
add
jo
add
sar
repnz
or
mov
jo
ror
inc
xchg
dec
xor
push
rcr
xchg
xchg
arpl
xchg
jns
stos
js
jnp
push
add
test
mov
cmps
jne
add
cmp
xchg
jl
loopne
jns
push
in
int
sub
rcl
lods
imul
adc
(bad)
jns
mov
inc
sub
enter
jp
retf
xor
loopne
adc
xor
mov
ss
fld
retf
lds
call
ret
sub
jge
adc
fild
imul
cmp
xor
pop
mov
push
xchg
adc
pop
jle
adc
dec
push
popf
push
ins
pusha
popa
mov
or
push
aad
pop
sub
or
or
retf
push
push
fs
pop
nop
add
shl
push
mov
push
xchg
cmp
inc
jmp
cmp
mov
sbb
int3
push
cdq
jl
pop
push
push
cld
jmp
push
daa
push
loope
inc
scas
(bad)
out
lock
adc
dec
and
add
jl
add
fdiv
xchg
pop
push
dec
push
mov
test
mov
fwait
and
mov
out
adc
mov
push
and
rcl
inc
sub
push
add
push
sub
xor
ins
mov
push
cmp
mov
push
stos
jo
xor
mov
popf
mov
(bad)
xchg
pop
jnp
jp
xchg
mov
dec
fcomp
inc
jns
xor
sub
das
push
and
test
aas
jecxz
inc
lods
or
or
popa
rol
and
push
sub
sbb
leave
sbb
add
add
mov
mov
aam
outs
daa
sahf
gs
lock
mov
xchg
push
push
(bad)
sub
je
cmp
fcom
mov
(bad)
cmc
add
sbb
add
sbb
inc
push
loop
jmp
xchg
inc
cwde
lods
daa
jmp
in
sub
push
push
dec
pusha
mov
inc
retf
mov
dec
test
pusha
icebp
rcr
inc
data16
xor
adc
mov
es
jge
adc
unpckhps
add
sbb
or
add
mov
dec
nop
mov
or
loopne
mov
outs
jnp
adc
in
test
and
add
sbb
xchg
push
jns
push
(bad)
mov
cli
mov
add
pop
and
jle
test
neg
inc
adc
mov
add
aas
sub
gs
pop
shl
or
jbe
stos
mov
add
les
cmp
fist
push
jmp
(bad)
loopne
call
inc
fdiv
push
push
call
test
dec
lea
xchg
dec
inc
gs
lock
dec
pop
sbb
push
add
test
adc
push
cmp
mov
xchg
jno
push
push
mov
jge
and
clc
inc
and
or
clc
jp
mov
xchg
and
test
jae
sbb
jge
or
xor
pop
rcl
xor
sbb
pusha
xor
add
dec
les
sbb
data16
popa
mov
outs
retf
rcr
aam
aam
repz
es
je
push
sbb
in
xchg
cmc
movs
lea
cwde
mov
push
jb
lock
sbb
aam
cmp
pop
and
jmp
fadd
rol
in
adc
fsubr
fwait
adc
(bad)
call
sbb
loopne
hlt
(bad)
adc
pop
fadd
pop
sub
lock
cmp
fisttp
jns
sub
(bad)
mov
hlt
aas
xchg
int3
xchg
mov
scas
test
sub
push
mov
sub
pop
push
xchg
push
arpl
sbb
and
mov
leave
enter
push
and
shl
std
xchg
dec
inc
nop
out
test
gs
jns
lea
or
add
pop
leave
mov
mov
into
xchg
or
and
test
pop
add
adc
test
add
xchg
xchg
xor
xchg
mov
dec
sahf
dec
ret
loope
in
push
aam
push
mov
test
xchg
dec
inc
aam
lock
int
mov
inc
enter
mov
shl
aad
dec
xlat
sahf
mov
mov
bound
imul
movs
inc
shl
xor
add
xchg
jns
lea
fstp
push
adc
push
and
retf
push
inc
sub
adc
(bad)
mov
out
test
dec
pop
dec
xchg
or
aam
outs
adc
fcom
popf
bnd
cmps
jno
and
pushaw
jno
pop
mov
enter
rcl
inc
in
cwde
das
fs
ins
ficom
out
add
fcom
push
ret
ja
mov
loopne
mov
mov
jmp
sub
xor
and
sbb
fdiv
cs
loopne
loopne
fsub
adc
sub
rol
inc
adc
ret
daa
xchg
mov
sub
mov
xor
jg
pop
xor
scas
dec
into
xchg
jmp
add
inc
sub
and
cwde
push
call
add
lods
jo
xchg
cmp
and
in
stos
cmp
inc
in
mov
fnsave
or
out
sbb
(bad)
in
enter
out
clc
pop
aaa
add
popf
mov
mov
mov
mov
pop
in
clc
pop
mov
add
add
mov
movs
inc
ret
sbb
ins
push
shl
add
inc
inc
lea
outs
scas
add
adc
pop
mov
sub
xor
jl
div
xchg
add
sub
pusha
pop
cmp
inc
and
outs
pop
dec
inc
sub
das
sub
out
iret
pop
and
fst
ins
test
(bad)
push
mov
je
enter
js
sbb
xchg
mov
es
call
push
les
fcomp
jno
push
mov
jns
ins
add
cdq
pusha
cdq
(bad)
push
nop
mov
push
ins
popa
sbb
arpl
test
dec
mov
nop
jo
jo
or
jne
xchg
jmp
mov
push
inc
(bad)
daa
dec
xor
aaa
shl
add
and
mov
jno
mov
add
not
call
sbb
movs
fsubr
adc
pop
test
movs
mov
xor
mov
cmps
pop
xor
pop
or
push
clc
pop
mov
pop
push
pop
sbb
pop
in
add
mov
adc
fadd
pop
inc
xlat
cmp
push
cs
sbb
mov
adc
jb
jmp
pop
push
push
push
test
adc
imul
pop
imul
and
add
add
imul
sbb
lds
adc
or
fs
out
add
add
push
jno
sub
xchg
xor
mov
sbb
ja
sub
add
and
sbb
repnz
and
push
fs
aad
fwait
test
mov
sbb
cmc
out
clc
sub
and
sbb
sbb
aad
outs
fsubp
dec
jne
iret
cmp
cs
outs
xchg
sbb
jne
xchg
jne
cmp
pop
ins
adc
mov
stos
in
loopne
push
sub
test
fwait
sub
test
out
adc
ret
dec
jne
addr16
call
je
stos
popa
push
push
add
push
out
ins
and
jns
push
mov
sahf
repz
shr
push
shr
inc
adc
retf
ins
push
mov
xor
pusha
je
fs
pushf
je
push
test
push
and
pop
pop
or
add
adc
adc
std
loop
add
inc
loope
pop
lock
push
cdq
mov
lea
push
jmp
aas
xchg
int
les
add
xchg
mov
push
xchg
test
and
loop
xchg
and
push
mov
push
or
cmp
pop
popf
scas
xchg
cmps
push
and
xchg
and
jecxz
mov
push
inc
test
icebp
mov
pop
gs
xchg
xchg
sbb
mov
test
xchg
pop
xchg
jg
(bad)
and
ins
add
add
inc
and
ret
fcom
and
lods
mov
(bad)
inc
aas
and
adc
inc
lods
cmp
and
cmp
adc
push
push
pop
mov
test
shr
mov
cmp
test
imul
and
and
les
xor
sar
add
nop
enter
das
xchg
adc
or
and
mov
sub
pop
jo
sub
aad
mov
xchg
sbb
lods
js
mov
rcl
fild
cmp
dec
cmp
mov
pop
cmp
aas
xor
mov
or
sahf
loop
adc
xchg
or
xchg
sbb
test
sbb
mov
cwde
or
loopne
and
rol
popa
xor
sar
xor
sahf
pop
ins
xor
jae
jno
push
mov
push
into
dec
push
push
pop
aam
(bad)
div
movs
daa
fs
jecxz
test
lea
or
fstp
in
jnp
xchg
adc
mov
cmp
add
xlat
ret
gs
mov
push
(bad)
mov
add
imul
hlt
mov
fs
in
add
inc
call
pushw
add
fwait
cmps
sub
or
add
inc
mov
mov
(bad)
fcom
and
jnp
sbb
push
jle
pop
inc
mov
shl
mov
imul
xchg
dec
mov
add
loope
add
fld
mov
cld
add
mov
cmp
and
mov
push
fisttp
mov
iret
push
jge
xchg
mov
loope
or
inc
mov
sahf
mov
loope
retf
mov
sub
or
icebp
cdq
ins
loope
ror
push
mov
sub
push
sbb
loop
clc
inc
nop
stos
dec
test
shr
dec
sub
scas
and
into
sahf
inc
sahf
movs
shl
sbb
xchg
lahf
or
mov
inc
push
nop
jge
test
push
dec
inc
mov
or
das
dec
jmp
push
fadd
movhps
sbb
in
clc
or
popf
fistp
mov
mov
aas
push
ror
or
lods
mov
stos
cmp
add
sbb
xchg
dec
and
adc
js
mov
mov
xchg
add
mov
pop
adc
nop
mov
xchg
test
xor
push
dec
stos
inc
movs
ret
aam
cmp
lds
retf
sub
(bad)
and
adc
jle
into
enter
sub
and
fidivr
(bad)
and
mov
inc
js
call
nop
jnp
lea
add
fld
push
inc
aam
add
add
push
adc
cdq
ins
xchg
push
xor
mov
cmp
adc
fsubrp
xchg
xor
and
mov
test
sbb
pop
sbb
ins
cmp
push
mov
push
mov
shl
or
or
movs
pop
add
test
stos
ret
jae
mov
pop
mov
pop
push
xchg
cwde
call
clc
jmp
xchg
addr16
gs
into
in
shr
xor
outs
add
xor
add
movs
add
mov
int3
cmp
sub
and
das
adc
stos
sub
ds
mov
sub
dec
add
mov
mov
aam
dec
fcom
sbb
xchg
inc
add
outs
pop
cmc
sub
sbb
loope
push
lods
adc
adc
lods
outs
pop
dec
adc
dec
adc
ret
dec
mov
mov
cmps
push
arpl
mov
arpl
pop
adc
jp
adc
cmps
loope
and
xchg
and
fist
or
ja
out
or
stos
cmp
pxor
das
pop
cmp
inc
xor
pop
aaa
sbb
pop
cmp
fsubr
mov
rcr
or
rol
or
sub
xor
movs
push
inc
pop
lods
imul
and
mov
inc
in
and
loopne
xchg
inc
mov
rcl
movs
mov
je
into
dec
imul
inc
leave
push
ret
ins
cmp
sub
cmp
and
fs
rcr
fadd
xlat
add
push
xchg
pop
or
mov
cdq
fsubr
pop
and
xchg
or
pop
mov
pusha
cmp
add
add
lods
push
sub
add
sbb
pop
mov
ds
adc
mov
fidivr
mov
push
adc
test
pop
mov
inc
mov
inc
rcr
sbb
push
inc
and
xchg
rcl
shl
pop
gs
sbb
rol
pop
sbb
sbb
xor
or
inc
add
dec
xchg
daa
xchg
mov
mov
out
rcl
imul
shl
push
aad
dec
or
sti
cmp
test
shl
ins
cwde
mov
inc
adc
je
jge
inc
ret
mov
inc
add
mov
ficom
xchg
sub
xlat
ror
inc
dec
dec
xor
inc
gs
pop
and
into
or
aad
xlat
lods
and
add
and
fbld
sbb
adc
pop
loope
jecxz
adc
or
nop
push
or
mov
(bad)
retfw
popf
mov
adc
push
nop
push
xchg
jmp
add
mov
push
mov
mov
pop
mov
jb
or
inc
inc
dec
xor
cmp
loope
sar
mov
cmp
adc
mov
sub
std
and
xor
push
xor
pop
ret
xor
cmp
pop
dec
xor
sub
mov
add
cmp
ja
fwait
lahf
push
lods
dec
adc
test
or
and
test
clc
adc
(bad)
cmp
gs
inc
mov
xchg
xor
data16
dec
push
inc
push
inc
or
les
jp
sbb
sub
adc
mov
fadd
sbb
xor
loopne
(bad)
bound
or
cmp
sbb
adc
inc
test
add
dec
movs
sbb
adc
imul
test
add
adc
jb
stos
mov
loope
test
pop
fdivr
out
xchg
push
cmp
jp
dec
jbe
sub
test
mov
js
push
push
vrsqrtss
inc
and
jl
sbb
adc
pop
push
or
cmc
js
out
and
add
sub
or
dec
add
mov
jp
or
push
jl
mov
popf
inc
lahf
add
push
pop
sub
jmp
jmp
dec
ds
mov
add
and
arpl
cmc
arpl
sbb
mov
lea
dec
pop
ja
sub
adc
pop
sti
test
push
sbb
jbe
and
mov
jge
or
mov
ins
repz
pop
sbb
mov
or
and
loop
jp
cmp
pop
(bad)
cmova
or
add
movs
in
ds
pop
sub
sbb
mov
inc
cmp
adc
stc
xchg
imul
pop
adc
pop
xor
or
mov
xor
jmp
xor
mov
add
sbb
xchg
cmp
push
in
adc
xchg
aad
sub
add
pop
jmp
push
xor
or
fcomp
iret
popa
inc
cmps
(bad)
addr16
ror
stos
adc
mov
sub
jns
add
sub
add
inc
sub
adc
(bad)
in
sub
clc
je
arpl
test
mov
paddq
push
sbb
jmp
dec
jne
into
fsub
jo
jb
xor
jnp
loopne
xchg
push
inc
vinserti128
adc
inc
xlat
ror
jno
rol
xchg
lea
or
adc
xor
xor
jo
inc
or
fist
(bad)
and
add
out
cmp
lahf
clc
dec
xchg
movs
sub
mov
pop
cld
xchg
int
pop
or
mov
lahf
jns
xchg
imul
add
fdivr
pusha
push
push
cmp
mov
pop
cmc
int3
xchg
imul
jae
xchg
mov
pop
jbe
enter
cmc
jl
pop
scas
mov
sbb
ja
inc
mov
sub
dec
pushf
inc
icebp
fistp
test
pop
push
nop
pop
or
imul
xchg
xor
mov
adc
movs
push
xchg
mov
fisttp
mov
in
add
adc
jne
lods
enter
lahf
jno
xchg
push
dec
arpl
stc
mov
xor
call
das
adc
pusha
mov
lods
scas
push
mov
stos
mov
push
mov
dec
repz
jmp
adc
push
dec
sbb
or
fistp
mov
xchg
mov
add
and
call
(bad)
adc
mov
test
adc
and
(bad)
pop
sahf
or
add
and
inc
arpl
push
lods
loopne
and
icebp
int
test
mov
stos
inc
(bad)
push
jo
push
adc
mov
adc
test
mov
ja
in
xchg
mov
js
mov
jp
sub
xchg
push
mov
push
push
int
and
sbb
or
push
pusha
cmp
(bad)
mov
dec
retf
aam
jmp
adc
popf
xor
cvtdq2ps
and
sbb
out
pop
scas
cli
add
ror
xchg
sbb
or
dec
jae
add
push
pop
cmp
fsubr
xchg
jb
pushf
movs
aaa
push
or
and
mov
mov
mov
scas
bnd
jo
popf
inc
lea
cmp
mov
sahf
pop
inc
xchg
mov
retf
pop
das
inc
mov
shr
inc
push
bound
push
repz
inc
lock
add
inc
or
loope
nop
movs
cmp
iret
cs
cmp
inc
push
push
inc
add
mov
fild
shl
in
cli
push
call
adc
sub
movs
inc
(bad)
loopne
sbb
xor
pusha
fsub
inc
xlat
dec
mov
or
jg
dec
daa
push
fadd
ds
cmp
and
sbb
cmp
fs
aam
sbb
sub
inc
and
leave
push
pop
pop
pop
xchg
xchg
pop
jo
mov
or
sbb
push
loop
mov
nop
push
mov
sub
pop
push
inc
clc
add
shl
or
pop
mov
fisub
sysenter
adc
xor
fist
sbb
xchg
and
xor
push
or
or
test
sbb
out
std
dec
pop
cmp
adc
adc
xchg
adc
xor
cmp
popa
sbb
cwde
add
or
xchg
lods
test
push
ins
rcr
and
mov
sub
sub
jb
and
xor
dec
adc
ret
into
(bad)
mov
popa
popa
test
fwait
xor
jmp
retf
mov
sub
adc
xchg
jl
sbb
jb
adc
test
das
icebp
push
movs
in
cmp
and
adc
cmp
das
or
ret
jo
and
popf
test
popa
mov
(bad)
cli
cmp
add
cld
nop
push
add
(bad)
dec
xchg
sub
sub
sub
dec
sbb
jae
and
xchg
movs
pop
pop
add
sbb
mov
mov
cmp
into
add
addr16
pushf
or
pusha
arpl
shl
fs
jno
imul
mov
or
or
xor
daa
and
and
xchg
hlt
cmp
mov
into
outs
xor
inc
push
ret
inc
add
dec
jg
scas
cmp
jbe
mov
fucomp
and
in
inc
shl
into
sub
mov
sub
sub
movs
and
fsub
sbb
dec
xchg
xor
jbe
lea
push
outs
shl
mov
cmp
cmp
call
mov
mov
push
ficom
sub
sub
adc
mov
not
imul
lea
in
or
ja
jmp
pop
push
mov
push
jns
xchg
add
cmp
rol
cmc
pop
xchg
xchg
dec
inc
fsub
nop
xor
sub
or
popa
and
je
stos
or
aad
bound
leave
add
inc
sbb
and
test
and
and
mov
sbb
mov
mov
cdq
inc
add
popa
sub
nop
xchg
and
jo
(bad)
movs
fild
cmp
ss
push
aaa
xor
cmp
mov
add
lock
out
popf
dec
dec
fucomip
cld
adc
in
push
or
cs
jmp
jg
and
enter
cmp
rcl
leave
test
adc
vmwrite
loopne
fbld
xor
je
and
jg
cmp
outs
push
and
imul
enter
jle
shr
cwde
xchg
sbb
ret
cmp
retf
inc
sub
mov
sub
lea
shl
lock
pop
iret
rep
sahf
data16
or
mov
or
int3
rcr
xlat
cmp
push
test
push
mov
mov
mov
in
aam
dec
jne
aaa
adc
ins
inc
inc
ss
adc
inc
(bad)
pop
stos
loopne
fsub
ins
ret
cmp
or
aam
scas
and
jge
mov
out
call
lahf
into
add
mov
jo
mov
xor
mov
add
add
pop
and
leave
rcr
rcl
jp
xor
push
mov
bound
arpl
mov
and
mov
sbb
push
mov
loopne
bound
scas
sbb
or
inc
lea
adc
pushf
push
sbb
jp
enter
add
mov
stos
adc
jo
jmp
dec
jbe
add
fdiv
rcl
adc
mov
and
cs
jnp
mov
push
cmp
retf
mov
jl
int3
xor
add
mov
inc
jge
push
shl
repnz
js
inc
pushf
or
and
dec
lahf
aas
pop
sub
xchg
cmp
xor
fsubr
jo
call
or
xor
xchg
jecxz
rol
adc
enter
add
adc
lods
aad
push
push
mov
lahf
aad
add
sbb
sbb
lods
(bad)
adc
push
push
pusha
dec
mov
or
not
mov
mov
ret
dec
sar
push
(bad)
adc
inc
jge
fcomp
stos
and
pop
jmp
rol
inc
mov
push
push
sbb
mov
mov
push
add
pop
ret
out
ja
push
add
test
mov
pop
mov
shr
push
xor
rol
add
ror
cmp
mov
jg
mov
add
jno
ins
in
cmp
pop
inc
out
(bad)
ret
scas
cmp
jmp
jge
out
mov
pop
cld
inc
mov
out
lahf
mov
add
les
fwait
(bad)
adc
mov
lods
(bad)
jp
shr
ret
add
data16
add
push
jge
iret
nop
push
movs
pop
cld
sbb
retf
jnp
dec
rol
fs
lea
cld
std
dec
cmp
into
pop
sar
push
add
js
pop
dec
or
ret
and
adc
pop
add
leave
loope
icebp
xor
stos
ins
add
aam
adc
lock
and
inc
push
mov
inc
(bad)
inc
dec
jne
fst
add
xor
adc
push
mov
sub
jne
or
idiv
mov
sbb
or
mov
bswap
(bad)
jnp
jno
cmp
sbb
push
pop
jp
xchg
mov
out
mov
mov
adc
xchg
adc
das
xchg
(bad)
mov
ret
mov
je
cmps
loop
mov
mov
push
lock
sub
cmp
pop
js
jbe
jl
(bad)
and
xchg
cmc
jo
adc
ja
cmc
xor
and
lods
jo
shl
daa
pusha
xchg
cmp
lea
pop
xor
div
mov
outs
mov
(bad)
loop
add
jg
inc
add
movs
mov
or
add
mov
push
int3
pop
dec
fisttp
pop
mov
add
outs
cs
push
sub
test
mov
sub
test
pop
xor
addr16
not
imul
fwait
and
push
mov
mov
outs
bswap
or
xor
loopne
adc
jnp
mov
sbb
cmp
dec
inc
(bad)
scas
and
add
mov
cdq
sub
test
add
add
nop
scas
leave
(bad)
jmp
dec
dec
inc
cmp
sbb
push
mov
cmc
in
fsub
dec
repnz
pop
sub
pop
jo
aad
cmp
fld
loopne
or
loope
pop
or
jae
(bad)
pop
xchg
pop
nop
mov
inc
jbe
cmp
dec
xor
hlt
add
pop
dec
ins
inc
iret
or
sbb
jmp
out
push
shl
cmp
add
push
mov
call
loope
iret
pusha
ret
(bad)
out
pop
add
xchg
ss
xor
repnz
sbb
popa
mov
aas
and
in
hlt
add
ja
dec
pop
movs
add
adc
sub
xlat
hlt
inc
cmp
add
and
add
pop
(bad)
push
pop
inc
aad
dec
dec
fist
mov
test
cmp
and
add
shl
test
test
sub
dec
cmp
(bad)
xchg
leave
or
jmp
xor
inc
mov
push
je
cmp
test
push
in
jmp
mov
sub
sub
add
dec
add
mov
push
xor
inc
sub
jo
or
sti
xor
mov
mov
mov
mov
(bad)
adc
adc
sbb
and
imul
inc
out
inc
push
xor
inc
adc
push
mov
mov
ja
inc
sbb
xor
enter
int
adc
adc
cmps
or
movs
and
jnp
arpl
add
sbb
ds
adc
data16
cmps
clc
cmp
lock
push
loopne
loope
dec
adc
sub
mov
mov
mov
jno
cmp
enter
inc
add
lds
xchg
das
jle
in
ficomp
into
dec
xor
sub
add
add
ins
mov
sbb
push
shr
mov
rcl
rcr
bound
jl
jle
mov
hlt
fdivr
sub
daa
adc
mov
lock
sbb
in
mov
shl
adc
inc
jg
daa
cli
clc
ret
dec
add
hlt
movs
adc
dec
pop
fiadd
and
mov
mov
inc
mov
mov
aaa
rol
inc
push
and
pusha
or
adc
cdq
or
cmps
retf
sbb
aam
jbe
push
push
cmp
sbb
into
mov
push
imul
fmul
lock
sub
push
lock
push
push
mov
inc
adc
add
mov
mov
shr
pop
cmp
sub
fwait
dec
xor
(bad)
push
mov
movs
sub
sbb
ret
and
xchg
push
inc
pop
ins
jo
cmp
and
pop
and
and
sub
mov
test
inc
lea
pop
inc
popa
lods
ds
or
int
sub
adc
or
adc
push
push
sub
mov
lock
or
add
jbe
pop
call
and
je
in
jmp
push
clc
popf
loope
rcr
cmp
adc
add
pop
push
or
sub
sub
or
add
add
and
cld
push
pop
add
add
clc
test
jne
push
sub
popf
pop
inc
pop
adc
or
pop
lea
mov
mov
imul
cmp
dec
stos
sbb
add
call
push
cmp
dec
loopne
fidivr
pop
push
cmp
mov
sbb
test
imul
mov
ret
xor
rcr
and
inc
mov
add
rcl
mov
jns
pop
add
repz
push
add
imul
data16
sub
cmp
(bad)
adc
loopne
or
adc
sub
xchg
sbb
test
adc
in
push
adc
daa
and
inc
in
jbe
sbb
push
test
push
mov
popf
aaa
dec
lods
sbb
cmp
or
in
daa
(bad)
mov
push
inc
push
jg
adc
dec
sbb
(bad)
sub
lods
cmp
inc
xchg
jmp
sbb
dec
sbb
and
fild
add
push
add
inc
add
push
popf
add
mov
dec
push
sub
daa
sub
(bad)
and
test
out
fcomp
add
xor
add
sbb
mov
push
mov
pop
dec
add
add
push
dec
mov
inc
push
add
test
dec
aaa
stos
inc
adc
mov
sub
fstp
push
cmp
jne
aas
fadd
add
lahf
xchg
loopne
lea
adc
or
push
cmp
sub
dec
xor
lahf
(bad)
daa
fs
jo
mov
loope
(bad)
add
sub
push
adc
dec
pop
pop
xchg
or
cmp
xor
shl
add
mov
adc
int
pusha
push
inc
pop
das
pusha
push
aas
(bad)
sbb
xchg
push
push
pop
pop
gs
push
scas
inc
inc
or
push
pop
mov
and
adc
adc
je
fld
mov
push
test
or
push
add
mov
dec
sbb
adc
pop
ins
je
sbb
ret
sbb
pop
lock
inc
les
inc
ret
and
xor
xor
fist
jbe
rcl
mov
adc
enter
push
push
movs
dec
fadd
or
or
jecxz
mov
mov
out
mov
outs
lock
ficom
xchg
ds
(bad)
mov
mov
repnz
lea
aaa
(bad)
out
mov
pop
mov
mov
xor
cwde
mov
into
cmps
cmp
push
sbb
adc
pushf
mov
ja
mov
out
(bad)
lock
out
sub
sub
inc
popa
mov
sbb
adc
pop
bound
retf
pop
xor
push
push
bound
sbb
mov
movs
mov
mov
in
pop
xchg
pop
rol
cmps
adc
or
lahf
outs
push
push
arpl
bnd
push
ss
cmps
and
pop
mov
sbb
loope
xchg
test
sub
adc
add
scas
cmp
inc
imul
and
xor
(bad)
sub
mov
add
mov
ja
pop
or
shr
sbb
test
ret
(bad)
pop
dec
or
enter
mov
test
mov
pop
aam
and
iret
cmp
cmp
loopne
nop
sbb
js
or
push
fld
pop
add
xlat
popa
or
inc
push
data16
dec
rol
popf
adc
mov
xor
inc
mov
mov
mov
add
mov
mov
test
loopne
push
lods
mov
ficomp
movs
sub
jb
(bad)
xchg
or
fimul
or
jae
(bad)
inc
add
sbb
loopne
sbb
mov
xchg
outs
inc
mov
push
pop
mov
and
popa
inc
rcr
adc
lods
or
movs
inc
cmc
add
dec
and
cmps
xor
aam
mov
push
div
fneni(8087
retf
xor
cmp
inc
mov
or
push
sub
loopne
out
movs
outs
sub
sbb
inc
mov
xor
jmp
sar
fmul
and
inc
js
call
pop
(bad)
sahf
(bad)
out
ror
call
or
or
js
mov
pusha
jo
jmp
ret
mov
aam
fsubr
or
jle
or
and
repnz
inc
push
aam
lahf
and
xor
cmp
or
push
mov
sbb
xchg
je
test
fwait
shl
xor
fmul
and
aam
xchg
shl
or
adc
push
pushf
push
hlt
add
stc
jo
xchg
out
push
gs
push
jns
test
mov
sbb
adc
and
dec
sub
sbb
hlt
hlt
dec
add
xchg
add
das
mov
add
mov
xchg
sbb
lea
test
sar
adc
and
or
lock
pop
cli
es
and
in
leave
add
loopne
adc
pop
retf
addr16
mov
gs
clc
cmp
inc
and
mov
scas
xchg
test
pop
dec
je
(bad)
pop
jmp
cmp
add
and
enter
sub
int3
pop
or
xlat
sbb
pusha
adc
call
inc
mov
jns
jbe
imul
fldenv
inc
mov
pop
in
loopne
ret
es
in
in
dec
es
aas
or
or
shl
aas
lock
add
pop
cmp
lock
adc
adc
sbb
and
nop
(bad)
jb
sub
stos
bound
push
add
pop
push
adc
jne
test
aam
cmps
add
enter
aaa
add
daa
push
and
repz
nop
mov
shl
mov
dec
jg
pop
push
cld
jo
add
pusha
jl
fldcw
pushf
xchg
(bad)
xlat
cs
pop
add
not
popa
push
ins
gs
jo
stc
ds
ds
and
add
jmp
mul
or
aas
sub
dec
sar
inc
aam
mov
loope
mov
pop
scas
xchg
push
add
and
cmp
adc
and
fimul
add
outs
imul
xor
aaa
arpl
jb
jnp
outs
sub
and
jae
and
jmp
out
imul
inc
add
ins
add
dec
cmp
mov
jne
shl
ins
je
jne
dec
sar
outs
imul
ins
ins
pop
inc
push
pop
inc
outs
fiadd
(bad)
mov
cmp
push
popa
das
dec
outs
imul
push
outs
inc
outs
fs
inc
jb
ja
jg
outs
imul
push
gs
xor
xor
cs
mov
into
popf
ins
add
jp
jl
fs
push
push
popa
jb
bound
push
gs
ss
jmp
imul
push
pusha
data16
jae
das
clc
push
movs
push
adc
outs
ja
and
arpl
rdmsr
pop
bound
and
cmp
test
jb
jns
outs
gs
mov
addr16
mov
or
push
clc
jge
jne
scas
enter
fcom
shl
loop
mov
fild
sbb
inc
pop
push
or
sub
cmp
xor
bound
xlat
push
in
fnsave
or
ja
jns
imul
imul
jae
xchg
jbe
mov
ins
jae
daa
loope
pop
sub
pop
inc
gs
inc
push
mov
ins
jne
push
add
ja
addr16
arpl
arpl
aad
mov
sub
pop
mov
cli
dec
inc
mov
ret
xchg
or
popa
inc
aaa
out
sahf
mov
movs
lods
mov
(bad)
rcr
in
clc
cmp
daa
movs
repz
adc
cmp
repz
push
xor
inc
inc
repz
repz
dec
push
push
pop
iret
repz
fs
cmp
repz
add
nop
xchg
cwde
pushf
mov
movs
test
push
lods
push
mov
sahf
out
mov
mov
sahf
out
int3
rcl
fmul
out
sahf
fsubr
hlt
cld
cmp
repz
inc
pusha
and
loopne
add
inc
out
sahf
out
mov
jns
(bad)
aam
aas
add
cmp
repz
pop
sub
cld
inc
sbb
mov
aam
inc
in
clc
inc
adc
push
cld
cmp
dec
pop
pop
dec
jae
ror
retf
es
mov
jae
fs
ins
or
(bad)
inc
imul
jbe
lods
fstp
outs
jb
(bad)
ins
sbb
int3
test
ss
jb
mov
jge
pushf
pop
daa
cwde
aam
add
adc
in
sub
and
inc
sbb
je
cmp
ds
mov
xor
push
pop
pop
imul
gs
jnp
(bad)
jmp
sub
push
sub
mov
sub
das
and
mov
push
sub
sub
out
mov
jl
xchg
cmp
idiv
and
inc
cmp
push
pop
pusha
jbe
je
daa
add
bound
adc
jns
pop
(bad)
es
sub
jae
inc
push
sbb
fs
std
shl
or
jbe
enter
cli
es
sub
outs
xchg
fsub
push
cmp
xor
jne
sbb
outs
outs
push
fdiv
jb
ins
pop
mov
jae
jg
jge
retf
mov
(bad)
in
pusha
ins
mov
aas
jne
cmp
ficom
inc
imul
jo
add
ins
outs
pusha
ins
popa
jo
xor
add
js
aas
or
ins
cs
push
pusha
jne
and
test
sbb
push
push
push
dec
xchg
fsubr
push
ja
pop
mov
xchg
pop
pop
adc
test
sti
mov
mov
out
imul
es
lods
pop
cmp
jl
rol
cmps
cmp
inc
or
bound
pop
add
push
mul
fsubr
in
scas
test
aaa
arpl
adc
inc
and
mov
pusha
sbb
mov
adc
scas
shl
mov
jo
adc
and
push
shr
inc
and
mov
pop
jo
and
inc
ins
or
xchg
fadd
inc
push
pop
in
out
in
pusha
sbb
arpl
popf
ds
(bad)
mov
inc
dec
bound
and
fnsave
cmp
sbb
add
add
add
add
xor
cmp
mov
aaa
xor
pop
mov
out
or
or
pusha
add
js
js
xor
out
pop
add
add
(bad)
add
push
xchg
test
imul
adc
pop
(bad)
daa
xor
jle
push
and
push
mov
sub
jb
add
lods
mov
mov
jo
push
ret
sub
and
inc
sbb
sahf
sbb
or
(bad)
test
sub
sub
in
sti
mov
rcr
mov
ret
icebp
sub
cmp
fs
xor
(bad)
rol
cmp
adc
nop
gs
sub
(bad)
xlat
pop
(bad)
mov
call
add
push
in
cmps
cli
lds
enter
lods
jmp
fld
into
sar
sub
mov
out
and
out
fild
ds
(bad)
aas
outs
inc
int
or
data16
cmp
add
inc
pop
and
dec
ret
pop
sar
(bad)
(bad)
dec
mov
jl
and
or
les
xchg
and
(bad)
(bad)
fucomip
sbb
ficom
mov
stos
pop
(bad)
or
add
rcl
mov
sub
out
pusha
xchg
sub
and
mov
push
test
mov
pop
loopne
fadd
jmp
push
inc
(bad)
imul
sar
dec
xor
inc
dec
in
and
fnstcw
repz
je
pop
ror
sub
shl
sti
test
call
push
pop
popa
dec
adc
jnp
sbb
push
add
xor
das
out
daa
push
arpl
jmp
dec
mov
or
adc
outs
sbb
inc
xor
inc
lods
add
(bad)
(bad)
(bad)
push
stc
aad
xchg
sub
cmp
lods
push
fidiv
mov
mov
mov
and
out
ret
sti
hlt
shl
push
push
sub
mov
repnz
(bad)
(bad)
call
adc
fdivr
cmp
cdq
sbb
sbb
xchg
add
adc
xchg
(bad)
mov
push
or
std
dec
jp
sbb
and
xchg
cmp
int3
mov
(bad)
push
jmp
es
popf
call
adc
jno
push
dec
mov
push
jg
call
js
test
lock
(bad)
fld
adc
(bad)
fbstp
gs
dec
sub
loopne
ins
ret
push
iret
leave
xchg
daa
push
stos
loop
daa
out
pushf
(bad)
(bad)
jmp
cmps
mov
push
dec
shr
hlt
lock
jg
ins
or
add
inc
ret
pop
sub
(bad)
dec
adc
sbb
mov
int
movs
sbb
inc
imul
push
sbb
(bad)
call
mov
jne
adc
mov
fiadd
dec
inc
inc
dec
push
xchg
xchg
and
adc
push
cdq
out
inc
xor
aas
mov
fldenv
jno
fs
out
pop
repnz
adc
add
sub
iret
rol
xlat
jge
ficomp
popf
fidivr
(bad)
push
cwde
adc
xlat
nop
cmp
loop
stos
stc
outs
ja
es
or
(bad)
push
adc
nop
or
pop
fcmove
es
push
xchg
xchg
call
(bad)
dec
inc
mov
leave
ds
mov
out
sar
inc
add
mov
and
(bad)
(bad)
jmp
and
mov
pop
inc
bound
jp
pop
movs
into
xor
dec
ins
ins
mov
xor
cli
(bad)
jmp
push
adc
and
test
xchg
shl
dec
push
scas
sub
xchg
ror
mov
mov
sub
shr
pop
imul
jg
mov
pop
outs
push
scas
(bad)
in
stos
mov
out
(bad)
mov
call
loope
repnz
aaa
ds
mov
or
dec
push
xor
loop
push
fild
cmp
js
fwait
xor
lds
es
(bad)
out
addr16
pop
cmp
rcl
test
dec
fwait
clc
push
xchg
stos
or
scas
(bad)
(bad)
mov
imul
aad
jbe
ror
(bad)
call
retf
dec
and
or
pop
cmp
adc
lods
mov
adc
retf
xchg
(bad)
(bad)
(bad)
(bad)
call
jb
mov
stos
nop
pop
and
xor
jmp
outs
call
and
(bad)
clc
xchg
or
repnz
inc
mov
leave
sbb
xchg
or
jl
add
imul
cmps
adc
pop
sar
jp
(bad)
(bad)
inc
in
mov
adc
cwde
int
lds
adc
pop
rcl
mov
mov
(bad)
(bad)
(bad)
inc
cmp
dec
sbb
dec
jns
or
shr
ins
pop
call
lds
(bad)
js
mov
xchg
pop
and
(bad)
jmp
outs
jge
fwait
out
cmp
mov
add
sub
pop
fidivr
jp
(bad)
(bad)
jg
adc
jne
es
addr16
arpl
std
jecxz
cmp
xor
mov
xor
inc
nop
fild
fcom
sbb
push
(bad)
(bad)
(bad)
(bad)
mov
mov
cmc
loope
dec
mov
in
out
dec
addr16
mov
test
cmp
(bad)
(bad)
push
ret
int3
xchg
sub
aas
cmp
div
js
fild
rcr
ds
movs
(bad)
dec
mov
out
pop
push
das
add
adc
hlt
push
jmp
dec
inc
pop
loope
mov
cs
mov
jp
mov
ja
dec
ror
shl
(bad)
(bad)
jmp
clc
test
addr16
lods
mov
enter
popf
xchg
add
dec
pop
cmp
fst
call
(bad)
inc
and
or
stos
xlat
jl
loope
pushf
movs
fwait
jne
mov
pop
cld
(bad)
(bad)
jg
xchg
aam
icebp
add
jb
sbb
ss
stos
js
sub
jmp
adc
(bad)
or
(bad)
(bad)
mov
sub
inc
sahf
mov
ret
jl
bound
(bad)
(bad)
(bad)
jg
fld
adc
stos
lea
xchg
xchg
test
shl
rol
(bad)
(bad)
mov
pushf
push
icebp
lods
fadd
sub
cmp
jae
ins
jmp
fwait
push
clc
repnz
mov
and
xlat
test
fst
iret
add
xchg
cmp
push
call
push
pop
das
cmps
dec
mov
dec
in
bound
inc
data16
adc
push
(bad)
jecxz
repnz
test
shl
jbe
jmp
std
(bad)
jmp
hlt
xor
icebp
mov
adc
dec
jae
(bad)
pusha
inc
adc
(bad)
jg
cmp
movs
aaa
out
leave
fimul
inc
dec
stc
(bad)
ins
add
cmp
loop
in
xchg
push
les
bound
jmp
popa
push
int3
adc
ror
ss
sahf
sub
hlt
(bad)
(bad)
(bad)
dec
aas
dec
repz
cmps
movs
ja
and
int3
das
jb
xor
mov
xor
jmp
or
sahf
mov
xor
dec
cs
adc
mov
(bad)
jo
(bad)
(bad)
(bad)
call
xchg
adc
std
sbb
inc
clc
fnstsw
out
xchg
imul
icebp
mov
scas
stos
mov
dec
or
add
stos
ret
fnstenv
sub
xlat
loope
das
(bad)
(bad)
(bad)
jmp
aad
arpl
fstp
test
inc
pop
sub
into
fadd
sub
fld
lea
daa
lods
shl
mov
mov
add
sub
push
mov
jmp
inc
fmul
popf
(bad)
fadd
mov
xor
inc
mov
push
add
adc
mov
vmwrite
std
ss
jbe
call
push
loope
bound
es
sbb
add
shl
sar
jae
fstp
cs
(bad)
(bad)
(bad)
jmp
loop
arpl
mov
aad
popa
xchg
and
or
sub
pop
pusha
push
(bad)
(bad)
(bad)
(bad)
mov
jae
icebp
pusha
(bad)
retf
fild
aaa
xchg
data16
dec
sbb
lea
jne
je
ss
lds
enter
and
push
(bad)
(bad)
(bad)
mov
aad
sub
fstp
out
mov
cmp
test
std
and
jo
loopne
iret
retf
movs
lea
fmul
outs
or
je
push
mov
(bad)
(bad)
cld
push
(bad)
je
aam
mov
push
int3
pop
mov
jmp
les
fstp
xchg
mov
dec
icebp
mov
jno
arpl
sub
xchg
mov
jg
(bad)
mov
ja
cmp
sub
stc
ret
xchg
out
push
jg
(bad)
cmp
pop
lods
pushf
mov
pop
cli
in
lods
rcr
int3
scas
test
pop
popf
shr
(bad)
(bad)
(bad)
(bad)
call
outs
xchg
imul
cmp
xor
cmp
mov
test
push
es
(bad)
(bad)
jl
fimul
cmp
mov
sub
jle
in
cdq
ret
rol
jae
xor
int
call
or
sbb
add
push
fnstenv
cmp
sub
ds
or
stc
int
or
or
imul
cmp
setg
push
ldmxcsr
mov
adc
fwait
int
ss
adc
adc
cld
repz
push
pop
pop
jo
mov
or
mov
jg
sbb
sbb
add
sbb
add
sbb
sbb
pop
fs
push
lods
mov
add
test
mov
loope
add
cmp
imul
add
jecxz
rcl
ss
mov
dec
push
pop
adc
pusha
repnz
pop
jnp
cmp
lods
neg
js
pop
jnp
pop
mov
pop
addr16
cmp
sti
fidivr
data16
outs
jp
fwait
addr16
jo
add
jge
mov
jbe
jne
push
ja
cmp
mov
fs
mov
and
arpl
cmp
adc
pusha
imul
xchg
push
jnp
add
pop
lds
pop
add
dec
add
mov
popf
adc
pop
imul
sub
add
push
and
in
jbe
ret
sub
adc
in
xlat
ja
push
jmp
bswap
repz
add
add
leave
repz
or
or
xchg
fisttp
aaa
or
leave
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
ins
push
and
in
sbb
jb
pop
and
out
xchg
fild
xchg
fmul
sahf
sub
sbb
pushf
mov
into
aas
xlat
pop
arpl
retf
sbb
(bad)
xlat
sub
and
outs
jb
fidiv
(bad)
push
jb
arpl
jae
shr
push
add
sahf
dec
dec
xchg
lea
mov
nop
xchg
repnz
dec
cs
xchg
mov
seta
add
jb
add
jno
(bad)
adc
fild
cmp
pop
push
mov
pop
add
in
fldcw
dec
jg
or
lea
scas
cld
pop
mov
fwait
mov
jb
fdivp
pop
dec
mov
or
add
jle
popa
outs
paddusw
mov
push
or
push
sub
push
(bad)
fidiv
das
push
inc
adc
sub
call
jbe
pop
push
outs
push
lods
add
push
gs
push
push
out
mov
cs
je
fs
cwde
cmovbe
in
mov
adc
pop
jb
movd
outs
adc
daa
dec
ss
gs
xchg
inc
jo
dec
sub
out
and
ins
push
jne
push
gs
mov
dec
outs
jbe
arpl
pop
mov
jb
add
into
ja
repz
imul
in
jnp
mov
test
gs
ret
cmps
outs
adc
(bad)
cmps
cmp
dec
dec
das
fs
jns
fs
iret
fdiv
sub
dec
and
sub
dec
cmp
cmp
clc
cli
xor
(bad)
jne
fmulp
add
repnz
jnp
or
xchg
pop
push
ja
rcr
fs
jg
mov
ficomp
(bad)
jae
lahf
inc
ins
imul
iret
sub
pop
fisttp
dec
std
push
pop
inc
(bad)
neg
jb
jo
mov
test
push
dec
mov
ins
aas
outs
loopne
xlat
push
cmps
gs
and
cmp
jbe
jbe
inc
imul
arpl
jb
ja
or
out
imul
out
out
pop
div
jecxz
or
inc
jo
scas
pop
outs
pop
fadd
inc
daa
cld
dec
mov
push
dec
add
add
outs
in
or
add
out
jbe
mov
add
and
dec
add
std
or
jnp
ins
or
fist
out
sahf
out
sub
xor
cmp
out
sahf
inc
inc
dec
push
pop
push
pop
je
mov
xchg
cwde
pushf
mov
repz
mov
mov
repz
aam
push
in
repz
out
push
add
adc
fwait
lock
and
xor
shl
iret
jnp
push
push
pop
fs
je
repz
jl
mov
cmp
in
push
or
jns
out
sbb
sub
cmp
jns
out
dec
push
pop
pusha
pop
push
js
cwde
movs
push
mov
sahf
out
mov
add
cmp
repz
sub
dec
pop
ins
add
lods
popf
add
and
in
push
xchg
adc
add
sar
add
lds
sub
and
fdiv
pop
or
adc
fucomi
adc
sub
adc
add
test
mov
pop
rcr
sub
out
and
add
stos
dec
or
pop
add
adc
add
add
inc
xchg
(bad)
nop
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
(bad)
(bad)
push
mov
mov
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
(bad)
call
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
shl
cmc
div
clc
stc
cli
sti
cld
test
(bad)
pop
or
or
inc
inc
or
jp
sbb
(bad)
(bad)
call
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
ja
(bad)
cmp
bound
addr16
imul
jo
push
lock
jae
jne
ja
jns
pop
pop
dec
pusha
stos
sbb
jle
(bad)
call
adc
inc
inc
inc
inc
inc
inc
inc
pop
in
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
aas
jle
xor
fwait
test
pop
rol
pop
inc
mov
icebp
cmp
in
mov
pusha
sub
out
push
mov
inc
jl
push
bound
cmp
(bad)
push
js
sbb
adc
sub
xor
xor
ret
or
imul
or
mov
mov
adc
test
dec
lods
mov
sub
retf
fld
inc
ins
(bad)
outs
jmp
out
lea
aas
dec
ret
jl
mov
push
and
cmps
xor
mov
xchg
das
pop
xor
xor
lea
jg
mov
pop
and
repz
pop
pop
push
js
dec
outs
rcr
lea
mov
je
mov
inc
mov
ja
jbe
push
scas
pop
jno
dec
push
pop
popw
push
inc
mov
dec
js
scas
scas
lds
xchg
imul
cmp
addr16
mov
inc
jecxz
sbb
outs
cmps
bound
sub
mov
(bad)
jae
mov
inc
fistp
sub
adc
(bad)
les
jo
xchg
pop
inc
cmps
lock
jb
out
push
popa
arpl
mov
fimul
das
push
jns
lods
push
imul
fistp
arpl
gs
jae
imul
or
fisttp
dec
inc
dec
popa
jo
mov
js
fld
ins
dec
popa
push
outs
inc
xchg
les
iret
push
outs
add
xor
ins
daa
push
sub
push
push
imul
or
jo
xor
leave
sbb
add
push
mov
jg
sbb
xchg
and
pop
add
cmp
mov
sti
pop
push
dec
jl
test
xchg
and
mov
xchg
or
jb
in
enter
or
cmova
les
dec
adc
adc
xchg
and
aam
fcom
jb
in
sbb
sbb
sbb
sbb
sbb
sbb
in
and
sub
xor
cmp
and
sbb
and
and
xchg
es
ins
sub
mov
jl
test
sub
xchg
and
mov
jb
cmp
enter
aam
fadd
inc
jl
jb
in
inc
hlt
inc
cld
dec
sbb
inc
mov
adc
sbb
cmp
enter
push
xor
cmp
fbstp
(bad)
jg
cmp
add
dec
in
xchg
mov
addps
fs
add
jl
mov
xchg
or
inc
lods
or
cmp
ror
fmul
call
and
push
add
or
sbb
jb
enter
push
cmp
dec
sbb
inc
mov
sbb
ins
sbb
jb
enter
push
nop
pop
pushf
and
sbb
test
mov
shl
and
enter
and
mov
jb
sub
or
adc
and
xchg
and
sub
sbb
jb
pop
xor
xor
xchg
and
mov
cwde
cmp
mov
mov
inc
das
inc
mov
inc
in
inc
clc
inc
and
jb
enter
inc
sub
dec
inc
mov
inc
dec
dec
dec
pop
dec
fs
in
xchg
and
jl
mov
sbb
jb
push
mov
gs
int3
imul
in
or
add
pop
sbb
enter
sub
xor
inc
adc
jb
dec
adc
fs
jo
xchg
and
jl
xchg
sub
cmp
in
mov
imul
or
inc
mov
add
adc
sbb
in
xchg
or
or
sbb
inc
pop
push
cmp
add
je
add
enter
or
push
cmp
sbb
add
xchg
and
pop
lock
or
cmp
and
or
sbb
cmp
add
xchg
and
dec
or
or
jns
enter
cmp
and
sbb
or
repnz
retf
add
in
or
or
cmp
mov
and
sub
cmp
in
retf
and
push
or
(bad)
sbb
jns
add
or
xchg
and
pushf
or
mov
or
or
add
in
retf
das
das
(bad)
lock
or
stc
repnz
or
dec
cmp
dec
and
pop
mov
add
pop
sbb
loopne
push
inc
(bad)
movs
and
fwait
or
pop
sbb
mov
and
sbb
mov
mov
in
xchg
iret
enter
loopne
inc
mov
clc
les
add
adc
enter
int3
sub
addr16
sub
inc
fwait
pop
imul
enter
arpl
xchg
and
js
fs
into
cmps
ret
out
pop
mov
cmp
pop
pop
add
push
pop
mov
xchg
hlt
dec
daa
add
or
mov
ins
xchg
pop
sub
or
mov
lods
pop
leave
enter
fs
jo
jl
sbb
jb
mov
dec
in
xchg
adc
mov
or
jb
rcl
paddusb
call
and
sub
mov
rcr
cmp
enter
lods
cmp
dec
xchg
and
sbb
loopne
mov
in
xchg
loope
fist
fld
pop
mov
sbb
jb
xchg
sub
ins
je
int3
push
test
cs
mov
in
movs
or
xchg
paddb
sub
scas
adc
and
sub
addr16
cmp
div
pop
inc
jg
or
inc
into
les
mov
pop
pop
je
sbb
xchg
mov
push
mov
and
loop
dec
xchg
sub
mov
into
out
xchg
pop
cwde
popa
ja
pop
movs
push
mov
mov
bsf
mov
push
lods
sub
cwde
adc
xor
es
xchg
cmp
adc
das
cmp
(bad)
fcom
inc
clc
mov
or
and
pushf
pop
adc
ins
and
enter
sub
das
cmp
cmp
ins
push
xor
pop
inc
into
cmps
les
cmp
test
xor
xchg
mov
je
jo
addr16
cwde
push
ja
pop
movs
xchg
cmpxchg
mov
mov
enter
inc
mov
ss
xlat
adc
into
mov
loopne
in
adc
cwde
(bad)
xchg
and
add
adc
and
and
cmps
aaa
push
pop
xor
cld
pop
inc
pushf
popf
dec
mov
cmp
dec
test
pop
cmps
fwait
sbb
fs
pushf
xchg
sbb
into
mov
jl
push
and
enter
movs
ret
mov
les
aam
jg
(bad)
adc
hlt
pop
cmova
jecxz
add
sbb
lea
dec
cdq
xchg
das
pusha
call
fdiv
js
inc
mov
mov
xchg
sbb
sbb
cmp
and
lods
pop
(bad)
outs
inc
sbb
jb
pop
in
xor
enter
fsub
push
call
in
xor
sahf
push
sub
(bad)
daa
pop
and
wrmsr
outs
cmp
mov
jb
loop
nop
push
xchg
and
stos
mov
jo
dec
cmp
adc
ficom
ins
outs
xor
lock
js
test
cmp
push
enter
inc
sbb
sti
(bad)
aas
add
jne
fstp
movups
das
pop
(bad)
jmp
ja
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
scas
add
mov
add
xor
lock
hlt
test
add
into
xchg
loope
(bad)
fisttp
xor
or
xor
rcl
(bad)
(bad)
mov
aas
neg
push
inc
xor
jp
in
pusha
push
cs
and
(bad)
fsub
jno
or
ss
or
movs
loop
neg
not
add
sub
in
push
push
lock
pop
out
add
rol
fimul
leave
(bad)
aas
adc
in
pop
or
or
add
or
add
or
popf
xchg
add
inc
mov
out
arpl
inc
cwde
ror
xor
(bad)
(bad)
jmp
outs
repnz
jae
pop
popa
arpl
adc
mov
jno
je
inc
add
dec
push
push
and
mov
in
test
jl
sbb
push
sub
jmp
push
mov
add
imul
adc
sbb
sti
xchg
or
cld
cmp
mov
ficomp
sahf
rcr
xor
xchg
and
push
sub
ds
cld
jmp
idiv
mov
icebp
bound
or
pop
push
pop
cmps
aas
fist
jmp
(bad)
fistp
nop
ds
aas
xchg
ror
push
shl
inc
ret
sub
pop
(bad)
(bad)
(bad)
stc
inc
fprem
fstp
(bad)
jo
sub
sub
in
pop
pushf
out
call
push
push
push
aas
loopne
gs
sbb
mov
loop
ds
idiv
and
mov
rep
(bad)
int
les
sahf
sub
jae
mov
lahf
jge
and
ret
pop
(bad)
jg
dec
ja
mov
jp
mov
jle
dec
or
mov
int3
in
(bad)
jle
mov
mov
mov
jo
ss
push
mov
mov
aas
(bad)
dec
jbe
pop
push
sub
jmp
sub
jmp
cld
(bad)
sti
jmp
inc
mov
repz
and
lea
mov
xchg
fbld
cmp
fwait
ins
sar
cli
loope
lea
or
iret
fistp
retf
inc
mov
push
shl
mov
sbb
add
push
inc
shl
or
xor
ret
arpl
or
in
aaa
fcom
paddb
aas
fs
jns
pop
push
mov
mov
je
les
xor
mov
cli
and
push
push
push
mul
push
adc
lds
sub
fbstp
neg
sbb
push
mov
jg
adc
sub
push
mov
cdq
xchg
cld
sub
in
fiadd
sub
out
pop
and
aas
int
inc
bound
xchg
mov
lds
xchg
outs
clc
xlat
dec
pop
and
aas
enter
xchg
outs
(bad)
out
(bad)
and
lock
or
int3
fbld
ss
out
fbstp
repz
pop
leave
aas
in
(bad)
jp
and
rol
jmp
out
pop
std
(bad)
xor
inc
add
pop
sub
push
(bad)
imul
inc
mov
retf
aas
jae
fs
imul
out
push
jb
js
and
xor
(bad)
(bad)
call
mov
jl
push
int
retf
push
add
xchg
jb
out
(bad)
jg
xchg
inc
mov
nop
adc
adc
aas
or
sbb
std
stos
pop
jmp
clc
fwait
lahf
jae
xlat
mov
pusha
jle
cmp
xchg
cs
xor
fsubr
into
aas
xchg
adc
sti
sti
es
push
pop
jmp
sbb
jge
and
stc
add
pop
or
and
pop
push
call
jl
fwait
dec
(bad)
adc
ds
push
xor
fidivr
jg
int
xor
xor
xor
int
cld
jg
fwait
inc
xor
das
inc
sar
mov
std
jne
xor
imul
pop
sub
pop
lods
(bad)
(bad)
(bad)
out
jp
jle
jmp
iret
cmp
lock
fisttp
or
cs
daa
mul
push
dec
inc
dec
push
sar
stc
pop
movs
sub
jle
adc
fwait
outs
(bad)
adc
or
sbb
jno
jns
sahf
lods
imul
mov
aad
adc
aaa
mov
xor
fdiv
rol
pmulhuw
stc
sqrtps
call
or
and
pop
mov
and
sbb
cmp
pmulhuw
test
call
and
in
pusha
scas
cwde
pop
pmulhuw
cmp
jo
in
cmp
shl
jo
aad
cmp
movups
dec
enter
in
pusha
cmps
inc
dec
enter
clc
sub
enter
cmc
rol
adc
clc
dec
js
adc
inc
sahf
jo
shl
mov
in
pushf
nop
jle
dec
mov
daa
mov
cmp
daa
in
xchg
pop
imul
jmp
jns
ret
adc
adc
jo
shl
repnz
xor
pushf
nop
outs
and
shl
test
pop
cmp
daa
in
sbb
(bad)
int
xchg
and
in
push
pop
loopne
daa
in
cmp
jecxz
lock
jo
in
cmp
add
xor
aaa
bound
sldt
cmp
pushf
popa
xlat
dec
popf
popa
adc
xor
fisttp
das
in
in
arpl
sar
mov
data16
outs
shl
bound
and
in
outs
fs
lds
xor
push
dec
inc
outs
jb
jns
mov
xor
bound
outs
and
(bad)
data16
jbe
adc
es
movsx
jb
sbb
sub
jle
adc
and
jl
push
cmp
mov
comiss
das
dec
push
jb
enter
lfs
mov
mov
les
fcom
in
xchg
and
sbb
push
hlt
pop
mov
jb
and
and
and
and
adc
sbb
sbb
packsswb
pop
inc
(bad)
(bad)
(bad)
jg
pop
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
(bad)
jmp
aad
mov
rcl
mov
sub
mov
sbb
repnz
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
(bad)
inc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
(bad)
(bad)
call
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
(bad)
(bad)
(bad)
(bad)
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
(bad)
(bad)
dec
mov
(bad)
and
or
adc
stos
sbb
data16
inc
fdiv
(bad)
(bad)
inc
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
or
xor
add
or
sar
loope
or
ins
or
arpl
hlt
push
imul
ins
sbb
xor
(bad)
(bad)
jmp
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
cld
fistp
ficom
gs
aam
pop
popa
mov
into
(bad)
mov
mov
aam
movs
fisttp
xchg
fadd
(bad)
shl
call
shr
imul
mov
sar
add
in
add
pop
dec
or
(bad)
dec
push
stos
inc
add
adc
or
and
test
or
mov
(bad)
(bad)
(bad)
jmp
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
jmp
mov
call
(bad)
(bad)
(bad)
push
jmp
fild
push
fdiv
or
test
fs
ds
or
(bad)
jmp
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
(bad)
(bad)
out
cli
push
imul
xor
sbb
push
imul
aam
loopne
ror
(bad)
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
inc
fdivr
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
idiv
(bad)
(bad)
dec
ss
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
(bad)
call
outs
and
xchg
ja
int3
add
mov
das
es
lds
or
(bad)
call
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
outs
cli
(bad)
jmp
ins
add
ss
jmp
addr16
jb
push
mov
(bad)
(bad)
(bad)
call
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
jmp
add
retf
pop
or
adc
sahf
(bad)
jg
jmp
imul
push
js
or
push
add
(bad)
(bad)
(bad)
push
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
(bad)
(bad)
(bad)
(bad)
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
(bad)
cmp
mov
xchg
push
xlat
int
push
ficom
(bad)
(bad)
jmp
and
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
mov
out
add
and
ret
push
sub
add
xchg
(bad)
(bad)
call
fxch
dec
mov
out
cli
retf
fxtract
jecxz
dec
mov
dec
jle
mov
sub
(bad)
(bad)
call
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
mov
add
(bad)
sub
(bad)
dec
ss
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
jg
(bad)
push
mov
out
repz
gs
fisubr
inc
inc
sub
imul
(bad)
jmp
std
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
xchg
enter
(bad)
(bad)
jmp
ret
xchg
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
std
(bad)
(bad)
(bad)
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
(bad)
(bad)
push
mov
lea
fnstcw
mov
dec
hlt
mov
or
(bad)
dec
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
push
pop
mov
lock
inc
aas
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
(bad)
(bad)
dec
les
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
jg
(bad)
cmp
inc
and
inc
out
and
cmp
dec
mov
out
lods
loop
mov
and
cmps
xor
mov
lods
out
sar
mov
adc
(bad)
(bad)
call
stos
and
leave
jmp
sti
push
jns
das
mov
and
je
or
(bad)
(bad)
call
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
shl
cmp
mov
js
mov
test
cwde
cmp
jmp
xchg
and
cli
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fcos
(bad)
(bad)
jmp
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
(bad)
(bad)
(bad)
jmp
sbb
pop
push
(bad)
ins
pop
push
dec
sub
or
sub
cld
daa
fstp
ds
push
xor
(bad)
jmp
pop
jb
xchg
push
(bad)
push
hlt
out
les
or
imul
mov
sbb
inc
xor
push
retf
(bad)
jmp
pop
clc
sub
loope
fisub
lds
push
call
(bad)
(bad)
(bad)
dec
repz
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
iret
mov
pop
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
lods
(bad)
loope
int3
mov
jg
mov
dec
adc
mov
jo
popf
mov
(bad)
(bad)
inc
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
push
cmp
bound
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fdivr
(bad)
(bad)
call
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
(bad)
(bad)
(bad)
fldenv
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
fcomip
(bad)
mov
gs
adc
jns
movs
dec
mov
(bad)
call
xchg
movs
daa
sub
repnz
in
and
out
mov
(bad)
(bad)
(bad)
cld
shl
es
xchg
aas
mov
adc
out
sar
(bad)
(bad)
call
imul
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
(bad)
cmp
lds
push
add
test
pop
mov
fbld
fbstp
mov
test
dec
add
lock
adc
pop
out
push
or
jg
(bad)
(bad)
sbb
sub
mov
inc
leave
in
(bad)
(bad)
call
sub
das
sbb
fild
sbb
repnz
(bad)
(bad)
(bad)
call
cmps
es
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
(bad)
(bad)
(bad)
(bad)
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outs
jge
(bad)
(bad)
(bad)
push
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
(bad)
dec
daa
leave
pop
sub
and
mov
and
repz
sub
sub
cld
sub
ds
sbb
sub
call
clc
jmp
call
pop
cmp
xor
jb
and
push
jbe
(bad)
(bad)
push
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
out
cli
dec
mov
(bad)
jnp
cs
fdivrp
cmp
nop
jecxz
fbstp
pop
in
ja
add
push
or
(bad)
(bad)
(bad)
(bad)
mov
stos
sub
shr
aam
cmps
gs
fs
imul
dec
inc
push
std
pop
mov
outs
jns
dec
cld
arpl
dec
retf
or
(bad)
(bad)
dec
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
movq
out
inc
sbb
push
add
push
ds
jne
or
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
(bad)
push
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
(bad)
(bad)
(bad)
push
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
paddd
(bad)
jmp
in
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
jg
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
(bad)
jmp
add
jg
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
dec
pusha
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
(bad)
(bad)
(bad)
dec
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
loop
call
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
das
(bad)
(bad)
fild
sti
cmp
ret
mov
call
dec
retf
lahf
lds
pop
pop
(bad)
icebp
adc
pop
inc
int3
inc
ins
xchg
sbb
ror
jmp
into
inc
fcom
cs
sub
pushf
cmps
xchg
stos
push
fs
(bad)
call
lds
mov
sahf
xchg
adc
pushf
mov
outs
(bad)
call
loopne
ja
dec
mov
repz
dec
mov
sbb
icebp
dec
(bad)
in
popf
or
call
mov
mov
mov
(bad)
(bad)
call
adc
fadd
arpl
pop
xchg
shl
test
into
add
(bad)
(bad)
jmp
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
(bad)
push
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
(bad)
(bad)
(bad)
inc
mov
xor
mov
mov
cmovns
push
dec
adc
clc
(bad)
call
xor
mov
ficomp
mov
movs
add
add
or
push
shr
(bad)
xor
fdivp
pop
imul
(bad)
(bad)
(bad)
jg
mov
jge
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
(bad)
(bad)
(bad)
call
push
cli
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
(bad)
(bad)
jmp
sub
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
(bad)
push
mov
mov
cmp
rol
xchg
or
in
xchg
loop
(bad)
mov
in
rol
cmp
pop
dec
(bad)
iret
aas
sub
add
adc
jmp
in
inc
push
xchg
or
lahf
xchg
dec
sub
and
loop
outs
dec
jg
or
(bad)
jge
aad
(bad)
jg
sbb
mov
rcr
(bad)
lds
xchg
lahf
mov
inc
std
mov
jmp
hlt
adc
call
fwait
pop
aas
test
mov
sbb
mov
(bad)
(bad)
(bad)
push
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
out
clc
inc
shl
cmp
das
retf
jnp
dec
ja
prefetchw
or
jae
mov
jmp
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
sbb
cmp
sub
pop
outs
xchg
add
cmp
inc
and
dec
pop
xchg
sub
mov
mov
(bad)
(bad)
(bad)
fild
icebp
cmps
in
fist
inc
addr16
fwait
push
add
in
mov
sbb
adc
push
out
arpl
jmp
mov
jns
aaa
pop
in
push
loope
inc
call
cwde
call
(bad)
mov
out
aaa
push
clc
inc
add
and
push
cdq
scas
xlat
loopne
retf
mov
cmp
in
mov
inc
aad
in
jmp
bound
inc
xchg
out
(bad)
(bad)
(bad)
jmp
mov
sahf
in
sub
push
in
cmp
pop
cmp
outs
xor
or
(bad)
in
inc
xchg
movs
loope
mov
sub
dec
dec
cmc
scas
repz
xor
(bad)
dec
sbb
leave
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
out
jp
dec
xchg
sbb
repnz
and
sbb
pusha
jle
cmc
mov
(bad)
out
push
inc
cli
push
or
aaa
jmp
jb
mov
(bad)
jmp
xor
(bad)
and
push
mov
rol
outs
mov
push
or
adc
call
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
cmp
(bad)
push
(bad)
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
(bad)
(bad)
inc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
call
call
mov
lock
imul
ss
test
(bad)
call
cdq
mov
call
mov
loope
into
cs
(bad)
(bad)
(bad)
jmp
aas
add
add
pop
std
pop
jmp
icebp
and
sub
aam
call
add
iret
test
jg
pop
es
outs
mov
(bad)
(bad)
dec
retf
(bad)
sbb
loope
push
adc
cmp
adc
jg
(bad)
jmp
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
(bad)
(bad)
inc
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
(bad)
(bad)
jmp
neg
jmp
pop
test
or
xchg
popa
mov
(bad)
(bad)
jg
gs
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
(bad)
(bad)
(bad)
push
push
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
pop
nop
mov
adc
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
test
sub
push
imul
mov
(bad)
jmp
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
mov
(bad)
(bad)
call
(bad)
lods
mov
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
inc
cld
dec
mov
enter
mov
mov
mov
mov
xchg
ins
jl
push
movs
loopne
(bad)
(bad)
jg
sahf
pop
add
fnstenv
das
outs
jl
pop
push
sbb
cmp
(bad)
fadd
add
jno
cwde
shl
mov
jno
test
lahf
mov
das
test
aam
js
leave
les
and
or
(bad)
(bad)
(bad)
call
jg
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
clc
(bad)
(bad)
dec
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
ret
cmps
jl
fstp
mov
ror
sti
aam
gs
mov
test
into
mov
sbb
xor
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
(bad)
(bad)
(bad)
inc
jmp
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
(bad)
call
jno
daa
add
mov
or
xchg
mov
and
mov
aam
(bad)
(bad)
dec
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
fbld
add
es
or
xchg
fs
(bad)
jg
cmp
pop
test
push
iret
or
add
mov
(bad)
(bad)
(bad)
dec
xchg
inc
xchg
mov
push
mul
pop
and
sbb
outs
imul
(bad)
(bad)
(bad)
(bad)
call
sbb
shr
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
add
aaa
std
(bad)
mov
push
fadd
les
repnz
sar
(bad)
jg
push
addr16
mov
fisttp
ss
fmul
sbb
dec
test
stos
add
jg
pusha
out
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
mov
lds
cmp
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
(bad)
inc
mov
arpl
es
mov
or
ss
jb
addr16
(bad)
call
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
call
repnz
mov
fcmovnu
and
aam
inc
push
fiadd
(bad)
out
clc
dec
idiv
ja
sbb
out
punpckhdq
push
cmp
adc
aam
(bad)
dec
pop
(bad)
gs
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
pop
push
(bad)
push
cmp
mov
cmps
addr16
shl
test
(bad)
(bad)
(bad)
push
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
iret
jg
mov
(bad)
(bad)
(bad)
(bad)
jmp
retf
mov
xchg
xor
mov
add
push
ficom
and
(bad)
(bad)
dec
les
mov
sub
xchg
mov
mov
mov
cld
add
out
test
sbb
inc
xor
bound
(bad)
(bad)
inc
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
(bad)
(bad)
(bad)
dec
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
jo
(bad)
(bad)
call
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
sbb
icebp
(bad)
fld
ja
pop
jmp
aas
(bad)
pop
push
sahf
xchg
(bad)
(bad)
(bad)
inc
jecxz
mov
and
call
shl
ret
fiadd
gs
(bad)
(bad)
fistp
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
jmp
inc
ss
pop
pop
mov
jo
jno
imul
sub
mul
sbb
(bad)
(bad)
call
xor
lahf
mov
mov
cmp
out
cmp
jns
push
dec
(bad)
(bad)
inc
pop
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
lea
mov
cmp
lds
or
xchg
into
pop
int3
jg
(bad)
or
xor
cli
bound
pop
push
mov
(bad)
(bad)
dec
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
cli
(bad)
(bad)
inc
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
add
or
add
lahf
loop
cmps
int3
and
mov
inc
mov
shr
lahf
adc
xchg
mov
leave
dec
and
rcl
jmp
(bad)
jmp
gs
das
aas
jns
ss
mov
or
je
adc
xor
dec
(bad)
(bad)
(bad)
(bad)
push
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
call
mov
test
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
(bad)
(bad)
(bad)
dec
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
adc
out
(bad)
(bad)
inc
movs
add
test
mov
push
ja
cwde
pop
ins
(bad)
adc
ss
(bad)
jg
pop
daa
mov
fnstsw
xor
mov
push
rcr
hlt
(bad)
dec
out
hlt
push
out
rcl
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
movs
clc
fidiv
loope
lds
lods
(bad)
(bad)
(bad)
jg
repz
test
xchg
sub
in
scas
mov
(bad)
repz
cmp
call
(bad)
inc
mov
std
mov
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
movs
(bad)
(bad)
dec
loope
push
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
(bad)
(bad)
out
fadd
loopne
push
scas
xchg
adc
lea
or
mov
pop
inc
(bad)
(bad)
(bad)
in
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
lds
cwde
and
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
call
dec
push
cli
jle
jnp
sub
sub
xchg
mov
xchg
push
(bad)
(bad)
(bad)
jmp
repz
inc
gs
dec
xchg
outs
jne
mov
call
or
push
(bad)
(bad)
mov
in
jns
(bad)
mov
sbb
mov
daa
repnz
mov
mov
shr
(bad)
out
and
loope
or
mov
jle
shl
adc
retf
adc
cmp
ja
fsub
push
jle
hlt
out
push
or
test
jbe
or
lock
int3
xor
(bad)
mov
aaa
add
pop
lods
test
push
retf
ret
lea
dec
push
test
(bad)
(bad)
dec
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
dec
call
sbb
mov
sbb
lods
sbb
popa
fwait
(bad)
(bad)
(bad)
call
stos
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
(bad)
(bad)
(bad)
call
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
cmp
add
ss
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
pop
pop
cmc
push
shr
xor
add
and
in
mov
cmps
daa
aam
es
pop
leave
and
dec
and
cdq
and
and
adc
sub
pusha
inc
sub
(bad)
(bad)
(bad)
dec
jno
jno
hlt
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
(bad)
(bad)
(bad)
push
cdq
ja
and
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
mov
and
je
js
push
xchg
jp
mov
std
ins
mov
xchg
fbstp
es
jmp
ja
pop
push
repz
(bad)
cmp
xor
arpl
popa
sub
push
cmps
xlat
aam
fs
push
std
inc
mov
dec
xlat
retf
and
mov
dec
(bad)
jmp
and
cld
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
(bad)
(bad)
(bad)
inc
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
(bad)
(bad)
(bad)
push
add
jne
ds
mov
or
ror
adc
push
mov
cmp
pop
(bad)
(bad)
(bad)
jmp
push
fistp
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
push
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
(bad)
push
in
or
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
(bad)
(bad)
dec
std
adc
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
(bad)
(bad)
(bad)
(bad)
inc
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
(bad)
(bad)
(bad)
cli
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
(bad)
(bad)
call
fdiv
dec
in
imul
test
fdiv
shl
add
mov
jo
(bad)
(bad)
jmp
and
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
(bad)
(bad)
push
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
jmp
pop
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
(bad)
mov
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
out
clc
(bad)
mov
sahf
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
(bad)
(bad)
(bad)
mov
jge
mov
pop
mov
mov
sbb
mov
(bad)
(bad)
dec
mov
and
sbb
sbb
out
(bad)
rol
cmps
arpl
call
cmp
loop
mov
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
(bad)
(bad)
(bad)
jmp
cmps
icebp
sbb
movs
jne
jbe
mov
inc
mov
cmp
mov
(bad)
std
stos
mov
les
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
(bad)
(bad)
(bad)
dec
bound
xlat
and
adc
test
xchg
pushf
xor
loopne
mov
cld
pop
fidivr
mov
enter
scas
out
(bad)
dec
jmp
push
aaa
fdivp
xor
xlat
cmp
or
outs
mov
fbld
mov
fucom
fbstp
pop
arpl
push
push
sbb
call
movs
xor
cli
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
adc
add
sahf
sbb
call
inc
mov
and
(bad)
(bad)
jmp
mov
pop
or
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
(bad)
dec
pop
loop
aas
jmp
call
ja
inc
in
fmul
lock
mov
pop
and
sub
sahf
push
dec
jg
outs
idiv
scas
push
xchg
aad
jge
rcr
lahf
ror
and
(bad)
(bad)
call
lds
sub
mov
inc
and
(bad)
xchg
test
call
cmp
xor
nop
mov
mov
iret
push
retf
mov
ret
pusha
test
jo
out
pop
mov
test
mov
cmp
ret
imul
ret
ja
imul
ud0
call
pushf
mov
(bad)
popa
add
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
(bad)
(bad)
dec
mov
inc
sub
mov
cmp
jg
sar
xchg
outs
pop
hlt
(bad)
(bad)
fcomip
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
(bad)
(bad)
(bad)
fbld
xchg
fucomip
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
cmp
(bad)
push
arpl
push
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
(bad)
cli
scas
(bad)
inc
call
mov
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
dec
push
sub
push
loopne
scas
xor
in
jecxz
add
push
in
pop
inc
pop
mov
in
sbb
bound
and
inc
aaa
cld
(bad)
mov
jo
mov
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
cld
idiv
dec
sbb
outs
out
xchg
or
inc
loope
add
sub
scas
cmc
(bad)
(bad)
inc
test
and
mov
mov
sbb
ror
dec
add
push
movs
not
cmp
and
dec
imul
cmc
(bad)
inc
out
ror
ret
push
jp
jmp
jb
fnop
add
arpl
and
stc
popa
or
mov
add
mov
mov
ss
(bad)
(bad)
(bad)
dec
movs
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
(bad)
(bad)
jmp
pusha
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
hlt
(bad)
(bad)
(bad)
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
(bad)
(bad)
call
mov
(bad)
jmp
sbb
push
bound
fwait
push
mov
xchg
xchg
cdq
xor
jmp
(bad)
push
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
add
pop
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
call
add
stos
jle
test
cmp
es
jl
mov
dec
out
(bad)
pop
sbb
mov
repz
in
test
adc
ja
mov
ret
add
push
jmp
pushf
test
cdq
in
or
pushw
cmps
ds
(bad)
(bad)
push
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
std
(bad)
(bad)
call
jmp
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
add
rcl
xor
cmps
push
mov
dec
idiv
mov
out
xor
mov
jns
out
mov
sahf
cmps
jnp
mov
mov
adc
jns
mov
mov
scas
cmps
test
nop
lods
push
lods
jnp
push
sahf
stos
stos
inc
test
repz
retf
adc
adc
jns
data16
jle
jl
sahf
ja
xchg
jp
jns
data16
repz
ja
ja
call
push
je
nop
jae
xchg
out
jb
jo
outs
imul
ins
imul
test
mov
pop
jo
xor
cmps
pop
push
xor
rcl
inc
lock
cmp
call
out
ds
sub
and
and
iret
rep
sahf
push
sbb
fistp
fst
push
jns
push
das
dec
add
jns
out
ins
je
test
cwde
movs
mov
sar
out
in
clc
fadd
repz
repz
inc
dec
push
iret
repz
pop
push
cmp
repz
pushf
test
mov
(bad)
aam
call
int
fisttp
sbb
sahf
out
sahf
inc
push
pusha
ins
js
jns
out
xchg
movs
mov
shl
in
cld
fimul
iret
repz
adc
sub
dec
pop
cmp
repz
jl
pushf
mov
ss
repz
fsubr
fild
adc
jns
out
cmp
fs
out
sahf
mov
jns
rep
loopne
sbb
push
dec
movs
jns
out
pop
pusha
push
pop
jo
jl
xchg
mov
jns
(bad)
rcr
call
hlt
loope
or
sub
repz
cmp
push
repz
lods
mov
int
loopne
loop
or
out
sahf
out
cmp
pusha
sahf
out
sahf
ins
jl
xchg
movs
mov
sahf
out
ror
in
clc
repz
mov
or
xor
repz
dec
pop
pusha
ins
jl
cmp
repz
lods
mov
iret
repz
cld
in
adc
jns
out
xor
pop
sahf
out
sahf
ins
jl
cwde
test
jns
out
ror
in
repz
out
in
sbb
xor
repz
inc
push
pop
push
repz
mov
ss
repz
clc
out
sbb
jns
out
xor
pop
sahf
out
sahf
fs
test
jns
mov
enter
fwait
out
hlt
out
or
iret
repz
and
xor
inc
dec
sahf
out
xor
out
pop
pusha
push
jo
or
pushf
test
mov
sahf
rcr
in
hlt
cld
call
cmp
adc
sub
cmp
repz
push
pop
push
iret
or
repz
aam
lock
jns
out
jmp
cmp
jns
out
push
pusha
jo
sahf
out
sahf
mov
cmp
out
in
jmp
repz
pop
ins
jl
repz
mov
int
cmp
lock
jmp
adc
sahf
out
sub
push
fs
sahf
out
or
sahf
lods
mov
cmp
out
in
cld
in
add
repz
repz
xor
pop
iret
repz
jo
mov
cmp
aam
in
clc
jns
out
in
add
and
inc
out
sahf
out
pusha
jo
nop
sahf
out
sahf
mov
hlt
cmp
rep
out
add
and
cmp
cmp
repz
push
pusha
ins
js
repz
adc
jns
out
add
and
inc
jns
out
push
pusha
ins
js
out
sahf
out
pushf
test
(bad)
iret
out
sahf
rcr
call
cmp
repz
xor
pop
jo
cmp
xrelease
ss
call
sbb
out
sahf
sub
dec
push
fs
sahf
out
jl
cwde
lods
shl
in
clc
repnz
repz
sbb
cmp
push
fs
repz
test
repz
ror
out
cmp
in
cld
repz
sahf
out
sahf
and
xor
dec
pop
jns
out
push
out
sahf
out
pushf
test
rcr
in
cld
hlt
or
repz
and
inc
repz
repz
pop
push
cmp
mov
int
cmp
in
clc
cmc
add
jns
out
and
inc
dec
push
out
sahf
out
push
out
sahf
mov
aam
fwait
out
loopne
clc
test
repz
repz
dec
pop
push
js
xchg
test
rcr
call
jns
out
and
dec
pop
fs
sahf
out
test
sahf
mov
div
jmp
adc
stos
pusha
fiadd
pop
(bad)
push
push
iret
repz
pop
pusha
push
iret
repz
nop
cwde
mov
repz
ror
out
cmp
in
cld
xlat
or
sahf
out
sahf
sbb
sub
cmp
sahf
out
dec
push
pop
fs
jns
out
mov
sahf
mov
ror
fsubr
jns
call
repz
repz
sub
inc
iret
repz
dec
push
pop
pusha
push
cmp
or
out
out
fdivr
push
sti
addr16
push
ror
fsub
out
cmp
call
or
sbb
sub
jns
out
dec
pop
fs
out
sahf
out
mov
jns
test
mov
fwait
out
in
cld
fimul
adc
cmp
repz
sub
cmp
repz
inc
dec
push
pop
pusha
push
jo
or
mov
out
cmp
fsubr
hlt
fild
or
out
sahf
sbb
cmp
lods
out
dec
add
push
sysenter
dec
shl
mov
pop
cmp
xor
ror
sub
sahf
aaa
(bad)
outs
and
inc
sahf
aaa
lods
mov
mov
leave
in
push
mov
lahf
pop
fcom
pop
add
pushf
pushf
pushf
add
pushf
pushf
pushf
or
or
mov
add
nop
add
or
jnp
add
add
xchg
pop
push
(bad)
jae
push
das
add
or
or
pop
ja
in
das
pop
add
and
add
sub
fldl2t
adc
pop
add
adc
add
add
add
add
or
iret
and
or
mov
adc
or
iret
repz
add
or
add
cmp
repz
sbb
push
push
repz
repz
add
or
iret
repz
add
adc
iret
repz
sbb
pop
mul
jns
shl
inc
or
mov
dec
int3
sahf
out
sahf
sub
ins
in
sbb
jns
out
pop
fdivr
jl
jns
out
add
jns
and
jns
out
push
shl
mov
out
sahf
out
or
jns
sub
jns
out
pop
fidivr
mov
out
push
xchg
sahf
out
sahf
cmps
data16
xchg
jns
out
push
(bad)
ss
out
sahf
out
push
mov
sahf
out
sahf
cs
outs
out
push
sahf
jns
out
pop
fidivr
mov
out
add
jns
and
jns
out
push
shl
mov
out
sahf
out
or
jns
sub
jns
out
pop
fnstcw
mov
out
add
out
sahf
and
xchg
jns
out
push
aad
mov
out
sahf
out
or
out
sahf
sub
popf
jns
out
pop
fnstsw
out
std
adc
or
xchg
push
xchg
iret
repz
push
push
rcl
xor
cmp
repz
mov
jae
repz
repz
mov
dec
dec
retf
retf
sub
cmp
repz
stos
imul
cmp
repz
sbb
iret
pop
pop
fcmovnu
cmp
cmp
repz
mov
cmp
repz
pop
pop
xchg
inc
inc
mov
repz
cmps
addr16
cmp
repz
pop
xchg
xchg
iret
repz
push
push
xlat
xlat
aaa
aaa
cmp
repz
mov
ja
repz
repz
repz
dec
dec
iret
iret
das
das
cmp
repz
scas
outs
outs
out
repz
repz
pop
pop
lahf
lahf
iret
repz
pop
pop
(bad)
aas
aas
cmp
repz
mov
ja
repz
push
and
sahf
out
adc
jo
out
sahf
out
sub
pop
sahf
out
sahf
cmp
inc
and
jnp
out
adc
xor
add
add
ret
and
jns
outs
add
mov
add
or
pushf
or
or
inc
jb
or
inc
sldt
adc
adc
adc
adc
pop
enter
inc
leave
inc
jb
sbb
add
outs
test
ret
mov
xor
or
adc
push
pop
sbb
mov
cs
aaa
sbb
sbb
adc
push
or
fsub
or
or
jmp
push
sar
enter
sbb
jns
dec
and
pusha
js
shl
add
add
(bad)
(bad)
outs
mov
iret
or
sbb
in
jbe
lods
sub
jo
mov
pop
jo
push
loopne
mov
dec
sub
test
mov
xchg
push
mov
popa
es
mov
(bad)
arpl
fs
leave
leave
ins
sar
push
in
div
jo
bound
jae
imul
cmp
bound
xor
xor
pop
dec
cs
dec
shl
xor
cs
enter
js
add
jb
add
add
xchg
sbb
ja
ja
cmp
ja
das
xor
daa
daa
pop
fcom
xor
gs
daa
daa
daa
gs
or
xchg
pop
jb
fs
fs
das
in
in
jb
jb
mov
jb
add
push
or
add
pop
push
mov
pop
sysret
pushf
int3
es
push
addr16
leave
in
popf
arpl
rdtsc
xor
leave
leave
leave
xor
leave
aaa
inc
arpl
pop
xor
xor
jns
leave
and
cmp
cmp
fs
cmp
fs
cmp
fs
fs
xor
xor
cmp
cmp
xor
cmp
pop
je
rdtsc
xchg
xchg
xchg
xchg
xor
xor
mov
je
ss
add
xchg
pop
jb
xor
xor
jb
and
fsub
xor
leave
and
xor
pop
jb
xor
and
add
add
fs
jae
push
jbe
leave
add
jo
jae
enter
jae
cmp
jnp
loop
daa
jae
pop
jb
outs
mov
pop
jmp
outs
xchg
jg
ja
sub
ins
imul
mov
push
retf
mov
mov
out
in
ja
jo
je
push
lock
xchg
arpl
arpl
jnp
ja
ja
ja
gs
dec
outs
ins
lods
adc
dec
arpl
fs
mov
xchg
push
imul
mov
ins
outs
pop
outs
sbb
bound
cmp
outs
jp
jb
bound
push
popa
outs
jae
jbe
pop
jae
aaa
jo
jb
inc
ins
mov
in
bound
addr16
jo
mov
pop
jae
add
pop
jb
and
pop
sub
addr16
cmp
outs
xchg
imul
stc
jo
jne
data16
xor
mov
push
daa
jae
sub
scas
xor
daa
jo
imul
imul
inc
(bad)
jae
push
mov
loop
in
dec
push
fs
jae
push
xor
pop
daa
(bad)
jecxz
mov
shl
imul
mov
les
ja
mov
aam
aas
out
inc
pop
js
pop
inc
movsx
outs
mul
jmp
fdiv
fs
jae
sbb
mov
mov
pop
(bad)
mov
xor
xor
(bad)
bound
add
fwait
pop
jo
fbstp
mov
pop
je
fidivr
sbb
(bad)
js
or
jmp
mov
jne
inc
pop
sbb
push
addr16
ins
arpl
pop
ror
or
sahf
xor
xchg
sub
jo
ja
lds
mov
xor
xor
leave
mov
imul
jo
mov
mov
sbb
imul
enter
and
loopne
fcom
xlat
push
and
sahf
mov
lods
xor
pop
sbb
(bad)
pop
dec
ret
fisttp
rcl
nop
or
add
mov
add
lods
(bad)
push
in
jp
sbb
jns
dec
gs
fcom
lods
sbb
push
ret
push
outs
ja
mov
loope
je
pop
pop
ins
pop
pop
ins
arpl
xor
push
imul
lods
push
mov
daa
outs
loope
sahf
arpl
popa
xchg
int
pop
out
pop
ja
stos
enter
pop
jno
scas
(bad)
in
dec
outs
pop
xor
cmp
dec
pop
sbb
aas
jae
pop
jb
mov
jo
push
cwde
mov
cmps
je
not
mov
fidiv
pop
jnp
retf
cmp
aas
pop
xor
sbb
xchg
aaa
mov
sbb
aas
mov
js
fdivr
xor
ja
sti
pop
ret
cmp
minps
dec
imul
xchg
retf
daa
arpl
repz
ja
jnp
enter
xor
outs
outs
jbe
mov
call
popa
jae
mov
xor
fs
mov
push
pop
bound
xchg
xchg
das
jae
pop
jo
mov
sbb
sbb
sahf
mov
call
mov
xor
pop
mov
pop
repz
ins
addr16
aaa
es
(bad)
ret
bound
mov
and
mov
arpl
outs
pop
ins
pop
pop
sub
leave
mov
arpl
adc
ja
cwde
pop
jb
jno
xor
pop
push
pop
jle
sbb
test
xchg
daa
out
in
mov
pop
jae
jae
or
(bad)
outs
fstp
jae
jae
cmp
mov
outs
add
fisttp
xchg
pop
jae
mov
ds
pop
jno
pop
jne
fcomp
push
xlat
push
inc
ins
and
pop
(bad)
mov
pop
(bad)
das
xlat
imul
bound
mov
imul
mov
jae
jno
and
xor
pop
jb
xor
pop
ja
sbb
rcl
ficom
js
loope
cmp
jne
jbe
add
bound
ficom
jae
cmc
les
dec
mov
mov
jnp
push
das
jecxz
jb
mov
mov
jae
dec
dec
scas
sbb
ja
or
xchg
fs
imul
jbe
jae
push
fs
mov
or
cmp
leave
ja
and
mov
and
ja
bound
mov
and
outs
mul
bound
mov
xchg
inc
jno
repnz
lods
pop
aas
fs
add
push
xor
ja
gs
inc
sub
xchg
push
pop
add
ins
sub
mov
js
pop
aad
mov
jg
aas
adc
pop
pop
pop
daa
jne
jne
pop
mov
pop
ins
jne
ins
pop
mov
pop
ins
leave
xchg
add
jo
jb
xchg
mov
and
(bad)
je
daa
fdiv
das
jecxz
cmp
jae
js
cmp
pop
pop
scas
cmp
and
ins
cmp
out
jno
ins
mov
pop
ja
pop
jno
scas
pop
bound
ja
fs
ins
ins
ins
leave
and
scas
mov
fbld
ja
mov
xchg
fs
pop
mov
sbb
ins
scas
loop
mov
cs
sub
mov
ins
pop
daa
jno
cmps
ins
dec
scas
in
ins
ins
mov
mov
ins
stos
(bad)
leave
fwait
ins
pop
xchg
imul
das
mov
pop
jo
inc
jne
and
fwait
gs
ins
(bad)
mov
mov
add
adc
ins
mov
lahf
dec
mov
lahf
imul
pop
mov
fidiv
dec
sti
mov
xor
jb
ja
sbb
fiadd
and
pop
popa
xchg
cmps
ror
aaa
pop
pop
inc
cmp
fidivr
jno
ja
mov
(bad)
pop
outs
jb
mov
inc
xchg
jae
dec
sbb
push
jb
mov
popf
pop
arpl
je
jo
mov
test
pcmpeqb
(bad)
dec
jae
jecxz
in
lods
(bad)
call
jae
(bad)
mov
push
aas
pop
ins
packsswb
jb
mov
jl
push
jb
dec
cmp
ja
ins
sub
jno
pop
pop
push
fs
ja
bound
jb
(bad)
pop
jp
gs
dec
mov
jae
jae
in
add
jo
ins
pop
jb
mov
das
gs
nop
fs
scas
jae
dec
mov
inc
fs
jb
dec
mov
ss
jae
imul
mov
fs
mov
mov
mov
test
aaa
imul
das
aaa
dec
imul
ftst
xchg
fs
scas
mov
lods
dec
sub
das
dec
xor
mov
fld
sbb
pop
shl
mov
inc
add
outs
fcomp
jmp
pop
(bad)
sub
push
jnp
jae
in
shr
pop
jb
ficom
jb
ins
mov
inc
stos
jb
jmp
pop
xor
mov
pop
jmp
cmps
jg
fild
lahf
ins
sar
sti
push
ins
aas
mov
stos
aam
ja
pop
add
jb
or
cmc
rcr
repz
sbb
js
cdq
outs
or
xor
test
adc
and
mov
and
push
jmp
xor
outs
call
adc
popa
xlat
loope
out
push
aaa
ins
xlat
mov
sbb
and
imul
sub
pop
or
push
add
and
and
fld
(bad)
and
scas
loopne
add
outs
xor
in
jmp
popa
das
popa
add
or
xchg
jmp
fsubr
sbb
sbb
sub
pop
inc
cmp
sbb
sub
jae
aas
sbb
in
bound
pop
add
mov
ja
fadd
mov
ja
inc
scas
popa
push
scas
ins
outs
jns
(bad)
and
ja
jno
in
jmp
xor
arpl
test
inc
ja
sub
pop
pop
inc
loope
xlat
pop
mov
cmp
outs
arpl
jne
pop
push
ds
sub
and
sub
outs
pop
pop
xor
pop
mov
mov
pop
add
arpl
and
comiss
bsr
sbb
mov
dec
pop
les
loop
add
bound
adc
cmp
jbe
in
xor
add
jne
shl
pop
out
neg
imul
cmps
add
inc
fcmovnb
sbb
or
mov
dec
stos
dec
lahf
jo
js
rol
movzx
push
sar
jb
mov
push
jp
pop
mov
mov
inc
pop
gs
push
xchg
popa
lds
ja
jp
push
inc
add
loopne
sbb
es
jg
mov
push
call
push
pop
xor
stos
mov
pop
cmps
pop
pop
push
pop
pop
push
xchg
xor
jno
jne
ret
ja
jp
div
mov
xor
iret
cmps
mov
adc
or
add
cwde
sub
add
mov
mov
push
xor
mov
jnp
pop
adc
pop
(bad)
pushw
jmp
dec
pop
jno
cmp
ja
fdiv
pop
(bad)
das
cmp
ins
jno
test
xchg
imul
mov
jo
cmp
cwde
or
cli
push
clc
out
out
cmp
pop
push
shl
dec
jo
sub
imul
outs
pop
es
add
por
sar
icebp
mov
mov
sub
push
sbb
inc
icebp
xor
out
push
inc
dec
inc
or
iret
sahf
jb
or
push
push
mov
scas
sub
fstp
rcl
jnp
jbe
call
dec
sbb
jnp
fdiv
inc
dec
push
push
dec
add
sub
js
movs
icebp
push
jbe
pop
mov
inc
and
inc
jmp
xor
das
aaa
add
std
lahf
mul
imul
adc
adc
(bad)
outs
call
or
adc
add
mov
mov
ds
call
mov
or
xchg
inc
repnz
or
pusha
or
cmp
ins
(bad)
das
push
and
jg
dec
sbb
scas
sub
push
or
mov
lahf
int
int
ds
loop
pop
and
call
sub
nop
shr
and
cli
push
xor
xor
mov
lock
adc
in
jns
shl
cmp
cmp
aas
loopne
movs
loopne
jo
int3
inc
out
ins
jo
xchg
and
and
xchg
out
push
inc
nop
lock
das
leave
neg
bswap
cmp
mov
aaa
add
nop
xchg
mov
add
push
mov
aas
and
sbb
inc
jo
mov
mov
lods
and
pusha
add
pop
adc
push
and
js
cld
stc
pop
sbb
mov
cmp
adc
out
cs
cmp
cmp
push
xor
in
cmp
inc
mov
out
addr16
inc
dec
nop
cli
pop
iret
jnp
ja
xor
push
jo
push
shl
adc
loopne
dec
cs
dec
pop
idiv
dec
mov
jg
ins
fst
cmp
dec
and
add
mov
sbb
add
dec
(bad)
dec
dec
out
xchg
push
psllq
int
loopne
rcl
cmp
inc
rep
ss
dec
pusha
push
adc
jns
cmp
outs
es
push
arpl
jns
out
jne
nop
shl
adc
lock
pop
add
push
pop
and
push
aas
repz
jnp
add
or
jns
int
push
and
nop
xor
out
popf
shl
mov
neg
pop
adc
add
pop
inc
loopne
mov
mov
(bad)
iret
repz
push
xchg
push
push
jo
rep
fistp
mov
push
bound
mov
sahf
int
arpl
loopne
adc
loope
jo
push
push
xor
in
data16
push
push
repz
out
imul
sahf
mov
ror
push
and
lds
fsub
jg
outs
mov
loopne
mov
xor
adc
fadd
rol
sbb
pop
mov
dec
rol
ss
adc
(bad)
dec
xor
mov
mov
lods
pop
dec
movs
enter
push
push
mov
and
mov
add
mov
aaa
loopne
cmp
and
mov
cmp
mov
add
dec
enter
push
mov
lock
and
sub
and
dec
pop
jb
inc
xor
mov
pushf
cmp
pusha
inc
pop
jo
dec
daa
jns
adc
adc
push
adc
test
test
fmulp
mov
gs
push
clc
stos
dec
cmp
dec
pop
dec
xchg
shl
dec
xchg
es
dec
lahf
dec
stos
arpl
cld
(bad)
jg
xor
inc
rcl
popf
int
mov
pop
add
push
sub
mov
push
mov
push
ss
or
mov
inc
pop
fs
je
les
adc
and
mov
xchg
sub
pop
in
xchg
add
push
nop
and
ja
shr
repz
add
bound
push
push
cmp
push
mov
push
mov
dec
aaa
ja
cmps
fimul
adc
xchg
push
jb
out
ja
add
add
xor
dec
pop
mov
push
push
add
jmp
inc
xor
inc
cli
inc
sub
and
xchg
scas
xchg
sub
movd
js
inc
dec
pop
addr16
pop
ss
jb
push
neg
(bad)
outs
lahf
push
retf
test
pop
aas
ins
adc
xchg
pop
mov
or
push
push
imul
jno
pop
js
mov
mov
jb
das
dec
inc
rol
loop
imul
mov
jg
outs
lahf
cmps
mov
es
inc
out
xchg
mov
add
push
(bad)
pop
and
xor
sbb
push
and
push
xchg
cwde
sbb
push
mov
lock
aas
inc
(bad)
loop
inc
inc
mov
push
pop
or
ds
pop
ss
ret
repnz
fstp
dec
sahf
add
scas
inc
shr
jae
pop
sbb
sub
pop
jnp
adc
out
iret
inc
das
es
and
or
lahf
jno
pop
imul
outs
je
jo
test
cmp
aam
add
pop
jbe
push
sbb
cdq
sbb
adc
mov
push
inc
das
and
add
inc
mov
push
(bad)
dec
fwait
xchg
dec
jne
push
mov
or
adc
mov
jp
test
or
loop
push
xor
cmp
pop
adc
and
cmp
adc
sub
adc
rcr
sub
jg
cmp
mov
push
inc
and
test
outs
addr16
jbe
push
jbe
imul
sbb
push
xor
pop
inc
inc
ins
mov
cmp
cmp
pop
fwait
stos
inc
mov
inc
jne
add
stos
jne
pusha
sub
mov
mov
mov
pop
aaa
pop
adc
sub
xchg
xor
ins
aaa
push
adc
xchg
out
dec
or
cmps
pop
pop
dec
jp
ret
sahf
dec
dec
or
pop
outs
dec
lods
mov
push
cmp
iret
(bad)
jmp
hlt
add
xor
cmp
add
call
push
in
push
ja
inc
das
add
add
jb
mov
inc
and
fcomp
jg
mov
mov
sbb
inc
repz
das
and
lock
pop
push
jb
mov
inc
push
inc
pop
and
push
fadd
stos
pop
les
inc
xchg
sbb
xchg
inc
inc
add
inc
jb
stos
jp
sbb
(bad)
arpl
lods
shl
push
jg
ja
push
sar
jbe
push
add
push
cmp
mov
and
sbb
aaa
adc
and
mov
mov
cmp
push
test
js
jecxz
lahf
arpl
jg
pop
sub
cs
pop
out
jmp
and
lods
pop
imul
fwait
pop
outs
mov
fiadd
movs
cs
aaa
mov
test
and
mov
loop
lahf
and
sbb
cs
movs
or
and
es
outs
jge
fild
jnp
sahf
in
fnstcw
adc
push
xchg
lock
sbb
repz
nop
lock
xor
mov
mov
push
add
mov
lods
(bad)
retf
into
pusha
push
retf
add
jae
rcl
pop
pop
dec
mov
add
icebp
adc
inc
xchg
dec
push
pop
(bad)
adc
push
arpl
mov
sub
mov
sub
das
sbb
cmps
push
mov
pop
rcl
push
(bad)
dec
mov
push
mov
push
add
mov
xor
mov
add
mov
push
ja
sub
mov
pop
pop
in
inc
mov
inc
fbstp
mov
push
sub
push
jg
and
fimul
inc
cs
inc
inc
push
sub
sbb
push
rol
shl
cmp
pop
xchg
push
and
lods
add
push
mov
outs
sbb
sbb
xchg
and
push
sbb
or
and
sbb
mov
cs
adc
pop
xchg
or
std
add
inc
sahf
je
push
pand
dec
gs
jb
outs
jae
arpl
fs
mov
push
inc
inc
jo
bound
mov
push
pop
pop
mov
pop
mov
inc
iret
rol
jnp
pop
das
shl
bound
jle
test
adc
pop
sub
sub
ss
fistp
imul
into
jp
ja
pop
fld
repz
mov
jns
sbb
adc
cmp
cld
loope
sahf
push
fs
jbe
jo
outs
dec
(bad)
popa
xor
inc
gs
mov
outs
shr
push
pop
addr16
js
mov
sbb
pop
stos
xor
dec
clc
pop
addr16
arpl
sti
hlt
adc
push
push
das
fs
pop
(bad)
jb
in
adc
mov
or
(bad)
xor
pcmpeqb
dec
outs
daa
outs
pop
jo
dec
jb
and
mov
xchg
imul
push
enter
pop
outs
bound
arpl
jbe
fild
mov
out
push
mov
test
jp
vpshufbitqmb
outs
imul
fistp
push
outs
jg
aas
jbe
mov
pop
imul
leave
in
je
jo
iret
iret
or
scas
in
data16
iret
outs
outs
ja
sbb
ins
(bad)
add
mov
imul
dec
inc
jmp
cmp
cs
jb
in
clc
pop
pop
pop
push
inc
add
ins
(bad)
mov
mov
mov
add
aaa
sub
mov
sub
dec
pop
jne
idiv
dec
bound
push
pop
je
adc
mov
and
mov
mov
(bad)
jb
xchg
bound
jo
sahf
cs
mov
jo
out
push
push
jecxz
mov
inc
out
in
shr
jbe
ds
pop
(bad)
sbb
out
dec
jg
daa
or
out
gs
je
cs
cmps
ins
dec
movsx
ins
xlat
jmp
mov
das
sub
or
aas
pop
pop
lds
outs
pop
mov
addr16
dec
ds
ins
ja
ss
js
pop
mov
das
mov
xlat
inc
add
cmps
outs
dec
iret
aaa
fs
dec
mov
loop
push
das
cs
(bad)
imul
jns
pop
push
mov
jne
push
inc
div
out
addr16
mov
fcom
outs
das
je
jbe
dec
xchg
xchg
pop
jl
sbb
jb
jae
pop
dec
ins
cli
shl
ss
fwait
ss
arpl
pop
sbb
mov
push
jb
mov
mov
cmp
ins
cmps
dec
cmps
add
sbb
push
inc
dec
mov
add
dec
aaa
pop
daa
xlat
pop
test
fwait
scas
pop
jg
cwde
mov
bnd
jg
retf
es
pop
pop
mov
mov
out
fistp
imul
inc
pop
inc
dec
scas
pop
pop
mov
cmps
sbb
lods
jmp
out
not
lods
cwde
cmp
out
add
mov
and
mov
test
test
mov
jbe
fild
test
mov
or
retf
mov
leave
add
pop
(bad)
fnsave
(bad)
jmp
dec
pop
jae
mov
mov
inc
fist
push
fcmovb
sbb
jge
scas
push
das
inc
inc
outs
inc
mov
pop
daa
pop
push
ror
inc
(bad)
dec
pop
dec
mov
sahf
das
cdq
fidiv
aaa
pop
fs
xchg
inc
fisub
and
mov
inc
dec
jg
push
sub
fsub
jae
dec
inc
neg
mov
mov
dec
das
jno
or
dec
inc
inc
xlat
popw
push
pop
push
aaa
das
inc
pop
push
div
iret
adc
nop
psubw
push
dec
add
dec
sbb
adc
(bad)
push
fbstp
dec
lahf
sub
cmc
movs
cmps
pop
adc
pop
dec
fist
mov
pop
jbe
imul
mov
outs
pop
xchg
mov
jns
fcomp
imul
das
jno
rol
mov
cwde
popf
xchg
or
jp
arpl
ins
mov
inc
cmp
imul
or
adc
lahf
ja
lea
pop
ja
mov
pop
xchg
shl
cmp
add
pop
mov
mov
pop
dec
pop
scas
mov
ins
(bad)
shr
jb
(bad)
fdivp
test
xchg
inc
scas
or
push
shl
(bad)
pop
call
jo
push
jae
jne
jae
xor
inc
pop
inc
arpl
xchg
imul
das
pop
fs
mov
push
pop
jae
retf
pop
pop
mov
sbb
ds
pop
pop
fimul
fwait
daa
lahf
pop
jp
inc
cs
jbe
in
sbb
das
jne
ja
in
loopne
aaa
gs
jecxz
lods
xchg
aas
sub
ss
xchg
or
pop
mov
pop
pop
push
or
daa
pop
mov
jl
(bad)
das
out
ja
shl
pop
ja
pop
ss
mov
out
popa
pop
mov
aaa
or
sbb
or
jbe
push
jecxz
ja
(bad)
lods
(bad)
jnp
dec
pop
or
fisttp
xlat
pop
imul
(bad)
out
sbb
fisub
mov
inc
or
jg
icebp
mov
out
xlat
and
outs
outs
jb
jl
mov
mov
imul
out
mov
inc
xchg
addr16
or
mov
xchg
outs
jae
fistp
icebp
push
mov
pop
or
adc
cmp
cmp
mov
push
pop
sti
pop
mov
xlat
or
or
jae
fdivr
push
(bad)
call
dec
pop
in
stc
outs
or
imul
jnp
ret
arpl
imul
nop
fstp
push
mov
sti
pop
jae
push
das
stos
add
mov
xchg
outs
pop
jae
jo
pop
out
or
jbe
repz
div
imul
daa
jns
mov
rcl
sti
ror
jo
dec
shrd
jg
aaa
or
fbstp
jne
and
adc
jne
xchg
push
fisub
loope
(bad)
out
mov
jg
je
pop
fistp
cmp
pop
repnz
inc
addr16
pop
call
cmps
push
sbb
arpl
ins
add
pop
cs
js
mov
cmps
out
sub
fistp
xor
or
pop
out
add
inc
ret
fadd
fadd
aaa
sbb
(bad)
jmp
(bad)
sti
ficom
out
jb
comiss
sbb
or
mov
add
addr16
inc
pusha
mov
push
or
or
push
in
fidiv
mov
mov
in
xlat
ds
mov
xor
aaa
in
fwait
or
add
mov
js
mov
ja
jnp
add
cmps
mov
pushw
pop
add
gs
popa
imul
(bad)
mov
imul
cmp
ja
imul
fistp
jno
xor
imul
pushf
hlt
sbb
popa
ins
int
mov
inc
scas
iret
mov
jns
and
push
ins
pop
dec
inc
dec
push
pop
in
sbb
ds
inc
push
scas
fidiv
fild
mov
push
sti
and
cmp
push
inc
jl
data16
ins
pop
push
and
pop
daa
aaa
jo
jmp
xor
(bad)
ja
and
or
xchg
repz
pop
imul
(bad)
repnz
xor
and
pop
pushf
or
add
mov
add
or
mul
lods
retf
cli
add
add
sahf
out
sahf
adc
adc
push
pop
jns
out
sbb
sbb
sbb
adc
adc
mov
jb
mov
and
and
or
ror
mov
test
pushf
mov
or
or
adc
inc
sbb
and
xor
inc
add
daa
daa
daa
adc
adc
mov
leave
add
jle
push
cli
or
bound
push
movd
and
loopne
push
pop
push
sub
cmp
scas
loope
xchg
cs
pop
mov
add
adc
adc
add
add
ds
out
mov
and
sbb
adc
push
add
mov
sbb
movs
pop
push
popa
pusha
add
call
or
and
rol
pusha
imul
mov
adc
pop
push
cmp
fstp
mov
and
push
pop
cmp
loopne
mov
pop
sbb
cmp
iret
repz
repz
add
pop
adc
mov
iret
repz
mov
add
fiadd
jecxz
sub
sahf
out
enter
popf
out
sahf
test
test
out
xlat
lahf
pop
push
sbb
add
push
jl
cmp
cmp
sahf
pop
(bad)
ins
sub
repz
repz
dec
clc
add
repz
push
adc
iret
repz
or
movs
repz
repz
repz
pop
sbb
repz
adc
mov
cmp
repz
iret
repz
push
push
add
add
jbe
repz
repz
pcmpgtd
lods
iret
repz
push
xchg
or
iret
repz
pushf
arpl
out
jns
repz
push
outs
cs
out
push
mov
call
out
out
adc
sahf
out
dec
popa
and
in
inc
loop
sbb
jns
shr
out
sahf
sub
mov
cmps
mov
sahf
xchg
out
push
retf
jns
out
stos
add
xchg
out
pop
sbb
out
jns
ins
sub
out
lea
push
adc
jae
(bad)
sahf
out
sahf
arpl
cmps
add
jns
pop
sbb
jnp
(bad)
imul
out
sahf
mov
mov
jns
dec
sahf
push
pop
ja
into
jns
out
addr16
scas
pop
xchg
xchg
out
out
pop
pop
sahf
mov
aas
fisubr
das
stos
out
idiv
dec
(bad)
dec
mov
nop
or
cs
or
cs
test
in
fnstcw
stc
lds
in
mov
mov
inc
cs
int
in
cs
popf
fisttp
std
nop
or
mov
shl
repz
in
cs
jmp
cs
fstp
dec
(bad)
cmps
mov
xchg
xlat
and
in
cs
scas
out
cs
cs
fistp
(bad)
jle
sbb
ret
jg
scas
or
or
pop
call
ret
sbb
inc
arpl
push
mov
es
aas
xchg
pop
and
inc
mov
pop
rol
xlat
push
mov
dec
dec
es
add
push
clc
(bad)
ficomp
jne
push
imul
mov
test
(bad)
imul
and
imul
xor
pusha
je
popa
sub
lahf
sub
jbe
dec
and
das
inc
jns
cmps
cmp
ss
xor
das
iret
outs
cmp
test
jns
dec
arpl
retf
es
cmp
out
jae
punpckhbw
ss
mov
lock
imul
sub
lds
not
das
ror
jo
sar
cmp
cli
imul
ja
fs
fimul
inc
popa
and
pop
sbb
out
dec
mov
orps
jmp
push
jnp
sub
pop
ret
mov
cmps
cmovg
ror
push
adc
lods
daa
sbb
ins
adc
das
mov
jo
fsub
adc
je
push
dec
mov
fcmovb
ss
inc
sub
xor
xor
retf
lahf
dec
movs
hlt
push
pop
out
push
sub
sbb
addr16
aam
lods
pusha
mov
ret
xchg
in
lods
(bad)
das
push
in
es
(bad)
(bad)
outs
xchg
mov
stos
pop
add
fldenv
xchg
push
or
inc
fs
int
xchg
cmps
arpl
push
out
push
lahf
bound
push
and
cmps
push
jb
mov
das
xor
xchg
shl
addr16
pop
pop
call
jb
cwde
jnp
add
xlat
or
scas
pop
add
aaa
out
adc
push
dec
push
add
loopne
cmp
sub
push
sub
sti
jmp
arpl
ficomp
jp
xor
fcom
mov
ret
push
mov
mov
jnp
push
sbb
mov
aad
jecxz
pop
push
stos
jbe
dec
jg
adc
xor
cmp
repz
sbb
mov
inc
stos
and
movs
mov
dec
adc
aad
mov
inc
arpl
hlt
fidiv
dec
xlat
push
loopne
mov
inc
xlat
mov
mov
sbb
das
xchg
cmp
in
mov
cmp
inc
sbb
daa
add
cmp
pop
fwait
das
mov
xchg
outs
aas
adc
mov
ret
movups
mov
hlt
adc
inc
dec
dec
jns
pushf
dec
and
dec
mov
inc
pop
pop
retf
outs
add
movs
imul
adc
cs
adc
push
pop
data16
adc
cs
sub
lods
add
push
add
rcl
dec
jbe
push
add
xchg
stos
pop
inc
sbb
and
xor
movs
xchg
dec
aam
mov
xor
shr
xor
aas
xor
xor
ss
and
push
xor
shufps
call
sbb
ss
pop
aas
dec
pop
hlt
(bad)
xchg
cmps
daa
cmp
add
shr
add
addr16
xchg
cdq
xchg
add
out
cmps
hlt
mov
js
ret
iret
gs
ss
imul
daa
dec
sbb
jmp
jb
imul
cmc
adc
sbb
inc
(bad)
fninit
add
loopne
pop
jo
and
push
and
mov
nop
shl
add
mov
adc
push
sbb
ins
sbb
cmps
dec
push
push
inc
mov
push
(bad)
sub
shl
inc
inc
jle
das
xor
jmp
push
push
push
ins
push
xor
into
ins
mov
and
outs
add
sub
add
ret
lea
xor
iret
or
iret
pop
jecxz
fadd
and
pop
(bad)
call
scas
or
pop
or
(bad)
and
jo
ja
into
ins
outs
dec
jbe
and
push
and
mov
adc
jg
or
sbb
xchg
lahf
inc
mov
sub
adc
xor
xor
jo
xor
push
cmp
cmp
and
scas
push
or
rcl
add
pop
jne
test
mov
sub
xchg
outs
iret
add
or
ja
(bad)
rcl
aas
scas
mov
pop
mov
dec
or
cmp
inc
or
(bad)
push
enter
(bad)
xor
add
pop
jecxz
dec
adc
aaa
xlat
push
lar
cmp
shr
sbb
aaa
outs
aaa
mov
int3
pop
aas
mov
xor
mov
dec
ja
repz
push
jne
(bad)
(bad)
fistp
adc
jge
lea
add
push
outs
ja
xor
adc
inc
mov
inc
mov
sub
add
pushf
in
loopne
adc
ret
pop
xlat
aad
or
retf
aaa
ins
aam
xchg
sub
xor
pop
aam
mov
bound
mov
add
mov
push
ins
fistp
bound
imul
movs
mov
pop
xor
cmp
and
dec
fidiv
and
outs
imul
sub
add
mov
aaa
dec
dec
(bad)
mov
dec
lock
xchg
lahf
jae
add
add
aas
inc
jno
cmp
inc
fs
cmp
xor
rcr
rcl
fdivr
test
fisttp
mov
aas
pop
imul
cwde
dec
add
dec
ja
dec
jmp
cmc
ficomp
pop
adc
pop
pop
mov
push
jmp
push
mov
test
xlat
rcr
rol
scas
ja
add
pop
mov
mov
daa
sub
pusha
mov
mov
add
pop
das
ret
data16
(bad)
not
sub
sub
je
jo
push
addr16
jo
jmp
das
jmp
push
push
addr16
jmp
stos
jbe
pop
fiadd
iret
pop
ja
mov
and
ror
xchg
jae
mov
mov
cmp
lahf
inc
jae
pop
mov
daa
push
ret
mov
loopne
cmps
mov
(bad)
jb
pop
jp
jb
retf
fsub
js
mov
rol
movs
dec
push
add
and
dec
add
sub
ret
jg
stc
jp
mov
jbe
dec
xchg
or
pop
js
fdivp
imul
mov
pop
je
fild
outs
pop
loopne
cmp
out
add
outs
dec
mov
inc
add
or
sahf
aaa
push
(bad)
aam
and
push
inc
imul
xlat
adc
das
aam
mov
jnp
jo
lods
push
adc
and
out
ins
add
inc
sub
shl
push
add
outs
pop
mov
mov
mov
and
lds
add
daa
add
inc
push
push
aaa
pop
pop
bound
mov
pusha
mov
jecxz
aam
lods
arpl
mov
add
xor
ror
sub
mov
(bad)
or
dec
jl
inc
jp
ins
mov
pop
mov
pop
inc
js
mov
ret
pop
pop
add
rol
fld
fdiv
jo
xchg
div
mov
ja
fiadd
pusha
mov
cs
dec
sub
pusha
or
push
pop
pop
repz
push
(bad)
dec
dec
outs
xchg
mov
push
je
outs
push
(bad)
jae
xor
out
bound
inc
pop
popa
fs
mov
popa
dec
and
fwait
sub
(bad)
dec
push
push
pop
and
inc
addr16
ficom
out
loopne
adc
mov
push
scas
sub
outs
mov
outs
je
sub
hlt
sub
and
outs
pop
dec
out
lods
adc
pop
inc
xchg
movs
lock
add
mov
adc
imul
sub
aam
push
mov
xor
ss
daa
mov
xor
daa
add
ins
ja
or
outs
fist
je
je
pop
xchg
ficom
pusha
arpl
cmp
push
xor
test
xor
add
push
add
ret
sub
or
aaa
xlat
mov
lahf
daa
or
add
mov
gs
or
pop
sub
mov
push
jo
addr16
jl
cmp
das
mov
int
or
add
inc
add
and
add
nop
rcl
adc
adc
scas
mov
or
daa
fs
ss
pop
idiv
pusha
ins
push
cmp
inc
aas
add
xor
push
jns
dec
mov
xor
mov
add
sbb
add
sahf
cwde
inc
pop
enter
mov
(bad)
test
in
sbb
and
(bad)
popa
or
and
sbb
or
adc
push
jo
neg
data16
outs
out
cmp
jo
mul
cmp
add
inc
inc
push
dec
cmp
mov
xor
pop
lds
movs
and
ins
outs
addr16
dec
js
mov
ins
xor
fild
hlt
xor
lods
sahf
add
outs
hlt
inc
add
xor
push
clc
inc
push
push
and
inc
inc
push
imul
sub
dec
cmp
imul
xor
and
test
cmp
test
push
cmp
inc
push
es
inc
jbe
sbb
in
mov
sbb
xchg
fsub
push
mov
dec
je
inc
sahf
outs
daa
inc
js
jl
out
jb
push
and
push
sub
dec
nop
ins
sub
push
jb
icebp
inc
cs
cld
outs
push
pop
and
adc
xchg
neg
jb
jno
and
stc
mov
jae
jge
mov
add
and
fadd
bound
jne
jb
arpl
inc
shr
push
daa
pop
pop
test
inc
fmulp
push
mov
or
xchg
fucom
jge
push
into
js
ja
jnp
lods
loopne
inc
pop
and
pop
sbb
pop
jp
fdiv
call
out
xor
jb
adc
xor
enter
daa
cmp
cmp
add
sbb
outs
jo
dec
inc
pop
push
pop
mov
bound
popf
loopne
int
or
ss
or
pop
add
es
addr16
push
inc
dec
ficomp
(bad)
inc
jae
dec
xor
daa
cmp
jb
push
out
dec
mov
fild
rcr
mov
push
xchg
pop
xchg
mov
push
mov
add
aaa
inc
and
xor
xchg
test
mov
in
int3
push
add
bswap
rcr
pop
add
push
sub
int3
stc
ja
push
jne
push
dec
jmp
push
add
push
loopne
pusha
push
jl
test
pop
jns
jg
xchg
cmps
test
mov
dec
inc
fmul
pop
mov
cmps
mov
call
cdq
or
add
addr16
mov
cmp
push
xchg
ins
push
jne
cdq
scas
fisttp
sub
addr16
test
inc
add
push
iret
add
mov
in
lahf
clc
jg
inc
dec
leave
neg
xchg
mov
(bad)
cmps
aad
in
dec
jmp
aas
jg
push
cwde
jo
push
nop
dec
mov
fimul
fisttp
xor
jg
mov
outs
sbb
ins
jge
jo
jae
iret
add
mov
loopne
retf
pushf
aas
jo
fidivr
jg
aas
push
in
cmp
lea
fimul
in
setb
fld
cmps
pop
les
in
cmp
mov
adc
dec
fmulp
mov
fsub
(bad)
jo
jge
fdivr
mov
jge
iret
add
pop
push
jnp
(bad)
fmul
call
fdivr
test
stc
push
add
add
push
call
add
lea
mov
and
stos
or
push
inc
xchg
sbb
jmp
test
sub
add
push
push
loopne
mov
mov
push
imul
adc
out
xchg
push
rcr
xchg
rcr
imul
pop
call
mov
inc
rol
icebp
mov
add
add
push
loop
push
push
sub
xchg
push
jle
mov
out
push
push
xchg
or
add
cmp
sahf
jl
cmp
cmps
fisttp
mov
mov
retf
inc
jle
inc
shl
mov
daa
pop
mov
inc
mov
inc
mov
inc
(bad)
jg
iret
mov
in
call
sub
idiv
adc
push
ficomp
mov
xor
gs
rcr
fsubp
stc
jb
jle
adc
add
and
adc
stos
xor
aad
aas
xor
sub
rcr
mov
jno
fidiv
aam
jg
pop
mov
mov
mov
inc
jo
sub
jne
jge
mov
adc
add
mov
mov
aas
jb
xor
jbe
rcl
aad
repnz
loopne
dec
aas
in
dec
dec
mov
jg
test
push
jg
inc
ins
push
aas
push
mov
push
push
inc
dec
call
mov
sub
push
aas
data16
or
out
test
aas
mov
aas
es
mov
mov
mov
pop
and
leave
push
add
mov
aas
repnz
leave
inc
jnp
or
jg
les
cdq
push
jg
push
and
sahf
out
xchg
jb
leave
dec
and
mov
add
leave
adc
add
push
jg
adc
mov
mov
and
xor
add
dec
cmps
test
pop
jmp
and
cwde
test
mov
or
dec
mov
and
in
mov
mov
aas
mov
sub
inc
leave
mov
mov
mov
mov
cvtpi2ps
mov
daa
push
or
pop
test
and
leave
add
push
dec
push
cmc
mov
add
push
pop
push
mov
dec
adc
sub
outs
aas
add
xchg
cmp
inc
pop
leave
cmp
mov
pusha
push
add
jmp
xor
adc
inc
inc
cmp
pusha
xchg
dec
and
add
adc
adc
add
or
inc
mov
and
sbb
and
pop
leave
jno
dec
sub
push
dec
inc
enter
push
add
inc
call
loope
sub
jo
pop
cwde
sub
push
and
fisub
inc
xor
dec
and
mov
leave
cmp
add
and
and
leave
inc
popa
push
mov
mov
mov
dec
pop
xchg
mov
and
or
inc
cs
nop
leave
inc
jb
xchg
xchg
xchg
pop
and
dec
xchg
add
inc
jb
sbb
jg
pop
mov
cs
in
adc
sar
outs
add
icebp
pop
and
outs
jo
and
adc
pop
add
nop
pop
leave
add
inc
xchg
dec
dec
int3
add
dec
dec
xor
jg
sbb
adc
movs
jle
bound
push
mov
mov
push
mov
or
jnp
pushf
or
test
aas
pop
and
leave
test
xchg
imul
push
hlt
mov
(bad)
cdq
addr16
pop
mov
xchg
mov
push
leave
inc
jb
pop
adc
pop
leave
inc
jb
push
adc
movs
nop
add
sub
shr
fiadd
lea
pop
leave
inc
jb
jae
mov
pop
and
aas
es
es
fs
xchg
mov
jg
aas
and
arpl
xchg
mov
jns
mov
and
cs
mov
mov
rol
inc
push
jo
push
and
jns
test
idiv
and
scas
nop
mov
mov
add
ror
ja
aas
jg
add
xor
and
or
aas
jmp
(bad)
sar
or
push
aas
add
sbb
inc
(bad)
aas
pop
and
dec
inc
cmp
add
and
call
push
leave
xchg
aas
or
je
inc
aas
cmp
leave
mov
add
jae
pop
into
out
inc
mov
add
icebp
sub
inc
xchg
je
cmp
leave
aas
inc
inc
enter
inc
inc
and
add
push
jb
pop
ret
ret
xchg
add
mov
cs
mov
mov
mov
and
cs
mov
mov
cs
mov
mov
mov
and
cs
push
xchg
and
push
aas
pop
in
sub
cmp
cmp
ds
and
leave
inc
inc
inc
push
jo
pop
inc
inc
call
leave
jge
jge
inc
jb
jge
xchg
pop
and
jge
call
aam
test
ja
aas
fiadd
mov
jg
mov
push
inc
dec
sahf
sub
mov
in
mov
jno
jmp
push
leave
rcl
jle
mov
and
aas
cmp
xchg
aas
inc
inc
nop
mov
and
dec
or
in
mov
cs
mov
in
mov
sar
jg
dec
and
jg
adc
inc
xor
jg
or
sub
sub
in
mov
cs
mov
in
mov
cs
and
cs
mov
in
mov
xchg
xchg
dec
xchg
test
test
test
(bad)
xchg
mov
push
mov
mov
cs
mov
xchg
xchg
nop
xor
bound
imul
es
mov
mov
dec
mov
mov
ret
cs
mov
ret
in
mov
cs
mov
mov
in
mov
cs
mov
mov
mov
and
mov
cs
mov
mov
mov
and
cs
mov
mov
cs
mov
in
mov
cs
and
mov
xor
dec
and
aas
test
push
push
xchg
aas
pop
leave
inc
fwait
xchg
aas
mov
push
and
and
ja
sub
movs
jmp
pop
mov
pop
inc
ror
and
leave
imul
imul
imul
mov
mov
jb
mov
pop
mov
xchg
mov
mov
jns
cdq
dec
es
jns
jns
mov
jp
cs
mov
mov
and
cs
jp
mov
(bad)
mov
mov
mov
cs
mov
and
cs
mov
mov
cs
test
and
test
test
dec
add
or
mov
push
mov
mov
xchg
js
mov
mov
test
movs
dec
cwde
dec
pop
(bad)
jae
es
mov
mov
jae
cdq
dec
es
jae
jae
mov
je
cs
mov
in
mov
cs
je
jne
mov
and
and
cs
mov
jne
jne
and
cs
mov
mov
jbe
es
mov
pop
add
dec
add
xchg
mov
ja
and
es
mov
mov
jnp
cdq
dec
es
jnp
jnp
mov
jnp
add
and
pop
and
xchg
pusha
(bad)
and
shr
push
jg
jg
sub
dec
cs
cmps
pop
jle
outs
mov
and
cs
outs
outs
outs
or
dec
cs
mov
mov
and
cs
jo
jo
je
and
jno
inc
xor
and
jno
adc
inc
xor
jb
xchg
dec
and
jb
adc
inc
jb
inc
xor
adc
pop
lds
adc
xchg
dec
and
dec
and
leave
and
and
inc
xor
cmps
bound
push
xchg
dec
and
jle
xchg
adc
inc
xor
dec
and
xchg
add
sar
pop
and
rol
leave
inc
jb
rol
xchg
pop
and
shl
xchg
mov
mov
mov
cdq
dec
es
es
mov
mov
and
shr
stos
(bad)
mov
dec
or
leave
inc
call
popf
aas
xchg
pop
adc
sahf
(bad)
cs
mov
aas
movs
(bad)
in
mov
cs
mov
mov
cs
scas
test
and
cs
aas
mov
inc
pop
mov
mov
mov
jg
mov
and
add
xchg
dec
and
xor
imul
inc
xor
lods
or
xchg
or
mov
mov
jb
mov
pop
js
pop
leave
inc
jb
js
jb
pop
and
js
pop
leave
inc
jle
inc
jb
pop
jle
pop
and
leave
jle
jle
inc
jb
jle
xchg
pop
and
mov
jb
mov
and
mov
mov
pop
mov
leave
mov
jb
mov
pop
add
add
and
inc
test
test
test
xchg
test
and
dec
es
mov
mov
mov
xchg
test
dec
xor
pop
shr
ficom
leave
inc
jb
int3
int
push
mov
or
inc
jb
cs
mov
int3
add
dec
mov
retf
pop
leave
inc
mov
inc
inc
leave
add
jg
xchg
pop
and
int3
int
mov
dec
cs
inc
inc
jg
cs
add
mov
inc
loope
(bad)
pop
and
in
jo
aas
ficomp
add
xor
mov
mov
(bad)
sub
sub
sub
sub
push
mov
leave
inc
jb
int3
int
and
and
pop
push
(bad)
mov
pop
and
mov
jb
retf
pop
ins
mov
sar
shr
dec
pop
and
dec
les
mov
daa
jg
xchg
shl
mov
mov
cs
mov
clc
stc
cmp
fiadd
cmp
cmp
xor
xor
or
sub
dec
repz
jno
lds
aas
mul
jb
repnz
mov
mov
xor
xchg
pop
mov
sub
cmp
mov
mov
mov
xchg
pop
and
sbb
jb
ins
push
je
mov
pop
cmp
add
dec
add
cs
or
ins
xchg
and
or
or
add
jb
sti
mov
mov
jb
or
inc
add
leave
inc
add
inc
jb
pop
add
push
and
leave
add
add
pop
and
add
leave
inc
add
inc
jb
pop
add
mov
dec
mov
jb
aas
dec
rol
add
mov
jg
daa
test
xchg
mov
add
das
int
cwde
mov
mov
neg
outs
aas
inc
or
(bad)
mov
mov
inc
sbb
test
push
outs
add
pusha
imul
push
scas
pusha
jne
(bad)
aas
push
call
mov
ficomp
aas
cmp
pop
sub
jb
cmp
leave
mov
inc
inc
add
inc
adc
aaa
inc
inc
jb
dec
add
leave
add
jb
add
pop
cmp
pop
leave
inc
jb
into
into
outs
xchg
pop
and
ds
mov
(bad)
cmp
xchg
mov
and
sub
or
mov
xchg
mov
mov
push
jo
call
and
and
and
leave
mov
inc
and
and
and
add
add
inc
xchg
pop
aaa
aaa
pop
and
leave
aaa
aaa
aaa
jno
pop
xchg
add
dec
xchg
inc
sbb
pop
and
xor
pop
leave
inc
jb
xor
test
pop
leave
inc
jb
call
xchg
pop
and
pop
pop
pop
leave
inc
jb
pop
pop
pusha
pop
pop
and
es
in
cmp
cs
mov
sub
sub
or
ins
in
mov
cs
mov
mov
and
mov
sub
cs
add
push
jbe
das
pop
cmp
xchg
ds
stos
shl
add
jg
fadd
pop
pop
jle
or
jg
rol
mov
mov
add
and
xchg
mov
and
leave
inc
loop
inc
jb
pop
in
pop
and
leave
out
call
jmp
pop
jmp
push
leave
inc
jb
out
inc
mov
aas
pop
and
leave
xor
inc
add
leave
inc
cmp
jg
sbb
sbb
sbb
inc
cmp
movs
sbb
push
or
mov
call
mov
add
daa
sub
leave
inc
jb
sub
jb
pop
and
sub
aas
aaa
sub
jg
sbb
call
push
ins
and
aas
cmp
pop
sub
add
add
aas
inc
or
mov
and
outs
ror
push
test
or
xor
fidivr
jg
inc
leave
inc
cmps
inc
neg
inc
mov
inc
push
test
inc
dec
sub
xor
push
dec
inc
shl
pop
and
adc
pop
leave
inc
jb
adc
les
pop
and
pop
push
enter
aas
daa
inc
jb
push
sub
pop
and
leave
sub
sub
adc
inc
jb
jg
inc
ret
pop
add
dec
je
mov
leave
inc
shl
add
xchg
leave
xlat
aad
jg
test
pop
(bad)
inc
mov
mov
and
jmp
aas
dec
aas
cs
mov
dec
dec
dec
leave
mov
adc
add
add
pop
leave
adc
cs
xchg
pop
and
push
push
pop
leave
inc
jb
pop
pop
jno
pop
and
mov
or
or
inc
test
and
jmp
mov
mov
(bad)
lods
and
call
lea
ds
mov
repnz
inc
call
aas
fiadd
das
and
or
aas
call
aas
aad
pop
and
jle
ret
pop
mov
retf
aaa
and
adc
and
imul
repz
icebp
add
mov
mov
push
sub
imul
push
xor
push
mov
adc
sub
jg
and
sub
stos
adc
mov
sar
aas
sbb
mov
aas
rcl
adc
and
pop
jg
add
repnz
inc
inc
test
mov
iret
and
jge
pop
add
add
jmp
xor
add
mov
mov
add
jg
adc
sub
test
push
mov
push
and
or
dec
cs
add
in
mov
mov
add
je
aas
in
data16
add
push
push
push
cmps
sub
(bad)
add
push
lods
xchg
ja
adc
jmp
mov
fild
hlt
jb
mov
repnz
je
sbb
push
xchg
cs
pop
mov
push
or
in
movups
and
cs
mov
adc
cld
aam
scas
dec
or
jmp
inc
mov
pop
add
jp
leave
push
aad
aas
adc
adc
pop
in
mov
aas
pop
inc
jb
adc
in
sub
add
pop
leave
inc
jb
or
push
xchg
pop
and
add
push
pop
mov
aas
jg
loope
pop
cli
aas
add
inc
repnz
add
cmps
push
leave
push
mov
add
xor
pop
xchg
adc
add
test
mov
(bad)
mov
dec
cs
add
sbb
or
sub
or
sbb
xchg
inc
jb
cmp
cmp
mov
and
mov
add
aas
pop
and
in
and
and
dec
call
xchg
xchg
aas
sbb
lods
in
add
dec
aas
fidiv
dec
aas
pop
ror
cdq
dec
cdq
dec
cs
call
sbb
sub
cdq
dec
es
dec
inc
repnz
add
mov
add
xchg
pop
and
mov
je
mov
bound
daa
and
ins
mov
inc
jb
pop
sub
pop
and
leave
sub
cs
inc
jb
das
xor
xor
leave
inc
jb
xor
je
pop
and
daa
and
pop
and
ins
(bad)
aas
mov
add
and
es
or
and
and
inc
test
cs
mov
xchg
aas
xchg
dec
in
mov
cs
mov
mov
and
cs
xchg
dec
dec
mov
mov
jg
(bad)
jge
or
dec
ficomp
aas
sbb
cs
aas
pop
aas
mov
bound
mov
xchg
mov
sar
fistp
mov
test
aas
loope
inc
jb
loop
xchg
pop
and
in
pop
leave
inc
jb
out
jb
pop
and
jmp
inc
jb
pop
in
out
inc
mov
(bad)
sar
aas
pop
and
lods
aam
aad
leave
inc
jb
xlat
fcom
ficom
leave
inc
jb
(bad)
jb
pop
and
fbld
leave
inc
loopne
dec
jp
pop
loop
add
in
mov
mov
dec
jns
jbe
add
add
jmp
jg
enter
(bad)
cmp
dec
es
push
lds
sbb
out
mov
jg
ret
mov
test
std
mov
add
jg
add
fiadd
aas
cmp
ins
loop
or
bound
and
pusha
and
rcl
(bad)
inc
lds
or
push
mov
add
es
es
cmp
inc
call
in
push
dec
cmp
mov
daa
cmp
pop
jbe
leave
inc
sar
daa
sub
jb
pop
and
sub
pop
leave
inc
sub
shr
and
dec
es
mov
or
mov
mov
mov
and
and
cs
mov
push
pop
cmp
pop
xchg
mov
and
push
mov
dec
aas
mov
or
inc
jb
jae
xchg
pop
and
push
mov
jb
jg
inc
xor
test
and
leave
ins
arpl
inc
xor
and
mov
mov
or
jg
adc
add
push
add
or
daa
mov
sbb
add
test
(bad)
push
xchg
cmp
jbe
add
sub
(bad)
dec
mov
xor
push
add
push
adc
push
push
xor
mov
or
push
sub
dec
outs
arpl
xor
and
mov
push
imul
sbb
sub
push
pop
(bad)
jns
fisttp
xor
pop
sbb
xor
xor
fiadd
pop
xor
xor
or
mov
outs
outs
outs
xor
ss
add
lock
popa
jne
and
and
adc
jle
add
je
popa
jb
in
or
sbb
adc
lea
aas
inc
gs
ins
outs
jo
fdiv
pop
add
cli
mov
pusha
sub
add
add
or
(bad)
dec
lock
push
cmp
xchg
mov
fld
(bad)
(bad)
(bad)
inc
in
add
dec
lds
loop
sti
fcmovbe
inc
adc
inc
xor
sar
(bad)
(bad)
jmp
jns
or
pusha
push
aad
inc
retf
push
mov
dec
ins
add
ins
and
push
jmp
fs
movs
xor
(bad)
(bad)
jmp
outs
mov
mov
out
out
mov
repnz
sub
or
xor
push
(bad)
(bad)
dec
sti
cmp
mov
cld
cmp
into
jp
in
dec
push
xchg
xor
(bad)
fisttp
call
or
push
jp
aas
mov
push
out
xor
sub
or
push
lods
mov
pop
loop
pop
popa
into
xchg
(bad)
(bad)
(bad)
call
cmp
dec
or
jne
cmp
jb
shr
retf
retf
mov
mov
inc
enter
inc
push
loope
mov
mov
push
arpl
cmps
je
xor
movs
or
push
add
add
add
ds
jle
xor
sbb
add
inc
call
pop
add
jmp
sub
clc
pop
(bad)
push
das
das
arpl
xor
arpl
cs
arpl
das
fistp
out
inc
push
push
xor
pop
jns
add
xor
inc
jg
hlt
push
or
push
sbb
add
push
or
add
xor
push
mov
mov
xor
adc
push
lock
mov
and
add
xor
jo
outs
pop
xor
xchg
movq
jo
cdq
mov
xor
int3
pusha
ds
inc
push
add
add
pop
add
pop
jmp
(bad)
(bad)
(bad)
(bad)
jl
pop
mov
in
jl
sub
movs
sub
cmp
mul
push
dec
pop
xchg
push
pop
add
cmps
es
cmps
lahf
and
enter
cmp
sub
aad
loopne
ret
neg
adc
(bad)
jg
(bad)
mov
and
daa
imul
or
sub
stos
mov
sahf
push
fs
(bad)
(bad)
push
in
in
jbe
fdiv
outs
xchg
retf
and
jp
and
bound
push
jb
nop
sar
(bad)
(bad)
push
arpl
pop
adc
mov
cld
stos
add
fistp
and
lahf
ror
adc
mov
imul
(bad)
(bad)
(bad)
call
push
xchg
mov
sub
cs
es
pop
mov
jae
sbb
jb
out
and
xchg
xchg
push
jmp
sbb
icebp
clc
lea
jnp
xor
sub
or
mov
(bad)
(bad)
inc
sbb
in
(bad)
(bad)
xchg
sbb
es
cmp
push
(bad)
(bad)
call
and
imul
retf
aad
ja
in
mov
adc
jne
ins
(bad)
adc
inc
sar
adc
and
jb
fidiv
les
mov
sbb
adc
imul
and
inc
push
jae
jo
add
retf
mov
mov
outs
adc
idiv
sbb
or
xchg
mov
sbb
adc
call
and
cmp
xor
cmp
xor
cmp
jo
into
xor
push
sbb
or
pusha
sbb
adc
add
mov
or
(bad)
dec
(bad)
(bad)
jmp
aas
and
pop
push
mov
jo
jecxz
jle
js
aad
sub
(bad)
jns
push
outs
pop
adc
idiv
cs
or
sti
out
popf
add
cs
leave
and
call
inc
lods
mov
test
add
popf
push
and
jae
xor
lds
call
retf
mov
push
pop
rcr
mov
test
popf
push
and
lods
fdivr
(bad)
(bad)
push
xchg
sub
adc
xchg
pushf
loopne
xor
xor
and
push
lds
nop
sahf
std
retf
(bad)
(bad)
(bad)
inc
popa
dec
movs
(bad)
loopne
or
xlat
xor
pop
in
push
push
in
(bad)
aad
(bad)
(bad)
(bad)
push
(bad)
cmp
test
add
cmp
lds
int3
add
into
cmp
xchg
cmp
(bad)
(bad)
(bad)
mov
xlat
sub
fiadd
ins
push
push
bound
pop
jmp
and
sbb
jmp
xlat
lods
sahf
out
popf
ins
adc
ins
(bad)
call
adc
dec
sti
dec
js
inc
push
mov
xchg
push
dec
jb
in
imul
call
rcl
cdq
iret
and
pop
sub
pop
cmp
mov
sbb
adc
sbb
adc
jmp
(bad)
aad
jno
cld
lods
(bad)
fisub
jmp
and
adc
cmps
adc
into
inc
add
lds
(bad)
mov
dec
jmp
sub
dec
icebp
(bad)
(bad)
(bad)
(bad)
jmp
push
ret
cs
cmp
pop
arpl
xor
adc
sar
(bad)
(bad)
push
push
call
pop
add
iret
or
and
add
ret
lea
(bad)
(bad)
(bad)
jl
cmp
dec
mov
dec
leave
in
jmp
mov
adc
(bad)
(bad)
(bad)
jmp
pop
mov
nop
(bad)
std
enter
stos
ins
stos
mov
inc
dec
and
and
movs
outs
clc
(bad)
call
je
sbb
dec
push
inc
cdq
xchg
cmp
jns
iret
xor
jmp
out
xor
inc
xchg
rcr
es
push
dec
scas
call
hlt
call
scas
mov
sbb
xor
aaa
leave
mov
or
(bad)
(bad)
jmp
sahf
scas
ds
inc
xchg
sbb
push
cmp
pushf
dec
lods
lods
jnp
es
imul
or
imul
inc
dec
inc
out
in
xchg
mov
rol
aas
fcom
(bad)
(bad)
(bad)
jmp
aas
retf
ds
movs
and
cmc
sub
and
push
fwait
movs
fstp
dec
stc
push
inc
mov
and
loope
mov
ficom
adc
add
mov
add
push
call
in
xchg
add
int
cld
in
lock
and
nop
inc
out
add
adc
add
icebp
and
pushf
or
xor
repnz
pop
or
rcl
xor
pop
sbb
and
push
inc
ds
movs
inc
sub
xchg
stos
xchg
or
cmp
push
add
add
inc
add
out
nop
popf
into
sbb
push
ins
mov
push
ins
outs
daa
out
sub
inc
pop
imul
or
jns
pop
push
add
push
dec
mov
imul
xchg
jnp
cld
add
dec
mov
push
push
inc
push
cdq
mov
aas
inc
push
outs
pop
or
xchg
pop
inc
test
test
push
lahf
setns
aaa
outs
cmps
sbb
pop
pop
dec
dec
and
add
jmp
outs
jg
test
mov
pop
inc
add
mov
mov
add
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
(bad)
and
sub
or
fst
js
adc
mov
mov
mov
or
fisttp
pushf
mov
idiv
movs
pop
movs
push
pop
mov
in
jnp
scas
ror
push
jno
dec
mov
jbe
mov
loope
fwait
add
ins
fwait
cli
inc
add
iret
test
cmp
repz
jb
dec
push
sahf
out
pushf
push
pop
push
push
push
dec
dec
fmulp
jnp
xchg
push
pop
add
and
out
push
or
fmul
test
stos
in
test
adc
add
and
(bad)
pop
push
sub
and
add
xor
add
dec
sbb
cmp
pop
mov
inc
adc
test
add
fild
jne
test
inc
cmps
sub
mov
add
pop
and
addr16
lock
fild
je
add
dec
adc
aam
lds
imul
adc
aaa
or
pop
push
push
outs
popa
pusha
dec
adc
xor
push
out
popa
mov
mov
in
lods
xchg
xchg
push
outs
imul
pop
jae
daa
data16
fwait
dec
cmp
pop
outs
das
mov
and
scas
or
ja
push
das
jo
test
nop
sbb
adc
add
sub
ja
dec
fwait
add
mov
or
xor
sub
push
jno
adc
pop
mov
cmps
cdq
add
fs
cmp
fnstsw
and
js
sbb
push
mov
push
mov
lds
fbstp
sub
popa
jo
popa
fisttp
xor
aas
sub
sub
imul
stos
lds
es
popa
aas
mov
add
ret
repz
sbb
sub
jae
je
lock
dec
jnp
adc
repz
je
and
hlt
jne
rcr
es
sbb
loop
xchg
dec
jnp
cs
sti
push
outs
shr
push
jmp
push
jb
fidiv
test
mov
mov
das
not
jmp
mov
mov
neg
lock
repz
popa
dec
jae
jbe
stos
mov
mov
sbb
mov
cmc
out
push
imul
xchg
cmp
dec
(bad)
dec
xchg
dec
jmp
add
jp
bound
xchg
sub
or
xor
jmp
jmp
lds
cwde
push
jae
ror
push
inc
add
add
mov
inc
jmp
mov
outs
add
addr16
movs
add
push
scas
xor
jmp
dec
push
movs
ret
push
mov
jnp
fimul
outs
jecxz
push
(bad)
scas
add
and
inc
xlat
mov
jnp
scas
stos
popa
imul
aas
jmp
push
imul
(bad)
shl
sub
sub
push
fld
xchg
pop
xor
inc
imul
call
cmps
push
cmp
ins
fist
out
mov
inc
push
xor
rol
dec
push
add
stos
add
mov
sub
push
mov
xchg
pop
lds
jmp
mov
imul
adc
in
sbb
repz
lock
arpl
jbe
gs
fistp
fbld
push
mov
out
sub
push
jne
pop
imul
xlat
jmp
mov
jae
loop
aad
mov
jg
stos
sti
test
jo
dec
pop
jne
add
cs
push
lods
ret
push
mov
pop
push
pop
stos
adc
fcmovnu
fst
mov
pop
sti
cdq
push
jbe
retf
dec
jae
sub
fisttp
sahf
inc
adc
jnp
scas
adc
add
(bad)
and
cmp
and
jno
sti
arpl
mov
mov
addr16
add
pop
(bad)
fwait
cmp
addr16
stos
cli
xor
sub
jp
mov
adc
and
pop
mov
pop
stos
mov
adc
push
adc
or
pop
pop
and
dec
outs
push
and
sub
jmp
mov
xor
scas
aad
mov
mov
or
ret
jo
inc
push
fsub
outs
lock
add
cwde
push
mov
outs
ret
out
jns
sub
jmp
push
lods
call
pop
bound
adc
xchg
jns
inc
sbb
push
iret
jns
add
mov
movzx
and
ret
add
jmp
add
out
ret
(bad)
xchg
adc
lea
fidivr
fadd
dec
sbb
jnp
dec
aaa
sti
inc
jb
push
jmp
in
gs
repz
pop
(bad)
fs
adc
arpl
sahf
outs
inc
mov
out
pop
ss
lds
lods
add
pusha
inc
(bad)
fist
push
sub
ins
and
out
lock
sbb
push
push
cmp
mov
push
inc
int
(bad)
xor
xor
mov
mov
add
out
mov
scas
or
neg
adc
lods
arpl
loopne
lds
ja
addr16
sub
adc
push
and
rcr
or
iret
out
bound
push
sub
jecxz
jmp
and
pop
xchg
or
pop
das
jg
push
xor
ror
dec
mov
xchg
xchg
mov
mov
adc
stos
pop
ret
push
sti
daa
dec
dec
fiadd
iret
sub
push
dec
jmp
sbb
dec
mov
push
test
rol
imul
or
mov
imul
sti
push
jmp
jne
xor
mov
rol
bound
aam
(bad)
xor
xchg
push
xchg
scas
pop
mov
mov
pop
pop
movs
jb
xor
fidivr
dec
add
inc
ret
add
rcr
ins
dec
iret
push
outs
ja
loopne
test
jo
stos
mov
pusha
(bad)
out
jg
dec
xchg
jmp
outs
inc
test
adc
ret
or
out
jae
push
loope
arpl
mov
xor
stos
stos
(bad)
fiadd
lahf
push
jmp
pop
repnz
jae
sbb
or
je
push
xor
ja
test
push
dec
sub
pop
xchg
ret
or
es
lods
outs
jae
or
push
inc
addr16
or
jns
xor
inc
aas
mov
xor
adc
sbb
daa
daa
mov
test
loopne
sbb
imul
fadd
cmps
inc
dec
pop
mov
jb
cmc
xor
outs
stos
stos
dec
pushf
and
outs
fistp
jae
adc
push
sub
xor
add
mov
maxps
sbb
mov
mov
push
shl
ret
jne
pop
adc
lds
ror
or
jb
das
arpl
in
loopne
fwait
aas
bnd
mov
mov
and
cmp
push
mov
mov
dec
push
mov
push
mov
add
sbb
loop
fist
cmp
mov
adc
daa
adc
xchg
dec
jg
inc
(bad)
push
cmp
xchg
adc
cmp
xchg
adc
inc
lods
cmp
add
inc
inc
fcom
pop
mov
fcom
sub
aad
mov
mov
add
xchg
mov
push
sbb
add
jae
xor
sti
push
stos
mov
loope
imul
pop
out
or
outs
mov
sub
sub
add
ret
mov
push
mov
mov
outs
sti
retf
push
push
(bad)
jmp
pusha
xchg
mov
sbb
pop
mov
sysret
cs
dec
mov
inc
sar
mov
cwde
sbb
lods
dec
imul
xchg
fild
push
and
stos
mov
lods
dec
sub
pop
das
inc
cdq
mov
xchg
inc
xor
addr16
mov
mov
neg
call
(bad)
dec
stos
add
lahf
stos
rcr
inc
cmps
imul
(bad)
aad
inc
inc
adc
jmp
cs
sub
push
xor
ja
neg
movs
push
push
inc
out
sub
arpl
or
mov
sti
lods
cmp
xor
push
loop
out
les
lds
xchg
push
mov
xor
jmp
pop
pop
inc
xlat
push
addr16
imul
push
or
dec
or
adc
addr16
movs
scas
or
dec
lods
outs
retf
cwde
push
dec
jae
jae
test
jae
lods
adc
inc
inc
loop
sbb
add
xlat
inc
and
pusha
jmp
add
push
jo
div
test
sti
daa
pop
adc
sub
ret
pop
dec
inc
lahf
sbb
bound
stos
or
pop
pop
mov
inc
dec
addr16
or
dec
and
(bad)
mov
lahf
xchg
mov
adc
sti
mov
(bad)
call
jg
xor
adc
je
out
les
mov
repnz
sub
inc
ins
in
sub
jb
mov
ret
lds
in
js
cmps
fs
dec
add
mov
fnstcw
dec
(bad)
repnz
mov
mov
sub
nop
sbb
jmp
or
xor
jne
imul
and
pop
mov
push
jo
pop
ror
mov
mov
adc
inc
dec
cs
fild
arpl
mov
or
mov
jmp
or
(bad)
arpl
iret
sub
inc
xor
xchg
test
xor
jae
sbb
dec
adc
sbb
adc
mov
add
sub
xchg
mov
cmp
push
jg
and
(bad)
xor
jb
call
pop
pop
dec
dec
cmp
push
inc
fsubr
xchg
mov
cmps
jae
inc
mov
leave
sti
xchg
adc
ret
sbb
jmp
pop
xor
mov
mov
or
add
or
mov
mov
je
or
mov
inc
jae
jne
sub
adc
jo
lods
mov
inc
add
daa
add
adc
sbb
jae
retf
sub
sar
push
sub
dec
pusha
jmp
nop
mov
stos
sub
or
les
mov
mov
pop
lahf
das
fsubr
push
xlat
or
pop
mov
loop
and
cmp
pop
iret
ds
imul
or
cwde
sbb
inc
mov
xchg
jae
and
lds
or
push
or
inc
pusha
in
mov
popa
ret
sbb
mov
mov
mov
cmp
mov
push
fs
test
jecxz
shl
sbb
push
sub
jnp
stos
add
xlat
popa
xor
sub
rol
scas
arpl
cmp
ret
adc
adc
adc
ins
and
test
sub
push
dec
pop
and
push
mov
jmp
adc
xor
sbb
sub
push
arpl
mov
mov
jae
add
and
test
xchg
sub
dec
fild
add
jp
sbb
sub
dec
push
mov
xchg
push
aaa
add
adc
mov
daa
repnz
push
das
jae
jo
pop
xchg
dec
push
add
xor
mov
popa
aas
dec
sahf
je
out
jecxz
jne
scas
ins
cs
or
das
ret
daa
or
pop
push
imul
ins
inc
lea
add
popa
ss
add
sub
dec
push
pusha
imul
adc
add
inc
sub
adc
jns
mov
int
pop
ins
ja
mov
ss
jae
lock
push
cmps
cs
mov
xchg
(bad)
rcr
ins
sbb
sub
sub
rcl
retf
imul
adc
inc
loop
daa
into
cmovg
bound
push
and
push
mov
pop
aaa
cmp
adc
imul
xor
jo
cmps
outs
outs
and
mov
rcr
mov
xchg
inc
mov
sub
jne
mov
out
pusha
pop
mov
sbb
xchg
jns
jb
cmps
pop
lds
sbb
adc
push
and
(bad)
cwde
mov
inc
xor
mov
inc
sub
and
sbb
pusha
ror
test
in
inc
(bad)
jbe
daa
push
pop
test
call
imul
push
mov
fsub
push
arpl
dec
inc
shl
or
pop
adc
inc
stos
sti
pop
cmp
jmp
mov
stos
test
mov
sub
fwait
mov
inc
and
inc
dec
add
push
and
mov
aaa
pop
(bad)
adc
jae
neg
mov
sub
jecxz
(bad)
(bad)
dec
push
je
and
ja
xchg
nop
and
mov
ja
fwait
inc
cmp
les
and
hlt
ret
cmp
inc
pop
and
push
xchg
mov
jnp
inc
cli
pop
xchg
mov
mov
shr
pop
xor
sub
data16
gs
aam
mov
pop
cmp
mov
aaa
mov
sbb
mov
outs
fwait
stos
pop
call
out
or
inc
add
pop
mov
iret
fist
bound
adc
xchg
xor
(bad)
das
stos
push
(bad)
movs
xlat
ins
add
sbb
jo
in
xor
imul
gs
fwait
outs
ret
dec
loope
stos
xchg
jae
popa
adc
sbb
loop
pop
pop
inc
sbb
sub
adc
pop
mov
jae
(bad)
ins
sub
push
push
xchg
jmp
adc
mov
fbstp
cmp
out
ret
pop
fs
stos
(bad)
jmp
lea
loop
mov
sub
jmp
xor
inc
imul
shl
fwait
push
jp
push
sub
pop
xchg
add
imul
sbb
add
ss
and
xor
inc
mov
xor
mov
dec
sahf
pop
cmp
pop
and
add
outs
mov
ja
movlps
popa
mov
cwde
jnp
and
stos
xchg
jnp
xchg
and
(bad)
aaa
je
into
pop
retf
and
rol
or
imul
scas
daa
popa
or
stos
dec
dec
loopne
je
push
add
and
inc
cs
repz
ins
call
inc
test
add
movs
bound
mov
xchg
iret
test
pop
int
cmp
dec
xlat
cli
ret
addr16
outs
fwait
int
or
scas
sbb
out
or
add
push
sub
mov
push
pusha
jo
arpl
(bad)
mov
inc
ret
sub
neg
mov
xor
test
push
mov
push
jecxz
mov
inc
adc
mov
lock
or
mov
ds
pop
push
out
fistp
add
mov
imul
scas
daa
rcl
add
daa
retf
sub
and
jb
add
dec
push
imul
mov
fsub
call
xor
push
inc
iret
pop
iret
mov
jg
pop
pop
mov
or
js
mov
add
scas
adc
aas
fadd
jb
out
in
pop
xor
ja
(bad)
outs
scas
cmp
dec
or
and
inc
and
mov
xlat
adc
push
mov
arpl
push
lods
sub
mov
and
(bad)
push
out
push
push
fwait
jp
push
popa
jnp
ja
jmp
mov
mov
lahf
out
pop
movs
and
mov
lahf
push
aam
mov
jmp
pop
inc
cdq
es
jecxz
daa
push
rcr
aaa
mov
dec
sub
pop
aam
call
push
xchg
push
xchg
add
sbb
test
mov
jmp
adc
pop
sub
jp
push
daa
cmps
jne
lds
or
js
jae
ins
add
pop
sti
ret
mul
dec
cmp
sbb
dec
jae
pop
ins
aaa
lahf
aas
mov
or
or
aas
adc
mov
mov
push
sub
call
test
sbb
aas
jg
push
sub
xchg
mov
test
pop
xor
or
les
push
pop
ins
or
stos
outs
and
or
jp
or
inc
jne
xchg
mov
add
arpl
sub
push
fist
jnp
test
or
shr
das
mov
sub
sti
pop
inc
adc
imul
cmc
add
push
mul
(bad)
push
xchg
fwait
jb
adc
mov
xor
gs
xor
jnp
test
push
xchg
shl
ret
(bad)
fild
mov
pop
push
inc
lods
mov
mov
sbb
pop
sub
aad
sub
(bad)
popa
or
add
test
js
aam
jmp
sub
arpl
stos
sbb
xchg
push
aaa
push
add
sub
or
sub
and
xor
lods
and
mov
mov
xor
jb
jmp
sbb
retf
call
fistp
mov
sti
pop
stos
aam
call
and
add
xlat
aaa
enter
inc
lods
adc
mov
scas
xchg
sub
xchg
push
sbb
adc
adc
ja
lock
mov
lods
je
pop
xchg
xlat
mov
pop
imul
sub
inc
(bad)
imul
(bad)
popa
adc
mov
rol
and
mov
lds
xor
or
add
inc
add
or
addr16
ror
pop
test
dec
pusha
mov
add
mov
loope
arpl
lock
ins
jae
cmp
jp
and
(bad)
mov
xchg
test
popf
shr
push
jae
das
or
mov
ss
movs
aaa
or
inc
add
push
stos
add
add
push
jno
mov
jmp
pop
or
push
das
fnsave
das
gs
push
adc
and
mov
imul
shr
repz
push
pop
adc
lods
lods
push
inc
out
sub
or
ret
xchg
pop
imul
xlat
add
(bad)
sbb
xlat
shr
loop
or
add
mov
and
pop
jne
adc
fld
inc
movs
imul
fwait
mov
sub
rcr
inc
pop
repz
pop
or
shl
pop
inc
shr
fisttp
add
addr16
pusha
es
out
xor
bound
sub
aaa
repz
mov
sub
aad
test
imul
push
or
xchg
fdiv
mov
push
xchg
dec
adc
repnz
dec
add
sub
inc
mov
bound
jae
stos
push
inc
sar
aam
or
cmp
das
xor
add
adc
pop
shl
push
aas
lds
stos
mov
jae
mov
js
xchg
fbld
xchg
push
xchg
xchg
xchg
mov
fisttp
mov
mov
fbld
jne
sar
sahf
xchg
or
push
bound
scas
(bad)
adc
inc
cs
xor
mov
nop
or
adc
imul
inc
stos
scas
aaa
sub
inc
stos
repz
fwait
ins
(bad)
test
mov
adc
xchg
add
add
in
xor
movs
nop
inc
dec
or
aam
inc
adc
ja
lods
sub
mov
push
and
stos
dec
push
sub
and
push
stos
pop
xor
nop
sbb
ins
inc
addr16
inc
call
push
test
arpl
(bad)
mov
mov
mov
sbb
cmp
lea
test
jmp
ret
and
pop
(bad)
sbb
add
cs
mov
push
stos
jmp
imul
imul
jnp
mov
mov
imul
(bad)
sbb
adc
cs
pop
iret
shr
rcl
xor
imul
jbe
addr16
mov
cmps
lods
loopne
push
and
xor
pushf
shr
stos
out
sub
adc
(bad)
inc
and
push
aaa
mov
out
mov
xchg
fmul
pop
add
mov
push
popf
fiadd
sbb
sbb
pop
cmp
dec
pinsrw
mov
aaa
stos
xor
icebp
mov
sti
popa
push
pop
fnstenv
bound
mov
push
lods
daa
jmp
mov
and
cmp
adc
das
sbb
and
fstp
out
mov
pop
add
or
mov
mov
xor
dec
out
sub
add
add
push
lods
or
adc
int
mov
icebp
fs
repz
aas
mov
shr
inc
test
aas
and
mov
xor
mov
sub
test
and
cmp
(bad)
js
pop
shr
sub
push
outs
test
lods
imul
stos
mov
adc
aaa
jmp
jg
addr16
cmp
sbb
push
pop
stos
push
outs
mov
ja
mov
fdiv
xor
bound
xlat
and
pop
test
mov
sbb
pop
xor
jb
push
inc
shr
xor
inc
adc
jno
imul
in
mov
sbb
cwde
mul
lahf
adc
imul
nop
mov
das
imul
sub
jae
xor
mov
out
cmp
cmp
sbb
add
mov
aas
mov
pop
xchg
lods
mov
getsec
mov
and
jmp
mov
mov
aas
fwait
xchg
sbb
shr
adc
inc
jmp
call
jbe
bound
sbb
push
push
or
inc
pusha
(bad)
stos
cmp
lods
xor
or
movs
aas
pop
push
or
cld
scas
xor
nop
lods
push
push
xchg
push
loop
fimul
mov
xchg
push
sbb
add
adc
pop
inc
add
mov
sub
mov
sub
xchg
pop
and
dec
les
xor
mov
ror
and
sti
inc
pop
add
mov
aas
push
stos
push
mov
iret
iret
bound
outs
add
push
fcmovne
(bad)
push
pusha
and
ret
sbb
adc
jg
push
mov
dec
sbb
xor
je
arpl
cmp
mov
adc
pop
mov
ja
pop
aad
mov
inc
push
shl
popa
push
and
and
pop
mov
lahf
push
stos
pop
xchg
inc
daa
ret
pop
lahf
fist
pop
inc
xchg
fs
mov
movs
fwait
iret
aas
jb
push
mov
jmp
aad
xchg
mov
jo
(bad)
or
mov
bound
lock
sub
data16
mov
adc
jae
mov
jae
and
mov
outs
ret
mov
mov
repz
pop
or
or
jbe
stos
(bad)
das
or
and
fnstsw
xor
xchg
or
out
sbb
jno
dec
stos
adc
mov
and
lods
or
pop
mov
push
daa
stos
(bad)
jmp
pop
adc
daa
movs
sbb
add
sar
xchg
push
push
adc
arpl
mov
dec
popa
jnp
scas
pop
push
(bad)
mov
push
test
aas
mov
dec
push
dec
fisub
das
fidiv
int
test
jl
jmp
or
push
add
aaa
xchg
mov
xor
inc
cmp
imul
inc
mov
jg
xlat
aam
lods
push
pop
adc
xor
pop
dec
inc
stos
das
and
stos
mov
mov
push
adc
mov
mov
push
adc
(bad)
xor
mov
dec
pop
jns
push
popa
test
das
not
outs
push
bound
inc
push
aaa
adc
inc
pop
xchg
push
fwait
inc
inc
(bad)
test
out
sub
test
loope
xchg
arpl
inc
push
es
nop
jne
imul
div
(bad)
bound
add
es
(bad)
sub
push
nop
dec
or
add
xchg
stos
inc
xchg
mov
rol
xchg
stos
stos
es
inc
sar
int
push
jg
push
inc
dec
add
sub
popa
push
dec
lods
repz
push
sub
daa
and
(bad)
(bad)
push
push
pop
ret
adc
mov
imul
jmp
push
outs
adc
data16
mov
and
xchg
push
push
pop
test
(bad)
mov
sub
adc
lods
(bad)
fadd
and
je
push
scas
jae
ficomp
adc
mov
add
fmul
daa
jo
add
push
pop
aam
xchg
bound
(bad)
add
add
jae
add
cmps
sti
sbb
or
loop
rcr
sar
sub
call
fadd
(bad)
sub
jb
lods
inc
jo
inc
dec
adc
aad
xor
or
mov
jae
jmp
popf
aam
out
ins
je
sbb
ins
add
ror
loop
push
mov
and
test
fwait
ret
(bad)
mov
adc
imul
or
dec
mov
jnp
loop
adc
imul
push
dec
popa
jae
sub
adc
or
pop
inc
add
call
inc
or
adc
arpl
sbb
sbb
les
and
daa
sub
mov
stos
push
rcr
sub
es
aas
sub
ja
add
ffree
push
add
bound
stos
jmp
cmps
xlat
(bad)
iret
inc
mov
lods
add
mov
mov
sub
inc
cmp
push
or
cmp
iret
imul
mov
jnp
pop
push
pop
jae
(bad)
push
lea
inc
inc
call
shl
push
mov
retf
add
jmp
daa
inc
mov
xor
pop
dec
mov
and
mov
stos
shl
push
stos
adc
inc
xchg
pop
clc
outs
test
xor
jae
bound
ss
mov
outs
or
or
sub
sti
sub
add
out
aas
push
sub
movs
loopne
fisttp
push
xor
mov
sti
dec
pop
inc
sub
addps
jg
or
push
add
push
and
mov
mov
aas
sub
push
push
push
or
adc
adc
(bad)
mov
push
ja
pop
loopne
arpl
jne
rol
push
or
push
arpl
adc
mov
inc
lods
sub
push
test
ss
and
pop
mov
add
jp
inc
inc
add
in
mov
xchg
shr
nop
cmp
imul
dec
ja
sub
outs
aaa
and
add
dec
clc
dec
test
popa
aam
dec
test
push
dec
iret
xchg
add
arpl
push
push
jmp
js
sub
mov
outs
mov
les
retf
jg
mov
stos
jmp
mov
push
jae
dec
mov
inc
sub
jmp
cmp
shl
push
xchg
jmp
sbb
add
jg
xchg
call
push
sub
test
push
addr16
xor
jmp
inc
or
sub
push
or
(bad)
cmp
push
mov
mov
aam
test
ret
sbb
dec
pop
daa
aad
mov
test
sbb
or
push
xchg
and
sti
outs
jg
enter
xlat
push
imul
add
outs
les
jo
idiv
rol
mov
aad
(bad)
jecxz
je
lods
inc
movs
call
and
aas
(bad)
movs
pop
jp
pop
adc
jb
xchg
call
cmp
xor
mov
add
mov
mov
sub
shr
mov
retf
mov
dec
imul
dec
add
inc
or
xor
ret
push
push
stos
outs
jmp
xor
xchg
test
call
pusha
mov
or
scas
jecxz
mov
mov
test
jmp
add
popa
jnp
ror
mov
xor
adc
outs
out
popa
mov
sub
xchg
xor
mov
push
or
jmp
push
je
pop
dec
jae
xor
mov
or
jns
lods
mov
pop
fmul
shl
xor
test
pop
adc
mov
aaa
sub
push
bound
sub
mov
dec
push
mov
xlat
mov
jo
pop
out
inc
ror
aaa
xchg
pop
inc
and
or
(bad)
dec
push
mov
mov
cmp
or
xchg
sbb
mov
mov
mov
bound
aad
data16
pusha
adc
aam
sub
pop
adc
and
test
inc
ins
xchg
inc
or
mov
fistp
push
adc
push
sbb
(bad)
xchg
lds
add
ss
les
xchg
push
rcr
sar
retf
and
mov
push
jbe
jp
dec
ins
out
jo
pop
ret
push
xchg
ror
inc
xor
jae
lods
pop
cmp
push
aaa
mov
sub
ins
push
shr
fist
stos
nop
adc
arpl
sub
inc
mov
sbb
jo
dec
push
jecxz
push
lods
or
and
les
sub
les
and
jo
mov
popa
rcr
arpl
sbb
dec
and
scas
adc
or
or
xchg
or
mov
xor
adc
test
les
fst
daa
mov
mov
adc
mov
adc
daa
xchg
jo
sub
cmp
add
adc
vrcpss
sbb
aad
repz
xchg
or
lods
cmp
adc
aas
aas
mov
xchg
pop
jg
pusha
add
jae
lods
call
add
mov
push
adc
sub
cmps
sbb
add
mov
stos
xchg
rcr
sub
dec
or
adc
mov
jmp
test
xchg
add
sbb
push
aaa
pop
fbld
cmps
and
sub
repz
lds
je
or
pusha
movs
mov
loop
lods
outs
ret
retf
adc
mov
ret
push
ins
jecxz
call
xor
rol
loopne
(bad)
mov
add
add
pop
test
xchg
mov
sti
lahf
mov
loop
ds
mov
push
mov
aaa
jmp
jecxz
out
sti
add
inc
pusha
add
xchg
dec
ret
pop
test
mov
addr16
add
out
add
inc
and
sub
sbb
arpl
mov
and
add
add
inc
xchg
adc
mov
cwde
push
adc
sub
sub
and
out
inc
loop
mov
test
sub
das
adc
les
mov
xor
adc
jge
add
(bad)
and
mov
add
das
fisub
inc
out
jno
imul
push
sahf
cs
imul
(bad)
pop
pop
push
dec
les
out
dec
xor
adc
dec
push
xor
sbb
neg
scas
sub
push
imul
mov
dec
dec
push
inc
aas
sub
pop
mov
repz
jae
jae
cmp
push
sbb
das
cmp
fcomp
ror
inc
dec
fisttp
mov
and
add
in
push
inc
inc
mov
fld
jbe
dec
jl
fistp
push
pop
adc
jmp
inc
imul
stos
dec
(bad)
mov
das
inc
or
jl
push
inc
push
sub
mov
mov
dec
(bad)
mov
and
cmp
push
inc
cmp
inc
or
jo
mov
xlat
cmp
sahf
mov
dec
pop
xor
adc
pop
aas
sub
ja
(bad)
lahf
dec
(bad)
or
add
or
add
mov
mov
dec
mov
mov
js
pop
mov
mov
dec
outs
push
push
add
pop
sub
xlat
push
inc
jmp
jle
or
fist
inc
popa
imul
add
pop
outs
(bad)
jno
xchg
iret
mov
and
sub
inc
cmps
sub
sub
push
or
test
cmps
xchg
mov
iret
out
inc
xchg
ret
dec
fisubr
dec
adc
mov
push
lahf
arpl
not
dec
daa
ja
cmp
mov
push
inc
inc
out
jmp
fild
out
inc
dec
and
xchg
inc
sbb
push
xchg
dec
fwait
push
ss
inc
jnp
cmp
rcl
cmp
sbb
mov
dec
push
pop
imul
dec
xor
repz
cld
mov
inc
xchg
sub
dec
add
lahf
shl
jno
mov
shr
push
movs
and
xor
mov
xor
imul
mov
sub
lea
sbb
jne
in
(bad)
xor
es
cmps
mov
dec
sbb
ret
dec
ins
xor
sbb
or
stos
movs
cwde
mov
or
sbb
ins
and
push
push
xor
(bad)
push
push
int
aas
push
mov
add
or
xchg
mov
movs
enter
add
and
test
shl
and
daa
xor
movs
scas
fwait
pop
or
push
das
cwde
inc
lods
dec
pop
scas
mov
inc
sub
sub
popf
xor
pop
dec
icebp
push
imul
inc
loopne
lods
sti
adc
mov
lods
aad
iret
ins
add
dec
lods
or
and
lds
adc
mov
ins
inc
mov
add
mov
jmp
es
dec
xor
push
push
inc
jp
push
popa
sub
jae
imul
push
mov
xor
pop
add
pop
or
mov
shl
sbb
xor
cmp
and
add
push
out
ss
sub
push
push
stos
aaa
mov
or
fadd
pop
daa
xchg
sub
rcr
(bad)
lods
xor
neg
arpl
les
fstp
inc
sub
add
inc
dec
cmp
push
dec
inc
and
sbb
inc
adc
outs
xor
push
ror
dec
shr
rcl
jg
popf
pop
test
pop
pop
add
mov
ss
sub
(bad)
push
pop
dec
push
(bad)
xlat
shr
dec
push
fsubp
mov
adc
and
xor
mov
pop
inc
and
popa
movntq
push
push
pusha
mov
call
dec
inc
(bad)
out
adc
int
sub
and
mov
mov
sti
push
mul
jmp
fs
add
cs
sbb
(bad)
jmp
and
sub
add
cmp
and
les
add
pop
lods
or
jg
sub
nop
push
add
adc
add
ja
adc
lods
fadd
stos
xor
imul
jne
pop
sub
cmps
adc
aas
xchg
pop
sbb
jno
cmp
xor
add
jae
add
or
aas
inc
bound
xchg
adc
add
add
fwait
pop
add
stos
jg
or
adc
or
push
adc
(bad)
mov
and
add
and
xchg
or
mov
push
pop
ins
(bad)
jnp
mov
stos
pop
add
mov
mov
add
mov
sub
dec
xor
adc
sub
dec
repz
aaa
jmp
inc
xor
pop
inc
movs
push
xchg
shl
mov
and
cmp
add
jae
pop
(bad)
clc
out
mov
lahf
or
inc
push
bound
push
sub
ja
dec
push
jecxz
pop
add
inc
xor
add
sub
rol
stos
xchg
or
mov
xor
(bad)
stos
enter
or
lods
add
or
test
push
push
pop
and
shr
add
and
inc
sub
xchg
inc
sub
xchg
cmp
shl
sub
je
dec
dec
mov
pop
adc
sbb
sub
or
ja
xor
(bad)
mov
sub
cmp
mov
xchg
xor
ins
jno
jnp
xchg
xor
jnp
push
and
inc
cmp
cmp
or
fwait
xchg
gs
push
or
push
mov
scas
inc
pop
or
or
xor
dec
je
aaa
(bad)
sub
jmp
daa
jmp
push
sbb
test
push
retf
fcmovnb
push
fild
adc
add
clc
sbb
or
(bad)
mov
add
sub
mov
sub
xor
pop
and
pusha
popf
fld
mov
stos
scas
sub
inc
(bad)
mov
dec
jns
imul
mov
pop
adc
mov
(bad)
jo
and
cmps
mov
inc
stos
add
add
adc
cmps
aaa
mov
xor
je
cmp
pop
aad
lods
outs
mov
jo
sub
iret
mov
pop
iret
push
pop
and
sti
movs
imul
retf
cmps
sub
fwait
adc
sbb
cmp
das
add
xchg
adc
push
add
retf
pop
lods
stos
inc
lods
retf
ja
or
test
daa
add
mov
mov
stos
idiv
pop
jbe
push
mov
test
sbb
inc
jecxz
xchg
mov
xchg
and
sub
inc
sbb
les
(bad)
dec
mov
xchg
mov
jmp
xor
or
push
iret
test
dec
xor
jg
ins
pusha
shl
xchg
sbb
push
jbe
mov
mov
test
xchg
bound
add
es
sahf
pop
stos
jo
sub
jb
and
mov
pop
retf
ret
mov
add
add
imul
dec
sbb
pop
mov
sbb
fwait
and
dec
repz
mov
test
(bad)
or
and
mov
ja
adc
sbb
push
pop
addr16
jg
mov
or
inc
idiv
sub
iret
mov
push
and
xor
sub
pop
out
mov
sub
xor
xchg
mov
test
inc
xor
inc
adc
and
sub
lea
dec
mov
lds
inc
dec
inc
push
add
adc
pop
shr
sub
pop
ret
push
cwde
mov
jecxz
xor
xchg
out
mov
push
inc
xchg
mov
test
imul
push
mov
cmps
mov
mov
sahf
mov
(bad)
loopne
jmp
mov
mov
ret
push
mov
mov
and
add
call
jmp
push
add
adc
xchg
mov
jecxz
jl
xlat
sahf
or
mov
arpl
ins
adc
(bad)
hlt
ins
lods
sbb
push
mov
lahf
mov
fcmovu
push
ret
adc
xchg
(bad)
test
mov
mov
mov
push
fisub
pop
or
inc
stos
cwde
or
pop
lds
mov
fild
mov
push
xor
je
call
push
mov
jnp
das
push
sub
add
outs
and
(bad)
hlt
(bad)
inc
sub
out
fs
call
out
adc
push
sub
dec
mov
hlt
pop
adc
inc
sbb
xor
pop
aaa
xchg
dec
mov
dec
shr
mov
xchg
nop
mov
push
inc
mov
out
pushw
add
jno
add
dec
cmp
imul
jg
or
outs
jo
ins
shl
mov
ds
push
sbb
pop
inc
dec
repz
push
and
ss
repnz
inc
ja
xor
mov
por
push
dec
pop
jo
sbb
or
mov
jb
xchg
pop
and
mov
xchg
(bad)
icebp
xor
rcr
inc
dec
add
mov
imul
ret
hlt
mov
push
xchg
mov
das
mov
jae
jo
sbb
push
cmp
mov
sbb
out
jae
pop
or
stos
leave
sbb
fs
lea
stos
pop
or
mov
js
xchg
dec
shr
imul
inc
fisub
movd
pop
cmps
dec
mov
ret
push
pop
imul
movs
add
jg
mov
or
jmp
shr
dec
sub
or
and
loopne
out
sub
inc
iret
dec
inc
and
dec
sti
push
imul
daa
push
ja
pop
add
fcmovnbe
aas
(bad)
sub
pop
jecxz
mov
push
mov
stos
mov
push
repz
loopne
outs
dec
jecxz
dec
sbb
cmc
ss
scas
stos
xchg
push
mov
imul
pop
inc
iret
repz
ins
add
jae
mov
(bad)
out
mov
add
call
lock
sub
addr16
lods
mov
pop
lds
dec
xchg
dec
sub
dec
dec
mov
or
xor
xor
xor
sbb
adc
movs
pop
mov
out
pusha
xchg
push
xchg
jmp
add
inc
or
inc
sub
adc
mov
fcmovnb
inc
add
or
fisttp
ins
mov
arpl
shl
rcr
pop
inc
movs
sbb
dec
stos
popa
and
test
or
add
inc
xor
jae
pop
loope
shr
dec
sub
daa
cmps
push
(bad)
aam
clts
or
fld
movs
or
xchg
bound
dec
lods
mov
cmp
cmps
push
or
mov
dec
(bad)
adc
mov
test
xchg
mov
arpl
and
sub
push
outs
bound
mov
dec
rol
and
xor
xchg
jmp
pusha
(bad)
stos
sub
ret
stos
xor
mov
mov
imul
adc
mov
sub
aam
outs
mov
and
push
scas
stos
retf
sbb
test
imul
adc
add
xor
dec
lods
push
sbb
call
scas
xor
ins
and
aam
dec
pop
xchg
sub
xor
or
test
push
fs
jns
add
test
arpl
pop
push
(bad)
sub
das
or
pop
adc
add
adc
sub
test
loope
dec
mov
xor
loopne
(bad)
emms
mov
and
dec
add
mov
mov
dec
add
mov
add
mov
outs
shl
bound
pop
inc
xchg
xlat
popa
and
push
out
pop
les
xor
stos
ret
pop
jne
dec
dec
inc
scas
push
inc
pop
repz
adc
nop
mov
add
gs
les
and
mov
dec
stos
inc
test
sar
pop
pop
mov
xchg
inc
xor
inc
dec
mov
mov
cmp
sbb
out
ds
xor
je
ret
xchg
imul
test
push
sub
shl
jmp
mov
mov
imul
adc
pop
jecxz
stos
dec
add
aad
inc
jnp
add
fwait
xor
pop
pop
push
arpl
push
push
push
cmps
inc
test
push
pop
movs
add
stos
fistp
and
sub
xor
pusha
pop
jle
(bad)
mov
and
stos
rcl
sub
add
(bad)
xor
mov
popa
jge
jecxz
push
imul
inc
adc
imul
mov
test
jmp
push
in
pop
pop
or
(bad)
iret
or
push
pop
mov
mov
pop
lods
arpl
adc
sub
sub
dec
ins
movs
stos
dec
das
minps
fadd
scas
cmps
out
inc
mov
mov
lods
adc
inc
(bad)
jo
call
lods
adc
ds
retf
xor
not
dec
ja
(bad)
mov
pop
dec
mov
or
in
mov
sub
cmp
push
test
inc
scas
aad
imul
(bad)
daa
outs
lods
clc
lods
cmove
(bad)
je
rcl
inc
push
out
dec
mov
das
push
mov
dec
push
imul
test
xchg
aas
or
test
fisub
jecxz
add
and
(bad)
stos
push
add
xchg
xlat
daa
sbb
push
push
sub
sub
das
and
sbb
dec
push
lahf
mov
push
ret
in
pop
xor
sbb
dec
mov
add
inc
add
(bad)
push
sub
jmp
mov
pop
push
jp
scas
and
and
push
push
xchg
sbb
aad
dec
out
inc
xor
sbb
mov
and
mov
daa
xchg
mov
xchg
mov
(bad)
retf
jae
mov
ror
adc
jmp
add
push
add
inc
retf
push
loop
pop
outs
lahf
mov
sub
sub
pop
jg
in
mov
adc
push
or
loopne
cmp
aad
loope
sub
push
dec
inc
(bad)
adc
inc
mov
mov
inc
sahf
inc
add
and
add
ret
jmp
pusha
inc
xor
ret
add
add
jnp
pusha
xchg
shl
outs
add
sbb
xchg
add
dec
pop
iret
push
pop
jo
jecxz
xchg
loopne
push
inc
dec
inc
repnz
mov
mov
imul
or
out
loope
push
push
dec
sti
push
xchg
loope
arpl
fdiv
mov
adc
sub
dec
push
mov
or
outs
loope
mov
jle
(bad)
aad
aaa
and
bound
fist
xchg
or
ja
daa
push
adc
xor
pop
stos
jp
mov
in
pop
out
and
sub
pusha
popf
rcl
xor
aaa
test
arpl
xor
fild
xor
inc
ins
(bad)
add
scas
xor
and
pop
mov
pop
imul
out
ja
mov
mov
add
ss
or
mov
pop
pop
push
dec
mov
inc
inc
pop
mov
and
sbb
stos
push
add
add
aaa
pop
pop
xor
jo
dec
idiv
dec
push
lods
popf
sahf
jnp
dec
dec
sbb
inc
ja
mov
mov
mov
add
retf
das
mov
adc
(bad)
stos
(bad)
outs
pop
test
or
inc
dec
pop
aad
pusha
cmps
mov
pop
sub
icebp
lods
lahf
mov
lea
test
and
or
imul
or
mov
movs
bound
jae
imul
inc
scas
daa
dec
(bad)
cmp
movs
inc
addr16
inc
les
xchg
fwait
bound
add
mov
xchg
mov
and
push
add
xor
les
push
and
xor
adc
jae
test
dec
xchg
shr
xor
jae
mov
and
pop
jnp
jmp
and
and
ret
xchg
arpl
outs
cmps
data16
add
test
mov
ret
fwait
push
pop
jns
sub
jne
and
imul
pop
dec
mov
pop
pop
push
and
(bad)
push
and
jno
pop
iret
xchg
xchg
and
adc
and
ja
xor
xchg
popa
inc
add
hlt
adc
stos
dec
adc
fiadd
inc
pop
scas
addr16
pusha
ret
inc
jecxz
ret
xchg
rcl
xchg
inc
inc
adc
sub
call
dec
push
push
pop
pop
cmps
dec
pop
test
inc
and
add
addr16
ret
add
mov
dec
enter
push
jl
push
ja
sub
ins
xchg
fnstcw
cmp
sub
pop
xchg
movs
push
cmp
sub
pop
mov
outs
out
xchg
je
adc
outs
pop
imul
jns
les
iret
popf
ret
lahf
mov
jae
popa
xor
dec
dec
pop
mov
adc
mov
out
test
push
and
or
arpl
jb
jo
sti
dec
mov
inc
mov
dec
inc
inc
sbb
sbb
jecxz
add
(bad)
div
jecxz
rcr
push
mov
ret
xlat
xor
inc
inc
pop
inc
inc
rol
mov
rcr
mov
push
jmp
adc
stos
sub
or
pop
push
pop
or
and
and
fs
inc
cwde
sub
sbb
cwde
lods
dec
dec
push
sbb
sub
(bad)
movs
sbb
test
daa
add
sub
test
or
ja
(bad)
mov
repz
movs
xor
mov
push
daa
stos
push
pop
and
push
sbb
xlat
inc
add
mov
inc
pop
mov
xor
stos
pop
inc
movs
adc
inc
or
movs
mov
rol
inc
je
mov
(bad)
push
inc
push
(bad)
mov
or
pop
ret
js
push
push
or
das
jnp
inc
pusha
add
(bad)
ret
cmp
rcl
shr
sub
push
call
(bad)
xchg
push
cmps
pop
xchg
inc
push
pusha
push
or
cmp
sbb
leave
addr16
push
pop
jo
mov
out
sbb
adc
out
and
push
das
sub
lds
jl
sub
push
add
sbb
fwait
(bad)
mov
mov
stos
out
add
mov
dec
ror
pop
xor
mov
pop
sbb
inc
inc
push
ret
or
sti
(bad)
cmp
movs
and
add
test
add
xor
xor
cmp
adc
(bad)
sti
sahf
(bad)
pop
sbb
add
add
add
add
adc
add
ds
sti
(bad)
push
or
add
add
add
aas
cmp
repz
mov
cmp
inc
or
cmp
aas
mov
fidiv
xor
push
xor
mul
popf
mov
dec
jmp
mov
inc
loope
cmp
cmp
xor
sbb
rol
xlat
ds
push
inc
sub
xor
imul
ds
and
xor
xor
repz
jo
aaa
dec
addr16
xchg
add
mov
mov
pop
inc
ss
dec
inc
scas
iret
pusha
imul
cmp
adc
or
cmp
xor
jge
inc
xor
ss
cmp
push
pusha
xchg
xor
xor
pop
cmp
loope
imul
in
jecxz
addr16
inc
push
ss
or
xor
mul
xor
lds
add
retf
fwait
scas
adc
sub
pop
sbb
push
jg
faddp
rol
pop
mov
ss
lea
ret
xor
cmp
and
mov
shl
loop
cmp
inc
dec
adc
dec
jmp
mov
cmp
aas
jecxz
add
enter
and
loop
mov
xchg
pop
outs
pop
jno
aad
cmp
xchg
fstp
sub
dec
sub
sub
mov
cmp
dec
(bad)
call
cmp
or
mov
into
ss
sti
inc
retf
adc
fild
cmp
fild
or
dec
imul
push
(bad)
jg
xor
retf
jecxz
xor
out
cmp
push
sar
sbb
mov
loop
xor
jmp
cmp
xchg
pop
add
outs
jbe
inc
das
fwait
cmp
push
fwait
addr16
iret
lods
shl
cmp
pop
mov
jle
outs
inc
fwait
xor
dec
loope
xor
in
lock
mov
ret
inc
jb
cmp
jo
pop
in
cmp
xor
sti
cmova
retf
imul
xor
inc
sub
lock
cmp
mov
adc
xchg
pop
and
cmp
sbb
sbb
jge
mov
push
push
sbb
repz
xchg
pop
cmc
push
cmps
idiv
pop
dec
sbb
pop
out
cld
aaa
xor
mov
cmp
inc
call
ja
rcl
add
scas
jmp
arpl
jle
mov
pop
sbb
add
add
lock
aaa
add
mov
push
scas
sahf
loope
aas
mov
cmp
or
cmp
rol
cmps
pop
dec
jmp
or
loop
jle
and
das
xor
aaa
push
mov
mov
(bad)
xchg
inc
push
fiadd
or
add
xor
(bad)
cmp
test
xor
leave
add
push
mov
mov
jne
rol
add
sub
movs
jp
xor
movs
in
imul
stos
rol
les
push
addr16
push
pushf
mov
or
popw
sbb
adc
cmp
xor
call
lds
rcr
add
inc
xor
pop
xlat
mov
sbb
cs
ins
mov
or
inc
mov
or
xor
inc
jnp
sbb
retf
pop
sbb
push
xchg
iret
dec
mov
cs
das
and
push
or
push
dec
jo
ret
push
jno
mov
int3
xchg
sbb
mov
xlat
cwde
sub
xlat
lea
jo
aaa
mov
lahf
sbb
push
aaa
mov
sub
loopne
test
cmps
loop
jg
fiadd
dec
xlat
stos
sbb
mov
mov
adc
mov
outs
sub
lock
xor
xchg
cmp
pop
mov
jp
jnp
push
xor
inc
xor
dec
daa
xchg
inc
sub
aaa
mov
adc
inc
cmp
retf
adc
push
sbb
sbb
or
scas
outs
xchg
adc
mov
inc
xchg
mov
out
inc
cmp
or
add
fbld
and
out
and
sahf
xchg
cmp
test
bound
or
pop
lea
lahf
loop
stos
or
ret
cmp
out
cmps
xor
stos
push
pop
sbb
fwait
fwait
ror
inc
addr16
xor
retf
dec
(bad)
add
dec
out
lods
push
scas
mov
mov
loope
pop
jmp
dec
pop
xchg
dec
mov
das
lods
push
bound
popa
repz
or
shr
xor
inc
lods
inc
mov
mov
(bad)
daa
cmps
inc
jmp
cmp
xchg
mov
mov
mov
(bad)
loopne
push
inc
ja
fwait
lods
pusha
jae
aas
(bad)
mov
inc
mov
lea
scas
das
inc
mov
test
mov
push
dec
cmp
jnp
es
imul
cmp
je
mov
aaa
cmp
cmp
lea
xor
and
sub
or
movzx
cmp
jecxz
xlat
mov
ret
bound
and
pop
lds
xor
mov
xchg
inc
adc
xor
fcom
push
ins
mov
xor
xor
call
push
adc
cmp
push
inc
and
push
pop
cmp
xchg
fcomip
test
rcr
pop
adc
dec
dec
mov
ds
add
lahf
mov
push
stos
retf
sbb
push
div
xor
xor
xor
aas
out
pop
mov
dec
push
mov
dec
xor
imul
xor
call
xor
sar
jecxz
cmp
inc
sbb
add
and
inc
mov
or
mov
ret
inc
fwait
push
push
add
jecxz
dec
addr16
ss
dec
pushf
cmp
jnp
cmp
loop
or
test
xor
ret
mov
xchg
sub
add
add
push
mov
(bad)
out
push
or
aaa
outs
jmp
cwde
cmps
add
sub
sub
inc
jge
call
popf
fstsw
sbb
es
add
xor
cmp
sbb
push
shr
pop
add
xor
mov
sbb
mov
das
inc
imul
cmp
or
lahf
xor
pavgw
pop
pop
add
add
movs
jbe
cmp
hlt
adc
inc
aas
jbe
adc
jo
loopne
ret
inc
xor
sbb
fnstsw
push
(bad)
loopne
test
push
jae
outs
dec
pusha
and
pop
jmp
pop
or
and
ins
or
mov
push
daa
cmp
sbb
aaa
les
cmp
inc
dec
inc
xor
add
ret
add
sahf
jno
fwait
jbe
call
mov
jmp
inc
sub
sbb
or
pusha
(bad)
imul
mov
fdiv
xchg
mov
imul
dec
sub
mov
iret
pop
cmp
add
mov
stos
jmp
fild
imul
jnp
cmps
das
push
lahf
inc
cmc
outs
xchg
out
repnz
pop
dec
lods
sbb
rcr
push
jmp
add
jnp
stos
stos
dec
call
pop
stos
xor
push
loope
push
sbb
cmp
dec
cmps
push
cmp
dec
retf
shr
(bad)
cs
ret
iret
adc
lea
cmp
sub
mov
aaa
cmp
cmp
adc
dec
pop
ret
fwait
mov
push
add
test
rcl
inc
add
sbb
jno
les
call
mov
sub
mov
jbe
ret
mov
stos
mov
inc
daa
cs
mov
nop
ja
sbb
mov
inc
cmp
xor
fwait
outs
xlat
xchg
push
mov
cmp
(bad)
das
push
test
pusha
ss
push
or
mov
lods
xor
sbb
or
sti
loope
imul
inc
sahf
shr
mov
sub
sbb
xor
mov
sbb
imul
sahf
out
dec
arpl
xor
es
jo
xchg
div
(bad)
cmp
xchg
push
int3
cmps
inc
dec
bound
inc
and
cmp
sbb
dec
ror
sub
jp
mov
ja
fwait
dec
rcl
cmp
inc
cmp
jecxz
mov
adc
xor
mov
push
popa
push
stos
add
xchg
retf
or
das
lea
sbb
sbb
mov
lahf
stos
xor
dec
imul
push
ins
pop
fwait
shl
pop
adc
aas
stos
ss
push
add
push
outs
adc
inc
xor
adc
mov
adc
ss
adc
xchg
scas
add
push
jmp
dec
mov
outs
or
daa
sbb
daa
sbb
or
or
dec
enter
aas
and
iret
xchg
jae
sahf
push
out
add
push
fisttp
mov
add
cmp
pushf
jmp
adc
loope
jecxz
or
and
aas
push
dec
mov
and
mov
mov
aad
add
add
mov
mov
mov
jne
and
xlat
aas
addr16
adc
xor
sub
pop
ret
lods
inc
das
and
mov
sbb
in
mov
mov
imul
(bad)
xor
(bad)
jecxz
xor
ret
addr16
mov
jle
xchg
xor
add
mov
pop
push
scas
cmp
pusha
fist
xlat
xchg
inc
pop
ins
fild
xchg
mov
repz
adc
sub
ja
xor
and
cmp
and
cmps
fwait
pop
cmp
test
pop
and
add
scas
cmps
sbb
(bad)
or
mov
hlt
cmp
inc
aaa
sbb
daa
scas
cmp
jne
push
mov
add
loope
scas
imul
outs
add
lahf
sti
aaa
or
test
adc
in
sbb
das
aas
add
xor
add
mov
jecxz
push
es
bound
cmp
xor
loop
jecxz
test
fidiv
mov
rol
aaa
push
adc
imul
mov
fbld
mov
fwait
cmp
ret
inc
pop
or
(bad)
xor
fwait
test
xor
inc
jae
xor
lahf
add
adc
(bad)
xchg
push
or
and
ja
xor
imul
mov
and
imul
mov
jecxz
ret
xchg
sub
mov
add
mov
and
and
add
mov
(bad)
sub
mov
cdq
push
neg
jae
cmp
push
push
(bad)
ret
push
inc
das
jmp
lahf
lods
lods
or
ret
out
lods
adc
sub
xor
jecxz
pop
aaa
cmp
retf
das
sub
inc
cmp
imul
dec
das
pop
fsub
shr
inc
lahf
mov
int
mov
loopne
test
dec
jmp
mov
sbb
cmp
mov
jg
mov
jno
lahf
repz
dec
jg
cmp
ror
adc
xor
jmp
lea
fucomip
adc
movs
inc
inc
mov
lods
jg
or
les
add
mov
dec
les
xor
adc
adc
hlt
jae
add
xor
xchg
ror
pop
mov
das
jecxz
in
movs
pop
(bad)
inc
or
mov
outs
out
pop
sub
add
xor
push
mov
xor
iret
mov
inc
dec
push
and
adc
mov
fbstp
or
arpl
out
movs
mov
pop
jecxz
add
push
jb
out
push
add
ficomp
sub
jl
stos
xlat
inc
xchg
lods
push
sub
(bad)
jg
xchg
cmp
loopne
jbe
arpl
dec
popa
or
addr16
jge
rol
pop
mov
pop
adc
mov
ret
xlat
sub
sbb
arpl
inc
add
ret
adc
push
cmps
cmp
sub
dec
ja
add
sti
ffreep
add
and
pop
pop
dec
das
sbb
and
jmp
xor
adc
push
jno
iret
out
push
mov
fistp
xor
jmp
sbb
mov
push
fiadd
adc
pop
mov
and
pop
jp
dec
xor
aaa
outs
cmps
inc
ja
dec
xor
pop
adc
jmp
or
push
pop
dec
cmp
mov
test
rol
sbb
fild
data16
or
and
cmps
sub
icebp
xor
retf
mov
call
inc
dec
imul
push
ds
stc
lods
jne
(bad)
xor
(bad)
or
(bad)
sti
add
jmp
fwait
aas
mov
mov
inc
div
shl
add
mov
mov
inc
inc
and
inc
mov
or
test
push
jg
outs
mov
pop
sbb
out
jno
mov
pop
pop
cmp
pop
imul
xor
and
mov
es
or
xor
or
or
mov
pop
(bad)
xor
add
js
xlat
add
or
call
lods
push
or
pop
lea
dec
out
(bad)
fcomp
sub
push
test
cmp
inc
xor
pop
xchg
mov
out
pop
mov
mov
sub
adc
xchg
pop
stos
imul
pop
aaa
jae
xchg
xor
aaa
sti
xchg
js
sbb
cmp
adc
sub
jecxz
mov
cmp
scas
sbb
jnp
push
xchg
cmps
fild
mov
cs
inc
jge
mov
out
xchg
cmp
jecxz
xlat
inc
scas
mov
xor
jmp
mov
jmp
arpl
sub
sub
call
dec
sub
adc
cmp
sbb
add
push
adc
and
or
xor
shl
pusha
in
jecxz
mov
mov
vpcomuq
mov
mov
mov
aas
cmp
jno
push
pop
xor
addr16
or
cmp
sub
inc
add
mov
sbb
dec
stos
push
ret
mov
fisub
loopne
xor
inc
outs
cmp
push
dec
scas
test
jg
adc
or
pop
test
and
movs
(bad)
pop
fistp
xchg
cs
aaa
sbb
push
pop
sub
jg
jmp
push
mov
inc
mov
test
xor
das
inc
imul
rcr
mov
mov
fwait
dec
das
test
or
fwait
mov
popa
fld
rcl
retf
aaa
mov
inc
add
add
mov
sbb
jne
imul
sub
sub
adc
cmp
xor
inc
dec
or
adc
push
xor
push
out
jp
mov
stos
js
cmp
xor
lea
sbb
pop
test
push
iret
add
pop
jae
ret
ds
xor
ds
dec
mov
shl
mov
xlat
and
inc
cs
xchg
ds
mov
adc
sbb
xchg
sub
test
addr16
test
xor
scas
sbb
mov
aas
cmp
pop
(bad)
mov
xor
inc
pop
ins
test
sub
jnp
push
lods
mov
enter
inc
inc
or
xor
cmp
pop
pop
jnp
add
mov
mov
mov
mov
or
dec
sbb
sahf
inc
repz
icebp
icebp
loope
fwait
mov
sbb
push
push
mov
sbb
jo
out
push
adc
jecxz
jnp
sub
or
inc
fadd
sbb
cmp
cmp
push
inc
or
sbb
je
sub
rol
popa
mov
inc
mov
test
out
loop
mov
and
sub
push
inc
mov
cmp
out
jne
sub
xor
test
push
sbb
movs
and
pop
mov
daa
inc
jg
mov
xor
lods
push
add
aaa
inc
ret
xor
inc
jmp
pop
add
arpl
popa
and
test
ror
daa
push
mov
sub
xor
or
xor
add
and
xlat
push
pop
jo
mov
addr16
sbb
scas
add
jae
les
pop
xor
and
xor
iret
mov
pop
ss
add
or
or
add
xchg
jmp
rol
sbb
or
xor
dec
cmp
and
lahf
inc
add
mov
(bad)
xor
stos
inc
ror
imul
pop
add
inc
inc
cmp
rcr
jp
loop
pushf
jo
imul
inc
fisttp
loop
(bad)
fild
mov
dec
out
mov
(bad)
pop
mov
mov
sti
pushaw
push
or
ret
adc
sti
pop
jmp
mov
push
aaa
ds
stos
aam
arpl
scas
pop
dec
xchg
inc
inc
addr16
stos
cmc
movs
xor
mov
movs
sbb
bound
popa
mov
sbb
mov
repz
or
sbb
es
cmp
pop
aaa
pop
test
adc
or
push
daa
outs
xor
push
mov
inc
xor
adc
push
and
shr
jmp
imul
(bad)
pop
and
aaa
arpl
inc
arpl
out
arpl
sahf
mov
jmp
daa
stos
push
sub
mov
dec
mov
jecxz
shr
jl
cmps
inc
cmp
pop
push
mov
lahf
sti
cmp
dec
ins
mov
mov
xor
and
(bad)
fwait
outs
lahf
push
pop
push
push
fwait
sbb
cmc
cmp
push
and
out
lahf
dec
jmp
add
ret
inc
pop
xor
lea
add
ins
pop
mov
dec
pop
pop
mov
push
and
or
push
push
cmps
dec
wrmsr
and
nop
inc
das
loopne
dec
sar
outs
dec
jp
movs
xlat
ret
push
cmps
nop
mov
jnp
mov
sub
jnp
(bad)
xor
or
and
stos
adc
mov
imul
xchg
cs
mov
adc
xor
lods
pop
addr16
enter
adc
add
lds
and
dec
mov
popa
add
(bad)
and
bound
pop
jb
push
ins
jae
and
add
loop
pop
adc
test
arpl
ins
(bad)
mov
test
ror
js
fst
inc
mov
imul
(bad)
fisttp
popa
mov
das
jmp
test
lods
fwait
pop
mov
sub
(bad)
mov
push
mov
adc
and
stos
call
das
imul
pop
dec
mov
cwde
cmps
inc
fwait
push
idiv
xor
add
cmp
jmp
inc
rcl
adc
add
xchg
stos
cmp
outs
fwait
mov
inc
jnp
stos
sar
pusha
les
dec
fsub
dec
arpl
xor
xchg
fiadd
or
adc
fidivr
jmp
sahf
nop
pop
sti
and
xor
repz
add
cmc
xor
out
dec
scas
mov
mov
push
and
ret
mov
mov
inc
outs
iret
adc
dec
fcom
fldpi
dec
dec
scas
js
mov
lods
ficomp
dec
loop
sbb
inc
scas
mov
pop
xor
or
lahf
dec
sbb
push
sbb
add
cmp
and
loop
push
xor
or
sub
pop
shl
(bad)
add
iret
inc
lds
pusha
xlat
pop
and
cmp
imul
test
mov
push
or
dec
adc
mov
ret
add
xor
test
test
aad
mov
adc
pop
sub
(bad)
sbb
aas
sub
xor
push
sbb
xor
ret
mov
test
cmp
int
sbb
sbb
repz
xor
lea
sbb
sub
inc
jmp
push
lods
inc
test
daa
mov
aaa
loopne
and
dec
mov
mov
xor
pop
sub
push
daa
rol
push
mov
ins
or
push
pop
add
inc
pop
ret
stos
(bad)
scas
inc
adc
adc
sub
xchg
xor
mov
test
retf
mov
lock
inc
pop
adc
mov
ror
sub
aaa
scas
xor
inc
movs
add
pop
adc
fisub
adc
xor
sub
adc
inc
lods
fist
inc
mov
pop
or
pop
inc
push
out
push
add
push
aaa
repz
jmp
sbb
test
cs
fidivr
and
jmp
loop
push
xcrypt-cbc
cmps
push
push
add
or
or
test
out
jne
sub
xlat
aam
sub
add
pusha
mov
adc
scas
fdiv
pop
ds
dec
test
xchg
scas
jb
test
or
scas
add
or
(bad)
test
mov
les
mov
jecxz
(bad)
adc
stos
fld
push
fild
ret
and
mov
and
xchg
push
jg
xchg
arpl
mov
cmp
pop
and
adc
inc
les
jmp
add
outs
fidivr
add
inc
pop
mov
or
inc
scas
pop
and
les
(bad)
sti
xlat
ds
add
or
cmp
je
mov
inc
(bad)
pop
mov
add
mov
jecxz
lea
fdivr
lods
jmp
and
daa
push
adc
adc
xchg
xchg
test
stos
xchg
sbb
daa
dec
add
(bad)
jmp
sub
(bad)
xor
or
sbb
adc
pop
adc
and
xlat
(bad)
pop
aad
and
iret
repz
jecxz
add
shr
frstor
mov
sbb
mov
or
movs
pop
pop
sti
jne
out
jp
cmp
xlat
mov
push
aas
cmp
stos
inc
mov
xor
ja
bound
pop
adc
pop
loopne
mov
mov
jbe
outs
sbb
(bad)
push
or
imul
stos
pop
fwait
mov
arpl
stos
sbb
jecxz
and
imul
xchg
pop
lds
adc
scas
inc
test
xchg
xchg
xchg
les
sub
xor
mov
pop
lods
sbb
and
lods
loopne
and
xor
add
push
add
and
xor
mov
inc
jecxz
mov
inc
out
mov
push
stos
les
and
shl
xor
push
add
sub
dec
stos
mov
add
inc
dec
dec
adc
cmp
jmp
xor
and
sub
cs
inc
push
xor
sub
adc
mov
sbb
inc
imul
xor
arpl
and
inc
outs
ins
ds
out
imul
aad
adc
add
leave
xlat
dec
test
push
push
xor
inc
out
movs
adc
jp
cmp
and
sbb
mov
loope
inc
mov
jne
retf
cmp
add
movs
mov
xchg
mov
xlat
das
sbb
movs
inc
sub
xchg
imul
add
lods
idiv
xor
aaa
aas
inc
xchg
lods
adc
add
aas
push
scas
imul
loope
push
imul
xchg
cmp
pop
pop
ins
adc
out
mov
cmp
inc
dec
(bad)
mov
or
adc
jmp
scas
inc
pop
aam
test
mov
ret
dec
push
mov
retf
inc
iret
add
pop
ror
push
dec
pop
jnp
(bad)
push
loopne
test
repnz
stos
sbb
push
aad
push
inc
cmp
stos
dec
sub
inc
cmps
cmps
outs
ins
scas
repz
lea
sub
pop
cmps
push
xchg
cs
jmp
sub
cwde
mov
das
shr
add
fild
(bad)
inc
jae
mov
repz
pop
sub
push
imul
nop
test
dec
enter
sbb
test
scas
stos
cmps
push
mov
or
push
adc
push
add
aaa
add
pop
and
mov
or
push
scas
push
add
or
xor
sub
xor
arpl
retf
in
xchg
push
aaa
pop
inc
jmp
push
add
push
movs
or
(bad)
and
outs
addr16
dec
sbb
xchg
adc
mov
add
shr
aam
ja
xlat
cmp
xchg
inc
xor
pop
mov
fimul
(bad)
shl
jmp
xchg
ret
push
inc
rcr
adc
popa
dec
or
retf
mov
stos
xor
xor
push
mov
fidivr
arpl
inc
jmp
lods
adc
cmps
and
daa
pop
add
adc
dec
pop
inc
cmp
sti
je
pop
push
pop
inc
jg
xor
div
or
cmps
cmp
xorps
and
or
or
fild
push
test
push
mov
or
popa
inc
sub
mov
outs
adc
test
sub
lods
cmp
mov
scas
push
adc
inc
iret
pop
in
aam
xchg
(bad)
pop
test
jb
cmp
and
sub
gs
lds
ja
xlat
mov
daa
call
sub
add
push
aaa
dec
mov
aaa
jmp
or
jg
inc
sbb
gs
shl
aas
pop
popa
test
push
fbld
dec
pop
pop
push
ja
test
out
xor
xor
jg
push
call
mov
sbb
mov
mov
pminub
addr16
movs
stos
add
pop
sub
or
lahf
stos
adc
rol
loopne
cmps
push
or
stos
mov
pop
mul
(bad)
ud0
mov
(bad)
mov
das
int
pop
xor
add
nop
or
jnp
adc
inc
dec
xchg
adc
jae
fadd
mov
mov
aas
imul
jecxz
fstp
ja
not
xor
add
aaa
jg
inc
or
inc
cmp
push
inc
sub
pop
scas
cmp
adc
sbb
jmp
sub
push
shr
lds
xchg
arpl
mov
fist
sub
stos
imul
pop
mov
or
rcr
push
inc
adc
adc
inc
idiv
xchg
cmp
push
sbb
ins
pop
outs
bound
mov
add
and
out
xor
sbb
test
lea
xchg
(bad)
and
add
pop
push
dec
xchg
and
pop
ja
inc
cdq
ret
das
addr16
lods
adc
pop
aaa
inc
test
stos
dec
xor
xchg
dec
add
xor
daa
mov
imul
mov
les
mov
inc
and
push
test
cs
jmp
sbb
addr16
bound
sti
jmp
bound
cs
inc
ins
movs
jae
dec
push
add
jno
sbb
(bad)
adc
inc
jmp
xor
push
test
lods
xchg
pop
fwait
and
(bad)
or
adc
or
xor
je
push
add
sbb
add
aas
sbb
mov
pop
add
cs
sub
cwde
dec
ins
push
das
or
stos
mov
mov
dec
push
add
lds
mov
sbb
(bad)
pop
and
lods
add
out
push
pop
mov
inc
fstp
fnstsw
xchg
cmps
jo
fistp
stos
fwait
or
or
mov
push
inc
lods
jmp
mov
fild
cmp
or
add
xchg
push
xchg
add
(bad)
out
sbb
movs
mov
push
or
sbb
add
or
inc
inc
mov
iret
jg
adc
mov
adc
bnd
mov
pop
(bad)
and
inc
lea
jg
push
adc
lods
cs
es
sub
pmullw
mov
retf
pop
das
add
pusha
pop
add
jg
inc
cmp
inc
cmp
push
xor
sub
adc
in
aam
and
push
adc
mov
add
mov
sub
popa
or
lods
push
xchg
fistp
das
push
xchg
test
call
fild
pop
test
ret
das
add
inc
mov
mov
or
xchg
stos
push
push
and
and
mov
add
ds
fwait
mov
mov
push
xor
xor
add
xchg
ds
inc
es
sub
or
adc
sub
mov
out
xor
lods
and
sub
push
adc
push
loope
pop
cmp
shr
repz
xor
cdq
jbe
pop
pop
push
and
movs
mov
jne
nop
imul
cmp
mov
inc
jno
stos
mov
push
inc
ins
imul
add
mov
call
or
sbb
inc
stos
lods
adc
mov
push
rsqrtps
adc
push
fadd
sbb
call
adc
ret
push
push
mov
dec
and
xor
(bad)
dec
das
mov
retf
pop
mov
arpl
mov
inc
call
xor
and
test
idiv
cmp
stos
or
xchg
push
adc
xlat
stos
pusha
inc
mov
add
and
je
mov
or
ins
adc
adc
mov
mov
xor
add
(bad)
dec
mov
inc
push
push
or
xor
xor
inc
mov
sbb
sub
xchg
inc
out
xlat
mov
push
adc
imul
push
dec
retf
or
jae
shl
test
(bad)
rol
dec
test
aaa
arpl
ret
xchg
lods
add
cmp
add
loope
mov
dec
and
xor
dec
and
cmp
adc
or
imul
or
and
test
fs
xchg
adc
sub
sbb
arpl
mov
push
or
sub
cmps
aas
lahf
(bad)
lds
(bad)
scas
mov
or
sar
cmova
arpl
(bad)
repz
inc
mov
adc
add
push
or
retf
xor
(bad)
push
div
arpl
adc
xor
adc
mov
and
dec
daa
add
add
mov
xor
adc
inc
cmp
addr16
add
ins
add
loop
movs
add
mov
sbb
addr16
mov
sub
adc
adc
mov
inc
mov
xor
cmp
mov
sbb
pusha
adc
pop
xor
inc
pop
cmp
sub
xlat
retf
dec
ins
and
xlat
pop
jae
mov
das
cmovp
sub
pop
lahf
cmps
push
push
lods
pop
aaa
pop
mov
lds
inc
or
xchg
adc
daa
mov
dec
bound
test
lea
add
and
packsswb
and
(bad)
cs
inc
sbb
inc
dec
jnp
push
mov
ins
mov
adc
sub
ins
stos
add
or
mov
adc
lods
add
out
ret
mov
dec
add
mov
test
inc
inc
pop
sub
adc
sbb
pop
or
and
add
scas
ror
xor
cdq
adc
jbe
imul
push
iret
inc
or
arpl
add
lods
nop
inc
loopne
cmps
mov
lds
fwait
xor
inc
call
lods
push
xchg
rcl
inc
add
jg
xchg
xor
jmp
or
ret
ja
xor
xchg
adc
xor
lods
push
and
push
lods
push
sti
dec
mov
sub
rol
adc
mov
add
dec
lods
in
inc
cmp
(bad)
ds
xchg
mov
aas
xor
aas
and
out
adc
mov
sub
mov
inc
and
jnp
(bad)
sti
inc
adc
push
or
adc
inc
outs
arpl
je
mov
mov
loop
xchg
pop
ret
and
int3
xchg
mov
mov
pop
xchg
xor
xchg
lahf
loope
sbb
inc
mov
inc
pusha
rep
mov
dec
pop
sbb
outs
ins
xor
pop
js
pop
or
adc
fwait
inc
mov
stos
and
cs
mov
push
inc
xchg
jg
sbb
fst
fwait
push
(bad)
pusha
lods
outs
sbb
mov
cmp
pop
sub
sub
outs
cmp
jmp
push
dec
inc
xchg
jle
popa
bound
loopne
cmp
ds
and
movs
xchg
cmp
cmp
call
push
cmp
mov
cmp
xchg
dec
or
xor
mov
rol
pop
iret
cwde
sbb
fimul
xor
mov
(bad)
dec
push
lods
test
mov
test
fbstp
ror
(bad)
jnp
xor
jg
xor
pop
cmp
xchg
push
adc
cmp
xor
mov
and
inc
inc
fild
mov
add
xor
push
inc
test
mov
inc
dec
outs
pop
sbb
pusha
xor
cmp
arpl
pop
push
xlat
pop
sub
lods
shl
les
adc
test
jmp
xchg
cmp
mov
xor
stos
mov
xchg
lods
and
aas
cvtpi2ps
dec
(bad)
fbstp
stos
add
nop
(bad)
mov
and
add
sub
shl
sbb
rcr
mov
dec
or
xchg
(bad)
imul
push
scas
fwait
add
inc
and
push
mov
xor
stos
dec
dec
shl
and
push
stos
mov
cmp
pop
xor
arpl
mov
lods
mov
adc
ss
sub
and
add
shl
add
imul
cdq
les
fwait
shr
nop
push
movs
push
and
stos
ret
outs
shr
mov
sub
inc
add
cmp
movs
aas
iret
xor
and
jecxz
mov
mov
jecxz
loopne
or
lahf
js
add
adc
iret
movs
add
cmps
sbb
outs
shl
dec
adc
or
cwde
movs
add
mov
and
and
addr16
sbb
aad
lds
and
add
cmp
xchg
or
inc
mov
(bad)
or
mov
out
jae
adc
and
shl
fild
push
add
adc
inc
mov
sub
outs
pop
(bad)
and
imul
loop
mov
inc
mov
xor
pop
push
xor
aaa
outs
adc
stos
cwde
imul
bound
inc
xor
daa
cmps
mov
pusha
xor
jecxz
sbb
mov
test
arpl
rcl
and
or
sub
aaa
loop
adc
adc
popf
sbb
scas
mov
xor
adc
and
out
sub
sbb
push
push
sub
sub
ss
add
xor
stos
sub
movs
jnp
jnp
pop
and
in
fidiv
dec
sbb
bound
(bad)
outs
adc
sbb
xlat
jge
shl
xor
pop
aaa
sbb
pop
popf
cmps
jge
ficom
clc
ficomp
cmp
sub
adc
pop
mov
aaa
and
mov
pusha
shl
or
ins
pop
push
mul
add
adc
dec
pop
push
mov
sbb
sub
xchg
adc
sbb
mov
daa
(bad)
sbb
push
sar
adc
fwait
sbb
mov
or
cmp
and
xor
stos
jnp
mov
sub
iret
push
pop
inc
xor
or
das
and
xchg
adc
xor
cmp
daa
ss
dec
sbb
pop
out
push
outs
clc
jno
je
sbb
daa
sub
sub
sub
push
sbb
out
pop
cs
retf
sbb
adc
add
push
sbb
mov
jg
sub
(bad)
in
lds
and
into
sbb
jmp
pop
loope
and
sbb
mov
adc
jnp
jg
das
cmps
sub
dec
fsub
sti
das
out
adc
(bad)
mov
fcmovbe
lds
sub
sub
dec
xor
and
adc
test
adc
dec
sub
das
pop
xchg
idiv
jp
mov
in
js
fist
xorps
mov
cmp
xor
imul
(bad)
loop
in
xchg
xchg
xor
inc
and
and
sbb
sti
scas
call
push
dec
and
mul
xchg
jg
mov
pop
mov
xchg
xchg
(bad)
adc
pop
outs
pop
pop
stos
inc
cmp
sbb
adc
push
push
ds
xchg
das
and
ffree
popa
sbb
xchg
div
rcr
pop
add
adc
push
or
sti
mov
inc
iret
scas
arpl
jg
and
mov
cmp
(bad)
movhps
jo
push
inc
outs
inc
pop
adc
xlat
ss
cwde
add
pop
les
cmp
lahf
inc
dec
inc
arpl
mov
push
fs
jbe
popa
imul
pop
sub
fbld
and
and
les
jmp
mov
jp
pop
repz
push
iret
lods
ret
sbb
xchg
xchg
mov
add
push
mov
jmp
cmp
or
adc
cmp
dec
popa
push
mov
push
or
push
xor
inc
test
arpl
pop
push
and
fdivr
shr
ins
cmp
stos
adc
push
jo
sbb
and
and
xchg
ror
pop
dec
lea
scas
inc
out
stos
xchg
and
cli
stos
arpl
xor
mov
or
pop
push
popf
adc
ret
rcr
pop
adc
push
das
sub
and
or
xor
adc
inc
pop
dec
(bad)
sub
inc
sbb
xor
sub
sbb
jecxz
adc
sbb
xor
mov
jne
mov
push
outs
push
inc
sub
mov
xchg
arpl
mov
pop
shl
pop
jmp
shl
sar
mov
mov
call
mov
fidivr
lahf
(bad)
rcr
xor
adc
test
(bad)
out
and
(bad)
bound
cmps
add
or
adc
sbb
popa
pop
test
push
mov
inc
lahf
adc
mov
pop
cmp
ins
ins
outs
out
add
sub
xlat
push
and
mov
xor
add
push
sti
jg
mov
and
stos
mov
mov
mov
pop
jnp
add
(bad)
add
imul
push
fs
sub
push
push
out
pop
aad
lahf
inc
mov
sbb
add
pop
xlat
or
(bad)
or
or
call
inc
pop
mov
test
inc
fild
fcom
lahf
jmp
test
div
push
out
and
(bad)
scas
push
add
lods
add
mov
(bad)
call
sbb
adc
sub
push
mov
xor
out
push
es
or
mov
cmps
xor
pop
xor
or
push
adc
xor
mov
stos
mov
fadd
mov
xchg
dec
mov
aas
arpl
inc
rol
pusha
lea
xchg
add
push
retf
mov
adc
xor
out
cmp
jl
or
jno
pusha
lods
mov
add
pop
mov
scas
sub
sbb
sbb
scas
mov
and
inc
or
fwait
inc
push
mov
push
and
inc
jmp
or
xor
jno
or
xor
jmp
or
add
aaa
and
push
push
mov
adc
xchg
arpl
call
mov
adc
sub
or
mov
push
xchg
xor
test
aas
xchg
xor
bound
cvttps2pi
and
inc
(bad)
ret
inc
cmps
add
pop
cmp
xor
cmp
add
enter
mov
mov
push
add
add
neg
inc
les
jmp
call
add
sbb
adc
dec
mov
int
arpl
jmp
sub
xor
(bad)
xlat
int
push
push
dec
dec
push
push
adc
dec
loopne
inc
or
loopne
jo
xor
pop
push
sbb
sbb
pop
jo
push
lods
adc
push
xchg
pop
sub
add
arpl
pop
add
jmp
inc
loope
cmp
popa
lds
pop
pop
and
xor
aas
adc
xor
das
cmps
sbb
and
cwde
or
rol
outs
inc
and
sbb
sub
sub
aaa
xchg
loopne
fistp
dec
mov
pop
loop
dec
call
stos
sbb
sbb
mov
rol
ret
retf
pushf
rol
adc
inc
and
addr16
push
push
fdivr
fwait
(bad)
or
stos
push
cs
jmp
ins
lods
push
jg
bound
xor
xor
add
(bad)
sub
fiadd
adc
iret
sti
test
or
inc
stos
cmp
fild
xlat
mov
pusha
adc
or
push
fistp
adc
adc
xor
out
xchg
fadd
sub
adc
arpl
mov
jb
sub
in
jno
lahf
and
call
and
jl
icebp
cmps
(bad)
dec
or
dec
dec
sub
inc
xchg
mov
stos
cmp
scas
pop
or
mov
inc
cmp
xor
rcl
inc
fsubr
adc
inc
and
mov
imul
sbb
xchg
imul
push
call
mov
ffreep
outs
popa
ins
inc
out
repnz
adc
lea
xor
push
mov
inc
lds
sub
mov
mov
nop
push
sbb
inc
adc
xchg
aam
inc
shr
stos
xor
and
je
fistp
and
inc
repnz
cwde
(bad)
jnp
stos
sub
stos
and
xor
adc
cmp
sti
pusha
loop
mov
mov
push
scas
inc
xor
jmp
inc
or
inc
inc
not
outs
jecxz
jnp
pop
stos
xor
pop
sub
push
fwait
paddq
dec
jmp
test
sub
fistp
mov
mov
or
pop
ins
pop
mov
bound
jecxz
add
mov
and
adc
xor
imul
dec
xlat
sub
outs
xrelease
(bad)
aam
mov
adc
aam
mov
pop
retf
sub
inc
mov
add
push
inc
(bad)
lods
jmp
imul
dec
test
push
xor
xchg
mov
pop
aam
inc
dec
push
aaa
test
mov
xor
arpl
shr
push
enter
adc
imul
or
push
cmovae
push
adc
rol
pop
(bad)
pop
xor
fisttp
sub
dec
stos
scas
or
inc
rcl
shr
dec
arpl
sar
retf
and
add
xor
inc
sti
pop
fwait
lods
inc
sub
and
js
ss
sbb
sbb
add
dec
add
mov
inc
popf
dec
push
cvtdq2ps
sub
mov
sub
and
or
inc
ins
and
cmp
dec
pop
pop
nop
jg
inc
mov
imul
shl
mov
repz
xor
ret
mov
test
fimul
xor
pop
mov
popa
push
pop
imul
or
(bad)
and
xchg
sbb
xor
jp
fist
sub
stos
mov
inc
call
jo
push
push
or
rcl
and
dec
arpl
movs
adc
xlat
mov
and
sbb
shl
outs
aaa
xchg
inc
pop
jecxz
sbb
jmp
adc
adc
shl
fcmovb
adc
and
xchg
aaa
mov
jmp
inc
sub
sbb
xor
adc
add
jle
push
pop
and
hlt
or
sub
out
sub
pop
loopne
xchg
push
out
sbb
stos
repz
arpl
adc
pop
imul
fwait
inc
and
jecxz
push
div
pop
sub
jg
aaa
hlt
outs
lahf
sbb
imul
ss
push
xchg
and
mov
fstp
add
ja
mov
push
outs
ja
fwait
mov
cmp
outs
sbb
stos
mov
xchg
push
pop
adc
cmp
fisttp
push
rol
adc
fbld
dec
imul
dec
dec
mov
mov
(bad)
repz
add
inc
jmp
imul
cmp
sbb
sbb
stos
in
or
jnp
out
dec
xor
daa
and
add
xchg
mov
xchg
pop
or
(bad)
xrelease
fdiv
dec
push
and
adc
stos
sahf
push
(bad)
adc
out
leave
(bad)
retf
or
stos
mov
mov
push
and
imul
sub
fst
(bad)
sbb
jmp
aaa
sbb
mov
inc
lahf
sub
adc
fnsave
jecxz
push
sti
xchg
push
lds
dec
iret
mov
imul
imul
jbe
iret
jg
jne
add
push
sub
sbb
jne
sbb
aam
pop
push
out
sub
call
xor
add
cmp
or
mov
push
shl
aas
pop
mov
imul
sub
push
lahf
pop
add
stos
and
jnp
sbb
push
imul
mov
stos
cwde
das
inc
dec
xor
and
adc
retf
mov
push
sbb
outs
inc
ror
mov
inc
pop
xchg
push
(bad)
pop
aaa
jmp
xchg
ror
hlt
fdiv
test
xor
mov
ret
mov
das
ret
jecxz
sti
jno
add
dec
mov
pop
stos
adc
adc
adc
aad
jmp
adc
sti
push
jb
add
aas
adc
mov
jmp
adc
adc
lods
lods
mov
fstp
add
sbb
sbb
je
push
ror
adc
dec
cmp
dec
adc
mov
out
(bad)
rcl
jb
pop
add
or
mov
cmp
push
inc
adc
cmp
lock
out
das
jnp
arpl
cdq
call
push
and
cmps
ss
sbb
mov
cmps
and
jo
mov
test
xor
dec
pop
mov
dec
mov
out
jne
add
dec
adc
push
fst
shr
push
sbb
aam
cwde
mov
inc
test
adc
aad
sub
inc
js
push
pop
cmp
stos
ret
fstp
daa
adc
push
push
and
test
push
or
inc
ret
or
jmp
xor
or
mov
dec
aaa
bound
push
mov
or
sub
pop
xchg
adc
adc
adc
xchg
jmp
or
or
bound
or
ds
add
mov
pop
xor
fwait
pop
xchg
cmp
das
jnp
push
add
adc
adc
sbb
das
shl
xor
sahf
add
add
ret
pop
aas
pusha
test
and
aas
sub
xlat
ror
mov
dec
inc
cmp
mov
sbb
inc
or
and
sbb
add
test
sti
push
push
sub
or
push
leave
fcom
xor
mov
daa
lahf
fadd
and
inc
pusha
outs
(bad)
pop
sbb
xor
pop
jae
movs
movs
daa
popa
packsswb
cmps
xchg
mov
xchg
or
aaa
lods
xchg
outs
xor
imul
pop
rcl
imul
push
ja
(bad)
and
cs
pop
(bad)
mov
add
jg
clc
je
pop
xor
and
push
or
lahf
clts
loop
imul
pop
push
mov
stos
dec
pop
xor
jnp
mov
xor
cmp
pop
mov
cmp
xor
and
punpckldq
(bad)
and
aad
fiadd
sbb
inc
je
xchg
cmp
adc
xor
xor
ficomp
(bad)
(bad)
sub
sub
dec
ret
aas
cli
rcr
outs
dec
mov
in
popa
push
sub
xchg
loopne
cmps
movs
aas
pop
pusha
push
sub
and
fild
push
sub
and
imul
mov
xchg
arpl
daa
movs
cmp
add
pop
fist
pop
or
or
ds
pop
inc
pusha
sub
push
or
and
jg
adc
stos
rol
adc
imul
mov
lods
add
add
adc
jg
stos
or
add
mov
mov
mov
loope
jmp
xchg
mov
inc
cmp
inc
mov
mov
pop
mov
lock
adc
or
call
xor
jecxz
hlt
push
push
or
lock
xchg
nop
jecxz
pop
adc
push
sbb
stos
adc
sub
pop
dec
add
pop
cmps
push
ret
mov
push
dec
add
mov
sbb
mov
in
dec
(bad)
(bad)
ret
mov
xor
cmps
adc
bound
push
cs
clc
pop
sbb
jne
sub
adc
ins
aam
pop
fist
adc
out
sub
pop
aaa
and
and
and
fisubr
sbb
out
push
pop
shr
pusha
adc
sbb
sbb
add
or
sub
lods
sub
imul
lds
in
inc
stos
and
shl
sub
test
dec
out
mov
mov
xor
cmp
xchg
sub
lods
sub
jmp
scas
cmp
add
sub
mov
fcom
lods
pop
ja
xlat
pop
stos
sbb
sbb
mov
push
les
adc
add
push
aas
stos
mov
add
iret
(bad)
fwait
sub
fmul
ins
daa
stos
sub
add
mov
sub
in
dec
cmp
call
lahf
cs
pop
ret
adc
sbb
dec
fdiv
fstp
daa
mov
stos
adc
xor
jmp
adc
test
out
pand
jnp
mov
js
call
cmps
sbb
pop
das
mov
(bad)
xlat
sbb
jmp
inc
test
shl
and
add
push
jg
xlat
stos
sub
fwait
mov
push
sbb
add
jae
sub
test
mov
js
push
jmp
fmul
test
sub
mov
inc
(bad)
sub
jecxz
and
and
test
xchg
test
adc
test
sbb
popa
xor
shl
or
fwait
xor
adc
mov
sti
dec
mov
cmp
push
mov
add
xchg
and
or
sbb
xchg
add
inc
cmp
jecxz
jnp
xchg
adc
inc
pop
into
popa
mov
pop
pop
arpl
jae
inc
inc
and
push
dec
sbb
add
jmp
push
mov
shl
dec
xor
js
xchg
jg
cmp
retf
push
sbb
push
test
adc
lods
mov
sub
pop
inc
add
jg
xchg
dec
and
sbb
inc
adc
dec
adc
idiv
(bad)
or
dec
jl
pop
(bad)
jo
jo
or
sbb
jnp
in
cmp
cmps
mov
dec
lods
or
aaa
adc
lahf
shr
mov
jne
pop
imul
shl
(bad)
and
stos
add
out
popa
or
jmp
push
push
xor
push
fwait
adc
dec
pop
add
ret
sub
aaa
test
cmp
sbb
jg
pop
mov
loope
push
push
dec
loop
mov
(bad)
mov
bound
xchg
push
add
xchg
xchg
add
btr
sub
inc
movs
add
aaa
dec
(bad)
dec
jno
repz
test
pop
and
scas
push
stos
movs
mov
out
call
adc
dec
arpl
dec
inc
cmp
nop
xchg
out
xor
cmp
(bad)
cmp
pushaw
adc
cmp
push
cmp
test
sbb
add
mov
fwait
jecxz
fs
lods
and
fist
xchg
stos
je
rcr
cmp
cmp
mov
mov
ficom
mov
xor
das
add
xor
mov
and
inc
xor
cwde
push
mov
mov
mov
fidiv
or
arpl
pop
push
or
cmps
adc
movs
mov
adc
add
or
inc
add
and
sub
sub
out
repz
and
addr16
push
or
ss
sub
lahf
ror
xor
inc
pop
stos
fwait
das
lods
push
pop
adc
lds
daa
adc
dec
or
sub
das
push
inc
and
add
pop
dec
or
aaa
das
and
mov
mov
mov
in
push
mov
sbb
retf
ja
xchg
xchg
xchg
xchg
(bad)
adc
ret
xor
mov
movs
imul
(bad)
jg
add
mov
rcr
call
sbb
push
mov
daa
mov
ret
add
and
lsl
sbb
dec
and
mov
xchg
mov
cmp
xor
out
pop
sub
sbb
cmps
jbe
push
and
push
(bad)
push
xor
inc
rol
xor
adc
arpl
lods
les
stos
or
mov
adc
mov
sub
xchg
das
mov
jno
mov
dec
jecxz
les
jg
ja
mov
pop
pop
jg
and
jnp
dec
mov
xrelease
mov
and
dec
or
and
mov
add
es
jmp
or
sub
pop
or
out
add
outs
pop
dec
jno
mov
xor
mov
or
pop
arpl
repz
stos
cs
test
cwde
jecxz
sbb
ror
add
adc
cmp
aam
adc
or
pop
adc
push
pop
jg
mov
aad
rdtsc
push
add
(bad)
pop
jae
sub
and
jg
push
push
push
stos
imul
jecxz
push
mov
inc
sbb
mov
pop
daa
mov
scas
push
sbb
push
jae
mov
mov
adc
lahf
xchg
pusha
push
sbb
cmp
xor
push
adc
lods
mov
les
and
xchg
mov
mov
add
sbb
mov
mov
retf
loopne
mov
scas
xchg
call
jb
iret
xor
ja
mov
sbb
iret
inc
fwait
dec
push
push
inc
xor
dec
add
mov
dec
sbb
xlat
arpl
bound
pop
adc
mov
jno
mov
outs
frstor
adc
jnp
mov
data16
stos
add
test
adc
add
sbb
inc
xchg
arpl
push
cmp
ret
aas
repz
lock
imul
cmp
repnz
xor
mov
mov
inc
mov
push
seta
push
xchg
xlat
imul
sbb
jg
xor
fwait
pop
int
inc
js
ret
jnp
push
stos
xrelease
dec
or
pop
pop
adc
cmps
rcr
ja
sub
loop
sub
ja
fist
test
add
add
or
imul
add
pop
pop
into
stos
mov
pop
pop
pop
sub
push
xchg
addr16
or
(bad)
jmp
scas
add
test
(bad)
add
dec
add
jmp
popa
xor
adc
shr
mov
pop
adc
add
jge
cmps
imul
and
dec
xchg
iret
and
push
inc
call
push
and
aaa
pop
push
xchg
mov
sbb
adc
pop
adc
lahf
and
into
loope
fadd
jg
and
lahf
xor
mov
retf
shl
(bad)
adc
inc
dec
pop
ret
and
xor
mov
add
adc
lock
or
push
fild
jo
pop
out
sbb
xor
push
jno
push
mov
pop
enter
push
or
pop
ja
and
test
out
pop
inc
popa
pop
inc
pop
sti
add
(bad)
pop
cs
mov
add
les
xor
and
pop
push
xchg
push
adc
leave
xor
leave
and
xor
xor
and
xor
xor
mov
nop
add
and
adc
sub
adc
gs
and
xor
xor
adc
xor
adc
jo
xchg
add
sub
dec
adc
xor
inc
test
sbb
jle
mov
xor
add
xor
dec
xor
xor
mov
adc
enter
and
xor
xor
and
enter
add
sub
pop
xor
xor
mov
repnz
xor
xor
data16
dec
adc
gs
xchg
sub
pop
push
mov
mov
xor
jle
adc
add
add
sub
push
jg
or
stos
in
or
add
add
pop
dec
sbb
mov
cdq
and
add
inc
or
add
adc
sub
dec
push
push
push
xchg
inc
daa
leave
add
adc
inc
xor
xor
push
xor
xor
xchg
sub
xor
xor
xor
xor
sub
mov
aaa
push
and
add
cmp
adc
mov
aaa
add
or
or
push
gs
jae
add
mov
loop
xor
mov
xchg
xchg
dec
and
mov
dec
and
adc
dec
and
adc
inc
lahf
mov
retf
mov
je
(bad)
imul
mov
inc
repz
dec
mov
add
add
jo
mov
mov
add
adc
add
adc
adc
push
or
sub
mov
movs
mov
cmp
mov
add
fs
enter
adc
dec
dec
and
mov
dec
and
adc
dec
and
adc
xchg
ja
dec
and
inc
sub
mov
add
retf
or
es
add
sub
and
dec
xchg
push
and
mov
and
add
mov
inc
push
adc
adc
add
push
inc
mov
mov
loope
mov
xor
xor
xor
xor
cmps
sub
push
cmps
xor
jns
dec
bound
scas
sti
paddd
(bad)
push
adc
xor
xor
xor
out
(bad)
jg
pop
xor
xor
xor
cs
jmp
and
xor
punpcklwd
push
sub
fucomi
mov
push
outs
inc
aas
enter
dec
push
xchg
(bad)
out
sub
xor
punpcklwd
cwde
xchg
xor
xor
(bad)
(bad)
out
mov
xor
inc
xor
dec
xor
add
test
idiv
call
dec
and
pop
or
mov
push
add
inc
(bad)
xor
push
pop
dec
xor
push
retf
int
sti
sub
mov
xor
(bad)
dec
cmp
scas
mov
mov
and
jmp
retf
xor
hlt
data16
ret
push
pop
push
outs
mov
xchg
xchg
xchg
fcmovbe
ins
test
push
mov
ret
retf
imul
or
clc
lss
or
sub
xor
loop
outs
xor
pop
xor
loopne
cwde
rcr
stos
mov
push
add
outs
xor
mov
jb
dec
mov
jp
sbb
jns
xor
nop
scas
test
pop
xor
jb
push
fwait
xchg
sbb
mov
xlat
jo
fidivr
push
xor
push
fdivr
not
xchg
lea
mov
repnz
retf
dec
ins
imul
mov
ja
dec
data16
adc
inc
add
mov
pop
pop
inc
jge
mov
out
retf
and
loope
pop
pushf
sub
pop
out
push
in
pop
mul
loop
push
mov
cwde
sub
(bad)
xchg
fsubrp
xor
or
fidivr
xchg
enter
and
bound
xchg
arpl
jecxz
dec
adc
jecxz
dec
das
test
mov
inc
stos
jp
dec
push
jcxz
div
or
push
xor
or
iret
push
into
add
fstp
addr16
add
test
test
dec
addr16
lock
and
jg
ss
push
dec
xor
sbb
push
shl
test
stos
ins
pop
jno
dec
jmp
scas
or
(bad)
pop
push
stos
jno
jnp
arpl
pop
push
push
mov
sub
ss
xor
lahf
add
cmp
push
dec
loopne
and
jnp
mov
cwde
xor
jle
mov
cli
dec
mov
add
push
jo
mov
jecxz
test
ffree
mov
imul
jg
in
sub
pop
jnp
lahf
dec
cmp
push
popa
add
mov
or
test
add
pop
js
ins
adc
adc
rol
dec
sti
fsub
xchg
fcomip
addr16
push
xchg
arpl
pop
push
pop
add
shr
push
sar
mov
ja
jbe
xchg
or
jae
mov
pop
add
adc
mov
push
sbb
sub
push
jne
shl
cmps
arpl
push
mov
or
das
data16
aaa
push
jp
add
xlat
(bad)
sahf
push
fisttp
pop
not
out
out
and
ins
cli
push
pop
jbe
loopne
push
jge
jp
call
mov
xor
bound
popa
fs
sti
xchg
sar
xchg
pop
xchg
dec
out
inc
push
sub
call
dec
xchg
dec
hlt
inc
and
sti
lahf
pop
mov
in
mov
outs
fst
mov
jne
mov
call
lods
iret
outs
sbb
add
adc
cmps
mov
mov
add
pop
mov
das
test
inc
shl
fisttp
xor
scas
shr
sbb
pop
sbb
jbe
ds
mov
inc
ss
add
push
sbb
in
(bad)
aad
add
aaa
pop
dec
mov
xchg
pop
xchg
les
push
(bad)
les
aad
adc
vpunpckhqdq
(bad)
or
fiadd
neg
sbb
out
shl
add
ficomp
in
pusha
jb
cmp
mov
add
mov
ja
push
bound
jnp
cmp
mov
xchg
shr
(bad)
fistp
mov
dec
(bad)
xor
mov
xor
push
xchg
sub
out
test
add
jbe
test
test
adc
pop
push
nop
mov
(bad)
mov
ja
jo
pop
in
pop
rol
out
jp
addr16
sti
outs
cmps
imul
pop
dec
cmps
stos
dec
mov
xchg
pop
adc
out
or
push
mov
pop
jb
and
mov
(bad)
push
xchg
outs
mov
add
loop
adc
arpl
add
(bad)
cmp
(bad)
xlat
push
dec
sti
mul
test
pop
mov
leave
and
add
mov
sar
mov
dec
cli
pop
outs
xchg
sbb
jge
mov
or
sub
pusha
push
adc
jmp
push
mov
int3
xchg
ja
or
mov
and
xor
dec
dec
jb
push
lock
loop
mov
loop
jp
push
arpl
sub
pop
in
push
jmp
call
test
nop
push
push
lahf
push
xor
push
fwait
addr16
push
lock
mov
xor
xor
hlt
xor
jge
push
mov
and
out
les
ud0
xchg
mov
ins
adc
bound
mov
addr16
aas
lock
mov
shl
mov
cmps
and
nop
outs
push
les
sub
dec
pop
outs
inc
cmc
cmps
jecxz
xlat
adc
mov
jmp
mov
or
push
icebp
pop
ja
ficomp
outs
fdivr
inc
jbe
push
mov
push
push
mov
sti
inc
test
aad
dec
jmp
and
out
push
cmp
xor
bound
js
in
pop
adc
sbb
push
dec
lods
dec
repnz
and
sbb
add
stos
rol
cmp
jmp
shl
and
das
sbb
xor
adc
(bad)
push
jge
addr16
jne
(bad)
mov
rcl
lahf
or
sbb
adc
push
sti
add
popa
push
arpl
xor
outs
outs
sbb
in
pop
add
jae
add
jge
xchg
xor
add
jae
or
and
jg
rol
adc
pop
ja
or
popa
pop
call
neg
pop
push
mov
adc
sbb
mov
(bad)
outs
and
test
push
in
or
pop
push
outs
scas
scas
imul
adc
scas
push
(bad)
scas
outs
enter
pop
retf
inc
xor
jne
ja
adc
mov
mov
push
add
push
ins
test
lahf
mov
jmp
loopne
mov
lahf
add
ja
sbb
sub
ret
inc
mov
aad
push
mov
adc
sub
dec
in
add
ud0
fsubp
shl
(bad)
clc
js
mov
add
add
pop
inc
xchg
cmp
les
scas
adc
pop
call
inc
sbb
bound
mov
xor
mov
jmp
ret
push
dec
sbb
ds
fmul
push
xor
jmp
les
pushw
jns
sub
add
cmp
pop
leave
aas
sbb
scas
js
cmp
push
add
(bad)
(bad)
arpl
cmp
mul
(bad)
scas
rcl
sbb
bound
lods
(bad)
nop
or
enter
xor
adc
ja
inc
sub
sbb
imul
sub
pop
push
mov
ja
imul
imul
push
ffree
lods
jmp
sahf
outs
add
ds
pop
xor
rcl
jecxz
js
or
adc
test
inc
or
repz
out
push
test
push
addr16
xchg
adc
mov
jnp
xor
or
fiadd
xor
push
out
punpcklwd
(bad)
jne
loop
fild
mov
out
dec
arpl
call
add
shl
loopne
push
add
les
sbb
inc
xchg
scas
jmp
push
push
push
pop
cmp
push
push
pop
pop
jmp
add
pop
or
adc
loope
sub
aam
add
out
shl
(bad)
cmp
jmp
pusha
adc
add
(bad)
add
test
push
pop
xor
cmps
push
mov
popa
imul
sub
ja
and
ss
mov
ret
stos
adc
enter
mov
(bad)
or
push
(bad)
mov
outs
and
pop
gs
push
pop
je
sub
test
mov
outs
or
ss
gs
dec
mov
cmps
daa
outs
loopne
stos
or
pop
sub
out
data16
or
dec
les
dec
out
jbe
dec
outs
aas
in
pop
shr
xor
inc
pop
mov
and
pop
jbe
loopne
cmps
dec
mov
addr16
pop
xor
add
aaa
mov
in
push
dec
pop
xor
cs
xor
and
sti
movs
xchg
cli
ret
add
cmc
pop
adc
sti
or
je
or
add
cli
scas
inc
and
sbb
push
pop
push
aaa
mov
pop
mov
add
add
add
mov
push
pop
daa
inc
sbb
xor
(bad)
mov
shr
lock
(bad)
pop
xlat
xchg
enter
mov
add
leave
xchg
add
out
ds
push
ds
stos
pop
push
pop
retf
dec
dec
xor
pop
add
mov
(bad)
iret
xor
xor
pop
loop
push
push
inc
dec
dec
inc
(bad)
out
xor
popf
push
std
push
push
mov
repz
jmp
neg
mov
or
ss
mov
nop
test
or
pop
popa
jo
mov
jg
cli
jecxz
push
dec
dec
jb
out
pop
push
add
imul
xlat
das
js
push
jg
dec
jge
push
shl
jbe
arpl
xchg
xchg
push
ret
and
pop
inc
push
bound
mov
and
outs
das
xchg
rcr
push
sbb
pop
jp
sti
sbb
mov
xor
and
xchg
shr
loop
push
xlat
lahf
fistp
or
push
outs
outs
data16
loop
push
ret
push
xchg
add
sbb
daa
xchg
inc
test
mov
arpl
shr
push
or
push
outs
jg
sbb
sub
adc
jne
push
or
or
rcr
sti
push
imul
jp
cwde
push
lds
pop
pop
push
ret
pop
(bad)
push
jo
test
xchg
push
and
ja
xchg
and
mov
push
inc
dec
mov
or
imul
pop
clc
add
jb
mov
mov
in
cmp
aaa
add
or
push
sub
es
cmp
and
dec
push
(bad)
mov
fbstp
daa
and
loope
adc
daa
into
outs
iret
jae
cmp
jg
fdivr
pop
adc
or
add
daa
iret
or
out
mov
pop
pop
push
mov
or
aas
lea
dec
dec
data16
push
pusha
adc
(bad)
ret
outs
or
adc
xchg
pop
push
mov
mov
neg
mov
inc
jno
xchg
adc
push
movs
mov
sub
pop
push
or
jl
scas
sbb
or
xchg
mov
scas
psrlq
sub
xchg
sbb
push
mov
pop
xor
push
aam
add
xor
add
and
shr
popa
cmp
mov
cmp
push
outs
push
dec
xchg
fadd
xor
dec
stos
jp
push
mov
fwait
dec
out
cli
or
(bad)
xor
mov
mov
div
cmp
sbb
inc
imul
or
sub
loope
or
mov
sub
jge
add
out
retf
test
cli
ins
inc
stos
cs
push
je
dec
xchg
repnz
xchg
(bad)
pop
inc
inc
xor
daa
pop
xor
dec
adc
inc
add
nop
pop
push
ja
xor
add
inc
test
push
inc
outs
scas
xor
mov
and
stos
inc
movs
push
maskmovq
div
pop
push
pop
mov
mov
sub
fs
dec
pop
popa
sub
jmp
ss
lods
inc
push
sti
fiadd
and
(bad)
or
ficomp
cli
xlat
scas
mov
mov
mov
and
xlat
pusha
inc
rcl
pop
cmp
jne
xchg
sbb
xchg
cmp
push
mov
dec
mov
dec
adc
(bad)
sbb
push
cmps
pop
scas
mov
sub
mov
fiadd
mov
inc
jge
sahf
push
pop
add
push
test
xchg
out
mov
push
push
ss
add
arpl
adc
ja
or
pusha
or
daa
adc
pop
arpl
ins
add
loop
or
mov
inc
adc
mov
add
daa
pop
nop
add
add
addr16
test
or
bound
xchg
and
fcomp
pop
mov
mov
jecxz
enter
push
nop
imul
and
jnp
push
sti
xor
outs
sbb
ficomp
(bad)
dec
mov
and
inc
sub
sahf
add
inc
aaa
stos
xor
imul
fsubr
imul
inc
mov
jmp
xchg
push
push
loop
xchg
call
sbb
fwait
or
shr
pop
jo
pop
arpl
pop
xchg
(bad)
das
mov
jnp
daa
xchg
sbb
or
outs
and
outs
pop
aaa
jmp
xchg
dec
(bad)
sti
sbb
in
dec
add
add
mov
pop
inc
mov
repz
ret
push
sub
inc
(bad)
mov
cmp
dec
and
loopne
mul
sbb
adc
jno
push
push
push
call
fs
pop
sti
xchg
jno
loop
movs
bound
push
scas
mov
or
stos
push
add
imul
jnp
add
test
in
jb
jp
adc
xchg
push
pusha
push
sub
adc
test
xor
cmp
mov
outs
or
inc
sub
jp
sahf
and
mov
dec
xchg
aaa
imul
dec
push
dec
ds
or
and
(bad)
call
add
retf
jge
ds
mov
mov
rol
fistp
adc
es
mov
dec
cmp
push
jmp
or
add
mov
push
popa
xor
ins
xchg
not
repnz
push
xchg
xchg
sbb
sti
outs
sti
fild
and
inc
jge
fwait
outs
and
jo
sbb
push
bound
test
ins
adc
or
push
add
loopne
cmp
adc
out
or
cmp
push
mov
xor
test
cmp
pusha
push
jnp
pusha
mov
(bad)
pop
fwait
xchg
dec
int3
and
test
js
sti
repnz
iret
stos
xor
cmp
loop
jecxz
add
in
mov
dec
or
outs
pusha
fild
and
mov
cmp
push
repnz
je
out
or
mov
mov
push
fdivrp
pop
dec
xchg
add
cmp
cmp
outs
or
scas
xor
and
xchg
xchg
mov
test
mov
shl
gs
push
(bad)
adc
pop
(bad)
xor
push
mov
stos
mov
dec
add
sti
jg
inc
ds
cmp
retf
mov
push
pop
add
sbb
mov
cmps
(bad)
and
dec
adc
ror
mov
loop
xchg
sbb
push
fsub
push
xrelease
mov
fist
adc
jmp
jnp
mov
push
dec
mov
int
jno
inc
shl
jo
pop
mov
mov
xchg
fisttp
push
popa
das
mov
xchg
jb
dec
imul
pop
add
mov
pop
sbb
and
imul
cmp
or
test
jmp
mov
pop
xchg
mov
mov
cmp
xor
push
jge
and
dec
sti
outs
sti
enter
xor
mov
mov
arpl
jo
xor
test
inc
jo
cdq
cwde
push
pop
mov
test
add
adc
push
or
pop
inc
mov
mov
and
imul
jle
or
retf
jmp
ja
or
push
xchg
push
stos
pusha
push
add
dec
lds
daa
inc
punpckhwd
fs
adc
mov
stos
jbe
daa
mov
xor
push
jae
pushf
movs
js
data16
push
mov
repz
adc
xor
aaa
pop
add
fdivr
aas
dec
shl
loope
or
cmp
mov
xlat
sti
shr
sub
jp
jmp
pop
rcr
adc
pop
sub
mov
jecxz
dec
push
jecxz
mov
add
xlat
xor
add
or
sti
repz
dec
rol
fcomp
rol
enter
(bad)
outs
outs
fwait
push
rol
pop
into
and
mov
jae
mov
shr
imul
imul
adc
xchg
addr16
imul
fistp
push
sbb
push
add
outs
push
add
(bad)
push
sbb
add
nop
xchg
cwde
adc
adc
cmc
adc
push
addr16
pop
and
dec
dec
shl
push
sub
adc
popaw
and
fmul
pop
mov
mov
aad
sti
loop
mov
lock
or
dec
push
mov
inc
icebp
add
out
jb
int
pop
dec
push
or
mov
rcl
push
dec
inc
inc
sub
xor
mov
outs
bound
xchg
or
nop
das
jnp
xchg
mov
add
push
sub
inc
mov
mov
xchg
and
sti
add
inc
loope
jmp
jmp
aaa
xchg
sub
dec
fsubr
inc
add
and
sbb
sub
mov
pop
mov
loop
pop
pop
fcmovb
mov
imul
mov
inc
and
ja
jnp
adc
push
dec
pop
and
mov
push
cli
mov
sub
inc
sbb
lods
mov
add
mov
xor
cmp
jp
cmp
xor
sub
adc
sub
pop
xlat
test
outs
jg
neg
mov
push
mov
lods
jge
or
cmp
imul
mov
push
or
mov
cmp
dec
pop
lahf
pop
fwait
das
jl
push
xchg
pop
outs
sub
lock
cmp
sub
imul
xlat
jns
add
inc
sub
jbe
arpl
sub
sbb
test
pop
enter
cmp
loop
(bad)
rep
inc
mov
ss
add
mov
mov
cmp
(bad)
add
inc
sar
xor
push
mov
and
mov
inc
aas
adc
push
push
je
sbb
mov
bound
add
data16
mov
sti
sub
add
xor
retf
or
icebp
add
dec
(bad)
in
sahf
lods
mov
dec
jmp
adc
jnp
ja
in
adc
rep
mov
pop
fwait
mov
push
movs
sbb
fistp
sub
or
pop
es
cmp
imul
or
pop
or
pop
and
sbb
inc
arpl
stos
inc
dec
cmps
(bad)
mov
jbe
stos
stos
xchg
in
pop
adc
push
js
xor
test
push
cld
js
push
jle
xor
add
addr16
mov
pop
pop
mov
dec
push
add
add
dec
outs
dec
je
shl
retf
rcr
or
xor
mov
mov
pop
aam
add
call
je
jne
pop
sub
pop
str
adc
and
sub
push
fdivp
arpl
movs
daa
out
imul
out
xchg
pop
xchg
push
and
or
data16
stos
repz
shl
push
push
fwait
inc
ret
jo
mov
or
in
cs
dec
xor
push
imul
xor
sbb
sub
and
dec
adc
mov
add
(bad)
pop
movs
pop
aas
dec
outs
fisttp
pop
or
out
lahf
mov
add
mov
ins
add
inc
xchg
ret
scas
sub
jmp
jecxz
add
test
mov
imul
xchg
pop
jae
rcr
ficom
ret
mov
inc
xor
lods
xlat
pop
les
mov
push
mov
pop
pop
outs
rol
repz
out
xchg
ret
push
pop
inc
xchg
(bad)
adc
add
ja
xchg
cmp
js
mov
xor
mov
mov
cmp
scas
repz
push
add
add
jns
imul
adc
inc
pop
ret
dec
add
sub
scas
push
jecxz
and
mov
add
jecxz
xchg
add
movs
outs
jecxz
add
sbb
prefetchw
mov
jbe
pop
addr16
aas
shr
pop
jae
push
ins
imul
mov
mov
or
push
pop
gs
xor
outs
retf
push
push
mov
and
or
fild
ja
cli
dec
pop
pop
inc
and
jo
sub
mov
(bad)
add
(bad)
and
aaa
xor
xor
loope
adc
push
fmul
mov
push
jnp
mov
dec
jle
movs
jbe
xchg
outs
xchg
add
add
push
aas
fwait
adc
fsub
daa
inc
push
test
cmp
arpl
sbb
bound
jecxz
cvtps2pi
sub
push
push
push
idiv
sbb
and
mov
imul
push
pop
add
ret
(bad)
pop
ja
jmp
mov
push
mov
test
test
ja
inc
pop
stos
mov
push
ficomp
push
outs
loopne
xor
push
adc
pop
sbb
xchg
sbb
jae
outs
bound
jecxz
adc
xor
sbb
push
mov
test
pop
jae
stos
pop
xor
rcr
mov
push
or
mov
imul
nop
push
loope
sub
xchg
scas
push
push
adc
sub
repz
add
aas
xor
xchg
(bad)
xor
push
rcl
sub
sub
sub
or
nop
(bad)
repz
dec
sub
(bad)
outs
ret
cmp
not
sub
pop
cmp
and
or
test
push
and
(bad)
push
push
add
xlat
push
in
pop
or
jmp
dec
popf
movs
adc
aaa
jle
mov
ins
adc
cmps
call
outs
jno
or
push
aas
fwait
sbb
shr
jmp
cmp
jnp
dec
lods
sub
push
mov
fs
(bad)
adc
adc
rcr
imul
sub
push
test
fidivr
rcr
cwde
lahf
sti
jae
xchg
pop
sbb
jne
inc
dec
pop
inc
adc
mov
or
jae
rol
sub
push
xor
and
cmp
loopne
retf
cmp
push
(bad)
and
(bad)
cmp
xor
adc
jg
cmp
ret
xlat
shl
add
stos
iret
xor
dec
stos
mov
cmp
pop
(bad)
dec
jns
mov
mov
push
push
mov
repz
push
mov
pusha
mov
movs
arpl
scas
mov
retf
inc
jge
ja
(bad)
xchg
xchg
xor
loope
(bad)
stos
add
push
jle
dec
mov
pusha
fist
sbb
movs
popa
add
fidiv
mov
inc
sbb
and
outs
outs
shr
nop
popf
xor
loop
push
sbb
sahf
push
ror
cmp
shr
xchg
or
stos
dec
push
push
jae
mov
clc
sbb
in
jb
sub
repnz
pushf
hlt
jecxz
pop
test
xchg
push
out
mov
dec
dec
jmp
dec
cs
shl
add
mov
mov
js
adc
fwait
pop
add
loope
jp
jg
push
mov
push
adc
fwait
ret
fwait
jne
retf
or
fbld
pop
mov
mov
mov
inc
mov
inc
cmp
sub
xchg
sub
bound
sub
loopne
outs
shr
dec
lea
pop
mov
ss
mov
push
xchg
iret
imul
push
inc
outs
mov
push
fwait
mov
adc
push
pop
adc
inc
cmp
inc
dec
add
ror
xchg
add
or
fwait
xchg
mov
mov
xor
jnp
mov
rcr
lock
shr
pop
or
stos
daa
cmp
push
add
mov
test
jmp
sub
mov
pop
dec
push
dec
scas
jp
pop
xchg
sub
ficomp
push
dec
xor
das
xor
mov
mov
or
pop
push
stos
jle
sbb
out
xor
pop
lahf
cmps
outs
adc
out
add
pop
imul
fcmovu
neg
mov
xor
(bad)
pushf
pop
imul
inc
jg
lds
jle
fimul
add
movq
cli
(bad)
add
add
lods
adc
or
mov
xchg
mov
lods
mov
or
imul
bound
loope
xlat
mov
xchg
arpl
rcr
push
pop
adc
ret
scas
cmp
add
mov
fisubr
jnp
sbb
iret
imul
les
push
mov
icebp
out
test
push
jle
jecxz
xchg
mov
push
jmp
outs
add
sub
(bad)
cmps
sti
or
or
gs
sub
dec
les
push
pop
or
adc
push
js
ret
pop
bound
loop
mov
lods
inc
ror
push
arpl
sub
or
jno
(bad)
aas
dec
lock
test
retf
inc
adc
jg
cmp
imul
push
test
call
and
iret
(bad)
or
pop
(bad)
mov
inc
loope
inc
test
add
inc
and
aas
test
adc
or
add
pop
out
sti
jo
dec
repz
fisub
push
sti
scas
scas
and
push
(bad)
bts
mov
and
or
mov
pop
inc
xchg
cmp
outs
pop
jbe
rcr
and
pop
add
das
aaa
mov
das
xor
xor
add
cmp
arpl
and
test
imul
sahf
cmps
and
dec
adc
imul
add
test
addr16
jbe
cmps
xchg
jne
or
pop
rcr
mov
or
inc
imul
test
ja
and
jnp
cmp
add
out
sub
ficomp
rcl
ret
iret
inc
pop
fbld
iret
pop
cdq
rcl
ret
stos
or
mov
test
xor
cmp
push
imul
push
cwde
mov
inc
(bad)
sbb
adc
mov
lea
add
sub
(bad)
dec
add
(bad)
push
cmp
aam
cmp
repnz
mov
push
inc
sbb
repz
mov
lock
push
sti
fisttp
outs
test
and
inc
mov
adc
push
inc
shr
pop
jbe
jbe
sbb
add
add
addr16
es
das
outs
jnp
(bad)
jg
sub
retf
mov
push
test
jb
sahf
pop
jo
daa
rol
mov
fldlg2
fdivr
pop
push
ror
xchg
mov
or
ret
(bad)
xchg
cmp
push
xor
sub
and
and
movntps
(bad)
add
mov
mov
movs
bound
test
repnz
xor
mov
sar
jecxz
jns
mov
sbb
sub
sbb
fs
lds
xchg
fs
adc
data16
push
bound
and
shl
movs
pop
adc
outs
jnp
adc
imul
ret
or
pusha
cdq
mov
inc
xchg
or
add
sub
add
loopne
mov
mov
out
dec
mov
xchg
xchg
pusha
and
or
inc
add
xor
sub
mov
mov
pop
adc
mov
mov
iret
add
sar
xchg
aas
add
add
push
add
adc
ja
add
or
inc
jmp
imul
sub
jbe
cs
dec
pop
push
xlat
jecxz
jo
ja
(bad)
jle
lea
xchg
mov
add
mov
push
and
imul
fwait
mov
hlt
cmps
push
add
xor
mov
mov
or
push
dec
sub
imul
jae
push
and
sbb
fld
mov
(bad)
mov
mov
rol
cmp
aaa
push
sub
push
stos
sub
cli
pusha
jno
call
popf
popa
cs
das
and
pop
pop
lds
dec
xlat
ret
adc
push
xor
ret
dec
adc
aaa
mov
mov
pop
fwait
push
push
dec
arpl
dec
mov
adc
sbb
push
add
or
and
pop
mov
adc
jno
sub
adc
mov
sub
sbb
push
data16
sub
push
or
cmps
pop
jb
or
xor
movs
or
imul
and
rcr
pusha
push
sbb
dec
adc
inc
mov
push
push
push
rcl
push
xchg
addr16
xor
test
jge
add
mov
dec
add
and
xchg
dec
jg
stos
cmp
sbb
imul
pop
add
ret
pop
aaa
push
mov
ss
push
(bad)
sub
les
dec
inc
add
lock
es
jmp
push
arpl
scas
daa
xchg
sbb
and
pop
and
mov
lods
retf
pop
jb
ja
sbb
stos
jecxz
les
xor
mov
dec
dec
dec
(bad)
xchg
jg
inc
push
or
fild
push
call
dec
or
data16
dec
iret
and
iret
inc
stos
idiv
xor
push
imul
push
push
mov
sub
out
dec
(bad)
sti
jecxz
cli
sub
mov
xchg
push
mov
fcmovne
bound
lods
cmp
mov
xor
and
aaa
pop
(bad)
dec
jmp
ret
xor
pop
outs
mov
adc
mov
pop
jo
jge
shl
inc
pusha
div
cmp
mov
push
pop
add
ret
xchg
sbb
arpl
mov
arpl
scas
dec
dec
xchg
dec
pusha
fst
sti
mov
out
xchg
stos
movs
outs
mov
dec
and
ret
dec
sti
shl
test
(bad)
fiadd
pop
xor
in
stos
push
daa
mov
cmps
mov
popa
les
ja
xor
jae
add
dec
sti
adc
cmp
or
test
xchg
and
mov
jmp
mov
pop
lods
dec
pop
sbb
add
add
outs
jg
lea
or
mul
imul
jnp
pop
maxps
iret
adc
cdq
jmp
test
in
add
add
mov
or
fmulp
pop
les
lea
sub
arpl
cmp
push
add
dec
cmp
sub
lea
xchg
or
push
push
push
es
xchg
or
jo
call
pop
movs
jno
scas
imul
mov
sbb
out
mov
icebp
mov
fistp
mov
jg
sub
fcmovb
mov
xor
shl
repz
test
lods
add
movq
mov
inc
mov
push
lock
loopne
xchg
daa
pop
iret
jmp
dec
fs
push
movs
ss
fwait
sahf
inc
jl
and
mov
mov
mul
dec
sub
jae
scas
clc
or
ins
dec
cli
push
jnp
push
adc
dec
jnp
mov
push
mov
out
or
ja
xchg
or
or
pop
jnp
js
ins
add
lahf
fisub
or
pop
push
mov
jno
aas
cmp
add
pusha
inc
pop
mov
movs
or
outs
add
sbb
sub
outs
bound
pusha
mov
mov
add
das
mov
fist
push
push
gs
push
jnp
mov
sti
adc
pop
add
(bad)
jmp
push
mov
in
jmp
and
mov
jmp
pop
iret
pop
ret
xlat
push
push
lods
fild
or
sti
test
cmp
add
xchg
(bad)
not
lahf
jp
xchg
mov
mov
pusha
push
lahf
pop
jecxz
mov
sbb
or
sbb
pop
lods
xchg
jp
or
iret
(bad)
shl
jae
xor
jmp
jp
sbb
mov
push
xlat
inc
bound
sbb
daa
aas
xor
and
push
xor
or
les
cmp
inc
mov
dec
sub
mov
test
push
and
mov
or
jnp
dec
push
dec
bound
xchg
mov
mov
ret
in
(bad)
mul
adc
mov
adc
dec
dec
xchg
fild
or
adc
add
mov
ja
pop
inc
mov
push
or
js
push
push
cmp
data16
mov
add
and
inc
sub
stos
sbb
add
cmps
sbb
les
sbb
push
adc
retf
and
cs
or
xchg
mov
inc
shl
mov
pop
push
inc
sbb
and
push
xchg
jecxz
xchg
fimul
cmp
fiadd
(bad)
pop
or
xchg
and
pop
add
mov
loop
js
add
dec
jmp
movs
inc
or
add
xchg
push
out
or
ins
inc
xlat
add
mov
das
jmp
test
sar
es
lea
add
scas
xor
rol
mov
add
xchg
push
les
movs
xor
push
pop
dec
dec
stos
adc
adc
xor
or
mov
test
add
fimul
adc
or
jne
push
mov
mov
fcmovnbe
inc
or
stos
jecxz
test
add
out
pop
cwde
or
test
cmp
stos
icebp
fist
jnp
inc
mov
pop
xor
ret
pop
add
or
dec
xor
bound
fsub
or
iret
inc
xor
xor
pusha
shl
push
sbb
adc
dec
jne
add
inc
or
cmp
pusha
aaa
test
push
mov
(bad)
hlt
mov
std
or
gs
gs
gs
bound
cmp
outs
xor
push
inc
xchg
je
mov
arpl
sub
jnp
sub
push
cmps
aas
lahf
mov
enter
rcl
dec
and
push
and
push
cmps
iret
sbb
push
(bad)
lahf
cli
(bad)
mov
fwait
imul
inc
pusha
add
scas
mov
push
or
xor
mov
xlat
scas
iret
lods
push
mov
and
ins
pop
dec
scas
pop
(bad)
ret
add
loope
dec
addr16
xor
fimul
retf
xor
jmp
mov
inc
scas
adc
mov
dec
sbb
or
sti
sti
cmp
(bad)
mov
outs
ret
mov
sbb
imul
call
sub
jmp
out
out
jg
push
sti
aaa
out
cwde
mov
inc
hlt
(bad)
sbb
xor
test
cmps
cmp
test
pop
aas
aad
mov
(bad)
or
sbb
push
fist
add
jmp
push
outs
push
pop
sbb
push
adc
retf
or
xchg
outs
and
lea
fwait
sbb
or
shl
pop
add
dec
xchg
rol
inc
pop
pop
mov
cmps
xchg
add
adc
test
xchg
add
adc
jmp
bound
and
jnp
adc
(bad)
adc
sub
(bad)
sbb
pop
les
les
pop
sti
push
sub
adc
mov
or
sub
dec
popa
inc
and
daa
jmp
xor
dec
push
fs
lods
mov
sbb
cmps
mov
jno
sbb
fcmovnbe
cmp
xor
retf
pop
sub
push
add
mov
jno
and
lods
mov
data16
push
pop
add
(bad)
into
aam
xor
lods
mov
inc
mov
gs
stos
jnp
inc
shl
add
fisttp
mov
stos
cmp
mov
shl
cli
add
adc
inc
sub
sbb
repz
push
popa
test
sbb
(bad)
sub
or
sar
nop
add
sub
lods
daa
ret
mov
cdq
push
lea
pop
jb
fsub
xor
adc
mov
addr16
add
movs
dec
cmp
pop
pop
inc
cmp
test
dec
jp
xchg
sub
pop
and
push
pop
sbb
push
cmp
xchg
add
cld
fmul
xchg
pop
cwde
add
popa
jo
loop
(bad)
pop
fwait
mov
inc
xchg
aas
shl
js
(bad)
pop
and
pop
shl
xchg
rcl
sbb
push
and
pop
cdq
ror
into
push
gs
sti
and
xlat
(bad)
pop
retf
push
ror
push
popa
xor
mov
jno
push
pop
pop
mov
cmp
push
pop
xchg
test
shl
ret
mov
push
fwait
into
add
outs
outs
push
iret
push
adc
jbe
retf
neg
or
pop
iret
pop
adc
rcr
adc
ins
mov
xchg
cmps
push
rcl
lds
push
mov
xor
xlat
jmp
ja
test
mov
xor
sbb
sbb
rol
xor
mov
sbb
push
stos
mov
iret
les
(bad)
dec
femms
mov
mov
bound
fwait
pop
mov
mov
add
mov
sub
addr16
pop
cbw
sbb
xor
aaa
imul
adc
add
inc
ret
inc
dec
xchg
adc
mov
push
mov
jnp
mov
arpl
mov
fist
push
push
pop
pop
push
sbb
(bad)
xchg
clc
push
jecxz
pextrw
xor
pop
clc
xchg
out
cmp
xchg
push
cmp
sbb
jnp
ja
mov
lahf
lods
fisttp
jp
bound
jb
push
mov
or
xchg
sub
add
pop
outs
sbb
out
out
add
fwait
test
push
adc
dec
mov
rcr
inc
fcomi
jmp
pop
mov
daa
fwait
add
cmp
mov
push
jb
(bad)
and
pop
cwde
lahf
xchg
outs
cdq
push
add
jg
aas
imul
push
dec
mov
add
mov
push
nop
mov
xchg
sahf
mov
iret
dec
cli
daa
inc
mov
mov
imul
lods
xchg
pop
retf
xchg
(bad)
push
call
sbb
arpl
out
jbe
dec
arpl
push
mov
push
push
pop
pop
pop
out
jecxz
xchg
push
not
aam
mov
jo
jno
repnz
cmovl
inc
jbe
rol
adc
inc
jb
gs
or
lahf
or
push
push
jg
mov
stos
jne
imul
lds
sub
mul
sub
div
outs
shl
cs
push
dec
addr16
sub
daa
pusha
jmp
pop
and
js
pusha
test
and
imul
dec
pusha
sub
lahf
sahf
aaa
call
outs
div
adc
(bad)
jl
xchg
jg
pushaw
xor
cmps
xor
outs
les
cmp
mov
(bad)
fucomi
jl
outs
mov
shr
ret
or
push
gs
shl
imul
push
adc
(bad)
add
mov
push
xor
arpl
jo
icebp
mov
(bad)
shl
add
outs
fild
jnp
xchg
xor
push
xor
cwde
inc
push
inc
lods
pop
rol
test
mov
inc
dec
fs
push
xchg
nop
mov
pop
rcr
push
lahf
xor
stos
das
icebp
or
jb
push
outs
out
imul
or
sub
es
push
shr
ja
mov
jbe
imul
lahf
inc
rol
sbb
mov
mov
pop
dec
arpl
mov
add
xor
sbb
jmp
or
adc
push
adc
sub
movs
mov
inc
outs
dec
adc
xor
pop
or
adc
aad
mov
stos
sbb
rcl
mov
ret
rol
adc
push
test
dec
mov
adc
cmp
lea
jnp
or
bound
adc
xor
cmps
sub
inc
xor
xor
sbb
mov
sub
xor
mov
add
or
xor
cmp
sub
add
inc
inc
inc
xor
xor
add
xor
add
and
inc
xor
and
inc
adc
pop
jle
xor
fwait
cli
call
mov
and
mov
xchg
dec
dec
and
mov
dec
and
mov
fwait
push
mov
inc
enter
mov
add
pop
mov
dec
push
adc
inc
sar
es
add
add
adc
inc
pop
in
fcmovnb
inc
shl
inc
mov
xlat
les
cmp
shl
rol
cdq
adc
cmp
out
nop
mov
aas
xlat
lds
mov
push
inc
fnop
mov
push
fcmovu
cld
les
mov
enter
push
inc
jg
ins
jae
ret
mov
xlat
(bad)
mov
or
cmp
aas
jle
rcl
ret
(bad)
cmp
mov
repz
cmc
cmovg
in
(bad)
mov
aam
jae
sar
int
or
aad
add
xlat
scas
add
in
clc
call
stos
add
into
fwait
or
rol
xor
adc
dec
sar
jb
mov
add
(bad)
cmp
stos
push
call
lahf
jbe
pop
mov
ret
jle
push
ror
sbb
fdivr
dec
(bad)
call
iret
jns
fnstsw
(bad)
jmp
test
sahf
ret
test
fnstsw
lods
dec
out
(bad)
clc
lock
(bad)
sti
cmc
out
repz
jmp
rol
in
mov
push
out
(bad)
fistp
xchg
push
xlat
sahf
add
(bad)
loopne
dec
call
movs
sub
sbb
(bad)
call
rol
mov
push
and
inc
ret
push
push
inc
cmp
pop
push
mov
(bad)
std
sti
push
mov
dec
pushf
enter
nop
adc
inc
cld
pop
test
hlt
or
xchg
push
mov
xchg
out
pop
(bad)
pop
fwait
jbe
push
es
nop
sub
mov
mov
xchg
dec
leave
xchg
adc
jg
sub
call
out
pop
icebp
(bad)
loope
sub
ret
mov
jle
call
(bad)
call
loopne
push
jmp
retf
jmp
fstp
lahf
mov
mov
mov
call
std
inc
in
test
cmp
dec
in
idiv
test
(bad)
cld
jmp
cmp
push
in
call
push
loope
call
mov
int
(bad)
mov
fsub
ficom
mov
jb
jp
pop
jmp
mov
ud0
push
outs
cmp
push
jmp
retf
inc
jbe
(bad)
fidivr
ret
add
pslld
mov
outs
aad
mov
mov
add
test
sub
mov
(bad)
sti
push
xor
mov
int3
in
and
mov
and
add
(bad)
jns
mov
sbb
jmp
push
repz
or
jg
fcmovu
lock
mov
rcr
(bad)
(bad)
imul
mov
push
(bad)
lods
add
retf
inc
xchg
pop
(bad)
mov
inc
aaa
pop
leave
push
shl
adc
mov
jg
pop
or
and
pop
add
rcr
shl
aas
jle
fs
add
inc
jg
pop
into
xor
out
xlat
lods
pop
push
loopne
sahf
std
mov
clc
dec
mov
jle
pusha
jae
retf
xchg
cli
clc
int
sub
shl
cmp
outs
dec
out
jecxz
(bad)
pushf
push
push
push
jle
movs
mov
cmps
mov
fmul
sahf
cmp
je
lds
inc
add
jmp
push
cmps
inc
(bad)
xchg
aaa
out
xchg
push
xchg
pop
mov
push
fidivr
jno
cmp
stos
enter
push
in
fnstenv
mov
das
pop
pop
dec
loop
jne
fiadd
jg
sbb
sub
repz
push
mov
cmc
sti
test
cld
inc
jae
mov
dec
mov
push
inc
popf
fsubrp
in
in
(bad)
(bad)
(bad)
adc
or
cmp
jmp
and
and
fucomi
loopne
iret
in
xor
mov
push
mov
pop
pop
push
jl
inc
int
jmp
mov
(bad)
xor
out
pusha
das
daa
pop
pop
addr16
scas
xchg
lock
aaa
mov
aaa
std
outs
js
shl
cli
fidivr
jmp
dec
test
sti
mov
jg
es
shl
jnp
xchg
push
push
ret
shl
dec
test
mov
(bad)
fnstenv
rol
sti
js
mov
fld
rcr
or
js
aad
fwait
or
dec
lods
jns
ret
imul
clc
xchg
(bad)
fdivrp
inc
pop
sahf
sbb
jle
ficomp
sbb
jmp
ret
in
outs
mov
jle
jb
mov
xchg
ja
idiv
out
(bad)
jmp
jb
in
push
inc
test
jle
int
ret
cmp
loopne
test
cmc
jmp
xchg
not
xchg
jg
mov
shr
mul
pop
jle
add
jg
mov
cs
fistp
jmp
leave
jne
cmp
loope
(bad)
jle
inc
jle
mov
mov
inc
shl
(bad)
mov
popf
push
stc
(bad)
pusha
pop
(bad)
dec
mov
(bad)
aas
cmps
pop
dec
(bad)
(bad)
dec
lahf
inc
xchg
call
mov
or
mov
xlat
es
das
das
xchg
push
mov
xchg
repnz
js
loopne
sbb
lea
dec
out
xchg
dec
dec
mov
pop
(bad)
push
jae
cwde
cld
pop
out
(bad)
outs
mov
mov
gs
adc
pop
pop
mov
adc
je
int3
cwde
ror
rol
add
push
and
jnp
daa
into
orps
mov
xor
push
hlt
dec
and
push
and
jle
mov
inc
dec
das
hlt
jmp
(bad)
ds
adc
lahf
popa
lods
jmp
rol
hlt
repz
ds
push
add
int
adc
out
ret
sub
inc
imul
jle
inc
cli
ss
loop
push
dec
inc
push
out
pop
and
pop
outs
popf
cmps
push
out
leave
jbe
mov
jle
mov
xchg
je
jg
jle
popf
fstp
mov
aad
jp
test
loope
scas
xchg
jle
jg
ret
mov
jb
shl
mov
jbe
jle
mov
shr
cld
(bad)
jmp
cdq
dec
stc
mov
mov
jmp
xchg
push
scas
sub
outs
push
in
jmp
jmp
sbb
push
call
mov
pop
stos
ret
xchg
jmp
sub
inc
(bad)
cs
hlt
call
fcmove
inc
daa
xchg
sub
(bad)
(bad)
cmp
mov
call
jbe
push
mov
out
jle
movs
dec
mov
adc
scas
out
cmp
test
mov
stos
pop
daa
aaa
pop
loopne
or
fadd
or
les
jle
sahf
mov
scas
or
push
cmps
lds
aas
xlat
jg
inc
mov
add
mov
mov
sar
jns
fnstenv
ror
mov
(bad)
mov
sub
js
imul
lock
ds
fadd
cmp
(bad)
pop
sahf
and
call
cs
lds
adc
mov
in
jae
out
test
les
movs
ins
jg
jle
bound
scas
out
mov
jle
call
mov
mov
cs
jmp
jbe
idiv
jle
jg
bnd
jmp
sub
xchg
mov
cwde
push
lock
int
jne
test
not
jb
les
jmp
jl
cmps
jne
mov
mov
push
push
scas
inc
jmp
cwde
cs
call
pop
js
mov
test
xor
imul
scas
push
push
push
mov
call
jmp
mov
pop
jg
call
mov
push
int3
hlt
xchg
push
ss
pop
hlt
pop
cwde
or
push
ret
test
in
(bad)
lods
push
stos
or
data16
es
pop
mov
sahf
cmp
les
movs
and
jg
adc
ins
daa
scas
jle
adc
jle
nop
xor
bound
inc
ins
xor
jmp
mov
add
(bad)
stc
repnz
cli
lahf
sbb
jmp
xchg
inc
push
jecxz
xor
push
in
inc
lea
xlat
mov
dec
sbb
mov
inc
xor
out
gs
sahf
add
int
aas
jle
xchg
in
add
sbb
cmp
clc
repnz
shl
scas
movs
inc
ss
scas
(bad)
in
(bad)
aas
or
jnp
int3
cwde
cmp
jns
(bad)
xchg
imul
outs
jmp
push
dec
movs
imul
and
xor
pusha
(bad)
cli
cli
enter
std
push
pop
pop
scas
lds
xor
cmp
mov
fild
jmp
hlt
stc
test
dec
out
xchg
push
dec
mov
aas
cli
mov
pop
push
mov
xchg
xor
(bad)
xchg
cli
mov
cmps
popf
fdivp
add
repnz
inc
movs
out
es
in
jae
pop
daa
aaa
(bad)
clc
call
push
jbe
sahf
and
inc
out
jle
scas
pop
dec
push
icebp
jbe
cmp
jle
jbe
test
in
aas
test
adc
mov
mov
mov
(bad)
cmp
dec
push
mov
xchg
pop
jmp
push
es
push
lods
push
mov
xchg
cmp
js
data16
(bad)
cli
xchg
cld
push
dec
add
dec
leave
inc
xchg
sahf
(bad)
fidiv
mov
inc
in
imul
shr
xor
push
cmps
(bad)
in
cmps
xchg
ins
add
in
jmp
mov
dec
jle
lods
inc
push
cmps
outs
rol
pop
stos
jbe
cs
push
icebp
out
jmp
jg
mov
mov
ss
std
dec
lods
(bad)
cmp
call
shl
(bad)
dec
outs
out
test
lock
retf
cmps
fwait
jle
dec
addr16
rol
retf
mov
jbe
xchg
xchg
(bad)
aas
mov
cmp
iret
ja
push
lods
int3
sub
cmp
push
clc
jmp
lods
pop
out
(bad)
xor
loopne
movs
cmps
sub
push
cmps
iret
pushf
jle
sbb
pop
lea
mov
jle
aad
cmps
inc
xchg
es
scas
(bad)
repz
ds
popa
(bad)
bound
mov
pop
jmp
(bad)
inc
jbe
cmps
add
cmp
pop
fiadd
mov
inc
adc
dec
out
mov
das
popf
add
inc
jbe
mov
jg
inc
aad
cmps
les
cmc
xchg
cmps
sar
fnstsw
adc
call
icebp
mov
bound
jg
cld
or
(bad)
repnz
lods
cs
test
call
outs
mov
pop
(bad)
cdq
inc
inc
stos
call
call
ins
inc
rcl
cmp
cmp
not
(bad)
inc
dec
imul
xchg
push
inc
push
out
fsubrp
cmc
out
iret
sub
sub
pop
test
sub
xchg
dec
sti
popf
cmp
mov
ja
lea
mov
daa
jbe
es
loop
sahf
and
inc
xchg
inc
out
stos
pop
das
shl
mul
sar
fisttp
les
pop
xlat
cmps
aad
js
int3
xchg
imul
scas
xlat
scas
add
jle
scas
adc
pop
scas
mov
fidiv
div
jecxz
aaa
dec
es
mov
inc
push
(bad)
ss
fisub
mov
fs
mov
pop
jle
es
mov
mov
xor
mov
test
int
or
mov
mov
into
call
inc
jg
cs
and
test
addr16
xchg
or
push
jmp
xchg
jmp
(bad)
push
add
test
xchg
(bad)
jg
sub
jg
(bad)
loope
cmp
mov
cli
ja
mov
inc
pushf
arpl
xchg
enter
imul
dec
dec
mov
jb
(bad)
jmp
jmp
mov
test
mov
mov
sahf
outs
cmp
(bad)
cmp
(bad)
cld
aam
fdiv
lahf
and
inc
inc
mul
cdq
cdq
retf
ja
mov
mov
shr
xor
and
inc
addr16
outs
jle
fiadd
cmps
shl
repnz
xor
jecxz
dec
es
pop
mov
(bad)
js
mov
and
mov
cmps
pop
pop
lods
add
scas
imul
inc
call
push
cmp
frstor
loopne
sbb
mov
push
xchg
jbe
push
adc
jg
(bad)
ss
pop
out
stos
movs
push
scas
adc
aaa
sti
lock
jbe
jle
jecxz
dec
add
jle
cld
or
test
sbb
push
(bad)
ins
push
imul
push
push
cs
ds
pushf
imul
push
call
dec
xor
xchg
jg
lods
int
sbb
(bad)
adc
jbe
jle
jle
sbb
or
inc
jg
mov
cmp
add
jg
jge
(bad)
scas
add
jnp
aaa
xchg
or
mov
mov
sub
mov
or
es
mov
stos
jg
test
std
xor
sbb
inc
iret
ds
cmp
inc
jg
es
mov
mov
xchg
mov
ror
(bad)
push
xchg
push
test
fcmovne
inc
test
cdq
pop
pop
mov
call
bound
jno
jg
outs
and
mov
pop
cmp
xor
push
fs
nop
scas
cmps
sbb
push
jp
pop
and
mov
push
clc
or
mov
mov
or
int
jnp
(bad)
icebp
loop
fs
xchg
sar
xchg
push
and
out
mov
push
mov
into
cs
pop
sti
into
mov
(bad)
mov
scas
pop
dec
ret
jbe
(bad)
aas
mov
jo
push
into
fwait
inc
out
jo
daa
push
ds
es
ss
es
nop
adc
xchg
jbe
add
adc
add
loopne
(bad)
jmp
jo
inc
fisub
cmp
sbb
push
cmp
mov
mov
sub
jg
xchg
sbb
or
push
dec
fidivr
(bad)
jnp
adc
ficom
pop
adc
es
sbb
pop
pop
inc
shl
fisub
lock
pop
push
mov
test
xor
daa
xor
and
xchg
inc
jg
mov
dec
mov
nop
push
cmc
xchg
ret
mov
out
fsubr
loop
aaa
(bad)
inc
xchg
ret
jmp
mov
std
dec
mov
clc
inc
push
push
mov
and
pop
les
ds
cld
call
push
mov
push
dec
test
repnz
aas
push
stos
sbb
ja
sti
clc
or
cs
dec
pop
mov
jle
fcom
fwait
add
(bad)
out
shr
loope
daa
out
inc
fmul
or
jg
inc
xor
push
adc
rol
push
js
cwde
ins
pop
mov
(bad)
inc
xlat
call
stos
ins
jle
dec
xor
stc
xchg
iret
pushf
pusha
mov
lock
outs
xchg
pop
push
add
cs
sahf
mov
fsin
xchg
push
jg
loop
pop
fist
push
push
(bad)
jg
mov
dec
out
scas
aas
pop
mov
xchg
sub
ret
punpckhdq
or
jmp
pop
push
call
add
test
jmp
mov
data16
(bad)
dec
rol
loopne
cmp
mov
je
xor
push
shl
div
inc
xchg
xchg
aam
cmp
cld
outs
mov
mov
in
in
hlt
and
cld
call
into
into
jmp
inc
inc
mov
inc
inc
mov
mov
xchg
inc
test
sub
scas
fimul
add
cmp
xchg
ret
sti
fdiv
or
mov
in
shr
pop
clc
in
inc
test
sub
aam
jb
inc
or
pop
jg
sar
rcr
adc
inc
out
arpl
jge
mov
xchg
xor
jle
outs
call
dec
jle
sti
mov
push
jle
cmps
mov
mov
scas
inc
rcl
pop
(bad)
jg
mov
or
or
sub
test
bound
(bad)
jge
jnp
sub
sti
xchg
pop
popw
inc
js
lock
lods
js
push
sti
fnstenv
dec
inc
je
addr16
in
test
sbb
jbe
jg
mov
xchg
ret
cmps
ins
xor
pushf
inc
jmp
xchg
xchg
(bad)
mov
rcl
cdq
dec
(bad)
ja
paddsb
out
adc
sti
fcomip
stos
icebp
loop
xor
je
enter
lds
dec
sub
jmp
mov
jo
es
ja
sub
xor
jns
rol
xchg
jg
fidiv
jmp
call
outs
pop
xchg
inc
rol
test
out
jmp
nop
addr16
(bad)
test
mov
(bad)
jg
test
jmp
out
outs
sbb
push
jle
jg
jne
retf
stos
inc
push
call
jne
mov
mov
jb
xchg
test
sti
adc
mov
fsub
ror
push
inc
sub
enter
ret
(bad)
pop
jg
(bad)
(bad)
(bad)
push
add
call
fsubrp
add
out
test
mov
idiv
(bad)
push
add
fsub
add
enter
ror
cmp
mov
mov
add
test
div
lods
add
cwde
movs
jle
fwait
add
mov
pop
ins
(bad)
(bad)
jge
add
ja
add
mov
mov
(bad)
push
mov
jbe
mov
scas
cmp
add
cmp
mov
es
clc
pop
add
xchg
arpl
data16
mov
add
jg
std
std
mov
add
scas
push
scas
push
mov
mov
add
lods
imul
shl
adc
mov
arpl
add
mov
cmp
nop
(bad)
rdmsr
push
cmp
jnp
psadbw
add
jbe
push
pusha
cmp
jns
add
lea
mov
inc
add
pop
lock
pop
add
stos
jbe
push
add
popa
push
add
and
(bad)
lods
jle
enter
retf
scas
xchg
scas
jp
into
lods
je
cmps
cmps
std
fist
push
leave
mov
add
xchg
dec
add
or
cmp
cmps
jg
add
mov
add
jge
add
add
lock
imul
pop
pop
retf
(bad)
out
push
loope
jg
scas
mov
add
repnz
hlt
(bad)
lods
lock
retf
fld
cmp
mov
push
scas
dec
outs
cmp
add
call
inc
xor
mov
cld
add
fcmovnu
mov
mov
retf
(bad)
scas
sahf
stos
mov
push
(bad)
push
pop
enter
loop
outs
add
mov
add
mov
push
fcom
add
mov
mov
push
mov
lahf
int
test
fisubr
xchg
adc
add
std
addr16
add
jns
push
test
add
rep
pop
xor
xchg
ja
push
loope
push
add
seta
pushf
pusha
adc
cld
ins
sbb
mov
mov
lods
loope
ss
mov
mov
and
retf
add
mov
(bad)
(bad)
mov
mov
fstp
int
mov
mov
add
lods
inc
(bad)
mov
jg
xchg
pop
add
aas
xchg
add
push
add
add
add
test
sar
add
cmps
jb
lods
(bad)
call
pop
rol
dec
into
fld
mov
repz
icebp
test
push
mov
(bad)
out
add
loope
mov
cmp
cmp
test
add
cdq
add
cs
pusha
inc
xor
jnp
add
jbe
jo
test
iret
repnz
inc
int
cmp
leave
sub
fld
retf
push
enter
xor
sub
pop
cmps
jns
add
lahf
push
cmps
inc
adc
mov
mov
sahf
stos
lock
call
add
or
fist
adc
ret
add
inc
sub
js
add
and
xor
lea
sar
cs
push
fdivr
mov
idiv
add
lods
in
push
jmp
rol
pop
ds
or
popf
jne
(bad)
movs
sub
(bad)
mov
(bad)
sahf
shr
fdivr
in
push
in
xchg
jecxz
xchg
es
jle
mov
outs
(bad)
movs
push
add
test
loope
test
js
mov
into
pop
push
add
pop
add
xor
dec
add
xchg
add
mov
(bad)
cmp
int3
fiadd
mov
lock
add
jecxz
add
rcr
add
out
(bad)
aas
mov
add
stos
mov
cmp
cmps
add
add
adc
jg
js
lahf
call
mov
xchg
in
add
in
xor
ret
rcl
scas
add
add
cdq
add
cld
popf
sub
outs
pop
add
xchg
inc
imul
ret
xlat
test
push
xchg
test
add
loope
push
pop
loope
jg
test
jp
inc
cmps
sbb
rcl
ss
cmp
(bad)
fild
pop
xor
add
add
in
jg
(bad)
push
add
jnp
add
test
add
scas
jbe
outs
test
(bad)
bound
cmps
pushf
jb
add
loopne
push
int3
stos
add
shl
out
lods
fcomip
mov
in
rol
jmp
add
mov
add
out
dec
mov
add
and
mov
js
test
lahf
movs
adc
add
call
xchg
add
(bad)
(bad)
(bad)
cmp
(bad)
aam
xchg
fucom
add
out
repnz
loopne
add
enter
into
add
inc
lods
mov
xchg
pushf
xchg
add
mov
or
cmp
lea
ja
(bad)
cmp
leave
add
js
xor
lahf
mov
aaa
add
cmps
test
pop
add
imul
in
cmps
scas
lock
not
inc
addr16
xchg
sahf
add
mov
adc
imul
addr16
and
(bad)
fisttp
xchg
add
or
pop
add
bnd
lahf
les
cmps
jle
pop
cmc
call
push
xchg
push
add
aad
add
fnstcw
(bad)
outs
clc
outs
aaa
push
in
fdiv
out
cmps
add
(bad)
push
fdivr
outs
in
shl
mov
dec
mov
mov
ja
ins
imul
add
inc
inc
nop
xor
mov
pop
pop
xchg
sahf
es
inc
xchg
dec
(bad)
mov
fidiv
dec
mov
mov
(bad)
inc
lods
fucom
add
into
add
lods
aaa
xor
cmp
stos
xor
(bad)
outs
aaa
pop
fdivr
sti
add
cmps
mov
lods
mov
ret
dec
mov
test
xlat
add
fwait
add
inc
scas
rcl
cmps
pop
dec
push
push
ja
mov
test
lahf
loop
rol
call
scas
pusha
out
jg
inc
imul
imul
pop
adc
mov
les
xchg
pop
add
arpl
xchg
scas
popf
outs
sbb
out
loopne
push
pop
loope
inc
clc
cmc
jle
ins
and
mov
mov
mov
mov
mov
data16
add
fmul
jmp
xchg
out
mov
int
outs
mov
add
movs
imul
sub
ins
sbb
mov
or
xchg
push
das
and
retf
xor
cmp
add
mov
(bad)
(bad)
cmp
scas
mov
add
lds
add
add
mov
push
mov
mov
cmp
int3
lahf
fwait
test
(bad)
pushf
aam
add
into
fisubr
clc
in
scas
mov
add
fdivrp
xchg
mov
rcr
add
stos
fidivr
add
mov
pop
add
mov
daa
fisttp
clc
aas
ret
mov
jmp
mov
push
add
xor
call
add
lods
jg
repnz
jecxz
in
cld
add
mul
(bad)
xchg
jb
scas
mov
jmp
adc
adc
test
add
(bad)
add
xchg
dec
add
cmps
outs
shr
push
push
add
movs
fild
cmp
movs
jp
scas
adc
push
add
call
add
xlat
pop
sar
pop
xchg
retf
fsubp
pop
scas
test
lods
mov
rcr
sahf
ds
xor
xchg
mov
js
ret
xchg
fbstp
or
or
(bad)
ss
or
cdq
xchg
mov
in
add
jmp
fbld
fiadd
sbb
add
in
mov
fcomp
add
pop
add
fwait
mov
pusha
add
jbe
inc
es
mov
pop
sub
push
push
fs
dec
ret
cs
xchg
add
leave
stos
add
fwait
jbe
push
outs
enter
jbe
push
and
es
xchg
(bad)
outs
(bad)
leave
fdivr
add
mov
add
jl
test
dec
(bad)
pop
mov
das
add
add
std
mov
add
add
fwait
dec
test
pop
push
mov
push
add
jo
scas
push
fbld
or
pop
mov
inc
shl
add
scas
mov
and
cmps
push
jp
jns
jns
add
and
ja
stos
add
xchg
pushf
pop
push
mov
cli
cld
add
jmp
sbb
add
(bad)
(bad)
jmp
in
ds
inc
push
not
movs
lods
add
scas
add
xchg
xchg
lock
dec
std
outs
movs
mov
lahf
jns
pop
(bad)
out
add
in
add
out
outs
dec
mov
push
cmp
jl
add
jmp
xlat
ret
dec
call
push
xchg
int
fs
test
mov
jo
mov
cmps
cmp
and
lahf
ret
out
xor
xor
pushf
add
mov
mov
(bad)
mov
hlt
add
cdq
scas
xor
add
lods
je
loop
xchg
pop
adc
jmp
(bad)
call
mov
enter
rcr
add
loop
jl
call
push
jmp
add
jmp
fdivp
div
add
jmp
add
inc
push
jmp
jg
jmp
add
in
cmp
loope
cs
daa
push
fild
test
cli
add
mov
fadd
add
mov
inc
pop
sub
xor
mov
aam
mov
adc
cmp
lock
neg
sar
jmp
xchg
push
fsubr
cmp
dec
jl
lock
pop
loopne
stos
es
test
xlat
mov
scas
int3
lods
jae
leave
test
pusha
push
xor
push
mov
sbb
(bad)
popa
les
cmps
pop
add
sar
inc
out
add
push
jp
dec
dec
mov
shl
stos
nop
fmul
pop
push
xchg
arpl
lahf
lods
mov
fwait
inc
inc
jl
popf
add
jmp
inc
mov
fistp
xor
xor
lahf
aaa
mov
push
aam
mov
xchg
scas
cmp
mov
(bad)
(bad)
jle
ds
mov
xor
(bad)
into
dec
ret
ds
std
add
dec
and
idiv
inc
inc
jge
add
jae
add
imul
add
pop
ffreep
gs
icebp
hlt
pop
pop
jg
inc
fwait
enter
mov
jle
mov
jo
enter
lahf
loop
sar
inc
fucomip
pop
fwait
scas
lods
mov
mov
dec
add
movs
outs
pop
popa
xchg
jle
dec
xchg
ds
ja
fisubr
scas
jg
mov
push
push
(bad)
push
dec
test
inc
movs
in
out
ret
xchg
imul
push
addr16
mov
add
xchg
inc
mov
test
(bad)
push
mov
cmp
stos
xor
cmps
sahf
(bad)
jg
enter
and
push
add
pop
or
mov
idiv
ja
addr16
pop
add
jl
add
scas
add
scas
jo
mov
add
dec
sahf
movs
add
mov
clc
mov
mov
pop
push
ds
aad
xchg
push
fcom
mov
inc
add
cmp
sahf
xchg
dec
imul
cmp
aaa
neg
dec
(bad)
push
cmp
mov
pop
sub
call
cs
out
inc
std
int
aas
int3
fsub
leave
fdiv
ss
call
add
jno
and
loop
ins
(bad)
fbld
add
out
add
xchg
jge
(bad)
jbe
mov
pop
sbb
outs
retf
call
jl
add
push
jmp
pop
add
ss
out
add
inc
es
and
fisttp
jbe
push
pop
xchg
jmp
hlt
add
into
mov
mov
ss
push
xchg
ins
sbb
loope
adc
or
sbb
movs
js
mov
cmp
jl
add
es
and
ds
sbb
pop
inc
push
push
pop
es
add
sbb
lods
xchg
add
scas
jg
mov
and
clc
xchg
push
add
push
push
fs
movs
xchg
sahf
add
in
add
lock
adc
fild
pop
fucomip
add
jmp
cs
test
mov
test
aad
push
mov
inc
push
adc
scas
mov
push
add
xchg
push
mov
dec
jg
add
jg
inc
jns
jle
dec
retf
test
dec
aaa
pop
mov
add
outs
jle
push
mov
jne
push
ja
mov
dec
(bad)
dec
rcr
xchg
adc
test
cmps
into
xchg
push
inc
pop
lahf
mov
(bad)
aas
outs
call
add
lahf
arpl
ret
add
mov
(bad)
xchg
add
mov
out
(bad)
jbe
xchg
hlt
or
(bad)
pop
xchg
scas
test
(bad)
cdq
out
movs
push
ja
out
ins
sbb
lea
jg
dec
sbb
sbb
pop
enter
push
nop
popa
or
ins
mov
and
mov
sahf
jbe
xchg
push
add
lods
pop
lahf
jb
mov
cwde
imul
test
or
(bad)
lods
jge
push
add
pop
sahf
xchg
addr16
add
mov
add
icebp
mov
out
add
in
push
(bad)
outs
inc
fsubr
add
or
test
cmps
pop
mov
push
push
data16
scas
loope
pop
adc
push
cmp
jbe
pop
or
(bad)
cmp
cs
sub
iret
fidivr
xchg
call
ja
(bad)
and
jg
in
cld
add
mov
add
mov
add
(bad)
pop
in
mov
mov
loope
jo
bound
scas
ss
movs
ins
out
test
jg
stos
jno
fdivr
ja
push
mov
add
mov
push
(bad)
fdivrp
push
mov
inc
mov
add
sbb
mov
scas
mov
sbb
or
jp
pop
(bad)
call
xchg
adc
add
out
push
or
loope
xchg
add
movs
test
jle
push
movs
fbstp
lahf
pop
loope
add
icebp
push
pop
loop
sub
repz
out
fsubr
scas
push
or
pop
loope
fsubr
cmps
fiadd
inc
shl
add
loopne
pop
sbb
add
aaa
sahf
stos
pop
or
cmp
into
cmp
sub
and
jo
add
(bad)
(bad)
lods
pavgw
hlt
enter
jle
out
(bad)
jg
loope
jmp
in
out
add
mov
scas
and
jbe
sahf
outs
cmps
lods
xor
mov
aaa
mov
retf
jecxz
lock
std
in
push
pop
add
mov
add
mov
add
mov
out
ffreep
add
(bad)
push
or
(bad)
dec
pushw
adc
lods
out
xchg
test
dec
cs
pop
test
sahf
fs
or
push
or
adc
jns
dec
aam
xor
aas
test
mov
stos
jo
fisubr
lods
add
iret
stos
cs
adc
lods
jnp
push
loope
cmps
mov
push
sahf
pop
(bad)
sub
test
lock
jl
int
push
imul
add
lock
cmps
(bad)
pop
popa
mov
xlat
call
in
imul
mov
test
addr16
ss
movs
fwait
lock
xor
push
js
mov
test
add
jmp
mov
pop
popf
in
dec
mov
push
clc
dec
mov
(bad)
leave
add
mov
ret
add
push
loop
rol
xchg
test
imul
add
mov
adc
add
mov
push
loopne
xchg
jbe
push
ins
jle
pop
mov
data16
inc
js
and
and
or
repnz
pop
das
dec
inc
je
dec
and
pop
sbb
mov
data16
inc
mov
dec
mov
cmp
repz
loope
add
outs
test
pop
inc
mov
inc
sahf
jp
scas
mov
sub
ss
fisttp
push
ds
shl
or
fdivr
js
neg
loopne
cmps
(bad)
push
mov
shl
add
call
cld
sub
test
pop
cmp
aas
sub
add
push
push
(bad)
mov
add
push
lahf
enter
mov
add
jecxz
cmps
or
jl
xchg
dec
daa
outs
push
aaa
jmp
iret
(bad)
push
(bad)
enter
fadd
xchg
add
ret
jecxz
xchg
add
ffreep
jge
cmp
xor
add
std
add
ffree
cmp
cs
sub
pop
cmp
xchg
push
add
addr16
sahf
pop
lahf
mov
aas
cmps
scas
fs
aaa
add
mov
cmp
(bad)
pusha
or
ret
adc
and
retf
ja
pop
(bad)
fsubp
pop
jp
out
out
clc
dec
int
inc
lods
repz
add
loop
push
loopne
faddp
fisub
inc
(bad)
aam
push
mov
inc
push
sahf
nop
in
push
xor
push
movs
out
pop
xor
into
aaa
xchg
popa
jnp
jo
jle
aaa
cmp
es
or
pop
pop
scas
daa
das
dec
add
mov
xlat
jmp
std
push
cli
(bad)
idiv
out
les
test
mov
sub
mov
iret
mov
push
lahf
(bad)
popa
pop
add
add
mov
add
(bad)
fwait
add
retf
jmp
aas
lods
stc
out
sti
neg
jb
push
(bad)
inc
or
(bad)
xor
aas
add
jle
add
push
xor
push
push
cwde
jbe
nop
outs
daa
add
sbb
mov
pop
jle
test
add
dec
sub
loope
sub
xchg
push
sahf
inc
rcl
push
(bad)
cmps
cmps
jle
pop
adc
xchg
sar
popa
test
lahf
sub
jmp
add
sub
out
loop
repnz
and
clc
jecxz
mov
in
not
adc
sahf
xor
dec
xor
or
out
pop
sub
jle
add
dec
das
cmp
inc
add
xchg
add
add
mov
mov
add
or
mov
inc
xchg
push
adc
lds
xchg
fiadd
add
into
push
in
aam
or
pop
popa
sahf
mov
int3
cs
fs
inc
movs
aas
daa
cmp
aaa
sar
(bad)
outs
inc
xor
lea
add
adc
aas
data16
mov
sbb
out
mov
inc
add
dec
xor
ja
mov
push
add
add
cld
push
mov
mov
push
in
add
fisub
loopne
or
xchg
scas
dec
shl
lods
aas
sub
xlat
xchg
xchg
jle
aaa
or
imul
call
call
jp
jle
mov
lods
mov
sahf
test
push
xchg
mov
add
pop
out
mov
jne
add
pushf
push
add
mov
test
into
cmps
add
call
cmp
loope
movs
(bad)
or
popa
daa
jg
push
push
pop
push
add
cmps
fdivr
sub
cmps
mov
mov
daa
inc
cmp
mov
jbe
xchg
inc
ret
push
add
add
aam
xchg
or
push
and
dec
push
push
fwait
out
clc
add
jmp
dec
jg
fistp
jg
jmp
fild
cs
add
pop
dec
add
lods
or
rcr
out
or
into
dec
pop
xor
xor
mov
ret
jnp
stos
pop
stc
sub
push
cmps
cwde
push
fs
std
pop
aad
jb
in
movs
add
dec
xlat
daa
push
cs
test
es
daa
out
pop
cmc
and
out
xor
dec
sub
push
add
clc
ins
test
ja
xchg
movs
gs
mov
add
inc
lahf
adc
xchg
out
outs
test
cmp
xchg
dec
sahf
jae
lods
test
add
cld
add
xchg
popa
lahf
and
add
fistp
mov
mov
cmps
fwait
out
idiv
inc
iret
fild
cmps
call
xchg
test
(bad)
stos
cmps
jl
sub
add
push
sub
pusha
xchg
xlat
pop
cmp
jle
pop
sub
bound
sub
mov
test
mov
mov
test
or
lahf
pop
add
popa
dec
es
jg
inc
or
cmp
dec
gs
adc
jg
test
fadd
fwait
add
fwait
push
push
pop
and
mov
xchg
xchg
mov
mov
jb
mov
pop
add
lahf
fcmove
inc
add
xchg
scas
pop
xchg
adc
test
in
aaa
add
sahf
out
push
fs
mov
or
adc
jg
out
jo
inc
push
cs
jo
cmp
arpl
inc
or
test
or
xchg
ins
and
sub
xlat
pop
pop
rcl
int3
mov
adc
or
(bad)
frstor
inc
mov
nop
cmps
ss
(bad)
fild
bound
dec
cmp
add
add
and
test
add
mov
inc
xchg
push
mov
inc
out
sub
push
jb
mov
jo
xor
mov
inc
out
push
sahf
or
stos
jo
xchg
sbb
inc
inc
paddusw
ret
xor
mov
lock
hlt
add
push
imul
mov
das
inc
js
clc
mov
add
fdiv
or
or
sahf
cmp
or
lods
xlat
jg
xchg
fmul
xor
xchg
push
xor
pop
popa
xchg
cwde
mul
jmp
push
scas
mov
jge
dec
jae
addr16
inc
push
mov
mov
mov
add
rcr
add
and
arpl
ss
and
pop
inc
out
push
mov
inc
mov
(bad)
popf
add
pushf
push
mov
mov
inc
aaa
add
cmps
inc
out
mov
ret
fbstp
ret
(bad)
cmps
outs
add
outs
test
scas
mov
lahf
rol
mov
(bad)
arpl
dec
cmps
push
push
loope
sub
out
add
loop
xchg
cld
or
int
rcl
inc
int
add
test
int3
fdecstp
clc
mov
xor
add
jge
test
fisttp
inc
test
dec
mov
pop
loope
rcr
outs
fwait
in
outs
add
aam
cmps
jle
push
mov
imul
scas
jmp
adc
mul
push
inc
sub
out
mov
dec
xchg
push
nop
push
inc
xchg
inc
push
lea
xchg
lods
jae
ror
xchg
dec
and
add
mov
es
mov
add
mov
stos
push
aas
add
push
nop
push
outs
inc
loope
adc
inc
ss
test
inc
mov
xchg
call
imul
fdivr
jg
adc
aas
enter
aad
add
leave
(bad)
dec
test
mov
mov
pop
cs
add
popa
add
mov
push
mov
sub
das
adc
lods
outs
(bad)
(bad)
mov
jle
pop
arpl
pop
sub
addr16
inc
sub
inc
test
dec
mov
dec
mov
dec
xchg
inc
jns
cmp
fcmovnu
pop
cmp
imul
popa
sar
retf
mov
aaa
jbe
add
push
lea
mov
test
data16
arpl
les
dec
add
add
cmps
xchg
dec
out
dec
mov
xchg
into
cmps
ins
sahf
ins
mov
movs
ja
xchg
pop
fcmove
inc
push
push
movs
mov
fwait
ret
xlat
(bad)
enter
xchg
cmp
push
fsub
add
mov
out
add
in
jo
jmp
(bad)
ds
xlat
(bad)
fbstp
xchg
xchg
fsubp
add
xlat
inc
sub
sbb
xor
popf
cmps
sub
out
xor
inc
jge
jnp
es
add
das
pop
in
mov
jno
aas
scas
mov
cmp
sub
(bad)
inc
aaa
out
inc
test
inc
mov
mov
dec
xchg
pop
add
scas
push
icebp
call
jne
push
(bad)
push
push
scas
into
pusha
cmps
je
jns
xchg
lods
mov
cmp
lahf
mov
jmp
xor
aas
add
pop
xchg
arpl
out
xor
push
lock
xchg
ret
sub
dec
add
mov
push
push
xchg
push
add
add
add
cmps
lea
xor
xor
adc
cld
pop
test
cmp
retf
mov
loope
add
loope
pop
cdq
sub
inc
loopne
outs
push
gs
es
lock
fninit
add
fiadd
inc
mov
xchg
clc
das
fisttp
cmps
push
outs
js
popaw
add
pop
dec
loope
mov
std
fild
xchg
out
pop
sub
add
je
(bad)
(bad)
inc
xchg
push
add
push
add
pop
add
bound
pop
pop
cld
(bad)
call
jb
push
jp
jno
add
mov
add
xchg
add
in
add
out
mov
jl
outs
inc
cmps
jns
jle
ffreep
inc
dec
push
ins
inc
daa
das
cmp
inc
lods
dec
jg
push
pop
xchg
imul
cld
push
outs
add
cmp
pop
push
les
cmps
ret
dec
mov
arpl
(bad)
mov
test
xchg
lahf
jns
add
cmc
out
repz
push
nop
pop
stos
lock
push
push
nop
cwde
sahf
jg
lea
adc
(bad)
jg
shl
add
(bad)
pop
shl
push
es
push
xchg
fadd
ds
(bad)
fnstsw
push
aas
into
push
lds
jle
fnstsw
rcr
add
add
(bad)
push
xor
dec
lahf
movs
lods
dec
clc
sub
xchg
inc
ss
ss
cmps
adc
inc
aaa
cmp
or
add
(bad)
call
inc
mov
dec
nop
pop
add
arpl
pop
sahf
imul
movs
jae
imul
sbb
mov
mov
mov
call
add
xchg
push
xchg
push
into
add
inc
cld
pop
sbb
sbb
pop
pop
sbb
mov
xlat
push
fs
outs
add
pop
xchg
push
test
mov
cli
mov
pop
imul
push
fisttp
rol
dec
ret
leave
movs
sbb
and
push
rcr
and
mov
les
sub
mov
xchg
push
dec
ret
jg
push
inc
pop
jb
mov
(bad)
fxam
add
cmps
inc
leave
xchg
sbb
jl
rol
ds
adc
inc
mov
repz
add
aad
pop
rol
pop
xor
xchg
or
add
jae
pop
ins
loope
sub
jne
add
mov
add
ss
rcr
pushf
retf
rcr
mov
test
(bad)
test
mov
shr
sub
movmskps
pop
adc
push
fisttp
xchg
xchg
xor
mov
push
(bad)
call
popf
pop
add
pop
inc
loopne
cmps
mul
rcl
test
xchg
pop
add
xchg
gs
adc
(bad)
jp
out
xor
mov
call
add
fiadd
js
jecxz
jb
loope
dec
leave
xlat
xchg
xchg
pusha
pusha
loope
int3
aaa
jle
xchg
mov
ror
push
shl
mov
add
pop
mov
ss
sbb
push
mov
jp
outs
mov
cmp
add
jp
ss
(bad)
idiv
push
push
loopne
loope
aas
push
loope
pop
in
jmp
jg
jae
add
xor
les
pop
add
push
xor
mov
jl
outs
pop
lahf
mov
pop
mov
push
mov
daa
mov
dec
add
pushf
es
mov
(bad)
sahf
pop
out
movs
js
mov
mov
mov
cmps
sahf
push
jge
hlt
cmp
mov
iret
lahf
sub
(bad)
fild
jne
fild
gs
dec
(bad)
retf
add
fwait
rol
leave
cmp
lds
ss
ins
daa
and
mov
push
les
push
dec
mov
add
mov
cmps
mov
movs
mov
sub
add
xchg
add
test
loopne
leave
aad
es
fiadd
and
loope
jecxz
cmp
fdiv
loope
adc
xchg
xor
and
push
add
mov
int
xchg
outs
pop
fnsave
test
jne
add
je
mov
push
nop
bound
jle
mov
pop
xor
test
retf
dec
call
mov
or
sbb
ja
jp
add
pop
pop
test
mov
jge
inc
inc
mov
xchg
pop
add
xlat
add
pusha
retf
div
push
loope
ror
enter
(bad)
mov
push
sbb
mov
mov
sti
out
inc
scas
mov
mov
inc
lods
mov
add
cmps
mov
sub
push
loope
mov
pusha
add
jns
arpl
push
repnz
sub
out
add
push
bound
mov
cmps
outs
add
js
fbstp
in
ret
fwait
jo
outs
mov
inc
pushf
mov
outs
push
xchg
jno
test
leave
popf
push
popa
mov
outs
mov
mov
fiadd
jno
pop
clc
pop
inc
or
bound
push
sahf
push
jb
jno
bound
into
inc
mov
ret
pop
mul
rcl
mov
test
ret
rol
mov
rol
les
fwait
les
cmps
mov
ins
push
jmp
movs
mov
mov
mov
adc
inc
fwait
(bad)
push
add
outs
loop
es
or
adc
retf
mov
sub
test
push
daa
retf
xchg
xchg
push
lahf
mov
mov
mov
mov
sahf
sub
stc
scas
inc
add
ins
add
jle
sti
enter
xor
dec
data16
mov
out
mov
mov
jle
sbb
and
gs
addr16
lea
xchg
xor
lahf
lods
jg
mov
enter
push
ror
push
mov
cld
add
les
ds
stos
mov
cmp
test
xchg
ss
outs
sahf
ins
loope
push
jno
add
bound
imul
mov
out
ja
add
aaa
pop
les
outs
jl
mov
mov
scas
enter
mov
into
xchg
xchg
push
lahf
or
push
call
call
test
ret
fidivr
dec
mov
dec
mov
pop
mov
int3
sbb
ins
adc
adc
aas
push
mov
xchg
pushf
add
mov
xor
mov
inc
faddp
sub
mov
dec
mov
inc
mov
mov
ret
data16
sahf
test
sub
adc
cmp
loope
mov
lock
pusha
loope
xchg
jmp
cs
adc
jbe
jnp
loop
es
leave
jbe
jle
pop
imul
push
inc
dec
adc
sub
pop
jmp
inc
test
pop
xchg
aad
xchg
outs
aam
and
in
(bad)
sub
inc
add
pminsw
jae
addr16
xor
(bad)
outs
xor
mov
iret
push
ds
inc
stos
mov
(bad)
stos
dec
cwde
mov
aas
cmps
mov
cmp
mov
jno
cmp
push
dec
jbe
cld
mov
mov
cs
test
pop
mov
add
cmps
stc
fistp
in
das
jne
add
jno
dec
jns
(bad)
es
fiadd
pop
ins
jo
adc
outs
cmp
stos
ret
mov
add
ja
push
add
push
pop
pop
retf
mov
pusha
or
inc
push
ins
cmps
jle
push
xchg
jp
push
imul
jmp
push
je
icebp
jne
cs
jbe
xor
imul
xchg
popf
test
out
sbb
call
mov
(bad)
(bad)
leave
aad
push
xlat
neg
cld
int
fcomp
lods
(bad)
hlt
add
add
inc
jg
stos
xchg
mov
and
push
pop
mov
push
adc
pop
fimul
add
xchg
mov
and
(bad)
and
push
popa
lahf
outs
add
(bad)
cmp
add
mov
data16
add
inc
jge
sub
aaa
jns
rcl
pop
in
popw
das
js
pop
dec
push
call
(bad)
pop
and
dec
mov
jp
jae
jge
xor
jg
fcmove
add
into
mov
lods
shl
cld
pop
pushf
add
mov
pop
pop
fisubr
fist
push
ds
pop
and
loope
add
stos
(bad)
mov
sub
and
and
lahf
dec
repnz
pop
push
xchg
bound
js
dec
push
ja
push
sahf
push
push
pop
mov
ins
or
nop
add
pop
gs
or
push
push
jnp
add
(bad)
cmp
push
fdivrp
xor
ret
jmp
ss
add
cmp
jbe
(bad)
pop
mov
fsub
pop
je
adc
or
test
jae
jl
mov
loop
inc
jo
jp
addr16
hlt
retf
dec
fwait
xor
mov
call
jnp
mov
jo
jg
pop
mov
inc
shr
into
pop
push
rcr
xor
add
js
addr16
sti
or
push
pop
ss
idiv
or
inc
add
popa
add
cld
stc
jmp
ins
(bad)
aas
xor
add
gs
scas
stos
dec
mov
gs
mov
xchg
mov
xor
pop
add
add
inc
jg
enter
out
(bad)
popa
push
inc
stc
mov
mov
mov
mov
loopne
scas
call
inc
sub
ss
clc
lahf
lock
xchg
jle
mov
jae
or
movs
outs
add
pop
jo
pop
cmps
jno
fistp
(bad)
cdq
add
popf
push
xor
fbld
xchg
dec
xchg
mov
in
(bad)
fcomip
in
mov
push
clc
push
cwde
arpl
push
scas
push
pushf
data16
and
aas
pop
inc
xchg
mov
xor
ss
jnp
xchg
mov
fist
dec
push
ja
adc
sbb
mov
ins
push
pop
sub
or
dec
nop
pop
cmps
jl
mov
xchg
inc
and
pusha
out
fadd
add
mov
inc
adc
add
in
jmp
dec
test
jg
xchg
add
sti
clc
call
sbb
cmps
push
xchg
pusha
fist
add
mov
cdq
fs
pop
(bad)
bound
call
scas
add
add
cmp
push
push
mov
push
out
adc
jp
adc
mov
xlat
int
pop
(bad)
jg
dec
xchg
pop
add
lea
xchg
pop
(bad)
popa
stos
jne
bound
test
(bad)
loopne
add
jle
add
lea
jle
pop
push
les
cli
mov
(bad)
lock
xor
pop
call
add
xchg
pop
push
xchg
pop
push
xchg
pop
sub
mov
test
pop
pop
mov
add
mov
mov
imul
stos
lock
lahf
mov
sar
imul
push
adc
jp
mov
imul
lods
push
lock
gs
jns
jle
pop
mov
nop
pop
je
mov
lahf
iret
inc
hlt
jg
add
ins
mov
add
mov
idiv
div
xchg
leave
mov
outs
push
add
mov
scas
(bad)
pop
mov
ins
movs
into
test
scas
imul
fmul
pcmpeqw
jb
jl
cmp
mov
fstp
fnstcw
mul
push
sub
imul
jno
add
enter
mov
add
jne
out
jle
jp
scas
mov
add
push
leave
stos
sbb
outs
mov
xchg
fsub
xchg
popa
xchg
dec
mov
push
add
stos
aam
(bad)
shl
xlat
push
in
pop
lock
add
add
push
inc
mov
push
xchg
lea
xchg
push
mov
mov
push
sub
cs
add
ja
mov
sub
nop
mov
(bad)
push
adc
jnp
sahf
retf
ds
xlat
or
jl
imul
jle
mov
jb
test
mov
mov
add
push
lods
aas
scas
jmp
dec
nop
pop
push
pop
in
cmc
sub
ja
push
pop
fsub
fiadd
retf
fmul
or
mov
mov
or
inc
xchg
test
inc
mov
dec
lea
shl
popa
cwde
ins
mov
aas
pop
xchg
add
add
bound
mov
mov
into
jg
lock
rol
ds
(bad)
mov
adc
outs
out
push
fidivr
mov
add
add
push
das
cdq
jmp
mov
add
add
add
add
fidiv
sahf
sbb
mov
ss
inc
xlat
out
xchg
test
fcomp
mov
mov
ret
fmulp
outs
push
call
pop
cmps
inc
xchg
lods
xchg
inc
test
aas
mov
pop
sbb
jg
xchg
xchg
in
sbb
call
push
or
(bad)
fiadd
push
xchg
add
shl
add
jg
in
lods
pusha
xchg
ins
mov
cmp
fsub
jl
inc
adc
mov
pop
mov
iret
mov
out
popa
nop
imul
mov
in
xor
pop
test
cdq
gs
xchg
fwait
les
or
inc
les
dec
sbb
mov
icebp
pop
out
mov
xor
mov
fcomp
loope
test
ja
jl
push
add
shl
out
mov
outs
mov
ins
ss
pop
das
inc
fwait
test
into
inc
adc
jp
js
out
inc
scas
adc
sbb
fmul
es
scas
xor
dec
movs
pcmpeqd
push
push
dec
nop
pop
sub
mov
jle
mov
inc
test
sahf
out
push
push
inc
mov
mov
stos
lock
scas
cmp
inc
xchg
ja
inc
or
loope
(bad)
jmp
jne
xchg
leave
mov
add
nop
not
jo
xchg
jno
xchg
mov
inc
pusha
pop
cmp
dec
add
pusha
pop
dec
xchg
mov
push
sahf
push
cmp
pop
punpckhwd
sub
dec
cmp
fmul
push
dec
inc
test
nop
dec
addr16
jno
xchg
mov
cmp
push
xchg
cmp
add
and
dec
jns
pop
test
mov
add
fnstcw
outs
jb
fnstsw
mov
je
pop
cs
inc
jnp
jbe
push
mov
imul
cmc
xor
je
push
(bad)
outs
xor
dec
cld
popf
push
pop
inc
xchg
dec
cmp
out
xchg
cmp
dec
dec
adc
adc
pop
pop
dec
push
loope
push
out
xchg
pop
in
out
add
push
push
mov
mov
je
ja
pop
inc
xchg
es
push
fcmovnb
push
fadd
add
mov
jne
mov
mov
ror
lods
jns
mov
mov
(bad)
push
cmp
pop
mov
jg
jns
pop
cmp
dec
inc
mov
mov
or
shr
xchg
mov
mov
out
sub
jle
aaa
xor
fisubr
pop
push
test
daa
mov
jo
xchg
stos
xlat
mov
scas
mov
int
add
mov
ret
pop
sub
fistp
xchg
add
dec
push
cmp
arpl
mov
dec
ret
mov
pop
lahf
cld
fstp
push
push
jle
ss
sub
lea
pop
cmp
aaa
test
inc
inc
daa
(bad)
dec
pop
adc
pop
xchg
xchg
mov
movs
pmaxsw
outs
xchg
jle
add
fxch
(bad)
(bad)
push
out
dec
lea
ret
mov
ret
add
leave
add
jle
add
xchg
add
xchg
vmwrite
ds
jge
dec
jecxz
pop
ss
push
cmp
xchg
mov
dec
lahf
pop
pop
nop
push
sbb
neg
add
data16
mov
loop
cmps
inc
outs
daa
(bad)
scas
rcl
shl
inc
lock
popf
sub
pop
(bad)
push
sets
pop
lahf
ins
add
loope
add
in
test
dec
add
in
add
retf
jnp
xchg
scas
xchg
add
popa
lock
jb
outs
add
scas
push
aas
out
add
jle
jae
lea
push
pop
nop
push
jmp
addr16
and
xor
clc
or
das
jle
outs
aas
pop
xor
mov
bound
mov
push
loope
outs
into
outs
xor
ja
(bad)
ins
xchg
cld
mov
cwde
jns
(bad)
out
and
pop
pop
mov
fwait
add
out
add
or
int
out
in
add
pusha
add
xchg
add
cmp
test
pop
add
pop
push
xchg
pop
add
popa
xchg
inc
sub
mov
dec
xchg
pop
mov
js
dec
not
not
ss
jbe
ds
push
pop
xchg
add
add
lds
jle
lods
lock
dec
jl
mov
div
lahf
outs
movs
lahf
adc
pop
xchg
pop
or
(bad)
call
jno
jg
xchg
add
rol
leave
jmp
add
dec
or
out
out
push
jbe
xor
xchg
bound
push
pushf
imul
fild
test
mov
push
popf
adc
cmps
out
sbb
jns
cmps
pop
xchg
outs
xchg
or
sub
lods
leave
dec
enter
xor
mov
xor
jae
fsub
fisub
add
push
xchg
mov
xchg
pop
sti
call
and
add
call
aad
out
and
jg
aam
leave
call
xchg
push
dec
add
jae
out
pop
add
and
pop
push
arpl
ja
pop
movs
outs
pop
ret
jge
pop
push
push
ret
xor
mov
mov
inc
iret
sbb
inc
lahf
scas
(bad)
(bad)
mov
sar
dec
mov
add
int3
mov
test
(bad)
out
out
inc
aas
je
and
push
xchg
pop
adc
push
cmps
jg
xchg
cmp
adc
jge
add
push
iret
lahf
add
pop
shl
loopne
mov
mov
je
inc
scas
or
jmp
add
jge
loopne
and
scas
jl
movups
and
pop
mov
outs
test
push
jmp
and
(bad)
aas
xchg
mov
mov
add
xchg
addr16
arpl
inc
pop
mov
test
adc
fsub
pop
or
add
int
in
xor
lea
and
inc
std
cmp
not
(bad)
(bad)
inc
das
cmp
adc
inc
xchg
(bad)
fldcw
nop
shl
lock
call
(bad)
stos
(bad)
in
jne
ror
(bad)
call
idiv
adc
xchg
sbb
mov
jmp
sahf
into
dec
nop
(bad)
dec
mov
icebp
es
jmp
outs
mov
aam
int3
loope
ret
xchg
aam
pop
test
into
call
xchg
shr
ror
or
fucomip
dec
(bad)
cmp
in
(bad)
mov
cmc
call
les
mov
push
stos
push
jle
push
or
dec
call
jg
mov
mov
iret
jmp
sbb
mov
(bad)
pop
mov
call
xlat
call
cdq
int3
in
rol
(bad)
jg
idiv
cld
or
mov
div
cld
call
xor
aad
jo
sar
adc
movs
or
or
push
clc
pop
push
mov
loope
ins
xchg
xchg
loop
(bad)
pop
sub
das
dec
cmps
(bad)
pop
mov
push
mov
sbb
clc
jmp
pop
fucomip
cmp
dec
inc
jmp
jmp
fdivr
ss
jmp
sbb
lahf
xchg
fimul
int
(bad)
aas
jmp
not
retf
jno
test
pop
and
stos
jmp
(bad)
(bad)
mov
in
loope
ds
icebp
not
jno
int
mov
jmp
pusha
rcr
jle
mov
jmp
mov
push
icebp
ret
cld
push
add
out
neg
outs
mov
out
dec
scas
sar
cmps
xor
mov
(bad)
call
(bad)
psrad
push
les
stos
retf
leave
inc
movs
retf
jmp
add
inc
inc
shr
and
adc
mov
add
cmps
jg
scas
into
test
pop
jmp
(bad)
aaa
aam
ins
and
jecxz
inc
(bad)
out
test
test
adc
mov
dec
(bad)
int
add
push
ficomp
(bad)
repz
sti
or
(bad)
out
xchg
adc
sar
lea
fprem
push
int
xor
shr
call
call
cld
std
push
cld
int
pop
test
in
sbb
mov
sbb
jmp
repnz
(bad)
push
scas
(bad)
pop
(bad)
and
dec
int3
jecxz
mov
call
sbb
(bad)
sbb
(bad)
push
mov
in
and
outs
and
mov
push
xlat
cli
push
cmc
(bad)
jg
hlt
call
loop
scas
not
hlt
mov
pop
add
loope
repnz
cli
or
pop
add
(bad)
xchg
dec
jb
je
jl
mov
jmp
jmp
mov
test
sbb
clc
push
jg
rcl
add
int
jo
(bad)
inc
test
out
mov
and
std
jmp
icebp
call
mov
lods
loop
adc
out
daa
mov
call
ds
fild
std
push
mov
or
out
push
scas
aam
pop
leavew
out
shl
jecxz
stc
fild
push
outs
add
shr
inc
les
shr
sub
(bad)
fnstcw
fidiv
push
inc
mov
sar
pop
idiv
sti
cld
or
idiv
adc
in
xor
out
cmp
cmc
clc
pop
ja
repz
push
jmp
scas
lds
pusha
inc
movs
outs
or
xchg
push
retf
(bad)
push
leave
ss
stos
xchg
push
push
pop
int
pusha
int3
repnz
dec
(bad)
lahf
call
in
int3
cs
inc
loop
stos
in
or
jge
iret
stc
(bad)
(bad)
inc
cwde
rcl
cmp
aam
cmps
int3
lds
stc
adc
sti
pop
and
fucomip
inc
jnp
out
jecxz
pusha
lds
ins
pop
mov
add
mov
int3
out
retf
jbe
int
outs
repz
shl
jmp
jo
push
aam
jo
pop
adc
ficom
(bad)
jp
xchg
out
(bad)
loopne
pop
fisub
(bad)
aaa
xchg
mov
ins
cmp
jb
dec
mov
outs
xchg
ret
scas
js
jg
push
daa
movs
push
add
sar
dec
lods
sar
pop
or
loop
cmps
pushfw
loope
mov
add
mov
(bad)
ror
sub
sub
aad
jp
enter
jbe
dec
inc
out
out
(bad)
loop
loope
ror
mov
dec
(bad)
icebp
pop
lods
(bad)
clc
push
test
(bad)
dec
xchg
call
fild
add
dec
fwait
data16
loopne
or
mov
jmp
scas
mov
fwait
sar
dec
scas
aad
test
jecxz
jmp
jl
movs
mov
mov
cmc
fcom
sub
mov
inc
retf
aad
in
stc
outs
(bad)
jne
idiv
sbb
push
xor
stos
mov
cld
mov
loop
stc
outs
int3
call
cld
scas
fbstp
mov
lock
(bad)
mov
loope
inc
mov
outs
add
mov
xchg
jbe
call
outs
jns
cld
sbb
data16
jmp
stos
fcos
adc
mov
loop
jmp
pop
addr16
mov
in
fdivr
inc
mov
jle
fidivr
(bad)
(bad)
mov
cmps
shl
clc
xchg
stos
mov
lds
mov
rcr
dec
cmc
jns
(bad)
not
ret
rcr
pop
(bad)
sub
std
push
imul
or
ds
test
xor
call
test
gs
pop
test
cdq
inc
es
into
inc
(bad)
call
mov
aad
scas
shl
pop
rcr
inc
mov
in
(bad)
dec
xlat
jle
aad
out
sub
outs
movs
mov
push
std
in
jmp
outs
push
xor
aam
loope
sar
(bad)
(bad)
call
je
hlt
jns
jp
ins
jne
in
inc
gs
inc
ins
jl
push
jge
neg
popf
mul
adc
(bad)
jmp
outs
test
lds
xchg
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
dec
lods
sar
add
mov
xchg
out
movs
scas
sub
push
mov
(bad)
cmp
dec
shr
inc
cmps
iret
lock
rcr
data16
mov
std
mov
inc
test
shl
out
std
inc
mov
cmp
jnp
mov
push
mov
push
addr16
out
xchg
sahf
xchg
mov
sti
jb
enter
ret
jmp
std
push
inc
xchg
mov
push
xchg
mov
push
xchg
mov
je
jnp
(bad)
rcr
push
adc
push
outs
ins
add
mov
mov
xchg
(bad)
movs
not
jbe
dec
mov
setne
stos
xchg
sub
pop
icebp
push
push
push
sub
or
sar
stos
or
jbe
enter
mov
outs
lahf
xchg
mov
fsincos
push
mov
(bad)
fdiv
call
dec
mov
inc
test
es
mov
lods
jg
adc
(bad)
scas
mov
je
in
cli
retw
imul
lock
add
enter
je
mov
mov
pusha
mov
fsubr
icebp
and
(bad)
dec
inc
outs
mov
xlat
call
cs
ja
loope
fisubr
xchg
(bad)
inc
ret
retf
inc
aas
mov
and
mov
push
pop
(bad)
out
sbb
push
jecxz
add
outs
and
out
mov
outs
daa
dec
mov
(bad)
out
call
test
pop
xchg
test
lock
inc
ficomp
cli
(bad)
(bad)
js
icebp
stos
mov
mov
stos
int
cmps
push
jge
fcmovnb
jmp
or
les
(bad)
cli
mov
retf
adc
dec
pop
loopne
cmp
inc
push
inc
call
outs
das
pushf
ret
mov
test
push
inc
mov
ins
or
push
fisub
shl
leave
ds
inc
mov
rcr
xchg
data16
push
pop
mov
mov
es
(bad)
icebp
jle
out
leave
cwde
mov
arpl
in
push
int3
hlt
push
pop
dec
mov
jmp
mov
cmp
push
test
jl
aam
fldln2
repz
mov
cmp
int
loop
out
outs
sar
inc
fucomp
repnz
(bad)
fild
sbb
arpl
push
(bad)
int
js
int
rcr
mov
out
inc
hlt
cli
inc
add
sbb
into
dec
jb
add
cmp
fcmovnbe
outs
aad
jns
adc
mov
mov
stos
sahf
cmp
add
pop
dec
(bad)
inc
clc
movs
(bad)
jmp
or
lock
nop
mov
lea
outs
mov
jbe
lds
sub
aaa
mov
push
adc
fst
fprem1
mov
inc
mov
pop
ss
pop
retf
jno
pop
mov
lds
xchg
loopne
inc
jmp
push
cmp
mov
xchg
shr
dec
cmps
pop
dec
xchg
call
mov
lahf
enter
in
(bad)
push
icebp
mov
movs
ret
lock
rcl
jecxz
sbb
jmp
cwde
lahf
loope
cmc
pop
jp
xlat
mov
cmps
outs
push
add
loop
popa
enter
mov
or
push
mov
gs
in
inc
mov
ds
jo
jns
test
mov
cmp
jmp
scas
mov
ds
hlt
movs
enter
jmp
sub
idiv
adc
call
jo
pop
xchg
mov
mov
in
lods
ret
rcr
lock
xchg
fcom
in
xor
jmp
es
sbb
pop
ds
into
and
mov
ss
cmps
mov
clc
js
call
fist
push
cmps
arpl
out
mov
and
mov
xchg
(bad)
(bad)
xchg
mov
xchg
(bad)
ficom
cld
push
mov
mov
jmp
lods
data16
rol
inc
push
ret
(bad)
(bad)
mov
xchg
movs
inc
dec
dec
out
outs
xchg
push
lods
mov
test
mov
and
sar
stos
aad
fs
jl
inc
ja
retf
clc
cld
sub
mov
mov
fisttp
mov
adc
scas
call
ror
mov
movs
mov
(bad)
inc
push
mov
ret
out
cld
fadd
in
imul
or
stos
int
mov
(bad)
(bad)
loope
jno
enter
push
repnz
scas
(bad)
out
hlt
and
loope
ror
jb
aam
outs
or
in
(bad)
mov
jg
idiv
enter
call
(bad)
dec
push
jbe
mov
(bad)
(bad)
cli
pop
pop
cmps
retf
mov
rcl
jmp
aas
inc
ret
repnz
push
clc
nop
jle
(bad)
lahf
test
inc
or
(bad)
fistp
pop
push
push
mov
adc
mov
push
mov
fadd
movs
lds
retf
push
data16
push
das
rcl
cli
stc
stos
xor
int3
es
fisttp
call
xchg
ins
mov
fsqrt
xchg
jmp
xchg
pop
into
out
outs
shr
stos
call
cs
stos
ret
push
xor
outs
pop
xchg
out
test
idiv
(bad)
std
mov
jecxz
arpl
repz
xchg
icebp
bound
aam
pop
mov
push
xchg
mov
xchg
retf
test
shl
mov
mov
stos
shl
bound
loope
rol
lea
add
fldl2t
call
scas
cwde
(bad)
jle
idiv
dec
sbb
jns
fsubrp
mov
out
ja
dec
inc
cmps
fsubp
sub
jg
retf
jmp
clc
adc
scas
(bad)
in
popa
stos
(bad)
jmp
xlat
repnz
enter
mov
mov
ins
mov
or
mov
ins
mov
std
pusha
mov
dec
lods
loopne
loopne
(bad)
sub
push
cli
jbe
gs
mov
test
mov
idiv
test
cld
dec
xchg
fistp
ins
mov
jle
mov
push
loopne
idiv
push
(bad)
push
scas
retf
aam
mov
loopne
cmps
sar
outs
mov
pop
mov
jae
(bad)
(bad)
jnp
ret
fabs
or
dec
inc
hlt
cli
cld
or
jmp
loope
aas
mov
out
mov
in
int
aaa
in
cmc
clc
adc
int3
fimul
mov
into
cmc
test
push
ja
ror
adc
nop
mov
data16
aas
inc
(bad)
or
xor
sub
scas
ret
mov
and
push
xchg
mov
mov
fsub
xor
inc
mov
loope
xchg
mov
dec
mov
idiv
outs
adc
inc
push
call
std
out
into
call
ret
xchg
mov
test
push
mov
enter
call
push
mov
mov
icebp
mov
add
jl
rcr
in
je
pop
lock
ins
leave
jo
fwait
mov
fsubr
enter
aam
cmp
stc
popf
int3
fdivr
scas
sar
add
pop
dec
mov
retf
shl
xchg
addr16
and
lock
mov
fidivr
pushf
mov
(bad)
mov
test
adc
(bad)
aam
cmp
inc
push
jne
sub
adc
es
inc
or
inc
jnp
and
and
inc
add
fs
add
nop
push
add
add
xor
and
adc
add
sub
mov
ja
repz
in
or
add
int3
xchg
add
sahf
fxch
add
adc
sub
push
dec
add
pop
adc
(bad)
add
add
daa
push
fcomp
mov
int
sub
add
push
scas
cs
and
jmp
add
and
gs
je
jae
pop
setbe
jle
xlat
sbb
add
xor
sub
daa
inc
or
adc
ss
add
ss
sub
adc
arpl
ss
mov
outs
push
or
or
sbb
jnp
ins
fimul
dec
jae
retf
jb
mov
pop
lds
iret
pop
or
nop
push
call
test
call
push
cmps
mov
(bad)
jae
push
push
and
sbb
dec
test
das
lea
rol
xor
sbb
arpl
adc
test
movs
mov
mov
mov
mov
and
pop
test
dec
bound
ins
sbb
add
sub
jae
xchg
mov
jo
push
gs
mov
outs
and
push
jnp
es
(bad)
fild
scas
inc
dec
mov
jl
aaa
add
jecxz
push
aad
sub
add
sbb
add
(bad)
iret
and
mov
push
enter
add
push
add
or
jecxz
sbb
add
sub
pop
sub
dec
xor
cmp
jne
scas
sub
pop
int
inc
pop
and
xchg
sbb
in
str
push
sub
and
test
iret
pop
sbb
adc
ins
pop
ror
add
test
add
ffreep
inc
xor
jns
and
ret
sbb
ins
ja
sub
jnp
out
ins
mov
ret
pop
jbe
and
pop
dec
rol
call
adc
inc
fimul
mov
lods
popa
or
gs
adc
es
jle
out
pop
fisubr
dec
scas
push
and
shl
test
cmps
pop
lea
xchg
data16
bound
jmp
je
adc
jecxz
repz
mov
or
pop
int3
add
aaa
scas
inc
pushf
xchg
js
or
test
(bad)
sub
cmp
xchg
add
adc
scas
xor
and
cmp
shl
sbb
pop
add
adc
adc
pop
out
arpl
ins
xchg
mov
jp
fs
or
fld
push
data16
addr16
xchg
push
mov
dec
adc
pop
imul
inc
ja
cmps
add
(bad)
mov
(bad)
sbb
cs
pop
lods
push
mov
push
pop
and
jae
sbb
aaa
pop
add
add
push
add
iret
jnp
ds
add
mov
add
xchg
jae
xchg
lahf
cmp
add
ret
jb
pop
ds
dec
xchg
jne
and
dec
push
xor
mov
mov
push
retf
mov
mov
imul
sbb
es
movlps
jae
mov
in
dec
and
or
push
xchg
inc
iret
pop
outs
loope
adc
(bad)
push
push
aam
push
xor
xchg
cs
and
cwde
(bad)
dec
in
cs
rol
or
xor
cmp
push
add
test
push
jo
or
mov
inc
das
out
sub
xchg
test
inc
out
daa
les
sub
mov
push
push
pop
leave
add
pop
(bad)
jae
mov
push
cmp
mov
add
add
fstp
btr
push
sbb
xor
in
push
stos
xchg
xor
inc
sbb
mov
es
add
cmps
out
aam
lods
ins
and
cmp
cmp
(bad)
mov
scas
dec
jmp
(bad)
dec
lahf
popf
inc
add
xor
inc
jg
clc
cmp
dec
(bad)
je
mov
arpl
jecxz
adc
lea
lea
xor
sub
imul
adc
popa
sbb
test
out
and
out
push
shl
or
ja
movs
pusha
loop
pop
pop
push
popa
xchg
inc
push
fild
scas
jae
mov
pop
sbb
clc
shr
bound
fild
mov
mov
imul
cmp
push
mov
test
inc
lea
add
(bad)
adc
adc
push
ja
sub
push
sub
inc
xor
pop
mov
enter
mov
push
push
inc
inc
push
mov
inc
das
imul
dec
add
outs
mov
xor
loope
jmp
mov
adc
push
jnp
push
aas
adc
mov
xor
bound
add
mov
push
adc
pop
jmp
add
sub
mov
inc
push
shr
aam
fisubr
inc
pop
mov
xchg
cmp
push
sub
jl
inc
jmp
bts
sub
jb
aad
jecxz
and
push
sti
inc
and
call
pop
test
inc
mov
rdtsc
aas
adc
xor
jmp
push
mov
or
scas
push
call
lea
xlat
mov
frstor
adc
mov
add
cmp
lods
shr
push
shl
jae
mov
xor
(bad)
jmp
jno
inc
mov
aaa
dec
or
xchg
test
sbb
pop
loopne
xchg
push
arpl
jae
lods
push
inc
and
mov
and
mov
mov
bound
outs
ret
adc
loop
add
fimul
add
lea
cmp
sbb
icebp
mov
dec
inc
push
push
mov
fimul
or
mov
add
pop
and
xchg
xchg
rcr
aaa
push
ror
retf
je
mov
pop
pop
stos
aad
add
ins
arpl
test
push
stos
push
sub
xor
call
dec
stos
(bad)
dec
jmp
push
imul
push
or
inc
mov
mov
sbb
mov
jae
mov
adc
sub
dec
inc
dec
mov
and
fldenv
and
pop
ret
jmp
xchg
push
xor
cwde
sbb
add
(bad)
sub
fdivr
pop
dec
popa
arpl
rol
xor
(bad)
jmp
loopne
inc
neg
das
arpl
sbb
add
xlat
mov
call
sub
fwait
pop
retf
or
jmp
dec
ror
test
bound
or
xchg
(bad)
xlat
cmps
retf
inc
adc
jmp
inc
ror
pop
jbe
jmp
xor
push
xor
jg
sub
mov
pop
(bad)
mov
mov
xor
imul
inc
cmps
push
adc
adc
inc
int3
or
sbb
pop
ss
adc
add
add
and
cwde
fistp
xchg
lea
sub
inc
sub
jnp
sbb
(bad)
inc
aas
jne
cwde
adc
sub
pop
add
xchg
aaa
aam
fld
xchg
lea
pushf
cmp
iret
adc
push
jecxz
sub
and
aam
dec
pop
les
xchg
mov
stc
xor
sbb
imul
push
push
pop
mov
inc
adc
lea
dec
add
imul
int
scas
and
adc
sub
in
mov
pop
orps
xchg
add
(bad)
dec
inc
xor
xor
xor
ja
mov
adc
xor
out
add
push
push
push
mov
dec
add
call
push
push
push
or
inc
inc
push
sub
cmp
mov
jg
fsubp
inc
push
dec
inc
or
sub
adc
push
inc
push
fnstsw
push
cvttps2pi
xor
or
repz
and
or
adc
jle
ins
xchg
and
sub
sub
bound
pop
pop
jbe
inc
push
xor
push
and
test
dec
push
mov
jo
sub
xor
out
mov
adc
pop
jmp
cmp
aas
shr
stos
xchg
xchg
xor
dec
jle
sub
imul
(bad)
daa
sbb
pop
pop
jnp
cs
dec
ss
mov
shl
xsavec
sub
and
dec
xchg
jbe
movs
adc
cmp
jo
neg
adc
retf
rcl
lock
dec
inc
sub
stc
inc
sahf
adc
out
mov
xor
adc
adc
cmp
clc
push
fiadd
inc
cs
sub
popa
cmp
jae
push
jns
jb
jae
push
push
sbb
lahf
ss
jnp
(bad)
mov
pop
xchg
out
sbb
dec
pop
sbb
and
pop
adc
jo
xchg
pop
aas
imul
mov
and
sbb
jo
jp
inc
aas
sub
cmp
xor
aaa
or
loopne
jp
sub
push
cmp
sub
cs
inc
cli
xor
xor
and
inc
push
aaa
pop
dec
xor
(bad)
sbb
or
test
inc
jnp
shl
ds
lods
out
loop
inc
add
push
lods
jle
push
neg
loopne
sub
imul
xor
out
cs
sub
and
jecxz
mov
lods
js
loope
dec
aaa
mov
jns
mov
add
push
and
mov
xor
add
daa
xor
add
and
outs
mov
icebp
inc
inc
retf
fisttp
or
lock
dec
daa
add
xor
sti
inc
add
lods
xchg
jg
fdiv
addr16
repnz
lahf
jmp
repz
xchg
daa
inc
jbe
xor
dec
mov
mov
mov
aas
pop
cmp
mul
fisttp
cmp
inc
mov
loopne
icebp
xor
mov
dec
shr
(bad)
aas
pop
adc
push
and
mov
pop
push
push
sbb
popf
push
out
sub
or
sub
dec
outs
das
sub
inc
dec
jmp
push
cs
inc
jge
cmc
scas
iret
sub
sub
sbb
push
sub
fidivr
dec
cs
cmp
jae
xlat
leave
rcr
and
inc
push
xor
adc
mov
mov
add
loope
sub
ins
cmp
jnp
rcl
sbb
(bad)
shr
outs
xor
mov
pushf
dec
outs
ret
rcr
sub
mov
mov
pop
mov
pop
sub
aas
dec
push
xchg
xor
mov
ins
pop
out
pop
loop
pop
cmp
adc
dec
scas
and
ins
jo
push
adc
pop
je
sbb
sar
sahf
(bad)
imul
cmp
xor
ror
hlt
scas
jle
lahf
pop
sub
xchg
sub
pop
pop
scas
mov
pop
pop
sub
sub
ret
and
mov
pusha
adc
retf
sub
sub
mov
and
mov
jnp
retf
stos
jbe
out
inc
mov
pop
mov
xlat
test
and
add
xchg
dec
push
jnp
xor
inc
scas
jmp
shl
sti
daa
or
mov
aaa
out
ret
cmp
inc
mov
sar
stos
inc
mov
sub
aaa
ret
and
xor
repnz
outs
pop
inc
dec
sti
sub
sub
fild
imul
inc
aam
idiv
push
inc
shl
inc
es
dec
rcr
xor
int
push
and
fidiv
popa
mov
jmp
pop
sub
shl
push
out
add
push
pusha
sti
dec
cmp
xor
sub
push
dec
mov
push
mov
and
out
xchg
pop
test
out
mov
test
inc
repnz
pop
xchg
push
mov
adc
add
inc
mov
add
mov
push
xor
pop
leave
aad
or
daa
cmp
cmp
xor
pushf
aaa
cmp
push
(bad)
das
mov
mov
fwait
lahf
dec
adc
cmp
pop
jg
scas
mov
jae
out
xor
mov
pop
sahf
cs
jmp
mov
mov
addr16
and
stc
xor
or
dec
sahf
sub
xchg
and
pop
mov
xchg
push
scas
xor
sub
leave
and
movs
dec
iret
or
fiadd
cmp
add
mov
push
call
add
add
xchg
cmps
daa
inc
cmps
arpl
inc
xor
or
inc
cmp
(bad)
das
pop
loopne
imul
stos
rol
sahf
push
xor
repz
dec
dec
scas
push
and
daa
ffreep
jmp
mov
rol
sub
xchg
pop
fistp
sub
(bad)
xor
xor
inc
add
stos
push
cmp
scas
inc
inc
pusha
shl
sbb
jne
iret
inc
push
sbb
bound
xor
fsub
or
shl
mov
sub
add
andnps
adc
imul
sub
mov
sahf
sub
add
mov
fdiv
jae
cmp
retf
mov
lahf
push
xchg
push
push
aas
retf
sub
scas
sub
dec
rol
xchg
push
ror
sub
fild
jecxz
adc
pop
xlat
jns
mov
cs
je
xor
sub
sti
xchg
push
mov
neg
xor
lea
daa
stos
(bad)
and
retf
mov
mov
nop
dec
mov
mov
inc
(bad)
dec
mov
xor
cmp
mov
pop
xchg
and
(bad)
mov
repz
shl
inc
mov
scas
les
adc
stos
ss
out
test
inc
add
mov
mov
or
push
daa
outs
fidivr
cli
in
sub
mov
call
push
pop
pop
movs
or
dec
xor
sbb
dec
mov
(bad)
bound
fld
stos
inc
arpl
ret
mov
test
inc
mov
jae
scas
xor
jg
dec
test
icebp
lahf
fild
das
out
ret
out
bound
and
inc
mov
mov
mov
ret
imul
cmps
fist
daa
cmps
call
xor
jmp
data16
adc
outs
xchg
adc
jbe
push
aaa
and
stos
adc
sub
sbb
pop
jno
sub
add
shl
add
push
or
mov
sub
sub
aaa
add
add
test
fistp
and
xchg
pop
in
sub
adc
jne
add
test
fwait
std
jg
mov
mov
(bad)
inc
or
pop
add
xor
daa
pop
es
test
push
das
out
dec
mov
lea
pop
test
push
pop
dec
jp
hlt
xchg
add
test
sub
bound
nop
jmp
mov
add
xchg
cli
pop
out
jbe
test
daa
adc
push
pop
pop
js
jge
adc
jns
xchg
xchg
dec
adc
push
les
and
mov
test
dec
shl
jecxz
mov
imul
popa
call
js
pop
repz
or
lahf
fisttp
jecxz
cld
(bad)
cmp
push
add
pop
fadd
xor
(bad)
lock
pop
or
out
movs
arpl
gs
fld
mov
sbb
out
(bad)
(bad)
out
bound
mov
and
arpl
push
cmp
pusha
sub
xorps
ja
push
pop
cmp
loopne
dec
gs
arpl
scas
add
xor
std
push
xchg
jae
mov
ret
in
jle
leave
dec
xchg
outs
jg
dec
mov
adc
imul
jbe
(bad)
sbb
sub
repnz
cli
mov
mov
mov
mov
adc
sbb
stos
jbe
dec
dec
push
loop
pusha
push
push
sti
adc
(bad)
in
(bad)
popa
repz
xchg
sbb
pop
ret
out
fisubr
jae
in
xchg
push
in
out
in
jle
xor
jno
shl
dec
dec
test
sub
iret
jle
mov
(bad)
push
das
adc
dec
or
dec
adc
(bad)
in
fistp
xor
and
aaa
bound
fcmovnu
push
cld
in
or
imul
pop
sbb
jle
mov
add
inc
das
mov
cmp
add
dec
jae
or
retf
dec
int
aaa
sar
ret
ins
or
mov
jg
(bad)
jo
(bad)
pop
inc
push
popf
cmp
cmp
jg
mov
xor
mov
sahf
retf
jp
hlt
data16
neg
sar
jnp
or
push
mov
cs
add
arpl
ins
mov
loope
outs
pusha
xor
mov
jl
in
xlat
call
jo
dec
add
int
movs
bound
push
xlat
sub
pusha
xor
(bad)
lock
fdivr
adc
out
cmps
arpl
push
sub
dec
arpl
xchg
imul
cmp
xchg
shl
sbb
arpl
setae
std
dec
std
push
push
push
xchg
cld
push
push
dec
sti
push
xchg
dec
fld
pop
xor
jge
mov
(bad)
call
jg
push
(bad)
outs
xor
pop
pop
or
xchg
cmp
retf
inc
mov
dec
xchg
xlat
inc
leave
popa
adc
jnp
aas
sub
mov
fadd
xor
cdq
pop
push
mov
push
adc
xchg
cs
add
imul
pop
xchg
bound
pop
cs
dec
cmp
cmp
mov
mov
rcl
add
or
sub
adc
adc
sbb
mov
scas
retf
loopne
xchg
stc
nop
popa
imul
dec
out
cmp
or
in
(bad)
gs
das
iret
and
sub
jnp
or
push
push
pop
pop
add
dec
sub
daa
or
push
or
imul
or
push
jp
mov
jb
and
push
pop
or
ret
cs
nop
push
pop
into
dec
repnz
rcr
sbb
push
lea
loopne
jle
(bad)
push
pop
ror
ds
fcmovbe
jmp
push
dec
mov
into
sbb
pushf
addr16
into
(bad)
sub
or
pop
sub
lds
xchg
std
inc
push
(bad)
jmp
sub
daa
stos
and
pusha
xor
sub
bound
sbb
mov
in
dec
scas
add
push
or
repnz
das
push
mov
pop
push
mov
pusha
fmul
(bad)
jbe
pop
jns
jp
adc
loop
mov
xlat
mov
mov
sub
inc
push
xchg
pop
loop
xchg
ret
push
mov
xor
and
(bad)
push
jp
jne
add
push
and
or
fiadd
pop
rcl
out
jbe
imul
sub
aaa
cwde
in
out
jmp
gs
scas
shr
sub
push
daa
push
add
pop
in
mov
dec
or
sub
xchg
jp
pop
push
pop
in
das
mov
xor
push
add
dec
dec
xchg
xor
ins
enter
popa
arpl
jbe
fistp
repz
jmp
add
imul
test
push
das
sbb
jo
push
(bad)
(bad)
ja
mov
(bad)
pop
mov
cmp
jae
outs
dec
mov
fnstcw
inc
and
or
mov
rcl
pop
or
in
cmp
add
xchg
cmps
mov
xor
jb
sar
cmps
xchg
arpl
jg
push
or
mov
daa
xchg
test
and
adc
shl
movs
call
call
aas
cmp
or
imul
mov
call
push
pop
aam
sub
fild
inc
ffree
add
xchg
arpl
dec
arpl
inc
sti
mov
xchg
push
(bad)
jmp
xchg
jb
arpl
sub
movs
inc
retfw
les
xor
mov
sbb
or
jmp
sub
arpl
out
xchg
jb
fs
xor
aas
mov
adc
arpl
adc
sbb
add
imul
sbb
(bad)
pop
mov
popa
das
(bad)
pop
add
cwde
stos
xchg
pusha
(bad)
out
dec
daa
xor
fs
adc
sbb
mov
sub
rcl
and
push
pop
push
dec
jne
sub
outs
xor
sbb
cmps
or
add
jo
sub
arpl
adc
sbb
sub
inc
pop
and
add
or
mov
mov
ds
inc
sbb
add
xor
xchg
arpl
jae
xor
fstp
call
jmp
js
mov
ins
je
aad
push
mov
and
jbe
retf
dec
addr16
je
pusha
in
scas
lahf
push
push
jb
mov
inc
clc
sub
popa
ffree
add
mov
xor
add
pop
jmp
or
mov
jg
xchg
sbb
xlat
mov
adc
add
mov
pop
sti
or
add
push
out
pop
push
test
movs
push
jp
inc
cmps
nop
lahf
jmp
sbb
adc
cs
jnp
sahf
loopne
nop
call
push
adc
jmp
movs
mov
jae
shl
push
mov
aaa
mov
jnp
aas
and
rcr
sti
xor
repnz
mov
das
and
mov
sbb
push
mov
adc
jne
pop
mov
mov
mov
sub
int3
push
jne
xadd
inc
dec
cmp
jg
mov
rcr
das
outs
lods
pusha
jo
scas
out
fist
pop
push
cwde
mov
xchg
or
adc
pop
fdiv
ficomp
pop
jecxz
sub
pop
pop
xchg
sbb
das
outs
fnstsw
pop
mov
jne
adc
sbb
push
xchg
out
inc
pop
sti
mov
ss
mov
jmp
pop
push
test
jae
lahf
call
pop
jbe
mov
call
jg
movs
xchg
loop
not
dec
cmc
retf
pop
inc
mov
add
and
rcr
and
mov
pop
nop
sbb
adc
sbb
pop
mov
imul
addr16
(bad)
movs
sub
ja
jb
add
jg
ret
xchg
hlt
push
pusha
out
mov
dec
daa
jae
mov
call
mov
je
ror
jmp
push
fmul
lahf
fucomip
cmp
(bad)
jmp
out
mov
vmovsd
adc
imul
leave
jae
bound
cmp
mov
inc
jmp
mov
pusha
loopne
push
mov
jnp
xchg
ficom
and
add
sub
push
jg
pop
mov
cmp
hlt
pop
add
push
lods
dec
inc
jae
imul
jne
dec
inc
fwait
pop
imul
cmp
fs
inc
ret
push
and
push
xchg
arpl
inc
push
mov
or
test
ret
mov
jbe
jnp
xchg
mov
dec
sti
inc
lahf
scas
jmp
xchg
push
or
inc
push
lds
jae
sub
adc
xor
jmp
mov
cmp
(bad)
popa
add
sbb
jl
loop
push
mov
sub
mov
mov
jb
fiadd
xor
inc
ins
xor
jecxz
and
push
adc
xor
call
or
sbb
pop
mov
bndstx
stos
les
es
xchg
sub
push
inc
and
inc
push
xor
mov
mov
inc
adc
dec
or
add
or
push
popa
lock
pop
out
sahf
mov
push
daa
adc
cmp
(bad)
mov
int
cmp
cs
das
cmp
dec
mov
jb
sbb
inc
push
adc
aaa
scas
or
bound
push
pusha
cmps
cmp
and
sbb
aaa
fisttp
push
pop
stos
leave
fild
jmp
add
mov
adc
stos
inc
call
(bad)
jecxz
iret
jo
mov
jg
out
xchg
or
das
pop
mov
ds
dec
int3
dec
mov
test
les
repz
mov
sub
lock
imul
add
sub
and
sub
sub
dec
cmp
je
fwait
repnz
les
mov
dec
cmp
push
shl
cmp
and
push
outs
je
scas
daa
mov
adc
and
retf
out
daa
rol
daa
mov
or
loop
test
dec
or
add
xrelease
mov
xor
ins
push
bound
pop
pop
xchg
pop
mov
adc
mov
mov
jg
push
movs
or
aam
push
and
add
ret
push
mov
dec
dec
and
pushw
jp
pop
push
push
mov
pop
adc
mov
aas
jno
test
mov
adc
lea
pop
popa
mov
lods
inc
das
outs
xor
shr
pshufw
mov
xchg
sbb
call
ja
add
sub
iret
scas
mov
ror
and
add
sar
retf
sub
out
sub
pushw
jne
inc
aam
or
jbe
fisttp
pop
sar
stos
(bad)
scas
jo
ss
mov
jecxz
(bad)
xchg
and
bound
pop
adc
imul
add
test
dec
shr
inc
pusha
ins
lds
pop
loopne
sub
test
adc
xor
inc
or
cs
lea
add
fdivp
stos
push
xchg
lods
or
ins
jg
mov
sub
lods
xor
and
add
or
mov
jmp
add
sbb
jne
xor
add
adc
jmp
jmp
sub
adc
dec
clc
xchg
daa
mov
or
cmp
ror
jg
inc
iret
inc
or
xor
adc
mov
scas
arpl
cli
sbb
es
push
jo
(bad)
out
and
les
jns
mul
loopne
xor
imul
adc
imul
add
lahf
inc
push
or
add
lahf
push
adc
pop
scas
scas
sub
pop
pop
enter
sti
jp
mov
bound
ins
retf
outs
loop
push
sub
add
sahf
jae
fiadd
sbb
fwait
addr16
sub
jb
jmp
sub
ins
or
mov
ja
push
adc
cmp
and
pushf
arpl
cmp
cmp
repz
imul
pop
mov
ret
pcmpgtb
bound
adc
rol
jne
cmps
test
ins
das
iret
outs
adc
inc
mov
jle
shr
or
pxor
jbe
or
xor
mov
xchg
out
sbb
ins
mov
(bad)
daa
bound
(bad)
jg
sbb
mov
fwait
add
not
add
or
or
pop
mov
adc
cmp
daa
sahf
inc
sub
sub
gs
mov
pop
mov
popa
xchg
cmp
shr
imul
(bad)
cmps
mov
adc
shl
sub
and
bound
sub
inc
inc
pop
and
inc
out
mov
ds
out
adc
push
rol
aad
cmps
jmp
ss
call
ret
push
sbb
inc
mov
xchg
dec
fsubr
imul
aad
cmps
mov
ins
cmp
outs
add
push
or
gs
or
add
cmp
(bad)
jnp
fld
xor
scas
outs
dec
add
sub
or
or
loope
xlat
outs
dec
sbb
imul
jno
out
push
xchg
push
dec
cld
mov
imul
out
lods
nop
add
add
xchg
add
outs
loope
daa
inc
add
pop
idiv
icebp
adc
outs
addr16
outs
imul
and
dec
push
or
mov
adc
or
adc
jb
push
ins
out
mov
push
scas
(bad)
aad
mov
sti
pop
dec
mov
xor
sti
pop
rcr
imul
lods
sbb
sub
sbb
in
sub
dec
ficomp
push
pop
je
mov
ud0
imul
lods
xor
mov
sbb
adc
outs
adc
daa
popw
cmps
ins
(bad)
jbe
inc
mul
jecxz
mov
fild
xchg
xchg
cmc
ret
pop
mov
or
cmp
fbld
aaa
mov
pop
pop
stos
sub
jae
rcl
and
sti
jne
push
jecxz
dec
xor
push
dec
mov
or
dec
scas
out
mov
in
ja
xor
imul
pop
arpl
adc
xchg
rol
ja
sub
add
or
mov
cmp
mov
(bad)
jle
imul
(bad)
ja
sub
into
cld
or
xor
xlat
outs
mov
and
sbb
xchg
adc
sub
mov
test
and
sahf
cmp
xchg
push
xchg
rol
out
pop
push
lods
mov
adc
adc
mul
ret
push
dec
pop
(bad)
in
rcpps
mov
push
add
popf
inc
(bad)
rcr
jmp
stos
or
mov
rol
aam
rcl
cmp
add
inc
adc
loop
xchg
fbld
imul
adc
aad
push
sar
sub
push
inc
dec
push
push
mov
jnp
push
mov
inc
mov
adc
aas
inc
dec
sahf
or
jmp
push
dec
push
inc
sbb
pop
jmp
pop
outs
cmp
mov
call
int3
lods
jb
jae
push
test
adc
test
mov
jmp
xchg
or
mov
adc
add
pop
dec
dec
fist
retf
lock
(bad)
mov
dec
bound
inc
dec
imul
push
(bad)
adc
das
xor
adc
sub
out
mov
xchg
cs
adc
addr16
xor
pop
mov
leave
add
jnp
or
xor
add
(bad)
push
mov
push
sub
inc
imul
and
push
movq
xchg
dec
rol
ins
jae
cld
(bad)
push
and
scas
dec
xor
push
dec
jmp
mov
sbb
and
ja
test
inc
sub
mov
xor
push
mov
pop
xchg
jo
addr16
dec
repz
mov
js
cmp
inc
stos
je
sbb
stos
xchg
xchg
jae
pop
push
cmp
outs
jp
(bad)
push
mov
cmp
pop
or
sub
xchg
dec
sub
inc
imul
mov
jg
dec
(bad)
cmp
push
mov
sub
xchg
sbb
test
test
cdq
mov
or
push
pop
les
sub
add
adc
imul
cmps
jmp
imul
xor
mov
xchg
test
stos
xor
imul
popa
adc
dec
pop
pop
sbb
test
jbe
pop
mov
push
add
pop
xor
xlat
aam
stos
je
push
mov
sub
sub
daa
mov
test
(bad)
out
mov
sub
rcl
mov
and
cmp
sub
push
add
pop
fist
mov
sub
or
repz
pushf
or
push
ins
adc
imul
push
cmps
dec
fild
les
push
dec
je
out
pop
mov
sub
xor
iret
mov
dec
pop
cmps
jae
jb
pop
movs
or
addr16
cmp
sti
sub
mov
inc
xchg
sbb
mov
hlt
sar
ins
dec
xor
push
jecxz
aas
test
sahf
xlat
fiadd
lds
mov
cmps
mov
push
dec
cwde
lods
mov
push
xchg
ins
sbb
fs
pop
mov
ja
loopne
add
pop
mov
pop
push
inc
daa
inc
jecxz
out
pop
push
je
push
pop
pop
jo
push
xlat
not
inc
pop
add
jne
inc
aaa
pusha
adc
inc
pop
sahf
jnp
cmps
pop
inc
sbb
sub
test
ret
jp
jbe
jge
out
fstp
mov
xchg
scas
cmp
inc
js
jmp
dec
aas
ja
sbb
mov
mov
mov
adc
mov
pop
pop
xchg
sub
sbb
push
aad
inc
inc
dec
pop
mov
es
ins
sbb
lods
nop
pop
je
loopne
test
imul
scas
(bad)
jle
daa
add
or
or
pop
xlat
adc
push
jecxz
pop
inc
add
retf
push
or
jno
rcr
rdtsc
xor
pop
sub
inc
imul
icebp
outs
rcl
xchg
bound
pop
dec
(bad)
out
jecxz
rol
adc
add
ret
imul
rcl
inc
cmps
out
out
push
cmps
jo
jmp
dec
add
or
push
and
(bad)
mov
pop
xchg
shr
dec
out
adc
sub
scas
dec
ins
nop
sahf
pop
mov
arpl
test
aaa
ss
sub
and
ret
iret
pusha
and
dec
sub
and
push
call
xchg
sbb
(bad)
sahf
je
add
ins
inc
ret
push
and
addr16
ins
mov
pop
mov
dec
loopne
mov
pop
mov
xlat
out
cmps
push
aaa
adc
gs
dec
fcom
jae
lods
sub
cmp
or
bound
push
cmp
call
test
into
dec
ret
jno
mov
adc
add
(bad)
outs
out
or
add
btc
test
cmp
popf
sbb
in
sub
and
ja
pop
and
packssdw
cwde
pop
cwde
push
adc
outs
je
push
popa
pop
pop
iret
les
mov
shl
inc
cmp
loope
pop
rcl
sub
jg
cmp
push
jg
xor
lods
pop
fwait
inc
sbb
movs
(bad)
in
stos
aad
mov
popa
jae
pop
push
cmps
test
iret
imul
ins
push
arpl
xor
dec
jp
movs
test
fbld
bound
ja
arpl
pop
or
and
movs
test
outs
adc
sub
gs
popa
shr
fwait
cmps
arpl
dec
das
dec
sub
sbb
bound
cmp
stos
outs
cmp
jbe
sbb
mov
inc
sbb
outs
add
fwait
push
outs
and
inc
mov
sub
(bad)
outs
sub
push
scas
add
xor
jb
or
iret
je
push
push
pop
dec
stos
adc
mov
pop
fwait
icebp
cs
jnp
mov
jp
repz
loopne
arpl
jo
sti
sbb
aam
pop
pop
jg
dec
xchg
push
sub
jp
and
adc
(bad)
jno
es
mov
and
mov
or
mov
xchg
outs
ja
mov
mov
xor
ret
and
popa
push
out
mov
sub
jecxz
or
mov
mov
arpl
mov
mov
inc
lea
xor
sti
imul
and
push
dec
stos
pop
pop
push
sub
xor
outs
retf
icebp
jbe
jecxz
and
mov
add
dec
cmps
xchg
mov
pop
xlat
ins
loop
movs
test
inc
jecxz
xor
push
jae
(bad)
adc
in
outs
(bad)
push
in
pop
int
inc
pop
xchg
jbe
cmp
rcr
shl
sub
push
jg
and
add
push
add
jae
ficomp
mov
or
fst
repnz
push
adc
out
add
and
and
inc
fistp
lds
(bad)
popa
mov
lods
push
aaa
or
arpl
arpl
pop
mov
test
jmp
out
jo
xor
arpl
jbe
iret
sub
out
test
out
or
or
stos
and
popa
mov
and
and
stos
sbb
popa
push
aad
push
(bad)
jmp
ins
mov
sbb
push
push
cdq
sub
cmps
nop
retf
popa
imul
daa
popa
sub
ret
and
pop
jmp
xchg
mov
mov
jecxz
push
test
lods
add
or
stos
mov
data16
inc
xchg
push
pusha
aaa
jecxz
push
mov
test
pop
out
mov
shr
bound
adc
pop
(bad)
add
cmp
push
sub
arpl
shl
cwde
adc
imul
push
and
and
xor
outs
loope
stos
nop
repz
lea
dec
pop
retf
pop
ins
stos
(bad)
pop
xchg
stos
imul
imul
loop
adc
outs
aaa
popa
adc
xchg
(bad)
sub
aam
or
cmp
xchg
cmp
pop
pusha
and
movs
xor
dec
movs
add
add
enter
jmp
inc
push
mov
mov
fiadd
mov
es
sti
pop
xor
imul
jmp
stos
inc
dec
in
jne
push
or
push
mov
outs
(bad)
push
add
imul
arpl
xchg
mov
sub
sub
dec
popa
and
dec
mov
jecxz
cmps
(bad)
mov
ret
das
sbb
jae
mov
test
popa
pop
fs
mov
popa
add
jmp
xor
sub
mov
outs
rcl
xchg
outs
or
loop
dec
jnp
or
jae
sub
outs
ins
mov
push
pop
aad
pop
xor
or
cmp
mov
and
loope
or
fidiv
jmp
inc
inc
or
pusha
mov
retf
and
mov
mov
fwait
mov
dec
xchg
(bad)
pop
mov
lods
ret
cmps
dec
push
mov
inc
or
and
(bad)
cli
mov
dec
test
pop
inc
retf
jae
sub
mov
addr16
aam
push
jo
add
cmps
jb
sub
pop
call
sbb
jne
outs
sub
jecxz
xor
and
fistp
rol
xor
loopne
and
sti
scas
ja
movs
pop
push
call
sbb
or
jbe
pop
shr
jae
pop
imul
xor
daa
cmps
mov
ins
(bad)
mov
mov
inc
(bad)
ficom
xchg
ins
clc
xor
pusha
je
pop
jae
dec
pop
mov
or
xor
cwde
movs
out
iret
and
cmp
mov
add
mov
mov
add
mov
out
add
or
mov
push
stos
daa
stos
das
adc
mov
imul
popa
shr
loopne
arpl
xor
mov
call
xchg
outs
xchg
push
test
jbe
xor
mov
mov
sub
addr16
iret
push
add
adc
das
pop
arpl
movs
cs
daa
pop
mov
dec
sbb
xor
xor
ja
sub
jno
addr16
rsm
enter
jmp
inc
xchg
xor
sub
dec
inc
add
mov
bound
mov
ja
push
aaa
aaa
ds
push
movs
xlat
jg
sbb
es
push
mov
or
mov
retf
sub
push
mov
xchg
push
sub
add
jg
push
xor
mov
cs
add
retf
inc
mov
fnsave
cld
push
test
xor
add
aaa
add
or
xor
outs
jge
or
jnp
pop
iret
xchg
mov
mov
pop
and
sti
lods
push
inc
dec
jp
dec
inc
mov
fisttp
dec
fcmovnu
pop
dec
sub
or
fcomp
cdq
and
or
int
add
adc
add
push
sub
mov
fsubr
dec
ret
scas
xchg
outs
and
jp
adc
test
add
mov
jp
inc
adc
and
and
inc
mov
jnp
popa
leave
shl
and
adc
or
mov
push
xor
repz
mov
push
pop
imul
out
pop
mov
lods
call
call
jae
push
mov
cmps
pop
stos
shr
jns
add
dec
mov
sbb
daa
ret
test
cmp
push
(bad)
push
xchg
pop
sbb
mov
test
cmp
or
pop
mov
dec
and
dec
mov
jno
adc
fwait
pop
(bad)
das
mov
repnz
push
jecxz
xchg
mov
mov
mov
push
pop
addr16
shl
sub
jecxz
scas
or
test
pop
sub
enter
mov
mov
xor
imul
cmp
(bad)
dec
arpl
lock
push
loopne
add
imul
scas
jbe
push
push
pop
mov
outs
jbe
adc
pop
repnz
sub
pop
add
mov
jmp
pop
sbb
(bad)
jbe
jbe
mov
xlat
outs
(bad)
push
adc
mov
add
inc
pop
dec
xor
sub
pop
xor
iret
jecxz
add
or
mov
outs
(bad)
nop
dec
mov
add
or
push
jb
js
ins
and
outs
idiv
push
dec
pop
sbb
or
add
inc
sar
jp
or
adc
das
mov
call
add
add
int3
xchg
add
out
and
out
xlat
ret
pusha
push
dec
pop
pop
jbe
sbb
inc
mov
push
add
pop
cwde
(bad)
scas
fisub
(bad)
out
xor
or
aad
dec
xor
cld
nop
adc
into
push
(bad)
xchg
or
and
jp
adc
fsubr
xor
in
pop
sbb
pop
xchg
push
mov
ret
jecxz
and
or
and
pusha
nop
xchg
xchg
dec
test
pop
mov
adc
mov
(bad)
ss
mov
daa
sbb
into
push
jecxz
in
test
stc
sbb
jmp
(bad)
cmp
leave
inc
inc
and
xchg
outs
out
push
sub
mov
retf
dec
adc
xchg
je
sub
or
adc
dec
call
add
inc
pop
xchg
sbb
scas
div
adc
inc
pusha
lahf
push
mov
push
enter
leave
shr
das
xlat
cmp
scas
pop
repnz
cmp
dec
push
xchg
sub
rcr
jmp
dec
imul
sub
pop
sbb
or
or
or
jae
stos
sbb
loop
sub
mov
fisub
test
cmp
adc
pop
outs
jnp
or
loopne
mul
push
and
sub
push
pusha
adc
jp
adc
lods
fisub
cs
shr
adc
mov
aas
and
inc
cmps
stos
mov
and
push
inc
mov
push
fild
mov
int
and
test
(bad)
sets
imul
adc
or
aas
push
bound
jno
or
ret
push
or
lea
or
sub
sub
or
inc
or
xchg
shl
and
aas
(bad)
loop
add
pop
add
add
add
dec
jo
ror
mov
xor
repz
jne
mov
daa
fwait
mov
cs
adc
pop
add
daa
pusha
pusha
add
(bad)
dec
fiadd
mov
dec
mov
jge
test
xor
jp
mov
neg
dec
retf
push
loope
cmp
cmp
xchg
sub
mov
jnp
popa
inc
mov
and
data16
imul
stos
sti
scas
mov
jmp
mov
fisub
pop
inc
jae
sub
add
(bad)
xchg
arpl
fist
in
dec
ret
sub
push
retf
daa
retf
xor
or
mov
xchg
rol
dec
rcr
dec
mov
xchg
adc
jo
dec
jbe
adc
inc
or
inc
xor
cmp
test
or
cdq
add
or
jbe
push
out
inc
mov
(bad)
and
or
mov
xor
retf
mov
js
or
pop
push
stos
xor
sti
ret
ins
aad
dec
jmp
mov
lock
or
dec
sub
mov
popa
fistp
sbb
add
adc
and
inc
add
pop
pop
xchg
sub
enter
push
add
adc
jbe
xchg
nop
push
or
inc
retf
outs
xor
or
fmul
aam
add
jne
adc
daa
and
fwait
add
jecxz
jmp
mov
mov
jle
outs
jo
outs
call
add
fbld
or
xchg
xchg
mov
cmps
fs
add
mov
rcr
arpl
mov
loope
(bad)
out
ins
or
sub
jae
inc
xchg
xchg
pop
lahf
or
sbb
xlat
dec
and
jbe
lahf
jp
scas
dec
mov
jno
popa
cmps
add
(bad)
lahf
sbb
adc
unpcklps
lds
xchg
cmp
add
adc
and
xchg
stos
jg
mov
arpl
adc
sbb
ja
rcr
dec
fstp
xchg
adc
imul
push
mov
inc
mov
pop
xchg
mov
arpl
(bad)
aad
(bad)
mov
dec
or
sub
icebp
popa
xchg
shl
loope
and
ret
repz
arpl
les
xlat
in
pusha
pop
xlat
sbb
pop
jmp
aas
icebp
push
or
retf
sub
das
dec
fcmovnb
mov
cmovae
mov
sbb
add
inc
rol
sbb
mov
adc
scas
add
xor
lods
pop
or
jae
dec
add
jbe
jecxz
and
arpl
jnp
pop
outs
xor
popa
xlat
mov
rol
add
outs
push
xor
movs
ror
and
mov
mov
or
jne
sbb
sub
inc
push
mov
dec
mov
lds
and
mov
sbb
and
lock
mov
pop
jbe
fild
pop
test
call
pop
and
pop
push
xor
dec
ins
sub
(bad)
pop
xchg
pushf
dec
xor
push
push
xchg
add
ret
or
aam
test
adc
popa
shl
scas
and
mov
popa
ins
cmp
retf
ins
and
ins
and
push
mov
or
or
push
jno
test
repz
sbb
fucomi
jmp
sub
je
mov
fwait
test
repz
add
enter
jle
mov
(bad)
outs
jnp
add
sub
ins
mov
stos
sub
adc
dec
add
xchg
xchg
mov
pop
mov
mov
and
xchg
add
jae
fs
gs
ficom
loopne
ss
call
mov
aas
mov
shr
sub
das
cmps
add
imul
sti
sti
lds
js
xchg
mov
cwde
sbb
sub
imul
test
sub
pop
dec
iret
dec
inc
mov
sbb
mov
sbb
stos
cli
cmp
ficomp
cmps
sti
xor
and
dec
adc
push
pop
fadd
pop
add
xchg
and
je
pop
sub
adc
imul
or
jnp
adc
je
pop
arpl
(bad)
jmp
inc
mov
sub
hlt
add
retf
pop
push
bound
setnp
rcr
aad
sbb
lahf
retf
push
jbe
mov
out
popa
popa
les
inc
sbb
or
pop
and
movs
sub
mov
dec
pop
inc
add
xchg
xor
adc
fcomp
mov
shr
mov
push
mov
or
xchg
sub
and
push
inc
cmp
inc
lock
aaa
sbb
pop
lds
call
out
sub
pop
daa
adc
xchg
aaa
repz
popa
mov
out
test
ficomp
inc
or
mov
push
daa
adc
pop
add
xchg
aas
or
xor
push
das
sbb
pop
lods
push
inc
pushf
ja
jmp
push
inc
ret
push
adc
add
lea
add
pop
nop
mov
out
cs
adc
add
jno
mov
pop
ss
adc
fild
and
inc
pop
stos
and
mov
pop
push
test
movs
fidiv
and
xor
aad
add
lock
xor
stos
loopne
push
sbb
mov
test
and
(bad)
aas
loope
pop
inc
out
outs
daa
or
mov
cmp
push
retf
retf
add
sbb
(bad)
sub
fidiv
or
(bad)
jg
cmp
jne
and
jg
pop
add
fmul
inc
jmp
pop
(bad)
mov
jae
dec
adc
gs
test
test
dec
aas
cs
repz
fisub
ja
adc
push
test
push
sub
ins
xor
inc
ret
cmp
jo
xchg
outs
jecxz
jae
popa
mov
lahf
and
mov
daa
mov
inc
add
and
sub
fdiv
ins
dec
inc
push
cmp
add
loope
xchg
pop
sub
rcr
dec
jmp
getsec
daa
ret
mov
xchg
or
pusha
ret
cmps
inc
or
ins
jg
inc
mov
imul
add
out
inc
ror
add
fsub
fsub
loopne
cmp
imul
stos
les
mov
sub
rcl
push
jb
adc
pop
aas
es
popa
(bad)
outs
jge
repz
mov
popa
mov
push
dec
rol
xor
jg
push
xor
pandn
add
adc
popa
fmul
rol
dec
push
mov
(bad)
ins
ins
sti
xlat
scas
or
(bad)
arpl
call
xchg
adc
xor
or
mov
pop
fs
(bad)
push
inc
sti
inc
mov
lahf
jne
call
sbb
xor
dec
pop
test
add
fild
add
pop
sbb
and
call
or
adc
add
dec
fwait
push
test
pop
mov
adc
sub
test
xchg
imul
mov
scas
outs
add
movs
xchg
mov
ret
stos
inc
lahf
(bad)
push
add
inc
adc
inc
or
mov
mov
add
outs
add
mov
push
jecxz
dec
sbb
pop
xor
push
imul
add
stos
adc
push
dec
jnp
(bad)
sbb
bound
fist
mov
out
pop
jle
inc
cdq
(bad)
cmp
inc
sub
dec
cmp
mov
sbb
aas
imul
sbb
sbb
xor
jnp
sub
out
add
push
cmp
mov
cmp
add
inc
and
scas
aaa
ins
jecxz
adc
sbb
ins
sysret
mov
imul
gs
adc
adc
mov
and
sbb
aas
push
mov
sub
adc
cmp
cmp
cmp
pusha
mov
dec
imul
and
xor
jmp
adc
add
sbb
jp
dec
and
inc
retf
sti
inc
xchg
sbb
fwait
loop
sbb
dec
aas
or
xor
outs
call
push
add
sub
inc
mov
xchg
int
or
sbb
inc
dec
das
inc
mov
pusha
daa
pop
cmp
and
add
outs
(bad)
push
dec
and
movs
(bad)
loop
inc
ja
pusha
clc
cwde
mov
fwait
cmps
retf
out
mov
jecxz
dec
shl
mov
dec
inc
jnp
xchg
lods
and
sub
pop
jo
stos
xor
aas
pop
dec
retf
dec
pop
sub
push
push
outs
or
xchg
xor
xchg
sub
and
dec
das
jae
sub
pop
sbb
sub
leave
cmp
xor
xor
push
fs
and
daa
inc
aad
xlat
ss
push
dec
sti
pusha
xchg
mov
fisttp
adc
mov
jmp
movs
enterw
mov
jg
adc
lods
add
fild
or
and
retf
xchg
add
dec
add
enter
sub
and
mov
or
ins
pop
aaa
xchg
cmp
mov
inc
fstp
sub
(bad)
jmp
cdq
pop
push
je
call
pop
sbb
mov
push
sub
adc
adc
adc
loopne
push
jecxz
or
retf
das
add
ins
pop
inc
arpl
dec
retf
add
sub
or
or
mov
xor
call
scas
sub
push
mov
sub
xor
ret
dec
xor
mov
push
add
pop
mov
jmp
(bad)
push
inc
arpl
push
das
sub
mov
ret
call
sbb
xchg
mov
arpl
sub
pop
and
add
xchg
mov
pop
jno
mov
call
ss
fimul
and
and
in
popa
xor
mov
and
addr16
inc
or
lea
pop
dec
pop
or
xor
mov
xchg
pop
mov
xor
cmp
js
sbb
ss
jae
loope
dec
ja
pop
neg
xchg
test
sub
rol
push
cmps
daa
xor
stos
pusha
mov
inc
xchg
mov
sar
jecxz
mov
scas
fwait
cmp
pop
adc
xor
(bad)
lods
pop
adc
ins
lahf
(bad)
mov
or
inc
push
imul
nop
mov
sahf
cdq
pushf
mov
sub
dec
(bad)
dec
ja
or
pop
ins
xor
push
push
inc
add
cdq
arpl
jmp
sub
shl
and
inc
(bad)
xlat
xor
mov
cmp
mov
mov
shl
cwde
fstp
retf
fmul
mov
ins
stos
mov
pop
ret
and
pop
push
lds
icebp
push
inc
daa
fwait
or
stos
(bad)
setne
inc
and
mov
xchg
xor
mov
xor
pop
jo
dec
mov
xlat
inc
xor
nop
sbb
xchg
wrmsr
jmp
and
call
stos
fldenv
test
adc
adc
adc
xchg
and
dec
int
jo
pop
and
popf
pop
scas
push
repz
cmp
cwde
cmp
arpl
cmp
ja
or
or
fild
push
inc
mov
mov
mov
movs
aam
mov
addr16
dec
inc
add
fisubr
mov
inc
mov
inc
cmp
stos
mov
cmp
cs
sbb
and
and
stos
fld
pop
add
sub
add
add
add
inc
in
lahf
mov
or
or
das
or
mov
push
lea
imul
xchg
push
cmp
mov
adc
jnp
pop
mov
and
les
or
adc
inc
or
sub
pop
fwait
and
push
(bad)
jecxz
inc
mov
push
or
mov
pushf
push
fild
mov
(bad)
ins
retf
dec
cmps
inc
scas
xchg
xchg
xor
out
push
pop
dec
ja
cmp
mov
sbb
dec
xchg
out
gs
add
add
dec
or
xlat
jmp
dec
inc
and
dec
fadd
xlat
scas
mov
xor
mov
inc
dec
inc
test
push
add
push
mov
js
inc
push
lahf
sbb
add
(bad)
xchg
xchg
sbb
les
pusha
inc
dec
call
test
dec
dec
mov
pop
ja
jbe
dec
ud0
arpl
jae
aaa
(bad)
adc
jp
movs
inc
xchg
xor
mov
add
sbb
out
jno
inc
cmp
jg
rcr
pop
fild
pop
arpl
mov
add
pop
aaa
dec
pop
mov
jmp
fisttp
sbb
jo
push
or
les
xchg
js
lahf
xchg
fcom
and
inc
(bad)
dec
les
xor
stos
aaa
aaa
adc
cmp
sub
or
push
ins
xchg
out
cs
aaa
lods
mov
out
shl
push
das
fwait
movs
cmps
add
push
test
imul
mov
sbb
pusha
sbb
jnp
inc
inc
push
push
fwait
jecxz
aam
xor
push
xchg
fcomp
(bad)
aam
xchg
xor
sbb
loopne
jge
push
out
push
and
add
inc
mov
rol
mov
mov
cmp
sub
dec
jmp
add
dec
pop
mov
daa
ret
adc
pop
jo
aaa
arpl
movs
add
sub
pop
pop
loopne
and
mov
or
adc
inc
rol
inc
xchg
pushf
push
stos
iret
jo
sub
ja
or
add
xchg
xchg
aam
(bad)
in
add
cmps
jne
cmp
xchg
lods
test
push
and
inc
bound
pop
dec
and
inc
and
cli
out
(bad)
mov
pop
xor
ins
xchg
adc
dec
fwait
xchg
aam
movs
inc
xchg
mov
adc
inc
adc
ja
jnp
xchg
mov
mov
fwait
sbb
dec
call
imul
pop
pop
add
push
repnz
pop
add
push
add
ror
(bad)
adc
gs
jo
sub
cmp
outs
and
adc
xor
sbb
repz
test
mov
shl
(bad)
xor
xor
sub
xor
gs
(bad)
imul
adc
adc
repz
adc
test
push
add
jmp
push
inc
imul
add
in
add
ins
dec
or
inc
xor
ja
push
and
and
fild
mov
iret
mov
pusha
inc
and
dec
or
xor
sbb
push
leave
adc
outs
jne
add
add
and
iret
and
or
nop
sub
jnp
pop
call
push
xlat
(bad)
arpl
or
test
dec
push
sar
sub
xor
shl
xor
outs
mov
add
test
out
push
add
inc
loope
push
outs
xchg
pop
dec
ret
mov
sbb
push
mov
dec
xchg
cs
push
pop
xchg
fwait
jp
fbld
mov
popa
push
add
or
pop
or
xor
xlat
js
add
add
mov
sbb
mov
ins
jmp
add
test
fwait
xchg
icebp
adc
or
inc
and
repz
mov
push
inc
sub
push
mov
outs
mov
das
or
pop
dec
jg
mov
aaa
or
pop
push
pusha
add
sub
xchg
test
(bad)
cmp
add
rcl
xchg
and
sbb
mov
sub
or
scas
pusha
stos
ins
lahf
push
ror
mov
sbb
sub
retf
sub
lods
inc
add
add
sbb
rol
loopne
jecxz
push
imul
ret
lea
xchg
icebp
inc
and
sbb
mov
and
add
and
popa
ret
add
mov
sub
adc
add
pop
inc
lea
xchg
xchg
mov
ins
(bad)
adc
mov
sub
mov
(bad)
mov
popa
jns
rol
fisubr
and
or
xlat
xchg
repnz
lea
xchg
imul
adc
push
fisttp
imul
enter
jb
sbb
inc
lods
loop
imul
mov
or
xchg
pop
jae
adc
scas
xor
xor
les
mov
xchg
sbb
mov
xor
daa
data16
ins
or
retf
mov
mov
or
bound
sbb
push
inc
adc
out
jae
or
add
or
add
inc
mov
push
and
mov
dec
pop
sub
xchg
and
add
xchg
(bad)
add
call
movs
or
adc
test
cmove
push
mov
iret
arpl
mov
fisub
xlat
jbe
das
and
enter
sub
sbb
cmp
imul
jns
adc
adc
jmp
pusha
(bad)
outs
call
jg
xor
mov
jae
rcl
and
xchg
push
dec
push
movs
movs
addr16
or
arpl
adc
add
push
or
cmps
and
add
sub
push
jbe
xchg
jbe
out
pop
(bad)
mov
add
and
ja
xchg
add
fisub
or
sub
pop
sar
pop
push
jecxz
or
movs
adc
sub
mov
mov
sub
mov
(bad)
or
or
movs
adc
ror
pop
es
lods
sbb
iret
aas
pop
rcl
and
xor
mov
mov
sub
add
mov
push
int3
mov
jo
add
imul
xor
addr16
mov
je
jmp
and
sub
lock
mov
ret
xor
push
test
dec
popa
add
add
sar
sbb
ret
mov
sahf
xchg
imul
add
dec
push
sub
imul
jmp
jne
pop
sub
imul
fsub
push
adc
stos
mov
mov
mov
es
in
add
push
push
inc
div
or
ret
push
jecxz
add
sbb
cmp
rcl
gs
add
push
mov
and
add
pop
push
sub
aaa
out
or
sbb
push
mov
repz
sub
mov
xchg
test
mov
mov
and
scas
enter
jecxz
pop
inc
xor
dec
ret
push
cmps
adc
jmp
mov
or
ret
adc
test
(bad)
sbb
pop
xchg
add
cmps
cmp
xor
xor
xlat
inc
mov
xlat
aad
je
push
ret
imul
cld
adc
add
add
call
ja
push
jns
imul
inc
dec
jb
bound
mov
ins
popf
or
and
out
xor
dec
pusha
(bad)
fidiv
movzx
bound
es
dec
mov
jmp
mov
cld
mov
fcmovb
retf
xchg
cmp
in
fistp
test
imul
and
hlt
sar
je
outs
imul
sbb
fwait
mov
add
je
mov
fld
imul
add
cwde
adc
movs
out
dec
xchg
imul
sbb
cmp
retf
jo
repz
repz
jmp
js
dec
jns
jp
cmp
mov
jns
jb
xchg
add
and
outs
outs
adc
loope
arpl
jl
sub
out
mov
xchg
or
adc
lahf
push
adc
ins
adc
inc
lahf
pop
sbb
ret
jnp
ds
cmp
adc
pop
ret
pop
jae
cmp
xor
ficom
cld
arpl
push
mov
mov
cmp
adc
das
shr
push
daa
ins
jg
jns
jb
aaa
jae
jp
stc
xor
(bad)
aaa
sbb
push
mov
mov
fadd
inc
dec
ret
fld
mov
sub
dec
ret
and
lea
mov
fist
outs
outs
sbb
mov
jnp
add
pop
mov
jp
mov
or
ins
fwait
pop
pop
cmps
sub
ds
jns
dec
sbb
mov
adc
or
aaa
(bad)
pushf
jl
mov
outs
cmp
mov
cmps
push
xlat
mov
repnz
xchg
pop
mov
lods
nop
(bad)
pop
mov
fild
imul
out
jb
or
push
dec
fisttp
mov
jo
aaa
add
add
neg
scas
mov
xchg
das
xchg
cmps
push
js
inc
and
push
adc
dec
gs
loop
iret
rcr
xchg
dec
ret
dec
cmp
aaa
xchg
cmp
xchg
arpl
mov
das
outs
jbe
imul
push
jo
mov
jo
test
add
push
ret
jae
jae
or
sub
mov
mov
div
jnp
sub
mov
das
adc
arpl
xchg
push
cld
push
scas
jo
push
sbb
lock
or
jmp
ins
jecxz
jmp
pop
jno
push
dec
and
mov
cmp
push
pop
ins
ins
sar
dec
ret
mov
mov
mov
jae
out
sbb
(bad)
loopne
iret
xor
(bad)
cmps
ret
imul
out
mov
sbb
pusha
jne
and
push
cmp
mov
repz
test
lock
adc
(bad)
ja
rcl
sub
and
pop
mov
sub
sbb
daa
outs
mov
mov
mov
xor
adc
adc
fld
pop
jmp
or
ficom
(bad)
popa
sub
push
xor
adc
js
and
out
test
ja
cmp
(bad)
mov
or
movs
adc
mov
push
iret
xchg
stos
and
cmp
sub
sub
aas
jne
add
inc
jecxz
adc
dec
sahf
mov
imul
outs
sbb
dec
push
cs
mov
xor
sbb
cld
aaa
sbb
inc
fwait
arpl
imul
inc
popa
push
dec
mov
cmp
mov
or
sub
ins
stos
outs
xor
mov
sbb
jmp
jae
or
ja
inc
ja
push
xchg
cld
pop
(bad)
out
fwait
xchg
addr16
adc
imul
popa
xchg
mov
or
xor
je
inc
xor
iret
pop
inc
xlat
loopne
loopne
xor
mov
pop
mov
aaa
dec
aas
push
push
imul
xchg
out
cld
fwait
jns
push
push
sahf
scas
dec
inc
repz
pop
call
ret
adc
push
xchg
cmp
loop
xchg
adc
(bad)
cld
inc
repnz
jmp
inc
jns
add
adc
mov
sub
out
xchg
dec
dec
jp
and
imul
mov
push
hlt
ret
imul
lods
dec
or
cmp
adc
pop
arpl
mov
jbe
sub
pop
imul
pop
cld
(bad)
iret
mov
dec
lahf
imul
mov
and
or
jae
and
daa
push
aas
pop
mov
or
lods
adc
data16
(bad)
cmp
popa
(bad)
or
fistp
jno
lods
mov
inc
jnp
xor
mov
stos
sbb
and
jnp
jns
dec
mov
arpl
enter
outs
mov
stos
shl
pop
push
push
jo
(bad)
outs
ror
sub
or
add
mov
jmp
mov
ret
pop
mov
cwde
add
mov
ja
arpl
das
jle
pop
ret
pop
cmpxchg
mov
cmp
sub
cmp
or
ja
or
mov
push
adc
sbb
push
xchg
imul
mov
movsx
jns
daa
pushf
jnp
mov
adc
inc
sbb
ret
fwait
les
add
xchg
mov
dec
cli
(bad)
das
mov
cli
push
jns
scas
mov
adc
jmp
add
and
cwde
mov
jecxz
mov
pop
xchg
sbb
dec
xor
push
add
retf
push
sbb
fistp
jmp
sti
push
xchg
shr
ja
daa
inc
cmp
and
pop
imul
cmp
mov
adc
ins
pop
popa
mov
das
imul
cmps
xor
sti
xchg
jo
test
shl
mov
arpl
sub
or
push
xchg
outs
mov
jbe
inc
adc
scas
jmp
scas
xchg
stos
imul
ins
clc
cmp
and
xor
or
(bad)
xchg
push
and
mov
cmp
es
loopne
xor
xchg
mov
cmovnp
test
jmp
sub
outs
dec
xchg
lods
push
add
movs
adc
int
lock
arpl
jmp
popf
inc
into
iret
mov
jecxz
and
cmp
scas
push
jo
sub
mov
xor
mov
stos
clc
sti
imul
sub
adc
sub
push
or
push
loopne
test
shl
inc
outs
ret
adc
jae
add
js
sbb
and
out
mov
inc
mov
adc
retf
add
xor
xchg
or
jmp
or
cmp
lahf
stos
test
dec
xchg
nop
mov
dec
add
cmp
or
aad
mov
jae
jo
lods
push
xchg
out
pop
rol
add
adc
jns
popa
mov
add
inc
pop
sub
inc
ins
sub
add
imul
sub
es
popa
mov
mov
cmp
pop
div
mov
repnz
jl
outs
push
call
ja
push
cs
mov
xchg
outs
fs
xchg
push
xchg
ret
arpl
scas
mov
pop
jp
jp
pop
and
mov
push
mov
or
jns
shr
push
inc
repz
sub
jmp
fist
push
inc
jns
call
push
ret
shl
xchg
jns
inc
popa
dec
adc
push
ret
out
es
push
loop
pusha
loop
repz
xchg
neg
iret
jl
dec
dec
daa
cs
stos
es
imul
rol
loope
(bad)
ss
bound
mov
ins
dec
adc
imul
mov
mov
jb
mov
ret
mov
push
les
sub
dec
loope
out
inc
dec
ret
mov
cmp
pop
inc
jmp
inc
dec
pop
das
lahf
fstp
push
adc
mov
push
adc
pop
cli
push
jo
add
sti
mov
sub
stos
in
jecxz
scas
jns
ins
mov
xchg
lods
outs
mov
sahf
daa
mov
mov
xchg
or
add
mov
mov
sbb
sbb
mov
mov
and
outs
gs
push
or
jb
pop
pusha
aaa
dec
add
add
aaa
popa
pop
or
mov
dec
inc
and
lahf
mov
shr
repz
inc
dec
dec
fs
jb
push
push
jns
lods
and
sub
adc
dec
scas
test
add
inc
arpl
in
xchg
and
stos
sahf
gs
xor
dec
loop
loopne
sbb
repz
xor
outs
test
add
outs
jl
push
push
pop
push
pop
inc
test
loop
cmps
iret
or
stos
out
popa
add
es
xlat
or
xor
(bad)
xchg
push
sub
dec
xchg
jo
jecxz
pop
or
or
or
int
dec
push
lahf
pop
movs
jge
or
jns
out
adc
mov
iret
scas
mov
shr
mov
inc
out
pusha
adc
pop
retf
cmc
jle
ret
outs
sti
jp
loop
dec
inc
pop
jns
inc
adc
shr
pop
jmp
jo
sub
into
dec
cmps
fld
cli
jnp
addr16
add
mov
dec
addr16
fwait
test
jns
mov
jae
xchg
inc
rcl
dec
imul
or
lds
jecxz
ja
outs
sbb
sahf
mov
retf
xlat
outs
imul
pop
das
jo
pop
xchg
xchg
imul
xor
fwait
outs
mov
jmp
shl
outs
adc
jmp
mov
inc
fistp
ja
scas
daa
push
sub
cmps
nop
scas
lea
out
imul
jo
icebp
jno
pop
iret
inc
outs
cmps
outs
or
cmps
pop
scas
push
rol
addr16
push
push
imul
cmp
sub
push
xor
inc
retw
adc
inc
sub
mov
psubb
xchg
stos
addr16
jl
fsub
dec
outs
jb
mov
sub
test
cmp
push
push
sub
and
(bad)
popa
pshufw
call
xchg
adc
ret
loopne
ret
scas
nop
dec
or
out
call
dec
je
arpl
adc
outs
mov
nop
fbld
push
mov
daa
cwde
test
imul
or
jmp
add
loop
imul
outs
jo
lods
sbb
fwait
dec
xchg
movs
arpl
mov
jmp
into
jecxz
jnp
retf
lds
jmp
mov
shrd
pop
xor
cs
mov
icebp
ror
loop
scas
imul
adc
je
mov
and
sbb
pop
sbb
xlat
xor
xor
cwde
test
jno
jecxz
xchg
mov
cmovp
dec
add
test
xor
dec
lds
xchg
or
(bad)
push
xor
xchg
adc
mov
mov
xor
adc
cwde
test
xchg
push
push
mov
lods
clc
rcl
pusha
push
(bad)
xor
sbb
pop
clc
ror
jmp
repz
scas
or
psllq
jmp
push
xchg
jo
outs
jae
and
cmp
dec
(bad)
jmp
stos
imul
or
jae
add
pop
pop
jae
and
dec
add
retf
add
call
jne
or
aad
adc
mov
ret
scas
cmp
inc
jb
pop
pop
cmp
jbe
xor
mov
dec
pop
cmp
push
retf
pop
mov
jp
push
sbb
pop
xchg
mov
jnp
pop
xor
mov
push
pusha
inc
or
or
pop
push
lock
data16
outs
pop
out
call
imul
pop
adc
add
dec
outs
lahf
sub
add
jmp
stos
clc
xor
test
repz
(bad)
test
sub
jle
ja
cld
rol
ins
adc
jge
out
push
ins
arpl
fisttp
dec
xor
fcmovnbe
dec
cmp
mov
push
ret
lds
and
addr16
jp
fiadd
jg
inc
dec
dec
int
xor
pop
je
dec
dec
out
shl
punpckhdq
arpl
or
jbe
inc
icebp
movs
aam
push
cmps
imul
push
rcr
jo
sbb
outs
pop
xchg
mov
rol
add
daa
inc
fcomp
data16
jo
and
jnp
bound
adc
inc
sub
sahf
dec
inc
sbb
adc
imul
dec
lods
sub
mov
xlat
aas
push
mov
inc
pop
dec
or
mov
xchg
ins
das
arpl
iret
js
push
mov
push
add
iret
or
cmp
xchg
(bad)
repz
lea
and
repz
jae
movs
adc
xchg
mov
ins
retf
sub
cmp
stos
ja
xor
lahf
add
xor
jmp
add
pop
mov
push
call
out
or
jmp
inc
or
cmp
or
xlat
pop
imul
mov
xchg
scas
push
mov
push
call
cwde
dec
pop
adc
loopne
add
outs
shr
loopne
ja
adc
adc
inc
sub
(bad)
rcr
stos
out
push
adc
test
out
xor
add
sbb
dec
out
xchg
test
sar
sub
js
sub
xor
sbb
or
and
push
xchg
mov
adc
and
stos
fucomip
xor
inc
pop
or
mov
and
or
push
jecxz
add
test
test
push
mov
arpl
(bad)
xchg
add
aas
pop
sub
jmp
inc
sub
mul
jbe
jecxz
xor
xchg
pop
cmp
fist
inc
scas
jecxz
out
outs
xchg
jo
xchg
cmp
adc
sbb
nop
aas
das
ja
inc
jae
imul
imul
push
adc
daa
(bad)
cmp
xor
dec
loope
dec
fwait
xor
in
xchg
add
fwait
dec
scas
jmp
cwde
cmp
adc
adc
sub
sbb
adc
mov
mov
mov
aad
nop
sbb
push
sub
sub
or
xchg
and
aaa
dec
add
inc
lds
add
mov
jbe
pop
xor
call
xlat
cmp
test
loopne
ret
add
lds
arpl
sbb
or
jmp
cmp
sbb
cmp
xor
add
push
xor
js
inc
in
shl
jg
push
aaa
xchg
daa
(bad)
stos
test
ret
shl
xor
dec
adc
add
pop
or
xchg
repz
sbb
push
inc
xchg
cmp
xchg
cmps
ror
mov
or
test
adc
xor
mov
and
lock
adc
xchg
dec
out
pop
or
inc
test
mov
and
aas
mov
or
inc
push
ret
cmp
adc
mov
mov
mov
adc
dec
fdivr
jnp
and
push
popa
sti
push
mov
push
inc
jae
push
and
jmp
xchg
inc
sbb
fwait
add
add
xor
(bad)
mov
fld
add
test
add
or
aaa
aaa
push
les
xor
inc
jae
test
dec
bound
ds
stos
imul
xlat
adc
xchg
sub
sbb
mov
add
xor
xor
mov
sbb
or
pop
xchg
pop
xchg
stos
adc
inc
scas
cs
ret
pop
and
popa
stos
push
xchg
cmp
outs
add
retf
ja
sar
xor
ror
mov
js
popa
das
cmp
and
ins
retf
mov
xor
arpl
js
add
scas
sbb
les
sub
(bad)
xor
cmp
jg
cmp
xchg
ret
or
out
push
jno
dec
adc
pusha
mov
inc
test
sbb
xlat
xor
add
push
ret
dec
aaa
inc
push
ins
xor
pop
movq
jmp
pop
mov
or
dec
arpl
sub
sub
dec
repz
dec
push
inc
and
sub
fwait
daa
jne
sti
xlat
ja
(bad)
xor
mov
cmp
sbb
and
mov
clc
(bad)
stos
stos
fwait
out
cmp
mov
rol
jne
sbb
add
xchg
inc
or
adc
adc
mov
push
cwde
(bad)
xor
mov
cs
pop
cmp
daa
or
(bad)
ret
dec
and
xchg
cmp
dec
cmp
iret
cmp
push
xchg
add
xchg
test
(bad)
push
mov
mov
adc
in
dec
mov
sub
xor
cwde
push
shr
xor
inc
add
(bad)
mov
sbb
lea
inc
mov
xlat
dec
jo
loopne
sub
out
inc
xor
dec
dec
mov
fstp
movs
stos
xor
pop
xor
inc
mov
push
enter
sbb
inc
mov
xchg
xor
sbb
and
loopne
pop
push
xchg
mov
cmp
mov
popa
scas
iret
mov
nop
dec
or
les
jmp
xadd
cs
cmp
push
add
cmp
nop
loopne
out
jnp
pop
sbb
push
scas
xor
leave
cmps
out
xor
sbb
cmp
pop
das
sub
inc
ins
sub
inc
sbb
retf
and
sbb
inc
or
mov
mov
scas
shl
in
xchg
jo
bound
inc
lods
cs
or
neg
cmp
(bad)
sbb
xlat
pusha
sub
push
sti
fisttp
outs
cmps
call
nop
dec
xchg
pop
sub
dec
ja
retf
or
call
popf
jo
pop
aaa
and
js
cmp
iret
xor
mov
sub
sub
cmp
cmp
je
aas
outs
cmp
or
fistp
adc
scas
jne
xor
arpl
sub
inc
ret
out
cmp
and
fwait
and
aam
or
mov
dec
cmp
sbb
jnp
and
repz
and
or
es
test
inc
mov
pop
adc
sbb
pop
push
retf
push
xchg
and
mov
adc
sbb
or
push
pop
repz
ja
pop
adc
sub
retf
xor
jecxz
pop
(bad)
arpl
inc
outs
ins
dec
lahf
xchg
pop
loopne
mov
push
or
dec
push
xor
test
ret
shr
sbb
iret
dec
push
fsub
xchg
sub
cmp
jmp
(bad)
and
push
mov
aad
idiv
sti
mov
inc
jbe
out
adc
or
sysret
pop
mov
mov
mov
stos
loope
(bad)
stos
scas
mov
test
test
sti
mov
pop
ja
adc
lea
or
imul
test
outs
and
push
or
cvtps2pd
or
shl
repz
jbe
aad
aas
pop
sub
jns
xchg
or
inc
jnp
sub
xor
add
imul
das
test
sbb
pop
xor
adc
bound
xchg
test
xor
(bad)
aaa
or
lods
push
mov
daa
push
and
gs
mov
nop
dec
loope
xchg
jo
cmps
dec
fwait
das
and
mov
retf
scas
push
daa
pusha
ins
add
fmul
adc
push
ss
cmps
xor
jle
fidiv
cs
inc
push
inc
pop
popf
fcmovnu
sub
dec
aas
sub
inc
fadd
or
jmp
loope
mov
xchg
mov
arpl
and
dec
imul
mov
test
dec
xor
out
comiss
xor
mov
and
(bad)
mov
mov
jp
dec
push
fisubr
push
fwait
and
retf
in
add
aas
cs
inc
fist
int3
push
adc
jbe
scas
mov
inc
add
cmp
daa
inc
mov
inc
adc
out
sbb
and
xor
rcl
add
ret
lahf
jle
xor
daa
mov
inc
pop
inc
mov
jbe
xchg
xchg
xchg
adc
loop
cmp
cmps
add
mov
(bad)
pop
jb
push
sub
imul
ja
push
scas
hlt
pop
mov
xchg
aaa
ss
mov
sub
inc
test
test
xlat
push
lods
inc
mov
cmp
cmp
mov
push
push
inc
sar
test
aam
adc
inc
xchg
inc
stc
cmp
sub
in
or
daa
sub
sub
cmps
fisttp
xor
push
arpl
arpl
mov
sub
cmp
cmp
sub
stos
(bad)
ret
fimul
xor
cs
mov
cs
sub
or
add
cs
inc
sbb
mov
push
(bad)
leave
xor
(bad)
loopne
retf
pop
lahf
daa
out
arpl
scas
adc
pop
pop
scas
ror
xlat
sub
in
xchg
add
lods
or
fucomip
add
and
out
sar
bound
test
cmp
jb
mov
mov
inc
rol
and
xor
and
(bad)
inc
xchg
out
and
sub
or
test
out
cmp
jbe
stos
inc
test
lods
js
mov
sbb
xor
int3
mov
cmps
imul
cmps
jae
add
add
inc
pop
cmp
add
dec
daa
xchg
pop
push
xchg
stos
mov
mov
sub
sub
cmps
sbb
dec
push
pop
cmps
das
push
je
aaa
sub
mov
push
aad
lahf
repz
imul
mov
das
mov
cmps
xor
sub
cmp
bound
in
jnp
pop
sbb
or
xchg
dec
sbb
add
pop
int3
in
xchg
add
daa
arpl
shr
ret
xor
mov
push
cmp
lods
clc
cmc
js
mov
xor
mov
cmp
addr16
sub
repz
or
jp
xor
and
out
add
sub
sub
repz
or
adc
dec
xchg
ins
leave
xor
(bad)
dec
rol
out
mov
adc
cmp
jl
add
mov
cmp
jb
fistp
inc
xchg
or
push
aaa
js
cs
imul
test
outs
add
arpl
(bad)
ficomp
aaa
out
repz
cmp
xor
inc
imul
mov
xor
pop
inc
xchg
sub
jecxz
aas
call
mov
inc
in
pop
leave
shl
sub
pop
lock
ror
shl
das
loop
inc
xor
pop
sbb
dec
pop
or
ret
popa
dec
aaa
sub
cmps
sub
push
and
pop
cmp
jp
sub
aad
cmps
pop
aas
inc
or
inc
adc
fisttp
and
pop
jae
loopne
xor
imul
dec
dec
popf
mov
inc
add
fmul
pop
xlat
add
imul
jmp
imul
lods
push
popa
cmp
cmp
cmp
loope
iret
and
adc
jb
push
cmp
push
pop
jne
fisttp
lods
cmp
add
pop
in
push
or
jae
add
pop
or
(bad)
scas
cmps
cs
inc
pop
pop
cmp
enter
daa
loope
inc
call
push
cmp
in
das
cmp
pop
adc
idiv
dec
(bad)
scas
sub
inc
fwait
mov
aaa
and
dec
sub
add
test
mov
in
and
inc
inc
sub
lds
fcom
jecxz
aaa
mov
adc
(bad)
test
mov
add
pop
(bad)
adc
pop
ins
ret
loop
out
ja
(bad)
and
adc
sbb
and
jecxz
or
(bad)
or
shr
arpl
or
fucom
and
adc
shl
(bad)
shl
das
cld
les
push
push
cmp
or
dec
mov
ret
popa
retf
jecxz
jge
jp
pop
dec
scas
test
mov
xchg
(bad)
push
sub
mov
dec
push
mov
jecxz
das
lods
iret
jp
inc
and
jnp
leave
enter
mov
push
rol
or
pop
add
sub
xor
mov
mov
imul
icebp
xor
xchg
or
mov
sub
sti
(bad)
inc
inc
push
xor
mov
addr16
xchg
sbb
test
xor
sub
ret
pop
mov
xor
pop
xor
out
mov
xchg
adc
mov
stos
inc
xchg
outs
pop
out
and
pop
sbb
imul
mov
(bad)
rcl
and
int
test
xor
(bad)
movs
(bad)
and
and
aad
adc
mov
mov
cwde
pop
cmp
loop
packssdw
aaa
push
jnp
movs
mov
arpl
aas
inc
mov
adc
add
les
cwde
sbb
stos
fadd
pop
dec
and
inc
sahf
push
sub
stos
aas
sub
movs
adc
iret
jnp
data16
adc
daa
and
or
inc
mov
mov
xor
call
sub
ret
xchg
cmp
or
mov
ret
or
mov
sbb
dec
lods
dec
push
add
dec
sub
inc
and
cmp
pop
add
pop
add
mov
push
lahf
xor
dec
push
test
push
repz
mov
push
(bad)
not
lds
or
add
inc
jmp
or
sub
sub
pop
ds
pop
pop
or
mov
fbstp
or
into
xor
sbb
and
and
sub
add
add
leave
popa
jb
nop
iret
dec
xchg
pop
fisttp
leave
popa
maxps
inc
ds
call
stc
sbb
mov
xchg
js
sub
iret
(bad)
or
call
jmp
js
or
mov
in
inc
jge
and
pop
enter
repz
stc
sbb
(bad)
mov
fsub
test
xor
mov
loopne
leave
cmp
mov
push
gs
fwait
retf
maxps
ficomp
dec
xor
add
or
and
gs
adc
arpl
jo
jns
xchg
xor
cld
inc
(bad)
sub
mov
imul
cld
dec
add
inc
call
(bad)
mov
xchg
mov
fisttp
pop
mov
and
and
mov
xchg
mov
sar
jle
or
dec
sbb
and
dec
dec
out
xchg
jge
pop
mov
ins
inc
nop
jg
mov
and
xchg
xchg
jp
push
xchg
fwait
inc
(bad)
or
push
leave
xchg
push
jecxz
inc
imul
jo
clc
popf
ss
fcmovb
scas
dec
mov
sub
push
push
jge
inc
sahf
daa
jb
ss
(bad)
mov
mov
mov
jl
jge
mov
adc
add
or
pusha
nop
and
pop
adc
in
sub
cmp
jo
inc
fs
pop
push
push
xchg
add
jb
ret
or
dec
mov
shl
add
sub
add
nop
outs
adc
cmp
(bad)
js
jge
jns
mov
xchg
push
push
hlt
and
and
xlat
push
inc
sub
shr
xor
fcomp
xlat
push
adc
dec
arpl
cmps
nop
out
jle
fstp
cmp
xor
inc
repnz
sub
stc
or
dec
popa
cmp
cs
and
cmp
pusha
push
imul
mov
xlat
sbb
mov
dec
into
dec
add
popf
push
fxch
mov
das
stc
ja
xor
pop
jnp
add
or
ins
pop
sbb
xlat
add
mov
inc
push
leave
popa
maxps
inc
jle
pop
pop
sahf
pop
sti
xchg
mov
mov
dec
jb
imul
xchg
sub
pop
pop
retf
jmp
xchg
inc
or
mov
fistp
retf
sub
and
cmp
push
out
pop
xor
and
jno
pop
daa
stos
xor
adc
in
sub
push
scas
inc
mov
adc
push
in
push
sar
fist
push
mov
cmp
and
call
xchg
loop
jmp
adc
xchg
sahf
pop
mov
lahf
push
retf
pop
cmp
xchg
ret
mov
and
imul
xchg
jl
cli
jns
push
sub
cs
jge
inc
mov
inc
add
jb
js
(bad)
fld
fs
or
ds
adc
jnp
inc
inc
ins
mov
and
jecxz
dec
jecxz
jecxz
arpl
aaa
imul
not
outs
cmps
add
push
add
ror
scas
nop
xlat
dec
out
xchg
mov
fs
add
xor
pop
and
sbb
arpl
jmp
and
sbb
and
arpl
out
cmp
test
push
push
arpl
add
dec
adc
xor
pop
rcr
dec
cmps
rol
iret
pop
and
mov
push
or
out
adc
dec
inc
mov
and
dec
push
cmp
cmps
add
(bad)
and
cmp
push
lea
push
dec
mov
push
sbb
xor
pop
and
push
or
dec
mov
mov
push
xor
adc
(bad)
rcr
mov
aad
adc
add
push
sbb
(bad)
iret
cmp
adc
or
dec
add
ds
pop
iret
pop
inc
ror
mov
push
inc
leave
ret
push
lock
xor
and
push
shl
pusha
jecxz
popa
(bad)
xchg
inc
sbb
ss
cmps
call
and
inc
daa
mov
icebp
cmovle
es
adc
ss
sub
scas
inc
jmp
and
pop
adc
and
mov
arpl
lods
retf
sub
fwait
(bad)
sub
out
lahf
inc
push
sub
aaa
lea
mov
and
rol
or
xor
cmp
mov
and
xchg
outs
ss
inc
mov
stos
iret
loopne
fisubr
scas
pop
cmps
cwde
gs
push
aaa
inc
fs
loope
or
push
adc
dec
push
and
aas
mov
xchg
idiv
pusha
jecxz
mov
mov
adc
outs
ss
mov
or
ins
pop
mov
xor
and
mov
mov
adc
ret
stos
sar
repz
adc
dec
xchg
or
push
push
ficom
arpl
mov
xlat
cmp
add
push
xor
inc
aas
inc
adc
push
scas
mov
das
pop
adc
or
shl
dec
push
cmp
adc
mov
mov
xchg
and
push
ds
ins
push
ja
inc
jmp
adc
push
push
(bad)
imul
data16
push
ds
push
add
or
jmp
arpl
pop
inc
gs
push
mov
pop
mov
cmp
ins
arpl
push
sub
adc
push
pop
movs
in
pop
into
out
dec
sbb
mov
arpl
sbb
or
dec
shr
mov
xchg
sbb
aaa
dec
xor
mov
mov
mov
iret
inc
xchg
loop
cmps
push
ja
inc
xchg
nop
sub
sub
push
inc
xor
pop
fsubp
jle
aaa
pop
or
push
xlat
add
mov
ds
push
xor
add
sbb
mov
pop
sub
cs
fnstcw
(bad)
sub
(bad)
in
loope
data16
jae
mov
push
pop
inc
pop
mov
adc
pop
rcr
dec
sub
jb
cmp
mov
fs
xlat
jo
aam
or
push
outs
sbb
sti
pop
fnsave
cmp
fwait
push
add
xor
cmp
and
aaa
(bad)
xlat
cmp
lea
adc
sbb
adc
imul
fwait
lahf
cmp
push
sar
xchg
jg
push
lea
out
add
fwait
(bad)
push
out
mov
pop
inc
mov
push
adc
mov
rcr
pop
sti
sub
leave
push
or
xchg
mov
sbb
inc
mov
push
movs
leave
fwait
dec
jp
fwait
test
pop
loop
fcomp
rcr
sti
test
adc
push
inc
into
adc
aam
outs
or
sub
stos
aas
daa
pusha
je
adc
dec
lea
push
mov
dec
scas
sti
mov
mov
push
sahf
mov
jae
dec
scas
or
sub
not
sbb
(bad)
iret
pop
es
aam
push
adc
inc
mov
enter
xchg
ins
lods
sbb
movs
inc
es
push
imul
arpl
sbb
sub
or
adc
push
push
lahf
cmp
sbb
outs
jnp
push
xor
shl
ds
sbb
cmp
mov
push
outs
ds
adc
daa
add
or
xor
cmps
cmp
lahf
jnp
push
sbb
push
ja
add
and
adc
pop
push
jae
repnz
or
push
pop
mov
rcl
inc
xchg
mov
fwait
ds
fild
lahf
ret
and
pusha
xor
push
stos
or
and
xor
or
sbb
mov
pusha
mov
stos
push
sbb
dec
dec
push
les
gs
mov
cmp
inc
mov
loopne
(bad)
dec
cmp
sub
clc
pop
inc
jmp
fild
push
lahf
push
push
sbb
sbb
push
adc
mov
add
xor
mov
jno
xchg
cmp
push
repz
test
cmp
xchg
add
lea
repnz
retf
aaa
mov
das
push
jbe
inc
mov
lahf
cmp
mov
pusha
inc
out
push
xor
cmps
push
and
call
sbb
mov
loope
pop
jecxz
bound
in
push
mov
out
jbe
addr16
test
push
sub
push
add
stos
xchg
cmp
ror
sub
mov
push
adc
loopne
adc
sbb
xchg
and
das
ins
fnsave
mov
and
dec
and
jne
dec
mov
add
inc
add
mov
jecxz
xchg
dec
fwait
cmp
add
and
push
(bad)
in
fmul
(bad)
repz
mov
(bad)
add
je
call
aam
xchg
sub
xchg
dec
add
das
ret
cmp
jmp
ja
push
ret
jecxz
(bad)
ret
push
inc
loopne
pop
in
push
xchg
sbb
mov
in
aaa
xchg
push
sub
loopne
cmovnp
hlt
xor
fwait
out
add
or
es
cmp
push
xlat
jne
fild
repnz
fs
push
xor
and
push
mov
adc
push
int
(bad)
aad
idiv
popa
sub
fcom
ret
or
or
mov
jp
retf
mov
jmp
cmp
add
lea
lock
inc
sub
mov
ja
aaa
adc
clc
push
sbb
repz
mov
inc
xor
cmp
xor
fst
pushf
arpl
stos
mov
test
pop
adc
in
mov
js
movs
lahf
xchg
or
mov
cmp
push
push
inc
mov
in
pop
(bad)
icebp
pop
jae
out
ins
shl
cmp
aas
cs
push
jne
fwait
push
aaa
or
movzx
pushf
or
mov
jmp
mov
imul
arpl
ss
jne
cmps
dec
cwde
ds
adc
jae
push
out
push
(bad)
dec
pop
fisub
fimul
movs
cs
jmp
dec
dec
push
sti
mov
je
loope
cmps
mov
sbb
xor
and
rcl
and
cmp
xchg
mov
lds
mov
mov
jbe
imul
jns
arpl
(bad)
xlat
adc
adc
and
sub
scas
imul
imul
jmp
sahf
push
and
and
rol
(bad)
ins
xor
pop
jecxz
ror
imul
repz
jnp
and
cmp
adc
add
mov
retf
out
cmp
aad
add
push
bound
mov
dec
sbb
ret
push
or
inc
xor
add
add
lods
js
mov
das
mov
lods
jmp
pop
repz
movs
mov
inc
xchg
mov
jnp
dec
adc
mov
fstp
mov
add
lock
and
ins
js
outs
arpl
jb
dec
mov
je
div
out
mov
mov
dec
js
stos
jae
sar
push
fdiv
(bad)
push
jne
shl
jmp
and
add
xchg
in
addr16
push
imul
sub
cmp
mov
inc
adc
pop
pop
ret
sub
repz
xchg
or
in
lahf
mov
daa
je
mov
or
outs
mov
sbb
mov
pop
sub
jmp
mov
mov
pusha
repz
cmp
(bad)
imul
es
pop
inc
jno
dec
xchg
add
lahf
mov
and
je
imul
idiv
push
rcr
xchg
popa
nop
dec
jbe
cmp
xchg
xlat
lods
jecxz
jno
push
shl
sbb
bound
outs
pop
outs
scas
and
pop
mov
popa
and
fld
xchg
add
and
sbb
xor
popa
push
ret
scas
sub
mov
mov
push
sub
jo
add
(bad)
iret
jae
movs
or
mov
cmp
je
(bad)
jns
outs
scas
pop
in
and
std
pop
xchg
popa
shr
lods
pop
jno
jnp
cmovbe
out
add
xchg
(bad)
mov
outs
inc
loope
ins
arpl
loopne
loopne
inc
sub
bound
les
xlat
lods
sbb
inc
jne
das
pop
scas
mov
dec
retf
fisttp
outs
jecxz
sub
ror
scas
push
nop
inc
inc
mov
mul
or
adc
inc
daa
dec
xor
sub
pop
fwait
jmp
adc
sbb
inc
jg
xchg
dec
call
add
or
fsub
mov
outs
xlat
les
mov
mov
jb
pop
jo
xlat
adc
leave
mov
movs
sub
call
sbb
push
lahf
nop
cli
je
sbb
mov
ins
daa
xchg
mov
push
jmp
mov
jecxz
mov
sbb
push
mov
push
retf
cmp
adc
xor
add
or
or
out
push
mov
add
mov
add
ffreep
mov
xchg
sbb
movs
push
cmp
mov
sti
sbb
add
mov
icebp
and
jecxz
xchg
dec
xor
in
jb
jo
and
push
push
push
into
into
rcl
imul
push
ins
rol
mov
inc
adc
sbb
mov
rcl
retf
dec
push
nop
repz
in
das
push
shl
sub
pop
sbb
and
cmp
mul
sub
mov
das
xlat
loop
(bad)
xlat
int3
pop
dec
dec
retf
lods
inc
sub
js
sysenter
lods
dec
mov
jle
(bad)
pop
aaa
movs
jmp
je
rcr
mov
ror
and
loop
aaa
and
stos
addr16
jns
daa
arpl
retf
jb
or
rol
cmp
cmp
in
out
je
mov
jecxz
out
js
xlat
dec
pop
push
push
and
push
mov
cli
or
loope
jne
xor
jmp
cmc
xchg
push
xor
sub
xlat
xor
repz
pop
xor
and
adc
loop
cmps
stos
cmp
and
push
mov
push
popa
pop
jbe
ins
enter
adc
and
push
movs
adc
and
iret
xchg
mov
pop
sub
arpl
jmp
(bad)
fldcw
outs
inc
mov
or
push
cmps
nop
mov
stos
sar
cmp
rcl
lock
fbld
ja
add
fistp
fisttp
jnp
cwde
and
pop
push
out
inc
add
cmps
mov
sbb
ret
mov
(bad)
or
lahf
cmps
sub
inc
arpl
adc
out
fisttp
xchg
and
sub
xchg
pop
rcr
push
inc
adc
(bad)
fimul
inc
adc
mov
mov
inc
pop
jbe
add
and
inc
add
or
xchg
sbb
repnz
pop
add
repz
(bad)
ffree
aad
inc
and
xor
ja
out
pop
int
xchg
mov
and
jg
xor
jmp
nop
xor
add
mov
xchg
in
dec
mov
pop
push
adc
pushf
pusha
in
xor
scas
test
bound
cmp
or
or
cmps
std
iret
cdq
clc
faddp
outs
push
pop
je
pop
add
js
push
lahf
jle
imul
shl
mov
js
or
pop
push
data16
(bad)
ret
not
xchg
mov
adc
sub
add
xor
out
push
xor
adc
inc
sub
or
pop
sub
add
xchg
jbe
push
mov
lahf
adc
adc
mov
(bad)
xor
fs
test
lahf
adc
lds
popa
mov
inc
iret
push
ss
pop
pop
(bad)
daa
pop
inc
sub
loope
in
sbb
loopne
hlt
inc
maskmovq
div
das
sbb
pusha
sub
sub
jp
loope
idiv
jo
test
inc
iret
fbld
pop
pop
push
pop
sub
push
jb
inc
cli
and
xlat
leave
jo
push
inc
and
fisttp
mov
shr
xchg
push
in
fisubr
cmp
push
pop
sbb
mov
add
imul
pop
and
daa
outs
xchg
jg
loopne
pop
jmp
jg
push
dec
call
pop
in
cmp
and
dec
adc
inc
nop
std
(bad)
or
fisub
fild
mov
imul
sbb
add
xchg
loopne
or
pop
add
xor
jl
jnp
cs
adc
jne
ss
mov
or
jp
lods
and
ins
or
sbb
xor
loope
loope
mov
inc
repnz
and
imul
nop
sbb
jbe
or
popa
jno
out
jmp
jo
inc
retf
push
sti
pop
add
imul
push
rcl
das
jne
xlat
sub
pop
fwait
mov
inc
bound
push
sub
out
in
and
pop
dec
nop
stos
repz
out
sbb
jb
push
aam
add
nop
mov
mov
jno
retf
loope
rcr
out
cli
push
ror
add
add
pop
arpl
and
mov
inc
in
inc
fs
mov
mov
sbb
data16
in
outs
js
push
or
cmps
(bad)
and
adc
movs
pop
out
adc
push
push
pop
daa
inc
pop
pop
mov
test
cs
add
(bad)
xchg
fmul
jmp
(bad)
mov
jb
mov
sbb
xchg
dec
mov
mov
add
sbb
imul
xor
dec
outs
ud2
sub
push
loope
add
daa
sbb
ins
aas
push
add
dec
mov
retf
push
mov
cmp
pop
ja
or
mov
sbb
cmps
std
push
adc
mov
jecxz
push
aas
jns
push
test
inc
out
sbb
jp
loopne
adc
push
push
nop
imul
cmps
push
bound
and
(bad)
aad
inc
pop
ret
mov
dec
lods
pop
popa
add
int3
cmps
sub
das
mov
rcl
and
adc
jo
sbb
pop
outs
inc
fstp
jbe
pop
mov
mov
xor
les
adc
jmp
aaa
pop
mov
xchg
scas
add
inc
mov
or
jbe
mov
retf
inc
mov
imul
adc
lods
xchg
cmc
push
nop
sbb
repz
mov
(bad)
iret
jmp
adc
push
int
jecxz
xlat
mov
lahf
psllq
xor
xchg
mov
xor
imul
(bad)
and
retf
sub
and
sub
dec
or
cmp
pop
and
adc
dec
cmps
mov
cmps
xlat
je
mov
mov
jecxz
test
scas
fcmovne
shr
pop
test
pop
mov
sbb
cmp
sub
or
cmp
inc
inc
cmp
mov
sub
push
ret
sbb
or
test
xor
jo
fnsave
sub
adc
push
rol
repz
push
test
bound
or
mov
or
nop
js
or
add
or
pop
(bad)
movs
add
loopne
add
jbe
mov
gs
test
pop
or
adc
scas
lods
and
(bad)
jp
xchg
push
pop
sbb
push
push
cmc
inc
xor
push
dec
adc
(bad)
jb
out
and
loope
mov
lods
dec
push
inc
inc
sub
and
xlat
div
popa
mov
aaa
sbb
test
adc
pop
cmc
cwde
pop
pop
adc
push
mov
push
and
das
scas
(bad)
push
inc
mov
and
mov
mov
js
inc
mov
and
test
enter
cmp
mov
adc
xor
ret
outs
jl
(bad)
fistp
push
and
les
call
or
jecxz
xor
fisttp
loopne
aaa
fild
or
aad
jb
ins
adc
sub
adc
test
jp
dec
dec
add
pop
and
scas
inc
cmp
imul
mov
(bad)
shl
aad
add
adc
mov
xchg
iret
pop
inc
mov
iret
pusha
pop
mov
pop
and
shl
jbe
xchg
popa
das
test
add
int3
add
mov
dec
repz
add
push
cs
scas
inc
dec
adc
pushw
xchg
jmp
dec
mov
add
jae
and
scas
xchg
fistp
add
movs
push
pop
sti
pop
(bad)
sbb
std
psubsw
pop
imul
push
xchg
add
cmp
aaa
and
xor
ror
sbb
retf
jmp
movs
xchg
xchg
or
and
inc
daa
xor
sbb
jmp
in
fistp
jae
push
pop
adc
adc
retf
inc
retf
ret
and
inc
stos
pop
add
movs
in
adc
and
aad
retf
jbe
pop
mov
loope
ret
push
xchg
mov
push
inc
push
add
lods
xor
add
inc
cdq
mov
gs
outs
inc
outs
outs
je
outs
ins
inc
cmps
(bad)
mov
push
outs
push
gs
fidivr
imul
fs
outs
imul
push
dec
popa
jae
inc
jb
sbb
outs
bound
js
arpl
fidiv
inc
ins
xor
dec
jne
inc
fdiv
(bad)
imul
ins
jo
xchg
dec
imul
jmp
ror
cmps
out
out
push
xor
jb
ret
gs
push
pop
outs
jo
jns
outs
dec
jae
xchg
imul
iret
mov
and
push
jbe
jne
sbb
gs
xor
push
pop
dec
push
test
sbb
inc
outs
jne
loopne
in
inc
dec
popa
ins
adc
add
cmp
inc
cwde
mov
or
js
loopne
pop
jae
sbb
pop
fs
ja
jo
int
pop
inc
or
outs
jae
xor
and
sub
push
test
jmp
popf
dec
sub
loopne
outs
es
cwde
xor
gs
(bad)
outs
repnz
xlat
dec
add
dec
sbb
inc
fs
mov
lods
jnp
jne
jns
push
pop
add
dec
sub
ja
imul
pop
outs
inc
je
bound
jae
pop
add
fld
or
adc
adc
push
popw
test
scas
jmp
mov
xor
xor
and
cmp
fcomip
out
imul
adc
ins
loop
mov
adc
jae
cmc
fwait
inc
xor
loop
imul
mov
ins
inc
pop
xchg
cmp
sbb
inc
ins
jne
push
xchg
test
gs
xor
inc
or
movs
dec
xor
xchg
xor
clc
push
pop
sti
and
or
jbe
stc
push
jo
jecxz
mov
adc
mov
dec
mov
addr16
sbb
xchg
addr16
xor
push
je
ja
fcom
push
sbb
shr
adc
xor
(bad)
mov
pushf
ins
pop
outs
int
jo
jae
scas
xor
out
fs
gs
push
int3
je
jp
inc
jmp
sar
cmp
dec
(bad)
fwait
push
ins
cmp
jecxz
fs
out
mov
push
cdq
in
xchg
pusha
(bad)
out
sub
push
cmp
cmove
inc
sbb
mov
dec
(bad)
lea
stos
push
(bad)
stos
mov
scas
sub
xchg
movs
ins
xchg
outs
popw
rcl
xor
cmp
ds
lea
push
mov
xchg
xchg
and
jb
inc
inc
push
out
sbb
cmc
punpckhwd
add
mov
xchg
ins
jns
stos
(bad)
in
adc
out
enter
adc
inc
dec
leave
stc
mov
or
std
in
rcr
mov
sbb
cmp
add
jns
and
mov
imul
je
pop
neg
es
inc
outs
jnp
iret
inc
js
xor
adc
and
lock
sbb
inc
push
dec
dec
loopne
add
dec
jne
push
xlat
sub
adc
jbe
xor
inc
sub
test
les
call
leave
cmp
mov
and
ja
add
cmp
push
mov
adc
rol
loope
sub
xchg
loop
in
and
loope
pusha
jno
pushf
inc
jae
push
xchg
sub
rcr
mov
inc
push
repz
lods
add
sbb
jae
mov
inc
out
fidivr
adc
adc
and
movs
outs
cmp
imul
movs
push
cld
jo
push
jb
add
in
or
or
stc
imul
mov
or
imul
ret
imul
aas
mov
xchg
sar
mov
imul
jns
fs
shr
rol
add
push
push
ret
xchg
push
out
test
inc
lods
frstor
xor
outs
and
inc
sbb
xor
stos
adc
push
adc
or
sbb
adc
add
cmp
aam
sub
push
xor
jne
jns
add
pop
fsub
xchg
push
inc
(bad)
mov
pop
and
jno
pop
pop
cwde
pop
pop
adc
push
mov
cli
fisttp
or
cmp
out
(bad)
xchg
sub
(bad)
mov
push
movs
sbb
sbb
mov
pusha
pop
jns
fistp
ss
sub
push
cmps
mov
sub
jns
and
outs
into
and
pop
popa
popa
inc
sub
or
add
loop
(bad)
cdq
adc
imul
inc
cmp
or
and
sub
dec
sub
mov
jno
mov
fldenv
fld
inc
mov
sub
cmc
push
sub
(bad)
dec
push
sbb
aam
jb
or
and
mov
pushf
sbb
aam
and
xor
jb
or
imul
loop
(bad)
push
push
inc
imul
jb
adc
inc
pusha
ja
into
inc
pusha
cs
jae
sub
cmp
cmc
test
pop
cmp
popf
mov
sub
mov
sub
or
sub
jo
jo
bound
jl
sysenter
lahf
outs
inc
imul
bound
and
xor
dec
mov
add
js
gs
out
ss
je
push
cmp
mov
imul
add
xor
daa
inc
jmp
out
aam
xor
mov
sub
jo
adc
xchg
inc
les
es
dec
inc
push
lods
jo
outs
sub
or
sub
inc
dec
adc
or
retf
(bad)
in
sbb
mov
fsubr
xor
sub
in
push
unpckhps
loope
mov
adc
dec
je
pusha
and
adc
pop
inc
jb
and
loopne
lock
fcomp
mov
ins
mov
sbb
ins
mov
je
das
pop
adc
mov
inc
hlt
or
xor
adc
cld
push
add
jbe
ins
jae
add
mov
or
xor
mov
cmp
sub
ins
dec
mov
int3
das
jl
push
dec
inc
inc
jb
adc
rcr
push
shr
xchg
dec
inc
push
or
loope
push
push
pop
mov
mov
dec
pop
ret
cmp
inc
fadd
imul
and
repz
dec
outs
dec
sbb
fsub
aaa
inc
push
inc
xor
leave
lods
sbb
ins
sbb
adc
push
shl
inc
add
add
shl
pop
movs
out
sbb
add
jecxz
lea
adc
add
out
jno
add
loope
push
mov
jecxz
data16
aam
jb
adc
jecxz
or
repnz
inc
pop
mul
cwde
data16
daa
inc
adc
outs
mov
cs
or
lahf
stc
hlt
push
jbe
add
mov
xchg
cld
test
sahf
repnz
jge
xchg
lock
test
push
daa
jae
pop
inc
fisubr
enter
js
iret
lahf
cld
pop
jge
clc
jo
dec
and
cmp
pop
pusha
repnz
jne
sub
push
dec
and
xlat
out
ror
cmp
jb
pop
data16
pop
jo
push
pop
sbb
cs
jae
icebp
pop
test
mov
cmp
ror
cmp
in
pop
sub
mov
jo
or
out
ficom
jge
dec
daa
mov
ins
test
test
inc
pop
push
in
push
faddp
repz
stos
push
outs
or
cmp
push
push
push
cmps
ret
rol
xor
pusha
fidiv
xor
sbb
xor
dec
rcr
or
aam
sbb
add
cwde
mov
in
and
out
loop
imul
pop
mov
lods
std
dec
mov
xlat
fsub
scas
jne
les
fdiv
ins
dec
gs
inc
xchg
and
lea
int3
ds
popf
pop
cmps
cmp
mov
jp
(bad)
popa
pusha
adc
push
fs
fiadd
adc
add
scas
adc
push
lods
dec
test
dec
xor
js
out
and
movs
cmp
pop
push
xchg
cs
fiadd
add
and
js
mov
imul
adc
test
xor
add
sar
in
adc
cdq
gs
ins
daa
push
xor
cmps
addr16
gs
and
fsubr
nop
sbb
push
add
add
or
lahf
jae
and
lods
push
aas
ret
inc
mov
mov
sub
or
inc
mov
das
(bad)
test
gs
or
sbb
jnp
adc
pop
push
mov
ds
ja
pop
inc
out
mov
add
push
out
add
mov
adc
xchg
sub
fsubr
sbb
push
sahf
xchg
mov
je
dec
(bad)
imul
inc
add
mov
loope
push
push
sbb
sub
mov
mov
mov
pop
fwait
sbb
sbb
sub
clc
sub
mov
gs
mov
adc
jmp
in
ret
in
jns
push
sbb
or
add
sbb
in
sbb
or
push
or
or
xor
imul
pop
add
push
lock
add
inc
jl
or
lock
adc
push
adc
sbb
pop
lock
push
aaa
(bad)
(bad)
(bad)
call
adc
push
or
sub
cmp
adc
sub
push
adc
cmp
adc
push
pop
or
(bad)
(bad)
(bad)
inc
push
sbb
adc
or
sbb
or
or
xor
and
(bad)
(bad)
(bad)
dec
xor
or
lock
add
mov
or
pop
push
sub
sbb
(bad)
call
mov
dec
or
pop
fsub
dec
adc
mov
push
lock
(bad)
(bad)
inc
cmp
test
pop
jmp
push
or
push
sbb
addr16
pusha
jb
pop
dec
pop
lock
(bad)
cmp
pop
ds
and
inc
sub
and
push
adc
loope
idiv
sbb
push
adc
adc
or
fdiv
mov
das
xor
pop
push
push
pop
loopne
in
mov
sbb
or
sub
in
(bad)
mov
cmp
inc
push
and
push
or
push
mov
push
or
in
mov
add
adc
cmp
test
or
jmp
and
and
pop
sbb
and
or
mov
jle
xor
es
sub
dec
jae
jmp
(bad)
call
add
dec
or
sub
add
xor
adc
out
call
pop
mov
jmp
adc
dec
pushf
pop
jb
cmp
and
add
or
push
or
ss
(bad)
or
ss
sub
sbb
or
ins
or
or
(bad)
push
repnz
xchg
xchg
scas
ja
push
adc
and
or
(bad)
jmp
pop
lock
or
or
add
lock
fcomp
(bad)
inc
or
adc
aaa
aam
add
pusha
sbb
adc
mov
adc
push
sbb
add
or
pop
sbb
push
cld
outs
clc
inc
in
and
adc
push
sbb
push
push
sbb
sbb
fdivr
or
adc
add
push
push
mov
push
jmp
and
or
and
and
jg
sbb
and
jnp
push
test
adc
jge
dec
sub
sub
push
cmp
lock
or
inc
daa
lock
les
pop
pop
pop
push
xchg
outs
jo
cwde
jae
inc
ret
pop
adc
xchg
or
or
add
adc
sbb
pop
jle
shl
ss
or
push
or
adc
push
adc
add
sbb
xor
sbb
and
push
lock
adc
or
fiadd
or
sbb
and
fsubrp
and
test
and
sub
sbb
push
imul
clc
(bad)
stos
push
or
or
lock
jnp
mov
pop
loopne
or
or
ror
or
or
add
push
adc
dec
fs
cmp
push
sbb
push
or
in
pop
add
mov
loopne
mov
sbb
xor
adc
or
sbb
pop
mov
mov
adc
push
into
add
pop
jo
adc
sbb
sub
or
adc
das
or
push
sbb
and
fcom
ja
movs
cli
lds
and
sbb
and
(bad)
scas
shl
mov
adc
push
xor
adc
icebp
mov
sbb
sub
cmp
and
daa
xlat
popa
pop
ins
mov
jmp
and
inc
and
sub
outs
adc
inc
or
sbb
xor
cmp
or
and
jle
sub
retf
or
clc
jmp
pop
sbb
push
add
push
add
push
inc
adc
add
adc
sbb
push
mov
fwait
or
add
add
cmp
pop
pop
sahf
test
pop
mov
sub
add
adc
xor
inc
mov
add
sub
sub
lock
adc
ud0
jg
adc
cmps
add
sbb
sbb
and
test
push
jbe
sub
inc
pusha
mov
sub
pop
pusha
pop
adc
adc
sbb
dec
movs
jg
dec
or
add
jge
xchg
xchg
add
push
hlt
(bad)
je
ins
mov
mov
push
adc
das
inc
xor
adc
push
sub
ja
mov
mov
pop
pop
mov
add
fdiv
inc
sbb
lock
add
sub
and
push
dec
pop
dec
adc
(bad)
cmp
xor
inc
push
sub
inc
fs
jle
pop
push
adc
sub
enter
xor
pop
or
les
pop
dec
xor
sbb
aam
adc
dec
pop
ss
imul
das
clc
pop
jno
ds
fcom
and
sub
inc
push
jl
adc
xor
or
dec
cmp
or
and
sbb
pop
or
cs
stos
idiv
and
sbb
ss
daa
sbb
pop
loopne
aad
adc
add
dec
or
xchg
ins
jb
or
aam
or
jp
aaa
or
inc
push
je
adc
push
cmp
cmp
adc
adc
sbb
mov
sti
xor
adc
sbb
arpl
je
or
pop
js
push
(bad)
mov
adc
pavgw
push
add
and
dec
adc
sub
jg
sub
add
push
pop
xor
xor
pop
sbb
test
adc
xor
sti
add
cmp
lock
add
jb
js
enter
lock
push
jl
sub
nop
sahf
cmp
push
xchg
sub
cld
push
pop
outs
cmp
or
sbb
and
test
mov
dec
aad
cmp
pop
lock
lock
add
push
adc
push
sub
sbb
cmp
sub
je
loopne
nop
out
mov
sub
mov
(bad)
call
pop
cvtps2pd
xor
or
lock
add
mov
cld
cmp
adc
lock
add
lock
lods
add
mov
inc
pop
adc
add
or
cmc
mov
das
ins
sbb
sbb
add
sub
or
lock
inc
or
lock
add
xchg
adc
sbb
push
out
xor
adc
add
or
wrmsr
pop
or
push
push
adc
and
adc
adc
outs
adc
and
inc
sbb
inc
(bad)
scas
das
clc
adc
jno
dec
mov
adc
daa
or
ss
xor
mov
or
pop
lods
mov
syscall
xor
(bad)
push
cmp
outs
into
or
or
sbb
and
std
das
cmp
sub
adc
adc
sbb
mov
or
test
mov
or
xor
pop
or
dec
loopne
sbb
adc
pop
xor
rcr
mov
das
or
or
fld
mov
fadd
and
add
or
loope
xor
pop
movs
or
mov
pop
add
scas
add
add
in
inc
add
lock
add
js
and
add
pop
adc
js
js
pop
sub
or
adc
sub
mov
data16
inc
daa
or
and
daa
mov
out
adc
and
dec
pop
ds
rol
sub
in
adc
push
outs
call
or
mov
mov
lock
push
add
(bad)
aaa
mov
pop
add
lock
mov
mov
add
push
outs
or
sbb
cmp
adc
adc
cmp
adc
sbb
jns
push
xor
aaa
push
arpl
pop
mov
rcr
push
or
(bad)
push
or
jp
mov
or
or
aam
sbb
mov
and
mov
xor
(bad)
lock
lock
adc
add
es
int
mov
jns
or
(bad)
call
lock
add
mov
sub
sahf
xor
call
adc
cld
mov
sub
cmp
jne
sub
movs
add
fidiv
in
clc
fwait
(bad)
adc
sbb
hlt
adc
pop
jmp
les
push
adc
sbb
sub
pop
push
or
add
jge
adc
adc
sbb
in
mov
jns
sbb
adc
(bad)
mov
lock
rol
add
sbb
jnp
add
adc
push
pop
push
imul
push
mov
add
add
inc
mov
std
jmp
dec
or
movs
adc
and
dec
sbb
pop
jle
adc
xor
adc
nop
fsub
inc
fisttp
add
pop
sub
fiadd
sbb
sbb
sub
mov
sbb
cwde
lock
ret
(bad)
mov
xor
dec
lock
add
mov
jp
and
ins
adc
or
or
cdq
inc
(bad)
js
push
retf
add
pop
adc
stos
mov
adc
mov
xor
cmp
cld
and
bound
pop
or
sbb
sbb
cmp
pop
mov
push
pop
and
das
xor
stos
scas
mov
sbb
cld
adc
ins
adc
push
push
push
push
pop
push
sbb
sbb
sbb
mov
call
or
jle
xchg
mov
inc
adc
fsubr
das
cmp
and
jp
sub
push
or
bound
retf
fwait
push
cmp
inc
sub
xor
jl
aaa
adc
pop
mov
jmp
loop
add
(bad)
daa
ja
xchg
mov
inc
inc
or
or
xor
and
icebp
ja
es
ret
cmp
push
adc
inc
jmp
add
cli
add
ins
lock
xlat
sub
mov
adc
xlat
add
jb
mov
push
add
and
xchg
xor
xchg
inc
sbb
xor
mov
cmp
or
ja
pop
push
or
sub
push
jle
sbb
xor
push
(bad)
xor
outs
or
cmp
ja
sbb
(bad)
(bad)
fcomip
sbb
dec
sbb
and
ror
dec
xor
lds
(bad)
(bad)
sbb
pop
sbb
add
or
les
inc
sub
or
inc
adc
xor
sbb
mov
in
addr16
and
add
adc
or
or
inc
sub
out
mov
push
adc
sub
inc
or
and
jae
push
adc
xchg
loope
dec
adc
sbb
inc
dec
in
add
pop
cs
adc
mov
sub
sbb
add
add
pop
push
cmp
movs
mov
call
sbb
fldcw
xchg
push
or
xor
add
jecxz
xor
xor
mov
sbb
pop
sbb
sbb
fist
mov
out
adc
pop
fimul
cmp
sbb
inc
sub
and
pop
and
inc
push
pop
and
add
jmp
es
rcl
or
fst
sub
popa
pop
(bad)
or
push
pop
repnz
pop
add
xchg
sbb
dec
add
add
(bad)
cmps
call
aaa
sar
push
add
pop
or
jns
push
sbb
(bad)
jg
jmp
jl
xor
mov
xor
dec
adc
cmp
jge
xchg
xchg
cmp
push
adc
lock
inc
and
nop
or
push
and
pop
adc
pop
xlat
and
xor
adc
movups
maxps
mov
xor
inc
sub
and
or
adc
push
inc
and
stos
push
ins
cs
pop
loopne
in
adc
or
and
xor
hlt
push
mov
call
fucomp
sbb
push
pop
adc
sbb
pop
sub
sub
or
xchg
stos
stos
call
adc
and
jmp
aaa
sbb
or
or
inc
and
push
add
sbb
mov
clc
push
or
or
test
xor
sbb
or
add
call
sub
or
add
xor
mov
inc
loop
and
loop
pop
or
or
js
leave
inc
sbb
(bad)
adc
sub
mov
pop
outs
adc
sub
aam
ins
push
push
popa
push
adc
dec
xor
pop
sbb
dec
inc
and
sbb
js
dec
jecxz
push
xor
lock
fsubr
and
inc
and
pop
ror
adc
sub
or
add
cmp
sar
push
sbb
int
adc
or
or
cmp
call
mov
jae
sbb
xchg
sub
cmps
pop
mov
sbb
add
xchg
or
push
adc
(bad)
sub
icebp
mov
push
das
push
pop
or
enter
inc
xchg
cmps
enter
inc
push
mov
inc
cmp
mov
fimul
jecxz
stos
icebp
loopne
mov
or
(bad)
fwait
aam
mov
jno
mov
pusha
push
sbb
or
or
jle
test
and
jp
push
sbb
and
jg
sbb
adc
and
lock
add
iret
push
mov
adc
and
jmp
push
dec
add
pop
push
inc
sub
dec
and
inc
fbstp
mov
loop
jg
xor
sub
js
inc
das
inc
pop
or
std
(bad)
(bad)
mov
sbb
pop
or
mov
pop
add
lock
add
inc
sbb
xchg
or
adc
movs
push
pop
or
xor
scas
sbb
push
cld
mov
adc
add
jmp
add
hlt
cmp
lock
ins
sbb
adc
add
test
push
push
push
cld
xlat
mov
les
or
push
es
jo
mov
jge
cmp
pop
jecxz
mov
lock
add
movs
or
shl
add
mov
scas
add
or
push
adc
scas
sub
or
push
jmp
or
cmp
cmp
jle
xchg
add
mov
or
pop
sbb
and
and
cs
or
lock
fcom
jo
ss
pop
add
and
jg
(bad)
push
sbb
daa
or
and
dec
mov
or
inc
and
add
sbb
cmps
and
sbb
mov
dec
add
ins
outs
cli
mov
sub
and
push
jge
add
or
out
mov
sbb
add
mov
or
sub
sbb
sub
sbb
and
push
pop
push
cmps
ins
push
aaa
sub
or
push
jge
dec
jne
in
scas
sub
popa
push
sbb
sub
xor
xor
(bad)
jg
and
mov
das
sbb
add
or
sbb
mov
xor
and
cmp
ins
test
dec
mov
cs
cmp
add
loope
movs
pop
aam
sub
and
pop
cmc
fcos
mov
nop
sbb
and
or
sbb
or
jp
jge
pop
pop
sub
inc
cmp
cmp
add
and
xchg
and
sub
not
call
adc
and
(bad)
cmps
in
scas
pop
clc
pop
sbb
inc
sbb
push
inc
and
stos
in
stos
jo
sub
pop
or
inc
mov
dec
push
subps
dec
sbb
mov
pop
mov
cmp
adc
clc
mov
sar
push
cmp
sbb
push
cs
jle
mov
scas
add
push
sub
mov
mov
lahf
xor
dec
sbb
cmp
inc
dec
and
outs
repnz
cmp
push
xor
push
sub
add
adc
and
or
sbb
sub
push
adc
add
xchg
sbb
adc
mov
inc
int
ret
cmp
push
pop
and
xor
inc
pop
adc
into
and
dec
adc
push
pop
pop
jne
jle
xor
or
sahf
sub
pop
inc
sbb
push
pop
(bad)
mov
ds
ds
aaa
sbb
adc
fcmovbe
sbb
push
xor
pop
idiv
cli
mov
add
xchg
push
lock
add
sbb
int3
push
pop
push
or
inc
adc
adc
(bad)
mov
das
sub
push
rdmsr
adc
adc
inc
xor
adc
adc
adc
pop
push
loopne
dec
in
sbb
or
and
inc
and
sbb
sub
add
aam
div
or
or
sbb
dec
or
pop
or
adc
and
dec
sub
sbb
data16
fbstp
mov
aaa
and
sbb
xchg
mov
cli
inc
mov
sub
mov
cmp
inc
stos
movs
sbb
call
jbe
sbb
and
sub
and
jmp
rcr
sub
pop
outs
push
addr16
add
mov
and
xor
pop
pop
adc
lock
add
aaa
(bad)
call
xchg
and
xchg
sub
sub
cmp
or
rol
outs
dec
sub
adc
push
dec
dec
inc
xor
std
stos
mov
add
adc
or
xor
inc
jle
dec
sbb
cld
inc
inc
ret
jmp
xor
or
adc
adc
inc
inc
xor
push
push
xor
adc
add
ins
add
xor
(bad)
in
mov
cmp
sub
sbb
add
sub
jg
jg
out
adc
or
or
or
dec
sub
pop
hlt
fisttp
cmps
inc
das
dec
mov
or
fcom
push
or
inc
loop
add
aas
adc
xor
or
xor
push
xchg
cmp
dec
ds
ss
aaa
jle
imul
(bad)
mov
jge
jmp
push
adc
sub
inc
adc
cmp
xor
push
pop
femms
sub
sub
add
movs
div
push
mov
arpl
pop
adc
push
adc
call
idiv
pop
cmp
adc
or
dec
push
sub
cld
lds
adc
or
sub
xor
aaa
inc
data16
jae
adc
js
mov
adc
or
(bad)
(bad)
outs
mov
adc
sub
pop
stos
push
mov
mov
add
aaa
mov
mov
pop
adc
adc
or
dec
and
mov
adc
or
(bad)
and
jbe
pusha
outs
and
pop
add
loope
scas
cld
mov
push
sbb
sbb
pushf
adc
aaa
call
and
cmp
movs
out
adc
push
and
adc
add
lock
invd
out
je
outs
outs
adc
sbb
fcomp
and
pop
clc
adc
xor
or
or
in
in
jae
sbb
add
dec
dec
adc
outs
je
rol
xor
add
mov
adc
and
or
adc
or
and
jp
mov
mov
lods
and
cmp
adc
add
pop
cmp
sub
adc
in
mov
and
inc
dec
and
or
pusha
dec
pusha
sbb
or
inc
push
adc
retf
jo
and
add
xchg
add
push
adc
(bad)
mov
lock
adc
push
sbb
or
add
dec
sbb
mov
js
bound
or
aaa
sub
xchg
test
sbb
or
movaps
or
adc
or
popa
out
out
push
mov
and
cmp
sbb
cmp
sahf
dec
arpl
add
xor
frstor
lock
push
popa
add
add
mov
icebp
mov
push
or
adc
nop
add
xchg
test
sub
(bad)
mov
add
add
not
push
mov
inc
adc
add
add
adc
add
push
into
adc
jle
inc
sbb
cwde
mov
push
add
adc
cmps
lsl
ins
imul
push
add
or
add
push
fneni(8087
or
mulps
add
sbb
mov
mov
imul
sahf
push
mov
femms
and
add
rcr
sbb
(bad)
fiadd
iret
push
pop
add
pop
push
sub
int
idiv
dec
pushf
sbb
push
push
mov
rol
xchg
xchg
in
nop
mov
sahf
int
cmps
push
dec
add
shl
jl
dec
hlt
pop
out
jb
jb
or
int
ja
dec
ret
gs
push
xchg
cmps
fiadd
leave
mov
lock
out
inc
shl
pop
sbb
ret
add
or
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
fmul
add
dec
pop
add
pop
dec
add
add
sbb
or
inc
add
add
add
inc
inc
add
add
