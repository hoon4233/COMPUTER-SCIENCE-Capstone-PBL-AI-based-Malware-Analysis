fcomp
add
adc
mov
add
add
or
sub
jge
dec
fdiv
stos
push
aam
and
xlat
push
jae
mov
adc
add
pop
(bad)
addr16
jne
inc
das
or
daa
pusha
cmc
jl
xchg
mov
jge
cli
shl
inc
xor
cmc
pusha
(bad)
mov
jb
arpl
mov
pusha
stc
jns
mov
jmp
lahf
xor
push
pop
dec
and
push
into
and
imul
les
jo
mov
ja
hlt
in
adc
jno
inc
sbb
mov
fwait
push
adc
ja
xor
int
dec
fs
xor
fmul
or
fisubr
icebp
and
pop
dec
xor
jns
dec
lea
dec
xchg
out
(bad)
imul
dec
shr
jb
fwait
repnz
stos
mov
pop
div
pop
add
jmp
xor
add
ds
fst
dec
and
dec
call
or
lods
add
hlt
rcl
dec
gs
pop
jbe
ins
xor
sbb
repnz
cli
outs
lds
add
popa
lods
mov
xor
sbb
push
mov
mov
daa
std
xor
test
bound
das
mov
ins
xor
mov
cmp
add
js
pusha
or
inc
cmps
iret
push
adc
loop
(bad)
sbb
int
leave
sbb
and
out
mov
aas
jl
mov
(bad)
in
sbb
ins
and
and
xlat
push
(bad)
sub
xchg
popa
adc
xchg
push
imul
and
enter
int3
fmul
cmp
and
js
(bad)
test
aas
in
rcl
sub
dec
mov
and
imul
mov
pop
repz
and
xor
nop
xor
mov
xor
sbb
cmps
test
xor
push
and
jo
or
push
jle
xchg
dec
loop
lahf
jo
gs
sti
xor
adc
inc
push
inc
in
jmp
shr
xchg
push
push
add
or
in
add
add
add
divps
movs
ret
push
inc
(bad)
cli
outs
adc
int
pop
cmp
inc
and
es
mov
lahf
sar
cmp
xchg
sbb
push
inc
mov
mov
fisttp
stos
jmp
js
mov
sub
xchg
xchg
dec
jge
jge
fsubp
test
cmp
inc
call
push
adc
xchg
shrd
gs
xchg
xor
add
in
jge
pop
cmp
fstp
mov
mov
xchg
test
mul
cwde
xor
and
xchg
into
lods
jb
jecxz
outs
cli
imul
jo
push
fdivp
sbb
sub
xor
scas
icebp
bsr
push
call
dec
add
push
xlat
movs
xlat
inc
dec
mov
mov
out
adc
in
movs
sbb
mov
dec
aam
add
xlat
iret
and
ret
test
adc
lds
sbb
cli
add
push
sbb
sbb
(bad)
ins
(bad)
into
add
push
pop
jbe
mov
jno
mov
pop
aam
push
rol
sub
icebp
inc
or
cmp
jge
not
pop
add
ja
xchg
scas
inc
push
mov
sub
or
stos
imul
les
jmp
jne
cli
leave
jmp
dec
xchg
xlat
(bad)
fdiv
cli
xor
fbstp
pop
out
ins
push
int
bound
das
mov
mov
nop
(bad)
jg
retf
mov
cmp
or
xchg
jb
fisubr
push
sbb
lock
adc
and
push
mov
push
daa
xchg
outs
add
fnsave
pop
stc
jle
xlat
jp
xor
aas
data16
(bad)
mov
test
sahf
scas
cmp
push
enter
dec
sbb
jmp
push
mov
mov
adc
xchg
std
inc
ins
mov
fisttp
dec
jb
outs
jecxz
push
out
cmps
or
loope
jne
xchg
mov
cs
lods
(bad)
mov
test
xor
retf
cmp
cdq
je
jecxz
stos
int3
jo
je
test
lods
ret
cmps
add
push
ret
jg
jg
ss
xchg
test
jl
add
push
mov
push
inc
fdivr
xor
cld
inc
div
pusha
cmp
mov
mov
sub
xchg
cdq
es
inc
xor
ins
hlt
and
imul
shl
lods
push
rcl
adc
jmp
pop
cld
sbb
dec
leave
cmp
adc
sub
ds
cmp
mov
shl
and
rol
pop
and
in
shr
sbb
lahf
adc
xor
out
int3
sbb
sti
dec
inc
aad
les
add
push
fcomp
fsubr
outs
sbb
retf
out
dec
mov
xor
xor
es
push
sbb
repnz
push
xchg
xchg
push
cmps
ret
adc
cmp
(bad)
loopne
jbe
jnp
push
pop
nop
repnz
cmp
adc
add
(bad)
inc
push
sbb
out
aaa
js
and
movs
push
pop
jle
sbb
mov
xchg
cmp
seta
es
add
inc
pop
lods
fimul
mov
(bad)
in
ja
lods
sbb
fbld
dec
mov
movs
xchg
imul
mul
repz
jne
aas
arpl
or
enter
pop
(bad)
aaa
cwde
clc
mov
rcl
fiadd
in
mov
(bad)
stc
repz
retf
cmc
sbb
jecxz
cmp
daa
cmp
imul
mov
or
ror
retf
imul
inc
adc
adc
ss
test
out
inc
inc
push
stos
mov
movs
sbb
mov
icebp
mov
mov
cmp
push
hlt
aam
lea
or
into
mov
mov
js
add
ds
push
in
pop
pop
mov
pop
pushf
or
ins
ds
out
test
imul
push
shr
sub
in
addr16
test
dec
xchg
mov
mov
and
xchg
pop
sub
push
xchg
and
scas
mov
cmp
cmp
scas
adc
(bad)
(bad)
or
push
dec
pusha
sub
adc
mov
daa
sbb
nop
push
dec
dec
push
fst
in
sub
mov
pop
push
add
pcmpgtw
inc
jo
popf
div
cmc
int3
sbb
sbb
in
xchg
sbb
lods
scas
or
ds
fadd
stos
jmp
sub
and
push
mov
mov
ret
xchg
sar
loope
adc
aam
imul
ret
mov
mov
(bad)
and
in
add
loopne
jl
aad
cs
xchg
loope
call
(bad)
dec
cmp
mov
xchg
shl
movs
in
sbb
jae
pop
stos
(bad)
pop
sar
cli
ret
pusha
mov
mov
dec
cmc
sub
mov
scas
in
mov
cmp
mov
push
xchg
sub
xor
movs
dec
and
jp
xchg
pop
cwde
call
std
pop
jnp
adc
xchg
pop
xchg
rcr
dec
xchg
mov
mov
mov
std
test
hlt
enter
push
test
jne
sub
pop
popf
jns
nop
cwde
int3
sahf
addr16
ror
jbe
call
mov
(bad)
stc
in
cld
mov
pop
inc
js
ds
loop
and
sub
adc
xchg
pusha
call
je
not
ror
fisttp
push
lea
mov
imul
rcr
adc
sbb
add
dec
sub
dec
fs
rol
dec
cmp
icebp
inc
daa
rcr
retf
iret
dec
(bad)
rol
and
(bad)
cli
sbb
sbb
lods
std
push
pop
aaa
cmp
and
ret
ficom
push
int
mov
icebp
arpl
push
pop
hlt
repz
xlat
jge
lock
retf
add
jmp
or
rcl
pop
mov
mov
and
sar
jmp
mov
jge
or
push
dec
sub
xor
(bad)
nop
dec
bound
shl
ss
inc
dec
xchg
shl
pop
inc
out
mov
push
pop
setle
in
mov
shr
dec
xor
cmp
cs
pushf
repnz
in
dec
outs
pop
add
fnstenv
sub
add
outs
jecxz
dec
lea
call
(bad)
sar
adc
mov
fist
and
jb
call
icebp
iret
retf
mov
adc
icebp
jbe
mov
and
push
cmp
test
lods
ror
gs
lahf
stos
lods
sbb
ins
xchg
test
daa
sbb
dec
in
retf
mov
cs
(bad)
ins
cmovb
imul
push
inc
adc
inc
jl
sub
stos
ds
add
aam
lock
xor
outs
movs
lahf
push
push
push
clc
repnz
pop
and
addr16
mov
ja
add
ret
sar
shr
popa
mov
dec
mov
push
xlat
jmp
jl
fistp
bound
pop
mov
sahf
push
loopne
xlat
bound
ds
add
rcr
in
test
lods
push
repnz
sar
test
or
in
push
and
sar
or
jbe
into
cdq
mov
int
aaa
xchg
and
sub
sbb
push
dec
cmc
sbb
mov
inc
jg
jmp
in
bound
cmp
cmc
not
add
fsubrp
sub
hlt
mov
or
push
cmp
xchg
sub
inc
push
dec
in
add
and
fmul
mov
(bad)
int
shl
ja
ins
xchg
dec
jb
data16
outs
les
mov
mov
add
fwait
fwait
sbb
xchg
cmp
cmps
not
dec
dec
cmp
push
mov
hlt
mov
push
arpl
sti
add
pop
or
jl
int
daa
mov
rcr
or
stc
inc
lahf
mov
jbe
jns
call
xor
jg
iret
stos
in
stos
in
sub
es
jb
aad
push
mov
xchg
mov
inc
inc
mov
lds
jmp
out
outs
add
stos
ror
sar
shl
shl
adc
ret
call
adc
test
xchg
jp
or
jmp
dec
xchg
adc
cmp
xchg
inc
jae
pushf
(bad)
shl
scas
cli
(bad)
movs
lahf
test
cli
lods
adc
stc
jmp
inc
xor
cmp
add
outs
int3
dec
int
ss
mov
jbe
call
xor
lds
mov
sub
mov
repnz
and
or
cmpxchg
sub
pop
mov
cli
or
mov
jnp
add
retf
lahf
shl
arpl
jge
lods
and
movs
mov
xchg
out
stc
rcl
retf
jmp
in
xchg
aas
retf
fadd
mov
test
(bad)
outs
movs
lock
or
add
cmps
loope
mov
js
icebp
jb
lock
repnz
das
mov
add
or
mov
cmp
push
in
retf
sub
add
nop
lock
test
out
inc
int
les
push
add
cmp
jl
or
jns
(bad)
aam
cwde
ror
cmps
and
sbb
out
fmul
mov
loope
pop
jmp
movs
test
test
fmul
dec
je
je
push
push
xchg
jno
dec
or
pop
add
or
dec
repnz
stos
add
shl
sub
mov
(bad)
mov
pusha
ins
shr
fsubr
mov
mov
mov
mov
cwde
js
into
push
push
or
mov
(bad)
shl
fisub
imul
sbb
pop
mov
sahf
cmp
ins
lods
add
cmp
into
sti
nop
adc
and
test
leave
rcl
inc
arpl
das
mov
movs
retf
lds
jg
or
push
sbb
in
ins
jne
btr
pop
lock
ins
movs
mov
jns
out
push
and
mov
jb
js
cmp
xchg
rol
cmp
scas
xor
inc
jbe
in
mov
mov
mov
pop
dec
iret
jo
pop
adc
cmp
add
inc
push
push
pusha
(bad)
pop
int3
cmp
nop
sbb
retf
vmovd
sub
push
in
sbb
cmp
sub
lahf
adc
test
xor
pop
jle
jnp
sti
cmps
test
mul
mov
pop
sbb
add
push
adc
mov
jmp
leave
outs
arpl
out
loopne
sahf
push
adc
int3
fwait
xchg
pop
jg
pushf
cmp
call
sbb
xor
sub
adc
cmps
aaa
pop
enter
sbb
arpl
cmp
dec
push
mov
sar
cwde
pushf
fs
ret
(bad)
loope
cli
xor
push
imul
or
jbe
fist
mov
ja
pop
aaa
cmp
pop
test
push
xor
sub
(bad)
mov
ins
(bad)
loop
shl
int3
adc
push
psubd
fld
sub
mov
dec
nop
int3
in
(bad)
arpl
ror
xor
cld
push
cwde
sub
mov
xor
dec
jmp
jp
fld
pop
out
adc
adc
mov
pop
mov
dec
xor
cli
pop
pop
ins
cs
daa
scas
pop
mov
dec
xor
(bad)
xor
arpl
xor
dec
mov
mov
sub
adc
add
cmp
push
loop
push
pushf
std
inc
rcr
or
sub
out
(bad)
aad
push
mov
ds
dec
loopne
fisubr
pop
mov
xchg
pop
xchg
test
sub
mov
sbb
enter
dec
push
dec
cmps
xchg
pop
ins
pop
push
mov
ror
fld
call
retf
loopne
mov
cmp
cs
cmp
lods
cmovne
inc
jl
add
daa
xor
jp
xor
rcr
stos
add
mov
mov
sbb
pop
mov
mov
outs
fwait
gs
pop
out
loop
xchg
fs
cld
mov
cmp
inc
mov
sub
int3
xlat
nop
out
into
in
jg
imul
fstp
bound
ud0
adc
add
push
and
test
add
adc
lock
mov
scas
test
inc
(bad)
aad
inc
imul
or
daa
xchg
aad
cdq
nop
xor
sbb
xor
aas
repnz
(bad)
push
test
mov
ds
adc
stos
icebp
test
(bad)
push
adc
bound
out
sbb
add
fsub
repnz
mov
push
popa
xchg
inc
scas
inc
ret
popf
xchg
lock
movs
sub
push
sbb
xchg
mov
mov
mov
pushf
lods
adc
pusha
inc
jmp
mov
sub
adc
inc
dec
dec
dec
repnz
xchg
xchg
mov
push
pushf
mov
out
sbb
adc
jl
das
xchg
mov
jle
mov
cdq
pushf
ja
data16
cmp
je
int3
pop
inc
aad
sub
mov
jp
pop
jmp
cdq
sub
rcr
mov
adc
int
mov
repnz
sub
dec
adc
pop
adc
sub
int
out
gs
mov
bound
movs
jne
addr16
pop
xor
jmp
js
clc
sbb
jmp
pop
cmp
sti
mov
enter
xor
mul
fs
movs
jmp
jl
mov
cmp
clc
pushf
repz
xchg
rcl
pop
ins
push
mov
xor
ret
mov
shl
js
push
iret
aad
push
in
scas
adc
dec
aaa
ja
fs
mov
inc
push
dec
mov
(bad)
rcr
sub
mov
and
(bad)
jge
jae
mov
loop
dec
mov
jp
ins
xor
(bad)
cmp
and
adc
pop
inc
sti
aad
mov
cpuid
add
repz
pop
cdq
xlat
jne
or
add
dec
adc
(bad)
addr16
mov
pop
push
add
adc
sub
mov
test
mov
xchg
movs
out
sbb
rcr
adc
cmp
mov
or
add
cld
vmread
inc
scas
xchg
aaa
mov
pop
pop
fs
fadd
xchg
out
in
pop
faddp
jnp
outs
pop
adc
mov
ja
neg
sbb
fcomp
(bad)
jecxz
pop
cmp
aaa
shl
mov
jmp
cmp
stos
jnp
movs
daa
cli
(bad)
hlt
and
clc
xor
cwde
retf
(bad)
xor
test
gs
cmp
outs
mov
add
or
sbb
or
and
mov
xchg
adc
mov
lods
pusha
sti
or
fcom
xor
and
ror
sub
outs
ins
xor
push
add
movs
mov
shl
fdiv
mov
aad
and
fwait
ds
mov
bound
mov
mov
jl
or
xchg
addr16
(bad)
pop
je
or
dec
mov
pop
icebp
push
mov
sub
frstor
or
(bad)
iret
dec
int
es
mov
sbb
jae
xchg
out
mov
add
scas
mov
sub
adc
jno
ss
scas
jl
mov
sub
push
mov
stos
cmp
inc
pop
jg
cmp
lahf
out
stos
adc
push
hlt
bound
sub
jmp
sub
jns
inc
aas
sub
mov
jecxz
repnz
fwait
ja
fistp
aam
in
sbb
shl
add
adc
sub
jmp
mov
jb
mov
sar
jmp
aam
push
test
xchg
inc
test
stc
mov
arpl
loope
add
inc
in
daa
gs
mov
scas
inc
sub
mov
dec
repz
lds
pop
sbb
or
inc
inc
cmp
mov
call
dec
(bad)
cmp
jmp
fs
ja
sbb
sub
mov
movs
sti
out
sub
out
xchg
ret
jns
jmp
ins
and
int
jg
aas
mov
aas
(bad)
loopne
jmp
rcl
pop
outs
xor
scas
jecxz
pop
sbb
xchg
fild
or
inc
inc
aad
sub
movs
ret
sbb
sbb
dec
sar
pop
mov
push
mov
dec
mov
gs
pop
sbb
and
sub
or
sub
mov
inc
sub
std
push
push
pusha
jae
push
xor
or
and
mov
xchg
aam
jmp
aas
scas
sbb
inc
pop
xchg
shld
cli
pop
dec
mov
and
or
imul
cs
push
fucomip
inc
(bad)
in
fsubr
sbb
outs
cmp
ror
add
cmp
push
int3
(bad)
jno
imul
ror
mov
and
jns
stos
jle
pop
push
(bad)
iret
jne
jecxz
pusha
repnz
push
jge
push
and
jp
dec
sub
mov
sbb
sbb
stos
test
(bad)
sbb
fs
lahf
ss
or
pushf
mov
mov
test
sbb
sub
hlt
retf
sub
sub
push
pop
ins
jl
cwde
sbb
inc
movs
clc
ins
daa
das
mov
or
and
pop
mov
and
push
in
lods
icebp
mov
into
retf
addr16
inc
or
dec
call
push
push
dec
sbb
aad
rcr
repnz
add
into
mov
jmp
push
aad
cmps
shl
stc
push
xor
arpl
push
xchg
mov
push
(bad)
cmps
aad
adc
icebp
sbb
outs
and
movs
cmc
enter
xor
cmp
or
call
mov
add
dec
out
or
sbb
or
xchg
dec
int
add
fild
bound
nop
adc
pop
sti
outs
in
call
repnz
int
pop
mov
icebp
dec
mov
mov
aam
int3
cld
add
imul
xor
jmp
movs
ja
fisubr
jge
gs
pop
shr
sbb
pop
test
into
dec
sub
mul
pop
aad
inc
inc
sbb
push
adc
ins
movs
push
aam
bound
xor
xchg
sub
mov
sub
add
call
inc
push
sbb
mov
imul
paddsw
inc
imul
cwde
sub
stc
mov
mov
cmp
and
push
add
(bad)
shl
xor
xchg
jmp
mov
cmp
imul
push
xor
test
sbb
rcr
mov
popa
sub
add
pushf
test
xor
or
data16
ins
rol
adc
xor
jg
sub
pop
(bad)
mov
cmps
or
call
(bad)
sbb
ret
pop
(bad)
outs
push
ror
data16
xchg
sub
fidivr
mov
test
(bad)
and
stc
xor
pop
movs
cmps
inc
xlat
fcom
mov
inc
xchg
mul
push
or
out
jb
test
push
adc
(bad)
mov
ins
ins
in
scas
ss
cs
dec
shl
push
outs
mov
mov
cmp
aas
test
mov
mov
inc
dec
sub
data16
xlat
(bad)
mov
loopne
xor
cmp
xchg
jno
retf
push
inc
jb
xor
mov
sahf
mov
xchg
pusha
cmp
mov
call
sub
dec
ins
push
test
mov
pop
and
add
ja
or
cmp
sub
mov
(bad)
aam
pop
add
pop
cmp
pop
outs
loop
push
and
lods
add
jg
sbb
cld
xlat
shl
inc
jae
sub
jmp
shr
imul
jb
ins
pop
inc
mov
popf
arpl
daa
out
dec
adc
adc
mov
inc
je
mov
sbb
in
imul
repz
fcom
mov
jnp
jge
adc
and
std
jge
adc
xor
push
cmp
(bad)
out
mov
ret
repnz
lods
adc
dec
pop
xor
add
fbstp
in
(bad)
mov
pop
ret
pop
les
dec
in
xor
aas
and
add
std
or
dec
ret
jp
jecxz
sub
xchg
ja
cmp
aam
loop
mov
or
mov
stos
mov
stos
in
and
jp
cs
or
daa
stos
jo
ds
ror
das
sub
idiv
fild
mov
add
push
daa
icebp
or
xor
mov
or
in
(bad)
es
pop
xor
stc
add
int3
pop
setl
(bad)
mov
add
xor
test
leave
adc
lahf
pop
and
fld
jmp
mov
pop
push
add
push
ds
or
sbb
hlt
cld
cmps
and
fcomp
and
inc
or
xchg
xor
bound
jg
(bad)
loop
push
mov
gs
movs
add
mov
sbb
inc
fwait
out
pop
push
mov
xlat
sub
jo
push
xor
enter
dec
retf
pop
mov
ret
test
into
ror
adc
pop
aam
mov
leave
mov
ret
push
clc
mov
ja
loopne
and
mov
(bad)
shl
push
dec
pop
ds
jne
cmps
out
repnz
out
inc
fwait
call
mov
add
in
jo
xchg
daa
daa
cmps
es
and
(bad)
popa
dec
enter
cmp
div
dec
push
xchg
inc
jp
xlat
repnz
pop
shl
adc
cmp
adc
aas
add
xor
jae
adc
daa
movs
pop
jo
pop
jns
xor
adc
jp
(bad)
push
sub
mov
int
cmp
lea
sbb
pop
pop
outs
leave
push
xchg
fidiv
push
repz
jecxz
or
stos
jae
aam
adc
push
mov
sbb
xor
nop
sbb
fcmove
movs
pushf
push
imul
and
shr
pop
mov
loope
scas
fs
movups
push
or
mov
stos
mov
pop
cli
adc
retf
imul
imul
dec
fmul
inc
fistp
rcl
fsub
ficomp
outs
jns
inc
jbe
mov
or
inc
jnp
nop
shl
(bad)
inc
in
icebp
(bad)
push
mov
out
xchg
inc
mov
lods
push
push
mul
mov
cmps
cmp
inc
jbe
loope
test
cmp
fstp
dec
sbb
add
mov
leave
in
or
(bad)
sahf
xchg
vandnpd
in
sbb
js
mov
loopne
pop
cli
aaa
inc
xchg
or
xchg
inc
mov
add
mov
adc
mov
push
adc
mov
xchg
call
rcl
dec
popa
xchg
ror
push
xor
inc
rcr
int3
push
xor
push
sub
xchg
cld
sbb
pop
pop
push
xchg
cmc
adc
aaa
in
stos
in
ds
sahf
mov
sub
add
aam
(bad)
lock
or
test
mov
inc
(bad)
mov
test
and
cld
sahf
dec
or
jmp
mov
test
out
add
aad
arpl
in
push
vphaddwd
push
cs
aam
outs
xor
adc
shl
(bad)
(bad)
out
lahf
out
add
dec
dec
je
out
fwait
cwde
test
cli
sbb
rcr
ds
push
mov
mov
dec
bound
pop
mov
not
loopne
shr
clc
xchg
cs
ja
xchg
fistp
mov
hlt
push
fdivr
or
not
outs
inc
pushf
dec
pop
out
cs
inc
in
push
push
and
test
cmps
jp
or
ror
mov
mov
cmp
movs
or
mov
(bad)
sbb
cmc
xchg
icebp
(bad)
(bad)
push
(bad)
jg
mov
mov
cmp
shl
add
(bad)
leave
sbb
movs
les
imul
inc
and
out
push
nop
imul
adc
int3
inc
pop
or
sbb
outs
ins
repz
lea
adc
in
retf
xchg
test
(bad)
inc
add
xchg
sbb
inc
fnstenv
addr16
xchg
enter
sahf
jge
retf
leave
xor
loop
lahf
push
sti
stos
adc
push
inc
and
jnp
imul
ins
pop
popf
shr
je
lock
outs
iret
lock
pop
add
call
sub
xor
shr
adc
cmps
mov
stos
aas
in
add
es
push
adc
pop
es
cmps
push
push
fisttp
stos
mov
mov
(bad)
lahf
mov
lock
adc
or
cmps
mov
adc
outs
cdq
jg
sub
jmp
mov
mov
stos
lods
mov
fbstp
outs
je
in
leave
sub
dec
enter
and
or
inc
dec
sbb
jmp
fnstsw
mov
arpl
pushf
cdq
bts
or
cmp
jg
xchg
lea
je
cld
xchg
js
push
dec
push
jmp
mov
dec
call
push
jno
or
in
xchg
lock
test
add
fiadd
xchg
mov
mov
xchg
add
push
js
lea
jbe
ficom
add
setb
pop
repnz
pop
test
sbb
cmc
jg
stos
ret
dec
pop
mov
call
xchg
inc
mov
ret
mov
jle
mov
fistp
cld
les
fld
(bad)
outs
pop
cmp
sti
add
pop
jp
dec
sbb
stc
retf
jge
ja
int3
imul
lods
sub
fs
ds
and
(bad)
mov
pop
adc
gs
or
test
nop
jmp
or
lods
jmp
arpl
cmp
inc
xchg
dec
and
fcom
das
xlat
sbb
sub
scas
xlat
adc
jbe
retf
cmp
stos
adc
scas
sbb
pop
or
mov
adc
sub
test
(bad)
enter
mov
jne
add
ret
add
lahf
loop
xchg
mov
in
push
scas
sub
and
inc
mov
icebp
ins
out
jmp
loope
mov
dec
push
xor
repnz
sahf
call
mov
addr16
fisttp
or
mov
int3
fcom
adc
enter
mov
xor
mov
icebp
add
lods
iret
ret
sbb
daa
or
xor
adc
movs
xor
and
(bad)
jo
push
hlt
inc
inc
push
mov
aam
dec
test
cmp
stc
and
fisttp
in
sub
lds
mov
add
mov
mov
inc
xor
fistp
les
xor
cmp
lods
out
xor
push
sar
ror
cmp
push
repnz
inc
rcl
mov
mov
xor
xchg
data16
add
xor
(bad)
(bad)
cld
ins
mov
add
fdiv
lods
pop
pop
dec
cmp
dec
retf
cmp
xchg
dec
int3
or
jbe
popa
push
jmp
test
xor
(bad)
jge
int3
or
mov
in
movs
dec
sahf
or
in
imul
imul
rol
and
(bad)
repnz
lock
sub
dec
shl
movs
lds
cmp
xor
dec
and
jb
mov
sbb
fdivr
sbb
not
sub
push
repz
dec
jns
retf
pop
enter
fisttp
jecxz
lods
push
nop
sbb
push
imul
mov
js
loop
cs
aas
mov
xor
pop
mov
jmp
xor
pop
mov
call
mov
arpl
xlat
aam
sbb
sbb
shl
add
mov
loope
push
cmp
movs
xchg
leave
or
add
pop
in
lods
lock
inc
jl
retf
dec
push
int
outs
push
into
xchg
mov
int3
pop
cmp
push
cmc
push
sti
mov
mov
popa
aaa
adc
das
add
push
dec
xor
jmp
mov
fwait
enter
test
repz
xchg
je
fisttp
test
add
adc
mov
in
add
int3
movs
test
fidivr
icebp
sbb
jmp
inc
mov
push
push
call
repz
cmp
jo
cmps
and
and
repz
xor
dec
arpl
or
inc
outs
xor
mov
icebp
push
shl
mov
add
cmp
dec
stc
push
stc
das
mov
nop
test
and
aam
lahf
cli
pop
mov
inc
test
(bad)
mov
mov
xlat
xor
ror
std
push
clc
xor
cmc
pop
add
sub
mov
jg
jmp
mov
ins
mov
sub
push
adc
push
mov
dec
and
loop
sub
in
xchg
bndstx
lods
out
enter
(bad)
lods
call
or
call
and
in
test
mov
fistp
fisttp
mov
push
jne
jae
xlat
sbb
pusha
jb
inc
or
add
pmaxsw
and
add
jmp
mov
into
cwde
loopne
xchg
add
cli
repz
or
xchg
aaa
adc
ja
mov
stos
dec
(bad)
lahf
xchg
mov
mov
xchg
jo
nop
push
daa
sub
or
sahf
inc
sbb
scas
fadd
mov
mov
add
movs
xor
std
hlt
in
inc
jmp
dec
mov
inc
test
add
lahf
adc
ss
adc
bound
in
out
pushf
stos
in
jae
mov
jns
xor
jo
push
jecxz
mov
imul
xchg
mov
jnp
pop
loopne
mov
test
cs
sbb
std
or
dec
dec
mov
sub
retf
mov
faddp
and
mov
fcmovnb
sub
pop
cli
add
push
pop
inc
xchg
pop
arpl
lds
sahf
out
ret
and
pusha
(bad)
imul
test
push
xor
xlat
aam
dec
ins
and
cdq
xchg
jbe
push
dec
in
jge
sbb
mov
or
out
cmp
jo
cmps
mov
push
sbb
gs
iret
xor
push
cmp
mov
mov
scas
or
jns
jmp
mov
sbb
or
adc
mov
rep
arpl
and
add
add
jmp
jl
test
add
fistp
xor
xchg
sbb
das
sub
mov
lods
call
mov
or
lods
mov
xchg
jmp
add
or
test
dec
or
sub
mov
push
pop
mov
mov
ja
jl
cmp
mov
hlt
xchg
dec
sub
fldcw
pop
dec
pop
cmc
imul
popf
fcmovb
dec
pop
xchg
fld
push
mov
inc
lods
ror
inc
fs
xchg
or
into
sahf
push
jg
das
test
cmp
jae
sub
mov
lock
fbld
xchg
outs
in
xchg
(bad)
xor
daa
in
mov
rcr
xor
cmps
imul
in
into
push
push
cli
inc
or
jl
inc
mov
pop
or
xchg
leave
ins
cmps
cwde
test
inc
jne
sbb
es
lds
mov
enter
inc
inc
push
pop
lahf
xchg
add
pushf
dec
leave
inc
lods
jns
xchg
push
or
adc
xchg
inc
mov
iret
add
sbb
cmps
(bad)
mov
rcr
xlat
cs
lea
dec
(bad)
adc
xchg
jnp
fadd
enter
sbb
inc
(bad)
out
ds
push
and
fs
(bad)
fadd
sub
shr
mov
add
cmp
push
cli
mul
xchg
rol
dec
pushf
push
ror
cld
or
ret
push
sahf
push
into
mov
push
inc
(bad)
out
push
test
xchg
mov
fcomp
retf
xchg
inc
or
xor
push
rol
push
jle
loop
jns
inc
es
jmp
jo
fmul
mov
movs
and
sub
adc
imul
stos
imul
and
imul
xchg
mov
aam
ficomp
sbb
ret
aas
adc
push
sbb
fsubp
add
adc
imul
pop
cmp
push
rcr
retf
lahf
or
daa
out
pop
aam
mov
mov
scas
test
mov
xchg
div
jg
and
in
movs
sbb
xor
bound
push
push
int
push
out
retf
xlat
dec
adc
js
lods
dec
inc
pop
dec
ffree
mov
jb
mov
push
mov
cmc
lahf
jnp
mov
movs
dec
mov
mov
push
(bad)
sub
xor
inc
call
int3
gs
xchg
cld
sub
and
aas
loop
dec
xchg
repz
popa
mov
mov
in
jmp
or
movs
movs
mov
ins
test
repnz
cmp
pop
rcr
(bad)
aas
cmp
outs
pop
sbb
fist
jg
int
loopne
call
and
push
inc
pop
out
and
mov
push
test
bound
stos
out
lahf
mov
test
cmc
loopne
inc
push
clc
mov
ja
cwde
es
jnp
pop
iret
iret
mov
gs
loop
mov
inc
mov
shr
jae
inc
pop
scas
mov
aam
jmp
ja
es
inc
into
pop
ja
call
xor
pop
fnsave
push
enter
cdq
cmp
fwait
jecxz
mov
test
rol
push
mov
cmp
aaa
add
cmp
data16
nop
test
pop
xchg
scas
xchg
test
iret
push
sub
and
dec
mov
pushf
popa
sbb
and
jmp
dec
lods
jp
push
sub
jo
jb
xchg
(bad)
xchg
lods
es
test
test
inc
fs
mov
cmp
xchg
scas
xchg
in
jmp
fadd
mov
dec
mov
mov
jle
push
and
aad
sbb
mov
mov
in
mov
in
das
fwait
jo
call
bound
pop
fimul
(bad)
adc
adc
test
rol
shl
push
in
sbb
sti
mov
fdivr
iret
and
fwait
inc
jb
jbe
xchg
in
arpl
cmp
xchg
pusha
lahf
fst
repnz
in
pop
mov
mov
test
test
pop
dec
sub
xchg
inc
fsub
or
inc
pop
call
rcl
or
ret
fidivr
inc
xchg
dec
aaa
sub
push
lea
xchg
fs
xor
jbe
jne
mov
out
jae
ss
(bad)
call
mov
data16
mov
xchg
jne
jp
lods
adc
fiadd
stos
arpl
mov
imul
mov
fisub
xchg
into
pmulhuw
aaa
loop
and
xchg
rcr
test
ss
mov
ficomp
loopne
out
es
ror
adc
mov
dec
mov
fnstenv
(bad)
arpl
jge
or
idiv
push
xchg
xor
(bad)
popf
jl
pop
dec
fstp
push
rcr
cmp
loop
pop
stos
movs
je
loope
cmc
cld
bound
fisubr
cmc
and
(bad)
repz
lock
cld
push
xchg
aad
or
sahf
jno
xchg
jnp
pop
mov
xchg
jecxz
out
add
stos
mov
(bad)
mov
(bad)
ficomp
lods
pop
leave
jb
enter
fsubr
mov
enter
inc
sbb
retf
outs
lock
daa
cmp
data16
mov
lods
and
in
fld
jge
adc
sbb
push
adc
mov
add
mov
je
sbb
std
int3
jae
and
push
xchg
stc
(bad)
ret
mov
int3
jbe
loop
rcl
out
xchg
inc
or
popf
(bad)
mov
cdq
pop
shl
jbe
data16
daa
xor
(bad)
sub
jns
xchg
xor
inc
or
dec
shr
(bad)
dec
mov
pop
or
or
push
into
mov
cli
jnp
out
outs
movmskps
out
lods
push
and
push
test
jg
test
xor
mov
mov
cmp
gs
push
jle
rcr
adc
stos
mov
dec
lea
mov
inc
mov
int3
addr16
lahf
test
nop
xchg
loopne
pop
cmp
mov
movs
call
add
je
jmp
sbb
xchg
and
fdivr
mov
cmp
fisubr
sti
call
push
dec
shl
mov
(bad)
loope
mov
loop
(bad)
push
sub
cmp
shl
jo
je
in
jbe
in
mov
aaa
(bad)
outs
xchg
imul
mov
jp
pop
loopne
(bad)
add
clc
mov
das
mov
cld
inc
iret
lds
imul
xor
dec
rcr
mov
into
mov
or
inc
rcr
(bad)
(bad)
push
and
lods
icebp
or
retf
or
push
(bad)
call
xor
dec
inc
imul
jnp
dec
jb
jl
rcr
cmp
sahf
ss
add
bound
mov
in
xchg
les
loop
jmp
add
fsub
iret
js
sbb
mov
lock
push
(bad)
fsubr
cmp
sub
mov
fisttp
inc
imul
pop
out
mov
pop
jmp
fst
daa
outs
fisubr
mov
mov
ds
fld
sti
push
into
gs
stos
dec
cmp
outs
clc
stos
push
std
or
push
sbb
mov
inc
sahf
xor
test
push
push
(bad)
daa
(bad)
inc
pop
mov
jae
xchg
iret
and
jmp
pop
aad
jecxz
add
jg
jnp
call
xor
sub
mov
into
in
out
xchg
jo
xchg
in
jl
stc
arpl
sub
fbstp
inc
test
hlt
inc
dec
jbe
push
sub
dec
jae
call
stos
jmp
inc
jmp
std
call
(bad)
inc
ret
lods
lods
pop
sbb
movs
retf
add
xor
lahf
stc
in
test
rol
mov
and
push
and
adc
cwde
cld
aad
or
mov
and
lods
and
mov
mov
mov
cmp
stc
aad
jp
int
test
aam
or
sbb
je
popf
mov
clc
mov
adc
push
cdq
(bad)
(bad)
mov
inc
push
loopne
cwde
pop
fnstcw
push
ja
lea
pop
inc
jecxz
loop
push
push
aas
pop
add
mov
push
scas
hlt
(bad)
dec
cmp
pop
ret
cmp
repz
mov
mov
je
je
jecxz
add
inc
mov
ins
aam
jno
add
jbe
mov
push
or
lds
scas
int
push
repnz
sbb
fdiv
sbb
jns
pop
pop
in
repnz
neg
dec
popf
inc
lock
ret
push
push
inc
cmp
fst
mov
mov
dec
loopne
push
lock
push
jmp
push
test
imul
push
and
push
movs
shr
sbb
push
sbb
not
pop
sub
shl
adc
pop
mov
jo
and
or
loop
div
out
loope
sbb
jno
cmp
push
xlat
fistp
mov
xchg
lock
mov
fistp
loop
loopne
mov
or
and
add
test
pop
push
call
jns
sar
push
loopne
push
mov
inc
dec
js
in
leave
(bad)
outs
lea
mov
fucomip
xchg
mov
fimul
and
cdq
aas
pop
or
xor
aam
push
cmc
push
mov
xchg
stos
(bad)
mov
cmps
or
or
sbb
test
adc
mov
sbb
sub
aam
not
adc
mov
daa
add
add
adc
aad
into
cmps
mov
cmp
(bad)
jns
xchg
test
std
sub
repnz
out
nop
test
adc
mov
mov
xor
mov
out
leave
dec
inc
jmp
inc
pop
push
mov
add
gs
sub
gs
ins
sbb
jg
push
neg
daa
mov
clc
ds
jae
adc
aad
(bad)
xor
test
dec
loop
or
fdivr
scas
mov
or
inc
dec
aaa
sbb
jmp
ror
idiv
jg
dec
repnz
push
mov
fcmovne
pop
int3
adc
cld
ficom
sbb
aad
lods
mov
daa
cmovbe
fdivr
lea
shr
pop
pop
xchg
jbe
movs
xor
xchg
out
adc
aaa
add
(bad)
mov
ins
repnz
add
inc
add
push
xor
fild
and
lods
ret
ret
or
jle
repnz
stos
pop
fdiv
fsubr
push
sub
out
data16
push
add
inc
or
adc
movs
or
ds
dec
test
lahf
retf
pop
dec
sahf
inc
adc
xchg
push
addr16
call
fistp
dec
mov
push
sub
add
xchg
pop
sbb
iret
rol
neg
sbb
ss
push
lds
inc
and
add
lods
adc
icebp
cmp
ficomp
mov
in
inc
mov
fstp
es
push
push
adc
inc
jns
int
adc
ror
(bad)
xor
jno
and
push
and
dec
outs
pop
dec
push
dec
movs
test
(bad)
lock
mov
test
inc
xor
sahf
sbb
das
add
int3
xchg
push
pop
stos
or
add
aam
fimul
fldcw
dec
pop
xor
and
jecxz
pusha
cmps
ror
cmps
add
shl
sbb
lods
cli
cmp
add
xor
mov
iret
adc
sbb
mov
sub
mov
dec
sub
shl
mov
and
shl
mov
add
pusha
jg
call
jp
sti
leave
fsubr
mov
mov
cmp
cli
imul
mov
and
mov
scas
pop
test
(bad)
mov
push
push
xchg
jno
adc
test
scas
cmp
mov
add
fisttp
aam
icebp
adc
mov
jg
inc
xor
fucomip
or
sbb
pop
lea
mov
jo
add
aas
movs
cmp
jl
add
dec
daa
jne
shl
jl
movs
call
lods
and
mov
mov
repnz
mov
repnz
not
mov
loopne
mov
(bad)
shr
inc
jae
inc
stos
lods
pop
in
xor
mov
jnp
mov
jno
test
pusha
and
in
sbb
icebp
dec
sub
push
adc
mov
stos
out
rcl
cmc
and
test
add
pop
push
aad
xchg
cdq
(bad)
push
sub
add
cmp
xchg
scas
jb
hlt
jo
push
push
and
shl
mov
mov
(bad)
jmp
xor
into
test
adc
bound
out
dec
sub
pop
bound
(bad)
dec
movs
lahf
xor
(bad)
js
out
fcomp
fistp
adc
pop
daa
fsub
mov
rol
push
or
pop
mov
pop
or
out
adc
idiv
in
or
in
dec
xor
cmp
(bad)
adc
pop
inc
dec
xchg
out
out
test
mov
cmc
mov
jns
cmc
dec
jg
lahf
adc
je
fistp
xor
ds
and
mov
add
sbb
mov
add
inc
into
xor
and
lock
dec
int
pop
jne
inc
dec
(bad)
pop
loopne
(bad)
or
lds
sbb
push
jb
mov
mov
retf
lea
sub
xor
xchg
hlt
adc
push
add
jb
(bad)
and
xchg
adc
xchg
ret
int3
xlat
mov
sahf
pop
mov
pop
cmp
and
fcomp
jmp
and
xor
dec
lahf
and
mov
mov
push
push
sub
sbb
sub
push
mov
dec
stc
dec
pusha
inc
rol
jp
pop
xchg
cwde
pop
ret
mov
sbb
adc
adc
stos
cmp
mov
out
jne
mov
mov
or
mov
xchg
ins
test
scas
repnz
adc
fmul
mov
shr
arpl
inc
shr
popa
fcmovnu
sub
adc
adc
and
sbb
cli
inc
iret
adc
jne
mov
ds
movs
cmp
dec
ret
nop
inc
ss
in
mov
iret
or
jl
dec
push
xor
inc
dec
adc
push
or
pop
adc
dec
xor
pop
shl
mov
call
xor
(bad)
psllq
mov
jns
or
fldcw
aam
dec
arpl
movs
outs
sbb
(bad)
xor
cmp
add
es
jecxz
(bad)
sbb
cmc
jecxz
mov
pop
icebp
push
retf
aaa
pop
in
mov
add
add
push
rcr
out
dec
out
pop
daa
ror
call
outs
xchg
adc
mov
add
lods
or
xlat
sub
fld
mov
and
mov
int3
pop
retf
jl
push
ss
mov
or
adc
cmp
in
sub
loope
sbb
retf
sub
rol
jne
sar
xor
sub
xor
in
mov
push
in
dec
and
iret
in
add
xor
fstp
les
call
retf
xor
ins
adc
in
inc
jmp
inc
(bad)
ins
fisubr
cmp
jno
inc
fisttp
xchg
jmp
add
jge
lods
inc
in
jno
cmp
popa
fld
mov
test
in
in
ss
movs
mov
fdivr
(bad)
and
sub
lock
js
ins
mov
or
jmp
xlat
pushf
adc
test
imul
sub
xor
je
mov
dec
gs
xchg
mov
xchg
das
push
dec
sar
or
xor
push
scas
inc
(bad)
pop
add
out
mov
mov
loope
push
sbb
xor
or
push
jp
cmp
in
add
xchg
enter
mov
(bad)
aaa
lock
dec
mov
mov
xchg
ret
stc
mov
or
scas
out
fcmovnbe
adc
mov
adc
cld
neg
neg
mov
dec
leave
outs
pop
pop
mov
mov
rol
out
mov
pop
lea
or
cwde
mov
mov
jns
xchg
and
movs
jle
mov
mov
ins
out
dec
jae
jb
iret
pop
pop
aam
gs
mov
in
fwait
or
mov
add
xchg
pop
mov
or
pop
pop
(bad)
loopne
jecxz
jne
inc
imul
and
cmp
(bad)
jns
adc
mov
cmps
imul
rol
xor
or
push
scas
lods
retf
mov
loope
mov
arpl
(bad)
popa
mov
call
mov
and
(bad)
cli
out
sub
daa
sahf
call
push
jo
jae
in
imul
push
pop
scas
mov
test
das
retf
mov
lea
popf
or
sbb
or
gs
cmp
add
test
mov
mov
xchg
sub
mov
adc
inc
popa
jle
xchg
and
int
shl
xor
(bad)
cs
pop
dec
scas
std
inc
int3
aaa
cmp
and
out
dec
out
sbb
sahf
cmc
inc
add
retf
nop
fdivr
mov
mov
rcl
sbb
outs
sbb
xchg
xchg
rcr
mov
stos
cdq
jmp
cmp
sbb
sbb
mov
out
stos
or
dec
sub
push
and
xor
popa
jnp
inc
gs
jp
cmp
push
fidiv
cwde
add
xchg
sar
(bad)
in
cmp
jae
call
mov
mov
pop
ret
inc
stos
xor
(bad)
and
push
pop
xor
dec
out
frstor
add
jmp
pop
pop
sbb
pop
or
test
lea
dec
out
sbb
push
popa
dec
ja
inc
mov
cs
pop
movs
jne
sub
jnp
sub
adc
scas
pop
sub
push
xor
push
add
mov
mov
adc
ret
mov
pop
outs
dec
mov
cmc
and
xlat
and
add
jecxz
dec
inc
scas
fidiv
out
aaa
mov
fsubr
icebp
lods
out
je
mov
pop
push
lods
inc
adc
fimul
mov
repnz
daa
mov
cmps
mov
fcmovnb
xchg
loop
xchg
mov
fsubp
sti
push
cmp
shl
mov
cmp
aas
sbb
mov
test
pop
addr16
xchg
mov
aas
mov
jne
jbe
dec
fist
popa
push
inc
or
mov
dec
and
out
mov
add
dec
rcr
pushf
out
sub
(bad)
ins
les
shr
push
cmp
(bad)
jb
jp
dec
mov
or
adc
pushf
inc
shl
cwde
mov
dec
and
adc
call
mov
inc
pusha
jp
jg
icebp
test
push
test
fdiv
jle
std
jl
aad
repnz
inc
ja
hlt
es
in
xchg
ja
ins
aas
lds
data16
push
xor
dec
mov
aad
and
cdq
adc
(bad)
jecxz
outs
fwait
jo
lds
sub
inc
test
adc
sar
lea
inc
sub
dec
adc
rcl
xchg
adc
sbb
mov
imul
dec
mov
pop
loop
fsub
sub
cs
jg
pop
cld
gs
push
push
inc
movs
int3
jmp
pushf
adc
sbb
int3
(bad)
stc
sub
fcmovbe
retf
lahf
adc
jecxz
xchg
inc
or
cdq
sbb
add
into
mov
pop
leave
xchg
sub
popa
sbb
das
jns
dec
in
push
cmp
jmp
dec
lea
pop
cmp
and
cmp
adc
outs
push
xchg
hlt
mov
leave
add
outs
dec
repnz
adc
mov
(bad)
rol
mov
cmp
mov
push
ror
xchg
or
das
lahf
je
ss
lods
fwait
add
cmc
movs
pop
lea
in
xlat
cmp
cmp
sbb
add
cmp
adc
mov
xchg
xchg
push
adc
xchg
sbb
sub
inc
inc
push
scas
scas
adc
out
add
xor
sub
iret
pop
popa
lea
iret
cld
inc
repz
js
add
sbb
xor
inc
mov
fs
into
ror
pop
test
sub
and
into
cwde
pop
movs
js
stc
add
aaa
mov
ficomp
icebp
sbb
xchg
(bad)
lock
daa
cdq
sub
aaa
cdq
push
dec
ins
call
mov
mov
adc
sub
daa
cmps
and
pop
mul
pop
ins
adc
js
and
xor
out
inc
aam
fwait
mov
mov
int3
sti
clc
or
shl
stc
mov
int
xchg
push
fdivp
repz
adc
jmp
push
pop
sub
js
mov
mov
xchg
sar
xor
pop
mov
sub
pop
popf
add
in
movs
sub
(bad)
mov
lock
iret
(bad)
mov
cmp
pop
lods
fwait
(bad)
fstp
or
cmp
test
sbb
iret
imul
adc
inc
ins
xlat
pop
mov
or
pop
test
sbb
mov
test
add
adc
cli
sbb
cs
or
and
dec
pop
fldenv
outs
xor
in
adc
in
adc
jb
jne
inc
shr
cdq
xor
mov
sub
sbb
(bad)
fld
cmp
pop
sbb
test
aas
jo
dec
mov
hlt
mov
adc
add
fimul
(bad)
fpatan
mov
rcl
jl
out
dec
movs
mov
pop
repz
or
cmp
cmc
dec
mov
add
pop
and
push
addr16
mov
mov
or
inc
mov
jbe
aam
sbb
pushf
dec
test
into
mov
and
push
dec
lahf
mov
mov
cdq
popa
add
xchg
fwait
mov
cli
xchg
xor
sub
pop
jmp
xchg
sbb
or
sbb
bswap
lock
jne
ins
dec
push
push
icebp
add
out
inc
ja
mov
into
cdq
aas
cmps
push
out
ret
daa
sub
(bad)
mov
inc
imul
push
fwait
adc
mov
jecxz
sbb
xchg
ins
cwde
out
js
rcl
xchg
push
call
gs
xchg
fstp
mov
adc
sub
call
outs
sub
jecxz
fcmove
stc
sub
xchg
sub
pushf
test
movs
shl
dec
mov
and
sub
or
(bad)
in
mov
out
fld
pushf
or
repnz
xchg
imul
outs
pop
int3
test
fldcw
cmp
push
sub
push
adc
gs
push
rcr
jmp
lds
jmp
(bad)
pop
mov
repnz
sbb
jnp
(bad)
mov
and
std
out
lds
fs
shr
dec
jno
shr
pop
cmps
int3
sub
and
popf
outs
add
movs
ret
sub
inc
repz
leave
ins
add
cmp
mov
dec
test
mov
or
xchg
cmp
mov
mov
imul
dec
dec
repz
scas
jno
pushf
fmul
mov
pop
fistp
pop
jmp
sbb
fwait
inc
pop
repnz
scas
add
mov
inc
pop
std
sub
lock
inc
sbb
pop
repnz
xchg
add
stc
pop
mov
fidiv
jae
lods
int3
aad
mov
pop
pop
jecxz
in
cmp
cmps
push
sub
jle
repnz
push
xchg
jp
gs
sub
rcl
jl
mov
pop
aas
clc
mov
sub
mov
adc
pusha
retf
lea
xchg
add
and
les
cmps
sbb
loope
cmp
xchg
fsubr
movs
shr
(bad)
mov
shr
fs
mov
jle
cmps
mov
cwde
xchg
addr16
mov
push
mov
add
add
sub
leave
daa
lods
push
sub
adc
scas
test
pop
lahf
push
mov
mov
dec
add
out
xchg
daa
mov
and
xor
and
fnsave
pop
pop
mov
ret
fisttp
popf
popa
imul
sub
popa
sub
push
jl
xor
cmps
jbe
test
cmps
hlt
fidiv
aad
stc
mov
or
fldcw
into
loopne
or
add
out
repz
mov
ja
hlt
xchg
nop
cmps
cmp
xrelease
push
mov
push
sahf
adc
push
cli
push
dec
pop
pop
xchg
sahf
in
stos
retf
scas
mov
jmp
jno
ins
mov
ret
icebp
or
clc
sbb
mov
fisttp
sbb
push
lods
sub
stc
mov
or
xchg
add
sysenter
sub
add
jmp
(bad)
cwde
push
jo
jge
pop
add
jge
pop
mov
jmp
jns
mov
pop
aas
xchg
push
mov
std
or
retf
pushf
push
xor
(bad)
xchg
add
(bad)
sub
xchg
mov
lods
pop
punpckhwd
fwait
div
int3
lds
mov
add
adc
add
mov
fs
shr
shr
out
pop
mov
xor
imul
sahf
data16
outs
cmp
lock
inc
inc
push
mov
mov
adc
mov
push
shr
xchg
jg
test
cdq
jecxz
les
dec
mov
cs
in
sbb
jns
out
or
sub
aam
cmps
mov
and
mov
add
push
xor
pop
in
cmp
loopne
int3
adc
mov
pop
pop
aam
(bad)
mov
mov
call
inc
leave
scas
repnz
mov
data16
lds
lods
inc
les
lods
pop
lea
or
push
addr16
aam
adc
lea
scas
rcr
adc
xor
pop
mov
in
adc
call
daa
arpl
(bad)
or
lock
aas
dec
ret
adc
mov
ja
sbb
pusha
xor
pop
push
imul
or
adc
xlat
test
mov
pop
(bad)
std
dec
rol
std
or
cmp
pop
jbe
addr16
test
xlat
mov
cmp
cmp
add
inc
aaa
inc
xor
stos
sbb
inc
mov
mov
les
xchg
popa
xchg
push
bound
add
xor
inc
xor
(bad)
lea
ret
clc
sub
add
pop
dec
jg
rol
enter
fbld
mov
lds
pop
sar
addr16
pop
pushf
mov
daa
mov
in
add
adc
out
cmps
mov
mov
fwait
jmp
dec
hlt
jae
lds
adc
cmp
shl
xor
xchg
int3
aaa
adc
stos
add
xchg
push
or
cli
div
push
movs
in
and
lods
out
and
lds
mov
mov
pop
int
jns
inc
mov
pusha
dec
xor
inc
dec
pop
in
aaa
mov
inc
pop
mul
into
fadd
repnz
in
js
fdivr
hlt
(bad)
cs
fs
popa
retf
cmp
gs
and
fisubr
ret
push
mov
retf
jmp
mov
movs
shr
xchg
mov
jmp
int
retf
gs
pop
push
jo
aaa
inc
add
inc
je
xor
xlat
test
pop
push
ss
or
xor
loope
or
cmp
enter
xor
div
adc
in
dec
or
and
push
or
sbb
or
mov
retf
mov
jo
fwait
or
add
sbb
cwde
sbb
(bad)
and
mov
fmul
sti
or
mov
scas
or
inc
jno
and
add
lods
hlt
ds
retf
jnp
fistp
jp
adc
call
(bad)
je
hlt
xchg
inc
xchg
jp
pop
not
mov
mov
or
hlt
ret
fcom
or
jae
sub
xchg
mov
xchg
retf
xlat
push
sub
xchg
xchg
enter
ja
in
test
stc
sbb
mov
imul
pop
loope
inc
pop
retf
idiv
retf
fsubp
cs
imul
dec
mov
fs
xchg
add
lahf
jo
pop
lock
sar
aam
jbe
in
pop
and
cmps
adc
mov
rol
and
and
pop
push
psrlw
xor
adc
mov
int3
int
push
jo
mov
push
in
dec
sar
(bad)
mov
pop
iret
sub
push
outs
add
popa
fs
and
dec
imul
arpl
iret
dec
nop
ja
adc
retf
lods
mul
xor
(bad)
sub
pop
inc
sti
mov
inc
sbb
jae
push
mov
or
mov
movs
call
popa
sub
push
xor
mov
mov
adc
out
ret
inc
clc
mov
inc
mov
inc
push
jns
mov
retf
dec
and
cmp
pop
cwde
xchg
std
pushf
cmc
pop
pop
pop
movs
pop
sub
int
inc
mov
daa
int3
mov
ret
and
call
inc
push
rcr
clc
test
push
dec
push
mov
jnp
retf
push
sbb
mov
xlat
aas
fcmove
or
xchg
cmc
sub
push
jge
mov
in
pop
dec
inc
rcr
push
out
sub
cwde
push
sbb
cmp
sub
in
add
scas
mov
jp
(bad)
jae
adc
add
mov
shr
mov
dec
mov
jg
mov
stos
ins
sub
retf
enter
retf
jmp
sub
jge
mov
loope
and
and
aaa
and
sti
ja
int
lock
and
fldcw
mov
push
add
xchg
xlat
xchg
and
sahf
mov
sbb
int
adc
add
cmc
xor
add
fst
(bad)
dec
pop
fdiv
cdq
sub
ins
shl
push
and
cmps
sub
dec
mov
mov
pop
dec
test
push
dec
rol
leave
lahf
push
xor
fchs
inc
jnp
daa
dec
pop
nop
or
xlat
bound
and
sbb
lods
rcl
in
dec
mov
mov
push
adc
cli
js
jo
fadd
adc
int3
cs
mov
sbb
jl
ror
inc
dec
sti
inc
add
pop
dec
call
adc
aas
das
jne
mov
add
push
jbe
adc
fbld
or
dec
pop
inc
aaa
lds
mov
push
dec
jns
or
popa
xchg
(bad)
mov
ins
jo
(bad)
into
rol
cdq
pop
addr16
mov
mov
mov
dec
sar
add
push
shl
pop
fwait
repz
push
rcr
scas
cmc
push
xor
loope
lods
sahf
adc
mov
pop
pop
loopne
dec
imul
jmp
popa
jb
cmc
cmps
daa
out
fcomp
cmp
test
das
les
js
add
add
in
xor
mov
sar
in
adc
mov
pop
enter
jg
mov
and
add
jmp
sbb
cmp
pop
push
mov
pop
cmp
or
aad
das
xor
ja
mov
scas
or
daa
loop
jl
inc
repnz
xchg
fistp
dec
adc
iret
push
cmp
cmps
mov
inc
jmp
shl
movsx
iret
fild
fbld
call
inc
mov
(bad)
or
test
mov
call
or
repz
xor
outs
adc
cwde
loopne
adc
into
fcomi
lahf
sub
sub
sub
xchg
movs
mov
popf
aam
sbb
push
jmp
add
ins
fcmovnb
js
sub
sbb
nop
xchg
push
push
stos
dec
int
movs
xchg
xor
push
int
sub
(bad)
stos
ss
pop
jecxz
out
je
hlt
add
je
mov
dec
xchg
push
icebp
sbb
pop
add
lds
fs
sbb
add
jl
cmp
dec
(bad)
rcl
hlt
push
and
fcomp
sar
arpl
retf
jne
push
mov
(bad)
pop
in
dec
jle
mov
cmp
aaa
test
rcl
pop
xor
jle
sub
imul
loopne
leave
call
pop
cs
int3
mov
das
mov
and
add
ficomp
mov
push
mov
(bad)
shr
ja
xor
mov
sahf
ficomp
mov
fsub
jmp
and
mov
xchg
cdq
outs
inc
scas
(bad)
scas
jmp
fs
stc
pop
sub
mov
mov
sub
mov
cli
mov
pop
or
call
ficomp
movs
fldcw
stos
pop
data16
cs
mov
out
and
ret
outs
xor
or
(bad)
jno
pop
shl
in
dec
or
jg
push
xchg
push
retf
ror
addr16
test
jnp
ret
push
ret
push
rcl
cs
mov
mov
adc
int3
(bad)
or
dec
retf
pop
jo
shr
js
(bad)
or
and
jnp
dec
inc
ja
pop
jmp
add
or
jo
inc
mov
scas
(bad)
icebp
xchg
jle
rcr
out
lods
daa
mov
shl
aas
jl
mov
jmp
shr
dec
sub
stos
xchg
mov
push
popf
sbb
sti
jno
sbb
cmp
add
test
xchg
or
mov
pop
in
sti
sub
outs
cmc
or
rcl
xor
pop
cmovs
ss
and
(bad)
jne
fldenv
sbb
fwait
pop
aas
pusha
mov
mov
and
cmp
mov
ss
add
xchg
jno
dec
(bad)
lods
sbb
call
mov
idiv
xchg
pop
and
inc
into
imul
mov
dec
and
adc
jnp
pop
outs
jmp
adc
in
mov
and
jl
test
add
adc
lahf
jmp
pop
shr
movs
jb
xchg
inc
jno
jmp
xor
addr16
iret
xor
push
lods
xor
cmps
dec
test
addr16
jbe
in
dec
xchg
fistp
fisttp
iret
and
std
mov
sub
faddp
sub
push
(bad)
push
jl
push
mov
and
cmp
adc
test
jne
out
jle
mov
mov
pop
popf
jecxz
sbb
sub
jnp
addr16
pop
sar
dec
jne
ror
sahf
test
(bad)
dec
stos
add
retf
push
or
xchg
(bad)
fcomp
retf
(bad)
mov
mov
cmp
mov
inc
in
inc
and
stos
out
mov
rol
and
xchg
movs
sbb
(bad)
mov
push
inc
rcr
test
dec
mov
imul
sub
jp
cmp
mov
cld
into
inc
inc
xchg
jmp
pop
std
test
ror
fwait
in
stc
add
(bad)
ins
add
dec
cwde
sbb
int
fistp
mov
xchg
cmp
fadd
pop
push
int3
jb
daa
xor
outs
push
jnp
cli
add
jg
iret
jmp
popf
sub
mov
iret
outs
fdivr
xchg
xchg
fdiv
adc
sbb
sbb
icebp
cdq
push
sahf
lock
dec
xchg
sbb
push
dec
lods
mov
retf
sbb
lea
pop
(bad)
mov
(bad)
or
(bad)
inc
sbb
ret
add
and
push
jno
shl
pushf
stos
cdq
dec
int
mov
mov
jbe
xlat
call
repnz
pop
addr16
jmp
mov
rcl
movs
popf
mov
sahf
popa
xor
or
push
clc
push
repnz
or
xchg
clc
test
jb
inc
mov
rcr
gs
aam
pop
or
mov
mov
cld
icebp
jns
push
out
mov
retf
dec
gs
(bad)
cmp
outs
jns
clc
cld
xor
dec
mov
ins
cmc
pop
ret
xor
shl
xchg
xchg
push
lock
fs
fwait
inc
sbb
or
test
lods
cmp
rcr
rep
xchg
push
iret
sti
bound
ror
aad
ss
lahf
xchg
sbb
out
sti
(bad)
mov
scas
mov
ficom
push
jo
jg
jbe
stos
imul
dec
jno
(bad)
jp
aad
dec
inc
and
push
fadd
mov
add
mov
sbb
pop
inc
ss
cmps
fisub
adc
jbe
call
jo
push
sti
imul
ins
test
xor
and
scas
push
and
fadd
adc
dec
dec
xlat
or
mul
sbb
jl
sti
sbb
mov
int3
fmul
push
xchg
jmp
clc
adc
xchg
addr16
mov
or
movs
enter
add
jl
repz
movs
mov
les
jp
cmp
pop
mov
inc
and
adc
inc
dec
mov
cmc
xor
cld
punpcklwd
inc
mov
adc
cmp
lods
mov
jmp
sbb
add
aas
out
je
stc
sub
arpl
and
or
pop
mov
out
iret
std
iret
mov
nop
jle
or
imul
jle
jne
out
gs
loop
retf
fst
and
rol
mov
mov
leave
and
adc
outs
push
mov
in
pop
inc
fdiv
push
fimul
mov
xor
inc
inc
int3
or
mov
dec
das
ficomp
jg
loope
ins
pop
loop
cli
cld
call
(bad)
shr
(bad)
dec
mov
out
sub
xor
cdq
rol
mov
pop
cmp
sub
test
stc
inc
cmovbe
adc
icebp
out
test
loop
xor
addr16
mov
add
pop
add
cdq
sub
adc
cs
sub
aaa
cmp
addr16
mov
lds
shr
cmp
ret
xor
or
fisubr
xchg
xor
test
jns
or
xor
add
or
test
rcl
arpl
popf
cs
icebp
mov
sbb
(bad)
fbstp
loopne
and
test
xchg
je
jb
mov
xor
sar
out
fisub
sbb
xchg
mov
xchg
sub
pusha
xchg
outs
add
dec
sti
mov
mov
pop
scas
and
fldcw
and
cmp
mov
inc
xchg
inc
leave
jmp
cmp
mov
(bad)
(bad)
leave
enter
aam
mov
(bad)
out
cs
sahf
stos
repz
mov
pop
iret
or
movzx
dec
cmps
or
dec
sar
sub
(bad)
jae
fdivr
pop
xchg
mov
cdq
(bad)
mov
mov
pop
push
push
mov
popa
aas
xchg
mov
fbstp
sbb
(bad)
int
or
mov
xor
sub
pop
dec
aad
add
adc
xor
test
mov
mov
push
push
xchg
mov
call
in
in
mov
loop
xor
pop
out
mov
sub
jmp
inc
out
test
and
and
aad
stc
add
cs
mov
cmp
push
mul
mov
mov
push
clc
jle
and
aad
sub
mov
inc
aad
ror
fcmovnu
mov
push
xor
xor
pushf
cmp
lds
jg
fldcw
jge
and
xor
out
and
inc
inc
outs
(bad)
or
dec
xor
sbb
pop
inc
mov
cmc
jp
je
out
dec
jnp
retf
pop
or
adc
ins
(bad)
jmp
adc
mov
in
rol
mov
add
cwde
adc
add
cld
in
rcr
in
jl
cmp
pop
loope
cmp
cmc
jecxz
mov
pop
sbb
jmp
call
int3
movs
and
into
mov
sbb
or
sub
pushf
fdivr
call
fucomp
xchg
inc
outs
inc
push
sub
xchg
sub
(bad)
call
inc
(bad)
cmp
jne
inc
xchg
scas
pop
push
pop
mov
ins
mov
mov
je
sahf
(bad)
xchg
(bad)
sbb
stos
shl
and
ds
and
or
jge
add
scas
add
sub
dec
jns
test
pop
mov
sbb
cmp
push
mov
cmps
out
aam
adc
xchg
mov
mov
repz
aaa
loop
fadd
mov
out
repnz
mov
ret
mov
mov
retf
push
add
fimul
addr16
adc
add
xchg
cmp
dec
mov
jne
add
inc
inc
mov
cld
add
and
stos
dec
rep
test
pop
retf
dec
ret
adc
arpl
outs
pop
std
int
(bad)
call
not
xchg
mov
jns
xor
xor
inc
stc
adc
cmp
in
push
dec
(bad)
cmc
repnz
push
movs
sbb
addr16
in
cmp
adc
(bad)
test
es
sub
jge
jmp
xchg
dec
clc
mov
aas
jg
sbb
cmp
cmps
pop
call
adc
push
int
nop
xlat
sbb
mov
test
out
mov
inc
sub
sub
sbb
sub
xor
cmp
xor
aam
sub
xor
dec
jb
in
stos
int
xchg
fmulp
iret
jae
fdiv
push
(bad)
push
ins
loopne
inc
mov
call
mov
repz
mov
(bad)
(bad)
popa
and
cmp
push
sbb
adc
mov
sub
jl
adc
movzx
sti
jg
mov
cmp
test
xor
mov
gs
mov
cmp
hlt
xor
in
aad
std
pusha
rol
fucom
jae
aam
lahf
dec
je
std
sahf
enter
mov
sbb
mov
jns
dec
or
lds
dec
fisttp
dec
or
or
fdiv
mov
jne
or
mov
test
adc
sub
push
clc
jb
and
jb
push
mov
push
ror
fsubrp
inc
cwde
and
movs
mov
cmc
aad
add
pop
sub
push
mov
push
hlt
iret
adc
mov
push
fwait
loop
xor
or
xor
cmp
sub
rol
push
xchg
push
loope
dec
fcmovnbe
repnz
cmp
xchg
imul
stos
das
or
xchg
adc
and
bound
sbb
push
mov
or
div
add
inc
jmp
or
mov
jbe
stos
jbe
es
pop
sbb
adc
pop
dec
repnz
arpl
and
mov
or
fdivr
sbb
lds
adc
outs
or
out
sub
sbb
(bad)
lahf
sbb
sbb
test
xchg
shl
(bad)
jo
jecxz
jo
outs
dec
movs
mov
mov
call
mov
fistp
add
cdq
xor
outs
inc
push
repz
mov
and
out
cmp
test
xchg
shl
push
sub
aaa
in
shr
push
push
jno
cmp
stc
and
js
cmc
mov
(bad)
mov
inc
jns
jp
mov
int3
movs
pop
lahf
nop
loope
push
aaa
inc
cmp
sar
xchg
sbb
pop
out
xor
out
and
xor
nop
push
push
fld
cli
push
outs
fwait
ror
pop
popf
sbb
cmp
int3
fidivr
jbe
push
and
push
adc
xchg
call
mov
xor
imul
sahf
aaa
leave
cli
aas
pop
xor
adc
loopne
mov
sub
pop
int
mov
bound
adc
int
cmp
(bad)
push
inc
sahf
inc
outs
jecxz
into
sbb
ds
jg
scas
pop
repz
icebp
cmp
and
(bad)
cmp
sub
or
sbb
ins
mov
popf
dec
dec
xchg
xlat
(bad)
adc
xchg
lods
aas
mov
je
mov
ret
dec
cli
or
jnp
shl
hlt
(bad)
xor
cmp
adc
vpmacssdd
fistp
xchg
inc
jbe
je
xchg
mov
retf
rcl
hlt
add
push
jle
aad
sub
div
pop
jmp
pop
push
jb
(bad)
mov
jne
popa
jecxz
xor
cmp
add
push
inc
dec
repz
inc
ret
mov
or
outs
add
sti
xor
aad
fiadd
arpl
rol
mov
sti
mov
xchg
pop
(bad)
mov
push
push
mov
repz
mov
pop
in
scas
xchg
push
or
adc
ins
inc
mov
mov
or
data16
(bad)
cld
mov
push
mov
sbb
rcr
inc
ret
addr16
cmp
add
or
and
inc
(bad)
mov
imul
and
pop
(bad)
not
mov
xchg
mov
jb
pop
test
retf
cmp
dec
mov
das
movs
fsub
sti
push
cmps
bt
sbb
in
arpl
je
popa
in
ss
add
je
out
push
ss
loope
push
ds
and
jle
mov
mov
add
aad
ds
retf
lea
in
cli
dec
test
fild
fucomi
sub
arpl
mov
adc
mov
out
and
and
jmp
mov
jae
inc
aaa
sub
cmp
dec
ds
out
push
lods
jae
je
movaps
inc
pusha
jmp
and
adc
fst
pop
sahf
cwde
sahf
cmc
push
and
sbb
in
arpl
pusha
jnp
aad
popa
cmp
xor
dec
icebp
sbb
in
and
xchg
retf
mov
push
mov
out
lea
xor
cmp
mov
inc
push
mov
and
sub
out
jb
mov
inc
(bad)
test
or
rcl
jb
sub
in
sbb
mov
inc
mov
inc
fnstsw
mov
mov
(bad)
js
xor
mov
loop
jecxz
adc
int
(bad)
cli
popf
(bad)
cmp
adc
dec
pop
inc
jg
clc
dec
(bad)
pop
mov
adc
test
add
jmp
in
sbb
push
jae
or
fcom
fcmovu
xor
pop
jle
aad
leave
mov
arpl
cwde
and
mov
loope
imul
jo
xor
fs
loop
dec
aam
mov
jae
mov
xor
cmp
push
popf
jne
out
cmp
sbb
hlt
data16
ror
sbb
into
sbb
adc
loop
clc
lock
cmps
sbb
push
mov
iret
pop
test
pop
clc
icebp
or
lahf
movs
in
xchg
push
dec
test
pop
or
test
push
pop
mov
rol
inc
jnp
xchg
test
inc
out
push
mov
and
mov
icebp
xor
test
sub
loope
or
icebp
lods
mov
fidivr
stos
enter
jo
in
mov
mov
ret
jno
mov
scas
sub
cmp
enter
push
ret
xor
pusha
dec
jae
mov
lahf
adc
jmp
xchg
cli
jnp
inc
mov
cmc
xlat
fdiv
call
lods
xor
cmp
cmps
repz
out
add
ins
adc
out
gs
imul
test
push
or
push
stc
pop
(bad)
sar
jp
frstor
xchg
push
mov
aas
imul
ins
or
cmps
jo
jno
jmp
movs
call
call
mov
mov
fcom
and
ja
and
ret
pushf
push
fiadd
sbb
test
dec
es
cdq
fs
loop
mov
retf
pop
and
das
xrelease
in
mov
fs
mov
hlt
(bad)
fwait
sbb
jo
dec
sub
jns
ins
mov
iret
jmp
xchg
pushf
sti
js
mov
mov
shr
mov
hlt
mov
mov
pop
and
jb
and
or
(bad)
rcl
mov
in
nop
push
loopne
sub
shl
xor
cli
(bad)
jbe
or
add
pop
sbb
call
mov
fisub
or
(bad)
xor
inc
push
imul
mov
mov
xchg
nop
fs
lahf
test
sbb
adc
cwde
movs
and
loope
aad
adc
mov
imul
sbb
add
cmp
add
and
dec
es
mov
add
sbb
sahf
inc
js
(bad)
loope
jg
adc
mov
mov
and
ret
sahf
in
dec
mov
loopne
mov
cdq
push
fwait
in
fs
mov
pop
sbb
cmp
cmp
sub
movs
sbb
rcl
sbb
mov
ret
fmul
imul
scas
adc
shr
daa
cmp
push
mov
pop
xor
rol
mov
aad
in
rol
call
repz
lock
inc
dec
fisttp
ds
pop
xchg
mov
cs
fs
xor
jp
jl
mov
rol
sub
push
mov
inc
cdq
test
and
jb
mov
vcvtps2pd
pop
shl
loope
jmp
(bad)
adc
pusha
shr
pop
xchg
mov
loop
adc
fcomp
scas
or
mov
pop
iret
int
(bad)
out
(bad)
xchg
mov
xchg
or
jle
xchg
fld
push
and
outs
ret
adc
les
das
rol
cmc
pushf
repz
cmp
sub
inc
jp
sbb
ror
lods
jge
xor
dec
dec
and
jns
mov
sbb
inc
pop
ins
int3
or
ds
push
jnp
cmp
mov
xchg
dec
sbb
xchg
repz
cmp
out
push
clc
fld
or
cld
clc
push
ins
jg
pop
xor
(bad)
rdpmc
fmul
dec
jno
mov
mov
mov
sti
mov
(bad)
xchg
sub
dec
leave
and
lds
dec
pop
fimul
xchg
dec
pop
cmp
fidivr
mov
cdq
fnstenv
int
pushf
rcr
sbb
cmp
mov
jo
push
jmp
repnz
add
pop
and
ins
sbb
pop
and
test
sbb
push
pusha
je
cmp
fcmovnu
jbe
add
mov
lahf
call
pop
std
pop
sbb
mov
sti
push
out
pusha
out
inc
movs
mov
(bad)
push
in
inc
fmul
mov
xchg
mov
inc
sub
enter
scas
ficomp
adc
(bad)
std
enter
and
and
pop
mov
mov
adc
push
test
and
jmp
scas
mov
sub
sti
hlt
or
inc
adc
mov
mov
pop
dec
adc
dec
add
dec
pop
test
push
add
(bad)
add
adc
mov
pop
jecxz
xor
adc
and
mov
ss
(bad)
xchg
push
cmp
(bad)
je
mov
shr
xlat
mov
xor
lea
xchg
inc
dec
sub
(bad)
push
pop
cmp
outs
lods
leave
mov
inc
outs
hlt
push
sar
daa
inc
dec
je
test
mov
in
in
mov
fild
adc
ins
jecxz
fsub
lahf
dec
adc
imul
adc
sbb
(bad)
mov
xchg
sub
adc
call
sub
inc
lods
out
movs
sbb
sub
jl
(bad)
lahf
dec
call
mov
lock
and
outs
cmp
cld
mov
push
mov
mov
push
retf
call
xor
shr
dec
fiadd
pop
lahf
xor
dec
scas
and
fwait
iret
lds
rcl
mov
and
jno
iret
mov
fsubr
outs
sbb
dec
aam
push
mov
cmp
rcr
mov
ds
popf
ins
ins
pop
loopne
outs
and
lock
push
xchg
fnstsw
sub
and
push
aaa
mov
mov
ret
mov
cmp
ds
jbe
std
pop
das
push
xor
push
xchg
jbe
gs
or
popf
test
sub
cmp
inc
xchg
test
loop
dec
sbb
cmp
retf
jns
aas
push
sub
mov
mov
stc
int3
(bad)
int3
mov
jbe
mov
push
lahf
xchg
jg
jge
fst
xchg
stos
push
mov
xchg
jmp
shl
ins
in
sbb
push
sub
push
clc
push
test
stos
hlt
(bad)
adc
out
push
dec
sbb
add
xchg
out
pop
int
sbb
and
ss
mov
repz
adc
add
jne
fistp
sub
leave
sbb
sbb
cmp
cmp
sub
inc
cwde
pop
jmp
(bad)
popf
xchg
icebp
popa
call
hlt
sahf
ins
xor
pusha
pop
(bad)
cld
fsubr
dec
scas
out
inc
pusha
sub
and
fs
repnz
adc
mov
xchg
test
xor
inc
sbb
xor
rsqrtps
cmp
cs
dec
jae
jno
fdiv
pusha
push
adc
outs
dec
cmps
shl
sbb
add
cwde
nop
div
dec
jne
(bad)
mov
cs
pusha
push
mov
inc
xor
mov
mov
fist
dec
mov
outs
js
cmpps
adc
gs
adc
shr
jne
mov
push
sub
push
dec
push
fwait
or
add
rol
dec
fidiv
xor
jp
xchg
(bad)
pop
in
or
bound
mov
push
bound
sub
ins
pushf
mov
fs
pushf
adc
adc
ret
dec
and
push
sub
retf
pop
mov
call
loop
inc
inc
cdq
ins
aad
imul
mov
push
call
sub
add
repz
dec
outs
sub
ins
mov
cmp
lods
sbb
push
jmp
adc
and
inc
call
jp
push
ficomp
neg
sub
and
push
fistp
iret
fs
js
fnstenv
cmp
cmp
call
xor
pop
add
outs
xchg
xor
scas
xchg
cmp
mov
cwde
mov
or
sub
and
stos
cmp
cwde
(bad)
dec
cmps
lods
xchg
dec
add
shld
mov
arpl
cmps
fdiv
stc
sbb
push
mov
out
cmp
inc
cmp
cmp
xor
pop
shl
mov
sub
and
fiadd
shr
mov
adc
adc
push
aaa
add
scas
mov
push
fs
movs
clc
mov
test
stos
adc
inc
push
ja
mov
sahf
push
ins
or
rcl
xor
cmc
add
(bad)
dec
jne
jns
fwait
outs
add
mov
jbe
mov
mov
(bad)
shl
addr16
jo
div
mov
push
mov
sub
enter
or
add
sahf
push
mov
into
mov
xor
sbb
js
mov
(bad)
in
iret
les
and
and
popa
pop
into
jnp
mov
push
into
dec
mov
pop
mov
pop
sbb
cwde
test
jo
mov
ins
cdq
out
and
mov
jmp
out
mov
mov
dec
mov
adc
aaa
ins
mov
mov
and
(bad)
xor
mov
xor
call
push
xchg
jne
add
jecxz
aad
adc
rdtsc
adc
sti
dec
inc
retf
jbe
test
cmp
or
push
mov
loope
inc
mov
jmp
movs
mov
cmc
(bad)
dec
retf
enter
cld
cmp
pop
icebp
dec
xchg
ret
nop
jno
or
add
cdq
ss
ins
movs
xchg
test
in
ror
movs
stc
or
outs
loope
fisub
fcmovnu
int3
mov
shr
imul
sbb
test
pop
push
sahf
inc
(bad)
adc
mov
push
in
cmps
in
ret
inc
dec
xchg
mov
retf
push
push
push
mov
adc
mov
push
push
rol
ins
in
pusha
add
push
xchg
dec
ror
jp
push
push
pop
lods
and
sub
xor
ss
push
hlt
jae
mov
mov
into
shl
scas
lods
inc
cwde
jecxz
push
adc
sub
xor
mul
enter
cmp
push
jmp
(bad)
cmp
jp
add
mov
(bad)
pop
jl
inc
call
xor
mov
ret
(bad)
adc
push
ja
sub
(bad)
and
mov
mov
add
lock
cmp
sbb
sbb
jg
int
push
push
mov
jecxz
mov
xchg
jp
or
jmp
jno
(bad)
dec
out
sahf
retf
push
or
xlat
add
mov
rcl
cwde
push
jecxz
loope
sub
out
dec
push
test
add
pushf
hlt
add
adc
mov
outs
mov
jg
out
es
cmc
cmc
popa
dec
or
jmp
aad
popf
fdivr
(bad)
int3
loop
pop
scas
data16
add
aas
(bad)
xor
jo
cwde
enter
sub
sti
sub
mov
pusha
ss
xor
imul
sbb
adc
pushf
out
mov
mov
push
aad
stos
das
stc
lds
out
ss
dec
in
cld
xor
scas
jl
mov
es
jnp
or
(bad)
xchg
sbb
call
pop
dec
ficom
pop
mov
or
pop
movs
xor
and
pop
lods
jae
es
mov
loope
inc
pusha
repz
scas
jle
cmp
push
bound
pop
dec
xor
mov
inc
in
sub
dec
jle
nop
push
sub
sahf
retf
mov
movs
pop
jle
test
inc
inc
mov
sub
mov
inc
retf
or
cmp
push
inc
adc
lods
imul
mov
and
std
into
rcl
loope
jno
fmul
pop
sahf
in
sbb
cmps
jmp
js
pop
es
inc
std
mov
push
(bad)
and
pop
out
(bad)
push
clc
scas
or
inc
push
mov
mov
add
push
rcl
xlat
cmp
jecxz
out
test
or
(bad)
or
jae
cmp
adc
retf
push
mov
addr16
vpmulhw
mov
xchg
mov
es
ret
mov
mov
cli
cwde
retf
cmp
dec
jae
xor
sti
dec
pop
fs
pop
out
popf
xor
and
mov
and
jmp
mov
mov
sbb
cmps
push
hlt
and
movs
or
std
(bad)
in
pop
add
mov
ins
mov
stc
movs
fsubp
mov
popf
sub
(bad)
call
fistp
das
icebp
push
jno
mov
cli
or
cmps
pop
mov
or
push
mov
es
js
clc
ins
xor
and
ds
mov
sub
push
and
cmp
scas
pop
xchg
jg
pushf
and
mov
push
jmp
mov
push
in
adc
cs
aas
adc
xchg
mov
mov
sub
mov
js
scas
imul
pop
je
call
shl
outs
and
or
push
stos
paddw
shr
jp
inc
xchg
xchg
inc
sub
shl
xchg
cld
xor
xchg
and
jno
xchg
mov
scas
xor
scas
mov
popf
outs
es
out
sub
pop
loop
repnz
repnz
shld
in
mov
xor
int3
in
jl
xchg
(bad)
fistp
std
pop
ds
(bad)
cdq
push
sbb
jae
jb
push
ja
ds
stc
sbb
xchg
sub
jmp
jbe
bound
(bad)
mov
add
out
xchg
aas
fild
mov
sbb
fld
add
xor
pop
jno
cmp
pop
retf
adc
sbb
cmp
aas
ficomp
out
(bad)
int3
lea
add
cmp
inc
cmp
clc
test
inc
and
mov
stc
push
enter
adc
repz
add
(bad)
fsubr
rcr
sbb
shl
imul
(bad)
call
add
lods
aam
ret
push
mov
lock
daa
dec
mov
jbe
inc
mov
or
mov
xor
dec
pop
or
mov
lea
pushf
push
cmp
mov
test
cmps
xchg
cmp
test
or
push
les
loope
aam
or
lea
movs
lock
jae
imul
outs
(bad)
cmp
xchg
fistp
xor
loope
xchg
(bad)
cmp
enter
imul
js
pop
loop
sahf
push
cbw
dec
mov
or
jmp
jmp
inc
xchg
adc
(bad)
outs
out
div
(bad)
loope
jmp
xor
ins
in
and
(bad)
popa
gs
in
inc
sbb
and
pop
dec
ret
dec
or
or
jae
stos
sbb
arpl
or
out
mov
(bad)
retf
jae
jb
repz
lock
inc
addr16
shl
pop
sbb
mov
cwde
jg
dec
mov
ret
je
stc
mov
pop
out
xor
or
sbb
cmps
jno
je
xchg
fiadd
scas
add
jl
pop
js
mov
mov
movs
push
int
(bad)
jne
dec
fild
jno
cmp
out
out
add
es
ins
mov
fsubr
push
lods
int
nop
stos
mov
cli
mov
xchg
js
mov
(bad)
(bad)
cmp
popa
and
cmp
test
stos
ins
push
jle
push
lods
cmp
add
movs
xlat
jnp
(bad)
lds
in
(bad)
idiv
xor
jns
dec
and
ror
mov
lea
xchg
lods
je
in
or
test
mov
push
fcomp
test
bound
pop
xor
mov
push
aad
js
iret
adc
cmp
inc
inc
push
sub
pop
push
jp
cld
sti
dec
jl
mov
mov
inc
pop
in
sbb
std
imul
ins
sbb
mov
jno
jo
xor
jnp
dec
pop
push
xor
push
je
mov
in
les
adc
jae
or
scas
mov
and
call
js
pop
std
adc
loope
xor
aad
pusha
rol
lock
and
dec
sbb
sbb
pop
icebp
aas
std
jne
dec
xchg
mov
mov
daa
call
cmp
(bad)
xor
jb
adc
inc
test
mov
add
hlt
mov
movs
in
loope
mov
jge
(bad)
sub
pop
xchg
inc
clc
mov
nop
and
in
popa
push
movs
mov
loopne
aas
mov
add
cmp
cmps
push
fbld
inc
aam
dec
xchg
sti
movs
mov
cwde
xor
ss
imul
push
stos
pop
popf
mov
xor
and
mov
xor
dec
pop
not
adc
repz
xchg
mov
repz
setle
adc
xchg
jmp
ins
imul
aaa
pop
in
lods
and
bound
lea
xor
ror
out
icebp
cmps
jne
pusha
test
scas
int
or
adc
idiv
sbb
jo
mov
jns
pop
and
call
and
push
jecxz
sub
push
cmp
sub
(bad)
hlt
pop
out
in
mov
sub
dec
jne
push
xchg
xor
xchg
mov
adc
mov
retf
shl
xchg
cld
test
clc
push
fcomp
push
(bad)
addr16
repnz
fnstcw
push
xchg
add
and
or
out
xor
jmp
push
xchg
js
addr16
mov
adc
lds
add
add
fs
test
test
xchg
inc
push
xlat
pop
and
es
jae
mov
sar
sub
lods
lahf
iret
mov
rol
jg
sub
xchg
and
movs
jmp
mov
push
lods
push
sbb
pop
mov
ret
push
mov
cmp
mov
add
mov
dec
inc
pop
mov
and
cmp
pop
inc
sbb
sbb
enter
or
dec
sbb
ds
mov
cld
repz
jmp
or
imul
shr
xlat
rol
add
ret
retf
pop
jae
into
push
jg
jae
sub
pop
fidiv
xchg
pop
ss
lds
lahf
aad
mov
and
inc
lods
sub
push
dec
pop
adc
sub
push
aad
mov
inc
call
xor
push
or
and
jnp
mov
js
or
and
cmp
ss
fsubrp
add
inc
(bad)
jb
fstp
icebp
fnstcw
stos
aam
sub
add
or
sbb
lods
in
in
cmp
aas
cs
add
mov
jmp
mov
arpl
xchg
inc
jecxz
mov
(bad)
out
pop
inc
retf
mov
fst
cmp
push
movs
dec
inc
dec
(bad)
fwait
mov
mov
loope
rol
inc
rol
mov
int
or
js
(bad)
fwait
movs
mov
xor
ds
ins
aas
and
xchg
pop
inc
dec
mov
xchg
jecxz
jmp
xchg
ja
pop
mov
retf
mov
das
les
cmp
leave
les
or
sbb
and
pop
inc
je
ret
scas
in
dec
aas
cmps
mov
imul
jmp
dec
mov
sbb
jne
jle
jle
cli
and
pop
lds
inc
call
xor
int3
ficomp
jmp
ds
sbb
loop
push
out
sbb
fmul
add
xor
into
movs
and
xor
mov
jle
int
dec
inc
push
sar
mov
sar
jmp
inc
mov
icebp
cwde
sub
ror
mov
or
mov
or
or
inc
(bad)
mov
mov
xor
sbb
std
xchg
call
ja
xchg
or
dec
xlat
push
call
add
in
retf
push
cmp
dec
jne
dec
lods
movs
pop
cwde
rcr
and
xchg
movs
jge
mov
dec
push
mov
sbb
shr
xchg
in
fs
inc
test
dec
add
push
clc
and
sahf
inc
sub
inc
mov
jnp
lods
int3
jg
scas
xchg
sub
pop
lgs
pop
adc
cmp
sbb
mov
push
push
cs
add
lds
and
jnp
push
lea
mov
stos
and
movs
dec
or
aas
push
shr
jg
(bad)
jge
test
shl
sbb
test
std
xchg
pushf
mov
outs
cmp
shl
into
loope
lds
jle
adc
pop
xor
gs
outs
inc
cmp
xor
ss
icebp
outs
leave
sar
(bad)
adc
inc
out
and
int
rcr
mov
and
(bad)
mov
or
rcr
add
sbb
pop
add
mov
mov
sub
stc
push
jmp
imul
sbb
sbb
cmp
add
popa
mov
xchg
mov
add
neg
imul
push
scas
jmp
cmp
shl
mov
iret
test
out
aas
imul
mov
out
les
ja
dec
or
jecxz
sub
retf
scas
or
cli
mov
arpl
sub
push
test
push
push
push
mov
pusha
je
cwde
dec
jb
pop
lods
mov
outs
clc
jle
xchg
bnd
mov
lahf
in
inc
mov
or
or
or
(bad)
push
addr16
push
pop
(bad)
out
lock
out
dec
mov
jp
out
add
jmp
add
jl
push
das
inc
inc
(bad)
(bad)
sbb
imul
in
jp
in
push
cmp
dec
xchg
out
xchg
gs
rcl
pop
out
inc
lock
add
test
jmp
(bad)
cmp
push
xchg
xchg
(bad)
cmp
call
std
mov
jmp
shl
cmps
ins
rcr
in
or
(bad)
mov
scas
rcr
and
out
sub
outs
jl
sti
ds
sti
ins
retf
cmp
sub
jl
fdivr
cs
or
test
scas
pop
add
adc
add
jbe
(bad)
fwait
mov
dec
and
and
adc
add
cwde
sbb
or
add
push
movq
mov
xor
and
inc
sub
mov
and
mov
in
push
cwde
mov
out
sbb
adc
das
adc
ins
sub
mov
push
outs
xor
sub
in
cmc
sbb
and
outs
xchg
jns
mov
adc
pop
pop
mov
lods
int3
mov
ins
(bad)
xor
shl
(bad)
cmc
or
xchg
dec
stos
pop
or
adc
cmp
jbe
rcl
jmp
ss
popf
inc
push
dec
dec
inc
jo
cmp
frstor
lods
jecxz
push
(bad)
adc
xor
cdq
inc
ret
mov
gs
dec
fcom
dec
jle
cs
mov
fwait
xchg
fdiv
sub
arpl
or
adc
xchg
xor
ja
mov
mov
jmp
(bad)
mov
test
(bad)
inc
(bad)
leave
or
in
test
cld
jb
or
mov
cmp
mov
retf
jle
hlt
mov
mov
sub
push
sub
movs
xchg
add
push
in
xchg
and
jns
push
jne
jne
and
aam
pushf
cmp
mov
fadd
sti
add
jle
lods
loope
xchg
mov
xor
push
mov
scas
cld
stos
iret
bound
mov
and
addr16
push
repz
jns
or
stos
pusha
(bad)
push
daa
add
jl
xchg
lods
ret
xchg
xor
dec
mov
jno
sub
cli
xlat
test
or
repz
xor
mov
loope
xchg
fcom
inc
xor
outs
ror
sub
sar
aaa
inc
repz
jbe
add
add
out
push
mov
jb
inc
lahf
outs
arpl
out
sub
lahf
outs
loopne
ja
pop
mov
jg
push
fmul
inc
sahf
std
push
mov
adc
mov
call
push
shr
daa
movs
in
jmp
icebp
mov
push
movs
lock
or
dec
sahf
movs
push
test
das
stos
and
sbb
aaa
or
or
jne
mov
aad
adc
fld
sbb
test
movs
bound
jecxz
dec
cdq
inc
mov
pop
adc
lock
loop
iret
pop
fisttp
cmp
scas
dec
(bad)
in
in
push
(bad)
inc
enter
add
jl
ret
adc
enter
cmc
push
sbb
in
and
cmp
aam
mov
xchg
push
cwde
xchg
cmp
inc
les
dec
fcmove
fidiv
pushf
sbb
sbb
retf
dec
dec
and
ficomp
pop
mov
(bad)
or
add
jo
mov
xor
add
sbb
sar
out
add
(bad)
test
sub
shr
xchg
xchg
rol
mov
fist
pop
mov
inc
mov
or
mov
push
outs
push
push
inc
xchg
sbb
sub
retf
sub
dec
movs
mov
push
xor
push
leave
adc
dec
xor
cmp
cmp
cmp
and
sbb
ja
xchg
std
loopne
scas
pop
mov
sti
push
mov
jno
sub
test
pop
aad
jbe
cdq
jno
aad
dec
dec
cwde
adc
test
or
xor
sub
inc
sar
dec
and
jae
pop
jns
lahf
gs
btr
mov
aas
(bad)
stos
jb
cmp
imul
inc
mov
jg
pusha
call
mov
or
call
fild
mul
shr
mov
retf
sbb
adc
fmul
mov
sub
or
sbb
cmp
push
(bad)
ja
pop
ins
rcr
or
popa
adc
xchg
mov
sub
or
jno
add
(bad)
in
xchg
repnz
cli
adc
jo
pusha
lahf
gs
fs
mov
mov
cld
mov
call
out
out
out
jp
(bad)
ins
ja
pop
add
scas
or
push
dec
sbb
and
loopne
push
shr
cli
inc
in
repz
imul
xchg
jge
int3
in
add
out
mov
test
dec
inc
pop
nop
mov
or
ret
mov
rcl
cdq
fiadd
xchg
jbe
add
sbb
jmp
dec
cmp
or
scas
jp
movs
jne
mov
push
or
push
fild
fldcw
outs
gs
test
dec
sub
in
retf
cwde
push
mov
movs
push
cmp
call
jns
push
aad
lds
cmp
xlat
nop
jg
mov
outs
mov
mov
mov
fs
mov
inc
and
(bad)
ror
mov
sbb
loopne
popf
push
mov
dec
pushf
jg
retf
push
mov
sbb
test
cmp
ins
retf
sub
(bad)
call
cwde
sar
or
cmp
(bad)
sbb
inc
dec
jg
out
pop
cmps
jb
in
sti
xchg
gs
mov
hlt
icebp
ja
mov
mov
mov
sub
adc
sub
push
lock
cld
and
and
mov
sub
adc
jae
mov
push
scas
cmc
sar
pop
lock
pop
sbb
fnstenv
femms
hlt
push
push
popf
nop
inc
ret
jp
enter
push
jp
mov
sbb
addr16
out
adc
dec
outs
jp
fst
adc
sbb
adc
jne
sub
adc
jmp
lods
loopne
cmp
mov
jae
adc
pop
js
and
pop
dec
dec
inc
inc
jmp
stos
scas
sbb
cmps
and
jnp
iret
jl
add
push
dec
imul
or
call
fs
ins
rcl
jle
mov
test
pop
add
aam
mov
xchg
in
scas
or
aad
mov
mov
fistp
int3
mov
and
mov
ins
push
sub
or
xchg
pop
call
and
mov
dec
inc
and
cmp
jle
dec
test
div
das
ds
xor
sub
in
into
dec
pop
repz
in
sbb
fcom
sbb
xchg
movs
mov
fwait
stos
or
pop
fnsave
sbb
les
test
xlat
mov
mov
push
dec
cmps
mov
mov
test
test
jecxz
aaa
pop
xchg
dec
aam
dec
inc
xchg
pop
(bad)
enter
cmps
int3
xor
add
imul
mov
shl
idiv
xchg
mov
rcr
inc
adc
dec
pop
test
or
xchg
(bad)
out
push
or
out
je
(bad)
dec
inc
cs
sti
mov
cmp
rcl
gs
and
sbb
jmp
(bad)
neg
push
cmp
pcmpeqd
aas
cs
sbb
arpl
pop
in
pop
or
mov
sti
dec
cli
cwde
jns
repnz
stos
psllq
cmp
mov
xchg
mov
movs
dec
nop
popf
sti
paddd
dec
stos
push
fisubr
mov
jb
and
push
inc
cmps
jmp
mov
(bad)
pop
fcomi
shr
out
aas
sahf
dec
pop
popf
fmul
movs
(bad)
push
leave
stc
push
mov
hlt
rcr
pop
pop
sbb
or
mov
aas
rcl
and
adc
push
pop
push
sahf
sbb
ins
sub
cmp
or
popa
jnp
push
iret
aas
jb
pop
jne
sub
push
push
ja
jns
int3
mov
pop
(bad)
jmp
rcl
mov
not
js
jp
scas
(bad)
cmps
aad
jns
jmp
cmp
inc
sahf
jle
push
xor
mov
xchg
jnp
push
hlt
cmp
or
mov
cmp
sbb
push
pop
cmps
and
xchg
mov
fiadd
imul
lods
gs
enter
rol
out
pop
and
das
pop
dec
mov
mov
call
or
(bad)
fmul
je
and
daa
adc
sahf
loop
inc
leave
sub
ffreep
pop
test
fst
xor
mov
adc
pusha
jmp
sub
mov
pop
pop
cmc
push
rcl
lahf
mov
fstp
xlat
in
pop
ja
and
in
fistp
(bad)
lods
adc
push
push
loope
call
cmps
push
sub
mov
jle
nop
aad
call
aas
jecxz
stos
cdq
pop
fdiv
fidivr
(bad)
or
ds
cmp
lods
push
mov
adc
jge
call
push
outs
xor
hlt
sti
sbb
push
pop
rcl
nop
lods
xor
jb
add
sub
and
sub
rol
mov
xchg
mov
pop
ficom
out
xchg
jle
imul
adc
lahf
cmp
test
dec
aaa
jbe
das
pop
ins
cmp
scas
stc
xor
inc
mov
loop
xchg
pop
inc
je
lds
jp
jae
sub
(bad)
jne
inc
inc
out
sbb
mov
(bad)
shr
add
test
mov
sbb
jo
stc
ss
and
jns
jae
pop
sbb
or
add
fincstp
xor
sub
cwde
enter
sub
pop
int3
pushf
mov
cmps
js
xchg
sbb
sbb
movs
fsubr
sub
adc
mov
es
sar
scas
jmp
iret
cmc
sti
or
sbb
in
std
adc
mov
fcmovb
aad
stos
add
loope
icebp
dec
popa
and
xchg
push
pop
inc
dec
cmp
push
pop
sbb
outs
cmps
sub
or
xor
in
cmp
in
push
cs
pop
mov
sub
adc
mov
call
pushf
inc
cmc
fsincos
not
(bad)
in
repz
push
test
push
mov
adc
and
jne
xor
jbe
lahf
stos
push
cld
push
dec
les
pop
pop
jge
dec
pop
ficom
sub
mov
sahf
dec
fldenv
daa
adc
pop
loope
mov
daa
or
sub
sbb
mov
popf
(bad)
arpl
lods
imul
mov
xor
mov
mov
mov
or
adc
xchg
mov
lock
or
sbb
mov
movups
je
in
movs
repnz
sbb
aas
add
pop
loopne
xor
mov
pop
test
ret
ret
and
repz
sbb
adc
test
sub
iret
or
xchg
xchg
jb
daa
adc
(bad)
xchg
mov
fiadd
bound
in
cmps
fisttp
jbe
sub
repnz
das
and
jle
add
out
fwait
pop
push
stc
mov
popf
xor
sub
pop
out
xchg
iret
test
or
pop
xlat
mov
fnsave
fidivr
mov
js
or
adc
clc
movs
mov
inc
push
jne
inc
pop
(bad)
aas
test
shl
xor
mov
rcr
shl
cmp
push
call
addr16
dec
mov
xchg
pop
and
sub
in
mov
loop
sbb
xchg
mov
xchg
(bad)
imul
push
es
adc
dec
sahf
jp
mov
xchg
dec
cmp
push
lahf
shl
fild
inc
in
mov
in
clc
mov
pop
or
xchg
pop
fbld
add
clc
test
xor
cmc
or
push
mov
(bad)
push
stos
fsubr
pop
jecxz
jp
cmp
jge
push
or
or
and
jmp
sar
call
mov
push
imul
ror
push
(bad)
cmc
mov
xchg
pop
jns
adc
in
mov
sti
lds
mov
lahf
pop
ret
sub
(bad)
push
adc
(bad)
jmp
retf
mov
pop
and
out
ja
(bad)
cmp
sar
rcr
mov
xor
pop
inc
dec
adc
fwait
xlat
jle
ret
ret
cmp
push
das
xchg
pop
inc
cmp
movs
sti
data16
mov
xchg
(bad)
out
test
cli
push
in
cmp
mov
mov
push
cmps
outs
inc
ds
fucomp
cmp
dec
retf
out
nop
data16
(bad)
dec
sahf
jb
and
popa
sbb
iret
cmp
mov
pusha
mov
sbb
lahf
daa
mov
or
aas
mov
call
mov
inc
jmp
sub
xchg
lods
push
push
ret
stos
push
cmp
or
mov
and
pop
cmp
mov
mov
inc
sbb
push
mov
cmp
xor
or
aaa
push
pop
dec
mov
js
dec
imul
mov
jge
loop
and
jnp
xor
movs
repz
adc
or
adc
sbb
or
or
and
mov
or
fsubr
pop
pop
jmp
retf
mov
xchg
dec
and
icebp
shl
mov
div
sbb
jecxz
sub
outs
and
mul
in
adc
(bad)
dec
mov
cdq
stos
mov
shl
(bad)
pop
xchg
retf
movs
int
hlt
ss
cmps
out
jbe
test
test
jmp
pop
rcl
pop
push
cmp
mov
fdiv
and
adc
pushf
outs
les
cmps
aaa
in
jae
jmp
pusha
ins
aam
push
dec
arpl
xchg
shl
xchg
pop
inc
mov
pusha
dec
(bad)
enter
mov
pop
cmp
and
js
les
and
xchg
adc
mov
loope
adc
xchg
add
pop
adc
mov
retf
and
xor
push
mov
and
fldcw
and
nop
pop
inc
or
lock
idiv
and
shl
push
cmps
sbb
mov
adc
xor
mov
in
xlat
jp
fwait
dec
and
fwait
ss
leave
mov
repz
movs
stc
comiss
cmp
push
mov
fnstcw
adc
aas
jmp
stos
leave
sub
xchg
xchg
xor
imul
jno
dec
and
fcom
cmp
shr
sbb
pop
pop
mov
cmp
pop
sub
loop
cwde
out
fs
(bad)
stc
movs
xchg
pop
fsubr
push
mov
and
ss
lods
lea
pop
and
adc
xor
or
pushf
test
sub
push
sub
test
adc
xchg
lods
xchg
jbe
enter
or
inc
sbb
and
jae
bound
in
sti
dec
gs
rol
arpl
daa
sub
cmp
test
imul
pop
shl
ret
rcr
pop
pop
jle
jp
cmps
sahf
scas
inc
daa
cmp
jmp
add
int
mov
fs
xor
fcomp
dec
aad
loope
cmp
stos
fadd
ficom
add
ret
aad
lods
xor
out
test
inc
stos
je
add
lds
push
mov
les
lods
popf
xlat
pop
mov
fstp
push
repnz
adc
mov
cmp
add
aas
aas
leave
aaa
ret
sahf
cdq
or
sbb
leave
or
clc
inc
push
cmps
cwde
xor
cmps
push
addr16
inc
aaa
out
in
in
pop
movs
loop
pop
(bad)
xchg
(bad)
mov
push
dec
push
dec
inc
adc
jmp
mov
lock
cdq
in
pop
nop
pop
sbb
aad
sbb
inc
mov
ror
mov
sub
dec
arpl
fidivr
jbe
lods
xchg
add
aad
jmp
push
ins
pop
test
or
imul
shld
and
mov
shld
lods
jae
xchg
jns
and
in
lahf
(bad)
lods
push
cld
loopne
xchg
js
js
add
and
pop
icebp
push
mov
inc
pop
data16
loope
adc
not
cmp
gs
cmp
pop
sub
das
xlat
in
stos
out
xchg
fstp
xor
xor
pop
aad
lods
adc
inc
inc
mov
mov
adc
or
pop
push
inc
mov
gs
stc
test
xor
out
sahf
movs
mov
jmp
stc
mov
ror
inc
fsubr
push
pop
pop
stc
adc
repnz
and
lods
mov
gs
enter
jb
push
cmp
mov
or
cwde
in
sub
mov
jp
fisttp
ins
push
retf
dec
lods
(bad)
cmp
mov
pop
iret
mov
movs
add
icebp
adc
cs
and
les
cli
dec
push
cmp
mov
cdq
push
jg
lock
pop
xor
nop
sbb
sub
mov
js
repnz
dec
jg
cmp
ja
xchg
xchg
sbb
inc
retf
call
mov
ins
cwde
push
neg
aaa
hlt
daa
jbe
icebp
mov
data16
nop
inc
sar
adc
sahf
icebp
pause
loop
cmp
mov
mov
fimul
or
cmp
adc
fnstsw
sbb
fs
scas
jmp
fsubr
inc
sub
stos
sub
sub
push
push
popf
stos
and
lods
xchg
das
loope
cmc
inc
addr16
test
add
sbb
cmp
xor
inc
jno
sar
mov
jb
repnz
imul
fwait
mov
aam
xor
(bad)
fsub
test
lahf
or
mov
jl
cld
popf
inc
push
(bad)
jp
inc
xor
je
sbb
xchg
rep
fs
stos
test
daa
test
addr16
xor
mov
pushf
adc
repnz
enter
js
mov
xchg
scas
mov
sub
inc
jg
popf
shl
xchg
pop
xchg
and
xor
stos
aas
call
loop
and
int
pop
adc
aaa
jns
mov
adc
ror
scas
add
fild
stos
cmp
or
cwde
or
dec
inc
pushf
lds
fwait
sar
repnz
test
bound
into
xor
add
cmp
mov
pop
push
call
fs
adc
icebp
in
or
dec
and
mov
leave
js
popa
push
mov
ret
mov
pusha
xchg
les
(bad)
mov
xchg
xchg
jo
pop
cwde
call
test
mov
inc
fcom
sub
pop
cmp
sbb
pop
in
or
jl
jge
pop
adc
sub
or
jmp
scas
mov
icebp
cwde
fcomp
dec
cmp
jmp
sub
lea
iret
fwait
dec
or
pop
int
leave
cmps
add
dec
scas
dec
xor
out
les
gs
rcr
dec
nop
cld
in
xor
push
or
cwde
rol
inc
push
mov
cs
inc
pop
imul
ret
sbb
(bad)
pop
popa
mov
sub
pop
mov
mov
cmp
cmp
not
jecxz
neg
push
dec
mov
lods
dec
movs
cli
xor
add
inc
pop
jg
popa
jbe
cmps
mov
out
push
scas
lock
push
test
std
cmps
cli
xor
popa
daa
cmp
mov
les
cli
xor
call
dec
sbb
(bad)
shl
or
inc
sbb
adc
fadd
ins
iret
repnz
cwde
or
xor
cwde
cmp
imul
in
mov
dec
stos
aas
dec
xchg
in
inc
pop
call
pop
cmp
jnp
fwait
xor
aad
cmp
aas
ret
mov
(bad)
mov
outs
hlt
xchg
jb
or
jns
adc
(bad)
jge
jl
rol
pop
movs
push
sbb
and
pop
ret
adc
fdiv
xchg
lea
dec
dec
xor
daa
inc
cmc
jg
push
arpl
xchg
(bad)
xlat
cmovbe
shl
and
inc
pop
inc
adc
xchg
mov
in
in
jae
jae
xor
pop
stos
jnp
iret
jne
imul
in
daa
scas
outs
push
cmp
nop
mov
xchg
cld
xchg
fcmovu
loop
out
cld
jo
daa
lods
jl
nop
sub
retf
loopne
or
std
add
js
arpl
jge
xor
(bad)
pop
(bad)
mov
add
inc
lock
dec
fsubr
loope
xchg
jl
sub
enter
(bad)
inc
xchg
xchg
sets
clc
adc
cmps
aad
adc
sbb
mov
addr16
cmp
cdq
mov
pop
sar
xchg
cdq
movs
cmp
jnp
lods
cmc
shr
push
shr
sub
add
test
sbb
jmp
add
mov
sub
(bad)
pop
adc
mov
ins
push
xor
bswap
lea
out
mov
jae
cmp
lods
in
fcom
mov
xor
mov
jo
jge
inc
cmps
xchg
adc
fldenv
push
dec
fld
mov
ja
mov
xchg
sahf
lods
and
fcmovnb
xlat
and
pop
in
fimul
jbe
jno
aas
les
movs
fisttp
call
sub
push
mov
adc
push
jecxz
sbb
push
sqrtps
jns
pop
mov
test
retf
and
mov
mov
lock
inc
lock
in
cmc
jecxz
add
dec
dec
gs
retf
fld
loopne
ss
daa
xor
icebp
jle
loope
iret
and
(bad)
xor
xchg
mov
imul
ffree
(bad)
shl
add
int3
inc
mov
push
scas
lods
int3
cmp
lahf
adc
push
retf
inc
cmp
sbb
scas
icebp
mov
and
push
(bad)
sbb
inc
xor
cli
leave
jg
and
adc
adc
or
adc
rcr
xlat
sahf
cs
in
out
xor
sahf
mov
push
into
jmp
ror
fnsave
daa
hlt
sbb
xchg
das
sub
inc
mov
jns
cmp
jl
out
mov
sub
ins
push
nop
mov
aam
adc
jmp
add
retf
or
pushf
cmp
stc
mov
mov
stos
aad
test
cmp
pop
xor
imul
and
and
add
out
and
mov
movs
xor
inc
rol
mov
int
inc
ror
out
pop
repz
fwait
dec
mov
mov
xchg
pop
(bad)
js
(bad)
sub
fs
mov
into
pop
ja
dec
(bad)
push
cmp
pushf
and
sub
aad
adc
test
push
mov
fadd
dec
mov
in
inc
mov
pop
and
cdq
dec
fld
mov
cmp
cmp
jmp
(bad)
push
sbb
in
mov
push
fld
push
mov
cmp
pop
push
mov
scas
xacquire
jnp
jne
inc
lock
cmp
(bad)
rcl
imul
add
pop
cmp
retf
call
mov
cmc
add
scas
xchg
add
cmp
bound
fist
out
mov
mov
test
sbb
out
cmc
(bad)
jb
and
ret
cmp
xchg
out
xchg
pushf
sub
pop
adc
int
mov
mov
or
lahf
xor
sbb
dec
cmps
mov
test
push
sub
mul
sub
repz
xchg
sub
jp
or
repz
mov
fwait
cld
pop
outs
pop
xchg
cdq
fnstcw
psubsb
je
sbb
lahf
cmps
mov
test
cmp
inc
jae
mov
and
test
mov
popa
imul
mov
test
or
push
sub
or
in
add
sub
test
jl
push
xchg
(bad)
inc
cmp
lea
and
or
cmp
inc
dec
rcr
fprem1
mov
jae
ror
popa
and
outs
cmp
js
call
clc
mov
add
pusha
mov
xor
imul
cmp
jmp
inc
push
fnsave
cs
pop
sbb
clc
retf
mov
dec
jmp
and
mov
and
popa
push
adc
pop
sub
fs
add
fdiv
jb
or
retf
xchg
mov
pop
and
mov
call
clc
push
dec
jmp
jno
in
cld
inc
cmp
aaa
mov
aad
adc
xchg
inc
rol
cmp
sbb
push
setns
jmp
inc
fwait
jecxz
imul
inc
cmp
adc
jno
inc
lods
mov
dec
sti
lahf
retf
fwait
pop
pop
(bad)
fstp
pop
inc
imul
inc
mov
gs
xchg
stos
cmps
(bad)
enter
adc
fsub
(bad)
js
or
movs
loop
pop
mov
sub
add
popf
inc
nop
hlt
sub
mov
arpl
push
pushf
stos
adc
or
pop
je
arpl
leave
fs
pop
inc
enter
(bad)
ins
dec
stc
jnp
sub
dec
mov
push
enter
sub
test
adc
rcl
pop
inc
cli
pop
xchg
out
fsubr
mov
jo
das
inc
dec
dec
mov
retf
cwde
dec
shr
in
retf
iret
sbb
enter
dec
mov
or
les
pop
sahf
xchg
and
pushf
fnstenv
xor
mov
push
ret
inc
pop
add
push
mov
sbb
iret
lock
inc
into
or
mov
pusha
shl
mov
mov
sub
js
(bad)
mov
and
mov
push
pop
push
cmp
dec
out
hlt
jno
jge
pop
pop
and
mov
mov
adc
lds
imul
pushw
inc
pop
dec
jp
push
mov
jns
pop
push
(bad)
or
stos
pop
mov
out
xchg
and
ret
cmps
mov
icebp
fdivr
dec
popa
call
adc
adc
out
cmp
jo
sub
ret
xor
ret
mov
cmp
dec
dec
sub
aad
or
test
adc
push
retf
lea
and
mov
les
cmps
dec
pop
test
jge
and
cmp
cmp
sub
mov
imul
inc
sahf
push
pop
xchg
test
sbb
inc
test
inc
movs
push
imul
push
xchg
into
popa
mov
jecxz
mov
jp
(bad)
jg
in
cdq
repz
xchg
scas
jg
test
mov
(bad)
out
shl
xor
fs
ret
sbb
push
jle
lea
adc
lea
movs
imul
pop
ds
lahf
inc
inc
pop
push
jno
mov
inc
(bad)
pop
scas
dec
inc
ror
sub
push
das
ds
rcr
sar
mov
lods
xor
cmc
sub
cmc
(bad)
hlt
jb
dec
ds
outs
jecxz
imul
sbb
jge
movs
pop
push
mov
fidivr
add
sbb
(bad)
and
cmp
gs
xor
xchg
xchg
push
push
push
push
pop
or
mov
jge
push
adc
ror
pop
das
aad
lahf
das
adc
shr
push
hlt
ja
xchg
inc
mov
bnd
(bad)
pop
xchg
gs
ins
cmp
xchg
sbb
sub
adc
jp
addr16
or
sbb
or
push
fxch
loop
mov
std
rcr
cmp
mov
out
sub
mov
leave
push
mov
and
imul
mov
adc
inc
xchg
out
dec
cmp
(bad)
mov
(bad)
xchg
jne
hlt
dec
pop
adc
and
es
cmp
data16
jle
ja
out
ret
pop
(bad)
adc
cmp
fist
je
jnp
cdq
test
cmpxchg
add
or
pop
mov
loopne
fisub
push
sbb
dec
mov
stos
pop
call
out
push
das
out
mov
lea
(bad)
(bad)
test
fbld
int3
mov
aaa
or
cmp
xor
cwde
sbb
sub
cs
cs
arpl
lods
stc
lock
push
aaa
hlt
loope
xchg
sub
pop
xchg
xor
jle
adc
dec
(bad)
sub
mov
ret
idiv
imul
fstp
fbstp
test
ret
mov
jo
into
sub
mov
pop
xor
cld
popa
xor
xchg
add
neg
test
or
sbb
sub
sti
retf
dec
add
addr16
ja
fwait
in
pushf
icebp
mov
rcr
or
push
out
push
sub
pusha
ins
xor
dec
sub
adc
dec
pop
add
xor
test
sbb
push
inc
push
mov
jbe
jmp
pop
xchg
gs
or
push
daa
in
stos
lahf
inc
icebp
dec
inc
(bad)
call
int
lods
cmp
scas
xchg
sbb
retf
enter
repnz
cmp
fdiv
int
data16
sbb
mul
pop
push
loop
std
dec
dec
inc
cmc
ja
or
lds
fld
dec
jbe
test
ds
sub
and
sbb
inc
leave
adc
xor
jle
jb
mov
aas
lods
inc
(bad)
ja
nop
imul
or
pop
jmp
stc
dec
sub
dec
jne
pop
push
adc
popf
mov
repz
mov
out
mov
and
dec
push
mov
test
adc
mov
mov
cmp
lods
mul
pop
dec
mov
mov
inc
stos
aas
iret
mov
loopne
jb
mov
mov
push
repnz
icebp
jecxz
cld
lahf
jns
retf
pop
jl
mov
ins
fcom
and
shr
fwait
fwait
xor
cmps
xchg
ds
xchg
bound
pop
xor
int
es
int
xchg
sub
sub
movs
fadd
mov
fdivr
stc
xor
push
push
test
inc
imul
xor
out
jmp
je
ret
pop
sbb
jns
xor
and
jle
jo
ss
xchg
ficomp
push
fstp
mov
daa
dec
mov
xchg
pop
enter
arpl
add
jle
das
stos
xlat
mov
lds
clc
cld
jge
mov
shl
sub
call
enterw
sbb
mov
inc
pop
cld
push
imul
(bad)
add
mov
push
outs
push
mov
ja
xchg
or
jmp
and
aam
mov
pop
dec
movs
aad
lock
adc
inc
cmp
dec
fdiv
pop
loope
add
scas
arpl
cmp
cli
lea
(bad)
movs
mov
lods
push
mov
pop
add
jb
xor
push
add
or
stc
xchg
nop
(bad)
fistp
sub
mov
pop
leave
jo
jo
popa
div
add
sbb
vcvtpd2ps
dec
jnp
ud0
lock
mov
inc
ss
ror
and
xor
sbb
cmc
push
(bad)
mov
ja
and
cs
xchg
mov
add
inc
fmul
js
xchg
(bad)
jle
push
xchg
inc
jo
retf
adc
pop
dec
(bad)
iret
inc
jne
add
inc
jnp
cli
pop
fld
xchg
adc
fsub
mov
repz
(bad)
ins
inc
cdq
xor
dec
fs
jl
dec
aam
dec
aam
mov
clc
mov
mov
xor
inc
fs
mov
jge
out
mov
dec
les
fstp
jge
push
mov
shl
mov
popf
xor
(bad)
xchg
pop
inc
call
call
adc
mov
mov
xchg
stc
push
cli
scas
dec
mov
mov
dec
mov
sbb
daa
push
sub
pushf
push
inc
jae
and
sar
jae
cmp
test
jb
push
rol
mov
daa
gs
xor
cmp
lods
jnp
(bad)
mov
xchg
sbb
loop
fcmovnbe
xchg
nop
fcomip
add
popa
lock
pop
loopne
js
outs
xchg
out
repnz
mov
jl
stos
in
sbb
sbb
inc
mov
xchg
dec
fs
or
bound
call
xchg
out
bound
jno
jecxz
clc
mov
mov
mov
lea
sbb
arpl
data16
mov
lahf
fnstenv
int3
sub
xlat
mov
mov
dec
idiv
js
iret
(bad)
aam
mov
mov
sub
cmps
jmp
pop
rol
aam
cs
sub
add
push
sub
pop
loope
(bad)
dec
fwait
xor
clc
das
jle
movs
and
xchg
ret
mov
jne
jg
jne
test
push
push
out
inc
inc
sbb
ds
jmp
das
test
jo
mov
add
les
xchg
lods
xor
lea
popa
test
lock
pop
cs
pop
loop
sbb
daa
xlat
jbe
aaa
xchg
movs
cmp
xchg
cli
aad
int3
mov
repz
retf
sub
jno
aad
and
sti
loopne
les
pop
sub
out
xchg
aas
dec
adc
sub
in
add
xor
push
push
aam
clc
rol
jl
dec
inc
data16
bnd
push
mov
mov
js
xor
enter
shl
pop
jl
or
inc
in
sbb
xchg
and
std
std
jge
lods
sbb
jbe
dec
aaa
frstor
mov
add
sub
dec
das
pop
ds
cmp
or
outs
add
push
adc
ret
lods
cmp
outs
ret
dec
dec
popa
mov
pop
mov
loopne
jne
inc
or
push
call
xchg
push
dec
add
nop
cmp
pop
sub
add
cmp
jg
jge
pop
clc
or
cdq
out
gs
fst
cmps
or
aad
mov
dec
jecxz
ror
jb
hlt
ret
jmp
call
neg
ss
repz
adc
cmps
nop
enter
sub
stos
push
aas
scas
cmc
mov
mov
out
mov
push
stc
add
ret
mov
jl
loopne
pop
lock
shl
xor
mov
daa
xchg
inc
or
mov
fisttp
add
loopne
or
aam
xor
mov
mov
popa
fidiv
das
mov
cmp
sub
pop
and
pushf
or
imul
rcl
(bad)
loop
xor
imul
in
sub
dec
dec
push
adc
dec
cwde
test
or
test
mov
ds
or
push
inc
mov
std
aaa
cmps
not
sub
mov
mov
mov
in
add
cmp
xchg
aad
inc
test
iret
(bad)
add
enter
jecxz
retf
cmc
jbe
sbb
and
or
loop
stos
movs
into
xor
push
push
mov
xchg
jnp
push
mov
cmp
xor
cmp
(bad)
mov
sbb
(bad)
inc
lds
jl
fcmovne
cld
pop
retf
xchg
push
call
scas
pop
push
cdq
pop
push
aam
mov
push
aad
(bad)
cmp
or
mov
pop
pop
call
push
xor
mov
sbb
clc
push
enter
int
and
lds
mov
loope
clc
adc
ror
hlt
jmp
or
daa
xchg
sub
mov
fcmovnb
gs
icebp
lea
dec
pop
xchg
push
inc
fwait
daa
push
enter
(bad)
xchg
push
mov
test
mov
test
xlat
out
mov
ffree
push
dec
xor
mov
push
icebp
push
(bad)
cmp
sbb
pop
push
loopne
ds
neg
cli
add
jg
jge
xchg
sub
dec
rol
mov
jl
sti
xchg
jnp
ja
mov
sbb
std
jecxz
psubq
cmp
inc
lock
int3
pop
pop
sbb
ret
aad
push
mov
pop
add
dec
je
mov
pop
mov
inc
dec
fisttp
dec
mov
sub
mov
sbb
xchg
sbb
dec
fmul
retf
xchg
ret
cwde
mov
shl
mov
cmp
pop
enter
dec
sti
imul
setge
div
repz
xchg
adc
mov
bound
popf
in
cld
fdiv
dec
sbb
rcr
leave
into
jb
or
cmp
repnz
xchg
jae
inc
ds
fwait
icebp
mov
mov
or
nop
imul
sbb
mov
std
mov
mov
jle
and
jno
inc
ror
stc
pop
jno
stos
in
jae
cs
and
jecxz
or
adc
test
out
iret
dec
in
nop
out
pop
jl
mov
daa
push
clc
fld
test
mov
repz
ror
mov
xchg
cwde
pop
(bad)
mov
(bad)
jbe
jp
ins
test
mov
std
pop
test
sbb
dec
and
xchg
(bad)
push
arpl
cmc
into
jge
data16
or
ret
and
fnsave
out
(bad)
out
mov
xchg
push
sbb
inc
ror
data16
sbb
lahf
push
je
or
(bad)
aas
adc
pop
mov
cmp
xor
test
adc
pop
mov
pushf
or
mov
add
mov
rol
adc
scas
jle
cmp
test
ins
mov
int
sub
sahf
lods
push
pop
out
mov
xchg
(bad)
dec
in
inc
or
pop
stc
rcr
mov
fld
push
lea
in
outs
fst
sub
nop
dec
mov
int3
and
add
sub
call
push
nop
std
or
inc
call
je
and
inc
add
pop
sbb
test
mov
push
sub
in
sbb
sub
out
cmps
stc
and
adc
jecxz
fstp
fisubr
mov
sahf
iret
gs
inc
ss
fisubr
dec
push
dec
and
test
push
mov
sbb
lea
jp
pusha
sub
call
dec
cld
retf
adc
movs
jg
adc
or
mov
inc
pop
and
aaa
sbb
mov
mov
lods
mov
mov
in
jbe
inc
sbb
xor
repz
stc
push
jmp
sbb
pop
sbb
fdiv
mov
(bad)
jle
in
cmp
mov
xor
loope
sub
sub
push
xor
sbb
call
inc
cmp
and
arpl
loope
mov
push
std
cmp
or
ja
mov
push
sbb
cs
mov
jecxz
adc
inc
dec
jge
mov
sbb
out
and
jmp
lds
sbb
push
xchg
rcl
dec
nop
mov
clc
scas
test
pop
retf
inc
pop
popa
loopne
xor
fdiv
cwde
mov
mov
sub
pop
mov
add
xor
and
add
loopne
push
out
mov
sahf
mov
test
les
lods
or
sbb
sub
fld
sbb
xchg
test
inc
mov
sub
sub
test
xchg
gs
inc
es
les
aaa
imul
mov
mov
movs
push
sub
xchg
xor
ds
dec
les
xor
lock
jno
add
sbb
fs
xor
pop
xchg
iret
push
movs
mov
mov
fwait
or
mov
sub
scas
mov
mov
fdivr
pop
mov
sbb
int
popf
test
ficom
les
(bad)
add
icebp
test
or
pop
scas
movs
add
add
pop
stc
pop
inc
test
mov
dec
mov
dec
enter
lods
cmp
loope
mov
js
jno
out
in
std
xor
push
rol
sbb
jl
mov
inc
push
and
sub
call
jp
cmovb
ins
push
lds
jne
enter
pop
ds
push
(bad)
mov
mov
test
push
test
push
jne
call
dec
adc
stos
add
icebp
fidivr
stos
test
dec
mov
setp
cs
popa
mov
xchg
(bad)
and
xchg
inc
mov
mov
mov
aas
push
outs
jmp
mov
add
sub
enter
mov
ins
out
jmp
(bad)
and
mov
popa
inc
mov
enter
test
pop
stos
mov
pop
sar
fbstp
inc
pop
mov
outs
out
je
xlat
mov
push
pushf
(bad)
pop
jecxz
and
jnp
mov
mov
mov
and
and
jge
xor
mov
adc
adc
daa
test
cmps
xor
mov
call
and
jg
sub
inc
sub
arpl
dec
fldcw
jp
mov
test
outs
pop
mov
aad
jo
loop
mov
mov
test
push
cmp
cld
repz
pop
pop
ins
dec
push
fs
vdivss
mov
out
fwait
sar
stos
jmp
idiv
and
addr16
jg
cmps
fldenv
pop
xor
mov
pop
pop
adc
xor
jmp
adc
fwait
cs
fistp
xchg
jge
adc
fstp
fs
sub
fwait
int3
adc
cld
mov
popa
push
out
pop
push
shl
add
jl
leave
xchg
sahf
mov
xchg
in
fstp
dec
jne
test
cmps
fwait
cmp
das
mov
int
std
lock
fs
inc
movs
adc
push
sub
cmps
hlt
test
mov
mov
out
xchg
sub
mov
mov
jmp
test
add
cmc
and
jb
in
dec
mov
rcr
and
mov
std
jbe
pusha
sar
mov
mov
outs
cmp
adc
lahf
leave
mov
arpl
rcl
xor
retf
and
pop
mov
xor
jo
stos
fucomip
fwait
mov
sub
push
xor
adc
clc
mov
pushf
mov
fs
mov
xchg
sbb
(bad)
out
jl
and
add
add
sub
inc
fwait
xchg
fsubr
push
(bad)
dec
repnz
data16
mov
icebp
sub
stos
mov
adc
les
sub
inc
neg
lods
stos
or
dec
aaa
fsubr
gs
cmps
cmps
dec
loopne
pop
lods
mov
cdq
mov
dec
mov
fsubr
fwait
popf
movs
jle
ficomp
ret
and
xor
fimul
sahf
xchg
lds
imul
mov
pop
hlt
jg
fwait
pop
or
jnp
jge
sbb
stos
out
in
cmps
ret
ja
or
std
and
xor
sub
jecxz
test
into
push
loopne
mov
xor
mov
nop
je
jb
dec
js
ficom
xor
pop
test
adc
or
movs
xlat
imul
pop
push
outs
push
aaa
dec
scas
jnp
push
xor
sti
loopne
add
out
jmp
xor
sub
xchg
int3
mov
fs
mov
inc
mov
(bad)
sub
outs
loopne
mov
and
or
outs
fadd
out
dec
imul
sbb
add
dec
sbb
cli
push
jae
add
std
mov
std
(bad)
push
add
jbe
pop
jge
mov
xor
mov
mov
test
sbb
or
popf
jle
pop
in
mov
dec
xor
sub
popf
and
cmp
imul
push
push
fwait
adc
imul
and
sub
jno
and
icebp
adc
xor
rol
xchg
test
les
int
lods
add
jl
out
inc
pop
adc
(bad)
loop
pop
adc
les
sub
rcr
call
cmp
leave
dec
xlat
loopne
cmp
repnz
dec
adc
pop
or
mov
lock
or
jbe
push
xor
inc
xor
sub
dec
xor
cmp
jmp
xchg
xchg
xchg
cmps
push
or
fs
aaa
jge
adc
sti
retf
aas
pop
mov
gs
stos
in
push
mov
(bad)
cwde
sub
je
jg
adc
lods
inc
push
retf
push
inc
push
stos
mov
rcl
test
arpl
pop
popf
ins
mul
jmp
add
test
(bad)
in
xchg
sbb
mov
adc
hlt
add
in
rcr
clc
inc
inc
inc
(bad)
pop
ret
(bad)
frstor
xor
mov
jl
push
out
std
pop
fnstsw
enter
gs
ja
leave
cld
fsubr
pop
dec
push
xchg
jp
mov
cmp
(bad)
cs
inc
hlt
add
aad
popf
sbb
sub
xor
inc
lds
pop
inc
inc
ja
dec
imul
loopne
sub
call
pop
out
data16
cmp
push
stos
mov
pop
mov
fdiv
add
mov
clc
inc
inc
cwde
clc
into
push
mov
xchg
jmp
mov
cdq
scas
js
lea
dec
mov
(bad)
(bad)
fsubr
fisub
pop
sbb
adc
push
inc
xor
ror
data16
movs
ja
ins
popf
push
nop
test
xchg
loop
movs
add
push
mov
sub
ins
les
ret
fs
dec
adc
lock
arpl
sbb
fidivr
addr16
xor
and
jmp
add
or
in
hlt
xchg
mov
(bad)
in
(bad)
es
mov
cli
or
mov
in
aaa
inc
sbb
lds
and
xor
jb
int3
push
jne
mov
je
fstp
retf
add
xchg
outs
mov
xchg
xor
adc
mov
stos
pop
stos
xlat
lods
push
(bad)
xlat
ins
scas
movs
mov
loope
outs
cmc
fbstp
sti
push
in
in
repz
and
mov
out
jmp
rol
sub
fwait
adc
je
(bad)
adc
dec
dec
leave
pusha
repz
jmp
inc
je
add
or
fcomp
addr16
pop
jmp
jb
mov
lea
gs
push
mov
sub
pop
shr
mov
xchg
and
(bad)
mov
imul
sbb
outs
xchg
fimul
cld
out
test
and
das
repz
push
lahf
jmp
(bad)
addr16
js
cmp
sbb
and
push
js
mov
add
cwde
and
mov
(bad)
movhps
cmps
cwde
xor
mov
lods
dec
cwde
dec
inc
(bad)
fld
mov
daa
inc
inc
jnp
xor
mov
popf
and
sti
sahf
lea
fwait
mov
(bad)
aam
push
xchg
js
xchg
sub
je
inc
mov
sub
mov
mov
pop
pop
add
lds
arpl
dec
dec
push
and
xchg
jae
shr
div
and
jbe
cmp
push
mov
add
ins
inc
mov
pop
xchg
pop
adc
sbb
xchg
outs
test
jo
and
adc
jae
jmp
movs
inc
mov
fucom
pop
das
imul
addr16
add
mov
push
retf
cs
ret
jbe
sub
stc
dec
add
or
pop
loope
adc
mov
dec
add
push
push
xor
add
add
lds
push
aad
xchg
sbb
sub
mov
push
push
inc
pop
test
xchg
loope
frstor
nop
xchg
sub
cmp
stc
outs
add
ins
mov
fild
jne
mov
gs
sub
mov
sahf
cmc
inc
jo
in
mov
or
jg
int3
bswap
out
sbb
aad
cmp
dec
out
stos
mov
outs
xor
pushf
xchg
sbb
(bad)
fstp
adc
aaa
pop
xor
sbb
out
sub
(bad)
fisub
int
sub
cwde
or
cdq
pop
imul
pushf
mov
arpl
adc
lods
add
in
mov
sbb
ja
add
and
fstp
sbb
push
pop
lahf
push
mov
adc
icebp
jmp
daa
fcomp
adc
lds
mov
jo
mov
add
js
in
or
fidivr
xlat
jae
mov
in
and
xchg
jb
aam
jae
stc
or
cs
or
pop
stos
fldenv
or
dec
(bad)
imul
out
ror
in
lock
and
ret
sub
int
xchg
(bad)
imul
mov
jne
jo
sbb
adc
gs
aaa
mov
not
jmp
push
pop
jmp
push
cmp
sti
xchg
enter
ret
cmp
sbb
push
sub
sti
cmp
adc
fmulp
daa
cld
or
inc
mov
aas
mov
hlt
push
adc
int3
pop
cmps
push
or
xor
push
outs
es
dec
mov
frstor
dec
push
ror
mov
sub
mov
xor
mov
cmp
adc
mov
or
jae
jo
jecxz
mov
push
sbb
or
fild
cmp
rcl
stos
popf
dec
adc
cmps
push
dec
adc
dec
mov
pushf
jns
aad
adc
shl
xlat
into
mov
cli
push
jno
and
xlat
aas
sub
pop
(bad)
fidiv
pop
push
fistp
dec
call
loopne
sub
imul
push
adc
mov
adc
(bad)
ins
ins
into
and
dec
xchg
jne
jmp
jbe
popa
leave
cmp
nop
ror
xchg
pop
lods
pop
and
sub
mov
add
dec
mov
stos
jl
out
imul
jne
jge
push
test
and
lds
or
sbb
cli
sub
add
cmc
add
pop
frstor
(bad)
test
mov
std
out
inc
mov
lods
xor
ins
mov
xor
xor
fiadd
sub
push
mov
xchg
sti
and
cmp
add
adc
jno
sub
and
sbb
push
call
push
mov
push
dec
jg
data16
add
inc
in
stos
ds
popa
call
aaa
or
dec
scas
and
jne
and
or
mov
jl
ds
das
or
mov
push
rcr
jne
in
(bad)
lea
mov
inc
iret
push
test
dec
popf
enter
fwait
dec
sbb
popf
jge
stos
sbb
push
dec
mov
add
and
push
shl
ja
mov
(bad)
in
cwde
fadd
leave
icebp
mov
jl
jbe
cmovo
xor
imul
cld
in
(bad)
repnz
imul
scas
dec
popa
repz
sub
hlt
jecxz
lods
jp
or
mov
jbe
mov
cld
sub
mov
add
fwait
and
popf
ja
inc
cmp
aad
and
jo
push
lahf
hlt
inc
shl
adc
xor
cmc
aas
add
lds
cwde
jg
addr16
pop
mov
add
mov
push
dec
xchg
icebp
xlat
push
mov
aaa
xchg
mov
push
sbb
fs
jecxz
into
rcl
fisttp
push
xchg
out
je
clc
out
jecxz
cmps
popa
or
cmps
pop
es
dec
add
lods
dec
add
shl
dec
daa
mov
dec
jg
dec
xor
and
dec
xchg
cmp
add
cld
cmps
pop
ins
sbb
shl
pop
stc
mov
pop
pop
mov
push
out
pop
jge
xchg
sbb
aam
push
pop
push
in
mov
ja
inc
xchg
out
mov
adc
mov
js
and
cmp
pusha
sub
add
sub
inc
les
push
xor
push
xchg
(bad)
gs
mov
sahf
(bad)
jmp
aad
inc
rcr
or
dec
pop
jae
xor
jno
arpl
xor
inc
pop
imul
stos
mov
aad
mov
adc
cmp
repnz
sbb
sub
sub
add
sbb
adc
dec
cmp
push
test
movs
mov
mov
inc
pop
imul
ret
mov
mov
cmp
pop
fcomi
push
mov
call
mov
cli
test
jns
das
sahf
push
retf
mov
mov
sub
lea
sbb
inc
xor
add
popf
out
lods
aam
neg
bound
(bad)
push
mul
popa
js
xor
push
mov
cli
dec
arpl
jae
mov
mov
and
cmp
mov
push
push
sub
mov
cli
add
std
clc
jnp
xlat
cmp
mov
xor
adc
dec
vpunpcklbw
cdq
popf
cmps
xchg
out
pop
xor
push
int3
add
in
and
fstp
mov
push
fsub
adc
xchg
add
xchg
push
push
sbb
push
sar
or
hlt
ja
pushw
jle
or
jnp
out
(bad)
sti
add
pop
and
inc
mov
jmp
and
mov
inc
movs
cmp
sbb
scas
cmc
and
(bad)
scas
xor
xor
std
jo
stc
mov
sub
outs
sbb
stc
mov
sti
fs
pop
call
add
push
pop
cmc
aam
(bad)
fwait
xchg
cmp
mov
adc
lock
sub
sub
int
xor
ja
jb
fsub
test
cmp
push
and
push
inc
call
lock
int
cmp
pop
sbb
adc
stos
int
xor
daa
gs
cmp
or
daa
inc
sub
retf
xchg
sar
push
and
jno
sub
push
dec
xchg
xchg
cmp
and
push
(bad)
lock
ins
xchg
fadd
pushf
cmps
mov
aaa
pop
pop
in
cmps
cmps
mov
pop
inc
jo
sbb
sti
fbstp
sbb
or
sub
das
fimul
fimul
inc
push
xchg
inc
push
rcl
mov
jmp
loop
sbb
jge
xor
jnp
scas
daa
mov
cmp
test
mov
ss
inc
mov
shr
mov
mov
add
cmp
sbb
ja
ins
ret
mov
fcom
mov
imul
cmp
test
cs
fwait
repnz
push
loopne
push
mov
adc
and
mov
jecxz
and
dec
add
popf
or
ds
nop
loope
adc
xchg
out
(bad)
jp
test
jl
pop
(bad)
out
fdivr
(bad)
fild
sub
push
clc
rcr
jo
sub
aad
mov
adc
push
add
xor
and
(bad)
imul
enter
dec
(bad)
int3
adc
call
inc
and
sbb
call
xchg
or
pop
dec
out
inc
daa
cli
out
mov
in
out
int
and
cmp
or
aad
std
call
popf
add
gs
test
xor
cmp
and
mov
cmp
mov
inc
cmp
inc
cwde
or
pop
pusha
leave
fs
cs
mov
cmp
leave
mov
sbb
out
ins
or
les
add
scas
loopne
pop
test
fdivr
and
inc
jmp
sub
popf
inc
fadd
fnsave
xchg
ret
shl
mov
xor
ja
and
out
call
test
mov
lods
loopne
call
pop
(bad)
in
iret
movs
in
lahf
mov
pop
xlat
mov
inc
xchg
xchg
test
fnsave
outs
sahf
lds
push
jbe
lock
cmp
and
pop
cmp
inc
out
push
aad
adc
scas
mov
ins
mov
mov
cli
jg
adc
sar
dec
sub
jmp
nop
push
mov
test
push
or
xor
and
int
gs
(bad)
out
test
fwait
push
dec
std
(bad)
sbb
xchg
(bad)
mov
push
pop
mov
mov
inc
push
mov
out
sbb
in
das
sub
mov
xor
add
xor
adc
adc
(bad)
stos
mov
jnp
(bad)
mov
loop
pusha
imul
dec
dec
push
or
test
mov
sti
mov
pop
iret
shl
cmp
add
sbb
ja
stc
repnz
gs
jmp
enter
movs
jne
cmp
and
pop
lahf
inc
(bad)
cmp
stos
jnp
sub
mov
lahf
add
adc
sub
add
mov
add
cmp
mov
into
je
inc
lea
call
ret
lods
cmp
lea
icebp
aaa
mov
dec
clc
sahf
outs
ins
push
out
mov
jae
out
call
es
inc
repz
cld
xchg
aaa
mov
sahf
mov
cmp
xchg
pop
push
and
push
in
add
es
shl
mov
xor
cli
add
ret
adc
lds
lods
push
mov
add
push
sbb
cld
add
popa
jo
les
mov
sub
mov
cmp
sbb
movs
test
xchg
jg
pop
not
mov
sbb
sbb
xor
adc
arpl
adc
cwde
jnp
lea
dec
popa
leave
stos
pop
(bad)
cwde
jbe
sub
mov
inc
sbb
jae
cmp
icebp
jmp
push
push
outs
out
dec
dec
aaa
rcl
fcmovnb
cmp
aaa
hlt
gs
sbb
mov
xchg
sub
inc
stos
pop
pop
iret
dec
push
hlt
jl
cmp
adc
xor
cmp
sbb
test
outs
xor
jb
in
or
mov
in
mov
dec
out
into
push
lahf
lock
dec
scas
push
popa
dec
in
test
inc
push
aaa
dec
popf
pop
popf
in
push
cmp
fmul
pop
hlt
(bad)
add
sub
and
adc
push
jg
pop
lods
int
data16
stos
sbb
in
(bad)
xchg
cmp
push
sub
test
clc
imul
fsub
jle
mov
arpl
pusha
push
push
(bad)
into
test
(bad)
jmp
out
adc
inc
adc
adc
mov
push
idiv
xchg
cmp
mov
cmp
nop
enter
shr
fmul
loop
sub
cmp
out
and
daa
jnp
dec
adc
xor
mov
xor
mov
ror
dec
jns
loopne
movs
gs
fst
js
aas
popf
sbb
push
or
std
add
dec
pop
aam
test
sub
jecxz
cmp
mov
xchg
push
ja
push
outs
mov
aaa
pushf
mov
sub
loopne
sbb
xchg
sub
sub
js
int
adc
ins
not
dec
popf
mov
sar
das
ret
test
fcom
and
rcl
xchg
xchg
fstp
test
retf
pusha
lods
sahf
mov
jns
lods
dec
rcr
xor
adc
mov
inc
inc
outs
in
add
aam
bound
enter
push
jg
sbb
sbb
les
in
dec
or
test
mov
ja
or
jp
mov
add
adc
bound
enter
ja
inc
mov
adc
xor
cmp
ret
stc
or
pop
dec
xchg
sbb
sahf
outs
inc
mov
adc
push
(bad)
fisubr
xor
mov
call
inc
repnz
jg
xchg
or
cli
inc
cmp
mov
repnz
test
(bad)
ja
mov
jo
or
lds
sahf
push
push
out
or
test
push
(bad)
push
rcl
cmps
jg
sub
gs
sub
popa
fld
mov
add
xchg
jl
cld
push
mov
dec
into
fild
lock
jae
aam
cs
movs
data16
es
dec
out
mov
(bad)
ja
jmp
ins
lods
cmc
retf
(bad)
mov
lds
add
jae
add
(bad)
pop
(bad)
stc
cdq
xchg
mov
dec
inc
rcr
adc
or
enter
(bad)
loop
sbb
dec
mov
cmp
adc
and
inc
push
sbb
jo
popa
sub
sub
popa
push
pop
fs
mov
aas
mov
jo
sbb
mov
scas
add
add
call
xor
xor
mov
adc
mov
lea
add
mov
outs
ins
test
xor
push
or
and
enter
lods
mov
imul
push
xchg
mov
outs
popa
sub
sbb
dec
pushf
cdq
test
sti
fst
or
(bad)
in
xor
or
cmp
cmp
cmps
ret
hlt
fstp
jecxz
sub
sbb
jecxz
inc
and
mov
mov
aas
es
not
movs
pop
das
lods
imul
push
cdq
fsubr
mov
aaa
sub
test
aas
aam
or
jbe
mov
retf
pop
rcr
adc
mov
add
pop
pop
xor
mov
adc
xchg
fcomp
push
bound
jnp
adc
(bad)
dec
ds
sub
jg
fsubr
fs
sbb
or
nop
test
out
lea
call
xadd
push
popa
dec
pop
lods
sbb
jmp
jne
fcmove
cld
stos
ret
sub
out
fs
jge
push
add
sub
mov
inc
js
aas
outs
cmp
or
pop
push
dec
push
shr
add
pop
pop
je
daa
and
pop
div
popf
mov
cwde
in
mov
out
outs
inc
out
sbb
mov
pop
stos
test
sar
mov
jle
lock
mov
hlt
adc
test
dec
adc
aas
ja
mov
(bad)
addr16
cmp
pop
cwde
xor
imul
stos
xchg
jge
sub
pop
xchg
inc
jb
popa
sub
mov
cmp
and
fistp
xor
rol
sub
xchg
sbb
sub
ss
pop
leave
out
mov
iret
mov
xor
sbb
out
stc
pushf
mov
xchg
add
mov
lds
sub
fwait
push
aad
mov
jp
shl
pop
mov
and
fistp
push
(bad)
sbb
jp
fs
sbb
ret
mov
stc
or
aad
push
movs
out
add
jp
inc
mov
shl
rol
enter
inc
sbb
ror
jnp
stc
fcomip
dec
xlat
inc
adc
cmp
rcr
ins
and
leave
jae
xchg
dec
inc
ins
push
and
stc
mov
mov
dec
rcr
enter
int3
int
sub
push
fsub
xchg
push
sub
mov
call
pushf
lea
movs
mov
lea
mov
fwait
jle
push
rcr
hlt
(bad)
adc
or
aam
mov
clc
pop
in
cld
adc
push
call
outs
sbb
std
sub
mov
(bad)
xlat
imul
jle
(bad)
out
sbb
imul
(bad)
movs
add
mov
mov
aaa
jp
inc
push
adc
mov
cmps
cs
retf
xchg
inc
jns
add
enter
mov
fstp
xchg
outs
push
mov
hlt
dec
xchg
sbb
ins
(bad)
xchg
out
sti
pop
push
pop
and
or
dec
lods
and
jo
pop
loopne
sbb
mov
inc
pop
jg
xlat
push
adc
lock
pop
cli
or
jecxz
cmp
pop
in
push
or
out
cmp
pop
push
(bad)
push
cmp
xchg
pop
inc
in
mov
js
je
xchg
xchg
lods
ja
rcr
dec
test
lock
mov
(bad)
out
or
cmp
ins
int3
jne
mov
repz
outs
mov
jp
mov
push
shl
dec
jbe
xchg
add
jge
mov
dec
dec
xor
jmp
pop
push
mov
call
dec
mov
je
xchg
mov
jecxz
mov
fld
pop
xchg
and
mov
sbb
fistp
lahf
dec
ss
movs
mov
ret
jbe
retf
jmp
jge
scas
jne
out
stos
cmps
sbb
mov
outs
std
loop
jns
adc
outs
xor
out
mov
ins
add
mov
pop
mov
outs
and
inc
mov
or
not
xor
mov
shr
dec
mov
mov
xchg
xchg
hlt
movs
jne
jnp
cmp
lods
imul
and
jle
sbb
jnp
jge
adc
cli
fldenv
sub
mov
popf
mov
jl
call
pop
adc
aaa
js
dec
push
mov
leave
enter
(bad)
data16
dec
movs
dec
adc
js
les
stos
cmps
(bad)
mov
ds
inc
inc
mov
dec
fwait
shl
scas
mov
shl
clc
mov
xor
xor
clc
fidiv
cmp
sbb
adc
mov
scas
jmp
push
xchg
cli
dec
neg
(bad)
fsin
out
lock
cdq
xchg
push
imul
push
and
and
cdq
ins
sbb
aam
daa
mov
and
mov
push
repz
ror
inc
dec
cmc
sahf
cmc
popa
pop
movs
retf
std
xchg
enter
xor
(bad)
or
xor
push
lods
in
ror
sub
mov
inc
mov
shl
push
xchg
scas
cmovae
cmp
and
idiv
popf
dec
jg
mov
mov
inc
in
outs
adc
jne
ins
imul
jle
test
gs
sahf
xchg
sbb
mov
mov
(bad)
addps
sahf
popf
outs
cmps
sub
adc
pop
sub
outs
div
cs
lods
push
jmp
fcom
out
dec
jb
aas
xchg
les
xlat
sbb
or
push
inc
andnps
add
push
mov
into
shl
inc
push
jmp
icebp
inc
outs
add
lods
pop
loopne
ret
fldenv
jmp
(bad)
mov
(bad)
out
cdq
push
aaa
adc
or
dec
mov
mov
xchg
pop
icebp
push
in
cmp
jnp
jnp
pusha
or
xor
mov
stos
sub
pop
push
ret
mov
prefetcht1
jns
mov
pop
or
icebp
mov
sbb
lahf
push
pop
aad
pop
sub
addr16
xchg
test
movs
push
leave
dec
sub
(bad)
push
repnz
mov
push
iret
jns
add
(bad)
mov
or
add
repz
jnp
jl
dec
add
imul
xor
(bad)
jmp
mov
mov
xchg
inc
cld
rcr
push
mov
jbe
scas
jno
sahf
sahf
xchg
jge
mov
ins
stc
mov
mov
adc
aaa
mov
cmps
adc
mov
jns
push
bound
imul
std
push
pop
adc
bound
(bad)
cmps
cdq
xchg
sbb
jmp
mov
bound
das
(bad)
das
xchg
lods
dec
lods
inc
loop
daa
shl
iret
xchg
or
add
inc
(bad)
fdiv
arpl
mov
jl
int
xchg
and
popf
mov
fs
out
iret
ja
clc
xlat
push
push
clc
les
popa
or
ret
mov
fwait
jo
out
int3
fistp
inc
gs
jl
add
sub
push
les
cdq
and
xchg
retf
add
mov
adc
cmp
pop
dec
fwait
call
mov
mov
sub
repnz
mov
dec
jno
ret
lock
scas
lds
dec
xor
sbb
je
shl
jnp
jl
push
sbb
into
lock
and
push
enter
es
fild
leave
xor
ss
mov
mov
retf
fisub
fnsave
pop
cmp
cmc
add
sbb
xchg
mov
loope
adc
add
add
sti
pop
cmp
loopne
scas
(bad)
mov
fsub
js
fs
jmp
movs
pop
or
push
pop
fisttp
clc
xor
dec
inc
mov
pop
rol
lahf
adc
rcr
and
add
(bad)
jne
leave
mov
push
pop
(bad)
ror
jbe
jne
push
xor
inc
and
test
lds
mov
dec
cmp
ror
cmc
push
jmp
shl
inc
cmp
sbb
dec
lock
cmp
or
repnz
mov
push
pop
push
jl
mov
fs
addr16
in
jns
arpl
sbb
out
sub
xchg
movs
sbb
ins
popa
lods
ret
cmp
jmp
retf
inc
(bad)
xchg
xchg
(bad)
jmp
jmp
inc
int
bound
adc
in
retf
hlt
icebp
into
outs
mov
sub
in
shl
cmp
adc
mov
pop
enter
lahf
out
sub
inc
setne
xor
inc
sbb
push
mov
xor
outs
dec
nop
or
shl
repnz
adc
test
mov
addr16
(bad)
dec
xor
jo
push
jle
clc
mov
jno
and
jl
sbb
jnp
leave
cmp
cmp
sbb
push
(bad)
arpl
jg
or
fs
mov
dec
or
popa
in
loopne
add
rcl
mov
fld
ret
ret
and
arpl
and
mov
lea
test
(bad)
out
in
(bad)
xchg
mov
mov
mov
je
dec
out
cdq
scas
pop
rcr
push
mov
jle
push
push
mul
mov
push
sbb
shl
(bad)
push
sbb
xchg
mov
pushf
nop
mov
dec
pop
ror
je
pop
and
jmp
or
and
or
inc
icebp
addr16
and
std
add
addr16
pop
fld
push
sti
dec
ss
fs
mov
jge
push
scas
daa
pop
pop
cmps
mov
jbe
xchg
push
call
arpl
mul
scas
lock
fld
or
stos
mov
(bad)
xchg
mov
add
jle
ss
and
out
je
fdivr
push
int
mov
idiv
and
out
cs
jb
dec
popf
xchg
pushf
xchg
dec
(bad)
jae
add
mov
jb
mov
add
jmp
je
sub
loop
std
xchg
rcr
ja
and
(bad)
mov
repnz
into
inc
fcomip
call
jne
out
test
lods
gs
dec
in
fist
ins
mov
pusha
pop
sbb
xchg
xchg
dec
out
not
jne
std
jnp
mov
scas
push
div
add
(bad)
push
scas
jae
ficom
aam
push
add
push
dec
add
icebp
xor
daa
xchg
ret
pop
sbb
pushf
sar
sub
push
xchg
sbb
mov
aas
test
loopne
xchg
mov
jmp
xor
popf
ja
pop
in
ret
jle
test
cwde
add
clc
add
mov
mov
rol
inc
cwde
repnz
xchg
dec
sbb
mov
pop
mov
push
ret
icebp
or
inc
sbb
cs
xor
sbb
xchg
mov
loopne
in
jecxz
pop
movntps
mov
(bad)
rcr
xchg
mov
sbb
cdq
arpl
sbb
mov
add
ror
imul
hlt
shr
dec
pop
sbb
lods
adc
sti
retf
push
mov
dec
shr
call
hlt
xchg
pop
jne
adc
inc
xchg
or
loop
push
data16
pusha
mov
adc
jb
adc
jo
xor
push
fwait
movs
push
and
out
lods
into
movs
ss
pop
retf
test
mov
int3
lods
mov
cmp
push
add
call
push
dec
or
in
inc
addr16
mov
push
adc
mov
inc
(bad)
jne
bound
ins
pusha
mov
pop
add
mov
mov
das
stos
or
jge
push
cmps
fwait
dec
or
push
cwde
imul
push
dec
je
daa
(bad)
mov
jne
mov
paddusb
addr16
inc
loope
inc
or
aam
in
mov
aad
and
inc
ror
add
cmp
push
out
mov
aad
fsub
pusha
add
push
in
jno
mov
pop
or
mov
cmp
sbb
sahf
fbld
adc
fld
xchg
(bad)
addr16
jg
sub
das
xchg
xchg
cmps
and
pop
xor
push
pop
add
(bad)
aas
fs
(bad)
fcmove
xor
in
outs
out
and
push
(bad)
stc
jmp
pop
or
push
jmp
movs
cmp
jmp
mov
test
test
arpl
xchg
xor
fwait
xchg
fidivr
pop
je
push
int
xchg
lods
into
aad
scas
addr16
shl
mov
xchg
dec
adc
fistp
bound
rdtsc
mov
dec
bound
xchg
sbb
sar
mov
or
xor
jne
push
cmp
jno
pop
and
bound
inc
or
fistp
nop
lods
cmp
dec
jne
mov
shl
pushf
retf
ret
dec
pop
iret
sbb
push
gs
xor
popf
xchg
out
mov
in
xor
repz
sti
repz
cmp
shl
std
pop
add
dec
xchg
mov
stc
fldenv
call
push
jbe
mov
xor
jno
mov
sbb
mov
push
or
sub
in
push
adc
out
mov
mov
and
retf
push
fs
push
sub
clc
lds
sub
mov
xor
repnz
imul
cmp
cmc
out
icebp
rcl
popf
mov
test
mov
jo
bound
scas
sbb
(bad)
add
scas
xchg
hlt
sti
jb
fnstsw
movs
inc
pop
xchg
arpl
dec
lock
xchg
xchg
mov
cwde
xchg
sub
inc
mul
or
cmp
xchg
sbb
dec
ins
das
xchg
pop
pop
das
pop
cs
cmp
mov
in
cmp
sti
adc
jae
stos
xor
fsubr
es
in
fbstp
add
dec
ds
fwait
outs
or
pop
dec
xchg
xor
pusha
jne
mov
pop
mov
(bad)
jge
shl
or
ja
stc
dec
push
and
int
ins
enter
rol
stos
sub
sub
pop
dec
fs
mov
jle
inc
leave
dec
jge
dec
gs
imul
cmps
icebp
adc
jecxz
ds
mov
xchg
dec
mov
fdivr
mov
pop
imul
cmps
fxch
add
pop
addr16
mov
bound
mov
cmp
(bad)
fisub
add
sbb
mov
ret
mov
pop
std
or
sub
sbb
(bad)
jmp
pop
mov
out
out
mov
xchg
enter
imul
rcr
mov
out
jecxz
xchg
std
pop
adc
outs
ds
push
mov
(bad)
div
xchg
repz
dec
xchg
inc
xchg
and
dec
test
or
scas
add
loope
or
inc
mov
mov
aaa
cwde
sbb
stc
arpl
arpl
mov
test
daa
xchg
test
pop
push
scas
cdq
mov
mov
dec
inc
pushw
lock
or
mov
push
push
rol
ja
(bad)
pop
es
pop
push
pop
fdivr
fidivr
cmp
lods
loope
int3
ds
inc
mov
lds
mov
push
mov
or
sbb
test
mov
out
fucomip
dec
(bad)
dec
(bad)
idiv
xor
ret
jmp
jns
(bad)
xor
jmp
dec
mov
mov
cmp
test
repnz
jmp
pop
xchg
mov
test
push
cld
call
cld
icebp
pushf
clc
imul
push
in
icebp
dec
xchg
pop
add
jns
cmp
sbb
and
push
in
cmp
sbb
dec
into
mov
push
mov
dec
sbb
(bad)
xor
push
mov
les
pop
mov
dec
or
cs
in
add
mov
(bad)
in
add
mov
test
enter
or
sbb
inc
add
shl
int3
xor
sbb
dec
out
ds
fs
dec
cli
popa
mov
sub
sub
jne
pop
fcmovnb
push
mov
sbb
mov
mov
push
ja
dec
int
pushf
out
out
lods
push
sbb
aaa
mov
or
mov
mov
or
xchg
jno
jmp
push
lds
jl
add
dec
xor
xchg
pop
inc
rcl
pop
add
and
jle
lods
xor
jbe
mov
cld
xchg
stos
(bad)
stc
adc
and
and
std
xor
push
jl
and
mov
lds
dec
fist
jecxz
mov
movs
sbb
and
mov
rcr
mov
(bad)
mov
jg
adc
cmp
cmp
loop
mov
repz
iret
cmps
neg
inc
das
in
mov
mov
mov
jo
push
xor
scas
xchg
stos
outs
(bad)
lock
clc
jl
iret
sub
sar
pushf
xchg
mov
lock
loop
adc
mov
fucom
popa
adc
rcr
pop
and
popa
xchg
movs
adc
adc
inc
add
nop
inc
data16
or
jb
xchg
pop
jl
mov
adc
and
out
add
sti
mov
jmp
mov
aam
pushf
clc
jge
aad
aaa
test
test
mov
ret
sbb
adc
bnd
push
icebp
or
pushf
or
cld
adc
xchg
push
outs
fisttp
mov
lds
movups
inc
or
popf
inc
cmp
scas
mov
mov
fdiv
dec
sub
aaa
je
ds
test
and
pop
popa
push
mov
dec
leave
imul
push
cmc
pop
xchg
xchg
cmp
push
stos
add
outs
loop
imul
fs
jo
mov
cdq
mov
cli
mov
adc
sbb
mov
jns
jecxz
call
test
or
jmp
push
inc
jno
aad
pop
pop
movs
add
pop
cmp
retf
daa
sub
cmc
cmp
(bad)
and
and
mov
addr16
rep
not
or
dec
add
sar
ds
sbb
fist
mov
pop
pop
(bad)
je
rcl
cmp
or
add
mov
or
cmp
mov
gs
inc
ds
sub
pop
sbb
sub
mov
lock
jl
enter
std
out
pop
mov
xchg
ins
mov
clc
add
or
sbb
jae
cli
hlt
xchg
add
call
sbb
dec
push
lods
add
xchg
adc
daa
push
xrelease
adc
popf
fstp
fist
mov
js
dec
mov
ret
ins
sub
ins
mov
mov
fiadd
ss
cmc
std
mov
in
sahf
jbe
ds
pop
shl
in
sub
xchg
cmp
inc
sub
push
test
pop
push
(bad)
or
sti
enter
pop
into
ret
jnp
daa
fstp
jp
jecxz
jecxz
pop
or
call
lds
fstp
loope
dec
shr
nop
imul
xchg
js
push
jbe
mov
stc
shr
jno
add
adc
mov
push
inc
or
jp
push
aam
fs
xor
nop
cs
div
pop
jmp
mov
je
pop
enter
xor
repz
push
jecxz
in
int
sar
add
and
push
or
jge
inc
std
aaa
push
das
mov
inc
fist
imul
popf
add
push
mov
jmp
test
ins
add
push
pop
xchg
(bad)
or
bound
xchg
scas
dec
mov
das
mov
pop
dec
mov
dec
sub
pop
(bad)
iret
(bad)
cmc
jo
sub
aaa
test
add
jnp
int3
dec
mov
dec
xchg
enter
fwait
inc
cmp
and
nop
scas
retf
push
mov
mov
sub
pop
push
mov
fmulp
cli
jmp
in
jnp
(bad)
inc
or
fcomip
mov
cmps
xor
imul
inc
ss
push
dec
aaa
sbb
jns
sbb
mov
jns
iret
adc
jmp
xchg
icebp
nop
mov
popa
aaa
imul
fs
ret
or
cmp
or
sub
aad
fnstenv
inc
push
sbb
icebp
mov
mov
sbb
xchg
mov
int3
push
cmp
add
dec
(bad)
cwde
or
adc
xchg
loopne
jae
mov
push
jge
imul
mov
and
pop
jle
in
jge
mov
pop
sub
hlt
test
or
fdiv
xchg
inc
pop
and
fs
add
int3
cmps
and
or
mov
xchg
call
(bad)
adc
lea
test
test
pop
jne
iret
jge
fldenv
fidivr
test
pop
xchg
push
sti
movs
in
dec
mov
or
icebp
dec
push
lahf
in
(bad)
loope
in
sbb
push
add
push
int3
push
test
mov
out
mov
ds
sbb
mul
jmp
es
imul
stos
push
ficom
adc
movs
jae
sub
push
jmp
or
aas
dec
fwait
shr
arpl
es
and
push
lods
xor
and
stos
retf
in
daa
neg
jmp
and
retf
sti
mov
arpl
mov
(bad)
xor
out
sahf
cdq
jecxz
mov
mov
mov
hlt
cmp
lahf
outs
dec
popf
sar
fldenv
popf
xor
nop
int
sbb
sbb
mov
out
cmps
mov
sbb
adc
push
(bad)
in
adc
xchg
xchg
push
pusha
or
mov
or
and
arpl
push
mov
add
shl
shl
or
or
aad
inc
dec
jl
retf
in
mov
xchg
out
pop
dec
inc
aaa
cdq
sub
fild
lahf
sub
xchg
push
mov
mov
inc
fnstcw
ja
xchg
ins
xor
movs
(bad)
xchg
inc
movs
rcr
xor
stc
mov
cmps
clc
fidivr
es
push
mov
loopne
iret
scas
repnz
dec
xchg
adc
jg
ins
adc
pop
sub
cmp
jae
and
popa
mov
xlat
sbb
lods
cmp
out
sub
les
sahf
xchg
cmc
loope
mov
add
and
xor
je
push
jl
xchg
jge
movs
sbb
jle
sbb
ins
mov
mov
test
out
jo
mov
mov
sar
and
daa
mov
push
dec
mov
mov
xlat
dec
push
popa
outs
retf
and
fdiv
outs
xor
jne
bound
ins
fsub
and
pushf
leave
dec
stos
inc
push
out
cdq
mov
clc
(bad)
inc
rcr
mov
jmp
sti
adc
pop
push
inc
and
(bad)
and
pop
ja
and
xor
repnz
aas
inc
mov
sbb
add
cmp
shr
shl
xchg
clc
sbb
push
adc
xchg
xor
pop
in
pop
push
xor
pop
and
jbe
sti
(bad)
dec
adc
in
mov
push
outs
jmp
push
xchg
aam
mov
xchg
sti
fidivr
or
cwde
sub
(bad)
xchg
xchg
shl
mov
fsub
fist
cmps
mov
retf
aad
push
loopne
push
retf
enter
lods
sub
adc
je
aas
cld
fiadd
push
icebp
in
pushf
lahf
dec
inc
inc
loop
out
ins
inc
mov
dec
push
xor
icebp
test
add
pop
push
add
dec
push
pop
and
inc
mov
pop
idiv
xchg
hlt
movs
in
push
enter
sbb
cdq
ins
sub
in
mov
aad
inc
inc
sub
mov
sbb
test
movs
jo
leave
stos
mov
out
pop
cli
dec
push
ja
cld
mov
xor
dec
mov
aam
enter
in
push
aaa
push
push
mov
mov
push
jbe
call
pop
out
dec
fldpi
cmp
cmps
push
and
icebp
push
icebp
daa
nop
xchg
or
stc
in
clc
inc
lods
pushf
hlt
fcmovne
call
daa
mov
mov
mov
xchg
mov
mov
in
leave
jne
add
push
push
(bad)
daa
pop
sub
jne
dec
mov
jecxz
fistp
fisttp
test
fimul
and
pushf
(bad)
cwde
xchg
push
add
lahf
iret
test
fsubr
jmp
push
push
jb
mov
push
or
cli
inc
pop
lods
fisub
shl
cs
add
ficom
sub
jmp
idiv
(bad)
call
bound
xchg
inc
aam
into
ds
xchg
jmp
and
pop
pop
les
stos
pop
cmp
je
adc
lock
test
sti
inc
cmps
mov
ds
sbb
daa
test
pop
aaa
int3
push
inc
gs
or
in
mov
mov
push
xchg
mov
outs
aaa
jl
xor
dec
xchg
arpl
jae
cmp
fisub
xchg
xchg
(bad)
imul
mov
stc
lea
scas
sbb
les
(bad)
jo
in
test
mov
js
pop
and
xor
xchg
sub
jo
xlat
push
js
jecxz
dec
shl
xchg
fs
cmp
lea
mov
mov
daa
xchg
xchg
dec
add
sub
in
lds
adc
ret
leave
jbe
jmp
mov
(bad)
xchg
xchg
xor
push
loop
adc
popf
push
mov
sub
movs
cmp
push
xor
inc
(bad)
mov
pop
mov
test
fcomip
add
add
or
sahf
je
pop
push
add
call
lods
cmp
in
mov
popa
push
fadd
sbb
shr
out
lock
mov
imul
call
rcl
cld
add
adc
scas
lahf
lea
loopne
(bad)
loope
inc
adc
sbb
jecxz
lock
cmp
inc
sbb
dec
jnp
int
inc
mov
js
fnstsw
dec
jno
jnp
push
rcr
jg
xchg
fwait
popf
(bad)
hlt
test
pop
gs
cli
or
push
pop
push
add
retf
das
xchg
repz
aas
shl
mov
lds
adc
jne
xchg
jbe
in
in
int
adc
inc
(bad)
sub
xchg
imul
fdiv
pop
gs
mov
mov
jge
in
pop
push
push
jne
cmps
mov
test
int
cdq
xchg
cli
dec
inc
shl
idiv
les
in
out
ror
cdq
jmp
ja
mov
xchg
shl
cwde
aaa
adc
into
stc
jns
push
xor
dec
test
pop
inc
fild
fadd
rol
xchg
arpl
adc
stc
pop
jecxz
mov
or
into
in
popa
lods
retf
pop
xchg
adc
push
cmp
mov
(bad)
retf
xor
sti
in
jl
sbb
shl
jne
and
dec
(bad)
sub
sbb
mov
(bad)
xchg
pushf
test
call
dec
popa
pushf
daa
ror
cli
lods
jp
sub
sbb
jecxz
retf
jne
shl
xchg
pop
push
jmp
ins
aas
push
xchg
xchg
xchg
or
push
xlat
pop
cdq
inc
icebp
push
sub
(bad)
jg
ins
mov
xor
and
loop
repz
add
clc
scas
ins
bound
cwde
ret
mov
repz
add
pop
inc
jbe
ret
jl
ss
imul
mov
mov
in
inc
addr16
mov
push
add
clc
cmp
dec
xchg
(bad)
fidivr
out
(bad)
mov
pop
(bad)
(bad)
aam
repz
xchg
and
out
fld
ds
cmp
cmps
xchg
jmp
in
(bad)
adc
push
or
aad
mov
mov
mov
cmp
lds
cmp
and
mov
adc
xchg
jp
sub
out
das
jns
xor
mov
ror
stos
iret
in
adc
xor
jmp
and
test
pop
ins
and
loope
xchg
inc
es
push
fxch
push
test
pop
dec
mov
xchg
pop
hlt
inc
mov
out
and
add
gs
inc
aad
sbb
jnp
sub
push
jno
dec
dec
mov
int
and
clc
cld
aam
mov
sub
or
rol
(bad)
sub
jp
aam
test
in
and
add
imul
je
jnp
and
cmp
aam
in
cmc
cmp
pop
imul
retf
test
and
(bad)
bound
clc
adc
sbb
pop
cmp
mov
shl
xor
xchg
into
bts
adc
test
dec
popa
cmps
out
movs
scas
cld
cmp
mov
mov
inc
push
xor
add
shl
jb
sbb
js
sub
in
cmp
es
popa
imul
xlat
int
mov
shl
les
mov
fnstcw
out
xor
or
inc
sysexit
repz
retf
jmp
aaa
jo
repnz
mov
add
mov
mov
dec
cs
popf
in
fmul
and
inc
xchg
cmp
cmps
xchg
fs
out
xor
jne
daa
test
les
mov
movs
sbb
dec
fs
mov
and
jae
pop
out
outs
inc
inc
lea
mov
mov
or
daa
retf
mov
fild
aam
pop
test
movd
out
mov
std
dec
inc
test
push
imul
pop
ins
retf
ins
ins
bound
xlat
(bad)
retf
movs
movs
fdiv
dec
mov
out
enter
int3
push
test
std
out
shr
add
cld
lods
xchg
inc
scas
xchg
jecxz
dec
fnstcw
dec
pop
mov
cmc
shl
and
sub
xchg
daa
in
icebp
stc
add
fld
adc
dec
mov
xor
outs
shl
jp
inc
jmp
jae
adc
cmp
dec
out
pusha
(bad)
mov
in
add
pop
mov
out
lods
aas
sbb
bound
mov
mov
mov
cmc
cdq
movs
mov
pop
out
arpl
(bad)
(bad)
cmps
sahf
imul
sahf
aad
fld
push
mov
mov
pop
cmp
iret
loope
xchg
adc
repz
ror
xchg
(bad)
mov
inc
pop
in
out
sub
or
add
pop
inc
pop
add
sbb
push
and
(bad)
inc
outs
imul
and
push
movs
das
xor
and
int3
mov
fistp
test
movaps
repnz
inc
mov
pop
fadd
mov
(bad)
dec
out
add
pop
std
xchg
sub
push
or
imul
test
xor
fistp
gs
mov
mov
dec
call
inc
jbe
fcomp
inc
loop
sub
adc
mov
pop
dec
fcom
stos
or
adc
mov
mov
fsubr
aaa
in
fmul
lea
aam
push
jg
jae
cdq
mov
push
push
xchg
sub
push
mov
loop
xlat
jle
lods
imul
sti
in
sub
(bad)
bound
test
or
sahf
imul
or
fdiv
ja
jmp
(bad)
push
repz
dec
dec
xchg
sti
(bad)
imul
das
daa
xchg
loopne
inc
cld
cmp
repnz
adc
push
imul
shl
into
inc
push
retf
xchg
rol
(bad)
in
cmp
sbb
pushf
xchg
push
dec
sbb
adc
sbb
in
call
mov
fcompp
cmps
sub
lods
mov
push
iret
adc
inc
sub
imul
adc
movs
mov
mov
out
mov
ins
push
jnp
pop
retf
xor
iret
leave
outs
add
or
fldcw
mov
out
rcr
xchg
sub
lock
jmp
xchg
shr
mov
jmp
pop
jecxz
enter
mov
sbb
xor
mov
inc
(bad)
stc
sub
dec
cmc
aam
bound
sbb
xchg
repnz
test
cmp
div
fs
cmc
stos
inc
in
int3
cmp
push
mov
outs
(bad)
cs
loope
cmp
jge
in
call
pop
xchg
push
xchg
adc
shl
push
sbb
xor
pop
and
into
jno
mov
push
outs
out
jae
ds
cdq
dec
or
mov
loopne
push
push
inc
iret
sub
mov
mov
push
xchg
jecxz
xlat
shr
xchg
loop
jo
adc
(bad)
(bad)
mov
mov
dec
or
jbe
(bad)
and
mov
cli
icebp
pop
xor
xor
loopne
pushf
xor
cs
sbb
enter
pop
int
jg
imul
cmps
cli
push
push
and
sub
leave
aas
inc
cdq
and
gs
mov
mov
push
retf
pop
(bad)
outs
lods
mul
fs
mov
aaa
movs
ins
add
jp
mov
sub
inc
jae
and
mov
mov
jae
lea
fsub
pusha
stc
xlat
mov
test
jo
fnstcw
push
je
lea
mov
lods
les
outs
push
cmps
call
daa
adc
inc
ds
jmp
pop
out
nop
je
pop
or
aaa
jecxz
(bad)
fidiv
pushf
mov
(bad)
cmp
popf
out
stos
aaa
repz
and
mov
pop
lea
cmps
pop
pop
cmps
popa
mov
cmp
and
push
std
jmp
lea
cmps
inc
adc
push
sbb
int
and
mov
fidiv
cmps
loop
sub
lods
(bad)
add
xchg
jno
(bad)
scas
mov
scas
loop
xlat
loopne
ficom
lods
test
dec
ret
aad
lahf
rcl
loop
mov
pop
jnp
dec
scas
push
data16
repz
adc
icebp
push
mov
sar
(bad)
mov
inc
mov
push
xor
pop
stos
cmp
sbb
push
dec
out
cmp
iret
scas
in
add
fdivp
add
fsubr
sub
ror
nop
jne
dec
stos
pop
push
mov
sbb
push
(bad)
imul
test
xchg
repz
mov
sub
(bad)
pop
test
outs
add
pop
pushf
xchg
jb
sub
iret
adc
and
out
or
dec
mov
cmp
mov
and
adc
jge
mov
jb
popa
xor
arpl
mov
cmps
dec
push
inc
sub
dec
sahf
jae
std
fisttp
jl
cmp
adc
mov
popf
inc
(bad)
loope
cmp
movs
loopne
pop
mov
xor
int3
cwde
push
jnp
aad
jge
sahf
mov
daa
out
ds
xor
test
cmp
inc
xchg
or
or
test
xor
jmp
in
aam
inc
push
add
test
or
outs
push
sub
pop
(bad)
call
ret
and
cli
mov
xchg
mov
rol
(bad)
shl
add
js
jmp
retf
(bad)
inc
xchg
or
aam
xor
loope
sbb
shl
pop
rol
mov
inc
outs
lock
dec
sbb
cmps
shl
pop
fisub
hlt
scas
jl
jnp
in
shr
cs
retf
mov
sub
call
test
sub
stos
dec
pop
(bad)
push
je
and
xchg
dec
dec
dec
pop
push
fsub
mov
pop
or
xor
xrelease
jecxz
cmp
repz
jo
dec
aas
jne
mov
inc
or
nop
int
jae
cmp
sbb
jo
cwde
rcr
xlat
repnz
mov
jge
mov
mov
xor
retf
add
and
in
push
rcl
(bad)
retf
imul
lahf
mov
test
cmp
ret
je
div
sub
adc
aaa
adc
pop
pusha
aas
adc
mov
(bad)
(bad)
idiv
pop
in
and
out
sub
out
cmp
push
sub
aas
std
and
adc
popf
xor
jbe
push
push
jns
lods
jle
push
scas
dec
cwde
je
mov
stc
pop
dec
stos
stc
jno
lahf
aas
loop
dec
adc
shl
sub
cmps
cmp
stc
and
ja
(bad)
test
pop
jno
dec
arpl
inc
je
cmp
popf
in
cmc
mov
ficom
mov
push
add
ret
jp
cli
call
cbw
inc
outs
pushf
pop
adc
or
ret
je
cwde
sub
push
outs
outs
jp
jno
iret
retf
loope
xchg
(bad)
jbe
fnstsw
push
stc
mov
adc
jmp
dec
jne
dec
sbb
mov
dec
push
fimul
lds
jmp
(bad)
imul
scas
(bad)
sbb
shl
sar
fwait
out
dec
gs
ss
xor
leave
jecxz
add
sub
push
stc
or
dec
out
sub
cmp
aas
mov
adc
aas
sub
pushf
int
scas
fild
sub
jmp
cmp
scas
leave
mov
cs
sbb
(bad)
sub
mov
mov
aam
sub
pop
mov
rcl
and
mov
jne
ins
push
es
mov
je
adc
jl
fimul
pop
cmp
stos
paddd
dec
retf
arpl
adc
dec
mov
call
scas
repnz
inc
push
xlat
fidivr
jge
push
add
cmps
(bad)
cmp
repnz
sti
ds
call
out
jbe
aam
fmul
in
xchg
sahf
xchg
scas
xchg
dec
xchg
mul
test
jmp
int3
lods
add
sbb
into
out
push
imul
inc
push
sbb
movs
pop
push
popf
cmp
sub
cmp
adc
lods
mov
lods
dec
ror
cmps
xor
pop
test
sub
add
xchg
jl
clc
mov
aaa
enter
push
push
xlat
xchg
inc
cli
popf
loope
test
xchg
ins
sub
mov
mov
mov
jmp
push
sub
popf
push
cld
(bad)
jecxz
jl
call
or
push
dec
pop
cmp
mov
and
mov
dec
int3
jmp
les
or
leave
scas
imul
out
(bad)
in
and
add
xchg
(bad)
loopne
sub
imul
pop
les
cmp
cmp
out
ds
mov
sbb
fsubr
xchg
test
sub
inc
stc
aaa
push
stos
in
mov
shl
xor
xchg
adc
rcl
fst
ins
test
or
jnp
mov
or
sbb
cs
rcl
jno
rcr
push
(bad)
or
arpl
cmp
sbb
mov
int
adc
cmc
sbb
or
scas
inc
dec
cmps
jp
mov
cmp
fisttp
jl
retf
mov
sub
lods
out
mov
sub
push
add
xchg
sbb
mov
sahf
jl
sbb
ja
or
and
dec
in
mov
in
sbb
push
pop
(bad)
out
mov
gs
mov
push
les
je
cmps
dec
jae
jbe
fimul
xchg
(bad)
jbe
fsub
ds
add
and
pop
nop
pop
cmp
mov
xchg
out
mov
imul
xor
sbb
pop
dec
pop
in
xlat
cmp
or
jle
sub
or
xlat
std
jnp
sahf
gs
jmp
hlt
test
dec
dec
(bad)
je
fisub
add
scas
sub
mov
dec
adc
stos
out
push
into
cmp
sbb
lahf
adc
cmp
test
scas
mov
push
cs
xor
ja
fdivr
mov
jne
adc
ror
lds
inc
imul
(bad)
jnp
into
and
inc
(bad)
sub
(bad)
idiv
jb
or
cmps
mov
sub
lahf
mov
mov
cmp
jle
enter
lods
pop
gs
jb
mov
push
stos
test
mov
(bad)
jne
cmp
jge
lods
sub
(bad)
jo
xchg
adc
pop
xchg
out
jnp
loopne
sbb
arpl
cmp
pop
add
data16
mov
fistp
pop
or
(bad)
add
xchg
cmp
cmp
mov
pop
dec
pop
adc
(bad)
push
fist
push
test
fstp
mov
cmp
lods
repz
mov
loope
fidiv
pop
pop
mov
inc
jle
lock
addr16
sti
jmp
enter
fdivr
adc
sub
xor
inc
sbb
call
scas
inc
cmp
pop
sub
retf
nop
mov
aad
pop
xchg
sbb
mov
or
outs
cs
inc
das
dec
dec
clc
jne
stos
ja
xchg
out
cmp
and
out
ja
push
popf
enter
adc
sbb
push
out
scas
test
jo
cmc
fwait
mov
and
or
cmp
mov
xchg
mov
je
iret
outs
mov
push
or
stos
add
(bad)
or
fist
push
shl
adc
pop
enter
test
and
mov
push
retf
adc
mov
ins
cwde
xor
inc
ja
retf
icebp
mov
(bad)
call
cdq
pop
cmp
sbb
jnp
fs
cmp
sub
scas
stos
popf
lahf
outs
in
popf
iret
mov
mov
mov
ins
scas
jecxz
fisubr
inc
fs
mov
xor
icebp
dec
mov
fisttp
dec
xlat
jecxz
add
or
icebp
dec
shl
or
adc
add
jmp
sub
mov
cmp
sar
sub
cmp
sbb
pop
loope
sub
lods
inc
mov
mov
(bad)
and
into
jb
push
sbb
and
outs
ins
add
jecxz
pusha
xor
xor
lods
mov
push
dec
fbstp
std
jge
int
mov
cmps
daa
test
jl
pop
mov
jle
pop
cmp
sar
loopne
gs
xlat
rcl
cli
or
mov
xor
clc
push
std
adc
retf
xchg
push
in
movs
dec
adc
add
mov
mov
pusha
scas
out
movs
xchg
adc
add
sbb
adc
xchg
inc
mov
inc
cwde
xor
retf
stos
xor
rcl
pushf
clc
in
(bad)
xchg
mov
xchg
mov
sub
ror
stos
inc
sub
and
hlt
lea
(bad)
pop
shl
sub
ss
test
sub
add
movs
fidiv
jp
mov
mov
lods
mov
jo
and
shr
test
pop
sub
leave
cmc
inc
movs
xor
loopne
inc
jge
loope
fcomi
(bad)
es
push
push
lea
mov
outs
push
inc
jmp
cmp
stos
inc
xchg
(bad)
sbb
push
push
shr
je
mov
jg
std
inc
in
addr16
ror
cs
aaa
sbb
arpl
outs
inc
cmps
adc
inc
ins
or
adc
fdiv
cmps
sub
push
cdq
cmps
ror
xlat
imul
sub
push
nop
fcomp
push
hlt
push
retf
or
or
or
dec
mov
mov
mov
out
inc
mov
jnp
and
dec
adc
adc
loop
loop
adc
jmp
aaa
stc
mov
cwde
dec
repnz
cmp
sti
addr16
leave
jmp
in
adc
pop
push
push
dec
xchg
and
inc
in
int3
stos
jae
dec
mov
fcom
add
rol
fisttp
call
sbb
pop
jo
add
popa
addr16
mov
out
jb
popa
dec
push
mov
push
ins
mov
add
push
test
adc
xor
jae
in
ds
jno
aas
mov
mov
push
and
sub
ret
jge
call
lods
and
pop
xchg
xchg
int
sub
ja
xor
xlat
push
jmp
xor
dec
push
das
aaa
scas
lock
push
fwait
jp
mov
(bad)
stc
cs
nop
int
gs
dec
mov
lock
cli
movs
xor
mov
mov
xor
add
ret
sar
imul
sbb
ja
jo
movs
nop
leave
cmp
sbb
test
inc
push
add
sbb
mov
mov
sub
arpl
mov
in
xchg
and
jmp
pushf
xor
imul
mov
ins
div
fistp
or
adc
mov
push
test
shr
jnp
and
leave
mov
leave
sbb
xor
adc
leave
ret
cmp
and
pusha
repnz
pop
inc
mov
mov
mov
adc
retf
std
sub
jmp
add
(bad)
int
out
and
mov
fnstcw
jmp
data16
pop
iret
pop
arpl
int
jp
shl
pop
outs
out
and
pop
outs
adc
shr
mov
fstp
sahf
fldcw
(bad)
cld
shl
arpl
mov
cmp
fstp
imul
test
notrack
inc
xlat
loopne
loopne
sub
icebp
jmp
xchg
das
fs
mov
rcr
popf
aas
shl
cmc
ret
push
imul
rcr
in
imul
jnp
push
xchg
mov
enter
or
dec
dec
inc
mov
sub
sbb
sub
xchg
sbb
nop
or
sbb
add
out
ins
sbb
push
cmp
pop
(bad)
cmps
(bad)
into
xchg
iret
cmp
cld
sbb
rol
jno
lock
sub
xor
test
adc
adc
(bad)
(bad)
in
fld
sub
dec
mov
add
inc
int3
sbb
mov
ret
cwde
xor
mov
mov
nop
out
sub
add
dec
data16
jbe
lods
mov
xor
vpor
dec
(bad)
fidiv
rol
xchg
jbe
cld
cmp
jno
(bad)
out
pop
add
sub
fmul
out
dec
add
push
mov
aam
jecxz
cmps
push
or
mov
pop
inc
into
in
loope
(bad)
enter
or
push
mov
push
jno
bound
xchg
je
xor
retf
dec
dec
loopne
xor
sub
mov
xor
aam
mov
jmp
stc
out
imul
pop
sbb
fcomp
sub
jg
mov
aam
push
int
add
ja
dec
iret
pop
sti
xor
shl
movs
mov
cmps
pop
fist
or
rcl
xchg
jg
movs
adc
adc
sbb
sahf
fwait
jg
mov
adc
test
xchg
adc
jae
jg
repz
and
aas
je
push
push
sbb
jecxz
mov
xor
dec
xor
idiv
outs
jmp
mov
(bad)
sbb
cmp
int3
loope
cmc
loop
dec
jae
xchg
ret
push
and
add
in
cli
(bad)
fs
lods
idiv
scas
iret
scas
mov
sbb
sahf
in
(bad)
adc
adc
xchg
loopne
inc
mov
push
add
inc
pop
test
lock
popf
out
lahf
push
js
test
ins
mov
sub
jg
call
adc
inc
push
xchg
nop
push
jg
mov
xor
add
push
rol
mov
xchg
mov
xor
jl
and
ins
icebp
pop
scas
stos
adc
and
adc
or
outs
push
fsubr
xor
jecxz
jmp
icebp
inc
cdq
retf
xchg
sub
pop
movs
pop
xchg
adc
inc
xor
aas
inc
out
les
inc
arpl
push
mov
(bad)
xchg
lock
call
sbb
lahf
add
imul
inc
aas
push
mov
test
add
cmc
push
jns
mov
pop
push
adc
in
inc
dec
cld
test
popa
pop
in
in
sub
pop
ret
and
fidiv
and
sub
mov
or
int
dec
mov
adc
jmp
inc
adc
dec
or
inc
imul
dec
gs
sub
jl
push
enter
jno
sub
cmps
xchg
xchg
adc
aad
test
movs
jmp
lods
cmps
xor
ins
std
push
sbb
mov
add
push
push
add
dec
scas
sahf
(bad)
cmp
sbb
sbb
fs
mov
lahf
mov
movs
ins
call
add
imul
lds
and
mov
fwait
sbb
sub
sbb
mov
jmp
dec
cmps
or
jbe
out
inc
imul
xchg
popf
stc
(bad)
icebp
sbb
jle
xor
cld
adc
cmp
inc
int3
add
mov
mov
fsubr
dec
dec
jbe
xchg
fisttp
popf
pop
mov
mov
xor
mov
cmp
sbb
jb
add
inc
mov
add
mov
mov
js
mov
dec
push
dec
les
add
fild
mov
inc
cmp
or
xlat
cmp
sti
fdiv
mov
stos
aam
mov
mov
mov
stc
repnz
mov
inc
jecxz
fs
mov
xchg
(bad)
(bad)
aam
dec
and
dec
test
mov
sbb
pop
sbb
push
cmp
sar
pop
sub
jnp
cdq
adc
inc
rcr
call
push
or
test
cld
es
adc
sar
loope
cmp
mov
(bad)
push
or
inc
sahf
fcom
sbb
data16
out
dec
cwde
sub
ins
and
push
(bad)
fldcw
adc
hlt
xor
jo
rol
sbb
sub
ficomp
jnp
test
push
stc
sub
sub
or
xchg
not
sbb
xchg
jge
cdq
test
(bad)
inc
loop
retf
jo
out
dec
lds
cmps
out
iret
xlat
pop
iret
sbb
pop
gs
cmp
sti
pop
adc
add
call
sub
icebp
inc
outs
add
adc
xor
and
lahf
into
and
cmp
movs
mov
fsub
ret
or
add
or
xchg
outs
ror
xchg
data16
push
adc
jmp
cld
mov
sub
push
sbb
ja
pop
cwde
and
push
sbb
cld
jbe
adc
push
adc
inc
out
push
inc
shr
xor
push
hlt
dec
retf
sub
aaa
xor
xor
sahf
repz
adc
xor
imul
add
sahf
push
adc
out
add
inc
out
fdivr
lods
in
jmp
inc
out
add
cmps
les
in
(bad)
jnp
push
mov
(bad)
mul
outs
leave
test
jl
inc
and
adc
dec
std
mov
bndldx
out
cdq
pop
jmp
aaa
mov
sbb
mov
fisubr
std
mov
inc
xchg
(bad)
jmp
xor
inc
mov
dec
jecxz
push
sti
(bad)
jae
gs
cmp
jmp
idiv
push
movs
scas
adc
fldenv
adc
popf
mov
dec
ja
inc
mov
sbb
sbb
or
pop
pop
push
add
ret
jno
pusha
and
fdiv
or
mov
xchg
pop
xchg
pop
ins
mov
mov
pop
repz
retf
aaa
pop
stos
or
loopne
sbb
or
enter
call
sub
retw
loop
sahf
loopne
imul
out
ja
and
cdq
call
jp
push
cli
clc
adc
cmc
push
es
repz
int
fistp
imul
sub
pop
dec
mov
xchg
push
fadd
fcomp
cmp
loope
call
retf
add
(bad)
sbb
push
mov
mov
gs
cmp
and
jbe
in
aam
xor
popf
cmps
movs
pop
jecxz
mov
shr
out
dec
or
or
cmps
es
mov
or
out
push
imul
inc
(bad)
cmp
div
pop
mov
retf
mov
and
punpckhwd
jp
(bad)
adc
inc
cld
cmp
push
pop
fsubr
rcl
dec
mov
(bad)
loop
adc
jl
rcl
stc
imul
pop
js
mov
xor
fldenv
sbb
cmps
jle
mov
mov
(bad)
pushf
(bad)
adc
in
xchg
not
add
call
outs
pop
mov
pop
bnd
xchg
pop
clc
or
inc
mov
fldcw
test
sub
xor
pusha
jae
pop
or
lods
add
scas
mov
in
push
lea
retf
pop
test
and
aad
and
cwde
adc
test
dec
push
xchg
cmp
pop
push
dec
or
lahf
jp
es
fbstp
mov
xchg
jno
jo
add
movs
outs
jmp
imul
and
dec
xchg
mov
mov
dec
mov
in
cmp
dec
sbb
fmul
jecxz
mov
mov
cmp
es
mov
popf
cmc
sbb
adc
cmp
adc
repnz
push
mov
test
cmps
rol
stos
mov
pop
rol
xor
scas
dec
push
into
push
sbb
iret
scas
pop
inc
sbb
sti
dec
mov
fnstenv
jb
xchg
in
push
push
data16
xchg
nop
ja
test
mov
mov
mov
cwde
cmp
inc
mov
outs
ja
fistp
pusha
push
and
test
push
sub
jl
lds
aam
jl
mov
out
imul
and
push
std
mov
ins
aam
xlat
cs
cmp
cmp
pop
(bad)
ret
pop
fadd
push
sub
lds
cmp
je
or
or
ds
cmp
cmps
mov
pop
mov
adc
jae
push
dec
push
push
fs
cmps
adc
push
outs
ss
inc
fs
lds
push
pushf
fwait
and
aam
xchg
cmp
mov
test
ss
daa
dec
arpl
inc
ret
icebp
lea
retf
sbb
jle
inc
push
(bad)
pop
push
stc
xchg
call
rol
test
pop
adc
test
inc
mov
mov
out
(bad)
cli
pop
scas
push
adc
dec
ds
jp
(bad)
push
sub
iret
movs
jmp
out
fld
ds
or
and
cmps
add
aad
lahf
xor
cwde
jae
in
mov
clc
les
pop
xchg
stos
mov
or
(bad)
cmp
xor
cmp
cdq
daa
jns
test
iret
test
jmp
and
dec
jne
or
gs
(bad)
in
pop
scas
inc
mov
jge
push
cmp
iret
pop
push
adc
add
sti
dec
xchg
inc
(bad)
lahf
and
gs
fstp
jge
leave
add
pop
xchg
cmp
jmp
sbb
or
mov
ret
std
test
push
cld
xor
jno
sub
shl
mov
jge
jne
cwde
sub
lods
add
lds
call
mov
inc
push
pushf
cmp
sbb
push
les
mov
xchg
dec
adc
sub
pop
jno
popa
addr16
jno
rcr
jecxz
and
mov
pusha
inc
xor
xchg
adc
and
movs
ror
mov
loope
mov
jp
in
mov
int3
mov
cmp
lods
scas
jns
cmp
das
xor
pop
aam
pop
aaa
xchg
push
mov
dec
add
jno
imul
fld
add
sti
std
push
adc
or
mov
iret
xor
inc
cmps
sbb
stos
sbb
and
xor
jecxz
add
cli
sbb
xchg
mov
or
aaa
cmp
ja
mov
dec
dec
inc
xchg
jbe
inc
loop
pushf
in
or
cmp
pop
jecxz
loopne
sub
outs
pop
pop
jb
int
adc
aaa
or
cdq
push
jnp
repnz
adc
cmps
xor
add
lods
imul
or
out
adc
jno
in
xor
jbe
test
sti
shr
aaa
(bad)
pop
cmc
test
xor
cli
adc
xchg
test
dec
ror
js
mov
es
add
sar
add
enter
push
jbe
inc
pop
jp
cli
aad
fidiv
dec
pop
or
xchg
lea
out
mov
and
push
sti
dec
cdq
out
sub
dec
jp
inc
ror
sbb
lahf
xor
pushf
rcr
cmp
sub
push
je
movs
pusha
daa
imul
fistp
in
jmp
xor
(bad)
cmp
div
nop
in
sbb
inc
ins
test
mov
sahf
jp
out
inc
sbb
mov
into
adc
cmc
enter
inc
sbb
sbb
(bad)
cmp
cmp
dec
lds
sub
retf
and
sub
adc
sbb
hlt
test
xchg
clc
ret
xchg
dec
inc
adc
mov
icebp
add
sub
sub
stos
enter
dec
gs
sbb
movs
loope
push
pushf
and
adc
inc
fisttp
rcl
pop
hlt
adc
stc
inc
xor
bound
pop
jge
(bad)
mov
test
add
jmp
add
push
mov
xor
call
fwait
dec
test
retf
inc
pusha
cwde
lods
or
jmp
lock
loop
or
pusha
neg
sbb
int
sti
fs
sbb
jo
push
mov
pop
push
retf
into
mov
(bad)
push
xchg
ins
cmp
push
mov
and
jae
xor
fnsave
cmp
(bad)
in
and
cmp
into
add
or
dec
mov
jle
xchg
mov
js
pop
sub
cmp
movs
mov
lea
add
xchg
cmps
inc
push
test
dec
or
sbb
push
push
(bad)
push
pop
arpl
push
pop
jge
in
sbb
jl
je
aaa
in
sub
mov
adc
fcmove
test
inc
push
loop
mov
xor
sub
loop
mov
jae
adc
pop
dec
test
cmp
out
xor
and
cmp
jno
sahf
repz
ror
stc
sub
enter
jp
aam
int3
nop
sub
push
push
mov
je
hlt
lods
in
aad
loopne
sub
xlat
popf
sbb
mov
lock
(bad)
mov
cmp
cld
out
pop
mov
xor
shl
lds
leave
xlat
xor
inc
popa
pop
psubq
inc
or
sub
cld
lods
adc
fimul
push
or
jmp
inc
imul
in
leave
inc
out
js
cmp
cmp
xor
jg
je
xor
icebp
xchg
nop
cwde
cmc
enter
int3
(bad)
in
inc
adc
pop
add
(bad)
push
jp
je
arpl
or
js
jnp
xor
push
std
jp
pop
repz
xchg
popa
shl
xor
sub
cli
mov
pushf
xchg
and
dec
mov
fmulp
push
out
stos
mov
aam
push
stc
mov
call
jo
jno
in
add
aam
mov
pushf
jp
jnp
shr
loope
call
adc
add
and
cmp
dec
in
scas
rol
(bad)
mov
mov
mov
cmps
inc
lahf
pusha
and
push
mov
jge
and
hlt
add
frstor
daa
adc
fcmove
xchg
or
xchg
icebp
jge
add
das
in
jecxz
pusha
sar
es
fist
xlat
enter
cmp
test
stos
das
test
popf
push
mov
mov
lock
adc
shl
jle
mov
sub
cdq
popa
push
push
rol
loop
or
(bad)
mov
pop
mov
cmp
pusha
retf
mov
fldenv
add
jg
dec
(bad)
adc
bound
push
and
clc
out
inc
test
in
pushf
in
div
neg
repz
jno
sbb
adc
and
xchg
nop
outs
sub
and
(bad)
dec
jns
mov
inc
hlt
add
dec
mov
ins
mov
outs
cmp
jmp
xor
fs
push
xchg
and
rcr
sbb
call
lahf
hlt
(bad)
lahf
and
ss
div
xchg
scas
or
sub
mov
rcr
push
inc
das
cmp
loop
mov
lods
pop
out
mov
push
cmps
pop
ret
push
aaa
les
test
test
jmp
xchg
leave
stos
adc
out
int3
jns
sbb
loop
popf
imul
adc
mov
mov
aad
(bad)
into
inc
mov
es
jle
stos
mov
mov
xor
hlt
fdivr
inc
nop
mov
mov
sub
mov
sbb
test
aam
jl
nop
pop
sbb
pop
mov
pop
jo
movs
pop
jae
out
inc
call
in
xor
ja
and
fisttp
or
adc
and
arpl
pop
test
xchg
sbb
aas
bound
adc
test
dec
jo
mov
inc
mov
push
pop
jge
movs
nop
xchg
or
xchg
ror
xchg
mov
xchg
(bad)
fbstp
cdq
loope
fld
pop
jmp
cmp
loopne
aas
and
outs
inc
rcr
push
mov
loop
pusha
fbld
outs
add
sahf
and
jle
xchg
sahf
add
inc
add
xchg
out
xchg
fiadd
out
push
adc
dec
leave
leave
enter
jbe
xchg
cmp
arpl
cmove
loopne
sbb
cwde
pop
sub
add
jnp
out
scas
inc
jle
mov
and
add
mov
rol
xor
dec
push
(bad)
mov
clc
arpl
mov
mov
cmp
pop
arpl
iret
dec
popf
inc
(bad)
pop
fs
mov
sub
jg
jg
test
out
lahf
lea
leave
or
pop
repz
stc
cmp
cmp
cmc
fistp
xchg
mov
sub
pop
mov
out
inc
sbb
fistp
ret
lahf
movs
mov
inc
sub
inc
iret
jecxz
cmp
sub
(bad)
mul
call
fstp
jae
arpl
jae
mov
xchg
sbb
inc
sar
mov
vpmovsxwq
mov
xor
jo
ret
and
xor
cdq
stos
(bad)
stc
mov
push
xchg
lds
out
std
sar
mov
mov
mov
setb
inc
mov
not
sbb
mov
stc
jmp
sbb
jge
cmps
je
call
or
dec
mov
ret
pop
outs
int
sub
sub
sub
xor
jle
fmul
jo
call
mov
cmp
sbb
mov
dec
cmps
(bad)
out
pop
add
ret
dec
sbb
push
xchg
fstp
ret
add
stos
mov
inc
dec
and
add
mov
dec
int
xchg
add
pop
jmp
iret
scas
and
test
ret
mov
cs
repnz
pop
xlat
mov
mov
mov
out
cmp
arpl
and
rcr
dec
imul
pop
outs
stc
push
mov
sub
mov
xlat
mov
jge
aaa
jb
jbe
push
pop
mov
mov
mov
fdiv
push
mov
pop
fxch
cmp
retf
mov
(bad)
mov
xor
out
cmp
outs
imul
xchg
jns
add
mov
cmp
sub
cmps
test
js
sub
cmc
jg
arpl
ja
mov
push
pop
mov
addr16
movs
mov
jmp
dec
icebp
nop
sbb
in
popf
dec
cmps
push
and
sbb
push
fistp
mov
xchg
in
shl
jne
retf
and
int3
and
in
xchg
js
addr16
std
out
sub
dec
fcom
mov
lods
push
and
or
retf
nop
stos
addr16
sub
enter
cmp
jbe
cmp
add
mov
sbb
mov
aas
(bad)
push
stc
inc
imul
dec
cmp
ss
mov
addr16
push
add
(bad)
test
and
push
in
sbb
popa
out
test
add
push
jnp
sbb
call
mov
pop
sub
sbb
retf
adc
cmp
push
or
push
fwait
cmp
jp
test
jb
add
cmp
outs
sub
nop
sbb
ret
sub
or
or
jmp
jge
lds
dec
outs
mov
mov
cmp
mov
call
mov
out
sahf
movs
dec
mov
mov
and
push
imul
ficom
mov
xchg
cmps
(bad)
push
jg
test
fild
and
out
adc
clc
xor
xor
daa
(bad)
aaa
in
in
out
dec
and
or
sub
stos
sbb
frstor
out
popf
sahf
cmp
adc
mov
mov
hlt
(bad)
sbb
xlat
sar
jl
cld
inc
jb
add
shr
ss
scas
std
sub
stos
jp
add
xchg
mov
cmp
fmul
fdivp
add
cli
push
mov
jns
cmps
sub
shl
es
imul
out
je
fldcw
stos
push
adc
and
into
cwde
ins
jo
loope
lock
pop
sbb
or
inc
out
or
mov
push
(bad)
cmp
push
out
popf
and
mov
(bad)
stc
inc
int
xor
or
ret
fidivr
pop
jge
add
in
test
or
es
or
enter
sar
mov
stos
mov
pop
mov
test
dec
sub
mov
inc
xchg
mov
test
aam
jnp
icebp
lock
cmps
mov
aam
push
movs
jae
outs
push
sub
(bad)
call
data16
adc
or
jnp
mov
push
in
adc
xchg
sub
jae
gs
icebp
mov
imul
in
fcom
add
or
test
sub
push
cmp
ins
cmp
xor
ja
mov
adc
icebp
loopne
add
lahf
retf
pop
mov
pop
(bad)
icebp
je
sub
add
add
jl
pusha
cmps
mov
in
shl
sub
sahf
aam
cmps
jne
cmp
ret
fst
and
lahf
movs
and
mov
sbb
mov
cmp
jae
push
mov
cmp
aas
inc
fstp
iret
push
scas
push
or
jns
retf
push
pop
pushf
xor
repnz
rcr
fst
shr
lds
mov
ss
leave
cmc
adc
mov
ins
imul
fucom
lsl
xor
sub
cmps
mov
dec
xchg
(bad)
mov
and
mov
jo
jle
ss
jnp
int3
jmp
jne
enter
mov
dec
and
iret
push
fdiv
sub
call
aas
jl
(bad)
mov
jnp
into
cmp
movs
pop
dec
dec
sub
inc
stos
and
fdivr
mov
xchg
xor
push
sbb
(bad)
icebp
ror
sbb
std
fldcw
mov
add
mov
sbb
pop
stos
test
jnp
repz
pop
sub
es
push
or
mov
jmp
outs
dec
jg
out
sbb
ss
call
cli
sbb
inc
jns
test
jmp
jmp
inc
push
out
jmp
or
xor
pop
add
or
xchg
or
add
dec
sbb
out
movs
into
inc
push
and
jecxz
and
mov
std
shl
daa
cmp
xchg
mov
ds
dec
clc
in
sub
mov
push
jb
(bad)
stos
lds
fld
mov
xor
push
cld
inc
xor
inc
mov
push
into
loopne
enter
aad
inc
adc
aaa
xlat
sar
or
ins
(bad)
in
cs
inc
outs
popf
repz
mov
jle
pushf
mov
xchg
int
push
aas
add
loope
and
ja
ror
ds
mov
sub
sub
stos
dec
xchg
retf
cmp
xchg
out
mul
mov
add
test
pop
mov
ret
ret
jne
pushf
sub
jle
lahf
inc
mov
js
popa
lock
out
sub
lahf
mul
(bad)
push
dec
rcr
daa
scas
push
sub
repz
imul
mov
js
fiadd
div
xor
dec
jno
jmp
leave
loop
retf
lock
cld
jmp
gs
cld
ins
xchg
test
je
pop
sbb
int3
retf
rep
loopne
pop
xor
ins
mov
leave
mov
sahf
lods
mov
cld
mov
push
pop
std
sbb
into
loopne
cmp
push
adc
mov
imul
rcl
sbb
or
imul
jno
add
fisubr
and
mov
add
scas
test
jp
add
in
out
mov
push
pop
mov
scas
call
outs
aas
scas
aam
aas
shl
mov
and
xchg
ins
push
or
ftst
or
pop
sbb
mov
lods
jns
mov
xor
scas
push
lods
lock
dec
retf
out
or
sub
in
daa
pop
ret
jle
popf
and
mov
push
jmp
jns
jle
cmc
stos
mov
adc
(bad)
mov
ja
call
ins
jae
loopne
hlt
cmc
or
xchg
mov
dec
popaw
pusha
(bad)
in
inc
stc
cli
aad
add
aam
sti
bnd
frstor
test
std
xlat
push
jmp
pop
mov
jl
imul
icebp
push
movs
int
jo
lods
enter
repnz
or
push
xchg
gs
cmps
dec
vmovlps
test
idiv
jmp
push
cld
std
inc
pusha
dec
cmc
rcr
ret
mov
dec
cmp
add
fucompp
movs
mov
add
das
scas
and
jo
push
cmpxchg
lods
adc
test
out
dec
or
in
imul
xchg
push
mov
or
xlat
jns
repnz
pusha
xor
and
or
fwait
add
fsubr
(bad)
jne
fwait
rcl
int
int
cdq
mov
mov
add
imul
mov
(bad)
sub
xlat
arpl
lods
jne
push
fmul
popa
jb
jp
xor
jb
in
xchg
ja
mov
dec
int3
ins
pop
xchg
(bad)
pop
mov
dec
pop
imul
rol
addr16
jns
repnz
out
cs
mov
xor
mov
ins
inc
dec
inc
push
aam
xchg
lock
xchg
lods
fcomp
mov
shl
js
xchg
out
out
cld
imul
xor
mov
or
scas
pop
push
mov
sti
jmp
ret
push
neg
push
(bad)
xchg
hlt
xchg
imul
les
fimul
leave
add
adc
adc
sbb
and
in
jns
mov
xchg
arpl
das
pop
fisub
and
xchg
inc
in
nop
push
adc
dec
mul
std
adc
push
inc
sbb
or
pop
call
ins
sbb
out
sbb
neg
jl
(bad)
neg
out
jle
popa
repz
jecxz
mov
mov
cli
mov
fld
pop
push
mov
push
hlt
cli
nop
dec
fdiv
mov
mov
fimul
ds
fadd
cwde
add
sub
imul
mov
add
out
pop
push
pop
(bad)
xchg
into
fiadd
jo
or
loopne
test
sbb
out
pop
ss
das
outs
int3
jecxz
into
cdq
cmc
or
(bad)
inc
gs
ja
dec
adc
mov
mov
pop
pop
mov
jb
test
push
xchg
cs
xchg
xchg
or
fwait
adc
sub
test
test
xor
call
in
not
cdq
int3
mov
mov
adc
les
loope
push
pop
data16
ret
sbb
fistp
aad
jl
xor
push
xchg
dec
inc
push
sbb
adc
inc
and
push
dec
test
sahf
push
pop
sbb
ror
aam
out
jle
repnz
sub
shl
mov
out
mov
pop
dec
test
bswap
jp
sbb
icebp
movs
sbb
shl
xchg
bnd
call
or
lods
popf
addr16
mov
ds
std
adc
mov
fist
loopne
dec
pop
pop
push
ret
mov
or
cli
mov
cs
pusha
loope
push
xor
cmc
or
dec
ins
(bad)
mov
fmulp
(bad)
pop
ret
cld
adc
push
dec
cwde
shl
add
cld
mov
(bad)
repnz
xor
bound
cld
or
sbb
ret
repz
jg
or
jmp
rol
mov
or
das
mov
inc
stos
mov
push
(bad)
or
mov
and
rol
fistp
sbb
loopne
mov
pop
fisttp
mov
test
inc
push
out
push
push
mov
sti
stc
bound
mov
test
or
fwait
repnz
mov
fld
and
ret
or
dec
mov
push
dec
ret
fistp
aad
in
int
dec
or
and
out
ins
popf
dec
mov
adc
add
push
gs
or
xor
jne
mov
xor
out
ja
shr
mov
cli
aas
xor
sbb
xor
or
xchg
xor
out
icebp
jge
lods
mov
jo
jmp
xlat
jb
rcr
sti
add
inc
lods
xor
mov
xchg
imul
push
jne
sbb
xor
call
cmp
add
and
ror
lods
pop
(bad)
xor
arpl
mov
out
test
in
jge
add
pop
popa
mov
lea
sub
xor
sub
cmp
push
gs
in
movs
out
pop
pop
push
lahf
mov
gs
jecxz
shl
push
outs
push
popf
xchg
xchg
dec
mov
shl
xor
in
cmp
xor
das
sbb
scas
dec
icebp
pop
pop
gs
add
jg
shr
test
ja
mov
jle
adc
addr16
xchg
adc
adc
jae
in
(bad)
in
shr
jecxz
repnz
in
jle
stos
iret
outs
inc
push
xchg
out
cmp
arpl
daa
daa
call
fs
and
loopne
adc
pop
or
cli
jbe
mov
neg
lods
sbb
mov
loop
cmp
(bad)
mov
sar
(bad)
sbb
mov
adc
pushf
pop
rcpps
pop
push
scas
fdivr
dec
mov
ins
daa
test
mov
ret
js
sub
or
out
fstp
jns
test
das
and
mov
mov
shl
je
ins
mov
mov
xor
pop
xchg
fs
shl
dec
dec
scas
lahf
adc
lds
mov
cmp
sub
jg
dec
mov
add
push
xchg
(bad)
jle
loop
(bad)
fiadd
call
rol
ret
clc
ja
jmp
sbb
adc
or
bound
sar
and
jecxz
inc
dec
add
aas
jae
jnp
push
mov
loopne
jmp
pop
ror
mov
push
std
or
push
ins
js
bound
or
bound
sub
xlat
and
sbb
(bad)
std
cmp
dec
jne
mov
push
cmp
xor
pushf
mov
jmp
adc
scas
shl
int3
neg
sbb
adc
adc
mov
div
cmp
mov
sub
(bad)
cmp
retf
cmp
cmps
pushf
xchg
cmp
cmc
dec
mov
(bad)
repnz
xor
jmp
pusha
inc
in
pop
xchg
sahf
and
retf
ja
mov
xlat
mov
cmp
push
jp
jecxz
out
pop
hlt
xchg
mov
repnz
arpl
imul
jne
adc
aas
push
data16
ds
pop
xor
push
das
mov
jno
dec
call
sbb
pop
mov
jl
ins
mov
push
inc
shr
(bad)
ret
add
cmp
push
push
aaa
fs
test
and
repz
jae
xor
fnstcw
push
dec
rep
xchg
retf
push
pop
or
ds
jl
add
mov
mov
cli
or
push
mov
ror
sub
shl
shr
hlt
add
ds
dec
jmp
(bad)
(bad)
pop
and
sbb
jp
or
ret
jo
dec
pop
jge
push
xor
fadd
std
sbb
aaa
imul
jb
fidiv
aas
mov
mov
xchg
sub
cmp
std
dec
fimul
dec
inc
ins
mov
movs
cmps
test
cwde
cmps
inc
add
pop
xlat
cmp
cmp
jmp
inc
push
mov
push
mov
sbb
add
jbe
fstp
mov
xchg
leave
dec
or
ja
shl
adc
dec
push
in
stos
dec
mov
test
inc
sbb
inc
push
stos
push
mov
or
pop
(bad)
mul
outs
scas
mov
(bad)
and
xchg
out
mov
outs
jp
sahf
xchg
ins
aaa
jb
mov
xlat
or
xchg
inc
inc
pop
js
jbe
mov
inc
adc
sub
repnz
adc
pusha
ror
or
pop
mov
mov
call
sbb
xlat
sub
cmp
dec
(bad)
mov
pusha
lock
mov
das
fiadd
push
jle
sub
jmp
aad
arpl
fbstp
pop
cmp
outs
cmps
fisttp
adc
adc
adc
cdq
or
in
nop
mov
je
pop
iret
cs
lods
jbe
addr16
or
gs
inc
ror
sbb
out
jnp
into
sub
mov
jg
sub
inc
xchg
rcr
sub
mov
ins
into
xchg
or
mov
jno
dec
inc
cwde
rcr
fsin
mov
mov
dec
fs
stc
pushf
mov
mov
in
mov
push
in
faddp
mov
ss
pop
lahf
pop
and
dec
xchg
lods
stc
inc
ret
adc
mov
mov
jmp
fnstsw
xor
jl
cmp
xor
xor
loopne
pop
push
xor
xchg
jg
call
lock
inc
adc
and
xlat
repnz
neg
fstp
inc
call
cmp
ret
jmp
cmp
xor
push
(bad)
iret
(bad)
and
and
lds
or
or
into
xor
(bad)
sbb
push
or
and
mov
cmp
out
push
mov
ret
fsub
jecxz
hlt
shl
push
pop
sub
fsubrp
popa
int
mov
jno
and
lahf
js
or
pop
cdq
stc
aaa
adc
push
in
jge
lods
xchg
xchg
mov
add
adc
shl
add
cwde
aas
stc
int
outs
jbe
add
inc
pusha
mov
adc
jb
jae
sqrtps
fstp
dec
inc
adc
jge
mov
test
lock
ins
jne
fadd
add
adc
mov
push
pop
cwde
dec
push
bswap
imul
mov
inc
sahf
mov
test
fs
pop
xchg
arpl
rcr
retf
fwait
lods
mov
lock
jne
dec
and
fisubr
test
les
mov
jns
movups
jb
xlat
call
xchg
dec
sahf
hlt
mov
aas
shl
inc
mov
mov
jl
adc
mov
inc
xchg
or
cli
retf
outs
dec
dec
int
pop
mov
out
sbb
inc
sbb
add
retf
lahf
sbb
add
jl
jae
and
xchg
mov
cmp
cmp
dec
icebp
xchg
scas
(bad)
fwait
mov
loop
adc
xchg
cmp
pop
adc
gs
data16
loope
or
ss
pop
push
sub
in
mov
inc
xor
ins
lahf
inc
jg
adc
cmp
hlt
xor
cmps
movs
pop
pop
fsubr
mov
push
push
movs
mov
pop
pop
push
adc
mov
ffree
mov
fstp
in
and
(bad)
(bad)
cmp
lods
add
jecxz
stos
pop
and
cmps
fnstenv
inc
jecxz
movs
cli
inc
std
shr
ret
xchg
sub
stos
cdq
xor
xchg
jl
sub
test
inc
fild
pop
js
lods
mov
es
bound
mov
cmp
cmp
and
inc
and
mov
jp
fwait
cmps
int
sti
jb
xchg
pusha
mov
xor
xchg
pop
aas
and
mov
outs
das
fidivr
repnz
push
popf
pop
loopne
sub
not
inc
ja
add
(bad)
mov
push
fstp
mov
mov
fwait
repnz
mov
out
sti
or
xor
jmp
jge
stos
adc
hlt
hlt
push
bound
scas
push
mov
leave
adc
inc
mov
or
push
(bad)
pop
add
jmp
inc
repz
push
mov
lock
daa
popf
call
js
xchg
shr
mov
xor
fnstcw
sub
xchg
iret
leave
in
cmps
or
inc
inc
mov
std
cmp
js
or
mov
popf
jbe
imul
aas
cmp
addr16
push
jne
mov
inc
push
mov
pop
popf
or
ret
stos
lahf
sub
cdq
movs
dec
jge
cmp
fst
jge
xchg
out
pop
call
jecxz
int3
popa
fwait
inc
in
add
out
cmp
dec
cs
jmp
aaa
jmp
sbb
cld
pop
sbb
pop
sbb
pop
retf
inc
ja
ss
lock
and
addr16
xor
nop
mov
jo
pop
and
loope
inc
loop
pop
xchg
and
fwait
jmp
mov
pop
in
arpl
arpl
call
pushf
ja
fnstenv
cmp
test
jae
mov
sahf
cmp
mov
dec
stc
movs
data16
push
mov
push
test
mov
add
mov
push
int3
leave
inc
mov
daa
cmc
inc
push
enter
dec
jl
(bad)
dec
mov
adc
and
loope
repnz
test
or
ret
frstor
lahf
pop
push
test
out
int
fs
pop
add
clc
mov
imul
stc
fstp
dec
fst
xor
pop
mov
inc
dec
sar
aas
mov
es
fsub
scas
mov
inc
stos
dec
xchg
push
int3
mov
lea
pop
mov
add
sbb
fdivr
add
sub
or
leave
pop
aas
adc
rol
cmp
dec
stos
nop
sbb
neg
pop
mov
sbb
lods
add
inc
adc
lea
mov
aas
pop
data16
das
scas
pop
adc
and
pop
int3
das
pop
inc
push
dec
xor
not
push
xchg
or
mov
or
sahf
mov
and
in
mov
push
int
pop
addr16
leave
xlat
push
fwait
sub
fdiv
enter
pop
outs
jns
and
sbb
(bad)
cmc
aaa
pop
or
mov
push
sbb
mov
cmc
mov
inc
test
ret
mov
nop
mov
inc
xor
aad
loope
xchg
lahf
cwde
idiv
xchg
mov
in
in
in
xchg
sub
mov
jge
jnp
jne
and
sub
popf
test
add
dec
in
mov
mov
adc
push
push
cmp
sub
int
inc
pop
jmp
push
push
cmp
dec
or
cmc
sar
jmp
add
sbb
cmp
ja
pushf
push
mov
jle
jecxz
clc
pop
push
xor
push
push
stc
div
adc
cmp
xchg
(bad)
hlt
xchg
mov
dec
sub
sub
mov
jb
mov
pop
fild
push
shr
shl
aaa
inc
divps
add
gs
xchg
in
(bad)
mov
and
stc
and
inc
pop
dec
mov
loope
fmul
ins
cmps
fcmovb
or
mov
iret
and
leave
lds
xchg
loopne
addr16
call
pop
push
pop
pop
xchg
sub
jecxz
dec
pop
ss
and
cs
enter
cdq
mov
adc
adc
rcl
cmp
mov
add
mov
std
cmp
ins
js
xor
cdq
mov
push
push
mov
xchg
mov
add
or
gs
int
stc
push
repz
jp
push
cmp
inc
loopne
test
push
xor
and
xchg
test
and
int
dec
aas
jno
cs
cmp
jne
daa
cmp
mov
cmp
ss
and
mov
push
popa
(bad)
jbe
(bad)
sets
repnz
dec
cwde
xlat
mov
shr
add
ror
adc
shl
mov
mov
rcl
pop
sub
rcr
movs
pop
or
loopne
push
(bad)
fld
fcomp
call
inc
(bad)
std
stos
hlt
lock
adc
push
xchg
movs
add
(bad)
and
leave
jg
jae
add
push
pop
lahf
sbb
fidivr
or
adc
cmp
int3
inc
and
sbb
test
and
mov
mov
adc
adc
inc
popa
jbe
add
jl
dec
and
ror
ss
or
xlat
add
lock
out
aad
leave
(bad)
sti
js
pop
xchg
push
movs
mov
test
push
inc
pop
adc
out
xchg
pop
adc
in
push
in
jo
je
lods
inc
xor
(bad)
mov
xor
imul
repz
scas
cmp
sub
xchg
test
adc
fwait
rcr
xchg
icebp
(bad)
sub
mov
into
lds
push
cmps
retf
jno
xchg
jl
xchg
into
dec
fild
or
cmps
cmp
jb
enter
outs
mov
mov
pop
dec
cdq
dec
ins
jl
sar
lock
in
loop
xlat
xor
sbb
jg
nop
add
retf
imul
in
scas
(bad)
push
imul
popa
(bad)
ins
sub
outs
mov
in
pop
cmps
push
xor
cmps
jo
dec
fiadd
push
or
outs
mov
mov
jmp
sbb
(bad)
sahf
out
and
mov
pop
push
push
adc
xchg
cmp
aas
aaa
loopne
push
sahf
fs
dec
test
inc
adc
push
repnz
push
cmc
add
cs
mov
adc
das
sbb
enter
mov
repz
lahf
jmp
call
jne
retf
pop
dec
push
push
js
data16
mov
sbb
es
js
inc
movs
loope
mov
adc
fwait
das
call
xchg
dec
stos
inc
xchg
sbb
xor
popa
or
mov
push
mov
dec
ds
sub
cmps
mov
adc
(bad)
in
js
test
adc
popf
in
adc
loopne
and
retf
in
mov
gs
jp
clc
xor
lods
gs
sbb
mov
push
loop
xchg
push
out
aaa
mov
jno
xor
es
or
arpl
das
mov
pop
xchg
or
xchg
adc
pushf
aam
fs
push
test
jnp
adc
mov
data16
or
in
sub
imul
popf
cmps
or
je
mov
dec
pop
sti
not
movs
dec
iret
bound
dec
pop
jmp
cli
sbb
pop
mov
faddp
cmp
cmps
(bad)
aad
sbb
scas
lods
add
mov
or
pop
xchg
push
(bad)
jo
int
je
pusha
stos
adc
in
inc
lahf
cmp
rcl
repnz
sbb
push
test
rol
repz
les
cmp
adc
jmp
xchg
sub
mov
in
mov
addr16
inc
(bad)
mov
mov
pop
mov
ins
adc
xlat
icebp
xor
out
in
data16
sub
lods
lock
dec
dec
das
adc
add
pop
xor
popf
dec
cmp
xor
test
enter
or
cmp
inc
add
mov
cmc
pop
imul
sbb
and
mov
int3
sar
scas
das
jbe
jno
cwde
ins
sbb
aaa
sub
add
lods
in
jge
mov
sbb
leave
ins
mov
pusha
ins
outs
mov
ins
cmp
sbb
jne
mov
xchg
inc
adc
js
fdivr
scas
inc
test
bound
dec
adc
dec
loope
pushf
pop
lds
mov
imul
inc
pop
jle
mov
loop
adc
sub
mov
lahf
test
fiadd
add
xor
fcomip
mov
sub
outs
stc
sbb
mov
stos
mov
push
lahf
cmp
cmp
push
dec
cmp
inc
js
ror
in
dec
jnp
(bad)
cmp
and
xor
cmp
xor
xor
mov
inc
idiv
add
cmp
inc
ret
les
call
jle
adc
pop
and
sub
jp
stos
pop
cdq
cmp
mov
xchg
call
or
jmp
rcl
arpl
mov
pop
es
xchg
inc
shl
inc
mov
mov
mov
retf
pop
aas
mov
xchg
pop
sub
fucomi
ja
fsub
cwde
jno
aad
stos
(bad)
ja
or
jnp
or
mov
arpl
push
cmp
aas
cmps
scas
push
mov
cs
jo
es
sbb
(bad)
mov
pop
ficomp
shl
mov
(bad)
mov
iret
adc
hlt
sbb
mov
aaa
xor
push
sbb
lds
cmp
pushf
mov
stos
rcr
mov
xchg
cmp
iret
push
jo
and
out
xor
mov
les
int
jecxz
jecxz
movs
jns
jne
js
ins
sbb
aam
mov
xchg
jmp
dec
fs
push
pop
in
je
xor
cmc
or
xchg
pop
les
push
mov
dec
pop
and
mov
dec
ret
sbb
popf
pop
pop
add
fdivr
sar
aam
inc
and
mov
aaa
sbb
ins
jecxz
in
ret
ficomp
lahf
out
pop
outs
cdq
inc
push
inc
push
push
pop
addr16
addr16
pop
and
jo
mov
xchg
xchg
push
test
aaa
pop
shr
ror
fisttp
jnp
addr16
call
xchg
jmp
ja
jg
(bad)
outs
in
outs
xchg
mov
xchg
cli
or
fwait
test
or
jecxz
adc
adc
ja
movs
ins
movs
stos
retf
jmp
(bad)
sbb
jge
push
mov
iret
xchg
add
xor
pop
stc
adc
retf
nop
rcr
add
and
fldenv
xor
mov
lea
push
sub
xchg
jge
loopne
imul
js
mov
(bad)
inc
cdq
xor
(bad)
pop
or
(bad)
cmp
(bad)
fsubr
push
add
scas
xlat
aad
jecxz
imul
imul
sub
sbb
push
jmp
add
mov
jecxz
ficomp
jae
test
mov
enter
jo
xor
rcr
ret
imul
and
cmp
mov
loopne
retf
mov
and
stos
rol
loop
movs
xchg
aas
aad
add
adc
xchg
push
jns
aaa
in
add
push
sahf
jp
jecxz
pusha
add
and
mov
(bad)
rcl
jae
(bad)
movs
jg
and
cli
arpl
add
dec
xchg
stc
hlt
xor
(bad)
ja
scas
sbb
shr
and
mov
mov
xor
into
int3
xor
sahf
iret
imul
and
push
mov
out
popa
add
comiss
push
dec
imul
fs
and
adc
jnp
push
cmps
jb
jmp
inc
not
mov
mov
inc
or
jns
stc
push
loopne
jne
inc
ja
sbb
stc
push
enter
jle
adc
or
in
pop
push
scas
in
shl
xor
ficomp
loopne
rol
jo
lods
shl
ja
std
shl
in
rcr
in
push
daa
cmp
push
adc
adc
pop
mov
mov
xchg
xchg
jno
test
or
cwde
(bad)
(bad)
outs
sbb
adc
xchg
or
push
push
inc
and
jl
adc
mov
les
fbld
(bad)
mov
gs
mov
(bad)
xchg
retf
int3
call
jo
mov
(bad)
fs
in
test
aas
out
jecxz
je
ret
jecxz
pop
sar
cmp
jp
repz
pop
mov
pop
mov
pop
or
popf
pop
dec
adc
pop
in
or
idiv
xchg
mov
int3
xor
pop
jae
push
inc
inc
push
adc
and
in
adc
mov
dec
in
mov
inc
inc
add
xor
cmp
jge
adc
xor
sub
shr
xor
jp
xor
ja
movs
not
push
lods
sbb
inc
and
adc
mov
mov
mov
repz
shl
int3
adc
call
dec
jne
loope
out
xchg
call
retf
ds
addr16
scas
mov
xchg
jo
(bad)
mov
movs
jns
test
xor
fild
fadd
das
call
jp
das
stos
pop
sub
(bad)
jmp
test
sbb
cmp
mov
mov
aas
cmp
and
dec
push
outs
adc
dec
pusha
inc
sbb
addr16
scas
cli
enter
jmp
xchg
test
fcom
cmps
pop
cwde
test
out
lock
test
aam
in
out
dec
cmps
pop
mov
pop
mov
jg
jne
mov
mov
repz
jg
add
mov
lea
xchg
stos
lahf
and
sub
movs
in
mov
fdiv
inc
push
dec
and
lock
pop
test
cmp
jbe
add
rcr
fisubr
call
push
and
and
int3
mov
(bad)
je
pop
mov
cwde
aad
fcmovnbe
mov
cmp
hlt
cmc
inc
xor
and
jo
bound
arpl
jge
jge
adc
es
dec
pop
sub
push
ds
mov
loopne
sub
mov
sahf
aad
pop
test
cs
shl
pop
add
test
xor
adc
xchg
loope
jno
xchg
in
pop
fisttp
and
push
sub
enter
mov
mov
push
ret
cld
add
imul
loope
jns
sbb
jmp
in
stc
push
push
test
push
js
push
retf
fmulp
cld
test
adc
push
sti
cmps
pop
inc
adc
and
out
push
fs
mov
iret
int
lock
push
stos
(bad)
out
ss
jmp
add
jmp
popa
mov
mov
and
out
and
xchg
aaa
popa
lahf
mov
adc
ds
mov
mov
retf
sti
pop
jmp
cmp
out
test
dec
jmp
xor
sub
js
mov
mov
push
js
push
push
je
and
jecxz
loope
loop
xor
imul
icebp
stos
cmp
ins
push
imul
fisub
adc
pop
mov
stc
inc
out
sbb
(bad)
xor
inc
fmul
fsub
repz
add
fiadd
test
clc
or
(bad)
mov
inc
jne
sbb
push
dec
and
cs
push
push
pop
call
gs
stos
xor
stos
cmp
xchg
int3
scas
push
sbb
pop
dec
movs
in
dec
or
(bad)
jne
adc
cmps
inc
adc
inc
xchg
(bad)
cmp
fdivr
add
push
ss
fdiv
cmc
sub
push
and
adc
mov
ja
loope
push
push
mov
dec
jg
scas
fist
fisub
bound
outs
aam
pop
inc
(bad)
cs
(bad)
fnstsw
inc
repz
fbstp
aad
not
pop
adc
hlt
ja
(bad)
push
sub
out
xor
jge
xchg
loope
add
push
add
aas
add
clc
xor
(bad)
xor
repnz
and
dec
cmp
mov
out
mov
adc
stos
sub
mov
cmp
jge
jb
sar
pop
or
xor
pop
aas
shr
cmp
adc
fisub
in
push
cwde
out
scas
mov
dec
xchg
in
mov
jge
pop
cmp
fimul
shl
iret
aas
xchg
xchg
mov
mov
adc
out
stc
jo
jnp
jne
and
or
jg
cmps
add
dec
out
rcl
es
into
stc
pop
pop
xchg
aam
cmc
stos
xor
and
sub
aam
out
jns
mov
and
idiv
adc
add
cmp
icebp
ins
pop
aad
ficomp
inc
popf
aad
pop
cmp
mov
jbe
xor
scas
add
imul
cwde
rcr
xchg
lods
scas
xchg
outs
push
and
hlt
cmps
mov
popf
ret
inc
dec
jmp
sub
xchg
sar
pop
and
mov
jmp
or
jp
clc
jmp
xor
jo
push
inc
test
addr16
bnd
or
shl
mov
pop
les
xchg
test
mov
mov
pop
adc
xchg
jno
sbb
jmp
add
mov
gs
mov
(bad)
lods
adc
xchg
retf
rol
sahf
adc
add
pop
mov
loopne
jg
imul
js
jp
test
xor
mov
sbb
jmp
jle
jecxz
fadd
js
jb
mulps
fisubr
lea
scas
jne
and
dec
mov
mov
mov
std
inc
dec
lods
jne
popf
out
(bad)
shr
ret
je
push
add
mov
xlat
xchg
scas
cmc
movs
cmps
scas
in
sub
xor
mov
xor
adc
jl
pop
outs
sbb
cs
push
mov
adc
mov
enter
or
leave
int3
dec
outs
mov
jecxz
and
adc
mov
xchg
xor
and
add
mov
mov
pop
mov
cmc
rcr
xor
fs
das
or
div
retw
mov
cmp
shl
adc
lods
jns
jnp
xchg
test
xor
jno
or
mov
les
bound
mov
inc
shl
inc
push
cwde
sub
sbb
xchg
cmp
xor
(bad)
push
adc
sbb
dec
xchg
dec
movs
push
leave
add
sub
push
fwait
xchg
pop
mov
aaa
jecxz
add
jecxz
ins
leave
dec
jb
dec
push
push
in
or
test
cmps
rol
jmp
imul
push
test
sar
lods
mov
sysret
xchg
icebp
sbb
(bad)
popf
scas
fs
mov
shr
lahf
mov
in
ret
mov
retf
jns
xor
ins
ret
cmp
shr
lods
mov
xchg
gs
movs
dec
mov
aaa
pop
les
lahf
int
test
and
add
cmp
fcomp
sbb
mov
inc
cmp
bound
push
cmp
push
cmp
sbb
enter
inc
or
cmp
adc
ins
bound
stc
(bad)
and
push
pop
sub
cmp
rol
gs
loopne
and
shl
push
jno
cmp
addr16
je
les
pop
movs
nop
mov
bound
mov
dec
push
xchg
in
mov
mov
test
and
sub
out
push
sbb
sub
fild
(bad)
test
popa
mov
scas
(bad)
sub
cmps
sbb
dec
icebp
and
popa
mov
cwde
js
pusha
out
sti
fisub
cmp
ins
sub
scas
enter
push
xor
pop
retf
stc
pop
mov
or
add
adc
nop
or
jb
out
adc
jge
inc
mov
dec
push
dec
shl
pop
mov
movs
into
push
daa
add
sahf
data16
stos
das
out
int3
pop
xchg
adc
jmp
mov
push
pusha
test
mov
xlat
out
pop
aad
pop
jl
out
(bad)
in
add
fwait
xor
popf
or
pushf
push
pop
add
je
sbb
cwde
sbb
pop
pop
and
jg
push
or
inc
movs
pusha
mov
(bad)
pop
push
mov
fnstsw
dec
jb
inc
retf
(bad)
jg
and
sahf
or
mov
or
out
(bad)
add
adc
movs
sub
pop
data16
jno
xor
outs
in
push
and
aas
out
icebp
jae
popa
push
jb
gs
pop
rol
pop
mov
mov
inc
(bad)
imul
sbb
inc
mov
into
(bad)
cli
and
xchg
pop
retf
inc
mov
or
hlt
jg
jns
mov
fs
cmp
mov
inc
mov
push
mov
movs
div
int
jmp
out
xor
mov
out
outs
jp
rcr
cmc
dec
cmp
jo
stos
enter
ss
push
mov
jle
aaa
mov
popa
daa
dec
mov
leave
sub
in
adc
std
or
je
jne
jae
push
sub
and
sbb
(bad)
int
inc
bound
outs
cmp
cmp
mov
cdq
mov
inc
cmp
(bad)
mov
cs
inc
out
push
inc
xchg
and
or
cdq
or
in
sub
and
or
pop
(bad)
jg
test
imul
loopne
jns
pop
out
adc
je
and
loopne
je
addr16
push
pop
xor
hlt
movs
call
enter
add
or
lock
add
xor
lds
jnp
mov
jle
mov
push
movs
mov
scas
clc
inc
cmps
mov
dec
push
jl
or
xchg
mov
scas
scas
shr
pop
or
repnz
js
mov
lods
and
and
repnz
fldenv
sub
mov
sbb
shl
mov
test
retf
fs
imul
add
ds
into
xchg
inc
xor
inc
arpl
cmp
mov
movs
out
outs
aaa
sbb
loopne
xor
adc
pop
push
push
sub
pop
inc
cs
orps
inc
xor
or
(bad)
popa
int3
mov
jle
adc
enter
push
mov
retf
cmp
(bad)
push
cdq
dec
push
nop
pushf
pop
inc
pop
mov
lea
sahf
or
(bad)
dec
(bad)
pop
cmps
xchg
pop
es
dec
add
inc
retf
inc
lds
stos
mov
movs
pushf
lods
lahf
or
sub
sub
pop
jae
rol
pcmpgtw
call
fld
adc
mov
jmp
sbb
or
sbb
dec
cmps
leave
pop
int3
call
mov
cmp
pop
repz
aam
cs
mov
jae
popf
jecxz
pop
pusha
leave
daa
in
or
pushf
lods
pusha
lahf
sbb
hlt
adc
mov
cmc
xchg
add
in
retf
icebp
std
jl
in
mov
mov
repz
test
or
adc
fimul
outs
xchg
js
ss
sub
inc
jb
lods
fmul
adc
adc
inc
pop
cmp
mov
fsubr
test
fiadd
es
imul
xchg
jns
pop
dec
jo
xor
loop
jg
iret
addr16
outs
fstp
rcl
in
into
je
adc
pop
bswap
mov
out
aam
cld
ds
retf
lahf
and
ficomp
mov
jnp
mov
adc
in
sti
mov
mov
ins
adc
add
outs
dec
sbb
ins
outs
ins
xor
push
sbb
mov
or
cld
jmp
adc
ror
stc
push
pop
jnp
std
mov
mov
xchg
dec
mov
pop
daa
xor
je
jg
test
cmp
jno
(bad)
and
xor
cmp
ss
sbb
leave
imul
icebp
dec
push
mov
jmp
bound
outs
lods
stc
idiv
sub
in
xor
dec
push
leave
test
imul
sub
hlt
or
and
jae
jne
mov
sti
stos
pop
adc
mov
retf
stos
mov
mov
rcl
movs
cmp
fadd
imul
fld
xchg
or
dec
inc
imul
inc
lods
jae
pop
imul
jae
hlt
loope
or
shl
cmp
ins
adc
dec
and
cmc
sub
les
mov
sbb
xor
mov
push
mov
or
jle
mov
and
inc
push
jae
jmp
or
out
aas
mov
jge
push
sahf
shl
mov
push
dec
dec
pop
xor
bound
adc
scas
sti
aam
add
mov
scas
scas
cmp
repnz
inc
out
or
sub
cmp
cmp
and
mov
mov
and
jne
or
sub
push
adc
aam
adc
push
mov
mov
inc
in
scas
pop
lods
xor
scas
fwait
(bad)
mov
jmp
neg
imul
movs
je
pop
lock
mov
in
outs
je
xor
inc
sbb
fidivr
pusha
sub
ins
jle
or
mov
aaa
jne
jmp
sbb
inc
fwait
push
push
in
out
test
repz
fwait
cwde
stc
test
lock
cmp
push
retf
into
push
outs
add
dec
iret
sub
loop
or
dec
mov
push
sbb
outs
imul
and
jae
xor
and
mov
jle
adc
inc
pop
xor
fidivr
jbe
adc
test
mov
ins
adc
jb
aad
arpl
jb
xor
mov
dec
sub
das
ins
ss
add
add
mov
loop
adc
xor
mov
xlat
fld
das
and
fnstcw
xor
jmp
lock
pop
lods
mov
cmps
and
cli
cwde
retf
call
push
cmp
cli
add
mov
loope
cdq
mov
pop
stos
daa
mov
dec
mov
sbb
pushf
jnp
mul
je
call
arpl
fwait
stos
push
xchg
out
inc
mov
cmps
sbb
xlat
mov
adc
mov
adc
test
jge
cmp
xchg
mov
pop
push
fbld
mov
(bad)
hlt
cmpxchg
push
repz
ret
sbb
dec
jp
loopne
cli
and
or
lods
pop
jge
jmp
int
fdivr
mov
fiadd
addr16
retf
mov
sar
adc
divps
push
pop
jne
stos
outs
arpl
or
adc
and
cmp
inc
or
stos
mov
or
inc
leave
sbb
out
sar
clc
ins
(bad)
xchg
push
mov
dec
(bad)
retf
add
or
mov
in
adc
mov
mov
dec
dec
sub
mov
adc
xor
ret
fimul
jl
cmc
mov
add
mov
push
cmp
mov
inc
or
cli
dec
pop
fild
test
push
popa
bnd
pop
out
add
add
or
add
or
sbb
jnp
out
loopne
fucom
in
loopne
scas
imul
xchg
fcom
rol
jbe
push
adc
or
test
push
es
add
ins
scas
xchg
in
jg
fcmove
movs
add
cmp
aas
xchg
out
mov
xor
loopne
arpl
fisubr
xor
pop
lods
xor
sbb
pusha
(bad)
das
mov
fistp
aaa
add
iret
cdq
sub
ins
fdiv
xor
pop
jnp
dec
jne
pop
iret
pop
ror
cmp
pop
jns
or
pop
iret
nop
fild
outs
popa
adc
jns
imul
test
fdivr
dec
fild
in
std
xor
inc
xor
sub
sub
xchg
pop
nop
mov
pop
retf
add
icebp
(bad)
mov
js
add
dec
(bad)
mov
and
mov
adc
cmp
and
or
sbb
pop
inc
je
aas
in
(bad)
push
adc
mov
pop
js
pop
dec
xor
aam
outs
dec
push
or
mov
mov
xchg
cld
mov
clc
add
jno
arpl
retf
aad
mov
and
sti
xor
leave
xchg
xor
call
inc
std
out
mov
movs
loopne
outs
push
push
adc
or
sbb
(bad)
lahf
dec
xor
jp
jne
sub
jmp
cmp
fiadd
pop
inc
adc
mov
stos
dec
inc
and
shr
push
jno
xchg
xchg
sbb
cwde
jne
repz
add
push
rcl
cli
outs
cmp
mov
xchg
xchg
and
mov
mul
sub
mov
popa
xor
ficomp
push
lds
in
leave
das
jge
inc
arpl
sbb
or
arpl
loopne
sbb
test
dec
push
(bad)
repnz
push
inc
pop
icebp
xor
data16
outs
cs
dec
mov
inc
cmp
dec
lahf
dec
movs
xchg
addr16
xchg
ja
sub
and
adc
inc
xor
push
dec
cmps
dec
dec
ja
inc
dec
outs
xchg
in
repnz
call
pop
mov
cmps
ins
cs
loop
in
mov
adc
or
scas
mov
and
pop
xor
cmps
xchg
hlt
jle
in
in
out
dec
fisttp
les
imul
mov
movs
xor
jecxz
fcomi
rol
icebp
repz
das
jp
ss
xor
mov
or
mov
sbb
mov
bound
mov
aad
xor
fwait
stos
fistp
in
jbe
cdq
push
jp
and
mov
or
sub
xor
mov
rol
fst
pushf
imul
cmc
mov
xor
add
inc
aam
ins
jecxz
jl
icebp
pop
adc
mov
or
dec
pusha
xlat
sahf
enter
push
xor
call
or
sub
shl
in
jge
mov
inc
pop
push
xchg
inc
aaa
int3
jae
jno
psllq
test
fsub
(bad)
sti
mul
shl
jp
test
into
pop
and
add
scas
pop
cmps
stc
cmp
push
aad
or
test
(bad)
mov
cdq
mov
xchg
cmps
out
push
lds
and
repz
xor
add
into
push
fs
popf
dec
and
sub
cs
inc
xor
loope
imul
pcmpeqb
and
mov
add
cwde
jns
cwde
test
fsub
push
fmul
cmp
push
scas
stos
cmp
pusha
mov
lahf
aas
sar
mov
sub
jno
add
stc
sbb
or
mov
daa
cli
mov
adc
xchg
xchg
shr
or
inc
push
sahf
xchg
(bad)
dec
fiadd
pop
mov
and
jns
xor
and
push
dec
mov
enter
jg
push
scas
test
and
sbb
push
sub
test
ret
xor
lods
jle
mov
dec
mov
inc
jp
mov
je
rcr
inc
lahf
sbb
add
or
jp
std
adc
dec
repnz
cmp
cmps
pop
call
and
jno
mov
test
mov
mov
push
xchg
mov
rol
push
movs
dec
mov
inc
cmc
fimul
xchg
dec
ret
cmc
inc
sub
fsub
and
cmps
inc
adc
in
dec
mov
int3
dec
ret
fwait
cmps
cmp
add
stc
out
bound
add
sbb
jecxz
mov
push
cmp
and
pop
cmp
and
sub
or
mov
in
cld
out
jb
sbb
mov
mov
push
icebp
mov
mov
(bad)
cs
les
push
dec
cmps
out
lahf
scas
fdivrp
jge
aaa
sbb
imul
in
in
outs
mov
xchg
dec
js
dec
jae
add
jp
and
ret
jne
pop
cmp
push
repnz
sahf
arpl
in
add
jl
popa
call
push
mov
popf
sub
(bad)
jb
stc
adc
rcr
pop
adc
(bad)
xchg
daa
adc
add
jbe
cld
dec
add
repnz
jle
popa
cmp
push
jae
cs
jae
push
imul
retf
mov
sub
lods
xor
cmps
iret
sbb
inc
jb
and
popf
outs
push
ret
and
enter
xchg
out
mov
jl
stos
mov
jg
lahf
ins
int3
mov
jmp
mov
mov
mul
push
(bad)
jns
sub
ins
movs
icebp
je
(bad)
pop
rol
mov
adc
add
mov
in
sbb
jge
and
mov
sub
pop
jnp
push
popa
hlt
stos
stos
in
ss
adc
out
jp
arpl
jecxz
js
aas
dec
leave
xchg
cmp
jnp
mov
pop
mov
ins
fnstenv
repz
mov
ins
int3
ja
shr
xor
mov
(bad)
std
inc
push
inc
jge
ret
sbb
mov
jne
stos
(bad)
mov
(bad)
lods
fcom
push
add
mov
adc
mov
test
(bad)
imul
in
ss
ret
cmp
outs
fist
jg
pop
std
push
lods
cdq
adc
outs
or
xchg
retf
fwait
stos
mov
fst
adc
scas
sub
jmp
lahf
outs
das
mov
inc
lods
es
mov
je
jecxz
outs
xor
pop
cmp
scas
out
mov
inc
mov
popa
stos
repz
and
test
repnz
jge
jp
push
mov
push
pop
scas
shl
cld
and
xor
sbb
lods
outs
mov
xor
mov
stos
pop
imul
call
mov
stos
pushf
ja
mov
inc
xor
dec
in
ins
inc
in
mov
add
js
repnz
lods
dec
add
repz
ins
xor
popf
aaa
lea
popf
dec
call
imul
or
push
ss
cmp
jecxz
sub
xchg
ret
push
loope
rcl
adc
push
fdiv
and
and
pusha
mov
or
movs
mov
mov
pop
jno
int3
xchg
mov
jmp
clc
cmp
mov
hlt
scas
jge
data16
sar
pop
retf
jmp
and
repz
xchg
inc
or
sbb
jecxz
jns
js
cmp
and
sbb
mov
cmps
inc
stc
sar
cmp
popa
sar
pop
ja
mov
push
add
add
cmps
cmp
mov
aas
pop
sub
test
lods
adc
dec
dec
xchg
cmps
test
loope
xchg
xor
ds
adc
daa
or
scas
aaa
push
and
shl
fdivr
xor
push
in
mov
inc
or
ror
cli
sbb
ficom
test
xchg
stos
inc
pop
ins
push
sbb
outs
pop
cld
xor
or
cmp
cs
je
repz
scas
jp
xor
sub
stos
dec
pop
or
xchg
in
or
mov
imul
mov
sbb
pop
and
cld
inc
cmps
sub
push
sbb
loop
std
mov
mov
adc
mov
bound
mov
or
imul
test
mov
pop
call
nop
mov
sub
jbe
mov
inc
jmp
sub
jmp
daa
and
pop
pop
cmc
and
jnp
mov
jae
and
and
loopne
mov
retf
in
scas
cmp
jbe
rol
int3
jns
scas
adc
shl
adc
mov
jbe
push
dec
jmp
lahf
or
push
enter
stos
aam
push
repnz
shl
sub
cmps
stos
push
mov
pop
call
je
or
leave
adc
call
mov
inc
mov
je
cdq
mov
fild
pop
mov
dec
sbb
ret
idiv
or
xor
out
repz
call
add
cmp
xchg
imul
push
cmps
inc
jbe
dec
pop
cmp
sti
shr
push
xor
mov
xor
mov
fsubr
pushf
xor
hlt
outs
ds
push
sahf
ja
jb
repnz
mov
imul
cmp
sub
push
cmps
in
in
inc
test
push
add
pop
push
shl
mov
ss
xor
mov
sbb
mov
mov
mov
ret
push
mov
cmps
dec
inc
mov
and
iret
add
scas
and
jbe
mov
in
xor
add
std
mov
or
mov
jl
gs
cwde
enter
aad
in
xchg
outs
cmc
out
mov
xlat
pusha
xchg
xor
sub
dec
aas
iret
mov
lea
dec
dec
rcr
xor
test
sbb
inc
dec
mov
hlt
addr16
dec
lods
inc
and
dec
ror
pop
scas
mov
cmp
rep
ret
cmp
clc
(bad)
xchg
mov
cld
nop
mov
mov
imul
sub
fxch
mov
fadd
sahf
ffreep
ss
(bad)
jp
ins
cmp
fstp
(bad)
fs
pop
jg
inc
fwait
inc
xchg
fadd
call
aad
shl
cmps
(bad)
loop
inc
cmp
adc
or
gs
xor
aad
pop
sub
or
or
aas
mov
ror
fdiv
lea
clc
cmp
mov
out
xchg
cmc
pushf
je
pop
test
sub
xchg
stos
and
add
cli
test
adc
xchg
dec
shl
es
adc
sbb
leave
jmp
xlat
xor
mov
pop
cdq
cs
sub
popf
fcmovnb
cmp
mov
es
mov
and
cmc
outs
adc
mov
jg
and
jmp
mov
dec
sub
fldenv
aad
retf
xor
into
sub
scas
sbb
nop
pop
cdq
sbb
in
dec
jle
mov
mov
out
jb
mov
ret
jmp
cs
stos
cmps
fucomip
loope
and
xchg
cmp
mov
aam
and
inc
stos
jle
ss
push
fwait
mov
push
shl
mov
cmp
fiadd
cmp
mov
popfw
jmp
test
addr16
ret
sbb
sti
mov
add
sub
pop
ret
ret
mov
sti
pop
lods
std
xor
xchg
sub
rcr
out
push
shl
jns
cmp
adc
jl
out
call
cmps
jmp
or
or
adc
nop
popf
enter
dec
mov
mov
imul
adc
cmp
xchg
push
adc
retf
xchg
pop
ja
or
adc
call
stos
dec
(bad)
mov
out
fcom
repnz
fdiv
or
adc
add
jo
repnz
add
div
xor
jo
out
leave
loope
dec
lods
enter
test
adc
jbe
mov
sbb
push
inc
loope
iret
inc
dec
xchg
movs
cmp
or
popf
in
push
dec
lods
ret
push
add
into
lock
cmp
cs
and
ds
dec
test
test
in
sub
aas
xchg
cmc
sbb
(bad)
jmp
fistp
xchg
add
xchg
and
scas
xlat
adc
fiadd
xlat
mov
fs
loop
das
pop
mov
dec
dec
(bad)
sbb
pop
push
std
cmp
gs
dec
adc
and
or
push
shl
pop
imul
push
aad
dec
fs
push
xor
jmp
scas
or
sahf
sub
fld
cmp
xor
pop
add
xor
aas
inc
aad
push
xlat
fs
mov
jnp
add
pop
xchg
adc
dec
or
frstor
ror
cmps
pusha
jecxz
push
das
push
or
sbb
pop
xor
mov
stc
sahf
jb
sbb
push
push
pop
dec
jl
es
in
call
in
and
push
mov
add
and
mov
(bad)
mov
setno
dec
xor
pushf
cmp
jno
xor
jmp
xchg
dec
std
cmp
jle
mov
pop
mov
dec
dec
mov
and
(bad)
hlt
adc
dec
cmps
sbb
enter
pop
cli
sub
and
aam
lds
aaa
adc
test
push
mov
hlt
mov
and
sahf
lds
jecxz
push
cwde
test
xor
mov
gs
(bad)
mov
inc
jge
pop
lods
in
in
adc
cmp
push
xchg
cld
and
pusha
jmp
lea
sar
(bad)
bnd
repnz
test
ror
push
retf
dec
or
adc
xchg
xchg
xlat
sub
xchg
into
movs
call
jne
xchg
ror
or
push
pop
pop
lds
fxch
sub
xchg
mov
out
in
dec
sub
(bad)
es
inc
inc
ds
xchg
add
xchg
push
leave
test
loopne
shl
ror
arpl
xor
test
xchg
(bad)
call
aaa
test
cmp
popa
test
ret
jb
test
jg
rcr
arpl
nop
in
fist
push
cmps
aaa
bound
cdq
(bad)
mov
(bad)
xchg
pop
sbb
fisubr
push
fidiv
jae
imul
push
xchg
shr
lds
pop
ret
add
aas
fs
out
xor
adc
add
js
ja
dec
or
ins
les
(bad)
push
mov
in
cmc
cmp
repnz
fdiv
fidiv
fwait
arpl
rcl
and
aaa
fcmovnu
lahf
and
or
dec
(bad)
fisubr
pop
xchg
ror
add
cmp
cmp
out
lea
mov
cmp
daa
adc
into
push
inc
add
data16
xchg
call
fdivr
pop
jmp
loop
loope
mov
jecxz
jp
xchg
movs
inc
push
cmps
arpl
adc
arpl
mov
stc
neg
fisttp
sub
(bad)
in
sbb
loopne
push
daa
add
pop
fcmovu
mov
lock
inc
stos
xor
jo
mov
aaa
dec
xor
or
repz
clc
std
int3
push
test
inc
and
dec
ss
inc
cmp
cmp
push
adc
xchg
addr16
or
popa
and
aam
jo
xor
mov
popa
mov
cld
cwde
call
jl
sub
mov
(bad)
(bad)
mov
mov
lods
in
pop
sbb
adc
test
cwde
sub
test
fimul
mov
sbb
(bad)
loope
dec
test
dec
or
retf
aad
jbe
mov
mov
sub
pushf
xchg
add
stos
xchg
pop
push
pop
inc
xchg
or
stos
xchg
push
jle
out
push
movs
daa
aam
scas
adc
mov
cmp
push
in
or
adc
mov
sub
sbb
pop
and
pushf
nop
adc
shr
ins
test
jmp
stc
push
dec
sahf
add
push
or
es
dec
adc
jmp
mov
fsubr
pop
mov
ret
lods
das
mov
fadd
add
das
cmp
idiv
push
add
and
jbe
addr16
sbb
es
loope
and
mov
out
adc
pusha
popf
test
jbe
xchg
mov
mov
xchg
fld
jns
ss
cmc
stos
fs
ds
mov
mov
and
xor
push
mov
outs
out
aaa
movs
jne
addr16
adc
jae
mov
div
(bad)
rol
out
jbe
and
push
or
pop
fwait
lds
dec
mov
inc
inc
pop
loope
mov
xchg
and
stos
or
jns
xor
or
pusha
mov
clc
or
cli
out
mov
in
push
add
dec
pop
dec
gs
cdq
aaa
cmp
jl
dec
push
ret
addr16
xor
loop
jne
aaa
(bad)
inc
bound
sbb
push
sub
pushf
daa
or
cld
hlt
push
inc
lea
or
jl
loope
mov
into
lock
cmp
mov
and
dec
(bad)
adc
imul
xchg
push
push
shr
xchg
push
pop
es
mov
cmp
inc
add
cmc
les
sub
xor
push
jp
out
pop
dec
xlat
arpl
jmp
ret
pop
das
ret
pop
sbb
xchg
popa
sbb
push
sub
jg
lock
sbb
loopne
icebp
loopne
push
mov
pop
or
xlat
xchg
mov
jg
dec
xor
fisttp
das
push
cwde
mov
pop
test
pop
mov
int3
jbe
mov
push
ins
pop
push
jb
push
xchg
imul
adc
les
loopne
cdq
cmp
and
inc
mov
jmp
in
mov
je
repz
fist
out
cmp
mov
and
ficomp
or
outs
inc
sbb
test
cmp
dec
inc
movs
stos
inc
jne
xchg
das
ins
lahf
cmp
mov
inc
mov
test
push
sar
mov
js
pop
mov
popa
sbb
bound
ja
xchg
xchg
out
outs
inc
adc
mov
mov
popf
aad
sbb
pop
xchg
in
pushf
ins
aaa
ins
jl
mov
rcl
popa
cdq
popf
jmp
mov
sti
shl
f2xm1
(bad)
cmp
jmp
cmps
mov
pop
xchg
dec
dec
(bad)
int
test
pop
ja
out
jns
lahf
dec
jns
adc
sbb
pop
popa
dec
add
sahf
cmp
pop
sar
inc
and
cmovle
mov
dec
mov
neg
adc
int3
pop
and
pop
push
dec
mov
jmp
fs
dec
add
pusha
jo
dec
xchg
test
clc
icebp
pop
gs
push
mov
aam
mov
ret
rcr
mov
out
(bad)
ror
fs
fsub
imul
cwde
sub
enter
iret
adc
cld
call
adc
stc
push
les
jg
call
sub
in
ror
fwait
mov
cmps
sbb
adc
(bad)
xor
sahf
push
push
pop
icebp
sub
movs
or
dec
push
test
sbb
lods
leave
inc
mov
cmp
daa
add
(bad)
popf
frstor
xchg
inc
popf
jns
jno
mov
push
jl
fisttp
xchg
stos
jnp
adc
inc
xchg
sub
outs
fwait
jl
xchg
and
add
mov
jmp
inc
sub
adc
pusha
xor
icebp
mov
scas
fnstsw
js
dec
in
add
bound
mov
lea
pusha
cld
es
call
clc
pop
push
push
xor
mov
adc
in
pop
out
bound
nop
fimul
jne
add
scas
push
(bad)
push
dec
mov
out
xor
push
dec
jle
ret
xchg
jmp
mov
xchg
mov
out
data16
inc
shl
jo
pop
fst
fwait
pop
test
push
shl
mov
xor
out
loop
test
addr16
dec
xchg
push
xchg
cmps
xchg
sti
mov
inc
scas
ja
fisubr
add
hlt
addr16
jns
or
inc
jae
mov
out
push
sbb
push
cs
mov
sub
loop
mov
addr16
sbb
cwde
push
pop
dec
adc
in
mov
mov
sub
(bad)
sub
jbe
pop
fsubr
cli
adc
imul
mov
sbb
mov
and
lahf
and
push
mov
mov
or
adc
xchg
sub
mov
sbb
pop
xor
dec
ret
repnz
mov
dec
push
into
mov
dec
nop
(bad)
jmp
sub
std
push
jns
mov
popf
jns
dec
ja
push
sub
push
inc
add
dec
pop
int
in
push
rol
jmp
xchg
les
imul
mov
ins
jmp
pop
sar
or
lock
sar
xor
dec
int3
mov
shr
inc
mov
retf
push
daa
or
std
mov
mov
sub
lods
neg
fldcw
or
outs
shl
shl
push
je
in
mov
push
dec
or
sub
cwde
pop
sub
jle
jns
and
xchg
sbb
out
fsub
lahf
iret
loopne
fadd
mov
mov
add
addr16
imul
mov
inc
rcl
cs
gs
aas
mov
sub
xor
xor
push
add
cmp
or
(bad)
xor
pop
data16
inc
lea
and
jl
jge
inc
mov
push
les
fdivr
imul
cmp
jns
ret
sti
rol
lods
pop
aad
or
(bad)
stc
fcomp
outs
fnstcw
add
adc
or
pop
(bad)
pushf
xlat
cmps
or
leave
mov
pusha
call
mov
retf
mov
rcr
in
add
stc
dec
rol
cmp
jnp
mov
mov
inc
in
sub
outs
fdivr
aam
ds
loop
js
call
lahf
cmp
fadd
aas
pushf
sti
mov
sbb
or
mov
jl
lahf
ja
pop
xor
push
push
push
loop
xor
stos
mov
or
lahf
mov
mov
pushf
push
sbb
into
dec
mov
out
pop
push
xchg
mov
int
sbb
push
jne
arpl
aaa
gs
push
cs
ja
dec
xchg
ins
lea
mov
sbb
cdq
popf
dec
xchg
xor
adc
mov
mov
cmp
cmp
lock
frstor
jge
cld
xor
retf
sbb
ins
push
jmp
sub
into
adc
add
les
repnz
cmp
lds
xor
ss
inc
mov
or
xor
mov
fild
shr
in
xchg
lock
inc
inc
cs
sub
cs
sub
mov
(bad)
pop
js
(bad)
cmp
inc
mov
dec
xchg
(bad)
sbb
scas
xor
sub
enter
sub
jge
mov
std
add
rol
cmps
mov
mov
outs
mov
retf
shl
or
xor
xor
(bad)
in
jle
aad
cwde
lahf
js
cmp
div
aad
pop
adc
xchg
add
mov
jb
and
cld
jge
retf
movs
lahf
aad
pop
outs
sub
pop
fbstp
sub
dec
push
fimul
pop
ret
mov
call
lahf
dec
add
jne
xchg
inc
(bad)
cmp
lods
test
les
icebp
mov
jl
dec
lea
aaa
add
aam
mov
out
je
sbb
sbb
sbb
adc
cwde
sar
xor
xor
dec
inc
stos
addr16
mov
movs
dec
jge
repnz
mov
add
bound
pop
push
xor
data16
push
xor
and
mov
les
or
cmp
stos
adc
pop
pop
(bad)
mov
out
jmp
aam
sbb
xor
pusha
pop
and
movs
call
add
ret
lods
sub
pushw
fstp
frstor
add
xchg
js
or
mov
mov
fiadd
mov
rcr
sub
push
mov
xor
jle
mov
nop
gs
inc
shl
pusha
jle
shr
loop
push
mov
ret
jno
test
cwde
enter
xchg
dec
mov
mov
mov
or
or
sub
loopne
sbb
adc
jo
popf
add
xchg
push
inc
ss
ja
pop
fisttp
dec
sub
adc
mov
test
hlt
fwait
push
add
push
not
pop
and
mov
in
fcomp
and
out
pop
dec
and
jp
mov
into
or
mov
add
leave
push
and
xchg
sbb
dec
popa
add
nop
inc
fisubr
hlt
fisttp
call
mov
cmp
movs
in
out
xchg
or
nop
cmc
in
ror
fdivrp
neg
pop
mov
sbb
fadd
xchg
push
or
pop
mov
jmp
sti
mov
pcmpgtd
adc
sbb
aas
arpl
inc
add
stos
les
push
and
cmp
repnz
sub
push
mov
adc
jg
das
mov
or
lds
(bad)
out
inc
mov
stos
test
les
mov
mov
mov
imul
shl
aad
and
mov
retf
adc
es
add
dec
adc
xchg
adc
lock
(bad)
hlt
push
sahf
repz
fnstenv
mov
xchg
or
sbb
inc
and
push
push
xor
xor
test
mov
mov
inc
sahf
jae
aas
scas
xor
icebp
jmp
clc
clc
retf
push
push
jmp
push
fbld
rcl
(bad)
jecxz
xchg
push
(bad)
push
call
jle
(bad)
not
pop
cs
cmp
cwde
pop
jmp
ins
stos
fisttp
push
int3
data16
or
dec
sti
or
xchg
(bad)
mov
mov
adc
mov
xchg
jmp
imul
loope
cmps
test
or
ja
inc
in
pushf
mov
daa
mov
mov
call
sbb
push
out
imul
and
out
cmp
mov
mov
dec
popa
adc
mov
or
movs
jae
ins
cmp
jmp
jmp
add
pop
shl
push
aas
mul
jl
shl
sub
sub
fild
sbb
lahf
shl
mov
shl
mov
aas
ror
cmps
shl
jmp
cmp
mov
cmc
aam
mov
into
movs
(bad)
mov
in
pop
mov
mov
mov
add
popf
xor
push
daa
sbb
repz
mov
inc
cwde
rcl
call
into
popa
push
mov
pop
inc
pop
xor
mov
sbb
pop
sbb
pop
xchg
popa
and
sbb
add
test
cdq
inc
xor
data16
scas
jge
or
push
add
jp
(bad)
cdq
adc
mov
jbe
jns
clc
popaw
lock
xchg
das
stos
jo
inc
mov
fadd
jl
adc
dec
add
out
sahf
rol
clc
aas
mov
aad
dec
imul
push
jp
ficom
loop
clc
jmp
mov
aam
adc
xor
sub
dec
lods
out
jnp
or
xor
dec
lods
test
inc
xor
jecxz
sub
mov
(bad)
outs
push
outs
xor
jecxz
ins
iret
fimul
enter
cwde
lock
xor
sbb
mov
pop
movs
pop
js
imul
dec
out
sahf
dec
or
and
push
cmp
adc
cdq
icebp
popa
fwait
sbb
retf
jl
sub
mov
push
jbe
inc
pop
xchg
add
xor
(bad)
rcl
shl
jecxz
xor
fstp
jmp
push
popa
loop
into
mov
movs
imul
xchg
movs
push
adc
jmp
mov
mov
in
cmp
mov
dec
inc
inc
pop
jg
js
and
stos
js
pop
xor
and
(bad)
fiadd
ror
xor
sbb
adc
fnsave
pop
popa
lock
jo
cdq
popa
dec
mov
movs
mov
(bad)
push
mov
cmp
add
add
mov
add
dec
cmp
repnz
or
dec
xor
mov
out
xchg
sub
mov
cmp
lea
xbegin
dec
or
sub
sbb
rcl
or
cdq
or
data16
fidiv
and
jns
fwait
inc
ds
dec
es
pop
xchg
mov
(bad)
pop
in
pop
rcl
jmp
in
aad
test
mov
sbb
fidivr
cmps
pop
push
mov
jae
retf
adc
iret
mov
jne
mov
aam
sbb
cwde
dec
xor
xchg
sbb
fiadd
mov
pop
shl
or
ins
sbb
aaa
fcomp
sar
out
mov
sar
cwde
adc
jl
pop
call
xor
push
aas
sbb
imul
sub
or
sbb
pop
push
xchg
mov
mov
add
int3
sbb
scas
mov
or
pop
xlat
mov
xchg
cs
push
xchg
rol
sbb
cmp
or
sub
push
shl
fisttp
scas
mov
inc
mov
cmp
add
mov
mov
in
(bad)
and
push
jbe
sar
xchg
xlat
sahf
imul
cmp
(bad)
sub
xchg
in
xor
out
neg
fincstp
add
pop
jg
aas
pop
jg
in
es
(bad)
and
es
or
jl
jae
add
adc
adc
adc
inc
adc
ss
cmc
push
xor
sti
mov
das
or
jmp
(bad)
in
jmp
rol
push
mov
xchg
ret
dec
xchg
ja
ror
mov
pop
push
pop
push
and
lods
adc
shl
daa
mov
dec
fist
out
pushf
lds
ffree
(bad)
call
or
in
dec
sbb
mov
scas
retf
mov
mov
cmc
xchg
into
mov
out
test
scas
in
lock
sub
xchg
sub
add
loop
aas
mov
xor
xchg
xchg
cli
sti
imul
and
les
enter
xor
adc
pop
or
xor
(bad)
mov
xlat
xchg
push
cwde
(bad)
push
daa
xchg
mov
xor
push
and
and
jmp
sub
into
mov
sub
push
int3
leave
(bad)
rcl
or
jle
cmps
push
and
xor
lea
mov
aam
cs
in
xchg
xchg
stc
add
dec
mov
lods
aam
jp
or
push
and
stc
push
mov
daa
fidiv
xchg
sub
ds
sbb
mov
in
fisubr
data16
mov
xor
jo
sbb
or
jmp
or
imul
sbb
xor
add
pushf
(bad)
push
jo
nop
(bad)
add
call
es
shr
adc
inc
test
int3
shl
mov
ret
mov
sub
lahf
mov
scas
retf
dec
adc
mov
sbb
jg
ins
call
ins
xchg
jg
ror
cld
and
shl
daa
in
xchg
mov
and
xchg
and
dec
jo
jl
lods
or
call
call
sub
(bad)
std
push
mov
cmps
call
mov
rcr
mov
pop
or
into
cli
bnd
js
mov
mov
xor
push
retf
in
inc
inc
fldenv
lahf
retf
push
mov
add
mov
sti
leave
pop
cmc
aad
imul
sbb
cdq
test
sub
fdiv
pop
mov
mov
fidiv
fldpi
inc
push
cmp
rcr
push
pop
(bad)
push
mov
sub
outs
mov
(bad)
mov
mov
xchg
push
xchg
pop
in
sub
jmp
rol
mov
inc
sbb
cmp
jns
call
ins
push
add
fdiv
xlat
ss
xor
dec
or
cmp
mov
in
push
iret
pusha
pop
sub
add
aad
fstp
inc
mov
xchg
add
pushf
mov
cmps
ja
test
push
pop
lea
pop
fstp
stos
scas
cmp
inc
and
push
scas
mov
sbb
xchg
or
mov
clts
jns
cmp
icebp
xchg
sub
pop
pop
inc
ins
cmps
dec
es
push
push
push
lds
fidiv
icebp
dec
mov
pop
pushf
push
mov
imul
je
arpl
test
mov
iret
inc
lods
test
jae
xor
ins
(bad)
sbb
fs
sub
dec
das
lods
xchg
and
int3
aam
jno
fsub
sahf
out
mov
stos
or
lock
std
hlt
pusha
(bad)
cld
mov
mov
xchg
bound
pop
fcomp
jmp
pop
and
inc
imul
jb
(bad)
xchg
sbb
ja
sbb
inc
mov
in
fs
jae
xchg
cs
cmps
addr16
xchg
push
mov
pop
mov
outs
mov
pop
push
ins
rcl
loope
sbb
fsubr
ficomp
sahf
ins
or
fmul
jge
xchg
cmp
mov
push
jbe
or
data16
jg
call
mov
ss
lods
repz
xchg
adc
sbb
push
sbb
fisttp
out
mov
adc
xor
or
sbb
(bad)
xchg
daa
stc
shl
shr
movs
xor
mov
je
mov
cmp
push
and
loop
inc
mov
xor
outs
ins
aad
mov
in
(bad)
div
fistp
hlt
mov
pop
sbb
test
cmc
adc
add
arpl
xor
sub
ret
mov
adc
inc
out
jno
icebp
xor
sub
mov
push
fwait
dec
jge
jae
or
daa
push
arpl
sbb
adc
hlt
dec
rol
mov
sbb
stos
ret
(bad)
ins
pushf
mov
mov
std
popa
sbb
pusha
(bad)
and
fcomp
and
sbb
(bad)
les
gs
adc
scas
ror
xchg
xchg
sub
call
sbb
test
cld
or
pop
adc
fiadd
ins
addr16
push
dec
adc
stos
rcl
xchg
jns
(bad)
dec
scas
dec
out
xchg
inc
adc
cli
sub
adc
retf
inc
jno
push
addr16
test
ins
mov
cld
movs
sti
hlt
fwait
mov
dec
xchg
adc
mov
or
shr
rol
mov
cmp
shr
fs
int
stos
cmp
fadd
xchg
es
or
ins
xlat
mov
dec
call
aaa
cwde
or
mov
iret
jb
daa
add
push
popa
call
mov
fsub
and
sub
stos
shl
sbb
cwde
push
mov
call
mov
mov
pop
repnz
push
movs
sahf
pop
mov
pop
xchg
sub
jmp
jmp
sub
dec
add
jae
fmul
pop
ja
dec
std
(bad)
sbb
jmp
mov
and
repnz
push
daa
inc
add
xlat
or
sub
jp
inc
daa
xchg
js
lods
lock
inc
xor
inc
hlt
(bad)
mov
shr
sahf
(bad)
pop
aaa
mov
in
popa
xchg
shl
mov
and
xchg
adc
jne
inc
mov
not
and
sbb
dec
adc
fild
call
icebp
pop
fs
and
shr
push
inc
mov
inc
in
punpcklbw
adc
jg
mov
(bad)
fcom
push
mov
pop
and
pop
or
retf
pop
pop
mov
adc
pop
(bad)
addr16
loope
push
daa
mov
test
mov
clc
add
push
outs
movs
adc
lods
jne
retf
sbb
es
es
mov
outs
or
addr16
(bad)
rcr
xchg
cmps
jg
jl
jge
lods
fadd
dec
movs
sub
push
sbb
stc
and
jne
iret
mov
mov
(bad)
int3
mov
imul
fbld
jl
(bad)
cwde
pop
xchg
add
retf
cmp
test
mov
jbe
add
mov
ror
dec
cmps
retf
jae
cs
add
outs
mov
jb
mov
push
mov
mov
aad
(bad)
dec
mov
sbb
pop
mov
icebp
adc
repnz
mov
gs
sub
jae
fcmovnu
adc
jne
fwait
jmp
jle
test
dec
xchg
inc
dec
add
(bad)
enter
imul
sub
imul
adc
add
pop
sub
xor
inc
out
mov
sub
frstor
sbb
mov
dec
shr
lahf
rol
pop
je
aad
cmp
adc
sbb
xchg
int
les
or
sbb
ins
xlat
xor
mov
icebp
mov
imul
test
mov
enter
add
adc
ret
xchg
mov
call
popa
fs
aad
xchg
test
rol
enter
xchg
scas
xor
jnp
les
je
mov
aam
pop
adc
jnp
pop
pop
jp
call
jecxz
pop
fmulp
iret
adc
sbb
(bad)
leave
inc
(bad)
out
xchg
jne
add
cmp
outs
cmp
sahf
mov
xor
je
mov
jg
dec
fld
lods
test
lods
and
(bad)
xor
push
and
in
es
add
xor
jg
cwde
in
in
lods
mov
imul
xor
test
adc
arpl
mov
xlat
cli
cmp
xchg
daa
and
xchg
sub
aam
mov
stos
(bad)
mov
arpl
inc
dec
xchg
sbb
push
push
inc
pop
lods
je
mov
repz
jmp
mov
xchg
cmc
ret
cmp
daa
les
ins
mov
imul
xor
inc
arpl
shr
test
bnd
cmps
popf
dec
sub
inc
neg
cmp
adc
arpl
(bad)
jne
stc
loop
stc
xchg
jo
inc
lahf
push
fld
cmps
cs
push
retf
cwde
jle
ins
sub
adc
push
mov
cmc
retf
mov
pop
xchg
mov
pushf
mov
arpl
nop
pop
les
fistp
test
mov
cmp
jb
add
jmp
mov
test
shr
push
aaa
ins
outs
mov
push
inc
cli
mov
shl
(bad)
sub
cmp
or
bswap
adc
pop
scas
mov
inc
mov
jp
popf
push
and
sahf
push
les
(bad)
iret
pop
lds
mov
and
mov
dec
int
fisttp
lock
sub
(bad)
mov
jae
out
add
enter
dec
dec
stos
push
xlat
loopne
rol
push
jg
das
cwde
in
lahf
data16
outs
lds
sbb
or
mov
push
cmp
cs
and
inc
mov
div
and
mov
cmp
fsubp
int
gs
xchg
mov
jo
loope
jmp
ins
or
out
inc
jnp
and
(bad)
adc
mov
sub
cwde
add
pop
dec
jb
pop
cs
(bad)
out
mov
in
jmp
add
cmp
or
push
mov
pusha
imul
xor
mov
inc
dec
cmp
sub
adc
cmp
mov
dec
mov
int
je
jb
dec
xor
inc
dec
push
mov
mov
out
movs
push
pop
shl
cmps
sub
out
jle
xor
mov
xchg
aaa
dec
fisub
stc
mov
jecxz
movs
enter
jp
inc
and
sub
fsub
pop
adc
shl
frstor
or
cld
mov
test
push
jge
aam
scas
push
and
pop
retf
test
aaa
out
mov
rcr
sub
fwait
cmp
add
push
movs
sahf
stos
inc
es
cld
pop
mov
and
and
jns
add
mov
pop
xchg
scas
cmp
(bad)
or
repnz
mov
arpl
out
jmp
clc
out
enter
cmp
out
(bad)
mov
shl
sbb
dec
mov
pop
fsubp
lahf
jecxz
fild
mov
dec
jae
ret
cmp
imul
loope
adc
push
dec
lods
xchg
stos
out
dec
in
(bad)
adc
scas
call
pop
or
popa
sbb
push
xor
sub
outs
jle
neg
pop
mov
cdq
cwde
push
ins
scas
bound
pop
inc
cmp
inc
fsubp
sbb
cmp
std
lock
(bad)
fdivr
jno
push
fidiv
mov
jo
or
pop
dec
gs
push
daa
inc
jns
fwait
mov
(bad)
hlt
fwait
das
dec
pusha
aaa
cdq
sub
jp
mov
jmp
xor
in
lods
lea
jecxz
sahf
nop
inc
int
sbb
push
retf
fcmovne
mov
ror
sub
lock
scas
daa
lahf
fidivr
cmp
shl
jmp
icebp
jns
push
rol
stos
push
adc
in
test
fs
xor
mov
cs
scas
jns
jnp
add
arpl
enter
(bad)
enter
sub
inc
scas
into
std
dec
and
arpl
inc
movs
sbb
fistp
xchg
addr16
test
js
jg
cmp
(bad)
dec
adc
or
call
out
add
iret
cmps
push
fucom
add
sbb
scas
(bad)
lahf
jecxz
sti
shl
ins
sub
hlt
ins
loope
in
cmp
sahf
pop
pop
xchg
cmp
out
(bad)
xor
(bad)
fnstsw
mov
sbb
pop
(bad)
leave
test
mov
imul
pop
fidiv
adc
push
movs
xchg
in
pushf
lea
pushf
call
cmp
pop
je
pop
mov
test
jo
mov
jns
cmps
fldcw
fisubr
xor
xchg
fcom
sub
mov
outs
adc
xor
dec
icebp
out
adc
mov
loope
scas
dec
out
add
jp
push
push
int
xchg
imul
sbb
test
add
push
js
ins
xor
fdiv
into
pop
movs
jl
xchg
jp
push
mov
xor
dec
jl
pop
cmps
(bad)
sub
fisub
xlat
push
gs
popf
sbb
cli
loopne
mov
icebp
lods
into
out
mov
out
jle
and
shl
fdivr
add
(bad)
mov
mov
cmp
mov
rcl
xor
pop
lock
mov
cmp
aas
shl
pop
popa
dec
movs
jns
(bad)
cdq
cmps
scas
jbe
int3
ins
sahf
scas
pop
loope
ja
lods
(bad)
cmp
out
adc
in
xor
bound
lods
or
(bad)
sub
sub
fbld
stos
or
xor
fcompp
jbe
add
mov
retf
pop
push
(bad)
mov
xchg
xchg
icebp
push
push
jg
push
das
push
mov
mov
imul
shl
dec
sbb
popf
movs
das
jns
in
das
add
dec
add
mov
or
arpl
aas
adc
pop
sar
cld
stc
in
jne
inc
gs
outs
pop
mov
scas
sbb
xor
and
outs
setge
rcl
in
mov
or
fisttp
lods
mov
fbstp
sbb
push
loop
xor
ds
lods
adc
mov
retf
mov
stos
inc
and
ret
push
bound
fdivrp
cmc
clc
not
mov
cwde
sub
jns
sbb
xchg
adc
cmp
fidiv
in
jl
inc
cdq
jl
mov
sar
outs
and
retf
mov
xchg
leave
xchg
xchg
movs
push
shl
call
push
(bad)
fwait
mov
add
fidiv
and
xor
adc
in
jmp
and
xchg
cmp
in
and
push
lds
push
mov
into
mov
jp
cdq
xchg
adc
out
xor
(bad)
(bad)
in
mov
test
lods
das
mov
sbb
aaa
call
out
xor
or
iret
push
popa
pop
pusha
cmp
jno
and
jne
arpl
les
hlt
in
jo
loop
jno
jne
xchg
xor
rcl
pop
ffree
shr
add
inc
pop
lods
ins
inc
mov
inc
mov
hlt
xchg
popa
shl
(bad)
cmp
jle
push
mov
xchg
cwde
(bad)
retf
pop
and
xor
hlt
jns
or
jo
inc
ja
jne
fwait
aad
ret
push
ds
inc
jge
push
jmp
sub
pop
sar
call
std
aam
xchg
mov
xor
and
jnp
xchg
cmp
and
xor
xor
out
fcmovnbe
pushf
nop
ja
push
leave
shl
mov
cmc
dec
mov
sbb
mov
jge
xchg
movs
das
pop
sbb
and
shl
pop
lahf
jmp
or
in
cmps
xchg
imul
jne
push
mov
sub
sbb
test
out
xor
push
cmps
sbb
shr
in
ja
jp
push
loop
lds
cmp
cld
sti
sub
test
mov
jmp
push
xor
pop
mov
or
mov
test
scas
inc
fldl2t
mov
mov
jmp
or
add
mov
fst
inc
outs
aas
inc
pusha
mov
dec
ss
mov
inc
jl
push
jbe
xlat
lods
sahf
inc
inc
cmp
arpl
mov
xchg
jmp
mov
jecxz
popf
sbb
or
jge
lea
call
jae
cdq
jl
test
in
cs
cli
lods
in
mov
div
push
and
daa
jg
pusha
sub
jno
ins
xchg
dec
lahf
and
sbb
aad
xlat
repz
js
xchg
dec
push
adc
adc
repnz
pop
(bad)
ffreep
push
mov
leave
push
test
xor
dec
jmp
xor
sbb
cmp
int
aad
jnp
and
scas
scas
loop
loope
mov
jb
mov
xor
mov
cmp
(bad)
stos
jg
lock
jns
jge
std
sub
push
sahf
and
pushf
sub
sub
cmps
jbe
scas
sub
jl
pop
fucomi
pop
inc
cmp
lods
adc
loope
adc
out
pop
xchg
idiv
xor
cmp
sahf
rcl
out
or
scas
loop
in
popf
ss
pop
mov
push
pop
mov
or
jae
inc
les
fwait
in
cmc
in
or
movs
pusha
push
mov
ja
popa
jl
out
xchg
push
jecxz
mov
outs
test
ret
leave
mov
stos
pop
and
pushf
mov
test
aaa
jo
(bad)
test
mov
jmp
mov
enter
inc
cmps
fistp
or
repnz
mov
mov
sahf
xchg
into
jbe
mov
push
push
xchg
xchg
pusha
lds
cmp
sbb
clc
les
rol
cmps
xchg
out
jo
scas
not
rcl
mov
fs
push
mov
adc
add
adc
mov
inc
pop
push
js
movs
rcr
or
cld
push
and
iret
cmps
scas
or
push
jp
vpmadcsswd
xor
mov
lds
or
lods
mov
mov
jl
ins
pop
retf
dec
js
ins
rcr
fsubr
fcmovnb
add
popa
imul
xlat
movnti
cmp
add
scas
out
or
or
mov
pop
shl
gs
adc
cwde
cmps
pop
cmp
lea
cmp
shl
(bad)
jmp
iret
add
adc
test
and
push
push
dec
(bad)
jae
in
xchg
dec
xor
dec
dec
dec
sahf
xchg
movs
cmps
loopne
ins
iret
es
movs
mov
and
adc
mov
xchg
add
test
fs
xchg
xchg
adc
imul
movs
pop
and
in
sub
dec
ret
mov
clc
punpcklbw
jl
imul
jo
lds
jae
mov
jmp
xchg
fisttp
cld
icebp
sub
mov
call
cmp
sub
gs
mov
fistp
jge
call
xor
out
and
mov
jbe
js
fst
xchg
cmps
mov
fs
ss
lahf
mov
push
mov
mov
repnz
add
inc
xor
dec
ins
pop
jl
sahf
pop
rcr
or
inc
cmps
arpl
cmp
dec
(bad)
jle
cmps
jecxz
add
sti
outs
dec
retf
xchg
add
push
das
scas
add
xchg
or
stos
mov
mov
cmps
xor
mov
fnstcw
xchg
or
daa
or
mov
adc
cli
fild
fs
in
xchg
fist
push
push
jo
out
jle
and
push
cdq
out
push
mov
jnp
sti
iret
sub
mov
xor
push
cmp
loopne
outs
push
outs
jmp
ins
pop
mov
add
in
xor
pop
(bad)
shl
loope
inc
out
sub
js
add
into
push
mov
(bad)
in
bound
fidiv
jmp
mov
test
es
pop
mov
sti
xlat
jl
xor
inc
repz
lods
jmp
fwait
adc
mov
pop
xchg
xchg
add
ror
loopne
out
arpl
ret
icebp
fiadd
or
ss
cmp
jmp
inc
ficomp
call
cmp
stos
out
cmps
xchg
fisttp
dec
or
add
(bad)
rcr
iret
in
dec
jno
aam
imul
movs
jg
pop
lds
sahf
adc
jne
ret
and
or
sub
fnsave
xchg
daa
inc
lock
std
sbb
inc
mov
mov
and
scas
lahf
icebp
lods
mov
(bad)
inc
cmps
repnz
cmps
push
dec
add
(bad)
test
jnp
in
and
mov
and
sbb
sub
mov
out
push
stc
or
dec
loope
or
sub
mov
jle
test
mov
cmp
pop
pushf
cmp
xor
ss
ret
push
imul
scas
fldenv
mov
cmp
xor
ficom
arpl
iret
test
push
dec
leave
ss
xchg
mov
inc
neg
int
push
mov
pop
sub
call
pop
xor
loop
enter
ds
fsubr
sub
sub
inc
mov
push
mov
inc
scas
jg
cmp
sub
pop
push
aad
adc
out
lds
xchg
xchg
adc
(bad)
in
outs
retf
fldenv
sbb
enter
pop
push
cld
mov
cdq
loopne
xor
push
arpl
(bad)
adc
mov
daa
cld
jnp
(bad)
fiadd
xor
add
cmps
enter
and
xlat
pop
retf
int
not
pop
rcr
in
outs
dec
mov
jmp
or
push
jp
jns
rcl
pop
add
xor
add
dec
sti
adc
test
add
mov
fwait
les
dec
ss
pop
inc
jo
and
xchg
mov
sub
jle
jns
(bad)
mov
scas
xchg
aam
xor
sbb
xchg
stos
dec
cmp
or
loope
clc
and
jnp
pusha
cmp
retf
je
mov
addr16
(bad)
or
dec
leave
cmp
mul
jl
mov
(bad)
xchg
xlat
int3
lods
inc
xlat
shl
das
adc
fwait
leave
dec
and
adc
adc
xlat
and
inc
dec
jno
outs
int3
mov
push
loop
lea
push
jnp
and
jae
aad
retf
jno
test
cmp
lods
out
fcmovnu
lods
(bad)
dec
es
dec
add
pop
mov
sbb
pop
push
loope
nop
sbb
dec
sub
xchg
mov
mov
test
and
ffreep
sub
loop
and
pop
add
or
arpl
mov
les
nop
push
sahf
xchg
push
fs
out
std
mov
inc
cmp
inc
stc
cwde
mov
jmp
jne
sbb
(bad)
xchg
xor
adc
stos
out
outs
or
sahf
nop
cmps
shl
push
int3
cld
in
iret
sbb
or
add
loope
ins
jmp
pop
mov
dec
pop
or
adc
cs
add
std
add
out
bnd
sti
arpl
test
or
sub
or
cmc
dec
push
inc
xor
cmps
mov
dec
inc
loop
movs
push
loope
cmp
movs
jmp
rcl
jae
int
mov
pop
and
fisttp
xor
int3
add
push
xchg
out
daa
daa
cdq
jbe
or
mov
sub
clc
sar
sti
push
push
clc
aad
adc
test
call
jle
xchg
es
outs
pop
dec
sub
rol
imul
int
push
clc
sbb
sti
push
or
mov
mov
imul
xor
cli
cmp
or
cdq
cmps
lds
sub
pop
and
fs
ins
ret
in
mov
dec
jp
mov
std
hlt
dec
repnz
fcom
xor
mov
ins
push
rol
clc
fsub
std
mov
mov
dec
push
cld
push
jge
pop
ror
dec
push
loopne
sbb
and
ds
pop
inc
sub
ficom
push
pop
enter
mov
out
mov
cmp
adc
sub
push
adc
fdivrp
jno
xchg
cli
(bad)
push
dec
outs
pop
arpl
mov
popa
sub
enter
shl
push
int3
cmp
jg
adc
cmp
adc
shr
push
cld
push
ins
adc
jge
jp
ins
or
and
retf
sbb
idiv
js
jge
repnz
mov
cdq
dec
inc
retf
jbe
mov
or
fldcw
push
(bad)
jnp
push
push
pop
pop
jb
add
inc
cmp
and
adc
stos
(bad)
fmul
in
pop
call
into
fmul
pop
(bad)
out
mov
cmp
jmp
scas
outs
dec
mov
dec
imul
sub
cmps
fs
imul
dec
jle
enter
aam
adc
and
lock
retf
ret
daa
xor
fwait
loopne
xchg
mov
arpl
add
jge
(bad)
stos
mov
or
pop
push
cld
jmp
popf
cli
add
pushf
popf
mov
(bad)
sbb
cmp
fcmovnbe
popf
cmp
jg
test
repz
dec
add
sub
jne
jns
out
sub
adc
out
test
or
int
push
cmp
call
push
test
and
sbb
scas
pop
out
mov
repz
fwait
mov
pop
(bad)
push
sbb
int3
fcmovu
mov
stc
test
arpl
mov
(bad)
add
xchg
jge
sub
fst
pop
sbb
push
leave
and
les
and
test
sbb
jo
(bad)
mov
lds
retf
push
sub
xlat
cmp
xor
inc
sub
mov
fwait
or
pop
jne
push
loop
adc
pop
xchg
int
mov
dec
cmp
les
ins
push
pop
movd
mov
loopne
adc
xlat
push
and
xchg
sbb
iret
repnz
sbb
cld
xchg
cmp
lods
stc
shl
push
shr
adc
(bad)
cdq
fld
push
(bad)
mov
movs
mov
ret
add
push
scas
fcom
pop
mov
push
scas
shr
jmp
mov
ret
pop
ja
div
xor
jo
mov
jmp
or
lods
repnz
aam
dec
outs
and
shr
dec
cmp
mov
cmp
sub
pop
dec
jmp
fisubr
addr16
jo
retf
xor
outs
fsub
loope
ret
sub
jbe
pop
popa
inc
adc
xor
cmp
sbb
stos
hlt
mov
xor
pop
and
xchg
ds
mov
push
dec
xchg
stos
stos
call
cmp
imul
dec
or
and
sbb
(bad)
cmps
mov
pop
in
or
xlat
sub
mov
dec
dec
xor
addr16
cdq
es
mov
xchg
in
mov
icebp
les
or
inc
popa
xchg
or
lods
add
arpl
dec
adc
cmps
xchg
mov
sub
les
fwait
sub
cli
add
mov
or
mov
push
stos
cdq
call
xor
mov
in
cmp
jmp
dec
shr
fld
call
add
lods
mov
stc
mov
repnz
inc
jp
inc
add
and
lea
xor
stc
pop
movs
and
and
jecxz
int3
or
push
retf
out
sub
test
aad
bt
push
repnz
movs
out
dec
inc
lds
sbb
dec
fucomi
stos
int
loope
push
cmc
pop
mov
rol
loop
test
aam
ror
int3
sbb
push
xchg
js
push
ror
inc
pop
hlt
sar
cdq
sbb
retf
movs
std
mov
or
inc
push
fwait
or
outs
adc
aaa
mov
cli
pop
jmp
(bad)
adc
in
xchg
retf
addr16
jmp
pop
popf
jp
pop
ret
sub
sub
push
sahf
sahf
fild
out
retf
mov
shr
test
(bad)
cmc
sti
movs
jnp
js
mov
push
daa
jbe
das
lock
sub
xlat
rol
mov
pusha
fisub
ror
in
movs
jecxz
ret
retf
dec
sub
in
idiv
cmp
dec
pop
xchg
push
loopne
sub
pop
or
dec
mov
xor
rol
xor
pop
mov
fistp
or
shl
inc
or
int
mov
jecxz
imul
cmps
ret
inc
push
push
adc
or
jae
xlat
sub
jb
xchg
neg
inc
mov
pop
mov
loop
jg
dec
mov
mov
out
rol
out
inc
in
jns
inc
push
movs
repz
imul
ds
jl
push
mov
aas
stos
in
fisttp
adc
scas
mov
stos
ret
cmps
and
ret
pusha
dec
sbb
js
movs
cmp
adc
add
push
xchg
jl
push
retf
sbb
jb
dec
cdq
cmp
out
push
add
test
cmp
jns
out
fwait
inc
adc
mov
and
jno
inc
test
sti
es
adc
adc
in
mov
push
lea
mov
sbb
mov
push
inc
push
scas
in
or
and
sbb
xor
inc
jp
fld
fs
mov
iret
cmp
lods
or
pusha
lock
xchg
sbb
pop
loop
leave
mov
retf
mov
inc
ja
and
jnp
stos
inc
repnz
icebp
popa
mov
jb
loope
xchg
jmp
aad
sub
cmps
mov
and
test
loop
push
pusha
push
frstor
addr16
mov
scas
lahf
pop
dec
hlt
sub
div
pop
add
push
adc
div
mov
add
cmp
fimul
cld
fistp
dec
adc
in
pop
xchg
push
cmp
lahf
bndstx
stos
js
or
pushf
sar
dec
xchg
sar
xadd
mov
xchg
jns
ss
cld
mov
inc
push
rcr
mov
dec
dec
pusha
outs
(bad)
jmp
cmps
aam
adc
cmp
lods
mov
shr
mov
xchg
xor
or
dec
mov
aam
imul
jbe
xor
in
ins
popf
sti
or
repz
movs
push
push
jp
xor
ret
push
sub
in
hlt
mov
cmps
lea
inc
aad
cwde
ficom
adc
fidiv
xor
mov
pop
mov
push
push
jae
pop
mov
pusha
popa
mov
adc
ins
jl
cmp
sub
jb
popa
add
mov
dec
test
jnp
scas
lods
sbb
das
pop
mov
add
repz
cmp
sub
je
xor
test
loope
test
lds
jae
(bad)
pop
mov
daa
pop
repz
addr16
pop
mov
add
jmp
xchg
sbb
adc
dec
cmc
xchg
mov
push
retf
bound
xchg
adc
gs
lea
sbb
jbe
sti
push
push
nop
push
push
push
xor
popf
xor
jae
das
dec
pop
mov
dec
cmp
nop
test
js
data16
cmp
pop
and
or
scas
aaa
ss
das
outs
in
add
jb
inc
out
lahf
bound
inc
in
add
shl
mov
rcl
mov
or
mov
dec
mov
push
mov
fnstsw
shr
push
dec
mov
(bad)
std
inc
mov
sub
jge
cmp
add
movs
push
mov
and
aas
jnp
xor
mov
inc
fsub
inc
cwde
add
repz
mov
fadd
adc
mov
movs
div
imul
jo
sbb
or
nop
sbb
jae
ins
sub
div
rcl
neg
fs
inc
dec
add
in
test
dec
push
dec
pop
stos
jg
or
mov
adc
test
sub
mul
pop
scas
stos
fidiv
and
and
adc
test
pop
popa
clc
addr16
adc
out
ja
jle
xchg
cld
out
mov
pushf
shr
and
retf
add
gs
adc
add
loop
fs
xchg
outs
mov
or
call
cwde
mov
je
icebp
xchg
sbb
push
ss
mov
mov
std
imul
and
aaa
mov
out
or
adc
in
jp
pop
inc
leave
jo
(bad)
adc
fild
and
(bad)
fadd
mov
jnp
enter
sbb
add
xor
les
mov
rcr
lock
ins
xchg
outs
bndldx
or
fld
jecxz
icebp
repnz
sar
stos
das
push
push
add
dec
push
mov
cmp
fcmovbe
(bad)
fist
jbe
jecxz
dec
mov
xor
das
fwait
fwait
dec
dec
inc
sti
mov
bound
cmp
call
mov
or
push
jg
add
mov
fld
mov
sub
shr
adc
dec
pop
cmp
mov
dec
mov
stos
and
pop
imul
std
mov
imul
loopne
mov
in
test
sahf
inc
mov
jo
mov
fnstenv
jne
adc
pop
xchg
sbb
xchg
aam
lods
mov
cmp
and
add
inc
mov
jns
nop
popf
or
jmp
lods
scas
scas
pop
inc
push
movs
dec
scas
lods
(bad)
call
lea
sbb
adc
leave
jb
push
xchg
or
cdq
cli
sbb
jecxz
test
ins
mov
scas
sti
push
std
adc
popf
xchg
out
arpl
ret
jle
cdq
rol
and
add
ja
retf
add
inc
xchg
pusha
int
fstp
and
or
test
jp
dec
mov
mov
jnp
jge
jl
sbb
xchg
ret
jno
ficomp
mov
out
push
shl
jno
mov
loop
popf
movs
mov
xor
jae
ror
out
adc
hlt
outs
cli
out
test
cmp
dec
cld
fwait
jae
adc
xchg
jb
mov
es
mov
add
add
fstp
ror
mov
jne
adc
mov
lods
cmc
mov
in
push
push
sub
pushf
xchg
mov
icebp
jns
dec
rcr
shl
pop
arpl
and
popf
dec
pop
sub
mov
add
mov
arpl
ins
cwde
fld
jmp
lods
jle
fndisi(8087
or
(bad)
in
push
enter
rcr
xor
inc
fwait
cli
mov
mov
in
push
sub
cdq
add
inc
adc
cmp
std
sub
xchg
(bad)
imul
sub
pop
pop
repnz
cmps
cmp
nop
inc
pushf
vcvtss2si
push
or
pop
xlat
xchg
js
loop
nop
ds
mov
jnp
mul
sti
test
clc
loopne
popf
and
out
push
aaa
test
jo
or
xchg
jne
push
sub
stos
ds
or
cmp
pop
nop/reserved
jmp
fidiv
fs
xchg
sar
mov
rcr
outs
std
and
addr16
scas
jp
dec
test
out
adc
ins
enter
int
outs
in
mov
pop
imul
xor
mov
mov
fisubr
sub
jbe
dec
jne
or
push
mov
xchg
or
pop
popa
test
rol
inc
jae
bound
add
lock
xchg
xor
adc
arpl
(bad)
push
les
sti
sub
es
push
pushf
retf
pop
jmp
jg
inc
lds
ja
sbb
ds
sub
cmp
(bad)
pop
push
pop
sub
inc
sbb
push
das
adc
jnp
inc
(bad)
jb
retf
nop
pusha
dec
shl
mov
rol
mov
imul
add
push
jmp
cmp
dec
in
lock
aam
push
push
sub
push
xor
push
(bad)
push
cmp
mov
addr16
xor
cmp
jns
dec
add
sub
clc
xchg
push
mov
jle
pop
or
stos
or
(bad)
adc
cmp
scas
and
ret
movs
cmc
lods
mov
out
lods
test
xchg
jge
xor
cld
mov
repnz
push
int3
arpl
jb
mov
retf
fld
add
mov
popf
call
add
jo
lods
inc
popa
fadd
jb
cld
add
retf
in
push
stc
adc
and
stos
int
scas
(bad)
daa
imul
sbb
stc
mov
xor
into
add
add
xor
imul
inc
clc
sub
lea
ret
dec
dec
fmulp
mul
dec
and
inc
add
jno
jbe
and
inc
jnp
repz
and
jns
mov
and
outs
jg
add
pop
in
jmp
adc
xor
or
adc
or
(bad)
jp
shr
fs
jp
mov
clc
xchg
adc
add
scas
xchg
mov
shl
mov
cdq
inc
xchg
(bad)
fsubr
es
mov
dec
xor
pop
jns
and
jecxz
and
inc
sub
jge
or
arpl
or
adc
sub
aas
sbb
lock
ds
mov
fcomp
daa
jl
and
scas
inc
add
or
test
sti
out
xor
jno
(bad)
xor
push
and
inc
mov
or
test
dec
int
pop
push
inc
lods
adc
adc
push
add
xchg
push
pop
or
and
int
or
movs
and
or
xchg
cmps
rcl
shl
xor
xor
pop
mov
sbb
xchg
jp
ja
and
scas
adc
rcr
fadd
ret
js
add
nop
ja
stos
(bad)
dec
aad
push
repnz
xor
xor
loope
(bad)
mov
into
cmp
jae
mov
js
aas
and
and
sbb
inc
daa
mov
adc
sbb
cs
mov
div
aaa
mov
push
shr
mov
lods
call
(bad)
push
dec
clc
retf
loopne
pop
jecxz
(bad)
lea
dec
xchg
data16
pop
sahf
xchg
pop
adc
das
js
pop
push
fidiv
mov
aaa
shr
inc
test
fcmovb
or
fdivr
es
scas
addr16
cdq
fnstcw
clc
int3
dec
mov
jmp
xchg
jae
leave
or
xchg
fmul
pop
add
dec
nop
mov
jmp
and
fsubp
add
popf
xor
scas
push
xlat
mov
dec
popf
call
fisubr
pop
lock
hlt
adc
gs
jmp
cmp
pop
inc
mov
test
mov
mov
ins
dec
push
adc
dec
cmp
test
shr
or
fstp
dec
test
scas
movs
cmps
and
fwait
mov
cmp
jns
aad
pop
sub
ror
add
jl
out
or
sbb
mov
and
dec
xor
daa
mov
jp
or
ds
loop
das
lock
sbb
jmp
mov
ss
xchg
mov
in
sbb
dec
movs
sub
or
pop
mov
mov
std
cld
sar
sbb
iret
dec
pop
push
call
mov
test
or
fldenvw
out
sub
test
(bad)
mov
adc
lods
sub
push
cmp
sub
mov
mov
xchg
or
fistp
ret
adc
dec
jl
int
outs
(bad)
imul
push
add
adc
jmp
ret
and
int3
dec
mov
mov
lods
cmps
sub
outs
inc
sbb
mov
inc
or
push
leave
mov
inc
mov
or
jb
(bad)
jmp
xchg
enter
xor
ficom
dec
scas
xor
in
dec
pop
dec
ret
icebp
cld
adc
pop
cdq
mov
dec
mov
addr16
add
jp
nop
xor
xor
out
jo
sbb
xchg
sub
call
idiv
les
or
out
adc
xchg
sub
repz
dec
xchg
pushf
xor
enter
sbb
jg
mov
inc
sub
jo
push
fcmovu
dec
mov
call
fsubr
test
or
ss
rcl
dec
add
(bad)
fsubr
out
aas
jmp
adc
(bad)
loop
inc
or
push
add
loopne
int3
cmp
push
out
fwait
leave
add
enter
rcl
ins
imul
push
cld
ins
bound
movs
jge
outs
fild
add
iret
mov
ds
xchg
or
or
pop
xchg
and
push
stc
scas
sahf
pop
fs
push
mov
div
shl
scas
ins
int3
jmp
pop
retf
je
and
clc
and
dec
aam
into
out
sbb
shr
rcl
jno
popa
shl
inc
inc
sbb
test
ds
dec
inc
add
fdiv
mov
test
or
sub
sar
mov
mov
popf
stc
cmc
in
xor
adc
dec
mov
hlt
jmp
jmp
inc
push
xor
dec
and
cmps
jl
rcr
cmp
jb
aad
mov
outs
ss
movs
(bad)
sbb
cmps
leave
pop
mov
add
jns
push
fiadd
(bad)
sub
push
scas
ficom
js
stos
pop
pop
and
adc
mov
(bad)
int
imul
mov
push
inc
mov
loopne
add
push
or
push
test
and
xchg
lds
cmp
xchg
inc
cmp
(bad)
and
ret
pop
dec
push
xchg
dec
mov
dec
sub
push
and
out
(bad)
sub
out
mov
and
xchg
pop
stc
mov
jecxz
sbb
jne
(bad)
mov
cmp
xchg
popf
fld
jp
push
xchg
xor
fidiv
aaa
adc
push
jmp
pop
push
xchg
jns
lock
sbb
xchg
pop
aam
mov
lods
adc
repnz
xchg
stos
cmc
sub
dec
dec
add
imul
add
ja
iret
popa
shl
or
out
xor
add
dec
jmp
mov
aad
loope
hlt
dec
or
mov
push
out
cmc
repz
cli
test
and
test
wbinvd
add
mov
inc
mov
xor
sbb
xchg
pop
xchg
sub
fadd
call
hlt
sub
inc
xor
cmc
fst
jbe
pushf
iret
je
fs
retf
scas
inc
out
dec
lahf
fbld
mov
outs
xchg
pop
imul
mov
clc
outs
mov
(bad)
mov
aad
pop
sub
mov
ins
call
fcomp
xchg
test
adc
into
daa
push
adc
sar
es
xchg
cld
push
mov
mov
repnz
pop
dec
jnp
gs
scas
dec
dec
idiv
repz
and
ins
outs
addr16
nop
cmp
adc
das
xor
rol
in
fsub
jnp
in
jne
jb
mov
imul
sub
xchg
lahf
lea
or
pop
mov
xchg
movs
jecxz
addr16
inc
sahf
popa
jae
cmp
xor
adc
stc
cmp
sub
adc
lahf
jnp
aam
inc
inc
cmps
int
xchg
stos
ja
mov
int3
sbb
rcl
test
inc
popa
adc
adc
into
mov
ins
ror
or
add
ret
ds
(bad)
jb
jae
adc
sbb
xchg
push
in
mov
mov
dec
push
inc
xor
lods
pushf
and
pop
dec
sbb
pusha
int
xchg
dec
lea
mov
cmp
retf
movs
or
push
and
xor
mov
fild
adc
lea
jp
xor
push
push
call
adc
dec
cmps
push
aaa
add
leave
out
push
pop
ret
ins
fwait
mov
xor
clc
adc
ror
cmp
inc
jmp
pusha
cmc
retf
fimul
push
add
inc
sub
lods
in
cmp
ret
or
add
cmp
sbb
aas
(bad)
lods
not
sbb
dec
pop
repnz
mov
xor
pop
popa
or
(bad)
xchg
(bad)
aaa
mov
mov
jmp
mov
scas
(bad)
sub
(bad)
(bad)
adc
jmp
clc
ins
jp
aam
enter
daa
xor
stos
shl
addr16
icebp
mov
fisub
movs
jne
nop
mov
inc
(bad)
xchg
mov
jp
mov
cmps
sahf
rol
pop
retf
mov
and
xchg
test
(bad)
loop
sub
cwde
inc
mov
mov
sbb
shl
mov
sub
sti
ror
xchg
add
cmps
or
jmp
fidiv
pop
cmc
push
adc
ror
mov
retf
xchg
adc
add
sbb
mov
mov
mov
(bad)
shl
call
mov
mov
ffreep
ins
xor
aaa
cmp
sub
jne
cmp
nop
adc
inc
aaa
mov
push
and
mov
xchg
push
dec
jae
jo
rcl
icebp
mov
push
xlat
cmp
xor
outs
inc
fidiv
jmp
cmp
test
loope
sbb
(bad)
cs
popa
dec
fcom
cmp
push
loope
(bad)
retf
xchg
stos
bound
outs
retf
push
cmps
inc
sub
xor
push
call
movs
mul
jae
mov
call
loopne
lods
push
cld
in
aas
adc
adc
jae
arpl
clc
mov
push
pop
pop
(bad)
adc
outs
gs
pop
mov
adc
mov
std
pop
mov
xchg
icebp
popa
data16
push
jb
pop
das
fstp
jb
fimul
cmp
test
repz
jns
(bad)
ins
xor
xchg
movs
or
jno
dec
adc
push
out
mov
fwait
hlt
pop
ficom
cmp
(bad)
mov
shl
push
mov
and
xor
cs
call
aad
jmp
shl
lods
jge
mov
and
xor
add
fist
push
and
mov
ja
(bad)
and
push
adc
xchg
stos
mov
adc
push
fldcw
jae
retf
sbb
and
(bad)
mov
pop
xchg
(bad)
push
fidiv
ja
inc
or
mov
call
bound
push
out
or
mov
in
xchg
stc
sbb
fs
lods
dec
in
loope
cs
push
mov
push
int3
not
test
test
and
jns
pushf
push
or
ins
cmp
fnsave
je
sbb
mov
loope
xor
sti
sbb
or
shl
cmp
xchg
mov
adc
xor
dec
das
mov
imul
(bad)
mov
loopne
stos
jle
fiadd
nop
xchg
in
jo
mov
int3
add
repz
js
mov
test
sbb
push
in
and
test
add
pop
xchg
xchg
mov
jbe
lahf
mov
mov
cmps
and
rcl
fisub
jnp
mov
lods
inc
lock
data16
mov
push
mov
je
(bad)
jmp
pop
xor
test
xchg
mov
mov
(bad)
ja
cmc
adc
cmp
fisubr
jo
xor
(bad)
push
outs
xor
arpl
adc
pop
sub
mov
test
ret
xchg
sub
inc
rol
in
dec
cmps
mov
das
ins
enter
push
jb
cmps
int
xor
fisub
popa
aaa
clc
inc
sbb
sbb
(bad)
mov
lea
jmp
pusha
jmp
pop
add
xlat
sti
es
add
ja
adc
xchg
or
xchg
xchg
(bad)
sbb
test
outs
popa
scas
inc
push
clc
or
lahf
icebp
cmc
out
cmp
add
fcmove
arpl
xchg
ffreep
xchg
xor
inc
loope
push
bound
mov
ret
xchg
add
or
dec
repz
test
sbb
(bad)
mov
gs
mov
inc
jmp
pop
xor
and
std
out
xor
cmp
and
or
and
(bad)
cwde
aad
xchg
popf
sbb
jmp
mov
push
gs
and
pop
fwait
popa
nop
push
cmps
adc
shl
(bad)
xor
cmp
push
add
dec
ins
repz
push
inc
mov
in
push
aam
(bad)
jp
and
rcr
xchg
xchg
mov
mov
fdiv
jl
mov
loopne
data16
dec
test
jo
pop
inc
ins
call
mov
or
inc
jg
(bad)
div
push
pop
inc
push
int
sbb
add
repnz
and
inc
call
div
imul
ss
jge
mov
mov
loope
and
out
mov
int3
daa
mov
push
mov
xchg
and
ds
std
cmps
xchg
cli
shl
ror
mov
sbb
nop
xchg
push
pop
jg
daa
dec
arpl
mov
in
fcmovbe
inc
std
iret
cmps
imul
test
jae
dec
(bad)
xchg
xchg
test
fst
mov
mov
not
retf
sub
push
cmps
dec
mov
outs
push
js
cmp
call
or
mov
dec
mov
into
mov
dec
sub
loope
sub
cmp
or
pop
(bad)
sar
mov
ror
fiadd
out
pop
and
fldcw
push
hlt
es
nop
xchg
jl
mov
cmp
add
adc
stc
and
sub
sub
dec
cmp
push
push
sar
sub
inc
mov
inc
jmp
mov
scas
xchg
jo
leave
lods
adc
nop
cmp
cmp
add
xchg
jns
fild
add
push
pop
cmp
and
xor
add
sbb
push
hlt
pop
hlt
push
out
int
shl
or
cmp
mov
jge
or
inc
frstor
jecxz
add
sbb
in
(bad)
sti
or
loop
jmp
sub
and
fld
cmps
fisub
push
mov
pop
mov
aam
mov
into
mov
repnz
dec
mov
and
adc
jp
mov
es
jl
add
fnstsw
pop
cs
adc
jecxz
test
push
and
jbe
fs
push
movs
add
rcr
inc
dec
gs
addr16
shl
pushf
or
add
js
iret
test
out
test
std
cmp
daa
cmp
in
mov
cmp
fdivr
mov
sub
adc
inc
jns
sahf
(bad)
adc
ds
outs
jp
dec
in
leave
cmps
cli
cmps
or
es
and
jge
inc
adc
inc
call
aas
jge
sub
fcomp
mov
sub
out
shl
arpl
rol
iret
movs
xlat
or
xchg
enter
pop
push
push
pushf
fisubr
xor
enter
scas
add
add
loope
nop
push
cmp
movs
rol
les
xchg
jno
retf
mov
loop
jecxz
(bad)
jecxz
mov
inc
stc
mov
mov
pop
je
pop
xchg
stc
repnz
lds
push
call
and
adc
and
xlat
(bad)
loop
sbb
cmps
inc
shr
mov
jo
cwde
and
gs
inc
and
ins
movs
push
xchg
call
scas
(bad)
dec
aad
pop
pushf
jne
int
adc
mov
jns
dec
pop
xchg
adc
and
pop
or
and
idiv
mov
and
ds
cmp
dec
pop
mov
pop
jle
pop
fisubr
pop
fcom
adc
push
test
adc
and
mov
into
and
outs
add
cli
fimul
loop
jmp
(bad)
bt
xor
lods
test
cmc
lds
adc
les
dec
cmp
stos
leave
adc
cmps
pusha
(bad)
cmp
add
(bad)
(bad)
jg
xor
jns
ret
fnstcw
and
call
xchg
sub
pop
push
sub
ror
sar
adc
addr16
in
fmul
add
push
fist
leave
out
scas
loopne
es
imul
fimul
and
(bad)
loopne
add
jne
out
lds
aas
push
adc
push
dec
dec
jns
inc
sub
das
(bad)
stc
jb
loopne
xlat
and
push
shl
stc
xor
fidiv
repnz
sbb
mov
xor
xchg
cwde
nop
adc
int
popf
in
loopne
popa
lods
call
mov
and
inc
sbb
jmp
ficom
inc
cmc
mov
imul
cdq
jae
sbb
sbb
cwde
cmc
adc
adc
jge
or
sbb
pop
adc
add
pop
shl
stos
int
add
sbb
outs
jmp
sbb
in
inc
jbe
dec
mov
mov
inc
data16
in
mov
cld
push
lea
and
(bad)
adc
push
pop
jg
call
xchg
jae
fsubr
cli
retf
adc
dec
sahf
sbb
mov
pop
ror
loope
fdivr
and
or
mov
popf
jb
and
int
int3
jne
mov
js
push
retf
arpl
sar
(bad)
pop
ss
add
mov
xchg
fst
retf
dec
sahf
push
and
repnz
dec
test
mov
sar
cmp
mov
mov
push
mov
(bad)
xor
sbb
sub
aaa
or
cmp
mov
stos
loop
mov
int3
inc
mov
retf
cmc
push
and
lds
mov
xchg
movs
xchg
inc
pop
test
loopne
scas
add
aas
pop
fstp
aam
cmp
(bad)
sub
div
div
int
and
push
jl
inc
jl
mov
cdq
mov
cmps
lock
pusha
pop
shl
mov
inc
inc
mov
mov
aam
adc
loop
jecxz
pop
mov
in
sub
fs
sbb
dec
iret
sub
adc
nop
cmp
or
xchg
xchg
outs
fwait
jae
aas
ja
pop
mov
ins
(bad)
loopne
lahf
sub
cld
test
xchg
fadd
mov
test
jae
aad
cmc
inc
fs
pop
dec
sbb
adc
out
mov
push
(bad)
and
hlt
aam
mov
adc
jle
xchg
test
push
pand
dec
mov
(bad)
retf
cmp
sub
les
jge
mov
push
pop
daa
push
mov
out
and
in
dec
cmp
jb
mov
push
fsub
mov
cmp
adc
jmp
mov
fisub
jne
mov
mov
pushf
test
xor
xor
aas
add
or
scas
(bad)
jo
cmp
sub
cmps
ja
mov
cld
sti
sbb
fsubr
movs
loop
sti
les
inc
or
cmp
ss
push
push
fs
jmp
dec
sbb
dec
mov
les
scas
fucomip
mov
movzx
sub
cmp
(bad)
jae
sbb
rcr
pop
int3
push
sbb
out
in
jbe
pop
lahf
stos
neg
not
xor
ror
addr16
movs
test
jno
dec
sbb
push
cld
mov
fldenv
or
test
sbb
loope
rsqrtps
fadd
inc
fs
jnp
xor
jge
(bad)
iret
jne
sar
mov
sbb
aad
push
movs
jno
inc
and
mov
(bad)
mov
mov
add
mov
jg
sbb
pop
xor
addr16
jmp
sbb
dec
mov
cmc
xor
jnp
push
(bad)
call
sar
mov
add
and
int3
inc
adc
jp
mov
lods
fcom
nop
popf
(bad)
enter
(bad)
mov
ret
icebp
stos
retf
sub
fstp
inc
aaa
fs
shl
scas
cmp
data16
ins
je
(bad)
fcomp
jl
in
mov
adc
or
inc
mov
inc
add
arpl
mov
loopne
inc
(bad)
jge
ins
dec
jl
popa
nop
jmp
loopne
jp
out
mov
std
ror
xor
pop
push
adc
cmc
or
cmp
jo
dec
mov
out
or
das
push
pop
mov
dec
ss
das
mov
dec
push
cli
mov
adc
lock
add
pop
and
aad
idiv
retf
mov
lahf
rcr
cmps
mov
dec
xchg
gs
cmp
mov
mov
dec
fnstsw
mov
push
pop
push
repnz
ja
jne
xchg
sub
pop
sti
js
or
cs
loope
cmp
cld
js
pop
xchg
jge
gs
push
pushf
es
or
enter
fdivr
ja
add
pop
mov
clc
push
jbe
push
hlt
iret
push
pop
ins
and
pop
std
jecxz
in
xchg
data16
frstor
in
fwait
leave
pop
mov
mov
(bad)
lea
jne
jbe
sbb
call
jmp
iret
and
add
idiv
push
(bad)
lods
mov
xchg
jg
aam
inc
pop
fsub
call
xor
outs
std
mov
push
mov
dec
mov
push
jnp
ss
scas
jmp
sar
arpl
arpl
stos
jge
jo
sub
mov
imul
add
sbb
enter
mov
repz
adc
push
ror
push
in
dec
paddsw
cmp
out
sub
idiv
pop
cs
in
xor
fild
and
push
mov
sbb
jbe
adc
enter
xor
add
scas
mov
outs
adc
nop
and
je
movs
mov
sbb
ss
aas
jns
es
pop
daa
leave
repz
inc
pop
out
gs
jae
dec
int3
stc
jl
mov
lock
retf
int3
jae
lea
dec
dec
or
sub
lea
les
push
test
retf
not
ja
jns
mov
mov
jmp
mov
popa
mov
mov
out
cli
idiv
shl
cmp
xchg
je
mov
mov
adc
xor
sub
adc
xor
cmps
xchg
cmps
sar
aad
js
push
lock
call
into
test
(bad)
test
adc
stc
mov
fstp
ret
loop
call
pushf
pushf
fwait
sar
out
mov
cmp
adc
jo
enter
inc
add
push
jg
sbb
dec
mul
sub
test
pop
frstor
js
inc
adc
push
test
mov
fsub
int
rol
mov
push
nop
push
and
fidivr
imul
into
jp
stc
inc
jmp
sbb
jmp
addr16
syscall
mov
inc
repz
mov
imul
xchg
push
mov
xchg
cmp
call
test
dec
out
jb
jle
or
push
ror
mov
pop
jnp
xchg
mov
xor
mov
(bad)
cwde
cld
movs
pop
mov
fbld
xor
dec
inc
out
ret
cmp
and
iret
push
cmp
add
mov
or
cmc
pop
cmp
and
add
(bad)
test
pop
in
dec
pusha
clc
and
inc
sbb
test
xor
fucomi
mov
xor
mov
jnp
aad
dec
mov
adc
xchg
retf
jb
sar
lea
inc
loope
xlat
inc
cmp
fst
retf
dec
push
adc
mov
mov
xor
push
xor
imul
movs
push
out
repnz
leave
pinsrw
pop
out
into
jl
(bad)
mov
and
cmp
mov
xchg
jl
cmc
fwait
jae
outs
test
repnz
das
mov
mov
int3
call
xchg
mov
sub
int
scas
imul
mov
test
ss
fstp
fild
(bad)
cld
push
push
out
repz
inc
mov
stos
adc
xlat
dec
retf
fs
jmp
pop
xlat
push
ficomp
aas
mov
jne
or
pop
mov
jns
mov
inc
mov
hlt
or
in
inc
fwait
inc
mov
out
add
and
rol
test
mov
pop
sub
add
xchg
and
mov
(bad)
out
sbb
inc
movs
aaa
lock
mov
push
out
push
daa
js
mov
and
repnz
add
cmps
test
pop
push
sbb
inc
jecxz
jp
dec
adc
inc
fbld
sbb
es
ins
push
or
(bad)
ss
xor
sbb
into
fidivr
fs
imul
pushf
pop
and
les
sub
retf
mov
enter
cmp
or
cli
loope
jg
div
ss
jge
add
outs
mov
jbe
iret
push
push
fs
pop
jns
inc
in
mov
xchg
fwait
arpl
adc
ja
ins
rol
push
xchg
lods
aas
xlat
dec
imul
in
add
mov
or
mov
pop
xor
das
inc
sub
mov
mov
cmc
jnp
popf
fsub
dec
pop
ja
pop
adc
ins
jno
idiv
adc
jp
sbb
aas
shl
xlat
xchg
rcr
adc
gs
je
retf
ret
(bad)
mov
aad
cmps
add
sbb
pop
adc
pushf
sub
cmp
fstp
jecxz
inc
lahf
ds
pop
bnd
cdq
arpl
pop
sar
cs
mov
add
cld
in
add
das
mov
and
add
fsub
addr16
shl
dec
cmps
ss
test
nop
or
icebp
xchg
aam
dec
mov
inc
test
push
jne
adc
mov
and
sbb
and
sahf
dec
aam
inc
ins
jb
and
mov
outs
out
jp
or
pop
mov
mov
test
push
leave
sbb
mov
cmps
cmc
shl
pop
pop
and
rcl
mov
fimul
icebp
lods
cdq
sbb
(bad)
jp
popf
add
inc
dec
out
cmps
pop
lea
movs
fistp
mov
outs
push
daa
add
aas
xchg
cmp
pop
dec
imul
repnz
lds
pop
adc
add
dec
nop
xchg
aad
mov
enter
or
sub
(bad)
adc
aaa
mov
or
int
(bad)
jmp
adc
mov
icebp
lahf
cmp
jbe
mov
loopne
push
inc
int3
fs
ret
xlat
fdiv
push
push
dec
jne
imul
sbb
ret
outs
scas
jp
fst
out
jg
cmp
(bad)
push
push
dec
je
out
popf
loopne
pop
push
fist
stc
adc
sbb
dec
xor
ficom
jge
dec
int3
adc
pop
fcom
aam
xlat
mov
push
sahf
cmp
add
jbe
call
sar
adc
xchg
fimul
ror
cmps
and
fwait
int
ins
mov
jbe
dec
pop
add
dec
nop
pop
xchg
mov
loop
xlat
aad
xchg
dec
ins
sub
fcmove
rcr
aaa
mul
lea
(bad)
sub
rcl
aas
jmp
gs
sbb
test
dec
sbb
or
cmp
cld
jno
nop
xchg
inc
pop
stos
arpl
mov
es
xchg
nop
fld
in
and
das
mov
sti
mov
aaa
jns
fwait
mov
xchg
test
cmp
xor
fidiv
inc
adc
mov
dec
mov
xor
mov
adc
lds
(bad)
mov
mov
cmp
inc
mov
pushfw
sub
mov
stc
xor
das
pop
add
dec
ins
mov
mov
clc
mov
jmp
and
ror
push
out
sub
cmp
ror
and
xor
fndisi(8087
arpl
call
mov
inc
movs
cmovg
xchg
scas
loop
inc
(bad)
out
lds
fld
pop
ins
mov
cmp
mov
jae
rcr
(bad)
(bad)
jne
mov
mov
sbb
mov
push
or
sbb
mov
xchg
mov
leave
mov
push
(bad)
mov
push
sub
addr16
loop
add
or
add
mov
or
mov
imul
pop
mov
clc
mov
jno
rol
mov
imul
adc
(bad)
ror
pop
stos
aam
and
cmp
repz
test
(bad)
fisttp
stos
movs
pop
xor
pop
adc
mov
aas
sub
xor
dec
aad
xchg
push
xlat
jb
imul
cs
jb
push
sbb
in
mov
lea
rcr
xor
imul
sub
xchg
outs
sar
and
arpl
jne
fstp
inc
mov
icebp
fsub
xchg
pop
ret
sbb
sub
cli
jp
push
nop
mov
std
mov
pop
jo
cmc
jns
in
loop
arpl
repz
mov
add
into
mov
or
add
movs
jg
imul
sbb
sbb
dec
pushf
xchg
xchg
imul
popfw
hlt
and
(bad)
lock
xchg
push
outs
scas
sbb
retf
mov
in
xchg
jl
mov
jbe
mov
movs
imul
sub
sub
inc
aaa
mov
cmps
xchg
sub
push
fstp
add
sub
pop
jo
stos
sbb
push
pop
mov
shr
xor
inc
jmp
xchg
jle
(bad)
scas
jmp
or
fxch
popf
(bad)
clc
mov
xchg
jns
cmp
lea
mov
xchg
push
popf
sbb
fldcw
sbb
daa
lahf
popf
retf
hlt
and
bound
dec
into
nop
ss
mov
jge
clc
or
test
add
and
(bad)
adc
push
mov
gs
push
int3
mov
and
test
adc
push
or
pop
scas
add
test
dec
(bad)
and
test
xor
cmps
pop
leave
mov
out
mov
jecxz
fcomp
jecxz
xor
inc
or
mov
out
pop
pop
xor
jge
imul
retf
out
push
fdivr
and
int3
test
cwde
or
xor
(bad)
xor
inc
adc
stc
sub
inc
cmp
and
and
mov
lock
jbe
push
hlt
push
out
mov
xchg
mov
or
(bad)
fnsave
movs
and
leave
and
add
pop
popa
loop
popf
nop
dec
dec
mov
int
and
clc
xor
call
mov
pop
aam
mov
ds
pop
dec
cmp
inc
cli
xor
mov
xchg
jecxz
les
imul
jns
or
mov
adc
cmp
jae
enter
cmp
sbb
push
and
movs
dec
inc
sbb
retf
scas
gs
pop
xchg
imul
xor
push
fbstp
push
add
clc
mov
in
mov
out
dec
int3
push
dec
lock
push
test
pop
std
mov
lahf
mov
mov
or
adc
xor
sbb
adc
rcl
cli
or
cmc
retf
inc
imul
sbb
push
(bad)
idiv
xor
sbb
push
daa
push
cmc
and
pop
and
cld
arpl
into
hlt
sahf
pop
addr16
les
add
jo
push
or
fstp
xchg
xlat
fisub
inc
sub
lea
mov
cmp
jb
pop
inc
xor
bound
xor
loopne
idiv
stc
sbb
ret
adc
push
std
adc
mov
jp
shl
mov
jbe
add
xchg
pushf
(bad)
loop
cmp
fsubr
sbb
xor
vmptrst
dec
sbb
mov
add
aaa
jbe
(bad)
loop
mov
mov
test
xlat
outs
mov
int
sub
jmp
cmp
dec
xor
xchg
pushf
inc
adc
push
and
jp
add
jbe
mov
add
jns
or
mov
inc
xchg
mov
dec
pop
in
push
(bad)
push
cmp
in
icebp
xor
add
icebp
add
and
icebp
push
or
outs
scas
jmp
mov
sti
inc
(bad)
popa
fadd
aam
ficom
(bad)
jmp
or
jo
(bad)
jmp
lods
adc
sub
scas
fdivp
or
pop
(bad)
cmp
jb
adc
dec
imul
inc
je
out
into
mov
sbb
adc
add
neg
push
(bad)
and
fwait
loope
xchg
cmp
add
mov
push
scas
mov
(bad)
je
fdivr
je
push
(bad)
xchg
cwde
push
fs
cmp
stos
out
push
fstp
xchg
mov
int
push
ins
jecxz
pop
mov
add
or
outs
sti
mov
addr16
fs
hlt
loop
mov
jmp
les
ret
lods
or
(bad)
icebp
mov
xchg
stos
iret
sub
movs
push
xor
shl
imul
fwait
retf
mov
inc
stos
fstp
mov
and
add
int
xchg
stos
fldenv
mov
pop
mov
cmps
jle
add
push
push
or
inc
pop
xchg
xor
mov
or
pop
cld
scas
sub
std
mov
add
sub
nop
adc
call
stos
pop
sahf
xchg
and
xor
shl
dec
jecxz
lock
shr
pop
cwde
fs
in
enter
mov
movs
fsub
dec
retf
xor
arpl
or
pop
fistp
rcr
nop
loopne
retf
cwde
rcr
jns
dec
mov
jno
mov
xchg
push
mov
cwde
imul
repz
(bad)
mov
repz
mov
push
arpl
imul
push
mov
sub
mov
dec
rcr
add
or
push
cmp
xlat
xchg
inc
dec
mov
cmps
add
int
pop
xor
call
call
pushf
or
cs
int
xchg
pusha
inc
adc
test
mov
imul
ficom
mov
mov
and
pop
shr
(bad)
mov
outs
push
sub
pop
pop
jb
pop
lods
lock
cmp
xchg
xchg
icebp
rcr
cmp
adc
mov
loope
pop
cmp
mov
or
fiadd
leave
movs
xchg
and
mov
jecxz
xor
cld
add
call
or
inc
or
push
or
jno
outs
or
mov
fsubr
out
shl
pop
pusha
cmp
movs
jne
and
cld
(bad)
lahf
pusha
fwait
xchg
xlat
shl
pop
addr16
test
push
xchg
pop
push
jmp
ins
mov
jecxz
call
jnp
or
test
xlat
dec
pop
jns
mov
clc
sbb
(bad)
dec
pandn
mov
in
popa
dec
jecxz
pop
nop
xor
test
pusha
imul
or
scas
add
xor
ret
ins
dec
fdivr
mov
in
pop
fisubr
retf
in
int3
fsqrt
cli
inc
mov
mov
cmps
repnz
pop
push
inc
jmp
jb
dec
out
daa
pop
inc
aam
cmp
add
gs
cmp
out
jmp
cmps
rol
pop
jne
fsubr
loope
neg
lahf
pop
mov
dec
cmp
loop
fdiv
ror
push
xchg
mov
daa
outs
aaa
loope
adc
dec
dec
dec
and
xchg
or
and
mov
push
inc
cmp
cmp
sbb
(bad)
popf
scas
cld
jecxz
shl
pop
loop
enter
sar
fdiv
scas
out
loop
arpl
je
(bad)
test
push
dec
sub
or
push
pusha
adc
adc
jne
out
sub
jne
add
mov
cmp
mov
ins
mov
(bad)
stc
mov
pusha
mov
jo
or
sub
icebp
push
or
push
or
mov
retf
aaa
adc
and
outs
xor
pop
mov
daa
imul
and
inc
gs
stc
cdq
and
rcr
xor
mov
add
dec
and
sbb
cmp
scas
dec
popf
xor
and
fs
mov
in
or
retf
dec
imul
cmp
fstp
dec
jg
xchg
mov
mov
mov
sbb
scas
cs
sbb
pop
int
fnstcw
out
and
pusha
mov
dec
or
mov
rol
jl
push
xchg
xor
outs
gs
xor
jg
add
mov
dec
in
cli
pop
aad
and
mov
fs
dec
aam
in
xchg
mov
mov
nop
jnp
add
retf
ja
cs
loop
mov
repz
mov
mov
jl
or
push
inc
les
sub
mov
pusha
(bad)
out
lea
inc
out
pushf
mov
mov
jmp
mov
js
mov
fsubr
push
mov
adc
lods
or
adc
inc
mov
dec
sub
clc
inc
ins
add
ss
outs
or
mov
xchg
or
jae
push
cmove
inc
stc
ror
sbb
pop
sbb
outs
inc
adc
imul
jae
and
xchg
and
mov
inc
or
pusha
popa
add
lahf
pop
push
cmps
enter
fst
lea
fidiv
clc
pusha
out
lds
xchg
and
leave
idiv
mov
cmc
dec
push
inc
mov
stos
inc
sub
in
pop
in
xchg
in
jns
cmp
push
push
es
jp
dec
add
and
call
loopne
gs
mov
pop
idiv
sub
fldcw
dec
shl
xor
xor
imul
and
mov
bound
add
xor
add
fcom
cmp
xor
add
js
xor
out
sbb
xor
cli
pop
lods
and
adc
sub
xchg
dec
push
push
not
stos
out
sti
adc
lods
fadd
or
icebp
mov
jmp
jno
xor
push
mov
inc
dec
push
inc
jecxz
mov
out
add
jae
(bad)
cmp
mov
inc
daa
(bad)
add
mov
fst
pop
fisub
mov
ja
sub
cli
out
and
mov
lds
pop
movs
fs
arpl
pop
mov
push
pop
mov
cmc
jb
push
test
aam
dec
repz
not
ret
ss
sar
sbb
retf
daa
xchg
cmps
das
int3
pop
scas
pop
jl
out
inc
adc
and
xchg
inc
les
or
xchg
push
push
cmps
cmps
xchg
fwait
or
inc
inc
outs
addr16
sbb
popa
and
imul
dec
or
inc
out
and
mov
fs
imul
(bad)
mov
ins
xchg
nop
jecxz
jb
xchg
mov
bound
into
jb
xchg
clc
cmp
bound
sbb
sub
add
add
push
ins
rcl
rcr
and
rcr
xchg
xchg
sahf
mov
cli
sbb
xor
push
test
or
jmp
pop
jae
xchg
jg
loope
cmp
loope
pop
rcl
inc
inc
pop
or
jl
addr16
jle
call
jg
sub
shr
lods
(bad)
xchg
pop
stos
sbb
pop
sub
or
mov
jae
xor
mov
cwde
xchg
cmovnp
inc
int
outs
add
arpl
ins
ficomp
add
mov
jecxz
adc
not
pop
or
sub
jecxz
pop
shl
rcr
mov
(bad)
jo
pop
test
inc
pop
sar
pusha
push
fst
mov
cmc
dec
imul
mov
jbe
hlt
mov
ffree
or
fs
mov
je
adc
cmp
(bad)
xor
jmp
inc
call
push
push
xchg
mov
shl
push
xchg
push
icebp
leave
cld
int3
inc
int3
mov
adc
cmp
sbb
pushf
jno
jp
jmp
cwde
cdq
mov
out
fisubr
cli
add
dec
sbb
movs
pop
xor
mov
fcom
mov
cmps
bound
sub
mov
mov
cmp
adc
repnz
inc
push
pop
loop
fdivr
xchg
and
cmps
inc
mov
jno
shl
repz
fwait
mov
std
loopne
ror
(bad)
das
mov
push
or
test
aad
pop
add
test
xchg
cmp
mov
cmc
out
stc
xchg
mov
sub
enter
in
or
test
fsub
xor
js
std
and
push
repz
outs
hlt
dec
mov
imul
call
pop
sbb
xchg
add
jl
sbb
in
shl
xlat
push
and
pop
cmp
push
and
adc
adc
push
aam
adc
adc
mov
movs
xor
leave
mov
cli
fwait
das
dec
fsub
(bad)
(bad)
ds
and
(bad)
xchg
push
rcl
stos
cmp
push
add
outs
aas
iret
sti
cld
shl
cdq
out
retf
sahf
call
hlt
and
cmp
mov
push
dec
and
inc
shr
hlt
fwait
sbb
sahf
mov
xor
ror
push
test
or
retf
adc
cmp
and
jbe
stos
sub
leave
daa
dec
cwde
dec
lock
dec
jl
add
pop
mov
(bad)
mov
popa
sub
int3
mov
jmp
xchg
dec
movs
fldenv
mov
test
scas
into
pop
xchg
pop
push
imul
adc
jmp
or
pop
jb
push
out
in
gs
retf
int3
push
test
mov
scas
or
pmullw
xlat
add
pop
cdq
fsubrp
xor
fs
xor
inc
xchg
fbstp
test
jbe
push
xchg
mov
sbb
add
(bad)
mov
jns
rol
push
ss
fst
add
sbb
mov
sub
adc
rcl
xlat
retf
cwde
mov
cmp
mov
loopne
adc
dec
push
(bad)
jmp
scas
stos
mov
(bad)
and
movs
in
push
cmp
cmps
adc
jmp
out
mov
push
push
dec
pop
pop
pop
xor
dec
adc
xchg
outs
jmp
sub
xor
pop
mov
jns
cld
xchg
jno
jbe
test
test
out
pop
jmp
imul
shl
jp
mov
dec
js
sti
push
(bad)
(bad)
je
pop
mov
mov
loope
or
cmps
and
sbb
ds
addr16
inc
adc
sahf
stc
lods
mov
pop
mov
and
mul
and
adc
cmp
mov
mov
jns
stos
mov
xchg
dec
jecxz
push
div
icebp
jno
xor
cmp
fistp
dec
arpl
push
xchg
adc
xor
mov
scas
daa
lds
fldenv
stc
pushf
test
call
jmp
mov
jno
adc
xchg
mov
pop
pushf
add
xchg
xor
push
add
jge
addr16
sbb
(bad)
in
mov
inc
into
push
cmp
dec
cmps
ja
or
sbb
call
jae
push
add
sahf
push
add
fidivr
aas
inc
jmp
in
xor
neg
stos
(bad)
sub
sub
dec
(bad)
shr
mov
into
clc
mov
call
push
scas
inc
pop
sub
or
sti
jbe
call
fcom
test
cmp
jl
in
scas
popa
add
mov
fnstenv
ret
aaa
jmp
add
push
mov
shr
ret
add
and
stos
ins
and
fdivr
inc
inc
xchg
cmps
test
pop
xchg
mov
push
out
popa
jp
movs
inc
dec
jb
jo
sbb
jle
inc
aam
inc
ffree
shl
shl
mov
dec
jns
fbld
std
jl
fiadd
iret
hlt
sub
ja
in
inc
mov
dec
inc
neg
inc
cmps
popa
out
ins
into
pop
pop
push
inc
dec
jmp
add
idiv
and
add
mov
cmp
jl
js
cmp
push
nop
pmaddwd
cwde
pop
sub
mov
push
jmp
pop
(bad)
mov
adc
pop
mov
in
stos
loopne
loope
sbb
xor
stos
mov
stos
aaa
jne
mov
pop
xchg
iret
and
cld
movs
shl
addr16
pop
mov
cmp
int3
xchg
das
jb
stos
les
mov
pop
fidivr
into
pop
fadd
jno
(bad)
lgdtd
hlt
xchg
push
in
aam
(bad)
aad
nop
movs
jle
mov
xchg
cmp
enter
or
js
push
out
sub
inc
jmp
cs
dec
mov
xchg
popf
jmp
inc
test
lods
adc
fisubr
dec
xchg
adc
mov
jge
push
js
or
outs
mul
dec
cmp
fld
xor
or
in
or
aad
lea
push
xchg
adc
out
xchg
and
daa
aaa
in
arpl
xchg
jae
dec
ret
and
sub
mov
dec
out
movs
loope
push
pusha
inc
cmps
mov
inc
inc
xchg
inc
push
jge
les
xor
unpcklps
sbb
ins
shl
jbe
outs
sahf
pushf
add
mov
cmp
sub
inc
xor
sub
sbb
test
fcmovnb
inc
sub
test
es
cs
out
or
(bad)
ds
rcr
push
daa
mov
cmp
jo
repnz
ins
int
mov
xor
inc
adc
cdq
or
shl
xchg
out
ss
pop
jne
cdq
sbb
aaa
ins
adc
ins
fstp
inc
xlat
outs
or
xchg
jmp
sbb
mov
mov
retf
xchg
cmp
adc
ds
cmp
mov
adc
retf
lods
icebp
xor
in
sub
inc
ret
repz
jge
inc
shufps
mov
sbb
nop
dec
aaa
sti
add
imul
sbb
mov
loopne
mov
mov
mov
int3
xchg
xchg
adc
inc
xor
jbe
scas
and
dec
jecxz
int
test
test
mov
cld
cmp
push
mov
mov
pop
mov
jns
ja
pop
xor
cmp
xchg
jmp
outs
mov
add
in
sub
pop
dec
retf
dec
and
fidivr
inc
repnz
in
into
dec
adc
les
and
cmp
ins
mov
ret
int3
faddp
pop
inc
cmp
dec
pop
daa
mov
pop
outs
mov
fisubr
and
jno
shl
pop
push
out
sub
ret
cmc
es
mov
lock
adc
aam
jo
push
call
into
adc
dec
movs
pop
or
xchg
xor
xchg
mov
add
inc
cmp
push
mov
out
test
sahf
out
dec
add
push
hlt
fld
adc
cmp
fsub
mov
jg
dec
and
punpcklwd
aas
ins
adc
push
call
test
inc
lods
ds
dec
leave
push
sahf
dec
fst
sub
mov
ror
in
push
mov
jb
scas
xlat
xchg
push
hlt
ss
je
ror
test
push
cwde
pop
pop
shl
ins
mov
add
sub
les
or
inc
and
aas
jne
mov
push
es
cdq
inc
scas
add
and
loop
cmp
mov
dec
mov
nop
sahf
(bad)
ss
cmps
lods
inc
into
inc
shr
and
jmp
cmps
out
or
dec
cmp
sbb
sub
loop
sub
mov
xor
scas
cli
push
sahf
adc
lock
pop
sbb
sub
jno
push
fcomp
pop
popa
mov
jg
addr16
dec
arpl
repz
(bad)
ficomp
push
popf
mov
and
jmp
cmp
or
push
pand
retf
cmps
fistp
out
inc
ins
out
inc
bound
push
enter
sub
jecxz
dec
xor
xchg
pop
(bad)
stos
mov
lahf
sub
mov
je
mov
push
inc
xor
xor
inc
cmp
xchg
shl
sub
lea
mov
stc
aas
jns
push
(bad)
fistp
aad
or
jle
pusha
retf
(bad)
push
jl
ret
aam
rcr
inc
test
push
inc
lds
mov
ds
rol
or
sbb
sbb
test
sub
mov
fimul
mov
imul
jno
add
icebp
bound
data16
inc
ficomp
imul
or
lock
mov
jmp
and
mov
movs
push
inc
xor
test
stos
mov
loopne
xchg
icebp
and
scas
push
adc
mov
cmp
(bad)
pop
adc
mov
sahf
mov
inc
pop
xlat
out
push
xor
mov
push
daa
ret
jmp
pop
add
xchg
cmp
mov
(bad)
cmps
(bad)
(bad)
push
in
xor
jg
dec
jp
lods
movs
clc
fwait
xchg
add
outs
xchg
jp
fisttp
mov
push
test
dec
xchg
jmp
jge
fmul
lods
jecxz
sub
imul
or
icebp
leave
and
call
adc
add
and
retf
xchg
sbb
into
mov
pop
test
stos
cmp
jae
or
and
retf
cmc
add
shl
xchg
mov
jmp
(bad)
(bad)
cs
into
cdq
xchg
xchg
pop
inc
hlt
xchg
push
sbb
add
ss
xor
in
adc
outs
inc
mov
movs
xor
push
xchg
jne
push
cdq
lods
movs
sar
adc
mov
sahf
lahf
dec
sub
cdq
shr
retf
pop
sbb
jp
jae
call
cmp
and
in
and
mov
test
xchg
rcl
out
je
mov
in
xchg
push
aad
out
ja
pop
and
mov
push
xchg
pop
xchg
push
fcom
(bad)
retf
inc
adc
pop
ficomp
and
sub
cmp
leave
out
sbb
daa
hlt
das
dec
(bad)
jnp
dec
mov
or
call
inc
scas
fcmovbe
sbb
(bad)
dec
repnz
mov
call
stos
(bad)
cdq
mov
ins
fwait
outs
pop
or
mov
jb
scas
xchg
mov
xchg
repz
and
in
pop
jo
out
out
push
mov
mov
pop
movs
daa
pop
nop
retf
mov
mov
int
sbb
int3
pop
sbb
pop
mov
xor
icebp
pop
sahf
inc
and
push
(bad)
mov
cmp
inc
jns
mov
mov
mov
cmp
popa
mov
mov
outs
xchg
test
sub
loop
test
add
dec
test
xchg
js
jecxz
push
(bad)
jbe
push
inc
jnp
rol
dec
stos
jo
out
pop
inc
popf
or
jl
daa
clc
mov
cdq
shl
sbb
sub
arpl
cwde
test
push
inc
les
fsubp
jo
dec
in
scas
fnop
inc
pusha
div
enter
pop
sbb
adc
inc
inc
(bad)
fs
out
mov
cmp
movs
sahf
mov
mov
jb
sar
shr
push
shr
mov
imul
(bad)
pop
das
into
push
jne
jo
cmp
shl
jge
fucomi
mov
and
rol
ja
stos
mov
(bad)
retf
push
push
mov
pop
dec
pop
cmp
jo
clc
cmp
test
lea
cmp
xlat
pop
into
imul
gs
xchg
inc
daa
pop
(bad)
out
nop
push
enter
mov
and
xchg
sub
or
int
test
push
pop
cmp
mov
ret
jle
fcomi
mov
loop
sbb
or
nop
retf
mul
addr16
aaa
out
and
pop
int3
in
(bad)
xchg
inc
push
sbb
adc
and
adc
xor
loop
ret
retf
mov
call
outs
mov
add
cmc
fistp
rcl
sbb
jle
pop
retf
cmp
push
mov
pop
enter
cmp
sahf
dec
out
pop
lods
fwait
pop
std
sbb
cmps
adc
add
mov
sbb
mov
sahf
mov
add
out
dec
inc
xor
add
es
sti
mov
stc
inc
mov
and
sub
scas
cdq
stc
in
push
fwait
retf
push
aas
sbb
cmp
fnsave
mov
sub
sub
pop
ins
fs
cmp
inc
xor
jle
out
xchg
adc
sbb
ret
ret
push
mov
outs
mov
fimul
adc
ins
xchg
(bad)
loopne
adc
push
xchg
push
iret
xchg
mov
xchg
stos
xchg
xchg
and
ins
dec
loopne
push
retf
leave
push
ret
clts
xor
mov
cmp
sahf
add
push
fs
mov
pushf
cmp
cs
jge
test
mov
bound
mov
lock
adc
pop
cmp
adc
xchg
cwde
sub
test
xchg
shl
ins
sub
nop
cmps
nop
stos
xchg
fbstp
test
xor
mov
in
or
xor
addr16
lds
mov
aad
push
ret
sbb
stc
adc
stc
gs
je
xor
push
(bad)
test
bound
bnd
call
fsubr
clc
push
sub
sub
push
adc
aad
jg
cs
(bad)
jbe
mov
mov
pushf
sub
scas
xor
rol
sbb
loope
fmul
addr16
and
imul
das
dec
out
xchg
push
add
nop
push
outs
xchg
loopne
stos
clc
pop
cs
neg
movs
mov
pop
mov
fst
(bad)
aas
xchg
gs
les
push
xor
test
stos
call
jl
pop
xor
sbb
lds
sbb
xor
js
test
cmp
jo
dec
mov
or
int3
push
xchg
and
sub
cdq
imul
inc
xchg
cmc
push
repnz
cmp
push
pop
push
imul
adc
jno
mov
mov
outs
ds
mov
pushf
stos
xchg
mov
pop
mov
mov
out
cld
sub
mov
dec
das
popf
call
movs
pop
pusha
in
imul
stos
dec
loopne
fwait
sbb
(bad)
jae
xor
or
clc
xor
mov
imul
js
cmp
inc
and
pusha
xlat
cmps
pop
sub
and
xor
sbb
fst
lahf
xchg
xchg
call
ror
push
push
dec
int3
pop
pop
jo
rep
adc
jl
out
sbb
in
xchg
out
bound
add
retf
test
(bad)
cmps
hlt
jl
adc
pop
jo
das
retf
int3
std
mov
jle
pop
sbb
push
xchg
aaa
push
popf
pusha
(bad)
fnstcw
sti
in
mov
jnp
lds
out
and
xchg
sub
cmp
dec
add
movs
and
cmps
dec
std
das
cwde
das
pop
in
clc
fs
daa
sub
or
xchg
or
addr16
imul
add
and
mov
das
adc
adc
inc
xor
xor
add
cld
and
or
out
add
bound
mov
xchg
sbb
lds
cli
cs
arpl
repnz
repnz
outs
sbb
int3
call
xchg
jne
inc
mov
jno
mov
mov
mov
jns
cmp
repz
aam
sti
xchg
sti
xchg
cmp
gs
fsub
push
ror
dec
and
or
adc
test
add
mov
jno
imul
jge
mov
movs
jmp
jmp
push
loope
push
sbb
sbb
mov
lods
loope
pop
data16
jp
icebp
(bad)
push
into
sbb
bound
pusha
pusha
cmp
sub
mov
cmps
jo
repnz
loope
push
pusha
retf
or
sub
mov
js
movs
add
mov
mov
mov
sub
fisttp
push
mov
or
jne
dec
jge
sbb
je
les
(bad)
aam
ins
mov
adc
cld
pop
fst
cli
adc
enter
std
mov
dec
(bad)
pop
mov
ret
push
mov
inc
push
push
fsubrp
sahf
sbb
pop
dec
sub
jg
mov
test
jmp
add
ja
push
jl
or
imul
dec
push
in
mov
mov
je
push
or
pop
and
xor
leave
hlt
adc
movs
pushf
xchg
sti
pop
jl
add
daa
outs
hlt
cmp
jmp
and
inc
push
pop
jne
inc
mov
mov
dec
out
push
xlat
inc
adc
fdivp
adc
fisttp
repz
xchg
push
pop
movs
push
mov
inc
sahf
ins
loop
pop
(bad)
sub
push
data16
adc
aam
cmp
ret
mov
xchg
mov
xchg
push
daa
push
vaddsubpd
cmp
mov
cs
mov
push
xchg
aas
lock
mov
add
and
xor
jno
retf
inc
pusha
mov
out
sub
out
into
outs
jge
jecxz
movs
sbb
inc
movs
int
cmp
scas
xchg
ins
ret
pop
mov
call
ret
sbb
push
cmp
sub
fst
mov
cld
(bad)
sub
out
sbb
pop
movs
stos
daa
je
inc
inc
fstp
loopne
fcomp
es
sub
icebp
jecxz
test
jne
mov
outs
sub
outs
jmp
jl
cmps
ret
(bad)
rol
enter
call
fsubr
mov
aaa
shr
test
mov
mov
dec
into
lods
popa
in
dec
jno
inc
repnz
ret
push
lods
fsubr
movs
addr16
inc
dec
mov
jmp
je
push
mov
ror
dec
xor
cmps
or
pusha
jp
repnz
dec
adc
cmps
and
cmps
xor
cmp
adc
nop
hlt
imul
cmps
push
mov
loopne
mov
adc
repnz
cmp
popf
jmp
mov
sbb
popf
cmps
std
ja
(bad)
loop
fs
sub
push
cmps
mov
ss
cmps
out
xor
ret
aaa
and
mov
fcomp
xor
ja
iret
xchg
rcl
ss
daa
fmul
mov
jb
and
int3
cmp
ret
shl
ds
ret
pusha
xor
dec
retf
dec
rcpps
jb
aad
pop
out
mov
outs
ret
scas
stos
sbb
(bad)
scas
ss
ret
mov
int
test
js
mov
sbb
js
mov
je
or
sub
push
cmp
add
sbb
cdq
adc
mov
mov
inc
arpl
xor
dec
jns
pop
out
mov
cli
jo
arpl
xchg
add
mov
inc
test
dec
xchg
sub
mov
ror
test
mov
in
push
pop
mov
adc
or
jmp
jae
add
push
sub
inc
repz
imul
(bad)
mov
pop
mov
mov
push
or
xchg
gs
mov
mov
push
jae
xor
mov
stos
mov
mov
iret
cmps
pop
enter
adc
add
cmp
inc
shr
cmp
scas
je
xor
inc
int3
jbe
and
mov
adc
aam
dec
retf
shr
(bad)
popf
ins
push
pop
mov
pop
arpl
or
inc
xchg
data16
daa
push
stc
xor
test
outs
add
and
push
push
dec
loop
paddsw
std
sahf
(bad)
rol
dec
xor
call
ds
sub
cmps
mov
(bad)
(bad)
scas
aad
and
push
mov
mov
sub
mov
ins
ret
mov
rcr
ror
cli
shr
mov
in
sbb
mov
ret
jno
ret
adc
iret
mov
sti
ins
or
jbe
xor
sub
lahf
mov
retf
stos
outs
sub
fsub
mov
mov
push
out
jg
and
mov
test
or
iret
scas
out
cmps
loop
(bad)
jle
out
jns
mov
(bad)
mov
jmp
inc
adc
xchg
cli
jecxz
scas
mov
and
sbb
les
pop
stos
mov
popa
sbb
test
test
nop
(bad)
inc
mov
jp
xchg
cmp
mov
scas
jbe
adc
repz
jmp
mov
inc
rcr
mov
(bad)
mov
mov
dec
test
adc
xlat
lds
pop
mov
jnp
stos
outs
xor
fild
sbb
adc
jns
icebp
xchg
je
push
icebp
add
push
pop
fisubr
in
push
pushf
push
frstor
je
add
lods
loopne
sti
or
rol
push
fwait
aad
cld
push
push
out
jno
repz
in
pop
out
xchg
pop
push
xchg
out
inc
ds
and
add
mov
xor
xor
dec
arpl
data16
xor
push
cs
or
dec
xchg
sbb
fcomp
movs
retf
cwde
adc
pop
mov
xchg
jne
and
cmps
push
adc
jmp
scas
rcl
arpl
rcr
pop
fldenv
push
pop
shl
cmc
lods
cmp
sbb
loop
imul
pop
xchg
sti
repnz
popf
mov
adc
retf
dec
push
lahf
sub
mov
cmp
popf
adc
cmp
sub
(bad)
mov
inc
or
ret
push
mov
pop
cs
sub
cmp
mov
pop
add
jecxz
adc
jmp
mov
out
jl
mov
pusha
fs
inc
popa
cmp
add
dec
sar
add
ds
cmc
scas
xchg
scas
xchg
ins
outs
stc
mov
dec
xor
xlat
pop
jmp
xlat
enter
sti
xor
jb
sbb
jno
je
mov
adc
cwde
popa
fs
push
pop
xlat
adc
(bad)
cmp
add
out
adc
repnz
xor
xor
mov
mov
mov
cmp
and
(bad)
out
(bad)
nop
mov
push
leave
sbb
adc
push
or
pushf
dec
scas
sbb
and
sar
aad
inc
inc
mov
nop
aam
sub
loope
daa
add
xchg
jl
mov
or
inc
push
lock
pushf
pop
pushf
dec
inc
sub
inc
je
push
sti
in
into
push
jb
xor
into
pop
lahf
(bad)
ror
loopne
jb
imul
je
ret
ds
and
jnp
pop
(bad)
mov
imul
rol
stos
stos
cmp
lds
in
adc
cli
movs
mov
lods
pop
ins
mov
je
fst
nop
fst
fwait
sar
and
jb
loopne
into
or
mov
fs
jb
adc
adc
cmp
aam
(bad)
jbe
pop
add
fidiv
mov
xor
adc
ret
sbb
add
mov
test
test
stos
jae
push
rcr
aad
int3
adc
mov
pop
pop
rcr
or
lea
(bad)
ins
and
in
ret
push
jb
and
cdq
test
mov
xor
nop
stc
femms
lods
mov
sub
push
jl
mov
mov
adc
inc
sbb
push
sahf
pop
xlat
stos
lahf
pushf
out
outs
mov
cmc
inc
ror
daa
add
adc
xchg
je
ret
call
push
dec
mov
es
inc
xchg
jae
sub
adc
xor
xor
sub
jmp
pushf
xchg
xor
outs
jmp
outs
sub
sub
loope
inc
sub
cmp
stc
adc
ret
xor
jae
fcmovnb
out
lds
inc
xchg
jp
nop
dec
sub
jb
or
in
jp
adc
js
in
mov
loop
jnp
shl
scas
ins
mov
loopne
retf
ret
das
mov
pop
pop
(bad)
mov
stc
cld
dec
retf
cmp
fdiv
mov
movs
sahf
test
adc
inc
clc
(bad)
add
or
ds
xchg
shl
xchg
sub
fucomi
or
xchg
pop
lods
push
mov
std
out
ss
movs
mov
or
test
rcr
inc
rcl
aad
mov
pop
(bad)
mov
inc
je
std
dec
pop
add
in
push
add
out
add
pop
inc
add
out
mov
(bad)
popa
pushf
jmp
out
mov
mov
push
xchg
dec
add
stc
popf
jecxz
mov
out
cmp
fisttp
sub
call
cld
imul
in
inc
lods
xchg
cmc
cmp
add
aam
pop
cmc
inc
stos
xchg
xlat
in
out
sub
dec
rol
call
ret
loope
or
rcr
sbb
add
xor
mov
out
int3
mov
imul
test
jno
jns
xchg
ss
leave
sbb
in
dec
cmp
inc
mov
stc
mov
movs
mov
std
push
fwait
pop
jl
sahf
in
sar
pcmpgtd
mov
clc
mov
or
stos
or
in
push
call
out
push
sub
ror
mov
sahf
xor
add
jg
out
or
xor
inc
xchg
fcom
jmp
dec
pusha
out
jno
(bad)
rcr
dec
je
es
imul
call
jmp
cmps
mov
pand
mov
pop
jl
mov
aas
movs
mov
out
ins
(bad)
mov
ins
adc
dec
xchg
xchg
fstp
xchg
xlat
and
cld
vmread
jecxz
cmps
test
mov
add
xchg
mov
xor
jne
and
mov
icebp
lock
rol
mov
xchg
mov
jmp
repnz
cmps
ret
aam
outs
pop
xor
pop
call
cmp
out
jmp
retf
pop
mov
jp
inc
push
cmps
sub
cmp
dec
in
inc
stos
shr
fisubr
aam
fstp
pop
(bad)
test
add
push
mov
div
aaa
and
mov
xchg
push
cli
mov
xor
inc
pop
inc
cdq
mov
pop
js
(bad)
and
out
in
cwde
outs
sti
push
(bad)
(bad)
and
test
pop
jp
mov
xor
call
inc
lods
fs
add
das
pop
loopne
sub
(bad)
mov
lds
mov
add
mov
retf
or
add
inc
xchg
hlt
sbb
pop
dec
cwde
movs
sub
inc
cli
scas
idiv
and
mov
aad
sbb
sub
sti
fidiv
test
(bad)
push
jmp
xchg
shl
cmps
test
or
clc
out
mov
pop
addr16
xor
pusha
ss
mov
pop
out
and
cmp
sub
xchg
mov
mov
call
nop
inc
lods
mov
jmp
mov
mov
dec
xchg
ss
cmps
mov
daa
stos
pop
aam
xchg
mov
aaa
repz
xchg
jmp
push
jno
into
repz
loope
repnz
cdq
adc
je
sbb
ds
jo
in
scas
pop
data16
sbb
jle
push
loope
jmp
fmul
xchg
int
push
cdq
cmp
mov
fdivr
dec
push
dec
(bad)
shl
inc
cmp
out
jb
add
les
push
adc
imul
mov
sub
test
arpl
or
cmps
das
clc
dec
fsubrp
in
in
add
daa
outs
inc
xor
fwait
rcr
add
and
xor
add
push
xchg
xchg
ds
nop
mov
lods
mov
pop
add
jg
adc
scas
aaa
cmps
(bad)
fnstenv
int3
jne
sar
daa
pop
cmp
or
fst
(bad)
jg
mov
xchg
out
bound
lods
xor
retf
push
mov
dec
mov
aam
sbb
into
jge
cmp
test
test
xor
sub
aas
add
std
mov
mov
scas
pop
or
jns
sub
adc
stos
pop
inc
lds
aas
ja
cmp
xor
mov
pop
js
hlt
xchg
push
in
cwde
lds
push
inc
shl
sub
je
nop
jge
push
mov
retf
test
in
neg
aas
dec
mov
fidivr
rcl
dec
adc
jb
sub
push
daa
sub
xchg
popf
repz
neg
push
add
es
sbb
enter
and
sbb
push
cmp
mov
and
data16
adc
mov
push
ret
or
sub
jl
push
dec
out
call
xor
sti
daa
or
xchg
or
je
pop
push
push
fdiv
popa
popa
in
fs
sbb
inc
xor
scas
mov
cmp
cwde
adc
movs
fldenv
jle
push
adc
xchg
cli
sbb
dec
xchg
std
retf
inc
push
bound
inc
hlt
xor
add
movs
jae
rol
stos
push
arpl
gs
add
in
mov
not
call
cwde
mov
rcr
mov
pmulhw
daa
shl
and
sub
loop
mov
sbb
push
mov
pop
mov
outs
psllw
adc
sti
enter
mov
fbld
int
cmp
aas
(bad)
push
or
xchg
cdq
dec
lods
imul
popa
mov
or
nop
jecxz
add
cmps
adc
jbe
sbb
sbb
fxch
mov
add
aad
add
pop
and
ror
mov
add
mov
xor
stos
mov
(bad)
shl
shl
inc
jp
jo
push
stos
pop
xor
jnp
les
retf
xchg
enter
sub
pop
jmp
popf
cs
and
movs
jbe
and
shl
fs
les
mov
cli
xchg
aaa
sub
scas
fcmovnbe
enter
xor
ret
push
cmps
movs
sbb
je
ds
jecxz
pusha
das
dec
ins
mov
loopne
mov
push
sbb
rcr
fcom
rol
push
into
push
or
js
inc
xchg
mov
div
xchg
xor
pop
in
rcl
mov
(bad)
jecxz
cmp
or
and
xor
add
xor
pop
fdiv
iret
jae
pushf
push
shr
and
nop
imul
lahf
movs
mov
clc
adc
jno
in
jne
jmp
dec
inc
popa
jo
ror
(bad)
xchg
movs
xchg
mov
imul
rol
aas
loope
dec
fild
test
jmp
inc
sahf
(bad)
neg
fiadd
sbb
push
pop
cmps
mov
scas
aad
sub
mov
in
xchg
js
push
lahf
arpl
mov
mov
mov
pusha
ret
stc
ds
xchg
movs
xchg
stos
mov
lds
sbb
rcl
cmp
sar
shl
iret
sub
mov
nop
sub
int3
pop
popf
mov
xchg
mov
push
xor
mov
xchg
outs
ret
repz
push
loop
mov
push
mov
repz
jle
repz
cmp
in
stc
jb
jg
cmps
cmp
retf
jbe
inc
out
in
rcr
and
adc
setno
popf
fdiv
aad
movs
dec
cmp
and
mov
cli
sahf
push
cmp
and
mov
add
cmc
mov
call
sbb
out
test
xchg
fxch
test
or
mov
add
scas
push
gs
dec
dec
fwait
add
sbb
xchg
pop
fist
scas
outs
mov
pop
or
cmp
mov
xor
movs
addr16
fld
neg
repz
rcr
or
cwde
push
aaa
je
ret
sbb
inc
aam
lea
jmp
in
ja
pop
mov
adc
sub
jle
xor
mov
xchg
push
mov
xor
dec
jns
and
jle
and
or
pop
hlt
and
push
arpl
cmp
and
sahf
mov
xchg
stc
fbld
or
inc
rol
rcl
xchg
movs
loope
mov
aas
repnz
stos
inc
outs
cwde
push
sub
int3
ja
ret
lods
dec
or
mov
jp
fs
arpl
cmps
loopne
cli
sub
fdiv
mov
jo
jns
mov
jp
jae
adc
(bad)
lods
push
int
push
rcl
xchg
mov
es
bound
cmp
es
sub
push
arpl
ror
sbb
dec
xchg
mov
pop
cmps
inc
retf
xor
push
mov
jl
mov
std
jge
xor
psubsb
xor
outs
jne
inc
mov
and
mov
fiadd
cwde
add
sub
scas
hlt
inc
adc
push
or
push
inc
xchg
jecxz
loop
sub
(bad)
xor
int
mov
test
dec
std
test
cmp
inc
sub
and
or
sbb
inc
cld
sbb
adc
arpl
or
jmp
jge
and
fcom
into
sti
mov
and
pop
dec
ret
sub
jo
push
xchg
dec
jo
xchg
in
cli
dec
xchg
retf
inc
mov
hlt
sbb
js
cmp
sbb
sbb
mov
outs
or
pop
rcl
in
sub
aaa
push
lock
test
leave
into
and
lds
mov
out
int
xchg
push
fs
mov
je
fwait
rcr
(bad)
mov
pop
xor
mov
loope
bound
sbb
pop
cwde
cmp
(bad)
dec
add
pop
js
mov
shr
jo
jo
clc
out
movs
loope
jmp
adc
and
push
pusha
inc
push
test
xlat
xchg
in
and
or
mov
mov
xor
rcr
sbb
mov
mov
or
movs
mov
cmp
xchg
bound
loop
cwde
movs
dec
dec
push
sub
ss
pop
sbb
mul
loop
mov
xor
rol
dec
(bad)
in
mov
mov
cmp
xchg
out
fistp
int3
cmovno
arpl
cmp
das
sub
pusha
inc
das
(bad)
test
out
xor
enter
mov
sub
adc
jb
xor
pop
push
inc
or
aam
in
mov
aam
xchg
pop
jno
push
shr
lods
xchg
adc
pop
mov
pop
jge
hlt
jbe
pop
add
pop
stos
retf
das
fstp
mov
imul
and
std
jno
aad
in
sub
cmp
arpl
int3
mov
and
pop
xor
xchg
mov
out
movs
lea
mov
sub
icebp
mov
fdiv
lahf
loop
in
inc
adc
add
dec
in
jb
mov
jnp
bound
add
push
mov
xor
xor
shl
mov
or
dec
sub
or
xor
mov
jle
sub
pushf
push
push
scas
mov
stos
push
inc
adc
rcl
dec
fdiv
jp
std
cmps
xor
retf
mov
pushf
mov
sub
or
out
sub
inc
jmp
inc
push
in
in
pop
out
mov
inc
outs
test
pop
push
jno
mov
lahf
xchg
jns
(bad)
xchg
xor
push
call
xchg
inc
push
dec
or
xor
push
cwde
pusha
sub
popa
mov
jge
cmp
inc
ror
js
ret
lock
mov
and
cwde
hlt
loopne
fbstp
push
dec
mov
mov
mov
popf
out
mov
or
cmp
pop
adc
mov
and
inc
mov
push
jp
pop
ds
mov
xchg
aaa
mov
std
fbstp
call
xchg
rcl
dec
movhps
and
bound
std
(bad)
fcmovne
sahf
clc
clc
stc
jb
cmp
push
pop
out
out
mov
xlat
mov
mov
mov
pop
out
aad
push
into
mov
cdq
(bad)
cli
jne
pop
je
pop
sbb
xchg
xchg
imul
stos
push
xchg
adc
mov
mov
mov
dec
add
cs
xchg
pop
inc
mov
cmp
stos
cwde
jmp
icebp
fdivr
fs
les
or
xchg
mov
loopne
(bad)
xor
loop
test
daa
fmul
repnz
test
outs
mov
sub
adc
adc
dec
push
lods
push
stos
arpl
mov
jmp
xchg
loope
mov
in
cmc
inc
fstp
pop
sbb
jbe
adc
push
push
loope
and
xor
jecxz
jmp
sti
arpl
xchg
adc
imul
add
inc
mov
jg
or
inc
das
mov
std
stc
and
ficom
fstp
cmc
dec
xchg
cmc
int3
pop
inc
inc
das
xchg
out
sti
jbe
adc
xor
mov
cmp
mov
push
hlt
adc
or
int
jle
push
loopne
lahf
loopne
cmps
pop
dec
jg
sahf
(bad)
out
push
inc
cmp
xor
mov
(bad)
push
cmps
dec
fucomip
or
inc
and
es
inc
aaa
jle
dec
fsubr
mov
(bad)
push
fisub
lock
jecxz
or
(bad)
int3
adc
pushf
inc
int
sub
loopne
mov
mov
xor
cld
inc
sbb
sar
add
adc
mov
pavgw
addr16
push
xchg
pop
ret
clc
sub
pop
pop
stos
jg
mov
lock
cmps
shl
sbb
stos
mov
xchg
scas
mov
stos
enter
sub
gs
(bad)
call
or
jb
je
(bad)
pop
ins
popa
arpl
inc
in
dec
push
mov
push
adc
ins
lods
add
push
test
fsubr
int3
xor
cmc
rcr
xchg
dec
ret
mov
jno
cwde
and
and
xor
stos
xchg
jnp
and
fdivr
clc
cmp
(bad)
rcr
idiv
xor
jmp
bound
in
aad
cmp
out
add
adc
es
mov
dec
leave
jo
push
inc
cs
(bad)
cld
or
aad
sub
pop
sbb
outs
aaa
push
sbb
std
out
inc
loopne
stos
cmps
hlt
call
dec
ds
(bad)
xor
in
or
lds
gs
add
mov
mov
sbb
sbb
dec
in
(bad)
adc
test
cmp
imul
hlt
outs
(bad)
out
mov
jns
push
mov
or
add
fwait
pop
jg
dec
sbb
dec
ja
clc
mov
and
in
pusha
adc
repnz
push
jb
adc
ret
rol
xchg
data16
pop
cmp
sub
lds
xor
jo
cmp
jg
(bad)
scas
fcmovu
lods
popf
repz
jnp
das
jmp
dec
(bad)
retf
lods
out
sbb
ficom
dec
neg
push
rol
cmp
pop
int3
lahf
shr
call
mov
jl
repz
sub
xchg
cmp
jmp
je
add
cld
push
or
retf
inc
stc
aad
ret
or
pop
sub
addr16
imul
(bad)
jle
push
fwait
jns
inc
loop
jmp
call
mov
push
lods
dec
icebp
xor
xor
or
xchg
ret
add
inc
dec
fnsave
sub
in
popa
ins
adc
lods
jge
cdq
loope
sub
dec
aaa
aad
dec
mov
sbb
sbb
aas
push
dec
sbb
aad
xor
mov
mov
cmp
loop
jle
sub
(bad)
retf
mov
and
stos
mov
(bad)
aam
mov
fmul
dec
dec
and
or
enter
sahf
mov
outs
push
data16
mov
add
test
mov
cmp
pop
or
dec
cmp
and
out
sub
ret
xchg
mov
inc
or
pop
mov
cmp
push
ja
jle
(bad)
ds
loop
popf
mov
mov
cwde
fisub
mov
out
jg
pop
add
adc
dec
jae
in
jnp
xor
(bad)
ins
dec
mov
xchg
adc
imul
inc
iret
scas
push
sbb
cmp
adc
lea
lea
mov
or
dec
pop
aad
out
inc
outs
cmps
test
sub
scas
xlat
dec
data16
loop
cmp
adc
mov
fcomp
fmul
test
pushf
ds
pop
mov
or
mov
in
push
or
(bad)
repnz
or
pusha
stos
aas
adc
cmps
and
add
movs
or
xor
ins
popa
mov
adc
or
addr16
in
sbb
jmp
mov
(bad)
stc
ja
imul
stos
and
dec
retf
cli
ret
push
xchg
mov
or
push
les
inc
rcr
mov
enter
es
and
pop
xchg
mov
mov
es
test
cwde
jge
pop
mov
div
push
mov
retf
call
nop
bswap
pop
push
xlat
sbb
add
mov
inc
push
and
dec
retf
mov
leave
sub
and
ja
xchg
cmps
in
cmc
ja
mov
int
mov
mov
sbb
fucomi
sub
dec
dec
popa
scas
inc
stc
xlat
inc
push
imul
imul
sub
mov
xchg
ficomp
jo
jne
rcl
aam
xor
and
test
jne
retf
shr
cmp
sub
push
in
mov
add
push
dec
stc
ficom
pop
or
push
fiadd
retf
inc
sti
mov
adc
cmps
aaa
or
iret
and
das
xor
jmp
jnp
aad
mov
push
fsub
mov
mov
mov
shl
leave
xlat
mov
fucomp
push
and
sar
retf
loopne
xor
fisttp
jecxz
sub
aam
xchg
enter
je
pop
pushf
cdq
add
stos
jb
fstp
xor
retf
or
retf
test
sbb
call
mov
and
mov
mov
push
add
aad
pop
sbb
push
mov
cs
or
inc
adc
jo
pop
pop
cmp
hlt
jns
cmp
inc
(bad)
rol
push
xchg
add
pop
jae
pop
add
movs
fild
jmp
add
out
(bad)
sbb
mov
out
jns
bound
rcr
gs
push
cmp
in
ds
enter
push
mov
mul
inc
push
movs
aam
adc
and
dec
mov
mov
icebp
cmps
mov
movs
or
mov
or
iret
adc
cmp
aaa
cmp
sbb
out
outs
rcl
ret
std
xchg
retf
stos
cmps
out
pextrw
xor
inc
xchg
sub
mov
add
inc
out
mov
dec
(bad)
mov
jb
xchg
and
and
jmp
sahf
mov
add
jp
jns
enter
ds
or
js
shl
rcr
cmps
fmul
movnti
in
fucom
or
jo
rol
js
jns
nop
lock
add
hlt
mov
and
and
scas
movs
or
pop
(bad)
xlat
popf
sbb
and
push
jb
xor
inc
xor
dec
or
push
xor
fstp
mov
js
push
aad
gs
mov
and
out
dec
push
adc
mov
fild
loop
adc
pop
cmps
pop
nop
adc
push
das
inc
ficomp
inc
or
pushf
cmp
and
jmp
mov
add
pop
lods
stos
(bad)
jle
inc
pop
sbb
leave
or
ja
sub
mov
sahf
shl
dec
mov
mov
sbb
sub
pop
jb
pop
cmp
xor
ror
arpl
fisttp
leave
std
inc
mov
rcl
les
adc
in
ret
ja
xchg
imul
mov
pop
mov
mov
sbb
dec
or
jmp
cmps
icebp
xor
in
(bad)
jns
or
sub
mov
and
mov
cwde
or
inc
(bad)
inc
in
jge
xlat
mov
stos
xchg
lods
lea
pop
push
mov
mov
mov
push
int
xchg
adc
add
xchg
inc
jno
mov
push
fwait
sub
stc
cmp
(bad)
xchg
dec
rcr
movs
mov
jp
lods
enter
inc
add
mov
mov
fcmovnbe
xor
addr16
hlt
mov
jg
fistp
pusha
pop
xor
xor
in
xor
movs
jae
imul
cmp
xor
push
sub
call
sub
sbb
lea
pop
mov
push
cs
xor
inc
(bad)
cmps
movs
jb
pop
pushf
mov
dec
rcr
jns
push
pop
fld
mov
mov
enter
mov
loope
not
add
adc
inc
xchg
push
xchg
adc
fidiv
lock
hlt
int
loop
sbb
dec
and
mov
cmps
call
out
lods
ret
(bad)
push
loop
in
scas
popf
ds
ds
push
lds
mov
xchg
dec
daa
arpl
xchg
xor
push
dec
cmc
out
dec
xchg
repz
fs
rcr
ja
or
or
shl
xchg
add
add
mov
rcr
in
enter
retf
imul
sub
mov
dec
ds
jae
sar
out
pop
mov
shr
mov
mov
fs
and
add
loopne
pop
cmp
dec
pop
shl
add
sbb
pop
fcomp
push
retf
lea
pop
push
int3
pop
mov
das
mul
pop
push
mov
pop
push
je
add
icebp
fwait
lods
call
popa
pop
imul
inc
sti
cmp
or
jmp
xor
test
cdq
int3
out
movs
xor
mov
je
pop
dec
xchg
dec
xchg
and
pop
xor
add
xor
mov
jmp
and
cmp
jl
adc
jmpw
leave
jo
neg
cmp
dec
xchg
mov
jmp
int
fdivr
lock
jmp
ins
add
ja
call
jb
mov
(bad)
mov
(bad)
mov
fcom
sub
loopne
xor
and
dec
in
call
repz
xor
sub
mov
stc
rol
rcl
imul
mov
das
sub
jbe
je
test
dec
pop
sti
fs
cmp
sub
stos
loop
mov
imul
(bad)
loope
jmp
movs
fadd
div
into
mov
xor
or
aas
mov
(bad)
mov
mov
cmp
aam
pop
stos
test
fdiv
pop
inc
mov
add
inc
mov
push
pop
loop
push
hlt
mov
and
(bad)
jae
inc
jae
loope
fadd
mul
pop
pop
or
fnstcw
sbb
imul
push
fwait
jmp
pop
out
mov
stc
int
stc
lea
out
pushf
mov
vcvtps2dq
and
fs
and
and
sar
pushf
gs
in
push
loop
gs
cdq
pop
push
cmps
xor
jo
fcomp
idiv
inc
shr
ss
fild
clc
idiv
call
mov
(bad)
in
lahf
or
pop
js
sub
fcom
out
or
pop
pop
call
les
cmc
ja
add
cmps
push
inc
xchg
adc
addr16
cmp
ficom
mov
in
push
repnz
jbe
pop
push
jne
cli
inc
fimul
mov
mov
add
and
mov
jno
jmp
jo
jg
movs
cmp
(bad)
ss
fiadd
(bad)
test
outs
hlt
loop
sti
(bad)
and
dec
scas
aad
repnz
nop
dec
pop
jmp
je
les
movs
sub
out
and
cld
loopne
and
call
mov
or
fisttp
ja
(bad)
sub
out
sbb
sub
out
cwde
pop
add
int3
mov
aam
sub
push
inc
or
push
cmp
xchg
add
pushw
(bad)
jg
loope
push
pop
jle
mov
enter
cwde
lds
iret
rol
cmp
mov
mov
jg
jmp
sub
adc
cmp
les
adc
sub
inc
sbb
push
pop
loop
jmp
mov
(bad)
scas
or
rol
adc
or
cmp
push
cld
aam
push
shl
aam
int
jecxz
jl
aas
call
mov
mov
pop
and
xor
adc
mov
mov
cs
and
test
movs
pop
push
cmps
pop
cmc
repz
mov
or
xchg
cmp
jns
mov
js
push
jmp
call
pop
test
je
icebp
pop
pop
jg
xchg
jbe
bound
mov
jecxz
add
loopne
loopne
movs
leave
mov
cdq
fstp
clc
mov
xor
xchg
cli
xchg
jo
gs
movs
lock
out
fld
cwde
mov
add
dec
ja
ret
mov
xor
das
outs
inc
jg
loopne
inc
jge
sub
and
mov
arpl
jp
push
push
mov
lods
int
jle
push
out
cmc
cmp
idiv
ja
sub
sub
and
hlt
sbb
loop
ins
lahf
push
or
dec
aam
fistp
push
or
cs
fnstsw
movs
repnz
push
sbb
jbe
jnp
shr
out
loope
scas
mov
repnz
cs
cli
(bad)
mov
and
sub
test
imul
inc
pushf
scas
cmp
outs
cld
pop
popf
int3
fisttp
jmp
inc
mov
xor
fdiv
cmps
paddusw
add
xor
fs
adc
cmp
ret
int3
js
sti
cmp
ins
rcr
mov
mov
stos
mov
and
cmc
fiadd
pushf
cmp
inc
les
or
xor
jb
(bad)
shl
in
and
fnstenv
cmp
xchg
ja
stc
retf
out
enter
adc
fwait
xchg
and
icebp
das
fldcw
fwait
push
or
(bad)
or
(bad)
neg
gs
retf
pop
adc
rcl
sub
sub
xor
pop
test
popa
add
dec
leave
enter
lds
cmp
pop
add
arpl
mov
jmp
jns
cmp
pop
addr16
stos
inc
jge
sub
sar
xor
in
retf
mov
std
dec
and
enter
pop
enterw
jmp
or
inc
aas
cmps
js
call
mov
dec
je
cmp
xchg
mov
test
and
pop
sti
mov
outs
out
arpl
pop
push
mov
xor
popf
adc
xchg
jo
or
or
je
sub
mov
leave
adc
pop
sub
adc
cmp
cwde
cli
mov
scas
mov
(bad)
in
fwait
pop
mov
xchg
push
xchg
inc
and
sub
loop
sbb
lds
pop
jbe
xor
mov
push
das
(bad)
push
push
sbb
or
outs
in
and
cmps
movs
xchg
xchg
push
or
cld
into
int
xchg
lock
xchg
ds
fsubr
(bad)
int3
adc
out
xchg
pop
or
icebp
cmp
shr
xlat
stos
sub
mov
lods
das
mov
xor
xchg
movs
xlat
cmp
dec
rol
sti
and
movs
adc
loope
outs
cmps
into
xor
pop
mov
and
mov
cmp
shl
xchg
xor
mov
mov
or
mov
cdq
xlat
jg
mov
push
mov
xlat
dec
inc
cmps
xchg
sub
mov
nop
(bad)
out
shr
mov
xor
jg
jle
daa
pop
in
fstp
scas
cmp
and
push
rcl
inc
pop
cmc
inc
(bad)
sub
mov
pop
mov
or
ins
(bad)
rcr
ret
jae
fcomi
add
scas
inc
mov
stc
ss
mov
test
hlt
inc
adc
or
arpl
dec
bnd
call
add
out
adc
xchg
loope
ret
mov
stos
pop
jmp
in
fwait
neg
dec
cmps
adc
xchg
sub
jo
adc
sbb
mov
xchg
mov
or
xchg
cmp
retf
mov
sar
nop
cwde
and
pushf
fcmovnbe
je
retf
mov
mov
inc
xchg
sub
fsub
cmp
sbb
int3
sub
push
daa
cmp
in
sbb
add
lds
mov
add
sub
cdq
add
xor
add
ss
ss
adc
inc
push
ins
dec
in
sub
inc
popa
retf
aas
loop
jo
sub
nop
lea
jmp
arpl
out
sahf
pusha
fld
sub
sti
cmc
add
push
cdq
mov
enter
or
cmp
fwait
and
push
add
es
cwde
sbb
fbstp
push
hlt
mov
loope
sub
ja
fist
sahf
mov
xor
retf
or
stc
xlat
data16
adc
mov
(bad)
sbb
mov
xor
dec
sbb
add
cdq
mov
and
nop
sbb
aaa
cld
dec
pop
and
js
xlat
(bad)
xchg
xchg
xor
(bad)
jg
repnz
sub
ins
inc
in
mov
push
add
int
inc
push
test
cld
push
cmp
jbe
sbb
mov
push
adc
mov
retf
repnz
lods
stos
xchg
shl
push
jb
sub
adc
imul
lods
fs
jg
in
mov
cmc
dec
push
sar
jns
xor
pop
adc
aaa
xor
mov
mov
mov
ja
push
and
rcr
sti
xchg
push
leave
mov
push
dec
sti
cli
mov
mov
mov
(bad)
in
adc
or
push
test
jg
in
xchg
cmp
xor
xchg
push
jl
in
das
daa
icebp
add
push
fisttp
xor
retf
in
xor
call
call
lds
in
jbe
sbb
loopne
sar
je
jg
mov
push
scas
inc
dec
push
(bad)
mov
jno
mov
mov
add
xor
(bad)
inc
sbb
push
inc
jg
nop
outs
ja
add
xchg
std
pop
addr16
test
sbb
das
es
test
xchg
cmps
cwde
sbb
xor
sahf
or
push
inc
sar
cmp
dec
loopne
xchg
imul
sub
bsf
inc
add
loopne
nop
adc
lods
loope
dec
or
jl
stos
pop
pop
imul
ds
dec
pop
or
cmp
sub
das
jmp
pop
shr
xchg
or
mov
sbb
bound
lea
outs
xor
mov
daa
mov
lods
in
push
mov
(bad)
(bad)
jmp
mov
retf
sbb
push
shl
push
jnp
stos
inc
cli
push
fistp
imul
add
sub
dec
cmc
movs
rsm
data16
lea
xor
lods
add
(bad)
addr16
int
shl
(bad)
xchg
scas
or
xlat
pop
xchg
dec
shl
scas
mov
mov
out
dec
mov
dec
pop
bound
sbb
lods
icebp
or
cwde
test
pop
xchg
fstp
add
jg
arpl
mov
test
lea
mov
imul
test
jge
xor
fcomp
push
test
out
mov
std
cmp
adc
ret
jle
pushf
mov
cld
cmp
setge
shr
pop
cmp
mov
popf
outs
pop
scas
mov
call
scas
cmp
adc
jnp
and
stos
fwait
loop
in
mov
rcr
rol
rcl
(bad)
aas
and
dec
push
adc
mov
mov
mov
xor
pop
call
pop
in
mov
cmp
add
fld
leave
cmp
mov
push
adc
xchg
jb
ror
xor
mov
mov
jmp
cmps
lods
les
test
stos
repnz
clc
ins
mov
push
int
add
fwait
mov
xor
out
push
xchg
scas
xor
mov
scas
sbb
push
pop
jae
repnz
jp
bound
ins
mov
xchg
retf
jns
popf
gs
rol
jmp
not
test
pop
icebp
repz
call
and
aad
sar
in
jmp
jo
pop
mov
fidivr
pop
stos
or
ja
mov
cwde
mov
test
xchg
scas
aas
sar
jmp
repnz
push
mov
and
leave
push
xlat
xchg
pop
pop
inc
cmp
ret
test
jg
cmp
sub
js
push
xor
sub
or
push
jne
scas
mov
push
jnp
mov
xor
mov
cmp
scas
mov
(bad)
call
or
mov
cmc
fwait
ret
clc
jmp
fcom
push
retf
out
dec
aam
push
ss
jb
xchg
in
xor
and
popa
fst
or
outs
dec
and
pop
popf
in
mov
arpl
cmp
xchg
jmp
cmp
and
aaa
jle
js
sub
call
inc
fidivr
stos
cmp
lods
and
dec
rcr
std
bound
adc
lods
xor
clc
scas
mov
adc
movs
dec
dec
mov
inc
enter
adc
jge
int3
dec
xlat
(bad)
jecxz
movs
mov
in
sbb
add
pop
mov
pop
inc
or
push
adc
int
add
xchg
adc
jl
or
test
or
int
push
push
retf
mov
xor
int3
pusha
call
mov
das
cmp
(bad)
push
fmulp
dec
jl
lods
push
movs
mov
lods
ins
addr16
adc
clc
repz
comiss
movs
push
into
mov
icebp
iret
test
test
fxch
and
pop
into
repz
mov
fsubr
jge
aad
pop
sub
jmp
fidiv
or
inc
aad
dec
shr
mov
mov
add
lock
cwde
sbb
push
retf
cmps
sub
popa
jp
mov
inc
icebp
gs
fsubr
sbb
jmp
jl
adc
push
cdq
cmps
sahf
nop
and
in
test
fnstcw
jne
xor
(bad)
dec
mov
jl
fnsave
pop
into
shl
movs
inc
pop
adc
inc
add
into
sbb
push
sub
ds
or
push
idiv
inc
jb
arpl
std
push
mov
jecxz
push
mov
fsubr
pop
lds
mov
pop
mov
addr16
out
loop
mov
out
pusha
add
lahf
jns
out
xor
fmul
push
leave
and
inc
pop
ins
mov
sub
xor
stos
pop
aam
xor
scas
adc
mov
cmp
test
fcom
and
imul
adc
test
data16
mov
repnz
jmp
push
mov
into
rcl
fisttp
ret
stc
das
xchg
fs
xor
xchg
(bad)
sub
scas
xchg
adc
(bad)
aaa
add
adc
hlt
dec
cmp
mov
xchg
mov
scas
xchg
push
lods
retf
and
loope
mov
push
aaa
mov
mov
push
sbb
out
or
adc
js
jmp
ret
lea
mov
loope
pop
loop
icebp
sub
rcr
rol
push
popf
int3
call
mov
cmp
jge
loop
cmp
mov
push
rcr
jmp
xchg
xor
dec
mov
inc
(bad)
fist
jnp
push
cmc
mov
jecxz
mov
idiv
mov
jne
dec
call
lock
cmp
jmp
adc
adc
xchg
cmp
fmul
fisttp
fimul
add
or
lar
xchg
clc
(bad)
xchg
inc
fdiv
add
iret
cmp
scas
iret
int
cmp
or
jecxz
sbb
xor
pop
fstp
into
xchg
es
and
push
cdq
add
add
and
pusha
ja
ins
imul
lds
cmp
ja
shl
and
inc
or
jle
dec
adc
push
test
jp
shr
cmp
push
daa
call
jb
mul
aam
mov
pop
adc
inc
stos
xlat
fucompp
jns
call
sbb
sub
cmp
fcom
push
push
push
inc
pop
xchg
lods
jmp
sti
shr
jl
aas
retf
sbb
inc
popa
lods
mov
inc
mov
and
push
movs
push
adc
retf
xchg
scas
sub
dec
out
ins
jae
add
lahf
cmp
jecxz
jmp
loop
push
out
mov
push
mov
fst
cmp
out
sub
fidiv
pop
stc
push
xchg
xor
add
jl
pop
fucom
je
mov
test
in
mov
rcl
jp
into
out
mov
bound
cmps
push
xchg
cld
(bad)
(bad)
push
jae
pop
push
rcr
hlt
js
ss
dec
mov
jmp
jmp
mov
xchg
cs
push
and
and
jl
in
mov
call
imul
xor
aam
cmp
in
test
jnp
sbb
pop
shr
loop
jge
mov
mov
pop
mov
jmp
arpl
(bad)
mov
mov
sub
out
out
jg
sar
mov
adc
jge
sub
ss
retf
xlat
mov
adc
dec
(bad)
cmps
add
push
sbb
cmc
adc
cmp
mov
cmps
xor
add
sbb
dec
dec
sbb
outs
loopne
call
mov
jmp
mov
cmp
in
push
mov
mov
mov
sub
mov
pop
into
(bad)
mov
imul
fcmove
mov
sbb
stc
in
retf
mov
jle
popa
mov
sbb
push
aam
rol
popf
inc
lods
ret
iret
rol
ins
in
sbb
popa
mov
pusha
fs
outs
movs
or
ins
sbb
das
cmp
into
cmp
sahf
add
mov
or
ja
icebp
push
jns
mov
hlt
xor
xchg
push
in
arpl
xor
fisubr
retf
jle
test
imul
fwait
int
inc
pusha
sbb
inc
pop
ins
(bad)
mov
adc
jle
jno
sbb
arpl
add
ret
fist
nop
mov
or
xchg
push
dec
sbb
pop
sub
jno
cmps
xor
and
add
inc
push
out
xor
cwde
inc
pop
xor
test
jno
push
or
jle
dec
addr16
push
jmp
pop
das
in
push
cdq
push
loop
mov
call
cmp
nop
loopne
cli
or
out
jbe
(bad)
(bad)
mul
fwait
xor
push
ss
stc
cmc
jp
movs
ror
test
push
or
jecxz
cmp
scas
clc
shl
dec
fcmovb
mov
xchg
mov
cwde
and
cmp
push
adc
outs
xor
scas
sub
jecxz
mov
mov
cld
ins
sbb
sub
inc
push
push
scas
cmp
sbb
in
cs
lahf
xor
out
mov
dec
or
sbb
scas
mov
add
push
ret
jb
or
cwde
push
jle
or
add
inc
add
sbb
ss
ja
rdmsr
and
int
and
or
lea
pop
pop
pop
addr16
rcr
aaa
adc
call
jnp
and
dec
dec
pop
fidivr
out
lods
cmp
mov
mov
inc
arpl
push
dec
push
retf
pusha
add
adc
loopne
aad
inc
or
lds
xchg
pop
sbb
mov
or
jae
scas
call
cmp
jno
mov
xchg
or
lea
test
push
jl
out
shl
adc
push
in
je
mov
dec
les
push
push
xor
fld
popf
cmps
(bad)
(bad)
cmc
aad
mov
mov
fstp
mov
jo
test
jns
aam
imul
pop
push
cld
popa
dec
mov
jl
mov
jbe
mov
inc
push
adc
ins
cdq
enter
je
mov
fldcw
xor
dec
cli
call
fcomp
sti
movs
enter
adc
and
jg
adc
sbb
xchg
pop
add
bound
mov
jmp
push
pop
push
jg
xchg
or
xor
imul
hlt
out
and
add
sbb
leave
xlat
imul
cmp
sub
dec
xchg
add
hlt
mov
jne
push
repz
cmc
movs
and
aad
xchg
mov
fwait
pop
into
je
pop
adc
add
test
mov
fisub
fistp
sub
xchg
fwait
outs
inc
sbb
jmp
xchg
sub
inc
sti
sbb
push
jl
call
ins
mov
mov
aam
mov
push
call
call
push
test
cmp
ror
xchg
push
fidivr
(bad)
or
mov
jg
aam
cmp
cmps
mov
jae
inc
xor
rcl
push
pop
or
push
(bad)
pushf
jl
dec
retf
mov
xchg
jbe
std
ret
retf
sub
enter
pop
out
outs
pushf
cmps
sbb
(bad)
cmp
in
mov
mov
mov
imul
ret
add
repz
and
ins
sar
mov
ins
loope
push
les
rcl
clc
push
mov
cwde
sbb
std
jmp
daa
mov
inc
inc
xchg
loope
sub
xchg
push
outs
sub
jge
push
cmp
inc
ret
pop
punpckhbw
test
js
jmp
cmp
xor
push
and
push
xchg
ja
xor
dec
outs
out
add
mov
leave
mov
fdivr
pop
(bad)
fisubr
ret
inc
inc
cmps
arpl
je
jmp
movs
xchg
or
and
or
inc
imul
fcom
lds
jb
mov
scas
add
call
xchg
pop
pop
xchg
xchg
imul
mov
sbb
xchg
stos
pop
aas
sti
mov
xchg
or
xlat
push
inc
repz
inc
sbb
and
xor
pop
cmp
ds
sub
std
cmp
lahf
movs
or
inc
pop
fsub
(bad)
inc
pop
cmp
sahf
imul
leave
neg
xchg
adc
dec
je
add
in
pop
fsub
ss
fidiv
mov
outs
inc
dec
xor
not
mov
int3
inc
ss
mov
fsub
xchg
cwde
dec
add
mov
(bad)
pop
mov
out
jmp
mov
xchg
mov
dec
push
addr16
ss
inc
jmpw
(bad)
neg
test
jb
cwde
add
sbb
mov
xlat
pop
mov
jg
push
les
mov
mov
scas
mov
in
fsub
lods
cli
pop
call
retf
movs
xor
je
pop
retf
call
xchg
fwait
mov
dec
sar
mov
div
add
jb
push
mov
jno
popa
fistp
adc
pop
leave
movs
mov
rol
dec
out
dec
or
cmp
xor
xor
daa
mov
movs
push
xchg
cmp
pop
sub
dec
sub
out
subps
sbb
mov
lahf
inc
mov
stos
ficom
sbb
dec
test
dec
add
out
mov
inc
int3
push
retf
sbb
push
and
sbb
push
add
sub
cmp
mov
adc
mov
ins
xor
retf
sub
clc
cmova
mov
jno
ins
enter
ins
fldpi
jo
loop
mov
mov
jno
ss
rol
lods
sbb
loop
in
cmp
pushf
mov
pop
pop
adc
inc
lods
adc
lds
rol
imul
push
push
lds
sub
xor
cmp
xlat
dec
popa
(bad)
jne
adc
movs
nop
popa
push
ss
jbe
sbb
loopne
leave
mov
cmps
sub
test
push
sbb
(bad)
jmp
mov
lock
sti
dec
in
dec
mov
sbb
pop
repz
or
dec
and
mov
fst
outs
xchg
push
inc
sti
mov
js
cmc
test
jnp
mov
dec
les
xchg
inc
or
pop
arpl
ins
add
adc
je
or
pop
pop
into
call
xchg
and
xchg
dec
aaa
adc
movs
inc
sub
xchg
les
lock
xor
push
or
add
retf
pop
inc
inc
and
loope
add
rcr
xor
jecxz
pop
lds
leave
in
shl
mov
cld
sub
inc
cmc
jmp
fwait
les
and
inc
ds
adc
je
mov
sub
pop
div
adc
xlat
xor
rol
(bad)
pop
lea
mov
sub
or
pop
stos
loop
push
adc
in
inc
or
jl
mov
pop
pushf
lock
lock
push
dec
push
jmp
or
out
aad
test
leave
fist
hlt
inc
push
cs
inc
loop
test
ret
or
adc
das
sub
pop
cmp
sub
xchg
mov
imul
pop
std
enter
mov
cdq
enter
sahf
and
rol
jg
repnz
loop
std
lahf
(bad)
xchg
test
ins
pushf
or
xchg
sbb
mov
in
movs
add
stc
in
adc
stos
je
or
jmp
jo
sub
gs
shr
and
fwait
inc
pusha
pushf
into
cmp
sbb
hlt
mov
add
retf
xor
pushf
cmp
stc
inc
mov
pop
and
adc
add
leave
sti
into
add
nop
dec
push
add
into
movd
xchg
xchg
xchg
sub
adc
jno
daa
jmp
inc
sub
inc
pop
mov
(bad)
in
mov
xor
hlt
dec
es
(bad)
push
mov
and
inc
pop
(bad)
sbb
and
or
aas
or
or
cmp
sbb
inc
test
leave
fs
pop
bsf
rcl
test
enter
push
and
inc
push
movs
inc
push
push
outs
mov
lods
jbe
lea
push
push
call
jae
dec
push
out
repnz
push
jp
mov
pop
mov
sub
cmps
mov
or
cwde
add
jecxz
cmc
in
jp
pop
repz
into
push
mov
jecxz
push
aas
pusha
aaa
aad
cli
sahf
popf
stc
pop
(bad)
mov
add
jnp
scas
mov
aam
adc
popf
jns
das
inc
(bad)
movs
or
push
call
inc
push
or
push
cmp
mov
or
cmp
cmc
add
mov
xor
ins
jo
push
or
cmp
push
mov
fcomp
nop
mov
out
sti
mov
dec
cmp
xor
pop
cmp
movs
out
mov
(bad)
loop
sub
jo
cdq
pushf
(bad)
xchg
or
test
sub
(bad)
in
inc
fs
mov
push
pop
push
ins
or
jge
lods
sub
xchg
int
push
and
mov
push
add
ffree
cwde
cs
(bad)
jg
out
jae
imul
push
out
out
push
int3
out
jge
mov
sti
add
sub
retf
sbb
ror
jnp
adc
ficom
(bad)
pop
sbb
out
and
ins
test
mov
rcr
cmp
sbb
loopne
dec
retf
ror
lahf
cwde
jmp
mov
stc
fiadd
xchg
xchg
cmps
pop
popa
add
sub
inc
(bad)
loop
clc
pushf
pusha
xor
aaa
ror
mov
aam
add
adc
test
movs
ja
loope
ror
inc
out
loopne
mov
adc
sub
mov
data16
adc
add
mov
outs
fbld
sub
clc
jbe
sub
gs
(bad)
jmp
adc
jge
in
rcl
cwde
sub
stc
inc
xchg
mov
add
xchg
mov
adc
gs
mov
cmps
nop
scas
adc
add
outs
fwait
xlat
pop
lds
inc
inc
jge
or
enter
inc
test
imul
cmp
push
dec
fs
cmp
aas
push
sbb
outs
inc
fs
bound
push
out
add
mov
and
fild
shr
sar
add
mov
rcr
jbe
out
out
fld
imul
add
jecxz
push
inc
xor
push
fdiv
xor
ret
scas
xor
dec
adc
fs
(bad)
xlat
pop
loop
and
repnz
shl
xchg
mov
jp
xor
fcmovnu
test
pop
adc
cmps
cmp
add
fisubr
xchg
add
ins
mov
sbb
lods
lea
fbld
fidivr
push
mov
or
xchg
jne
scas
dec
add
sub
(bad)
pop
xor
and
enter
cmp
loope
dec
adc
in
mov
shl
cmp
push
or
enter
in
or
js
sbb
mov
push
add
call
mov
inc
cmc
sbb
mov
pop
(bad)
and
popf
repnz
dec
adc
inc
mov
jecxz
neg
push
sub
fstp
dec
fwait
gs
dec
mov
fldenv
jno
in
lahf
pop
xchg
push
mov
bswap
xchg
loope
outs
in
mov
test
adc
mov
out
sahf
(bad)
test
mov
cmp
xor
inc
retf
nop
sub
test
cmp
push
shr
enter
cmp
pop
sub
push
dec
iret
dec
or
push
dec
dec
jl
sub
loopne
xchg
pop
outs
xchg
and
push
mov
mov
or
jbe
ror
(bad)
jg
jns
jge
jmp
xor
shl
cmp
shr
(bad)
enter
out
inc
nop
cmp
mov
or
ins
push
mov
xchg
daa
inc
pop
movhps
in
sbb
arpl
pop
inc
sbb
and
push
leave
xchg
mov
neg
mov
push
mov
xchg
xor
cmp
mov
pop
cmp
fisttp
sub
stos
push
test
dec
scas
sub
cmp
imul
inc
xchg
ja
fst
pop
fisub
mov
sbb
push
xchg
ds
xor
int
(bad)
sub
or
sahf
xchg
mov
cmps
xlat
xor
mov
clc
xor
jo
retf
pop
cs
pop
cmps
push
ss
add
fild
ins
mov
pusha
mov
jns
repz
fcom
retf
pop
push
fstp
push
push
mov
sbb
fld
(bad)
xchg
daa
loop
sub
retf
cli
push
push
xchg
inc
in
fbld
inc
mov
push
lock
cmp
jb
dec
cmp
mov
xchg
or
mov
sahf
pop
in
sbb
adc
jns
dec
(bad)
pusha
xor
es
les
sti
inc
inc
fdivr
sbb
jb
sbb
dec
add
xor
std
dec
icebp
inc
fld
push
popa
jg
adc
sbb
shr
or
daa
je
or
rcr
dec
fs
and
jge
push
nop
xor
dec
adc
add
cmps
and
rcr
lods
lock
mov
retf
jbe
adc
jae
xor
mul
out
push
jae
mov
jmp
jle
mov
jmp
cmc
int
mov
loopne
aam
dec
push
out
xor
lods
adc
inc
mov
and
add
les
mov
aaa
ja
in
cdq
stos
cs
out
add
nop
int3
pop
loop
mov
jp
inc
lock
and
lahf
cld
nop
inc
mov
fwait
or
inc
test
arpl
cmp
inc
push
ss
loope
cdq
or
pop
mov
int
mov
push
and
stos
xor
fwait
mov
add
push
mov
pop
out
mov
xlat
pop
adc
fsubr
(bad)
mov
mov
aam
ds
call
(bad)
inc
mov
stc
xor
ins
push
mov
in
pop
xlat
fistp
test
mov
test
pop
pushw
dec
arpl
mul
imul
iret
mov
call
mov
cmp
retf
mov
add
or
adc
mov
in
jne
mov
add
sbb
ret
mov
(bad)
sub
shr
add
jnp
cmps
out
fild
xor
mov
aad
sub
xlat
imul
arpl
jnp
fs
mov
jns
mov
xor
jge
cli
push
mov
scas
(bad)
inc
frstor
hlt
mov
jbe
loopne
leave
stos
imul
add
aad
(bad)
mov
jnp
jb
retf
ss
addr16
test
sub
aas
cmps
rcr
es
add
ror
mov
jns
call
push
or
outs
rol
jae
mov
rcl
call
adc
stos
jmp
shr
outs
xchg
pop
fld
addr16
test
daa
aam
add
xchg
push
lahf
mov
cmp
ins
les
xor
adc
xchg
xchg
loopne
sub
fild
mov
int3
jb
mov
adc
push
in
loope
adc
mov
rcl
mov
repnz
(bad)
inc
ret
mov
sbb
iret
rcr
mov
idiv
retf
pop
adc
cmp
sti
xor
sbb
lock
loopne
xchg
xchg
sub
not
mov
inc
cmp
add
mov
push
arpl
push
lea
aaa
sbb
sbb
test
gs
xor
jle
cwde
mov
out
hlt
jge
pop
jge
pop
cwde
movs
jb
add
mov
sbb
ss
movs
imul
add
sahf
sub
sub
dec
pop
push
aad
inc
sub
push
icebp
mov
push
inc
mov
pop
push
aaa
(bad)
loopne
stos
test
setae
stos
pop
jno
mov
mov
lock
xchg
dec
dec
sar
outs
sub
jle
ret
xchg
js
stos
outs
xchg
mov
xchg
xor
xchg
stos
mov
fs
inc
iret
and
adc
in
outs
loope
fdivr
jno
xor
test
mov
ret
loopne
fldcw
or
inc
pusha
inc
jns
mov
repz
mov
xchg
or
int3
and
lock
xor
(bad)
mov
mov
sub
and
lods
jl
jae
pop
pop
fdiv
mov
call
push
mov
call
and
pusha
adc
sbb
cmp
(bad)
add
and
cmp
retf
into
lahf
jmp
mov
shl
sbb
add
rcl
mov
push
dec
lea
mov
cmc
setae
xor
shr
pop
dec
pop
dec
lds
popa
mov
xchg
pop
xor
repnz
xlat
fs
or
aad
lock
push
popa
mov
cmp
loopne
sub
call
cmps
push
mov
mov
jp
iret
mov
fs
pop
jnp
fsub
pop
popf
xor
xchg
xor
aad
pop
pushf
mov
loop
in
addr16
dec
mov
rcl
mov
enter
idiv
or
jo
es
inc
jecxz
xchg
jmp
enter
mov
(bad)
mov
mov
mov
xchg
out
cmps
imul
cmp
mov
shr
in
cs
push
jp
(bad)
int
pop
shl
imul
push
jo
or
fs
add
shl
add
mov
sbb
pop
imul
xor
ds
push
mov
mov
or
cmp
inc
dec
push
sbb
mov
mov
retf
add
idiv
mov
inc
aam
push
stos
aad
pushf
pop
popf
xlat
mov
jge
mov
cmp
dec
fld
fwait
movs
xor
push
push
push
pushf
loop
and
adc
fld
mov
mov
ins
out
clc
cmp
fbld
mov
cmp
aaa
mov
mov
mov
test
pop
mov
pop
pop
mov
js
or
(bad)
xor
outs
in
dec
jp
fld
fwait
mov
dec
add
push
xchg
mov
push
sar
into
xchg
jae
mov
lahf
mov
rol
and
adc
sti
hlt
mov
pop
test
ds
xchg
dec
(bad)
pop
call
dec
sti
ins
pop
mov
add
imul
push
fst
outs
ficomp
jnp
je
add
(bad)
mov
mov
clc
adc
scas
mov
jb
call
daa
(bad)
fnstenv
pop
addr16
push
dec
out
adc
outs
or
fild
mov
das
jp
mov
std
cli
pusha
arpl
mov
sub
js
popf
sub
mov
test
sub
in
aas
pushf
or
push
in
inc
xor
retf
ins
loopne
pop
pop
aam
arpl
retf
push
jmp
outs
pop
and
aad
lahf
adc
pushf
add
sub
cmp
rcr
or
jno
jg
and
pop
test
mov
fidiv
jecxz
jbe
sub
(bad)
push
xor
cmc
pop
xchg
or
cmc
js
mov
stos
mov
into
xor
stos
jl
dec
jp
out
add
sahf
je
cmp
xor
mov
cs
addr16
imul
xor
clc
adc
or
gs
rcr
dec
pop
bound
in
mov
not
add
jmp
jecxz
in
jg
out
sub
adc
aaa
repz
dec
stos
xor
mov
gs
dec
xchg
ror
dec
pop
pop
fs
xor
mov
movs
es
cli
repz
adc
rol
jp
std
inc
inc
jmp
sbb
call
pop
(bad)
cmp
out
push
mov
xchg
pop
adc
out
and
je
movs
ja
outs
pop
and
cmp
stc
mov
mov
push
cmp
pop
sub
jmp
repz
icebp
outs
push
imul
cmp
push
mov
loop
shr
mov
inc
cmp
frstor
xor
jbe
fwait
addr16
xchg
and
pop
sub
test
mov
arpl
mov
mov
hlt
push
(bad)
fimul
cli
into
inc
inc
leave
and
lock
mov
movs
sbb
xchg
adc
mov
(bad)
loop
push
daa
sub
int3
push
sub
fild
frstor
and
xor
je
cdq
jns
jle
sbb
mov
xchg
mov
xchg
dec
xchg
xchg
lods
push
adc
jno
add
mov
push
movs
ja
push
div
inc
out
fiadd
cmc
push
sar
sub
mov
lahf
mov
xor
outs
mov
mov
pop
shl
jb
sar
outs
mov
adc
gs
cmp
lds
jp
pop
jmp
inc
xchg
mov
mov
mov
and
adc
adc
mov
bound
nop
mov
jl
mov
pop
inc
addr16
or
xchg
std
xchg
aas
push
cmc
mov
jp
sub
push
pop
sbb
pop
(bad)
cmp
inc
lahf
pop
and
mov
xor
pop
and
and
cwde
mov
loopne
dec
jl
mov
jecxz
ror
or
retf
mov
ins
sbb
dec
test
inc
sahf
arpl
imul
(bad)
cdq
mov
jmp
imul
xchg
dec
(bad)
cmc
enter
lock
cmp
sbb
or
sbb
sti
(bad)
int
xchg
icebp
xchg
and
inc
or
daa
loop
dec
jmp
adc
lods
adc
push
xor
rcr
movs
neg
add
out
lods
and
xchg
lahf
jp
cmps
mov
imul
cmp
adc
dec
lods
adc
sub
cmp
lds
inc
stos
add
cmps
fadd
pop
jo
sbb
push
std
in
lods
dec
xchg
pop
retf
(bad)
push
or
outs
push
xor
xor
mov
mov
les
outs
jecxz
retf
or
das
loopne
daa
mov
push
int3
xor
push
icebp
loope
lods
and
fisub
xchg
adc
cdq
iret
hlt
push
mov
jmp
ss
cmps
jns
push
mov
das
sub
aam
fisttp
or
push
cmp
repnz
sub
mov
cmps
sub
push
icebp
add
push
enter
lock
fs
xlat
pop
and
jmp
pop
call
leave
xchg
mov
aad
call
jmp
and
call
jp
xchg
sub
loope
das
mov
push
pop
pop
push
sbb
sub
das
dec
out
add
sbb
fsub
sub
sahf
dec
xchg
xor
data16
add
inc
movs
loop
pop
out
inc
retf
div
mov
jo
arpl
stos
xchg
and
je
popf
in
arpl
adc
xor
jmp
sti
sub
jmp
arpl
sbb
cmp
lods
pop
and
mov
xchg
dec
add
sbb
sub
mov
imul
sbb
pushf
mov
in
aas
mov
in
pop
shl
shr
pop
sar
mul
jecxz
add
mov
jle
mov
pop
cmp
movs
sbb
repz
movs
pop
nop
scas
arpl
sub
fidivr
inc
sub
xchg
outs
js
fmul
sbb
xor
es
dec
stos
jno
jge
pop
stc
add
data16
mov
outs
mov
repz
xlat
ds
xor
or
mov
lods
push
jo
pop
jbe
sub
pop
pop
sub
dec
push
sub
test
sahf
int
pop
aas
aam
jp
push
jns
add
xchg
push
jp
in
mov
dec
jne
sub
outs
sub
gs
popf
push
add
add
mov
mov
out
xchg
out
loop
stos
lods
in
mov
mov
loop
adc
xor
(bad)
pushf
aas
data16
ins
sub
mov
in
js
mov
jno
jmp
or
mov
retf
shl
(bad)
mov
xor
or
int
inc
mov
push
mov
add
inc
lods
jns
dec
cmps
sti
leave
push
in
mov
test
stos
mov
mov
mov
adc
sar
stos
int3
push
ror
outs
adc
push
pushf
mov
mov
ds
mov
push
movs
repz
and
icebp
adc
adc
xor
xor
sbb
mov
bnd
pop
cwde
into
dec
addr16
pop
fsub
jbe
clc
xchg
pop
enter
(bad)
pop
push
or
pop
mov
and
std
ins
test
pop
int3
or
sub
xchg
aad
(bad)
cmp
jmp
retf
push
je
push
sub
pop
cmp
test
stc
sar
aam
and
fild
jmp
in
int3
mov
pop
mov
mov
cdq
shl
mov
mov
mov
add
cs
lods
retf
imul
cmps
xor
fwait
sub
jne
add
add
dec
jp
or
les
inc
cdq
ins
dec
jp
(bad)
shl
mov
stos
dec
jecxz
adc
mov
clc
js
xchg
cli
pop
jecxz
rcl
cmp
(bad)
fwait
xchg
inc
lahf
push
sahf
ss
mov
pop
add
xchg
jmp
ficom
cli
fs
dec
fidiv
mov
fnstcw
and
mov
xchg
fs
jmp
jne
mov
inc
iret
jp
bound
bound
jae
stos
in
add
xor
mov
lahf
(bad)
mov
fldcw
inc
fistp
cmp
movs
sub
push
xchg
xor
mov
push
in
jb
dec
sbb
push
out
cwde
add
loop
test
sub
test
push
sbb
imul
sahf
sahf
sub
imul
das
ss
jge
mov
cs
mov
adc
inc
xor
xlat
mov
mov
mov
stos
clc
pop
bound
mov
(bad)
es
pop
lahf
call
or
(bad)
cmc
fisubr
loopne
clc
adc
inc
or
ins
push
push
mov
and
sub
pushf
and
popa
mov
mov
push
cdq
bound
lahf
mov
aad
retf
sbb
pop
shr
jmp
aas
call
inc
xchg
icebp
pusha
in
push
sub
ja
inc
push
mov
sub
xchg
or
xchg
mov
pushf
xchg
out
jne
push
pop
dec
mov
xchg
dec
xchg
hlt
daa
imul
inc
add
jb
cmp
cwde
or
fidiv
push
dec
in
mov
add
or
sbb
cmps
xlat
cmp
push
sbb
jg
pusha
repz
daa
adc
push
cmp
sbb
stos
push
xchg
pushf
mov
mov
sti
imul
jo
(bad)
(bad)
movs
out
(bad)
add
mov
popf
add
stos
jle
(bad)
aaa
pusha
bound
mov
push
sub
pop
and
loop
push
sbb
add
jno
add
outs
movs
xor
mov
cmp
jmp
out
mov
inc
fcmovnu
mov
push
gs
test
ins
mov
aad
fnstcw
fs
adc
test
aaa
int3
inc
ins
std
mov
pusha
jb
test
adc
aad
in
mov
and
dec
cmps
ins
xchg
(bad)
leave
stos
ss
sar
mov
sahf
add
fist
test
clc
or
pop
adc
fisub
mov
and
sub
cs
sub
push
sub
jno
out
push
sbb
ficomp
ficom
inc
lods
add
dec
pop
jl
xchg
dec
push
repz
add
pop
out
imul
xchg
scas
or
mov
jecxz
cmp
xchg
sar
and
adc
gs
fstp
dec
ins
fisttp
cld
xchg
xor
or
js
cld
add
add
jns
mov
pop
jmp
xchg
aad
dec
ds
ins
icebp
ins
mov
xor
sahf
lock
rcl
dec
fsub
fadd
mov
jb
fidiv
sub
jno
aaa
sbb
fisub
into
xlat
xchg
pop
mov
fcomp
ds
push
es
test
cmp
cmp
inc
into
fild
das
mov
pop
jp
jae
fbld
push
adc
push
sbb
xchg
dec
ret
pop
jno
push
mov
mov
test
not
cdq
jo
(bad)
shl
or
(bad)
adc
rol
mov
lahf
push
xchg
or
repnz
lahf
jbe
pop
inc
mov
rcl
xchg
sub
inc
mov
mov
mov
lahf
xchg
jg
ins
in
xchg
xor
cmps
adc
cmp
int3
xchg
push
mov
sbb
cmp
mov
call
or
xchg
test
dec
imul
sbb
inc
iret
dec
inc
or
leave
xor
lock
or
int3
xchg
imul
imul
adc
pop
enter
pop
jno
adc
mov
neg
cdq
dec
push
jne
movs
(bad)
out
pop
cli
into
imul
retf
stos
inc
push
aad
xor
jge
dec
jae
(bad)
lods
sbb
cli
xchg
icebp
and
daa
mov
jns
or
fs
imul
out
mov
clc
mov
sub
fs
sbb
leave
mov
xlat
fimul
sahf
ins
in
xor
retf
cmps
xchg
adc
and
inc
scas
dec
inc
std
repnz
mov
mov
mov
fidivr
ret
or
pop
sub
enter
je
inc
cdq
adc
xor
mov
add
sbb
mov
cmc
aad
test
and
scas
dec
out
or
jno
mov
imul
dec
mov
jno
shl
aas
jbe
and
push
mov
sbb
or
(bad)
mov
aad
(bad)
not
jne
nop
push
xor
inc
mov
jmp
cmps
mov
mov
pop
push
push
(bad)
sbb
push
adc
push
and
sar
ss
push
mov
in
clc
mov
clc
cmc
mov
enter
mov
or
mov
cmp
fild
stc
mov
sbb
dec
sub
pop
adc
mov
pop
push
mov
mov
das
repnz
lds
call
mov
cmc
add
push
dec
or
add
xor
ret
dec
jns
sbb
push
(bad)
btc
xor
lea
(bad)
mov
sub
shr
movs
pop
pop
and
shl
lods
sbb
addr16
fiadd
icebp
movs
pop
arpl
jno
inc
and
popa
dec
mov
mov
inc
lahf
lock
push
sub
js
or
les
cmp
iret
lds
inc
jmp
mov
cmp
push
enter
daa
mov
sbb
lea
cdq
xchg
sub
sbb
mov
push
sub
sar
int
push
daa
bound
daa
push
stc
adc
adc
iret
data16
xchg
stos
mov
in
cs
adc
inc
push
loopne
push
daa
shr
ret
mov
repz
repnz
sar
call
sub
pop
mov
mov
pop
mov
imul
jmp
push
idiv
mov
add
jge
adc
movs
daa
xlat
jno
fdiv
or
(bad)
and
iret
mov
sti
gs
fcmovu
mov
scas
or
nop
inc
inc
and
fistp
mov
lods
push
cmp
shl
ds
stc
cli
push
inc
sub
sbb
(bad)
je
add
sub
xor
rol
jnp
clc
ins
xchg
(bad)
int3
scas
sti
add
cwde
inc
in
sbb
mov
jmp
dec
cmc
out
jne
das
mov
out
(bad)
shl
movs
mov
cmp
mov
ins
xor
adc
mov
fs
loope
hlt
pop
jo
shr
xchg
aad
xor
sub
loop
push
jne
sbb
sub
push
xchg
dec
add
jl
push
fcomp
test
fs
(bad)
movs
push
xchg
jno
jbe
pop
repz
xchg
(bad)
out
inc
and
cmps
fdivr
int3
mov
inc
push
cmp
aad
cwde
mov
(bad)
mov
lods
fdivp
jbe
cdq
dec
cmp
mov
loopne
cmps
test
sub
fimul
adc
dec
jns
mov
iret
stc
dec
dec
mov
dec
cmps
icebp
dec
ror
xor
adc
mov
dec
popa
add
dec
fsubp
rcr
arpl
or
and
push
gs
jecxz
out
fist
cmp
jecxz
xchg
icebp
outs
add
mov
sbb
jmp
into
sbb
jmp
jge
cmc
cmp
adc
imul
jge
fst
jbe
xchg
jg
fisub
lods
jecxz
aam
stos
push
(bad)
in
cld
ret
in
cmps
dec
aad
and
popa
fsubr
or
jns
lea
mov
jbe
(bad)
iret
cdq
out
aaa
scas
adc
push
sbb
shl
sub
iret
ins
cdq
xchg
or
inc
scas
imul
loope
movs
dec
push
or
lods
aas
and
pushf
adc
or
sbb
sahf
daa
retf
inc
in
into
inc
cmp
add
stos
call
add
push
jecxz
or
idiv
push
lahf
pusha
imul
mov
push
xchg
mov
mov
cmp
pop
sbb
xor
dec
xor
adc
loope
mov
or
mov
sbb
std
mov
ds
jbe
aad
pop
pusha
icebp
or
jno
pop
push
mov
pusha
retf
cld
xchg
sbb
or
sub
or
imul
fs
clc
in
adc
retf
stos
(bad)
inc
inc
push
imul
out
add
adc
jae
cmps
inc
mov
retf
into
add
inc
sub
sub
add
nop
aaa
(bad)
jmp
pop
cmps
cmps
adc
movs
leave
mov
inc
stos
add
or
cmp
pusha
(bad)
loop
out
ja
cmp
inc
aad
push
mov
ins
movs
mov
jae
and
(bad)
cmp
test
or
mov
pop
mov
cmp
repz
push
xchg
lods
(bad)
lahf
test
mov
and
xor
scas
out
sbb
in
push
xchg
mov
pop
retf
sbb
jp
rol
daa
test
xor
mov
push
repnz
adc
stos
aam
jmp
ins
sbb
popf
fld
into
add
jno
jg
shr
sub
leave
cmp
icebp
mov
sub
sbb
leave
lods
push
add
hlt
inc
jo
cmp
lar
mov
inc
cmp
jmp
fsincos
in
mov
pop
jnp
lods
and
scas
mov
mov
sbb
cs
addr16
jns
sub
and
(bad)
cmc
iret
call
cmps
jl
cmps
mov
pop
mov
cmp
sbb
xor
ins
push
xchg
fmul
ror
jmp
in
int
fdivr
ret
sbb
dec
ss
pop
adc
and
stos
loop
je
push
sub
jp
int
fcomp
jb
std
jno
jl
fdivr
int
push
jl
leave
mov
mov
lock
jp
pop
pop
push
test
test
jecxz
push
push
jge
inc
pop
mov
mov
and
aaa
xor
out
(bad)
mov
(bad)
pop
imul
je
sar
adc
mov
push
add
or
popf
rcr
nop
dec
in
jl
xchg
sub
xlat
imul
sbb
jbe
push
cmps
and
mov
xor
lds
sub
nop
jae
mov
mov
push
mov
jle
cmp
jno
cmp
and
inc
sub
mov
sbb
scas
jae
jnp
dec
mov
iret
sbb
or
inc
xor
mov
or
cmp
add
cwde
sub
cmp
fcom
jl
xchg
mov
stos
aas
mov
jecxz
js
ror
(bad)
xor
sahf
fwait
jg
js
(bad)
xor
in
nop
scas
and
or
xchg
outs
add
icebp
mov
jae
icebp
or
dec
sub
cmp
xor
inc
call
cmp
call
jl
adc
and
daa
push
in
push
repz
sub
pop
cmps
and
enter
inc
in
xor
js
push
iret
cmp
lahf
cmps
fisub
cs
in
and
outs
dec
push
jge
jmp
jge
mov
jae
jb
dec
mov
or
in
shl
loope
fs
sub
and
mov
cmc
cmc
sbb
fwait
mov
jnp
movs
xchg
push
lods
inc
inc
mov
clc
mov
xchg
jne
movs
adc
mov
sub
(bad)
mov
js
ins
jnp
dec
ret
jecxz
fidivr
mov
cld
mov
lods
movs
or
lahf
mov
jbe
test
dec
ja
cmc
push
xchg
xchg
mov
push
sahf
xchg
mov
jae
outs
push
sti
(bad)
xor
jne
jno
cmp
mov
stc
dec
fild
mov
push
outs
mov
js
cmp
jae
xor
push
sub
arpl
movs
(bad)
outs
aad
nop
or
ins
push
fnstcw
pop
cmps
mov
rcl
data16
dec
add
aaa
lahf
pop
retf
dec
rcr
push
aaa
jecxz
pusha
std
int3
mov
or
and
out
jnp
dec
test
or
xor
sti
inc
jbe
ret
out
pop
xor
mov
fdivr
ja
nop
mov
cmp
(bad)
repnz
or
push
mov
jns
cmp
dec
add
jge
stos
sub
and
inc
cmp
popf
out
mov
sbb
xchg
or
jp
mov
pop
out
out
aaa
jmp
adc
in
fdivr
fisub
dec
mov
push
loop
dec
ja
sub
mov
pop
add
aam
test
ja
fwait
cmp
dec
(bad)
sub
in
xor
stos
jmp
jo
std
icebp
xlat
push
push
jnp
inc
mov
cld
fucomi
jge
push
data16
mov
pusha
push
pusha
fstp
lods
fs
icebp
pop
mov
(bad)
jbe
mov
cld
rol
out
pop
sbb
xchg
out
push
out
or
test
sti
ficomp
mov
mov
popf
cmp
inc
sbb
outs
inc
popf
ret
sahf
dec
stos
stos
and
fs
jns
mov
retf
aad
repnz
push
(bad)
push
test
lods
xor
ja
mov
push
rcl
gs
(bad)
lahf
xchg
adc
inc
pop
fdivrp
shl
lods
je
test
popf
(bad)
jae
mov
lds
test
loop
xchg
mov
call
pop
inc
test
dec
xor
cmp
icebp
sbb
cmp
not
cmc
pop
dec
sbb
adc
loop
adc
data16
xchg
jae
mov
push
xor
mov
xchg
cmp
pop
in
mov
loopne
push
movs
dec
sub
neg
add
pop
adc
add
push
(bad)
scas
movaps
xor
js
out
imul
out
jl
ins
mov
inc
jns
movs
cld
add
inc
fwait
xchg
mov
int
popf
xchg
ins
add
fmul
dec
aam
pop
fld
stos
inc
rcl
mov
xchg
xchg
xor
fmul
rcr
jbe
ret
inc
retf
cmp
fisttp
daa
jmp
sbb
scas
and
lods
imul
sar
aad
xchg
dec
mov
fldcw
fsub
outs
sar
pop
adc
jno
sbb
mov
sar
ins
jge
sbb
and
push
pop
addr16
sub
pop
bound
pop
xor
test
push
push
xchg
sahf
push
dec
lock
int3
ret
stos
icebp
push
popa
jno
xchg
test
pop
out
mov
dec
fwait
(bad)
xlat
pop
mov
mov
int3
into
xchg
pop
sti
adc
out
clc
fidiv
loope
out
mov
push
in
pop
loope
sub
ret
repnz
jp
int
xor
imul
sbb
imul
(bad)
fistp
rcr
jecxz
or
mul
jno
das
aas
mov
test
mov
and
mov
sub
mov
mov
pop
sub
mov
outs
xor
add
jo
lock
mov
(bad)
push
mov
xchg
jge
mov
push
ins
push
and
jmp
dec
or
xor
(bad)
(bad)
repz
xor
gs
nop
jmp
xor
dec
(bad)
pop
das
into
std
adc
fsub
hlt
ja
cwde
out
pop
rol
or
or
dec
and
mov
(bad)
jno
mov
add
imul
jg
xchg
mov
pop
jo
jbe
es
pusha
mov
in
and
xor
sahf
cmp
rol
mov
adc
sub
clc
adc
inc
cmps
cli
push
sbb
call
jg
jmp
popf
mov
and
setle
cdq
sbb
clc
fwait
imul
xor
neg
mov
xadd
jno
inc
jb
push
retf
pop
loope
int
stos
fbstp
es
mov
ins
mov
les
sbb
fcmovne
sub
mov
stos
mov
and
out
ret
rcl
gs
xchg
xchg
push
xchg
in
sub
outs
mov
cmp
js
cli
clc
movs
adc
mov
push
pop
bound
test
mov
push
mov
adc
pushf
shr
cmps
cdq
mul
repz
mov
ret
cmp
loopne
mov
(bad)
into
xchg
cwde
inc
mov
push
jae
and
call
dec
sbb
sub
stos
cdq
inc
ss
daa
push
les
das
shl
xchg
sub
in
imul
pop
pusha
pop
and
add
arpl
scas
fistp
mov
sub
(bad)
jecxz
mov
int3
jbe
xchg
mov
scas
cmp
int
jmp
push
(bad)
jl
cmp
pop
movs
cwde
pop
fld
or
mov
sbb
xchg
mov
(bad)
(bad)
popa
leave
sahf
sub
mov
cmp
pop
shr
out
and
mov
xchg
mov
stos
jne
aas
retf
scas
xor
pushf
jge
sbb
push
loop
std
and
scas
cmps
cmp
sbb
cld
(bad)
hlt
mov
fs
jecxz
add
push
neg
arpl
push
jp
adc
ins
jns
add
fcom
add
repnz
cdq
cmp
dec
test
fisttp
pusha
add
mov
out
dec
lahf
push
gs
jo
xor
or
add
sahf
stos
daa
imul
sub
xchg
pop
jecxz
cmp
jecxz
dec
in
sbb
frstor
pop
jbe
mov
call
or
xor
and
fistp
dec
test
fwait
inc
(bad)
xor
xor
div
icebp
lds
add
js
bound
xchg
not
inc
popf
dec
push
add
push
call
ret
xchg
add
mov
cdq
hlt
and
sti
cmp
loopne
icebp
out
lock
frstor
ins
shld
mov
xor
xchg
clc
jmp
call
pop
test
inc
clc
js
lods
sahf
sbb
adc
or
add
xchg
enter
push
sar
enter
lds
mov
je
test
in
pop
sar
mov
jp
cwde
dec
test
xchg
sbb
(bad)
iret
jo
sbb
aad
jecxz
xlat
mov
push
dec
adc
pusha
inc
pop
and
add
int3
pushf
shl
cmc
les
inc
stc
mov
cld
jns
cld
add
pop
popa
push
xchg
js
shl
imul
dec
pop
(bad)
xchg
cdq
inc
push
(bad)
lahf
lea
mov
and
mov
ret
push
pop
sub
cmps
std
enter
fist
cwde
jbe
cmp
icebp
dec
in
cmp
sti
out
and
inc
gs
hlt
mov
mov
js
mov
adc
out
popa
lods
xchg
retf
and
out
loope
lock
add
add
sub
sub
adc
xor
jg
sbb
(bad)
(bad)
jae
mov
jno
ret
sbb
clc
push
rol
pop
in
jp
sbb
jge
mov
imul
mov
scas
mov
mov
pop
mov
push
pop
adc
gs
mov
dec
out
xchg
push
xor
(bad)
mov
(bad)
jo
adc
add
mov
loop
xor
scas
adc
(bad)
mov
in
add
jmp
push
stos
loopne
movs
xor
sar
sbb
mov
es
jmp
(bad)
xor
lods
test
inc
loope
xchg
lock
mov
pop
sti
mov
pusha
outs
std
(bad)
push
call
ret
stos
ins
seto
sbb
mov
jne
popf
jl
pusha
sbb
es
mov
add
mov
pop
retf
out
outs
lods
rol
gs
(bad)
stos
mov
lods
out
dec
xor
rcl
jbe
inc
das
sub
pop
pop
in
fwait
popa
jge
sahf
and
aas
or
add
je
mov
call
(bad)
mov
fld
sbb
cdq
mov
pop
inc
mul
ins
(bad)
ficom
enter
adc
bt
enter
xchg
pop
mov
cwde
or
sub
test
adc
bound
mov
mov
add
xlat
mov
jns
shl
jae
loop
dec
ins
pop
rol
dec
lock
jb
adc
popa
mov
orps
mov
fsub
aas
push
ret
jbe
inc
sbb
loopne
out
and
ins
pop
sbb
push
daa
fwait
lods
add
fsub
sub
adc
pop
scas
mov
scas
mov
jnp
jp
jb
ret
les
push
test
push
aam
adc
pop
xor
rcr
leave
in
adc
cmc
(bad)
inc
int
mov
test
(bad)
adc
cmp
inc
outs
je
loope
test
jno
jl
push
push
call
pop
sbb
lahf
das
hlt
and
or
or
sbb
ror
int3
ror
clts
retf
adc
movs
out
retf
loop
fwait
mov
and
in
fs
jns
pushf
add
pop
push
jns
mov
xchg
ret
aam
js
xor
sub
xchg
sti
or
int3
jg
outs
mov
sbb
in
(bad)
hlt
pop
pusha
mov
jnp
xchg
sub
xchg
lods
outs
add
adc
and
stos
inc
sbb
xor
cmps
inc
push
cmp
(bad)
pusha
bound
xor
mov
xor
inc
repz
jne
pop
mov
(bad)
jle
or
sbb
idiv
xor
mov
dec
imul
shr
sub
cdq
jl
cmps
jae
push
dec
rcl
outs
mov
cli
adc
mov
ins
outs
mov
sbb
adc
inc
fdivr
outs
into
fild
scas
fst
add
leave
in
cwde
rcl
push
and
jo
loope
shl
xor
in
sbb
and
lods
int
ds
xchg
inc
rcl
adc
pop
jmp
mov
rep
or
inc
cmp
call
cmp
(bad)
jmp
fst
sahf
out
in
add
inc
test
inc
and
and
mov
adc
mov
je
jno
push
and
sub
scas
cli
shr
cwde
mov
into
xchg
pop
pop
stos
out
movs
test
cmp
inc
daa
hlt
jle
into
(bad)
mov
das
fs
sar
fimul
lods
fs
lahf
add
xchg
arpl
pop
pop
movs
les
das
jae
push
adc
jmp
iret
cdq
xchg
mov
inc
test
(bad)
and
out
mov
data16
(bad)
lahf
mov
sbb
xor
cmp
cmp
pop
sahf
cmps
mov
push
dec
sbb
out
fcmovnb
sub
sbb
pop
jno
pop
mov
xchg
cld
(bad)
retf
add
add
add
shl
jmp
lock
xor
(bad)
rol
add
gs
jl
scas
pop
jne
add
sbb
lahf
popf
mov
je
dec
in
mov
ins
pop
jne
dec
retf
xchg
dec
les
push
jge
aad
movs
mov
and
sti
push
int3
mov
das
sub
mov
mov
ret
pop
cdq
push
out
cmp
inc
add
movs
xor
push
xchg
ins
xchg
and
xchg
and
loopne
rcr
mov
cwde
jmp
or
repz
push
jb
int
add
jl
das
jne
icebp
or
cmc
sbb
int3
int
jmp
cwde
dec
leave
sub
out
push
cwde
jl
and
mov
sbb
leave
cmps
jno
in
hlt
les
lock
mov
cwde
xchg
mov
test
add
test
scas
(bad)
jnp
jae
mov
aad
jno
jecxz
das
mov
pop
adc
jecxz
adc
mov
fcmove
retf
lahf
add
push
xor
pop
cmp
(bad)
jmp
xchg
cmp
xlat
sub
mov
pushf
not
sbb
add
add
fcmovbe
dec
xchg
mov
push
push
mov
je
outs
or
sbb
(bad)
sti
cmp
jle
ins
cmp
(bad)
repnz
ficom
call
pop
sbb
in
pop
pop
(bad)
js
movs
adc
dec
pop
inc
ds
hlt
ret
mov
daa
adc
mov
xor
test
or
in
(bad)
xor
jge
rcl
push
lock
jecxz
shl
or
dec
not
lods
cmp
shl
aas
or
pop
mov
in
dec
and
cmp
lock
sub
mov
ins
int
mov
add
mov
cld
(bad)
icebp
out
xchg
aam
sub
pop
jb
mov
hlt
dec
shl
lods
js
mov
push
push
retf
cmc
(bad)
data16
sub
push
mov
aam
sbb
cmps
xchg
outs
sbb
or
mov
std
(bad)
in
repnz
in
add
neg
xor
lods
ja
sub
sub
add
xor
sete
into
aaa
enter
fs
jbe
cwde
jge
fstp
gs
and
cmp
test
jecxz
mov
in
cmp
push
gs
adc
mov
xchg
fisttp
dec
call
rol
or
pop
cmp
int
and
jmp
aas
mov
mov
test
aas
movs
cmp
jp
sar
fwait
inc
dec
nop
loop
sub
arpl
push
ja
mov
inc
daa
or
std
jge
cwde
pushf
xor
cmps
adc
sub
jg
in
pop
pop
push
in
cli
xor
jge
lds
push
jmp
imul
repnz
test
les
ja
add
out
and
repnz
js
popa
add
push
mov
push
jmp
sbb
pusha
or
sub
aad
inc
cmps
xchg
rol
jno
jo
(bad)
adc
(bad)
js
push
frstor
loop
inc
xchg
shr
mov
enter
push
adc
test
punpcklwd
or
pusha
cvtpi2ps
cmc
test
add
gs
idiv
sbb
popa
push
inc
mov
mov
pusha
cmps
(bad)
int3
call
push
xor
fld
xor
inc
push
out
sbb
push
inc
fsub
inc
cmps
dec
sub
push
mov
pop
enter
add
and
pop
sbb
add
dec
jo
outs
push
lods
pop
(bad)
(bad)
cmp
mov
in
not
std
inc
mov
jo
or
popa
js
shl
push
fld
arpl
arpl
push
je
push
or
fdiv
ret
sbb
es
push
sub
push
or
imul
pusha
dec
out
psubb
int
push
push
or
test
xchg
sbb
jg
mov
sbb
retf
scas
adc
or
fwait
int
(bad)
cwde
jg
cmp
sbb
mov
loope
stc
pop
cmp
cmps
and
dec
xchg
jb
or
fidiv
jle
sbb
dec
push
popa
xchg
cli
cmc
pusha
movs
adc
shr
mov
xchg
and
jg
pushf
call
out
add
cmps
push
sbb
fs
dec
inc
cmp
sbb
test
xor
ds
outs
pop
pusha
adc
add
mov
inc
ds
jns
add
pusha
xchg
sbb
cmp
jb
fs
sub
cvtpi2ps
cmp
iret
xchg
push
dec
ret
scas
ins
sbb
arpl
test
inc
test
push
jb
push
mov
push
dec
lahf
ret
inc
jno
mov
push
jp
arpl
sub
popa
test
mov
fwait
cmp
xor
ds
pop
inc
lods
nop
jno
xor
scas
pop
pop
dec
pop
(bad)
mov
add
sbb
inc
loop
sub
repz
sti
mov
(bad)
leave
call
or
repz
scas
enter
cmps
mov
dec
xchg
mov
outs
pop
out
fistp
popa
int3
scas
push
xor
in
xor
jl
push
movs
push
out
jo
test
dec
addr16
mov
pop
test
adc
xlat
popa
repnz
cmp
cli
dec
shl
ds
in
pop
pop
(bad)
movs
sbb
xor
jecxz
icebp
out
aaa
repz
mov
sbb
or
int
or
test
adc
call
xchg
mov
or
bound
loopne
jae
shl
stos
ret
mov
lods
sti
sub
les
and
sbb
xchg
push
dec
leave
xor
mov
ret
mov
push
push
in
sub
dec
fwait
call
in
inc
sbb
loop
outs
mov
mov
inc
retf
mov
xchg
bound
shl
push
int
mov
sbb
stos
stc
shl
or
and
movs
mov
mov
mov
push
dec
dec
xchg
leave
xchg
sbb
jns
bound
ret
call
mov
imul
pop
mov
sub
in
pop
mov
push
mov
mov
mov
push
aas
(bad)
or
sub
adc
push
mov
mov
dec
jg
cld
and
cmp
dec
ins
hlt
mov
scas
jbe
mov
dec
xchg
dec
cmp
adc
adc
sar
or
adc
out
sbb
jae
aad
adc
mov
lods
sti
loop
out
loop
scas
das
pop
icebp
mov
punpcklwd
pop
in
ins
cmp
adc
dec
pop
push
jle
add
inc
sub
dec
scas
mov
scas
sbb
xchg
lods
jno
out
push
cmps
lods
adc
in
sbb
jp
pop
cmp
stos
mov
aas
pop
jbe
jno
in
inc
shr
or
aas
icebp
sbb
movs
call
mov
mov
jne
test
into
adc
retf
cmp
pop
jbe
cmc
adc
xor
and
iret
pop
fistp
mov
fidiv
jne
and
jno
les
out
loope
mov
inc
pop
sub
test
sbb
ins
out
mov
test
sbb
mov
shr
gs
daa
idiv
push
pop
jae
loope
xchg
fdivr
mov
out
and
aaa
or
jmp
(bad)
xchg
fmul
sbb
mov
jle
sbb
dec
jb
pop
mov
sub
bound
and
xchg
(bad)
mov
mov
inc
pminsw
push
jecxz
sub
je
xchg
and
retf
adc
stos
sbb
int3
ss
inc
add
or
mov
jmp
push
in
add
add
daa
idiv
mov
retf
mov
or
test
mov
pop
adc
int
sbb
pop
mov
inc
mov
out
pushf
push
es
dec
inc
xor
mov
push
lds
sbb
fist
sbb
icebp
jnp
or
or
je
retf
cli
jecxz
push
and
lods
scas
push
add
mov
mov
leave
addr16
jae
mov
sbb
scas
rcr
xor
cmp
adc
mov
aam
xor
sahf
(bad)
retf
xchg
(bad)
ret
(bad)
mov
fwait
xlat
mov
push
stos
sahf
push
lods
aam
xor
gs
aam
pop
shl
rol
das
iret
mov
shl
mov
push
dec
pop
popa
mov
in
scas
out
pop
outs
sbb
fcom
push
gs
sub
and
mov
inc
fiadd
adc
outs
leave
(bad)
sbb
xor
loop
call
imul
cwde
mov
in
sub
rcl
or
popa
ret
push
xchg
aam
dec
leave
mov
pop
inc
inc
xchg
jp
lahf
cdq
sub
(bad)
out
cld
sti
call
sbb
sub
mov
adc
inc
jb
and
jmp
mul
mov
push
mov
ds
into
add
and
mov
pop
adc
xor
pop
fcomp
outs
dec
mov
sbb
jge
les
sbb
sbb
push
mov
push
neg
out
or
sub
xchg
in
(bad)
mov
jle
mov
sub
adc
aam
pop
ins
adc
ror
dec
inc
xchg
xor
jb
jp
test
stos
xor
add
or
loope
push
inc
xchg
push
add
ror
cwde
and
inc
(bad)
and
cli
es
mov
push
daa
xchg
sbb
ret
les
and
int3
gs
push
inc
dec
sub
mov
mov
cld
jno
mov
test
out
push
hlt
sub
mov
sbb
adc
fdivp
jnp
iret
sub
adc
int3
adc
(bad)
pop
adc
mov
lods
mov
mov
sub
push
sbb
ds
out
xchg
inc
pop
jae
mov
sbb
lahf
(bad)
in
ja
stos
or
shl
out
adc
add
mov
mov
or
mov
outs
jnp
sar
lock
cli
or
mov
mov
xchg
jl
push
js
sub
pop
movs
dec
aad
pop
stos
(bad)
cmp
xor
sub
test
xchg
jmp
pop
push
ins
ret
dec
fwait
aad
sar
jno
push
in
nop
mov
into
pop
mov
in
dec
scas
or
xor
push
fs
mov
nop
and
inc
les
ret
or
jmp
xor
les
push
loop
xor
xor
cmp
mov
loop
enter
cmp
cld
sbb
(bad)
pop
adc
and
in
dec
fcomp
mov
movs
jg
xchg
iret
xor
cmp
mov
gs
daa
cmp
pop
movs
mov
pop
jle
jecxz
dec
mov
jb
in
pusha
sub
jl
cwde
enter
pop
js
sbb
mov
pushf
inc
xlat
mov
and
cmp
ret
pop
mov
push
int3
and
fs
push
in
xor
dec
push
xchg
(bad)
adc
les
adc
fld
dec
test
jecxz
scas
jl
mov
mov
(bad)
mov
mov
pop
jecxz
bound
pop
aam
or
lock
inc
retf
jb
out
sub
in
mov
or
sub
adc
push
cmps
xchg
icebp
xor
(bad)
les
dec
and
addr16
xor
cmp
inc
cmp
push
loopne
pop
(bad)
jg
fsin
push
add
ja
fsubr
push
jg
jg
outs
jl
leave
xchg
or
dec
sahf
movs
add
push
in
arpl
cwde
push
int
fstp
sti
(bad)
mov
cmc
cmp
inc
mov
or
cmps
inc
xor
pop
mov
mov
mov
test
sub
mov
mov
dec
daa
(bad)
push
repnz
clc
jne
fbld
int3
ja
fsubr
push
xor
jle
stos
fistp
jae
fisubr
add
sahf
and
push
pop
and
imul
(bad)
out
lahf
xor
loope
aaa
movs
enter
cmp
inc
mov
push
adc
xor
test
mov
push
in
or
fiadd
(bad)
outs
cmp
out
ins
mov
inc
repnz
cmp
out
sar
fld
out
mov
out
push
push
xor
add
adc
gs
add
cmp
push
push
push
sti
inc
ja
sbb
sub
mov
push
sub
inc
int3
add
bound
pop
jg
mov
push
jns
xchg
pop
stos
or
dec
and
sbb
repnz
jecxz
and
push
inc
jg
xchg
dec
mov
int
mov
test
and
or
sbb
or
sar
add
data16
cmp
lahf
cmp
rcl
and
xor
fimul
ins
add
add
test
ins
xchg
sbb
(bad)
jo
push
and
inc
pop
cmp
mov
xor
xchg
ficomp
dec
xchg
dec
cmp
add
repz
jp
hlt
or
ja
call
xor
in
adc
sbb
xor
mov
cdq
repnz
je
mov
(bad)
or
add
mov
adc
test
aaa
sub
mov
pop
int
leave
mov
add
test
in
cmp
mov
daa
cmp
mov
inc
daa
jmp
in
mov
xchg
add
xchg
jbe
lods
int
sbb
das
sub
imul
push
xlat
and
xor
dec
mov
les
dec
xor
aad
loope
aas
mov
mov
jecxz
out
xchg
sar
fild
sbb
test
fst
fidivr
fcom
sub
neg
sbb
push
mov
xchg
ror
pop
sbb
sti
pop
inc
mov
cwde
xchg
clc
lods
pop
inc
(bad)
retf
cli
mov
shl
(bad)
mov
add
jmp
jmp
movs
data16
popf
jmp
das
or
xchg
into
in
mov
jmp
adc
add
push
int3
cmps
xchg
mov
ret
test
ret
xchg
ret
mov
repnz
adc
and
lods
in
leave
dec
jbe
adc
jmp
pop
mov
outs
sbb
xor
ret
test
mov
and
sub
or
push
dec
div
mov
js
(bad)
push
ins
and
cmp
mov
xor
movs
xor
jne
add
cmp
inc
sbb
cmps
mov
xlat
bndldx
dec
mov
call
mov
or
(bad)
mov
sbb
int
not
mov
add
add
test
mov
sti
lahf
div
ja
dec
add
int3
fcom
mov
jne
sub
inc
xor
xor
rcr
loop
out
push
dec
repz
loope
pop
xor
dec
mul
(bad)
dec
sti
jns
xor
sub
scas
xor
push
test
dec
mov
movs
shl
imul
jg
ret
stc
pop
xchg
sub
inc
xchg
cld
mov
pusha
fmul
test
pop
loopne
nop
loop
icebp
dec
les
pop
leave
dec
pop
jmp
adc
retf
test
leave
test
or
xor
fistp
dec
jmp
outs
stc
icebp
inc
loopne
(bad)
(bad)
jg
dec
lahf
fidivr
jae
jnp
inc
or
lds
cmp
push
jle
push
test
xchg
push
sbb
outs
push
push
stc
push
jmp
test
pop
add
xor
clc
add
mov
xchg
jge
mov
add
mov
xchg
lock
push
xchg
(bad)
push
fld
fwait
addr16
push
mov
ret
xchg
dec
cwde
in
xchg
push
cwde
js
add
mov
fild
fild
push
sub
pusha
lahf
sub
cmp
xchg
and
fs
or
or
mov
pop
outs
mov
loope
jg
mov
add
rcl
shl
js
lahf
mov
fiadd
push
pop
pop
cmps
and
pop
out
mov
cld
mov
mov
test
adc
out
mov
mov
sub
addr16
in
mov
fidivr
cmps
out
mov
push
add
jmp
out
(bad)
jl
and
and
jmp
js
push
sbb
push
ds
mul
push
adc
jnp
cmc
loope
mov
(bad)
sbb
fwait
and
xor
cs
loope
add
jge
sbb
push
and
or
inc
dec
test
mov
mov
mov
in
push
ins
scas
test
ins
xor
jl
stos
in
cmp
xor
inc
sar
out
mov
data16
outs
(bad)
and
int
mov
rcl
pop
sbb
xchg
adc
jae
pop
inc
add
xor
rcl
add
popf
dec
test
or
test
std
inc
(bad)
jno
and
fistp
mov
cmp
push
aaa
or
inc
out
push
mov
or
pop
push
mov
mov
inc
ret
inc
ret
jmp
cli
test
cwde
or
les
je
test
xchg
xor
(bad)
(bad)
xchg
jl
clc
mov
int3
push
cwde
(bad)
jae
stos
ror
adc
jns
adc
jo
push
sahf
jmp
xor
imul
outs
mov
dec
and
(bad)
sti
inc
or
adc
ja
pop
adc
inc
xchg
scas
sbb
ret
(bad)
(bad)
popf
(bad)
clc
retf
push
add
pop
adc
mov
mov
mov
nop
add
gs
or
inc
mov
sti
ffreep
movs
jle
mov
and
retf
hlt
and
lds
loop
and
adc
jmp
out
pop
inc
jne
pop
cdq
daa
ret
cmp
mov
popf
jl
les
or
test
fadd
mov
js
xor
sub
mov
fmul
retf
outs
fcomp
pop
xchg
popa
js
mov
xchg
sbb
sub
cmp
push
adc
mov
hlt
push
icebp
xchg
enter
lahf
mov
pushf
shr
loope
push
xor
repz
int3
xor
mov
xor
sub
test
aad
or
fdivr
outs
cld
mov
pop
mov
sbb
test
(bad)
ins
loop
add
cld
xchg
in
sahf
push
sub
xchg
inc
shr
xor
repnz
popfw
in
cmp
push
out
adc
mov
lods
aad
dec
push
imul
cmp
mov
stc
imul
jno
dec
into
inc
xor
call
adc
movs
jg
fmulp
add
test
inc
mov
sub
mov
imul
or
push
xor
cmp
cmp
xchg
enter
cmps
cmp
dec
(bad)
pop
mov
repnz
cli
sub
pop
xor
xlat
mov
shr
and
(bad)
mov
fs
jbe
ins
mov
add
push
and
retf
push
add
pop
loopne
xor
ins
xor
inc
in
arpl
or
adc
xor
fist
std
stos
out
xchg
jne
sbb
mov
hlt
movs
jno
jne
dec
and
test
fbstp
stos
sub
add
and
xor
enter
mov
cmp
push
ret
movs
int3
xchg
xchg
push
cs
cmps
push
int
jl
push
das
mov
pop
cdq
js
jbe
xchg
outs
pop
dec
(bad)
sbb
es
ret
cmc
mov
jb
scas
addr16
pop
popf
cli
adc
push
inc
in
xchg
movs
ins
cmc
call
loopne
sbb
jno
lahf
shl
xor
cmp
or
test
dec
les
imul
push
or
rol
or
dec
push
fwait
movs
outs
mov
pop
and
and
pop
cmp
xchg
cmps
sub
or
jp
pushf
dec
cmp
dec
retf
sahf
leave
xlat
jno
lea
mov
addr16
sub
retf
mov
iret
xchg
cs
data16
push
and
cs
xor
or
jp
aas
cmp
jecxz
push
ins
pop
or
adc
idiv
or
popa
cmp
cld
movs
call
cmps
xchg
or
push
sbb
mov
add
call
repnz
std
out
jno
(bad)
call
ret
(bad)
mov
scas
pop
(bad)
data16
icebp
xor
daa
(bad)
int3
nop
shl
push
cmp
ror
test
dec
pusha
test
jp
sub
nop
test
or
xchg
push
pop
mov
hlt
or
pusha
std
push
(bad)
lods
mov
cmp
sub
out
stc
cmp
ret
(bad)
aaa
bound
cmp
stos
sahf
shl
fnstcw
add
enter
sub
xlat
sti
and
pop
call
pop
cmp
mov
les
pop
mov
cmp
std
mov
and
data16
pop
cmp
int
mov
mov
sbb
sub
idiv
and
jle
test
std
mov
cmp
mov
ds
mov
data16
aas
sub
inc
mov
mov
enter
rcl
in
jg
sahf
cmp
(bad)
leave
stos
mov
or
(bad)
into
add
and
sbb
ret
or
jmp
in
add
data16
mov
inc
test
jge
nop
xchg
dec
test
lea
inc
mov
cmc
inc
cmp
jbe
aam
stos
mov
imul
inc
nop
jl
cmc
mov
add
cmp
and
scas
xor
sbb
mov
neg
mov
inc
sub
nop
mul
scas
pop
cmps
(bad)
fstp
xchg
sbb
mov
lea
xchg
cmps
in
adc
jno
stos
jp
fsub
adc
push
fild
jmp
mov
lods
pop
and
stc
pop
outs
repz
in
adc
sbb
mov
sbb
in
fidivr
cdq
es
xor
adc
jb
lock
pop
lods
addr16
retf
and
push
inc
xor
mov
mov
mov
cmp
imul
adc
jl
cmp
in
and
ret
mov
xchg
pop
mov
sbb
mov
lock
mov
xor
add
aas
jle
xor
mov
pop
es
add
cdq
imul
jl
idiv
ret
cmp
xchg
lds
and
mov
push
lods
and
loop
push
jae
cmp
aas
(bad)
and
inc
push
(bad)
stc
add
pop
inc
push
cmp
rcl
xchg
call
xor
movs
shr
jo
mov
inc
sbb
mov
in
inc
iret
xchg
lds
xor
out
es
aam
sub
aaa
ds
pmulhw
fistp
in
fist
inc
ds
jbe
shl
(bad)
cwde
clc
sahf
add
push
sti
outs
icebp
cmp
pop
jb
adc
movs
xor
stos
push
retf
xchg
pushf
leave
hlt
inc
pop
cmp
adc
mov
inc
cdq
stos
out
jbe
jns
xchg
movs
jge
in
aam
into
pop
jmp
in
int3
stc
imul
mov
mov
mov
sbb
sbb
ret
pop
bound
jmp
shr
jmp
mov
push
xchg
pop
push
dec
push
sbb
inc
popf
inc
mov
sahf
sub
mov
mov
mov
lods
jmp
jge
cmp
not
jne
mov
cmp
popa
add
stos
fistp
lds
sti
fst
lods
popf
addr16
arpl
test
or
jmp
in
and
mov
into
ins
out
cdq
enter
mov
test
inc
xchg
fwait
ror
inc
iret
aam
imul
clc
xchg
mov
push
ds
out
dec
mov
xor
addr16
iret
and
xor
pop
push
rcr
stos
leave
daa
push
inc
or
push
stos
dec
es
mov
lahf
and
imul
add
fist
mov
cs
and
loopne
mov
pop
add
cmp
imul
push
dec
jge
test
sub
dec
sbb
inc
movs
xlat
ds
dec
or
add
jbe
cwde
dec
sub
jl
inc
test
mov
jmp
ds
imul
push
push
mov
inc
ds
mov
fwait
mov
push
add
addr16
and
aaa
jns
(bad)
mov
icebp
push
jo
ret
fwait
dec
jnp
mov
jmp
or
mov
std
mov
push
sub
ss
adc
cmp
mov
mov
repnz
call
(bad)
xor
ds
das
xchg
test
xchg
jbe
lea
add
pushf
hlt
loopne
jge
int
sub
popa
or
shr
sub
shr
fild
rcr
mov
and
sti
aad
sbb
pop
(bad)
mov
pop
mov
adc
jo
stos
xor
jp
std
ret
bnd
test
clc
dec
sub
pop
push
retf
icebp
cwde
fild
cmps
jl
out
jmp
jmp
jmp
ret
ja
sbb
sbb
inc
push
and
adc
sahf
rcl
fstp
mov
add
repnz
sbb
mov
adc
(bad)
(bad)
cmovae
movs
pop
jge
jl
xchg
imul
(bad)
gs
sbb
dec
cmp
or
adc
or
sub
fisub
cmp
or
stc
xchg
dec
aaa
and
jns
leave
jo
jae
xchg
sbb
mov
js
cmp
stos
ret
jne
mov
jg
rol
out
sub
ficomp
in
dec
mov
cmc
out
pop
dec
shl
outs
adc
push
jns
mov
cli
pop
push
movs
repz
mov
fst
cmp
(bad)
in
mov
cmc
jno
(bad)
ins
dec
push
add
(bad)
jle
push
into
repnz
movs
add
adc
jge
sub
ins
jno
addr16
(bad)
pop
sub
xlat
sbb
ret
retf
push
xchg
fdivr
jecxz
xchg
mov
xchg
(bad)
pusha
int
inc
popa
repnz
inc
sti
clc
fwait
push
leave
sub
movs
sub
pusha
repz
(bad)
loop
cmps
cmp
adc
dec
cld
lods
test
retf
xor
add
mov
mov
retf
nop
sbb
push
sbb
sub
jns
mov
(bad)
adc
cmps
push
sub
stos
xchg
ins
not
int3
in
mov
fistp
fidivr
stos
sahf
mov
xlat
shl
or
adc
mov
call
stc
jo
and
mov
adc
inc
aam
mov
xchg
mov
les
cmp
add
in
outs
or
adc
xor
(bad)
ret
sub
rcl
adc
mov
imul
cmp
in
out
pop
xchg
push
imul
lds
loopne
and
cmp
rcl
mov
repz
in
sbb
fstp
addr16
outs
or
js
ret
mov
push
rol
and
jo
fmul
inc
out
(bad)
cmc
(bad)
sbb
pop
retf
inc
cli
push
adc
sbb
pop
es
push
push
jae
jge
(bad)
pop
mov
arpl
popa
loop
test
neg
dec
inc
pop
lods
dec
jl
inc
into
cmp
sahf
in
inc
xchg
cdq
stos
xor
mov
pop
mov
xchg
in
arpl
pop
rcr
pop
lods
pop
mov
or
idiv
mov
jmp
movs
add
stc
jmp
pop
pop
cwde
mov
test
or
(bad)
es
scas
push
sub
jmp
xchg
cmp
xchg
cmp
or
push
dec
push
outs
and
add
xor
sbb
pop
loop
arpl
in
or
inc
inc
lea
xchg
push
mov
out
sbb
and
cmp
mov
mov
adc
div
sbb
push
call
dec
inc
fstp
lds
mov
inc
xor
pop
cmps
div
and
xchg
(bad)
sbb
sub
dec
pop
in
imul
scas
sub
xor
enter
dec
push
imul
int
cwde
inc
sbb
and
(bad)
jb
repnz
mov
ja
add
inc
push
je
cmp
dec
enter
pushf
fimul
(bad)
sbb
arpl
dec
push
in
jmp
jb
out
(bad)
mov
(bad)
sahf
jmp
fstp
push
out
mov
cmp
mov
dec
push
push
or
loope
and
push
cmps
out
pop
push
setne
sahf
addr16
repz
dec
ss
sar
pop
inc
sti
cmp
test
sub
arpl
fisubr
cmp
fisubr
inc
fwait
inc
sbb
imul
jmp
pop
imul
ret
retf
sbb
dec
adc
(bad)
loop
ret
sbb
jne
mov
sub
cmc
xor
jle
mov
ds
xchg
push
push
lahf
lahf
pop
jp
es
iret
mov
(bad)
popf
(bad)
pop
rcr
(bad)
imul
test
dec
mov
add
(bad)
push
(bad)
push
cmp
jle
cmp
sub
push
xor
sub
stc
out
pusha
xchg
daa
outs
or
pop
push
xchg
mov
ds
pop
and
adc
popa
mov
rcr
idiv
mov
ins
inc
test
jae
shr
fdivr
or
cmp
in
(bad)
neg
dec
scas
out
nop
xchg
xchg
adc
sar
jbe
dec
cmps
jae
imul
fstp
jae
push
xor
ret
push
pop
add
stc
dec
retf
or
movs
dec
jmp
dec
(bad)
repnz
movs
and
lock
jo
fiadd
pop
vpmacssww
mov
inc
xor
(bad)
jl
xchg
pop
icebp
dec
adc
pop
sub
in
cmp
or
ja
inc
inc
repnz
in
xchg
xchg
int3
xchg
dec
xchg
lods
xchg
scas
mov
jmp
sbb
mov
stos
inc
adc
push
lds
loopne
in
enter
enter
cdq
not
xchg
jnp
sbb
dec
loop
sub
cmp
out
pop
adc
call
cli
inc
das
push
gs
pop
mov
fdivr
scas
or
mov
mov
add
int
jne
dec
dec
pop
in
ds
inc
xchg
jno
not
dec
mov
dec
test
movs
retf
jecxz
test
and
(bad)
adc
lock
add
cmp
popa
dec
inc
enter
mov
mov
cli
stc
xor
fisubr
stos
outs
sbb
dec
add
sar
add
adc
rol
or
repz
pop
pop
(bad)
xor
mov
sub
and
cli
test
call
xchg
cmps
daa
inc
inc
add
fbld
pusha
stos
retf
popa
pop
cmp
mov
mov
mov
lock
iret
sub
xor
in
mov
(bad)
pop
and
scas
imul
jb
push
dec
jne
aam
sar
sbb
inc
cmp
xor
mov
xor
jg
sbb
sbb
hlt
mov
mov
jae
dec
and
add
scas
(bad)
frstor
ficom
(bad)
rcl
xlat
pop
pop
ja
dec
cmc
xchg
jno
cmp
xor
ins
add
adc
mov
and
into
fimul
and
pop
jmp
fstp
imul
adc
sbb
inc
(bad)
xchg
(bad)
popf
ret
int
or
(bad)
mov
jecxz
dec
mov
inc
addr16
dec
ins
sbb
arpl
test
int
test
sahf
push
pushf
dec
ret
cmp
(bad)
mov
xchg
mov
fsub
mov
aad
sbb
cmp
hlt
xor
adc
cld
fnstenv
adc
shl
sbb
sub
xchg
je
(bad)
dec
cmp
icebp
mov
ss
test
xlat
push
jg
mov
mov
pop
jmp
cs
pop
ins
dec
xchg
aad
xchg
inc
mov
movs
add
xor
cs
sbb
pop
iret
nop
dec
(bad)
cmps
bnd
(bad)
fmul
ud0
repz
inc
and
mov
(bad)
out
mov
dec
inc
jb
jnp
idiv
xor
iret
lahf
mov
cmc
or
mov
cmp
rol
sbb
ret
in
mov
arpl
or
nop
and
sub
and
fs
inc
repz
pop
sbb
mov
call
mov
pop
ins
cs
shl
jle
(bad)
adc
jp
cwde
push
lods
xchg
cmps
ret
xlat
pop
addr16
or
std
es
mov
ds
add
push
cmp
lods
popf
push
jae
not
(bad)
bnd
mov
jg
fbld
aas
repnz
dec
inc
aas
sar
push
sahf
push
xlat
pop
fidivr
xor
outs
mov
call
push
fnstcw
xor
xor
test
lock
rol
out
int3
pop
xchg
repz
jg
jo
test
xor
fsub
adc
fdivr
push
int
inc
inc
sub
loop
mov
into
mov
hlt
rol
inc
push
add
adc
mov
push
shr
add
sbb
int3
popf
cld
and
xchg
addr16
(bad)
es
(bad)
cwde
popa
sbb
(bad)
aam
in
sbb
scas
cmp
adc
jae
aaa
and
test
leave
add
push
sub
adc
push
leave
nop
in
movs
arpl
loope
mov
bound
fcom
mov
cmp
dec
call
jbe
loope
push
push
out
push
outs
mov
movs
(bad)
xor
sbb
rcl
adc
popf
lock
sub
popa
xchg
into
rol
cmc
jb
add
pop
push
jg
fiadd
pop
aaa
daa
and
add
adc
out
mov
jecxz
enter
shr
pop
cmp
or
adc
lds
in
sahf
out
jmp
in
retf
retf
mov
test
aaa
test
dec
(bad)
jp
jno
push
mov
hlt
bound
sub
jae
xlat
cld
out
jmp
movs
dec
xor
movs
mov
pop
adc
aaa
or
retf
push
mov
mov
xor
pushf
mov
int3
pop
out
xor
push
stos
lds
test
shr
or
clc
or
sub
cli
pop
stc
sub
xchg
ret
movs
(bad)
or
push
fsub
xor
xchg
cmp
push
test
push
shl
xor
push
imul
pop
adc
xchg
sbb
or
cli
loop
cmp
sub
outs
das
cmp
sbb
mov
stos
mov
test
jno
test
pop
xchg
dec
test
mov
(bad)
pushf
add
or
lock
in
lahf
fild
sub
outs
sbb
ror
push
ror
test
loopne
fcmove
fisubr
cmp
mov
push
popa
xchg
and
push
repz
idiv
aas
xor
in
dec
js
out
aas
adc
je
inc
test
lahf
fidivr
ret
imul
rol
mov
jg
fwait
lds
imul
xchg
cmp
pusha
push
xor
or
mov
cmps
ret
adc
loopne
mov
cmp
sub
xor
lods
inc
jo
into
inc
pop
xor
into
pop
and
jl
or
xchg
shl
hlt
sbb
mov
mov
stos
xchg
test
imul
xchg
cwde
nop
test
cmp
add
inc
push
jae
sbb
mov
pop
dec
sti
sar
mov
mov
dec
rcl
imul
out
xchg
jg
mov
pushf
mov
cmovle
hlt
dec
xlat
aad
das
adc
ins
mov
mov
pop
sub
test
retf
mov
inc
sti
cmp
and
push
stc
bound
or
cmp
sbb
mov
dec
retf
lock
adc
ds
pop
sub
cmp
cmp
xor
jmp
std
jmp
fild
inc
sbb
xchg
dec
(bad)
std
add
out
stos
(bad)
dec
dec
add
add
push
outs
fwait
sub
(bad)
cmc
and
inc
(bad)
mov
out
push
scas
cwde
xor
ret
ja
jne
mov
(bad)
(bad)
in
gs
ins
pop
xchg
sub
shl
mov
inc
out
mov
sub
cmps
mov
mov
dec
pop
fstp
push
iret
cdq
daa
and
and
movs
imul
sbb
jge
ret
(bad)
js
in
aas
jo
cmc
(bad)
lahf
mov
test
jnp
mov
lahf
idiv
ins
fwait
push
add
imul
push
lods
mov
cmc
mov
call
cpuid
sub
fwait
fwait
xor
mov
inc
mov
cmp
cmp
fcomp
int3
int3
mov
iret
mov
cmp
fwait
in
popf
pop
in
enter
call
cdq
lock
test
mov
mov
jecxz
xchg
out
arpl
mov
cs
ds
lds
leave
out
push
leave
pop
enter
rcl
loopne
dec
jae
sbb
icebp
in
shl
sub
ds
sub
xchg
aad
jg
push
xlat
(bad)
out
add
mov
pop
jno
ret
cmps
xlat
or
lds
push
or
mov
push
push
xor
sub
test
mov
pop
ja
xlat
sub
nop
loop
mov
adc
out
inc
adc
data16
nop
dec
pop
fist
fistp
pop
imul
xchg
cmps
mov
out
and
(bad)
mov
push
repnz
enter
(bad)
jmp
push
jns
sub
data16
jl
retf
adc
pop
mov
stos
stc
ret
and
nop
mov
pop
and
push
int3
je
xor
pop
dec
sub
adc
call
add
stc
jp
arpl
test
pop
das
enter
jmp
out
sub
adc
or
mul
lea
rcr
dec
cmp
mov
add
pop
test
xor
not
rcl
aas
and
out
push
push
lahf
jmp
jle
test
jo
imul
adc
sbb
inc
mov
jl
sub
cmp
ret
pop
int3
outs
xchg
xchg
cs
push
loope
cmp
sbb
sub
dec
mov
hlt
pop
ins
push
push
ja
xor
aaa
data16
pop
loopne
adc
or
in
jecxz
test
mov
in
push
mov
xor
inc
mov
sub
fistp
jno
scas
jmp
sub
pop
sub
xlat
mov
pop
cmp
or
shl
ins
push
scas
in
sub
repz
fisttp
mov
adc
std
scas
mov
jg
mov
loop
cmp
push
cld
addr16
mov
pushf
adc
mov
and
repz
cmp
int3
(bad)
loope
test
(bad)
cmp
hlt
lds
cwde
mov
arpl
clc
cmp
ret
sub
push
xchg
push
push
mov
dec
fwait
jbe
jle
mov
outs
mov
bnd
jp
arpl
cmc
dec
adc
cdq
in
or
cli
mov
or
xchg
push
sub
mov
mov
push
fsubr
pop
adc
or
or
dec
fidiv
inc
and
xor
movs
cmp
adc
mov
add
sbb
or
add
in
in
test
push
or
and
shl
push
add
pop
mov
cmp
jne
pop
lods
outs
inc
sahf
fxch
mov
mov
xchg
push
and
jmp
and
adc
pusha
clc
jmp
xchg
ins
add
adc
fmul
mov
inc
pop
push
sub
adc
pop
cmp
addr16
jge
mov
cmp
add
mov
outs
and
pop
sub
mov
lahf
fs
leave
xor
inc
push
shr
mov
xchg
pusha
shr
mov
dec
xchg
lahf
jno
test
mov
mov
aam
dec
pop
add
push
(bad)
cmp
cmps
push
mov
rcr
sbb
cs
lods
out
push
pop
xor
dec
mov
cmc
jnp
mov
cmp
jne
and
fisubr
mov
mov
cmp
inc
ror
jp
fistp
ss
outs
inc
stc
mov
push
jle
addr16
add
cmps
aam
outs
dec
push
pushf
lods
imul
pop
inc
clc
mov
repz
inc
ret
ds
push
mov
retf
mov
push
xchg
cmps
in
push
scas
sub
test
retf
leave
div
mov
ss
jns
dec
push
jo
outs
es
sub
popa
add
mov
popf
stos
sub
adc
jo
(bad)
mov
shr
mov
cld
sbb
adc
xor
or
(bad)
jmp
repz
xor
push
fcom
popf
sbb
shl
sub
or
cli
popa
or
stos
and
lahf
mov
mov
je
xchg
jecxz
rcr
inc
adc
fcom
cmp
add
dec
mov
xor
xchg
cs
adc
aaa
ins
push
xchg
or
mov
mov
sbb
fist
das
clc
mov
outs
ret
push
push
popf
mov
shr
shl
stc
add
jg
scas
shl
cmps
push
mov
hlt
jne
sahf
xor
aas
call
xchg
adc
out
paddw
cmp
mov
shl
xor
push
shl
xchg
pop
in
ja
mov
ss
push
nop
xor
loope
or
mov
and
mov
jae
dec
repz
inc
jno
lods
mov
mov
mov
fimul
popa
push
mov
xchg
adc
int
pop
push
nop
or
hlt
xchg
mov
in
imul
lds
(bad)
dec
test
xor
(bad)
cwde
cmp
mov
cmps
push
aam
gs
xlat
jb
data16
mov
call
cmp
push
sub
mov
adc
jg
imul
jp
xor
xor
adc
fild
ror
mov
jbe
ins
ret
dec
cwde
push
or
or
jns
pop
sbb
push
cmc
cld
jne
and
jns
jne
lods
dec
test
neg
fs
into
add
or
fcmovbe
pop
lock
or
ret
test
gs
mov
jp
outs
mov
mov
or
shl
das
cs
fdiv
push
push
push
rcl
leave
jmp
mov
sbb
dec
push
ja
btc
inc
dec
call
leave
enter
xlat
pop
scas
jl
out
les
shl
xchg
xor
out
dec
movs
fld
add
jp
xor
stc
je
mov
xchg
add
jl
ret
sub
xchg
imul
popf
pop
pop
shl
mov
and
sar
push
xchg
call
adc
cmp
and
mov
sub
push
in
ss
dec
dec
sub
add
pop
js
pusha
push
cmp
and
and
int
and
fcmovnbe
and
jne
scas
call
dec
dec
cli
push
mov
ins
aaa
popa
or
sbb
jecxz
mov
sbb
repnz
mov
addr16
aas
js
xor
cmp
test
pop
pop
pop
fdiv
loop
inc
retf
sti
cmps
std
out
sub
retf
addr16
call
jmp
test
popa
pop
lock
lods
rcr
push
push
add
ret
in
jo
(bad)
mov
jp
leave
pop
aas
push
cmps
sub
and
cmp
jb
xor
xor
inc
repz
pop
adc
in
ret
iret
sahf
and
int3
or
sbb
adc
(bad)
mov
stc
(bad)
pop
cdq
outs
pop
jnp
mov
cli
push
aas
daa
ins
and
int3
lods
dec
rcr
movs
add
xchg
imul
sub
mov
sub
cmc
add
ins
push
data16
jo
mov
xor
mov
retf
cdq
xor
dec
adc
jg
mov
(bad)
ins
retf
call
inc
(bad)
mov
dec
test
aaa
test
sar
out
not
dec
retf
stc
and
daa
rcr
(bad)
bound
mov
stc
in
es
jb
stos
mov
test
sar
adc
fidiv
add
xchg
daa
and
leave
or
inc
add
pop
or
mov
dec
nop
repz
adc
dec
ja
(bad)
(bad)
ffree
pushf
xor
leave
pop
iret
inc
jb
adc
adc
(bad)
mov
or
shl
sub
dec
std
sub
lock
fwait
xchg
mov
dec
mov
or
jbe
enter
mov
sbb
imul
fucomi
ins
pop
cmp
mov
sub
push
movs
cmp
arpl
sbb
dec
push
cmp
sbb
sub
or
pop
pop
inc
xchg
or
dec
push
or
les
sbb
(bad)
pop
jmp
lea
mov
inc
jp
lds
pushf
add
call
cvtps2pd
cs
mov
mov
jecxz
hlt
div
mov
jl
pop
xchg
mov
(bad)
or
cmp
xor
pop
xor
cmp
clc
cmp
(bad)
xor
daa
sbb
aaa
mov
dec
fs
(bad)
dec
mov
test
jmp
div
nop
das
outs
jecxz
into
adc
add
pop
into
push
int
test
and
jecxz
jne
cs
(bad)
push
sub
repnz
mov
dec
ret
sbb
div
inc
jp
in
sbb
sub
sub
(bad)
push
gs
(bad)
mov
and
mov
jl
adc
idiv
data16
push
mov
scas
add
cmp
and
std
inc
arpl
retf
icebp
stos
(bad)
in
inc
das
aas
jmp
mov
retf
(bad)
or
cmp
sar
mov
outs
test
lock
shl
fbld
and
dec
mov
aas
test
sbb
xor
cmps
call
jns
jecxz
jns
loopne
aaa
sets
jl
pop
pop
mov
mov
test
pusha
sub
inc
scas
aad
push
push
push
repnz
xchg
sub
les
call
(bad)
icebp
push
jl
rcl
loopne
mov
enter
rcr
dec
cmp
fbld
fxch
cmps
das
ss
dec
mov
mov
mov
pop
paddusb
sbb
jo
sub
push
fsub
in
pop
retf
jge
xchg
dec
sub
(bad)
cdq
and
mov
les
loope
push
data16
int
cwde
aaa
pushf
or
dec
sub
pop
mov
les
(bad)
addr16
sub
dec
jne
fnop
sbb
mov
xchg
mov
push
stos
les
sbb
mov
jnp
movs
cmc
pop
packuswb
mov
or
aad
or
sub
mov
es
inc
aam
xchg
test
enter
scas
dec
mov
ins
into
arpl
iret
adc
cmp
ret
jne
aam
inc
inc
stos
cmp
pop
ror
jno
mov
cmp
xlat
lods
ja
leave
sbb
stos
xor
pushf
(bad)
mov
push
test
xlat
adc
lea
scas
in
cli
pop
sbb
adc
sbb
mov
adc
fprem1
jp
addr16
test
sub
gs
call
jmp
jmp
test
aad
xchg
jno
ss
mov
xor
div
stc
mov
cld
and
mov
dec
mov
jno
sub
xor
adc
leave
mov
adc
xchg
and
jg
mov
(bad)
out
nop
or
ins
es
fwait
dec
xlat
dec
mov
pop
sub
je
sub
cdq
fwait
xor
cmp
adc
or
(bad)
jl
adc
mov
add
adc
push
mov
cmp
mov
pusha
jns
push
push
cmps
nop
paddsb
inc
cmps
xchg
dec
cmps
shr
enter
imul
dec
cli
js
ret
neg
pop
test
adc
popa
mov
and
shl
int3
sub
fdivp
xchg
sbb
cmp
fadd
arpl
and
(bad)
or
arpl
mov
gs
in
xor
sar
(bad)
fs
test
call
je
dec
or
xor
clc
mov
fcom
cdq
movs
cmp
add
sti
fisubr
xchg
xor
xlat
and
int
mov
mov
pop
dec
lock
(bad)
mov
(bad)
cmps
push
adc
sti
jmp
rol
jecxz
push
je
adc
jbe
xor
inc
mov
mov
and
shr
repz
inc
leave
xchg
test
outs
outs
add
cs
push
stos
sbb
mov
addr16
nop
adc
jns
fld
gs
(bad)
xor
jl
jo
adc
fisubr
in
and
sbb
mov
call
or
cmps
add
push
and
cmp
xor
lds
retf
bswap
movs
scas
xor
and
in
xlat
ds
inc
pushf
adc
stos
fwait
imul
and
adc
inc
adc
ja
sub
add
pushf
mov
jmp
mov
call
pop
inc
movs
mov
dec
hlt
xor
dec
lods
nop
add
sar
inc
cs
call
ret
aaa
aam
jne
dec
(bad)
cmp
aas
out
out
imul
clc
dec
xchg
mov
icebp
lds
push
sbb
enter
jae
xor
ja
add
pop
lahf
cld
push
mov
xchg
lds
mov
test
adc
shr
add
dec
sti
sbb
aas
es
sbb
adc
mov
push
aad
repnz
xchg
in
cmc
xlat
xchg
cmp
cmp
dec
aas
mov
fsubr
adc
dec
mov
js
mov
pop
mov
std
iret
jnp
push
test
mov
xor
cmc
push
mov
fsubr
jl
add
mov
adc
shr
rol
mul
test
xor
ror
mov
push
lahf
aad
stos
push
std
shr
sub
mov
(bad)
mov
not
add
jl
mov
inc
stos
ror
rol
arpl
mov
ror
mov
jmp
fdecstp
ins
stc
rol
cld
inc
in
mov
adc
add
mov
loope
das
push
push
scas
dec
std
xchg
or
(bad)
rcl
scas
and
sbb
cdq
push
mov
popf
xchg
ret
cli
pop
adc
aas
leave
mov
cmp
mov
cmps
test
outs
inc
sbb
ja
pop
and
jbe
cmps
pop
push
(bad)
lock
test
sbb
mov
or
adc
retfw
call
mov
xchg
xor
mov
mov
retf
popf
ja
or
mov
dec
(bad)
fcom
je
push
xor
sub
ret
cmp
xchg
rcl
dec
(bad)
fistp
push
(bad)
mov
(bad)
jo
ficomp
cmp
xchg
retw
lds
push
dec
pop
dec
mov
adc
dec
fisubr
inc
fistp
push
inc
(bad)
sub
scas
inc
shr
cmp
sar
pop
mov
push
shr
and
les
lahf
inc
pop
add
xor
stos
mov
enter
push
sbb
inc
mov
adc
xor
xchg
mov
test
je
pop
sub
or
sub
mov
xchg
lock
inc
cmp
fsubr
xchg
popa
sbb
push
shl
or
pop
fistp
outs
iret
sub
pop
fnstcw
xchg
or
add
pop
test
jge
xchg
inc
adc
adc
loop
mov
fdiv
ins
stos
stos
xchg
sbb
neg
packssdw
movs
or
push
into
jo
aad
stos
sub
pop
cmp
mov
pusha
pop
mov
mov
add
pop
jne
movs
hlt
inc
cs
xlat
mov
inc
shr
in
lods
in
jb
mov
dec
fadd
adc
scas
mov
das
cli
lock
mov
inc
mov
cmps
mov
cmp
imul
repnz
cld
push
pop
sbb
push
inc
inc
lea
icebp
(bad)
mov
jne
scas
push
xchg
ins
dec
nop
add
cmp
and
daa
mov
xchg
push
in
mov
push
mov
push
mov
mov
fucomp
jbe
pop
(bad)
dec
cmp
cmps
or
loopne
fistp
movs
dec
and
aad
push
outs
or
cmp
fistp
fs
arpl
push
xchg
pop
aas
inc
sub
pop
aam
mov
mov
pop
mov
imul
lea
sti
and
push
xchg
mov
mov
test
dec
sbb
or
push
into
inc
jno
mov
cmps
popf
scas
fwait
lods
retf
fisub
into
fadd
iret
lods
xchg
mov
dec
xor
push
daa
(bad)
mov
fcomp
loopne
aaa
xchg
push
mov
stc
cdq
dec
mov
inc
mov
leave
int
pop
stc
lods
xchg
xchg
dec
repz
push
int3
enter
out
add
repnz
nop
(bad)
pop
(bad)
sub
dec
int
scas
sub
sar
in
jge
xchg
mov
inc
scas
mov
sbb
cld
push
sub
fisubr
in
pop
and
fiadd
sahf
sti
ins
cmp
jl
mov
add
dec
ds
int3
cmc
dec
out
loopne
sub
shr
jno
movs
(bad)
push
push
ret
mov
call
lea
pop
ins
fcmove
and
mov
mov
add
hlt
mov
sahf
xchg
fisttp
les
ror
gs
test
add
mov
sbb
sbb
mov
dec
mov
add
iret
call
cli
test
mov
pop
lods
or
out
movs
hlt
in
stos
jb
cmp
std
test
xchg
and
pushf
stc
jno
call
addr16
retf
and
aaa
inc
mov
stos
jmp
add
push
and
mov
mov
int3
xor
xchg
les
and
test
(bad)
dec
mov
sub
outs
ror
or
adc
(bad)
fidiv
add
mov
dec
inc
les
pop
adc
push
sub
xor
mov
(bad)
fcomp
sub
adc
jnp
pushf
jle
sub
int3
mov
outs
bound
div
imul
imul
xor
sbb
aas
mov
inc
(bad)
and
jmp
sub
cdq
push
inc
sub
inc
xchg
pop
sbb
dec
hlt
call
call
retf
fidiv
sub
push
mov
mov
push
mov
adc
test
in
leave
into
ss
inc
aam
sbb
mov
repz
mov
cmp
add
int3
xor
sub
movs
(bad)
jl
jmp
arpl
sbb
pop
or
push
or
adc
shl
dec
fwait
and
push
sub
stos
sar
cmp
mov
iret
add
(bad)
sbb
sub
mov
dec
mov
cmp
sub
ret
push
lods
mov
ds
mov
sbb
outs
movs
sbb
mov
xchg
jne
adc
sub
xchg
(bad)
out
push
fdivrp
pop
xlat
in
jge
sbb
cmp
out
repnz
sbb
cmps
das
sbb
xor
(bad)
add
popf
mov
into
pop
outs
inc
imul
mov
ret
sbb
adc
ss
mov
cmp
pop
test
pop
mov
sub
gs
sbb
mov
aad
movs
out
adc
adc
xor
pop
pop
cmc
push
lods
dec
mov
mov
xor
out
fistp
sahf
clc
mov
out
and
jno
lods
mov
aam
rcl
pop
scas
dec
sub
ins
in
add
cdq
jmp
fisttp
(bad)
out
jb
pop
popa
jo
xor
rol
jle
and
xor
add
mov
mov
xor
leave
hlt
hlt
xor
mov
(bad)
shr
push
mov
adc
ins
inc
xor
movs
mov
jl
ja
retf
and
or
push
(bad)
lods
jl
dec
push
repnz
les
stos
loope
sub
les
pop
ret
jle
loopne
inc
bound
cs
cdq
cwde
jge
push
pop
pop
mov
cld
cmp
inc
imul
dec
cs
jb
out
adc
les
and
dec
mov
vpunpcklqdq
stc
repz
push
movs
dec
neg
bound
inc
stos
xchg
push
leave
push
jb
pop
(bad)
jg
add
mov
sbb
sub
fidiv
je
and
jbe
push
fist
or
add
cmps
ficomp
mov
arpl
popf
ret
push
and
and
(bad)
imul
popf
cwde
mov
xor
into
nop
(bad)
mov
popf
sub
fstp
mov
gs
outs
or
outs
add
icebp
sub
mov
pop
dec
les
adc
cmp
mov
lods
mov
cmp
loop
cld
inc
mov
jle
fmul
dec
mov
add
pop
call
or
test
std
dec
mov
add
pusha
sbb
icebp
popa
cmp
rcr
cmp
or
lods
xchg
adc
mov
and
mov
data16
xor
mov
pop
sub
pop
out
jb
add
pop
push
cli
add
aas
fist
or
xor
jb
(bad)
cmp
fxch
scas
sub
jle
hlt
gs
sbb
rcr
repnz
push
not
hlt
das
cmp
mov
and
mov
ret
jno
cmp
push
enter
sbb
out
sar
xchg
or
jne
shl
add
or
mov
aas
or
sub
dec
rol
lahf
cdq
mov
add
das
adc
push
ins
adc
jecxz
inc
call
out
fnsave
(bad)
pop
add
call
pop
inc
lods
push
add
mov
outs
neg
out
push
loopne
mov
lds
pop
movs
call
mov
jg
bound
xchg
push
iret
xor
jb
add
jmp
icebp
pop
dec
and
sti
add
or
scas
jmp
clc
(bad)
cmps
je
jle
pushf
mov
test
xchg
xor
in
xchg
mov
push
and
pop
lock
(bad)
push
ins
mov
dec
cmp
aam
mov
jp
sbb
xchg
push
jle
ja
sub
sub
es
sahf
mov
cld
and
jge
xor
bnd
and
mov
imul
xchg
jne
and
sub
dec
test
dec
dec
lahf
mulps
imul
fs
hlt
mov
stc
bound
and
jnp
rol
shr
and
add
and
gs
ins
loopne
jg
push
push
fs
push
cdq
sbb
mov
(bad)
out
sbb
cmp
ret
lahf
aas
lock
add
mov
popaw
aad
xchg
mov
xchg
push
push
iret
mov
fwait
call
test
push
cmp
in
push
retf
cmps
pop
dec
jmp
int
ds
mov
or
adc
shl
jp
pop
add
adc
adc
or
jl
mov
leave
loop
push
sbb
leave
das
push
or
mov
out
sub
pop
mov
(bad)
fs
sbb
jnp
pop
call
sbb
adc
sbb
push
pop
dec
jo
sub
add
add
dec
mov
jo
das
pop
fwait
aad
push
mov
adc
add
cli
mov
aaa
jb
into
lods
adc
cmp
push
inc
lock
and
fisubr
dec
popa
and
push
and
or
or
hlt
add
ret
cmps
add
mov
retf
inc
or
test
pushf
popa
xor
iret
mov
stc
ja
leave
(bad)
movs
jecxz
mov
in
cld
cmps
xchg
dec
pop
lock
ins
xor
fdivr
imul
fild
or
cmp
aas
bound
frstor
shl
cmp
xlat
mov
pop
jnp
fld
jmp
mov
dec
pusha
and
pushf
mov
adc
inc
cmps
xchg
test
scas
ins
leave
lods
cmp
rcl
repz
sbb
fld
push
int3
xchg
jp
jo
(bad)
out
int
cmc
mov
mul
cmp
push
inc
jle
iret
nop
mov
call
jbe
jo
push
xchg
cmps
aad
sub
dec
and
or
cmps
and
xchg
lock
adc
ror
push
mov
inc
stc
jecxz
das
pop
movs
xchg
iret
mov
cs
int3
cmp
sub
cli
sub
xor
call
jo
imul
div
inc
(bad)
mov
dec
gs
add
ins
dec
cmp
daa
add
call
hlt
inc
or
idiv
movs
jmp
adc
aaa
nop
inc
dec
rol
push
add
jp
pop
jge
push
scas
addr16
test
aad
bound
push
ror
mov
fbstp
cmps
addr16
jne
jo
int
add
inc
inc
dec
ret
stos
cmc
fxch
popf
test
ret
cmc
fsub
push
movs
jns
sbb
jbe
cs
push
fnstenv
popa
data16
adc
and
dec
adc
mov
clc
pop
or
or
mov
(bad)
out
dec
sbb
lea
fwait
popa
pop
ja
push
sub
movs
(bad)
cmp
jmp
pop
mov
ret
jae
dec
cmc
push
cwde
dec
jecxz
inc
pushf
mov
pop
sub
mov
or
mov
lea
test
sbb
inc
cwde
shl
call
and
fdiv
aad
xlat
mov
retf
cmp
mov
dec
adc
push
add
pop
add
(bad)
fisubr
hlt
inc
pop
movs
stc
sti
jg
and
mov
xchg
jbe
ret
into
loope
push
dec
ja
(bad)
sbb
sub
(bad)
add
(bad)
push
jnp
test
or
xchg
(bad)
xor
sbb
sub
dec
cmp
add
sbb
cmp
loop
and
add
cmp
out
mov
adc
in
retf
push
lods
movs
mov
xor
mov
shr
add
jns
pop
bsf
stos
scas
or
jg
xchg
xchg
xchg
push
dec
idiv
lods
es
dec
inc
aad
test
cmps
pop
out
nop
cmp
loop
aaa
ja
ucomiss
sub
imul
rcl
lods
sbb
or
stc
push
sahf
pmulhuw
or
(bad)
dec
add
jmp
pop
out
mov
xchg
les
cmp
retf
enter
jle
or
psubusb
aam
repz
jmp
pop
adc
add
dec
clc
mov
ror
ret
data16
mov
loop
lock
sub
enter
ins
xor
jge
sub
cmc
add
shl
fcmovnu
ror
mov
(bad)
sti
in
jbe
imul
int
fwait
xchg
sub
mov
sbb
mov
imul
xor
scas
cmp
mov
out
mov
sahf
out
sbb
dec
retf
or
dec
dec
jno
inc
jmp
bound
xchg
and
push
fild
or
loope
fwait
cmp
mov
push
jge
aam
sbb
xchg
mov
jo
add
adc
inc
sub
push
inc
push
pushw
mov
and
call
movs
inc
jl
call
push
and
cmps
cmp
out
rol
xchg
int
mov
icebp
add
jbe
jnp
loope
or
or
xor
mov
sahf
xor
sbb
push
sti
sbb
in
ins
loopne
fs
inc
popf
cmp
leave
push
dec
inc
inc
dec
imul
fmul
jecxz
cmp
add
(bad)
fsub
pop
add
cmp
mov
aam
inc
inc
mov
iret
arpl
lock
stos
mov
jecxz
push
stos
jge
and
sar
jb
std
ret
loope
cmp
push
xor
jnp
mov
cmp
push
jns
stos
push
pusha
imul
adc
add
test
pusha
shl
leave
call
cld
movs
dec
xor
nop
mov
mov
fisub
in
jb
push
hlt
sbb
arpl
ret
xchg
enter
dec
mov
inc
pop
ss
or
dec
mov
pop
push
outs
push
and
repz
inc
mov
test
xor
(bad)
adc
ret
imul
loope
push
push
inc
mov
cs
inc
icebp
mov
in
xor
add
in
retf
ins
inc
stc
or
fcomip
call
daa
cwde
sub
add
ins
mov
jnp
xor
inc
rcl
xor
ret
cmp
clc
popf
out
jne
jg
pop
jae
enter
mov
es
sbb
cli
inc
out
das
sbb
pop
pop
sar
clc
nop
mov
jmp
xor
loopne
mov
mov
repz
fwait
push
out
neg
mov
std
(bad)
cmp
or
xchg
movs
movs
fistp
jp
shl
shl
xor
inc
call
push
lea
xchg
fldenv
cmps
inc
push
lock
jp
add
and
and
pop
add
dec
shr
loopne
fistp
mov
test
retf
jge
jne
ins
jmp
mov
xor
sti
mov
push
jo
mov
repnz
les
int
repnz
nop
div
(bad)
stc
aaa
sub
adc
mov
mov
xor
xchg
xor
out
movs
arpl
and
and
rol
popf
xor
gs
das
or
jmp
movs
aaa
mov
clc
or
call
jmp
push
cmp
pop
push
inc
mov
(bad)
sbb
or
rcr
movs
addr16
inc
and
out
call
jmp
sub
shl
out
outs
push
sbb
je
xor
dec
movs
pushf
or
int3
or
(bad)
loop
sbb
fdiv
lods
cmp
sub
dec
xchg
mov
add
adc
sti
add
push
or
movs
xor
ss
cmp
jno
test
cmp
jmp
jg
(bad)
loope
inc
xchg
mov
ins
std
addr16
in
mov
jle
int
or
in
jmp
movs
push
hlt
jns
sub
push
test
cld
out
xchg
cmp
mov
inc
add
sub
retf
push
popf
jl
popf
pop
jbe
add
jno
jmp
imul
cmp
and
push
add
repnz
sub
js
loopne
mov
loop
ss
pop
sbb
(bad)
test
dec
not
and
dec
test
xlat
enter
fdiv
xor
pop
add
shr
xor
out
xor
out
dec
fisubr
dec
ror
ffreep
mov
call
push
xchg
fsub
ja
gs
mov
int3
cdq
cli
xor
adc
inc
cmp
xlat
sub
ja
in
mov
push
scas
test
aas
ds
sub
je
xchg
test
ja
add
aad
mov
sahf
gs
sbb
in
or
pop
(bad)
xor
pop
bound
mov
cmp
jnp
cmp
inc
jo
ds
mov
mov
stc
mov
cdq
dec
pop
fisttp
mov
popa
(bad)
call
fucom
fisubr
loop
bound
ja
fcomp
inc
arpl
loope
call
pop
js
ret
pusha
pop
leave
mov
cdq
mov
ss
xchg
mov
and
icebp
cli
pop
jb
jle
xchg
repnz
(bad)
dec
dec
daa
push
ret
or
lods
push
jns
movs
push
je
jne
repnz
out
inc
jmp
push
(bad)
xor
or
aad
cwde
dec
sbb
adc
movs
mov
mov
mov
inc
aaa
aas
xor
ins
xchg
aas
out
(bad)
stc
int
rcl
das
lods
and
push
push
add
jmp
(bad)
mov
dec
in
les
fst
fild
arpl
and
add
sbb
xchg
and
fcmovu
xor
cmp
jo
pop
loopne
test
std
xchg
mov
loop
push
xchg
fnstcw
int
sbb
lock
outs
loop
push
cwde
in
cmps
dec
xchg
and
fnsave
pop
mov
ret
xor
adc
retf
aad
jle
jg
jmp
or
xor
fistp
inc
clc
in
mov
push
cmp
mov
pop
cmp
fild
pop
shr
mov
xchg
xchg
cs
out
js
imul
mov
cld
inc
ret
dec
cli
xchg
xchg
or
int3
mov
adc
xchg
(bad)
into
mov
test
js
cmp
xor
fmulp
(bad)
jnp
cmp
addr16
jo
push
cmps
inc
(bad)
movs
mov
mov
xchg
push
push
dec
repz
psubusb
inc
pop
pop
push
pop
pop
add
xchg
xor
pusha
mov
cs
jbe
mov
enter
mov
and
(bad)
xchg
xor
jmp
pop
dec
sahf
(bad)
xchg
jecxz
out
sub
(bad)
popa
dec
outs
les
je
mov
mul
mov
adc
cli
dec
push
mov
xor
jo
sbb
je
jno
mov
call
(bad)
pop
sbb
adc
sbb
adc
ret
mov
cwde
out
(bad)
mov
push
dec
mov
ds
and
(bad)
pop
loope
packuswb
ror
add
movs
dec
loop
inc
jns
mov
imul
inc
add
cmc
pusha
rcr
or
movs
hlt
fmul
aad
or
push
in
xchg
fisub
test
in
cli
(bad)
ret
sbb
in
mov
shl
out
mov
pop
cmps
sub
jmp
(bad)
popf
sahf
inc
movs
mov
sub
pushf
mov
arpl
hlt
jb
mov
inc
pop
dec
cmc
mov
and
mov
ret
cdq
xchg
and
mov
out
neg
mov
loop
push
pusha
add
mov
(bad)
push
jbe
dec
retf
test
fild
push
push
jb
push
adc
push
stc
in
fwait
lahf
pushf
iret
stos
call
loopne
fsub
inc
push
fld
xchg
and
mov
push
add
lods
shl
imul
jnp
jb
mov
dec
nop
adc
sub
dec
inc
push
aad
xor
and
int3
xor
push
mov
pop
xor
pop
fisubr
or
add
mov
cld
rcr
mov
popf
mov
pop
dec
jae
dec
xchg
jp
in
sti
jg
inc
in
enter
loop
inc
pop
arpl
mov
(bad)
xchg
mov
add
lods
sub
test
xor
jmp
ret
stc
ficomp
pop
adc
sub
cmc
clc
les
dec
nop
push
cmps
imul
jg
stos
jp
sbb
mov
cmps
ss
popf
and
leave
or
or
pop
jbe
stc
inc
(bad)
and
movs
sti
inc
mov
lods
(bad)
sti
mov
das
adc
in
adc
popf
cs
repz
cmp
mov
mov
mov
add
das
repz
add
mov
imul
mov
dec
fidiv
jmp
mov
test
test
mov
js
in
xor
shl
mov
pop
scas
fdivr
inc
adc
push
xlat
nop
inc
out
data16
jb
sahf
mov
xchg
inc
sub
inc
adc
cmp
iret
jb
inc
sbb
std
sub
outs
xchg
or
nop
(bad)
or
call
adc
push
adc
movs
or
mov
popf
jg
data16
rcr
jne
fwait
inc
cdq
lods
push
xor
push
xchg
fadd
outs
inc
mov
out
sub
add
mov
ins
movs
inc
xor
pop
loopne
jno
pop
stc
sbb
push
faddp
sbb
mov
retf
xchg
mov
fidiv
mov
lea
pop
mov
outs
imul
mov
add
xchg
cmc
aad
sbb
lods
imul
jmp
inc
fild
mov
mov
sar
mov
ret
sbb
loope
push
add
mov
push
cwde
xchg
loop
pop
cmp
mov
adc
aam
jg
inc
lds
cld
clc
lds
mov
mov
push
scas
mov
inc
test
mov
dec
pop
out
sbb
cmc
inc
cmp
sbb
ror
pushf
mov
in
lods
fs
loopne
adc
pop
pop
jb
aad
int3
xchg
xchg
jne
push
into
cli
sbb
shr
pop
outs
xchg
mov
push
shr
and
jb
jp
das
arpl
outs
mov
inc
(bad)
jecxz
cmp
cwde
xchg
fdiv
lods
or
leave
popa
push
xor
sbb
mov
stos
aaa
data16
dec
push
sbb
mov
cmps
sub
cwde
mov
fcomi
aam
cmp
cmp
and
std
leave
popa
je
mov
xchg
aaa
dec
stos
push
mov
cdq
ffree
lss
mov
pop
jmp
add
and
(bad)
aas
adc
mov
cmp
mov
sbb
ficomp
test
ja
push
mov
xchg
jnp
loop
aaa
ss
mov
mov
lods
iret
jmp
scas
mov
gs
pop
ds
lahf
out
sbb
mov
fwait
xchg
iret
sub
push
hlt
rol
mov
aas
rcl
jmp
cmp
fdiv
nop
cmovb
push
and
mov
imul
cli
sub
fs
inc
sbb
mov
retf
clc
les
and
pop
aas
push
mov
js
inc
sub
jmp
mov
rol
dec
cmc
inc
aaa
dec
pop
ja
cmp
test
add
cmp
push
sub
clc
xor
(bad)
repz
fidivr
fst
aad
retf
aad
leave
sub
xor
cmps
mov
mov
stos
and
rcr
and
adc
in
call
and
addr16
out
popa
into
mov
mov
popa
(bad)
cmp
shl
pop
stc
or
xor
dec
jl
aas
je
mov
or
xor
lods
pop
call
xor
pop
sar
popf
xchg
jae
nop
pusha
lahf
ds
and
movs
mul
mov
stos
into
test
addr16
push
dec
js
mov
push
or
(bad)
arpl
mov
and
pusha
(bad)
mov
iret
sti
dec
cli
mov
dec
cmc
(bad)
sbb
sbb
add
out
pop
and
lds
pop
pop
(bad)
(bad)
jmp
test
xor
ins
mov
pop
rol
dec
and
out
pop
test
mov
xor
dec
and
cmc
mov
test
or
mov
mov
inc
cmp
out
scas
pop
lahf
(bad)
and
push
adc
pop
mov
fidiv
pusha
xor
cmp
sub
mov
mov
in
push
sti
out
lds
pop
popa
mov
(bad)
mov
mov
stos
ret
aaa
mov
cmp
stos
mov
adc
lds
retf
jle
aaa
mov
mov
sbb
cmp
add
dec
enter
and
jmp
xlat
call
sub
xchg
jo
xor
nop
out
mov
pop
ror
pusha
cmp
mov
sub
loope
rcl
and
dec
(bad)
xchg
lds
retf
pop
repz
adc
mov
test
movs
rcr
pop
aas
cmp
sub
push
cmp
imul
aad
or
cld
sbb
xor
cld
call
(bad)
aas
push
mov
push
les
pop
lods
leave
in
(bad)
sbb
aad
and
stos
jbe
sbb
lods
out
cmps
dec
sub
push
and
pop
div
pop
add
mov
stos
sbb
sub
pop
or
pop
jne
je
xor
into
xor
pusha
xchg
or
stos
std
add
sti
mov
push
cmp
jmp
cli
push
bound
adc
nop
inc
cdq
inc
or
out
push
mov
popa
es
(bad)
sub
lods
jge
out
cmp
inc
inc
icebp
inc
sub
int3
lahf
push
enter
popfw
mov
jmp
sbb
or
dec
aas
inc
movs
mov
sbb
mov
xchg
dec
aas
mov
out
push
sub
pop
ins
jnp
xchg
(bad)
mov
jb
(bad)
xchg
outs
call
inc
mov
or
cmc
stos
cmps
call
std
add
iret
jmp
and
mov
push
daa
test
ins
cld
mov
sbb
ja
ins
inc
and
inc
adc
aam
xchg
or
sub
sub
adc
adc
xchg
inc
jge
scas
iret
cmp
es
ins
data16
loop
inc
out
jl
xor
aaa
in
sub
enter
push
js
jmp
push
sbb
adc
xchg
mov
repz
mov
and
icebp
loopne
dec
(bad)
fadd
mov
(bad)
loopne
push
xchg
call
and
inc
mov
add
xchg
std
cmp
jb
rol
mov
pop
mov
out
arpl
fisub
sbb
dec
js
cmp
ficom
and
and
xor
mov
out
mov
mov
sbb
or
ret
aas
pop
dec
adc
inc
dec
jle
(bad)
ror
scas
ja
out
fst
sbb
aaa
jae
sar
inc
push
(bad)
push
lock
jle
dec
(bad)
repz
sub
les
add
fwait
mov
sbb
int
fcom
lods
js
fisubr
xor
xchg
xor
loopne
push
loop
inc
xlat
paddw
mov
pop
push
out
adc
jbe
push
mov
into
cmp
movs
adc
ins
scas
imul
sub
repz
sbb
xlat
add
stc
pop
int3
sub
add
fisubr
jb
sbb
(bad)
pop
jns
frstor
xchg
mov
cmp
aaa
jmp
mov
push
adc
lods
dec
sahf
xchg
popf
addr16
(bad)
stc
not
push
jge
pushf
jmp
inc
out
dec
nop
jns
daa
dec
test
push
mov
xchg
sbb
xchg
clc
jecxz
out
jl
mov
and
add
adc
fdivr
sbb
rcl
adc
loop
and
adc
push
bound
inc
add
xor
mov
sti
cmp
addr16
jb
mov
inc
inc
aas
or
(bad)
lods
aas
int
dec
pusha
arpl
loope
xchg
mov
mov
cs
push
test
aas
sbb
adc
loope
lock
loope
popa
into
xchg
(bad)
enter
add
xchg
not
sub
mov
xor
pop
jnp
push
cmp
icebp
enter
push
shl
icebp
shr
(bad)
(bad)
in
loop
pop
adc
clc
jbe
mov
in
shl
sub
push
push
fidiv
aam
jge
repz
jge
xor
fiadd
mov
push
dec
mov
xor
mov
cmp
push
js
dec
(bad)
sahf
jp
les
push
outs
mov
or
pop
loop
aas
push
(bad)
arpl
or
stc
xor
movs
or
adc
call
dec
repz
pop
test
xor
call
mov
pop
scas
ja
(bad)
push
sub
fwait
jns
jle
cmps
call
push
sti
push
inc
sbb
into
movs
ins
out
out
xchg
push
jb
inc
push
mov
out
shr
clc
gs
adc
mov
push
xchg
adc
adc
ret
in
mov
int3
add
fadd
adc
test
xor
add
push
retf
out
scas
data16
add
nop
mov
ret
fist
sbb
retf
int
cs
mov
adc
xchg
imul
push
cld
in
dec
or
movs
adc
mov
(bad)
xchg
out
mov
shr
jns
lea
adc
repnz
in
sbb
out
and
mov
repz
ins
cmp
js
shl
push
inc
call
add
mov
mov
and
mov
xchg
sar
push
daa
das
jo
push
add
fwait
mov
sub
ret
stc
or
dec
(bad)
rcr
xlat
push
fwait
fwait
fwait
pop
dec
or
mov
outs
je
mov
jecxz
xchg
fwait
push
(bad)
xchg
adc
je
xlat
arpl
mov
loop
inc
xor
mov
push
mov
test
cli
dec
sub
cli
mov
enter
call
xor
ja
sbb
dec
mov
inc
ret
and
out
aaa
sub
js
pop
aaa
pop
xchg
loope
and
mov
or
retf
stos
or
mov
xor
push
popfw
imul
mov
add
movs
jbe
add
sub
dec
cmp
sub
je
pop
inc
mov
popf
pop
mov
popa
xchg
pop
inc
fidiv
mov
jbe
mov
loop
inc
clc
sub
and
lods
daa
pop
std
jmp
mov
mov
jae
jns
xchg
daa
pop
pop
inc
adc
pop
xchg
fsub
icebp
div
adc
xor
data16
adc
test
scas
pop
int
xchg
inc
mov
sub
leave
test
scas
popa
inc
stos
and
cmc
push
js
sub
pop
ds
inc
mov
rol
stos
jle
outs
mov
dec
repnz
pop
dec
mov
aam
(bad)
movs
(bad)
or
push
pop
push
and
dec
scas
push
dec
inc
dec
out
cli
retf
xchg
cld
movs
push
cmp
pop
inc
loope
aam
test
cs
jge
inc
pop
mov
cmps
adc
scas
cmp
xor
jo
push
or
call
stos
inc
mov
fdivr
mov
fidivr
dec
cmp
mov
jge
jl
retf
dec
xlat
lods
or
pop
jecxz
dec
std
test
clc
inc
je
inc
test
push
push
and
shl
or
(bad)
(bad)
imul
std
out
sbb
data16
cs
cmp
fsubrp
pushf
leave
or
adc
fisttp
mov
into
je
icebp
sbb
mov
hlt
mov
jne
or
ret
add
dec
stc
lea
test
and
inc
xchg
int3
mov
mov
mov
and
mov
sar
pop
out
xor
push
fmulp
xor
xor
test
inc
aad
cmp
jmp
loop
jo
fs
aaa
add
(bad)
sub
sti
retf
je
adc
mov
leave
mov
or
cld
je
daa
xor
arpl
pop
dec
retf
dec
(bad)
xchg
in
cmp
cmp
inc
push
outs
lahf
mov
addr16
das
xor
popa
jno
fistp
jne
xor
int
aad
lds
(bad)
mov
mov
pop
push
ss
(bad)
mov
mov
movs
int3
test
hlt
xchg
inc
dec
jmp
popf
xchg
mov
sub
(bad)
jmp
sbb
push
movs
sbb
dec
out
test
adc
xchg
mov
call
and
out
loop
adc
sub
mov
inc
jg
lea
xor
cmp
sbb
aad
pop
dec
pusha
xlat
fmul
jbe
fmul
or
jl
shr
icebp
pop
pushf
in
shl
ret
psllq
addr16
pop
loop
mov
cmp
iret
mov
(bad)
jmp
push
fstp
jno
xchg
add
mov
xchg
or
mov
push
sar
push
in
lea
adc
in
cmovl
mov
fnstcw
push
js
xchg
xchg
add
cmps
jp
out
mov
sub
clc
sbb
dec
mov
test
mov
(bad)
cwde
sub
addr16
inc
mov
mov
or
inc
lds
inc
data16
mov
mov
rcr
in
mov
xchg
outs
xor
call
cli
jmp
les
push
movs
les
in
dec
and
cmp
cwde
xchg
out
sub
fcomp
loope
int
jp
js
icebp
adc
jmp
inc
sub
in
or
mov
pop
cmp
mov
aam
fiadd
sbb
fistp
out
add
mov
pop
arpl
push
call
inc
cs
jb
pop
xor
ret
shl
(bad)
pushf
pop
mov
in
mov
cmc
dec
add
cmc
out
and
inc
adc
test
sub
sar
mov
add
(bad)
call
mov
clc
repz
xor
cli
(bad)
fstp
sbb
jnp
sbb
pop
cdq
inc
daa
loope
dec
loopne
mov
jbe
mov
mov
sub
sub
push
ja
sar
jnp
fsubr
sub
adc
adc
cmps
xor
nop
dec
stos
call
adc
lock
ja
mov
arpl
aad
push
cmp
inc
dec
(bad)
pop
dec
jge
ds
dec
arpl
cmps
xchg
sub
test
add
lods
loop
pop
lds
mov
and
cmp
adc
retf
jae
ss
mov
push
jnp
out
xor
inc
shr
cli
xor
add
dec
cmp
push
mov
daa
inc
cmps
or
jge
or
sub
cmp
rcr
sub
lods
push
xor
ds
inc
ins
dec
test
xor
cmp
or
sub
fdivr
popf
xlat
pop
jmp
xchg
test
(bad)
cmps
inc
mul
cs
enter
test
mov
ja
push
or
jno
test
test
inc
aam
cmp
leave
inc
pop
ss
std
imul
adc
mov
ret
sbb
sbb
xor
retf
out
mov
test
dec
or
ins
(bad)
xor
test
mov
nop
(bad)
in
lods
mov
or
jns
xor
shr
aaa
sbb
xlat
stc
cli
adc
mul
sbb
sbb
or
retf
mov
leave
inc
mov
sbb
xchg
push
icebp
mov
mov
(bad)
xchg
xlat
frstor
nop
retf
inc
push
je
inc
mov
xor
aad
cmp
(bad)
jle
lods
repnz
ficom
inc
mov
addr16
xchg
or
jne
sbb
loopne
lock
ret
mov
jmp
sar
lods
dec
fadd
cdq
cs
cmps
jmp
or
xor
pop
nop
cmp
sbb
sub
pop
sbb
inc
mov
repnz
inc
js
scas
rcl
push
sbb
jno
div
enter
xchg
and
(bad)
jmp
scas
outs
mov
push
mov
lods
jne
inc
sub
in
mov
(bad)
(bad)
cli
cdq
jmp
xor
leave
retf
pop
(bad)
(bad)
add
mov
xchg
mov
out
shl
pop
aad
inc
mov
out
outs
mov
loope
addr16
lods
stc
ret
loop
cmp
fs
call
inc
push
cmp
(bad)
ficomp
mov
inc
fidivr
xchg
(bad)
cmps
xor
mov
icebp
push
ins
inc
xor
in
or
fimul
dec
jne
mov
and
add
push
fwait
add
loopne
daa
jb
retf
ds
jle
or
xchg
pop
test
mov
adc
xor
push
and
je
mov
jmp
jle
pop
(bad)
lds
pop
mov
test
cmp
rcl
arpl
push
jmp
adc
or
adc
js
ret
mov
jmp
mov
jno
pop
dec
add
sbb
ja
add
push
mov
das
ret
push
js
iret
jne
push
mov
cmps
test
push
(bad)
adc
daa
mov
lds
cmp
(bad)
fs
int3
pop
out
out
leave
inc
adc
push
sbb
or
test
cmp
(bad)
fs
mov
cmp
and
dec
xor
or
imul
(bad)
mov
rol
call
(bad)
push
call
mov
adc
ds
mov
or
or
jge
retf
xlat
sub
ins
xchg
and
addr16
popw
pop
fucomip
int3
cmc
inc
and
shl
lods
mov
shr
sbb
jle
aad
jl
shl
xor
call
push
sbb
gs
xchg
aam
sbb
pop
movs
imul
and
jb
sub
call
ret
pop
cli
loop
mov
pop
mov
push
repz
inc
mov
repz
imul
(bad)
push
xor
retf
out
ins
ja
in
dec
dec
pusha
mov
icebp
lea
xchg
cmp
sahf
add
sahf
lock
jg
push
and
cdq
out
add
nop
jno
test
test
cmp
rol
repnz
out
ss
das
cmps
xor
mov
not
jo
dec
push
shl
xor
push
inc
sub
dec
dec
or
test
bndldx
push
cmp
shr
and
in
inc
jmp
clc
fidiv
stos
pop
test
retf
inc
adc
mov
mov
dec
inc
or
jge
xchg
call
xchg
(bad)
cdq
cli
dec
dec
stos
bound
iret
jp
aaa
mov
dec
aas
test
cmp
cmp
inc
adc
mov
aaa
stos
jmp
dec
into
aad
xchg
loop
pusha
jne
add
jno
popa
ja
or
push
mov
pop
mov
and
push
dec
lods
and
lods
daa
push
fist
enter
scas
out
jp
cli
push
pop
retf
or
add
(bad)
lock
and
and
push
mov
dec
xor
add
pusha
repz
stc
outs
and
xchg
jp
adc
mov
rcr
inc
mov
dec
icebp
pop
pop
out
test
int3
enter
adc
or
xchg
out
fwait
ins
les
or
js
push
xchg
cld
retf
ss
(bad)
xchg
inc
lods
adc
and
jae
pop
and
jo
je
int
daa
add
shl
cmp
cmps
not
imul
cmp
out
and
add
and
and
sbb
dec
rol
add
out
inc
(bad)
jmp
mov
add
test
into
sbb
test
ins
push
aad
push
jmp
pop
cmp
adc
movs
adc
icebp
and
inc
adc
xor
or
adc
sbb
hlt
fidivr
jl
jns
arpl
jmp
adc
xchg
inc
movs
sbb
(bad)
retf
xchg
push
jmp
ins
movs
loopne
neg
or
enter
jo
sahf
out
push
scas
cmc
xchg
jmp
jp
(bad)
jmp
out
loopne
lods
jl
lds
mov
push
shr
adc
test
xchg
mov
gs
pop
das
jae
adc
loop
(bad)
fwait
in
sub
or
push
push
mov
sub
push
ss
fs
dec
retf
jne
in
scas
pop
and
call
adc
movs
xchg
xor
out
adc
fbld
inc
stc
jp
dec
lds
dec
and
loope
jmp
jg
fimul
add
xchg
mov
jge
or
lods
popa
(bad)
pop
jg
jmp
add
sub
sub
push
mov
(bad)
cmp
xor
mov
jo
ror
and
mov
mov
in
movs
ret
popf
jo
and
jmp
mov
test
mov
ds
ss
or
sbb
les
arpl
cs
sub
in
in
test
ror
sbb
cmps
icebp
cmps
cmps
xor
push
push
mov
and
mov
inc
sub
lock
call
call
pop
aam
call
call
xchg
sub
mov
jge
(bad)
rcr
(bad)
fs
(bad)
(bad)
mov
mov
(bad)
xchg
outs
inc
sub
xchg
loope
xchg
mov
mov
jne
adc
mov
push
test
scas
push
lock
pop
pop
mov
ficomp
inc
movs
ja
xchg
mov
fst
mov
dec
pop
loop
mov
in
iret
mov
add
hlt
ss
pusha
jo
push
mov
push
xchg
sub
xchg
aas
dec
cmp
sbb
cmps
jae
cmps
jg
ins
and
xchg
fild
or
push
(bad)
push
add
jmp
xor
lock
stos
and
sub
xchg
push
popf
sub
out
js
or
or
ds
push
add
not
fist
jge
sbb
xor
or
sti
cs
adc
sahf
sub
scas
mov
push
add
xchg
(bad)
cmc
xchg
xchg
cmp
pop
sbb
xor
movs
pop
add
retf
(bad)
lea
aaa
ds
fisttp
inc
bound
cli
add
mov
mov
rcr
retf
mov
jne
mov
fadd
lds
mov
add
xchg
enter
fdivr
dec
pop
(bad)
sbb
push
fadd
lock
jo
cmp
pop
test
xchg
stc
sar
or
push
xchg
mov
xchg
arpl
and
jg
adc
cmp
mov
xchg
sbb
rcl
sub
cdq
pop
das
or
(bad)
out
repz
cmp
mov
pop
xchg
scas
push
(bad)
rcr
jmp
sub
xlat
call
and
add
lahf
push
jne
jmp
xchg
fcmovne
js
sub
icebp
push
dec
adc
aad
xor
sub
fs
test
mov
repz
push
dec
ror
repnz
ficom
add
mov
mov
pusha
push
movs
scas
add
loope
sub
sbb
ret
rcr
xor
shl
cmp
or
rcr
out
cmp
(bad)
fldenv
test
mov
retf
imul
xchg
clc
out
push
sub
push
stc
mov
xor
mov
dec
addr16
aad
pushf
mov
or
frstor
retf
mov
pop
rcl
adc
test
mov
sub
mov
mov
sub
cmc
pushf
in
sbb
frstor
add
add
adc
lahf
pop
and
mov
aas
(bad)
lea
pop
jle
adc
ror
jne
fcomi
(bad)
imul
push
call
ins
scas
std
sub
ficomp
jle
lea
xor
mov
add
std
jno
loope
inc
cmp
(bad)
cs
add
inc
cmps
jmp
or
stc
fcom
pop
les
cmp
ret
inc
jae
pop
mov
cwde
lods
call
dec
jnp
and
jbe
push
inc
and
fcom
(bad)
pop
int3
jle
fsub
jg
inc
xchg
mov
stos
mov
data16
(bad)
xchg
sbb
retf
js
out
movs
push
ret
and
fld
aas
xor
and
pushf
ja
in
retf
addr16
les
cs
das
lods
(bad)
into
sbb
int3
or
(bad)
fs
fcomp
ret
adc
push
int3
into
inc
(bad)
loop
adc
push
inc
mov
test
cld
scas
loopne
adc
pop
mov
and
or
call
mov
xchg
mov
ja
add
cmp
sbb
push
(bad)
and
cdq
arpl
inc
sbb
cwde
out
loope
mov
inc
lahf
sbb
inc
inc
call
cmp
ficom
out
and
cs
mov
outs
mov
mov
pop
mov
lods
sub
pop
xor
mov
in
test
push
cmp
(bad)
jp
dec
ficomp
fisubr
and
daa
cmp
xor
pop
(bad)
loope
jne
sub
sbb
and
xchg
lods
mov
mov
add
popa
sub
stos
rcl
mov
enter
in
int3
jl
add
jne
call
and
scas
inc
imul
pop
fs
aam
cmp
pop
mov
push
loop
jmp
sahf
push
mov
jmp
xchg
xor
mov
add
pusha
mov
push
imul
arpl
add
adc
loope
or
in
mov
push
or
leave
sbb
shr
jb
and
out
xlat
push
test
cmc
or
jbe
repz
mov
adc
cmp
jns
mov
and
and
and
into
mov
fisub
dec
(bad)
mov
jmp
fcom
sbb
mov
jbe
or
jo
test
and
jp
sub
scas
pop
add
jmp
repz
pop
add
lock
cmp
adc
add
and
xor
imul
sbb
xor
and
xchg
and
fs
pop
mov
std
and
sbb
xchg
cmp
repz
inc
in
jae
out
adc
mov
mov
aam
scas
pusha
add
cmp
cwde
cdq
das
mov
mov
push
adc
push
aad
pop
(bad)
retf
inc
(bad)
and
lea
jnp
push
movs
or
ja
push
cmc
aaa
addr16
inc
push
mov
xor
add
icebp
int
or
movs
pop
or
inc
xor
cmp
mov
jle
movs
inc
inc
gs
xor
outs
and
(bad)
cmps
mov
mov
jmp
stos
adc
cmp
adc
mov
nop
ja
push
loopne
xchg
add
mov
sbb
int
or
ret
push
jp
addr16
jmp
dec
sub
mov
jo
cmc
dec
xchg
movs
cdq
ficom
mov
mov
mov
xchg
mov
jo
int3
or
adc
cld
leave
xchg
mov
adc
popa
lock
outs
xchg
sub
leave
inc
cli
imul
hlt
pusha
hlt
xchg
hlt
jb
push
inc
test
adc
adc
retf
pop
sti
rol
fwait
xor
sbb
jns
pop
mov
dec
iret
stc
mov
sub
xor
add
dec
repnz
popa
mov
in
dec
cmps
inc
(bad)
out
xlat
sbb
nop
push
dec
fucomip
xchg
push
xchg
adc
jbe
sbb
or
adc
retf
(bad)
cmps
add
pusha
(bad)
sbb
(bad)
or
in
mov
jecxz
clc
mov
jns
or
cs
pop
fst
mov
repz
xor
pop
add
sahf
xor
in
lods
inc
fisubr
jmp
mul
mov
test
jge
mov
mov
nop
cs
iret
les
mov
scas
fmulp
mov
xor
mov
call
dec
movs
cli
cmp
adc
fisttp
stos
test
jge
shr
dec
inc
test
adc
mov
je
or
or
(bad)
scas
push
shl
lods
mov
(bad)
push
lds
xor
cmp
cmp
paddw
into
mov
out
es
arpl
ja
ret
fs
pop
sub
mov
or
(bad)
mov
mov
xor
pop
or
ret
jge
sahf
fnstsw
pop
xchg
movs
add
aaa
inc
mov
cli
pop
or
pop
js
mov
jle
mov
mov
sbb
out
jb
mov
xor
int3
pushf
nop
mov
jmp
icebp
adc
push
mov
into
call
into
fstp
mov
push
push
or
pop
xor
sbb
cmp
mov
(bad)
mov
cmp
mov
cli
sub
jmp
aad
test
push
aam
push
in
add
les
jb
jo
inc
push
(bad)
fsub
cld
pop
jg
outs
dec
in
xchg
into
and
xor
jmp
cmp
cmp
inc
dec
push
ss
loop
popf
cmp
pop
and
cmps
lahf
adc
sub
cs
imul
dec
data16
sar
lods
out
out
mov
ret
es
jo
and
out
push
inc
cmp
lods
mov
into
test
jmp
jbe
out
sahf
ret
jg
ret
jae
clc
xor
sub
ror
mov
xlat
fcmovnb
(bad)
stc
or
lods
push
jmp
addr16
cmp
enter
dec
mov
retf
loopne
(bad)
stos
jno
push
enter
pop
sar
mov
leave
jmp
push
sub
xor
push
nop
xchg
fisubr
fwait
aaa
dec
adc
ds
test
daa
mov
jmp
sub
leave
ja
add
aam
ret
xor
push
ss
in
shl
outs
fcom
jne
inc
out
dec
add
lock
imul
inc
loop
add
or
mov
xchg
outs
movs
jg
out
cmps
push
fwait
in
out
pop
sahf
xchg
sti
add
mov
shl
mov
cmp
or
and
jl
ret
jns
jbe
ret
(bad)
push
cli
stc
repnz
fucomp
iret
out
movs
cmp
mov
push
lods
popa
jne
inc
(bad)
lea
mov
inc
cld
pop
fistp
test
push
mov
clc
push
in
(bad)
iret
pushf
inc
pusha
add
ds
push
pop
call
loopne
pop
fsub
aas
int3
leave
push
ret
mov
cmp
loopne
pushf
push
movs
lods
jl
add
sub
lods
xchg
cmp
inc
pop
mov
mov
bound
and
add
pop
lds
pop
push
and
movs
mov
gs
ins
mov
jb
xchg
jno
jl
mov
dec
pop
sbb
pop
mov
cmp
in
leave
test
fs
pop
cli
stos
or
pop
shl
fistp
xchg
in
repnz
push
fld
call
lods
sub
xchg
push
push
loopne
shl
jb
xchg
push
out
adc
xchg
iret
mov
mov
inc
popa
rol
jl
arpl
mov
inc
(bad)
je
and
sbb
mov
dec
leave
frstor
pop
mov
mov
xor
inc
sub
(bad)
shl
mov
add
fs
pusha
and
sbb
(bad)
int3
stos
cwde
push
(bad)
pop
mov
imul
or
inc
(bad)
bound
(bad)
jnp
jb
out
lea
xchg
dec
push
mov
mov
jmp
pop
cmp
cdq
mov
adc
pushf
and
pop
and
gs
fcmovne
or
xchg
push
pop
(bad)
and
js
pop
sbb
cmp
sub
jbe
neg
(bad)
ins
xlat
cmp
mov
mov
mov
fidiv
mov
push
and
push
test
pop
lods
jecxz
sbb
lods
addr16
or
dec
(bad)
and
(bad)
mov
and
push
ins
or
xor
stos
jmp
xchg
dec
(bad)
lods
leave
aad
scas
jno
xchg
inc
jl
mov
mov
loope
(bad)
adc
sbb
pop
sbb
call
pop
mov
sbb
repz
dec
fnstcw
stc
(bad)
push
adc
inc
retf
stc
out
pop
psllw
int
inc
xor
pop
jle
test
outs
mov
pop
adc
fidivr
adc
push
ret
dec
fld
push
sbb
pop
mov
inc
nop
in
(bad)
iret
cdq
shl
jge
psubw
cmp
and
cli
nop
cmps
fcom
cli
mov
and
mov
mov
test
push
imul
adc
mov
inc
pop
jne
(bad)
pop
rcr
daa
rcr
adc
dec
les
fild
popf
(bad)
lock
mov
retf
outs
jecxz
retf
jb
int
popf
pop
in
xor
push
fidiv
jb
xchg
fs
inc
cs
cmp
mov
add
into
or
(bad)
adc
sub
(bad)
scas
and
push
add
out
sub
xchg
cmps
cwde
or
or
dec
jg
popf
xlat
sbb
and
bound
mov
addr16
stc
dec
jmp
sub
lds
mov
adc
outs
push
mov
movs
mov
imul
pop
iret
inc
cmps
sbb
pop
fbld
sbb
test
clc
lods
cmp
cld
ss
sub
fcom
retf
clc
jns
daa
iret
in
and
xor
scas
sahf
or
add
lahf
in
test
mov
gs
and
aas
or
jbe
repnz
cli
out
loop
imul
sbb
xchg
pop
pushf
sub
imul
popf
rol
call
or
add
pop
jbe
sub
daa
aaa
not
retf
push
mov
(bad)
and
mov
inc
mov
sbb
or
jecxz
cs
and
inc
cs
xchg
jecxz
pop
and
jecxz
and
mov
int3
xchg
lods
loopne
or
stos
ss
mov
aaa
retf
push
add
xor
das
push
mov
les
inc
js
cmp
mov
cld
push
das
sub
out
xor
and
clc
sub
jmp
gs
cmps
jnp
mov
xchg
out
mov
jns
cmc
pushf
jle
std
xchg
jmp
xchg
mov
jmp
sub
add
jne
iret
dec
mov
xchg
(bad)
mov
fwait
or
mov
inc
fcmovnbe
cmp
out
and
js
es
fidiv
pushf
pushf
mov
aad
out
push
lahf
fs
cmp
fsubr
rol
mov
jno
in
jmp
xor
repz
(bad)
push
cmp
lock
movs
jge
imul
mov
dec
adc
or
shl
and
dec
push
fidivr
loope
retf
mov
or
mov
sub
mov
(bad)
hlt
fbld
mov
mov
adc
sub
out
fs
dec
jecxz
or
fcomp
inc
stc
or
outs
aaa
fcom
outs
cmp
add
push
imul
lods
xlat
mov
test
iret
pop
and
or
fsubr
add
lods
repnz
outs
in
loop
mov
xchg
test
pop
mov
sbb
(bad)
mov
sub
fild
shr
les
mov
outs
pop
push
adc
ins
iret
call
je
aam
adc
pushf
and
test
lods
push
js
(bad)
loop
push
or
das
fsub
sub
xchg
add
dec
rol
sbb
add
clc
cwde
gs
or
cmp
and
push
xor
xchg
in
mov
cmc
cmps
pop
rcr
pop
pop
pop
mov
jns
sub
pop
push
jmp
adc
movs
push
in
push
xor
push
push
sub
cdq
cmp
sbb
daa
aam
mul
out
aam
cmp
pushf
outs
and
sbb
push
jnp
das
or
imul
cmps
shl
enter
nop
mov
push
push
mov
ins
aaa
push
rcr
push
xor
out
mov
in
(bad)
jnp
fidivr
push
xor
cmp
out
cmps
dec
dec
jecxz
lahf
jb
popa
push
sub
push
xchg
call
xorps
sti
push
xchg
sub
mov
int
jne
or
push
inc
retf
pop
cmc
(bad)
mov
xor
mov
clc
xchg
fsub
in
xor
outs
das
mov
and
jp
arpl
sti
call
mov
retf
xchg
fidiv
loope
nop
and
mov
inc
jge
fadd
pop
lock
mov
xor
dec
xchg
ins
mov
push
push
jns
leave
into
or
fld
adc
fdivr
dec
mov
mov
mov
sahf
sbb
mov
dec
outs
(bad)
cmc
sub
pop
push
push
jg
add
adc
mov
dec
rol
bound
xchg
test
lea
ins
pop
std
in
sbb
inc
xor
in
popf
ret
lods
xor
push
jno
sbb
mov
jo
mov
cmp
mov
mov
mov
pusha
aam
inc
test
sbb
ror
shr
adc
push
sub
fsub
fwait
int
pushf
out
sub
and
xor
les
(bad)
test
ja
sub
mul
sbb
jg
dec
mov
jne
(bad)
(bad)
adc
cmp
imul
or
cs
add
push
(bad)
fldcw
jmp
push
inc
xor
gs
push
mov
xor
mov
or
enter
stos
push
or
rcl
fadd
inc
mov
push
jecxz
jmp
jge
(bad)
out
inc
sub
jg
ja
cmp
inc
neg
push
mov
ror
xchg
mov
arpl
in
enter
pop
adc
inc
addr16
dec
dec
rep
(bad)
jg
scas
aas
aaa
ss
pop
inc
(bad)
jmp
jl
shr
cmps
ret
adc
(bad)
push
pop
push
pop
(bad)
xchg
and
adc
loopne
shl
int3
or
movs
bound
and
pop
mov
iret
dec
pop
repnz
xchg
out
mov
add
les
jg
(bad)
int3
je
push
hlt
sub
dec
stc
hlt
push
pop
jl
jb
in
xchg
push
mov
aad
push
aam
dec
cmp
lock
sub
mov
mov
arpl
mov
and
das
jl
cdq
dec
fidivr
enter
or
xchg
push
fidiv
sbb
cmp
adc
xor
xor
xchg
cmp
push
adc
jmp
stos
test
test
add
dec
mov
in
sbb
je
inc
adc
(bad)
mov
inc
and
lea
mov
inc
cmps
jmp
sti
sub
push
mov
xchg
push
mov
ss
mov
jmp
xor
mov
stc
enter
sar
inc
fldenv
mov
leave
(bad)
cvtps2pd
mov
fisubr
adc
(bad)
repz
or
jmp
mov
outs
pop
add
adc
mov
(bad)
jle
mov
xchg
fistp
or
pop
test
inc
add
add
dec
adc
mov
push
inc
push
cwde
jmp
in
jno
js
jno
jo
test
jg
add
xor
xchg
arpl
dec
adc
xor
add
popa
mov
pop
mov
inc
imul
mov
push
xchg
sbb
push
(bad)
xchg
mov
ins
es
cmps
les
pusha
xchg
xor
test
inc
jbe
pop
cmps
jb
cmps
das
push
sti
rcr
sti
mov
mov
sub
(bad)
xchg
aam
xor
mov
mov
push
std
jne
pop
test
adc
scas
pop
sub
push
iret
inc
mov
xor
inc
jge
inc
repnz
jbe
pop
aaa
outs
mov
or
push
xchg
cmps
sahf
jecxz
std
sub
cmp
mov
mov
leave
dec
lods
shl
dec
stos
js
pop
xchg
mov
ror
outs
jg
xchg
jmp
ret
and
jno
pushf
outs
scas
xor
stos
mov
jnp
shl
bound
cmps
push
mov
ret
dec
sbb
into
mov
ins
mov
mov
push
test
xchg
sbb
mov
dec
(bad)
hlt
mov
cs
out
sbb
jle
shl
adc
(bad)
cld
ret
cmp
out
xor
dec
dec
and
pop
pop
loope
fwait
repz
mov
push
xor
xor
sbb
sbb
loope
jmp
dec
add
pusha
jmp
mov
(bad)
in
cdq
mov
mov
int3
sub
sbb
or
lea
inc
adc
push
inc
cmps
ss
enter
(bad)
mov
inc
pop
pushf
inc
pop
adc
jbe
pop
cmc
or
add
inc
frstor
bts
pop
xchg
dec
jbe
repz
mov
test
mov
leave
xchg
jmp
xor
aam
jbe
movs
xchg
jb
mov
call
adc
hlt
xchg
or
push
jns
dec
ins
shr
and
bnd
xor
or
and
inc
mov
lods
xchg
mov
out
xor
out
add
sub
jle
aam
addr16
mov
mov
arpl
mov
dec
xlat
fcmovne
sub
mov
daa
iret
add
dec
or
jp
jl
xor
sbb
mov
data16
adc
mov
add
xor
je
pop
jecxz
add
cmp
loopne
lds
sbb
xor
sub
xchg
mov
pop
xchg
jno
add
and
pop
sub
fsubr
cld
xor
mov
xor
test
jnp
(bad)
sbb
leave
mov
mov
dec
cmp
popf
cmp
ja
ficom
push
mov
pop
jmp
daa
or
jmp
xor
cmp
hlt
push
jge
out
data16
push
and
outs
adc
(bad)
call
jge
and
and
sti
sbb
pop
sub
mov
push
xor
add
shl
or
pop
ins
push
aad
pop
inc
and
jae
pop
fiadd
lods
movs
xchg
and
call
rcr
fistp
iret
xchg
aaa
dec
xor
ins
retf
mov
jmp
out
es
lahf
or
in
mov
outs
in
int
jbe
mov
dec
jbe
pop
sbb
jecxz
add
xor
sbb
stos
imul
cmp
imul
sub
xor
dec
jne
sahf
fsubr
jle
adc
bswap
mov
jl
cwde
push
push
test
dec
xchg
stos
shl
cmp
adc
and
mov
je
cld
mov
out
fild
mov
pusha
test
inc
xor
rep
fstp
inc
fdivr
or
push
in
icebp
xchg
push
(bad)
lock
xor
out
xchg
popa
div
test
sbb
xor
cmp
out
pop
arpl
jmp
stos
xor
outs
mov
aam
fst
adc
movs
sub
loop
mov
ss
loope
pop
xchg
cmp
sub
pushf
fwait
test
pop
mov
rcl
adc
dec
xchg
sbb
xchg
mov
lods
mov
pop
es
jp
movs
adc
mov
sub
(bad)
mov
pop
add
dec
cdq
inc
addr16
jmp
jecxz
push
popf
xchg
cmp
push
mov
out
dec
push
ja
div
push
jl
fs
into
add
cmp
jno
xchg
lods
jl
dec
retf
jmp
push
repz
jle
mov
mov
sub
or
mov
dec
inc
fist
sbb
lahf
jb
fimul
shl
sub
nop
das
pusha
jmp
arpl
(bad)
repz
push
pop
loopne
adc
jl
jnp
outs
jmp
int
data16
cmp
(bad)
mov
mov
add
push
inc
shl
sbb
xchg
jmp
outs
dec
(bad)
shl
shl
lahf
inc
sub
xor
jne
ror
mov
push
adc
repz
cmp
stos
push
inc
xor
push
push
or
mov
mov
mov
jns
sub
cmc
mov
sbb
(bad)
or
fxam
and
mov
add
lea
push
or
aaa
gs
push
mov
or
cmp
add
int
(bad)
push
mov
call
in
add
xor
xchg
cmp
inc
test
jb
leave
pusha
push
jb
mov
movs
add
mov
push
pop
xor
jecxz
fild
pop
dec
outs
jno
in
call
mov
ja
shr
repnz
mov
cli
repnz
xor
pop
mov
adc
xchg
stc
mov
(bad)
mov
mov
mov
pop
scas
inc
test
mov
cli
lods
lods
popf
mov
push
(bad)
shl
lahf
cli
lock
mov
mov
mov
jno
test
mov
jg
jb
in
cmp
sub
sbb
sbb
mov
gs
add
out
cdq
sub
fwait
idiv
popa
and
rcl
stos
mov
push
xchg
sti
mov
loopne
enter
mov
add
push
or
mov
stos
pop
push
sub
ror
aam
jp
or
or
out
nop
shl
loop
cli
test
lahf
rcr
cdq
call
rcr
mov
imul
mov
cmp
test
add
lock
fidiv
jns
cmps
ins
in
arpl
adc
cmp
and
test
es
sub
or
mov
cdq
sub
or
mov
push
jmp
fs
je
iret
in
hlt
mov
ror
(bad)
out
jnp
int3
aaa
mov
js
das
jl
dec
push
scas
js
adc
mov
scas
lods
and
lods
cmp
cmp
mov
xlat
popa
repnz
dec
xchg
cmp
and
xchg
jle
je
cmp
ret
movs
ss
and
cmp
mov
mov
out
std
sub
bnd
in
adc
sbb
pop
or
sub
ret
stc
popa
inc
cmps
je
push
cmp
loope
xor
nop
add
call
inc
mov
test
push
sub
std
mov
lods
sbb
jge
and
jl
mov
jno
in
mov
inc
(bad)
xor
mov
push
jns
inc
outs
fsubr
and
push
pop
add
cmps
iret
mov
xor
or
sbb
sub
sbb
mov
lods
sti
into
lods
sbb
fadd
adc
dec
push
or
xchg
popf
or
mov
ins
mov
cs
cwde
mov
xlat
mov
adc
inc
pusha
and
sub
out
mov
scas
imul
mov
dec
mov
jmp
test
jmp
adc
shl
stos
out
push
push
(bad)
mov
fcom
sub
xchg
adc
popa
push
sub
mov
pop
inc
jmp
add
fndisi(8087
pop
(bad)
push
in
rol
movs
pmulhw
cmp
xlat
pusha
sahf
jmp
jb
jnp
push
sbb
sti
pop
scas
add
add
xchg
ficomp
xchg
jbe
and
pop
add
(bad)
push
in
add
xor
popa
adc
jmp
lock
stos
bound
adc
ds
fwait
repz
cmps
inc
or
adc
dec
xor
and
int
test
xor
loopne
int
mov
sub
xchg
adc
pop
push
push
cmp
out
mov
and
ins
cdq
idiv
push
mov
stos
ret
loope
cmp
out
pop
(bad)
mov
pop
sub
xor
(bad)
jle
js
mov
sub
cwde
add
or
sbb
fcmovnbe
cdq
imul
mov
pushf
and
inc
bound
push
or
or
adc
sub
sar
popf
push
cmps
xchg
adc
jecxz
pop
mov
lods
lahf
stc
push
sbb
scas
adc
mov
pop
repnz
aaa
mov
stos
inc
aas
mov
int3
pop
aas
dec
mov
popa
mov
lahf
cmp
or
xchg
push
sar
push
ret
push
(bad)
and
push
(bad)
and
jmp
mov
push
std
imul
imul
push
rol
fs
test
add
(bad)
dec
inc
add
adc
mov
sub
jl
pop
aam
aam
int3
jmp
cli
outs
shr
(bad)
call
pop
and
lds
jg
add
cmp
jmp
pop
mov
xor
mov
dec
jbe
sahf
int
jg
std
xchg
pusha
fistp
addr16
sub
sbb
push
addr16
fcmovbe
fisttp
adc
mov
cmc
stc
mov
lock
mov
fwait
dec
retf
sar
enter
mov
mov
popa
aas
(bad)
lahf
adc
pop
frstor
mov
lock
dec
lods
ror
fld
inc
pop
mov
call
xor
xlat
mov
rcl
lahf
mov
cmp
icebp
daa
fwait
xchg
ret
ss
jmp
ror
mov
mov
add
cmps
loopne
push
scas
sub
sahf
js
push
aaa
push
or
mov
(bad)
les
mov
inc
call
in
sub
jle
movs
cwde
mov
xchg
(bad)
or
sub
mov
pop
mov
movs
xor
and
adc
mov
lea
push
ficomp
frstor
pop
int
hlt
or
push
jecxz
dec
shl
push
adc
sub
out
out
dec
in
mov
mov
test
push
sti
jns
adc
cmp
test
imul
sub
das
(bad)
bound
outs
mov
(bad)
mov
das
loope
jnp
add
imul
mov
sar
mov
pop
sub
inc
call
mov
push
shr
or
movs
sub
cli
pop
mov
sub
and
add
dec
arpl
test
xchg
xchg
fimul
out
jbe
xchg
aad
sti
mov
inc
and
daa
sbb
cmp
inc
shr
test
jae
pop
jae
lods
inc
lock
aas
xchg
or
test
sbb
sbb
mov
(bad)
inc
cmp
pop
fstp
dec
nop
push
imul
mov
inc
fiadd
ret
sub
xchg
test
pop
pop
jae
mov
in
push
mov
es
cmps
rol
fcmovnu
stc
xchg
pop
je
xor
not
pop
jmp
and
nop
dec
dec
mov
cmp
jnp
movs
popf
or
arpl
aad
repz
pop
xchg
shr
test
push
pop
xchg
mov
push
inc
xchg
nop
and
xor
xor
xchg
cmps
aaa
imul
xchg
test
retf
stos
xchg
ret
add
and
scas
fist
xchg
jb
pop
fs
std
sahf
pusha
push
repnz
mov
jmp
out
or
mov
int3
mov
cmps
dec
mov
daa
mov
adc
repz
and
ror
fistp
fs
and
lock
or
push
jle
xor
lock
and
or
mov
lods
cli
sbb
ret
jmp
jno
adc
mov
(bad)
jmp
adc
sub
sub
xchg
inc
mov
call
mov
in
in
jb
leave
dec
test
lds
out
cmp
pop
imul
xor
cwde
push
ja
daa
add
stc
cdq
adc
scas
inc
or
sub
nop
cli
add
mov
pop
jmp
or
(bad)
mov
in
sbb
out
and
icebp
gs
mov
xchg
pop
popf
sub
scas
mov
mov
xchg
push
nop
cmp
test
inc
outs
loop
pusha
pop
dec
lods
jno
fcom
pop
daa
into
das
and
mov
push
test
push
scas
sbb
sbb
or
add
fcomip
fld
xchg
clc
dec
and
jge
pop
cmp
aaa
pop
sbb
fidivr
rol
adc
adc
outs
stos
push
pop
inc
push
inc
jne
add
lock
jo
mov
cmp
jle
mov
aam
mov
fst
jb
rcr
jecxz
cmps
int3
xchg
or
or
cmp
or
outs
(bad)
aad
fstp
and
add
inc
les
adc
cli
rcr
scas
out
stos
retf
and
dec
in
and
ret
lods
adc
aas
es
fstp
(bad)
repnz
ins
jle
dec
pusha
jmp
movs
or
adc
jle
shr
outs
sub
add
inc
dec
cdq
adc
dec
call
adc
sub
addr16
pop
adc
xor
fxch
xlat
pop
mov
xchg
(bad)
fxch
stc
es
jae
leave
sbb
push
popf
jp
movs
xor
hlt
in
mov
bound
pusha
or
pop
and
loop
lock
int3
call
or
sub
xchg
out
pop
test
and
or
push
cmp
das
retf
mov
push
(bad)
mov
mul
dec
(bad)
adc
sub
in
jnp
sub
mov
ja
lahf
int3
jb
xor
sub
(bad)
fmul
test
cmp
xor
shl
js
ror
inc
mov
sti
xchg
mov
adc
xchg
sbb
shl
test
test
sbb
cmp
inc
(bad)
out
push
sbb
dec
repz
mov
pop
dec
push
push
xchg
vshufps
xchg
add
jmp
rol
xor
pop
aas
dec
push
mov
push
out
aam
mov
push
repnz
mov
aad
pop
push
test
xchg
scas
add
push
push
mov
rcl
adc
push
xchg
dec
xchg
fstp
lahf
cmc
shl
inc
jnp
pop
test
add
stos
jne
push
bound
or
sbb
sahf
inc
scas
push
sub
mov
xlat
jnp
jno
jl
xchg
test
loop
push
mov
mov
inc
or
add
pminub
xor
out
mov
adc
jmp
rcr
ins
dec
sbb
or
sahf
mov
js
pop
sub
call
adc
or
add
pop
mov
adc
cmp
test
xor
iret
adc
addr16
push
aam
fild
and
push
push
add
icebp
popa
mov
fisttp
test
pop
xchg
in
int
sbb
sub
mov
jle
movs
inc
push
mov
mov
push
repz
and
out
and
sbb
xor
dec
popf
loop
and
mov
pop
jo
ror
out
pop
mov
dec
arpl
mov
imul
(bad)
lea
cmps
js
xchg
jae
iret
xor
inc
addr16
sub
pop
jmp
mov
xor
push
xor
adc
pop
xlat
jmp
pop
mov
dec
jl
movs
jb
mov
jo
push
mov
and
xchg
scas
mov
cmps
lock
mov
xchg
icebp
retf
xchg
shl
mov
es
sub
pop
or
es
sbb
push
adc
popf
mov
repnz
ja
pop
js
sbb
and
shl
sbb
cmp
mov
daa
inc
sahf
push
jb
dec
cmp
cmp
out
adc
jge
inc
or
adc
and
add
xor
sub
cwde
test
adc
inc
fisub
dec
jns
sbb
scas
gs
cmp
in
popa
add
je
mov
xchg
inc
jne
sub
or
bound
add
xlat
mov
sub
sbb
clc
mov
xchg
in
push
pushf
cdq
imul
jno
inc
fisubr
push
or
outs
inc
paddusw
jg
adc
mov
in
cwde
sbb
fs
aam
arpl
aas
mov
in
cmp
out
pop
shl
and
aad
(bad)
sahf
mov
push
sub
ds
and
aam
jb
aas
imul
repz
ror
jo
xchg
and
inc
fmul
mov
xchg
imul
xchg
ss
mov
pop
shl
test
(bad)
xor
lea
bound
out
adc
add
stos
mov
cld
mov
aaa
(bad)
push
push
pop
sub
push
sub
arpl
(bad)
test
test
xchg
movs
fdiv
pop
sub
mov
adc
add
add
es
ins
jg
and
xchg
sub
sbb
add
sbb
sti
xchg
icebp
cmp
pop
jle
and
std
imul
imul
test
scas
sub
dec
cmp
jp
adc
ins
cs
sbb
ss
cmps
(bad)
and
sub
pop
jnp
push
je
xlat
mov
mov
add
and
dec
inc
or
icebp
dec
inc
xlat
pop
dec
repnz
mov
outs
xchg
dec
xor
aad
repz
jns
sub
div
out
mov
in
adc
adc
sbb
jne
pop
xlat
sub
(bad)
loopne
js
mov
ins
jp
ficom
aad
out
bnd
mov
jl
or
inc
inc
add
nop
mov
in
push
pop
(bad)
pop
ror
movs
inc
cmc
dec
(bad)
cmp
imul
and
aas
sahf
and
add
mov
mov
jmp
mov
outs
xchg
test
xor
iret
mov
pop
adc
cmp
sahf
movs
jbe
aad
xlat
pop
sahf
imul
dec
mov
popa
aam
clc
jmp
inc
sub
fiadd
cwde
cwde
test
push
or
test
xchg
nop
mov
push
jmp
test
mov
outs
call
fstp
push
mov
scas
stc
xor
mov
imul
call
mov
cmp
mov
mov
cmp
pushf
push
aaa
cdq
pushw
cmp
sub
mov
scas
ins
mov
mov
nop
xchg
adc
push
add
neg
and
test
fs
mov
ins
call
clc
rcr
test
mov
pop
sub
inc
jle
xor
add
mov
out
daa
xchg
jne
push
cld
and
dec
test
lods
and
push
pop
push
out
cld
hlt
and
pop
imul
and
arpl
mov
add
sti
xlat
movs
push
aam
call
scas
mov
fnstsw
and
loop
mov
jp
outs
(bad)
and
adc
arpl
mov
ret
test
inc
ja
dec
jo
daa
fwait
out
cmps
cmps
shl
jne
dec
ins
mov
loop
mov
cmps
dec
xor
fs
out
sbb
leave
retf
sub
mov
or
cs
cmps
fmulp
dec
and
jmp
lock
ins
sub
mov
jmp
add
fs
add
push
in
lahf
arpl
jb
fcomi
push
leave
mov
loop
xchg
sub
mov
mov
loopne
aam
fsubp
mov
mov
and
dec
repnz
push
dec
mov
test
cmp
jp
jns
jns
xchg
xchg
call
loope
fld
or
js
add
push
push
fdivr
out
adc
movs
fxch
push
mov
call
cmps
cmp
dec
mov
mov
scas
jo
cwde
pop
sbb
out
imul
add
outs
out
retf
jno
dec
jmp
(bad)
jmp
lods
mov
xchg
fidiv
jbe
sub
cli
jmp
push
pop
sbb
add
add
pop
mov
cli
addr16
icebp
outs
jmp
mov
pop
dec
cmp
jg
sbb
enter
push
pop
mov
jge
out
inc
push
(bad)
and
adc
cmp
pop
outs
rcr
loop
adc
loope
pusha
mov
dec
je
mov
mov
daa
stc
cli
xchg
xor
pop
bound
pop
je
push
lds
in
call
or
(bad)
mov
test
lods
mov
push
mov
jmp
js
lods
ret
push
test
sub
sbb
adc
sbb
or
push
jg
ss
fs
stos
xor
neg
jnp
arpl
add
mov
out
(bad)
(bad)
push
aas
sahf
jg
mov
or
or
push
sbb
movs
cs
xor
icebp
sub
cmp
cli
jle
cmp
(bad)
xor
or
stos
pop
cmps
push
or
mov
sahf
int
push
fnstenv
outs
push
pop
jnp
mov
imul
fist
scas
repnz
shl
jb
mov
add
and
mov
xchg
dec
xchg
mov
out
std
iret
fxch
imul
jle
sbb
jno
aaa
vpmadd52huq
cli
aaa
jae
mov
ror
mov
xor
popa
dec
out
enter
mov
stos
jg
mov
aas
xor
jne
arpl
leave
in
push
inc
push
sbb
adc
fcomi
mov
shl
add
push
pop
(bad)
xchg
push
xor
or
push
test
stos
or
push
add
(bad)
cmp
mov
mov
inc
mov
adc
adc
in
leave
xchg
xchg
add
das
dec
or
cmp
hlt
in
test
(bad)
dec
inc
in
push
adc
push
cld
inc
loop
(bad)
jae
or
pop
das
mov
jmp
or
jmp
lahf
xchg
pop
jmp
test
gs
and
sbb
jg
xchg
sub
out
jno
dec
cmps
mov
iret
jns
mov
fs
test
jbe
stc
out
adc
test
add
xor
not
(bad)
mov
push
test
mov
or
xor
mov
cmp
jb
add
in
inc
xor
ss
or
xchg
xchg
pop
xor
lds
test
inc
mov
push
test
inc
jmp
into
idiv
mov
add
rcl
xor
jno
sar
in
stos
stos
in
imul
mov
xor
dec
add
leave
mov
pushf
cs
ss
movs
mov
fdivrp
pop
cmp
lods
cld
sbb
jle
mov
cmc
popa
dec
cmp
xchg
icebp
stos
mov
hlt
daa
stos
ret
or
and
xchg
pop
jecxz
fwait
or
aas
in
shl
iret
and
pop
push
stc
scas
fld1
popf
stos
mov
sub
ret
shl
adc
lds
sub
fcomp
jg
pop
lods
jmp
add
aaa
cmp
pop
mov
outs
ficomp
add
xlat
loope
mov
pop
test
sub
cmps
aas
add
push
clc
call
leave
scas
dec
fdivr
add
xor
jle
push
test
cmps
sbb
addr16
(bad)
xlat
aad
lods
loopne
loopne
mov
aaa
call
mov
pop
and
push
frstor
adc
pop
xchg
add
jecxz
inc
sar
sahf
fidivr
jne
jg
test
gs
or
xlat
sti
cmp
jl
jae
out
jne
pop
in
(bad)
cdq
inc
xchg
sbb
adc
scas
fmul
stc
push
fld
cmp
sbb
pusha
dec
add
je
mov
add
adc
inc
or
pop
cwde
test
jns
pop
scas
mov
pusha
push
fs
ret
mov
pop
pop
mov
sbb
add
mov
test
inc
(bad)
dec
movs
gs
je
imul
inc
outs
inc
popa
outs
cmc
lock
jns
mov
mov
aad
sti
clc
std
and
mov
adc
xor
sub
mov
arpl
ins
fist
mov
sub
sbb
outs
sbb
stos
add
aaa
mov
in
mov
inc
mov
jno
inc
dec
jecxz
sbb
mov
pop
cli
iret
dec
ret
xchg
sub
push
push
pushf
mov
in
add
repnz
dec
out
adc
es
push
jl
adc
jnp
dec
(bad)
ins
and
std
add
xchg
xchg
out
hlt
mov
sbb
mov
repz
adc
sub
push
mov
dec
sti
dec
les
cmp
(bad)
call
xchg
inc
jb
into
mov
jle
cmp
ja
int3
jo
lahf
out
push
jae
sbb
es
mov
jbe
cwde
icebp
xor
ror
cmc
mov
adc
pop
mov
int3
xor
fst
adc
out
jmp
add
mov
fmul
cmp
push
dec
dec
mov
outs
jno
ins
out
loop
out
in
push
inc
(bad)
hlt
sbb
fs
xchg
mov
test
inc
retf
pop
sub
fimul
ret
xor
rol
aas
hlt
test
in
mov
xor
mov
pusha
dec
push
retf
ret
stos
popf
test
adc
fsubr
hlt
jmp
xor
push
jnp
in
pusha
jne
xor
jecxz
jno
mov
popa
pop
or
or
and
xchg
push
inc
adc
div
movs
fmul
rol
xchg
loopne
xchg
scas
lds
leave
pop
bound
(bad)
push
jmp
clc
push
test
ror
out
and
and
inc
inc
imul
movs
dec
xchg
clc
into
push
nop
sahf
sub
fist
out
aam
retf
lock
and
ficomp
enter
shr
mov
jmp
add
xor
nop
sbb
add
lahf
mov
push
or
fwait
sub
mov
icebp
pop
jns
xor
add
sbb
or
cmps
imul
xor
nop
xlat
test
retf
shl
cmc
dec
cdq
stos
mov
aad
and
mov
(bad)
retf
cmp
or
xchg
push
push
bound
dec
mov
add
in
push
mov
or
xchg
repz
in
mov
and
push
sub
xor
inc
xchg
jno
sbb
push
adc
repz
pop
jl
gs
mov
jle
inc
mov
push
jno
cwde
xor
movs
and
icebp
loope
je
pop
or
aad
fldcw
push
inc
arpl
mov
leave
sbb
mov
stos
bnd
mov
(bad)
or
mov
aam
fmulp
push
and
cbw
adc
sahf
leave
test
test
scas
ins
les
shr
stos
pusha
out
ja
cdq
stos
iret
pop
test
xor
cmp
dec
mov
push
adc
in
jbe
fstp
cmp
ret
push
adc
(bad)
aaa
dec
mov
jno
adc
cmps
mov
jb
mov
pop
std
push
(bad)
dec
imul
xor
xor
pop
jle
cmc
xor
xchg
sar
mov
pusha
add
je
nop
into
stc
xor
pop
add
mov
xchg
mov
jns
stos
stc
sbb
lods
mov
aaa
out
jl
int3
mov
jnp
jge
push
or
dec
ret
out
pusha
popa
fidivr
popa
loope
sbb
cmp
lods
jecxz
or
and
lods
adc
test
dec
test
mov
fxch
xchg
pop
add
mov
jl
loop
dec
aaa
arpl
cmp
push
jb
fwait
xchg
sahf
sbb
(bad)
push
sbb
lods
xor
xchg
jmp
xor
xchg
jns
cmps
sbb
inc
or
dec
lods
in
gs
ss
or
arpl
sbb
sub
mov
lods
test
mov
add
call
aam
sub
popa
aam
add
mov
pop
dec
test
in
je
dec
jae
lods
ds
lds
das
(bad)
push
shl
(bad)
out
pop
dec
retf
clc
outs
call
or
jo
shr
pop
test
xchg
(bad)
push
push
sbb
push
push
cld
pop
xor
(bad)
push
xor
or
sti
pop
repz
scas
push
sub
scas
(bad)
(bad)
jmp
pop
lahf
bound
dec
jno
ror
fstp
adc
(bad)
cmp
ss
dec
mov
lods
xchg
sbb
adc
push
and
neg
popa
jmp
iret
js
pop
and
loope
fdiv
clc
cli
aaa
stos
enter
mov
jecxz
in
or
push
ds
mov
cmp
xchg
pop
iret
jg
aas
mov
mov
dec
fidiv
(bad)
jle
cld
pop
mov
or
xor
test
and
dec
mov
sahf
jns
push
mov
shl
aam
clc
or
cmps
cmp
jmp
or
or
fist
cmp
pushf
ja
and
jecxz
lods
rol
jle
cmp
shr
pop
je
retf
sbb
lea
xchg
in
push
xor
stos
(bad)
ficomp
out
cli
dec
mov
daa
daa
xchg
or
sti
mov
jge
sbb
push
std
pop
retf
sbb
cli
rcr
add
add
pop
mov
je
mov
sub
push
or
jmp
stos
out
mov
test
and
xor
js
mov
dec
nop
or
fldenv
xor
adc
test
dec
or
jb
jb
mov
pop
sti
inc
call
mov
adc
in
jle
dec
sbb
xor
mov
js
jae
adc
and
xor
fcomi
mov
pop
fst
inc
xchg
or
(bad)
lods
out
jnp
jg
sti
leave
jg
mov
and
xchg
out
dec
xchg
mov
xchg
sub
or
shl
fsubp
stc
cs
push
adc
sar
sahf
outs
sar
(bad)
into
cdq
loop
xchg
and
xchg
retf
pop
(bad)
adc
nop
push
mov
jecxz
or
and
xchg
inc
mov
xor
pop
cmc
fsub
xor
cdq
fild
add
xor
push
retf
mov
mov
cs
gs
in
sub
mov
daa
nop
sub
lods
sub
and
mov
pushf
in
imul
add
add
cdq
cmp
and
inc
mov
lea
arpl
retf
scas
xchg
pop
add
dec
and
out
in
xchg
in
dec
stc
cdq
jl
mov
popa
mov
stos
push
xor
out
mov
inc
add
cmp
mov
xchg
clc
mov
fsubr
das
pushf
dec
jae
daa
mov
add
xchg
pop
or
mov
fisubr
mov
mov
pop
(bad)
mov
(bad)
ja
add
or
cmp
shl
int
mov
gs
xchg
jecxz
lods
dec
pop
push
pop
ds
pop
adc
adc
cmp
mov
pop
mov
fs
mov
mov
adc
cs
lods
or
jns
shl
xchg
rcl
movs
icebp
shl
fld
movs
(bad)
mov
int3
lahf
jmp
loope
dec
mov
shl
popa
jmp
es
xor
pop
add
xchg
push
push
mov
or
inc
dec
lahf
adc
lahf
inc
sub
mov
data16
cmc
imul
loop
push
inc
sahf
(bad)
dec
mov
sbb
xchg
cwde
add
daa
cmp
mov
mov
cmp
mov
jge
add
adc
jnp
or
fstp
cdq
sub
in
sbb
fiadd
clc
sub
inc
jo
ins
pop
pop
daa
sbb
popf
lahf
(bad)
test
mov
sub
aas
movs
stos
movs
gs
push
add
add
fsubr
mov
jae
dec
sbb
mov
adc
mov
sub
sub
sub
push
shl
jo
leave
sub
daa
adc
sub
add
cmp
jno
mov
jnp
retf
and
adc
or
xlat
xchg
je
gs
pusha
xlat
cmp
mov
xchg
sbb
and
das
cdq
loop
mov
mov
pop
jns
std
jle
int
fcom
leave
cwde
cdq
lods
daa
xor
pop
mov
mov
ret
jp
mov
xchg
fsubr
pushf
and
xor
xor
cmp
adc
xor
lock
sahf
cld
ja
add
mov
scas
loop
loop
je
pop
in
xor
dec
shr
loope
out
imul
pop
sti
cmps
mov
and
dec
icebp
stc
lea
ret
int3
(bad)
fs
jl
(bad)
xchg
lea
dec
adc
int
fstp
in
test
repz
push
dec
dec
call
mov
retf
repz
rcl
sar
jmp
ret
inc
lea
repz
imul
in
scas
xor
out
inc
test
cmc
lahf
push
imul
push
or
outs
xchg
lods
cmc
xchg
mov
sub
xchg
dec
mov
out
int3
adc
xor
xor
adc
data16
jg
mov
neg
xchg
dec
repz
fcomp
or
push
jecxz
ret
mov
arpl
cli
mov
jmp
(bad)
lea
cwde
add
and
loopne
push
cmp
cmps
sar
(bad)
pop
or
rol
stc
cdq
outs
xchg
repz
(bad)
cdq
and
stos
jne
cli
js
add
loopne
sar
fisttp
mov
sti
fldcw
push
push
cwde
cmp
fmul
push
xchg
fisttp
sti
std
sub
(bad)
in
mov
rcr
pop
pop
pop
inc
retf
xor
adc
sbb
and
fistp
rcl
sahf
add
jo
dec
loopne
inc
xor
fisub
adc
(bad)
pop
sub
cmc
mov
icebp
cwde
lods
cmp
fidivr
retf
jmp
aaa
(bad)
or
jg
(bad)
in
push
into
or
fisubr
lods
test
push
and
es
mov
adc
jns
or
inc
frstor
fist
mov
stos
xchg
inc
cwde
scas
das
dec
and
gs
cwde
aas
pop
mov
iret
icebp
adc
scas
movs
int
pop
mov
xor
xor
push
mov
lahf
adc
cmp
xor
fld
jns
sub
inc
add
call
retf
mov
pushf
fldcw
xchg
adc
ret
inc
pop
scas
jae
lods
add
retf
pop
push
dec
fimul
xchg
cmp
push
inc
sbb
xchg
movs
cmps
icebp
cmp
and
sbb
dec
jae
ss
addr16
push
(bad)
cld
fisttp
push
lods
daa
out
dec
mov
movs
gs
push
mov
xchg
test
add
cmp
lahf
rcl
fxch
in
sbb
jmp
lds
adc
or
or
sub
jbe
sbb
(bad)
jmp
push
test
popf
js
sub
test
retf
and
pop
mov
adc
pop
push
out
sbb
push
adc
jae
pop
xor
and
out
(bad)
add
ds
fisttp
mov
test
dec
in
cwde
(bad)
call
rol
push
cmp
sbb
int
pop
xor
sbb
push
pushf
shl
imul
sub
or
hlt
cwde
xchg
je
cmp
sbb
sar
neg
inc
aad
mul
movd
outs
push
xchg
cs
in
pop
icebp
arpl
cmp
out
and
sar
test
movs
add
mov
jg
scas
and
outs
pop
into
ds
xchg
das
add
cmc
mov
xchg
icebp
fwait
or
mov
pop
(bad)
or
(bad)
jmp
les
mov
into
mov
push
das
adc
mov
(bad)
or
cmp
pusha
out
lock
mov
and
scas
xor
dec
cmp
cmps
and
cld
mov
mov
ss
xlat
inc
cld
fwait
mov
pop
mov
jmp
pop
loopne
sar
aad
push
mov
push
inc
mov
test
fld
jno
and
jge
mov
ffree
movs
data16
jl
sar
mov
aam
or
fsubr
xor
leave
iret
arpl
aam
push
(bad)
dec
mov
dec
mov
popa
dec
fs
lea
movs
cmps
icebp
adc
jge
push
dec
push
push
sbb
mov
bound
repnz
mov
jbe
or
pop
ss
mov
dec
sbb
ds
xchg
jnp
sahf
out
push
adc
je
mov
and
iret
jl
fnsave
mov
jne
ins
mov
push
sahf
sub
jbe
cdq
stos
in
out
rcr
mov
imul
mov
mov
mov
popf
cs
jbe
xor
push
cmp
pop
mov
adc
dec
fimul
and
fadd
or
xchg
pop
jp
mov
nop
mov
mov
sub
mov
or
popf
sbb
fwait
ins
xor
(bad)
or
mov
jns
imul
xchg
clc
mov
mov
sbb
js
cmp
int
enter
xor
fstp
xchg
dec
and
lahf
mov
hlt
loop
outs
sbb
sub
fs
retf
test
inc
sub
inc
inc
loope
xor
(bad)
sbb
xchg
retf
cmp
out
xchg
mov
into
jmp
out
stc
aam
idiv
aas
outs
xor
jecxz
movs
popf
sahf
cld
fisttp
pop
jo
and
lahf
call
or
cmp
dec
sbb
sti
sbb
outs
inc
std
dec
cmps
scas
pushf
daa
add
repz
adc
lock
retf
push
mov
push
lods
jo
sbb
pusha
neg
ins
push
in
jecxz
inc
push
loop
mov
cli
or
aam
push
mov
push
leave
dec
test
pop
jp
js
push
xchg
clc
mov
test
inc
(bad)
mov
sub
xor
popa
xchg
sti
fistp
jmp
xor
ret
ja
adc
jl
test
inc
mov
out
sub
xor
or
hlt
imul
lea
sbb
sub
mov
stc
leave
xchg
jg
pop
daa
aas
mov
pop
xchg
jmp
pop
mov
into
das
mov
test
fs
jp
mov
mov
pop
mov
(bad)
std
cwde
daa
out
mov
push
imul
aam
test
sbb
push
jp
repnz
mov
adc
test
mov
xchg
icebp
stos
addr16
(bad)
repnz
bound
js
inc
popf
leave
pop
jnp
xlat
arpl
sbb
loope
mov
jnp
mov
aad
xlat
pop
inc
add
cs
aad
dec
scas
push
and
in
inc
shl
xor
mov
and
or
(bad)
hlt
stc
or
data16
mov
mov
inc
push
dec
aas
(bad)
retf
ss
int
sub
frstor
xor
push
xor
or
xor
jmp
jmp
test
pop
jo
xor
sbb
pushf
xchg
cli
mov
sub
dec
and
mov
jge
cmp
div
mov
dec
inc
dec
or
dec
push
movs
mov
in
dec
div
xchg
das
clc
gs
jp
sub
xchg
jmp
mov
and
push
cs
adc
pop
loop
xchg
adc
push
imul
cli
call
popf
inc
cmp
jg
or
pop
cmp
jns
aad
aas
pop
clc
dec
(bad)
retf
mov
mov
aaa
jg
xor
push
dec
fcmovbe
dec
mov
pop
or
fisub
adc
xor
mov
mov
add
adc
mov
leave
(bad)
jge
scas
mov
mov
inc
ins
or
mov
sbb
mov
push
sub
sub
aas
imul
inc
xor
sahf
or
sahf
cmps
sbb
add
sub
iret
out
cmps
rol
cwde
sahf
add
popf
mov
cwde
rcl
mov
pop
fimul
shr
cmp
xchg
popa
sti
retf
cwde
iret
outs
push
add
shl
xchg
sar
pop
cs
sbb
lds
pshufw
sub
and
outs
jmp
imul
adc
push
std
scas
mov
add
jns
cli
les
rcr
shr
lock
outs
push
dec
add
pop
mov
int
mov
adc
dec
xor
inc
dec
xor
and
and
jo
cmp
push
retf
jmp
and
jl
xchg
inc
cmp
sbb
jnp
daa
push
les
sub
adc
jnp
sbb
mov
xor
inc
retf
pop
mov
aad
cmp
or
add
pusha
mov
adc
mov
lods
mov
sub
sbb
ficomp
dec
jno
sub
jne
pushf
cs
sbb
and
cmps
cli
inc
mov
iret
inc
or
ret
rcr
inc
xchg
in
addr16
dec
add
sar
int
call
jmp
rol
pop
dec
fistp
mov
call
push
jl
shl
push
mov
pushf
fsub
movs
movs
mov
mov
inc
xchg
push
cdq
in
mov
dec
cs
push
jg
addr16
jnp
fild
fisttp
add
in
imul
retf
into
rol
adc
xor
adc
int3
dec
adc
leave
mov
addr16
mov
mov
clc
inc
dec
jl
daa
test
cmp
inc
stos
out
mov
mov
adc
jmp
adc
xor
mov
mov
test
dec
jae
push
mov
add
inc
(bad)
jg
fwait
mov
cli
jmp
jmp
data16
sub
test
jp
ins
fcomi
mov
sub
daa
les
mul
add
in
sub
cmp
or
and
add
mov
mov
jg
ffreep
(bad)
loope
cs
dec
mov
mov
and
pop
pop
test
dec
xchg
lahf
xor
xor
inc
xlat
je
dec
stc
dec
iret
mov
or
lods
mov
icebp
jns
hlt
jge
gs
add
mov
xchg
mov
cmp
or
adc
out
aaa
movs
pushf
and
push
scas
xor
out
jmp
popf
and
aad
and
repz
ins
mov
or
mov
cmp
loope
les
out
pop
shr
fs
call
adc
push
cmp
in
cwde
lock
fcomp
icebp
mov
dec
sbb
in
xor
int
jp
cmps
sbb
jbe
jnp
or
stos
jmp
out
fist
push
xchg
mov
dec
ins
aaa
scas
movs
gs
imul
or
sbb
dec
mov
stos
out
test
je
iret
mov
loope
pop
xchg
sbb
imul
cdq
xchg
or
pop
add
adc
cmp
xchg
(bad)
rol
jne
jp
or
push
dec
cli
stos
inc
in
cs
xlat
pop
ss
pusha
outs
into
sbb
sbb
pop
dec
push
outs
jmp
cmps
repz
adc
arpl
rcr
(bad)
call
das
call
in
inc
icebp
shl
cmp
dec
fsubrp
add
mov
or
xor
std
jl
hlt
stos
jmp
jecxz
repz
cwde
enter
xchg
jb
dec
jbe
jmp
or
fs
mov
xor
and
retf
call
add
push
stos
jmp
push
(bad)
int3
retf
jmp
mov
and
or
cmps
mov
enter
getsec
xchg
icebp
add
icebp
lea
icebp
into
(bad)
fdivr
inc
mov
mov
and
mov
fdiv
add
dec
outs
cmp
fdivp
jo
ja
cmp
fiadd
pop
push
dec
sbb
mul
cmp
loop
xlat
inc
xchg
mov
or
sahf
int
stos
stc
sub
mov
ret
cmps
jbe
dec
push
test
push
pop
fucomp
xchg
mov
fisubr
inc
ret
add
add
pusha
shl
fnstsw
mov
stos
mov
in
mov
es
neg
addr16
pop
jle
push
(bad)
sahf
dec
nop
retf
jo
xchg
in
cmp
lock
jae
and
ja
fistp
std
fisub
lock
sub
fldenv
fsub
adc
push
inc
call
push
adc
mov
(bad)
jbe
call
sar
cmp
cmps
dec
int3
adc
aaa
fs
shl
push
scas
popa
bound
jecxz
ss
pop
mov
outs
loop
cdq
mov
sub
mul
test
cdq
sbb
mov
and
sub
sbb
mov
cs
(bad)
enter
sti
popa
mov
fcom
mov
aas
xchg
pop
sbb
mov
pcmpeqb
jl
test
mov
loopne
aas
(bad)
scas
add
mov
bound
iret
in
sahf
(bad)
aam
not
fs
mov
repz
aaa
jge
jae
bound
imul
xchg
stos
cwde
popa
mov
js
jbe
jns
sub
jl
sar
cmp
mov
clc
or
(bad)
cmc
ja
pop
dec
cld
jle
sbb
xor
cli
cmp
inc
ins
leave
pop
iret
ins
jge
sahf
cmp
add
pop
out
data16
add
ficomp
or
dec
(bad)
sahf
add
or
repz
xchg
push
retf
mov
mov
das
je
daa
cmps
mov
aas
movs
mov
mov
call
xchg
dec
xchg
jge
fstp
repnz
mov
(bad)
mov
sub
push
adc
pop
sbb
lea
and
adc
add
ds
fdivr
cdq
sbb
and
pop
retf
add
outs
rcl
shr
pop
inc
ret
mov
ins
adc
mov
and
xchg
rcl
sti
mov
push
out
mov
lahf
and
mov
test
sub
or
sub
pop
das
mov
mov
(bad)
pop
or
mov
dec
call
sti
mov
jecxz
lea
(bad)
shr
mov
dec
cmps
push
loope
jp
push
mov
push
shr
mov
xor
push
mov
fwait
pop
pop
outs
push
aaa
mov
ins
ret
retf
add
(bad)
popf
push
mov
push
sahf
and
hlt
xor
mov
or
shr
shl
fdivr
das
push
iret
xchg
popa
stos
jg
mov
mov
ss
(bad)
(bad)
ins
jmp
call
data16
mov
ins
int3
add
adc
ins
cmp
sub
lahf
push
xor
mov
mov
sbb
fnstcw
(bad)
es
mov
push
mov
aaa
cld
loopne
mov
jns
jle
adc
fadd
inc
cwde
ss
and
xchg
sub
pushf
es
pop
push
jo
adc
lock
loop
adc
push
sub
dec
cmp
mov
rcr
jno
das
imul
jecxz
cmc
add
(bad)
sbb
scas
pop
(bad)
push
jmp
out
aam
les
cmc
jecxz
pop
retf
jbe
dec
rol
pop
out
scas
movs
or
dec
ret
mov
aad
xor
jle
xchg
cmps
je
xor
outs
jp
pop
(bad)
fadd
fnstsw
in
mov
dec
stos
dec
and
and
fistp
add
div
sub
sbb
inc
mov
sbb
icebp
dec
pushf
push
pop
jle
test
fcomip
push
test
retf
mov
stos
icebp
or
sti
and
dec
ficomp
cmps
outs
test
jl
xchg
mov
aaa
sbb
jp
jmp
jge
jns
push
gs
or
add
push
xor
dec
cdq
mov
mul
or
dec
clc
scas
les
push
loop
jno
fimul
or
ret
test
pop
in
test
lods
adc
sahf
enter
aaa
(bad)
jmp
add
fimul
xchg
les
mov
mov
xchg
int3
cs
scas
aas
dec
mov
mov
adc
js
rcl
xchg
dec
mov
jge
les
xchg
pop
sub
daa
dec
sar
inc
inc
aam
push
sahf
mov
(bad)
retf
sbb
pop
mov
mov
push
mov
xchg
xor
cmp
adc
lds
(bad)
mov
dec
add
mov
mov
fstp
inc
(bad)
mov
sub
js
jl
mov
in
add
jnp
mov
jae
mov
jecxz
in
xchg
jb
jp
out
jmp
dec
inc
jge
mov
jl
out
add
mov
mov
push
rol
mov
call
scas
mov
data16
mov
adc
inc
outs
sbb
jo
cwde
(bad)
dec
dec
gs
and
lock
xchg
scas
imul
xchg
jmp
mov
adc
retf
dec
mov
xchg
sbb
imul
sub
mov
pop
mov
lods
and
loope
jp
jno
xor
aam
addr16
pop
cdq
jmp
pusha
sbb
adc
xor
stos
mov
jmp
rcr
mov
lods
jb
daa
add
popf
ds
nop
ds
jno
fisttp
mov
or
push
jle
cs
pusha
lods
mov
repnz
pop
out
jns
call
cmp
add
imul
cmc
fidiv
push
mov
sbb
mov
xor
mov
ja
out
mov
add
and
(bad)
sbb
push
jg
jge
leave
pop
std
xchg
dec
scas
ret
push
pusha
jp
push
popa
mov
loop
sbb
xchg
(bad)
idiv
mov
retf
or
jno
pop
popf
add
and
and
lahf
mov
pop
pushf
mov
mov
jmp
xchg
int
mov
aam
into
pop
(bad)
in
sbb
clc
div
xor
jo
dec
or
jmp
int
je
mov
push
adc
fs
dec
cwde
mov
in
aas
or
icebp
dec
das
jecxz
popf
sub
mov
sub
jo
or
gs
dec
jb
stos
in
or
mov
js
shl
aad
mov
cmps
push
dec
or
stos
push
adc
inc
int3
xor
test
(bad)
movs
jno
mov
or
pop
outs
sub
sub
mov
movs
inc
push
rol
cmp
and
inc
mov
scas
add
adc
sub
xor
mov
xor
ds
push
cmps
out
mov
mov
push
or
movs
pop
cmc
aas
f2xm1
sub
fisttp
jb
mov
mov
into
jne
ins
sub
xchg
add
dec
ret
mov
loope
dec
cmp
push
clc
mov
pop
pcmpeqw
jl
inc
and
je
cmp
out
popf
jecxz
mov
pop
mov
rcl
dec
push
xor
mov
xchg
mov
inc
jmp
sub
sahf
cmps
(bad)
je
test
js
xor
popa
inc
adc
fdiv
mov
popa
leave
push
pop
jp
mov
xchg
jecxz
shl
pop
repz
xlat
mov
push
jl
and
mov
xchg
test
adc
push
pop
and
dec
ds
xchg
add
adc
add
cmp
sbb
int3
fwait
(bad)
rcl
sahf
push
add
cld
mov
or
iret
mov
imul
xor
in
cmp
sbb
add
xor
pop
bound
cwde
sub
add
jg
pusha
add
pop
movs
in
call
ror
stos
std
int3
int
mov
retf
mov
scas
sub
and
shr
jno
cs
clc
ss
imul
and
and
xchg
and
jmp
lds
daa
push
xor
xchg
mov
push
xor
or
mov
out
sbb
mov
sbb
pop
push
jb
mov
sti
push
and
ins
out
lea
cdq
test
push
cs
test
leave
cwde
sub
shl
or
out
jns
retf
(bad)
mov
cs
ja
bound
inc
loop
jg
push
push
ja
stc
mov
or
mov
sti
push
fist
iret
rol
movs
sub
sub
xor
lods
cmp
pop
imul
xchg
and
mov
jecxz
jle
xor
fcmovb
(bad)
fwait
outs
sahf
ret
or
add
adc
mov
mov
mov
scas
dec
std
je
push
bound
es
xchg
jmp
sbb
outs
dec
int
pop
xchg
add
enter
dec
sbb
or
in
test
inc
xor
cmps
cmp
xchg
mov
sbb
xchg
or
ss
pop
jp
mov
mov
dec
(bad)
cdq
push
(bad)
pop
add
loopne
cmp
dec
call
out
les
daa
cdq
icebp
inc
cmp
cmp
into
xor
mov
stc
imul
sti
mov
fisubr
jl
pop
clc
int3
into
aaa
cmp
dec
mov
inc
sti
int
psrld
rcl
(bad)
mov
pushf
jb
cmps
cdq
repnz
jo
pop
jp
inc
lds
outs
jp
cld
dec
or
dec
dec
mov
das
aas
in
add
nop
jne
mov
repz
lock
mov
loopne
call
ret
ins
out
mov
cmp
xchg
sar
(bad)
es
mov
or
ss
dec
(bad)
sub
mov
jg
stos
cwde
in
retf
out
hlt
xor
fwait
xor
loope
test
cmp
mov
popf
mov
sub
mov
outs
lea
adc
push
cmp
data16
and
sub
call
lods
sbb
scas
(bad)
mov
stos
outs
dec
push
(bad)
mov
mov
xor
sub
std
mov
jle
repnz
xor
stc
pushf
inc
sub
mov
test
pop
sbb
cmp
popf
es
sbb
pop
pop
adc
mov
dec
mov
ins
cmps
cmps
jo
xor
pop
cmp
add
comiss
mov
mov
mov
inc
fmul
mov
pop
dec
xor
ja
sub
(bad)
sar
xchg
lods
test
xchg
cli
adc
fcos
popa
mov
mov
scas
jle
dec
jae
ss
xor
jge
nop
and
cld
push
jo
jle
sub
test
dec
fchs
jae
jl
hlt
or
xchg
mov
(bad)
pushf
movs
ror
xchg
in
dec
sub
mov
jle
shl
jb
adc
jmp
scas
and
popa
push
inc
mov
ds
jno
sub
adc
lds
pushw
sub
fwait
mov
cmps
inc
in
push
push
xchg
push
inc
bound
and
mov
in
mov
push
(bad)
das
mov
jp
(bad)
mov
popa
cmc
xchg
scas
ficom
mov
cmp
jmp
aam
rol
mov
repz
fwait
and
xor
(bad)
and
jp
sbb
cmp
loop
cmps
les
pushf
cmp
push
addr16
sbb
or
fst
out
push
xor
inc
and
pop
xchg
int
sub
mov
in
ins
inc
sbb
jo
ds
and
sub
(bad)
jmp
gs
push
jno
push
or
call
pop
(bad)
out
(bad)
fiadd
push
cmp
fdivr
(bad)
aam
mov
out
sub
(bad)
outs
push
(bad)
adc
inc
icebp
test
cmp
xchg
pop
into
mov
jmp
pop
lock
mov
sar
(bad)
xor
adc
call
add
xor
scas
idiv
das
arpl
sub
int
jne
mov
jne
mov
add
cmps
test
ret
fisttp
xor
ret
xchg
jb
cmp
sub
out
fadd
and
and
int3
ret
repnz
stos
dec
into
jmp
rcr
sti
sbb
sub
pusha
lahf
pop
inc
mov
ins
cmp
inc
dec
scas
ds
mov
dec
pop
inc
test
push
adc
sahf
and
lock
shr
mov
sbb
cmp
and
in
cmp
cmp
cmp
sbb
xchg
shr
call
cld
jo
(bad)
xchg
adc
jl
cmp
mov
into
sub
mov
sbb
fcomp
pop
(bad)
cdq
inc
repnz
dec
mov
sbb
cmp
ja
mov
inc
xor
jne
push
retf
inc
popf
ror
fstp
jg
rol
shl
aas
leave
mov
sbb
test
mov
fisub
pop
cmp
xlat
jnp
jbe
jb
xor
les
bound
mov
arpl
sar
fnstcw
out
mov
sub
sub
xor
js
in
mov
or
mov
and
retf
sbb
adc
sub
in
lods
dec
jae
in
push
outs
inc
xchg
lods
bound
add
sbb
mov
add
cmc
int
jg
mov
dec
inc
add
cmp
xchg
aam
popa
inc
sar
lods
leave
mov
clc
nop
xor
ror
push
push
aad
jl
outs
jl
or
fwait
xchg
popa
lock
pop
ins
pop
inc
sub
aas
adc
mov
dec
add
xlat
and
(bad)
jmp
std
push
mov
xor
adc
or
sub
std
sub
das
sub
or
jl
test
ja
adc
push
imul
xchg
inc
xchg
and
pop
xlat
jb
(bad)
lock
xlat
xchg
or
test
adc
add
xchg
push
sub
dec
push
iret
fsubr
jbe
fld
das
add
in
pop
shl
pop
push
shr
pop
sub
mov
dec
mov
out
dec
pop
fbld
jg
adc
inc
into
pop
xor
aaa
inc
cmp
or
movs
pop
jmp
gs
dec
add
dec
pop
shl
xlat
or
scas
fisttp
or
push
loope
clc
popf
mov
push
push
js
sbb
or
or
call
push
sbb
cld
call
push
inc
loope
jmp
sti
call
dec
test
stc
aad
js
in
or
es
mov
enter
cmps
call
pop
retf
imul
inc
dec
sub
shl
das
mov
add
add
push
ret
dec
xor
fwait
test
repnz
cmc
jle
xchg
lods
mov
das
les
aam
jecxz
out
xlat
shl
pop
push
aam
movs
test
mov
adc
jge
push
or
cdq
rcl
adc
dec
popf
pop
add
repz
and
cmp
fwait
jns
bound
dec
or
jle
push
inc
mov
mov
movs
push
mov
sahf
add
mov
cdq
mov
fnsave
xor
adc
in
push
aas
cmp
sahf
mov
cld
sub
mov
leave
shl
push
dec
shl
es
aam
dec
adc
cmp
cmps
xor
test
sub
inc
ja
(bad)
or
add
xchg
ins
movs
call
push
imul
sbb
repnz
inc
sub
js
fisttp
movs
push
cmps
(bad)
and
pop
mov
push
push
xor
xlat
enter
fst
lods
arpl
mov
out
inc
or
mov
cmc
sbb
pop
fiadd
mov
mov
shl
jmp
xor
inc
cld
(bad)
std
mov
shl
les
mov
scas
scas
add
mov
inc
inc
fadd
cmp
push
ins
fwait
xchg
push
cld
or
cs
xchg
fcomip
pushf
and
pop
jmp
fcom
shr
jp
and
mov
jno
mov
add
out
lock
int
xor
mov
cmp
jge
and
lods
jp
adc
sub
dec
(bad)
scas
sbb
lock
les
jle
pop
aam
inc
cmc
(bad)
xor
mov
xlat
pop
sbb
lea
into
inc
or
jmp
cwde
stos
shr
stos
mov
push
popa
cmps
or
jne
xchg
retf
push
push
mov
xchg
movs
xor
(bad)
push
adc
pop
cmp
mov
jno
loopne
xlat
mov
test
dec
out
fst
int
sub
popf
xlat
xor
stos
dec
cdq
adc
test
loope
cli
mov
sub
push
jge
(bad)
and
sub
(bad)
mov
mov
xlat
push
sub
pop
fdiv
add
out
and
add
dec
or
add
into
or
aad
jne
pop
les
std
mov
pop
scas
addr16
in
les
inc
shr
xor
or
xchg
js
in
push
pop
or
adc
or
dec
scas
pop
loopne
xor
mov
out
jge
push
icebp
xchg
sbb
pop
add
push
les
inc
inc
add
xchg
mov
js
fwait
cmp
mov
xor
push
js
jle
fwait
adc
fild
inc
sbb
fs
add
xor
mov
jne
jge
ror
mov
mov
sbb
dec
dec
inc
loope
mov
push
(bad)
sub
cmp
pop
adc
cmp
cli
fst
fdiv
data16
cmps
out
test
jne
leave
add
xor
add
(bad)
int3
add
xchg
stos
adc
enter
out
mov
sub
hlt
pop
cli
xor
cmp
mov
leave
shr
sub
sub
inc
fild
std
dec
and
fld
xor
fild
sahf
mul
and
xor
push
xchg
dec
jge
and
dec
rcl
add
retf
(bad)
xor
cmc
iret
int3
bound
sbb
and
mov
cmps
clc
aam
push
mov
sbb
std
lods
jne
mov
movs
or
mov
mov
mov
jae
add
mov
inc
ret
(bad)
call
inc
sbb
int
(bad)
outs
and
aam
ja
test
pop
mov
or
xchg
das
dec
daa
cmp
outs
pop
stos
leave
loope
pop
jbe
pop
mov
leave
inc
(bad)
in
sbb
stc
xchg
test
jge
ins
aam
inc
mov
(bad)
cli
sub
aam
lds
popa
aaa
aas
cdq
not
inc
out
repnz
and
or
and
adc
retf
sub
add
adc
jns
dec
mov
sbb
push
fsubr
stc
xchg
add
push
(bad)
shr
jb
idiv
add
pop
cmp
sbb
(bad)
je
jne
(bad)
sbb
mov
fadd
sbb
lahf
xor
in
punpckhwd
loop
jno
scas
mov
jo
mov
pop
inc
pop
dec
inc
push
jmp
aam
push
push
sbb
rcl
test
cmc
mov
out
mov
mov
ins
in
aaa
pop
xor
inc
mov
sbb
(bad)
xor
in
cwde
xchg
and
sub
jmp
aaa
dec
push
test
xor
adc
push
mov
jb
call
jge
stos
jmp
repnz
in
add
shr
jmp
jns
retf
fsub
or
in
xchg
lds
mov
retf
rcl
sbb
test
or
mov
pop
mov
inc
xchg
into
inc
xchg
fldenv
cmp
and
push
lods
and
xor
mov
(bad)
inc
call
mov
shl
push
mov
push
push
adc
int
sbb
cmp
movs
adc
pop
push
mov
push
pusha
pop
aad
sbb
test
dec
and
call
mov
loopne
inc
in
xchg
xchg
pusha
pop
push
test
push
pop
les
in
rcr
mov
ss
jmp
repnz
in
icebp
stc
out
data16
adc
retf
and
mov
fcmovnu
mov
xlat
dec
repnz
mov
in
and
pushf
jmp
jl
or
mov
add
push
jo
shl
cmp
data16
mov
(bad)
lods
scas
xor
retf
cmc
std
inc
add
fwait
dec
inc
out
test
and
out
jecxz
paddsb
scas
leave
xchg
pop
retf
mov
out
ss
mov
in
imul
or
add
ins
pusha
adc
dec
pop
out
jge
jmp
mov
or
sub
xchg
in
movs
push
cmc
mov
fadd
sbb
sbb
pop
and
adc
xchg
fidiv
(bad)
fwait
pop
loopne
sub
test
pop
dec
adc
aam
in
or
xchg
xchg
jge
xchg
inc
js
jnp
(bad)
neg
fsub
push
add
mov
nop
jle
scas
mov
xor
mov
fwait
mov
jnp
cmp
lea
inc
cmp
or
pop
repz
pop
call
add
out
sbb
mov
xchg
into
mov
addr16
pop
add
adc
jp
aam
lods
pop
addr16
les
jmp
out
xor
pcmpeqb
daa
add
pop
hlt
jmp
xchg
sar
xchg
jge
js
dec
lods
mov
std
xor
add
inc
xchg
cmp
and
xor
bound
sub
faddp
add
(bad)
stos
ins
add
mov
fisttp
or
outs
mov
jae
or
enter
jnp
xchg
fnstsw
mov
adc
push
jae
out
out
cmp
jb
xlat
cmp
ret
push
pop
inc
rcl
out
add
mov
inc
lea
pushf
jo
in
lds
jno
in
in
mov
(bad)
push
iret
ret
mov
mov
lock
loope
outs
mov
test
cmp
mov
fidiv
inc
aas
mov
dec
call
pop
loop
mov
loop
fidivr
psrad
cmc
leave
xchg
outs
int3
int3
xchg
sub
fsub
test
imul
jl
loop
sub
xchg
pop
int3
mov
int
and
push
inc
(bad)
xor
daa
ror
inc
add
movs
adc
pusha
iret
icebp
mov
mov
aaa
call
inc
push
dec
int3
bound
or
pop
push
cmp
pop
aas
xor
shr
loopne
or
add
adc
ja
lods
xor
out
gs
inc
xor
mov
dec
lock
frstor
aas
lods
popa
push
inc
cmp
js
push
mov
pop
push
add
and
add
loopne
push
shr
cdq
push
mov
bound
ret
rcl
dec
retf
loope
imul
call
mov
call
jp
aam
or
das
push
imul
pop
xchg
popa
ror
dec
and
rcl
push
pop
add
sar
outs
mov
std
push
in
pop
sub
xchg
sub
les
mov
xor
sub
(bad)
push
je
or
cmps
mov
sub
and
add
popa
fistp
pop
std
and
sbb
in
add
sub
mov
enter
xor
pop
pushf
(bad)
push
outs
mov
xchg
xchg
in
sbb
das
lea
ja
mov
fcomp
dec
add
mov
jp
pop
jg
js
rol
ror
push
inc
push
cmp
fcmovne
sbb
mov
call
dec
mov
mov
xchg
or
ret
adc
(bad)
idiv
xchg
out
xor
mov
jg
xor
jno
mov
scas
xor
ret
mov
pop
data16
sbb
cli
push
xor
test
stos
mov
push
sub
add
out
jle
test
push
dec
test
mov
add
jnp
fwait
push
fstp
xchg
sti
pusha
cmp
fstp
mov
push
jl
sbb
inc
dec
push
pusha
cwde
lods
adc
and
jae
movs
jp
(bad)
leave
adc
add
stc
iret
push
pusha
and
adc
mov
call
xchg
push
lods
mov
jnp
add
jae
cld
fcomi
sbb
clc
ja
loope
push
xor
pop
cmc
fsubr
scas
cmp
push
loopne
sti
data16
test
and
and
dec
mov
jp
adc
inc
fstp
popa
mov
sub
(bad)
fsub
inc
push
jecxz
(bad)
push
out
mov
stc
call
dec
(bad)
push
ja
or
repnz
inc
outs
adc
mov
dec
dec
jo
repnz
not
pop
add
push
xlat
(bad)
mov
and
daa
dec
ss
jp
pop
mov
push
stos
add
imul
fwait
and
push
aaa
xor
daa
dec
cmc
xchg
imul
mov
mov
scas
push
jmp
test
call
lds
mov
mov
xlat
inc
sbb
outs
shl
mov
cmp
in
icebp
fist
xchg
xchg
test
xchg
push
and
cmps
ror
cmp
fwait
pop
mov
inc
test
mov
fmulp
in
cwde
loopne
and
call
adc
sub
mov
pushf
cli
dec
rcl
mov
push
xor
inc
or
mov
add
imul
mov
pop
dec
jno
dec
jno
stos
inc
lock
push
dec
out
jo
push
dec
dec
pop
ins
loop
and
jle
mov
bound
cmp
out
int3
jge
movs
mov
xchg
fdiv
pop
ret
pop
ret
xor
les
sbb
mov
or
ret
lods
adc
ret
fld
cmp
or
test
in
std
sbb
fnstenv
add
cmp
and
movs
sbb
add
xor
int
xchg
cmc
mov
xor
and
mov
pop
push
push
push
inc
leave
push
push
push
sbb
cdq
inc
add
dec
scas
pop
mov
int
in
inc
push
ret
lahf
adc
stc
or
and
aaa
adc
je
stos
jmp
push
cwde
in
sbb
(bad)
and
jl
mov
dec
or
push
inc
daa
movs
jmp
fwait
icebp
xchg
loop
add
xchg
adc
dec
lahf
jg
data16
push
push
lahf
ror
arpl
sub
jno
daa
mov
add
inc
pop
in
call
int
lock
cld
pop
mov
or
aad
adc
jnp
dec
gs
out
sub
push
inc
pop
aas
fst
jo
mov
aad
int3
or
out
aas
loopne
jg
lahf
pop
inc
inc
clc
hlt
into
std
add
or
mov
repnz
dec
inc
add
add
call
(bad)
cmp
cdq
fmul
xchg
adc
push
jl
(bad)
xchg
mov
test
adc
jbe
popa
es
xor
or
inc
dec
push
ror
or
rcr
popf
enter
sub
xchg
xchg
inc
test
out
mov
scas
pop
mov
push
setno
cmp
add
in
outs
int
cdq
add
ds
sbb
dec
dec
jne
jmp
xor
aas
inc
jae
scas
lea
cmp
mov
les
in
xor
push
rcl
jo
push
js
jne
popf
stc
or
pop
add
jo
call
xor
mov
lock
loopne
jnp
pop
mov
pop
mov
mov
movs
or
adc
in
add
pop
mov
push
cmp
sbb
jne
and
or
stos
xchg
scas
clc
shl
jp
loope
imul
jno
imul
mov
add
out
mov
in
xchg
sbb
in
xchg
push
ins
out
mov
call
pop
xor
or
cli
sar
pop
sub
pop
add
sub
data16
cmp
sub
mov
inc
push
fild
pop
cld
fimul
cs
cmp
clc
mul
sub
mov
retf
pushf
lods
sar
enter
rcr
loop
dec
ret
in
les
out
mov
test
cs
test
in
fcomp
and
mov
outs
fcomp
pop
ins
cmp
or
das
faddp
jb
sbb
out
loope
scas
xor
inc
and
adc
dec
dec
xchg
mov
jmp
daa
(bad)
jne
cld
push
(bad)
retf
and
nop
pusha
inc
aas
xor
jnp
jle
add
pop
cli
outs
add
(bad)
ins
mov
or
sti
sub
and
mov
cld
dec
(bad)
fistp
push
clc
sub
lods
jnp
mov
mov
or
in
ds
in
bound
daa
adc
adc
inc
jns
inc
jmp
or
push
mov
es
loop
stc
movs
leave
and
movs
adc
jmp
jge
cmp
into
cmp
stos
push
or
(bad)
fiadd
cmp
push
test
inc
xchg
adc
in
mov
nop
cmp
xchg
(bad)
addr16
dec
idiv
out
or
(bad)
lods
cli
fistp
out
aas
std
ret
leave
mov
xchg
xor
ss
mov
out
loop
xor
or
xchg
lds
pop
mov
xchg
(bad)
retf
fs
pop
loope
inc
pop
adc
xchg
adc
in
xor
dec
dec
ret
xchg
hlt
fwait
cdq
push
jmp
lea
dec
or
out
lds
lahf
and
mov
(bad)
out
test
xor
mov
test
pop
inc
sbb
imul
or
jmp
data16
push
mov
lea
sbb
or
add
inc
sub
mov
xor
cmp
or
mov
imul
lods
retf
lds
fsubrp
mov
aad
ror
fwait
out
call
ret
les
jmp
ss
cmp
idiv
cli
mov
jmp
pop
or
jmp
lods
jp
das
cdq
int3
jo
jae
cmp
aaa
inc
aam
dec
mov
popf
mov
xchg
inc
sbb
les
jbe
(bad)
mov
shr
out
sbb
pop
jnp
push
mov
xchg
(bad)
(bad)
push
xor
xchg
dec
loopne
xlat
cmp
popa
stos
mov
adc
sub
push
in
adc
in
push
ins
xor
stos
in
jne
cmp
jno
sbb
cmp
add
fisttp
gs
and
adc
js
mov
xor
js
(bad)
ret
mov
out
loopne
aas
mov
stc
je
add
jo
inc
mov
cmps
inc
lahf
aaa
mov
(bad)
in
out
jmp
movs
jne
mov
mov
mov
sbb
mov
and
repnz
cmp
cmp
jae
jbe
(bad)
mov
les
adc
mov
xchg
bound
cmp
clc
dec
inc
xor
add
inc
and
inc
scas
test
je
add
or
out
(bad)
cmp
push
test
imul
ficomp
out
push
adc
imul
cmp
pop
inc
pop
jmp
mov
into
retf
push
push
ror
push
(bad)
sub
and
rcl
or
mov
imul
es
hlt
mov
std
pop
js
leave
xchg
in
jmp
outs
dec
sbb
imul
ss
or
stos
or
loopne
or
pop
retf
stos
dec
push
xchg
(bad)
cld
cmp
std
mov
repz
pop
lock
jno
xchg
add
pop
jmp
mov
mov
or
cmovne
push
rcl
loopne
mov
lds
adc
mov
repz
in
fadd
sub
jae
stos
dec
lods
rol
leave
xor
dec
xor
rol
repnz
pop
arpl
or
sub
stos
dec
stos
test
movs
push
sub
aas
sub
pminsw
int3
xor
jb
mov
and
push
inc
pop
cmp
stos
add
push
popa
cmp
jae
push
cdq
loopne
sbb
(bad)
push
call
xchg
pop
xor
ret
int3
push
push
cwde
aad
(bad)
push
mov
outs
in
jb
sbb
ret
add
and
addr16
cmp
retf
jo
arpl
push
and
lods
add
ss
mov
(bad)
fidiv
push
out
sbb
push
push
mov
mov
sub
retf
sub
push
mul
cld
stos
cld
pop
pop
shr
cld
in
scas
popa
xor
rcl
mov
inc
sbb
imul
mov
mov
popf
cli
inc
dec
jne
pop
xchg
fild
pop
fcomp
cmp
xchg
clc
or
cmp
lahf
mov
ss
mov
popf
in
xchg
dec
and
mov
in
les
jns
(bad)
(bad)
dec
rcr
ror
adc
jb
in
dec
mov
cmp
lock
mov
inc
mov
mov
adc
lods
pop
mov
outs
xor
dec
ds
gs
mov
sti
sub
retf
inc
mov
shl
or
jl
and
push
jnp
cmp
push
je
pop
into
push
sbb
xchg
xchg
das
add
inc
sbb
mov
std
js
jnp
xlat
cmp
and
mov
bound
cmp
pop
add
adc
bound
cli
dec
and
sub
fisttp
push
jbe
cmp
jge
mov
sub
loop
sub
clc
popa
cdq
in
lahf
and
das
hlt
jb
rcr
or
inc
aas
mov
xchg
jmp
packssdw
push
ins
push
test
and
sbb
bound
push
xor
(bad)
push
mov
jmp
popa
jp
js
pop
and
(bad)
jnp
mov
pop
js
mov
push
mov
mov
pop
or
in
mov
inc
push
push
mov
jmp
push
ins
cmp
inc
adc
sub
jmp
xchg
jno
adc
xchg
mov
or
pop
mov
jne
lds
pop
lods
mov
cli
cmps
jne
push
leave
pop
inc
(bad)
dec
or
dec
jp
aam
xlat
ret
or
xchg
jns
push
bound
or
dec
dec
push
add
ins
and
mov
ins
sbb
push
ds
outs
data16
pop
nop
xlat
xor
dec
out
scas
sub
leave
sbb
pushf
and
inc
test
out
out
cmps
test
std
or
movs
jg
and
or
push
mov
push
sbb
xchg
xchg
in
xlat
mov
in
xchg
hlt
pop
shl
mov
xor
xor
xchg
(bad)
push
fbstp
push
pop
daa
push
cmp
mov
cmps
jge
jb
ins
ret
es
mov
cmp
xor
daa
add
mov
shl
out
adc
dec
xchg
jle
sub
cli
fucom
(bad)
pop
mov
and
retf
add
dec
and
das
ja
push
xor
push
xlat
and
mov
xchg
(bad)
ins
adc
dec
xor
jge
shl
add
mov
mov
stc
mov
leave
and
cmp
das
push
pop
jns
dec
scas
shr
arpl
dec
jo
mov
cwde
xchg
retf
and
inc
(bad)
sahf
jbe
inc
adc
jg
lea
xchg
jnp
popf
dec
loop
ins
dec
add
inc
cmp
mov
shl
and
es
ins
repz
jp
sub
inc
pop
loop
xor
xor
adc
pusha
out
js
pop
in
xchg
scas
aaa
scas
mov
sti
movs
imul
stos
fisttp
js
jmp
adc
pop
rcl
or
movs
sub
das
add
jo
or
daa
and
movs
shl
cmp
popf
cmp
out
(bad)
out
add
pop
add
gs
inc
cmc
add
cli
add
shl
js
jnp
or
stos
mov
sahf
enter
xchg
(bad)
cmp
imul
pop
xor
(bad)
adc
cmc
je
leave
lds
popa
pop
in
xchg
jae
rcr
pop
(bad)
push
imul
xor
mul
push
and
cmps
mov
addr16
pop
nop
loope
or
cdq
fld
inc
aam
and
imul
ja
iret
sbb
int3
mov
out
pop
cmp
movs
mov
or
outs
inc
xlat
scas
fucomi
in
movs
call
ins
mov
or
js
mov
loopne
les
and
inc
cmp
jecxz
cmp
or
pop
cmps
push
stc
sub
fiadd
out
mov
fs
inc
leave
inc
leave
les
aaa
xor
xchg
cmp
sub
(bad)
jp
xchg
aaa
jp
xor
jge
xor
cmc
loope
aam
test
es
cmps
add
arpl
or
addr16
call
and
sar
jns
and
in
or
add
push
shl
rcr
imul
rcl
bound
call
xchg
movs
dec
loop
aaa
cwde
call
out
(bad)
xchg
push
int
add
mov
mov
xchg
xchg
jo
out
cld
fstp
(bad)
xchg
jo
test
and
inc
and
xchg
and
push
dec
int
mov
lock
hlt
mov
and
cmp
ins
and
dec
inc
dec
mov
retf
jecxz
out
hlt
xchg
push
jnp
and
push
cmps
pop
lahf
xchg
pop
sub
jne
jo
inc
jmp
or
dec
push
popf
mov
xlat
lea
sbb
cmps
rcr
in
mov
push
fucomp
aam
aam
js
pop
enter
outs
ja
ret
inc
cmp
add
xor
pop
lahf
push
(bad)
es
add
loop
pop
or
stc
arpl
xchg
sub
jbe
mov
sbb
scas
push
repnz
add
ins
jae
aad
aas
(bad)
xor
sbb
inc
adc
call
jle
adc
or
dec
lea
fs
cdq
sahf
in
popf
ror
sub
test
and
outs
aaa
retf
push
sti
dec
cmc
and
mov
adc
xlat
push
sbb
xchg
cmp
and
imul
xchg
shr
add
add
mov
sbb
add
xchg
xor
retf
adc
pop
inc
(bad)
out
(bad)
test
sub
adc
scas
pop
xrelease
in
cbw
loope
hlt
add
inc
ins
arpl
jmp
pop
out
add
loop
add
mov
inc
adc
xchg
mov
popf
mov
push
or
xchg
sub
xchg
add
data16
pushf
xchg
cmps
aaa
push
and
fnsave
jo
mov
mov
movs
data16
frstpm(287
in
push
jmp
loopne
jmp
fsub
cmovg
fmul
pop
xchg
in
inc
dec
dec
inc
rcr
mov
loopne
mov
push
dec
je
jg
jge
in
daa
add
(bad)
jle
fwait
or
outs
movs
cmc
jge
repz
push
cwde
data16
mov
call
and
imul
retf
mov
hlt
daa
jbe
in
adc
popa
pop
stos
bswap
(bad)
pop
pop
add
(bad)
popf
push
(bad)
mul
mov
fcmovb
cmp
jle
mov
icebp
sub
pop
add
push
and
pop
popa
in
enter
cdq
cmp
sub
add
fld
sahf
retf
(bad)
xchg
push
dec
call
daa
pop
int
scas
add
int
iret
pushf
in
sahf
shr
shl
mov
dec
add
pop
xchg
data16
jno
xchg
in
mov
push
sbb
icebp
add
mov
stc
sbb
ds
mov
inc
push
add
icebp
cli
fwait
mov
sti
pop
cmp
fst
or
pop
jmp
js
rol
ss
pop
not
sbb
mov
inc
mov
popf
pop
adc
push
test
sbb
or
mov
mov
lahf
xor
call
sbb
shr
ror
icebp
(bad)
rol
push
jle
sub
sub
stc
test
xchg
mov
mov
inc
in
test
popa
dec
push
cli
xor
fdiv
mov
inc
pop
cmp
clc
push
sti
cli
inc
(bad)
or
imul
mov
dec
mov
cmp
adc
jbe
das
loope
retf
cli
fnsave
out
inc
stc
into
jmp
xor
xchg
mov
fmul
out
icebp
lods
xchg
cmc
sbb
es
in
sahf
enter
pop
sbb
adc
push
cdq
daa
pop
xchg
inc
in
pop
jbe
xor
repnz
int3
fadd
mov
fadd
add
loop
inc
mov
xlat
in
scas
lahf
xchg
dec
imul
repz
jp
and
mov
adc
adc
jmp
xchg
ins
xchg
punpckhwd
adc
das
push
sbb
sub
pop
ja
ret
mov
jns
xor
in
dec
or
repz
inc
or
jl
in
test
imul
or
addr16
push
jo
pusha
inc
not
std
repz
in
adc
xchg
mov
mov
les
xor
repz
arpl
mov
inc
and
inc
je
ja
and
inc
xchg
hlt
scas
outs
out
js
int3
and
neg
test
mov
(bad)
pop
pop
push
shl
adc
imul
sar
out
dec
cs
jge
mov
clc
inc
push
ja
shr
fwait
adc
push
(bad)
adc
int
sbb
rcr
sub
dec
cmps
mov
outs
pop
push
fdivr
inc
fist
cmp
clc
jg
adc
test
not
add
stos
push
(bad)
jge
jno
xor
push
cli
daa
cmp
push
clc
enter
out
bound
add
es
out
int
pop
loop
cmp
clc
or
lahf
xchg
hlt
inc
mov
fldenv
imul
xchg
rcr
adc
js
pop
inc
mov
add
sti
xlat
mov
lock
and
mov
push
mov
adc
fld
shl
pop
xchg
xchg
adc
aaa
lea
adc
ds
push
in
daa
icebp
test
mov
icebp
test
sub
sbb
mov
and
repz
add
mov
scas
leave
test
data16
repz
aaa
cmp
cwde
mov
fldenv
jae
xchg
push
fbstp
loop
ret
sbb
jmp
cmc
call
popf
icebp
push
cmp
add
dec
xchg
movs
and
xchg
xlat
or
sbb
fmul
mov
or
dec
push
daa
mov
test
adc
mov
jbe
addr16
jns
and
push
sub
add
mov
xchg
xchg
shl
cmp
xchg
imul
arpl
(bad)
cmp
popf
jno
fdivr
adc
and
xor
push
mov
push
inc
adc
cs
loopne
cmps
cmp
movs
lock
sbb
cs
call
rcl
psrlq
push
shl
or
mov
lahf
pusha
popf
sti
jbe
mov
jbe
jl
scas
fwait
in
xchg
sbb
pop
popa
sub
cdq
jne
and
jns
iret
movs
and
sub
jp
ss
and
test
popa
dec
lods
inc
lds
jmp
or
fiadd
out
or
inc
sub
ins
xchg
and
(bad)
popf
add
add
xor
int
std
in
outs
popa
add
ret
inc
xchg
dec
dec
jbe
push
xchg
ins
dec
or
rol
pop
test
jae
iret
xchg
sub
inc
sahf
sbb
inc
into
neg
jge
in
jne
loopne
fimul
jge
inc
popf
xchg
jnp
mov
sub
arpl
adc
loopne
loope
mov
pop
rcr
push
(bad)
mov
jnp
jo
mov
adc
jnp
inc
enter
jmp
mov
pop
repz
cmp
cmp
scas
(bad)
(bad)
jno
(bad)
push
out
mov
test
test
es
fadd
test
in
xchg
sub
aad
dec
ss
pop
mov
cld
aam
jno
outs
cmps
dec
add
fisub
inc
sbb
adc
pop
fnstsw
xor
mov
and
scas
inc
cmp
and
mov
lea
mov
pop
push
retf
pop
mov
stos
cld
movs
or
in
adc
adc
mov
cmps
es
mov
push
mov
jecxz
mov
test
sar
xchg
mov
push
ja
cmp
loopne
popa
cmps
sti
imul
das
rcl
test
ins
jg
push
mov
and
mov
mov
and
lea
bound
jno
jae
hlt
or
test
imul
pusha
jno
ins
loop
mov
jnp
clc
adc
out
clc
mov
mov
add
pop
in
adc
out
and
fs
std
mov
mov
add
mov
mov
jmp
rcl
sub
retf
pushf
enter
sub
ficomp
ret
xchg
push
iret
int
inc
in
nop
(bad)
rsm
(bad)
cwde
push
test
mov
jo
(bad)
jp
add
imul
sbb
mov
clc
xor
cmp
nop
jno
jle
and
enter
pop
ror
loope
adc
jecxz
sbb
fsubr
mov
xchg
cmp
or
rcr
(bad)
ins
xchg
add
inc
jg
pop
cmp
pop
rcr
lods
and
aad
ret
rcl
add
and
sti
rol
push
in
enter
mov
aaa
test
mov
cdq
jg
mov
repnz
cwde
cwde
mov
cmps
adc
lock
sub
daa
repnz
jbe
jp
push
stos
daa
mov
leave
andps
xchg
push
fdiv
fwait
mov
(bad)
fisubr
aam
push
mov
fidivr
int3
mov
sbb
stos
cdq
sti
out
fs
push
clts
enter
add
test
retf
xchg
mov
mov
mov
rol
hlt
mov
mov
lods
cmp
xor
push
xor
cmp
das
out
or
imul
or
in
fdivr
mov
xchg
pop
xor
iret
inc
push
ds
fbld
sub
cli
cmp
pop
xor
outs
inc
pop
mov
sbb
jb
add
mov
in
ja
dec
repz
shr
loopne
sbb
push
ret
and
cmps
gs
jge
dec
or
jno
out
popf
aas
loop
mov
push
cld
mov
sti
lea
lock
sub
or
xor
jns
loopne
pop
sbb
jl
sbb
push
pop
cmp
or
fdivr
sbb
mov
(bad)
jae
shl
pop
out
out
fldenv
pop
push
ret
or
cmp
xor
test
and
cli
in
or
aas
cmp
push
jmp
fnsave
hlt
cmps
pop
cmps
mov
adc
mov
adc
loope
jo
jae
xchg
inc
test
outs
xor
mov
aaa
push
push
inc
dec
aam
and
jg
test
mov
adc
ss
int3
in
push
add
mov
sbb
mov
cmps
inc
mov
sub
cmps
test
movs
ins
pop
bound
imul
scas
mov
push
add
sbb
or
cmp
cmp
enter
xor
imul
ss
in
call
inc
push
inc
dec
cmps
inc
pop
push
(bad)
in
sbb
sub
fs
call
addr16
ja
jl
nop
dec
out
stos
cmp
fdivr
mov
cmp
(bad)
(bad)
(bad)
fnstenv
imul
sub
sbb
or
out
jge
imul
ins
in
dec
aad
jmp
mov
(bad)
dec
or
rcr
inc
shl
xor
clc
in
aaa
test
jnp
aad
xchg
(bad)
adc
test
daa
pop
popa
out
add
mov
gs
or
inc
cmp
inc
pop
cmp
faddp
jle
jnp
pop
dec
jmp
jb
add
inc
sub
jmp
call
dec
gs
inc
adc
mov
jno
shr
test
or
popa
or
jmp
outs
and
xor
daa
aam
int
sahf
call
jno
xor
outs
ins
imul
xor
repz
aam
retf
cmp
or
mov
cmp
mov
daa
pop
ins
inc
xor
les
pop
jo
dec
xor
cli
push
mov
dec
test
or
mov
(bad)
jle
xchg
dec
mov
mov
and
dec
loope
fisttp
cli
test
push
or
shr
xchg
ss
or
je
and
jnp
loope
in
repz
push
fist
or
inc
in
jne
call
and
les
dec
sbb
inc
test
aam
pop
cld
mov
dec
outs
mov
adc
jbe
and
and
push
stos
test
adc
in
cdq
sub
repz
sbb
and
std
loope
sub
xchg
mov
dec
dec
jge
retf
and
push
nop
xchg
sar
jecxz
jne
aam
cmps
jle
sbb
sub
pop
mov
mov
outs
jmp
dec
retf
jns
mov
pop
xor
ret
inc
retf
xchg
retf
inc
jnp
test
mov
in
and
xor
jmp
mov
bound
or
outs
cs
push
jae
sub
outs
adc
mov
push
dec
aas
xlat
pop
dec
mov
aam
out
ficom
stos
sub
sub
test
push
lahf
mov
retf
or
add
jae
bndstx
ins
push
push
out
dec
jecxz
push
sti
pushf
jle
mov
mov
(bad)
loop
aad
pop
sbb
enter
out
scas
cs
rcr
scas
and
pushf
and
pop
nop
inc
and
popf
xor
icebp
mov
or
push
inc
(bad)
sub
sub
mov
cmp
ins
std
pop
ror
test
mov
inc
inc
adc
fdivr
sbb
scas
loope
jecxz
dec
dec
xor
not
mov
and
jb
xor
call
push
out
xchg
mov
std
imul
adc
out
popf
std
inc
inc
cdq
jg
jno
fbstp
pop
scas
cmp
or
js
xchg
hlt
mov
xchg
push
cmps
inc
mov
(bad)
push
scas
pop
std
sbb
mov
dec
pop
jns
out
arpl
dec
push
jne
pop
fist
jl
int3
pop
xchg
jae
push
pop
out
cdq
mov
loope
iret
dec
out
(bad)
or
pop
and
test
mov
mov
aaa
mov
dec
popf
dec
inc
ins
cli
dec
mov
and
leave
add
pop
pop
test
jmp
cmps
out
xchg
mov
out
mov
lds
imul
imul
(bad)
ficom
add
or
dec
jecxz
sub
push
pop
out
hlt
pop
retf
movs
adc
fwait
dec
add
mov
fwait
shl
imul
push
add
ss
js
or
adc
jl
sub
hlt
jo
clc
mov
jb
lahf
sahf
sub
jp
icebp
std
sub
mov
out
out
mov
sub
xchg
inc
dec
xor
push
movs
rcr
stos
mov
ret
mov
cmp
(bad)
mov
out
mov
addr16
or
dec
retf
jmp
lods
pusha
xchg
daa
out
nop
loop
icebp
loop
into
int3
cdq
(bad)
dec
out
sbb
inc
nop
fst
fs
xchg
cmp
test
push
xchg
xchg
sbb
loopne
fst
jne
fsubr
iret
or
div
call
and
pop
fmul
push
ss
ja
add
scas
xchg
aam
popf
sti
in
into
sub
ja
add
pop
test
icebp
jge
bound
ret
stos
push
mov
jp
das
cli
test
adc
rcr
and
adc
inc
mov
inc
int
push
test
adc
fnstcw
jno
pushf
out
pop
adc
dec
adc
icebp
mov
outs
(bad)
dec
mov
lds
push
add
addr16
and
mov
dec
adc
cmp
mov
push
sbb
in
or
jnp
rol
pop
out
push
test
fnstsw
sub
adc
fs
jb
cmp
enter
mov
lods
push
and
imul
cdq
jo
cmp
fild
or
out
dec
popa
retf
dec
mov
rcl
jnp
jno
cs
call
push
mov
fcmovnbe
sub
xor
lock
bound
cli
adc
in
mov
cwde
cmp
sbb
cmp
xor
call
push
xchg
jecxz
or
retf
in
mov
adc
xor
jge
mov
fistp
push
in
jl
sbb
int3
adc
or
cs
inc
dec
xor
add
sti
jno
cld
ret
jbe
fwait
sub
sbb
sub
mov
jge
pop
das
jo
enter
push
ins
jg
std
push
pop
mov
jmp
mov
fstp
stc
retf
(bad)
sti
pop
ficomp
mov
(bad)
jmp
jmp
arpl
sub
cli
repnz
mov
jg
ins
push
cwde
mov
jp
dec
jge
loop
jp
mov
lea
shl
xor
dec
fnstenv
mov
sbb
neg
retw
dec
cwde
(bad)
dec
xchg
xchg
cld
cmp
ret
mov
and
test
test
mov
mov
jnp
js
sub
push
test
lods
or
scas
(bad)
push
js
ds
(bad)
fnstcw
sbb
dec
add
into
pusha
pushf
sub
dec
fist
fcmovnbe
cmp
outs
mov
fild
or
pop
gs
push
jmp
or
hlt
cld
add
xlat
cmc
aam
dec
jns
or
or
hlt
dec
cmps
pop
mov
lds
ins
or
sub
inc
test
xor
push
mov
jecxz
add
add
and
jae
adc
sbb
jmp
adc
std
add
aam
jne
in
mov
sub
imul
fadd
test
inc
ret
clc
loop
sub
mov
ja
ret
loop
mov
punpcklbw
sbb
aam
rcr
mov
cmp
data16
dec
ja
int
push
add
pop
jle
dec
sbb
jbe
inc
jge
or
mov
xor
sbb
add
dec
xor
mov
push
xor
pusha
cs
jp
or
lods
pushf
ins
cmp
lea
pop
sti
stos
and
lea
out
shr
or
jp
(bad)
inc
popf
and
xor
pushf
push
jno
sub
xchg
(bad)
pop
je
das
(bad)
inc
ins
mov
lods
or
out
push
popa
fs
mov
dec
jmp
fwait
bnd
xor
ror
shl
xchg
fiadd
adc
les
sbb
sti
fcom
cli
push
hlt
stos
cs
jno
inc
inc
cmp
sti
rcr
mov
jecxz
fwait
add
push
outs
push
test
sbb
jbe
out
or
cli
loop
fist
sbb
push
sti
mov
ror
cld
and
inc
xor
xchg
sbb
sbb
pop
hlt
leave
gs
cmp
xchg
push
jno
loopne
push
jae
daa
outs
add
push
aas
(bad)
lods
adc
sbb
stos
outs
mov
push
call
repnz
push
imul
ret
or
pusha
aas
es
inc
fistp
pop
inc
jno
sub
out
add
pop
and
mov
addr16
and
jno
and
aaa
ror
shr
adc
dec
sar
jnp
sub
pop
xor
mov
or
frstor
add
push
ss
outs
and
xchg
je
shr
hlt
mov
repz
adc
jg
hlt
setne
cmp
ja
sbb
add
dec
stc
pop
cmc
push
aam
jnp
pop
jp
popa
push
cld
cli
pop
mov
mov
cmp
inc
mov
push
inc
dec
mov
cmc
mov
add
push
ins
ss
xor
sub
adc
mov
jge
and
enter
pop
mov
dec
mov
sub
cli
and
icebp
mov
xchg
fwait
jbe
popa
sub
ja
(bad)
xlat
mov
sbb
shr
jge
lock
mov
add
movs
ins
and
adc
(bad)
xchg
loopne
aam
lods
jp
pop
test
cld
repnz
jbe
ins
xchg
jecxz
les
adc
sub
sar
outs
mov
sbb
ss
mov
std
sbb
fild
or
cli
(bad)
pop
imul
gs
push
inc
adc
scas
(bad)
mov
pop
or
or
xchg
mov
(bad)
mov
loope
(bad)
xor
dec
xchg
xchg
call
mov
and
das
push
pop
or
fadd
(bad)
stc
fs
xchg
scas
pop
jns
sti
mov
(bad)
xchg
xchg
cdq
xchg
shl
and
cmp
add
add
push
scas
push
aam
jg
jge
sbb
cmp
sub
lods
xchg
pop
push
lock
xor
mov
hlt
outs
and
out
imul
(bad)
push
pop
aas
adc
data16
sub
test
ja
sti
in
mov
xchg
into
or
xchg
ja
xchg
xlat
mov
or
mov
cwde
xor
add
or
fdivr
cmps
sub
cmps
mov
leave
hlt
loopne
xchg
icebp
push
sbb
std
mov
dec
fidivr
mov
movs
jge
jge
cmps
shl
test
into
sbb
sbb
xchg
or
ss
cmp
movs
sub
jb
fcomip
repz
mov
in
and
fiadd
out
add
and
sub
pop
cmp
cmp
adc
inc
lods
mov
ins
mov
jbe
repnz
call
pop
cli
outs
xor
lods
or
mov
xchg
fcmovne
xchg
jno
fwait
jecxz
int
ja
inc
je
in
mov
mov
add
out
inc
ret
dec
call
mov
mul
sbb
jl
lock
mov
pusha
pop
(bad)
xchg
jne
pop
fiadd
in
dec
xor
pop
sti
bound
inc
mov
sar
dec
lods
and
push
std
in
inc
fsubr
pop
cmps
mov
push
xchg
jbe
inc
scas
sbb
into
leave
sbb
cdq
xor
inc
jo
xchg
int3
pushf
jnp
movzx
mul
sub
sahf
loope
cs
inc
je
mov
retf
mov
mov
rcl
ror
and
inc
pusha
repnz
add
fldenv
push
sbb
cmp
stos
jbe
adc
ins
cmp
cli
cwde
fwait
push
pop
and
or
cmp
push
or
pop
mov
xchg
add
or
bound
or
push
push
jae
jae
repnz
shr
xor
and
mov
mov
adc
pop
popf
in
lock
inc
pushf
mov
dec
mov
in
jae
pop
aad
sbb
push
add
enter
jbe
mov
dec
inc
(bad)
(bad)
scas
jmp
rcl
sbb
aas
mov
lahf
cmp
les
scas
mov
scas
xchg
(bad)
pop
xlat
movs
jno
gs
inc
leave
retf
fsub
xchg
movs
pop
lods
mov
pop
loope
dec
push
ds
out
inc
add
jge
sbb
add
ror
or
lea
test
ret
mov
sub
out
sbb
(bad)
mov
or
jb
cmc
ja
xchg
and
dec
movs
jecxz
pop
sar
stc
cmp
jae
stos
clc
push
dec
aam
push
pop
xchg
sbb
adc
add
jmp
sbb
pop
ins
dec
repnz
popf
aam
imul
adc
jl
jg
mov
test
arpl
gs
and
mov
nop
cmp
or
(bad)
sub
dec
mov
inc
ins
int3
enter
jno
(bad)
bound
pushf
push
sbb
cmp
gs
pop
retf
pop
dec
lods
ss
xchg
leave
adc
gs
pop
cmps
(bad)
push
out
aam
or
dec
not
rol
sbb
or
loopne
and
fs
ret
pop
inc
call
daa
cmps
adc
std
outs
call
mov
or
adc
out
gs
popa
dec
int3
dec
jp
pop
rol
mov
das
retf
add
lods
jmp
daa
mov
out
mov
and
or
fs
sub
retf
fbstp
adc
call
imul
out
jb
lods
jae
inc
xor
jbe
ins
call
or
jecxz
retf
addr16
mov
lahf
imul
in
scas
xchg
leave
neg
ins
sub
xchg
jnp
clc
jge
xor
cmps
dec
push
mov
and
mov
cwde
sbb
inc
popa
xlat
xlat
or
ds
les
jnp
sbb
pop
mov
out
push
sub
jns
fmulp
pop
pop
pop
inc
fst
movs
push
int3
sub
inc
mov
mov
xchg
mov
jmp
movs
cmp
call
mov
dec
jle
mov
ror
xor
add
sub
inc
pusha
sbb
enter
(bad)
cmp
sar
test
xor
xchg
mov
mov
es
pop
fwait
push
in
jle
and
daa
icebp
ret
and
in
ror
mov
xor
pop
mov
inc
mov
lea
pop
popf
mov
jnp
lods
outs
mov
mov
push
jle
sub
popa
inc
jmp
pop
call
test
mov
or
cmp
icebp
jne
lds
cdq
nop
sbb
mov
cmp
out
inc
out
lods
mov
shl
mov
xlat
cwde
push
sbb
mov
mov
xchg
addr16
push
clc
xchg
ret
push
xor
cmp
mov
ins
mov
icebp
pop
or
in
retf
or
add
sbb
adc
call
push
aas
push
mov
jo
sub
cmp
cmps
adc
stc
cwde
retf
shl
in
repnz
sub
sbb
inc
dec
or
mov
and
dec
add
push
shl
sbb
loope
ss
push
mov
dec
repnz
out
pop
mov
imul
ret
push
lahf
popa
fwait
in
int3
shr
cmps
test
mov
and
loope
cmp
or
push
sub
std
cdq
in
mov
sub
dec
cmp
call
mov
xchg
mov
mov
cmp
neg
fcom
dec
aas
add
je
sar
mov
stc
(bad)
adc
jbe
push
sbb
adc
pop
sub
das
fwait
fs
inc
js
add
js
(bad)
retf
inc
lods
xor
(bad)
into
mov
add
les
fisttp
mov
jge
mov
loop
xor
sub
mov
push
mov
inc
test
jb
sbb
or
cmps
push
adc
xchg
push
mov
(bad)
pushf
in
fisttp
pop
or
jno
mov
test
(bad)
jecxz
mov
fsubr
cmp
mov
and
dec
icebp
fcomp
pop
cmp
mov
lock
jno
outs
into
adc
lea
mov
daa
lahf
ins
add
fwait
push
xor
mov
fwait
out
push
out
push
test
sti
mov
push
out
push
into
imul
sub
adc
mov
push
cwde
and
cs
push
es
hlt
add
hlt
js
xor
jnp
out
clc
pop
dec
cmp
in
jge
xchg
(bad)
sbb
mov
inc
lock
add
push
outs
and
jle
retf
push
pushf
or
int
ins
or
inc
outs
gs
int
mov
das
sahf
xlat
imul
int3
cmp
ret
dec
jmp
xor
ret
(bad)
lods
mov
pop
and
ret
popa
mov
mov
adc
movs
pop
add
retf
push
mov
test
fld
dec
push
inc
std
xor
jg
add
pop
or
out
jecxz
imul
pop
addr16
fcomi
or
stos
mov
in
xor
xchg
stos
and
mov
xor
xor
jge
lock
pop
cld
xchg
aaa
add
adc
pop
cmp
dec
and
push
mov
jmp
add
pop
or
cmp
inc
xchg
cmps
or
das
stc
sbb
mov
pop
pop
cdq
cmp
add
xchg
add
(bad)
jmp
into
lods
mov
mov
cmp
(bad)
cmc
stos
xor
es
adc
push
or
outs
cmp
shl
mov
loopne
and
mov
push
sub
cwde
push
(bad)
(bad)
lock
sub
add
dec
(bad)
cli
ficomp
je
hlt
adc
or
add
(bad)
pop
sbb
jle
(bad)
mov
(bad)
sbb
adc
mov
int3
call
xor
ret
call
cmp
inc
lds
lods
mov
sub
or
retf
jno
(bad)
jb
iret
shr
gs
adc
adc
cmp
or
xor
push
mov
inc
and
xchg
and
ror
and
les
inc
fisttp
aas
push
rcr
pop
addr16
icebp
lods
mov
pop
test
sbb
xchg
mov
inc
mov
sbb
into
dec
icebp
jp
jge
ss
lahf
fwait
jmp
leave
mov
lea
pop
add
mov
clc
jo
pop
stc
call
(bad)
lahf
out
push
popa
dec
jecxz
call
int3
or
fsub
(bad)
aaa
push
out
cvtps2pd
je
mov
sbb
fstp
jp
movs
xor
fidivr
addr16
and
ins
pop
out
jg
les
mov
shl
popf
ins
xor
xlat
and
nop
xchg
mov
pop
fdiv
jo
test
pop
push
clc
in
aaa
stc
inc
adc
add
fwait
jmp
scas
push
push
jp
lahf
cmps
rol
jp
daa
lock
(bad)
jecxz
mov
div
xchg
hlt
mov
vmovss
adc
adc
mov
push
retf
mov
ss
lahf
rcr
call
sbb
lods
jno
int
jbe
sbb
stc
popf
add
nop
test
xchg
stos
mov
cdq
push
inc
sbb
es
xchg
out
stos
fldcw
cmp
jge
dec
test
ja
inc
fsubp
retf
retf
dec
cmp
call
out
fdiv
retf
dec
sbb
leave
or
jmp
jns
test
out
and
movaps
xor
aas
dec
loopne
in
pop
xchg
mov
mov
loope
sub
pop
cmp
clc
and
sti
(bad)
(bad)
push
ins
push
sbb
rol
leave
out
gs
(bad)
stc
loopne
inc
cmps
out
xor
shl
or
cdq
adc
stos
mov
mov
imul
push
fs
cli
pusha
std
hlt
jbe
jno
push
pop
inc
cmp
das
retf
fisubr
rcr
or
out
popa
loopne
sub
mov
cmp
iret
call
or
cmps
ror
push
leave
jmp
iret
fmul
or
les
mov
imul
shr
add
sub
dec
out
xor
sahf
and
sub
add
add
cdq
pop
test
nop
mov
mov
aam
mov
mov
add
imul
push
adc
int3
popf
pop
mov
leave
add
or
inc
or
sub
cmp
pop
ins
pop
icebp
mov
in
fs
push
inc
xor
aas
or
xchg
xchg
movs
movs
data16
xrelease
inc
rcr
ja
stos
sti
fwait
push
cmc
jno
add
pushf
leave
or
aam
push
es
ds
stc
mov
add
pushf
test
sbb
xchg
ins
gs
jo
mov
in
jecxz
test
push
mov
test
sub
inc
adc
mov
add
(bad)
jmp
cld
aaa
mov
cmp
xor
xchg
mov
(bad)
cmp
repnz
xor
xor
bound
inc
popf
imul
sub
lods
repnz
sbb
out
fwait
mov
jmp
out
dec
fild
mov
sub
aad
mov
mov
mov
dec
vmovddup
pop
mov
mov
and
fnstenv
idiv
pop
ret
icebp
fcom
push
fwait
pop
mov
ror
mov
sahf
or
pusha
test
clc
mov
mov
or
jae
lods
adc
loopne
or
imul
and
mov
xor
hlt
push
jp
pop
aaa
test
cli
rol
inc
mov
push
jmp
pusha
add
jmp
fistp
std
mov
add
jp
xor
ret
mov
sbb
aaa
das
add
int
jns
fisttp
bound
popa
push
(bad)
push
pushf
cwde
jl
loopne
push
jecxz
in
stos
mov
pop
push
movs
scas
add
sbb
push
push
clc
cwde
lahf
inc
sbb
push
cs
test
test
xchg
cmps
add
out
adc
jge
jb
imul
or
mov
mov
adc
ss
inc
and
add
repz
cmp
iret
xchg
popf
mov
and
pop
outs
or
mov
std
xlat
cdq
test
add
fcomp
and
lock
add
xor
int
test
and
jns
test
stos
jl
cmp
comiss
and
jmp
push
jo
stos
xchg
xchg
pushf
adc
xchg
mov
sub
inc
xor
adc
cmp
push
enter
icebp
push
sbb
jb
mov
cmc
dec
push
not
cmp
mov
mov
jno
mov
fmulp
push
and
retf
push
aam
and
rcl
mov
adc
mov
dec
push
psrlq
out
dec
ins
mov
movs
mov
pop
sbb
scas
sub
mov
imul
pop
test
lods
scas
fs
xchg
in
dec
dec
stc
clc
cmc
and
or
push
fadd
ret
test
jmp
push
jo
das
pop
sti
add
jge
and
imul
lea
sub
fild
push
mov
dec
cmps
xlat
repz
imul
jo
xchg
pop
mov
call
addr16
jns
add
adc
call
xlat
or
xor
inc
cmps
xchg
sbb
jp
dec
jno
retf
mov
mov
xchg
pop
push
pop
add
imul
or
mov
daa
mov
add
xchg
(bad)
stc
sahf
cmp
adc
aaa
inc
ret
or
out
ins
stc
sub
jnp
cmc
mov
dec
adc
push
int3
outs
pop
cs
mov
fisttp
stc
ja
imul
das
sub
in
mov
into
popa
idiv
mov
les
inc
les
ret
adc
sub
adc
cld
push
ret
fwait
sar
jge
js
inc
rol
add
dec
ret
xchg
sbb
jb
cmp
and
jmp
push
inc
sub
dec
imul
out
xor
in
mov
inc
jmp
pop
fisubr
retf
sub
mov
push
mov
add
mov
loopne
mov
data16
fmul
and
mov
or
scas
or
les
xchg
pop
xchg
inc
(bad)
repz
int
bnd
movs
push
adc
sub
and
mov
xlat
jns
aad
daa
ror
ret
scas
jmp
ds
ss
sub
repnz
cdq
pop
fist
xor
push
inc
mov
fdivp
pusha
int3
cmp
imul
stos
push
pushf
xchg
daa
icebp
mov
pop
les
mov
jge
mov
cmps
mov
lods
sub
mov
(bad)
push
lea
dec
cwde
int3
cdq
ins
ror
jecxz
jmp
and
xchg
mov
jb
add
mov
pop
or
aaa
retf
xchg
mov
cmps
jmp
leave
lds
fcom
or
sbb
push
rcr
jae
rcr
pop
mov
adc
dec
lds
cmc
ret
inc
cwde
add
add
lods
mov
movs
xchg
addr16
das
fst
arpl
or
jo
in
(bad)
cmp
xlat
or
mov
adc
sub
out
(bad)
and
xcrypt-ecb
cmps
dec
push
mov
test
daa
and
dec
mov
xchg
fisub
(bad)
xchg
pop
mov
jbe
gs
jge
and
cmp
mov
mov
ja
fld
cwde
sbb
adc
cmp
add
pusha
adc
(bad)
or
cdq
fdivr
pop
pushf
adc
dec
fild
mov
lods
jns
in
mov
push
fs
cmp
add
add
dec
mov
int
inc
adc
in
inc
lahf
and
mov
test
std
mov
call
jnp
xchg
push
outs
mov
cmps
scas
or
push
cld
cmp
and
push
(bad)
sbb
jbe
dec
call
popf
rcl
jl
aam
mov
js
jb
cli
xor
ret
ret
repnz
mov
fsubr
(bad)
in
jecxz
repnz
mov
push
or
sbb
in
les
push
sub
outs
in
dec
outs
movs
mov
pop
push
mov
inc
cs
ds
jg
in
pushf
repz
add
call
xor
pop
iret
xchg
leave
lahf
jmp
mov
xchg
mov
test
js
movs
ret
lods
adc
and
ret
xchg
push
or
mov
dec
pop
sub
jge
add
sahf
pop
mov
adc
(bad)
jecxz
rcl
sbb
cwde
mov
mov
lods
stc
scas
cmps
mov
mov
(bad)
and
and
jg
sti
popa
or
test
push
test
jecxz
arpl
mov
push
(bad)
sub
jb
xor
fdiv
sub
lds
fmul
cli
jmp
push
das
and
and
in
pop
stos
jo
repnz
jae
scas
xor
jmp
rol
inc
cmps
pop
or
xor
js
xchg
in
jecxz
aaa
pop
mov
int
jl
shl
push
stc
push
sub
lods
push
in
cmp
mov
or
div
aam
push
dec
and
rcl
jle
int3
imul
sbb
mov
nop
jns
fild
daa
adc
dec
icebp
sub
les
pushf
jmp
add
std
mov
and
jle
ins
and
je
daa
icebp
and
call
mov
addr16
out
push
mov
xor
fst
add
shl
rcr
cli
std
jle
mov
jmp
into
fadd
fldenv
push
or
aad
mov
pop
les
add
psubb
and
inc
jnp
inc
pop
mov
aam
xchg
xchg
rcr
push
adc
or
aas
fiadd
pop
sti
jmp
jp
loopne
(bad)
jno
data16
stc
inc
js
jge
popf
sbb
xchg
push
cdq
sahf
fcmovne
inc
mov
stos
add
lahf
pop
aaa
lea
xchg
loope
adc
mov
fdiv
dec
mov
mov
jns
movs
inc
or
lods
(bad)
icebp
sbb
or
push
fwait
shl
in
scas
pop
shl
pop
cmp
(bad)
jle
ret
loop
lods
mov
sub
sbb
jbe
ret
adc
and
and
push
dec
es
mov
pop
dec
mov
mov
cmp
in
cmp
xchg
jnp
and
mov
mov
push
in
push
mov
and
add
cmp
sub
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
mov
lock
pop
xchg
mov
cmp
dec
sub
arpl
push
cdq
lahf
daa
xchg
xchg
ins
cmp
adc
ins
push
push
mov
jnp
or
cmp
jae
clc
fwait
jecxz
sub
das
jmp
es
and
push
(bad)
fmul
lods
jnp
mov
pop
sub
not
nop
in
pop
dec
push
add
pop
inc
test
lahf
or
and
int
sbb
jae
push
adc
or
enter
inc
mov
lods
cmp
ins
xchg
cwde
pand
add
adc
dec
pop
(bad)
pop
cmps
cld
popf
ins
mov
xor
pop
sub
inc
xor
arpl
or
add
xor
mov
dec
mov
fdiv
inc
jmp
add
(bad)
pop
fcmovnb
scas
dec
gs
push
test
ins
push
cli
iret
movs
fcom
cmc
jmp
test
std
ins
mov
fdivr
test
push
addr16
lds
bound
stc
or
and
dec
fs
push
or
pop
dec
ds
in
cmps
es
mov
(bad)
lods
in
mov
mov
mov
fsub
add
mov
in
daa
add
imul
and
inc
neg
lods
jae
fnstenv
sbb
leave
or
mov
mov
or
push
adc
call
jns
push
test
outs
mov
dec
inc
push
test
mov
add
mov
and
add
ss
cmp
mov
mov
dec
call
int3
xor
mov
xor
ja
int
mov
cmps
mov
(bad)
xor
or
ins
and
sbb
push
sub
std
inc
mov
mov
push
daa
push
and
and
pop
jbe
mov
pop
mov
sbb
lea
sub
ins
xor
xchg
movs
mov
rol
pushf
mov
out
int3
call
dec
out
inc
(bad)
xor
xlat
xchg
loope
ins
cli
adc
out
inc
fisttp
xchg
xchg
popf
xor
ret
bswap
shr
sbb
mov
or
sbb
dec
std
jp
sbb
movs
jl
pop
adc
movs
or
nop
and
mov
adc
ins
fneni(8087
mov
xor
jno
sar
cli
add
inc
cmp
(bad)
dec
adc
adc
xor
neg
sbb
add
xor
cmp
push
and
je
mov
or
(bad)
sbb
test
push
mov
mov
cmc
xchg
and
out
jg
repz
sbb
add
pop
fst
inc
sbb
aam
cli
(bad)
adc
push
dec
jmp
push
pop
and
or
mov
loope
mov
jmp
imul
out
fiadd
(bad)
nop
pushf
cwde
push
or
popf
fild
loopne
mov
push
jmp
sahf
cmp
jb
adc
dec
out
push
fbstp
fiadd
xor
sub
(bad)
sbb
xchg
mov
xor
mul
sti
scas
in
mov
push
pop
es
mov
push
mov
and
or
xchg
pop
aas
leave
cli
and
inc
dec
out
pop
xor
mov
mov
push
loop
jo
inc
xor
daa
mov
push
lods
mov
push
fsubr
lock
test
arpl
lahf
or
shl
mov
push
retf
xlat
div
mov
and
jl
push
inc
loope
aaa
mov
push
pop
retf
sub
ds
and
push
sbb
mov
daa
cmps
rol
scas
push
push
mov
add
mov
jo
jo
out
aam
std
pop
jnp
sub
push
mov
dec
in
mov
inc
cwde
movs
jbe
mov
inc
in
movs
cmp
scas
mov
or
ficomp
(bad)
les
and
cmp
sub
push
jae
xlat
add
sub
out
mov
pop
mov
cdq
sbb
fst
les
pusha
push
hlt
movs
adc
fld
cmp
jo
cmps
push
fld
call
cmp
xchg
add
and
add
and
jns
push
loopne
mov
xchg
test
xchg
dec
aam
push
lahf
leave
fimul
in
daa
push
cmp
xchg
sub
aas
dec
enter
pop
clc
cmp
mov
adc
rol
or
and
inc
out
sub
mov
shl
and
ins
mov
push
dec
arpl
add
aam
and
jne
mov
xchg
mov
daa
xchg
lods
cmps
ja
ins
and
jmp
imul
mov
psubd
jb
dec
icebp
add
inc
enter
and
xchg
nop
cmp
add
add
dec
movs
arpl
pop
sti
pop
mov
xchg
cwde
jmp
mov
sbb
and
cmp
sub
shl
enter
and
mov
imul
out
lea
pop
xchg
clc
in
ret
mov
push
add
adc
cwde
push
push
sbb
dec
sub
xor
cmc
push
std
mov
leave
je
push
(bad)
pop
shr
int3
jnp
xchg
inc
xor
rcr
out
sub
jp
pop
xchg
dec
xlat
pop
mov
cs
push
inc
xchg
mov
jo
pop
clc
iret
pop
sbb
add
std
in
push
mov
xchg
test
leave
or
(bad)
lahf
jl
cmp
rol
std
neg
sub
stos
jno
rcr
(bad)
jno
pop
lods
ret
cmp
iret
adc
and
and
push
call
mov
push
xchg
mov
sahf
fwait
add
call
mov
daa
into
scas
stc
in
je
fst
sub
aas
cmps
xchg
jle
ins
mov
out
xchg
mov
add
cwde
ja
mov
sub
cmp
nop
and
icebp
daa
cmp
mov
(bad)
shl
jo
and
ret
das
xchg
jle
(bad)
(bad)
fs
(bad)
fsub
jo
mov
inc
add
int3
call
pop
xchg
cmp
jle
jle
xlat
(bad)
add
cmp
(bad)
mov
out
sti
mov
xchg
ror
vpsubusw
cs
dec
and
sub
xchg
outs
inc
sub
dec
mov
out
mov
out
inc
ret
movs
ss
loopne
jne
popf
inc
pop
inc
(bad)
jmp
push
jnp
enter
cmp
push
mov
adc
push
jmp
inc
fimul
add
jle
call
mov
and
out
mov
neg
mov
(bad)
int
mov
cmp
fnstcw
fsub
cdq
push
(bad)
cmp
sbb
mov
ins
cmp
gs
shr
or
or
mov
jg
cmps
xchg
popa
inc
rcl
sub
test
pop
and
stc
mov
fwait
mov
xor
loope
fdiv
adc
sub
pop
mov
push
and
iret
retf
push
ror
fnstsw
add
scas
inc
cmp
xchg
mov
pop
add
push
push
mov
fcmovb
pop
and
pusha
xor
out
push
push
fadd
and
or
ins
mov
add
mov
leave
mov
retf
xchg
pop
fisub
int
or
sub
mov
pop
cmp
in
leave
sub
sub
stos
mov
js
mov
xlat
xchg
loope
mov
into
xchg
xchg
mov
pop
adc
mov
xchg
adc
adc
and
mov
mov
push
popa
mov
hlt
dec
cmp
inc
adc
outs
jmp
(bad)
ficomp
pop
outs
ret
sbb
out
jae
mov
push
xlat
sub
aaa
xchg
jmp
ss
mov
lds
pop
test
sub
sbb
repz
in
sbb
fidivr
sbb
or
or
jle
stc
out
pop
and
mov
dec
cmp
cwde
loope
popf
add
loope
pop
pop
push
mov
sub
jo
mov
cli
xor
retf
out
pop
pop
inc
mov
inc
lock
mov
lods
(bad)
cld
cmc
inc
movs
(bad)
fidivr
(bad)
(bad)
mov
sahf
loop
adc
test
jp
sub
mov
pop
pop
hlt
mov
data16
add
test
test
push
clc
call
push
jmp
jle
push
and
das
dec
enter
adc
jle
or
test
(bad)
pusha
ins
jg
aaa
pop
imul
enter
pop
nop
arpl
loopne
push
mov
jmp
(bad)
lock
jne
es
dec
jmp
pop
aam
cmps
(bad)
js
test
lods
or
movs
jno
jge
pop
or
or
cld
in
test
pushf
cmp
xchg
sbb
repz
jp
imul
fcom
arpl
push
ss
cmp
and
cmps
dec
repnz
sar
lock
push
push
xor
fcom
es
or
or
cwde
shl
jno
jg
and
test
ss
mov
jle
pop
call
into
ds
mov
stos
rol
iret
jnp
push
jle
xor
pop
in
mov
retf
frstor
fcmovnb
mov
push
or
loopne
pop
cmps
inc
xor
xor
scas
ret
lds
loope
(bad)
aaa
in
inc
xor
push
or
mov
repnz
push
jne
jno
aad
inc
jle
push
(bad)
mov
push
cmp
xor
jne
add
shl
scas
dec
jge
(bad)
xor
ds
mov
jnp
sbb
pop
iret
icebp
or
sbb
stos
push
sub
lock
(bad)
scas
xchg
fsubrp
icebp
mov
inc
fstp
push
arpl
pop
cmp
ror
dec
lahf
sti
push
pushf
cmp
adc
mov
mov
pop
jmp
fptan
js
loopne
ds
retf
xor
sbb
sete
cmp
lea
xor
inc
ret
rcl
js
ret
pop
mov
hlt
push
push
fadd
shl
mov
jmp
push
xor
jg
push
stc
std
fs
test
jb
dec
test
or
adc
retf
xchg
jmp
inc
pop
sbb
push
les
leave
pop
pusha
gs
sbb
xchg
das
gs
fcomp
cmps
push
jno
inc
call
xchg
xchg
mov
imul
ins
xchg
in
adc
js
outs
scas
test
ja
fadd
and
div
mov
fs
jo
pop
jae
xchg
lea
push
shl
or
xor
sub
leave
adc
inc
mov
or
adc
sbb
ja
arpl
push
cmp
imul
loope
ret
jae
xor
pop
pop
lahf
xchg
aam
sub
and
in
out
xchg
(bad)
sub
ins
stc
pop
jne
xor
imul
imul
pop
inc
lea
iret
pushf
call
xrelease
and
pop
inc
push
call
pop
xor
adc
(bad)
cld
das
in
add
inc
xchg
jnp
mov
call
sub
fs
ins
sbb
adc
es
push
scas
cmp
in
mov
sub
cwde
jge
mov
or
jns
pop
test
inc
mov
int3
xchg
pop
in
and
lods
scas
mov
shl
xchg
xor
and
fwait
sbb
pop
or
mov
bound
cdq
push
and
inc
sahf
mov
or
cld
enter
lds
cmp
or
jp
adc
hlt
retf
fadd
out
pop
jl
adc
outs
ins
into
rcl
mul
jmp
leave
fcmovbe
xchg
jbe
xchg
dec
mov
xchg
cmp
xchg
xor
mov
pop
and
and
dec
mov
adc
(bad)
xor
pusha
clc
xchg
cld
bswap
sahf
(bad)
fild
outs
push
push
xchg
push
xchg
xor
pop
push
jae
loop
sub
mov
jne
(bad)
jbe
sub
inc
sbb
(bad)
xchg
pop
jns
nop
inc
sbb
inc
lods
and
cmp
je
and
fwait
jge
sub
xlat
cmps
(bad)
dec
fcomp
xor
aaa
cdq
mov
popa
cwde
sub
cmp
les
mov
cld
or
ja
dec
mov
(bad)
stos
in
adc
(bad)
sub
push
inc
fist
mov
cld
push
jl
or
dec
test
adc
imul
push
cld
xchg
fcmovnbe
or
(bad)
enter
(bad)
adc
cmp
dec
and
lods
and
rcl
aaa
or
test
retf
add
sub
mov
test
popa
fcmovb
in
out
adc
xchg
dec
pop
popf
pop
adc
int3
sub
mov
out
inc
dec
cli
out
dec
outs
sub
les
pop
(bad)
int3
mov
mov
pop
(bad)
out
mov
cmps
hlt
and
enter
jae
jns
aam
es
pop
jge
movs
stc
jae
out
dec
push
inc
mov
push
loopne
mov
jb
sbb
jbe
stos
cmc
and
(bad)
idiv
repnz
aaa
pushf
xor
inc
enter
ins
jae
out
into
mov
and
push
inc
rcr
or
fisub
cmps
jmp
jmp
fbld
sbb
dec
stc
int3
cmp
mov
cdq
aam
ds
mov
inc
cld
inc
retf
test
cmps
imul
fs
iret
or
sbb
or
xchg
mov
jmp
pop
stos
repz
add
outs
ficomp
jle
mov
popf
mov
fwait
shl
and
in
ret
cli
pop
loop
lods
out
fbld
dec
jns
adc
xlat
stc
sbb
mov
push
sbb
push
push
jmp
adc
icebp
pop
hlt
sbb
in
sub
sub
jge
xor
sub
daa
cli
push
and
jle
pop
mov
iret
mov
hlt
fstp
ror
xchg
pop
xor
inc
push
loopne
es
xor
sub
mov
pop
or
imul
ret
fwait
int3
push
jne
sbb
stos
loop
and
dec
addr16
mov
pop
iret
scas
(bad)
sub
out
jg
mov
cmp
(bad)
add
je
push
int3
pop
fdiv
or
inc
aaa
and
in
call
test
sbb
or
(bad)
adc
xor
pop
mov
shl
jnp
inc
inc
or
test
js
lea
lea
inc
cwde
movs
cs
pop
mov
mov
xchg
arpl
ds
cmps
adc
and
fstp
push
push
(bad)
or
mov
adc
jle
sub
repz
out
(bad)
sti
push
fisttp
push
or
out
fsubr
lea
out
sub
shl
mov
xchg
sbb
fbld
test
xchg
loope
mov
rol
shl
ins
jnp
xchg
cs
(bad)
retf
mov
(bad)
fst
ins
aam
mov
dec
shl
and
aas
mov
dec
ss
pusha
out
test
add
mov
xor
pop
cmp
xchg
sub
outs
xchg
fstp
out
or
lds
push
loop
push
pop
stos
addr16
cmp
jmp
mov
jp
gs
sbb
ficom
dec
fnsave
lods
addr16
jl
mov
jae
mov
aad
movs
mov
add
dec
outs
ss
sub
and
outs
mov
mov
jmp
les
jg
mov
ja
addr16
divps
sahf
js
xchg
psrld
inc
push
jle
and
dec
and
mov
xchg
dec
shr
aam
push
js
out
sti
inc
jns
lods
rcl
shl
lock
out
(bad)
iret
mov
cli
sub
aaa
jp
stc
inc
pop
jge
imul
cld
sub
and
sti
pushf
mov
jnp
sahf
sub
pop
mov
push
cmp
sub
dec
pop
pop
mov
cmps
mov
mov
outs
je
jno
adc
mov
adc
hlt
and
cmps
movs
(bad)
fldenv
sub
outs
xchg
ficom
das
enter
push
pop
pushf
cmp
cwde
and
fistp
arpl
mov
xlat
pop
add
enter
add
jns
loope
mov
push
push
scas
or
add
sbb
popf
inc
into
xor
mov
mov
mov
and
call
scas
mov
retf
mov
enter
fyl2x
jbe
movs
inc
imul
daa
or
add
mov
aaa
fdivr
jb
push
xor
jle
sbb
(bad)
dec
xchg
and
dec
dec
add
dec
cld
adc
movs
lods
pop
xor
and
stos
leave
and
out
or
cli
loopne
cmp
xchg
dec
xor
add
in
sub
mov
clc
pushf
adc
sbb
gs
or
add
inc
aas
and
ins
cmp
and
adc
add
enter
sar
stos
cmp
arpl
fprem1
shl
aam
(bad)
dec
or
cdq
in
retf
shl
ins
mov
cmps
adc
pop
int
mov
or
cmp
(bad)
(bad)
sbb
(bad)
push
leave
fcmovnbe
mov
das
into
repnz
mov
mov
inc
push
pop
cli
push
lods
sti
mov
jle
call
imul
cmc
jecxz
shr
xor
pop
popa
pop
js
sub
fcomp
popa
rcl
movs
dec
sub
push
cmp
outs
inc
add
aaa
sub
lds
cmp
push
jl
push
daa
fisttp
daa
adc
inc
int
sbb
push
(bad)
in
in
xchg
dec
test
jnp
xchg
sub
repnz
fld
(bad)
nop
das
cmp
mov
sub
and
(bad)
mov
icebp
fsub
clc
lods
jne
dec
shr
add
adc
push
aad
test
mov
sbb
push
fistp
mov
push
icebp
mov
mov
adc
(bad)
icebp
sbb
mov
sub
cmp
(bad)
mov
xchg
xchg
sbb
xchg
mov
cmps
enter
aad
call
dec
pop
rcl
std
daa
ror
movs
lahf
or
stos
dec
popf
jae
mov
or
jl
outs
pop
test
jp
xor
arpl
or
in
cmp
xor
mov
xchg
ja
jns
mov
mov
scas
add
and
inc
add
jne
leave
movs
arpl
and
std
fisttp
inc
fisub
hlt
dec
lods
in
outs
mov
repz
jo
in
adc
cmp
pop
data16
jp
clc
in
add
loop
popa
daa
adc
retf
mov
mov
cmp
jno
pop
sub
fcom
mov
(bad)
xchg
xlat
daa
dec
jns
or
sub
sbb
xchg
dec
inc
adc
mov
mov
pushf
cmp
nop
pop
clc
mov
out
fld
cdq
jns
adc
push
inc
aad
jns
xchg
jnp
jg
dec
sub
inc
and
cwde
aaa
dec
mov
push
(bad)
loopne
inc
pop
scas
mov
in
pop
pushf
loop
lods
and
or
scas
data16
adc
ror
or
shl
fdivr
cwde
mov
sub
pop
add
jb
cmps
jg
(bad)
mov
push
sbb
inc
pop
add
scas
mov
clc
out
inc
ds
push
mov
(bad)
xchg
shr
movs
idiv
push
movs
mov
fsubr
ficomp
movs
push
(bad)
push
out
xchg
push
data16
les
in
mov
pop
xchg
dec
pop
mov
dec
ds
jmp
cmc
jmp
mov
scas
mov
mov
jnp
xchg
mov
jg
adc
cdq
xchg
mov
out
loop
loop
fdiv
fwait
xchg
pop
sub
sub
lea
jmp
add
push
fwait
pop
pop
dec
fcomp
cld
inc
xrelease
stos
sub
(bad)
lea
lock
add
and
jnp
aam
popf
jmp
and
inc
push
mov
xor
loopne
pop
stc
lea
cmp
push
xor
xchg
cs
jecxz
push
and
dec
not
clc
dec
xchg
out
add
pop
stos
mov
test
outs
or
inc
xchg
mov
and
imul
cmp
scas
xchg
outs
icebp
mov
add
int3
cmc
pop
or
and
das
xchg
inc
mov
inc
inc
test
xor
mov
mov
cld
ins
scas
push
clc
hlt
pushf
dec
or
xor
and
cmp
xor
movs
xchg
mov
dec
ror
and
xchg
mov
cmc
popf
cmp
push
movs
push
lahf
mov
and
loope
sub
cmp
jmp
and
stos
ds
daa
mov
lods
popa
xchg
leave
dec
dec
(bad)
out
(bad)
push
lods
(bad)
sar
ins
inc
fisubr
adc
repz
dec
push
push
fdiv
or
in
pop
xchg
imul
cmp
add
popa
int
lahf
aad
sbb
in
pop
xchg
adc
adc
xchg
cmps
xor
(bad)
push
mov
mov
xlat
cli
in
enter
popf
mov
and
fdivr
inc
or
dec
out
push
leave
pop
jl
adc
jae
lahf
and
gs
dec
sbb
adc
scas
xor
cmp
retf
movs
test
sbb
icebp
dec
jp
test
out
sbb
cdq
repnz
mov
jmp
jne
pop
add
(bad)
and
dec
popf
test
jno
push
jge
sub
je
adc
fwait
rol
adc
retf
mov
lds
in
das
pop
aam
cwde
movs
mov
push
imul
ins
jo
loop
inc
inc
div
sbb
and
movs
mov
test
xor
jne
jmp
dec
test
sahf
add
mov
pop
das
daa
repz
icebp
xchg
arpl
push
add
sub
mov
jbe
out
xchg
push
pop
sbb
xor
and
out
mov
jnp
adc
sbb
jno
mov
fwait
test
mov
jl
popf
pushf
sbb
lds
sbb
inc
ss
and
xchg
sahf
cli
iret
mov
jae
mov
pusha
xchg
sub
rcl
dec
mov
rep
scas
scas
xor
ds
cmp
mov
sbb
out
sbb
jo
jmp
in
imul
mov
mov
adc
dec
daa
(bad)
pop
pop
pop
int
mov
cmp
sbb
enter
or
mov
ja
adc
or
scas
(bad)
hlt
shr
or
pusha
ja
sti
pop
mov
adc
jl
enter
ins
cmp
cdq
adc
sbb
mov
into
inc
int3
fs
scas
sbb
inc
mov
mov
mov
mov
(bad)
jge
scas
xor
imul
dec
sbb
push
cmps
sbb
clc
add
mov
mov
add
xor
inc
dec
sbb
add
fcomp
cmp
cmp
sub
xor
mov
push
lahf
dec
imul
mov
stc
fstp
and
int
sar
xor
aaa
popf
cmp
movs
jae
cmp
adc
shl
retf
je
ret
and
(bad)
cmps
mov
cwde
call
mov
sbb
aaa
and
xor
add
add
dec
dec
fstp
lods
es
imul
dec
inc
aaa
pop
cmp
sbb
and
sbb
lea
(bad)
out
test
and
cmp
movs
mov
ror
sbb
mov
mov
push
cmp
push
stos
or
stc
mov
ficom
ret
cmp
inc
ror
jmp
lds
sub
jg
imul
in
dec
in
adc
push
sbb
js
test
pop
imul
lods
in
sub
sub
add
ins
or
arpl
inc
push
data16
(bad)
jmp
iret
pop
out
jmp
cli
daa
xchg
pop
fsubr
mov
(bad)
pop
pop
cmp
cwde
xor
sbb
mov
dec
dec
into
adc
cdq
outs
pop
adc
ret
adc
sti
dec
es
cmp
in
cmps
pop
cmp
sub
loop
dec
xchg
xchg
scas
push
(bad)
repnz
jmp
xor
ret
or
mov
in
enter
dec
test
push
aaa
mov
repz
out
and
ret
movs
pop
mov
stos
and
daa
mov
mov
dec
mov
pop
sub
mov
popf
add
jmp
mov
icebp
adc
popa
or
mov
mov
pop
daa
dec
retf
push
xchg
jb
std
div
test
add
and
pop
or
add
sub
xchg
adc
movs
xchg
popa
mov
mov
hlt
sub
mov
cld
arpl
push
jno
imul
arpl
gs
stc
out
gs
jge
pop
lahf
fidivr
sbb
sub
mov
mov
push
shl
sti
push
jmp
jbe
sbb
arpl
sub
test
retf
jmp
dec
adc
call
cs
pusha
add
mov
lock
aam
in
cmp
popf
js
cmp
push
xor
loop
(bad)
in
and
mov
cli
inc
adc
pop
jbe
dec
repz
into
and
je
repz
retf
ret
(bad)
sub
sub
or
std
mov
outs
bound
push
popf
mov
loopne
mov
outs
sti
cdq
out
outs
mov
leave
cs
ja
adc
fwait
in
jmp
jns
jmp
pop
out
neg
mov
xor
pop
stc
fld
je
push
mov
add
out
pop
int
sbb
cdq
and
cmp
ficom
jecxz
adc
scas
dec
xor
(bad)
sub
ss
mov
(bad)
jno
imul
xchg
sbb
lods
xchg
movs
sub
cmc
shr
mov
pop
jmp
popf
repnz
out
or
call
sub
stc
xor
sar
lods
rcl
xchg
xchg
jne
or
retf
inc
jmp
push
or
mov
popf
dec
xchg
ds
stc
xor
mov
(bad)
loope
sub
out
dec
js
rcl
mov
inc
mov
add
into
sbb
xchg
and
add
mov
xchg
mov
and
repz
mov
call
in
mov
test
mov
test
(bad)
loopne
mov
mov
inc
test
jmp
and
loopne
xchg
add
mov
lods
xor
mov
add
inc
enter
sbb
call
add
rol
jge
add
test
mov
adc
call
loop
or
inc
add
pop
out
jecxz
and
sbb
mov
add
pop
push
mul
outs
mov
movs
cmps
add
sti
sbb
jnp
add
pushf
loop
dec
dec
(bad)
aaa
push
sbb
pop
setne
rcr
mov
xchg
mov
retf
fucom
mov
jp
je
in
imul
sbb
jne
repz
add
cmc
ficom
and
clc
cmp
lea
dec
aas
xchg
clc
jp
mov
jo
(bad)
or
push
jl
popa
cdq
test
fisttp
jmp
xchg
ret
fld
sub
shl
pop
test
xchg
pop
dec
push
call
dec
pop
inc
hlt
xlat
dec
pop
sbb
push
test
shr
adc
mov
sub
aaa
shr
mov
adc
cdq
stos
jecxz
sbb
xchg
jb
mov
rep
mov
aaa
jo
enter
mov
jb
push
pusha
adc
imul
call
inc
(bad)
fdiv
jbe
cmps
mov
mov
gs
aaa
cmp
es
loop
mov
sub
out
call
ds
dec
pop
mov
jle
repz
mov
popa
repz
or
cld
jo
pop
and
test
mov
xor
xor
mov
or
jns
adc
iret
or
repnz
icebp
cmp
sub
push
dec
icebp
push
mov
sbb
lock
pop
data16
jo
inc
and
sahf
jno
push
xchg
xor
sbb
jb
mov
mov
jmp
test
pop
jno
out
push
imul
pop
mov
pop
retf
jmp
and
mov
jne
xchg
jne
or
addps
push
xor
mov
ins
outs
dec
push
loope
mov
xchg
shl
inc
and
jnp
mov
fistp
inc
sbb
iret
mov
dec
inc
mov
mov
popf
xchg
xor
or
inc
ror
dec
add
sbb
pop
and
push
xor
jp
(bad)
mov
xor
mov
(bad)
push
aas
ror
bound
popf
frstor
jle
jo
out
xchg
ss
push
add
inc
or
cwde
rcr
jge
add
data16
cs
cmp
iret
mov
or
mov
ds
pop
cwde
mov
adc
xchg
(bad)
ret
mov
dec
jnp
sbb
fstp
xor
shl
outs
movs
int3
xchg
call
cli
call
xor
or
fisubr
retf
push
adc
push
ja
clc
inc
int
push
push
add
fst
xor
push
test
xor
cmp
sbb
push
pop
pop
xor
mov
push
ss
repz
addr16
test
jb
fcomp
jo
and
push
adc
add
hlt
mov
push
int3
mov
or
dec
popa
out
shl
xchg
daa
mov
mov
mov
outs
and
aas
dec
sahf
ins
gs
and
push
loop
jb
cs
out
gs
jmp
test
dec
and
xchg
push
adc
sbb
(bad)
cdq
cmp
jg
sbb
imul
jmp
xor
addr16
sub
push
mov
inc
repz
pop
xchg
(bad)
aaa
nop
out
ja
imul
pop
popf
out
sub
push
dec
(bad)
popa
push
pop
cmps
rol
push
aam
dec
jecxz
adc
loop
mov
jno
aaa
pop
fcmovb
ins
cld
in
call
popf
push
ret
test
retf
mov
mov
lahf
aad
mov
es
push
xchg
cmp
or
mov
jbe
ret
sbb
mov
rol
repz
rcr
xchg
inc
pushf
mov
in
jno
imul
jne
pop
std
sar
push
sti
outs
xlat
inc
mov
and
adc
mov
fcom
repz
dec
push
jo
jb
jecxz
retf
dec
stc
das
mov
push
mov
sub
imul
add
inc
mov
dec
xchg
xchg
sbb
add
mov
std
xlat
dec
dec
int
mov
(bad)
dec
cld
add
stc
int3
mov
sbb
fist
mov
movs
lahf
inc
repnz
xchg
ds
mov
daa
xor
dec
cmp
loopne
xchg
inc
push
jae
add
xchg
lea
out
adc
cmp
ins
sti
or
sbb
xor
(bad)
mov
fcomp
je
xchg
jg
imul
xor
loop
retf
movs
sbb
mov
shl
and
sbb
into
in
xchg
mov
nop
or
cwde
gs
rcr
adc
or
xor
xor
clc
jle
rol
xor
adc
cmp
(bad)
hlt
dec
push
aam
cmps
xlat
call
adc
(bad)
es
inc
xchg
pushf
dec
scas
in
shl
push
mov
mov
pop
sbb
clc
jo
icebp
jbe
xchg
cmp
enter
retf
leave
fchs
hlt
jo
aas
aam
mov
push
xchg
sub
stos
call
jo
mov
xchg
sub
pop
push
add
cmps
pop
icebp
stc
into
je
xor
js
mov
mov
add
fwait
push
adc
xlat
xchg
dec
jae
cmp
xchg
push
movs
mov
pop
cli
rcl
mul
outs
cmps
ret
add
addr16
xchg
xchg
pop
fwait
(bad)
mov
ja
mov
jns
mov
cld
fs
cmps
pusha
xor
pop
inc
movs
adc
mov
sti
jns
xor
sar
jge
test
dec
mov
mov
addr16
xor
adc
jno
fmulp
sbb
push
jns
in
push
arpl
mov
cmps
fild
mov
jbe
pop
(bad)
jns
cmc
sti
in
sbb
inc
add
aaa
lods
jns
or
popa
pusha
std
sbb
jnp
enter
mov
loope
pusha
inc
sub
imul
mov
xchg
sub
aad
xchg
icebp
lds
xchg
sahf
cmc
mov
or
cmp
pusha
lods
addr16
imul
je
not
jmp
outs
cmps
sbb
(bad)
cmp
mov
test
mov
push
enter
shr
cmp
cwde
pop
out
cmc
push
out
sub
pop
or
enter
push
lea
repz
push
push
fwait
dec
clc
mov
test
dec
fcmove
dec
inc
adc
cmps
mov
xor
cmp
shl
jp
ret
ins
imul
popa
sbb
cwde
ja
(bad)
and
mov
xor
cmps
push
(bad)
addr16
fisttp
adc
sub
mov
inc
lods
jne
sbb
xor
sub
scas
mov
cmp
imul
fs
ficom
push
mov
pop
cs
ja
icebp
into
enter
or
rcl
push
cs
xchg
ds
push
loopne
cdq
or
mov
xor
xchg
mov
popa
xchg
or
pushw
das
jae
adc
lods
les
fisttp
inc
or
cwde
mov
mov
xchg
push
loopne
inc
push
mov
scas
rcl
push
fcmovu
push
mov
(bad)
rcr
jmp
push
sti
gs
jecxz
jge
adc
inc
pop
rcl
sar
jmp
dec
(bad)
pop
mov
lea
sbb
fisttp
push
(bad)
mov
jmp
fild
inc
pop
push
mov
in
aaa
mov
jecxz
test
push
dec
loope
cmp
jno
ins
lahf
test
stos
mov
pop
scas
jg
xor
sti
inc
(bad)
cmp
fstp
fs
adc
stc
push
and
or
push
sti
lahf
retf
and
int3
rcr
push
jae
xchg
arpl
sbb
push
out
test
dec
out
mov
dec
ins
sbb
jl
cmp
mov
fmul
jg
or
aas
imul
arpl
dec
xchg
jbe
clc
or
or
imul
mov
sub
leave
dec
aas
and
inc
push
push
or
sbb
lahf
or
jmp
shr
push
push
mov
into
enter
pop
scas
pop
imul
cs
scas
mov
(bad)
lods
lods
push
cmp
mov
fistp
push
es
dec
sub
vunpcklpd
sub
mov
lock
or
ins
out
sbb
sti
xor
(bad)
mov
jns
or
jae
call
xchg
cmps
push
jp
scas
push
(bad)
cmp
cmp
sub
push
push
test
test
ins
jb
loopne
lds
push
mov
jecxz
xor
adc
bound
(bad)
ficomp
stos
rol
out
pop
cmp
push
rcl
enter
push
je
push
adc
sti
in
xchg
gs
enter
push
shl
mov
mov
mov
js
rol
pusha
add
dec
xchg
jns
pop
cmp
repz
sub
push
inc
mov
mov
out
sahf
into
movs
retf
imul
sbb
sbb
xchg
cmc
sub
mov
inc
xchg
icebp
test
cld
jecxz
repnz
mov
inc
dec
sbb
fwait
pop
iret
add
fdivr
imul
clc
sbb
out
call
fistp
call
xchg
inc
mov
inc
lods
fdiv
les
lea
or
cmp
mov
or
xchg
js
lock
loop
jg
int3
mov
and
mov
rcl
or
push
mov
lds
(bad)
mov
push
push
mov
inc
mov
mov
jne
inc
jle
lahf
fwait
cmp
cmp
dec
scas
stos
jmp
(bad)
mov
sti
dec
mov
push
xchg
inc
mov
mov
mov
and
ins
mov
out
push
mov
and
mov
cmps
mov
lods
sub
cwde
sub
xchg
mov
jge
icebp
xor
push
aam
repnz
pop
jle
(bad)
mov
je
xor
adc
mov
add
push
scas
data16
adc
inc
je
dec
ins
aaa
repz
jbe
ins
mov
stc
popa
mov
mov
shl
outs
jmp
xor
adc
mov
cmps
push
dec
dec
push
push
pop
xor
cdq
mov
cmp
es
push
pop
ror
jae
movs
lea
mov
push
retf
jle
retf
imul
mov
fstp
and
mov
inc
ror
sub
and
dec
ins
xchg
cmps
jne
addr16
pop
add
mov
and
cmp
pop
leave
sub
ss
pop
lahf
test
xor
cmp
sub
xchg
ds
mov
adc
aam
mov
scas
xor
pop
jns
movhps
movs
pushf
jmp
push
jecxz
les
jne
mov
movs
mov
inc
gs
push
sbb
out
jae
retf
imul
dec
jno
repnz
cmp
dec
adc
test
xor
daa
jno
mov
sub
pop
cmp
retf
pop
or
out
cmc
push
add
inc
mov
mov
sbb
mov
push
mov
aas
cmc
test
cmp
mov
loop
sub
shr
or
add
sbb
mov
inc
push
sub
add
xor
test
lar
inc
hlt
popf
push
cs
jnp
pop
add
addr16
xor
sub
pusha
add
mov
adc
adc
ror
pushf
ds
hlt
xchg
cwde
mov
in
cmp
pop
loopne
imul
jl
xor
test
push
xchg
hlt
add
push
dec
fisub
xor
sbb
add
mov
and
pop
pop
and
int
pop
and
sbb
pushf
in
and
int3
ins
jmp
mov
inc
jae
cmps
sub
pop
leave
mov
shl
dec
loope
scas
(bad)
test
inc
popf
scas
rol
jbe
xor
adc
icebp
pop
fwait
ret
dec
mov
scas
fcomp
push
push
rcr
sbb
js
and
mov
pop
sbb
rcr
or
sub
push
dec
int3
push
xchg
outs
push
cmp
or
addr16
jb
lds
pusha
push
(bad)
sub
les
out
mov
ss
ins
xor
add
dec
or
xchg
jne
scas
(bad)
pop
add
jmp
pop
daa
lahf
cdq
and
stos
in
outs
inc
mov
inc
popa
lods
mov
iret
and
mov
xchg
push
push
(bad)
mov
add
(bad)
xchg
xor
pop
cmp
jg
pop
xor
mov
add
xchg
out
mov
or
loop
repz
sbb
dec
sahf
das
icebp
cwde
daa
mov
xor
mov
cmp
pop
aas
mov
sbb
jmp
iret
fs
ret
jns
test
and
mov
and
jne
lods
add
cli
push
mov
lods
inc
jp
mov
aaa
and
sbb
ds
push
push
fcomp
and
pop
cli
fld
inc
jnp
aas
push
ss
sbb
mov
loopne
jbe
cli
call
mov
cmp
icebp
(bad)
mov
clc
dec
pop
bound
sbb
mov
shl
xor
scas
cmc
pop
lods
push
out
fistp
cmps
jg
scas
ja
mov
xchg
(bad)
shl
jg
add
cmp
movs
les
add
out
out
hlt
jl
mov
mov
mov
add
push
loop
lahf
in
lods
fild
loopne
mov
cmp
mov
mov
mov
je
repnz
adc
dec
push
dec
inc
hlt
fiadd
into
pop
and
push
jns
(bad)
lds
adc
fdivp
rcl
cmp
adc
stos
ret
xor
nop
dec
in
mov
mov
out
sbb
out
ret
std
dec
add
xchg
adc
dec
dec
add
jne
mov
add
cmp
adc
push
loop
aam
mov
and
je
push
add
dec
sbb
cmp
cld
xchg
ret
je
pop
(bad)
cld
sub
popf
gs
mov
lds
mov
cmp
cld
or
push
test
(bad)
stos
std
daa
call
dec
lahf
jmp
fisttp
or
fs
mov
popa
dec
(bad)
div
(bad)
hlt
mov
lods
mov
adc
jmp
ds
and
jge
and
icebp
jecxz
add
add
sub
xchg
popf
lock
pcmpeqw
sub
retf
or
nop
test
sub
into
xor
push
adc
jne
mov
aas
cmp
not
in
iret
pop
call
retf
mov
fcom
jae
push
sar
call
hlt
xor
pop
test
aam
dec
xchg
pop
push
pop
cld
xor
sub
cli
adc
aaa
ds
(bad)
mov
inc
enter
sbb
ret
into
in
call
lods
cdq
shl
pop
ret
pop
lea
cmps
jmp
ficomp
es
neg
ret
aaa
adc
(bad)
out
nop
mov
outs
(bad)
cmc
cmps
and
adc
idiv
mov
into
and
(bad)
jmp
cmp
sbb
loope
inc
push
xchg
mov
sbb
pop
in
push
push
jg
add
gs
mov
repnz
ins
push
inc
and
sub
mov
pop
add
or
loope
bound
sub
js
push
cmps
sahf
mov
mov
add
mov
cwde
xor
dec
daa
lods
cmp
or
repz
push
mul
mov
xor
adc
adc
and
fsubr
sbb
jp
movs
arpl
xchg
jecxz
mov
dec
neg
mov
push
mov
bound
idiv
test
ss
out
adc
add
stos
mov
iret
mov
sub
or
hlt
ds
mul
ror
adc
(bad)
pop
push
xchg
and
mov
jmp
pop
xchg
mov
xor
movsx
cmp
pop
xchg
outs
jnp
dec
mov
sub
fldenv
movs
lahf
sar
mov
and
push
adc
xor
or
pop
jno
sar
sbb
push
popa
jno
pop
jns
dec
repnz
call
dec
add
add
ins
repz
outs
inc
loop
hlt
dec
lods
jo
jmp
out
add
mov
push
add
loope
leave
xchg
rol
xchg
cli
mov
rcl
pop
(bad)
and
or
in
fdivrp
sbb
and
xchg
add
nop
pop
push
outs
jl
mov
adc
add
pushf
cli
stc
mov
adc
xor
mov
pusha
xor
inc
std
or
pop
sub
xor
mov
jmp
or
cmp
test
mov
lea
rcl
ja
push
fwait
or
loope
mov
rol
repz
dec
xchg
push
dec
or
cmp
cmp
dec
jno
je
pop
mov
push
adc
push
dec
xchg
mov
js
mov
cmp
ins
fwait
sbb
mov
cmp
mov
mov
inc
hlt
repnz
mov
mov
repz
pop
cmp
cmp
push
inc
repz
push
jns
cwde
dec
(bad)
sbb
stos
popf
dec
mov
and
jmp
jbe
es
addr16
add
out
xchg
ds
cmp
fldcw
stc
dec
xchg
shr
mov
push
push
outs
rcr
repz
sbb
ret
push
mov
or
(bad)
sbb
mov
imul
test
test
xor
sub
out
ret
jmp
lods
aad
(bad)
into
adc
cmp
xlat
and
or
scas
out
adc
fst
mov
test
mov
repz
in
sub
mov
mov
lock
setbe
xor
cmps
(bad)
popa
dec
push
jae
addr16
hlt
jbe
fsubr
inc
push
dec
enter
and
mov
mov
data16
cmp
xchg
ins
mov
pop
xlat
inc
pop
(bad)
nop
sbb
fstp
mov
jb
mov
daa
cs
cmp
xor
or
dec
lock
call
jmp
cmc
sar
(bad)
jle
inc
movs
iret
xor
lods
xchg
inc
repnz
cmp
into
push
mov
ror
fbstp
add
shl
push
test
add
mov
sub
sahf
jmp
fdivr
adc
ja
push
mov
mov
mov
or
inc
push
mov
xchg
lds
push
mov
idiv
lock
scas
scas
enter
dec
cld
inc
fwait
call
popa
imul
pop
test
cdq
mov
inc
mov
shl
aam
adc
fs
cmps
inc
aam
fild
addr16
mov
xchg
call
xor
xor
xchg
clc
setbe
jp
call
jge
pop
lea
push
(bad)
fst
in
sub
jnp
xchg
dec
aad
xchg
fidivr
mov
(bad)
std
mov
fld
dec
popf
inc
sub
rcr
sbb
fcom
and
pop
adc
pop
iret
jge
retf
test
jp
jle
jmp
leave
hlt
rdmsr
sbb
add
sub
or
js
not
nop
xchg
jnp
cs
xor
jp
jne
lds
push
aad
and
add
sub
jne
mov
xchg
jnp
sbb
std
pop
movs
and
mov
dec
popf
jge
pop
push
add
xchg
fsub
lods
xor
iret
sbb
fisttp
and
pushf
ror
mov
pop
test
adc
add
addr16
cmp
mov
out
test
popa
cld
lock
div
ins
xor
inc
mov
retf
mov
aam
stos
dec
mov
clc
push
imul
les
push
cmps
imul
in
jmp
adc
mov
imul
or
call
les
push
outs
jp
loopne
retf
repz
rcl
int3
retf
sbb
popa
pop
dec
pop
cld
xor
jmp
dec
xchg
(bad)
hlt
in
mov
sbb
shr
or
ret
sahf
jb
gs
loopne
mov
test
fld
sub
pop
scas
cdq
sahf
mov
data16
imul
sbb
popf
mov
mov
sub
mov
dec
stos
lock
in
xchg
out
out
xchg
fldenv
lds
mov
imul
inc
test
xchg
mov
dec
(bad)
push
add
cdq
sub
and
inc
sub
lds
ror
pop
or
xchg
and
mov
rcl
loopne
mov
add
xchg
jecxz
retf
sbb
repnz
ins
xchg
adc
call
and
adc
inc
je
jb
mov
sub
sar
aaa
dec
cmp
outs
push
fisttp
xchg
pop
adc
mov
jle
ss
aad
pop
loopne
mov
or
push
push
imul
add
int3
call
sbb
and
and
mov
dec
adc
mov
add
or
xchg
dec
dec
ins
mov
hlt
ret
lahf
inc
shr
add
adc
push
inc
lahf
mov
cmp
in
xchg
pop
cmovae
pop
pop
iret
ror
je
sbb
lods
cmps
test
enter
xchg
mov
lods
sbb
int
sub
push
js
nop
jne
push
mov
pop
jo
mov
inc
loope
test
je
mov
loop
ins
jae
sub
mov
jmp
sub
mov
add
mov
mov
push
sbb
out
cmp
xor
(bad)
mov
or
or
push
sub
test
rol
push
stos
(bad)
add
cli
mov
xor
fistp
mov
fcmovbe
push
inc
inc
(bad)
ret
push
jno
xor
sub
cmp
jle
mov
lock
scas
and
out
pop
adc
retf
iret
mov
and
pushf
in
jecxz
int
sub
mov
imul
sbb
mov
mov
call
add
jmp
or
clc
push
sbb
xor
inc
sbb
and
stos
cmp
mov
pusha
rcl
xchg
dec
pop
adc
std
sahf
xor
sub
pop
(bad)
in
dec
test
ret
mov
pusha
push
cmp
inc
sbb
retf
sbb
in
int
imul
jo
fcmovb
lods
lea
add
das
xor
rcl
add
lds
(bad)
mov
push
les
xchg
push
cmp
lock
jae
dec
mov
sub
mov
jmp
sbb
xchg
aad
mov
jae
sbb
in
(bad)
pop
ins
inc
xlat
and
hlt
mov
sbb
or
or
daa
push
push
in
pop
mov
std
push
and
and
xor
push
mov
cmp
iret
pop
nop
cmp
mov
(bad)
loop
or
pop
jge
repz
fld
push
std
loopne
lods
std
sbb
ins
bound
lahf
jg
pop
pop
jb
mov
mov
mov
or
loopne
add
es
mov
inc
pop
mov
pusha
mov
and
inc
cmps
loope
jo
inc
ss
popa
aam
scas
cmp
int3
lahf
call
loop
inc
add
inc
sub
dec
mov
pop
mov
fsubr
mov
jl
fs
sub
jmp
popa
mov
mov
inc
leave
mov
mov
sbb
xchg
pop
out
lock
adc
or
out
mov
loopne
bswap
mov
push
cmp
push
ret
jo
sbb
push
dec
push
push
arpl
dec
xor
cmp
push
sbb
or
ins
push
gs
scas
iret
or
dec
in
out
ins
or
adc
mov
jl
lods
popa
lods
mov
and
fcom
xchg
js
test
div
stos
in
cmp
cs
jmp
in
retf
inc
dec
frstor
mov
dec
fcom
test
xlat
in
pop
pop
stc
cwde
call
dec
push
xchg
lods
mov
or
(bad)
mov
mov
aad
fcmovu
dec
xchg
xor
fcmovu
stos
fs
and
xlat
mov
sub
add
test
shr
add
rcr
fmul
xchg
imul
out
fsub
dec
pop
sbb
mov
inc
add
scas
mov
(bad)
push
or
int3
pop
popf
cld
test
push
stos
call
js
push
mov
(bad)
out
cld
stc
xchg
ret
mov
push
sub
dec
out
test
cmp
jb
retf
mov
not
in
xor
es
cs
xchg
mov
cmps
dec
(bad)
repz
call
or
fsubp
push
lea
in
dec
enter
mov
int
sbb
mov
pop
mov
adc
adc
cmc
in
and
inc
test
(bad)
clc
call
aaa
fld
or
or
dec
push
rcl
cli
(bad)
jne
mov
mov
mov
sbb
stos
movs
loope
cwde
jns
xchg
shl
aam
push
or
enter
pop
and
ret
ffree
dec
push
push
xchg
sahf
leave
adc
cmps
stos
mov
cmp
jmp
mov
fild
cdq
xor
sti
push
sahf
xchg
add
dec
mov
test
arpl
ins
neg
xchg
cdq
es
sbb
popa
dec
mov
push
or
das
mov
sbb
stc
outs
sub
test
popa
movs
dec
stos
(bad)
mov
fwait
mov
adc
movs
repnz
pop
dec
push
cmp
out
fld1
scas
xchg
mov
pop
jae
sbb
fadd
lock
ins
mov
and
clc
(bad)
test
mov
addr16
xchg
sub
mov
pop
jno
mov
loopne
sub
test
jp
pop
dec
jg
repnz
dec
nop
stos
xchg
mov
mov
icebp
in
loope
fmulp
add
xor
jnp
sub
xchg
mov
outs
mov
push
cmp
retf
adc
pop
and
and
icebp
push
call
js
mov
cld
les
rol
push
pop
jecxz
and
scas
js
jno
leave
retf
loope
(bad)
mov
xor
daa
xchg
push
lahf
or
add
cmps
and
jmp
sbb
mov
not
add
sbb
add
retf
loopne
push
cmp
push
push
xor
mov
sub
and
push
imul
or
mov
test
sbb
movs
(bad)
das
pop
jmp
lds
mov
rcr
in
pop
repnz
scas
ss
xchg
adc
dec
mov
adc
mov
call
pop
mov
jmp
sbb
inc
int
sti
jbe
push
push
cmp
fs
xchg
cs
scas
jle
dec
and
(bad)
lods
sbb
fdiv
and
popa
loop
(bad)
outs
inc
loopne
mov
jmp
mov
imul
test
movs
push
mov
lods
xchg
enter
and
int
jge
mov
test
xor
ret
cli
push
lock
and
cs
fsub
mov
pop
mov
dec
lods
cmp
(bad)
fs
push
pop
pop
aaa
or
pop
push
mov
jecxz
and
(bad)
jg
cmp
ror
aaa
or
inc
cmps
pop
popa
xchg
cli
ins
call
mov
les
pop
ins
stos
jb
in
int3
xchg
or
fsubr
push
mov
inc
mov
cmp
cld
test
jmp
lahf
(bad)
popf
dec
in
push
xor
test
rcr
pushf
popa
xchg
out
icebp
shl
stc
push
sub
push
sbb
fisubr
(bad)
xchg
cmc
inc
and
cmps
dec
jae
sub
dec
push
xchg
test
scas
ins
inc
mov
arpl
or
nop
add
iret
sub
mov
lods
and
rcr
mov
das
push
mov
fdivr
add
mov
or
cmp
into
repz
adc
lock
and
ss
pop
or
add
test
mov
call
jge
cs
inc
cmp
sub
mov
mov
js
js
sub
and
sub
xlat
cs
out
mov
jl
sub
mov
inc
jmp
imul
adc
in
mov
xchg
mov
push
add
fld
sbb
jg
inc
adc
xor
inc
inc
mov
mov
test
(bad)
int3
mov
aam
inc
or
adc
mov
jo
leave
fdivr
dec
lock
lea
std
push
fld
jbe
add
arpl
xor
push
mov
pop
or
stos
arpl
int
retf
lahf
push
push
cld
out
or
mov
(bad)
cmc
je
mov
leave
jle
iret
pop
imul
iret
pop
cld
cmp
jno
and
mov
dec
jge
cmp
ficomp
adc
mov
adc
enter
mov
adc
mov
dec
sbb
push
jg
and
pop
call
test
mov
pop
cmp
out
or
add
mov
mov
jmp
add
xor
in
mov
sub
pop
push
adc
jo
sub
lea
xchg
ja
and
ins
jne
popa
mov
cmps
push
mov
test
xlat
push
test
(bad)
jmp
std
xor
adc
cmp
clc
mov
clc
scas
xchg
inc
dec
or
mov
rcl
ds
xchg
test
or
(bad)
and
ja
inc
jmp
or
leave
stos
sub
jl
shl
inc
pop
inc
iret
fstp
push
jo
shr
dec
je
pop
(bad)
mov
ficom
fdiv
mov
push
push
icebp
xchg
mov
mov
stos
mov
xor
xor
stos
inc
ins
or
ins
adc
inc
jne
xor
out
sbb
lahf
scas
aaa
adc
cmp
or
jns
popa
scas
dec
push
mov
sub
aas
mov
jp
cdq
out
hlt
sbb
sub
cmp
jmp
mov
scas
fstp
push
xchg
rol
xlat
dec
test
in
js
and
rcl
cmc
in
jecxz
test
std
pop
aas
not
jmp
sub
mov
sbb
imul
mov
push
das
add
add
pop
data16
pop
rcr
in
sub
mov
sar
ret
mov
fimul
mov
sub
and
jns
stc
pop
js
aas
inc
push
xor
sbb
dec
loop
(bad)
dec
dec
xor
or
test
lock
out
mov
repnz
lea
inc
leave
scas
in
adc
xlat
xchg
fcom
pop
adc
pop
adc
jmp
xchg
out
mov
push
aaa
mov
and
mov
mov
call
es
ret
cwde
jno
jmp
je
fbstp
(bad)
mov
cmps
xor
mov
sahf
or
or
sbb
pop
ret
xchg
pop
hlt
(bad)
adc
jl
shl
(bad)
pop
repz
imul
or
in
pusha
xchg
inc
(bad)
shl
aaa
push
sbb
mov
out
sbb
fwait
in
jecxz
pop
pop
cdq
cdq
ficom
adc
inc
sti
pop
lea
loop
sbb
mov
inc
sub
xchg
fs
pop
lea
pop
push
bound
movs
call
stos
dec
pop
imul
cdq
mov
adc
cmps
pop
mov
loopne
jb
push
fcmovu
shl
cmc
pop
sbb
xchg
inc
retf
pop
ret
mov
data16
sbb
ins
lea
mov
fcom
sub
gs
push
jae
mov
stos
not
addr16
mov
mov
out
popa
jl
push
enter
and
push
(bad)
test
push
adc
test
out
cdq
call
ja
mov
lods
mov
mov
call
out
mov
mov
cmp
inc
push
dec
fld
pop
xor
jno
cmc
mov
scas
fnstsw
and
lods
jne
hlt
adc
icebp
scas
das
(bad)
(bad)
cmp
adc
fbld
mov
adc
inc
pop
sub
ror
xchg
and
inc
or
adc
ficomp
in
add
js
(bad)
imul
out
rol
in
out
sahf
xor
sbb
jns
mov
push
inc
cmove
(bad)
fwait
mov
dec
mov
and
adc
mov
xor
fild
jecxz
cld
inc
inc
(bad)
hlt
cs
lock
ja
xchg
stc
jecxz
neg
inc
ficomp
es
lea
mov
add
mov
xlat
sbb
pop
popa
or
add
imul
std
sub
xchg
pop
adc
mul
push
mov
(bad)
mov
mov
mov
aad
jne
push
mov
cmc
cli
sbb
add
cmp
mov
fisub
aaa
mov
push
pusha
mov
rol
cwde
mov
push
jae
ja
cmp
inc
xchg
push
push
cld
jae
lea
or
sbb
pop
fsub
bound
in
rcr
jmp
sub
fs
sub
add
rcl
ja
cmovns
pop
ja
sub
push
pop
enter
das
in
add
jg
test
fidiv
sbb
lods
fwait
cmp
fsub
test
test
ins
and
mov
pop
push
inc
sbb
push
pusha
rcr
clc
dec
lods
adc
mov
repnz
push
inc
or
in
mov
out
lock
xchg
add
lock
and
xchg
lds
call
mov
xchg
and
adc
inc
push
in
mov
and
push
in
enter
test
fs
xchg
xor
test
jmp
push
sahf
test
mov
push
aad
push
(bad)
das
fdiv
xor
cmp
xchg
loopne
loop
loop
cmps
sbb
push
in
dec
rol
test
lock
setno
aam
cmps
les
adc
icebp
xchg
cmp
fbstp
sti
cmp
fimul
sar
lock
jg
and
cmp
sahf
ret
pusha
xor
movs
aas
dec
movs
and
pop
dec
cmp
lods
test
xor
in
dec
adc
xchg
or
dec
sbb
xchg
call
sbb
jae
adc
pop
stc
xchg
stos
pop
push
push
or
jmp
cmp
push
outs
stc
mov
push
gs
ds
test
sub
and
test
fld
mov
fsub
pop
aas
jg
add
and
xchg
mov
stos
(bad)
inc
mov
mov
enter
inc
stc
js
add
push
jmp
xor
not
fbld
cmc
mov
in
adc
xor
jne
sub
mov
inc
add
cmp
sbb
or
cmp
adc
pop
mov
(bad)
out
(bad)
std
mov
fst
dec
fmul
dec
jb
bound
cwde
iret
shr
outs
xchg
retf
xchg
cld
mov
pcmpgtb
mov
scas
pop
in
pop
retf
sbb
adc
fmul
outs
hlt
data16
mov
fmul
out
cmp
cmp
in
push
pop
add
sub
hlt
sahf
lods
and
xchg
in
and
pop
xchg
dec
in
mov
scas
lock
dec
adc
(bad)
shr
or
rcr
(bad)
mov
jb
dec
sub
fidiv
cmp
xor
cmps
fsubr
inc
movs
bound
shl
call
add
daa
xchg
lods
push
jge
xor
je
mov
adc
ret
pop
addr16
sbb
cs
jecxz
dec
push
sbb
ins
or
dec
imul
(bad)
movs
in
push
test
and
outs
sbb
retf
xor
int3
fadd
sub
cmp
mov
jle
xchg
jmp
inc
aaa
xor
xchg
inc
mov
es
or
pop
out
add
and
fidiv
push
mov
dec
loopne
mov
dec
aam
sti
add
push
mov
sbb
out
ret
scas
add
mov
and
repnz
out
test
ins
jno
mov
add
add
jns
sub
movs
add
jle
stos
arpl
leave
and
pop
xchg
xchg
out
cmp
dec
sub
push
loope
repnz
xor
dec
scas
dec
(bad)
shr
cmp
xchg
(bad)
ds
add
call
not
mov
ins
aas
adc
nop
mov
jge
(bad)
xor
xlat
or
jns
adc
lea
ins
dec
or
in
sub
inc
push
mov
push
or
mov
mov
jmp
xor
aad
fist
cmp
rcl
fcmovnu
mov
sub
xor
cmps
ja
dec
mov
test
pop
dec
xchg
jne
sbb
in
inc
frstor
dec
xchg
jge
dec
push
pop
call
or
das
dec
xchg
push
lods
push
push
(bad)
cmp
test
mov
inc
sbb
pop
stos
jmp
les
retf
adc
mov
sub
jg
(bad)
scas
jne
std
push
adc
pop
(bad)
mov
shl
sub
stos
xchg
(bad)
jmp
sub
push
(bad)
jmp
les
lods
sub
test
push
sbb
retf
(bad)
(bad)
retf
movs
xor
mov
push
enter
shl
fxch
push
mov
mov
pop
setnp
jle
sahf
jg
rcr
or
arpl
cdq
loopne
clc
xor
jno
add
dec
test
ins
jnp
add
xchg
and
repz
daa
retf
cmp
dec
(bad)
cmc
ja
and
cmp
mov
fs
xor
ins
loop
push
or
pop
jns
pushf
sahf
shr
test
inc
push
ja
es
fs
in
sub
pop
fimul
pop
js
sub
xor
in
shr
call
arpl
fwait
sbb
sbb
push
fwait
and
jnp
dec
or
retf
or
ja
data16
cli
sar
inc
pushw
pop
fild
stc
inc
out
or
jnp
push
jle
fsubr
cmp
lods
and
mov
xchg
jno
mov
jne
dec
sahf
(bad)
in
push
xchg
(bad)
mov
ja
icebp
sub
push
fdiv
ror
jge
cmp
or
xchg
or
jne
(bad)
push
adc
ins
jle
inc
rol
cmp
dec
xchg
mov
mov
jmp
bound
push
pop
(bad)
adc
loop
push
push
rcl
aam
cmps
sub
clc
xor
sub
std
imul
cs
sub
dec
mov
popa
je
inc
retf
add
inc
push
stc
add
in
enter
ins
cdq
(bad)
data16
into
xchg
jae
test
dec
cmp
test
xchg
inc
jns
inc
sbb
or
not
adc
mov
in
lds
loope
adc
shr
inc
enter
ins
and
jno
in
sub
sbb
lahf
inc
adc
adc
jno
sti
add
add
push
xor
nop
mov
xchg
or
adc
pop
push
shr
push
sbb
push
cmps
mov
lahf
inc
cwde
sub
inc
es
shr
in
sub
nop
leave
arpl
js
and
push
test
or
lahf
add
das
jae
lea
fild
add
ds
popf
or
and
(bad)
in
xlat
cli
or
mov
sub
cmps
es
xor
jmp
fbstp
ja
fsub
clc
mov
push
push
and
jge
sbb
data16
in
cmc
aas
pop
fidiv
and
mov
(bad)
jp
cwde
lahf
iret
inc
pop
in
mov
and
leave
adc
mov
xchg
xlat
test
adc
xor
sbb
iret
add
pop
sbb
int
ja
mov
jne
push
test
add
stos
or
loopne
retf
ja
xor
ins
imul
lods
daa
aam
stc
xchg
pop
mov
cmp
daa
cmp
pop
(bad)
imul
xchg
cs
in
jl
and
lea
mov
mov
nop
pop
pushf
push
cld
ins
enter
lods
mov
inc
add
sbb
cmc
ficomp
test
rcr
jl
pop
jbe
mov
xchg
daa
(bad)
cmps
loopne
inc
mov
xchg
icebp
mov
inc
add
jmp
movs
xor
jo
scas
aaa
out
ret
fild
test
push
jg
mov
ficomp
xor
push
xor
in
xchg
ret
loope
aaa
jmp
jge
cs
mov
call
mov
popa
repnz
add
inc
(bad)
push
cs
sbb
imul
mov
push
mov
(bad)
loope
les
movs
icebp
xchg
jo
sahf
xchg
fcom
xchg
loopne
iret
jle
lods
aaa
shl
xor
cs
ds
icebp
addr16
lea
mov
stc
js
scas
sti
xchg
movs
loopne
movs
or
sub
sub
retf
ss
mov
imul
and
loope
cmp
xchg
stc
call
push
lahf
out
push
xchg
into
sti
or
fnstsw
mov
std
mov
loopne
gs
lock
inc
rol
add
popa
mov
shl
iret
fcmove
fwait
sti
in
and
popf
rol
addr16
addr16
gs
addr16
inc
push
or
pop
push
cmc
pushw
or
lahf
rcr
add
adc
mov
scas
leave
sbb
pop
popa
inc
fst
pop
mov
pop
je
in
xor
push
adc
push
or
imul
add
hlt
fisubr
mov
pushf
xor
push
pop
mov
or
loope
jb
idiv
int3
jmp
mov
nop
int
call
test
and
in
cs
jecxz
sub
ret
pop
aaa
cmp
imul
push
mov
sar
pushf
push
cmp
dec
add
popf
das
cmp
dec
sbb
cmp
out
mov
and
mov
mov
xchg
fst
cmp
jmp
outs
test
(bad)
ss
add
mov
add
and
jbe
push
aad
sbb
lahf
mov
xchg
dec
mov
mov
xchg
jg
repnz
stos
in
xlat
sub
stos
ins
cmps
cmp
and
outs
nop
mov
sub
mov
icebp
pusha
cdq
push
or
outs
in
scas
or
nop
or
sbb
or
mov
jae
mov
retf
aam
mov
je
mov
xchg
shl
mov
hlt
mov
cli
pop
ins
mov
mov
mov
clc
nop
daa
retf
(bad)
mov
pop
sbb
adc
or
in
retf
mov
call
xchg
dec
xor
and
hlt
dec
adc
ins
dec
ins
sbb
mov
fs
mov
mov
int
cdq
data16
adc
xchg
and
ins
out
in
inc
mov
fistp
std
jle
icebp
xor
js
ret
sbb
movs
int3
inc
mov
div
aad
gs
adc
sub
sbb
add
loop
lods
cmp
mov
jnp
inc
xchg
xor
shl
inc
movs
push
cmp
mov
jg
scas
and
jno
or
sti
scas
ins
lahf
xor
aad
loop
jnp
xor
sub
rcr
(bad)
adc
inc
mov
fldcw
cmp
sbb
jmp
and
js
adc
stos
mov
jge
inc
aad
ins
sti
dec
push
mov
mov
rol
cmp
dec
mov
call
dec
je
leave
dec
ds
leave
pusha
outs
add
ja
sahf
sbb
ret
add
(bad)
dec
retf
out
aaa
mov
mov
xchg
jp
jns
mov
adc
pop
hlt
sbb
dec
in
push
jns
leave
fldcw
fistp
and
cli
cmp
push
(bad)
push
mov
or
shl
test
ret
push
xchg
xor
jecxz
mov
rcl
loope
cmp
enter
lea
fimul
sub
rcr
test
pop
das
add
aam
jb
cs
jmp
js
jo
fsubr
test
ret
mov
prefetchw
jmp
inc
fwait
adc
aas
test
(bad)
pop
in
or
iret
enter
inc
xor
outs
js
jo
les
mov
ja
xlat
add
mov
pop
loope
sub
clc
int3
sub
sahf
inc
xchg
xor
xchg
pusha
cdq
push
out
clc
lea
push
pop
dec
movs
pushf
iret
lods
mov
(bad)
pop
mov
das
into
or
push
mov
mov
xchg
lods
sub
stos
ins
dec
jae
sahf
jne
sub
xchg
mov
lea
outs
fsub
mov
push
out
adc
jl
cmps
jnp
aas
push
xor
jns
bnd
das
in
inc
mov
loope
pop
loope
cwde
inc
push
xchg
xor
jp
movs
fidivr
ret
cdq
cmps
jne
dec
shr
dec
ja
cmp
dec
int3
iret
ins
sub
aas
push
sub
push
jecxz
dec
inc
pop
leave
in
aas
icebp
movs
push
fnstenv
xchg
pushf
shl
cld
fidivr
(bad)
outs
xchg
mov
fs
mov
mov
fmul
fld
dec
inc
rcl
mov
sub
jmp
mov
fst
sub
dec
ror
push
call
xchg
movs
retf
aam
xor
test
sub
mov
or
fsub
mov
mov
add
jmp
sub
cs
repz
aaa
rcl
fidiv
gs
pop
pop
clc
hlt
mov
xor
cmp
adc
sbb
add
stos
popf
sub
fwait
mov
xor
xor
xor
push
dec
popa
dec
jp
imul
inc
(bad)
clc
push
(bad)
call
movs
pop
shr
into
scas
dec
clc
inc
mov
inc
sub
fst
scas
add
stos
mov
js
sbb
daa
mov
dec
out
pop
test
dec
cmp
jo
stc
enter
push
fist
int
jne
push
xor
pop
(bad)
dec
daa
(bad)
mov
add
fdiv
fidiv
xchg
add
dec
mov
mov
lock
push
pop
inc
addr16
icebp
cld
lds
div
xlat
xchg
adc
outs
xor
cdq
fidivr
movs
sub
ins
cmp
mov
jp
mov
cmp
nop
stc
mov
xchg
ds
pop
(bad)
mov
push
hlt
add
dec
sub
aas
jge
dec
adc
test
jns
cmp
aaa
and
out
xchg
leave
mov
es
mov
(bad)
or
(bad)
sbb
jmp
sub
jmp
inc
fmul
(bad)
rcl
out
jb
xor
dec
movs
and
test
adc
lock
jl
rol
and
pop
add
inc
retf
vcvtpd2dq
fidiv
or
mov
(bad)
mov
push
sti
and
pop
cmc
leave
(bad)
outs
cmp
mov
arpl
adc
not
add
cmovno
cmps
out
mov
pop
pop
mov
sub
out
fwait
rcr
xchg
jno
xchg
mov
dec
stos
pop
adc
jmp
jbe
hlt
retf
test
push
inc
mov
gs
cmc
adc
div
add
sbb
retf
xor
inc
(bad)
inc
pop
ret
icebp
sti
pop
ins
out
lahf
int
xchg
mov
pop
jae
jle
out
std
sub
add
retf
cmp
or
in
(bad)
push
inc
dec
imul
xor
jle
ds
mov
mov
mov
pop
push
push
movs
rcl
pop
hlt
(bad)
xor
add
sbb
inc
jne
jb
sbb
and
test
int
stos
push
lea
dec
lods
stos
inc
dec
mov
bound
cmp
stos
retf
iret
push
xchg
sub
or
add
je
cmc
dec
xor
pop
(bad)
xor
xor
mov
jle
stos
int
xchg
inc
(bad)
mov
aad
nop
and
lods
add
imul
into
dec
mov
dec
out
test
jp
adc
adc
mov
xor
or
pop
sbb
cmc
pop
and
mov
and
pop
call
sti
add
mov
mov
xchg
fcomp
lea
pop
mov
cwde
mov
fisubr
lods
(bad)
mov
fld
in
inc
bnd
mov
mov
outs
jecxz
pop
imul
jb
push
jne
je
jbe
and
daa
cli
inc
movs
data16
mov
and
jae
xchg
sbb
jg
clc
add
(bad)
push
push
lods
inc
mov
lods
cmp
or
clc
sbb
inc
and
mul
and
fcomi
adc
cmc
mov
cmps
mov
aaa
or
sbb
sti
adc
inc
add
call
jl
xor
enter
in
arpl
outs
in
and
pop
jg
push
dec
sbb
ss
and
or
out
rcl
and
mov
dec
pop
fsubr
push
lods
int
fstp
dec
add
mov
xchg
test
adc
fnstcw
ins
in
mov
aad
pusha
das
xchg
outs
cs
inc
imul
inc
push
xchg
lods
lea
sbb
mov
cwde
cmp
lds
ror
stos
pop
(bad)
icebp
mov
xor
ss
xor
push
dec
push
mov
push
movs
cmp
mov
daa
pushf
mov
push
icebp
pop
and
xor
mov
(bad)
mov
fs
jnp
jns
lea
jg
inc
in
rol
mov
push
movs
cmp
and
dec
bound
es
je
cli
mov
jmp
rcr
pushf
movs
lahf
lods
test
stos
sbb
loop
ror
jecxz
xor
das
stos
add
inc
iret
aad
aam
mov
jae
cmp
into
cdq
jae
iret
mov
sub
adc
mov
lock
jl
cmps
sbb
in
shl
jbe
dec
gs
dec
outs
retf
add
or
cdq
inc
lea
cmp
cmp
mov
adc
adc
xchg
loopne
jge
mov
and
sbb
pushf
sahf
or
ret
push
pop
dec
pop
add
pop
out
aaa
cdq
pop
jle
mov
xchg
(bad)
mov
popf
out
loopne
adc
test
jmp
mov
daa
pop
dec
imul
xchg
xlat
jmp
imul
pop
loopne
leave
repnz
leave
(bad)
jmp
das
sahf
stc
enter
sti
aaa
push
rcl
sbb
pushf
in
cmp
je
shr
popf
out
rol
cmp
lods
sbb
sar
push
push
pop
shr
mov
lods
sahf
lds
jae
inc
push
xor
icebp
pop
cmp
scas
fcomp
cwde
stc
pop
mov
aam
fs
arpl
ficomp
push
es
das
popf
inc
in
jecxz
or
adc
sbb
jl
jne
cmp
add
jns
cwde
and
dec
icebp
add
stos
adc
cmp
retf
pop
add
jo
cmp
hlt
push
in
adc
ret
push
push
(bad)
adc
xchg
cmp
sbb
(bad)
xchg
dec
fiadd
ret
fstp
push
ret
add
idiv
inc
lahf
cld
push
lock
mov
scas
cwde
lods
mov
hlt
xchg
aaa
lea
fstp
xor
cmc
cli
xor
fsubrp
push
out
and
xor
mov
leave
adc
jg
imul
fwait
or
stc
xor
outs
in
call
xor
or
outs
sbb
dec
ret
push
leave
ins
mov
cmp
rcl
push
in
pop
or
lds
dec
fmul
xor
out
jns
(bad)
int
mov
mov
jns
stos
fild
lahf
ja
rol
push
mov
arpl
add
mov
sub
(bad)
sub
add
pop
cmp
mov
and
ins
cmp
ficom
jg
mov
enter
and
and
xchg
loop
iret
adc
shl
or
dec
ja
cmp
xor
inc
add
dec
cmp
jmp
pop
jl
out
sahf
cmp
call
(bad)
push
imul
jge
cmps
ins
add
xchg
inc
jno
dec
push
cwde
add
jp
add
xchg
jae
(bad)
ss
div
popf
xchg
mov
sti
add
add
repnz
inc
sbb
add
inc
lock
dec
adc
ficom
cmp
add
sub
cmp
pop
cs
ins
jp
loop
jp
mov
int3
inc
jmp
scas
mov
mov
jg
aaa
xlat
jecxz
mov
sub
cld
sub
les
icebp
xchg
sar
popf
xchg
and
div
movs
dec
mov
sahf
pop
push
popa
movs
ds
sub
out
inc
aam
adc
aaa
aad
mov
das
mov
or
stc
gs
sub
dec
cli
sub
or
call
xor
lods
aaa
push
mov
out
push
xor
mov
sub
cmp
jge
and
pop
sub
mov
icebp
inc
jmp
push
sbb
std
call
retf
sbb
ret
push
mov
xor
xchg
add
add
ret
xor
dec
dec
lds
cmp
lods
retf
fcomp
xchg
cmps
mul
sub
and
or
sahf
jno
imul
bound
loop
xchg
loopne
fisubr
or
aas
dec
adc
inc
sub
pop
mov
out
mov
sbb
test
je
(bad)
sub
or
aad
loopne
test
jb
std
adc
jnp
pop
jae
out
jmp
jg
and
xchg
inc
mov
stos
sbb
repnz
into
shl
daa
fisubr
popa
dec
dec
fimul
fdivr
jg
push
sub
(bad)
lea
pop
and
fild
int
mov
and
out
sub
push
ror
adc
inc
xor
inc
cmp
lock
or
pusha
stc
sbb
push
(bad)
icebp
out
add
pop
sub
popa
and
sbb
adc
mov
mov
adc
or
stos
sahf
jle
frstor
jo
jmp
enter
xor
push
icebp
adc
push
or
les
or
sti
jge
cmc
outs
xchg
mov
sub
mov
ja
and
mov
outs
xor
je
sub
mov
hlt
cli
pop
addr16
sbb
ja
sub
pop
or
test
pop
sbb
hlt
push
add
movs
cmp
imul
pop
xor
fs
inc
xor
xchg
pop
sbb
inc
repnz
mov
mov
mov
call
jecxz
cli
add
jae
cli
add
jmp
aam
pop
or
fadd
sub
repnz
xor
in
add
sub
jnp
ret
adc
ins
sub
sbb
icebp
dec
sub
and
mov
test
ins
cmp
push
mov
inc
stos
and
sub
jle
adc
push
add
jmp
out
into
out
shr
mov
call
pop
pop
aaa
loope
jecxz
popa
out
push
cmp
maxps
add
jae
jb
sbb
dec
std
fnstsw
into
mov
dec
aas
aad
pop
repz
adc
clc
or
int3
jno
popf
sub
mov
retf
jb
pop
sti
cmp
shr
inc
shl
mov
(bad)
cmps
test
push
movs
jne
xor
shl
les
aas
out
fwait
mov
lods
mov
mov
add
sub
dec
pop
jmp
aam
mov
retf
mov
ret
ja
mov
push
sub
xchg
pop
(bad)
es
sti
push
test
fld
or
xchg
push
ret
daa
in
repnz
mov
(bad)
in
cmp
packsswb
ins
(bad)
mov
aas
adc
adc
adc
ret
xor
in
sub
sbb
aaa
and
gs
mov
jmp
movs
loopne
std
xlat
push
jmp
mov
daa
outs
cmps
into
mov
outs
mov
out
cmp
shl
dec
lahf
test
dec
xchg
jns
and
jge
mov
jge
popf
sub
(bad)
cmp
repz
mov
retf
js
fcom
jbe
jg
je
xor
movs
or
std
mov
jmp
or
inc
push
hlt
iret
dec
adc
sub
inc
sbb
and
pop
add
pop
xchg
loope
dec
jne
sub
movs
xchg
ins
imul
xor
push
cmp
shl
gs
sub
and
fbld
jecxz
sbb
test
out
lock
push
jno
xchg
dec
enter
inc
imul
int
cmp
xchg
in
jg
or
icebp
(bad)
sbb
(bad)
or
rcr
xlat
pop
jns
addr16
es
xor
lods
inc
cmp
mov
pop
in
add
xchg
jne
pop
mov
mov
add
sahf
sbb
shl
ds
cmp
sbb
mov
daa
mov
ss
xor
dec
and
mov
cdq
sbb
int3
cmp
cmp
mov
mov
mov
mov
loopne
mov
adc
add
dec
out
adc
mov
add
in
jo
push
push
inc
out
push
sub
sbb
or
cmp
xor
(bad)
std
out
cmc
adc
fidivr
mov
pop
push
or
ds
mov
cmp
pop
push
fnstcw
mov
dec
fild
adc
jmp
pop
sub
retf
fidiv
(bad)
dec
ins
mov
jb
inc
dec
dec
fcmovbe
(bad)
(bad)
fs
sbb
jae
cmps
add
imul
outs
leave
push
and
stc
call
jecxz
pop
or
cli
es
xor
xor
push
mov
fwait
jmp
push
add
and
sbb
sahf
jle
stos
in
movs
dec
fwait
xchg
das
popa
cmp
icebp
inc
addr16
xchg
out
jbe
dec
popf
push
das
iret
inc
inc
push
sahf
lock
out
shl
add
fsub
or
ror
xor
stos
lea
mov
cdq
cli
cmp
pushf
jns
pop
jp
cmp
add
mov
mov
rcr
in
mov
and
and
pop
nop
fs
clc
sbb
ja
inc
imul
xchg
je
pop
push
hlt
test
xchg
fcmovne
call
loop
clc
push
cmc
arpl
into
push
call
sbb
push
mov
scas
icebp
jnp
js
sbb
and
jae
and
add
jle
cmp
jg
xchg
xlat
mov
add
mov
nop
mov
nop
fistp
imul
xor
mov
or
ins
in
jge
ror
cmp
ret
mov
adc
mov
ins
xchg
(bad)
jmp
and
cmp
add
push
jp
rcl
cmp
mov
test
jo
add
cwde
pop
xor
or
jmp
sub
mov
arpl
pop
out
jg
cwde
jmp
jmp
addr16
(bad)
mov
mov
jle
push
jb
xlat
push
adc
rcr
mov
stos
dec
dec
and
mov
pop
ss
and
lods
outs
pop
shr
stos
and
push
loopne
arpl
aaa
es
mov
pop
push
arpl
in
sar
in
push
mov
test
push
fcomp
(bad)
pop
mov
xchg
or
into
je
jmp
pop
sbb
jmp
lds
int
hlt
push
mov
test
or
jge
or
pop
scas
test
dec
push
mov
mov
dec
out
xor
or
retf
fadd
mov
sbb
or
ins
int3
test
sti
inc
das
retf
ja
movs
add
dec
cs
in
imul
je
and
ins
ret
add
retf
test
pop
int
into
add
imul
cmps
inc
mul
jmp
lods
jae
inc
rcl
lds
sbb
clc
mov
ror
repnz
mov
aas
mov
aad
jge
jns
push
aad
adc
fadd
pusha
mov
cs
xchg
mov
jbe
out
inc
push
xchg
scas
fsubr
fnsave
mov
loopne
xor
pop
cmp
sar
cmp
pop
mov
xlat
cmps
or
jmp
jnp
or
xlat
movs
movs
dec
sti
sub
sbb
xchg
(bad)
ja
arpl
xchg
or
push
dec
fidivr
mov
inc
cli
retf
and
rcl
sub
ficomp
ins
inc
cmp
mov
mov
and
into
jns
(bad)
or
xor
sub
mov
mov
daa
inc
xor
xchg
cmp
sbb
loop
add
sahf
sbb
push
mul
or
cmp
das
mov
push
(bad)
mov
je
jle
mov
mov
sub
jmp
cmp
push
push
iret
mov
call
cs
dec
js
mov
jmp
les
mov
loop
lods
push
push
mov
addr16
sub
jne
mov
icebp
mov
inc
mov
jp
mov
push
out
cli
(bad)
push
push
push
mov
les
cmp
push
or
ins
and
add
fstp
sbb
mov
scas
dec
ins
idiv
loop
mov
adc
dec
rcl
fidiv
fnstcw
out
pmaddwd
out
pop
cdq
repnz
sar
add
lahf
dec
mov
hlt
inc
dec
(bad)
sub
push
adc
rcl
fnstcw
movups
push
xor
stc
into
mov
mov
jmp
pop
cmps
cmp
mov
call
call
cdq
cli
mov
add
sbb
inc
sbb
mov
push
sbb
and
sbb
clc
cmp
(bad)
mov
gs
scas
cmp
lahf
jecxz
jo
ss
cld
sti
mov
les
fldcw
sub
adc
sbb
and
mov
jl
sbb
xchg
adc
cmp
adc
sbb
cmp
inc
sbb
and
fisttp
or
loop
sbb
push
aaa
test
xchg
je
jl
leave
inc
mov
mov
leave
sbb
imul
inc
out
ja
cmp
pushf
mov
push
cs
pop
stc
pop
movs
pop
mov
sub
repnz
jnp
inc
dec
test
loope
mov
pop
lahf
cmp
jle
sbb
pop
fimul
ja
aam
adc
mov
enter
dec
retf
add
mov
aam
push
clc
jns
mov
fdivr
retf
fnstsw
sub
adc
aaa
or
mov
and
sbb
mov
inc
pop
fist
push
ss
add
mov
shl
and
cmp
in
xor
jl
popf
jmp
dec
sti
and
xor
jmp
cmp
fs
test
inc
add
outs
sahf
fs
iret
call
jbe
call
scas
scas
pop
ins
jo
fs
les
jno
xchg
stc
push
and
clc
push
push
fisubr
sub
pop
sar
cmp
jne
lea
adc
(bad)
mov
iret
sub
mov
repz
retf
sub
mov
xchg
jne
sub
pop
jmp
out
test
ds
mov
sti
int3
ficom
mov
mov
repnz
or
pop
ret
(bad)
xor
xchg
cli
cmp
cmc
aad
movs
dec
iret
mov
adc
mov
popa
gs
or
shl
jmp
cmp
push
mov
lahf
jecxz
js
pushf
pushf
xor
call
push
sub
jg
in
mov
adc
xchg
and
call
imul
(bad)
mov
sahf
jmp
push
cld
lods
pusha
loopne
jmp
retf
vpsrld
movs
pusha
in
or
shl
sub
loop
pop
scas
pop
jns
aaa
call
ins
mov
push
or
cdq
mov
jmp
jno
xchg
mov
in
jnp
call
bound
inc
xchg
sbb
jg
mov
add
mov
gs
mov
push
(bad)
bound
mov
daa
imul
out
lahf
pushf
sbb
sbb
sub
inc
fadd
xor
jno
cdq
stc
xor
push
sti
push
sub
mov
mov
sub
cdq
lock
imul
xchg
ret
cs
mov
or
ds
cmp
stos
sbb
in
push
mov
loop
mov
sub
push
sar
ror
ins
fdiv
shl
mov
mov
sbb
cmp
fsub
mov
add
cmp
imul
test
push
aas
jbe
mov
fbld
in
cld
stos
mov
mov
or
jmp
fsub
mov
(bad)
sub
sub
mov
cmps
mov
dec
pop
stos
ins
hlt
ret
inc
pushf
sahf
lds
push
push
daa
mov
lea
sub
inc
inc
shufps
dec
lods
fidiv
mov
jmp
cmps
pop
lds
jmp
push
jg
jecxz
fiadd
push
bound
pop
imul
or
addr16
pushf
pop
out
add
xlat
inc
push
js
scas
jae
pusha
in
fucomp
mov
shl
sar
mov
sub
xor
dec
aad
xor
bnd
sub
mov
mov
dec
inc
inc
dec
popf
es
mov
movs
sbb
pop
xor
add
mov
aaa
dec
(bad)
sahf
push
pop
mov
mov
inc
inc
sbb
cmps
cmc
cmps
call
mov
sbb
fisubr
push
shl
retf
das
add
cdq
cmp
jle
cmc
mov
adc
xor
cmc
dec
pop
sbb
outs
jp
push
sbb
add
out
push
ins
xor
cli
lea
push
adc
into
sbb
pusha
or
rcr
cmc
ficom
iret
jp
fiadd
and
pop
test
sub
ret
cmp
pop
xchg
inc
aam
jge
jp
movs
(bad)
rcr
xchg
dec
or
cdq
mov
into
int3
sub
nop
jg
fdivrp
popf
xor
mov
mov
aam
jmp
mov
repnz
dec
xor
xchg
aad
adc
mov
jne
repz
outs
inc
and
jl
bound
xchg
rcr
pop
jne
add
mov
in
das
enter
fisub
push
inc
out
mov
mov
cmps
pusha
out
add
dec
test
call
push
jno
inc
adc
push
jmp
pop
pusha
mov
das
jo
ins
mov
sbb
ret
mov
(bad)
lods
rcl
or
movs
and
mov
lds
ds
lods
into
js
pop
lods
js
ret
inc
fist
push
in
(bad)
iret
stos
mov
(bad)
ds
inc
and
mov
ja
aaa
daa
push
sub
rol
fsub
dec
add
inc
jne
js
bound
mov
call
xor
and
add
add
dec
imul
mov
mov
sub
popf
test
pop
mov
test
mov
shl
leave
imul
sub
shr
ficom
lds
cmp
jne
add
add
sar
out
jno
inc
(bad)
mov
cmps
push
icebp
sub
xor
ss
mov
aas
push
push
and
jp
gs
clc
stos
sti
inc
neg
and
cmps
call
test
and
das
ret
dec
(bad)
fistp
pop
xlat
hlt
mov
gs
shl
sar
aaa
jbe
js
jne
push
push
out
mov
xor
jne
inc
jnp
push
or
mov
lahf
aam
sub
arpl
mov
mov
push
jecxz
neg
clc
jmp
mov
out
call
sbb
mov
add
adc
cld
sbb
fistp
sub
lods
push
mov
xchg
cmps
jmp
out
mov
cmp
pop
loope
aam
pop
js
fxam
inc
or
xchg
call
daa
ss
cmp
mov
add
xor
and
adc
retf
bound
mov
pop
push
in
pop
sub
imul
(bad)
mov
lods
jns
cs
mov
or
cmp
stos
lahf
push
(bad)
leave
lahf
mov
sub
inc
sub
jle
(bad)
icebp
mov
sub
pop
cmc
sahf
inc
hlt
adc
(bad)
mov
std
das
or
sahf
icebp
rol
rcl
popa
sub
icebp
xor
add
jl
jae
xchg
mov
xchg
sbb
jbe
pop
jne
sbb
cld
pop
jg
xchg
dec
add
sub
lahf
cld
sar
xchg
xchg
(bad)
rol
in
movs
jbe
shr
repnz
sbb
add
inc
and
fdiv
xchg
add
or
lods
sbb
jae
pop
cmp
jo
mov
call
nop
pop
cmp
mov
ret
push
jecxz
hlt
mov
rcr
xor
les
mov
dec
call
inc
adc
shl
sbb
bound
cdq
int3
pop
dec
pop
inc
ret
mov
xor
lahf
cmps
lahf
mov
je
loop
test
lock
push
fbstp
sbb
cdq
mov
in
test
out
js
cwde
imul
fild
outs
mov
pop
test
xchg
outs
mov
push
mov
ret
movs
jbe
and
adc
aam
ja
adc
push
jl
sub
mov
adc
push
push
xchg
push
(bad)
pushf
mov
retf
push
sbb
scas
jns
sub
dec
or
cs
or
cmp
add
xchg
nop
adc
loop
pop
inc
jbe
sar
sbb
hlt
fs
sti
pop
fcom
scas
lods
fcom
jne
out
push
cdq
pop
jp
xchg
fs
mov
into
shr
mov
and
xchg
in
add
mov
fld
jae
icebp
data16
cmp
mov
push
addr16
test
mov
int
(bad)
jae
inc
mov
std
sub
lods
mov
xchg
sbb
shl
sub
push
jnp
xor
add
xchg
inc
adc
sar
adc
mov
or
pop
adc
test
stc
bound
(bad)
cmc
and
lods
pop
push
into
in
(bad)
mov
jmp
push
cmps
jp
jnp
sbb
push
mov
cmp
sub
xchg
sub
fwait
call
cld
pushf
imul
jge
xchg
outs
fs
lock
xor
cmp
test
and
jg
inc
(bad)
fistp
inc
retf
pop
ins
cli
xlat
in
cmp
mov
cli
mov
jmp
pop
push
pop
add
jno
or
push
mov
mov
pop
rcl
mov
jecxz
push
retf
cdq
jge
popa
iret
xor
clc
jp
cmp
add
jg
div
xor
pop
movs
push
stos
pop
or
aam
sti
mov
pop
dec
cdq
push
mov
mov
arpl
jmp
cdq
movs
lods
inc
rcr
inc
dec
pop
inc
mov
sbb
xchg
jmp
ret
sbb
pop
and
call
ja
adc
movs
cmps
jb
outs
scas
mov
ret
fcmovne
lahf
push
mov
mov
cmps
aam
es
movs
rol
loop
inc
push
shl
fcomip
xchg
mov
jmp
inc
jle
ja
fcomp
out
or
aaa
nop
mov
icebp
ror
dec
mov
mov
add
fs
loop
mov
cmp
mov
in
adc
mov
leave
scas
(bad)
in
outs
add
mov
shr
in
shl
sbb
mov
xor
xchg
cmps
or
inc
jmp
mov
xchg
adc
mov
xor
retf
sub
aad
or
adc
mov
mov
inc
shr
xchg
mov
loop
mov
aam
ds
les
test
jo
push
jbe
idiv
sub
push
xchg
imul
pop
call
jne
cmps
jge
sbb
inc
add
xlat
xchg
pop
xchg
push
cld
lods
in
test
dec
mov
cmp
pop
in
cmp
imul
mov
jns
sub
stos
call
ins
ins
sub
and
loopne
xor
dec
sub
adc
and
sub
cwde
rol
lock
add
or
in
les
fwait
inc
sub
ror
lds
or
mov
mov
jecxz
add
push
xor
lods
dec
scas
sub
es
push
mov
jae
daa
push
push
xchg
push
add
std
je
je
test
pop
outs
mul
sub
jl
xchg
ret
in
mov
fcomp
(bad)
pop
cmc
push
popa
mov
std
jmp
jl
push
add
mov
out
ffreep
xchg
cmc
jbe
std
ror
adc
cmps
mov
push
push
in
adc
dec
sbb
scas
xchg
mov
inc
test
std
jecxz
adc
(bad)
inc
inc
fwait
(bad)
pop
push
push
rcl
dec
xchg
aam
sbb
add
mov
mov
cmp
xor
xchg
push
mov
imul
push
mov
add
and
or
aam
cdq
ror
ins
and
xor
inc
int3
jge
inc
lods
push
clc
cld
(bad)
pusha
push
xchg
dec
popf
mov
jnp
(bad)
cli
repz
ds
add
popf
mov
in
lock
xchg
imul
addr16
iret
dec
(bad)
jne
and
mov
pop
xchg
jp
dec
nop
sbb
and
mov
data16
mov
ffree
mov
inc
scas
mov
sub
sti
mov
cdq
sti
retf
push
call
mov
and
scas
pop
aas
jns
movs
test
(bad)
sbb
dec
into
dec
mov
jno
jb
push
xchg
or
cld
pushf
clc
pop
dec
ss
jmp
repnz
jo
inc
repz
jns
test
inc
pop
cmps
jg
cli
ins
add
or
jg
lahf
aam
inc
push
or
push
(bad)
cmp
pop
out
mov
jno
fwait
cmp
call
je
dec
dec
add
xor
dec
mov
fst
outs
je
mov
jo
cmp
inc
arpl
mov
mov
mov
and
cmp
and
pushf
sahf
pop
jg
pop
test
xchg
jecxz
dec
in
aas
pop
loop
pop
jne
cmp
push
jns
adc
pop
je
ss
xchg
(bad)
sub
adc
arpl
repnz
cmp
mov
add
fdivrp
outs
cmp
pop
jnp
test
loopne
mov
leave
sahf
int
sub
or
mov
cmp
inc
add
inc
inc
adc
pop
sbb
add
fsubrp
mov
fwait
dec
push
loop
in
inc
or
fisub
mov
(bad)
aad
jmp
leave
mov
pushf
and
loop
xchg
sbb
sbb
sbb
mov
push
lds
shl
dec
jmp
loop
add
nop
mov
aas
ins
(bad)
jno
mov
sbb
xor
fisttp
jl
das
cmps
pop
je
push
jbe
jl
sub
repz
xor
andps
clc
push
inc
sar
dec
and
sub
sub
fs
dec
cwde
(bad)
outs
ja
mov
cmp
mov
cmc
mov
mov
imul
fldenv
imul
in
loope
(bad)
stos
out
sbb
nop
cmc
(bad)
aas
loopne
cmp
xchg
clc
add
xchg
cmp
int3
mov
(bad)
aad
push
xor
xchg
mov
test
sar
int3
xchg
pop
and
cmp
mov
xor
push
or
ss
xchg
test
sub
(bad)
cmc
mov
rol
ins
inc
or
xor
jmp
pop
xchg
xchg
push
jns
mov
lods
lods
push
mov
daa
add
xchg
mov
cmps
paddb
xchg
sub
add
jmp
imul
jge
psubd
sbb
test
add
jbe
xor
test
xchg
movs
inc
sub
push
fidiv
push
pop
sar
and
mov
or
call
fld
ror
ss
push
pop
mov
(bad)
lds
push
call
(bad)
call
mov
fucomip
ffreep
gs
ds
into
sbb
popf
dec
and
xlat
push
inc
or
fiadd
dec
mov
cmp
mov
ret
ds
mov
push
xchg
and
and
jg
push
add
mov
push
add
aam
mov
inc
mov
add
mov
mov
repz
inc
push
pop
cmps
xchg
inc
dec
sbb
inc
pop
iret
push
jae
xor
mov
fadd
mov
dec
add
sub
pusha
push
jmp
mov
cmps
je
mov
jmp
repnz
test
or
test
jns
popf
mov
imul
xchg
adc
dec
push
imul
daa
mov
mov
mov
outs
das
cmp
sbb
mov
cmp
inc
and
sbb
out
popa
(bad)
mov
sub
popf
inc
sbb
or
mov
movs
xchg
in
jp
cmp
cmps
stc
gs
scas
fsubr
xor
add
(bad)
push
aas
mov
xchg
cmp
leave
call
es
mov
add
xor
pop
and
xor
loopne
push
mov
aad
sub
aad
dec
pop
and
imul
cld
gs
sub
mov
pop
ins
fs
mov
movs
sbb
addr16
jle
out
imul
jno
retf
cld
cmp
call
push
outs
aad
lods
ja
mov
jno
gs
pop
cmps
mov
sub
xchg
dec
ins
dec
xor
sbb
and
cmp
(bad)
xor
clc
push
mov
shl
(bad)
ins
fs
std
mov
fwait
jmp
ret
push
cmps
enter
out
pop
push
loope
sub
jge
cli
retf
retf
push
cmp
dec
ss
jg
pop
mov
stos
daa
xchg
xchg
cmps
sbb
scas
(bad)
popa
dec
or
dec
jmp
mov
mov
iret
nop
sub
(bad)
lahf
push
das
ja
push
add
mov
mov
test
(bad)
sbb
push
mov
les
dec
pusha
mov
push
jb
js
mov
or
xchg
push
jg
dec
ficomp
cmp
out
cdq
js
pusha
shr
rol
jne
arpl
mov
das
mov
mov
ins
xchg
fdivrp
dec
mov
dec
sbb
inc
inc
dec
pop
xchg
arpl
push
dec
adc
call
xchg
(bad)
cmp
adc
add
idiv
cmps
gs
sar
sub
add
xor
lds
retf
mov
pop
mov
test
xchg
jo
sbb
dec
ss
(bad)
xor
and
(bad)
lods
mov
fisttp
and
xor
retf
rcl
jmp
jae
aam
cwde
inc
mov
in
in
shr
fstp
rcr
stos
add
call
adc
(bad)
jne
bnd
rol
or
dec
xchg
cmp
ins
mov
pop
mov
call
popa
mov
mov
dec
jbe
add
jnp
push
mov
xchg
sbb
pop
fisubr
retf
mov
ja
mov
sti
scas
mov
jge
pusha
jae
add
aad
jb
(bad)
and
mov
daa
jle
ret
in
adc
fstp
xor
mov
sub
cmc
in
stos
xlat
push
fnsave
jl
addr16
mov
xor
movs
mov
dec
out
and
arpl
and
pop
pop
aas
leave
xchg
or
icebp
retf
xor
pushf
xchg
out
or
mov
(bad)
mov
icebp
sbb
inc
lock
xor
push
aam
sahf
pop
nop
out
adc
mov
out
int3
push
sti
daa
sbb
push
ja
mov
jo
inc
mov
sub
sbb
mov
push
dec
jno
cmp
or
shr
or
pushf
sub
mov
push
inc
fdivr
neg
inc
sbb
mov
xlat
aam
pop
inc
xchg
inc
call
imul
shr
cmp
scas
adc
arpl
retf
push
lods
sbb
scas
cmp
dec
ret
jne
sub
std
fcompp
je
mov
sub
enter
adc
fcom
mov
ret
push
test
sbb
add
lds
xchg
test
movs
cmc
mov
fiadd
leave
lods
cmps
adc
mov
test
jne
lahf
fistp
test
mov
dec
repnz
sub
mov
add
iret
push
out
imul
rcl
cs
sbb
nop
mov
add
pop
fwait
pusha
lods
ds
aaa
scas
fldenv
scas
mov
cmps
fnstcw
rcr
pop
fst
in
dec
fs
mov
loop
jl
sub
dec
outs
mov
adc
add
ret
scas
mov
push
xchg
mov
and
adc
in
mov
or
sub
adc
(bad)
lods
xchg
xor
mov
push
test
pusha
arpl
popf
jge
push
fs
jmp
js
push
xchg
xor
dec
add
inc
mov
fs
cmp
or
retf
xchg
mov
add
cs
sbb
inc
fisub
jg
dec
shr
push
jmp
mov
jg
mov
nop
(bad)
xor
push
adc
fcomi
add
push
or
jne
call
push
mov
adc
mov
fs
adc
rcl
adc
or
sub
push
push
mov
and
aam
pop
cwde
pop
mov
mov
test
sti
loop
fmul
jae
imul
add
sub
push
repz
add
or
ins
in
push
lds
cmp
popa
aam
scas
mov
jne
or
movs
jmp
iret
outs
mov
aaa
jmp
add
and
mov
ror
sub
pop
cld
xlat
mov
and
rcr
fstp
jb
mov
das
std
mov
inc
inc
cdq
add
adc
mov
sub
or
and
xchg
nop
cmps
cmp
dec
sbb
xchg
push
mov
pushf
sub
push
shr
loope
pop
(bad)
cli
iret
cld
or
iret
xchg
pop
adc
cmp
rol
sar
sbb
dec
sub
cmps
lods
inc
cmp
out
dec
shl
jp
stos
mov
out
mov
and
dec
jb
repnz
dec
cs
movs
dec
or
pop
jnp
ja
or
les
cmp
data16
outs
mov
repz
hlt
cmp
je
pop
sbb
push
scas
ret
dec
sub
test
cmps
mov
pop
repnz
stos
fucomp
adc
(bad)
ficom
vunpckhps
cmp
pop
and
mov
push
cmps
push
jno
xchg
sbb
mov
lds
cmp
cmps
mov
mov
(bad)
enter
jmp
dec
pop
lds
dec
mov
jl
sub
call
cmc
cld
in
jge
test
mov
call
rcr
sbb
ficomp
pop
scas
enter
or
ja
ins
sub
stos
sahf
or
and
mov
shl
or
aaa
pop
fcom
out
push
jmp
lds
cmp
in
and
sahf
xlat
pop
clc
int
mov
fst
les
call
add
xlat
enter
jnp
in
jle
(bad)
add
mov
cmp
push
std
aaa
imul
push
fadd
test
into
mov
mul
movs
(bad)
add
stc
xchg
pushf
xchg
jbe
popa
xchg
jb
push
sar
push
adc
add
test
lahf
sbb
xor
scas
movs
adc
fdiv
xor
sub
addr16
test
ret
mov
inc
push
out
test
fnstcw
jmp
fs
or
in
mov
mov
cmps
mov
out
xchg
adc
inc
scas
out
mov
fdiv
inc
sub
dec
add
stos
jnp
sahf
add
mov
xchg
jl
ret
icebp
mov
mov
xchg
fst
loopne
push
mov
gs
cdq
shr
sbb
pop
pop
jge
add
popf
mov
mov
pop
fadd
pop
mov
jmp
inc
cs
aam
addr16
outs
xlat
inc
fiadd
add
das
and
mov
lea
popa
je
outs
call
lods
mov
scas
scas
xchg
(bad)
pushf
call
das
call
fcomp
jae
cmp
jp
xor
aam
inc
(bad)
sbb
lahf
push
mov
push
jge
sbb
(bad)
push
and
pop
jle
popa
jp
sbb
pusha
fldcw
xchg
ins
les
or
or
jg
ins
jp
xchg
add
jo
xor
lahf
call
jnp
dec
fmul
sbb
mov
mov
(bad)
test
mov
or
push
outs
pushf
jmp
jmp
jne
(bad)
cmp
add
pop
and
mov
iret
(bad)
mov
fimul
dec
mov
jbe
test
int3
pop
(bad)
dec
fisubr
mov
mov
hlt
bound
mov
mov
lods
into
aas
mov
mov
xchg
test
test
inc
or
mov
jmp
pop
in
cmp
adc
ins
out
xchg
pop
and
add
mov
(bad)
jne
or
sbb
inc
xor
xchg
adc
jae
and
mov
std
jb
ss
lods
aas
push
test
test
fidivr
mov
int
jge
dec
push
aad
stos
jp
jo
xchg
cmp
bswap
xchg
xor
mov
ds
and
mov
ret
int
retf
nop
or
fidivr
jl
(bad)
mov
dec
in
fnstsw
cmp
xor
lods
add
cmp
push
or
rcr
xchg
xor
retf
popa
arpl
xor
inc
imul
pop
jbe
mov
js
pop
dec
xchg
arpl
push
push
mov
push
in
and
mov
stos
sbb
push
adc
cmps
cmp
mov
(bad)
mul
cli
sub
jg
cwde
sbb
shr
dec
fcmovu
mov
outs
loopne
mov
push
sbb
jge
stos
mov
movs
jno
retf
inc
dec
add
pushf
lods
mov
push
push
leave
fidivr
pop
adc
stos
iret
(bad)
jnp
gs
scas
pop
xchg
ret
sub
shl
add
pop
add
jnp
out
pop
adc
retf
sub
iret
out
dec
or
ja
mov
mov
xchg
or
push
push
stos
(bad)
pop
pop
loope
or
lock
leave
ror
jns
icebp
mov
dec
nop
(bad)
mov
add
cmc
and
fmul
cmp
test
enter
cmps
jge
mov
aas
mov
cmc
jl
add
stos
not
mul
inc
dec
adc
push
imul
pop
cdq
iret
fwait
repz
loope
xchg
inc
out
jno
sar
addr16
jge
push
(bad)
ss
pop
and
mov
(bad)
mov
inc
repz
adc
shl
and
pop
push
dec
mov
cmp
test
dec
adc
lods
lds
jg
div
adc
in
fcmovnbe
icebp
and
(bad)
mov
ret
cmp
jle
push
stos
jmp
pushfw
sub
inc
or
imul
adc
sub
mov
aad
mov
xor
dec
mov
inc
cmp
bound
iret
std
pop
pop
stos
cmp
dec
and
(bad)
add
repnz
idiv
data16
mov
mov
mov
icebp
xchg
and
sti
out
push
dec
push
ins
mov
push
add
push
jmp
mov
mov
fld
call
mov
jo
add
mov
sub
mov
stos
std
xchg
movs
pop
adc
and
fistp
pop
or
stos
inc
in
lea
rcl
push
sub
fidivr
sbb
xchg
lock
jno
xchg
mov
xchg
mov
rcr
sbb
cmp
call
dec
retf
cmp
out
jge
sbb
dec
mov
sahf
or
outs
inc
cs
jbe
loope
mov
lods
aad
ins
xchg
out
add
or
int
fimul
repnz
or
cdq
and
inc
ins
inc
add
xchg
mov
fst
or
xchg
xor
pop
sub
push
mov
clc
sub
les
aaa
fbstp
adc
fwait
cmps
jbe
loope
call
xor
add
mov
add
aas
or
sbb
cmc
dec
into
sub
test
(bad)
xor
out
cwde
retf
pop
mov
lahf
out
dec
les
call
sbb
adc
int
xor
retf
inc
imul
cs
ds
imul
retf
mov
mov
jne
pusha
mov
and
cmp
and
sbb
stos
push
pop
ror
sub
push
loopne
xor
pop
loopne
xchg
fsubr
mov
into
fwait
add
sbb
cmc
(bad)
loopne
pop
ror
bound
icebp
sbb
je
cmps
repz
out
ret
icebp
sub
mov
in
loopne
imul
mov
cli
inc
cmp
movs
outs
sbb
sti
adc
jno
and
mov
push
push
push
retf
cdq
daa
(bad)
mov
leave
pop
dec
fst
out
les
cmps
mov
adc
pop
popf
adc
adc
std
or
(bad)
xchg
mov
data16
xor
out
inc
call
cwd
loop
ins
inc
sahf
jbe
bound
sub
sub
ins
sbb
and
xor
js
pusha
jmp
pop
movzx
inc
adc
xchg
dec
es
(bad)
mov
adc
adc
cwde
add
cld
dec
xlat
jne
cs
gs
cmp
je
push
push
lahf
rcr
mov
in
iret
sbb
cmp
jmp
mov
(bad)
adc
data16
mov
mov
xchg
call
push
push
sti
dec
pop
cli
fidiv
es
test
jns
aad
fdivr
dec
pop
call
cmp
popa
adc
mov
push
test
iret
adc
or
lods
mov
jge
mov
cli
or
ss
adc
(bad)
aad
in
cwde
cli
adc
pop
adc
xchg
movs
outs
call
sbb
lods
sub
pushf
push
mov
stos
adc
xchg
ror
xor
jmp
push
addr16
mov
push
iret
retf
mov
push
jge
jl
dec
(bad)
add
mov
popaw
clc
inc
movs
jne
sub
sub
pop
dec
sti
push
dec
push
arpl
sti
ins
xor
int3
pop
and
aad
push
xor
clc
and
and
mov
in
mov
dec
aaa
xchg
xchg
xor
bound
popa
add
cli
and
push
push
mov
mov
mov
ds
inc
lock
cld
inc
test
(bad)
cs
cmp
sub
(bad)
or
sbb
popa
xchg
and
sub
add
shl
popf
add
neg
jbe
adc
lds
rcr
bound
repz
push
push
dec
pop
cmp
out
in
es
pop
scas
movs
(bad)
imul
std
mov
xor
fcom
out
out
mov
pop
test
(bad)
ss
add
test
retf
lea
cwde
in
jmp
bound
out
movs
inc
jo
jno
call
jo
sub
shl
pop
mov
mov
sbb
and
pop
shld
loop
mov
xchg
jmp
pop
loop
or
leave
inc
push
sbb
mov
aaa
jae
jno
push
push
mov
(bad)
(bad)
mov
mov
lds
cmc
int3
sbb
ins
repz
jecxz
dec
sti
push
rcl
call
jp
pop
cmp
pusha
jo
test
aad
jmp
push
in
mov
fwait
jle
call
xor
add
jle
(bad)
xor
mov
outs
lods
and
fldenv
xor
sbb
xchg
scas
fimul
xor
shr
xor
jge
pop
cmp
(bad)
pop
outs
push
mul
sub
ss
aam
dec
repnz
mov
mov
jmp
call
out
cmps
rcl
ret
jmp
xor
inc
xor
int3
add
imul
mov
inc
adc
or
aam
fbld
dec
(bad)
pop
fwait
call
and
std
mov
push
xor
and
loop
jmp
(bad)
mov
fwait
stos
xchg
fdivr
ins
shufps
(bad)
data16
ins
cmp
push
test
leave
or
call
lods
jg
dec
push
out
jecxz
cmps
adc
sub
ret
(bad)
xlat
xchg
push
ret
inc
sbb
ss
xchg
ins
dec
mov
mov
repz
sbb
xor
xchg
fcmove
call
mov
jne
sar
jnp
fmul
xor
int
aam
adc
mov
sub
dec
repz
pop
lahf
adc
mov
jno
fisub
xor
aaa
mov
push
adc
jmp
pop
fsubp
mov
adc
loop
dec
not
add
sahf
loope
dec
adc
movs
cmps
xchg
imul
xor
(bad)
push
adc
test
fs
add
push
lods
sbb
call
out
psrld
xor
jle
xlat
(bad)
test
loop
je
and
dec
mov
mov
retf
movs
mov
jno
leave
mov
daa
and
imul
cmps
jno
inc
or
cdq
imul
sbb
add
jmp
push
das
jae
push
jb
mov
jo
arpl
fs
jne
test
push
sbb
stos
ja
sbb
addr16
add
mov
in
not
lea
imul
enter
xor
sub
(bad)
mov
lock
or
fs
jbe
pop
add
dec
fcmovbe
test
std
int3
clc
inc
adc
xchg
and
aam
xor
shl
mov
push
push
jnp
cwde
jo
ret
or
jmp
sahf
sbb
inc
fimul
and
ins
jns
out
cmp
fwait
es
aam
movs
fs
fst
cdq
outs
xor
pop
lahf
dec
or
test
repnz
mov
jns
push
lahf
js
jge
inc
inc
outs
pop
js
pop
or
jns
mov
fwait
clc
jge
adc
ds
inc
pop
push
xchg
mov
sbb
and
mov
movs
cmp
lds
nop
lods
xchg
xor
stc
mov
mov
stc
popa
fimul
or
adc
jp
jp
xchg
mov
cmp
clc
int
jmp
sbb
out
mov
ins
jae
jecxz
jge
sub
inc
iret
in
bound
pop
push
rcr
adc
pop
ja
(bad)
sti
sub
mov
xlat
pop
xchg
int
sbb
outs
inc
out
out
arpl
retf
fisttp
and
outs
nop
jb
sti
aaa
js
popf
mov
ror
pushf
fist
inc
mov
neg
mov
pop
stos
ds
or
dec
jns
push
cmp
sub
test
pop
aad
outs
xchg
push
imul
xor
fisub
jne
popa
sbb
mov
(bad)
sub
mov
and
scas
inc
mov
stos
jno
cli
or
and
aad
ins
xor
sub
fst
das
repnz
(bad)
push
mov
mov
adc
push
lods
(bad)
add
or
test
sbb
mov
loopne
cmp
dec
cmp
mov
mov
cmp
in
ret
xchg
mov
add
inc
cmp
icebp
in
mov
mov
dec
or
packuswb
mov
adc
cmp
out
out
mov
jbe
add
jns
jb
cmp
and
mov
sub
push
jno
add
sbb
lock
xchg
mov
sub
jl
xchg
lds
sub
jl
aam
stos
add
int3
fwait
inc
pop
mov
push
mov
movs
mov
mov
ja
xor
cdq
cmps
mov
dec
in
cmp
js
jne
dec
sub
sbb
retf
cmps
push
jae
jg
fistp
dec
xor
push
xor
into
fcmovnu
xor
sub
sbb
shr
retf
popf
push
inc
cmp
xor
add
imul
add
push
inc
xchg
jnp
mov
xchg
mov
in
inc
xchg
scas
or
sub
xchg
jp
push
movs
clc
xchg
mov
pushf
pop
sbb
jecxz
dec
mov
clc
add
adc
xchg
add
loopne
aad
push
push
ret
iret
lods
adc
pop
mov
jle
mov
(bad)
inc
cmc
out
fstp
rcl
aad
mov
sub
push
xlat
xchg
cwde
jbe
idiv
mov
add
imul
xlat
pop
dec
nop
pop
nop
cld
shl
cwde
repz
inc
inc
push
cdq
bound
popa
stos
hlt
jg
out
and
pusha
dec
push
adc
fs
sbb
jbe
mov
cmp
loop
pop
and
cli
sub
cli
icebp
div
mov
aam
add
pop
out
mov
ret
push
sbb
ja
mov
(bad)
mov
jl
clc
push
or
adc
jno
push
and
add
adc
ret
inc
fisubr
lods
inc
mov
ds
cmp
idiv
and
pop
adc
push
push
and
xor
cmp
fsub
and
stos
shl
dec
sub
or
cmp
lahf
mov
sbb
or
dec
push
mov
lods
mov
out
pop
mov
and
mov
dec
pop
push
mov
sbb
xor
mov
pop
dec
add
xor
mov
dec
xchg
mov
adc
cmp
inc
cmps
popf
imul
(bad)
mov
jle
rol
push
es
repnz
mov
xchg
icebp
mov
aaa
bound
xor
xchg
and
pop
sub
mov
ins
addr16
in
xor
sbb
xchg
lock
test
jb
(bad)
sub
adc
cwde
mov
xchg
mov
jg
or
fisubr
and
arpl
adc
daa
xchg
dec
(bad)
jno
movs
xchg
xor
enter
inc
mov
fmul
adc
in
fdivr
in
arpl
call
push
xlat
inc
jbe
inc
cmp
cdq
scas
lahf
iret
cmps
pusha
inc
das
data16
xchg
movs
cwde
ret
jecxz
fisub
add
icebp
mov
inc
xor
jnp
and
jle
dec
sub
and
add
pop
enter
jl
jae
dec
aad
cmp
enter
mov
ins
mov
ins
cmc
xchg
push
ret
pop
mov
clc
push
and
ins
and
js
(bad)
push
mov
xchg
sti
push
fisub
xlat
fidivr
js
fild
xchg
jne
add
iret
mov
pop
push
std
jge
ins
or
test
adc
lods
jo
adc
ins
inc
jmp
stos
into
(bad)
dec
and
mov
push
outs
push
sbb
mov
cmp
cs
sub
pmullw
jmp
jne
retf
jne
xchg
cmc
mov
dec
mov
inc
add
add
xchg
std
and
pop
int
int3
(bad)
mov
or
or
xchg
lods
dec
shr
adc
add
jo
imul
add
jb
push
ds
jle
arpl
adc
lahf
mov
out
adc
mov
cmp
loopne
rcr
add
cmc
sub
push
and
xchg
dec
mov
sub
ficom
cmp
push
or
cmc
dec
xchg
frstor
je
aaa
mov
push
scas
xor
lock
inc
inc
and
div
pop
pop
call
mov
jo
sbb
lock
jbe
jp
mov
add
xor
call
ins
dec
sbb
push
sub
xchg
cld
call
or
push
jl
les
gs
xchg
push
pop
cwde
mov
mov
sti
xchg
aad
push
aas
dec
imul
adc
stc
cwde
rol
push
lods
cli
nop
fs
loop
lods
clc
jl
rcr
sbb
mov
cmp
sub
call
push
in
fcomi
mov
lock
les
fwait
std
inc
pop
cmc
cmp
out
or
fsubr
in
sbb
push
aam
mov
mov
outs
xchg
into
outs
in
(bad)
mov
dec
inc
mov
dec
dec
mov
xor
push
jno
retf
mov
enter
pusha
jno
add
xchg
fs
test
pop
lea
xlat
out
jmp
loope
jmp
pop
add
mov
dec
and
data16
sub
sahf
xchg
pusha
scas
mov
test
xchg
out
jp
retf
mov
cmp
rcr
sub
or
add
je
mov
addr16
cld
les
mov
(bad)
inc
adc
mov
cmc
(bad)
xor
jnp
mov
and
push
sbb
dec
cli
mov
mov
in
pusha
or
push
xor
retf
push
pop
push
dec
ja
mov
dec
imul
sub
and
std
jp
ret
bound
dec
retf
icebp
cli
pop
mov
fwait
add
aaa
(bad)
jbe
(bad)
hlt
jnp
push
mov
in
inc
stos
and
xchg
pop
sub
xor
adc
fadd
mov
or
adc
mov
ret
xchg
test
(bad)
mov
pop
sub
dec
xchg
sub
mov
add
or
and
movs
aam
mov
aam
mov
mov
sbb
rcr
in
jp
sub
xor
in
jne
xor
add
aas
scas
sub
fsub
dec
aaa
sbb
mov
pop
mov
push
or
and
shl
out
ja
or
ins
mov
xor
sti
push
cmp
lock
stos
dec
ret
push
mov
pop
je
dec
lods
push
jb
dec
mov
fst
add
mov
push
retf
sar
lea
mov
aam
jno
ss
jo
hlt
inc
jmp
xor
mov
stc
loop
mov
jb
pop
mov
mov
in
ins
sahf
mov
and
nop
ffreep
scas
jno
loope
push
loope
pop
out
adc
enter
mov
xchg
and
xor
repnz
pop
(bad)
mov
loop
push
or
lds
fwait
int
mov
popa
mov
mov
dec
mov
je
mov
movs
mov
cld
xchg
and
add
(bad)
and
push
out
js
ret
outs
movups
jge
mov
mov
mov
xchg
out
push
(bad)
mov
xchg
add
sub
xor
dec
dec
pop
jne
sbb
movs
adc
xchg
aaa
mov
arpl
push
xor
add
jmp
mov
mov
daa
sbb
mov
inc
outs
cmps
and
fst
sbb
push
jmp
adc
inc
ret
cwde
add
push
shr
ret
call
mov
push
and
mov
xor
push
add
imul
inc
lahf
pop
daa
call
sub
sbb
jg
data16
mov
jg
push
in
xor
imul
enter
and
sub
leave
fstp
push
fsubr
mov
push
ja
retf
retfw
inc
xor
mov
shl
sub
(bad)
pop
pusha
xor
jbe
xchg
stos
(bad)
sub
sahf
xchg
jp
push
rol
movs
mov
mov
aas
inc
or
into
sbb
pop
push
xchg
test
bound
xchg
and
into
mov
add
not
lods
jb
xchg
adc
mov
mov
popf
fs
je
xor
int3
imul
das
mov
mov
cli
cld
xor
cld
repz
dec
xchg
retf
inc
xchg
adc
icebp
(bad)
int3
push
dec
and
xchg
sub
push
or
mov
dec
fisttp
jmp
dec
adc
sub
out
xor
adc
lock
pop
cmps
sbb
fisttp
push
and
dec
dec
pop
mov
ins
lds
retf
idiv
inc
inc
jmp
enter
test
inc
mov
mov
xchg
outs
sub
xor
adc
(bad)
xor
(bad)
ss
cmp
mov
(bad)
sub
(bad)
jb
inc
jne
pusha
sbb
scas
mov
imul
lds
mov
xor
outs
call
sbb
js
sbb
pop
fiadd
xor
rcl
cli
mov
add
lds
js
das
out
aad
sbb
and
or
(bad)
xor
jle
das
mov
push
and
fld
les
push
inc
adc
mov
movs
into
sub
push
pop
inc
dec
out
sub
call
adc
bswap
or
mov
mov
arpl
popw
pop
inc
ret
in
xlat
retf
push
data16
jo
adc
mov
push
xor
shr
popf
sub
cwde
loop
adc
adc
loop
jg
cmp
jg
jns
jle
cmc
mov
push
dec
imul
bound
arpl
shl
xor
cmp
out
aaa
(bad)
in
dec
sbb
mov
repz
xchg
shl
jae
and
outs
adc
push
or
add
clc
push
js
std
cmp
jae
xchg
and
cli
js
add
adc
repz
xor
xlat
jbe
ja
call
xchg
mov
inc
adc
sub
movs
or
hlt
mov
out
push
mov
pop
mov
jl
cmp
xchg
fs
clc
pop
cld
nop
imul
in
jne
enter
pop
xor
and
add
jo
aad
xlat
push
or
mov
mov
or
fist
stos
ret
jns
xor
push
and
mov
std
test
jmp
aaa
adc
idiv
dec
sbb
in
or
sbb
lods
aad
lods
sub
repz
aaa
mov
jmp
sbb
sub
pop
push
push
test
ret
mov
or
fimul
fild
rcl
loopne
xor
imul
xor
fwait
mov
jbe
mov
hlt
mov
or
enter
out
push
or
rcl
push
or
ds
repnz
and
sub
sub
repz
xor
pop
pop
gs
call
add
mov
cmc
pop
movq
mov
repnz
add
add
cwde
mov
jmp
outs
xor
sub
and
sahf
xchg
adc
fs
mov
enter
cmps
mov
sbb
xchg
js
jp
dec
outs
mov
mov
xor
jo
add
jnp
add
and
bound
dec
xchg
and
jg
aad
in
imul
int3
ficomp
into
jmp
and
xor
dec
es
sub
or
repnz
jne
xchg
call
popf
adc
hlt
(bad)
adc
pop
(bad)
fdiv
mov
sbb
mov
add
dec
cmc
es
cmps
test
pop
mov
jmp
mov
cld
outs
sbb
cmc
hlt
and
sub
in
mov
add
mov
and
sar
add
add
rol
xor
and
(bad)
aaa
push
push
dec
xchg
hlt
lods
inc
enter
push
inc
push
sbb
mov
ficomp
mov
stc
lods
cmps
adc
and
pop
test
leave
lds
jbe
mov
pop
jp
add
iret
xchg
arpl
stos
adc
cmc
adc
dec
sbb
or
pop
mov
cmps
lods
or
pop
or
push
shl
sbb
std
(bad)
scas
retf
outs
or
jmp
push
jmp
arpl
dec
add
sub
sbb
mov
inc
fdiv
hlt
mov
int3
(bad)
xchg
jae
push
aam
adc
icebp
mov
enter
out
add
pushf
fs
adc
sbb
or
pop
hlt
or
idiv
cmps
inc
mov
ja
pop
push
outs
test
mov
xor
or
das
test
scas
mov
adc
retf
imul
push
adc
xor
lods
mov
jae
add
pop
jmp
(bad)
fwait
adc
dec
daa
and
jmp
adc
dec
lods
mov
in
mov
fdiv
jle
imul
xchg
sbb
mov
pop
push
lock
es
out
jb
inc
stc
mov
cmp
mov
mov
(bad)
pop
lods
les
mov
xchg
popa
jp
xor
xchg
je
inc
lahf
add
shl
cmps
int3
mov
cmps
fbstp
(bad)
jg
sbb
inc
cld
add
arpl
push
std
ja
cs
add
in
js
ins
mov
jp
push
test
stos
in
mov
pop
xor
xor
add
cmp
stos
call
gs
inc
dec
lods
or
mov
push
dec
rcl
(bad)
(bad)
mov
jle
pop
sbb
stos
xor
call
shr
add
inc
mov
pop
shl
movs
jmp
test
push
fwait
mov
mov
add
out
add
retf
sar
inc
shr
jge
jbe
and
cmp
cmps
shr
ret
add
sbb
iret
pusha
in
mov
pop
xor
push
or
xchg
jmp
fstp
hlt
aaa
inc
cs
push
or
add
push
icebp
or
bnd
addr16
movs
test
test
mov
mov
mov
mov
out
inc
pop
cld
push
push
adc
cmp
outs
dec
mov
and
inc
and
push
mov
jo
jle
les
or
aad
inc
dec
aam
mov
push
sub
out
pop
fcomp
mov
xchg
pop
inc
adc
outs
xchg
pop
mov
xor
or
mov
lods
mov
push
adc
mov
jo
ins
icebp
pop
jnp
cmp
jbe
or
popa
adc
in
out
ror
inc
stos
inc
ficomp
push
push
jecxz
in
jbe
inc
test
cmc
jg
test
push
(bad)
xchg
mov
in
push
scas
push
xor
sbb
in
pop
fnsave
mov
adc
xor
push
push
rcr
neg
dec
jl
jno
lds
cmps
std
dec
jbe
sub
sbb
push
push
leave
xor
out
cmp
push
and
addr16
xchg
scas
push
scas
pop
mov
aam
sub
and
mov
in
into
retf
fwait
xchg
ror
mov
enter
mov
push
test
popf
fsubp
or
sbb
and
ja
imul
das
jb
das
std
fbstp
mov
adc
cdq
mov
cs
mov
cmp
scas
das
pop
fs
push
sub
mov
lock
inc
imul
test
test
mov
sbb
lock
push
mov
shr
ins
(bad)
imul
pop
hlt
push
cmp
sbb
int
out
cmp
push
lods
and
pop
dec
mov
shl
and
mov
rol
jo
fdiv
outs
fst
ret
outs
in
cmp
push
out
push
cmps
aaa
cmp
xor
inc
popa
scas
cmp
test
sub
sbb
xor
inc
jle
push
aam
pop
xchg
jbe
mov
mov
mov
loope
ins
sub
cwde
xchg
push
stc
inc
enter
test
add
int
imul
aad
stc
add
inc
popf
cwde
fcomp
jmp
(bad)
mov
fs
scas
outs
ins
adc
mov
ins
sub
xchg
aam
mov
sti
loop
lea
mov
xchg
sbb
test
or
sub
lods
sub
dec
fcmovnb
push
dec
shl
xor
loop
sub
jp
push
pop
and
add
push
jb
in
ffreep
cmovge
lods
sbb
sub
mov
loopne
clc
out
popf
push
fwait
jno
call
lahf
mov
imul
pop
(bad)
(bad)
mov
call
push
hlt
pushf
or
push
push
fmul
es
add
push
and
push
inc
mov
jp
xchg
sbb
dec
(bad)
shl
pop
loope
mov
push
cmps
adc
mov
xlat
(bad)
jmp
add
retf
add
shl
dec
cmps
ja
aaa
adc
adc
icebp
(bad)
sbb
fwait
mov
jns
add
xchg
adc
pusha
inc
fwait
imul
ja
cmp
in
outs
in
repz
sbb
push
mov
add
jo
ror
dec
cmps
xchg
push
pusha
add
push
add
cmp
jg
lods
pop
add
dec
clc
xchg
call
jle
mov
pushf
fprem
in
push
pusha
ret
and
sub
push
iret
retf
pop
outs
(bad)
ret
stos
pushf
xor
inc
je
jo
dec
and
ret
enter
enter
out
lahf
rcl
pop
das
int3
jle
mov
cli
mov
push
icebp
jo
pop
ret
in
test
cdq
mov
sti
(bad)
push
enter
inc
mov
or
out
push
mov
lods
jns
xchg
adc
(bad)
ret
stos
push
dec
test
shr
inc
rcr
(bad)
and
gs
mov
sbb
fisubr
inc
mov
dec
fstp
in
push
add
pop
and
inc
sti
cmp
lahf
cmp
stc
or
aas
fist
mov
xor
cmp
cmp
adc
and
jae
shl
fiadd
mov
pop
xchg
jge
push
xchg
fdiv
mov
lea
out
mov
ret
int3
mov
dec
lahf
sbb
aas
xor
jg
pop
arpl
retf
shl
mov
push
fidiv
enter
cmp
adc
loope
lea
xor
jns
mov
shr
out
jno
mov
out
scas
mov
rcr
(bad)
lock
ja
popf
(bad)
xor
mov
aam
xor
push
rcl
(bad)
jp
mov
cmp
aas
jno
sub
das
dec
mov
fnstsw
(bad)
shr
mov
stos
pusha
or
cmp
cmp
cmps
in
inc
mov
sahf
mov
xchg
and
push
or
pop
push
cmp
xor
enter
xchg
or
sub
xor
ss
(bad)
xchg
ret
mov
enter
call
add
std
xlat
les
ret
dec
test
mov
mov
xor
ja
popf
mov
clc
jmp
repnz
cmp
mov
xchg
and
lds
add
add
xchg
test
jno
xor
mov
inc
rcr
sbb
scas
adc
mov
lds
mov
fwait
ret
(bad)
mov
cmc
add
jmp
in
pop
jmp
xchg
das
stc
in
jge
aaa
pop
retf
xchg
call
arpl
add
mov
and
or
pop
frstor
sbb
scas
je
push
call
add
xor
shl
aam
push
mov
and
in
std
int
inc
xchg
and
jmp
loop
sbb
(bad)
stos
cs
ret
adc
push
rcr
shld
adc
jb
sbb
mov
and
fist
pop
lods
movs
or
test
xchg
int
sbb
mov
es
out
rcl
push
and
aam
mov
outs
adc
mov
test
jb
xchg
mov
lods
fs
imul
lods
cmp
pop
cwde
jnp
mov
inc
or
or
dec
jbe
sub
ins
xchg
shr
stc
jno
jne
add
call
in
bound
sub
enter
jmp
jno
xchg
lds
out
mov
outs
rcl
repz
movs
rol
in
mov
mul
push
xor
(bad)
in
or
test
aaa
les
or
test
xor
xor
and
outs
mov
push
test
enter
je
daa
out
adc
add
shl
jge
pop
shl
dec
inc
inc
sbb
push
rol
bndldx
xchg
dec
push
stos
shl
sbb
daa
or
outs
repnz
mov
xor
xchg
mov
push
retf
mov
pop
xchg
lods
ss
sbb
xor
sbb
test
mov
lea
enter
ds
fnstsw
dec
scas
push
test
arpl
pop
jae
mov
outs
xchg
dec
scas
ficomp
xor
jmp
push
xor
mov
mov
mov
inc
movs
or
jae
lods
daa
mov
jae
xor
js
mov
jnp
test
mov
stos
or
(bad)
pusha
mov
arpl
mov
add
or
inc
mov
mov
(bad)
aas
fstp
jnp
fsubrp
mov
test
sub
jnp
scas
dec
push
and
mov
cli
(bad)
adc
pop
xchg
in
test
pop
pop
adc
add
ret
push
mov
fidiv
inc
cld
mov
imul
push
(bad)
mov
test
fsincos
fimul
in
and
pop
cli
inc
sub
cmp
scas
cmps
cmp
mov
sar
and
es
jno
pop
test
xchg
rcr
push
jbe
jg
jp
lods
sbb
fisttp
dec
push
repnz
push
cmp
pop
add
xor
lock
cmp
pop
clc
inc
mov
push
cmp
mov
xlat
push
mov
(bad)
jb
sub
mov
cmps
mov
xchg
leave
lock
push
add
pop
inc
sahf
retf
lea
cmps
pop
cmc
mov
pop
mov
imul
adc
mov
sbb
ins
pop
push
aad
jne
lods
aad
neg
sub
and
inc
fldenv
add
push
cmp
nop
pop
jne
fs
mov
mov
cmp
sbb
ror
adc
mov
not
sub
dec
pop
or
xor
ss
mov
or
xor
es
fcom
iret
cmp
push
lahf
retf
ret
hlt
sti
sbb
jmp
call
sti
push
sbb
or
es
dec
retf
sahf
push
repnz
cmp
inc
mov
inc
xor
arpl
or
retf
mov
sbb
inc
inc
xor
mov
push
dec
pop
mov
cdq
sub
or
and
shl
loope
(bad)
out
cwde
fidiv
jecxz
inc
movs
lock
mov
adc
jno
mov
sbb
movs
lds
push
push
repz
fwait
out
shl
jg
das
pop
fsub
dec
cmp
outs
xchg
pop
mov
pop
scas
jecxz
call
push
add
in
pushf
dec
js
call
clc
test
retf
in
lock
jo
jmp
fisttp
ret
pop
int3
jmp
adc
pop
mov
pop
fwait
cmp
ret
stos
enter
or
aaa
cmp
push
fistp
pushf
call
je
and
and
outs
push
jmp
retf
add
jecxz
push
dec
mov
in
pop
cwde
dec
sbb
xchg
(bad)
push
(bad)
in
push
fwait
out
jle
ds
or
scas
(bad)
lock
leave
jne
cs
scas
aas
push
inc
inc
je
loop
mov
inc
pop
fdivr
(bad)
jmp
lds
and
in
(bad)
(bad)
movs
arpl
test
cmps
addr16
cli
xchg
ins
fucomp
mov
pushf
jle
(bad)
mov
push
push
cmc
mov
mov
call
or
jmp
int3
push
jl
rol
pushf
out
xor
push
test
lock
mov
cmp
sub
shl
nop
in
pop
jmp
jge
jp
fistp
xchg
push
mov
rcr
lods
mov
leave
lods
push
scas
stos
dec
fs
xor
dec
jne
mov
xchg
xor
mov
pushf
mov
(bad)
jo
cmp
inc
aad
cmp
mov
sti
mov
mov
pop
add
loope
ss
addr16
mov
ret
inc
xor
test
adc
idiv
mov
sub
sub
out
inc
movs
jae
jae
fist
mov
xlat
fwait
mov
jae
xchg
cmps
(bad)
scas
bound
jmp
leave
rcr
inc
add
stos
sub
sbb
adc
in
idiv
and
add
push
xor
mov
js
fsubr
sub
(bad)
cmp
jmp
lds
lds
call
mov
and
add
daa
push
add
outs
add
(bad)
xor
mov
xchg
cmps
jae
in
movs
push
(bad)
(bad)
fimul
fwait
retf
test
adc
outs
cmp
mov
cs
and
ret
jmp
enter
mov
jns
(bad)
out
shl
std
dec
inc
cdq
out
sbb
mov
mov
loope
lock
in
sub
fadd
lahf
mov
push
bound
inc
sub
xchg
ds
sub
mov
mov
pop
(bad)
out
pop
mov
cmc
cld
push
sbb
xchg
dec
pop
adc
in
je
xchg
shl
cmp
je
sub
cmp
and
aas
mov
cmp
call
inc
pop
sbb
add
sbb
jp
cmc
dec
clc
jl
test
cmp
mov
or
es
add
in
xchg
inc
clc
cmp
add
xchg
adc
call
ret
movs
mov
fisttp
cwde
outs
cli
fwait
jg
or
loop
pushf
aaa
jb
sbb
add
add
xor
js
test
and
ret
jecxz
call
ret
and
enter
mov
out
lods
mov
xchg
into
jae
loope
inc
push
push
mov
mov
sub
and
mov
daa
push
mov
add
add
addr16
lds
mov
stos
pop
mov
pop
ins
sbb
add
dec
dec
outs
cmp
push
jg
xor
popf
mov
mov
sub
movs
movs
icebp
aam
int3
fwait
push
pop
gs
xor
outs
bound
jecxz
(bad)
loopne
lods
outs
or
inc
adc
rol
adc
aaa
adc
test
aad
iret
out
dec
mov
or
scas
and
adc
push
enter
imul
pop
in
xor
mov
inc
aam
or
aad
adc
jne
add
mov
dec
psubsw
push
sub
les
mov
xor
sub
jmp
inc
or
rol
adc
add
inc
fist
repnz
add
test
xchg
fwait
aad
xchg
cmp
mov
dec
in
sti
frstor
test
ret
fxch
mov
xchg
cld
mov
xchg
or
and
mov
mov
jecxz
out
push
jno
nop
inc
mov
push
sub
bndldx
add
in
imul
mov
add
push
sbb
fcmovne
les
mov
loope
pop
sbb
mov
cmp
lods
xor
xor
xor
or
gs
inc
mov
popf
adc
ins
movs
push
pop
xchg
(bad)
ds
sbb
or
sub
loope
nop
add
fist
and
das
(bad)
cmp
in
add
add
clc
fwait
mov
inc
(bad)
shl
mov
lods
test
dec
and
sbb
(bad)
push
sub
adc
adc
cmp
xchg
adc
js
cs
and
in
int3
popa
loop
xor
clc
xor
inc
or
push
xor
dec
sub
shl
mul
sub
cmovge
cli
and
and
push
pushf
push
test
xchg
jecxz
scas
cld
dec
sbb
fcmovnb
push
lds
push
repnz
cwde
pop
dec
call
mov
mov
xchg
fisubr
xor
out
mov
inc
jno
push
out
mov
sub
pop
mov
int3
cs
idiv
or
push
and
inc
xor
mov
inc
mov
push
jne
jns
push
imul
jbe
push
pop
loopne
fwait
add
imul
shl
jge
or
mov
fcomp
test
mov
push
nop
mov
mov
movs
push
aam
test
pop
inc
xchg
out
pop
aas
pop
xchg
mov
push
repz
mov
popf
lock
ret
mov
pop
ss
pop
int
ror
cmp
xlat
imul
and
xchg
adc
ror
mov
std
mov
sub
mov
pusha
xlat
xor
jmp
cmc
dec
movs
push
push
add
mov
inc
scas
icebp
mov
or
cmc
popf
jnp
dec
ror
add
fbstp
iret
adc
ins
sub
sub
lds
pusha
adc
retf
sub
aad
pop
xor
imul
in
dec
sub
loop
sbb
xchg
ficomp
mov
or
dec
aam
fcmovnbe
inc
(bad)
test
add
sbb
dec
jae
in
or
push
cmp
mov
loope
push
ins
and
nop
xor
or
xor
mov
jnp
and
in
rcr
loop
in
(bad)
loop
xchg
cmp
pushf
inc
cmc
imul
fdivr
loope
mov
rol
mov
jne
and
push
frstor
push
adc
(bad)
mov
iret
je
xchg
xchg
inc
(bad)
xchg
stos
sahf
sbb
xor
mov
mov
adc
leave
in
pop
frstor
popa
jnp
mov
xor
(bad)
push
inc
sbb
mov
mov
push
loopne
jmp
outs
(bad)
jo
retf
sub
push
movs
rcr
jle
adc
lahf
mov
cmps
cmp
mov
xchg
sbb
or
pop
xor
shr
fiadd
cmps
sbb
stos
inc
dec
cmp
int3
scas
std
inc
push
retf
loopne
pop
xchg
aad
sbb
fcmovu
ret
int3
call
push
inc
and
fs
push
lds
add
sub
popf
rol
sub
(bad)
pushf
add
mov
loope
cmp
stos
(bad)
jecxz
addr16
jns
mov
xchg
syscall
in
das
jmp
cs
cmps
cld
lock
push
rol
mov
mov
in
or
and
out
dec
int
lds
jle
dec
cmp
sub
xor
xor
xchg
sbb
fdiv
pop
movs
mov
stc
xor
fisubr
ins
xchg
push
mov
push
shl
xor
ret
sbb
shl
pusha
icebp
adc
pushf
es
mov
mov
sbb
jecxz
outs
daa
(bad)
dec
shr
inc
or
test
or
(bad)
ss
(bad)
enter
ja
pop
pop
pop
add
fwait
push
pushf
cmps
xchg
mov
retf
lea
dec
inc
push
add
jnp
pop
lods
gs
fabs
addr16
mov
xchg
jns
jecxz
add
ss
and
adc
retf
ds
push
shl
aam
js
lahf
adc
ins
into
or
je
dec
in
retf
sub
es
push
popa
jbe
add
push
jmp
fisttp
xchg
fsubp
dec
xor
(bad)
cld
mov
push
shr
ror
mov
(bad)
or
and
push
ins
mov
pop
and
pop
call
unpcklps
mov
fs
cmp
mov
(bad)
mov
inc
ds
leave
retf
imul
lds
mov
push
test
and
dec
pop
add
dec
mov
in
sahf
pop
mov
push
out
jbe
imul
inc
xchg
adc
(bad)
(bad)
sub
or
fadd
dec
sub
mov
sub
xor
xchg
xchg
and
add
jp
jmp
fwait
gs
fwait
xor
neg
adc
and
xlat
sub
iret
xor
pop
popf
retf
xchg
clc
adc
ins
jmp
ror
mov
sbb
xchg
xchg
xlat
mov
addr16
mov
mov
rol
cdq
mov
js
jne
mov
dec
mov
mov
lds
sub
ins
jne
das
(bad)
jle
inc
jg
aad
dec
inc
pop
inc
test
sbb
aam
and
loop
or
push
xchg
push
daa
(bad)
addr16
xchg
jae
push
adc
xor
test
ja
lea
push
cmp
nop
add
popf
add
je
(bad)
out
inc
(bad)
adc
pusha
(bad)
nop
or
shl
jne
xchg
pop
in
inc
rol
sub
push
imul
test
inc
inc
(bad)
into
cwde
and
cmps
mov
aas
cmp
aad
in
pushf
add
es
stc
or
repnz
int
je
repnz
arpl
sub
xchg
mov
sti
inc
add
sti
stos
das
cmps
push
js
ins
jmp
add
dec
pop
sub
test
cdq
pop
fxam
pop
dec
retf
push
sar
stc
test
rcr
idiv
outs
fild
mov
test
mov
cs
mov
mov
aaa
push
neg
movs
xor
(bad)
xor
and
je
loope
sbb
call
pop
(bad)
shr
mov
clc
call
popf
in
rol
ds
(bad)
adc
in
add
fisubr
mov
clc
mov
dec
gs
xchg
loop
jnp
cmp
call
std
(bad)
sub
inc
pop
out
into
loop
push
fcmovnbe
ficom
adc
ret
jp
icebp
mov
mov
in
pop
mov
ja
mul
mov
xchg
into
sbb
outs
push
xchg
scas
xchg
sbb
cmp
xor
xor
pop
xchg
or
test
into
mov
data16
enter
xor
pop
cwde
jp
push
xor
ins
mov
cmp
mov
adc
sbb
dec
mov
mov
xor
in
cmp
xor
fldenv
cmovae
add
nop
ss
jmp
fs
fisttp
cs
pop
jge
xor
xor
std
jge
inc
and
gs
push
das
pop
xchg
adc
sahf
aas
bnd
inc
add
or
pop
int
pop
clc
or
fs
psrld
adc
push
loopne
mov
in
icebp
popa
imul
pop
ss
int3
sub
sahf
in
mov
jg
ins
bound
in
pop
in
xor
mov
inc
aam
inc
pop
or
push
push
adc
jl
xor
loopne
and
daa
and
push
sub
stos
fneni(8087
ret
sar
mov
push
pop
add
clc
xchg
jl
add
mov
jg
or
jno
mov
movs
shr
sbb
lock
mov
loop
adc
and
cmp
test
push
cmovp
out
test
pop
aas
pushf
sbb
dec
into
fisttp
ret
push
dec
mov
push
rol
scas
mov
movs
push
test
mov
jae
rol
add
jns
mov
push
imul
repnz
fdivr
mov
push
popf
mov
add
ja
popa
sub
cmps
mov
xor
aad
mov
or
inc
push
fst
dec
mov
inc
adc
xchg
inc
xor
mov
add
ja
xchg
cdq
loopne
clc
pop
mov
out
cdq
mov
sub
and
mov
or
and
dec
aad
xchg
and
lods
(bad)
mov
push
(bad)
sti
mov
pop
adc
and
daa
adc
outs
sub
cwde
fcom
in
jno
dec
sbb
and
adc
inc
add
movs
ret
or
es
stc
ins
aam
(bad)
test
scas
out
lods
mov
lods
and
mov
rcr
xor
scas
movs
in
in
mov
mov
mov
test
cmp
mov
inc
sub
aad
mov
jns
jne
inc
mov
jl
xchg
pop
or
or
add
ins
gs
test
popa
dec
int3
jbe
or
movs
ja
test
lds
add
adc
adc
push
mov
fsubr
pop
dec
add
pop
shr
nop
out
je
push
jno
add
or
jg
mov
repz
nop
(bad)
jp
adc
lock
gs
sti
iret
adc
mov
fnstenv
mov
xor
imul
push
(bad)
xchg
xor
dec
sbb
push
fiadd
xchg
sbb
dec
sub
out
add
xchg
idiv
pop
repz
loopne
dec
fcomi
push
(bad)
fiadd
mov
(bad)
(bad)
rcr
ror
outs
xor
shr
js
mov
mov
cmp
adc
aam
xlat
mov
inc
jp
xchg
jnp
add
mov
shl
xor
stc
add
adc
mov
and
jno
sbb
repz
sub
sahf
icebp
(bad)
xchg
mov
test
jb
loope
and
ss
int
ds
dec
xchg
push
cld
dec
jne
cmp
inc
shr
push
add
cmps
retf
pop
out
jo
lods
lahf
push
sub
movs
(bad)
rcr
xchg
pop
xchg
movs
pop
xor
mov
sub
or
(bad)
aam
outs
sbb
dec
sar
fdivp
xor
outs
arpl
mov
and
adc
mov
hlt
mov
push
shr
bnd
push
adc
add
and
cmps
xchg
in
fimul
sbb
sub
inc
and
sub
jl
xor
adc
add
arpl
adc
sub
ins
test
adc
inc
hlt
out
ret
fwait
mov
outs
push
dec
aad
hlt
data16
test
pop
xor
movs
and
xor
mov
cmp
mov
push
jmp
inc
stos
daa
in
dec
inc
mov
popa
pop
push
cmp
clc
xchg
fwait
daa
jne
add
add
imul
leave
test
cmp
lds
xchg
ret
aam
cmp
aad
mov
jno
scas
dec
rcr
(bad)
inc
daa
les
inc
mov
js
mul
inc
inc
aam
fsubr
jbe
pop
sub
scas
scas
cmp
push
bound
loopne
mov
(bad)
addr16
pop
cwde
fsub
pop
shl
inc
mov
adc
add
jmp
mov
addr16
xor
ja
cmp
jg
mov
test
fidivr
stos
mov
pop
test
add
dec
(bad)
cmp
shr
movsx
and
imul
enter
jno
sbb
in
pop
rol
loop
lea
or
adc
jge
in
lahf
aaa
xchg
jl
gs
ret
mov
mov
pusha
test
sub
mov
ins
cdq
jb
xor
push
imul
inc
sbb
sub
jns
push
jbe
stos
int3
or
jmp
fwait
add
out
cmps
das
pushf
pop
cmp
mov
loop
retf
push
pop
call
test
(bad)
in
dec
in
inc
int3
(bad)
jecxz
rol
aad
xchg
lea
inc
in
push
dec
or
cwde
add
lahf
sub
lahf
add
push
int3
adc
pop
inc
popf
add
xor
(bad)
inc
retf
xlat
mov
jo
jg
xchg
pop
jnp
ja
cmp
shl
mov
mov
or
mov
xor
(bad)
cmp
sub
fsubr
test
xor
or
push
je
inc
adc
mov
sub
int3
cdq
cli
sti
sti
jecxz
mov
lock
add
(bad)
xor
mov
lods
sbb
stos
mov
movs
cwde
pop
pop
mov
inc
ret
pop
sub
xor
ins
and
cmps
retf
cdq
mov
xor
and
jl
push
(bad)
mul
mov
and
mov
jl
into
std
mov
ds
push
fwait
push
xchg
popa
bound
push
pop
mov
or
loope
mov
fisttp
xchg
dec
addr16
fadd
loope
pop
fs
cs
cli
movs
jmp
pop
push
retf
adc
and
add
je
mov
or
push
add
enter
xchg
push
aas
sub
cmp
mov
push
in
mov
(bad)
(bad)
pop
js
sub
xor
or
push
xor
push
fiadd
lock
and
stos
mov
sbb
mov
movs
and
adc
in
rcl
add
xor
ss
imul
cmp
and
xchg
(bad)
nop
add
clc
int
in
pop
or
loop
add
sbb
sub
stos
les
jl
out
mov
jno
sbb
das
dec
add
mov
mov
cmps
sti
popf
inc
std
xchg
cld
adc
sbb
out
mov
(bad)
call
mov
hlt
pushw
test
jno
or
fisttp
and
hlt
rcr
movs
aad
test
lahf
dec
dec
int3
repnz
dec
ret
(bad)
icebp
stos
push
xor
jno
ds
ins
adc
xor
pop
cmp
shl
pop
xchg
add
mov
test
or
les
jl
xchg
retf
ins
mov
add
sub
inc
aad
lahf
loopne
jno
dec
out
jne
dec
push
pop
test
je
pop
inc
in
lods
sbb
cmp
cld
clc
jp
out
aaa
xchg
out
(bad)
adc
dec
mov
sub
and
dec
or
add
mov
aam
sbb
push
test
ret
sbb
fcom
xchg
push
cli
xor
(bad)
scas
add
cmp
ret
xchg
lahf
mov
jmp
jae
cmc
cli
cmps
push
dec
iret
rcl
push
jl
mov
out
test
je
jg
and
pusha
fcomp
lock
mov
(bad)
add
std
popf
xor
int3
movs
sti
movs
loopne
jecxz
scas
mov
and
shl
inc
sti
inc
test
cmp
jp
pop
mov
rol
or
aas
out
inc
xchg
stc
pop
xor
sti
pop
clc
xchg
dec
js
dec
leave
pop
(bad)
popf
sahf
sub
xor
sbb
push
cmps
or
shr
(bad)
imul
push
ror
sbb
inc
shl
mov
sub
dec
loop
pop
fimul
sub
xchg
or
gs
mov
xlat
lea
dec
dec
mov
outs
add
jns
push
and
fwait
jbe
pop
ret
aas
bound
and
into
pop
gs
cld
and
push
xchg
mov
bound
outs
aam
fiadd
dec
or
ins
xor
mov
xor
mov
fist
cld
dec
dec
sub
les
retf
jp
ret
ins
and
cld
xchg
loop
into
leave
fbstp
add
push
out
into
out
aad
js
lock
fs
lds
cli
rcr
idiv
pusha
inc
into
inc
mov
gs
cdq
sub
out
jno
push
cdq
es
jbe
sbb
push
mov
add
add
mov
jns
xchg
pop
pop
pushf
mov
ins
dec
jae
mov
test
push
loop
cmp
mov
or
inc
sbb
inc
adc
mov
xor
(bad)
mov
mov
out
mov
stc
xchg
mov
xchg
add
adc
push
pusha
inc
dec
cdq
aas
sti
xor
sar
mov
test
stc
movs
adc
xor
popa
xchg
jb
cmp
xor
icebp
or
mov
sub
jns
jno
inc
xor
leave
sub
pop
(bad)
cmp
cmc
jns
jno
mov
fisub
xlat
sahf
in
cdq
push
adc
jmp
dec
xchg
pop
nop
lods
ret
cwde
mov
sbb
pop
jno
mov
fistp
sar
ins
fwait
jmp
push
xchg
xor
cmps
cmp
xor
sbb
jle
sbb
or
shr
pop
and
(bad)
imul
or
icebp
sbb
fnstsw
popf
jmp
push
cli
adc
popa
xchg
ja
and
xchg
mov
cmc
pop
aam
or
push
inc
jecxz
test
cs
dec
rcl
dec
mov
idiv
or
add
inc
es
pushf
(bad)
jno
adc
into
aad
xchg
retf
stos
jnp
dec
repz
jecxz
gs
movs
push
jl
or
xor
and
call
xchg
xchg
jae
pop
push
jl
adc
test
jno
xchg
outs
(bad)
jno
xchg
sub
inc
cmps
(bad)
ss
fcmovb
sub
scas
lods
push
or
sbb
ret
cmp
pop
and
pop
mov
push
fs
(bad)
or
rcr
sbb
in
sbb
fwait
xchg
pop
and
mov
int
or
jo
inc
mov
stos
sub
ins
cmp
push
xor
mov
ja
jge
inc
loop
bound
test
push
dec
sub
xlat
mov
xor
push
retf
mov
mov
repz
call
jmp
cmp
(bad)
out
shl
xchg
or
xor
sub
xchg
cmps
leave
aad
loopne
pop
adc
add
cmp
fisub
jno
clc
and
call
fdivrp
mov
inc
test
out
lahf
cmc
sahf
push
and
adc
out
inc
dec
xor
sbb
fucomip
aas
jge
inc
movq
clc
add
std
mov
dec
mov
push
pop
popf
icebp
push
int
dec
es
sbb
dec
icebp
fcmovne
xor
sbb
push
and
jge
lahf
xor
sub
in
lods
shl
push
leave
call
push
push
or
(bad)
and
retf
stos
outs
xor
jbe
jbe
in
clc
in
outs
ficomp
and
ja
add
cmp
movs
ret
xlat
inc
xchg
ss
cld
xchg
and
jnp
sbb
push
jecxz
popf
adc
call
fmul
sbb
(bad)
lds
mov
lea
sub
stos
jmp
sbb
xor
jo
sti
retf
(bad)
mov
pop
xchg
pop
and
scas
dec
inc
pop
cmp
mov
fs
arpl
imul
ins
out
inc
mov
out
and
pop
test
cmp
mov
or
inc
outs
add
adc
jne
adc
push
inc
xchg
fwait
cli
(bad)
and
inc
xchg
ins
das
mov
(bad)
pop
les
(bad)
xchg
cmc
(bad)
in
retf
or
jmp
out
rol
push
xlat
sub
cmps
dec
xchg
out
lods
cld
and
jb
shr
loop
leave
or
sub
mov
and
fcom
mov
mov
fidivr
(bad)
adc
pop
jge
adc
mov
sub
sub
mov
test
jne
sbb
pusha
pop
adc
inc
ds
sbb
test
call
xor
push
push
dec
int3
test
mov
dec
dec
sbb
cdq
rol
lahf
addr16
mov
xchg
out
shl
sub
jnp
rcl
test
daa
pop
dec
sbb
inc
inc
xchg
js
mov
nop
out
add
cli
pop
ftst
pop
in
std
xchg
ss
(bad)
dec
push
and
in
out
lahf
jo
sub
(bad)
push
imul
xlat
jmp
fdiv
and
shl
cmp
inc
ror
dec
xchg
sub
push
push
(bad)
imul
scas
icebp
bound
xchg
jmp
data16
mov
mov
lahf
lods
pushf
sub
inc
cmp
cs
shl
sbb
hlt
pop
sub
sub
leave
xchg
lds
cmc
adc
push
sahf
adc
mov
push
xor
inc
mov
xor
and
mov
popa
mul
jmp
jns
mov
cdq
mov
dec
dec
push
lock
xchg
jge
jecxz
sub
pushf
cs
outs
jbe
js
add
mov
mov
cmp
push
fcomp
(bad)
sti
jns
arpl
xchg
cmps
mov
mov
xchg
repz
repnz
ret
stos
mov
je
adc
not
push
add
movs
imul
xchg
sbb
imul
scas
xlat
cmp
xor
jnp
or
inc
and
das
mov
cmp
mov
mov
mov
inc
add
and
mov
jns
idiv
or
xor
mov
pop
and
and
nop
mov
jmp
xchg
add
lahf
mov
jg
add
pushf
in
ins
mov
mov
adc
mov
icebp
scas
mov
push
das
and
jno
ror
and
inc
or
xchg
jmp
mov
sub
xor
inc
xor
movs
imul
icebp
push
imul
and
sub
jbe
inc
adc
and
pop
jmp
push
nop
cmp
lock
mov
repnz
shl
mov
leave
sbb
nop
pop
mov
sbb
mov
pop
aas
fwait
xchg
cwde
sub
push
mov
xlat
xor
xor
dec
add
mov
les
adc
div
(bad)
sub
retf
fisubr
js
mov
lods
dec
movs
mov
bound
push
out
push
pop
jle
ficomp
test
stos
cmp
aas
pop
add
pop
dec
mov
popf
xchg
mov
fidivr
push
fwait
pop
call
add
lahf
mov
inc
add
add
sub
pop
jnp
inc
mov
inc
cmp
mov
daa
js
xchg
jno
adc
sub
cli
repz
pop
cmp
or
scas
push
add
pop
lahf
xchg
jecxz
push
add
imul
push
jo
in
jne
dec
or
pop
jns
test
add
mov
pusha
ror
mov
in
xor
imul
jns
xor
pop
cmp
test
aam
xchg
jecxz
jecxz
push
mov
inc
leave
test
mov
jmp
fwait
lock
cld
push
xchg
in
push
jbe
ins
jo
cmp
push
sub
xor
scas
out
adc
jge
mov
xor
das
out
lea
and
dec
shr
ins
imul
rcl
out
xchg
shl
cdq
out
or
repnz
mov
fucomip
test
fstp
push
jl
or
cmp
cld
xchg
jae
(bad)
xchg
push
and
je
sbb
and
jno
pop
jno
gs
push
mov
into
das
test
pop
adc
ror
ss
scas
div
cmp
mov
or
pushf
lods
out
cli
lds
adc
cmp
mov
stos
mov
dec
xchg
retf
add
cwde
pop
popa
sbb
stc
xchg
push
xor
test
setnp
mov
daa
and
fldcw
out
pusha
and
call
dec
or
ret
in
push
pop
div
in
mov
stc
lahf
push
pop
sbb
mov
inc
daa
fidivr
jmp
add
mov
(bad)
call
cmp
add
sub
xchg
jae
add
cmp
fnstsw
sti
jp
mov
sti
jnp
mov
sbb
sub
ja
js
sub
fwait
in
les
inc
adc
and
jmp
idiv
in
fst
mov
fstp
loopne
scas
adc
ret
rol
xor
sbb
mov
and
jb
lock
out
jae
pop
ja
sub
sub
call
dec
popf
jno
outs
inc
push
xchg
test
lahf
mov
mov
xchg
nop
xor
xor
cmp
xchg
cwde
mov
inc
push
imul
rcr
ret
in
add
ins
(bad)
mov
addr16
aad
test
fcomp
inc
loopne
dec
jp
shl
mov
mov
aad
cmps
popf
and
dec
in
dec
push
sub
sbb
scas
outs
in
push
sbb
das
movs
push
adc
xor
pop
pop
push
mov
xchg
cs
add
outs
xchg
fisttp
enter
popa
inc
xor
pop
cmps
xchg
mov
mov
loop
mov
mov
inc
adc
pop
push
push
nop
dec
jmp
jmp
ret
dec
cmps
push
jmp
imul
adc
iret
push
jmp
leave
into
push
xchg
and
sub
cmp
mov
lods
outs
rcr
and
(bad)
js
retf
ret
pop
rcl
movs
xchg
aam
(bad)
sub
cmp
aas
adc
inc
lods
jl
mov
push
outs
outs
imul
ins
ss
(bad)
add
nop
sbb
inc
xchg
jb
pop
lahf
cmp
jbe
scas
mov
arpl
(bad)
subps
sti
lds
jecxz
sbb
cld
push
bnd
sbb
inc
pop
out
test
inc
sub
repnz
in
push
push
mov
out
test
dec
fbstp
pop
pop
pop
and
add
dec
xchg
push
sub
sahf
pop
push
push
or
adc
cs
stos
add
clc
dec
inc
jmp
jmp
sahf
push
xrelease
jbe
cli
inc
mov
clc
aaa
and
outs
xchg
or
es
in
jg
cs
and
mov
adc
add
call
repnz
pushf
test
push
jae
jb
call
inc
in
sub
pop
push
xchg
jae
mov
xor
pop
mov
test
sbb
pop
xchg
jns
and
jnp
cmp
jns
jle
retf
minps
outs
jne
pop
sub
scas
dec
into
mov
test
mov
loop
test
push
adc
sbb
enter
jnp
sbb
sub
pop
dec
in
shr
xor
aas
pop
cwde
xchg
movs
jg
xchg
fisttp
sar
fs
out
dec
mov
xor
mov
das
(bad)
inc
mov
out
xor
pop
push
in
dec
iret
push
out
jne
mov
sbb
js
adc
sbb
arpl
and
repnz
nop
pusha
or
(bad)
pop
cmp
and
xlat
neg
xchg
aad
jns
dec
das
call
xchg
sub
ret
lods
mov
popf
imul
xor
cmp
fisubr
adc
popf
push
inc
dec
stos
inc
inc
add
lods
mov
movs
sar
inc
mov
jnp
xor
mov
bound
data16
loop
xchg
(bad)
jle
lds
sbb
sti
retf
in
xor
jge
xchg
mov
test
cmps
mov
stos
test
or
aaa
mov
push
sub
shl
in
ja
dec
mov
jp
out
jns
mov
and
rol
retf
shl
pop
ins
(bad)
and
outs
jae
pop
scas
sahf
mov
fstp
cdq
pop
retf
(bad)
sub
sahf
sti
lea
xchg
cmp
and
xor
push
scas
xor
repnz
xlat
mov
rcl
mov
ret
add
aaa
test
in
fist
popf
or
pop
sbb
push
adc
in
outs
pop
and
dec
xchg
(bad)
stos
push
ins
jmp
inc
mov
loopne
inc
rcl
mov
adc
in
xchg
add
cs
fbld
rol
in
fidivr
shr
jp
pop
in
dec
fimul
rcl
gs
inc
pop
je
cmp
fidivr
fbld
add
xor
push
(bad)
mov
(bad)
mov
inc
sub
sbb
or
sub
pop
into
jns
inc
mov
mov
ins
mov
xchg
jle
lock
test
ins
fst
mov
sbb
mov
cmps
sub
movs
bound
into
test
cmp
and
ret
out
inc
scas
dec
mov
mov
sbb
retf
and
xchg
clc
movs
dec
mov
shr
dec
stos
sub
ret
out
mov
add
mov
xchg
das
and
lds
inc
test
cmps
ins
nop
jno
push
ds
adc
xchg
mov
and
scas
inc
mov
(bad)
adc
xor
(bad)
jmp
shl
outs
int3
shr
repz
lds
enter
add
loop
mov
in
not
add
popa
push
aas
mov
sbb
les
test
jp
in
rcl
and
das
sub
outs
pop
fild
sub
das
loope
retf
or
arpl
mov
aaa
dec
scas
sub
cmps
add
and
lds
xor
and
push
mov
jnp
mov
packuswb
dec
rcl
add
icebp
lds
lahf
or
sub
popf
push
mov
xchg
enter
mov
dec
inc
add
xor
xor
jb
mov
sub
aas
stc
rol
scas
dec
fsubr
inc
push
stos
sbb
xor
xchg
sub
(bad)
sub
shl
inc
fidiv
(bad)
fcmovnbe
inc
and
xor
xchg
ja
jne
dec
mov
call
ss
pop
xchg
ins
into
jecxz
stos
pop
(bad)
iret
stc
jp
out
push
or
add
stc
pop
dec
dec
ficom
test
mov
mov
clc
cmp
jmp
mov
mov
scas
rcl
sbb
and
lods
clc
mov
jnp
jp
adc
jo
dec
xor
movs
test
loop
sbb
add
pop
popf
push
pop
pop
mov
inc
cwde
xchg
pop
imul
popa
addr16
cmps
mov
fadd
pop
and
mov
cmp
out
arpl
or
sub
and
mov
mov
(bad)
mov
sub
push
das
pop
sub
mov
xchg
cmp
imul
hlt
sub
or
pop
mov
jmp
inc
popa
or
dec
mov
xchg
test
scas
popf
int
(bad)
push
push
xor
sar
addr16
inc
pop
aad
shl
adc
jp
popf
scas
push
das
dec
mov
pop
fimul
xchg
bound
and
or
call
sbb
aam
adc
mov
jl
(bad)
jns
push
mov
push
js
jno
outs
imul
or
enter
scas
ret
jae
xor
test
shl
adc
data16
popf
pop
cld
jecxz
aam
sub
loopne
adc
lds
or
icebp
xlat
rol
sbb
dec
inc
inc
pop
pop
add
lock
sub
jno
push
jb
or
mov
sbb
add
lea
jnp
cmp
inc
jge
aaa
fistp
mov
sbb
add
mov
and
xchg
cmps
add
jecxz
stos
(bad)
js
pop
repnz
and
sub
in
add
pop
scas
pop
ins
sbb
imul
and
jle
cvtps2pd
dec
and
sbb
push
leave
fisubr
(bad)
aas
or
or
pushf
or
mov
in
xchg
jns
fsub
jge
jecxz
mov
push
mov
hlt
sbb
mov
mov
adc
(bad)
add
inc
mov
in
test
iret
fidiv
jo
mov
es
sbb
xor
push
into
mov
mov
fdivp
daa
xor
adc
bound
sahf
(bad)
loope
push
lea
sbb
mov
int3
jecxz
dec
pop
lahf
lods
int3
call
push
clc
lods
int
mov
push
into
(bad)
lea
ja
and
push
iret
cs
test
add
adc
shl
mov
int3
popf
lahf
sti
inc
jge
ins
xchg
push
cmp
loope
xchg
aas
mov
fsub
fs
ins
arpl
pop
retf
in
add
leave
shr
fs
push
je
sub
mov
ins
fcom
sub
mov
cmp
mov
dec
dec
fldl2e
mov
outs
push
push
mov
or
rol
jne
and
push
or
xchg
sub
add
and
xor
xor
cmp
loope
cdq
push
and
adc
cmps
or
dec
mov
test
in
cs
jle
cmp
or
sub
inc
cmps
(bad)
test
loopne
mov
jg
in
cwde
popa
sbb
push
sbb
es
fadd
cmps
cmp
out
pop
popa
push
les
hlt
leave
stos
cmp
in
sub
stos
scas
es
xchg
cmp
(bad)
retf
repnz
fsub
adc
test
dec
fld
imul
shl
xlat
pop
or
sub
je
jns
mov
pop
sbb
sar
jne
sub
daa
fincstp
and
mov
cmp
nop
pushf
gs
popf
scas
inc
mov
mov
dec
pcmpeqw
sub
test
xchg
lock
lea
imul
in
push
jmp
add
adc
cdq
add
shl
pop
dec
sar
jp
add
cmp
sub
lds
addr16
ret
xchg
ds
adc
dec
xchg
mov
icebp
lds
mov
jecxz
xchg
sub
xor
ins
pop
pop
mov
xchg
dec
shl
das
jns
xlat
bound
sub
leave
aam
mov
pop
and
xlat
cs
or
pop
xor
push
pop
jl
mov
inc
addr16
add
sti
sbb
lods
je
xchg
dec
ret
cwde
mov
call
inc
cld
sti
xchg
mov
jo
sub
(bad)
add
sub
ficom
mov
mov
data16
das
or
add
push
ins
jl
loop
leave
mov
and
shl
mov
pop
mov
sahf
sub
sub
dec
lahf
dec
imul
push
pop
jne
jge
xor
mov
mov
nop
icebp
adc
or
pop
loopne
cdq
sbb
or
xchg
mov
lods
pop
retf
pop
xor
je
ror
rcl
addr16
add
push
and
dec
cld
mov
pop
inc
clc
sbb
adc
jns
add
pusha
aad
mov
lock
adc
scas
bswap
adc
retf
movs
xor
sbb
xchg
cmp
loope
lods
bound
idiv
push
and
and
jge
bound
out
int
lods
movs
fwait
xor
mov
jns
sbb
ss
jbe
fild
scas
arpl
pop
jne
ja
push
lods
js
std
js
std
cmc
lods
mov
xchg
mov
add
fisttp
dec
sub
enter
ja
mov
cmp
cdq
push
movs
std
test
pop
mov
xor
adc
imul
adc
mov
push
sbb
mov
std
mov
adc
jg
or
jg
push
mov
pop
cmp
lods
jae
idiv
repz
mov
cmp
(bad)
icebp
sbb
retf
or
sub
mov
and
ja
add
lods
pop
daa
and
bound
mov
jne
mov
push
mov
test
int3
loop
es
dec
cmp
lods
xchg
mov
push
jno
aas
add
cs
mov
jl
mov
xor
lock
jno
sub
mov
mov
xor
mov
shr
jb
call
je
in
movs
(bad)
or
jmp
sub
std
cs
and
add
cmp
fldln2
push
test
jle
nop
retf
movs
fnstenv
sar
and
sbb
jle
inc
icebp
call
sbb
push
or
push
sbb
adc
repz
sahf
sahf
lds
daa
test
icebp
cmp
jbe
fcomp
adc
popf
icebp
int
pushf
repnz
inc
ja
dec
jle
out
fimul
std
adc
scas
mov
pop
and
fst
cdq
retf
pop
shr
or
sbb
sbb
ins
adc
xor
icebp
fsubrp
popa
cs
cmp
jg
cmp
out
cmp
dec
push
lods
in
sub
and
jne
jae
xchg
repz
(bad)
pop
into
sbb
mov
int3
loopne
jb
or
pop
ror
jge
mov
stos
add
inc
in
loope
xchg
retf
cdq
cmp
push
sbb
int
es
dec
mov
sbb
inc
pop
lea
int
rcl
push
or
pop
push
popf
nop
outs
lods
jmp
jge
ja
dec
out
call
jo
xchg
shl
cmp
inc
icebp
push
scas
shl
mov
retf
add
aad
aam
and
neg
movs
sar
lods
push
das
shr
ror
add
repnz
shl
push
fidiv
adc
call
inc
cmps
mov
pop
ins
sub
out
ja
enter
jae
iret
aaa
and
cld
mov
jmp
sar
stos
mov
add
jge
xchg
rcl
add
mov
sub
shl
fxch
or
sub
jns
push
cdq
and
sub
push
mov
dec
sbb
ret
jo
cli
inc
sbb
dec
mov
mov
mov
add
call
cwde
mov
in
retf
loope
fidivr
push
xchg
rol
fwait
xchg
cdq
cmp
adc
cli
pop
dec
xor
xchg
mov
sub
dec
ss
lea
lds
inc
jge
adc
add
das
retf
std
push
jmp
and
call
fwait
xor
cdq
sub
pop
add
jmp
or
or
mov
xor
add
jmp
fndisi(8087
and
inc
imul
xchg
cmp
std
call
mov
push
in
loopne
mov
popf
or
mov
in
inc
sub
mov
dec
push
fadd
dec
pop
fxtract
mov
cmp
stos
inc
inc
xlat
jno
dec
xor
movs
adc
jp
aaa
pop
push
or
jp
cmps
push
cwde
test
adc
jo
mov
dec
xor
bound
and
mov
aas
and
inc
xor
stos
leave
or
push
cli
pop
repz
ss
mov
add
es
mov
jp
loope
jo
shl
fcomp
scas
mov
sub
jmp
sub
lahf
mov
aam
dec
and
inc
(bad)
cmp
mov
aad
ficom
lods
arpl
(bad)
pop
jns
mov
outs
mov
mov
nop
push
retf
lods
pop
mov
outs
xchg
inc
and
sti
fdivr
shl
dec
inc
pop
push
xchg
mov
int
jp
js
loopne
sbb
int
xor
fnstenv
ja
xchg
jb
mov
mov
dec
cmovns
mov
fisub
iret
fcmovnb
or
cmp
lock
mov
pop
mov
dec
mov
ss
mov
fwait
and
push
mov
es
test
out
push
ficomp
add
mov
push
mov
sbb
xchg
out
push
fdiv
out
and
mov
scas
inc
repnz
mov
mov
aas
adc
outs
sti
shl
push
icebp
mov
lahf
arpl
sbb
retf
mov
pusha
shl
jmp
jp
fdivr
outs
or
pop
dec
call
mov
mov
adc
popa
sahf
fisttp
mov
ss
dec
jo
mov
out
cmp
or
jmp
out
arpl
addr16
push
outs
repz
mov
gs
rol
xor
cmp
jge
clc
jmp
push
pop
(bad)
pop
mov
and
mov
push
inc
xchg
movs
xchg
or
inc
jne
xchg
test
dec
mov
cwde
mov
jge
js
lods
sbb
leave
mov
ror
arpl
call
dec
xchg
rcl
out
scas
cdq
shl
out
nop
mov
fimul
sub
out
fmul
and
cmp
jne
stc
enter
push
and
shl
cld
add
mov
or
inc
sbb
stos
jl
repz
pushf
fnstenv
(bad)
jecxz
mov
mov
lods
popf
stc
push
in
imul
or
push
test
fcmovu
out
xchg
pop
mov
push
inc
adc
xor
sbb
aam
f2xm1
int
(bad)
pusha
int3
(bad)
jp
push
aaa
cmp
not
jbe
cmp
aaa
aaa
push
inc
mov
ins
popa
dec
xchg
mov
add
sub
(bad)
test
pop
(bad)
inc
ret
xor
xor
dec
icebp
das
adc
fdiv
xchg
mov
ins
or
jno
pop
test
sbb
jmp
push
fmul
inc
stos
jno
adc
push
in
sbb
cli
and
jnp
and
rol
int
sub
ins
push
and
sub
out
and
xor
jns
pop
mov
or
jns
mov
and
dec
jmp
push
sub
cmp
mov
call
ffree
(bad)
pop
jle
rcl
jbe
dec
fdivrp
aas
jmp
in
push
and
bound
sbb
and
cs
cmp
push
jp
push
inc
jg
jle
mov
sub
inc
pop
(bad)
pop
retf
sbb
add
mov
dec
std
punpcklbw
mov
add
repnz
jae
jmp
inc
push
push
cdq
popa
add
into
xor
movs
or
jp
jge
push
fadd
xchg
mov
push
mov
iret
mov
inc
jmp
repnz
mov
fptan
fnstenv
ja
shr
xchg
shr
dec
mov
imul
push
and
ret
stos
mov
inc
ins
xor
data16
mov
test
cld
sub
pop
clc
mov
or
lock
popa
ins
and
inc
push
mov
pop
fwait
into
dec
push
ror
int3
add
(bad)
pop
daa
fs
mov
adc
cmp
jg
push
jmp
fsubr
lahf
leave
(bad)
repz
dec
jg
scas
and
inc
mov
and
and
clc
fs
adc
fs
xor
jge
test
shl
jo
push
mov
or
pop
xchg
std
mov
ds
sub
aam
ror
fwait
or
jp
(bad)
sti
jl
dec
add
sub
aam
mov
(bad)
mov
loop
sbb
xchg
imul
pusha
mov
xchg
push
test
fwait
imul
(bad)
shr
push
xor
sub
mov
jns
cmc
mov
jb
ja
xlat
jp
movs
pop
je
sub
pop
shr
push
push
arpl
and
pop
cmp
ss
jno
sub
enter
pusha
xor
cs
outs
loope
mov
ror
xor
fldenv
aam
dec
div
std
dec
mov
fs
shr
adc
sub
mov
bound
and
(bad)
mov
dec
retf
inc
xchg
cdq
cmp
xchg
cmp
adc
xchg
sbb
inc
jbe
scas
mov
inc
sub
sub
test
mov
dec
(bad)
or
hlt
out
inc
imul
shr
clc
push
(bad)
pop
test
jne
xor
sbb
retf
pop
cli
xor
jge
or
inc
(bad)
loope
sub
and
xor
in
dec
imul
fdivr
aad
out
push
sbb
jl
dec
mov
stos
cmp
faddp
dec
inc
ins
(bad)
fs
int3
and
mov
and
pop
lds
stc
ins
inc
stos
xor
leave
sti
retf
mov
jo
jle
mov
inc
push
fidivr
repnz
test
stos
lods
mov
enter
cmp
addr16
push
rcr
dec
dec
sti
jmp
inc
(bad)
(bad)
cmp
jecxz
retf
sub
inc
or
sahf
je
(bad)
jbe
mov
inc
test
stos
test
dec
rcr
mov
ins
dec
hlt
sub
or
in
outs
lods
rol
cmp
(bad)
fldenv
pop
mov
and
dec
mov
stc
test
mov
mov
jg
mov
leave
in
cdq
ret
cmp
xchg
mov
mov
sbb
shl
aaa
push
push
scas
jno
jmp
mov
addr16
sbb
inc
fs
loopne
(bad)
pop
cmps
dec
in
sub
add
cs
(bad)
sub
imul
adc
test
sbb
lahf
cmps
call
fwait
jne
sbb
repz
sub
xor
fdiv
or
xchg
push
fild
jbe
dec
mov
(bad)
idiv
push
push
xchg
(bad)
cmp
inc
xchg
retf
sub
mov
retf
out
or
mov
rcr
arpl
fimul
inc
inc
cmp
arpl
test
out
sar
pop
xchg
out
dec
jno
mov
push
adc
retf
loope
scas
scas
add
jmp
call
push
(bad)
mul
in
pushf
aad
mov
dec
popf
cwde
aas
lods
cmp
sub
imul
outs
xchg
pop
adc
loopne
leave
je
loop
jmp
ins
leave
loop
fcomp
(bad)
fdiv
clc
enter
jne
xor
call
push
sub
push
mov
and
add
(bad)
pop
push
imul
mov
pop
push
test
ins
in
and
repz
jnp
js
add
inc
(bad)
ds
adc
imul
jg
aas
adc
pop
out
dec
mov
xchg
imul
inc
push
mul
cwde
xor
std
gs
test
loope
sbb
stos
ficom
xor
ins
cmps
add
mov
xchg
loop
imul
nop
bound
cmp
mov
fisub
adc
movs
inc
jb
rcl
adc
stc
xchg
push
stos
icebp
scas
ss
or
xor
xchg
enter
push
out
sti
cmp
or
nop
mov
iret
fchs
enter
daa
into
sbb
gs
xchg
sbb
sub
mov
and
jnp
addr16
xor
xchg
inc
adc
mov
xor
int
sub
mov
or
cmp
(bad)
jns
inc
lds
cli
aas
fsub
push
jecxz
pmaxub
ror
xor
js
pop
lods
call
ret
fistp
inc
jno
das
and
dec
mov
inc
add
cmp
cmps
sub
mov
mov
iret
xor
jecxz
int
test
jmp
das
sbb
mov
or
mov
sub
out
pop
add
retf
(bad)
sbb
inc
aad
(bad)
push
test
je
aam
adc
lea
adc
stc
jmp
pop
jae
push
test
push
leave
xlat
mov
pusha
pop
nop
cs
ds
add
movs
cwde
ds
mov
add
mov
inc
lock
xchg
xchg
in
stc
cdq
out
movs
sbb
pop
mov
out
mov
js
jp
retf
nop
xlat
mov
in
and
jb
call
arpl
pop
sub
sbb
inc
mov
cwde
sub
mov
jle
cld
sti
frstor
pop
das
jmp
push
jno
pop
movs
pop
cwde
pop
test
sti
push
(bad)
xor
popa
sar
jp
push
cdq
mov
pop
push
and
push
in
loop
mov
jmp
imul
add
and
pop
rcl
or
and
aas
rcr
sbb
xlat
popf
sbb
and
xor
mov
dec
dec
and
outs
mov
xchg
xchg
sar
cdq
ds
fs
cmps
fs
ins
dec
and
sbb
repz
dec
cld
lods
xchg
iret
dec
mov
xchg
lock
mov
sar
mov
mov
js
scas
div
cmp
imul
mov
les
inc
cmps
rcr
adc
push
mov
mov
stos
or
push
pop
adc
int
pusha
inc
sub
mov
inc
or
loope
(bad)
loopne
fwait
neg
jmp
cmps
mov
mov
iret
xor
xor
retf
es
mov
cwde
sbb
shr
and
dec
mov
fisubr
inc
ins
(bad)
sbb
(bad)
in
mov
pop
add
call
jle
pop
rcr
cmp
mov
push
jns
and
xor
mov
jl
push
nop
addr16
xor
loop
xor
mov
or
retf
call
and
pushf
fisub
xlat
ret
adc
push
push
bt
push
pop
in
fimul
mov
inc
lahf
jnp
push
cmps
mov
cmc
push
jns
data16
inc
sbb
push
adc
sub
push
arpl
or
mov
sub
in
gs
in
sti
inc
out
inc
jl
es
mov
mov
lods
mov
mov
xchg
js
pop
out
sbb
shl
das
icebp
(bad)
mov
hlt
sub
sbb
jbe
call
fsub
pop
ret
dec
jbe
xchg
add
les
add
or
stos
retf
add
xchg
or
inc
imul
push
adc
aas
mov
inc
(bad)
push
gs
dec
add
cwde
jbe
mov
shl
xchg
pop
fcom
loope
sbb
sahf
jbe
imul
cmp
fidivr
leave
mov
cmp
mov
ficomp
dec
into
cld
out
popa
jmp
bound
cs
retf
jmp
or
cs
aad
fcom
bnd
mov
jae
push
jo
jne
pop
xchg
mov
pusha
movs
mov
loope
sub
adc
test
popa
out
stos
lahf
repz
in
jecxz
jg
mov
xchg
mov
cmp
fsubr
mov
or
das
and
and
cli
cmps
dec
inc
sbb
pop
test
dec
xchg
push
xor
inc
test
nop
add
aaa
push
xlat
jnp
mov
loopne
push
repnz
enter
iret
mov
or
in
push
out
inc
push
pop
push
fs
mov
in
fsub
xchg
adc
cmp
mov
cmp
jne
neg
jg
dec
mov
ret
mov
push
sub
push
sti
mov
(bad)
or
cmovne
lea
mov
dec
sub
ins
xchg
cs
push
sbb
add
jbe
and
mov
xor
mul
mov
xchg
add
call
xchg
jnp
sub
lods
loope
pop
(bad)
jb
xchg
out
arpl
inc
pop
neg
addr16
add
dec
mov
dec
adc
cmp
lods
push
test
pop
push
out
dec
out
cdq
sub
sti
or
in
pushf
push
jns
mov
xchg
aad
stos
inc
jmp
(bad)
jl
xlat
cwde
add
push
repnz
stos
mov
scas
dec
shl
xchg
jnp
mov
(bad)
add
call
cmp
fimul
pop
fnstenv
xor
push
sbb
adc
pop
call
les
or
nop
mov
movs
test
aam
sub
mov
hlt
xchg
pop
ret
sub
push
xchg
and
lods
mov
jb
cmp
nop
mov
xor
repnz
jp
jmp
rcr
xchg
neg
jbe
add
inc
into
leave
jne
sub
cdq
cwde
push
cwde
jne
arpl
cld
cdq
aaa
das
sbb
pop
jbe
xchg
stc
pushf
add
mov
lods
rol
mov
je
inc
mov
push
push
push
push
or
mov
dec
add
rcr
pop
jno
mov
xchg
in
adc
data16
sbb
sub
out
mov
stos
mov
add
jecxz
out
push
add
jae
sbb
lock
aas
(bad)
push
jge
push
out
mov
jnp
iret
cld
sahf
ss
xor
(bad)
pop
(bad)
pop
test
aas
mov
mov
pop
sub
push
cld
jg
sbb
dec
cmp
int
push
aas
pop
mov
add
(bad)
lds
dec
out
push
stc
ss
cmps
arpl
cmp
inc
cmp
(bad)
xchg
xchg
pop
sbb
sub
fdivr
push
stos
dec
or
imul
retf
push
aaa
(bad)
rcl
int3
shl
push
cmp
(bad)
cmc
in
std
imul
outs
popa
into
sbb
cmps
and
pushf
inc
imul
or
pop
fsub
jle
sbb
fistp
mov
(bad)
int3
jge
push
xchg
adc
ficomp
fisubr
into
dec
into
loope
cwde
jnp
cmp
das
js
gs
xchg
pop
or
pop
lods
jecxz
push
retf
jle
daa
push
xor
mov
shr
xchg
dec
out
jno
movs
mov
inc
ret
xchg
leave
add
mov
stos
pop
mov
jg
cli
mov
(bad)
pop
fcomp
jp
test
sub
pop
in
addr16
loopne
cmps
test
cmps
dec
jge
inc
leave
mov
xchg
mov
out
(bad)
dec
call
sub
pop
xchg
lds
test
dec
fcmovu
add
xor
inc
mov
jae
jecxz
sahf
ftst
je
xor
and
retf
inc
adc
jno
fwait
sbb
mov
push
aas
in
loope
imul
push
aas
daa
std
in
add
or
mov
(bad)
dec
push
sar
jnp
ret
inc
int3
jnp
add
inc
jbe
fstp
mov
clc
xlat
in
mov
arpl
add
jbe
add
sbb
fwait
pushf
cmpxchg
fst
scas
mov
mov
sti
mov
fld
mov
sbb
sub
aas
sahf
test
or
jnp
sbb
stc
lds
push
dec
xor
movs
jge
mov
add
push
dec
(bad)
retf
push
push
in
xor
or
shr
scas
lods
push
mov
jp
add
xor
push
data16
sti
and
popf
xchg
ret
call
jo
loop
xchg
push
test
test
mov
test
aas
(bad)
cld
pop
xor
mov
int3
outs
xchg
or
jmp
jl
lods
mov
outs
and
jne
fwait
sub
dec
pop
pop
mov
ins
jg
retf
lea
loope
nop
mov
repnz
xchg
inc
add
push
or
or
sbb
add
pop
add
and
(bad)
imul
adc
mov
sar
pop
xchg
xchg
nop
fidivr
add
(bad)
or
push
daa
jne
mov
(bad)
and
fcmovnb
jno
(bad)
scas
push
(bad)
adc
push
adc
push
in
aaa
cs
pop
daa
sahf
(bad)
push
pop
jo
dec
imul
std
jbe
xlat
mov
je
stos
iret
pop
neg
push
int3
shr
xor
lods
scas
into
shr
mov
imul
xor
(bad)
scas
mov
retf
pusha
sbb
call
xor
mov
push
outs
fwait
hlt
pop
das
cmc
call
mov
popf
lods
xchg
adc
imul
push
and
repnz
das
in
xlat
adc
sub
push
cmp
outs
dec
sbb
cmp
pop
mov
(bad)
popa
xlat
ret
add
cmp
sbb
xchg
add
push
push
inc
or
cld
scas
sbb
cmp
rcr
inc
or
pop
loop
data16
fwait
adc
sbb
aaa
jl
lds
mov
push
dec
arpl
int3
das
(bad)
pop
mov
pop
ret
mov
call
imul
loopne
xchg
enter
jg
jmp
pop
fwait
outs
push
sbb
mov
cmp
push
pop
xchg
aam
adc
add
int3
mov
adc
xor
(bad)
jae
cmp
in
das
push
inc
xchg
add
ds
pop
mov
or
pop
and
cmp
cmp
xor
dec
lds
outs
aas
sbb
in
dec
and
mov
inc
dec
(bad)
inc
aas
stos
xor
pop
jo
mov
push
push
mov
or
jne
and
adc
cmp
pop
xor
fcmovnb
fistp
cmp
and
ss
bound
sbb
mov
xchg
and
aam
inc
cli
push
jno
aam
push
or
or
sbb
xlat
mov
push
inc
bound
gs
mov
rcr
cwde
pop
into
rcl
push
sub
jle
adc
in
popa
push
(bad)
rol
sahf
jno
push
mov
cmp
js
rol
xor
rol
pop
popf
push
cmp
pop
imul
sbb
cmp
mov
fisttp
pop
mov
mov
outs
jnp
les
int3
repnz
inc
sbb
(bad)
mov
or
fist
hlt
dec
push
shl
add
xchg
imul
pushf
push
repnz
and
lods
add
sbb
pop
mov
pop
and
cmp
mov
adc
push
fidivr
lods
mov
and
sbb
sti
jo
(bad)
enter
pop
sbb
xor
and
(bad)
faddp
hlt
cmps
dec
mov
pop
push
jne
xchg
mov
call
ror
inc
sysenter
push
pop
retf
and
mov
dec
cmps
test
mov
push
jbe
retf
cs
test
sbb
pusha
cmp
jmp
repnz
fbstp
ret
jg
je
lods
test
cli
test
mov
xchg
loopne
pop
rcr
xchg
inc
loop
shl
pop
dec
jge
pop
push
pop
push
mov
out
ret
push
xchg
push
mov
sbb
dec
es
and
fsub
sahf
retf
je
cmp
out
inc
test
stos
push
mov
push
jno
movups
mov
jne
push
inc
add
inc
leave
mov
mov
aam
mov
fs
mov
fnstcw
mov
and
pop
lods
cld
inc
not
mov
jmp
cmps
je
mov
fidiv
(bad)
pandn
cmps
setb
add
int3
adc
mov
cmps
inc
icebp
pop
les
jo
or
mov
cmps
adc
inc
jb
movs
rcr
movs
inc
sbb
shl
or
ficomp
pop
mov
fs
adc
stos
dec
or
mov
adc
out
sub
imul
mov
xchg
inc
sbb
nop
push
out
sti
jbe
or
cmp
ds
stos
push
enter
ins
xor
pop
fdivr
ins
call
fcom
mov
xchg
stos
dec
int
mov
inc
inc
xchg
push
push
xor
adc
aam
movs
inc
cwde
xor
mov
mov
pop
mov
movs
cmps
std
cwde
add
jo
adc
cmp
mov
cmp
and
inc
inc
add
test
mov
cdq
aad
sahf
push
xor
pop
jecxz
push
in
and
aam
pop
pushf
cmc
mul
call
add
hlt
sub
adc
xchg
ret
movs
retf
xor
lods
pop
mov
sub
je
ret
stc
jmp
js
repz
call
scas
js
sub
inc
add
sti
add
call
fwait
shl
dec
jmp
fidiv
sub
call
ja
jo
jne
inc
push
fldenv
push
pop
add
fadd
dec
out
inc
loope
cmps
add
shl
sbb
xor
(bad)
sub
push
add
push
sbb
xchg
and
and
xchg
iret
ret
(bad)
and
mov
mov
bound
inc
cmp
pop
sbb
push
(bad)
loop
fsubr
sub
adc
or
shl
and
dec
fsub
adc
dec
add
(bad)
enter
sbb
dec
ds
jmp
in
scas
push
jne
bnd
jmp
jge
dec
ins
and
xor
or
push
and
mov
cmp
or
inc
(bad)
cld
pushf
rol
or
xchg
sti
je
jp
pop
mov
push
mov
dec
push
ficomp
pop
js
inc
and
aas
cs
popa
mov
repz
pop
je
mov
sar
xchg
repnz
in
test
xor
mov
and
daa
pushf
cs
jmp
push
push
inc
sub
nop
rcr
push
xor
jnp
out
and
or
ret
stos
aam
jbe
out
outs
and
xor
pop
imul
scas
(bad)
data16
or
xchg
shr
and
xor
data16
test
cdq
cmps
pop
jle
inc
test
or
cmp
jns
lods
es
mov
ror
jne
retf
test
imul
mov
jb
rcr
gs
push
ja
and
mov
mov
cwde
mov
cli
jnp
loop
mov
in
clc
xchg
rol
or
xchg
sub
sub
addr16
add
cmp
inc
or
je
push
push
jns
mov
scas
lods
mov
xor
cli
xchg
dec
add
loopne
jmp
and
call
jno
fnstsw
je
scas
pop
lods
mov
and
and
cmp
inc
adc
out
jnp
in
test
and
fisubr
fstp
xchg
xor
or
sub
sub
addr16
xchg
fcmovbe
in
scas
jno
fistp
adc
data16
and
frstor
xchg
loope
jbe
ds
add
mov
add
arpl
ss
cdq
ins
push
ins
push
test
adc
std
into
pop
int3
xchg
or
inc
scas
jl
nop
(bad)
cwde
aaa
pminub
push
(bad)
cmp
inc
push
push
mov
ret
je
fiadd
clc
cmp
mov
lods
push
dec
(bad)
cld
fnstsw
test
repz
mov
cmp
xor
or
inc
int3
pop
daa
repnz
lea
jecxz
push
push
xchg
lods
repz
mov
into
(bad)
pop
xchg
jbe
data16
jae
shr
inc
lods
xor
xchg
popf
das
mov
add
xor
or
and
nop
cmp
sub
orps
cmp
and
and
xchg
into
ins
mov
lock
fsubp
dec
and
cmp
fcmovbe
inc
sahf
stos
fisttp
xchg
mov
sub
inc
cmc
mov
push
cs
sbb
add
imul
fimul
mov
or
sti
data16
sub
cmp
arpl
jmp
fist
(bad)
cmp
(bad)
mov
jg
aas
pop
dec
retf
xor
sub
sbb
add
push
sti
sub
pop
xchg
fmul
dec
test
cmp
mov
sahf
mov
jp
rcl
dec
and
pop
jecxz
jno
std
cmp
retf
in
jns
mov
inc
out
mov
arpl
inc
pop
(bad)
sbb
call
les
pop
xchg
call
sbb
mov
cmp
adc
cs
call
ja
mov
stos
sahf
ss
jno
add
mov
lea
pop
xchg
ins
cmp
aas
jo
mov
faddp
jge
adc
push
cmc
ins
cmp
mov
arpl
sub
movs
movs
out
adc
gs
ds
pusha
popf
xor
xor
into
movs
retf
ss
clc
ins
xor
dec
sub
outs
and
clc
cwde
adc
int
es
pop
cmp
fild
jmp
mov
jmp
cmp
jecxz
xor
leave
hlt
stc
(bad)
int
and
icebp
pop
mov
inc
call
push
pop
dec
call
pusha
mov
sbb
dec
xchg
aad
mov
pop
push
rol
cmc
repz
fbstp
jnp
retf
xor
mov
mov
movs
sbb
xchg
mov
ret
and
pop
movs
pop
push
push
iret
enter
out
popa
push
jbe
jecxz
jne
and
call
nop
jb
xor
mov
inc
iret
(bad)
into
das
int
jmp
pushf
mov
dec
sbb
fisubr
add
mov
mov
enter
mov
retf
into
movs
xor
fs
out
out
js
add
rol
(bad)
inc
xchg
les
lahf
jle
mov
adc
xchg
add
ffreep
cmc
js
push
adc
mov
enter
xchg
stc
jnp
shl
xor
and
fist
in
adc
mov
mov
leave
mov
repz
cmps
sbb
xchg
mov
xor
pop
inc
jle
or
jecxz
sar
fild
inc
dec
add
mov
leave
out
sub
call
mov
jle
lock
movs
enter
dec
xchg
push
cmp
push
inc
push
cmps
gs
push
imul
jle
(bad)
jo
stos
outs
push
mov
addr16
xchg
push
aaa
push
xchg
push
mov
out
nop
call
repnz
lods
mov
sub
or
jecxz
dec
cmp
adc
cwde
test
jl
cwde
jae
dec
ins
push
in
jp
xchg
fs
cmp
sbb
ja
pop
mov
jg
sbb
inc
mov
inc
cmps
aam
mov
push
xor
bnd
add
xor
and
mov
loope
push
mov
add
in
mov
mov
xor
pop
cmp
mov
rep
das
test
call
into
push
popf
mov
loope
and
or
sbb
mov
cmp
mov
sub
shl
or
inc
add
lock
sbb
push
push
(bad)
sub
dec
mov
sbb
rcl
lods
cvtpi2ps
out
or
iret
cmp
(bad)
jae
ds
movs
jno
sti
lahf
pop
test
clc
mov
inc
retf
bound
jmp
sub
and
jnp
jne
jg
jge
push
pop
out
ss
fiadd
adc
mov
adc
mov
sub
neg
adc
sub
inc
xchg
or
ds
inc
jne
in
mov
cdq
popf
ret
out
outs
push
mov
je
adc
mov
retf
adc
lahf
jl
sti
es
xchg
cs
rcr
or
or
or
pop
movs
sbb
test
mov
pop
fild
push
pushf
jns
aam
js
push
dec
mov
mov
ret
shl
ins
push
fisub
jge
jge
ins
pop
mov
jmp
dec
xor
pop
mov
outs
push
clc
dec
xchg
sub
movs
mov
sub
fnsave
test
daa
(bad)
cmp
and
or
std
or
mov
push
xchg
pop
rcr
pop
dec
sbb
jmp
sub
test
lods
es
sub
test
adc
mov
imul
sbb
pop
(bad)
push
jb
and
pop
(bad)
fnop
pop
mov
addr16
imul
lock
push
add
rcl
arpl
icebp
inc
fmul
daa
fmul
daa
and
mov
push
retf
cmp
in
sbb
mov
inc
leave
add
loopne
stos
mov
sar
(bad)
out
ja
fadd
imul
jae
mov
or
push
jmp
outs
mov
into
call
jge
rcl
loop
scas
ins
and
inc
and
sbb
(bad)
sbb
rol
je
inc
sbb
push
xchg
add
jns
mov
(bad)
xor
arpl
call
add
jne
loopne
fsub
sbb
xor
push
imul
sub
mov
fs
stos
fwait
(bad)
dec
je
push
lds
(bad)
test
stc
jnp
stos
sahf
jne
test
test
adc
fist
movs
movs
iret
call
outs
lahf
cmps
push
inc
pop
loopne
push
dec
test
repnz
cld
adc
cdq
movs
cmp
loopne
pusha
pop
fwait
ret
add
test
mov
xchg
(bad)
xchg
jmp
add
cld
(bad)
ja
(bad)
add
sti
out
mov
imul
mov
xchg
int3
dec
(bad)
loop
scas
and
jmp
scas
jge
sub
popa
jle
add
rol
lods
out
sbb
cmp
xor
loope
into
pop
pushf
dec
xor
cmp
test
cmp
aaa
mov
xor
loopne
idiv
fbld
repz
xchg
outs
push
scas
cmp
aas
xor
sub
out
loope
adc
inc
or
adc
adc
or
mov
jg
(bad)
sub
pop
ds
das
xor
adc
mov
mov
inc
(bad)
ins
pop
leave
or
(bad)
xchg
cli
mov
mov
mov
and
jnp
pushf
movs
push
mov
ds
nop
cmp
aas
popf
add
pop
into
ins
jecxz
push
xchg
mov
mov
call
adc
xor
push
ds
add
clc
pop
xor
ss
sbb
sti
or
std
scas
mov
mov
or
mov
ss
dec
xor
xor
xchg
add
dec
add
or
scas
jl
add
xchg
popa
or
lea
or
add
cmp
mov
xchg
push
lock
push
out
add
imul
dec
xlat
fdivr
push
daa
popf
jno
cs
mov
pop
rol
xchg
add
dec
mov
(bad)
xor
xor
clc
mov
lods
(bad)
pushf
xchg
push
sbb
mov
(bad)
hlt
jb
sub
outs
xchg
xchg
sbb
aad
mov
add
sub
aas
fwait
into
jne
(bad)
icebp
adc
adc
jbe
in
fwait
aas
sbb
jmp
sahf
retf
xlat
mov
ins
in
or
vpaddsb
adc
jae
xchg
out
mov
inc
mov
ins
sub
movs
mov
repnz
and
pop
jge
cmp
xor
dec
arpl
fsub
retf
fild
xchg
lods
stc
setne
(bad)
mov
dec
sub
ja
out
cmc
out
mov
lods
mov
pop
xor
fcmovbe
push
das
test
xchg
adc
sub
inc
xor
ds
mov
sub
ror
mov
jle
add
mov
std
pop
jmp
out
xor
adc
outs
push
das
(bad)
int
jge
retf
icebp
scas
ja
adc
mov
cmp
sub
mov
mov
jb
dec
pop
or
mov
pop
ret
pop
lods
in
sub
scas
jmp
pop
cmps
push
or
xchg
int
scas
cmps
and
test
(bad)
xor
push
jbe
scas
jl
ja
clc
jns
mov
pop
aad
add
out
pop
or
sub
jmp
repnz
mov
push
sbb
bound
mov
pushf
xlat
adc
fsub
rcl
jo
sbb
movs
ds
dec
mov
sbb
jo
inc
pop
dec
jmp
inc
sbb
and
or
push
adc
leave
jb
test
mov
addr16
xor
fimul
dec
or
scas
test
jmp
iret
and
rcr
(bad)
sar
scas
in
cmps
aad
nop
cmp
and
mov
push
pop
add
xor
loop
pop
shr
rcr
lock
dec
out
mov
and
jg
inc
in
sub
xchg
mov
rcl
js
lods
or
sbb
bound
mov
fwait
adc
jne
inc
dec
inc
push
sub
xor
arpl
xchg
mov
xchg
pushf
mov
outs
sub
pusha
popf
adc
int3
jbe
ret
int
jle
xchg
cmp
imul
or
push
cmp
int3
(bad)
jae
aam
(bad)
int3
pop
sub
pop
push
icebp
imul
fbstp
dec
outs
pusha
xchg
adc
int
dec
mov
in
aam
dec
mov
into
jmp
andnps
enter
lea
xor
mov
loopne
add
out
stos
fst
adc
xor
cwde
loope
movs
loop
add
in
lods
dec
cwde
cmp
ins
mov
pop
out
jl
jmp
mov
imul
pushf
(bad)
sti
ins
in
data16
dec
add
test
in
jg
mov
pop
shl
and
(bad)
inc
xchg
jl
or
data16
pop
cmp
(bad)
aas
rep
sbb
std
scas
mov
into
test
jb
ret
ret
imul
adc
(bad)
in
pop
mov
je
pop
pop
shr
stos
push
lahf
push
xor
in
sbb
aam
mov
int3
(bad)
jmp
test
ins
adc
mov
lahf
push
cmps
fist
or
push
adc
das
std
repnz
pop
in
sbb
es
out
movs
push
push
loope
movs
cwde
sub
or
shr
movs
jmp
dec
push
ret
xchg
pushf
jmp
mov
add
sbb
jle
add
or
jge
jmp
inc
(bad)
aam
stc
dec
pop
mov
test
add
cmc
push
pusha
jg
xor
jb
(bad)
adc
push
jmpw
dec
test
dec
add
fadd
into
mov
adc
xchg
and
lods
cwde
sbb
sub
xor
add
pop
sbb
push
inc
(bad)
jp
inc
out
cld
cmp
int3
mov
cmp
xchg
dec
mov
fs
mov
mov
xlat
mov
jb
pop
xchg
add
mov
mov
popa
jge
pop
sub
xchg
cmp
or
test
jne
dec
and
arpl
fnstenv
cdq
icebp
or
sub
daa
imul
push
movs
inc
aaa
popf
out
sti
jmp
adc
imul
sbb
pop
xchg
and
movs
sub
fldenv
pop
fnsave
fst
pop
add
idiv
loope
pop
inc
add
std
adc
mov
or
jp
add
push
(bad)
jmp
mov
mov
jge
sub
dec
cmp
mov
and
adc
repz
out
jns
xor
(bad)
mov
(bad)
xchg
je
push
lods
nop
bound
je
dec
jl
retf
stc
adc
dec
jl
xor
dec
fisttp
shr
dec
out
fsubr
call
jle
cmp
inc
(bad)
mov
jecxz
pop
repnz
pushf
push
xchg
dec
int
imul
(bad)
loopne
retf
and
add
push
and
jmp
in
sbb
sub
mov
jbe
lock
adc
addr16
push
mov
push
pop
lods
lods
stos
les
adc
mov
lock
aas
ror
mov
dec
std
mov
imul
repnz
addr16
xchg
popf
aas
adc
pop
(bad)
jmp
pop
aas
mov
mov
and
xor
data16
add
xor
xchg
pop
jmp
xchg
pop
pop
push
(bad)
dec
sub
shl
inc
into
test
aaa
mov
lds
xchg
jg
loopne
lahf
jle
retf
rcr
mov
mov
dec
xchg
test
pop
sub
adc
and
div
dec
sahf
sub
jo
aad
lods
aam
adc
push
pop
inc
jo
retf
out
pop
(bad)
gs
push
repz
mov
(bad)
std
push
and
mov
shl
lea
sub
lds
ss
int3
imul
mov
jb
sbb
mov
or
add
out
dec
mov
mov
int
dec
out
fs
lods
push
pop
adc
cmc
in
hlt
xchg
ins
fwait
inc
or
sub
mov
fucomp
fcompp
sub
fwait
pop
cmp
repz
pop
ds
cmp
xchg
in
xchg
out
xchg
lock
or
sbb
popf
cmp
test
xchg
mov
mov
mov
pop
xchg
in
leave
xor
push
rol
mov
inc
push
sub
xlat
sub
inc
sbb
pop
mov
stos
mov
in
(bad)
hlt
inc
cmp
sub
ret
xor
xor
mov
mul
repz
aam
dec
fcom
and
pushf
(bad)
bound
jns
jp
or
jne
sti
mov
sub
xchg
pop
add
sbb
mov
mov
mov
cmp
xchg
cmp
cli
mov
aaa
out
and
jge
xchg
or
aam
mov
cmps
and
test
icebp
add
jg
int3
sub
mov
mov
add
push
pop
sahf
iret
outs
cmc
pop
mov
idiv
pushf
or
shl
mov
and
gs
lods
sbb
push
jmp
stos
pop
push
dec
aas
cmc
xchg
jno
(bad)
mov
movs
cld
fiadd
sbb
lds
pop
jmp
dec
or
cwde
push
inc
push
(bad)
aad
fisub
mov
sbb
mov
in
add
fld
adc
add
shl
push
and
jns
call
mov
mov
sub
mov
cmps
repnz
and
adc
movs
jp
shr
inc
mov
pushf
addr16
add
jmp
lds
bound
cmc
ss
and
dec
dec
out
pop
sbb
sti
mov
mov
fiadd
imul
push
or
les
out
inc
jno
hlt
jmp
cwde
clc
add
popf
push
pop
in
dec
test
popf
lods
xchg
mov
(bad)
push
pusha
stos
push
jno
push
adc
xchg
adc
inc
mov
rcr
das
sub
pop
fdiv
test
pop
cmp
and
pop
fisubr
sbb
sbb
data16
mov
jno
push
mov
xor
adc
cmp
cmc
xor
jo
retf
(bad)
cmc
retf
ds
in
add
fiadd
mov
fwait
or
(bad)
sub
mov
js
and
fdivp
je
dec
sub
push
adc
pop
mov
std
push
out
mov
out
je
dec
jg
fbstp
cmp
ss
out
mov
xchg
lea
lahf
mov
dec
xchg
sti
push
sub
aam
out
dec
and
out
and
adc
xchg
(bad)
dec
in
fabs
ds
xchg
sti
shl
neg
dec
mov
adc
das
call
dec
xchg
xor
push
cdq
cmps
rcl
push
adc
(bad)
xor
shl
call
mov
sub
(bad)
fild
mov
int
cwde
mov
call
arpl
xor
ror
xor
mov
or
movs
xchg
pop
jg
mov
sbb
mov
or
adc
and
pop
ror
mov
and
add
pop
test
sub
mov
sbb
pop
jge
out
or
sbb
mov
fst
mov
pop
vmovq
ret
push
mov
cmp
and
push
xor
pop
jb
das
rcl
pop
rcl
test
xor
inc
inc
add
pop
mov
popa
ds
jo
push
not
mov
sbb
lds
xchg
inc
jae
pop
out
mov
mov
call
mov
out
aas
jb
enter
out
out
sar
mov
dec
adc
cmp
push
test
cmp
test
xchg
cmp
pop
std
or
pop
xchg
mov
adc
rol
dec
out
test
mov
inc
inc
dec
les
into
test
xchg
and
outs
jne
cmp
outs
jo
(bad)
jne
sbb
(bad)
retf
dec
mov
add
cmp
xchg
and
jp
leave
sbb
xchg
popa
adc
fwait
cmc
dec
or
and
nop
mov
jbe
cmp
and
leave
add
push
aaa
push
hlt
push
call
push
div
retf
out
lock
pop
ret
pop
popa
imul
icebp
into
ja
sub
imul
jns
retf
xchg
psrld
test
adc
rcpps
test
and
(bad)
movq
jge
dec
jecxz
mov
fstp
icebp
ds
out
fidivr
push
movs
ds
sub
push
xchg
les
(bad)
repz
jnp
xchg
inc
adc
cmp
cmp
repnz
fisttp
pop
dec
js
mov
pop
das
adc
shl
push
and
dec
repnz
test
es
(bad)
or
and
sub
xor
mov
jmp
repnz
nop
inc
xor
mov
pop
inc
ror
sub
jae
push
(bad)
les
scas
hlt
out
and
sub
in
popa
push
out
gs
mov
mov
xor
xor
jmp
mov
sbb
cmp
jo
dec
dec
imul
out
test
ror
or
pop
lods
add
jmp
pop
jl
jmp
mov
and
ins
add
div
stos
cmps
dec
icebp
popa
shr
mov
pop
sahf
jnp
ror
mov
or
sub
xchg
cmp
(bad)
scas
movs
sbb
ja
mov
inc
ins
sbb
sub
loopne
sbb
inc
rcl
pop
add
or
push
cmc
ss
rol
push
adc
pop
fwait
mov
inc
call
cli
(bad)
fcomi
in
mov
adc
jle
jecxz
push
iret
cmp
inc
mov
or
(bad)
call
push
or
out
(bad)
int3
inc
aam
daa
outs
jnp
call
or
clc
stos
cmps
cs
mov
dec
shl
mov
mov
test
call
jne
ins
dec
lock
int3
mov
mov
add
pop
or
pop
push
and
aas
(bad)
ins
(bad)
es
sbb
push
dec
daa
or
hlt
test
mov
pop
scas
ret
enter
xchg
loopne
add
retf
ret
aas
and
jb
jp
pusha
imul
movs
jp
or
lods
and
add
lea
mov
icebp
dec
adc
pop
ror
xlat
repnz
cmp
xchg
lods
adc
cmc
jne
inc
call
pop
ret
lahf
sbb
push
outs
adc
scas
sahf
mov
ins
ins
and
cmp
mov
cdq
rcl
jl
out
call
xchg
mov
scas
jmp
mov
pushf
inc
ret
iret
mov
and
cwde
xor
mov
adc
icebp
or
pop
outs
aad
mov
cmp
pop
fimul
or
adc
and
sub
(bad)
fcomp
ins
cmc
jo
mov
das
xor
dec
fdivr
jl
mov
sbb
dec
cmp
jmp
jae
push
call
xchg
xor
gs
sub
mov
popf
les
setnp
dec
mov
inc
pop
retf
lahf
pusha
sub
mov
pusha
aam
xlat
pop
fmulp
mov
inc
adc
jno
mov
nop
mov
imul
xchg
fs
xor
pop
jbe
mov
pop
dec
repz
jno
sbb
mov
adc
mov
das
int
imul
xor
xchg
mov
jl
mov
sub
(bad)
jg
sub
out
mov
xor
call
mov
mov
jle
mov
add
add
adc
call
pusha
outs
test
retf
enter
out
fistp
jnp
in
xchg
cmps
fmulp
(bad)
ins
sub
jne
xchg
sbb
cdq
xor
mov
xchg
scas
pop
enter
jp
pusha
mov
out
add
mov
xchg
lea
push
lock
(bad)
js
jae
sbb
test
push
repz
xor
gs
cs
sub
jbe
adc
mov
push
ret
call
mov
cs
nop
cs
fcomp
loopne
mov
pop
cwde
pop
dec
dec
pushf
xchg
in
call
fsubr
movs
cmp
cmps
push
dec
mov
arpl
push
mov
xchg
retf
bound
pop
cmc
mov
(bad)
div
ins
mov
adc
sub
push
js
imul
xlat
out
push
add
fist
sub
pushf
xor
aaa
cwde
mov
popf
test
test
fsub
pop
out
sbb
aas
cmp
xor
loope
movs
loopne
or
int
cmp
iret
fistp
mov
js
mov
mov
cwde
aad
cmp
clc
scas
stos
popa
or
and
ins
add
stos
inc
dec
ins
ds
adc
sub
push
ficom
xor
lock
add
cdq
call
or
and
ds
dec
sub
rcr
cmp
mov
inc
lahf
mov
pop
nop
xor
ins
jg
sub
test
inc
pop
mov
pop
inc
mov
out
es
dec
adc
in
sti
xchg
call
lahf
pop
jne
call
into
out
xchg
in
bound
jl
or
pop
jnp
ins
test
pop
mov
jecxz
cmp
in
ins
push
pop
icebp
add
dec
adc
mov
fwait
fwait
xchg
push
jg
mov
hlt
dec
adc
mov
mov
push
sub
(bad)
sbb
mov
xchg
out
je
jmp
cli
aam
mov
cwde
(bad)
lds
or
sbb
mov
inc
shr
cmp
xlat
sub
dec
pop
movs
mov
xor
popf
sub
cmp
sbb
leave
jmp
fcomp
mov
push
mov
mov
sub
pop
or
in
movs
jecxz
inc
scas
cmp
aad
lahf
fdiv
lods
dec
not
cmc
mov
outs
cmps
push
fwait
lods
sbb
