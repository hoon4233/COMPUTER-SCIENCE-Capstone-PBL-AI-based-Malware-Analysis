and
mov
adc
cmp
out
daa
or
inc
nop
nop
or
cmovs
adc
xchg
dec
inc
push
enter
inc
push
test
xor
or
js
cmps
xchg
cmc
mov
pop
jmp
ins
lea
pop
mov
mov
sub
add
rol
pop
add
mov
fsubp
out
ja
cmp
out
sar
nop
sub
ja
cmc
fadd
lods
jns
jmp
or
and
nop
push
push
jmp
test
or
add
cs
push
fsubrp
inc
fstp
mov
ja
outs
(bad)
jg
mov
std
into
jge
div
lahf
jg
sti
into
jg
iret
jg
sbb
inc
cdq
push
cmp
fcmovne
nop
dec
hlt
inc
mov
imul
jb
(bad)
jmp
lea
jle
hlt
jae
mov
fnstsw
lds
shl
es
mov
xchg
xlat
mov
jge
add
mov
movs
inc
mov
mov
mov
pop
jae
mov
lds
cmc
cwde
mov
and
mov
pop
or
loopne
rep
mov
pop
out
add
imul
sbb
call
cmc
mov
mov
mov
adc
pop
mov
xchg
stos
pop
stc
xchg
push
sbb
popa
mov
ins
xor
mov
adc
pop
mov
adc
push
sub
mov
cmc
add
push
sbb
xchg
pop
scas
outs
fistp
sbb
lahf
jp
mov
imul
cld
sbb
xor
and
out
push
mov
std
xor
adc
(bad)
pop
ja
fisttp
fbld
inc
or
push
gs
or
or
movs
rol
pop
mov
add
dec
idiv
in
jno
repnz
mov
sbb
outs
jle
cmp
cmps
sbb
movs
jg
cmp
fidiv
dec
push
idiv
adc
imul
mov
inc
cmp
cwde
mov
imul
div
sbb
ror
sbb
and
cmp
xor
push
call
and
aad
jne
sbb
popf
push
test
mov
stos
mov
loop
lahf
call
sbb
push
movs
cmc
repz
in
leave
dec
cmp
xchg
and
cmps
add
jbe
int3
std
xchg
jge
inc
jle
jl
jge
es
fist
movaps
imul
ins
gs
mov
test
adc
repz
loopne
pop
(bad)
(bad)
(bad)
jnp
loop
push
and
mov
test
and
mov
adc
leave
pop
test
add
call
adc
call
sahf
mov
and
cmp
sub
mov
fmul
test
sub
lods
test
lds
gs
lods
or
jmp
or
add
(bad)
popf
call
xor
shl
enter
sbb
dec
xchg
or
rcl
xchg
cmp
repnz
mov
inc
or
das
test
icebp
add
push
int
imul
push
mov
xor
sbb
push
in
pop
cs
mov
and
mov
stc
ja
in
adc
xor
push
(bad)
adc
mov
enter
sub
ds
or
mov
push
cmp
adc
sbb
fistp
sbb
mov
xchg
push
outs
and
fisub
aaa
sub
ror
scas
sub
popf
retf
mov
push
shr
xchg
xchg
adc
cmps
(bad)
xchg
or
cli
int
dec
out
cmp
shl
and
lahf
cmc
call
jbe
cwde
xor
sub
call
pop
jnp
or
sbb
fdivp
iret
test
mov
sub
loop
push
jns
fst
ins
leave
dec
fsub
imul
add
daa
les
sub
mov
sahf
dec
stos
imul
inc
(bad)
ror
mov
lds
stc
jae
xor
out
mov
mov
not
cdq
sbb
out
adc
mov
rol
mov
add
inc
sub
xchg
mov
jl
repnz
mov
fdivr
xchg
mov
sahf
push
cdq
xchg
inc
mov
adc
sbb
imul
in
add
into
xchg
sbb
adc
fwait
sbb
dec
sbb
mov
stos
jae
sbb
xchg
mov
jne
popf
mov
frstor
retf
leave
sahf
mov
mul
movs
xor
add
out
mov
pop
push
xor
fstp
movs
push
sub
ss
push
push
cmps
ins
and
cmps
cmp
xchg
ret
call
mov
pop
inc
mov
clc
mov
or
xor
aaa
mov
xchg
loope
push
rcl
sub
jns
call
shl
push
das
push
xchg
or
inc
jl
lods
jnp
pop
inc
mov
enter
in
lock
sbb
jge
add
in
push
jl
dec
xlat
mov
pop
and
sti
sub
inc
retf
sub
push
cld
sti
adc
cmps
js
sbb
xchg
mov
mov
xchg
lods
inc
add
cmp
inc
scas
push
jge
sbb
push
cmp
sbb
(bad)
and
push
sub
cmp
div
out
xchg
add
stc
push
(bad)
cmc
add
aam
stos
imul
jle
mov
aad
(bad)
movs
out
sbb
mov
lods
mov
ds
push
fs
jecxz
lock
ret
fsubr
je
jmp
or
out
xor
push
ficom
into
repnz
cmp
push
xchg
pushf
and
loope
jecxz
mov
sub
hlt
sti
sbb
jno
out
movs
arpl
aam
pusha
push
sub
stc
push
or
cs
sub
cmps
cs
pop
ja
loop
dec
adc
jne
movntq
ror
sbb
jmp
nop
xchg
popf
lds
xor
mov
add
push
mov
dec
test
xchg
in
fadd
lds
leave
jno
icebp
idiv
cmps
(bad)
mov
jnp
daa
jp
add
fstp
adc
mov
push
imul
add
sahf
in
addr16
loope
lods
inc
mov
sub
dec
or
cmp
cmp
fwait
aas
add
ds
adc
aad
es
jmp
push
ror
xor
jne
sti
loope
inc
pop
sub
sbb
xchg
and
jae
sub
test
int
jle
jns
fwait
mov
mov
imul
and
adc
loopne
cmps
and
jmp
mov
sbb
mov
dec
fdiv
call
mov
pop
hlt
adc
and
lea
sbb
push
push
in
movs
sub
aaa
sbb
dec
test
test
jl
rol
test
inc
(bad)
jne
lods
out
loopne
mov
mov
xchg
and
sbb
adc
pop
pop
sbb
retf
mov
or
xchg
into
add
rol
mov
pushf
retf
mov
cmp
and
mov
inc
mov
sbb
mov
pop
(bad)
dec
mov
inc
sahf
sbb
cmp
int3
pop
in
and
(bad)
nop
shl
jo
fist
loopne
mov
lds
mov
outs
inc
sub
call
aaa
(bad)
ins
sbb
(bad)
fsubr
mov
mov
scas
pusha
fs
mov
mov
test
ja
xchg
loopne
sub
cdq
pop
jbe
data16
push
push
jmp
push
inc
or
mov
cmps
sbb
push
xor
inc
cmp
stos
mov
ins
xor
aas
sub
ret
xchg
or
lods
mov
xor
mov
in
xlat
xor
inc
test
daa
dec
jns
and
jp
daa
(bad)
xor
mov
add
xor
lods
xchg
sbb
data16
imul
pop
pusha
pop
pop
outs
popf
jp
cmp
sahf
aam
push
mov
into
sbb
out
cdq
jno
jns
cmps
cwde
mov
inc
xor
out
inc
(bad)
pop
mov
pop
mov
jb
mov
bnd
cmp
inc
mov
or
push
add
sub
or
ror
cmpxchg
sbb
jl
and
ret
std
push
xor
imul
ss
push
sub
cmps
adc
pop
cmp
pop
sub
and
mov
or
iret
int3
mov
xchg
ficom
push
add
hlt
test
inc
fcomp
test
pop
pop
mov
jmp
cmp
push
jno
cld
call
test
sub
fistp
adc
popf
js
in
not
hlt
pop
sub
daa
fldcw
fisub
sub
add
push
adc
adc
jne
jmp
adc
fsubr
cmp
(bad)
mov
pop
int
pop
in
xchg
es
stos
adc
ficom
cmp
aas
xor
jnp
or
ret
add
movntps
ins
sbb
pop
mov
lea
push
xor
or
or
push
mov
jo
fwait
repnz
les
iret
inc
pop
aas
xor
cmp
jbe
retf
jmp
xchg
or
add
mov
inc
fdiv
add
cs
das
dec
(bad)
dec
pop
and
js
adc
stc
sub
add
fbld
lds
pop
leave
aam
repnz
mov
push
sar
add
push
pop
pop
ficom
sbb
adc
sbb
jg
xor
js
or
add
ja
jmp
lods
ret
hlt
scas
xor
dec
inc
jl
dec
and
pop
sub
in
push
and
ret
push
xor
mov
and
jecxz
sar
(bad)
hlt
xor
dec
jbe
inc
xchg
cmp
stos
stos
js
out
push
test
cmp
inc
push
in
sti
lahf
push
and
fnstenv
inc
test
and
sbb
enter
div
das
xchg
xchg
into
mov
mov
(bad)
add
fidiv
sub
jns
xchg
aas
pop
in
dec
sar
out
and
pop
cld
xchg
dec
nop
pop
(bad)
cld
movs
or
retf
pusha
jnp
jne
pop
adc
push
(bad)
cmp
out
inc
jl
(bad)
repz
pop
lods
cmp
mov
das
dec
pop
sbb
test
push
aas
jg
or
adc
and
int3
sti
pop
fwait
es
(bad)
pusha
jle
xchg
adc
dec
dec
inc
cmps
js
rcl
call
jp
mov
mov
out
xchg
sub
mov
and
test
add
push
repnz
pop
push
add
aad
das
adc
fld
cmp
movs
or
in
jbe
idiv
mov
xlat
pop
out
xchg
test
fldcw
int3
sbb
jmp
mov
xchg
shl
pop
test
push
movs
dec
or
or
clc
cmc
jecxz
ret
jmp
mov
call
jne
stos
rcr
sub
push
dec
adc
int
add
pop
adc
pop
xchg
and
out
pop
add
shl
push
pmaxsw
repz
fdiv
mov
out
xor
sbb
test
icebp
sbb
in
mov
ds
seto
call
mov
lea
cdq
test
mov
sbb
rcr
push
call
push
loope
ins
mov
mov
ficom
iret
mov
and
pop
popa
hlt
adc
dec
les
es
mov
sub
leave
inc
enter
pop
dec
xchg
int
sbb
or
mov
add
lea
test
test
retf
shr
mov
test
and
xchg
xchg
add
int3
xchg
inc
mov
add
arpl
into
fstp
outs
mov
pushf
sub
shr
jns
xor
jp
cmps
add
and
or
fucom
add
jne
sbb
inc
sbb
lods
pop
and
mov
xchg
test
adc
gs
xlat
adc
les
daa
mov
add
inc
pop
fcmovu
test
xor
std
cdq
or
cmc
xor
and
xor
add
pop
ficomp
outs
cmps
sbb
sbb
dec
loope
es
fistp
retf
xchg
scas
mov
and
ja
cld
repz
add
pop
pop
jae
test
cld
mov
frstor
neg
aaa
mov
icebp
xor
dec
je
sbb
sub
stos
jne
test
cmp
fld
xchg
pusha
xor
or
sbb
push
cwde
sub
out
xchg
mov
inc
and
jns
and
xor
rol
int3
sbb
(bad)
in
hlt
push
inc
out
push
mov
jecxz
sar
cmp
pop
push
sbb
inc
in
js
cli
dec
test
lea
das
sub
jmp
call
xor
jecxz
xor
jmp
iret
(bad)
mov
imul
mov
sub
jecxz
and
lahf
inc
cmp
inc
cmps
pop
push
mov
xor
jle
gs
dec
outs
mov
repz
fisttp
rcl
mov
adc
xchg
es
pop
gs
inc
jbe
outs
rcr
popf
sti
sti
lods
pop
sub
or
and
or
rcl
mov
cld
adc
or
sbb
addr16
mov
ret
dec
adc
mov
xor
icebp
push
out
in
inc
pop
cmp
call
retf
hlt
js
(bad)
repz
lock
or
call
repz
icebp
push
xchg
xchg
jl
sub
ret
sub
push
enter
sti
jo
jns
aas
shl
xchg
xor
ins
cmp
inc
push
pop
jns
xor
sub
(bad)
cmc
fld
inc
lods
pushf
(bad)
pop
pusha
mov
dec
cmc
or
sub
inc
in
pop
test
xchg
ficom
out
pop
mov
fidiv
xchg
popa
sbb
ret
neg
or
pop
daa
jne
neg
push
and
les
shr
jbe
fidivr
test
sbb
adc
imul
in
std
inc
push
cmp
push
mov
leave
popf
(bad)
mov
push
cmc
lods
cmc
sub
idiv
inc
fcom
movs
cmc
cwde
sub
ja
mov
mov
enter
xchg
fwait
cmc
sub
iret
and
xchg
pop
mov
mov
mov
arpl
in
outs
daa
mov
cmp
fwait
mov
push
dec
out
mov
pop
xchg
xchg
sub
sub
inc
add
cmp
pop
repz
cwde
xchg
xchg
and
or
mov
and
jb
jmp
adc
imul
jb
xchg
adc
retf
sub
xor
add
loopne
pop
lock
jg
xchg
int3
loop
out
sbb
aas
inc
push
scas
mov
push
cmp
ja
aad
test
sahf
call
push
retf
mov
mov
lea
and
mov
div
int3
cmps
jp
cmp
popa
scas
dec
getsec
mov
mov
ss
jo
rcl
cmp
pop
mov
push
outs
and
hlt
fdivrp
mov
stos
ror
push
stc
rcr
pop
pop
cmp
mov
mov
pop
xchg
jno
jl
les
push
fadd
cmp
cmps
xchg
xchg
or
lea
xor
sti
outs
cmc
push
shr
gs
sbb
sub
test
cs
adc
hlt
cwde
or
sub
cmp
hlt
jmp
mov
in
cmp
push
clc
(bad)
jecxz
repnz
int
add
pop
sub
ins
mov
jl
jmp
pop
mov
les
sub
pop
mov
inc
leave
fs
mov
fidivr
mov
mov
fs
cs
pushw
push
(bad)
icebp
fstp
adc
shr
imul
(bad)
std
inc
and
pop
cmp
cmp
jo
inc
ret
movs
or
adc
adc
stos
loopne
adc
mov
sbb
enter
les
and
shl
mov
fadd
(bad)
ror
inc
jno
jl
hlt
push
dec
fs
inc
cmp
ret
sub
jmp
pop
int
outs
or
pop
sub
xor
sahf
iret
inc
ret
cmps
and
sub
adc
sub
(bad)
imul
(bad)
xor
test
push
popf
stc
ret
test
ror
push
cmp
xchg
rcr
cdq
dec
stos
sbb
test
mov
mov
mov
mov
push
pop
fwait
clc
scas
jmp
icebp
mov
xor
and
adc
fisttp
or
and
arpl
clc
in
aam
dec
arpl
adc
cmp
fstp
mov
and
jae
fnstsw
sub
dec
sub
cmps
pop
pop
mov
scas
daa
mov
aaa
push
pop
push
add
mov
sub
jnp
jl
sub
inc
xor
cmps
jne
mov
fisub
ins
popf
push
push
pushfw
xor
mov
xchg
xchg
pop
inc
(bad)
push
xchg
stc
xlat
call
jecxz
mov
fst
jle
pop
dec
stc
std
and
loop
icebp
dec
mov
dec
test
sbb
mov
push
jnp
mov
sub
pushf
mov
xchg
mov
sub
sub
xor
arpl
retf
inc
js
adc
xchg
cmps
(bad)
push
cmp
xchg
dec
iret
sbb
out
sbb
push
popa
and
sub
jb
test
push
sub
inc
mov
outs
aas
push
cli
xor
jno
sub
xor
sub
sub
scas
xchg
pop
jg
sub
(bad)
into
ss
out
movs
shl
pushf
sbb
push
cmp
mov
sbb
pop
mov
icebp
xchg
push
xor
jb
mov
pop
test
loope
test
cmps
cmp
dec
lock
mov
jnp
in
arpl
aaa
xchg
pushf
ss
push
cmp
jo
mov
idiv
loop
lock
sti
cld
sbb
into
imul
or
cmp
js
in
test
jno
stos
cld
scas
adc
mov
and
idiv
jge
push
pop
fnsave
sbb
jae
xor
xchg
call
inc
clc
xor
cld
es
outs
mov
pop
or
sbb
mov
rcl
inc
adc
push
clc
push
lahf
adc
sub
jl
xor
clc
xchg
push
xor
push
out
mov
fcmovnu
repz
xchg
mov
jge
out
fsubr
sti
dec
pop
xor
dec
fwait
in
ja
inc
or
mov
ret
jge
sbb
mov
sbb
(bad)
jnp
lea
test
shr
fiadd
out
outs
(bad)
outs
jne
ffreep
jnp
and
inc
adc
(bad)
int
not
mov
or
iret
sbb
cmp
aam
sub
mov
sar
push
mov
cmp
mov
and
enter
pop
sbb
xchg
sub
dec
lods
inc
(bad)
fnsave
pop
push
push
xor
(bad)
sahf
loopne
outs
sti
push
sti
test
in
jmp
mov
movs
push
and
out
scas
inc
out
lahf
cmc
xchg
daa
jmp
mul
or
popa
in
dec
push
fsub
push
fs
imul
sti
adc
inc
pop
retf
mov
push
xchg
xchg
xlat
outs
mov
mov
jo
xor
push
out
imul
sahf
leave
leave
inc
bound
ds
pop
stos
or
jp
add
pop
pop
test
je
(bad)
(bad)
sti
in
mov
imul
leave
arpl
push
or
rcr
cmp
pop
pop
movs
push
and
dec
sbb
jo
mov
ds
mov
cmp
cmp
daa
bound
sub
icebp
imul
fisubr
and
sbb
in
addr16
jbe
or
push
cmp
(bad)
retf
xor
pop
imul
cwde
dec
add
in
in
out
adc
fidivr
(bad)
mov
mov
cs
inc
sbb
loopne
jae
sub
shr
repz
ins
adc
and
xor
push
sahf
push
and
mov
or
das
inc
fld
pop
loopne
test
sub
jo
sbb
leave
hlt
adc
jb
addr16
jl
pop
push
in
sahf
xchg
mov
adc
imul
cmp
add
xchg
cmp
pop
or
dec
cmc
jno
shl
sub
mov
adc
adc
sub
lea
daa
sub
cmp
pop
xchg
xor
ror
inc
jg
inc
retf
cli
jne
inc
or
dec
test
mov
inc
adc
inc
pop
jb
push
sbb
out
sahf
and
mov
stos
imul
and
in
cs
bound
or
push
pop
rol
or
outs
push
sbb
cmp
fistp
sub
mov
retf
lds
mov
dec
mov
mov
push
scas
or
cmp
jo
pusha
lds
pop
fiadd
cmps
dec
mov
nop
mov
adc
adc
out
fild
scas
stos
mov
jp
(bad)
push
int3
stos
mov
test
mov
jmp
mov
fisubr
ja
call
mov
ins
xor
cdq
jne
jne
movs
dec
pop
jo
rcl
call
movs
call
loope
jge
loopne
pop
mov
mov
jmp
xchg
movs
lods
lds
xor
sub
in
dec
in
ins
outs
enter
sbb
lods
int3
stos
push
pop
aam
into
mov
and
mov
outs
es
cmp
cmp
pop
cmp
pop
in
mov
mov
mov
pop
leave
arpl
das
enter
sahf
xchg
fwait
cmps
pop
xchg
inc
pop
jecxz
sbb
aaa
out
push
jmp
pop
and
lods
test
into
add
les
add
cmp
arpl
call
jl
dec
cmps
test
data16
fadd
mov
(bad)
pop
push
test
push
popf
pop
adc
push
and
push
cmp
pop
pop
mov
or
jecxz
add
pop
adc
mov
jge
mov
pop
push
mov
jle
gs
mov
pop
movs
adc
push
sahf
xchg
aas
push
or
ret
lea
jnp
xor
xor
add
pop
das
and
les
adc
push
mov
dec
add
outs
test
jae
inc
jae
sbb
inc
adc
in
pop
pop
fmul
pop
xor
outs
inc
add
(bad)
mov
lds
fst
dec
dec
xor
xor
ins
hlt
std
mov
sub
and
inc
cmp
mov
lods
cmp
in
ss
sub
lahf
(bad)
and
test
jo
inc
adc
fcom
lods
mov
cs
mov
add
icebp
pop
and
loopne
ret
add
xlat
rcr
sbb
mov
jmp
cmp
sbb
mov
out
aam
add
or
jmp
mov
jne
stos
and
inc
mov
call
sbb
jne
loope
out
mov
push
xor
inc
fwait
inc
shl
mov
and
mov
sti
repnz
sbb
jl
sub
dec
jns
push
xchg
fmul
and
jmp
sub
ret
xchg
dec
daa
enter
mov
sub
popf
call
dec
(bad)
fistp
sbb
jne
sub
sub
fimul
xchg
ret
jne
inc
add
push
xor
xor
cld
push
mov
out
outs
cli
mov
push
dec
add
test
aas
and
inc
scas
and
scas
scas
xor
pop
jno
mov
push
scas
(bad)
mov
sub
stos
inc
dec
sbb
test
pop
(bad)
cmp
sar
pop
jle
bound
cli
lock
es
iret
cmps
mov
ja
push
les
sbb
xchg
test
dec
dec
ja
pushf
(bad)
sub
jp
stos
push
stos
sbb
bound
xchg
gs
pushf
imul
aad
cdq
dec
fs
push
cs
pop
std
push
es
inc
or
sar
or
int
mov
pop
jbe
push
pop
cmp
inc
xchg
push
cmp
jne
mov
sahf
aad
sbb
fdivr
push
mov
lds
pop
sbb
jne
dec
and
(bad)
movs
mov
ds
outs
outs
fadd
aam
cli
lahf
mov
jb
dec
frstor
xor
icebp
xchg
sbb
xchg
pop
pop
fldenv
inc
mov
mov
or
hlt
out
fst
and
jbe
push
xor
inc
repz
and
repz
jnp
xchg
call
and
test
jle
iret
fnsave
add
loopne
jnp
push
or
aad
mov
ja
test
mov
loop
daa
adc
dec
mov
jmp
and
mov
mov
retf
das
xchg
adc
fst
pop
lods
dec
fld
xchg
fiadd
add
pusha
pop
adc
cs
fistp
lods
mov
mov
(bad)
dec
jmp
xor
iret
sub
int
pushf
dec
fsubr
inc
scas
addr16
mov
add
mov
outs
sbb
stos
add
bound
pop
repz
cli
jns
dec
and
addr16
dec
arpl
pop
lods
popa
jno
fucom
fst
lds
push
into
mov
rcr
popa
add
fs
sbb
sbb
jmp
mov
test
fldln2
push
dec
xlat
push
add
lods
cmp
movs
mov
lds
ja
xchg
pop
retf
movs
icebp
out
inc
and
pop
mov
jns
into
adc
retf
dec
leave
gs
jle
into
sub
pop
gs
mov
sub
push
call
inc
fwait
adc
clc
popf
(bad)
gs
dec
lock
lahf
pop
cmp
push
mov
add
stos
xchg
mov
call
sub
jl
ret
xor
mov
mov
xor
es
pop
fstp
push
cmp
dec
mov
cmp
pop
jg
js
ss
cli
nop
jne
aaa
outs
mov
mul
jno
ss
sub
fwait
xor
mov
sar
fsubr
xchg
aam
retf
in
adc
cmp
hlt
cwde
mov
pushf
jl
loop
into
sbb
mov
dec
cwde
repz
cmp
rcl
cmp
or
or
pop
pop
push
inc
adc
push
aad
sbb
fnsave
rcr
dec
add
lahf
retf
aad
int
inc
pushf
(bad)
aam
sbb
sub
xor
jns
aas
(bad)
mov
cmp
push
add
inc
and
mov
loopne
xlat
test
(bad)
inc
pop
pop
lods
sbb
loopne
add
or
mov
retf
pop
xchg
inc
fstp
inc
je
test
cmp
mov
mov
inc
push
push
(bad)
fstp
popf
mov
nop
loopne
jo
movs
(bad)
ins
xchg
loopne
(bad)
pop
dec
call
push
fst
movs
or
mov
jno
enter
xor
pop
pop
into
int
push
mov
cdq
outs
adc
mov
aas
and
jae
aad
enter
push
xchg
xchg
jecxz
push
jne
test
daa
lods
and
xchg
pop
aas
jnp
push
sub
dec
jbe
xor
idiv
jmp
jg
ret
mov
or
mov
inc
push
mov
lock
jmp
loope
sti
pop
pop
jmp
cs
xchg
cmp
and
pop
lods
push
mov
and
sar
mov
pusha
pop
dec
mov
mov
pusha
in
adc
dec
(bad)
cmps
ret
inc
fnstenv
pop
pop
loop
fcos
xlat
xor
and
sbb
in
jl
push
test
jmp
das
inc
sub
pop
jns
movs
or
xor
popf
cwde
cmp
and
cmp
xchg
jb
in
pop
call
shr
fiadd
ds
mov
mov
cmp
inc
cmps
stc
mov
pop
dec
leave
xchg
bndldx
in
dec
leave
mov
shr
cmps
push
xor
jo
lea
(bad)
hlt
add
pusha
mov
lods
int
xchg
xor
cdq
lods
push
stos
out
adc
(bad)
popa
mov
cmp
outs
enter
(bad)
mov
xlat
mov
loop
out
or
xchg
adc
push
mov
and
call
imul
shl
dec
jmp
add
push
adc
fdivr
aaa
xchg
movs
or
mov
sub
movs
jb
cld
mov
rol
in
inc
mov
and
call
pop
gs
xor
xchg
imul
test
(bad)
or
retf
dec
jp
or
loopne
pop
and
cmc
push
movs
mov
inc
pop
test
push
addr16
xor
dec
gs
scas
jo
mov
cdq
test
mov
das
xor
sub
les
call
lods
or
mov
clc
and
test
(bad)
sub
add
and
stos
mov
pop
inc
jmp
mov
push
mov
jne
loope
loop
addr16
mov
mov
retf
gs
pop
xor
fild
or
adc
jmp
ds
lahf
gs
fadd
cmp
test
sahf
into
sbb
dec
aaa
mov
js
xchg
arpl
sbb
pop
in
and
push
mov
and
sti
cmc
cdq
mov
mov
push
movs
lds
rcr
in
sahf
sub
ffreep
sub
ror
sbb
pop
adc
and
pushf
inc
dec
jne
pop
mov
push
shl
aam
(bad)
outs
out
inc
pop
sar
sub
push
and
mov
jbe
push
mov
(bad)
sbb
sbb
dec
pusha
es
in
dec
cli
sub
sub
dec
cld
mov
mov
stc
xchg
dec
dec
outs
and
jmp
stos
inc
sub
dec
mov
or
dec
mov
fst
dec
pop
mov
(bad)
(bad)
or
cmp
out
ret
or
push
stos
mov
or
xchg
xor
sub
les
fs
adc
call
push
inc
je
mov
cmc
pop
pop
repz
fcomip
pop
add
push
mov
xor
fwait
pop
mov
outs
mov
xchg
push
cmps
jnp
pusha
add
xor
jne
and
sbb
cmp
and
cwde
sub
inc
es
jge
xchg
sub
std
xchg
mov
aas
and
cmps
repz
xchg
repz
or
sti
add
mov
inc
mov
cs
xchg
imul
aaa
aam
mov
dec
xchg
mov
ror
push
push
inc
or
in
shr
or
and
jl
mov
xchg
sbb
shl
mov
dec
pop
push
pop
imul
push
int
mov
push
mov
dec
pop
int
shr
mov
jbe
aad
xor
pop
in
inc
adc
or
mov
sub
(bad)
mov
movs
sbb
add
fdivr
out
mov
idiv
fsub
adc
frstor
jl
cmp
xor
unpcklps
jnp
xor
(bad)
xchg
jb
das
shl
fdiv
repz
cdq
xlat
retf
xchg
outs
pusha
movs
jge
call
inc
out
in
or
jb
xor
out
jg
les
loope
sub
and
inc
lock
jnp
sbb
(bad)
idiv
fninit
inc
(bad)
cli
inc
imul
jb
add
sbb
jns
(bad)
outs
mov
test
std
(bad)
jg
mov
scas
push
sti
jmp
cmp
sahf
imul
test
or
inc
cmp
cmp
sahf
scas
inc
test
push
(bad)
call
or
adc
or
pusha
cs
out
movs
sbb
dec
adc
fstp
or
cmps
shr
std
ins
mov
adc
lahf
or
pop
push
sub
test
add
pop
mov
ja
inc
scas
outs
mov
popf
enter
ss
xchg
bound
and
push
adc
jmp
lahf
inc
dec
sub
int
mov
sbb
out
cmp
sbb
mov
adc
inc
shr
addr16
arpl
dec
out
and
mov
stc
pop
lea
outs
dec
movs
dec
inc
shr
icebp
lods
pop
push
aas
int
xchg
in
inc
fcom
mov
inc
lods
ins
mov
pop
cmp
pop
cmp
repz
inc
mov
into
jmp
mov
adc
cmp
mov
jecxz
or
bound
xchg
es
push
fs
add
push
mov
cld
and
arpl
daa
mov
mov
(bad)
inc
int3
mov
fistp
(bad)
into
mov
js
sub
(bad)
and
repnz
jmp
xor
ror
jmp
in
fs
jbe
pop
(bad)
and
aad
ss
pop
pop
push
je
xor
and
stos
vmwrite
int
add
imul
out
ror
cdq
xchg
and
pop
sub
pop
xchg
sub
xchg
xchg
ss
clc
pop
fld
int
sbb
lods
fiadd
in
fcmove
outs
mov
or
mov
cwde
shl
sbb
(bad)
int
mov
out
push
mov
repz
sahf
cmp
into
(bad)
mov
pop
ins
retf
aad
(bad)
xor
sbb
std
ret
pop
dec
mov
dec
xchg
push
mov
out
in
xor
fdivp
mov
out
mov
fistp
mov
(bad)
call
jg
jmp
mov
int
out
cdq
jge
mov
ja
cmps
fisub
enter
retf
sub
sbb
ins
push
cli
cmp
leave
adc
daa
inc
cmp
inc
ins
ds
ins
jecxz
sbb
retf
ficom
(bad)
xchg
sub
xor
in
pop
nop
and
xor
cmp
cmps
cmp
sbb
xchg
fist
add
mov
or
movs
(bad)
add
scas
call
mov
xor
add
xchg
or
mov
hlt
arpl
inc
push
inc
test
leave
idiv
add
aad
loop
mov
xor
add
sbb
adc
mov
jecxz
(bad)
pop
fldcw
sub
js
scas
pop
into
dec
push
jmp
fnstenv
aaa
jg
jae
repnz
sub
or
nop
push
mov
lds
aaa
mov
sar
mov
icebp
dec
stos
jb
mov
imul
aad
aam
in
outs
icebp
aad
stos
xchg
dec
out
dec
sti
sub
call
int3
shr
and
mov
aad
and
popa
pop
sbb
lock
mov
popa
sbb
popf
pop
cwde
div
dec
adc
add
jle
fbstp
sbb
cs
mov
scas
bound
push
lds
aaa
inc
and
js
cmp
mov
enter
push
out
jecxz
push
dec
push
mov
mov
sbb
neg
ret
inc
add
cmps
leave
loopne
imul
in
in
ja
retf
dec
inc
and
(bad)
pop
sub
fcom
adc
and
xor
les
push
addr16
fwait
nop
cld
shl
scas
test
mov
mov
pushf
sub
ins
xchg
lahf
jge
jns
mov
xor
fimul
(bad)
inc
inc
pusha
cdq
or
lods
cmp
push
cmp
aam
das
xchg
push
je
cmp
test
je
xor
and
test
fnstenv
fld
push
fild
sbb
xchg
add
ins
cmp
(bad)
leave
sub
xchg
not
enter
push
imul
popa
mov
ret
sar
dec
aas
sub
popa
fucom
pop
pusha
loopne
or
push
fiadd
or
enter
pop
cmps
mov
and
in
mov
pop
test
shr
jl
and
xchg
in
scas
mov
and
lods
or
add
mov
pop
int3
sub
push
lods
fild
xchg
icebp
adc
out
cmp
not
out
xor
retf
cmp
push
sbb
sbb
inc
push
mov
daa
and
pop
mov
pop
fild
xchg
jbe
shl
mov
inc
ret
sbb
std
mov
(bad)
les
inc
push
scas
(bad)
loopne
movs
add
aaa
lds
xchg
mov
in
retf
inc
push
cmp
mov
shr
lea
add
inc
(bad)
inc
mov
jo
pop
out
das
push
mov
push
pop
add
sti
arpl
lea
ins
fadd
push
adc
(bad)
shl
test
daa
push
fs
hlt
or
retf
ja
repnz
xor
repnz
jno
or
pop
fdivr
outs
jnp
mov
sub
or
loopne
mov
jnp
push
das
ds
xor
hlt
push
xchg
sbb
push
daa
lds
and
addr16
push
sbb
sbb
push
sbb
cmp
push
jb
aam
in
enter
or
push
jnp
xor
cwde
retf
ins
pop
(bad)
cdq
imul
adc
adc
sub
ror
fidiv
mov
cwde
pop
loopne
pushf
(bad)
into
and
mov
mov
ins
cmp
in
adc
mov
in
or
(bad)
sahf
mov
mov
dec
cld
jmp
shl
sbb
mov
lahf
cmp
inc
aaa
or
(bad)
out
outs
mov
stos
adc
pop
int3
test
call
jne
mov
sub
mov
inc
add
mov
sub
lods
outs
push
lods
mov
(bad)
sbb
jecxz
pushf
(bad)
mov
inc
(bad)
fstp
pop
pusha
mov
push
dec
mov
out
push
pop
push
pop
mov
rcl
imul
je
jns
mov
fcom
jp
aad
dec
dec
and
sti
lds
jbe
sub
call
neg
sub
enter
cld
cmc
aad
and
mov
(bad)
hlt
ins
dec
xlat
inc
push
cmp
sub
adc
scas
sbb
in
pop
xor
sub
pop
push
lods
sub
sbb
xchg
outs
or
push
lock
fdivr
inc
sahf
or
clc
popf
enter
cmps
repnz
jecxz
pop
rcl
adc
sub
sub
cmp
popa
jbe
adc
arpl
pop
test
sub
dec
ret
jns
pop
xchg
pop
fbld
dec
push
xchg
mov
ins
pop
daa
push
sub
pop
inc
xchg
push
inc
and
jne
pop
xor
push
add
dec
mov
data16
lods
out
scas
mov
test
push
xchg
outs
cmp
mov
xchg
xchg
jl
or
stos
rol
test
(bad)
xor
inc
jbe
jl
je
sub
xchg
or
mov
scas
xchg
loope
popa
dec
pop
(bad)
les
mov
push
fstp
fstp
mov
ins
in
mov
jmp
leave
ret
push
daa
inc
mov
jg
push
push
jle
sahf
sbb
inc
or
lods
repz
jnp
jmp
bound
sub
and
fidiv
pop
es
jb
sbb
jbe
mov
push
in
lds
test
and
xor
aam
jge
cwde
scas
dec
xor
rcr
mov
jmp
pop
push
xchg
add
push
stos
mov
jp
mov
mov
aam
jno
daa
lahf
ja
ins
inc
mov
out
adc
jo
test
rcl
shl
jg
(bad)
sahf
arpl
ret
sbb
add
stos
jae
push
into
ret
fisttp
add
jnp
mov
push
jmp
movs
mov
xchg
ja
cmp
daa
pop
cmp
push
cmp
call
sbb
mov
jmp
dec
sub
aas
mov
jb
xor
push
idiv
xchg
jg
call
pop
sbb
cmp
das
cmp
cli
mov
mov
shld
and
into
inc
inc
out
sbb
sbb
lock
frstor
cmp
aas
add
out
mov
(bad)
fidivr
jae
ret
ja
sub
fldenv
in
sub
xchg
dec
pop
lods
das
scas
pop
pop
arpl
rdmsr
jmp
cdq
mov
test
aam
jo
leave
pop
into
mov
or
pop
or
jle
jns
nop
push
sbb
(bad)
xchg
fiadd
mov
xchg
jno
and
out
stc
xchg
fstp
mov
test
ret
xor
mov
adc
inc
bound
and
test
movs
ins
inc
sti
or
adc
cmp
aam
pop
or
out
stos
hlt
and
dec
mov
jmp
movs
test
jge
mov
test
inc
jnp
xchg
cmps
ficom
lods
je
pop
xchg
mov
mov
mov
loopne
xchg
adc
sub
loop
cmp
fdiv
push
pop
jbe
xchg
loop
nop
or
(bad)
out
add
test
pop
pusha
adc
xchg
xor
popf
adc
(bad)
cdq
sbb
xchg
ret
loopne
jge
cld
div
add
sbb
xchg
or
in
outs
jns
and
lods
adc
retf
iret
and
stc
sub
cld
leave
loop
data16
push
sbb
sbb
mov
push
jcxz
inc
popa
push
test
pop
pop
imul
addr16
inc
imul
lods
dec
push
mov
cmp
inc
in
je
xor
adc
inc
xchg
cdq
xchg
les
cmps
push
(bad)
mov
mov
add
cmp
jle
cdq
push
stos
mov
popa
push
sub
fdiv
dec
add
dec
jo
lea
dec
repnz
je
and
dec
int
inc
fs
dec
mov
jp
mov
dec
stos
adc
mov
mov
dec
das
jnp
mov
xchg
mov
xor
js
fs
daa
comiss
cmps
and
imul
sbb
cmp
lods
dec
ror
in
mov
jecxz
lahf
iret
jae
dec
mul
push
fucomp
sub
pusha
popa
hlt
pop
in
in
sbb
cli
pop
lods
pop
pop
sub
mov
bound
je
mov
leave
ret
ins
jp
cld
or
xchg
icebp
pusha
pshufw
mov
rcr
mov
test
and
lea
loope
cwde
and
cld
pop
push
fistp
push
clc
mov
cld
icebp
jb
sahf
dec
out
cmp
call
scas
cdq
inc
xchg
pop
test
jb
jne
adc
ror
xchg
mov
nop
mov
loope
retf
jo
fidiv
mov
fbld
shl
leave
pop
retf
mov
sahf
hlt
rcl
cmp
xchg
cs
jno
cli
imul
shr
mov
mov
movs
jmp
sbb
cmps
pop
test
jmp
(bad)
pop
fiadd
ret
sbb
xor
lods
xchg
pushf
in
jo
push
push
dec
call
shr
loop
imul
popf
mov
xor
jmp
and
ins
sub
sahf
jle
adc
shl
sub
mov
or
cmps
int3
aad
inc
dec
mov
sbb
jg
xor
mov
dec
pop
push
jbe
dec
sub
pop
xchg
mov
into
add
in
mov
lods
cmp
jmp
les
sbb
stos
cs
jae
aam
aad
and
dec
ss
and
nop
push
push
retf
test
gs
in
popf
add
and
inc
inc
ss
xor
jecxz
dec
pop
jge
and
mov
jl
jb
jns
icebp
inc
sbb
lahf
and
outs
nop
div
sahf
jne
inc
mov
add
adc
mov
and
ins
sbb
mov
fwait
inc
mov
imul
xchg
inc
aas
cwde
cmp
out
pop
push
mov
or
cmc
hlt
jmp
mov
ins
jle
sbb
les
icebp
adc
rol
je
mov
inc
aad
or
jp
lea
clc
sub
push
add
(bad)
pop
loopne
test
inc
push
call
add
cwde
xchg
fidiv
fisttp
push
mov
test
pop
je
push
and
cdq
out
cld
out
sub
cwde
fsubrp
push
push
inc
pop
js
scas
sub
cmp
adc
es
lods
jnp
mov
dec
mov
test
mov
mov
xchg
scas
ins
int
mov
aam
dec
mov
jp
xor
jmp
sub
pop
add
mov
xchg
and
ss
or
cmp
or
cmps
fbld
pop
test
sbb
mov
cmp
outs
gs
jbe
div
cmp
call
mov
mov
sub
pop
cmp
or
nop
aad
(bad)
sbb
lahf
(bad)
push
(bad)
retf
adc
add
call
inc
dec
pop
(bad)
adc
fsub
inc
or
mov
or
xchg
ret
push
or
shl
dec
add
ja
inc
retf
add
repnz
clc
or
sub
cli
mov
mov
sahf
aam
rcr
je
jbe
push
ret
mov
inc
adc
leave
sti
adc
dec
retf
sbb
ins
popa
jno
or
cmp
jp
xor
(bad)
cmp
xor
pop
inc
scas
push
dec
pop
push
adc
xchg
les
cmp
mov
cwde
push
imul
pop
retf
mov
das
int3
sbb
cmps
inc
xchg
pop
js
sub
jge
shl
adc
adc
jnp
scas
pop
retf
les
push
jmp
jne
adc
adc
imul
je
sub
push
sub
add
shl
ins
cld
or
js
push
outs
or
popa
les
xor
cwde
adc
(bad)
jecxz
inc
adc
int
xchg
nop
mov
jbe
cmp
sub
in
inc
dec
or
pop
push
jae
and
add
push
and
loopne
sbb
mov
lock
mov
ficom
loopne
pop
push
sbb
pop
rcr
or
arpl
add
popa
push
or
ret
jo
add
push
inc
cmp
cmp
mov
shr
push
adc
and
sbb
pusha
test
sbb
shl
mov
aaa
xchg
mov
add
and
push
add
jg
shl
test
rol
pop
sub
cmp
movs
or
inc
or
daa
add
daa
and
cwde
and
inc
inc
pop
add
sbb
enter
xor
xchg
mov
add
and
add
or
add
pop
rol
clc
das
add
push
ret
adc
jo
add
outs
clc
loop
js
jl
mov
ret
lock
add
adc
test
dec
or
dec
inc
xor
add
dec
add
push
pop
outs
cmp
mov
add
nop
ret
cmp
cli
pop
shr
xor
out
add
js
sbb
pop
jno
imul
mov
and
mov
or
das
xor
test
push
add
push
rcl
inc
sub
add
sahf
add
adc
shl
mov
or
cmps
mov
cmp
pop
xor
adc
js
les
pop
sar
test
rcl
xor
mov
fcom
shl
mov
pop
xor
mov
rol
clc
das
add
push
ret
adc
jo
add
adc
test
dec
or
dec
inc
xor
add
dec
add
push
pop
outs
(bad)
xchg
jne
mov
push
and
sbb
les
pop
sar
test
rcl
xor
mov
fcom
(bad)
(bad)
es
repnz
pop
sub
ds
std
pop
stc
loop
lock
jp
out
call
dec
std
bound
sub
sti
dec
pop
pushf
in
icebp
jmp
push
mov
cli
and
into
test
test
cmp
cmp
and
retf
and
jg
mov
push
cmp
cmps
mov
loope
jo
jmp
ins
je
push
add
jbe
out
dec
sbb
adc
clc
sbb
popa
movs
gs
push
and
sbb
cmp
stos
test
cmp
retf
mov
push
push
je
int3
lock
lods
pop
sbb
jp
push
fldenv
ds
aad
inc
out
mov
push
stc
ja
mov
inc
in
pushf
dec
and
das
in
cmp
cwde
dec
cmc
clc
push
pop
retf
les
cli
in
sbb
cmp
fwait
aas
inc
out
cdq
retf
mov
ss
mov
gs
lds
jle
shl
dec
rol
pop
outs
(bad)
pop
ja
jne
xchg
dec
jnp
iret
mov
imul
fistp
je
xchg
ret
pop
ficom
sub
(bad)
stc
mov
and
and
out
cmps
adc
in
mov
adc
aam
lock
ret
loope
dec
sbb
leave
xchg
sar
iret
xor
add
add
mov
loopne
cmp
loopne
xchg
xor
cld
and
adc
mov
loope
push
and
sub
inc
mov
fcomp
fild
pop
mov
jae
jbe
mov
rcl
inc
mov
test
pop
sbb
loopne
lock
mov
aas
enter
js
xchg
sbb
jnp
mov
push
aaa
cmc
push
sub
mov
push
fist
mov
mov
test
pop
lods
xor
mov
aad
push
inc
sub
xlat
cli
jle
xchg
mov
popf
jle
mov
pusha
call
sbb
or
loop
pop
sbb
outs
mov
cmp
push
shl
dec
sub
push
sub
iret
stc
mov
push
adc
test
push
inc
jbe
aaa
pop
stc
or
mov
jne
lds
add
movs
fldenv
das
(bad)
sub
dec
sub
xor
jae
scas
xor
iret
std
sar
shl
stos
mov
push
adc
mov
les
arpl
test
das
push
fstp
cs
xchg
ja
(bad)
call
popf
imul
out
dec
or
fild
in
aaa
test
fisubr
sbb
adc
cmp
xchg
imul
popf
pop
scas
(bad)
xchg
push
sbb
mov
push
mov
ret
sub
(bad)
mov
pop
cs
or
jecxz
movs
adc
scas
jmp
es
pop
fist
pop
imul
mov
gs
xlat
xchg
jne
in
xor
mov
jno
(bad)
or
inc
pop
mov
push
movs
inc
cmp
dec
xchg
jge
movs
stos
jmp
fidivr
pop
fisttp
sub
lods
in
and
jmp
out
pop
das
in
xchg
or
pop
xor
push
jmp
fdivr
aad
rcl
mov
mov
sbb
jmp
out
sbb
in
mov
xchg
fsub
pop
xlat
in
jp
mov
mov
cmp
fiadd
xlat
xor
pop
pop
push
adc
(bad)
mov
mov
(bad)
xor
push
ffreep
mov
les
out
sbb
repz
push
loopne
add
inc
ret
mov
xchg
mov
in
push
fbld
jae
int
dec
cmps
shl
mov
mov
sbb
outs
lea
jl
loope
mov
push
mov
jmp
jae
(bad)
div
inc
and
inc
xor
xchg
jns
or
or
xor
jnp
dec
sar
ds
aaa
xchg
fcmovb
pushf
cld
adc
add
ja
xlat
mov
xlat
(bad)
lods
push
ss
mov
mov
sbb
inc
pushf
jb
mov
imul
pop
ins
stos
loopne
test
dec
push
jo
retf
movs
jno
mov
jmp
jb
push
iret
mov
cld
fidiv
dec
jg
ins
mov
out
dec
pop
push
(bad)
fst
jbe
sbb
sti
mov
arpl
sub
fcmovu
xchg
jno
cmc
jnp
and
pop
pop
xor
(bad)
icebp
je
(bad)
mov
lods
or
sub
mov
test
js
pop
aad
inc
pop
(bad)
(bad)
mov
dec
push
ins
add
xor
das
mov
test
adc
in
inc
and
pop
mov
scas
xchg
fimul
dec
loopne
sbb
xor
outs
gs
cwde
sub
lods
(bad)
hlt
pop
outs
(bad)
mov
int
adc
ss
adc
mov
imul
mov
and
pop
dec
push
neg
sbb
(bad)
xor
adc
mov
jmp
mov
push
outs
sub
addr16
movs
(bad)
hlt
sahf
aam
inc
adc
lds
jp
stc
lahf
and
gs
sbb
xchg
lds
lods
es
xor
ins
(bad)
mov
or
or
cmp
lahf
imul
gs
xchg
mov
push
sub
es
sub
pop
cmc
xchg
mov
add
test
mov
sti
in
and
mov
push
jle
push
mov
push
pop
dec
das
mov
cmps
push
sbb
sahf
shl
fdivr
repz
popa
xchg
in
imul
sti
or
not
aas
std
jae
mov
dec
out
pop
lahf
cmps
xor
push
adc
in
cmp
fcmovb
xchg
das
mov
movs
sahf
sti
rol
or
addr16
es
cwde
jmp
movs
jns
sbb
adc
pop
js
out
dec
ja
(bad)
cmp
sub
push
fldenv
in
jge
mov
mov
inc
sub
jns
xchg
mov
jb
mov
jns
in
in
cmc
rcr
push
jge
je
xor
push
fistp
mov
clc
pop
daa
mov
mov
shr
xor
mov
(bad)
clc
xchg
sub
shr
dec
mov
clc
mov
(bad)
cmp
mov
xor
xlat
outs
sbb
dec
cmp
pop
out
inc
(bad)
fild
sbb
inc
sar
inc
and
mov
jne
xchg
je
loop
call
push
add
sub
add
fisub
call
jp
sti
int
mov
mov
or
pop
pushf
fwait
aad
(bad)
fidiv
bnd
sub
pop
sbb
jecxz
push
or
mov
or
bound
xor
sub
(bad)
mov
ds
inc
mov
xchg
sub
fistp
lea
cmp
mov
dec
mov
int3
or
lahf
call
data16
jo
je
jl
scas
and
in
stos
in
sbb
rol
dec
out
outs
loope
hlt
outs
aam
dec
outs
not
push
sbb
mov
sbb
aam
test
jns
out
rcl
lea
std
unpcklps
cmp
adc
aaa
mov
pop
mov
cmp
and
repz
or
push
ins
xor
out
das
mov
xchg
scas
xor
jecxz
daa
mov
pop
and
fwait
mov
lahf
jg
(bad)
rcl
mov
mov
cmc
and
cmc
push
fbld
ret
stc
mov
inc
nop
mov
nop
pop
daa
add
pop
add
out
add
push
and
imul
in
(bad)
mov
and
stc
adc
xor
xchg
fs
cmp
pushf
cdq
jb
arpl
fdiv
xchg
inc
and
test
sub
pop
nop
mov
lods
ror
gs
and
mov
mov
test
ror
psubq
cwde
imul
mov
add
and
cmp
xchg
out
and
inc
fs
jge
clc
push
sub
test
push
retf
cdq
in
cld
mov
(bad)
fwait
addr16
and
(bad)
out
icebp
dec
sbb
push
inc
movs
shl
adc
fild
jmp
lahf
shr
ins
rcl
not
jns
jecxz
adc
xor
and
inc
adc
fs
xchg
mov
lds
xchg
loop
clc
sub
outs
mov
pop
popf
pushf
jmp
and
std
sbb
fsubr
aam
mov
addr16
pop
retf
jge
cwde
sub
push
xchg
fdivr
into
and
xchg
xchg
test
mov
call
je
or
aad
xchg
aas
popa
jb
je
xor
push
mul
aas
jo
cmp
dec
cmps
aas
shr
(bad)
cmc
and
ret
dec
dec
imul
pop
retf
push
mov
push
inc
or
inc
add
out
mov
in
mov
ficomp
repz
xor
or
dec
pop
ins
pop
icebp
inc
pop
fidiv
ins
ret
jo
dec
repz
mov
sbb
and
cmp
std
mov
out
pop
dec
dec
cmp
lods
test
adc
(bad)
stos
cmp
into
add
shl
push
or
push
mov
aam
mov
in
js
sub
cdq
or
or
rcr
xor
cdq
ins
out
inc
add
ds
pusha
add
iret
lahf
cmp
adc
add
cmc
add
mov
cmp
test
push
ficom
xchg
in
into
dec
ja
sar
(bad)
cmp
push
icebp
call
push
fnstsw
sti
clc
sub
(bad)
mov
imul
call
test
cmps
std
jo
outs
int
mov
and
lea
outs
ss
pop
aad
jl
and
lds
inc
dec
repnz
sub
imul
ss
add
in
mov
sbb
aad
sbb
call
sbb
jg
adc
retf
mov
mov
test
dec
leave
bound
leave
mov
inc
stos
movs
test
(bad)
xlat
fcmovnu
div
fwait
cmc
add
mov
jae
push
mov
ss
jns
xchg
mov
cmova
daa
mov
jno
sti
arpl
push
aaa
jns
inc
jmp
aaa
push
bound
out
es
ss
push
lods
sub
lahf
pop
push
repnz
jne
lahf
jne
out
(bad)
push
cmps
rcl
add
sti
scas
cmps
(bad)
scas
fisttp
inc
xor
fwait
dec
fmulp
cli
push
stos
or
mov
out
neg
jns
aas
push
mov
sub
cs
mov
sahf
jbe
mov
call
jge
dec
retf
or
and
adc
add
jmp
push
or
ins
out
nop
sub
dec
xchg
cmps
ins
mov
rep
test
lea
repnz
nop
adc
xchg
xlat
loope
int
ja
dec
mov
ins
cmp
imul
jns
ins
(bad)
mov
xchg
jns
jb
and
fsubr
push
mov
mov
in
cmp
outs
data16
xor
jnp
test
mov
aam
bound
add
ror
and
adc
jo
xor
daa
shl
or
scas
sub
(bad)
dec
(bad)
in
dec
push
aaa
xchg
mov
pop
add
mov
push
xor
stos
fisubr
rcl
jmp
icebp
mov
cmps
xchg
stos
dec
dec
outs
xchg
fwait
cmp
sbb
xor
in
icebp
ins
mov
(bad)
add
data16
mov
add
frstor
das
imul
sub
fs
pop
jbe
inc
add
inc
xlat
leave
repnz
movs
test
cmp
or
outs
mov
je
pop
fs
stos
add
loop
mov
loopne
leave
push
pop
bnd
aas
inc
add
adc
test
push
repnz
xchg
cmp
leave
mov
repz
outs
je
arpl
gs
call
out
dec
or
jb
sbb
push
stos
test
pop
fs
xor
inc
jae
rol
inc
idiv
cld
jbe
mov
sub
loop
mov
sub
addr16
and
neg
dec
and
ret
lock
cmps
outs
(bad)
and
lock
jne
pop
jmp
jns
jmp
xchg
das
retf
pop
int3
fldcw
rcr
and
add
call
ins
mov
or
cmps
clc
mov
loope
inc
repnz
shl
cmp
aaa
jne
mov
and
dec
add
sub
dec
xor
xor
sub
hlt
push
push
sub
xchg
aas
push
retf
fadd
stos
and
(bad)
sub
jns
jmp
popa
fwait
sahf
sub
arpl
push
sbb
popa
xchg
or
retf
mov
xor
push
ficom
xor
xchg
call
pop
rol
xchg
loop
adc
inc
hlt
cmc
mov
fsubr
hlt
movs
xor
out
push
ss
loopne
sub
jns
retf
rcl
push
xor
div
popa
icebp
pop
enter
js
(bad)
in
test
(bad)
sbb
dec
ins
jns
mov
inc
fisubr
push
adc
push
or
mov
push
(bad)
or
mov
xchg
mov
and
(bad)
es
sub
push
std
movs
imul
push
xor
out
xor
xor
inc
lock
mov
inc
jne
popa
jo
push
enter
xchg
cmc
or
fcmovnu
(bad)
aas
sbb
mov
mov
imul
push
jecxz
mov
pop
and
ffree
xlat
xor
bound
std
adc
movs
(bad)
sbb
data16
push
popaw
sbb
jbe
inc
cld
xor
push
jle
push
stos
add
imul
xchg
stos
ja
test
jns
xor
jo
add
ins
(bad)
lods
xchg
dec
fdiv
nop
test
lea
mov
jae
hlt
mov
js
bound
cmp
daa
enter
or
or
(bad)
fiadd
pop
cmps
fisub
dec
xchg
cmp
pop
mov
xchg
scas
addr16
loopne
jmp
push
jns
push
nop
inc
sahf
inc
fisubr
mov
xor
push
cmp
data16
sub
push
sar
les
mov
sar
mov
push
aad
out
in
jge
xchg
mov
int3
lds
mov
pop
mov
aad
jbe
cdq
add
xchg
ret
xchg
ror
js
lea
mov
add
adc
(bad)
push
jno
push
(bad)
cmp
(bad)
cmps
mov
mov
pop
dec
stc
and
pop
pop
call
pop
hlt
fwait
ins
ret
or
aad
ds
mov
lahf
and
imul
aam
xchg
sti
fisub
(bad)
pop
test
icebp
fcomp
or
push
pop
std
sbb
cmp
(bad)
retf
in
fcom
xchg
fdiv
mov
ja
mov
pop
mov
into
mov
sti
stc
sub
ds
popf
push
fcomp
fs
sysenter
mov
push
sub
in
jnp
push
dec
adc
xchg
sbb
cmc
pop
pop
and
mov
push
out
popa
(bad)
xchg
(bad)
in
pop
push
xchg
fld
adc
push
jmp
sub
mov
and
outs
mov
push
xlat
or
and
jmp
retf
mov
adc
mov
arpl
lea
inc
pop
xor
xchg
add
popa
fst
xor
daa
retf
push
test
or
mov
xchg
ja
xchg
dec
data16
mov
out
push
jo
movs
popf
jmp
das
ficom
fcmovnbe
movs
setle
retf
lahf
popf
jle
(bad)
mov
pushf
jne
outs
ins
in
imul
add
rcl
lea
retf
mov
pushf
inc
or
xchg
call
fsub
or
int
sbb
mov
jmp
test
das
push
pop
movs
sub
dec
dec
mov
pop
xor
and
mov
jno
stos
xchg
mov
int
mov
fisub
adc
int
movs
mov
mov
push
outs
int3
mov
pop
lods
add
fs
pop
sbb
daa
ins
mov
mov
xchg
mov
clc
fld
shr
clc
push
mov
or
dec
stc
hlt
(bad)
push
push
cmps
daa
or
sbb
cmp
and
xor
and
nop
mov
out
(bad)
pop
mov
jmp
lods
iret
fstp
push
aaa
dec
sub
mov
cmps
lods
lds
inc
cld
lock
xor
movs
add
adc
add
outs
fidiv
call
mov
retf
lea
sti
cmc
popf
jno
pop
cmc
scas
inc
adc
adc
mov
mov
fdiv
mov
cmp
push
jne
add
mov
fdivr
(bad)
popa
cdq
ret
mov
bswap
ror
test
pop
dec
repz
pop
dec
and
xchg
mov
dec
test
dec
scas
sbb
das
(bad)
mov
hlt
jne
push
movs
mov
push
ja
retf
iret
aas
jbe
sub
sti
inc
mov
mov
out
bound
les
mov
sub
add
test
bound
ror
sbb
mov
cld
ss
mov
sbb
mov
sub
test
and
jecxz
iret
ret
ror
inc
adc
inc
clc
xchg
xor
aas
dec
adc
mov
into
mov
pop
ror
push
ret
movs
jmp
enter
sbb
fsub
dec
fcomp
cmp
xor
retf
xor
test
adc
es
fwait
sub
mov
sub
mov
imul
inc
mov
mov
das
in
xchg
jb
aam
mov
dec
call
dec
jp
jl
ror
fstp
push
or
mov
jmp
push
pop
stc
cmp
in
jb
daa
pop
test
cmps
(bad)
imul
push
pop
sub
add
mov
mov
or
sbb
mov
dec
mov
aad
ja
cwde
dec
not
cli
movs
cmp
pop
pop
ss
jno
mov
shl
(bad)
outs
mov
pop
adc
mov
sub
mov
inc
mov
mov
fldenv
fistp
sub
xchg
fldenv
add
ds
ins
jl
sub
jne
imul
jae
mov
adc
pop
dec
sub
xor
iret
jmp
mov
cs
dec
xchg
fcomp
rol
data16
dec
mov
scas
jge
sbb
pop
mov
or
adc
adc
mov
repnz
shr
mov
rcr
out
icebp
adc
add
(bad)
or
sbb
test
outs
arpl
jb
mov
test
fsub
neg
push
jae
mov
mov
je
gs
aad
mov
(bad)
faddp
icebp
stos
clc
je
les
shr
mov
loop
xor
es
fst
enter
push
add
aaa
icebp
mov
adc
pop
dec
inc
test
out
jae
jae
jae
cmp
jno
popa
sub
mov
in
repz
and
mov
mov
shl
fdivr
xor
fldcw
push
sti
fimul
jae
push
sub
mov
xor
cmp
pop
cdq
cmps
dec
inc
adc
sbb
dec
pop
out
lds
or
ins
pop
movs
mov
aam
fst
dec
fst
test
movs
adc
ror
test
push
ficom
mov
mov
xchg
inc
lea
pop
or
stc
xor
adc
or
and
fmul
pop
scas
icebp
add
daa
loope
sti
dec
rcr
cmp
adc
xlat
add
pop
xchg
sbb
mov
(bad)
stos
jno
sub
push
mov
(bad)
pop
in
mov
xchg
out
in
mov
cs
hlt
imul
sbb
push
inc
addr16
pop
cmp
clc
pop
xchg
mov
sbb
xor
test
dec
or
adc
(bad)
scas
jmp
(bad)
leave
jno
cmp
and
mov
inc
pop
xchg
mov
sbb
push
outs
or
aad
pop
clc
cmps
push
dec
fistp
adc
mov
mov
out
imul
adc
or
imul
inc
mov
push
inc
jns
fwait
cwde
fsub
add
in
sbb
cdq
arpl
push
jb
ins
push
and
sub
shl
imul
sti
xlat
pop
stc
mov
mov
and
aad
or
mov
xchg
dec
(bad)
mov
call
icebp
inc
ds
dec
mov
fsubr
popa
fdivr
jnp
push
cmp
test
and
mov
mov
mov
pop
int3
inc
add
fidiv
stos
jnp
popa
shl
outs
jl
ins
mov
mov
fldcw
push
jne
mov
dec
xchg
fcom
mov
adc
jge
pop
(bad)
call
lods
aam
mov
jmp
push
push
aaa
mov
inc
aam
push
les
pop
cwde
sub
push
and
cwde
cli
add
pop
cs
xchg
aas
and
test
mov
sbb
inc
inc
rcr
or
pop
arpl
mov
imul
mov
lock
pop
push
mov
int
xchg
jbe
push
aam
stos
popa
push
ror
add
jecxz
fnsave
pop
mov
sub
ret
loope
pop
test
pop
adc
aad
popf
out
mov
mov
in
movs
cmc
call
std
das
mov
aas
jno
adc
mov
and
test
data16
ret
pop
in
in
cmp
inc
sub
lock
or
popa
not
out
call
pop
inc
dec
in
mov
sbb
pop
adc
repnz
xchg
and
mov
or
push
jb
mov
xor
fsubr
add
test
mov
xlat
sbb
or
(bad)
jl
(bad)
jae
or
lds
jmp
test
ds
imul
hlt
adc
cmps
and
sahf
mov
sbb
push
(bad)
div
xchg
pop
aas
movs
jne
cmps
std
push
push
lods
mov
scas
pop
lock
push
shl
ds
pop
in
aas
mov
cdq
or
push
or
test
pushf
(bad)
mov
jle
push
out
or
adc
adc
lds
ja
leave
(bad)
out
fld
xor
movs
pop
xchg
das
shl
cmp
xchg
aad
in
pushf
push
xchg
and
inc
(bad)
js
jns
mov
mov
out
push
ja
pop
into
scas
cdq
jo
js
push
pop
sbb
pushf
(bad)
ror
push
iret
pop
mov
mov
sbb
(bad)
jns
push
or
pop
xor
inc
inc
int3
fldl2e
mov
mov
jo
jne
iret
push
sub
cmc
inc
call
stos
fdivr
inc
clc
fld
adc
cmp
ins
mov
xor
retf
jae
adc
arpl
jnp
pop
ja
adc
push
repnz
imul
das
xor
mov
call
xor
shl
push
mov
adc
adc
mov
test
xor
mov
dec
sahf
adc
leave
(bad)
pusha
rcr
neg
adc
mov
out
test
mov
sub
fidiv
push
xchg
xchg
out
movs
adc
(bad)
imul
clc
jecxz
mov
push
add
and
or
mov
test
(bad)
or
pop
test
mov
xor
mov
xor
seto
and
shr
add
xchg
mov
mov
push
mov
or
push
idiv
xlat
adc
cmps
push
(bad)
pop
neg
pop
inc
push
lods
sbb
je
fs
sub
ins
adc
pop
js
pushf
sub
and
daa
in
ret
lods
sysexit
sbb
sub
ins
sbb
pop
imul
sahf
cmp
sub
gs
mov
jns
test
and
pop
jns
cmps
daa
mov
cmps
imul
pushf
jns
push
imul
jae
push
aas
lods
xor
xchg
push
inc
and
mov
retf
movs
jmp
jmp
retf
mov
jge
and
mov
inc
mov
inc
call
cmp
clc
pop
iret
mov
xor
ret
xor
ret
mov
in
(bad)
dec
pop
xor
out
fldcw
or
fcomp
jbe
push
inc
jns
sub
fistp
(bad)
pushf
daa
xor
cwde
push
pop
add
lods
les
popa
adc
out
push
int
mov
inc
sbb
rcl
mov
adc
push
pop
fisubr
jbe
ins
nop
jg
jns
das
loope
(bad)
inc
sbb
sub
js
inc
cmps
xor
xor
in
cmps
mov
xchg
sbb
dec
cmps
jle
into
adc
mov
lods
mov
pop
imul
hlt
sub
fs
clc
inc
dec
dec
repz
mov
or
js
lock
jne
aam
xchg
jl
call
pop
daa
cmp
aam
movs
mov
mov
xchg
jecxz
xchg
jo
mov
cli
retf
ret
jo
test
lods
ss
dec
jns
cmp
push
jge
(bad)
addr16
je
mov
push
scas
and
sbb
mov
pop
or
add
inc
test
push
fistp
push
or
cmc
mov
aam
(bad)
mov
cmp
cmps
ret
adc
sti
popf
popf
jae
ins
pusha
mov
xor
loopne
rcr
popa
xor
jno
pop
mov
test
enter
or
mov
jmp
jge
test
pop
xlat
dec
or
xor
pop
pop
push
mov
(bad)
jmp
data16
cmps
aaa
imul
in
inc
and
(bad)
sub
cmp
dec
fisub
cmps
pop
mov
mov
sar
and
retf
stos
push
stc
outs
push
cmp
mov
shr
xchg
xchg
cld
jne
bound
xchg
jecxz
and
or
loop
lods
test
cli
add
mov
mov
mov
xor
mov
pop
lea
inc
xor
push
dec
daa
and
sbb
mov
out
fild
sti
pop
cmps
outs
push
xor
jmp
dec
adc
fneni(8087
xchg
xchg
sbb
test
daa
leave
in
cmc
les
in
loopne
icebp
mov
add
dec
xchg
cmp
pop
(bad)
or
dec
shl
cmps
mov
xor
push
cmp
mov
push
dec
scas
out
pop
loopne
dec
inc
jne
xchg
retf
aad
or
mov
das
cmp
call
pop
mov
repnz
add
cmp
pop
mov
add
dec
jl
pop
(bad)
mov
adc
jns
loop
aam
clc
icebp
pop
stos
shl
les
cdq
lds
adc
outs
movs
add
pushf
sti
sbb
xor
jmp
arpl
adc
jmp
cmp
mov
test
ror
mov
sbb
sbb
xchg
or
ret
push
jecxz
mov
into
or
push
popa
and
sub
mov
sub
pop
cmp
icebp
popa
cld
and
stos
pop
hlt
repz
mov
adc
bswap
fisub
dec
sub
ret
dec
iret
aad
out
lds
outs
cmc
rcr
out
pop
je
cwde
shl
jo
daa
jb
dec
cmp
repz
movs
add
push
mov
pop
push
pop
sub
and
dec
mov
ins
iret
ret
dec
out
xor
fwait
pop
pop
xor
pop
mov
xchg
gs
stos
push
lock
iret
cmp
xor
pop
test
sbb
rcl
mov
mov
inc
jp
popf
sub
(bad)
sbb
pop
in
cmps
jb
ja
cmp
pop
mov
ins
xor
call
push
fs
int
js
ret
mov
pop
(bad)
fnstsw
loopne
imul
out
dec
lods
push
jmp
ins
push
cmovl
ret
stc
push
or
(bad)
in
je
aaa
loope
test
xor
add
push
test
int3
and
adc
pop
add
push
gs
xlat
gs
(bad)
xchg
sub
pop
loopne
neg
add
lods
sbb
sbb
xchg
in
dec
movs
or
inc
loopne
add
sbb
in
ins
in
lea
and
lods
add
and
mov
sbb
add
fxtract
fwait
cmps
dec
mov
push
push
cld
push
dec
sbb
push
jmp
sbb
jg
jne
in
sub
loope
shr
or
xor
xor
(bad)
shr
test
mov
loop
ss
jecxz
cmc
test
mov
out
mov
sar
push
mov
fcmovbe
lods
in
and
dec
push
and
shl
sub
jmp
add
push
test
xchg
xchg
sub
fisttp
xor
push
and
mov
mov
jno
outs
(bad)
lock
movs
je
dec
push
(bad)
stc
adc
mov
jl
jne
sbb
data16
imul
xchg
mov
adc
push
and
jnp
test
movs
ds
dec
(bad)
mov
mov
(bad)
js
xor
dec
mov
imul
out
lock
out
(bad)
pushf
arpl
xchg
rcr
pusha
jbe
imul
or
dec
jns
mov
shl
push
(bad)
call
jbe
out
mov
std
add
xor
mov
addr16
jle
mov
adc
push
test
add
dec
mov
pop
in
nop
(bad)
(bad)
sub
aam
lea
out
xor
sub
xor
xchg
cs
ss
int3
push
xchg
jno
nop
fwait
das
cmp
leave
sbb
xor
xor
xor
mov
add
mov
loop
sub
mov
xor
mov
push
out
dec
leave
lds
xor
stos
lods
and
jecxz
call
stc
jo
pusha
aam
jle
test
lods
mov
cmp
je
loop
movs
sub
sub
jns
mov
out
dec
cmps
stos
sbb
jl
fwait
push
jo
or
in
mov
and
(bad)
jle
xchg
and
sbb
push
loopne
in
mov
pop
fimul
sub
mov
mov
nop
stc
mov
mov
fwait
loop
cdq
sbb
sbb
mov
inc
mov
xchg
or
icebp
js
xchg
pop
dec
pop
test
fisttp
xchg
rcl
out
stos
fnsave
movs
js
stos
push
mov
or
pop
js
xchg
in
xor
lea
mov
or
pushf
mov
nop
pop
inc
push
retf
out
sbb
loope
mov
adc
in
out
fcmovnbe
mov
outs
test
xor
mov
shl
daa
bound
pop
lock
pusha
js
(bad)
call
repnz
leave
xchg
enter
mov
inc
sub
mov
enter
pop
jno
aas
mov
xchg
xor
ret
scas
test
ss
mov
mov
hlt
xor
mov
cwde
scas
push
out
sub
mov
push
pop
jne
fld
and
xor
(bad)
mov
call
in
imul
jno
mov
mov
js
inc
daa
add
test
or
(bad)
mov
push
movs
arpl
or
xchg
and
adc
adc
retf
test
sti
xor
xlat
lods
dec
and
push
mov
sub
cmc
cmp
sbb
jno
iret
mov
lods
mov
jecxz
fiadd
imul
(bad)
les
dec
mov
xchg
test
popa
cmps
pop
dec
punpckhdq
mov
arpl
aas
add
jg
lahf
loope
in
outs
test
adc
jns
stos
stos
mov
jb
sbb
push
sbb
or
std
repnz
out
std
lds
jo
adc
xchg
popf
(bad)
ror
lock
xor
out
sub
icebp
mov
cmp
jnp
dec
daa
daa
leave
jne
out
clc
das
fild
mov
out
cld
ficom
add
idiv
dec
jle
mov
lods
inc
loopne
sbb
cmp
dec
mov
mov
gs
jle
xchg
cmp
xor
pop
repnz
bound
aad
icebp
cmc
mov
mov
inc
aam
cmp
fs
cmp
data16
sti
mov
mov
cld
mov
mov
xlat
aad
xor
or
or
(bad)
push
pop
push
and
smsw
test
inc
xor
arpl
inc
rcl
xor
stos
movs
neg
inc
ja
rcr
adc
fisttp
xor
mov
call
jle
sub
mov
mov
jbe
cwde
jl
popa
xor
mov
fistp
pop
std
mov
add
and
mov
cs
loope
xchg
xor
cmp
in
dec
and
pusha
or
imul
sub
icebp
pusha
mov
movd
pop
mov
add
jae
xchg
mov
hlt
add
(bad)
sbb
mov
ins
pop
add
xor
cld
bound
je
xchg
call
cmp
or
sbb
push
cli
jo
pop
sahf
xchg
arpl
cmp
xor
ret
ds
cmps
pop
cmps
mov
sbb
sbb
and
lahf
arpl
push
test
(bad)
loopne
mov
outs
adc
dec
jle
sbb
jp
xchg
(bad)
inc
shl
aad
xchg
cmp
aas
imul
hlt
and
mov
(bad)
sbb
in
jmp
jno
or
ds
push
std
jmp
and
icebp
xchg
and
push
or
jecxz
es
mov
jmp
jp
addr16
(bad)
test
or
test
sub
cmps
mov
add
int3
cmp
int
pop
out
xchg
jns
adc
xchg
and
dec
icebp
pop
js
addr16
fucomi
pushf
stc
fisubr
lea
cmp
inc
and
cdq
sahf
jno
or
pop
imul
loop
cmps
popa
adc
ret
and
jecxz
cmc
add
cld
stos
pop
sahf
ss
xlat
aad
xchg
mov
or
fcomp
sub
jl
lods
xor
fadd
mov
or
jp
inc
(bad)
dec
mov
push
frstor
das
mov
fsub
xchg
xor
adc
mov
inc
in
lahf
cs
push
and
fistp
mov
sbb
or
ins
sbb
adc
psrld
push
ds
ss
mov
jnp
jbe
fst
fwait
in
arpl
int3
mov
fs
ret
mov
sub
shl
mov
mov
mov
(bad)
adc
lea
(bad)
xor
or
pop
adc
leave
push
scas
mov
push
pop
loope
sti
adc
mov
lahf
pop
push
mov
in
push
and
fs
push
mov
movs
and
inc
sub
int
pushf
inc
inc
jle
iret
rcr
jb
sbb
pop
out
jmp
lahf
sub
loope
pop
daa
add
js
or
mov
ins
add
adc
mov
and
popa
pop
outs
out
lock
push
pop
cli
arpl
loop
mov
test
push
push
ins
lods
lds
dec
jmp
shl
adc
nop
fld
and
add
(bad)
es
sti
xchg
lock
(bad)
mov
ror
fbstp
push
or
lea
jne
leave
xchg
pop
retf
por
and
aad
inc
jge
cmp
mov
xor
ffree
push
mov
or
imul
push
test
retf
mov
test
push
and
cmc
inc
mov
pop
adc
jno
pop
or
sub
mov
test
mov
addr16
inc
cmp
sbb
icebp
aam
cwde
xchg
mov
mov
xchg
retf
in
jbe
outs
or
add
ja
sbb
jno
movs
in
nop
cmps
mov
je
hlt
dec
sub
cld
xor
dec
call
(bad)
in
lahf
mov
imul
call
push
test
lods
sub
dec
je
push
xor
mov
ret
cli
fistp
jle
xlat
dec
pop
cs
xchg
adc
and
sbb
jmp
fld
(bad)
cmp
cmp
fdivr
inc
inc
mov
inc
push
cmp
cmp
jp
fnstenv
retf
and
or
(bad)
pusha
scas
sub
add
xor
inc
es
or
in
mov
and
test
outs
gs
aad
hlt
cld
fisub
mov
sbb
xchg
pop
and
jne
pop
xor
inc
in
shl
(bad)
inc
adc
pop
and
daa
div
add
fdiv
jmp
pop
pop
cmp
cmps
(bad)
sbb
jbe
dec
dec
gs
xor
shr
sar
div
loope
add
jne
cli
std
mov
lods
jg
push
loopne
add
es
rcr
lock
mov
pop
mov
pop
out
cmps
adc
mov
mov
jg
sbb
inc
and
arpl
fs
dec
fimul
test
adc
mov
pop
pop
mov
inc
shl
inc
xchg
jae
das
arpl
cmp
pop
lea
call
loop
xlat
and
cmp
into
pop
cmp
mov
(bad)
(bad)
(bad)
dec
mov
inc
and
fnsave
xchg
xor
jl
or
mov
repnz
adc
sbb
sbb
inc
adc
and
mov
xchg
ret
inc
pop
jmp
retf
out
push
mov
cmps
jo
sub
ins
xchg
les
outs
cmp
jmp
into
outs
xchg
adc
sub
cdq
adc
sti
inc
and
push
dec
pushf
or
mov
mov
ss
mov
retf
lock
stos
scas
in
pop
int
dec
scas
out
cmps
and
xor
(bad)
popa
jg
jl
call
aas
retf
xor
fild
lahf
int3
icebp
call
mov
or
xchg
cdq
movs
and
push
xchg
add
fistp
movs
and
dec
(bad)
jge
cmp
test
fstp
adc
inc
mov
or
sub
adc
inc
mov
sbb
in
jbe
push
imul
or
retf
pop
not
xchg
test
outs
stos
lock
mov
jge
cs
ss
cmps
pop
es
push
mov
mov
shl
xchg
push
pop
hlt
mov
pusha
std
push
arpl
cmp
cmp
jmp
sahf
adc
ds
cld
adc
outs
xlat
mov
cmps
call
pop
mov
adc
ret
dec
push
push
mov
xlat
xor
in
int
push
mov
bound
xchg
fs
mov
xchg
inc
enter
pop
sub
adc
clc
pop
push
int3
push
sbb
popa
add
push
mov
sbb
inc
sahf
or
in
call
xchg
dec
xor
adc
push
mov
es
sub
xor
loopne
mov
mov
rcl
xchg
mov
adc
dec
loop
jp
in
call
sahf
arpl
and
movs
js
or
pop
mov
test
popf
xlat
cwde
aam
jb
lahf
xchg
add
add
sub
and
test
je
popa
cmps
dec
dec
and
popf
ret
mov
cmp
jno
xchg
test
retf
or
jae
stos
sub
xor
xchg
bound
mov
xchg
mov
fbld
ds
inc
outs
push
les
movs
fidiv
adc
test
fwait
stos
lahf
push
jne
aam
jbe
jg
(bad)
and
cmp
jnp
aaa
mov
nop
fsub
rcl
je
fisttp
push
push
les
lods
inc
dec
(bad)
(bad)
cmp
mov
aad
push
pop
push
jmp
rcr
or
xchg
adc
add
cmp
aad
nop
inc
lea
jmp
iret
imul
push
and
hlt
outs
jns
gs
aam
or
lahf
(bad)
loopne
dec
xchg
aas
jb
mov
out
(bad)
mov
shl
sub
dec
sbb
jb
inc
mov
jge
das
enter
test
sahf
cs
adc
mov
cs
xor
sbb
js
lahf
pop
cmp
mov
sbb
inc
pop
push
int3
mov
daa
retf
dec
fisubr
push
add
popa
lds
enter
xor
and
outs
and
hlt
pop
pushf
pop
sub
in
pop
jge
outs
(bad)
xor
push
dec
xchg
push
or
les
sbb
xchg
loopne
xchg
add
jmp
div
mov
pop
push
push
sahf
mov
(bad)
outs
scas
(bad)
repz
cdq
dec
sub
in
xor
scas
dec
in
fsub
mov
inc
popf
sub
xchg
mov
aad
dec
ss
pusha
mov
sub
(bad)
mov
pusha
jns
xor
aam
loopne
cdq
in
and
pushf
push
push
push
mov
pop
mov
sbb
pop
xor
xchg
fstp
mov
fcmove
sar
and
addr16
xchg
pop
shl
jmp
xchg
je
aas
idiv
cmp
ins
(bad)
xchg
rcl
popa
and
xchg
sub
cmps
adc
adc
enter
push
adc
xchg
xchg
add
cmps
push
pop
fist
xor
and
in
dec
ss
std
div
or
pop
fnstsw
mov
ins
dec
dec
xor
(bad)
lahf
xchg
inc
jb
ss
pop
xor
and
or
out
pop
xor
icebp
fmul
sbb
sahf
jmp
sar
jmp
cs
loope
in
mov
data16
xchg
pushf
imul
mov
fist
iret
lock
imul
push
xchg
aas
or
jbe
fwait
or
jmp
pop
and
xor
mov
into
cdq
rcr
xor
sub
and
dec
jge
mov
cwde
fcomi
aad
imul
mov
sub
jmp
int3
lea
sbb
(bad)
lea
ror
std
ds
mov
mov
(bad)
jg
sbb
(bad)
call
call
andnps
xchg
or
mov
or
or
aam
inc
dec
arpl
shl
dec
dec
jp
cmps
rcr
inc
add
dec
sbb
adc
or
mov
and
cmp
jmp
sub
pop
das
cld
sub
xchg
cmp
cdq
cmps
xor
push
or
scas
pop
cld
and
mov
retf
cmp
cmp
xor
inc
mov
sbb
xchg
fs
out
ins
dec
(bad)
xchg
xlat
xchg
mov
push
ins
adc
sbb
sub
jo
lods
mov
sahf
mov
cmps
lea
sub
lods
aaa
push
mov
fst
mov
inc
xchg
hlt
outs
dec
ins
(bad)
jnp
in
push
cmp
mov
add
cmps
mov
das
bound
ss
add
mov
imul
jle
test
mov
mov
jge
push
dec
stc
in
dec
outs
xchg
ret
sahf
(bad)
inc
je
add
mov
sar
sub
dec
mul
scas
add
cdq
xchg
fcomp
aad
fidiv
inc
cld
pushf
or
ins
and
stos
nop
mov
retf
adc
ds
in
push
dec
cwd
setbe
popa
in
call
sub
mov
ffreep
inc
fsub
add
ja
inc
std
pop
cdq
stos
mov
loope
dec
cmp
movs
pop
dec
or
add
xor
push
es
dec
jnp
mov
mov
mov
add
jecxz
jnp
ins
mov
cld
loopne
cdq
repz
int
repnz
iret
jbe
jbe
fbstp
gs
sbb
cld
icebp
jge
test
inc
cmp
lahf
dec
nop
clc
pop
repnz
jmp
enter
cmp
xchg
sahf
std
pop
mov
mov
push
sbb
mov
push
inc
pop
cs
cs
lock
loop
ins
jp
rcl
int
scas
mov
in
mov
adc
sbb
popa
stos
movs
pop
imul
add
dec
das
mov
imul
jg
push
test
pop
add
gs
cli
stos
fcom
test
pop
adc
sub
adc
pop
push
cmps
xor
xor
call
adc
dec
lock
adc
xor
push
jns
mov
in
arpl
rcl
ja
enter
repnz
or
sbb
add
mov
aad
and
push
add
imul
mov
out
imul
push
xor
test
xor
mov
sahf
push
pop
in
cs
pushf
cmps
add
std
jmp
iret
mul
pop
xlat
aam
and
out
add
adc
mov
add
inc
sahf
fist
xor
pop
mov
jp
(bad)
jbe
inc
push
sub
leave
cmp
call
addr16
outs
pop
or
ror
mov
dec
push
stos
mul
ja
mov
and
push
and
lahf
in
sub
mov
push
cdq
icebp
repnz
and
push
add
rcr
iret
inc
push
push
or
sbb
add
push
(bad)
push
popf
enter
ins
movs
popa
fisttp
mov
xchg
or
sbb
popa
into
xlat
cli
adc
addr16
data16
dec
test
(bad)
push
mov
xchg
outs
iret
cmps
pop
stos
jp
xchg
iret
or
jmp
jns
sub
lds
push
pop
fstp
sub
pcmpgtd
ret
inc
cmp
gs
push
outs
sub
jge
or
mov
push
fisttp
pop
int
pop
cmp
and
xor
mov
jo
dec
mov
inc
mov
pusha
into
dec
and
mov
iret
mov
ja
xlat
xor
xchg
retf
inc
dec
mov
cld
ret
int
pop
jae
dec
pop
jbe
xchg
pop
test
jo
cmp
nop
fs
push
sar
inc
cmp
and
mov
mov
gs
inc
push
pushf
adc
leave
ret
outs
dec
pop
in
mov
and
sub
adc
lahf
inc
push
test
push
test
mov
aam
daa
gs
test
lahf
xchg
out
in
stc
fcomp
dec
cmp
or
adc
push
or
rcl
and
mov
shr
lea
push
adc
addr16
mov
fsubp
mov
pushf
in
pushf
mov
and
fdivr
scas
mov
fild
mov
ror
pop
and
mov
jo
xchg
inc
inc
lahf
add
sbb
mov
cmp
enter
adc
push
jmp
adc
jecxz
xchg
push
jb
push
popa
bound
fcom
scas
mov
inc
pop
enter
call
test
or
in
repnz
test
xchg
add
dec
cld
pusha
cmp
jo
rcr
movs
mov
xchg
jno
jo
jb
cmp
jnp
rcl
ins
daa
vaddsubps
add
sub
in
cli
add
in
sub
nop
lods
cwde
shr
popa
lahf
gs
push
push
add
(bad)
es
fstp
aad
xchg
bound
sub
sbb
stc
aad
repnz
add
out
test
pop
push
jle
inc
fisttp
arpl
faddp
cmps
and
add
mov
cwde
jmp
arpl
fimul
sar
push
in
scas
pusha
mov
xor
push
(bad)
mov
cs
inc
in
test
loopne
cmp
es
xchg
mov
out
inc
fs
out
(bad)
shl
and
mov
cmc
sub
out
ret
mov
pop
mov
dec
inc
enter
sbb
pop
or
loop
pop
xor
push
pop
xchg
leave
outs
jne
jbe
cmp
fwait
mov
xor
pop
cmps
cmp
and
jl
xor
mov
jg
enter
or
jmp
jbe
mov
pop
scas
call
push
sub
sbb
jg
adc
dec
setle
out
movs
sbb
inc
sbb
cli
addr16
mov
add
sub
jmp
sbb
hlt
ja
adc
mov
(bad)
scas
mov
pop
repz
jae
fadd
xchg
shl
lds
gs
aad
cwde
out
iret
cmps
mov
hlt
fdiv
jnp
adc
out
mov
mov
mov
and
pop
jnp
fldcw
push
mov
jnp
jg
cmp
stc
cmp
aaa
or
int3
or
adc
mov
call
inc
icebp
push
bound
mov
movs
mov
rol
push
test
or
mov
loop
or
push
sub
adc
push
xchg
mov
repz
sub
int
mov
xchg
fwait
or
jbe
push
add
xchg
rol
inc
mov
jp
dec
lds
or
push
adc
mov
retf
shr
jmp
sbb
inc
popf
lods
xchg
or
xchg
es
loop
out
les
xor
aas
gs
lds
int3
xor
aad
xchg
enter
mov
pop
pop
cwde
lds
fmul
adc
test
mov
lahf
xor
adc
in
pop
mov
mov
(bad)
int3
cmp
pop
pop
jnp
add
sub
jb
scas
test
aad
mov
xchg
int
push
xchg
data16
xchg
lahf
fild
mov
test
adc
or
pushw
lea
lds
fwait
ins
stos
sbb
sub
jo
push
in
xchg
cmps
movs
sti
xchg
xchg
lds
test
js
pop
jo
outs
arpl
aam
push
movs
mov
jne
cwde
push
int
call
push
push
sub
call
imul
adc
movs
ss
dec
or
lahf
mov
add
sbb
mov
push
mov
dec
mov
jp
repnz
in
pop
test
sti
sub
adc
cmp
mov
push
int3
pop
nop
test
outs
sbb
push
mov
ja
movs
add
jecxz
push
aad
mov
in
xor
push
mov
xor
cwde
cmps
test
xchg
lds
cmp
mov
mov
iret
imul
movs
data16
data16
stos
lahf
dec
jne
cld
pusha
neg
xchg
stos
xor
mov
xor
idiv
dec
out
(bad)
add
jg
mov
push
out
inc
and
(bad)
sbb
ins
ret
add
push
movs
inc
cwde
out
mov
mov
out
jge
sar
cmp
mov
pop
xor
cli
adc
ins
mov
mov
inc
sbb
in
into
or
adc
cmps
lds
or
pop
inc
fadd
sbb
cmc
mov
push
mov
repnz
mov
sub
js
jl
(bad)
jle
jp
sbb
and
or
nop
dec
aas
hlt
addr16
test
xor
(bad)
sub
inc
add
pop
fild
arpl
fld
adc
or
cmps
push
out
ss
dec
push
sti
(bad)
inc
add
dec
outs
jecxz
mov
push
call
xchg
xchg
cs
imul
int3
call
mov
fwait
out
sbb
push
sbb
call
push
shl
dec
mov
scas
repz
daa
adc
fsubr
gs
sub
shr
sub
in
sub
add
ror
or
add
add
(bad)
ret
adc
cmps
and
inc
imul
aam
das
cwde
sub
add
popa
cs
add
test
and
test
push
ret
inc
or
and
bound
mov
lods
pushf
or
push
jmp
xchg
mov
mov
cmp
xchg
xchg
popa
and
jle
sbb
stos
jmp
clc
xchg
fcom
inc
sbb
xchg
cli
add
pop
inc
fbld
lock
movs
out
inc
call
dec
jmp
shr
in
fisubr
dec
mov
xlat
cmp
cld
jns
gs
xor
mov
mov
in
cmp
xchg
ficomp
test
fsubr
adc
or
cld
scas
xor
adc
pop
and
cmps
ins
jno
dec
dec
scas
enter
arpl
lods
sub
lods
mov
ret
mov
mov
push
jne
inc
xor
push
push
(bad)
adc
cmps
xchg
fbld
(bad)
adc
inc
adc
int
outs
pop
imul
push
retf
xchg
faddp
fidivr
mov
pop
out
push
xchg
xchg
clc
cmp
xor
inc
mov
inc
loopne
mov
add
add
push
sub
mov
mov
rcr
add
mov
imul
and
fidivr
(bad)
push
mov
(bad)
stc
add
xchg
out
mov
movs
jmp
xor
mov
les
call
cwde
imul
(bad)
repz
test
mov
movs
sbb
jae
mov
test
jne
rcl
or
test
fcom
std
dec
cmps
jmp
pop
cmp
clc
mov
cmp
push
pop
inc
out
outs
or
push
sar
and
nop
jno
sub
push
cmps
das
xchg
movs
or
movs
cmc
sbb
pusha
jmp
repnz
dec
pop
ret
cmp
test
and
sub
sub
aaa
adc
jmp
mov
push
sub
cmp
jae
movs
gs
xchg
mov
inc
test
in
ror
dec
mov
aad
outs
pop
inc
inc
retf
aas
xchg
or
inc
jns
and
sub
jp
gs
ret
or
fs
cmp
pop
lds
mov
out
mov
dec
int3
out
fild
mov
loop
xor
pop
and
movs
outs
popa
xchg
add
scas
or
lea
ret
mov
xchg
adc
pop
stos
(bad)
and
stc
int
imul
mov
sub
sbb
push
mov
dec
add
imul
pop
xchg
push
or
dec
dec
(bad)
movs
es
outs
pop
mov
outs
lea
in
or
xchg
ret
pop
xor
les
jmp
pop
xlat
(bad)
loop
mov
scas
cmc
jp
and
data16
ds
mov
mov
cld
mov
push
jle
add
sbb
push
call
add
mov
push
pop
sbb
mov
jl
xor
dec
data16
or
mov
and
adc
mov
xor
push
pop
or
cmps
and
jne
cmp
or
test
retf
ins
dec
jecxz
imul
sub
mov
aad
enter
mov
nop
(bad)
cs
lods
jo
jecxz
stos
adc
stc
push
int
inc
push
or
arpl
repnz
jo
jbe
mov
mov
pushf
sbb
repz
popf
int
movs
add
pop
dec
mov
push
imul
test
pop
mov
adc
fadd
jmp
out
outs
push
loopne
pop
add
jnp
adc
iret
(bad)
cmp
aaa
loop
fild
add
or
inc
push
nop
imul
sub
xchg
mov
push
inc
push
enter
popf
pop
and
push
adc
ds
mov
jle
ret
std
xchg
aas
cmp
fdivr
pop
daa
cs
test
mov
sub
jo
mov
adc
xchg
adc
lahf
out
out
and
mov
sbb
inc
ins
mov
push
add
fwait
mov
rol
xor
jge
test
dec
xor
fcomi
mov
and
mov
xor
fmul
adc
inc
cli
xchg
mov
or
cmp
pop
inc
and
ror
xchg
sub
jne
neg
fadd
iret
or
nop
fld
out
dec
xchg
push
retf
je
retf
popaw
das
aad
adc
sub
xchg
int
adc
inc
sbb
mov
mov
(bad)
out
push
push
mov
xor
adc
inc
add
in
inc
cmp
add
lods
iret
dec
mov
shl
adc
imul
(bad)
mov
mov
xchg
outs
dec
outs
pushf
pop
mov
jl
js
jmp
cmp
les
xor
and
adc
imul
ret
pushf
add
push
xor
ja
inc
cmp
mov
cmp
gs
fs
jns
loope
jmp
lock
fistp
adc
mov
xchg
ss
inc
out
ins
icebp
or
jge
lods
fs
inc
mov
add
pop
ret
shl
add
or
mov
cmp
es
dec
(bad)
cmc
xlat
jne
pop
mov
dec
adc
xor
xchg
shl
and
xor
pusha
mov
loopne
stos
pushf
and
out
test
fs
inc
fldcw
fldlg2
out
add
sbb
(bad)
ss
jle
gs
fdivp
mov
ror
xchg
xchg
pop
or
(bad)
pop
mov
mov
inc
push
pop
add
sbb
cmps
leave
pop
repz
sub
mov
call
and
pusha
hlt
jmp
inc
push
adc
mov
xor
icebp
jns
xchg
ror
daa
xchg
mov
mov
and
jns
stos
in
mov
pop
lods
xor
inc
sbb
dec
out
jmp
aaa
sub
test
lahf
mov
dec
mov
lods
cwde
or
dec
cld
adc
loop
push
or
lds
movs
mov
retf
mov
call
ins
lahf
jo
mov
dec
xor
test
sbb
hlt
sub
push
pop
push
outs
mov
or
(bad)
gs
dec
jge
lods
in
imul
mov
cmp
or
mov
repnz
mov
ret
cld
adc
gs
mov
inc
enter
cld
adc
lods
mov
shr
inc
cli
mov
loop
pop
push
enter
fucomp
aaa
pop
adc
add
adc
into
dec
dec
in
jnp
repz
test
daa
xchg
sub
pop
inc
and
sub
sub
jnp
cmp
aas
enter
je
stos
jecxz
sbb
mov
xor
and
push
mov
xchg
and
cmp
xchg
call
add
fwait
mov
cmp
inc
adc
arpl
outs
mov
jp
mov
mov
in
or
(bad)
dec
repnz
ins
imul
mov
sub
jle
inc
sub
ficom
nop
mov
ins
stos
cld
sub
ja
mov
push
dec
sahf
out
jnp
push
dec
shr
xor
inc
dec
jmp
xlat
cmp
iret
cmp
fcomp
mul
cmp
enter
mov
jo
pusha
dec
je
sub
jmp
fist
add
icebp
cwde
adc
mov
call
fadd
dec
add
jmp
mov
push
xor
fisttp
fwait
cmps
call
cmc
push
ins
call
pop
mov
fwait
pop
in
cmp
sbb
and
das
shl
push
xchg
call
mov
mov
sub
pop
iret
out
daa
(bad)
gs
cmp
mov
rcl
jmp
hlt
push
mov
add
sbb
rol
xchg
dec
mov
xchg
jle
sub
xchg
stc
xchg
xor
in
out
add
jb
in
outs
out
adc
inc
test
lds
or
pop
imul
pop
stc
jb
dec
shl
sub
cmp
jl
add
stc
das
sub
mov
jmp
push
out
mov
lahf
inc
int3
inc
adc
inc
mov
xchg
outs
adc
mov
inc
sub
ror
mov
stos
lock
jae
adc
xor
popw
(bad)
sti
(bad)
out
sbb
iret
popa
mov
mov
mov
out
sub
stc
sbb
inc
pandn
cmp
jne
test
mov
nop
dec
data16
mov
cs
lea
or
jecxz
fistp
fsub
hlt
mov
mov
dec
shr
scas
repz
mov
fdiv
js
rcl
lock
pop
jb
bound
push
add
inc
in
cdq
(bad)
cld
dec
sub
inc
(bad)
xchg
fstp
jle
pandn
pop
test
test
int3
or
test
xchg
xchg
jmp
popa
test
repz
cmp
fstp
aaa
call
dec
(bad)
ja
jne
adc
and
cld
pop
stos
push
sbb
mov
or
out
das
dec
addr16
out
mov
lods
aaa
adc
jge
push
jmp
pop
test
xor
shl
retf
stos
outs
lahf
xor
ds
out
push
mov
push
mov
dec
test
sbb
in
repz
jg
jle
(bad)
(bad)
mov
pusha
leave
jb
pop
mov
xor
xchg
mov
sysenter
adc
out
and
cmp
dec
mov
repz
retf
push
in
imul
fadd
retf
ret
ja
add
lock
js
fbstp
das
div
jae
je
xchg
sub
test
int3
add
iret
inc
jb
cmp
inc
(bad)
xchg
fwait
lds
or
and
cmps
jno
cdq
xchg
enter
xor
mov
fcom
int
sbb
sub
mov
in
push
es
imul
xchg
loope
pop
add
or
pop
ret
jo
mov
rcl
imul
stos
out
inc
cmp
cmp
xor
or
bsr
(bad)
shr
inc
cmp
mov
sbb
adc
inc
loop
call
movs
int3
jae
mov
lds
pusha
dec
ins
xor
push
xor
sub
or
inc
in
fdivr
mov
fld
sar
(bad)
cmp
xlat
xor
cmp
mov
outs
inc
mov
inc
push
xchg
xor
test
mov
(bad)
fbstp
loopne
les
push
sub
ret
mov
mov
push
stos
pop
push
xor
cmp
aad
xlat
dec
mov
and
shl
cmp
lea
mov
lea
sub
push
xchg
dec
pand
cwde
jnp
ja
sub
mov
lock
ret
dec
ficomp
mov
scas
addr16
sbb
mov
movaps
(bad)
cli
mov
xlat
(bad)
mov
mov
cdq
ffree
lods
dec
leave
mov
jmp
inc
xchg
mov
lods
cmp
xchg
cs
movs
ficom
dec
xlat
fcmovu
pop
lds
(bad)
(bad)
mov
in
loop
popf
cwde
jns
repnz
(bad)
pop
push
mov
pop
sub
xor
jmp
sbb
cmp
mov
dec
mov
dec
cld
xchg
and
ret
fldenv
and
ror
cmp
jmp
pop
mov
dec
retf
call
ins
or
xor
and
push
dec
(bad)
in
add
dec
pusha
mov
push
pop
aaa
jmp
leave
sbb
sbb
push
aas
mov
and
sbb
jmp
int3
mov
arpl
mov
into
shr
push
in
stos
dec
push
inc
shl
inc
ret
cmps
in
and
or
ret
(bad)
mov
ins
fisttp
icebp
sub
ja
adc
nop
aaa
imul
rol
mov
adc
jae
mov
push
shl
test
mov
call
dec
mov
sbb
(bad)
outs
jnp
dec
loope
and
adc
xor
jl
rcr
js
cmps
inc
ins
cmp
push
fdivr
push
and
aas
repnz
(bad)
call
push
or
mov
(bad)
iret
pushf
imul
inc
pop
lock
jl
xor
std
pushf
gs
xchg
ja
push
sahf
retf
and
bound
ins
in
pop
push
inc
cmps
cli
pop
or
mov
movs
dec
daa
inc
xchg
inc
mov
jmp
arpl
push
sbb
add
jle
cmps
mov
(bad)
mov
mov
lods
mov
pop
adc
push
cmps
inc
add
stos
out
pop
push
sub
pop
inc
ret
retf
(bad)
cmp
ins
jmp
fcmovbe
jns
xor
inc
(bad)
popf
mov
add
jnp
jno
scas
add
add
test
loopne
sar
stos
call
fmul
inc
cmp
fcos
pop
push
push
mov
loop
fmul
xchg
mov
xchg
inc
pop
mov
mov
cmp
(bad)
fsubr
fbstp
mov
mov
mov
jno
fild
mov
cmp
add
retf
xor
ja
jo
rol
emms
pusha
inc
test
pop
xor
push
jb
jle
sbb
int
outs
add
sub
sub
sub
or
sbb
add
mov
(bad)
out
mov
mov
mov
pop
pop
xchg
mov
jo
ins
lea
in
pop
repz
bound
xchg
mov
sub
mov
dec
xchg
xchg
add
push
(bad)
xlat
xor
sbb
push
pop
add
fimul
sub
pop
fidiv
xlat
push
dec
js
daa
inc
mov
cmp
push
push
inc
jmp
xchg
dec
test
mov
jl
sub
jl
sub
js
pop
nop
repnz
les
pop
das
mov
or
pop
lahf
xchg
aas
jge
pop
pop
mov
adc
(bad)
(bad)
(bad)
and
movs
pop
or
pushf
stc
jg
jne
test
cmp
sub
cmp
icebp
in
mov
push
xor
jno
dec
mov
inc
push
or
lods
jb
lock
jbe
add
das
pop
icebp
adc
add
rsqrtps
fs
retf
repz
test
push
or
dec
pop
pusha
mov
xchg
jnp
data16
dec
sar
inc
out
aas
xor
enter
dec
ror
push
mov
sub
add
dec
xlat
mov
mov
ds
das
mov
or
cmp
xor
outs
(bad)
mov
into
push
push
(bad)
js
sbb
jo
shl
fimul
inc
add
add
inc
out
add
and
pop
popf
or
scas
inc
ret
sbb
sub
mov
xor
jae
lahf
pusha
mov
(bad)
cmps
xchg
push
push
ins
ror
mov
push
mov
les
mov
add
cmp
hlt
pop
and
fnstenv
push
xchg
cmp
mov
xchg
or
jnp
fldcw
push
push
or
xchg
jns
icebp
jg
or
push
out
aad
ss
shl
jp
(bad)
push
dec
pop
and
sbb
push
cmc
and
call
test
xchg
mov
mov
lods
pop
cwde
sahf
xor
daa
mov
mov
sar
jnp
jnp
jno
in
add
xor
cld
or
add
push
ror
or
sub
lods
cmp
je
and
enter
and
adc
aas
retf
pop
mov
movs
sbb
cmp
sub
clc
mov
cdq
lea
or
ror
sub
pushf
cmps
xor
cmp
jae
call
mov
out
in
icebp
xor
sbb
inc
arpl
add
cmp
adc
dec
sar
cmps
test
pop
scas
add
(bad)
icebp
mov
xor
popf
je
retf
add
inc
loop
(bad)
xor
popf
das
aam
add
sbb
cmps
loope
push
lock
cli
pushf
add
popf
fmul
xor
xor
inc
mov
mov
aas
outs
jno
push
mov
mov
ror
lds
(bad)
mov
popa
mov
mov
stc
add
mov
mov
mov
fcomp
or
add
mov
mov
call
add
gs
ins
jb
jmp
nop
xor
lods
pop
adc
fstp
mov
inc
in
xor
rcl
je
gs
lods
mov
add
in
dec
mov
jecxz
adc
or
jmp
pop
mov
cwde
jl
add
sub
dec
ss
punpcklbw
std
jl
std
shl
push
out
xlat
aaa
scas
add
lock
xchg
jno
pop
jae
arpl
(bad)
scas
and
(bad)
std
sbb
mov
das
or
aaa
test
ret
push
mov
inc
cs
ja
loopne
ds
arpl
mul
aaa
nop
call
jl
in
stos
lds
or
add
mov
loopne
nop
sub
shl
stos
mov
inc
outs
add
mov
sbb
pop
ror
cs
xor
push
xor
(bad)
aad
retf
mov
push
xchg
cmp
fnstenv
test
push
mov
shr
inc
pop
std
mov
sbb
sub
mov
xchg
loopne
clc
xor
pop
inc
mov
cdq
sub
enter
and
retf
add
outs
out
pushf
mov
gs
sahf
rol
sbb
mov
dec
in
nop
pop
je
fs
inc
mov
sbb
mov
fild
jle
xchg
add
xlat
mov
mov
inc
mov
add
rcr
push
xchg
hlt
cmp
and
mov
ds
push
mov
fisub
push
movs
and
out
jp
(bad)
daa
mov
sar
ret
xor
jo
cmp
dec
xor
jle
movs
outs
mov
idiv
es
inc
or
stos
jns
push
call
nop
imul
not
inc
mov
in
addr16
lods
mov
scas
out
sbb
out
sub
dec
std
shr
repnz
mov
mov
ins
stc
mov
jp
dec
test
icebp
movs
test
dec
and
sti
sbb
xchg
add
adc
sub
hlt
(bad)
adc
in
add
test
pop
jecxz
jmp
lahf
lea
pop
jns
push
push
(bad)
icebp
(bad)
outs
in
clc
pusha
imul
jno
xor
int
jnp
or
mov
out
sub
je
in
nop
imul
cmp
sbb
sub
mov
dec
mov
mov
lock
inc
adc
sbb
sub
push
ret
imul
jno
pop
fwait
mov
idiv
cmps
in
outs
sub
push
les
dec
push
jle
mov
xor
jbe
ss
or
push
mov
loopne
pop
adc
test
push
lahf
and
into
fwait
xchg
fcmovne
fwait
inc
jle
fiadd
int3
xor
adc
leave
inc
into
cld
sub
sbb
nop
pop
and
ss
cmp
sbb
xor
xor
sbb
xchg
sbb
sub
in
cmps
fiadd
mov
or
sbb
pop
lea
or
jns
cwde
cmp
push
xchg
jno
test
loopne
and
lahf
add
sub
lahf
mov
lds
xor
fld
loope
(bad)
mov
adc
jb
mov
fisttp
int
pushf
mov
lahf
retf
mov
movs
add
aaa
lock
clc
inc
scas
dec
xchg
sbb
rcl
in
inc
xor
inc
adc
fist
cmp
cmp
fs
dec
mov
test
push
les
jl
sub
lahf
or
and
mov
sbb
or
je
pop
xchg
jmp
cmps
in
aaa
retf
pop
or
fnstcw
lds
jg
sub
mov
push
jb
dec
std
mov
jmp
shl
jmp
pop
mov
lods
je
sbb
fdivrp
cmp
jecxz
into
cmc
mov
ficomp
das
add
jno
retf
xor
mov
sbb
pop
imul
icebp
pop
std
mov
call
mov
dec
cs
jo
clc
lock
and
xlat
xor
push
in
xchg
fwait
outs
test
cdq
retf
or
sbb
jle
in
fcomp
xchg
in
stos
cmp
adc
adc
xchg
enter
or
xor
outs
pop
jns
fstp
(bad)
sti
jbe
sbb
rcr
sbb
jmp
fild
adc
xchg
mov
and
dec
mov
(bad)
push
in
jmp
sbb
popf
ret
pop
fmul
inc
cmps
aad
cmp
jo
test
ror
lock
inc
xchg
push
cmp
cmp
sahf
pop
cdq
xchg
push
xchg
jge
sti
sub
cmp
je
lahf
sub
cmp
fisttp
mov
mov
scas
(bad)
neg
rol
les
sbb
jecxz
mov
mov
scas
movs
ret
jge
push
ficomp
mov
rol
lock
cmps
ror
arpl
popf
outs
popf
jge
imul
in
mov
jp
fmulp
adc
rcr
fdivr
push
mov
ror
cld
pop
imul
inc
xlat
shl
pusha
in
int
(bad)
push
aaa
xor
adc
mov
movs
repz
test
mov
out
icebp
mov
mov
outs
and
dec
pop
loop
stc
mov
das
es
gs
dec
jbe
mov
sbb
fstp
cwde
or
ret
xchg
mov
sub
aaa
push
scas
mov
sti
jae
movs
je
jmp
push
dec
fisttp
cmp
(bad)
cli
sbb
and
mov
(bad)
stos
inc
std
arpl
test
sar
aaa
push
pop
cwde
add
xor
call
jp
inc
mov
cmp
cmc
ins
inc
or
cmp
jecxz
fisub
mov
fild
pop
or
jl
cld
sbb
or
push
add
dec
cmp
mov
loop
add
lock
fidiv
(bad)
hlt
ds
aam
sub
scas
fcmovu
mov
jno
inc
mov
inc
pop
nop
(bad)
push
xor
repnz
or
div
out
push
ret
add
fbld
mov
dec
sti
mov
sub
test
pop
mov
bound
mov
mov
cmp
xor
movs
mov
or
inc
retf
(bad)
les
and
call
int3
jae
outs
or
inc
or
(bad)
sub
dec
pop
inc
dec
mov
adc
sti
add
add
sbb
add
add
xor
cmp
sti
addr16
jl
sub
mov
pop
lahf
push
xchg
or
int3
and
sbb
push
popa
rcl
inc
daa
stos
(bad)
cmp
or
ret
(bad)
enter
shl
dec
ja
mov
lea
out
ds
jp
ret
inc
loopne
adc
mov
jmp
adc
dec
(bad)
mov
inc
imul
pop
fsubr
js
test
loope
hlt
cli
je
pusha
adc
push
je
jle
es
test
xchg
ja
iret
adc
call
outs
add
jmp
mov
sbb
lock
js
pop
pop
sub
mov
inc
push
test
jmp
hlt
sub
fmul
dec
adc
xor
ins
jg
mov
push
div
xor
dec
jnp
and
in
xchg
mov
inc
out
jb
imul
mov
xchg
xor
inc
mov
ret
or
mov
add
mov
repz
push
xchg
adc
push
stos
mov
push
dec
repz
rcr
add
adc
js
sti
lahf
cmp
sbb
ret
xlat
fwait
repnz
inc
ret
out
mov
mov
mov
loopne
jne
mov
pop
stos
adc
jmp
jns
lahf
dec
aad
sti
mov
xchg
mov
movs
cwde
pusha
test
cmps
mov
push
das
aad
xchg
jb
or
mov
int
out
mov
icebp
nop
lods
push
xor
fwait
retw
inc
pop
into
test
fs
and
add
pop
inc
sub
cmps
nop
push
loope
xor
rcl
push
dec
test
rcl
add
mov
dec
test
and
add
dec
cwde
aas
movs
push
or
jecxz
cmp
aam
call
push
inc
mov
inc
jg
fwait
push
mov
call
ret
movs
add
js
or
gs
sbb
push
jnp
int3
test
sbb
out
fnstcw
jmp
mov
xor
xchg
mov
movs
mov
and
push
mov
es
ins
pop
rcr
mov
repz
push
or
(bad)
jle
(bad)
and
in
std
adc
pushf
jb
dec
shl
xchg
push
ret
imul
aad
xchg
in
aam
mov
pushf
push
mov
mov
push
jg
aam
and
mov
lock
push
ss
js
or
add
(bad)
xor
aad
test
xchg
fwait
fwait
repnz
cmp
popa
or
jmp
(bad)
lock
scas
jmp
sub
adc
xchg
xchg
out
adc
pop
ins
add
lds
sahf
test
ror
cmc
ins
aam
mov
gs
dec
jmp
in
mov
mov
jmp
nop
outs
in
xchg
ds
jge
and
mov
push
push
movs
mov
adc
(bad)
xchg
push
addr16
loope
clc
jae
pusha
hlt
ror
pop
popf
arpl
cmp
xchg
push
cmps
call
out
xchg
scas
and
jbe
scas
mov
dec
mov
stos
xchg
jle
mov
and
mov
mov
(bad)
pop
fimul
adc
ss
sub
cmp
not
adc
xchg
out
fidiv
mov
xchg
adc
shr
mov
sub
movs
xor
cmp
sbb
cmp
dec
leave
jecxz
inc
adc
push
imul
imul
loopne
shl
(bad)
stos
out
inc
test
mov
push
test
xor
sbb
fld
inc
shl
and
xchg
or
mov
jecxz
ins
push
mov
xchg
jne
jle
or
sub
imul
cmp
cs
imul
aam
movs
ret
retf
jnp
into
mov
adc
ins
xchg
xchg
sbb
or
xchg
mul
and
jge
sbb
mov
or
push
ror
pop
rol
ja
adc
fisttp
adc
mov
cwde
retf
add
imul
hlt
popf
ror
adc
or
cdq
mov
retf
hlt
out
mov
aam
push
test
lods
xor
stc
into
pop
gs
imul
dec
push
mov
(bad)
and
mov
sub
loop
cdq
outs
pop
sbb
loop
adc
mov
sub
adc
movs
movs
dec
adc
aaa
cmp
frstor
xchg
push
dec
xor
dec
jmp
or
sbb
cmp
(bad)
out
out
pop
(bad)
xor
adc
cmp
inc
pop
push
daa
xor
fcmovb
in
jg
mov
sub
xchg
(bad)
push
sub
jb
outs
mov
dec
sub
fidivr
xor
ss
repnz
adc
stos
or
jmp
iret
cmp
fstp
xor
push
jp
repz
xor
dec
js
rcl
xchg
mov
xor
xchg
push
scas
(bad)
sbb
cld
scas
jg
mov
outs
mov
inc
dec
pop
push
sbb
lea
pop
fistp
out
inc
into
leave
mov
test
push
pop
sahf
inc
mov
iret
ror
es
mov
sub
rcl
pop
push
cmp
lds
(bad)
fisubr
cmc
pusha
mov
push
jmp
cs
(bad)
xchg
retf
mov
retf
hlt
and
rol
jg
lods
int3
mov
mov
mov
push
cmc
les
sbb
mov
push
scas
mov
adc
nop
xor
call
aaa
adc
les
test
sub
or
daa
push
pop
cmp
outs
dec
or
ds
mov
adc
xor
loope
fld
mov
ins
pop
inc
cmp
xchg
inc
repnz
inc
mov
outs
cdq
mov
inc
cmc
mov
push
inc
push
dec
jmp
call
inc
aas
nop
or
jno
pop
in
push
jmp
pop
xchg
pop
or
aas
sbb
hlt
cwde
jae
clc
inc
pop
xor
lds
imul
repz
jns
add
je
xor
mov
mov
stos
sbb
mov
adc
popf
sbb
sub
das
dec
cmp
fdivr
mov
mov
iret
jb
shr
mov
push
loop
jg
in
push
mov
and
js
jmp
retf
jbe
add
jge
imul
(bad)
push
add
sahf
mov
ja
xor
xchg
push
mov
(bad)
clc
pusha
jno
dec
mov
xor
loopne
std
ja
cmps
nop
xchg
shr
in
popa
sbb
stc
ins
test
adc
loope
mov
push
inc
or
cwde
sub
push
jle
push
call
mov
pop
sbb
pop
aas
cmps
dec
or
sbb
jmp
clc
js
dec
js
cmp
rcr
dec
mov
add
mov
xchg
mov
cmp
or
mov
xchg
push
and
cmp
lds
pop
imul
sub
sahf
push
sbb
xchg
adc
push
mov
lods
mov
aas
(bad)
mov
adc
sub
shr
stos
push
xor
bound
mov
ja
mov
inc
pop
stos
or
adc
adc
xor
popaw
adc
pop
push
cmps
xor
adc
jmp
xchg
or
inc
sbb
mov
shl
sbb
and
repnz
cmps
mov
cmc
shufps
push
and
mov
test
mov
outs
ja
adc
adc
inc
sbb
add
cs
cmc
ss
and
push
sbb
int3
jnp
push
sub
dec
pop
xor
mov
ins
mov
(bad)
xlat
add
jmp
xor
cmp
add
jle
pop
push
dec
(bad)
cmp
add
test
pop
adc
mov
sbb
(bad)
out
in
mov
mov
pop
mov
outs
sub
lods
add
mov
pop
(bad)
sahf
jbe
inc
jo
push
movs
ins
stos
mov
aam
sub
push
sub
mov
sbb
inc
jnp
outs
cmp
cdq
or
cmp
adc
mov
sub
test
xchg
outs
inc
pop
add
xchg
xlat
push
ja
imul
imul
and
cmp
gs
push
mov
dec
sbb
inc
jecxz
sahf
sub
cs
xchg
push
lock
mov
pop
lock
push
add
add
fcmovnu
gs
mov
pop
cmc
shl
inc
sub
jmp
cmp
stc
adc
sbb
mov
pop
jno
mov
push
push
outs
pushf
push
mov
movs
jnp
and
std
jl
clc
sub
fidiv
xchg
mov
pop
rcl
out
push
out
scas
pop
(bad)
imul
dec
xor
cmc
imul
cmp
repnz
mov
mov
fimul
add
cmps
ficom
push
js
gs
rcr
movs
xchg
shl
shr
stc
jmp
mov
jbe
cmp
push
inc
push
jecxz
ficom
adc
inc
and
push
pushf
cmp
jmp
push
push
dec
sbb
adc
xor
and
stc
lods
dec
dec
mov
xchg
dec
mov
popf
or
sub
and
inc
getsec
jl
push
xor
sbb
repnz
push
jo
shl
xchg
call
pop
inc
mov
(bad)
out
dec
fld
inc
mov
shr
mov
add
clc
add
xchg
nop
or
jb
loop
test
add
jge
out
(bad)
cmp
pop
sahf
test
(bad)
mov
inc
adc
(bad)
dec
dec
pushf
pop
mov
mov
inc
xor
and
loopne
hlt
dec
stos
and
and
cwde
sbb
loope
(bad)
pusha
sub
sub
stos
pop
fst
ss
cmp
or
outs
int
stos
rcl
xor
mov
dec
cld
jnp
cmp
inc
movs
leave
out
rcr
adc
mov
xchg
sub
movs
in
pop
sbb
xchg
pop
adc
iret
stc
retf
jp
(bad)
pop
and
adc
cwde
cmp
popf
mov
xor
push
xchg
or
pushf
dec
sbb
gs
mov
sbb
retf
icebp
ins
loop
adc
out
movs
mov
sysenter
dec
(bad)
loopne
retf
movs
mov
sbb
sub
ficomp
(bad)
mov
mov
(bad)
jo
lahf
stc
or
je
ins
inc
dec
pcmpeqw
mov
xor
xor
push
iret
repz
xchg
sub
mov
pop
std
ficomp
(bad)
add
ins
rcr
clc
sub
call
pop
cmp
int
cmp
xor
(bad)
fistp
cmp
mov
cmp
aad
xlat
fdiv
mov
xchg
xchg
out
dec
rcr
cmps
sub
xchg
rcr
loope
lahf
jle
std
aas
ret
xchg
mov
in
push
adc
pop
jmp
adc
sbb
push
jecxz
fisub
pop
inc
mov
mov
adc
sbb
lahf
dec
iret
iret
ret
repnz
push
inc
mov
mov
movntps
mov
push
mov
xchg
dec
mov
repnz
jle
(bad)
cmp
fst
out
scas
inc
add
pop
mov
inc
cmps
aas
fild
jmp
call
dec
jp
push
jne
xchg
int
es
jb
and
mov
retf
or
bound
jecxz
push
cmc
pop
dec
retf
pop
jae
scas
loop
sahf
jmp
cmp
ficomp
jnp
and
or
ds
cs
add
xchg
ja
scas
mov
jb
jo
dec
movs
pop
inc
sbb
mov
mov
popa
xor
mov
add
into
fstp
xchg
scas
jge
jne
push
retf
jbe
test
ss
fisttp
sub
push
idiv
idiv
add
inc
fadd
inc
retf
cmp
mov
sbb
adc
sahf
and
mov
inc
cmps
out
or
dec
dec
pop
jmp
fucom
dec
or
repz
or
call
call
ins
fs
inc
mov
mov
jns
mov
sbb
jo
cdq
enter
fwait
adc
cmp
hlt
push
xchg
aaa
scas
xchg
and
xchg
stc
lea
in
jmp
fsubr
push
mov
mov
fistp
mov
push
pop
adc
sbb
std
pushf
xchg
popf
gs
xchg
out
ror
inc
mov
lods
mov
cmp
iret
or
arpl
adc
fstp
cmp
xchg
fstp
gs
jbe
movs
ds
jecxz
xor
aaa
in
(bad)
cmp
cdq
xchg
cld
cmp
ins
fild
xlat
addr16
fstp
push
inc
adc
aam
xor
mov
adc
dec
stc
sub
out
dec
ret
adc
push
int3
(bad)
rcl
loope
clc
iret
or
xchg
in
in
(bad)
in
cmp
inc
jp
inc
(bad)
xor
ss
test
and
repz
adc
call
or
pushf
mov
dec
cmp
and
jge
dec
inc
jbe
xchg
das
lahf
aaa
xchg
test
(bad)
ja
mov
int
sbb
dec
ds
mov
mov
adc
or
cmp
mov
jg
icebp
fiadd
test
cmp
mul
mov
jns
iret
mov
pop
mov
stos
or
mul
call
(bad)
xchg
or
aas
outs
cmc
das
pop
mov
inc
jae
add
mov
outs
es
jmp
lods
in
fild
ja
sbb
push
stc
xchg
push
xchg
retf
mov
cmp
bound
push
sbb
push
mov
sub
stos
cmp
repnz
clc
dec
mov
into
or
aam
test
lock
jl
dec
xchg
je
pop
es
jmp
test
push
pop
sbb
add
pop
adc
(bad)
and
sub
(bad)
or
nop
leave
pop
cmp
jb
sbb
int
loope
dec
mov
mov
jb
adc
pusha
jle
mov
cmps
cmp
lea
(bad)
hlt
mov
and
sbb
and
or
stc
arpl
sti
adc
ret
out
lea
call
mov
or
test
out
push
xchg
or
pop
jl
shl
in
jmp
mov
call
aas
mov
movs
aas
mov
fisttp
in
(bad)
push
sbb
popa
jmp
mov
push
sbb
push
mov
scas
pop
jbe
test
in
cwde
hlt
xor
push
push
jge
jp
hlt
push
call
add
xchg
pushf
pushf
sub
xlat
mov
jp
jg
iret
mov
or
mov
repnz
shl
movs
sub
retf
pop
fnstsw
sti
push
xor
movs
inc
fs
adc
out
repz
ins
enter
ficomp
clc
jecxz
lahf
dec
mov
sahf
pushf
cli
ds
sbb
xchg
call
mov
xchg
sahf
leave
retf
test
lods
xchg
xlat
das
outs
push
inc
stc
inc
xor
shl
and
sub
mov
test
lds
and
xchg
cmp
outs
movs
sahf
xchg
enter
ja
mov
in
mov
sbb
sti
sbb
inc
pushf
xchg
jo
rcr
fninit
add
js
xchg
dec
adc
into
push
std
js
sar
data16
xchg
add
inc
adc
fwait
xor
out
dec
jae
(bad)
cmc
mov
sbb
repnz
cs
movs
add
sub
mov
popf
push
jecxz
push
and
xchg
pop
cmp
push
arpl
les
out
jbe
mov
cmc
add
push
mov
and
jg
shl
lock
inc
repz
popf
mov
or
xor
or
popf
mov
loopne
rcl
push
jne
movs
stos
stos
enter
xor
cmp
cmps
cmp
test
ret
test
adc
mov
js
sbb
fdivr
gs
hlt
dec
jne
adc
cmc
dec
pop
sbb
pusha
fadd
mov
imul
cdq
fidiv
pop
into
lea
shr
pop
dec
out
call
mov
adc
pusha
pushf
xchg
dec
lods
xor
add
fbld
pop
inc
cmc
mov
call
xchg
imul
adc
mov
fsub
std
ss
(bad)
mov
je
popa
xlat
das
or
bound
lea
jmp
mov
out
icebp
sub
test
mov
xlat
and
adc
rol
lds
jo
adc
pop
pop
cli
in
jmp
and
das
(bad)
mov
push
jnp
mov
push
push
add
xchg
mov
push
ret
inc
mov
ins
sbb
pop
test
cwde
jne
xor
mov
shr
xlat
add
fadd
and
push
push
xor
loop
lods
lea
pop
push
adc
pop
cdq
jne
xor
lock
scas
js
or
lahf
das
fisub
jge
mov
mov
push
or
mul
mov
call
mov
fnstenv
retf
push
pop
cmp
movs
jle
jne
cmps
retf
jno
pop
inc
imul
loop
imul
fist
fsubp
inc
pop
sbb
lea
sub
adc
ficomp
push
les
jb
out
mov
je
imul
xchg
pop
aaa
hlt
xor
popa
pop
add
inc
adc
and
inc
push
push
mov
mov
not
sub
and
jle
leave
imul
sbb
push
xor
mov
loope
inc
js
(bad)
pop
nop
jns
inc
mov
inc
cmp
mov
lahf
loope
into
sbb
mov
cwde
mov
sbb
and
daa
adc
mov
pop
jmp
int3
xchg
pop
inc
mov
sub
data16
lock
inc
mov
arpl
dec
repz
bound
fcmovb
rcr
xchg
call
xor
movs
xchg
ds
test
push
mov
pop
pop
mov
sub
int
inc
inc
push
fwait
adc
enter
hlt
mov
push
ins
pop
inc
in
sub
shr
cmps
push
mov
mov
ss
jle
sbb
icebp
mov
fcomip
retf
cmp
not
bnd
inc
(bad)
jmp
jmp
(bad)
stos
cmp
dec
retf
lahf
dec
out
sbb
pop
ror
mov
push
and
scas
adc
push
enter
je
stos
cdq
dec
cmc
(bad)
icebp
or
cmps
ret
mov
aaa
test
or
cli
add
inc
mov
gs
pop
mov
rol
or
aam
pop
jl
shl
lock
xchg
mov
or
cmps
pop
(bad)
iret
adc
xor
mov
pop
xchg
clc
out
lock
push
jmp
push
es
jb
or
arpl
nop
outs
ror
xchg
sti
aaa
xlat
inc
push
addr16
xor
(bad)
jns
mov
imul
cmp
(bad)
and
test
es
aam
pop
pop
cmc
mov
dec
mov
cmp
ds
adc
gs
push
and
xchg
pop
aam
dec
add
das
(bad)
mov
jno
sahf
mov
jl
popa
jle
das
fldcw
inc
cmp
imul
push
jbe
cmp
fxch
lds
xlat
(bad)
push
sub
mov
dec
aas
out
mov
out
fimul
jecxz
mov
out
push
imul
mov
inc
fld
jmp
jmp
icebp
(bad)
js
ror
out
aaa
lods
sub
sahf
fucom
sahf
repz
xchg
retf
ror
ins
cmp
dec
pop
mov
popf
fs
mov
xchg
mov
mov
sub
stos
add
in
stos
shl
mov
fcom
push
xchg
mov
push
cmp
pop
mov
retf
out
cmp
jmp
jo
stc
jne
fimul
cmp
sub
fs
mov
and
test
pop
xchg
mov
adc
mov
jl
stos
cmp
repz
popa
jae
push
je
mov
or
push
or
shl
xlat
inc
jecxz
pop
xor
das
adc
cmps
aam
hlt
mov
mov
in
push
call
adc
scas
mov
out
mov
hlt
add
aad
jmp
scas
inc
push
mov
mov
push
mov
(bad)
rcl
pop
mov
cld
adc
lahf
test
mov
or
cmp
xchg
jbe
or
push
in
mov
loope
inc
sahf
into
push
sub
mov
pop
call
loopne
mov
shl
bound
inc
push
loopne
cli
add
pop
(bad)
rol
pop
jecxz
stc
das
dec
dec
inc
lds
(bad)
xchg
adc
movs
xchg
push
movs
lahf
lea
push
xchg
jb
jb
push
push
xor
xchg
mov
jmp
(bad)
and
lock
cwde
adc
not
ds
jmp
mov
repnz
xor
pop
enter
dec
cmc
sti
jne
(bad)
imul
xor
out
jecxz
mov
idiv
mov
inc
ds
jbe
pop
push
xor
in
les
shl
mov
loop
outs
loop
jge
mov
in
inc
cmp
inc
sahf
xchg
dec
cmp
not
or
aas
lods
ficomp
fstp
(bad)
cld
adc
(bad)
pop
pop
imul
add
out
in
mov
push
loop
adc
call
setg
add
imul
je
xor
ds
pop
std
dec
xchg
add
pop
dec
push
push
inc
push
aas
pop
sub
mov
je
mov
sub
ret
lods
icebp
add
mov
xchg
jmp
xor
lds
jbe
jbe
ins
jmp
dec
xchg
hlt
test
fisttp
xor
sbb
fidiv
stc
not
jb
(bad)
rcr
fcomp
mov
pop
inc
lahf
int
sub
push
xchg
cmp
push
mov
mov
mov
xchg
imul
cld
cld
cwde
popf
pushf
sbb
mov
xor
pop
stc
jnp
cmc
das
cmp
pop
ss
push
add
and
inc
rol
lods
aas
dec
pop
mov
pop
cmc
and
or
sub
js
jbe
loope
outs
neg
or
mov
in
faddp
sbb
stos
and
xchg
je
jl
pop
sar
sbb
aas
popf
pusha
inc
cmps
push
sbb
pop
xor
xchg
jnp
mov
push
and
or
in
mov
test
mov
mov
push
repnz
dec
cld
fimul
pop
push
js
imul
mov
mov
cmps
push
dec
bound
sbb
pusha
stos
sub
std
(bad)
in
mov
jno
add
dec
dec
or
pop
daa
inc
dec
movs
nop
xchg
push
sbb
call
gs
std
cdq
mov
jmp
mov
pop
in
cmovg
test
lock
or
sahf
xor
jbe
adc
scas
or
aam
xchg
mov
pop
mov
gs
or
xchg
retf
mov
nop
sub
adc
icebp
push
out
xchg
adc
scas
mov
aaa
call
shl
iret
and
pop
popa
adc
inc
daa
add
sub
lods
(bad)
jns
lea
dec
popf
cmps
xor
int
xchg
dec
adc
je
mov
out
push
out
out
data16
outs
mov
loopne
mov
push
sub
aad
sub
xlat
add
dec
push
and
data16
pop
jecxz
dec
jg
retf
pop
xor
stc
loopne
xchg
push
pushf
lods
pop
cmp
pop
inc
jae
mov
int
dec
inc
push
test
dec
sar
je
adc
in
fwait
add
cmp
(bad)
pop
stc
ins
enter
pushf
cmp
push
imul
and
pop
iret
push
stos
push
and
retf
loop
(bad)
mov
loope
in
stc
cmp
out
stos
jle
sar
outs
in
or
out
push
test
dec
loope
mov
and
or
xchg
dec
imul
retf
test
pop
(bad)
icebp
or
imul
lea
inc
mov
jg
pop
sub
and
inc
add
fs
jns
sub
std
inc
sub
push
or
add
push
lods
in
aad
pop
test
(bad)
and
pop
mov
pushf
add
sbb
lods
mov
xchg
in
adc
pop
in
aaa
lods
clc
add
xchg
scas
in
xchg
popf
cmp
gs
add
push
daa
aam
int3
pushf
xchg
xchg
hlt
test
mov
xchg
popw
cmp
sbb
or
dec
or
and
ja
push
test
xor
inc
dec
or
adc
cmp
jmp
rcl
mov
jmp
ds
cwde
xchg
fsub
mov
ffree
cmp
cmc
xchg
mov
pop
adc
in
outs
loop
add
inc
and
push
cmp
jge
fucomip
ds
test
and
in
test
or
lahf
pop
jl
mov
and
mov
dec
ds
and
jo
loop
lock
xchg
pop
or
sar
hlt
mov
push
pop
stos
fistp
stos
dec
loopne
outs
(bad)
or
push
mov
jecxz
scas
push
fisttp
and
hlt
lea
dec
inc
adc
shl
ret
scas
mov
in
ret
fadd
pop
mov
(bad)
scas
(bad)
push
mov
pop
je
add
xor
pop
cmps
inc
data16
scas
jno
jmp
popa
adc
sub
(bad)
aam
cmovg
loope
sahf
out
add
std
mov
inc
retf
cmc
inc
movs
mov
sbb
adc
test
out
addr16
xchg
or
xchg
push
cwde
inc
jnp
inc
movs
xchg
js
jb
mov
bound
jns
mov
add
imul
loop
fdivr
pop
(bad)
int
sbb
fdiv
mov
xchg
mov
push
mov
inc
dec
test
hlt
sbb
lahf
imul
push
mov
test
or
test
(bad)
add
mov
scas
loop
dec
jp
sahf
ret
test
in
in
add
(bad)
inc
fldenv
aam
and
sbb
ss
rcr
push
mov
sbb
ins
mov
jmp
xor
outs
ins
call
sub
push
mov
das
jb
(bad)
cld
pop
jnp
xchg
and
inc
sub
ja
imul
imul
idiv
ja
mov
jne
inc
ss
shr
retf
push
dec
fs
or
xchg
mov
test
sub
test
pop
or
lea
jo
shr
(bad)
(bad)
idiv
in
js
mov
jp
sti
push
sbb
or
sbb
inc
mov
push
mov
jbe
nop
mov
sub
mov
clc
jae
cmps
sub
jl
sti
cs
push
lahf
(bad)
sbb
sub
neg
pusha
inc
lods
enter
retf
jg
inc
jg
pop
aam
into
sti
cmp
sbb
push
addr16
out
mov
call
repnz
adc
jns
pop
mov
and
inc
stos
mov
jmp
es
lock
dec
jle
push
cmp
fisttp
je
loopne
lahf
pop
xchg
mov
call
xor
pusha
xor
je
je
icebp
pop
sub
xlat
mov
repnz
rol
jge
push
fdiv
repnz
pop
int3
mov
or
pop
mov
xor
aad
ret
mov
push
sub
jmp
loope
inc
or
cmc
or
(bad)
repz
(bad)
enter
inc
sar
dec
shr
mov
arpl
xchg
or
movs
adc
xchg
mov
jae
or
movs
jle
mov
sbb
push
pop
pop
and
push
mov
jae
and
add
mov
or
mov
ins
pop
push
sbb
les
xor
hlt
and
jb
or
ror
push
cwde
xor
enter
sbb
clc
out
icebp
cmp
inc
xchg
sbb
movs
mov
adc
jp
dec
add
ret
(bad)
jo
add
mov
aam
jo
repnz
inc
pop
aad
xor
arpl
add
cmp
push
add
dec
xchg
jmp
pop
das
xor
or
jle
shl
pop
cmp
sub
push
pop
cdq
addr16
xlat
outs
and
mov
in
and
imul
outs
cmp
popa
imul
pop
rcl
mov
shl
fsubr
enter
popa
or
jl
fwait
sbb
sub
sbb
shr
retf
scas
xchg
push
(bad)
mov
leave
add
clc
(bad)
jecxz
sbb
pushf
push
pop
ret
push
push
and
jae
hlt
sub
inc
test
sub
lea
test
and
clc
xchg
movs
push
push
es
gs
push
push
jnp
pusha
loope
mov
popa
dec
or
into
fdivr
fs
jbe
sbb
stos
mov
sbb
dec
xchg
push
add
fcomp
mov
cwde
inc
into
or
(bad)
jecxz
jge
sub
aas
or
scas
adc
cmp
aaa
and
xchg
mov
mov
jl
add
out
gs
cs
shl
call
pop
cmp
arpl
pop
ins
pop
retf
dec
dec
push
fwait
lds
retf
gs
aaa
scas
add
or
add
rol
mov
leave
dec
movs
adc
popf
pop
pop
xchg
pop
push
dec
pop
add
outs
loope
jmp
cwde
out
pop
je
push
xor
ret
xchg
adc
and
cmps
sbb
mov
mov
cli
into
push
(bad)
into
mov
gs
jb
ins
clc
mov
jno
int3
xlat
nop
ja
xor
cmp
retf
xchg
xchg
leave
mov
jmp
lods
mov
dec
and
push
jl
jmp
jno
push
xchg
sbb
mov
mov
call
lods
mov
je
mov
or
push
loope
mov
nop
pop
and
cmc
les
and
and
xchg
xor
xlat
push
mov
mov
dec
adc
and
lock
fsubrp
cld
test
ret
sub
mov
(bad)
and
sub
in
and
movsx
movs
cmp
jae
adc
dec
mov
or
mov
pop
out
ins
cwde
sbb
dec
ins
mov
push
in
fdivr
jb
and
ins
dec
mov
pop
and
pop
xchg
jae
mov
pop
outs
xor
dec
xor
jns
rol
push
adc
sbb
and
cmp
shr
jae
div
aam
dec
and
stos
mov
mov
pop
(bad)
adc
fld
test
add
lock
pop
and
jle
stc
inc
movs
or
mov
aad
and
fdiv
sub
daa
rcl
xchg
stos
sbb
push
push
jo
daa
add
xor
(bad)
mov
mov
push
mov
in
(bad)
jle
outs
inc
ins
sub
ins
out
cmps
das
adc
pusha
retf
enter
jmp
jg
ror
movs
call
sub
dec
xor
nop
fcomi
push
push
movs
pop
in
mov
stos
pop
into
mov
mov
mov
push
jmp
push
or
pop
sbb
add
ins
jne
fwait
cs
sbb
movs
cmp
sub
cmp
ins
cld
adc
push
in
cmp
sbb
jbe
add
jb
mov
cld
push
cdq
jbe
cmp
arpl
mov
sbb
je
sar
push
rcr
loop
mov
fild
rcl
loopne
pop
jle
mov
mov
pushf
leave
mov
inc
ret
addr16
mov
push
jnp
lods
sub
mov
je
mov
xor
push
fcom
mov
xchg
mov
jmp
sub
fidivr
lea
mov
stc
cld
xchg
sbb
cli
sbb
cmp
fisubr
into
push
mov
imul
mov
retf
dec
mov
push
mov
jmp
mov
push
add
xchg
pop
icebp
mov
mov
or
outs
pop
and
xchg
jne
pop
div
pop
inc
ret
loop
jne
pop
(bad)
mov
cmp
stc
in
jecxz
push
outs
xchg
shl
dec
push
jl
xchg
adc
mov
cmp
lods
out
mov
push
test
sub
jne
mov
jmp
dec
movs
sar
pop
add
inc
sbb
add
sti
rep
jns
sub
test
mov
in
inc
jns
pop
test
xchg
dec
and
pop
adc
stos
pop
or
mov
(bad)
adc
das
jle
hlt
sub
or
jmp
cmp
mov
ins
int3
fld
dec
xchg
mov
mov
xor
jg
adc
nop
mov
pop
mov
shr
jbe
mov
xor
in
lahf
fcmovnb
and
and
stos
xchg
inc
out
inc
push
push
mov
dec
mov
inc
xchg
jnp
fmulp
mov
jl
pop
addr16
cmp
jmp
loopne
test
xor
(bad)
sub
cmp
cmp
cmp
mov
dec
adc
scas
sbb
shl
scas
scas
sbb
mov
les
jae
sbb
adc
cvtps2pd
xchg
repnz
pop
dec
inc
xchg
dec
cmc
out
aam
daa
cs
imul
cmp
loope
xchg
jbe
(bad)
jns
dec
aam
mov
shl
inc
inc
(bad)
test
jge
cmp
hlt
fldenv
adc
jmp
adc
mov
das
shr
fsubr
dec
loope
call
bound
mov
pop
add
inc
pop
xchg
leave
shl
aaa
test
mov
mov
ficom
popa
rcr
add
jno
out
cld
mov
stc
js
mov
sar
rol
dec
xor
inc
out
pop
pop
sbb
inc
sub
xlat
push
in
popa
ins
pop
shl
mov
jle
mov
xor
xchg
cmp
xchg
aas
retf
iret
mov
xor
loopne
movs
sbb
pop
or
push
xchg
mov
test
mov
push
(bad)
mov
pusha
cli
dec
adc
test
dec
(bad)
inc
pop
cmp
cmc
mov
(bad)
fcom
or
retf
add
cmp
cld
mov
pop
lock
dec
lds
ss
clc
aad
aad
test
je
xchg
pop
das
clc
sbb
outs
shl
xchg
or
push
test
add
sub
mov
int3
inc
lds
dec
inc
repnz
(bad)
fmul
xchg
fidivr
jge
xor
dec
push
hlt
popa
inc
xchg
mov
movs
xchg
jae
xchg
je
inc
(bad)
or
add
ins
out
dec
sub
fisub
push
mov
outs
ds
in
test
ins
aad
adc
mov
and
jecxz
test
dec
test
nop
ds
mov
ja
mov
in
(bad)
std
sti
mov
mov
push
jnp
sbb
iret
scas
mov
loop
out
xchg
cli
cmova
push
mov
cmp
mov
jecxz
mov
push
mov
adc
mov
mov
je
inc
aas
sbb
test
loopne
out
pop
in
test
adc
sub
mov
in
fucom
dec
repz
int3
mov
test
or
or
aam
daa
push
pop
sub
mov
cmp
or
push
and
ins
and
pop
retf
js
dec
(bad)
cmp
jb
in
inc
pop
ds
adc
inc
out
movs
es
pop
pop
fadd
dec
inc
icebp
jmp
out
int3
mov
mov
push
addr16
dec
mov
sub
push
pop
int
mov
inc
push
jns
jge
test
pop
dec
or
add
mov
mov
xchg
cli
sbb
ins
pop
push
cwde
sub
add
mov
imul
fld
pusha
out
fld
imul
inc
mov
jecxz
test
in
or
loop
popa
jg
jmp
fisub
inc
push
lods
mov
es
pop
xchg
bound
ret
or
mov
in
cmps
jecxz
add
mov
out
inc
enter
xor
sub
inc
cmc
add
fisub
(bad)
out
neg
call
(bad)
xor
mov
or
ss
es
jo
dec
popf
lea
cmps
mov
mov
xlat
jb
add
inc
mov
loop
daa
out
in
add
pop
add
cmps
in
sbb
lds
or
test
sub
xor
aaa
ins
or
dec
mov
mov
mov
ins
jne
push
add
jg
cmp
lock
hlt
mov
mov
and
xor
clc
in
cmp
sti
dec
push
push
dec
cmc
jne
pop
jo
lock
jne
add
xchg
xor
xchg
mov
jmp
and
push
pop
pop
cld
mov
sbb
inc
test
pop
pop
dec
addr16
and
xor
sub
mov
cld
push
xchg
lea
outs
movs
sbb
jecxz
lahf
xlat
cmps
mov
adc
adc
stos
push
add
movs
push
mov
and
push
xor
cmp
ret
sti
in
in
add
stos
adc
xchg
(bad)
cwde
xchg
inc
stos
push
imul
sub
into
mov
dec
jl
lods
shr
xor
cmc
adc
imul
jnp
pop
sbb
inc
cs
ror
leave
movs
push
mov
push
loop
push
cmp
test
adc
push
lock
sar
fs
jecxz
jge
or
push
mov
and
in
push
mov
jge
pop
call
or
daa
mov
ffreep
mov
ss
aaa
lock
aaa
lahf
lods
adc
shl
jnp
xor
xor
or
adc
push
jb
mov
push
cmp
scas
inc
xor
adc
js
jmp
mov
inc
adc
sub
cmp
mov
pop
clc
jno
sub
js
mov
push
xchg
out
(bad)
or
jecxz
clc
adc
test
inc
mov
jo
jge
retf
test
mov
dec
ret
add
dec
popf
cmp
sar
pop
mov
mov
inc
imul
add
cs
push
lods
test
push
rcl
and
adc
or
xchg
mov
cmps
es
and
add
xchg
or
fsubp
xchg
movs
or
jnp
jle
stc
inc
mov
adc
out
push
fsub
sub
xchg
mov
add
mov
jmp
mov
loope
not
out
das
inc
mov
or
in
out
in
add
xchg
adc
loopne
push
ret
in
xlat
(bad)
push
mov
out
mov
sbb
int
ins
call
inc
xor
sar
call
fs
ret
pop
cmc
cdq
fldenv
lods
jmp
push
test
mov
sub
clc
push
shr
in
add
stos
mov
adc
pushf
sub
xor
mov
pop
lods
jg
fnstcw
and
push
pop
shl
adc
rcl
lahf
sbb
out
ds
mov
fmul
sub
leave
out
jnp
dec
outs
shl
shl
mov
ins
push
and
fldenv
stc
mov
inc
sub
sub
mov
inc
cmp
push
ret
cmps
(bad)
clc
jns
and
push
sbb
or
movs
adc
adc
or
ret
inc
jb
dec
in
pop
les
cs
retf
mov
jge
fist
repnz
jne
pushf
jmp
fnstcw
push
sahf
and
push
in
aas
push
mov
jge
mov
imul
mov
(bad)
scas
sub
loop
aaa
push
cld
dec
imul
pop
cwde
inc
shl
in
jp
das
loopne
mov
scas
push
sub
dec
sbb
mov
cmp
into
bound
mov
jle
sbb
or
push
dec
dec
movs
adc
mov
icebp
mov
fldenv
js
xchg
cdq
jbe
xchg
arpl
pop
xor
rcr
ja
std
es
or
mov
mov
cdq
aam
leave
jl
sbb
aaa
mov
fdivp
imul
retf
pop
push
fmul
jns
dec
ret
mov
outs
jo
pop
lea
adc
jb
pop
hlt
adc
sub
cli
stos
jns
or
or
push
ret
std
adc
mov
sub
inc
sti
cmp
and
cmp
and
and
or
push
jl
mov
mov
adc
or
loopne
cmp
mov
jg
cmp
cdq
add
xchg
cmc
push
test
xor
movs
mov
sub
in
fcomp
iret
lea
and
imul
jmp
imul
shr
fild
enter
ins
ins
and
(bad)
xchg
adc
sbb
inc
inc
es
push
test
js
cmp
cmp
and
nop
pop
fs
and
fwait
ret
mov
les
push
or
mov
xor
out
jmp
sbb
jbe
cld
mov
(bad)
cmp
arpl
add
out
ret
pop
sub
mov
sbb
fs
icebp
push
fstp
cmc
ds
add
xlat
les
add
xchg
test
inc
mov
pop
bound
neg
jbe
cld
sahf
xor
enter
and
jp
cmp
data16
(bad)
in
fst
icebp
cmp
inc
adc
cmp
sub
mov
dec
push
jb
cld
movs
aam
in
les
pop
cmp
fmul
push
cmp
imul
pop
xlat
fiadd
add
arpl
out
jno
nop
nop
jne
bound
cmp
adc
dec
(bad)
push
push
clc
cmp
retf
ret
imul
jnp
ins
ret
sub
inc
arpl
xor
mov
and
fwait
xchg
inc
push
js
push
jge
mov
xor
jns
jno
cmp
lahf
cwde
out
fisttp
xchg
lods
and
jle
nop
mov
add
retf
sbb
int
stos
mov
xor
sub
cdq
mov
xor
popa
jmp
ss
pop
fld
cs
add
inc
inc
sbb
push
popa
inc
(bad)
(bad)
cmc
dec
(bad)
push
pop
mov
and
sub
push
aam
push
xor
test
iret
add
cli
and
or
into
cwde
sbb
pop
push
test
xor
sbb
xchg
xchg
aam
mov
call
mov
push
xchg
pop
add
and
xchg
sbb
je
fimul
jb
lahf
retf
push
popf
shl
cdq
arpl
inc
jmp
iret
sub
dec
sub
call
(bad)
shl
jmp
adc
cld
adc
shr
test
mov
clc
cmp
add
and
adc
inc
jg
xor
sti
neg
ret
test
bound
adc
(bad)
call
call
pop
adc
cmps
xchg
adc
fnsave
xchg
(bad)
fs
sahf
les
cmp
aas
mov
call
out
jo
cmp
icebp
or
mov
and
mov
cmp
jo
dec
rcr
dec
scas
cmp
mov
xchg
rcl
jnp
dec
sub
imul
sub
adc
nop
mov
dec
dec
inc
sub
add
xor
pop
sti
or
xchg
xchg
fiadd
xor
inc
mov
in
mov
call
mov
and
mov
rol
je
push
xor
add
out
enter
sbb
retf
ss
sbb
mov
and
cmp
sbb
dec
push
and
scas
lods
mov
imul
rol
(bad)
fdivr
fwait
(bad)
in
sbb
push
cmps
and
push
(bad)
shr
icebp
js
or
xchg
sbb
test
xchg
ret
addr16
mov
sar
cmc
add
dec
or
jno
lods
popa
mov
popf
movs
cmps
pop
mov
cmc
mov
loop
shl
dec
mov
add
in
data16
std
(bad)
into
add
cmp
imul
ror
inc
adc
(bad)
ins
push
push
cmp
in
mov
jae
addr16
(bad)
icebp
(bad)
imul
std
push
or
mov
mov
mov
ss
adc
add
in
lods
sub
sub
add
jnp
pop
ss
sti
mov
das
adc
es
xchg
dec
cld
inc
inc
imul
aad
test
loopne
add
sbb
movs
loopne
push
mov
jl
ret
les
lock
(bad)
and
pop
rcl
pop
idiv
shl
mul
mov
je
mov
dec
int
push
(bad)
test
cmps
data16
and
cmp
dec
push
push
pop
pop
pushf
adc
cdq
add
pop
test
pop
xor
push
mov
adc
push
xchg
mov
jl
push
cmp
loopne
inc
push
push
xor
push
dec
cmp
test
push
jno
es
cdq
add
repnz
xchg
iret
dec
dec
inc
repz
out
idiv
pop
gs
ins
jmp
adc
inc
mov
in
lds
int3
mov
push
movs
movs
call
in
lods
xchg
push
and
add
inc
adc
stos
adc
push
in
nop
fisub
test
les
jae
lahf
into
and
cmp
or
dec
cmps
pop
mov
cwde
jle
pop
pop
in
mov
lods
add
sub
cli
mov
retf
dec
push
imul
rol
test
in
sub
cld
adc
mov
jnp
arpl
push
pop
dec
into
mov
xor
rcl
stc
push
pop
xchg
mov
icebp
cmps
psubb
imul
shl
fst
xor
xchg
ss
mov
cmp
pop
movq
in
mov
ret
sub
movs
sbb
mov
call
aad
daa
mov
test
lods
mov
loopne
dec
adc
aaa
jb
enter
lds
mov
jmp
fucomip
push
enter
push
inc
aam
xchg
dec
in
test
or
call
fld
jns
aaa
mov
cld
jecxz
add
frstor
into
ret
mov
mov
(bad)
cdq
xor
jmp
loop
xor
arpl
dec
mov
nop
xchg
jbe
ss
dec
cmp
sti
jge
mov
mov
xlat
push
or
push
push
push
mov
hlt
js
push
cld
jbe
fist
cmp
rcr
movs
sub
jle
repz
jg
loop
jb
jl
add
fadd
sub
and
inc
dec
pop
add
inc
inc
adc
xchg
adc
rcl
(bad)
mov
iret
mov
fisttp
cld
fsubr
out
cmp
fisttp
mov
in
idiv
cmp
or
fimul
mov
fxch
adc
shr
adc
ins
dec
popf
das
inc
cmp
push
sbb
fbld
dec
push
data16
mov
xor
xor
arpl
jo
iret
arpl
pop
sub
les
add
inc
jmp
imul
loope
pop
neg
cmovae
sub
stc
or
xchg
jbe
dec
movs
mov
movs
imul
pop
fwait
cdq
iret
lock
jge
stc
mov
loopne
and
cmp
adc
ja
jbe
and
scas
int
jo
sbb
push
leave
(bad)
dec
cmp
(bad)
sbb
fidivr
xchg
push
(bad)
bound
addr16
int3
and
aas
jne
mov
imul
add
cmp
push
adc
cmp
and
adc
mov
je
aas
fcomp
push
pop
shl
(bad)
jle
(bad)
xchg
sub
or
jle
dec
inc
xor
mov
inc
jno
sti
mov
ins
dec
inc
push
scas
iret
into
pushf
adc
xchg
out
push
jbe
cmps
call
ins
push
jecxz
int3
icebp
and
jns
xor
test
clc
adc
or
shl
add
in
(bad)
cmp
aaa
jg
and
popa
mov
fld
jg
sub
jge
push
addr16
adc
retf
cmp
sahf
adc
adc
push
mov
jbe
inc
outs
dec
loop
pop
std
push
and
push
inc
inc
xchg
fcmovnb
mov
mov
mov
fistp
inc
xchg
adc
ret
je
mov
pop
sub
mov
xchg
outs
xchg
hlt
inc
shl
push
sub
mov
(bad)
fmul
and
js
lock
out
jl
stc
xor
leave
adc
pop
fcmovnu
or
iret
pusha
inc
push
in
out
xchg
add
jmp
leave
mov
jecxz
dec
xchg
rol
mov
sbb
out
jb
int3
sub
movs
push
leave
inc
cmp
cld
test
jno
hlt
cmps
dec
xor
cmps
and
add
cmps
adc
mov
scas
aaa
retf
cwde
dec
test
int
adc
cwde
mov
outs
adc
and
repz
or
or
mov
and
pop
inc
arpl
lds
mov
gs
in
sti
clc
inc
inc
sub
dec
outs
mov
fidivr
pushf
pop
push
sbb
push
fisttp
leave
push
call
aad
or
data16
or
dec
adc
fcmovnu
popa
mov
ss
and
sbb
dec
aad
(bad)
jo
cmc
dec
add
adc
mov
fs
adc
lahf
jl
push
add
cmp
test
es
aam
xor
cmp
jg
pusha
loop
into
aas
dec
imul
sub
sbb
scas
cs
repz
and
les
pop
fisubr
lea
mov
fs
pop
dec
out
lea
sar
push
cmps
aam
xor
cmp
push
pop
pcmpgtd
xor
mov
cmp
mov
ret
aaa
movs
dec
sahf
aam
retf
sbb
mov
mov
fld
and
pop
addr16
mov
scas
mov
cld
or
cmp
jbe
aas
mov
mov
inc
mov
in
sbb
xor
push
ret
mov
or
pop
adc
mov
adc
mov
in
inc
cdq
test
cwde
add
lods
ret
ret
mov
and
les
cdq
pop
test
cld
xor
push
(bad)
fdivr
movs
pop
xchg
pop
bound
es
out
and
mov
sahf
push
(bad)
int3
xor
loop
sub
mov
jl
xchg
mov
fld
sbb
stos
retf
xor
fisttp
xor
or
dec
into
jbe
pop
inc
xlat
mov
mov
clc
not
xchg
jg
movs
add
jle
inc
fadd
std
dec
pop
add
inc
mov
loope
out
in
jne
enter
push
clc
jmp
or
mov
pop
pop
mov
mov
mov
ret
fnsave
fwait
popf
in
enter
mov
sbb
lahf
jns
mov
adc
sub
xchg
push
mov
mov
mov
sbb
pop
movs
sbb
cwde
repz
sbb
jmp
mov
call
xchg
ret
cmp
std
or
and
call
cmp
repnz
mov
add
test
jae
push
adc
ror
test
sbb
push
call
push
std
mov
nop
(bad)
xchg
or
data16
int3
ds
out
adc
jecxz
sub
inc
mov
fs
les
inc
cdq
fisubr
mov
push
lahf
jge
(bad)
stos
cmp
inc
and
push
sub
mov
or
xchg
mov
mov
cs
fwait
mov
and
push
dec
and
(bad)
hlt
in
xor
repz
pop
mov
mov
fdivr
cmp
in
inc
push
xor
adc
mov
pop
addr16
dec
(bad)
in
or
add
and
aad
sbb
add
add
sbb
adc
mov
cmp
aam
add
pop
js
add
pop
pop
pop
addr16
mov
or
push
gs
sbb
inc
pop
out
stc
popf
push
jbe
cmp
mov
mov
xor
mov
sbb
mov
xor
mov
sbb
in
cmps
dec
cli
jns
sbb
push
pop
pusha
into
lods
cmp
sbb
frstor
dec
aad
in
fucom
neg
xor
push
mov
fnstcw
dec
shr
adc
xlat
ja
jbe
add
sti
call
xor
mov
ret
adc
fistp
push
xor
pop
adc
ja
rol
lods
lods
ja
xor
test
pop
mov
add
or
add
inc
jmp
jl
test
mov
or
sbb
mov
and
mov
fs
pop
mov
aam
push
pop
stos
push
es
lea
dec
adc
and
xor
mov
lods
aas
mov
leave
movs
arpl
sbb
ins
xchg
cmc
sub
sahf
fcomp
arpl
dec
and
fnstsw
jns
xor
mov
or
mov
in
ins
aas
loopne
inc
test
aaa
adc
ss
sub
mov
xor
cmc
or
sbb
xor
xchg
fisttp
in
loop
mov
inc
(bad)
(bad)
pusha
loope
repz
je
mov
fst
rol
mov
cmp
xchg
call
(bad)
clc
fisubr
mov
mov
les
lock
mov
push
xlat
in
sub
fld
pop
push
mov
push
mov
inc
mov
fsub
adc
cmc
(bad)
outs
outs
repz
rcl
idiv
sub
adc
adc
pop
mov
adc
inc
sti
inc
repnz
pop
push
movs
mov
out
lahf
push
pop
add
iret
loopne
add
fldenv
inc
sub
cmp
jns
pop
xor
push
repz
push
setl
pop
xlat
(bad)
jl
xor
add
pop
mov
add
aad
xor
mov
data16
pop
fs
sbb
mov
mov
xchg
push
out
scas
aam
push
(bad)
adc
xor
mov
sub
jecxz
inc
outs
test
jne
or
sbb
dec
mov
sub
stos
clc
mov
rcl
xchg
xchg
jl
dec
data16
push
loope
sbb
dec
lds
pop
xchg
add
sub
aam
imul
lahf
daa
in
inc
sub
cdq
mov
add
push
retf
or
movs
pop
shl
mov
sar
mov
cwde
movs
inc
dec
push
and
stos
ja
push
jle
add
xor
xchg
rol
and
(bad)
mov
(bad)
out
sub
and
mov
fdivr
loopne
or
fadd
pop
xchg
dec
fisttp
or
retf
xor
push
sbb
adc
movs
(bad)
adc
fisub
ret
push
and
or
xor
xchg
adc
adc
dec
int3
ss
sub
outs
pop
mov
xor
popf
int3
imul
ret
mov
mov
push
sub
cwde
push
or
ins
add
hlt
(bad)
xor
cdq
cmp
mov
dec
pop
das
fisubr
mov
and
addr16
iret
jge
add
pop
xor
dec
es
mov
cmps
aas
addr16
and
pusha
push
popa
mov
mov
adc
lea
xchg
and
add
cmp
jbe
cmp
adc
push
dec
xor
and
and
cmp
ins
bound
pusha
bound
pop
sub
mov
inc
xchg
adc
and
dec
cmp
pop
jl
push
adc
out
mov
lock
mov
in
fcmovb
xchg
dec
lods
mov
jmp
jl
lods
out
sub
jno
mov
dec
mov
loope
xchg
pushf
xchg
test
inc
ror
push
(bad)
xchg
movs
push
inc
jp
or
rep
mov
ret
mov
icebp
sub
das
mov
xchg
std
push
lahf
xchg
int
dec
mov
adc
sub
xor
mov
inc
addr16
mov
mov
sbb
hlt
(bad)
xchg
add
push
mov
int
inc
int3
sti
mov
mov
ja
ror
and
xor
int3
add
dec
adc
popa
(bad)
xchg
ja
and
pop
clc
xchg
repnz
mov
inc
or
mov
sub
dec
cmp
rol
into
xor
mov
fild
sbb
xchg
xchg
int
(bad)
sub
mov
sbb
cmp
mov
out
lea
ret
sub
daa
outs
fwait
movs
shr
je
movs
lahf
into
iret
ss
or
cmps
xor
xchg
mov
push
dec
xchg
mov
popa
push
cs
cmp
loop
(bad)
and
xlat
retf
xchg
dec
sar
retf
stc
fninit
sbb
out
cmp
jo
push
stc
jo
sub
or
pop
shr
cmp
mov
mov
xor
push
lock
mov
xchg
and
add
mov
and
add
dec
mov
xchg
mov
pop
outs
xor
add
dec
xchg
jne
lea
xor
sbb
or
lahf
loop
movs
xchg
scas
js
daa
adc
je
jo
sub
outs
mov
shl
xor
mov
dec
push
(bad)
mov
sub
ins
cwde
(bad)
std
push
stc
lahf
dec
je
das
out
sbb
xchg
pop
inc
int3
mov
add
pop
pop
pop
xlat
fldz
xchg
(bad)
bound
mov
loope
iret
pop
adc
pop
into
or
or
mov
and
not
adc
shl
icebp
imul
jle
xor
pop
cs
adc
jl
push
lods
outs
je
jge
push
popa
dec
(bad)
pop
fs
loop
inc
dec
in
or
aad
lods
adc
aaa
nop
fs
scas
mov
mov
sbb
loopne
scas
lds
mov
cld
dec
ins
lods
xor
fidiv
mov
and
shr
mov
rcl
xlat
fst
scas
or
mov
enter
cmps
cmp
movs
repz
or
push
nop
sub
lea
cmp
(bad)
fscale
inc
das
jge
gs
and
jbe
mov
daa
lods
inc
sub
mov
clc
cli
cmp
ror
into
and
cmp
fisubr
lods
inc
in
in
sbb
sub
jg
push
or
jle
clc
iret
xlat
mov
es
scas
xor
test
psubq
inc
test
outs
xor
xor
sub
mov
sbb
sbb
ins
adc
jno
mov
inc
add
xchg
scas
mov
inc
xor
es
scas
lods
mov
pop
retf
inc
sbb
leave
add
mov
jecxz
out
or
je
or
mov
(bad)
pop
pop
pusha
push
test
push
push
and
pop
enter
adc
out
mov
aam
mov
pop
mov
xor
xchg
add
ins
dec
or
fs
rcr
adc
mov
bound
outs
adc
adc
ins
call
inc
ins
add
pop
push
(bad)
sbb
and
stc
cmp
jnp
jnp
bound
pop
and
rdtsc
push
neg
push
pop
push
xchg
(bad)
fucomi
cdq
not
jmp
jae
lods
jg
pop
clc
icebp
out
fwait
xchg
jb
pop
adc
cmp
mov
jecxz
mov
dec
push
in
pop
xor
fstp
jle
popa
fild
xchg
lea
xor
inc
les
fwait
addr16
ret
(bad)
retf
or
xchg
add
test
loopne
sub
or
jb
sub
mov
and
sub
aaa
xchg
iret
or
call
adc
xchg
hlt
xchg
imul
fdivr
outs
loope
rcl
or
(bad)
xor
cmp
mov
shl
and
rol
xlat
jns
sbb
xor
out
push
pop
mov
sbb
je
pop
jmp
leave
inc
add
out
mov
xchg
push
sti
mov
scas
push
dec
mov
jmp
add
xor
mov
push
jns
jmp
or
inc
(bad)
(bad)
sub
push
ds
push
in
sub
jae
repz
in
inc
jno
xor
in
xor
cmp
jbe
inc
mov
cmp
xor
mov
xchg
mov
mov
add
ins
popa
mov
adc
leave
stos
mov
and
adc
jle
repnz
push
sub
push
pushf
add
ret
cmp
and
mov
aaa
push
add
pop
in
cmp
inc
(bad)
mov
jecxz
arpl
js
sub
jbe
(bad)
adc
xchg
cli
mov
jecxz
lods
inc
adc
stc
in
shl
mov
xor
gs
pop
cmps
pop
ror
(bad)
ins
sahf
dec
rcl
adc
or
(bad)
jo
cmc
movs
sbb
jnp
push
adc
mov
popf
(bad)
scas
push
sbb
in
in
pop
jo
div
push
movs
ficomp
mov
ret
(bad)
push
mov
mov
sbb
shl
stos
(bad)
or
int3
or
sbb
pop
and
jmp
and
mov
jne
mov
mov
mov
xchg
ins
ds
mov
imul
add
jo
test
cwde
arpl
loope
or
sub
adc
mov
into
mov
ins
call
mov
pop
jnp
jge
jl
pop
or
fistp
test
and
pop
scas
pop
jecxz
pop
cmp
stos
jecxz
or
jge
outs
jl
in
cs
or
or
adc
mov
retf
repz
push
xor
push
push
jg
lods
jmp
and
lock
xchg
loop
(bad)
bound
(bad)
ds
inc
and
push
mov
dec
int
push
sahf
fwait
aaa
mov
ss
or
jmp
push
push
mov
cld
lods
retf
dec
xor
pop
pop
pusha
ja
das
pop
sub
hlt
test
push
es
adc
mov
or
pop
out
leave
ror
mov
out
mov
mov
nop
test
cmp
fld
cld
and
and
(bad)
aas
or
jno
sub
add
push
inc
loop
fisubr
xor
popa
dec
or
push
xor
and
jo
pop
add
pop
pop
lods
loopne
iret
pop
pusha
stc
enter
(bad)
nop
xor
jnp
xchg
sti
inc
(bad)
popf
fst
xchg
xor
dec
push
std
pop
sub
loop
in
jb
mov
jg
retf
and
and
pop
push
in
shr
ficom
cmps
mov
xor
dec
(bad)
add
rol
(bad)
fnstcw
adc
clc
imul
pop
cmp
ret
clc
sbb
popf
mov
daa
pop
(bad)
sar
cs
or
sbb
std
mov
inc
jecxz
push
std
shl
cmps
sbb
icebp
cdq
mov
cmp
pushf
sbb
leave
test
ja
jo
push
mov
mov
std
loope
pop
and
enter
and
pop
and
xchg
cmp
and
mov
movs
(bad)
jns
xchg
sbb
das
mov
mov
mov
push
pop
mov
pop
sti
scas
(bad)
ret
dec
lock
loopne
imul
jg
mov
cmp
in
and
cmc
ret
das
iret
aam
adc
rcl
dec
out
or
mov
push
ror
pushf
add
jg
fs
add
mov
add
mov
add
pop
lods
mov
mov
out
jbe
push
mov
inc
pop
mov
loopne
cmps
jnp
mov
es
xlat
jnp
pop
aaa
js
push
pop
xlat
out
mov
std
fwait
mov
test
cwde
arpl
dec
push
mov
bound
sbb
push
jg
add
call
(bad)
xchg
bound
test
jno
bndstx
push
into
pop
outs
mov
sub
cmp
test
add
neg
and
cmps
xchg
cdq
mov
push
stos
test
xor
sub
out
in
jmp
ds
lock
ret
stos
sub
pop
mov
rcr
icebp
sbb
or
inc
inc
sahf
leave
or
int3
or
mov
addr16
lods
and
je
mov
stos
jo
dec
pop
ja
push
rcl
les
div
(bad)
enter
adc
or
es
pusha
movs
cmp
test
mov
sahf
and
repz
fadd
xor
jmp
ret
cdq
aad
iret
repnz
lea
mov
data16
scas
cmps
xor
es
pop
sub
adc
mov
cwde
adc
xor
cmc
mov
mov
in
aas
pop
lods
dec
fnop
aas
pop
jecxz
test
les
adc
mov
ret
arpl
data16
inc
mov
xor
dec
mov
js
dec
out
in
repz
push
jl
pop
and
(bad)
rcl
xor
push
lahf
push
dec
fmul
cmp
test
test
xor
mov
jg
mov
mov
pop
cmc
sar
jne
icebp
loopne
jmp
popf
int3
sub
or
dec
or
sbb
and
out
push
mov
shl
jg
je
mov
jne
dec
call
inc
ja
cmp
in
pushf
out
lods
mov
or
test
rcr
fistp
inc
sub
dec
mov
pusha
jo
(bad)
lea
jnp
pop
pop
in
jb
repz
ins
push
push
repnz
and
aas
add
inc
push
imul
or
jo
daa
mov
test
fisubr
mov
cmp
adc
pop
adc
lock
mov
loop
cmps
push
in
pop
cmp
xchg
or
mov
jmp
or
mov
push
inc
mov
rcl
je
add
in
ret
div
bound
stc
lds
and
push
jno
pop
dec
imul
(bad)
adc
or
push
dec
inc
daa
js
(bad)
sub
clc
ds
inc
mov
pop
std
sub
addr16
(bad)
retf
or
jg
xchg
push
mov
les
je
sub
pop
jns
jg
jno
ret
sbb
lock
mov
loope
pop
adc
loop
out
xchg
xchg
inc
dec
push
and
pop
jle
mov
jmp
mov
sbb
jns
mov
fcomp
cli
movs
in
sahf
mov
loope
mov
sbb
sub
xor
adc
loopne
pushf
scas
mov
sub
cmp
pop
outs
sub
pusha
cmp
(bad)
adc
icebp
cld
sbb
inc
pop
mov
inc
jmp
leave
or
inc
sahf
iret
pop
push
(bad)
(bad)
pop
sub
mov
mov
nop
and
jmp
xor
test
stos
xchg
in
ss
inc
mov
jnp
rcl
pop
lds
xchg
stos
fisttp
xchg
mov
dec
sbb
adc
xor
loopne
xor
stos
or
xchg
mov
popa
cmps
fldenv
popf
fs
cld
aad
cmp
xchg
icebp
xchg
les
movs
aad
mov
cmp
or
or
pop
in
cmp
or
push
cmp
and
adc
repnz
rcl
cmp
mov
mov
mov
mov
jo
inc
daa
in
xchg
or
cmp
sub
xor
dec
mov
out
lds
adc
cld
xor
push
daa
add
sbb
push
sbb
mov
xchg
add
inc
nop
inc
adc
mov
je
push
call
lea
sbb
dec
icebp
sti
fcomp
and
into
cli
mov
test
mov
xchg
ret
lods
add
aaa
adc
fstp
add
push
mov
shl
leave
pushf
cmc
mov
mov
jne
in
sti
out
add
push
pop
or
mov
pop
gs
add
data16
std
aad
test
shl
adc
aaa
lods
inc
test
mov
dec
pop
stos
dec
mov
out
sbb
stc
pop
(bad)
pop
or
stos
mov
aaa
ins
fwait
sub
mov
in
cmp
sbb
dec
int
jo
sub
inc
test
push
mov
imul
repz
push
inc
jp
bound
sahf
xor
cdq
sbb
cmp
dec
test
xchg
in
xor
(bad)
out
ss
dec
imul
adc
sub
xchg
jl
jne
cmps
movs
adc
repnz
call
call
mov
sub
mov
cmps
inc
sbb
stos
pusha
jmp
xor
push
je
call
stc
rol
cmp
xchg
fwait
nop
call
aad
test
leave
inc
push
scas
adc
or
(bad)
(bad)
fisttp
movs
loopne
adc
sub
pop
jns
adc
std
neg
cmps
int
or
push
dec
xchg
mov
cmp
cmp
jge
inc
pusha
and
or
xchg
movs
ins
rcl
xor
fnstsw
stc
int
(bad)
(bad)
pop
int3
mov
in
jne
retf
pop
adc
jmp
shl
mov
mov
icebp
arpl
ficom
fwait
shr
or
in
dec
xor
(bad)
xchg
jno
cmp
out
shr
mov
or
test
in
push
movs
adc
fs
(bad)
push
dec
idiv
call
push
sahf
or
jmp
inc
lds
cmp
xchg
in
imul
cmp
mov
mov
mov
ss
sub
into
aam
je
mov
jle
push
mov
cmp
or
mov
cs
sbb
ror
sbb
ss
out
cmp
out
adc
xchg
inc
adc
in
and
mov
icebp
or
mov
jnp
push
xchg
sub
xchg
leave
adc
pop
inc
xchg
cmps
bound
gs
fisub
inc
mov
xchg
ss
aam
lea
(bad)
stc
cmc
fnsave
xor
adc
cmp
into
sbb
dec
(bad)
pop
mov
fisttp
stos
lods
sbb
mov
in
mov
repnz
in
test
rcr
xchg
fldpi
outs
aaa
jg
cmp
nop
fld
lods
mov
inc
push
cmp
mov
jbe
imul
enter
xlat
pop
mov
loope
adc
rcr
fnsave
adc
(bad)
fcomip
loope
push
sbb
aas
add
arpl
data16
dec
xchg
aam
shl
xchg
cmps
mov
mov
mov
jle
rcr
dec
pop
test
cmps
call
cmp
rol
into
push
aaa
imul
and
fidiv
xor
add
stos
jae
xlat
adc
dec
cmc
push
sbb
jmp
cli
popf
add
in
push
(bad)
div
lods
or
shr
xchg
in
sub
les
pop
inc
lock
mov
cmp
xchg
movs
cmp
xchg
adc
sbb
fwait
sbb
sbb
in
gs
mul
inc
scas
jae
fld
pushf
outs
jl
lock
xlat
int
jno
pop
add
adc
(bad)
movs
in
push
in
sbb
int
push
enter
sbb
push
lea
jno
retf
add
mov
mov
adc
retf
cld
push
push
(bad)
or
repz
fcom
cmp
adc
add
or
inc
jne
int3
or
shrd
or
and
jle
daa
dec
outs
xor
mov
out
stos
fild
fldcw
mov
cmps
push
scas
cli
inc
movs
adc
mov
fcmovne
add
(bad)
icebp
sub
push
fbstp
push
aad
in
dec
mov
pusha
or
fbstp
fwait
(bad)
daa
shl
xchg
repnz
sbb
xor
mov
xor
adc
mov
pop
clc
cs
adc
push
sub
pop
xchg
dec
sub
xchg
adc
stos
jmp
(bad)
xchg
add
sbb
cmp
outs
sub
sahf
jns
xlat
xchg
or
sti
sub
lods
sti
or
cmp
lds
jmp
xlat
cmp
pusha
dec
repz
mov
fiadd
push
ins
es
sbb
fs
idiv
int
push
add
pop
or
xor
xchg
popa
test
adc
in
aas
les
icebp
xchg
fisub
mul
or
jne
cmp
es
sub
xchg
push
adc
sub
popa
xor
pop
into
inc
cmp
cmp
outs
xor
sub
adc
arpl
stos
fisub
(bad)
mov
mov
jle
sub
sbb
jbe
scas
jo
leave
outs
call
push
pop
mov
into
cli
jbe
fcom
or
lds
arpl
daa
arpl
fisubr
push
mov
imul
xchg
fwait
mov
std
add
das
(bad)
xor
cld
xchg
cdq
imul
lahf
(bad)
pop
push
in
mov
pop
jns
fstp
xor
imul
mov
cmp
lea
sub
pusha
leave
adc
adc
rcl
retf
in
fldenv
jo
pushf
sub
fisubr
mov
lahf
cmp
cli
jbe
and
loope
cmps
push
and
test
movs
outs
and
addr16
mov
mov
push
popf
pop
out
xlat
hlt
add
jge
inc
in
test
hlt
(bad)
rol
xchg
les
das
push
leave
jle
adc
(bad)
je
loop
(bad)
mov
leave
jge
pop
or
int3
sbb
pop
aaa
retf
add
push
xchg
push
and
movs
push
cmp
sbb
pusha
sbb
out
mov
pusha
call
loopne
jae
push
scas
ret
xor
pop
mov
jbe
arpl
mov
add
xchg
inc
xchg
mov
psrlw
les
pusha
xor
(bad)
repnz
push
out
fwait
addr16
(bad)
call
shr
bound
xchg
mov
imul
ror
push
out
inc
dec
pushf
add
jle
cmps
mov
mov
pop
xor
aas
mov
ret
inc
xchg
push
inc
mov
xchg
mov
mov
dec
dec
lods
sub
jo
nop
scas
push
cmps
fisubr
jae
push
fcomp
outs
push
inc
add
cmps
mov
cmp
call
xchg
jmp
jo
or
in
xor
xor
mov
dec
sar
or
sar
pop
dec
xchg
sub
in
je
mov
repz
jge
test
add
mov
mov
adc
cmp
ds
pusha
shr
pop
(bad)
jmp
ror
push
pop
lock
add
xchg
dec
fadd
push
xlat
xchg
jo
jp
mov
gs
das
push
pop
stc
fs
cmp
mov
mov
fwait
xor
push
add
enter
push
dec
pop
repnz
int
std
push
and
jge
mov
int3
lods
stos
mov
sbb
jle
sbb
rcl
or
imul
mov
adc
mov
jle
inc
lods
sub
mov
pop
or
inc
add
xchg
dec
jg
hlt
data16
scas
pop
rcr
aas
les
test
mov
jo
in
push
adc
xchg
loop
push
popf
cld
mov
arpl
dec
xchg
push
sbb
mov
es
xchg
fist
nop
ror
and
cld
ret
cdq
jae
pop
inc
jecxz
and
mov
arpl
mov
sub
je
or
push
or
std
ins
jecxz
imul
xor
out
add
imul
push
pop
mov
aad
adc
jae
ret
mov
mov
adc
(bad)
mov
and
data16
jg
and
mov
mov
and
jmp
out
add
mov
aas
sar
std
ds
mov
cmc
adc
mov
and
cmps
aam
dec
inc
mov
mov
inc
inc
fwait
mov
and
call
loope
stos
(bad)
bound
sbb
or
in
pop
imul
jno
push
ror
bound
ds
out
xchg
inc
inc
mov
lods
lds
dec
repz
mov
push
cmp
sbb
mov
sbb
inc
dec
loop
aam
(bad)
dec
movs
jae
jb
push
(bad)
retf
xor
sub
mov
mov
and
dec
out
push
sub
and
mov
loopne
sbb
sar
dec
mov
das
sbb
jge
ins
aaa
cmp
int3
lock
adc
sub
xlat
sbb
adc
fisttp
or
icebp
ins
data16
mov
sti
add
xchg
sbb
or
xor
mov
and
(bad)
jg
test
in
leave
arpl
hlt
mov
mov
xor
loopne
pusha
fsubrp
mov
ret
xlat
or
hlt
loopne
iret
ins
mov
fidiv
movs
ins
push
shl
mov
jne
repz
and
pop
pop
mov
push
xchg
xor
ret
dec
jno
aaa
icebp
mov
xor
mov
or
cmp
hlt
mov
mov
adc
adc
ins
pop
jge
and
or
cmp
mov
jbe
inc
cli
dec
cmp
mov
mov
and
movs
std
test
mov
js
sbb
sti
sti
int3
pop
push
(bad)
xlat
in
pop
xchg
mov
dec
and
bound
mul
push
push
aas
cmp
push
mov
ror
enter
add
sbb
(bad)
fcomp
hlt
stc
cmps
add
jbe
sar
cld
(bad)
nop
(bad)
sub
js
sbb
loop
mov
cmps
clc
into
inc
xchg
in
cmp
mov
mov
enter
ret
inc
data16
jne
adc
xor
mov
(bad)
ss
inc
pusha
das
dec
repnz
xchg
cld
test
lahf
and
fwait
aas
loope
jbe
mov
sub
push
jecxz
adc
scas
adc
fs
or
push
inc
xor
sbb
push
dec
xchg
xchg
cmp
mov
pop
sahf
(bad)
aam
jb
jmp
pusha
call
(bad)
int3
xor
jae
fucomp
mov
rcr
sbb
inc
mov
sub
cld
es
add
mov
cld
mov
push
scas
add
xchg
sbb
aaa
add
cmp
int3
mov
or
fnsave
sbb
jb
lods
dec
iret
adc
add
movs
fistp
pop
shl
fld
xor
arpl
in
pop
mov
iret
jb
movs
imul
dec
add
inc
pop
inc
cs
jne
int
mov
arpl
imul
xor
mov
movs
test
mov
pop
jg
jg
and
cli
inc
cmps
retf
stc
(bad)
fisttp
jbe
inc
xlat
inc
out
test
add
or
nop
int
adc
psubsw
leave
aaa
mov
or
pop
jl
rol
(bad)
out
imul
sbb
mov
cli
or
cmp
aas
(bad)
pop
cwde
mov
sbb
inc
adc
pop
sub
aam
inc
push
fcom
xor
sar
add
push
xor
ror
cmp
mov
stos
iret
and
ret
mov
inc
push
lea
sub
daa
xchg
out
js
lods
cmp
jne
out
pop
jle
inc
or
int3
push
cmp
(bad)
jmp
xchg
cs
jp
jecxz
sbb
adc
sbb
xchg
xchg
hlt
inc
(bad)
popf
push
sbb
stc
push
fwait
dec
mov
pusha
sub
das
mov
stos
xchg
in
add
shl
hlt
lds
add
cmp
test
mov
mov
mov
fmul
push
jne
add
adc
mov
xlat
addr16
(bad)
or
jmp
pusha
sub
gs
ins
jmp
pop
push
stc
jbe
call
sbb
mov
pop
and
repz
loope
mov
inc
xchg
sti
cmp
mov
pop
dec
dec
dec
stos
repz
outs
bound
sbb
lods
lds
pop
div
dec
shr
int3
movs
mov
js
push
pop
ds
sub
push
or
in
cmps
adc
pop
ins
(bad)
imul
mov
pop
xor
adc
inc
ins
ret
mov
test
ins
push
jmp
add
addr16
push
pop
xchg
mov
cmp
jg
ficomp
jmp
cmps
cld
mov
push
std
inc
mov
(bad)
cmp
(bad)
pop
test
jnp
inc
mov
mov
fwait
cmp
stos
jno
popa
in
and
fiadd
fadd
push
les
push
mov
pop
sbb
adc
sbb
icebp
and
cmp
loop
cld
mov
cmp
jae
addr16
imul
(bad)
lods
xchg
push
sbb
jmp
jne
es
add
rcr
sub
test
cmp
mov
fdiv
xor
std
xchg
aam
daa
adc
int3
push
out
(bad)
cld
leave
retf
and
mov
and
dec
fadd
push
neg
inc
outs
and
jmp
push
and
or
pop
mov
out
or
mov
xor
jae
xchg
call
movs
cld
sar
xor
and
mov
sbb
jl
fist
xor
or
lock
push
into
fiadd
adc
jmp
lea
and
les
int3
jmp
jnp
cmp
xchg
rcr
rcr
xchg
(bad)
cmp
in
test
inc
push
cs
mov
add
dec
push
mov
inc
std
fisttp
lods
(bad)
xchg
ficom
dec
das
jp
clc
jl
ret
cmp
jecxz
xchg
(bad)
int3
mov
xor
inc
outs
ret
leave
jmp
mov
xchg
adc
jmp
stos
pop
aaa
mov
not
mov
out
fsin
dec
adc
pop
xor
test
dec
data16
in
scas
(bad)
movmskps
cmps
icebp
fcomp
sub
(bad)
in
loope
mov
hlt
out
inc
add
je
jg
ret
xchg
or
mov
jbe
pop
push
retf
out
add
mov
inc
jnp
mov
push
in
leave
loope
xchg
clc
idiv
out
outs
xchg
and
dec
sbb
dec
out
in
jmp
sub
push
and
and
push
dec
test
shl
pop
cmp
mov
mul
xor
mov
rcr
aad
cli
adc
jbe
es
int
xchg
xlat
out
mov
push
(bad)
dec
cmp
test
pop
test
sub
add
(bad)
push
sub
jp
fst
into
iret
pop
fcmovnb
ror
pop
and
adc
jns
mov
xchg
or
cdq
mov
or
push
movs
cs
mov
push
mov
ficom
cdq
imul
sbb
daa
pop
adc
cmp
push
inc
(bad)
mov
pop
push
into
mov
leave
mov
cli
adc
add
ficomp
sub
inc
sub
inc
mov
in
(bad)
repnz
lods
mov
ins
mov
fisttp
or
ret
scas
imul
ss
cmps
push
(bad)
cli
dec
leave
and
dec
and
xor
sbb
xor
or
dec
push
enter
sahf
mov
aam
cmp
fsub
jns
div
mov
sbb
(bad)
mov
in
sub
retf
icebp
ret
shl
xchg
pop
cmps
mov
inc
cmp
and
xchg
jae
lds
ds
jmp
push
or
sub
cmp
xor
call
mov
ss
cs
cmps
(bad)
fcom
jge
ret
test
sti
int
sub
(bad)
shl
(bad)
in
repz
pop
inc
sub
jmp
xor
pop
xor
dec
jne
stos
inc
jb
and
xchg
mov
push
xlat
sar
inc
pop
xchg
fsubr
test
push
(bad)
fsubr
stos
stos
add
cmp
retf
pop
cmp
mov
leave
addr16
mov
sub
mov
adc
mov
leave
push
or
imul
repz
in
jmp
jb
mov
dec
pop
loope
int3
out
and
movs
add
(bad)
and
nop
call
fucompp
loop
mov
push
inc
test
push
sbb
test
cld
cli
call
sub
xchg
mov
scas
mov
in
mov
adc
lea
mov
imul
adc
repz
sub
ds
imul
mov
pop
jns
inc
mov
add
jbe
stos
cmps
lahf
ret
inc
(bad)
call
pop
lods
fcom
jb
lock
and
jecxz
mov
cmc
fistp
and
add
ins
push
dec
ds
out
mov
retf
xchg
mov
add
jb
jo
mov
sbb
cmps
xchg
aam
xchg
imul
fsubr
jg
sar
loopne
push
and
fucomi
repnz
xor
inc
inc
icebp
imul
xor
jp
pop
jmp
stos
xchg
test
mov
cli
jns
nop
enter
cmp
out
lahf
push
mov
xchg
sub
push
and
cmps
mov
mov
daa
(bad)
fcom
lahf
shl
jmp
xor
lods
or
or
push
mov
push
add
push
fistp
out
leave
jmp
pop
sbb
dec
inc
push
fiadd
mov
nop
push
(bad)
push
jg
call
mov
test
mov
cmp
mov
xchg
nop
add
ss
and
sub
scas
xchg
xchg
cli
pop
xchg
std
int3
sbb
pop
cmps
xchg
js
cmps
out
aas
pop
gs
stos
(bad)
lods
sbb
mov
into
pop
adc
pop
jo
dec
mov
sbb
mov
mov
and
fcmovbe
add
(bad)
jl
fsubrp
mov
test
xchg
loope
xor
popa
jge
sub
push
mov
cmp
movs
xchg
sub
jmp
push
(bad)
sbb
shr
divps
xchg
sbb
rol
pusha
je
cmc
lock
adc
rcl
test
push
or
cmp
clc
les
inc
or
ret
inc
push
mov
cmp
inc
movs
xchg
jl
lods
push
scas
sbb
cmp
jp
jp
jp
je
std
xor
addr16
xlat
add
jo
xor
inc
aam
hlt
popa
into
add
aam
popf
xchg
push
jp
movs
psrld
nop
out
int3
cmp
mov
push
mov
mov
adc
shr
cmp
test
mov
sub
imul
inc
aas
stos
test
push
daa
cmp
and
mov
div
pop
data16
inc
loope
xchg
xchg
fmul
add
mov
lock
xlat
(bad)
rol
xchg
cmp
daa
stos
outs
movs
hlt
(bad)
pop
rcr
dec
or
mov
movs
adc
popa
xor
and
pop
rol
sahf
inc
cmp
dec
xlat
and
data16
dec
mul
(bad)
adc
imul
dec
xchg
inc
outs
xchg
adc
out
jmp
push
shl
push
xchg
pop
je
data16
and
outs
push
or
dec
dec
xchg
xor
(bad)
in
mov
pop
in
lock
push
or
rcl
jnp
mov
lods
fist
push
dec
sub
dec
add
push
in
cmp
push
(bad)
mov
rcl
cmp
dec
int3
adc
(bad)
neg
movs
push
stos
leave
dec
or
cdq
xchg
ds
out
jecxz
stc
movs
rcl
mov
dec
jmp
nop
outs
int3
push
jge
jge
and
cmc
int3
test
jp
enter
xchg
adc
dec
loopne
jmp
push
xor
or
cmp
js
sbb
sbb
jns
loope
inc
fsubr
mov
std
sub
jmp
mov
pop
leave
loop
push
cwde
or
gs
imul
sbb
and
sub
push
cli
mov
adc
shr
leave
mov
dec
lea
inc
xor
cmp
or
push
pushf
jnp
inc
clc
nop
inc
cmc
jmp
in
(bad)
push
mov
sub
mov
and
adc
mov
pushf
inc
inc
mov
sbb
not
mov
rcl
ss
sub
or
jae
shl
cmp
or
mov
sub
jne
ret
push
xchg
inc
or
mov
data16
stc
stos
rcr
int3
mov
into
fld
jbe
sbb
mov
mov
jo
int3
adc
movs
ffree
shl
les
div
push
inc
jl
sub
adc
iret
xlat
jmp
dec
inc
xchg
scas
bound
mov
sub
or
aad
sbb
cmp
cli
adc
mov
out
adc
inc
jmp
ds
push
mov
shl
iret
into
xor
and
or
dec
call
push
adc
cdq
arpl
test
and
inc
jmp
add
add
cmps
out
dec
popa
pop
in
sub
push
adc
or
mov
mov
stos
loope
pop
mov
or
fisttp
jl
movs
push
inc
xor
inc
test
(bad)
xor
ja
loop
pop
dec
stos
mov
add
or
or
mov
sbb
loop
retf
lock
scas
mov
or
loop
pop
les
into
sar
xor
cmps
test
adc
mov
out
lock
loopne
jno
mov
mov
jno
mov
mov
gs
add
jmp
jb
xor
cs
ins
inc
lods
push
pop
lea
xor
and
jg
je
jmp
movs
retf
xchg
test
adc
mul
arpl
(bad)
stc
inc
ds
aad
and
addr16
xor
int3
je
int3
push
ret
adc
xchg
mov
or
leave
(bad)
fwait
push
fwait
jmp
bound
clc
push
popa
jecxz
outs
adc
stc
(bad)
cld
push
jbe
aad
in
xchg
dec
movs
cs
xchg
or
ins
rcr
scas
cld
mov
or
mov
pusha
mov
adc
pushf
sub
sti
add
xchg
push
aas
fxam
outs
cmp
jmp
push
bound
push
jle
pop
sub
(bad)
scas
test
lods
test
sbb
bound
lods
aaa
in
lods
push
iret
lock
xor
aam
sub
in
aad
in
cmp
dec
inc
xchg
ret
cmp
(bad)
cld
mov
ss
inc
inc
add
loope
and
mov
mov
gs
test
dec
in
xlat
jmp
or
hlt
test
dec
xchg
outs
push
addr16
mov
call
pop
xor
pop
mov
mov
aam
cmp
fsincos
int3
mov
in
pop
mov
es
push
dec
mov
pusha
sbb
sub
(bad)
arpl
jbe
dec
pop
in
inc
cs
bound
cmp
jnp
sbb
dec
(bad)
mov
cwde
pop
jns
add
sahf
test
sbb
jecxz
shl
jp
sub
inc
je
pop
sbb
adc
jl
push
mov
shl
psubusw
sub
and
push
retf
bound
std
fisttp
imul
mov
ret
ffreep
or
fld
in
mov
mov
sbb
add
mov
sbb
test
stc
or
jmp
div
push
test
(bad)
or
(bad)
nop
cmp
imul
sub
pop
push
ss
sahf
cmc
sbb
(bad)
stos
ss
adc
ss
push
stos
ss
inc
pop
mov
(bad)
icebp
mov
in
pop
cmp
jge
sbb
jns
test
xchg
or
mov
jmp
imul
aad
loopne
mov
cmc
mov
sub
xchg
aad
mov
jmp
fadd
push
not
push
xor
sbb
dec
shl
sub
pop
sti
add
loope
sbb
out
cs
js
cmps
push
out
add
out
stos
xor
fnstcw
and
push
xchg
jae
adc
scas
pop
cdq
sub
in
xchg
xchg
and
pop
mov
xchg
(bad)
outs
sbb
test
stc
out
ja
movs
cmp
mov
adc
in
test
loop
sbb
dec
mov
int
sub
fs
jl
cs
aas
adc
imul
mov
jle
sub
pop
mov
push
add
mov
add
fbld
dec
jmp
sar
(bad)
or
push
mov
push
bound
sahf
rcr
mov
bound
out
mov
mov
les
mov
and
mov
aas
xor
(bad)
loopne
std
cdq
or
add
jmp
cld
ins
jecxz
mov
fbstp
dec
lock
and
in
int
jge
lods
and
inc
in
into
imul
ins
xor
ins
lods
(bad)
(bad)
or
sub
add
sub
lahf
add
mov
fs
cmp
mov
inc
xor
cmps
inc
(bad)
add
loopne
out
jmp
jl
inc
adc
xor
into
jp
jecxz
shr
push
scas
jg
fnstenv
add
xor
xor
ret
fisub
stos
fstp
push
add
pop
test
jl
into
aas
cmp
xor
sti
mov
ins
xchg
xchg
mov
or
add
sbb
(bad)
popf
mov
pop
test
data16
jmp
inc
cdq
sub
sbb
shr
es
outs
adc
push
je
test
inc
adc
mov
mov
lahf
adc
inc
push
js
cli
or
je
inc
sub
cmp
mov
dec
push
out
fs
and
push
mov
inc
xor
push
add
in
stc
lds
mov
xor
and
jns
fsubr
in
sbb
jge
ret
inc
fst
dec
and
mov
jl
mov
mov
js
movs
movs
add
into
xchg
push
movs
in
(bad)
fs
or
push
stos
mov
pop
xchg
push
cmc
push
movs
push
mov
mov
data16
xchg
pop
cmp
fidiv
mov
cmps
fdiv
cli
sbb
imul
pusha
aam
int3
inc
out
into
(bad)
push
pop
inc
into
jmp
scas
scas
xchg
dec
jns
in
retf
daa
in
push
xor
mov
retf
test
loop
mov
fild
ja
fdivr
dec
inc
sbb
repnz
jbe
repz
pop
pop
sbb
xchg
cld
ret
cld
dec
imul
add
mov
xor
mov
cmp
popf
mov
(bad)
js
fld
scas
test
mov
das
rcr
push
jecxz
inc
repnz
sbb
pop
adc
jg
cmp
fsub
xor
hlt
ins
adc
jae
mov
out
push
lock
push
mov
cmp
in
pop
push
dec
cmp
into
sti
pop
out
or
xchg
ror
mov
int3
cmp
inc
sub
mov
push
lods
cmc
daa
sbb
rcl
dec
lods
inc
jp
jg
loopne
aas
inc
inc
fdivr
cld
ins
and
cmp
sbb
retf
xlat
(bad)
pop
adc
ins
pop
push
push
and
rol
es
test
in
xchg
loope
sub
fisub
stc
jg
out
and
push
jmp
sub
arpl
dec
sub
movs
xchg
inc
inc
add
xchg
mov
adc
ror
test
mov
push
enter
pop
xor
ss
cdq
movs
and
push
lods
dec
scas
rcr
mov
xor
mov
and
and
dec
popa
(bad)
push
inc
movs
mov
xchg
xor
sub
mov
pushf
and
add
nop
mov
ret
leave
adc
loopne
cdq
xchg
into
aaa
dec
inc
inc
mov
movs
ror
sub
adc
call
sub
pop
mov
pop
mov
cmc
or
dec
inc
push
or
test
or
mov
lds
out
imul
push
mov
mov
cmp
imul
call
sub
sub
inc
getsec
sbb
push
inc
int3
sbb
add
xchg
adc
repz
mov
ja
call
mov
sub
std
inc
jge
js
popf
xchg
int
pop
mov
pop
mov
push
arpl
in
xchg
push
fwait
icebp
mov
jl
dec
xor
call
rcr
outs
mov
push
add
repnz
pop
mov
pop
dec
in
dec
add
nop
inc
rcr
xchg
push
adc
stos
dec
sahf
mov
jmp
outs
pushf
std
mov
or
inc
add
int
jecxz
cs
pop
(bad)
movs
inc
xchg
repnz
push
adc
call
gs
inc
test
outs
fadd
mov
imul
and
and
pop
push
push
loop
arpl
js
mov
int3
out
jmp
repz
add
push
adc
push
fs
fs
sub
cmc
cmp
loop
out
or
in
fcom
out
lahf
mov
daa
add
jmp
mov
jle
sti
cld
jecxz
dec
fwait
jbe
fld
out
sub
fidivr
push
dec
sub
mov
pop
ja
inc
dec
push
ret
pop
mov
and
pop
das
mov
jo
ins
shl
pop
test
mov
sub
popa
fldcw
push
cmp
xchg
push
data16
mov
mov
out
je
aad
lahf
cmps
xchg
popa
adc
mov
ficom
mov
mov
lock
ss
mov
push
mov
dec
add
sbb
test
int3
aas
mov
mov
jmp
aas
sbb
ja
in
cmps
pop
rep
add
inc
int
or
enter
out
jnp
cmp
push
mov
sbb
or
sti
and
std
(bad)
in
jg
push
js
arpl
loop
cli
pusha
ss
add
adc
mov
jmp
out
fcomp
call
sub
outs
and
adc
or
mov
in
and
int3
ret
int
fwait
inc
push
out
adc
and
int
rcl
test
inc
mov
lock
jnp
adc
jp
jmp
stc
fistp
adc
rol
imul
push
shl
das
fst
mov
sbb
fistp
pushf
mov
and
or
inc
aaa
dec
stos
or
not
in
and
xor
push
jle
out
jmp
into
cmp
out
(bad)
push
test
lods
or
jo
mov
mov
and
mov
add
iret
push
cdq
mov
xchg
retf
loop
and
inc
sub
ss
pop
xchg
loopne
adc
pcmpgtb
inc
push
stc
ret
mov
sub
fcom
(bad)
inc
pop
adc
mov
xor
lods
loop
retf
(bad)
loop
(bad)
push
repz
int3
xor
cmp
inc
icebp
pusha
shl
leave
or
inc
pop
pop
adc
aas
movs
xor
cmp
dec
dec
fwait
jecxz
or
enter
jmp
and
int3
fnsave
or
neg
enter
mov
or
lods
(bad)
jmp
call
(bad)
adc
cmp
je
add
lahf
sub
dec
sbb
inc
mov
retf
retf
addr16
mov
dec
jecxz
mov
pop
je
aad
adc
pop
xchg
aas
jp
xchg
scas
shr
dec
xor
into
or
push
in
push
adc
fs
fdiv
(bad)
fmul
fcomp
cwde
mov
test
inc
les
mov
retf
and
jg
or
out
(bad)
jb
and
out
into
or
push
fiadd
pop
push
(bad)
popf
(bad)
mov
sbb
vrcpps
out
cmp
add
jnp
mov
aam
adc
push
sub
ret
clc
pushf
jmp
and
sbb
aad
inc
int3
scas
pop
push
movs
pop
in
(bad)
cmp
inc
xchg
shr
xor
(bad)
addr16
jmp
aad
mov
cdq
(bad)
adc
jb
jecxz
test
ficomp
pusha
jmp
ss
xor
and
xor
push
pop
mov
dec
ins
xchg
mov
push
mov
mov
nop
stc
push
int3
dec
js
mov
mov
movs
push
int3
lds
push
les
sub
jbe
add
push
(bad)
data16
add
sub
mov
data16
pop
mov
pop
int3
hlt
lods
test
adc
jne
neg
jns
and
clc
pushf
mov
and
mov
pop
imul
jmp
xlat
jns
outs
nop
add
mov
pop
xchg
fbstp
mov
inc
and
in
test
xor
dec
test
push
or
repz
xor
in
mov
dec
pop
jp
jno
call
iret
cmp
or
pop
hlt
dec
lahf
xor
mov
sbb
cmc
xchg
add
mov
push
icebp
cmp
ror
fcomp
in
jns
dec
jmp
pusha
loopne
inc
stc
repz
mov
std
stc
pushf
jae
push
iret
sub
loope
dec
test
call
push
retf
push
sbb
pop
shr
sbb
int
mov
cmc
inc
or
aam
ins
fs
cs
imul
les
mov
sbb
dec
add
popf
in
bound
add
retf
stc
imul
iret
adc
mov
sub
cmc
retf
xchg
bound
cmp
(bad)
ins
add
cmp
aas
cmp
icebp
cmp
movs
jne
sbb
push
loopne
popa
xchg
cmp
adc
outs
(bad)
push
add
push
mov
js
mov
(bad)
aad
retf
mov
pop
mov
sahf
(bad)
add
das
push
mov
mov
pop
adc
cmp
dec
mov
shl
in
jbe
repz
outs
jecxz
lods
aas
adc
jnp
pop
ror
psubsw
or
(bad)
mov
neg
cld
mov
(bad)
les
stc
mov
enter
push
call
cmc
out
jecxz
push
cs
sub
jge
mov
inc
add
dec
pop
mov
jmp
jmp
ficomp
stos
scas
dec
std
cmp
push
pop
adc
inc
mov
and
cmp
pop
cmp
jae
icebp
jg
mov
in
jmp
dec
or
push
cmp
or
ror
aam
xlat
sbb
mov
jns
push
ds
mov
pusha
popf
mov
pop
int
jl
scas
cmp
inc
cmp
cmps
sbb
sbb
cmp
pop
sbb
sahf
outs
enter
imul
iret
call
fdivr
das
inc
jns
mov
gs
pop
push
es
inc
xlat
fs
mov
inc
pop
pop
sub
push
mov
data16
bound
add
or
stos
lea
add
repnz
sbb
add
lock
push
sbb
push
inc
cmp
sub
xchg
popf
scas
aad
jmp
ret
std
xor
ja
adc
sub
xor
sbb
pop
rcr
cs
idiv
mov
pop
adc
sbb
or
ja
mov
mov
mov
test
imul
js
je
inc
dec
stc
jmp
test
aad
cmp
retf
imul
daa
nop
adc
arpl
test
mov
nop
in
mov
push
stos
cmp
stc
cwde
jl
into
fsubr
outs
stos
cmps
loopne
es
or
out
mov
loope
dec
push
add
mov
sbb
mov
jae
frstor
popa
icebp
movs
mov
and
test
ins
jl
sub
jo
push
xor
push
dec
icebp
test
nop
pop
or
sahf
mov
bnd
fnstcw
cld
lods
arpl
test
icebp
xor
jge
ror
ins
mov
or
fcomp
fnsave
into
ins
jae
scas
add
cld
mov
(bad)
call
mov
in
add
jae
pop
pop
rol
jp
loopne
call
movs
cmp
or
pop
fisub
ret
fxch
int
push
xchg
pop
data16
cmp
inc
push
mov
outs
mov
push
fcom
shr
loopne
push
js
jl
add
jmp
pop
and
mov
stos
sbb
movs
or
leave
xchg
(bad)
fld
cmps
iret
pop
std
lds
pop
popw
pop
push
jae
dec
mov
sbb
lea
jl
aas
xchg
aas
push
inc
cmp
push
jno
push
adc
mov
cmp
adc
cmp
xor
pop
cmps
adc
into
mov
shr
add
jle
nop
dec
fild
lods
jns
cli
shr
sub
adc
ins
int3
pop
xor
not
fist
scas
cmp
das
fs
add
in
int3
cmp
cmc
mov
push
or
shl
lea
fmul
mov
xor
fiadd
mov
push
jno
mov
xor
hlt
pop
ins
fstp
fnstsw
jmp
sub
and
shl
push
cmp
cmp
or
outs
xchg
xchg
ret
dec
push
sahf
daa
bound
dec
xor
mov
jne
xchg
fdiv
adc
mov
popa
xchg
test
(bad)
xor
adc
std
push
test
cmp
jecxz
jno
cwde
sub
arpl
je
aad
cmps
push
xlat
(bad)
(bad)
ja
loopne
cmps
jne
in
dec
or
(bad)
xor
test
add
mov
gs
pushf
mov
push
xlat
aam
pop
stos
test
hlt
cmp
in
test
mov
mov
retf
push
mov
sti
cmp
rcr
cdq
adc
(bad)
adc
nop
leave
add
aas
add
pop
sahf
test
push
jge
aaa
pop
test
adc
mov
ficom
leave
cld
inc
xchg
ret
loope
fimul
jmp
call
xor
rcl
jae
add
jmp
push
lods
loopne
xchg
ins
add
mov
rsm
mul
ja
ins
data16
add
pusha
pop
out
adc
jecxz
pusha
inc
push
mov
fiadd
or
and
(bad)
shl
fcomp
and
jg
mov
sub
pop
ret
mov
mov
inc
pop
ret
ds
inc
lea
xor
popf
jae
mov
cmp
jle
outs
scas
pop
aam
adc
les
sub
inc
xor
xchg
addr16
dec
stc
cmps
pop
bound
xchg
and
retf
xor
jp
sub
and
movs
movzx
mov
jl
in
inc
or
sahf
and
lds
push
jl
nop
dec
addr16
fbld
lea
xor
in
in
add
add
pushf
jnp
mov
cmps
add
ficomp
jmp
mov
sub
and
jae
push
test
leave
jmp
leave
mov
test
inc
xchg
xchg
mov
nop
push
add
dec
add
call
es
in
mov
aaa
sub
push
inc
call
retf
and
add
pop
cmp
shr
rol
dec
outs
mov
fsub
sti
mov
pop
ds
pop
pop
xchg
movs
retf
sbb
push
call
fisub
jmp
xor
lods
mov
and
fdivr
pop
or
add
out
inc
pop
fcomip
test
shr
xor
movs
cld
hlt
push
stos
jns
and
addr16
add
jb
dec
test
rcr
jne
mov
adc
mov
dec
gs
mov
out
jl
ret
ret
jns
push
pop
imul
mov
lods
nop
(bad)
shl
dec
mov
(bad)
jle
pop
cld
sub
call
pop
sar
or
retf
cdq
daa
pop
dec
repnz
add
mov
xlat
int
jne
stc
in
push
jmp
test
daa
jnp
cs
sbb
xor
xor
fsubr
movs
aad
or
lods
imul
stc
add
push
push
adc
xchg
je
(bad)
(bad)
xchg
cli
add
jae
push
out
mov
cdq
mov
dec
pusha
dec
mov
test
test
inc
sar
fisubr
mov
into
push
jmp
sub
or
and
hlt
shl
sbb
out
test
cld
add
outs
fld
jg
dec
mov
adc
pop
and
repz
cmp
sub
adc
scas
dec
xchg
stc
loopne
cmp
pop
in
int3
stos
sub
cmp
pop
push
mov
xchg
dec
adc
je
fwait
(bad)
cmp
loope
push
fdivr
dec
jno
cli
ret
ja
cld
pop
push
retf
mov
jno
into
scas
scas
cld
in
inc
jbe
and
imul
mov
dec
mov
loopne
add
test
shl
arpl
push
repz
dec
outs
jmp
mov
jmp
addr16
vpsrlq
out
sbb
jmp
push
cli
push
into
pop
daa
xor
shl
jno
jbe
and
sub
retf
mov
or
xchg
jae
in
jl
outs
mov
pop
push
lods
test
pop
and
das
outs
fist
xchg
shl
mov
adc
cmp
int3
inc
add
daa
xchg
inc
mov
cmp
loope
lahf
stos
or
mov
pop
gs
lds
scas
sbb
inc
call
jns
ds
fsub
adc
inc
xchg
aad
mov
add
jbe
xor
popf
(bad)
mov
jo
dec
sub
lods
inc
cmp
adc
xchg
jnp
or
xchg
sbb
fst
mov
hlt
mov
mov
pop
shl
in
xchg
ja
inc
cmp
jp
xor
scas
dec
in
adc
ficomp
cmp
test
test
xchg
xchg
fisttp
jl
dec
xchg
sub
es
stc
ret
add
dec
sbb
ss
pushf
pop
push
push
inc
dec
pusha
shl
fwait
jmp
xchg
mov
aas
scas
int3
xchg
and
imul
mov
xor
into
test
jno
ins
add
sub
ds
xchg
add
lods
in
sbb
xchg
cmp
in
addr16
or
and
mov
dec
in
pusha
(bad)
js
mov
jmp
jae
stos
dec
xor
mov
lea
pushf
push
pop
cmp
in
and
jmp
xor
pop
add
mov
or
mov
fadd
(bad)
jo
ds
imul
jb
js
xchg
and
cmps
or
leave
clc
cmps
(bad)
mov
mov
cmps
xchg
repnz
sub
es
in
or
xchg
and
push
out
sbb
cmp
jg
je
mov
sub
lahf
push
xlat
dec
in
lahf
push
pop
ficom
pop
scas
int
stos
mov
cmps
lds
push
test
leave
pop
mov
test
repz
call
sub
push
lock
xor
and
mul
xor
out
dec
jge
mov
test
cmp
sub
cmp
out
ins
cmp
stc
cmp
adc
inc
call
and
dec
dec
mov
ins
adc
in
jo
mov
push
add
ins
adc
cmp
sub
adc
test
mov
add
cwde
clc
sub
mov
movs
or
call
loop
rcr
fnstsw
or
rcr
test
je
js
adc
add
dec
mov
cdq
adc
mov
dec
sub
mov
jl
imul
les
ficomp
sti
popf
imul
scas
jae
push
prefetch
aaa
out
jae
mov
xchg
bound
push
int3
push
and
pop
inc
sub
cmps
cld
sbb
cmc
jno
cli
xlat
int3
imul
add
push
jecxz
fucomi
movs
xor
repnz
dec
movs
inc
jns
jmp
aam
pop
pop
fdivr
aaa
aaa
xlat
add
in
xchg
push
xor
add
jns
ins
sbb
mov
push
jl
loop
fsubr
inc
scas
shr
xchg
int3
add
jl
jmp
mov
jl
sub
rol
cmp
dec
push
int
outs
shr
sub
ret
jg
inc
push
data16
inc
push
xor
ss
or
add
mov
dec
mov
mov
xor
fistp
add
pop
or
add
xor
or
cli
cmp
in
cwde
push
rcl
jb
jle
sub
mov
jae
or
pop
outs
(bad)
je
mov
cmps
mov
add
pop
into
pop
jle
push
bound
xor
mov
and
fist
dec
jo
test
adc
adc
aaa
push
and
ds
mov
add
movs
push
bound
add
movs
xor
add
or
add
nop
mul
std
pop
(bad)
push
leave
scas
push
pusha
iret
mov
dec
cmp
jp
sub
mov
xchg
or
fisubr
add
popa
imul
add
cli
ds
pop
add
mov
mov
clc
cmp
retf
dec
(bad)
fist
pop
inc
aam
inc
jp
pop
push
add
xor
addr16
fist
call
cmp
add
idiv
jl
push
jbe
inc
xchg
and
mov
pop
mov
mov
int
cmp
jnp
in
push
loope
add
or
imul
shr
inc
mov
cmp
mov
jmp
xchg
inc
pop
inc
add
pop
fsub
add
xchg
pop
call
out
icebp
retf
xchg
push
stos
scas
mov
mov
jne
aas
and
inc
push
and
mov
js
push
add
arpl
out
mov
push
ins
mov
out
and
or
popa
outs
out
lock
and
sbb
leave
mov
mov
fbstp
out
jne
mov
outs
in
push
fisttp
inc
outs
ds
addr16
jae
adc
xor
stos
or
sub
mov
jp
fstp
out
pop
cmps
jns
add
dec
ins
ss
pop
outs
int
int
cmc
mov
lods
sahf
pop
push
call
fwait
sbb
or
cmps
fld
sti
push
xor
push
xor
loopne
clc
fdivp
pusha
sti
leave
cmp
retf
mov
shl
dec
scas
push
lds
cmp
inc
push
mov
ds
(bad)
repnz
sub
and
inc
cmps
ret
sbb
cmps
iret
jle
enter
fincstp
retf
xchg
fist
and
inc
and
(bad)
and
pop
push
xchg
sbb
movs
outs
(bad)
and
test
shl
and
mov
jg
scas
(bad)
ds
call
mov
cmc
cmp
xchg
shr
mov
fsubr
test
or
cmp
inc
adc
ror
ins
cwde
mov
push
dec
loopne
fsub
xchg
(bad)
pusha
jbe
or
test
jne
add
pop
and
sub
out
cli
xor
int3
sbb
in
jmp
pop
xlat
dec
call
aad
push
std
fwait
lock
pop
jbe
mov
call
sbb
dec
pop
ss
es
in
jge
fwait
mov
out
push
ss
cs
dec
mov
(bad)
std
mov
fisubr
sbb
out
mul
pop
sbb
xor
(bad)
popf
imul
in
add
cmp
outs
retf
jbe
adc
adc
or
mov
ds
icebp
mov
mov
mov
lea
inc
or
(bad)
mov
dec
iret
sar
pop
xchg
fnstsw
pop
scas
xchg
jg
xor
mov
mov
sub
in
push
mov
mov
adc
push
fnstsw
or
adc
rcl
arpl
push
inc
sbb
or
push
add
and
cld
stos
movs
cmp
sbb
iret
adc
add
push
cmp
jno
jo
xchg
jg
cmp
idiv
cmp
fs
arpl
jb
push
and
inc
dec
(bad)
inc
or
sbb
mov
and
js
push
add
lods
cmp
xchg
mov
rol
mov
mov
into
icebp
and
mov
sbb
cli
out
int3
ja
mov
shr
add
push
ror
xchg
adc
mov
ins
cmps
mov
frstor
rcr
cmp
bswap
sbb
jmp
push
inc
inc
div
fbstp
and
inc
loopne
fidivr
mov
sub
lods
loope
pop
mov
dec
cld
jge
push
les
sub
pop
bound
pop
mov
(bad)
mov
stos
push
cmp
pop
push
jne
or
rcr
push
adc
and
push
hlt
pop
and
xor
repnz
cmp
(bad)
mov
and
and
mov
and
cli
mov
adc
jae
test
dec
(bad)
dec
fidivr
ret
xchg
fstp
adc
shr
dec
pop
push
dec
fs
fs
imul
inc
test
mov
jo
ja
xchg
adc
cmps
test
cdq
imul
inc
cwde
arpl
and
push
xor
mov
or
ds
add
imul
das
cvttps2pi
clc
repz
cmp
mov
mov
gs
js
fs
jnp
cs
stos
and
imul
add
ret
mov
frstor
push
shr
xchg
xchg
repz
(bad)
xor
xlat
push
lahf
mov
mov
mov
dec
push
xor
cld
pmaddwd
aam
test
sbb
inc
fs
mov
inc
mov
sar
daa
inc
add
cwde
xor
loopne
pop
add
enter
dec
lods
movs
xor
cmc
rcl
(bad)
cwde
jp
inc
addr16
sbb
out
imul
dec
call
pop
iret
sub
test
push
data16
retf
and
arpl
lds
repz
pop
jb
test
lds
fwait
xchg
cmp
sub
cmps
mov
add
inc
xchg
xlat
inc
and
inc
inc
scas
sbb
cmp
jo
jge
test
inc
je
das
sbb
mov
xchg
xchg
pop
arpl
jmp
ins
adc
int
jbe
xor
clc
and
mov
mov
sti
push
dec
mov
lods
das
fcomip
push
lahf
mov
(bad)
arpl
sbb
dec
xor
jb
push
mov
es
test
fbstp
fcmove
scas
jp
sbb
and
neg
add
aaa
aam
mov
mov
in
pop
in
retf
fisttp
out
(bad)
shl
xor
mov
in
fs
xchg
sub
sub
mov
lea
in
mov
out
cmp
sbb
cmps
jb
stos
push
add
inc
push
or
jbe
and
fisub
jmp
inc
test
test
in
mov
popf
mov
inc
inc
fdiv
and
sub
mov
ficomp
xchg
sbb
dec
dec
(bad)
pop
ds
into
mov
call
jbe
gs
sbb
imul
std
dec
ss
pop
mov
js
xchg
mov
push
jp
std
in
adc
scas
add
xor
inc
cli
jbe
adc
and
hlt
adc
loopne
mov
adc
and
leave
push
lods
jle
jp
cld
fwait
call
pop
jl
out
outs
mov
dec
aaa
stos
mov
cld
popa
aas
mov
pop
lds
lock
inc
loope
cmp
sti
je
jae
in
jne
inc
imul
pop
dec
retf
inc
in
test
(bad)
stc
in
push
jp
rol
hlt
mov
or
ret
jmp
bound
push
or
imul
push
xchg
mov
jge
adc
pop
xor
aaa
fild
out
repnz
jl
lea
mov
cwde
pop
inc
ror
xor
out
pushf
push
sbb
fistp
xchg
jp
mov
mov
sub
enter
cmp
push
ins
adc
icebp
and
xchg
fst
mov
popa
aas
mov
cmp
fstp
cmp
mov
scas
(bad)
xor
ror
and
mov
es
retf
(bad)
pushf
pop
inc
push
clc
xor
jae
inc
jne
(bad)
mov
cwde
sbb
jmp
ja
pop
movs
pop
and
scas
xor
mov
movs
pop
mov
out
mov
outs
sub
jbe
mov
pop
mov
sub
clc
in
pusha
mov
clc
fs
inc
or
jbe
or
scas
ret
xchg
inc
dec
and
xchg
mov
dec
adc
dec
xor
and
push
xor
repz
sub
adc
inc
inc
outs
dec
xchg
addr16
bound
or
test
cmc
jo
push
(bad)
fdiv
inc
pop
test
mov
nop
mov
call
enter
sbb
jnp
mov
shl
ins
dec
in
mov
inc
clc
jbe
fistp
mov
jmp
pop
sub
jle
test
or
sub
aam
sti
jne
dec
scas
ficomp
cmp
xor
xchg
ud0
cmp
in
adc
mov
repnz
mov
pop
and
aam
scas
dec
jle
inc
arpl
push
dec
sti
movs
jne
or
fild
pop
jne
adc
dec
rcl
daa
(bad)
mov
(bad)
sbb
xchg
fcom
pop
dec
std
leave
push
inc
repnz
into
in
or
push
lock
int
mov
add
xchg
ins
add
out
jo
jecxz
push
in
(bad)
aas
(bad)
int3
xchg
hlt
and
or
sbb
lods
call
push
or
push
fsubp
rcr
mov
or
out
fld
push
cmp
les
jle
pushf
mov
push
xchg
cli
or
test
adc
mov
and
dec
int
je
mov
movs
mov
sbb
mov
test
jg
or
(bad)
jb
mov
jo
add
push
sbb
mov
aas
ins
sti
and
and
ja
or
mov
aas
cmp
push
mov
mov
pop
lods
cli
js
jmp
mov
pop
adc
(bad)
xchg
pushf
sbb
and
jnp
ret
xor
rcpps
rcr
in
fucom
jo
dec
mov
jecxz
shl
jnp
push
or
push
mov
xor
clc
stos
mov
cmps
sahf
gs
or
and
jle
loopne
mov
cmc
and
iret
and
(bad)
lods
nop
ds
into
adc
push
push
loop
aam
sahf
sbb
icebp
pop
dec
sbb
push
das
mov
mov
js
xchg
popf
cmp
dec
pushf
fdivr
addr16
dec
into
push
leave
shl
out
stos
xchg
jmp
and
or
push
out
retf
push
dec
(bad)
lock
push
pushf
sub
xor
ror
add
or
adc
ins
push
mov
lods
bound
ins
ds
fild
xchg
scas
push
imul
lds
pop
mov
mov
push
xlat
add
inc
and
add
push
sahf
(bad)
pop
pop
(bad)
push
in
lods
ja
mov
inc
arpl
aad
push
dec
in
ss
push
jge
jmp
outs
add
add
test
dec
jb
mov
push
jmp
dec
ss
(bad)
repnz
pop
ds
xchg
sub
fidivr
xor
in
mov
xchg
not
(bad)
mov
pop
enter
dec
mul
push
pop
jmp
inc
dec
mov
xor
out
scas
xlat
mov
leave
jno
imul
psrlq
mov
xor
mov
mov
repz
shl
cmp
ds
into
(bad)
push
jle
mov
ret
mov
xor
sub
ret
inc
int
scas
and
and
cdq
sub
scas
shl
pop
jecxz
into
fidiv
cmp
jae
retf
xchg
out
xor
mov
es
fidiv
push
push
xor
xchg
pop
push
movs
lods
push
hlt
stos
int3
fbstp
lahf
pusha
push
xor
and
mov
repz
adc
(bad)
push
fadd
xor
call
fldenv
cdq
das
mov
stc
and
leave
mov
daa
lds
mov
mov
ds
mov
sti
loope
cmp
mov
inc
lock
sbb
push
clc
loope
lods
fwait
add
ja
sub
pushf
cwde
das
movs
xchg
and
cwde
mov
lds
mov
add
cmc
sub
mov
arpl
push
dec
js
adc
ins
(bad)
rcl
xchg
mov
cmp
mov
stc
inc
mov
leave
push
mov
lahf
test
(bad)
or
mov
(bad)
mov
bound
xchg
mov
outs
push
dec
fsub
adc
cmp
fnsave
xchg
mov
retf
lods
pop
sbb
add
in
xchg
retf
fidivr
scas
mov
into
pop
in
sbb
outs
aam
xchg
lods
fdivr
jb
pop
sbb
je
dec
gs
jl
push
xlat
mov
scas
cmp
or
and
test
leave
dec
push
test
pop
sbb
fldcw
fdivr
loop
fst
xor
sbb
pop
sbb
jnp
loope
push
jge
pop
sbb
movs
rol
and
push
fcom
mov
inc
aam
leave
add
not
addr16
mov
xchg
add
enter
les
or
shl
hlt
push
jmp
jge
mov
xchg
mov
std
sbb
and
cmp
out
movs
je
mov
sbb
mov
popf
cli
ret
pop
mov
out
int3
push
sub
test
rol
test
or
je
cli
popa
fsubrp
ss
adc
mov
cmp
mov
sub
popf
arpl
in
dec
mov
cmp
mov
mov
cmc
push
jne
dec
push
cli
xor
adc
add
push
inc
fs
pop
or
xor
xor
mov
xchg
mov
cmps
xor
(bad)
mov
aam
push
div
clc
out
rcl
mov
aad
int3
(bad)
push
out
mov
add
ret
jmp
jecxz
mov
xor
movs
aas
pop
nop
dec
jle
sbb
bound
inc
pop
sub
or
pusha
pop
outs
shr
xor
imul
mov
jp
cmp
fisttp
mov
fcom
pop
sub
inc
xlat
cli
jmp
jmp
bound
xchg
scas
push
test
test
or
or
out
sbb
jns
sub
(bad)
shl
fs
add
pop
cmp
xor
sub
add
mov
adc
cmps
retf
push
ins
mov
cmp
fidiv
sub
pop
imul
gs
out
arpl
mov
pop
ja
xchg
cmp
push
push
xor
popa
pop
loope
iret
mov
push
pop
xchg
pop
in
adc
mov
aad
jmp
repz
inc
pushf
loopne
adc
inc
fld
lock
adc
daa
xchg
out
mov
addr16
xchg
dec
jmp
pop
cmp
pop
addr16
mov
ficom
add
jmp
push
cdq
adc
mov
push
push
mov
popf
pop
mov
mov
mov
adc
stc
xor
or
mov
pop
repz
mov
ins
pop
movs
xor
and
aam
repnz
mov
imul
dec
mov
test
fcom
daa
mov
adc
movs
jecxz
pop
dec
rcr
(bad)
jbe
imul
in
mov
ins
ret
daa
in
fisttp
add
and
and
sbb
push
mov
jb
sahf
movs
sub
dec
cmc
mov
adc
mov
and
push
sti
push
loopne
dec
in
adc
and
das
lock
mov
fcomip
push
inc
cmp
ror
pop
outs
pop
add
jecxz
icebp
jmp
sbb
movs
je
outs
xchg
(bad)
stos
adc
dec
xchg
add
leave
adc
cmp
cmps
pop
enter
in
inc
pusha
mov
fst
cmp
sbb
xor
xchg
mov
xor
lock
outs
push
cmp
rcl
es
aam
enter
adc
ins
and
inc
jmp
adc
inc
(bad)
rol
ret
ss
sti
mov
push
mov
call
jne
xor
rol
nop
xchg
iret
aas
and
dec
and
ficomp
cmp
jecxz
shl
mov
mul
sbb
out
push
push
out
push
mov
pop
rcr
mov
fiadd
(bad)
xlat
push
push
ficom
pushf
or
xor
jmp
sub
push
add
scas
stc
and
leave
and
dec
push
int3
sub
or
pop
jl
pop
jmp
pop
shl
(bad)
pop
loop
int3
rcr
stos
jg
pop
repnz
(bad)
rol
jne
jl
mov
or
push
popa
add
jns
pusha
push
in
je
pop
mov
xchg
and
stc
loope
aas
stc
imul
pop
add
cmp
mov
and
icebp
pop
xor
mov
in
dec
test
inc
dec
fwait
into
popa
mov
stc
test
pushf
js
sbb
mov
dec
data16
xlat
pop
sbb
xor
sbb
stos
ins
add
or
lods
mov
xchg
(bad)
outs
cmps
mov
(bad)
outs
(bad)
pop
mov
add
adc
icebp
mov
ss
inc
xchg
jp
xor
jb
ret
popfw
mov
xchg
(bad)
cmp
repnz
test
ds
dec
cmp
xchg
jecxz
arpl
mov
rcl
in
mov
add
icebp
loop
jmp
stc
call
leave
mov
mov
inc
scas
call
jle
mov
imul
ret
push
out
stc
call
inc
dec
inc
mov
inc
mov
test
push
nop
jecxz
repnz
es
pop
mov
push
out
jno
(bad)
pop
pop
into
repnz
jp
movs
ds
push
cli
xor
stc
adc
or
pop
dec
or
retf
stos
sbb
jmp
pop
das
xor
cmp
pushf
cmps
cmp
xchg
mov
push
xor
mov
loop
or
or
loop
dec
popa
(bad)
pop
cli
sbb
fwait
je
int3
jmp
sbb
push
cmp
push
stc
out
jns
pop
popa
and
lods
inc
outs
je
cmp
out
jb
jle
or
movs
loop
sbb
lahf
xchg
ret
jecxz
and
jb
rcl
push
jno
test
(bad)
icebp
ins
mov
cmps
dec
and
mov
out
jmp
pop
shl
daa
mov
xor
test
aaa
cmp
push
inc
sbb
jmp
lea
jp
inc
aam
jae
dec
(bad)
xchg
add
mov
test
aas
mov
or
xchg
mov
cmps
test
leave
scas
mov
das
add
scas
mov
jae
into
cdq
fldl2e
inc
mov
inc
push
clc
jb
test
not
in
or
inc
dec
out
sbb
sahf
clc
sub
test
test
cmp
inc
sbb
push
retf
inc
in
ret
lock
fdivr
and
xor
jecxz
push
or
cmps
das
or
add
mov
jmp
push
or
pusha
cs
ins
and
popa
xchg
pop
bnd
inc
pop
jne
jg
and
cmp
pop
scas
pop
cwde
daa
sub
out
adc
mov
(bad)
adc
pop
jecxz
add
imul
add
mov
push
and
inc
sub
inc
pushf
pop
mov
jmp
jnp
or
int3
loop
pop
mov
sub
sbb
loop
sbb
cmp
cld
xchg
mov
stos
cli
jae
(bad)
(bad)
sub
popf
ficom
das
dec
add
sub
adc
ficomp
pop
sub
sahf
sub
test
push
and
mov
mov
adc
cwde
stos
xlat
sub
jecxz
(bad)
scas
xor
inc
fst
jecxz
jge
add
push
hlt
jge
push
aam
(bad)
mov
mov
fdivrp
dec
jne
sub
into
dec
jl
(bad)
mov
pop
push
adc
mov
rcl
pop
popa
sub
(bad)
or
clc
xlat
push
mov
leave
cld
push
jmp
xchg
(bad)
pop
aad
imul
ret
xchg
sbb
pushf
dec
xor
or
ffreep
bound
cli
test
and
pop
int
adc
fnstsw
sahf
gs
pop
rol
xchg
jecxz
jmp
or
fwait
pop
mov
loop
(bad)
lahf
adc
pop
and
ds
enter
sub
or
mov
jle
adc
mov
jb
and
inc
repz
inc
add
push
ja
xchg
push
xchg
inc
cmc
mov
aad
ds
mov
pop
sub
je
arpl
ss
icebp
addr16
(bad)
jge
sbb
dec
iret
mov
pop
test
ja
stc
push
xor
pop
hlt
push
sub
cs
jb
or
lock
lods
mov
popa
pop
xchg
mov
jg
push
cld
sti
inc
fbld
pop
mov
adc
aas
xchg
fidiv
jno
jae
xchg
adc
sbb
int3
nop
jmp
push
and
mov
ins
sbb
outs
daa
push
pop
nop
sahf
movs
or
push
shl
jnp
sbb
(bad)
rol
or
and
adc
mov
xlat
mov
cmp
das
sbb
dec
out
ret
lea
mov
cmp
adc
jne
gs
cmc
jo
neg
outs
leave
popf
and
sbb
xchg
lods
or
in
add
pop
and
out
out
pop
cmps
lahf
rcr
shl
nop
into
scas
jb
inc
imul
iret
or
stos
adc
pushf
nop
push
fisubr
or
mov
push
loope
(bad)
dec
test
mov
xchg
out
popa
aad
out
(bad)
jnp
push
js
clc
test
test
fdivrp
or
je
and
scas
imul
pop
dec
inc
sti
ret
dec
mov
mov
jg
in
shl
movs
daa
icebp
jns
(bad)
in
outs
adc
pushf
lock
add
inc
daa
add
jmp
sub
out
cmp
imul
and
jmp
in
cli
sbb
test
jo
xor
enter
cmp
in
adc
mov
popa
aas
add
mov
add
or
mov
xchg
mov
test
ja
mov
xchg
inc
pop
test
js
pusha
aam
fcom
pop
imul
call
xchg
popf
or
ret
adc
into
xor
pop
outs
cmp
lahf
clc
mov
imul
xchg
and
inc
or
cmp
lods
xor
xor
mov
push
movs
mov
jno
pop
fild
jecxz
push
imul
push
and
in
xor
mov
adc
mov
adc
int
outs
imul
je
std
jle
movs
fisub
mov
repz
movs
push
xor
cwde
fbstp
rcl
mov
pop
sub
add
dec
fist
push
or
adc
mov
sub
ret
xchg
rcr
and
ret
shr
xlat
jne
and
cmps
ret
add
xor
and
push
dec
dec
cdq
fdivr
pop
inc
addr16
(bad)
aam
shl
mov
aas
lahf
dec
setae
xchg
push
daa
xchg
div
push
repnz
arpl
addr16
fisttp
pop
outs
mov
push
outs
add
popa
or
pop
push
movs
jns
out
push
repnz
call
jo
pop
xor
dec
mov
adc
out
sar
ret
sbb
or
retf
ret
mov
xor
pop
jge
jl
ret
push
retf
test
jg
clc
mov
movs
push
jmp
and
jne
inc
(bad)
push
movs
push
jno
hlt
dec
out
test
ror
sub
mov
or
jno
popf
mov
(bad)
push
pushf
xor
dec
xchg
int
loop
jecxz
xchg
sar
es
jle
jl
xor
xchg
hlt
mov
sub
js
pop
mov
mov
ret
xchg
sub
leave
xchg
jno
mov
cmp
sbb
xchg
shl
adc
cld
xlat
jg
lods
and
imul
mov
push
movs
adc
xlat
mov
pop
adc
jmp
out
add
imul
xchg
or
xchg
clc
pop
mov
jmp
xor
cmp
jle
pop
ja
fs
mov
rcl
and
bound
xor
popa
inc
clc
std
ret
in
(bad)
cmp
pusha
(bad)
push
call
arpl
cmc
mov
or
ficom
push
mov
cmp
xchg
jp
or
jno
ret
xor
stc
loope
test
push
and
inc
outs
fistp
dec
inc
or
fild
mov
pop
cbw
push
inc
jp
xchg
inc
pop
xchg
xlat
mov
sub
mov
sbb
push
in
unpcklps
sub
stos
call
gs
outs
cmp
jmp
cmp
jno
pop
dec
pop
popa
jp
or
out
fsubr
jmp
clts
push
xchg
push
xchg
pop
in
scas
cmp
mov
mov
hlt
cmp
js
test
mov
push
push
fistp
dec
and
mov
lds
data16
movs
sub
test
pop
hlt
pop
and
ror
jg
test
not
mov
add
mov
dec
mov
call
mov
push
pop
rol
sub
icebp
adc
push
imul
mov
and
sub
lock
jmp
xchg
sbb
dec
clc
ror
xor
mov
imul
mov
xor
in
bound
dec
add
call
mov
ins
fbstp
jno
pop
pop
outs
clc
xlat
aam
iret
cs
mov
test
push
test
cli
fwait
(bad)
jns
fdiv
fadd
in
sahf
in
inc
les
dec
mov
lods
popa
mov
int3
outs
call
pop
stc
xlat
pusha
aas
outs
pop
add
iret
pop
jb
gs
pop
push
sbb
idiv
test
stc
fist
leave
fmul
push
aam
repz
or
out
xchg
jmp
xchg
push
mov
fcomp
jmp
cmp
out
test
or
test
test
adc
mov
js
jmp
scas
cmp
pusha
lods
retf
lock
aam
shr
inc
imul
shr
fimul
cmp
jl
inc
add
fistp
lods
lods
jbe
cmp
xor
push
and
fsub
cmp
jl
mov
cmp
sub
or
cmp
sets
mov
push
or
push
pop
sbb
ror
add
adc
into
dec
lahf
mov
sub
jp
sti
mov
mov
push
add
pusha
adc
push
fild
in
jo
arpl
fs
ja
ins
sahf
(bad)
mov
es
daa
data16
fsubr
cmp
mov
or
fimul
test
div
and
mov
mov
fcomp
lods
fs
js
enter
pop
mov
pop
das
push
movs
retf
cmc
scas
loopne
mov
cmp
into
inc
mov
mov
or
and
and
popf
hlt
or
scas
mov
add
sti
idiv
mov
fdiv
sbb
daa
add
in
ja
inc
pmullw
mov
push
xor
mov
js
test
test
xor
push
setne
mov
vmptrst
fs
pop
test
mov
gs
xor
ss
sub
mov
(bad)
daa
out
iret
adc
xor
int3
mov
xor
xlat
mov
sti
dec
nop
jmp
dec
xchg
rcl
rcl
or
adc
jge
inc
call
repnz
ds
dec
pop
sub
mov
fadd
and
push
adc
nop
and
sahf
mov
mul
sbb
add
inc
adc
xor
ds
push
jmp
jl
mov
aas
out
and
adc
shl
ins
repz
push
ror
push
mov
mov
sbb
inc
test
lahf
dec
adc
push
pop
xchg
shr
out
pop
push
push
push
add
add
jb
inc
adc
arpl
dec
test
xchg
adc
(bad)
call
or
xor
mov
lds
shr
pushf
xchg
hlt
fs
outs
je
sub
out
jle
mov
mov
test
lods
(bad)
and
fwait
aad
lods
push
loopne
ret
jae
push
stc
adc
jmp
jmp
addr16
mov
(bad)
cmp
jge
jo
dec
jae
or
sbb
popa
push
and
jge
and
fwait
mov
inc
repz
pop
je
sub
int3
aaa
inc
mov
or
and
jecxz
fist
call
loop
loop
push
call
sub
sub
aad
repnz
push
jo
mov
repz
cli
dec
sti
inc
fs
inc
scas
stos
xor
aad
push
inc
mov
sub
push
jo
push
arpl
add
dec
cli
pop
mov
xchg
xor
mov
cdq
out
xchg
popf
rcr
in
sub
fsubr
jmp
xchg
mov
sub
or
imul
mov
mov
jge
push
xchg
and
in
mov
xor
call
int
call
fwait
adc
mov
aad
xchg
push
sub
xchg
xchg
enter
pop
push
push
into
cwde
mov
je
or
push
stos
jl
mov
ficom
adc
adc
or
or
pop
add
adc
stc
cmps
fs
or
dec
mov
pop
call
xchg
push
sub
xchg
repnz
int3
mov
adc
or
dec
push
or
call
lea
jae
imul
mov
jp
cmps
ss
gs
aas
popf
ret
jbe
push
loopne
out
movs
and
pop
sbb
inc
aaa
jl
cmps
jle
out
dec
push
xchg
jbe
daa
sti
fnstenv
in
scas
shl
jge
or
icebp
xchg
jg
xor
into
xchg
jl
push
stos
sar
js
jmp
pop
mov
out
rcl
ins
je
fisttp
inc
push
lea
jmp
mov
imul
mov
sahf
sbb
xchg
scas
xor
push
dec
sbb
pop
imul
sub
mov
push
pop
cli
push
jl
fmul
mov
daa
inc
pop
cmc
sahf
add
es
sbb
mov
pop
sbb
pop
mov
pop
mov
(bad)
movs
xor
les
mov
cld
or
push
repz
mov
xor
mov
mov
pop
cmps
xor
xor
imul
test
(bad)
scas
dec
mov
mov
xchg
out
out
mov
(bad)
pop
shl
mov
or
outs
cmp
mov
xchg
mov
loop
dec
cmps
xor
push
(bad)
(bad)
sar
in
(bad)
jno
(bad)
and
dec
mov
outs
stos
retf
jg
lods
push
cmc
or
xor
out
movs
ror
sbb
popf
push
cmps
xchg
cmps
xchg
cmps
xchg
cmps
xchg
cmps
xchg
cmps
xchg
out
ins
cli
pop
(bad)
sub
repz
je
stos
sbb
push
loop
test
pop
dec
push
ret
popf
xchg
cmp
jb
loopne
aad
inc
cs
(bad)
enter
mov
sti
and
pop
fwait
and
movs
xchg
mov
adc
jle
aaa
mov
sub
js
pop
and
fs
mov
je
(bad)
jb
xor
movs
and
cdq
sbb
add
mov
jo
jns
xor
sub
jmp
fstp
movs
xchg
leave
frstor
into
push
cmc
outs
aas
add
sbb
inc
test
pushf
inc
add
cmp
out
cmp
pusha
clc
out
sub
and
dec
sbb
mov
ret
mov
jecxz
or
dec
mov
test
in
fxch
mov
jl
inc
mov
add
push
mov
mov
cmps
rcr
mov
out
mov
cmc
or
iret
cmp
je
test
sbb
add
out
xor
es
aaa
pop
(bad)
jl
mov
dec
(bad)
mov
push
cmp
fsubr
scas
(bad)
mov
cmps
lea
test
mov
arpl
cmp
test
xor
jp
sbb
add
(bad)
out
add
fdivr
mov
sub
sub
call
in
mov
hlt
ds
and
dec
out
(bad)
neg
adc
add
jl
push
xchg
cwde
gs
jp
inc
xchg
es
mov
stos
add
stc
push
movs
push
inc
add
add
dec
(bad)
ins
cmp
loopne
adc
cmps
hlt
lods
jmp
adc
pushf
cdq
test
cmps
cmc
les
in
cmps
pop
sub
xchg
and
xchg
test
adc
adc
add
fwait
pop
fld
fadd
sub
mov
add
xchg
pushf
xchg
loope
or
or
mov
jmp
(bad)
pop
popf
mov
mov
push
mov
cmp
rcl
jge
arpl
or
jnp
iret
xlat
adc
call
push
shr
aaa
mov
mov
je
and
std
pop
jbe
scas
cmps
jg
push
imul
pop
call
cs
push
mov
lock
out
mov
jo
mov
push
fcomp
adc
add
aam
adc
test
add
mov
mov
pop
push
sub
mov
jno
or
(bad)
popf
icebp
inc
icebp
js
aam
mov
xchg
stos
lods
pushf
push
push
aas
cmc
fs
mov
sub
cmc
or
inc
out
or
cmp
dec
jb
mov
fcmovu
shl
xor
jg
mov
jbe
and
lock
es
scas
xchg
mov
std
addr16
std
mov
loopne
inc
daa
nop
push
js
lods
pop
repnz
and
xor
jl
push
pop
sahf
jg
inc
mov
and
das
in
aam
mov
xor
sub
cmp
pop
pop
pop
adc
bound
into
sub
cmp
or
jae
ins
mov
leave
cmps
dec
je
repz
fld
test
cmp
std
xor
xor
fs
arpl
sar
and
jge
into
or
push
jns
pop
int3
repnz
inc
fbld
mov
jne
add
cmp
ror
and
pop
sbb
push
cmp
jecxz
scas
push
xchg
cmp
repnz
scas
inc
call
jne
xor
inc
fstp
sbb
std
adc
std
mov
cmp
call
xchg
ret
in
mov
pop
mov
push
ret
inc
je
sub
call
lea
fwait
iret
jb
jp
fnstenv
nop
jp
mov
adc
push
or
sub
xchg
mov
xchg
movs
mov
dec
fisub
mov
or
stos
xchg
es
mov
es
cmps
push
push
jp
not
and
lea
push
pop
dec
mov
arpl
sbb
leave
dec
cmc
stc
xor
ins
(bad)
adc
les
dec
mov
loop
xchg
pop
or
inc
mov
outs
loop
repz
hlt
or
inc
mov
push
dec
push
out
in
sbb
or
fs
jae
icebp
or
and
bound
enter
sti
shl
inc
push
lods
sbb
jae
jmp
mov
test
jg
ret
(bad)
stc
cmps
shl
mov
ret
and
out
cld
psrad
test
mov
pop
outs
mov
retf
mov
jo
xor
push
adc
int3
cmc
pop
ret
arpl
mov
push
xor
dec
adc
pop
imul
repnz
cmp
repnz
enter
fdiv
test
jne
pop
and
xchg
sbb
sti
xchg
fcmovbe
movs
mov
mov
cvtdq2ps
adc
clc
jle
sahf
frstpm(287
ret
leave
inc
push
shl
push
inc
cmp
mov
call
sbb
cli
out
imul
dec
aas
xchg
loopne
inc
cmp
(bad)
rcr
loope
fyl2xp1
call
outs
sbb
cmps
or
outs
retf
fld
jb
xchg
lods
sub
mov
(bad)
neg
pop
push
inc
or
pop
ins
scas
mov
stos
sahf
imul
adc
ficom
jle
(bad)
call
stos
aaa
mov
cmp
xor
mov
add
lock
jmp
cdq
pop
sbb
dec
mov
in
jle
jecxz
xchg
ret
push
loop
fwait
push
and
add
jmp
in
das
sahf
and
pop
int3
inc
in
aas
aas
push
fsub
pop
add
popf
fs
xchg
ja
aas
aam
das
sahf
or
mov
lahf
xchg
in
scas
push
retf
sbb
lods
nop
push
int3
adc
jg
in
je
cmp
lock
mov
(bad)
push
mov
and
rol
mov
sar
imul
pop
outs
jbe
mov
xor
mov
and
icebp
mov
cmp
jecxz
mov
enter
pop
ja
pop
push
xchg
mov
add
xor
xor
mov
rol
stos
inc
js
cmp
dec
pop
mov
xor
test
mov
lods
jb
aad
mov
pop
pushf
xor
xchg
cmp
dec
push
pop
cmp
xchg
lds
xor
jl
push
cwde
stos
xchg
loopne
xchg
imul
inc
sbb
xchg
in
cli
jbe
jg
sub
in
push
cmp
aaa
idiv
jo
das
aas
imul
add
mov
push
inc
push
pop
jbe
loope
lods
push
push
mov
loop
or
out
in
add
fldcw
cdq
sub
pop
into
mov
jg
and
arpl
dec
jp
mov
add
xchg
pusha
fistp
out
push
dec
xchg
mov
push
sub
jo
es
or
or
jbe
lods
test
adc
mov
xlat
xlat
hlt
cmp
fmul
dec
int
imul
add
out
push
xchg
sub
cmps
add
push
or
xchg
fist
pop
iret
mov
xlat
aad
push
cmp
clc
lahf
jno
int3
or
pop
or
ds
fidivr
loop
es
into
test
lea
(bad)
je
lds
inc
mov
xlat
xor
outs
cmp
(bad)
inc
xor
and
ss
mov
inc
adc
push
retf
pusha
and
jb
jmp
jg
xor
ficomp
stos
and
pusha
adc
out
shr
sbb
mul
or
jns
mov
cli
ret
mov
mov
mov
push
hlt
dec
test
add
jnp
cmps
cmp
ret
mov
pusha
lods
test
test
mov
lods
loopne
nop
retf
and
jns
(bad)
xlat
adc
addr16
push
xor
inc
adc
mov
jne
mov
mov
jae
mov
inc
sub
popa
outs
outs
jmp
and
fsubr
push
rcl
popf
sbb
dec
cmps
dec
stc
jmp
sub
(bad)
nop
pop
sbb
inc
inc
mov
jnp
sahf
es
sub
cli
ins
sub
cmp
mov
sbb
fld
jmp
push
iret
lea
ins
pop
es
fsub
inc
add
mov
or
jne
adc
test
push
idiv
inc
cld
add
add
sbb
push
mov
cwde
daa
or
sbb
call
cmc
push
jno
nop
or
das
in
lods
into
and
xor
or
loop
pop
push
ins
pushf
sbb
mov
addr16
out
stos
push
pop
jge
rcl
shl
push
icebp
push
fst
sbb
or
stos
push
pop
sbb
sub
and
push
jnp
and
push
test
jb
and
cmp
cmc
mov
clc
sbb
xor
xor
xlat
sub
jb
aad
and
adc
adc
arpl
mov
inc
in
xor
into
shl
rcl
cmps
popa
retf
ins
mov
loopne
xchg
leave
dec
jne
push
pop
sahf
sar
mov
in
or
aaa
inc
outs
dec
rcl
scas
cmc
dec
xchg
cmp
out
loopne
or
je
sub
out
loope
xor
mov
clc
and
mov
or
jne
mov
mov
pop
idiv
or
pop
cmp
pop
fistp
xchg
and
lods
add
jo
cmc
and
xchg
fistp
(bad)
sti
mov
repz
call
jo
mov
pop
(bad)
mov
pusha
jb
mov
inc
xchg
arpl
jae
shl
push
cs
sub
mov
xor
dec
mov
das
(bad)
les
add
sub
inc
mov
sub
push
mov
out
pop
sub
not
sbb
sbb
mov
in
test
sub
fs
mov
or
xchg
div
mov
add
xlat
dec
sar
pop
mov
mov
ins
movs
sub
dec
pop
dec
popa
dec
shl
mov
movs
dec
movs
push
cmps
cli
push
push
cmps
add
cmps
or
pop
movs
pop
movs
pop
movs
pusha
mov
xchg
xchg
mov
mov
xchg
push
push
popa
inc
movs
push
or
cmp
jbe
jno
ret
xchg
mov
add
inc
jg
mov
xor
aad
mov
daa
jns
sbb
jnp
pop
mov
test
bound
push
mov
clc
bound
fild
and
or
push
ret
lods
add
inc
mov
add
ror
push
pusha
jnp
jnp
sbb
xor
jo
call
xor
mov
inc
xor
mov
sahf
add
ret
aad
jmp
add
inc
pushf
xor
and
push
out
xchg
popf
pop
xchg
pop
jne
aad
jmp
aad
(bad)
add
pop
add
xchg
push
mov
lods
or
xor
push
cdq
test
stos
int3
pop
jnp
sbb
call
add
cmps
push
je
mov
arpl
or
push
push
sbb
push
push
sbb
push
push
fidiv
dec
cwde
stos
ret
mov
jge
adc
in
mov
arpl
pop
mov
xor
int3
jmp
cmp
or
in
cmp
repz
lock
mov
ds
fadd
addr16
lahf
dec
sti
xor
cli
fnstenv
jo
int
mov
adc
xchg
in
sub
mov
and
xor
dec
in
(bad)
push
xchg
push
cmc
mov
shl
test
int
and
das
adc
mov
adc
mov
out
sub
push
mov
popf
push
sub
jne
scas
mov
hlt
mov
dec
clc
push
cmps
adc
or
push
sbb
aas
pop
adc
js
(bad)
mov
sar
aad
cmp
jle
push
xchg
out
out
or
sbb
jmp
neg
or
jne
push
popf
mov
out
cwde
mov
fmul
aas
scas
jge
xchg
test
daa
mov
test
cs
mov
sbb
xchg
call
sbb
pop
jl
jb
mov
call
movs
imul
xchg
and
jle
ja
or
int
jmp
sub
stc
stc
cmp
aas
setae
sahf
ins
gs
push
adc
pop
cwde
mul
in
push
add
cmp
xor
sti
fprem
loope
jl
jle
in
cmp
add
adc
adc
sbb
lea
retf
jbe
sub
out
ret
imul
loopne
cli
outs
data16
pop
cmp
pop
lods
out
adc
xchg
add
and
imul
add
add
add
inc
cdq
(bad)
xchg
and
xor
cmp
nop
and
push
es
jae
push
stc
int3
xchg
adc
xor
inc
retf
(bad)
aas
mov
xchg
mov
mov
shl
cmp
mov
xchg
imul
out
jp
(bad)
xchg
iret
push
dec
push
dec
ror
mov
nop
xor
stos
movs
adc
and
pusha
jae
lods
sub
dec
inc
neg
sub
pop
gs
mov
jecxz
das
pop
dec
(bad)
icebp
(bad)
enter
add
cli
gs
cdq
mov
or
test
cld
xor
add
dec
mov
sbb
mov
fs
aas
jbe
mov
pop
shl
dec
in
enter
call
ror
pop
scas
and
rol
push
mov
pop
jle
repz
push
sub
repnz
aam
test
lods
ins
jge
repnz
mov
and
adc
xor
mov
and
stc
mov
adc
in
(bad)
fsubr
dec
jnp
aaa
fwait
push
mov
call
cwde
into
mov
ins
mov
rol
xlat
js
jge
inc
sbb
ret
jmp
mov
xor
fdiv
sbb
mov
out
sbb
pushf
xlat
xlat
jb
pop
dec
jg
fnstsw
cmp
fisub
pop
addr16
mov
xor
dec
mov
dec
std
cwde
mov
not
je
repnz
(bad)
lahf
fild
mov
les
bound
arpl
or
outs
fstp
movs
in
dec
fild
mov
in
clc
push
imul
cmp
jbe
fcom
inc
mov
xchg
adc
xor
sahf
inc
scas
fs
add
dec
(bad)
jne
call
and
iret
test
pop
gs
std
fs
sub
pop
jle
(bad)
jp
sbb
mov
xchg
fcmovu
xor
and
dec
pop
push
jl
cmp
dec
div
js
mov
mov
inc
test
add
xchg
push
sbb
adc
in
sbb
pop
push
and
fsubr
out
push
pushw
imul
outs
ins
lea
out
ins
mov
jae
or
mov
push
jnp
cmc
shl
lahf
mov
push
mov
hlt
sahf
data16
out
pop
sbb
ror
and
cmp
out
mov
mov
add
lahf
shl
int
push
outs
cmp
out
icebp
in
add
or
aaa
add
and
xchg
jle
sti
cld
(bad)
(bad)
call
jg
(bad)
mov
fbstp
push
movs
or
push
call
movs
and
aad
clc
mov
test
inc
stos
add
jge
cmps
inc
int
fild
or
jle
aad
sub
cmp
int
inc
int3
nop
(bad)
cdq
mov
sti
mov
mov
mov
cdq
pop
mov
mov
sti
stc
pop
lods
in
dec
in
pop
enter
dec
pop
shl
sub
push
inc
(bad)
mov
mov
cmp
inc
mov
int3
sub
sbb
sbb
mov
dec
movs
xor
leave
xchg
push
cmp
popf
or
add
or
mov
in
cmc
loop
mov
adc
lods
daa
bound
fld
jnp
loopne
push
shl
test
mov
sbb
and
dec
fcomp
sar
movs
add
cli
lds
mov
sub
mov
ret
(bad)
leave
out
cmp
lods
add
(bad)
mul
je
push
les
nop
div
pop
dec
test
mov
push
sub
sub
push
int3
sub
shl
jo
mov
jg
mov
stc
hlt
ss
xchg
inc
dec
aas
mov
xlat
jmp
sbb
rcl
(bad)
leave
sub
hlt
cmc
sahf
out
mov
jb
(bad)
stc
clc
in
dec
mov
add
lahf
xor
aam
(bad)
aam
jb
sub
in
call
and
mov
jae
repz
sti
(bad)
cli
fisubr
call
mov
mov
enter
ins
hlt
xchg
ret
add
cmp
jo
imul
out
push
adc
retw
push
repz
push
xchg
fdivr
push
and
aas
inc
or
mov
jmp
push
sub
dec
sub
ret
sub
(bad)
cmps
sbb
xchg
repz
mov
call
inc
jnp
ss
ret
(bad)
jno
mov
inc
pop
dec
inc
push
mov
mov
cwde
xchg
(bad)
or
imul
sbb
push
mov
and
sti
and
inc
mov
and
pop
and
dec
adc
pause
xchg
inc
xchg
jmp
dec
(bad)
stos
pop
push
sahf
in
dec
in
or
ret
add
shl
adc
mov
ins
xor
cdq
jecxz
mov
push
jae
adc
pop
xor
mov
or
addr16
mov
cwde
mov
(bad)
imul
lods
imul
outs
xchg
lea
mov
mov
ror
jae
adc
shl
push
and
jmp
add
jle
cdq
das
adc
test
sub
jno
leave
jge
push
jae
scas
sub
jne
xchg
push
pushf
jecxz
fcom
mov
test
mov
daa
(bad)
sbb
xchg
test
leave
jp
std
cld
lahf
dec
int3
pop
mov
sbb
fadd
jge
mov
sbb
dec
nop
inc
ins
movs
jb
mov
mov
and
std
ins
ja
xor
mov
in
movs
in
mov
xlat
cmps
icebp
mov
pop
je
add
lea
retf
std
xchg
inc
add
pushf
push
jmp
push
or
adc
push
jecxz
mov
sub
test
sub
inc
js
das
bound
xchg
add
into
add
inc
xor
mov
mov
mov
addr16
shl
stos
mov
imul
mov
cli
loopne
lods
mov
sbb
int3
jg
cmc
inc
ret
test
mov
pop
outs
dec
adc
and
scas
std
ret
adc
sbb
jmp
(bad)
dec
hlt
repz
fxch
cmps
xor
push
push
and
dec
addr16
stc
or
aam
mov
inc
adc
xor
mov
aad
push
call
push
push
dec
mov
test
mov
js
inc
mov
rcr
pusha
jmp
fst
test
inc
push
fs
mov
jno
mov
sahf
aam
cmc
mov
xor
outs
shl
into
leave
mov
mov
outs
scas
ds
inc
les
stos
out
sub
jmp
inc
jecxz
jl
rcl
lock
loope
(bad)
ret
sub
pop
mov
es
ins
inc
lahf
mov
jne
mov
cs
inc
and
push
pushf
test
xchg
loopne
loope
jmp
popf
outs
ins
or
sar
sub
push
dec
dec
rol
mov
mov
pop
jl
stc
retf
dec
cwde
or
repz
jl
add
sub
mov
test
dec
in
std
ja
bound
loopne
dec
jmp
mov
inc
div
iret
push
aad
or
adc
jnp
xor
call
cdq
pop
sub
int
adc
jae
aam
push
cmp
(bad)
scas
sahf
cmp
stos
and
stos
pop
pop
mov
sbb
jl
add
es
and
ror
aaa
jb
daa
push
outs
aam
jne
sub
ret
dec
adc
outs
leave
dec
jecxz
cmps
cmp
(bad)
mov
jl
nop
cmps
pop
bound
inc
rcr
inc
push
add
xchg
lahf
add
add
cld
(bad)
mov
xchg
test
sbb
loopne
shl
cmp
mov
mov
in
adc
nop
jp
bound
and
movs
jp
or
fld
push
adc
sub
loop
pop
xchg
out
xchg
mov
fld
lahf
fld
push
(bad)
aam
cmc
lahf
sub
mov
cmp
or
retf
pop
lods
pushf
test
test
adc
mov
inc
mov
push
mov
test
cmp
call
mov
(bad)
pop
xor
aad
add
jb
inc
sbb
in
and
call
lods
test
jbe
pop
test
mov
sub
sti
cmp
dec
push
ds
imul
pop
pop
mov
adc
sub
cdq
lahf
push
push
mov
pusha
dec
cmp
(bad)
cmp
in
push
or
adc
test
rol
bound
les
add
repz
xchg
add
(bad)
and
mov
inc
in
(bad)
mov
out
jmp
enter
mov
call
cwde
sahf
jo
int3
fdivr
push
xor
xchg
mov
daa
jae
mov
imul
ss
ret
sub
and
clc
push
push
fcomp
mov
repnz
mov
push
mov
fisub
imul
sub
or
sub
mov
mov
inc
jmp
jge
out
sahf
xor
pop
jnp
sub
jmp
push
cmp
adc
and
jne
push
mov
mov
in
mov
fs
inc
aaa
pop
jge
mov
push
push
js
sar
fcomp
xor
std
jbe
lock
cmp
add
sbb
test
fstp
sbb
xchg
mov
aaa
lahf
es
inc
out
fwait
es
xchg
rcl
ins
add
mov
mov
cmp
adc
int
cdq
sub
das
add
lea
xchg
mov
or
and
mov
ins
cwde
test
xchg
stos
and
dec
pop
and
in
movs
jb
cmps
leave
dec
xchg
jns
mov
and
gs
inc
xchg
xchg
xor
leave
mov
gs
or
int
imul
lea
pop
mov
lds
ror
push
aad
add
push
xchg
mov
packuswb
rcr
dec
adc
movs
out
scas
cmp
jl
scas
inc
push
pop
cmps
into
inc
mov
xor
sub
call
ret
fdivp
sbb
mov
pop
sub
and
xchg
pop
clc
xchg
sub
daa
xchg
loopne
sbb
xchg
mov
js
je
dec
int
div
movs
jmp
into
dec
sbb
mov
aad
push
add
cmp
push
loop
repz
lock
or
int
pop
xchg
mov
mov
ret
xchg
test
mov
pop
or
mov
add
cmp
dec
aas
xchg
mov
or
xchg
sbb
xchg
aaa
call
stc
and
sahf
nop
hlt
and
pushf
mov
ror
ret
call
sahf
std
call
add
dec
or
lock
add
shr
sbb
sub
pcmpgtw
(bad)
inc
jg
movs
adc
pop
add
xchg
fstp
or
cs
addr16
fimul
(bad)
lds
in
dec
jg
dec
test
lods
mov
jnp
sub
mov
fcmovb
shl
cmps
mov
mov
and
mov
mov
xchg
rol
stc
and
sbb
mov
cmps
cmp
or
fnstenv
js
mov
inc
cmc
arpl
movs
cmp
mov
push
xchg
scas
push
loop
lea
mov
mov
cmp
pop
sub
call
push
adc
lea
sub
ror
jmp
test
inc
xor
cs
xor
lahf
aad
sbb
popf
ins
lds
mov
mov
sub
js
jg
repnz
push
iret
ds
add
mov
sbb
lahf
in
xor
mov
mov
shl
pop
cld
(bad)
ins
jmp
pop
jg
push
enter
jnp
adc
xor
push
cmp
mov
es
stos
inc
mov
mov
jmp
cmps
inc
dec
pop
addr16
lods
xchg
jmp
jmp
jl
dec
push
call
adc
fwait
dec
in
cmps
add
cmp
xor
push
push
mov
out
sti
fstp
fild
jb
popf
inc
out
xlat
cmc
test
(bad)
push
pop
mov
sub
sbb
test
rol
aam
pop
nop
mov
xchg
xor
mov
push
retf
enter
jge
inc
mov
mov
pop
xchg
adc
xchg
jno
stos
pop
ins
cmp
xlat
out
xlat
imul
add
(bad)
aad
loop
je
test
out
and
cs
ror
std
push
jle
pop
scas
mov
inc
mov
sub
jns
jnp
push
adc
jb
gs
xor
pop
adc
call
sar
sbb
inc
push
xlat
inc
aas
dec
pusha
inc
mov
mov
cmps
mov
mov
mov
mov
scas
or
pop
pop
call
in
push
ins
add
ror
add
mov
xor
push
xlat
xor
in
and
pop
outs
rcr
adc
push
mov
daa
loope
lea
mov
mov
hlt
sub
outs
(bad)
int3
jecxz
js
jbe
enter
cmps
(bad)
and
lods
mov
push
in
mov
push
xchg
shl
dec
push
add
lods
sbb
push
mov
pop
sti
in
loop
pop
inc
push
mov
push
ds
cmc
adc
cmp
test
lods
outs
out
mov
es
adc
xor
dec
ds
adc
ss
test
mov
pusha
stos
test
mov
mov
and
mov
push
or
pop
stos
movs
hlt
mov
shl
(bad)
mov
ds
mov
lahf
cmc
repnz
mov
sub
or
and
add
cwde
or
mov
out
pop
xlat
push
push
inc
aas
adc
jbe
push
pusha
mov
ds
aad
push
(bad)
pop
stos
jp
loopne
imul
inc
cmps
mov
sar
mov
mov
add
sbb
stos
fnstcw
push
jle
jns
push
mov
fs
xor
or
sub
inc
sbb
fs
jp
adc
adc
mov
push
mov
inc
cmp
shl
jo
call
jns
cmp
iret
shl
xor
and
or
jecxz
inc
jnp
cmp
mov
test
jne
mov
cmp
inc
loop
or
mov
jnp
aam
jl
test
mov
mov
jb
faddp
shl
or
fs
dec
xchg
in
and
dec
loopne
ret
dec
xor
sub
and
stc
je
arpl
mov
or
add
leave
test
loopne
xchg
push
mov
xchg
xchg
mov
dec
scas
mov
sub
sbb
jb
add
fdivp
push
sbb
or
or
hlt
lds
mov
sbb
cmp
push
xchg
pop
into
inc
imul
push
daa
call
add
neg
sbb
sbb
pushfw
gs
push
mov
inc
ficom
mov
mov
xchg
dec
inc
dec
add
enter
mov
sub
cmp
int3
mov
gs
les
imul
dec
pop
jl
(bad)
dec
out
jo
data16
test
aam
jp
fcmovnu
add
jge
mov
pop
(bad)
jns
dec
xchg
icebp
movs
(bad)
ds
int
not
jns
sub
or
inc
cs
inc
xchg
or
inc
fs
stos
daa
inc
stos
lods
cmp
push
out
hlt
xchg
jbe
add
out
dec
fwait
jp
stos
out
sti
stos
cmps
gs
adc
xchg
pop
outs
jmp
mov
pop
and
inc
xchg
stc
in
mov
lock
xchg
xor
adc
in
mov
popa
jns
fisub
fcmovne
push
aaa
sub
and
ret
xor
sub
xor
mov
cmp
cmp
aaa
ror
inc
pop
mov
fistp
mov
add
and
shr
ins
cmp
jecxz
rcl
popa
scas
ret
sahf
imul
aad
and
pop
mov
mov
xchg
sub
cmp
dec
imul
dec
sub
popf
std
popa
outs
xchg
out
popf
dec
repz
cmc
imul
push
push
(bad)
and
out
popa
outs
addr16
aaa
cli
loope
vmulss
push
jl
aaa
loop
mov
xchg
fld
stos
rol
inc
jo
sbb
stc
ds
lahf
scas
mov
cmps
inc
stos
and
addr16
push
fidivr
jb
daa
outs
cmps
sub
fisttp
sub
or
in
(bad)
frstor
xchg
fild
aad
sbb
push
add
call
xchg
ins
dec
cmc
push
pop
daa
or
push
xchg
push
mov
or
pop
xor
pop
bound
sub
dec
imul
in
and
push
xor
(bad)
out
cmp
in
shl
(bad)
in
lods
hlt
push
mov
sbb
push
sub
mov
inc
sub
pop
push
out
les
or
syscall
sbb
and
push
das
sub
xchg
jmp
imul
adc
mov
mov
jecxz
out
(bad)
loopne
jae
sub
mov
fwait
mov
aas
stos
or
je
repz
mov
mov
add
lods
mov
aaa
in
pusha
mov
arpl
sbb
sub
push
sbb
out
xor
adc
call
xchg
push
clc
scas
inc
adc
push
push
xor
xchg
inc
ins
sub
ds
mov
xor
add
cmc
int
jmp
cmc
or
inc
and
imul
add
jmp
or
mov
xchg
xchg
adc
(bad)
mov
mov
data16
pop
call
fxch
shl
and
mov
sbb
xor
adc
mov
div
push
shl
mov
loopne
sar
(bad)
retf
fistp
sub
push
loopne
sti
lods
test
xor
test
or
(bad)
inc
pop
add
dec
not
cmc
gs
dec
out
popa
test
icebp
cmp
cmp
xchg
cmp
sub
ss
mov
inc
imul
daa
aad
jno
aad
movs
add
mov
int3
xor
shl
mov
imul
aam
sbb
xchg
mov
or
xchg
xlat
scas
pop
xor
jne
sbb
test
frstor
aaa
icebp
outs
arpl
dec
pop
lods
mov
adc
sti
cmps
pop
or
inc
daa
sbb
pushf
fs
daa
add
xor
int3
int3
cmc
shr
leave
jge
sub
rcr
in
je
xor
and
aad
cmps
dec
add
ins
push
je
out
mov
mov
inc
pusha
rcl
or
cmp
jge
pop
adc
sub
push
cs
das
popa
xchg
mov
lds
ja
mov
lea
fistp
cdq
jo
arpl
sti
std
(bad)
in
out
jns
mov
sbb
or
in
and
out
adc
and
jmp
add
loop
xor
popa
pop
dec
fnstcw
(bad)
sub
jp
jno
movs
int3
add
out
push
mov
and
nop
push
(bad)
ins
add
jmp
and
pusha
and
fist
mov
jbe
stc
mov
push
inc
cmp
jae
pop
aaa
add
arpl
push
lahf
cwde
call
mov
mov
popf
bound
popa
les
cwde
cli
lahf
push
adc
pop
test
lahf
mov
push
and
aam
stos
sbb
mov
jg
dec
retf
imul
pop
add
int3
inc
xor
inc
mov
nop
(bad)
addr16
push
in
int
ins
cmp
cmp
cmps
in
push
jge
mov
sbb
in
jb
dec
mov
push
rol
adc
mov
mov
dec
pushf
mov
sbb
clc
adc
movs
add
aam
xchg
aaa
(bad)
cmp
inc
jnp
push
mov
jb
mov
mov
repz
fs
sub
mov
shl
ror
loop
daa
jne
(bad)
sahf
dec
sbb
ja
aad
mov
sub
outs
jge
and
inc
push
ins
retf
push
add
pop
jle
jno
cmp
or
test
mov
rcl
mov
adc
popa
shl
xchg
loopne
add
stc
mov
fld
add
es
scas
neg
jb
add
loop
and
hlt
das
and
jbe
lock
mov
sub
xchg
in
popf
push
xor
sub
fstp
lds
(bad)
outs
enter
adc
sbb
call
sbb
ror
jecxz
imul
sub
and
dec
push
xchg
sub
jp
out
add
(bad)
iret
ins
inc
mov
les
lahf
xchg
arpl
aaa
(bad)
into
pushf
and
xor
mov
jbe
cmp
sbb
xchg
fwait
pop
jae
sbb
out
loope
je
xchg
dec
dec
sub
fwait
or
xchg
xchg
inc
mov
or
mov
sub
shr
dec
adc
in
mov
dec
inc
hlt
or
ja
dec
sbb
or
inc
cmps
push
pop
or
ret
retf
mov
xor
ss
out
lock
fcmove
fld
cmc
ins
mov
sti
push
retf
mov
cmp
and
mov
mov
xchg
cmps
mov
mov
inc
mov
mov
dec
sti
pop
fcmovnbe
push
in
dec
movs
int
js
loop
xor
aaa
push
outs
sahf
add
gs
mov
mov
lock
mov
xchg
add
ss
(bad)
inc
adc
or
imul
in
cmp
sbb
out
pop
jbe
nop
dec
sti
jl
pop
daa
xor
cmp
xor
in
or
(bad)
imul
mov
pop
mov
dec
pop
cdq
outs
push
dec
jnp
shl
scas
mov
jmp
bound
(bad)
mov
adc
adc
int3
mov
(bad)
fmul
xchg
lahf
xor
call
cld
push
fisub
mov
sub
add
les
jg
fsub
dec
scas
shl
shr
call
js
jns
cmps
xchg
or
call
ss
inc
hlt
retf
cmp
xchg
fincstp
pop
push
mov
outs
xchg
add
sbb
clc
add
and
push
jnp
cmp
and
mov
cmp
and
aam
pop
sbb
test
push
xor
loope
fild
pushf
test
cld
push
in
std
rol
push
rcr
push
xor
js
xor
cmp
mov
loope
push
out
test
icebp
adc
repnz
loope
stos
out
xor
call
and
(bad)
cmp
aas
xchg
ds
dec
test
daa
stc
sub
cld
ret
and
dec
push
scas
add
lods
xlat
cmp
inc
xor
sbb
add
test
push
aaa
xchg
les
xor
pop
pop
add
mov
mov
pop
popf
jmp
imul
dec
dec
mov
fmul
jb
inc
jnp
and
ret
and
ja
in
out
test
in
inc
adc
outs
xchg
or
test
adc
test
cmps
dec
in
cld
pop
xlat
pop
mov
jge
mov
addr16
int
shr
jnp
(bad)
jbe
push
outs
mov
jb
stos
cmp
add
add
jns
movs
push
dec
stos
popa
out
out
xchg
mov
out
xchg
scas
hlt
dec
cmp
dec
mov
jp
shr
pop
mov
xor
cdq
mov
out
xchg
fld
xchg
jge
adc
(bad)
daa
or
lock
xor
mov
add
pop
test
pop
pop
sub
cmp
adc
(bad)
je
fmul
xchg
aad
inc
mov
fucomp
cmp
mov
es
lods
add
(bad)
push
inc
inc
inc
mov
mov
xchg
outs
(bad)
lahf
les
in
push
sub
lods
inc
mov
jnp
fidivr
div
mov
or
mov
lahf
clc
inc
inc
xchg
call
pop
sar
xor
fcmovu
jnp
outs
push
movs
into
mov
jp
jmp
cdq
mov
fstp
rcl
inc
dec
ja
dec
je
push
imul
fcomp
addr16
lods
(bad)
ins
sbb
sbb
mov
out
xchg
or
add
mov
ror
pop
xchg
jmp
pushf
imul
inc
mov
cmp
or
dec
add
xlat
ror
fsubr
dec
jg
mov
push
xchg
cmc
into
push
lds
dec
sub
mov
lds
or
mov
and
jb
out
jp
jmp
sbb
mov
in
in
push
iret
cmps
xor
test
mov
cmp
ret
(bad)
jecxz
adc
inc
sub
fwait
dec
sbb
mov
dec
jno
fistp
fcmovbe
xchg
mov
dec
repnz
or
mov
cmp
cmps
inc
pop
sub
out
aad
add
jne
xchg
sub
(bad)
in
aaa
mov
push
mov
mov
mov
and
mov
xor
jge
xor
jp
pop
movs
out
or
pop
mov
pop
mov
push
pop
cs
and
jle
inc
cmc
dec
xor
pop
xor
in
(bad)
(bad)
imul
or
dec
ror
les
sahf
sar
loope
fs
mov
push
imul
lea
in
jbe
inc
sti
jne
dec
call
adc
or
inc
retf
xor
or
inc
pushf
push
imul
mov
repz
sbb
cmps
cmc
test
mov
push
jae
jg
test
inc
lea
push
minps
lods
sub
mov
aam
sub
fwait
or
ficom
mov
imul
push
lea
popa
retf
je
jo
push
mov
or
ja
jmp
les
lahf
les
dec
pop
mov
lea
push
and
sbb
into
dec
push
cmp
jnp
inc
push
dec
test
fdiv
mov
add
jg
cs
mov
mov
repz
adc
bound
push
addr16
fwait
sbb
xchg
(bad)
and
jge
cmp
cs
popf
int3
xor
dec
mov
fiadd
test
mov
outs
mov
lods
aam
pusha
inc
sbb
aad
lahf
aad
mov
sbb
fsubr
(bad)
stos
mov
mov
inc
inc
out
jecxz
adc
jmp
ins
pushf
fisub
pop
xchg
sub
mov
iret
cli
inc
mov
sub
ds
shl
movs
mov
dec
push
and
icebp
dec
fbstp
repnz
jb
push
movs
cmp
in
mov
stos
repz
add
mov
mov
dec
lods
bound
inc
pop
cmp
mov
and
sub
(bad)
mov
cmp
cmps
adc
jno
push
push
(bad)
rol
push
sub
xor
xchg
mov
es
xchg
mov
pop
cdq
jmp
retf
sbb
pop
popf
inc
cmp
pop
ja
jecxz
mov
jl
(bad)
or
retf
push
xor
call
cmps
es
cs
lahf
stos
mov
sahf
mov
jns
add
and
push
icebp
xchg
outs
fld
sbb
sub
mov
and
sbb
mov
(bad)
and
xor
enter
mov
call
push
xchg
mov
jbe
push
mov
ret
xor
sbb
mov
sbb
pop
push
gs
sub
fs
pop
cmp
inc
inc
popa
jo
mov
jne
call
and
sub
retf
xor
cmp
data16
and
jns
inc
int3
cmp
jle
in
mov
int3
es
jne
clc
adc
out
sub
movs
add
retf
mov
cwde
sbb
xor
cs
jns
adc
cs
mov
push
push
sbb
cli
scas
xor
fs
inc
nop
dec
div
mov
sbb
pop
pop
mov
lods
jo
test
mov
jecxz
(bad)
(bad)
outs
shl
retf
add
rcl
cmc
push
jb
shl
fnstsw
sub
adc
jp
dec
jns
or
inc
cwde
fs
nop
mov
jno
call
xchg
mov
sub
mov
shr
in
outs
xchg
mov
popf
je
rcl
mov
dec
adc
sbb
aaa
stc
and
stos
sub
hlt
(bad)
push
mov
daa
xchg
(bad)
int3
jle
cmp
and
rcr
jo
push
ins
or
hlt
fwait
jp
cs
pusha
mov
push
jecxz
jge
or
sub
jns
cwde
xchg
add
add
imul
jg
fistp
cmp
ret
push
mov
int
jae
cmp
cmp
sbb
sti
pop
and
test
sbb
lods
mov
fnstcw
dec
fwait
xchg
clc
or
and
add
mov
rol
movs
adc
inc
enter
fdivr
lds
ss
aas
adc
(bad)
out
popa
add
cli
sub
push
shl
dec
seta
xor
sub
popf
stc
jge
xchg
retf
or
popf
ins
mov
movs
es
mov
aas
das
daa
das
sub
sub
sub
xor
and
popf
xchg
cmp
xor
je
js
jl
add
sti
ret
mov
imul
(bad)
xchg
mov
in
fcmove
repnz
(bad)
inc
jg
das
out
dec
(bad)
adc
das
out
xor
mov
sbb
iret
add
loopne
jo
add
sbb
add
sub
xor
adc
add
lock
and
sub
add
add
adc
pop
add
inc
cwde
add
or
test
and
push
cld
add
push
sbb
mov
sub
inc
push
mov
or
mov
inc
push
mov
adc
mov
push
mov
jmp
call
mov
dec
xor
mov
inc
fldcw
add
jecxz
mul
sub
pop
xor
mov
ja
push
inc
fld
outs
add
sub
xor
ror
cs
ins
je
aaa
in
cmp
inc
out
jo
in
fbld
fcomp
ins
xchg
dec
cld
ret
movs
lods
dec
pop
mov
cwde
stc
inc
jnp
cmps
or
in
jecxz
call
mov
jle
sbb
pop
push
push
or
sbb
in
scas
lods
cmps
dec
outs
and
loopne
sbb
mov
or
mov
das
clc
xchg
pusha
adc
test
sub
aad
xchg
xchg
movs
popf
outs
push
jns
jmp
shl
mov
fst
mov
popf
jl
fld
jmp
scas
xchg
mov
pop
lea
shl
mov
mov
sahf
sbb
xor
ins
or
jne
retf
frstor
test
dec
fldcw
in
fimul
cld
jmp
je
sahf
cmc
aam
xchg
jg
(bad)
jbe
adc
es
push
and
test
or
shr
jbe
jb
jo
mov
shl
aaa
push
data16
nop
inc
scas
adc
mov
push
cmp
cdq
mov
mov
fdivr
(bad)
fstp
pusha
outs
rcl
or
dec
jecxz
cmp
mov
dec
or
ja
jl
cld
push
cld
or
jae
jbe
or
add
jbe
xor
lock
lea
in
mov
pop
inc
lods
inc
xchg
push
scas
dec
xchg
xorps
ss
mov
sbb
add
mov
(bad)
push
bound
sahf
mov
push
int
sahf
ins
mov
sbb
test
loope
xor
lds
push
push
(bad)
into
push
sbb
fiadd
loope
(bad)
(bad)
dec
or
leave
je
sbb
jmp
pusha
sbb
sub
inc
pop
or
mov
mov
fmul
xor
adc
and
push
push
xor
mov
popa
ja
pop
mov
and
mov
fsub
jbe
mov
jno
jmp
xor
loope
pop
fs
add
or
lods
sub
xor
cs
test
sahf
loope
xor
mov
fadd
mov
in
or
mov
das
ins
adc
lods
stc
or
dec
mov
push
push
into
jp
adc
es
movs
dec
or
fsubr
xchg
push
add
add
jae
push
adc
dec
es
shl
jb
push
cmp
rcr
mov
addr16
push
mov
cdq
int
ins
sbb
push
jb
fwait
js
pop
mov
leave
call
mov
je
jb
(bad)
fimul
retf
loope
mov
mov
mov
call
outs
pop
inc
test
popa
mov
push
into
jo
das
out
cli
mov
sub
mov
mov
fild
inc
mov
sub
bswap
fs
xlat
(bad)
and
or
sub
test
push
sub
mov
cmc
add
outs
adc
jle
cmp
sbb
mov
rcr
jl
jg
in
sbb
inc
jno
retf
(bad)
pop
loope
xor
sub
push
xor
cwde
rcl
fptan
mov
dec
add
int
mov
mov
lods
jge
ja
fcomi
aas
push
popf
clc
fisttp
in
imul
aaa
gs
iret
sub
push
fdiv
loope
adc
mov
mov
push
xchg
in
jge
call
retf
add
mov
mov
(bad)
fsub
mov
ret
(bad)
std
int
push
(bad)
fmul
xchg
mov
nop
je
icebp
add
xlat
fstp
mov
out
mov
mov
adc
jbe
ret
test
xchg
repnz
sbb
mov
xchg
shl
rcr
jns
and
sub
es
xor
mov
ret
xchg
mov
sbb
les
shl
int
xor
mov
sbb
aad
movups
jns
pop
cld
jbe
pop
test
je
stc
inc
nop
loope
bswap
mov
xlat
push
sub
jno
add
popa
lahf
loop
loopne
imul
imul
and
inc
cmp
dec
jbe
pop
pop
jmp
mov
push
or
ffreep
rcl
shl
inc
inc
sub
inc
pop
pop
fistp
mov
bnd
mov
pop
and
ja
push
int
add
push
(bad)
retf
adc
shl
movq
mov
dec
jle
movs
cmpps
es
loope
cmp
outs
pushf
repnz
fimul
fldenv
dec
sbb
or
sbb
push
sbb
cmps
movs
iret
stc
xlat
sahf
sub
ficomp
(bad)
adc
mov
je
sbb
pop
mov
pop
xor
xchg
inc
xchg
push
ja
mov
das
add
adc
aas
stc
dec
ins
mov
mov
int
iret
jo
aam
adc
clc
sar
stc
(bad)
sub
and
ja
sbb
add
jmp
add
fidiv
cmp
mov
push
pop
cmp
in
outs
bound
ins
lahf
adc
cmp
mov
and
imul
js
add
(bad)
push
push
fsub
add
add
jg
xchg
mov
cmp
scas
push
setns
xor
adc
xor
adc
rcl
mov
mov
aaa
or
(bad)
into
shl
sti
inc
pop
repz
mov
inc
xchg
stc
inc
mov
push
test
leave
jmp
xchg
xchg
cli
arpl
xor
icebp
out
cmp
ds
pop
push
pop
sub
test
fs
jmp
mov
sub
std
push
outs
gs
dec
xor
movs
out
enter
call
mov
je
ror
sub
cmp
xchg
fnstcw
in
ficom
lods
das
xchg
add
out
sub
clc
jae
fsubrp
sar
cmp
ret
and
jo
mov
inc
pushf
or
daa
out
(bad)
jo
mov
pop
push
std
pushf
mov
(bad)
jae
inc
push
jmp
pop
push
cmp
mov
nop
adc
cmps
ret
out
adc
cld
loope
ds
imul
fwait
mov
into
call
ret
fwait
cwde
dec
sub
xor
xor
dec
(bad)
icebp
cdq
pushf
push
xchg
adc
clc
loop
mov
push
mov
push
cmp
adc
stos
jo
push
(bad)
(bad)
push
push
dec
rcr
addr16
mov
fsub
shl
es
pop
pop
dec
lods
das
inc
out
push
inc
shl
dec
pop
cmc
jmp
scas
jmp
std
lahf
cmp
sbb
mov
retf
xor
lods
adc
cmovp
test
stos
stos
ins
sar
push
sbb
int3
push
inc
xchg
ret
nop
xchg
push
stc
dec
push
hlt
jmp
ret
sub
inc
and
add
aam
sub
lahf
lods
adc
push
pop
push
xor
jge
ss
inc
outs
mov
mov
loope
out
call
adc
mov
push
gs
cmp
pop
(bad)
std
xchg
pop
sbb
aas
shl
mov
xchg
jae
xor
push
neg
mov
sub
inc
mul
ss
sub
or
pop
add
into
cmp
xor
test
call
rol
push
sub
jl
sbb
lds
sub
xchg
scas
popf
mov
leave
mov
xchg
inc
loopne
fwait
scas
xor
cmp
sub
sahf
push
pop
inc
in
add
adc
mov
(bad)
mov
icebp
sbb
xchg
or
cmp
xlat
pop
push
movs
mov
push
repnz
inc
inc
mov
sub
cmp
push
and
jmp
aas
xor
fisub
cdq
mov
push
gs
clc
fldenv
sub
out
dec
xchg
jbe
jge
xor
aaa
outs
gs
sub
jp
inc
sbb
mov
cvtps2pd
xor
dec
jns
aaa
add
push
test
add
enter
cmc
(bad)
jmp
dec
cmps
retf
repnz
jne
sub
out
retf
pop
lahf
add
jns
scas
xchg
shl
data16
ja
pop
or
mov
fmul
outs
es
shl
sub
mov
test
dec
daa
push
adc
mov
(bad)
pop
test
movs
xor
lock
xchg
adc
das
sti
sbb
adc
inc
enter
sbb
cmps
movs
retf
adc
mov
out
ja
outs
es
icebp
add
popa
jp
mov
pusha
cwde
mov
ficomp
pop
jl
sbb
adc
cmp
lds
das
retf
stc
sub
pop
xchg
push
mov
dec
jo
cmps
das
loope
pop
into
mov
aas
sahf
pop
add
stc
retf
gs
mov
(bad)
sub
dec
adc
scas
pop
imul
ins
mov
add
div
mov
pop
imul
push
sub
cmp
or
in
dec
int3
cld
cmp
icebp
push
neg
pop
loopne
and
add
xchg
pop
or
data16
in
movs
xchg
push
cwde
shl
mov
lods
out
daa
cmp
and
fdivr
fmul
mov
daa
push
and
sar
dec
pop
and
clc
icebp
xor
xor
test
ja
mov
fs
rcr
jno
mov
or
ret
test
xchg
clc
pusha
ins
ret
aaa
xor
in
or
cmp
jo
mov
or
outs
dec
jecxz
push
in
jo
out
movs
sar
xlat
jmp
mov
push
add
and
inc
cli
lahf
fchs
or
sub
jl
lods
cmp
lods
pop
in
and
adc
add
(bad)
rcr
push
rcl
adc
push
xor
imul
int3
xchg
fs
cdq
push
inc
mov
dec
repnz
ja
pop
mov
addr16
dec
add
add
add
jge
jl
jge
js
inc
js
and
call
sbb
rcr
ins
jmp
rcl
mov
mov
mov
pop
les
mov
stos
add
fsubr
mov
test
out
inc
push
scas
xor
pop
xor
movs
dec
lods
cmp
daa
outs
out
and
fdivr
repz
fidivr
dec
xchg
add
cmp
or
add
xchg
xor
adc
lods
sub
jae
mov
cmps
adc
rcl
stos
add
fwait
mov
xor
stos
mov
cmp
fs
xchg
cld
sbb
test
xlat
out
inc
ret
mov
aad
addr16
pop
sub
mov
ficom
pop
sahf
dec
adc
out
inc
ja
stos
(bad)
dec
outs
or
push
test
aas
bound
or
imul
or
icebp
cmp
js
imul
inc
dec
int3
aaa
jno
sar
sbb
fcomp
inc
sub
fisttp
sub
or
mov
hlt
mov
dec
add
cmps
dec
fs
jmp
out
mov
or
or
bound
adc
push
jb
out
mov
ja
dec
and
stc
mov
inc
inc
dec
inc
push
jmp
loopne
mov
test
mov
sub
into
add
mov
cmp
bound
ror
fdivr
pop
pop
into
mov
sbb
ret
loope
nop
and
jmp
(bad)
mov
(bad)
dec
shr
cmps
sbb
sub
adc
xchg
not
addr16
das
je
outs
rol
jg
xchg
inc
xor
pusha
sub
call
mov
popa
jl
push
in
lock
int
fst
cs
sbb
xor
sub
jne
test
neg
das
imul
xchg
push
or
arpl
fsubrp
mov
dec
jne
pop
mov
mov
enter
stos
mov
pop
cmp
push
in
and
ret
cmp
sbb
xor
adc
pop
adc
sbb
adc
cmp
inc
mov
mov
retf
jp
inc
push
in
mov
std
loopne
adc
lock
mov
retf
loope
mov
or
lds
xchg
sbb
mov
in
pop
sbb
aad
mov
lods
enter
call
sahf
add
pop
ror
add
jmp
inc
aad
push
add
inc
adc
mov
test
repz
mov
repnz
push
into
daa
sub
jne
adc
rcl
(bad)
lock
leave
cmp
mov
(bad)
pop
shl
sar
xchg
nop
push
sub
neg
lods
inc
cwde
scas
mov
in
push
or
popf
cwde
mov
cwde
sub
push
jmp
pop
sub
scas
sbb
xlat
and
leave
xchg
push
xor
mov
test
push
repz
or
ret
inc
mov
adc
lods
mov
in
fcmovnu
and
or
xchg
dec
mov
mov
stos
shl
lock
js
call
push
add
cwde
movs
mov
imul
loope
xor
cmps
mov
jo
(bad)
repnz
mov
sub
data16
fldenv
fs
lods
mov
push
xor
mov
leave
aam
popa
xchg
cmps
xchg
cmps
push
mov
popa
iret
cdq
mov
cmp
out
mov
dec
inc
sub
out
push
mov
test
test
mov
dec
inc
ins
mov
or
jmp
leave
jl
jg
cdq
jne
pushf
out
add
xchg
add
out
jmp
push
adc
imul
adc
inc
fisubr
shr
or
adc
jo
and
add
test
xchg
dec
xchg
mov
pop
repz
and
imul
cmp
jne
add
or
fst
add
jg
fdivr
push
push
ds
xor
xor
jmp
xchg
xor
jne
add
jbe
inc
test
ss
jne
shr
es
mov
addr16
xor
sbb
dec
pop
pop
sar
repz
jg
push
inc
push
fsubr
xlat
movs
repnz
mov
sub
pusha
adc
mov
mov
pop
in
dec
in
jo
add
imul
jo
dec
cmp
repnz
cmp
and
inc
(bad)
pop
xchg
sub
out
ins
push
xor
sub
xchg
xor
xchg
inc
scas
jmp
mov
cmc
rcl
fist
ja
xchg
les
push
popf
ror
es
cs
scas
xchg
sbb
rcr
in
and
push
add
sub
xchg
mov
es
jmp
ffreep
leave
push
pop
xor
ins
add
mov
mov
ret
jecxz
mov
add
icebp
out
movs
aam
movs
rcr
sbb
fcom
out
xor
aad
gs
and
ins
pop
xor
pop
or
gs
(bad)
xlat
xchg
add
cmp
dec
ret
imul
and
mov
jecxz
xchg
jecxz
mov
push
fdivr
jmp
fcomp
rcr
xor
jle
popf
lea
cmp
fldenv
sbb
inc
cli
and
push
jmp
push
in
call
iret
inc
lahf
test
in
repz
in
out
mov
scas
(bad)
mov
(bad)
dec
cmps
cmps
(bad)
mov
repz
jp
arpl
cmp
mov
jnp
lds
(bad)
fdiv
add
lods
add
push
sub
out
(bad)
inc
adc
aaa
int3
stos
sub
fcmove
pop
mov
cmp
push
jmp
mov
cmp
enter
jmp
inc
sbb
lods
pop
xchg
bound
(bad)
ror
xchg
dec
pushw
sub
int
getsec
pop
adc
fisttp
xor
(bad)
imul
xchg
mov
push
sti
jae
adc
mov
add
add
mov
pop
(bad)
push
call
clc
aad
and
mov
cmp
xchg
mov
cmp
(bad)
arpl
int
mov
pop
jb
test
ins
aad
mov
rol
sbb
gs
sub
mov
cli
xor
retf
mov
pop
adc
test
pushf
into
rcl
call
into
sti
sti
frstpm(287
dec
inc
xor
mov
jno
call
push
cli
out
push
scas
push
mov
pop
aas
add
xchg
add
sbb
mov
pop
and
pop
div
mov
xlat
add
cmp
out
out
fadd
sar
ins
jmp
mov
jmp
mov
inc
xchg
xor
pop
inc
push
mov
mov
gs
sbb
push
or
xchg
cmp
movs
fistp
pop
xchg
test
dec
shr
adc
iret
pop
sub
or
aaa
pop
jbe
push
dec
cmp
ss
push
xor
pop
cmp
xor
cmp
sub
push
stos
adc
dec
sub
xchg
cli
pop
out
aas
ficomp
scas
sbb
repz
repnz
xor
sbb
xchg
cmps
rol
pop
out
lea
pop
ror
popa
cdq
mov
inc
adc
sar
and
das
(bad)
xrelease
xchg
sbb
sar
dec
aas
(bad)
ret
sbb
ins
mov
inc
loopne
push
xor
loopne
jg
mov
jb
cmp
inc
xor
or
popa
mov
jbe
ret
fwait
mov
pop
popaw
xchg
sbb
xor
in
iret
add
push
cmps
xchg
mov
jecxz
shl
cmp
scas
xchg
mov
xchg
inc
pushf
cwde
outs
outs
pop
xchg
enter
add
cmps
add
sti
jge
cmp
pop
sar
mov
shr
or
inc
ss
je
cmp
mov
cmp
movs
pop
shl
sbb
mov
xchg
iret
mov
pop
or
inc
pop
push
xor
mov
and
xchg
push
pop
pop
sub
and
mov
cmp
retf
scas
sub
sub
mov
jge
sbb
add
loopne
add
mov
iret
push
cdq
call
sbb
add
lds
add
inc
dec
push
push
mov
add
gs
adc
jecxz
pop
retf
mov
sbb
pop
sub
xor
mov
add
fcom
push
ss
inc
retf
fsub
mov
sbb
fcom
in
lahf
in
wbinvd
ins
push
imul
retf
or
jg
out
xchg
pop
mov
call
cmps
push
in
mov
ret
lods
jbe
xchg
xchg
lds
std
cmp
add
xchg
xor
rcr
test
not
inc
retf
cmp
mov
gs
setne
les
lds
mov
fwait
mov
ret
push
cwde
adc
shl
and
or
add
cmc
movs
fld
sbb
(bad)
cli
mov
pushf
or
pop
sbb
xchg
fcomp
xlat
and
mov
jecxz
fild
mov
or
jno
cmp
repnz
repnz
pop
lods
mov
lock
sbb
lea
jns
(bad)
dec
jg
mov
adc
scas
and
scas
out
mov
xchg
or
iret
push
repz
cdq
fisttp
xchg
mov
jnp
pop
sbb
xor
jp
(bad)
daa
xor
hlt
inc
in
mov
add
dec
push
mov
cld
ret
adc
es
or
cmp
stc
clc
xor
cmp
mov
push
pop
xor
shr
mov
in
scas
pop
test
(bad)
(bad)
sbb
xchg
call
mov
dec
scas
loop
xchg
xor
xchg
ficomp
cs
cmp
(bad)
out
cmp
dec
mov
js
push
lods
push
out
push
and
pmaddwd
cmp
jl
fidiv
scas
(bad)
xchg
push
jecxz
pop
das
mov
push
add
sbb
movs
addr16
(bad)
cmp
out
mov
gs
test
bnd
aam
cmc
imul
jno
int3
call
or
dec
dec
bound
sbb
mov
jmp
mov
aad
mov
in
inc
mov
sub
jnp
mov
fbstp
push
popf
dec
cs
lds
repnz
aam
push
cmp
popf
into
(bad)
xchg
cmps
dec
cmps
mov
fsub
in
sub
pop
sbb
into
push
cmps
cmp
cmp
mov
out
test
xor
lds
nop
js
ror
sbb
icebp
ins
rcl
xchg
or
(bad)
mov
test
jns
je
jle
cmp
mov
test
and
mov
cmps
add
mov
dec
lds
sub
mov
mov
aam
cmp
call
je
ret
adc
and
mov
push
jmp
lods
(bad)
jb
push
(bad)
cmp
cmp
cs
int
cmp
inc
mov
and
adc
lock
dec
pusha
clc
jne
or
and
stos
outs
dec
cdq
pop
loopne
pop
ror
jecxz
cwde
xlat
sbb
jns
jmp
dec
jbe
call
dec
push
jbe
into
or
inc
cmps
mov
dec
xchg
add
sub
in
enter
sbb
and
pop
shr
movs
fsubrp
into
or
int
and
mov
cli
movs
jle
or
mov
xor
iret
call
ins
dec
mov
mov
cdq
push
ret
pop
cmc
jl
cmc
lods
popf
mov
aaa
dec
stos
loope
pop
scas
mov
cmp
push
xchg
scas
fdivrp
add
outs
ins
mov
cmps
outs
pusha
sub
loop
pop
pop
push
out
jns
mov
push
push
xlat
stos
mov
das
daa
xor
pop
movs
mov
inc
cmps
xor
mov
or
jno
(bad)
pop
repz
mov
bound
retf
fwait
sbb
clc
sub
mov
cmp
mov
vpsraw
xor
sub
and
sbb
(bad)
jmp
add
pusha
and
push
jns
scas
sub
push
mov
add
in
pusha
cmp
pop
mov
mov
lods
add
rcr
pop
add
push
dec
sbb
mov
fsubr
dec
adc
or
in
cmp
or
jp
xor
jg
inc
call
ins
or
xor
(bad)
adc
test
pop
xchg
and
push
(bad)
jns
jae
ror
cmp
push
sbb
and
mov
mov
aad
adc
sbb
arpl
mov
in
mov
retf
cli
stos
or
retf
xchg
inc
dec
imul
pop
(bad)
fistp
pop
shl
or
call
mov
push
in
jg
call
cvtpi2pd
adc
push
mov
pop
in
dec
xlat
dec
ss
pop
movs
cdq
enter
cmp
sub
jns
mov
sbb
aas
pop
jp
push
jae
aas
aaa
xchg
gs
adc
ds
stos
gs
test
repz
cdq
repz
ins
sbb
mov
aas
jns
mov
jg
mov
aam
jl
push
out
scas
ins
sbb
sti
mov
push
jae
sub
jbe
enter
cmp
jb
in
inc
retf
jle
and
cmp
mov
test
fsubr
mov
pop
jae
mov
xor
cmp
ficomp
(bad)
(bad)
xchg
lahf
ret
push
js
or
jns
fistp
enter
out
or
fnsave
cli
jne
bound
push
inc
push
mov
mov
cmp
mov
cmp
movs
mov
shl
call
jae
sahf
cwde
imul
call
sub
aas
jle
popf
sbb
jbe
xchg
jae
cli
mov
and
pop
adc
pop
xchg
lea
fidiv
iret
add
xchg
sub
mov
pop
xchg
fistp
jge
enter
in
repz
push
xchg
mov
repz
in
les
(bad)
sub
imul
xchg
or
push
iret
mov
inc
adc
fiadd
mov
xor
push
sbb
test
mov
popa
push
in
jecxz
push
loopne
scas
sbb
xchg
lock
cmp
cmp
out
aaa
loope
xor
pop
bnd
mov
leave
mov
jnp
popa
shl
loope
mov
out
mov
push
outs
xchg
xor
mov
and
mov
(bad)
fisttp
cmp
add
test
stos
test
cld
ins
and
int
push
lahf
and
pusha
sbb
fcomp
dec
sbb
xchg
sbb
out
test
pop
ins
mov
add
bound
xor
ss
mov
call
jle
xor
sbb
xor
mov
xor
(bad)
and
mov
or
pop
inc
imul
js
inc
push
add
push
push
mov
ret
stos
sahf
ins
sbb
test
arpl
mov
arpl
mov
hlt
mov
sub
movs
jp
pusha
push
jno
outs
imul
xlat
mov
sti
leave
in
fisttp
xlat
sbb
pop
fimul
push
and
jecxz
and
adc
ret
adc
push
sub
mov
mov
or
xchg
jp
stc
sbb
adc
add
in
mov
push
xchg
sbb
xor
pop
dec
ret
inc
dec
or
dec
mov
xchg
jmp
sbb
xchg
int3
adc
out
dec
in
and
dec
test
xor
xchg
mov
imul
fst
jmp
jmp
fisub
rcl
call
fld
popf
xor
fcomi
sbb
arpl
pop
or
mov
cmps
or
inc
int3
int
dec
sahf
sub
repz
push
inc
popf
jbe
and
aaa
and
push
sbb
retf
ret
pusha
adc
mov
stc
pop
pop
mov
push
movs
retf
sub
dec
sbb
inc
outs
push
adc
jnp
imul
call
jae
mov
ins
lock
fld
mov
jg
jbe
int3
ret
inc
in
sbb
out
test
sahf
mov
cmc
pop
aam
repnz
out
cli
pop
mov
xor
jae
out
jmp
sbb
lea
jecxz
movs
(bad)
retf
jbe
leave
push
cld
add
jmp
int3
pop
icebp
fndisi(8087
sbb
add
aam
hlt
adc
icebp
and
xchg
(bad)
push
or
push
out
and
sbb
std
enter
inc
adc
stos
hlt
je
movs
dec
dec
sub
jge
push
mov
aad
jnp
xor
jb
mov
mov
mov
int
arpl
pop
loope
jo
ss
mov
movs
(bad)
test
mov
(bad)
xchg
cmps
das
das
or
adc
xor
fdiv
adc
mov
or
or
cmc
push
mov
iret
jo
ss
push
stos
repz
aas
inc
jmp
and
cmp
loope
inc
shl
std
pop
jne
mov
cmp
(bad)
scas
mov
les
call
jp
and
pop
dec
pop
stos
add
repz
and
dec
test
inc
in
jmp
in
push
in
scas
fldl2t
fidivr
cli
sub
ins
out
lods
xchg
mov
inc
sub
adc
mov
sbb
push
inc
and
xchg
jb
push
icebp
int
xchg
(bad)
xor
xchg
shr
xor
xchg
adc
out
mov
lock
or
stc
jmp
frstor
jmp
inc
movs
and
shl
fdivr
jp
imul
xchg
inc
inc
push
cmp
(bad)
push
push
dec
adc
and
or
push
adc
and
cmp
or
scas
pop
xchg
sub
jle
sbb
jo
and
add
loope
mov
test
das
in
or
dec
les
or
outs
(bad)
loopne
les
mov
and
push
pop
xchg
xchg
cwde
or
adc
xlat
inc
mov
(bad)
in
ss
jmp
js
loop
and
lds
loopne
in
add
sub
push
mov
push
mov
push
and
or
pop
sub
xchg
sbb
mov
enter
call
sbb
xor
inc
push
mov
mov
and
mov
mov
movs
sub
and
pop
adc
into
aam
add
movs
and
dec
and
xchg
adc
jbe
adc
dec
sub
dec
adc
mov
or
lea
stc
in
cs
(bad)
stos
dec
lods
gs
inc
adc
jae
fmul
sbb
sbb
out
ins
test
call
shl
es
enter
jmp
pop
sub
stos
call
sahf
out
scas
aam
push
push
xchg
add
mov
push
jne
and
(bad)
fist
shl
mov
mov
aad
fstp
cmps
xchg
and
dec
pop
cmp
push
mov
push
jo
aaa
and
jmp
inc
mov
rol
imul
jle
and
push
push
push
div
popa
lahf
push
out
jbe
push
in
xchg
mov
clc
js
fucom
and
pop
fwait
outs
adc
add
and
push
(bad)
fisttp
scas
je
xor
in
sub
scas
or
mov
mov
xchg
repnz
sar
lds
adc
gs
(bad)
fiadd
pop
mov
mov
in
ret
pop
in
sub
dec
shl
xchg
jmp
cmp
sub
leave
sub
and
inc
fcom
pusha
pop
adc
lods
ins
outs
cdq
je
arpl
dec
js
out
mov
adc
jb
push
mov
es
or
enter
maskmovq
and
or
pop
mov
int3
mov
in
pushf
sbb
gs
mov
sub
xor
leave
ret
mov
movs
and
pop
mov
dec
sub
and
pop
push
(bad)
jl
retf
shl
sti
in
bound
cdq
add
sar
jmp
adc
movs
fcomp
mov
fwait
xchg
dec
inc
xchg
mov
sti
pop
loopne
inc
out
mov
ret
adc
enter
repnz
fdivr
lahf
repnz
in
push
imul
push
movs
xchg
lods
fwait
push
push
dec
push
mov
bound
ss
(bad)
xchg
aaa
in
mov
jne
ret
cmp
add
xchg
aas
fs
jle
lds
out
leave
jne
inc
push
mov
jmp
inc
xlat
mov
adc
popf
inc
push
aaa
outs
jmp
sahf
and
push
jp
cld
xlat
or
mov
add
popa
cli
mov
cmc
sahf
popf
movs
seta
sti
sub
dec
fisttp
and
sub
and
and
and
int3
and
pop
shl
or
or
call
or
sub
mov
pusha
jg
inc
xor
sub
retf
push
mov
leave
push
retf
dec
push
bnd
and
in
shr
out
pop
mov
jg
xor
push
lock
(bad)
push
addr16
xor
test
daa
sbb
inc
aam
cdq
push
adc
xchg
stos
inc
mov
movs
dec
mov
mov
xor
or
inc
int3
cmp
stos
xchg
popa
pop
sbb
add
sub
mov
into
(bad)
ret
hlt
shr
or
sub
mov
scas
int3
shl
(bad)
aas
xchg
and
cli
ins
pop
adc
push
push
cmps
ficom
rcl
pop
fdiv
arpl
das
hlt
(bad)
daa
cld
inc
mov
fdivp
in
es
push
xor
or
bnd
mov
repnz
inc
retf
add
dec
xchg
cdq
je
mov
xchg
aas
cli
cmps
cli
jb
in
sbb
jmp
cmp
retf
call
push
and
les
shl
jns
mov
cmp
rol
sub
imul
in
or
(bad)
imul
aaa
xor
(bad)
idiv
mov
push
cs
sti
cmp
mov
scas
shr
fdiv
stos
in
addr16
jo
adc
mov
sub
push
loope
fsub
pop
vpsraw
test
movs
mov
neg
lods
cmp
lds
sub
push
xchg
cmps
jecxz
or
neg
jle
push
dec
add
mov
in
sbb
hlt
or
fwait
jae
int
gs
add
movs
das
xor
sbb
push
mov
inc
ffreep
xor
dec
or
mov
call
add
mov
fdiv
jo
pop
pusha
push
and
push
idiv
jg
imul
xchg
xchg
jns
aam
les
cmp
inc
xlat
stos
mov
jle
mov
inc
sub
mov
add
mov
(bad)
sub
call
inc
lds
mov
cld
bound
sub
xlat
pop
call
push
inc
or
mov
cdq
mov
jns
popf
in
shl
push
jbe
mov
adc
add
dec
or
rol
adc
aaa
add
pop
sahf
or
pop
adc
jne
inc
jmp
(bad)
pop
jne
lea
xor
in
rcr
mov
or
inc
jno
sahf
je
adc
fwait
cmp
test
xor
push
mov
sub
and
je
ss
iret
cs
sub
add
dec
sbb
inc
adc
xor
and
in
or
inc
lds
jae
es
pop
loopne
cdq
jne
sub
mov
test
dec
and
ret
inc
xor
or
imul
mov
or
push
sub
and
lahf
lods
popf
in
jo
jle
or
(bad)
imul
ins
or
lahf
push
popf
mov
inc
or
cmc
lods
imul
xor
jp
inc
sbb
inc
rol
xchg
shl
push
fmul
xchg
xchg
and
dec
jae
xchg
push
into
xchg
and
dec
test
or
scas
outs
and
xchg
pop
dec
inc
not
and
xchg
jo
or
jp
push
mov
sbb
shl
jmp
out
push
int
fisub
retf
xchg
or
xchg
in
sbb
jl
ins
or
jb
rol
jp
das
push
add
and
out
test
aam
cmps
test
adc
test
lahf
xchg
xchg
jns
pushf
int
xchg
or
and
mov
or
xor
sbb
dec
sub
jns
jb
(bad)
retf
adc
sub
mov
inc
xchg
mov
(bad)
push
push
jns
xor
push
cld
or
aam
dec
in
jb
and
stos
inc
push
and
and
mov
jl
mov
and
enter
cmc
ins
cs
jmp
adc
cs
popf
add
push
adc
add
mov
dec
xchg
xlat
xor
jnp
int3
sti
movs
jns
out
stos
fimul
pop
dec
sub
fs
mov
dec
add
sbb
stc
push
cmps
and
mov
aam
test
push
cdq
adc
mov
sahf
jmp
or
fs
xor
je
ins
dec
stc
cwde
cmp
test
jl
ins
xchg
nop
arpl
sti
jb
arpl
fld
into
mov
mov
mov
dec
dec
sub
adc
lods
inc
and
sbb
in
mov
ins
jge
aas
and
inc
repz
cmp
jbe
adc
iret
sbb
int3
dec
cmp
shl
fsub
in
addr16
or
add
mov
dec
(bad)
into
sub
outs
push
pop
cld
movs
xchg
sub
pop
xchg
mov
push
aam
repnz
lahf
sub
stc
rol
movs
pop
xchg
pop
lahf
mov
xchg
mov
lods
push
jecxz
imul
mov
inc
sub
cmp
pop
pushf
lock
or
(bad)
jne
mul
mov
stos
dec
mov
mov
push
mov
ja
ja
fnstcw
outs
mov
mov
jge
mov
add
mov
jge
pop
jmp
dec
repnz
dec
hlt
inc
lds
mov
fdivr
mov
cdq
lds
cmp
pushf
and
dec
push
jnp
pop
pop
add
dec
cmp
push
int3
jnp
xchg
(bad)
int
nop
cmp
inc
enter
test
xor
adc
pop
shr
mov
push
in
or
cs
loopne
inc
push
inc
rep
push
pop
xor
cmp
outs
outs
sub
dec
sbb
pusha
mov
pusha
das
sub
repz
cdq
ds
mov
xor
mov
mov
loopne
xor
stos
pop
inc
outs
or
adc
xchg
jge
cmps
xchg
mul
cdq
adc
mov
or
jb
adc
inc
fucomip
mov
push
idiv
jg
inc
mov
mov
cmp
hlt
add
sub
cs
addr16
cmp
mov
jbe
sahf
add
mov
sar
sub
(bad)
push
imul
push
nop
popa
mov
outs
cmp
inc
loopne
fnstsw
dec
and
repnz
sub
dec
retf
xchg
sub
movs
push
mov
and
movs
fmul
mov
fisttp
or
(bad)
dec
rol
push
les
dec
xor
cli
mov
int3
repnz
push
push
nop
and
push
inc
ins
cs
adc
fsubr
mov
pop
xchg
and
sub
push
je
test
and
xor
mov
or
mov
mov
pop
jb
sbb
add
loop
mov
add
push
xor
(bad)
stos
fild
mov
fisub
pop
leave
push
addr16
pop
and
push
pop
sub
jae
sbb
mov
in
dec
mov
les
inc
or
out
icebp
xchg
mov
adc
ror
add
loopne
ins
cmps
push
inc
xchg
inc
jne
mov
mov
test
push
mov
xchg
pop
xor
jmp
cs
popa
mov
jno
fiadd
leave
add
mov
xor
adc
and
fs
mov
and
add
out
out
mov
pusha
push
inc
adc
inc
mov
xchg
ret
xlat
xor
pop
mov
dec
jge
jae
adc
retf
add
mov
outs
icebp
and
les
sub
test
xor
push
aam
es
adc
fdivr
lea
pop
dec
xchg
xchg
ins
call
fcmove
xor
jle
dec
cmp
or
(bad)
jg
in
outs
adc
jno
gs
sbb
outs
push
sbb
in
stos
mov
and
mov
sub
jecxz
mov
dec
add
mov
movs
popa
push
adc
push
xchg
mov
dec
cmps
(bad)
out
sti
out
movs
lock
or
dec
in
js
aaa
(bad)
cmps
mov
mov
sbb
jne
jno
or
cdq
lods
test
in
jns
jp
adc
fld
pop
inc
xor
lds
in
inc
push
dec
das
loop
add
popa
jno
dec
jbe
cld
popf
loopne
inc
sbb
inc
sbb
xchg
push
mov
mov
in
nop
adc
xor
jl
les
xchg
test
jo
inc
sub
ret
adc
mov
ror
das
push
repz
jo
xchg
mov
leave
call
aaa
push
xchg
adc
loope
and
or
add
and
dec
lea
xchg
inc
psrlw
xor
sub
aad
mov
xchg
mov
sbb
or
aam
add
add
pop
iret
sub
fnstcw
shl
add
movs
xchg
jl
add
xchg
adc
mov
pop
add
add
ret
xor
cmp
add
xchg
add
jbe
cmps
fistp
retf
jg
sub
sub
out
add
and
cmp
movs
fcom
ret
jns
mov
inc
adc
add
repnz
ror
cmp
mov
jb
test
in
(bad)
cmc
xor
mov
cli
inc
xchg
jbe
lods
icebp
rcr
push
sbb
xor
mov
loop
(bad)
(bad)
fcom
enter
sbb
imul
xor
clc
cmp
fcmovbe
sub
and
and
xchg
out
call
pop
jbe
adc
imul
add
aas
or
adc
cld
or
(bad)
or
xor
xor
dec
(bad)
nop
fidiv
mov
pop
cmps
cmc
xchg
enter
mov
sub
add
push
jb
ins
out
arpl
mov
cmp
jg
dec
call
pop
sub
js
and
aaa
inc
(bad)
xchg
mov
and
repnz
enter
jns
stos
je
fcomp
xor
stos
push
mov
mov
pop
xchg
xchg
aas
das
xchg
(bad)
outs
ficomp
retf
dec
je
xchg
adc
js
xor
aad
(bad)
lea
push
sbb
ins
sbb
dec
cmp
ja
jo
cs
push
jmp
pop
ret
pusha
sbb
sahf
mov
xchg
xchg
xchg
(bad)
xor
imul
pushf
mov
cwde
into
jle
sub
stos
lods
scas
xchg
cmc
xlat
inc
(bad)
and
and
dec
das
push
enter
cmp
sbb
pusha
jmp
dec
jo
cwde
(bad)
pop
pop
(bad)
(bad)
fsubrp
shl
or
sbb
mov
sbb
push
cwde
adc
(bad)
test
pusha
inc
test
sti
enter
pop
ins
fnstsw
mov
and
mov
call
stc
stos
mov
in
sbb
and
ret
inc
mov
sub
mov
shr
mov
jl
mov
aaa
mov
fisttp
ret
mov
or
inc
dec
xchg
test
into
out
lock
cld
pop
adc
dec
pop
loope
fcomi
cmp
aad
xchg
int3
int
xchg
sub
div
cld
xchg
jne
or
(bad)
xchg
sbb
gs
icebp
push
pop
mov
aad
aam
push
mov
push
pop
mov
scas
aas
mov
shl
daa
cli
aaa
mov
adc
in
and
or
push
inc
stos
sahf
rcl
cmps
shl
aas
ja
xchg
cmc
xchg
cdq
(bad)
in
lods
jg
inc
jge
mov
xor
push
add
jae
xchg
pushf
pop
mov
cmps
jge
(bad)
ins
fsub
fwait
cmp
(bad)
in
dec
int3
mov
inc
sub
sti
xor
push
sbb
(bad)
jge
shl
adc
lods
ss
ss
and
mov
cmp
mov
iret
or
aad
mov
dec
retf
and
lods
push
mov
shl
dec
shr
push
call
jp
xchg
fsubr
push
stos
jg
sti
ds
ja
neg
sbb
lds
sub
fisubr
adc
dec
cmp
out
out
mov
jns
jb
mov
dec
xchg
inc
mov
sbb
les
cld
stc
mov
(bad)
ror
mov
test
sub
test
xchg
out
test
mov
sub
push
push
sysexit
mov
test
mov
mov
pop
mov
popa
pop
cli
cmp
jl
jmp
dec
test
js
mov
xchg
nop
sti
and
push
pop
ror
pop
hlt
jnp
push
pop
aam
mov
fwait
out
mov
ins
(bad)
jae
test
test
jo
or
jae
fsub
pop
xor
inc
js
mov
mov
mov
xor
jbe
xchg
sbb
pop
lods
jg
xor
fwait
fwait
mov
rol
fisttp
inc
cmp
pop
mov
push
shl
mov
es
cmp
sub
aas
add
cmp
cmps
sub
cmc
cwde
and
movs
leave
push
or
and
adc
aad
and
mov
sbb
out
mov
and
sbb
pop
add
adc
icebp
jg
sub
aam
into
and
ror
arpl
inc
xchg
cmc
sbb
jecxz
repz
sbb
cli
mov
push
add
cmp
mov
sbb
xlat
hlt
jmp
pop
inc
pusha
push
ins
pop
pop
fadd
lods
ins
or
jb
into
inc
pop
jp
sub
mov
push
lds
dec
aam
mov
add
dec
das
jae
clc
mov
jmp
jo
add
aad
pop
int
pop
out
movs
mov
push
jae
fwait
or
pop
pop
test
cwde
stos
lods
dec
aaa
and
or
popa
dec
nop
mul
adc
fs
imul
ins
xchg
shl
or
cwde
push
fimul
push
cwde
rcr
rol
scas
push
fisttp
cmp
add
repz
ss
push
cli
nop
mov
test
pushf
xor
or
nop
out
xor
cmp
and
add
inc
inc
inc
adc
jb
jmp
aad
cmp
out
cdq
sbb
mov
scas
cs
jle
add
out
aas
xchg
ins
shl
pop
push
dec
mov
in
pop
jae
nop
dec
retf
adc
mov
(bad)
pop
adc
dec
(bad)
push
jmp
fdiv
sbb
ret
fdivr
ins
jbe
jl
xlat
sti
mov
adc
cmp
out
xchg
mov
cli
cmp
or
jmp
outs
cmp
aam
pop
xor
mov
push
stos
dec
xchg
out
jnp
stc
out
out
add
fsub
pop
pop
gs
jl
mov
loope
add
mov
cli
neg
mov
hlt
cmp
xchg
adc
mov
mov
adc
imul
mov
sbb
adc
imul
out
sti
pop
mov
dec
ret
adc
into
aam
xor
leave
shl
sub
push
sbb
fisub
outs
cld
(bad)
mov
sub
repnz
inc
lods
mov
fisttp
add
mov
shr
adc
xor
dec
test
dec
in
sub
mov
lods
and
test
mov
pop
sub
dec
and
ss
cmp
loopne
(bad)
mov
push
cmp
pop
cwde
sub
inc
mul
cs
stos
pop
lds
sti
push
push
or
mov
enter
fs
arpl
or
push
scas
in
add
mov
es
xchg
adc
push
lahf
jno
repz
call
xchg
(bad)
aaa
adc
xchg
cmps
icebp
mov
pop
xor
xchg
cmp
into
mov
xchg
loope
fidivr
xor
sbb
xor
jo
sub
jmp
mov
fdivr
pushf
gs
(bad)
retf
push
jne
lods
sub
push
push
ror
leave
retf
dec
test
inc
das
pop
lods
mov
mov
dec
add
clc
jb
mov
jo
xchg
fptan
mov
or
jns
push
sbb
repz
and
and
pop
and
push
js
lock
cmp
cmp
push
ins
ja
outs
sbb
stos
outs
lods
push
ins
ret
inc
clc
stos
daa
out
(bad)
retf
fdivr
xchg
dec
retf
push
mov
jle
out
xchg
mov
test
adc
sub
jmp
cs
and
push
sbb
mov
sub
call
popf
ds
xchg
inc
push
pop
sbb
xor
aad
fdiv
(bad)
xor
mov
and
fnclex
mov
jmp
xchg
out
pusha
mov
mov
xchg
sbb
lds
aas
xor
mov
sar
mov
fprem
shr
add
fidivr
sar
jmp
pushf
push
mov
movs
and
imul
sbb
cmp
dec
repz
out
cli
fcom
jb
in
fsubr
mov
enter
or
and
std
sub
adc
int
in
cmp
popa
and
imul
sti
cmp
cdq
mov
stos
fdivrp
jl
jmp
dec
shl
scas
jbe
fisubr
cmp
lods
fnstenv
in
fsubr
xchg
retf
pop
pop
aas
fs
sub
add
jle
mov
mov
out
jmp
lods
push
adc
sub
lock
sub
arpl
sbb
lods
rcr
or
and
mov
cmp
sub
jl
out
movntq
jbe
or
jb
inc
cmp
mov
cmp
pop
or
or
fwait
je
inc
jo
in
outs
push
mov
sbb
sbb
pop
sbb
ja
mov
imul
(bad)
shr
rcl
inc
mov
xor
inc
leave
sub
xor
xor
rcl
fwait
je
pushf
mov
mov
mov
xor
inc
sbb
scas
fild
daa
mov
cmp
mov
imul
cmp
icebp
inc
dec
push
jl
ins
(bad)
mov
popa
movs
call
out
test
mov
sbb
or
loope
add
rcr
into
out
or
dec
mov
retf
mov
mul
push
into
test
repnz
xchg
dec
repnz
cmp
(bad)
inc
mov
lods
mov
lods
adc
mov
scas
fsubr
sbb
jne
pushf
jmp
out
paddq
xchg
movs
add
pop
ins
mov
fwait
stc
in
(bad)
pop
sbb
scas
adc
js
push
mov
aad
xor
jmp
sti
cmp
outs
xor
xchg
xchg
and
push
cmp
leave
data16
pop
dec
mov
mov
fbstp
ins
sub
test
push
ds
std
cwde
js
mov
or
iret
hlt
jge
sti
xchg
cmp
sbb
fisubr
dec
jecxz
into
push
mov
xor
xor
jg
stc
je
add
jle
jne
push
pop
push
dec
int3
popf
aad
mov
cmp
call
or
push
or
xchg
xchg
ficomp
cdq
and
mov
sbb
adc
cld
sub
or
ss
push
push
jmp
dec
fdiv
cmc
dec
lea
jg
mov
mov
repnz
(bad)
sti
clc
stos
stos
mov
test
gs
fst
mov
jg
cmp
push
jg
cdq
(bad)
(bad)
ficom
sub
les
outs
hlt
inc
mov
add
mov
push
iret
add
aas
adc
mov
aam
and
(bad)
dec
mov
push
in
sub
jo
loop
jno
sahf
movs
xchg
sub
pop
xor
push
mov
xor
pop
imul
aam
fdivp
lahf
push
xor
sub
jns
adc
enter
out
ror
mov
cwde
pop
fldcw
mov
loopne
in
stos
jp
mov
inc
xchg
mov
mov
stos
mov
(bad)
fcmovb
shl
push
out
imul
dec
lds
cld
mov
sub
dec
sub
cmp
pop
rol
mov
call
test
dec
mov
std
and
mov
mov
js
xor
jle
retf
pop
fs
sti
xchg
push
scas
lea
addr16
adc
fcom
and
test
xor
inc
lods
mov
scas
cmp
add
mov
std
stos
adc
ret
cmc
je
add
xor
inc
icebp
ja
xchg
xchg
cmp
icebp
mov
ds
fnstenv
lds
test
gs
pop
or
push
add
inc
xor
cmp
pop
xor
mov
cli
mov
mov
jmp
retf
leave
xor
mov
xchg
xchg
mov
push
xchg
push
retf
fistp
std
loop
ficomp
ins
jnp
ds
or
and
inc
mov
add
jmp
xor
ror
loopne
lock
pop
fstp
std
stc
sahf
gs
into
popa
mov
rcr
add
mov
test
jnp
out
jns
mov
aaa
pop
xor
jle
mov
aam
jl
dec
pop
cli
test
adc
push
retf
popf
fxam
pushf
pushf
xor
inc
popf
test
call
jns
pop
inc
leave
sub
push
dec
aaa
test
cmp
pop
loop
test
xchg
inc
push
jmp
ins
sbb
loop
inc
int
cli
xlat
(bad)
imul
std
cmps
mov
xchg
xchg
jmp
rcl
popa
cmc
ds
add
test
(bad)
mov
mov
add
out
out
pop
ins
int
or
loopne
fisttp
clc
jns
mov
cmp
imul
outs
and
or
cmps
push
lods
or
ror
lock
ss
(bad)
clc
out
fwait
xor
popa
arpl
fiadd
mov
inc
jmp
(bad)
scas
scas
les
push
push
rol
sahf
pushf
loop
jnp
adc
or
xchg
(bad)
out
mov
(bad)
repz
mov
ss
inc
cmp
je
pop
cld
dec
pop
push
packuswb
iret
aaa
sbb
and
jns
je
in
push
cs
lahf
sbb
stc
inc
mov
inc
fwait
jno
add
mov
ret
push
push
mov
(bad)
mov
xlat
jle
aaa
adc
add
jl
scas
jo
sbb
mov
out
les
(bad)
(bad)
out
mov
ror
je
cld
push
test
aam
jno
cmp
cmp
sub
call
in
imul
and
dec
outs
movs
jecxz
lods
shl
rol
jp
in
(bad)
jae
movs
sbb
leave
mov
xor
ror
dec
dec
sti
push
je
pop
repnz
cmp
add
int
test
icebp
not
loope
cmp
imul
sbb
mul
sub
adc
bound
or
mov
jo
in
test
hlt
mov
data16
pop
cmp
dec
cmps
out
ret
int3
cmp
cmc
jl
test
ficom
dec
push
cmp
rol
sub
push
xor
mov
mov
loope
pop
jmp
sbb
and
repnz
adc
sbb
inc
pop
sbb
cmps
retf
lock
js
enter
cmps
out
jmp
repz
sub
cmp
dec
pop
adc
imul
cmps
repz
xor
mov
dec
jns
mov
xor
(bad)
sub
or
cmp
push
clc
inc
(bad)
adc
sar
scas
mov
outs
stos
push
daa
and
(bad)
or
cld
jmp
xor
out
out
or
jp
xlat
mov
and
(bad)
sahf
addr16
clc
std
xchg
(bad)
sub
or
leave
aas
dec
or
cmp
adc
pusha
dec
pop
in
mov
pushf
add
sbb
mov
adc
fldcw
imul
(bad)
into
sub
out
and
mov
mov
stos
inc
loope
ret
push
out
mov
scas
rcl
cmp
push
dec
cmp
xchg
(bad)
push
inc
inc
mov
popa
push
and
(bad)
out
ret
xor
mov
ret
mov
mov
jnp
xchg
push
test
retf
adc
fwait
sbb
pop
adc
lea
mov
dec
mov
sub
fadd
movs
(bad)
addr16
cli
cmp
ss
lock
push
scas
push
xor
ficomp
cdq
add
(bad)
jecxz
lock
sub
push
test
mov
shl
retf
outs
mul
hlt
inc
out
mov
imul
loop
mov
add
jp
in
adc
das
call
cmc
ror
pushf
ja
sbb
cld
and
into
loopne
mov
std
push
mov
jbe
jbe
cmp
mov
out
fwait
les
xchg
test
add
push
movs
stos
pop
(bad)
adc
jge
out
pop
pop
ret
fwait
enter
lahf
xchg
jmp
(bad)
iret
pop
imul
cmp
test
cmps
sub
jp
cs
mov
in
lds
clc
inc
push
fs
das
test
jae
outs
and
fmulp
cmps
push
jp
cmp
stos
nop
call
or
sahf
ret
adc
scas
je
xchg
movs
sbb
(bad)
imul
mov
dec
fisttp
aaa
mov
jb
out
mov
es
sub
ret
pop
out
fnstenv
fdivp
sbb
stos
je
pop
jno
ror
or
and
jecxz
or
stos
call
cmp
push
cmp
loopne
dec
mov
stos
pop
cmp
mov
out
mov
ffreep
and
xchg
inc
mov
out
test
sbb
cwde
push
xchg
pop
pop
int
push
jmp
pop
cmc
inc
push
inc
imul
les
data16
(bad)
xchg
adc
rcl
dec
sbb
popf
inc
popa
out
int
enter
or
cwde
pop
or
mov
test
imul
ss
sbb
inc
out
xor
mov
add
add
scas
ja
mov
cmp
adc
repz
clts
and
inc
dec
outs
out
inc
mov
lock
dec
mov
adc
cmovne
arpl
neg
push
xchg
scas
and
push
mov
and
es
fwait
xchg
(bad)
fdivr
sahf
or
pop
add
into
fisttp
mov
out
(bad)
clc
mov
sbb
cmp
cld
into
push
mov
add
into
aas
and
mov
dec
pop
aam
add
cld
add
mov
cmps
cmp
sbb
and
fdiv
ficomp
leave
clc
pusha
or
(bad)
dec
mov
cmp
mov
dec
ins
sbb
ss
mov
ss
lea
adc
xchg
leave
mov
xchg
pushf
pop
xchg
and
fidiv
mov
jae
mov
test
mov
aad
jg
mov
xor
mov
mov
push
mov
popf
adc
cs
stc
xchg
pop
mov
adc
(bad)
out
scas
cmp
addr16
sbb
lea
cmp
dec
jp
cmp
(bad)
sar
ss
push
mov
pop
adc
clc
jnp
out
iret
lahf
aas
(bad)
jmp
rol
aaa
sar
add
fimul
cmp
sbb
(bad)
std
mov
dec
mov
sbb
leave
mov
xchg
add
cmp
cwde
(bad)
into
cmps
or
inc
mov
xor
addr16
sbb
mov
dec
pop
sub
push
scas
dec
sub
xrelease
fmul
or
popf
lea
test
pop
pop
dec
arpl
add
ret
jg
xor
cwde
dec
mov
in
addr16
push
xchg
ja
xor
ins
mul
jne
mov
ins
mov
stos
sbb
div
out
daa
fisubr
pop
xchg
mov
push
or
cmp
ins
mov
(bad)
jo
push
mov
shl
fdivr
dec
add
cmps
les
out
mov
(bad)
std
js
enter
sbb
or
push
sbb
clc
mov
nop
aam
jae
pop
lds
mov
or
rcl
mov
adc
adc
adc
mov
int
mov
sahf
cmc
or
sub
sub
shl
push
out
sub
jbe
frstor
xchg
ret
fimul
xchg
mov
test
retf
into
data16
mov
stos
fild
in
jmp
jae
into
call
mov
or
nop
sbb
rcl
or
jmp
mul
jmp
mov
(bad)
cmp
(bad)
push
and
xchg
nop
popf
pop
jae
std
shl
push
cs
and
repz
stos
loopne
mov
pop
mov
or
push
push
sti
push
and
leave
pop
mov
repz
jnp
hlt
add
sbb
mov
test
inc
cmp
dec
push
repz
and
inc
xor
cmc
dec
or
push
pop
mov
cmp
inc
inc
and
bound
icebp
shl
(bad)
in
push
movs
or
cdq
repz
imul
clc
push
sub
adc
jno
push
vcmpss
ins
sbb
das
mov
cmp
jge
xor
or
or
je
out
cld
mov
cmp
fs
mov
sets
push
repnz
lods
cs
add
lods
ss
sahf
sub
imul
push
and
call
pop
push
xor
arpl
pop
add
push
mov
inc
adc
fucomi
lock
ja
clc
xchg
lahf
inc
xchg
clc
xchg
cmps
es
jecxz
add
adc
sub
fldenv
pop
dec
sbb
addr16
aaa
push
cmp
inc
cmc
mov
mov
xchg
and
mov
dec
lahf
jge
rcr
and
ror
pop
mov
imul
sbb
sar
xor
and
out
jmp
adc
test
pop
xor
ja
inc
sar
rcr
pop
xchg
fwait
pop
mov
jg
in
arpl
stos
aas
sub
daa
push
jo
(bad)
cmp
outs
retf
pop
mov
or
inc
push
stos
imul
push
or
push
loopne
enter
adc
rcr
add
fwait
sbb
cmp
or
add
cmp
dec
shr
pop
jbe
adc
fild
add
xchg
dec
xchg
jne
ins
inc
aad
adc
add
test
outs
out
stc
sbb
enter
retf
scas
mov
(bad)
xor
in
loope
push
dec
shl
lods
sub
stos
aad
adc
or
mov
inc
add
idiv
mov
sub
dec
int
push
mov
sub
cmc
mov
ja
mov
or
loop
and
hlt
bound
movs
ins
adc
xchg
jnp
mov
cwde
(bad)
leave
mov
scas
dec
sbb
fwait
aam
jecxz
mov
loopne
cmps
sbb
or
arpl
xchg
xor
in
outs
lahf
dec
mov
pop
pop
pop
cmp
outs
inc
dec
ror
dec
(bad)
jne
xor
cmps
shr
cmp
enter
popf
(bad)
push
iret
scas
push
jmp
mov
bound
in
ds
push
imul
sbb
aas
in
pop
sbb
test
cmp
test
sbb
out
jmp
test
push
mov
les
jno
dec
movs
mul
(bad)
loop
scas
in
pusha
add
xor
ja
adc
pop
ret
jle
pop
jb
div
mov
idiv
ret
add
cmp
sahf
jl
test
lea
xor
scas
movs
jecxz
jmp
test
pop
jnp
int3
in
mov
call
ja
imul
and
pop
daa
xor
dec
mov
jbe
nop/reserved
cmp
mov
push
pop
cmp
or
inc
jge
aad
sub
mov
sbb
stos
int3
test
pushf
jmp
cmps
cdq
xchg
dec
mov
dec
addr16
push
or
(bad)
daa
(bad)
jl
nop
(bad)
fstp
jmp
leave
(bad)
xor
push
int3
mov
mov
cwde
cdq
and
bound
pop
inc
cmp
xchg
movs
dec
pop
or
adc
mov
mov
(bad)
aad
rol
xchg
jecxz
jae
cli
pop
jl
(bad)
stos
retf
shl
push
inc
push
popa
lods
adc
dec
dec
hlt
adc
adc
cmp
fs
arpl
or
jbe
iret
mov
pop
out
aad
jge
sti
mov
in
mov
(bad)
fidivr
mov
iret
ins
jl
inc
(bad)
fmul
jae
lea
add
mov
xchg
mov
adc
dec
out
mov
or
mov
cmp
or
dec
(bad)
ja
mov
cmp
push
adc
jnp
test
mov
outs
(bad)
jge
les
sub
jecxz
repnz
(bad)
out
cmp
in
ss
call
outs
adc
in
sbb
mov
pop
pushf
inc
mov
pop
lahf
jae
jne
std
fsubr
jnp
sti
jbe
ins
pop
ds
int3
rol
int
adc
aas
(bad)
mov
mov
(bad)
mov
pop
mul
jns
(bad)
push
push
mov
inc
add
aaa
scas
mov
mov
push
out
ret
xor
cli
arpl
xor
add
cmc
jns
inc
addr16
jns
ds
xor
(bad)
mov
int3
sar
and
pushf
dec
cmp
daa
adc
inc
mov
and
cmp
adc
cmp
rol
and
mov
xchg
loop
dec
pop
sti
and
fwait
hlt
push
and
ret
sar
add
cmp
ret
shl
mul
and
icebp
in
shufps
test
inc
pop
jae
test
add
push
aaa
fiadd
pusha
idiv
jmp
jae
gs
and
jp
(bad)
stos
call
loop
fimul
adc
in
inc
fcomp
daa
sbb
jg
push
aad
fldcw
aas
inc
xchg
shr
lock
pop
ds
(bad)
xor
imul
xchg
retf
sbb
imul
xor
or
lds
(bad)
mov
dec
fs
dec
adc
adc
in
mov
cmc
cdq
xchg
loop
xor
push
cmps
call
je
call
test
sub
mov
add
or
pop
js
loopne
add
jbe
pop
mov
mov
inc
adc
pop
push
add
sbb
outs
dec
inc
mov
xor
sbb
cmps
cmps
inc
mov
je
icebp
mov
xor
cmc
and
pop
sbb
popa
dec
cli
inc
cmp
cmps
jecxz
es
fld
(bad)
xchg
adc
xor
jnp
bound
xor
inc
imul
mov
call
xor
xchg
add
nop
jl
test
lods
mov
data16
out
mov
or
ret
div
push
shl
pop
fmul
jmp
mov
push
adc
sub
add
xchg
inc
cmps
stos
pop
inc
cmp
sbb
cmp
inc
sbb
ret
jmp
outs
lods
enter
daa
lods
mov
push
daa
ins
pushf
prefetcht2
pop
push
adc
aaa
cdq
jecxz
test
sub
sbb
aas
shl
push
mov
jnp
test
push
ret
out
fadd
fld
pop
or
rol
cmp
pop
or
test
xchg
aad
leave
test
push
pcmpeqw
aad
into
jecxz
xor
adc
inc
shl
loopne
mov
mov
mov
js
add
daa
test
(bad)
ret
popa
loope
inc
sbb
cs
jecxz
xlat
(bad)
rcr
xchg
daa
xor
adc
fisttp
xor
pusha
mov
dec
scas
xor
push
test
call
cmp
xchg
dec
mov
inc
mov
lds
mov
mov
out
pushf
clc
xlat
std
pusha
mov
mov
pop
adc
cdq
jl
pop
sub
cs
mov
xchg
push
fs
mov
js
and
adc
push
push
ror
pushf
fidiv
cmp
inc
sbb
loope
out
or
jmp
sub
call
addr16
ins
and
dec
mov
inc
and
in
and
xor
inc
in
ins
xchg
inc
jae
es
rol
imul
cmp
pop
sbb
sub
mov
mov
dec
aam
je
add
inc
xlat
inc
jnp
cmp
iret
pop
and
dec
js
je
int3
mov
push
adc
mov
push
pop
aad
mov
mov
or
sbb
popa
or
jecxz
jecxz
adc
repz
sbb
xchg
ss
xor
xor
mov
fisubr
nop
xchg
mov
mov
fwait
test
cwde
jmp
cwde
dec
shr
movs
shr
cmps
sub
push
test
push
sahf
repnz
retf
mov
fnstenv
in
test
mov
mov
adc
bound
inc
ja
or
lahf
jno
pop
fsub
cld
xchg
push
jo
jnp
inc
xor
out
test
mov
cld
xor
or
cmps
sbb
and
ror
adc
stos
xor
mov
popf
outs
es
xor
jecxz
pop
mov
xor
outs
movs
push
int3
fild
push
jmp
pop
pop
les
jo
cli
jno
inc
lods
mov
mov
repnz
aad
ins
adc
loopne
mov
out
or
test
mov
mov
int3
inc
jmp
add
ret
jbe
or
leave
or
push
stc
jno
int
cld
out
out
pop
push
fwait
fwait
jns
hlt
pushf
imul
pop
iret
cli
inc
sub
inc
jb
sub
pop
dec
lods
js
xchg
arpl
xchg
in
adc
test
jns
sbb
sub
or
jp
and
mov
mov
scas
xchg
(bad)
pop
test
in
imul
or
lods
add
xchg
dec
cmp
sbb
setbe
adc
adc
xchg
and
dec
pop
sub
call
adc
mov
retf
aam
in
por
aaa
add
iret
ret
loop
fiadd
sbb
sbb
(bad)
adc
push
leave
in
xlat
push
daa
xchg
in
xlat
ins
into
pop
cld
fwait
scas
push
mov
dec
mov
arpl
ficom
sub
xchg
out
(bad)
fisubr
adc
inc
push
mov
inc
inc
push
pop
andnps
movs
inc
inc
xchg
inc
and
cld
mov
dec
mov
sub
and
pop
sbb
cdq
pop
es
xchg
mov
and
out
sub
adc
mov
sar
jb
mov
(bad)
pop
inc
test
pop
jecxz
mov
test
imul
xchg
lock
scas
rcr
mov
call
daa
popa
lahf
mov
call
push
push
adc
push
xor
(bad)
adc
xor
cmps
sahf
(bad)
add
out
jns
pop
adc
push
popa
popf
out
mov
xor
sub
mov
push
inc
shl
jle
js
jge
or
xlat
jno
dec
mov
sbb
retf
jmp
cmp
mov
neg
int
pushf
or
xchg
inc
and
mov
inc
dec
fcmovu
out
adc
push
test
sar
popf
ins
lea
or
jecxz
or
or
adc
je
xor
outs
mov
imul
call
push
xchg
rcl
inc
retf
mov
sub
repnz
or
es
and
gs
aam
add
add
nop
lock
jns
daa
inc
adc
in
(bad)
icebp
rol
jecxz
xor
call
repnz
xor
idiv
ret
lea
das
imul
cmp
pop
mov
ins
jmp
sbb
push
cdq
(bad)
or
les
jmp
mov
and
push
mov
repnz
movs
dec
movs
scas
and
test
or
outs
inc
sbb
jp
icebp
dec
ins
int3
or
push
mov
jmp
je
fwait
rcr
scas
and
ja
mov
icebp
mov
cdq
and
xchg
cmc
out
adc
sahf
out
call
xor
push
mov
pop
daa
push
push
fs
xlat
ret
inc
cs
clc
push
add
cdq
sbb
add
(bad)
xchg
xchg
pop
xor
ss
mov
movhps
int3
sub
in
shl
and
or
push
mov
(bad)
push
retf
clc
aad
xchg
and
and
mov
rcl
mov
call
mov
sbb
loopne
push
jbe
shl
xor
or
or
lahf
or
inc
aad
sub
loopne
jmp
pop
adc
cmps
dec
xchg
jg
ds
jmp
call
cmc
popa
icebp
xchg
hlt
fsub
push
dec
xlat
daa
push
lahf
inc
stos
sub
int
and
pop
mov
rol
gs
and
cwde
popa
or
xchg
mov
mov
push
loopne
dec
mov
mov
push
jmp
adc
sub
es
mov
mov
or
xor
das
push
cmc
jo
jno
(bad)
adc
mov
(bad)
enter
ret
pop
add
jno
test
mov
xchg
cmc
mov
mov
mov
mov
call
xchg
aaa
(bad)
inc
dec
jle
ret
jb
sbb
das
ret
fld
test
jg
sbb
mov
inc
jecxz
nop
call
stos
mov
je
inc
xchg
mov
retf
aam
aaa
mov
enter
inc
pop
fcmovnu
pusha
push
pop
pushf
das
(bad)
ss
add
int3
leave
or
cmp
add
jno
lahf
or
sub
sub
repz
jne
in
lock
(bad)
cmps
push
int3
ror
xor
(bad)
cmp
jmp
push
mov
xor
dec
rol
scas
mov
push
pop
stc
lea
and
stos
lods
shl
call
aam
xlat
and
rol
in
nop
imul
push
nop
cmps
das
cdq
ret
jb
(bad)
movs
sub
ret
call
cs
xchg
cwde
and
lods
or
pop
sbb
mov
(bad)
loope
and
ins
mov
sahf
mov
jmp
cmc
mov
fidiv
dec
pop
sbb
pop
stos
ja
and
(bad)
popa
jg
inc
sub
jmp
mov
sbb
mov
fiadd
add
stos
push
jp
xchg
or
mov
sbb
in
ja
xchg
icebp
cs
ja
(bad)
ficom
(bad)
jecxz
pop
hlt
xor
outs
mov
dec
fcom
imul
aam
in
out
add
ffree
neg
xchg
movs
les
arpl
sbb
mov
shl
pop
adc
and
and
xor
icebp
loop
inc
and
jb
js
int
loopne
(bad)
das
stos
fs
cmp
sahf
pop
call
mov
push
pop
out
pop
sahf
popa
mov
lahf
inc
xlat
push
push
rol
jo
push
inc
sub
jne
shl
xchg
out
aad
mov
sbb
fstp
movs
aad
call
push
or
mov
cmp
(bad)
jns
in
xchg
shl
sub
mov
stc
cmc
fst
cmp
hlt
xchg
outs
mov
jns
cmp
sahf
push
xchg
js
or
pop
pop
(bad)
mov
(bad)
test
jo
dec
ins
push
mov
lods
or
paddsw
(bad)
push
mov
cmp
mov
mov
fwait
in
loop
pop
adc
movs
inc
dec
xor
add
mov
push
call
pop
adc
push
clc
lods
and
pop
test
and
(bad)
xchg
mov
jmp
dec
shl
in
jmp
and
cmp
bound
mov
mov
test
jo
mov
push
pop
sub
retf
(bad)
call
sub
jnp
ffreep
pop
mov
pop
clc
or
fcmovnbe
ins
out
mov
out
int3
push
not
mov
or
sbb
or
popf
mov
addr16
ret
sbb
pop
mov
push
cli
pop
add
or
loope
mov
or
adc
in
cmps
xor
mov
popa
ins
fucomi
(bad)
int
jne
outs
mov
out
ficomp
xor
lods
sbb
mov
js
push
aam
cs
pushf
mov
mov
scas
fld
jae
fiadd
pop
jns
pusha
loopne
in
test
fistp
iret
push
dec
and
mov
lods
adc
sbb
out
cmp
pop
dec
ret
stos
sti
mov
pop
xlat
cmp
je
mov
shl
sar
or
fs
jbe
mov
loopne
inc
scas
aas
out
test
loopne
adc
je
xor
inc
jb
add
add
push
jo
mov
lahf
lock
mov
mov
bswap
les
dec
jg
mov
adc
test
and
mul
in
ds
push
scas
sbb
dec
dec
push
or
xchg
shl
jmp
and
push
popa
jp
cmc
arpl
loopne
mov
fidiv
or
fld
jne
popf
add
mov
sbb
sbb
jmp
inc
out
aas
xor
xor
daa
xor
ins
dec
jbe
or
loop
gs
mov
mov
inc
mov
(bad)
outs
jno
stc
xchg
and
(bad)
xchg
lock
push
pop
lock
cmp
and
dec
sub
jmp
jno
xchg
push
mov
repz
or
inc
inc
mov
lods
cmp
je
pushf
test
push
xchg
mov
or
mov
inc
add
and
pop
imul
das
fcomp
ins
das
por
add
iret
sti
test
es
xchg
or
ins
mov
xor
adc
jle
mov
test
adc
scas
loop
out
cmps
ins
jge
adc
das
dec
adc
and
mov
mov
shl
adc
jo
sbb
mov
fwait
xchg
or
es
daa
push
cmp
sub
and
cld
jp
push
adc
adc
or
dec
lds
adc
dec
pushf
dec
mov
rcl
or
sub
rol
dec
bnd
sbb
dec
push
adc
inc
cmp
mov
adc
fcmovu
adc
dec
jmp
pop
mov
retf
rol
jmp
xlat
sti
add
std
retf
dec
pop
rcl
mov
in
inc
js
call
add
out
xor
aam
ins
add
jmp
retf
je
mov
mov
mov
aam
popa
(bad)
aad
or
stos
in
lds
pop
cli
pop
in
mov
mov
addr16
stos
pop
mov
jmp
test
mov
and
pusha
int
push
adc
mov
mov
arpl
movs
cwde
sbb
push
pop
inc
(bad)
pop
loopne
add
xor
push
dec
add
test
shl
xchg
xchg
call
inc
pop
or
adc
push
addr16
mov
rcl
xchg
cdq
enter
ins
xor
ss
fadd
test
and
dec
ror
mov
xchg
stos
fimul
call
cmp
pop
inc
sbb
jo
mov
jle
xor
push
mov
inc
(bad)
ins
or
dec
nop
sbb
cwde
or
pop
int3
xor
adc
xchg
js
inc
mov
cmc
loop
inc
pop
xchg
push
mov
lock
scas
cmps
cmp
ret
sbb
aad
jo
jbe
ficom
adc
cmc
idiv
push
loop
pop
cmps
popa
push
out
cld
(bad)
dec
inc
xor
(bad)
jle
pop
(bad)
pop
outs
fiadd
pushw
push
rcl
cmp
mov
(bad)
mov
sub
inc
stc
call
popa
js
je
push
xchg
retf
(bad)
xor
outs
inc
hlt
add
sbb
aam
data16
mov
imul
push
dec
psubusw
mov
cmps
loopne
imul
daa
pop
ror
jne
rcl
ret
cmp
in
movs
gs
jmp
scas
cmp
fisubr
or
xchg
mov
xchg
mov
(bad)
popa
xchg
not
outs
shl
retf
sub
rcl
adc
loope
rep
sub
cmp
loope
in
push
mov
(bad)
pop
popa
(bad)
fisttp
sbb
sbb
hlt
xchg
push
ins
clc
stos
ja
mov
fcmove
out
and
jmp
icebp
adc
loopne
add
pop
mov
jnp
xchg
(bad)
retf
mov
je
(bad)
gs
push
leave
in
and
xor
rcl
(bad)
ds
mov
ja
addr16
push
ja
rol
movs
in
repnz
xchg
jmp
sub
mov
cdq
cmps
inc
dec
and
fcomp
push
push
mov
xchg
addr16
mov
jge
cdq
pop
arpl
(bad)
imul
(bad)
out
bound
sbb
mov
inc
push
je
cmp
outs
ja
fisub
mov
test
bound
inc
or
mov
addr16
jge
test
mov
jle
int3
xchg
pop
add
xor
cli
push
xchg
inc
cmc
rcl
test
add
xor
popa
inc
fmul
inc
xor
aas
push
mov
ss
sbb
test
add
adc
mov
loopne
rol
mov
rol
and
push
call
aaa
push
xor
test
sbb
mov
sub
mov
add
fstp
jg
cmp
add
mov
mov
cmps
cwde
inc
mov
push
pusha
jb
fdiv
add
ret
mov
inc
xor
jbe
lock
sbb
pop
jle
fcmovb
cmp
inc
push
mov
fistp
and
push
je
cmp
mov
lds
sub
xor
or
or
mov
mov
retf
mov
loopne
addr16
(bad)
addr16
cmp
dec
push
sbb
stos
movs
jb
jge
lods
or
and
pop
push
stc
mov
mov
mov
pop
inc
les
movs
test
sub
shl
mov
jecxz
inc
push
pop
xchg
ret
cmp
sub
iret
repz
jnp
out
in
or
xlat
push
add
xor
cmp
leave
out
fisttp
cmp
lea
xchg
jno
pop
fbstp
repnz
call
jo
sub
and
aaa
push
push
es
daa
sbb
and
pminsw
mov
ins
mov
adc
push
ret
jg
inc
std
hlt
pop
out
mov
push
push
sub
mov
int3
out
sub
xor
xchg
ret
out
clc
sub
jmp
xchg
popf
leave
jg
sbb
iret
(bad)
mov
dec
scas
adc
xchg
sub
mov
les
or
push
jnp
sub
lods
xor
mov
jmp
jmp
(bad)
dec
jne
dec
loope
in
xchg
(bad)
cmp
call
mov
xchg
push
lahf
lods
aas
repnz
xchg
or
mov
test
xor
xchg
imul
mov
cwde
push
and
movs
jae
call
arpl
and
dec
ins
loopne
jecxz
jo
sbb
sub
stos
push
jno
shl
dec
shl
loop
push
sahf
mov
push
cmp
push
(bad)
mov
clc
xlat
int
stc
jle
fmul
push
xchg
psllq
cmps
push
or
test
mov
add
add
inc
stos
inc
jne
mov
fcom
(bad)
loop
sbb
push
out
ret
jb
xor
sbb
(bad)
push
mov
add
cmps
adc
add
adc
sub
push
loop
jmp
aaa
cmc
push
inc
mov
adc
mov
pop
xor
int
sbb
outs
pop
and
call
sbb
rol
adc
push
adc
inc
push
bound
sbb
aad
fist
outs
jb
popa
pop
fiadd
stc
sbb
lds
nop
xchg
loop
mov
mov
cld
or
imul
mov
mov
movs
fs
xchg
fwait
inc
call
sbb
sub
outs
enter
daa
xor
pushf
test
push
jne
xor
loope
fdiv
jnp
dec
fiadd
push
das
add
bound
stos
cwde
mov
mov
les
adc
ds
jns
test
repz
leave
push
dec
cdq
xor
cmp
retf
cmps
adc
cld
popf
popa
stos
sbb
xor
cmp
mov
xchg
ror
xor
stc
dec
cmc
iret
sub
scas
ins
cwde
lds
sbb
test
shl
aaa
aas
ret
push
xchg
repnz
push
sub
pop
dec
rol
mov
mov
add
popa
imul
inc
lods
jo
add
or
(bad)
(bad)
or
mov
sub
mov
or
test
cmp
xchg
jmp
mul
addr16
fcomip
iret
imul
xchg
data16
xor
mov
inc
xchg
fwait
xlat
arpl
add
popf
movs
inc
js
sub
mov
inc
aam
xor
dec
or
add
pop
movs
pusha
push
xchg
loope
dec
ins
mov
inc
test
dec
dec
cld
fcmovne
mov
ss
push
pop
aad
add
xor
pop
clc
dec
sbb
frstor
popf
(bad)
xchg
inc
jns
xor
mov
sti
add
or
mov
xor
int3
sbb
outs
xor
mov
mov
aas
je
adc
dec
test
mov
popf
mov
aaa
sub
loopne
inc
aas
fwait
push
loopne
and
sbb
addr16
push
mov
adc
push
jmp
cmp
xchg
mov
movs
(bad)
in
xor
pop
cmp
fisttp
in
or
and
sub
inc
repz
cld
pop
or
inc
out
data16
sub
cmp
dec
je
dec
xchg
cld
sbb
pop
mov
test
inc
push
dec
push
or
iret
call
pop
movs
and
(bad)
cmc
sub
cdq
or
xor
cmps
push
loope
mov
cmp
and
pop
and
sub
ins
add
sbb
push
ja
stos
mov
mov
out
test
cld
dec
pop
mov
push
ins
mov
jl
adc
mov
pop
pop
xor
arpl
and
mov
pushf
jbe
mov
push
into
call
out
gs
stos
or
cmp
dec
in
sub
mov
mov
cmp
mov
dec
xor
(bad)
popfw
repz
arpl
dec
daa
gs
ret
push
push
push
retf
mov
leave
jmp
push
xor
iret
cmp
pop
scas
mov
pop
aaa
(bad)
out
or
or
loop
dec
not
ins
cmc
lahf
inc
xor
push
fsubr
fs
les
mov
arpl
sti
mov
xlat
jmp
mov
add
nop
cs
cmp
push
mov
sbb
jmp
mov
push
xchg
loope
imul
inc
add
or
enter
cmp
enter
rcr
mov
inc
and
dec
icebp
jnp
dec
sub
stos
inc
gs
mov
or
xor
xlat
fs
cli
ja
nop
in
sub
push
jge
mov
mov
push
imul
pop
dec
das
arpl
retf
fs
push
jne
inc
nop
out
movs
in
in
stos
sub
sub
adc
mul
mov
xchg
leave
sbb
pushf
xchg
jno
or
loopne
push
mov
in
std
push
push
pop
cld
std
or
jbe
pop
sub
push
add
mov
pop
and
add
movs
aas
jg
dec
loop
add
lea
and
cmp
(bad)
(bad)
mov
mov
dec
add
inc
(bad)
in
push
aaa
test
outs
in
in
cli
mov
push
cmp
push
jle
idiv
adc
cli
repz
jno
xchg
aaa
or
or
sahf
xor
adc
cmp
aaa
jns
mov
loopne
cmps
test
out
not
pop
fcomp
dec
movs
fcomi
pop
popf
arpl
shl
xchg
mov
cmps
jb
push
cmp
mov
mov
nop
mov
xchg
in
add
movs
addr16
sbb
cs
push
xchg
fst
push
pop
mov
loop
jmp
in
fmul
cld
cmp
jg
xor
pop
add
rcl
imul
sti
xor
je
sub
and
scas
push
ret
mov
cdq
stc
lds
cmp
ret
adc
sub
jecxz
mov
std
shl
hlt
mov
xor
pop
cmp
rcr
fldcw
out
ss
cdq
add
inc
and
rol
xlat
fiadd
pushf
call
je
lahf
daa
retf
pop
lods
pop
ins
ret
daa
or
cmps
jle
leave
(bad)
fmul
add
sub
dec
test
xor
pop
dec
mov
push
cmp
dec
and
aas
mov
mov
arpl
jecxz
dec
aaa
out
movs
bsr
imul
cmp
jmp
ret
mov
retf
sbb
jmp
inc
sbb
ss
mov
sbb
aas
arpl
add
shr
mov
jg
dec
xchg
test
stos
call
inc
iret
mov
or
or
dec
lods
into
mov
sbb
cmp
push
call
popf
push
xchg
mov
inc
jo
mov
(bad)
mov
outs
pop
fwait
jl
call
adc
lea
xchg
jmp
fistp
fsub
jb
out
imul
imul
data16
push
add
(bad)
cdq
iret
push
in
add
ja
jle
into
xchg
or
cs
adc
jne
retf
sbb
xchg
mov
cmp
sbb
adc
stc
sbb
jno
mov
(bad)
es
dec
mov
jmp
push
iret
dec
push
bound
xor
mov
(bad)
sti
pusha
outs
mov
add
inc
and
xor
jge
lea
cld
rcl
hlt
ins
loope
xchg
mov
and
not
mov
ss
xchg
fisubr
ret
mov
add
push
mov
pop
xchg
cld
les
push
pop
loop
and
shr
xlat
dec
inc
sub
dec
test
mov
inc
out
(bad)
ror
mov
pop
int3
xchg
scas
out
cmp
adc
xor
je
and
add
popa
mov
fsubrp
sbb
sub
std
add
int
mov
fsubr
or
(bad)
pop
jns
xor
pop
xor
xor
jns
sar
jmp
add
fidivr
hlt
into
pop
rcl
dec
xchg
adc
(bad)
sbb
and
out
dec
arpl
fcomp
dec
clc
adc
inc
enter
pop
push
pop
ja
test
cmp
pop
xchg
cmps
inc
fdivr
mov
sahf
or
dec
and
push
push
mov
cli
sti
inc
mov
inc
out
push
mov
jmp
inc
sbb
xchg
rol
outs
mov
retf
adc
rol
clc
dec
pop
cwde
pop
cmc
dec
cmp
mov
stos
enter
aad
cmc
movs
in
shl
push
xlat
imul
cld
or
pop
dec
push
mov
into
jecxz
or
cdq
xor
jge
inc
sub
mov
es
(bad)
xor
push
inc
add
daa
adc
std
or
es
repz
jl
cmp
cmp
adc
mov
popf
xchg
sbb
cli
sbb
cmp
dec
retf
xlat
std
push
jb
pop
pop
arpl
xor
xchg
mov
rcr
cmp
pop
ds
in
stos
mov
cmps
or
add
repnz
xchg
out
jnp
pop
pop
les
imul
or
leave
jle
push
(bad)
gs
mov
in
sbb
jne
inc
pop
jmp
xchg
cmp
cmp
pop
fcomip
mov
pop
ficom
mov
or
fdiv
mov
jae
in
faddp
sahf
sbb
lahf
xor
in
in
popf
sbb
lods
retf
scas
jmp
push
mov
sbb
in
pop
mov
scas
std
fidiv
div
hlt
jl
test
fdiv
mov
stos
scas
mov
test
sahf
(bad)
dec
sbb
not
movs
add
mov
jb
inc
shr
push
jmp
cmp
cmp
cmp
loop
add
shl
imul
or
pop
into
mov
int3
add
sbb
mov
outs
cmp
mov
mov
dec
pop
xchg
retf
(bad)
cmp
mov
sbb
bound
mov
mov
enter
ret
add
mov
cmp
mov
cs
popf
jo
jae
mov
std
sub
outs
xor
pop
mul
sub
jmp
pop
push
jg
rcl
icebp
leave
inc
(bad)
push
pushf
or
cmps
sub
mov
xlat
xor
mov
add
es
sar
aas
out
xchg
retf
sbb
ja
push
dec
sbb
xchg
loop
jnp
pusha
fcomi
jp
xchg
out
shl
shl
pop
dec
jl
leave
pop
je
and
call
ret
sub
push
in
test
jp
dec
dec
push
jmp
and
push
and
pop
mov
jbe
(bad)
aas
mov
sub
fist
(bad)
loopne
push
sbb
inc
add
rcr
js
(bad)
pop
(bad)
movs
(bad)
js
retf
aad
jmp
iret
test
shr
and
ficom
ds
jmp
nop
add
int3
call
xor
ffree
and
dec
mov
outs
and
sbb
pop
out
add
dec
mov
arpl
jne
fwait
(bad)
pop
scas
pusha
cld
lock
fild
sbb
fucom
enter
loop
lds
lock
push
std
sbb
mov
dec
sbb
mov
gs
cmp
dec
cmp
sub
loope
rol
test
clc
xchg
js
cmps
imul
xchg
retf
push
xchg
jp
jb
das
pop
inc
or
xchg
mov
hlt
mov
adc
test
or
xor
mov
movs
push
retf
cld
jbe
and
mov
retf
cmp
inc
mov
pop
push
or
adc
sub
sub
xchg
or
dec
scas
jge
adc
arpl
dec
add
int
fcomp
addr16
mov
inc
paddusb
cmc
jl
mov
inc
or
pop
jge
out
out
enter
lock
ret
xchg
mov
mov
dec
xchg
inc
xor
mov
dec
aas
push
stc
jmp
jmp
and
aam
leave
sub
daa
jmp
cmp
stos
adc
adc
std
xor
lods
ss
aam
push
enter
add
(bad)
into
fsubr
mov
adc
outs
xlat
cmp
mov
mov
fadd
scas
jne
(bad)
inc
add
jb
mov
dec
mov
sub
jne
sub
imul
cld
cwde
sub
jmp
out
push
int3
xlat
adc
push
jmp
sub
ins
add
sbb
imul
mov
retf
cs
test
loopne
fnsave
dec
das
and
not
pop
inc
add
(bad)
jge
cmps
lea
movs
js
imul
add
test
dec
sub
out
(bad)
jo
xchg
rol
push
les
ja
outs
push
popa
push
fwait
cwde
retf
cs
push
out
xchg
(bad)
mov
mov
push
sub
(bad)
sub
xchg
lea
mov
lahf
jle
inc
pop
sti
mov
hlt
scas
push
mov
lods
mov
and
cld
inc
loopne
fild
lods
outs
std
daa
xor
dec
std
test
shl
jmp
xor
ret
cs
inc
out
hlt
jb
(bad)
dec
sar
mov
cmp
test
cmc
push
cmps
retf
int
sbb
xchg
cmps
pop
pop
inc
add
add
xchg
ins
sub
clc
repnz
test
jle
fs
inc
in
push
pop
cld
dec
mov
xchg
ret
ror
popa
ss
imul
mov
and
or
mov
(bad)
push
outs
outs
mov
add
(bad)
xchg
leave
scas
bound
out
aas
xchg
inc
loopne
xor
dec
jl
ror
and
mov
mov
mov
cmps
int
mov
std
xchg
inc
or
adc
mov
mov
stc
js
std
pop
int
or
mov
jmp
push
cmps
and
mov
jbe
shr
adc
call
loope
add
fmul
jl
scas
in
mov
retf
imul
inc
sub
jno
(bad)
push
mov
scas
cmp
out
and
es
sbb
or
imul
mov
leave
dec
repnz
int
in
lea
test
lods
or
xchg
sub
fimul
pop
push
mov
sub
inc
pop
fs
outs
xchg
push
sbb
add
mov
adc
push
inc
sub
retf
fsub
mov
sahf
in
dec
test
xchg
out
pushf
mov
add
push
fwait
cwde
retf
fs
cmp
je
adc
push
xor
mov
or
jnp
les
popf
aaa
pop
out
add
jno
inc
nop
rcl
retf
dec
js
popa
cmc
mov
sahf
mov
test
mov
push
add
push
pop
sbb
push
inc
adc
sub
push
dec
push
sbb
push
jns
push
retf
mul
pop
outs
push
dec
dec
mov
test
xchg
xlat
xor
mov
(bad)
retf
add
adc
mov
movs
in
jns
cld
lods
ins
mov
adc
mov
into
imul
dec
mov
pcmpeqb
lahf
pop
push
pop
sti
cmp
in
push
es
cmp
sub
mov
xor
or
scas
loop
add
test
jmp
xchg
xchg
jmp
sub
sbb
cdq
xchg
jb
fwait
inc
test
cmp
jecxz
push
mov
push
inc
iret
hlt
inc
pop
xchg
lock
in
mov
(bad)
dec
outs
sete
xchg
ins
or
push
push
pop
fisubr
repz
push
sub
push
or
push
mov
jno
cmp
imul
jae
cs
nop
sub
loop
data16
icebp
xchg
jae
(bad)
lods
out
inc
push
pop
(bad)
inc
push
inc
retf
jg
cmp
mov
(bad)
jecxz
in
bound
xor
dec
mov
dec
ret
mov
pusha
movs
call
jne
adc
(bad)
in
adc
ret
shr
or
or
hlt
mov
push
inc
ret
rol
xchg
jo
jnp
stc
push
inc
mov
je
aas
sbb
fidiv
int
jbe
pop
int
int
(bad)
mov
add
push
jbe
mov
jb
ret
add
xchg
or
xchg
test
test
(bad)
cmp
mov
ja
repnz
cdq
sbb
imul
sub
sub
stc
fist
ret
je
inc
stos
mov
adc
cmp
ror
mov
cs
jmp
cmp
xor
je
inc
jle
stos
arpl
loopne
fwait
jge
test
adc
shl
scas
sub
jmp
and
mov
arpl
in
lods
dec
pop
in
sub
xor
(bad)
fistp
out
lods
into
mov
sahf
pop
xor
xor
jno
xor
(bad)
and
and
retf
movs
neg
cmp
or
mov
fisttp
sti
push
cmp
jne
retf
pop
and
pop
popa
sub
jns
xchg
ficom
xor
cmps
sub
pop
jnp
int
jecxz
fs
das
xor
mov
jne
dec
cli
add
fisub
mov
retf
jns
int
push
cmp
add
cld
sub
sub
mov
imul
pop
push
popa
test
dec
mov
jecxz
dec
mov
movs
cmp
pusha
jbe
in
xchg
fsub
adc
fbld
jne
repz
pop
pop
cmp
and
std
push
ds
add
push
jbe
imul
stos
lods
outs
xchg
into
cmp
cmp
jp
adc
nop
add
adc
mov
retf
out
rol
mov
jp
and
ret
movs
mov
rcl
add
and
mov
aaa
ins
mov
sub
dec
(bad)
adc
gs
ja
std
xchg
push
push
retf
ins
mov
or
cld
inc
sub
or
cmp
push
popf
cmp
push
jl
jp
loop
cmp
pop
push
xor
dec
push
std
int3
push
push
cli
jo
adc
mov
shl
test
push
std
xor
jge
inc
(bad)
sub
push
or
add
add
pop
cmp
outs
call
sub
inc
jmp
ja
shl
jae
mov
lea
mov
movs
(bad)
pop
shr
je
aad
pop
sar
push
into
adc
cmp
dec
loop
xchg
fnstsw
je
call
js
fistp
cld
inc
adc
shl
aam
inc
xchg
ror
mov
fistp
in
int
loop
rol
lea
adc
mov
jae
mov
pop
and
pop
mov
imul
push
xchg
out
mov
idiv
test
jmp
dec
mov
dec
jge
out
cmps
pop
xchg
movs
push
mov
call
cmp
cs
leave
idiv
dec
jns
movs
sub
xor
push
or
test
xchg
xchg
out
pop
movs
dec
retf
sahf
xchg
adc
sahf
dec
lods
call
jae
add
sub
or
mov
pop
dec
and
pop
mov
imul
lds
mov
add
add
xchg
imul
adc
push
xchg
sbb
sub
adc
and
(bad)
stos
repnz
lods
pop
sahf
movs
pop
adc
addr16
push
pusha
xchg
jbe
dec
sub
push
js
mov
push
dec
mov
pop
test
aad
mov
xor
add
or
mov
in
les
ss
sub
and
dec
sub
push
cdq
push
jno
int3
retf
mov
pop
fcomp
ficom
adc
jne
push
in
mov
neg
jne
pop
scas
mov
aad
stc
sub
adc
mov
std
push
xor
push
jb
js
daa
js
push
fs
cs
lods
mov
cmp
arpl
dec
movs
mov
or
sub
sbb
inc
ret
lods
push
dec
popf
mov
int3
xchg
mov
jbe
mov
jle
adc
in
repnz
adc
arpl
fimul
push
(bad)
xabort
add
popa
movs
pop
jbe
xchg
cmp
inc
or
mov
ss
or
cld
cmps
ja
imul
dec
nop
sub
and
cmp
es
inc
xlat
aaa
push
xchg
mov
int
pushf
sub
mov
sti
adc
add
inc
sbb
pop
add
jbe
je
mov
sbb
stos
loopne
rol
mov
lods
mov
pop
(bad)
mov
icebp
inc
jae
cs
xchg
jno
jl
int3
rol
out
adc
and
iret
cmp
leave
in
fisub
jecxz
push
addr16
mov
pop
fidivr
clc
pop
mov
ss
dec
pop
sbb
inc
sub
cmp
mov
shl
in
dec
or
scas
cwde
shr
push
lods
inc
mov
cmp
dec
shl
pusha
lahf
push
ficom
in
fsub
push
nop
(bad)
and
mov
cmp
jl
adc
cmp
leave
loopne
cs
jns
or
neg
fmul
sbb
in
mov
adc
in
arpl
rcr
mov
mov
jns
mov
sar
push
sbb
mov
cwde
iret
fdiv
pop
sbb
adc
xor
xor
xchg
or
aas
ins
arpl
sbb
dec
push
xlat
pop
cmp
in
shr
pushf
mov
in
ins
mov
pop
scas
and
fnclex
into
fmul
cld
rcl
jo
(bad)
and
inc
enter
jae
push
neg
fmul
xor
mov
push
adc
xor
jmp
mov
imul
ret
loope
sbb
jno
in
pop
imul
jbe
(bad)
sub
es
xchg
and
mov
out
mov
into
call
xlat
aad
mov
(bad)
cs
dec
in
shl
outs
enter
or
ins
cmps
loope
addr16
push
mov
retf
test
loop
jo
pop
scas
nop
ss
call
daa
xor
mov
add
jne
inc
adc
add
xor
add
jg
rol
push
cwde
pushf
dec
lods
sbb
pop
inc
mov
mov
mov
retf
sbb
push
aad
imul
movs
or
cmp
sub
adc
dec
jbe
movs
push
xchg
jl
stc
cli
arpl
neg
aas
shl
addr16
push
push
adc
adc
inc
stos
stos
(bad)
out
and
dec
ins
mov
hlt
shr
inc
push
and
xor
fs
sub
sub
or
xchg
shl
mov
fwait
mov
les
add
xor
dec
mov
or
xlat
push
mov
pusha
in
push
cmp
inc
lahf
jg
adc
mov
cld
ret
jno
and
mov
adc
lea
mov
out
lea
mov
test
push
sbb
das
mov
xchg
or
adc
arpl
cld
add
mov
and
push
jg
(bad)
add
out
out
cmps
cmp
push
test
bound
pop
mov
or
ret
mul
div
mov
pf2iw
ins
inc
xchg
arpl
je
push
add
or
(bad)
sbb
ins
mov
out
sbb
and
push
test
stos
arpl
out
inc
push
inc
loopne
mov
inc
movs
sbb
and
mov
stos
mov
hlt
pop
in
enter
jo
sysenter
mov
inc
cdq
aad
data16
scas
xor
mov
call
cmps
inc
xchg
pop
mov
mov
rcr
into
xchg
pop
ss
and
jns
std
adc
test
push
mov
pop
(bad)
mov
ret
(bad)
test
fstp
cmc
bnd
cmp
jmp
jg
mov
or
sti
aas
cmp
jmp
inc
xchg
sbb
iret
ret
fmul
fdiv
sub
mov
fiadd
dec
adc
add
inc
js
idiv
leave
arpl
sub
push
test
loop
push
aam
xchg
sub
mov
dec
ins
lea
ins
js
add
les
imul
mov
mov
rol
aaa
push
test
inc
aaa
ret
movs
bound
pushf
mov
sub
dec
out
cdq
and
dec
push
stos
pop
fild
loopne
daa
pop
push
sbb
xchg
sbb
fadd
sti
jge
jg
inc
mov
sti
fbstp
xor
dec
jno
inc
ins
lahf
lock
test
stos
int
inc
add
stos
ret
push
out
es
ds
aas
dec
push
rcr
enter
push
adc
pusha
cmp
adc
test
repnz
inc
sbb
jbe
pop
mov
push
push
xchg
(bad)
xlat
push
jae
xchg
imul
cmc
outs
or
push
adc
fnstcw
ret
sbb
leave
dec
sbb
aam
into
pop
call
adc
xor
fdiv
dec
mov
les
cmps
add
mov
pop
push
jno
lock
mov
xor
aaa
push
xor
gs
cmps
cmp
add
cwde
mov
(bad)
dec
mov
iret
shl
bound
mov
or
pop
add
pop
gs
stos
mov
retf
aam
cmc
mov
out
pop
outs
in
xchg
rol
xor
push
fnstsw
xchg
(bad)
loop
mov
inc
adc
inc
scas
mov
xlat
cmp
push
mov
sub
sbb
jge
push
dec
or
mov
jnp
cmc
jbe
push
cs
pop
aad
push
add
mov
popa
sbb
imul
aad
push
pop
or
xchg
mov
and
sub
xchg
scas
(bad)
rol
sub
ret
cmp
ss
outs
xchg
(bad)
xchg
add
hlt
xchg
xchg
pop
neg
push
sahf
pop
and
sbb
jns
jmp
mov
pop
adc
in
pop
adc
js
jle
and
pop
js
mov
call
add
and
dec
push
dec
cmp
and
data16
sahf
push
ja
(bad)
js
lds
pop
sub
inc
add
pop
add
add
cmps
add
stos
div
xchg
sbb
xor
popf
cmp
aas
neg
push
arpl
pop
jle
mov
int
test
lahf
pop
mov
movs
xchg
je
jae
movs
jnp
pop
inc
std
(bad)
call
mov
mov
inc
(bad)
fcomp
or
or
icebp
call
mov
jl
pop
mov
adc
adc
in
dec
adc
mov
sub
repnz
fs
push
cmp
mov
inc
xchg
and
gs
cmp
cld
nop
xchg
or
in
xchg
xchg
pop
movs
and
data16
jg
or
dec
fmul
cwde
int
jle
xor
jle
(bad)
mov
push
mov
mov
mov
sbb
adc
mov
jmp
int3
and
pop
pop
sub
aaa
inc
test
inc
das
rcr
mov
fwait
sbb
adc
jne
popf
fmul
cmp
cmp
sar
xchg
mov
xchg
sar
jmp
imul
imul
sahf
push
jae
hlt
xchg
add
rcr
push
mov
xor
nop
cmps
dec
xor
test
sub
dec
add
rol
popf
jnp
fsub
sbb
(bad)
pop
xchg
mov
push
xchg
mov
adc
cmps
scas
adc
sub
mov
mov
and
pop
dec
mov
stos
ret
xor
sar
mov
push
sahf
test
loop
mov
push
jge
mov
sub
shr
pushf
shl
mov
int3
cmc
mov
or
leave
mov
jnp
push
outs
cmps
adc
fwait
mov
outs
ret
push
ror
push
ja
mov
es
cmp
shl
les
mov
add
inc
cwde
inc
shld
add
test
jnp
les
mov
ins
mov
inc
dec
dec
sbb
imul
add
mov
shr
inc
in
push
(bad)
je
cmp
fst
popf
mov
in
je
push
xor
jge
xor
loopne
or
lods
(bad)
fisubr
outs
jbe
sub
jl
mov
jl
stc
xchg
mov
jmp
or
fild
out
cmp
outs
in
in
shl
stos
jle
push
cmp
ret
cmp
push
push
push
mov
pop
call
ds
fcom
push
inc
pop
int
inc
out
push
out
mov
or
xor
cmps
xchg
and
enter
imul
adc
inc
xchg
add
inc
add
push
fsubrp
cld
stc
jnp
push
inc
inc
add
mov
jg
inc
lods
fist
cmp
push
frstor
fucomip
push
std
mov
in
xchg
je
pop
or
icebp
scas
lods
sbb
cmp
inc
icebp
pop
daa
adc
fsub
inc
mov
imul
popa
les
dec
xchg
xchg
xchg
mov
(bad)
push
xlat
imul
jns
cmp
imul
sar
mov
xchg
scas
stc
jne
adc
enter
test
shrd
ins
aaa
fst
mov
cld
or
sbb
pop
push
(bad)
retf
sbb
push
pop
jle
cmp
into
retf
mov
xor
mov
or
int3
sub
aas
icebp
jmp
push
pop
xlat
pop
mov
adc
in
shr
sub
repnz
das
ret
jbe
scas
jmp
add
mov
mov
mov
gs
mov
sbb
push
push
cli
pop
fisubr
scas
lods
cmp
inc
outs
cmps
push
icebp
addr16
fsubr
jmp
and
push
xchg
dec
out
pop
mov
fs
sub
push
test
inc
lock
outs
and
loopne
adc
in
cmp
outs
xchg
(bad)
jb
add
add
sti
shl
add
mov
stos
xchg
cmp
shl
push
out
adc
fcomi
and
sub
in
inc
ror
arpl
push
cmp
inc
out
bound
aad
repz
(bad)
retf
out
mov
in
inc
pop
out
out
popf
mov
pop
sub
or
fdivr
shl
mov
leave
cmp
jns
aad
xor
dec
sahf
pop
aas
jmp
add
jmp
leave
loopne
sbb
lea
cmp
fisubr
stos
xchg
mov
push
push
adc
push
sahf
adc
repz
aad
outs
jne
push
sub
or
push
out
jo
sbb
shr
fs
aam
adc
adc
shr
imul
mov
repnz
mov
ss
sbb
adc
mov
push
popf
pop
into
push
jo
or
xchg
ret
cdq
mov
push
and
jecxz
mov
and
pop
inc
clc
movs
ss
shl
mov
test
dec
pushf
fadd
cli
adc
arpl
cmps
sub
inc
outs
clc
push
(bad)
sbb
popa
jbe
rep
inc
xchg
add
xlat
fs
sahf
mov
mov
aas
mov
xchg
lods
pop
out
xor
pop
addr16
sub
ja
(bad)
mov
sub
mov
rcl
nop
push
fwait
sbb
shr
sub
lds
je
ret
nop
mov
cmp
jnp
xchg
pop
adc
xor
es
repnz
pop
inc
js
stc
sti
je
xlat
aaa
imul
je
jp
lock
sbb
mov
push
mov
mov
mov
push
pop
std
inc
pusha
xchg
jno
mov
popw
enter
int3
cmps
xor
or
test
fild
xor
leave
test
dec
sbb
cmp
inc
cli
cwde
pop
jmp
hlt
and
xchg
fs
mov
push
jmp
pop
push
enter
dec
test
pop
data16
out
cmc
mov
int
xor
(bad)
je
cmp
cmps
sub
and
sbb
(bad)
scas
mov
xor
jns
fsubr
pop
fdiv
add
rcr
sub
sub
rcr
cdq
mov
jnp
push
cmps
mov
sti
loopne
lock
dec
cmp
scas
inc
sub
xor
ret
mov
fucomi
dec
sbb
cmp
xchg
mov
data16
cli
outs
int3
mov
sbb
int
in
inc
and
loop
inc
aaa
jmp
sbb
movs
push
scas
push
sbb
and
push
and
loope
ret
into
ss
out
xchg
out
repnz
dec
inc
dec
stc
cmp
xchg
sbb
popf
xor
(bad)
or
sbb
test
(bad)
loopne
movs
lods
mov
mov
cdq
loop
dec
dec
in
jo
xchg
scas
inc
and
in
cmp
add
lods
add
les
cmp
mov
push
and
imul
push
inc
shl
popa
mov
and
xor
or
es
pop
mov
das
stos
test
into
push
xchg
and
sbb
jl
popa
xchg
adc
and
imul
js
adc
lock
jmp
adc
cmc
fidiv
bound
mov
dec
and
cwde
push
mov
add
fnstenv
ja
sbb
jg
leave
div
xchg
pop
adc
sub
jmp
or
adc
pop
mov
mov
ins
sub
push
mov
imul
xlat
and
jo
cmp
push
repz
xchg
mov
cmp
push
aaa
sbb
daa
and
mov
rol
jmp
fcom
shl
ins
fcmovnu
cdq
fist
pusha
adc
jno
shr
cmps
mov
ret
loope
arpl
push
mov
and
fsubr
aaa
pop
push
pop
test
pop
retf
test
xor
loop
punpckhwd
adc
call
test
cmp
inc
icebp
fld
adc
test
ja
inc
popa
ss
mov
sub
in
xchg
lea
aad
cmc
popf
jg
mov
and
pop
sar
fwait
ret
stos
xor
mov
fwait
call
pop
inc
add
xlat
out
xlat
in
mov
leave
in
push
mov
mov
adc
ret
xchg
xchg
mov
mov
and
sub
add
push
sub
mov
or
mov
push
ja
adc
sub
or
jle
stos
push
jb
cmps
sub
sub
ret
sub
nop
sti
ja
in
mov
cmc
xor
dec
enter
fs
and
lods
das
outs
xchg
dec
push
jecxz
das
inc
mov
idiv
in
mov
call
and
call
mov
add
sub
mov
pop
add
jge
sub
out
dec
mov
xor
or
jne
stos
add
xor
and
out
in
mov
mov
retf
pop
adc
aad
xchg
cmp
mov
imul
mov
(bad)
nop
mov
stos
mov
ret
pop
dec
leave
arpl
cmp
jne
int
movs
scas
mov
outs
jbe
xlat
mov
cmp
jmp
or
sub
and
jbe
call
dec
das
rcr
das
retf
test
cmps
outs
cmp
add
mov
cmp
addr16
cdq
jmp
call
pusha
inc
sub
cmps
jmp
xchg
aam
mov
bound
pusha
sub
adc
pop
jp
or
jge
mov
jmp
in
scas
dec
inc
retf
xchg
fstp
ja
sbb
call
dec
jmp
xchg
data16
xchg
push
lods
mov
test
retf
retf
xchg
push
in
jns
fist
data16
dec
repz
daa
out
xor
sub
jmp
fstp
jg
cmp
push
stc
or
into
into
sbb
inc
repz
cmp
ret
sbb
stos
test
(bad)
jae
add
bound
icebp
mov
daa
xchg
sbb
xor
std
lods
sbb
arpl
test
cmp
or
mov
xchg
sar
jl
sub
mov
xor
dec
sub
or
mov
in
or
push
clc
sbb
cli
pop
movs
inc
into
add
push
sar
and
and
or
mov
icebp
sub
adc
dec
ds
dec
inc
test
or
(bad)
or
push
test
cs
aas
movs
jg
nop
fadd
into
sgdtd
scas
mov
adc
inc
loope
stos
fcomp
cmp
loopne
push
adc
inc
push
and
pop
push
xchg
ss
inc
pop
cwde
mov
retf
enter
fisub
dec
and
pop
xor
in
mov
sub
push
cmp
iret
shl
push
fbld
fist
mov
pushf
pop
loope
pop
cmp
lods
push
shl
push
std
call
(bad)
pop
test
hlt
aad
xchg
adc
movs
out
lock
outs
mov
push
xor
aas
fs
mov
lock
stos
pop
sbb
iret
shr
leave
retf
rcl
aam
jno
(bad)
aaa
cwde
lock
mov
shl
popf
add
scas
mov
fdivrp
(bad)
out
push
outs
sbb
call
out
jp
stc
fwait
dec
mov
jno
adc
movs
mov
shr
les
dec
inc
popa
fndisi(8087
mov
test
ins
sub
or
retf
nop
mov
icebp
fldcw
pop
add
mov
mov
mov
ret
mov
in
xlat
cmp
add
mov
pop
imul
cvtpi2ps
out
lahf
add
xchg
gs
pop
lods
jne
inc
shr
jae
jbe
or
adc
lahf
push
in
test
push
push
pop
into
push
into
xchg
rcr
cmp
mov
loop
aad
test
cmp
lea
add
shl
pop
out
sub
push
in
mov
in
test
or
ins
fisttp
in
fdivr
mov
jmp
cmp
dec
cmps
jl
test
push
mov
sti
mov
cs
jg
adc
neg
inc
sbb
fdiv
sar
gs
shr
dec
inc
jne
jne
loop
out
mov
sbb
(bad)
xchg
xor
js
outs
mov
and
xor
and
pop
mov
cmp
js
mov
jbe
fwait
xchg
jnp
mov
mov
test
cmps
add
jmp
ret
sbb
cdq
sti
clc
in
lahf
xchg
mov
push
scas
jns
push
movs
je
dec
imul
call
xor
ret
mov
stc
ins
push
xchg
inc
mov
fdivr
mov
mov
scas
jne
movd
retf
mov
push
ja
and
push
jmp
pop
push
xor
pop
mov
pop
shl
mov
in
(bad)
pop
aam
ror
std
jns
lea
(bad)
sbb
xchg
shr
out
mov
sbb
cmp
jp
out
inc
push
mov
ins
in
dec
and
aam
mov
in
daa
ins
or
and
mov
push
mov
fiadd
aaa
into
or
pop
sbb
xchg
and
push
mov
sbb
mov
jmp
dec
or
dec
cmp
adc
sbb
dec
(bad)
in
mov
or
sbb
adc
xchg
repnz
call
mov
sub
mov
xchg
fimul
and
mov
add
loopne
stos
push
cmps
pusha
pop
(bad)
push
mov
lea
dec
fs
(bad)
sub
fistp
fnstenv
cmp
mov
dec
jno
lock
dec
or
xchg
jno
iret
ins
int3
adc
in
loopne
outs
dec
mov
xor
test
jbe
mov
retf
jb
pop
mov
jne
add
xor
stos
xor
aam
ret
movs
cmp
movs
and
movs
cmps
fwait
push
test
daa
shr
fcmovnu
jbe
std
adc
xlat
or
dec
in
and
repnz
retf
imul
push
jns
ins
mov
enter
jb
inc
dec
bound
in
ins
jo
lods
or
or
cmp
(bad)
pop
push
sbb
aam
in
xchg
(bad)
sub
ret
mov
pop
and
loop
sub
xchg
arpl
inc
jne
xchg
add
fucomi
xchg
xchg
aam
mov
(bad)
jg
xchg
in
pop
mov
sub
test
das
scas
mov
or
add
push
inc
fwait
and
mov
out
fcomp
out
ss
jne
push
dec
inc
xor
aam
cmps
sti
or
lea
je
repnz
clc
out
lds
es
push
dec
mov
mov
xchg
in
fs
cmp
ja
mov
(bad)
data16
or
add
idiv
pop
inc
enter
bound
shr
repz
xchg
dec
and
sahf
out
mov
je
loop
dec
in
mov
call
sub
rcl
xor
outs
dec
adc
popf
rcr
ins
lahf
aam
mov
cmp
mov
aaa
dec
bound
fst
xchg
fisttp
xlat
and
mov
lea
popa
ins
mov
mov
push
iret
sub
sub
int
movs
test
sub
lods
cdq
pusha
push
lahf
xchg
push
in
xor
jmp
out
and
mov
stos
or
pushf
jbe
test
push
mov
inc
je
scas
je
fidiv
add
aam
dec
leave
dec
imul
aas
jae
xchg
dec
jnp
das
es
cmc
dec
les
in
and
jecxz
cmp
repnz
pusha
or
stos
loopne
jbe
dec
xor
jbe
ror
ins
hlt
mov
jne
jns
adc
jp
nop
cmp
call
sbb
test
cli
dec
xor
mov
mov
js
jns
or
sub
loopne
add
sbb
add
mov
test
cli
call
mov
(bad)
and
inc
rcr
mov
call
pop
scas
(bad)
outs
ret
sahf
and
dec
fldpi
loope
adc
jge
pop
add
and
mov
out
pop
movs
xchg
aas
and
aaa
shl
cmp
jne
ret
jae
mov
rcl
ror
mov
jae
xchg
(bad)
cmp
xor
cmc
shl
(bad)
mov
jg
sbb
pop
pushf
cmps
call
int
cmp
inc
imul
rdpmc
ins
push
repz
jle
cdq
jecxz
aas
cmp
cmp
mov
loop
loopne
cmp
mov
jmp
repz
dec
movq
add
sahf
dec
bound
loopne
enter
dec
adc
(bad)
gs
scas
sti
push
cmp
xchg
scas
jmp
push
cld
inc
mov
add
add
push
push
xchg
mov
cld
dec
push
iret
pop
or
mov
adc
outs
xor
or
or
push
or
das
pop
inc
xchg
loope
out
and
iret
sbb
adc
data16
inc
fidiv
mov
dec
in
ins
test
les
mov
cdq
rcl
jl
in
inc
xor
and
mov
lahf
rol
shr
ins
clc
and
push
addr16
aam
adc
mov
(bad)
or
int3
sub
jbe
leave
xchg
icebp
push
dec
inc
cmp
aam
xchg
fisubr
test
stos
mov
icebp
pusha
sub
ret
(bad)
out
cmp
mov
mov
xchg
pop
lods
ficomp
jecxz
push
out
ds
xor
aam
(bad)
dec
test
sbb
cmp
or
(bad)
xchg
and
(bad)
mov
out
jmp
inc
imul
sub
fidiv
sbb
sbb
inc
cmps
mov
pop
jmp
xchg
cmp
dec
push
xor
in
add
push
and
add
and
jl
fwait
jbe
call
push
xchg
loopne
(bad)
pushf
arpl
data16
push
ficom
cdq
sub
jae
stc
jae
lds
fst
in
leave
icebp
pusha
stc
ins
jbe
push
retf
xchg
lock
inc
lods
pop
std
sti
fcom
ficom
out
xchg
in
fwait
jle
aam
(bad)
pop
adc
push
mov
and
lds
xchg
je
inc
retf
daa
inc
mov
mov
call
push
cmp
cmps
cmp
mov
leave
mov
daa
inc
jl
mov
stos
(bad)
dec
(bad)
mov
(bad)
lock
in
retf
inc
outs
stos
retf
sub
icebp
retf
sub
xor
rcr
test
(bad)
or
inc
xor
jl
ret
or
push
fldenv
inc
cmp
cmp
cdq
push
mov
ins
movs
mov
cmp
dec
jl
inc
fsubr
jne
push
out
retf
mov
jp
shl
and
push
shl
dec
pushf
push
in
xlat
or
rcr
sbb
ret
mov
in
pop
dec
inc
call
xlat
pop
outs
mov
sbb
xchg
mov
or
pop
nop
inc
mov
test
cs
add
and
call
jns
add
call
push
mov
push
mov
sub
mov
movs
das
cmp
repz
enter
imul
jno
adc
scas
test
mov
(bad)
mov
out
jle
inc
jne
mov
cmp
xchg
scas
pop
fnstsw
stos
fstp
xor
mov
aam
adc
mov
mov
mov
(bad)
jge
movs
jp
adc
sub
sbb
test
mov
dec
mov
jbe
pop
pusha
lods
xchg
mov
lea
sti
ja
mov
jp
in
arpl
mov
cld
je
mov
jp
ins
dec
or
or
cmp
aaa
es
adc
stc
jmp
aad
inc
mov
fwait
arpl
test
fadd
push
ins
and
(bad)
cld
arpl
dec
test
imul
stc
loopne
cld
out
mov
dec
outs
(bad)
cli
movs
sbb
xchg
mov
into
push
mov
shl
mov
test
sbb
out
mov
mov
aas
sbb
iret
call
(bad)
les
pop
mov
ja
mov
cmp
ror
pushf
fld
int
sub
pop
shl
scas
aas
les
aas
js
cmp
jns
and
ins
pop
push
ds
add
push
xacquire
xchg
or
sub
jbe
pop
and
cmp
mov
fild
inc
jo
xchg
aaa
(bad)
mov
or
xor
cmps
jp
push
mov
test
repz
and
(bad)
in
mov
ficom
sbb
aaa
test
xor
push
imul
aas
ins
pop
imul
mov
scas
lods
jmp
cmp
jp
pop
mov
aaa
sbb
fdiv
(bad)
pop
gs
inc
jne
cmps
cmps
test
lods
or
sub
adc
idiv
jge
adc
or
stos
enter
dec
inc
scas
mov
or
xchg
push
jae
scas
repz
mov
mov
lods
inc
xor
mov
push
scas
xchg
inc
push
or
ja
jecxz
mov
cdq
mov
jo
gs
pop
pop
sub
ret
sbb
stos
sbb
out
stos
je
outs
aad
adc
pop
cwde
xchg
stos
push
rol
cmp
xor
pop
push
dec
(bad)
push
pop
and
adc
test
mov
dec
lock
xchg
repnz
inc
(bad)
std
xlat
in
dec
inc
lea
sub
imul
aam
in
and
arpl
(bad)
push
ss
adc
cmp
push
sbb
sub
push
retf
out
ds
xor
cmp
and
push
gs
sbb
iret
xor
xchg
sbb
sbb
jl
dec
push
dec
loope
xchg
push
mov
scas
rcl
out
and
(bad)
inc
out
outs
mov
lsl
cmps
rol
jp
int
push
sub
enter
ds
imul
xor
lock
into
inc
jmp
ret
cli
pop
mov
(bad)
fdiv
pcmpgtb
loope
push
cli
nop
loopne
dec
fisubr
xchg
sub
stos
dec
xor
jge
shl
ins
mov
daa
loope
ins
lahf
rep
adc
xchg
in
jmp
push
gs
cvttps2pi
xchg
jmp
popf
shr
mov
jle
sar
cli
pop
mov
adc
dec
jg
or
sub
(bad)
mov
or
nop
push
mov
ss
cmps
sbb
sbb
push
mov
out
add
sbb
fisttp
dec
push
gs
sahf
leave
(bad)
mov
dec
inc
xchg
xchg
leave
cmp
out
cwde
fucom
in
mov
lea
add
pop
pop
das
jo
mov
in
xchg
sahf
cmp
inc
test
pop
out
ins
ds
push
jne
jmp
(bad)
fadd
das
mov
mov
pop
jmp
sub
or
mov
inc
sbb
repnz
mov
mov
dec
imul
sub
lea
xchg
and
or
mov
cmc
or
pop
mov
int
cwde
frstor
mov
xchg
icebp
out
or
ret
push
(bad)
push
mov
xor
xchg
jmp
mov
nop
jge
xlat
xor
in
lds
adc
pop
sar
pop
inc
enter
xor
pop
mov
addr16
jp
mov
push
aaa
sbb
popf
mov
das
push
aas
push
adc
iret
xor
movs
add
setno
cmp
(bad)
(bad)
stc
inc
mov
dec
push
xor
pop
(bad)
in
xchg
retf
xlat
lods
inc
outs
pop
mov
scas
div
push
retf
fwait
xor
lock
xchg
test
aam
(bad)
and
pop
pop
mov
jg
dec
push
out
jge
lahf
xor
adc
ficomp
push
in
mov
scas
scas
fwait
neg
cmc
dec
cmps
repnz
or
xchg
inc
mov
cmp
adc
lds
xchg
push
je
pop
ss
mov
sbb
daa
dec
pop
cmp
push
mov
xchg
push
cmp
cmp
scas
popf
xor
add
sti
fcomp
xchg
mov
mov
fimul
jne
mov
fistp
mov
and
(bad)
test
shl
mov
(bad)
ss
xor
cmp
xor
xchg
push
ret
dec
xchg
lea
ss
mov
fmul
js
pop
jns
mov
movs
mov
pop
pusha
xchg
add
ss
lods
xchg
cmps
fcomp
jle
movs
pushf
sbb
jmp
aad
movs
pop
and
test
repnz
scas
movs
movs
js
(bad)
ficom
mov
xor
clc
mov
outs
adc
sbb
std
xlat
mov
nop
repnz
lds
mov
push
ja
imul
scas
fs
fucompp
sub
loope
inc
fwait
or
shl
repz
sbb
and
add
loop
mov
sti
push
dec
sbb
xchg
sbb
rcr
es
xchg
ficom
test
and
xlat
loopne
aaa
pop
sub
fwait
aaa
sbb
inc
lods
jnp
cli
dec
fnstcw
pop
sbb
inc
cmp
inc
pop
mov
push
add
push
mov
cdq
xchg
dec
adc
cmp
xor
pusha
add
cmp
mov
cmps
popa
out
call
inc
add
call
rcr
xchg
push
scas
mov
(bad)
sub
(bad)
clc
ret
mov
call
enter
mov
mov
and
sub
scas
movs
out
les
(bad)
jo
nop
or
outs
imul
inc
and
ja
xor
dec
retf
test
cs
pop
in
jno
and
push
add
jge
out
fs
cmp
test
stos
and
add
jbe
add
(bad)
inc
clc
test
adc
adc
enter
outs
mov
cmp
mov
push
mov
lahf
or
mov
xor
test
aad
xchg
mov
mov
xchg
stc
xchg
jmp
mov
mov
sti
mov
fld
outs
imul
push
in
in
sahf
cli
jle
popf
sbb
mov
sahf
pop
movs
(bad)
pop
xchg
pop
addr16
push
cli
jo
adc
fiadd
mov
fild
xor
data16
cmp
iret
loop
pushf
sbb
sar
out
cli
pop
or
adc
inc
jg
inc
lds
adc
add
fcom
inc
sbb
aas
aas
inc
mov
mov
jne
or
jecxz
cmp
(bad)
ficomp
xchg
and
push
mov
push
and
sbb
cmps
loopne
hlt
imul
sub
out
movs
movs
aad
hlt
mov
imul
ret
inc
cwde
outs
jb
xor
push
(bad)
out
cmps
mov
inc
add
outs
sbb
rcr
pushf
push
sbb
imul
(bad)
push
xchg
adc
pop
sti
ins
fwait
mov
stos
dec
ins
add
out
and
mov
out
inc
xchg
(bad)
aad
call
jne
mov
rcr
push
push
xor
inc
sbb
psubusw
shr
stos
pop
(bad)
jo
xchg
clc
push
or
add
jle
inc
xor
jae
es
add
dec
mov
and
fbld
pop
pop
mov
adc
fs
jl
mov
xchg
xchg
cmp
dec
outs
jp
cmp
shl
hlt
xchg
inc
les
sub
sbb
int
(bad)
jg
adc
mov
jb
jne
stos
xchg
jmp
jo
sub
push
cmp
cld
fidivr
push
outs
ret
or
cld
je
mov
push
or
outs
dec
cmps
out
pop
xlat
adc
or
je
xchg
pextrw
scas
mov
dec
je
loope
mov
jae
std
xchg
shr
push
push
or
in
out
mov
mov
(bad)
aad
lock
stos
lds
jmp
jbe
xlat
stos
inc
retf
xchg
push
jnp
aas
xchg
out
repz
xor
aad
xlat
cmps
js
dec
cdq
dec
inc
lods
mov
jge
push
cmp
in
cmp
je
(bad)
pusha
push
add
mov
out
adc
in
popa
popa
outs
mov
adc
loopne
enter
adc
in
xchg
add
ins
pushf
dec
in
cmps
arpl
cli
in
adc
aam
mov
push
pop
sbb
xor
sbb
or
daa
aam
ins
cwde
cmp
int3
pop
xlat
nop
das
or
mov
pop
test
jno
and
mov
ret
mov
and
adc
add
in
jmp
mov
data16
dec
cld
mov
adc
fs
xchg
fcom
(bad)
jne
pop
call
(bad)
inc
cmp
dec
cmp
or
int3
cmp
das
sbb
add
mov
fsubr
popa
add
push
in
sub
adc
jb
out
adc
mov
or
jb
inc
dec
ret
ss
rcr
push
ret
sbb
add
inc
fldenv
je
push
movs
mov
sahf
sbb
xchg
mov
rcr
iret
push
shr
mov
push
pop
dec
jmp
jno
add
pop
pop
imul
push
pusha
je
into
add
lock
sbb
mov
lods
ret
fnsave
dec
(bad)
sbb
sti
sar
bound
push
sub
movs
cmp
xor
outs
xchg
xlat
inc
mov
ret
jae
add
leave
loopne
jo
outs
mov
jae
push
lahf
(bad)
jno
je
lods
(bad)
and
jb
lods
sbb
bound
jns
adc
mov
leave
cmp
idiv
rcr
in
cmps
add
push
mov
jb
mov
xor
(bad)
jp
pop
or
mov
xor
sbb
xchg
into
(bad)
or
pop
nop
leave
repz
add
nop
out
pusha
sbb
dec
cli
pop
mov
loop
jge
movs
es
fdivr
mov
stos
cmp
mov
fucom
js
mov
jl
lahf
and
sbb
ss
and
xchg
inc
pop
movs
adc
gs
mov
inc
lahf
imul
and
sub
pop
inc
outs
jmp
mov
aaa
add
dec
int
adc
aaa
xchg
sahf
mov
aad
test
and
in
or
jmp
shr
rcl
jb
out
pop
inc
cdq
enter
and
cmp
in
inc
mov
aas
aam
ror
nop
(bad)
cmp
and
xchg
inc
dec
test
xor
fidivr
dec
or
xor
pop
push
and
sar
sub
inc
cwde
vmovq
xchg
(bad)
fstp
or
pop
mov
xchg
test
es
(bad)
sbb
and
sub
inc
inc
popa
mov
mov
fimul
jp
ror
mov
jo
pop
sar
jmp
cmp
dec
pusha
pop
and
sti
add
test
mov
mov
adc
popa
xchg
cmp
or
sub
sbb
adc
pop
cmp
cmp
and
and
bndstx
xor
(bad)
xor
xchg
lds
mov
push
cli
xchg
xchg
js
mov
in
pop
out
out
xchg
loope
jp
pop
add
push
xchg
pusha
pop
outs
fstp
xchg
pop
cmps
sbb
pop
mov
pop
mov
ror
jo
fwait
test
jo
stc
mov
cmp
add
or
inc
add
sub
sbb
mov
mov
xchg
movs
pop
cld
dec
popa
lds
mov
push
into
xchg
push
mov
push
mov
aad
mov
enter
push
sub
push
scas
js
xor
adc
adc
gs
push
cwde
nop
call
aas
shl
xchg
push
jns
stos
leave
cs
jae
cs
pop
pusha
adc
(bad)
mov
fbstp
outs
fild
clc
jno
call
aaa
hlt
adc
pop
in
pop
adc
das
jecxz
dec
add
movs
mov
dec
mov
and
inc
jb
inc
fisttp
outs
xchg
add
push
aas
mov
sbb
and
js
rcl
cmp
jmp
shr
pop
nop
lahf
mov
fadd
jbe
xor
pop
add
sub
mov
sbb
add
add
mov
mov
sbb
jmp
pop
lods
pushf
push
xchg
dec
arpl
mov
mov
push
outs
cmp
adc
pop
adc
adc
jle
fcomip
lea
lds
repnz
outs
mov
xchg
mov
or
jne
jmp
fnstsw
xchg
jp
call
push
(bad)
sahf
mov
div
jbe
rcl
and
mov
or
dec
dec
movs
scas
pop
int
fiadd
push
xchg
pop
xchg
push
in
pop
inc
cmp
or
add
repz
mov
lds
fwait
aas
pop
sub
sbb
sahf
retf
rol
inc
pop
pop
xchg
aas
popf
repz
es
inc
jnp
jl
js
push
mov
and
mov
loope
call
and
dec
sub
dec
mov
pop
xchg
test
retf
xlat
jb
push
out
jae
leave
mov
call
push
pop
sbb
dec
pop
pop
stc
popa
ins
mov
ins
ins
cmps
stos
push
stos
pusha
xchg
js
cmp
sahf
scas
fs
and
mov
ret
shl
xchg
mov
les
mov
cli
mov
mov
sub
push
xor
push
fild
xchg
fnstcw
sar
jmp
lahf
xlat
pop
lea
dec
xlat
push
push
jbe
mov
and
in
adc
mov
mov
inc
lock
cmp
out
lea
fcomp
dec
inc
inc
mov
jg
mov
dec
(bad)
leave
pop
lds
dec
test
(bad)
inc
xchg
stc
dec
adc
dec
fwait
jmp
aam
sbb
mov
sbb
push
jo
cmp
dec
mov
or
aam
lea
ficomp
cmp
stc
bound
cmp
add
nop
pushf
or
pop
pop
stos
bound
je
xlat
fnstenv
inc
loop
out
mov
test
add
(bad)
or
mov
movs
dec
int3
hlt
loope
adc
retf
sub
fnstsw
jbe
xchg
jle
scas
sub
adc
(bad)
dec
mov
aaa
push
pop
jns
mov
dec
call
mov
sti
mov
sbb
xlat
xor
inc
retf
jns
call
sub
fmul
xor
std
clc
or
xchg
out
or
jae
dec
je
mov
(bad)
cmp
shl
or
mov
movs
adc
push
(bad)
std
push
pushf
jecxz
in
ins
dec
mov
xchg
pop
xchg
(bad)
xor
dec
inc
shr
jnp
cmc
push
(bad)
mov
ret
push
mov
retf
add
xchg
test
cld
xchg
out
mov
inc
and
xchg
mov
xchg
jb
dec
xor
xchg
push
adc
rol
dec
or
sbb
outs
adc
sbb
cmp
and
cwde
jle
push
mov
push
pop
or
xor
mov
dec
jmp
cmps
aam
je
dec
push
retf
je
jge
retf
mov
inc
out
data16
mov
dec
push
lods
sub
test
xchg
mov
push
jg
jae
hlt
xchg
mov
ss
mov
inc
shl
sbb
xchg
cmc
cmps
push
aam
cld
mov
jp
mov
mov
dec
sbb
xor
xchg
sub
movs
sbb
jmp
push
mov
pop
jle
shr
cmps
push
pop
aad
or
jge
sbb
sub
pop
outs
test
sub
jmp
cmp
es
call
loope
sub
push
jge
mov
xor
arpl
push
aam
jns
lods
add
mov
jmp
cli
iret
ds
xor
outs
int3
stos
xchg
adc
xchg
lahf
fwait
mov
xchg
add
bound
mov
ficom
cmp
jg
mov
sub
(bad)
jbe
test
dec
loope
or
push
jmp
or
jae
cdq
sbb
sti
in
retf
xlat
mov
imul
aaa
and
push
jae
sbb
or
mov
mov
push
mov
enter
xchg
sti
(bad)
jmp
call
mov
out
push
cmps
cs
pop
cmps
call
ret
jge
in
movs
in
sub
or
mov
inc
stos
addr16
dec
sbb
push
mov
popf
push
mov
mov
dec
sub
sbb
pop
sbb
or
shr
pop
leave
or
mov
imul
dec
or
inc
stc
les
mov
jmp
or
fild
retf
mov
or
adc
dec
mov
leave
test
lahf
xchg
and
dec
xchg
cli
test
iret
inc
out
rol
xchg
out
push
and
sbb
std
nop
imul
xor
add
cmp
shl
stos
daa
mov
push
inc
lds
dec
imul
mov
retf
or
scas
hlt
in
in
pop
loopne
mov
ds
and
push
xchg
cmp
in
mov
pusha
es
xor
cmp
add
pop
icebp
add
sbb
je
leave
mov
aas
int3
jo
inc
popa
jnp
push
imul
popf
pop
push
jmp
aad
ja
add
mov
dec
retf
sbb
jns
popf
cld
lds
mov
fnstcw
(bad)
fmul
mov
mov
(bad)
imul
dec
dec
(bad)
inc
add
mov
jecxz
popa
lods
and
add
add
(bad)
cdq
pop
adc
dec
add
xchg
call
imul
sbb
cmps
mov
sbb
push
std
data16
lods
xlat
mov
bnd
inc
enter
jae
movs
in
dec
xor
sbb
cmp
aam
jmp
lea
(bad)
std
aad
mov
movs
int
push
ret
xchg
mov
pop
int3
adc
test
add
iret
xor
mov
xchg
xchg
(bad)
aas
jg
mov
scas
inc
je
mov
add
je
mov
out
add
sub
shl
dec
and
push
pop
mov
push
xor
or
jg
xor
and
aaa
out
inc
aas
imul
pop
sar
mov
(bad)
jae
stos
fcomi
or
(bad)
idiv
out
mov
xchg
sub
push
pop
sub
add
jnp
aam
push
sbb
ret
fisubr
push
dec
inc
aam
fnsave
adc
mov
or
test
cmp
fild
jge
aas
popf
mov
cmps
dec
rcl
inc
arpl
lahf
adc
xchg
sub
mov
hlt
movs
inc
sahf
ins
dec
stos
mov
mov
mov
adc
dec
int3
sbb
xchg
into
cmp
push
pop
lods
pop
test
xor
pusha
(bad)
aad
mov
mov
(bad)
stc
aas
adc
ins
xchg
jnp
and
xchg
and
push
(bad)
or
cmps
adc
leave
mov
dec
stos
push
cmps
data16
imul
adc
adc
mov
pop
pop
or
jns
push
js
(bad)
dec
adc
push
ja
push
aad
jne
stos
sbb
ins
clc
and
retf
xor
rol
jo
pushf
cmc
int
lahf
idiv
popf
icebp
mov
pop
mov
cmp
lea
jae
mov
sbb
or
adc
add
mov
ret
into
(bad)
bswap
popa
out
scas
xchg
call
inc
mov
out
test
mov
shl
aaa
cmp
ret
call
lahf
push
fsubr
fwait
fwait
jo
cmc
mov
cwde
mov
or
sbb
and
repnz
mov
(bad)
cld
dec
or
jmp
mov
pop
aaa
cmps
sbb
clc
jae
imul
mov
call
sbb
cmps
test
xlat
scas
test
cmp
js
call
cmp
loop
mov
mov
out
mov
or
les
adc
mov
pop
inc
adc
jno
lods
les
jo
or
mov
mov
loope
xor
imul
in
push
loopne
and
fisubr
cmovs
push
dec
inc
push
dec
stc
pop
mov
shl
or
ror
and
jmp
sbb
sub
shl
sbb
inc
pop
mov
xchg
mov
pushf
lods
or
hlt
ret
mov
loop
daa
xlat
cmps
xor
cs
loop
inc
adc
dec
out
addr16
into
sbb
xor
(bad)
xor
movs
or
shr
into
mov
add
or
jbe
punpcklwd
icebp
and
jb
push
inc
frstor
add
iret
xor
mov
pop
or
sub
call
and
pop
adc
int3
fst
scas
pop
(bad)
pop
mov
pop
jl
out
shrd
cdq
test
das
ins
xchg
gs
div
int3
(bad)
call
fidiv
adc
push
outs
adc
pop
sub
jg
or
xor
mov
fldcw
push
adc
(bad)
cmp
xchg
mov
je
stos
fwait
cdq
add
shl
cs
sbb
xchg
dec
lods
in
xor
mov
mov
or
test
mov
pop
dec
push
sbb
test
in
xchg
jp
sub
cmc
in
daa
loopne
cmp
adc
fdiv
cmc
nop
fwait
sbb
dec
fstp
std
pop
mov
pop
loope
out
cdq
pop
jmp
pop
mov
and
popf
mov
dec
lock
xor
mov
jb
(bad)
fistp
test
jb
inc
or
not
sub
fst
add
inc
xchg
jmp
cmps
push
dec
test
jne
jb
dec
out
xchg
shl
je
mov
jmp
pop
add
sbb
jp
sbb
mov
or
imul
push
popa
leave
lea
aaa
mov
hlt
aam
lock
stc
cmp
push
xchg
xchg
dec
cmp
(bad)
xor
frstor
sbb
out
jno
or
call
cs
mov
xchg
adc
sub
(bad)
or
rcl
mov
sahf
into
jo
out
pop
xor
push
stc
xchg
jmp
mov
clc
inc
inc
aam
inc
sub
push
sbb
(bad)
jecxz
cmp
shl
inc
push
mov
sbb
hlt
lods
or
add
mov
jmp
and
data16
dec
sub
cmp
push
and
mov
inc
int3
loopne
retf
int
(bad)
xchg
lea
leave
jge
aaa
ret
test
xchg
rcr
cdq
inc
rcr
pop
push
retf
xor
lds
mov
enter
sub
xchg
aaa
ds
fld
mov
adc
mov
je
pop
mov
mov
neg
dec
inc
call
mov
cmp
lock
loope
call
jg
call
test
mov
jmp
mov
jmp
cmp
inc
bound
fild
cld
adc
mov
xchg
(bad)
add
jmp
(bad)
jp
sub
push
hlt
push
out
test
cli
inc
addr16
scas
imul
fcmovb
loop
stc
mov
inc
or
mov
xor
or
retf
inc
mov
or
add
test
sbb
cmp
vmulpd
or
push
mov
jo
ret
push
mov
fs
in
ror
pop
cmps
jle
adc
push
push
jmp
cli
sbb
jmp
cmp
psraw
add
or
stos
dec
pushf
mov
lods
in
pop
in
dec
nop
inc
adc
mov
mov
dec
sbb
in
or
outs
adc
mov
mov
addr16
lahf
dec
cmovo
xchg
loopne
js
lds
(bad)
adc
mov
test
test
xchg
add
mov
loopne
push
xor
movs
xor
leave
retf
fisubr
sub
test
xchg
push
aad
cli
int3
inc
jb
lea
ds
xchg
pop
cld
in
jecxz
mov
fdivr
xor
adc
sub
xchg
(bad)
arpl
dec
add
mov
dec
cmp
mov
jle
aam
jo
mov
xor
jmp
jnp
sbb
sbb
aas
jle
(bad)
xchg
in
mov
sbb
push
ins
inc
ins
retf
int3
daa
inc
iret
test
imul
fnstsw
pop
call
cwde
mov
cmp
xchg
xlat
xor
pop
movs
outs
cmp
sar
xor
cmp
xchg
xor
int
push
dec
ja
out
push
inc
mov
inc
jno
popf
fiadd
dec
aam
pushf
(bad)
movs
xchg
push
hlt
fst
xor
cmp
in
imul
or
push
pop
out
add
cs
out
mov
ret
xchg
sub
mov
inc
push
cmp
mov
into
leave
das
and
jae
push
loopne
mov
cdq
arpl
jmp
ret
loopne
and
jno
sbb
cmp
xor
aad
mov
pop
inc
or
loopne
dec
add
jmp
rep
inc
pop
fcom
xchg
cli
xchg
pop
inc
mov
mov
movs
inc
mov
mov
lahf
xchg
shl
jmp
pop
out
iret
enter
sbb
sub
jb
mov
cmc
(bad)
std
stos
call
aad
data16
xchg
fdiv
pop
xor
ds
push
fstp
sub
sar
add
jge
icebp
aad
push
and
dec
fdiv
jb
or
lods
jmp
add
sbb
push
push
xor
mov
lea
out
hlt
or
shr
push
cmp
sub
and
lahf
push
jp
push
iret
inc
jle
adc
test
call
jecxz
je
shr
je
in
ss
ds
xor
in
ss
stos
clc
xchg
push
adc
sub
dec
xchg
popf
xor
or
jle
aam
mov
cmc
cs
mov
sub
scas
ins
pop
mov
call
scas
mov
cmp
into
mov
jge
gs
pop
repz
push
cmp
push
xor
test
adc
repz
mov
cmps
or
lds
cmp
jb
(bad)
or
cmp
and
sub
dec
sbb
push
cmps
or
stos
test
popf
ret
mov
loopne
scas
mov
daa
hlt
out
xchg
jecxz
cmp
int
xchg
dec
add
jmp
cmps
or
or
mov
cld
jae
test
jecxz
add
leave
xor
pop
adc
sub
dec
adc
aad
xor
lods
addr16
into
xchg
(bad)
lds
cmps
daa
push
jnp
cmp
push
lds
repnz
jge
pop
or
nop
xor
aaa
pop
(bad)
rcl
inc
es
std
dec
outs
fwait
xchg
jbe
mov
sahf
adc
and
jge
or
adc
aaa
sti
in
adc
push
fnsave
movs
xor
retf
lods
shl
xchg
dec
enter
int3
xor
call
not
ss
xchg
call
into
pop
push
or
jae
mov
lods
dec
enter
push
or
inc
sub
pop
push
mov
fadd
out
jmp
test
ja
mov
mov
dec
cmp
sbb
pop
mov
and
adc
push
lods
into
dec
mov
inc
push
fidiv
(bad)
pushw
sub
mov
pop
adc
jo
jl
push
idiv
sub
mov
cld
cmp
call
in
iret
hlt
cdq
(bad)
int
push
dec
pop
enter
rcr
(bad)
mov
cmp
pop
mov
pop
xchg
js
fisubr
adc
dec
mov
leave
or
aam
inc
xchg
mov
loope
call
fst
xchg
add
stos
pop
and
test
xchg
inc
jmp
jp
or
popf
or
mov
cwde
jmp
and
hlt
mov
popa
fwait
retf
inc
dec
arpl
pushf
addr16
daa
outs
retf
out
leave
push
fdivr
or
adc
push
cwde
repz
repz
push
push
pop
push
cmp
dec
add
inc
ins
pop
cmp
mov
addr16
xchg
mov
or
cmp
sub
jmp
xchg
call
cmp
mov
shl
mov
add
add
and
xchg
stos
sub
in
repz
retf
pop
cmc
loop
sub
sub
sub
pop
ret
and
pop
jmp
outs
sbb
add
mov
mov
repz
int
xor
push
sti
inc
jle
mov
mov
int3
mov
lods
and
mov
jmp
xchg
xchg
mov
ins
(bad)
and
and
call
inc
jmp
leave
pushf
jmp
js
lds
push
jns
adc
ret
out
pusha
sbb
xlat
(bad)
in
inc
aas
jb
outs
gs
jne
imul
xor
add
psubusb
add
add
rcr
ss
push
xor
(bad)
dec
xor
pop
sub
js
movs
dec
mov
in
xchg
push
mov
ror
push
dec
into
cld
ja
push
imul
mul
aas
inc
inc
cmc
and
or
jne
add
inc
shl
xchg
ins
int3
or
fimul
arpl
jmp
mov
pusha
outs
ss
out
fadd
mov
out
xlat
pop
and
dec
pop
dec
jle
push
loop
mov
sti
dec
mov
cmp
mov
pop
sub
stos
cdq
jge
push
mov
jo
ficomp
mov
adc
mov
and
loopne
inc
pop
out
mov
push
and
iret
cld
out
sbb
xchg
lock
(bad)
mov
imul
repz
ret
sub
add
cmps
popa
in
push
cwde
mov
and
icebp
(bad)
popf
not
mov
rcr
push
popa
cmp
add
mov
arpl
sbb
xor
push
in
int
aam
mov
mov
enter
pop
mov
adc
aam
or
fbld
dec
push
out
pushf
cmps
mov
sar
pop
jp
lods
aam
pop
retf
into
mov
xor
test
jecxz
dec
mov
icebp
mov
jp
(bad)
dec
push
fisub
dec
imul
sub
xchg
pop
mov
jp
inc
cmp
xchg
mov
adc
std
cmp
popa
iret
jg
jmp
adc
adc
dec
or
adc
pop
pop
adc
cmp
push
xor
cwde
lahf
pop
adc
ficom
pop
sub
sub
pushf
call
mov
inc
out
jno
cmp
mov
cmp
movs
xor
loopne
je
pop
retf
sub
(bad)
nop
clc
mov
xlat
js
loopne
into
and
cwde
mov
shr
xchg
ret
nop
xlat
cwde
or
and
add
dec
and
aaa
les
mov
stos
int
jne
outs
scas
xchg
mov
xor
sbb
retf
fsubr
adc
movs
jmp
mov
pop
push
dec
retf
(bad)
pop
scas
pop
jno
loope
mov
arpl
pop
stc
jno
and
das
pop
pop
ret
(bad)
mov
inc
out
daa
(bad)
or
pop
lods
ficomp
xchg
sub
inc
jle
xor
test
arpl
mov
sub
mov
pop
add
ror
int3
mov
out
xchg
inc
mov
xor
les
inc
ja
idiv
add
mov
shl
adc
fistp
sbb
dec
loopne
jle
into
sub
popa
aad
js
jg
lea
jecxz
pop
in
jb
and
outs
push
and
sbb
jne
sbb
sar
jo
jecxz
push
bsf
pop
loop
or
jge
push
jnp
xchg
inc
in
sub
mov
and
jl
pop
rcr
aaa
outs
adc
dec
(bad)
(bad)
jns
sbb
mov
mov
cmps
sbb
icebp
dec
push
mov
adc
ffreep
js
out
dec
xor
in
fild
mov
sbb
int
mov
sub
lods
pop
jge
xchg
adc
pop
mov
jle
scas
fcom
test
inc
pop
jge
(bad)
lds
pop
cmp
pop
dec
arpl
aad
stos
pop
retf
cmps
fld
daa
jmp
push
pop
outs
jmp
xor
add
push
popa
loope
(bad)
push
jne
add
jns
or
adc
ins
bound
mov
mov
sti
lahf
nop
cmps
mov
retf
xchg
adc
sub
stos
xor
push
mov
jns
inc
push
setno
iret
repz
cmp
xchg
xlat
cs
mov
cmps
adc
subps
shl
ret
mov
mov
dec
jecxz
ja
iret
xchg
inc
or
jg
mov
popa
sbb
repnz
cld
xchg
jle
cli
ss
cmps
cli
mov
dec
sar
bound
(bad)
out
jnp
cmp
xor
fsub
fcomp
mov
test
fwait
sbb
sub
xchg
cmp
enter
xor
jg
xchg
push
sbb
sbb
adc
jnp
xlat
ret
jae
sub
lods
lods
aas
std
push
ret
mov
cmp
dec
inc
icebp
xlat
cdq
adc
lds
and
mov
xchg
out
jecxz
adc
push
or
in
jmp
mov
js
scas
aad
sbb
sub
mov
in
push
inc
push
xchg
out
cwde
mov
imul
pop
jge
cmc
xchg
inc
shr
cdq
icebp
pop
ins
pop
or
cmps
xchg
mov
(bad)
call
shl
mov
push
shl
das
popf
cmp
cli
out
xchg
in
pusha
push
push
adc
mov
mov
jp
or
push
pushf
loop
in
push
sar
sub
add
test
pop
pop
xchg
push
popa
call
aam
push
dec
pop
daa
sbb
stc
retf
xchg
jb
scas
mov
scas
leave
das
sbb
push
div
mov
rcl
push
icebp
add
inc
in
sbb
pop
pop
or
sti
jl
hlt
dec
cmps
mov
add
out
ja
fadd
xchg
aas
enter
enter
pusha
mov
dec
push
and
(bad)
mov
pop
cwde
adc
push
fisub
xchg
cmovle
mov
stos
popa
mov
xlat
out
add
inc
jmp
mov
cmp
pop
into
in
movs
mov
fs
adc
sub
fxch
call
ret
and
nop
shr
loopne
mov
int3
cmovg
xchg
bound
push
and
aas
ss
add
xchg
xchg
push
repnz
xor
(bad)
(bad)
push
(bad)
imul
jb
dec
ret
cli
sbb
movs
movs
jbe
outs
icebp
cmps
cmc
sar
sbb
sub
dec
ror
pushf
scas
jae
test
add
adc
das
push
or
pop
dec
pop
cmps
hlt
sub
iret
scas
push
mov
sbb
into
xchg
sbb
sbb
inc
pop
enter
outs
in
gs
inc
ja
xor
shl
pushw
xlat
mov
sbb
cld
enter
mov
lahf
aam
movs
adc
(bad)
lahf
inc
cmp
xor
cdq
sub
or
cmp
push
shl
out
loope
imul
xchg
(bad)
sar
ja
ret
jmp
fcomp
jns
repnz
xchg
add
jo
call
imul
jle
push
out
xor
loope
cdq
mov
arpl
not
add
icebp
cmp
shr
or
dec
(bad)
jg
push
pushf
sti
xchg
adc
dec
xchg
mov
ss
push
add
das
fld
sub
dec
mov
fsub
mov
bound
arpl
lea
and
jne
imul
xchg
mov
xlat
popf
out
push
or
jmp
pusha
outs
and
mov
xchg
dec
ja
jg
ja
cmp
dec
pushf
(bad)
das
jb
pop
out
jp
xchg
inc
fidivr
add
addr16
push
ins
jecxz
test
pop
xchg
mov
leave
push
pusha
lea
inc
or
mov
push
movs
je
push
imul
xchg
mov
mov
arpl
fmulp
out
push
pop
imul
fcomi
ret
inc
repz
xlat
xor
mov
pop
jg
ret
aam
adc
cdq
repz
and
test
sub
jecxz
push
dec
scas
cmc
mov
jns
out
cmp
imul
aaa
(bad)
popa
pop
or
sbb
xlat
fsub
fnstsw
rol
mov
data16
adc
dec
adc
push
jae
inc
popa
inc
adc
jecxz
scas
sbb
loop
xor
int3
push
(bad)
mov
idiv
pop
fwait
jno
xchg
push
mov
inc
sbb
fs
(bad)
(bad)
outs
pop
or
xchg
cmps
sar
push
mov
or
in
out
retf
retf
repz
jecxz
out
aaa
fbld
or
cmps
jb
or
sub
add
sbb
pop
les
ficomp
jbe
jno
add
js
mov
push
ret
and
repnz
pop
jbe
inc
push
sub
fld
mov
mov
push
push
adc
gs
pop
outs
enter
dec
adc
cmp
xchg
mov
mov
call
(bad)
push
dec
xchg
int
mov
cdq
jae
mov
cmps
jmp
pop
cmp
int
inc
fs
ja
sbb
mov
xchg
movs
pop
xor
ds
inc
sub
into
adc
int3
ror
mov
popa
jg
test
or
test
or
sub
iret
adc
push
popa
loope
and
add
dec
lahf
pop
int
sbb
cdq
aaa
mov
mul
adc
hlt
mov
xchg
shr
imul
xchg
add
(bad)
aad
adc
mov
mov
adc
les
out
mov
sar
loopne
dec
loopne
mov
push
jl
adc
pop
pushf
mov
aam
hlt
shl
add
jle
sub
(bad)
sbb
jns
xchg
xchg
dec
inc
mov
xor
into
xchg
dec
sub
popf
dec
adc
ret
mov
mov
pop
adc
hlt
push
and
pop
pop
xor
mov
and
imul
sub
mov
push
stc
or
out
mov
sbb
std
jp
mov
addr16
lahf
int3
add
xchg
cmps
leave
test
int
lods
lahf
push
int
dec
ds
xchg
mov
mov
cmp
adc
xor
lahf
push
stos
in
sar
pop
nop
fadd
fs
push
aad
dec
push
adc
mov
jge
inc
pushf
ds
push
lods
pop
push
ror
sbb
pop
xchg
adc
in
loopne
les
cmp
aam
cmps
mov
dec
vminpd
cwde
xchg
cmp
cmp
data16
inc
xchg
jge
jge
pop
ss
in
retf
xor
jnp
add
shr
push
sub
(bad)
add
mov
jb
aam
outs
repnz
ins
pop
push
mov
push
jns
out
es
inc
popa
push
inc
lea
cmp
repnz
adc
push
xchg
outs
xchg
mov
push
aas
repz
mov
dec
cwde
scas
mov
inc
mov
fidivr
add
clc
fild
rcl
stos
inc
add
xchg
shr
(bad)
mov
(bad)
pop
sbb
dec
out
jge
push
jp
cmp
cld
pop
and
icebp
sub
leave
add
mov
mov
xchg
pop
ret
call
rcr
sbb
int3
cmps
ret
test
movs
jp
imul
or
es
or
adc
test
mov
call
cmp
mov
mov
or
push
sbb
or
aam
dec
repnz
in
mov
xor
dec
test
push
cmp
adc
or
cmp
and
sub
inc
cmp
leave
xchg
retf
jge
dec
inc
mov
and
mov
lds
add
mov
push
mov
jbe
call
cmp
cmc
mov
or
pop
sahf
sahf
stc
enter
dec
inc
pop
stc
cli
pop
cmp
mov
sbb
dec
and
and
mov
cmp
xor
aaa
add
dec
das
into
lahf
jmp
jecxz
aad
xchg
or
in
add
mov
retf
test
(bad)
pop
adc
and
out
in
and
xchg
stos
cmc
int
data16
fwait
push
test
ins
imul
ins
jo
add
lock
mov
adc
adc
fisttp
xchg
cwde
push
dec
and
adc
stos
xchg
add
add
pop
sub
das
add
mov
push
dec
sub
mov
imul
jne
add
std
xor
imul
stc
push
xor
mov
xlat
xor
adc
lahf
pop
shl
scas
inc
addr16
scas
xlat
cmp
and
push
jmp
fwait
inc
ss
push
cmps
dec
and
dec
pop
fisubr
mov
pop
pop
sub
dec
call
jae
xor
mov
cmp
pop
pushf
pop
loop
push
int3
in
idiv
pop
xor
jge
mov
dec
add
lods
and
fmulp
mov
xchg
inc
dec
ret
in
popa
or
inc
sbb
push
ret
jecxz
and
xchg
and
popf
ret
mov
data16
cmp
cs
out
ins
sahf
adc
mov
jmp
jmp
adc
adc
inc
jecxz
and
fnstenv
imul
(bad)
gs
xchg
jae
cwde
cmp
test
repz
fld
mov
sbb
xor
pushf
test
push
ja
movs
out
lock
mov
les
in
int3
repz
lea
cmp
dec
fwait
addr16
pop
movs
test
sub
lea
push
xlat
add
push
push
mov
call
inc
cmps
call
pop
fsubr
or
lds
sbb
call
rep
cmp
stos
jmp
inc
out
daa
push
cmp
ss
test
cmp
pop
in
dec
mov
cmp
jne
arpl
cmp
out
sub
pusha
test
xchg
and
lods
pop
xchg
xor
outs
cmp
inc
mov
dec
cmp
sub
jo
out
cmps
inc
sbb
sbb
sahf
jle
rol
push
xchg
int
pop
sub
inc
sub
das
jge
movs
cmp
int
xor
cmc
sbb
jp
rol
xchg
pop
dec
cmp
xor
sub
or
sti
and
xor
mov
pop
mov
mov
mov
aam
mov
mov
scas
mul
fwait
pop
dec
cdq
nop
call
mov
cmc
and
sahf
arpl
stc
inc
sti
xlat
cwde
sbb
(bad)
in
adc
xchg
out
dec
jo
fwait
xor
xchg
call
outs
mov
mov
nop
imul
sbb
jg
ss
mov
cmp
jmp
jmp
adc
sbb
mov
dec
sub
mov
test
lea
(bad)
xor
mov
adc
fs
mov
xor
int3
sub
cmp
inc
test
xor
cmc
push
cs
in
sub
leave
and
jmp
nop
arpl
inc
in
jnp
pop
adc
and
icebp
cmps
xor
(bad)
mov
das
stc
cmovge
mov
(bad)
sbb
fld
iret
pop
mov
out
or
push
stos
or
xor
aaa
dec
lods
add
idiv
and
sti
xchg
sbb
rcr
xor
jae
add
sub
ins
dec
icebp
mov
fld
xchg
adc
push
mov
cld
sbb
mul
inc
sub
push
stos
or
add
xor
call
push
push
sbb
or
xchg
xor
cmp
cmps
xchg
mov
sub
cmc
(bad)
mov
jg
icebp
ret
cmp
jle
sub
jp
sbb
(bad)
(bad)
mov
cli
out
add
and
mov
icebp
imul
test
fs
dec
ja
xor
xchg
fst
mov
or
retf
pop
adc
or
mov
sbb
enter
mov
mov
ins
cld
inc
cmps
sbb
adc
movs
jns
test
mov
or
mov
lds
pushf
sub
mov
ret
inc
pop
loopne
cmp
sbb
and
in
stos
aas
sbb
out
jno
gs
rcl
icebp
pop
cli
dec
mov
xor
addr16
mov
add
dec
sahf
inc
push
outs
ret
mov
stos
repz
out
or
xor
xchg
xchg
sar
pop
icebp
movs
pop
mov
clc
and
cmp
mov
leave
int3
cmp
popf
test
ror
xlat
sbb
push
pop
fcom
rol
cmps
xor
popa
xor
and
jg
inc
xlat
dec
mov
and
outs
ds
aaa
lods
mov
adc
leave
jle
jmp
mov
out
test
mov
mov
adc
push
xor
inc
bnd
add
ds
xchg
retf
scas
or
push
mov
dec
outs
mov
cmp
mov
add
popf
and
mov
adc
aad
fld
xor
std
popf
inc
mov
pushf
ds
fnsave
mov
enter
inc
out
sbb
jbe
xchg
dec
sub
cmps
inc
cmp
pop
data16
xchg
push
push
rcl
pop
jae
sub
xchg
je
fstp
dec
pusha
push
mov
outs
inc
stos
in
jae
pop
test
fst
fwait
and
jne
(bad)
xor
ins
ret
sub
arpl
call
inc
repz
adc
(bad)
out
mov
imul
pusha
ss
call
mov
gs
out
sub
sbb
fs
mov
sahf
dec
pop
fnstsw
dec
shr
and
fld
xchg
outs
mov
push
or
ret
xchg
in
or
push
push
call
jge
nop
adc
xchg
jb
popa
fs
mov
xor
je
(bad)
push
icebp
rol
push
xchg
xchg
in
mov
add
es
inc
(bad)
shl
mov
fcomp
xchg
pop
data16
pop
jmp
mov
das
xchg
sbb
lds
mov
aam
mov
int
(bad)
and
cld
in
xchg
push
iret
stos
mov
jnp
xor
and
jg
pop
xchg
add
sbb
push
jecxz
pop
or
addr16
and
cld
bound
pop
cli
add
jecxz
or
cwde
or
jbe
adc
jg
sbb
push
cmc
sti
sbb
adc
jg
js
sub
clc
cmps
dec
sub
in
sub
dec
in
or
sub
push
pop
sbb
xor
xor
mov
sub
(bad)
xor
add
xor
dec
adc
outs
enter
jno
ins
mov
or
icebp
and
pop
jmp
jbe
sub
data16
mov
rcl
popf
aaa
fsubrp
adc
mov
jbe
dec
ret
adc
mov
dec
xchg
adc
test
sub
sbb
das
push
js
imul
outs
mov
hlt
fmulp
repz
adc
xchg
shl
enter
dec
inc
loopne
ret
mov
jmp
xchg
sub
dec
ins
jecxz
sub
or
cmp
out
or
inc
icebp
or
sahf
jecxz
lock
sub
mov
adc
movs
(bad)
add
daa
ja
pop
sbb
sbb
out
cmps
call
ds
aam
dec
sti
(bad)
fdivr
data16
scas
inc
loop
dec
dec
div
push
jg
(bad)
pop
dec
bound
adc
xchg
xchg
add
cmp
in
in
and
in
sub
pop
and
sbb
push
jo
pshufw
(bad)
call
retf
mov
adc
pop
xor
pop
and
jl
lea
arpl
mov
enter
or
aam
add
inc
test
sub
fld1
test
daa
dec
cmp
adc
neg
iret
aam
adc
mov
sbb
repnz
daa
ror
adc
adc
ror
push
popf
inc
rcl
mov
loop
stos
shl
sahf
cli
sahf
mov
sbb
out
(bad)
jne
xor
in
movs
gs
sbb
test
cmp
mov
les
inc
(bad)
sti
or
out
cmps
retf
in
sbb
les
jbe
mov
lods
and
repz
xchg
cmp
leave
adc
ins
fwait
(bad)
aam
pop
push
cmp
mov
adc
and
(bad)
in
inc
out
mov
cmp
call
cli
xchg
jmp
mov
gs
inc
clc
fwait
xlat
cs
or
push
pop
shl
mov
movs
lds
out
cdq
aad
mov
pop
sbb
test
mov
lahf
jne
(bad)
xor
idiv
xlat
out
add
fs
loop
pusha
or
cmps
xor
clc
jl
rdtsc
imul
push
mov
pop
jnp
out
mov
(bad)
cmps
test
stc
cmp
or
ins
push
pop
push
and
icebp
hlt
rcl
stos
fs
mov
xchg
test
mov
loopne
xor
nop
or
and
adc
lahf
inc
loop
pop
jg
pushf
test
dec
dec
fadd
jp
int3
dec
mov
mov
mov
pop
jae
shr
jb
xor
jbe
add
je
mov
(bad)
loope
mov
fst
push
call
dec
add
push
xlat
das
xor
jge
xor
mov
xchg
xchg
sub
shr
pusha
dec
push
les
add
push
inc
xor
sub
cmp
mov
dec
or
call
sub
ret
aas
gs
push
inc
data16
mov
je
fisubr
aaa
idiv
dec
mov
or
(bad)
xor
mov
mov
xchg
dec
loop
jp
cmp
adc
test
xchg
sar
arpl
pusha
xchg
mov
fsub
nop
fwait
sbb
fs
inc
je
mov
xor
dec
daa
sbb
push
mov
icebp
and
dec
in
xlat
loopne
movs
mov
movs
lods
ficom
xchg
ja
mov
adc
mov
inc
mov
scas
adc
popa
push
rcr
gs
push
jne
popf
add
mov
mov
inc
inc
rcr
retf
pop
adc
int3
dec
cmp
repnz
dec
outs
cld
sbb
push
cli
bound
sub
xchg
inc
(bad)
std
movs
shr
arpl
mov
pop
leave
mov
sbb
mov
out
or
inc
jbe
in
inc
int3
mov
mov
pop
add
sub
add
loope
call
in
adc
ror
xchg
mov
lfs
push
test
and
(bad)
jmp
cs
xor
cdq
mov
or
scas
aad
loope
mov
cmp
call
mov
aaa
data16
jbe
or
xor
pop
mov
retf
inc
jnp
rcr
into
lock
test
in
adc
mov
fld
fs
div
std
xor
call
lock
or
gs
rcl
pop
fxch
inc
leave
in
leave
test
fwait
inc
mov
dec
popa
sbb
fld
lock
push
mov
repnz
jo
sti
imul
sbb
add
addps
lahf
cmp
das
jno
inc
aam
mov
sbb
sub
call
test
sbb
scas
mov
jmp
sti
jbe
jb
scas
jo
aad
into
in
call
and
adc
aas
dec
add
lods
popf
shl
(bad)
jmp
sbb
add
or
mov
fistp
fs
and
push
or
xchg
push
mov
pop
(bad)
pop
popf
xchg
sub
cmovne
iret
cmps
jge
jb
(bad)
pop
cmps
xchg
hlt
add
scas
mov
dec
inc
jp
push
mov
ficom
inc
jmp
and
retf
adc
lahf
sbb
not
mov
xor
mov
or
mov
dec
mov
push
mov
retf
jge
mov
adc
mov
sub
aas
cmc
ret
jno
or
dec
xlat
sbb
test
(bad)
add
aad
(bad)
outs
jmp
lea
dec
or
mov
add
fmul
les
aaa
pop
cmp
pop
movs
std
adc
imul
sub
xchg
mov
mov
mov
inc
mov
jbe
cs
loope
ss
mov
in
jne
fmul
add
pop
add
pop
scas
stos
push
jb
pop
xor
call
scas
mov
mov
arpl
fdivr
aam
xchg
call
add
out
pop
cmps
pop
cs
pop
popa
dec
mov
in
lock
inc
into
in
test
test
pop
mov
pusha
xchg
repnz
mov
les
mov
adc
cdq
lea
lds
cmp
mov
push
mov
sahf
mov
addr16
jne
cmp
pop
test
movs
mov
bound
sbb
leave
ret
(bad)
fisub
pop
jmp
mov
sti
fcmovne
out
pop
iret
std
jge
call
or
sub
xor
push
cmp
test
dec
test
mov
inc
mov
add
aaa
mov
dec
or
repnz
and
fcmovnb
cmp
push
push
mov
jmp
fnstenv
inc
out
inc
cmp
push
mov
inc
pop
xchg
inc
xchg
inc
repnz
lahf
inc
arpl
cmp
aaa
ss
fsub
fwait
cli
stos
push
in
sbb
aam
arpl
mov
aas
jg
pushf
outs
ins
ror
lock
call
add
xchg
push
mov
cld
data16
test
addr16
cmp
nop
repnz
and
(bad)
stos
ficom
loop
pop
push
in
inc
mov
rcl
aam
idiv
pop
mov
xor
adc
int
dec
jmp
dec
cmp
out
daa
adc
repnz
push
test
sbb
cmps
in
xchg
push
and
repz
ret
in
and
test
aaa
xchg
sub
jp
sar
jge
aad
dec
xchg
pop
and
in
clc
fist
lea
add
mov
lea
pop
sub
mov
(bad)
ins
fwait
lods
or
fidiv
shl
data16
test
push
mov
add
sbb
xor
mov
xor
jp
push
or
pusha
gs
cmp
xor
cdq
leave
arpl
and
dec
mov
sub
pusha
mov
dec
lock
dec
out
aaa
jmp
xor
or
push
pop
(bad)
xor
call
sbb
pop
aaa
test
aam
xchg
inc
xor
lock
adc
pushf
fidivr
fistp
mov
in
add
mov
sub
pop
adc
shrd
cwde
rcr
not
(bad)
xchg
push
or
shl
shl
jmp
outs
movs
fdiv
mov
dec
push
leave
fld
ja
(bad)
dec
pop
mov
stos
stos
ja
loope
push
mov
sub
lahf
xchg
jmp
stos
mov
rcl
(bad)
lock
jle
std
jmp
mov
gs
cld
fwait
push
pop
movs
(bad)
out
adc
jo
add
imul
idiv
mov
fmul
jmp
retf
outs
mov
inc
inc
inc
pop
stc
sub
or
out
xlat
inc
sar
dec
stos
mov
nop
outs
mov
adc
movs
cdq
cdq
inc
mov
cmp
leave
vphaddubd
mov
push
pop
retf
icebp
mov
push
ja
lods
sbb
xlat
push
dec
jecxz
mov
imul
loop
movs
bound
iret
sbb
sbb
iret
jno
xor
mov
gs
jg
jo
retf
sub
xor
jne
push
rol
pusha
inc
add
arpl
ret
inc
mov
in
add
add
frstor
rol
xchg
jge
cmp
retf
or
retf
sbb
jb
or
pop
pop
popa
and
add
dec
jle
movs
mov
or
fsubr
mov
adc
dec
xchg
mov
xchg
jnp
or
dec
mov
add
cwde
outs
mov
mov
pushf
in
xchg
xchg
xor
xchg
mov
mov
inc
pop
adc
int3
das
rcl
mov
repnz
xchg
inc
pop
fsubr
sahf
mov
and
or
repnz
(bad)
fisubr
xor
test
push
jnp
repnz
sbb
mov
xchg
mov
cwde
cmps
jbe
div
sbb
out
push
adc
mov
xor
fisttp
rcr
sbb
pop
std
xor
xor
es
add
inc
mov
cmp
or
or
outs
lods
push
dec
fcom
retf
pop
mov
cmp
xor
push
lahf
push
aaa
fs
ret
mov
test
add
inc
idiv
shl
xchg
push
push
sbb
aas
sbb
fs
push
add
nop
sub
add
xchg
out
hlt
test
xchg
lar
jne
add
and
ja
(bad)
in
sbb
stc
add
shl
mov
dec
aam
adc
stos
pop
stc
retf
cs
add
adc
test
sbb
outs
movs
imul
cmp
hlt
leave
cdq
femms
enter
xchg
aaa
and
pinsrw
dec
cmps
sub
pop
dec
sbb
mov
lea
out
jle
movs
clc
(bad)
ja
add
cld
jo
push
add
lds
je
in
or
pushf
inc
mov
mov
push
dec
jle
pop
pop
(bad)
mov
xlat
xor
add
cwde
sub
ss
xchg
mov
sub
or
cdq
cmp
mov
jbe
sahf
(bad)
xor
mov
mov
fnstsw
add
inc
xor
add
pushf
nop
add
xchg
lods
iret
cdq
stos
push
cmp
out
cld
cmc
xor
in
fsubr
inc
and
mov
or
(bad)
outs
jne
popa
les
sub
out
arpl
adc
or
adc
or
(bad)
and
adc
jp
retf
loope
xchg
xchg
jp
outs
jle
xor
pop
mov
sbb
sub
scas
pop
push
add
pop
jnp
sub
aaa
add
aam
mov
call
pop
pop
dec
add
fcmovu
loope
xor
add
int3
or
ret
xchg
mov
and
xor
cmp
and
adc
in
fwait
dec
cmp
dec
scas
repz
ficomp
push
bound
push
out
dec
sub
mov
pop
xor
mov
outs
pop
popa
xor
or
push
cli
mov
sbb
mov
fisub
add
jle
into
adc
(bad)
or
pop
cmp
add
stc
sbb
sbb
dec
fisub
imul
sbb
(bad)
add
add
cmc
in
adc
mov
popa
fwait
stos
sahf
call
pop
mov
jp
push
test
and
pushf
jmp
fwait
aam
repz
mov
scas
cdq
and
stc
lods
add
rcr
ja
mov
ret
push
fmul
and
xchg
ret
arpl
lods
repz
enter
add
xchg
mov
movs
add
pop
and
retf
ret
fidivr
inc
pop
sub
mov
sbb
sub
mov
popa
push
cmp
addr16
shl
pop
fdiv
ins
mov
das
push
cwde
popf
push
xchg
cmc
pop
daa
adc
ss
(bad)
fisttp
int
xor
pusha
xchg
inc
dec
mov
lahf
iret
inc
fiadd
xor
fstp
mov
push
inc
es
bound
push
popf
movs
xor
cli
inc
mov
outs
push
push
jno
call
out
int3
jb
pop
mov
jo
js
shl
test
add
jecxz
outs
push
pop
jnp
mov
fst
pop
movs
inc
aas
cmp
push
mov
das
rol
imul
cdq
stc
cmp
jne
jne
dec
addr16
jno
js
out
retf
bound
(bad)
cdq
jecxz
jg
(bad)
dec
(bad)
jge
in
sub
aad
mov
mov
cld
pop
mov
nop
aas
adc
popa
or
mov
test
pop
mov
test
cmp
cld
jecxz
xchg
ins
and
in
mov
xchg
mov
inc
sub
sti
je
movs
outs
inc
sti
sbb
sub
test
mov
and
inc
adc
movs
movs
and
cdq
test
cmp
pushf
sahf
mov
pop
cmps
jge
in
jno
idiv
jo
div
push
sbb
out
add
js
dec
arpl
je
rol
xchg
out
retf
mov
enter
mov
pop
xchg
loop
imul
enter
mov
xchg
and
mov
adc
inc
sbb
xchg
outs
pop
add
popa
push
sub
fxch
jmp
repnz
sti
loop
xor
or
pop
sub
dec
enter
mov
mov
add
push
and
lds
ret
je
pop
fnstcw
loopne
arpl
iret
fild
push
stos
cdq
rol
inc
pop
and
mov
test
add
mov
xchg
mov
scas
scas
outs
hlt
imul
mov
cmc
xor
or
push
add
push
push
xchg
imul
movs
cmp
pushf
pop
cmps
mov
mov
pop
test
lds
sub
push
mov
cli
xchg
pushf
leave
arpl
out
xchg
cs
retf
inc
sbb
shl
(bad)
fisubr
cmp
add
mov
add
pop
aam
arpl
out
loopne
dec
stos
mov
repnz
scas
push
xchg
jp
lods
mov
test
inc
lods
mov
in
lds
int
in
sbb
in
call
sub
pop
outs
gs
xor
inc
xor
cmp
fist
jo
sbb
mov
sbb
hlt
or
push
and
push
pop
je
outs
mov
add
sbb
int
pusha
sahf
adc
adc
sub
les
sbb
cwde
add
cmps
in
jnp
and
jge
jb
leave
ins
xchg
in
popf
xor
push
sbb
lods
repz
sub
lds
int3
movntps
jmp
loopne
adc
into
inc
gs
adc
sub
inc
or
or
dec
popa
cmp
mov
cmp
aaa
mov
js
xchg
lea
loopne
aad
call
mov
push
test
pop
jmp
mov
mov
popf
pop
inc
pop
popf
push
aad
sbb
pop
test
pop
push
mov
fist
test
mov
mov
sbb
inc
inc
ins
les
out
mov
popa
mov
cmp
pop
xchg
cmp
pop
jmp
loope
(bad)
call
popa
leave
es
cmp
stc
pop
push
lds
xor
data16
pop
rcr
mov
out
pop
daa
pop
retf
mov
popa
iret
test
cld
inc
jb
into
sbb
xchg
movs
ret
movs
pop
inc
sub
jl
dec
fdiv
or
xchg
push
(bad)
cmp
cdq
lahf
loop
pop
xchg
xlat
fiadd
pop
adc
dec
shr
mov
sbb
mov
rol
movs
jne
inc
bnd
in
imul
or
push
ins
jae
mov
fwait
adc
in
adc
or
std
divps
add
shr
cli
pop
cs
or
jnp
xchg
mov
pop
cdq
repz
mov
pop
adc
daa
js
scas
into
push
mov
pop
je
or
sub
or
cmp
xor
call
and
enter
push
lahf
mov
ss
sub
ficom
aad
pusha
jo
leave
rcl
jl
sub
pop
add
ret
sbb
leave
add
mov
mov
mov
out
clc
(bad)
jl
xchg
arpl
add
add
(bad)
jle
out
add
cld
jbe
sbb
sub
mov
adc
jl
das
clc
fdivr
mov
jmp
int
xchg
ins
inc
dec
and
or
imul
pop
add
fild
movs
cmps
popa
ret
stos
push
out
popf
divps
pop
mov
sub
in
sti
fwait
sub
idiv
sub
cmp
or
test
cmps
jne
mov
je
sbb
je
add
test
xor
jnp
lods
mov
ja
inc
mov
out
loop
dec
push
add
hlt
adc
mov
pop
xchg
add
lea
(bad)
push
jb
mov
adc
mov
dec
push
cmps
test
inc
cmp
or
add
mov
or
mov
std
sub
push
hlt
hlt
mov
sbb
cmp
loope
push
out
fcomp
jmp
or
jbe
jo
push
dec
mov
jmp
ja
daa
mov
lods
add
scas
(bad)
lock
mov
(bad)
leave
push
nop
test
lods
cmp
and
aam
inc
mov
mov
mov
pop
xchg
adc
daa
ss
aad
xchg
mov
(bad)
test
and
cmps
mov
or
mov
outs
sbb
mov
sub
dec
rcl
arpl
test
ja
mov
dec
daa
jnp
mov
add
or
jmp
mov
in
jmp
ja
retf
inc
data16
ror
and
fwait
lahf
xchg
and
sbb
loope
lds
sar
inc
jmp
jnp
cmps
movs
out
jle
stos
hlt
sar
mov
or
mov
popf
cmp
cmps
call
popf
and
pop
xchg
push
inc
ja
stos
add
fimul
add
jg
(bad)
clc
xchg
mov
dec
les
fwait
popa
mov
arpl
dec
scas
call
mov
shl
mov
in
add
out
cli
stc
aad
xor
jl
fld
(bad)
clc
lea
mov
xor
push
mov
ret
into
jmp
fwait
pop
pop
popf
sub
pop
mov
hlt
je
mov
imul
pop
in
jae
(bad)
sbb
mov
mov
and
and
cmps
cmp
ret
cmps
inc
cmp
mov
(bad)
jge
(bad)
dec
(bad)
lods
mov
jle
js
xor
add
hlt
ficomp
sub
add
daa
sub
dec
movs
es
push
repnz
pop
push
retf
test
mov
mov
ret
xor
into
ss
jmp
call
out
push
outs
punpckhbw
movs
ins
lahf
add
push
outs
fist
adc
inc
push
jno
add
dec
dec
mov
push
inc
test
movs
jnp
pop
bound
push
xor
aam
and
push
bound
dec
jmp
push
push
movs
jae
mov
scas
dec
add
inc
push
fwait
push
in
pop
fwait
test
mov
dec
mov
or
mov
daa
call
je
mov
(bad)
jmp
adc
inc
pop
mov
out
xor
ja
xchg
(bad)
int
bound
jmp
pop
ss
shl
pop
into
xor
aam
inc
shr
mov
shl
cmp
fld
repz
repnz
push
aas
test
cmps
out
in
add
xor
data16
xor
push
test
xchg
fidivr
add
mov
fdiv
push
les
ret
in
fiadd
pop
ins
test
sbb
popf
test
in
and
adc
repnz
(bad)
rcr
cmp
fisub
sbb
out
das
ss
and
adc
mov
les
(bad)
mov
loop
cld
jb
and
arpl
pushf
shl
(bad)
out
dec
xor
in
ins
arpl
mov
lea
jbe
aas
mov
inc
outs
mov
iret
out
sti
ja
fcom
mov
sbb
ss
int
outs
push
and
mov
sbb
push
ja
(bad)
test
in
(bad)
sbb
xchg
jecxz
jb
mov
pop
mov
movs
nop
repnz
dec
pop
xchg
jo
arpl
or
sub
(bad)
(bad)
xor
aad
push
add
fist
add
dec
lods
xlat
mov
retf
rcpps
xchg
stos
jp
mov
popf
stc
and
lock
sbb
pop
into
les
mov
pop
xchg
shl
hlt
ficom
jecxz
movs
cmp
lea
pop
xchg
dec
pop
(bad)
jnp
call
rcr
lahf
add
call
jae
movs
add
push
aam
call
mov
sub
xchg
test
or
fs
fisttp
in
sub
loopne
ins
inc
mov
scas
ror
sbb
mov
mov
mov
push
inc
scas
jbe
enter
imul
mov
add
int
jmp
into
or
ds
aaa
and
test
xchg
cwde
iret
cs
mov
add
push
push
push
xor
mov
mov
push
pop
and
test
aad
jno
jno
fild
lods
je
xchg
xchg
and
pop
mov
adc
(bad)
push
push
sbb
rcr
add
sbb
adc
pushf
jbe
inc
mov
inc
popa
call
pop
adc
push
scas
mov
or
xchg
xor
mov
inc
sub
mov
add
xchg
hlt
(bad)
aad
inc
sub
pop
inc
xchg
jmp
add
js
pop
xor
aad
lahf
sub
sbb
outs
mov
scas
mov
mov
ret
or
pop
mov
fld
ins
mov
into
cwde
adc
mov
push
aad
pop
movs
mov
mov
mov
xor
aad
getsec
jo
cwde
cmp
jl
aam
into
push
cmp
out
jle
cwde
jmp
sub
xlat
push
cmp
xor
jecxz
daa
sub
or
stos
(bad)
repnz
xchg
add
loop
js
pop
ins
xor
pop
inc
aad
mov
sub
xchg
add
loopne
mov
scas
test
popa
fdivr
repz
jne
lds
mov
les
iret
cld
addr16
cmps
fiadd
push
es
jecxz
nop
or
iret
outs
(bad)
in
addr16
adc
adc
pop
mov
mov
and
(bad)
in
imul
cmps
aad
sbb
cwde
loope
pop
sar
(bad)
scas
aas
loop
add
sub
and
mov
jbe
ja
ja
sub
lock
jns
push
mov
outs
push
scas
add
add
std
xchg
pop
shl
sbb
sbb
fs
inc
popa
xor
cwde
lds
mov
mov
and
xchg
stos
outs
pop
sbb
adc
mov
shl
(bad)
stos
add
pop
stc
pop
dec
div
lea
(bad)
lea
div
test
and
loopne
sub
push
add
in
repz
cmc
pop
mov
sbb
clc
and
hlt
pop
sub
jne
jno
call
mov
leave
stos
cmp
out
test
pop
repnz
call
es
push
retf
push
call
jnp
imul
push
imul
jge
add
fisubr
std
daa
loopne
mov
cli
fwait
mov
mov
scas
xchg
push
out
in
push
sbb
sbb
and
mov
lods
repz
push
dec
aaa
mov
out
fwait
pop
jmp
mov
hlt
in
mov
movs
ja
(bad)
mov
pop
pop
cmps
ror
add
mov
mov
fnstsw
sbb
jb
in
pusha
cdq
rol
adc
xor
mov
retf
push
out
outs
out
cs
adc
mov
jl
cmps
sub
sbb
cmps
push
pushf
arpl
jecxz
xchg
aam
mov
hlt
test
pop
inc
movs
pop
in
shl
add
movs
ins
sbb
jecxz
fcomp
fwait
xlat
sti
nop
mov
xor
adc
mov
xchg
adc
popa
test
fnstenv
pop
icebp
repz
fisub
pushf
lods
jg
add
sub
int3
mov
cmp
mov
cs
sbb
sbb
xor
int
jnp
cmp
in
daa
or
stos
pop
pop
xchg
ins
fistp
call
jl
or
inc
addr16
in
push
ficom
push
aad
es
xor
pop
mov
addr16
lods
mov
dec
and
stos
daa
push
mov
std
jmp
pushf
int3
jno
push
retf
inc
jg
xchg
xor
stos
mov
add
mov
mov
lahf
xchg
inc
jns
(bad)
out
mov
push
fadd
cmps
call
mov
adc
pop
xchg
and
movs
pop
cmp
jle
lock
mov
fstp
aam
jae
mov
cld
bnd
mov
test
hlt
aas
sub
add
loop
jl
mov
cmp
xchg
add
xor
jno
add
cwde
or
pop
aas
cmp
shl
movs
les
sbb
(bad)
sbb
cmp
cmp
pop
das
mov
adc
cli
sub
xor
and
add
sub
data16
fs
add
ficom
imul
enter
in
inc
lock
mov
mov
shr
dec
xchg
sbb
dec
ror
cld
loopne
test
mov
xchg
cmp
push
and
mov
setb
sub
sub
pop
mov
aas
pop
outs
fidiv
push
push
popf
fmul
push
es
mov
mov
cmp
in
pusha
lods
xchg
ret
jo
and
int3
or
pop
test
sub
push
aas
pop
cdq
out
(bad)
cmp
cmc
push
movs
xchg
not
adc
fs
cmp
jp
adc
sti
xchg
pop
or
push
pop
popa
das
xchg
stc
aas
mov
and
or
scas
rol
call
sub
mov
(bad)
jno
push
aaa
jmp
hlt
add
daa
pusha
mov
cmps
nop
iret
add
test
inc
icebp
scas
fadd
(bad)
pop
inc
imul
jp
sbb
cmps
mov
(bad)
test
in
sbb
xor
ins
aad
mov
es
mov
cmp
inc
adc
xchg
bndstx
add
int3
dec
jo
dec
jno
ret
loopne
(bad)
ret
mov
adc
popa
adc
sti
cld
or
mov
pusha
push
ja
(bad)
sub
jl
outs
push
or
and
xchg
mov
mov
ins
jecxz
sub
mov
and
cs
out
aas
shl
stos
call
popa
push
xchg
test
(bad)
and
or
addr16
inc
iret
adc
or
(bad)
jb
jl
jle
jmp
scas
jnp
clc
inc
sub
mov
popa
inc
push
xchg
sbb
pop
cld
sbb
xchg
and
movs
mov
adc
ss
mov
dec
ret
(bad)
movs
(bad)
jo
sbb
xchg
inc
push
pop
jmp
mov
ins
adc
lahf
adc
jb
mov
popa
or
sbb
sub
inc
push
idiv
rcr
jne
xor
enter
int
inc
js
adc
fdiv
mov
lea
lds
mov
leave
ins
scas
dec
sub
scas
mov
sbb
(bad)
in
js
btr
pop
(bad)
pushf
lea
mov
and
sub
gs
pusha
test
(bad)
mov
pop
xchg
push
mov
gs
add
lds
movs
xchg
and
sbb
pop
and
adc
adc
jmp
push
push
xchg
or
movs
lods
cmps
add
ss
rcl
ret
sbb
sbb
rcr
aad
cs
retf
pusha
mov
ret
mov
cmps
into
movs
and
pop
pop
ret
movs
jecxz
scas
lods
ja
cmp
pop
or
push
lods
out
mov
retf
push
ret
xlat
clc
ret
cmps
xor
daa
lock
mov
test
jb
daa
imul
sahf
shl
in
add
shr
add
dec
jl
dec
fdivp
push
xchg
std
mov
jb
(bad)
xor
add
jns
iret
in
cmp
ds
adc
mov
dec
pop
and
push
add
jb
inc
or
adc
push
mov
pop
jg
cmc
fsubp
int
out
loop
pop
or
cmp
int3
stos
das
ins
pusha
cmp
retf
test
mov
hlt
ds
adc
cld
leave
mov
xchg
push
and
mov
xor
imul
ret
or
pop
leave
inc
ja
or
sbb
daa
pusha
fsub
rcl
and
ret
call
sbb
dec
dec
push
les
sbb
daa
cli
dec
mov
daa
jl
gs
dec
cmps
out
lock
push
or
idiv
dec
jp
aaa
std
test
fld
in
fnsave
cdq
retf
adc
mov
jmp
aam
imul
loope
out
scas
in
lods
dec
or
mov
jae
ret
mov
sub
test
push
jno
into
fldcw
dec
aam
js
mov
inc
adc
out
sbb
push
sbb
js
popa
por
and
or
fisttp
popf
stc
xchg
xchg
bound
fldenv
out
fwait
aas
push
dec
jmp
data16
mov
mov
(bad)
psubusb
push
cmp
lods
jmp
cs
cmp
inc
push
shr
xchg
pop
pop
imul
or
sub
ins
out
leave
out
(bad)
shl
mov
sti
xchg
xchg
sti
jecxz
test
rol
retf
and
daa
test
mov
(bad)
ins
into
jns
les
dec
std
in
sti
aas
xchg
mov
mov
fnsave
ret
(bad)
jg
pop
gs
xchg
dec
jle
jmp
inc
xchg
leave
scas
stc
pop
xchg
adc
cdq
push
lods
sbb
jne
popf
int3
std
loopne
loopne
cmp
scas
test
mov
ds
in
inc
sar
push
outs
hlt
outs
jmp
xor
xchg
push
lds
jp
pop
inc
ins
sar
call
inc
movs
nop
test
cs
dec
push
inc
ins
sub
(bad)
mov
(bad)
or
mov
dec
inc
dec
stc
popa
mov
sub
inc
dec
loopne
sbb
stc
ins
repz
in
sub
frstor
cwde
xchg
call
adc
icebp
bswap
inc
push
retf
xchg
in
sub
sub
movs
sub
mov
mov
cmps
cmp
mov
push
hlt
cdq
pop
push
ret
outs
fbstp
loop
add
cmc
js
dec
adc
jle
sbb
addr16
outs
loope
(bad)
push
cmp
pushf
mov
push
dec
mov
push
mov
mov
out
mov
std
call
dec
dec
pop
rcr
out
stc
mov
push
add
addr16
jl
pop
adc
dec
lods
test
add
ror
test
(bad)
mov
lods
addr16
adc
dec
mov
sbb
pavgb
fidivr
sub
out
pop
stos
xchg
idiv
es
mov
rol
jl
jo
push
gs
jbe
js
sbb
loopne
ffree
pop
ins
in
mov
sahf
scas
xlat
push
mov
mov
mov
mov
in
(bad)
addr16
jb
out
sbb
pop
pop
repnz
pop
jbe
int3
mov
jle
pop
fidivr
fincstp
inc
dec
(bad)
test
jmp
lds
bound
xchg
pop
mov
pop
adc
fdiv
mov
push
xor
cmps
jl
ja
sti
dec
mov
daa
repz
in
adc
cli
pop
(bad)
mov
mov
add
out
or
dec
cld
xchg
sti
les
loope
int3
inc
push
push
pusha
add
mov
inc
jecxz
xchg
cli
ror
movs
stos
sub
out
xchg
cmp
sub
aas
dec
and
stc
(bad)
loopne
int3
(bad)
push
jl
int
adc
scas
das
push
jnp
mov
xchg
mov
mov
test
ret
push
xchg
ret
sti
movd
dec
push
mov
dec
inc
inc
cdq
ins
or
sub
cmp
pop
or
xchg
xchg
out
or
movs
and
iret
cmp
out
test
mov
mov
push
adc
popf
popf
or
ins
dec
push
pop
and
jae
ss
(bad)
xor
pushf
add
xchg
push
mov
push
nop
push
inc
jo
and
pop
sar
dec
sahf
jge
ja
ficom
sub
jge
dec
test
or
add
hlt
push
dec
and
sar
sub
pop
lahf
cs
dec
das
jae
(bad)
adc
shr
adc
ja
iret
rcl
fcom
rol
ret
in
cmp
sub
push
add
js
lods
test
imul
sub
ins
or
sub
push
xchg
and
jecxz
vmovss
(bad)
or
in
enter
fnstsw
dec
xchg
pop
jne
xchg
cli
xor
aas
cwde
ror
pop
xchg
mov
inc
ja
outs
aad
ja
mov
(bad)
xor
and
iret
jnp
out
sub
jmp
xor
sar
push
mov
or
arpl
pop
fs
cs
ins
out
clc
int
mov
sbb
and
pop
push
sbb
dec
inc
mov
push
jp
cmp
or
nop
fdivr
shrd
(bad)
enter
mov
dec
movs
js
sti
pop
in
sub
das
ret
arpl
sbb
gs
shl
add
jno
pop
in
nop
sbb
call
xor
mov
push
fild
dec
enter
add
adc
mov
xor
cmp
jae
cmp
lahf
pop
daa
jg
out
jecxz
dec
jo
and
mov
(bad)
fs
sbb
movs
lock
xor
adc
xchg
inc
(bad)
sti
push
retf
cmps
fdecstp
fnsave
xchg
xor
cmp
imul
sbb
ins
(bad)
cmp
push
mov
xchg
mov
sbb
sub
jno
dec
(bad)
push
(bad)
cdq
shr
popa
cmp
jecxz
jmp
cmp
cmp
arpl
jecxz
test
or
mov
lahf
call
clc
jno
pop
ret
sbb
pop
jb
lods
icebp
inc
fld
out
test
xor
push
and
xchg
push
sbb
out
jnp
pushf
fstp
jmp
mov
xor
pop
fs
arpl
test
xor
sub
xchg
jge
xchg
fnstcw
sahf
sbb
jecxz
enter
in
cld
data16
int
ds
xor
stos
dec
pslld
repnz
pop
jb
dec
lods
xchg
cmp
push
test
or
cmp
inc
dec
(bad)
and
scas
pop
rcl
out
pop
pop
icebp
ins
dec
clc
jo
sbb
mov
inc
dec
inc
test
push
pushf
pop
jg
lds
sbb
test
mov
jecxz
cmp
xor
jbe
shl
lods
pop
jl
and
cdq
xchg
fwait
cli
jnp
scas
retf
mov
xchg
call
xor
pop
fdivr
and
cmp
sub
or
sub
cmp
out
xlat
mov
push
mov
and
(bad)
mov
retf
mov
nop
jmp
mov
cmp
mov
or
sub
pushf
lahf
add
cs
imul
shl
push
push
mov
(bad)
xchg
popf
retf
add
loopne
xchg
mov
add
into
jb
adc
and
mov
nop
cdq
loopne
scas
cmc
add
push
mov
push
ret
pop
add
adc
cdq
sbb
sahf
fs
scas
cvttps2pi
shr
add
jno
mov
imul
(bad)
dec
test
fmul
into
fwait
ins
movs
cmps
aam
retf
hlt
pop
or
sbb
aad
in
push
jno
mov
sbb
xchg
xor
or
mov
aaa
loope
push
dec
sub
xchg
dec
jge
lds
mov
jb
xchg
stos
sbb
cs
xchg
lahf
xchg
ret
add
arpl
pop
xor
push
cmp
adc
mov
enter
jmp
sbb
cmps
(bad)
push
and
sahf
cmps
dec
jp
hlt
jno
or
out
sub
mov
mov
aas
fs
ret
int
mov
pop
call
bswap
(bad)
add
lahf
outs
int3
div
retf
cmp
pop
pop
add
mov
adc
dec
cmps
xchg
pop
(bad)
das
(bad)
pushf
cmp
dec
or
dec
or
pop
jne
stc
pop
jge
add
cmp
push
out
fistp
inc
or
mov
movs
cmps
push
test
(bad)
test
into
in
mov
xchg
(bad)
out
fild
sbb
jg
cmp
cmps
cmc
loopne
aas
popf
test
mov
fiadd
imul
icebp
lods
jmp
pop
movs
dec
pop
add
cdq
retf
stos
add
push
cs
daa
pop
clc
xor
lods
dec
dec
cli
or
jecxz
imul
repnz
sub
pop
sahf
imul
inc
or
hlt
jnp
xor
xchg
xchg
fs
es
ret
in
das
cmp
in
push
sbb
repz
out
or
out
mov
int3
(bad)
mov
rcl
sub
rol
jl
in
pop
add
stos
jns
or
mov
jno
mov
xchg
add
xchg
push
and
push
movs
js
push
jb
pop
test
cmp
out
pushf
mov
xchg
adc
popf
mov
dec
leave
jno
aad
fucomip
pop
fs
int
pop
cmc
sar
mov
mov
dec
sti
inc
lea
jecxz
popa
jecxz
dec
(bad)
adc
fsub
pop
icebp
(bad)
sti
mov
jns
ds
(bad)
movs
adc
dec
sar
pop
adc
mov
test
(bad)
daa
ss
call
lds
or
nop
mov
add
mov
jmp
in
cdq
(bad)
rol
and
cmp
jns
or
push
pop
repnz
xor
cmps
call
idiv
test
out
test
xlat
sahf
dec
test
and
sbb
out
xchg
je
pop
test
cmp
add
repz
lahf
pop
push
push
fadd
mov
js
and
add
not
cmp
xlat
call
(bad)
cmp
sub
sbb
cmp
test
mov
aad
mov
imul
pushf
mov
loope
imul
and
ror
stos
xor
push
mov
or
lds
xor
sub
ins
mov
in
xchg
mov
dec
xchg
adc
jle
stos
das
cdq
adc
cmc
add
xchg
jno
or
sbb
sub
mov
je
inc
add
push
and
loopne
jno
add
adc
ror
mov
and
mov
js
movs
int3
(bad)
and
movs
ja
sbb
(bad)
in
test
mov
scas
xchg
pop
dec
scas
push
and
fsubr
clc
pop
test
in
push
mov
jno
push
or
and
add
mov
repz
out
into
inc
gs
xor
xchg
in
xor
loop
mov
push
and
ins
xchg
pop
adc
pop
cmp
add
dec
(bad)
ds
sub
inc
jge
out
lea
shl
std
pop
jg
xchg
mov
bswap
or
in
add
les
retf
int
mov
test
sbb
aas
mov
mov
mov
adc
leave
retf
inc
bsr
rcl
aaa
sti
lods
lock
out
movs
cdq
inc
clc
or
out
je
mov
push
push
sub
test
jmp
loopne
or
sbb
sbb
aaa
sar
xchg
fild
inc
movzx
lods
fwait
xor
inc
js
push
outs
stos
fwait
out
sub
iret
add
or
mov
fcom
(bad)
jmp
and
repnz
inc
mov
xchg
jmp
push
add
dec
cmp
adc
inc
sahf
(bad)
std
push
outs
aam
cmp
pop
mov
enter
adc
push
rcr
aaa
out
imul
outs
push
test
xor
inc
jmp
ret
ja
push
dec
aam
(bad)
push
pushf
stos
or
jle
sub
out
and
mov
xchg
fdivr
xchg
lods
pop
(bad)
in
aam
dec
lds
jl
mov
or
sub
js
inc
xchg
sbb
call
inc
ret
nop
nop
mov
or
adc
fistp
pop
lods
sbb
shl
lods
loopne
dec
mov
test
sub
push
fdivr
nop
mov
cmp
(bad)
and
sbb
cmp
fcom
jnp
ror
and
cmp
add
xchg
mov
add
mov
jb
data16
or
jle
mov
mov
bound
pushf
sub
push
jbe
adc
les
shl
sub
xor
cdq
out
imul
out
push
xchg
(bad)
mov
adc
ds
inc
ror
adc
les
adc
and
push
stc
mov
dec
push
jmp
pushf
fimul
xchg
iret
aas
mov
sub
pop
pop
adc
add
xchg
outs
inc
aaa
xor
dec
cwde
in
and
xchg
xchg
stos
dec
jnp
xor
jno
ret
add
mov
loopne
ins
xchg
data16
jnp
pop
int3
push
fwait
bound
or
push
jb
jne
cld
lahf
sti
xchg
sub
jl
or
mov
cli
sbb
sar
jp
and
int3
jle
or
sub
mov
(bad)
cmp
cli
das
mov
sbb
jmp
loope
dec
mov
dec
mov
adc
mov
inc
dec
movs
xor
in
mul
mov
pop
shr
pushf
mov
rol
fsub
inc
cmp
dec
push
retf
pop
push
repnz
cmps
popa
pushf
rol
inc
daa
sbb
lahf
push
and
test
sbb
ret
loopne
pop
inc
push
jno
in
dec
lock
stos
jbe
sub
outs
sub
out
pop
out
loopne
bound
pusha
sbb
lar
cld
ret
test
aaa
fs
mov
jno
push
das
sbb
mov
in
adc
lods
xor
out
icebp
jge
pop
movs
es
fadd
rol
(bad)
jp
cli
push
ret
ror
es
shl
clc
or
add
jmp
sbb
push
aad
mov
aad
sub
sub
fst
or
push
xchg
sub
dec
sahf
dec
lock
sub
test
mov
(bad)
cli
pop
adc
adc
inc
repnz
call
mov
add
pop
stc
mov
push
xor
mov
pop
lods
mov
or
sub
pop
push
sub
mov
ds
push
dec
adc
scas
gs
mov
aam
scas
dec
cmp
cmp
cmp
retf
pop
or
inc
adc
pusha
enter
dec
fcmovnb
xor
adc
call
add
imul
mov
arpl
push
xor
push
ror
sahf
add
int
(bad)
call
sbb
fwait
inc
xchg
mov
add
push
jmp
and
loope
shl
xor
inc
or
fisttp
fdiv
bound
inc
(bad)
dec
or
inc
pushf
sbb
mov
shl
arpl
cld
adc
test
stos
clc
cmps
jo
int
ins
push
push
gs
mov
jecxz
push
dec
mov
loope
mov
dec
je
retf
fcmovbe
adc
mov
sub
std
in
jp
ret
pushf
outs
retf
add
dec
and
out
mov
cld
jg
dec
xchg
daa
pop
jmp
(bad)
daa
shl
mov
outs
xor
push
imul
or
sbb
mov
sbb
or
dec
ss
popf
mov
rol
dec
xchg
arpl
imul
lahf
pop
std
sbb
inc
out
and
sub
push
les
xor
cmp
fadd
pop
push
lea
cwde
test
lds
mov
std
jecxz
call
xchg
in
jmp
add
xchg
jge
add
mov
add
mov
test
sub
fsub
and
mov
icebp
jo
dec
jmp
adc
mov
fdiv
stos
rol
dec
imul
arpl
addr16
jg
mov
popf
push
jmp
into
ficom
dec
(bad)
jmp
jle
test
jecxz
fisttp
sub
adc
sbb
je
cmp
fmul
dec
push
push
push
sbb
inc
mov
arpl
int
jge
daa
sub
call
push
(bad)
adc
stos
xchg
mov
push
xor
test
mov
and
retf
hlt
inc
xlat
jl
xchg
cmp
loopne
lahf
inc
xchg
jmp
adc
mov
push
lock
pusha
(bad)
or
mov
add
and
cmp
sub
movs
mov
test
dec
adc
mov
xchg
fldz
pop
jb
add
mov
dec
mov
xor
ins
sbb
mov
test
push
jne
pop
ja
idiv
popf
and
int3
jbe
push
cmps
daa
mov
sahf
xlat
(bad)
sahf
jg
leave
in
shr
mov
jl
aam
cmps
jl
push
sbb
ins
inc
xlat
aam
mov
adc
enter
mov
(bad)
cli
and
ret
(bad)
call
rcl
call
push
into
push
adc
mov
jno
cmp
push
xchg
inc
repz
jns
sub
mov
fxch
sbb
int
in
mov
jo
fld
test
pop
mov
cdq
ret
sbb
push
shl
mov
mov
pop
pushf
cmps
ret
popf
sub
out
sbb
out
ret
cmp
ins
lods
cmps
daa
dec
mov
xor
sbb
(bad)
mov
ret
inc
inc
jae
int
add
shl
pop
adc
jmp
stc
(bad)
fadd
and
sti
pushf
dec
(bad)
out
shr
xchg
push
mov
scas
into
cmp
push
arpl
jp
aad
cmp
enter
cwde
out
cdq
rol
and
add
aad
sub
xor
add
xchg
retf
inc
sbb
mov
fwait
sub
test
dec
jp
pop
jne
fs
inc
call
scas
or
(bad)
in
lea
int3
add
pop
adc
iret
les
(bad)
sahf
pop
push
outs
xchg
xbegin
cmp
ret
dec
push
(bad)
xlat
cmc
inc
jne
fldcw
sbb
std
sti
pop
in
dec
mov
xor
or
sbb
add
dec
sub
and
daa
and
sbb
cmps
inc
adc
scas
sbb
ins
and
data16
in
in
pop
fsub
dec
frstor
out
mov
dec
shl
aaa
pop
dec
pop
pop
add
loopne
fcomip
call
rcl
jp
jo
loopne
and
loop
sahf
dec
add
adc
mov
or
and
xor
es
inc
or
adc
mov
push
fistp
sahf
inc
xor
in
sbb
in
sbb
cmps
mov
int
into
pop
rcl
test
xchg
adc
nop
xchg
push
cmps
ja
(bad)
mov
cs
push
push
push
or
inc
mov
push
sbb
call
(bad)
push
lds
dec
mov
add
es
dec
inc
jbe
sub
stos
aad
cmp
movs
pusha
adc
mov
push
mov
add
or
push
in
mov
mov
cmp
mov
ficom
(bad)
imul
ret
push
or
rol
mov
sub
sub
bound
lods
jbe
scas
(bad)
rol
mov
pop
test
cwde
out
pop
stos
fidivr
mov
mov
mov
adc
mov
sbb
mov
mov
into
jl
cmp
sub
inc
cmp
pop
lods
aaa
test
push
(bad)
xor
add
lea
cmp
mov
push
js
xchg
fstp
sub
pop
jno
mov
add
data16
xor
in
xor
xchg
addr16
hlt
dec
sub
cs
int3
sti
rcl
mov
pop
mov
jl
adc
mov
mov
xchg
mov
pop
sbb
sbb
pop
test
mov
mov
adc
jbe
mov
add
je
pop
add
jle
dec
add
push
mov
jne
jbe
push
shr
jae
mov
cmp
ss
fwait
retf
cmc
dec
jge
fldenv
nop
jo
cmc
jo
repnz
(bad)
xor
test
hlt
adc
mov
(bad)
jmp
xchg
jnp
or
pop
out
stos
stos
mov
mov
ins
lock
jmp
cmp
popa
repnz
pop
enter
das
sbb
and
sbb
sti
(bad)
movs
pop
neg
sbb
mov
popf
or
push
add
mov
sbb
dec
addr16
pop
cli
push
pop
loope
mov
mov
jmp
jnp
inc
dec
push
mov
stc
jbe
fistp
push
xor
jg
xchg
dec
sbb
jo
xor
iret
sbb
xor
sbb
push
hlt
jp
ret
div
jb
cwde
sbb
imul
out
xor
out
xor
mov
cmp
add
mov
imul
cmp
dec
mov
(bad)
cmc
mov
and
das
pop
aaa
cmps
xor
add
push
fwait
or
mov
inc
lahf
mov
dec
mov
jmp
and
inc
dec
adc
jne
div
xor
or
daa
call
cmp
test
adc
(bad)
xchg
sbb
stc
push
into
lds
push
push
outs
sub
xor
xlat
sub
mov
inc
idiv
dec
inc
rcl
push
fisub
shl
sar
xchg
loope
mov
and
jb
aad
push
xchg
cmp
in
imul
popa
mov
daa
and
mov
sub
fldcw
or
adc
rcl
sbb
(bad)
push
xchg
pop
push
sbb
xor
imul
jmp
outs
mov
xor
imul
in
jle
pop
call
daa
test
in
movs
pop
iret
rol
adc
sahf
add
mov
jg
mov
push
pop
cmp
data16
retf
lock
mov
mov
movs
aad
lock
pushf
pop
xor
pop
movs
sub
and
jne
(bad)
rcl
(bad)
js
inc
cmp
rcl
imul
jb
adc
jp
add
jp
test
ret
push
outs
call
xchg
test
sbb
iret
xor
mov
call
sbb
or
std
dec
xchg
cli
inc
pop
dec
xchg
push
ficomp
push
(bad)
and
into
popf
or
cmp
clc
lea
in
daa
push
dec
cmp
pop
sub
jb
popf
ins
loopne
add
push
out
ins
shl
arpl
mov
(bad)
jp
mov
test
mov
mov
cli
cmp
jb
xor
pop
sub
fisubr
jne
(bad)
cmps
outs
mov
sti
and
sti
cmp
xchg
aas
mov
push
xor
(bad)
xchg
mov
gs
pop
or
movs
xor
add
lods
jae
pop
test
mov
stos
fisub
les
mov
or
(bad)
mov
dec
das
iret
and
dec
dec
pusha
fild
test
iret
cmp
fdiv
jae
iret
aad
pop
mov
mov
rsqrtps
ret
xor
sbb
pop
and
lods
jb
test
mov
or
or
xchg
push
test
lods
add
xchg
fnsave
sub
imul
xor
shl
mov
dec
out
das
push
fnstcw
jp
mov
and
xchg
stos
xchg
pop
inc
mov
imul
inc
out
push
mov
addr16
or
mov
sbb
imul
rol
in
add
test
inc
jno
ins
xchg
sti
popf
(bad)
cdq
dec
icebp
outs
(bad)
inc
sbb
cmp
fs
jge
ror
add
dec
movs
(bad)
mov
lds
dec
pop
pop
iret
fisttp
sub
sbb
fnop
aas
xor
loopne
pop
xchg
push
in
rol
cmps
lea
cli
pop
jle
or
and
mov
xchg
lods
int3
mov
scas
add
ror
leave
fisttp
dec
jmp
test
add
fs
aad
or
inc
outs
fs
add
lahf
movs
jmp
dec
in
mov
xchg
lahf
fiadd
inc
xchg
and
and
in
rcr
cs
not
mov
std
jne
mov
imul
mov
(bad)
pop
pop
aaa
loope
mov
and
fsubr
loop
(bad)
sub
dec
add
ss
rcl
ds
jbe
xchg
adc
push
pop
inc
jmp
jns
push
retf
mov
je
inc
sbb
lock
adc
pop
aas
sub
xor
les
mov
dec
and
lods
std
xchg
enter
sbb
pop
test
push
sbb
xchg
ret
sbb
and
push
adc
cpuid
pop
shl
je
outs
sub
and
jae
cmps
pop
imul
inc
mov
js
or
xor
imul
or
jmp
dec
retf
sbb
fpatan
cmp
pop
mov
lods
push
fnstcw
mov
lods
(bad)
clc
pop
mov
mov
and
dec
ficomp
aaa
jecxz
stos
mov
sub
jecxz
mov
iret
push
icebp
inc
xchg
xchg
inc
jbe
cmps
xchg
inc
adc
mov
jbe
mov
in
push
push
aad
call
retf
mov
xlat
je
test
stos
push
pop
fisub
es
test
ret
out
cmp
pop
push
xlat
jle
mov
pop
or
mov
retf
mov
int
stos
xlat
outs
mov
xchg
or
mov
cli
xor
mov
leave
(bad)
dec
dec
and
test
dec
add
sbb
pop
push
(bad)
(bad)
push
add
pop
lock
jno
jo
data16
push
xor
pusha
inc
(bad)
daa
mov
and
fadd
loope
stc
cmc
mov
jp
pusha
add
je
adc
rcl
stos
mov
xor
fstp
cdq
adc
or
sbb
add
std
shl
push
sbb
(bad)
into
jl
pop
sbb
call
data16
push
or
ja
es
shl
sub
inc
add
dec
push
and
cmp
aad
jb
jns
inc
nop
mov
aad
xor
mov
scas
fld
or
mov
xlat
pop
mov
rol
add
js
out
scas
int3
push
pop
adc
cmp
cmp
out
dec
pop
jl
inc
jo
xlat
and
mov
xchg
movs
or
or
cld
je
sub
sar
daa
mov
jl
and
loop
push
jb
or
jg
outs
sub
popf
adc
sti
mov
xchg
call
cmps
popa
sub
and
(bad)
int
les
cmp
cwde
sub
jmp
pop
lods
mov
gs
push
arpl
adc
stc
sub
daa
xlat
xchg
mov
dec
mov
mov
arpl
pop
jae
in
popf
int
mov
mov
and
fcom
fmul
add
dec
int
or
bound
int
and
sbb
add
pop
aam
xor
aam
pushf
mov
dec
pop
xor
ins
add
mov
outs
(bad)
fadd
les
shr
dec
popf
sbb
(bad)
xlat
aam
out
fnstcw
cmc
jo
stos
shr
aad
mov
imul
dec
aaa
in
adc
sub
sub
ins
in
dec
test
dec
jmp
xchg
fcom
sbb
adc
in
or
jg
pop
repnz
sti
aas
adc
test
add
dec
cld
loopne
leave
adc
cwde
stos
dec
xor
scas
ja
clc
ss
imul
jmp
dec
dec
add
adc
inc
mov
jmp
pop
(bad)
gs
fsub
jmpw
lea
aad
jg
pushf
mov
mov
dec
shl
mov
mov
sub
dec
int3
ins
push
mov
stos
mov
ja
in
cmp
imul
jmp
pop
dec
dec
xchg
xchg
shl
dec
(bad)
adc
mov
jp
hlt
sbb
add
jmp
das
mov
inc
xchg
test
cmp
pop
scas
in
jno
adc
sbb
mov
mov
sub
cdq
mov
adc
mov
cmc
fisttp
mov
jnp
jle
mov
pop
sub
pop
ret
sbb
movs
lods
popa
pop
inc
call
pop
push
faddp
or
int3
ret
jne
add
xchg
or
stos
adc
xchg
mov
xchg
pop
scas
iret
imul
jp
xor
std
lock
sbb
test
mov
and
sbb
mov
mov
and
stos
dec
mov
aad
lods
dec
xchg
leave
dec
jge
push
iret
dec
mov
push
mov
lahf
dec
call
add
gs
shr
mov
mov
push
(bad)
bound
xor
scas
and
shl
jbe
sub
(bad)
xlat
sti
mov
mov
mov
movs
inc
mov
sbb
sbb
and
bound
sub
or
popa
adc
push
pop
push
add
sub
sbb
loopne
pushf
xchg
in
inc
xor
loop
aaa
jbe
or
fisttp
push
cmps
aad
gs
addr16
inc
pop
cmps
sub
sbb
push
jg
ficom
mov
test
frstor
aam
arpl
not
stos
test
or
xor
jno
js
sub
cs
jecxz
ret
lods
fdivr
push
jne
push
push
pop
les
std
xchg
add
test
jae
popa
xchg
data16
fwait
test
mov
ja
inc
adc
stos
xchg
aam
dec
pop
jmp
mov
bound
xor
repnz
ror
je
fdiv
cld
or
mov
jecxz
dec
push
and
push
dec
adc
cmps
mov
and
hlt
xchg
data16
xor
and
iret
sub
stc
add
pusha
test
call
push
xchg
cmps
jb
add
mov
sbb
ss
xor
daa
mov
pop
into
cld
add
nop
sub
aas
xor
mov
push
add
mov
cdq
push
xor
sti
das
fwait
dec
and
add
popa
mov
pusha
mov
fistp
loopne
stos
or
mov
and
adc
cmp
pusha
or
add
inc
pop
fwait
sbb
scas
cmp
mov
adc
add
adc
or
mov
or
sbb
push
adc
dec
fcomp
add
lds
mov
stos
lock
mov
ret
sub
in
int
(bad)
cs
fistp
or
popf
cld
add
ins
xor
icebp
xor
fadd
and
cs
xchg
mov
inc
push
push
xchg
movs
cmc
fwait
das
mov
inc
arpl
out
sub
cwde
in
lahf
pop
jmp
iret
ret
inc
cli
addr16
rcl
cdq
jo
scas
lods
ins
std
ja
adc
cmp
fld
movs
fucom
lock
jge
xchg
repz
stos
ins
and
dec
(bad)
cmps
out
das
retf
cwde
push
arpl
xor
jge
idiv
push
mov
pop
js
call
sub
loope
push
pop
pop
dec
mov
loopne
fidiv
push
int3
lods
push
movs
loopne
and
mov
pop
inc
dec
cmp
sub
out
sub
mov
mov
jecxz
fs
retf
arpl
outs
xor
cmp
hlt
cld
fcomp
test
and
jbe
mov
test
shr
mov
(bad)
mov
je
cmps
test
cmps
in
or
push
pop
push
cld
pop
sbb
daa
push
dec
jmp
and
push
out
call
jne
loopne
repz
fwait
inc
rcr
ret
loop
push
xor
std
dec
test
jbe
or
jbe
js
ret
dec
sti
mov
cmp
(bad)
outs
mov
into
ss
sub
cmp
mov
mov
cmpxchg
and
cwde
es
sub
mov
aas
mov
xlat
sbb
fs
push
push
cmc
jns
pop
pusha
dec
repnz
das
cmps
(bad)
xor
not
mov
mov
jg
jle
inc
adc
out
dec
cmp
in
ret
stos
add
ret
es
(bad)
fwait
ss
pop
imul
xchg
(bad)
cs
push
or
popa
sar
and
cmp
in
cmp
xchg
jl
je
nop
dec
or
test
lds
retf
jmp
adc
jge
pop
pushf
aam
push
out
es
ss
cdq
add
mov
cmp
(bad)
pop
or
jge
sub
retf
cmp
xchg
fcomp
sbb
mov
les
jo
or
fcomp
leave
test
(bad)
push
or
jmp
movs
ds
(bad)
retf
sub
rcl
inc
ss
push
sub
int3
sti
mov
and
cmp
mov
or
cmp
mov
out
xor
aad
mov
rcr
or
gs
in
lahf
jnp
pop
jbe
mov
cmps
dec
lods
test
push
clc
push
push
adc
inc
push
hlt
jo
add
pushf
imul
adc
pop
adc
fdiv
ror
jl
pop
mov
sbb
push
push
dec
xor
push
out
adc
movs
cmp
or
xlat
pop
popa
test
fiadd
adc
rol
cmp
int
push
(bad)
mov
(bad)
out
pop
retw
cmp
add
add
xor
sub
scas
jns
imul
imul
pop
cwde
(bad)
mov
jmp
inc
rcr
ss
xchg
rcr
in
and
add
outs
inc
sbb
ret
dec
inc
aad
add
int
pop
jle
inc
rcr
mov
jecxz
mov
call
out
repz
inc
lds
scas
arpl
and
shl
jle
dec
dec
pop
mov
sub
and
loop
adc
mov
loop
cmp
xchg
cmp
add
xlat
xchg
adc
hlt
xor
popa
mov
mov
dec
sbb
xchg
jno
test
push
cdq
sti
popa
cmp
cmp
fidivr
popf
movs
push
xor
mov
push
xchg
or
dec
mov
iret
add
mov
and
jge
leave
loope
pop
add
mov
test
xchg
lock
sub
sbb
dec
xchg
lods
cmp
aam
add
rcr
cdq
mov
pop
call
(bad)
and
fcom
out
sahf
fisttp
jmp
sub
test
in
pop
nop
ins
jae
inc
sti
adc
ret
bnd
ror
dec
pop
int
sbb
or
push
popa
loopne
inc
jg
es
xor
adc
sub
icebp
and
mov
or
or
outs
dec
ins
lea
imul
or
int
and
adc
adc
sbb
loope
sahf
inc
mov
(bad)
sub
imul
sub
mov
xor
mov
arpl
repz
sbb
mov
clc
cmp
mov
imul
xchg
ins
(bad)
and
adc
jae
xor
mov
scas
mov
push
popf
push
daa
adc
jmp
sbb
mov
out
(bad)
(bad)
(bad)
sub
add
xlat
div
mov
scas
xchg
div
sbb
repnz
loop
mov
mov
or
sbb
mov
and
loopne
add
ins
adc
test
es
imul
sbb
mov
cmp
sub
aas
mov
lahf
lds
mov
icebp
in
push
cs
out
cmps
push
push
mov
push
test
and
xlat
fcomp
ret
pop
icebp
int3
shl
dec
repz
dec
lock
push
stos
int3
sar
mov
inc
inc
in
std
lea
sub
ds
cmp
jmp
pusha
aaa
push
mov
dec
idiv
aas
in
pop
and
js
add
xlat
adc
mov
int
addr16
imul
xchg
movs
and
int
push
jne
lea
shl
lds
sar
std
sub
loope
sbb
add
clc
push
push
movs
sub
enter
adc
sbb
outs
pusha
mov
mov
jmp
arpl
in
inc
mov
sub
cmp
sub
std
shr
stos
jb
aad
or
out
xor
or
inc
pusha
or
xchg
mov
ret
and
das
dec
pop
mov
and
xchg
lods
out
jnp
sbb
jmp
or
sbb
mov
inc
push
popf
fcom
daa
mov
outs
psllw
push
(bad)
xlat
sub
push
or
add
jne
push
add
(bad)
repz
aam
mov
pop
leave
test
pop
pop
fidivr
loopne
add
add
xor
ja
test
sahf
fimul
ror
das
cmp
pop
and
inc
sbb
arpl
adc
push
pushf
sbb
retf
cmp
push
in
loopne
xor
adc
push
ss
shl
sbb
rol
les
pusha
pushf
(bad)
inc
push
push
(bad)
(bad)
sti
jle
out
sub
fnstcw
gs
cs
adc
xor
xor
push
lock
push
mov
cmp
or
sub
mov
test
(bad)
push
mov
ja
dec
dec
scas
mov
aaa
fcomi
cmps
out
ret
mov
rcl
les
(bad)
jo
dec
ret
mov
mov
fdiv
push
sub
pop
jecxz
jge
push
add
repnz
aas
out
adc
sub
pop
and
xor
cmp
aas
pop
sub
out
mov
jmp
pusha
ins
sti
dec
inc
loop
cdq
jae
sbb
ret
dec
cwde
imul
ror
test
rol
(bad)
fidiv
push
dec
call
fcom
mov
pop
arpl
loop
mov
jbe
dec
pop
sbb
or
and
into
nop
lods
cmc
xchg
and
retf
imul
cs
adc
or
in
cmp
dec
push
push
xchg
sub
cld
aad
or
out
retf
adc
jne
out
cmps
mov
aaa
add
pop
xchg
ds
mov
jnp
push
xchg
cmp
pop
aaa
mov
pop
adc
inc
sti
movs
test
xor
test
xor
cli
pop
fidiv
out
loope
jne
mov
and
aam
dec
lods
data16
xchg
adc
mov
inc
cmp
lahf
lds
shl
std
push
arpl
mov
push
(bad)
call
jge
shl
enter
lods
xor
xchg
and
xor
adc
es
clc
sbb
xchg
mov
test
pop
pusha
mov
xchg
stos
adc
mov
stos
and
sbb
pop
jo
rol
movs
jne
mov
mov
dec
mov
pushf
sbb
hlt
mov
push
test
jne
ror
mov
and
push
dec
rol
imul
push
pop
push
sbb
xor
add
jmp
mov
pop
fsubrp
cmc
mov
mov
cmp
sub
aam
in
aas
dec
sar
ret
imul
shl
jmp
enter
je
aaa
and
and
mov
rcr
ret
dec
pop
inc
sahf
lock
xchg
jmp
add
mov
or
mov
(bad)
scas
push
rep
cmps
adc
adc
inc
rcl
popf
rcr
or
dec
mov
jno
and
mov
loop
stos
or
xchg
pushf
and
and
add
jne
rol
jns
pop
jle
pop
dec
int
mov
jmp
(bad)
loop
jmp
xor
mov
inc
fsub
mov
fs
push
nop
retf
inc
xor
sbb
push
sahf
popf
in
sub
mov
js
cmps
sbb
sti
sub
ffree
adc
sub
retf
inc
inc
data16
sub
cmp
jmp
loop
movs
adc
jl
jg
aaa
clc
(bad)
fdiv
jne
lods
cmc
sub
or
lods
mov
dec
mov
es
xchg
mov
retf
retf
rcr
lods
or
cmp
cli
inc
pop
mov
pop
push
fxch
inc
out
push
data16
lock
xchg
dec
loopne
mov
dec
adc
dec
pusha
jge
sbb
ja
sub
cmps
adc
xchg
gs
mov
out
clc
sub
je
movs
mov
push
movs
or
adc
xchg
mov
int3
xchg
and
out
(bad)
repnz
(bad)
test
lods
or
and
cld
jb
inc
or
inc
push
xchg
inc
push
pusha
sbb
lea
and
outs
mov
sbb
lock
(bad)
sub
cmp
inc
scas
sub
mov
sti
repnz
jmp
in
(bad)
adc
outs
inc
xchg
in
sub
and
shl
mov
adc
mov
dec
adc
(bad)
(bad)
sub
addr16
mov
mov
mov
xchg
dec
push
and
icebp
leave
outs
loope
push
adc
js
leave
xor
test
add
jne
inc
repnz
mov
push
popf
mov
sahf
and
lahf
pusha
shl
sub
lods
scas
leave
out
scas
clc
fimul
adc
not
pop
loopne
pop
(bad)
mov
inc
fisttp
cmp
sbb
pop
(bad)
test
sbb
cwde
or
adc
adc
loop
mov
xor
pop
(bad)
mul
(bad)
jne
cli
push
ins
pop
jnp
enter
ds
dec
ret
nop
add
push
dec
sbb
pop
xchg
mov
mov
call
ret
mov
jo
dec
hlt
add
mov
xor
push
inc
inc
stos
add
sub
ja
in
loope
jmp
xor
leave
mov
shl
rcr
cld
hlt
ficomp
mov
pop
mov
xchg
dec
mov
push
or
jnp
in
pop
pop
mov
test
std
mov
fld
loope
sbb
mov
mov
fdiv
mov
pop
sbb
xor
xchg
sub
pusha
mov
mov
adc
cmp
cmps
mov
jp
pop
ret
or
test
jmp
mov
and
adc
cs
mov
stos
(bad)
stc
test
mov
inc
repnz
push
imul
xor
xor
int3
fild
scas
adc
xor
dec
test
mov
test
(bad)
cmps
mov
sbb
hlt
cs
out
cmp
aad
mov
jge
icebp
xlat
pop
lea
(bad)
fimul
inc
or
fs
push
sub
cmp
cli
and
adc
dec
popa
clc
jae
add
es
xor
push
jns
add
fild
dec
pop
xor
mov
adc
pusha
mov
jge
scas
xchg
rcpps
and
mov
arpl
and
dec
sbb
outs
inc
mov
push
xchg
ins
js
cmp
add
push
int3
(bad)
popf
inc
les
in
lock
adc
jne
xor
sbb
mov
xchg
bound
xlat
addr16
fwait
addr16
scas
mov
les
fstp
arpl
or
pushf
pop
xchg
ret
hlt
add
lds
jmp
adc
sbb
pop
mov
mov
in
pandn
js
push
repnz
mov
push
test
xor
div
jl
inc
mov
ins
sbb
cmp
sbb
jb
outs
jl
mov
call
dec
imul
test
test
mov
dec
das
in
enter
xor
fisubr
pop
(bad)
cmp
pop
push
std
cmps
sbb
out
pop
test
gs
mov
cmp
nop
mov
inc
stos
push
gs
sub
test
sbb
dec
jnp
out
pushf
adc
call
fdivr
sub
jp
loopne
shl
add
aas
outs
push
out
aad
adc
jbe
call
mov
rol
inc
enter
add
out
inc
jle
sti
mov
out
cli
(bad)
into
sbb
dec
push
inc
pop
test
xor
test
lea
pop
in
cmp
cmc
and
inc
sub
cwde
test
mov
cld
lods
or
or
repz
dec
loopne
les
pop
fist
sbb
lea
cmps
mov
enter
lea
mov
int
dec
sub
les
pop
ret
lods
adc
cld
push
xor
test
retf
xchg
das
jge
ffree
stos
adc
adc
pop
fst
pop
addr16
je
sahf
or
sub
jmp
lods
(bad)
add
xchg
cmp
hlt
xor
xchg
push
adc
in
std
and
nop
movs
rol
jmp
mov
retf
lock
pop
adc
idiv
bound
js
dec
rcl
adc
jns
mov
mov
inc
xchg
jmp
icebp
stos
adc
int
shr
push
jbe
cmp
dec
in
jle
sub
xor
inc
cdq
cdq
add
call
mov
rcr
sbb
mov
cmp
adc
fld
sar
push
jle
jo
xchg
retf
repnz
lea
fisttp
cmps
pop
movhps
xchg
repz
test
hlt
(bad)
nop
hlt
sbb
cmp
mov
(bad)
jb
int
(bad)
sbb
xchg
sahf
sbb
into
fs
and
xchg
adc
lods
out
sar
mov
scas
inc
or
cwde
scas
popf
ins
ins
jg
inc
pop
dec
mov
lock
pusha
fstp
jmp
lods
mov
rol
xor
xchg
imul
cmp
iret
xor
fs
and
sbb
clc
daa
leave
iret
mov
ror
xchg
push
pop
aas
xor
addr16
mov
repnz
fwait
push
xchg
jbe
iret
jle
xor
pop
jae
dec
dec
dec
sbb
fcmovnb
leave
xchg
ficom
stos
loopne
add
cdq
retf
shl
xor
sub
push
call
and
sub
lahf
jmp
mov
jmp
popf
push
push
(bad)
adc
add
call
mov
or
call
test
outs
in
sbb
movs
cmp
mov
pop
sub
sub
jge
add
jp
push
retf
mov
push
cmp
adc
dec
add
js
xor
mov
(bad)
or
push
jne
jl
pop
pop
mov
inc
js
inc
inc
in
mov
jp
arpl
cmp
in
ret
pop
mov
add
outs
test
jp
mov
jecxz
xchg
sahf
bound
sbb
inc
xor
adc
je
pop
pushf
and
lahf
or
mov
hlt
loop
mov
ss
pop
add
fist
ficom
ja
clc
sbb
and
leave
mov
jne
jle
jno
cmp
pop
ss
repnz
rol
xlat
rcr
cmp
push
sbb
sbb
cmp
dec
ins
in
xchg
in
cmp
xchg
ss
(bad)
mov
pop
cli
mov
push
push
mov
shl
or
cmp
ins
outs
repz
enter
bound
neg
cmp
mov
and
add
imul
sub
clc
jne
or
sahf
je
jbe
retf
scas
push
adc
popa
movs
push
ds
add
mov
mov
mov
loope
jmp
aas
std
ds
popf
dec
fcom
out
int
test
cmp
add
jns
mov
pusha
pop
aas
add
out
mov
jno
test
add
cmp
or
cmc
cmp
out
mov
daa
div
pusha
fcom
mov
jo
call
(bad)
inc
ror
pop
xor
jp
or
push
ror
mov
cld
icebp
cmp
mov
fwait
retf
movs
mov
pop
jle
imul
rcr
lock
test
sbb
pop
inc
push
mov
pop
popf
call
cli
test
pop
pushf
out
icebp
push
and
push
out
(bad)
fiadd
adc
(bad)
sbb
jnp
lods
inc
cmp
cmp
pop
and
pushf
test
or
leave
out
test
out
dec
cmp
stos
js
jecxz
clc
push
xor
aad
nop
fs
xor
jmp
pop
pop
lods
std
lea
mov
mov
xor
xchg
sbb
push
push
xchg
gs
stc
test
ret
in
push
iret
add
push
xor
sti
jecxz
clc
xor
lods
mov
test
jns
mov
mov
push
inc
cmp
mov
adc
pop
xchg
jno
cmp
cmp
popf
dec
inc
imul
adc
mov
das
(bad)
cmp
or
xchg
scas
cld
sbb
push
pop
popf
arpl
addr16
lahf
xor
xchg
mov
jp
or
jg
(bad)
je
dec
adc
add
jae
xor
mov
mov
loope
les
inc
dec
repnz
ret
cmps
cmp
xor
inc
das
les
or
icebp
popa
dec
inc
sub
jge
xchg
(bad)
inc
lock
out
pusha
cmps
dec
mov
adc
nop
mov
sbb
xor
push
cli
mov
ror
into
mov
mov
push
dec
hlt
fbstp
mov
(bad)
sar
mov
fidivr
outs
fisub
mov
sub
xchg
push
(bad)
fimul
aam
test
xchg
fisttp
jne
xor
fwait
xor
jl
sbb
mov
ret
mov
rcl
xchg
retf
cwde
nop
dec
mov
jmp
(bad)
pushf
rcr
in
pusha
imul
fiadd
jo
pop
lods
div
(bad)
mov
sahf
mov
js
sbb
fnstenv
ins
dec
scas
mov
jae
pavgb
xchg
(bad)
pop
jmp
jecxz
in
inc
add
jne
out
mov
or
(bad)
test
push
mov
add
jge
add
adc
xor
jmp
mov
imul
lods
inc
add
and
ret
rol
aam
mov
add
inc
(bad)
sahf
mov
pop
sahf
push
ficom
pop
popa
sbb
xchg
pop
jnp
add
or
adc
inc
int
mov
pop
lods
cmp
movs
sbb
sti
imul
aam
test
pop
shl
jne
mov
jo
fs
popa
inc
retf
or
push
fcom
jecxz
sahf
repnz
mov
push
addr16
mov
repnz
test
mov
lods
enter
or
xchg
jb
stc
sub
ins
xchg
cmps
xor
mov
fnstsw
sub
xor
ficomp
loope
inc
cwde
xchg
cmp
(bad)
xlat
(bad)
or
fld
pop
daa
sbb
lods
js
jg
frstor
lods
retf
push
aas
mov
cmp
(bad)
pushf
xchg
sbb
dec
repnz
add
or
push
imul
retf
inc
or
mov
push
sbb
cdq
mov
daa
lods
xor
sbb
mov
clc
adc
enter
sub
add
imul
aaa
mov
jns
sahf
lods
pop
sbb
fadd
data16
shr
push
or
xor
sbb
fbstp
test
imul
adc
leave
and
fisttp
sbb
and
in
je
ja
xchg
pusha
scas
cmp
add
xchg
adc
adc
cmp
and
xchg
out
inc
push
mov
pop
xchg
inc
xchg
fldcw
(bad)
sbb
dec
mov
jbe
(bad)
in
cli
aas
pop
les
cmc
jno
test
xchg
dec
cmp
add
gs
test
clc
pop
jl
(bad)
lods
sbb
or
enter
mov
mov
xor
adc
jnp
jmp
sti
add
mov
(bad)
cmc
and
mov
dec
adc
add
sbb
mov
fadd
mul
outs
and
daa
pop
fistp
xchg
inc
jge
cmp
mov
pop
aaa
mov
cmp
shl
imul
gs
adc
pop
ror
je
inc
rcr
aaa
mov
ror
sbb
mov
std
mul
and
cwde
repnz
call
(bad)
aam
mov
add
into
pop
ja
ret
lea
aas
push
jmp
sbb
jo
imul
aaa
mov
mov
ins
mov
pop
lahf
mov
jo
cmp
out
pop
dec
shr
cwde
push
add
jge
sub
mov
test
imul
bound
add
cmp
push
mov
mov
sbb
stos
cmps
test
inc
pop
sbb
sub
loopne
(bad)
test
movs
and
idiv
lds
ror
cmpxchg
mov
test
sbb
in
loope
push
mov
push
adc
jne
shl
lea
sub
jne
ficomp
(bad)
fisttp
mov
popf
xchg
push
out
adc
and
push
les
retf
out
cs
repnz
push
xor
add
(bad)
dec
cmp
xchg
mov
dec
sub
movs
xchg
rcl
inc
dec
or
inc
inc
mov
push
pop
dec
mov
cmps
fidivr
out
enter
and
loope
fwait
loope
gs
outs
jbe
mov
cld
dec
cmps
dec
add
in
sbb
push
sbb
mov
repnz
test
shr
add
inc
dec
test
jecxz
sub
push
mov
shl
nop
aad
inc
popf
(bad)
sbb
add
in
push
mov
sbb
fs
enter
and
push
cmps
adc
or
sub
cmp
add
ja
xor
xor
ins
mov
out
in
rcl
inc
jns
mov
sub
fiadd
shl
dec
arpl
int
div
js
movs
aaa
push
in
jne
sbb
jo
imul
jmp
ret
mov
shr
in
iret
mov
mov
pop
cmp
sub
dec
leave
push
loopne
xor
push
in
int
fmul
sub
retf
daa
lods
add
sbb
mov
push
loopne
ins
lds
push
mul
setle
lods
lea
and
lods
mov
inc
pop
es
push
sar
fcomp
addr16
jle
ins
fsub
pop
jge
xchg
gs
xor
add
mov
dec
imul
jbe
retf
pop
dec
addr16
sub
and
push
mov
ins
fwait
pop
adc
sub
and
call
outs
add
cld
rcl
int
sub
inc
sti
popa
jmp
fstp
mov
(bad)
sbb
sbb
push
pop
adc
cmp
aas
jnp
dec
pop
cmps
mov
scas
aaa
push
sti
in
mov
dec
(bad)
out
jmp
xor
push
inc
in
push
loopne
push
inc
add
sti
pop
push
cmps
pop
sub
es
sahf
fld
cli
mov
out
add
sbb
add
ins
mov
ja
clc
sar
pop
push
repnz
jg
jb
push
dec
mov
pushf
aas
adc
add
out
inc
push
sub
xor
sbb
jne
out
(bad)
sar
out
and
adc
test
sub
dec
lahf
mov
mov
hlt
jge
rol
xchg
popf
cmp
call
xor
sar
pop
push
xor
mov
test
xchg
fwait
add
fadd
pop
(bad)
jne
add
jb
ss
push
mov
dec
inc
ret
xor
dec
shl
push
and
(bad)
lahf
inc
push
xor
mov
cmps
xchg
add
pop
jns
jae
sbb
loopne
pusha
out
push
mov
int3
shr
out
xchg
fidivr
xor
pushf
int
mov
sub
sbb
movs
mov
xchg
(bad)
fdivr
mov
icebp
into
in
loopne
test
xor
mov
fwait
dec
popf
mov
xchg
push
mov
sub
imul
add
fdivr
mov
mov
and
data16
push
stos
xchg
je
sbb
cli
xor
pop
jns
stc
and
pushf
fistp
cmp
cmp
rcl
sbb
test
out
(bad)
mov
and
xlat
repz
mov
jno
mov
aam
ja
push
dec
jmp
sub
sbb
fsub
int
das
jle
pop
cmp
sar
aad
call
cmp
xchg
push
inc
and
sbb
mov
jmp
cs
pusha
adc
ud2
jmp
pop
pop
jle
sub
mov
mov
sbb
out
adc
movsx
arpl
cs
ds
fcom
out
mov
add
sbb
adc
or
pop
sbb
inc
sub
iret
jge
pop
dec
ins
fidiv
jp
jo
xor
(bad)
jb
xor
cmps
call
aad
popf
pop
popa
mov
frstor
dec
mov
fptan
lea
aas
push
outs
sbb
mov
imul
repnz
out
stos
xor
lods
cmp
ins
or
dec
xor
loop
cwde
call
sbb
repnz
leave
ins
stos
push
stos
adc
(bad)
adc
clc
in
adc
fwait
adc
inc
aas
cmp
xor
pop
cmc
dec
or
sbb
mov
imul
test
fiadd
jbe
push
enter
out
inc
fst
cmps
pushf
cmp
mov
xchg
inc
cmp
xchg
out
cmps
mov
sub
push
hlt
in
and
sar
jo
xchg
or
pop
mov
push
(bad)
arpl
fbld
hlt
in
popa
sbb
leave
ins
popa
jns
cwde
leave
aas
scas
xor
add
and
sub
or
mov
je
sub
xor
in
add
inc
das
xor
ss
fdivr
popf
xor
adc
xor
int
inc
not
not
jge
daa
add
adc
adc
mov
fdivr
lods
jne
cmp
cmp
jne
cmp
clc
aaa
push
int3
imul
and
aas
je
mov
pop
and
call
icebp
cmps
xchg
cmp
lahf
loope
ss
inc
arpl
pop
scas
dec
ror
xchg
test
or
inc
mov
sar
sub
adc
dec
aam
adc
adc
inc
mov
fwait
ins
aas
jne
scas
loopne
xchg
xlat
pusha
aad
add
int
fsub
stos
xor
cmps
retf
stc
or
and
fs
jns
ret
push
and
adc
or
cmp
test
dec
test
leave
pop
fcomp
cs
lahf
sahf
push
add
sbb
jbe
sbb
or
fwait
addr16
jo
cmp
xchg
cmp
inc
mov
pop
mov
fisttp
jae
or
jae
mov
stc
adc
cld
mov
mov
adc
mov
pop
cmovno
dec
sahf
xchg
inc
add
es
arpl
in
and
out
mov
imul
sub
add
popf
outs
push
xor
in
jne
or
fstp
stos
xchg
je
jg
pop
fimul
adc
sti
arpl
test
lahf
jo
xchg
jne
fst
pusha
test
int
mov
addr16
mov
(bad)
fcmovb
dec
lods
xchg
dec
pusha
ret
sub
imul
cdq
jno
(bad)
idiv
fwait
out
pop
js
sub
adc
mov
ins
out
pop
mov
xchg
movs
test
pop
and
mov
jno
xlat
sti
retf
sub
inc
jae
jne
push
inc
test
das
jecxz
or
stos
neg
pop
test
mov
push
mov
ficom
inc
sbb
aad
(bad)
(bad)
pause
or
adc
push
cmps
cmp
or
mov
inc
ror
adc
mov
adc
cmp
loope
shr
xor
cmp
movs
in
inc
or
jo
mov
xor
repnz
push
dec
stos
ja
dec
push
jb
and
mov
(bad)
(bad)
mov
and
push
fisttp
inc
pop
jnp
cmp
lds
ret
cmps
cmp
inc
cmps
imul
adc
scas
jne
pop
rep
imul
push
hlt
mov
(bad)
cld
inc
fisub
adc
or
aaa
adc
fstp
add
addr16
sar
cmp
fwait
dec
popa
push
sti
sar
sti
(bad)
loopne
jo
icebp
xor
inc
push
push
aas
push
popf
sub
loope
mov
sbb
fsub
mov
sbb
test
cmps
xchg
int3
lds
dec
dec
popf
or
ror
in
xchg
and
push
mov
pushf
daa
sub
retf
ror
stos
pop
gs
aas
movs
iret
jb
push
pushf
movs
and
sub
add
add
es
je
mov
and
cmp
push
imul
cmp
(bad)
(bad)
push
fmul
adc
in
mov
pusha
hlt
push
xchg
sbb
jp
lods
sbb
pop
jbe
rcr
je
or
popa
btc
repnz
sub
push
popf
test
loopne
fnsave
ins
adc
ror
jbe
pop
jns
and
(bad)
jg
jp
or
ss
inc
outs
sar
sbb
xchg
clc
and
stos
mov
stos
nop
add
sub
xor
jae
shl
nop
nop
(bad)
es
jle
sub
jl
sub
or
and
mov
and
pushf
mov
sbb
and
out
and
or
xchg
outs
push
xchg
(bad)
lock
(bad)
cmps
xor
and
or
jmp
(bad)
fmul
(bad)
jmp
jne
mov
mov
test
cmp
ins
xor
xlat
fldcw
ffreep
jns
or
mov
in
cmp
mov
or
mov
push
jo
fucomi
dec
jbe
mov
in
mov
push
sbb
push
push
mov
mov
loope
pushf
sti
dec
das
mov
sub
mov
loope
push
jnp
mov
sub
push
outs
cmp
jle
or
nop
xchg
imul
cmp
sbb
sub
dec
aaa
inc
cld
pop
das
gs
jne
sbb
sub
bound
pushf
gs
jg
fnsave
push
sbb
mov
call
and
sbb
out
sbb
ds
mov
je
mov
mov
xchg
enter
(bad)
(bad)
mov
sbb
mov
pop
test
adc
lods
add
aad
leave
mov
fld
xchg
mov
shl
mov
cmp
xchg
sar
and
pop
fwait
cdq
sbb
aaa
int3
sbb
test
pop
std
jne
(bad)
repz
xchg
mov
mov
int
into
retf
es
icebp
xor
cmp
dec
push
adc
imul
xor
fcomp
jne
and
cmc
(bad)
mov
add
nop
fnsave
ins
pop
popf
xchg
sbb
sbb
sub
pop
xchg
sbb
sbb
popf
jmp
push
sbb
mov
lods
sbb
jno
ss
add
pop
and
sub
(bad)
sbb
bound
cmc
out
adc
stos
sbb
inc
jecxz
lds
and
mov
pushf
adc
aam
mov
mov
(bad)
rcl
pushf
(bad)
mov
inc
lock
or
js
and
loopne
lods
pop
cmps
dec
xor
pop
or
(bad)
ins
dec
add
movs
lds
adc
dec
xor
repz
call
xchg
jg
pushf
pop
cmp
loope
inc
mov
xchg
in
and
clc
leave
cmp
stos
xor
jmp
inc
mov
es
mov
in
mov
dec
call
cmp
js
jmp
cmp
outs
add
adc
cwde
cmp
push
movs
jb
and
fmul
enter
or
scas
in
mov
xor
fidiv
lds
retf
add
sbb
push
lock
rcr
in
inc
cli
arpl
push
adc
and
push
nop
mov
jle
iret
mov
ret
adc
and
aas
ss
shr
xchg
fs
ja
push
and
out
shl
hlt
adc
ret
in
adc
ret
shr
cmc
add
pop
dec
add
fwait
xor
adc
sar
iret
fimul
adc
div
pop
(bad)
retf
and
mov
or
cmps
dec
and
adc
bound
xchg
adc
(bad)
jge
loop
(bad)
adc
cmp
sbb
sahf
mov
imul
mov
mov
stos
xor
inc
outs
mov
cmp
xor
xchg
xchg
mov
cmp
push
fs
shl
pop
aaa
stc
dec
pop
outs
(bad)
fwait
cmc
cmp
inc
out
frstor
fist
inc
imul
aas
or
jbe
xor
test
lods
push
fs
mov
fst
(bad)
repz
push
dec
cmp
jnp
push
jnp
stos
ss
or
mov
sub
push
adc
sbb
pop
jns
and
jp
mov
bound
movs
outs
xor
iret
in
push
test
adc
sub
iret
dec
sub
call
addr16
or
pop
in
imul
shr
push
pushf
push
or
test
mov
pop
adc
mov
cs
mov
hlt
jbe
loop
fnstsw
xchg
sbb
mov
xchg
rcl
inc
in
popa
sar
adc
xchg
in
add
mov
jno
pop
cmp
fwait
jl
loop
jle
ins
jle
cmp
and
fmul
jecxz
mov
push
push
jmp
(bad)
jg
sar
jmp
push
mov
icebp
mov
in
sbb
scas
stc
mov
pusha
add
imul
dec
mov
in
(bad)
hlt
or
mov
imul
cmc
lods
mov
and
dec
sbb
adc
and
fld
aas
repz
adc
sbb
test
jnp
adc
or
arpl
retf
inc
jns
neg
pop
xchg
sahf
or
jne
ss
xor
imul
sbb
jnp
pop
ror
cmp
push
repnz
xchg
out
test
pop
mov
add
fldpi
imul
xor
cli
and
xchg
arpl
int3
hlt
mov
mov
enter
pop
mov
lods
test
inc
dec
xor
mov
dec
call
outs
lea
push
sub
inc
cdq
push
or
lods
xlat
hlt
jmp
cli
jo
jecxz
test
xchg
out
push
sub
dec
test
mov
mov
jb
jmp
in
cmp
loope
loopne
(bad)
aam
xchg
aad
xchg
popa
and
ja
mov
and
pop
inc
cwde
out
fistp
stos
daa
cmp
jns
sar
adc
jl
sbb
fisttp
jecxz
movs
add
je
mov
hlt
or
retf
pusha
imul
adc
mov
cwde
rcl
adc
mov
adc
or
lock
ins
sub
jne
sahf
test
jp
cmp
mov
sbb
cmps
cmp
cmp
repnz
pop
adc
push
jno
icebp
inc
call
arpl
aaa
aad
jmp
fsubr
mov
mov
out
fsubr
mov
ins
fcom
adc
pop
sub
call
bsf
ins
(bad)
out
sbb
xor
iret
in
dec
hlt
mov
ret
ja
movs
jge
mov
sbb
lahf
push
aad
lea
stc
pop
inc
sbb
(bad)
mov
mov
cli
aaa
(bad)
repz
iret
jmp
mov
je
dec
dec
jno
mov
gs
jmp
and
jnp
and
imul
pop
popa
ja
std
cmp
hlt
ror
outs
imul
imul
inc
cmc
mov
xor
les
mov
or
fwait
pusha
int
mov
or
or
aam
or
mov
push
mov
out
push
je
pop
mov
sbb
test
test
sbb
outs
pop
sbb
jo
inc
adc
shl
xchg
cmp
test
es
shr
sbb
js
movs
aam
imul
mul
lea
test
sub
les
fstp
mov
in
into
js
ret
faddp
dec
cmp
div
call
loop
add
add
xchg
jp
fwait
adc
add
shl
xchg
pop
pop
into
mov
cld
adc
inc
arpl
adc
sar
daa
push
mov
push
push
outs
(bad)
daa
and
mov
cmp
pop
and
shr
xchg
dec
mov
adc
jge
mov
scas
data16
pop
or
bound
xchg
cmp
fwait
pop
into
pop
in
adc
and
mov
xor
sbb
in
lock
jecxz
cli
cmps
dec
jg
popa
(bad)
sbb
dec
push
popf
dec
mov
into
pop
dec
and
out
jg
cmps
stos
imul
sub
movs
ror
inc
jmp
xchg
sbb
cmc
test
mul
sub
xchg
(bad)
pop
mov
retf
xor
int
out
call
jne
shl
cmp
test
cmp
shl
into
push
or
out
sub
shr
jecxz
adc
and
fwait
(bad)
pop
div
scas
mov
outs
lahf
imul
pop
or
repnz
leave
mov
cli
aas
xor
arpl
dec
fld
mov
stos
and
cs
mov
data16
push
pop
fstp
xlat
nop
sub
xor
arpl
pop
js
jmp
dec
ins
in
ffreep
mov
push
pop
movs
imul
xor
out
int
mov
lea
(bad)
cwde
outs
fcomp
push
or
outs
jns
jl
enter
inc
fdivr
pop
xchg
sbb
mov
sbb
or
mov
retf
jne
pop
ret
out
jg
inc
push
call
mov
sub
fwait
xchg
aad
ss
fmul
inc
pop
mov
fwait
sbb
mov
mov
inc
xchg
mov
jmp
lea
pop
mov
sub
pop
fist
push
cld
inc
lock
in
mov
xor
test
popa
mov
pusha
push
mov
adc
inc
and
cmp
inc
les
arpl
call
icebp
mov
imul
xchg
cmc
mov
les
iret
sbb
(bad)
lea
test
fstp
lods
xor
les
mov
mov
cld
sbb
lea
add
scas
repnz
mov
pop
jbe
fbld
rcr
sub
sbb
out
inc
and
jne
pop
lock
sub
les
inc
add
sub
push
ds
pop
inc
dec
sub
addr16
jne
cs
xor
or
adc
clc
or
gs
cmp
cmp
pusha
in
lea
or
lods
add
jmp
in
fnclex
mov
es
adc
sbb
lods
cmp
imul
in
rol
xor
jae
mov
fnstsw
cmps
(bad)
or
xchg
sahf
push
sub
in
fbstp
add
sbb
in
and
sub
sbb
pop
xor
out
mov
pop
mov
scas
xchg
pop
(bad)
idiv
xlat
dec
add
ror
inc
mov
ss
and
mov
push
xor
jecxz
jge
es
sub
sbb
pop
mov
std
xchg
push
shl
ins
dec
cmp
sti
mov
inc
and
jge
ror
xchg
jmp
inc
pop
ret
dec
retf
pop
mov
pop
pop
inc
ins
cdq
add
xchg
cmps
jmp
rol
mov
mov
lock
pop
(bad)
out
mov
ja
sbb
jmp
hlt
pop
test
daa
lahf
bound
idiv
in
dec
ja
sti
(bad)
ins
ins
stos
(bad)
dec
icebp
jmp
test
ss
cdq
add
sub
enter
xor
jb
add
xor
xchg
ins
jecxz
loopne
pop
fstp
popa
mov
jl
loope
mov
loope
cmps
cli
dec
mov
add
mov
pop
mov
mov
sbb
sub
mov
sbb
test
data16
adc
mov
mov
xor
outs
sbb
fwait
retf
in
xchg
adc
(bad)
int
arpl
fisubr
imul
pop
jo
dec
ficom
movs
xchg
jmp
imul
aas
ficomp
pop
adc
sti
pop
addr16
stc
inc
out
mov
es
xor
mov
adc
push
fwait
add
jge
push
cmp
inc
pushf
ror
js
pop
aaa
in
fidiv
jne
mov
jmp
shl
pop
push
out
push
xor
dec
push
jo
add
call
mov
adc
add
sub
cmp
adc
adc
cmp
cs
ss
jne
add
mov
rcl
lahf
inc
jg
fcomp
inc
sahf
sub
inc
xchg
ficom
stos
jo
sbb
xor
cmp
mov
push
(bad)
shl
jl
xchg
sar
mov
or
out
shl
cmc
icebp
push
inc
lea
loope
repnz
and
push
mov
sbb
imul
or
mov
ret
scas
out
test
pop
lds
cwde
inc
call
daa
jp
jp
outs
fcomp
mov
fcmovnu
mov
inc
add
push
es
cwde
xlat
arpl
pop
jl
dec
shr
aas
out
jmp
jmp
pop
sbb
inc
jns
xchg
lea
mov
dec
xor
ins
dec
movs
clc
or
xchg
rol
sub
or
sbb
pop
loopne
xor
cmp
jge
jp
jmp
jle
aas
dec
pop
stos
jne
shl
xor
mov
mov
mov
cmp
mov
mov
mov
jne
sbb
arpl
fwait
jg
test
(bad)
in
push
arpl
lods
sub
push
shl
(bad)
mov
jmp
xor
(bad)
daa
jge
clc
mov
psllq
cli
rcr
inc
mov
jge
mov
arpl
(bad)
mov
mov
mov
adc
enter
cmc
(bad)
(bad)
mov
sbb
test
push
cmp
pop
imul
and
xchg
movs
jno
jnp
cmp
mov
test
pop
jnp
sub
stc
mov
mov
ds
mov
jecxz
in
jmp
adc
lds
sbb
je
jbe
xor
test
stos
lds
and
test
ret
daa
(bad)
inc
sub
xchg
mov
or
movs
and
cwde
retf
pop
ss
nop
nop
cmps
lods
push
lds
xor
jmp
add
mov
add
cs
push
mov
adc
xchg
inc
(bad)
cmc
xchg
cmp
sbb
cmp
dec
ret
add
pop
test
and
xchg
(bad)
ins
xchg
and
pop
pop
or
xlat
gs
hlt
nop
in
cdq
or
xor
jle
call
mov
mov
push
mov
aas
sub
fs
and
jecxz
mov
dec
jg
popf
loop
jb
scas
fs
push
or
mov
fidivr
jnp
movs
not
cmp
pop
and
cmp
fstp
mov
fwait
xchg
(bad)
div
xlat
mov
mov
les
mov
ins
add
xchg
sahf
mov
mov
mov
sub
enter
ss
sub
jecxz
loop
gs
or
jo
fld
not
pop
push
push
stc
mov
xor
test
test
cwde
and
test
lods
sub
xchg
cdq
jmp
in
dec
clc
add
or
data16
xchg
leave
jl
or
fs
rcl
cld
mul
cld
dec
out
mov
adc
rcl
dec
adc
and
daa
push
mov
iret
adc
cli
imul
jl
mov
dec
sahf
add
jecxz
fcomp
test
xchg
rcl
sbb
aaa
out
aam
add
add
cmp
hlt
lahf
fdiv
sub
xor
push
jb
test
or
fist
jno
imul
xor
in
cs
dec
cmp
mov
(bad)
xchg
leavew
jecxz
ss
cli
out
add
inc
dec
xchg
call
idiv
repnz
sbb
enter
out
mov
call
xor
fwait
test
push
test
and
fs
gs
inc
inc
sbb
sub
dec
mov
and
sub
scas
enter
inc
xchg
xor
dec
push
mov
dec
xor
loopne
shl
leave
sbb
mov
mov
sbb
mov
mov
ficomp
xchg
jl
add
mov
dec
sub
push
mov
(bad)
mov
sti
daa
fnstenv
(bad)
inc
mov
fcom
jp
sbb
aas
pop
jl
int3
push
inc
xor
dec
pop
inc
pop
scas
shl
inc
pop
ins
pop
mov
shl
inc
jg
xchg
xor
fild
in
push
movs
mov
mov
jecxz
rcr
in
lods
adc
out
mov
das
loop
in
jo
and
(bad)
and
retf
pop
adc
aas
gs
mov
dec
leave
dec
inc
inc
cmp
cmp
xchg
loop
icebp
aad
mov
push
mov
mul
and
arpl
pop
(bad)
push
sbb
fdivr
fldenv
out
pop
lods
mov
mov
retf
inc
mov
jbe
mov
adc
sub
popa
lahf
push
not
push
sti
mov
inc
jmp
fst
(bad)
push
stos
xchg
hlt
lock
cdq
retf
xor
or
sbb
int3
add
inc
adc
xor
ins
mov
jmp
jns
push
sbb
in
sub
mov
shl
repnz
lea
xchg
push
inc
xchg
aaa
mov
popf
jnp
stos
mov
aas
or
mov
sti
add
sbb
rcl
shl
sbb
cld
xchg
sbb
jg
ins
cwd
cmc
ja
xor
xchg
ret
lahf
adc
jno
inc
pop
ret
mov
inc
lds
xchg
(bad)
dec
pop
adc
push
sub
pop
movs
push
arpl
push
adc
cmp
xchg
or
mov
push
xchg
mov
out
das
add
mov
sbb
movs
cmp
scas
inc
pushf
sub
mov
out
inc
mov
fadd
xchg
jmp
and
adc
sub
mov
jb
movs
dec
jbe
sbb
mov
jae
jg
es
ret
ins
push
adc
fwait
cmp
jns
pop
mov
push
ja
lods
ja
out
pop
cmp
in
(bad)
retf
cmp
imul
or
jge
xchg
fnstsw
shl
sub
ret
push
(bad)
push
arpl
xchg
inc
mov
pop
jp
lock
inc
sbb
ds
popa
rcl
ss
push
(bad)
call
std
mov
test
pop
mov
inc
pop
fistp
leave
adc
sub
cdq
and
push
nop
ja
sbb
and
jne
rol
scas
(bad)
pusha
cmp
inc
call
out
cmps
xchg
ins
imul
inc
sub
inc
add
mov
iret
aas
pop
cs
mov
xor
into
push
outs
not
sub
mov
shl
add
loopne
jp
cmp
jl
xchg
ret
cmps
mov
mov
les
sbb
jle
lds
aas
xchg
das
pop
jnp
inc
xchg
ret
and
dec
movs
idiv
sbb
and
pusha
dec
sbb
cmps
mov
in
push
sti
popf
add
and
pop
les
fbstp
rcl
sub
imul
ins
iret
iret
mov
lahf
pop
mov
aaa
loop
shr
mov
adc
push
arpl
int3
bound
or
in
pop
inc
iret
repnz
lea
xor
sub
outs
lods
clc
or
das
mov
jle
out
(bad)
xor
mov
push
scas
dec
cmp
xchg
jns
retf
cmp
jnp
jne
lods
and
pop
aaa
out
fidiv
hlt
xchg
jl
mov
sbb
dec
inc
ds
sbb
or
(bad)
mov
popf
mov
inc
fisttp
fistp
call
mov
fwait
inc
popf
in
pop
int3
dec
xor
stos
jmp
ins
xor
int3
std
pop
clc
pusha
mov
mov
push
xor
stos
aad
push
mov
push
rol
enter
bound
pop
xor
adc
sahf
xor
cmp
add
or
add
jne
or
loopne
mov
dec
ja
push
mov
jl
cmps
add
mov
icebp
sbb
push
jecxz
xchg
aad
nop
mov
cli
pop
sub
inc
xor
inc
scas
mov
xor
xor
inc
popa
hlt
setns
in
mov
mov
dec
pop
sti
inc
lods
push
or
and
xchg
dec
inc
mov
ins
jo
pop
mov
mov
inc
imul
and
fcmovbe
rol
xchg
rcl
out
and
mov
add
adc
les
imul
retf
or
sub
ret
adc
mov
iret
(bad)
lock
dec
inc
adc
cli
sub
xchg
inc
add
imul
lea
pop
les
ret
nop
scas
jns
test
add
idiv
jecxz
or
jae
aaa
dec
daa
pop
push
loopne
sbb
mov
ret
movs
lods
into
mov
adc
dec
inc
cmp
mov
adc
stos
out
sub
mov
add
pop
js
(bad)
dec
jge
cmp
(bad)
(bad)
mov
xchg
setle
and
pop
scas
xor
adc
xlat
jns
bound
or
jge
mov
enter
jge
mov
push
cdq
movs
pop
test
mov
cli
std
xlat
push
cmp
cmp
mov
sar
push
test
call
adc
shr
ret
and
int
xor
retfw
push
hlt
jge
lahf
out
fst
mov
stc
adc
cmp
ret
stos
adc
inc
and
xchg
inc
push
aaa
mov
adc
sbb
jge
mov
lods
push
in
push
mov
jle
inc
sub
call
pop
xor
ds
push
sbb
xor
loope
out
and
loope
jae
ret
test
cmp
ret
fiadd
add
jg
jmp
repz
fidivr
fwait
adc
jnp
xchg
add
pushf
fmul
and
and
addr16
pusha
mov
add
push
mov
test
add
and
adc
adc
add
push
add
inc
pop
add
popa
sub
aam
mov
sti
and
fnstsw
dec
or
repz
jo
icebp
push
hlt
lds
imul
fidivr
inc
mov
cld
push
xchg
sbb
std
cmp
jbe
jnp
iret
mov
mov
cld
mov
xor
cmp
or
inc
lds
in
jmp
ins
xor
lahf
outs
and
into
push
inc
movs
inc
mov
daa
loopne
and
pop
xchg
in
pop
ret
lods
push
repnz
add
outs
pop
push
inc
adc
(bad)
aam
jnp
sbb
and
sub
add
fnsave
cmp
sar
mov
fisub
inc
rcl
and
pop
test
sahf
pcmpgtw
stos
(bad)
js
daa
xchg
pop
popa
xor
es
lahf
inc
dec
mov
call
punpckhdq
push
(bad)
cmc
mov
outs
cs
call
jbe
mov
mov
fldcw
repz
jecxz
mov
retf
xor
push
(bad)
jmp
jne
mov
aad
push
inc
test
stc
in
inc
dec
mov
adc
jnp
imul
fmul
sub
jns
lock
cld
push
mov
and
jne
repnz
jle
aam
mov
fild
push
xor
es
pop
shr
push
stc
add
mov
not
sbb
shl
cmps
retf
retf
sub
and
out
popf
inc
leave
test
xchg
shr
or
shld
pop
jl
pusha
pop
mov
cmps
jp
ins
jbe
outs
retf
mov
jmp
sub
fadd
adc
cs
push
mov
adc
and
push
xchg
call
lods
pop
pop
loopne
xchg
mov
pop
call
vmread
out
sub
jl
push
adc
dec
fwait
leave
sub
shl
xchg
inc
leave
sbb
dec
fstp
mov
pop
aad
in
or
xchg
adc
sbb
xor
stos
inc
and
cmp
mov
dec
outs
jmp
daa
inc
sub
push
pop
int
xchg
(bad)
inc
cmp
div
sub
and
inc
loopne
mov
repnz
pop
xchg
int
mov
pop
lea
icebp
inc
cmp
imul
jnp
test
sbb
aad
add
jno
ja
les
imul
iret
push
imul
stc
and
jne
shr
pop
inc
lahf
scas
inc
jmp
ret
stos
push
adc
bnd
xchg
mov
fs
ret
xor
pop
call
dec
mov
fwait
adc
jmp
stos
js
inc
loopne
mov
pop
in
or
add
xchg
out
adc
aas
rcr
neg
mov
mov
pop
jg
adc
scas
scas
xchg
pop
dec
adc
repnz
popf
sar
inc
setb
dec
add
repz
cli
and
fsubp
adc
jmp
fisubr
outs
(bad)
jmp
jp
jp
gs
test
ins
repnz
push
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
outs
ds
out
or
sar
pop
pusha
mov
pop
mov
add
fs
push
loop
push
pop
mov
ret
add
fdivr
neg
hlt
loope
push
push
pop
pop
sahf
mov
neg
mul
mov
jg
push
jae
rcr
fdivr
call
cmp
jo
out
adc
adc
out
mov
mov
mov
adc
mov
xor
cmps
cmp
mov
lods
loop
jge
ins
in
ins
jl
retf
push
sti
push
jmp
jo
fsub
rol
ror
or
inc
or
adc
adc
adc
adc
sub
cwde
adc
sub
sub
dec
and
pop
sbb
adc
mov
inc
add
xchg
add
add
xchg
sub
dec
loopne
rcr
pusha
and
pop
jo
cmp
mov
push
mov
push
movs
or
stos
add
push
pop
mov
sub
shl
dec
add
or
nop
and
ror
mov
xor
dec
and
push
add
or
or
jb
pop
add
popf
adc
jns
pop
call
adc
push
mov
sub
sub
clc
sub
sub
or
ret
outs
push
dec
mov
outs
sub
repnz
aad
sti
loop
xchg
in
and
mov
mov
scas
inc
mov
dec
mov
sub
ret
(bad)
dec
jl
jo
outs
sub
in
repz
scas
mov
cmp
pop
cmps
hlt
mov
cmp
inc
jbe
les
shr
xlat
mov
lds
and
mov
fmul
in
mov
test
xchg
cmp
mov
adc
pop
and
retf
icebp
jno
add
loopne
(bad)
retf
ins
mov
mov
mov
inc
sbb
ds
shr
mov
mov
pop
pop
ret
dec
call
sahf
cli
ins
mov
xchg
mov
sti
sub
fmul
mov
xor
mov
jae
jno
retf
ret
shr
cmp
pushf
ds
dec
ret
mov
inc
cmp
cmp
outs
and
retf
pop
push
jmp
cmp
mov
mov
repz
pop
test
jb
pushf
dec
pop
(bad)
sbb
ss
lods
neg
lea
ror
cwde
loope
pushf
or
mov
bts
outs
or
push
in
xor
dec
xchg
push
div
aas
test
pop
cmp
push
imul
push
ja
add
dec
movs
imul
imul
into
(bad)
lds
(bad)
sahf
cdq
out
push
xchg
outs
lea
sub
out
push
fcomp
imul
jecxz
push
mov
push
fisub
retf
xor
leave
ret
daa
repnz
(bad)
push
(bad)
or
dec
retf
jg
mov
push
lods
cmp
in
add
and
repz
xchg
push
shr
jp
mov
mov
cmp
out
inc
cmp
pop
mov
test
loopne
inc
test
jp
cmps
scas
sbb
jecxz
push
sti
cmps
and
leave
int3
jno
aam
pop
mov
cwde
loopne
imul
jmp
xor
cmps
xchg
inc
lahf
lds
neg
rol
xchg
jno
lock
xlat
cmps
leave
enter
cwde
rcr
movs
mov
sahf
mov
aad
mov
mov
xchg
nop
xchg
and
pop
fild
int3
in
dec
stc
bound
shl
test
cmp
dec
call
sbb
dec
cmp
xchg
and
fadd
cmp
xchg
jne
lds
not
(bad)
pop
add
in
shl
xor
pop
fbstp
and
aas
call
inc
repz
out
test
mov
mov
in
movs
jle
mov
je
inc
pop
mov
ret
jb
mov
hlt
mov
aas
std
inc
sub
aas
call
(bad)
jp
js
mov
ret
mov
dec
(bad)
push
in
xchg
or
xor
push
aaa
shl
cmc
mov
sar
js
repz
fiadd
mov
clc
dec
add
xchg
lock
jmp
dec
dec
cmp
jmp
div
outs
scas
cmc
iret
sub
push
ins
ds
cld
add
mov
mov
(bad)
cli
xchg
div
dec
pinsrw
fist
mov
scas
shl
pop
jnp
imul
adc
inc
ret
arpl
mov
sbb
ja
mov
lds
cmp
scas
inc
pop
aad
pop
in
cli
sbb
aad
in
jnp
pop
aam
loopne
xchg
jae
iret
lock
nop
mov
mov
push
icebp
or
sahf
xor
out
in
icebp
(bad)
push
xor
and
ficomp
push
shl
dec
push
ja
sbb
int
aas
push
mov
add
out
and
lahf
leave
cld
mov
stos
and
jmp
(bad)
cmp
retf
mov
repnz
rcl
jno
mov
lahf
add
and
test
jecxz
xor
xchg
shl
push
inc
loopne
xor
jmp
add
sub
sub
mov
mov
xchg
push
inc
inc
xor
push
push
dec
xor
jne
push
dec
dec
jmp
sbb
ror
mov
xor
jp
das
sub
jle
(bad)
mov
mov
popf
cld
daa
push
sahf
pop
lods
clc
xchg
xchg
ss
ins
imul
loop
add
and
fwait
cmp
jmp
cmp
js
add
dec
and
cmp
xchg
jle
push
fidiv
xchg
dec
nop
fwait
mov
ja
dec
sub
cmp
scas
test
cwde
dec
inc
push
xchg
inc
sub
add
mov
pusha
xchg
aad
ins
sub
dec
shr
dec
shl
pop
bound
pop
dec
adc
push
adc
adc
adc
int3
rcl
fcom
fisub
sub
movs
sub
(bad)
fcmovbe
pop
push
test
ins
xlat
test
ins
push
adc
bound
test
inc
adc
fldenv
and
pushf
cmp
in
mov
jl
enter
adc
out
rol
xor
xchg
outs
das
(bad)
mov
dec
xor
(bad)
mov
leave
and
pop
mov
mov
lds
mov
std
jno
xchg
jl
sbb
call
mul
sub
and
push
jg
inc
int3
adc
(bad)
pcmpeqb
mov
loope
outs
je
cmps
test
add
xor
mov
pop
dec
inc
push
movs
sbb
mov
in
loope
cmp
push
(bad)
stos
rol
sbb
jp
dec
add
mov
and
fistp
lods
and
neg
das
mov
dec
jns
cmp
ret
mov
dec
rcr
push
(bad)
and
lea
ins
fmul
sahf
fcomp
(bad)
retf
add
or
jae
scas
ss
mov
into
mov
mov
rol
retf
cs
inc
rcr
lods
fmul
test
daa
pop
or
out
mov
enter
enter
fnsetpm(287
imul
out
adc
call
fdivr
or
imul
test
add
movs
sub
shl
fs
or
lock
jge
icebp
mov
sbb
ret
cmc
stos
test
icebp
outs
clc
dec
or
or
add
loope
mov
add
mov
lods
loopne
inc
int3
sub
ja
and
fwait
aas
inc
lods
jnp
dec
xlat
mov
leave
jp
add
arpl
cs
or
retf
or
dec
adc
cwde
aad
cmps
or
fild
ins
gs
scas
push
add
cmp
inc
dec
and
push
test
push
inc
cld
jne
mov
into
inc
lock
into
mov
push
pop
and
outs
mov
arpl
jecxz
das
out
imul
inc
andnps
xchg
ds
pop
fwait
out
jnp
pop
add
les
stc
xor
sub
dec
(bad)
fbld
sbb
mov
inc
cmps
bound
ja
push
out
cmps
cld
pop
and
scas
pop
xchg
fnstenv
imul
out
jecxz
push
shl
dec
mov
jb
dec
rcl
mov
bound
and
repnz
and
pop
shl
ja
lahf
aaa
test
fwait
je
fcomip
sbb
pop
ss
push
arpl
sbb
sbb
lds
mov
leave
xchg
(bad)
test
mov
stos
(bad)
xchg
xchg
push
jmp
aaa
inc
pop
xor
imul
cmp
push
add
fld
ins
fnstenvw
(bad)
cli
mov
push
jecxz
int
sbb
xchg
ffree
push
psrld
or
sub
or
je
xor
xor
cmp
not
dec
pop
lods
stos
push
mov
sub
in
and
or
push
std
jg
jge
arpl
jnp
out
ret
xor
pop
retf
test
cmp
jns
jno
push
xchg
popa
daa
add
(bad)
fwait
repz
jne
clc
call
and
scas
mov
jne
cdq
jecxz
mov
(bad)
(bad)
dec
fsubr
push
jns
mov
ficom
std
and
call
and
(bad)
push
sub
aad
cmp
mov
movs
int3
mov
out
sub
jecxz
xchg
push
cmc
push
lds
mov
xor
mov
push
(bad)
mov
dec
cmps
sub
adc
ins
dec
push
add
jae
loope
xor
jmp
jns
cmps
cmp
or
cs
push
push
mov
(bad)
sbb
ss
imul
stos
and
cmp
in
out
mov
or
ds
and
sbb
push
or
inc
add
mov
std
pop
fadd
fdivp
inc
mov
mov
pop
dec
cmps
adc
jmp
xor
stos
dec
mov
add
jmp
popa
push
call
fwait
dec
mov
sahf
fs
xchg
sbb
xor
pop
mov
xchg
jae
call
xchg
mov
mov
jl
mov
sub
movs
js
jns
or
cwde
lock
test
sub
add
push
mov
mov
mov
mov
test
repz
xor
mov
leave
in
and
pop
dec
inc
or
push
test
(bad)
jl
daa
daa
inc
cwde
push
enter
sbb
loopne
xor
test
repz
out
call
mov
cwde
mov
aaa
lods
push
xlat
out
sbb
jbe
pushf
cmp
sub
add
or
push
jmp
popf
call
daa
jo
cdq
adc
dec
jb
retf
jnp
ror
xor
ja
mov
add
inc
cwde
ins
inc
jno
sti
stos
cli
mov
sbb
lock
xchg
mov
cmc
aam
cld
mov
scas
mov
push
stos
sub
mov
jns
cvtps2pd
sub
jns
push
inc
cmp
xchg
jle
pop
stos
mov
inc
(bad)
xor
imul
sub
imul
sahf
sar
out
inc
xchg
pushf
in
mov
inc
xchg
push
cmp
mov
movs
fidiv
cmp
adc
in
out
in
cmovnp
add
mov
push
mov
jbe
pop
mov
popa
out
mov
aam
popa
jbe
push
lods
movs
popf
les
cmc
mov
idiv
addr16
stos
cmp
and
loop
in
cs
aad
(bad)
cwde
mov
dec
gs
test
rol
clc
neg
out
mov
xchg
jp
cmp
xchg
push
adc
mov
mov
aad
cmp
xchg
rcr
into
aad
out
je
add
inc
pushf
and
pop
(bad)
xor
rcl
enter
and
stc
and
ins
test
out
or
cmp
adc
fisubr
arpl
dec
push
jns
stos
inc
xchg
cmp
pop
fsub
dec
inc
mov
add
mov
lods
ins
inc
inc
pop
push
inc
in
sbb
xor
add
push
push
jae
ret
push
cmp
add
data16
add
push
and
xor
idiv
daa
sub
in
cs
add
stos
lods
adc
into
dec
sub
cmps
aaa
cmp
dec
adc
in
cmc
cdq
sub
test
pop
xor
dec
(bad)
or
and
adc
sbb
mov
retf
test
fsub
imul
stos
cmp
call
int
jo
icebp
push
in
sbb
adc
push
inc
rcr
inc
inc
and
clc
or
jo
xchg
fistp
xchg
icebp
int3
push
xchg
test
movs
(bad)
out
mov
leave
mov
popa
loopne
movs
fsub
dec
mov
adc
and
cmps
add
jbe
shr
jg
ins
xor
push
mov
and
jno
div
repz
je
jge
ret
xor
mov
xor
adc
cmp
push
mov
jp
les
int3
cmc
pop
(bad)
movs
lds
sub
cmps
mov
push
ja
mov
imul
daa
std
or
dec
das
or
push
js
xor
(bad)
or
in
rol
xor
movs
stos
lea
xor
jns
dec
test
xor
fwait
loop
add
loopne
push
sub
add
out
mov
mov
loope
cmc
out
int
psraw
cmp
sub
fwait
sbb
(bad)
mov
dec
inc
test
popa
sbb
cdq
push
rcl
push
shl
test
mov
movs
mov
dec
pop
xchg
movs
mov
cld
jnp
in
cmc
stos
in
stc
sbb
mov
call
inc
loopne
jg
popa
mov
adc
or
jle
div
push
(bad)
xchg
pop
dec
mov
fucomi
fsub
adc
dec
mov
sub
push
mov
pop
fst
stos
dec
out
in
rcl
sub
int
in
call
imul
sbb
jp
jae
mov
(bad)
mov
adc
loop
(bad)
pop
and
in
push
fs
add
mov
mov
jns
lock
jae
add
es
loop
call
mov
pop
pop
pop
and
data16
(bad)
pop
cmp
jge
sub
inc
mov
ja
ins
mov
add
fidivr
fwait
repnz
and
sub
popa
xchg
call
cmp
xchg
ja
dec
dec
int
ja
jne
mov
stos
(bad)
jo
push
cmc
ja
push
add
xor
aad
xor
popf
sub
in
cs
pop
mov
xlat
nop
sbb
xor
dec
inc
shl
xchg
sbb
je
ss
call
es
and
dec
dec
mov
fnstenv
outs
test
push
(bad)
sbb
scas
into
mov
push
out
and
push
into
pop
push
js
adc
sbb
(bad)
shl
dec
push
add
(bad)
jmp
lahf
jmp
in
xor
aaa
jno
aas
sub
pop
push
xor
push
stos
cdq
dec
shr
sar
and
repz
add
ja
jmp
mov
out
mov
cs
(bad)
shl
and
jmp
cmp
loop
hlt
ins
mov
fst
fstp
jne
push
cmps
fdiv
loopne
jns
sub
jmp
add
xor
xchg
cmp
cmc
stc
inc
jecxz
xchg
mov
cmp
ret
aam
dec
adc
out
inc
aam
cwde
je
call
xchg
in
sti
mov
mov
xchg
retf
mov
cmp
fst
js
add
and
mov
fdivr
pop
mov
or
ror
div
rol
cmp
addr16
stos
outs
aam
xchg
call
jecxz
jns
loop
cmc
shr
fnsave
mov
push
stc
sbb
add
xchg
push
mov
out
jle
(bad)
push
pop
mov
mov
pusha
mov
inc
test
and
(bad)
in
xchg
push
adc
stc
mov
aas
xchg
jb
sti
and
fstp
mov
das
xchg
mov
loope
jmp
mov
inc
inc
xlat
(bad)
push
xchg
sbb
fild
lods
loope
dec
cmp
fs
add
sbb
test
inc
fs
mov
mov
pop
inc
push
fnstcw
inc
inc
mov
test
adc
jle
sbb
sar
jecxz
adc
inc
stc
(bad)
loopne
ds
lock
out
call
iret
(bad)
mov
pop
xchg
push
ja
xchg
mov
xchg
inc
adc
and
enter
sti
fsubr
mov
fnstcw
es
sbb
hlt
mov
(bad)
(bad)
ja
dec
and
xchg
dec
fldcw
ins
push
inc
add
add
xor
jae
fldcw
test
jmp
in
fadd
cwde
mov
mov
xor
and
adc
dec
inc
fwait
xor
fcom
js
adc
ret
mov
jecxz
add
pop
in
data16
pop
xchg
push
inc
fstp
cmps
pop
loope
sbb
dec
outs
mov
int3
push
imul
mov
inc
rol
xchg
cmc
sti
out
sub
mov
(bad)
mov
fisubr
xchg
jl
and
xchg
xchg
popf
or
jecxz
pop
test
adc
stc
inc
mov
jno
(bad)
cld
pop
pop
adc
adc
data16
add
stc
test
movs
nop
test
push
inc
adc
dec
mov
mov
inc
dec
pop
jle
dec
add
aam
lods
sbb
sub
je
sahf
mov
mov
adc
(bad)
mov
out
shl
mov
mov
shl
mov
xlat
je
mov
and
inc
into
dec
bound
mov
out
lahf
aas
add
push
sbb
push
mov
sub
or
xor
test
or
jnp
jg
sub
fs
mov
xchg
dec
mov
les
mov
retf
mov
movs
xlat
ret
push
pop
xor
jb
and
jecxz
xchg
dec
ror
mov
retf
adc
leave
dec
xchg
xor
lahf
or
in
jb
lods
jns
lods
sbb
xchg
std
sbb
or
fild
xor
jo
jnp
dec
out
adc
xchg
sub
retf
pop
fdiv
aam
mov
push
cwde
sbb
scas
ins
cmc
and
dec
cmp
std
xor
imul
cmp
xor
mov
or
mov
or
xchg
mov
bound
out
xor
pop
repz
je
mov
lods
jmp
adc
nop
or
inc
mov
jmp
in
xchg
xor
fnsave
mov
sbb
mov
adc
cli
jae
es
inc
xchg
and
jmp
and
mov
mov
ins
ja
push
push
aam
dec
loope
jne
jge
or
mov
dec
ret
les
stos
pop
mov
mov
cmp
lahf
test
and
xchg
xchg
lock
enter
xchg
jmp
sub
(bad)
in
mov
test
mov
ja
rcl
push
push
or
jmp
in
sbb
std
mov
pusha
pop
add
or
fisub
repz
aam
xchg
out
fs
mov
cmc
das
aaa
loop
js
jl
addr16
ds
or
adc
and
jmp
aaa
int
in
cdq
mov
pop
das
ds
dec
adc
mov
push
jmp
or
repnz
mov
pop
jmp
ja
mov
mov
aas
mov
xchg
inc
push
mul
mov
aas
xchg
jmp
push
mov
stos
cwde
aas
or
pop
sbb
push
cld
xchg
jb
and
and
scas
push
sub
ficomp
out
push
xchg
lahf
add
push
or
xchg
push
cmps
retf
lock
hlt
bound
sub
dec
xchg
inc
or
fild
loope
loop
lods
pushf
(bad)
and
imul
cmps
enter
pop
out
mov
dec
sub
and
dec
push
mov
mov
test
pop
jns
jbe
cmp
push
dec
mov
mov
lods
(bad)
mov
cmp
add
not
ins
movs
mov
jle
movs
into
pop
dec
std
jl
sub
retf
sub
in
mov
loop
aaa
inc
mov
push
enter
xchg
movs
and
cmp
adc
add
add
adc
add
sbb
lea
out
jae
adc
xor
jle
pop
loop
ins
std
adc
xchg
std
cmp
mov
cs
cmp
test
mov
pop
rcl
ins
xchg
shl
xor
jg
movs
xor
fwait
inc
popa
cmc
popf
dec
mov
xor
cmps
dec
sbb
mov
mov
sbb
inc
mov
lods
pop
(bad)
mov
cmps
and
cmp
shl
mov
jnp
cmp
or
aad
mov
jl
test
mov
mov
add
lds
enter
pop
pop
scas
xlat
scas
shl
xchg
add
jg
lods
jno
cmp
jle
sbb
arpl
std
or
push
addr16
mov
call
fs
rcr
(bad)
mov
xchg
stos
jmp
clc
ret
imul
lods
ret
(bad)
es
test
fistp
cmp
jo
cmp
pop
add
outs
jp
pop
push
mov
push
mov
loope
jne
test
(bad)
test
sbb
fild
test
ja
aaa
xor
scas
push
loop
mov
inc
adc
mov
add
sbb
aaa
pop
or
fnstcw
jbe
ror
sti
cmp
xchg
or
shr
add
xor
xor
dec
adc
sbb
pop
cdq
mov
mov
mov
(bad)
inc
xor
sti
pop
imul
mov
sbb
push
xchg
loop
and
retf
inc
mov
adc
cmc
cmp
movs
dec
imul
and
mov
adc
adc
pop
jle
cli
test
or
sbb
jg
lods
inc
shr
dec
fld
adc
mov
cmp
cdq
sub
push
ins
push
add
sti
sbb
test
mov
stos
push
dec
out
frstor
and
and
jp
mov
cmp
adc
xchg
imul
sahf
jge
lea
stc
in
or
xchg
dec
and
ret
fild
retf
inc
scas
push
xchg
inc
mov
push
les
or
js
push
add
push
mov
xchg
jg
stc
jno
aas
clc
dec
jnp
add
adc
and
sub
mov
adc
loopne
jae
pop
xchg
push
test
adc
aas
xor
dec
js
inc
hlt
inc
dec
loop
repz
leave
add
fstp
mov
inc
inc
and
aaa
sti
sub
fidiv
sub
dec
cld
cmp
movs
loopne
sub
mov
cmp
jnp
xor
outs
cs
push
inc
and
pop
push
mov
mov
popa
out
mov
aad
cdq
mov
pop
sub
xlat
in
pop
fcom
fwait
xchg
popf
mov
es
nop
xor
idiv
repnz
sub
cmp
dec
dec
mov
jecxz
ret
sbb
mov
sub
adc
mov
xchg
jmp
cmp
loope
pop
inc
in
(bad)
xchg
sub
repz
in
sub
xor
dec
je
lock
les
sbb
rcl
in
push
jbe
not
test
ret
cmps
cmc
pop
mov
repz
jg
push
mov
push
sysenter
jmp
inc
sbb
adc
lods
lahf
aad
jno
cmp
std
cmps
out
push
inc
sub
out
imul
dec
mov
repz
mov
jp
mov
pop
xor
shl
mov
push
(bad)
aaa
mov
adc
sub
in
inc
inc
sbb
dec
daa
add
push
shr
movs
pusha
rcr
hlt
aas
movs
js
xchg
ins
or
sub
mov
sbb
pop
fisubr
std
jp
mov
fild
xor
add
test
mov
jmp
inc
int3
fwait
jl
hlt
outs
das
push
ds
dec
outs
mov
adc
cdq
xlat
scas
adc
mov
ss
and
xor
scas
mov
sbb
jmp
jge
bound
pop
push
dec
(bad)
cld
ins
xor
pop
mov
stc
js
imul
loope
cli
cs
ins
fs
scas
inc
and
imul
jae
jbe
sub
jge
push
add
xor
sbb
outs
into
not
dec
push
cwde
je
dec
ret
mov
clc
mov
mov
shr
mov
lock
in
jl
ror
mov
jp
xlat
sbb
cmp
cmps
mov
cs
les
es
das
cmp
ds
ds
(bad)
dec
mov
add
adc
sahf
pop
repz
mov
pushf
adc
sahf
push
mov
push
retf
sub
dec
es
(bad)
cmp
pop
or
cmp
and
inc
les
push
and
into
lods
jnp
in
sbb
adc
sub
lods
xchg
lods
xchg
inc
inc
sbb
ins
push
cwde
mov
add
adc
lock
pop
cmp
sar
rcl
sar
sub
frstor
mov
jg
mov
mov
push
iret
cmp
retf
cmp
aaa
inc
sub
call
nop
cmp
and
jno
es
jp
add
mov
fwait
sahf
sbb
fsub
mov
ficomp
sbb
bound
dec
mov
mov
fld
push
sub
aaa
outs
retf
push
xor
push
pop
loopne
sti
and
cmps
sbb
stos
shr
stos
ins
dec
sub
dec
lods
mov
test
xchg
in
ror
pop
lahf
dec
and
(bad)
sti
add
nop
push
inc
dec
mov
sbb
cld
fs
aaa
ret
mov
loope
imul
push
outs
fild
mov
aaa
mov
push
dec
ins
sti
adc
into
adc
mov
xor
sbb
retf
stos
mov
icebp
xor
sub
push
adc
sbb
xor
pop
(bad)
ds
popa
pop
pop
xchg
std
pop
std
mov
adc
rcr
js
std
cmp
repz
pop
cli
push
aas
mov
sbb
js
cmp
in
dec
cwde
pop
and
into
stos
pop
mov
sub
dec
xchg
leave
sub
das
mov
je
adc
cmp
push
sbb
xor
inc
jmp
and
pop
jae
adc
mov
vmwrite
mov
lahf
je
pop
(bad)
mov
int3
in
pop
mov
repnz
lods
adc
jmp
pop
xchg
cwde
sbb
out
cmp
ins
hlt
shr
scas
dec
push
icebp
push
or
jb
aam
fstp
xchg
mov
sub
(bad)
popf
scas
movs
jns
imul
pop
pushf
ins
call
ror
jge
mov
test
push
and
aam
mov
mov
sbb
aam
loopne
stos
mov
sub
clc
(bad)
jl
push
add
lahf
(bad)
inc
ins
int
adc
out
pop
das
mov
cmps
pop
add
test
push
shl
mov
aaa
or
dec
ficom
aad
adc
mov
lods
ds
dec
(bad)
repz
dec
jle
(bad)
jno
shr
push
(bad)
(bad)
popf
fistp
mov
addr16
dec
mov
push
div
pop
js
(bad)
jle
dec
pop
push
(bad)
and
sti
adc
xchg
cmp
push
shl
adc
sbb
mov
ror
xor
fsub
jnp
mov
mov
sub
xor
xor
adc
sbb
pop
push
or
mov
pushf
mov
clc
or
cmp
mov
jmp
push
adc
adc
mov
outs
lods
mov
mov
jecxz
jae
xchg
jae
rep
in
cli
jno
(bad)
cmp
or
fwait
retf
pop
in
fld
call
cmp
out
or
dec
daa
fwait
add
jge
xchg
mov
clc
sbb
sar
cmp
jg
jbe
cld
leave
repz
xchg
cmp
inc
jecxz
mov
inc
and
lahf
fild
fistp
int3
inc
daa
data16
gs
dec
(bad)
or
iret
(bad)
aad
aaa
jg
in
xchg
xchg
mov
jb
inc
int
ins
ins
loopne
mov
or
xlat
mov
test
and
mov
(bad)
mov
retf
cmps
pop
fwait
in
test
in
pop
push
jl
(bad)
loopne
jle
xchg
pop
std
es
cmp
hlt
in
(bad)
pop
dec
adc
loope
lods
sahf
xor
dec
sub
xchg
fild
dec
punpckhwd
cmp
enter
(bad)
ins
out
or
loop
push
dec
inc
rcr
xor
mov
cld
movs
push
mov
popa
push
pop
jmp
cmc
rcl
lea
ds
mov
dec
jbe
(bad)
dec
(bad)
mov
ffree
mov
jp
jno
outs
dec
mov
mov
into
cwde
fsub
sbb
fldcw
clc
inc
jl
pushf
add
sbb
std
jg
jp
xor
mov
(bad)
xchg
and
pop
mov
hlt
fwait
stc
fisubr
dec
jge
movs
sub
or
jae
sub
popf
stos
int3
(bad)
xchg
fs
jb
dec
je
mov
retf
cmc
push
sar
mov
movs
pop
mov
retf
sbb
pop
mov
add
leave
push
xchg
(bad)
int
push
lods
jp
stc
sub
div
shl
cmp
xor
adc
cmp
ja
sub
sahf
inc
adc
inc
retf
out
sub
cli
xor
inc
fisttp
xor
ss
cdq
mov
aaa
fild
mov
(bad)
icebp
and
add
mov
jg
sbb
pop
(bad)
retf
out
or
jo
inc
or
xchg
movs
xchg
push
out
cmp
or
mov
xchg
(bad)
fs
mov
out
add
cld
cld
push
xchg
pop
jmp
and
dec
(bad)
adc
data16
push
push
fsub
fnsave
test
cs
jmp
pop
outs
xchg
pop
daa
jmp
push
mov
cmp
outs
mov
jle
imul
inc
retf
fisttp
sub
mov
sub
fwait
cmp
xchg
cld
jb
xchg
and
fdiv
mov
cwde
and
std
ss
ja
pop
jo
mov
xchg
push
movs
cmps
movs
cmp
ins
sbb
mov
fild
(bad)
cmp
mov
in
and
cwde
push
retf
sahf
inc
aam
inc
adc
xor
cwde
mov
js
fist
jecxz
jp
jns
outs
repz
fild
retf
pusha
xor
lds
push
push
jne
in
imul
sahf
mov
xor
popa
push
mov
lea
jle
pop
jb
test
cmps
mov
mov
mov
push
xor
mov
popa
pop
cmp
cmp
xor
mov
in
out
jo
imul
cmp
dec
js
cli
sbb
sbb
or
xchg
lock
jl
ret
jmp
or
fidiv
jnp
retf
arpl
sub
inc
add
addr16
xchg
gs
inc
mov
pop
aaa
mov
or
jmp
div
das
sbb
je
ret
pop
xor
sbb
sbb
jecxz
in
fwait
dec
jns
out
in
push
push
(bad)
call
adc
outs
inc
jg
imul
(bad)
aas
call
mov
jp
mov
repnz
mov
mov
pop
mov
scas
or
dec
push
mov
mov
xchg
push
add
push
loope
icebp
and
add
div
xchg
stc
ins
and
fimul
aas
fwait
mov
mov
lods
fdiv
repnz
stc
pop
xchg
sti
sbb
inc
sub
push
or
mov
leave
and
push
cmp
loope
leave
(bad)
xor
les
(bad)
out
mov
push
call
(bad)
push
addr16
cwde
jbe
in
mov
pop
push
jno
cmp
bound
in
(bad)
sbb
sub
mov
aaa
hlt
xchg
(bad)
sar
(bad)
mov
dec
imul
push
or
repnz
es
test
xchg
push
lahf
fwait
movs
mov
in
push
push
dec
sti
(bad)
imul
mov
ins
in
test
sar
ret
in
cmps
cs
(bad)
cmp
in
popf
dec
mov
arpl
lods
dec
nop
aad
gs
ins
jmp
fisttp
ficom
dec
ds
pop
repnz
and
xchg
mov
in
stos
mov
pop
push
cmp
pusha
inc
test
pop
and
or
mul
dec
sbb
add
xchg
jmp
sub
mov
idiv
mov
or
push
mov
mov
ret
mov
ret
mov
or
fst
push
pop
ret
lods
pop
mov
cmp
gs
cdq
dec
jmp
test
xacquire
das
les
stos
sahf
mov
xchg
xchg
fimul
hlt
int
test
inc
xor
or
popf
div
out
outs
jmp
cmp
lea
call
mov
xchg
movs
push
pop
out
stos
bound
ss
mov
lea
rcl
lahf
fcmovne
pushf
adc
jno
daa
mov
push
sbb
stos
arpl
sti
push
es
fucom
ds
fld
add
sub
xchg
fisttp
pop
mov
mov
out
dec
xor
or
jge
fst
std
call
call
adc
inc
mov
ret
and
mov
test
add
and
(bad)
(bad)
pop
xchg
jmp
and
xchg
jp
sub
mov
mov
cs
repnz
sbb
xlat
adc
mov
cmp
push
pop
stc
bnd
stos
ret
inc
out
push
jne
xchg
nop
sub
jle
xor
jne
push
in
jp
div
outs
cmp
cmc
sbb
aad
mov
add
pushf
inc
sar
ret
xor
jno
xchg
sbb
mov
mov
ins
(bad)
xchg
or
pop
retf
cli
inc
mov
sar
pop
or
ficom
jge
aas
mov
fwait
pop
add
xchg
push
xor
mov
xchg
jmp
dec
cwde
mov
inc
and
leave
pusha
inc
les
sub
test
js
xchg
popa
stos
rcr
out
dec
adc
retf
test
leave
ds
xchg
inc
loope
test
loopne
shr
adc
enter
pop
adc
sbb
pop
and
dec
mov
(bad)
jp
cdq
stc
xchg
sub
xor
xchg
(bad)
cmp
je
(bad)
loop
retf
lock
xor
ret
inc
arpl
push
lock
in
cld
pmulhuw
into
mov
(bad)
jecxz
mov
sub
retf
inc
and
inc
test
sbb
pop
fisubr
repnz
cdq
xchg
sbb
inc
hlt
aas
xchg
xor
adc
lods
sbb
mov
nop
jle
adc
in
jmp
mov
gs
gs
add
imul
mov
pop
mov
push
sbb
iret
cli
ret
ret
and
into
fild
and
aas
jmp
xor
fimul
test
mov
lods
pop
or
mov
jb
stos
ret
xchg
dec
int3
fdivr
data16
fstp
sub
cmps
arpl
bound
inc
xchg
into
and
aaa
pop
and
sar
lods
cs
mov
mov
into
cwde
scas
rcl
into
and
xchg
mov
in
aas
adc
test
dec
fstp
out
(bad)
shr
test
stos
dec
cmc
mov
xor
jo
int
cmc
lock
cmp
dec
push
mov
mov
cmp
xlat
cmp
sub
mov
ss
in
xchg
add
je
lods
inc
mov
or
jmp
out
call
sub
out
add
dec
mov
inc
bt
fstp
lds
fdiv
xor
fcmovb
mov
stos
mov
lahf
ins
outs
push
(bad)
dec
in
call
fs
adc
pop
push
mov
(bad)
sub
xor
out
int
jg
adc
mov
adc
lock
into
(bad)
pop
outs
fs
mov
inc
imul
pop
mov
lea
pop
pop
daa
add
ins
pop
and
mov
pop
add
lea
push
inc
cli
sbb
lea
and
and
xlat
test
and
cmp
clc
adc
pop
cwde
gs
lds
and
hlt
mov
pusha
ins
test
xor
aaa
enter
push
push
ss
mov
jbe
out
out
je
in
movzx
jecxz
aad
xchg
push
add
push
xor
push
call
lea
push
push
outs
loope
push
popa
mov
int3
jae
push
and
sar
or
loope
dec
loopne
sti
inc
pop
sub
(bad)
and
out
ss
sub
inc
mov
es
cmp
(bad)
mov
or
lock
(bad)
push
add
mov
arpl
loopne
sub
idiv
inc
xchg
jo
(bad)
cld
imul
lods
movs
(bad)
inc
test
mov
cmc
inc
stc
(bad)
pop
lahf
nop
scas
lea
int3
cmc
dec
shl
in
hlt
add
push
mov
(bad)
jmp
in
mov
lea
add
movs
jl
or
ret
pop
cmps
pop
mov
inc
jns
ret
push
iret
(bad)
xchg
cmps
mov
std
jge
pop
xchg
jno
xchg
(bad)
ss
jle
inc
popf
or
(bad)
(bad)
mov
or
push
loope
movs
mov
cmp
int
aaa
sbb
dec
movs
dec
outs
jg
jge
or
scas
or
inc
cmps
out
lods
test
sub
push
in
xchg
xlat
xchg
xor
jmp
enter
(bad)
or
in
shl
jbe
mov
push
out
pop
sti
add
repz
pop
mov
jecxz
dec
jne
dec
push
mov
sbb
mov
out
jb
mov
mov
scas
mov
pop
pop
mov
push
test
push
hlt
sbb
xchg
aaa
sub
rcr
ins
mov
xchg
(bad)
loope
xor
cmc
(bad)
cmps
loopne
stos
in
(bad)
clc
cmc
or
pop
addr16
call
lock
paddusw
cmp
sub
mov
mov
loop
inc
adc
and
movs
not
push
xor
cmp
outs
jne
fisubr
sbb
retf
or
xchg
xor
cmps
cmp
jg
scas
xor
mov
sub
xchg
sub
lea
retf
stos
arpl
daa
push
jle
ret
pop
mov
jb
pusha
cmps
mov
mov
sub
pxor
dec
pop
in
lahf
sti
jne
mov
sbb
xchg
xor
stos
xor
retf
mov
aad
sar
movs
inc
push
loope
inc
scas
daa
mov
lods
jae
cmps
das
jne
icebp
jg
xchg
jmp
aaa
push
or
and
ds
inc
ror
fmul
cli
cmc
ins
icebp
mov
popa
or
test
popa
movs
inc
arpl
or
mov
jne
loope
add
ss
add
retf
mov
cmp
or
(bad)
cmp
push
push
sbb
scas
pop
adc
add
xchg
xlat
jns
and
movs
outs
sti
pushf
xchg
cmps
inc
ja
mov
adc
cli
push
addr16
pop
or
pop
pusha
movs
mov
addr16
repz
cmp
jmp
test
jle
add
jo
dec
mov
jmp
push
mov
mov
adc
inc
xchg
push
test
sub
scas
push
scas
in
sub
ins
ins
mov
cli
mov
inc
(bad)
stc
div
pop
dec
call
imul
xor
stos
aad
xor
addr16
mov
cmp
loopne
retf
ret
adc
jmp
mov
(bad)
xor
(bad)
fsincos
inc
add
repnz
ins
lods
fbld
fxch
lods
aad
jecxz
sub
cld
or
mov
repz
mov
jbe
sbb
dec
push
and
cmp
stc
data16
movs
pop
jg
cmp
cmc
ins
and
jb
xchg
sub
jne
or
daa
out
push
jle
lds
iret
mov
in
stos
hlt
jo
sti
sub
into
jmp
pop
enter
mov
pop
popa
pop
adc
aaa
gs
dec
cs
inc
xor
push
xchg
push
adc
ds
addr16
clc
mov
inc
stos
nop
stos
pushf
mov
dec
sbb
iret
dec
cmp
mov
mov
or
add
pop
lock
test
push
in
or
je
hlt
and
mov
pop
in
xchg
test
fcomp
repnz
das
add
mov
inc
wrmsr
push
mov
ins
dec
pop
sbb
xchg
sbb
in
cmp
pop
fstp
popf
xor
or
out
vshufps
in
push
mov
icebp
xor
mov
addr16
aaa
mov
sub
adc
shl
fidiv
mov
cdq
add
leave
cmp
pop
pop
fld
lods
mov
imul
dec
int
in
ja
jbe
in
mov
mov
mov
xchg
cdq
fcmove
test
ret
es
cmps
xor
jae
sti
gs
clc
lods
in
jmp
sub
cmp
xchg
mov
adc
movs
mov
ficomp
aam
call
pusha
mov
or
fld
and
lods
shr
dec
push
cmp
test
xchg
dec
mov
mov
(bad)
inc
test
outs
shl
repz
std
std
repnz
inc
ret
push
xor
xchg
mov
repz
nop
push
mov
imul
or
cs
adc
and
add
dec
push
jno
stos
sub
sub
sub
adc
mov
fwait
mov
fcom
lahf
xor
test
out
jl
jo
movs
push
push
(bad)
ret
into
mov
and
retf
loop
pop
out
sub
stos
test
sbb
adc
xchg
fcomp
xor
xor
out
add
ins
scas
cmps
xor
push
cmp
xchg
stos
ins
pop
or
fwait
dec
fnstsw
iret
ins
push
inc
pusha
iret
movs
test
(bad)
dec
push
add
or
sub
les
and
jge
push
test
cmp
jge
fmul
dec
add
jbe
push
shr
or
push
leave
shl
out
out
shl
sbb
mov
lock
loopne
pop
pop
push
jb
add
dec
or
loop
loopne
pop
and
call
jmp
sub
inc
xor
lods
inc
jmp
das
fwait
out
inc
data16
sub
rol
in
nop
inc
test
xchg
in
and
xor
and
xor
iret
test
inc
cmc
inc
mov
xchg
cli
lahf
pop
mov
inc
mov
mov
ss
cmp
mov
push
pop
and
or
out
out
adc
int3
dec
jmp
add
dec
sub
cld
call
sbb
imul
adc
dec
cmp
loop
cmps
or
adc
sbb
mov
es
cdq
jge
sbb
jmp
gs
adc
(bad)
cs
and
retf
pusha
fnstenv
or
dec
or
js
cmp
fstp
add
mov
imul
into
pop
dec
lods
and
into
sbb
mov
and
inc
adc
test
and
inc
loope
xchg
hlt
sbb
clc
cmps
lods
ret
adc
dec
std
jge
xor
add
popf
dec
sbb
push
call
mov
mov
icebp
loope
mov
test
xor
mov
test
sub
fidiv
sub
mov
and
push
mov
stos
inc
push
mov
sahf
sub
cli
das
xchg
aas
xor
cdq
out
xchg
add
shl
mov
inc
mov
jmp
mov
add
push
mov
or
popa
sub
sbb
fdiv
pop
(bad)
sub
sbb
add
dec
fild
xor
mov
jp
mov
xchg
dec
cmp
and
pushf
adc
cwde
push
fstp
mov
and
jge
push
vmread
out
retf
and
repz
loope
and
cli
sti
rcl
lea
cmp
lea
icebp
bound
push
lea
xchg
cmp
mov
xchg
imul
add
jp
int3
pop
jno
mov
adc
xchg
mov
adc
mov
push
inc
retf
xchg
inc
les
mov
and
xor
pop
add
inc
leave
ins
fdiv
adc
sbb
retf
jge
ins
pop
or
cmps
fsubr
pop
cmp
fcom
jbe
std
sub
stc
xchg
cli
mov
test
sar
call
xchg
push
xchg
jge
cmp
pusha
sub
nop
jae
sub
in
int
jmp
out
cmp
add
ret
int3
pop
loop
cmp
call
push
sub
test
test
jp
(bad)
adc
lods
int
ds
or
lea
and
arpl
scas
(bad)
int3
arpl
jae
mov
dec
(bad)
push
adc
test
dec
jg
aam
dec
scas
dec
xor
dec
sub
jle
pushf
(bad)
pusha
stc
pop
pop
test
outs
jecxz
mov
test
gs
push
dec
xchg
pop
imul
cmp
xchg
or
or
pop
popa
(bad)
xor
shl
jmp
fidivr
daa
adc
mov
mov
stos
or
int
dec
mov
stos
stos
sub
push
inc
push
retf
mov
sbb
push
leave
bound
imul
div
add
mov
je
dec
rep
pop
outs
imul
mov
aam
xchg
pop
jo
mov
(bad)
rcl
mov
not
inc
scas
push
imul
inc
shr
addr16
shr
add
pop
(bad)
rcl
mov
in
push
out
xlat
rcr
push
push
cmps
fnstcw
jge
fnstenv
lods
pop
out
mov
(bad)
xchg
stos
push
cmps
and
lods
jecxz
fiadd
mov
cmc
fst
out
fiadd
dec
or
je
push
or
test
addr16
mov
xor
dec
push
add
mov
je
lods
and
xchg
inc
scas
icebp
sahf
pop
cmps
sub
ffree
mov
outs
mov
jmp
xchg
push
mov
popa
jns
cmc
and
test
fimul
jle
xlat
mov
sbb
xchg
movs
call
nop
mov
les
jo
sbb
ins
cmps
mov
stos
cmp
sbb
jp
mov
mov
scas
les
mov
addr16
pop
mov
mov
cdq
jne
and
stc
cmp
jb
and
xchg
push
fdiv
ret
dec
ret
fwait
mov
xlat
jecxz
scas
pop
cmps
outs
inc
push
push
neg
or
push
push
popa
pop
retf
imul
or
mov
cmp
and
pop
push
xor
add
fcomp
ror
out
xlat
addr16
loop
inc
xor
jecxz
xchg
hlt
xchg
hlt
imul
das
cld
out
out
jno
cdq
mov
adc
inc
dec
pusha
test
in
stos
mov
push
mov
xchg
fbstp
out
repnz
sub
ret
rol
aas
sti
mov
test
jl
xor
cmps
ss
adc
push
mov
sbb
mov
pop
or
mov
and
push
dec
inc
mov
mov
not
adc
xor
dec
inc
inc
xor
jmp
test
(bad)
sbb
ja
dec
sub
fs
loope
mov
cwde
xchg
test
call
xchg
je
leave
and
add
shr
mov
mov
rcl
imul
das
movs
int3
les
inc
or
enter
les
repnz
js
mov
push
ins
mov
pop
cmc
mov
mov
out
es
fstp
mov
xchg
cmp
jl
add
pop
retf
mov
dec
jbe
repnz
push
jne
add
loopne
ins
xchg
inc
enter
test
xchg
push
inc
stos
fcom
ret
dec
movaps
mov
rcr
dec
sbb
jmp
(bad)
or
add
sbb
and
icebp
retf
dec
or
push
arpl
mov
or
mov
mov
fwait
out
hlt
shl
test
imul
fld
jmp
add
leave
push
enter
mov
xchg
shl
call
adc
add
cmp
push
movs
mov
mov
ins
push
rol
cmp
mov
mov
push
sbb
dec
inc
cwde
push
or
sub
int3
pop
iret
fnstsw
push
mov
loopne
push
mov
mov
xor
stos
push
sub
cmps
jbe
aam
rcr
dec
fsubr
sbb
sub
cmps
call
aas
ja
sub
push
mov
cmp
out
int3
push
cmp
add
pop
test
pop
xlat
mov
xchg
ret
cmp
push
imul
push
retf
xor
xlat
sbb
mov
xor
mov
xor
mov
call
out
adc
(bad)
je
jle
loopne
adc
dec
lahf
adc
adc
mov
ret
adc
cmp
adc
mov
rcr
call
sbb
adc
daa
hlt
mov
popf
rcr
sub
pop
pop
mov
xor
pop
mov
push
lods
xor
sub
xchg
mov
cld
adc
adc
pop
or
pop
sub
sub
outs
rcl
jbe
aam
xchg
cmp
jbe
scas
and
mov
cwde
inc
mov
cs
adc
inc
js
pop
shl
ins
outs
jle
add
xchg
push
stc
dec
lds
sub
fs
inc
aas
std
cmp
mov
imul
pop
inc
jno
sub
dec
enter
mov
daa
xor
add
pop
les
adc
adc
sbb
and
je
loop
inc
movs
mov
push
mov
out
sbb
adc
mov
loope
xor
mov
leave
lods
mov
cwde
stos
mov
outs
push
dec
adc
mov
lds
inc
rcl
imul
and
aad
fwait
xchg
inc
aam
sbb
(bad)
sar
push
mov
in
(bad)
mov
pop
dec
jne
and
std
outs
xchg
pop
cmp
fwait
pop
push
xlat
mov
scas
scas
jmp
fldcw
jnp
pop
sbb
adc
mov
cwde
add
pop
scas
mov
and
pop
inc
movs
push
out
inc
add
mov
out
inc
push
dec
cmp
fld
loopne
dec
fild
xor
repnz
xor
ret
gs
cld
fldenv
xor
retf
pop
lods
add
mov
push
outs
call
jnp
sti
dec
or
xchg
(bad)
dec
movs
retf
retf
pop
xor
cli
dec
out
push
sub
(bad)
sub
mov
repnz
es
jl
push
imul
xor
dec
out
popf
jne
bound
jle
fwait
cwde
outs
add
cld
in
dec
aas
mov
push
in
pop
xor
(bad)
lahf
jp
daa
call
push
clc
mov
jmp
mov
cmp
ret
jae
push
xor
scas
test
jp
xchg
or
adc
sbb
push
(bad)
movs
(bad)
jnp
fwait
fs
hlt
fnsave
adc
test
adc
movs
pop
jns
ficomp
sub
xchg
and
jo
jle
mov
push
adc
(bad)
popf
cmp
mov
stos
mov
test
inc
mov
add
mov
in
std
and
push
(bad)
mov
int
jp
xchg
xor
rcr
cmp
adc
ins
ins
dec
dec
mov
aaa
push
cmp
and
jg
sbb
stos
rol
jbe
mov
ins
or
sbb
dec
xor
sub
xor
out
test
xor
call
cli
(bad)
(bad)
jae
sbb
ins
or
mov
cli
test
pop
je
fcom
and
pop
cwde
loopne
xchg
xchg
in
ret
mov
shl
shr
dec
jnp
inc
clc
sti
push
dec
pushf
sub
nop
cld
sbb
clc
jnp
fwait
adc
sbb
or
lahf
lds
lahf
nop
pop
push
std
stos
or
lds
and
loop
aad
lock
xchg
dec
stc
xchg
fwait
pop
inc
xlat
push
movs
mov
push
int
push
mov
or
call
xor
out
retf
jg
jb
into
sub
stos
pusha
scas
cmp
call
ret
je
mov
(bad)
sub
retf
or
xchg
jno
cmps
test
push
repnz
xlat
xchg
ins
lods
pusha
jns
in
and
pop
cmps
add
call
retf
rol
ins
enter
sub
loop
aas
cwde
aas
jge
push
push
or
stos
cmp
sub
dec
popa
ins
iret
and
popf
pop
pop
sar
and
mov
jne
stc
out
mov
and
mov
sahf
lahf
jmp
(bad)
repz
arpl
cmp
jmp
in
inc
cmp
mov
iret
lahf
ds
xchg
sub
pusha
fsub
ss
je
(bad)
popa
iret
jnp
or
xor
repz
xor
cli
xchg
add
in
stos
and
inc
adc
add
jnp
cmp
pop
and
push
sbb
xchg
or
add
cmc
movs
inc
ds
or
retf
enter
xchg
cmp
cmp
push
das
pop
sub
lds
retf
jmp
sbb
mov
xor
aad
or
pop
fiadd
test
jmp
sar
xchg
jge
stos
mov
frstor
mov
pop
jno
add
in
or
pop
push
hlt
pop
cmp
and
lds
aas
inc
sbb
pusha
rcl
aam
fisubr
push
fs
or
clc
xchg
dec
cmp
les
imul
push
into
scas
adc
inc
cdq
mov
inc
bound
addr16
movs
mov
ds
jnp
clc
cld
add
in
dec
es
outs
fwait
(bad)
xor
pop
mov
fistp
sub
aas
xchg
dec
dec
fadd
mov
add
push
enter
add
dec
sbb
sbb
jae
jmp
fmul
add
fcmovbe
or
sbb
pop
or
aas
shl
mov
add
jmp
or
sub
mov
jnp
ret
fmul
lds
mov
dec
push
pop
int3
iret
adc
push
xchg
js
push
test
xchg
adc
or
pop
lds
imul
out
pop
scas
push
iret
pop
aad
movs
cmps
push
or
loop
ffreep
sti
xor
mov
jmp
out
cmp
pop
jnp
ja
je
push
and
adc
add
lods
xor
mov
in
lock
push
jno
ret
and
jmp
mov
data16
push
out
mov
out
stc
pop
lods
cmp
mov
test
imul
sub
cmp
in
push
loope
dec
fcom
icebp
popa
sub
(bad)
das
and
cwde
push
mov
fadd
cmps
add
push
outs
jne
sub
cmp
fdivr
pop
mov
sub
adc
call
and
sti
mov
and
jae
retf
dec
push
mov
or
je
xchg
mov
xor
stos
pop
mov
dec
rol
(bad)
jb
mov
pop
jbe
test
out
and
out
pop
pinsrw
sbb
or
imul
push
aad
aam
cdq
scas
jecxz
sub
stc
sub
ins
sub
mov
push
xchg
inc
hlt
(bad)
jmp
loopne
pop
mov
jecxz
popw
into
dec
lods
pop
xchg
mov
sub
fstp
out
push
dec
jmp
neg
aad
movs
xchg
ins
mov
push
xchg
pop
inc
jmp
aaa
call
fiadd
in
xor
mov
arpl
pop
stos
or
jg
mov
sbb
pop
jecxz
adc
xchg
jbe
adc
(bad)
aad
pop
jg
xchg
pop
mov
add
mov
inc
and
pushf
cmc
mov
add
mov
lock
jmp
sar
in
xor
nop
mov
push
and
pop
shr
shr
add
and
jns
sbb
sub
xor
stos
adc
call
iret
inc
ja
adc
sub
push
lahf
(bad)
or
test
pop
or
pop
aas
outs
push
in
push
dec
sahf
push
std
scas
and
push
ror
out
or
icebp
push
inc
xlat
mov
dec
std
ret
pop
adc
les
push
mov
and
dec
mov
mov
add
add
fadd
and
push
(bad)
jo
push
in
inc
pop
movs
sub
cmps
in
pushf
std
call
sub
gs
xor
cdq
daa
mov
jae
pop
movs
mov
test
out
push
enter
ds
ret
ret
mov
sbb
and
xchg
jecxz
cmp
or
jns
xlat
jmp
pop
xchg
and
push
test
jo
je
pop
out
mov
subps
into
xor
ja
inc
push
adc
sti
test
(bad)
pop
jbe
ins
outs
das
adc
shl
inc
and
adc
push
push
push
add
bound
idiv
adc
mov
xlat
inc
sbb
shl
rol
or
xchg
adc
popa
mov
je
mov
test
inc
in
lods
sahf
cmp
and
popa
xor
stos
or
stos
mov
les
cmp
mov
mov
aas
call
and
xlat
cdq
xor
or
xor
xor
jg
push
test
retf
cmp
stos
aas
mov
fsubr
out
jns
outs
add
fisubr
hlt
jmp
retf
ja
mov
cmp
ret
mov
stos
adc
mov
sub
push
in
mov
scas
mov
sub
out
mov
inc
lods
pslld
daa
int3
xchg
fnsave
cld
push
adc
in
das
jl
or
addr16
into
js
rol
gs
cwde
mov
jne
mov
add
push
data16
test
lahf
add
aam
(bad)
push
cmp
imul
loopne
repz
scas
add
mov
test
cld
xor
pop
mov
sbb
add
sbb
(bad)
call
(bad)
rol
push
js
pushf
outs
not
hlt
test
inc
mov
mov
and
push
pop
mov
je
ret
adc
test
sub
inc
cdq
or
add
aad
pushf
(bad)
stos
aas
leave
cdq
push
popa
pop
xor
call
jmp
xor
and
adc
jnp
scas
xchg
sar
add
cmps
lods
dec
jnp
xor
jno
dec
popf
ret
adc
in
mov
xor
jno
data16
sbb
add
mov
sub
mov
xchg
pushf
jne
or
mov
xchg
daa
out
jge
repnz
fidiv
(bad)
mov
mov
fldenv
shl
(bad)
ja
jmp
popf
mov
xor
jecxz
pop
lea
inc
xor
scas
rol
jecxz
dec
in
mul
iret
test
inc
xor
mov
jle
adc
dec
stos
mov
and
scas
xchg
mov
stc
xor
arpl
sbb
fst
ss
add
clc
das
loope
xchg
mov
dec
cmps
std
xchg
push
stos
sub
jl
xchg
mov
std
(bad)
aad
cs
or
mov
dec
xor
pop
mov
push
xchg
lds
mov
jbe
sub
out
xchg
retf
dec
out
adc
fisubr
std
cdq
rcr
xor
outs
mov
loope
mov
mov
sub
jg
pushf
pop
(bad)
shl
mov
sar
jb
sbb
int3
ror
dec
pop
push
mov
imul
mov
adc
jne
inc
xchg
ins
jbe
call
inc
xchg
enter
ins
mov
ret
inc
mov
test
test
aaa
retf
and
lods
in
jmp
add
aad
jmp
pusha
loopne
and
in
repz
jbe
jne
mov
sub
and
scas
data16
pop
iret
outs
add
adc
retf
or
push
inc
and
dec
in
ret
fist
cwde
mov
rcr
(bad)
cmp
mov
fidiv
add
js
mov
xchg
dec
mov
pop
out
jmp
shl
movs
or
cli
test
clc
ins
aam
test
mov
stos
mov
in
shl
sub
sub
mov
cmp
(bad)
sar
jbe
pop
imul
cdq
das
fs
xor
mov
or
or
stos
mov
or
in
call
aam
fsubr
not
cmp
sbb
fiadd
popa
es
pop
sbb
js
jle
enter
inc
adc
xchg
in
mov
mov
cmc
xchg
sbb
pop
or
sahf
mov
cwde
mov
xchg
xlat
fistp
or
xlat
in
sub
xchg
or
pop
test
xchg
popa
in
cmc
mov
lods
test
cmp
xor
jbe
lea
fcomp
xchg
pop
mov
not
fimul
dec
cmp
and
paddd
mov
int3
ss
xor
or
mov
sbb
mov
leave
dec
cmp
mov
push
inc
mov
in
xchg
push
inc
xchg
jae
(bad)
mov
add
mov
daa
mov
push
mov
out
sub
push
neg
mov
fcmovnb
xchg
int
das
test
(bad)
push
retf
adc
adc
jns
mov
pop
ret
inc
idiv
xor
adc
dec
es
fisub
mov
ror
mov
cld
mov
outs
jle
push
or
int3
mov
push
idiv
out
(bad)
push
aaa
mov
aad
xchg
sahf
pop
add
mov
cwde
cmp
cmp
mov
dec
aad
ss
int
mov
cdq
mov
mov
cmp
pop
cwde
sbb
daa
xor
xor
mov
ret
sahf
clc
daa
call
sahf
push
mov
xchg
jle
popa
pop
mov
xchg
out
and
test
jmp
or
pop
push
and
jae
cmc
call
adc
xor
cmps
mov
xchg
mov
pop
test
fxch
clc
jecxz
cmp
mov
retf
mov
int3
cmp
push
cdq
cmp
(bad)
fwait
sub
stos
xchg
cli
jp
sbb
scas
addr16
es
sbb
and
retf
mov
and
pop
mov
scas
mov
shl
lock
fistp
mov
cmp
aad
xchg
fsubr
(bad)
sbb
mov
xor
cdq
or
rol
test
and
lods
repz
repz
cmps
push
inc
lds
aam
rcl
cmp
adc
sub
(bad)
paddsw
fldcw
rcl
fadd
sahf
push
or
scas
sti
gs
dec
xchg
lahf
dec
in
inc
mov
jo
mov
dec
add
push
push
or
data16
bound
pop
xlat
push
int
into
xor
pop
push
sub
dec
or
mov
push
pop
pop
sahf
mov
fild
out
pop
ja
xor
push
lods
pop
lods
aad
stc
fistp
sbb
div
push
into
jmp
dec
mov
ficom
cmp
xchg
call
cld
rol
ret
rcl
or
mov
and
sbb
call
xchg
test
push
inc
fs
xchg
data16
and
movq
(bad)
cmp
aad
jno
and
push
sbb
xchg
mov
fbstp
(bad)
aad
push
add
fwait
popa
sbb
sub
stos
push
movs
das
xchg
ss
adc
cmps
sub
repnz
cmp
cmc
gs
pusha
loopne
in
mov
inc
fadd
stc
push
adc
adc
shl
xor
inc
rcr
out
jp
(bad)
jmp
push
movs
push
jecxz
adc
cmp
fsub
call
or
jb
imul
ret
fbstp
sbb
out
mov
lahf
test
or
mov
jle
les
jl
push
popa
xchg
adc
dec
in
mov
imul
and
and
mov
pusha
sub
ficom
push
ret
jns
shl
jo
mov
call
dec
jns
or
cmp
sbb
add
add
mov
mov
or
out
js
sar
mov
jg
push
mov
xchg
adc
xchg
mov
inc
int
xor
adc
out
xchg
aas
pop
jbe
mov
imul
lock
xor
add
pop
fimul
(bad)
les
adc
dec
aad
rcl
fdivr
xchg
cmp
pop
mov
rcl
mov
or
ja
not
(bad)
cmc
data16
or
fimul
pop
inc
js
and
lods
and
iret
pop
sub
jno
inc
shl
aaa
dec
fs
push
fild
sub
adc
and
scas
add
and
in
fcmove
sbb
ss
pop
mov
cmp
js
xchg
jno
(bad)
retf
std
sahf
mov
sub
aas
pushf
sbb
xor
inc
pop
scas
fld
out
ret
mov
dec
scas
jne
xor
loope
xchg
dec
outs
xchg
shl
(bad)
cs
call
or
sub
jbe
in
push
or
push
mov
out
(bad)
sub
dec
mov
mov
repz
sbb
retf
cld
test
sub
dec
mov
mov
push
dec
sbb
test
push
push
pushf
mov
into
lds
mov
adc
test
jle
push
jmp
daa
pop
(bad)
cmp
lea
mov
push
in
sbb
scas
aad
loope
std
ins
sub
or
xor
outs
dec
or
loopne
add
pop
cld
adc
std
and
and
bound
stos
xor
leave
test
xchg
mov
imul
adc
les
lea
adc
fxch
mov
pusha
gs
cmps
(bad)
xchg
pusha
nop
sub
push
popa
int3
add
mov
icebp
jmp
outs
mov
mov
test
adc
dec
out
sub
or
enter
test
std
mov
and
dec
xchg
pushf
xchg
jmp
popf
add
dec
lea
lods
xor
xchg
sbb
or
sub
pop
icebp
sbb
iret
xor
std
sub
or
adc
sub
mov
call
xchg
imul
test
(bad)
jmp
adc
movs
sub
in
mov
sbb
sub
not
or
mov
add
mov
xor
xor
stos
pushf
mov
sub
scas
sbb
cmp
mov
aad
jnp
inc
adc
xor
xchg
popa
push
push
fbstp
fld
sahf
push
cmps
rol
es
or
test
call
xchg
or
aaa
xor
push
test
lahf
xchg
push
cmp
push
and
ins
pushf
mov
ret
jl
fs
add
push
inc
jg
loopne
xchg
call
mov
aas
ret
iret
inc
hlt
movs
mov
jno
pop
mov
adc
test
ret
pop
dec
repz
(bad)
enter
pop
out
ret
mov
lds
cmp
adc
call
xchg
retf
sub
sbb
out
or
adc
add
movaps
jl
scas
sbb
test
push
push
icebp
mov
inc
cs
mov
fst
ffreep
cli
fwait
xchg
push
xor
push
xor
mov
pushf
retf
stos
fist
paddw
lock
es
dec
mov
ret
push
fiadd
mov
push
push
xor
inc
pop
out
sbb
sub
add
movs
repz
pop
mov
iret
inc
aaa
call
hlt
shr
sbb
stc
es
mov
xlat
mov
lods
test
push
inc
inc
mov
rcr
push
fistp
inc
int3
sbb
pusha
mov
loopne
xor
jnp
movs
mov
jmp
adc
sar
inc
cmp
int
(bad)
xchg
inc
out
int3
adc
imul
lahf
das
cli
movs
inc
and
push
or
mov
sbb
aaa
mov
dec
dec
cmps
fiadd
mov
push
mov
mov
mov
(bad)
mov
lock
je
stos
aad
or
outs
push
jmp
add
mov
and
scas
add
repz
lods
lods
pop
sub
imul
xchg
dec
cmp
sti
or
jg
mov
mov
xchg
test
ins
std
test
leave
mov
(bad)
stos
mov
movs
sub
lds
shl
int3
sub
repz
sahf
push
or
inc
push
cmp
mov
addr16
loope
fistp
add
clc
inc
push
pop
pop
mov
adc
mov
push
sbb
or
push
lock
imul
popa
or
into
aad
(bad)
mov
pop
add
xchg
push
push
int
and
popa
gs
test
inc
fwait
mov
(bad)
push
mov
mov
dec
adc
scas
call
ins
ret
aaa
scas
icebp
push
dec
xor
addr16
cmp
pop
xchg
nop
xor
push
pop
mov
or
ins
or
ja
cli
sub
test
addr16
jp
cs
or
scas
xchg
and
fdivp
daa
mov
jnp
mov
mov
inc
adc
jnp
dec
(bad)
ja
ret
inc
inc
bound
cmps
xor
inc
loopne
mov
enter
addr16
das
mov
hlt
lods
add
ja
mov
in
mov
and
ins
inc
mov
stos
inc
mov
fsubrp
adc
dec
push
cmp
arpl
dec
fld
fwait
test
pop
pop
dec
jo
dec
and
and
(bad)
or
out
repz
mov
bound
dec
pop
cmp
data16
fisttp
fidiv
add
and
into
push
mov
pop
add
xchg
movs
pop
cmp
jbe
pushf
push
push
nop
daa
leave
cmc
retf
mov
jns
xor
xor
xor
repz
jb
dec
pop
mov
fstp
or
dec
sar
and
sbb
lods
mov
ins
add
cmp
int3
adc
mov
xor
inc
push
mov
inc
cld
cmp
sub
(bad)
xchg
or
fwait
and
mov
cmp
mov
movs
add
dec
xchg
imul
mov
out
stos
push
push
inc
movs
xchg
inc
cmp
les
mov
(bad)
jbe
mov
push
pushf
shl
(bad)
adc
adc
pop
fsubr
in
dec
fs
inc
mov
hlt
mov
jmp
xlat
pop
pop
cmps
fwait
dec
sub
cmp
sbb
mov
cmp
jns
cmp
xchg
inc
push
fwait
sbb
mov
xchg
xor
mov
xor
xor
fstp
cmps
xor
mov
jns
push
sub
fidiv
popf
fnsave
scas
pop
push
dec
xchg
neg
mov
sar
cmps
sbb
dec
clc
adc
movs
adc
aam
addr16
je
pop
dec
out
shr
add
out
rol
pop
inc
mov
xchg
add
sub
leave
sbb
mov
xchg
jge
or
or
inc
(bad)
pop
clc
out
rcl
and
stos
ret
jns
cmc
(bad)
aad
(bad)
cmps
ret
adc
and
mov
inc
sbb
cmp
sbb
push
movlps
(bad)
xlat
sub
mov
cmp
jmp
lods
int3
(bad)
iret
mov
or
mov
dec
jp
adc
test
push
cld
rcr
jae
adc
xor
cmps
lea
mov
lahf
or
push
in
loop
pop
arpl
and
test
in
push
xchg
pop
dec
pop
and
fisttp
mov
test
(bad)
lock
in
mov
ins
test
xor
cmp
in
icebp
cmc
aad
and
and
fbstp
(bad)
pop
fnstcw
add
iret
jmp
xchg
cmps
frstor
in
out
xchg
shr
and
movs
push
ret
push
int
popa
(bad)
call
or
outs
loope
imul
sbb
cmps
pop
or
call
add
push
es
popa
mov
fcmove
jo
sbb
mov
jmp
mov
out
add
loopne
in
adc
pop
movs
push
xchg
ror
shl
add
push
pop
adc
call
rol
adc
sub
cld
sbb
adc
(bad)
neg
sub
add
mov
sub
jge
enter
inc
and
int
and
jne
sub
popf
cmc
pushf
js
fimul
xchg
test
adc
push
dec
in
adc
push
jne
xchg
mov
call
add
push
lahf
outs
popa
int
mov
adc
sub
or
sub
or
loope
jb
mov
cld
cli
sub
cli
mov
lods
call
mov
(bad)
push
mov
adc
retf
sbb
fild
mov
and
mov
ret
xchg
pop
(bad)
pusha
sbb
push
in
(bad)
cmp
ss
xor
ficomp
lea
stc
je
adc
cmp
cmc
bnd
fild
jp
mov
add
fdivr
sub
cmps
jg
stos
loope
das
pause
pop
dec
jmp
lds
out
stos
mov
mov
icebp
push
popa
lea
or
stos
lods
xor
fsubrp
push
es
sub
cwde
inc
sub
ror
movs
ret
js
sub
cmp
jmp
sub
lock
pushf
fisttp
lods
(bad)
loopne
cmc
jmp
ficomp
add
dec
sbb
sar
jne
sbb
sub
jae
xor
dec
xchg
retf
lahf
lahf
pop
in
aaa
xchg
clc
inc
in
adc
loopne
sbb
mov
dec
mov
xor
pop
jmp
mov
scas
and
stos
(bad)
aas
add
mul
call
cmp
outs
dec
xor
jne
adc
(bad)
and
and
mov
icebp
xchg
pop
sub
test
loopne
xor
fucomp
ja
xor
cmps
loope
les
adc
stos
ret
(bad)
dec
push
(bad)
enter
xor
cmp
dec
mov
mov
div
jo
jle
or
add
jecxz
daa
push
cmc
and
arpl
je
ret
scas
sbb
mov
fsubr
jno
loop
mov
not
call
xchg
ret
or
cmp
cmps
lock
test
in
repnz
ss
xchg
cmp
loope
sbb
gs
and
imul
loopne
movs
mov
or
xchg
rcr
out
fst
add
and
push
pop
mov
fisubr
cmp
sbb
push
(bad)
stos
mov
sub
add
jo
dec
push
stc
lock
mov
jmp
jno
pusha
push
adc
repnz
push
fisub
cmp
leave
out
add
xor
xchg
js
dec
in
xor
mov
clc
jae
popf
(bad)
or
stc
add
outs
cmp
loop
jne
inc
or
ror
movs
mov
cdq
leave
or
mov
sub
push
ins
adc
test
xchg
pop
and
mov
xor
add
test
pop
fwait
repnz
shr
sub
push
cmp
aas
xchg
inc
add
mov
pop
adc
out
rcr
dec
test
aas
pop
push
xor
enter
add
mov
inc
sub
cmp
mov
pop
adc
lods
fnstcw
pop
jae
dec
jge
outs
xchg
adc
push
adc
cmp
mov
repz
js
dec
fs
jo
pop
stc
pop
add
mov
and
xor
(bad)
jns
mov
inc
dec
jmp
aam
ffree
es
mov
div
or
mov
ret
mov
lock
sti
jl
dec
pop
icebp
pop
sub
call
std
iret
jnp
int
jp
jg
xchg
sbb
(bad)
mov
stos
retf
lea
test
push
je
addr16
cli
lea
dec
das
add
mov
icebp
xor
stos
mov
retf
mov
ins
ins
mov
mov
pop
icebp
call
dec
in
lods
mov
and
fucomp
push
cmp
jmp
jp
mov
xchg
or
xlat
sub
shl
jecxz
loop
add
jmp
push
pushf
out
iret
lods
push
pop
and
mov
jmp
mov
scas
mov
or
mov
pop
mov
(bad)
fdivr
push
scas
cld
test
loopne
adc
jecxz
stc
aad
dec
imul
dec
js
(bad)
or
or
or
dec
fs
jnp
xor
xor
mov
and
iret
jnp
shl
mov
les
aad
aad
sbb
sbb
in
icebp
adc
in
out
sbb
mov
aad
bound
mov
xor
daa
and
mov
mov
iret
ror
leave
inc
mov
aam
dec
aas
call
pop
xlat
cmp
push
mov
loope
sub
enter
mov
xchg
out
push
jns
pushf
jns
out
sub
cmps
push
scas
or
jmp
movs
sbb
test
mov
leave
jbe
inc
stos
popf
fwait
mov
inc
xor
(bad)
aam
addr16
jmp
das
(bad)
sub
add
pusha
daa
rcl
ins
in
xchg
into
mov
pusha
push
push
ss
movs
pop
or
aam
pushf
neg
icebp
aad
fist
les
hlt
loop
pop
je
inc
pop
pop
mov
inc
dec
das
gs
test
std
outs
inc
and
in
shl
clc
js
pop
cmp
sbb
jmp
and
mov
push
popf
not
daa
ret
mov
(bad)
mul
fs
outs
lahf
mov
mov
repz
mov
dec
sbb
lods
xor
xchg
(bad)
jge
lds
out
or
int
jecxz
push
fld1
neg
loop
jnp
ja
mov
fldcw
mov
imul
(bad)
outs
inc
xchg
hlt
dec
mov
ret
pop
sub
aas
je
pusha
nop
mov
scas
sub
cld
loopne
mov
push
xchg
int3
sub
xchg
cmp
sbb
into
loope
and
jl
outs
cmc
mov
movs
xchg
sbb
repnz
cmp
scas
and
or
pop
rol
loop
push
ds
sbb
fstp
popa
ja
in
pop
xchg
ins
sub
or
push
jl
into
add
int3
cmp
jmp
jne
test
dec
mov
fistp
rcl
push
cld
jae
cmp
std
pop
push
ja
popa
sbb
inc
inc
mov
mov
es
(bad)
push
in
pushf
fstp
test
in
xchg
jecxz
dec
jae
cmp
xchg
jno
lds
and
push
push
shr
test
arpl
ja
cmc
pop
daa
cmp
ret
movs
sbb
aaa
mov
cs
fist
cmp
ret
mov
rcl
xchg
pop
movs
shl
sub
in
add
and
ret
mov
xor
xor
lds
out
daa
jge
mov
ja
mov
(bad)
sub
cmp
cwde
jae
sti
xor
stc
pop
xlat
std
fs
pop
xor
lods
xor
pop
rcr
dec
sbb
xor
fsub
push
xor
push
xchg
dec
(bad)
dec
mov
add
dec
cs
pop
shl
(bad)
fdivr
mov
out
sbb
stos
iret
xlat
push
xor
mov
rcr
aas
xchg
call
mov
repz
imul
loopne
push
push
pop
jns
mov
mov
popf
lods
xor
movs
rcr
push
pop
mov
cmp
xchg
jmp
in
cwde
popa
xchg
mov
push
into
jmp
dec
mov
sub
and
neg
and
sar
xor
xchg
push
push
mov
jle
inc
fimul
pop
hlt
mov
sub
jge
xchg
pop
scas
or
mov
xlat
adc
sub
jae
rsm
aad
jecxz
std
mov
sbb
xchg
add
jmp
imul
repnz
jbe
or
pop
jmp
ret
int3
fwait
xor
xchg
jno
jmp
(bad)
and
out
push
icebp
dec
ret
jp
std
movs
push
pushf
aad
hlt
mov
push
mov
jo
repz
in
fs
add
les
mov
jle
leave
mov
(bad)
dec
xor
pop
jno
xchg
retf
mov
fdivr
mov
jns
in
fldcw
int3
mov
scas
aaa
push
pop
pop
dec
xchg
sub
fwait
mov
jg
push
lods
or
in
jmp
jno
mov
jle
xor
loopne
inc
pop
in
iret
push
fistp
std
pop
mov
mov
dec
sub
dec
pop
pop
or
cmp
in
call
jns
adc
xor
jbe
retf
leave
mov
adc
xchg
(bad)
jno
inc
cmps
jmp
sub
ds
mov
xchg
push
ret
inc
mov
out
lds
mov
addr16
shl
movs
xor
les
sub
inc
ret
shl
scas
xlat
mov
in
xor
cmp
sub
fiadd
iret
nop
pop
sbb
sbb
mov
pop
pop
sar
fiadd
int
xchg
mov
mov
jno
aad
pop
push
sbb
xchg
sar
mov
adc
jnp
pop
repnz
or
sbb
dec
pushf
test
sbb
addr16
mov
mov
fs
push
in
out
push
into
leave
aam
and
mov
jge
js
fld
gs
jecxz
dec
nop
iret
in
mov
jmp
adc
test
fistp
cmp
dec
ins
out
mov
xlat
mov
dec
push
call
mov
lods
sbb
jb
ret
sbb
inc
aam
jae
mov
mov
mov
rcl
mov
or
mov
shr
in
push
(bad)
jb
test
repnz
jmp
mov
push
call
loopne
xor
sbb
ss
cmps
(bad)
into
mov
dec
stos
ins
popa
jmp
shr
das
and
inc
sbb
lea
test
dec
int3
sahf
jo
in
fistp
call
cmp
cmp
cmps
xchg
mov
add
push
push
sub
inc
xlat
in
bound
xor
jne
mov
stc
xor
cmp
out
je
cs
cmp
test
lds
cmps
adc
or
push
shl
pusha
sbb
cli
inc
jecxz
gs
push
(bad)
test
std
mov
mov
ins
xor
jmp
fxch
cmc
pop
fs
into
test
cli
pop
mov
je
retf
sub
mov
xchg
inc
(bad)
popa
mov
cmp
in
sub
hlt
dec
std
jle
daa
sbb
push
fadd
(bad)
mov
lahf
pop
sub
xchg
movhlps
mov
xor
sbb
and
mov
loopne
xchg
movs
(bad)
pop
push
adc
rol
das
or
adc
test
sbb
and
xchg
xlat
jmp
dec
dec
mov
inc
les
adc
fidivr
loopne
pusha
mov
retf
in
adc
jp
aas
fadd
xchg
bound
inc
cld
call
or
mov
push
push
mov
jns
cmp
movs
hlt
fisub
jp
scas
cmps
dec
push
(bad)
ret
aad
js
aam
sbb
xor
mov
jne
xor
das
inc
loope
(bad)
push
sub
xor
mov
cmp
inc
dec
and
pop
(bad)
das
jmp
gs
fisub
mov
sbb
call
or
test
fs
mov
js
jle
sbb
mov
or
daa
sub
test
je
shl
out
test
jmp
mov
xor
stos
mov
sar
test
imul
ret
test
icebp
icebp
scas
cmp
jbe
pop
movs
mov
or
cmps
sbb
mov
jnp
mov
xchg
sbb
in
inc
rdmsr
add
test
or
add
add
add
adc
xor
jo
shl
mov
and
jno
xor
gs
add
mov
ja
sbb
ret
mov
fisttp
xor
enter
add
pop
sub
and
mov
mov
jns
jmp
stc
cdq
lahf
xchg
pusha
pusha
push
cwde
test
sub
xlat
add
or
add
test
add
retf
mov
test
adc
adc
mov
mov
push
enter
loope
add
sub
add
hlt
ins
mov
aad
mov
out
movntq
push
out
int3
xchg
sub
scas
jmp
sbb
dec
fdivr
xchg
and
popa
test
add
xor
add
cmp
jmp
mov
and
ret
inc
js
dec
mov
ret
shr
xor
mov
inc
iret
inc
hlt
inc
jbe
cmp
push
out
mov
dec
cmp
adc
push
mov
call
jns
cmp
retf
pusha
xchg
mov
sahf
dec
fistp
ds
jg
outs
push
stc
sbb
pop
mov
mov
cmp
lahf
sub
mov
and
mov
inc
dec
ds
jnp
cmp
sub
lock
push
mov
sbb
(bad)
movs
xchg
jp
ds
dec
add
leave
les
das
dec
movs
add
ret
dec
js
ror
inc
fwait
and
test
bound
aam
in
mov
dec
(bad)
adc
ss
push
das
pusha
aam
lea
(bad)
cwde
sub
fwait
rol
(bad)
sub
call
test
and
sub
icebp
div
cmp
cmc
or
jmp
(bad)
sbb
scas
xor
sahf
sbb
shl
lds
retf
lahf
mov
push
lds
bts
outs
push
sub
mov
imul
bound
sbb
je
adc
popa
xor
pop
sbb
fdiv
data16
popa
cmc
(bad)
outs
mov
gs
xor
movs
inc
cmps
and
stc
adc
xor
out
sahf
hlt
jecxz
ficomp
and
cmp
cmp
adc
xor
cmps
fcmovnb
sbb
push
push
das
dec
and
dec
xlat
push
imul
pop
inc
cld
xchg
hlt
in
adc
cmps
mov
dec
ins
xchg
dec
pushf
shl
fsub
jbe
outs
imul
enter
popa
jp
mov
hlt
pminsw
sub
imul
add
out
sub
sub
sub
popf
(bad)
ds
outs
sbb
sbb
leave
ins
lods
lock
rol
bound
mov
push
fstp
int
jecxz
(bad)
cld
mov
inc
xchg
push
mov
shr
xlat
push
sub
push
add
cmp
pusha
hlt
sbb
int3
(bad)
mov
imul
push
rcl
mov
push
fild
dec
mov
cmc
push
imul
fs
imul
xor
add
cmp
cmps
cmp
(bad)
xchg
mov
lds
mov
xor
test
inc
cmp
and
repnz
mov
in
xlat
jge
mov
cmps
iret
and
push
and
or
mov
jmp
out
(bad)
mov
jl
pop
inc
pop
inc
sub
call
xchg
push
pop
or
retf
in
into
push
popa
sar
push
into
cmps
mov
enter
and
xchg
ficom
adc
fadd
cmps
sbb
leave
and
mov
mov
imul
xchg
inc
mov
icebp
leave
mov
mov
mov
mov
fiadd
inc
pop
hlt
jno
std
jl
in
shr
jge
jmp
inc
jmp
fisub
loop
add
mov
pop
in
xchg
sti
inc
adc
or
add
mov
push
mov
je
adc
and
lea
cmps
or
dec
xchg
and
pop
lahf
lods
sbb
mov
popf
ds
ror
sub
xchg
xor
cmp
inc
std
add
fidivr
sahf
pop
cwde
pop
fisubr
mov
icebp
cli
dec
sbb
inc
dec
sbb
repz
adc
cmp
shl
nop
jg
mov
pop
sbb
movs
sbb
sbb
test
dec
mov
mov
in
pop
icebp
ja
clc
xchg
loop
inc
rcr
fistp
shl
in
xor
inc
(bad)
mov
mov
jl
add
and
cmps
push
ss
retf
movs
test
ins
or
inc
mov
ja
shl
out
dec
inc
shl
and
fs
lahf
sahf
je
popa
dec
xchg
imul
mov
or
jp
(bad)
dec
pop
ja
or
or
mov
pop
jge
fwait
push
xchg
iret
pop
jp
scas
dec
xchg
in
arpl
bound
sbb
adc
scas
scas
jne
mov
mov
and
daa
sbb
dec
mov
idiv
pop
cwde
sahf
mov
adc
scas
push
mov
outs
arpl
inc
sbb
lea
scas
jb
cmp
jmp
pop
in
push
hlt
ins
cli
push
cs
call
cs
mov
sub
mov
xchg
icebp
shr
sahf
int
jmp
pop
sbb
sub
ss
sahf
outs
into
mov
dec
jmp
arpl
jb
fisubr
push
xor
mov
std
xlat
or
or
push
inc
pop
call
int3
mov
dec
cli
xchg
mov
mov
pop
pop
dec
jge
mov
sbb
lods
and
mov
movs
add
(bad)
loopne
or
mov
js
inc
sar
mov
mov
xor
and
mov
fadd
(bad)
dec
movs
push
icebp
fistp
cmc
test
nop
outs
or
repz
scas
fdivr
cmc
pusha
scas
fisttp
sbb
cmp
in
aad
int
inc
dec
sahf
out
pop
mov
adc
cmp
add
clc
popf
ds
cmp
push
outs
les
mov
inc
cmc
aaa
sahf
adc
push
lds
mov
mov
popf
(bad)
fcomip
es
cmps
loope
jmp
iret
cmp
xchg
retf
ficomp
mov
xchg
pop
mov
dec
ds
adc
cmp
mov
mov
push
rcl
test
retf
mov
sbb
push
cmp
push
(bad)
xor
sbb
mov
fisubr
xchg
sbb
mov
xchg
(bad)
mov
das
inc
imul
adc
mov
clc
rcr
cli
add
inc
or
mov
jle
xlat
pop
hlt
cmc
xchg
outs
(bad)
out
cmp
mov
xor
cdq
int3
cmps
mov
shl
test
das
fidiv
jl
xchg
push
aam
cdq
sub
scas
xchg
sub
adc
in
mov
outs
(bad)
ja
push
jp
lock
pop
out
test
call
(bad)
dec
outs
in
rcl
cmp
jbe
add
fwait
cmp
ins
mov
sbb
add
pop
pop
ds
sub
lea
in
or
pop
xchg
enter
jecxz
jmp
xchg
jbe
jb
sbb
ds
shr
xchg
mov
xchg
jne
dec
cli
stc
iret
popf
call
dec
cmp
lds
cmp
jmp
cmc
add
test
iret
sub
shl
sbb
jmp
fcmovnb
mov
dec
or
jbe
pusha
gs
sbb
mov
add
outs
rcl
out
adc
or
dec
xchg
inc
cmp
mov
jnp
pop
fwait
test
jp
fild
mov
sbb
sbb
sbb
mov
fld
pop
data16
retf
sub
cwde
jle
inc
dec
mov
push
lods
inc
ins
inc
cs
pop
jae
std
inc
nop
jno
js
scas
pop
imul
add
jbe
fdivr
popa
sar
push
lahf
push
jns
outs
inc
das
in
fld
pusha
cmp
mov
pop
shr
lods
pop
fcmovnb
sbb
repnz
jl
sti
add
pushf
ja
jmp
xchg
je
and
gs
add
sub
mov
adc
mov
dec
or
jno
rcr
dec
outs
push
jmp
ss
scas
mov
pop
outs
imul
ss
dec
push
mov
mov
lock
loopne
movs
outs
add
imul
or
es
jnp
sbb
mov
popa
(bad)
in
cmp
inc
dec
fsub
push
xchg
pop
cmp
adc
not
fs
stc
or
inc
pop
adc
mov
pop
pushf
ds
xchg
inc
xchg
jae
test
inc
push
mov
cmp
add
data16
cmp
sbb
fnstsw
cli
xor
dec
bound
pop
and
mov
icebp
mov
mov
out
arpl
fstp
dec
xchg
mov
test
add
test
xor
ret
add
test
mov
mov
pop
pushf
pop
stc
in
push
push
xchg
mov
sbb
pop
mov
leave
popf
aaa
mov
xchg
clc
hlt
mov
dec
push
aad
sar
lea
inc
dec
loope
or
leave
retf
dec
out
xlat
pusha
dec
mov
in
enter
pop
inc
aas
aaa
mov
retf
test
or
sub
mov
lea
inc
mov
and
ret
imul
aaa
repz
jmp
dec
fnstenv
shl
mov
adc
out
lods
outs
push
in
jge
sbb
xchg
adc
inc
push
and
pop
stc
push
and
clc
sub
push
aam
add
cs
sub
cmp
out
imul
adc
in
lock
sbb
xchg
dec
aaa
and
and
fnstcw
dec
int3
fisub
jle
xor
push
xchg
popf
xlat
test
cdq
sbb
pop
stos
out
xor
add
gs
push
cld
imul
mul
test
xor
dec
or
dec
and
inc
call
inc
xor
xchg
not
cmp
int3
mov
lock
push
rcr
shl
xor
sub
push
call
jb
mov
mov
in
jbe
cdq
pop
addr16
data16
push
popa
or
push
cdq
cmps
clc
jp
adc
cwde
cmps
add
dec
push
xchg
push
pop
adc
cdq
pop
inc
mov
push
pop
xchg
std
xor
rcl
jecxz
out
lds
lods
dec
push
pusha
sbb
dec
(bad)
leave
pop
sahf
cli
mov
pop
xor
inc
or
dec
rcr
(bad)
or
fs
xchg
ret
lahf
lods
mov
jmp
pop
nop
or
xchg
push
pushf
lds
cmc
push
inc
sub
inc
cs
sub
loope
imul
ds
loope
add
xchg
xor
inc
imul
jne
shl
xor
and
cmp
aad
sbb
rcl
retf
sti
add
idiv
fsub
cmp
or
scas
xor
pop
pop
ret
aaa
js
rol
xchg
popa
mov
xchg
ror
stc
xchg
iret
mov
cli
mov
sub
jne
rcr
stc
add
icebp
jmp
xchg
fbstp
ja
int
adc
xor
add
int3
dec
add
aaa
mov
jne
pop
pop
(bad)
mov
pusha
mov
inc
fbld
xchg
jmp
ds
dec
push
xchg
mov
(bad)
rcr
andps
std
addr16
pusha
and
ret
shl
xor
mov
mov
xchg
jbe
leave
inc
pushf
les
ja
adc
mov
(bad)
fnstsw
cmps
xor
pinsrw
shl
fcmovbe
xchg
add
push
retf
imul
jne
mov
mov
cmp
mov
cmps
int3
jle
add
inc
or
or
xchg
xchg
retf
out
sub
push
retf
cmp
or
sbb
retf
dec
add
jns
aad
xor
adc
pop
inc
mov
add
ret
mov
(bad)
cmp
mov
push
cmc
dec
clc
das
nop
mov
adc
daa
push
pop
xchg
xchg
pop
aaa
push
test
and
loop
jnp
ret
and
scas
xchg
cld
test
mov
pop
dec
in
dec
ja
dec
sub
scas
push
mov
fidivr
push
jmp
(bad)
sbb
mov
jp
inc
cmp
popf
loopne
popa
hlt
xchg
hlt
popa
int3
xchg
inc
xchg
xor
clc
dec
pop
push
repz
hlt
cmp
xor
call
xchg
stc
(bad)
pop
mov
nop
lods
lds
mov
int3
enter
neg
jnp
mov
or
and
(bad)
and
iret
ja
push
push
or
lods
sbb
inc
add
arpl
shr
imul
jbe
xchg
(bad)
mov
xchg
mov
mov
jo
sub
sar
outs
dec
icebp
ret
xor
fucomi
cmp
add
in
loopne
addr16
pop
dec
je
pop
cmp
leave
(bad)
cdq
or
push
inc
sti
inc
stc
push
rol
xor
xor
xchg
imul
lods
stos
(bad)
dec
push
pop
or
mov
sti
cs
jno
mov
cmp
cmp
sub
aaa
outs
jmp
adc
pop
adc
mov
push
mov
es
(bad)
dec
out
sbb
cmp
or
xchg
or
xchg
xor
xchg
xchg
mov
mov
sub
aaa
jb
stos
add
cmp
imul
inc
outs
add
or
dec
xchg
xchg
cmps
fwait
jecxz
(bad)
scas
ins
lds
addr16
fwait
jne
addr16
sub
imul
mov
push
inc
ja
mov
ss
add
pushf
cmp
xchg
mov
add
fistp
add
mov
sbb
inc
xor
push
shl
mov
inc
mov
mov
hlt
cs
push
and
gs
out
(bad)
cmp
sub
rcr
push
fisubr
enter
repz
call
lds
dec
sub
add
mov
mov
sbb
mov
cmp
pop
cmp
pusha
imul
neg
pop
cs
push
stos
and
add
push
xchg
jge
push
jl
ins
adc
mov
push
shl
xchg
xchg
retf
movs
mov
add
add
mov
inc
sub
xchg
xchg
adc
sbb
mov
push
xchg
adc
sub
js
and
mov
sbb
out
add
add
inc
or
push
push
or
push
ins
mov
movs
pop
inc
mov
or
xchg
xchg
inc
pop
iret
and
add
xor
imul
stc
icebp
ja
sub
pop
or
ss
adc
jg
sub
pop
adc
adc
xor
sub
add
mov
(bad)
pop
mov
sub
std
push
test
idiv
nop
(bad)
jae
fwait
jecxz
sub
lock
sbb
mov
push
cmp
xchg
mov
mov
(bad)
in
pop
in
test
push
out
mov
push
ret
cmp
jecxz
sbb
or
call
shl
mov
fdivrp
pushf
enter
jmp
or
mov
jne
das
sbb
(bad)
mov
dec
stc
and
popf
cmps
rcl
mov
jbe
mov
mov
add
sar
mov
and
jno
push
sub
xchg
out
dec
outs
pop
sub
add
xchg
xchg
mov
repnz
push
fsubr
into
sbb
cmps
pop
jmp
scas
pop
mov
in
xlat
sub
and
daa
or
xlat
jnp
xor
fisubr
loope
fcmovnu
lds
repz
ficom
mov
cmp
cmp
(bad)
xchg
jns
cmps
or
pop
pop
xor
mov
push
xor
arpl
in
ins
stc
mov
std
push
mov
out
leave
(bad)
push
jmp
ret
add
repnz
data16
xchg
cmp
add
jns
arpl
or
iret
mov
sub
cld
fist
aad
fist
jecxz
pop
call
push
jo
jae
stos
call
add
xchg
js
fcmovbe
push
retf
mov
adc
push
in
lahf
mov
int
aaa
ds
cmp
(bad)
fwait
cmp
mov
cmp
rcl
movs
adc
mov
mov
or
imul
sar
sub
outs
rcr
add
out
pop
dec
popa
cmp
xchg
(bad)
je
js
push
or
mov
out
add
push
aas
jecxz
out
dec
ret
push
dec
arpl
aaa
xlat
mov
adc
(bad)
fcom
cmps
mov
sbb
rcl
ja
pop
(bad)
retf
bound
aaa
imul
cmps
test
test
shr
xlat
in
sti
adc
fxch
out
push
sub
push
push
leave
retf
cmp
test
leave
nop
lea
shr
(bad)
fprem
enter
pop
inc
inc
ret
jo
jne
inc
(bad)
cwde
ror
je
jae
mov
test
fadd
lods
mov
aad
pop
sar
mov
rcr
add
hlt
shr
adc
popa
imul
push
das
cmps
cmp
out
jnp
pushf
inc
imul
and
call
jge
clc
adc
sbb
mov
or
into
nop
imul
ins
mov
pusha
mov
jle
push
(bad)
sub
dec
inc
in
inc
pop
mov
pop
fnstenv
sub
or
ret
xchg
aam
movs
xor
or
mov
pushf
sbb
cmp
fwait
xchg
js
outs
jecxz
sbb
fcom
or
ins
sub
rol
sbb
out
xchg
std
lods
jg
ds
repz
cmp
ret
(bad)
ret
add
mov
adc
popa
xor
rcr
shr
hlt
mov
movs
fsub
fmulp
jmp
mov
dec
jo
in
nop
pop
movs
das
mul
mov
push
(bad)
cdq
aam
mov
int3
dec
fnsave
clc
lock
mov
data16
mov
adc
xor
fs
or
push
or
jmp
xor
jnp
add
std
push
shl
pop
mov
mov
mov
sbb
mov
fcmovne
push
retf
dec
pop
xchg
dec
mov
lods
lds
cmp
fiadd
es
repz
push
cmps
scas
push
inc
aas
xchg
mov
push
mov
cmps
push
cwde
dec
loopne
jnp
clc
adc
(bad)
js
push
(bad)
push
mov
in
add
das
and
(bad)
mov
add
xchg
mov
sbb
push
test
sti
jne
bound
mov
push
mov
mov
pop
inc
rol
bound
sbb
lods
adc
test
in
sbb
out
mov
cmps
inc
mov
fild
push
loopne
mov
jnp
jbe
mov
and
mov
pop
repz
loop
fisubr
and
mov
mov
and
and
add
int
inc
fs
jbe
repnz
or
adc
mov
xor
in
(bad)
pop
mov
scas
pop
sbb
mov
dec
fst
ins
pop
xor
add
and
stos
push
adc
in
inc
jecxz
cmp
inc
cs
xchg
pusha
dec
popa
lock
pop
mov
fisubr
fistp
std
adc
xor
pop
ss
in
test
inc
dec
outs
mov
mov
pop
xchg
xchg
ds
in
je
jne
jg
dec
lock
rcr
cmp
push
inc
pushf
fs
call
movs
pop
scas
xchg
and
call
popf
and
ja
push
push
or
ja
add
inc
sti
mov
adc
int3
mov
lods
popf
in
dec
pop
mov
(bad)
push
fmul
push
jns
pop
test
scas
cmp
(bad)
pop
mov
sbb
and
mov
dec
loop
int
adc
jae
fcmovb
sbb
loope
rcr
push
out
pop
data16
pop
push
shl
or
arpl
retf
fsincos
mov
fsubp
sub
in
lds
outs
(bad)
pop
pop
push
js
das
in
es
xor
in
jnp
mov
test
mov
or
fwait
dec
xchg
lods
into
fisttp
pop
mov
cmp
xor
inc
in
in
jae
faddp
test
fwait
je
or
scas
cmp
mov
outs
aaa
rcl
lods
mov
mov
dec
adc
in
jae
sbb
xor
jg
xchg
push
js
popa
ds
sahf
pop
mov
pop
jg
mov
test
xchg
jmp
xchg
stos
aaa
push
and
xchg
xchg
jbe
test
or
aaa
and
aas
push
and
pop
cmp
sahf
mov
jmp
sbb
dec
das
enter
pop
pop
mov
ror
lahf
fwait
push
sub
pop
push
aad
pusha
xchg
das
sub
movs
dec
dec
popf
(bad)
xlat
push
lds
mov
not
inc
mov
pop
ins
call
cmp
push
movs
aaa
push
imul
cmp
test
adc
push
repnz
stos
xor
pop
mov
or
cmp
add
push
fwait
sub
shl
out
mov
rol
cmp
out
mov
adc
push
mov
mov
je
int3
mov
xchg
inc
or
mov
mov
push
dec
in
jbe
aaa
sub
(bad)
leave
stos
add
hlt
mov
xor
pop
mov
clc
sbb
rol
jmp
aaa
mov
int
sub
cs
in
loopne
mov
push
sbb
mov
dec
int3
mov
xor
cmp
in
cmp
outs
add
push
mov
pop
div
sti
xor
sbb
(bad)
es
lods
loope
xchg
loopne
mov
aam
hlt
mov
adc
dec
add
sub
in
cmps
jmp
cmp
add
rcl
cld
ret
movs
std
mov
cmp
cli
add
xor
icebp
and
retf
in
cli
push
lods
sbb
retf
jp
les
push
mov
ja
je
fild
pusha
xchg
jle
mov
ret
data16
cmp
int3
mov
dec
adc
dec
xor
int
pop
mov
lock
pop
cdq
push
int3
mov
cmp
ss
dec
add
cmp
add
ret
fimul
xor
imul
push
cmp
cmps
or
push
ror
inc
cmp
cmp
loopne
fnstcw
mov
push
call
shl
dec
movs
add
mov
push
xlat
test
mov
lds
out
and
dec
sbb
in
sbb
fnclex
scas
jbe
and
xor
dec
enter
sub
jb
addr16
xchg
jp
xlat
imul
lods
xor
sub
mov
(bad)
or
in
or
xor
aad
cmps
add
daa
jle
and
sub
inc
jne
mov
stos
fld
jne
stc
inc
and
dec
xchg
repz
movs
rcr
mov
test
scas
test
jle
push
pop
jno
jae
jnp
and
lea
aam
or
pop
popf
stos
stos
mov
popw
add
cmp
rcr
js
stos
loop
push
jo
ret
movs
(bad)
adc
and
test
push
jge
pusha
aaa
les
rcl
mov
mov
pusha
pop
mov
(bad)
ds
ror
and
icebp
jb
push
sahf
mov
gs
jge
outs
(bad)
aam
sub
inc
outs
loop
call
cmp
js
inc
aam
fimul
call
mov
mov
(bad)
jp
std
loope
push
mov
xor
bound
(bad)
pop
in
lock
push
shl
sub
push
dec
(bad)
nop
and
mov
shr
push
push
jge
(bad)
loopne
aad
add
mov
cli
xlat
stc
mov
jb
push
sbb
in
ret
add
sub
pop
sbb
mov
mov
addps
lods
shl
push
fdiv
xchg
popf
call
jbe
or
xor
fcom
retf
adc
addr16
imul
mov
fld
inc
dec
jne
daa
ds
sub
pusha
xor
xor
aam
lock
es
add
push
std
and
mov
pushf
and
add
out
push
xor
loop
hlt
pop
popf
mov
fisttp
dec
add
cmps
sbb
xor
add
xlat
arpl
add
bnd
retf
enter
loopne
pop
mov
sbb
or
popa
shl
and
dec
cmp
dec
and
adc
pop
loop
jmp
sar
xor
test
sub
lods
add
mov
cwde
pop
pop
adc
aad
sbb
arpl
es
xchg
sub
add
and
test
pop
outs
xor
push
add
mov
jmp
mov
push
ins
cwde
or
pop
out
lock
sub
sub
int
in
xchg
out
(bad)
stos
std
adc
fsub
call
add
stos
push
es
xor
mov
gs
push
mov
jmp
ins
retf
(bad)
fisubr
call
das
adc
and
(bad)
sub
int
jg
iret
test
and
ds
xor
mov
out
(bad)
mov
(bad)
test
dec
lock
int3
add
add
jmp
or
pop
jmp
in
mov
push
aas
xchg
sahf
mov
pop
push
or
xchg
or
xchg
outs
add
add
pop
ins
das
lds
std
icebp
cdq
mov
nop
or
retf
and
add
xchg
jl
pop
sbb
imul
or
ins
out
push
mov
or
call
aaa
xchg
pop
jbe
addr16
int3
repz
retf
int
jo
dec
movs
test
(bad)
adc
in
jl
sub
add
std
or
shr
pop
mov
fstp
pop
dec
lods
popa
lock
mov
jecxz
sub
mov
hlt
mov
cmc
outs
or
imul
stos
xchg
into
jns
repnz
loop
or
push
and
mov
out
pop
mov
inc
adc
clc
jl
adc
fcomp
repz
push
pop
cmp
ficom
pop
xchg
dec
outs
inc
loopne
xlat
lds
fsubp
mov
stc
pop
adc
mov
fdivp
mov
lock
(bad)
mov
dec
mov
jo
push
add
sbb
push
ret
dec
hlt
movs
into
xchg
mov
push
(bad)
in
sub
ins
ins
add
xchg
push
cmps
adc
mov
call
sub
xor
xchg
icebp
loopne
mov
cmp
pop
das
mov
mov
sbb
scas
push
mov
fsubr
inc
jno
loopne
fmul
push
loop
int
enter
sahf
out
jl
push
cmps
(bad)
mov
fild
pop
mov
pop
pop
inc
mov
sbb
imul
cmp
push
ja
lods
aaa
xor
jmp
fcmovbe
or
sub
dec
test
cwde
loopne
(bad)
jl
jmp
sahf
sub
inc
imul
jmp
mov
in
pop
and
fnstenv
shl
pop
movs
adc
fcom
or
rcl
sbb
ds
inc
aaa
xchg
test
pop
mov
jae
stc
sbb
scas
les
(bad)
aaa
jge
sub
mov
lods
pop
mov
mov
sbb
push
dec
dec
pop
inc
loope
retf
(bad)
fldcw
adc
jne
and
jle
fwait
stc
cmps
pop
mov
loop
sub
mov
jg
dec
dec
adc
and
inc
sub
mov
jb
aaa
imul
loop
pop
pop
cmp
add
and
add
cs
xor
aaa
xchg
adc
not
or
rcl
std
adc
fwait
mov
cmp
aad
vmovntps
(bad)
push
cmps
std
sub
fisttp
mov
les
in
inc
adc
cmps
in
test
sbb
test
pop
aam
xchg
dec
xlat
out
ror
xor
test
out
inc
es
ins
stos
mov
mov
ror
and
adc
pop
clc
dec
cdq
fwait
ins
cmp
outs
fwait
jg
pop
sub
cmp
cmp
pop
cmp
mov
jb
clc
lahf
repnz
sub
cmps
out
or
cmp
test
(bad)
push
jecxz
in
mov
xor
sbb
aad
xchg
dec
add
test
in
ret
and
lods
mov
movs
mov
ins
xchg
push
in
push
rcr
mov
adc
cmp
jne
dec
cmp
scas
sar
test
outs
mov
xchg
(bad)
aas
xchg
or
or
pushf
cmp
clc
(bad)
addr16
xchg
iret
sti
jecxz
popf
fbstp
mov
addr16
sar
sti
xor
jns
mov
push
imul
mov
cmc
int
pusha
lods
mov
xor
pushf
jmp
stos
(bad)
into
lahf
arpl
push
in
xchg
cwde
inc
fstp
xor
pop
mov
xchg
scas
ror
inc
je
ins
sbb
test
call
cmc
jo
xor
jno
loope
retf
fldcw
dec
cmps
and
add
int3
sbb
jbe
push
hlt
test
push
push
loop
scas
dec
shr
add
ret
inc
and
jg
gs
adc
shr
sbb
imul
mov
xchg
out
mov
add
(bad)
daa
rcl
push
bound
xchg
xor
daa
jmp
mov
xor
into
sub
xchg
mov
dec
jge
push
push
sahf
stos
push
retf
mov
inc
call
cmps
std
jp
mov
cmc
inc
fdiv
fadd
outs
jmp
pop
aad
rcr
mov
mov
inc
or
shl
(bad)
movs
lods
popa
(bad)
data16
or
(bad)
hlt
fisub
ror
mov
fiadd
push
mov
hlt
adc
dec
cli
or
cwde
das
push
inc
addr16
push
pop
scas
cmc
ret
or
or
cmovbe
pop
jmp
add
xor
jge
or
push
(bad)
mov
aam
stos
xor
sub
jmp
imul
cmp
ins
xor
dec
or
push
xchg
push
aas
nop
mov
nop
in
xor
aad
out
xchg
hlt
adc
push
stc
loope
test
gs
sub
int
sub
sar
and
or
jb
test
mov
push
or
shl
out
std
lods
inc
xor
add
mov
jmp
addr16
xor
inc
leave
in
add
mov
not
test
add
mov
push
int3
xchg
jmp
jbe
das
xchg
adc
xchg
aas
inc
cli
iret
cmova
in
mov
in
int3
add
mov
push
xchg
sub
jecxz
and
mov
jns
loop
inc
cmp
out
or
mov
and
repnz
mov
sbb
mov
test
iret
add
lock
push
push
jb
not
mov
out
push
dec
popa
popa
mov
ret
pop
pusha
pop
retf
call
xchg
mov
ret
cmp
in
jle
mov
data16
and
sbb
ret
icebp
cld
rcr
into
ds
push
(bad)
jnp
pusha
(bad)
xor
pop
lea
mov
push
mov
ror
adc
mov
sub
shld
xchg
stc
xor
mov
and
rcl
in
(bad)
ds
or
test
shl
sub
in
addr16
xor
jl
and
push
and
mov
mov
dec
ins
mov
stc
jb
pop
sar
push
jns
bound
daa
clc
inc
adc
je
iret
test
adc
adc
pop
loope
push
push
xchg
fbld
mov
rcl
out
sbb
loop
push
nop
mov
sub
xor
xchg
adc
popa
sahf
xchg
jmp
add
daa
int3
aaa
mov
jge
jmp
rcr
xchg
sbb
shr
and
mov
jmp
rcl
push
enter
ret
in
(bad)
jmp
jnp
jle
into
mov
jge
ds
(bad)
mov
xlat
pushf
shl
bound
jb
pop
test
add
mov
cmp
push
jle
dec
repz
aam
jle
add
xchg
sub
or
add
mov
mov
pushf
adc
adc
cmp
stos
repz
inc
jecxz
pop
imul
ds
stos
push
adc
add
ds
mov
dec
jg
mov
inc
sbb
mov
jl
push
mov
dec
mov
push
push
mov
lock
cld
in
pop
daa
je
push
scas
mov
ss
idiv
push
(bad)
aad
(bad)
loop
cmc
test
ja
leave
iret
enter
jns
cmp
pop
mov
jle
push
inc
fcomp
lds
loopne
test
mov
mov
mov
add
repnz
and
xor
leave
sti
shl
and
mov
xchg
dec
adc
inc
xchg
add
inc
std
xlat
cmps
pop
jecxz
adc
push
xchg
out
movs
push
xchg
add
and
js
push
mov
ins
inc
pop
jge
jl
in
inc
into
rol
lahf
sub
push
adc
cwde
adc
cmp
mov
gs
pop
pop
and
mov
jns
aaa
ins
aam
xchg
add
std
les
dec
pop
scas
push
mov
cmp
sbb
cmp
movs
adc
push
lods
push
and
stos
in
lahf
and
pusha
push
fld
sbb
mov
movs
fs
fsubr
pop
xchg
add
fwait
mov
xor
mov
rol
push
jmp
xchg
pop
mov
ins
imul
imul
aas
ds
jae
pop
aam
push
mov
ds
adc
cmps
fadd
sti
das
lahf
ss
cmp
out
jbe
es
xor
push
push
jbe
cmp
jns
xchg
clc
sbb
xchg
push
xchg
in
mov
pusha
jae
movs
iret
sar
rcr
shl
popf
mov
jae
ret
shr
xor
jle
call
cmc
imul
xor
push
jp
jle
jle
iret
popa
(bad)
mov
sub
adc
pop
das
fs
pop
fmul
push
pop
jns
mov
lock
cmc
or
mov
xor
mov
stos
add
jmp
xor
dec
push
je
jmp
ds
out
(bad)
push
out
(bad)
lods
pop
and
inc
add
test
test
cmp
push
cmp
mov
cmp
push
push
sbb
or
das
sbb
cmp
ret
inc
lahf
sbb
or
fistp
cld
fmul
dec
jmp
jmp
jbe
repnz
adc
or
test
scas
lahf
cdq
inc
xchg
out
addr16
xor
out
out
test
xor
jmp
div
leave
dec
jnp
push
add
das
scas
cs
int
lahf
dec
sti
add
popf
and
div
fbld
mov
data16
das
sbb
cdq
xchg
inc
dec
inc
mov
imul
int
lods
add
push
les
jno
push
cmp
test
shl
inc
jb
xlat
scas
inc
shl
xlat
xor
xor
rol
add
mov
pop
and
or
jg
test
(bad)
inc
sbb
add
push
cmp
jecxz
mov
ret
fisttp
pusha
jp
xor
movs
pop
fldcw
sbb
stos
jns
add
cwde
sub
xchg
pop
jae
mov
sub
cli
loopne
cli
xlat
jge
dec
jp
push
mov
clc
inc
pop
jmp
pop
js
movs
mov
jo
enter
int
adc
inc
stos
adc
xor
mov
pop
push
dec
jp
mov
push
addr16
lock
mov
imul
pop
pop
and
or
ins
push
mov
mov
push
or
loop
xor
scas
push
cmp
jg
adc
dec
out
fcmovu
mov
dec
mov
(bad)
or
movs
fmul
nop
adc
cmc
lds
mov
mov
jne
dec
mov
pop
retf
in
call
repz
pop
jbe
inc
adc
pop
call
xor
in
popf
add
mov
cli
mov
jns
jecxz
push
repnz
push
mov
cmp
leave
inc
mov
add
or
imul
(bad)
push
dec
sbb
shl
out
push
push
scas
shl
cs
xchg
out
sbb
sahf
push
cs
fisttp
repz
xor
and
test
rol
jo
mov
adc
adc
jmp
(bad)
push
arpl
loopne
push
test
push
jmp
es
retf
(bad)
call
fs
adc
cmp
jg
mov
lea
out
dec
jbe
dec
bound
rcl
ss
stos
push
jae
repz
mov
arpl
int
(bad)
mov
dec
sub
mov
xchg
add
ds
adc
push
bound
add
add
sub
shl
call
test
in
loop
mov
and
pop
inc
jle
jbe
push
mov
ss
fdivr
scas
adc
adc
mov
imul
not
fcomp
adc
pop
packsswb
add
icebp
mov
cmp
int
pop
jp
call
rcl
aas
or
dec
pop
push
mov
pop
inc
push
std
test
dec
adc
cmps
scas
jmp
aad
cdq
mov
push
dec
gs
pushf
inc
sbb
pop
adc
mov
or
and
xor
add
pop
push
icebp
jecxz
fsubr
xchg
jns
iret
(bad)
call
inc
daa
out
outs
out
mov
dec
data16
xchg
pop
xchg
(bad)
xchg
jmp
xor
aad
mov
ins
aaa
(bad)
enter
(bad)
adc
dec
pcmpeqd
adc
mov
add
mov
push
add
xor
sbb
mov
int
mov
pushf
loopne
add
inc
ds
jns
push
psubusb
(bad)
and
pop
gs
call
stos
in
scas
add
int
retf
jmp
icebp
xor
fmul
add
jae
push
xor
inc
div
jo
aad
cld
pop
aas
popa
inc
inc
adc
int
mov
fnstenv
out
std
mov
fistp
rdmsr
add
hlt
arpl
mov
or
mov
and
inc
mov
out
out
(bad)
pop
sbb
inc
mov
adc
sub
rcr
scas
mov
add
sahf
mov
pushf
retf
inc
pop
mov
std
fwait
pop
inc
fs
cmp
(bad)
hlt
sub
sub
adc
mov
in
xlat
retf
mov
push
mov
mov
test
in
shl
jns
pop
sbb
sub
mov
xchg
mov
aad
test
mov
xor
lods
jle
fistp
bound
popa
mov
jg
cwde
scas
rcl
jecxz
adc
pop
pusha
cs
jo
adc
xor
mov
sbb
pop
jno
stos
aaa
aas
inc
mov
mov
cmp
jns
sbb
fldcw
(bad)
jb
add
(bad)
lods
mov
sar
xlat
pop
leave
out
pop
cmp
dec
imul
call
jne
aaa
enter
in
icebp
and
ficom
lock
fistp
ja
cmp
push
pop
and
jmp
cmp
pop
xchg
dec
jnp
fucomi
and
sub
xor
jns
pop
adc
or
int3
outs
xchg
nop
das
pop
adc
jne
je
pop
(bad)
shl
repz
(bad)
addr16
(bad)
test
ins
xchg
(bad)
mov
cmp
jp
or
fsubp
cmp
loop
inc
cdq
out
mov
imul
ja
cmp
aaa
jl
dec
jae
arpl
cmp
test
(bad)
inc
push
cmp
push
mov
popa
inc
pop
sub
pusha
sub
mov
(bad)
and
fiadd
xchg
sub
add
adc
lock
push
jecxz
inc
pop
lds
arpl
adc
sbb
es
les
mov
int
push
aaa
xor
add
jp
pusha
jl
lock
mov
enter
hlt
cld
push
iret
and
int3
pushf
(bad)
mov
jae
sbb
jbe
out
sub
sbb
xlat
inc
sub
clc
call
ss
stos
mov
push
ss
add
imul
dec
sbb
add
sbb
add
gs
mov
xor
push
pop
mov
xchg
sahf
mov
mov
inc
xchg
cwde
or
mov
jae
cmc
mov
repnz
mov
adc
sub
inc
jp
pop
pop
movs
mov
mov
pop
mov
jmp
hlt
clc
jo
movs
outs
pop
jbe
xchg
or
xchg
push
jae
fwait
dec
pop
mov
add
bound
(bad)
fld
leave
xor
dec
add
jecxz
and
shl
sbb
push
out
jge
mov
in
js
jg
cmovl
cs
fld
push
cmps
xor
(bad)
idiv
stc
(bad)
(bad)
cld
and
cli
pop
inc
ds
je
or
or
sti
movs
movs
sbb
idiv
loop
push
mov
push
inc
inc
mov
pop
cwde
add
inc
pop
cdq
cmp
add
jecxz
test
mov
stos
dec
in
movs
(bad)
loopne
int3
inc
call
ja
jb
sub
lock
mov
fcom
outs
mov
mov
(bad)
into
mov
sub
js
test
leave
inc
xchg
dec
lahf
into
jns
mov
sbb
dec
in
mov
jl
mov
inc
sbb
mov
lahf
ret
loop
xchg
ins
loop
sahf
iret
retf
ror
lds
inc
adc
push
and
dec
push
push
leave
pop
ror
js
ins
mov
bound
clc
or
mov
aam
jnp
jae
mul
aaa
jg
push
inc
cmp
mov
aam
push
push
outs
mov
jmp
pop
jne
movs
inc
inc
mov
and
inc
lahf
add
adc
cmp
popa
mov
loope
jae
sahf
jecxz
fld
and
sub
lock
dec
push
in
xchg
mov
jecxz
xchg
repz
aaa
leave
mov
in
sub
loopne
mov
pusha
or
je
loopne
dec
xor
push
adc
jb
rol
add
pusha
jmp
add
nop
cmp
arpl
mov
inc
lods
cmp
fwait
mov
out
jg
jecxz
sbb
idiv
add
adc
arpl
inc
cs
pop
ins
pop
fld
add
ins
xchg
pop
aas
pop
inc
mov
push
jmp
mov
lods
or
mov
and
add
test
sahf
sub
imul
cmps
sti
fst
aad
dec
imul
and
idiv
jge
movs
ja
sub
fsub
std
inc
in
mov
cmp
add
mov
xchg
mov
sub
push
cmp
and
mov
jg
je
push
pusha
and
addr16
icebp
pop
jne
inc
imul
cs
mov
mov
jge
xchg
out
(bad)
cmp
mov
dec
loop
sbb
ja
(bad)
jnp
imul
lods
or
(bad)
retf
imul
fcom
inc
ins
and
mov
adc
pusha
dec
xor
mov
add
dec
mov
cdq
dec
jae
in
retf
dec
int
fcmovb
and
mov
pop
xchg
outs
popa
shl
retf
inc
std
xor
stos
in
pop
ss
inc
in
outs
jns
cli
or
loope
test
lock
mov
cdq
stos
int3
mov
mov
mov
xor
test
mov
les
add
or
add
dec
and
and
dec
sbb
jnp
sub
mov
mov
gs
mov
shl
jle
mov
or
cli
fisttp
xchg
xor
add
out
and
push
xor
repz
ja
mov
push
(bad)
iret
push
xchg
call
pop
push
mov
mov
cmp
sbb
and
popa
sub
cwde
daa
and
call
add
lea
sub
adc
int
mov
or
retf
movs
movs
push
add
scas
out
mov
mov
and
jb
ret
sar
movs
fcmovnb
ja
pop
adc
mov
test
add
sub
rol
je
dec
in
fadd
cmp
mov
into
or
jnp
mov
or
xchg
mov
out
jle
dec
jo
sub
and
pop
jno
jns
dec
xor
or
aad
xchg
inc
push
jmp
and
pop
jns
leave
dec
inc
jns
repz
out
movs
xchg
not
or
call
pop
push
pop
add
cmc
fs
(bad)
into
add
sub
loopne
dec
cmp
and
or
pop
add
add
or
into
dec
push
jge
out
imul
shl
mov
mov
xor
add
hlt
movs
rol
mov
icebp
in
sub
jge
jno
xchg
xchg
inc
inc
mov
scas
icebp
mov
mov
jmp
shl
in
iret
pop
mov
xchg
inc
daa
sar
pusha
push
addr16
out
and
fincstp
(bad)
sub
dec
inc
bnd
cmp
fldenv
add
sub
xor
call
sub
sub
(bad)
mov
sbb
clc
jmp
jecxz
mov
add
mov
xchg
repz
aam
mov
xchg
pusha
mov
stos
or
and
jo
fnstenv
call
dec
add
test
repnz
mov
aaa
cmp
or
push
call
mov
cmp
mov
adc
xor
push
repz
pop
cdq
sar
scas
fwait
scas
push
mov
mov
sub
sar
stos
fcomi
lea
imul
pop
in
lods
imul
xor
lock
movs
pop
jb
rcr
ja
jns
adc
ja
(bad)
(bad)
xchg
adc
dec
jge
or
and
xor
mov
inc
ss
pop
icebp
inc
int3
sub
jns
shr
addr16
cmc
retf
inc
mov
pop
je
push
shr
dec
rcr
mov
xchg
push
and
ins
xchg
aas
ret
pop
mov
or
in
sahf
ret
comiss
push
sti
xor
repz
push
push
cmps
les
rcl
pop
and
jo
ss
les
stos
(bad)
dec
mov
jns
adc
add
in
dec
and
icebp
mov
or
and
jmp
loop
cwde
retf
and
gs
daa
mov
mov
clc
mov
fstp
das
loope
pusha
scas
push
mov
fstp
xor
call
movs
hlt
fsubr
loope
test
or
sbb
or
fs
outs
ja
xlat
sbb
int
inc
sahf
mov
jnp
cmp
push
adc
ds
sub
add
xchg
pop
and
in
dec
pop
push
mov
sbb
clc
pop
outs
jmp
nop
add
cmp
ins
jne
pusha
fdivr
movs
test
addr16
pop
out
dec
imul
sbb
or
xchg
ins
jo
cmps
adc
js
aad
out
cmps
int3
not
jne
sbb
xchg
inc
jg
inc
jp
sbb
jno
dec
mov
cli
dec
or
add
out
mov
mov
inc
inc
cli
popa
out
call
js
ret
mov
push
xchg
adc
test
dec
inc
inc
popf
cs
mov
das
sbb
or
or
dec
stc
xchg
loop
cmp
mov
(bad)
aad
fcom
xchg
dec
fmul
ret
imul
test
ds
(bad)
push
dec
add
mov
aad
jnp
in
into
jnp
shr
xchg
test
sbb
jb
sbb
mov
push
rep
dec
pop
pop
fmul
adc
jnp
push
dec
movs
aaa
mov
jns
retf
adc
cli
add
and
mov
xor
mov
iret
repnz
lods
outs
add
pop
adc
mov
mov
sub
les
sbb
mov
stc
sub
stc
mov
push
xchg
stos
jl
push
add
xchg
or
loope
fdivr
xchg
cmp
dec
shr
cmp
scas
arpl
cmp
or
dec
clc
mov
dec
or
fmul
dec
mov
sbb
add
jg
xchg
xor
push
data16
jnp
test
push
stos
int3
test
lds
test
xor
fdiv
retf
retf
outs
fdivr
(bad)
cmp
mov
mov
ds
cmps
jg
or
enter
pop
imul
(bad)
in
(bad)
clc
xchg
pop
int3
mov
pop
jbe
xor
xor
imul
jo
mov
push
clc
lds
rcr
(bad)
stc
pop
cmp
iret
cmps
mov
add
or
fisubr
mov
inc
cdq
sar
in
mov
or
add
xchg
pop
lods
jl
pop
mov
mov
int
rol
stos
mov
int
fs
mul
add
sub
or
jb
mov
mov
stos
sub
jbe
dec
imul
xchg
cmp
jle
popf
data16
sub
sub
fidiv
mov
ss
nop
aaa
or
pop
dec
popa
push
sbb
xchg
push
jns
mov
(bad)
inc
test
jecxz
das
sahf
loopne
aaa
adc
jae
mov
fisttp
push
fidiv
adc
test
cmp
cmp
imul
or
push
pop
cmps
hlt
aad
mov
fidivr
popf
(bad)
(bad)
mov
mov
xchg
mov
and
data16
sbb
pusha
add
(bad)
movs
inc
inc
mov
ds
bound
jmp
shr
mov
ja
movs
arpl
outs
jl
or
add
js
mov
xor
sub
cmp
aaa
mov
stos
xchg
je
retf
inc
std
sbb
mov
mov
clc
in
rcl
jns
fisttp
cmp
ins
sbb
mov
sub
dec
not
call
daa
popa
mov
push
push
cdq
push
mov
leave
jb
jae
dec
cmp
xchg
retf
mov
xchg
fisttp
cmp
mov
xchg
cs
adc
lahf
lahf
inc
std
cli
add
aas
scas
sub
and
sub
mov
mov
gs
(bad)
jno
push
sub
or
fimul
push
mov
xor
xchg
sbb
mov
enter
mov
rcr
enter
push
inc
xor
mov
xchg
mov
ins
ror
mov
push
fwait
dec
stos
sub
imul
jmp
cld
out
ffree
les
repz
repz
sti
push
iret
into
fisub
push
push
movs
inc
and
add
test
dec
hlt
cmp
inc
pop
or
mov
xchg
arpl
cwde
rcr
ss
rol
ret
and
lock
jg
dec
cdq
jmp
cmp
adc
cmp
rcr
test
fwait
xor
fst
(bad)
jnp
cmp
sahf
and
mov
cld
jns
(bad)
mov
addr16
jno
popf
clc
test
ret
cmps
ja
addr16
mov
mov
fistp
dec
test
movs
int3
test
and
adc
and
jecxz
add
iret
push
imul
xor
sar
xor
pop
xchg
xchg
hlt
out
and
mov
cmp
(bad)
jl
jl
dec
xor
leave
fisttp
or
in
cmp
stos
sbb
repnz
pushf
les
jne
push
jge
lahf
add
sub
jo
test
cmp
nop
sar
ss
stc
imul
imul
jge
mov
fs
ds
mov
cmp
push
xor
in
in
push
in
cmc
xlat
movs
cmp
push
lods
stos
outs
add
cmps
sbb
clc
std
cmp
mov
cld
mov
fs
cmp
push
adc
jb
jp
sub
mov
lods
fidivr
xchg
test
nop
mov
adc
ret
int3
loope
sub
or
add
pop
adc
dec
jo
pop
jbe
pop
retf
mov
sub
in
repnz
jmp
push
sub
inc
add
daa
or
ror
lds
sbb
cmovno
lds
cdq
int3
pop
jg
inc
ins
jmp
ret
aaa
ret
or
popf
cmp
stc
cmp
sub
fidivr
(bad)
scas
fwait
into
aas
aaa
ret
adc
mov
adc
fistp
je
inc
sti
repnz
stos
loope
cmp
push
sub
mov
jmp
enter
pushf
int3
dec
mov
jmp
mov
push
cwde
and
dec
jb
fld
aad
lahf
sbb
add
mov
sar
pop
loop
test
sub
shl
dec
rcl
lods
jmp
cmp
xchg
mov
add
mov
push
xor
jmp
pusha
shr
enter
aas
mov
adc
imul
mov
mul
pop
test
das
in
xchg
call
mov
xchg
dec
xchg
into
test
das
pop
mov
outs
push
add
test
xchg
(bad)
dec
ret
fsub
adc
and
mov
mov
fist
mov
inc
aas
fadd
mov
xor
and
xchg
cmp
mov
dec
add
jnp
stos
ins
js
(bad)
add
xor
and
jmp
push
popa
rol
cdq
fs
sub
and
xchg
jmp
mov
mov
aas
sbb
pusha
out
push
fwait
das
int
sub
jp
leave
stc
fild
aaa
into
adc
sbb
xchg
xor
jp
sbb
sti
xor
leave
or
adc
int
or
pop
pop
pop
movs
fmul
into
push
inc
das
inc
jmp
or
push
push
inc
cld
xlat
cmps
ret
sub
cs
jnp
in
xchg
and
mov
inc
popa
sub
aas
dec
xchg
icebp
int
imul
adc
clc
xor
test
aas
dec
or
aad
popa
mov
inc
adc
in
cmp
lds
cdq
aaa
mov
mov
jae
mov
jo
ins
push
pop
sub
out
or
int3
scas
fcmove
inc
and
cmp
inc
je
inc
mov
inc
loop
sub
cmp
cwde
mov
mov
jl
test
mov
inc
hlt
(bad)
sbb
neg
outs
popa
jg
popa
push
leave
mov
cmp
fcomp
imul
sbb
xchg
or
test
mov
scas
pop
xlat
dec
mov
test
sbb
or
xchg
fisubr
jno
xchg
ja
les
or
es
aad
mov
dec
mov
mov
loope
call
jae
cmps
sub
nop
ja
icebp
jge
fld
jno
mov
pop
hlt
ja
call
xchg
mov
or
sar
aam
into
into
mov
pop
ins
mov
mov
add
and
mov
sub
mov
ins
mov
ret
cwde
jo
(bad)
cld
es
cdq
xchg
jb
mov
enter
pop
sbb
cmp
or
test
(bad)
cli
nop
in
inc
mov
mov
adc
xor
js
cmc
sub
push
cdq
frstor
cmp
sub
and
push
jno
fist
xchg
ins
sub
cmps
sti
jle
(bad)
push
fstp
xchg
adc
jbe
sub
cmp
xchg
stos
into
aaa
jmp
pusha
sahf
mov
movs
jg
loope
xor
popf
cmp
add
mov
jb
sti
dec
rcl
fldcw
and
pop
(bad)
ins
out
ror
out
add
push
sbb
dec
xor
jmp
or
addr16
add
cmc
test
ret
sub
out
adc
test
add
rcr
arpl
je
in
mov
clc
fstp
mov
movs
xlat
inc
inc
push
ret
jae
ins
mov
mov
mov
cmp
dec
ret
push
add
mov
cmp
mov
fmul
jg
aad
imul
leave
add
mov
inc
push
and
(bad)
mov
test
sbb
ret
jle
ds
mov
mov
pop
jecxz
pop
pusha
and
test
adc
xor
retf
jno
int3
cmp
out
mov
pop
int
dec
mov
fndisi(8087
loope
mul
xchg
xchg
je
mov
jg
pop
arpl
add
and
mov
lods
pop
stc
pop
loop
push
cmp
movs
push
mov
jb
outs
adc
lea
call
xchg
not
fdivp
pushf
movs
clc
ror
cmp
sahf
or
push
pop
fwait
stc
xor
mov
cmps
in
fidiv
leave
push
mov
stc
jo
sbb
pusha
push
fs
scas
fstp
xchg
inc
dec
add
sub
push
rcr
push
and
sar
pop
icebp
dec
push
mov
adc
into
out
enter
xor
call
mov
ins
lea
cli
mov
ror
icebp
dec
inc
retf
ins
push
pop
arpl
mov
xor
fs
pop
cmp
mov
(bad)
test
aam
je
sub
lods
movs
xchg
mov
popa
pop
or
jle
lea
pushf
sbb
popa
bound
test
push
in
pusha
neg
pop
retf
cmp
pushf
(bad)
jo
pop
call
mov
test
std
test
into
mov
dec
arpl
ret
mov
jne
cmp
dec
ret
adc
adc
sbb
push
rcr
inc
mov
jne
sub
(bad)
cmp
dec
push
ret
jmp
stc
inc
push
jb
xor
aam
mov
adc
in
nop
xchg
cmp
xor
push
popf
xor
add
mov
sbb
sar
push
rol
jl
mov
dec
lods
adc
jge
popa
movs
lea
movs
bound
call
mov
in
popf
rcl
mov
sub
or
leave
mov
(bad)
pushf
out
mov
cmps
mov
sar
adc
pop
bnd
mov
jp
stc
pop
xor
jbe
jbe
cli
(bad)
cld
xor
ins
test
mov
or
loopne
neg
sbb
xor
retf
mov
push
jge
int3
or
lea
nop
mov
inc
fs
mov
pop
push
(bad)
outs
movs
mov
retf
in
fs
addr16
mov
mov
adc
xor
out
mov
sub
js
pusha
jg
inc
dec
xchg
fmul
sbb
(bad)
mov
dec
inc
nop
in
lock
inc
jp
pop
sar
mov
sbb
outs
les
pop
mov
out
ficom
repnz
lods
sub
or
cmps
loopne
or
jp
push
sbb
es
push
sub
retf
in
shl
push
and
lds
outs
daa
pop
jne
ja
pop
in
jb
cmp
dec
inc
jmp
jo
test
inc
push
aas
ins
push
pop
push
jmp
or
shl
ror
jne
mov
call
dec
arpl
or
cmc
push
mov
pop
xchg
mov
js
pop
mov
push
jge
push
int
ret
(bad)
sti
nop
fs
dec
and
out
dec
sar
xchg
mov
pop
sar
dec
clc
sub
gs
aam
mov
and
sbb
arpl
leave
ror
dec
call
sbb
(bad)
sbb
mov
mov
xchg
je
ins
sbb
jb
hlt
jns
enter
fwait
jmp
int3
xor
lea
repnz
stc
push
sub
and
lods
adc
jne
lods
int
sub
dec
pop
jno
jmp
bound
pop
(bad)
repnz
xchg
cmp
xchg
fs
xchg
pop
in
add
pop
pop
push
and
dec
pushf
mov
pop
add
sbb
fwait
mov
ficom
add
or
xchg
mov
xor
cdq
ficom
dec
(bad)
ss
loope
jmp
enter
sub
mov
xor
popf
jmp
jne
gs
iret
les
mov
(bad)
cmps
cli
or
cmp
mov
lods
push
push
dec
test
xchg
shl
fadd
mov
outs
pop
xchg
into
(bad)
mov
jo
test
rol
loop
and
mov
(bad)
sbb
jle
mov
enter
inc
aaa
fisubr
jno
push
sub
mov
cli
adc
out
(bad)
aam
pop
das
jmp
mov
adc
cmp
leave
call
shl
add
xchg
fcmove
sbb
lods
jo
add
gs
repnz
sub
(bad)
push
dec
and
pop
outs
pop
shr
sub
cmp
sub
dec
sar
cmp
and
cmp
mul
js
or
and
imul
inc
les
loope
aam
dec
pop
cmp
add
mov
push
imul
sub
mov
retf
mov
push
les
pop
imul
cdq
inc
push
(bad)
push
(bad)
mov
xor
xchg
stos
inc
push
mov
loop
popf
loope
jns
and
out
mov
(bad)
xchg
fistp
aad
test
xchg
(bad)
repnz
dec
or
test
in
pop
loope
or
and
xchg
cmp
call
push
mov
imul
pop
mov
outs
popa
jae
imul
pop
cmp
mov
inc
movs
add
mov
xor
dec
loop
ja
loop
jg
push
or
push
xlat
dec
mov
dec
stc
retf
and
pop
push
ror
and
and
out
pop
cwde
mov
sbb
jnp
adc
mov
mov
outs
or
je
or
adc
sti
mov
mov
stos
sbb
push
fistp
int
fist
shl
ins
inc
pop
mov
pop
mov
(bad)
jle
fstp
fmul
jne
imul
leave
xchg
adc
mov
repz
pop
mov
ret
cmp
fisub
jno
adc
mov
in
inc
dec
pusha
cwde
ficom
outs
test
test
loope
mov
dec
jb
jne
or
in
push
push
pop
ror
enter
cwde
xchg
sar
rcl
inc
nop
(bad)
pop
adc
pop
inc
data16
jecxz
jae
je
sbb
adc
jae
adc
retf
jbe
jo
bound
int
mov
and
mov
inc
(bad)
loope
cmps
mov
ret
hlt
sti
rcl
ret
mov
lea
cdq
push
xchg
and
mov
dec
(bad)
sbb
cmp
outs
aaa
fiadd
and
dec
addr16
stos
push
jge
popa
mov
cmp
dec
xchg
or
(bad)
sbb
pop
(bad)
fstp
test
inc
push
cmp
addr16
(bad)
cmp
sub
push
outs
jg
daa
xor
sub
sbb
std
adc
inc
adc
retf
scas
mov
add
les
inc
fst
sbb
fistp
cli
scas
aaa
push
inc
gs
pop
xchg
arpl
stos
sub
(bad)
out
jnp
mov
cld
xchg
sbb
pop
sbb
in
adc
sub
xlat
out
retf
jns
xchg
lods
jg
pop
pop
mov
mov
lds
mov
ret
repz
mov
lock
pop
sbb
push
add
jo
dec
sub
pop
inc
mov
sbb
or
jnp
jmp
jp
fadd
adc
mov
cld
adc
call
retf
mov
mov
sbb
jmp
sub
push
(bad)
pop
jg
mov
call
mov
sub
pop
arpl
cmps
sub
and
jo
sub
mov
loop
mov
cmps
aas
(bad)
mov
in
hlt
mov
test
ins
cwde
mov
fdiv
xor
test
xchg
jl
loop
xchg
neg
adc
sbb
inc
loope
or
(bad)
out
mov
and
mov
fs
jns
mov
pop
jge
lea
popf
outs
cmp
push
xor
movs
adc
(bad)
icebp
xor
add
shl
sub
fld
daa
inc
div
fbld
jae
cmp
test
int
iret
xchg
mov
scas
sub
stc
fcomi
adc
loopne
shl
ins
xlat
jno
enter
cmc
loope
int3
mov
sbb
ins
and
and
mov
loopne
mov
jmp
ds
es
test
jl
dec
xchg
add
or
das
ror
ds
pop
jmp
shr
cmp
or
jmp
pushf
scas
xchg
test
test
sti
push
fs
jno
sub
pop
adc
xchg
add
data16
dec
jnp
outs
in
aaa
je
inc
aaa
stos
jb
fsubp
sbb
fnstsw
les
test
add
pop
imul
(bad)
retf
push
(bad)
stos
push
mov
push
in
pop
div
mov
cmps
push
mov
es
loop
jg
inc
aas
jle
xor
mov
bound
push
pop
imul
or
arpl
gs
inc
es
jb
push
pop
leave
outs
and
push
lods
popa
push
cs
cdq
push
cwde
in
or
xor
push
inc
cmp
push
xchg
add
push
daa
and
call
shr
out
fst
and
sbb
push
in
(bad)
adc
jecxz
and
call
and
mov
sbb
retf
push
dec
sbb
fsubr
cli
push
lods
mov
inc
cmp
out
out
outs
mov
jne
pop
jns
movs
nop
pop
add
shl
aam
popf
fwait
sbb
popf
and
ja
mov
ror
jecxz
lock
imul
add
pop
and
stos
jmp
addr16
mov
mov
outs
mov
cmps
mov
xchg
push
data16
cmp
xor
push
imul
push
sbb
mov
dec
push
sbb
xchg
add
cmps
aas
clc
xchg
push
dec
inc
pop
push
xchg
lods
mov
xchg
test
aam
xor
rcr
push
hlt
ret
cmc
(bad)
push
scas
call
inc
mov
xor
dec
in
mov
mov
xchg
push
jmp
dec
adc
mov
mov
leave
mov
pop
sub
cmp
mov
popa
cmp
and
iret
dec
ds
jne
xor
dec
out
sub
clc
test
add
repnz
lods
je
out
cdq
mov
outs
mov
cmps
lock
mov
adc
push
mov
stos
add
std
scas
or
mul
lods
aam
aam
jg
cmp
pop
test
xchg
ins
pop
xchg
xchg
stc
sbb
das
retf
data16
rcl
repz
lock
xchg
retf
lods
fistp
rol
fild
fiadd
scas
adc
mov
loope
xchg
out
out
sbb
aaa
repnz
add
jg
sbb
and
enter
push
stos
mov
ret
enter
mov
adc
mov
sar
dec
retf
shl
out
push
test
add
cld
stos
cdq
sub
aaa
scas
dec
adc
out
sub
test
inc
movs
icebp
dec
enter
loopne
loopne
iret
jae
xchg
arpl
mov
imul
out
cld
mov
cmps
sub
and
jp
sub
cmp
dec
les
(bad)
fldenv
cmp
loope
ins
jg
mov
(bad)
shl
lods
lds
dec
scas
hlt
cwde
pop
(bad)
cs
sub
push
addr16
popf
loope
imul
push
mov
fist
xor
inc
sbb
mov
sbb
cmp
lods
sub
repz
jb
cmp
xlat
xchg
fisubr
fwait
xchg
fucomp
in
outs
fs
pop
mov
fnsave
cmp
dec
shl
pushf
pop
mov
mov
fldcw
outs
loope
test
cmp
loopne
inc
pop
sti
retf
jb
ss
add
mov
rol
inc
sub
(bad)
in
mov
aaa
push
(bad)
and
rol
push
pop
jmp
sbb
ss
jns
repz
jns
inc
xor
push
popf
outs
mov
idiv
add
hlt
xchg
bound
leave
jne
fldenv
dec
ja
aad
or
(bad)
int3
call
mov
fnstsw
or
cmps
adc
fdivr
add
mov
ret
mov
jge
mov
sub
push
(bad)
fs
ins
imul
lods
arpl
cld
adc
push
cmp
in
scas
cmc
inc
movs
shr
mov
mov
xlat
fidiv
add
in
outs
je
mov
mov
loopne
pop
mov
sbb
mov
pushf
dec
add
js
or
(bad)
aad
daa
das
mov
cmps
inc
addr16
jne
and
jo
loop
aad
push
xchg
sbb
out
push
mov
cmc
repnz
loop
ins
stc
fdivr
ss
ror
iret
shl
mov
test
jge
or
and
ficomp
leave
xchg
pop
ins
leave
fistp
(bad)
xchg
test
outs
sub
fldcw
mov
dec
call
push
push
pop
fisub
xchg
sub
push
push
repnz
cmp
sub
into
push
jnp
ins
addr16
mov
les
ret
les
mov
and
js
mov
enter
mov
adc
mov
(bad)
jmp
jge
es
test
xor
inc
dec
mov
push
push
out
lea
std
mov
jmp
test
and
outs
mov
jl
shl
mov
mov
adc
dec
jnp
rcr
or
xor
cdq
xor
cdq
push
pop
repz
repz
stc
push
rcr
inc
pushf
fst
cdq
xchg
mov
cmp
test
retf
mov
in
js
movs
dec
(bad)
movs
ins
lods
mul
lods
cwde
fld
mov
dec
sub
add
fsub
test
and
cwde
retf
sub
dec
inc
std
lea
mov
xchg
aam
and
cmp
inc
push
sub
iret
ret
in
rcl
or
test
sbb
or
mov
outs
dec
int3
xchg
mov
push
sbb
mov
cwde
call
and
(bad)
jne
adc
fmul
in
mov
out
test
pop
or
sbb
inc
gs
inc
out
pop
and
leave
xchg
ss
retf
inc
fisub
sbb
sbb
mov
(bad)
xor
mov
xlat
not
push
xor
dec
icebp
loop
push
jo
or
push
fidiv
push
inc
mov
or
out
xor
lds
movs
sti
daa
mov
xchg
gs
rcl
out
sbb
stc
repz
loop
mov
jo
test
and
push
cmp
ret
xchg
inc
fcomp
out
sbb
retf
shr
sub
iret
or
jae
mov
cmp
sbb
or
stos
(bad)
jnp
jmp
or
or
mov
inc
jmp
mov
dec
les
dec
(bad)
jmp
pop
ror
clc
out
xchg
aas
lock
and
push
ins
dec
dec
dec
fwait
adc
mov
sar
punpckhdq
jp
jmp
mov
xor
push
add
pusha
leave
data16
ins
clc
add
fcmovnbe
gs
jb
and
jmp
les
leave
cwde
mov
pop
and
jne
mov
mov
dec
cmp
cmp
sub
stos
and
repz
mov
shl
adc
maxps
push
out
(bad)
aas
jbe
sub
neg
pop
inc
les
repz
jb
rol
(bad)
cmp
pop
dec
mov
stos
and
sbb
into
scas
sti
in
and
dec
ss
aam
in
int
movs
inc
pop
mov
shr
adc
xor
mov
(bad)
mov
fisttp
(bad)
fistp
xor
and
or
adc
push
sub
fld
pop
sub
and
rol
movs
out
arpl
cmp
aaa
pop
mov
jp
ja
inc
dec
gs
js
xor
sub
inc
mov
ins
xchg
push
(bad)
pusha
push
xchg
adc
or
jg
in
loope
cwde
push
je
sbb
cld
mov
imul
sub
mov
adc
pop
cmp
dec
cmp
arpl
das
sbb
lahf
sub
sbb
xchg
mov
jmp
retf
sub
int
jbe
(bad)
ficomp
push
mov
(bad)
dec
or
test
or
mov
mov
pushf
xor
jl
aaa
leave
in
in
ss
shl
pushf
shl
ss
sti
xchg
andnps
fisub
jmp
xor
mov
fwait
test
jmp
mov
cmp
sub
pusha
ins
jg
add
cdq
ret
pop
mov
sbb
jl
out
cli
fcmovnb
outs
cmc
push
sahf
out
out
gs
dec
jge
repz
outs
inc
xchg
out
arpl
ins
xor
ja
xchg
add
inc
dec
mov
jl
retf
test
adc
daa
aam
in
pop
int3
verw
sub
mov
fimul
mov
sub
dec
js
test
dec
inc
mov
aad
lods
bound
push
xor
jnp
dec
sahf
mov
enter
xor
mov
add
jno
loopne
sbb
loope
xor
lods
and
daa
jg
icebp
xlat
imul
jecxz
fsubr
cdq
cmp
fmul
mov
fdiv
hlt
cmp
out
jno
enter
pushf
(bad)
inc
mov
rcl
retf
pop
inc
add
pop
push
jmp
ins
nop
or
or
data16
inc
adc
dec
hlt
mov
or
xchg
jg
sub
addr16
fst
imul
ja
pop
push
stos
dec
fst
imul
test
jne
mov
test
les
cmp
jle
mov
pop
push
dec
dec
int3
lahf
jg
and
lock
int
xor
jmp
sbb
loope
mov
push
in
and
cmc
and
fs
mov
ds
cwde
into
and
mov
fnstsw
iret
xchg
mov
shr
jno
xlat
xchg
add
dec
cmc
sub
sbb
inc
and
push
lock
loope
fwait
pop
xchg
lahf
lahf
jno
into
inc
sub
sub
dec
nop
push
push
xor
jl
movs
add
and
xchg
jge
cmc
dec
addps
retf
fld
cmp
scas
mov
cmps
fwait
mov
lea
loope
cmp
mov
leave
iret
mov
jae
jb
jp
in
xor
and
pop
test
sub
gs
dec
lahf
fs
pushf
adc
push
jbe
cld
pop
add
add
call
or
mov
and
sbb
ja
fdiv
mov
push
ret
cmp
xlat
dec
mov
adc
call
push
ds
movs
sbb
sbb
and
idiv
and
adc
gs
inc
push
pop
fs
xor
es
pop
add
sub
add
inc
fs
shl
gs
mov
mov
xor
stos
lds
xchg
jp
xor
test
jl
lods
dec
cmps
inc
sub
mov
xchg
div
mul
adc
pop
xchg
ss
mov
clc
dec
in
lods
dec
(bad)
adc
leave
retf
movs
cmp
ins
xchg
cmp
scas
jp
mov
outs
inc
inc
cmps
mov
(bad)
out
push
or
arpl
mov
mov
mov
mov
daa
movs
sub
(bad)
or
adc
jmp
mov
into
cmp
movs
xchg
daa
in
xchg
sbb
jmp
jno
jmp
push
and
jl
retf
ret
jb
pop
rol
push
dec
mov
ffree
into
sub
sub
dec
ret
repz
shl
test
outs
int3
fwait
pop
mov
sbb
fimul
repnz
mov
pushf
in
xchg
in
or
sub
mov
das
xchg
push
test
int
xchg
gs
cmp
jmp
or
loop
or
loopne
push
stc
add
popf
pop
mov
adc
inc
push
jb
ds
ret
sahf
pop
mov
in
jb
push
inc
aam
pop
push
sbb
cmps
(bad)
call
sub
push
test
mov
mov
mov
in
dec
xor
cld
dec
or
mov
and
pop
dec
cdq
dec
(bad)
and
repnz
fcomi
adc
stos
test
inc
into
bnd
sbb
and
adc
xchg
sub
dec
dec
jb
retf
inc
inc
not
push
mov
scas
frstor
add
jno
test
jl
adc
test
popa
out
inc
test
inc
push
imul
jmp
ins
and
pop
fistp
mov
neg
jne
repnz
fsubr
add
push
inc
shl
mov
inc
jno
mov
enter
stos
mov
ficomp
mov
ret
xchg
pop
iret
and
es
cmc
fwait
adc
jns
scas
xor
call
fadd
adc
bound
out
sbb
mov
test
into
ds
jbe
mov
inc
bound
cwde
cmp
pop
push
push
mov
and
and
adc
in
lods
adc
adc
mov
adc
xor
cmp
xchg
stos
pop
aaa
xor
jg
nop
mov
and
adc
pushf
sub
inc
lds
ret
pop
cwde
xchg
outs
das
not
cli
adc
call
out
and
ins
push
fwait
mov
push
mov
rcl
stos
pop
jmp
ror
cli
mov
nop
pushf
not
cmp
mov
pop
loop
push
inc
dec
gs
push
mov
mov
add
test
cs
push
fisttp
outs
movs
inc
mul
push
xchg
test
push
or
mov
(bad)
(bad)
in
bound
or
repz
mov
rcl
xchg
fst
jnp
les
shl
js
pusha
lea
mov
sbb
mov
pop
sub
fcomp
shl
(bad)
les
cmp
aam
push
mov
push
push
ror
xor
int
fmul
mov
push
xor
mov
jmp
sbb
addr16
pushf
(bad)
xor
into
aaa
(bad)
rcr
repz
imul
lods
lods
push
mov
inc
(bad)
bound
push
mov
jg
in
add
imul
and
pop
mov
pusha
stc
test
stc
dec
fcomi
inc
data16
xlat
in
add
fadd
fisub
dec
sub
mov
pop
xchg
cmp
inc
dec
shl
mov
cmp
jno
(bad)
jbe
jno
xor
fiadd
mov
pop
jne
in
ja
in
xor
or
call
div
ud2
jns
jnp
movs
sub
rcl
int
call
mov
popf
test
xchg
test
and
ss
add
sbb
leave
dec
sub
mov
fist
clc
push
sar
inc
outs
iret
shl
ins
inc
scas
mov
xor
ret
sbb
je
inc
mov
loope
shr
mov
mov
lods
push
mov
cld
xchg
inc
shl
pop
xor
jno
adc
cld
mov
add
cmp
jno
sbb
push
das
or
cli
mov
out
cdq
aaa
imul
push
ds
push
sbb
int3
mov
out
adc
pop
mov
xchg
(bad)
cmps
sbb
imul
(bad)
xor
(bad)
fcmovnb
mov
fidivr
jno
sbb
pop
mul
jge
and
jge
pop
sub
lea
in
push
in
(bad)
and
(bad)
retf
das
fwait
stos
sbb
imul
int3
mov
lock
dec
ss
jecxz
(bad)
fisubr
push
js
or
sub
outs
mov
lea
mov
sub
ss
mov
test
pop
or
push
mov
retf
mov
mov
cmp
xchg
fdivr
jnp
sub
movs
mov
mov
pop
clc
xchg
push
arpl
xor
fist
fwait
jp
sub
mov
push
and
shl
push
pop
mov
div
fsubr
(bad)
or
mov
pop
fbld
xchg
inc
lahf
sbb
push
or
push
movs
out
or
pop
call
(bad)
cmp
test
or
mov
inc
xchg
aas
popa
or
inc
and
cmp
bound
scas
fdiv
lea
rcl
sbb
sbb
mov
xor
xor
mov
push
mov
inc
int3
xchg
fist
xchg
lods
outs
mov
xor
stos
test
add
ficom
sub
rol
cmp
cmp
mov
pop
sbb
scas
mov
rcl
push
fbstp
cmps
cmc
scas
adc
adc
fwait
scas
adc
inc
aam
cmp
sbb
mov
xchg
mov
shl
mov
mov
clc
mov
scas
push
jb
(bad)
mov
push
and
or
lds
mov
rcl
and
push
fstp
mov
rcr
scas
inc
loopne
fisttp
adc
adc
out
sub
push
add
xor
mov
out
cmp
nop
mov
add
jbe
(bad)
fidiv
xchg
jns
fwait
xchg
fwait
sar
mov
ds
fadd
cmps
sti
sbb
out
push
sbb
cmps
and
lods
pop
(bad)
jecxz
lahf
inc
test
jne
repnz
or
sbb
jp
icebp
sub
(bad)
int3
jl
xchg
cmovne
mov
clc
push
lahf
aad
sub
and
xor
mov
push
std
adc
shl
in
imul
(bad)
mov
jo
imul
stc
or
retf
cmp
mov
cli
xor
push
jmp
pop
(bad)
fistp
mov
fiadd
repz
jmp
push
cmc
jbe
fist
icebp
mov
popf
aas
stc
sti
mov
loope
sub
mov
jne
gs
stos
mov
int
out
mov
mov
xlat
hlt
rcl
repz
mov
jbe
sub
or
aas
aaa
add
fdivr
xchg
and
cmps
xor
stc
ss
packsswb
pop
cs
into
sbb
ss
dec
test
inc
jo
pop
cmp
test
movs
and
cld
dec
adc
cdq
or
sub
xchg
je
push
pop
sbb
arpl
dec
fld
(bad)
adc
xor
pop
outs
sub
xchg
sub
mov
ins
mov
ins
push
mov
dec
arpl
add
xchg
cli
or
add
jne
js
xor
dec
cmc
adc
pushf
xor
scas
pushf
outs
cmp
cmp
daa
test
mov
push
int3
push
and
pushf
mov
fcom
dec
xchg
xor
ins
mov
adc
ret
arpl
ja
xchg
in
faddp
fwait
je
xlat
outs
adc
mov
mov
mov
jle
xchg
sti
in
call
pop
arpl
add
push
fisub
pop
dec
jmp
jno
ins
ins
js
xchg
cli
sbb
ret
cmp
call
mov
hlt
mov
int
add
push
dec
adc
lods
xor
call
add
push
daa
jbe
fwait
je
pop
push
stc
ret
jb
ja
jne
jg
add
fdivr
jp
lock
imul
cmp
ja
mov
test
cdq
outs
(bad)
fcmovnu
xchg
add
arpl
int
fild
ins
push
mov
adc
fsub
rcr
push
push
and
fsub
and
xor
xchg
fstp
xlat
test
push
sub
sub
fdivr
daa
lock
int3
scas
fsubr
rcl
dec
push
(bad)
mov
fistp
outs
add
pop
fld
ins
mov
iret
add
addr16
push
sub
fdivr
jp
mov
fld
xor
fwait
add
addr16
jmp
push
icebp
xor
outs
cmp
fdiv
inc
add
pop
sahf
cmp
stos
mov
retf
lock
fsincos
dec
mov
sub
push
sub
add
cli
dec
mov
xlat
in
popa
sbb
ror
in
fidiv
fcomp
adc
lock
jbe
inc
xchg
aam
push
fiadd
push
pop
sar
push
inc
mov
bound
test
pop
push
inc
pop
push
stos
inc
pop
sbb
push
mov
cmp
in
jb
mov
mov
test
jmp
xchg
mov
push
clc
lods
loope
pop
int3
add
mov
mov
cwde
and
hlt
sbb
add
stos
inc
cmps
and
pop
stos
int
push
shl
xor
mov
sahf
js
out
fwait
leave
cwde
xor
mov
dec
test
out
out
dec
mov
mov
pusha
adc
xor
arpl
pop
sbb
call
pop
push
jg
loope
dec
and
cmp
(bad)
into
mov
scas
cmps
mov
loop
jne
mov
fcom
adc
fwait
mov
adc
jno
jbe
xchg
mov
loopne
cmp
sub
mov
sbb
and
sub
or
fistp
jl
mov
pop
mov
clc
mov
loopne
mov
cmc
pop
jne
jb
or
inc
data16
xchg
mov
push
sub
push
cmp
sbb
call
ja
mov
push
fwait
sbb
pop
jno
dec
fwait
sti
sub
mov
push
or
and
push
adc
and
jns
(bad)
movs
adc
out
cs
mov
ret
push
jae
or
popf
push
inc
mov
ror
push
ret
mov
jmp
pop
cmp
daa
scas
imul
xchg
call
int3
in
mov
jnp
ja
dec
pop
lock
or
clc
sbb
cmps
or
push
and
mov
sbb
mov
int3
dec
mov
ja
clc
jns
mov
push
shr
add
adc
cdq
jmp
xchg
push
and
dec
and
call
sbb
push
sbb
pusha
mov
mov
add
int3
nop
mov
call
mov
and
sbb
into
clc
inc
or
push
xchg
lods
push
adc
inc
cmp
adc
shl
pop
sbb
scas
push
add
ret
sub
pop
iret
outs
push
mov
outs
nop
push
adc
or
adc
call
mov
dec
call
and
stos
sbb
out
je
sbb
push
and
out
test
cmp
cmp
cmp
ins
in
fwait
mov
inc
lods
scas
pop
ins
in
xchg
pop
jnp
mov
cmp
mov
loopne
sar
mov
in
stos
adc
xchg
jnp
sub
mov
jae
shl
std
int3
pop
sub
hlt
icebp
inc
add
adc
xlat
call
mov
mov
bound
jle
nop
je
leave
mov
pushf
sbb
cli
je
pop
icebp
dec
jns
(bad)
or
test
loope
ret
aad
dec
test
xor
add
out
mov
loopne
int
xor
movs
cmp
jle
pop
dec
or
les
in
mov
jae
(bad)
xor
loopne
mov
sbb
pop
pop
mov
or
int
pushf
ins
add
ret
dec
mov
retf
repnz
enter
xor
mov
test
(bad)
test
test
sbb
xor
add
mov
dec
and
inc
push
pop
and
dec
sbb
test
push
(bad)
arpl
ss
mov
cmps
adc
sub
dec
mov
dec
pop
lock
adc
scas
sti
push
jns
adc
int
pop
xchg
mov
dec
cmp
cdq
inc
xchg
fisub
jns
aam
mov
fcomp
mov
rol
jbe
in
mov
xor
je
mov
mov
adc
mov
bound
sbb
data16
sub
movs
stc
xchg
xor
xchg
pop
inc
sub
inc
sbb
movs
call
shl
test
loope
dec
add
add
pop
sub
xchg
cmp
sub
popa
(bad)
xor
jno
mov
(bad)
or
out
aaa
jecxz
xchg
not
fxam
test
loop
push
push
arpl
call
jo
add
daa
repz
sub
push
ret
das
retf
jl
pushf
mov
mov
jo
push
sahf
push
add
js
sbb
lods
add
js
out
fsub
inc
jno
or
rcl
dec
and
bound
mov
aaa
or
cli
lds
in
jp
dec
cld
xchg
or
dec
or
sbb
cmp
data16
add
mov
popa
jo
mov
mov
push
dec
std
fild
jmp
ret
push
fcmovbe
push
lock
jbe
cli
or
pop
jmp
arpl
adc
movs
push
add
mov
jo
movs
in
(bad)
adc
cwde
inc
cmp
cmp
and
into
jae
add
adc
fist
and
xchg
pop
ror
mov
out
inc
jp
mov
jecxz
retf
or
adc
lock
jno
pop
pusha
pop
xor
jns
sar
mov
jl
mov
(bad)
test
dec
in
push
gs
fsubr
add
rcr
cmc
pop
xchg
cli
mov
mul
dec
iret
add
(bad)
adc
(bad)
or
je
xchg
lods
rcr
xor
aaa
scas
jmp
cmps
cwde
jp
fs
jecxz
mov
mov
cmps
mov
xor
add
pop
jp
push
cmp
add
add
dec
jp
or
xchg
jle
dec
sahf
iret
not
popa
js
cmp
push
cdq
jo
mov
ins
pop
push
or
sbb
call
push
inc
jne
cwde
stc
outs
inc
xchg
cli
stos
(bad)
cmp
loop
jae
mov
mov
push
test
mov
mov
out
sahf
scas
push
push
sbb
add
xchg
fcomp
mov
leave
idiv
fnstsw
pop
mov
jmp
jae
loop
outs
cmp
mov
xchg
mov
ins
xor
adc
popf
mov
in
mov
sahf
in
mov
pop
and
hlt
cld
xchg
mov
push
add
xlat
lahf
popa
or
jmp
into
mov
cld
mov
ret
ffree
retf
mov
mov
jge
stos
jne
adc
mov
adc
leave
call
pop
jmp
ins
dec
pop
xchg
aaa
mov
mov
adc
xor
inc
fsubr
xor
sbb
inc
(bad)
jbe
aaa
cmc
mov
pop
mov
lock
jo
xchg
jmp
xchg
data16
fisub
add
fs
stos
mov
jmp
mov
cmps
inc
retf
or
lds
or
cmp
cmp
push
lea
add
scas
and
xor
ret
mov
lock
jno
mov
ror
mov
loopne
mov
ja
pop
scas
shl
mov
cmps
stc
pop
sbb
add
xor
inc
movs
pop
cmp
mov
sbb
lock
inc
mov
add
xchg
mov
inc
retf
aaa
mov
mov
mov
adc
test
(bad)
or
cmp
or
lds
jae
pushf
pop
push
inc
in
sub
mov
xchg
aam
aad
pop
and
mov
dec
push
cmp
mov
movs
loopne
jnp
data16
or
jnp
cmp
shl
dec
(bad)
shl
xchg
ror
cmp
adc
jns
or
add
popa
ss
ins
cmc
adc
cmp
xor
retf
xchg
xor
es
mov
adc
sbb
out
leave
mov
inc
mov
jae
in
and
or
lds
loopne
mov
dec
lock
call
bound
adc
jno
xchg
adc
mov
enter
pop
sub
rcr
sbb
ret
sub
or
push
sbb
dec
pop
cwde
xor
out
callw
sub
cmp
stos
mov
mov
pushf
sbb
(bad)
xor
sbb
xchg
pusha
xchg
inc
inc
addr16
inc
xor
adc
cmp
jmp
retf
and
add
pusha
enter
or
(bad)
mov
push
aam
fisttp
xchg
add
or
mov
adc
sub
lds
bound
es
sub
es
add
rcl
inc
adc
lods
dec
inc
cmc
test
xor
jne
popa
aas
das
repz
pop
push
pop
stc
push
jne
stc
cmp
adc
push
gs
loopne
push
pop
leave
cmp
xor
and
fcomp
fdiv
int3
mov
pop
(bad)
rcl
fsubr
cmps
fiadd
push
rcl
add
sub
in
inc
mov
sub
cmp
lods
pop
dec
mov
mov
or
aaa
xor
xor
(bad)
xchg
nop
imul
xor
sub
in
pop
nop
xor
mov
or
dec
pop
adc
bound
call
fistp
xlat
stos
lea
fisub
mov
fs
cdq
push
sbb
push
add
cmp
repz
or
out
popf
in
(bad)
fisub
mov
xor
push
push
retf
lods
ss
or
jmp
pop
loop
add
(bad)
cmp
sar
(bad)
in
mov
fcom
mov
es
popa
pop
scas
push
js
loope
mov
push
push
aas
inc
movs
in
(bad)
cmp
xchg
sub
or
shr
mov
out
vmulsd
xor
aas
xor
push
lahf
xor
mov
ds
adc
bound
cmc
mov
hlt
stc
out
dec
(bad)
loope
push
fmul
add
retf
mul
call
sbb
sti
adc
pop
xlat
mov
mov
adc
xor
mov
das
push
pusha
add
inc
inc
pop
adc
int
cmp
ja
in
scas
aas
out
pextrw
xchg
mov
mov
not
cdq
mov
not
sub
jo
mov
outs
test
sbb
dec
shl
data16
add
dec
or
jmp
mov
test
mov
rcr
dec
pop
jge
adc
xchg
cmp
or
cmp
cs
jl
test
dec
add
popa
and
xchg
xchg
add
pushf
add
loope
jecxz
out
jl
mov
fistp
mov
lahf
imul
jae
add
enter
out
pop
mov
sub
icebp
dec
ins
dec
adc
push
adc
int
cmps
les
mov
mov
sbb
jge
dec
xor
sub
outs
ss
sti
cmp
pop
dec
jle
add
xchg
mov
ins
and
data16
cli
ins
cmp
fimul
cmps
in
js
sahf
call
or
push
rcr
bound
cmp
fxch
cwde
icebp
inc
rcr
mov
sub
sti
dec
dec
lods
ret
push
jne
daa
pop
test
sbb
and
ins
test
cs
ret
mov
jb
push
sub
sub
mov
pop
cmp
xor
out
push
mov
pop
fstp
adc
out
ret
lea
fdiv
inc
das
imul
lea
xor
(bad)
or
pop
call
(bad)
fistp
xchg
out
push
mov
sub
(bad)
dec
jl
xor
pop
jmp
test
or
mov
out
fs
push
xchg
lods
in
repz
cmp
dec
retf
sbb
xor
inc
shl
mov
lods
cmc
in
mov
stc
and
jnp
push
push
and
push
hlt
call
cli
ret
(bad)
ror
movs
push
in
out
retf
int3
xor
xor
sbb
mov
popf
gs
pusha
call
lahf
popf
pop
(bad)
cmp
ror
scas
and
mul
dec
dec
enter
in
out
sbb
pop
imul
cdq
xlat
cwde
and
les
test
sbb
sbb
arpl
fs
xchg
in
inc
jns
out
(bad)
lahf
in
mov
adc
aas
xor
mov
rol
sub
mov
aad
mov
push
cli
sub
cmp
sbb
leave
pop
fnstsw
pop
out
mov
pop
inc
and
push
inc
sub
cdq
popf
dec
nop
dec
or
jo
cmp
mov
mov
add
into
sub
push
lods
icebp
aaa
cmc
das
xchg
sbb
jg
cmp
aad
(bad)
sbb
and
cdq
dec
pop
adc
jno
std
mov
add
test
rol
mov
add
jge
scas
xchg
jle
xor
daa
mov
xchg
or
xchg
add
sar
jne
wrmsr
lock
fwait
pop
adc
jmp
popf
ins
cld
fsub
int3
jecxz
adc
js
push
cmp
jg
sbb
xchg
test
or
mov
or
add
xchg
inc
shl
int
mov
pop
imul
pop
mov
or
dec
lds
inc
xor
xchg
add
xchg
fld
cmc
mov
rcl
gs
pop
inc
movs
add
jl
adc
push
mov
sub
and
xchg
addr16
popa
add
out
xchg
inc
popf
xlat
push
sub
int
mov
jmp
fild
pushf
sbb
aad
dec
popa
movs
ja
outs
lahf
mov
je
add
and
scas
ins
and
push
sub
cmp
popa
push
xchg
pop
inc
aam
mov
adc
ret
and
cmp
addr16
mov
daa
leave
mov
lods
mov
fidivr
dec
inc
ret
adc
xor
fs
rcl
mov
dec
iret
push
lds
pop
xchg
mov
sub
xchg
pushf
loop
in
sub
lock
xchg
je
data16
in
mov
pop
add
pop
xchg
xor
mov
dec
(bad)
push
mov
fwait
jge
ja
add
push
mov
lea
mov
dec
add
fmul
add
out
dec
cmp
fwait
push
clc
dec
cmps
xor
and
cmc
in
pop
cwde
push
shr
cwde
arpl
ja
lods
scas
jecxz
stos
sti
push
test
fs
idiv
test
arpl
push
pushf
add
repnz
sub
loopne
in
aas
cmp
lods
retf
int
rsqrtps
inc
ds
cwde
cmc
jo
scas
inc
and
jne
or
in
popa
mov
add
cmps
icebp
imul
(bad)
fs
out
mov
xor
outs
mov
shr
jno
rcr
test
into
ficom
cwde
rcr
lds
push
das
es
icebp
repz
cmp
sbb
mov
push
push
cmp
mov
jecxz
sbb
mov
adc
imul
hlt
mov
sahf
xor
inc
out
or
std
fcom
push
call
mov
sub
or
shl
stos
dec
imul
out
leave
fs
push
mov
ds
mov
sub
test
mov
data16
lahf
sbb
scas
jno
dec
push
(bad)
fsubp
leave
sub
out
xor
repz
xchg
sbb
repz
fdivr
sbb
jnp
xor
imul
fadd
mov
cmovp
push
pop
movs
adc
arpl
outs
push
adc
push
xlat
cdq
call
push
push
adc
inc
xchg
je
jb
scas
mov
or
lea
in
lock
call
jmp
push
lahf
sbb
(bad)
mov
pop
loope
in
ret
jecxz
xor
add
and
sub
lahf
iret
mov
mov
aas
xor
js
pushf
push
or
pop
addr16
inc
adc
push
hlt
sbb
jo
jno
xor
retf
fbld
mov
cwde
ss
mov
push
cwde
data16
sbb
add
add
loop
mov
xchg
idiv
dec
aam
push
mov
sub
jg
ds
dec
es
test
(bad)
mov
xchg
cmps
sub
imul
shl
mov
aam
dec
mov
rcl
xchg
inc
pop
pop
pop
scas
jbe
enter
popf
dec
dec
ret
std
out
fstp
dec
arpl
popf
add
cs
xchg
ss
xchg
jo
pushf
int
ja
aad
int
ja
scas
mov
loope
iret
cmp
jns
das
mov
and
idiv
xchg
nop
jb
(bad)
cli
(bad)
outs
mov
hlt
cmp
mov
mov
js
or
lods
int
jnp
jns
jecxz
cmp
jecxz
sbb
fisttp
enter
ret
mov
sub
daa
pop
mov
pushf
sbb
bound
inc
arpl
(bad)
fcom
mov
dec
xor
mov
arpl
mov
call
or
push
xor
push
ret
pop
ret
sub
xchg
ror
pusha
gs
jno
pop
or
inc
pop
inc
sub
xchg
xor
adc
data16
sbb
or
ret
cmp
fadd
sbb
fsub
fs
shl
add
or
stos
fld
out
inc
xor
cmps
inc
push
fisubr
xchg
push
or
out
push
mov
xor
(bad)
loopne
cmp
stos
addr16
add
xchg
push
(bad)
ins
xor
cmp
dec
cs
xor
jl
cmp
outs
sub
movs
sar
sbb
pop
test
sbb
imul
pop
inc
or
call
pop
pop
mov
push
lea
inc
das
sbb
pushf
lds
nop
cmp
push
dec
rcl
mov
xor
mov
push
dec
or
(bad)
popa
daa
xor
pop
lods
cmp
in
adc
or
add
out
imul
inc
cmc
add
or
sbb
test
fsubr
xor
inc
jae
push
pop
pusha
out
inc
push
push
fstp
mov
xor
pop
push
push
fisttp
add
xchg
dec
mov
jo
add
push
imul
sbb
repz
sub
cmc
icebp
inc
movs
not
jmp
inc
mov
mov
pop
push
mov
xchg
lahf
xlat
xchg
cmp
int
daa
movs
mov
pop
push
ss
imul
inc
imul
xchg
ins
test
mov
mov
(bad)
pop
fwait
pop
int3
cmps
iret
jmp
int3
fwait
aad
push
sbb
leave
xor
dec
pop
push
stc
sbb
aaa
cdq
mov
fstp
mov
sbb
mov
pop
xchg
pop
stc
clc
ds
fidiv
sti
gs
aas
xor
push
clc
sub
repz
lock
sbb
cs
enter
pop
call
push
sbb
in
dec
sbb
addr16
mov
stc
mov
pop
sbb
jae
icebp
mov
mov
push
sti
dec
dec
jmp
pop
sub
fcomp
pop
dec
stos
pushf
mov
sbb
das
xor
jns
xchg
adc
jge
call
cmp
stc
mov
jne
loop
out
push
addr16
test
and
adc
push
xchg
or
mov
cmp
dec
mov
or
(bad)
sti
(bad)
sbb
sbb
sub
sub
xchg
mov
repnz
xlat
mov
out
fist
sbb
mov
xchg
push
out
int
(bad)
jnp
sub
and
mov
and
mov
push
cdq
outs
jl
into
pop
inc
add
ds
mov
mov
fs
loopne
std
pusha
xchg
into
cs
fbld
adc
in
call
cmps
ud0
jmp
sbb
or
arpl
xchg
shr
jno
mov
xor
(bad)
arpl
xor
nop
cmp
inc
fidiv
popf
add
push
pusha
rcr
push
ins
int
retf
or
imul
jbe
xor
mov
aam
sub
xor
cmp
pop
cmp
push
xor
gs
and
cmp
pop
sar
pushf
push
mov
sub
sub
in
aad
pop
bound
test
lods
and
pusha
inc
aas
in
test
repz
pop
(bad)
jmp
xchg
mov
jmp
es
or
pop
jp
sub
push
sub
mov
into
pushf
push
jns
dec
aad
dec
cmps
ret
sub
cmps
pop
inc
fxch
lock
jb
ja
hlt
lock
mov
pusha
cs
mov
int
sub
test
jns
lds
xlat
rcl
mov
cmp
adc
xor
xor
or
sub
adc
outs
imul
loop
test
push
xor
pop
cmp
mov
sbb
inc
cmps
dec
and
sti
inc
push
xchg
test
or
adc
and
ss
sbb
pop
cmp
mov
loopne
frstor
sar
gs
and
inc
aam
push
lock
jnp
movs
push
lock
mov
lea
sub
out
pushf
or
mov
popf
pop
pop
test
in
(bad)
data16
cmp
les
mov
jl
adc
inc
and
mov
sub
ins
lahf
dec
xchg
add
mov
pop
enter
or
adc
movs
xchg
cmps
sub
dec
daa
xchg
dec
xchg
or
adc
imul
(bad)
sar
icebp
xchg
sbb
test
pop
push
je
js
rcr
add
(bad)
jmp
push
sub
int
adc
or
push
cmp
in
inc
sysenter
adc
and
xchg
fnstenv
es
push
push
cmp
sub
xor
stos
int3
jecxz
fmul
xor
aad
mov
and
imul
aaa
mov
xlat
test
lods
aad
pop
rcl
dec
cmp
nop
jmp
cmps
cmps
cmps
stc
sti
stc
mov
mov
std
pop
jne
adc
retf
ret
or
push
jo
stos
(bad)
sti
daa
out
inc
scas
ja
or
push
fldcw
jmp
into
adc
or
inc
mul
pop
pushf
jo
loope
fistp
imul
adc
(bad)
and
inc
call
push
sti
aas
aam
lods
(bad)
xor
mov
lock
out
cwde
leave
mov
lods
xchg
addr16
and
inc
inc
(bad)
cmc
pop
jmp
outs
xor
(bad)
in
inc
(bad)
push
loop
sahf
inc
popf
push
mov
jg
xchg
dec
mov
sahf
adc
xchg
lods
adc
mov
shl
out
adc
js
mov
cmp
pop
xor
pop
ins
cmp
popf
cwde
scas
and
out
mov
mov
push
sub
adc
in
rcl
xchg
mov
push
and
aaa
mov
into
sub
xor
xchg
adc
pop
push
push
ret
cmp
aam
inc
or
adc
sbb
inc
nop
aas
sbb
push
mov
xor
sub
sysret
scas
and
nop
in
arpl
push
in
jnp
xor
nop
sbb
sbb
pop
or
push
jmp
out
mov
in
inc
out
fimul
fst
imul
mov
xchg
mov
dec
xchg
popa
xchg
icebp
fwait
lahf
add
jmp
data16
jg
int
pop
push
mov
aas
xchg
das
xchg
(bad)
loopne
dec
mov
mov
mov
mov
pop
jle
sub
clc
leave
jle
dec
sbb
add
add
out
shl
pop
xor
xor
test
jmp
inc
push
xchg
xor
dec
cmp
dec
mov
js
sub
jae
cmp
sti
popa
push
test
into
test
retf
sub
(bad)
out
ffreep
ja
cmc
push
out
scas
inc
scas
adc
pushf
push
inc
cli
push
icebp
repz
mov
lahf
test
scas
loope
xchg
inc
inc
sahf
push
sahf
dec
hlt
pop
push
fisubr
push
jnp
and
adc
dec
not
inc
pop
iret
aam
ja
lods
dec
xchg
inc
rcr
mov
cmps
movs
outs
adc
lods
push
into
push
ss
ins
je
sub
outs
jbe
ret
xchg
ror
mov
and
rol
sbb
inc
fstp
imul
lods
sbb
imul
push
std
xchg
dec
iret
xchg
call
sub
and
call
cmp
shl
mov
fldcw
lock
out
pop
or
cwde
and
cmp
or
inc
push
sbb
rol
sub
xchg
pop
shl
leave
sahf
ins
pop
loope
test
mov
sbb
fwait
or
cmp
aaa
cmp
inc
enter
mov
or
jecxz
sub
dec
sar
sub
push
inc
sbb
jne
lds
test
dec
xchg
pop
inc
lahf
pop
inc
pushf
je
jne
test
pushf
test
enter
int
inc
xchg
add
pop
into
out
cmp
leave
mov
mov
mov
xchg
mov
cmc
pop
(bad)
mov
add
or
mov
mov
mov
dec
mov
adc
push
fld
fiadd
xor
test
je
xor
loopne
movs
add
cmp
adc
jno
pop
mov
test
xor
cmp
mov
stos
and
jmp
cmp
in
jge
and
int
pop
and
movs
test
imul
cmp
cmp
ins
loopne
jmp
add
jae
shl
fisub
cmp
shl
mov
into
je
cs
jno
xchg
in
retf
sub
in
sbb
(bad)
sbb
loopne
call
mov
xor
call
add
mov
mov
xchg
repnz
inc
xchg
lahf
aaa
sbb
ret
sbb
inc
xor
dec
addr16
sbb
pusha
mov
enter
out
xor
mov
add
jo
and
lahf
mov
ror
in
out
inc
mov
sub
inc
dec
adc
pop
jmp
xlat
js
and
clc
call
xchg
xor
cli
call
push
cwde
je
lods
push
dec
cmp
rcr
sub
scas
ds
or
mov
aaa
inc
sub
test
fidivr
cmp
imul
jp
(bad)
mov
in
out
or
push
jae
cmp
scas
sub
adc
daa
push
(bad)
icebp
daa
or
daa
aas
fcom
xor
loop
push
sbb
aam
dec
or
(bad)
mov
or
mov
push
add
rcl
pop
loope
aas
in
ja
aas
int3
cmp
push
lahf
mov
xchg
(bad)
in
dec
stos
fs
sub
jp
je
mov
loopne
out
fmul
(bad)
fdivr
fld
pusha
call
cmp
inc
popf
adc
popf
pop
push
imul
ds
inc
in
inc
pop
or
out
mov
repz
dec
or
aaa
rcl
mov
sbb
(bad)
int
and
ror
bound
imul
sti
push
dec
std
mov
mov
push
push
inc
inc
pop
hlt
push
mov
aam
ds
push
cli
adc
dec
in
pop
adc
mov
sub
push
mov
icebp
pushf
push
les
mov
xchg
scas
inc
es
fmul
or
jae
push
inc
cmps
stc
into
cmps
and
dec
push
and
adc
loop
jo
cmp
retf
iret
sub
pop
daa
add
popf
pop
inc
pop
mov
adc
sub
push
into
shl
pop
dec
dec
pop
adc
mov
lods
cmp
add
sub
inc
push
push
pop
cwde
cmp
and
push
aam
or
fmul
sbb
out
cmp
test
mov
call
in
data16
mov
dec
repz
add
dec
sbb
xor
xlat
add
mul
(bad)
mov
jmp
in
cwde
ins
enter
(bad)
adc
add
int
popa
push
jbe
mov
rol
rcr
and
das
lea
pop
mov
sub
sbb
(bad)
not
icebp
add
sahf
fstp
std
sub
mov
cmp
mov
in
je
jecxz
imul
je
shl
mov
(bad)
pop
daa
push
mov
cmp
cmp
xor
stos
or
cmps
test
movs
and
(bad)
pop
mov
ss
mov
jge
dec
daa
mov
dec
mov
retf
push
ret
(bad)
mov
pop
adc
push
xchg
loopne
cmp
mov
inc
add
fidiv
adc
inc
into
mov
inc
xor
mov
sbb
daa
aaa
add
nop
je
pop
and
jmp
lahf
pop
(bad)
lock
dec
mov
sub
(bad)
sbb
adc
sbb
lods
cdq
inc
or
ins
fnstcw
mov
sbb
push
mov
ja
cmp
out
push
pushf
stos
loopne
inc
sub
test
inc
cmps
mov
and
ja
lods
les
push
add
daa
inc
neg
jnp
sub
mov
push
fdiv
pushw
gs
sar
add
add
ret
inc
cli
faddp
shl
test
push
dec
inc
and
retf
cdq
cwde
fnstsw
sub
loopne
jbe
xchg
cmp
push
push
bound
ds
adc
adc
xchg
pop
stc
pop
out
mov
pop
adc
cwde
lds
xlat
jp
daa
jg
(bad)
xchg
cmps
inc
adc
fist
dec
push
call
push
mov
and
and
shl
ds
pusha
mov
xor
pop
ret
and
or
pop
push
add
ret
lock
mov
nop
les
xchg
push
push
inc
mov
in
xlat
xchg
mov
xchg
cmps
xchg
iret
pop
loope
push
jle
stos
cdq
jno
jbe
clc
or
cmp
fwait
mov
dec
aam
mov
xor
ins
push
std
sbb
jg
clc
mov
aad
imul
ret
aam
inc
mov
(bad)
clc
in
adc
sar
adc
out
push
ror
sbb
es
scas
pop
mov
add
movntq
mov
loopne
adc
mov
shl
inc
lahf
mov
add
jp
or
inc
fldcw
div
stos
sub
ja
sbb
jbe
sbb
outs
shl
lahf
xor
push
mov
xchg
mov
ins
test
or
inc
es
imul
pop
pop
arpl
in
mov
mov
lds
or
dec
ror
cmp
dec
dec
retf
pop
xor
mov
loope
fs
inc
inc
es
out
imul
jnp
sub
popf
xor
pusha
and
ficom
popf
xchg
jmp
popa
out
push
jecxz
out
in
rol
popa
mov
div
jge
pop
call
mov
xchg
xchg
cmps
xor
int
cmc
jmp
push
fdivr
mov
and
inc
jae
and
cmc
(bad)
mov
push
fwait
lods
aas
pop
ins
pop
inc
sub
inc
pop
and
sub
or
lods
fcom
repnz
rcl
xchg
xchg
mov
mov
mov
mov
push
inc
pop
call
adc
loopne
or
loop
inc
cdq
int3
ins
sub
or
add
push
push
mov
jnp
bound
cdq
cmps
cmp
icebp
ds
cmp
xchg
adc
fadd
mov
jle
cmps
shr
push
mov
add
cmp
psrld
jg
dec
cmc
inc
mov
xchg
jns
xor
inc
inc
jb
lds
and
mov
fwait
ins
bound
cmp
call
jo
call
inc
and
ret
les
jns
sbb
out
pusha
lods
sub
inc
(bad)
fsubrp
jle
inc
fild
push
or
out
lahf
and
mov
jecxz
xchg
sub
jb
jp
or
out
xor
lds
adc
lahf
mul
pop
inc
mov
adc
or
es
sar
dec
pop
addr16
xchg
xchg
imul
in
xor
test
push
fidiv
mov
pop
jmp
mov
int
cmps
int3
fild
mov
inc
fst
or
movs
mov
fnstcw
pop
dec
outs
lods
xchg
call
push
mov
icebp
sub
jo
sbb
add
adc
pop
add
inc
arpl
mov
mov
jge
xchg
dec
inc
pushf
and
int
or
inc
jge
aam
lock
add
push
hlt
into
xchg
cld
(bad)
push
ror
adc
or
test
les
test
dec
(bad)
out
jge
cdq
push
or
loopne
sub
inc
xor
and
sub
cmps
xchg
add
stc
jmp
sub
cmp
popf
lock
ret
xchg
sbb
mov
pop
outs
aad
sub
add
jns
cwde
push
aaa
adc
mov
sbb
adc
repnz
fcom
cmp
mov
fwait
lds
in
push
push
mov
and
xor
ror
xchg
lods
sub
imul
mov
leave
sti
fstp
jge
into
fs
ss
sub
or
stos
and
push
in
mov
in
add
mov
into
xchg
xor
xor
fstp
(bad)
test
sub
stos
or
mov
mov
xor
mov
cmp
retf
xor
add
xchg
int3
xchg
mov
jnp
cld
test
add
mov
dec
jge
inc
pop
pop
pusha
pop
or
or
mov
(bad)
inc
mov
jl
rol
mov
enter
lods
cwde
mov
sbb
daa
shl
mov
pop
jmp
push
ins
stc
cmp
dec
cmps
mov
cmps
fimul
imul
xlat
mov
mov
sub
sbb
stos
dec
mov
jecxz
ret
mov
aad
push
outs
mov
stos
pop
xchg
add
jp
sbb
hlt
ja
fcomp
and
lods
adc
mov
xchg
imul
icebp
mov
add
add
push
jp
(bad)
fisub
cmp
push
pop
push
pop
xchg
mov
pop
test
push
mov
mov
push
mov
data16
cli
xchg
cmp
mov
pushf
jns
mov
adc
adc
inc
call
sub
popa
not
or
pop
cmp
repnz
inc
xor
pop
mov
rol
test
lahf
xor
mov
xor
adc
mov
iret
fisub
sahf
mov
pushf
and
dec
or
cmp
loop
and
jae
ins
clc
xor
push
loop
jo
push
sub
es
sbb
fmul
or
out
xchg
jl
ret
cwde
and
rol
cmc
mov
mov
ins
xor
xchg
adc
pop
repnz
jle
fldenv
push
adc
aaa
or
cmp
add
cdq
enter
inc
or
push
or
push
jp
in
popa
out
imul
push
scas
pop
push
sub
cmp
dec
jb
aad
neg
push
add
iret
test
push
clc
enter
rcr
xor
add
push
xor
fwait
jge
dec
lods
loope
dec
inc
out
lods
mov
scas
imul
pop
push
aaa
inc
xchg
or
sbb
cwde
or
outs
pop
pop
push
xchg
out
dec
shl
stc
int
in
aad
inc
data16
inc
je
or
sbb
and
mov
sub
sbb
cmp
js
lods
fldenv
hlt
jns
and
fisttp
fstp
(bad)
xor
xor
(bad)
repz
pop
cmp
je
mov
pop
inc
sbb
sysenter
jmp
mov
or
sbb
jmp
int
sub
js
ins
mov
mov
xchg
jle
out
dec
jns
adc
dec
sbb
jecxz
xor
pop
aaa
cmp
push
addr16
sub
sub
int3
pop
cli
push
push
shl
and
jbe
hlt
outs
ror
clc
cmp
in
jge
add
dec
dec
xchg
scas
sbb
pop
popa
mov
in
test
mov
repz
rcr
sbb
fild
push
add
pop
hlt
stos
adc
mov
dec
sub
retf
popa
retf
sub
push
cmps
pop
test
push
call
clc
stos
in
sbb
(bad)
(bad)
mov
xor
leave
mov
pop
jg
mov
nop
outs
dec
sahf
shr
mov
mov
sbb
cwde
outs
xchg
mov
or
sbb
lds
xlat
cmp
popf
mov
adc
gs
mov
pop
in
inc
jl
mov
lods
(bad)
adc
xchg
push
push
inc
stos
call
mov
pop
enter
lahf
js
mov
xchg
loope
fist
aas
into
repz
push
ds
jne
adc
pop
xchg
sar
push
mov
xchg
inc
in
push
iret
xor
pushf
repz
loop
mov
mov
adc
scas
cmp
jb
loopne
dec
loopne
or
jmp
lock
clc
out
cmpxchg
mov
ret
push
mov
jb
adc
xor
pop
and
add
loope
xchg
pop
in
fnstcw
push
(bad)
cmp
jmp
inc
push
fcom
push
(bad)
or
lods
adc
inc
aam
adc
inc
xor
xchg
mov
repnz
mov
or
lock
dec
xor
jl
jge
adc
fwait
cld
nop
cmp
mov
mov
add
fstp
jle
std
add
imul
cmp
sub
pop
bound
clc
xchg
mov
sar
or
popa
loop
mov
lods
push
adc
pop
lods
addr16
pop
test
nop
mov
jns
and
into
cmp
retf
ret
pop
dec
es
sbb
(bad)
add
fwait
mov
xor
dec
(bad)
pop
push
in
push
cld
inc
sar
sbb
jne
(bad)
stc
test
cmps
fld
stos
cli
add
test
sbb
cmp
adc
jle
push
dec
ret
xchg
sub
imul
repnz
cli
mov
enter
inc
push
xor
mov
cmps
and
and
mov
mov
dec
push
pusha
sbb
loop
xlat
and
leave
aad
push
xor
jo
clc
xchg
jns
fisttp
rcr
(bad)
ins
mov
in
call
mov
clc
out
and
xchg
ror
mov
mov
inc
sub
outs
push
arpl
dec
loop
ror
ja
mov
cmp
jb
fwait
xchg
dec
or
pusha
int
xor
and
sub
inc
jle
inc
jmp
mov
jmp
sub
aas
mov
adc
popf
push
mov
jmp
cmps
xchg
imul
retf
lea
cmp
cmps
imul
imul
ret
scas
je
imul
push
xor
xchg
push
mov
adc
dec
add
mov
push
fs
into
lods
cmp
aad
rol
mov
inc
daa
fcom
push
and
fisttp
js
popa
idiv
lahf
and
push
push
mov
es
sub
stc
call
dec
data16
cli
aad
mov
out
jmp
jg
pop
mov
fidiv
test
out
mov
xchg
pop
mov
adc
cdq
sar
aam
ins
mov
jo
dec
cmp
cld
jae
(bad)
shl
mov
fisttp
push
inc
stos
adc
lods
in
retf
mov
xor
xor
xor
arpl
arpl
(bad)
sbb
arpl
pop
popf
and
xchg
sbb
mov
in
mov
arpl
(bad)
adc
dec
push
mov
out
popf
xchg
mov
sbb
sub
jmp
leave
jnp
hlt
jmp
push
mov
xchg
fmul
cdq
scas
bound
popa
lea
mov
loope
and
or
push
js
addr16
mov
fisub
jbe
ins
add
stc
pop
out
jns
xor
push
lock
sbb
dec
mov
movs
inc
das
cmp
mov
push
(bad)
mov
cmp
rcr
cmp
push
and
jae
stos
adc
ror
div
sbb
cmp
mov
out
cmps
push
fisttp
fwait
and
mov
(bad)
pop
aad
push
adc
rcl
mov
mov
bound
and
mov
push
mov
jle
inc
mov
mov
mov
mov
sbb
loopne
mov
mov
mov
xchg
movs
aad
xchg
fidivr
lods
lock
test
retf
lds
push
(bad)
xchg
stos
lods
adc
mov
jmp
and
mov
mov
mov
and
add
and
aam
pop
mov
cmp
mov
push
xchg
xor
xlat
les
inc
adc
add
pop
mov
jmp
int
inc
imul
push
(bad)
loop
wbinvd
enter
adc
inc
inc
sub
clc
fwait
popf
add
bswap
repz
xchg
sbb
mov
or
mov
xchg
or
adc
popa
hlt
test
adc
mov
pop
sub
xor
or
or
or
out
je
add
pop
(bad)
or
(bad)
les
or
adc
add
adc
and
adc
sub
iret
addr16
and
inc
inc
sbb
in
shl
jbe
mov
(bad)
into
add
cmp
and
clc
push
pop
or
jbe
into
in
(bad)
cld
inc
std
lods
adc
popf
mov
jle
pop
dec
test
in
cmp
inc
xor
sbb
test
hlt
mov
mov
loope
pop
lock
ficomp
(bad)
fstp
outs
sub
nop
pop
ds
sub
ficom
adc
cmps
ins
fcom
into
xchg
aaa
and
fwait
cdq
xchg
pop
movs
mov
(bad)
cld
sar
iret
mov
loopne
ins
and
mov
xchg
dec
test
mov
cmp
arpl
mov
xchg
cmp
fstp
jne
repz
out
fcmovne
les
mov
pshufw
pop
scas
push
xor
(bad)
and
cmp
mov
loop
push
mov
outs
sbb
dec
lods
out
lahf
jno
jb
fdivr
sahf
push
dec
inc
stos
neg
xchg
int
imul
scas
cmp
mov
pusha
mov
imul
aam
stos
rcl
mov
(bad)
dec
mov
inc
sub
test
out
pop
out
addr16
imul
aad
daa
mov
adc
and
cmp
pop
sahf
sbb
adc
stos
int
jecxz
sbb
cmc
fwait
addr16
push
and
pop
adc
dec
mov
push
or
ror
fmul
adc
cli
pop
outs
inc
mov
out
fcomi
push
jmp
sbb
popw
jge
and
xchg
fmulp
xchg
retf
and
int3
push
rcr
add
repnz
adc
and
ret
and
out
pop
xlat
pop
push
mov
cmp
inc
push
(bad)
test
shl
les
inc
push
xchg
pop
cmps
push
sub
mov
idiv
and
std
push
sub
call
sub
movs
(bad)
pusha
cld
cdq
out
pop
dec
and
adc
mov
mov
pop
mov
test
pusha
cld
pop
or
or
add
call
call
or
push
cmp
jne
es
push
out
jb
es
cmp
cmp
mov
call
cwde
cmp
sub
in
jg
mov
arpl
mov
and
adc
les
jbe
mov
(bad)
fwait
lahf
or
sbb
fdivr
push
fs
das
pop
push
inc
ja
ror
cmc
xchg
sbb
jp
out
repz
out
ret
and
bound
adc
pop
dec
xlat
adc
stos
jp
sub
(bad)
mov
mov
mov
stos
dec
mov
push
loope
fidivr
ins
jge
push
out
adc
ffreep
push
mov
xor
ja
clc
adc
sti
cmps
ja
clc
sub
pop
test
jbe
push
sti
nop
mov
add
ret
push
loopne
dec
pop
out
mov
pusha
push
or
xor
outs
xchg
jecxz
std
sti
ins
(bad)
and
pop
cmp
sahf
ror
adc
leave
pop
inc
sahf
and
sub
fimul
pop
mov
out
ss
fwait
pop
mov
mov
jb
cmp
cdq
lods
mov
mov
ins
retf
xchg
push
loop
inc
data16
ror
mov
jmp
or
sbb
inc
outs
inc
add
ss
inc
pop
mov
arpl
shr
mov
loope
movs
or
xor
fs
test
sbb
xor
and
enter
hlt
adc
xchg
sbb
or
push
mov
jns
(bad)
or
fdiv
(bad)
adc
outs
aad
cmps
dec
lea
adc
jmp
shl
dec
sub
add
jns
sbb
add
leave
and
cwde
xor
aaa
mov
push
out
pop
add
dec
mov
pop
cmps
inc
lahf
xchg
sbb
adc
cld
(bad)
push
inc
push
adc
or
pop
xor
ror
xlat
loop
nop
push
dec
or
push
(bad)
adc
call
movs
or
pop
in
cli
popa
outs
xor
ror
out
jo
push
stc
cmp
adc
add
aaa
cmp
cmps
inc
ret
sti
sub
pop
inc
ins
adc
add
sbb
popa
push
push
xor
inc
or
and
dec
clc
mov
in
cmp
jecxz
int
lahf
add
int
call
sti
mov
cmp
and
rcr
inc
not
pop
fcomp
aaa
(bad)
fist
jl
or
push
jo
mov
mov
and
mov
xor
outs
test
(bad)
std
or
xor
clc
push
fs
jl
dec
inc
stos
pusha
call
inc
int3
sbb
call
les
dec
cwde
or
sahf
xchg
push
aad
pop
push
mov
cmp
test
mov
mov
(bad)
div
xchg
sbb
fisttp
inc
xchg
or
xchg
cmp
mov
cmc
in
jno
lods
stc
adc
outs
arpl
xor
gs
mov
sub
out
mov
shl
gs
push
and
inc
in
mov
ds
mov
xor
mov
mov
enter
icebp
cmp
pop
mov
or
pop
lahf
inc
pop
xchg
(bad)
mov
repz
xchg
ret
in
pop
adc
xlat
mov
xor
mov
test
xchg
adc
int3
scas
push
adc
arpl
inc
xchg
(bad)
sub
xor
or
cmp
and
sub
jp
scas
inc
test
mov
pusha
repnz
mov
(bad)
cwde
or
mov
jne
sub
push
xchg
sub
mov
ss
gs
lods
mov
(bad)
xchg
push
push
leave
add
xchg
sbb
mov
ds
shl
push
imul
adc
ret
or
fist
jbe
pop
shr
nop
lock
js
pop
add
xchg
jbe
pop
nop
sahf
(bad)
stc
repz
imul
adc
inc
out
pop
push
dec
stc
inc
pop
aaa
sbb
retf
into
and
xchg
stos
push
call
icebp
jne
mov
out
mov
daa
jno
shl
cs
jae
xchg
dec
loop
xor
cmps
or
ror
mov
idiv
je
pop
mov
push
and
int3
enter
sbb
sbb
xchg
inc
mov
pop
add
(bad)
mov
pop
mov
jecxz
add
nop
hlt
cmp
addr16
fwait
jno
xchg
adc
imul
adc
pop
pop
aam
mov
mov
call
in
pop
and
inc
stc
push
stos
push
sub
or
aad
inc
and
add
jbe
and
ins
ins
jmp
mov
mov
sbb
ss
and
and
cmc
cs
xchg
jge
(bad)
in
adc
fstp
xchg
jl
pusha
(bad)
dec
pushf
fsubr
mov
ret
push
dec
push
adc
push
ss
push
sub
cwde
push
retf
cmp
dec
and
add
cs
cmc
aad
mov
pop
out
test
xchg
xor
jns
sub
daa
div
fwait
jecxz
add
mov
dec
push
jle
daa
sbb
mov
loope
cmc
xchg
sbb
sub
add
push
addr16
cmp
inc
test
inc
in
pop
movs
fisub
pushf
jp
dec
repnz
fxch
push
leave
int
imul
repnz
fdiv
cli
dec
or
mov
sbb
movs
or
xchg
push
stc
data16
push
push
lods
pop
mov
push
cmp
mov
inc
and
fstp
cld
loop
int
call
dec
or
out
cwde
(bad)
jmp
fdiv
add
test
lods
sbb
cmp
dec
sahf
arpl
jp
xor
dec
push
adc
aaa
sub
fwait
jb
push
add
imul
inc
inc
daa
enter
jae
shl
add
push
cmp
test
or
les
jp
fstp
inc
add
dec
adc
mov
test
xchg
jl
mul
shl
stc
push
mov
or
cmc
mov
xchg
push
pushf
add
test
jecxz
push
sbb
cmps
jne
cld
das
fldenv
stos
sahf
jmp
clc
iret
repnz
fwait
push
out
or
pop
jno
add
jge
push
mov
jne
dec
mov
(bad)
(bad)
scas
shl
das
adc
enter
cs
and
ret
push
mov
inc
cli
add
pop
movs
and
idiv
dec
int
sbb
movs
add
je
and
mov
daa
out
sbb
or
lds
mov
ins
fdivr
xchg
hlt
loopne
jnp
push
loopne
dec
mov
imul
mov
jae
sbb
pop
mov
das
ds
ds
fcomp
sub
daa
jns
arpl
xor
loopne
retf
ja
mov
jb
xor
pop
jne
lahf
adc
frstor
mov
add
mov
in
fist
lock
out
clc
mov
out
mov
shl
mov
int3
icebp
fwait
or
scas
and
mov
sbb
jp
xor
pusha
clc
ret
push
inc
rcr
loop
test
movs
bound
in
and
sbb
xor
neg
mov
dec
mov
mov
pop
mov
mov
cmp
pop
(bad)
xchg
imul
nop
sahf
fisubr
ret
test
(bad)
mov
dec
mov
fisttp
(bad)
inc
and
movs
and
xchg
cdq
adc
outs
test
jns
pop
neg
or
scas
sti
push
sub
mov
xchg
ja
je
mov
inc
sbb
adc
bnd
pop
xor
dec
and
ds
jge
mov
pop
sbb
arpl
popf
rcr
shl
or
imul
push
pop
mov
pop
pop
mov
pop
jo
adc
imul
cmp
cmp
adc
pop
hlt
retf
bound
(bad)
jl
aaa
cwde
xor
retf
mov
mov
mov
cmovl
cli
je
rcl
ja
and
xor
inc
jb
adc
adc
aaa
retf
repnz
jae
call
inc
xchg
pop
out
in
jmp
aam
push
ret
(bad)
sar
fist
mov
cmp
cmp
arpl
push
xchg
push
xchg
pusha
lea
mov
add
or
dec
or
ins
sbb
add
mov
adc
aaa
pop
and
sbb
inc
pop
adc
pop
fiadd
loopne
daa
push
mov
stos
fild
dec
adc
popa
cmps
cli
int3
cmps
not
cmp
push
ret
push
data16
outs
jb
imul
push
pop
cwde
cmc
jge
inc
popa
and
cmp
inc
pop
mov
iret
mov
stos
add
test
in
(bad)
daa
jne
jp
inc
idiv
iret
leave
or
xchg
jl
sbb
stc
and
test
mov
movs
add
test
jecxz
lds
outs
(bad)
dec
mov
push
and
and
call
shr
dec
sub
mov
mov
sub
push
cmp
aaa
in
adc
sub
sub
or
mov
imul
lock
(bad)
xchg
xchg
inc
xor
sub
sub
jg
retf
pop
lock
push
sub
(bad)
fcom
movs
lahf
push
jo
imul
fs
mov
adc
leave
xchg
popf
cmp
ins
lods
sbb
mov
xchg
inc
sbb
pop
inc
jb
scas
test
push
or
mov
jno
outs
adc
add
mov
add
movs
in
arpl
fs
push
inc
fs
lods
dec
jb
punpckhwd
icebp
sbb
mov
dec
and
push
push
jp
or
pop
test
test
mov
xchg
xchg
jmp
xor
or
xlat
dec
scas
dec
movs
cmps
sub
and
xchg
in
pusha
jmp
fnstcw
mov
add
inc
adc
mov
fstp
mov
lock
repnz
adc
aas
div
mov
inc
rcl
sub
push
mov
pop
mov
jne
fcmovnb
push
cdq
jo
loopne
jp
jmp
sar
cmc
fwait
pop
leave
idiv
lods
and
add
repz
mov
and
mov
xchg
cmp
scas
jno
jecxz
mov
xor
adc
fdiv
add
jmp
add
adc
mov
cmp
jnp
inc
jecxz
je
add
fst
and
scas
cmp
sub
ins
fwait
jae
(bad)
in
xchg
pop
fdiv
fdiv
cmp
jno
or
lds
mov
push
clc
dec
push
jg
jl
mov
pop
xchg
add
imul
dec
lea
or
(bad)
xchg
jle
fwait
sub
(bad)
iret
inc
pop
sbb
cmps
ins
xor
xchg
loop
daa
pop
add
scas
and
mov
or
call
dec
cs
add
jmp
dec
and
movs
pop
ds
dec
retf
ret
mov
dec
jg
jg
and
call
xor
fstp
jge
and
dec
jmp
ror
mov
mov
push
sub
cmp
scas
xlat
fisub
movs
in
fnstenv
push
pop
sub
test
ret
and
popa
imul
cmp
repz
inc
sbb
call
add
and
fisttp
and
dec
mov
jge
idiv
jae
add
icebp
push
push
dec
pop
test
inc
out
xor
sti
push
mov
data16
outs
bound
dec
sub
nop
in
mov
dec
pop
outs
jmp
or
arpl
mov
inc
out
push
sbb
and
fstp
cmps
cld
dec
xor
push
xlat
mov
push
cs
cmp
pop
ds
xor
add
and
mov
jmp
and
xlat
(bad)
jns
sbb
shr
mov
es
adc
out
movs
mov
mov
pop
xor
or
add
mov
sbb
rol
mov
xchg
push
xchg
inc
pushf
cmp
inc
add
sub
test
xchg
popa
movs
es
scas
retf
ds
(bad)
(bad)
fild
fdivr
add
popa
jecxz
fwait
add
repz
mov
outs
retf
scas
movs
(bad)
movs
in
fidiv
dec
mov
pop
je
sbb
mov
stc
lods
fild
inc
mov
loope
int
test
adc
popf
sbb
mov
and
clc
es
dec
stos
mov
sub
and
enter
fnstenv
cwde
push
rcl
(bad)
in
mov
or
push
(bad)
push
int3
rol
enter
xlat
out
imul
cmp
mov
sbb
pop
mov
ins
cmp
adc
fimul
jge
mov
retf
out
test
fild
mov
call
jmp
or
dec
cs
das
imul
add
fdiv
cmp
jge
mov
ret
repz
icebp
loopne
dec
ss
push
push
das
bound
mov
(bad)
pop
int3
clc
or
scas
std
dec
jnp
mov
adc
pop
add
or
sbb
pop
sbb
jg
stc
push
cld
aas
inc
add
mov
adc
jg
adc
cmps
inc
in
dec
lahf
lds
(bad)
(bad)
dec
mov
mov
stc
pushf
xchg
aam
adc
push
xchg
push
ins
popf
(bad)
jnp
jo
out
add
loop
xchg
xor
ret
push
xchg
test
ss
shr
mov
ficomp
mov
in
sub
popf
jns
cmc
stos
pop
sub
dec
sbb
mov
movs
mov
test
sub
xchg
xor
jne
aaa
in
lahf
cmp
aad
ds
out
lods
push
sahf
out
and
or
in
test
fbld
inc
(bad)
(bad)
cmp
push
(bad)
and
cmp
dec
adc
pop
mov
add
popa
stos
push
cld
sbb
jl
retf
mov
pop
mov
imul
nop
push
js
add
outs
push
lahf
xlat
les
iret
movs
lock
daa
jecxz
mov
into
jl
and
jns
adc
std
retf
and
popf
bound
jb
mov
add
and
ss
lock
retf
lahf
ret
and
cmps
push
scas
cmp
jbe
in
call
dec
inc
iret
arpl
ret
sub
int3
cmp
stos
xor
adc
movs
and
fsubr
fadd
mov
dec
dec
add
push
shl
stc
xor
pop
mov
ss
scas
movs
aas
jmp
push
sub
jno
dec
scas
dec
es
pop
xchg
mov
inc
and
jno
arpl
test
xchg
mov
xchg
adc
xchg
or
js
(bad)
std
cwde
fadd
loopne
mov
jp
add
or
and
jp
mov
out
mov
mov
sub
push
xchg
dec
sbb
cwde
sbb
paddw
adc
xchg
pop
cld
add
test
out
sub
cdq
cmp
push
imul
cmp
pop
shl
mov
jne
ror
add
iret
jle
icebp
push
mov
aad
popf
shl
mov
cmp
adc
mov
mov
into
pop
cdq
jo
mov
pop
imul
icebp
stc
(bad)
(bad)
jmp
sbb
mov
std
push
test
mov
or
adc
orps
push
push
loope
out
jge
mov
jg
out
xchg
js
inc
and
inc
shr
fs
cmps
sbb
neg
sbb
add
cmp
scas
mov
sar
scas
sub
sbb
dec
cli
mov
fnstsw
xchg
ds
xchg
lahf
jae
fmul
out
imul
aas
and
mov
int
mov
cmp
fisttp
repnz
je
xlat
call
xor
test
fbstp
jmp
cmps
or
cmp
xor
jecxz
retf
fstp
inc
sub
xor
pop
fisubr
mov
cmp
dec
add
js
add
sti
fcom
jle
ret
loopne
pop
inc
cmp
int
test
out
test
dec
ret
push
sti
lds
fdiv
add
sti
mov
int
pusha
inc
jno
rol
mov
sahf
and
mov
test
out
mov
dec
lock
aam
outs
lods
sahf
xchg
inc
cmps
xchg
cmp
retf
daa
ror
test
and
or
arpl
les
scas
sbb
jge
daa
xor
cli
psubsb
call
(bad)
rcr
ja
mov
inc
sbb
dec
mov
(bad)
je
cmp
lods
push
xchg
in
push
push
repz
cmp
push
ret
dec
clc
in
out
ror
int
and
inc
out
mov
cmp
lods
outs
in
loope
les
add
movs
loop
mov
bound
jecxz
jb
dec
in
test
sbb
xchg
xor
sub
cli
add
dec
clc
mov
jb
repz
mov
pop
in
in
pop
sub
fcmovbe
clc
in
out
jg
dec
sti
push
stos
scas
out
mov
jecxz
ret
outs
ror
fdivrp
fisttp
dec
mov
push
(bad)
xacquire
jbe
lahf
jle
cmp
in
push
dec
bound
xchg
sub
stc
dec
lods
jno
xchg
xchg
sub
mov
adc
mov
out
add
lds
loopne
test
into
out
lahf
dec
ja
out
mul
xchg
(bad)
ss
popa
cdq
test
inc
jnp
mov
ret
sbb
cmp
ret
xor
sar
push
enter
int3
pop
dec
daa
mov
movs
ins
dec
mov
imul
imul
cmp
rcl
inc
and
mov
test
aaa
sbb
xor
jp
repnz
loop
pop
(bad)
in
das
sbb
jns
mov
test
imul
sub
pop
es
ret
lock
pop
jno
ret
mov
lock
ret
aaa
cmc
push
data16
pop
shl
mov
iret
adc
dec
add
xor
sub
inc
(bad)
push
rcr
aad
gs
push
mov
sbb
pop
rol
inc
loopne
add
jne
repz
xor
gs
outs
les
push
pusha
sbb
outs
dec
cld
pop
xchg
(bad)
jmp
sbb
lods
sbb
fstp
rol
xchg
aaa
inc
pop
test
inc
lods
adc
push
stos
pop
ret
jmp
rcr
jno
push
cmc
mov
popa
dec
gs
dec
das
iret
(bad)
fs
cmp
nop
jns
sbb
popf
add
in
jmp
hlt
fld
jmp
or
sub
xor
imul
inc
mov
out
cdq
pusha
push
jbe
dec
dec
cmp
imul
mov
push
aad
or
push
inc
enter
jmp
inc
pop
enter
inc
lea
and
dec
pop
ins
fisubr
enter
and
cli
call
sbb
sub
mov
sub
mov
sub
mov
jbe
fisttp
and
xor
xchg
into
inc
test
sbb
push
jmp
cmp
stos
mov
jo
test
push
(bad)
movs
mov
push
movs
int
xchg
aam
rol
xchg
jnp
mov
(bad)
(bad)
test
repz
mov
daa
out
(bad)
out
jmp
addr16
push
shl
sbb
xchg
mov
mov
aam
xor
and
xchg
cmp
mov
and
lahf
sbb
adc
inc
cmp
call
jbe
scas
out
and
aam
mov
sbb
int
(bad)
bound
and
scas
sbb
push
mov
mov
jmp
(bad)
ins
fdiv
sbb
dec
out
mov
push
out
retf
mov
test
push
retf
push
fdiv
es
aaa
dec
aas
sti
test
test
mov
fild
pop
jmp
dec
clc
aas
out
mov
sar
pop
test
sub
scas
(bad)
scas
imul
jno
jl
mov
pop
lea
pop
add
jns
fsubr
aad
movaps
adc
mov
jp
cmp
and
mov
push
shr
mov
psllq
mov
hlt
ins
movs
cmp
xor
hlt
imul
outs
js
test
out
mov
inc
mov
cmp
ret
cmc
ins
pop
or
test
xchg
jl
adc
cmp
cmp
int
adc
mov
cmp
adc
pop
push
xor
sbb
sahf
lods
lea
pop
sub
aam
fadd
sub
ins
push
not
mov
inc
arpl
add
pusha
and
adc
std
push
mov
pop
add
jo
outs
add
cmp
sti
jmp
leave
lods
test
fisttp
sbb
(bad)
cmp
cld
in
push
data16
in
loop
ja
mov
icebp
pop
aad
ins
cmc
ds
or
std
xorps
ja
pop
adc
xor
mov
test
ins
inc
das
push
addr16
xchg
adc
add
mov
daa
push
sar
imul
nop
cmps
mov
add
jp
call
push
xor
fsubr
xchg
(bad)
cmp
out
hlt
sbb
xor
popf
push
aam
ds
int
add
inc
xchg
lods
or
lods
mov
sub
add
div
push
add
pop
xor
fidivr
ret
(bad)
xor
ss
add
shl
sbb
mov
push
adc
add
dec
mov
fdivp
gs
adc
add
xlat
add
jl
ficom
test
mov
adc
cld
xor
adc
sub
dec
or
mov
dec
stos
popf
push
xor
int3
mov
mov
dec
xor
imul
xor
fst
push
push
in
int
mov
scas
mov
push
jle
lods
sbb
mov
push
inc
inc
enter
lods
pop
push
sub
jl
add
loopne
jp
fucom
repnz
jo
mov
add
and
or
(bad)
adc
test
jmp
cmps
out
inc
retf
xor
mov
stos
imul
std
adc
sbb
mov
or
and
pop
shl
jle
lods
fldcw
ins
leave
jb
inc
jmp
retf
mov
sti
shr
jno
test
push
pusha
jne
inc
xchg
sbb
(bad)
aad
idiv
jle
jnp
mov
adc
jl
mov
cmp
cmp
ins
xchg
aad
pop
sbb
imul
lea
fisub
push
xchg
out
mov
jno
push
sahf
jnp
mul
rcr
cmp
lock
int3
std
mov
xchg
addr16
repz
and
pop
mov
ins
pop
inc
ds
stc
cmp
lahf
jg
xchg
int3
les
pushaw
popa
xchg
repz
ss
stc
or
sub
dec
inc
push
mov
call
sub
cmp
call
in
mov
push
cmp
sahf
nop
xchg
sbb
dec
enter
push
sbb
je
in
popa
arpl
loope
sub
sub
jns
movs
lahf
dec
mov
sbb
add
push
pop
xor
mov
hlt
mov
mov
or
lods
inc
adc
je
ins
out
cmp
in
jb
xchg
push
mov
arpl
ins
std
pop
imul
dec
jle
mov
push
dec
mov
or
pop
mov
add
and
mov
xlat
push
jns
xor
jo
mov
jo
ja
mov
xor
leave
xchg
aad
push
add
(bad)
jb
adc
ja
jl
movs
sti
jmp
fcmovu
pop
mov
adc
outs
pusha
jb
shr
lds
sbb
ins
ret
xor
aad
jle
scas
pop
add
dec
das
popf
jle
scas
je
ret
push
dec
and
or
xor
pop
hlt
mov
pop
sbb
dec
cmc
fsub
retf
push
in
jo
(bad)
rol
pop
adc
or
mov
das
sbb
outs
stc
xchg
jecxz
xor
clc
xor
cmp
les
sbb
dec
stos
cmp
jmp
(bad)
jmp
sub
mov
or
pop
stc
test
in
cmps
int
mov
aas
xchg
jns
and
jne
int
and
adc
push
dec
mov
mov
push
adc
das
add
xor
sub
(bad)
sbb
adc
test
jae
(bad)
test
movs
sti
and
test
push
std
(bad)
mov
fisttp
rcr
repz
mov
jno
mov
xor
mov
les
cmp
ins
(bad)
popf
push
and
pop
out
adc
jle
jle
aaa
cs
xchg
outs
repz
call
sbb
stos
shl
pop
adc
dec
outs
loopne
jge
xchg
rol
inc
adc
fidiv
or
rol
mov
outs
mov
and
xor
or
jo
jb
adc
xchg
mov
pop
iret
or
(bad)
(bad)
mov
inc
sar
mov
lock
jmp
fisttp
call
adc
cmp
or
ror
inc
arpl
hlt
xor
or
and
js
and
push
(bad)
jns
ret
popf
push
clc
lea
add
cmp
adc
sbb
test
mov
sbb
sub
mov
sub
(bad)
scas
lods
mov
int
cmps
push
mov
addr16
jge
dec
ins
cli
lds
cld
cs
dec
jmp
les
xor
pop
jae
or
push
sti
in
test
cmp
mov
es
aaa
and
dec
inc
mov
bound
pushf
test
cmp
mov
sbb
mov
cmp
jbe
push
out
cmp
aam
jns
push
cld
xor
fist
push
(bad)
fsub
adc
sub
mov
adc
scas
popa
jns
sbb
out
aas
inc
adc
pop
jb
mov
mov
sub
mov
cmp
push
jo
fidiv
inc
pop
mov
mov
clc
lea
jbe
or
xor
shr
push
push
addr16
ins
mov
mov
out
sbb
dec
popf
adc
das
push
add
ja
data16
and
jae
push
pusha
and
add
clc
lahf
pop
push
add
inc
sbb
pushf
rcr
pop
aad
shl
scas
cwde
push
shl
je
cdq
cmp
icebp
fistp
xor
dec
lock
jno
mov
jo
cmp
shl
hlt
js
xchg
rcl
push
repz
xchg
fwait
icebp
xchg
repz
pop
adc
out
add
js
retf
stos
xchg
imul
jecxz
mov
movs
adc
xor
or
aam
inc
jg
xchg
jecxz
and
mov
ja
push
scas
ins
mov
xchg
ret
mov
imul
cdq
ja
sub
jb
je
cmp
add
loope
sub
mov
js
inc
push
loope
outs
imul
jmp
jno
fidivr
push
inc
mov
ins
cmps
dec
idiv
sub
pop
arpl
dec
sahf
sti
adc
ins
sar
cs
pop
jbe
inc
inc
mov
and
xor
(bad)
aam
mov
lahf
mov
adc
into
in
sub
retf
test
push
gs
stos
mov
jmp
mov
or
dec
leave
into
or
(bad)
sar
gs
push
xor
push
inc
ins
call
loop
lock
(bad)
xchg
ror
and
cmp
sub
pop
and
push
xor
add
jl
loop
movs
mov
lea
std
or
ins
mov
jno
pop
pop
sbb
stos
fwait
fs
push
add
fsubr
out
pop
sub
push
inc
push
dec
xor
dec
fist
adc
(bad)
popaw
sub
out
call
inc
aas
jno
iret
and
xchg
pop
scas
push
arpl
ficomp
xlat
xchg
out
jno
xchg
das
stc
in
inc
inc
adc
mov
ja
push
cli
cmp
adc
cli
repnz
sub
fsubr
test
sbb
je
out
mov
ret
stos
pop
xor
adc
xchg
sbb
mov
xor
and
pop
push
cld
ret
and
cmp
cmp
push
jb
or
xor
inc
cli
fld
cmps
pusha
inc
test
sbb
ret
lds
adc
sar
add
sub
clc
xchg
test
(bad)
cmp
sub
adc
or
jo
xor
mov
jmp
dec
cmc
cmc
fwait
add
cmp
jo
xchg
and
loopne
hlt
sbb
cli
mov
rol
test
push
sbb
mov
xchg
push
fwait
push
mov
xor
sub
jg
test
mov
mov
mov
pop
mov
xchg
ret
adc
cmp
mov
mov
sub
jbe
aad
sbb
jae
loopne
loope
mul
ins
call
cmps
das
jne
jecxz
mov
sub
sub
add
adc
sbb
nop
cmps
push
and
and
outs
jnp
nop
dec
(bad)
aas
jno
rol
(bad)
xchg
dec
xchg
cmp
inc
je
out
mov
dec
pop
clc
xor
dec
je
add
xchg
push
adc
(bad)
popa
xchg
int3
test
in
fist
jmp
mov
push
fwait
xor
mov
mov
fwait
dec
add
cmp
sub
in
pop
mov
adc
xchg
or
movs
and
jns
sar
pop
cmc
xor
inc
rcl
mov
cmps
adc
sbb
add
leave
dec
push
mov
out
jmp
pushf
sub
fst
mov
push
popf
loope
aad
mov
lods
xchg
enter
pop
mov
fisttp
std
push
cmp
or
push
sub
sbb
and
or
push
mov
(bad)
mov
mov
in
xor
rcl
push
fistp
cmc
push
inc
jnp
sbb
mov
push
push
jg
ja
shl
mov
jo
mov
repnz
xchg
dec
out
adc
xor
aas
mov
cmps
bound
jns
pop
aaa
pop
aas
xor
jns
rcr
sub
push
cli
mov
fnsave
stos
and
cmp
dec
mov
clc
push
das
sbb
adc
lods
out
push
mov
inc
xor
repnz
dec
xor
xchg
mov
pop
push
lds
adc
cmp
daa
push
add
daa
or
fdivr
mov
jmp
leave
push
push
adc
mov
(bad)
cmp
lea
push
aad
outs
lea
fmul
mov
pop
retf
mov
xchg
push
sbb
xchg
outs
and
mov
inc
or
pop
clc
loope
inc
inc
push
xchg
xchg
(bad)
les
sub
jg
enter
push
(bad)
fisttp
les
add
in
ins
jecxz
frstor
stc
xlat
dec
cli
iret
inc
enter
xchg
jl
cmc
leave
gs
in
xchg
mov
movs
push
mov
call
pop
adc
xor
jb
lea
bnd
add
out
push
ss
xor
mov
in
(bad)
jle
test
call
int
add
lods
imul
fld
xor
ins
jno
lea
xor
loope
hlt
cmp
mov
in
push
adc
pushf
cdq
xchg
and
js
neg
sbb
je
lds
(bad)
xor
arpl
cli
cmp
nop
mov
and
pop
sub
ja
jmp
pop
int3
lahf
push
sub
int3
jmp
and
cli
stc
jmp
les
cmps
mov
and
inc
stos
pop
xchg
push
adc
pop
sub
(bad)
lock
xchg
mov
sub
fisttp
das
dec
leave
add
shl
dec
xor
pop
push
xlat
nop
dec
mov
mov
clc
sbb
stos
mov
mov
outs
jbe
xor
fs
lods
pop
and
pop
sbb
mov
inc
stc
mov
mov
or
ins
repz
lahf
xchg
call
(bad)
aam
stos
popf
jo
std
dec
jle
adc
call
aas
lods
loopne
sbb
test
inc
ja
or
jp
and
div
sbb
and
xor
jns
mov
cmps
repnz
inc
add
pop
fcomi
loopne
push
sahf
fmul
(bad)
(bad)
int3
cmp
jno
push
movs
and
das
daa
dec
je
test
push
xchg
cmc
sub
aaa
xor
fcomp
ret
xchg
push
(bad)
pop
xor
pop
push
pop
cmc
sbb
adc
aad
cdq
loopne
pop
xor
out
movs
push
jmp
faddp
cmc
xchg
xchg
and
in
idiv
sub
dec
loope
push
mov
call
dec
test
mov
push
mov
pop
fistp
xchg
jl
enter
dec
cmp
out
popa
in
mov
and
pushf
mov
mov
jbe
cmp
push
into
out
xchg
xor
stos
stc
out
cs
push
pop
inc
xlat
mov
adc
pop
push
call
xor
cmps
mov
ins
sahf
ins
mov
sbb
add
aad
pop
ins
lods
pop
leave
and
out
and
sub
adc
test
mov
ss
mov
mov
cmp
les
mov
shr
aad
adc
nop
cld
loop
xchg
test
out
sti
je
mov
shl
mov
call
in
inc
pop
out
mov
add
scas
addr16
mov
pop
outs
sbb
pop
and
das
clc
test
mov
das
jae
in
int
movs
mov
xlat
rol
repnz
ja
jb
xor
xchg
pop
es
test
pop
add
mov
jmp
leave
xlat
jmp
xor
push
adc
jns
sbb
pop
xchg
or
bound
pop
jecxz
daa
xor
push
mov
ss
icebp
call
(bad)
mov
bound
jmp
(bad)
sti
aas
jno
call
push
jp
not
or
div
lock
out
mov
cli
lea
xchg
cli
mov
fnsave
ret
or
add
push
mov
pop
int3
test
stos
lss
shl
test
pop
out
into
test
mov
xor
dec
inc
mov
das
jp
pop
das
fnstenv
push
push
sbb
mov
leave
loop
add
test
jmp
mov
movs
add
xchg
lock
mov
jo
sbb
dec
adc
mov
fidiv
xor
lds
(bad)
and
inc
xchg
xor
dec
ins
xor
outs
bound
xor
leave
jp
fistp
loope
in
ficomp
push
cli
adc
sbb
lahf
test
mov
daa
add
push
stos
push
inc
cmp
dec
sbb
pop
jl
push
and
jl
test
(bad)
inc
ss
push
xchg
test
pop
out
(bad)
push
push
jno
lea
and
push
arpl
lods
dec
push
iret
cmp
iret
pusha
push
push
test
push
pop
mov
adc
mov
dec
fcmovnbe
popf
xor
ss
cmp
sub
inc
push
dec
nop
xchg
dec
imul
into
add
into
add
fisubr
in
mov
dec
sbb
aad
ss
out
mov
(bad)
ja
test
jmp
push
push
sub
ror
push
js
fstp
mov
fld
mov
xor
cld
or
mul
dec
daa
adc
adc
mov
sbb
test
dec
retf
lock
ins
mov
aas
fsub
test
push
(bad)
mov
and
pop
and
xlat
xchg
add
sbb
outs
bound
in
je
cmp
dec
xchg
or
add
mov
das
sub
leave
jmp
pop
and
movs
aam
scas
(bad)
fsubr
lods
idiv
in
push
test
inc
or
xor
mov
enter
xor
cmps
inc
push
dec
xchg
ss
and
pusha
push
xor
ret
retf
or
ret
gs
push
popa
arpl
iret
mov
loope
xchg
add
fsubp
scas
inc
(bad)
sbb
lds
inc
mov
popf
jo
cmp
push
push
hlt
jmp
jo
stc
adc
adc
test
fdivp
lahf
jno
ficom
cmp
bound
mov
movs
jg
lods
or
xchg
add
and
aaa
pop
int3
sahf
mov
xchg
mov
(bad)
mov
sti
(bad)
or
lds
mov
not
ficom
idiv
dec
push
clc
adc
inc
mov
push
arpl
mov
sub
(bad)
(bad)
jecxz
adc
out
push
xchg
inc
clc
add
xchg
add
mov
lods
jbe
inc
jmp
out
push
sub
push
in
jnp
push
cmps
xchg
stos
adc
jg
xor
inc
lods
ror
cwde
or
dec
jp
ror
retf
jle
and
cmps
mov
fiadd
mov
jnp
ss
test
les
xchg
cmc
jmp
mov
cmp
repnz
lods
jno
fcom
cmp
popf
lds
retf
fisub
ficom
jne
pop
ficomp
aam
xchg
div
push
mov
sbb
lahf
jle
aas
retf
cmp
or
and
pop
retf
sbb
enter
sar
sub
pop
lahf
jne
jmp
or
cdq
aad
arpl
enter
sbb
aas
leave
(bad)
dec
or
push
jge
pushf
icebp
and
aas
inc
sbb
xor
push
add
pushf
or
pop
sub
mov
retf
call
adc
pusha
cmp
mov
dec
pop
in
xchg
popf
xor
ror
scas
xchg
dec
cmp
push
lock
shl
mov
scas
retf
mov
std
cmp
xchg
xor
or
mov
sub
test
push
mov
dec
xchg
or
adc
or
inc
sbb
loopne
xchg
popa
mov
popa
inc
dec
add
sahf
(bad)
pop
test
sahf
shl
ins
add
jp
or
lea
pop
lea
push
inc
cmp
adc
sbb
xchg
mov
rcl
(bad)
inc
pop
sbb
je
sbb
cs
push
and
(bad)
outs
pop
cmp
and
cld
inc
push
sbb
jge
cdq
ins
sbb
rcl
imul
push
pop
retf
loopne
out
xor
cmp
adc
or
jb
xlat
xchg
pop
int3
mov
test
xor
lock
aam
loop
dec
nop
orps
iret
lods
cld
or
aam
rcr
add
inc
xchg
xchg
fst
pop
sub
push
xor
ins
pop
(bad)
js
shl
mov
cld
inc
cmps
mov
dec
outs
nop
add
push
fisubr
leave
and
fs
push
lahf
push
adc
cdq
cmp
mov
das
jmp
ror
mov
bound
test
pop
and
mov
sbb
out
mov
es
push
sub
pusha
pop
clc
nop
jg
popa
out
sub
mov
je
xlat
call
xor
cmp
mov
or
mov
das
lods
jl
xchg
fmul
cmc
push
cli
nop
mov
rcl
(bad)
jecxz
add
add
adc
mov
(bad)
out
jno
(bad)
xlat
outs
loop
dec
mov
out
push
sub
inc
out
jge
stc
xchg
sahf
cli
(bad)
mov
mov
lahf
pop
int
and
in
outs
lods
pusha
xor
into
iret
and
out
dec
push
and
stc
arpl
mov
(bad)
sub
sahf
xchg
gs
and
loop
icebp
and
add
(bad)
outs
bnd
or
movs
call
imul
jecxz
jnp
jne
scas
ffreep
lea
mov
in
sub
dec
repz
daa
dec
cmps
mov
mov
data16
dec
imul
inc
or
mov
inc
and
sbb
aaa
sub
out
cld
sti
aaa
in
cli
mov
push
movs
in
add
bound
add
push
xor
pop
imul
les
cmps
je
cmc
jge
add
and
pushf
jb
mov
mov
loopne
outs
cmp
xor
ja
push
pop
pop
xchg
hlt
(bad)
sbb
(bad)
push
add
pop
ficom
in
dec
lea
jmp
lods
jl
ror
mov
sbb
cmp
shl
mov
xor
cdq
sti
push
retf
js
sub
xchg
cmp
jmp
jmp
add
pop
and
or
pop
mov
addr16
lods
pop
(bad)
in
retf
push
out
and
mov
sub
loopne
cmp
jmp
xor
ret
mov
xchg
fist
(bad)
add
fidiv
mov
pop
test
shl
adc
dec
outs
ret
cmp
(bad)
jle
mov
mov
ficomp
out
js
cld
imul
ds
push
shl
mov
push
fnsave
mov
enter
cmp
push
pop
cmps
test
jno
test
(bad)
popf
outs
sbb
mov
xchg
cs
or
das
add
ss
jne
dec
imul
xchg
jns
jbe
arpl
movs
xchg
sahf
sahf
xchg
nop
add
jmp
popa
push
xor
int3
in
adc
stc
inc
cmps
sbb
or
mov
dec
push
add
ss
daa
mov
test
fadd
cmc
pop
push
jecxz
or
test
test
enter
ins
pusha
int3
stc
pop
mov
or
pop
xchg
js
xor
pop
jmp
arpl
adc
scas
sahf
mov
cmc
mov
sbb
mov
add
dec
clc
addr16
push
div
or
jno
sbb
dec
pop
sahf
xchg
push
inc
xchg
cmp
ins
sub
ins
cli
in
adc
mul
mov
mov
aad
xchg
cmc
loope
inc
adc
xchg
ins
icebp
xor
pop
icebp
jbe
es
xor
pop
ret
inc
sub
mov
xchg
pop
xchg
retf
jbe
out
enter
int
addr16
and
xor
pop
push
ret
shl
jge
outs
pop
mul
aaa
pop
retf
add
mov
mov
ror
xor
(bad)
pusha
and
je
sahf
jb
inc
xor
mov
movs
push
or
add
xchg
inc
cmp
add
bound
es
dec
in
or
and
loope
imul
mov
jg
call
mov
inc
xchg
jnp
out
mov
inc
xchg
rcr
mov
push
mul
xchg
ret
cwde
in
sbb
push
mov
xchg
cli
xor
ss
mov
inc
mov
cmp
add
and
mov
js
ror
gs
pop
adc
ret
test
lods
add
push
in
pop
xor
or
cmps
cmp
or
stos
add
enter
mov
maskmovq
imul
lods
add
jbe
fs
ins
dec
dec
inc
mov
div
call
add
in
jns
jge
shl
(bad)
scas
jo
jne
test
mov
mov
(bad)
mov
test
mov
xchg
sahf
pop
sub
sub
xchg
sub
ins
and
dec
add
mov
std
cmp
shr
mov
cmp
call
stos
mov
push
in
pop
out
out
cmp
push
std
pop
aaa
sbb
out
sbb
nop
xor
ss
mov
adc
add
ret
(bad)
xor
lods
mov
sub
sahf
add
add
sub
idiv
(bad)
jmp
fcom
cli
or
repz
xchg
xchg
push
daa
loopne
rcr
mov
or
push
cmp
dec
jns
cdq
test
loope
and
fwait
pop
cld
jmp
pop
dec
pop
pop
jp
adc
cwde
inc
cmps
(bad)
loopne
(bad)
out
popa
cli
dec
push
or
pushf
inc
je
sbb
aam
mov
jnp
and
xchg
pop
data16
push
or
xchg
popa
or
push
xor
daa
jne
xor
xor
xchg
in
lea
les
xchg
ss
cmps
stc
dec
cvtdq2ps
xor
outs
adc
scas
arpl
push
pop
out
xchg
jae
mov
sbb
add
pop
mov
cmc
mov
jns
out
outs
std
(bad)
clc
push
hlt
lahf
and
mov
in
addr16
not
cmps
cmp
std
jo
fnsave
jmp
(bad)
jle
mov
ds
xchg
scas
or
sbb
jo
fistp
jle
mov
cld
pop
dec
sbb
mov
leave
test
inc
mov
test
aas
imul
cmp
push
call
jmp
(bad)
or
bound
sub
add
movs
jbe
dec
es
and
xor
jae
pop
jb
test
sub
cdq
mov
sub
ffree
ficom
fdivp
or
aad
jb
sar
daa
jp
pop
xchg
jne
or
sar
bound
(bad)
dec
or
push
mov
fs
mov
cmps
inc
repz
aas
jmp
and
mov
retf
loop
jp
hlt
retf
add
inc
retf
test
in
and
jp
inc
xchg
outs
mov
mov
or
xor
frstor
das
jl
jmp
pop
mov
push
xlat
sbb
sbb
popf
xchg
and
pop
xor
xor
sar
scas
pop
dec
test
mov
aaa
add
cmp
loopne
mul
push
xchg
and
cmp
call
(bad)
pop
push
or
(bad)
mov
arpl
test
test
pop
hlt
pop
sahf
sub
cld
int
push
rol
repnz
mov
rcr
push
adc
cli
add
loopne
jnp
fs
sub
in
stos
xchg
sbb
movs
ret
mov
out
xchg
or
cmp
xchg
jg
mov
xlat
mov
jns
andps
addr16
inc
fldcw
popa
ins
mov
rcr
cli
sahf
repz
sub
ret
add
pop
mov
mov
imul
jecxz
ins
lds
imul
in
pop
jl
dec
daa
(bad)
xor
sbb
sbb
sti
daa
sub
es
pop
xchg
arpl
es
sbb
les
push
xchg
hlt
mov
retf
push
cmp
push
add
push
pop
(bad)
dec
outs
aaa
test
mov
mov
add
shl
inc
in
jbe
fmul
or
xchg
fsubr
dec
ss
fmul
sar
(bad)
push
jae
adc
pop
push
sub
xchg
jge
cmp
jns
sar
not
jp
xor
outs
scas
out
scas
(bad)
fdiv
lods
xor
sti
sub
(bad)
and
xor
pop
enter
ds
jecxz
xchg
xor
sbb
fwait
out
sub
retf
xor
cli
popa
push
jle
push
sub
sub
jecxz
aad
and
pop
fcomp
mov
mov
es
ins
fwait
cs
loop
or
xor
test
repnz
jl
pop
cmp
(bad)
sbb
and
push
(bad)
gs
hlt
cmp
sbb
push
xor
mov
mov
xchg
cs
sub
fnsetpm(287
jae
or
aad
test
loopne
retf
mov
lock
outs
and
cdq
inc
out
mov
stos
mov
div
sub
jae
lds
adc
and
cmp
neg
mov
jns
adc
pop
outs
cmp
stos
test
loop
push
dec
pop
dec
ins
out
loop
cmp
cdq
ss
test
xchg
call
cmp
nop
int
push
out
fadd
ja
loopne
dec
loop
cmp
les
and
imul
cld
aad
dec
xchg
adc
dec
jne
or
dec
mov
mov
jbe
(bad)
fild
add
int
ret
jle
lods
adc
shl
pop
fdivr
mov
xchg
jb
les
dec
jo
stos
lods
pop
jmp
and
or
cmps
jl
pop
inc
mov
bound
ds
sub
push
push
xor
lods
fwait
inc
mov
add
mov
inc
push
arpl
xchg
push
adc
jo
lea
cdq
and
fnstenv
mov
dec
lods
pushf
int
aas
pop
(bad)
stos
scas
(bad)
rcl
add
shl
gs
push
cmp
std
ret
imul
jg
out
push
add
sbb
xor
fbld
dec
lock
push
mov
jecxz
sub
push
xchg
push
ret
pop
or
ror
adc
fmul
pushaw
pop
out
push
bound
jecxz
pop
bound
jo
data16
jns
xor
push
sbb
(bad)
das
lea
jae
enter
arpl
repz
sub
sub
push
mov
pop
xor
out
je
out
popf
outs
arpl
jg
mov
cwde
cli
add
into
jns
popf
mov
inc
rol
push
(bad)
lock
push
sub
(bad)
je
iret
cmp
outs
les
add
jl
sbb
les
and
mov
add
imul
dec
jnp
sbb
dec
ret
aam
adc
dec
add
jo
lods
and
add
ins
and
das
xor
pusha
sbb
mov
push
aam
leave
push
jle
shr
neg
in
sbb
test
sub
pop
push
push
add
ret
popf
push
push
dec
jmp
ins
mov
cmps
nop
cmp
sbb
jae
movs
sub
mov
popa
pop
cmp
das
fistp
cmp
sbb
xchg
adc
mov
(bad)
or
daa
fisub
mov
into
popa
cmp
mov
jns
or
icebp
cmp
sar
push
data16
clc
xchg
stc
push
jl
mov
xlat
mov
aas
mov
jbe
addr16
cmp
(bad)
sahf
jbe
enter
or
xchg
(bad)
stc
int
rcl
mov
jle
pop
fisub
fiadd
push
cmc
leave
mov
ss
ss
adc
mov
fisubr
push
rol
pop
cs
add
sar
jno
push
xchg
pusha
push
pop
pusha
push
push
jp
sub
xor
cmps
in
cmp
in
push
aad
ss
movs
jbe
push
sbb
adc
cmp
clc
adc
mov
scas
adc
jl
shl
fnsave
mov
mov
rcl
jae
test
add
fistp
pop
and
aaa
or
ins
in
data16
mov
or
dec
rcl
push
jbe
lea
fwait
push
push
jno
push
das
lods
mov
rcr
jb
sub
sti
rol
sbb
dec
mov
in
dec
(bad)
(bad)
fst
mov
sub
retf
push
jmp
adc
in
stos
pop
cdq
jno
fimul
adc
sub
pop
mov
sar
jmp
mov
inc
jl
lds
in
inc
pop
adc
frstor
lods
jmp
xchg
jnp
dec
aam
out
cwde
push
lods
rol
add
fadd
enter
xor
pusha
sbb
xor
int
fcmovb
movs
rol
scas
jmp
outs
mov
bound
div
add
jmp
icebp
and
ins
es
add
adc
adc
loopne
ds
inc
xor
aaa
or
xor
and
push
jmp
fucom
xor
popa
dec
jno
shl
retf
ret
jno
jno
loope
xchg
push
test
cmp
test
rol
stos
data16
repz
pop
mov
das
sbb
jb
inc
sub
test
test
mov
or
(bad)
stos
lock
sub
hlt
sbb
lods
xlat
pop
inc
or
jle
jl
jnp
jns
retf
mov
fwait
arpl
pop
pop
inc
or
das
jp
push
mov
or
mov
pop
aam
int
inc
mov
inc
ja
adc
and
xchg
sub
add
sbb
push
pop
xor
sbb
dec
sbb
jl
dec
loope
cmp
mov
int
jecxz
push
push
outs
ds
ds
nop
stos
add
lock
xor
repnz
push
and
add
jmp
not
xchg
push
pop
or
adc
bound
idiv
jge
test
imul
movs
xchg
mov
mov
mov
fwait
adc
out
hlt
repnz
mov
outs
movs
or
test
mov
and
jae
inc
fs
retf
pop
mov
dec
es
iret
mov
cmp
pand
jecxz
das
push
inc
inc
scas
push
cmp
sub
push
addr16
ja
adc
icebp
cmp
retf
cmps
test
stc
and
adc
lods
jecxz
mov
xor
jns
bound
pop
adc
es
inc
cmc
push
mov
ret
(bad)
pop
adc
push
out
not
out
cmps
sar
fs
xchg
push
cmp
dec
hlt
cmp
cmps
dec
cmp
or
cmp
inc
inc
mov
in
xchg
popf
dec
test
jmp
sub
jbe
and
xor
test
fs
loope
rcl
xor
mov
jno
sub
xor
repz
inc
leave
mov
mov
adc
call
pop
retf
outs
sahf
scas
gs
fcmovnbe
mov
fcom
ins
mov
addr16
(bad)
call
enter
arpl
enter
rol
sub
int
mov
mov
mov
xchg
call
or
outs
jnp
fnstenv
add
push
add
mov
mov
mov
shl
xchg
dec
add
push
xchg
ja
cmp
and
(bad)
fsin
add
shl
repnz
or
lock
push
jae
xchg
sbb
adc
ror
jge
sbb
cmps
sahf
jmp
and
mov
fwait
loope
pusha
xor
outs
ja
push
cwde
out
das
test
aas
lock
ja
mov
mov
xchg
call
inc
mov
and
jecxz
cmp
nop
cs
xchg
sub
out
neg
push
daa
fcom
cmp
rcr
pop
push
int
scas
sub
push
mov
push
sub
ss
or
(bad)
cdq
test
les
sti
enter
inc
xor
movhps
lea
enter
pop
sbb
ja
fabs
test
xor
(bad)
in
add
mov
rol
hlt
in
mov
aad
mov
fisub
je
(bad)
and
and
dec
sbb
icebp
xchg
loop
lea
addr16
test
sahf
mov
and
sbb
hlt
xchg
pop
xchg
repz
push
out
in
cmps
sub
push
mov
ret
xchg
push
jge
stc
clc
pop
cmp
jo
jecxz
jb
rcl
dec
sbb
icebp
jbe
aas
jge
imul
sub
neg
lahf
dec
sbb
scas
or
retf
mov
mov
punpcklbw
cmp
inc
mov
cmps
push
ficom
fnstcw
jne
test
push
mov
inc
mov
mov
cmp
sar
add
xchg
xchg
add
(bad)
aam
movs
mov
data16
ret
gs
xchg
cmc
xor
js
add
dec
add
ins
mov
or
pusha
popf
or
std
in
std
fwait
or
and
xchg
mov
push
sbb
popa
xchg
js
inc
mov
push
add
inc
sub
jmp
inc
mov
jmp
gs
std
enter
pop
int3
out
enter
push
aaa
jns
sub
cmp
shr
jle
xchg
out
adc
xchg
aas
out
adc
fcmovnb
cmp
pushf
pop
pop
jle
mov
aas
int
sub
mov
jns
inc
add
sbb
stos
xchg
mov
sbb
adc
imul
mov
mov
mov
cmp
cmp
sub
cmp
push
push
mov
jnp
jg
stos
pusha
add
dec
inc
pop
clc
mul
or
pop
nop
lock
adc
xlat
cdq
push
shl
xchg
jp
sub
mov
sar
mov
dec
cmp
int3
mov
push
add
out
cmp
call
pushf
mov
popa
or
inc
and
cld
mov
loope
cmc
aas
cld
dec
mov
ins
add
xchg
ds
pop
add
hlt
pop
stc
clc
mov
lods
dec
xor
sbb
aad
sahf
mov
sub
xchg
loopne
pop
(bad)
push
nop
xchg
inc
rcl
mov
sbb
call
iret
(bad)
mov
stos
popf
inc
lahf
mov
data16
jno
jl
adc
xchg
es
mov
dec
gs
and
pop
es
lea
mov
sbb
and
scas
jg
mov
in
jae
outs
in
je
xchg
jae
pop
and
test
dec
inc
and
add
fidivr
cli
hlt
aaa
sub
mov
or
rcr
mov
push
repnz
sbb
push
sub
mov
mov
adc
mov
jno
fild
and
cli
fstp
outs
xchg
mov
in
lods
fmul
adc
les
icebp
mov
inc
aam
scas
sbb
and
or
dec
adc
jne
fcomp
and
mov
cvtps2pi
mov
sbb
jge
sub
xor
jb
sahf
lock
hlt
bound
ret
cli
gs
mov
dec
jle
out
xchg
repz
mov
or
movs
jecxz
hlt
or
cmp
inc
js
push
std
arpl
inc
popa
(bad)
adc
popa
frstor
out
shl
jle
add
lods
mov
repz
bound
inc
stos
shr
dec
popa
dec
mov
jbe
aas
mov
pop
lahf
dec
in
push
aaa
lock
cmp
cld
add
push
inc
in
mov
add
fild
mov
jnp
mov
xchg
(bad)
jge
lea
iret
jmp
cmp
add
sub
ins
shl
pop
pmullw
push
cmp
out
sub
mov
cmc
ror
es
sti
aam
cwde
das
adc
pop
cmp
push
cmp
adc
mov
dec
jnp
into
adc
sbb
lahf
vminps
xchg
mov
nop
mov
je
add
je
cmp
iret
jmp
pop
mov
push
clc
stos
out
ficom
cmp
(bad)
js
aaa
jnp
xchg
mov
jae
xchg
inc
cmp
call
pop
aam
mov
aam
adc
cmp
jno
mov
je
stc
add
add
das
mov
sbb
adc
stos
gs
push
mov
cmp
fnstcw
aaa
adc
sub
xlat
mov
retf
sub
xor
push
or
sub
sub
mov
inc
dec
mov
rol
lods
das
jno
cld
xchg
and
outs
sbb
add
test
cmps
movs
inc
cmp
pop
pop
call
ins
adc
leave
push
push
and
xchg
aaa
inc
iret
xor
ins
addr16
adc
mov
loopne
jmp
(bad)
xor
mov
mov
ss
xor
iret
pop
outs
sbb
jecxz
cmc
clc
mov
out
mov
test
aaa
sub
inc
lahf
fisub
or
mov
or
into
fs
pop
mov
adc
iret
clc
adc
xchg
jae
jne
sbb
or
dec
push
ins
dec
sahf
js
mov
aaa
dec
sar
push
stc
inc
(bad)
nop
add
mov
mov
cmc
pop
inc
scas
and
push
sub
add
ror
sub
jg
gs
fmul
and
ret
cdq
cmps
mov
shr
test
or
and
call
dec
outs
jl
jmp
xchg
cmps
jbe
shl
outs
lea
pop
push
lods
(bad)
js
mov
loop
mov
fst
sti
and
clc
or
clc
push
idiv
lea
ja
leave
test
xchg
int
outs
cmc
(bad)
in
cwde
outs
adc
clc
mov
inc
(bad)
jp
mov
in
xchg
xor
icebp
add
stos
int3
push
loop
(bad)
aad
mov
pop
dec
push
push
cld
cmp
jno
in
adc
sbb
scas
sahf
pop
mov
ins
(bad)
popf
sti
or
js
jecxz
inc
mov
aad
ds
arpl
push
enter
adc
xchg
pop
mov
sub
fidiv
(bad)
(bad)
(bad)
lds
div
mov
stc
xor
arpl
data16
mov
scas
icebp
test
leave
jmp
enter
add
adc
mov
pop
aas
inc
or
retf
pop
(bad)
push
mov
xor
rcr
xor
sbb
das
push
pop
dec
js
jmp
mov
jmp
in
push
(bad)
shl
stos
and
sti
dec
push
mov
retf
fdivp
mov
push
inc
int3
push
mov
icebp
cs
jmp
hlt
mov
pop
imul
pop
jl
push
mov
out
adc
scas
jae
loopne
xor
stos
mov
sti
sub
jg
ret
(bad)
sbb
inc
ficom
push
xor
cwde
sub
in
pop
push
in
mov
outs
aaa
inc
mov
jge
lods
rol
fwait
sbb
jae
mov
cld
(bad)
adc
sbb
rol
dec
fcmovnu
test
and
mov
lea
loopne
std
call
add
test
mov
fnstcw
in
fisub
stc
xor
mov
leave
cs
in
push
cs
jg
push
enter
jo
xchg
xor
ret
and
les
aam
sub
in
or
sbb
or
(bad)
aaa
sbb
mov
movs
iret
sar
xchg
inc
inc
rcl
mov
xor
pop
enter
push
nop
or
lods
push
movs
pop
mov
jb
in
jb
je
aad
xor
popa
mov
jno
gs
push
int
sti
fadd
ret
xchg
sub
or
lds
sbb
in
xchg
cmp
and
mov
imul
pop
mov
(bad)
mov
cmps
jnp
add
inc
xor
daa
out
adc
repnz
(bad)
(bad)
adc
sbb
cli
jae
sub
sub
ret
pusha
imul
fs
popa
or
push
pop
outs
push
es
pop
pop
adc
xchg
pushf
mov
lock
int
arpl
cmc
imul
pop
repnz
ffreep
and
aad
adc
shl
nop
adc
scas
adc
cli
loope
fwait
inc
push
imul
ret
loope
xchg
xchg
xchg
test
xor
repz
shl
xor
dec
adc
ret
pop
jne
sti
xor
jmp
mov
leave
leave
push
test
and
stos
adc
mov
inc
cmp
push
sbb
(bad)
cmp
mov
(bad)
iret
(bad)
(bad)
dec
xchg
push
push
(bad)
cmc
adc
xor
and
sahf
sbb
cmc
mov
and
jns
push
pop
enter
out
push
dec
je
sar
mov
lahf
or
(bad)
xchg
sar
add
mov
pop
mov
xchg
sbb
mov
mov
mov
outs
or
adc
mov
add
jae
sub
aas
ss
push
dec
aas
lds
popf
inc
cdq
mov
sbb
(bad)
pop
sub
push
sub
sbb
xchg
inc
imul
xlat
xor
ret
mov
mov
fadd
adc
cmp
retf
(bad)
outs
cli
ret
ror
ins
loop
lea
cmp
nop
sub
ss
enter
daa
stos
fadd
popf
mov
pop
cdq
dec
sbb
sub
in
sub
imul
mov
cld
sbb
and
mov
mov
cmp
xor
and
ss
mov
xor
xor
jne
adc
add
test
cmp
mov
mov
and
xor
cmc
pop
add
aad
and
push
dec
mov
mov
mov
push
mov
jb
jns
mov
call
sbb
dec
add
push
cmp
mov
sbb
and
(bad)
adc
mov
adc
adc
inc
jg
push
out
in
xor
int
jmp
xlat
add
xchg
sbb
ja
aaa
pop
push
retf
adc
lods
lea
adc
xorps
cli
dec
pop
movs
mov
cdq
cmp
jbe
pop
repnz
cli
jg
pop
nop
mov
jne
pop
cmp
cmps
aas
pop
pop
mov
cmps
push
mov
test
inc
xchg
fs
cmp
leave
add
and
(bad)
fld
push
jne
xchg
jmp
lds
jp
hlt
xchg
mov
sbb
div
jecxz
adc
push
adc
je
lahf
or
rol
pop
out
out
cld
jo
and
in
sub
aas
imul
sub
jnp
mov
push
or
push
das
pop
push
inc
cmp
dec
mov
jnp
retf
je
imul
mov
bound
add
inc
call
cwde
das
xor
pop
mov
mov
xor
add
loop
jmp
dec
cmp
addr16
cmps
jg
sub
fst
stos
push
cwde
xchg
push
lods
xchg
and
pop
xchg
fmul
stc
xchg
in
loop
xor
sub
leave
cdq
repz
xlat
adc
ja
cmps
ins
push
fs
inc
call
test
fldcw
and
sahf
sahf
pop
arpl
jp
movs
es
dec
mov
les
jecxz
push
je
xchg
hlt
jmp
in
sbb
fs
jmp
cdq
(bad)
dec
mov
add
add
xor
mov
or
stc
sbb
push
lods
fidiv
xor
or
xchg
push
and
push
jbe
push
mov
out
and
pop
cmc
push
mov
jbe
sahf
ficomp
cwd
lds
xchg
loopne
adc
mov
mov
lds
test
shl
out
js
cmps
sub
mov
data16
jo
mov
test
(bad)
arpl
sti
jg
rcr
dec
add
fsubrp
sub
dec
aas
xchg
inc
xor
imul
inc
sub
adc
clc
adc
pusha
mov
cli
call
int3
push
sahf
jo
ret
nop
lahf
dec
outs
add
lock
shl
mov
xor
outs
mov
sub
cmps
adc
inc
vpshuflw
(bad)
in
adc
and
aas
dec
xrelease
and
inc
ins
cmp
test
mov
jecxz
in
adc
sbb
add
test
dec
shl
jb
dec
shl
jb
shr
or
cmp
jbe
mov
rcl
lods
xchg
cmc
and
lods
loopne
out
sub
dec
int
test
push
xor
lahf
jecxz
loop
sbb
lds
jnp
outs
sbb
jmp
aad
(bad)
int
test
test
cmp
les
dec
sub
xor
test
cmp
xchg
push
icebp
cld
inc
je
imul
jo
xor
adc
or
cdq
mov
(bad)
call
test
retf
pop
inc
push
jle
mov
xlat
in
or
add
dec
push
out
xor
jg
int3
or
mov
xchg
or
cwde
pop
sbb
push
dec
mov
outs
adc
in
xlat
shr
dec
xor
inc
inc
daa
out
or
js
xchg
imul
mov
jp
out
jmp
xor
inc
shr
je
cmp
loop
(bad)
jg
mov
ja
rcr
jmp
mov
cs
add
xchg
xor
ror
push
sub
pop
clc
pslld
mov
je
inc
pop
fsub
adc
and
pop
loopne
push
inc
mov
cmp
loopne
push
sbb
cmc
fcomp
aaa
add
sbb
xchg
push
cs
js
movs
pop
jne
inc
call
pop
adc
movs
add
popf
dec
xchg
jg
xchg
and
in
adc
xlat
add
fcomp
jmp
pushf
fmul
or
pop
and
cmp
nop
test
sub
inc
mov
test
loope
lods
movs
xor
xor
mov
stos
loope
dec
sub
ret
add
mov
lods
and
call
enter
add
daa
dec
es
mov
shl
aad
leave
(bad)
push
sub
int
ror
dec
pusha
sbb
aas
in
ja
dec
xchg
lods
dec
jmp
xchg
daa
mov
cmps
pusha
hlt
jge
mov
xor
ror
and
jo
outs
mov
lds
out
adc
stos
inc
sbb
ins
hlt
xor
leave
mov
(bad)
xchg
dec
dec
mov
icebp
fisttp
xchg
push
ins
loope
lahf
loope
xor
inc
jns
sub
or
add
pop
adc
out
jbe
jmp
sbb
ja
jg
xchg
inc
sub
popf
xor
push
and
icebp
fincstp
retf
(bad)
sub
adc
daa
push
sub
fistp
leave
inc
pop
mov
sar
or
cli
lds
out
jle
dec
icebp
ror
retf
imul
push
rcl
adc
and
sahf
inc
jne
jg
sar
imul
cwde
sub
dec
pusha
das
in
les
icebp
movs
loop
cmp
fadd
inc
push
call
mov
les
sbb
sti
cmp
xor
ficomp
in
dec
in
mov
imul
add
fadd
cmps
test
mov
cmps
xchg
imul
fcom
shl
pop
lods
cmp
sub
movs
sub
sbb
or
or
cmp
fnsave
xor
imul
fucompp
mov
fimul
mov
je
inc
cmps
push
mov
mov
mov
xor
enter
scas
sbb
dec
inc
ret
fwait
adc
push
mov
mov
sub
ins
adc
mov
(bad)
xor
int3
pop
div
pop
movs
fldcw
cmp
pop
popa
xor
pop
inc
or
xor
jbe
mov
hlt
and
(bad)
mov
(bad)
jge
aas
push
fwait
ins
inc
shr
push
pop
fist
cmps
mov
or
les
pop
push
sahf
dec
icebp
stc
cs
mov
rcl
inc
in
pop
dec
clc
add
mov
jae
and
pop
aas
xor
pop
push
sti
jecxz
in
pop
push
inc
xchg
je
int3
pop
mov
lods
arpl
je
in
std
xor
arpl
xor
iret
pop
sahf
add
adc
aam
push
pop
pop
movs
imul
aad
mov
add
xchg
xchg
xor
mov
nop
xchg
or
push
rcr
loopne
adc
enter
(bad)
sbb
or
xor
sub
inc
addr16
ret
jbe
shl
cmps
jp
bound
out
pop
mov
xor
lahf
sbb
sub
mov
pop
inc
loope
dec
pop
push
jo
das
xor
mov
pop
jge
sub
je
sahf
fld
xchg
iret
dec
ins
int3
daa
leave
leave
inc
adc
cmps
or
mov
popf
pop
stos
nop
inc
test
xchg
pop
push
mov
fisttp
shl
push
fs
scas
jg
or
cld
pusha
xchg
shr
jb
cmp
stos
es
repz
sbb
into
dec
xchg
add
inc
clc
dec
and
jae
aad
jbe
lods
or
jg
mov
cmc
jbe
adc
imul
(bad)
data16
retf
aas
stc
sbb
sbb
outs
loop
(bad)
inc
(bad)
mov
push
sub
loopne
cmp
lock
neg
int
and
daa
cmps
jle
dec
dec
add
dec
loope
fiadd
jne
inc
dec
iret
out
lock
shl
dec
cs
xchg
jb
shl
shl
xor
add
mov
test
xchg
ins
add
dec
adc
(bad)
fidivr
in
repz
pop
das
pushf
mov
xor
jmp
iret
sti
dec
dec
pop
jl
adc
icebp
cmp
mov
fs
call
pop
mov
test
std
rol
pop
inc
inc
daa
xchg
push
loope
fnstcw
sub
or
sbb
std
pop
neg
stc
cmp
ror
outs
pop
xor
lods
pop
in
in
xchg
rcr
adc
mov
stos
retf
icebp
xor
arpl
test
lds
rol
push
clc
push
lea
outs
enter
fsubr
add
pusha
inc
and
lahf
pop
fstp
int3
call
stos
test
xor
mov
inc
loope
dec
(bad)
jl
fs
ins
rcr
xchg
stc
mov
pop
iret
ret
pop
test
or
(bad)
inc
faddp
mov
sar
retf
and
es
jp
call
ror
jecxz
ins
loop
or
enter
adc
and
inc
pop
add
add
push
sbb
into
test
mov
xchg
popa
cdq
cs
call
push
mov
adc
and
cmp
stc
fld
inc
movs
sbb
or
ficom
fwait
ss
xor
sub
sbb
popa
cdq
push
jl
jl
inc
out
(bad)
push
fcomip
xchg
dec
mov
imul
icebp
and
out
jb
dec
push
mov
in
push
fs
(bad)
fdiv
mov
add
or
mov
jb
jp
xlat
and
shl
jp
xchg
jg
ficomp
sub
dec
outs
adc
mov
dec
cmp
cmp
outs
std
out
pop
dec
aaa
outs
pop
into
inc
or
ret
cmp
mov
inc
pop
sbb
pop
sbb
dec
cmp
out
shl
cmc
mov
clc
retf
cmps
xchg
jmp
cmp
out
jmp
es
push
test
movs
dec
jo
mov
call
lods
ja
out
imul
push
mov
adc
ficom
adc
int3
std
xchg
sub
xlat
xor
rcl
pushf
jle
jae
cmps
into
or
sub
(bad)
cdq
mov
ins
jae
mov
sbb
fiadd
daa
xchg
int
in
cmp
ins
ss
daa
cmp
cmp
loop
mov
sub
sar
(bad)
jnp
in
mov
cmp
stc
mov
sbb
inc
xor
daa
test
retf
ret
outs
jmp
stc
outs
mov
and
sub
loopne
fist
pop
and
loop
out
add
push
(bad)
mul
data16
clc
js
mov
call
mov
mov
cmps
dec
iret
sub
outs
cmp
sbb
cmp
adc
lds
jmp
push
dec
lods
dec
adc
les
jp
mov
sbb
mov
stc
mov
bound
out
cmps
mov
mov
daa
sbb
(bad)
xchg
nop
shl
mov
data16
xor
pop
pusha
repnz
inc
mov
cmp
fistp
int3
cmp
push
xor
imul
pusha
jae
mov
push
mov
call
cld
in
pop
dec
fdiv
leave
cld
ficomp
and
pushf
add
inc
mov
sbb
pop
jae
mov
xlat
inc
fisub
mov
mov
js
mov
jmp
lods
test
mov
add
xchg
aas
mov
and
rol
add
cwde
cmp
jne
xor
adc
push
gs
pop
pop
fsubr
jmp
jno
adc
mov
loop
cmps
int3
xchg
mov
ds
add
push
cli
sub
sbb
xchg
idiv
std
sub
pop
sub
mov
xchg
sbb
dec
add
icebp
pop
xchg
jae
pop
dec
arpl
call
mov
xchg
hlt
inc
pop
adc
idiv
addr16
add
push
(bad)
xlat
jp
push
iret
bnd
outs
arpl
cmp
sar
adc
cmps
cmovno
add
mov
iret
enter
mov
xor
cmp
add
mov
dec
stos
stos
and
mov
sbb
push
cmp
cmp
rol
out
aaa
arpl
cmp
leave
adc
mov
lea
mov
add
cld
imul
ins
cmp
jecxz
mov
jno
std
adc
sbb
mov
pop
sub
lahf
push
ret
jg
test
xchg
cli
push
adc
retf
and
xchg
outs
adc
xchg
ds
xor
dec
lods
xlat
in
popa
sbb
mov
aaa
mov
stc
mov
inc
inc
mov
push
and
retf
mov
icebp
stc
sub
sti
out
ins
dec
jbe
enter
std
dec
pop
push
sub
xlat
sbb
es
dec
lahf
push
push
(bad)
outs
mov
xor
cwde
js
push
xor
std
fdiv
cmp
inc
push
mov
cmp
sbb
repz
sub
js
xor
xchg
add
ins
pop
mov
mov
pushf
sbb
and
outs
leave
rol
adc
jmp
pop
xchg
add
test
xchg
jecxz
(bad)
loopne
aaa
jle
arpl
pop
addr16
xor
iret
pop
sub
pop
int3
mov
lods
mov
(bad)
aad
shl
fsub
repz
cmp
jle
dec
mov
pop
clc
fmul
pop
das
mov
in
addr16
push
xchg
retf
xchg
xor
call
add
shl
dec
add
pushf
mov
mov
(bad)
xlat
adc
call
fcmovu
dec
ja
mov
mov
(bad)
and
xor
jae
or
popf
pop
and
cmps
lods
cmps
hlt
pop
cmp
mov
clc
dec
or
lock
and
ja
jmp
ds
mov
nop
jo
sub
pop
jp
loopne
sub
mov
push
arpl
ins
aad
ins
loope
push
mov
xor
lods
gs
jge
(bad)
aam
fild
mov
iret
mov
call
xchg
sbb
icebp
and
mov
je
pop
xor
xchg
iret
enter
mov
popf
mov
daa
call
scas
dec
fisub
mov
(bad)
test
cs
cli
jnp
dec
cdq
imul
sti
lods
or
test
or
icebp
add
pusha
sbb
outs
cmp
and
fidiv
outs
outs
cmc
jmp
mov
mov
pop
pop
popa
daa
fsincos
fisttp
test
adc
xchg
fs
test
push
out
cmp
inc
add
add
or
cwde
pop
mov
out
jge
movs
and
(bad)
xchg
movs
shl
push
dec
mov
mov
pop
retf
cs
fisub
pop
mov
jno
leave
(bad)
pop
sbb
cdq
sub
xchg
iret
fild
jge
shl
sub
xor
jle
and
cld
mov
out
sbb
fwait
mov
dec
adc
or
ds
repnz
(bad)
icebp
fimul
xor
or
sub
add
pop
popf
inc
xchg
xchg
mov
lea
xchg
cmp
dec
js
call
jmp
scas
and
or
mov
icebp
inc
pushf
or
idiv
mov
mov
mov
cmp
(bad)
pop
repz
jge
dec
xchg
int3
adc
shr
push
lods
push
mov
(bad)
shl
jb
aas
sub
or
imul
fs
fld
cmp
inc
xor
les
mov
cmp
adc
cmp
pop
cli
xchg
inc
int
call
imul
xor
test
push
xor
or
out
cmp
and
test
lahf
in
cmps
jecxz
mov
and
sbb
pop
movs
mov
xor
ins
call
sahf
dec
daa
add
or
fsubr
mov
cmp
je
loopne
sahf
ja
sub
pop
add
pop
mov
xchg
cmps
nop
lods
sar
pushf
jno
movs
outs
lods
data16
mov
inc
mov
or
xchg
call
lds
cmp
sahf
cwde
test
adc
loopne
or
mov
mov
mov
xor
inc
xor
rcr
stc
inc
push
inc
adc
inc
(bad)
mov
sub
mov
dec
xchg
cmp
add
stos
fsub
push
cld
cdq
pop
mov
mov
and
int
sub
adc
cdq
mov
push
jae
mov
test
sbb
ja
inc
rcr
xor
cmp
aam
test
shl
dec
mov
xor
lods
stos
pop
or
xchg
dec
aad
xor
std
and
inc
inc
lea
mov
lods
push
sub
pop
xchg
dec
retf
xor
ret
sahf
popf
add
pop
and
outs
dec
adc
daa
popa
jnp
(bad)
bts
mov
or
mov
mov
dec
xchg
jae
mov
mov
ffree
jmp
add
addr16
adc
mov
into
in
arpl
add
mov
daa
jmp
popf
sub
mov
nop
xchg
sahf
sub
push
retf
jle
stc
daa
ret
inc
arpl
xor
ret
sub
bound
sahf
das
sti
and
int
jno
dec
adc
add
mov
stc
and
mov
mov
daa
sub
push
fidiv
inc
or
push
inc
or
je
xchg
pop
mov
ds
retf
imul
mov
mov
pop
enter
mov
or
mov
clc
push
dec
sub
in
fistp
cli
mov
into
cmp
sbb
loopne
adc
lods
and
inc
push
sbb
xor
pop
inc
and
test
rcl
and
loopne
retf
xchg
sub
sub
sub
fisttp
lods
test
jmp
(bad)
lea
mov
test
stos
icebp
pop
sbb
push
mov
bound
push
sub
jne
std
xor
pop
pop
xchg
cwde
ja
push
mov
mov
xchg
lea
clc
hlt
mov
jae
push
sbb
xor
ds
sbb
neg
sub
call
in
lods
mov
push
arpl
mov
xor
iret
inc
dec
sbb
inc
dec
scas
cs
mov
dec
pop
leave
mov
inc
psraw
adc
icebp
loope
pop
push
add
push
rcl
push
retf
mov
movs
(bad)
in
aam
imul
mov
test
ret
fwait
xchg
retf
cmps
rcl
push
rcr
(bad)
pop
jp
fld
fwait
add
inc
(bad)
clc
std
sbb
cwde
xchg
retf
test
out
rcl
clc
xchg
test
inc
add
mov
jo
mov
add
out
mov
in
add
call
mov
mov
push
mov
test
ret
lea
cmp
outs
scas
es
and
fwait
cmp
xor
and
call
ret
jo
bound
pop
stc
cmps
cmp
retf
mov
pop
aad
in
sub
hlt
sahf
or
pop
stc
icebp
jp
inc
xchg
aas
fld
pop
jl
stc
dec
push
add
(bad)
loope
nop
mov
inc
mov
mov
and
pop
rol
sbb
jle
in
out
daa
adc
or
dec
in
adc
adc
and
sbb
jae
(bad)
mov
cli
xchg
dec
in
inc
push
scas
cmp
push
repnz
inc
leave
aas
inc
std
jp
or
jnp
sar
xor
cld
jg
cwde
and
sbb
shr
ss
cli
ret
sub
mov
push
scas
mov
aas
retf
cmp
add
cmp
inc
xor
mov
cwde
lods
arpl
imul
cs
adc
sub
aam
mov
add
sbb
cmp
test
xlat
mov
push
cmp
sbb
jge
int
mov
hlt
mov
gs
(bad)
dec
mov
cmps
(bad)
mov
push
adc
jmp
ficomp
test
icebp
lahf
adc
xor
call
mov
vmread
inc
mov
and
inc
popa
dec
jnp
rcl
mov
int3
pop
mov
mov
mov
push
push
aas
aad
xor
movs
loope
cdq
in
inc
daa
std
ja
cdq
stos
leave
fbld
pop
cmps
int
push
dec
push
xchg
into
repz
aam
or
popf
addr16
mov
or
cmp
push
mov
dec
push
pop
(bad)
in
xor
mov
add
jno
pusha
aad
je
mov
pusha
pop
inc
int3
shl
xor
dec
(bad)
icebp
mov
mov
int3
shl
inc
loop
out
call
mov
jns
and
cwde
sub
or
mov
inc
test
add
stos
mov
cmp
inc
xor
or
fist
fimul
cli
push
retf
dec
xchg
out
pusha
mov
pop
lock
loope
and
icebp
mov
das
adc
pop
pop
xor
cmp
mov
push
pop
stos
pop
xchg
push
sbb
retf
mov
cwde
xchg
mov
fadd
icebp
sub
jmp
fs
not
ja
mov
sub
pop
jle
int3
or
pop
jno
imul
cmp
mov
in
outs
lahf
push
xchg
xchg
jb
push
std
jg
paddsw
ja
add
jl
inc
test
daa
mov
das
push
fdivr
cmp
mov
mov
dec
jge
int
fdiv
xor
xchg
dec
sar
xor
cld
cwde
sbb
aaa
outs
repz
movs
jg
mov
and
call
stos
jg
ja
leave
adc
fnstsw
std
ja
arpl
mov
mov
movs
ror
(bad)
inc
cmp
xor
adc
movs
shl
pop
jmp
fstp
call
icebp
dec
xchg
or
or
adc
popf
shr
mov
pop
push
dec
pop
pop
push
pop
bound
dec
jl
out
and
sbb
dec
inc
pop
scas
xor
push
inc
arpl
push
mov
lods
push
ret
lds
sti
ja
pop
jbe
mov
retf
dec
es
mov
dec
xchg
stos
mov
xchg
inc
(bad)
fstp
or
mov
ins
mov
(bad)
(bad)
sbb
cld
dec
push
pop
bound
adc
jb
mov
movs
ins
sbb
mov
pop
test
xchg
cmp
leave
sub
mov
mov
inc
out
xor
lock
xchg
push
les
cmp
cs
retf
aaa
bound
cmp
stos
fdiv
(bad)
push
retf
push
jbe
xchg
inc
sub
dec
push
ds
mov
out
inc
and
inc
stos
stos
ja
push
dec
test
dec
inc
leave
sub
ror
pop
push
jae
pop
xchg
pushf
xor
xchg
lea
pushf
cdq
cmc
or
and
fst
or
jbe
test
inc
nop
lea
mov
sbb
and
xchg
sbb
out
dec
push
les
inc
push
cmp
push
mov
bound
rcpps
daa
xchg
push
icebp
adc
push
out
les
cld
mov
pop
not
sbb
dec
push
mov
sub
mov
cmp
shr
mov
cmc
pop
push
xchg
cdq
ss
ror
cmp
adc
cmp
xchg
mov
mov
test
or
cmps
mov
pop
xchg
xchg
mov
sub
iret
add
pop
sub
fwait
shl
test
fdivr
mov
xchg
add
jno
test
stos
adc
ret
mov
data16
cmps
push
cmp
hlt
and
sub
mov
hlt
or
mov
cmc
xchg
pop
xor
ret
(bad)
jmp
dec
ror
into
jmp
clc
xlat
mov
popf
add
sub
test
loop
repz
pop
jg
mov
loopne
test
int
lea
sti
inc
out
fcom
jne
retf
jae
vpmaddwd
scas
sub
inc
inc
arpl
arpl
in
inc
push
push
clc
cmp
clc
ss
xchg
push
scas
aam
pop
and
aad
arpl
sbb
lods
ror
pop
mov
cmp
rcr
adc
movs
or
adc
les
dec
fnsave
inc
cld
bound
xchg
imul
xor
add
pop
pop
add
movs
aad
lods
je
rcl
dec
pop
mov
pop
xor
loopne
cmps
mov
add
stos
and
fisubr
int3
jmp
add
lods
iret
sbb
pop
(bad)
in
sahf
jmp
jnp
pusha
scas
cmps
lea
lods
or
or
or
ins
mov
fidiv
sub
sub
cli
in
sub
pusha
arpl
pop
dec
loop
xchg
cmp
lock
sub
mov
retf
fild
jmp
out
stos
aam
sub
or
inc
pop
jnp
add
cdq
dec
jbe
and
or
out
push
cmp
loop
in
lods
pop
js
ins
adc
mov
xchg
push
mov
mov
xchg
pop
out
mov
jbe
jle
fadd
jle
imul
neg
sub
mov
fidivr
sub
(bad)
jnp
cld
(bad)
mov
cld
das
fdivr
lods
fbld
cld
and
inc
cmc
inc
fidiv
push
dec
pop
xchg
xor
leave
fisttp
js
sub
jmp
mov
out
mov
mov
add
cmps
or
xlat
scas
jle
sti
push
pop
popfw
push
add
xchg
imul
and
lods
dec
ret
lods
js
jecxz
push
pop
dec
or
adc
ret
mov
popa
xchg
mov
cmps
cmp
jne
mov
or
lds
jbe
xor
pop
movs
mov
xchg
add
push
fiadd
scas
not
xchg
shl
xchg
test
add
cmp
imul
and
jbe
pop
jle
xor
xlat
add
mov
jmp
call
sbb
out
pop
sub
test
cs
or
je
xchg
sub
test
jmp
mov
jmp
pop
pop
jmp
mov
fstp
or
retf
jmp
jns
ins
sub
push
shl
adc
sahf
retf
push
int3
repz
inc
jle
ds
icebp
inc
xchg
xchg
mov
cmps
pop
pop
push
inc
jne
pop
jmp
int3
mov
sbb
push
fst
cwde
stos
xor
arpl
imul
and
add
push
mov
xchg
(bad)
js
mov
and
bound
mov
es
jmp
ret
push
add
sub
shr
mov
inc
jge
out
xchg
aas
out
gs
mov
movs
in
dec
shl
icebp
stc
ror
inc
dec
ret
out
out
sti
cld
sbb
cmp
aaa
or
aad
test
lods
mov
in
mov
in
or
sbb
ins
clc
inc
retf
mov
loope
jnp
ret
pop
cmp
aad
add
movs
inc
repnz
ret
mov
or
adc
aas
pusha
fbstp
fmul
mov
aaa
mov
movs
das
test
cli
aad
popf
jne
fstp
inc
jp
or
push
add
(bad)
push
rcl
out
call
sbb
add
cs
lahf
nop
sti
jl
das
aaa
icebp
fiadd
call
mov
mul
lahf
jmp
cmp
fmul
mov
in
mov
xchg
int
xchg
je
movs
push
je
dec
test
test
pop
fidivr
ins
jmp
add
mov
pop
(bad)
ja
in
adc
pop
xlat
jb
psubd
in
out
jg
in
(bad)
jl
ret
into
mov
jg
push
inc
in
mov
sahf
mov
retf
(bad)
mov
inc
cld
clc
cmp
inc
jnp
stc
mov
jmp
enter
dec
mov
xor
jg
push
dec
pop
das
cld
fcomp
jg
(bad)
popf
or
inc
sub
repz
push
sbb
pusha
jae
jle
test
sub
das
pop
jmp
ja
jl
repz
pop
(bad)
ss
adc
not
or
pusha
gs
xchg
adc
sub
xchg
mov
sub
mov
push
jmp
cmp
mov
out
stos
push
mov
push
xor
call
lods
gs
inc
adc
inc
jecxz
jle
add
mov
sub
sub
loopne
ja
movs
push
mov
cmp
fwait
mov
mov
mov
pop
enter
xchg
push
push
in
pushf
xchg
fiadd
stos
outs
dec
mov
pop
mov
in
xor
push
xor
adc
sub
jb
mov
push
bswap
add
mov
sbb
addr16
imul
push
movs
fwait
sti
rdtsc
nop
push
jle
add
gs
mov
cmp
stc
lock
outs
mov
add
cdq
stos
(bad)
cmp
les
ins
dec
dec
inc
push
pushf
and
sub
(bad)
xchg
cmp
cmp
repz
rol
sti
mov
add
scas
inc
(bad)
shl
popf
int
dec
movs
jg
push
push
sub
iret
cli
in
cdq
out
cdq
cmc
and
div
inc
xor
fstp
mov
les
and
cmps
jne
iret
popf
movs
(bad)
jmp
ja
push
das
fcomp
jecxz
aaa
scas
mov
pop
ja
adc
test
pop
into
call
jl
out
mov
xor
(bad)
inc
mov
pop
(bad)
mov
jle
repz
xchg
xor
mov
ds
nop
mov
retf
(bad)
addr16
cli
imul
jg
mov
sbb
inc
das
out
lds
shl
fs
jmp
mov
and
enter
add
push
mov
ja
push
das
(bad)
cmp
jl
jl
jb
std
xchg
nop
or
xlat
jno
hlt
xchg
fld
cli
shl
jo
mov
pushf
sbb
mov
mov
(bad)
sti
sbb
(bad)
dec
mov
xor
test
gs
ror
mov
ds
lds
fdiv
mov
or
xor
sbb
xor
repnz
pop
push
stos
jp
jno
out
cmp
and
add
adc
les
or
sbb
mov
loopne
dec
jl
sbb
and
jecxz
cmps
arpl
jno
inc
adc
and
adc
adc
or
hlt
sub
aas
outs
rol
aad
pop
xor
push
repz
bound
sar
dec
inc
call
fiadd
inc
add
push
jg
sti
mov
and
neg
sahf
psllw
sub
or
clc
not
inc
mov
les
cmp
mov
xor
icebp
stos
loope
adc
sub
mov
mov
fnsave
adc
add
or
cmps
mov
mov
mov
in
cmps
mov
sbb
mov
pop
mov
lea
in
dec
cmp
movs
(bad)
mov
pusha
sbb
pop
xor
mov
jae
dec
test
xchg
int
sbb
inc
std
shl
and
fiadd
test
jo
popa
icebp
cmp
outs
ja
lahf
inc
and
in
repz
xor
or
jae
inc
test
inc
call
jmp
jae
es
mov
enter
shl
xor
xchg
pop
es
out
dec
pop
and
push
repz
pop
or
nop
test
push
cdq
clc
xchg
cmps
ficom
pop
or
lahf
aaa
repz
retf
(bad)
and
fnstcw
push
sahf
xor
jecxz
scas
dec
add
cmp
aas
cmp
jge
dec
xor
mov
jle
adc
bound
js
fwait
and
dec
mov
xor
(bad)
fwait
or
retf
jbe
(bad)
dec
adc
xchg
aaa
mov
jmp
ror
push
inc
aam
aam
mov
lahf
test
mov
mov
jb
iret
jo
lock
xchg
sub
loopne
(bad)
loope
xchg
sahf
leave
out
rol
call
pop
and
push
out
test
mov
mov
sbb
mov
sti
pop
push
leave
add
ins
mov
repnz
in
jno
add
mov
and
xchg
pop
sbb
or
pop
xlat
xor
shr
jns
cmps
les
ins
cmp
cmp
sbb
cmp
and
sti
iret
and
les
cli
inc
xchg
push
sti
xor
loope
lahf
mov
mul
(bad)
adc
inc
push
push
sub
or
jg
jecxz
pop
and
pop
js
mov
retw
jno
in
mov
push
std
ficom
jge
pop
add
xchg
rol
dec
(bad)
xor
mov
mov
inc
push
or
push
rcr
gs
dec
stos
and
sbb
mov
push
mov
pop
clc
fwait
cmp
shl
jmp
loope
ret
add
pop
mov
ins
inc
mov
movs
(bad)
lea
std
mov
lods
shld
(bad)
fst
jmp
dec
test
or
imul
mov
jb
dec
inc
add
cld
scas
(bad)
imul
pop
nop
jno
and
adc
rol
mov
add
retf
xor
adc
dec
xchg
cdq
mov
nop
push
pop
imul
add
test
adc
pop
movs
mov
cmps
popf
imul
add
(bad)
ficom
mov
pop
(bad)
lea
sub
scas
imul
out
pop
jne
jnp
mov
retf
dec
add
lds
and
xor
fcmovne
add
popf
jnp
in
pop
xor
adc
jae
cmps
mov
fwait
std
(bad)
(bad)
dec
test
test
cmp
je
stos
das
push
rcl
retf
dec
fidiv
sbb
sbb
fs
nop
and
repz
loopne
dec
pop
jnp
iret
lock
cwde
mov
sub
dec
jnp
scas
xor
xor
adc
jg
repnz
call
pop
cmp
call
lods
rcr
adc
loopne
int3
sbb
sar
imul
inc
fidiv
xchg
sbb
xor
les
movs
pop
xchg
sbb
push
mov
gs
add
cmp
aas
push
mov
(bad)
mov
ss
sub
hlt
cli
lods
pop
shr
enter
rcl
dec
inc
push
call
cmp
outs
sub
lods
xchg
not
mov
cld
ja
bound
stos
jnp
rcl
cmp
scas
mov
call
and
daa
leave
cmp
pop
jl
jmp
xor
inc
sub
dec
mul
fsubr
dec
xor
sub
mov
cld
push
lahf
add
push
daa
test
cld
into
cwde
xor
cmp
pop
cld
xor
aaa
ds
das
aad
dec
mov
jb
sti
and
xchg
imul
push
out
out
aaa
(bad)
outs
adc
out
mov
retf
ret
js
aas
push
xor
mov
pop
and
add
xchg
nop
jmp
jmp
and
and
mov
sti
xchg
rcl
xor
mov
cmp
jmp
pop
hlt
out
sub
movs
cs
mov
test
push
xor
test
(bad)
ret
cmp
call
mov
das
cld
cld
push
into
aaa
ins
int3
pop
dec
das
outs
mov
stos
aas
inc
jge
mov
or
pop
(bad)
pop
push
jmp
push
sub
xchg
mov
out
add
push
arpl
xchg
retf
leave
fimul
icebp
call
sbb
lsl
enter
pop
adc
shl
adc
sbb
cwde
dec
cmp
fwait
movs
bound
das
es
data16
iret
aas
rcl
icebp
mov
xor
sbb
xchg
jno
push
or
adc
sar
cmps
mov
xchg
(bad)
xor
xchg
sbb
adc
pop
adc
pop
lods
add
ja
push
dec
out
push
xor
mov
and
outs
push
enter
dec
xor
sub
lock
sbb
fidivr
in
nop
add
add
mov
dec
nop
adc
sbb
ds
mov
mov
js
hlt
mov
test
iret
push
fwait
sub
mov
jns
out
outs
pop
jmp
bound
push
or
add
(bad)
out
jecxz
lahf
push
ret
mov
inc
dec
inc
in
push
fistp
and
enter
dec
fcom
push
das
ins
add
icebp
mov
dec
mov
mov
idiv
jge
mov
and
push
push
shl
or
cmp
push
in
jmp
fs
or
pop
clc
lods
push
cmp
daa
leave
rcr
movs
fdiv
js
dec
pop
cmp
xchg
dec
sub
cmp
cmp
xor
push
aas
push
inc
inc
add
ins
dec
jbe
xchg
pusha
outs
adc
sahf
cmp
dec
test
ja
mov
xchg
test
test
lods
sbb
test
dec
out
aas
push
mov
hlt
icebp
aad
cmp
mov
hlt
or
(bad)
xchg
inc
xchg
aam
mov
and
jae
sbb
mov
ds
sub
xor
cmp
push
pop
ja
lahf
or
inc
in
push
mov
test
cmp
add
loop
sti
push
in
jle
push
(bad)
div
inc
adc
dec
adc
add
cld
pushf
sub
cmp
repnz
dec
jb
ins
ror
fwait
les
xchg
sbb
mov
push
imul
pop
arpl
loope
fwait
hlt
les
(bad)
mov
jecxz
mov
dec
mov
inc
add
daa
push
push
jl
dec
jnp
test
inc
xor
lods
aad
xchg
out
call
add
push
add
dec
jae
sbb
mov
dec
dec
outs
push
xchg
or
das
(bad)
mov
inc
push
cmc
cmp
xor
lods
mov
out
or
sub
aad
mul
bnd
leave
push
fistp
adc
fnstsw
pusha
jbe
pop
sbb
mov
pushf
inc
xchg
sbb
arpl
xchg
push
cmp
repnz
push
xchg
push
int
sub
loopne
ins
push
cli
daa
je
mov
call
mov
cmp
ja
mov
scas
dec
inc
cmc
movs
push
xchg
sbb
mov
xchg
nop
in
test
and
ficomp
outs
xchg
(bad)
ret
push
adc
inc
mov
sub
std
push
push
stos
and
sub
mov
(bad)
sbb
(bad)
adc
sbb
inc
mov
popf
rol
ror
xchg
push
popf
xlat
inc
aad
push
out
cmp
xchg
inc
movs
and
sub
jns
aas
stos
call
rcr
push
push
repnz
daa
inc
(bad)
int
sbb
cvtpi2ps
out
xor
adc
scas
cmc
sbb
mov
jg
ins
lods
pop
lds
das
sub
mov
aad
aam
jp
je
cmp
push
push
nop
jb
dec
jb
push
rcr
fldcw
out
test
or
jecxz
aaa
fnstcw
(bad)
pop
clc
jne
jge
mov
sahf
mov
aas
ins
out
cs
xchg
into
fcomp
push
retf
int
and
jnp
mov
out
xchg
in
adc
test
loopne
(bad)
cwde
adc
adc
xchg
test
out
pop
adc
std
mov
fisub
sahf
call
adc
mov
add
adc
or
scas
or
fisttp
popa
sbb
pop
add
xchg
(bad)
rcl
adc
fbld
jecxz
lods
fst
sar
mov
test
enter
daa
imul
mov
repnz
stc
stc
pop
cs
ins
jno
mov
mov
cdq
pop
clc
iret
aas
sub
fdivr
lds
mov
push
mov
inc
jecxz
push
cmp
retf
jns
add
mov
dec
rol
cmp
xchg
not
dec
sbb
inc
and
int
dec
jno
or
test
hlt
add
shr
aad
outs
inc
pop
dec
in
pop
inc
mov
int
lahf
mov
in
cwde
add
js
inc
mov
(bad)
scas
outs
inc
popa
jmp
mov
(bad)
pop
in
pop
add
daa
xor
and
and
nop
rol
jp
fist
dec
and
ret
test
fcom
jne
ins
loop
shl
push
jle
dec
dec
cld
ds
int3
out
push
fmul
xor
lods
jns
jno
or
dec
dec
mov
pop
sub
mov
stc
push
jo
mul
xchg
or
shr
jmp
jmp
out
fdivr
xchg
and
sub
dec
sub
pop
cmp
and
pop
movs
mov
stc
nop
cwde
mov
(bad)
fwait
add
sub
and
pop
sub
stos
fwait
mov
inc
xchg
arpl
pop
push
or
jne
mov
xchg
sub
adc
pop
jle
ja
js
movs
ret
int3
out
js
ret
push
mov
add
adc
xor
mov
movs
call
ja
jmp
jo
jns
cli
div
es
jmp
xchg
mov
cs
sbb
mov
sub
inc
stos
mov
mov
cli
mov
pop
push
adc
mov
iret
cmc
ret
sahf
add
or
ror
lock
xor
loopne
lock
fadd
popa
xchg
lock
pop
enter
ja
test
or
inc
push
jl
stos
test
fbstp
xchg
add
clc
xchg
mov
push
arpl
dec
mov
(bad)
mov
cli
sbb
or
movs
in
xor
xor
in
out
inc
ins
sbb
and
clc
push
scas
sbb
pop
jmp
(bad)
mov
cmp
push
push
cmp
(bad)
inc
loope
idiv
sbb
pop
cmp
icebp
and
sbb
imul
jnp
in
retf
fmul
(bad)
arpl
mov
mov
push
ins
(bad)
push
jns
shl
dec
mov
shr
cdq
xor
lods
mov
cmp
adc
call
jl
push
stos
adc
jnp
sbb
jne
loop
lahf
inc
push
std
daa
pop
stos
pop
sbb
test
or
retf
imul
xchg
push
fcomip
ret
lahf
mov
add
sbb
js
and
push
mov
xlat
stos
pop
push
mov
push
push
jnp
pop
lea
cmps
(bad)
out
push
xor
leave
adc
adc
not
imul
fs
fdivr
mov
jmp
shl
xor
dec
inc
popf
bound
fidiv
outs
popf
pop
aas
mov
xor
movs
int3
mov
cli
aam
rcr
(bad)
in
inc
push
cmp
leave
add
stos
or
ins
dec
sbb
scas
or
mov
xchg
ss
sub
shl
(bad)
sub
fxch
cwde
sti
popa
call
lods
xlat
mov
lods
out
adc
outs
jno
inc
jg
int
out
retf
push
outs
int
ja
push
and
adc
inc
dec
mov
cld
test
fidivr
push
jecxz
nop
push
add
cs
inc
outs
fisubr
adc
std
sbb
jb
(bad)
test
out
sub
das
call
xchg
xor
sub
adc
lods
add
popa
sub
xchg
jno
in
mov
cs
and
ficomp
test
scas
mov
daa
es
(bad)
ss
in
and
xlat
sbb
(bad)
pop
jmp
scas
xor
sahf
bound
mov
mov
sti
adc
test
sbb
sub
mov
pop
inc
clc
mov
mov
out
mov
pusha
(bad)
push
std
test
or
xchg
mov
fucom
add
mov
hlt
xchg
mov
xor
pushf
and
int3
enter
test
pop
ja
mov
xchg
(bad)
jmp
mov
(bad)
cld
mov
inc
inc
rcl
inc
lahf
add
mov
lods
adc
mov
cmp
loop
or
cmp
lods
sti
daa
imul
xchg
cdq
inc
sub
arpl
pop
fdivr
lea
jge
(bad)
xor
adc
jg
pop
xchg
jmp
aam
sbb
(bad)
ja
fisttp
pop
adc
inc
mov
pop
dec
(bad)
dec
mov
int3
cmp
data16
mul
ror
xchg
sar
xchg
repz
adc
add
cmps
push
fcmovne
jb
mov
je
je
cwde
ins
pop
cmp
add
inc
jge
scas
aad
data16
aaa
(bad)
out
ret
sub
pop
sub
fild
(bad)
aaa
xor
lods
sti
lahf
adc
pop
mov
test
jle
add
ficomp
cmp
pushf
hlt
and
mov
jl
jmp
dec
xor
aas
cdq
jbe
in
stos
xchg
adc
adc
loopne
(bad)
jmp
sti
jl
movs
call
adc
(bad)
xor
out
(bad)
es
outs
add
pop
mov
into
jp
mov
mov
(bad)
pop
pusha
sub
iret
nop
cmp
mov
jnp
push
cmp
je
mov
stos
or
and
cmp
(bad)
pop
outs
inc
push
xlat
and
pop
int
les
int3
cmps
inc
int3
sbb
sub
hlt
mov
out
add
sbb
movs
push
mov
dec
jp
push
lods
pop
ds
jg
clc
nop
pop
mov
jecxz
sbb
cmp
and
in
leave
mov
and
ja
and
popf
stos
sti
in
push
and
hlt
mov
jg
sbb
jge
add
ret
xchg
int3
push
sbb
loop
add
mov
adc
jmp
cmps
inc
push
cmp
dec
push
push
cmp
daa
and
fs
sbb
test
jo
jle
cdq
inc
cmp
adc
stc
repnz
int
dec
jmp
mov
in
adc
xchg
fucomip
ror
pop
rol
jbe
dec
sub
int3
test
(bad)
jg
repz
xlat
jle
aad
jo
jmp
push
jbe
xchg
adc
test
mov
les
jne
fild
cmp
mov
xchg
sub
sahf
popa
pop
mov
mov
mov
dec
mov
es
fisttp
into
and
lock
lock
cli
jmp
jmp
or
mov
xor
xor
test
dec
or
(bad)
out
scas
sbb
xchg
mov
jp
jmp
xchg
pop
scas
xchg
xlat
xchg
xchg
mov
js
push
scas
jmp
dec
retf
in
xchg
and
adc
xchg
ja
(bad)
ins
fldenv
(bad)
(bad)
sub
push
std
std
or
pop
mov
jmp
test
pop
das
mov
mov
ja
sub
cmp
inc
(bad)
pop
mov
inc
push
cmp
cmp
inc
mov
mov
(bad)
fsubr
out
out
pop
pop
paddq
pop
mov
repnz
ret
cmp
xor
adc
in
fs
push
fiadd
ret
or
maxps
arpl
loope
or
mov
in
loopne
(bad)
xor
inc
scas
xchg
jne
out
xchg
fmul
mov
sub
in
lods
sbb
adc
mov
sbb
sub
es
pop
rcl
es
retf
add
jns
jge
mov
out
and
adc
xor
sbb
(bad)
xchg
mov
pop
mov
inc
xchg
or
mov
adc
shl
out
xchg
and
std
xchg
test
inc
or
mov
inc
jbe
outs
sar
je
outs
ins
movs
dec
mov
js
cs
pop
ror
or
cld
xlat
call
rol
loop
mov
mov
xor
std
dec
rsm
xchg
mov
(bad)
and
stos
icebp
mov
xchg
and
lds
or
add
mov
ror
mov
sub
popa
mov
rcr
xchg
dec
push
popa
scas
in
pop
into
sahf
repz
jge
psllq
dec
mov
outs
fdivr
imul
lods
int3
iret
mov
xchg
aaa
ds
or
mov
sbb
add
in
gs
mov
jno
scas
xor
sbb
xchg
out
mov
ins
xchg
les
bound
(bad)
out
rcl
out
mov
outs
and
dec
(bad)
push
mov
ret
jnp
push
mov
out
push
push
retf
jmp
mov
xchg
sbb
arpl
daa
jns
jbe
pop
or
mov
mov
pop
out
ja
xor
int3
inc
fistp
popa
popf
pop
sahf
scas
cmps
iret
daa
add
cmps
adc
adc
pop
and
mov
pop
inc
rol
je
or
call
inc
movs
hlt
repnz
xor
call
call
sub
push
inc
jmp
stos
clc
mov
xor
dec
jns
jo
fimul
sbb
sub
into
inc
push
cwde
xchg
jecxz
mov
or
jmp
or
out
aas
fld
(bad)
in
push
jge
mov
test
inc
mov
xchg
inc
ret
cld
add
mov
rcl
fst
mov
test
push
xchg
sub
mov
sub
js
inc
xchg
mov
mov
dec
call
sub
pop
jl
inc
clc
adc
pop
in
push
or
in
(bad)
mov
in
sbb
enter
sub
cmp
ins
fadd
out
in
inc
adc
mov
pop
shl
lds
(bad)
pushf
and
xchg
ins
(bad)
and
neg
and
lea
mov
scas
jbe
mov
add
imul
jbe
repnz
ret
push
rcl
push
hlt
pushf
push
pop
sub
mov
cmp
pop
jecxz
cmps
sar
xor
xor
mov
ins
or
dec
sub
out
gs
into
fs
scas
push
push
cs
int
out
repz
jmp
mov
std
enter
clc
mov
imul
mov
add
ja
jae
ss
push
test
out
xchg
das
mov
xchg
xchg
shl
jmp
test
dec
adc
inc
inc
push
mov
int
xor
out
inc
adc
aaa
jecxz
dec
mov
jo
shl
adc
jle
int3
adc
xor
push
mov
popa
retf
xchg
inc
int
int
cli
fadd
dec
mov
(bad)
lds
pop
outs
les
jo
mov
int
leave
fadd
pop
pop
nop
mov
ftst
das
lods
or
xchg
les
jno
aad
add
cli
cmp
arpl
in
mov
or
sbb
mov
pop
push
dec
push
jno
push
pop
adc
gs
cs
out
or
pusha
cmps
loopne
cmps
inc
je
daa
fs
(bad)
sbb
cs
add
jmp
pop
jmp
imul
add
xchg
pusha
pushf
fsubr
dec
jo
in
dec
test
jbe
and
test
push
push
mov
mov
adc
pop
dec
xchg
dec
sbb
sti
push
add
in
xchg
mov
leave
sub
mov
inc
daa
test
(bad)
test
in
(bad)
push
test
cdq
xor
gs
push
aad
out
enter
call
push
(bad)
daa
inc
adc
dec
jecxz
stc
fcomp
mov
clc
test
pop
xor
jmp
mov
inc
cwde
and
data16
retf
out
push
repnz
daa
mov
mov
ins
inc
push
mov
cmp
shr
inc
fs
add
imul
cwde
and
fst
xor
outs
popa
int3
nop
popa
ds
sub
push
adc
sbb
call
ret
in
fld
mov
push
icebp
std
xor
sub
dec
jne
mov
and
xor
bound
cwde
retf
dec
adc
mov
mov
mov
xchg
adc
leave
mov
push
mov
dec
icebp
mov
adc
mov
loopne
xor
pop
in
add
pop
jg
sti
pushf
dec
out
xchg
add
sbb
xor
and
cmps
push
xor
ds
loopne
icebp
dec
mov
hlt
pushf
ins
jg
and
mov
jmp
loopne
fcomp
int3
fst
ret
clc
dec
sbb
cmp
push
mov
add
movs
mov
addr16
sbb
jge
or
scas
and
jo
and
mul
(bad)
xor
xchg
fisttp
(bad)
(bad)
in
push
and
les
rcr
add
jge
pop
mov
push
xor
inc
mov
dec
and
jecxz
ins
jae
sub
inc
outs
adc
push
sub
fwait
adc
xor
xchg
and
jg
or
in
hlt
pop
fsubr
imul
lahf
pop
pushf
dec
mov
stc
repnz
push
jns
dec
or
pop
addr16
ss
add
cmp
cld
stc
push
fldenv
loopne
arpl
ds
pop
sahf
cmp
jmp
add
jnp
fs
cmp
mov
(bad)
sti
aaa
adc
mov
(bad)
and
jnp
repnz
jbe
jne
mov
loop
lods
mov
rcl
std
movs
ins
sbb
fwait
not
lods
cli
inc
data16
ss
mov
push
xor
arpl
or
addr16
jl
(bad)
je
or
push
push
sub
movs
adc
lds
pop
pop
ins
dec
dec
push
lahf
pop
enter
arpl
push
shl
and
sahf
jne
and
ja
xchg
jb
cmp
dec
iret
fild
std
dec
(bad)
jge
popf
adc
je
dec
sahf
cwde
int
add
sbb
add
mov
pop
sub
inc
xchg
int3
fcom
rcl
imul
sub
pusha
in
or
xchg
js
(bad)
in
pop
mov
cmp
xlat
xchg
push
jmp
and
cmp
mov
push
xchg
mov
dec
xlat
ja
jb
(bad)
(bad)
mov
lock
mov
sub
(bad)
pop
add
inc
sub
arpl
cwde
pop
data16
dec
jecxz
adc
adc
int3
jmp
mov
sub
ins
mov
leave
mov
mov
ucomiss
push
std
sbb
fisttp
out
hlt
jp
mov
hlt
inc
inc
stos
mov
loopne
shl
(bad)
std
(bad)
hlt
jl
cmp
int
adc
int3
adc
sahf
les
sub
fdivr
sub
sbb
sub
sub
mov
jg
dec
fs
das
cmp
add
mov
lock
fwait
inc
pop
test
pusha
mov
xchg
mov
jle
ins
(bad)
enter
std
out
adc
dec
dec
push
mov
ror
(bad)
mov
lock
pusha
mov
xor
ja
xor
add
mov
repz
sub
jg
shl
mov
mov
cmps
xor
pushf
inc
lds
xor
mov
fdiv
lea
lea
sti
jae
leave
and
mov
push
xchg
adc
xchg
in
fucom
sbb
sub
pop
fistp
fdivr
retf
mov
adc
gs
inc
in
xor
rcr
ds
pop
add
out
mov
xor
jae
mov
out
loopne
jmp
mov
aam
jo
aas
xlat
in
mov
xor
mov
mov
mov
push
mov
push
add
pusha
and
adc
push
repz
sub
les
add
ret
or
repz
gs
xor
adc
dec
push
pushf
ds
repz
add
and
scas
jnp
lds
pop
mov
jle
jg
popa
imul
aaa
call
sbb
icebp
js
jmp
lock
push
or
dec
movs
ja
mov
shl
out
in
outs
test
push
adc
inc
and
sub
sti
scas
jno
sub
cwde
mov
inc
ja
mov
jp
and
or
and
daa
inc
icebp
adc
or
sbb
cmp
repz
xor
add
test
mov
jo
(bad)
mov
mov
or
sub
out
rcl
fild
mov
das
and
shl
xchg
lds
pop
cmp
dec
jmp
mov
pop
lds
shr
in
mov
push
adc
mov
push
inc
int3
daa
jecxz
sub
push
cmp
in
arpl
or
sar
xchg
in
push
and
loop
mov
test
fmul
jno
repnz
sahf
icebp
retf
mov
mov
(bad)
test
cwde
mov
cli
jb
inc
push
(bad)
mov
(bad)
bound
pop
lahf
mov
xor
adc
xchg
push
or
xchg
test
fwait
(bad)
sbb
inc
xor
sahf
xchg
push
aam
adc
pop
adc
dec
fiadd
out
xor
adc
stos
shl
(bad)
push
fisttp
push
lock
push
ins
xchg
push
xchg
in
cwde
mov
cmp
clc
add
es
jp
pop
mov
bound
sbb
sbb
mov
and
cdq
mov
mov
aas
(bad)
sub
and
sbb
leave
cmc
or
push
xor
cmps
repz
dec
shl
rdpmc
mov
xchg
sub
shr
(bad)
inc
pushf
pop
lods
call
xchg
and
and
and
mov
test
xor
jo
xor
icebp
mul
retf
inc
int3
mov
add
cmp
add
jmp
popa
jne
xchg
xor
adc
inc
icebp
dec
fisttp
fcomp
dec
pop
aad
out
(bad)
je
loopne
jne
push
call
ret
iret
dec
mov
xor
test
stc
add
cs
cmp
imul
or
jle
es
outs
pushf
xchg
fidiv
pop
jp
jp
pop
mov
cmp
adc
std
cdq
fwait
xchg
out
jmp
jae
lds
mov
xchg
mov
and
inc
pop
call
jmp
ror
shl
idiv
xor
cmps
dec
int3
adc
repnz
mov
movs
lds
add
daa
sub
rol
push
std
adc
mov
rol
push
out
mov
push
mov
jno
mov
cmp
add
inc
(bad)
stos
rcl
xchg
enter
cmp
sbb
pop
cld
out
sub
adc
pop
cmp
je
(bad)
pushf
pop
adc
add
je
or
xor
add
jbe
xor
or
sub
sub
jne
cdq
ja
jmp
jecxz
imul
pop
mov
fsubr
xchg
mov
mov
adc
jno
(bad)
fisttp
inc
push
sub
js
ds
(bad)
push
mov
lods
xchg
xchg
add
push
arpl
aaa
rcl
adc
jmp
stos
(bad)
imul
shr
mov
pop
xchg
scas
mov
test
cmp
imul
sar
bound
out
loop
sbb
mov
lea
push
push
pop
adc
mov
mov
lods
mov
mul
xchg
jp
out
xor
pop
dec
and
into
adc
leave
pop
in
aaa
xlat
stc
(bad)
jmp
stos
popa
sbb
inc
pop
dec
mov
inc
pop
(bad)
xor
lahf
or
inc
(bad)
mov
xchg
loop
xchg
sub
mov
(bad)
into
and
jb
dec
es
js
jo
push
xchg
ins
push
ins
xor
jnp
mov
in
push
mov
sbb
adc
stos
fidiv
in
jb
sub
and
push
xchg
or
push
push
xchg
(bad)
jb
jne
jl
nop
push
or
ins
je
mov
inc
shl
sbb
retf
xor
clc
call
das
adc
push
sbb
lods
aam
inc
call
fstp
xchg
and
sub
mov
dec
pop
pop
sub
outs
xor
lock
out
fmul
fld
pop
shl
ins
rcr
nop
dec
fistp
into
js
fiadd
(bad)
xchg
push
adc
jg
pop
hlt
aaa
pop
pop
jno
dec
cmp
mov
mov
add
mov
sub
pop
loop
push
sti
pop
mov
jbe
and
arpl
inc
pop
mov
shr
lods
lock
stos
test
or
jmp
xchg
out
push
fimul
push
jnp
aad
loop
mov
or
mov
inc
and
dec
jge
xchg
je
out
pop
pop
adc
jbe
imul
mov
shl
jp
xor
inc
mov
dec
out
sbb
jmp
xor
fld
xlat
add
mov
cwde
out
popf
clc
lods
push
push
fdivr
cmc
popa
jle
xchg
mov
stc
adc
lahf
lods
shl
in
jecxz
adc
mov
jmp
lea
jns
push
(bad)
jbe
or
retf
icebp
xchg
or
out
or
mov
pusha
ficom
or
jne
int3
int3
push
xlat
mov
sbb
add
(bad)
mov
jmp
shr
lahf
cwde
or
(bad)
test
jne
xchg
xchg
mov
mov
fcomp
mov
icebp
mov
gs
stos
fucomi
pop
or
xlat
mov
fdivr
je
daa
scas
mov
pop
ret
std
stc
push
and
movs
xchg
pop
add
mov
loope
xchg
fwait
mov
fisubr
call
mov
ja
loop
into
mov
xlat
pop
mov
sub
int3
jge
xchg
or
mov
dec
lea
cli
adc
cmp
or
shl
xor
fnstsw
add
xor
dec
xor
mov
sbb
mov
lds
adc
push
outs
call
mov
sahf
lds
arpl
adc
xchg
mov
cmps
jnp
retf
sahf
xchg
add
scas
into
mov
mov
sahf
xchg
frstor
or
mov
(bad)
std
in
adc
les
push
lods
imul
add
jb
arpl
aad
cld
pushf
cmp
mov
es
pop
nop
push
mov
retf
mov
pushf
mov
test
ffreep
push
jae
ds
out
pop
xchg
je
std
(bad)
push
dec
xor
pop
fwait
into
mov
mov
xor
retf
push
loope
call
jo
icebp
mov
call
hlt
out
and
add
pop
outs
pop
leave
push
aad
clc
call
inc
or
push
jge
call
xchg
stos
cdq
or
fabs
out
sbb
jmp
cmp
jnp
cmp
and
hlt
sub
in
push
bound
cmp
lods
test
repz
cs
loope
cmps
inc
cs
ror
mov
aaa
stos
lahf
xchg
pop
and
inc
mov
into
scas
cmp
fisttp
inc
fbstp
cld
test
and
jle
adc
dec
xlat
es
gs
mov
push
mov
adc
arpl
jge
scas
test
cmp
mov
inc
sahf
mov
mov
imul
in
xchg
dec
jp
lds
(bad)
and
or
ins
ss
dec
sub
out
fsubr
xchg
push
jne
(bad)
gs
dec
xchg
xchg
mov
dec
aas
add
fstp
arpl
hlt
cmp
sbb
loope
and
imul
mov
ja
mov
daa
dec
pusha
in
fwait
dec
je
(bad)
int
mov
or
push
or
inc
into
mov
dec
push
daa
add
mov
mov
dec
lea
push
dec
ficomp
fucomp
(bad)
mov
ret
xchg
sbb
xor
push
push
mov
in
fwait
sub
ret
pop
pop
xor
out
nop
lahf
mov
dec
lds
sub
jno
outs
stos
mov
fs
inc
xor
jmp
xlat
(bad)
aad
clc
xor
mov
push
xor
mov
mov
cmp
sub
lahf
dec
mov
dec
je
sub
inc
repnz
into
loope
ret
repz
push
sbb
dec
and
out
ds
mov
xchg
mov
mov
data16
hlt
popf
jae
sbb
add
repz
(bad)
mov
jg
imul
loope
pop
cmp
push
push
xor
or
or
xor
sub
push
mov
jmp
mov
aas
fistp
fnsave
hlt
jmp
imul
mov
aam
sti
cmp
rcl
mov
dec
inc
cs
int3
xor
(bad)
jb
push
cmp
aaa
add
or
and
xor
ja
int3
movs
adc
pop
xchg
and
inc
and
push
imul
jle
jmp
adc
sub
mov
retf
les
aaa
mov
dec
clc
sti
fisub
or
dec
(bad)
je
mov
adc
sub
lock
fwait
or
setno
pop
ins
(bad)
clc
mov
mov
mov
add
sbb
jmp
int
mov
(bad)
frndint
lods
push
push
push
mov
adc
pmulhw
adc
mov
daa
adc
jg
iret
and
icebp
test
dec
into
sbb
aam
aam
mov
push
ficomp
mov
repnz
jg
(bad)
jb
xor
jmp
mov
pusha
inc
cmova
adc
lods
into
mov
jmp
gs
into
cmp
push
imul
push
test
in
sub
xchg
mov
popa
push
daa
and
(bad)
or
popa
xor
js
cwde
ret
push
sbb
inc
xchg
mov
test
sar
push
cmp
sbb
mov
xchg
push
inc
test
pop
int
iret
stos
mov
fcom
jo
aad
fwait
push
jo
mov
stc
mov
push
(bad)
pop
jle
and
scas
adc
shl
push
mov
call
mov
add
push
add
(bad)
add
arpl
gs
xchg
cwde
pop
dec
retf
pop
xchg
pop
and
add
dec
mov
bound
sar
enter
sub
inc
and
xor
cmc
call
sub
es
sahf
icebp
ds
or
adc
sti
repz
and
enter
rol
(bad)
jmp
sub
mov
sahf
push
mov
dec
xor
jmp
mov
fadd
fndisi(8087
xchg
ins
int3
arpl
aad
in
sub
clc
test
or
fisubr
push
(bad)
popf
xchg
xor
fwait
jecxz
xchg
into
pop
imul
jnp
adc
in
inc
ret
inc
dec
lods
je
les
test
inc
adc
push
cmp
mov
push
(bad)
mov
clc
pop
ret
add
outs
stos
movs
fcomp
out
es
imul
and
test
call
popf
add
jae
imul
add
or
xchg
rcr
dec
icebp
xchg
in
fsubr
mov
movs
push
in
ret
mov
rcl
stos
adc
and
sbb
fisubr
cmc
jmp
push
jmp
movs
pushf
sub
pop
adc
scas
(bad)
shl
or
xor
or
outs
popa
shl
cmp
mov
xor
test
gs
cmp
adc
push
dec
imul
inc
jb
int
adc
and
cdq
mov
push
(bad)
cld
dec
push
push
and
and
cmp
ror
adc
mov
mov
mov
jb
mov
scas
mov
jmp
jne
mov
jp
dec
ins
mov
les
mov
mov
adc
je
mov
adc
mov
ret
and
dec
or
(bad)
mov
mov
ins
mul
pop
jg
jle
jl
int
and
jno
push
mov
xor
dec
mov
imul
dec
xchg
int
or
jns
sbb
inc
push
push
xchg
shr
imul
fcmovu
sahf
push
xchg
jmp
nop
sub
inc
xchg
out
and
call
jmp
(bad)
(bad)
cmp
add
mov
mov
stos
shl
arpl
lds
or
mov
jo
cmps
addr16
inc
inc
fwait
xor
fst
clc
cld
jne
imul
sahf
(bad)
push
nop
scas
shr
fsubr
and
jns
imul
gs
push
loop
cmp
push
cmp
xchg
push
loopne
dec
cld
and
sub
gs
popa
aas
dec
push
cmp
test
test
push
stos
pushf
xor
fidivr
retf
fs
add
xor
mov
cwde
popa
push
pop
movs
hlt
fsubr
mov
popa
push
dec
aas
or
ffree
add
stos
and
stos
xchg
loopne
xor
add
xchg
scas
xchg
loope
repz
outs
sub
add
cmp
inc
pop
test
ja
inc
cmp
push
fmul
lock
and
push
cmps
je
in
jecxz
iret
xor
sti
and
push
jecxz
inc
jecxz
sbb
fs
push
hlt
xchg
push
fcmove
dec
cmp
jg
or
test
mov
ret
and
jb
icebp
cmp
inc
sbb
sbb
sub
push
jb
dec
xchg
xor
test
cwde
or
lahf
add
xchg
fimul
inc
push
add
loop
outs
inc
out
sahf
jg
sub
push
jnp
mov
int
dec
daa
jno
lods
push
sbb
jmp
arpl
pop
inc
in
xor
mov
mov
leave
rcr
mov
xor
dec
fs
add
jno
hlt
fld1
fmul
js
add
push
mov
icebp
inc
and
sub
pop
mov
loopne
call
inc
ins
inc
aad
xchg
cmp
adc
inc
xor
cli
mov
inc
dec
push
push
ret
push
stos
(bad)
dec
sub
adc
test
pushf
shl
mov
sbb
in
cmc
dec
adc
sub
push
push
xchg
cld
mov
pop
test
loopne
ss
jmp
mov
cmp
out
pop
test
loop
cmp
dec
(bad)
adc
clc
lea
xchg
(bad)
pop
out
mov
fldcw
jmp
cld
and
shl
fidiv
and
add
or
adc
xor
mov
dec
dec
adc
cwde
or
cmc
ss
push
test
mov
stos
cwde
sub
inc
outs
or
push
push
fld
or
test
ficom
les
jmp
popa
dec
mov
cmps
fsub
pop
or
dec
dec
in
xor
inc
nop
jne
adc
leave
and
test
fidiv
dec
daa
in
mov
or
and
adc
sbb
and
push
ins
jb
and
adc
pop
mov
adc
adc
pop
std
outs
sbb
repnz
xchg
push
mov
pop
imul
test
add
pop
into
gs
cmps
push
(bad)
mov
aaa
in
test
stc
xor
cmp
cli
pop
mov
and
test
daa
cld
iret
sub
jnp
dec
mov
jge
fwait
inc
arpl
movd
inc
ins
(bad)
aas
inc
not
push
cmps
xor
loopne
jmp
ret
dec
jge
call
aad
pop
mov
mov
xchg
or
add
pop
jp
bound
ds
movs
loope
pop
xchg
and
or
ins
lods
jae
sar
js
jl
inc
sub
xor
sbb
ins
test
pop
ss
cmp
sub
in
scas
lds
aad
adc
push
nop
xchg
lods
mov
sbb
add
(bad)
icebp
fidiv
(bad)
retf
lds
mov
sub
ins
inc
dec
xchg
and
ins
cwde
xor
je
ins
cmps
mov
mov
repnz
or
scas
mov
dec
out
push
adc
test
pop
jae
lahf
std
push
xchg
xor
cmp
or
addr16
jp
neg
cs
jmp
aaa
sbb
adc
jg
xchg
lods
xchg
in
ds
mov
nop
mov
(bad)
outs
xchg
call
xor
outs
inc
push
fistp
jmp
cmps
pop
adc
dec
jae
in
in
mov
aas
out
inc
cdq
lock
call
xchg
inc
or
imul
mov
inc
mov
js
mov
lods
adc
das
pop
sbb
gs
cwde
adc
jl
(bad)
es
jle
mov
mov
retf
and
xchg
sar
sub
imul
sub
cmp
les
jmp
icebp
sub
(bad)
xor
mov
mov
pop
mov
dec
xchg
sub
lods
mul
inc
dec
jbe
sti
(bad)
pop
cs
ins
into
ja
jge
xor
dec
loop
daa
add
mov
cs
inc
and
sub
fsub
call
rep
sub
jb
push
das
or
xchg
retf
hlt
loope
push
xor
mov
pushf
in
cli
cmp
push
nop
lods
das
pop
mov
push
jecxz
bound
leave
xor
jecxz
mov
retf
iret
es
mov
mov
xchg
add
inc
xor
push
xchg
xchg
test
sbb
dec
xchg
pop
nop/reserved
inc
inc
or
in
xchg
ret
or
inc
popf
push
cdq
imul
ja
sub
pop
scas
or
lahf
loope
sbb
mov
bound
sub
add
or
adc
mov
xor
call
jecxz
sahf
movs
sbb
jbe
jle
pop
mov
xchg
xor
enter
std
js
cwde
dec
mov
and
mov
xlat
call
xor
pushf
sub
mov
jmp
les
mov
dec
stos
sub
icebp
pop
pop
adc
cli
sub
mov
ins
call
jg
in
rcr
test
pusha
int3
jns
ret
in
and
mov
jbe
sahf
(bad)
mov
dec
ss
and
and
sbb
inc
out
pop
sbb
add
dec
and
fcomp
nop
cmp
mov
jle
je
dec
sbb
fnsave
adc
jmp
mov
or
push
retf
stc
dec
loop
ja
cmps
lds
adc
jl
fstp
dec
cmp
or
mov
dec
lea
aad
adc
(bad)
push
sbb
push
sbb
xchg
lahf
in
jno
adc
mov
mov
and
neg
pop
fld
movs
and
mov
iret
repnz
inc
jb
add
aad
retf
mov
call
cs
fwait
xor
repnz
mov
mov
or
fcomp
movs
inc
data16
fwait
xor
in
fld
jns
mov
cli
retf
ss
rol
cmp
cs
fwait
sub
cmp
jle
fistp
shr
lods
pushf
lahf
sub
pop
out
js
mov
aad
adc
xchg
inc
inc
jg
mov
dec
mov
xor
mov
cmp
(bad)
les
jg
out
(bad)
int
xor
pop
ss
inc
dec
and
sahf
push
test
test
(bad)
lds
dec
jl
idiv
(bad)
rcr
iret
in
mov
jbe
ror
push
rcl
movs
movs
push
je
test
(bad)
xor
dec
sub
popf
lea
fild
mov
std
retf
lock
mov
jmp
jno
cmps
lock
push
push
popa
bound
ds
xor
hlt
sbb
in
push
aam
jmp
push
jnp
and
out
xchg
pop
inc
mov
cs
push
(bad)
les
inc
test
das
inc
rcr
push
stos
test
or
out
pop
adc
xor
stc
je
dec
push
dec
mov
sub
jne
add
or
aam
lods
imul
outs
sti
sbb
cmp
dec
push
mov
iret
cmp
movs
f2xm1
xor
push
lock
cmp
adc
mov
cmps
stc
and
call
mov
shl
test
cmp
pop
jb
mov
mov
dec
and
add
inc
dec
out
sbb
neg
iret
pop
fwait
out
(bad)
push
mov
mov
dec
ja
(bad)
test
call
dec
stc
dec
mov
dec
test
or
xor
in
das
aas
mov
mov
ror
pop
int
stos
sbb
mov
mov
ret
cwde
int3
ins
retf
pop
ja
fisttp
dec
xor
lds
mov
and
pusha
mov
fmul
imul
enter
fiadd
lods
inc
jg
sbb
jge
cdq
xor
aaa
movs
push
mov
cmp
mov
call
sub
shld
rol
cld
push
rcl
pop
push
fs
xchg
jle
enter
test
xor
test
je
lds
out
das
mov
call
add
pop
add
hlt
mov
xchg
loop
jg
dec
add
retf
sbb
jle
lods
clc
int3
jg
clc
scas
sub
shl
(bad)
test
cmp
xor
or
add
div
adc
retf
pushw
cmc
and
or
pushf
dec
outs
inc
movs
inc
sbb
outs
aas
mov
mov
cs
xlat
in
mov
mov
loope
daa
mov
rcl
xor
mov
add
mov
xchg
movs
or
rcr
(bad)
or
jmp
icebp
cli
bound
test
sub
push
jle
xor
inc
mov
jg
(bad)
(bad)
jae
jmp
push
xor
push
dec
popa
jp
jg
bound
int
or
outs
loope
loopne
add
sbb
add
(bad)
in
xlat
sbb
adc
dec
jge
mov
sbb
push
sub
aam
adc
sbb
push
nop
add
fist
cld
pop
sub
mov
lahf
jae
stos
repnz
push
sub
movs
pushf
add
movs
adc
in
pop
xchg
inc
mov
inc
movs
cmc
lahf
movs
mov
aam
sub
dec
inc
(bad)
(bad)
adc
out
xchg
ja
lahf
pop
mov
fstp
mov
inc
es
jecxz
mov
sub
test
div
mov
mov
pop
mov
ret
ror
into
dec
mov
inc
mov
ja
into
out
jnp
clflush
mov
push
mov
stos
or
push
stos
fdivr
enter
add
aad
shr
rol
std
sbb
sub
movs
mov
xor
popa
add
popa
loopne
cli
push
aaa
xor
and
sbb
push
jbe
mov
es
stos
int3
mov
jge
outs
mov
jp
fldln2
xchg
hlt
inc
call
push
(bad)
(bad)
cmc
aad
dec
mov
cmp
and
cdq
push
push
inc
jecxz
adc
inc
int
shl
xor
arpl
xor
in
xchg
and
sub
cmp
sub
aas
js
mul
es
mov
xor
jo
inc
xor
mov
nop
adc
jne
in
out
adc
fnstsw
jmp
dec
cmp
es
pusha
cmp
adc
add
mov
dec
sub
jb
rcl
jb
jno
push
jmp
lds
and
cmc
in
sub
dec
es
aad
pushf
add
or
int
xchg
arpl
jl
cmps
cmc
xor
(bad)
mov
sbb
mov
or
inc
lahf
inc
repnz
jge
pop
cmps
jmp
pop
push
movs
stos
jle
movs
out
mov
lods
inc
fs
out
lods
add
adc
inc
push
loope
es
clc
daa
jmp
mov
repz
enter
ror
dec
cwde
cld
mov
or
and
fdivr
jmp
adc
xor
xor
mov
adc
inc
xor
cmps
xchg
inc
xchg
movs
(bad)
idiv
cmp
fwait
test
adc
mov
call
fwait
loopne
cmps
into
mov
inc
ret
jns
jne
push
fld
jmp
mov
xor
(bad)
repnz
ja
adc
inc
xchg
js
mov
cli
call
sub
popa
frstor
sub
xor
cmps
sub
(bad)
retf
ins
test
std
retf
in
sub
lahf
or
add
mov
add
mov
das
mov
push
mov
fsubr
jbe
mov
in
stos
push
add
mov
leave
ins
push
inc
push
lock
xchg
ins
je
jnp
mov
nop
sub
ret
js
adc
or
jb
sbb
inc
push
outs
fstp
sub
cmp
xchg
dec
xchg
xor
popa
scas
xchg
iret
push
xchg
push
cmps
pushf
(bad)
xor
inc
daa
cmp
adc
ins
xor
mov
mov
add
sub
int
mov
pop
push
and
pop
mov
scas
adc
out
sbb
shl
fmul
sahf
sbb
cdq
popf
cmp
mov
cld
out
push
out
shl
scas
aaa
jle
add
ins
lods
call
jecxz
mov
cmc
fld
ret
dec
les
cwde
push
xor
in
inc
adc
pop
jnp
int3
adc
movs
aaa
fisub
xor
out
dec
mov
fs
outs
rcr
dec
cmp
add
cmps
dec
lods
out
jmp
jbe
mov
addr16
fnstsw
(bad)
push
xor
cmp
shr
xchg
sbb
fisttp
cld
imul
and
sahf
xchg
jmp
mov
outs
mov
mov
cdq
cmp
fst
out
xchg
jnp
mov
and
dec
inc
scas
jo
dec
enter
rol
and
lods
sbb
mov
lds
dec
leave
or
std
jnp
stos
pop
add
mov
cs
adc
mov
xchg
ret
or
sbb
leave
mov
jns
xor
cs
popf
xlat
movs
aaa
ss
test
js
ja
popa
mov
aas
xor
inc
test
sar
xor
mov
and
pop
mov
jbe
sub
and
int3
lock
cmp
dec
inc
ds
mov
test
js
dec
mov
and
push
xchg
jne
xor
ffree
mov
mov
loope
sub
out
pop
jmp
jbe
or
mov
lods
or
add
fimul
sbb
inc
push
push
ret
(bad)
(bad)
clc
mov
xor
push
jecxz
push
fist
dec
hlt
adc
fisub
mov
pop
jne
fwait
call
faddp
add
ss
in
or
mov
call
xchg
fst
inc
jle
das
xchg
sar
iret
mov
fs
pop
div
call
pop
add
fcom
mov
or
pop
inc
popa
dec
movs
adc
mov
loop
jecxz
aaa
pop
adc
and
xor
xor
sbb
out
movs
in
sbb
ss
sahf
js
fmul
fstp
push
push
mov
movs
shr
data16
sar
icebp
sbb
push
ins
fidivr
jne
fidiv
aas
mov
retf
or
add
outs
pop
nop
stos
mov
test
arpl
mov
fldenv
and
mov
loop
dec
cmp
adc
daa
mov
push
xchg
adc
inc
dec
or
or
rcr
stos
cld
retf
mov
pop
nop
mov
pop
jp
or
adc
cdq
inc
fcmove
add
push
js
fcomi
mov
test
fsub
icebp
sbb
add
gs
ret
jge
addr16
fisubr
enter
xchg
push
mov
cmp
cli
loopne
xchg
sbb
ret
aaa
in
xchg
fadd
sub
adc
stos
retf
push
sbb
(bad)
test
loope
popa
xlat
cmp
inc
shl
(bad)
jge
repz
aaa
add
dec
dec
push
cmc
dec
add
aaa
or
outs
sub
scas
cwde
dec
and
push
js
(bad)
inc
sbb
push
cld
shl
add
cmp
cmp
(bad)
jecxz
rcl
cmc
mov
ret
jne
gs
fimul
js
imul
loopne
push
add
pop
in
and
and
in
aaa
dec
jecxz
xor
or
(bad)
push
enter
mov
mov
push
das
outs
pop
cmp
xchg
mov
push
call
loop
in
pusha
scas
ret
xchg
xchg
mov
jmp
adc
es
mov
inc
push
ror
or
cmc
mov
loopne
dec
mov
sub
and
xchg
int
ss
loop
pusha
(bad)
(bad)
xchg
xchg
dec
pop
gs
push
out
inc
out
mov
sub
push
test
mov
xor
(bad)
mov
jge
sbb
hlt
jg
pusha
ret
shl
fs
lea
addr16
xchg
loop
mov
fild
or
sub
pop
cmp
adc
fadd
sbb
mov
inc
ret
addr16
in
rcl
ja
mov
sbb
add
ja
mov
xlat
mov
push
push
jnp
mov
sbb
cmp
mov
ins
shr
sub
xchg
jnp
mov
scas
pop
nop
neg
je
push
gs
arpl
pushf
(bad)
das
mov
push
inc
outs
ins
call
mov
retf
mov
stos
stos
sbb
or
(bad)
mov
gs
pop
mov
or
sbb
into
aam
adc
loope
fs
or
cs
sbb
push
call
pop
cli
cmp
test
(bad)
pusha
sub
pop
outs
cli
pop
sar
add
std
cmp
dec
jecxz
pusha
push
daa
mov
xor
xchg
mov
loope
cmp
sbb
frstor
icebp
lahf
movs
and
es
fmul
push
pop
sahf
aas
jmp
mov
or
aaa
in
or
inc
mov
or
cmp
cmp
sub
sbb
sub
rcl
xchg
icebp
leave
mov
test
inc
rcl
and
jge
rol
sbb
adc
mov
cmp
call
inc
ins
mov
jb
push
lods
fistp
mov
mov
movs
and
and
int
scas
aaa
aas
sub
pop
mov
out
xlat
and
stc
cmp
ss
push
push
mov
aam
xchg
pop
nop
imul
aas
aaa
pop
mov
dec
adc
repnz
cmp
push
dec
ins
nop
das
pop
je
int3
ret
mov
hlt
add
lea
dec
cs
cmp
jp
call
mov
dec
fld
retf
or
lahf
mov
cmps
clc
sar
inc
jecxz
ins
jle
sub
repnz
test
mov
jnp
in
add
rcl
push
pop
jecxz
dec
mov
repnz
fs
dec
movs
sbb
xchg
dec
rol
into
dec
cwde
out
add
push
fldenv
out
xchg
ret
xchg
xchg
xor
out
jbe
cwde
jnp
xchg
push
popf
icebp
sub
mov
mov
dec
sbb
sahf
add
stos
or
rol
ffreep
movs
dec
and
push
lock
and
push
xchg
in
push
xchg
mov
rol
fcom
or
jmp
es
cmp
mov
xchg
mov
(bad)
jecxz
loop
sub
jp
mov
(bad)
mov
add
mov
push
into
out
sub
ins
adc
mov
mov
cld
pop
stos
fistp
push
ins
dec
cdq
fsubrp
in
cmp
fs
dec
in
addr16
jge
jp
adc
and
and
xor
xor
xchg
inc
or
jb
aam
mov
mul
pop
loop
xlat
or
mov
aaa
fucomp
xor
out
push
add
mov
mov
sbb
sbb
push
jnp
adc
pop
dec
and
(bad)
push
pop
and
push
nop
retf
jb
push
sahf
push
lods
in
inc
imul
stc
cmp
sub
cwde
iret
scas
jae
shl
and
movs
xlat
pushf
mov
mov
inc
and
add
fdiv
shr
dec
cmp
cmp
js
idiv
or
fidiv
scas
sub
in
mov
into
adc
jl
test
sub
cmc
(bad)
call
sub
adc
xor
xor
les
jno
jae
cmp
sahf
add
ficom
pop
test
push
ror
inc
fnstenv
jae
leave
rol
sbb
pop
shr
pop
int3
pushw
sub
dec
xlat
xor
push
retf
outs
add
xchg
pop
mov
rcr
fcom
retf
clc
shl
es
call
cmp
loop
rcr
xchg
sub
test
jmp
push
jb
dec
mov
shr
push
jmp
sub
mov
nop
adc
movs
pop
pop
ficomp
repnz
ins
test
scas
outs
mov
mov
lods
sub
lahf
fsubr
mul
push
hlt
mov
cmp
lods
xchg
dec
popf
adc
bnd
and
push
data16
and
frstor
in
lahf
lock
test
xchg
pushf
mov
mov
sti
(bad)
popf
pop
mov
jnp
mov
jl
mov
sti
dec
and
add
xchg
out
imul
sub
add
cmp
mov
inc
xlat
mov
enter
fld
js
cmp
mov
jne
imul
leave
sbb
outs
mov
or
out
push
inc
adc
sbb
(bad)
pusha
add
loope
pop
popf
jg
loopne
mov
mov
stc
(bad)
fisubr
xchg
loopne
inc
cmps
jb
or
jmp
cmp
mov
dec
data16
(bad)
pop
arpl
fdivr
fsub
xor
pushf
loope
xor
mov
push
adc
dec
push
cmps
inc
add
pop
mov
sub
or
xchg
inc
dec
(bad)
mov
mov
or
push
not
lea
stc
sbb
shl
cmp
je
jge
adc
ins
cmp
push
cld
vsubss
sub
fistp
mov
int3
clc
pop
in
lock
aad
jl
mov
fidivr
sbb
jno
or
jp
mov
hlt
fs
sbb
js
popa
fistp
and
add
push
dec
not
(bad)
or
xlat
sbb
xor
or
sbb
mov
ss
mov
mov
mov
mov
fiadd
xor
push
cli
jmp
or
push
rcr
aaa
cmp
(bad)
xchg
add
jbe
mov
not
or
xchg
outs
xor
mov
mov
cmp
dec
dec
xor
push
aaa
neg
jmp
xor
cmps
icebp
jg
fdiv
(bad)
scas
mov
push
pop
ror
movs
jl
dec
jp
mov
inc
mov
(bad)
arpl
and
(bad)
cmps
lock
xor
scas
daa
and
call
xchg
mov
adc
push
cld
and
push
sub
ins
cmp
xchg
xor
inc
call
icebp
add
cmp
(bad)
je
ss
(bad)
sbb
jp
lods
movs
imul
mov
fadd
jns
or
mov
jmp
cmp
xchg
popf
dec
imul
push
inc
scas
std
iret
aad
push
pop
pushf
popf
xchg
imul
inc
sbb
adc
push
dec
jmp
push
test
das
mov
sbb
jge
or
adc
xor
clc
xchg
test
gs
mov
add
pop
xor
cld
sub
int
test
dec
popf
shr
scas
pop
cmp
push
std
cli
ss
cmp
push
or
dec
or
xlat
(bad)
sub
jge
ins
inc
(bad)
jg
jmp
xchg
shl
retf
jno
or
or
int3
cmp
enter
mov
shl
cld
pop
lods
(bad)
mov
int3
das
ss
hlt
mov
ja
(bad)
scas
push
mov
push
adc
call
add
sub
xchg
pop
push
jmp
movs
sbb
cwd
mov
add
cmp
hlt
xchg
addr16
shr
lahf
xchg
push
push
stc
jne
xchg
in
fisubr
or
mov
inc
and
aaa
ins
dec
sub
push
test
sub
cmp
mov
xor
xchg
inc
std
je
cmc
xchg
mov
inc
sub
adc
loope
fsubr
and
xchg
sub
xchg
mov
fs
rcr
std
in
pusha
cmp
dec
fsub
mov
iret
ins
mov
dec
pop
mov
inc
aaa
pusha
ja
sahf
mov
fdiv
mov
lock
mov
sbb
neg
jg
(bad)
xor
(bad)
mov
dec
cs
mov
or
pop
loop
out
pop
lods
push
sahf
jecxz
jmp
aas
adc
pop
push
scas
jnp
cmps
mov
xchg
adc
xchg
inc
adc
xchg
and
mov
cmp
mov
mov
xor
cld
rcl
int3
mov
pop
retf
pushf
push
(bad)
jne
cdq
jmp
jge
fidiv
pushf
jmp
xchg
jg
in
arpl
cli
add
cmp
scas
jl
pushf
sbb
cmc
mov
mov
sbb
fs
add
ja
pop
jbe
or
clc
mov
sub
cdq
mov
jl
dec
fistp
push
adc
and
stos
push
mov
loop
rol
rol
mov
fs
js
and
jmp
iret
int3
dec
(bad)
into
xchg
jp
shr
test
scas
inc
xchg
rol
or
dec
mov
xlat
cmp
or
cmp
pop
xchg
movs
pop
pushf
scas
and
pop
mov
dec
pushf
or
gs
imul
sbb
cmp
repz
mov
sbb
jnp
mov
sbb
jnp
jl
ins
pop
mov
pop
sbb
add
mov
inc
loop
mov
hlt
jecxz
add
dec
dec
les
retf
mov
shl
out
in
cmp
movs
or
shr
add
add
scas
in
add
sub
and
push
sub
mov
pusha
sub
xor
outs
xor
test
mov
fild
mov
test
stos
mov
sti
inc
movs
jmp
scas
jnp
ja
cmc
dec
pop
pop
dec
inc
cmp
push
mov
mov
jbe
xchg
ret
jns
dec
mov
pop
pop
push
xchg
mov
sub
mov
lea
pop
and
hlt
aas
pop
add
stc
mov
xchg
pop
into
test
push
add
adc
mov
bnd
lods
lock
xor
or
and
bswap
xor
or
cs
movs
je
xor
into
mov
fcom
ins
movs
mov
inc
data16
mov
and
or
ficom
es
fs
test
retf
lea
shl
cmp
xor
xchg
pop
push
add
rcl
data16
out
ja
je
add
fdivr
lock
pop
add
cld
jmp
shr
mov
addr16
mul
pop
adc
add
pop
js
ins
jge
rcl
(bad)
rol
mov
stc
arpl
push
xchg
cmp
mov
and
xchg
lds
test
hlt
scas
imul
shl
xchg
fnstenv
das
inc
ret
xor
xchg
test
cmps
cmp
fmul
jmp
inc
push
lds
ins
fnstsw
retf
cmp
cmps
ror
icebp
adc
dec
in
adc
or
mov
mov
jbe
mov
repz
imul
sub
jno
repz
aas
jl
mov
cmc
ins
cmc
shl
or
sahf
lahf
push
fwait
cmp
test
inc
ficomp
mov
dec
dec
fidivr
cmp
sub
mov
sahf
cld
push
cmp
retf
stos
(bad)
mov
lods
jmp
inc
icebp
xchg
sti
mov
and
xor
js
sbb
jnp
fdivrp
sub
cmp
xchg
inc
sbb
arpl
cmp
adc
or
scas
aad
cmp
mov
cmp
and
bound
adc
fiadd
sbb
adc
inc
lods
inc
mov
test
lock
jns
adc
imul
mov
das
mov
test
and
mov
clc
imul
scas
jle
enter
jb
or
xor
adc
add
sbb
push
fs
movs
xchg
inc
aas
mov
aad
fcomp
sahf
jmp
(bad)
jl
out
leave
(bad)
es
mov
enter
lea
lods
sub
shr
cmc
mov
pop
retf
ret
push
mov
mov
outs
inc
lock
aaa
movs
hlt
lods
mov
or
(bad)
push
mov
ins
sub
cwde
lods
test
xchg
out
jns
push
bound
aam
add
jae
arpl
test
sub
ret
aam
and
jecxz
inc
cmp
jge
or
imul
add
imul
lock
ins
dec
loop
mov
pushf
clc
mov
mov
or
cmp
jge
test
adc
daa
cli
jo
xor
sti
ins
retf
pop
adc
test
and
sub
test
sub
cmp
mov
sub
mov
cmps
scas
sbb
ret
cmp
ds
mov
jp
std
and
lea
cwde
sbb
sar
pop
in
inc
dec
aaa
xchg
outs
jle
fist
sub
lock
mov
pop
sub
stos
push
inc
sbb
jno
pop
sub
mov
aam
test
push
mov
sbb
loop
pusha
mov
bnd
lahf
pushf
clc
jbe
popa
mov
iret
inc
mov
jnp
xor
ins
test
dec
lods
cmp
in
cmp
dec
or
jge
inc
stc
mov
xchg
push
daa
es
mov
dec
push
mov
jmp
or
arpl
out
lock
out
out
sub
(bad)
cmps
xor
out
cmps
xchg
aas
xchg
stc
int3
or
fmul
add
mov
ret
mov
inc
cli
pop
and
xchg
or
xchg
stos
stos
ret
mov
sub
or
cmp
imul
movs
xor
stos
ins
rcl
(bad)
adc
jne
push
test
cli
push
inc
fistp
add
(bad)
fiadd
test
pop
stc
push
inc
mov
mov
fcmovnbe
pusha
mov
sbb
int3
loop
mov
loopne
bound
out
movs
pop
adc
(bad)
mov
mov
push
sub
cmps
xchg
pop
mov
add
sub
dec
push
stos
xchg
test
and
retf
stc
adc
ds
arpl
cmp
pusha
lock
xchg
inc
inc
(bad)
leave
stc
cmp
xchg
mov
outs
into
xor
or
popa
fcmovbe
fs
outs
add
(bad)
outs
xchg
jo
or
mov
stos
push
mov
mov
call
add
int
mov
xchg
jge
(bad)
enter
xchg
and
rcr
cmp
xor
or
lock
rol
fdiv
std
push
in
dec
push
pop
adc
push
das
loopne
sbb
fisub
mov
jg
push
push
inc
mov
scas
xor
mov
sti
sbb
in
pop
push
jo
cwde
mov
pop
jmp
test
push
ret
popf
pop
fisub
sbb
xor
jae
cmp
outs
sbb
cmp
sbb
into
aaa
push
les
mov
inc
mov
mov
pop
fiadd
out
sti
das
xor
outs
daa
mov
jmp
xchg
les
add
pop
adc
xchg
ret
in
out
outs
dec
dec
xchg
add
jg
stos
jne
mov
mov
icebp
mov
sub
js
xor
ins
and
mov
pop
sub
das
dec
int3
mov
jmp
in
jmp
or
rcl
xor
and
jge
ds
push
mov
or
push
jle
int3
jo
push
sbb
aaa
dec
stos
jb
mov
fadd
cmps
mov
(bad)
xlat
mov
(bad)
mov
and
pop
push
fdivr
cmps
addr16
int3
mov
ins
xchg
mov
sar
pop
fs
push
das
dec
das
mov
pop
jmp
jo
(bad)
pop
ja
ins
cld
and
xor
or
inc
jge
xchg
adc
arpl
cmp
js
mov
jl
test
mov
cmp
or
lock
add
jge
daa
inc
sbb
sbb
ret
xor
mov
je
jg
leave
inc
adc
addr16
test
pop
sti
fidiv
inc
in
je
inc
sahf
or
lock
jo
(bad)
cwde
sub
rol
pushf
les
loope
loopne
sub
push
jbe
movs
cld
test
sub
rdtsc
mov
shl
dec
(bad)
jecxz
sbb
sahf
sub
xchg
mov
inc
sub
jecxz
pop
dec
stos
xor
jns
fwait
ins
rcr
mov
ins
xlat
ins
das
jo
sub
mov
inc
pop
test
movs
loop
and
lock
out
ins
or
repz
pop
xchg
xlat
adc
call
push
call
ja
cmc
fidiv
test
sbb
into
sub
sub
xor
fst
iret
arpl
mov
pushf
or
adc
add
in
mov
mov
jno
sub
dec
ficom
outs
outs
cdq
in
cmps
imul
mov
jnp
cmc
cmp
pop
push
adc
push
jmp
out
jge
sub
not
xchg
aam
jne
xchg
repnz
stos
mov
add
mov
test
lods
jns
and
and
aad
xor
fisub
popf
dec
lods
or
in
mov
xor
dec
xchg
adc
cli
xchg
xchg
std
rol
mov
mov
push
pop
jl
xchg
push
add
adc
clc
test
xor
push
mov
adc
imul
xchg
fwait
(bad)
xchg
call
adc
icebp
sbb
jge
(bad)
in
sbb
icebp
or
repnz
ror
xor
xchg
push
loop
sbb
and
adc
jbe
jecxz
pop
in
es
loop
outs
out
loop
out
int
cdq
and
popa
adc
mov
xchg
fild
sbb
xchg
mov
sbb
jmp
cmp
jno
ins
retf
mov
pop
mov
sub
out
fld
pop
loop
fmul
imul
ficomp
xchg
loop
and
cld
sbb
xchg
jp
cli
lods
sbb
pushf
and
push
retf
cmps
pop
xchg
neg
dec
mov
jnp
add
jae
call
mov
and
or
pop
sahf
call
shl
push
add
lods
shr
push
retf
sub
ror
sub
mov
bswap
jo
mov
adc
lds
push
je
add
dec
out
and
pop
xchg
enter
enter
stos
inc
or
add
imul
sbb
popa
add
push
cld
xchg
push
je
jnp
mov
mov
jp
pop
inc
cmps
stos
jo
mov
jp
lods
or
je
pop
test
cli
shl
popf
(bad)
inc
push
sbb
adc
sbb
(bad)
retf
push
out
repz
push
imul
icebp
cmp
and
cmp
cmp
popf
outs
retf
enter
loop
sbb
cs
out
lea
shr
mov
loopne
into
push
jbe
mov
(bad)
movs
xchg
aaa
push
mov
aas
mov
pop
je
xchg
fld
call
sub
into
lods
ins
(bad)
push
and
jge
ins
ds
mov
repz
dec
sub
add
(bad)
sbb
or
imul
(bad)
mov
enter
fcomp
enter
je
aam
jp
bound
stos
gs
inc
mov
(bad)
xchg
add
xchg
xchg
jl
fdivr
in
push
fadd
mov
cmps
adc
fidiv
jne
pushf
repz
hlt
std
add
adc
pop
sbb
(bad)
ficomp
inc
fild
sub
(bad)
mov
fisttp
or
movs
or
loopne
fucom
test
into
cmp
mov
cmp
data16
pop
mov
(bad)
adc
outs
data16
test
mov
sti
pop
adc
mov
dec
(bad)
or
sbb
ins
jns
loope
out
sbb
sub
pushf
mul
clc
mov
fwait
out
inc
mov
sbb
mov
clc
pushf
imul
push
outs
push
dec
pushf
daa
mov
push
sub
retf
sahf
sub
or
inc
jp
pop
adc
sub
mov
das
xor
aad
inc
leave
fbld
push
push
mov
cmp
xchg
xor
mov
mov
xor
sar
sbb
pop
sbb
dec
xorps
push
stos
cmps
std
cmc
(bad)
neg
stos
cmp
jmp
ret
or
or
jl
jge
add
sbb
clc
stos
mov
mov
inc
movs
push
sbb
or
stc
dec
jmp
fmul
repnz
jne
in
inc
mov
mov
pop
and
(bad)
sahf
mov
inc
sbb
pop
mov
push
cmp
shl
xchg
ss
xchg
test
xchg
mov
inc
dec
fldenv
jnp
jno
stos
cwde
xchg
jl
mov
test
add
or
dec
rcr
add
xor
mov
or
sbb
lods
fdiv
sub
sub
inc
neg
sti
xlat
add
pop
popa
sbb
mov
je
xor
fwait
addr16
pop
ds
retf
cmp
(bad)
mov
push
add
ins
or
(bad)
jp
gs
mov
cmp
repnz
sbb
jmp
push
push
fwait
cmp
hlt
sbb
test
lds
sub
push
mov
(bad)
pop
out
push
shl
icebp
aaa
mov
addr16
adc
push
out
mov
add
jmp
mov
jno
lods
out
std
je
dec
dec
mov
xlat
and
adc
retf
dec
das
sub
jp
neg
and
xor
inc
pop
inc
dec
rol
imul
pop
cdq
xchg
out
not
aam
pop
outs
cmp
lock
test
gs
ss
xor
repz
dec
add
lds
pop
imul
sti
lock
adc
push
arpl
ds
movs
out
and
pop
fs
add
xchg
(bad)
jmp
xor
pop
mov
sub
xlat
cdq
imul
popa
add
xor
mov
dec
outs
mov
push
std
inc
dec
neg
jb
push
jns
ror
fwait
push
pop
push
test
sar
retf
sub
(bad)
mov
jl
pop
xchg
jne
cmp
outs
or
std
add
fstp
and
push
ror
and
into
test
or
in
sub
xor
and
jecxz
mov
imul
xor
jns
adc
sub
into
xor
mov
sub
jle
sbb
jp
in
mov
or
adc
stos
fidivr
nop
ins
in
pop
ja
sbb
fldenv
xchg
in
xchg
daa
mov
mov
ins
mov
or
test
pop
xchg
repz
sub
mov
sbb
or
mov
mov
bound
xlat
outs
push
mov
stos
or
mov
rcr
stc
pop
outs
mov
cmp
mov
sub
fstp
fsub
and
jg
dec
xchg
(bad)
bound
pusha
repz
cmps
and
dec
lods
repnz
mov
scas
adc
mov
pop
xor
pop
or
or
mov
les
sub
push
dec
in
add
mov
inc
fcmovnbe
or
mov
fwait
cmp
cwde
mov
retf
xor
mov
cli
fucom
and
jecxz
fistp
aaa
push
sti
xor
mov
jmp
mov
(bad)
xchg
sbb
mov
and
enter
mov
mov
daa
jne
shl
push
aad
ins
cmc
or
and
sbb
mov
and
lods
mov
jo
mov
pop
push
dec
out
inc
mov
movs
cli
pushf
cmp
pop
rcl
add
(bad)
psrad
fs
jge
div
jns
(bad)
mov
gs
xor
setnp
dec
ret
and
into
xchg
push
(bad)
xor
stos
and
add
lock
mov
adc
xchg
fisub
stos
xchg
mov
jmp
add
pushf
add
daa
sub
xor
xchg
pop
dec
das
inc
xchg
mov
pop
leave
enter
hlt
adc
lds
mov
icebp
adc
jl
or
jmp
inc
adc
rol
xor
gs
cmc
retf
sar
addr16
xchg
jae
mov
xor
jmp
push
push
jmp
test
sti
in
xchg
enter
jl
inc
jmp
in
xor
and
stc
xchg
arpl
outs
js
push
push
dec
sar
stc
nop
hlt
jmp
push
jle
stos
adc
std
jl
inc
in
xchg
(bad)
cmp
in
and
dec
lea
retf
mov
in
dec
mov
inc
pop
stos
push
loopne
dec
cmp
repz
mov
push
pop
push
jp
pop
dec
mov
add
hlt
jae
dec
mov
std
cmp
sbb
or
hlt
ss
ror
daa
mov
outs
mov
sti
dec
dec
push
fnstenv
lea
or
repnz
add
(bad)
out
mov
sub
imul
lea
xor
pop
dec
std
add
dec
nop
pop
push
ja
mov
or
inc
(bad)
push
(bad)
cld
adc
clc
sbb
je
fdivr
cmps
adc
gs
clc
jns
mov
jno
rol
jmp
nop
fisttp
adc
push
ss
dec
aaa
into
dec
push
std
leave
jbe
rcl
sar
mov
lods
test
ffree
and
out
mov
pop
stos
lock
lock
loop
out
xor
movs
fadd
ret
cmp
jmp
(bad)
out
adc
fs
push
test
cmp
pop
cmc
mov
inc
push
mov
sbb
test
gs
pop
mov
sbb
push
sbb
mov
dec
icebp
sbb
sub
and
mov
movs
shl
dec
es
fimul
fwait
cmp
ins
aaa
push
mov
push
xchg
les
repz
dec
inc
pop
nop
jns
outs
ja
stc
cdq
jb
jle
xor
mov
aam
jge
push
es
cmps
dec
in
dec
lahf
test
sti
loope
cmp
into
daa
call
jbe
mov
cmp
pop
movs
dec
jb
popa
clc
loop
pop
inc
xchg
fucomi
push
nop
aam
mov
pop
mov
(bad)
mov
jno
mov
inc
jp
fistp
in
pop
xchg
inc
dec
jp
mov
mov
xor
ret
xor
mov
hlt
and
icebp
jle
sar
sbb
sti
cs
ret
ds
push
pushf
inc
push
jne
lds
in
xchg
pop
cmp
mov
mov
dec
mov
pop
adc
stc
jl
pushf
je
mov
or
push
sub
jmp
pop
inc
jb
and
add
fs
adc
sahf
sub
cmp
and
dec
not
or
in
sar
mov
push
out
aam
dec
and
push
sbb
je
push
xchg
jne
loopne
and
(bad)
mov
push
xor
lods
sbb
shl
xor
xor
fld
adc
cmp
inc
fistp
mov
push
daa
mov
pop
nop
adc
xlat
sbb
std
or
push
mov
sbb
cmps
jmp
test
sbb
mov
jp
xchg
cld
inc
mov
dec
sub
test
adc
test
inc
jl
out
or
adc
and
add
clc
popf
jl
push
push
movs
sbb
int3
inc
test
fmul
sbb
shr
inc
psraw
cwde
sub
stos
mov
rcl
xchg
mov
retf
pop
ds
or
sar
jl
inc
or
retf
push
int
loopne
mov
push
add
fistp
mov
mov
pop
pop
pop
in
adc
pop
dec
pusha
pop
pop
pop
stos
ret
cmp
fdivr
jl
out
pop
stos
enter
mov
in
pop
pop
das
xor
jmp
add
jmp
add
aas
div
or
fistp
fisub
test
and
in
pushf
and
loop
pusha
pop
movs
repz
sti
ins
add
enter
aas
cmc
mov
xchg
jge
inc
cdq
div
arpl
je
lods
pop
cmp
pop
push
imul
stc
data16
cli
cmps
xor
pop
and
ss
sbb
sar
jnp
icebp
rcl
js
xchg
cwde
mov
sub
pop
xor
lods
or
cdq
les
pop
dec
mov
bswap
fsqrt
scas
and
shr
cmp
(bad)
aam
inc
xor
cmp
ror
mov
jns
shr
push
jcxz
aad
adc
sub
loopne
cmp
out
test
loope
cmp
sbb
lahf
mov
fsqrt
xor
je
retf
cld
sbb
(bad)
mov
xchg
cmp
cwde
adc
adc
loopne
lock
or
ds
pop
ja
inc
and
call
pop
(bad)
xchg
add
(bad)
cs
dec
repz
mov
push
sar
call
mov
hlt
jp
repz
pop
rcr
add
mov
push
outs
push
mov
jg
rol
bound
lock
add
add
ins
rol
adc
inc
sbb
pop
loope
xchg
push
mov
mov
inc
add
and
add
mov
push
shr
xchg
push
xor
push
xor
and
xchg
or
and
jp
clc
pushf
jmp
jno
jl
push
push
std
mov
jp
pop
lds
mov
into
sub
enter
sub
test
xchg
xchg
and
push
cmps
stos
mov
(bad)
(bad)
(bad)
xor
add
rcl
inc
aas
jno
inc
dec
ins
cli
pop
(bad)
mov
(bad)
imul
cmps
jbe
clc
int3
les
pop
fidivr
jle
and
aad
das
shrd
sbb
cmps
push
jmp
sub
push
mov
repz
xchg
xchg
cmp
jne
ins
in
sbb
sub
cs
rol
or
(bad)
dec
aad
jg
xor
leave
enter
jmp
jno
(bad)
or
movs
push
cmps
mov
jnp
sti
clc
inc
(bad)
aas
pop
cmp
cmp
push
mov
cmps
push
cmp
xchg
les
into
pop
das
(bad)
push
shl
push
xor
daa
and
mov
stos
cmps
popf
cmp
sbb
add
pop
mov
push
repnz
into
dec
test
mov
fsub
add
xchg
sub
(bad)
sub
cdq
shr
add
cld
cld
sub
je
adc
xchg
inc
sub
ds
lods
ret
and
mov
test
mov
mov
adc
xchg
cwde
js
inc
ja
or
dec
or
pop
dec
adc
inc
dec
xchg
adc
mov
xchg
retf
cs
cmp
ret
jb
sub
xor
xor
in
xchg
or
retf
mov
inc
mov
lods
pop
mov
inc
clc
std
pop
xchg
xchg
shl
dec
push
int
mov
std
je
pop
push
pop
aad
cmp
jae
rcr
fstp
std
or
xor
mov
push
dec
xor
sub
pusha
test
gs
rcl
cmp
(bad)
fs
outs
aas
mov
xchg
es
iret
xor
pushf
push
jb
jl
mov
jnp
stc
fiadd
mov
xchg
adc
dec
(bad)
(bad)
std
adc
xor
jg
imul
ja
lahf
call
xchg
pusha
ja
jl
ret
xchg
inc
xchg
push
call
scas
push
xlat
arpl
jmp
sbb
aad
aas
pop
rcl
jle
xchg
out
cmp
iret
in
push
pop
stc
mov
jbe
sub
jno
adc
leave
cld
jae
lea
mov
add
or
jae
in
enter
mov
dec
push
inc
cdq
or
jnp
jnp
cmc
sub
aam
pushf
add
nop
cmps
(bad)
add
fdiv
test
push
rol
dec
cmp
sub
addr16
mov
outs
cwde
ficom
(bad)
ret
pop
and
sbb
mov
xor
mov
mov
lods
xor
int
test
(bad)
and
mov
loop
iret
pop
xor
push
(bad)
push
fucomi
push
or
and
icebp
push
stos
xchg
ret
int
push
fisub
scas
inc
cs
aaa
dec
inc
sbb
jae
cmc
cmc
and
scas
imul
imul
sub
pop
aad
adc
xchg
adc
mov
adc
xor
das
repnz
xchg
sbb
rcl
push
leave
pusha
mov
pop
cmp
push
ins
adc
dec
mov
mov
sub
dec
jae
xchg
ins
push
outs
jl
xor
rol
jb
cmp
js
sbb
push
push
not
and
dec
in
add
int3
fist
lock
sub
mov
and
adc
pop
adc
mov
push
xor
shl
mov
or
fsub
int
dec
lods
cmp
push
push
push
cmps
sub
outs
mov
stc
mov
std
xchg
and
movs
mov
sub
push
outs
push
jb
pop
scas
lds
cmp
push
jecxz
fs
xor
aam
hlt
movs
xor
fs
imul
bound
(bad)
fs
cmps
cmp
fwait
jae
mov
push
cmp
dec
dec
into
pushf
cmp
jbe
mov
mov
push
jns
mov
push
or
xor
xor
repz
jp
cmp
outs
outs
test
sub
dec
out
mov
jne
dec
lods
mov
inc
dec
ins
lods
add
inc
out
std
add
in
lods
std
in
dec
or
pop
sbb
ds
push
sti
sub
xchg
fmul
xchg
test
fdiv
pop
and
pop
lahf
push
or
fidiv
sahf
ds
push
add
in
cs
dec
fs
mov
mov
loop
scas
xor
fnsave
dec
or
sbb
xor
adc
test
inc
push
movs
imul
pop
pop
fwait
jno
ret
lea
push
mov
jecxz
je
nop
add
into
xchg
jno
pushf
mov
pop
into
mov
test
inc
icebp
out
mov
aam
je
cmp
pop
clc
xchg
push
sub
add
movs
imul
dec
and
and
add
les
pusha
mov
pop
mov
sbb
xchg
jns
loope
push
aam
push
and
shr
sub
mov
data16
shr
push
idiv
inc
sub
push
xor
pop
fdiv
cmp
lods
adc
pop
inc
pop
(bad)
mov
xor
adc
out
into
push
inc
in
call
mov
jmp
and
jne
out
lods
cdq
fnstsw
cmp
jl
pop
sbb
or
in
(bad)
xchg
xchg
das
mov
xchg
push
mov
adc
mov
scas
pop
add
or
ins
pop
dec
push
mov
lock
mov
sub
mov
jge
mov
and
arpl
nop
add
inc
ds
or
retf
or
xchg
or
jge
jno
pop
xor
and
ins
push
stos
enter
fst
mov
iret
or
pop
imul
aaa
adc
sbb
ret
jl
add
in
scas
sbb
test
enter
mov
cs
fs
fs
pop
(bad)
jecxz
imul
mov
push
pop
fcomp
rcr
pop
adc
movs
ins
imul
cli
fnstenv
call
mov
adc
xchg
pop
mov
mov
inc
out
arpl
ret
jg
clc
sub
int
out
ja
mov
xchg
std
mov
xchg
jns
cmp
mov
push
shr
imul
lods
sbb
addr16
aaa
shl
ret
neg
test
arpl
retf
push
push
loope
adc
stc
das
mov
xor
pop
in
sub
mov
push
inc
(bad)
mov
cmps
popf
repnz
(bad)
aas
sub
out
xchg
pop
imul
pop
sub
movs
lock
pop
jno
sub
aaa
push
mov
mov
jmp
pop
push
bnd
ficomp
loope
in
xchg
(bad)
imul
imul
lods
aad
jmp
inc
dec
loope
nop
neg
lods
xchg
mov
dec
push
inc
jns
inc
push
xchg
test
pop
mov
jmp
mov
adc
and
movs
push
movs
cmps
xchg
addr16
ds
push
add
push
pop
mov
arpl
jmp
adc
and
push
fs
shl
ret
mov
js
dec
enter
mov
shl
arpl
xchg
adc
in
les
adc
imul
clc
push
movs
push
int3
arpl
rol
shr
xchg
mov
lods
retf
cli
inc
and
mov
outs
jge
mov
jp
popa
rcl
dec
or
pop
cmp
and
inc
cmc
mov
aad
pop
cld
leave
lods
fwait
xlat
or
sub
out
fimul
je
fnsave
add
sahf
into
je
movs
pushf
mov
pushf
hlt
xchg
addr16
fisub
mov
scas
jp
mov
mov
add
mov
jb
loopne
test
push
test
mov
mov
pop
add
pop
mov
adc
js
push
bound
cmp
pop
pop
lea
hlt
dec
push
lds
nop
adc
push
mov
int
es
adc
sbb
mov
mov
xchg
fcom
xor
(bad)
jnp
daa
test
outs
inc
out
or
mov
push
std
mov
or
shl
push
leave
pop
int
cmc
mov
ins
dec
adc
std
shr
pop
lods
shl
mov
int
inc
mov
xor
xor
mov
or
fst
mov
lods
mov
add
fcomip
xor
psubb
adc
cs
xchg
test
ja
out
icebp
mov
iret
rcr
movs
add
xor
mov
add
dec
sub
stc
and
lods
and
int
mov
pop
lahf
out
movs
out
push
movs
jle
sbb
adc
shl
dec
sub
sub
(bad)
xchg
jns
xor
std
xchg
jb
jns
jmp
(bad)
jo
adc
js
dec
adc
xchg
xchg
mov
and
dec
ret
jae
or
into
mov
clc
(bad)
test
and
inc
or
mov
je
mov
push
fdivr
inc
stos
cmp
jmp
pop
jns
xchg
psubusw
push
inc
pop
inc
fwait
xchg
sub
mov
es
(bad)
call
cdq
fiadd
push
cwde
jmp
stos
add
je
cmp
xchg
sub
int
mov
je
jg
adc
shld
fnsave
loope
xchg
push
mov
in
xor
push
dec
mov
xchg
es
retf
inc
push
sbb
test
dec
test
jge
push
push
pop
fs
sub
dec
pop
repnz
rcr
pushf
and
sub
iret
jmp
push
mov
shl
adc
mov
(bad)
cmps
in
or
cmp
jecxz
repnz
sbb
popf
ds
movs
pop
push
xchg
push
scas
sbb
cmp
mov
or
or
fstp
pop
and
imul
test
jle
add
push
call
cmp
adc
jmp
int
sbb
sub
or
sbb
test
mov
pop
mov
cmps
ja
and
in
outs
inc
mov
scas
fnstsw
(bad)
pop
sahf
or
popa
loopne
gs
das
into
aam
sahf
sti
inc
in
dec
dec
(bad)
fdivr
ror
sub
nop
in
push
sub
int
dec
ret
jb
adc
xor
push
out
arpl
and
pop
mov
mov
cmps
adc
pop
rcl
rol
sahf
sar
mov
call
scas
xchg
cmp
sti
sbb
sti
jae
pop
xor
into
mov
dec
cdq
mov
mov
dec
adc
es
xchg
mov
dec
cmp
es
mov
adc
or
dec
jmp
iret
dec
test
out
dec
(bad)
fist
and
stc
inc
retf
pop
add
int
jl
outs
popf
jbe
push
ficom
test
cmps
popa
aaa
dec
push
push
imul
xor
mov
ret
fist
jo
pop
out
mov
shl
mov
sub
inc
sub
sub
addr16
cmp
loop
add
xor
scas
mov
and
add
idiv
add
ins
xor
icebp
in
cmp
cmp
(bad)
sub
fdiv
push
cmps
adc
sub
mov
pop
cs
ds
hlt
sub
jbe
jp
imul
(bad)
icebp
outs
movs
xor
rol
call
fmul
pop
inc
jnp
iret
mov
add
sbb
push
(bad)
int
je
push
(bad)
xor
add
jl
push
fistp
fcmovu
aam
adc
retf
adc
es
jg
mov
sub
xchg
xor
neg
add
cmc
imul
out
sbb
dec
data16
in
mov
sub
mov
cmp
pop
mov
out
stos
or
test
xchg
push
xor
cdq
fwait
cmps
fisub
mov
push
xorps
jae
sub
retf
inc
popf
popf
sub
add
cmp
stc
aad
inc
ins
ret
mov
enter
retf
nop
(bad)
cmp
aaa
or
test
inc
shr
bound
or
push
imul
pop
push
jmp
in
add
cwde
sti
and
retf
push
ins
out
fidivr
ret
scas
xor
call
mov
add
xchg
and
nop
push
push
fs
jne
pop
aad
inc
in
stc
and
jae
into
push
daa
pushf
mov
movs
or
xor
test
ret
lahf
aam
mov
push
xor
sbb
lods
fstp
leave
pop
sbb
fsub
out
mov
mov
lahf
and
(bad)
adc
adc
test
int
xchg
rol
lea
adc
jbe
sbb
mov
jno
cmc
int
jnp
sub
(bad)
les
ja
adc
mov
aaa
xor
fldenv
pop
mov
or
sbb
adc
icebp
jp
push
icebp
xchg
imul
push
sub
and
adc
inc
mov
cmp
ret
push
xor
popa
mov
cwde
push
cwde
or
ja
pop
das
stos
pop
int3
ins
push
test
(bad)
call
daa
loopne
call
pop
and
lss
xor
sbb
add
dec
sbb
gs
push
jmp
mov
sub
imul
jb
or
outs
pop
aad
(bad)
push
inc
mov
add
push
sub
push
push
inc
cmp
cmp
cdq
xchg
mov
jge
dec
sub
out
xchg
push
inc
push
outs
dec
inc
stos
add
out
out
jmp
mov
mov
outs
mul
rol
add
jmp
sti
call
cli
cld
jbe
jno
enter
sbb
mov
sbb
iret
cmp
add
cli
stos
jle
test
jmp
fldcw
mov
mov
mov
dec
in
sbb
(bad)
out
out
or
xor
inc
dec
jmp
test
out
loop
fistp
inc
sub
inc
in
pushf
adc
sbb
rol
mov
test
adc
jmp
mov
(bad)
cmovs
push
add
fidivr
adc
retf
add
stos
mov
loopne
scas
imul
push
push
(bad)
sahf
movs
jnp
xchg
sub
movs
xor
fs
clc
xchg
add
(bad)
mov
je
jl
sar
adc
mov
jge
lods
(bad)
ror
or
test
dec
inc
xchg
pop
mov
dec
dec
lods
popf
mov
in
jmp
dec
pop
add
jp
fwait
lahf
fcmovb
jle
outs
leave
adc
add
add
repnz
movs
loopne
inc
pop
jno
jmp
repz
adc
pop
test
test
test
gs
in
adc
sbb
xchg
and
xchg
aad
and
repz
in
into
addr16
inc
jo
or
jnp
ret
ds
in
add
(bad)
loope
xor
mov
aas
push
or
fs
ins
js
cmovbe
sbb
jecxz
mov
adc
movs
(bad)
mov
jecxz
lods
cs
es
mov
ffree
movs
xchg
mov
mov
xchg
xor
(bad)
mov
lods
cmp
push
and
xor
cmp
ficomp
cmp
out
jae
fwait
lods
xchg
dec
cld
jp
or
pop
ret
mov
sbb
dec
xor
leave
pop
mov
pop
inc
xchg
rcr
jmp
dec
mov
imul
jnp
mov
in
cli
clc
add
push
out
int3
lea
add
js
cmp
ror
popa
pop
call
sbb
sbb
push
and
dec
sub
xor
scas
outs
dec
mov
loop
push
and
mov
jmp
mov
iret
mov
cmc
add
push
add
int
xchg
and
das
mov
stos
push
pop
pop
inc
cmp
jns
push
imul
in
pushf
neg
test
repnz
inc
out
mov
(bad)
cmp
lock
mov
out
xchg
enter
jb
int3
out
loope
and
int
int
dec
(bad)
aam
ja
mov
and
ds
sub
daa
outs
int3
test
xchg
cwde
arpl
add
sub
pop
out
xchg
jle
dec
or
neg
scas
icebp
push
xlat
sti
mov
fadd
sbb
jnp
inc
in
call
popa
mov
dec
shl
pop
mov
sub
mov
sti
dec
mov
mov
wrmsr
jbe
aaa
sbb
mov
fdivr
aaa
mov
cmps
inc
and
mov
je
jb
js
aam
sub
pop
cli
sbb
pop
arpl
sbb
push
jle
sbb
xchg
loopne
out
cdq
pop
rol
js
loop
mov
jne
in
inc
jmp
push
lds
popa
retf
icebp
jmp
inc
call
or
pop
dec
pusha
sub
shl
cmp
popa
xchg
mov
dec
dec
stos
rol
dec
pop
into
daa
ins
aad
pop
inc
mov
je
fild
cmp
das
jg
add
fisub
add
pop
pop
mov
mov
mov
xchg
sbb
dec
push
test
cld
jecxz
xor
mov
push
repz
cmps
add
push
inc
std
jno
out
mov
mov
rol
rcl
add
sub
cmp
loopne
sbb
add
jp
jb
pop
mov
pushf
(bad)
jmp
test
inc
movs
test
out
mov
aas
push
pop
jg
mov
mov
pop
add
pop
ret
inc
dec
mov
push
inc
daa
push
add
push
xchg
inc
jne
add
mov
movs
jnp
mov
pop
in
pop
sbb
jne
call
aad
cmp
sub
pop
cmps
cmp
add
mov
mov
and
push
pop
add
push
cs
sbb
pop
aaa
jle
outs
xchg
jg
shr
stc
rol
adc
fs
cmp
adc
js
cli
and
and
inc
into
movs
loope
add
sbb
xchg
adc
push
cmp
inc
adc
pop
inc
and
fs
add
adc
ins
rol
inc
and
push
ror
cmp
dec
dec
mov
fwait
ret
stos
pop
cmp
xchg
cmp
sbb
sbb
sub
fbld
mov
adc
cld
jo
add
call
int3
addr16
ss
jae
mov
and
fmul
mov
push
cs
daa
cld
nop
xchg
call
pop
test
cmp
in
in
cmp
add
mov
add
push
ins
fbstp
inc
scas
out
or
pop
sbb
(bad)
lahf
jae
lock
jno
sar
and
xor
xor
es
sbb
sbb
mov
xchg
xor
call
int3
adc
jnp
sbb
loop
mov
adc
call
jne
arpl
mov
add
mov
lahf
pop
mov
aaa
mov
(bad)
popa
arpl
xchg
pop
and
shr
push
sbb
xchg
frstor
jl
scas
mov
add
pusha
sbb
stos
pusha
xchg
out
cs
pushf
pop
jne
jne
cwde
push
inc
(bad)
and
push
xchg
loope
mov
mov
adc
popa
pop
cwde
and
sub
mov
cmp
repnz
cmp
test
cwde
mov
pushf
ror
mov
popa
movs
or
mov
mov
das
dec
adc
fdiv
not
jbe
ror
js
imul
push
fcmovnbe
adc
std
pushf
adc
ss
mov
mov
ds
aaa
fisttp
lds
add
test
jae
mov
retf
ss
loope
xor
setnp
call
sub
repz
xchg
dec
into
mov
loope
mov
sub
(bad)
push
cmc
or
adc
lock
mov
stos
mov
rcl
sbb
in
test
retf
repnz
dec
and
xchg
add
sbb
mov
je
jbe
xor
sbb
sti
and
inc
(bad)
arpl
fimul
leave
mov
ret
mov
pop
lea
scas
cmp
lods
add
retf
cmp
jl
shl
lea
add
aas
push
add
das
std
retf
cdq
shr
push
fcom
test
adc
lahf
inc
cmc
loop
xchg
fdivr
adc
popa
ja
ret
xor
push
cmps
ja
in
mov
aaa
inc
mov
xchg
dec
push
push
or
arpl
xor
sti
pop
and
cld
js
inc
xchg
mov
nop
inc
inc
and
jno
ficomp
xlat
iret
or
lahf
sbb
test
sbb
pop
add
lods
mov
fsub
sahf
fld
mov
dec
setae
outs
xor
jl
adc
mov
add
sub
addr16
dec
std
ds
dec
adc
xchg
ins
(bad)
movs
mov
pop
jnp
call
sbb
push
adc
add
dec
leave
jns
popf
jl
and
loop
fstp
sahf
push
dec
inc
add
outs
movs
imul
adc
inc
mov
xor
clflush
pop
cdq
hlt
lea
dec
push
mov
std
xchg
dec
in
push
cmps
arpl
out
inc
xchg
xor
sbb
mov
(bad)
stc
scas
xchg
xchg
dec
cmp
es
ins
or
mov
dec
xchg
add
sub
pop
jmp
inc
sbb
mov
sbb
in
call
dec
ror
lea
sub
push
mov
jge
mov
out
fcomp
test
mov
jecxz
mov
pop
sub
mov
fistp
mov
test
es
pop
and
pop
fcmovnu
lds
fistp
outs
dec
hlt
pop
aad
xchg
xchg
fisub
and
xchg
mov
in
xchg
call
bound
ss
ret
fadd
call
dec
or
inc
test
call
mov
cmp
mov
sub
rcl
mov
sar
movs
inc
les
xchg
movs
mov
out
aad
sti
push
out
push
mov
call
setns
ret
aaa
(bad)
pop
mov
mov
or
imul
or
jb
outs
rdtsc
ret
inc
fstp
rcl
mov
gs
shl
shl
dec
out
sub
aaa
js
inc
(bad)
sub
xchg
fidiv
and
mov
popa
pop
ret
das
inc
ss
mov
ins
fdivr
xchg
mov
ret
inc
push
adc
fld
daa
inc
push
leave
mov
sbb
or
mov
mov
ds
dec
sub
jbe
xor
cmp
cwde
int3
shl
ds
dec
in
mov
sbb
imul
add
das
cs
imul
repnz
cld
retf
mov
inc
pop
stos
pusha
pop
jp
fs
ins
loop
or
and
cmp
push
in
in
stos
sub
test
not
hlt
sbb
cmp
push
push
jns
mov
lea
mov
or
pushf
pop
and
jecxz
lock
or
inc
pushf
in
je
arpl
dec
(bad)
add
mov
(bad)
out
lods
jnp
mov
mov
bound
adc
and
add
mov
test
and
mov
sub
sbb
and
cmps
or
and
scas
cmc
xor
fldenv
xlat
movlps
fst
sub
arpl
jno
jmp
xchg
sub
push
fsub
fcom
adc
mov
sub
outs
cli
mov
fld
and
mov
dec
or
inc
fld
mov
jp
popa
fcmovb
sub
arpl
ins
dec
push
retf
xchg
in
les
clc
push
sbb
lods
repz
mov
mov
push
pop
mov
or
cmp
cmp
jecxz
or
sbb
sub
lea
dec
stos
adc
sti
mov
hlt
and
mov
xor
rcr
movs
cmp
xlat
sub
push
jmp
and
cmp
call
mov
cmp
mov
movs
lods
out
fs
sbb
pop
ror
jmp
mov
push
pop
inc
jge
mov
adc
das
jb
cmps
popa
(bad)
cmp
stos
push
and
retf
cmps
jb
mov
inc
dec
adc
test
repz
cmp
popa
les
mov
jmp
loop
int3
mov
cdq
jbe
fsubr
les
daa
mov
lods
retf
push
aam
dec
ror
nop
mov
sub
jmp
xor
or
adc
add
sbb
idiv
cmp
and
add
sar
sbb
inc
stos
in
push
pop
cmp
mov
pop
mov
stc
ja
and
and
popf
movs
loopne
and
js
sub
cmp
cdq
pop
out
enter
lods
pushf
imul
adc
femms
out
test
aaa
loope
and
pop
push
push
jb
loop
or
add
adc
adc
out
jmp
adc
pop
inc
es
in
mov
cmc
cmps
test
fisubr
pushf
jle
sbb
dec
jmp
pop
int3
push
jb
cmp
sti
mov
arpl
inc
inc
or
sahf
ss
es
fs
stos
lock
xchg
(bad)
xor
or
repz
inc
jmp
xlat
cmp
mov
push
out
xchg
fld
jge
pop
pop
mov
ds
or
or
sbb
ret
mov
add
scas
aas
xchg
inc
out
repz
xchg
sbb
jae
push
inc
xlat
xchg
add
xor
jbe
aam
push
mov
sbb
call
xor
repz
inc
dec
sbb
in
mov
mov
repnz
and
or
(bad)
pop
pop
fdivr
xchg
xchg
inc
scas
inc
mov
cmp
retf
xor
mov
xchg
pop
sbb
push
dec
mov
and
inc
mov
inc
jmp
push
sbb
shl
leave
sub
or
imul
(bad)
sbb
add
xchg
xchg
out
clc
push
iret
push
mov
out
pop
jp
and
cdq
repz
inc
mov
dec
push
jno
lods
add
sub
cmp
mov
cmp
js
dec
adc
adc
imul
push
pop
mov
stos
mov
test
fimul
adc
mov
bound
ins
ins
inc
sti
mov
mov
div
push
stos
pop
jmp
push
and
(bad)
fidivr
fs
out
inc
xor
inc
cmps
sub
out
mov
xor
jbe
add
out
mov
jmp
sub
fnstenv
jno
xor
jge
pop
or
jmp
bound
aam
and
dec
fs
adc
dec
es
cmp
jl
mov
pop
push
nop
pop
mov
adc
cmp
dec
push
sub
shr
shr
inc
dec
xchg
mov
in
cli
and
push
mov
mov
sbb
xchg
push
dec
jne
sub
ret
fisubr
xchg
cs
sbb
lds
or
push
ins
jp
cmp
pop
mov
ss
push
loop
lahf
dec
mov
push
cmp
mov
mov
push
jo
fisubr
mov
lods
jl
xchg
fimul
cwde
les
jbe
loopne
sub
movs
and
cmovne
xchg
shl
push
mov
in
je
std
or
in
sbb
jo
bound
out
pop
rcl
mov
mov
test
dec
jge
ins
mov
add
sbb
sbb
call
mov
stc
xchg
std
push
mov
xchg
sti
dec
xchg
jmp
outs
fild
inc
add
inc
mov
rep
pop
inc
dec
mov
jo
lea
xlat
in
movs
pop
inc
push
add
pop
fsubr
out
pop
mov
inc
add
inc
je
cmps
mov
in
sub
mul
jns
mov
and
(bad)
sbb
cdq
jne
dec
nop
mov
lahf
pop
sub
loope
xor
jb
sbb
adc
jmp
xor
pusha
sbb
push
dec
push
sbb
cmp
xor
ja
out
add
xor
pop
ja
and
fbld
gs
aas
xchg
push
pop
nop
mov
ret
jne
add
loope
cmp
in
xchg
stos
add
test
daa
xchg
and
jb
jp
inc
sbb
out
dec
into
or
jecxz
mov
out
test
into
js
cmps
push
pop
cmp
push
js
cdq
fadd
jb
xchg
sbb
cmp
out
cs
mov
jge
push
sub
stc
(bad)
les
add
jnp
retf
clc
sar
lods
xor
shl
sbb
jb
push
fidiv
push
jo
outs
or
and
cli
mov
mov
fisub
mov
xchg
pop
or
jmp
imul
and
retf
gs
movs
jne
fs
and
adc
fldenv
stos
into
push
dec
sbb
push
add
dec
adc
aaa
ret
and
or
addr16
mov
hlt
and
dec
data16
bound
jg
nop
sub
push
dec
jge
inc
inc
push
test
(bad)
(bad)
fimul
adc
in
adc
addr16
mov
pushf
mov
dec
ror
outs
sub
cmp
mov
jmp
xor
fldenv
shl
cmc
or
mov
or
mov
shl
gs
test
jb
stos
sbb
jle
int3
xor
clc
popf
(bad)
mov
and
xor
pusha
and
mov
(bad)
dec
jae
ds
aam
inc
ret
lock
into
sub
adc
mov
dec
mov
shl
mov
and
mov
pop
jae
mov
sahf
mov
mov
(bad)
mov
jo
mov
mov
mov
or
shr
mov
mov
dec
stc
sar
adc
fisub
mov
xlat
jl
push
in
add
xor
int
imul
clc
outs
aam
dec
ja
or
loopne
retf
test
sub
lahf
(bad)
mov
lds
add
pusha
test
mov
pushf
fwait
jae
ja
jno
cmps
mov
mov
not
jo
lock
outs
imul
imul
mov
shl
pushw
mov
jmp
(bad)
sub
pop
mov
mov
mov
xchg
shl
dec
jnp
out
cld
stos
jmp
mov
xor
icebp
jge
mov
enter
imul
xor
(bad)
(bad)
mov
cdq
and
cld
add
xchg
add
or
sbb
neg
sub
jle
cmp
add
xchg
and
and
xor
pop
mov
mov
sub
fadd
sub
loop
retf
and
es
imul
push
stc
and
arpl
(bad)
(bad)
vfrczps
cmc
gs
mov
and
ret
fwait
mov
jmp
and
dec
test
cwde
jg
jno
add
push
rol
and
mov
jl
push
je
ret
and
out
mov
aas
fimul
inc
aas
inc
xor
(bad)
nop
jbe
and
aad
jg
lahf
dec
sbb
clc
ret
fdiv
mov
ja
(bad)
lock
xlat
shl
add
int
jp
xor
je
adc
outs
imul
xchg
push
cmp
dec
stos
and
ficom
fwait
jbe
sub
cs
jmp
xchg
sub
loop
jmp
adc
test
sbb
shl
mov
push
std
lahf
shr
sar
add
(bad)
lods
test
mov
(bad)
jecxz
mov
daa
pusha
retf
pop
les
sti
iret
ret
push
outs
cmp
sbb
sub
push
call
sbb
mov
data16
test
fistp
dec
in
cmps
dec
mov
sbb
lock
rcr
repnz
sub
faddp
push
dec
outs
test
dec
mov
retf
mov
pusha
add
arpl
mov
adc
sti
adc
sub
mov
test
call
xchg
xlat
push
(bad)
mov
cdq
cwde
int
mov
out
adc
and
imul
(bad)
jle
mov
jo
in
dec
adc
and
mov
mov
push
std
mov
push
sub
cmp
push
xor
pusha
mov
push
das
mov
fdiv
inc
ins
(bad)
shr
or
add
data16
cmps
xor
mov
push
pop
and
adc
inc
dec
mov
xor
jg
sub
hlt
rol
push
inc
out
lahf
repz
pop
sti
dec
dec
arpl
aaa
or
dec
sub
xlat
fs
ss
stos
bound
sbb
add
cmp
sub
mov
nop
pop
ss
test
aas
in
lods
add
retf
add
dec
jae
mov
and
sub
jns
push
push
or
jmp
xchg
and
cmp
adc
and
jnp
and
pop
jg
adc
jecxz
adc
push
out
jp
(bad)
push
movs
add
sahf
mov
pop
pushf
mov
rcr
(bad)
jmp
cmp
out
pop
xor
xchg
gs
add
add
jb
mov
push
fldl2t
nop
adc
cwde
pop
lahf
mov
sub
icebp
mov
std
ins
sahf
and
mov
enter
mov
pop
lds
in
inc
add
fmul
inc
cld
sub
sub
out
xchg
lahf
sti
in
(bad)
jl
adc
into
sub
cld
xchg
cmp
xchg
add
or
out
nop
mov
or
icebp
das
pop
pop
dec
mov
pop
leave
mov
xor
push
xor
adc
sub
push
movs
xchg
fisubr
add
adc
repz
xor
gs
pop
test
jle
ja
mov
psubsb
mov
sub
stc
or
add
sub
imul
mov
test
int
int3
xchg
(bad)
mov
je
mov
fisubr
fcomp
mov
jo
loopne
retf
aam
mov
push
mov
pop
mul
(bad)
in
shl
mov
mov
xchg
sub
(bad)
(bad)
sbb
inc
mov
push
dec
rol
(bad)
xchg
retf
xchg
fdivr
add
xor
mov
xor
pop
add
pushf
(bad)
scas
outs
mov
ret
cld
pop
out
(bad)
hlt
retf
or
mov
aas
add
(bad)
sbb
leave
dec
adc
lods
cs
pop
and
push
movs
xchg
inc
pop
push
inc
inc
and
sub
lea
sub
xchg
xchg
rcr
mov
jne
xchg
sub
mov
movs
or
or
cmp
scas
cmp
adc
mov
pop
push
lds
loopne
mov
sub
stc
aad
aas
dec
push
mov
inc
daa
fld
push
aaa
pop
fwait
inc
fs
sub
gs
pusha
sbb
sub
jecxz
push
out
xchg
mov
lods
mov
das
jle
(bad)
cmps
or
jl
xlat
jg
adc
push
shr
(bad)
ins
cwde
repnz
inc
rcl
sub
jne
fnsave
loopne
fdivp
push
pop
pop
add
enter
xchg
push
xor
loope
mov
out
ret
jbe
lods
sbb
clc
push
loope
dec
(bad)
js
mov
dec
fidiv
repz
push
jl
jecxz
mov
ja
into
sub
out
xchg
add
cmps
mov
sti
int
pop
sub
stos
icebp
cmps
call
inc
movs
jns
xchg
ss
(bad)
cmc
outs
mov
dec
pop
test
jp
mov
mov
jns
repz
pop
js
aad
pop
pop
or
rep
aam
mov
or
jle
lahf
pcmpgtb
xchg
xor
mov
pop
iret
xlat
inc
mov
mov
mov
daa
cwde
in
mov
xchg
stos
inc
xor
daa
xchg
add
add
sar
inc
loopne
mov
xchg
or
fcom
dec
inc
rol
dec
clc
jmp
call
leave
jecxz
out
adc
or
pusha
test
lods
xchg
nop
fwait
rcl
in
aaa
in
jne
in
mov
xchg
adc
mov
in
mov
(bad)
xchg
xor
popa
outs
inc
mov
imul
fdiv
and
(bad)
jnp
pop
sbb
fbld
mov
mov
mov
data16
fwait
jg
push
in
sub
(bad)
mov
mov
pop
jge
jno
fwait
jecxz
xchg
int3
pop
(bad)
jmp
pop
lock
ret
int
lods
ja
retf
in
add
push
dec
cld
js
cmp
jmp
mov
hlt
or
xchg
inc
adc
mov
sar
into
sbb
mov
cmp
div
inc
in
cmp
test
mov
inc
push
out
ins
xlat
add
mov
fwait
push
(bad)
ror
dec
mov
or
std
sub
jp
fadd
pop
ficomp
cld
xor
shl
ror
inc
and
sahf
jb
and
int
xor
dec
es
in
fbld
xchg
xor
movs
fbld
cmc
(bad)
pusha
pop
sahf
mov
jle
push
adc
sti
and
add
loop
adc
out
cwde
sub
out
fstp
js
mov
aas
mov
gs
adc
data16
jl
push
ins
mov
test
retf
push
adc
arpl
rcl
dec
push
aad
sbb
dec
push
shl
test
les
pop
add
cmp
sub
hlt
sti
push
lds
dec
das
pusha
inc
pop
or
adc
xchg
retf
ss
jl
retf
das
mov
(bad)
add
dec
int
mov
jmp
inc
pop
sar
cld
cmp
push
or
xchg
inc
movs
xchg
inc
and
mov
add
imul
(bad)
fs
popf
inc
stos
(bad)
sbb
sbb
outs
sysret
mov
fldenv
in
mov
push
mov
mov
pop
pop
sub
inc
outs
jp
pop
adc
jg
jno
pop
popf
dec
mov
aam
push
outs
xchg
es
mov
sbb
ror
arpl
mov
mov
xchg
xlat
add
movs
(bad)
mov
shl
shl
xchg
ret
push
mov
iret
xchg
lahf
mov
cmps
ficomp
add
idiv
popf
ret
push
das
push
sbb
xlat
call
or
lods
adc
jl
jb
sbb
call
mov
sub
lock
ja
pop
ret
fwait
xor
sub
cmp
push
stos
(bad)
(bad)
sbb
das
das
or
adc
out
cwde
ficomp
inc
sub
hlt
xchg
sbb
sub
out
or
in
shl
and
inc
mov
aaa
stos
inc
mov
retf
ins
dec
mov
test
inc
ficomp
ror
jne
mov
push
mov
scas
cmp
daa
jle
and
mov
mov
leave
pop
pop
or
adc
sbb
iret
sbb
push
cmps
mov
test
stos
out
sub
cmps
hlt
add
cwde
lods
rcl
fwait
jge
sub
cmps
jg
xchg
inc
sub
adc
aad
jle
cmp
and
push
je
sbb
outs
pusha
mov
mov
scas
dec
jb
(bad)
fs
ret
pop
jg
dec
pop
mov
(bad)
hlt
fnstsw
dec
test
add
pop
sti
ffreep
mov
jl
xor
adc
cmp
mov
je
stos
gs
xor
mov
and
cwde
movs
sub
pop
jne
neg
jecxz
retf
adc
mov
mov
and
(bad)
jp
sahf
xor
dec
ins
mov
sub
ret
sub
sub
(bad)
std
retf
push
loop
mov
push
or
movs
inc
iret
and
mov
pop
in
sub
push
out
xchg
sbb
test
push
out
stos
push
add
clc
pusha
shl
jns
mov
cwde
retf
mov
pop
sbb
ret
sub
sbb
or
mov
jnp
mov
mov
push
test
or
jo
ud2
mov
bound
xor
aam
lock
add
push
cmp
les
sub
push
xchg
inc
movs
retf
push
push
rcr
jae
xchg
ret
or
inc
(bad)
xor
into
je
pop
(bad)
int3
and
retf
test
aad
das
adc
addr16
arpl
js
inc
mov
test
push
xor
imul
ins
dec
sti
xchg
mov
fdiv
pusha
mov
jl
idiv
in
xchg
sub
jno
in
mov
call
push
rcl
mov
xor
scas
xor
sti
xor
movs
jbe
dec
cdq
mov
pop
das
lahf
pop
or
pop
mov
stos
lods
and
out
jae
add
mov
fdiv
call
xchg
inc
mov
mov
xchg
cld
dec
dec
sub
sbb
sbb
inc
es
mov
hlt
movs
rol
and
xor
mov
popf
push
enter
mov
stos
sub
rcr
inc
cmp
sub
mov
inc
jae
inc
cli
push
vrcpps
mov
push
ins
test
shr
jle
sar
push
les
shl
cmp
push
xor
out
lea
and
dec
aad
or
div
push
pop
sahf
sub
push
call
dec
push
pushf
imul
xchg
cwde
sub
std
push
ror
sbb
sti
push
dec
shl
stos
lods
push
adc
xor
int3
in
or
mov
in
jge
mov
dec
cdq
bound
mov
xor
lock
pushf
or
xchg
sbb
pop
cmp
aaa
test
jb
popa
and
lock
shl
not
and
lods
bound
repz
or
loopne
test
loop
rcl
mov
xor
hlt
inc
ficomp
pop
xor
jge
jne
xor
lahf
mov
shl
in
dec
xchg
pop
jge
and
mov
push
adc
cmc
adc
sbb
nop
xor
outs
or
adc
adc
out
push
daa
in
jnp
scas
jl
mov
jns
jb
lods
pushf
dec
sbb
bound
fcmovne
jle
jno
fsub
jno
ds
cmp
xor
into
inc
call
mov
ja
xchg
mov
dec
add
stos
xchg
jecxz
push
cmp
es
xor
jp
and
push
cmp
stc
fisttp
cmp
iret
push
pop
mov
or
lahf
or
test
pop
rcr
push
mov
mov
adc
jne
in
cs
test
lahf
cmp
xchg
cmp
out
mov
movs
int3
and
xchg
neg
pop
jecxz
mov
pop
mov
jb
scas
xchg
or
sbb
sub
or
mov
or
movs
int3
add
fnsave
or
ins
(bad)
push
pop
into
adc
jae
xchg
pop
add
sub
mov
ds
out
xor
sbb
je
aad
out
mov
test
fsubr
push
mov
sub
fcom
dec
or
push
mov
inc
inc
fcom
push
pop
adc
bound
jns
inc
scas
sbb
(bad)
clc
add
pop
dec
dec
gs
adc
xor
jg
cld
adc
mov
into
xor
jbe
aas
mov
mov
movs
xor
or
data16
xchg
ror
cld
repz
cmovae
aad
push
add
adc
enter
das
test
(bad)
mov
sbb
xchg
in
cwde
sbb
mov
xchg
jbe
mov
lods
dec
clc
int
xchg
loop
enter
les
mov
sub
sub
add
ss
push
xor
rcr
push
pop
ss
fldcw
data16
push
mov
jbe
imul
xchg
rol
push
xor
dec
mov
mov
icebp
ins
dec
mov
and
(bad)
xlat
add
fcom
and
in
ret
repz
popf
xor
(bad)
jl
inc
retf
and
rcr
das
out
jge
test
jmp
in
xchg
mov
mov
pop
sub
cs
retw
outs
out
pop
aam
xchg
xchg
aam
mov
dec
fwait
outs
add
push
mov
ss
sub
inc
gs
cdq
xor
adc
ins
cmp
idiv
cmp
(bad)
mov
inc
daa
mov
pop
pop
test
jge
rol
dec
sbb
inc
add
sub
adc
mov
lods
aas
push
push
jae
pop
lock
(bad)
xor
loop
ret
mov
fadd
popa
rcr
dec
out
mov
mov
inc
jns
out
mov
fmul
lods
cmc
pop
imul
jb
loope
push
mov
ins
test
sub
pop
sub
push
retf
mov
inc
cmp
int3
sti
xor
mov
fild
pop
and
daa
in
retf
or
inc
cmp
add
aaa
jmp
daa
dec
cld
imul
nop
lock
(bad)
retf
imul
inc
inc
mov
loopne
pop
aam
(bad)
xchg
(bad)
ds
fsubr
dec
fadd
call
clc
mov
inc
ins
adc
sahf
mov
lods
stos
into
mov
pop
dec
mov
iret
(bad)
jecxz
or
(bad)
int
inc
push
stos
pushf
les
push
add
push
cmp
xchg
in
xchg
or
mov
xchg
sbb
add
and
or
jno
pop
out
into
push
cld
ror
jmp
xchg
leave
lock
ja
out
mov
stos
shr
mov
in
icebp
popf
cmps
xlat
mov
scas
and
mov
xchg
mov
add
mov
repnz
mov
add
xchg
scas
rep
and
and
mov
push
and
mov
pusha
or
jno
mov
xchg
fiadd
mov
call
inc
bound
jl
adc
fisttp
imul
stos
jecxz
std
js
out
jg
sub
fmul
and
ficomp
pop
cs
daa
out
in
adc
cdq
dec
ror
enter
scas
xor
fst
push
je
pop
sub
xchg
rcl
fstp
daa
or
cmp
lods
sbb
jb
xor
js
(bad)
imul
mov
mov
(bad)
out
stc
ins
sub
jo
push
(bad)
push
xchg
mov
fmul
scas
add
adc
rol
mov
scas
xchg
stos
sub
inc
xor
push
fistp
popa
mov
jnp
jne
scas
jge
mov
(bad)
enter
push
not
adc
mov
cdq
pop
mov
dec
jmp
aaa
pop
fidiv
add
jecxz
je
fmul
imul
jnp
retf
cmp
xchg
sahf
mov
add
add
jp
mov
stc
and
inc
adc
mov
jmp
enter
stc
mov
push
ja
shl
scas
jbe
dec
jne
scas
mov
jmp
gs
and
sbb
scas
cmp
xor
jmp
ins
push
push
mov
push
sbb
xor
sahf
test
and
out
push
out
mov
or
clc
cmp
stc
bound
mov
and
dec
mov
pop
or
mov
(bad)
cld
dec
sbb
rcr
xchg
or
sub
inc
mov
outs
scas
enter
xchg
aad
push
and
xor
bound
loop
adc
stos
xor
test
push
leave
mov
out
fs
inc
mov
pop
scas
mov
js
and
pusha
dec
and
mov
jmp
das
in
(bad)
push
fnstenv
xchg
pop
cmps
jae
adc
xlat
out
into
xchg
out
or
in
stos
cdq
fs
sub
mov
imul
mov
rcr
pop
stos
mov
int
ins
out
xchg
jae
das
push
add
push
dec
jb
mov
xor
or
arpl
dec
xchg
aas
xchg
out
jecxz
add
sub
jg
movq
add
cmp
shl
sahf
mov
aas
or
push
in
mov
or
mov
dec
xor
mov
call
icebp
pop
(bad)
pop
repnz
dec
shl
int
inc
dec
lea
cmp
aad
push
cmps
bound
daa
pop
sub
inc
(bad)
call
cld
adc
rcr
jecxz
outs
xchg
dec
movs
sbb
xor
xor
add
xchg
popa
push
mov
cmps
jge
inc
pop
int
ficom
in
mov
sub
nop
push
out
dec
jg
jle
mov
cmc
add
inc
js
sar
enter
fs
test
adc
fsubr
rcr
retf
int3
push
sbb
popf
or
sar
sub
rcr
popa
leave
jg
mov
jp
push
push
stos
and
ror
aam
mov
into
dec
xchg
pop
add
sub
gs
mov
inc
adc
dec
mov
add
inc
xor
xor
(bad)
sbb
mov
dec
inc
push
sub
movs
stos
sub
xchg
inc
movs
xor
or
push
cmp
mov
cmp
adc
shr
hlt
rol
mov
ins
jle
int3
push
pop
ss
div
cmc
cmp
jae
jo
xor
adc
xchg
sbb
and
mov
dec
imul
ja
gs
rcr
xchg
jno
push
sar
or
add
mov
clc
and
test
or
adc
aad
inc
repnz
or
cmps
pop
(bad)
aaa
outs
scas
fist
enter
cmp
(bad)
adc
sub
fcomp
mov
dec
mov
push
jns
adc
jno
outs
lahf
push
je
jmp
cmps
repz
lock
ret
mov
fnsave
inc
adc
arpl
or
mov
and
and
mov
sar
dec
(bad)
jmp
stos
outs
inc
sub
inc
aaa
pop
mov
inc
xchg
inc
pop
retf
std
fcomp
inc
xor
pop
mov
jmp
xor
jp
jae
(bad)
icebp
shr
push
(bad)
pop
(bad)
not
(bad)
adc
nop
fdiv
imul
and
sub
push
in
fcom
push
add
sbb
outs
or
sub
jo
cdq
int
jge
pushf
jmp
push
sbb
inc
inc
inc
cs
rol
xchg
das
mov
cmp
fimul
pop
cld
mov
das
jne
push
movs
outs
mov
mov
popa
jo
xor
retf
aaa
mov
fdivr
push
xchg
or
loopne
rcr
add
add
ins
and
sub
outs
iret
clc
push
jnp
dec
or
ins
xor
mov
leave
(bad)
js
out
push
cli
imul
jo
icebp
fistp
lods
cmp
lahf
gs
pop
ss
(bad)
scas
adc
sub
pushf
fsubr
ret
sbb
pushf
sbb
dec
push
sub
inc
adc
adc
ror
cs
xor
adc
xor
fidivr
push
(bad)
aad
xchg
jle
bound
xchg
jnp
into
pop
(bad)
push
add
(bad)
(bad)
cmp
push
mov
add
cld
adc
dec
iret
pop
jns
push
add
jge
push
mov
nop
inc
dec
(bad)
xchg
and
pusha
inc
enter
fld
jbe
cmp
and
cmps
test
test
ds
(bad)
loope
cmp
bound
scas
ret
inc
adc
in
popa
clc
into
cs
dec
sbb
hlt
fdivr
(bad)
aas
cmp
lds
stc
xor
jl
ror
lds
xchg
and
dec
jg
and
cmp
fwait
xlat
(bad)
das
or
iret
mov
jmp
xchg
pop
jb
and
mov
jbe
push
mov
stos
sub
dec
mov
add
and
and
sti
inc
jb
lea
imul
je
outs
add
addr16
popf
sub
(bad)
mov
aad
xchg
rol
cwde
jp
lods
jbe
pop
mov
sbb
adc
ins
cs
jge
es
xchg
jecxz
sub
std
add
mov
mov
adc
das
popf
iret
fild
xchg
sbb
mov
dec
ja
shr
or
gs
adc
push
jl
sbb
cmc
push
jno
push
addr16
mov
out
in
and
mov
scas
(bad)
xor
(bad)
sub
jno
pop
xor
data16
imul
mov
(bad)
int
pop
inc
push
nop
mov
retf
push
pop
mov
inc
xlat
mov
dec
fwait
cmp
test
out
jp
dec
test
lds
not
enter
dec
repnz
add
cmp
in
lods
mov
mov
mov
es
jge
push
mov
and
scas
push
push
ja
popa
jmp
push
lock
aaa
fidivr
push
lds
or
push
aam
in
xor
stos
stos
cmp
mov
nop
dec
rcr
int
cmp
push
adc
loop
dec
rcl
pop
pop
mov
inc
fwait
in
inc
sub
stos
scas
(bad)
mov
push
xchg
pushf
xchg
and
fdivr
int3
sub
call
data16
out
(bad)
pushf
pop
xor
push
in
lahf
xor
in
lock
aam
push
add
in
mov
pop
xchg
sub
aad
push
mov
jge
or
repnz
into
out
adc
rol
jnp
lods
sbb
or
ret
and
push
xchg
cld
int3
xor
push
loopne
ret
icebp
mov
ret
pop
xchg
mov
icebp
add
cdq
dec
jo
bound
or
fdiv
cs
(bad)
pop
sbb
out
inc
loopne
xlat
adc
shl
xchg
in
add
cmps
xchg
cmp
add
sbb
or
or
inc
dec
push
dec
or
xchg
(bad)
xchg
add
jae
jne
ror
ret
push
outs
shl
fiadd
aaa
and
dec
add
cmp
popa
in
and
imul
dec
in
stos
pop
inc
or
adc
popf
sub
test
sbb
nop
movs
push
hlt
or
jle
mov
add
data16
loopne
mov
sbb
and
jns
in
fst
pop
(bad)
call
lods
xlat
or
inc
add
cmp
pop
jl
xor
mov
adc
sahf
cmps
dec
or
pusha
sti
scas
out
test
xchg
js
mov
inc
in
scas
jns
ret
retf
xchg
mov
xchg
push
mov
bound
pop
xor
pop
push
xchg
sub
aaa
mov
stos
mov
enter
jp
rcl
mov
dec
fdivr
mov
sbb
test
jo
test
inc
jbe
mov
imul
(bad)
icebp
jnp
push
daa
mov
pushf
pop
sbb
or
sbb
pop
inc
setb
pusha
dec
xchg
cli
lods
xchg
nop
ret
xchg
inc
retf
dec
push
push
aad
dec
je
inc
sub
xchg
ds
or
adc
xor
mov
icebp
add
pop
mov
aam
mov
jne
inc
add
xor
or
stc
mov
lods
xor
sub
mov
jmp
in
adc
pusha
imul
mov
nop
in
add
pushf
cmp
and
jle
test
push
loopne
mov
cdq
popf
out
sbb
dec
or
push
pop
retf
stc
fwait
stos
or
mov
mov
add
jmp
jge
xor
nop
push
add
inc
add
dec
mov
inc
inc
hlt
mov
mov
pop
xchg
cmp
or
pusha
(bad)
cwde
dec
std
cwde
inc
ins
dec
out
and
sbb
mov
mov
jb
push
xor
(bad)
fisubr
sub
xchg
sbb
inc
pop
mov
cdq
mul
mov
xor
loope
lds
fisub
bnd
jnp
daa
fnsave
jo
iret
imul
jge
out
jne
add
daa
jae
sahf
pusha
je
mov
shl
popf
dec
xchg
ss
fdiv
dec
push
and
call
mov
jno
fild
add
mov
movs
cmp
in
cmp
fisubr
out
fsub
nop
jb
shl
cmps
in
scas
mov
call
int3
sbb
jae
aas
adc
mov
adc
xchg
dec
push
nop
mov
cmc
pusha
daa
sub
das
or
imul
pusha
(bad)
fcmovb
fs
movs
into
and
cmp
jl
out
xor
or
out
lods
jmp
inc
shl
retf
push
leave
fist
addr16
fiadd
cmc
arpl
inc
inc
xchg
mov
fs
stc
inc
jg
test
jge
cmps
mov
(bad)
imul
rol
mov
sbb
cmps
inc
sbb
shl
mov
push
pop
pop
fxch
test
fwait
push
adc
popa
mov
std
push
call
mov
pop
push
shr
dec
loope
pop
sub
fs
xor
pop
(bad)
pop
shr
add
dec
loop
(bad)
mov
ror
xor
bound
cmps
xchg
call
hlt
iret
jnp
or
je
or
mov
xor
xor
es
shr
jmp
and
pusha
mov
pminsw
(bad)
xchg
jbe
add
xchg
iret
stos
add
pop
or
test
mov
outs
dec
push
adc
push
pushf
push
(bad)
mov
sbb
iret
mov
ins
ins
dec
xchg
fdiv
idiv
je
pushf
pop
mov
jno
outs
(bad)
pop
and
mov
jp
xchg
sub
xchg
mov
cmp
mov
sar
sub
sub
pop
hlt
mov
cmps
adc
fsub
sbb
and
sub
repnz
popf
inc
repz
pop
pop
mov
sbb
mov
call
das
jp
adc
enter
pushf
leave
es
mov
in
jmp
xchg
mov
sbb
inc
push
test
enter
retf
mov
je
xchg
mov
jae
cmc
sbb
(bad)
push
cdq
test
sbb
mov
fiadd
call
push
test
out
iret
mov
aad
js
ins
push
mov
jae
mov
mov
fdivp
cmps
add
data16
mov
mov
adc
out
mov
adc
jmp
jns
hlt
lods
and
fs
sub
loope
rcl
je
inc
jnp
nop
lods
leave
mov
push
ret
xchg
mov
outs
(bad)
xchg
test
push
popa
pop
xor
bound
icebp
jo
push
call
sbb
jae
fmul
dec
seto
sbb
scas
add
add
and
sbb
das
adc
hlt
mov
pop
sub
and
ins
pop
hlt
ins
sti
(bad)
mov
lea
aas
stos
jae
mov
(bad)
je
in
clc
out
es
cmp
push
dec
jns
pop
fiadd
push
mov
in
xchg
gs
mov
dec
stos
inc
xchg
add
jp
ret
jnp
push
test
ficomp
sub
mov
mov
test
aas
fild
or
jle
sub
in
ss
std
scas
dec
push
pop
ficom
pop
add
ins
lahf
rcl
push
sbb
or
mov
add
mov
bound
fwait
or
mov
dec
xchg
(bad)
movs
xor
or
adc
stos
pusha
add
cmp
lock
xchg
dec
xchg
retf
(bad)
jmp
inc
push
jb
jp
iret
mov
mov
aam
paddsb
xchg
jne
inc
inc
jno
dec
xor
sbb
scas
pop
or
fsub
inc
jnp
cwde
inc
sbb
test
test
adc
sub
jb
sbb
les
pushf
inc
jmp
popf
idiv
sti
dec
loopne
clc
es
retf
xchg
scas
loope
ret
mov
in
inc
nop
mov
sbb
addr16
(bad)
ds
popf
and
xchg
imul
lea
add
lea
retf
inc
jl
sbb
ins
and
mov
sti
cmps
xchg
jbe
popf
push
test
(bad)
cmc
cmp
mov
cmps
out
xchg
push
xchg
hlt
iret
and
mov
mov
rcl
lock
cmp
jl
loopne
push
adc
mov
test
test
add
or
add
xchg
cld
dec
cmp
inc
xor
mov
xor
inc
sub
sub
adc
test
sbb
inc
or
push
iret
adc
push
adc
xlat
mov
pop
xor
sub
fs
mov
xor
cmps
pop
fs
mov
inc
jmp
mov
aas
stos
shl
mov
xchg
pusha
not
inc
enter
test
sbb
idiv
fild
enter
bnd
cmp
imul
(bad)
dec
jbe
mov
cmp
inc
add
jno
mov
iret
test
or
or
in
xchg
cmp
jle
fstp
fwait
(bad)
repnz
push
mov
out
sbb
or
lahf
dec
add
cdq
inc
pop
adc
loopne
dec
mov
xor
jmp
leave
int
add
scas
ins
sub
imul
in
lock
aaa
pop
addr16
pusha
cmp
jno
jmp
xchg
cmp
xchg
jae
test
fst
dec
int3
mov
inc
into
cld
adc
cmps
ja
data16
jbe
xchg
outs
iret
call
in
dec
xor
ret
cmp
ss
fcos
sub
rcl
mov
clc
daa
mov
push
pop
clc
cli
lea
mov
xor
jne
(bad)
int
cmp
mov
cmp
mov
mov
in
cdq
jne
(bad)
xor
loop
int
or
sbb
sub
jbe
movs
cmp
pushf
adc
adc
scas
mov
sbb
clc
pop
xlat
fst
jne
jecxz
fnsave
call
mov
mov
and
inc
popf
xchg
jl
hlt
add
inc
jge
lea
ss
sub
je
lahf
xchg
and
sub
lock
xchg
gs
in
push
dec
inc
imul
dec
sub
cmps
pop
ret
leave
outs
(bad)
(bad)
repnz
mov
les
pusha
inc
xor
mov
sub
pop
repnz
(bad)
jle
jo
xor
xor
bound
(bad)
xor
fbld
inc
jae
dec
add
out
sub
in
outs
stc
shr
pusha
aad
and
xchg
out
test
adc
mov
sub
stc
cmps
xor
jne
ins
retf
in
xchg
sbb
daa
add
jo
leave
add
sbb
je
in
scas
mov
icebp
mov
add
pop
(bad)
mov
adc
mov
dec
popf
jmp
xchg
mov
sar
ds
test
or
jno
dec
lock
jmp
ret
into
pop
pusha
or
mov
jne
retf
pushf
dec
sub
cmp
mov
dec
sub
or
in
les
test
push
inc
ret
rcr
aad
xchg
lods
inc
xchg
jbe
sub
aam
cmps
xchg
jne
dec
ins
dec
xor
inc
pop
out
inc
push
pop
xchg
in
pop
dec
(bad)
les
cmps
xor
mov
cs
shr
je
fist
mov
mov
sub
scas
pop
inc
cli
test
mov
inc
les
int3
dec
pop
lahf
imul
retf
xacquire
mov
ins
mov
daa
mov
(bad)
dec
xor
clc
add
xchg
sar
inc
lea
retf
sub
sub
pop
ficom
or
push
mov
cld
jae
adc
cmps
jl
and
jnp
or
test
sub
pushf
pusha
imul
outs
mov
or
mov
out
les
xchg
sbb
(bad)
shl
fmul
out
add
gs
mov
je
cmp
gs
push
or
cmp
jge
mov
mov
imul
pop
pop
xchg
ss
jae
push
js
js
mov
push
sahf
ret
xor
pextrw
hlt
in
pop
aaa
leave
stos
imul
mov
add
cmp
fwait
inc
data16
mov
mov
inc
les
add
or
push
neg
arpl
push
xor
mov
scas
and
xlat
sub
pushf
fsubr
xchg
adc
dec
std
(bad)
lahf
xor
and
mov
mov
es
pop
mov
add
and
aaa
cmps
dec
adc
(bad)
(bad)
in
inc
aad
jmp
adc
jno
les
rcl
test
push
rcl
fstp
sahf
cmp
mov
sub
std
mov
mov
mov
dec
ins
jno
cmp
int
fst
mov
push
cmp
lods
imul
mov
in
ds
xchg
mov
pop
mov
test
fistp
aas
test
mov
cmc
xchg
sbb
pusha
es
ror
xor
push
ret
fnsave
jno
fisttp
adc
mov
dec
adc
dec
pop
int3
shl
xor
maskmovq
test
ror
jns
push
repnz
or
adc
(bad)
mov
push
ds
mov
scas
jg
pop
cmp
sbb
inc
(bad)
mov
jns
pop
mov
jno
jne
dec
fld
mov
adc
mov
fwait
push
mov
add
xlat
or
fs
into
rol
lock
stos
stos
out
je
push
inc
gs
out
xor
push
jo
push
loope
cmps
in
dec
jmp
pop
xchg
cmp
sahf
jb
sub
hlt
inc
jnp
push
fwait
mov
jne
fist
pop
push
sub
sbb
cwde
out
jne
sar
xor
mov
cmc
and
in
sub
push
inc
dec
push
aas
jb
or
xchg
xor
inc
mov
shr
cli
add
mov
ret
sub
loope
and
inc
xor
shl
stos
out
mov
push
sub
sbb
add
sub
int3
sub
imul
mov
push
out
aaa
aad
xlat
leave
cld
jle
lea
aam
mov
mov
adc
push
lds
adc
les
or
js
arpl
mov
inc
dec
stc
jnp
jle
sub
xor
stc
addr16
shr
push
xlat
pop
(bad)
mov
xor
mov
gs
test
xchg
xlat
jmp
mov
fild
shl
jl
or
test
test
dec
adc
push
push
iret
pop
cdq
or
jmp
lea
scas
cmp
mov
fs
stos
and
sub
aas
in
push
lods
mov
les
and
repz
ret
int
mov
push
xchg
cmp
das
mov
pop
adc
int3
repnz
inc
pop
int
push
leave
test
xchg
in
mov
and
rcr
repnz
int3
(bad)
mov
pop
push
out
and
inc
or
dec
pop
inc
das
ins
rcr
shr
cmp
add
xchg
aas
jbe
xchg
fld
cwde
adc
iret
inc
test
jno
xor
fs
into
std
cmp
mov
je
lock
sbb
pop
rcr
sbb
mov
jmp
adc
cmp
inc
cmp
mov
iret
dec
sbb
ins
xchg
pop
pop
outs
(bad)
rcl
xchg
mov
jle
sbb
out
imul
cld
ret
stc
pop
add
push
mov
and
popa
push
cmps
cli
bound
cmp
mov
call
inc
aad
sahf
dec
lods
cmps
xor
mov
inc
add
fwait
push
jns
cmp
ss
xchg
pop
test
leave
int3
and
or
inc
aam
cli
call
lahf
ror
lea
pop
inc
mov
sar
retf
push
adc
sbb
pop
adc
loop
lods
ret
and
xchg
sti
das
aam
addr16
hlt
pop
sbb
pop
jl
add
pop
push
fld
mov
inc
cwde
in
mov
loopne
pop
retf
popa
jmp
mov
adc
stos
dec
iret
adc
movs
lods
mov
xchg
inc
jne
sbb
clc
sti
mov
into
jmp
aam
sub
and
jnp
add
ja
adc
int3
mov
and
loopne
lock
or
jmp
fst
sbb
fldenv
mov
les
and
in
mov
jmp
adc
inc
ret
sub
jb
cdq
movs
and
mov
xchg
int
mov
jnp
ret
int
cmp
out
retf
sub
out
nop
rol
rol
jge
cmp
xchg
loope
repnz
adc
sub
dec
ret
push
pop
adc
retf
pop
js
inc
jbe
jnp
pop
inc
es
adc
stos
mov
rol
data16
retf
test
imul
fisttp
stc
add
or
test
in
mov
push
aaa
iret
xor
cmp
test
loopne
mov
pushf
inc
aas
push
fptan
or
cmp
shl
outs
das
in
adc
mov
test
fcomp
scas
ret
test
hlt
in
cld
retf
jae
mov
jge
or
ss
jg
dec
in
xchg
jnp
sub
rcl
mov
ror
mov
clc
jg
mov
dec
in
lods
int
mov
scas
mov
push
jo
scas
pop
jl
movs
mov
or
push
cli
sbb
sub
xor
jg
das
push
xlat
retf
pusha
pop
add
ret
xor
jae
jne
sub
fistp
out
mov
popf
lea
and
and
sbb
sub
movs
adc
or
imul
adc
aas
adc
push
(bad)
gs
leave
mov
add
cmps
xchg
push
inc
jmp
cmc
daa
and
xor
xchg
(bad)
std
add
pop
pop
xor
aad
idiv
test
inc
dec
das
mov
dec
out
outs
xor
and
cli
jo
in
xchg
mov
pop
jge
popf
or
fcom
sbb
in
leave
icebp
jle
pop
sub
mov
inc
jg
mov
lds
test
pop
enter
inc
fmul
scas
adc
sub
loope
or
test
dec
xor
or
hlt
sub
fsub
adc
and
sbb
push
pop
sub
inc
push
lods
repz
aam
or
mov
mov
jmp
test
lahf
das
popa
dec
sub
cmc
xchg
fsub
mov
out
push
adc
stos
sub
sub
aaa
jne
mov
xor
lock
rol
lahf
fldenv
in
lods
stos
fsubr
inc
dec
xchg
cmp
sbb
pushf
pop
inc
sub
jo
clc
int3
scas
mov
mov
adc
mov
xchg
cwde
pop
ror
xor
in
mov
leave
xor
dec
aam
inc
or
xchg
adc
je
mov
mov
(bad)
jmp
fldcw
and
pop
sbb
jne
cs
fnsave
xchg
shl
jl
clc
cwde
sub
jbe
frstor
fs
retf
jg
mov
xchg
cmp
pop
ror
push
sub
(bad)
int3
adc
test
out
ins
mov
lahf
cli
mov
jp
mov
in
mov
into
repnz
and
mov
ficom
mov
cmp
add
jg
in
loop
pop
neg
cmp
xchg
ret
jp
mov
or
arpl
in
test
mov
loop
pop
sbb
inc
and
(bad)
out
sub
mov
jb
(bad)
leave
div
adc
rol
jmp
inc
adc
test
jne
es
in
in
push
inc
rcl
scas
outs
mov
cmp
xchg
jnp
mov
inc
stos
xchg
out
jmp
dec
clc
vpand
sub
ins
adc
push
aad
push
xlat
or
inc
jmp
adc
shl
add
aad
jo
imul
pop
fcmovnu
dec
sbb
jmp
sub
jp
jle
push
(bad)
mov
mov
mov
or
dec
aad
out
ds
sub
xchg
sub
push
jge
cmp
or
jae
mov
push
lea
xchg
(bad)
push
sub
cmc
fs
sbb
fsin
mov
or
pop
xchg
adc
mov
inc
rol
jl
in
jns
mov
fcomip
iret
mov
pop
ja
pop
mov
fsub
xor
xchg
popf
mov
xchg
add
cmc
test
rol
or
mov
sbb
jns
cld
and
popf
fild
fiadd
adc
call
cmps
push
repnz
mov
or
sub
stos
out
imul
pop
ins
test
and
dec
test
mov
adc
xlat
and
xor
fbstp
das
leave
test
daa
gs
xchg
test
sbb
xor
in
jne
mov
jb
mov
mov
daa
jle
(bad)
pop
inc
enter
pop
cmp
rol
(bad)
push
popf
sbb
aad
nop
out
sub
in
cmp
(bad)
mov
fs
adc
out
mov
or
int
(bad)
out
push
push
pop
cld
dec
int
push
mov
fs
ret
pop
cli
gs
xchg
repz
sbb
pop
pop
(bad)
jno
rcr
sbb
pop
arpl
fld
xor
mov
push
icebp
inc
rep
jne
mov
sbb
pop
call
retf
fmul
xlat
mov
jp
pop
xchg
xchg
adc
xor
cwde
mov
xchg
cmps
hlt
jbe
and
movs
sub
(bad)
mov
in
sti
ror
fsub
mov
int
add
gs
jne
je
sbb
jp
push
leave
pop
or
adc
sbb
mov
dec
call
aam
lods
and
retf
push
stos
sbb
mov
leave
dec
inc
mov
enter
mov
std
xchg
xchg
fs
sti
dec
mov
or
mov
mov
inc
mov
pop
push
call
cli
adc
shl
stc
mov
dec
jmp
rcl
shl
xchg
xor
pop
xor
dec
ret
pop
mov
sbb
adc
or
outs
xchg
fsincos
popf
inc
lds
inc
pushf
cdq
loope
push
stos
nop
jbe
out
mov
movs
dec
(bad)
sar
cmp
stos
jbe
push
mov
sbb
xor
push
push
rcl
jae
inc
mov
inc
mov
or
xchg
imul
iret
mov
loop
icebp
add
xor
push
jo
cmp
sbb
dec
xchg
mov
stos
xchg
inc
mov
mov
sti
das
cmp
sbb
mov
fwait
call
hlt
enter
mov
imul
sti
movs
std
cs
scas
stc
jmp
mov
into
push
mov
repz
fcom
jns
mov
jp
loop
jmp
sahf
test
scas
adc
(bad)
or
loopne
das
pop
out
sub
loop
inc
dec
push
push
add
out
cmps
pop
push
aaa
in
sub
cmp
je
and
mov
inc
inc
leave
push
sbb
mov
retf
mov
inc
inc
lock
mov
pop
lea
sbb
shl
add
xchg
and
cli
mov
inc
inc
dec
inc
in
and
test
jne
(bad)
cmc
pop
not
pop
call
or
mov
sub
arpl
xor
ss
or
xchg
xchg
pop
mov
cmp
adc
push
mov
lea
and
push
data16
mov
fnsave
cmp
ror
inc
das
fdiv
push
push
fcmovbe
ins
stc
push
aad
jle
sub
js
add
iret
bnd
cmps
jne
bound
jg
dec
pop
aas
inc
retf
sbb
xor
mov
sbb
enter
jae
sahf
mov
pop
or
jg
ja
es
loop
std
sbb
movs
out
(bad)
dec
popa
cmp
inc
mov
mov
dec
lock
cmp
lahf
mov
out
idiv
sti
inc
mov
bound
cdq
(bad)
jmp
cmc
(bad)
pushf
add
aas
aaa
inc
sbb
jmp
rol
jns
push
inc
loope
jnp
inc
sahf
jg
push
push
jle
mov
adc
shl
cmp
jnp
push
std
ins
or
call
xor
lock
push
aam
inc
punpckhbw
scas
or
imul
imul
stc
rcl
mov
inc
jb
xor
push
imul
or
ins
ss
fs
dec
xchg
ret
mov
mov
fdivr
pushf
xor
neg
fxtract
xchg
rol
pop
movs
aam
dec
repz
mov
test
cwde
xor
mov
mov
xchg
shl
out
xor
sbb
push
lods
add
cmp
mov
out
xchg
mov
in
shl
inc
les
gs
inc
pop
mov
sub
xlat
mov
stos
jecxz
push
cmp
pop
sbb
call
lahf
xchg
sub
adc
jl
loope
lds
inc
popa
aam
jb
xchg
out
cmp
hlt
mov
pop
call
loopne
fisubr
lock
int3
mov
push
inc
xchg
cmc
jb
jg
pop
sub
icebp
cli
repz
cdq
push
adc
inc
cmp
clc
push
adc
jmp
lahf
jno
(bad)
fisttp
push
(bad)
fcomp
jl
or
not
repnz
jnp
icebp
cmc
cdq
in
nop
sub
push
xchg
pop
mov
jmp
icebp
xor
sti
cmps
pop
int3
icebp
ror
mov
push
(bad)
xor
cmp
mov
push
lea
xor
add
mov
repnz
or
mov
adc
sbb
ret
push
cld
mov
or
add
mov
push
jmp
and
cdq
shl
jmp
push
cwde
mov
arpl
outs
cli
xor
test
or
lahf
mov
cmps
mov
and
pop
xor
pusha
jmp
(bad)
aam
in
in
das
jnp
pop
sub
fwait
in
movq
push
imul
nop
fs
movs
xor
test
jno
mov
lods
in
or
cvtdq2ps
xchg
bnd
lods
cs
or
out
fsub
cdq
out
xor
hlt
cld
sub
cwde
lods
xchg
je
or
xor
mov
cli
inc
aaa
scas
xor
xor
adc
js
dec
test
inc
pop
fist
push
lahf
je
repz
mov
cli
push
push
out
outs
cmp
add
mov
ins
lock
pop
add
test
mov
cmp
ins
push
mov
test
cld
pop
lds
jb
std
jno
cld
jae
in
aaa
inc
rcl
xchg
adc
je
ficomp
ja
mov
idiv
adc
and
cld
arpl
pop
sbb
sub
mov
(bad)
call
je
add
iret
pop
push
mov
jmp
xchg
adc
xor
and
pop
jnp
mov
imul
mov
push
test
cwde
dec
loopne
lahf
push
mov
stos
jmp
jae
or
loope
int3
pop
mov
out
or
dec
mov
sub
out
cld
loope
aas
repnz
test
jae
cmp
enter
xchg
clc
pop
in
aad
arpl
mov
push
or
xor
sub
sbb
lods
xchg
jmp
jge
jnp
loop
stos
xchg
aam
push
or
imul
sub
in
inc
rcl
or
arpl
stos
push
push
int
addr16
rcl
in
jbe
sub
inc
fwait
fwait
std
cmp
or
add
pop
push
push
movs
pop
aad
(bad)
(bad)
mov
xor
scas
mov
mov
xchg
jmp
fucomip
mov
jo
cmps
enter
adc
cmp
test
xor
mov
sbb
mov
in
gs
lds
inc
add
push
mov
int3
aam
jmp
sub
inc
and
add
inc
pusha
jmp
sti
jae
je
(bad)
lahf
jmp
sti
inc
sbb
mov
popw
std
jb
out
xchg
leave
dec
aaa
xchg
in
sub
mov
psrad
repnz
rol
lds
xchg
ret
push
dec
cli
dec
push
push
cmp
xor
or
xlat
jmp
out
fdivr
repnz
xor
daa
jg
jne
xchg
int3
sub
and
call
adc
in
cwde
repz
sbb
cmp
adc
push
sti
shr
jg
(bad)
stc
adc
das
fsubr
sbb
popf
ja
mov
sbb
jl
pop
pushf
inc
sbb
call
ds
into
sbb
jb
test
shl
fnstcw
xchg
adc
enter
iret
sub
or
inc
inc
movs
push
inc
retf
aad
adc
mov
neg
mov
or
data16
fbld
sub
das
sub
les
retf
bnd
lds
jmp
and
and
into
retf
mov
jle
jle
xor
daa
fimul
lds
xchg
dec
mov
add
movs
bound
sti
jp
cmps
in
mov
ja
fisub
fimul
scas
sbb
rcl
mov
or
jbe
lock
test
test
sbb
leave
jne
fwait
xchg
repz
xor
ja
mov
sbb
pop
inc
jbe
push
je
lods
jmp
loopne
dec
bound
sub
sbb
jle
cmps
inc
repnz
mov
xor
jmp
pop
mov
imul
pop
rcr
add
or
loopne
sbb
sbb
jno
shl
push
mov
lods
mov
xor
push
sub
test
add
add
jg
jp
and
mov
mov
sbb
popa
ret
pusha
rep
mov
scas
mov
shl
cmp
nop
jns
push
retf
fcmovnu
aas
fsubrp
gs
imul
sub
push
sti
arpl
dec
jmp
sub
push
or
(bad)
dec
mov
sub
xchg
jge
or
push
je
cli
fs
mov
test
or
or
pop
stos
movs
inc
cmp
xchg
fwait
repz
in
js
mov
inc
mov
pop
test
push
call
sub
dec
jge
sar
cmp
dec
mov
cmp
adc
stc
(bad)
and
(bad)
jmp
das
sbb
jl
stos
lods
das
aad
fsub
jo
shr
or
les
mov
(bad)
stos
mov
pop
mov
movs
jo
shl
neg
xor
adc
mov
or
adc
mov
ror
pusha
push
pop
test
dec
dec
mov
daa
scas
pop
sbb
fnstenv
ror
adc
or
jbe
push
jbe
cli
mov
pop
in
ins
mov
and
mov
js
jne
inc
loop
cmp
xor
sbb
add
(bad)
xor
test
mov
push
xchg
fdiv
pusha
sub
cwde
std
and
aas
cmp
mov
pop
mov
xchg
inc
(bad)
shl
icebp
test
dec
gs
jecxz
cmp
sbb
dec
aad
xchg
sub
hlt
xchg
push
addr16
mov
add
repz
test
call
dec
test
lds
jae
stos
jp
adc
mov
arpl
mov
ins
and
mov
popa
lahf
xchg
test
in
xchg
adc
mov
fdivr
je
lods
cwde
add
sbb
test
ss
push
xchg
push
sbb
test
cld
mov
cld
pop
into
jo
xor
js
pop
into
iret
add
inc
fidiv
(bad)
(bad)
repnz
rcl
loop
and
ins
fild
(bad)
cwde
push
es
mov
mov
(bad)
pushf
fistp
aad
inc
mov
cmp
dec
idiv
cmp
jb
jle
test
lods
clc
lods
(bad)
sub
imul
lock
ins
inc
popf
cmp
pop
mov
ins
mov
retf
mov
cdq
fmul
xor
xor
adc
dec
dec
popf
or
xor
rcr
les
lock
push
sti
imul
(bad)
in
shl
or
sbb
adc
ror
jmp
cmp
imul
jmp
rol
dec
jnp
adc
(bad)
sbb
mov
push
lock
dec
lds
outs
jo
cmp
add
les
rep
ficomp
xor
das
dec
add
add
sub
test
ins
sbb
push
rol
stos
mov
in
inc
xchg
scas
mov
loopne
pop
jbe
add
imul
ins
cmps
push
mov
cmps
pop
scas
or
ins
int
mov
cwde
mov
aad
sub
jae
(bad)
inc
(bad)
nop
xchg
sbb
xchg
ds
rol
push
push
mov
out
inc
cli
and
mov
clc
add
fdiv
call
into
push
inc
scas
out
adc
(bad)
out
sahf
call
mov
inc
sbb
lahf
data16
fucomi
ret
int
movd
pop
(bad)
xchg
es
stos
(bad)
xor
scas
adc
dec
lock
js
xor
sub
rcr
cmp
xor
sbb
(bad)
(bad)
pop
neg
inc
mov
jnp
sub
sub
stos
mov
pop
aaa
pop
and
mov
cmp
pop
dec
pushf
adc
sti
out
scas
xor
(bad)
pop
adc
pop
shl
cmps
test
int
cmps
test
pusha
pop
xchg
test
dec
(bad)
shr
jle
cmp
addr16
add
push
cmps
inc
arpl
lods
test
in
repz
mov
push
add
dec
push
or
cmp
and
dec
or
add
push
push
push
jns
xchg
lods
lea
sub
mov
jmp
inc
outs
adc
inc
pop
jmp
adc
mov
mov
push
pop
jnp
pop
(bad)
mov
aam
cmp
mov
push
push
mov
push
lods
cmp
mov
mov
scas
xor
call
mov
mov
outs
aad
xor
pop
jb
call
ret
xor
fisttp
mov
imul
xchg
sub
adc
icebp
xor
fld
pop
pusha
and
cwde
adc
jne
std
push
repnz
jb
mov
cmps
pop
dec
retf
mov
push
js
push
pusha
sbb
xlat
popf
fmul
sub
mov
leave
ror
outs
sub
ror
dec
pop
jnp
pop
sub
aaa
jo
test
imul
fisttp
push
inc
push
push
repnz
inc
and
adc
lock
test
jbe
or
loope
dec
mov
dec
fstp
jbe
pop
pusha
js
inc
es
(bad)
sbb
pop
pop
test
jnp
inc
iret
jge
jbe
test
xor
aad
pop
mov
stc
xchg
add
adc
xchg
push
sub
call
dec
ds
(bad)
cli
dec
out
pop
push
(bad)
xor
sbb
pop
cli
fst
hlt
dec
dec
mov
xchg
mov
and
hlt
mov
jmp
(bad)
push
and
sub
fistp
push
push
out
sub
xor
or
into
test
push
mov
xor
fcmovnb
jp
aad
pop
mov
popa
fdecstp
mov
fcomp
mov
jl
mov
outs
(bad)
retf
or
imul
pop
and
clc
sub
in
jmp
rcr
bound
jmp
xchg
add
mov
and
test
loop
lea
mov
push
fucomp
inc
je
ror
test
mov
(bad)
push
sub
(bad)
jo
dec
mov
emms
dec
or
mov
xchg
or
fdivr
add
fnstcw
inc
xchg
xchg
icebp
pusha
(bad)
stc
jo
clc
mov
sbb
mov
in
push
cmp
mov
jmp
inc
iret
cmp
iret
jg
sub
jo
rcr
out
clc
pop
aas
pop
test
mov
dec
pushf
das
add
popa
ror
pusha
pop
lds
je
jo
ret
jae
xchg
jmp
pop
mov
lods
jecxz
fidiv
adc
mov
cld
scas
mov
or
pop
jecxz
mov
push
and
cmp
pop
test
inc
lahf
les
ficomp
jl
cmps
or
push
push
rcr
adc
jle
(bad)
add
jge
scas
scas
mov
shufps
out
enter
or
inc
aam
(bad)
(bad)
cld
xchg
inc
dec
(bad)
mov
cmp
jae
fstp
add
icebp
sbb
test
xchg
retf
addr16
std
jg
mov
xchg
adc
aad
fild
shl
(bad)
dec
aad
dec
into
and
nop
lods
shr
scas
ss
nop
cld
cmp
shl
ret
mov
rcr
in
mov
push
lods
pop
fdiv
jnp
and
mov
pop
mov
xchg
iret
pop
xor
clc
icebp
mov
jns
sub
mov
pop
test
jle
and
xchg
in
cdq
loope
ret
mov
mov
gs
pop
sahf
je
jp
pop
push
fucomip
lds
or
addr16
imul
adc
jno
sub
inc
mov
dec
add
jo
fcomp
and
pop
sbb
arpl
repz
sbb
or
inc
xor
sub
test
icebp
or
pop
in
and
jnp
ret
enter
out
ins
mov
fcomi
xor
jg
xor
xor
inc
mov
aas
mov
or
mov
stc
add
out
and
cmc
mov
stos
mov
sbb
and
sbb
mov
mov
test
sbb
dec
adc
cmp
in
(bad)
ins
jno
xchg
and
and
bound
mov
sub
and
loope
test
or
lea
and
(bad)
push
sbb
jl
aas
inc
lds
pop
stos
mov
adc
inc
clc
call
test
jno
lods
jae
ds
mov
or
or
shr
mov
pop
jle
stc
int
lea
xchg
aad
xor
xor
jmp
ins
mov
mov
retf
xchg
je
and
add
cmps
cmc
push
in
js
adc
jae
sub
lock
les
cwde
jg
(bad)
xchg
lods
stos
xchg
xchg
cdq
fneni(8087
(bad)
sbb
mov
mov
je
jb
jle
(bad)
icebp
dec
fcmovb
scas
pop
adc
fmul
add
push
adc
ins
xor
(bad)
jbe
pop
ror
adc
nop
xor
gs
cmp
add
test
sbb
aad
jno
add
bound
hlt
mov
cmp
cmp
dec
out
outs
sar
in
and
push
push
aam
stc
inc
sbb
and
outs
rcr
add
mov
mov
xor
call
clc
into
jmp
mov
cmp
aad
stos
push
lea
ins
mov
cmp
xor
jbe
movs
stos
mov
aas
mov
xchg
imul
or
mov
aaa
fwait
mov
fisub
retf
inc
clc
push
push
sub
jno
lods
rep
cmp
pop
stc
aaa
ja
pop
mov
pop
je
jae
adc
sub
pop
adc
dec
sbb
mul
icebp
push
pop
push
lea
fadd
cmps
xchg
push
pop
fs
push
clc
jmp
inc
sub
mov
retf
and
xor
sbb
into
mov
xchg
and
gs
mov
jns
inc
adc
imul
xchg
js
addr16
dec
jmp
jne
mov
adc
push
aad
popf
xchg
pop
movs
sahf
clc
ins
inc
mul
xlat
push
mov
scas
(bad)
inc
bound
push
fcmovne
inc
pop
mov
jns
(bad)
adc
pop
aaa
fbstp
add
das
pop
xchg
mov
fcmovnu
pop
lahf
xchg
xchg
cdq
or
mov
fs
inc
or
dec
mov
outs
push
bt
shl
loop
dec
int
out
jo
jle
imul
push
mov
out
mov
imul
cwde
mov
(bad)
push
dec
cmp
call
pop
dec
xchg
vmaxss
cmp
cmps
inc
mov
aas
outs
and
or
or
sbb
je
cmps
and
jae
dec
icebp
ss
jl
xchg
jmp
clc
or
xchg
scas
and
sbb
or
cmp
adc
imul
stos
neg
ins
pop
jecxz
lock
add
icebp
push
fs
aas
les
dec
cmp
sub
xchg
and
cmp
xchg
push
bound
xor
and
cmps
fld
cld
aaa
mov
sbb
das
jmp
in
add
sbb
cmp
push
repz
inc
or
dec
nop
sahf
or
fsub
jne
(bad)
xor
jl
mov
dec
out
xchg
cmc
dec
push
rcr
iret
add
loop
es
xor
cmp
jb
popf
jnp
lods
repnz
(bad)
outs
pop
jb
sub
out
and
cmp
mov
or
mov
sti
jo
cmps
mov
(bad)
mov
lods
pusha
mov
pop
fdecstp
jle
xor
jl
mov
in
daa
push
jo
jecxz
mov
pop
pop
and
cmp
loopne
add
cmp
mov
in
int3
loopne
fist
loop
idiv
sub
push
pop
into
or
movs
(bad)
call
enter
mov
mov
mov
das
add
cli
or
jo
push
(bad)
cmp
(bad)
aam
xor
mov
mov
mov
dec
(bad)
fcomi
mov
xchg
arpl
movs
xchg
inc
cmp
(bad)
cdq
xor
lock
test
pushf
add
mov
dec
(bad)
mov
pop
rcr
xchg
mov
rcr
(bad)
push
movs
dec
sbb
cdq
push
push
pop
sbb
cwde
xchg
aad
in
inc
pusha
leave
add
and
jne
dec
and
lea
cmc
push
sahf
loop
stos
addr16
mov
mov
fmul
(bad)
sbb
imul
scas
pop
cli
inc
cmps
clc
jg
cmp
sbb
popa
stos
call
mov
add
mov
mov
inc
das
or
(bad)
clc
push
addr16
pop
hlt
mov
inc
push
cmp
adc
add
daa
adc
leave
cmp
push
mov
not
jmp
cli
xor
adc
loopne
and
mov
mov
mov
imul
shl
ficomp
sub
and
imul
push
jmp
ficom
dec
lahf
jne
(bad)
fsubp
jg
sbb
xchg
push
jecxz
movs
imul
dec
stos
repnz
rcr
movs
fs
or
cli
int3
in
mov
sub
ins
mov
pop
mov
pop
and
out
jo
add
or
mov
jne
dec
nop
cld
aas
xchg
jnp
add
and
mov
mov
mov
cmps
mov
and
jnp
add
imul
cwde
mov
jns
inc
jae
(bad)
adc
inc
fld
icebp
jp
sbb
xchg
stc
sub
or
in
xor
and
pop
mov
ja
inc
test
repnz
mov
jbe
xor
je
cmp
jle
rcr
mov
es
or
test
sub
inc
inc
not
aas
pop
call
ds
(bad)
std
in
add
or
loope
daa
add
retf
xor
jg
mov
xchg
lock
pop
cmc
sbb
cmps
les
xchg
fist
pushf
or
das
mov
out
ins
mov
fsubp
mov
pusha
out
call
das
lds
lods
push
mov
ins
rcr
or
cmp
es
push
call
cmp
lock
cmc
jmp
out
mov
mov
(bad)
pop
sahf
shl
mov
rol
mov
dec
add
push
sub
dec
inc
aad
sbb
sub
jmp
pop
dec
cld
loopne
div
cmp
add
icebp
xchg
dec
aas
(bad)
(bad)
and
adc
adc
cmps
cmc
daa
ret
rol
(bad)
mov
mov
dec
arpl
retf
mov
in
fwait
ss
retf
jae
pop
add
jge
push
push
test
xor
cmp
push
mov
cmps
push
ficom
out
pop
mov
xchg
xchg
cmc
jge
test
arpl
addr16
push
sahf
jmp
jbe
std
loopne
add
cmp
out
inc
test
cmp
leave
int
pushf
jns
(bad)
(bad)
out
jae
cmp
pop
adc
stos
push
mov
or
fld
outs
mov
xchg
(bad)
popf
(bad)
jbe
push
(bad)
pop
fidiv
iret
(bad)
pop
fucomip
cmps
rol
gs
(bad)
out
(bad)
int
addr16
(bad)
or
popa
mov
jns
cmps
xor
cmp
and
fnstenv
repz
jle
retf
test
push
fidiv
fcom
ss
dec
clc
ficom
lea
imul
pop
fstp
inc
in
xor
clc
imul
mov
lea
mov
push
pop
xor
fs
les
xchg
dec
mov
(bad)
mov
mov
dec
push
jbe
mov
div
push
cmps
imul
aas
push
and
das
adc
cmp
pop
xor
mov
xor
mov
das
sub
push
and
sub
fst
dec
adc
adc
dec
test
dec
mov
jbe
mov
jae
xchg
out
pop
outs
cwde
das
pop
leave
not
mov
(bad)
mov
bound
add
outs
test
mov
sbb
jmp
cmps
shl
pop
sahf
mov
adc
mov
call
rcr
and
pop
test
ins
inc
sbb
in
cmp
scas
adc
ins
jae
jns
bt
mov
dec
movs
dec
arpl
sbb
xchg
xchg
fimul
sub
adc
mov
xchg
sbb
push
xchg
push
sbb
sub
sub
movs
adc
lds
or
and
cmp
shl
adc
dec
sar
dec
mov
ficomp
sbb
dec
dec
mov
mov
add
mov
fld
or
div
lds
jnp
aam
addr16
(bad)
outs
inc
stc
repnz
lahf
xchg
sbb
push
daa
loope
pop
stc
jp
adc
pop
fdiv
push
movs
test
mov
xchg
push
sbb
dec
xchg
or
push
fwait
pop
retf
cmp
push
fidiv
fnstenv
sahf
cwde
out
sbb
jmp
mov
push
push
bound
(bad)
adc
or
xchg
push
scas
jle
mov
stos
out
add
mov
leave
fxch
leave
add
arpl
inc
mov
stos
mov
xor
sub
test
(bad)
lea
inc
bound
sbb
inc
inc
lds
sub
sbb
xor
fisubr
jle
adc
sbb
sub
mov
in
jo
push
xor
inc
mov
mov
pusha
mov
add
add
push
movs
aad
xchg
(bad)
jl
cmp
daa
cmp
xor
cmp
es
xor
jmp
adc
cmp
outs
xchg
cmps
cmp
ffreep
popf
dec
inc
add
push
gs
push
fild
and
inc
mov
jmp
push
push
aaa
xor
mov
sub
movs
pop
mov
cmc
clc
xor
jle
add
push
nop
pop
mov
sti
jecxz
sub
sub
sbb
mov
popf
out
mov
mov
repnz
into
cmp
push
dec
cmc
mov
adc
jns
das
imul
xchg
push
fld
addr16
dec
outs
(bad)
(bad)
fstp
test
ds
test
pop
mov
push
xchg
lahf
fwait
popf
add
fimul
sbb
sub
pusha
xor
(bad)
call
scas
mov
fucomp
sbb
fadd
pop
push
jb
cmp
rcl
icebp
mov
cmp
cld
jg
imul
fucomi
std
lods
dec
loope
je
outs
mov
cld
dec
aad
mov
jae
push
leave
mov
dec
add
mov
cld
loop
mov
daa
addr16
outs
inc
cwde
stos
xor
cmp
mov
fild
sbb
inc
and
in
dec
jns
jmp
dec
mov
push
nop
pop
mov
(bad)
imul
scas
jno
leave
sahf
pop
mov
aas
int
repz
jl
and
cmps
jp
imul
push
push
dec
fdiv
xor
cmp
and
cmp
sub
dec
cmp
sub
sub
(bad)
jecxz
cli
cli
ficom
xchg
jb
cs
ffreep
push
mov
in
jb
loope
lahf
sbb
test
ja
out
mov
imul
movs
sub
pop
sahf
xor
sbb
mov
jp
add
jmp
push
cmp
inc
sti
je
(bad)
cmp
sbb
mul
scas
mov
cmp
lods
cmp
inc
sbb
mov
dec
sub
aaa
adc
dec
not
xchg
(bad)
in
ja
cld
sahf
inc
rcr
mov
jae
xlat
(bad)
dec
sbb
cmp
les
xor
sar
aaa
sbb
mov
aam
xchg
sub
fnstcw
push
retf
inc
jmp
adc
shl
mov
sahf
cwde
shl
add
pop
test
mov
sub
push
dec
cmps
(bad)
sub
mov
dec
sahf
adc
call
fsub
shl
xor
mov
ret
out
add
arpl
mov
push
mov
inc
inc
pop
and
push
(bad)
dec
sub
in
push
dec
lds
das
cmp
cmp
ss
call
sbb
mov
push
push
sub
pop
cmp
bound
std
lea
cli
sbb
aas
pop
or
xchg
sub
mov
xor
mov
cmp
or
xchg
aad
sub
fisubr
loope
inc
shl
and
and
jnp
or
aad
dec
cmps
iret
mov
fadd
call
xchg
or
mov
cs
daa
fist
stc
data16
in
nop
mov
mov
jb
stos
pusha
add
test
adc
push
add
rol
mov
mov
mov
adc
mov
mov
pusha
dec
adc
lock
xchg
dec
xchg
out
jle
pop
mov
mov
jns
int3
xchg
or
jne
cdq
imul
mov
or
aaa
mov
dec
mov
repnz
jmp
mov
cmps
arpl
ret
xchg
ja
mov
xlat
loopne
jne
lods
inc
jns
jmp
xlat
(bad)
iret
jno
lahf
pusha
cmp
dec
fidiv
mov
loope
fcom
xor
shl
sti
out
jmp
mov
or
or
sbb
cmp
dec
sbb
xchg
inc
fld
mov
jecxz
fmulp
call
ja
adc
jmp
adc
aam
aas
in
dec
retf
pushf
mov
sub
or
push
xchg
les
mov
sbb
popf
mov
xor
test
aaa
xchg
outs
clc
inc
dec
lea
bound
in
and
push
mov
push
inc
jge
and
repnz
aad
movs
sbb
fisubr
cdq
mov
xor
mov
leave
dec
aaa
in
test
ins
arpl
repz
push
das
repnz
or
cmp
xor
mov
imul
jmp
mov
ins
mov
dec
push
sbb
mov
leave
fs
aas
inc
add
movs
(bad)
scas
inc
in
iret
addr16
sbb
push
pushf
jg
mov
(bad)
sub
xchg
(bad)
aad
xlat
inc
adc
scas
push
jno
mov
cmps
jg
xor
retf
xor
(bad)
sbb
mov
and
mov
scas
aaa
jge
(bad)
cld
xor
sbb
or
xor
mov
sub
mov
pop
mov
mov
aad
xchg
out
xchg
xchg
adc
cmp
sub
add
or
je
adc
rcl
or
inc
sar
(bad)
lock
call
jo
out
fisub
inc
pop
jg
(bad)
mov
add
repnz
fdiv
(bad)
adc
sbb
push
jg
retf
rol
retf
or
push
inc
inc
or
leave
dec
jns
or
adc
adc
jae
mov
mov
fisttp
or
pop
inc
or
fstp
push
jl
(bad)
push
mov
mov
in
add
inc
ror
aad
nop
punpcklwd
scas
xchg
pushf
dec
mov
loop
cmp
or
mov
je
in
retf
or
mov
adc
push
and
(bad)
push
shr
pop
daa
or
movs
aas
repz
outs
in
push
repz
shr
in
pop
arpl
in
pop
sub
xchg
aas
jne
or
xor
xchg
out
jbe
jecxz
push
mov
test
add
into
arpl
ins
scas
sti
mov
ud1
xchg
jg
mov
addr16
ss
in
cmp
jbe
lds
inc
aam
repz
sbb
ret
xchg
enter
cmp
ds
mov
pushw
or
jp
jle
rol
cmp
xchg
xchg
jmp
sbb
(bad)
xor
rcl
imul
or
out
or
add
jmp
dec
sbb
sub
repz
fnstsw
inc
cs
retf
scas
mov
sbb
mov
mov
xor
mov
add
mov
call
xor
jno
loop
lea
(bad)
and
inc
rcr
in
mov
in
(bad)
idiv
std
ss
sbb
outs
mov
pop
jmp
sbb
mov
sbb
jmp
sar
stc
popa
and
adc
inc
mov
or
sbb
jb
cmp
loope
stos
in
shr
(bad)
jmp
pop
daa
mov
xor
fld
fs
bound
sti
add
jae
or
out
shl
push
movs
push
sahf
adc
push
mov
aaa
fs
fild
les
ds
dec
mov
jmp
mov
fst
ja
and
dec
hlt
test
mov
in
loopne
mov
inc
cmps
aam
xchg
add
(bad)
cmp
(bad)
mov
pop
inc
outs
push
inc
push
adc
xchg
ins
lods
sbb
scas
out
mov
pop
outs
lea
xor
mov
sbb
fbstp
jmp
sub
bound
aad
jno
ds
sub
mov
clc
sbb
xchg
sbb
add
dec
vpsadbw
jnp
push
inc
in
sub
add
mov
icebp
(bad)
xor
dec
mov
mov
push
enter
xchg
jnp
push
test
shl
cli
jg
dec
mov
inc
inc
std
sbb
dec
mov
les
add
in
xchg
push
or
popa
sub
sbb
repnz
sub
pop
fwait
and
je
ror
outs
mov
mov
cs
adc
pop
mov
mov
loopne
mov
adc
push
add
cmc
and
inc
(bad)
in
mov
fwait
rcl
add
xchg
and
xor
hlt
and
xchg
pushf
popf
cwde
add
mov
mov
jmp
jmp
imul
iret
push
data16
ret
in
ss
cld
ins
ds
lods
xchg
aas
mov
mov
inc
mov
xchg
outs
inc
mov
mov
cwde
sub
jbe
popa
test
call
(bad)
lods
les
add
lds
mov
outs
bound
xor
test
add
es
adc
adc
pop
pop
lods
xchg
or
mov
call
sbb
mov
js
ins
mov
and
in
idiv
xchg
add
adc
dec
jno
fs
mov
int3
in
sub
ret
or
dec
scas
jecxz
jnp
jmp
xor
(bad)
jnp
outs
xor
sbb
into
(bad)
pop
mov
fdivr
dec
(bad)
cmps
push
adc
dec
xchg
jmp
sbb
dec
mov
fiadd
ret
aam
call
mov
pop
cmp
add
pusha
outs
pop
stc
jne
and
enter
mov
push
xor
xchg
inc
jmp
aad
(bad)
cwde
sub
(bad)
lea
mov
push
adc
fld1
push
xchg
mov
ds
sub
adc
and
jno
jle
loopne
pop
mov
enter
(bad)
(bad)
jge
and
push
pop
rol
xchg
cmps
jmp
ins
test
xchg
ss
push
stos
(bad)
dec
test
jno
push
mov
mov
movs
aam
in
cmp
or
xchg
sub
aad
and
pop
push
mov
xor
cmp
out
sub
mov
xchg
daa
rcl
js
xchg
push
jmp
enter
in
call
or
(bad)
push
sbb
dec
dec
out
mov
popa
mov
pushf
dec
adc
xchg
aaa
jb
rcl
jns
inc
push
xor
pop
int3
mov
xor
cmc
add
mov
rcr
push
or
fwait
stos
mov
fs
inc
int3
push
loope
out
cmps
(bad)
xchg
sti
mov
xor
ja
xor
aam
fsubr
arpl
call
or
and
cli
(bad)
fdivr
adc
or
and
mov
movs
or
lahf
mov
ss
cmps
jp
(bad)
mov
xchg
imul
sub
shl
arpl
xor
je
sbb
xchg
repnz
xchg
sub
sub
dec
mov
xor
stos
scas
int3
and
pushf
cwde
lods
push
test
mov
pop
scas
xor
mov
dec
mov
or
mov
jecxz
mov
and
lods
or
push
jo
jns
and
add
inc
bnd
cwde
gs
lods
jb
stos
xchg
jo
fistp
dec
sbb
and
cmc
xchg
stos
inc
adc
sahf
push
or
bsr
cmp
data16
cmp
fdivr
stos
dec
xchg
stc
movs
add
(bad)
fidivr
out
mov
xor
adc
cmc
pop
test
pop
jmp
mov
cmps
jge
push
popf
sub
adc
(bad)
fucom
iret
popf
jnp
and
(bad)
js
jge
xchg
mov
jl
imul
lea
test
mov
lods
lods
jne
aam
movs
mov
mov
call
pushf
dec
fidivr
repnz
jmp
mov
shr
mov
icebp
push
mov
pop
mov
jmp
jp
mov
cmp
lods
test
and
xor
dec
jb
fstp
div
js
xor
pop
jnp
call
into
out
inc
sub
popf
mov
sub
rcl
push
cmps
xor
adc
cmp
jge
ficomp
push
mov
sub
push
cmp
cmp
test
dec
dec
jbe
sbb
into
mov
xor
jmp
mov
mov
pop
fs
lock
inc
(bad)
push
popa
gs
sbb
adc
pop
push
cmps
mov
daa
add
in
leave
or
dec
not
(bad)
jmp
mov
je
fldcw
ins
rcl
xchg
xor
jecxz
out
adc
ret
mov
es
mov
imul
push
cmp
or
fs
clc
pop
stos
mov
push
inc
aad
movs
pusha
dec
push
test
xor
push
mov
push
int3
pop
mov
jg
or
jb
mov
jno
sbb
sub
xchg
out
jns
mov
cmp
and
inc
push
hlt
xchg
unpcklps
push
ret
mov
or
add
gs
hlt
adc
pop
pop
lods
xchg
dec
push
mov
add
enter
daa
sub
loopne
not
test
xor
sbb
mov
(bad)
sti
movs
sti
ret
xor
in
sbb
pop
add
fwait
hlt
pop
outs
and
xchg
cmps
fwait
movs
inc
shl
cs
sar
aaa
push
int
push
mov
pop
jp
(bad)
or
adc
dec
mov
arpl
jp
test
repz
jbe
imul
and
cmps
jb
inc
popf
sahf
mov
jl
adc
mov
jae
scas
icebp
mov
test
mov
add
cmp
add
jae
daa
popf
hlt
cmp
xchg
jecxz
mov
loopne
jle
popa
mov
loope
sbb
add
(bad)
loope
scas
scas
hlt
fnstsw
jl
add
les
cmp
rol
cmp
mov
call
mov
dec
jp
lock
inc
adc
iret
(bad)
in
lods
push
imul
pusha
cdq
jle
pop
push
cmp
xchg
cmps
add
xchg
dec
jmp
jo
adc
mov
and
cmp
aaa
cmpxchg
fldenv
jge
movs
test
jmp
pop
jmp
(bad)
sub
and
adc
dec
mov
sbb
mov
add
adc
lds
pop
adc
sbb
inc
sti
inc
xchg
or
xor
stos
mov
je
int3
clc
pop
adc
and
retf
cdq
or
lea
repnz
mov
outs
sub
pusha
gs
fsub
cdq
xchg
pop
sbb
ret
mov
jecxz
sbb
(bad)
std
inc
pop
mov
fmul
xchg
(bad)
mov
dec
push
ins
mov
fs
adc
jbe
in
inc
cs
inc
jne
sar
fidiv
pop
mov
bound
out
push
push
sub
mov
sbb
inc
arpl
xchg
scas
addr16
ins
leave
jp
or
adc
xor
ss
mov
das
mov
into
jb
push
mov
fadd
sub
dec
mov
pop
je
cmp
call
call
cwde
cmp
mov
mov
(bad)
mov
dec
movs
sub
scas
jb
daa
cdq
addr16
gs
pop
dec
cs
sbb
and
sub
pushf
rol
sbb
in
arpl
and
jne
loope
aaa
movs
cmp
dec
cmp
mov
mov
xor
add
rcl
add
sar
add
fstp
mov
fdiv
inc
inc
shr
jmp
je
ret
xchg
push
inc
loop
xchg
inc
sbb
dec
pop
xchg
sbb
rol
pop
add
rcr
cmps
cmp
or
jg
lods
(bad)
cmc
push
xor
js
shl
subps
mov
xchg
mov
pop
fadd
fild
jnp
sub
hlt
cli
cs
hlt
xchg
add
adc
(bad)
mov
je
loope
adc
mov
xchg
inc
xlat
jp
xor
mov
sbb
shl
lahf
je
xchg
cmps
xor
xchg
mov
xchg
test
push
mov
int3
xchg
adc
xor
sub
cmp
cli
shl
bound
or
or
pop
mov
aam
mov
rcl
adc
mov
xor
mov
in
mov
jg
int
sub
xor
cmp
xchg
cmp
push
jg
retf
push
shl
cs
cmp
in
call
pop
stos
mov
outs
ds
jnp
mov
mov
push
pop
pusha
and
cmc
test
call
or
and
push
push
in
sub
dec
das
xchg
jle
adc
repnz
imul
aas
lock
dec
adc
xlat
inc
aad
cdq
neg
fs
mov
xchg
mov
sub
jp
bound
sub
fsub
retw
and
cmp
and
push
ins
pop
adc
push
jnp
or
and
mov
add
jle
imul
xchg
and
ins
and
push
arpl
lahf
jmp
nop
cmc
xor
inc
mov
pop
and
mov
adc
xchg
sbb
ret
cmp
pop
clc
mov
or
pop
or
outs
inc
push
xor
mov
inc
fdiv
mov
sub
mov
fsubr
inc
and
jle
add
lock
pop
jp
adc
out
sub
or
push
add
sub
mov
xor
fisubr
mov
retf
push
xor
ret
je
ja
mov
dec
inc
test
sbb
mov
push
or
fst
cmps
ins
fs
sub
and
adc
xchg
scas
mov
mov
jmp
js
clc
data16
sbb
cmp
lock
in
adc
xor
fnstenv
movs
iret
sub
cmc
mov
(bad)
cmp
xchg
mov
cdq
iret
adc
lods
and
push
(bad)
xchg
outs
sbb
out
adc
jmp
dec
mov
dec
test
push
pop
daa
push
xor
sub
jmp
cmc
sub
or
xchg
inc
enter
and
and
inc
xlat
out
aas
mov
outs
jbe
inc
das
hlt
cmp
pop
mov
std
pop
sub
int3
xchg
sbb
mov
adc
jp
loopne
jne
mov
mov
int3
leave
ss
ret
aad
inc
jnp
test
inc
ins
cs
mov
and
dec
jo
mov
ja
add
cwde
push
push
test
aas
sete
stos
mov
or
mov
and
mov
pop
loopne
inc
mov
stos
out
sub
or
inc
inc
out
ret
add
dec
in
mov
jp
pop
mov
jae
sbb
out
popa
mov
dec
scas
rcl
adc
scas
scas
xchg
lods
mov
and
add
sub
cmp
fst
std
fwait
lgs
leave
ins
push
cmc
sti
add
aad
and
mov
add
adc
cmp
lock
sub
push
loope
icebp
inc
or
ins
loope
push
repnz
pop
push
add
mov
sub
shl
sub
pusha
sbb
push
je
or
xchg
and
test
add
jb
(bad)
(bad)
pop
out
mov
pop
lahf
inc
and
dec
lea
movs
fmul
add
add
fstp
push
xchg
cmp
pop
sub
outs
dec
arpl
test
lock
sub
addr16
xor
stos
dec
sub
mov
cs
push
xor
pop
or
loop
(bad)
dec
(bad)
xor
add
xchg
or
cwde
mov
int
dec
ss
cld
mov
jmp
xor
add
loope
ret
add
arpl
shl
mov
nop
out
push
lds
out
rcr
les
pop
lea
iret
jp
cmp
(bad)
sub
inc
mov
sub
or
mov
loop
ss
push
(bad)
int3
jmp
xor
leave
cmp
(bad)
out
mov
mov
gs
es
lods
inc
pop
inc
mov
or
outs
sub
cmps
or
out
retf
xchg
aad
pusha
inc
(bad)
add
mov
fidivr
ret
add
jb
add
fadd
push
cdq
adc
mov
push
out
push
push
iret
sbb
lea
(bad)
jne
add
in
xchg
jg
pop
inc
sti
ins
cmp
das
cmps
pop
mov
imul
std
arpl
fisttp
adc
pusha
jns
ss
xchg
inc
loopne
aam
add
mov
ret
pushf
(bad)
fst
xor
test
fwait
add
mov
shl
fsubp
je
adc
xor
add
call
sub
xchg
popf
inc
cmp
stos
push
dec
ss
and
or
mov
xlat
push
jecxz
dec
(bad)
div
mov
mov
mov
add
xchg
and
cdq
sbb
jmp
retf
es
add
cli
fld
xchg
shl
out
pop
fisttp
and
add
call
jno
dec
sbb
mov
sbb
movs
or
popa
mov
or
aas
and
jl
jae
fst
jns
aad
and
or
jle
push
adc
dec
adc
fldcw
mov
jbe
xchg
aad
ret
cs
shl
sub
jns
js
cld
and
mov
outs
sti
test
das
xchg
mov
mov
sbb
jecxz
jne
pop
cdq
mov
imul
xor
fnstsw
xchg
sar
push
popf
cmc
icebp
ja
stc
(bad)
movs
push
mov
rol
imul
mov
inc
dec
fsub
in
push
pop
mov
cmc
or
ret
aaa
dec
jmp
jg
hlt
ins
jns
ds
adc
nop
fs
iret
jae
ss
iret
(bad)
das
push
sub
mov
bound
lahf
into
std
fild
jo
xchg
inc
push
and
shl
sahf
outs
push
clc
dec
mov
mov
js
jle
xchg
pushf
xor
in
adc
push
aam
jo
addr16
mov
ds
mov
sahf
inc
(bad)
xchg
mov
hlt
out
cmp
lahf
add
lods
ret
xor
out
adc
sub
xchg
das
cmp
icebp
(bad)
inc
xchg
loope
jmp
sub
call
out
bound
pop
jl
mov
test
retf
xchg
sbb
gs
popf
sbb
inc
in
mov
xor
dec
xchg
cmps
ret
adc
cmp
sbb
popa
push
out
mov
cmp
mov
dec
loopne
and
leave
(bad)
jge
daa
lock
imul
xor
push
jae
mov
les
pop
mov
(bad)
adc
ffree
mov
arpl
jp
mov
sub
in
retf
jmp
test
cmc
lods
cmp
jg
inc
clc
jp
fdiv
jae
enter
(bad)
fisub
pop
push
scas
dec
inc
xchg
nop
in
aaa
and
rol
mov
dec
push
dec
lea
or
repz
add
das
in
aad
bound
cmp
mov
(bad)
or
dec
(bad)
push
icebp
cmp
mov
push
mov
xor
mov
mov
sub
pop
popa
test
ret
iret
dec
pop
repnz
sub
mov
xchg
or
and
scas
sbb
fidivr
xchg
int3
sahf
stos
cmovae
ficomp
xchg
ret
jo
jmp
mov
jecxz
loop
jo
inc
int
pop
fcom
pushf
mov
mov
pop
xchg
jle
xlat
jae
gs
and
and
nop
dec
int3
loope
(bad)
inc
sbb
and
adc
xchg
fldenv
jg
into
sbb
pop
adc
mov
adc
pop
aad
pop
jo
mov
pusha
or
cmp
xor
scas
jmp
repnz
adc
sub
pop
mov
xchg
cld
xlat
or
push
mov
ds
(bad)
aad
xchg
retf
xchg
jae
dec
xor
add
lea
cmp
in
cmps
cmp
sub
call
and
sbb
(bad)
mov
outs
addr16
call
adc
aas
mov
out
(bad)
dec
xchg
popf
xchg
xor
stos
out
mov
sbb
enter
cmc
pop
inc
jle
loopne
cdq
test
add
push
out
pop
lahf
enter
out
pop
jmp
xor
test
ss
xchg
dec
dec
test
not
fsub
fcom
ror
je
jle
pop
sbb
shl
jle
mov
xchg
cmp
pop
lods
cmp
mov
shl
jbe
lahf
sar
dec
scas
test
xchg
pop
mov
das
push
daa
out
pop
into
arpl
xor
jbe
cmp
xchg
or
mov
inc
fimul
fcomp
das
jne
sbb
test
jne
xchg
cmp
pop
psrlw
retf
dec
pop
sbb
cs
sub
jmp
imul
xor
mov
clc
imul
popa
jbe
mov
push
pop
mov
jecxz
stos
repnz
rcr
movs
loopne
push
outs
xchg
or
or
mov
lods
add
and
call
mov
cdq
adc
ret
inc
jb
adc
mov
dec
int3
lods
add
lea
adc
push
outs
mov
icebp
test
mov
xor
popf
jmp
ds
push
jnp
sbb
dec
xchg
push
ret
(bad)
lods
pushf
sbb
sbb
fnstenv
mov
dec
cmp
jmp
mov
loope
(bad)
jge
pop
sahf
movs
aam
inc
cmc
or
xor
sub
sbb
sbb
sahf
neg
cmps
shl
inc
sbb
ja
out
cwde
sub
das
push
std
push
adc
xchg
test
mov
(bad)
lods
ins
adc
xchg
jae
aaa
adc
pop
sbb
fwait
xchg
mov
and
xor
into
xchg
ret
jb
dec
ja
cmp
jnp
add
rcr
push
mov
aad
xchg
or
mov
iret
jecxz
or
xchg
push
outs
scas
sahf
sbb
out
stos
xchg
and
rcr
xor
cmc
call
inc
fild
jp
rcl
xor
loop
pushf
adc
mov
lock
cmps
int
pop
sbb
fisub
jae
mov
ja
mov
popa
aas
fisubr
and
sti
mov
iret
out
scas
inc
retf
lahf
pop
sub
iret
add
pop
jne
mov
fsubr
les
push
mov
mov
sub
retf
xor
jmp
jecxz
(bad)
lahf
movs
std
adc
jb
fcom
add
aad
out
repz
cmps
mov
fld
sbb
xchg
xchg
mov
sbb
mov
aaa
jl
arpl
aaa
aad
mov
jge
xor
stos
ret
lods
loop
jecxz
pop
dec
sub
sbb
push
sbb
retf
mov
paddsb
push
addr16
call
and
call
and
inc
mov
cmps
jle
sar
repnz
ins
fisubr
test
mov
xchg
cwde
std
lods
mov
shl
push
ins
jmp
jns
xlat
ins
mov
addr16
inc
sub
adc
push
or
add
in
mov
les
mov
lock
pushf
test
in
sbb
cmp
fs
lock
loopne
add
scas
add
and
inc
in
adc
pop
ret
xchg
adc
movs
xadd
fwait
mov
jns
xor
pop
aas
pop
daa
adc
retf
loop
sbb
pop
shl
out
shl
in
inc
sub
fs
fist
mov
pop
icebp
mov
push
mov
add
sub
shl
(bad)
ins
pop
pop
mov
jnp
shl
imul
add
scas
mov
mov
jecxz
push
cmps
xor
pop
sub
cmp
push
jbe
pop
mov
out
sub
pop
shl
jg
cmp
call
popf
ins
pushf
xlat
test
enter
into
dec
mov
fsubr
aam
xchg
xlat
push
add
clc
push
push
adc
hlt
add
xlat
cvttps2pi
lods
add
push
pop
jno
push
xchg
xor
in
sbb
int
mov
mov
scas
ret
xchg
inc
stos
ret
push
stos
pop
pop
aas
(bad)
mov
and
test
(bad)
jne
test
movs
fnstenv
dec
sbb
imul
hlt
lock
or
js
sub
xchg
retf
xor
aas
or
arpl
leave
loop
adc
mov
ret
jmp
sbb
lods
ja
xor
add
dec
loope
fsubr
test
jmp
inc
stos
inc
mov
ret
pop
sbb
ds
addr16
adc
faddp
dec
fs
mov
ret
pusha
scas
xlat
xchg
div
add
and
adc
xor
int3
mov
mov
xor
in
mov
cmps
adc
loopne
or
cwde
sub
mov
xor
xlat
mov
dec
push
scas
push
pop
call
mov
adc
add
cmp
sbb
int
mul
adc
xor
pop
xor
adc
jmp
mov
add
fdivr
(bad)
dec
dec
mov
mov
dec
sub
add
jne
mov
cdq
nop
inc
fldl2t
mov
push
enter
inc
add
cmp
fistp
test
test
sar
mov
mov
mov
ja
ds
mov
call
mov
fs
push
or
ret
fdivr
push
and
in
rol
inc
enter
sar
in
ins
mov
mov
jno
add
sbb
mov
xchg
sub
push
aad
push
and
pop
push
sub
retf
imul
xchg
aas
cwde
cli
mov
cmc
pop
ret
ret
xor
add
adc
mov
mov
fidivr
push
stc
imul
(bad)
mov
mov
xchg
push
(bad)
test
loop
loopne
or
mov
push
rol
inc
and
push
jmp
mov
push
jns
sub
adc
lods
pop
adc
sub
in
pop
push
out
xor
inc
xchg
les
cs
xchg
(bad)
or
or
fimul
push
mov
aad
pop
jmp
and
push
ret
and
inc
jp
loopne
call
pop
pop
mov
jmp
jae
int
push
jecxz
repnz
cmp
xor
pop
lods
(bad)
pop
jnp
repz
xor
fidivr
t1mskc
retf
xchg
jbe
dec
loope
sbb
pop
sbb
jo
iret
dec
mov
mov
mov
xchg
sbb
cmp
cdq
or
das
popa
fwait
xlat
xchg
jno
gs
out
sub
push
cmpxchg
stos
pop
(bad)
popa
popf
or
je
aam
inc
leave
or
cmp
sub
pop
mov
daa
sub
pushw
mov
dec
sub
jb
or
cmp
xchg
ins
pmaxub
(bad)
jae
in
sub
cmp
and
inc
adc
bound
setg
das
cdq
sub
xchg
jmp
dec
cld
cmp
pop
and
xor
ret
mov
sub
adc
jne
and
jmp
cmp
inc
jmp
outs
icebp
mov
in
jnp
and
push
add
fld
adc
ret
sahf
cli
cmp
inc
popf
mov
sub
lahf
add
jno
inc
test
pop
xchg
dec
in
test
mov
iret
aas
in
add
and
icebp
in
stos
(bad)
add
ins
das
and
cmps
aam
push
add
adc
cdq
sbb
xor
rcr
jb
popf
out
retf
sub
sbb
and
adc
inc
or
and
cmp
js
dec
xor
or
cli
cmp
mov
pop
push
popa
ret
loop
test
and
jbe
in
out
fs
push
stos
int3
fmul
cmp
outs
jmp
(bad)
xor
adc
jo
xlat
(bad)
repnz
rol
xor
inc
xor
test
in
add
pop
frndint
inc
or
jbe
sbb
add
or
mov
push
or
sub
jo
ret
add
out
jmp
leave
ins
xchg
movs
test
test
mov
dec
push
xor
sti
jle
dec
sti
(bad)
loope
and
inc
(bad)
inc
jns
leave
add
jb
dec
and
xor
mov
(bad)
rcr
into
mov
movs
jge
jb
aam
retf
dec
shl
xor
lahf
aam
fs
mov
and
push
pop
add
push
popa
test
and
call
pop
loopne
jmp
push
cdq
ins
ins
mov
dec
jmp
mov
inc
popf
pusha
mov
aam
rcl
test
sbb
cmc
xchg
rcl
and
in
loope
imul
mov
sahf
mov
jmp
jo
sbb
xor
enter
lods
xchg
mov
dec
pop
outs
mov
sahf
and
es
push
aam
nop
xchg
mov
adc
mov
aam
aaa
sbb
pop
pop
xor
sbb
dec
push
mov
in
xor
aam
fcomip
adc
cmc
xor
xor
enter
ret
dec
fst
pop
xor
clc
(bad)
ins
mov
push
outs
cmp
adc
test
add
mov
and
xchg
pop
adc
and
sub
xchg
bound
and
or
popf
bnd
xchg
jmp
inc
xchg
mov
adc
sahf
jp
cmps
add
xchg
mov
loopne
ror
push
sbb
or
and
pusha
gs
push
sub
(bad)
loop
mov
push
test
dec
ds
daa
or
jmp
cld
ins
or
and
adc
lods
jnp
dec
das
adc
jb
cmp
adc
push
jb
outs
mov
in
adc
inc
xchg
cld
in
mov
xchg
xor
push
fcomp
or
nop
mov
(bad)
into
jmp
sbb
push
jge
xor
fist
or
fucomp
jb
xor
add
inc
adc
add
test
push
inc
xor
test
sub
(bad)
cmp
cwde
pop
and
adc
jmp
fmul
cmps
cmp
mov
sbb
pop
sbb
sbb
(bad)
sub
fisub
dec
sti
daa
jnp
inc
sub
iret
xor
out
mov
(bad)
aam
dec
inc
and
int
push
jb
aad
test
pop
push
sbb
cdq
ss
fs
inc
sbb
xchg
shl
mov
pop
aad
cmp
xor
sbb
or
int3
jnp
pop
add
pmaddwd
fs
inc
push
mov
stos
adc
rcr
dec
mov
iret
movs
jno
adc
sub
push
mov
stc
setns
cld
mov
xchg
cmps
fsubr
aaa
inc
inc
lods
loop
in
jecxz
out
jge
js
test
mov
in
sub
pusha
pop
outs
fistp
push
and
(bad)
cmp
scas
sub
jl
inc
ins
call
ret
cli
cmc
jp
xchg
fnstenv
pop
push
sub
xor
sbb
or
pop
sbb
into
popf
xchg
pop
xchg
daa
push
xchg
fwait
xchg
cs
cmp
mov
inc
adc
dec
mov
out
shl
pusha
loop
fwait
or
cs
lods
cmp
xor
ins
sahf
iret
mov
pop
imul
sbb
xchg
cli
mov
sar
imul
aad
xor
cli
inc
sub
cmp
scas
mov
or
aam
in
cwde
cmp
jns
(bad)
retf
jecxz
add
sbb
scas
repnz
sar
mov
ds
movs
pusha
mov
sub
or
adc
cmp
cmp
ret
pop
and
and
aas
fs
(bad)
mov
fadd
ds
dec
inc
jmp
in
push
push
mov
adc
sub
lods
int3
cmp
pop
mov
repz
in
sti
repz
push
mov
sbb
lods
adc
loopne
push
fnstsw
or
sub
cmc
out
cld
ror
xchg
fwait
popa
call
aaa
or
pop
in
rcl
and
movs
mov
in
cs
mov
jecxz
push
jl
adc
push
pop
push
ror
inc
imul
stc
out
mov
sub
push
sahf
clc
pop
cdq
outs
into
fiadd
int
xor
sub
dec
pop
call
(bad)
in
lahf
int
xor
sub
pop
fiadd
int3
push
cmp
jecxz
mov
adc
bound
add
jmp
add
addr16
(bad)
inc
int
jae
call
aas
setge
mov
jbe
out
push
jno
push
adc
sar
inc
pop
cmp
lds
call
sbb
mov
movs
(bad)
mov
xchg
inc
fcom
jge
imul
and
dec
cmps
(bad)
in
test
cli
les
mov
iret
ins
outs
fdivr
enter
xor
and
mov
push
jae
cmp
jecxz
mov
test
mov
jmp
pop
cmps
cmp
and
test
scas
(bad)
int
adc
call
cmp
movs
test
fsubr
cs
pop
aad
mov
sub
jns
std
cmc
xchg
fnstcw
not
jl
rcr
pop
fldcw
fcomp
mov
pushf
jne
sub
mov
and
loope
mov
ret
mov
inc
imul
inc
in
mov
add
xchg
retf
jp
arpl
loopne
in
add
js
mov
xchg
mov
out
jmp
sete
sbb
arpl
(bad)
ret
(bad)
(bad)
leave
adc
mov
dec
in
push
ins
adc
sub
das
lahf
bnd
sbb
pop
shr
fistp
and
jl
dec
test
ret
jl
sub
in
fs
mov
xor
fnsave
push
lahf
jg
test
aas
rep
out
jl
push
das
arpl
inc
inc
das
mov
jbe
jmp
nop
cmp
fbstp
jnp
not
jae
push
adc
pusha
loopne
inc
popa
(bad)
pushf
xor
push
or
mov
nop
(bad)
rcl
in
xchg
call
add
gs
call
imul
test
cld
rcl
pushf
jge
and
movs
dec
xor
ret
ficomp
mov
out
pop
movs
jbe
xchg
mul
lock
cmps
mov
rcr
lods
add
adc
sub
std
ret
fisttp
push
push
mov
imul
push
push
lea
jnp
in
rcr
ret
mov
xchg
inc
inc
push
jmp
sub
xor
and
sbb
sbb
sbb
inc
lods
daa
sub
repnz
outs
mov
cld
mov
sub
fstp
outs
push
or
pop
adc
jmp
xchg
sub
lods
and
lds
test
or
pop
pop
shl
lods
xchg
xchg
icebp
fs
push
cdq
ja
mov
adc
sub
loope
test
test
rol
mov
mov
and
jo
mov
fcmovnbe
fnstcw
shr
sbb
ret
das
mov
sbb
mov
lods
(bad)
shl
or
jns
and
in
jl
jnp
pusha
cs
xchg
dec
pop
lock
fwait
arpl
push
repnz
or
shl
or
xor
and
push
aaa
pop
cdq
cld
xor
push
fucomi
adc
icebp
data16
out
push
loop
mov
add
adc
dec
dec
lock
imul
sahf
ins
aam
loop
rol
xor
in
in
mov
retf
pop
xchg
adc
mov
inc
fadd
dec
pop
and
jne
mov
out
ja
cmp
retf
jl
push
cmp
stc
iret
paddd
xor
and
inc
addr16
lods
test
sbb
and
and
adc
xlat
lods
stc
inc
xchg
repz
mov
xor
add
stos
mov
bound
mov
dec
test
add
(bad)
jmp
adc
inc
sub
mov
cmp
clc
mov
ret
ss
mov
mov
or
adc
push
in
cmp
push
fadd
inc
imul
push
ror
retf
push
in
nop
sahf
cli
fld
cmps
or
in
fs
xor
mov
lods
xchg
xchg
mul
in
push
xlat
pop
cli
inc
and
lock
push
mov
retf
jle
ins
into
sbb
or
(bad)
mov
out
mov
mov
inc
fcomi
sub
jge
enter
fwait
xchg
int
ror
mov
mov
(bad)
pop
or
stos
mov
lods
sbb
cmp
pop
es
retf
popa
jo
test
mov
push
xchg
mov
cmp
push
outs
imul
out
rcr
xchg
cli
into
fstp
xchg
adc
sar
(bad)
das
mov
and
loop
fld
mov
mov
int3
cmps
and
imul
xor
fnstcw
push
cld
cwde
mov
pop
(bad)
(bad)
or
movs
mov
sub
pop
mov
ss
test
adc
retf
lods
mov
pop
push
inc
sbb
das
jmp
xor
xor
jmp
pop
push
add
push
sbb
nop
enter
adc
mov
push
iret
push
cli
dec
div
cdq
pop
stc
fidivr
lods
mov
pop
adc
or
movs
sub
xor
push
sub
fsubr
dec
in
leave
pusha
popa
movs
xor
and
loopne
or
or
mov
sbb
mov
adc
add
xchg
mov
sub
repz
mov
jnp
pop
aad
jecxz
ret
adc
xor
mov
cmp
sub
xchg
les
pop
push
cli
aad
xor
cdq
gs
push
sub
jle
call
loopne
push
mov
js
ret
adc
pusha
test
cmps
aas
pop
push
jae
sbb
jns
mov
inc
push
lods
xor
loope
popa
loope
dec
out
mov
cmp
dec
cs
imul
inc
out
xchg
loop
aas
(bad)
mov
or
sti
jbe
mov
pcmpgtw
shl
call
rcr
mov
or
ds
and
clc
adc
into
inc
push
mov
fld
out
(bad)
or
int3
jae
mov
jbe
(bad)
icebp
mov
adc
cs
mov
imul
xchg
jbe
mov
mov
add
(bad)
std
push
sub
adc
jle
push
cli
cmp
daa
push
popf
std
and
inc
fs
fst
mov
jo
(bad)
add
aad
mov
and
xor
movs
jp
add
cmps
(bad)
call
pop
pop
in
aaa
mov
repz
add
push
bound
enter
lea
sub
push
mov
add
push
lds
mov
inc
and
jnp
lods
mov
cwde
retf
shl
pop
jp
mov
dec
cmc
fistp
jmp
jmp
inc
xor
enter
mov
mov
(bad)
mov
int
inc
fisttp
es
jb
ror
iret
popa
int
mov
lea
test
lahf
ds
aad
test
leave
add
jno
push
adc
lods
int
outs
add
adc
xchg
mov
aaa
pushf
cdq
or
sbb
xor
in
sub
out
gs
xchg
icebp
mov
das
push
lahf
mov
mov
imul
(bad)
push
jo
cmp
stos
cs
call
dec
and
and
add
sahf
jmp
sbb
and
or
loopne
cmp
or
adc
cmps
vpxor
mov
into
push
addr16
movs
int
jbe
xor
rcr
and
fs
int
aad
test
test
inc
jecxz
jg
test
push
and
cmps
fimul
add
xchg
daa
push
inc
mov
cmp
push
mov
test
call
xor
pop
cmp
daa
add
sti
jbe
popa
jno
inc
dec
data16
daa
jae
mov
add
push
mov
dec
shl
neg
repz
mov
dec
dec
cmc
sbb
sbb
dec
bound
arpl
dec
dec
rcr
inc
xor
xchg
int
leave
push
add
and
mov
(bad)
clc
in
sub
inc
dec
mov
mov
je
mov
xchg
jp
(bad)
mov
gs
mov
(bad)
popf
or
or
in
mov
push
out
mov
lahf
ss
sub
test
jae
in
adc
jp
fdiv
scas
dec
cmps
arpl
ror
imul
mov
or
sbb
int3
call
jne
add
mov
sti
pusha
lods
adc
div
xor
es
adc
in
les
add
xor
cmp
mov
gs
jno
pop
leave
cwde
sbb
sahf
add
test
mov
jne
test
push
mov
into
loopne
imul
adc
pop
add
xchg
stc
cmp
xchg
jmp
xchg
dec
je
ffree
cs
push
inc
into
out
loop
jmp
adc
test
xor
and
or
(bad)
fcom
test
ss
mov
fcomp
adc
imul
ret
sub
not
lea
mov
retf
jno
gs
sbb
mov
outs
test
mov
fcmovnb
loope
sub
sbb
aas
cmp
arpl
mov
(bad)
xchg
adc
sub
ss
aaa
xchg
adc
mov
aad
sbb
movs
stos
leave
xchg
in
movs
test
aam
fwait
add
and
sub
outs
cmps
push
or
call
or
add
pop
loop
pop
xor
in
jno
sbb
jmp
ins
sbb
js
(bad)
dec
jle
std
and
push
stos
or
fld
test
(bad)
xlat
xchg
mov
pop
movs
mov
jnp
xor
or
arpl
hlt
(bad)
jmp
cmp
iret
dec
out
addr16
test
ror
xor
test
(bad)
add
jo
or
jge
lods
aam
xchg
dec
mov
dec
dec
int
sub
lods
push
dec
mul
xchg
mov
fidiv
das
adc
dec
or
mov
jge
(bad)
int3
test
sub
into
xchg
xchg
scas
hlt
jl
ret
lods
xchg
dec
push
lock
int3
test
inc
jb
pop
cmp
mov
(bad)
(bad)
scas
cdq
sub
sahf
inc
cmps
jge
mov
int
add
enter
cmp
daa
and
add
movs
add
adc
dec
sahf
xchg
dec
xor
mov
jbe
sar
or
fs
cmp
dec
or
sbb
cmps
dec
sar
push
movs
sar
cmc
xchg
adc
and
lds
lods
in
test
fwait
sub
pusha
adc
xor
fld
dec
sbb
into
in
neg
mov
cmp
movs
movs
inc
mov
or
mov
xchg
mov
les
fdivr
pusha
pop
int3
sahf
in
push
pop
or
(bad)
retf
pop
and
sar
fld
es
addr16
or
push
xchg
lea
test
or
xchg
mov
inc
xchg
inc
sub
pop
mov
scas
fiadd
test
aas
and
and
add
ss
inc
pop
inc
jbe
adc
popf
test
loop
hlt
or
jmp
in
push
(bad)
outs
or
adc
and
pop
sub
call
push
cdq
cdq
or
ror
xor
fld
push
mov
enter
mov
arpl
rol
jbe
mov
sub
cmc
(bad)
scas
mov
stos
rcr
cmp
sub
loope
xor
dec
jmp
xchg
ja
mov
fdivrp
xor
fldenv
cmps
addr16
sbb
mov
std
jge
aam
mov
mov
loopne
data16
jl
rol
cmp
dec
shr
mov
jae
add
cmp
pop
inc
xor
jl
hlt
icebp
inc
(bad)
jmp
test
inc
push
xchg
outs
ror
pushf
jns
popf
mov
jno
cmps
mov
push
push
idiv
arpl
in
mov
push
into
jbe
pop
sbb
jne
mov
out
cld
mov
out
add
dec
sbb
mov
xor
jo
pop
adc
jae
mov
ins
je
ret
or
cmp
test
nop
scas
sub
push
stc
addr16
sub
jecxz
xchg
out
sub
(bad)
add
popa
in
xchg
cmp
(bad)
push
inc
cli
leave
lods
mov
add
icebp
imul
icebp
ss
xor
xor
pushf
into
ja
pop
lds
mov
dec
and
mov
(bad)
mov
add
pop
js
xor
mov
adc
gs
mov
(bad)
(bad)
xor
out
push
in
test
cmp
test
lock
(bad)
dec
out
jmp
dec
jge
mov
cmp
loopne
jmp
push
ss
scas
out
add
lahf
loopne
push
les
gs
repz
cdq
aam
retf
jne
add
imul
jns
push
mul
fist
dec
sub
push
cmp
xor
adc
ds
outs
fstp
cmp
retf
push
shl
fld
adc
dec
fst
mov
pop
xchg
jns
pop
adc
fcom
jmp
clc
dec
and
jno
push
les
adc
(bad)
scas
retf
push
mov
clc
mov
mov
inc
cmc
mov
cmps
jp
rol
mov
inc
jmp
mov
das
cs
nop
outs
fs
retf
add
mov
xor
inc
lock
xchg
mov
imul
iret
icebp
and
pop
pop
cmp
fadd
fst
sbb
fwait
(bad)
pushf
adc
retf
inc
xor
fcmovb
cmp
imul
dec
or
adc
int
(bad)
bound
inc
mov
(bad)
push
nop
outs
mov
cdq
inc
mov
cli
jne
xlat
add
lods
adc
ror
push
cmp
jle
cli
inc
pop
fbld
push
cmp
aam
add
xchg
dec
xor
push
mov
xor
in
sub
dec
push
pop
sub
and
je
push
mov
js
xchg
repnz
adc
cli
or
out
xor
pop
movs
mov
cmp
(bad)
in
adc
and
xchg
adc
lahf
sbb
inc
mov
data16
jge
or
sub
inc
cmp
xor
jb
test
neg
adc
xchg
call
push
(bad)
xlat
ins
cmp
jo
mov
mov
xlat
mov
sti
or
pushf
(bad)
int
ss
loope
xchg
sbb
jl
mov
sti
imul
adc
xchg
xchg
and
or
shr
ja
(bad)
scas
mov
scas
call
cmp
aam
cmp
push
pop
sar
jg
int3
std
xor
addr16
lds
mov
arpl
mov
adc
cmp
scas
icebp
shr
sbb
mov
xor
cmp
clc
lea
sub
inc
outs
pop
push
js
sti
xor
cdq
adc
push
cmps
jp
or
or
xchg
(bad)
nop
stc
ins
inc
and
sub
outs
mov
cli
pop
call
xchg
mov
(bad)
aas
pop
cmp
push
push
jo
add
lock
jmp
mov
mov
xchg
int3
dec
lahf
adc
dec
mov
adc
inc
in
test
xor
cmc
(bad)
int3
sbb
jmp
xchg
sub
rcl
gs
adc
sbb
fist
pop
imul
jge
sbb
test
rcl
jbe
(bad)
outs
in
or
iret
jo
pusha
jae
pop
and
jno
(bad)
js
pop
mov
loop
mov
pop
shr
jo
push
mov
xchg
cmp
and
in
or
aam
fsubr
mov
aad
adc
sbb
jnp
hlt
push
jmp
stc
pop
ror
cld
int
push
fs
adc
push
out
retf
adc
dec
push
popf
sbb
xchg
in
aas
inc
or
xchg
test
push
mov
inc
push
jge
push
mov
xor
ja
push
gs
out
fstp
xor
inc
dec
pop
pop
and
inc
call
xchg
loopne
inc
icebp
mov
(bad)
ja
rol
jmp
push
jl
lahf
fld
mov
jmp
leave
cwde
jl
sahf
ins
not
into
mov
sti
cmp
rcl
cs
enter
inc
xlat
mov
dec
rol
sbb
lds
(bad)
and
lahf
jge
mov
xor
mov
fist
neg
pop
sub
add
imul
popf
add
sahf
sbb
add
adc
and
xor
inc
scas
xor
push
mov
add
les
pop
(bad)
in
jbe
cdq
push
adc
mov
jg
dec
mov
cmps
jmp
rcr
out
mov
xor
xor
dec
jmp
in
cmc
retf
xchg
cmp
sar
xchg
or
pop
sub
aas
rcl
mov
outs
add
cmp
cld
push
pop
(bad)
(bad)
push
stc
jl
and
pop
data16
(bad)
shl
fsub
inc
or
imul
fdivr
(bad)
outs
push
inc
or
cmp
clc
mov
cli
sub
cmps
mov
or
adc
xchg
or
retf
(bad)
mov
sbb
shl
mov
mov
mov
gs
ret
mov
mov
mov
lods
fild
cmp
adc
stos
movs
ficomp
mov
retf
pop
adc
jle
into
and
ret
xchg
pop
push
inc
jmp
sub
pop
stos
xchg
push
mov
dec
push
jno
adc
and
shl
and
call
xchg
into
imul
movs
jae
pushf
jb
pop
nop
xor
(bad)
cmp
add
dec
gs
pushf
fdivp
pop
in
fadd
push
jge
shl
cdq
(bad)
stc
inc
mov
push
leave
adc
add
fmul
fsubr
in
lods
pop
jns
rol
jne
js
jne
inc
fist
add
daa
fidiv
das
mov
je
outs
loope
xchg
les
cmp
inc
xor
mov
sub
das
stos
xor
fcmovu
or
cwde
hlt
loopne
or
out
sbb
mov
test
aaa
xchg
xchg
cld
leave
inc
and
add
mov
jae
mov
pop
push
cmp
in
pusha
mov
int
mov
mov
icebp
lds
xchg
stc
mov
ror
outs
dec
in
pop
fcmovnu
out
cmp
call
test
dec
in
cmp
dec
daa
icebp
rcl
(bad)
loop
add
scas
dec
loope
mov
xchg
push
call
cmps
pop
and
xchg
adc
cs
jo
xchg
adc
lock
stos
es
push
push
sar
mov
popf
test
pop
das
in
push
cmp
loopne
(bad)
call
int3
inc
sub
ins
(bad)
fcomp
cli
fwait
into
in
in
inc
out
xchg
mov
movs
jecxz
test
or
in
inc
mov
xchg
xchg
cwde
xchg
mov
fstp
fs
adc
push
inc
(bad)
add
scas
jge
repz
retf
and
gs
sub
cmps
jmp
pop
adc
cmc
retf
jns
xchg
pand
sar
sub
mov
fwait
push
jno
jecxz
pop
gs
or
push
mov
cmps
fisub
xor
mov
fcmovnbe
inc
jno
mov
and
ret
stos
or
loop
cmp
bnd
mov
sub
icebp
shr
int
inc
jne
je
lods
(bad)
loop
sub
mov
inc
rol
dec
call
or
retf
add
retf
call
push
add
pusha
add
in
(bad)
mov
or
push
cmp
push
jo
loope
mov
test
add
addr16
test
rol
jmp
mov
push
imul
push
leave
jb
inc
sub
(bad)
mov
mov
mov
jecxz
pop
dec
mov
lahf
xor
out
mov
shr
mov
sub
sbb
iret
in
add
or
cmp
pop
xor
mov
jmp
xchg
(bad)
mov
sub
bound
cmp
add
dec
leave
cmp
lea
mov
dec
(bad)
dec
or
mov
jo
inc
repz
xor
jl
dec
jbe
data16
xchg
mov
xor
sahf
inc
fld
(bad)
xchg
sub
xchg
dec
push
stc
ror
pusha
xor
fld
xchg
sub
xor
lahf
ret
or
out
jb
(bad)
cwde
jne
mov
call
mov
inc
test
mov
loope
dec
inc
mov
mov
fs
xor
dec
sar
push
adc
dec
jmp
inc
out
add
push
test
add
dec
push
lea
xor
xor
out
or
xor
xchg
les
shr
imul
loopne
cmps
scas
(bad)
repnz
and
test
xchg
les
popf
ins
std
mov
mov
lahf
and
aaa
jle
imul
and
xlat
je
(bad)
fmul
lahf
scas
cdq
adc
lahf
push
dec
jp
(bad)
cmp
cmps
movs
jns
pop
(bad)
repnz
addr16
into
aaa
inc
popf
inc
mov
xchg
out
inc
call
popa
xchg
test
fcmovnu
mov
cwde
dec
adc
int3
bound
adc
maxps
mov
or
hlt
mov
xlat
mov
mov
(bad)
jb
sub
adc
mov
ror
and
xchg
mov
sub
lock
push
arpl
scas
mov
adc
les
fistp
jae
(bad)
loop
pop
dec
mov
cmps
mov
fisttp
test
mov
jmp
inc
mov
sbb
jecxz
xchg
cmps
xor
arpl
mov
ret
jo
add
sbb
aas
add
mov
loop
call
add
and
dec
and
add
ret
lahf
mov
mov
and
psubusw
push
fldcw
loope
xchg
popa
push
iret
cmp
fist
jns
inc
dec
ins
hlt
pop
mov
mov
adc
dec
mov
jnp
and
aad
int3
sub
sub
into
ds
pushf
xchg
xor
mov
xor
cld
cdq
stos
rol
in
pop
push
test
lods
jl
jb
cmc
push
xchg
dec
retf
(bad)
std
cmps
fisubr
imul
or
cmp
push
mov
sub
jmp
xchg
and
inc
aaa
mov
retf
test
cmp
and
mov
sahf
adc
retf
jnp
loope
sbb
bound
leave
push
in
adc
mov
outs
fcom
outs
xlat
imul
jne
xor
xor
loopne
test
sub
cs
pushf
aaa
sbb
adc
sub
push
les
in
add
popf
stos
call
xor
or
dec
stos
cdq
mov
add
cmps
idiv
shr
fild
sbb
mov
sub
cmc
cmp
pop
and
lds
or
mov
jns
stos
push
jle
jo
loope
xchg
test
mov
xchg
push
lea
bound
fisub
cs
adc
fisttp
pushf
aaa
ins
std
cmc
je
mov
mov
outs
adc
or
rol
mov
mov
mov
(bad)
retf
add
adc
outs
clc
push
nop
daa
aad
add
cmp
xchg
sar
lods
fidivr
sahf
out
ret
sub
daa
lods
sbb
call
mov
jecxz
adc
jae
cmp
shl
cwde
fisubr
scas
retf
fs
jp
pop
push
add
mov
pushf
bound
mov
and
call
add
or
call
or
shl
inc
mov
and
cmp
rol
cdq
jae
sub
pop
cmp
stos
sbb
das
icebp
xchg
xchg
jge
aam
in
(bad)
addr16
or
mov
mov
or
xor
fld
stc
add
push
jne
sbb
pop
ror
fs
inc
movs
retf
pop
stos
jno
scas
pop
fidivr
adc
sar
test
xchg
mov
icebp
aad
dec
and
cld
push
mov
movs
ss
imul
dec
cmp
repz
nop
icebp
xor
push
jmp
in
sahf
fist
pop
inc
cmp
lods
inc
cmps
dec
mov
sub
dec
mov
pop
adc
or
add
(bad)
in
rcl
mov
ret
pop
adc
sahf
and
mov
dec
mov
push
addr16
je
outs
(bad)
outs
js
mov
fisttp
fdivr
xchg
out
scas
mov
call
cwde
ror
(bad)
fisub
stc
xor
cmp
inc
cwde
test
sbb
pop
mov
scas
clc
and
out
(bad)
stos
sbb
sub
add
leave
mov
or
mov
int3
mov
xchg
xchg
cmp
dec
or
jecxz
xchg
mov
popa
or
jno
jae
adc
lods
movs
cmps
out
addr16
rcl
jno
sti
mov
imul
frstor
add
je
js
js
iret
xchg
inc
add
cmp
jl
loop
test
push
shr
cdq
jns
int3
and
hlt
into
mov
mov
fist
aam
out
repz
xor
fmul
imul
fadd
cmp
test
mov
lea
imul
jns
sti
neg
in
enter
sbb
jmp
mov
jne
out
fmul
shl
mov
push
mov
dec
pop
les
jbe
sti
pop
push
imul
sub
fiadd
iret
cli
sbb
mov
lds
imul
cmovg
adc
mov
push
lahf
xchg
adc
lods
ja
mov
aas
lods
hlt
ror
or
test
xchg
jg
lods
popa
sub
push
jbe
outs
cdq
and
or
mov
shl
sub
xchg
xor
retf
and
add
stc
sbb
xchg
ja
adc
in
cmp
dec
mov
push
(bad)
loop
push
dec
mov
pusha
in
retf
and
xor
dec
ret
(bad)
icebp
call
scas
mov
test
ret
ins
pop
in
jno
sub
mov
pop
jg
and
sub
retf
pop
sar
adc
mov
or
jge
cmps
movs
or
cmp
push
and
in
pop
mov
push
mov
mov
inc
push
xchg
mov
xor
bound
xchg
(bad)
out
or
xchg
mov
or
in
test
sahf
push
ret
cmps
das
mov
mov
sub
imul
fwait
js
sub
test
inc
adc
daa
mov
cld
xchg
out
push
ins
cmp
jg
jmp
movs
cmc
and
ret
sbb
pop
mov
loope
clc
pop
jmp
jle
add
repz
retf
cld
mov
scas
dec
xchg
mov
and
mov
int
lods
stos
add
add
mov
and
sub
mov
mov
(bad)
jns
test
sti
test
int3
adc
push
loopne
pop
iret
shl
in
mov
pop
cdq
loopne
sar
scas
shr
adc
out
ins
xchg
and
sub
inc
mov
fcmove
test
pop
into
ja
xor
int3
ret
dec
cmp
inc
test
dec
jmp
xchg
in
or
inc
sbb
cmp
fnstenv
adc
push
out
mov
and
or
(bad)
fnstcw
inc
fadd
push
bound
inc
movs
test
gs
pop
mov
push
mov
and
pop
in
pop
ins
mov
pusha
xchg
dec
jo
imul
nop
ret
cmp
pop
das
cmc
outs
add
ins
retf
jmp
test
pop
jecxz
jbe
sub
fldcw
sbb
cmp
ret
imul
mov
cld
xor
out
or
dec
push
mov
rcl
dec
push
in
call
ins
mov
push
push
cmc
cmps
jmp
jb
dec
inc
inc
ror
out
add
rcl
adc
jl
ins
jecxz
or
adc
adc
jge
rcl
add
pusha
pop
dec
out
pop
lods
arpl
inc
or
retf
xchg
push
fxch
mov
fldenv
pusha
inc
out
leave
pop
xchg
stos
sbb
aaa
jns
ins
popf
(bad)
out
scas
outs
jge
(bad)
imul
push
adc
xchg
(bad)
les
jp
imul
imul
and
sbb
push
retf
out
lock
cdq
sub
ins
add
sub
sbb
sub
out
and
mov
gs
add
outs
in
ret
inc
jno
(bad)
loope
mov
pop
movs
into
or
out
lods
pop
fistp
stos
push
cmp
or
(bad)
into
or
mov
push
xchg
lahf
sub
loope
mov
or
add
adc
mov
xor
or
inc
in
jg
and
adc
push
iret
loope
fild
inc
out
add
(bad)
cmps
stos
cmp
mov
sub
pop
jne
in
jnp
cdq
xchg
xchg
mov
mov
xchg
mov
xchg
popa
jb
jle
dec
fwait
adc
inc
dec
mov
rol
in
cmps
loop
sub
push
mov
clc
xchg
xchg
cs
dec
jns
arpl
cmp
stos
int
and
sbb
adc
loope
ret
or
icebp
int
and
mov
mov
and
push
cmp
add
or
repz
aam
xor
cs
jle
mov
call
fwait
mov
fcmovnbe
push
dec
iret
les
mov
daa
mov
mov
pop
pop
and
xor
sub
add
fcom
xor
test
sti
cli
push
add
push
push
or
out
out
cld
jp
in
lea
jne
cdq
xor
inc
pop
add
call
xchg
fcomip
and
pop
jno
scas
xor
adc
add
mov
aaa
push
aam
jge
out
scas
dec
cmp
jecxz
int3
xchg
fs
xor
fisub
dec
enter
dec
mov
mov
fild
pop
scas
xor
add
push
popa
mov
ds
inc
fwait
stos
sbb
call
lods
test
mov
movs
shr
add
test
sbb
inc
outs
sti
jl
jns
cmps
jo
fmul
xchg
xor
lea
sbb
test
xchg
sahf
int
test
(bad)
sub
aaa
cli
loopne
sbb
scas
xchg
mov
bound
mov
xchg
ficomp
cdq
rep
adc
mov
shl
stc
mov
push
scas
push
movs
xchg
(bad)
int
retf
ja
rcr
and
xchg
sub
inc
imul
ror
imul
push
mov
fadd
jns
movs
shr
add
inc
scas
addr16
sbb
sbb
cmc
retf
and
sub
xor
and
pop
xlat
fnstenv
xchg
es
jmp
repnz
sbb
cmp
mov
mov
and
addr16
pop
imul
arpl
loop
pop
xchg
adc
fadd
imul
fwait
mov
xor
or
out
push
add
xor
into
ret
inc
sti
scas
lods
and
fidiv
ins
mov
xchg
mov
shl
shl
(bad)
fisubr
cmps
mov
(bad)
inc
xchg
sub
xlat
adc
outs
data16
xor
adc
mov
jne
and
enter
xor
jbe
cmp
int3
fst
dec
out
les
dec
(bad)
retf
cmp
iret
xchg
lea
xor
xchg
and
cmp
enter
aad
cli
fdivr
aam
clc
scas
addr16
mov
mov
mov
jne
lods
lahf
cmp
cmp
jo
clc
and
fsubp
mov
jbe
in
pop
(bad)
loopne
je
and
rcl
cmps
sti
pop
and
jp
push
sub
jmp
pop
pushf
shl
std
scas
mov
fldenv
xlat
sbb
pop
fmul
mov
push
push
rcl
mov
jecxz
ret
ficomp
mov
xchg
jmp
cwde
mov
xchg
xchg
pop
push
sub
mov
imul
xor
ss
mov
in
sahf
ins
xchg
retf
sub
and
mov
daa
std
xor
or
or
mov
into
ja
imul
bound
mov
es
inc
outs
mov
xchg
shl
sub
call
sbb
out
push
and
jmp
jns
adc
pusha
les
sub
push
lds
fstp
push
cmp
push
cmp
adc
sbb
pop
jns
std
out
stos
pop
pop
nop
cmp
adc
cdq
leave
xchg
cmps
in
cmp
fdivr
lea
mov
cli
cmp
xor
and
inc
out
and
xchg
les
and
stc
arpl
mov
sub
xor
cli
nop
jne
jl
mov
jmp
mov
es
inc
inc
jmp
das
ss
xor
in
fstp
lods
or
shl
xchg
mov
ficom
test
mov
imul
aas
popf
les
push
sbb
adc
xor
jnp
dec
add
or
out
jne
pop
jno
mov
(bad)
in
jns
mov
dec
fidiv
daa
mov
jg
imul
cld
jo
sub
inc
mov
dec
imul
push
sbb
in
lds
ds
lock
scas
jg
mov
sti
and
gs
dec
mov
or
xlat
dec
push
jg
sbb
sbb
xchg
lea
fcmovne
sub
lods
popa
push
dec
cmp
stos
ds
in
pop
in
and
cmps
pushf
cli
mov
push
and
push
mov
dec
inc
ret
xchg
pop
or
jno
call
mov
mov
mov
mov
(bad)
and
xchg
and
push
loope
(bad)
(bad)
in
out
mov
int3
mov
lea
add
mov
cmps
stc
or
cmp
and
mov
sar
shl
xchg
test
xor
jmp
mov
adc
test
inc
jne
int
ins
ins
cmp
jle
push
pop
sar
sbb
add
mov
push
add
push
adc
mov
arpl
test
ror
dec
xor
push
xor
mov
jl
mov
and
retf
push
pop
out
in
dec
clc
adc
mov
pop
jmp
out
xchg
into
out
sbb
jb
jl
mov
cmp
test
and
test
(bad)
pop
retf
xchg
lds
jno
pop
inc
jne
inc
mov
ds
and
mov
shl
repnz
sbb
adc
xlat
ss
add
fisttp
xchg
jne
sbb
test
aam
aaa
mov
mov
pushf
movs
dec
mov
adc
push
mov
dec
cmp
add
add
mov
jns
shr
repz
mov
sub
push
xor
push
push
fcmovbe
and
sahf
mov
push
leave
test
jecxz
push
push
jl
inc
es
stos
sar
adc
mov
repz
jge
test
push
scas
clc
cmps
test
(bad)
outs
push
cmp
pop
fidivr
sbb
fidiv
sti
pop
ins
loop
ja
into
(bad)
adc
out
cld
jb
dec
lods
dec
xor
xchg
mov
test
sub
mov
in
inc
ret
repz
mov
add
adc
hlt
and
add
popa
push
nop
sbb
sub
dec
icebp
mov
test
cmp
mov
lds
das
xchg
sub
cmp
sbb
xchg
xlat
pushf
dec
jge
cmp
jmp
loopne
neg
jo
outs
sbb
jno
sub
push
cmp
cld
xor
mov
aaa
dec
or
scas
rcl
cmp
mov
jl
mov
cmp
arpl
cmp
sbb
int
pop
addr16
sbb
adc
aad
pusha
push
int
js
or
mov
xor
fisubr
fiadd
mov
jmp
fsub
and
or
jnp
jmp
(bad)
cmp
test
add
and
out
lds
push
out
int
inc
nop
sub
mov
mov
xchg
jecxz
jns
out
push
xor
mov
inc
cs
sub
add
sub
lods
cdq
je
js
ins
lods
fs
and
lahf
(bad)
xchg
or
cs
jp
inc
lock
outs
jnp
and
mov
retf
mov
lea
sub
faddp
or
retf
jmp
pushf
adc
cmp
cwde
ret
sbb
ss
lods
repnz
test
adc
mov
jno
push
cmp
push
call
add
dec
je
or
fdivr
and
imul
popa
and
jnp
xchg
cmps
cmp
cmp
out
out
stos
jno
jne
push
push
adc
add
lods
imul
nop
mov
rol
cwde
idiv
scas
jno
data16
cmp
sti
pusha
mov
in
inc
and
mov
(bad)
ret
dec
stos
add
jne
mov
mov
rcl
vmovss
adc
call
cmps
sub
xchg
jg
inc
push
lods
jmp
pop
cmp
loope
pop
lds
arpl
mov
adc
cdq
adc
sbb
sub
mov
push
mov
nop
jno
outs
in
sub
aas
pop
adc
(bad)
cld
push
icebp
fucomp
(bad)
xor
or
call
retf
mov
pop
xchg
and
popa
repz
mov
push
xchg
(bad)
xchg
mov
and
jb
mov
lods
sbb
add
mov
rcl
sub
repnz
mov
jne
mov
sbb
or
mov
xchg
pop
fprem1
cmp
jae
leave
sbb
movs
and
cmp
psrlw
imul
inc
aaa
xor
push
loop
mov
xor
ucomiss
pop
ret
fisubr
retf
mov
rcr
(bad)
aaa
sti
jecxz
dec
movs
shl
adc
rcl
clc
xor
add
rcr
mov
fiadd
and
call
popa
sbb
test
fldenv
ds
gs
test
dec
jecxz
push
fnstenv
int
neg
popf
xor
xor
xor
jl
ror
cmp
rcl
daa
cmp
mov
jl
inc
sub
cmps
fstp
push
ins
dec
mov
xchg
gs
sub
push
sub
sahf
test
sub
movs
add
xchg
pop
daa
lahf
loop
mov
push
jp
cmp
cmp
inc
rcl
movs
inc
push
pop
mov
imul
jg
stos
sub
mov
sub
push
rep
ror
outs
fistp
inc
mov
push
lds
in
adc
lods
mov
or
out
test
fmul
mul
fsub
stos
lahf
outs
popf
psllq
push
je
ds
in
pop
add
cli
pop
dec
or
add
sbb
mov
sbb
dec
add
cmp
ret
or
lahf
mov
clc
sub
int3
pop
jbe
xlat
addr16
sub
cmps
and
fnsave
leave
movs
and
jl
jl
inc
stos
iret
mov
fisttp
cdq
stos
out
push
sbb
push
lock
cmps
mov
pop
mov
outs
or
inc
sub
cwde
test
ret
pop
stc
mov
sbb
in
scas
xor
add
daa
outs
movs
adc
xor
sbb
push
mov
test
or
cmp
dec
or
xlat
ret
clc
xchg
mov
jmp
jns
mov
fnsave
jmp
inc
cmp
mov
inc
mov
push
loopne
cs
and
push
inc
inc
cmp
stc
adc
ret
fwait
push
xlat
pop
test
push
call
dec
sbb
jp
ins
in
xchg
and
mov
fisttp
scas
jns
xchg
inc
xchg
sbb
xor
mov
or
dec
mov
mov
leave
cld
scas
cmp
push
out
sahf
cmp
outs
leave
imul
dec
daa
les
mul
ret
lock
(bad)
loope
cli
pusha
mov
idiv
aaa
add
fisub
aam
mov
nop
int3
xchg
add
push
adc
pusha
arpl
sbb
push
sbb
(bad)
adc
mov
ss
movs
and
dec
jg
cmp
push
or
nop
fisttp
push
iret
push
in
mov
stos
lea
call
xchg
pop
mov
nop
adc
fadd
stc
cmp
retf
cmp
retf
mov
mov
sub
std
in
sub
xchg
mov
imul
or
fadd
imul
hlt
add
push
mov
pushf
jg
mov
cmp
cmp
push
aas
mov
in
or
mov
adc
sti
pushf
xchg
imul
(bad)
in
inc
int
jmp
add
pop
cmp
shr
mov
repz
mov
(bad)
cdq
push
jns
fadd
sahf
add
jl
cwde
jno
add
mov
pop
adc
outs
mov
pop
shl
sub
lods
retf
lds
ss
cmc
stos
cli
sbb
jno
pop
jnp
aam
xchg
lods
pop
jb
mov
les
xor
adc
ret
adc
lea
repz
repnz
adc
inc
movs
push
jecxz
dec
mov
addr16
push
xchg
sub
mov
kmovw
cmp
push
out
adc
adc
in
xor
out
adc
js
xor
adc
or
stos
fsubr
bound
dec
push
and
inc
push
icebp
and
sub
mov
jno
pop
ds
or
ret
repnz
sar
ret
out
call
loope
scas
mov
lods
dec
fcom
or
push
mov
fs
ins
cmp
pop
repnz
push
mov
cmps
mov
in
dec
jge
jl
or
jecxz
lods
dec
scas
(bad)
and
mov
fimul
mov
xor
in
cs
dec
xor
dec
dec
lock
push
mov
test
jb
sbb
pop
sub
pop
and
daa
push
(bad)
pop
xor
cmp
xor
push
pshufw
sub
sbb
inc
push
or
and
xchg
test
xchg
xadd
stc
sub
aam
xor
xor
adc
pop
mov
push
jge
daa
popa
sub
xchg
out
mov
push
dec
data16
in
iret
dec
imul
sbb
dec
cmps
dec
(bad)
call
repnz
cs
adc
push
lahf
xchg
dec
(bad)
jge
out
retf
adc
jmp
cld
call
sub
mov
push
sub
loope
std
popa
sbb
jmp
or
test
cmp
dec
(bad)
(bad)
dec
aad
sbb
fcom
inc
xchg
fst
cmp
fwait
ret
ret
jnp
sub
xor
xor
test
jno
pop
in
adc
test
xchg
push
mov
retf
js
mov
sbb
scas
lahf
adc
outs
retf
adc
movs
jge
lds
sub
test
push
dec
xor
xor
cmp
cmp
and
addr16
sbb
push
pop
(bad)
(bad)
xchg
icebp
push
das
cwde
sub
xchg
mov
jmp
xchg
and
dec
xchg
ss
mov
mov
push
and
add
loopne
adc
or
loop
loope
pushf
push
xchg
or
jmp
outs
jns
jbe
mov
fs
rol
loope
lock
gs
sti
shl
dec
mov
and
xor
sbb
dec
fstp
mov
shl
push
movs
icebp
inc
adc
pusha
fldenv
in
fsubr
sub
int
shl
ins
not
ds
icebp
mov
jno
cmp
lds
(bad)
imul
inc
je
cld
push
outs
push
push
push
fist
dec
mov
rcl
sbb
enter
mov
adc
xor
push
sbb
mov
push
aas
jmp
fistp
adc
dec
shl
ja
mov
les
push
xor
cmc
jle
cmp
sbb
add
popf
cmp
rcl
and
pop
scas
xchg
mov
or
cmps
scas
adc
cmps
loope
inc
das
outs
pop
sbb
(bad)
loopne
xor
jns
fistp
aam
das
jnp
push
push
mov
sbb
jbe
ficomp
fadd
pop
jno
test
add
cdq
and
imul
push
movs
jns
mov
xor
repnz
jnp
cmp
jmp
loop
in
call
ins
xchg
test
shl
out
in
xlat
ret
and
aaa
or
pushf
leave
sbb
xchg
iret
in
(bad)
neg
ret
leave
int3
mov
daa
out
mov
mov
mov
pop
xchg
stos
mov
ret
or
fwait
xchg
or
mov
xchg
retf
adc
outs
ret
sub
mov
cmp
js
scas
in
outs
adc
in
aas
das
pop
pop
sar
sbb
jbe
and
dec
ror
popf
xchg
lods
pusha
mov
stc
rcr
add
int3
adc
mov
jge
iret
shl
push
cmp
add
mov
and
mov
mov
jo
xor
adc
xor
jp
cmp
enter
dec
jbe
inc
adc
iret
add
mov
and
cwde
out
mul
cmp
and
sti
mov
add
lods
or
or
dec
test
outs
pusha
push
or
rep
in
out
cmps
xor
or
xor
lds
jns
push
outs
sub
daa
js
jmp
xchg
movs
repz
add
inc
push
pop
rol
in
push
pop
cli
cmps
mov
div
mov
jne
nop
add
adc
push
fiadd
test
push
add
pop
call
cmp
jl
fnstsw
mov
push
xchg
pop
(bad)
xlat
adc
xchg
scas
sahf
push
push
cld
sub
and
lds
test
sahf
ins
test
add
sbb
or
lock
inc
popa
popa
fild
mov
mov
and
adc
cmp
(bad)
mov
aad
mov
scas
fld
fs
xchg
add
push
or
or
add
jle
adc
scas
repz
mov
dec
jmp
jp
cli
mov
pusha
xchg
push
js
das
add
pop
js
cmps
ror
ins
pop
sahf
push
and
nop
or
inc
pushf
lahf
in
neg
sahf
or
inc
cmp
add
out
add
test
push
xor
add
sti
xchg
push
cmp
pop
in
or
out
sbb
or
repnz
mov
(bad)
sbb
(bad)
pop
adc
jnp
jae
addr16
dec
fcom
sbb
cdq
sbb
retf
pop
test
shl
mov
ins
loope
sub
push
stos
rcr
mov
bound
inc
mul
inc
adc
ins
jmp
dec
push
jecxz
ss
push
shl
adc
test
xor
xor
sti
inc
pop
sub
push
mov
lods
and
loopne
add
shr
lods
int3
push
and
adc
ins
sbb
pop
mov
add
jbe
xchg
outs
in
fisttp
icebp
ja
push
push
adc
imul
pop
or
call
pop
xchg
xchg
sar
sti
add
mov
cmc
ret
aaa
cmps
dec
mov
mov
sub
call
mov
mov
mov
stos
dec
inc
xchg
ja
les
or
pusha
outs
dec
jp
sbb
sub
mov
pop
inc
sbb
movs
test
call
mov
lds
mov
pop
aaa
xchg
cmp
not
adc
shr
lods
mov
sahf
xor
fwait
xchg
adc
shl
nop
loopne
mov
lock
jo
dec
mov
mov
xchg
mov
dec
data16
es
fucomp
or
add
lock
popf
push
sbb
fsub
out
cmc
pop
mov
xchg
(bad)
push
cmps
jmp
in
ins
ret
adc
mov
mov
jo
mov
enter
pop
aad
loopne
push
scas
or
mov
ds
ja
push
popf
mov
push
(bad)
push
xchg
jo
inc
stc
xor
add
or
sub
ret
jo
fmul
sub
fimul
repz
pop
pop
jnp
cmp
shr
push
ins
(bad)
push
enter
sbb
jg
xor
out
(bad)
pusha
aas
cmp
mov
xor
inc
bound
fbstp
cmp
inc
sbb
ror
std
adc
fs
inc
gs
cmp
ficomp
pop
aam
cmps
fldenv
mov
and
dec
mov
cs
lock
dec
or
jmp
mov
ins
call
cmp
sahf
pop
adc
test
cmc
sub
push
sub
rol
or
stos
popf
pop
stc
mov
aad
jb
dec
(bad)
jae
fwait
sub
shl
pop
std
add
mov
pop
inc
mov
mov
clc
push
push
and
or
push
dec
or
add
test
test
fdivrp
popf
mov
(bad)
fdivr
out
jno
cmp
dec
adc
(bad)
idiv
loope
inc
ins
or
dec
xor
pop
loope
push
push
cmps
add
enter
xor
scas
dec
lea
(bad)
dec
rol
out
sub
add
dec
cld
and
clc
leave
pop
sub
mov
test
out
adc
lds
mov
and
dec
mov
push
cdq
xor
frstor
dec
mov
and
or
fwait
test
and
inc
pop
pop
retf
and
push
push
push
cld
fadd
push
lock
call
sbb
jecxz
nop
sub
and
loop
cli
(bad)
fwait
icebp
inc
sahf
fsin
in
repnz
lahf
jle
popf
rcr
mov
stos
mov
jmp
mov
pusha
mov
dec
fimul
nop
(bad)
repz
shr
(bad)
pop
or
sub
fst
or
fld
jo
test
and
mov
add
pop
push
cld
ret
xor
test
dec
dec
mov
scas
aad
xchg
mov
dec
sub
jnp
int3
fwait
inc
and
jmp
sar
es
adc
inc
push
retf
jge
movs
mov
imul
dec
and
(bad)
sub
dec
mov
xor
gs
mov
ins
cwde
clc
mov
mov
aam
(bad)
and
test
xor
scas
xor
icebp
bound
xor
pop
enter
pop
adc
pop
and
repz
push
in
push
js
push
shl
pop
add
shr
in
inc
jmp
fwait
into
sbb
mov
adc
sub
xchg
repnz
jg
mov
inc
adc
cld
cdq
imul
mov
out
sub
les
cmps
fdivr
fadd
js
add
jne
dec
loopne
ins
(bad)
jle
dec
pushf
dec
mov
ficom
and
js
and
sub
or
mov
jl
aad
mov
dec
push
(bad)
jne
ret
add
lahf
nop
(bad)
rcl
adc
jbe
xchg
jae
neg
test
retf
imul
ss
jmp
or
stc
test
jb
cmp
movs
pop
popf
hlt
cmps
call
loopne
loopne
std
push
push
sub
jb
jmp
call
aaa
dec
fdiv
and
cli
aad
mov
and
jecxz
adc
xchg
dec
sub
call
add
jae
outs
(bad)
add
jge
cmps
test
mov
test
mov
dec
bnd
lods
sub
jns
xor
aam
jbe
out
push
into
ret
shr
push
push
add
mov
add
sbb
sub
jb
aas
(bad)
mov
repnz
(bad)
shr
pop
add
push
aaa
popa
rcr
scas
mov
je
arpl
mov
in
jo
and
mov
ins
push
arpl
mov
xchg
movs
(bad)
fstp
gs
mov
ror
in
repnz
push
shl
ds
(bad)
cmc
dec
pop
cmp
cmp
adc
xchg
pushf
std
push
lea
dec
ins
mov
and
dec
push
arpl
scas
fwait
mov
into
or
dec
(bad)
nop
dec
ds
sub
f2xm1
call
sahf
xchg
mov
pop
ja
cmp
int
mov
adc
pop
ficom
aaa
jno
or
xor
xor
push
cwde
adc
jp
push
popa
jb
test
adc
dec
(bad)
sbb
add
sbb
cmp
ins
jge
leave
aaa
imul
nop/reserved
cmp
pusha
dec
out
lea
rcr
mov
es
xor
cli
call
retf
dec
(bad)
shr
dec
xchg
fiadd
or
cmp
or
ds
inc
or
mov
gs
mov
sub
xchg
sbb
or
clc
cmp
loop
push
pop
dec
xor
add
lahf
cmps
out
and
mov
test
sub
cmp
data16
popf
xor
mov
pop
loop
jb
enter
xor
or
ja
cwde
test
add
add
test
mov
dec
gs
or
ret
js
jmp
das
call
push
pop
sub
mov
adc
lods
data16
sub
xchg
pusha
loope
jb
and
push
stos
cmp
repnz
lahf
mov
push
and
ficom
inc
arpl
adc
xchg
pop
cmps
pushf
es
repz
scas
fwait
add
int3
shr
xor
rcl
dec
xchg
mov
cmp
lods
loopne
test
mov
nop
jne
sub
or
les
pop
adc
arpl
jl
lahf
lahf
int
xor
jecxz
lods
push
sbb
push
xor
sub
pop
adc
xchg
pop
mov
pusha
retf
push
jb
push
jb
xor
xlat
sbb
dec
mov
stc
xor
sbb
mov
test
mov
adc
test
stc
mov
jp
sub
inc
adc
sub
xor
mov
sbb
and
aas
jbe
pop
jb
pop
test
inc
fdiv
pusha
fisub
inc
gs
int3
test
test
dec
jmp
loopne
xchg
test
mov
cmp
add
and
daa
xchg
pop
or
ret
push
push
mov
jbe
sub
sbb
aas
ds
jbe
mov
adc
(bad)
xchg
dec
dec
mov
outs
xchg
ds
mov
cs
jg
adc
test
aaa
pop
sahf
push
lods
aam
add
setnp
push
cmp
mov
arpl
push
test
jmp
retf
retf
mov
repz
sub
push
and
mov
sbb
jnp
(bad)
pop
inc
push
xor
xor
imul
adc
out
dec
add
cmps
jbe
sahf
pop
fisttp
ficomp
out
into
fsubrp
and
rdmsr
sbb
rcl
mov
hlt
mov
xor
into
aam
sub
add
xchg
out
push
mov
push
test
pushf
xchg
retf
or
(bad)
fst
jae
xor
inc
push
jmp
test
inc
jmp
push
pusha
and
out
pop
mov
out
sub
push
add
mov
jb
mov
and
jb
jl
int3
push
arpl
dec
xor
add
and
inc
push
xor
dec
pop
popf
add
xor
stos
imul
in
cwde
dec
cmps
cmp
or
loope
push
int
call
scas
jns
push
xor
push
dec
adc
xor
aas
xor
xchg
xor
imul
pop
lock
lea
das
adc
cmp
(bad)
mov
outs
or
and
gs
inc
loope
sub
mov
imul
pop
cmp
xchg
fwait
push
adc
xchg
out
pusha
cmp
nop
test
in
dec
xor
dec
push
pop
nop
cmp
cmp
pusha
xchg
rol
pusha
push
add
imul
xor
mov
mov
iret
pop
pop
sahf
fwait
push
fsub
inc
push
out
out
js
sub
ret
xchg
jae
xchg
adc
or
jbe
sahf
les
mov
push
cmp
xchg
sbb
sub
mov
test
or
imul
sbb
sub
test
mov
cmp
mov
and
dec
icebp
mov
jae
sbb
jnp
sub
imul
gs
ror
cwde
add
mov
(bad)
cmp
arpl
mov
mov
push
jb
imul
sbb
cmp
(bad)
mov
push
fnstsw
ins
dec
lods
aam
fcomip
push
inc
inc
cmp
add
sub
outs
adc
mov
jge
and
test
bound
push
mov
stos
aam
test
push
cs
sbb
or
sub
push
hlt
pop
ja
les
dec
cmp
push
pop
cld
sub
adc
jnp
add
in
add
xor
pop
jmp
div
cmp
xchg
dec
cmp
mov
cmp
das
push
mov
sbb
inc
cdq
outs
cwde
hlt
aas
sbb
fimul
ins
hlt
hlt
sahf
mov
and
push
pop
scas
jb
pop
in
cli
inc
xor
push
dec
cld
mov
mov
minps
and
ins
jmp
pop
sub
jb
mov
add
sbb
rcr
inc
jb
xor
push
xchg
xor
mov
cmps
xchg
inc
in
movs
inc
icebp
js
dec
xchg
adc
ja
scas
sub
and
aad
push
popa
mov
imul
cmp
pop
iret
cwde
out
mov
aam
lods
push
into
dec
or
xchg
aaa
aaa
jmp
dec
jecxz
call
std
mov
or
out
in
enter
inc
sub
dec
mov
pop
cdq
scas
sub
stc
and
mov
in
aas
add
imul
mov
push
push
sub
mov
cmc
or
(bad)
leave
sbb
out
data16
xchg
scas
inc
std
mov
xchg
sub
pop
jo
push
xor
repnz
nop
sbb
sbb
mov
int3
and
scas
jle
and
out
mov
loop
mov
or
dec
push
dec
enter
lods
push
ret
jmp
pop
and
xchg
aas
retf
call
(bad)
xchg
inc
dec
inc
push
or
rep
inc
xchg
nop
fwait
cmp
(bad)
sbb
xor
jecxz
mov
and
jns
add
dec
out
hlt
pusha
xor
fiadd
ret
lods
adc
sti
shr
rol
rcr
cmc
push
(bad)
jmp
mov
mov
stos
pop
aam
hlt
push
retf
inc
ja
lea
shl
movs
mov
lods
in
mov
ret
je
push
test
in
inc
dec
shr
mov
inc
dec
and
cmp
dec
xchg
lock
mov
xchg
xor
stc
gs
(bad)
mov
bound
xchg
xchg
pusha
inc
sub
adc
sbb
cmp
push
lahf
mov
icebp
cmps
sub
mov
lea
(bad)
adc
mov
(bad)
sub
mov
jbe
cli
push
push
mov
inc
std
or
js
push
pop
inc
jae
nop
xor
js
sar
mov
nop
jl
mov
sahf
es
and
mov
test
call
inc
enter
test
mov
sar
enter
push
aas
cld
xchg
lds
dec
mov
inc
jns
cmp
adc
adc
ins
cmps
pop
rcl
jmp
repz
(bad)
loopne
add
outs
sti
cld
xchg
js
cmps
in
or
std
mov
mov
or
or
jnp
push
push
lock
xor
pop
jmp
ins
(bad)
xchg
pop
stc
sbb
jle
hlt
aad
in
and
out
test
cmp
inc
push
loope
hlt
gs
xor
aas
push
pop
test
jge
or
test
rcl
ss
cmp
ins
push
fist
dec
sub
push
inc
pop
pop
mov
sub
lods
adc
shr
outs
xchg
adc
(bad)
jno
mov
add
cwde
repnz
cmps
fdivr
fsubr
push
mov
movs
mov
fwait
popa
ss
jns
push
dec
repnz
inc
jl
sub
lar
xor
or
mov
jbe
add
and
mov
inc
jmp
out
jo
ret
xchg
push
mov
je
outs
out
add
xchg
mov
dec
and
clc
ss
mov
aam
xor
(bad)
imul
jb
mov
and
and
add
pop
ret
fwait
pop
sub
mov
xchg
lods
pop
lea
and
mov
mov
sub
jp
xor
push
ficom
movs
inc
repnz
retf
ja
aaa
cmp
mov
pusha
mov
and
fwait
mov
test
and
mov
jmp
lods
jno
mov
sbb
mov
mov
fldcw
lds
into
lock
mov
xor
iret
jl
jo
enter
cmc
jnp
ja
jae
lods
or
stos
xchg
das
sub
ficom
inc
add
push
mov
mov
retf
ret
repnz
fisttp
xor
ja
idiv
ret
aas
scas
sbb
mov
loopne
aad
push
out
retf
pop
and
sub
push
sahf
and
pop
inc
sub
in
sub
es
mov
movs
push
mov
mov
cmp
ss
es
mov
jp
cld
mul
es
lea
daa
push
dec
fstp
dec
adc
xor
cmp
loope
popa
cmp
cmps
out
push
stos
xchg
mov
(bad)
xchg
sub
dec
jg
inc
ins
jb
mov
retf
cwde
mov
cli
sub
shld
mov
pop
cli
fstp
lds
in
adc
ret
mov
int
jb
je
mov
push
cmp
pop
retf
jbe
dec
loope
std
dec
mov
jle
pop
sti
pop
fstp
push
and
movs
loopne
xchg
add
dec
mov
dec
mov
push
cmp
je
test
xchg
ja
pop
mov
jg
ins
in
stos
loop
mov
loopne
jp
mov
or
nop
movs
xchg
cmp
stos
sbb
mov
mov
dec
inc
nop
or
out
push
pop
sub
xor
mov
pop
in
and
fwait
push
and
pusha
scas
fisttp
fwait
in
xchg
adc
add
pusha
cli
dec
pusha
addr16
jle
pusha
bnd
lahf
mov
sar
(bad)
fcomp
cmc
call
sbb
fprem
xchg
xchg
dec
push
call
cmp
test
jae
daa
scas
or
fsubr
lock
loopne
popf
inc
pushf
(bad)
sub
adc
iret
not
pusha
sub
iret
in
lods
inc
push
nop
mov
int3
mov
aaa
das
xchg
xchg
cdq
pop
or
call
outs
sbb
inc
pop
ins
push
lods
pop
loope
es
inc
stc
pop
adc
mov
mov
and
test
repz
test
xor
cmp
sbb
iret
push
into
add
cmovl
push
pop
mov
sbb
add
mov
fcom
push
dec
mov
gs
sti
sbb
sub
pop
movs
stos
aaa
daa
fwait
les
fisttp
ins
cli
pop
inc
fst
dec
pusha
int
dec
(bad)
lods
call
fcomp
mov
sbb
fist
test
dec
dec
push
sar
inc
or
cdq
mov
stc
gs
inc
ja
mov
cmp
sbb
test
ins
loope
jo
aam
dec
adc
movs
cmp
and
inc
dec
adc
icebp
popf
push
out
jge
in
popf
xchg
leave
jbe
rcr
push
ins
mov
cmc
out
push
mov
jnp
fwait
and
add
je
jnp
pop
fstp
out
adc
add
pusha
rcl
pop
xor
in
mov
mov
loop
add
inc
or
ins
xchg
(bad)
mov
add
mul
in
mov
test
fadd
repz
mov
fwait
sbb
or
adc
int3
aaa
pop
push
xor
xchg
sahf
movs
shl
dec
cwde
or
sub
loopne
mov
addr16
pop
pop
mov
mov
ret
lods
in
push
sbb
loopne
repz
bnd
js
sbb
dec
mov
shl
lea
imul
add
add
out
jno
mov
dec
into
or
mov
cmps
test
rcr
mov
xchg
or
adc
stos
cmp
test
mov
and
cmps
enter
test
ds
out
dec
sbb
jecxz
fucomi
mov
pushf
div
jl
repz
xchg
ins
xchg
out
ins
scas
xor
inc
repnz
jmp
pop
sar
inc
cmp
retf
jnp
mov
stos
gs
mov
sub
adc
loopne
lods
jno
sub
mov
adc
sub
(bad)
outs
popf
mov
mov
das
ja
xor
cld
mov
pop
cmp
test
out
push
adc
mov
pop
pop
into
xor
stos
push
sub
sub
pop
or
sar
push
vmulss
or
gs
jle
adc
push
inc
test
add
cmp
xchg
scas
pop
inc
in
mov
ins
inc
add
outs
sti
jns
sub
fwait
jae
out
mov
sar
jl
inc
push
inc
push
(bad)
fld
dec
mov
xchg
in
scas
cmp
into
imul
std
gs
xchg
fld
add
(bad)
jo
sbb
push
or
ss
jbe
test
fs
jbe
call
cmp
frstor
dec
cmp
inc
cli
sti
inc
cld
sub
sar
int3
mov
xor
dec
imul
ins
sub
std
inc
fidivr
dec
jno
xlat
mov
clc
outs
mov
xor
loope
mov
outs
out
sbb
adc
push
aaa
js
cmp
adc
push
inc
(bad)
retf
push
adc
pop
out
ficom
mov
inc
cmp
ins
jp
aad
push
lahf
xchg
out
ins
(bad)
mov
add
push
jge
dec
add
push
cmp
enter
adc
outs
sbb
in
jae
xchg
arpl
pop
in
fcomp
and
jp
jge
jmp
mov
xor
adc
sbb
jecxz
jns
dec
das
sbb
das
mov
aam
jo
sti
sub
gs
popf
test
pop
add
outs
dec
popf
mov
inc
jne
sbb
mov
(bad)
inc
sbb
dec
sbb
and
mov
cmp
inc
pusha
push
das
inc
mov
mov
push
push
sub
rol
pop
add
xchg
test
das
push
fimul
ret
sahf
inc
stos
js
shr
pop
adc
push
movs
add
adc
cli
ds
xor
enter
sub
test
pop
in
mov
jmp
adc
dec
test
ret
cs
sbb
retf
push
pop
and
lock
mov
sub
and
out
in
inc
data16
and
pop
ins
rcr
popf
les
pop
mov
xor
stc
mov
cmp
push
dec
outs
lds
dec
dec
pop
adc
or
dec
mov
jmp
sbb
out
fcomp
lods
xor
adc
cdq
je
and
test
sbb
sbb
mov
aam
pop
inc
xchg
add
movs
les
inc
cdq
in
cmc
iret
add
and
jl
nop
sbb
push
push
(bad)
inc
dec
add
jns
adc
adc
adc
hlt
push
js
rol
mov
mov
popa
jg
inc
push
push
test
and
mov
adc
mov
ss
xor
ja
in
mov
sub
push
mov
sbb
int
push
mov
mov
out
push
lods
mov
adc
dec
imul
call
cmp
movs
(bad)
repnz
outs
fnsave
test
ret
inc
adc
gs
mov
cli
clc
mov
xchg
(bad)
leave
or
xor
inc
xchg
mov
(bad)
daa
xor
xor
mov
cmp
adc
rcl
push
jns
test
mov
fcmovnb
cmp
imul
jnp
dec
mov
mov
hlt
mov
pushf
out
lea
adc
loop
call
pushf
rcl
cdq
jg
xor
jnp
loope
in
push
idiv
(bad)
icebp
test
add
fisub
sbb
int3
ins
test
push
add
gs
clc
hlt
mov
es
push
xor
sub
clc
hlt
cmp
push
clc
scas
gs
retf
in
adc
sub
jae
dec
push
cld
add
imul
aam
aad
mov
pop
sti
je
adc
sahf
xchg
aad
cmc
imul
mov
leave
mov
sbb
dec
dec
gs
cli
xchg
mov
out
mov
jo
inc
push
xchg
iret
rcr
mov
sbb
xchg
dec
in
jmp
jecxz
mov
arpl
mov
sbb
dec
push
jb
and
xor
sti
jecxz
or
shl
mov
stos
push
jge
xchg
movs
iret
(bad)
or
lods
mov
sbb
fcomp
idiv
loop
int3
mov
shufps
inc
xor
xlat
sbb
mov
shr
sub
or
sbb
mov
retf
stos
sub
jmp
iret
cmp
push
ffree
in
scas
xor
adc
inc
or
cmp
xchg
and
cmp
mov
jo
jnp
push
pop
or
xor
and
and
push
pop
int3
push
adc
jnp
pop
bound
inc
lea
cmp
in
jbe
cmp
mov
cmps
js
pusha
je
cmp
dec
pop
cmps
mov
mov
out
mov
cmp
lea
push
inc
rol
mov
loope
or
fs
imul
sub
shl
push
jae
xchg
popa
loopne
mov
ja
fmul
push
fnsave
inc
mov
mov
sub
sbb
shl
or
call
xchg
xchg
sub
shl
repz
mov
mov
pop
daa
adc
je
push
dec
mov
in
pop
dec
mov
movs
cdq
dec
js
adc
bound
(bad)
loope
aas
push
mov
cmp
ror
popf
mov
add
es
outs
cmp
rol
loopne
dec
adc
stc
inc
push
mov
mov
cmps
rep
jo
(bad)
mov
mov
pop
ffreep
xchg
add
add
push
addr16
lahf
mov
(bad)
jns
and
std
gs
and
sub
test
test
jp
aaa
jnp
int3
jl
sahf
push
pushf
rcl
daa
push
repz
fisubr
in
addr16
(bad)
and
jl
int
cli
sub
jl
push
jo
cli
outs
fbld
xchg
test
popf
fstp
pusha
xor
cmp
mov
fidiv
push
mov
and
pop
xor
jae
leave
cmp
jmp
and
ret
sbb
pop
in
and
inc
pop
inc
cmp
test
pusha
inc
push
lea
fidiv
out
addr16
and
or
mov
mov
ins
ja
xchg
sub
jge
je
or
push
ret
cmp
add
lea
mov
pop
jp
test
sqrtps
xor
adc
cs
jmp
lahf
mov
adc
dec
iret
and
shl
fwait
xchg
mov
jns
imul
mov
aad
mov
jmp
push
mov
cmp
(bad)
enter
mov
or
push
xchg
sub
pushf
mov
jge
dec
mov
sbb
sub
mov
mov
jmp
scas
sti
leave
and
test
add
ins
(bad)
adc
push
fs
dec
out
cmp
inc
mov
push
cmc
cmp
xor
cs
ret
mov
dec
xchg
int
pop
jns
or
fnstcw
mov
std
movs
jne
mov
ja
adc
gs
cmp
call
jns
sub
mov
mov
cmp
je
out
jae
xor
lods
jge
mov
arpl
xchg
cmc
add
push
or
pop
pop
into
push
pop
pop
jecxz
mov
call
pop
xor
int
inc
xchg
jnp
adc
and
fs
cmp
pop
cmc
cmp
inc
mov
dec
ins
ret
(bad)
push
sti
lock
(bad)
lods
call
inc
add
push
mov
lea
add
mov
mov
cmp
sbb
icebp
xor
out
add
push
adc
sbb
jecxz
imul
js
cs
sub
fldenv
add
es
mov
cmp
movs
add
addr16
pop
cwde
and
mov
mov
stos
pop
std
in
mov
mov
xchg
movs
jmp
push
retf
pop
cli
push
push
rol
ds
jnp
rcl
pusha
mov
(bad)
adc
es
mov
rol
pop
add
cwde
cdq
ds
out
sub
frstor
and
movs
lahf
cmps
xchg
movs
or
push
out
stos
es
xchg
imul
cmps
cmps
not
and
int
(bad)
loope
mov
nop
fwait
(bad)
js
hlt
imul
jbe
or
in
or
bound
and
mov
aad
sbb
call
stos
aas
int3
into
jne
mov
dec
jmp
sub
cmp
inc
mov
jmp
xchg
sahf
mov
aas
or
lds
fnstsw
sub
imul
jmp
jmp
call
pop
xchg
dec
push
into
popf
aaa
dec
cmp
sub
cli
fild
ss
mov
fistp
stos
xor
test
stc
pop
inc
sbb
add
dec
sub
mov
imul
ficomp
fstp
stc
ficom
sub
pop
clc
shl
cmp
iret
jb
in
ins
lods
fwait
mov
xchg
loope
sbb
(bad)
xchg
push
inc
add
xor
stos
push
gs
dec
sbb
dec
out
out
xchg
cwde
jge
dec
jnp
mov
sub
shl
push
sub
add
push
int
dec
popf
aas
push
dec
addr16
or
icebp
mov
retf
xor
ret
add
pushf
push
mov
loopne
out
shr
mov
jg
push
jmp
cmps
loop
mov
and
push
pop
sbb
cs
div
cmc
inc
(bad)
call
test
inc
sub
dec
mov
adc
hlt
sbb
jae
inc
jb
jmp
lods
pop
retf
xchg
cmp
xor
(bad)
pop
out
arpl
inc
clc
je
adc
jne
jo
outs
retf
adc
xchg
aaa
dec
mov
dec
stos
lods
shl
lds
aam
mov
jp
rol
xlat
cs
aaa
mov
jmp
mov
in
or
test
and
fisttp
test
outs
mov
cmps
out
inc
adc
ficomp
push
xchg
xchg
pop
shl
call
dec
idiv
push
sub
call
shl
enter
add
xor
pop
cwde
or
inc
out
aaa
pop
mov
test
pop
jmp
aam
cmps
(bad)
push
xchg
jmp
mov
or
push
inc
out
retf
and
imul
adc
sub
lock
fistp
add
xchg
sbb
push
fldpi
(bad)
mov
fld
jae
out
push
add
or
push
inc
movs
aaa
lds
pop
push
ret
out
movs
cmp
test
sub
push
inc
rcl
fild
out
dec
es
mov
mov
fdivr
lods
jle
xor
fsubrp
les
sub
int3
in
mov
inc
cdq
loopne
hlt
test
inc
repz
xor
sub
cmp
ret
add
call
xchg
adc
push
push
test
imul
push
cmc
in
inc
sbb
hlt
rcl
adc
mov
test
xchg
dec
out
shr
push
inc
repnz
mov
out
stc
sub
sbb
test
js
sub
push
sbb
mov
repz
fmul
xchg
and
cs
fwait
cmc
pop
aad
and
pop
push
cdq
pop
mov
cmps
sub
std
jb
clc
mov
icebp
and
or
dec
mov
fcmove
pop
inc
fistp
jns
jnp
not
movs
sbb
ins
xchg
das
ret
iretw
push
pop
cdq
or
push
mov
pop
mov
and
in
mov
or
sub
pop
dec
into
push
cmp
xor
xlat
cmc
stos
and
jle
cmp
add
cmps
mov
mov
popf
or
stos
inc
sar
aas
lock
fwait
lea
adc
xor
dec
cmps
outs
ss
xchg
rol
in
or
das
jbe
sub
jmp
xchg
je
test
call
mov
or
outs
cmps
push
retf
cmp
gs
out
neg
(bad)
pop
sub
dec
clc
xchg
mov
loope
lahf
fnstcw
in
inc
jb
ret
and
adc
(bad)
loopne
movs
outs
and
cs
xchg
daa
gs
cmc
inc
inc
jns
in
sbb
sbb
addr16
mov
(bad)
xchg
repz
cmp
hlt
mov
adc
push
inc
jmp
inc
mov
adc
dec
mov
fidiv
push
push
cmc
push
xchg
stos
and
push
sahf
loop
mov
sti
jns
mov
and
push
div
daa
popf
enter
daa
ret
mov
mov
in
xchg
add
inc
xor
inc
mov
sub
mov
popa
add
push
mov
dec
or
dec
(bad)
fs
(bad)
jnp
push
mov
and
mov
cmp
in
inc
or
pop
jl
lds
cmps
(bad)
push
mov
jl
mov
out
mov
jmp
jne
add
lahf
aaa
std
or
jmp
enter
loop
aas
jg
js
das
popf
ds
enter
(bad)
aad
ret
imul
mov
rcr
call
fadd
fld
pusha
jmp
pop
cmp
cli
and
and
stos
mov
fdivr
dec
int3
cmps
mov
xor
cmp
xchg
imul
adc
push
loopne
inc
jmp
xchg
ins
sub
pop
pusha
dec
adc
daa
cmps
sub
push
push
fcom
jno
pusha
inc
xchg
sti
bound
stos
push
inc
adc
fldcw
xchg
fistp
loopne
out
sub
adc
sub
mov
mov
repnz
cmp
outs
xchg
xlat
xchg
jecxz
int
lock
push
inc
icebp
add
cdq
cmp
sub
fst
pop
add
xchg
int
sub
clc
div
and
xor
je
jmp
fcos
sbb
adc
push
mov
sbb
fisttp
cmp
cdq
cmp
jo
stc
xchg
pop
fstp
push
inc
loope
fld
add
leave
xchg
mov
mov
jl
jns
mov
nop
gs
xchg
std
call
int3
xchg
into
sbb
xchg
mov
inc
sar
imul
(bad)
sbb
mov
movs
shr
cdq
inc
cmp
adc
fst
fdiv
rcr
loopne
lods
imul
jg
pop
adc
mov
add
(bad)
sub
lds
ja
xchg
add
repnz
cmps
mov
adc
inc
lock
bound
mov
jle
sbb
cmp
fwait
sbb
adc
jae
scas
and
mov
mov
dec
in
(bad)
mov
cwde
jne
jl
(bad)
xor
daa
jnp
iret
fsub
das
int
lods
cdq
xor
mov
jl
(bad)
sub
mov
aas
loop
mov
imul
sub
jb
or
adc
jae
jb
jle
mov
test
sub
inc
ret
pop
pop
popa
sbb
bnd
jne
sahf
popa
push
cmp
and
retf
or
dec
aam
adc
out
mov
jno
mov
add
and
push
jmp
xlat
mov
out
bound
ret
call
call
test
mov
xor
pop
(bad)
xchg
mov
ins
pop
cmp
fcom
adc
or
test
int
mov
cmp
repz
cmp
pop
sub
cld
retf
xchg
xor
push
adc
mov
ins
aam
retf
(bad)
in
(bad)
scas
adc
mov
xor
pop
inc
adc
fs
inc
push
aas
and
shl
in
and
push
dec
cs
call
js
sub
mov
jo
retf
dec
mov
adc
fbld
mov
lahf
(bad)
enter
add
movs
mov
and
pop
xor
jmp
rol
xchg
cmp
inc
in
fsub
clc
int
fild
shl
xchg
outs
ins
dec
push
ins
daa
cmp
iret
xor
jmp
out
pop
and
pop
or
mov
jg
outs
mov
(bad)
push
or
mov
mov
leave
adc
repz
inc
scas
jne
cmc
test
test
jge
(bad)
adc
xchg
xchg
and
pushf
sbb
add
or
dec
sbb
pop
enter
clc
pusha
mov
pop
xchg
adc
adc
jmp
mov
inc
sbb
xchg
rol
pop
ja
stc
cld
gs
inc
pop
sub
push
dec
sbb
mov
push
stos
out
add
push
mov
jp
jge
mov
(bad)
cmp
or
jb
add
adc
and
xchg
mov
xchg
rcl
ds
mov
pop
ss
sbb
pop
sti
movs
mov
pop
push
sbb
cmp
jbe
loop
in
sbb
aaa
fdivr
dec
dec
aad
out
std
cs
add
rep
mov
jo
cli
xor
add
sahf
add
cs
ret
sbb
call
sbb
repnz
sub
test
xchg
pushf
dec
int3
in
test
fiadd
mov
into
add
int3
arpl
js
or
xor
adc
xchg
ins
xor
pop
push
dec
pop
ins
ret
lea
jbe
lods
and
mov
aaa
add
test
test
(bad)
sub
push
jl
dec
icebp
repz
imul
or
and
pop
inc
std
or
mov
mov
push
cmps
dec
ss
jp
inc
imul
cmps
push
cld
mul
fcom
std
mov
xor
pop
inc
xor
inc
icebp
push
sbb
add
mov
leave
fs
in
imul
enter
outs
pop
dec
imul
mov
push
outs
mov
aas
(bad)
dec
dec
jno
ins
sahf
inc
jecxz
mov
bound
daa
rcl
inc
dec
movs
xchg
xchg
rcr
sbb
jmp
ja
adc
jge
aaa
mov
sub
dec
push
pusha
pusha
les
jmp
push
sti
in
lods
call
or
inc
cmp
sti
cmp
inc
cmps
adc
pop
leave
pop
mov
inc
test
int
es
inc
inc
rol
call
push
mov
ja
jg
sub
in
mov
mov
or
mov
ins
pushf
push
jmp
xchg
int3
(bad)
and
jnp
xor
sbb
icebp
fsub
arpl
cmp
xor
aas
sub
rol
mul
inc
add
cmp
dec
loopne
sbb
jo
mov
sar
loop
pop
add
mov
nop
loopne
inc
mov
into
xor
pushf
sahf
div
lock
and
nop
mov
sub
popa
btr
jns
fisub
mov
call
push
push
pop
add
sub
add
jb
fistp
sbb
xchg
dec
iret
jb
inc
inc
pop
add
repz
ficomp
mov
icebp
fmul
jp
cmps
or
addr16
scas
push
imul
mov
push
xchg
sbb
sub
fsubr
mov
(bad)
stc
add
xchg
and
dec
nop
test
xor
addr16
ficomp
cs
mov
jmp
sub
sub
and
and
xor
sub
or
cmps
mov
fld
pop
mov
xlat
dec
pop
cdq
fmul
add
stos
es
(bad)
mov
adc
xchg
inc
rol
rol
fsubr
pop
push
sub
aas
xchg
scas
jne
mov
cmp
sub
cmps
stos
out
aad
imul
mov
dec
ret
lods
mov
lea
adc
mov
int
popa
mov
imul
(bad)
mov
lahf
aad
inc
neg
mov
add
sbb
stc
cmc
stos
div
ja
pop
xchg
aam
pop
xor
dec
lods
add
xlat
cmp
sub
xchg
xor
loop
xor
sub
ret
mov
adc
and
inc
cwde
ret
fstp
repz
icebp
mov
test
or
lahf
fild
inc
in
std
cmp
add
mov
xor
pop
mov
jmp
pop
scas
mov
fcomp
dec
adc
jb
clc
add
dec
pop
loopne
adc
xchg
mov
in
fs
fidivr
inc
and
inc
jbe
push
dec
repz
test
pop
sub
pop
fs
pop
pop
push
js
js
sbb
in
ficomp
adc
sub
loopne
das
enter
test
push
jb
pop
xchg
int3
pop
pop
prefetcht2
fst
mov
xchg
xor
xlat
jns
push
xor
cmp
lahf
jnp
and
pop
ja
call
jmp
mov
sti
adc
cmovb
sub
mov
outs
pop
sub
es
js
test
fidiv
lahf
mov
xor
data16
sbb
hlt
cmp
int3
lds
add
aas
out
dec
nop
pop
fwait
ja
mov
movs
cwde
inc
fmul
push
stc
inc
mov
ret
push
xchg
xchg
add
pop
inc
lahf
je
in
add
sti
cmp
sbb
(bad)
sbb
or
in
test
mov
push
or
mov
pop
das
add
pop
jne
mov
sbb
sbb
cmp
retf
sbb
in
push
sahf
fs
shl
and
lahf
dec
and
cld
jge
push
fbld
mov
pop
sti
(bad)
adc
adc
xchg
jp
adc
xchg
and
dec
outs
jne
out
rol
clc
cli
ret
push
hlt
call
mov
jbe
stos
mov
xor
pop
data16
pusha
dec
dec
shl
or
cmp
pop
jmp
sub
in
jae
xchg
imul
mov
popa
cmp
or
pop
mov
int
mov
sub
jbe
adc
(bad)
mov
add
out
retf
cmp
xchg
or
std
sub
adc
jmp
push
ret
sar
jle
pop
imul
addr16
loopne
lea
shl
cli
mov
icebp
mov
sbb
daa
shr
xchg
push
jb
pop
out
not
xchg
neg
or
rol
add
ja
xor
movs
adc
shr
jb
jne
jns
dec
pusha
mov
push
cmp
sub
(bad)
fnstcw
cs
mov
sub
test
in
cmp
not
icebp
jne
inc
std
std
mov
xor
pop
sub
mov
mov
xchg
xchg
jne
push
out
cld
fstp
xchg
shl
jmp
jge
imul
mov
xlat
pushf
ds
out
sbb
jg
out
or
popf
or
pop
jmp
mov
out
(bad)
loope
xor
out
ds
dec
cmc
or
jne
mov
cmp
and
mov
xchg
xor
jmp
mov
lds
push
jg
dec
out
push
mov
push
cmp
leave
or
leave
or
cmp
mov
test
mov
xchg
pop
mov
pop
aad
(bad)
sbb
xchg
pop
clc
jg
dec
xor
sub
ret
jp
mov
movs
mov
xor
xor
retf
mov
push
push
mov
test
pop
xchg
or
and
jnp
int
jae
jmp
test
mov
popa
call
loope
pop
adc
mov
(bad)
xor
add
sub
iret
out
pop
test
fstp
jle
push
mov
hlt
cmp
mov
or
xchg
je
and
xchg
and
(bad)
push
fisttp
mov
xor
or
in
and
add
repz
adc
and
cs
loope
ja
inc
test
cld
repnz
mov
xor
pop
xrelease
push
mov
lock
push
fimul
fsubr
lods
mov
int3
jae
push
sub
or
popa
jl
sub
add
rcr
sub
mov
(bad)
fstp
xchg
ins
(bad)
fcomp
enter
ja
(bad)
push
push
(bad)
rcl
jns
mov
dec
lds
int
dec
loope
daa
push
cli
retw
sbb
or
popa
push
sbb
fwait
(bad)
pop
lahf
imul
(bad)
mov
sahf
gs
aam
mov
pop
fwait
test
push
daa
push
js
mov
push
mov
loopne
and
jo
jge
xchg
pop
dec
xor
pop
xchg
lods
pop
dec
pusha
pop
leave
mov
push
imul
inc
fdivp
cs
out
shl
sub
sbb
imul
push
popf
pop
push
sbb
inc
in
adc
scas
adc
mov
in
xchg
popf
push
jecxz
in
pop
fld
cmp
mov
cld
js
(bad)
out
sub
cwde
cli
xchg
idiv
xchg
mov
push
ds
into
mov
jnp
xchg
es
rcl
scas
xchg
js
mov
pop
mul
sbb
leave
cmc
and
adc
out
ins
add
in
aad
(bad)
mov
cdq
sti
movs
clc
inc
fsub
outs
stc
add
out
inc
mov
outs
clc
pop
jnp
fnstsw
mov
sbb
in
pop
sub
sub
hlt
pop
dec
pop
iret
mov
jp
inc
inc
add
popf
mov
loop
out
fidivr
es
mov
sbb
dec
shl
mov
rcl
dec
stos
loope
mov
adc
mov
fiadd
scas
jbe
inc
mov
pop
adc
jo
outs
das
outs
sub
mov
cmp
loop
jmp
xchg
adc
rcr
sub
pop
mov
pop
or
mov
aaa
fmul
out
or
adc
lahf
dec
mov
jo
dec
rcr
sub
cmps
aaa
(bad)
lahf
mov
mov
fs
cmp
ins
sub
enter
out
cmps
leave
jp
mov
outs
dec
inc
or
push
mov
xchg
sbb
cmp
sbb
mov
add
aas
mov
mov
aam
sahf
cmp
mov
xchg
(bad)
jge
mov
adc
push
in
es
std
sub
pop
call
cmp
cdq
in
xchg
xchg
jg
jmp
out
mov
cmp
adc
mov
test
int
jno
push
pop
sbb
xor
xchg
retf
sub
inc
mov
and
mov
pop
repz
add
sbb
cmp
sub
jae
mov
adc
aaa
jle
je
shl
add
inc
mov
xor
ins
cmps
cmp
sub
or
in
fs
lock
push
daa
(bad)
repnz
jno
mov
dec
ins
sub
in
aad
ins
mov
jge
sbb
and
daa
inc
lock
call
fdivr
push
lds
mov
out
pop
and
shl
rcr
popf
push
stc
leave
and
mov
(bad)
sub
cmc
fmul
add
pop
mov
(bad)
retf
fnsave
icebp
pop
pop
je
sti
ret
mov
fild
xor
sbb
jge
add
jbe
pusha
pop
shr
dec
pop
ret
jge
inc
call
sbb
mov
inc
cwde
jmp
xor
jae
xor
fistp
pop
das
stos
inc
add
push
popfw
clc
mov
mov
ror
jno
sahf
aaa
and
pop
inc
cs
cmp
cli
adc
xchg
or
cmc
jecxz
jns
ins
out
loop
int
cli
sbb
push
cld
inc
mov
jns
jno
mov
outs
sub
sbb
mov
ds
mov
jnp
gs
jbe
cmp
mov
out
bound
sbb
add
adc
inc
retf
add
xchg
mov
imul
jbe
aam
bound
es
ret
sbb
aam
retf
popa
mov
fsub
mov
pushf
jne
push
xchg
fnstsw
pusha
pop
loopne
mov
cmc
mov
fcomp
std
int3
mov
les
stos
adc
mov
xor
in
mov
cmp
scas
push
push
dec
mov
mov
cmc
in
cmps
jno
leave
pop
jp
mov
mov
dec
inc
xor
mov
aam
push
cli
or
pop
push
js
add
pop
pop
imul
cmp
cmp
out
icebp
xor
and
mov
je
loope
inc
push
test
test
inc
lea
loop
xchg
int
cld
adc
cwde
and
pushf
jp
ja
xchg
or
pop
fadd
dec
mov
test
(bad)
repz
(bad)
jg
cmp
xchg
loop
iret
pop
jb
mov
and
add
and
pop
aas
dec
into
inc
pop
push
or
movs
nop
sbb
and
pop
leave
dec
sbb
xchg
sbb
sar
add
sbb
jns
popa
sbb
test
mov
mov
sub
repz
mov
in
mov
xchg
or
jg
cmp
sub
mov
xchg
push
rcr
or
(bad)
sub
xchg
push
aaa
dec
call
push
enter
rol
pop
out
aaa
pop
scas
sub
inc
ins
xor
les
(bad)
fs
in
jge
pop
sub
mov
and
inc
dec
loopne
lea
jle
gs
mov
stos
gs
sbb
mov
mov
(bad)
mov
bound
mov
sub
jno
adc
or
inc
xchg
rol
lahf
pop
retf
ins
push
sbb
mov
fsub
clc
ffree
add
sbb
and
xor
(bad)
out
sub
scas
push
pop
mov
aas
dec
push
push
or
movs
jg
jo
scas
push
xor
mov
mov
push
ins
xor
ins
jne
fdivr
out
xor
push
adc
mov
sub
mov
xchg
inc
fsubp
or
pop
jmp
jns
fstp
shr
fcomp
sahf
into
or
int
sub
retf
adc
retf
rcr
in
push
jmp
movs
std
iret
call
mov
mov
cmp
sub
jecxz
sub
or
cwde
push
sbb
xor
jb
adc
cmp
icebp
popf
cmp
mov
push
push
mov
bound
shr
lods
test
push
es
push
xchg
fs
sar
iret
neg
mov
xchg
pushf
push
fidiv
mov
mov
int3
pushf
repnz
sar
dec
pusha
jp
js
sub
mov
dec
pop
mov
xchg
inc
div
test
jg
popf
(bad)
mov
sub
push
inc
sbb
call
push
loop
stos
stos
aam
movs
sub
add
out
and
(bad)
sahf
xchg
cmp
hlt
ja
or
pop
in
mov
pop
cli
sub
leave
inc
daa
(bad)
retf
(bad)
fsubr
mov
sub
jae
fcom
shr
inc
xchg
lea
xor
int
test
sub
call
xor
xchg
sbb
cmp
mov
and
jmp
bound
inc
pop
xor
sub
or
pop
hlt
scas
push
adc
pop
scas
xlat
xor
shl
dec
(bad)
cdq
aas
outs
(bad)
xor
inc
int
xchg
scas
push
and
mov
push
add
data16
(bad)
outs
cdq
imul
call
sub
(bad)
retf
movs
cld
fld
repnz
call
loop
stos
xchg
cmp
gs
das
call
movs
cmps
or
dec
adc
jp
mov
dec
daa
mov
inc
loopne
jne
cs
ret
push
fwait
xchg
xchg
sub
and
xchg
mov
aaa
xchg
rol
lds
and
(bad)
sbb
jnp
imul
movs
cmp
test
aaa
retf
xchg
pop
sub
or
lock
sar
scas
ss
stos
fidivr
cwde
push
pop
or
pop
pop
cld
test
jge
jno
out
cs
jl
pop
shr
inc
lds
in
rcr
dec
and
mov
push
or
sbb
mov
fadd
imul
repz
mov
sbb
(bad)
in
fucom
lods
sbb
pushf
jmp
sub
jb
retf
clc
mov
xor
retf
clc
test
adc
sbb
mov
mov
iret
in
repz
xchg
mov
into
add
pushf
jmp
ret
aam
push
mov
lock
pusha
cdq
push
cmp
not
(bad)
call
ds
sbb
rcr
lds
cdq
add
mov
cmp
call
ins
add
xor
enter
jg
xchg
cwde
movs
in
in
dec
push
outs
clc
dec
add
mov
sub
jmp
call
mov
aas
xchg
sbb
dec
pop
cmps
cmp
out
push
mov
jno
or
inc
and
mov
and
push
stos
(bad)
in
jo
jp
jb
outs
jne
push
repnz
and
lods
in
imul
in
movs
jb
in
inc
or
movs
rol
add
out
pushf
cmps
pop
sbb
xchg
add
retf
xchg
sbb
inc
je
cli
add
sub
or
xchg
pop
cmps
jmp
test
mov
cmc
hlt
icebp
fs
cmp
fwait
mov
mov
cli
adc
imul
xor
mov
test
xchg
aaa
push
cli
je
enter
adc
loope
mov
xchg
in
xchg
cmp
cmp
int3
fs
or
jb
pop
out
xor
and
cmp
and
sbb
xchg
into
dec
addr16
xor
mov
imul
jo
mov
das
pop
popa
jle
push
xlat
out
pop
mov
daa
add
aas
push
lds
outs
shr
into
aaa
push
(bad)
xlat
test
jb
xor
mov
test
pop
or
pop
sahf
and
std
in
inc
hlt
mov
push
lea
fucomi
lods
pop
(bad)
cld
dec
arpl
push
jmp
mov
(bad)
lock
add
ret
xrelease
loop
(bad)
lods
movs
jg
mov
in
ins
xchg
pop
sbb
push
push
and
mov
or
jno
dec
lods
pop
pushf
(bad)
sub
xlat
js
add
clc
cmp
fadd
mov
rcr
mov
fs
pop
inc
icebp
adc
clc
jae
fisub
cmp
cmp
hlt
xlat
mov
cdq
cs
retf
sbb
into
es
cld
ds
mov
xchg
call
pop
jle
lock
mov
jecxz
or
stos
fdiv
xchg
test
pop
ret
xchg
sbb
sub
lods
jmp
data16
jge
push
sbb
cmp
leave
mov
ins
fs
cmp
pop
int3
nop
xor
push
cmp
sar
ins
xchg
adc
ss
neg
je
fidivr
sub
inc
gs
or
jp
fwait
test
movs
add
inc
push
mov
arpl
lods
sti
cmps
lods
mov
aam
mov
scas
push
xchg
(bad)
mov
cs
out
(bad)
fisub
lods
sub
mov
mov
jo
jmp
inc
adc
lods
pop
adc
dec
inc
(bad)
stos
mov
push
jmp
adc
sti
aam
nop
and
pinsrw
fstp
xlat
sub
xchg
scas
(bad)
sub
mov
xchg
fs
pop
lahf
mov
cmc
and
mov
(bad)
sub
mov
push
fisttp
mov
push
pushf
xlat
jle
add
aaa
inc
test
ins
out
add
mov
add
mov
add
add
jmp
mov
(bad)
mov
loopne
test
out
push
adc
or
xor
test
stos
sub
jmp
fcomi
popf
xchg
setns
jge
in
ins
(bad)
das
dec
mov
inc
lea
xchg
xlat
sub
mov
pop
and
sbb
cmp
add
inc
adc
cdq
pop
enter
push
sti
fcomp
mov
push
loope
inc
mov
mov
(bad)
mov
xchg
adc
sub
(bad)
div
adc
sub
jmp
mov
cli
inc
mov
sbb
mov
xor
mov
sbb
cmp
sar
test
imul
cmp
push
add
mov
div
push
imul
xor
cmp
(bad)
xchg
and
cmp
adc
mov
dec
sahf
in
xor
in
je
js
dec
ins
pop
or
cmp
cs
add
mov
out
sub
(bad)
arpl
fild
and
gs
shr
(bad)
cli
nop
push
loopne
cmp
adc
and
imul
mov
pop
sub
stos
pop
data16
movs
lea
loop
stos
fisub
in
pop
sbb
pop
cmps
mov
mov
add
dec
jb
fdivr
out
cmp
fst
xchg
push
xor
nop
imul
(bad)
mov
not
mov
lods
std
inc
js
out
in
fstp
push
pop
mov
mov
jo
adc
ficomp
pop
mov
sub
mov
test
lods
mov
(bad)
outs
daa
mov
repz
add
xlat
or
mov
dec
cmp
sbb
js
mov
in
scas
test
sbb
out
xchg
push
cmp
sar
add
addr16
xchg
inc
int3
inc
aaa
dec
and
ja
adc
and
mov
jnp
inc
hlt
push
xchg
in
add
push
push
mov
cmps
sub
imul
aas
and
adc
adc
sub
scas
mov
ja
nop
retf
in
mov
leave
xchg
int3
rol
inc
pop
sub
not
aad
loopne
xor
add
xor
icebp
js
outs
popf
test
mov
dec
mov
retf
add
daa
cmp
mov
mov
pusha
mov
cmp
add
aas
cmps
sub
call
aas
inc
pop
int3
jge
scas
int
mov
gs
pusha
jecxz
inc
pop
clc
int
lods
sub
pop
cmp
inc
cmc
inc
aaa
mov
sbb
out
das
push
push
inc
add
rol
or
jb
adc
xor
fdiv
leave
pop
mov
(bad)
movs
int3
inc
adc
mov
arpl
movs
(bad)
in
mov
cmp
or
push
inc
jae
and
inc
and
mov
icebp
scas
leave
scas
sub
loop
jmp
mul
das
push
add
or
cdq
push
xor
dec
loopne
jb
adc
adc
dec
xor
jo
mov
nop
jmp
add
sub
mov
or
add
pop
mov
mov
hlt
popa
adc
jg
imul
maxpd
cmps
cdq
inc
sub
mov
push
hlt
inc
mov
inc
add
cdq
(bad)
xchg
xor
jb
mov
sbb
nop
push
mov
stos
cmp
outs
xor
xor
fld
and
dec
dec
mov
sub
dec
xor
jmp
xor
push
mov
adc
dec
movs
fistp
push
test
adc
ins
arpl
pop
mov
mov
std
mov
scas
add
jmp
fcom
lahf
xchg
lock
call
ficomp
inc
adc
cdq
lahf
pop
jge
enter
cmps
sar
mov
add
int3
ds
push
cwde
cwde
lods
mov
inc
dec
test
fs
inc
add
nop
es
jecxz
mov
bound
(bad)
xor
(bad)
push
mov
out
enter
pop
mov
test
pop
mov
fst
or
sti
dec
mov
cmc
retf
es
sti
jg
addr16
adc
xchg
(bad)
or
push
call
stos
in
test
ret
imul
cs
add
(bad)
or
mov
add
(bad)
popf
sbb
push
call
sbb
cmp
lock
jmp
(bad)
jg
cwde
test
jno
mov
mov
adc
cmp
pop
xor
lds
in
(bad)
inc
xlat
jns
ss
adc
mov
xchg
outs
movs
xor
inc
out
push
xor
rcl
and
rol
pop
mov
rcr
das
sar
and
xchg
fisub
pop
jne
int3
cmp
jp
imul
pop
sub
sub
jmp
sub
in
adc
push
dec
mov
mov
dec
add
adc
adc
scas
lahf
xchg
xchg
dec
js
fisubr
add
xor
jbe
in
imul
fstp
sbb
add
mov
mov
add
jo
sbb
inc
xchg
movs
jecxz
mov
lods
xor
mov
ja
inc
stc
outs
pop
or
jne
xchg
scas
jns
xchg
pop
(bad)
fist
inc
inc
psubq
jmp
lahf
pop
movs
mov
sbb
push
dec
inc
jns
xchg
jmp
pop
sbb
cdq
arpl
gs
call
fwait
sub
xor
outs
inc
jecxz
jecxz
pop
sub
pushf
mov
in
(bad)
call
(bad)
sti
cmc
and
push
test
cmp
sub
stc
and
add
lods
je
stos
ins
and
xchg
mov
pop
push
fisubr
sahf
and
pop
cmp
fisttp
add
jg
pop
mov
repz
xchg
push
cmp
into
out
dec
rcl
dec
stos
and
or
in
or
mov
push
pushf
ss
fmul
jle
ins
inc
outs
mov
cli
push
dec
or
mov
out
push
outs
pop
pop
lods
jmp
push
cmp
and
movs
push
jmp
sahf
mov
add
sub
imul
pop
or
push
sub
loop
out
or
adc
and
fist
cmc
and
es
pop
or
imul
test
cld
fidiv
fld
movs
sub
push
mov
out
push
xor
enter
(bad)
adc
ret
mov
mov
jmp
ret
int
add
stc
xor
dec
ins
dec
shl
shl
stos
add
fs
test
dec
adc
pop
mov
lods
mov
ins
inc
push
loop
leave
push
dec
xchg
mov
nop
inc
std
jl
inc
mov
mov
aaa
jne
sub
test
jp
mov
imul
shl
jmp
inc
(bad)
cld
sub
push
enter
adc
in
je
fwait
sbb
or
cmp
pop
aam
(bad)
shr
das
fs
aam
in
sbb
add
test
add
lock
clc
out
int
or
mov
xchg
pushf
popa
mov
sub
add
sti
dec
lds
movs
inc
loopne
dec
arpl
cli
sub
ins
mov
push
push
pushf
mov
stc
push
bound
inc
mov
call
adc
in
add
add
xor
les
rol
push
mov
xchg
pop
ret
sbb
mov
xor
and
jmp
jecxz
add
repnz
daa
(bad)
dec
ins
in
push
out
sti
(bad)
push
dec
mov
outs
std
cmp
sti
cdq
pop
cwde
or
mov
jle
jle
inc
dec
mov
sub
pop
push
xchg
rol
xchg
mov
test
and
in
test
sub
fstp
loope
push
xchg
mov
cdq
clc
push
(bad)
pop
xchg
or
enter
push
sbb
outs
push
pop
fcomp
mov
outs
ins
ins
das
jae
push
xchg
jge
pop
lods
popa
cmc
xor
dec
and
loopne
dec
idiv
loop
adc
add
xor
push
push
add
popf
cmps
data16
xor
mov
and
add
xchg
retf
arpl
fdiv
jge
mov
fst
mov
std
mov
mov
(bad)
mov
mov
lea
in
fcomp
pop
fdivr
(bad)
mov
bound
jl
mov
pop
icebp
shl
loopne
mov
cmp
mov
ss
int3
frstor
mov
adc
mov
mov
fistp
out
push
inc
icebp
jmp
int
outs
ss
(bad)
sub
sbb
movs
and
mov
jnp
ror
(bad)
out
cmps
loop
dec
mov
call
(bad)
aaa
in
pop
(bad)
jge
int
ret
mov
xor
call
cli
shl
add
movs
mov
test
push
pop
sbb
push
sbb
mov
rcl
add
mov
sub
cmp
mov
mov
stc
cmp
sbb
repnz
(bad)
sbb
sbb
push
jae
cwde
push
xor
ret
sbb
pop
sbb
and
xchg
push
adc
mov
add
(bad)
mov
ds
sti
rcr
push
cmps
loope
shl
sub
mov
inc
je
push
or
jmp
mov
inc
retf
mov
popf
add
and
test
push
add
adc
mov
call
sbb
lea
mov
mov
movs
cmp
xlat
dec
add
out
je
cs
cmc
jbe
pop
mov
retf
test
cmp
xchg
std
and
pop
sbb
test
iret
cmp
repnz
xlat
jne
cmps
icebp
dec
jmp
mov
inc
and
cmps
mov
mov
or
mov
inc
cmp
cmps
add
das
xor
loopne
push
in
push
imul
loopne
and
adc
adc
adc
push
xchg
loop
loop
popf
iret
adc
in
(bad)
daa
push
in
sahf
lods
or
cmp
mov
jo
and
inc
xor
cmovb
out
out
mov
into
pop
pxor
icebp
sub
jne
loopne
scas
push
das
or
inc
in
test
xor
imul
add
mov
fwait
jl
mov
fwait
add
cmps
shl
push
xor
adc
xchg
test
fmul
(bad)
ins
(bad)
cmp
inc
nop
mov
dec
mov
mov
js
call
ret
xchg
push
sub
xchg
es
sub
push
pop
lea
movs
aad
pop
fdivr
shld
arpl
cmp
adc
clc
addr16
mov
and
arpl
stc
hlt
mov
jno
sbb
movs
(bad)
mov
ficomp
sub
scas
pop
sbb
pop
fdivr
xchg
push
pop
pop
cmp
xchg
inc
push
xchg
cmp
loopne
(bad)
aas
inc
rcl
mov
dec
sbb
xchg
xchg
pop
adc
add
loope
jne
xchg
cs
mov
inc
cli
pop
idiv
sbb
bound
mov
ficomp
loopne
sub
adc
fisub
add
mov
pop
lahf
stos
cmp
push
xchg
mov
and
(bad)
push
lds
icebp
and
adc
mov
bound
ins
rol
mov
mov
push
push
add
lahf
aas
lods
xchg
dec
jnp
inc
ins
les
and
or
fs
pop
mov
stos
repz
std
pusha
add
sahf
adc
(bad)
dec
outs
test
fnsave
xchg
sbb
pop
test
jge
xor
retf
cmp
mov
gs
pop
inc
icebp
not
idiv
in
cmp
or
sti
stos
nop
neg
outs
jbe
cmp
loopne
mov
mov
xchg
adc
inc
jbe
shl
cli
ins
fs
pop
movs
aaa
inc
stc
or
xchg
hlt
inc
jmp
add
retf
int3
mov
mov
stc
sub
inc
cwde
mov
pushf
inc
cli
movs
or
nop
or
and
and
xchg
test
fstp
leave
adc
aas
mov
add
cmp
and
sahf
call
xor
scas
push
rcr
test
xchg
in
clc
(bad)
cdq
push
push
fsubr
adc
test
mov
adc
and
jecxz
pop
addr16
xchg
dec
jbe
int
xor
sete
push
push
mov
out
sub
xlat
inc
mov
fs
lods
adc
push
fs
pop
cmp
xchg
out
jb
lahf
mov
xchg
in
addr16
fwait
ret
push
cmp
xchg
push
mov
or
out
inc
mov
dec
fimul
dec
pop
and
fsub
add
test
pop
fs
jmp
push
jae
pop
lea
aaa
ins
fs
sbb
lahf
adc
or
lods
add
enter
mov
cli
leave
xchg
(bad)
outs
jb
pop
add
pop
mov
popa
lods
push
xlat
inc
sahf
dec
lahf
push
jmp
nop
int
(bad)
pmovmskb
pop
add
push
icebp
push
xor
les
sub
lds
lahf
sysexit
xchg
retf
adc
mov
imul
push
cmp
addr16
push
sbb
mov
popf
mov
je
bound
and
mov
imul
pop
imul
adc
mov
pop
add
xchg
lahf
adc
push
fcom
es
push
ror
jbe
movs
sbb
add
mov
ds
inc
mov
mov
inc
stos
inc
(bad)
cld
cmp
mov
pop
push
mov
jno
pop
cmps
jbe
mov
adc
jge
popf
jno
pop
dec
nop
jmp
(bad)
inc
pop
scas
dec
cli
add
push
mov
pop
cli
fwait
out
loop
loopne
xchg
mov
dec
pushf
jns
adc
xchg
push
popa
sub
mov
cmp
stc
xchg
(bad)
ss
ret
std
or
test
cld
or
call
push
std
call
fsub
ins
sbb
test
in
addr16
jne
call
mov
test
and
(bad)
cmp
out
adc
sbb
iret
clc
addr16
lods
lods
mov
(bad)
sbb
mov
adc
pop
fistp
lds
mov
int
mov
repnz
ins
xchg
push
hlt
cmp
into
ret
into
inc
push
adc
ss
xchg
sar
call
(bad)
sub
test
or
sbb
mov
xchg
inc
jno
imul
cmp
xchg
call
mov
loop
jne
push
jns
cmp
push
stos
bound
repnz
lock
mov
sbb
cmp
ss
dec
fsubr
(bad)
xor
xchg
pop
movs
mov
icebp
jbe
jmp
shl
ja
xor
cmc
pushf
jno
adc
jmp
test
inc
in
jbe
retf
data16
fisttp
dec
out
cmp
sbb
loop
scas
push
(bad)
aad
push
mov
in
pusha
jne
jl
imul
loope
arpl
push
sub
fwait
in
xchg
faddp
ret
push
iret
and
push
add
pop
dec
fld
daa
jnp
jns
mov
imul
imul
pop
adc
mov
mov
push
add
les
icebp
pop
ret
stos
jnp
or
shl
jle
mov
sar
sub
call
cmp
in
inc
cmc
in
shl
pop
adc
add
mov
cmp
push
mov
mov
in
dec
loope
inc
xchg
(bad)
outs
mov
sub
in
cmp
lds
inc
mov
jl
cmc
pusha
in
(bad)
aas
inc
pop
push
mov
test
jmp
loopne
out
in
mov
inc
in
mov
dec
sub
mov
push
pop
pop
mul
dec
mov
arpl
mov
cli
xor
popf
or
(bad)
inc
mov
fdiv
stos
push
fcom
scas
xor
sbb
pusha
add
std
dec
jle
les
mov
lods
sbb
pop
mov
jg
fmul
xchg
sbb
ins
mov
add
jno
ins
mov
loopne
mov
stos
mov
xchg
cdq
js
js
adc
mov
push
adc
jg
push
cs
xor
mov
aam
sub
xchg
mov
test
xchg
shl
movs
cdq
(bad)
inc
push
mov
xchg
pop
jmp
outs
test
mov
lods
jecxz
enter
mov
and
cmp
pop
and
loop
adc
add
lods
sbb
push
out
jmp
push
dec
leave
push
aaa
addr16
xor
movs
cli
add
dec
jno
cli
push
push
hlt
push
in
pop
call
xchg
test
and
xchg
sbb
ret
push
adc
stos
sub
xor
push
inc
ret
out
mov
ret
mov
shr
js
in
iret
cmp
pusha
push
xor
shl
sbb
mov
out
pop
(bad)
test
inc
sbb
mov
push
mov
xor
mov
push
or
mov
inc
xor
ins
fdiv
scas
pop
xchg
mov
push
cmps
cmps
push
aas
idiv
bound
sub
add
test
(bad)
aad
jnp
ret
adc
jae
push
cmp
addr16
mov
mov
jp
dec
ret
test
sub
imul
xchg
loope
pop
and
or
adc
pop
fiadd
or
ret
push
aas
cmp
xor
push
pop
add
retf
jp
ss
mov
push
cmovno
jae
call
mov
movs
fstp
sbb
pop
sti
arpl
fdivr
imul
push
enter
xor
inc
jno
retf
imul
mov
jbe
mov
lock
and
jp
jno
or
(bad)
pop
sbb
adc
mov
fcomi
dec
dec
push
and
icebp
mov
sub
inc
movs
mov
int3
dec
sub
cwde
pop
jle
imul
iret
imul
adc
jle
mov
std
inc
adc
cmp
retf
test
dec
shl
outs
sbb
inc
jo
jl
(bad)
pusha
out
adc
push
push
mov
push
clc
add
mov
iret
mov
push
sbb
inc
adc
add
cmps
or
sahf
mov
push
(bad)
fidivr
sbb
enter
cmps
adc
xchg
dec
jno
pop
jo
mov
and
xor
mov
inc
ret
mov
or
lods
jmp
pop
fisttp
rcl
das
outs
adc
ins
shr
mov
mov
aam
push
mov
pop
(bad)
inc
leave
out
(bad)
mul
cmp
hlt
mov
ret
adc
into
addr16
retf
pushf
pop
cwde
jp
xchg
(bad)
mov
push
xchg
sbb
inc
mov
sub
iret
loope
fisub
xor
clc
nop
ins
das
das
mov
stc
imul
loop
popf
stos
enter
(bad)
and
arpl
mov
mov
fistp
test
imul
lock
add
or
xor
jp
lock
iret
fidiv
mov
neg
sub
inc
loopne
dec
push
shl
hlt
mov
mov
pop
cs
or
sbb
ins
lea
aaa
mov
jmp
arpl
stc
lods
inc
push
fsub
jecxz
jg
aad
fwait
shl
inc
in
sbb
rcl
fwait
push
test
mov
adc
scas
je
gs
test
push
sub
xchg
or
pushf
cwde
or
shl
mov
add
(bad)
mov
or
pop
leave
ror
jl
(bad)
call
lds
adc
and
icebp
movs
mov
aas
jge
imul
dec
scas
add
clc
and
in
(bad)
adc
pop
(bad)
stos
sbb
push
inc
jle
sub
add
fwait
push
xor
xchg
(bad)
inc
stos
aas
call
push
iret
jbe
jo
sub
xchg
and
jnp
cmc
jge
pop
arpl
mov
bswap
add
loop
jno
in
pop
jge
inc
popa
imul
cdq
stos
frstor
mov
ret
cmp
nop
movs
dec
fbld
pop
sub
cmp
adc
loope
xor
sub
das
xor
(bad)
mov
call
fbld
(bad)
inc
inc
push
int
mov
or
inc
out
sub
outs
sub
cmps
and
push
pop
push
xchg
cmp
xchg
dec
cs
xchg
mov
mov
ja
pop
adc
pop
retf
jb
push
popf
push
pop
(bad)
push
jp
and
or
dec
adc
sbb
ins
push
outs
lds
jle
cmp
push
mov
loope
cld
popf
cmc
dec
stos
popf
pop
mov
mov
jecxz
dec
imul
push
mov
mov
sub
sub
sbb
sbb
add
xor
push
pop
and
sub
mov
enter
sub
and
iret
mov
add
inc
(bad)
out
pop
cmp
(bad)
xor
mov
xchg
pop
cwde
pop
inc
cmps
movs
sbb
loopne
mov
xor
cmp
dec
outs
shl
pop
out
jae
test
out
idiv
mov
inc
outs
jno
push
mov
mov
push
jno
pop
jae
in
inc
mov
push
sub
mov
repnz
das
adc
enter
aam
movs
sub
pop
ds
out
or
(bad)
enter
mov
jg
xor
les
stc
jo
cwde
(bad)
fs
jne
add
mov
loope
pop
cmp
and
jae
inc
jae
inc
jae
cmp
dec
mov
sub
clc
push
or
cmc
cmp
push
inc
outs
rcl
adc
mov
out
cmp
(bad)
pop
or
stos
xor
mov
fst
inc
cwde
adc
pop
test
daa
loope
movs
or
(bad)
adc
or
xchg
xor
sub
mov
cli
mov
fistp
cmp
pop
xchg
mov
xor
mov
mov
test
push
cmps
loop
std
mov
je
or
retf
jae
xchg
lds
sbb
xor
sbb
jp
adc
js
cwde
cmp
mov
hlt
jae
loopne
jbe
pop
ret
push
sub
push
jb
aaa
cmp
cmp
cmp
inc
adc
aas
mov
jg
mov
fcomp
popa
leave
sbb
aaa
adc
mov
push
pop
rol
sbb
jmp
xchg
fwait
add
popf
xor
int
push
jcxz
pop
mov
js
mov
dec
push
clc
jl
jno
popf
dec
inc
add
arpl
sti
xor
pop
out
jne
shr
(bad)
mov
mov
fistp
gs
sbb
popf
out
mov
in
sub
push
retf
dec
test
adc
popf
stc
iret
ret
sbb
sbb
mov
dec
xor
cmp
das
mov
retf
inc
nop
out
jno
outs
(bad)
in
pop
jae
clc
scas
or
std
pop
inc
cmps
movs
jg
das
shl
les
lahf
loop
aad
or
xor
in
cdq
rcr
xor
popa
jmp
inc
jnp
gs
mov
cs
retf
cdq
int3
xchg
pop
pushf
movups
es
in
mov
cdq
inc
sbb
and
(bad)
mov
test
push
xor
pushf
paddb
hlt
dec
cdq
pop
jae
test
outs
imul
js
mov
int
sub
jae
mov
dec
mul
cld
loop
lock
add
mov
pop
sub
adc
ret
das
sbb
fistp
push
rcr
loope
xor
scas
jmp
cmc
(bad)
out
inc
and
popf
jmp
ret
scas
cmp
stos
push
lods
cmp
push
shl
pop
jg
(bad)
lods
inc
cmp
int
jns
jmp
jbe
fdiv
xor
je
mov
mov
ja
and
dec
test
popf
(bad)
sti
das
dec
fidivr
shl
pop
mov
fcmovbe
mov
shl
dec
or
repz
cmp
xor
push
mov
ja
push
lods
sub
test
jmp
push
das
mov
jne
xchg
or
xor
adc
mov
js
fcom
call
push
xchg
mov
mov
mov
inc
hlt
call
mov
push
mov
sub
sub
push
cmp
bound
mov
dec
cdq
(bad)
outs
int
cmp
adc
aaa
dec
ret
stos
pop
rol
xchg
and
dec
pop
dec
leave
(bad)
mov
jmp
xlat
jnp
jmp
fcomp
jmp
xor
bound
xor
addr16
aas
stc
inc
je
movs
retf
push
fnstsw
lods
sub
jmp
jno
jbe
ins
sbb
jmp
mov
fwait
repz
aas
adc
ss
push
pop
repnz
add
or
call
mov
add
repnz
fnstenv
test
(bad)
in
in
inc
jle
in
aas
push
(bad)
test
sbb
mov
xchg
adc
cdq
fdiv
inc
ds
(bad)
jmp
js
push
ret
aas
daa
cmp
mov
daa
stos
jg
jg
mov
or
in
ins
sub
leave
mov
ret
mov
mov
test
xchg
mov
push
cmc
push
mov
repz
mov
xor
or
jae
or
js
daa
(bad)
fist
mov
scas
ret
and
push
mov
test
inc
inc
retf
sar
loopne
push
xor
mov
loope
cmps
push
dec
movzx
aad
mov
retw
xor
test
loopne
outs
mov
mov
(bad)
and
jmp
jnp
or
add
das
test
stos
jmp
cmp
adc
hlt
mov
jp
lds
sqrtps
cmp
jns
in
rcl
cld
les
adc
sahf
and
add
sub
push
loopne
jge
(bad)
nop
adc
imul
adc
nop
pushf
jae
mov
push
adc
pop
and
js
into
sub
inc
arpl
mov
xchg
loopne
ins
sub
aas
es
mov
mov
out
(bad)
jle
or
pop
lods
(bad)
push
movs
daa
mov
call
and
jmp
xchg
pusha
xor
cmp
sub
shr
and
inc
das
les
enter
xchg
pop
cmps
pop
add
mov
in
and
js
cmp
add
mov
pop
inc
retf
mov
ins
outs
cmp
nop
add
lock
or
ret
sub
aad
jns
jns
ret
mov
pop
inc
sti
xlat
cmp
mov
fwait
add
lods
jne
sub
sub
ret
out
or
or
push
mov
adc
jns
jo
(bad)
scas
dec
movs
push
xchg
mov
jmp
fnstcw
xor
ret
add
mov
fdiv
iret
mov
dec
pop
aad
xchg
push
sub
ins
int3
jmp
push
mov
push
lods
cmc
xlat
fmul
xor
daa
rcl
xchg
loopne
mov
clc
push
sub
mov
pop
cli
cmp
dec
jo
mov
push
mov
pushf
shl
aaa
stos
lock
mov
loopne
popa
mov
mov
add
push
imul
push
cld
iret
ret
jg
jle
dec
dec
cmp
and
xchg
out
ror
(bad)
(bad)
cmp
setp
mov
and
fs
leave
into
dec
mov
xor
adc
pop
and
leave
jecxz
jle
mov
mov
es
in
or
fwait
and
mov
add
dec
add
sbb
adc
add
mov
mov
xchg
jmp
dec
push
xchg
ja
and
lock
adc
loope
inc
mov
mov
outs
fisubr
rol
out
rol
cmp
cmp
inc
adc
sub
jo
aam
or
hlt
fimul
xor
clc
int3
xor
sub
neg
sti
lds
inc
pusha
(bad)
mov
xchg
aam
or
lock
cwde
test
test
jns
je
repz
fadd
sbb
test
xchg
arpl
pop
adc
call
ret
add
jmp
sahf
xchg
add
mov
dec
movs
cdq
in
daa
movs
aas
xor
sub
jp
pop
mov
dec
or
adc
xor
push
add
or
push
push
xchg
mov
inc
lods
and
sbb
push
hlt
inc
aam
cmps
and
fadd
mov
and
out
ror
daa
and
xchg
hlt
and
cmp
(bad)
cmp
mov
add
sahf
mov
shl
fild
shr
cs
ret
and
aaa
xchg
sub
and
stos
dec
xlat
out
push
pop
aad
in
imul
mov
pop
test
daa
fcomip
test
jge
sahf
xchg
pop
sbb
pop
sub
cli
(bad)
mov
xlat
or
repnz
repnz
and
pop
mov
dec
test
aas
loopne
mov
or
adc
stos
adc
jge
mov
adc
jge
popa
outs
stos
sub
pop
ds
ret
js
fcmove
mov
fwait
add
xor
dec
dec
push
xor
cmp
test
jle
jae
xor
pop
jo
data16
es
cmp
lods
sar
enter
sub
nop
out
and
pop
jnp
lea
mov
pop
ret
daa
out
or
rol
cld
fld
jecxz
push
pop
retf
les
std
or
loopne
mov
sub
mov
ficom
data16
lds
retf
mov
jmp
(bad)
call
mov
push
in
cmc
retf
mov
jp
jno
and
or
fwait
shr
push
jno
pop
xor
cdq
and
dec
sbb
dec
and
ret
mov
inc
dec
test
jo
cmovb
hlt
dec
retf
xor
nop
xor
push
cmp
imul
(bad)
xchg
bound
mov
inc
hlt
jnp
inc
rcr
mov
dec
dec
xchg
fs
ficom
xlat
out
test
fcomi
push
call
out
pusha
call
call
adc
pop
jno
pop
sbb
mov
pusha
ret
push
inc
popa
iret
mov
push
mov
mov
lods
cmp
test
sub
jmp
sar
pop
or
lods
fisub
xor
repz
(bad)
jge
mul
mov
push
les
outs
movs
lock
add
cli
xor
ret
sbb
hlt
xor
(bad)
mov
inc
je
fcomp
clc
popf
xor
mov
pop
jne
dec
mov
xchg
leave
jp
push
cwde
(bad)
or
imul
add
stos
push
adc
movaps
push
iret
cmp
or
pop
add
cmp
adc
dec
aam
xor
out
stos
ins
push
inc
mov
hlt
inc
scas
and
mov
cmp
pusha
imul
jno
xor
stos
push
dec
out
lods
push
sahf
mov
fmul
aas
lods
scas
add
jne
cld
mov
mov
imul
loopne
add
dec
pop
scas
sahf
inc
xchg
cmps
ja
pop
icebp
rol
sbb
cmc
cmps
sub
fnsave
push
mov
jg
xor
jne
add
push
dec
adc
lds
sbb
out
imul
adc
pop
adc
mov
iret
jecxz
sub
cmp
mov
int3
xchg
push
cmp
push
xchg
popa
push
xlat
cmp
jno
dec
mov
dec
inc
repnz
adc
(bad)
add
pop
lods
lods
or
mov
lock
add
mov
adc
repz
in
fcom
dec
cdq
dec
pop
push
test
jp
pop
ja
add
rol
xor
(bad)
fdivr
mov
gs
inc
xor
and
int
xchg
push
xor
popa
sub
adc
xchg
push
pop
adc
cmps
gs
sub
jge
ins
cmp
sbb
cli
push
imul
movs
and
push
pop
push
xchg
add
push
mov
inc
or
lds
xchg
fs
jnp
mov
fcomp
inc
pop
xchg
fs
or
ret
or
out
pop
mov
out
std
mov
dec
aam
pmaddwd
iret
ror
push
icebp
xchg
rcr
icebp
mov
cmp
sti
cdq
icebp
je
pusha
inc
sbb
xchg
pushf
in
inc
mov
mov
and
divps
xchg
aaa
cld
inc
xlat
and
xlat
mov
mov
hlt
sar
mov
pop
sub
and
and
call
add
fwait
mov
popa
xchg
adc
aas
ds
xor
data16
inc
and
fbstp
jmp
push
inc
and
nop
pop
call
rol
cmp
mov
jecxz
xchg
mov
call
mov
cld
aam
mov
leave
add
inc
pop
and
inc
add
cdq
pop
mov
jp
xchg
add
mov
test
mov
and
mov
sar
push
fs
jle
or
loop
and
fdiv
mov
lods
xchg
mov
retf
push
or
es
frstor
mov
mov
inc
and
mov
xor
rcl
pop
icebp
inc
push
xor
sti
jle
es
and
cmp
pop
push
inc
pop
dec
sub
inc
add
inc
xchg
mov
or
or
push
lds
lds
cs
push
fst
or
adc
and
xchg
and
or
adc
or
scas
dec
mov
sub
pop
mov
rol
xor
leave
jns
sbb
and
cmp
dec
xchg
call
cmps
leave
jb
mov
xor
std
mov
and
fld
shr
add
push
sub
inc
dec
cmc
or
dec
ja
loope
cmp
shl
call
xor
out
xchg
cmp
and
stos
xor
sub
shl
xchg
pop
xchg
xchg
loop
retf
cli
gs
sub
add
jnp
dec
stos
pop
xor
out
ja
add
outs
push
xchg
sub
ret
clc
mov
out
inc
xlat
adc
pop
jmp
and
mov
cmovne
add
add
std
push
push
add
inc
pop
retf
or
mov
ror
enter
xchg
fisttp
xchg
adc
mov
cli
mov
dec
lock
retf
jb
bound
xchg
pop
sub
xor
imul
mov
imul
arpl
jle
inc
pop
inc
test
in
xchg
adc
xchg
fisttp
jle
ret
retf
rdmsr
inc
or
(bad)
(bad)
in
mov
(bad)
xor
push
fiadd
pop
cwde
outs
sahf
addr16
pop
cmps
adc
aam
call
cmp
lods
test
mov
mov
xor
or
fsub
pop
lock
add
inc
retf
(bad)
loope
xor
sbb
movs
test
vpsrlw
scas
std
test
xor
mov
loop
mov
(bad)
xor
jecxz
mov
leave
shl
pop
adc
sar
or
and
jmp
mov
xor
fs
les
and
dec
mov
jl
sbb
push
xchg
jl
test
mov
and
push
scas
sub
inc
(bad)
cmp
xchg
imul
add
mov
pop
mov
mov
frstpm(287
sub
outs
cmp
popf
push
and
push
inc
jge
dec
mov
dec
cmc
ror
jae
cmp
loope
jge
push
pushf
mov
in
std
mov
inc
push
dec
xor
scas
cmp
lahf
mov
add
mov
xchg
xchg
(bad)
cmc
or
sar
or
fs
stos
mov
icebp
push
arpl
fidivr
idiv
xor
pusha
xchg
fcom
sbb
push
sbb
jl
and
xor
neg
or
mov
pop
mov
pop
or
jmp
or
sub
stos
inc
scas
(bad)
mov
xchg
movs
xchg
xchg
test
dec
mov
inc
cmp
mov
ror
jbe
sbb
out
out
mov
xchg
sahf
test
sub
push
iret
adc
into
cmp
ds
bound
xlat
aad
stos
dec
aas
adc
(bad)
movs
loopne
adc
cmp
movs
test
sub
cld
inc
test
imul
adc
or
jmp
add
add
adc
add
fs
ret
sbb
into
push
mov
mov
push
push
jmp
retf
push
shl
jo
cmp
sti
mov
mov
jbe
or
or
jl
pop
mov
sub
std
fstp
outs
cwde
sub
(bad)
sub
out
xor
std
fucom
idiv
dec
pop
call
push
mov
idiv
dec
loop
(bad)
jbe
sbb
(bad)
fmul
aad
jp
jbe
push
jmp
out
xchg
add
out
es
pop
scas
dec
xchg
lea
adc
xor
push
add
lods
jge
mov
minps
adc
cs
retf
aad
gs
in
les
mov
push
pop
ror
sar
and
xchg
pop
adc
push
in
repz
dec
push
sub
mov
inc
inc
mov
and
pop
add
jg
ins
loop
call
jnp
add
add
push
mov
cmp
xlat
sbb
xchg
sbb
cmp
push
dec
inc
mov
loopne
jbe
sahf
inc
cdq
mov
dec
add
jmp
mov
mov
dec
ss
adc
std
das
lods
cs
pop
sti
or
adc
sub
scas
xchg
sbb
pop
dec
mov
das
xchg
into
inc
xchg
lds
cmc
sbb
pop
cmp
mov
sub
cld
and
mov
aaa
jne
push
inc
pop
bound
lahf
sub
test
jp
xor
sbb
or
pop
and
es
mov
push
test
mov
cmp
sbb
xchg
mov
leave
jae
fidivr
xor
cmc
aam
cwde
cmp
cld
mov
fisub
fdivr
lea
retf
add
dec
mov
mov
push
inc
xchg
xor
push
inc
in
and
bound
or
sbb
lods
loopne
jecxz
pop
mov
shl
jp
mov
dec
ret
into
push
or
push
push
xor
dec
dec
add
or
cmp
out
dec
enter
ficom
mov
cmp
push
pop
je
sbb
jbe
test
xchg
xor
xchg
retf
xor
mov
add
mov
pop
je
and
push
jo
out
scas
test
inc
test
loop
jecxz
aas
repnz
int
sbb
adc
mov
jle
push
loop
push
xlat
in
pusha
stos
adc
out
imul
pushf
jmp
xchg
add
or
push
(bad)
adc
pop
dec
or
test
and
retf
add
xor
in
retf
imul
add
cs
mov
add
xor
mov
repz
pushf
jmp
data16
jae
into
std
lods
loope
loope
into
jne
mov
daa
das
sub
push
adc
inc
cmc
jp
jle
cmp
mov
push
mov
fisttp
mov
shl
out
in
pop
bound
pop
ret
jg
in
jb
cli
xor
into
mov
pop
leave
sbb
es
cmps
push
popa
shl
cli
dec
icebp
jmp
sar
push
adc
dec
and
and
inc
inc
add
xchg
cmp
dec
dec
sbb
enter
push
add
mov
shl
mov
je
in
fcomip
mov
movs
sub
dec
pop
jnp
sub
jl
sub
and
jmp
scas
addr16
mov
pop
and
push
mov
out
dec
dec
fmul
fist
xor
mov
pop
lock
sub
cmps
push
adc
pop
sbb
pop
test
sub
add
movs
ss
pop
push
cwde
loop
sub
jle
test
cmp
push
fcom
sub
(bad)
fisubr
xchg
pop
je
sub
jmp
rol
xor
push
cmp
inc
pop
lea
mov
shl
maskmovq
scas
mov
les
sahf
stos
sbb
stc
pop
std
add
mov
xchg
mov
mov
mov
pop
repz
pop
pop
ret
in
dec
and
movs
xchg
daa
ins
mov
ss
lock
aaa
sub
push
sub
mov
push
ror
iret
shr
or
cmp
inc
sbb
sbb
repnz
mov
mov
test
sub
sub
std
and
inc
fistp
das
pop
(bad)
mov
sbb
daa
jbe
push
ds
jnp
inc
hlt
aaa
cmp
mov
mov
imul
nop
popf
xor
mov
sub
mov
out
cmps
sub
xchg
sar
xor
sub
sub
or
ret
lds
xchg
dec
pusha
push
jnp
pop
enter
add
xlat
daa
jecxz
out
dec
xchg
je
addr16
inc
loope
mov
dec
jmp
shr
aas
push
popf
adc
out
pop
add
(bad)
or
ror
sbb
adc
js
mov
in
aaa
es
in
push
pop
push
sahf
or
in
mov
shr
mov
jg
mov
mov
mov
imul
adc
mov
mov
test
xor
sbb
push
push
jl
mov
int
daa
stos
jo
sub
jp
adc
fmul
jecxz
mov
sub
(bad)
xor
scas
sub
cs
cmps
mov
and
cwde
mov
test
pusha
div
mov
leave
jmp
imul
add
inc
inc
scas
sbb
out
xchg
int3
push
mov
cmp
jno
into
pop
jbe
jle
xor
pop
(bad)
movs
inc
adc
ret
xchg
inc
mov
dec
pop
dec
lods
and
out
push
out
movs
jg
(bad)
adc
sbb
inc
cld
daa
push
sbb
cmp
dec
les
sub
cmp
(bad)
jno
push
inc
mov
movs
mov
xchg
push
inc
mov
mov
and
daa
jle
loop
pop
shl
int3
jb
mov
out
mov
xchg
xchg
pusha
cmps
or
into
and
lods
in
xchg
enter
add
(bad)
mov
sub
scas
inc
push
push
jl
lahf
fcomp
int
popa
add
arpl
cmc
and
cmp
icebp
and
push
rcr
sub
cmps
mov
ds
cdq
div
fstp
jge
xchg
or
xor
add
fimul
cmp
cmovge
leave
jle
dec
in
jp
or
call
mov
mov
sbb
sub
stos
rol
ss
or
div
aad
inc
xor
dec
xor
sub
dec
js
jl
sub
lods
sbb
dec
js
push
arpl
sub
cmp
mov
arpl
rcr
pop
add
and
mov
push
cmp
outs
ror
popf
pushf
popa
loop
test
inc
pop
adc
sbb
call
xchg
push
pop
imul
jecxz
ja
mov
lea
and
adc
cmp
aad
(bad)
fcmovb
sub
(bad)
mov
repz
pop
jae
out
push
pop
sti
rcl
shr
call
loope
cmp
jno
xchg
ja
and
pcmpgtw
adc
sub
adc
inc
add
je
test
lods
or
xor
and
cmc
mov
push
sbb
fld
nop
pop
mov
out
scas
bound
cmps
addr16
dec
xor
sub
fwait
mov
mov
icebp
jecxz
imul
lods
ret
loop
popf
loope
inc
mov
test
mov
dec
repnz
xor
stos
cdq
scas
mov
stos
into
sahf
sbb
std
repz
out
jl
mov
mov
or
dec
add
sbb
lods
popf
sbb
mov
loopne
cmps
xor
jne
dec
jecxz
stos
xchg
movs
push
das
xor
push
push
cmp
sub
rcr
inc
cmp
(bad)
out
sbb
loop
test
dec
jg
ret
mov
or
cwde
mov
into
scas
das
lock
xor
push
inc
gs
sbb
push
mov
xor
adc
mov
mov
or
xor
and
pop
jle
and
mov
(bad)
push
fwait
inc
inc
test
mov
xlat
je
sti
mov
adc
ins
adc
ins
push
jno
pop
scas
xchg
sbb
retf
aas
call
or
pop
iret
adc
daa
sub
stos
jns
mov
arpl
cmps
sbb
cmp
cmp
icebp
stos
outs
push
add
jmp
cmp
inc
in
pusha
dec
adc
into
cs
fwait
in
sbb
popf
out
mov
bound
jbe
nop
stos
cwde
fadd
aas
xchg
sub
stc
push
aas
mov
gs
jb
push
lea
daa
pop
rol
adc
lods
gs
mov
lock
ins
cli
push
clc
push
or
addr16
jle
pop
dec
scas
sub
jl
sub
add
cmc
jecxz
mov
js
dec
inc
(bad)
popa
iret
push
js
cmp
push
shr
mov
fstp
cmps
pusha
add
(bad)
ja
addr16
jge
imul
call
test
xor
repz
dec
in
fnsave
fs
pushf
cmp
jmp
(bad)
xchg
dec
or
inc
fsub
push
(bad)
fbstp
jb
dec
mov
xchg
fadd
xchg
xor
fs
or
push
je
js
dec
inc
icebp
lods
pop
mov
dec
or
int
sub
cmp
add
in
pusha
and
jnp
and
xchg
xlat
inc
ins
push
pop
mov
adc
fidiv
jp
pop
pop
adc
sub
es
xchg
ds
xor
popa
fst
push
xchg
jl
out
iret
or
jge
dec
in
pop
inc
and
xor
ja
imul
mul
adc
outs
xor
dec
xor
jno
test
jns
fnstcw
inc
sbb
arpl
mov
aam
(bad)
shl
inc
jmp
div
jmp
clc
popa
call
(bad)
and
int3
dec
fwait
mov
push
ins
scas
mov
ins
xor
fs
push
inc
pop
and
push
mov
mov
test
ret
pop
jmp
callw
push
sahf
dec
cld
scas
lock
imul
je
les
mov
dec
lods
mov
mov
call
mov
in
push
ins
sub
xor
push
mov
jecxz
out
sub
push
dec
xchg
sub
inc
inc
sbb
lock
int
inc
xor
mov
xchg
mov
shl
pop
inc
adc
fisubr
pop
clc
fsubr
sub
sar
jne
ds
add
push
pop
sub
cli
mov
fst
js
cwde
cmp
or
xchg
int3
ss
jmp
lahf
outs
mov
daa
adc
aam
dec
xchg
jge
or
jl
pop
imul
mov
jl
nop
push
mov
adc
xchg
dec
je
push
mov
in
push
aad
test
test
pop
lds
push
dec
rcr
jae
sar
or
out
popa
pushf
adc
cli
or
sbb
or
loop
mov
ret
xchg
sbb
test
or
cwde
xchg
(bad)
and
sahf
repnz
cmp
pop
and
xlat
lahf
and
jp
mov
lods
out
pop
std
mov
push
mov
cmp
retf
popf
mov
mov
in
pop
mov
pop
mov
enter
sti
mov
jle
pop
dec
add
add
xchg
add
pop
es
inc
sbb
push
repz
cwde
dec
ins
call
cli
mov
xchg
push
xchg
lds
pushf
mov
jae
pop
loope
lods
pop
in
test
lahf
xor
inc
mov
(bad)
ret
xchg
mov
jo
lock
push
add
and
jp
mov
mov
adc
in
or
jp
adc
stos
dec
sub
mov
push
int
call
push
xchg
pop
call
jp
cmp
sub
jecxz
xlat
pop
jl
into
(bad)
(bad)
call
clc
es
inc
inc
mov
cvttps2pi
sub
mov
sub
fwait
xchg
rol
repz
pop
xchg
mov
ins
xor
fxch
outs
pop
inc
adc
mov
pop
dec
fild
(bad)
xchg
movs
ficomp
in
xor
pop
or
(bad)
xlat
xchg
mov
inc
jns
not
xlat
rcr
daa
pop
test
sub
adc
mov
adc
mov
aas
dec
js
repnz
jecxz
adc
jl
sub
movs
pop
xor
(bad)
fsubr
cli
jne
adc
lods
xor
add
adc
mov
test
leave
popf
cmps
sbb
jb
xchg
push
inc
dec
stc
loope
xchg
test
retf
pop
cwde
push
xchg
pushf
mov
ret
movs
sbb
imul
outs
cmps
imul
pushf
pushf
mov
cmps
lds
xor
cmps
test
mov
mov
test
mov
add
xor
aaa
xchg
mov
pop
sbb
sysenter
dec
sub
and
pop
jnp
push
ins
or
dec
dec
sbb
imul
jnp
daa
add
scas
mov
jmp
(bad)
das
ds
pop
test
inc
mov
(bad)
pop
inc
fistp
mov
xor
cmp
adc
popf
and
add
xchg
call
(bad)
movs
repz
dec
cmps
add
push
fnstenv
xchg
inc
jl
mov
cdq
dec
leave
mov
mov
jae
in
jns
scas
sub
mov
lea
test
inc
jo
xor
cmp
xor
addr16
and
push
stc
das
mov
retf
ret
ins
enter
sbb
push
ss
lds
and
dec
fiadd
lods
ret
xor
mov
mov
dec
mul
pop
(bad)
dec
inc
xor
xchg
sti
data16
dec
aas
dec
push
(bad)
popa
xchg
sub
stos
addr16
scas
jge
inc
retf
loop
in
in
sub
test
and
mov
lds
inc
cs
jmp
repz
mov
sub
ret
adc
das
cmps
fcomp
mov
mov
xchg
jl
mov
frstor
xlat
xchg
ret
outs
xchg
cmps
or
fdivr
rcr
xchg
popf
mov
arpl
add
pop
scas
fidiv
xchg
fistp
or
into
push
in
fnstcw
cmp
xchg
jl
gs
ss
adc
fsub
loope
arpl
fs
test
in
movs
jmp
in
push
aam
push
sub
mov
lods
hlt
jmp
icebp
ror
add
mov
jnp
sbb
hlt
jl
icebp
repnz
js
sub
mov
jl
xchg
or
mov
std
xchg
test
loop
ins
dec
add
aaa
inc
mov
nop
and
fisubr
pop
ds
(bad)
dec
mov
jl
jo
inc
mov
shr
dec
fild
mov
pop
(bad)
lahf
fs
mov
test
mov
dec
mov
inc
mov
or
sub
enter
mov
adc
enter
xchg
in
push
sub
sbb
pop
push
stos
das
(bad)
out
xchg
ins
mov
pop
rcl
jl
ja
outs
scas
or
xchg
es
xor
pusha
ss
cmp
ss
adc
mov
or
rol
push
mov
jne
or
fldenv
add
cli
out
dec
popf
out
js
push
(bad)
out
inc
xlat
cmp
jmp
out
movs
add
mov
and
into
mov
jmp
jnp
mov
mov
in
or
and
and
neg
fstp
inc
leave
rol
lds
les
lock
and
movs
and
mov
sar
cmp
ja
mov
das
and
inc
ins
jge
pushf
retf
movs
dec
push
je
fs
jl
add
xchg
mov
fist
dec
(bad)
sbb
mov
push
sti
dec
sar
jo
outs
or
movs
call
xchg
pop
pop
cdq
sbb
and
sub
mov
adc
and
pop
mov
push
mov
and
add
add
and
mov
fidivr
cld
cmp
loopne
jg
jnp
data16
lods
daa
stc
cmp
jae
xchg
ja
iret
inc
(bad)
call
xchg
push
or
repz
daa
or
mov
icebp
lea
xor
jp
rcr
mov
inc
outs
cmps
mov
lahf
mov
ja
out
sub
mov
push
test
fstp
sbb
js
sub
int3
adc
push
dec
xor
mov
xchg
iret
cmp
dec
sbb
loopne
mov
cmc
jmp
or
pop
ins
and
stc
retf
and
cdq
repz
test
sub
mov
dec
mov
jae
les
in
rcl
idiv
mov
into
call
in
sbb
out
push
fild
adc
sub
cmp
push
mov
xor
pop
push
sahf
pop
data16
daa
push
add
xor
jne
pop
bound
pop
in
mov
mov
xchg
adc
sub
ficomp
cmp
or
xor
inc
leave
mov
pusha
mov
push
test
and
cdq
or
add
sub
add
inc
xor
aad
bound
pop
ds
fmul
ret
jns
test
std
add
xor
outs
fwait
mov
out
mov
cmp
jns
fs
retf
jns
push
call
or
jo
jl
sub
mov
adc
nop
nop
or
aaa
sbb
xchg
scas
dec
mov
cmp
aaa
cmp
jl
jae
jae
add
fsub
fucomp
int3
cmp
pop
xor
sbb
pop
fidivr
jae
stc
mov
sub
outs
iret
mov
out
loopne
pushf
int
mov
push
ins
int3
sbb
hlt
outs
mov
ds
jge
mov
xchg
sar
or
jmp
mov
cmps
hlt
or
dec
mov
cmps
fwait
dec
push
fbld
lahf
sub
mov
sub
out
fbld
inc
outs
int3
push
ret
sub
iret
cmp
pop
jne
dec
sub
jp
xor
cmc
cmp
je
(bad)
ja
jne
fwait
inc
mov
push
test
shl
mov
mov
hlt
add
jmp
test
dec
or
pop
or
jo
pop
leave
dec
lea
bound
jae
into
pop
jae
pop
jns
mov
pop
xor
(bad)
shl
adc
pop
pop
push
div
mov
mov
xor
std
xchg
add
pop
add
sahf
outs
xchg
bound
test
xor
arpl
inc
sub
xlat
mov
push
add
mov
push
lahf
(bad)
push
add
adc
loopne
inc
or
mov
lahf
xchg
mov
dec
mov
imul
sbb
pop
push
jmp
test
push
nop
ret
jnp
xchg
adc
cmp
iret
or
jb
daa
xchg
dec
push
or
inc
jns
dec
sub
lea
pop
arpl
aaa
xor
xchg
jae
add
xor
sub
gs
pushw
out
repnz
pop
add
jp
jmp
test
dec
das
pop
or
cmp
je
push
movs
and
pushf
adc
mov
daa
pop
stos
sbb
sbb
push
ss
ds
mov
js
fucom
push
or
sub
add
sahf
out
cmp
into
mov
(bad)
out
xchg
ss
lea
out
fisubr
in
inc
mov
in
xor
push
adc
or
jnp
adc
xor
mov
pop
xchg
retf
imul
jae
or
jecxz
inc
ds
ret
push
aas
nop
into
aad
in
hlt
xchg
pop
nop
xchg
or
mov
outs
xor
cmp
mov
push
push
std
mov
outs
hlt
pop
cmp
icebp
cmps
icebp
push
pop
fiadd
sbb
jns
js
cmp
inc
inc
cmp
gs
inc
mov
dec
sub
mov
cmps
fsub
ficomp
cmp
mov
ins
cld
cli
and
test
ret
xor
jmp
aam
push
cmp
hlt
fild
and
popf
xor
cmp
(bad)
daa
jle
mov
pop
add
mov
fwait
mov
jg
jle
data16
dec
mov
xchg
popf
jp
cmps
mov
dec
ret
mov
sti
cmps
aam
fst
jecxz
call
mov
add
or
jmp
sar
addr16
stc
pushf
sub
mov
fiadd
aas
aam
into
out
arpl
adc
pop
adc
sbb
or
mov
sub
jg
inc
mov
bsf
and
ret
(bad)
retf
inc
mov
shl
sbb
push
mov
aaa
jae
or
mov
retf
push
sti
(bad)
adc
in
shl
sbb
mov
pop
(bad)
nop
jbe
jno
dec
cmp
jmp
inc
(bad)
jmp
mov
call
out
jmp
sub
xor
loop
inc
(bad)
cld
lods
push
out
adc
inc
ret
test
xchg
outs
jo
lods
popa
dec
jl
test
sub
sbb
add
pop
fwait
xlat
pop
call
or
jg
sub
cmc
xchg
mov
adc
cmp
mov
int3
repnz
frstor
push
dec
addr16
push
jnp
imul
popa
mov
push
ficomp
jmp
(bad)
fsubr
imul
das
sub
push
mov
mov
cdq
inc
sbb
cmps
push
inc
ret
mov
mov
adc
movs
xor
xchg
in
pusha
adc
sar
add
mul
es
adc
pushf
(bad)
out
data16
mov
pop
cli
and
ins
popf
xor
cmps
push
aam
mov
pop
mul
cmp
mov
and
jg
push
push
sub
mov
inc
mov
imul
or
sub
rol
mov
push
cmp
movs
jb
cmp
sti
(bad)
out
icebp
inc
out
mov
push
push
int3
std
xor
mov
and
fnstsw
cmp
fwait
mov
jle
pop
sar
mov
sub
add
push
mov
mov
xchg
or
out
cs
imul
sub
ss
pop
sub
out
dec
iret
jge
stc
imul
fs
neg
push
xor
cmp
lock
pop
cmc
mov
ror
lods
sbb
enter
sub
and
mov
mov
ja
cmp
jp
fdivr
jecxz
cmp
movntq
das
sar
pop
pushf
popa
loope
sbb
xor
sub
into
cdq
xchg
mov
(bad)
cmp
mov
inc
call
xor
enter
pushf
adc
lock
cmp
call
sbb
jl
cmp
jae
xchg
data16
mov
xlat
lods
adc
outs
out
adc
nop
and
sub
adc
push
(bad)
and
xchg
outs
fsub
adc
xchg
mov
push
dec
addr16
aaa
xchg
in
jbe
rol
dec
fsub
mov
and
xchg
sti
aad
(bad)
das
bound
mov
shl
mov
clc
or
cmp
aaa
add
cmp
and
(bad)
jecxz
dec
adc
inc
sbb
loope
in
adc
push
dec
das
div
rol
mov
shl
dec
cwde
pop
pop
fistp
sbb
sub
pop
enter
movs
xchg
in
jno
inc
mov
push
pushf
mov
dec
jne
fs
jae
stos
push
scas
adc
xor
aaa
jns
or
inc
std
ret
mov
repnz
mov
dec
push
scas
bound
shl
ret
cmp
ret
add
popa
sti
out
fisubr
xchg
mov
inc
fnstsw
push
adc
xchg
xchg
push
loop
rcl
xchg
sbb
inc
int
loop
xchg
mov
dec
(bad)
cmp
mov
mov
sbb
cmc
jbe
loop
adc
sub
and
pop
shr
push
lods
add
std
sub
inc
jbe
and
push
push
mov
cmp
mov
das
cmp
lds
iret
xor
mov
in
cwde
pop
ds
in
jmp
dec
test
ficom
jecxz
(bad)
hlt
shr
xchg
imul
jmp
cwde
(bad)
lock
fist
fwait
add
push
cmps
mov
dec
mov
mov
xchg
lea
in
mov
fprem1
jp
je
jb
lahf
out
add
aad
dec
pop
push
or
or
or
xor
adc
push
clc
jmp
out
sbb
in
cmp
jmp
scas
adc
mov
cmc
loopne
mov
sbb
call
sub
ja
cmp
pushf
cmp
outs
ds
push
jnp
cmps
xchg
dec
push
test
xchg
mov
out
lahf
cli
adc
iret
xor
mov
cmp
or
jo
ja
test
add
sar
iret
xchg
and
xor
adc
mov
stc
ret
or
dec
(bad)
cmc
push
aaa
lods
inc
jmp
leave
mov
add
mov
mov
xor
push
adc
clc
mov
or
pushf
(bad)
retf
xchg
mov
mov
cmp
out
xchg
stc
mov
dec
jge
addr16
sub
out
xchg
(bad)
and
scas
(bad)
test
xchg
dec
(bad)
push
and
dec
movs
inc
aas
enter
in
sbb
inc
js
mov
retf
outs
pop
dec
or
fwait
scas
mov
dec
or
push
mov
push
jle
or
xor
inc
push
mov
push
je
mov
out
xor
repnz
out
xchg
leave
stc
mov
(bad)
adc
dec
outs
add
stos
call
mov
mov
movs
and
xor
ror
mov
inc
je
test
imul
fadd
pop
dec
mov
sub
(bad)
mov
or
dec
fwait
pop
movntq
loope
(bad)
or
addr16
pop
push
pop
rcr
xor
push
or
mov
xchg
dec
mov
mov
mov
out
xchg
push
mov
das
mov
frstor
pop
dec
mov
mov
pop
shr
fcom
xor
inc
mov
adc
mov
cmp
ret
pusha
xchg
les
pop
sub
and
cdq
mov
jp
dec
sub
loope
inc
dec
dec
mov
lods
pop
xor
cli
ds
test
cdq
pop
scas
pop
imul
xchg
xchg
add
ins
xchg
fincstp
loope
add
sbb
stc
bound
movs
add
pop
mov
xchg
cmp
mov
jmp
movs
add
aaa
push
nop
sbb
out
and
mov
and
add
xchg
pop
add
ds
and
xchg
in
(bad)
mov
daa
dec
pushf
out
lea
int3
in
jnp
jbe
xor
mov
or
ds
push
out
test
pop
ja
in
jne
lock
inc
shl
push
fadd
(bad)
fwait
cld
pusha
repz
xchg
jl
outs
enter
pushf
mov
imul
fcomp
(bad)
leave
inc
inc
sti
xchg
pop
icebp
adc
scas
pand
stc
adc
call
js
pop
lea
jecxz
mov
and
dec
jno
retf
out
push
adc
lods
jg
sti
adc
pop
push
add
cmp
sub
stos
push
adc
test
icebp
fisubr
ins
pop
mov
push
cwde
mov
adc
into
sub
fstp
(bad)
pop
lods
movs
and
inc
cdq
iret
and
cmp
lds
lahf
xchg
pop
mov
jl
std
leave
(bad)
and
mov
xchg
stos
mov
adc
inc
push
popa
pop
ds
ret
ds
cwde
dec
jl
mov
das
or
jb
ins
ds
jmp
push
xor
mov
out
loop
es
and
inc
dec
dec
mov
xchg
stos
mov
jns
add
sahf
mov
rcl
js
pop
dec
or
jmp
cs
cmp
or
test
pcmpgtd
stc
test
cwde
mov
inc
loop
movs
aam
mov
mov
pop
test
jecxz
(bad)
inc
mov
or
jbe
scas
xchg
inc
ja
sbb
repnz
sbb
ficom
loope
test
cmp
(bad)
cdq
sbb
fs
jmp
mov
pop
xor
pop
push
scas
pop
out
outs
cdq
mov
jle
(bad)
repnz
test
mov
ins
cmps
mov
pop
pop
pop
aam
or
les
xor
test
push
scas
xor
loop
pop
popf
mov
pop
add
sub
das
xor
xchg
and
fidivr
not
and
mov
cmp
push
les
arpl
sbb
sbb
pop
xor
loop
jmp
sbb
(bad)
xor
enter
or
ds
(bad)
jnp
ror
push
(bad)
xor
mov
inc
jnp
add
loope
lods
mov
fisub
out
fadd
repz
cwde
das
inc
cli
vandnps
les
adc
bnd
ret
sahf
sbb
cmp
scas
fstp
arpl
jp
cli
and
push
and
or
jo
repnz
xchg
pop
aam
loope
out
mov
cdq
fsub
sub
mov
dec
fs
das
es
mov
and
bnd
imul
mov
vcvtsd2si
(bad)
test
out
mov
ret
jle
pusha
js
sbb
dec
fidivr
shr
cmp
xchg
repz
popa
and
rcr
mov
imul
dec
ins
scas
cdq
pushf
iret
ficomp
in
fwait
pusha
cs
add
xor
xchg
mov
int3
dec
fstp
add
ret
cmp
push
mov
in
xchg
jp
xchg
ja
scas
jmp
cmc
lds
sti
pop
scas
mov
mov
sub
aad
push
mov
mov
bnd
adc
add
cmp
ja
call
or
les
jge
xchg
push
pop
pop
in
stc
movs
xchg
pop
pop
cli
repz
push
inc
mov
loopne
jae
push
inc
sub
push
or
and
push
jns
cmp
mov
loop
add
stos
sub
test
xchg
sub
ds
push
fcomp
mov
jne
mov
xor
adc
adc
rol
int
pop
test
dec
rcr
or
(bad)
mov
xor
add
arpl
jge
icebp
call
mov
mov
test
ret
dec
xchg
push
and
and
stos
mov
dec
mov
jae
mov
imul
ret
xchg
aaa
std
out
push
pushf
icebp
cmp
dec
mov
jo
sub
xor
cdq
fadd
push
push
dec
aas
in
in
cmp
leave
in
sbb
mov
rol
ja
mov
xchg
nop
xor
popf
jge
je
jnp
movs
mov
and
push
and
push
loopne
adc
pop
hlt
and
gs
jmp
push
adc
retf
push
jmp
leave
or
cli
add
leave
lea
dec
dec
mov
shl
sub
(bad)
sbb
(bad)
push
fwait
jge
dec
mov
imul
cmp
sub
stos
dec
mov
fcmovnb
add
retf
fld
mov
inc
ret
(bad)
mov
sub
mov
inc
lds
xchg
push
aam
aam
adc
jge
mov
mov
les
and
popf
xor
lods
pop
in
mov
jb
mov
movs
div
fld
test
movs
leave
popf
sub
nop
in
(bad)
push
loop
xor
mov
sbb
and
inc
cld
and
and
and
je
jae
daa
pusha
scas
pop
(bad)
cmp
cmp
adc
call
and
adc
shl
cmps
stc
ds
inc
test
xor
inc
(bad)
sti
cmp
cdq
xor
(bad)
leave
push
push
mov
cdq
iret
call
or
pop
daa
jg
xchg
push
(bad)
shl
jge
sub
es
popa
enter
dec
xor
jl
repz
mov
dec
es
mov
imul
out
cwde
mov
inc
inc
dec
lods
repz
dec
cmp
push
lods
(bad)
icebp
or
adc
das
inc
not
xchg
push
mov
cmp
je
movs
rol
call
jg
inc
inc
cmps
mov
jp
mov
retf
fdiv
mov
mov
mov
push
mov
aas
xchg
iret
outs
es
arpl
pusha
setl
sbb
adc
fidivr
sub
ret
or
xor
xor
call
(bad)
repz
int3
mov
leave
add
movs
push
inc
mov
dec
sar
fs
out
imul
leave
loopne
pop
cmps
cmps
pop
das
fadd
lds
xchg
mov
ins
nop
lods
std
cmp
fnstcw
mov
ins
push
push
sbb
pop
jb
fs
das
pop
in
js
rcl
xor
push
xor
mov
sbb
enter
gs
dec
dec
pop
leave
jmp
out
lea
mov
jb
inc
push
inc
sbb
add
xchg
das
in
das
inc
pop
and
jb
push
xchg
pop
nop
outs
aam
data16
outs
and
cmp
fisttp
or
aam
xchg
shl
add
jo
adc
std
jbe
movs
push
pop
fldcw
ret
nop
cmp
sbb
push
dec
inc
push
(bad)
in
stc
icebp
adc
add
call
loop
xchg
fsubr
out
cmc
cmc
sub
dec
adc
ror
in
mov
add
sbb
(bad)
lods
adc
fnstenv
dec
clc
in
jecxz
aaa
mov
adc
call
dec
loope
push
sbb
leave
adc
mov
xchg
push
aaa
ins
jge
mov
ret
adc
jbe
push
add
shl
jle
mov
pop
xchg
out
xor
shl
scas
xor
push
(bad)
out
jae
dec
cmp
cs
cli
iret
sub
jl
mov
sub
cmp
aad
fcmovne
cdq
pop
test
jmp
xor
push
inc
movs
sub
sub
pusha
ja
mov
into
adc
pop
add
push
cmp
xchg
loopne
jl
(bad)
pop
pusha
push
les
mov
mov
(bad)
push
daa
jl
loopne
or
push
es
iret
sbb
jnp
in
mov
adc
out
stos
inc
jbe
hlt
add
loopne
fnstcw
into
loopne
ins
cmps
pop
aaa
repnz
dec
arpl
dec
(bad)
lods
or
push
sbb
pop
les
rol
sub
jmp
cmp
sahf
or
arpl
mov
in
fwait
mov
ja
xchg
jge
mov
push
test
inc
rcr
out
inc
daa
das
div
pusha
out
daa
and
dec
lods
cdq
and
xchg
dec
pop
cmps
cs
(bad)
popf
dec
jmp
jecxz
adc
fadd
mov
fld
pop
jl
outs
mov
ins
add
xor
mov
sub
push
inc
pop
popf
xor
rol
mov
test
sub
lock
sub
cmp
xor
cmps
cmp
call
inc
xlat
stos
pop
add
xchg
dec
cld
bound
or
xor
push
and
and
cmp
cmps
aas
es
mov
icebp
and
mov
xor
lods
cmp
jbe
cld
ins
mov
lahf
js
es
and
mov
in
int
ss
push
sbb
or
xchg
into
cmp
sahf
fwait
xor
enter
jmp
inc
lahf
(bad)
into
xor
ins
mov
movs
mov
call
jmp
retf
fnstenv
jns
cwde
push
push
ret
dec
jmp
or
je
adc
lods
daa
pop
inc
fistp
sub
mov
mov
mov
push
cmp
push
lea
js
lahf
gs
hlt
xor
lea
adc
and
xchg
aam
iret
mov
adc
jmp
jmp
dec
add
and
pop
or
inc
jle
adc
mov
push
into
push
jae
dec
cmps
lods
cmp
sub
js
inc
push
cmp
mov
add
push
les
push
div
and
es
xor
pop
mov
loopne
cmp
shl
cmp
pop
jb
not
rcl
test
cwde
dec
xchg
and
pop
push
sub
adc
mov
inc
pop
xchg
mov
and
stos
mov
cwde
adc
jp
scas
xchg
jns
jg
cmp
bound
sub
mov
fisttp
into
into
cmp
jbe
movs
out
jnp
push
arpl
adc
sub
aaa
ins
push
mov
(bad)
fld
sub
loopne
int
xor
or
mov
and
adc
add
jmp
jns
mov
mov
xchg
inc
out
push
fs
adc
jl
push
rcl
popa
add
out
outs
ret
add
push
push
test
dec
push
push
push
clc
and
enter
add
sti
test
popf
mov
scas
hlt
(bad)
jecxz
cmp
fsubr
add
push
retf
cli
sbb
lea
outs
push
cdq
lock
inc
shr
or
cmp
mov
jns
sti
aad
jmp
pop
inc
inc
inc
inc
inc
pop
scas
sub
and
and
xchg
pop
ins
stos
mov
ret
dec
dec
fstp
mov
adc
push
(bad)
movs
add
imul
cmc
gs
out
add
jne
outs
pop
push
mov
cdq
mov
call
ret
lock
cmp
push
xchg
pop
push
and
pop
sbb
fisubr
dec
push
enterw
mov
jne
inc
mov
sar
add
cmp
dec
retf
and
stos
call
and
sbb
int
jae
test
(bad)
(bad)
sti
sahf
sub
xchg
mov
dec
aad
dec
fadd
js
xchg
or
imul
cld
jnp
inc
stos
mov
fisub
pop
imul
xor
push
test
and
clc
(bad)
jmp
xor
lods
mov
out
repnz
cmc
nop
pop
or
cdq
push
mov
or
pop
and
out
fimul
xor
xor
pop
ins
sub
pop
push
adc
imul
add
scas
hlt
outs
call
lahf
sahf
div
hlt
sar
mov
cmps
push
add
mov
repnz
adc
lahf
mov
mov
and
push
xchg
repnz
pop
dec
cmps
jl
add
sbb
ja
or
popa
adc
es
bound
sub
push
xbegin
loop
lock
fdiv
inc
shl
ins
mov
add
pop
dec
pop
dec
shl
mov
popf
icebp
stos
in
sub
lahf
dec
rcr
sub
sub
cdq
mov
xchg
pop
add
(bad)
jmp
cmp
aas
mov
jp
or
cdq
or
outs
add
push
outs
ja
lods
xor
lock
scas
and
sti
sahf
sbb
mov
rcl
test
fmul
into
lock
imul
repz
cmc
add
fidiv
cmp
sub
add
pop
cld
xor
(bad)
pushf
sub
fidiv
jb
mov
gs
and
ja
fsub
adc
neg
inc
cmps
int
mov
ds
pop
int3
push
ss
push
pop
mov
adc
and
rcr
sbb
mov
add
ja
sub
test
in
lock
ficomp
xchg
or
jle
sti
les
mov
xchg
lods
ror
lds
ja
call
call
not
jecxz
pop
(bad)
into
xor
call
ret
fdivr
sbb
push
(bad)
(bad)
push
into
arpl
jbe
xor
mov
pop
jnp
test
dec
ror
adc
ret
scas
add
pop
pop
cmc
cmps
xchg
inc
ins
push
in
data16
push
adc
adc
inc
mov
jbe
sub
rol
fisttp
sbb
mov
leave
in
xchg
pop
fdivr
cs
push
subps
cmp
dec
gs
data16
cmp
push
push
ds
xchg
fwait
xchg
push
xor
jecxz
sub
jl
std
bound
cwde
lea
xor
in
adc
outs
xor
clc
les
lods
not
shl
dec
xor
sbb
jl
cmp
outs
outs
scas
sbb
jge
shr
inc
imul
cmc
pop
dec
in
xchg
clc
out
pop
jae
nop
(bad)
repnz
stos
jle
fadd
fdiv
mov
and
pusha
xor
popf
shl
pop
lea
or
repnz
and
es
push
xor
out
ins
add
push
mov
push
mov
outs
xor
fmul
xchg
stc
xor
jmp
test
mov
popa
iret
fist
in
out
or
mov
leave
lahf
bound
inc
cmps
loopne
adc
adc
js
jge
or
loope
loopne
dec
dec
out
add
dec
cmp
push
push
mov
adc
jno
pop
sbb
inc
popa
or
out
hlt
xchg
sub
jg
into
pop
mov
sti
cwde
push
(bad)
jae
rcr
addr16
aaa
mov
and
fbld
mov
mov
push
loope
cmp
sar
aad
aad
jmp
call
rcr
out
mov
lahf
in
dec
ins
jmp
ror
imul
(bad)
pop
pop
cmp
popf
push
add
or
in
pushf
bound
pop
add
outs
mov
(bad)
hlt
shl
popf
push
test
and
pop
cmp
push
mov
leave
xchg
jns
jo
leave
cmp
fwait
test
mov
and
dec
test
cmp
mov
dec
xor
js
movs
or
mov
cmp
movs
ja
jmp
inc
bswap
movs
retf
jne
cmps
xlat
fild
mov
into
mov
movs
inc
xchg
les
xchg
push
mov
mov
inc
sbb
sbb
jo
mov
gs
adc
jg
imul
stos
add
push
and
sub
lods
mov
aas
addr16
mov
out
jmp
jmp
aas
sbb
jmp
mov
adc
fwait
inc
xchg
out
out
js
add
pop
cmp
add
int3
(bad)
fiadd
dec
or
jmp
xor
mov
mov
popf
add
cmp
repz
jle
iret
sar
xor
loopne
push
xor
xor
inc
xchg
mov
mov
sub
cmc
or
xchg
(bad)
mov
xor
inc
mov
or
xchg
hlt
call
cli
jecxz
xchg
into
cs
xor
daa
icebp
xor
out
xchg
in
retf
icebp
and
mov
leave
xchg
cmps
dec
sub
pop
inc
out
jns
scas
(bad)
sbb
mov
fstp
(bad)
mov
or
xchg
aad
(bad)
mov
sahf
sub
lea
pushf
jmp
sub
mov
sbb
jge
push
aam
cmp
sbb
cli
ja
repnz
loop
rcl
inc
sub
xor
stos
shr
aas
in
ss
fcom
aad
in
push
jb
sbb
loop
mov
aam
jg
or
mov
fcmovnu
sub
mov
js
jnp
jae
int
cmp
xchg
shl
add
xchg
and
pop
jbe
stc
test
mov
mov
mov
lds
push
in
cwde
gs
cwde
sub
loope
(bad)
cmp
dec
cld
jg
and
mov
fsubr
call
dec
ficomp
pop
(bad)
sbb
stos
inc
inc
int3
push
jae
fild
shr
mov
(bad)
aad
lea
bound
mov
jnp
repz
xchg
pop
dec
sbb
lds
imul
fild
lods
mov
and
stos
jne
mov
adc
into
or
mov
or
xchg
mov
dec
ret
mov
push
add
cdq
test
adc
jno
or
xchg
xchg
mov
clc
jae
push
inc
jne
jo
nop
mov
sub
xchg
or
pop
clc
jnp
jmp
and
das
aaa
hlt
fcmovu
aas
or
outs
sub
clc
je
or
cmp
jnp
pusha
scas
cmp
mov
iret
inc
mov
scas
add
mov
cmp
mov
mov
mul
repnz
mov
shr
jge
push
arpl
sbb
daa
inc
sbb
inc
pop
mov
data16
aas
pop
inc
loop
(bad)
jns
and
leave
or
add
repz
call
jo
imul
mov
mov
mov
jae
pop
adc
outs
inc
jnp
das
add
and
in
test
and
fdivr
int
and
cmp
add
pop
and
xchg
adc
arpl
ds
fcom
repz
sub
fcmovnu
call
sbb
jl
sahf
jae
mov
cdq
mov
pushf
ins
lds
ins
call
sub
test
cmp
sub
mov
daa
add
jb
jecxz
into
loopne
mov
mov
sbb
xor
cmp
dec
and
sbb
out
std
jge
push
repnz
repz
sub
push
or
bound
pop
xchg
shl
jp
daa
mov
sub
int
jecxz
les
jecxz
out
fs
dec
inc
jnp
jmp
and
add
sbb
jmp
mov
frstor
int3
mov
pop
dec
sbb
cmps
mov
mov
(bad)
(bad)
adc
daa
cmp
xchg
mov
add
scas
jmp
add
pushf
psllq
pop
sbb
imul
iret
loop
neg
jmp
xchg
cld
mov
fs
mov
adc
mov
sub
mov
sub
fadd
xchg
pcmpeqb
push
stos
and
sub
test
and
and
jbe
mov
jmp
scas
retf
dec
inc
lds
jmp
pop
xlat
leave
clc
loopne
test
xchg
jl
and
int3
daa
push
sbb
mul
xor
or
and
mov
add
inc
sub
mov
or
stos
jecxz
mov
jp
cmp
bound
call
movs
fisubr
jg
mov
mov
add
scas
xor
(bad)
xchg
sub
push
push
daa
sbb
pop
and
adc
add
in
sub
push
sar
mov
(bad)
mov
sub
dec
enter
cld
inc
sbb
ins
addr16
div
adc
add
movs
outs
dec
and
sbb
xchg
or
aas
(bad)
sbb
xor
aam
aam
ss
jmp
dec
lea
(bad)
lea
(bad)
repnz
xchg
jmp
es
adc
mov
jbe
sbb
rdtsc
lahf
mov
cmp
sbb
mov
repz
fisub
(bad)
pop
jl
mov
sub
jp
and
jno
or
cmps
cmps
(bad)
iret
or
lahf
out
push
sbb
sub
ss
mov
std
sub
gs
(bad)
xchg
mov
push
add
fisttp
stc
xchg
std
loopne
dec
push
scas
addr16
adc
iret
and
xor
mov
cmp
push
fmul
push
mov
movs
mov
adc
in
dec
sbb
jg
or
dec
add
into
cmp
cmp
mov
and
jle
mov
cld
stos
jp
jg
pop
fsubp
xchg
inc
mul
push
push
sbb
or
add
rcr
sbb
pop
sbb
push
bound
push
mov
cmp
pop
movs
pop
push
imul
push
lods
stos
pop
fsubr
aas
dec
dec
cmp
stos
retf
rol
stos
push
repz
mov
inc
jae
lods
xor
push
dec
or
pop
das
pop
push
xchg
mov
pop
jl
push
inc
jmp
pusha
inc
enter
jo
push
cmps
pushf
lods
xchg
out
mov
pop
push
add
out
cmp
and
sub
movs
jno
repz
pop
in
jg
xchg
push
(bad)
out
or
(bad)
cmpxchg
xchg
xchg
xchg
fild
xchg
or
shl
push
test
dec
test
jo
cmps
(bad)
jp
in
in
mov
rol
adc
(bad)
jl
add
mov
mov
aad
dec
cmp
jmp
mov
xchg
fidiv
dec
scas
add
jmp
mov
pop
add
pop
inc
jo
push
daa
or
aaa
or
mov
loop
jl
in
mov
repz
enter
push
inc
push
lods
xchg
push
pop
jg
push
push
or
mov
lods
stos
fisttp
sub
xor
adc
or
imul
push
push
pop
push
mov
mov
retf
repnz
inc
gs
jl
mov
in
xchg
push
mov
jmp
imul
sub
inc
pusha
je
pop
in
adc
fild
xchg
inc
loope
push
pop
xor
mov
or
sbb
push
mov
push
push
or
dec
xchg
push
mov
sub
fldenv
(bad)
jnp
icebp
adc
lods
ret
jmp
fcmovnb
xor
ins
mov
repz
sbb
sbb
and
mov
and
daa
shl
sbb
fldpi
rol
cmp
sub
mov
test
fs
mov
sbb
push
shr
jo
dec
mov
mov
xor
cld
xchg
hlt
inc
fdivr
mov
mov
xchg
jnp
jns
movs
jmp
mov
cwde
inc
out
pusha
movs
or
inc
xlat
sti
leave
xor
pushf
mov
push
push
sbb
pop
out
movs
(bad)
nop
xor
bound
fisubr
test
sbb
xchg
int
les
sbb
int
adc
adc
inc
jbe
xor
cmp
add
sar
fiadd
outs
xchg
or
addr16
sub
pop
or
dec
dec
cmc
add
and
hlt
pop
popf
inc
mov
add
add
mov
or
lock
fild
mov
lods
sub
add
test
jp
repnz
xchg
(bad)
mov
jp
jns
mov
and
mov
ins
outs
ret
stos
mov
push
xor
dec
sub
fisubr
in
fst
jo
repnz
xor
inc
scas
adc
arpl
fbstp
sbb
idiv
sbb
adc
test
imul
not
and
jle
sub
call
lds
sub
fwait
stos
leave
outs
and
sti
in
fs
mov
dec
or
fs
jae
(bad)
(bad)
ja
aad
pop
mov
xor
es
jg
sbb
stos
cmp
aam
cmp
dec
sbb
adc
adc
mov
(bad)
loopne
push
leave
not
xchg
or
loopne
enter
fmulp
ret
test
or
retf
fild
push
push
mov
retf
fiadd
xor
jo
and
and
cmp
test
fistp
dec
xchg
sub
push
daa
xchg
mov
shr
test
push
movs
push
sbb
cs
sub
lea
mov
(bad)
inc
dec
dec
fs
push
add
xchg
call
push
sbb
movs
mov
xchg
pusha
push
dec
and
out
mov
out
mov
dec
pop
xor
in
cmp
cmp
inc
mov
and
cmp
loope
sub
dec
inc
call
cmp
jo
cmp
scas
fwait
and
or
not
jmp
ss
cmc
in
(bad)
jmp
push
xchg
inc
sub
out
in
push
out
aas
pop
arpl
push
mov
cmc
rcr
movs
lods
mov
dec
ins
jno
out
ds
sbb
stos
push
aam
pop
dec
ss
mov
mov
movs
cmp
inc
retf
sbb
mov
and
cmp
cmp
xchg
mov
xor
cmp
mov
into
sub
test
xchg
popf
mov
sub
scas
push
mov
stos
mov
stos
sub
adc
cmps
repnz
mov
lahf
shr
sbb
jge
addr16
mov
pop
loop
push
sub
adc
pusha
lods
hlt
fcomp
jo
fs
pop
jge
jno
icebp
les
mov
xor
enter
or
cmp
sbb
call
movs
js
jmp
pusha
push
sbb
inc
push
stos
inc
mov
fstp
add
pusha
fs
cli
cs
aas
dec
or
push
sbb
test
xchg
cmp
cmps
movs
daa
sbb
cmp
(bad)
dec
and
stos
push
(bad)
aad
movs
fcmove
hlt
imul
adc
out
adc
jne
pop
into
arpl
imul
and
xchg
xchg
in
inc
sti
or
mov
call
inc
push
adc
jbe
call
in
mov
xchg
cmp
xor
mov
add
or
ret
adc
and
movs
mov
mov
dec
call
inc
ja
rcr
cmp
out
or
cmp
add
or
shl
inc
repnz
daa
aad
or
mov
rol
push
imul
popa
das
jge
sub
push
imul
std
sar
push
fcmovnbe
in
push
push
add
xchg
fnstsw
stos
sar
lds
and
mov
jg
mov
lods
cmc
and
mov
mov
stos
das
les
inc
in
mov
inc
sbb
inc
sbb
(bad)
mov
xchg
xor
jbe
inc
or
pop
enter
pop
pusha
fld
sbb
aam
sub
adc
sbb
(bad)
xchg
or
movs
outs
jecxz
scas
lea
lds
pop
mov
bound
ret
and
jns
int3
sub
inc
clc
clc
icebp
adc
add
rcr
(bad)
icebp
pop
mov
add
lods
aas
mov
mov
out
mov
xchg
push
mov
jae
fidiv
or
and
pop
test
cmps
jmp
jge
por
out
aad
or
jne
or
mov
jl
daa
push
dec
add
test
jnp
or
fild
mov
out
xchg
pop
xchg
fbstp
sbb
lods
aas
loope
or
ins
(bad)
aam
hlt
in
pop
jne
cmp
add
loope
fdivr
xchg
mov
je
(bad)
pushf
push
test
rol
sub
outs
(bad)
mov
xchg
movs
dec
push
inc
adc
jbe
push
adc
xor
addr16
dec
stos
pop
retf
jns
sub
leave
mov
or
xor
gs
jnp
bound
adc
xchg
pushf
mov
pop
add
ja
sub
jg
mov
je
sbb
pop
mov
push
ins
pop
imul
push
into
das
fs
xchg
push
push
je
pop
inc
jae
daa
xchg
loope
movs
in
data16
popa
sub
adc
push
mov
mov
adc
mov
iret
jmp
and
mov
sti
or
test
les
(bad)
fldpi
pop
cmp
mov
stc
repz
pusha
xor
pop
pop
jecxz
gs
sub
int
and
(bad)
repz
in
aaa
out
shl
sub
pop
add
mov
pop
movs
sti
call
ror
mov
inc
cmp
xor
ret
pop
sbb
push
adc
inc
mov
out
mov
push
dec
lods
clc
fs
adc
sbb
lds
call
xchg
mov
rcr
xchg
push
ret
jnp
loope
(bad)
adc
stos
neg
cmps
jmp
shl
sbb
bound
mov
sbb
push
push
mov
sub
jl
and
xor
mov
add
add
cmp
sub
call
add
(bad)
nop
cvttps2pi
repnz
fwait
mov
mov
add
jg
sbb
add
xchg
xchg
(bad)
xor
ror
cmp
pop
(bad)
mov
xchg
arpl
xlat
inc
shl
and
sbb
add
push
(bad)
popf
(bad)
mov
jmp
pop
enter
mov
cmp
mov
or
in
sub
add
xor
dec
sub
jp
aad
ror
or
icebp
xchg
imul
push
cmc
fcom
lock
adc
inc
leave
mov
sbb
(bad)
xor
pop
fisub
push
shl
inc
mov
cmps
push
jge
dec
jae
sahf
int
pop
in
rol
call
ror
jnp
mov
adc
sar
cs
jge
mov
pusha
mov
cmp
ret
push
(bad)
pop
add
mov
ja
fwait
xlat
push
sbb
or
sbb
enter
and
ins
and
dec
push
dec
stc
pop
and
dec
push
pop
ds
into
inc
push
cmp
mov
popf
pop
test
shr
out
xchg
test
jne
iret
mov
dec
popf
test
call
pop
mov
jne
and
lds
cli
cmc
mov
push
inc
sub
(bad)
sub
sub
pop
enter
jmp
ins
push
sbb
mov
ss
xchg
cmps
imul
call
shl
mov
stos
lods
push
out
xchg
pushf
mov
scas
rcr
mov
popa
dec
sub
or
push
jle
lahf
mov
inc
mov
pop
fiadd
(bad)
and
xchg
and
sbb
test
lock
mov
imul
sub
in
inc
(bad)
add
enter
into
xor
not
jmp
test
loop
outs
dec
shl
add
xor
in
loop
inc
adc
xlat
mov
icebp
movs
imul
cmp
sbb
xchg
aad
mov
das
push
push
sub
and
stos
xor
add
int
and
test
sbb
pop
mov
arpl
das
lock
sbb
add
sbb
sub
cdq
xchg
outs
popf
pop
pop
push
stos
movs
xchg
push
sti
push
or
mov
pop
repz
(bad)
xchg
(bad)
cmp
cmps
cmp
pop
mov
mov
loopne
rol
enter
retf
inc
sbb
cmp
movs
(bad)
cmp
aas
sub
mov
push
xlat
jmp
jmp
js
sbb
daa
xchg
ds
add
and
out
sub
sbb
pop
imul
fcomip
add
xor
stc
hlt
fmul
daa
inc
mov
daa
jle
adc
ret
pop
fwait
xor
mov
cmp
arpl
and
adc
out
mov
sahf
movs
push
rcl
cmps
fild
dec
inc
sbb
lock
test
in
adc
xlat
jno
adc
mov
mov
fwait
add
jecxz
jmp
mov
ret
push
test
or
jno
dec
repnz
adc
sbb
pusha
iret
ja
sbb
xor
mov
in
mov
xor
fistp
push
inc
sub
sub
jno
add
sub
fidivr
adc
(bad)
and
push
gs
adc
mov
adc
jo
cmp
add
clc
push
pop
test
jg
pop
mov
push
iret
scas
retf
clc
bound
pusha
mov
fwait
sub
push
mov
fcom
rcl
mov
mov
xchg
xchg
and
add
sub
enter
push
int3
sbb
and
xor
add
jnp
leave
ins
inc
ret
and
(bad)
aad
ins
jl
xchg
popa
retf
in
sbb
and
lock
jl
lock
icebp
test
push
pop
or
clc
and
bound
push
pop
daa
stos
hlt
jae
sub
mov
jmp
ds
jno
xchg
mov
jp
popf
dec
rol
fwait
imul
addr16
cmp
dec
xchg
pusha
movs
popa
jmp
sub
ret
push
lods
sub
jno
je
imul
(bad)
js
imul
cs
xchg
or
stos
arpl
nop
pop
mov
push
push
fmul
or
fwait
(bad)
int3
popf
pop
and
call
mov
xchg
imul
or
push
or
and
xchg
pop
or
push
jnp
pop
loope
aad
std
ins
rol
fstp
pop
fisubr
int
cmp
lods
test
and
or
movs
leave
pop
push
pushf
push
imul
inc
dec
xchg
scas
out
fwait
sub
xchg
lea
imul
aad
and
or
or
cmp
es
fmul
jb
add
mov
sti
enter
mov
fadd
cwde
ficomp
sbb
adc
mov
shl
cmp
retf
aaa
add
das
addr16
pop
pop
inc
xor
aaa
jb
movs
(bad)
stc
into
jmp
repnz
add
sbb
jbe
jle
mov
xor
push
sti
leave
cmc
(bad)
in
or
dec
xchg
lods
repnz
mov
pop
jp
andnps
fucomi
call
push
pop
add
cwde
std
movs
push
test
test
test
scas
je
aam
adc
add
aad
int3
jmp
es
ret
mov
xor
(bad)
repnz
cmc
cmp
shl
mov
scas
arpl
les
fldcw
jns
fwait
and
pusha
inc
pop
fwait
pop
mov
mov
pop
mov
cmc
sbb
ja
into
movs
inc
pminub
add
inc
and
in
mov
xchg
in
fild
aad
or
mov
fdivr
sub
sbb
mov
shl
jle
lods
push
cmps
ds
gs
or
or
mov
and
xlat
sub
ret
pop
pop
adc
and
in
adc
dec
rcl
add
xor
int
out
nop
jp
mov
mov
push
adc
xor
movs
fstp
sub
xchg
adc
sbb
fistp
fcomip
test
test
int3
(bad)
test
or
jmp
popa
dec
pop
leave
adc
pop
pop
stos
jae
xchg
mov
mov
sbb
out
dec
mov
popa
imul
mov
sbb
std
lea
or
std
fisttp
ror
jle
test
sar
scas
nop
or
push
movs
xor
inc
mov
nop
sahf
loope
repz
das
inc
repnz
sbb
outs
and
mov
out
pop
sbb
jbe
lahf
cmp
jl
repz
or
fnsave
pop
xor
(bad)
cli
jno
addr16
and
ror
cmp
mov
dec
sub
loop
into
jno
popf
and
cmp
xchg
xor
sub
dec
fmul
nop
cmp
movs
pop
sbb
icebp
push
mov
cmc
bound
das
cwde
mov
push
inc
or
adc
adc
xchg
jbe
add
mov
fcomp
and
jbe
jle
jmp
stos
test
push
inc
xchg
mov
and
fwait
lds
lock
cmp
imul
add
cmp
in
mov
ins
dec
push
movs
xchg
jmp
sbb
in
pop
xchg
test
mov
cmp
leave
xchg
imul
icebp
(bad)
adc
mov
(bad)
or
mov
les
pop
pushf
mov
das
and
popf
in
jns
mov
lds
sub
pop
pop
pop
ins
sbb
and
inc
repz
jle
xchg
and
mov
ror
push
jo
leave
mov
xchg
dec
inc
dec
mov
fs
jns
(bad)
shl
mov
ret
sbb
jb
out
xor
pop
or
cwde
out
and
(bad)
popa
xor
sub
aam
idiv
adc
lock
sahf
repz
loope
sub
neg
sbb
pop
push
mov
sub
(bad)
in
push
test
dec
jmp
pushf
adc
cmp
add
movs
xchg
cmps
dec
call
sub
data16
jmp
jg
mov
xor
pop
dec
adc
movs
stos
push
cdq
mov
scas
div
dec
aam
or
push
mov
pop
out
xor
mov
js
stos
and
cdq
mov
in
in
sub
aam
and
in
jnp
dec
xlat
aaa
outs
lock
pop
mov
xor
in
ss
and
movs
pop
imul
shl
mov
fs
push
mov
int3
jne
dec
jb
sbb
cmp
stos
and
xchg
fisttp
and
cmp
xchg
aad
imul
cdq
js
pop
pop
or
retf
call
xchg
inc
push
shl
jo
enter
adc
xor
popa
popa
cmp
inc
into
inc
jns
add
rcr
mov
adc
(bad)
outs
jecxz
jne
pop
fsubr
pop
pop
adc
inc
ror
pop
adc
push
(bad)
cdq
icebp
hlt
mov
pop
xor
pop
add
leave
push
int
sub
jno
mov
pop
jb
arpl
(bad)
dec
int
stos
ja
int
jno
inc
int
pop
movs
leave
cmp
ffree
call
in
mov
sbb
mov
mov
sti
loop
fld
sub
bound
imul
xor
cld
bound
lock
mov
repz
cs
pop
adc
aam
push
imul
add
push
xchg
ja
rcr
ffreep
and
push
stc
mov
cdq
jae
dec
call
mov
pop
push
xor
add
cs
repz
stos
(bad)
mov
pop
dec
add
add
jle
icebp
pop
js
adc
sub
pop
pop
popf
mov
xchg
pop
jo
retf
daa
imul
mov
popa
or
jo
mov
nop
add
jp
loope
jmp
and
cmps
pushf
push
in
mov
sub
lds
push
push
outs
jmp
or
mov
cs
dec
xchg
mov
push
push
fs
retf
ret
xchg
adc
mov
push
iret
pop
xor
push
cmps
add
movs
push
aas
aas
daa
xlat
pop
adc
pop
xor
cmps
shl
or
mov
daa
inc
jo
das
in
sub
jns
ficomp
add
ins
je
into
adc
jb
scas
mov
test
(bad)
fld
cdq
mov
stos
outs
jecxz
push
ret
sub
pop
inc
jmp
cmp
sbb
(bad)
aas
shl
mov
jne
cmps
popa
dec
and
adc
cmc
push
or
cmp
imul
retf
push
rcr
popf
aas
cmp
popa
or
ds
pop
popa
dec
mov
pop
in
jb
adc
mov
fldenv
or
inc
xchg
inc
fwait
icebp
xchg
and
sbb
push
add
fild
dec
xor
sub
imul
pop
(bad)
pop
mov
mov
jle
or
sbb
jmp
add
xchg
or
sbb
push
sar
rcr
test
hlt
mov
ret
loope
fs
lea
xchg
outs
jp
test
popa
iret
cmp
cmps
stos
in
rcr
pop
call
mov
and
mov
jecxz
adc
push
and
cmp
sub
int
movs
std
xchg
mov
std
or
jmp
add
ins
(bad)
jmp
lock
daa
sar
dec
lods
fdiv
in
not
sti
mov
xor
popf
in
pop
fst
loopne
mov
stos
cs
jmp
fidivr
inc
dec
es
adc
sub
test
fst
test
(bad)
cwde
push
icebp
ds
cmp
(bad)
xor
xchg
cmp
mov
(bad)
gs
xor
and
or
(bad)
mov
sub
test
addr16
cs
ret
lock
cdq
fwait
dec
and
mov
popf
je
xchg
into
enter
rcl
mov
pop
(bad)
and
cmp
int3
fsubr
jbe
push
cmp
mov
inc
push
sub
pop
std
bound
adc
pushf
lea
and
add
sub
mov
or
pop
stos
stc
mov
jno
jae
pop
jg
test
mov
(bad)
(bad)
cmp
int3
call
popa
inc
inc
inc
ss
xchg
retf
sbb
call
sbb
push
mov
sbb
ins
ins
push
jno
das
mov
inc
add
sub
cs
cmc
sbb
push
das
sbb
lods
jb
mov
dec
xor
ffree
jmp
jp
rol
pushf
gs
stc
pop
out
iret
fwait
or
inc
adc
das
scas
dec
sar
popf
or
out
and
jmp
mov
mov
mov
jne
adc
std
pop
jge
adc
xor
push
pop
fidivr
and
jecxz
loopne
xchg
mov
mov
nop
pop
mov
jmp
das
push
call
pop
or
mov
mov
aam
xor
push
jo
aas
call
pop
add
mov
fisttp
fisubr
les
pusha
mov
xor
dec
inc
sub
aam
dec
mov
add
add
xor
inc
imul
hlt
xor
scas
sti
xor
jns
cs
movs
test
dec
push
and
dec
sbb
arpl
pop
sar
pop
in
into
test
outs
sub
jecxz
push
int3
int
pop
xchg
jle
aaa
xchg
mov
xchg
push
add
xchg
adc
jb
enter
sub
aad
cmps
das
mov
retf
mov
icebp
mov
mov
or
es
retf
fld
repnz
push
xchg
mov
add
mov
xchg
pusha
push
push
dec
sbb
mov
xchg
pop
mov
pop
or
xchg
adc
push
or
inc
mov
mov
xchg
and
repnz
mov
imul
ficom
imul
rol
inc
push
sbb
mov
div
jle
jne
xor
dec
sahf
jne
fistp
inc
or
add
xor
mov
das
(bad)
aam
xor
jge
dec
push
(bad)
je
jmp
inc
pop
lods
inc
cmp
jno
jne
stos
jecxz
mov
lds
mov
ret
das
jg
jecxz
sbb
call
cmp
mov
jl
bound
cmp
adc
ret
jge
mov
dec
gs
jg
rol
mov
scas
cmc
mov
cmp
xchg
loope
test
xchg
aaa
mov
jmp
ja
stos
popf
dec
in
(bad)
jle
inc
sub
popf
pop
cli
add
xchg
iret
mov
adc
adc
push
aad
inc
enter
and
push
std
mov
cvtps2pd
(bad)
loopne
jmp
push
aam
fdiv
inc
jno
lods
fistp
and
popa
jbe
push
fisubr
push
mov
(bad)
sbb
cdq
add
ret
sub
shr
or
cs
or
daa
scas
(bad)
scas
les
(bad)
stc
fbld
adc
sbb
fwait
in
(bad)
bound
addr16
and
jnp
xor
sbb
adc
xchg
retf
arpl
je
stos
fistp
lods
dec
jp
push
in
add
loope
pop
xor
jo
std
call
sbb
inc
fimul
jmp
outs
sub
dec
jmp
ficomp
stos
cdq
dec
idiv
mov
pop
in
fnstsw
xor
or
icebp
xchg
popf
cmp
jg
(bad)
push
cmp
idiv
adc
bound
clc
jecxz
mov
mov
retf
fwait
inc
shl
mov
ficom
loope
gs
outs
js
iret
adc
sub
clc
xchg
aas
xor
int3
dec
test
out
mov
aam
ret
xchg
aaa
das
xor
fist
jg
out
shr
sub
xlat
xchg
jbe
jmp
out
stos
cmp
scas
sub
mov
fldcw
or
lea
jmp
or
cmp
adc
cmp
scas
jo
jmp
dec
call
pop
shr
push
cmp
add
icebp
cmps
mov
sbb
sbb
push
out
push
nop
sub
pop
pusha
les
fstp
adc
sub
lahf
sbb
cmps
loop
rol
outs
into
mov
or
push
pop
xor
addr16
(bad)
xor
ret
dec
cmp
in
dec
jnp
repnz
dec
ret
cdq
cmps
push
adc
push
out
pop
sahf
cmp
or
or
mov
cmp
mov
and
jp
fs
addr16
or
ficomp
pop
adc
in
pop
cwde
fistp
sbb
xchg
rol
push
or
out
les
jp
adc
sbb
je
movs
loope
clc
pusha
std
ins
pop
lods
mov
rcl
push
cmp
or
mov
in
popf
and
cmp
scas
(bad)
mov
cmp
and
imul
fwait
dec
sub
scas
(bad)
cli
into
push
or
fs
outs
sbb
out
mov
into
add
repz
cmp
xchg
sbb
(bad)
fnstsw
sbb
outs
xchg
imul
pop
ins
and
ret
and
mov
(bad)
or
jp
dec
mov
sahf
fwait
push
sbb
jnp
cmps
out
das
jne
xor
and
mov
jl
daa
xor
inc
in
stos
stos
test
(bad)
sub
mov
or
add
test
pop
outs
dec
(bad)
add
fdivr
test
out
test
add
pusha
add
es
imul
cmp
aaa
ret
out
aaa
retf
nop
sbb
add
push
mov
sbb
or
inc
bound
xchg
add
call
adc
iret
sub
dec
icebp
xchg
popf
push
mov
mov
jmp
pop
push
inc
loope
xchg
fimul
xchg
push
cli
pop
sbb
push
out
test
sub
cld
mov
test
inc
dec
js
pop
pop
stc
inc
jne
mov
xor
out
inc
adc
sbb
dec
xor
stc
push
push
sbb
xor
xor
add
shrd
cmp
das
jmp
dec
inc
jns
cmp
(bad)
jecxz
icebp
neg
outs
xchg
cmp
sub
push
dec
ror
add
push
clc
push
data16
rol
hlt
inc
scas
xor
lock
push
add
call
shl
jno
pop
nop
cmp
retf
mov
int
sub
adc
dec
fisttp
sar
push
cmp
xlat
cmp
fiadd
sub
rcl
mov
popf
pop
sbb
cmp
repz
sbb
mov
imul
dec
sbb
mov
mov
push
daa
sub
cmp
add
xlat
xor
push
sahf
pop
(bad)
mov
inc
pushf
cmp
call
ret
shl
xchg
fld
(bad)
adc
xchg
xor
or
jmp
mov
xchg
bound
mov
shl
(bad)
cli
mov
pop
push
sub
add
push
je
shl
jle
fiadd
cld
fimul
xor
clc
jmp
pop
(bad)
aam
push
jno
jecxz
stos
sub
cmps
sub
adc
inc
sahf
adc
pop
push
mov
pop
mov
retf
adc
xor
aam
push
in
push
je
popf
adc
pop
mov
cmp
fs
(bad)
dec
call
and
loop
lds
xchg
mov
adc
lea
mov
or
(bad)
xor
jecxz
test
inc
jne
sbb
cs
mov
addr16
retf
cmp
mov
retf
pop
in
icebp
cmp
aas
push
es
jle
cmps
add
xor
ror
xchg
mov
mov
dec
dec
mov
jbe
loope
mov
mov
(bad)
das
xchg
sub
cmp
sbb
imul
enter
je
mov
les
(bad)
int3
int
into
jo
stc
inc
adc
xchg
inc
movs
dec
add
inc
inc
push
test
arpl
stc
outs
stos
jle
arpl
hlt
out
(bad)
sar
movs
(bad)
stos
and
loopne
movs
mov
jecxz
or
std
(bad)
xchg
psllq
xchg
sar
pop
imul
pop
popf
mov
lods
or
data16
in
sub
adc
ret
cmc
cld
dec
iret
sbb
in
out
xchg
loope
inc
nop
mov
ins
or
mov
ret
jg
adc
int
cmp
xchg
mov
bound
inc
daa
inc
jmp
vcvttss2si
arpl
ja
inc
push
cwde
mov
mov
or
lock
or
mov
retf
jg
sti
add
jecxz
loopne
xor
adc
push
out
or
push
fsubr
pop
je
ss
dec
push
retf
mov
and
mov
jge
mov
ficomp
mov
cmps
mov
push
sub
adc
and
lods
xchg
mov
xor
lock
imul
and
iret
mov
and
xchg
outs
popf
pop
popf
mov
push
mov
bound
add
dec
popf
test
rol
cmp
dec
add
pop
sbb
mov
dec
icebp
jle
dec
adc
dec
push
dec
cmp
mov
sub
jmp
leave
ins
loope
das
imul
in
div
push
retf
dec
adc
push
or
xlat
cdq
stos
jae
popa
adc
pop
push
les
fdivr
mov
loop
mov
dec
sub
mov
dec
pop
rol
inc
aas
pop
sbb
cdq
pop
aam
lds
pushf
imul
push
push
shl
mov
add
xchg
xor
in
xchg
push
sbb
retf
jne
adc
retf
pop
std
pop
repnz
iret
mov
ja
push
repnz
or
nop
(bad)
jmp
rol
jge
xor
dec
test
repnz
loope
sbb
cli
cmp
sbb
cwde
push
out
inc
int
jg
jo
leave
and
add
sub
jbe
mov
mov
jmp
pop
or
jl
push
nop
sub
add
pushf
and
inc
adc
cmp
dec
jmp
mov
inc
out
cmp
jb
xchg
pop
je
imul
mov
push
jno
test
mov
mov
fstp
pushf
xchg
hlt
out
pop
push
pop
push
outs
dec
adc
cmps
lds
inc
lock
and
push
xor
jp
mov
mov
adc
jmp
or
pop
scas
test
daa
and
stos
aas
stos
jecxz
sbb
xor
sbb
lods
repz
lods
sub
xor
jl
xlat
sbb
fst
mov
fstp
mov
ja
leave
fldl2e
repz
cwde
cmp
cmp
lahf
cmp
cmp
test
push
shl
inc
push
dec
lods
sub
cli
(bad)
aad
jb
stc
in
adc
jp
outs
popa
push
mov
in
mov
jns
jge
mov
mov
(bad)
xor
inc
repnz
js
xchg
repnz
jle
scas
jle
inc
mov
cmp
xor
imul
(bad)
pop
push
mov
repnz
retf
inc
in
cli
xchg
std
mov
dec
int3
push
add
mov
pop
fbld
aaa
jecxz
mov
inc
stc
cmp
cmp
lds
mov
rcl
jno
xor
push
or
call
push
mov
push
imul
in
shr
fstp
jmp
push
sahf
jns
sub
imul
pop
fisub
add
mov
cli
add
fisub
pop
or
fwait
jle
pop
aam
not
pop
mov
mulps
arpl
retf
cmp
xlat
aam
mov
mov
fld
into
stos
cmps
stc
mov
aas
xchg
and
loop
xor
aam
sbb
cdq
mov
mov
in
lods
xor
and
fadd
jae
mov
xor
mov
(bad)
in
ds
fldcw
adc
imul
test
or
popa
xchg
mov
mov
pop
sub
or
pop
imul
mov
push
cdq
pop
push
mov
scas
sbb
mov
div
ret
pusha
mov
xchg
mov
rcl
mov
or
cdq
retf
and
nop
jmp
xchg
mov
adc
sbb
daa
xor
cmp
rcr
or
xor
push
call
popa
imul
and
fild
mov
mov
mov
in
dec
cmp
loope
cdq
mov
shl
sub
push
push
sar
mov
lods
mov
dec
sbb
pop
pop
jmp
in
call
aaa
sbb
xchg
jno
aas
and
iret
out
mov
or
mov
add
das
cmp
cmps
push
in
add
or
jno
pop
mov
jnp
mov
int3
adc
pop
fst
xor
jne
push
loope
pop
out
sbb
test
or
retf
jb
push
retf
mov
dec
bound
pop
mov
pop
dec
icebp
lea
add
cmc
pop
jp
mov
jecxz
sub
clc
cld
mov
add
jp
pop
pop
add
gs
mov
xor
mov
add
and
(bad)
or
sti
xor
call
je
mov
enter
jns
shl
cli
jnp
fidivr
data16
hlt
rol
xchg
xlat
aam
jle
cmp
mov
pop
xor
or
jecxz
rcl
clc
int3
retf
sbb
cmp
popa
sbb
jbe
xchg
out
sub
fcomp
jnp
mov
jmp
stos
adc
movs
pop
test
scas
sahf
rep
inc
(bad)
dec
sbb
add
mov
xchg
mov
mov
loope
xchg
or
retf
xchg
mov
das
add
or
out
pop
cdq
cmc
add
dec
cmps
cmp
ins
es
or
arpl
jge
idiv
xchg
dec
xor
add
out
out
out
mov
out
imul
dec
jb
cmps
dec
xchg
mov
and
and
push
ins
mov
loopne
add
xor
xor
bound
popa
arpl
mov
and
jmp
pop
popf
(bad)
cdq
data16
inc
sub
sti
cwde
dec
mov
pop
sbb
jl
jbe
add
in
dec
inc
lea
and
or
test
daa
sbb
arpl
les
ins
les
cmp
int
test
push
(bad)
mov
idiv
(bad)
cmp
push
push
pop
xchg
div
push
mov
in
jle
mov
aam
stos
cmp
rol
fidivr
ds
sti
dec
das
mov
xor
stos
sbb
(bad)
sub
ret
lds
arpl
push
push
mov
pop
adc
jge
es
adc
sub
fadd
fisttp
std
adc
cli
call
cli
xchg
bswap
ret
and
addr16
or
loope
les
cmp
cmp
(bad)
in
out
aas
rcr
and
stos
lods
fmul
xor
or
in
xlat
sbb
dec
out
loopne
or
xchg
mov
push
outs
jnp
sbb
push
dec
cmps
retf
daa
shl
xor
dec
or
adc
add
cwde
sbb
out
xchg
push
scas
retfw
shr
adc
shl
dec
mov
in
xor
out
mov
pop
cmps
push
aad
call
mov
sub
xlat
adc
push
(bad)
sbb
dec
cmps
retf
int
into
daa
push
lock
cmp
mov
jbe
lods
fbld
jecxz
sbb
cmp
mov
mov
xor
adc
ret
rcr
fisub
lods
addr16
mov
into
les
(bad)
mov
call
push
mov
fwait
cmp
cdq
retf
sbb
pop
jle
(bad)
je
mov
lea
jo
cmp
lock
in
ror
mov
sub
xor
popa
dec
xchg
pop
pop
fstp
adc
dec
jae
lahf
ins
popa
adc
sub
add
hlt
pop
hlt
xor
fstp
sbb
pop
jbe
es
bound
test
adc
mov
pushf
sub
out
mov
(bad)
in
loop
idiv
xchg
jmp
jmp
mov
xlat
ins
movs
dec
and
leave
xor
and
ret
push
aaa
retf
js
inc
and
cmps
mov
and
mov
mov
js
idiv
mov
dec
inc
sub
pop
add
(bad)
mov
pop
hlt
jge
mov
mov
mov
xlat
and
bound
popf
cmp
out
add
pop
xchg
lods
sub
mov
repz
pop
jg
mov
xor
cmps
sub
sbb
inc
pop
call
loopne
or
ins
mov
and
pop
ret
dec
test
daa
dec
inc
mov
and
das
imul
loop
out
cs
sub
push
and
xchg
jae
mov
xchg
sub
in
test
aad
stc
push
pop
call
xchg
cli
cmp
sbb
mov
or
cmc
mov
iret
xchg
inc
add
or
sub
xchg
(bad)
call
dec
(bad)
loop
rol
cld
test
iret
jecxz
(bad)
imul
clc
scas
int
fwait
sbb
cmp
adc
xor
mov
xor
sub
pop
enter
(bad)
faddp
mov
enter
jmp
ins
stos
fld
jns
push
hlt
test
loopne
mov
fldcw
stc
fwait
mov
inc
dec
fisttp
xchg
mov
in
jnp
rcr
ds
sub
push
cdq
ror
repz
rcr
add
push
ja
rol
mov
xchg
push
outs
retf
out
scas
adc
iret
xlat
jl
and
pop
fwait
push
push
xchg
or
mov
xor
ins
push
fidiv
jae
int
xor
mov
fs
add
clc
xor
ss
(bad)
in
or
call
pop
xlat
mov
adc
sbb
xor
data16
mov
xchg
out
mov
inc
sbb
das
cs
test
mov
(bad)
out
jl
cmp
fisub
aad
retf
mov
jae
pminsw
pop
icebp
bound
shr
push
retf
leave
out
sbb
or
outs
mov
jle
pop
inc
jo
pop
jmp
pushf
mov
loopne
mov
fcmovnb
add
cmps
and
jbe
pop
mov
mov
cli
ret
int3
pop
or
in
cmp
xor
cmps
sbb
xchg
je
ja
clc
shl
cmp
push
imul
shl
cmps
jmp
ins
pop
imul
xlat
stos
lock
shl
in
xchg
cmp
xor
jns
cmp
mov
ss
test
mov
cmps
push
daa
out
push
rol
cmp
cmps
push
pop
mov
and
rol
fs
cli
or
cmc
call
cmp
ror
push
or
in
mov
inc
sub
or
mov
mov
jb
or
mov
xor
xchg
adc
test
arpl
or
pushf
ss
pop
jmp
int3
cmps
cmp
sahf
or
cwde
lahf
cmp
or
rol
lds
cmps
in
mov
cmps
(bad)
in
in
or
and
xchg
push
test
js
xchg
sbb
sahf
xchg
pop
mov
mov
imul
fwait
adc
sti
scas
add
xor
xlat
pop
mov
adc
sbb
clc
(bad)
pushf
ss
rcr
sbb
cmp
fisttp
pop
push
and
inc
xor
(bad)
fst
jne
push
mov
retf
shl
or
lea
pop
add
std
ins
retf
test
dec
xchg
push
cmp
ret
push
xlat
mov
and
jae
ss
(bad)
retf
mov
inc
mov
arpl
xor
js
mov
call
sbb
cs
adc
push
cdq
sbb
pop
test
jne
push
xchg
sbb
fld
inc
(bad)
retf
cld
retf
xchg
in
sbb
repnz
jne
or
push
pop
mov
jecxz
or
pop
out
adc
mov
adc
xor
sti
leave
aaa
loop
push
or
mov
add
fimul
(bad)
mov
adc
jnp
mov
xchg
and
adc
push
es
cs
rcr
fucom
jge
ins
pop
arpl
mov
adc
ss
rcl
mov
sub
loop
sub
stos
pushf
jo
nop
lods
mov
push
rol
mov
xor
fdiv
push
mov
xchg
es
jge
into
(bad)
aam
inc
not
out
mov
adc
enter
pop
(bad)
pop
jl
sub
mov
push
sub
rcl
out
and
xor
(bad)
push
mov
in
icebp
stos
inc
icebp
adc
inc
iret
cmp
inc
mov
add
aas
fld
mov
sub
daa
dec
in
test
sub
scas
ror
sub
mov
(bad)
(bad)
push
ret
and
std
cmp
imul
repz
adc
rcl
pop
push
dec
movs
pushf
jne
imul
jno
xlat
out
inc
ret
xchg
add
pop
push
jnp
fistp
and
mov
lods
jge
stos
pusha
mov
xlat
pop
outs
pop
pop
mov
push
sar
pop
and
cli
sub
sbb
mov
mov
or
push
bound
dec
xor
xchg
test
je
in
sbb
or
fisttp
or
pop
pop
fcmovbe
aad
sbb
shr
sar
or
pop
xchg
sub
call
mov
jg
stos
inc
xor
cld
mov
fldenv
inc
sub
scas
pop
test
add
pop
fsubrp
adc
mov
or
nop
es
(bad)
pushf
jns
cmc
cmp
mov
jmp
hlt
fist
inc
out
jle
imul
xor
icebp
jecxz
lea
cmp
outs
push
cmps
das
sbb
xlat
retf
add
inc
neg
sub
(bad)
test
bnd
inc
adc
cwde
sbb
cwde
sub
sbb
mov
xor
pop
xor
mov
cmc
imul
cld
mov
adc
ins
push
pop
sub
fidiv
dec
movs
dec
aad
fucomi
push
jmp
ss
mov
test
mov
movs
mov
mov
push
aas
mov
or
ret
movs
shl
cmp
ins
fcmovne
aas
sub
fidiv
xor
inc
fcmovu
inc
push
adc
lods
inc
out
pop
push
mov
js
rcl
mov
push
fisttp
adc
test
add
sbb
(bad)
cld
pop
push
adc
mov
imul
inc
arpl
jle
dec
xchg
pop
cmp
dec
mov
into
sbb
bound
push
cmps
inc
fimul
push
rol
or
into
shl
ret
adc
xchg
adc
ds
pop
retf
mov
mov
dec
push
stos
int
and
aas
pop
jmp
js
sar
icebp
inc
mov
pop
ror
push
bndstx
rcl
sub
xchg
sub
cdq
jno
out
sahf
adc
mov
shr
out
cmp
div
je
push
fld
xchg
imul
jae
lods
cmps
in
mov
jp
popa
mov
pop
inc
(bad)
shl
or
lock
mov
daa
dec
mov
cmp
pop
dec
jns
mov
push
cs
cmp
add
push
jno
sub
iret
mov
retf
(bad)
sahf
jne
add
xor
jo
bnd
adc
add
pop
mov
mov
lds
imul
dec
cmps
add
cmps
pop
dec
cld
push
pop
clc
pop
mov
pop
cmp
or
and
enter
je
mov
xchg
jnp
and
xchg
xor
jnp
jb
movs
cmc
sub
cmp
cmp
sub
retf
sbb
(bad)
inc
leave
push
fwait
push
aaa
daa
xor
sbb
ret
dec
sbb
cdq
rol
ja
pop
retf
popa
adc
es
(bad)
mov
call
add
mov
into
and
pop
push
jo
ficomp
(bad)
fild
into
jmp
imul
push
mov
outs
fld
mov
xchg
inc
adc
inc
aad
xchg
adc
add
push
retf
int3
cdq
ret
inc
repz
add
xchg
stos
sbb
sub
mov
jmp
adc
mov
cmc
or
jge
daa
pop
mov
call
leave
loop
dec
xchg
xchg
scas
dec
mov
inc
mov
sub
hlt
jo
fcomi
jecxz
fsub
shl
mov
adc
sbb
jecxz
and
nop
adc
jp
mov
or
loopne
mov
cmp
jmp
test
sub
stc
stos
jns
and
repz
xor
or
leave
or
shr
sub
popf
or
xchg
mov
int3
add
pop
fs
adc
inc
in
not
xchg
or
push
add
dec
pop
mov
mov
out
inc
cmp
pop
imul
mov
cmp
sub
shl
sub
and
and
adc
sub
popf
pop
push
mov
nop
mov
adc
add
fst
and
int
stc
cmp
loope
and
pop
jb
out
and
daa
inc
jno
mov
pop
sbb
sub
fst
mov
into
dec
pop
loope
mov
inc
ins
loop
cdq
sbb
scas
dec
inc
test
xchg
jae
in
ror
sbb
cmps
idiv
xor
dec
jb
xchg
mov
inc
jae
push
fldenv
fisub
xor
inc
leave
(bad)
repz
lock
ss
jo
les
cdq
pusha
fsub
mov
lods
sub
inc
ficomp
mov
sbb
mov
xchg
push
cwde
jno
int3
mov
lods
cdq
mov
outs
cwde
test
mov
sub
in
jl
mov
cmp
leave
xor
shl
sbb
fild
lea
das
add
outs
push
adc
loopne
test
test
xchg
sbb
fsub
mov
push
fsubr
mov
push
jmp
mov
adc
mov
push
aaa
jl
mov
mov
fcomp
imul
jmp
pop
(bad)
ror
or
arpl
dec
push
leave
test
fucomi
outs
rcr
pop
mov
fdivr
pop
shl
adc
xor
in
int
popa
jnp
lock
retf
jnp
cmp
jne
adc
lock
ds
mov
(bad)
xchg
sub
or
out
fistp
repnz
clc
or
in
mov
cli
adc
or
ja
test
ret
pop
arpl
adc
popa
sbb
add
jecxz
pop
cmp
leave
jl
popf
push
push
push
(bad)
in
mov
test
push
(bad)
and
sub
test
arpl
nop
jo
pop
je
outs
aaa
lds
mov
mov
ret
mov
dec
and
push
dec
mov
out
push
mov
push
inc
imul
or
ja
and
cmp
cwde
inc
jns
sahf
sub
outs
ret
(bad)
fsub
aad
cwde
ficomp
outs
push
jnp
icebp
dec
leave
push
fs
xchg
pop
dec
cmps
add
cdq
rol
scas
sub
jge
leave
test
test
push
sbb
add
scas
ds
out
mov
and
cmc
adc
sub
aad
imul
dec
fld
fisttp
mov
jp
movs
std
sbb
clc
jno
ret
lea
shl
mov
add
add
inc
lds
enter
sbb
clc
mov
jg
xchg
dec
and
xor
popf
mov
add
xor
and
sbb
mov
mov
sub
cmp
inc
fidivr
stc
iret
out
pop
mov
out
sbb
xor
dec
adc
jmp
push
sbb
das
pop
nop
mov
ds
add
fdivr
fist
mov
stos
je
add
fnstcw
stos
jbe
adc
lds
ins
out
push
aas
mov
jb
sbb
dec
inc
pop
stc
aas
int
or
xchg
aad
(bad)
xlat
outs
shl
mov
test
in
push
dec
mov
xor
sbb
push
jnp
in
lock
mov
jo
pop
mov
adc
jl
xchg
loope
pop
fidiv
add
push
mov
shl
call
pop
inc
jae
daa
repnz
fldln2
pusha
xchg
ret
rcl
cmp
repz
add
sbb
dec
adc
mov
outs
xchg
sahf
stos
mov
scas
div
(bad)
and
pop
jnp
dec
cmps
ss
add
sub
sub
inc
xor
inc
call
dec
bound
(bad)
jnp
push
push
(bad)
loope
das
xchg
fidivr
aam
lds
in
add
push
lock
sbb
test
mov
mov
in
fwait
repnz
and
outs
push
jns
cdq
cmp
xchg
jae
in
mov
int
and
jecxz
retf
das
mov
xor
mov
xor
xor
(bad)
int
mov
fild
les
ror
sub
jne
mov
jne
sbb
lods
mov
push
ss
add
ror
popf
(bad)
xchg
ficom
mov
mov
outs
xchg
mov
(bad)
xchg
mov
xlat
aam
out
aad
dec
outs
sbb
add
cmp
cmps
mov
sbb
cmovl
nop
or
xchg
not
data16
addr16
inc
lods
adc
mov
jecxz
shl
pop
push
(bad)
lods
shr
inc
movs
stos
pop
std
push
xor
adc
dec
sub
lods
or
and
ins
cwde
aad
hlt
les
mov
push
gs
cmp
sbb
jbe
push
hlt
dec
xchg
jg
gs
mov
and
fsub
call
fld
mov
shl
jmp
fcmovnb
test
push
jb
shl
mov
mov
mov
dec
sbb
adc
add
or
gs
(bad)
das
ss
aad
adc
pop
pusha
iret
dec
in
pop
mov
out
or
shl
jo
movs
test
pushf
xor
ja
fisubr
dec
sub
mov
mov
dec
mov
push
movs
xor
stc
sub
xchg
scas
in
and
arpl
push
mov
push
add
retf
or
jecxz
pop
(bad)
aad
jb
loopne
and
(bad)
not
push
xchg
(bad)
cmovno
cmp
push
sub
in
aam
sub
sub
in
cmc
add
pop
into
test
imul
lahf
push
shl
test
mov
and
or
pushf
movs
mov
push
mov
mov
cmps
xchg
push
lods
arpl
pop
arpl
dec
mov
sbb
icebp
(bad)
sbb
inc
dec
ror
inc
adc
test
sbb
ror
icebp
inc
lea
mov
inc
adc
(bad)
cmp
fiadd
les
fwait
leave
dec
daa
pop
ror
pop
xlat
and
ds
clc
cwde
imul
inc
retf
cld
pop
cs
jae
adc
jne
inc
mov
call
(bad)
in
dec
mov
or
test
inc
fimul
mov
pop
xchg
fist
fisubr
out
mov
push
jle
jnp
scas
mov
pushf
out
sub
push
sbb
das
mov
mov
adc
pusha
lods
adc
cmp
xor
sti
and
cmp
inc
mov
mov
(bad)
cmp
cmp
(bad)
mov
adc
ds
sub
mov
lock
cmc
mov
and
sar
mov
mov
(bad)
iret
lahf
pop
mov
cmps
xlat
cld
xor
sub
push
dec
mov
imul
inc
sar
xchg
and
adc
push
sar
sub
xor
jmp
repz
adc
dec
or
div
or
nop
loope
push
push
pop
arpl
mov
call
jbe
xor
pusha
daa
add
cmc
add
xor
sub
cmp
or
test
ja
mov
xchg
test
sti
push
jl
xor
imul
in
in
cmp
out
lahf
jbe
shl
rcr
scas
inc
or
ja
and
std
and
mov
jo
fisttp
or
and
and
sub
push
jecxz
pop
adc
hlt
dec
sbb
pop
ins
int3
addr16
mov
inc
mov
cmp
sti
add
jmp
sub
mov
call
ss
cmp
add
out
fisttp
pop
xor
leave
push
push
push
push
pop
in
mov
xchg
mov
aaa
xor
dec
lods
pop
mov
xchg
push
jecxz
into
xchg
outs
lds
push
xor
div
repz
push
fcomp
push
add
sbb
cmp
xor
ds
pop
mov
mov
jb
jle
aas
and
lods
xchg
imul
mov
sub
dec
fst
mov
push
sti
inc
inc
or
mov
jge
scas
inc
adc
mov
outs
jnp
push
jp
or
rcl
cdq
cmp
scas
push
out
push
push
add
and
push
sub
das
cs
add
add
jmp
mov
jb
xchg
inc
pop
shl
or
in
sbb
les
push
push
repz
icebp
push
mov
adc
push
xchg
mov
push
test
test
outs
and
movs
pushf
cmc
add
mov
adc
cdq
dec
push
les
imul
and
shl
mov
mov
jb
aaa
out
mov
popf
loope
test
jmp
mov
adc
adc
jmp
sub
xchg
mov
aas
or
test
mov
mov
jl
(bad)
fmul
push
into
outs
test
xchg
mov
addr16
mov
lods
in
cmps
sbb
cmp
(bad)
sti
out
push
pop
scas
int3
pusha
mov
inc
pop
pop
stos
inc
sbb
lock
rol
cmp
adc
pop
cmp
xchg
dec
dec
addr16
inc
aas
arpl
hlt
fst
dec
dec
sbb
xchg
ins
mov
xchg
sbb
mov
js
add
out
in
xchg
mov
(bad)
push
iret
pop
inc
mov
movs
add
mov
or
inc
rol
xor
dec
add
fucom
lods
or
push
rcr
repz
xor
scas
jo
sub
mov
sub
loope
es
ret
adc
fdiv
fs
ret
sbb
xor
sbb
out
mov
dec
push
outs
push
in
adc
sub
inc
inc
push
cmps
in
retf
aas
lock
pop
(bad)
and
jge
mov
jo
adc
pop
jl
push
nop
call
not
xchg
mov
scas
movs
test
or
lock
push
loopne
mov
or
pop
(bad)
push
add
dec
repnz
retf
jns
push
movs
aad
xchg
xchg
mov
lods
stc
rcr
ds
sub
xlat
mov
repz
lea
lds
sti
in
iret
fadd
sbb
jmp
xor
or
pushf
jmp
cmp
xchg
xchg
xchg
shl
xchg
lods
jbe
lahf
loope
popf
inc
retf
mov
jns
mov
dec
loope
jecxz
dec
push
fwait
aad
mov
test
movs
push
push
pop
cmp
push
xor
dec
fld
inc
jae
pusha
xlat
stos
adc
pop
stc
xlat
sbb
mov
add
jb
fs
nop
mov
xor
sub
(bad)
je
pop
mov
sub
and
inc
fidiv
mov
cmp
movs
push
cmovb
mov
adc
pop
dec
cld
fcomp
xchg
mov
pop
adc
cld
xchg
daa
pusha
out
xchg
aam
inc
inc
call
(bad)
mov
mov
iret
mov
lods
fwait
add
pop
sub
xchg
xchg
mov
pop
mov
scas
retf
cld
arpl
loope
mov
sti
iret
jp
in
sbb
sbb
jo
int
test
aam
pop
or
push
jl
mov
clc
in
mov
xchg
pop
fsubr
push
test
jecxz
mov
pop
push
cmp
mov
mov
mov
push
cmp
push
cmp
mov
add
cmps
push
fnstcw
xchg
xchg
call
dec
pop
les
mov
lods
jle
mov
adc
gs
mov
push
push
jg
test
add
pop
push
dec
imul
and
addr16
(bad)
test
mov
inc
jns
sub
push
bound
push
mov
adc
enter
in
or
mov
inc
das
mov
popa
cmps
mov
faddp
pop
fbld
pop
repz
xchg
cwde
dec
repnz
das
mov
mov
scas
mov
sbb
push
pop
or
sub
fbld
jl
jae
cmc
push
sbb
outs
sub
shl
shl
mov
mov
(bad)
icebp
or
ror
dec
js
mov
addr16
push
loopne
jne
inc
cwde
pushf
jo
adc
mov
and
loope
adc
xchg
xor
lods
jge
aad
cld
jl
pushf
xor
enter
push
imul
push
in
dec
mov
mov
addr16
cmps
jae
jae
call
lahf
mov
ins
pop
gs
mov
stos
jnp
add
mov
mov
jp
jp
int3
inc
out
mov
mov
ja
or
fdivrp
fnstcw
fwait
mov
or
sti
(bad)
scas
mov
dec
xchg
jno
cs
mov
out
mov
sub
add
mov
cli
shr
mov
mov
int3
(bad)
pop
fisub
mov
cmps
dec
mov
and
lods
lds
fcmovb
and
into
sub
std
add
frndint
push
dec
adc
sbb
data16
xor
push
dec
lea
sub
adc
lahf
adc
int3
push
movs
stos
sti
fisttp
cmps
inc
push
rep
xor
adc
(bad)
jne
xchg
xchg
pop
out
ss
sti
neg
ds
jae
repnz
adc
adc
mov
pop
addr16
xchg
mov
sub
xor
jns
cld
xchg
xchg
rcl
(bad)
pop
dec
dec
xor
int3
cmp
sub
xor
ds
aad
out
pop
loop
iret
cmp
dec
cmp
sbb
dec
sbb
call
rol
inc
je
ins
jle
jbe
xchg
ret
push
into
add
loope
pop
xchg
shl
sti
ret
sub
test
mov
jg
jbe
mov
fst
mov
js
mov
in
mov
setnp
call
pop
ss
fcom
sub
pop
inc
int
add
arpl
sbb
cs
pop
mov
xor
and
retf
ins
clc
mov
sub
or
jecxz
mov
push
add
cmp
leave
inc
jnp
test
ret
xor
sar
jmp
es
icebp
ret
test
pop
mov
retf
dec
push
jnp
lds
addr16
push
addr16
in
outs
fxch
test
sti
mov
fnstcw
xor
xor
xlat
lods
sbb
xchg
loopne
pop
push
push
imul
pop
dec
push
sub
(bad)
sbb
fs
mov
into
xor
int3
hlt
xor
iret
xor
cmp
cld
mov
in
rol
outs
cmp
mov
sbb
movs
scas
idiv
pop
mov
cmp
fsub
out
xor
push
loope
mov
ja
mov
pop
mov
retf
fisubr
xchg
jbe
adc
pusha
add
dec
jno
stc
retf
add
jnp
mov
inc
xor
lds
and
xchg
xchg
sahf
adc
outs
sahf
push
xor
in
jmp
(bad)
pop
xchg
xor
js
ret
add
inc
sbb
pop
rcr
xchg
and
hlt
sub
cmp
jecxz
pusha
xor
cli
xor
fsubr
inc
pop
pop
enter
dec
and
bound
xor
jle
jge
jne
mov
mov
(bad)
adc
dec
inc
dec
je
imul
add
jecxz
fwait
sti
shr
lods
rep
shl
icebp
mov
cmp
int3
dec
scas
(bad)
push
xchg
fild
cwde
je
test
(bad)
test
mov
mov
mov
push
mov
xlat
pop
aaa
sbb
dec
cmc
xchg
push
call
jge
ins
mov
xor
(bad)
sbb
dec
add
add
pop
clts
movs
imul
or
sbb
mov
psubusb
add
mov
mov
lahf
adc
fsubr
ss
stos
inc
dec
xor
xor
xor
or
xor
or
fldcw
pop
sbb
jl
in
mov
je
popf
pop
loope
(bad)
jbe
jno
mov
push
mov
lea
fucomi
cmp
(bad)
jmp
in
mov
jno
imul
ja
fcom
push
shr
call
imul
fst
outs
(bad)
push
out
sbb
and
and
add
mov
or
loope
mov
push
lods
test
xor
jns
cli
shl
hlt
pop
sub
cli
lods
adc
shr
sub
mov
loop
out
(bad)
push
bound
and
adc
mov
inc
push
mov
call
xor
aam
add
loopne
push
add
sub
xor
adc
adc
aas
sub
mov
jmp
xlat
sub
mov
or
mov
cmp
xchg
inc
add
mov
pop
sbb
push
inc
push
xchg
out
adc
dec
dec
clc
xor
pop
mov
je
dec
cs
int
pop
jecxz
sub
xchg
push
ds
xchg
addr16
loopne
push
and
xchg
mov
les
rol
shr
lds
push
push
xchg
rcl
out
icebp
pop
mov
mov
pop
dec
test
(bad)
loopne
adc
mov
push
push
sub
push
xor
fild
push
ds
sahf
sbb
pushf
ret
test
call
scas
test
and
out
mov
fmul
sbb
pop
or
xor
cmp
or
mov
sti
cmp
fcomp
pop
adc
lods
pop
sbb
sub
pop
mov
lods
js
bound
fnsave
xchg
movs
(bad)
and
scas
inc
jmp
out
stos
popf
lods
mov
xchg
sbb
je
test
and
shl
sbb
pop
mov
inc
inc
popa
or
aam
ds
(bad)
and
mul
aas
and
cmovo
dec
and
jmp
mov
pop
shl
mov
mov
stc
sti
pop
jbe
or
jno
push
sbb
inc
jg
jmp
sub
sbb
je
mov
cmp
jno
push
xlat
mov
mov
retf
hlt
mov
mov
fcomi
mov
sti
je
dec
out
repnz
mov
jo
cmps
jp
stos
popa
adc
lds
xlat
sbb
or
push
jnp
movs
les
fwait
nop
jmp
xchg
shl
push
sbb
dec
jle
adc
(bad)
cmp
(bad)
mov
nop
sbb
arpl
pop
in
pop
shr
repz
xchg
adc
aas
ins
fld
mov
add
or
push
cwde
iret
mov
out
xchg
and
cmp
imul
pop
sbb
push
stos
lods
ins
jb
push
xlat
outs
push
pop
jb
sti
into
fadd
into
push
pop
mov
sub
dec
(bad)
jno
lock
or
fst
ins
mov
mov
or
jg
sub
inc
lods
aas
loop
pop
test
ja
bound
push
pop
sbb
mov
inc
xchg
push
push
loope
add
mov
loop
mov
aaa
mov
or
pusha
stos
sub
mov
jnp
and
adc
xchg
pop
pop
leave
sub
xor
add
fisubr
(bad)
imul
cmps
loope
adc
mov
mov
push
jl
adc
dec
pop
adc
cmc
pop
(bad)
rcl
int
mov
mov
addr16
call
adc
sub
mov
retf
inc
loop
ins
aaa
sbb
inc
mov
cmp
inc
dec
test
and
(bad)
shr
xor
push
enter
lock
mov
repz
push
aam
sub
adc
popa
(bad)
icebp
retf
hlt
fwait
xor
je
fist
pop
jecxz
adc
sar
cli
cmps
ins
mov
aas
xor
inc
add
or
mov
test
dec
mov
and
pop
daa
and
push
lods
dec
jl
sub
lea
push
shl
imul
int3
xchg
shl
loope
cmp
inc
mov
nop
hlt
xchg
jmp
leave
and
es
inc
sbb
ins
sahf
call
aas
ss
int
daa
adc
mov
shl
(bad)
icebp
cmp
fld
call
and
cmps
jmp
stc
cmp
(bad)
(bad)
test
cli
cmp
mov
dec
int
fsubr
test
mov
mov
cld
push
nop
icebp
mov
fmul
fisub
xchg
test
mov
sub
arpl
(bad)
clc
ret
fwait
imul
loope
ds
loop
sub
out
call
xchg
daa
fdivrp
push
pop
std
dec
mov
out
xchg
jb
or
and
cmp
rcl
test
test
addr16
pop
pop
popa
add
and
pusha
(bad)
mov
push
stos
or
ret
ins
sub
scas
ins
cmp
sbb
(bad)
cmp
mov
fld
or
pop
popa
neg
sti
mov
fnstenv
ret
cs
xchg
lods
adc
adc
bnd
push
jmp
fist
pop
data16
in
not
xor
aad
pop
mov
aas
mov
scas
jo
adc
mov
hlt
ret
jb
jecxz
mov
dec
push
mov
stos
xor
mov
hlt
and
inc
aad
and
sar
es
cli
and
cwde
out
ficomp
loop
in
ret
outs
and
dec
mov
xchg
jecxz
cmc
sbb
test
cdq
inc
mov
jl
cli
in
ds
xchg
les
cdq
pop
add
movs
mov
fnsetpm(287
in
sub
xor
mov
dec
dec
lea
lahf
add
or
sub
mov
or
(bad)
and
push
jecxz
dec
mov
cli
sub
push
cmp
(bad)
jecxz
inc
fcom
mov
mov
pop
(bad)
xchg
ror
fild
add
outs
pop
dec
(bad)
jb
and
stos
rol
sbb
sub
xor
jns
sti
add
cmp
mov
ins
pop
jns
sbb
retf
retf
sbb
xor
popa
sbb
xlat
mov
je
pushf
mov
jmp
cmp
adc
jno
imul
pop
sub
cmp
cs
mov
or
sub
cmc
adc
xor
(bad)
(bad)
in
sub
aad
repz
shr
retf
dec
es
sub
push
mov
dec
daa
jb
sub
rol
adc
lods
outs
sahf
inc
push
cmps
cli
pop
mov
cmps
cs
fld
addr16
inc
dec
and
cmp
fidiv
mov
dec
fsubrp
dec
pop
ins
adc
into
mov
cmp
cmp
and
mul
cmp
js
sub
sub
ret
pop
(bad)
iret
jge
mov
cmp
neg
data16
out
lea
cmp
xchg
rcl
mov
test
xor
out
retf
mov
stos
xchg
xcrypt-ctr
cmps
sbb
das
imul
xchg
sti
mov
xchg
mov
jecxz
pop
cmp
call
xchg
jae
comiss
mov
cmp
(bad)
call
aam
je
mov
ret
in
inc
cmp
mov
jo
push
(bad)
cld
dec
adc
sbb
mov
sbb
movs
mov
pop
sub
push
shr
mov
push
dec
and
cmc
adc
mov
mov
mul
(bad)
push
mov
gs
push
mov
(bad)
outs
popf
push
fld
imul
inc
lahf
pop
icebp
xor
jle
jle
push
fucom
test
mov
test
lock
push
adc
gs
mov
lea
test
sbb
cmp
cmps
sub
mov
inc
ins
stos
inc
fist
sbb
or
add
or
imul
dec
mov
mov
or
int
pop
push
imul
jp
mov
das
xchg
cmp
cmps
lock
addr16
cld
and
adc
dec
nop
inc
aad
shr
shl
cmp
adc
jle
(bad)
fsubr
ja
sbb
jmp
cmps
xchg
jne
xlat
pop
jne
lock
sub
and
inc
fwait
aaa
inc
inc
sahf
xchg
in
test
in
pusha
sbb
sti
loopne
outs
repz
ss
outs
pop
fdiv
mov
sub
or
xchg
sbb
cs
shr
jg
mov
je
mov
movs
iret
pop
xchg
jb
sub
sbb
mov
cmp
xor
pop
xchg
call
aam
cmp
addr16
scas
outs
in
cmp
mov
mov
or
(bad)
lods
mov
enter
aas
jl
popa
repz
int3
cwde
jecxz
adc
fadd
mov
mov
scas
ss
fld
sbb
cmc
in
xchg
jns
xchg
jge
pop
mov
mov
mov
jmp
mov
xor
jp
daa
stos
(bad)
std
inc
mov
xchg
mov
xchg
cmps
cld
scas
imul
sbb
stos
xchg
xchg
imul
sti
adc
jmp
(bad)
aad
fdivr
xchg
in
dec
int
xchg
and
ja
jg
shr
xchg
aaa
ins
adc
push
mov
push
or
or
(bad)
jae
pushf
out
mov
cmp
adc
ja
adc
lods
jge
inc
nop
fmul
out
retf
pop
mov
cmp
xchg
adc
in
sbb
cmp
dec
(bad)
jle
hlt
dec
arpl
shr
push
dec
add
jp
ror
push
jbe
adc
stc
xor
pop
ja
push
pop
mov
pop
xlat
xor
adc
xchg
pusha
and
sub
cmp
mov
adc
in
test
out
push
fs
cmp
and
call
mov
outs
pop
and
pop
out
dec
mov
pop
push
pop
pop
and
and
aas
jge
adc
push
outs
sahf
aaa
and
jnp
add
fstp
fcmovb
dec
cmp
xor
add
les
xchg
fdivr
jg
inc
retf
stos
test
retf
mov
iret
out
or
mov
inc
jge
pop
pop
sbb
push
outs
sbb
add
(bad)
hlt
add
jl
jge
aam
sub
mov
imul
mov
retf
cmp
xor
dec
xchg
aam
adc
or
sub
(bad)
cs
or
aam
jp
imul
jmp
adc
rcl
rcr
or
ror
jno
test
(bad)
nop
mov
fidiv
inc
adc
push
dec
pmaxsw
adc
pop
and
out
cmp
jl
scas
cmp
jl
sub
xor
cmp
sub
pop
or
inc
test
push
clc
jle
or
jle
rcr
(bad)
dec
or
mov
inc
enter
xor
les
fiadd
lods
mov
mov
push
and
mov
cld
shl
mov
test
jbe
jns
sbb
push
sub
ds
jo
xor
aas
xor
mov
sbb
(bad)
sbb
pusha
loop
movs
sub
jmp
and
fmul
ds
or
xlat
cmp
out
outs
gs
adc
mov
dec
popf
mov
imul
mov
int
jno
sub
ins
addr16
inc
repz
add
cmps
out
inc
rol
clc
jae
cmps
sbb
xchg
ins
das
dec
cmps
das
sbb
lea
test
psrlq
les
stc
sbb
jbe
mov
les
sbb
js
inc
arpl
sahf
mov
fs
and
jp
jecxz
cmp
mov
sub
cmps
jmp
cmps
aaa
scas
dec
xchg
outs
imul
shl
(bad)
xor
xor
xchg
aad
rcr
mov
cmc
jp
add
jl
test
xor
stc
mov
or
(bad)
adc
das
add
test
out
ins
jmp
lock
jns
ret
mov
es
retf
in
mov
push
or
cmp
mov
push
movnti
xor
fsub
sub
jecxz
std
cmc
cmp
xor
mov
dec
loop
loope
xor
mov
int3
cmp
dec
dec
iret
ins
aaa
push
popa
mov
aad
cwde
mov
in
dec
ret
rcl
pop
pop
pop
(bad)
mov
xchg
movs
add
add
sbb
scas
repnz
sub
gs
and
loope
fs
mov
pop
cld
dec
sub
cmps
inc
fisttp
sbb
stc
mov
stos
inc
mov
imul
ret
push
call
jl
mov
mov
cmps
aad
test
test
ffreep
jl
mov
or
push
scas
push
js
push
cmp
inc
scas
neg
or
mov
shr
cmc
or
dec
pop
mov
xor
jle
and
pop
and
dec
cs
outs
fsubr
sbb
sar
shr
adc
iret
sbb
ds
imul
cmp
mov
clc
dec
jo
fcmovne
dec
xor
inc
shl
pop
cmp
mov
jge
xlat
mov
and
pusha
mov
pop
loop
pop
push
add
std
repz
sbb
push
stos
(bad)
rol
ja
add
xor
pusha
shl
cmp
das
pop
loopne
lods
fwait
icebp
mov
vorps
push
pop
xor
pop
test
out
push
mov
jnp
repz
jbe
movs
pop
pop
jecxz
fmul
or
ret
idiv
xchg
dec
fs
mov
mov
jle
jne
sub
mov
adc
xor
in
or
dec
cmc
lds
xor
out
sbb
(bad)
in
jmp
pop
and
xchg
lock
stos
inc
and
pusha
mov
xchg
push
iret
popf
add
jns
aam
push
retf
daa
movs
retw
retf
bound
aam
jmp
stos
fisub
lahf
mov
dec
inc
cli
pop
add
cmp
fs
and
push
(bad)
pop
dec
sbb
jns
jno
inc
hlt
gs
xchg
push
jns
nop
or
cmp
inc
mov
cmp
inc
jno
test
fs
pop
sar
pop
jp
sbb
dec
inc
loopne
mov
movs
cmp
xchg
repz
sub
mov
rol
stos
push
sub
iret
add
xor
in
aas
mov
fwait
push
movs
pop
push
movs
sub
or
dec
cmp
xchg
inc
stos
call
inc
into
outs
enter
fsubr
outs
mov
mov
sub
ss
dec
mov
cmp
adc
xor
xchg
lahf
ret
icebp
popa
movs
sub
mov
cdq
push
leave
test
inc
pop
clc
mov
jl
or
mov
dec
sbb
cmp
adc
cmps
mov
lock
outs
and
cld
ins
sub
in
cmp
xor
push
enter
xor
xchg
enter
stos
inc
push
fisttp
add
scas
iret
cmp
sbb
mov
arpl
out
mov
fldcw
mov
popf
pop
retf
mov
lds
popf
dec
cmp
leave
das
xor
fiadd
jno
add
pop
xchg
les
pop
or
add
mov
popa
and
cmps
xor
mov
ja
add
fs
stos
sbb
mov
cmp
or
pop
dec
jecxz
outs
clc
aam
mov
sbb
gs
push
dec
mov
popa
inc
or
jg
popa
test
and
jp
adc
(bad)
clc
or
or
or
mov
aam
popf
cmp
aas
push
das
test
mov
jge
(bad)
mov
inc
out
pop
shl
jg
xchg
in
jbe
and
minps
push
dec
ins
sbb
shr
lods
mov
cwde
repz
fucomip
xor
outs
mov
out
mov
cmp
ficomp
push
jmp
in
xchg
xlat
xor
inc
sbb
stos
(bad)
push
or
push
bound
and
fs
popf
mov
or
(bad)
dec
stos
mov
mov
mov
mov
push
das
hlt
aam
movs
dec
pop
adc
and
nop
je
loopne
jg
push
rcr
adc
xlat
loope
adc
adc
sar
retf
or
sti
adc
pop
sub
or
(bad)
jmp
hlt
dec
pop
and
(bad)
das
jl
scas
jp
ins
imul
sbb
mov
mov
ja
fldenv
inc
retf
mov
mov
and
lods
jb
mov
mov
pop
pop
fs
inc
inc
and
sub
mov
mov
inc
jbe
or
jl
xchg
xor
lock
(bad)
jg
cmp
mov
xor
movs
cdq
jp
int3
loop
movs
in
mov
mov
arpl
adc
call
xchg
lahf
sahf
inc
jmp
push
mov
leave
dec
test
pushf
push
add
lock
jge
mov
inc
lock
pop
iret
pop
les
inc
push
in
stos
hlt
int
test
inc
int
sub
cdq
xor
dec
out
das
push
jecxz
repz
and
test
stos
int
cmp
jge
ror
xchg
sub
repnz
bound
nop
dec
mov
adc
call
inc
sbb
rcr
jmp
pop
jnp
xor
mov
daa
loopne
(bad)
repnz
mov
stc
clc
xor
jnp
scas
popf
test
inc
inc
cmc
imul
dec
jns
pushf
mov
retw
sahf
push
mov
outs
repz
movs
popf
jge
pop
mov
xor
jae
dec
sbb
push
push
mov
pop
adc
mov
sbb
in
mov
jmp
inc
rol
pop
je
dec
mov
shr
push
inc
xchg
loope
sub
call
inc
pop
arpl
cld
dec
cld
xchg
popa
jp
jne
adc
inc
pop
lock
jno
dec
xchg
aaa
jno
cmp
add
(bad)
mov
push
test
lods
addr16
jmp
das
mov
inc
jmp
lahf
call
in
popa
push
jp
push
inc
sub
inc
xchg
imul
ror
pop
in
daa
loopne
push
or
mov
cli
and
push
ss
push
out
pop
adc
sbb
outs
movs
sbb
xchg
push
icebp
gs
inc
pop
pop
dec
std
jmp
mov
and
xchg
(bad)
mov
(bad)
mov
in
test
stc
mov
mov
bound
add
rcl
mov
mov
popf
xor
ins
or
iret
jb
int
jo
lahf
mov
fs
imul
popa
sbb
fwait
and
xchg
pop
std
inc
adc
int
call
fcom
cmp
jnp
mov
gs
pop
xchg
pop
loop
lahf
cdq
fs
jmp
push
out
lea
in
retf
neg
fiadd
cmp
retf
bound
ja
jle
bound
hlt
call
pop
enter
adc
xor
jmp
xor
rcl
retf
inc
fdivr
jle
sub
test
(bad)
shl
stos
into
jne
push
push
pop
fild
fwait
enter
jecxz
addr16
dec
ss
(bad)
aad
(bad)
mov
jae
stos
xchg
fdivr
sub
das
jnp
jmp
bound
adc
pop
sbb
enter
mov
push
pop
ret
repnz
aaa
mov
mov
xchg
es
scas
clc
mov
fistp
mov
icebp
pop
adc
mov
mov
pop
test
sub
or
xlat
jge
mov
xor
add
movs
test
aas
gs
stos
hlt
shl
or
mov
lods
xor
inc
sahf
out
into
jmp
adc
push
aaa
out
popa
movs
je
push
int3
add
mov
frstor
clc
(bad)
movs
inc
dec
cmp
test
sbb
test
out
arpl
xchg
mov
or
or
cmp
ret
jle
nop
pop
cmp
or
daa
sub
fisub
mov
int3
cmp
jp
rcl
inc
and
adc
inc
in
in
jo
adc
mov
sub
aaa
repnz
ds
dec
outs
inc
outs
std
and
mov
inc
xchg
mov
scas
inc
add
mov
mov
fld
shr
xlat
adc
mov
movs
cmc
push
mov
pusha
(bad)
cmps
pop
add
mov
pop
aas
ins
mov
scas
xor
arpl
cmp
pop
mul
jns
test
push
sbb
loopne
push
mov
out
sbb
lods
push
int3
jo
xchg
push
add
(bad)
lods
test
rcl
mov
clc
adc
cmps
cli
int
sbb
pop
xchg
aad
fmul
xor
fld
sbb
pop
in
retf
out
ret
ss
sub
sbb
imul
add
jle
sar
pop
div
add
push
loop
xor
test
pop
push
lock
in
ret
out
jb
popa
out
(bad)
cmp
and
dec
lods
(bad)
lahf
(bad)
shr
(bad)
add
retf
ror
jae
cmp
pop
jbe
rcr
mov
test
ins
pop
or
hlt
into
lds
push
in
xchg
stc
inc
scas
or
jmp
sub
imul
mov
lock
test
neg
jmp
popfw
sbb
sbb
mov
outs
das
cmc
test
adc
cmova
sbb
fs
scas
mov
mov
sbb
mov
mov
fstp
dec
mov
jge
jnp
fwait
push
fwait
outs
ds
(bad)
iret
(bad)
sbb
lock
sub
add
rol
and
or
adc
jg
xlat
mov
adc
mov
mov
sub
xor
lds
xor
mov
mov
arpl
das
(bad)
pushf
sbb
jge
mov
(bad)
out
repnz
daa
or
dec
lods
sbb
ret
or
mov
test
call
add
aad
aas
add
mov
mov
mov
mov
push
push
or
not
ja
jmp
add
mov
push
add
xchg
add
jb
neg
dec
cmps
sbb
retf
imul
dec
add
mov
in
dec
in
rcl
xchg
pop
xchg
out
outs
pop
add
xchg
push
fidiv
dec
xchg
or
dec
std
or
and
popf
movs
enter
mov
sub
lods
rol
mov
mov
aam
sub
mov
sub
cmp
test
inc
jmp
cmp
dec
sbb
es
arpl
push
adc
movs
and
daa
inc
(bad)
call
jns
pop
pushf
adc
and
retf
inc
movhps
add
loopne
pop
cmp
in
sbb
push
pop
ret
sbb
xchg
add
dec
dec
mov
inc
je
mov
dec
cmp
(bad)
enter
dec
xchg
sbb
fwait
iret
adc
xchg
push
in
mov
or
ins
jecxz
dec
data16
pop
test
out
xor
pop
stc
xchg
retf
and
mov
pop
push
xchg
mov
xor
mov
pop
mov
cs
outs
cmp
add
xchg
loope
mov
mov
inc
sbb
das
aad
mov
cmps
jne
mov
mov
ss
inc
mov
imul
fisttp
cmp
in
test
js
ror
pop
cld
push
ins
push
enter
into
pop
mov
add
dec
fcomp
sub
inc
fistp
cmp
out
ss
sub
jge
inc
pop
in
add
push
fs
rol
and
ret
mov
adc
mov
mov
push
pop
je
imul
imul
adc
aad
mov
cdq
call
or
pushf
jmp
(bad)
sahf
stos
jmp
stos
pop
push
xor
xchg
sahf
sub
dec
es
push
jbe
cmps
fs
popf
mov
fisttp
dec
jle
shl
or
and
pop
add
xchg
data16
add
inc
xchg
nop
xchg
shr
sbb
adc
dec
or
lock
jle
out
push
out
mov
mov
outs
xchg
in
cmp
stos
xchg
(bad)
cwde
in
push
push
data16
nop
push
jmp
jno
sbb
jle
in
ss
stos
xchg
dec
fstp
in
fisubr
xor
add
(bad)
enter
jnp
addr16
inc
xchg
mov
or
dec
stos
ins
push
push
push
paddsb
push
sbb
xchg
dec
and
inc
aam
and
das
stc
jns
push
inc
dec
or
push
add
add
sub
and
xor
inc
fwait
add
xor
or
shl
mov
or
push
pop
(bad)
mov
xor
inc
sub
push
(bad)
mov
xchg
and
push
or
retf
not
ds
adc
adc
jno
xchg
not
imul
mov
sub
mov
xor
ja
and
sbb
fadd
pop
call
pop
rcl
xchg
xchg
outs
mov
stos
mov
mov
mov
movs
sbb
pop
sub
push
adc
fidivr
aam
fiadd
mov
std
fiadd
and
outs
push
cmps
jmp
mov
mov
out
lods
inc
dec
cmp
adc
dec
imul
sbb
mov
mov
jne
(bad)
dec
xor
jbe
leave
mov
inc
ret
push
je
hlt
js
adc
mov
hlt
outs
enter
push
or
mov
adc
ds
inc
xor
or
add
pop
test
imul
xchg
into
shr
xor
fdiv
adc
idiv
dec
dec
sub
js
movs
and
movs
pusha
ret
sbb
repnz
cmp
outs
inc
dec
lahf
sbb
xchg
mov
inc
push
and
sbb
sub
inc
out
dec
inc
xchg
aaa
xchg
stos
imul
adc
mov
mov
inc
cs
mov
les
push
inc
cs
mov
and
mov
add
inc
push
xchg
cmps
inc
xor
rol
sub
sti
jo
shr
cs
ins
test
fist
mov
inc
fwait
mov
dec
add
cld
das
sub
xchg
push
rol
popf
neg
in
jb
jno
cdq
xchg
adc
out
or
sub
pop
add
or
push
pop
jno
xchg
xor
mov
sbb
imul
and
pop
jnp
mov
popf
jmp
cs
aad
push
pop
pusha
test
retf
mov
xor
arpl
and
xlat
mov
push
add
push
fdiv
test
dec
dec
mov
xlat
call
aaa
lods
mov
int3
(bad)
sbb
(bad)
inc
into
shl
pop
shl
push
push
pop
lea
jnp
and
cdq
pop
in
rol
adc
gs
sub
nop
cmp
inc
mov
arpl
jb
pop
popf
pop
pop
mov
das
(bad)
(bad)
cwde
scas
xor
dec
pop
sbb
ret
xchg
cmp
or
(bad)
fmul
jmp
dec
sub
sbb
or
(bad)
enter
je
aad
les
pop
jg
xor
and
(bad)
enter
jbe
ds
fcomp
shl
sbb
gs
or
jl
pusha
pusha
aaa
out
xor
xchg
mov
cmp
(bad)
lahf
pop
push
xchg
adc
dec
cmp
xor
ret
xor
or
mov
xor
lds
sbb
adc
pop
sbb
pop
(bad)
fsubr
arpl
jl
pop
add
push
cmp
clc
cmp
push
pushw
mov
addr16
adc
jb
jp
clc
je
test
mov
cwde
mov
fld
retf
jle
mov
movs
add
or
xor
push
cmp
sbb
cmps
scas
add
xchg
lods
mov
das
jge
inc
mov
cmp
jp
push
(bad)
cmps
mov
mov
(bad)
movs
mov
lds
rol
push
xor
movs
xor
xor
adc
pop
dec
repz
push
pop
push
hlt
jmp
xor
sbb
retf
push
out
cmps
(bad)
jns
retf
dec
adc
mov
mov
or
jp
push
sub
fdiv
lods
stos
clc
xchg
aas
adc
stc
stos
stc
xchg
into
cmp
cmps
iret
ss
mov
mov
int3
push
out
lds
cmp
(bad)
xchg
fimul
(bad)
aaa
sub
dec
adc
dec
inc
lahf
add
push
cdq
adc
and
cmps
mov
push
or
push
lods
jb
test
test
call
add
sub
fwait
xlat
sub
scas
aam
addr16
push
lods
test
aad
inc
enter
ds
sbb
pop
je
dec
xchg
outs
xor
rol
sti
jno
jmp
jecxz
out
gs
stc
pushf
pmuludq
(bad)
shr
dec
out
call
inc
js
mov
stos
outs
imul
mov
push
or
sub
gs
adc
add
cmp
scas
and
jmp
outs
sub
mov
lea
fcmovbe
lods
dec
in
lahf
mov
leave
adc
push
or
mov
inc
xor
aad
jl
daa
add
(bad)
sub
xor
or
dec
dec
pop
push
sbb
sub
add
daa
call
mov
mov
add
push
xchg
fcomi
cmp
in
(bad)
fisttp
addr16
aas
inc
dec
sub
push
(bad)
cmps
jge
pop
mov
or
fs
mov
fsin
and
and
mov
sub
pop
pop
xor
xchg
inc
fdivr
mov
aam
xchg
xchg
mov
pop
sub
and
mov
ja
repz
push
(bad)
es
mov
add
xchg
xlat
lds
push
pop
mov
or
xchg
pusha
pop
cmp
(bad)
in
xor
mov
push
aam
mov
mov
sub
sbb
aaa
inc
adc
or
jne
adc
jle
sbb
jbe
jle
ins
ins
movs
jne
adc
cmp
(bad)
test
xor
inc
ja
xchg
data16
int3
xlat
movs
or
outs
add
test
mov
pushf
popa
test
dec
mov
push
(bad)
pause
mov
sub
dec
rcr
pop
in
mov
shl
jae
fidivr
movs
icebp
rol
push
push
or
scas
sar
aad
out
mov
into
sbb
add
imul
cld
std
jnp
movs
out
mov
mov
mov
pop
loopne
cmp
popf
adc
movs
mov
cmp
aas
xor
xchg
pop
outs
addr16
je
sub
shr
rcl
in
ret
call
in
lods
scas
inc
sbb
aad
jmp
js
clc
es
inc
mov
scas
mov
sub
xchg
mov
mov
dec
sub
push
popf
pop
mov
das
enter
fnsave
out
mov
mov
aad
(bad)
stos
inc
xor
into
stos
push
cmps
mov
gs
(bad)
(bad)
out
push
and
les
nop
(bad)
popf
jae
cmp
mov
popf
cs
mov
dec
not
jl
dec
aas
sbb
pop
sub
aas
sub
aas
push
inc
ds
adc
cwde
cmp
out
sbb
or
and
jnp
ds
and
mov
out
fisub
hlt
dec
ins
jmp
mov
pusha
fs
sbb
stos
jbe
je
push
mov
lods
push
ffree
add
nop
push
pop
ss
cmp
push
or
xchg
dec
push
(bad)
mov
call
jl
std
mov
shl
sti
mov
ds
jns
out
clc
test
lahf
out
lds
xchg
je
(bad)
shr
mov
add
sbb
jecxz
mov
push
(bad)
jecxz
rcr
xchg
fsub
pop
mov
lahf
xlat
fimul
mov
push
rcr
sbb
sub
mov
sub
xor
inc
nop
jae
es
pop
retf
enter
pop
mov
test
jge
pop
call
(bad)
imul
jnp
fcmovnbe
jnp
cmp
add
push
into
fistp
jle
test
enter
lea
icebp
fldln2
pusha
mov
pop
pushf
(bad)
mov
pop
dec
dec
adc
mov
ja
cmp
(bad)
stos
mov
pop
iret
jno
inc
jmp
cmp
adc
jle
lahf
push
es
arpl
idiv
shl
dec
repz
addr16
out
(bad)
mov
push
sub
push
mov
shr
aaa
pop
loopne
sahf
pop
lock
jmp
sbb
push
out
enter
lods
ins
mov
repz
dec
mov
call
jne
jnp
pusha
(bad)
jmp
adc
mov
into
fs
mov
clc
jne
xor
push
mov
std
mov
inc
push
cmp
mov
data16
shl
sub
push
clc
mov
sbb
out
or
int3
jl
sbb
push
fs
dec
or
push
test
enter
sub
movs
pop
inc
cmp
jle
jbe
sub
outs
jecxz
mov
cmp
popf
xor
ins
ins
adc
pop
mov
mov
sub
mov
mov
or
cmp
inc
clc
add
into
mov
xchg
add
(bad)
xchg
test
push
jae
push
push
js
fdivr
or
mov
addr16
in
loop
loopne
mov
scas
scas
xchg
pop
xor
push
fisttp
adc
(bad)
call
ds
dec
pop
jp
jecxz
cmp
ja
les
movs
(bad)
jnp
sti
enter
repz
stos
jb
popf
in
mov
mov
cs
pop
pop
and
pop
fisttp
mov
pop
pop
jno
pop
sbb
pop
pop
dec
lea
pushf
inc
xchg
xor
iret
dec
std
xor
fs
mov
pop
ret
and
(bad)
sub
push
inc
push
icebp
mov
pop
push
xchg
xor
mov
scas
add
jne
popa
push
jmp
out
jnp
inc
fwait
int3
in
popf
addr16
fs
sbb
out
xor
sahf
push
push
ins
pop
test
mov
mov
test
js
mov
repnz
push
hlt
jmp
push
ret
hlt
push
mov
and
mov
js
push
jbe
push
(bad)
bound
in
lahf
and
les
inc
add
lods
push
jmp
and
iret
mov
popf
add
cmc
movs
sbb
pop
fwait
cmps
sahf
pop
cmps
and
mov
mov
push
pop
dec
ror
call
or
cmps
in
test
movs
xchg
fisubr
js
idiv
data16
adc
and
clc
sub
clc
push
cwde
jb
out
cld
pop
(bad)
adc
jecxz
or
xor
jecxz
push
dec
or
sbb
pop
push
cmps
es
push
outs
ja
lea
mov
dec
xor
jmp
mov
and
ds
es
push
xchg
sar
inc
mov
push
aas
push
xor
ret
popa
inc
cmp
scas
retf
movs
stos
mov
sbb
adc
cmp
mov
xor
cdq
or
xor
data16
rcr
cmp
fs
pop
xchg
int
ror
inc
retf
add
les
xor
inc
jmp
cmp
xor
add
or
add
in
cmps
fdivr
xor
pop
les
fnstsw
sbb
inc
jmp
lock
mov
sar
aas
sbb
sub
push
pop
xchg
adc
jl
in
adc
pop
cmp
adc
ds
inc
movs
imul
add
ss
push
out
cld
xchg
lods
cvttps2pi
inc
xchg
aas
(bad)
pop
(bad)
rcr
push
mov
call
push
aas
sbb
jle
push
iret
mov
mov
daa
or
mov
jbe
adc
outs
push
jbe
push
les
stc
ss
sbb
in
cs
scas
(bad)
jmp
mov
xor
and
sbb
retf
and
xchg
cmp
out
outs
pop
mov
leavew
aas
ins
pop
sbb
aas
in
jl
shr
int3
hlt
or
pop
(bad)
xor
jge
lods
outs
aaa
pop
xlat
aaa
xchg
xor
pop
mov
push
cmp
pusha
mov
xchg
pusha
cmp
jno
ds
jmp
or
cmp
inc
mov
out
(bad)
sbb
addr16
aad
jne
mov
xchg
pop
retf
out
jo
adc
mov
add
fidiv
sub
add
ror
mov
push
push
out
inc
cmp
loope
adc
out
xchg
pop
mov
push
out
push
inc
pop
mov
stos
jp
xchg
mov
ret
dec
(bad)
int3
lods
fsub
xor
mov
and
xchg
sbb
iret
xchg
jbe
call
int
xchg
repz
jne
ror
arpl
iret
rcl
test
cs
add
and
jmp
and
loope
mov
dec
inc
div
imul
xlat
je
sub
into
pop
out
shl
jecxz
mov
scas
xlat
outs
clc
inc
cmp
adc
inc
xchg
scas
and
mul
add
into
loope
out
pop
lahf
test
stos
movs
inc
xchg
push
mov
push
inc
xchg
xchg
movs
mov
(bad)
sbb
ret
mov
adc
test
int3
rcr
add
xor
into
stos
mov
(bad)
loope
pop
(bad)
(bad)
ss
xor
test
add
cmp
in
and
jl
shr
mov
fmulp
mov
sub
gs
(bad)
iret
popf
std
mov
push
sub
adc
mov
out
shr
push
add
xor
jmp
xor
mov
(bad)
stc
loopne
dec
fs
ds
mov
mov
cli
repnz
(bad)
sbb
in
out
enter
sub
shl
inc
push
inc
pop
inc
jl
cmps
(bad)
(bad)
pop
mov
lods
shr
out
xlat
dec
lahf
imul
mov
inc
hlt
popa
icebp
adc
out
iret
mov
mov
fdivr
jg
or
call
xchg
movs
push
lock
pop
inc
cmp
push
jp
mov
push
loop
ins
(bad)
fistp
(bad)
outs
test
enter
xor
and
ins
das
das
or
gs
mov
daa
fild
mov
sub
xchg
cdq
mov
ds
xlat
dec
in
mov
jb
pop
loope
jbe
dec
mov
cdq
retf
out
fsubr
stc
cs
jns
pop
pushf
cld
push
sbb
add
sbb
movs
cmp
inc
sti
fldenv
daa
imul
push
loope
sahf
sti
push
mov
pop
mov
add
loopne
cwde
ja
jge
sub
sbb
inc
das
push
repnz
and
add
mov
xor
or
mov
jg
lods
sahf
sbb
loop
xchg
cdq
mov
sbb
js
mov
sub
push
mov
out
cmp
cmovnp
pop
push
pop
ret
dec
pop
cli
push
pop
jmp
fdiv
mov
mov
sub
data16
xor
xchg
sub
in
in
mul
xchg
cmps
push
sar
xchg
ror
popa
jo
xor
dec
mov
xchg
ja
pop
sub
adc
sahf
xor
cmp
loop
mov
add
sbb
dec
dec
ret
sbb
fadd
test
retf
mov
fbstp
xor
fisttp
adc
cmps
test
mov
push
loop
lds
shl
mov
jne
jb
pop
sub
or
pop
xor
int
lock
cld
or
icebp
mov
inc
hlt
scas
mov
or
push
mov
daa
sub
push
sbb
fwait
lea
adc
loopne
pushf
dec
test
push
jecxz
push
les
pop
bound
je
in
ret
ds
push
loop
and
push
xlat
jns
pop
stos
pop
adc
mov
mov
aas
xor
push
aas
or
enter
movs
mov
popa
test
cmp
sub
movs
(bad)
les
mov
into
retf
xchg
jge
movs
lahf
popf
mov
imul
ja
and
in
test
mov
mov
lods
mov
movs
sbb
xchg
test
push
sbb
push
mov
inc
pusha
ins
lods
jmp
pop
or
movs
mov
rcl
mov
jns
lock
push
test
(bad)
sub
add
clc
xor
fsubr
sbb
mov
sub
add
retf
inc
push
dec
in
into
outs
cwde
out
sbb
out
lods
mov
enter
cmp
fwait
jb
pop
cmp
sub
or
xchg
pop
push
ss
sbb
push
sub
movs
fldcw
stc
inc
dec
or
cs
ja
mov
push
sbb
add
pop
push
push
pop
js
mov
sar
sti
dec
call
repnz
imul
aad
pop
mov
or
sub
scas
lahf
in
int
mov
jb
out
adc
mov
fld
ret
popa
cmc
and
in
mov
mov
repz
or
or
out
call
jl
mov
jg
(bad)
outs
mov
mov
xchg
fstp
lds
jae
in
outs
jg
cld
xchg
sahf
fst
out
sub
xchg
jae
inc
xchg
retf
fcomp
mov
(bad)
xchg
dec
pop
fcom
(bad)
ja
dec
mov
xchg
and
ins
and
into
jbe
jo
cli
sub
movs
imul
arpl
test
cmp
mov
xchg
sbb
xor
xchg
pop
mov
dec
ins
dec
jae
in
movs
xchg
movs
jmp
xor
jmp
and
pop
icebp
aaa
inc
inc
enter
mul
sub
xor
xchg
xchg
aam
add
das
rcl
pop
xor
mov
frstor
mov
fild
rol
iretw
das
(bad)
frndint
test
ret
jecxz
xor
mov
dec
test
aam
lea
jmp
mov
mov
push
push
lea
mov
rcl
(bad)
fistp
rcl
xchg
cmp
sub
cwde
cwde
mov
shl
pop
add
and
pop
add
(bad)
int3
xchg
xor
fs
ja
push
fucomi
ja
(bad)
call
pop
jmp
pop
sbb
inc
ins
in
mov
inc
repz
scas
inc
(bad)
outs
xchg
jb
cmp
fimul
mov
xchg
in
je
sbb
or
fnstenv
std
imul
and
dec
or
movs
jp
mov
mov
and
lahf
in
add
bound
je
test
inc
dec
inc
add
jbe
popa
inc
sbb
ds
and
test
cmp
out
sub
mov
jl
jmp
sub
jp
out
xor
call
mov
mov
clc
and
(bad)
push
iret
jae
pop
dec
test
xchg
and
retf
icebp
cld
push
mov
ja
(bad)
inc
inc
inc
push
loop
in
sub
mov
cmps
and
ret
adc
repnz
push
mov
cmps
popa
rol
cwde
sub
mov
cmp
cmp
pusha
int3
rol
(bad)
in
scas
ficomp
jne
xchg
dec
mov
sbb
jno
ret
into
pop
mov
pusha
loop
pushf
and
test
lods
cli
cmp
pop
fs
pop
arpl
inc
sbb
jb
jae
arpl
lods
in
cmp
retf
stc
sub
cmp
(bad)
int3
pop
mov
in
fisub
in
ja
jno
or
or
dec
mov
stc
nop
std
cwde
jnp
jnp
jle
xor
and
and
mov
dec
rol
mov
dec
aas
and
xchg
or
addr16
inc
int3
rol
fwait
add
sbb
add
add
rcl
rol
and
(bad)
rcl
rol
hlt
cmc
retf
push
mov
xor
je
mov
mov
cmovnp
jl
inc
push
ret
sbb
aas
push
pop
scas
(bad)
or
push
add
sbb
jecxz
mov
mov
pushaw
bound
into
add
inc
into
or
iret
add
inc
iret
and
addr16
add
push
pusha
push
js
mov
fs
aaa
rcl
inc
mov
cmps
mov
sub
jb
dec
sbb
repz
je
jmp
sbb
push
jecxz
outs
test
mov
ror
jo
mov
xchg
sbb
cld
pop
inc
or
or
(bad)
cli
and
mov
xchg
inc
and
adc
jmp
xchg
jge
ret
xor
mov
sub
cdq
std
sbb
pop
icebp
shr
and
push
loop
or
xor
cwde
push
bound
ret
retf
push
inc
call
pop
aas
pop
xchg
outs
test
popa
stc
loopne
xchg
inc
xor
mov
fs
js
or
loopne
push
hlt
lds
pop
mov
mov
outs
sbb
jmp
adc
or
mov
and
adc
jmp
pop
stos
inc
mov
inc
rcr
xchg
bound
adc
fs
fsubr
hlt
scas
retf
sbb
mov
dec
inc
sti
ret
(bad)
call
mov
jno
xchg
scas
push
stos
sbb
cld
or
inc
sub
jg
retf
scas
aam
mov
mov
stos
sbb
mov
cmps
cmp
nop
bound
ss
in
mov
nop
es
pop
(bad)
mov
js
mov
mov
cmps
popa
xor
pop
std
mov
inc
retf
cmp
xor
jmp
stc
hlt
jne
pop
retf
xor
fistp
fiadd
mov
loop
sub
dec
adc
icebp
rol
and
cmp
push
das
or
pop
xor
fsub
in
mov
ja
in
fld
ins
fidiv
mov
enter
bound
(bad)
iret
outs
sub
retf
cmps
mov
jge
mov
mov
into
dec
pusha
pop
pop
or
ret
stc
cmova
sti
test
and
jmp
push
mov
data16
adc
inc
inc
add
ss
test
mov
cld
add
in
out
aam
mov
or
std
aad
mov
push
inc
or
out
pop
cs
movs
mov
sbb
xchg
push
sub
and
pop
sahf
cmp
mov
jbe
cmp
popf
div
(bad)
ror
adc
pop
and
lods
repz
das
loopne
bound
add
inc
in
bound
jne
pop
or
retf
loopne
inc
movs
jo
or
cmp
dec
arpl
xor
adc
retf
stc
xchg
add
shl
and
mov
scas
cwde
cmp
jno
int
aam
push
add
inc
cmps
test
cmp
cmps
sbb
xchg
(bad)
popa
ficomp
push
and
xor
mov
inc
fld
aad
ffreep
outs
mov
mov
pop
push
repnz
pop
xchg
movs
jno
or
or
out
ins
call
popf
bound
mov
in
imul
les
stc
mov
pmaddwd
fs
inc
mov
jo
and
sbb
fdivr
inc
stos
aas
push
pusha
outs
push
add
test
addr16
xor
or
sub
icebp
mov
movs
jmp
call
mov
lea
mov
sub
push
mov
sub
pop
xor
dec
xor
jnp
inc
aaa
or
imul
sub
jmp
lahf
outs
add
ds
neg
out
js
jp
sti
mov
jno
sbb
xor
popa
adc
mov
sub
sub
in
in
and
xor
xchg
push
sbb
mov
aas
imul
je
adc
adc
jno
fwait
mov
nop
shl
adc
rcr
movs
lods
jo
pusha
iret
adc
sahf
imul
pop
retf
push
jno
jmp
pop
cdq
xor
mov
mov
std
movs
das
lahf
fistp
out
cwde
mov
or
ret
push
cdq
fsubr
and
fbld
mov
push
mov
add
lea
sbb
(bad)
ja
(bad)
(bad)
js
(bad)
(bad)
jo
popa
or
idiv
loop
cmp
xchg
std
pop
sub
sar
jmp
nop
inc
rol
sbb
push
fwait
push
mov
xor
ds
dec
and
pop
pushf
gs
ss
aas
not
push
jae
loopne
gs
mov
sar
inc
lods
mov
fs
mov
call
loope
(bad)
aam
mov
lods
jbe
call
jge
pop
lahf
jno
mov
outs
pop
aas
cli
jge
xor
(bad)
mov
out
ja
fmul
jmp
adc
sub
xchg
(bad)
mov
pusha
pop
lock
cmp
xchg
mov
jge
sbb
hlt
lods
ror
pop
xchg
hlt
movs
mov
xchg
stos
clc
xchg
outs
mov
inc
(bad)
repnz
xchg
mov
adc
cmp
mov
mov
icebp
inc
mov
and
fwait
mov
sbb
mov
out
lea
cli
stc
push
call
jns
push
lods
and
dec
or
hlt
sub
fimul
sub
cwde
fstp
dec
imul
or
mul
das
inc
pop
into
jmp
cmc
in
sub
cmps
add
push
mov
imul
(bad)
sar
jb
pop
dec
mov
mov
cmp
mov
pop
xlat
movs
iret
lea
fcomp
push
pop
mov
xchg
scas
test
in
xchg
adc
in
jmp
cld
push
aaa
jb
dec
mov
cmps
mov
sbb
imul
mov
adc
fisub
je
cld
sar
rol
jle
sub
jg
inc
pop
lock
mov
int3
rcr
push
ss
dec
inc
pop
ss
jno
or
sbb
jge
shl
jge
pusha
mov
retf
(bad)
das
cld
xor
das
sbb
pop
leave
cmc
movs
out
xchg
sub
mov
inc
into
fstp
fcom
fst
pop
pop
or
(bad)
repnz
add
popf
je
push
add
inc
(bad)
addr16
fs
xor
data16
add
inc
mov
mov
jmp
push
mov
lock
lahf
ret
rcr
sub
xlat
mov
pushf
jo
popf
clc
xchg
push
bound
mov
ret
shr
push
adc
icebp
imul
xchg
shl
jno
mov
sbb
push
cdq
xchg
sub
ficomp
mov
or
inc
jg
loopne
jo
cmp
aam
fmul
adc
cld
push
in
jle
add
jbe
push
js
repz
push
mov
ror
fild
jmp
adc
or
xchg
stos
outs
sti
das
jle
inc
xlat
test
xchg
jb
mov
mov
loopne
and
inc
adc
test
int
mov
mov
and
fmulp
push
mov
pop
in
cli
inc
mov
icebp
sub
adc
je
push
pusha
xor
scas
(bad)
sub
xlat
(bad)
ds
xor
push
xlat
jmp
sbb
push
xor
mov
xchg
push
xchg
adc
push
jle
xchg
fistp
jnp
dec
call
int
mov
mov
loope
jmp
xchg
and
in
jp
fdivrp
mov
(bad)
adc
das
xchg
jecxz
xor
add
hlt
call
retf
loopne
retf
xchg
in
outs
push
cmp
xchg
adc
(bad)
in
rcr
or
out
rcl
iret
in
jge
in
sti
mov
neg
or
jne
js
xor
pop
(bad)
cwde
ins
lods
leave
fist
xchg
adc
xchg
cmc
dec
sbb
jmp
mov
push
push
(bad)
pop
mov
xchg
or
je
adc
ins
adc
je
inc
push
and
fisub
xchg
mov
aad
out
and
sbb
in
xchg
pop
lock
stos
jae
or
enter
cwde
push
fxch
sbb
rcl
mov
lds
(bad)
repz
pop
out
or
cli
jl
sbb
sub
mov
add
cs
test
pop
and
outs
sub
dec
sub
cmp
mov
jmp
scas
pop
mov
push
(bad)
xchg
test
jmp
jae
push
std
sbb
or
xor
sub
pop
pop
hlt
xchg
sub
or
aad
(bad)
jae
stos
sti
imul
push
lods
pop
in
jbe
jae
cmps
mov
push
nop
mov
call
jg
jbe
shr
(bad)
pushf
push
mov
xor
jbe
int
sbb
cmp
jecxz
jl
rcl
add
js
ret
cmps
stc
sub
sub
pop
pop
call
pop
(bad)
into
test
cmp
sub
and
xchg
mov
mov
jmp
repz
rcl
fisubr
cmps
sbb
jne
xor
xchg
dec
pop
mov
in
addr16
mov
fistp
imul
xchg
(bad)
cmp
popa
pop
pop
inc
out
pop
mov
jb
shr
adc
dec
or
dec
xor
mov
sbb
xlat
pushf
bound
sbb
ins
aaa
sahf
leave
mov
sbb
add
add
icebp
in
not
cmps
(bad)
dec
xor
xor
aaa
movs
sahf
(bad)
sub
mov
pop
and
xor
or
mov
int3
inc
loop
cld
fisttp
inc
cs
pushf
pop
js
inc
out
xor
clc
inc
int
mov
xlat
mov
imul
sbb
aaa
or
push
xor
enter
mov
pop
adc
and
call
rcr
cld
sbb
sub
mov
and
sar
jle
stc
mov
adc
sbb
sub
pop
mov
xor
xor
jle
xlat
xchg
clc
mov
mov
or
ja
inc
sahf
int3
sahf
mov
imul
jnp
push
fadd
call
xor
js
sahf
mov
push
fld
add
sub
cwde
add
(bad)
cld
stos
fwait
push
mov
test
xchg
and
sub
fdivr
test
pop
out
js
popa
(bad)
loop
sbb
mov
sbb
jge
inc
and
mov
(bad)
fnsave
add
xor
jnp
sbb
inc
or
dec
inc
jo
int3
push
xor
sub
mov
jno
jns
cmp
push
sub
aad
iret
xor
and
in
sbb
jnp
lods
add
pop
mov
mov
fstp
call
mov
dec
jmp
push
out
test
adc
add
pop
stos
stos
je
call
xchg
push
aam
push
adc
adc
mov
mov
fld
and
or
retf
jge
and
sub
and
enter
inc
jl
je
daa
mov
fs
dec
dec
int
pushf
xchg
jge
in
cli
stc
cli
jmp
jmp
inc
cwde
dec
dec
pushf
add
sub
dec
sbb
push
mov
dec
push
mov
fdiv
xchg
dec
mov
add
xchg
push
and
mov
ins
rcr
outs
push
mov
stos
ja
push
int3
jg
cmc
add
mov
add
pop
mov
hlt
cmp
nop
inc
sbb
xchg
inc
imul
retf
pop
into
sti
sbb
mov
jl
lods
sub
sub
adc
mov
pop
int
mov
inc
into
jmp
sbb
movs
pop
jmp
inc
(bad)
out
fist
pop
aam
add
dec
jns
adc
inc
push
or
aas
or
push
push
retf
cmps
lods
test
nop
sahf
sbb
cmp
and
xor
pusha
dec
inc
(bad)
xchg
push
das
leave
xchg
outs
bound
xchg
or
xchg
mov
mov
imul
inc
push
test
mov
test
cmp
bound
(bad)
sbb
(bad)
cmp
inc
call
inc
test
cmp
addr16
test
jae
mov
xchg
push
call
xchg
pop
mov
jns
jae
push
push
and
adc
adc
arpl
mov
pop
xchg
retf
sbb
shl
jo
enter
pop
int
jmp
adc
test
jp
(bad)
rcl
mov
es
ss
or
call
scas
outs
inc
imul
call
push
or
xor
xchg
out
sub
mov
jb
mov
push
xchg
sub
out
cmp
lods
jp
stc
int3
push
xchg
and
inc
sti
cdq
push
xchg
pop
adc
enter
mov
ficomp
pushf
dec
and
jbe
cwde
je
(bad)
mov
aaa
data16
and
repz
mov
xor
push
push
push
add
push
div
popf
stos
ds
or
sbb
test
(bad)
mov
mov
stos
stos
push
mov
mov
push
js
cmp
jecxz
test
mov
fnstenv
pop
call
push
movs
movs
sub
inc
scas
sbb
cmp
in
mov
xor
or
fs
xor
lods
sbb
push
mov
jne
jecxz
rcr
cmp
add
inc
or
pop
mov
ret
or
cmp
or
sbb
or
sahf
loop
jl
add
adc
fistp
cmp
xchg
sbb
pop
mov
hlt
jbe
xchg
xchg
fsubr
mov
in
aam
and
call
scas
pushf
scas
daa
xor
or
outs
cld
enter
jne
or
add
xchg
pushf
or
xor
mov
int3
jge
dec
dec
imul
aam
inc
pop
xor
fistp
dec
adc
sub
dec
dec
mov
stos
lea
or
and
add
or
in
sbb
paddd
int
repnz
ss
sbb
sbb
loopne
xor
mov
popa
jp
scas
retf
pop
jo
stos
jae
sub
jmp
and
not
jmp
imul
mov
(bad)
out
jo
push
into
call
frstor
sbb
rol
pop
movs
sbb
sar
inc
xor
ins
call
sbb
jp
mov
mov
iret
mov
fldcw
mov
mov
mov
adc
mov
fsubr
jmp
aad
jecxz
mov
xchg
sub
in
daa
repnz
add
fwait
retf
test
cmp
add
test
and
jns
cdq
cmp
jnp
or
imul
int
(bad)
cmp
sahf
dec
cmc
mov
cmp
push
fst
je
sar
ret
cmp
mov
mov
adc
scas
fisubr
adc
jae
scas
ins
inc
enter
push
lahf
jmp
pop
sbb
dec
mov
sbb
cwde
sbb
push
ret
adc
push
neg
fwait
popa
add
test
xor
add
and
push
push
pop
jl
mov
shl
(bad)
(bad)
jmp
sbb
dec
push
push
fnstsw
xchg
sbb
mov
mov
pop
pop
seta
pusha
xchg
inc
jl
xchg
cli
pop
call
js
fcom
ret
aam
and
cld
loopne
xor
jecxz
lds
add
jno
jmp
call
loopne
mov
ret
pop
adc
add
dec
adc
cmp
in
std
xchg
dec
pop
push
add
mov
movs
cmp
adc
sbb
adc
xchg
jbe
cmp
xor
lock
lahf
xchg
bswap
fsub
test
pop
aam
movs
(bad)
or
jo
fdivr
sbb
xchg
pop
cmp
and
cmp
js
sbb
jbe
dec
jae
and
repz
inc
xor
sbb
dec
and
and
vrndscalesd
leave
stos
fimul
in
add
lahf
lods
jmp
cld
mov
cmps
fcom
clc
aaa
push
outs
(bad)
mov
aam
pop
ds
inc
data16
jns
hlt
movs
dec
pushf
mov
dec
mov
(bad)
dec
cwde
push
aam
xchg
pop
pop
sub
mov
ret
jp
fld
pop
mov
and
mov
inc
mov
(bad)
jle
cmps
(bad)
in
scas
or
loope
scas
rol
ret
lea
jl
mov
mov
sbb
or
push
aas
into
xchg
adc
mov
xor
dec
gs
pusha
jns
in
and
add
mov
(bad)
shr
in
mov
aam
sbb
sti
test
shl
and
push
cmps
out
ss
inc
mov
(bad)
stos
mov
stos
or
adc
ja
cmc
sti
scas
scas
pop
in
adc
fistp
iret
in
retf
test
rcl
lds
inc
mov
jmp
mov
add
pop
xor
xchg
mov
push
ret
mov
dec
inc
jmp
cmp
sahf
jno
cmp
cs
cmc
dec
adc
jo
cmp
(bad)
ja
adc
push
push
jecxz
mov
call
sbb
pop
icebp
add
gs
scas
fs
inc
xchg
xchg
jg
nop
fcomi
sub
scas
ret
pop
aam
rcr
xchg
push
stc
into
xchg
dec
sub
ds
out
das
test
pop
xchg
ja
mov
add
add
and
into
mov
movs
ins
push
sub
je
setg
pop
ret
or
leave
xor
cld
or
adc
mov
push
int3
push
jne
adc
mov
call
(bad)
dec
cmp
aas
int3
jmp
in
leave
loope
sbb
and
push
popa
int
or
jp
adc
mov
or
mov
out
pop
lods
xchg
mov
mov
jmp
in
pop
inc
push
push
stos
mov
xchg
mov
xchg
nop
neg
fbstp
mov
bswap
addr16
xchg
or
push
clc
jne
pop
rol
sbb
jne
dec
in
xor
bound
or
adc
pop
adc
test
and
xor
xchg
and
cmps
sbb
push
pop
and
xor
call
out
imul
push
sub
aaa
es
adc
jge
repz
ret
xor
mov
fstp
shl
cmp
hlt
dec
and
adc
jne
inc
repnz
jl
pop
adc
gs
xor
cmp
aad
cmc
mov
push
add
or
jecxz
psubusb
lods
push
jg
xor
enter
push
mov
rcl
fst
repz
pop
(bad)
jp
(bad)
mov
rcr
push
(bad)
das
stos
xor
stc
imul
mov
cmp
inc
xchg
cmps
loopne
pop
mov
mov
dec
xchg
mov
xor
fsubp
mov
mov
sbb
sub
fwait
xor
icebp
cmp
imul
nop
cmp
leave
fiadd
sub
nop
rcl
fistp
dec
dec
xchg
sbb
js
adc
jp
xchg
mov
cmp
call
pop
std
pop
pop
std
pop
stc
jnp
add
data16
out
ret
cmp
jo
addr16
stos
test
fcmovnbe
sbb
or
call
jnp
aad
lea
fwait
(bad)
push
(bad)
(bad)
outs
mul
int3
and
xchg
call
mov
movs
pop
mov
sbb
shr
cmp
mov
add
sub
inc
mov
add
mov
imul
stos
jb
mov
popa
cs
es
jmp
mov
xchg
cmp
(bad)
push
retf
jl
fldcw
push
ss
aam
in
test
push
lds
les
les
and
mov
aaa
push
push
xchg
adc
inc
inc
int
jns
jb
fsubr
mov
xlat
arpl
pop
imul
inc
out
mov
cli
call
lds
and
pop
dec
out
lahf
shl
shr
pause
push
int3
cmp
push
ins
and
inc
inc
outs
mov
lods
dec
call
test
shl
mov
int
sub
leave
xor
imul
out
pushf
hlt
jle
outs
mov
pop
pop
jb
jo
fs
push
xchg
mul
mov
test
pop
cld
daa
popa
pop
aas
sbb
std
fsub
dec
fldenv
xor
mov
scas
jo
jbe
jl
loopne
fidiv
in
push
nop
adc
cmps
dec
xchg
pop
rcl
daa
retf
add
fwait
add
daa
rol
xchg
mov
mov
aam
xlat
pop
add
xchg
xor
es
or
(bad)
mov
jl
setg
or
in
sbb
movs
or
dec
(bad)
repz
push
pop
icebp
std
stc
icebp
outs
sbb
add
mov
push
mov
cmp
popf
sbb
pusha
push
sbb
fdiv
rcr
loope
mov
out
pop
jmp
mov
mov
out
lock
pop
adc
jecxz
das
hlt
(bad)
jmp
inc
mov
inc
std
repz
lds
retf
fadd
add
jle
(bad)
sub
mov
clc
mov
dec
push
sbb
adc
clc
xor
aam
pop
mov
jl
(bad)
sbb
lea
lds
shl
jne
popa
cmp
fxch
mov
test
pusha
add
inc
sbb
mov
sub
cmp
loopne
ret
dec
mov
(bad)
daa
sbb
popf
mov
ret
jnp
mov
dec
xchg
inc
or
shr
stos
pushf
mov
mov
rol
lods
sub
cmp
xchg
nop
push
xchg
mov
or
add
call
and
mov
out
sbb
add
push
pop
or
sbb
enter
mov
popf
dec
rcr
lods
ja
dec
dec
push
or
dec
pop
ins
jg
out
in
push
adc
sbb
cli
xchg
push
inc
pop
push
jmp
jmp
cmps
sbb
jle
jmp
in
ss
mov
test
movs
movs
rcl
data16
mov
push
idiv
mov
jno
mov
enter
mov
pop
imul
xor
mov
retf
xor
test
inc
and
ins
inc
inc
push
push
das
fdivp
xchg
ror
pop
push
cmp
pop
movs
std
pop
out
(bad)
sar
add
scas
cmps
cmp
(bad)
leave
push
push
cdq
sar
mov
fsub
mov
fmul
pop
xor
ss
popf
ret
in
inc
pop
imul
adc
in
sub
out
in
push
dec
xchg
ret
aad
ret
push
sbb
jno
add
fwait
clc
aas
jmp
cwde
loope
test
dec
inc
(bad)
pusha
icebp
cs
into
(bad)
es
js
add
ds
addr16
push
mov
adc
mov
add
and
cmp
cmp
aaa
dec
adc
inc
call
inc
push
rcr
cdq
cmp
out
stos
mov
retf
mov
aam
xchg
xchg
sub
(bad)
mul
mov
and
adc
call
test
jbe
mov
sub
clc
icebp
movs
les
mov
push
pop
jp
xchg
dec
sbb
mov
ficom
fs
repz
xchg
adc
add
jecxz
inc
xor
mov
dec
sahf
test
out
std
fisubr
enter
dec
jp
or
(bad)
pop
in
dec
jb
enter
test
ds
dec
fisubr
rcl
fisub
and
sub
fs
cmp
inc
(bad)
in
cdq
test
push
fwait
push
jns
jno
mul
leave
imul
(bad)
push
pusha
and
ja
pop
in
sbb
sbb
fst
push
mov
cmp
mov
add
push
loop
in
pop
fnstsw
xor
sub
jp
movs
add
out
or
jb
shl
cmp
aaa
inc
adc
ret
push
xor
pop
or
loopne
int
xlat
sub
push
call
js
mov
out
fs
push
inc
xor
fsubr
sti
xor
adc
cmp
fisttp
pop
lods
cs
lahf
sbb
push
push
push
pxor
(bad)
sahf
cmp
hlt
enter
ficom
or
in
pop
(bad)
xchg
jmp
mov
bound
inc
stos
dec
fwait
mov
jbe
and
sub
adc
pop
mov
mov
out
inc
(bad)
or
and
xor
out
repnz
loope
xor
retf
jne
movs
jb
push
adc
lods
shl
sbb
xchg
in
push
ins
(bad)
(bad)
fdivr
dec
iret
rcr
je
adc
mov
mul
dec
jl
jg
in
fiadd
test
stos
inc
imul
(bad)
lahf
out
out
pushf
and
jecxz
fidivr
xor
stos
out
js
stos
scas
pop
(bad)
xor
jb
(bad)
cmp
fist
xchg
push
js
mov
push
mov
imul
adc
test
repnz
jmp
gs
push
push
shr
retf
int3
popa
sub
retf
jmp
cmps
pop
fs
or
addr16
dec
xlat
fwait
out
adc
fwait
or
je
mov
enter
mov
fnsave
arpl
rcl
cmp
(bad)
gs
xor
adc
test
outs
fcom
or
(bad)
mov
jecxz
call
fdivrp
cmp
xor
sub
js
stc
jno
jecxz
or
mov
pop
mov
retf
and
movs
sbb
cs
scas
inc
cmp
jo
mov
pop
sub
xor
test
sbb
lods
std
in
dec
icebp
std
movs
fisttp
push
jae
push
shl
or
jle
cmp
inc
sub
loopne
cmc
mov
popa
ret
sbb
fsub
(bad)
pushf
inc
stos
xchg
and
jo
lds
aam
add
adc
and
icebp
retf
fwait
addr16
dec
cdq
add
xchg
nop
dec
xchg
in
pusha
imul
push
popf
pop
out
pop
push
or
repz
mov
cmp
aaa
jle
(bad)
in
lea
inc
fidivr
inc
xchg
cs
inc
cmp
push
sbb
mov
js
add
cs
(bad)
in
mov
cld
mov
repnz
(bad)
push
push
rcl
ret
pop
idiv
mov
scas
inc
dec
fstp
add
pop
movs
outs
xchg
daa
pop
adc
sub
fbld
cmc
into
test
cwde
call
out
inc
jmp
mov
ja
cmp
test
scas
mov
stos
mov
inc
neg
mov
cmc
jmp
push
jno
imul
mov
sbb
add
pop
stos
mov
inc
inc
lds
adc
lods
mov
xchg
test
hlt
dec
cmp
dec
lahf
ret
out
scas
dec
(bad)
ret
pop
or
retf
out
push
pop
jnp
jnp
fcomp
jge
shl
mov
movs
gs
push
xchg
fcmovne
add
pop
pop
(bad)
sbb
pop
pop
sub
inc
sub
add
test
or
test
repz
pop
jle
sbb
jmp
daa
mov
fwait
pop
sub
ret
shl
jmp
xor
aas
mov
sbb
bound
in
call
enter
lods
les
mov
jnp
outs
retf
jno
jmp
fmul
fisttp
push
cdq
cmp
repz
(bad)
mov
outs
js
mov
loope
mov
ret
mov
jp
sbb
lahf
dec
pushf
push
leave
cwde
icebp
push
(bad)
shl
adc
mov
add
mov
iret
pusha
rcl
lock
pop
fistp
push
ins
and
cmp
movs
jmp
sti
call
mov
(bad)
xlat
(bad)
lods
arpl
xor
adc
or
outs
add
add
mov
retf
out
xor
inc
pop
sub
imul
push
je
fs
in
mov
arpl
jne
dec
cmp
int
cmp
mov
xchg
jmp
inc
aam
adc
in
cmps
push
and
xchg
add
mov
and
dec
and
and
std
inc
(bad)
xchg
add
leave
mov
(bad)
movs
rcr
dec
inc
int
fwait
add
sbb
inc
sub
int3
xchg
inc
retf
hlt
nop
and
into
shl
jmp
stc
adc
sub
jmp
push
or
add
inc
cdq
xor
outs
dec
dec
pop
imul
dec
push
clc
repz
je
mov
pop
add
jno
xchg
mov
jg
add
xor
cmp
cmc
int3
mov
nop
dec
pop
imul
out
lds
in
dec
aam
push
xlat
jb
fsubr
dec
imul
adc
or
xchg
retf
mov
inc
fmul
cmps
lea
fist
lock
sbb
test
dec
dec
or
or
ds
xor
mov
xchg
pop
inc
outs
addr16
fwait
jbe
jb
mov
out
ds
mov
movs
push
loop
aad
jp
dec
test
movs
xor
std
adc
mov
ret
hlt
mov
cs
ds
lds
adc
or
repz
loopne
test
loope
imul
ficomp
ja
repz
(bad)
push
xor
rep
mov
jg
push
fst
cmps
and
(bad)
aad
mov
lahf
push
ins
lds
sbb
mov
cmp
retf
cmp
pop
ins
shl
enter
xchg
mov
pop
lea
ror
movaps
jne
mov
pop
dec
mov
pop
(bad)
test
inc
adc
stos
fnstcw
and
and
out
and
mov
pop
add
inc
loopne
xchg
and
mov
mov
enter
pop
repz
jbe
not
aad
enter
sbb
cld
rol
adc
fiadd
adc
pusha
(bad)
mov
cmp
and
in
mov
adc
fisttp
xlat
div
loop
and
aam
je
rol
push
push
inc
test
pop
std
dec
pop
jecxz
ror
and
mov
ins
and
fild
mov
(bad)
sar
test
sbb
sub
sub
and
ret
dec
cmp
xchg
mov
mov
and
cmp
dec
scas
pushf
mov
add
or
and
fidiv
sti
lahf
sbb
rcl
movs
or
movs
sti
call
(bad)
(bad)
pop
idiv
inc
add
lods
enter
sti
add
fadd
mov
mov
lea
(bad)
fadd
iret
pusha
fsubr
fsubr
int3
or
lods
out
les
sbb
scas
inc
ud1
(bad)
scas
(bad)
lods
xchg
adc
in
std
rcr
pop
adc
cmps
call
cmc
push
jecxz
or
aas
popf
add
mov
pop
rsm
in
sub
lods
mov
or
cdq
adc
sub
adc
mov
jl
out
and
div
adc
xor
mov
inc
cli
jp
mov
hlt
clc
inc
inc
repz
add
loop
icebp
(bad)
mov
add
mov
and
jp
mov
xor
inc
cwde
add
out
sti
inc
pop
std
or
pushf
jle
dec
in
mov
sahf
test
jns
leave
mov
add
hlt
dec
mov
cmc
jae
cmp
cmc
mov
int3
icebp
pop
cmp
and
lods
inc
xchg
in
sahf
jbe
mov
or
repz
inc
lahf
jo
shl
inc
xchg
add
repz
fmul
in
xchg
pop
sahf
xor
into
aaa
push
pop
jp
ret
(bad)
adc
push
sbb
xchg
adc
loopne
cld
setae
jnp
nop
lods
cmps
adc
jecxz
pop
push
mov
ficomp
addr16
in
or
inc
daa
loop
mov
(bad)
enter
fst
stos
ds
lahf
ret
sub
movs
or
inc
mov
pop
clc
mov
jp
sub
call
mov
int
xchg
pop
loop
and
in
inc
(bad)
out
fs
or
sub
mov
popa
es
mov
push
mov
cwde
sbb
and
stc
nop
xchg
dec
jno
or
xchg
ja
inc
push
cmp
retf
xchg
push
jle
aas
pop
inc
add
mov
popf
retf
xchg
cmp
outs
or
fstp
and
out
and
sub
pop
sbb
stos
push
inc
cmps
test
adc
dec
push
mov
sub
pop
test
adc
imul
loopne
mov
js
rol
pop
popf
sub
dec
mov
(bad)
das
ss
cmp
dec
mov
sub
add
or
jne
adc
adc
cmp
xlat
or
cmp
in
push
jle
push
ret
push
lea
inc
adc
and
jmp
test
mov
pop
sbb
ins
mov
dec
out
hlt
in
jg
xor
fiadd
sub
mov
fcom
cdq
hlt
inc
xchg
inc
add
or
stos
shr
pop
daa
(bad)
ins
add
call
mov
test
dec
hlt
push
popf
adc
dec
(bad)
pop
pop
jmp
mov
and
repnz
xor
pusha
jne
out
mov
fwait
enter
jo
jnp
mov
popf
lods
mov
call
dec
clc
xor
inc
mov
aad
out
nop
ja
fwait
loope
lods
xchg
fimul
aas
iret
pop
jp
stc
mov
xor
jl
pop
push
icebp
pop
jecxz
mov
pop
into
push
test
sub
sbb
push
out
ins
movs
pop
cwde
dec
jmp
inc
mov
and
cmp
mov
mov
cmp
int3
mov
cmc
pop
movs
ins
xchg
inc
(bad)
icebp
in
jo
xor
inc
icebp
daa
xor
cmp
pop
push
push
jl
int3
sbb
sbb
loop
movs
sbb
retf
mov
clc
sub
ret
adc
push
sub
(bad)
mov
test
jle
or
inc
and
repz
adc
push
aaa
mov
mov
pop
mov
lods
cmp
mov
mov
xchg
leave
jo
add
ja
loope
pop
push
sub
inc
mov
call
rcl
test
cwde
mov
mov
not
adc
xor
dec
inc
xchg
and
jle
ret
jns
int
in
arpl
add
jno
pushf
mov
or
sbb
jp
fs
sbb
shr
pop
lods
es
or
es
cmp
cmp
into
jecxz
dec
mov
iret
xlat
pusha
or
icebp
jp
ret
(bad)
mov
rol
ds
retf
pushf
sub
dec
lods
imul
in
clc
and
test
sbb
repnz
movs
test
out
jge
xor
(bad)
pop
mov
lds
fbld
add
inc
push
jge
lods
jmp
mov
(bad)
aas
cli
jle
(bad)
mov
fucom
dec
mov
aam
cmc
js
xchg
test
mov
and
test
popf
out
sub
mov
cmc
arpl
out
jmp
fs
in
je
shr
cmp
(bad)
mov
int3
test
inc
xchg
cmp
pushf
das
in
cmps
adc
mov
jle
retf
ret
fst
daa
cmp
or
mov
adc
inc
pop
pop
cmp
add
rol
stc
arpl
ins
add
retf
inc
movs
jmp
int
xchg
cmp
or
mov
xchg
test
xchg
pop
xlat
adc
jle
sbb
adc
sbb
rcr
add
scas
mov
xlat
or
pop
sbb
push
mov
test
fld
adc
fdiv
push
and
mov
lock
mov
pushf
dec
mov
pop
ret
movs
test
ds
rcl
leave
jmp
or
cmove
dec
fs
mov
ja
lods
mov
mov
(bad)
sbb
sbb
fcomp
cmp
cdq
neg
mov
les
xchg
and
push
or
ins
jmp
movs
push
mov
fiadd
cmp
outs
pop
lahf
mov
adc
ss
xchg
mov
test
(bad)
lock
and
pop
lahf
pop
imul
mov
inc
leave
in
mov
jge
(bad)
xlat
test
dec
mov
stos
sbb
xchg
ret
out
mul
or
in
mov
(bad)
mov
mov
dec
aas
mov
sbb
pop
xchg
push
call
imul
icebp
into
mov
movs
xchg
in
jmp
mov
pop
adc
pop
les
or
movs
push
lea
adc
out
mov
pop
daa
mov
rcr
push
fstp
sbb
add
pop
pusha
sbb
inc
xchg
push
push
adc
iret
cmc
and
ja
pop
pop
cmp
add
push
pop
jb
cmps
(bad)
arpl
sub
fs
test
ja
scas
jbe
cmp
push
fisub
sar
hlt
adc
xchg
mov
xchg
imul
sahf
dec
lods
jge
cwde
xchg
nop
mov
push
test
add
leave
push
call
cmp
mov
mov
push
cmp
mov
push
jno
mov
jae
sub
les
xor
pop
mov
jecxz
push
test
sar
cmp
inc
mov
push
scas
sbb
outs
and
mov
scas
adc
and
jl
xor
jns
mov
sub
cmps
dec
cmp
out
dec
outs
ror
or
shr
sbb
hlt
in
lods
push
or
retf
xchg
mov
dec
ror
loope
xor
aas
xchg
inc
imul
cli
mov
xchg
adc
shr
sbb
fistp
scas
pusha
cwde
mov
out
xor
add
push
aas
popa
pop
loopne
cmp
push
pop
dec
aaa
rcr
inc
or
or
nop
je
jl
xor
dec
jne
adc
test
inc
ja
push
mov
cmpxchg
push
xor
out
jnp
dec
xchg
(bad)
pop
or
jae
retf
xchg
sti
out
lahf
test
add
add
mov
cwde
dec
pop
fcmovbe
into
movs
es
fs
add
mov
lods
xchg
outs
stc
xchg
pop
movs
movs
fnstcw
pop
jmp
call
add
mov
jge
popf
push
xchg
sti
pop
std
xchg
in
pop
test
rol
add
stos
and
mov
cs
mov
mov
mov
push
xchg
cmc
push
jl
out
js
mov
or
inc
or
dec
nop
out
mov
mov
into
test
mov
inc
dec
inc
push
rcr
call
push
mov
js
lea
es
add
inc
test
sub
jb
sub
ja
iret
js
cmp
es
cmp
pop
imul
inc
push
add
ja
imul
loopne
add
stos
dec
mov
movs
stos
cmp
add
adc
in
adc
push
sbb
lahf
rol
xor
push
xchg
test
leave
push
shr
loop
or
ja
mov
inc
jo
ins
into
xchg
push
jle
cmp
retf
mov
(bad)
retf
or
pop
aas
and
imul
and
xor
in
sahf
xchg
and
xor
and
mov
es
inc
gs
pop
imul
mov
or
xor
push
sbb
or
add
sbb
or
add
add
inc
sub
sub
stc
out
push
hlt
mov
inc
add
cld
pop
gs
dec
pusha
lds
pop
cmps
sub
loope
and
or
push
call
mov
not
inc
scas
sahf
mov
mov
lods
gs
mov
addr16
cmps
pop
loope
adc
loopne
push
loopne
and
and
mov
dec
jns
int
jo
xchg
inc
aam
bound
mov
popf
push
les
leave
mov
xchg
or
icebp
jne
xchg
or
add
mov
repz
js
movs
je
rcl
popf
push
pop
stc
cmp
and
out
pop
int3
and
gs
clc
loopne
(bad)
shr
jecxz
out
adc
push
repz
or
pop
jnp
stos
mov
outs
sub
repz
jmp
mov
mov
adc
ins
or
rcl
je
or
xchg
xchg
int3
xor
inc
cwde
inc
js
sbb
jg
imul
sub
adc
(bad)
pop
pop
add
ins
push
(bad)
popf
clc
cmps
jmp
dec
dec
jecxz
out
jecxz
aam
ins
mov
rcr
and
arpl
frstor
(bad)
(bad)
or
(bad)
jmp
lods
mov
sbb
lods
rcl
pop
inc
mov
shufps
mov
or
push
dec
mov
int3
xor
mov
int
push
add
inc
inc
mov
fwait
push
or
xchg
mov
mov
iret
std
pusha
add
cdq
and
pop
mov
adc
das
xor
aad
push
stos
pushf
(bad)
or
dec
out
aam
daa
pushf
popa
ss
push
push
out
mov
mov
add
mov
data16
std
pop
lods
adc
push
fild
in
xlat
idiv
stos
adc
xor
out
das
fs
rcl
loop
inc
sub
outs
sbb
lods
sub
popa
call
rcr
in
shl
sbb
jge
mov
sub
fwait
dec
mov
adc
shl
jo
sbb
mov
out
xchg
lock
retf
test
push
push
xchg
clc
shl
xor
mov
pusha
mov
inc
or
sub
out
adc
adc
push
sub
mov
add
loopne
into
sub
inc
sbb
xor
push
xchg
loop
cdq
cmps
xor
retf
and
pop
lahf
sbb
mov
arpl
jecxz
or
out
ins
lods
mov
xor
xchg
pusha
cmp
shl
daa
(bad)
loopne
mov
in
mov
mov
rol
jge
clc
arpl
popa
mov
or
loop
adc
sbb
js
sub
jmp
pcmpgtd
std
mov
cmps
imul
rcl
mov
dec
fwait
jle
sbb
imul
xor
add
push
adc
mov
jg
mov
adc
lea
mov
push
cmovge
or
pop
xchg
jb
or
aas
ss
mov
(bad)
icebp
imul
scas
mov
jp
test
push
sbb
sub
mov
xor
sbb
xchg
cmps
test
push
(bad)
xchg
popa
shl
lahf
sub
ret
outs
xor
adc
cmp
jb
repnz
pop
or
out
inc
dec
das
pop
arpl
xchg
adc
mov
cli
retf
push
add
mov
arpl
sbb
fst
call
sub
xor
mov
pop
arpl
(bad)
iret
dec
aaa
in
pop
popa
pop
pop
icebp
dec
jne
and
mov
cli
(bad)
es
popf
in
ins
sub
push
push
mov
and
je
cmps
fsubr
pop
scas
clc
loope
jbe
test
sar
enter
stc
xor
ss
xchg
xor
test
cmp
js
sbb
mov
mov
mov
sub
pop
mov
xchg
jge
push
popf
iret
lds
fisub
test
pop
pop
outs
jg
sbb
ss
arpl
mov
in
and
retf
cmp
dec
je
popf
sbb
or
jge
cmp
out
push
bnd
ret
jg
test
add
push
mov
(bad)
xchg
out
inc
and
fs
cmps
mov
popf
bound
or
lods
ins
and
adc
mov
out
push
(bad)
clc
(bad)
rol
mov
jg
in
fisttp
out
hlt
pop
sti
cdq
pop
(bad)
fist
sbb
adc
jbe
and
push
rol
and
push
outs
jno
mov
cld
mov
mov
mov
xchg
lock
stos
es
xor
shl
cmps
shl
pop
pop
and
dec
cdq
nop
lea
jecxz
dec
add
or
xchg
jns
lods
pop
cmp
jl
cmp
fcom
adc
sub
leave
adc
addr16
mov
pop
cmp
sub
pop
sub
jnp
ins
add
fidiv
retf
test
in
mov
call
popf
ficom
mov
xchg
fwait
jge
or
inc
out
imul
rcr
mov
dec
rcr
in
out
pop
mov
in
pop
push
inc
jecxz
sub
mov
(bad)
jge
cmps
mov
pop
mov
in
daa
mov
cmp
(bad)
callw
ds
stos
in
xchg
rcr
jno
loopne
out
add
aas
out
jmp
sar
loop
inc
nop
or
xor
dec
sub
lea
inc
lahf
mov
fsubp
mov
lea
mov
shr
cmps
arpl
add
pop
fisubr
sbb
je
cs
pop
data16
pop
lahf
add
mov
int
pop
inc
pop
pop
mov
stc
inc
and
arpl
call
arpl
ins
fcom
cdq
sbb
xor
mov
out
jne
call
stc
sahf
fld
mov
pop
enter
pop
sub
add
sbb
xchg
(bad)
dec
push
ins
and
ins
xchg
fcom
push
mov
mov
pop
adc
xchg
xchg
nop
es
push
push
loope
and
push
adc
pop
push
mov
in
xchg
int3
add
or
xchg
mov
push
xor
mov
jae
ins
push
push
xor
fcmovu
mov
lods
mov
or
leave
add
jge
xor
sahf
adc
push
sub
sub
and
cmps
sbb
rcr
loop
or
retf
adc
rcr
jl
mov
cmp
fmul
out
add
stos
sbb
add
inc
mov
jbe
sub
push
lods
sub
repnz
ficom
pop
push
outs
lea
loop
add
jge
data16
add
lock
jae
adc
leave
xchg
test
mov
outs
test
mov
mov
movs
sub
shl
outs
ins
inc
sbb
cmp
xor
shr
push
aad
mov
(bad)
in
rol
push
adc
jecxz
xchg
sub
(bad)
lds
je
test
leave
sub
sub
leave
inc
mov
or
scas
test
(bad)
adc
xor
dec
call
aas
dec
sub
mov
jb
sbb
mov
fwait
hlt
and
inc
repnz
arpl
dec
pop
fld
ds
or
sub
mov
inc
and
stos
adc
dec
stc
xor
jmp
scas
cmp
mov
jge
mov
out
in
sub
add
or
dec
mov
inc
cmc
pop
sub
into
mov
xor
gs
push
leave
bound
xchg
cmps
(bad)
popa
sbb
sub
mov
scas
add
and
fcmovbe
push
(bad)
outs
shl
pop
daa
mov
loope
and
mov
xor
call
pushf
cmc
cmp
ret
and
mov
je
jns
or
ins
or
or
mov
mov
sub
cmp
cwde
cli
movs
mov
jge
(bad)
stos
(bad)
adc
mov
push
aas
jmp
stos
stc
popf
add
lods
repz
gs
cmp
cmc
outs
pop
fsubr
sub
and
dec
out
mov
ds
shr
adc
test
pushf
xor
mov
jp
lods
jp
push
mov
sub
mov
xchg
pop
jb
pushf
xor
call
loopne
push
inc
add
pop
sti
xchg
push
inc
(bad)
cmp
cmp
cli
add
xor
mov
sbb
out
fcomp
jmp
pop
fwait
add
jl
test
jnp
pusha
cmp
fs
outs
les
inc
jp
pop
jmp
call
mov
jnp
hlt
sbb
cmps
dec
inc
sti
lods
jo
xor
xchg
mov
faddp
ja
pop
jbe
cs
pop
mov
arpl
or
xchg
in
cmps
and
pusha
outs
pusha
push
push
xchg
(bad)
xchg
jmp
pop
and
push
push
or
sub
fisttp
jmp
dec
adc
in
push
aam
adc
out
in
and
fs
and
push
fdivp
dec
pop
pop
xchg
(bad)
xor
addr16
out
mov
jae
dec
je
add
hlt
dec
jbe
clc
xchg
xor
cmps
add
push
xor
add
jb
pop
das
add
int
dec
sbb
jne
lods
adc
cmc
jb
scas
sub
dec
pop
jne
dec
add
bound
out
lods
add
adc
dec
push
add
aas
inc
or
sti
add
mov
xchg
imul
enter
test
mov
jp
pop
scas
or
sub
test
cmp
enter
stc
jno
das
mov
mov
(bad)
push
jno
call
xor
adc
fnsave
mov
test
sbb
add
mov
sub
add
loop
lahf
jno
inc
push
sub
pop
ds
jns
xchg
and
mov
fadd
mov
arpl
push
mov
cmp
std
inc
mov
scas
cmps
std
dec
sbb
lods
sti
sar
test
(bad)
out
or
outs
jecxz
repnz
inc
pop
adc
pop
inc
sub
mov
dec
aas
call
xlat
scas
push
fucom
in
mov
mov
popf
out
xchg
push
add
scas
(bad)
fdivr
sahf
das
pop
xchg
or
(bad)
(bad)
imul
shl
pushf
push
mov
in
xor
nop
sbb
push
inc
jg
fwait
stos
pop
dec
sar
retf
pop
lds
bound
push
cmps
stos
lahf
mov
xchg
dec
scas
lods
fiadd
xor
aaa
hlt
dec
sbb
and
mov
or
(bad)
mov
jb
and
cmps
inc
add
movs
ret
repnz
mov
ins
xor
jle
bound
pop
and
xor
ins
cld
test
jns
out
cwde
xor
scas
shl
and
pop
jg
dec
lods
cmp
sub
clc
mov
fwait
push
adc
adc
or
in
fwait
jge
cmps
dec
mov
mov
mov
or
mov
adc
cld
(bad)
cmp
stos
pop
(bad)
fiadd
shr
fs
cmp
in
mov
repnz
retf
jns
mov
push
les
cmc
ja
addr16
push
bound
push
sahf
pop
stc
mov
add
cwde
inc
bound
dec
add
mov
or
test
pop
jne
jnp
jle
out
ins
mov
cmp
push
imul
(bad)
lods
or
jg
enter
in
cmc
pusha
mov
aam
inc
nop
adc
pop
cld
mov
xchg
mov
mov
pop
sbb
icebp
push
sets
sahf
xchg
cmps
xor
sbb
cmp
mov
dec
jmp
sub
xchg
mov
dec
and
dec
fsub
mov
call
push
call
hlt
ss
stos
add
mov
lea
adc
or
or
jg
add
push
aas
pop
in
jp
fld
sbb
ins
cmps
je
cmp
ret
mov
dec
push
adc
(bad)
retf
pop
daa
adc
movs
add
popf
sti
dec
in
dec
sahf
lock
jp
cmp
aad
ss
loope
or
xchg
jl
in
sub
popa
int
sbb
adc
pop
es
mov
mov
pop
push
retf
adc
pop
xchg
pop
mov
xor
popa
bnd
mov
mov
cmp
ins
sbb
xlat
outs
mov
sbb
aad
ror
rol
cmps
fnstcw
sub
push
ret
jl
retf
inc
pop
cwde
leave
inc
mov
into
xor
bound
arpl
mov
mov
push
arpl
fdiv
or
xchg
mov
fmul
push
cmp
jl
test
cmc
or
pop
das
adc
ret
lods
cmps
mov
xchg
sbb
in
mov
aaa
adc
inc
mov
mov
mov
hlt
outs
push
cmp
add
ins
retf
bound
add
inc
fstp
push
popf
std
cwde
xchg
xchg
bound
in
jae
leave
test
push
ffree
mov
(bad)
jnp
scas
jns
inc
call
push
xchg
aas
je
int3
mov
arpl
jbe
dec
cld
cmp
cdq
and
jae
push
retf
inc
loope
mov
cdq
sub
cmp
cwde
sbb
or
rol
dec
out
enter
ds
pop
jp
fild
push
addr16
push
cdq
mov
add
inc
(bad)
cmp
nop
fisttp
ins
cmp
les
lahf
push
or
push
scas
and
and
in
je
popa
sbb
sbb
mov
(bad)
push
arpl
loope
lods
mov
iret
xchg
jmp
out
inc
lahf
mov
pop
inc
push
nop
paddw
rcr
call
xor
adc
mov
fadd
sbb
pop
daa
mov
sbb
sub
mov
nop
xchg
outs
pop
jle
or
jge
sbb
imul
dec
cmc
pop
out
sbb
adc
lock
pushf
popf
add
xchg
mov
std
popa
mov
repnz
push
ja
and
xchg
sar
lods
sbb
fsin
hlt
and
test
retf
enter
rcl
mov
adc
adc
cmps
arpl
call
out
(bad)
jne
(bad)
imul
iret
sahf
imul
xchg
icebp
mov
pop
mov
nop
inc
sbb
ss
cdq
mov
mov
add
xlat
jge
in
out
pop
repnz
retf
std
jge
sahf
jmp
adc
clc
and
cmc
push
dec
and
leave
add
jno
pop
inc
outs
rol
mov
jecxz
sbb
(bad)
gs
rcr
jb
adc
jo
pop
jne
mov
jmp
imul
cmp
lods
call
sbb
mov
jns
clc
std
sbb
out
push
sub
aas
addr16
es
test
pop
repz
mov
cmp
ins
test
xor
push
ss
cli
sbb
outs
pop
xchg
fistp
or
mov
aam
jle
and
rep
lea
sbb
gs
fs
in
adc
mov
mov
std
cmp
jne
mov
add
pop
inc
pop
jns
(bad)
mov
sub
call
push
clc
and
jl
aad
leave
rol
out
inc
inc
ret
adc
or
popa
jecxz
push
jmp
cmp
jle
add
into
cmp
lahf
aas
push
jecxz
mov
dec
xor
xlat
xchg
stos
cld
imul
dec
test
dec
loop
lock
push
inc
mov
cmp
loope
mov
and
sbb
leave
ins
(bad)
adc
mov
push
ja
adc
mov
fnstcw
fcmovu
sub
jle
pop
push
mov
call
ror
ins
mov
test
dec
inc
mov
push
sbb
popa
or
int
mov
inc
push
xlat
jbe
out
cdq
mov
mov
mov
push
stc
jae
(bad)
int
out
cmps
pop
and
sti
test
outs
test
pop
scas
pop
xor
or
pop
out
adc
jb
mov
sub
das
and
add
imul
cdq
fidivr
aas
sub
repnz
retf
call
outs
pop
push
lods
dec
xor
in
pop
sbb
push
pusha
push
(bad)
sar
pop
ins
mov
fsub
shr
pop
sbb
loop
pop
lds
test
add
xchg
sub
inc
cmp
dec
arpl
call
mov
lds
rcr
aad
cmp
or
(bad)
call
fnstenv
jmp
jae
pop
cdq
push
fwait
xor
mov
in
shr
jae
ds
pop
popa
lock
and
adc
cdq
nop
push
xchg
movs
jmp
cs
inc
aam
out
lods
and
jg
inc
add
pop
xor
and
dec
aad
sbb
mov
push
jecxz
iret
inc
aam
movs
in
cmp
rol
push
mov
xor
rcr
sbb
xlat
arpl
push
jl
cmp
inc
jbe
pop
stc
cs
push
sub
push
nop
gs
pop
jmp
popa
adc
or
xchg
lods
cdq
adc
adc
jae
loop
and
loopne
in
enter
mov
clc
push
frstor
jl
mov
loop
dec
imul
fnstcw
or
das
push
out
xor
add
frstor
xchg
adc
jo
retf
push
sub
and
lds
push
es
nop
sub
mov
paddw
jmp
scas
movs
mov
scas
add
jmp
sub
int
push
add
fcomp
das
xor
fisub
clc
add
cs
adc
mov
arpl
sbb
out
fwait
jmp
jne
pop
hlt
adc
mov
add
call
pop
js
fsubr
int3
and
aam
and
cli
xor
retf
sbb
add
daa
xchg
inc
mov
and
movs
sbb
into
push
data16
dec
xchg
or
add
sub
adc
clc
repz
mov
adc
call
test
mov
leave
xor
inc
mov
or
in
es
(bad)
sbb
lea
add
cmp
imul
mov
in
mov
mov
push
(bad)
test
icebp
xor
dec
adc
out
inc
je
lock
xlat
or
or
ror
xchg
xchg
pop
mov
data16
inc
int3
sbb
imul
pop
dec
addr16
xor
and
xor
call
(bad)
cdq
arpl
inc
xchg
adc
or
xchg
xchg
jne
dec
mov
sub
test
aas
out
in
push
js
pop
(bad)
mov
jl
mov
mov
push
mov
fstp
dec
stos
xchg
retf
jnp
sbb
ss
and
mov
aas
dec
push
mov
aas
mov
inc
inc
add
nop
aas
fxch
out
dec
push
je
cmp
fcomp
and
lds
aad
outs
jno
ret
xor
xchg
xchg
xor
dec
adc
add
or
cmp
mov
fcom
shl
mov
jmp
cmp
xchg
mov
daa
(bad)
jmp
jb
or
out
mov
add
mov
mov
cwde
pop
popa
mov
mov
loope
movs
(bad)
imul
retf
ins
pop
mov
in
in
movs
and
inc
popa
data16
lds
bound
stc
popf
(bad)
lods
test
mov
jp
cli
mov
enter
mov
ds
retf
push
inc
inc
or
sbb
cmp
je
push
sti
jne
outs
dec
call
mov
aad
dec
push
repnz
test
xor
movs
sub
push
inc
dec
movs
js
jmp
pop
adc
xor
cld
in
push
sti
aas
(bad)
mov
and
fimul
jp
vpackssdw
xor
gs
xchg
xchg
stos
test
scas
xor
ins
jns
add
adc
mov
fnstenv
leave
mov
iret
pop
and
add
xchg
sahf
adc
idiv
(bad)
addr16
movs
mov
lea
imul
or
cwde
pop
fnstsw
xor
mov
lods
dec
and
test
cdq
fld
xchg
inc
popf
mov
jge
ja
add
adc
adc
mov
fs
lods
sahf
pop
fnsave
mov
push
call
leave
pushf
jge
cmc
xlat
imul
adc
(bad)
cdq
sahf
or
cmps
fdiv
test
adc
push
outs
pop
retf
mov
loope
int
add
out
mov
dec
sub
call
push
jmp
push
int3
push
pop
ss
adc
xchg
fadd
outs
imul
and
sti
jbe
(bad)
jae
jns
jae
jmp
ficomp
xchg
adc
xchg
ss
outs
call
shr
mov
mov
jl
fwait
out
sub
out
mov
mov
jae
and
lods
sub
test
cmp
nop
das
mov
xor
outs
xlat
push
mov
sub
sbb
jbe
pop
call
cdq
rcr
aad
stos
jmp
inc
xor
bound
fldenv
jg
mov
fcomp
push
push
sbb
mov
cmp
mov
pusha
in
clc
nop
sbb
jge
add
mov
js
pop
adc
mov
adc
in
jecxz
sub
arpl
sub
and
adc
sti
add
mov
out
fild
pop
xchg
mov
addr16
out
mov
pop
gs
pop
adc
sub
cmp
ret
arpl
mov
stos
dec
dec
dec
add
sub
mov
fistp
pusha
(bad)
or
movs
cdq
mov
xchg
pop
fsubr
cmp
ss
xor
aaa
pushf
or
or
cmc
pop
cmp
mov
mov
mov
sub
sti
je
pusha
and
push
mov
lock
dec
(bad)
pop
les
ins
mov
(bad)
xchg
fisttp
cmps
out
jg
mov
push
mov
scas
and
add
call
int3
out
mov
cmp
cmp
mov
mov
push
push
fcom
inc
shl
ins
cdq
hlt
lods
fdivr
cmp
loopne
adc
ja
ja
mov
push
cmps
sub
dec
iret
inc
cmp
jb
in
jl
loopne
fsubr
push
jl
xchg
inc
retf
ret
and
xchg
je
xor
cmp
mov
pop
push
and
jns
mov
mov
push
pop
sar
ficom
retf
repnz
(bad)
loope
int
mov
mov
loope
fisttp
jmp
call
push
mov
or
dec
fldcw
cmp
pop
dec
dec
(bad)
imul
mov
sub
or
mov
mov
(bad)
fisubr
mov
fld
jle
or
pusha
cmp
ret
neg
pusha
addr16
fwait
pop
add
push
addr16
push
ss
mov
dec
mov
fiadd
push
sub
loope
xor
sub
bound
je
and
sti
lds
cdq
pop
push
xor
stos
rcl
cmp
arpl
push
mov
cwde
shr
outs
fxch
int
adc
push
pop
mov
and
idiv
rcr
or
add
push
cmp
outs
mov
pop
rcl
mov
pop
sbb
jnp
retf
adc
add
popa
fcmovb
cld
push
fisttp
neg
out
push
mov
fadd
xchg
xchg
pop
fcomp
xor
int3
add
mov
scas
sub
sar
popa
cmps
jmp
mov
and
fidivr
imul
fmul
inc
jmp
jbe
sub
sub
mov
sar
fisttp
cmp
jns
inc
out
lds
mov
cs
add
and
cmp
adc
stc
rol
jecxz
in
jmp
xchg
inc
and
inc
dec
and
out
sub
jle
pusha
xchg
mov
dec
ins
pusha
ss
lea
push
daa
addr16
pop
enter
add
dec
pushf
out
mov
in
jecxz
sub
hlt
das
sub
in
cmp
sti
ins
fs
cld
ret
sub
mov
stos
and
pop
out
inc
gs
inc
mov
imul
xchg
inc
sub
aam
pop
(bad)
adc
mul
and
push
scas
pop
or
mov
jge
repnz
enter
das
test
imul
xor
mov
inc
aas
push
mov
mov
out
push
ins
push
push
inc
mov
repz
sub
cmovle
repnz
push
pop
xor
jecxz
pop
pop
dec
data16
push
ret
xor
js
push
fwait
cld
mov
jmp
out
in
pusha
mov
cmp
test
pop
mov
mov
mov
cmp
xchg
mul
pop
xchg
mov
fwait
and
leave
sub
fs
mov
add
fcmovnbe
mov
fnsave
pop
xchg
mov
mov
sbb
add
es
test
dec
push
add
xor
cmc
lea
mov
fnsetpm(287
ja
mov
xor
xchg
movs
mov
(bad)
inc
push
pop
sbb
lock
jb
and
nop
ret
ret
iret
dec
ret
push
xor
out
or
and
xchg
jns
adc
pop
jne
pop
sub
shr
xchg
sub
push
ret
cmp
pop
adc
ret
jecxz
fidivr
sti
pop
fidiv
movs
ror
neg
js
mov
and
pop
jo
sub
jne
or
or
xor
push
cdq
xchg
push
mov
adc
xchg
outs
push
push
enter
(bad)
push
sbb
mov
stos
dec
jp
adc
cli
repz
fs
jecxz
sbb
out
div
(bad)
mov
rcl
xor
dec
pop
in
es
sar
push
push
xor
ds
sub
pop
push
jmp
sbb
dec
jle
jmp
or
adc
and
and
in
cmp
xor
pusha
lahf
(bad)
cli
stos
push
inc
hlt
mov
sti
add
mov
mov
clc
in
mov
addr16
cmps
adc
dec
pop
jecxz
pop
scas
add
cmc
mov
mov
mov
dec
xor
mov
inc
sbb
imul
and
jns
sahf
mov
dec
je
adc
pop
retf
inc
xchg
fisttp
pop
aad
cld
bound
clc
in
sub
push
je
jno
ds
pusha
sbb
stos
ds
(bad)
cwde
and
adc
in
xchg
cmps
test
movs
imul
dec
mov
rep
outs
pusha
or
shl
int3
and
retf
gs
test
dec
popa
gs
mov
dec
adc
cmp
scas
rcl
pop
jae
xor
(bad)
(bad)
fsubr
sub
test
jg
and
adc
(bad)
ret
add
lea
dec
push
cmp
psubq
xor
push
mov
dec
shl
jb
push
stos
mov
pop
or
fild
cmp
(bad)
call
mov
icebp
repnz
pop
pop
mov
inc
ins
xor
and
rcl
sahf
fs
jmp
leave
fldz
inc
pop
push
xchg
fcmovnbe
fcomp
das
cld
jmp
leave
push
ror
sbb
xchg
xor
movs
popf
push
int3
and
push
sub
fcmovu
jp
add
(bad)
jecxz
fist
add
ror
add
pop
mov
icebp
into
xchg
xchg
mov
mov
xlat
adc
cmp
cmps
aad
mov
push
cmps
mov
dec
fcmovb
rol
xchg
lahf
aad
and
pop
aas
rcl
test
push
dec
ins
clc
jo
mov
dec
mov
jg
mov
sbb
adc
xor
test
mov
xchg
out
icebp
pop
mov
aaa
sbb
pop
minps
push
xchg
inc
cli
sbb
outs
jb
mov
movs
popa
mov
fwait
jp
mov
push
movs
ss
mov
sub
xchg
imul
leave
div
(bad)
ss
sbb
ret
(bad)
jne
retf
add
push
dec
dec
xchg
cmps
sub
push
fnstsw
popa
imul
xor
adc
stos
pop
adc
call
fwait
jle
shr
fwait
dec
mov
dec
mov
mov
add
sar
stc
fmul
push
and
cmps
cmc
jne
lea
mov
dec
daa
gs
mov
xchg
push
mov
pusha
imul
dec
fisub
mov
push
dec
out
bound
fwait
cmps
and
cmp
adc
test
test
push
aam
loop
lock
out
jbe
dec
add
push
stos
xor
cmps
xlat
push
inc
inc
mov
xchg
or
stc
out
jecxz
mov
and
jg
rol
loopne
iret
scas
iret
jl
push
or
adc
and
in
pop
or
ss
adc
pop
cmp
cli
enter
not
pop
push
xor
inc
sti
ins
adc
dec
ret
xchg
jmp
dec
sti
sub
xchg
jns
adc
stos
pop
adc
stos
inc
adc
or
or
fidivr
bound
add
or
shl
cmps
test
cmp
xchg
mov
pop
lods
xor
leave
pop
or
movs
sbb
stos
or
dec
push
stos
int
and
std
lods
or
retf
jbe
retf
cmps
test
jmp
je
inc
js
out
fwait
pop
add
test
das
lea
nop
or
loope
test
cmps
sub
cmc
xchg
shl
call
push
mov
dec
jae
xchg
arpl
pop
inc
fcomp
cmps
das
sbb
mov
push
push
or
dec
xor
sbb
dec
pop
mov
ret
shr
in
mov
cmc
push
into
lds
xor
ja
xchg
outs
add
dec
and
sbb
xchg
add
aad
mov
sbb
inc
(bad)
xchg
scas
mov
sbb
imul
mov
add
sub
xchg
sub
retf
xchg
ins
mov
bound
and
dec
pusha
cmp
test
or
addr16
clc
mov
movs
arpl
dec
scas
jp
out
add
jle
(bad)
jmp
mov
ficom
cmc
fcom
fcmovnbe
int3
aam
icebp
movs
mov
cmp
mov
mov
and
mov
xchg
sbb
add
shl
loope
cmps
inc
dec
sbb
pop
sbb
jmp
call
sbb
imul
jg
mov
in
mul
rol
mov
adc
mov
imul
and
scas
mov
push
or
xchg
shl
scas
outs
mov
and
mov
add
or
mov
push
and
test
inc
jnp
mov
and
sub
adc
addr16
lahf
xlat
mov
mov
adc
cmps
fmul
mov
cdq
es
inc
cmp
push
sub
cmp
outs
add
jge
or
inc
(bad)
sbb
sar
sub
jb
(bad)
jg
xchg
inc
sub
lods
mov
bound
lods
call
jb
fistp
ret
imul
xchg
js
xor
int
call
cmp
mov
adc
xor
sub
cdq
pushf
stos
xchg
gs
(bad)
mov
daa
inc
adc
and
in
mov
or
icebp
sub
jmp
aam
cdq
mov
cmp
and
xor
mov
hlt
and
pop
push
mov
jo
mov
in
lds
or
push
adc
cmc
call
bound
in
pop
rol
les
push
shl
xchg
cmps
into
adc
lea
test
jle
ins
(bad)
(bad)
enter
sbb
jmp
call
sub
sti
add
stos
add
pop
sbb
mov
scas
stc
(bad)
loop
jl
mov
inc
dec
dec
add
aaa
fxch
aaa
xor
sub
dec
not
retf
mov
das
ins
xlat
xchg
arpl
push
pop
imul
push
push
(bad)
mov
jnp
cmps
cmc
xor
rol
ss
adc
adc
stos
and
popa
das
and
ret
inc
(bad)
adc
push
mov
jp
push
imul
popa
and
and
test
retf
or
sbb
dec
jg
retf
addr16
lahf
jo
sbb
in
imul
gs
loope
and
inc
and
(bad)
pop
pushf
enter
ficomp
and
int
out
xchg
add
mov
mov
push
cmc
push
aas
dec
and
aaa
pop
imul
xchg
leave
daa
push
pop
add
dec
stos
jp
add
xchg
fstp
and
xchg
mul
neg
xchg
sbb
ret
ret
loop
jbe
sub
fdivr
jmp
xchg
pop
std
mov
push
add
test
push
dec
push
or
or
mov
xchg
sub
addr16
dec
pop
and
cmps
sbb
inc
push
inc
shr
jae
cmp
retf
sti
xchg
ret
sahf
mov
iret
shl
jae
mov
mov
data16
imul
jge
mov
in
mov
xlat
or
and
jnp
adc
scas
mov
sub
xor
imul
inc
mov
inc
daa
out
(bad)
scas
leave
jmp
rol
sub
cmp
stos
mov
fidivr
into
and
call
xor
scas
test
sahf
cli
push
push
sbb
sub
fs
lods
out
and
sbb
fst
ret
push
js
pop
mov
into
nop
jno
inc
mov
pop
(bad)
into
test
fadd
imul
(bad)
aaa
adc
js
ss
xchg
lahf
call
dec
pop
xor
clc
sahf
push
data16
jg
cmp
(bad)
sbb
or
sbb
popa
add
and
imul
shl
cmps
sahf
add
pop
xchg
mov
out
outs
or
inc
ret
popa
test
add
dec
cmps
cli
adc
mov
loop
cmp
lahf
popf
inc
xchg
das
jbe
cmp
hlt
bnd
(bad)
jle
push
outs
aas
aad
test
stc
aam
ret
setne
push
push
scas
dec
test
das
in
inc
(bad)
fidiv
jnp
add
jb
dec
cmps
jmp
push
out
mov
mov
arpl
nop
mov
push
sub
dec
push
ret
jo
sbb
adc
pop
sub
je
repz
lods
gs
int3
mov
add
mov
mov
push
sub
mov
ss
aad
std
sub
fisttp
inc
mov
out
fistp
ret
sub
add
sbb
pop
sbb
mov
aad
popf
add
data16
bswap
jo
xchg
jno
and
outs
call
xchg
mov
pop
push
retf
sub
xor
adc
(bad)
lds
shl
test
cmp
ins
push
push
pop
push
dec
mov
lock
mov
xor
cli
imul
stc
pop
sub
add
test
data16
sbb
adc
jecxz
and
loope
fdivr
fs
shl
ins
test
jae
push
and
inc
pop
mov
pop
sub
iret
cmp
sbb
mov
ret
jo
xor
inc
dec
mov
jmp
(bad)
mov
fdiv
into
xor
bound
xchg
inc
and
dec
cli
nop
mov
jmp
mov
adc
iret
sbb
lea
lods
xor
in
js
out
xchg
ss
push
push
adc
aas
cmp
scas
(bad)
xor
mov
push
sub
inc
sahf
or
mov
mov
das
inc
xchg
mov
xchg
jecxz
inc
jmp
rcr
dec
add
lods
les
sbb
cmp
cdq
push
inc
xchg
cmp
rcr
pop
pop
inc
fnstsw
and
push
push
loop
push
mov
sbb
fsubr
xor
bound
push
idiv
cmp
dec
stos
mov
dec
stc
cwde
cmp
dec
add
sub
push
adc
mov
sbb
pop
(bad)
lds
dec
outs
inc
cmp
push
lahf
sbb
mov
leave
sub
je
adc
cmp
adc
sub
je
push
fistp
cli
js
es
ret
ror
shr
dec
sub
sar
adc
retf
xor
aam
add
add
cmp
imul
adc
or
cli
push
aam
dec
ficomp
push
fmul
cmp
add
test
shr
ret
aad
stc
jmp
jno
fmul
jg
cli
cmp
test
and
leave
sahf
lahf
jl
push
fstp
xlat
shl
and
sar
sub
(bad)
int3
shl
push
shr
sub
jmp
jbe
jmp
scas
mov
mov
in
ffreep
jmp
pop
loopne
loop
mov
gs
imul
jle
xchg
int
mov
(bad)
popa
arpl
or
data16
popa
pusha
push
daa
fild
adc
inc
pop
add
jg
xor
push
cmp
push
test
jecxz
ds
pop
into
xor
pop
jecxz
mov
xor
stc
mov
fst
lods
scas
ficomp
fnstsw
inc
call
inc
das
cmps
aam
sbb
push
test
cmps
mov
sbb
std
cwde
call
mov
sbb
lock
mov
add
sbb
push
popa
call
pop
ss
add
xchg
pop
data16
fcom
sub
sub
jae
(bad)
or
scas
scas
mov
adc
mov
stos
cmp
inc
mov
mov
ss
sbb
cwde
mov
adc
mov
(bad)
fsub
jno
add
fsub
xor
lods
out
cmp
and
lahf
mov
mov
cmp
test
or
lods
nop
daa
call
adc
loop
punpckldq
push
lods
retf
xchg
fidivr
out
mov
sub
popf
xor
ins
rcl
cmps
cmc
inc
stos
and
into
ret
jo
fiadd
jp
mov
call
and
int
mov
jge
push
mov
arpl
fist
out
std
fcom
sub
jmp
sub
aas
push
ret
sbb
jo
adc
jg
das
fst
inc
and
xchg
push
pushf
ins
ror
mov
jo
cs
sbb
pop
lds
movs
fs
fsubr
psrad
xor
pop
int
push
addr16
or
cmp
mul
pop
std
mov
or
retf
mov
pusha
scas
hlt
popf
nop
jns
clc
ja
or
popa
sub
cdq
cmp
inc
push
mov
scas
movs
imul
adc
sbb
call
adc
adc
ror
clc
clc
cmp
or
push
and
sbb
rcl
retf
pop
push
and
cli
lea
xor
lds
icebp
(bad)
fdivr
dec
movs
push
pop
lods
adc
int
inc
lods
std
pusha
repnz
imul
adc
pop
mov
inc
mov
ja
pop
cmp
pop
leave
inc
into
push
mov
retf
cmp
xor
or
sahf
sbb
lea
popa
ret
sbb
push
cmp
pushf
stos
xchg
fsubr
outs
test
xor
cmp
pop
out
cmp
push
imul
push
fcomp
out
cmp
out
scas
lahf
dec
test
pop
lods
jae
mov
(bad)
xchg
sbb
in
fmul
mov
xor
mov
cmp
shl
pop
dec
push
movs
les
in
js
add
(bad)
loopne
xor
xchg
lods
mov
mov
cdq
dec
fst
ds
sbb
pop
(bad)
adc
pop
ret
mov
push
cmc
and
sub
lock
icebp
mov
in
loop
push
add
xchg
pop
stc
mov
cmp
ret
cmp
leave
pop
std
and
je
mov
cmp
jmp
sahf
sub
jl
sub
and
in
pop
or
or
mov
pop
pop
push
pop
mov
add
push
xchg
cmp
shr
imul
jg
sbb
stos
rol
inc
loopne
cdq
mov
inc
inc
dec
or
adc
ror
xlat
push
push
or
and
js
mov
push
daa
(bad)
ds
push
clc
lahf
jp
adc
dec
push
lds
fiadd
mov
mov
xor
pop
xchg
pop
in
mov
add
les
add
(bad)
js
xchg
jge
sar
retf
cmp
sbb
dec
retf
pushf
sub
cmc
test
adc
mov
xor
adc
push
cmp
(bad)
adc
ja
pop
sub
mov
int3
data16
rcr
popa
dec
sar
dec
std
addr16
pop
sar
push
mov
icebp
test
loop
lea
sub
add
dec
in
pusha
inc
mov
jb
or
jae
add
or
push
or
ret
dec
dec
scas
dec
mov
adc
sbb
jne
xchg
ins
jl
test
adc
test
mov
add
int
(bad)
pop
push
inc
mov
mov
xor
mov
jl
jne
sub
aaa
ins
outs
and
inc
sar
rcr
test
rcr
ins
test
mov
or
cmp
mov
call
mov
es
xchg
jecxz
aam
test
ror
xchg
fnsave
cdq
int3
mov
test
jno
mov
inc
gs
jge
push
push
inc
mov
pop
inc
test
in
out
arpl
and
jg
push
inc
movs
adc
popf
fild
imul
nop
pop
inc
out
mov
mov
adc
dec
sbb
bound
sub
mov
mov
mov
outs
cmp
outs
call
pop
idiv
mov
fs
pop
mov
ror
aad
pop
inc
fidivr
fidivr
mov
mov
enter
stos
dec
ret
sbb
mov
inc
sub
je
jb
jge
frstor
js
inc
enter
add
test
shr
mov
cmc
adc
adc
shl
mov
into
cmp
popf
add
and
stos
cld
and
jae
push
mov
(bad)
aad
fidivr
fdiv
jbe
shr
cmp
sahf
push
out
hlt
mov
shr
jecxz
or
adc
jae
aaa
idiv
cmc
add
cs
call
xor
dec
or
lods
aaa
stos
pusha
lds
retf
hlt
jno
or
mov
mov
aaa
or
aas
loopne
scas
dec
xor
retf
out
jg
fstp
xchg
(bad)
push
or
pop
sub
fxch
inc
repnz
shl
jg
xor
or
inc
(bad)
jp
adc
adc
jb
pop
in
cmp
sbb
sti
or
sub
out
ja
in
dec
pop
pop
sbb
sahf
jmp
retf
sbb
push
addr16
pop
bound
adc
jmp
jae
(bad)
jno
mov
cmc
(bad)
xchg
and
sub
cmp
daa
test
mov
sub
jecxz
inc
les
scas
inc
fnstsw
ss
push
adc
aas
cmp
sub
das
dec
pop
sbb
jge
ds
movs
repz
or
in
mov
ins
fild
sbb
ja
push
xchg
(bad)
stc
mov
frstor
sti
push
fdiv
push
adc
mov
scas
cmps
rcl
push
imul
ja
outs
je
mov
sub
or
fs
push
mov
aas
add
jp
addr16
lods
jle
and
inc
es
rcl
fbld
(bad)
mov
outs
mov
popf
jns
(bad)
sub
lds
jb
pop
stos
aas
mov
movs
xlat
jecxz
mov
test
into
jge
out
fwait
add
push
cmc
(bad)
sahf
popf
push
hlt
repz
adc
iret
int
les
ret
pop
jmp
mov
mov
es
and
adc
add
in
lods
jns
mov
(bad)
lods
sbb
sbb
imul
mov
div
add
div
xor
out
in
pop
lds
icebp
or
out
xchg
sbb
inc
popa
outs
sbb
xchg
inc
or
adc
push
sbb
js
ja
adc
inc
jmp
cmp
xchg
enter
mov
pop
jne
add
aas
dec
pop
or
pop
sbb
jmp
pop
lea
inc
dec
pop
rep
test
aas
ds
scas
cmp
retf
ret
call
cmps
movs
mov
es
ins
mov
ins
test
add
inc
loopne
pop
jmp
mov
fmul
adc
sbb
xor
mov
cs
into
add
xor
aaa
loope
out
lods
repz
inc
and
add
jge
xor
outs
xor
mov
mov
test
(bad)
fdiv
out
in
hlt
dec
add
stos
in
adc
rcl
mov
dec
xchg
mov
shl
pop
cdq
call
add
jne
sub
mov
adc
in
stos
aad
stc
fcomp
mov
xchg
mov
xchg
test
xor
jmp
shl
popf
inc
retf
sub
xchg
(bad)
xchg
movs
bound
adc
inc
fadd
sti
shl
adc
(bad)
mov
or
push
pop
pop
sahf
xor
rol
movs
nop
xlat
xchg
pop
and
pop
hlt
std
add
fcomi
lahf
sbb
cmc
mov
retf
out
les
ss
jno
iret
rcl
mov
fcomp
shr
push
movs
inc
inc
adc
imul
movs
xchg
outs
aad
cs
or
mov
xor
ja
sbb
push
stos
shr
jns
aam
sar
shr
cmp
pusha
loopne
jle
int3
or
xchg
aaa
int3
clc
or
pop
std
ror
dec
cld
ss
pop
or
inc
jp
pop
lds
mov
jnp
sbb
fbstp
push
cwde
popf
das
out
dec
xlat
sub
and
sbb
cs
ficom
mov
xor
inc
mov
cmps
imul
or
mov
xchg
cmp
out
xchg
mov
sbb
in
xchg
test
je
xchg
dec
mov
addr16
lea
jmp
pop
or
jle
mov
jmp
ja
or
mov
ret
int3
imul
xchg
loopne
ins
pop
or
add
sub
sub
jmp
shr
push
fld
popf
movs
imul
xchg
cmp
call
and
inc
stos
fistp
mov
ret
xchg
ss
fisttp
dec
sbb
movs
push
fsincos
and
cld
loope
dec
fimul
aas
mov
daa
pop
xlat
mov
rol
dec
inc
daa
(bad)
jmp
dec
nop
ror
adc
jle
repz
or
adc
cmp
push
or
mov
(bad)
cs
lea
cmp
shl
imul
arpl
jg
jmp
nop
pop
push
xchg
or
out
fcomip
adc
cpuid
cmps
loopne
into
sub
cmp
fild
dec
fstp
(bad)
sub
cs
jmp
pop
cli
and
sar
jbe
sbb
aam
and
add
ret
sar
xchg
xchg
cmps
cwde
fdiv
pop
mov
jp
ja
jb
mov
shr
popa
add
jl
mov
imul
dec
push
ds
inc
stos
int
into
out
out
addr16
sahf
stc
(bad)
or
mov
cmp
add
mov
not
and
repz
xchg
imul
into
(bad)
lods
push
jbe
pop
popa
ins
pop
inc
pop
retf
mov
cdq
mov
loope
pusha
div
pop
shl
mov
xchg
(bad)
ds
xchg
xor
jle
inc
fwait
adc
and
ret
mov
ficomp
xor
add
mov
call
sbb
pop
xchg
pushf
movs
test
pop
dec
mov
push
sub
in
dec
or
mov
sub
and
arpl
add
dec
mov
and
stos
cmp
test
add
cwde
or
movs
push
or
pop
push
sbb
(bad)
fidiv
mov
retf
shl
(bad)
sbb
ja
sbb
sub
pop
dec
add
stc
test
dec
ret
sub
cwde
mov
cld
adc
lods
push
sub
je
mov
dec
inc
fistp
pop
popa
iret
push
lods
lods
xlat
retf
dec
mov
push
and
xchg
push
sbb
jns
jnp
xor
retf
push
jb
push
retf
addr16
test
pop
test
adc
ss
(bad)
dec
cmc
cdq
repz
arpl
fidiv
(bad)
xor
adc
sti
xchg
stc
aaa
icebp
outs
outs
shl
scas
stc
ins
out
lahf
adc
test
lea
and
sub
adc
int
xor
cmp
scas
pop
(bad)
inc
inc
stos
cld
rol
(bad)
ins
jmp
xor
cld
inc
push
ficomp
jmp
adc
jne
cmps
sub
pop
cs
(bad)
fld
popa
bound
repnz
sub
repz
inc
add
lahf
or
inc
out
loope
test
xchg
xchg
dec
out
cmp
imul
sti
ret
ins
scas
(bad)
inc
movs
call
div
cld
retf
adc
cmp
xchg
ds
out
sbb
mov
pusha
xchg
add
xchg
in
adc
adc
mov
or
xlat
popa
cmp
adc
int
jns
(bad)
mov
ins
or
jno
pop
test
lock
sub
out
add
leave
jne
mov
adc
ror
inc
mov
hlt
mov
ds
cmp
loop
xchg
js
adc
pop
mov
jle
adc
inc
leave
xchg
mov
push
pop
sbb
adc
or
pop
lock
imul
mov
pop
stc
dec
stc
push
lock
in
xchg
aas
retf
jae
cli
jl
sub
cmp
mov
adc
lods
test
mov
fwait
mov
les
lock
cmp
ret
sub
out
push
aaa
icebp
or
out
iret
bound
cmps
ja
popa
nop
xchg
push
push
sar
add
(bad)
call
int3
popa
mov
les
cmps
jmp
fs
repnz
dec
sub
xchg
lods
inc
mov
ins
cdq
add
repnz
imul
bound
sar
or
clc
jg
jb
nop
in
outs
repz
(bad)
xchg
pop
sbb
pop
shr
cmp
mov
xchg
and
xor
imul
xor
scas
push
sub
std
mov
scas
aas
daa
push
jo
dec
ja
mov
xor
cmp
cmps
scas
lods
aam
lds
fidivr
push
jae
cmp
mov
or
pop
call
test
out
or
jge
jnp
inc
sbb
stos
mov
xchg
push
push
adc
inc
mov
mov
jecxz
mov
sahf
das
lods
int
and
pop
les
inc
jbe
mov
into
sub
pop
inc
out
enter
lea
dec
sti
adc
mov
push
into
into
cdq
cli
(bad)
call
rcr
mov
in
add
js
fs
clc
or
in
popa
lods
aas
sahf
xor
std
cmps
fdivr
iret
xchg
pop
mov
rcl
push
fisttp
mov
xor
mov
pop
push
inc
and
push
into
push
push
or
xchg
jmp
pop
ja
jmp
test
movs
inc
mov
pop
aaa
jecxz
adc
loop
ficomp
and
cld
retf
sbb
dec
pop
data16
nop
mul
je
rol
iret
and
in
fsubr
adc
retf
push
jp
repz
pop
sbb
test
arpl
and
sbb
fisub
cmc
inc
adc
mov
pushf
mov
popa
daa
adc
xor
dec
xchg
repz
and
dec
inc
lods
mov
rol
mov
test
cmp
ins
clc
ret
and
sbb
adc
jecxz
aas
push
in
jmp
pop
lock
js
repnz
jne
fst
aad
repnz
cs
xchg
jmp
mov
aam
sub
dec
in
xchg
das
test
sbb
call
out
push
sub
ss
aad
js
add
jg
or
in
inc
jle
xlat
out
dec
jge
push
inc
repnz
cli
inc
push
fisttp
push
movs
add
stc
xor
je
fs
cmp
daa
loope
pop
mov
pop
rcl
sar
xchg
pop
div
inc
outs
stos
mov
je
cmc
ja
(bad)
clc
mov
cmp
mov
cdq
sub
test
bnd
nop
cwde
je
aaa
gs
xchg
xor
ins
push
enter
dec
rcl
mov
add
xchg
daa
cmps
cs
(bad)
rcl
xchg
sbb
fdivr
or
icebp
push
push
retf
jnp
add
and
fstp
in
(bad)
das
xchg
neg
add
xchg
sbb
out
movs
mov
mov
sub
mov
dec
cmp
mov
int
mov
pop
mov
cmp
imul
inc
pop
std
pavgw
idiv
inc
test
arpl
adc
sbb
pop
fs
mov
mov
test
mov
into
fadd
mov
movs
sub
popa
sbb
jae
add
shr
mov
fstp
fdivr
adc
call
jne
pop
mov
jmp
xchg
(bad)
in
sbb
pushf
aam
adc
push
cmp
push
mov
mov
cmps
cwde
cmp
sbb
mov
mov
inc
mov
(bad)
and
push
sub
push
xor
push
lods
mov
movs
outs
mov
retf
add
mov
les
and
add
adc
adc
dec
pusha
add
out
sbb
imul
mov
xor
jne
imul
or
xchg
add
retf
cmps
js
ins
jae
jmp
sbb
or
hlt
xchg
jmp
retf
xchg
sub
mov
imul
psllq
cmp
dec
add
pop
ins
hlt
and
inc
stos
test
ss
and
loop
mov
or
and
(bad)
stc
fist
(bad)
lods
stc
stos
mov
sub
fwait
mov
loope
and
and
cs
scas
gs
add
push
cmp
add
add
je
(bad)
das
xchg
jns
jmp
iret
mov
js
pop
cdq
jnp
test
pop
sub
fnstenv
arpl
add
add
scas
arpl
jge
push
and
adc
fcmovb
or
inc
cwde
or
cmp
or
adc
jnp
arpl
out
push
leave
pushf
movs
es
imul
push
daa
adc
out
cdq
rol
cmps
in
int3
iret
mov
mov
push
xchg
mov
cmp
or
mov
mul
outs
fistp
scas
ds
ss
repz
and
xor
inc
lds
sub
fcmovu
cmp
add
test
aad
rcr
stos
inc
cs
and
sti
aas
sti
loopne
in
cmp
retf
jbe
pop
cmp
adc
mov
movs
test
stc
jne
int3
and
int3
repnz
mov
in
gs
push
and
repnz
into
add
inc
ins
lahf
test
lods
repnz
xchg
push
mov
lea
pushf
jae
js
repz
dec
inc
int3
aam
or
jl
retf
fistp
lea
imul
sbb
mov
jnp
xchg
ins
ins
inc
sub
int3
hlt
nop
jge
or
imul
stos
dec
mov
xor
or
push
ds
js
and
test
cmp
aad
push
das
push
sub
fist
sbb
push
shl
sti
(bad)
adc
pop
xor
ja
and
jae
pop
and
(bad)
cmps
aad
pop
inc
int3
add
pusha
sbb
mov
iret
movs
mov
pop
xchg
out
add
pushf
ins
push
jge
and
push
mov
xor
pushf
jae
std
stos
(bad)
nop
test
jl
shr
ins
push
(bad)
std
mov
mov
test
scas
repnz
call
in
ins
jge
loope
sahf
mov
adc
add
(bad)
nop
stc
pop
push
or
lahf
pop
sbb
sar
pop
jmp
in
(bad)
sar
add
push
push
aas
push
test
fild
sub
(bad)
call
lahf
or
sbb
mov
ja
mov
loopne
add
daa
push
out
xchg
mov
push
dec
jnp
fwait
inc
pop
fsubr
xchg
sbb
mov
xor
int3
lar
adc
adc
jb
aaa
mov
sbb
inc
jno
lods
scas
fs
add
enter
call
push
(bad)
fcomp
add
mov
jmp
into
in
xchg
xchg
mov
cmps
je
jl
xlat
rol
inc
xchg
sbb
sub
jbe
fldenv
mov
adc
fadd
cmps
mov
loop
jns
push
nop
and
xchg
cmps
adc
cmp
outs
cld
out
sbb
sbb
push
(bad)
enter
loope
cmp
dec
fcmovnu
pop
cmp
ficomp
mov
js
sbb
or
dec
cmp
xchg
sar
xchg
lahf
inc
add
mov
dec
fsub
lods
mov
out
cmp
mov
cli
std
aad
xor
mov
dec
mov
push
shr
(bad)
xor
mov
mov
xchg
mov
push
sbb
inc
dec
aas
in
popf
fild
mov
add
adc
cmp
or
pop
bnd
mov
sti
pop
inc
mul
or
jg
cld
aam
mov
mov
out
mov
jecxz
jge
pop
ror
out
cs
pop
and
out
mov
push
mov
mov
nop
mov
jg
xor
pop
push
inc
xchg
popf
mov
and
mov
jmp
int3
adc
adc
mov
and
pushaw
retf
jge
sub
dec
(bad)
imul
mov
jp
ins
pop
test
add
inc
out
inc
and
lods
call
adc
cmc
xchg
vfrczss
pop
mov
mov
imul
call
inc
scas
jno
out
ficomp
xchg
(bad)
mov
mov
nop
cdq
push
test
sbb
test
test
jmp
jb
scas
sub
xchg
sbb
inc
cmpxchg
mov
mov
call
in
inc
in
jmp
sbb
fist
jmp
fs
aad
add
and
cmp
sub
leave
mov
movs
cwde
mov
shl
outs
stos
jle
cwde
xor
pop
dec
and
mov
mov
and
pop
mov
jl
cmps
ror
and
sub
mov
nop
mov
fcomp
movs
loop
dec
pop
inc
push
and
icebp
sbb
mov
int
imul
sbb
mov
mov
add
les
or
cmps
adc
adc
retf
lods
xor
jge
call
test
sbb
lds
test
imul
and
add
jno
int3
popa
in
loop
ins
pop
(bad)
in
sbb
movs
or
adc
mov
xchg
lds
in
ret
mov
pop
es
pushf
xor
mov
cld
aas
mov
fld
sbb
mov
jmp
xchg
mov
sbb
push
mov
jmp
inc
mov
(bad)
mov
jbe
je
and
inc
xor
dec
sar
pop
aad
aad
mov
jg
enter
vmwrite
mov
jg
jo
and
jge
scas
mov
into
test
jb
or
retf
inc
(bad)
(bad)
fs
out
jg
lods
sub
sar
and
push
pop
(bad)
or
pop
pusha
lea
jl
push
fisttp
outs
mov
jnp
cmp
shl
jmp
cmps
jmp
ror
outs
mov
clc
fstp
and
outs
sahf
jne
aam
dec
addr16
dec
inc
inc
pop
shl
ror
bound
xor
aam
sbb
xchg
jge
(bad)
and
test
add
js
fisubr
xor
inc
xchg
or
xor
call
xchg
fxch
cmp
xchg
test
jecxz
movs
add
rol
hlt
mov
adc
mov
or
(bad)
push
out
out
push
jle
adc
popf
js
shl
jbe
in
mov
pop
dec
or
pop
jecxz
and
stos
cs
pop
ins
pop
push
pusha
lods
pop
dec
cmp
stc
test
jmp
mov
in
adc
add
dec
cs
(bad)
sub
(bad)
hlt
test
ins
call
cmps
mov
inc
jmp
iret
jne
xor
mov
xor
inc
inc
dec
(bad)
lock
xchg
mov
inc
sub
jle
js
fstp
gs
mov
fdivr
push
inc
and
xchg
or
pop
jecxz
clc
jp
inc
push
shl
cmps
scas
mov
pop
jae
fldl2t
sub
rol
jl
in
inc
pop
stos
rcr
xor
stos
dec
adc
ins
pop
dec
imul
pop
pushf
clc
sub
mov
dec
jo
xchg
and
sub
in
(bad)
sti
pmovmskb
xor
xchg
stos
outs
and
push
sub
dec
xchg
jbe
cs
pop
sbb
xchg
jge
(bad)
and
repz
mov
pop
add
jmp
imul
dec
mov
inc
xor
add
mov
xor
into
mov
mov
das
daa
mov
jp
adc
pop
lea
cmp
addr16
sub
jmp
mov
call
ds
fs
inc
xchg
(bad)
aad
cdq
or
popa
fsubr
std
aad
push
xchg
and
adc
test
in
aad
lods
out
push
xor
jb
js
outs
fcom
mov
xadd
jl
mov
outs
mov
stos
push
ins
neg
inc
sub
pop
test
inc
in
xor
push
add
enter
adc
imul
adc
pop
sub
lds
xor
lods
push
test
inc
imul
cmp
push
loop
and
mov
xlat
dec
or
push
out
sub
mul
inc
sub
push
(bad)
ret
pusha
cwde
cwde
sbb
fwait
or
xchg
inc
and
jl
test
mov
aam
sub
jge
sar
out
push
clc
sar
stc
repnz
jp
lods
mov
mov
cld
shr
and
fcmovnb
in
das
out
shl
shr
pop
jg
adc
fadd
jo
mov
out
ret
jg
xchg
push
scas
add
mov
sbb
push
add
jno
cs
das
xchg
sahf
push
mov
loope
jle
sbb
push
call
mov
test
test
xor
push
xchg
inc
dec
sub
vpaddusb
add
addr16
(bad)
adc
scas
das
cdq
jo
adc
loope
cwde
add
in
sbb
jge
mov
pop
std
cmp
cmp
push
pop
je
dec
ins
inc
mov
int
lds
data16
ret
jbe
ss
lock
cmp
fdivr
je
mov
jb
data16
jge
jns
xlat
popf
xchg
pop
cwde
xor
dec
movs
or
dec
out
mov
sbb
(bad)
ss
out
jns
shr
mov
cdq
dec
jg
shr
push
mov
push
inc
nop
mov
ret
adc
(bad)
(bad)
retf
dec
xor
and
xor
sub
(bad)
repnz
cmp
jo
mov
pop
add
add
xor
jl
cli
fldenv
mov
frstor
ss
pop
jbe
cmc
into
into
jg
cmps
inc
mov
mov
push
lock
outs
cmp
pop
gs
(bad)
mov
sub
(bad)
div
stos
mov
cmp
(bad)
or
jmp
ret
inc
loop
xor
inc
mov
mov
adc
pop
adc
pop
xor
fcomip
mov
pop
lock
jmp
aaa
aaa
ss
ficom
sbb
jle
sub
ins
cmp
sbb
and
pop
mov
mov
test
inc
pop
movs
or
inc
sub
sub
sbb
dec
call
test
mov
pusha
call
arpl
jae
xchg
fs
popf
outs
jb
test
aaa
add
lods
jae
or
(bad)
sub
sbb
ret
dec
cld
add
loope
mov
and
cmps
aad
(bad)
out
jmp
jle
in
xchg
lods
lea
add
retf
outs
ret
cmps
mov
cwde
xchg
not
fild
in
and
mov
out
aad
ins
xor
cdq
jl
sbb
sbb
shr
pop
pop
mov
cmps
mov
xlat
cwde
sar
scas
dec
dec
test
mov
push
push
nop
push
cmp
pop
dec
inc
sub
add
cs
xchg
cmp
inc
dec
push
cmp
aad
jecxz
mov
pop
xor
mov
repnz
loop
mov
push
test
xchg
or
jbe
adc
pop
push
push
iret
das
sub
xor
clc
add
and
mov
dec
in
mov
enter
popa
adc
ss
stos
cmp
inc
pop
xchg
adc
add
push
(bad)
xchg
mov
mov
sbb
pop
mov
push
sub
shl
inc
jae
add
pop
sbb
mov
idiv
rol
jo
sbb
dec
adc
call
add
mov
fst
sub
inc
add
jbe
sbb
jno
pushf
inc
movs
in
dec
mov
call
sub
jo
jb
fs
or
push
pop
fstp
push
in
jmp
dec
aam
xor
and
dec
std
pop
and
jge
pop
lahf
das
call
pop
xchg
dec
cld
mov
mov
sbb
fild
push
repnz
aas
data16
test
fcom
push
sbb
mov
or
adc
mov
rol
retf
and
sub
and
cmps
scas
sbb
out
cmp
fiadd
add
(bad)
cli
xor
cmps
adc
pop
not
ja
adc
scas
xor
sti
stos
dec
fcom
and
outs
push
outs
lods
pop
fadd
push
fist
push
pop
in
xor
and
sub
mov
fldpi
daa
pop
adc
(bad)
push
les
pop
pusha
ret
cwde
cmp
rcl
jmp
iret
xor
adc
or
pop
iret
addr16
jl
lds
xchg
jecxz
cs
or
scas
clc
cmp
lods
outs
dec
scas
mov
in
retf
jge
adc
pop
jb
sbb
mov
(bad)
inc
test
sti
jle
mov
loop
rcr
lods
sar
xchg
inc
and
lock
mov
ror
pop
fild
push
arpl
(bad)
fwait
or
fisubr
add
pop
or
or
add
aad
test
lahf
sub
fidivr
cs
mov
repz
jae
xor
shl
inc
je
push
jl
add
popa
call
jne
xchg
shl
inc
fiadd
push
mov
cwde
add
jmp
mov
dec
clc
inc
rcl
push
jo
retf
and
add
or
(bad)
sbb
adc
push
jb
push
ret
lods
cmp
push
enter
movs
cmps
fisttp
mov
int3
add
stc
enter
dec
gs
pop
cmp
sbb
push
sub
xor
pop
jge
cdq
lds
ja
add
mov
loop
cmp
adc
dec
cmp
std
inc
and
xor
loop
enter
dec
cdq
push
xor
call
xor
enter
jno
in
jne
ror
push
(bad)
jbe
test
imul
es
and
lea
pop
aam
cmps
jbe
scas
xor
and
jbe
mov
cli
or
xchg
inc
jmp
fst
pop
xor
and
enter
dec
(bad)
dec
ret
loope
inc
or
daa
add
and
cmp
fnsave
pop
out
pop
into
or
pop
mov
mov
jecxz
and
loope
inc
mov
xchg
ret
scas
pop
retf
push
and
and
cs
cmps
jmp
bound
cld
mov
cwde
xchg
retf
out
shr
add
cmp
cmp
pushf
pop
inc
push
mov
(bad)
mov
cdq
jo
and
ja
adc
xchg
pop
inc
div
fs
call
nop
xchg
stc
push
push
dec
neg
dec
mov
test
add
push
jl
adc
jmp
jbe
xchg
(bad)
ret
mov
cmc
inc
jmp
mov
jl
call
jmp
sub
into
call
pop
dec
fistp
fldcw
xchg
cld
les
and
mov
cmps
and
pop
enter
mov
int3
add
cs
sbb
adc
add
enter
cli
mov
mov
mov
pusha
int3
push
jecxz
inc
xor
stc
and
scas
pop
mov
push
mov
sub
or
shl
popf
xlat
lea
(bad)
mul
in
or
lock
stc
ins
or
dec
movs
fnstsw
call
xchg
out
mov
xlat
jp
mov
xor
push
pop
dec
sbb
int
push
adc
cmp
rcl
mov
rcl
inc
std
outs
jecxz
ins
push
ficom
imul
dec
cli
lds
int3
jmp
jecxz
push
mov
jo
dec
xor
loop
mov
ja
mov
je
es
icebp
add
neg
jae
jge
and
rep
inc
pop
dec
mov
add
pushf
pop
or
mov
and
ins
push
adc
xor
mov
jl
cld
std
das
scas
mov
sub
add
push
push
mov
xchg
repnz
sub
xchg
adc
dec
retf
push
mov
fbstp
mov
(bad)
call
fld
data16
inc
pop
add
repz
cs
mov
jle
dec
push
dec
mov
das
or
jmp
stos
mov
leave
inc
xor
or
push
cmp
xchg
loope
jns
pop
bound
mov
and
pop
sbb
mov
movs
mov
mov
mov
ja
cmps
mov
in
cld
sbb
ja
pop
sub
jecxz
sub
cmp
mov
lds
xor
push
lods
mov
xchg
sbb
mov
imul
cmps
ret
inc
jo
out
cmc
sbb
dec
dec
or
inc
sub
add
and
push
dec
gs
jbe
xor
rcl
push
xchg
or
jg
xor
inc
sar
sbb
cs
push
test
push
std
(bad)
push
xor
jl
dec
mov
test
daa
mov
sbb
(bad)
jmp
out
mov
push
jmp
in
xchg
ss
pop
cmp
dec
cmc
cmps
cmps
sub
lahf
stc
or
in
je
int
ins
leave
xlat
mov
push
ins
mov
aad
inc
sub
repz
leave
in
(bad)
aad
daa
mov
push
rcr
lds
mov
leave
fbstp
mov
xchg
fsubp
retf
inc
std
push
in
xor
adc
pop
pop
xor
daa
inc
pop
das
mov
push
cli
jnp
cmps
push
div
fcomp
stc
xchg
push
fmul
mov
test
cmp
fcomip
mov
adc
sbb
(bad)
clc
xchg
sub
sub
mov
mov
xchg
ins
push
outs
test
(bad)
sti
push
in
rcr
or
ret
shl
mov
lahf
retf
js
retf
pop
leave
test
dec
lahf
mov
jnp
or
and
imul
clc
aam
retf
mov
mov
(bad)
sbb
mov
repnz
aaa
int3
sub
lods
cli
out
nop
xchg
add
fldenv
mov
sbb
jge
pop
idiv
es
add
out
or
inc
dec
or
mov
clc
pop
sub
jns
lock
adc
or
cwde
mov
int3
mov
outs
inc
and
mov
push
(bad)
push
xchg
in
fcom
mov
push
sbb
fcom
popa
and
cmp
inc
inc
sub
cs
popf
mov
xor
xor
rol
imul
in
cmp
jo
data16
xchg
pop
inc
pop
fist
retf
sbb
test
sbb
mov
test
mov
stos
scas
dec
jno
leave
sub
dec
adc
inc
mov
movs
push
sub
scas
jmp
push
dec
daa
(bad)
jge
hlt
repz
jns
frstor
(bad)
push
mov
pop
idiv
sub
ret
xor
and
mov
out
popa
fwait
dec
and
out
clts
adc
adc
dec
xor
fwait
inc
loop
jnp
mov
cmp
add
jne
and
ret
movs
or
sbb
mov
jg
ins
out
push
mov
and
dec
inc
lods
fiadd
cli
or
lds
inc
test
call
cmp
enter
inc
scas
popf
aam
push
popf
add
mov
ja
lods
in
sbb
shr
outs
mov
fnstenv
push
and
jp
mov
imul
fxch
cs
test
mov
mov
dec
pop
ja
pusha
jbe
mov
test
sub
cli
aas
(bad)
cmp
ss
adc
adc
xor
and
xchg
mov
cmc
push
xchg
and
pop
pop
imul
mov
xchg
pop
dec
inc
sbb
pop
(bad)
rcl
or
lock
sbb
dec
into
dec
loope
pop
jecxz
push
je
(bad)
inc
div
mov
lods
xor
push
shr
retf
xchg
inc
in
or
push
dec
stos
jle
leave
or
(bad)
and
push
cmps
pop
push
loopne
in
or
sbb
les
xor
sub
adc
push
mov
and
mov
out
jb
lods
and
xchg
in
and
jne
pop
outs
fadd
or
inc
inc
jbe
scas
je
loope
stos
aas
cmp
cwde
in
call
fwait
sahf
add
inc
cmp
push
push
jb
bound
call
ins
outs
jl
mov
neg
sub
fisub
push
sbb
test
shr
pusha
or
xchg
imul
out
push
into
in
sbb
ret
or
bound
xchg
dec
cmps
fistp
mov
std
cwde
mov
arpl
dec
jae
sub
adc
and
jmp
jl
inc
rcl
jmp
aad
jge
mov
mov
addr16
hlt
xor
inc
daa
sub
inc
xor
sahf
dec
lods
jb
inc
fild
aad
mov
push
in
add
inc
inc
test
mov
xchg
cmp
inc
jge
ret
xor
xchg
test
xlat
add
cmp
sub
inc
nop
mov
mov
and
hlt
rol
push
cwde
stc
xchg
pop
xor
cwde
xchg
adc
(bad)
and
lock
pushf
imul
arpl
adc
cmp
push
dec
dec
daa
and
out
jne
int3
cmps
mov
sub
ins
icebp
loope
adc
add
pop
sbb
sbb
cmp
xchg
push
lods
push
xchg
inc
jb
data16
loope
xchg
cmps
not
jmp
mov
inc
rcpps
das
and
out
cmp
sbb
inc
jnp
and
in
aas
xor
ss
sbb
and
pop
loopne
mov
retf
jmp
mov
jg
sahf
cmp
stos
mov
pop
and
aas
sar
loop
jg
loope
add
ja
mov
dec
popf
in
adc
out
jecxz
push
cmp
mov
clc
xchg
or
out
call
movs
scas
and
out
xchg
adc
js
jmp
pop
sbb
cld
outs
jmp
stos
inc
into
sub
adc
and
gs
sub
add
sar
mov
cmc
jle
imul
repnz
test
jno
xchg
mov
sub
lock
and
repz
inc
jnp
adc
or
shr
fdiv
loop
xchg
in
jne
pop
push
inc
ret
(bad)
icebp
(bad)
dec
sub
push
fdiv
mov
sbb
pushf
popa
push
push
in
jne
das
mov
enter
sub
cmp
cmps
cld
and
popf
add
dec
hlt
jo
xchg
leave
ds
push
inc
ret
shr
dec
ret
out
in
pop
push
xchg
stc
sbb
js
pop
outs
or
stos
rcl
fsub
stos
stos
or
push
leave
js
or
mov
xchg
jne
enter
fld
aas
and
mov
enter
arpl
add
cmps
fcomp
and
push
cli
js
(bad)
mov
daa
aad
lock
dec
inc
pop
dec
xchg
(bad)
cmp
rcr
nop
adc
out
sub
dec
push
inc
mov
(bad)
movs
sahf
sbb
hlt
pushf
xchg
retf
push
outs
mov
loope
and
push
add
les
mov
or
xlat
mov
pop
stc
push
scas
add
icebp
ret
or
pop
xchg
call
jb
mov
sbb
xchg
dec
xor
inc
rol
add
ja
sub
add
icebp
adc
in
test
lods
adc
cdq
xchg
addr16
call
int
aaa
adc
shl
lods
push
cmc
mov
cmp
in
cmp
push
in
pop
or
out
cdq
bound
aaa
ret
ret
ins
cmp
test
xor
outs
xchg
movs
imul
stos
ja
arpl
enter
shr
into
in
in
sahf
repnz
ins
out
sahf
gs
repz
adc
mov
cli
and
call
jle
enter
sbb
std
adc
jnp
pop
cmp
inc
icebp
xchg
or
jae
pop
push
xor
outs
shl
push
mov
mov
hlt
push
inc
icebp
mov
cmp
call
stos
jecxz
push
sub
ins
push
bound
pusha
xor
sbb
cs
dec
in
int
dec
outs
cmp
jmp
pop
xor
(bad)
cli
push
push
(bad)
(bad)
jp
mov
mov
cs
popa
mov
cmp
ror
xchg
sbb
ss
(bad)
jmp
or
neg
sbb
inc
add
pop
mov
dec
jns
xchg
xchg
es
sbb
in
out
stos
push
push
stos
fadd
es
call
(bad)
fwait
imul
cmp
or
outs
ja
mov
loop
mov
ja
ins
add
push
cwde
cmp
fucomip
movs
in
pop
adc
and
jle
dec
pushf
(bad)
fadd
jmp
mov
ret
out
add
dec
add
or
push
loope
retf
fldcw
nop
(bad)
mov
mov
cmp
jg
adc
fmul
xchg
mov
dec
imul
mov
les
pop
(bad)
mov
sti
jns
lds
fwait
rcr
mov
or
jmp
call
cmc
hlt
outs
arpl
fldenv
sbb
call
jp
adc
mov
ss
and
ins
lahf
fld
nop
sbb
cwde
mov
imul
jmp
into
jmp
push
and
sub
and
popa
std
mov
imul
int3
or
int
jge
mov
in
jmp
pusha
sbb
cdq
(bad)
shr
mov
adc
cmp
sub
and
adc
or
int
pop
mov
jge
sub
inc
cmp
mov
sub
clc
ret
out
lods
sbb
jnp
aad
std
jnp
aad
xchg
pop
or
jp
enter
mov
mov
(bad)
repnz
loope
inc
(bad)
test
arpl
jl
xor
mov
mov
outs
mov
mov
dec
movs
adc
push
push
mov
jb
fmul
mov
in
and
loopne
rol
push
ss
shl
jb
das
mov
xor
add
cmp
or
jmp
mov
shl
std
stc
int3
dec
xlat
fidivr
mov
hlt
ja
dec
mov
mov
repnz
add
add
out
out
loopne
mov
dec
stc
and
pop
mov
les
mov
cwde
lock
xor
mov
mov
sbb
mov
int
mov
imul
pop
mov
mov
adc
cmp
pusha
hlt
inc
mov
das
(bad)
mov
sub
out
ret
jmp
mov
mov
rcr
and
test
mov
addr16
ss
pop
std
dec
idiv
sbb
pop
push
pop
in
imul
sbb
cmc
ins
jge
xor
jge
mov
pop
ds
xchg
mov
xor
mov
cmp
cdq
loop
and
clc
into
push
or
mov
in
adc
cmp
or
adc
cwde
fmul
jo
retf
seta
mov
fidiv
ja
or
test
inc
xor
pop
jns
int3
loopne
mov
lahf
lock
lock
arpl
push
inc
jge
sbb
or
push
cs
mov
repz
scas
fstp
mov
rcr
dec
add
and
mov
int
jb
xchg
loop
adc
push
daa
(bad)
out
in
adc
test
add
das
sub
ins
loopne
(bad)
aad
mov
call
aad
jle
leave
jp
xor
push
sbb
popf
sbb
pop
adc
stos
push
sub
(bad)
int3
xchg
jecxz
sub
inc
shr
imul
retf
fidivr
fidiv
(bad)
js
icebp
inc
(bad)
loopne
or
adc
xchg
jno
xor
pop
xchg
add
or
pop
rcl
push
retf
pop
in
dec
jecxz
mov
add
xor
xor
and
leave
sbb
sbb
xlat
aaa
xor
cld
test
mov
ds
push
adc
cdq
std
inc
scas
cmp
adc
add
retf
xchg
fxtract
loopne
xchg
sbb
stos
scas
loope
(bad)
data16
inc
jle
jmp
fidiv
sub
jns
adc
cmp
data16
leave
mov
and
sahf
xor
cmc
jl
xlat
sub
mov
das
jb
std
push
fs
test
inc
int3
mov
jo
pop
dec
pop
add
add
enter
pop
dec
cmp
lods
xlat
cmp
cwde
(bad)
out
test
mov
leave
fcomip
sub
movs
fwait
loop
cmp
mov
pop
repz
int3
ins
inc
jge
aas
and
push
rol
jmp
xchg
xchg
add
out
test
jge
fadd
lahf
imul
push
sbb
cmps
cmp
lock
pop
in
imul
mov
nop
jo
daa
dec
je
mov
mov
push
push
mov
push
hlt
jb
xor
mov
or
mov
adc
adc
lods
pop
inc
mov
jnp
aas
mov
pop
cli
fistp
neg
(bad)
jp
dec
pop
sbb
sbb
call
push
outs
xlat
or
retf
push
add
fst
inc
inc
push
out
stos
jmp
dec
in
bound
iretw
gs
shr
and
and
fwait
lock
daa
shl
imul
movs
jp
icebp
xchg
popw
xlat
retf
sti
xchg
sahf
mov
cmp
dec
adc
sub
imul
mov
jg
mov
ds
fucomi
jmp
cs
mov
out
ret
call
or
xor
ror
cmps
xchg
push
movs
popf
mov
and
or
loopne
adc
div
push
rcl
xor
push
jmp
push
rcr
jns
pop
sar
and
cmp
xor
outs
jo
nop
jecxz
imul
jo
pushf
adc
pop
imul
sbb
mov
mov
fs
jg
jl
inc
por
pop
outs
sub
(bad)
fs
sar
aas
or
inc
arpl
je
dec
push
int3
jl
shl
fcom
call
nop
sbb
mov
jl
cdq
in
jns
aam
jp
mov
sar
cmps
cmps
xor
fwait
and
adc
rcl
sbb
lds
or
mov
pushf
mov
pop
in
lock
ror
mov
popf
rcl
add
(bad)
dec
bound
enter
bound
out
cmc
jg
cmp
movs
push
int3
cwde
xor
aas
stc
lods
hlt
push
push
bound
cmp
add
mov
push
daa
pop
mov
cdq
adc
retf
add
int
push
popa
xchg
(bad)
xchg
addr16
dec
lods
(bad)
jo
fidiv
int
mov
cmp
or
cwde
in
outs
adc
scas
(bad)
cdq
retf
and
mov
inc
sbb
inc
sahf
or
or
cmp
je
(bad)
test
adc
inc
add
daa
daa
iret
sub
je
jae
sub
fucom
shr
jnp
add
pop
cld
sbb
cdq
lea
pop
sbb
lahf
retf
cmp
lock
cmp
sbb
xchg
or
inc
dec
xchg
push
mov
sbb
push
and
mov
call
fidivr
cmp
adc
jle
ficomp
jbe
fs
sbb
scas
or
and
xchg
xlat
sbb
mov
lock
mov
mov
retf
cmp
and
(bad)
in
pop
loope
or
mov
rcr
sub
mov
pop
mov
pop
push
inc
ror
test
imul
pop
pop
popa
adc
iret
pusha
cmp
sub
adc
ficomp
pop
lea
mov
sub
xor
(bad)
mov
ja
in
in
mov
(bad)
fs
mov
(bad)
es
add
xchg
push
xor
sahf
jge
mov
sbb
aam
test
movs
lds
in
dec
stc
mov
pop
add
inc
mov
inc
stos
fistp
push
or
or
and
xlat
dec
scas
push
stc
gs
test
enter
push
loope
neg
jge
pop
push
mov
mov
adc
jp
ror
adc
hlt
gs
jmp
movs
inc
inc
jle
sub
jg
dec
pushf
dec
sub
sbb
(bad)
aam
mov
loop
fs
mov
push
and
daa
cmp
fcmovnb
fldenv
cmc
pusha
ret
mov
mov
call
pop
lods
pop
xchg
push
test
pop
sub
mov
mov
cmp
int
sbb
mov
fidiv
and
add
mov
sbb
fwait
loop
jb
pusha
add
adc
and
push
adc
pop
call
ds
dec
fbld
sbb
mov
(bad)
lock
lea
cmp
outs
add
or
jl
out
das
retf
jecxz
cdq
jl
push
adc
xchg
xor
dec
popa
cmp
sub
int3
mov
pop
mov
mov
dec
sbb
pushf
jl
(bad)
cwde
mov
cwde
push
jns
sbb
inc
inc
inc
or
and
(bad)
in
or
cwde
mov
into
ins
cmp
add
adc
jnp
sub
js
sar
scas
lods
into
inc
jmp
stos
add
ss
outs
cld
mov
adc
rol
xor
inc
cmp
push
mov
aam
fldcw
and
jmp
mov
sahf
push
sub
mov
out
mov
pop
dec
mov
dec
fldenv
cmc
adc
add
xchg
cmp
int3
data16
or
lea
ficomp
sub
and
pop
clc
mov
movs
sti
dec
out
rcr
inc
push
icebp
jp
ins
loopne
loopne
arpl
stos
test
add
cmc
adc
(bad)
and
or
push
or
(bad)
sbb
mov
stos
sar
lods
cmc
pop
push
aad
fisub
mov
mov
adc
jb
outs
nop
xor
int
ss
adc
mov
push
dec
lock
xchg
jge
add
add
(bad)
and
sbb
inc
push
xlat
mov
push
clc
push
cmps
cld
movs
add
jns
sub
fwait
pop
push
rcl
fld
and
sti
shl
push
push
cmps
mov
sub
into
mov
imul
pop
and
or
ror
hlt
xchg
xor
xor
dec
or
dec
xor
das
sub
mov
leave
cmp
shr
pop
(bad)
pop
aam
(bad)
das
sub
push
fs
fsubr
(bad)
mov
fdiv
test
jne
je
cld
xchg
test
das
pusha
cmp
out
fucomp
dec
mov
aas
xor
pop
mov
test
or
jl
int3
sub
push
pop
dec
movs
mov
sahf
pop
mov
(bad)
adc
add
xor
outs
and
cmp
pop
popa
or
sbb
clc
jno
imul
pop
test
jle
enter
mov
cwde
dec
dec
cs
xchg
jbe
ins
ss
pop
add
sub
mov
sub
test
adc
pop
dec
nop
cmp
mov
jmp
(bad)
xor
jb
mov
fwait
sbb
or
les
mov
call
xlat
cmp
daa
xor
clc
mov
lahf
not
mov
(bad)
push
hlt
sub
inc
mov
push
clc
cmp
icebp
aad
jne
sbb
pop
mov
adc
pop
sub
rol
call
pusha
es
imul
adc
mov
pop
sub
shl
sti
mov
push
cmp
pop
(bad)
addr16
ss
(bad)
clc
sbb
bound
push
mov
adc
add
mov
inc
mov
mov
xor
pop
out
jl
pop
pop
xchg
or
adc
gs
ss
inc
sub
in
cli
imul
leave
les
cdq
adc
adc
imul
ds
dec
mov
(bad)
pop
mov
pop
adc
adc
dec
retf
sub
adc
shl
sub
scas
or
cmps
movs
std
add
ins
cmp
add
and
mov
fxch
jp
addr16
pop
pop
adc
mov
test
into
jl
(bad)
in
push
sti
xchg
xchg
add
pushf
pop
arpl
cmps
std
les
js
imul
mov
jl
arpl
mov
out
mov
push
jmp
jmp
cmc
mov
add
dec
fsubr
lods
add
or
int3
mov
lods
cmp
sub
jg
imul
adc
add
cld
or
push
cmc
mov
repnz
loope
inc
push
aaa
mov
ds
cmp
mov
jmp
cmp
sahf
and
adc
mov
rol
std
xlat
add
nop
cs
push
imul
pop
cmp
cmp
xchg
inc
jmp
addr16
pop
sub
sbb
or
fisub
push
fs
mov
push
outs
cmps
mov
inc
repz
mov
fs
test
mov
push
mov
push
ja
gs
shl
icebp
mov
adc
xor
in
and
pop
jne
pop
add
cli
or
cmp
xor
(bad)
mov
shr
mov
dec
push
gs
(bad)
lock
cli
jae
in
(bad)
pop
xor
imul
and
push
dec
mov
lods
cmp
ret
iret
push
bound
enter
xor
jmp
xchg
rol
sbb
call
mov
inc
lahf
jmp
(bad)
cs
call
or
cmp
out
pusha
aad
push
std
jnp
gs
cdq
out
mov
test
push
push
fcom
jmp
sbb
cmps
inc
jp
ret
mov
or
xchg
stos
jle
adc
int3
xlat
xrelease
pop
out
mov
jle
sub
cmc
popa
ja
mov
imul
test
push
pop
cmp
sbb
retf
es
pop
arpl
sbb
add
inc
sub
(bad)
cld
jbe
add
push
xchg
adc
pop
or
add
xor
rcl
jecxz
push
adc
push
pop
je
push
jnp
fadd
movs
mov
xor
sbb
imul
add
sahf
mov
dec
mov
leave
aad
cmc
add
xchg
xor
ins
test
rol
fimul
into
mov
mov
mov
daa
dec
mov
inc
or
jg
pushf
aam
frstor
cwde
not
scas
test
(bad)
das
xchg
sub
imul
xchg
int
retf
add
mov
ret
inc
cmp
iret
int3
pop
mov
das
jge
jp
push
loopne
xor
outs
fistp
pop
pop
xchg
sbb
test
adc
xchg
sub
cmp
mov
mov
mov
nop
mov
pop
mov
(bad)
add
int
repz
jns
xor
cdq
hlt
imul
dec
pop
push
fadd
pop
jne
ins
cs
mov
mov
setle
je
add
ds
cmp
mov
push
cmps
lods
js
jle
mov
stos
dec
in
dec
leave
cwde
mov
fwait
ins
in
je
pop
mov
jp
add
cmps
adc
fisttp
cmp
fbstp
rcl
dec
repz
pop
add
mov
sbb
push
fimul
lea
loop
jmp
or
div
clc
in
mov
lds
mov
out
iret
jmp
stc
mov
bound
int
xchg
mov
jo
sub
xchg
cmp
ret
jmp
lock
and
not
cmps
mov
cmc
mov
push
int
sbb
sbb
ja
pushf
or
dec
cmp
dec
xor
add
popf
dec
mov
outs
imul
adc
or
lahf
push
or
test
sub
pop
or
dec
pop
test
jp
cmc
call
mov
retf
and
push
in
popa
add
in
xor
jge
inc
dec
cmps
mov
loope
frstor
sbb
retf
ja
loop
mov
mov
dec
(bad)
imul
neg
aam
rol
movs
out
sbb
jo
mov
shl
add
mov
dec
dec
sub
stos
dec
or
psubsb
lahf
sub
fisttp
shr
or
ror
iret
push
es
push
es
push
sar
and
idiv
jno
add
ret
mov
push
xchg
and
fisttp
nop
cmp
mov
and
jne
pop
push
dec
cmp
push
mov
jl
ins
popa
dec
stc
in
dec
cdq
mov
fldenv
shl
in
fcomp
fiadd
hlt
das
iret
inc
jnp
leave
or
repz
sahf
add
or
sub
inc
mov
sub
scas
cli
sub
and
and
es
ret
xchg
out
daa
push
dec
ins
jae
mov
mov
mov
jb
sub
test
add
mov
ss
inc
in
out
cdq
sbb
sbb
dec
and
ins
mov
mov
retf
cmp
add
add
cmp
push
dec
cwde
lods
lahf
out
call
fmul
out
(bad)
test
cmp
stc
scas
aas
cmps
ret
sbb
scas
hlt
mov
add
inc
in
mov
jmp
punpckhbw
push
mov
add
sti
sub
lods
sbb
sub
dec
pop
add
adc
scas
xor
loope
mov
pushf
jb
je
fiadd
es
das
stc
repz
add
adc
xor
cmps
test
adc
adc
cmp
pusha
outs
popf
mov
mov
in
ins
pop
mov
and
out
ja
adc
jo
test
push
mov
(bad)
add
or
mov
ret
adc
imul
leave
(bad)
mul
mov
sbb
fnstsw
dec
(bad)
xchg
or
inc
xchg
push
sti
sub
pop
cwde
ret
aam
retf
xchg
lods
mov
or
mov
add
push
lahf
stos
mov
xchg
cld
push
in
mov
sar
push
jb
pop
dec
cdq
pop
in
xor
stos
xchg
add
scas
imul
rcr
hlt
xor
int
xchg
aad
mov
mov
frstor
mov
movs
retf
iret
sbb
mov
xchg
or
add
cmp
dec
shr
jl
and
jmp
lods
mov
inc
adc
loop
sar
jne
xchg
mov
pop
sbb
sbb
fcom
pop
fidivr
ds
ins
in
mov
nop
or
cmp
push
xchg
out
dec
in
jno
enter
push
test
sub
data16
addr16
arpl
and
test
push
int
jo
mov
inc
clc
clc
mov
cmp
sub
mov
mov
ins
cmps
and
mov
pop
adc
and
xchg
fstp
sti
add
(bad)
out
xchg
sbb
into
mov
inc
fbld
add
inc
push
(bad)
in
pop
fld
inc
iret
(bad)
inc
ret
xchg
xlat
popa
pop
nop
adc
rcr
inc
and
das
dec
sub
mov
jb
pop
mov
pop
sub
inc
mov
mov
jl
push
mov
int
mov
mov
mov
pop
jae
ficom
into
add
add
movs
and
psubq
and
mov
xchg
sbb
shl
je
push
pushf
stos
mov
or
aas
hlt
dec
mov
fist
dec
cmp
dec
xor
mov
fldcw
scas
mov
stos
push
fistp
ss
div
out
retf
sbb
xchg
add
adc
mov
jl
or
ds
(bad)
cwde
mov
out
stos
xchg
ins
inc
inc
sbb
test
adc
outs
mov
cmp
inc
xchg
dec
sar
cmp
jae
in
sbb
sub
les
jbe
push
pushf
inc
cmp
fnstenv
movs
fstp
leave
imul
ja
mov
or
lods
aam
xlat
dec
adc
cmp
adc
(bad)
cdq
pop
ds
aas
enter
adc
mov
add
test
xor
jbe
sub
mov
cmovne
or
and
mov
leave
sub
mov
test
jns
xor
mov
pop
xlat
pop
aaa
or
mov
pop
cdq
mov
push
or
adc
fadd
dec
or
into
mov
and
test
cwde
test
mov
call
aas
repnz
inc
(bad)
sub
fsubp
(bad)
cld
dec
pushw
pop
mov
sbb
adc
cmps
iret
test
mov
sbb
xchg
inc
xchg
out
js
mov
push
lock
loopne
cli
mov
jno
stos
mov
cmp
(bad)
xchg
test
xlat
adc
pop
test
mov
aam
fldcw
jne
test
fcom
push
mov
(bad)
ficom
push
js
push
pop
fdivr
cmp
mov
out
or
sbb
xor
ins
mov
adc
dec
sub
push
dec
jmp
scas
xchg
or
or
mov
ds
imul
xchg
fidivr
mov
mov
cld
call
arpl
mov
mov
push
xor
sbb
call
loopne
sub
inc
loopne
test
test
or
cld
and
adc
xchg
xor
cmps
mov
mov
and
pop
mov
test
mov
mov
jmp
bound
mov
ins
daa
lods
(bad)
cmc
es
push
shl
imul
jno
mov
mov
pop
sub
cmps
sub
(bad)
pop
gs
inc
sti
push
in
mov
iret
dec
or
and
out
stos
mov
daa
test
push
xlat
and
add
mov
or
xchg
gs
mov
dec
push
mov
push
ja
dec
inc
shr
xchg
fsub
out
jp
xor
adc
lahf
jb
inc
sub
adc
inc
aam
mov
in
cmc
dec
add
mov
lods
mov
js
mov
push
cmp
and
push
and
rcl
mov
or
mov
jmp
sbb
shr
and
jmp
or
sbb
mov
xor
mov
adc
ds
(bad)
repz
out
gs
push
scas
dec
jmp
aad
jecxz
pop
inc
fld
sbb
in
stc
mov
mov
inc
push
dec
add
cmp
jno
scas
ins
dec
les
rcl
aam
not
movs
sbb
cdq
jmp
xchg
ror
repz
fcmovnb
call
sub
xor
mov
ficomp
push
inc
ror
push
shl
out
pop
bound
xor
jno
xchg
repnz
aaa
adc
xor
imul
(bad)
shl
add
pop
enter
push
mov
push
cwde
pop
sub
dec
cmc
jmp
or
pop
sub
jl
xchg
mov
adc
ins
or
addr16
xor
or
mov
sbb
out
mov
sub
(bad)
dec
mov
ret
and
adc
clc
push
jbe
lahf
mul
inc
mov
les
rcl
mov
ret
sbb
mov
pop
rcr
aad
jae
xchg
hlt
inc
daa
call
pop
adc
std
add
imul
cmp
das
int
call
mov
in
xchg
out
pop
or
or
dec
pop
fs
pop
or
sbb
xlat
jbe
mov
adc
(bad)
push
in
fcomp
(bad)
stc
jmp
dec
xchg
xor
inc
mov
xchg
push
or
dec
or
push
ins
cmp
jle
ret
cmps
enter
in
cmp
xor
and
leave
mov
and
cli
push
mov
ins
or
enter
cdq
xchg
ins
sbb
popa
aad
pop
inc
stc
cdq
cmp
sbb
lahf
sbb
daa
cdq
ret
cmp
(bad)
fnstcw
jmp
sub
repz
and
adc
ret
fisubr
loope
int
xchg
jl
fwait
xor
pop
out
add
push
stc
mov
add
pop
mov
data16
fs
es
mov
in
add
mov
fist
sub
push
ss
call
xchg
stc
cmps
mov
jmp
sub
imul
call
add
cmp
sub
cdq
adc
dec
jmp
push
push
outs
bound
and
pop
(bad)
mov
repz
sub
je
stc
push
sbb
mov
mov
ficomp
cs
imul
adc
or
cli
fisttp
cmps
mov
fs
(bad)
push
push
hlt
repnz
cmp
cmp
add
call
cmp
imul
or
or
imul
frstor
fiadd
ins
in
outs
pop
mov
fs
mov
call
mov
mov
mov
arpl
lds
mov
loopne
aas
cmp
xchg
inc
xchg
xchg
xchg
adc
dec
and
xchg
mov
ja
adc
fnsave
fistp
mov
call
jl
in
xor
push
dec
cmp
mov
arpl
adc
mov
pop
and
mov
push
lods
pop
push
sub
inc
sub
mov
test
dec
cld
shl
mov
mov
je
lahf
cmps
mov
hlt
cmp
fidivr
pushf
outs
fdiv
cmp
xor
sub
call
and
loopne
mov
jae
or
dec
dec
xor
icebp
jl
(bad)
fimul
out
mov
mov
or
clc
jg
movs
lock
cmp
pop
fnstcw
ror
cmc
xchg
xlat
ds
pushf
(bad)
xor
stc
pop
stos
cli
inc
sub
loop
sbb
popa
sbb
xchg
jnp
xchg
push
push
jae
in
mov
cmp
jmp
lgs
lods
out
and
push
lock
mov
mov
rcr
cmp
addr16
sti
jo
mov
push
cs
call
cmp
adc
jecxz
rcl
or
jne
sbb
icebp
aas
pop
sbb
push
sub
scas
xchg
leave
repnz
in
dec
lods
je
popf
pop
and
aas
cmp
gs
jmp
lahf
pop
ds
gs
adc
aam
jns
iret
(bad)
ins
pop
dec
dec
mov
je
rol
enter
out
jbe
jbe
push
retf
retf
mov
mov
mov
and
jnp
mov
push
mov
rcr
loope
rcl
stos
push
pop
add
mov
mov
add
les
int3
xor
icebp
out
(bad)
cmp
and
dec
inc
sub
fs
(bad)
jmp
lods
xor
int3
cwde
ror
adc
push
pop
sahf
or
dec
add
int
or
inc
push
inc
adc
mov
mov
push
cmp
cmp
cmp
ret
cmp
push
cmp
jl
push
add
xor
cmc
dec
rcr
stc
sbb
mul
lock
mov
scas
stos
hlt
pop
push
cmp
loopne
mov
xor
nop
aad
cld
test
clc
out
das
in
sbb
sbb
jae
or
(bad)
into
xchg
test
push
mov
shl
jae
xor
test
xchg
and
add
sbb
les
fwait
retf
mov
pop
mov
inc
mov
out
hlt
(bad)
adc
cmc
mov
fisttp
loope
ret
cld
mov
ins
fisttp
mov
jecxz
or
and
xchg
inc
inc
icebp
xor
xchg
dec
(bad)
fsub
mov
mov
es
ror
adc
and
stos
bound
xor
jl
push
sbb
add
push
pop
repnz
pop
dec
push
(bad)
imul
dec
push
jns
xchg
pop
lahf
mov
sub
dec
aam
iret
lock
cs
ret
in
jne
jmp
sar
mul
ror
mov
or
ds
mov
sub
mov
sar
fadd
out
js
xchg
jb
xor
mov
dec
gs
mov
pop
xor
ror
xchg
test
push
icebp
jp
aam
dec
cli
ss
hlt
out
clc
or
retf
aam
mov
xchg
inc
xchg
push
icebp
xor
mov
xchg
add
sbb
repnz
sahf
stos
mov
into
mov
icebp
push
adc
sahf
or
ret
(bad)
adc
mov
push
inc
mov
daa
aam
ins
jl
and
mov
or
sbb
ja
xor
xchg
pop
arpl
sbb
cmc
enter
jecxz
push
cwde
sub
pop
cmp
dec
ins
mov
add
sbb
cli
pop
and
xchg
repz
(bad)
ror
jmp
popa
ins
scas
pop
popf
mov
or
pop
mov
wrmsr
pop
push
daa
xor
mov
std
shl
mov
fistp
hlt
sub
jmp
cmps
ja
ins
jbe
jo
sbb
in
push
shl
rcl
stos
pop
mov
(bad)
(bad)
jns
pop
test
add
lock
loop
fdivr
xchg
cmps
push
movs
fbld
mov
pop
loope
dec
mov
dec
xor
fdivr
or
dec
clc
sahf
scas
or
in
jno
leave
add
or
mov
mov
lock
inc
call
test
jmp
mov
mov
nop
mov
sub
pop
je
in
add
or
add
push
add
addr16
pushf
dec
scas
lahf
aaa
cmps
push
pop
call
imul
jecxz
xchg
div
mov
jp
jno
rcl
in
cli
mov
out
lahf
out
gs
imul
sbb
xor
out
ficom
dec
or
jg
jmp
sub
test
pop
(bad)
dec
mov
jb
xchg
fdiv
lds
ins
sbb
mov
hlt
(bad)
fsubr
shl
jmp
cld
inc
loop
push
sub
(bad)
mul
out
ins
jmp
adc
xchg
inc
inc
call
(bad)
cmc
lods
push
ret
in
add
stos
sub
push
ret
dec
imul
popf
shl
pop
cmp
enter
sbb
pop
in
repnz
adc
or
ret
push
fdiv
sub
mov
in
push
out
outs
bound
mov
outs
dec
push
xchg
and
cmp
xchg
lds
int3
pop
or
xor
cmp
mov
pop
addr16
std
and
arpl
repz
bound
mov
js
or
lahf
fsubr
xchg
xchg
cli
adc
arpl
mov
push
adc
aad
mov
neg
bound
out
pop
adc
inc
clc
test
jns
loop
push
or
or
add
fs
dec
dec
inc
jmp
jmp
sbb
sub
xchg
add
cld
retf
mov
pop
call
dec
cmp
in
push
bound
push
std
cmp
add
pop
add
mov
fisubr
pop
sahf
repz
sub
xor
cmps
jle
dec
dec
pop
mov
popa
(bad)
mov
lock
mov
pop
and
mov
shr
lock
gs
xchg
fwait
push
ins
(bad)
jle
mov
movs
mov
inc
or
jl
xchg
sar
jl
adc
pushf
adc
out
cmps
addr16
imul
sbb
fidivr
jp
jno
call
pop
mov
test
sti
dec
jl
out
div
in
sub
scas
mov
add
fsub
ret
outs
and
ss
bound
mov
add
jnp
lahf
popf
xor
movs
movs
imul
sar
in
push
pop
mov
sbb
rcr
jne
movs
sbb
test
pop
mov
sti
or
jmp
out
sahf
(bad)
(bad)
cli
jp
fsubr
xchg
shl
les
test
clc
sti
dec
sub
push
std
jno
adc
sti
ficom
loopne
jge
mov
scas
dec
adc
ins
loopne
out
dec
cmp
jb
out
aam
test
gs
lods
pop
xor
adc
mov
out
(bad)
sbb
fs
lock
xchg
push
dec
or
out
inc
push
aaa
adc
dec
push
stos
mov
ins
imul
inc
push
xor
cmc
movs
cdq
lods
dec
mov
adc
inc
cmps
push
push
xor
mov
xlat
adc
cmp
xor
fisttp
jae
push
xchg
dec
jo
mov
scas
out
aaa
jne
js
mov
mov
sbb
cmp
jne
or
mov
sbb
aaa
cmp
fst
pminsw
adc
cwde
mov
sbb
mov
call
jno
sub
or
cmp
xchg
ret
scas
ss
das
mov
aas
out
mov
pop
push
xchg
imul
push
pop
pushf
mov
sub
fisub
xchg
pop
jecxz
pop
jae
cli
stos
dec
dec
and
data16
repnz
test
mov
aad
dec
sub
ds
ret
rol
aas
out
dec
pop
mov
pushf
jp
mov
cld
mov
fcomp
push
mov
sbb
push
test
cmps
jo
jg
and
scas
pop
(bad)
pushf
jmp
cmp
ret
idiv
(bad)
jae
xchg
push
jnp
repnz
adc
enter
stos
jo
adc
push
sub
jae
cmp
and
idiv
and
jmp
jmp
loope
iret
icebp
lahf
(bad)
std
add
pop
cmc
add
fcmovnb
pop
pop
and
movs
sub
popf
imul
(bad)
stos
ds
mov
push
adc
lahf
mov
adc
jns
sub
jle
cdq
add
scas
push
test
not
xor
bound
jne
add
mov
lock
pop
xchg
ds
sbb
xor
push
arpl
dec
or
pop
loop
xchg
inc
or
inc
out
pop
adc
sti
inc
push
inc
fs
pop
mov
inc
xor
test
cmp
nop
imul
ror
pop
cmp
mov
pushf
mov
test
(bad)
iret
mov
fisubr
les
xchg
sbb
ds
arpl
push
sub
adc
mov
(bad)
mov
cmp
adc
sar
jns
add
jae
push
mov
lahf
and
xlat
lahf
ror
cmp
push
out
in
pop
push
dec
imul
out
mov
sub
mov
aas
imul
mov
cmp
push
fwait
jbe
jns
xchg
sbb
jle
popf
mov
push
xchg
(bad)
pop
and
inc
dec
call
pop
pop
(bad)
jl
sbb
pop
push
out
xchg
lock
imul
scas
in
push
repnz
mov
jl
fwait
mov
jae
call
fdivr
and
repz
adc
jmp
stc
ficom
inc
lods
push
mov
or
cld
mov
add
dec
mov
je
pop
out
lahf
mov
mov
js
jecxz
inc
fwait
jl
pop
and
stos
aad
pop
and
cli
xor
fisub
imul
and
lea
or
dec
cmp
or
fisubr
pop
pop
xchg
into
adc
dec
mov
stos
popf
xor
or
lea
dec
jb
test
mov
inc
rcr
add
movs
mov
or
adc
mov
xchg
scas
fstp
adc
(bad)
and
or
imul
popf
(bad)
mov
sub
icebp
or
int
repnz
mov
sbb
adc
inc
xor
or
retf
dec
ja
dec
test
(bad)
fs
inc
into
mov
sbb
sbb
sbb
inc
cmp
push
test
je
mov
xchg
adc
push
xchg
cs
mov
(bad)
icebp
dec
cwde
mul
fwait
or
push
mov
sub
add
dec
sbb
(bad)
sub
into
sahf
mov
test
mov
enter
push
ins
dec
mov
lods
ret
in
ss
xchg
sub
cmp
jg
jmp
nop
ins
or
mov
dec
adc
push
aaa
push
or
aad
retf
xchg
pop
loopne
std
mov
popf
sbb
xor
into
sbb
push
and
cwde
ja
sbb
mov
arpl
(bad)
jmp
test
(bad)
xor
int
inc
push
adc
adc
cmp
mov
int3
imul
sub
aad
or
int
gs
cmc
mov
jge
dec
in
pop
adc
xchg
adc
ret
aam
xor
ds
or
ret
and
fisub
leave
call
adc
das
je
test
iret
out
jmp
scas
sub
cmc
xchg
and
or
dec
fistp
jp
xchg
aad
push
add
pop
aas
adc
in
mov
ret
dec
fbstp
push
mov
mov
and
aad
xlat
test
or
movs
out
inc
xchg
xor
ins
cmps
imul
popf
xchg
lock
es
jg
sbb
and
(bad)
sub
(bad)
in
mov
hlt
push
cwde
ins
hlt
xchg
sbb
outs
sub
inc
outs
ja
inc
push
into
mov
pop
and
ds
sub
std
push
ins
enter
rcr
(bad)
mov
adc
ja
sub
retf
clc
jnp
arpl
or
xchg
dec
dec
test
aad
inc
xor
repnz
dec
push
mov
js
mov
xor
in
jecxz
or
leave
jmp
dec
sbb
pop
ret
lahf
adc
ror
in
icebp
xor
cmp
test
jnp
inc
add
mov
icebp
cmp
push
sbb
imul
adc
pop
aas
pop
adc
data16
pusha
inc
push
data16
or
and
rcr
scas
add
xchg
mov
xor
cmp
cmp
mov
xchg
xor
arpl
mov
cmc
int
lods
hlt
ror
(bad)
mov
and
(bad)
jo
cmp
std
call
fdiv
and
cmp
sbb
and
xchg
fld
call
push
sbb
xchg
pusha
push
add
add
push
cmc
test
call
jns
aam
cs
fadd
mov
jg
ins
outs
std
pop
sbb
push
push
sahf
lods
cmc
daa
(bad)
ss
mov
pop
loopne
lahf
icebp
push
daa
lahf
xchg
adc
int
jns
jns
ins
stos
retf
(bad)
dec
fwait
and
sbb
or
xchg
push
call
fstp
sub
daa
es
test
mov
sub
in
stos
push
test
add
jbe
repz
imul
pop
pop
ja
call
mov
mov
int3
ins
adc
std
fwait
adc
lea
(bad)
xlat
repz
sbb
push
out
(bad)
arpl
sbb
movs
xor
pop
dec
jg
in
push
les
mov
dec
xor
retf
jns
test
push
sbb
jae
mov
jns
mov
mov
into
dec
test
je
out
lds
xchg
jne
push
(bad)
rcr
mov
xor
or
push
jae
hlt
inc
popa
imul
xor
sbb
push
nop
jmp
mov
popf
jbe
sbb
fcomp
pop
test
sbb
jb
jb
aam
lds
pop
or
mov
adc
cdq
movs
or
fimul
push
shl
dec
nop
mov
adc
sar
sbb
shl
pushf
dec
pop
ins
clc
pop
stos
sub
sub
pushf
jmp
cmc
fld
ins
push
fimul
and
and
ins
sbb
(bad)
mov
mov
js
fdiv
dec
push
push
cmps
test
and
cdq
rcl
mov
pop
pop
test
je
jge
adc
mov
pop
lahf
pop
cmp
ins
mov
movs
inc
sbb
test
fmul
and
push
and
jmp
and
mov
rol
sub
lock
sbb
(bad)
sub
sbb
data16
test
aaa
in
in
ror
ins
repnz
(bad)
cmp
sbb
sbb
lahf
in
dec
mov
or
enter
add
out
cmp
mov
les
mov
cmp
out
retf
out
shr
and
or
xchg
or
jnp
sbb
(bad)
lock
dec
in
daa
popfw
mov
je
lea
pop
sub
xchg
in
dec
imul
cwde
mov
mov
(bad)
mov
mov
scas
add
jae
ret
pop
jecxz
dec
fistp
loop
jae
push
cmp
adc
pushf
jg
int3
popf
sysexit
jb
ret
jmp
cmp
mov
push
add
mov
into
dec
mov
lods
cdq
out
int3
mov
adc
retf
icebp
xchg
jle
mov
fistp
jg
mov
les
sbb
sbb
bswap
clc
mov
sahf
add
ret
and
jg
sub
scas
cmp
mov
jae
retf
mov
test
test
pop
int
mov
dec
fld
fcmovne
repz
pop
xor
movs
jl
adc
xchg
icebp
ret
mov
imul
sub
jmp
daa
aam
stc
pop
add
ret
les
mov
adc
push
push
neg
mov
mov
inc
(bad)
mov
mov
adc
scas
es
push
or
sbb
pop
mov
xchg
jnp
pop
cmps
(bad)
in
retf
test
clc
inc
std
movs
mov
mov
mov
push
test
imul
pop
rcr
stos
add
xchg
adc
(bad)
in
inc
popw
pop
mov
lea
(bad)
call
pusha
xchg
aam
inc
pop
mov
cdq
cmc
mov
mov
mov
stos
aas
sub
dec
loope
retf
test
loopne
or
xor
xchg
mov
pop
dec
inc
jl
mov
or
push
fadd
sub
mov
mov
mov
das
mov
inc
repnz
jl
test
div
out
xor
jmp
sti
sti
sub
cmps
addr16
mov
sbb
movs
test
xchg
jp
sahf
das
sub
mov
xchg
or
mov
in
js
mov
add
mov
push
cmp
mov
rcr
aad
inc
inc
xchg
lock
addr16
lock
xor
test
pcmpgtw
and
inc
js
xor
(bad)
adc
sub
mov
(bad)
jno
dec
inc
js
(bad)
jge
enter
(bad)
sub
jecxz
sti
mov
inc
or
inc
into
mov
mov
mov
adc
(bad)
cld
jns
inc
xchg
jecxz
xor
mov
xchg
ret
inc
repz
pop
pusha
cmps
mov
mov
mov
out
inc
lea
add
cmp
sub
jle
out
aam
sbb
jo
xchg
mov
xchg
mov
jle
ficom
adc
test
and
mov
int3
sahf
lea
out
ds
mov
iret
jns
rol
into
pop
xchg
std
push
add
popf
xor
pop
push
pop
mov
mov
aas
imul
add
dec
ret
or
scas
mov
aaa
test
sbb
pop
pop
iret
stos
loop
push
dec
xor
fwait
add
xlat
rcr
sub
mov
out
hlt
push
cmc
shl
or
imul
and
sub
sbb
inc
sbb
popa
mov
fbld
jmp
sbb
in
stos
lods
es
mov
scas
test
dec
push
aas
shl
ja
(bad)
movs
sub
sbb
cmp
jp
aas
xchg
ds
xor
adc
add
shl
jmp
or
scas
xchg
adc
fnstcw
jmp
and
mov
rcl
in
jl
xor
ret
or
cmp
xchg
lds
movs
or
xor
mov
inc
fidiv
mov
add
inc
xor
ins
pop
ja
(bad)
inc
arpl
sbb
ss
ret
mov
lds
enter
xor
add
popf
test
jae
out
int3
dec
push
test
lods
aam
cmp
push
dec
inc
call
mov
cmc
vphaddubq
jmp
outs
cmovno
adc
leave
inc
add
jne
pushf
and
repz
ret
fs
lea
movs
lea
cli
mov
call
xlat
jae
dec
sbb
(bad)
imul
or
mov
adc
imul
imul
iret
jmp
retf
adc
in
movs
xchg
jb
xor
pop
leave
mov
adc
(bad)
call
push
mov
pop
xchg
dec
mov
pop
imul
daa
pop
dec
nop
test
xchg
pop
lds
sar
cmps
scas
sub
cld
repnz
fwait
push
lods
int3
sti
inc
and
call
test
cmp
jmp
and
mov
xchg
pop
adc
inc
rol
out
ds
hlt
xchg
push
xchg
cmp
inc
and
xchg
ret
ror
pop
xchg
jno
push
scas
sbb
aaa
push
push
ins
xchg
vmovsd
cmp
pop
cld
push
iret
loop
xchg
and
ja
fdiv
sbb
sahf
out
pop
scas
addr16
neg
sbb
out
ja
push
lods
push
push
or
scas
jg
mov
mov
int3
or
mov
in
pusha
movs
mov
sahf
push
xchg
and
jb
and
cwde
cmp
xor
loope
dec
(bad)
fdivr
ror
mov
stos
mov
jbe
scas
stos
sti
sar
cmc
jns
gs
cmp
aad
jp
push
jb
cmp
or
sub
and
mov
xchg
push
ret
mov
sub
(bad)
ins
push
mov
xor
ret
inc
dec
scas
test
aad
clc
sub
sahf
in
loope
test
xchg
add
dec
mov
and
cmp
xchg
mov
ds
inc
mov
cmps
jne
test
mov
sbb
push
sbb
outs
loop
rcr
lahf
inc
jmp
loop
int
sbb
sub
inc
mov
jmp
jg
loop
fisubr
and
addr16
jno
mov
out
adc
ficom
nop
fsubrp
movs
xchg
adc
movs
nop
idiv
sbb
loop
and
out
push
inc
adc
push
push
int
sti
inc
sub
lahf
inc
rcr
and
push
fisub
and
sub
mov
push
mov
fcom
lods
sub
mov
cmp
xchg
dec
mov
in
mov
(bad)
pop
mov
cmps
popf
mov
lods
mov
stos
mov
lods
ret
sbb
imul
(bad)
inc
fnsave
pop
(bad)
icebp
mov
mov
ins
stos
fist
lods
in
ret
jae
(bad)
ins
sub
sub
xlat
sti
xchg
test
popf
cwde
movs
fldlg2
loop
xchg
and
xchg
adc
lods
loop
xor
fs
or
fmul
mov
push
stos
scas
add
pop
mov
clc
dec
sub
enter
test
jl
fmulp
scas
(bad)
push
ror
xchg
repnz
cmc
jge
(bad)
call
push
or
jnp
imul
sbb
dec
cmps
clc
pusha
mov
lahf
ficomp
(bad)
scas
xor
in
call
ds
stc
or
retf
lahf
call
add
push
cmp
jnp
and
out
xchg
out
ja
popa
aas
jns
scas
jmp
push
cmp
(bad)
adc
xor
pop
or
mov
mov
or
mov
mov
xchg
ds
ror
aaa
lock
mov
sbb
and
mov
xchg
fcom
test
test
or
xchg
pop
adc
cmps
xor
rol
mov
cmps
dec
repz
jo
inc
ja
jne
pop
enter
arpl
loop
iret
jle
mov
fucomi
and
mov
mov
inc
(bad)
mov
iret
repz
jl
mov
pushf
addr16
fsubr
mov
jle
jmp
loop
repnz
mov
pop
imul
dec
out
std
(bad)
fist
mov
or
or
xchg
xor
outs
dec
add
pop
dec
adc
and
mov
dec
mov
mov
sub
in
nop
das
test
jnp
xchg
push
scas
pop
stos
stos
mov
jle
mov
je
cmps
pop
push
(bad)
push
jmp
(bad)
js
and
aaa
dec
jecxz
mov
inc
fcomp
out
data16
pop
mov
jbe
sub
adc
ins
jbe
fsub
stos
ds
popw
cmp
dec
iret
push
sbb
rcr
sub
cld
outs
mov
cmps
mov
pop
mov
aas
sti
lds
data16
push
or
dec
lods
mov
mov
ficom
test
jge
pop
cmp
dec
or
inc
popf
add
mov
mov
add
div
cwde
mov
push
(bad)
call
ss
test
xor
sub
jnp
int3
sbb
stos
into
xchg
out
(bad)
aas
pop
icebp
mov
and
and
bound
lock
imul
fs
mov
sbb
pop
xchg
jo
push
aas
jo
mov
loopne
lea
xchg
cli
mov
outs
mov
test
fcomp
sbb
jno
add
lock
dec
adc
inc
xor
scas
pop
sbb
sbb
sub
adc
mov
cli
loope
jecxz
adc
mov
sbb
xchg
mov
gs
jo
imul
dec
mov
cmp
jg
jo
mov
mov
fsub
xor
cs
fxch
hlt
mov
xchg
fucompp
cdq
dec
jae
adc
push
cmp
cmp
fistp
push
and
outs
lahf
daa
xor
bnd
mov
adc
dec
jne
add
jmp
out
das
push
dec
sub
dec
sub
imul
and
pop
pushf
mov
mov
sbb
xor
xchg
xchg
cwde
sbb
scas
and
jno
add
fldenv
inc
and
ret
push
fs
push
jo
hlt
fisub
movs
jo
(bad)
dec
mov
sub
dec
fcom
(bad)
ss
push
adc
jno
pop
(bad)
loopne
add
sbb
adc
in
adc
sub
push
popf
cs
sub
adc
add
inc
aaa
xor
jmp
cmp
mov
mov
mov
in
fcmovb
ds
js
push
sbb
or
shl
push
(bad)
push
sar
jb
(bad)
cld
fild
jae
and
(bad)
es
add
dec
mov
add
fsub
mov
out
int
lahf
shr
daa
push
dec
mov
pop
fcmove
stos
cmp
jb
fadd
retf
(bad)
mov
call
xchg
icebp
and
fist
out
repz
test
xlat
test
cmps
dec
bound
pushf
and
scas
xchg
aas
jne
rsm
stos
in
mov
xor
clc
sbb
or
call
clc
mov
les
retf
add
aad
jmp
(bad)
jmp
ins
popa
mov
aam
pop
test
ja
loope
push
jbe
test
lock
jnp
jae
add
clc
sti
and
or
(bad)
ss
adc
push
into
mov
sub
pop
dec
mov
adc
push
repz
or
adc
pop
sbb
dec
xchg
inc
pop
mov
push
std
pop
add
jmp
scas
in
ret
adc
jnp
pop
pop
ins
jmp
stos
popf
addr16
sbb
xchg
mov
leave
sub
and
push
leave
sub
imul
push
ret
push
fisttp
mov
adc
popa
sub
inc
push
xchg
lock
mov
mov
lods
das
in
fistp
mov
mov
repz
cmc
mov
aaa
mov
jg
push
mov
pop
outs
push
mov
and
pop
xchg
retf
sbb
mov
or
popa
call
mov
pop
dec
inc
icebp
add
or
int
push
cli
scas
mov
mov
mov
shr
test
cld
dec
mov
cmp
mov
mov
jg
in
cmp
ja
pop
aaa
aas
or
xor
and
ret
or
add
inc
mov
(bad)
mov
jmp
in
push
lods
sub
sbb
cmp
les
jecxz
jmp
xor
data16
push
jmp
loop
inc
jg
or
mov
jmp
daa
mov
xor
hlt
pop
std
les
out
out
mov
es
xchg
jb
outs
dec
(bad)
and
add
jle
pop
push
ror
cmp
nop
add
jnp
jns
add
fisttp
aas
adc
pop
dec
adc
jne
in
mov
and
mov
call
jle
retf
cmp
dec
in
jle
jnp
mov
mov
push
sbb
imul
lods
loope
ja
outs
jge
xor
fst
push
push
loope
cmp
sbb
pop
jge
jmp
inc
jle
fwait
int
outs
lahf
xchg
mov
or
test
xchg
(bad)
mov
ins
pop
xchg
xlat
fisttp
add
fimul
or
push
add
fidivr
dec
test
ja
in
js
dec
add
dec
dec
sbb
test
test
cld
aam
mov
add
push
or
jmp
fs
xor
and
rol
shl
add
sar
sbb
jp
scas
inc
stc
loopne
test
ins
xlat
or
pop
int3
inc
xor
push
cdq
add
xor
mov
mov
cdq
fcmovnbe
stos
adc
iret
shl
inc
cs
rcr
imul
aam
repnz
scas
ror
into
jp
mov
jecxz
imul
popf
cmp
pop
cmp
std
enter
xchg
and
push
dec
loope
xor
sub
retf
mov
lds
jg
aad
and
xor
mov
jecxz
fistp
imul
stos
int3
fs
xlat
adc
test
pop
imul
cdq
inc
push
xor
mov
repz
xor
sahf
sub
shl
scas
test
leave
aaa
ja
imul
fadd
adc
and
xor
mov
xchg
test
pop
lock
sbb
pop
jg
adc
das
add
imul
push
jb
lods
enter
cmp
scas
jb
rol
inc
adc
cmp
jl
les
mov
(bad)
(bad)
cmp
or
mov
test
cli
test
jp
or
push
push
aad
sbb
daa
jp
fcomi
popf
or
cwde
sbb
sti
push
stos
(bad)
cmps
das
int3
cli
mov
mov
hlt
imul
jmp
aas
xor
in
dec
or
rcl
or
xchg
and
adc
(bad)
int3
sub
mov
cmp
(bad)
dec
cs
test
xchg
sbb
mov
scas
push
and
mov
aaa
jo
pop
(bad)
jns
push
push
inc
idiv
xor
(bad)
(bad)
jp
ds
arpl
pop
push
add
dec
mov
push
ins
dec
jg
push
cmp
hlt
retf
dec
cmp
bound
jmp
dec
into
scas
adc
lock
xor
dec
cmp
jmp
movs
xchg
jl
xchg
aaa
or
or
movs
adc
rcl
in
lods
int
out
and
jne
fdivr
jb
ins
stc
and
jnp
rcr
jg
ret
cli
out
nop
test
fist
add
xor
movs
sub
gs
in
sbb
mov
jmp
daa
leave
test
cmps
lds
mov
mov
fimul
test
mov
mov
and
mov
loope
shl
sub
ds
or
ins
push
dec
ins
(bad)
and
inc
add
adc
sub
std
daa
cmp
jle
jno
dec
cmps
push
mov
ret
aam
cdq
xchg
outs
mov
call
(bad)
mov
fs
inc
movs
adc
loopne
inc
cmp
(bad)
mov
es
cmp
mov
xchg
rcr
test
arpl
pushf
cs
mov
dec
add
xchg
and
lds
pop
pop
jbe
gs
sub
stc
shr
dec
and
and
lods
in
clc
js
mov
int
push
mov
xor
dec
es
gs
xchg
and
(bad)
mov
add
pop
jmp
jo
push
mov
xchg
cmp
pop
(bad)
and
outs
cs
mov
jno
push
mov
mov
pause
dec
xchg
dec
mov
jne
xchg
or
pop
or
mov
stc
sub
in
jbe
mov
lahf
shl
call
mov
hlt
push
mov
xchg
push
xor
mov
pusha
or
neg
pop
test
aam
shl
and
xchg
add
fld
inc
add
lods
jb
xor
shl
mov
xor
sar
add
xor
cmp
fwait
out
(bad)
mov
add
mov
dec
sbb
mov
add
pop
fsub
mov
jae
cmps
add
sub
mov
(bad)
xchg
imul
dec
lahf
jns
and
adc
aas
cmc
ds
sub
test
aam
clc
punpckldq
cmp
mov
pop
pop
and
cmc
popa
mov
adc
xor
stc
lahf
jnp
mov
mov
and
sub
xor
dec
lahf
add
pusha
xor
cmp
mov
sbb
shl
(bad)
aad
push
(bad)
js
aam
aad
addr16
outs
dec
pop
jbe
frstor
cmps
fbstp
push
ja
fdivrp
outs
push
pop
imul
out
fisub
jb
loope
sub
mov
pop
out
cmc
fsubrp
cmp
jb
ror
mov
push
sbb
movs
lahf
ss
pop
sbb
mov
and
div
and
pop
popa
pop
push
pushf
jb
cmp
imul
outs
inc
dec
cdq
scas
pop
in
jg
in
fidivr
pop
inc
(bad)
push
jmp
test
and
dec
aam
xor
pushf
push
fs
push
mov
mov
adc
sub
fisttp
jp
pop
adc
and
xor
fiadd
mov
and
push
ins
pop
and
mov
sbb
dec
cli
fistp
pop
jns
push
xlat
cmp
mov
and
fs
repnz
out
retf
clc
sti
fiadd
pop
mov
mov
js
lds
out
mov
fstp
inc
jg
jp
sahf
mov
inc
bound
arpl
or
mov
add
(bad)
jmp
fistp
jg
mov
jb
lods
in
dec
shl
pop
ins
xlat
sbb
iret
and
es
bound
fstp
pop
(bad)
xchg
mov
cdq
leave
dec
out
mov
sbb
fstp
pop
(bad)
lahf
and
aad
pop
xlat
add
sbb
dec
fiadd
aam
es
xor
dec
jmp
xchg
iret
dec
mov
clc
outs
out
test
int
jmp
sub
aad
add
lock
inc
push
and
pop
imul
mov
pop
fldcw
shl
jmp
pop
jmp
jnp
xchg
das
shl
retf
push
push
inc
jno
dec
imul
push
mov
je
ret
or
outs
rol
outs
out
jle
test
push
mov
mov
and
aaa
call
jno
loope
xchg
xor
jb
cli
nop
bound
lock
sbb
rcl
push
add
retf
(bad)
jmp
ja
xchg
daa
dec
jmp
retf
mov
hlt
fdiv
dec
dec
cld
jl
div
fldcw
mov
jp
(bad)
int
mov
fdiv
and
in
xlat
int
push
push
jge
leave
mov
ret
outs
into
into
xchg
or
jb
push
mul
dec
ficom
aaa
lods
push
outs
out
jae
mov
or
xor
retf
div
aas
adc
xor
mov
xor
inc
fcomp
(bad)
rcl
das
mov
(bad)
jecxz
lock
push
loop
test
sub
mov
pushf
aam
jle
loop
fidiv
jl
ret
sbb
cdq
enter
xchg
fcomp
inc
mov
icebp
sub
and
out
aam
loope
cmps
popa
ror
loope
xor
xor
mov
add
add
push
push
stc
or
mov
push
lds
jp
push
mov
arpl
mov
stos
retf
push
mov
xlat
pop
mov
adc
pop
stos
jp
and
(bad)
scas
sub
aas
std
das
pop
dec
popa
aam
jle
lods
icebp
or
popa
stos
xor
rcl
xor
and
fimul
mov
fdiv
pop
adc
sbb
pop
lods
into
dec
in
xchg
cdq
push
mov
stos
sahf
bound
pop
rol
les
iret
push
scas
addr16
retf
scas
mov
adc
cmp
jae
dec
push
sub
fwait
add
inc
and
test
(bad)
inc
test
push
fdivr
outs
mov
add
inc
data16
retf
js
or
sub
lods
arpl
adc
aam
xchg
mov
pop
inc
mov
clc
or
es
cmps
mov
lock
mov
stc
jmp
pop
fadd
aam
mov
mov
out
adc
(bad)
sub
popa
inc
mov
mov
mov
push
xrelease
jecxz
and
cmp
dec
fisttp
es
jecxz
jp
ror
hlt
mov
imul
xchg
jmp
call
xor
xor
sbb
mov
push
(bad)
sub
scas
sti
xchg
cmp
push
inc
xchg
icebp
cmps
loope
mov
fcmovnb
cld
cwde
jle
xor
pop
daa
mov
imul
add
pop
popf
fldenv
lods
inc
test
jecxz
adc
inc
fwait
pop
dec
mov
(bad)
sub
mov
hlt
add
pop
nop
(bad)
dec
retf
xor
xor
dec
sub
mov
cmc
shr
inc
scas
jns
retf
pop
pop
fild
pop
shl
mov
mov
cmp
pop
add
dec
jnp
cdq
push
mov
int3
inc
es
pop
jmp
xchg
xchg
rcr
(bad)
in
lock
fcmove
pop
pop
jnp
dec
pop
aas
dec
cli
call
out
dec
not
cmps
loopne
cmp
inc
fld1
jg
jo
inc
sahf
outs
retf
movs
jno
xchg
fild
imul
test
out
add
hlt
jl
or
stos
rcr
mov
scas
push
pop
mov
loopne
shr
hlt
fld
jb
ins
push
cwde
or
rcl
add
repz
stc
mov
test
nop
out
iret
sub
cs
rcl
sub
iret
inc
xor
rcl
ins
repz
movs
pop
and
stc
sahf
test
mov
loop
rcr
repz
fnstsw
push
cli
enter
int
popf
inc
lods
fsubr
das
pcmpgtw
cld
pushf
fst
jl
cld
inc
neg
sub
ficomp
push
cmp
push
sbb
mov
ss
xchg
jae
dec
retf
jp
xchg
mul
aad
cmps
mov
int
mov
aad
pop
xor
lea
loop
retf
adc
adc
dec
jle
jl
loopne
out
inc
in
sbb
add
fwait
loopne
and
pop
movs
mov
inc
int
(bad)
and
out
ds
dec
push
popf
clc
or
mov
mov
dec
dec
cmp
rol
ret
mov
and
adc
push
adc
cmp
repnz
(bad)
lock
js
sbb
sbb
sbb
cdq
nop
std
or
inc
ror
outs
mov
sar
adc
ror
aad
cmp
jg
int3
pop
test
fnsave
mov
jns
shl
fiadd
int
retf
out
mov
push
push
popa
mov
gs
mov
push
jl
ret
inc
mov
daa
ja
gs
mov
dec
jno
jae
stos
xlat
retf
imul
not
arpl
mov
ret
or
mov
pop
call
inc
jo
adc
test
cli
out
mov
xchg
inc
adc
jmp
aaa
js
pop
mov
std
gs
fnstcw
xchg
add
stos
cli
out
movs
xor
outs
jmp
or
mov
and
inc
inc
retf
jne
stos
and
loopne
ss
ror
mov
(bad)
test
es
int3
pop
xlat
mov
int3
arpl
dec
popa
push
std
hlt
fdivr
and
xchg
dec
repz
out
push
push
int3
adc
jno
xlat
add
lock
arpl
fcmovu
test
jmp
xchg
pusha
push
pop
lea
dec
lahf
fs
dec
jmp
push
push
bound
jns
push
and
push
push
mov
xchg
int3
jnp
test
outs
add
mov
jp
fs
inc
push
adc
test
jl
add
out
push
add
es
aad
sbb
das
movs
adc
rol
shl
sub
xchg
(bad)
enter
xchg
mov
loopne
add
mov
ins
jo
add
xchg
xor
push
iret
sar
aaa
test
test
dec
xchg
sbb
leave
mov
scas
lock
push
lods
cs
and
shl
sub
dec
data16
retf
icebp
test
xor
adc
leave
arpl
stc
ds
inc
add
call
retf
mov
loop
ss
jno
jno
jmp
jp
add
(bad)
repnz
pop
dec
pop
mov
addr16
cmc
xor
cmps
add
sahf
scas
call
test
jg
es
xchg
jmp
jno
iret
push
mov
jp
aaa
xor
push
lock
jns
dec
fldcw
dec
(bad)
sbb
adc
hlt
cs
pop
jbe
cli
mov
jmp
add
push
and
sub
cli
ins
mov
enter
cmp
retf
inc
ins
sbb
and
popf
shl
movdqu
ins
mov
mov
aas
sub
xor
push
movs
inc
es
xchg
cmps
inc
mov
cs
addr16
cmp
jmp
scas
adc
mov
pop
pop
fild
xchg
cs
mov
xlat
int
fs
cmps
cmp
xor
pop
pop
nop
jecxz
into
movs
mov
inc
adc
test
stos
cs
loop
fldcw
sbb
sub
je
mov
and
mov
ins
and
test
mov
scas
pop
call
mov
fcmovnbe
in
out
outs
aam
sbb
and
jp
iret
in
jge
mov
sbb
lea
pop
mov
jecxz
outs
(bad)
out
inc
ficomp
outs
shl
imul
(bad)
mov
ins
jmp
jmp
es
mov
xlat
outs
fdiv
pop
clc
xchg
popf
mov
mov
jge
adc
mov
rol
cmp
ss
aad
pusha
ins
or
mov
mov
jecxz
aad
fst
jl
enter
push
loopne
mov
out
bound
jo
adc
mov
jl
sbb
call
cs
add
outs
pop
sar
jmp
inc
dec
push
mov
add
sub
dec
inc
pusha
pop
ret
and
pop
bound
cmp
ss
cmps
in
mov
fwait
xchg
cmp
or
cwde
mov
loope
(bad)
xchg
imul
lods
addr16
jnp
repz
add
mov
les
das
lods
stc
cmp
int
inc
jne
mov
mov
pop
sub
test
outs
cdq
push
pop
and
or
outs
clc
jno
push
xchg
fiadd
lods
and
arpl
jmp
push
or
in
jns
xchg
cmps
pop
cmp
ins
shr
icebp
adc
fs
loopne
pop
pop
cwde
iret
aad
add
or
add
mov
mul
sub
sub
imul
imul
retf
mov
(bad)
pop
adc
sub
push
push
iret
jle
sahf
call
stc
fwait
and
repnz
into
(bad)
aad
mov
fidiv
sbb
dec
gs
dec
cli
mov
mov
or
lods
aaa
in
jecxz
call
or
jmp
hlt
fcomp
inc
out
sahf
jmp
xchg
jl
pop
pop
call
pop
shl
dec
call
push
lds
jp
fisub
es
xlat
push
jmp
sahf
jecxz
or
idiv
sub
inc
sbb
or
test
clc
out
shl
in
push
ss
add
xchg
xchg
jo
call
outs
mov
push
xchg
fwait
jo
dec
add
pop
gs
mov
add
cdq
dec
xchg
clc
ror
sbb
(bad)
lods
push
icebp
retf
ins
or
adc
cmp
(bad)
loop
dec
xor
fisttp
inc
xchg
cs
mov
imul
xchg
adc
cmp
push
not
pusha
retf
add
mov
test
jp
jno
push
inc
or
inc
pop
shr
adc
out
imul
pop
mov
stos
mov
scas
test
adc
inc
and
jge
jl
in
mov
sub
or
jmp
outs
push
mov
int
mov
jecxz
in
inc
cmps
cmp
ins
mov
inc
cmps
(bad)
pop
dec
or
add
mov
jmp
mov
jae
cmc
(bad)
iret
and
aad
loopne
cmp
popf
push
lock
push
call
es
sbb
cmp
les
mov
dec
call
(bad)
sub
adc
int
push
adc
dec
jbe
adc
add
jmp
push
ficom
ja
or
clc
sub
test
test
js
sbb
xor
sahf
add
jne
xchg
data16
lea
sbb
push
ins
mov
and
dec
cmc
or
stos
out
dec
dec
(bad)
mov
adc
out
cli
jbe
sbb
cmp
in
push
mov
je
cmps
pop
retf
sbb
ror
retf
in
scas
stos
ret
test
lds
sub
rcl
pushf
ja
(bad)
and
loop
popf
dec
js
out
cdq
add
mov
cmp
xor
mov
xchg
push
ret
dec
sahf
xor
loopne
mov
pop
movs
mov
push
pop
mov
frstor
clc
push
mov
scas
inc
leave
pushf
xlat
hlt
dec
pop
fs
fs
idiv
push
ror
push
imul
outs
mov
mov
or
cmps
test
test
outs
fcmovnbe
sub
cs
or
sub
arpl
or
pushf
jno
aas
sub
push
fs
jmp
pop
mov
dec
dec
sahf
or
inc
ds
cmps
adc
jbe
stc
out
push
sbb
jp
and
and
cs
lods
inc
cmps
in
mov
xor
and
xchg
sbb
adc
fcom
je
pop
popf
pop
sti
xchg
clc
xor
addr16
sub
xchg
aad
or
dec
movs
ret
push
ins
jbe
out
push
sahf
cwde
into
pop
sub
in
inc
dec
sbb
hlt
cmp
sub
sbb
lds
push
add
jp
mov
dec
pop
jg
jnp
and
or
xor
addr16
add
jg
leave
(bad)
pop
jecxz
dec
fiadd
lods
jb
pop
mov
imul
ret
test
cvtpi2ps
retf
mov
pushf
mov
dec
jbe
lds
fcmove
stos
cmp
rol
inc
and
or
sbb
ja
mov
mov
adc
hlt
push
pop
dec
jno
popf
xor
xlat
stos
repz
sub
xor
jp
je
jnp
xchg
cmp
cmc
push
cmp
sbb
fld
pop
cmps
in
dec
std
outs
inc
lods
xor
ficom
cmp
out
xchg
out
sti
lea
push
add
clc
push
dec
add
dec
ret
and
sbb
or
in
sub
sbb
neg
gs
jns
sub
xor
push
fdiv
and
sbb
mov
repnz
mov
xor
add
xlat
xchg
ins
push
mov
sub
jne
ds
cmp
ret
sti
scas
xor
repnz
or
gs
sub
jne
inc
fdiv
(bad)
pop
fdiv
fwait
mov
mov
inc
add
(bad)
xchg
imul
jnp
(bad)
jb
pop
ss
jno
loop
cmp
std
pop
(bad)
(bad)
call
cmp
movs
mov
fild
stos
test
mov
lds
inc
cmp
outs
popa
ret
add
sub
sbb
pusha
popa
add
mov
jmp
dec
push
dec
jb
mov
call
cli
mov
sub
cmp
jnp
sbb
cmp
pop
(bad)
fisttp
push
mov
adc
xor
ds
sub
jo
inc
pop
aam
mov
push
mov
pop
sbb
xchg
mov
shl
jp
cmps
jecxz
adc
xor
hlt
xor
into
and
das
arpl
fs
adc
push
cs
cmp
cld
fldenv
call
xor
push
mov
lahf
mov
cdq
inc
mov
jp
call
inc
(bad)
mov
int
popa
dec
cli
cmp
jb
int
mov
inc
xchg
pop
mov
dec
pop
pop
leave
out
sbb
dec
push
in
aam
mov
adc
pop
popa
fmul
mov
mov
xchg
adc
mov
or
int3
jno
sub
adc
hlt
jb
repz
sub
shl
xor
xchg
xchg
outs
lock
push
fdiv
ret
mov
push
pop
cmps
cmp
imul
dec
(bad)
aad
and
push
adc
lds
sbb
dec
pop
mov
mov
in
mov
adc
push
js
rol
cdq
pop
es
pop
and
sahf
jmp
xchg
or
push
arpl
add
std
int
xchg
sar
jb
sub
sub
dec
cmp
outs
pop
and
push
mov
cmp
cld
cdq
les
push
clc
push
in
hlt
pop
jne
mov
popa
scas
pop
mov
mov
mov
lods
sub
popa
mov
lea
or
out
repz
add
ret
sbb
or
outs
stos
adc
jle
fcomp
add
test
std
xchg
and
xchg
cdq
ins
test
inc
sub
addr16
mov
in
in
adc
call
inc
lds
mov
xor
mov
sub
out
jg
jecxz
xchg
bswap
sub
xchg
xchg
icebp
fwait
jge
in
mov
jae
jg
fimul
fild
fisub
cmp
mov
jnp
cmp
dec
lahf
xchg
sbb
call
xlat
ss
repnz
inc
jbe
ror
or
cmp
aam
mov
cmp
push
inc
or
out
dec
jl
jg
pop
loopne
aas
out
imul
xor
rcr
sbb
inc
push
mov
add
(bad)
push
mov
or
dec
or
loopne
pop
mov
xor
mov
adc
ins
inc
inc
in
sbb
mov
dec
sub
dec
xchg
out
icebp
mov
sti
ss
jae
add
mov
test
shl
pop
mov
push
push
idiv
add
sbb
push
cmp
push
add
ret
fidiv
mov
fcmovne
jg
add
mov
(bad)
in
outs
mov
pop
cmp
inc
xchg
jge
mov
loop
cld
or
adc
(bad)
retf
mov
adc
(bad)
lods
fisubr
enter
adc
fcmovb
or
fmul
cs
inc
fcomp
in
lods
dec
push
xchg
sub
cli
out
test
mov
jnp
sbb
popa
adc
jp
add
cmp
idiv
inc
jb
repz
or
ins
mov
popa
(bad)
mov
lods
adc
jnp
ret
loopne
lea
call
je
mov
xor
daa
sbb
in
mov
mov
std
ficomp
lods
fidiv
sbb
hlt
loope
cmps
or
mov
enter
mov
add
scas
push
(bad)
int3
sbb
cld
ret
pop
enter
dec
mov
jb
xor
ss
xchg
outs
adc
repz
das
jne
test
pop
rcl
(bad)
jns
jmp
(bad)
mov
lds
push
push
push
adc
push
xor
jne
cli
mov
nop
push
jns
cwde
shl
repnz
cmp
adc
mov
pop
cli
jmp
pop
push
loopne
sbb
stc
lahf
loop
leave
dec
repnz
sub
xchg
outs
rcr
sub
pusha
and
pop
les
stos
cmp
enter
sub
daa
jge
dec
enter
sbb
jno
popa
ja
pop
in
mov
dec
push
inc
(bad)
mov
(bad)
out
ss
mov
aad
mov
jbe
sahf
test
pop
stos
sbb
jp
nop
data16
adc
mov
jmp
adc
es
adc
std
pop
gs
movs
sub
call
or
push
dec
not
add
xchg
jo
add
(bad)
pushf
and
mov
rcl
sub
xor
rcr
repnz
cmps
cmp
inc
mov
xchg
je
inc
out
dec
in
mov
or
movs
push
mov
xor
pushf
aas
pop
imul
mov
push
cmp
out
leave
and
jne
dec
dec
repnz
cmp
ins
test
push
lods
popf
(bad)
test
retf
add
in
fwait
popa
jl
push
lock
sub
xlat
push
hlt
mov
imul
xor
mov
xchg
inc
mov
in
outs
pop
in
repz
inc
jmp
mov
inc
xor
(bad)
lods
retf
in
pop
and
(bad)
loopne
stos
fistp
inc
call
ins
ja
jecxz
push
jp
ins
mov
jo
dec
push
fwait
adc
adc
and
sbb
xchg
ss
mov
inc
popa
xchg
mov
xchg
push
call
fdiv
sub
iret
adc
xor
push
ror
inc
in
ret
cmp
cmps
xor
out
sub
scas
ja
scas
mov
icebp
mov
and
ds
dec
int3
and
retf
mov
out
add
retf
xor
xlat
jecxz
sbb
jne
int3
retf
leave
sar
push
stc
mov
and
dec
stos
enter
(bad)
sub
imul
push
clc
mov
(bad)
dec
xchg
pop
push
mov
lods
dec
inc
or
aaa
jecxz
sahf
mov
in
push
sbb
dec
movs
fld
mov
inc
leave
scas
push
mov
and
pop
fst
mov
pop
cmp
xchg
jo
xchg
or
ins
adc
jb
iret
jb
add
dec
movs
imul
add
scas
stos
xchg
mov
enter
out
lahf
rol
out
setge
je
shl
in
repz
sbb
mov
sbb
cdq
in
add
retf
sub
and
dec
nop
ds
(bad)
jmp
jns
or
scas
mov
mov
ins
stos
inc
cli
popf
dec
dec
dec
ret
shr
push
fnstenv
(bad)
rcr
xchg
jle
fist
in
or
ins
ins
and
push
pop
dec
pop
jb
jp
mov
cdq
jle
sbb
push
loopne
add
mov
xchg
mov
rcl
lods
shl
mov
(bad)
js
icebp
hlt
leave
jge
cmps
mov
sub
pusha
jg
popa
arpl
mov
mov
or
pop
fsubr
pop
cld
mov
pop
sub
and
jge
mov
mov
xchg
loop
dec
aad
pop
clc
outs
or
jb
mov
xchg
mov
mov
idiv
pop
push
out
(bad)
sub
sbb
sub
add
das
lea
retf
loop
sub
mov
pushf
cmps
xor
push
pop
int
cli
jo
shr
push
ds
xor
popa
xchg
sub
sbb
popa
inc
mov
ss
jbe
dec
cmps
lods
jne
cmps
dec
outs
(bad)
cmp
inc
cmp
mov
jmp
shr
pusha
inc
inc
pusha
xchg
aas
ds
mov
test
sub
xor
xchg
mov
sbb
push
adc
stos
pop
xor
xchg
(bad)
mov
xchg
lea
cmp
cli
push
ret
test
dec
push
add
push
sar
dec
jg
lods
xor
mov
(bad)
call
ror
adc
mov
pushf
cmps
call
mov
xchg
xchg
mov
inc
adc
inc
shl
and
add
pop
test
stc
sbb
das
shl
add
dec
mov
jmp
mov
aas
daa
dec
sub
and
dec
and
aaa
gs
int3
pop
fnstcw
pop
xor
pop
mov
ficom
dec
call
int
and
movs
jg
xchg
jno
cdq
arpl
mov
sti
fwait
(bad)
inc
mov
sbb
bound
dec
mov
mov
inc
pop
imul
aam
push
xor
sub
daa
adc
pop
push
lahf
daa
fld
je
retf
xlat
lods
std
(bad)
lods
jl
or
push
cmp
pop
lds
imul
idiv
mov
xchg
or
cmps
pop
and
jg
add
mov
xchg
cwde
push
and
push
mov
dec
lock
ja
or
fisubr
mov
stos
sbb
push
scas
and
hlt
arpl
add
sub
sub
mov
in
retf
mov
adc
es
push
data16
xor
xchg
stos
pop
les
push
out
mov
das
mov
imul
mov
xabort
lahf
adc
in
iret
out
fist
mov
jo
rol
outs
mov
daa
jno
or
in
jmp
hlt
xchg
xchg
cmp
xor
jg
and
mov
push
sbb
lahf
inc
cmp
xchg
pop
cld
loop
cmp
mov
cmc
jae
pop
sub
jne
push
shr
ret
mov
scas
xor
imul
pop
mov
xlat
ins
inc
xchg
push
pop
inc
xor
xchg
imul
outs
mov
add
dec
fwait
push
ror
adc
mov
dec
jmp
shr
push
out
jmp
int3
sbb
mov
fnstenv
rol
mov
ins
and
ins
sbb
inc
sahf
dec
or
cld
xchg
loop
or
cmp
es
xchg
sbb
mov
sbb
imul
sub
xchg
ss
dec
ret
popa
or
ss
movs
cmp
in
retf
push
addr16
jae
in
call
xchg
(bad)
hlt
mov
je
sbb
dec
into
out
imul
shl
mov
int
into
cmc
mov
(bad)
jnp
movs
retf
add
fstp
fsub
in
jmp
std
add
dec
or
dec
jge
aam
adc
or
fmul
daa
or
inc
sub
iret
leave
repz
retf
aas
pop
mov
daa
das
lock
sub
jno
sbb
jp
call
xor
aaa
lods
ins
pop
xor
mov
neg
mov
sbb
mov
test
xchg
enter
xor
mov
ret
fdiv
aas
jno
adc
cmps
aas
jp
push
shr
push
clc
add
cmp
lds
jmp
jne
icebp
push
jmp
arpl
pop
mov
xlat
enter
pop
push
fwait
jle
imul
mov
sbb
fdivr
and
pop
and
or
sub
cmp
daa
stos
enter
out
or
jp
push
gs
into
xchg
sti
cmp
lock
fsubr
cli
adc
sub
mov
repnz
xor
jbe
adc
repnz
mov
stc
rcr
sbb
jae
adc
(bad)
lods
test
mov
cmps
jnp
sub
imul
push
sahf
pop
loopne
mov
retf
dec
pop
dec
add
mov
adc
dec
pop
mov
mov
cmc
js
cdq
jge
cmp
sbb
or
in
mov
push
fsubr
inc
test
add
cwde
cmps
dec
jp
sbb
xchg
pop
(bad)
mov
mov
and
repnz
scas
loop
out
mov
cli
xchg
jl
test
mov
xchg
mov
push
fcomp
cmp
mov
cmp
mov
jmp
data16
loopne
dec
add
mov
jae
inc
cmp
sbb
mov
imul
jmp
xlat
or
mov
loope
dec
mov
jae
cbw
push
out
div
retf
and
rcl
aad
pushf
mov
outs
mov
(bad)
fidiv
xor
call
adc
fdiv
cmp
das
jnp
push
mov
jp
push
lods
cmp
push
inc
stos
fnstsw
mov
mov
sub
js
jg
(bad)
in
pop
cmp
out
adc
mov
adc
dec
test
lock
(bad)
(bad)
cs
push
push
jp
(bad)
fs
cmps
push
dec
inc
pop
sar
mov
push
scas
cwde
out
aas
test
daa
pop
test
ds
inc
out
into
mov
mov
mov
cmps
mov
pop
cmps
dec
fimul
sub
pop
jo
(bad)
and
in
inc
hlt
jl
inc
mov
sar
xchg
ret
adc
jle
pop
stos
test
pop
xor
test
inc
adc
push
mov
repz
cmp
outs
mov
aam
inc
xchg
and
jg
adc
xchg
xlat
dec
and
adc
mov
movs
mov
mov
sub
test
sub
out
jae
mov
data16
test
xor
cmp
xor
cmp
mov
pop
push
push
push
add
adc
xchg
sbb
daa
call
and
mov
mov
inc
mov
jle
ins
or
pop
fbstp
and
repnz
cld
add
fsubrp
sbb
sub
jns
inc
xlat
push
inc
adc
clc
dec
fistp
scas
jge
fbld
sub
sub
mov
dec
sbb
jg
call
in
popa
add
clc
jg
jmp
and
fild
jecxz
pinsrw
push
scas
push
arpl
mov
repz
sub
sbb
push
sbb
inc
mov
xchg
in
imul
mov
or
loope
dec
mov
sbb
sbb
(bad)
hlt
sub
and
call
arpl
adc
les
(bad)
fisub
jne
test
inc
sub
fld
repnz
push
dec
jmp
lea
push
rol
(bad)
pusha
and
jne
sub
adc
pop
pop
mov
lahf
outs
inc
test
sub
imul
clc
jp
xor
cmp
mov
mov
test
rcr
or
(bad)
jp
mov
jmp
stos
mov
cmp
mov
lahf
mov
push
mov
aas
shl
leave
mov
popf
into
fdiv
sbb
ds
les
fldcw
(bad)
retf
cmp
add
jbe
mov
inc
dec
fild
dec
jns
mov
clc
jge
les
addr16
cmp
mov
pop
mov
inc
dec
push
jl
add
in
movs
or
dec
and
(bad)
mov
inc
dec
xrelease
adc
dec
cmc
sbb
cmp
sub
mov
mov
inc
ja
cmps
test
out
xor
loope
retf
mov
jmp
and
jo
test
mov
sbb
jg
dec
idiv
pop
push
std
fisubr
fcmovne
cld
lods
add
and
es
jns
mov
push
inc
sub
pop
in
push
or
dec
outs
jnp
xor
push
daa
into
xor
pop
lock
cld
sub
sub
cmp
adc
sbb
mov
enter
rcr
neg
adc
daa
scas
out
daa
lods
or
movs
jg
mov
mov
int
call
cmp
hlt
aas
popf
stos
int
xchg
lods
add
imul
dec
jae
fcom
pop
inc
out
das
adc
mov
(bad)
call
push
movs
jmp
repz
xchg
bound
das
adc
fwait
add
cmp
(bad)
rol
das
jae
retf
pop
sub
inc
jbe
mov
das
repnz
(bad)
lock
fnstcw
call
enter
xor
push
mov
out
out
ss
mov
adc
mov
sar
stos
mov
jae
xor
mov
ret
stos
jo
stos
inc
jle
sub
cli
pop
jmp
mov
sti
daa
inc
inc
mov
mov
mov
(bad)
and
sub
push
enter
cwde
and
aam
hlt
inc
cmps
xchg
mov
(bad)
fcmovbe
rcl
mov
mov
gs
mov
adc
lock
sub
inc
icebp
or
(bad)
inc
dec
push
mov
lahf
cmp
fadd
rcl
pop
mov
mov
pop
xchg
arpl
shl
clc
(bad)
xchg
jo
sbb
xlat
jbe
xor
call
or
dec
or
test
cli
(bad)
in
jae
push
ret
inc
cmc
aaa
enter
punpckhbw
push
adc
inc
push
mov
xchg
push
int
jno
jecxz
test
movs
dec
and
inc
jb
ja
ret
iret
inc
sub
dec
ja
mov
ins
mov
cmp
cmp
fisttp
inc
jmp
jns
inc
xor
mov
neg
mov
loopne
or
hlt
icebp
fild
inc
iret
cmp
add
bound
jp
add
stc
jmp
inc
jl
sbb
shl
push
cld
xor
(bad)
xlat
jb
adc
std
or
pop
jl
aad
push
(bad)
rcr
push
inc
jmp
hlt
fs
jns
cmp
scas
xor
jnp
xor
jo
push
mov
add
loopne
aad
xor
(bad)
or
test
jle
inc
dec
and
mov
ret
test
fcmovnu
xchg
jnp
jne
test
push
add
call
cmp
test
and
mov
push
adc
cmp
aas
sub
add
or
sbb
inc
or
hlt
bound
xor
add
adc
jg
lea
mov
adc
push
fmul
add
shl
add
addr16
jbe
mov
add
hlt
inc
ror
sub
push
ins
inc
popf
sub
ins
shl
enter
sub
fsub
cmp
push
nop
adc
int
inc
xchg
add
add
cmp
add
xor
pop
nop
cmp
movs
push
push
fdiv
push
xchg
cdq
dec
loope
mov
jg
dec
hlt
mov
fcomip
sub
test
cmp
les
and
sahf
into
push
or
jmp
jp
loop
xor
and
cwde
adc
and
push
aaa
add
adc
stos
xchg
mov
xorps
loop
out
sbb
add
sbb
pop
out
xchg
scas
cmp
cmp
xor
mov
cmp
mov
push
test
arpl
jmp
dec
adc
and
pop
inc
daa
mov
or
cdq
aad
sahf
stos
push
push
mov
rol
ret
out
imul
and
cmp
inc
pop
xor
adc
dec
inc
sub
add
fdiv
(bad)
pop
lahf
(bad)
push
shl
xor
mov
jns
mov
xlat
stos
sub
shl
daa
std
adc
push
loop
mov
sbb
in
leave
in
inc
inc
imul
mov
or
mov
or
mov
or
mov
test
sub
or
lods
sbb
fadd
fld
jno
jmp
push
inc
or
sbb
lock
rol
xchg
sbb
or
cmc
mov
mov
lock
imul
outs
push
mov
sub
cmc
mov
call
jg
popa
aad
inc
push
inc
xor
xor
xor
retf
neg
xchg
add
push
mov
hlt
jnp
adc
or
ror
push
push
data16
push
push
sbb
xor
and
sub
xor
imul
mov
arpl
int3
or
pop
mov
ins
push
fiadd
test
mov
inc
addr16
mov
test
(bad)
push
jg
shl
cld
mov
xor
inc
jl
sahf
jmp
cwde
std
daa
mov
mov
jecxz
jns
clc
pushf
popf
clc
dec
in
test
or
pushf
or
daa
pop
sub
clc
xor
dec
aad
addr16
std
sbb
dec
add
ficomp
test
pop
push
dec
inc
mov
jbe
mov
mov
jmp
or
pop
pusha
mov
cld
adc
inc
or
dec
xor
and
sbb
xor
or
pop
add
xor
dec
or
call
jnp
out
fwait
mov
jne
pop
mov
loope
cwde
(bad)
clc
rol
or
push
or
mov
and
and
sub
and
and
sub
and
sub
fbstp
adc
jnp
mov
inc
fs
mov
sbb
inc
sbb
or
(bad)
sbb
nop
ins
mov
jmp
adc
std
adc
add
mov
inc
(bad)
jp
retf
popf
cwde
das
dec
cmp
mov
imul
mov
aas
cld
pop
push
xlat
test
xor
loopne
or
or
pusha
sahf
add
fimul
add
push
or
and
add
rcl
and
inc
pop
inc
or
mov
lea
xlat
xchg
mov
loope
cwde
(bad)
jmp
push
mov
mov
mov
and
sub
and
and
sub
and
sub
xor
or
mov
inc
mov
push
push
int
gs
push
jge
fldcw
div
inc
lods
dec
sub
retf
jmp
pop
and
sub
popf
movs
popa
xchg
aas
push
jne
adc
mov
adc
push
ret
(bad)
popf
xlat
jge
fcmovnbe
pop
mov
and
and
shl
jmp
adc
fsubr
sub
jg
sub
jns
xor
sub
test
scas
gs
mov
sahf
jns
stos
sahf
jge
pop
pushf
(bad)
ja
jecxz
mov
(bad)
clc
iret
jmp
int3
xchg
cwde
mov
jl
int3
jns
lahf
sbb
out
mov
pop
inc
rcl
jp
or
or
mov
pusha
div
div
sti
out
jnp
mov
mov
mov
pop
xchg
cmp
(bad)
movs
or
inc
sbb
add
mov
enter
mov
nop
imul
add
xchg
aad
retf
add
or
pop
push
mov
pop
add
cmps
cmp
(bad)
ss
adc
fcomp
sbb
dec
jl
fsubr
sub
cmps
inc
retf
jmp
mov
sub
(bad)
push
test
push
pop
or
inc
add
xor
jns
jns
push
cld
rcl
dec
add
xor
mov
les
shl
ds
dec
lods
push
sub
push
mov
xor
aam
mov
mov
outs
in
stos
inc
gs
or
pop
xchg
push
addr16
xchg
hlt
pop
movs
push
sub
sub
mov
fs
push
sub
js
xchg
popa
jae
dec
inc
cmp
imul
lods
sbb
ror
ss
ins
mov
mov
and
add
or
enter
inc
xchg
push
jae
ds
xor
push
mov
inc
iret
jg
fisub
lock
dec
jno
push
and
ret
outs
test
sbb
mov
xor
inc
cmps
and
mov
mov
adc
or
xor
add
or
push
mov
mov
add
and
ret
cmp
jmp
inc
dec
dec
fdivr
pusha
add
add
add
add
add
add
xor
xor
push
outs
cmp
fs
addr16
mov
arpl
or
adc
adc
push
loopne
add
mov
cmc
mov
sti
add
dec
pop
dec
popa
inc
push
fisub
loope
inc
xor
add
push
dec
push
pop
sbb
cld
loopne
rcr
bswap
add
inc
ror
xchg
jo
loopne
add
xor
mov
or
nop
int3
int
pop
pushf
mov
inc
jmp
pop
pushf
int3
jno
xchg
in
popf
mov
mov
and
jae
xchg
call
add
shl
rol
add
add
push
je
loopne
and
or
xor
adc
and
rol
call
mov
mov
loop
inc
cdq
retfw
mov
xchg
adc
inc
in
js
inc
ss
data16
sbb
xor
xchg
mov
stos
xor
pop
mov
fidivr
pop
pop
pop
(bad)
loop
test
push
fxch
xchg
nop
xchg
jmp
sbb
cmp
cdq
call
pop
stc
jo
lock
push
add
test
and
push
add
adc
jmp
mov
les
mov
popa
ret
sub
and
xchg
loop
hlt
ror
mov
int
pusha
inc
pop
fyl2x
cdq
pop
bound
xor
dec
bnd
imul
loopne
fsubr
and
mov
inc
push
(bad)
push
retf
movs
test
fsub
jl
mov
in
loope
mov
xor
mov
call
xchg
aam
add
or
inc
add
and
sbb
pusha
leave
and
cwde
xor
xchg
es
xor
es
xor
and
cwde
xor
mov
pop
repz
(bad)
xlat
sub
nop
jle
xor
lods
and
inc
sub
mov
mov
or
and
sub
movs
sysenter
or
or
cmp
or
rol
cmps
and
popf
add
cwde
pop
sbb
xor
push
sub
pushf
or
adc
or
mov
lods
hlt
push
add
mov
ins
add
ret
adc
adc
adc
dec
inc
mov
sub
shl
jo
int
push
or
ins
mov
cwde
inc
xchg
lds
adc
fsub
xor
push
push
mov
adc
and
pop
jo
call
and
add
push
imul
out
fild
repnz
push
mov
gs
(bad)
iret
sub
and
mov
sub
addr16
into
push
jg
jne
xchg
mov
jne
jnp
fwait
sbb
mov
popf
xor
add
mov
adc
fndisi(8087
mov
sti
and
stc
adc
and
dec
xchg
jl
jge
sub
ins
push
pop
adc
or
in
jp
mov
ficom
clc
and
cmp
mov
scas
push
(bad)
jnp
dec
pop
sahf
pushf
scas
dec
icebp
add
pop
loope
cmps
jle
xor
push
mov
stos
fcomp
xor
xchg
xchg
test
or
fimul
iret
cli
mov
mov
mov
imul
in
sbb
inc
popa
or
lock
jb
stos
or
xchg
enter
js
pop
push
nop
shr
imul
pusha
adc
cmp
push
(bad)
std
push
cmp
push
and
aas
(bad)
int3
mov
jmp
mov
pop
mov
push
sub
sbb
and
sub
push
cmp
aaa
stc
je
mov
ror
xor
mov
push
jno
imul
add
push
push
and
js
xchg
enter
cli
(bad)
inc
pop
xor
out
dec
xlat
or
in
push
xchg
ret
sahf
scas
cmp
add
mov
pop
outs
jecxz
fcmovbe
add
fldenv
scas
bound
dec
jbe
pop
push
mov
adc
test
sar
fild
xor
lods
xlat
in
and
aaa
clc
mov
cmc
cwde
push
dec
aam
jp
in
pop
mov
adc
aaa
repnz
arpl
dec
lds
fld
pop
pushf
cs
push
lods
inc
sahf
cli
iret
mov
sti
clc
stos
ins
pop
(bad)
cmp
mov
sbb
mov
popf
mov
popf
lahf
push
fwait
ins
cli
out
pop
pop
out
dec
jl
xchg
and
sbb
or
fcomp
jno
std
lds
xor
jae
cli
xor
ins
mov
jbe
push
fsub
fcomp
add
sahf
out
loope
xchg
out
lock
adc
ss
(bad)
idiv
jge
sbb
cmp
pop
cmp
cdq
std
out
push
int3
retf
xor
iret
pop
fdivr
sbb
jmp
sar
ins
sbb
jns
xchg
mov
mov
retf
aad
mov
cmp
jae
cmp
inc
cmp
test
xchg
jle
pop
sub
jne
movs
mov
add
pop
adc
xchg
sub
ins
and
adc
cmp
push
fcom
out
int
sub
sahf
jb
ins
ret
popf
outs
jae
fcomp
mov
inc
ins
inc
cmps
enter
inc
fs
and
adc
data16
les
jo
scas
mov
test
jmp
pop
fwait
jmp
or
inc
sub
mov
add
or
lock
arpl
pop
fwait
mov
mov
test
xor
mov
inc
and
cdq
(bad)
jnp
xchg
loopne
dec
push
mov
fist
loope
in
dec
call
and
mov
(bad)
push
lahf
scas
pushf
pop
ins
adc
repnz
icebp
fmul
sbb
gs
out
retf
jecxz
adc
mov
inc
cmp
mov
jmp
idiv
or
mov
shl
push
loopne
mov
mov
sub
jl
cmp
dec
inc
and
arpl
adc
mov
ror
and
aad
adc
daa
xchg
jno
gs
adc
les
ret
rol
outs
cmp
inc
adc
outs
stos
addr16
mov
jns
fldenv
hlt
shr
out
iret
aaa
sub
or
icebp
lahf
pop
cmps
pop
lds
hlt
mov
movs
sahf
cmp
dec
pop
pop
rcr
scas
inc
jne
retf
cmp
sub
fimul
cmc
scas
push
aad
inc
or
sahf
pmuludq
add
jmp
pop
daa
retf
push
ins
mov
inc
out
xchg
addr16
jns
loope
jle
jmp
ret
pop
daa
cmp
cmp
dec
or
xor
jbe
aam
inc
clc
xchg
cmps
jg
out
jnp
or
das
ins
fwait
pushf
mul
out
sbb
mov
rcr
call
sbb
int3
imul
int3
movs
in
(bad)
xchg
aaa
inc
je
mov
pop
fwait
clc
mov
(bad)
mov
jg
mov
inc
call
dec
jne
mov
nop
sbb
fstp
jne
ins
lahf
cmp
cmp
lahf
and
loopne
and
inc
cmp
pushf
gs
sbb
inc
in
cwde
cmp
std
retf
in
cli
jmp
add
in
fld
jecxz
in
xor
in
cmc
and
mov
sbb
popf
mov
bound
int3
add
mov
jbe
sbb
psllq
mov
mov
ins
clc
loopne
nop
ficomp
or
xlat
pop
and
adc
sbb
sbb
int3
mov
lahf
out
pop
ret
push
nop
dec
outs
int3
mov
lock
aas
test
xchg
mov
push
mov
mov
inc
adc
mov
dec
jb
call
sbb
in
pop
setp
pop
retf
or
cmp
add
mov
leave
mov
add
push
lds
add
sub
movs
push
push
sbb
and
or
sbb
(bad)
cwde
out
mov
lds
xchg
cli
inc
adc
mov
test
mov
sbb
jmp
js
inc
adc
popa
fstp
inc
add
mov
retf
adc
mov
push
push
adc
push
sub
inc
inc
jbe
call
icebp
lea
ret
jecxz
or
ret
inc
jmp
dec
adc
jecxz
cwde
sbb
xchg
(bad)
imul
(bad)
mov
adc
adc
ret
and
pop
ins
es
js
icebp
or
outs
fidiv
jbe
enter
sub
adc
pop
or
inc
inc
inc
jbe
fs
enter
js
jmp
inc
cdq
les
mov
popa
cli
cmc
in
pop
mov
xchg
(bad)
jl
nop
arpl
mov
jmp
shr
mov
ret
push
movs
add
sub
sbb
sub
inc
or
call
fstp
and
and
xchg
or
sub
mov
ja
scas
cmc
jecxz
test
in
retf
sbb
addr16
dec
repz
adc
inc
pop
ja
dec
push
(bad)
jo
scas
adc
pusha
cmp
xchg
push
loope
aas
pop
xor
push
adc
xor
idiv
popf
push
or
or
mov
rcr
pop
out
mov
mov
xor
jl
cld
push
fnsave
xor
dec
xor
inc
movs
and
lock
call
pop
ds
push
cwde
sbb
(bad)
scas
jns
cmp
mov
cmp
daa
outs
pop
addr16
and
xor
inc
sbb
ret
ret
sub
sbb
lods
es
nop
call
inc
std
xchg
or
into
loope
fabs
sahf
cmp
scas
daa
adc
adc
inc
mov
(bad)
cmps
dec
and
jp
sbb
jp
aas
lea
scas
pop
push
inc
pop
add
and
repnz
pop
in
aad
(bad)
popf
das
mov
shl
mov
jmp
fistp
xlat
paddsw
ins
mov
cmp
repz
cmp
mov
outs
inc
imul
in
xchg
lods
ret
ret
mov
inc
or
jle
dec
repz
jno
push
(bad)
xlat
arpl
xchg
test
pop
outs
mov
popa
shl
fist
pop
test
add
fnstsw
cmp
addr16
or
sub
call
adc
mov
mov
icebp
pop
and
sbb
fsubr
shl
jmp
mov
aas
mov
adc
xchg
ds
in
in
jb
mov
and
dec
repz
fild
les
pusha
dec
test
xor
test
inc
ret
push
or
xchg
and
aas
or
xchg
inc
or
jmp
xor
add
and
aas
add
fldenv
jmp
xchg
rol
ret
loop
jo
call
aaa
sub
fwait
jno
adc
mov
popf
xor
nop
cmp
stos
add
inc
sbb
pop
pop
ror
fwait
xchg
(bad)
cmp
add
pushf
sbb
(bad)
jg
xor
mov
push
or
dec
ficom
mov
xchg
adc
mul
lods
in
sub
mov
adc
push
std
cmps
arpl
and
outs
fcomp
push
fs
or
push
out
mov
test
sub
nop
test
(bad)
pop
xchg
push
jmp
int3
inc
bound
cmp
xlat
add
mov
fsubr
gs
rcr
add
sbb
pop
or
add
jl
ds
mov
or
(bad)
sub
ret
cli
ins
inc
jecxz
xchg
pop
mov
test
into
lock
adc
ja
dec
sbb
mov
mov
imul
ja
rol
dec
ja
xchg
pop
je
sbb
or
shl
lods
inc
lods
push
cmps
cmp
imul
xor
cli
inc
xor
inc
jecxz
lds
mov
(bad)
pop
call
clc
pop
xchg
icebp
cmc
push
icebp
icebp
inc
mov
or
jmp
sbb
aaa
stos
adc
push
cmp
lds
ror
ret
add
jl
xor
icebp
dec
xchg
add
repnz
sar
mov
outs
rcl
out
ins
mov
add
sub
push
mov
mul
inc
xor
enter
sti
sahf
or
mov
add
cwde
push
je
pop
mov
pop
or
jmp
pop
stc
inc
es
cmc
mov
in
adc
cmp
add
mov
adc
sub
call
cmp
and
repnz
scas
jmp
fdivr
jmp
and
sub
push
xchg
add
imul
push
pop
or
cmp
cmp
and
or
jbe
sbb
mov
mov
and
iret
gs
call
and
out
gs
mov
mov
sbb
in
div
arpl
cmp
pop
fwait
gs
cmp
push
xor
daa
mov
rol
std
enter
nop
loope
icebp
dec
inc
mov
sbb
mov
mov
add
lds
push
mov
dec
(bad)
sub
push
or
call
sbb
(bad)
cmp
out
ftst
retf
cmp
push
cmp
mov
mov
mov
mov
iret
sbb
fcomi
jecxz
and
imul
imul
or
mov
pushf
xchg
sub
mov
inc
sub
xchg
inc
pop
jge
jno
test
aam
into
fmul
div
aam
clc
xchg
add
iret
fs
xchg
and
inc
mov
jae
ja
add
hlt
retf
pop
cli
popf
add
push
sbb
out
mov
retf
sub
jmp
sar
iret
in
jae
shr
dec
fadd
mov
out
pop
call
(bad)
std
jp
mov
lods
jne
out
popf
cmp
cmps
(bad)
je
nop
mov
pop
lahf
push
lgs
and
and
stc
int3
addr16
mov
mov
mov
lods
pop
mov
pop
push
add
jno
repz
fdivr
movs
test
push
shl
xor
mov
and
dec
fcmovbe
std
cli
les
pop
stos
mov
and
sahf
outs
imul
fnstsw
mov
in
call
inc
push
pop
dec
(bad)
pop
(bad)
aad
jns
sub
xchg
cmp
lahf
(bad)
in
movs
push
cmp
mov
stc
or
fdiv
mov
push
in
inc
pushf
push
shl
cmp
js
pop
sar
and
test
mov
aas
jecxz
sbb
sub
dec
and
xchg
mov
add
xchg
mov
jmp
cli
xor
outs
mov
push
sbb
cmp
cmp
call
hlt
pop
icebp
xchg
or
pusha
jge
push
cmp
ss
jns
pop
sbb
lahf
out
ins
and
dec
cmp
dec
sbb
sub
int3
adc
bound
fild
retf
and
outs
fcos
mov
push
sbb
bound
mov
je
repnz
dec
popa
int
add
mov
jg
mov
and
in
dec
loopne
ja
xor
scas
jecxz
ins
push
adc
mov
or
sub
xlat
ds
dec
mov
xor
pop
repnz
ret
pop
lock
pop
outs
add
cmp
sbb
out
fcomi
test
push
ins
addr16
push
sbb
cmp
jecxz
fsubr
mov
xor
adc
inc
fisub
call
mov
lds
mov
ret
imul
pushf
sbb
popa
ins
sub
lods
test
pusha
mov
and
sbb
int
or
dec
imul
mov
xchg
dec
pop
fwait
xchg
addr16
pop
add
dec
sub
and
pop
cmp
sub
xchg
pop
mov
pop
and
lea
xor
stos
dec
int
ds
call
jmp
popa
stos
sbb
push
mov
repz
aad
aad
(bad)
sbb
xor
cdq
movs
mov
in
add
adc
lds
loop
inc
pop
mov
adc
and
stc
stos
in
jnp
cmps
cdq
bound
inc
jnp
or
push
leave
scas
or
cli
inc
iret
add
popf
mov
shl
xchg
stos
mov
retf
ins
jmp
std
jnp
xchg
xor
in
lahf
in
rol
scas
inc
fisubr
sub
lds
xchg
sbb
sti
xchg
rcr
cmps
xor
and
(bad)
push
adc
fild
push
push
inc
adc
pushf
iret
into
adc
push
fidivr
popf
ja
repnz
cmp
or
add
lahf
sbb
stos
mov
out
(bad)
shr
rol
lods
xchg
sti
daa
ins
cmp
mov
or
movs
jge
mov
loope
add
dec
popfw
mov
out
xor
xor
mov
ret
and
or
add
das
jl
nop
pop
mul
or
cmps
fdivp
and
sahf
xchg
and
cmp
sbb
jae
inc
fwait
push
ins
and
ret
sbb
gs
cmp
jecxz
dec
sub
pop
ss
pop
fild
out
ret
ins
mov
jne
inc
lea
sbb
fnsave
pop
adc
mov
dec
fwait
sbb
mov
add
jmp
mov
mov
lds
mov
jecxz
and
lods
mov
in
scas
leave
and
mov
inc
sar
gs
pop
pop
jns
pop
add
inc
rcr
mov
movs
dec
or
xor
adc
test
mov
mov
mov
and
sub
xchg
inc
pop
add
aaa
nop
js
add
repnz
sub
mov
mov
jbe
push
add
add
aaa
nop
js
add
or
inc
push
mov
push
sub
shr
add
bound
and
test
mov
outs
int3
push
lods
mov
and
sar
or
aaa
popa
icebp
mov
adc
push
std
sbb
fdivr
mov
or
ins
aad
ret
pop
fs
add
or
cmps
call
mov
loopne
pop
adc
bound
or
loopne
sub
(bad)
mov
add
push
xlat
stos
sub
mov
loopne
xor
cld
mov
scas
push
outs
ret
sub
shl
dec
fld
adc
inc
pop
dec
sbb
out
push
lods
adc
into
(bad)
sbb
faddp
mov
aad
call
in
adc
and
fsub
xchg
mov
or
loop
ret
cdq
mov
or
xor
mov
mov
nop
xchg
ds
addr16
push
pop
fstp
dec
mov
sahf
fldenv
sub
movs
leave
or
push
je
dec
xchg
mov
cmp
cmp
shl
ret
(bad)
cmp
pop
ds
jmp
fild
dec
mov
pushf
test
loope
jae
or
cmp
hlt
jmp
dec
pop
mov
retf
xor
movs
push
push
outs
in
add
call
sbb
sub
pop
add
addr16
inc
mov
das
inc
mov
in
sar
mov
out
(bad)
pushf
and
xlat
std
mov
sbb
and
rcl
adc
push
mov
and
pop
shr
cmp
push
add
push
mov
push
cs
mov
or
inc
adc
or
or
js
enter
add
sbb
ret
lods
sti
mov
xor
and
popa
fxch
test
cmp
pop
in
pop
jmp
ja
je
cmps
jmp
retf
jle
pmovmskb
xlat
mov
add
fild
pop
loop
pop
(bad)
mov
mov
ss
scas
out
jbe
fisub
test
lods
mov
adc
pop
pop
cmp
xchg
xor
fisub
addr16
mov
sbb
cmp
inc
ins
fucomip
lods
in
push
or
fs
aaa
(bad)
and
dec
xlat
div
cmp
cmps
(bad)
jb
push
std
xchg
jmp
pushf
mov
and
test
xor
into
out
mov
cli
xchg
paddsw
xchg
pop
movs
outs
call
adc
mov
cmc
adc
xor
pop
mov
jge
sbb
lahf
(bad)
jmp
sar
push
jnp
sti
pop
jne
mov
imul
mov
dec
xchg
jge
test
push
clc
push
xchg
cmp
(bad)
cmp
add
lock
jnp
pop
lods
or
dec
dec
stos
dec
mov
neg
sti
add
or
imul
xchg
lods
mov
inc
pop
xor
popf
int
mov
dec
pop
inc
repz
pop
xchg
cmp
cmp
lock
push
ret
sub
test
mov
cmp
sub
lods
imul
or
lods
xchg
bnd
int3
lods
xchg
pop
sbb
push
or
cwde
add
push
pusha
adc
jge
add
aad
inc
icebp
ror
stc
sub
aam
out
or
cmps
aas
sub
xor
xor
dec
popf
pushf
(bad)
mov
movhps
jbe
call
stos
mov
leave
jbe
(bad)
enter
mov
dec
inc
movs
pop
pop
jg
mov
fstp
dec
arpl
test
cmp
and
xchg
xchg
outs
inc
mov
push
ror
call
in
jmp
push
in
movs
scas
sub
pusha
jmp
fs
out
adc
or
xchg
xchg
adc
fmul
loop
dec
in
mov
js
loopne
aaa
mov
mov
add
xchg
sbb
mov
cmps
fld
mul
lods
shl
and
mov
pop
xlat
or
mov
retf
iret
pop
call
add
out
std
cmps
mov
scas
mov
xchg
jne
inc
inc
enter
xor
xor
xor
div
(bad)
scas
dec
test
cmps
rcr
xor
(bad)
push
(bad)
xchg
mov
ficomp
sub
fisub
fisttp
inc
not
xor
outs
pop
inc
fstp
mov
dec
jo
sbb
xchg
loop
scas
and
sbb
retf
xor
adc
jmp
inc
inc
fild
(bad)
pop
mov
xor
shl
sub
repz
mov
push
mov
cs
cmp
dec
mov
fs
mov
bound
std
in
xor
ds
cmps
jne
sub
jno
sub
in
push
pop
retf
dec
or
xor
pop
or
lea
fs
sbb
or
mov
dec
fstp
or
cmp
out
push
lahf
leave
pusha
jge
jns
ja
je
mov
pop
cwde
mov
mov
outs
pop
arpl
or
sahf
outs
mov
sub
xor
push
xchg
mov
call
inc
adc
xor
mov
pop
inc
ja
and
loop
jmp
push
adc
retf
mov
mov
out
add
pop
mov
not
mov
es
fisttp
(bad)
stc
scas
lock
aam
repnz
pop
retf
or
cmps
dec
push
inc
mov
pop
pop
xchg
xchg
lahf
jmp
cdq
pop
dec
int3
enter
jg
push
retf
out
(bad)
retf
xchg
inc
into
inc
dec
cmp
pushf
sub
loopne
(bad)
sub
scas
scas
lods
and
mov
cli
sub
sub
std
cmp
lahf
jp
inc
movs
push
dec
test
push
pop
lea
xor
pop
mov
add
mov
and
mov
test
push
ins
inc
dec
sbb
xchg
(bad)
aas
xor
jle
cdq
popf
cld
aas
push
and
sub
inc
mov
jmp
addr16
jo
cmps
xor
pop
std
(bad)
mov
adc
push
push
xor
sbb
lods
ins
loop
call
sub
mov
mov
imul
mov
not
ret
mov
adc
sub
adc
and
sbb
popa
sub
mov
push
sbb
mov
jg
inc
cld
cmp
lods
outs
xlat
in
cmp
and
jae
xor
lock
cwde
fstp
mov
mov
and
sub
addr16
nop
pop
addr16
ficomp
out
jl
push
sub
movs
pop
cwde
push
or
sub
mov
mov
daa
adc
icebp
pop
dec
std
inc
inc
push
push
movs
in
mov
je
and
mov
rcl
rcr
jnp
clc
add
call
(bad)
pop
sti
jge
push
mov
add
fldenv
mov
dec
and
ins
(bad)
jmp
daa
mov
(bad)
mov
jge
xlat
sub
and
jne
inc
cmp
data16
mov
cmp
mov
in
cmp
in
cmp
mov
xor
ins
jbe
xchg
sub
mov
shr
mov
lods
mov
ror
xor
jecxz
cmp
adc
test
test
idiv
dec
loopne
or
pop
push
mov
popa
add
jge
xchg
sub
scas
push
push
mov
enter
inc
xchg
cmp
ss
cmp
push
sub
and
and
outs
out
adc
mov
ins
lea
pop
sti
xchg
(bad)
cli
dec
cmp
mov
lds
pusha
jbe
sub
stos
rcl
stos
mov
pop
fsub
jnp
ror
adc
imul
imul
dec
loopne
adc
addr16
mov
dec
(bad)
xor
sbb
mov
lea
add
test
jp
das
add
addr16
(bad)
jne
cmp
fldcw
out
pop
jle
ds
jb
pop
mov
jecxz
cmp
js
push
jmp
and
ss
shl
aaa
adc
scas
cmovbe
adc
call
inc
xchg
jo
rcr
dec
cmps
out
test
cmps
dec
push
sbb
sbb
sbb
test
adc
div
mov
mov
fst
hlt
loope
xchg
mov
jecxz
fwait
loope
xchg
jl
cmp
iret
pop
(bad)
mov
sbb
jns
out
fsubr
fldenv
stos
mov
mov
imul
cmp
jecxz
mov
pusha
lock
retf
sbb
push
fist
fs
retf
movs
lods
fstp
push
stc
dec
psubb
fidivr
lock
aaa
mov
call
ret
push
jmp
pop
mov
ret
ret
sbb
mov
push
cs
pop
js
cmp
test
or
jg
into
inc
push
movs
bound
jns
out
mov
push
or
sbb
js
mov
iret
or
imul
test
cdq
pop
xor
out
dec
stc
ret
sub
pop
xchg
mov
adc
loope
jge
(bad)
daa
push
adc
out
pop
pop
int3
pop
sbb
retf
ret
xchg
sub
and
cdq
lea
jbe
(bad)
(bad)
hlt
ret
xchg
addr16
rcl
xchg
mov
sub
and
cmp
xor
cmps
mov
sbb
popf
test
je
jg
scas
add
(bad)
loopne
popa
imul
mov
mov
xor
cs
dec
cwde
inc
xor
or
jb
mov
outs
ror
in
xor
mov
dec
mov
movs
pusha
data16
mov
cdq
clc
sub
stos
ins
or
cdq
imul
ins
cmp
jmp
gs
push
pop
gs
mov
bound
rcl
ret
jne
mov
pop
mov
pop
jl
outs
cmps
pop
cwde
lods
and
xchg
cmp
retf
scas
mov
mov
repz
fcom
xchg
xchg
mov
in
std
mov
in
lds
retf
cdq
mov
cmp
mov
adc
inc
addr16
cwde
in
loope
jne
(bad)
dec
or
aam
ja
jecxz
outs
mov
outs
xchg
adc
imul
xchg
pop
scas
sbb
arpl
push
jmp
ja
add
stos
dec
pop
or
dec
push
lods
jecxz
out
xor
pop
push
scas
jmp
xor
fadd
xor
push
mov
fsubr
sub
push
in
pop
adc
iret
call
ja
jle
add
add
cli
inc
push
lahf
xchg
ret
mov
jae
adc
leave
sbb
movs
push
inc
popf
mov
mov
mov
jnp
in
(bad)
mov
(bad)
sub
les
mov
ror
push
push
sbb
icebp
mov
(bad)
cmp
inc
push
test
(bad)
rol
outs
imul
sbb
mov
jo
dec
in
jge
(bad)
test
cdq
push
lods
mov
idiv
jnp
in
sub
and
repz
jp
scas
dec
call
jae
jmp
sti
or
mov
aam
jns
out
mov
mov
fcomp
mov
pushf
xor
retf
je
dec
fs
inc
xchg
(bad)
stos
xchg
xchg
ins
ins
popa
dec
mov
lahf
es
mov
mov
jae
pushf
and
std
sahf
aad
arpl
mov
jecxz
pop
mov
mov
pop
loope
fdiv
test
jmp
(bad)
(bad)
mov
std
movs
push
cdq
out
pop
and
ds
pop
(bad)
xor
mov
fst
xchg
aas
jecxz
movs
xchg
push
xchg
fidivr
mov
add
add
xchg
pop
adc
(bad)
jmp
or
and
jecxz
shl
inc
cmps
mov
test
repnz
arpl
lahf
sbb
ret
pop
jbe
and
cmps
inc
mov
mov
div
loope
int3
push
das
mov
in
xadd
sbb
xor
inc
or
jne
and
cmp
jp
push
cmp
(bad)
or
sub
and
mov
mov
pusha
ins
sbb
das
sbb
cwde
or
xchg
out
(bad)
(bad)
jmp
jle
cs
gs
fcomp
pop
lock
jmp
in
cmps
dec
ja
mov
xor
movs
xchg
(bad)
lahf
inc
scas
add
ins
clc
jmp
xchg
sti
gs
cs
sbb
xor
cmps
mov
jmp
cmp
sub
pop
das
clc
movs
(bad)
add
movs
test
inc
sti
mov
xchg
std
pop
test
adc
ins
ds
cmp
and
or
in
sbb
aad
gs
pop
test
jo
or
lfs
(bad)
mov
xchg
fadd
cmps
lock
cwde
jb
fimul
out
out
dec
jmp
cmps
push
or
xlat
mov
mov
push
ret
dec
rol
sar
retf
jg
popa
add
mov
push
std
stos
inc
je
loopne
mov
push
call
sbb
lds
xchg
fst
arpl
movs
call
mov
das
fstp
idiv
(bad)
fsubp
pop
inc
imul
push
pop
sub
cmp
rcr
mov
inc
xchg
sbb
mov
daa
push
retf
xchg
hlt
dec
add
inc
cmp
xor
dec
cmp
mov
jmp
bound
adc
pop
push
mov
scas
inc
(bad)
lea
out
jmp
int
int
mov
lods
cdq
jl
mov
jle
ins
dec
rol
rcr
cmp
jmp
test
and
cmp
hlt
pop
cdq
add
pop
in
and
ss
retf
pusha
mov
fcom
imul
mov
addr16
add
jne
in
pushf
scas
mov
pop
cs
mov
xchg
sbb
lahf
cmps
mov
mov
out
lods
mov
dec
xchg
mov
xchg
xchg
sahf
mov
(bad)
mov
aas
out
adc
push
mov
(bad)
pop
lods
test
imul
out
mov
and
push
jmp
sub
movs
inc
mov
or
pop
and
repz
inc
adc
mov
(bad)
(bad)
mov
adc
xchg
data16
std
aas
adc
jmp
xor
(bad)
ins
or
aaa
inc
imul
iret
inc
int
cmp
jge
cmps
pop
xor
dec
sub
mov
and
push
mov
sbb
sbb
xor
cmps
cli
xchg
fs
test
out
fwait
dec
outs
xchg
mov
jle
dec
and
push
jno
dec
mov
in
ror
in
and
aam
sbb
cmp
or
iret
sub
nop
dec
xchg
addr16
and
imul
repz
dec
mov
xor
daa
xor
jge
sar
push
movs
push
icebp
sbb
out
mov
jle
je
out
add
sahf
inc
xlat
test
adc
pop
sub
movs
adc
inc
scas
xchg
fbstp
movs
stos
fdivr
sub
xchg
push
jae
data16
add
(bad)
dec
out
daa
repz
mov
gs
lahf
lock
jle
rcr
bound
and
mov
inc
mov
fild
(bad)
scas
push
add
cmp
aam
push
xor
fnstenv
inc
jp
neg
jmp
sub
mov
cwde
dec
retf
aad
mov
or
data16
sbb
push
les
loope
mov
dec
cld
or
sbb
push
mov
fdivr
jle
bsf
xchg
mov
sbb
sbb
ins
leave
or
mov
iret
lods
sub
stc
pop
adc
mov
test
pop
setno
pop
push
icebp
sub
dec
adc
mov
stos
pop
or
mov
mov
cdq
pop
mov
add
pusha
jp
je
in
sbb
ins
jb
(bad)
retf
repz
pushf
inc
push
sbb
push
fidivr
add
cdq
imul
gs
fmul
cmps
sbb
push
iret
movs
aam
je
mov
ins
stos
retf
pop
out
inc
mov
stc
and
fdiv
jno
out
adc
jne
pop
and
fiadd
jg
cmp
scas
or
push
dec
jne
test
test
test
jns
arpl
in
jb
push
push
in
out
and
bnd
repz
dec
mov
loope
cmps
add
inc
iret
jp
mov
stc
inc
movs
and
lds
rcl
mov
mov
sbb
add
stc
ror
sub
rcl
mov
push
xchg
mov
inc
cmp
push
in
dec
scas
xchg
jnp
mov
in
lahf
aam
rcl
sti
push
xchg
cmp
xor
scas
inc
fmulp
xor
mov
sbb
cmp
push
sbb
jg
inc
pop
bound
retf
pop
pop
mov
out
jge
aas
fsub
push
mov
push
enter
pop
mov
into
jb
pop
aad
jmp
jns
xchg
test
jno
sti
push
push
movs
jae
jno
dec
inc
ss
test
cmp
mov
arpl
sbb
aas
adc
arpl
jl
retf
and
inc
xor
(bad)
in
dec
sbb
mov
jmp
test
in
adc
push
and
sub
jb
xchg
dec
aam
lea
cmp
jge
and
pop
push
jnp
outs
out
ss
fstp
out
bt
iret
push
aas
adc
xchg
mov
and
sub
lock
xor
and
retf
dec
mov
inc
iret
pop
mov
out
into
iret
jle
or
mov
pop
dec
mov
sbb
and
fidivr
xchg
jae
xor
and
into
push
test
and
and
fnstenv
rcl
jmp
mov
sub
adc
mov
(bad)
into
jge
ins
jg
pop
cmc
fistp
sbb
sbb
mov
fimul
inc
jp
xor
sub
js
pop
repnz
stc
mov
jecxz
inc
cmp
mov
pop
not
jno
xor
cmp
(bad)
ins
ffree
in
shl
aas
push
not
shl
pusha
dec
sti
push
sub
sti
adc
mov
enter
mov
and
movs
mov
cwde
iret
les
mov
int3
jns
push
sar
fwait
dec
push
frstor
retf
xor
loope
jmp
mov
aas
jo
int3
push
sbb
lods
mov
jo
mov
xchg
jb
push
daa
mov
jbe
loopne
dec
mov
inc
pop
fstp
ins
ins
dec
sub
pop
push
mov
fdiv
cwde
mov
adc
outs
xor
mov
inc
xchg
fcom
mov
lea
shl
ficomp
jb
cs
xchg
push
or
jae
clc
imul
inc
ja
in
fnsave
ja
push
lds
int
pop
pop
mov
jmp
sti
outs
lock
inc
and
mov
repnz
inc
sbb
lock
dec
xchg
jne
jae
push
dec
ret
mov
push
mov
pushf
xchg
gs
popf
inc
inc
or
lea
daa
mov
adc
sar
stos
scas
in
sub
ret
pop
out
outs
push
jmp
push
and
es
(bad)
out
fild
jb
ja
pop
lods
out
call
push
push
hlt
and
out
test
repz
pop
jbe
jnp
jne
lods
xor
xchg
shr
dec
cmp
clc
jns
sbb
mov
jne
xchg
pop
mov
dec
hlt
inc
scas
pop
ins
mov
bound
push
sti
adc
mov
(bad)
jmp
cmp
push
cwde
push
xchg
das
retf
jnp
cmp
adc
xchg
popa
retfw
out
aas
adc
push
push
push
inc
inc
push
or
je
pop
xlat
mov
loop
mov
sti
ror
loop
dec
das
shl
dec
data16
sahf
jmp
(bad)
enter
mov
jo
test
mov
outs
push
adc
ret
jmp
dec
mov
xlat
stos
movs
xchg
iret
push
add
out
jle
jns
jecxz
scas
aam
jge
and
mov
les
mov
or
sub
mov
adc
mov
lds
loopne
cmps
movs
imul
and
cmp
inc
add
data16
data16
movs
pop
ins
pop
or
inc
aam
xchg
mov
sar
(bad)
cld
in
jmp
pop
popf
cmp
sbb
mov
inc
popf
shr
jl
mov
sti
cs
sub
lods
cdq
inc
pop
push
cmp
adc
pop
mov
sahf
xchg
loop
popf
jmp
push
push
pop
inc
(bad)
out
and
in
dec
(bad)
and
bsr
inc
out
push
out
icebp
or
mov
mov
xor
div
sbb
out
jns
gs
dec
fdivp
fst
pop
cmps
xor
es
les
sahf
leave
popf
test
or
push
mov
xor
cs
mov
push
imul
lods
xor
jmp
out
stos
mov
lods
pop
pop
sub
lods
cmp
ror
scas
scas
sub
pop
push
mov
add
pop
ins
(bad)
clc
jg
xor
outs
mov
mov
mov
test
mov
push
es
jnp
inc
cmp
and
mov
mov
popa
test
in
stc
sbb
stos
repnz
pop
aam
into
jg
clc
sahf
int
mov
jb
and
adc
fdiv
or
(bad)
jns
nop
inc
mov
or
push
mov
inc
movs
and
add
cmps
jl
mov
push
outs
push
mov
pop
popa
ret
scas
call
inc
repz
bound
xor
shr
in
mov
outs
stos
cmps
jg
in
fnstcw
adc
or
into
stos
sti
xchg
les
ins
jge
jecxz
sti
scas
push
xchg
outs
js
cs
int3
push
push
div
hlt
add
stos
add
pop
mov
dec
psubd
mov
stos
mov
push
loop
push
(bad)
lock
jae
bswap
aas
push
sar
xor
test
sub
cmps
cmp
std
and
loopne
repnz
das
push
(bad)
test
sub
mov
call
aad
jg
push
ds
popa
cs
push
jmp
xchg
and
(bad)
fs
xchg
test
pop
scas
add
adc
ds
ss
in
rcl
xchg
imul
scas
fadd
int
mov
push
adc
xchg
mov
jmp
xchg
or
jno
cmp
xor
xacquire
adc
push
outs
push
out
cmps
stos
in
adc
pop
lods
aad
pop
pushf
fistp
icebp
xor
mov
inc
push
xchg
fwait
mov
mov
in
mov
cmp
(bad)
outs
ret
jecxz
mov
mov
imul
xor
xor
(bad)
stos
inc
shl
push
sbb
mov
nop
mov
mov
mov
inc
or
pop
push
call
dec
sbb
lock
loopne
xor
xor
iret
and
mov
pop
jns
loope
int3
out
pop
push
repz
(bad)
stos
popf
test
icebp
out
push
dec
lea
std
cmp
int
cmp
retf
pop
pop
fsubr
mov
inc
xor
rol
jg
cmp
push
test
gs
aaa
add
jg
pushf
pop
jmp
pushf
ja
jno
and
pop
fcmovu
mov
(bad)
ficomp
nop
std
test
jb
fistp
imul
jno
jl
fdiv
ins
into
mov
fdivr
mov
lods
push
inc
stos
sar
ss
je
jl
fcmovnu
call
cmc
ficomp
iret
cwde
or
cmp
sysret
ds
(bad)
loop
(bad)
push
mov
mov
loop
std
sub
sbb
sbb
xor
dec
pop
add
or
fcmovb
adc
es
mov
push
imul
sbb
xor
jecxz
add
and
jmp
test
mov
xor
cmps
mov
shl
cli
and
pushf
stc
fdiv
das
inc
sub
xchg
xor
mov
aam
mov
or
cmps
in
and
das
or
jle
add
xor
mov
or
jl
retf
sbb
xor
xor
aas
lods
jns
icebp
mov
push
and
mov
jns
dec
dec
adc
rcl
inc
push
int3
inc
push
inc
push
jae
enter
shl
or
fwait
popa
mov
fdiv
jge
xor
outs
frstor
push
or
ficom
cwde
pushf
inc
adc
pushw
jp
repz
lods
ret
add
jmp
in
fnstenv
adc
call
test
es
adc
xchg
rol
sbb
cwde
dec
or
adc
xchg
loopne
cmp
loopne
mov
jbe
xor
sbb
jle
sub
(bad)
jno
ja
add
(bad)
clts
sbb
add
in
imul
sub
or
dec
iret
fidiv
xor
out
(bad)
lock
push
(bad)
in
or
ficomp
jl
dec
das
js
ret
xchg
in
xchg
xor
retf
ret
sub
pop
popa
push
cld
inc
sub
aaa
shr
push
adc
jne
pop
inc
push
(bad)
pop
ds
jno
mov
dec
ret
test
ror
xor
push
inc
or
sub
shr
lahf
sub
ret
push
(bad)
imul
dec
push
pop
dec
adc
mov
arpl
fstp
js
shr
and
test
sbb
inc
push
cmp
jp
push
retf
loop
outs
mov
inc
outs
sar
fldcw
mov
sahf
call
rcl
or
cmp
sub
ins
jle
jle
inc
mov
imul
xlat
adc
push
push
mov
push
inc
(bad)
sbb
push
dec
(bad)
(bad)
gs
mov
inc
ficom
adc
sub
jno
sbb
arpl
inc
or
cmps
inc
mov
rcl
mov
inc
add
xchg
retf
inc
sbb
lods
inc
push
into
loopne
outs
or
dec
ror
rcr
cmp
clc
scas
cmps
push
(bad)
sti
loope
xchg
(bad)
stos
adc
jecxz
xor
xor
loop
leave
aad
call
mov
inc
jecxz
xchg
(bad)
movs
sbb
or
push
xlat
dec
xchg
fnstsw
adc
les
dec
sub
test
popa
push
push
into
ficom
call
fild
dec
rol
(bad)
addr16
ins
mov
or
cmps
fdivr
adc
mov
mov
gs
sub
hlt
fldenv
gs
and
pop
mov
pop
dec
fldcw
movs
push
cmps
lea
cmc
mov
call
jmp
jmp
push
push
cmp
jmp
shl
sbb
dec
test
fst
xchg
dec
outs
scas
aad
jb
mov
lahf
add
mov
movs
fiadd
sti
aaa
clc
xchg
mov
pop
cld
mov
in
mov
and
int3
stc
(bad)
cs
fidiv
mov
ret
(bad)
out
xor
jb
jmp
add
iret
inc
dec
cmc
icebp
mov
and
mov
ror
data16
aas
jl
mov
repnz
add
aaa
(bad)
fistp
mov
call
aam
in
dec
dec
push
pop
cs
inc
jb
xor
jo
pop
inc
mov
dec
popa
sub
repz
int3
cmp
out
cmp
call
ja
xchg
addr16
mov
scas
ss
pusha
add
sbb
cmp
add
add
movs
and
sbb
rol
clc
scas
addr16
push
ror
in
std
movs
jmp
jno
pop
aad
bound
adc
nop
and
popa
cdq
lea
xchg
xchg
addr16
adc
pop
jae
out
or
popa
mov
jnp
cmp
inc
imul
sub
cdq
daa
loop
mov
movs
test
fdivr
mov
fadd
fdivr
add
xchg
mov
jecxz
clc
jp
jmp
cdq
(bad)
sbb
test
sub
rol
sbb
pushf
jmp
jmp
les
sub
xchg
mov
mov
and
arpl
in
scas
push
test
retf
add
fnstenv
stos
bound
xchg
cmp
mov
int3
in
add
push
push
cmp
dec
and
jmp
ds
adc
shl
mov
adc
and
pushf
test
fist
xchg
mov
mov
stc
shl
js
lahf
mov
in
jge
rcr
adc
repnz
and
(bad)
enter
jmp
retf
imul
mov
xor
cmp
add
xor
mov
mov
push
mov
mov
ficomp
cmps
xor
popf
jl
push
inc
xchg
xchg
(bad)
cmp
jge
mov
stc
xchg
call
std
or
pop
xchg
jecxz
push
(bad)
inc
push
push
dec
cmp
loopne
mov
aas
aaa
sbb
or
or
mov
cmps
data16
jnp
sbb
mov
xchg
lods
sbb
aas
sub
iret
and
fsubp
inc
mov
add
dec
pop
fisttp
mov
lahf
aam
out
add
iret
stos
or
sub
push
addr16
sbb
pop
inc
jle
and
shl
in
shl
inc
mov
mul
fisubr
sahf
dec
jmp
sub
repnz
add
jne
test
(bad)
mov
hlt
mov
stos
in
lods
xchg
sbb
mov
out
add
or
movs
xchg
retf
sub
mov
add
or
xor
fadd
mov
int3
cmps
ss
fst
dec
clc
aas
cmp
pop
scas
f2xm1
out
jbe
mov
add
mov
push
fld
adc
lods
sbb
(bad)
dec
out
fisttp
xchg
ret
bnd
or
push
cmp
imul
mov
pop
xor
sbb
adc
jbe
adc
mov
jmp
shl
ror
bound
cmpxchg
push
push
mov
xor
adc
or
push
lds
mov
pop
pmuludq
out
inc
adc
mov
mov
pushf
movs
inc
shl
aaa
lahf
xor
add
sahf
das
sub
(bad)
or
das
stc
into
(bad)
mov
scas
adc
mov
js
leave
ins
retf
mov
ja
rcr
xor
shr
lock
jmp
sbb
imul
in
and
mov
inc
ficom
sbb
call
repnz
pop
lahf
lea
loope
into
jo
lea
lahf
cmp
jae
add
push
pop
ins
aam
sbb
(bad)
jbe
push
pop
repnz
cmp
xor
arpl
(bad)
cmp
push
mov
sub
sbb
out
push
push
pusha
sbb
dec
sub
inc
aaa
fcomi
lea
mov
out
cli
int3
retf
(bad)
xchg
inc
push
dec
je
cmps
jmp
test
push
sub
(bad)
and
fdiv
into
dec
into
clc
loopne
pusha
iret
mov
and
sub
dec
pop
cmp
rcl
icebp
into
push
mov
jp
fisttp
sbb
dec
mov
jecxz
std
dec
outs
(bad)
popf
data16
or
add
xchg
fisubr
in
add
mov
cmps
dec
sbb
mov
sub
movs
mov
cli
(bad)
fcomp
adc
mov
adc
ret
mov
test
or
cmp
mov
xlat
mov
into
mov
mov
sub
sub
fbstp
mov
jne
cmp
xor
rcr
inc
stos
psraw
(bad)
add
or
push
cmp
outs
push
mov
clc
jmp
mov
fiadd
ficomp
in
jp
push
dec
aad
aad
inc
gs
mov
cld
ret
cdq
sbb
jbe
mov
push
mov
stos
pushf
cmc
dec
mov
pop
cdq
push
inc
fld
sti
xchg
mov
comiss
mov
out
dec
sbb
(bad)
cmc
call
test
jbe
and
(bad)
popa
sub
loope
sub
(bad)
mov
xor
mov
mov
inc
(bad)
int3
inc
inc
push
retf
jg
movs
add
enter
sti
lds
or
into
mov
jmp
mov
and
inc
xchg
sbb
and
(bad)
fidivr
lds
je
in
int3
jge
imul
retf
push
das
xor
ja
sbb
sbb
ret
mov
mov
mov
mov
hlt
mov
mov
push
push
push
cmps
inc
push
test
push
pop
sahf
loope
xchg
pop
sub
aaa
pop
nop
movs
push
xchg
hlt
sub
jae
sub
sub
push
and
loope
cmp
pop
pop
test
pop
inc
mov
rcl
dec
push
inc
call
pusha
nop
mov
ins
add
in
mov
jmp
sbb
sbb
push
dec
mov
dec
add
xor
or
int3
inc
mov
imul
adc
stos
mov
xor
aaa
jle
jl
or
push
pop
cmp
call
ret
xor
pushw
aam
mov
in
cmp
je
mov
les
ret
cmps
mov
js
cmp
out
mov
inc
mov
add
jmp
fmulp
hlt
pop
xchg
jmp
out
add
jae
jge
jno
sbb
in
out
stos
gs
in
in
jno
jle
int
jp
or
jl
or
inc
icebp
jne
lds
sahf
push
jo
aad
sub
cmc
fistp
gs
hlt
outs
cmps
dec
xchg
and
(bad)
neg
and
cmp
lods
in
xchg
inc
mov
inc
or
mov
test
or
dec
dec
xchg
retf
hlt
sub
push
dec
ds
rol
gs
fist
push
retf
popf
mov
fisubr
cmp
mov
out
mov
in
fs
mov
fld
inc
xchg
sbb
jmp
imul
xchg
repnz
push
retf
sbb
push
and
lods
cmc
fs
out
sahf
sti
cmp
test
movs
and
retf
jmp
xchg
mov
sti
lods
jmp
adc
gs
mov
pop
scas
xchg
jbe
cmp
retf
in
or
fistp
data16
xor
dec
es
push
xlat
mov
ins
int
aaa
pop
nop
mov
and
jb
movs
xchg
movs
sub
gs
fcmovu
(bad)
sbb
inc
daa
or
cmp
fcmovnu
inc
pop
bound
imul
loopne
pop
add
mov
retf
sub
cmp
push
mov
mov
xor
rcl
mov
inc
or
mov
push
lea
jnp
jmp
inc
adc
dec
xor
jne
inc
jg
pop
push
cmps
sub
imul
retf
sub
test
sub
xor
aam
test
lock
out
retf
inc
dec
push
pop
sub
loop
ret
test
mov
or
push
pop
sub
add
outs
mov
lock
mov
and
push
xor
sub
pop
adc
push
retf
cmp
dec
fs
int
dec
in
mov
dec
aad
cmp
test
lahf
repz
jl
(bad)
xlat
mov
jb
add
fwait
call
lahf
std
js
mov
(bad)
mov
or
repnz
sub
arpl
mov
xor
outs
xor
lahf
push
in
adc
fwait
(bad)
xor
pop
cwde
and
mov
call
push
mov
(bad)
fisubr
adc
call
mov
sbb
je
adc
sbb
out
inc
pop
xor
aas
movs
cld
test
xchg
jge
cld
mov
call
dec
jne
add
mov
shr
push
stos
mov
jl
loop
sub
fcmovnbe
push
mov
adc
jge
imul
jo
mov
cmp
call
es
out
gs
cmp
fdiv
and
mov
mov
f2xm1
pop
cmp
(bad)
rcl
pop
inc
mov
aam
jo
(bad)
xor
hlt
out
dec
ror
mov
inc
push
call
or
dec
xor
cmp
iret
sub
adc
xor
imul
je
fbstp
lahf
addr16
call
cwde
dec
cmps
or
lods
mov
cmp
mov
daa
(bad)
punpckhwd
ret
(bad)
or
loope
push
mov
push
clc
call
mov
inc
ss
mov
mov
lods
fsubr
pushf
pop
pop
push
pop
int3
(bad)
jmp
pop
ror
and
pop
into
push
dec
mov
sub
leave
ja
inc
cs
adc
sbb
addr16
sbb
ret
popf
inc
dec
nop
pop
and
fisttp
iret
aad
(bad)
je
mov
dec
stos
gs
mov
and
adc
push
out
lods
loop
sbb
fdiv
mul
inc
pop
int
ja
pop
jle
mov
sub
test
jle
push
shl
test
jmp
call
shl
cli
push
adc
aad
inc
nop
mov
cli
ror
xchg
push
inc
scas
jb
dec
pop
push
or
aam
push
test
daa
scas
in
cmp
jae
cmp
loop
cmp
test
es
rcr
inc
sub
loope
sti
bound
test
mov
pop
mov
sbb
leave
dec
inc
sub
ret
push
lock
call
ins
les
cmps
fidiv
dec
ret
fwait
jl
ins
imul
mov
in
test
in
or
popa
dec
sub
sub
mov
cld
loop
arpl
shr
in
test
mov
pushf
in
jnp
or
or
sub
cmp
pop
dec
retf
push
mov
sub
shr
in
nop
int3
addr16
imul
sub
mov
fidiv
mov
cmp
(bad)
mov
push
(bad)
jne
push
jno
and
test
sub
push
shr
inc
test
retf
jecxz
lds
sub
push
inc
mov
adc
mov
mov
pop
add
adc
push
inc
xor
clc
push
inc
jmp
mov
mov
cmp
je
sbb
fld
pop
pop
test
aad
xchg
shl
cmps
mov
mov
out
lods
out
dec
test
pop
mov
fdivrp
sub
sub
or
dec
sub
jne
dec
retf
push
(bad)
xor
fwait
(bad)
lock
jg
leave
pop
push
out
int
and
jle
or
cmc
mov
pop
and
adc
jno
aaa
add
xchg
outs
push
call
cmp
or
sbb
inc
push
lock
test
hlt
push
pop
sub
daa
and
add
pop
mov
out
xor
xchg
push
xor
loopne
pop
or
shr
jg
xchg
xor
lahf
scas
and
pop
loope
fcomp
mov
push
mov
inc
cmp
jmp
and
sub
int
dec
jno
and
mov
stc
stc
or
pushf
test
inc
xchg
retf
repz
std
push
jnp
loop
mov
jbe
and
ss
and
xor
in
pop
push
mov
lahf
rol
nop
jbe
shl
sbb
icebp
dec
pop
push
mov
ds
mov
xchg
adc
xchg
not
adc
and
fcom
sahf
icebp
daa
rol
xchg
rcl
xchg
sbb
aaa
scas
mov
daa
add
xor
xor
mov
pop
add
mov
xchg
sub
inc
fwait
int
call
jp
idiv
sub
ret
(bad)
push
not
(bad)
sub
add
jne
xchg
adc
or
cmp
pop
rcr
in
ss
add
aaa
sbb
shl
test
sbb
dec
xchg
neg
dec
inc
sub
xor
shl
rcr
mov
jno
and
pop
dec
push
inc
cmp
sbb
jg
fisub
mov
fdiv
sub
aad
in
sbb
in
sar
(bad)
and
jmp
loopne
jae
ror
scas
sbb
push
fcmovnbe
stos
add
mov
adc
(bad)
scas
sub
push
push
sub
mov
(bad)
sti
adc
jp
pop
lods
cmp
aam
outs
xor
(bad)
in
stc
ja
out
ret
mov
mov
fstp
dec
pop
jb
xor
fsubr
adc
in
add
loopne
call
mov
std
push
dec
inc
fistp
mov
sub
mov
out
jo
lahf
(bad)
cli
dec
cmp
xchg
(bad)
movs
cli
jmp
lahf
repz
jbe
ror
push
push
sbb
inc
cld
inc
pop
inc
sub
hlt
dec
adc
dec
outs
cmps
jmp
and
fnsave
test
and
imul
pop
jo
cmp
add
outs
call
sti
jne
sahf
adc
cmc
jo
pop
sbb
test
loop
ret
jg
inc
imul
(bad)
sbb
mov
cmps
movs
sub
loopne
pop
les
mov
pop
imul
xor
addr16
or
mov
xchg
mov
add
pushf
pop
pushf
or
pop
inc
js
inc
jbe
hlt
loopne
and
fwait
in
jmp
dec
jge
xchg
ins
(bad)
je
imul
les
nop
cmp
ret
xchg
mov
hlt
rcl
faddp
or
inc
xchg
push
fwait
pop
adc
test
pusha
jno
cmp
sbb
dec
fimul
and
outs
fst
call
call
mov
inc
jbe
fidiv
dec
std
inc
cmp
out
push
add
(bad)
fld
clc
push
lea
pop
xor
pop
ret
sub
push
xlat
sbb
rcl
adc
mov
mov
push
movs
xor
lds
dec
cmp
sub
aaa
frstor
imul
adc
cmps
jno
int3
mov
cmp
lods
dec
cli
mov
fmul
outs
call
(bad)
loopne
cmps
sub
push
ja
xor
cld
or
inc
outs
shl
sbb
sbb
mov
pop
sub
test
cmp
addr16
pop
mov
mov
and
inc
rol
push
jo
je
sbb
fwait
icebp
push
add
jge
pusha
imul
imul
push
shl
push
fisttp
aaa
lds
mov
neg
dec
out
lea
rcl
ja
sub
je
cwde
nop
sub
arpl
dec
leave
les
cmp
fstp
sbb
test
aaa
lahf
stc
fnstenv
fwait
loop
test
mov
xor
and
or
push
jp
in
xchg
cmp
xor
sbb
mov
mov
outs
add
mov
sub
cld
cmps
lods
ss
add
mov
and
mov
add
pop
and
pop
(bad)
pop
xlat
arpl
fdiv
daa
adc
loop
xchg
inc
jmp
fisttp
retf
adc
mov
jmp
scas
xor
push
sub
jg
mov
movs
mov
aam
mov
jl
mov
lock
mov
pop
mov
mov
std
mov
jg
push
movs
mov
test
(bad)
xchg
cmp
jg
mov
in
in
cmps
ds
imul
pop
je
push
leave
mov
or
lods
outs
das
dec
in
dec
xor
xor
mov
jne
gs
xor
sbb
jo
in
je
sbb
adc
sahf
adc
call
pushf
xchg
test
add
xlat
sbb
xchg
sbb
add
mov
mov
idiv
and
fistp
push
mov
fwait
or
loop
cli
and
jmp
mov
dec
adc
pop
jmp
cmp
push
bound
lods
adc
dec
mov
xor
xor
pop
xchg
test
addr16
xor
cdq
call
adc
cdq
lds
cmp
bts
adc
cmp
dec
push
xchg
or
pop
rcr
push
jmp
jmp
out
aam
bound
inc
ins
mov
pop
cdq
ins
adc
or
jl
or
mov
daa
mov
sub
retf
shr
aad
test
ss
cdq
rcl
push
ins
in
aam
adc
or
pop
fs
add
data16
les
daa
jne
add
cmp
fisub
cmc
iret
mov
sub
clc
inc
mov
pop
aas
sub
les
pop
mov
adc
and
sub
les
pop
cmp
cdq
xchg
test
fild
sub
mov
inc
cdq
xchg
push
sbb
retf
or
pop
add
push
in
cwde
int
xor
and
sbb
loopne
stos
dec
mov
stos
mov
add
xchg
add
jecxz
or
nop
add
inc
add
jb
stos
les
xor
add
and
push
stos
adc
int3
shl
push
push
add
leave
and
stos
jmp
aad
pop
daa
add
cdq
rol
sbb
xchg
push
pop
push
push
mov
add
adc
scas
and
sbb
cdq
rol
mov
shl
adc
cmps
repz
arpl
lahf
push
js
jae
cmp
jno
data16
sbb
jb
ja
call
icebp
add
test
shl
pop
in
jae
retf
dec
or
sub
pusha
mov
xor
adc
lds
mov
imul
push
or
movs
add
xchg
add
loopne
mov
jp
inc
add
push
push
stos
and
pusha
push
push
add
or
or
xor
xor
push
repz
mov
push
and
or
fwait
add
(bad)
pusha
xchg
push
dec
mov
fstp
scas
mov
out
loope
mov
sti
jle
pop
push
jmp
leave
mov
jle
clc
inc
out
cli
mov
cdq
cmc
push
scas
mov
jne
cli
loopne
add
xor
mov
add
jns
cmps
enter
outs
sbb
cwde
clc
mov
cmp
sbb
mov
sub
pop
mov
mov
inc
call
aas
shr
jmp
pop
pop
popa
ins
inc
jmp
test
dec
cmp
rol
jg
lods
sub
or
xchg
push
or
lea
adc
pop
fsub
mov
xchg
cld
scas
retf
cmp
pusha
cmps
fistp
ins
lahf
sbb
ret
mov
jge
xchg
xor
and
cmp
pop
jp
fild
idiv
adc
(bad)
js
lock
inc
fcmovbe
mov
jmp
arpl
sbb
inc
cmp
push
inc
pushf
sbb
fstp
cwde
push
out
movs
mov
mov
inc
jno
nop
jmp
mov
jo
jns
mov
jle
add
mov
mov
add
cmp
call
not
pop
push
cmps
call
or
jo
out
and
mov
cmp
xor
hlt
das
push
enter
adc
bound
lea
sub
xchg
aaa
sub
sub
lds
pop
cmp
cmp
push
sar
dec
dec
js
push
add
adc
lods
xor
call
leave
push
mov
hlt
outs
adc
adc
xlat
xchg
mov
and
mov
mov
sahf
mov
(bad)
jl
mov
pop
mov
cmp
les
int
ret
dec
shl
data16
popa
movs
jmp
jmp
mov
xor
movs
lods
or
adc
xor
cmc
push
dec
mov
sbb
pop
dec
imul
fidivr
das
xor
ret
not
cdq
mov
push
dec
stos
popa
fld
and
shl
lahf
or
add
adc
in
aaa
and
adc
nop
clc
dec
xor
xor
cmp
inc
or
sbb
mov
arpl
xchg
pop
cmps
jecxz
loope
outs
add
xor
(bad)
loope
call
aaa
sbb
sbb
ds
retf
out
cmp
dec
sbb
push
dec
in
or
pop
push
sbb
fwait
addr16
ja
push
(bad)
fild
outs
ins
dec
adc
jecxz
xchg
sbb
out
mov
pop
cmps
out
cs
jle
inc
xchg
fcom
std
fidivr
push
out
les
in
mov
jo
outs
mov
cmps
jle
imul
add
cld
mov
dec
repz
adc
cmp
loopne
sub
inc
test
shl
leave
aad
xchg
push
inc
push
inc
les
movs
call
xor
scas
xchg
addr16
int
xchg
iret
cli
les
xchg
imul
mov
mov
ins
add
or
inc
inc
imul
dec
inc
cmps
mov
cmps
mov
outs
sbb
ins
mov
es
inc
scas
jmp
jl
out
add
pushf
cld
mov
fadd
and
cmp
pop
cmp
imul
xor
pusha
lods
xlat
icebp
xor
aam
mov
data16
sbb
push
jo
out
(bad)
in
outs
mov
aad
aas
fcmovne
mov
pusha
gs
sbb
push
call
fld
mov
adc
jne
add
pop
xor
jbe
dec
(bad)
pop
imul
xchg
mov
inc
jbe
out
xchg
pop
movs
sbb
loop
fstp
adc
or
movs
enter
pop
or
mov
push
shl
and
jo
jo
frstor
es
shl
pusha
stos
mov
pop
fcom
not
jle
cmp
mov
jo
pop
or
push
and
or
mov
test
aaa
or
xrelease
(bad)
pop
xchg
mov
sbb
xor
mov
iret
jge
adc
add
sbb
push
lahf
adc
aaa
inc
in
fnsave
sbb
cmp
out
js
ja
jl
lahf
ins
pop
test
sub
push
cmp
call
xor
cmp
mov
dec
int3
stos
ret
or
ja
outs
sbb
iret
scas
enter
mov
or
clc
xor
ss
in
fst
jmp
repz
test
fsubr
mov
stos
mov
data16
and
cmps
sub
int
outs
mov
sub
push
pop
pop
inc
push
outs
push
adc
mov
xchg
mov
stos
std
mov
dec
push
pop
scas
js
in
dec
xor
test
inc
xor
nop
ins
sti
mov
pop
fcomp
adc
adc
out
or
scas
js
aam
rcl
pop
pop
test
jbe
pop
sbb
out
and
scas
mov
test
js
(bad)
push
mov
test
jmp
ss
(bad)
fisub
xlat
call
gs
mov
adc
adc
fcom
xor
add
and
cld
mov
cmc
adc
xor
out
ror
or
dec
ret
out
and
inc
xchg
xor
test
je
repz
loop
dec
push
xlat
jg
pop
mov
aaa
ins
jmp
jmp
(bad)
pop
ret
xchg
or
push
xchg
ins
fst
(bad)
aaa
mov
or
mov
mov
mov
mov
add
or
out
xchg
mov
js
fucomi
jbe
mov
xor
or
out
cmp
jp
dec
mov
fisttp
les
jl
adc
mov
ja
xor
cmps
sub
mov
jmp
push
mov
dec
push
js
adc
jl
add
sub
leave
das
cmp
inc
adc
gs
xlat
jge
jns
and
aad
js
sbb
out
jp
lods
arpl
int
xor
xor
inc
sub
mov
pop
mov
ins
lods
cld
rcr
mov
xchg
push
pop
je
mov
test
xchg
fs
xchg
xchg
ins
and
ds
mov
sahf
xchg
in
and
sysenter
dec
movs
push
mov
push
lods
add
add
adc
adc
scas
fldcw
cmp
retf
pop
scas
hlt
xor
ja
in
call
lods
mov
dec
or
inc
outs
outs
pop
les
lahf
add
gs
retf
iret
add
xor
popf
sbb
sub
cld
and
es
adc
adc
bound
cld
inc
sbb
push
arpl
xor
xor
xor
pop
cmps
add
aad
dec
pop
cmps
fld
and
loopne
inc
push
dec
cmps
cmp
jo
fldcw
retf
imul
test
cmc
xor
pop
movs
jecxz
cld
std
(bad)
xchg
(bad)
or
pushf
pop
(bad)
dec
push
fcom
jb
fnstsw
mov
xchg
xchg
lods
aad
sbb
sbb
or
pop
imul
mov
and
xchg
cli
outs
push
loop
mov
jmp
inc
dec
cwde
pusha
in
popf
mov
push
sub
xor
sbb
sub
mov
jge
and
and
mov
push
movs
xor
and
mov
sub
dec
(bad)
popf
sub
in
cdq
mov
dec
gs
mov
fiadd
mov
dec
(bad)
aam
sub
outs
sub
(bad)
jle
inc
dec
xchg
xor
fistp
inc
mov
cwde
push
dec
sub
or
xchg
test
sbb
call
rcl
(bad)
ja
mov
pop
data16
daa
jne
repnz
inc
jae
push
(bad)
imul
jle
jg
lock
lds
(bad)
sub
xor
pop
retf
hlt
test
adc
retf
out
hlt
lahf
inc
dec
cmp
jmp
add
es
scas
cs
adc
ret
arpl
mov
xchg
in
push
outs
test
push
jmp
jne
xchg
sbb
push
int3
add
pop
ficomp
mov
in
push
mov
retf
icebp
pusha
jmp
sar
xor
xlat
pop
scas
pop
sub
push
daa
out
mov
cmps
sti
(bad)
outs
stos
js
sbb
xchg
xchg
mov
jmp
into
fsubr
adc
jp
sti
stos
repz
sbb
test
sub
xchg
(bad)
adc
lock
cmps
lods
sub
mov
ffreep
outs
ja
push
jmpw
cmovs
inc
and
cwde
mov
mov
ret
fcmovnbe
iret
mov
dec
jg
cmp
xlat
cmp
and
mov
ror
pop
int3
push
imul
shl
cli
jbe
sub
test
sbb
(bad)
mov
xor
or
sbb
adc
pop
leave
jge
sbb
mov
pop
(bad)
aaa
jl
jge
mov
mov
sub
mov
dec
mov
dec
mov
lahf
xchg
mov
leave
jno
and
xchg
lds
xchg
jmp
icebp
mov
cli
repnz
in
aam
pop
push
adc
fsub
jb
mov
or
nop
xchg
sbb
xlat
bound
retf
mov
dec
scas
jmp
pop
xor
mov
inc
ins
pop
lods
pop
xchg
push
add
cwde
add
jns
xor
cmp
mov
daa
(bad)
lods
push
mov
push
mov
gs
movs
cmp
xchg
add
jmp
ret
mov
fist
xchg
loope
daa
pop
jg
mov
inc
jbe
sub
sub
ss
sub
cmp
(bad)
call
ficom
(bad)
in
sub
stos
inc
sub
gs
test
int3
inc
(bad)
es
mov
popaw
or
jmp
mov
test
ja
or
jle
cld
and
leave
iret
out
dec
dec
sbb
pop
dec
adc
mov
push
test
sub
inc
imul
adc
push
jns
and
lahf
add
adc
inc
add
sub
xchg
add
dec
lahf
xor
scas
stos
ret
pop
rdpmc
fsubr
or
mov
idiv
stos
call
mov
sbb
ret
xor
mov
mov
or
fs
mov
mov
or
pop
cwde
cmp
push
je
and
out
outs
adc
shr
mov
js
aam
sub
or
shl
ficomp
sbb
mov
mov
dec
(bad)
mov
popf
test
pop
add
push
outs
xchg
adc
push
fdiv
(bad)
retf
xor
push
fdiv
and
jne
sub
and
push
jle
aam
push
ret
and
cmc
and
pop
and
aaa
sub
fisub
aaa
lds
push
jo
cmp
cmp
sti
dec
js
pop
xor
into
je
dec
mov
push
xchg
in
imul
adc
pop
and
xor
pop
out
test
into
dec
sti
pop
imul
mov
inc
jmp
inc
in
sub
aad
cdq
cmps
pop
adc
adc
ja
mov
dec
jp
test
jns
or
pop
(bad)
xchg
les
dec
repnz
sti
xchg
pop
aas
xchg
inc
stc
jge
dec
(bad)
(bad)
(bad)
jae
dec
mov
cdq
mov
adc
fdiv
in
stc
mov
sub
out
or
test
cmp
jbe
dec
mov
jns
push
ins
inc
jns
(bad)
ss
mov
xor
dec
fldlg2
mov
les
icebp
jo
cwde
out
ret
sub
jae
popa
aad
adc
adc
in
enter
adc
dec
outs
iret
pop
fdivp
push
and
fwait
inc
sub
arpl
or
out
push
das
jg
mov
mov
cmp
adc
mov
dec
stc
fld
jae
cmp
arpl
fstp
sahf
jecxz
test
fs
lea
ds
daa
fist
outs
pop
adc
jmp
in
mov
je
aad
enter
add
int
dec
outs
int3
lods
jle
movs
adc
test
mov
adc
ja
cmp
add
xlat
or
neg
shr
fs
sbb
mov
popf
xor
pop
mov
mov
scas
sub
clc
cmps
jp
sub
xchg
jbe
stos
loop
xor
push
cmp
shl
adc
jl
dec
cli
or
sbb
scas
cmps
out
enter
add
dec
inc
icebp
pop
pop
arpl
mov
push
jbe
add
scas
inc
ss
and
xchg
cmp
fisttp
sti
leave
sbb
les
jnp
std
mov
sbb
lods
inc
pop
sahf
xor
xchg
dec
dec
inc
addr16
mov
sub
test
dec
xchg
data16
dec
sbb
fstp
jmp
mov
sti
xor
xchg
inc
cmp
sbb
xlat
mov
mov
pop
push
xchg
(bad)
adc
outs
pop
jo
ret
fild
add
mov
mov
mov
sub
scas
push
pushf
lahf
hlt
je
fadd
add
pop
(bad)
fs
js
sub
fdivr
xchg
add
pop
cmp
dec
cmovl
ret
sub
test
sbb
jno
jbe
dec
sub
popf
imul
and
and
pop
xchg
retf
retf
mov
sbb
ins
pop
dec
dec
je
pushf
in
pop
call
push
cmp
test
jle
(bad)
cld
(bad)
(bad)
cs
cwde
icebp
mov
or
lods
inc
lock
mov
push
sbb
loope
and
xchg
test
adc
clc
movs
nop
jno
sub
fcom
mov
sbb
xchg
mov
push
jnp
sub
jge
fisttp
data16
mov
and
pop
cmps
jnp
adc
jne
add
stos
arpl
xor
mov
scas
shl
loopne
cwd
lods
mov
inc
adc
call
jb
call
pop
js
enter
pop
xor
mov
sub
fsub
jmp
int3
cmp
jb
aas
inc
sbb
pop
cmp
mov
or
int
mov
and
mov
add
jne
int
ret
cmc
addr16
rol
repnz
xchg
jmp
cdq
test
ret
adc
ins
das
sub
mov
inc
jmp
jge
enter
or
jecxz
mov
sub
jl
inc
popa
mov
leave
cmp
mov
mov
mov
dec
sbb
and
inc
cwde
cmp
fisttp
retf
ret
ret
push
xor
xor
les
xchg
sti
or
cwde
psubusb
jecxz
stos
and
mov
stos
fsub
dec
xor
fiadd
pop
(bad)
bound
mov
outs
add
aas
inc
adc
mov
mov
jae
xchg
test
add
sti
scas
js
call
dec
cmp
dec
mov
xchg
push
pop
add
inc
dec
jo
mov
mov
mov
cs
pop
sub
pop
stos
jmp
js
shl
sub
test
inc
mov
in
or
cmp
jno
test
rol
rcr
push
lods
push
clc
(bad)
mov
ins
add
cmp
push
(bad)
ins
rcr
in
js
les
shl
out
iret
mov
xor
pop
mov
bound
inc
xchg
lock
jb
mov
imul
jge
inc
js
dec
jl
jmp
ficomp
mov
cmps
pop
sbb
imul
lods
xchg
fiadd
lahf
fstp
xchg
lds
ins
(bad)
je
icebp
or
pop
fnsave
call
rol
(bad)
fild
xor
pop
ret
ror
jge
inc
enter
in
fucomip
sbb
(bad)
out
push
fstp
jg
test
out
idiv
xchg
lods
shl
in
jge
pop
addr16
jae
test
pop
and
or
adc
xchg
pusha
mov
sti
pop
jae
(bad)
aas
jo
sub
push
sti
cld
mov
pushf
in
dec
ins
gs
dec
pop
jl
movs
pop
jmp
mov
or
and
aad
or
shr
es
std
push
and
mov
mov
ret
fwait
data16
int3
mov
ja
jns
mov
les
cmc
pop
mov
xchg
inc
fiadd
repnz
xchg
enter
mov
mov
daa
and
adc
cmp
pop
xchg
ds
stos
jl
loope
ret
mov
push
bound
add
cwde
xchg
xchg
mov
(bad)
(bad)
cld
xchg
mov
cmp
jl
stos
lods
mov
cwde
mov
or
gs
call
mov
popf
pop
mov
stc
mov
or
mov
jo
cmps
outs
ins
jg
pusha
xchg
in
or
ds
fmul
jp
sbb
mov
(bad)
nop
sub
push
mov
mov
hlt
sbb
jg
mov
lea
push
in
outs
sar
mov
fucomi
mov
popf
lods
xchg
add
dec
hlt
mov
mov
jp
push
fcomp
jb
test
sbb
fsubp
adc
jno
sub
or
loopne
enter
sub
les
or
mov
sar
add
lods
jg
in
push
xchg
push
out
pushf
or
inc
out
fnsave
out
in
jle
int
add
aam
pusha
ror
call
gs
push
pop
xor
push
mov
add
mov
test
sbb
pop
dec
fs
or
sub
call
repnz
or
jb
adc
iret
or
cdq
call
sbb
mov
outs
xor
xchg
inc
sub
sbb
jmp
or
cwde
pop
loope
fdivrp
out
sbb
std
rcr
push
xor
in
loopne
pop
inc
out
xchg
mov
sub
jg
call
xlat
cld
or
out
mov
mov
or
xor
sar
cmp
xchg
call
test
iret
mov
cli
and
cs
inc
xchg
aam
pop
movs
push
mov
pop
push
and
sbb
faddp
xchg
cmp
popf
xor
dec
das
clc
ins
pop
movs
push
or
ins
pusha
mov
add
or
sub
loopne
loope
outs
mov
push
mov
pop
push
adc
dec
enter
repnz
xor
cmp
push
xchg
push
xor
adc
ret
adc
add
adc
push
dec
or
dec
or
leave
inc
or
add
adc
mov
jb
nop
(bad)
mov
xor
sbb
push
dec
or
mov
pushf
cs
or
or
test
out
mov
addr16
loopne
repnz
pop
sbb
xor
mov
push
repnz
xchg
or
loope
push
push
das
movs
pop
xor
nop
inc
pop
bnd
pop
dec
fmul
push
stos
ficomp
and
out
sbb
cmovne
jge
jmp
aam
fwait
xchg
mov
mov
mov
xchg
es
mov
push
cmp
push
test
lahf
test
pop
int
xchg
mov
sub
je
xchg
and
xchg
add
mov
std
out
mov
xchg
xlat
or
in
clc
and
(bad)
adc
(bad)
movs
pop
sar
pop
ss
aad
mov
lea
ror
xchg
sbb
adc
inc
or
fmul
cmps
inc
xor
in
xchg
retf
movs
xchg
iret
clc
adc
loopne
jmp
xor
inc
jecxz
or
inc
leave
mov
mov
mov
xlat
rcl
in
sub
sub
std
clc
and
sbb
xchg
and
jmp
mov
imul
in
stos
test
lods
and
shl
xlat
(bad)
js
movs
or
shl
push
mov
mov
jo
jle
cdq
je
xchg
push
pop
inc
fistp
call
and
retf
xor
aaa
jne
fbstp
cmp
std
(bad)
fidivr
ret
jecxz
dec
adc
push
sbb
dec
adc
push
adc
xchg
xor
jmp
push
sbb
mov
mov
popa
mov
or
adc
sbb
cmps
inc
cmp
lahf
mov
or
pop
scas
lea
cmove
call
fild
out
mov
stos
or
outs
cmc
add
cli
cli
xlat
test
sbb
mov
dec
retf
xchg
add
(bad)
(bad)
jne
mov
setp
pop
xchg
add
in
shl
retf
push
iret
mov
mov
dec
out
nop
aas
ja
jge
jb
mov
push
and
cli
xor
nop
pop
(bad)
ret
cwde
and
push
aas
enter
fild
cmp
jge
retf
(bad)
dec
repnz
mov
popf
push
retf
sbb
movhps
les
mov
(bad)
mov
pop
outs
lods
mov
outs
mov
pop
fstp
xlat
retf
fisttp
je
jmp
mov
sub
fwait
test
dec
scas
cmc
fild
xor
aaa
and
popf
and
sbb
adc
pop
inc
mov
dec
mul
dec
pop
hlt
call
push
cli
pop
rcl
pop
mov
inc
add
mov
xor
mov
(bad)
push
imul
mov
xchg
dec
xor
nop
and
add
scas
movs
into
sub
mov
lahf
pop
add
daa
and
js
repz
shr
and
inc
nop
retf
lods
data16
sub
jg
add
mov
add
clc
lock
xchg
or
add
stc
jo
scas
(bad)
fmul
out
cmp
pop
dec
es
inc
push
rcr
or
mov
out
cmc
pusha
mov
in
popa
addr16
push
addr16
ds
xor
xor
adc
nop
or
das
sub
mov
inc
xor
dec
xor
das
int3
adc
mov
lods
add
cmp
push
push
lahf
jb
jns
mov
or
repz
mov
pushf
pushf
push
xchg
fild
sbb
push
(bad)
xor
sbb
fld
inc
dec
retf
aad
stos
arpl
dec
pop
repz
cmp
icebp
xor
mov
call
push
data16
pop
(bad)
nop
sbb
(bad)
ins
mov
ins
add
not
lock
and
popw
mov
mov
(bad)
fcomp
and
xor
mov
(bad)
jae
ins
into
adc
mov
icebp
(bad)
jmp
mov
jp
call
dec
dec
ins
cmp
sub
aaa
push
aad
je
clc
push
ins
jmp
int
and
inc
mov
dec
daa
mov
add
outs
jg
pushf
cmc
cld
out
idiv
and
cs
xlat
js
aas
scas
stos
out
sahf
inc
cmp
inc
lock
(bad)
mul
mov
fwait
xlat
sbb
inc
xchg
dec
aam
sar
ds
hlt
stc
stos
mov
and
push
adc
pusha
mov
dec
jnp
sti
add
jbe
fs
ret
xchg
mov
mov
adc
scas
xchg
lods
mov
js
push
add
pop
sub
retf
inc
and
aaa
ins
jno
jae
(bad)
mov
or
loop
fcmovnu
pop
das
push
cdq
xor
cmp
sbb
mov
scas
sbb
lds
jl
inc
inc
movs
dec
or
jo
aad
ret
add
bound
outs
pop
cmp
mov
xchg
sbb
dec
gs
lea
mov
xchg
mov
pop
dec
in
int3
mov
(bad)
fimul
sub
loop
std
cli
sub
mov
std
les
fs
pop
mul
outs
inc
sti
mov
faddp
jl
cld
push
test
ret
inc
loope
pop
fucomp
push
push
jmp
or
dec
pop
fbld
mov
push
fwait
inc
inc
adc
into
int3
outs
cs
dec
sbb
arpl
in
fnstsw
dec
inc
mov
mov
imul
and
mov
push
imul
scas
xchg
popa
cmp
nop
imul
jecxz
mov
js
call
loopne
ret
bound
stos
adc
xor
sub
retf
pop
(bad)
fcom
rol
shl
dec
movs
sbb
pushf
sbb
ins
inc
lahf
xor
cmp
repz
retf
lods
(bad)
out
in
xchg
cdq
jmp
pop
sti
loop
fistp
xor
loop
mov
call
sbb
cli
push
mov
fiadd
pop
frstor
(bad)
out
arpl
sar
jmp
retf
and
mov
lahf
loop
out
xchg
addr16
dec
fcomp
stos
movs
shl
in
mov
out
dec
add
test
bound
lahf
push
xchg
aas
pop
mov
mov
jns
dec
scas
and
mov
mov
cmp
jge
mov
test
sbb
popa
dec
dec
xor
xor
scas
sbb
clc
pop
xor
adc
pop
mov
jns
sbb
adc
cmp
fiadd
inc
stos
and
dec
cmp
imul
sub
je
test
jl
out
fmulp
ds
cmp
xchg
test
icebp
xchg
mov
add
pushf
mov
jmp
sar
adc
dec
cld
or
jge
cs
arpl
movs
fcom
test
push
mov
mov
leave
(bad)
xchg
loop
mov
pop
neg
cmp
dec
pop
sti
mov
ss
add
shr
mov
mov
inc
xadd
cwde
inc
jo
sbb
imul
dec
icebp
aas
cmp
pusha
cdq
lods
mov
adc
addr16
out
ret
ret
lds
mov
sbb
adc
jp
xchg
xor
mov
outs
aaa
(bad)
jne
fdiv
push
add
imul
neg
clc
jne
call
pushf
push
gs
pushf
cmp
dec
jbe
bound
test
mov
out
lahf
jo
call
js
jecxz
rol
jb
add
movs
in
inc
adc
or
push
xor
fdivr
pop
dec
nop
or
mov
push
mov
lds
dec
and
ins
cmp
cmps
xor
call
cmp
push
lods
shr
or
nop
jne
les
ins
pushf
(bad)
retf
mov
xor
fdivr
sub
les
icebp
cwde
xlat
nop
adc
jl
out
cdq
sbb
int3
rcl
pop
loopne
jle
mov
cmp
add
retf
nop
inc
jb
daa
ins
cld
addr16
mov
push
jbe
cwde
stos
adc
ins
push
mov
fdivr
push
es
test
outs
sti
jb
pop
mov
jmp
(bad)
fisub
jecxz
ret
idiv
not
retf
shl
jae
sbb
int
mov
xor
sub
mov
enter
(bad)
enter
fwait
idiv
jmp
inc
fcmovb
xchg
sbb
les
shl
leave
aam
shr
addr16
mov
adc
mov
lock
sbb
jge
mov
scas
movs
pushf
lods
mov
outs
inc
out
sub
js
mov
pop
(bad)
xlat
xor
add
jge
mov
mov
fs
xchg
push
aaa
jmp
and
lods
dec
out
mov
mov
sbb
and
push
mov
pusha
fwait
add
in
inc
add
loope
les
movs
jb
sbb
pop
inc
lods
push
sub
sbb
adc
ja
cmp
push
iret
retf
in
fdivr
stc
sbb
fwait
retf
pop
cmp
repz
mov
xchg
jmp
idiv
pop
int3
test
adc
push
movs
xchg
pop
mov
data16
or
xor
push
sbb
inc
mov
jnp
js
scas
pop
and
sbb
nop
jg
mov
adc
add
pop
pop
cmp
inc
inc
dec
cli
inc
bound
pop
daa
je
push
push
dec
push
into
and
adc
test
pop
lock
nop
jns
in
mov
daa
hlt
mov
mov
xlat
jle
out
mov
icebp
(bad)
loopne
fcmovnb
mov
into
mov
jne
outs
inc
fstp
inc
and
mov
push
aad
xchg
push
add
je
ret
pop
mov
aad
(bad)
mov
out
jmp
nop
nop
fcomp
or
aad
mov
mov
jne
inc
jmp
mov
idiv
arpl
mov
xor
cmp
pop
pop
inc
stos
les
clc
mov
or
sbb
test
jbe
push
or
div
inc
add
mov
jecxz
dec
ret
lahf
push
jbe
rol
push
mov
call
in
test
sbb
fst
sbb
(bad)
xchg
adc
das
mov
add
imul
pop
icebp
frstor
and
sbb
aad
mov
jno
add
xor
cdq
jno
repz
push
inc
rcl
mov
mov
pcmpgtw
in
sub
mov
stc
ds
imul
daa
call
retf
jnp
loopne
pop
imul
inc
push
cmps
jecxz
mov
push
(bad)
(bad)
stc
imul
lock
dec
test
(bad)
icebp
pop
jno
cmp
mov
mov
cmp
or
xchg
dec
or
arpl
call
pop
and
stos
xchg
leave
pop
(bad)
sub
fiadd
ins
mov
retf
jge
out
cmp
and
add
add
cmp
mov
mov
dec
xchg
pop
aas
jl
fldcw
cld
out
or
mov
and
nop
(bad)
inc
sub
outs
xchg
mov
rcl
jp
xor
jecxz
cmp
repnz
leave
bound
pop
mov
lods
mov
sub
push
and
fnstsw
les
push
push
retf
outs
inc
lods
fldcw
ret
cmp
arpl
(bad)
out
fsub
ins
xchg
xor
inc
pop
pop
pop
cmps
repz
call
mov
ret
retf
xchg
adc
cli
mov
repz
aas
inc
shl
or
icebp
cld
ret
cld
(bad)
out
xchg
scas
pop
xchg
mov
sbb
(bad)
pop
mov
adc
or
add
(bad)
sahf
add
mov
retf
bound
cmc
in
jmp
mov
sbb
sbb
add
ins
movs
jns
sub
(bad)
ss
enter
rol
cmp
outs
fsubr
mov
inc
sub
mov
pop
mov
into
jg
jno
dec
imul
push
fs
push
cmp
pop
cdq
cwde
push
mov
dec
data16
push
jns
mov
repnz
dec
cld
xchg
jge
mov
mov
xchg
xchg
cli
pop
int3
mov
push
pop
aam
stc
xlat
das
ins
dec
int
ss
les
adc
neg
mov
mov
push
loopne
xor
dec
cld
jmp
cmp
loope
outs
and
sbb
mov
pop
test
push
adc
js
inc
or
mov
jae
mov
outs
cmps
xor
mov
cmps
xchg
neg
cmp
xchg
dec
adc
sbb
clc
dec
enter
test
sub
ror
jg
dec
aas
or
or
adc
ds
jnp
aas
jns
ret
mov
in
xchg
out
jne
fcomip
leave
cdq
push
jns
sahf
bound
inc
adc
mov
scas
sti
jp
sub
aam
mov
clc
jno
xor
lods
sar
stc
mov
xor
jle
fdiv
push
or
daa
cmp
mov
xchg
in
fadd
hlt
outs
stos
pop
inc
inc
outs
fcmovnu
sbb
nop
xchg
ins
xchg
ficomp
mov
pop
test
add
push
xchg
push
mov
push
lds
inc
push
sub
or
pop
shl
jmp
cmp
push
pop
xchg
int3
add
icebp
xlat
pusha
pop
out
sbb
arpl
or
mov
mov
push
dec
out
adc
out
adc
cs
mov
out
shl
sub
movs
pop
mov
and
ror
pop
jg
pop
rol
cmp
or
ja
pusha
out
dec
mov
sbb
lock
jo
inc
adc
fs
std
xlat
sbb
shr
mov
push
retf
adc
stc
mov
add
loop
call
sub
jnp
ret
jne
mov
popa
lods
mov
push
idiv
and
dec
dec
adc
in
add
retf
mov
jno
hlt
es
mov
and
aad
xlat
jnp
sbb
and
jl
push
inc
aam
movs
es
push
jae
dec
es
xor
in
fcomp
popf
jo
xchg
jb
daa
lahf
or
mov
scas
xor
mov
pop
or
sti
gs
scas
jl
cmp
fbld
jno
jne
push
fbstp
push
cld
pop
mov
pop
fnstsw
mov
mov
sar
test
dec
icebp
and
inc
movs
cld
sub
data16
xor
inc
inc
pusha
leave
les
push
lahf
sub
std
sar
ret
push
jae
hlt
jnp
and
cmp
ins
xchg
in
push
fwait
retf
inc
sbb
mov
js
and
movs
jnp
xchg
ds
jl
clc
out
mov
cmp
xchg
mov
jns
stc
es
sub
loope
call
push
lock
cmc
mov
frstor
cmp
push
jns
jl
add
sar
in
pop
test
push
push
xchg
shl
inc
ret
repz
jae
gs
fcomp
cs
test
sbb
pop
push
lods
pop
add
data16
repnz
mov
push
sti
and
inc
cmp
stos
dec
mov
push
test
mov
mov
ds
jns
in
add
xlat
sbb
loop
js
loope
fisubr
int3
sar
xor
and
xchg
(bad)
push
mov
cs
bswap
retf
iret
xor
push
or
add
ds
mov
push
cmp
(bad)
daa
dec
fdivr
iret
add
inc
test
aad
ds
lock
popf
in
pop
ror
mov
adc
icebp
lods
xlat
sub
jecxz
mul
adc
leave
repnz
out
pop
jb
fld
xor
sbb
neg
scas
fwait
gs
fs
push
jecxz
lods
push
lahf
js
popa
in
jns
add
cmps
popa
ret
mov
pop
jg
push
mov
push
loopne
and
jmp
bound
icebp
mov
out
mov
out
pop
push
or
dec
ss
imul
sub
mov
cmp
push
dec
stc
rcl
dec
xchg
std
mov
push
ja
inc
retf
inc
scas
aad
sub
dec
and
call
dec
mov
call
pop
add
fadd
jmp
int
pop
and
jbe
mov
ret
cmps
inc
stos
dec
sti
and
daa
adc
sbb
add
mov
fcomp
cdq
xchg
les
mov
cpuid
add
dec
mov
clc
cmp
fisttp
in
xchg
pop
push
cmp
sbb
repnz
xor
rcl
clc
mov
cld
dec
push
fidiv
cmp
cmp
mov
clc
bound
es
or
jg
dec
and
push
nop
sbb
add
out
fs
cmp
cmp
push
outs
mov
mov
jae
xor
ficomp
mov
cmp
mov
mov
cmp
nop
mov
shr
out
jecxz
xchg
push
out
test
push
mov
dec
inc
add
clc
mov
mov
jo
xlat
sahf
jl
mov
sub
and
adc
les
cwde
mov
into
arpl
push
add
dec
pop
sub
pushf
push
mov
jae
jl
add
push
out
test
xchg
cmp
cmps
xchg
mov
inc
bound
pusha
cmp
out
mov
jae
xchg
bound
pop
or
mov
cmp
sbb
cmps
or
fisub
aam
popf
lahf
xchg
movs
jg
jge
cmp
nop
stos
cmp
jae
out
pop
adc
dec
(bad)
enter
fldl2e
bound
xchg
mov
test
mov
cmp
mov
or
inc
push
push
addr16
leave
dec
xor
mov
mov
and
push
dec
xchg
sbb
and
xchg
xor
add
mov
and
addr16
sbb
mov
outs
xchg
xchg
mov
xor
lods
cmc
mov
out
hlt
imul
bound
cmp
sbb
mov
ret
xchg
sub
dec
std
fidiv
fst
mov
scas
add
es
pop
add
add
sub
clc
inc
pop
dec
sti
or
xor
push
hlt
xor
dec
xchg
adc
inc
jmp
ja
sbb
sbb
xor
cdq
mov
out
xchg
and
(bad)
inc
ins
fs
mov
add
and
cdq
push
xchg
ss
movs
xchg
leave
dec
xchg
test
and
dec
inc
sub
jb
cmp
xor
mov
pop
adc
dec
push
into
les
ins
frstor
mov
fs
lahf
int
loopne
add
inc
mov
dec
adc
(bad)
and
scas
ds
fwait
cmp
arpl
push
pop
daa
popa
lahf
(bad)
mov
mov
repnz
and
sar
push
xor
pop
scas
mov
(bad)
mov
adc
clc
sbb
xchg
iret
cmp
add
push
or
pop
(bad)
cmps
lahf
mov
or
xchg
adc
pop
push
test
pop
xor
std
jle
and
push
push
dec
sbb
mov
fld
adc
fld
movs
inc
or
xchg
outs
or
mov
pop
std
jne
cld
push
mov
retf
jo
test
shl
cmp
lds
add
sub
sub
jle
movs
test
push
ss
test
push
xor
push
in
mov
cmp
push
xchg
adc
fs
cmp
cmp
(bad)
xchg
xchg
movs
lea
mov
scas
or
jb
mov
popf
inc
xchg
sbb
mov
and
xor
cwde
pop
push
adc
dec
and
adc
mov
or
scas
mov
push
int
pushf
shl
outs
jno
in
pushf
jmp
das
add
outs
sbb
jno
dec
mov
sub
lods
bound
rcl
ret
sub
aaa
push
test
int3
je
jmp
fisttp
fstp
das
dec
or
jno
pushf
lock
mov
sbb
xor
(bad)
out
movs
das
sub
popf
fisttp
xor
mov
rol
jge
shl
jecxz
cmp
in
lds
jecxz
mov
fcomp
ss
cmc
cli
pop
cmp
mov
repz
cmps
jl
mov
mov
out
popf
jecxz
and
xchg
sub
test
(bad)
scas
push
and
lock
adc
inc
and
fimul
aad
push
test
in
jmp
bnd
je
lock
fcom
or
ins
addr16
shr
pop
aaa
lods
xchg
inc
in
or
int3
jne
push
rcl
sbb
mov
inc
add
loopne
adc
and
sbb
aaa
repnz
adc
stos
xchg
inc
lds
push
mov
mov
and
jp
mov
in
std
mov
lods
pop
pop
jecxz
rcl
xchg
daa
pop
clc
adc
jp
mov
mov
push
and
jno
iret
mov
fnsave
in
xlat
add
outs
out
xchg
push
push
lods
std
jbe
cmps
retf
xchg
mov
sahf
icebp
shr
sbb
cmp
or
mov
repnz
ins
fs
push
add
mov
repz
test
(bad)
das
call
cwde
push
jge
shl
lods
and
add
dec
cmp
test
or
sahf
cli
push
(bad)
movs
pop
adc
mov
stos
jl
jne
xor
out
aaa
cwde
ins
sbb
sub
fisubr
or
scas
lods
aam
push
ret
shl
adc
pusha
cmp
inc
fdivr
stos
nop
sub
ins
sbb
jne
mov
push
jo
mov
inc
push
add
nop
push
gs
cmc
int
push
sahf
cdq
push
jne
imul
test
adc
fisttp
or
push
ror
movs
je
jo
loopne
enter
arpl
xchg
jl
imul
mov
cmps
push
pushf
push
out
lds
or
test
jp
not
lods
xchg
cmps
push
in
cmps
jo
pop
and
sbb
mov
jmp
jae
(bad)
je
fwait
dec
repz
cmp
cmp
jnp
arpl
sbb
add
movs
movs
cmp
loopne
sub
inc
xor
je
fdiv
retf
mov
jns
pop
call
mov
aaa
mul
push
push
or
dec
jnp
iret
adc
sbb
sti
ret
or
xchg
jl
sub
js
xor
out
lods
add
shl
or
inc
jmp
das
rcr
test
fwait
xor
cmp
mov
mov
shr
jge
mov
clc
push
and
cs
and
iret
xchg
mov
pop
sti
jne
adc
out
pop
call
dec
mov
sub
test
pusha
and
jg
ins
dec
mov
inc
test
or
push
push
inc
inc
movs
dec
aam
je
xor
retf
cli
cmp
test
push
fistp
add
sub
scas
sbb
xchg
add
popf
outs
ret
push
push
scas
arpl
(bad)
scas
bound
hlt
jo
test
ffreep
mov
shl
fimul
(bad)
bound
clc
out
or
fmul
dec
xor
or
jmp
inc
into
out
mov
scas
xchg
dec
add
test
lds
or
adc
ins
fsubr
hlt
dec
pushf
scas
mov
das
mov
cmp
rcr
(bad)
mov
(bad)
cs
mov
dec
push
icebp
sub
or
mov
push
jmp
imul
leave
sar
ins
push
sbb
ins
pop
ja
jmp
inc
das
mov
fnstenv
mov
xor
dec
push
div
mul
and
outs
xchg
fisubr
dec
pop
mov
mov
mov
and
neg
cmps
gs
fisubr
inc
outs
xor
xchg
or
push
push
mov
or
or
push
dec
scas
pop
and
or
mov
cwde
addr16
iret
aaa
or
adc
sbb
leave
outs
mov
in
push
jae
push
bound
call
xchg
push
push
push
ins
jecxz
cmp
add
ret
sbb
test
inc
je
mov
aas
test
lock
(bad)
aam
das
add
sub
or
mov
push
int3
call
ja
xor
retf
dec
cmp
sbb
jmp
popf
push
scas
dec
(bad)
lds
cmps
cmps
test
mov
xor
push
sub
add
push
int
sar
das
xchg
mov
pop
pop
clc
cmps
pop
push
sar
gs
ret
add
call
in
sbb
xor
dec
in
in
setno
in
cmc
add
fcomp
imul
shl
pushf
xchg
sub
je
sbb
cwde
sub
jl
cmc
mov
into
(bad)
dec
icebp
imul
pop
sbb
mov
stc
sbb
inc
addr16
and
mov
out
fidivr
adc
cmps
xchg
push
sbb
lock
mov
xor
fist
aam
jne
daa
lds
cwde
lds
jg
lods
sub
leave
fwait
mov
cmp
mov
hlt
jb
js
jae
daa
mov
popa
and
mov
sbb
icebp
jg
js
ss
dec
jbe
mov
shl
pushf
ins
out
aad
xor
mov
mov
adc
inc
loop
daa
push
push
mov
push
fs
loop
inc
pop
xor
xchg
lahf
push
(bad)
movs
inc
mov
add
shl
ins
sbb
pop
dec
pop
mov
fcomp
add
ins
mov
mov
push
data16
sub
dec
rol
sub
cmp
stc
push
call
sbb
dec
arpl
xchg
scas
sub
xchg
inc
int
sbb
test
xor
cmp
xor
ds
cdq
cwde
retf
cdq
xor
js
ss
pop
xor
pop
cmc
mov
aas
test
dec
adc
mov
(bad)
rcl
movs
mov
daa
mov
mov
add
push
mov
outs
pop
jno
stos
aam
or
pop
mov
pop
inc
push
xchg
inc
sahf
pop
inc
push
adc
adc
xchg
stos
std
and
sti
sbb
or
and
xchg
and
xchg
jge
mov
xchg
adc
jne
mov
sub
xchg
and
in
sub
push
inc
add
mov
jg
cld
(bad)
cmc
out
lods
jbe
mov
jl
das
push
(bad)
test
sub
nop
jp
ror
cld
xchg
idiv
adc
bound
bound
sahf
loop
push
sahf
dec
test
push
out
lods
loope
jmp
dec
jbe
sub
jecxz
inc
pusha
jo
sti
mov
std
cmp
sbb
push
add
sbb
mov
out
pop
das
in
fld
iret
mov
adc
fdiv
sahf
sub
adc
lods
hlt
outs
in
jle
and
sub
sbb
adc
test
rol
jecxz
adc
dec
in
jne
xor
sub
mov
sbb
xchg
pusha
je
dec
leave
call
adc
add
jbe
mov
pop
ja
cmps
cwde
out
mov
mov
sbb
out
pop
outs
out
xchg
call
(bad)
mov
mov
inc
adc
js
movs
and
ss
imul
in
loop
xor
dec
rcr
add
ss
popf
es
out
dec
into
mov
mov
and
cmp
mov
out
cmp
mov
mov
fcmovnbe
sub
cmps
push
inc
cmps
or
stos
mov
scas
repnz
sub
popf
int3
(bad)
ja
pop
cmc
push
jl
jp
pop
movs
fs
pop
bnd
xor
adc
fild
pop
daa
mov
ror
addr16
inc
(bad)
stos
pop
or
daa
(bad)
not
or
push
pop
mov
scas
ins
push
dec
mov
pop
push
jb
adc
xlat
ret
in
call
mov
lds
jne
dec
push
ds
pop
inc
push
push
cli
jbe
jno
imul
aam
rcl
sbb
cdq
retf
cmps
mov
repz
jno
sbb
mov
pop
push
sar
loope
sub
dec
scas
sub
pop
fidivr
mov
sbb
loope
lock
mov
jecxz
inc
daa
out
mov
icebp
cli
sar
out
push
jmp
push
dec
(bad)
xor
xchg
cwde
and
sbb
retf
push
aaa
les
sbb
xor
xor
test
jae
addr16
imul
jb
xor
popf
std
push
ins
adc
mov
xchg
push
imul
addr16
mov
in
sbb
mov
add
jecxz
sub
xor
adc
push
adc
mov
push
mov
and
add
jo
add
fist
repnz
call
add
cs
out
ja
mov
dec
and
ret
or
or
cli
sub
fnstenv
(bad)
int
pop
adc
sub
test
hlt
mov
arpl
fiadd
not
dec
shl
and
jo
les
cmp
test
jo
imul
popf
add
pop
jo
test
in
fstp
xchg
rol
pop
push
repnz
push
adc
or
cmp
mov
push
push
dec
outs
frstpm(287
aad
retf
popf
add
imul
and
or
mov
and
mov
sub
push
adc
and
aaa
sub
inc
push
sahf
mov
nop
add
add
nop
call
or
add
inc
aam
stos
add
inc
je
inc
sbb
int3
inc
or
sbb
adc
ror
jb
add
shl
and
xor
into
sub
add
shr
adc
inc
xchg
add
push
popf
inc
xlat
add
dec
and
adc
inc
arpl
inc
inc
sbb
cwde
pop
add
inc
cmp
pop
addr16
push
push
xchg
jecxz
inc
lods
scas
mov
fistp
sub
shl
push
dec
in
mov
repz
xchg
adc
inc
dec
in
rcr
jp
inc
mov
and
fild
xchg
mov
jnp
call
and
adc
jnp
push
test
add
sub
inc
xor
call
push
repnz
iret
xchg
inc
adc
xchg
dec
mov
jmp
les
inc
loopne
mov
lods
cmp
cmp
ss
call
mov
push
icebp
sub
pop
ins
or
or
pushf
sub
sub
inc
call
mov
icebp
xor
lea
mov
sbb
jg
jb
movs
enter
dec
sub
push
adc
jbe
sar
add
dec
movs
(bad)
frstor
mov
jle
std
rcpps
push
mov
xchg
lods
mov
jmp
pop
sbb
dec
lods
xchg
std
add
ins
sahf
adc
data16
dec
add
mov
cmc
sar
int3
mov
lods
mov
jbe
ss
pop
aas
jo
sbb
out
aad
std
ret
jbe
mov
in
and
pop
or
shr
in
cld
dec
repnz
retf
sbb
pop
gs
fst
cmp
dec
mov
mov
in
les
dec
cmps
and
adc
stos
sbb
inc
jecxz
sbb
hlt
sub
xchg
(bad)
mov
mov
adc
test
jno
orps
mov
fimul
sub
xchg
lods
sbb
sbb
sbb
mul
sbb
dec
test
adc
add
inc
push
jno
stos
push
jecxz
cdq
jl
pop
idiv
jmp
xor
rol
mov
test
cmp
enter
aaa
inc
(bad)
xchg
sub
or
pop
add
pop
dec
mov
adc
mov
int
popf
outs
inc
pop
inc
xor
fcmove
mov
jl
inc
pusha
mov
sub
inc
bnd
xchg
lods
in
loope
xchg
lods
xchg
cmp
jge
test
in
es
pop
inc
mov
stos
xchg
xlat
in
(bad)
xor
mov
adc
xor
mov
and
mov
push
fstp
dec
mov
rcl
lock
adc
xchg
(bad)
(bad)
imul
or
push
mov
cmc
or
or
mov
es
dec
xor
xchg
sub
adc
scas
mov
cmc
sbb
aad
fwait
jge
add
or
fwait
mov
or
add
mov
fs
push
inc
inc
add
js
jmp
inc
retf
loope
ret
sub
pop
loop
dec
dec
dec
add
mov
nop
dec
jg
pop
sub
call
cmp
mov
inc
es
data16
dec
or
dec
data16
pop
add
shl
ret
dec
leave
lahf
add
jge
sti
cmp
clc
rcr
movs
gs
(bad)
leave
sti
xor
or
inc
xor
and
dec
cmc
mov
test
movs
test
and
pushf
mov
inc
xor
add
cdq
(bad)
sbb
pop
mov
and
xor
movs
fisub
jo
and
fld
mov
push
sub
outs
sti
add
inc
mov
ins
mov
cmp
pop
icebp
ss
pop
popf
sbb
adc
add
repnz
add
shl
test
lahf
adc
pop
push
into
mov
ret
out
ss
das
jmp
mov
icebp
push
out
sbb
mov
(bad)
and
jg
sub
cld
and
call
push
adc
bnd
dec
mov
jb
out
ja
jns
mov
aaa
dec
retf
xchg
pop
xchg
cmps
and
jns
aaa
shl
fadd
arpl
movs
xor
push
pop
lock
popf
jg
mov
clc
inc
retf
out
sar
in
repnz
sbb
jne
in
push
jmp
inc
pop
inc
pop
and
test
add
cmp
sahf
fisttp
cmc
hlt
not
xor
inc
sbb
cmp
and
(bad)
(bad)
cdq
lea
nop
in
mov
inc
cmp
(bad)
jle
push
(bad)
ficomp
xchg
std
sar
outs
or
fmul
mov
mov
lods
fistp
fstp
inc
sub
leave
push
ss
sub
arpl
addr16
dec
pop
and
ficom
xchg
xchg
push
and
repz
movs
xor
pop
out
adc
popf
pop
xlat
inc
out
or
cmp
xor
jmp
cmp
xchg
fld
movs
pop
jg
dec
jmp
(bad)
xlat
xor
mov
xchg
lock
addr16
sub
pop
(bad)
leave
mov
call
mov
loopne
jae
and
sti
jae
repz
jbe
pop
cli
xchg
and
daa
fldcw
mov
ins
add
jb
adc
sbb
dec
jne
call
dec
popa
rcr
inc
sbb
mov
fsubr
test
mov
(bad)
fwait
mov
mov
sahf
jmp
mov
push
adc
and
or
sar
fwait
loope
fwait
out
and
dec
adc
lea
mov
dec
cld
push
sub
mov
push
scas
mov
ret
loope
pop
mov
bnd
xchg
dec
xor
pop
retf
sti
lock
cmp
xor
(bad)
test
movs
ret
je
gs
jmp
(bad)
push
lahf
cs
rcr
(bad)
fnstcw
sub
and
push
mov
push
sbb
adc
xchg
mov
mov
jb
push
fst
jno
call
push
cmp
(bad)
sbb
fprem
xchg
out
jecxz
mov
pop
and
pop
pop
add
xchg
inc
icebp
push
sahf
or
sar
cld
mov
dec
retf
imul
pop
rep
push
pop
daa
or
pop
and
mov
or
xchg
dec
pop
inc
mul
sub
lahf
sbb
xor
sub
dec
mov
and
sbb
sub
retf
shr
daa
stos
mov
jecxz
imul
mov
mov
test
jmp
in
sar
addr16
jp
and
fsub
jne
ins
icebp
bswap
(bad)
xor
mov
cmp
cmps
sbb
imul
mov
movs
rol
jmp
adc
xor
in
cs
add
pusha
imul
daa
xchg
dec
cli
lock
sub
jg
sbb
cld
fwait
cmp
test
sub
push
ja
sbb
int
sahf
jmp
cli
mov
in
jmp
or
sub
cs
xchg
fcom
dec
aam
cdq
ins
xlat
jno
cmps
push
retw
int3
and
(bad)
clc
cdq
daa
sbb
xchg
not
cmp
dec
jge
lods
and
sub
in
es
dec
arpl
pop
push
ds
ja
jns
mov
jbe
or
push
test
adc
fs
scas
jmp
call
pusha
xor
ds
jns
pop
jmp
jp
and
jb
or
mov
mov
pop
adc
inc
aas
sbb
cmp
sub
call
xchg
mov
mov
lods
das
and
mov
fsubr
cld
(bad)
shl
lds
pop
shr
and
mov
add
mov
sub
jle
xor
sti
das
cmp
push
xor
fnstenv
dec
xor
(bad)
jae
dec
pushf
mov
mov
test
sahf
mov
leave
enter
stos
and
les
and
or
add
imul
push
outs
jb
and
in
imul
inc
jge
jbe
std
aas
adc
fdivr
ret
mov
jbe
hlt
xchg
movs
mov
sub
movs
xor
xchg
sub
or
lods
jl
pop
fs
mov
inc
push
dec
and
mov
mov
push
or
pop
aaa
rcl
ret
dec
daa
(bad)
pop
push
mov
cmps
(bad)
in
movs
add
dec
sahf
sub
mov
xor
aas
sbb
mov
mov
jae
dec
jnp
xchg
or
xchg
jae
xchg
and
(bad)
loop
adc
movs
mov
les
mov
aaa
cdq
test
repnz
push
lock
lahf
mov
xchg
je
jg
mov
stc
int3
or
dec
aaa
out
not
pushf
push
add
out
mov
add
mov
loope
fnstcw
and
mov
adc
(bad)
call
outs
loope
test
dec
arpl
xor
sub
call
(bad)
pop
mov
jno
test
js
inc
lock
add
lock
push
sti
add
mov
mov
xchg
dec
xor
rol
add
dec
mov
ret
(bad)
pop
jmp
repnz
jge
inc
mov
add
mov
out
in
jp
jmp
call
xchg
xchg
cdq
xor
cmp
das
imul
mov
inc
inc
jl
fwait
pop
xchg
in
xchg
ins
adc
jle
test
mov
and
sub
rol
ins
xchg
cdq
push
aad
or
imul
(bad)
adc
retf
cmp
(bad)
xor
mov
int
mov
pop
cmps
ds
mov
ins
repz
jo
mov
adc
mov
ficomp
cmps
mov
ja
(bad)
pop
or
and
pop
sbb
inc
neg
jl
sbb
rcl
lea
es
sbb
cmps
pop
repnz
arpl
and
pop
mov
xchg
jbe
enter
or
nop
clc
outs
or
adc
mov
sbb
fwait
mov
leave
and
mov
fisttp
and
pop
je
pop
out
adc
push
dec
cld
(bad)
xchg
dec
nop
sub
inc
push
(bad)
add
(bad)
sub
sbb
jo
div
cmc
(bad)
mov
outs
cmps
pop
and
xchg
mov
movs
mov
jmp
fwait
push
push
lea
movs
xor
cwde
push
or
mov
pop
lods
cld
gs
mov
inc
cs
mov
dec
mov
sub
sbb
mov
in
sbb
cmps
data16
jno
sbb
lock
aad
mov
lock
mov
mov
sub
pop
mov
pop
cmc
mov
sbb
mov
xchg
add
pop
xor
dec
inc
scas
sub
adc
push
cmp
icebp
pop
mov
repz
dec
pushf
xor
aam
or
retf
inc
rcr
(bad)
jb
jg
mov
sti
jl
jo
mov
shl
sub
jmp
iret
add
dec
cmps
mov
cs
adc
jge
iret
xlat
sbb
xor
mov
popf
or
movs
out
fwait
pop
add
sub
lock
clc
or
inc
add
inc
add
pop
sbb
test
cmp
lds
int3
iret
mov
sub
mov
xor
mov
add
test
add
nop
xor
dec
(bad)
fcmovb
xchg
gs
push
mov
outs
inc
jns
adc
shl
ss
movs
push
in
ficom
or
aad
(bad)
sti
xlat
sub
(bad)
out
mov
mov
inc
or
mov
cdq
in
xchg
ret
in
(bad)
jne
sbb
in
outs
in
data16
cmp
inc
sub
pop
lea
outs
cmp
mov
or
(bad)
cli
aas
mov
jae
sbb
push
push
jbe
sti
lods
out
xlat
xchg
xchg
adc
dec
mov
mov
dec
pop
pop
cwde
add
aas
ret
leave
pop
or
stos
je
retf
aaa
test
inc
and
and
or
and
test
arpl
fdivr
in
rcr
jg
dec
sbb
movs
jmp
test
test
scas
sub
ret
xchg
into
fimul
imul
je
movs
sbb
sub
ror
sbb
xor
imul
shl
xor
ja
cmp
out
pop
in
push
add
push
std
xbegin
std
sbb
ins
aam
rol
dec
xchg
push
cmps
imul
pop
sub
mov
push
and
fs
mov
push
ins
add
fst
mov
(bad)
xchg
ficomp
jge
mov
adc
(bad)
fbld
xchg
jne
mov
sub
call
sahf
mov
xor
stc
sbb
dec
xchg
mov
pop
xlat
fs
push
push
cmp
pop
add
mov
jmp
xchg
call
sbb
(bad)
or
das
fwait
jle
aaa
push
call
loope
xchg
cmps
xchg
fs
adc
push
mov
jb
(bad)
je
mov
popa
add
hlt
mov
out
call
jle
movs
cs
repnz
(bad)
repz
mov
pop
jae
push
lods
dec
and
and
dec
xor
and
xor
cmp
test
arpl
leave
retf
scas
test
sbb
adc
(bad)
mov
jae
les
xor
cmc
ins
or
cdq
fldenv
std
call
in
adc
and
xchg
cmps
pop
in
dec
aam
mov
mov
(bad)
sahf
mov
int
xor
push
mov
pop
(bad)
cmc
ret
lock
dec
mov
scas
cmp
push
xor
into
loop
jg
outs
int3
(bad)
into
sbb
test
fwait
inc
sahf
and
pushf
imul
stos
arpl
pop
jb
jl
adc
ins
push
mov
or
shl
inc
mov
je
push
xchg
and
jmp
xlat
xor
mov
xor
int
adc
lds
hlt
ins
cmp
sbb
and
and
pop
cmp
(bad)
shl
push
es
sbb
cmp
(bad)
jge
adc
sub
xchg
popa
lods
fstp
int3
or
ds
cmp
pop
pop
or
retf
xor
cmp
ins
push
lods
out
outs
mov
pop
pop
pusha
(bad)
or
out
xor
lods
les
push
rcl
outs
sub
outs
imul
stc
jnp
or
call
jge
sar
mov
mov
int3
jmp
add
jno
mov
jo
stos
std
mov
lock
cmp
pop
and
dec
push
or
cmc
pushf
aaa
data16
cmc
push
xchg
push
mov
hlt
cs
dec
add
mov
(bad)
pop
push
call
or
aaa
add
jnp
sub
int3
jne
popa
in
jns
clc
mov
imul
dec
addr16
add
mov
fs
aad
jmp
xchg
or
retf
(bad)
iret
iret
mov
ins
outs
fidivr
mov
mov
(bad)
rcl
xchg
sub
inc
outs
jmp
shl
mov
test
xlat
psrlq
(bad)
and
mov
(bad)
retf
test
std
or
inc
fld
mov
jnp
xchg
aas
inc
jae
(bad)
daa
sbb
pop
mov
repz
push
xor
push
xchg
cmp
(bad)
and
stos
in
xor
or
into
pop
sub
out
pop
hlt
test
(bad)
not
push
sub
in
ins
nop
in
push
cld
lods
xchg
push
push
jp
sub
lods
ja
mov
lods
leave
in
cmp
icebp
cmp
ja
aad
in
mov
loopne
pop
mov
test
call
mov
test
mov
cbw
int3
mov
sub
or
sbb
shl
cmc
dec
push
movaps
mov
inc
lahf
add
imul
dec
fist
ins
mov
pop
dec
mov
cwde
xchg
dec
xchg
and
jle
out
inc
adc
mov
cwde
out
jle
or
inc
adc
mov
inc
retf
jno
and
pop
call
push
sahf
sub
and
pusha
sbb
repnz
mov
cmp
rcr
mov
neg
sub
test
add
sub
aad
xor
adc
sar
mov
xchg
mov
push
not
or
fdiv
aaa
push
popf
cdq
mov
and
arpl
push
jns
and
sbb
rcr
push
mov
jl
repz
retf
mov
es
jle
adc
jb
ds
inc
sbb
pop
push
cmp
movs
dec
dec
inc
(bad)
in
clc
jmp
movzx
into
mov
and
test
xor
or
add
sbb
inc
lock
add
push
add
adc
movs
das
shl
mov
lahf
and
rol
cmp
stos
aam
clc
jp
scas
clc
mov
(bad)
loop
push
lahf
test
js
jge
mov
repnz
mov
cmps
and
cmp
inc
jp
jmp
dec
push
dec
jne
jge
(bad)
dec
hlt
jmp
mov
les
dec
sbb
push
xchg
xchg
xchg
aad
mov
rcl
sar
fwait
cmp
mov
sub
mov
dec
sub
mov
std
(bad)
shr
jg
aad
add
mov
cmp
xor
pop
rcr
call
mov
outs
xor
cmp
imul
or
in
jne
cli
js
mov
mov
ds
icebp
ss
jb
jecxz
test
cmp
jg
(bad)
pop
stos
jnp
sub
ja
push
addr16
pop
stc
cmp
js
in
push
sbb
sbb
sub
scas
shl
es
add
sub
mov
dec
popf
call
test
cli
add
xor
jno
xchg
outs
jbe
cmp
loope
inc
dec
fbstp
pop
ret
jne
sbb
in
popa
loope
inc
cmps
rol
dec
fcom
push
stc
add
cmc
xor
test
cwde
int3
sub
mov
push
loope
mov
inc
push
mov
call
and
xlat
sbb
jo
hlt
jp
sub
popa
inc
lahf
icebp
mov
adc
nop
add
popa
push
dec
xlat
imul
cdq
jg
sahf
movs
xchg
jecxz
dec
popf
pop
mov
mov
aam
xor
out
adc
xchg
xchg
aas
rcl
sar
mov
shr
inc
sub
pushf
push
out
imul
cmp
popa
mov
call
(bad)
cmp
push
dec
inc
dec
mov
push
jge
sub
mov
movs
push
xchg
and
push
pop
and
das
stos
das
jno
cmc
dec
xor
das
outs
xlat
inc
add
dec
ins
dec
in
dec
and
ja
movs
clc
test
push
fisubr
jmp
inc
je
outs
ret
and
or
(bad)
xlat
cwde
mov
xor
inc
div
push
push
push
mov
ret
mov
loopne
mov
retf
ja
daa
xor
pop
inc
sub
test
das
push
retf
jg
sahf
outs
imul
shl
test
or
dec
mov
dec
and
retf
clc
mov
cmp
pop
bound
sbb
push
dec
mov
in
retf
hlt
mov
dec
push
pusha
add
add
xor
fstp
or
cwde
in
rol
dec
repnz
adc
adc
loopne
adc
xchg
sbb
cmp
movs
and
push
xor
pop
or
dec
inc
push
mov
sahf
cmp
pop
enter
psubb
sub
in
loopne
xchg
jecxz
inc
rcl
mov
jb
jbe
push
and
pop
or
inc
jns
sbb
bound
sub
mov
stc
push
sub
or
mov
or
cmp
or
adc
idiv
jle
push
or
pop
test
push
es
cld
or
jmp
and
jno
dec
ds
scas
outs
(bad)
in
sub
xor
push
jbe
cmp
mov
mov
jo
scas
in
or
add
push
inc
cmp
jo
or
jne
and
loop
(bad)
add
cdq
jle
sbb
addr16
xor
jo
lds
mov
pop
fcomp
movs
xor
in
pushf
push
(bad)
dec
nop
push
cmps
cmp
scas
push
cld
loope
add
xchg
es
cdq
stos
(bad)
pop
xor
cmps
invd
shl
pusha
iret
xchg
aam
lods
lock
push
int
test
cmp
pop
adc
ins
pop
jl
clc
test
sub
ror
inc
dec
std
adc
sbb
mov
pusha
add
lock
jle
out
sbb
fldcw
data16
jge
cwde
es
and
xchg
ds
add
xchg
inc
dec
adc
and
mov
in
ficomp
leave
jg
daa
push
pop
daa
rol
call
mov
ja
icebp
adc
fild
pop
push
dec
cmp
xor
in
int
jge
push
xchg
cmps
inc
ja
xor
loope
out
pop
repz
pop
jne
jl
mov
push
xchg
adc
mov
aad
js
pop
clc
jg
and
inc
xchg
pop
les
adc
mov
cmps
jo
push
pop
push
sbb
pop
or
rcl
sbb
cdq
addr16
xchg
test
xchg
pop
loope
mov
cs
mov
xchg
cmp
cmp
dec
and
xchg
pop
xchg
and
fstp
push
inc
inc
aam
jb
movs
mov
std
sub
repz
enter
mov
mov
xor
add
cwde
or
or
mov
imul
inc
bswap
mov
or
mov
nop
std
inc
(bad)
push
push
fisubr
shr
repz
add
and
cmps
or
mov
jmp
xor
test
out
xchg
sbb
ins
cli
cmp
dec
or
frstor
cmps
(bad)
(bad)
jl
jns
inc
cpuid
push
stc
lods
mov
stos
sub
jg
inc
iret
ficomp
shl
loopne
or
dec
bound
and
push
addr16
sahf
push
sbb
xor
xor
xchg
dec
mov
jecxz
sti
scas
xchg
scas
mov
ficom
sub
jp
or
cli
imul
and
scas
push
dec
cmp
jle
mov
sub
stos
cmps
add
xor
push
push
int
retf
jb
xchg
addr16
adc
loope
ins
inc
mov
sub
xor
es
dec
or
call
ds
leave
in
push
dec
or
fiadd
xor
mov
xchg
jb
scas
mov
mov
xor
in
mov
push
ja
cmp
sahf
add
and
call
sub
paddw
cs
data16
rcl
shl
jle
dec
sub
push
fucomi
mov
mov
sub
sbb
push
mov
std
sbb
push
pop
pop
cmc
sub
sbb
ins
int3
in
es
push
movs
fwait
ins
repnz
sbb
ficomp
mov
mov
pop
jb
adc
stos
xor
and
pushf
loope
jecxz
or
in
inc
and
popf
pusha
push
fidiv
(bad)
in
push
and
stos
cmp
xchg
enter
mov
mov
data16
mov
jns
shr
ins
jg
(bad)
(bad)
frstor
or
mov
in
cld
and
push
dec
sahf
pop
iret
(bad)
outs
cmps
addr16
outs
nop
mov
gs
int3
(bad)
fmul
sti
out
xlat
xor
inc
mov
or
push
pop
aaa
push
loop
ins
repnz
shl
xchg
fisttp
adc
inc
pop
fwait
sub
outs
rol
addr16
(bad)
repnz
sub
jno
std
stos
or
xchg
mov
jl
ficomp
mov
(bad)
cli
sub
mov
mov
(bad)
cmps
loop
cmp
sbb
jb
fisttp
mov
or
movs
xor
mov
int
jp
in
clc
push
fisttp
ins
out
push
pop
inc
fiadd
mov
or
push
pop
mov
mov
into
out
ret
(bad)
mov
jge
sahf
imul
ins
push
inc
fisub
std
pop
pop
push
inc
sbb
cmp
call
gs
rcl
lods
test
lods
repnz
popf
mov
jmp
stos
dec
(bad)
repnz
imul
leave
dec
loopne
call
popa
dec
jmp
adc
ins
or
mov
sub
jmp
dec
adc
sub
dec
fwait
arpl
lods
cld
sub
cld
lds
cmps
out
xor
sbb
cld
rcl
lock
loopne
mov
jne
mov
(bad)
cmp
clc
mov
out
js
mov
out
mov
push
or
pop
dec
mov
mov
stos
movs
push
pushf
mov
xchg
pop
pop
sbb
mov
test
pop
push
mov
jl
inc
pop
mov
add
(bad)
mov
cmp
out
mov
sub
enter
sar
mov
sub
les
sub
call
aaa
(bad)
cli
adc
frstor
lahf
mov
xchg
pop
adc
jnp
(bad)
daa
imul
pop
inc
push
sub
pop
xor
sti
cld
pop
jle
mov
rol
inc
inc
adc
push
mov
xchg
xchg
fidivr
aaa
rcl
mov
adc
pop
sub
push
pop
int
scas
cmp
pop
gs
mov
out
pop
mov
cdq
pop
pop
xor
daa
fisub
mov
push
ret
and
in
pop
dec
shr
dec
cmp
in
xor
xor
xor
and
xlat
jmp
(bad)
xchg
sbb
and
xor
add
jl
int3
pop
push
call
(bad)
and
mov
mov
andnps
jb
push
ins
push
mov
mov
shl
mov
scas
add
xchg
sub
pusha
movs
push
xchg
xlat
push
daa
mov
(bad)
in
scas
repnz
mov
pop
inc
popf
punpckhwd
sbb
sub
dec
jmp
pop
jb
mov
mov
aas
dec
scas
sti
in
js
out
fcom
mov
mov
sbb
stos
sbb
outs
sbb
lods
sbb
(bad)
mov
or
mov
cmc
(bad)
jne
xchg
call
xchg
xchg
fild
pop
je
test
xchg
or
popa
or
sub
shr
repnz
xchg
test
sbb
inc
jg
arpl
lea
(bad)
mov
jmp
test
push
cs
cmp
push
sub
fbld
pop
push
hlt
in
sub
jmp
outs
repnz
cs
or
xchg
dec
mov
sub
fld
jle
cmp
add
mov
jge
push
sti
repnz
adc
jle
sub
nop
mov
test
jmp
(bad)
mov
dec
jno
mov
sub
push
out
mov
sti
sub
shr
test
mov
or
sbb
adc
pop
daa
shl
test
inc
icebp
lds
xor
in
es
mov
and
sbb
add
mov
or
enter
mov
mov
add
mov
and
or
leave
inc
(bad)
rol
xchg
mov
dec
inc
packsswb
jge
in
push
fs
imul
arpl
lahf
mov
jbe
mov
out
mov
lahf
ss
enter
(bad)
pusha
pop
mov
addr16
cmps
sub
fs
(bad)
hlt
retf
jmp
imul
je
inc
stc
pop
inc
enter
int
or
sbb
int
jo
movmskps
add
dec
cmp
push
ins
sbb
and
xor
mov
inc
outs
xchg
inc
or
inc
pusha
aad
pop
jmp
int3
sub
jmp
scas
adc
jl
shl
add
lea
push
scas
xchg
pop
aad
sub
in
hlt
push
sar
daa
loopne
cmps
jmp
ret
loope
cmc
sbb
hlt
cli
mov
mov
push
xchg
icebp
sbb
add
xchg
pop
outs
iret
mov
movs
cmp
jne
stc
push
imul
test
call
shl
xchg
or
aas
mov
pop
push
pop
stos
pop
xor
data16
cmps
pop
retf
(bad)
sub
cmp
fisttp
sbb
adc
and
xchg
loop
icebp
xchg
pushf
dec
push
push
lock
in
or
scas
fdivr
sbb
pop
fimul
pop
(bad)
call
popf
test
out
lea
fs
dec
(bad)
push
inc
jmp
xor
xor
mov
cmps
jnp
in
in
dec
into
sub
sub
lock
mov
mul
shr
sub
std
outs
ins
pop
test
(bad)
lahf
sbb
xchg
ins
(bad)
stc
pop
shl
cmp
popf
sti
pushf
inc
cmp
pushf
loop
fs
and
in
sub
retf
mov
add
mov
and
repz
push
in
sub
shl
in
out
shr
pop
mov
das
nop
dec
loop
rcr
pop
pop
loopne
pop
dec
rol
imul
sbb
ja
imul
add
call
push
fimul
ror
adc
mov
and
clc
or
das
pusha
mov
sub
jecxz
sub
jno
dec
xor
xor
es
popa
adc
std
mov
mov
std
pop
mov
cmc
sbb
xor
jecxz
fucomp
jne
push
sbb
les
aas
xlat
push
test
clc
and
inc
inc
mov
dec
in
cmps
mov
jmp
loope
cdq
popa
push
popf
jg
and
pop
xlat
fucom
mov
arpl
loop
mov
xor
push
aas
int
in
xlat
push
test
neg
add
cmps
mov
or
shl
shr
xor
test
push
or
or
xchg
rcl
ja
test
loopne
add
inc
or
pop
add
add
xor
add
or
xadd
add
add
adc
adc
imul
add
ret
mov
mov
inc
push
cmp
mov
out
in
add
les
ss
sub
inc
cmp
fild
leave
pop
clc
inc
stos
dec
js
push
sbb
ffreep
jno
cli
icebp
fadd
pop
mov
fdiv
bound
jge
xor
shl
ror
push
call
popf
int3
cmp
sub
call
push
scas
push
pop
fist
jb
pop
mov
pop
(bad)
jno
or
sahf
sub
jbe
and
cli
(bad)
sbb
inc
scas
repz
xlat
cli
pop
out
xor
gs
dec
in
mov
mov
add
stc
dec
add
dec
push
add
(bad)
mov
mov
jmp
xchg
xchg
jmp
fnstcw
sbb
test
mov
push
cmp
retf
loopne
and
push
sti
loopne
xor
mov
movs
mov
stos
push
xchg
pusha
xchg
push
rol
hlt
leave
in
mov
add
hlt
sbb
push
or
xchg
push
inc
lods
xor
aas
shl
add
cmp
push
pop
mov
pop
sub
xchg
mov
xor
int3
cs
ins
sbb
inc
dec
mov
jecxz
sbb
cmps
inc
mov
jmp
push
pop
cdq
sbb
cdq
push
or
sbb
mov
add
add
or
pop
(bad)
scas
push
push
pop
xchg
and
fcmovbe
cmp
(bad)
ret
sbb
cmp
push
(bad)
lods
(bad)
dec
inc
cli
rcl
xor
shl
in
mov
xlat
repnz
ins
mov
pop
mov
loopne
add
xchg
int3
and
sub
test
xchg
iret
add
or
sub
xor
int
xchg
aam
or
add
ret
ja
sbb
ins
test
(bad)
cmp
pop
fmul
sub
xlat
pop
add
movs
pusha
les
retf
loope
xor
test
and
jl
mov
dec
dec
xlat
cmp
ja
rol
enter
(bad)
sub
mov
xor
mov
or
mov
xchg
and
xchg
sbb
les
xchg
out
out
nop
in
rcl
xor
(bad)
in
popa
jne
mov
or
mov
jg
pop
ret
jno
cmc
sub
(bad)
shl
rcr
iret
test
jbe
out
inc
pop
push
push
mov
dec
sub
mov
add
or
out
sar
xor
call
cmps
rcr
sti
fsubr
mul
outs
sub
add
test
das
aam
out
sub
and
lock
wbinvd
pop
inc
jns
fsub
jno
fiadd
mov
test
mov
je
ins
add
stc
lock
mov
push
js
je
mov
repz
je
mov
nop
push
mov
pushf
add
ins
mov
sar
call
inc
ins
add
ss
jnp
ins
mov
jle
mov
xchg
xchg
xchg
mov
xchg
stos
movq
mov
pop
cld
std
daa
rol
xor
fadd
arpl
cwde
or
sar
dec
or
sbb
pusha
sbb
add
xchg
shl
add
and
adc
xlat
inc
pop
pop
lods
xchg
xchg
test
pop
sbb
add
jp
mov
add
sbb
cld
bound
xchg
fs
stos
sub
adc
mov
mov
jmp
and
cdq
or
(bad)
xchg
or
push
inc
dec
test
push
xchg
mov
pop
loop
aam
cwde
dec
retf
xchg
or
push
inc
dec
test
push
xchg
xor
xor
rcl
scas
jg
mov
push
std
in
push
xchg
push
xchg
add
jo
inc
push
mov
or
mov
adc
(bad)
aaa
add
fild
sbb
mov
aaa
loope
xchg
cmp
jmp
pop
sar
test
adc
jb
jnp
or
pop
aas
xchg
cmc
es
lock
pop
pop
cmp
cdq
xor
jmp
sub
aad
leave
test
adc
cmp
dec
test
and
sbb
pop
adc
and
dec
push
xchg
ret
dec
movs
sahf
xchg
and
rcl
int3
pop
adc
ret
inc
lock
pop
and
add
add
scas
scas
fbstp
add
or
mov
xchg
mov
shr
or
retf
pop
loope
xor
stos
fs
inc
push
mov
enter
mov
add
aaa
fadd
pop
mov
shr
add
outs
scas
push
mov
pop
mov
fsubr
retf
jg
ins
rol
add
add
imul
xor
add
dec
movs
pop
add
shr
xchg
or
sub
push
dec
mov
mov
push
das
dec
call
inc
adc
push
hlt
and
xchg
fs
xchg
xchg
xchg
or
enter
cld
push
call
adc
stos
and
add
lods
mov
call
push
mov
inc
inc
shl
or
and
jmp
lock
clc
push
loope
lock
push
ins
or
cld
or
clc
add
add
out
mov
xchg
retf
or
jl
lock
popa
mov
test
nop
out
and
nop
fiadd
js
loopne
mov
pop
js
mov
mov
ror
add
add
adc
pop
into
mov
add
lods
mov
loopne
push
fsub
or
and
mov
loop
xchg
aad
push
fdiv
fild
pop
mov
fdiv
adc
rol
fwait
xor
mov
mov
or
mov
xor
icebp
push
fwait
pop
stc
inc
dec
lea
adc
int3
test
popa
mov
repz
sub
mov
xlat
(bad)
stc
add
pop
mov
adc
stos
mov
and
xchg
(bad)
inc
pop
sbb
jl
gs
sub
inc
and
xor
dec
push
in
dec
and
pop
and
test
inc
shl
inc
popa
pop
in
hlt
xchg
test
(bad)
fiadd
cld
jl
je
push
and
mov
daa
sub
leave
and
jb
enter
stos
out
xor
call
xchg
mov
jp
and
cwde
push
movs
xchg
and
enter
nop
dec
retf
dec
and
gs
dec
and
xor
sub
push
jb
dec
test
xchg
or
push
inc
leave
add
lods
mov
mov
adc
rcl
ror
fiadd
inc
inc
stc
cmp
psraw
rcr
sti
fsubr
mul
out
and
mov
add
mov
pop
js
int
inc
retf
not
inc
aad
mov
sar
mov
das
cmp
loope
ror
(bad)
ss
cmp
loope
push
fild
js
sub
adc
leave
sbb
xlat
loope
push
ret
ss
int
push
rcl
dec
inc
dec
lock
jb
sbb
shl
push
mov
int3
xchg
inc
push
inc
cdq
adc
inc
test
(bad)
sbb
mov
mov
ret
add
jl
icebp
jns
nop
xor
xchg
mov
lock
adc
mov
xor
xor
jne
fild
nop
(bad)
inc
cli
shr
loope
push
xchg
or
repz
outs
dec
fild
push
xchg
retf
call
jge
mov
push
jnp
gs
cmp
push
xchg
lods
jge
inc
mov
mov
retf
call
ja
xchg
xchg
fs
hlt
sub
mov
or
je
add
or
lock
popa
inc
test
xchg
mov
pop
rol
sub
and
pop
mov
push
mov
adc
fmul
call
int
fistp
aad
test
inc
mov
xchg
pusha
dec
addr16
stos
sub
mov
ficomp
fcmovb
push
rol
leave
xchg
into
ins
lahf
sbb
jns
pop
xor
fsubr
lds
xor
lods
loopne
mov
lahf
fs
jne
add
ror
sbb
loopne
pop
int
ins
sbb
outs
push
jns
mov
xor
in
pop
in
add
mov
jno
fisttp
adc
out
xchg
das
bts
sbb
loope
xor
aaa
sub
fwait
mov
fidiv
sbb
bound
xlat
or
ficomp
fisubr
sbb
(bad)
mov
sar
adc
cmps
or
shl
jl
mov
(bad)
ficomp
loop
jp
dec
mov
adc
mov
sbb
fisubr
push
test
cmp
mov
cmp
lods
cli
jle
lods
xchg
inc
ja
out
js
jns
or
popf
rcr
jbe
add
mov
or
gs
pop
ins
and
mov
add
scas
push
jge
adc
data16
mov
push
xchg
sti
jge
mov
mov
int
rcl
add
out
push
ja
mov
rcl
dec
pop
push
(bad)
sbb
mov
jno
fistp
shl
cmp
out
repnz
retf
test
out
aad
fisttp
in
xchg
sahf
retf
lds
out
push
ret
iret
lock
fbstp
mov
mov
in
pop
loope
jae
ins
mov
call
movs
lock
leave
jne
sub
in
(bad)
jmp
pop
jecxz
mov
xchg
ficomp
mov
jmp
shr
xchg
xchg
(bad)
xor
cli
lods
les
push
jmp
out
in
cmp
daa
ret
xor
dec
inc
jg
and
xchg
movs
jmp
jae
loopne
or
mov
or
cmps
push
inc
test
xchg
dec
mov
hlt
pushf
das
pop
mov
xchg
retf
int
(bad)
mov
and
or
xchg
pop
es
pop
mov
mov
popa
xor
jle
xor
mov
rol
fdivr
mov
add
fmul
stos
call
fld
cmp
rcl
xor
xchg
test
stos
add
jae
mov
dec
sub
inc
sbb
jb
sbb
std
test
std
out
sahf
cmps
sti
sbb
cmps
movs
mov
in
jle
fld
icebp
xchg
push
rcl
std
jae
inc
iret
mov
cld
push
push
and
in
mov
enter
and
lock
mov
int3
in
(bad)
push
inc
sbb
scas
lods
pop
ss
sbb
sti
mov
fnstsw
shl
xchg
mov
push
sub
cmp
push
cs
mov
test
jo
xchg
or
in
sti
and
out
sbb
pop
cmp
jle
icebp
dec
int3
pop
mov
jecxz
dec
ja
into
sbb
fmul
arpl
sahf
fcomip
mov
int3
fstp
jb
xchg
popa
pop
mov
ins
adc
stos
fcmovb
cmp
sbb
dec
push
mov
xchg
pop
pop
dec
retf
add
fmul
pop
daa
xchg
stos
pop
into
dec
sbb
(bad)
push
dec
loopne
xor
jl
cwde
iret
stos
out
inc
xlat
in
leave
test
in
inc
movs
sub
and
push
cmp
xor
push
inc
inc
mov
xchg
lods
repnz
or
sbb
cvtdq2ps
push
cdq
ds
inc
mov
lea
jno
xchg
fnstcw
int3
fld
loopne
xchg
movs
aam
pop
jle
mov
jl
es
aam
cwde
sbb
mov
call
push
sbb
dec
add
imul
push
jns
test
sub
dec
cmp
test
sbb
dec
cmp
cmps
xchg
mov
(bad)
out
lds
add
icebp
xor
push
shl
das
pop
rcl
cdq
mov
lock
add
sbb
xor
pop
mov
je
xor
rcr
into
add
add
xor
mov
xchg
add
dec
test
pop
ror
pusha
mov
loopne
push
xchg
sbb
xor
push
mov
mov
xchg
mov
or
add
or
lods
or
mov
es
mov
aam
std
inc
dec
cld
sbb
stos
repnz
mov
cmc
xor
dec
mov
inc
adc
sub
sbb
jnp
mov
jmp
mov
or
or
stos
retf
sahf
inc
pop
inc
sub
cdq
xchg
add
add
mov
shl
pop
add
int3
pop
pusha
push
pop
shl
or
icebp
mov
cwde
sbb
hlt
push
add
sub
shr
sbb
test
lahf
or
pop
push
lock
cmp
test
sbb
test
or
add
bound
aaa
push
push
rcr
ins
push
or
fcom
popa
sbb
fld
xor
or
xor
jo
mov
mov
adc
fwait
sub
or
int
push
enter
dec
xchg
xor
fiadd
add
adc
mov
test
adc
pop
jne
pop
add
add
clc
test
loopne
add
pop
add
push
(bad)
jmp
lds
sbb
sub
cmp
sub
adc
enter
or
enter
or
cmp
test
inc
cs
test
add
stc
ds
dec
lock
mov
clc
jecxz
out
xor
push
or
sub
popf
sbb
cmc
cmp
and
ins
jae
icebp
sub
mov
std
dec
add
ins
sar
pop
js
test
mov
in
mov
mov
sub
xlat
add
cmps
adc
mov
shr
leave
cmp
xlat
es
jae
push
dec
pushf
lahf
inc
jne
fidivr
inc
or
imul
push
cmp
cmps
sahf
loopne
mul
pop
pop
or
jmp
inc
in
dec
imul
sahf
jb
adc
movs
pop
fwait
pop
idiv
xchg
cmp
xchg
mov
outs
int3
fsubp
sub
mov
int
ds
adc
setno
hlt
je
sbb
pop
mov
bound
rcl
add
in
cmc
push
cld
cmp
and
push
stos
jmp
cmp
loop
out
in
cmp
or
rol
ret
sti
imul
add
or
out
popf
pushf
cmp
mov
mov
and
xor
or
fstp
cmp
mov
mov
sbb
fwait
jg
lock
sub
(bad)
cmp
or
in
enter
fdiv
stc
jns
push
leave
dec
mov
and
jge
mov
cmps
daa
ss
iret
out
jo
jp
dec
mov
inc
(bad)
mov
cmp
imul
mov
mov
jp
xchg
ret
retf
sub
mov
fisttp
fisttp
stos
aas
lahf
xor
and
push
pushf
ins
fnstcw
jmp
fwait
sbb
sub
jle
(bad)
dec
movs
(bad)
mov
mov
pop
sahf
ror
adc
cmps
aaa
test
sub
add
(bad)
push
or
dec
push
xor
ss
inc
retf
nop
mov
fadd
dec
push
dec
hlt
sbb
cdq
stos
jne
jo
dec
imul
fidiv
cmp
scas
sbb
ss
bound
mov
fldcw
in
shr
fcmovb
and
mov
mov
xchg
push
fwait
aam
cwde
xchg
mov
fcmovne
icebp
jns
in
mov
arpl
jp
in
sub
jmp
push
xlat
das
sub
pop
push
test
into
xchg
std
mov
push
xchg
xchg
int
retf
sbb
cmp
or
xchg
dec
mov
lods
jbe
push
ficom
xchg
add
stc
leave
push
mov
or
out
cmp
movs
pop
mov
pop
jecxz
pushf
dec
cmps
stos
fidivr
div
sub
pop
push
repnz
cmps
call
lahf
mov
das
jmp
imul
pop
cli
cmps
cmps
test
iret
test
push
sti
scas
popf
xor
push
dec
inc
sahf
mov
mov
clc
xchg
fsub
les
or
cmps
and
push
loopne
in
dec
inc
mov
(bad)
jae
add
mov
xlat
dec
pop
out
mov
inc
cmp
shl
inc
cmp
test
xor
mov
sub
iret
ins
idiv
es
aaa
or
add
dec
gs
push
push
dec
inc
mov
icebp
pop
mov
fs
bound
lods
or
and
in
out
pop
test
mov
xor
mov
dec
(bad)
adc
shr
(bad)
scas
xor
push
(bad)
out
ins
mov
cli
dec
dec
sub
shr
test
dec
jmp
sbb
fcmovbe
imul
(bad)
fdivr
repnz
stos
sub
clc
sub
mov
lock
pusha
test
mov
add
ds
(bad)
outs
test
and
push
mov
xchg
jne
dec
mov
jl
and
rcr
dec
dec
callw
leave
icebp
xor
push
jge
sar
dec
or
push
mov
ja
call
(bad)
jp
sbb
movs
in
cli
cmp
mov
mov
(bad)
pushf
retf
test
popf
push
icebp
dec
pusha
mov
inc
ins
cdq
cmp
call
add
jne
aad
xor
daa
jnp
jns
mov
dec
movs
adc
adc
sub
imul
daa
lds
pop
pop
inc
fcmovne
jno
push
sub
xor
sbb
outs
int
dec
ss
dec
bound
call
mov
jmp
adc
xchg
pop
mov
inc
sbb
retf
xchg
add
mov
(bad)
hlt
xchg
jmp
jl
aam
sub
inc
adc
jp
add
(bad)
rcr
pop
int3
adc
jmp
pop
int
mov
push
or
xlat
dec
jo
jg
test
dec
sub
aad
cmps
shr
jg
fdiv
mov
out
push
mov
mov
cmps
fadd
add
dec
cmp
ins
mov
cmp
lock
inc
mov
rol
mov
mov
dec
or
in
inc
(bad)
into
scas
out
push
mov
push
cli
push
add
mov
cmps
and
jecxz
jl
fidivr
pop
mov
movs
add
aam
repz
inc
dec
pop
int
sbb
rcr
mov
xor
jg
call
(bad)
paddsw
nop
movs
repnz
inc
div
inc
in
mov
or
jp
loope
cmc
fwait
daa
push
fcom
fsubp
scas
loopne
fld
scas
ins
stos
hlt
inc
test
in
sbb
cwde
inc
cmp
pop
scas
std
inc
fs
push
enter
out
sbb
addr16
xchg
fisttp
dec
xchg
je
bound
test
stc
test
xchg
ins
shl
(bad)
fldenv
stos
xor
lods
xor
(bad)
out
dec
cmp
cmp
mov
mov
inc
push
fimul
xor
iret
fistp
nop
stc
sahf
mov
shr
dec
lods
retf
btr
fs
add
cmp
mov
out
les
pop
paddq
jae
mov
into
loope
mov
fistp
lds
in
ret
xchg
into
inc
ror
inc
xlat
mov
mov
pop
scas
cmp
sbb
(bad)
jmp
out
retf
xchg
div
and
int
ss
sahf
cmp
sub
jp
adc
mov
sub
iret
mov
enter
push
loope
fmulp
test
ret
lea
repnz
cmp
xchg
sbb
add
out
xchg
xor
mov
mov
lahf
mov
xor
ror
out
bound
jo
test
pop
mov
push
cli
dec
or
inc
(bad)
push
aas
cmp
out
mov
cmp
aas
sub
adc
jg
jno
jecxz
(bad)
in
fiadd
std
fnstenv
sbb
and
cmp
ret
pushf
iret
jo
outs
aam
cmp
les
ror
pop
mov
push
dec
pop
scas
ds
xchg
lea
xchg
sbb
dec
cmp
fdiv
daa
or
mov
scas
jns
jns
fisubr
cmp
xor
cmp
(bad)
stc
(bad)
push
movs
dec
and
lds
dec
fidivr
push
cmps
in
cmp
jno
sahf
dec
push
and
(bad)
in
into
pusha
mov
xchg
lods
xlat
pop
shr
idiv
jno
jae
mov
push
inc
stos
dec
sub
in
inc
out
push
iret
adc
js
ret
cmc
mov
rol
loope
in
not
mov
ds
mov
outs
xchg
loope
repz
out
out
jne
outs
add
imul
outs
jb
mov
test
and
mov
fidivr
jbe
lods
push
js
sbb
cmps
mov
sub
cmc
fsubr
stc
aam
scas
mov
aam
daa
fld
(bad)
in
addr16
aad
mov
shl
movs
sub
sub
aad
call
call
jb
mov
clc
add
movs
retf
mov
add
(bad)
pop
ss
pop
pop
jmp
pop
mov
(bad)
test
cld
xor
jmp
in
lods
ss
mov
pop
call
ret
repnz
hlt
inc
movs
in
in
cld
pop
fadd
aaa
mov
aam
lahf
jp
test
xor
cmp
(bad)
in
fcmovnb
mov
js
sbb
sub
add
into
(bad)
popa
inc
mov
cmc
pop
xchg
push
test
inc
push
test
out
sbb
adc
mov
and
cmp
add
mov
je
jg
push
sub
scas
dec
jg
pusha
xchg
out
ret
xor
mov
int3
scas
dec
mov
mov
sub
sub
inc
loopne
data16
jge
mov
fwait
iret
sub
int
mov
div
push
imul
mov
(bad)
test
gs
test
ret
mov
lea
sub
cmp
jns
iret
into
or
call
cld
lock
cmps
les
stos
adc
in
retf
imul
xchg
mov
scas
sbb
out
add
dec
cwde
jo
mov
push
stos
pmovmskb
ret
sar
inc
push
retf
mov
in
jb
ret
or
and
mov
pop
(bad)
imul
scas
sub
inc
stc
inc
(bad)
shl
sbb
sbb
mov
cmps
cmps
addr16
mov
dec
lock
(bad)
or
xor
lds
out
rcl
(bad)
jo
mov
sbb
sbb
pop
jb
sar
leave
dec
cwde
cmp
js
add
pop
(bad)
pop
xchg
jae
mov
jl
enter
push
and
pop
xchg
mov
ja
jb
retf
retf
cdq
out
shr
gs
rcl
lock
das
adc
sbb
push
xchg
(bad)
mov
fwait
mov
fisttp
loop
sub
retf
daa
out
mov
dec
sahf
xchg
jno
xchg
cli
mov
sub
popf
dec
push
jb
sub
mov
cs
jg
sub
sbb
pop
pop
(bad)
mov
push
sti
xchg
outs
push
lods
or
sar
xor
cmp
adc
loop
mov
(bad)
mov
sub
inc
inc
sbb
lahf
mov
xchg
in
jge
jb
jns
pop
(bad)
pop
pop
inc
push
ds
sbb
cwde
fwait
imul
icebp
mov
popf
pop
jmp
mov
xor
push
fidivr
in
sub
push
pop
sar
jmp
adc
push
icebp
fbstp
shl
pop
cld
pop
fidivr
lds
jp
cmp
inc
arpl
inc
inc
push
xchg
xor
adc
test
cmp
(bad)
rcl
or
cmp
jl
(bad)
pop
dec
ins
jp
icebp
nop
test
hlt
cld
cwde
mov
inc
or
mov
rcr
adc
sub
jmp
cmps
push
call
sti
pusha
sub
daa
push
popf
inc
mov
jne
add
or
dec
sbb
or
aam
push
popf
inc
adc
dec
mov
push
aad
or
jne
cmp
lahf
dec
sbb
push
add
dec
mov
cmps
push
cmp
push
lock
fistp
aam
mov
test
mov
jge
ret
mov
xchg
call
cmp
fild
push
fidiv
fisub
lahf
sbb
jbe
push
xor
mov
jge
test
dec
out
lahf
test
jmp
jno
in
sub
enter
add
xchg
(bad)
sub
ins
ja
adc
ins
jae
or
cmps
imul
jmp
sub
and
mov
test
pop
mov
and
test
shl
lock
shr
(bad)
out
sahf
neg
pop
lods
in
jb
dec
and
xor
cmp
dec
icebp
call
sub
sub
push
inc
aam
std
push
adc
jns
test
push
nop
push
jae
push
cs
test
(bad)
jmp
sar
jne
mov
push
adc
fnsave
loop
inc
jnp
aam
add
dec
inc
jns
xchg
push
stos
scas
sbb
ror
push
stos
fild
stos
cld
clc
or
mov
loopne
(bad)
ins
push
push
in
sub
mov
mov
scas
aad
ret
jle
cmp
repnz
jns
jle
call
neg
loop
xchg
inc
and
pop
pop
loope
sub
dec
retf
sbb
inc
xchg
loop
je
xor
cmps
add
push
sub
jns
enter
jp
lods
arpl
xor
dec
call
xlat
push
jae
retf
xlat
or
(bad)
pop
pop
es
jno
xchg
in
jmp
outs
sahf
imul
je
outs
or
xor
ins
sub
es
call
adc
inc
test
imul
jne
sub
xchg
inc
inc
adc
dec
fisub
push
xor
mov
and
inc
cld
sub
mov
xchg
or
xchg
inc
add
inc
call
neg
mul
cwde
jcxz
sti
iret
mov
jns
lahf
aas
mov
ds
mov
dec
addr16
test
jle
fisttp
mov
pop
fs
push
jns
jnp
inc
ficomp
repnz
dec
pop
icebp
fwait
clc
test
mov
jge
es
push
adc
call
movs
xchg
mov
loop
inc
dec
hlt
outs
call
call
in
mov
xchg
int
or
mov
adc
cli
or
sub
ja
inc
inc
and
or
and
mov
add
add
mov
movs
or
es
retf
adc
imul
mov
sbb
and
(bad)
rol
inc
nop
(bad)
js
enter
lods
add
in
fisubr
(bad)
dec
or
out
pop
call
or
xchg
and
movs
add
and
rol
adc
je
and
mov
mov
sub
shl
or
adc
or
mov
out
jp
inc
nop
pop
rol
int
mov
inc
cmp
adc
dec
inc
jae
mov
xor
mov
es
repz
imul
add
xchg
adc
add
xor
or
and
and
and
scas
test
addr16
push
in
xlat
stc
xchg
fisubr
or
adc
push
out
xchg
mov
js
out
jae
dec
imul
es
inc
and
add
adc
xor
add
adc
push
push
imul
or
in
mov
jmp
sti
lds
pop
shr
es
xchg
stc
cmp
data16
jl
and
out
xchg
sbb
shl
ja
mov
cmp
scas
jl
sub
add
mov
xlat
call
cwde
mov
push
sti
(bad)
icebp
sbb
dec
or
in
je
jae
dec
sub
adc
cmps
mov
or
sub
imul
cmp
or
inc
dec
xor
xchg
inc
xchg
es
push
xchg
xchg
sahf
rcr
ret
cs
popa
cmp
jecxz
adc
push
popa
mov
xchg
outs
pop
push
shr
or
ret
xchg
mov
call
retf
movs
popa
mov
out
call
jnp
js
repnz
cmp
repz
(bad)
fwait
movs
iret
je
xor
mov
iret
cdq
jnp
mov
fldenv
xchg
mov
imul
cmc
sbb
pop
jmp
dec
push
shufps
fisubr
sbb
inc
cmp
inc
cmc
or
pop
sub
das
dec
inc
sub
sbb
mov
test
les
mov
push
mov
jnp
loopne
call
std
jecxz
mov
cmps
mov
sub
in
xchg
jmp
movzx
es
xchg
jbe
jg
push
fld
cmc
pop
mov
imul
jl
lods
or
xor
clc
rcr
imul
stos
jo
or
loope
repz
push
inc
mov
adc
mov
jp
mov
in
mov
or
jne
rcr
jne
cmps
dec
push
jp
out
fstp
aad
retf
xor
(bad)
mov
in
sub
in
les
cmp
cmps
mov
cmps
(bad)
jmp
xor
(bad)
sub
mov
fiadd
dec
or
call
mov
dec
out
imul
bound
push
loope
cli
sbb
imul
fistp
jne
cmps
fisub
out
pop
pop
ds
lods
sahf
ds
mov
std
jge
gs
fimul
add
fmul
xchg
imul
mov
enter
cmps
xchg
lods
mov
and
jmp
dec
mov
retf
sub
or
jne
test
fstp
sti
xchg
retf
cmps
retf
mov
in
dec
imul
and
jmp
ss
repnz
inc
out
pop
pop
(bad)
or
mov
cld
int
push
out
xor
mov
pusha
jl
mov
test
lds
jns
lock
xor
jmp
mov
cld
retf
ss
imul
add
jecxz
ja
push
sahf
xchg
sbb
mov
ficom
xchg
adc
je
and
xor
pop
cwde
cmc
mov
jmp
jp
hlt
xor
cmp
xchg
aam
fidivr
jno
sub
adc
push
js
fbstp
pop
aas
jl
pop
jne
mov
js
psubq
out
xor
rcl
jg
inc
inc
xor
cmp
fbstp
add
jmp
mov
call
sbb
icebp
inc
cmc
add
fisub
mov
hlt
mov
or
or
push
mov
aam
iret
repz
pop
xchg
int3
scas
push
cli
mov
cmp
add
call
mov
xchg
xchg
nop
fidivr
pop
stos
lahf
in
mov
pushf
sbb
shr
test
and
lock
ins
mov
popf
and
cmp
and
daa
push
into
cld
out
(bad)
cmp
jp
in
cmp
inc
mov
jnp
pop
(bad)
mov
xlat
mov
(bad)
int
arpl
in
inc
std
jecxz
add
(bad)
pop
js
mov
daa
jg
movs
or
mov
punpckldq
dec
or
fsubr
fidivr
and
add
inc
pop
sahf
add
mov
and
imul
inc
fwait
xchg
add
pop
test
scas
daa
xor
push
sbb
mov
mov
or
xchg
cmc
sbb
add
dec
push
or
ror
in
aaa
push
out
ret
arpl
lock
sub
add
sub
shr
into
lods
(bad)
cvtps2pi
(bad)
mov
mov
fidivr
daa
mov
mov
js
sbb
ss
sbb
loope
ret
xlat
push
mov
int3
aam
dec
adc
and
jmp
mov
mov
inc
xchg
push
pop
std
fcomp
pop
sub
rep
int3
add
mov
aad
nop
push
and
sti
mov
or
adc
xor
loopne
sbb
rcl
sbb
mov
inc
pusha
retf
sub
test
mov
jle
xor
test
aas
jl
add
xor
stos
mov
sbb
mov
ret
fcmovu
pop
adc
(bad)
add
mov
mov
xor
icebp
add
dec
stc
and
inc
lock
inc
aam
add
iret
setnp
scas
lods
adc
test
sbb
(bad)
(bad)
mov
test
jmp
push
lahf
hlt
sub
xchg
aad
repz
jmp
in
fcomip
dec
mov
pop
pop
sub
add
inc
test
stos
repnz
in
sub
mov
repz
loop
neg
test
ror
movs
outs
outs
jo
imul
pop
enter
mov
dec
fcmovb
sahf
push
pop
dec
lods
test
push
fxch
es
jl
add
pop
xchg
je
mov
(bad)
or
xor
fwait
in
mov
mov
mov
xor
xor
js
scas
stos
ficom
sahf
adc
push
jns
inc
inc
jmp
test
loopne
inc
inc
movs
lds
inc
adc
out
push
mov
and
push
dec
adc
xor
pop
enter
pusha
(bad)
sub
test
mov
retf
mov
pusha
out
jae
mov
nop
cmp
repz
js
dec
pop
pop
jnp
(bad)
or
dec
popf
(bad)
stos
dec
loope
scas
sbb
xchg
popf
nop
daa
xchg
sub
stos
test
shr
imul
push
sub
add
adc
movs
mov
(bad)
lds
fimul
icebp
(bad)
sbb
mov
xchg
rol
repnz
jne
daa
sbb
movs
leave
retf
adc
retf
js
jge
mov
lods
add
push
mov
push
push
bound
sub
popa
sub
nop
push
pop
add
imul
test
jle
dec
mov
sti
jne
adc
std
mov
mov
(bad)
rol
push
cmp
jo
adc
pop
fdiv
or
scas
inc
jne
lahf
sbb
stos
mov
int3
or
sbb
xchg
dec
arpl
pop
xchg
aas
cmp
in
jno
(bad)
icebp
mov
test
dec
sbb
cli
outs
cwde
adc
mov
push
push
sbb
jmp
clc
stos
mov
int
jg
lock
xchg
pop
push
sti
pop
mov
loope
mov
mov
xor
sub
mov
xchg
jbe
push
xchg
cmp
loopne
sub
fldcw
or
lods
xchg
mov
scas
shl
call
int3
aad
sub
xchg
ins
gs
outs
ss
pop
aaa
inc
shr
or
