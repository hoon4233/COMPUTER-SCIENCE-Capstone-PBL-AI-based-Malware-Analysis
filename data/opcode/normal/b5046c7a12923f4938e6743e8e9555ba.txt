fcomp
add
adc
add
add
or
sub
jge
dec
fdiv
stos
push
aam
and
xlat
push
jae
mov
adc
add
pop
(bad)
addr16
jne
inc
das
or
daa
pusha
cmc
jl
xchg
mov
jge
cli
shl
inc
xor
cmc
pusha
(bad)
mov
jb
arpl
mov
pusha
stc
jns
mov
jmp
lahf
xor
push
pop
dec
and
push
into
and
imul
les
jo
mov
ja
hlt
in
adc
jno
inc
sbb
mov
fwait
push
adc
ja
xor
int
dec
fs
xor
fmul
or
fisubr
icebp
and
pop
dec
xor
jns
dec
lea
dec
xchg
out
(bad)
imul
dec
shr
jb
fwait
repnz
stos
mov
pop
div
pop
add
jmp
xor
add
ds
fst
dec
and
dec
call
or
lods
add
hlt
rcl
dec
gs
pop
jbe
ins
xor
sbb
repnz
cli
outs
lds
add
popa
lods
mov
xor
sbb
push
mov
mov
daa
std
xor
test
bound
das
mov
ins
xor
mov
cmp
add
js
pusha
or
inc
cmps
iret
push
adc
loop
(bad)
sbb
int
leave
sbb
and
out
mov
aas
jl
mov
(bad)
in
sbb
ins
and
and
xlat
push
(bad)
sub
xchg
popa
adc
xchg
push
imul
and
enter
int3
fmul
cmp
and
js
(bad)
test
aas
in
rcl
sub
dec
mov
and
imul
mov
pop
repz
and
xor
nop
xor
mov
xor
sbb
cmps
test
xor
push
and
jo
or
push
jle
xchg
dec
loop
lahf
jo
gs
sti
xor
adc
inc
push
inc
in
jmp
shr
xchg
push
push
add
or
in
add
add
add
divps
movs
ret
push
inc
(bad)
cli
outs
adc
int
pop
cmp
inc
and
es
mov
lahf
sar
cmp
xchg
sbb
push
inc
mov
mov
fisttp
stos
jmp
js
mov
sub
xchg
xchg
dec
jge
jge
fsubp
test
cmp
inc
call
push
adc
xchg
shrd
gs
xchg
xor
add
in
jge
pop
cmp
fstp
mov
mov
xchg
test
mul
cwde
xor
and
xchg
into
lods
jb
jecxz
outs
cli
imul
jo
push
fdivp
sbb
sub
xor
scas
icebp
bsr
push
call
dec
add
push
xlat
movs
xlat
inc
dec
mov
mov
out
adc
in
movs
sbb
mov
dec
aam
add
xlat
iret
and
ret
test
adc
lds
sbb
cli
add
push
sbb
sbb
(bad)
ins
(bad)
into
add
push
pop
jbe
mov
jno
mov
pop
aam
push
rol
sub
icebp
inc
or
cmp
jge
not
pop
add
ja
xchg
scas
inc
push
mov
sub
or
stos
imul
les
jmp
jne
cli
leave
jmp
dec
xchg
xlat
(bad)
fdiv
cli
xor
fbstp
pop
out
ins
push
int
bound
das
mov
mov
nop
(bad)
jg
retf
mov
cmp
or
xchg
jb
fisubr
push
sbb
lock
adc
and
push
mov
push
daa
xchg
outs
add
fnsave
pop
stc
jle
xlat
jp
xor
aas
data16
(bad)
mov
test
sahf
scas
cmp
push
enter
dec
sbb
jmp
push
mov
mov
adc
xchg
std
inc
ins
mov
fisttp
dec
jb
outs
jecxz
push
out
cmps
or
loope
jne
xchg
mov
cs
lods
(bad)
mov
test
xor
retf
cmp
cdq
je
jecxz
stos
int3
jo
je
test
lods
ret
cmps
add
push
ret
jg
jg
ss
xchg
test
jl
add
push
mov
push
inc
fdivr
xor
cld
inc
div
pusha
cmp
mov
mov
sub
xchg
cdq
es
inc
xor
ins
hlt
and
imul
shl
lods
push
rcl
adc
jmp
pop
cld
sbb
dec
leave
cmp
adc
sub
ds
cmp
mov
shl
and
rol
pop
and
in
shr
sbb
lahf
adc
xor
out
int3
sbb
sti
dec
inc
aad
les
add
push
fcomp
fsubr
outs
sbb
retf
out
dec
mov
xor
xor
es
push
sbb
repnz
push
xchg
xchg
push
cmps
ret
adc
cmp
(bad)
loopne
jbe
jnp
push
pop
nop
repnz
cmp
adc
add
(bad)
inc
push
sbb
out
aaa
js
and
movs
push
pop
jle
sbb
mov
xchg
cmp
seta
es
add
inc
pop
lods
fimul
mov
(bad)
in
ja
lods
sbb
fbld
dec
mov
movs
xchg
imul
mul
repz
jne
aas
arpl
or
enter
pop
(bad)
aaa
cwde
clc
mov
rcl
fiadd
in
mov
(bad)
stc
repz
retf
cmc
sbb
jecxz
cmp
daa
cmp
imul
mov
or
ror
retf
imul
inc
adc
adc
ss
test
out
inc
inc
push
stos
mov
movs
sbb
mov
icebp
mov
mov
cmp
push
hlt
aam
lea
or
into
mov
mov
js
add
ds
push
in
pop
pop
mov
pop
pushf
or
ins
ds
out
test
imul
push
shr
sub
in
addr16
test
dec
xchg
mov
mov
and
xchg
pop
sub
push
xchg
and
scas
mov
cmp
cmp
scas
adc
(bad)
(bad)
or
push
dec
pusha
sub
adc
mov
daa
sbb
nop
push
dec
dec
push
fst
in
sub
mov
pop
push
add
pcmpgtw
inc
jo
popf
div
cmc
int3
sbb
sbb
in
xchg
sbb
lods
scas
or
ds
fadd
stos
jmp
sub
and
push
mov
mov
ret
xchg
sar
loope
adc
aam
imul
ret
mov
mov
(bad)
and
in
add
loopne
jl
aad
cs
xchg
loope
call
(bad)
dec
cmp
mov
xchg
shl
movs
in
sbb
jae
pop
stos
(bad)
pop
sar
cli
ret
pusha
mov
mov
dec
cmc
sub
mov
scas
in
mov
cmp
mov
push
xchg
sub
xor
movs
dec
and
jp
xchg
pop
cwde
call
std
pop
jnp
adc
xchg
pop
xchg
rcr
dec
xchg
mov
mov
mov
std
test
hlt
enter
push
test
jne
sub
pop
popf
jns
nop
cwde
int3
sahf
addr16
ror
jbe
call
mov
(bad)
stc
in
cld
mov
pop
inc
js
ds
loop
and
sub
adc
xchg
pusha
call
je
not
ror
fisttp
push
lea
mov
imul
rcr
adc
sbb
add
dec
sub
dec
fs
rol
dec
cmp
icebp
inc
daa
rcr
retf
iret
dec
(bad)
rol
and
(bad)
cli
sbb
sbb
lods
std
push
pop
aaa
cmp
and
ret
ficom
push
int
mov
icebp
arpl
push
pop
hlt
repz
xlat
jge
lock
retf
add
jmp
or
rcl
pop
mov
mov
and
sar
jmp
mov
jge
or
push
dec
sub
xor
(bad)
nop
dec
bound
shl
ss
inc
dec
xchg
shl
pop
inc
out
mov
push
pop
setle
in
mov
shr
dec
xor
cmp
cs
pushf
repnz
in
dec
outs
pop
add
fnstenv
sub
add
outs
jecxz
dec
lea
call
(bad)
sar
adc
mov
fist
and
jb
call
icebp
iret
retf
mov
adc
icebp
jbe
mov
and
push
cmp
test
lods
ror
gs
lahf
stos
lods
sbb
ins
xchg
test
daa
sbb
dec
in
retf
mov
cs
(bad)
ins
cmovb
imul
push
inc
adc
inc
jl
sub
stos
ds
add
aam
lock
xor
outs
movs
lahf
push
push
push
clc
repnz
pop
and
addr16
mov
ja
add
ret
sar
shr
popa
mov
dec
mov
push
xlat
jmp
jl
fistp
bound
pop
mov
sahf
push
loopne
xlat
bound
ds
add
rcr
in
test
lods
push
repnz
sar
test
or
in
push
and
sar
or
jbe
into
cdq
mov
int
aaa
xchg
and
sub
sbb
push
dec
cmc
sbb
mov
inc
jg
jmp
in
bound
cmp
cmc
not
add
fsubrp
sub
hlt
mov
or
push
cmp
xchg
sub
inc
push
dec
in
add
and
fmul
mov
(bad)
int
shl
ja
ins
xchg
dec
jb
data16
outs
les
mov
mov
add
fwait
fwait
sbb
xchg
cmp
cmps
not
dec
dec
cmp
push
mov
hlt
mov
push
arpl
sti
add
pop
or
jl
int
daa
mov
rcr
or
stc
inc
lahf
mov
jbe
jns
call
xor
jg
iret
stos
in
stos
in
sub
es
jb
aad
push
mov
xchg
mov
inc
inc
mov
lds
jmp
out
outs
add
stos
ror
sar
shl
shl
adc
ret
call
adc
test
xchg
jp
or
jmp
dec
xchg
adc
cmp
xchg
inc
jae
pushf
(bad)
shl
scas
cli
(bad)
movs
lahf
test
cli
lods
adc
stc
jmp
inc
xor
cmp
add
outs
int3
dec
int
ss
mov
jbe
call
xor
lds
mov
sub
mov
repnz
and
or
cmpxchg
sub
pop
mov
cli
or
mov
jnp
add
retf
lahf
shl
arpl
jge
lods
and
movs
mov
xchg
out
stc
rcl
retf
jmp
in
xchg
aas
retf
fadd
mov
test
(bad)
outs
movs
lock
or
add
cmps
loope
mov
js
icebp
jb
lock
repnz
das
mov
add
or
mov
cmp
push
in
retf
sub
add
nop
lock
test
out
inc
int
les
push
add
cmp
jl
or
jns
(bad)
aam
cwde
ror
cmps
and
sbb
out
fmul
mov
loope
pop
jmp
movs
test
test
fmul
dec
je
je
push
push
xchg
jno
dec
or
pop
add
or
dec
repnz
stos
add
shl
sub
mov
(bad)
mov
pusha
ins
shr
fsubr
mov
mov
mov
mov
cwde
js
into
push
push
or
mov
(bad)
shl
fisub
imul
sbb
pop
mov
sahf
cmp
ins
lods
add
cmp
into
sti
nop
adc
and
test
leave
rcl
inc
arpl
das
mov
movs
retf
lds
jg
or
push
sbb
in
ins
jne
btr
pop
lock
ins
movs
mov
jns
out
push
and
mov
jb
js
cmp
xchg
rol
cmp
scas
xor
inc
jbe
in
mov
mov
mov
pop
dec
iret
jo
pop
adc
cmp
add
inc
push
push
pusha
(bad)
pop
int3
cmp
nop
sbb
retf
vmovd
sub
push
in
sbb
cmp
sub
lahf
adc
test
xor
pop
jle
jnp
sti
cmps
test
mul
mov
pop
sbb
add
push
adc
mov
jmp
leave
outs
arpl
out
loopne
sahf
push
adc
int3
fwait
xchg
pop
jg
pushf
cmp
call
sbb
xor
sub
adc
cmps
aaa
pop
enter
sbb
arpl
cmp
dec
push
mov
sar
cwde
pushf
fs
ret
(bad)
loope
cli
xor
push
imul
or
jbe
fist
mov
ja
pop
aaa
cmp
pop
test
push
xor
sub
(bad)
mov
ins
(bad)
loop
shl
int3
adc
push
psubd
fld
sub
mov
dec
nop
int3
in
(bad)
arpl
ror
xor
cld
push
cwde
sub
mov
xor
dec
jmp
jp
fld
pop
out
adc
adc
mov
pop
mov
dec
xor
cli
pop
pop
ins
cs
daa
scas
pop
mov
dec
xor
(bad)
xor
arpl
xor
dec
mov
mov
sub
adc
add
cmp
push
loop
push
pushf
std
inc
rcr
or
sub
out
(bad)
aad
push
mov
ds
dec
loopne
fisubr
pop
mov
xchg
pop
xchg
test
sub
mov
sbb
enter
dec
push
dec
cmps
xchg
pop
ins
pop
push
mov
ror
fld
call
retf
loopne
mov
cmp
cs
cmp
lods
cmovne
inc
jl
add
daa
xor
jp
xor
rcr
stos
add
mov
mov
sbb
pop
mov
mov
outs
fwait
gs
pop
out
loop
xchg
fs
cld
mov
cmp
inc
mov
sub
int3
xlat
nop
out
into
in
jg
imul
fstp
bound
ud0
adc
add
push
and
test
add
adc
lock
mov
scas
test
inc
(bad)
aad
inc
imul
or
daa
xchg
aad
cdq
nop
xor
sbb
xor
aas
repnz
(bad)
push
test
mov
ds
adc
stos
icebp
test
(bad)
push
adc
bound
out
sbb
add
fsub
repnz
mov
push
popa
xchg
inc
scas
inc
ret
popf
xchg
lock
movs
sub
push
sbb
xchg
mov
mov
mov
pushf
lods
adc
pusha
inc
jmp
mov
sub
adc
inc
dec
dec
dec
repnz
xchg
xchg
mov
push
pushf
mov
out
sbb
adc
jl
das
xchg
mov
jle
mov
cdq
pushf
ja
data16
cmp
je
int3
pop
inc
aad
sub
mov
jp
pop
jmp
cdq
sub
rcr
mov
adc
int
mov
repnz
sub
dec
adc
pop
adc
sub
int
out
gs
mov
bound
movs
jne
addr16
pop
xor
jmp
js
clc
sbb
jmp
pop
cmp
sti
mov
enter
xor
mul
fs
movs
jmp
jl
mov
cmp
clc
pushf
repz
xchg
rcl
pop
ins
push
mov
xor
ret
mov
shl
js
push
iret
aad
push
in
scas
adc
dec
aaa
ja
fs
mov
inc
push
dec
mov
(bad)
rcr
sub
mov
and
(bad)
jge
jae
mov
loop
dec
mov
jp
ins
xor
(bad)
cmp
and
adc
pop
inc
sti
aad
mov
cpuid
add
repz
pop
cdq
xlat
jne
or
add
dec
adc
(bad)
addr16
mov
pop
push
add
adc
sub
mov
test
mov
xchg
movs
out
sbb
rcr
adc
cmp
mov
or
add
cld
vmread
inc
scas
xchg
aaa
mov
pop
pop
fs
fadd
xchg
out
in
pop
faddp
jnp
outs
pop
adc
mov
ja
neg
sbb
fcomp
(bad)
jecxz
pop
cmp
aaa
shl
mov
jmp
cmp
stos
jnp
movs
daa
cli
(bad)
hlt
and
clc
xor
cwde
retf
(bad)
xor
test
gs
cmp
outs
mov
add
or
sbb
or
and
mov
xchg
adc
mov
lods
pusha
sti
or
fcom
xor
and
ror
sub
outs
ins
xor
push
add
movs
mov
shl
fdiv
mov
aad
and
fwait
ds
mov
bound
mov
mov
jl
or
xchg
addr16
(bad)
pop
je
or
dec
mov
pop
icebp
push
mov
sub
frstor
or
(bad)
iret
dec
int
es
mov
sbb
jae
xchg
out
mov
add
scas
mov
sub
adc
jno
ss
scas
jl
mov
sub
push
mov
stos
cmp
inc
pop
jg
cmp
lahf
out
stos
adc
push
hlt
bound
sub
jmp
sub
jns
inc
aas
sub
mov
jecxz
repnz
fwait
ja
fistp
aam
in
sbb
shl
add
adc
sub
jmp
mov
jb
mov
sar
jmp
aam
push
test
xchg
inc
test
stc
mov
arpl
loope
add
inc
in
daa
gs
mov
scas
inc
sub
mov
dec
repz
lds
pop
sbb
or
inc
inc
cmp
mov
call
dec
(bad)
cmp
jmp
fs
ja
sbb
sub
mov
movs
sti
out
sub
out
xchg
ret
jns
jmp
ins
and
int
jg
aas
mov
aas
(bad)
loopne
jmp
rcl
pop
outs
xor
scas
jecxz
pop
sbb
xchg
fild
or
inc
inc
aad
sub
movs
ret
sbb
sbb
dec
sar
pop
mov
push
mov
dec
mov
gs
pop
sbb
and
sub
or
sub
mov
inc
sub
std
push
push
pusha
jae
push
xor
or
and
mov
xchg
aam
jmp
aas
scas
sbb
inc
pop
xchg
shld
cli
pop
dec
mov
and
or
imul
cs
push
fucomip
inc
(bad)
in
fsubr
sbb
outs
cmp
ror
add
cmp
push
int3
(bad)
jno
imul
ror
mov
and
jns
stos
jle
pop
push
(bad)
iret
jne
jecxz
pusha
repnz
push
jge
push
and
jp
dec
sub
mov
sbb
sbb
stos
test
(bad)
sbb
fs
lahf
ss
or
pushf
mov
mov
test
sbb
sub
hlt
retf
sub
sub
push
pop
ins
jl
cwde
sbb
inc
movs
clc
ins
daa
das
mov
or
and
pop
mov
and
push
in
lods
icebp
mov
into
retf
addr16
inc
or
dec
call
push
push
dec
sbb
aad
rcr
repnz
add
into
mov
jmp
push
aad
cmps
shl
stc
push
xor
arpl
push
xchg
mov
push
(bad)
cmps
aad
adc
icebp
sbb
outs
and
movs
cmc
enter
xor
cmp
or
call
mov
add
dec
out
or
sbb
or
xchg
dec
int
add
fild
bound
nop
adc
pop
sti
outs
in
call
repnz
int
pop
mov
icebp
dec
mov
mov
aam
int3
cld
add
imul
xor
jmp
movs
ja
fisubr
jge
gs
pop
shr
sbb
pop
test
into
dec
sub
mul
pop
aad
inc
inc
sbb
push
adc
ins
movs
push
aam
bound
xor
xchg
sub
mov
sub
add
call
inc
push
sbb
mov
imul
paddsw
inc
imul
cwde
sub
stc
mov
mov
cmp
and
push
add
(bad)
shl
xor
xchg
jmp
mov
cmp
imul
push
xor
test
sbb
rcr
mov
popa
sub
add
pushf
test
xor
or
data16
ins
rol
adc
xor
jg
sub
pop
(bad)
mov
cmps
or
call
(bad)
sbb
ret
pop
(bad)
outs
push
ror
data16
xchg
sub
fidivr
mov
test
(bad)
and
stc
xor
pop
movs
cmps
inc
xlat
fcom
mov
inc
xchg
mul
push
or
out
jb
test
push
adc
(bad)
mov
ins
ins
in
scas
ss
cs
dec
shl
push
outs
mov
mov
cmp
aas
test
mov
mov
inc
dec
sub
data16
xlat
(bad)
mov
loopne
xor
cmp
xchg
jno
retf
push
inc
jb
xor
mov
sahf
mov
xchg
pusha
cmp
mov
call
sub
dec
ins
push
test
mov
pop
and
add
ja
or
cmp
sub
mov
(bad)
aam
pop
add
pop
cmp
pop
outs
loop
push
and
lods
add
jg
sbb
cld
xlat
shl
inc
jae
sub
jmp
shr
imul
jb
ins
pop
inc
mov
popf
arpl
daa
out
dec
adc
adc
mov
inc
je
mov
sbb
in
imul
repz
fcom
mov
jnp
jge
adc
and
std
jge
adc
xor
push
cmp
(bad)
out
mov
ret
repnz
lods
adc
dec
pop
xor
add
fbstp
in
(bad)
mov
pop
ret
pop
les
dec
in
xor
aas
and
add
std
or
dec
ret
jp
jecxz
sub
xchg
ja
cmp
aam
loop
mov
or
mov
stos
mov
stos
in
and
jp
cs
or
daa
stos
jo
ds
ror
das
sub
idiv
fild
mov
add
push
daa
icebp
or
xor
mov
or
in
(bad)
es
pop
xor
stc
add
int3
pop
setl
(bad)
mov
add
xor
test
leave
adc
lahf
pop
and
fld
jmp
mov
pop
push
add
push
ds
or
sbb
hlt
cld
cmps
and
fcomp
and
inc
or
xchg
xor
bound
jg
(bad)
loop
push
mov
gs
movs
add
mov
sbb
inc
fwait
out
pop
push
mov
xlat
sub
jo
push
xor
enter
dec
retf
pop
mov
ret
test
into
ror
adc
pop
aam
mov
leave
mov
ret
push
clc
mov
ja
loopne
and
mov
(bad)
shl
push
dec
pop
ds
jne
cmps
out
repnz
out
inc
fwait
call
mov
add
in
jo
xchg
daa
daa
cmps
es
and
(bad)
popa
dec
enter
cmp
div
dec
push
xchg
inc
jp
xlat
repnz
pop
shl
adc
cmp
adc
aas
add
xor
jae
adc
daa
movs
pop
jo
pop
jns
xor
adc
jp
(bad)
push
sub
mov
int
cmp
lea
sbb
pop
pop
outs
leave
push
xchg
fidiv
push
repz
jecxz
or
stos
jae
aam
adc
push
mov
sbb
xor
nop
sbb
fcmove
movs
pushf
push
imul
and
shr
pop
mov
loope
scas
fs
movups
push
or
mov
stos
mov
pop
cli
adc
retf
imul
imul
dec
fmul
inc
fistp
rcl
fsub
ficomp
outs
jns
inc
jbe
mov
or
inc
jnp
nop
shl
(bad)
inc
in
icebp
(bad)
push
mov
out
xchg
inc
mov
lods
push
push
mul
mov
cmps
cmp
inc
jbe
loope
test
cmp
fstp
dec
sbb
add
mov
leave
in
or
(bad)
sahf
xchg
vandnpd
in
sbb
js
mov
loopne
pop
cli
aaa
inc
xchg
or
xchg
inc
mov
add
mov
adc
mov
push
adc
mov
xchg
call
rcl
dec
popa
xchg
ror
push
xor
inc
rcr
int3
push
xor
push
sub
xchg
cld
sbb
pop
pop
push
xchg
cmc
adc
aaa
in
stos
in
ds
sahf
mov
sub
add
aam
(bad)
lock
or
test
mov
inc
(bad)
mov
test
and
cld
sahf
dec
or
jmp
mov
test
out
add
aad
arpl
in
push
vphaddwd
push
cs
aam
outs
xor
adc
shl
(bad)
(bad)
out
lahf
out
add
dec
dec
je
out
fwait
cwde
test
cli
sbb
rcr
ds
push
mov
mov
dec
bound
pop
mov
not
loopne
shr
clc
xchg
cs
ja
xchg
fistp
mov
hlt
push
fdivr
or
not
outs
inc
pushf
dec
pop
out
cs
inc
in
push
push
and
test
cmps
jp
or
ror
mov
mov
cmp
movs
or
mov
(bad)
sbb
cmc
xchg
icebp
(bad)
(bad)
push
(bad)
jg
mov
mov
cmp
shl
add
(bad)
leave
sbb
movs
les
imul
inc
and
out
push
nop
imul
adc
int3
inc
pop
or
sbb
outs
ins
repz
lea
adc
in
retf
xchg
test
(bad)
inc
add
xchg
sbb
inc
fnstenv
addr16
xchg
enter
sahf
jge
retf
leave
xor
loop
lahf
push
sti
stos
adc
push
inc
and
jnp
imul
ins
pop
popf
shr
je
lock
outs
iret
lock
pop
add
call
sub
xor
shr
adc
cmps
mov
stos
aas
in
add
es
push
adc
pop
es
cmps
push
push
fisttp
stos
mov
mov
(bad)
lahf
mov
lock
adc
or
cmps
mov
adc
outs
cdq
jg
sub
jmp
mov
mov
stos
lods
mov
fbstp
outs
je
in
leave
sub
dec
enter
and
or
inc
dec
sbb
jmp
fnstsw
mov
arpl
pushf
cdq
bts
or
cmp
jg
xchg
lea
je
cld
xchg
js
push
dec
push
jmp
mov
dec
call
push
jno
or
in
xchg
lock
test
add
fiadd
xchg
mov
mov
xchg
add
push
js
lea
jbe
ficom
add
setb
pop
repnz
pop
test
sbb
cmc
jg
stos
ret
dec
pop
mov
call
xchg
inc
mov
ret
mov
jle
mov
fistp
cld
les
fld
(bad)
outs
pop
cmp
sti
add
pop
jp
dec
sbb
stc
retf
jge
ja
int3
imul
lods
sub
fs
ds
and
(bad)
mov
pop
adc
gs
or
test
nop
jmp
or
lods
jmp
arpl
cmp
inc
xchg
dec
and
fcom
das
xlat
sbb
sub
scas
xlat
adc
jbe
retf
cmp
stos
adc
scas
sbb
pop
or
mov
adc
sub
test
(bad)
enter
mov
jne
add
ret
add
lahf
loop
xchg
mov
in
push
scas
sub
and
inc
mov
icebp
ins
out
jmp
loope
mov
dec
push
xor
repnz
sahf
call
mov
addr16
fisttp
or
mov
int3
fcom
adc
enter
mov
xor
mov
icebp
add
lods
iret
ret
sbb
daa
or
xor
adc
movs
xor
and
(bad)
jo
push
hlt
inc
inc
push
mov
aam
dec
test
cmp
stc
and
fisttp
in
sub
lds
mov
add
mov
mov
inc
xor
fistp
les
xor
cmp
lods
out
xor
push
sar
ror
cmp
push
repnz
inc
rcl
mov
mov
xor
xchg
data16
add
xor
(bad)
(bad)
cld
ins
mov
add
fdiv
lods
pop
pop
dec
cmp
dec
retf
cmp
xchg
dec
int3
or
jbe
popa
push
jmp
test
xor
(bad)
jge
int3
or
mov
in
movs
dec
sahf
or
in
imul
imul
rol
and
(bad)
repnz
lock
sub
dec
shl
movs
lds
cmp
xor
dec
and
jb
mov
sbb
fdivr
sbb
not
sub
push
repz
dec
jns
retf
pop
enter
fisttp
jecxz
lods
push
nop
sbb
push
imul
mov
js
loop
cs
aas
mov
xor
pop
mov
jmp
xor
pop
mov
call
mov
arpl
xlat
aam
sbb
sbb
shl
add
mov
loope
push
cmp
movs
xchg
leave
or
add
pop
in
lods
lock
inc
jl
retf
dec
push
int
outs
push
into
xchg
mov
int3
pop
cmp
push
cmc
push
sti
mov
mov
popa
aaa
adc
das
add
push
dec
xor
jmp
mov
fwait
enter
test
repz
xchg
je
fisttp
test
add
adc
mov
in
add
int3
movs
test
fidivr
icebp
sbb
jmp
inc
mov
push
push
call
repz
cmp
jo
cmps
and
and
repz
xor
dec
arpl
or
inc
outs
xor
mov
icebp
push
shl
mov
add
cmp
dec
stc
push
stc
das
mov
nop
test
and
aam
lahf
cli
pop
mov
inc
test
(bad)
mov
mov
xlat
xor
ror
std
push
clc
xor
cmc
pop
add
sub
mov
jg
jmp
mov
ins
mov
sub
push
adc
push
mov
dec
and
loop
sub
in
xchg
bndstx
lods
out
enter
(bad)
lods
call
or
call
and
in
test
mov
fistp
fisttp
mov
push
jne
jae
xlat
sbb
pusha
jb
inc
or
add
pmaxsw
and
add
jmp
mov
into
cwde
loopne
xchg
add
cli
repz
or
xchg
aaa
adc
ja
mov
stos
dec
(bad)
lahf
xchg
mov
mov
xchg
jo
nop
push
daa
sub
or
sahf
inc
sbb
scas
fadd
mov
mov
add
movs
xor
std
hlt
in
inc
jmp
dec
mov
inc
test
add
lahf
adc
ss
adc
bound
in
out
pushf
stos
in
jae
mov
jns
xor
jo
push
jecxz
mov
imul
xchg
mov
jnp
pop
loopne
mov
test
cs
sbb
std
or
dec
dec
mov
sub
retf
mov
faddp
and
mov
fcmovnb
sub
pop
cli
add
push
pop
inc
xchg
pop
arpl
lds
sahf
out
ret
and
pusha
(bad)
imul
test
push
xor
xlat
aam
dec
ins
and
cdq
xchg
jbe
push
dec
in
jge
sbb
mov
or
out
cmp
jo
cmps
mov
push
sbb
gs
iret
xor
push
cmp
mov
mov
scas
or
jns
jmp
mov
sbb
or
adc
mov
rep
arpl
and
add
add
jmp
jl
test
add
fistp
xor
xchg
sbb
das
sub
mov
lods
call
mov
or
lods
mov
xchg
jmp
add
or
test
dec
or
sub
mov
push
pop
mov
mov
ja
jl
cmp
mov
hlt
xchg
dec
sub
fldcw
pop
dec
pop
cmc
imul
popf
fcmovb
dec
pop
xchg
fld
push
mov
inc
lods
ror
inc
fs
xchg
or
into
sahf
push
jg
das
test
cmp
jae
sub
mov
lock
fbld
xchg
outs
in
xchg
(bad)
xor
daa
in
mov
rcr
xor
cmps
imul
in
into
push
push
cli
inc
or
jl
inc
mov
pop
or
xchg
leave
ins
cmps
cwde
test
inc
jne
sbb
es
lds
mov
enter
inc
inc
push
pop
lahf
xchg
add
pushf
dec
leave
inc
lods
jns
xchg
push
or
adc
xchg
inc
mov
iret
add
sbb
cmps
(bad)
mov
rcr
xlat
cs
lea
dec
(bad)
adc
xchg
jnp
fadd
enter
sbb
inc
(bad)
out
ds
push
and
fs
(bad)
fadd
sub
shr
mov
add
cmp
push
cli
mul
xchg
rol
dec
pushf
push
ror
cld
or
ret
push
sahf
push
into
mov
push
inc
(bad)
out
push
test
xchg
mov
fcomp
retf
xchg
inc
or
xor
push
rol
push
jle
loop
jns
inc
es
jmp
jo
fmul
mov
movs
and
sub
adc
imul
stos
imul
and
imul
xchg
mov
aam
ficomp
sbb
ret
aas
adc
push
sbb
fsubp
add
adc
imul
pop
cmp
push
rcr
retf
lahf
or
daa
out
pop
aam
mov
mov
scas
test
mov
xchg
div
jg
and
in
movs
sbb
xor
bound
push
push
int
push
out
retf
xlat
dec
adc
js
lods
dec
inc
pop
dec
ffree
mov
jb
mov
push
mov
cmc
lahf
jnp
mov
movs
dec
mov
mov
push
(bad)
sub
xor
inc
call
int3
gs
xchg
cld
sub
and
aas
loop
dec
xchg
repz
popa
mov
mov
in
jmp
or
movs
movs
mov
ins
test
repnz
cmp
pop
rcr
(bad)
aas
cmp
outs
pop
sbb
fist
jg
int
loopne
call
and
push
inc
pop
out
and
mov
push
test
bound
stos
out
lahf
mov
test
cmc
loopne
inc
push
clc
mov
ja
cwde
es
jnp
pop
iret
iret
mov
gs
loop
mov
inc
mov
shr
jae
inc
pop
scas
mov
aam
jmp
ja
es
inc
into
pop
ja
call
xor
pop
fnsave
push
enter
cdq
cmp
fwait
jecxz
mov
test
rol
push
mov
cmp
aaa
add
cmp
data16
nop
test
pop
xchg
scas
xchg
test
iret
push
sub
and
dec
mov
pushf
popa
sbb
and
jmp
dec
lods
jp
push
sub
jo
jb
xchg
(bad)
xchg
lods
es
test
test
inc
fs
mov
cmp
xchg
scas
xchg
in
jmp
fadd
mov
dec
mov
mov
jle
push
and
aad
sbb
mov
mov
in
mov
in
das
fwait
jo
call
bound
pop
fimul
(bad)
adc
adc
test
rol
shl
push
in
sbb
sti
mov
fdivr
iret
and
fwait
inc
jb
jbe
xchg
in
arpl
cmp
xchg
pusha
lahf
fst
repnz
in
pop
mov
mov
test
test
pop
dec
sub
xchg
inc
fsub
or
inc
pop
call
rcl
or
ret
fidivr
inc
xchg
dec
aaa
sub
push
lea
xchg
fs
xor
jbe
jne
mov
out
jae
ss
(bad)
call
mov
data16
mov
xchg
jne
jp
lods
adc
fiadd
stos
arpl
mov
imul
mov
fisub
xchg
into
pmulhuw
aaa
loop
and
xchg
rcr
test
ss
mov
ficomp
loopne
out
es
ror
adc
mov
dec
mov
fnstenv
(bad)
arpl
jge
or
idiv
push
xchg
xor
(bad)
popf
jl
pop
dec
fstp
push
rcr
cmp
loop
pop
stos
movs
je
loope
cmc
cld
bound
fisubr
cmc
and
(bad)
repz
lock
cld
push
xchg
aad
or
sahf
jno
xchg
jnp
pop
mov
xchg
jecxz
out
add
stos
mov
(bad)
mov
(bad)
ficomp
lods
pop
leave
jb
enter
fsubr
mov
enter
inc
sbb
retf
outs
lock
daa
cmp
data16
mov
lods
and
in
fld
jge
adc
sbb
push
adc
mov
add
mov
je
sbb
std
int3
jae
and
push
xchg
stc
(bad)
ret
mov
int3
jbe
loop
rcl
out
xchg
inc
or
popf
(bad)
mov
cdq
pop
shl
jbe
data16
daa
xor
(bad)
sub
jns
xchg
xor
inc
or
dec
shr
(bad)
dec
mov
pop
or
or
push
into
mov
cli
jnp
out
outs
movmskps
out
lods
push
and
push
test
jg
test
xor
mov
mov
cmp
gs
push
jle
rcr
adc
stos
mov
dec
lea
mov
inc
mov
int3
addr16
lahf
test
nop
xchg
loopne
pop
cmp
mov
movs
call
add
je
jmp
sbb
xchg
and
fdivr
mov
cmp
fisubr
sti
call
push
dec
shl
mov
(bad)
loope
mov
loop
(bad)
push
sub
cmp
shl
jo
je
in
jbe
in
mov
aaa
(bad)
outs
xchg
imul
mov
jp
pop
loopne
(bad)
add
clc
mov
das
mov
cld
inc
iret
lds
imul
xor
dec
rcr
mov
into
mov
or
inc
rcr
(bad)
(bad)
push
and
lods
icebp
or
retf
or
push
(bad)
call
xor
dec
inc
imul
jnp
dec
jb
jl
rcr
cmp
sahf
ss
add
bound
mov
in
xchg
les
loop
jmp
add
fsub
iret
js
sbb
mov
lock
push
(bad)
fsubr
cmp
sub
mov
fisttp
inc
imul
pop
out
mov
pop
jmp
fst
daa
outs
fisubr
mov
mov
ds
fld
sti
push
into
gs
stos
dec
cmp
outs
clc
stos
push
std
or
push
sbb
mov
inc
sahf
xor
test
push
push
(bad)
daa
(bad)
inc
pop
mov
jae
xchg
iret
and
jmp
pop
aad
jecxz
add
jg
jnp
call
xor
sub
mov
into
in
out
xchg
jo
xchg
in
jl
stc
arpl
sub
fbstp
inc
test
hlt
inc
dec
jbe
push
sub
dec
jae
call
stos
jmp
inc
jmp
std
call
(bad)
inc
ret
lods
lods
pop
sbb
movs
retf
add
xor
lahf
stc
in
test
rol
mov
and
push
and
adc
cwde
cld
aad
or
mov
and
lods
and
mov
mov
mov
cmp
stc
aad
jp
int
test
aam
or
sbb
je
popf
mov
clc
mov
adc
push
cdq
(bad)
(bad)
mov
inc
push
loopne
cwde
pop
fnstcw
push
ja
lea
pop
inc
jecxz
loop
push
push
aas
pop
add
mov
push
scas
hlt
(bad)
dec
cmp
pop
ret
cmp
repz
mov
mov
je
je
jecxz
add
inc
mov
ins
aam
jno
add
jbe
mov
push
or
lds
scas
int
push
repnz
sbb
fdiv
sbb
jns
pop
pop
in
repnz
neg
dec
popf
inc
lock
ret
push
push
inc
cmp
fst
mov
mov
dec
loopne
push
lock
push
jmp
push
test
imul
push
and
push
movs
shr
sbb
push
sbb
not
pop
sub
shl
adc
pop
mov
jo
and
or
loop
div
out
loope
sbb
jno
cmp
push
xlat
fistp
mov
xchg
lock
mov
fistp
loop
loopne
mov
or
and
add
test
pop
push
call
jns
sar
push
loopne
push
mov
inc
dec
js
in
leave
(bad)
outs
lea
mov
fucomip
xchg
mov
fimul
and
cdq
aas
pop
or
xor
aam
push
cmc
push
mov
xchg
stos
(bad)
mov
cmps
or
or
sbb
test
adc
mov
sbb
sub
aam
not
adc
mov
daa
add
add
adc
aad
into
cmps
mov
cmp
(bad)
jns
xchg
test
std
sub
repnz
out
nop
test
adc
mov
mov
xor
mov
out
leave
dec
inc
jmp
inc
pop
push
mov
add
gs
sub
gs
ins
sbb
jg
push
neg
daa
mov
clc
ds
jae
adc
aad
(bad)
xor
test
dec
loop
or
fdivr
scas
mov
or
inc
dec
aaa
sbb
jmp
ror
idiv
jg
dec
repnz
push
mov
fcmovne
pop
int3
adc
cld
ficom
sbb
aad
lods
mov
daa
cmovbe
fdivr
lea
shr
pop
pop
xchg
jbe
movs
xor
xchg
out
adc
aaa
add
(bad)
mov
ins
repnz
add
inc
add
push
xor
fild
and
lods
ret
ret
or
jle
repnz
stos
pop
fdiv
fsubr
push
sub
out
data16
push
add
inc
or
adc
movs
or
ds
dec
test
lahf
retf
pop
dec
sahf
inc
adc
xchg
push
addr16
call
fistp
dec
mov
push
sub
add
xchg
pop
sbb
iret
rol
neg
sbb
ss
push
lds
inc
and
add
lods
adc
icebp
cmp
ficomp
mov
in
inc
mov
fstp
es
push
push
adc
inc
jns
int
adc
ror
(bad)
xor
jno
and
push
and
dec
outs
pop
dec
push
dec
movs
test
(bad)
lock
mov
test
inc
xor
sahf
sbb
das
add
int3
xchg
push
pop
stos
or
add
aam
fimul
fldcw
dec
pop
xor
and
jecxz
pusha
cmps
ror
cmps
add
shl
sbb
lods
cli
cmp
add
xor
mov
iret
adc
sbb
mov
sub
mov
dec
sub
shl
mov
and
shl
mov
add
pusha
jg
call
jp
sti
leave
fsubr
mov
mov
cmp
cli
imul
mov
and
mov
scas
pop
test
(bad)
mov
push
push
xchg
jno
adc
test
scas
cmp
mov
add
fisttp
aam
icebp
adc
mov
jg
inc
xor
fucomip
or
sbb
pop
lea
mov
jo
add
aas
movs
cmp
jl
add
dec
daa
jne
shl
jl
movs
call
lods
and
mov
mov
repnz
mov
repnz
not
mov
loopne
mov
(bad)
shr
inc
jae
inc
stos
lods
pop
in
xor
mov
jnp
mov
jno
test
pusha
and
in
sbb
icebp
dec
sub
push
adc
mov
stos
out
rcl
cmc
and
test
add
pop
push
aad
xchg
cdq
(bad)
push
sub
add
cmp
xchg
scas
jb
hlt
jo
push
push
and
shl
mov
mov
(bad)
jmp
xor
into
test
adc
bound
out
dec
sub
pop
bound
(bad)
dec
movs
lahf
xor
(bad)
js
out
fcomp
fistp
adc
pop
daa
fsub
mov
rol
push
or
pop
mov
pop
or
out
adc
idiv
in
or
in
dec
xor
cmp
(bad)
adc
pop
inc
dec
xchg
out
out
test
mov
cmc
mov
jns
cmc
dec
jg
lahf
adc
je
fistp
xor
ds
and
mov
add
sbb
mov
add
inc
into
xor
and
lock
dec
int
pop
jne
inc
dec
(bad)
pop
loopne
(bad)
or
lds
sbb
push
jb
mov
mov
retf
lea
sub
xor
xchg
hlt
adc
push
add
jb
(bad)
and
xchg
adc
xchg
ret
int3
xlat
mov
sahf
pop
mov
pop
cmp
and
fcomp
jmp
and
xor
dec
lahf
and
mov
mov
push
push
sub
sbb
sub
push
mov
dec
stc
dec
pusha
inc
rol
jp
pop
xchg
cwde
pop
ret
mov
sbb
adc
adc
stos
cmp
mov
out
jne
mov
mov
or
mov
xchg
ins
test
scas
repnz
adc
fmul
mov
shr
arpl
inc
shr
popa
fcmovnu
sub
adc
adc
and
sbb
cli
inc
iret
adc
jne
mov
ds
movs
cmp
dec
ret
nop
inc
ss
in
mov
iret
or
jl
dec
push
xor
inc
dec
adc
push
or
pop
adc
dec
xor
pop
shl
mov
call
xor
(bad)
psllq
mov
jns
or
fldcw
aam
dec
arpl
movs
outs
sbb
(bad)
xor
cmp
add
es
jecxz
(bad)
sbb
cmc
jecxz
mov
pop
icebp
push
retf
aaa
pop
in
mov
add
add
push
rcr
out
dec
out
pop
daa
ror
call
outs
xchg
adc
mov
add
lods
or
xlat
sub
fld
mov
and
mov
int3
pop
retf
jl
push
ss
mov
or
adc
cmp
in
sub
loope
sbb
retf
sub
rol
jne
sar
xor
sub
xor
in
mov
push
in
dec
and
iret
in
add
xor
fstp
les
call
retf
xor
ins
adc
in
inc
jmp
inc
(bad)
ins
fisubr
cmp
jno
inc
fisttp
xchg
jmp
add
jge
lods
inc
in
jno
cmp
popa
fld
mov
test
in
in
ss
movs
mov
fdivr
(bad)
and
sub
lock
js
ins
mov
or
jmp
xlat
pushf
adc
test
imul
sub
xor
je
mov
dec
gs
xchg
mov
xchg
das
push
dec
sar
or
xor
push
scas
inc
(bad)
pop
add
out
mov
mov
loope
push
sbb
xor
or
push
jp
cmp
in
add
xchg
enter
mov
(bad)
aaa
lock
dec
mov
mov
xchg
ret
stc
mov
or
scas
out
fcmovnbe
adc
mov
adc
cld
neg
neg
mov
dec
leave
outs
pop
pop
mov
mov
rol
out
mov
pop
lea
or
cwde
mov
mov
jns
xchg
and
movs
jle
mov
mov
ins
out
dec
jae
jb
iret
pop
pop
aam
gs
mov
in
fwait
or
mov
add
xchg
pop
mov
or
pop
pop
(bad)
loopne
jecxz
jne
inc
imul
and
cmp
(bad)
jns
adc
mov
cmps
imul
rol
xor
or
push
scas
lods
retf
mov
loope
mov
arpl
(bad)
popa
mov
call
mov
and
(bad)
cli
out
sub
daa
sahf
call
push
jo
jae
in
imul
push
pop
scas
mov
test
das
retf
mov
lea
popf
or
sbb
or
gs
cmp
add
test
mov
mov
xchg
sub
mov
adc
inc
popa
jle
xchg
and
int
shl
xor
(bad)
cs
pop
dec
scas
std
inc
int3
aaa
cmp
and
out
dec
out
sbb
sahf
cmc
inc
add
retf
nop
fdivr
mov
mov
rcl
sbb
outs
sbb
xchg
xchg
rcr
mov
stos
cdq
jmp
cmp
sbb
sbb
mov
out
stos
or
dec
sub
push
and
xor
popa
jnp
inc
gs
jp
cmp
push
fidiv
cwde
add
xchg
sar
(bad)
in
cmp
jae
call
mov
mov
pop
ret
inc
stos
xor
(bad)
and
push
pop
xor
dec
out
frstor
add
jmp
pop
pop
sbb
pop
or
test
lea
dec
out
sbb
push
popa
dec
ja
inc
mov
cs
pop
movs
jne
sub
jnp
sub
adc
scas
pop
sub
push
xor
push
add
mov
mov
adc
ret
mov
pop
outs
dec
mov
cmc
and
xlat
and
add
jecxz
dec
inc
scas
fidiv
out
aaa
mov
fsubr
icebp
lods
out
je
mov
pop
push
lods
inc
adc
fimul
mov
repnz
daa
mov
cmps
mov
fcmovnb
xchg
loop
xchg
mov
fsubp
sti
push
cmp
shl
mov
cmp
aas
sbb
mov
test
pop
addr16
xchg
mov
aas
mov
jne
jbe
dec
fist
popa
push
inc
or
mov
dec
and
out
mov
add
dec
rcr
pushf
out
sub
(bad)
ins
les
shr
push
cmp
(bad)
jb
jp
dec
mov
or
adc
pushf
inc
shl
cwde
mov
dec
and
adc
call
mov
inc
pusha
jp
jg
icebp
test
push
test
fdiv
jle
std
jl
aad
repnz
inc
ja
hlt
es
in
xchg
ja
ins
aas
lds
data16
push
xor
dec
mov
aad
and
cdq
adc
(bad)
jecxz
outs
fwait
jo
lds
sub
inc
test
adc
sar
lea
inc
sub
dec
adc
rcl
xchg
adc
sbb
mov
imul
dec
mov
pop
loop
fsub
sub
cs
jg
pop
cld
gs
push
push
inc
movs
int3
jmp
pushf
adc
sbb
int3
(bad)
stc
sub
fcmovbe
retf
lahf
adc
jecxz
xchg
inc
or
cdq
sbb
add
into
mov
pop
leave
xchg
sub
popa
sbb
das
jns
dec
in
push
cmp
jmp
dec
lea
pop
cmp
and
cmp
adc
outs
push
xchg
hlt
mov
leave
add
outs
dec
repnz
adc
mov
(bad)
rol
mov
cmp
mov
push
ror
xchg
or
das
lahf
je
ss
lods
fwait
add
cmc
movs
pop
lea
in
xlat
cmp
cmp
sbb
add
cmp
adc
mov
xchg
xchg
push
adc
xchg
sbb
sub
inc
inc
push
scas
scas
adc
out
add
xor
sub
iret
pop
popa
lea
iret
cld
inc
repz
js
add
sbb
xor
inc
mov
fs
into
ror
pop
test
sub
and
into
cwde
pop
movs
js
stc
add
aaa
mov
ficomp
icebp
sbb
xchg
(bad)
lock
daa
cdq
sub
aaa
cdq
push
dec
ins
call
mov
mov
adc
sub
daa
cmps
and
pop
mul
pop
ins
adc
js
and
xor
out
inc
aam
fwait
mov
mov
int3
sti
clc
or
shl
stc
mov
int
xchg
push
fdivp
repz
adc
jmp
push
pop
sub
js
mov
mov
xchg
sar
xor
pop
mov
sub
pop
popf
add
in
movs
sub
(bad)
mov
lock
iret
(bad)
mov
cmp
pop
lods
fwait
(bad)
fstp
or
cmp
test
sbb
iret
imul
adc
inc
ins
xlat
pop
mov
or
pop
test
sbb
mov
test
add
adc
cli
sbb
cs
or
and
dec
pop
fldenv
outs
xor
in
adc
in
adc
jb
jne
inc
shr
cdq
xor
mov
sub
sbb
(bad)
fld
cmp
pop
sbb
test
aas
jo
dec
mov
hlt
mov
adc
add
fimul
(bad)
fpatan
mov
rcl
jl
out
dec
movs
mov
pop
repz
or
cmp
cmc
dec
mov
add
pop
and
push
addr16
mov
mov
or
inc
mov
jbe
aam
sbb
pushf
dec
test
into
mov
and
push
dec
lahf
mov
mov
cdq
popa
add
xchg
fwait
mov
cli
xchg
xor
sub
pop
jmp
xchg
sbb
or
sbb
bswap
lock
jne
ins
dec
push
push
icebp
add
out
inc
ja
mov
into
cdq
aas
cmps
push
out
ret
daa
sub
(bad)
mov
inc
imul
push
fwait
adc
mov
jecxz
sbb
xchg
ins
cwde
out
js
rcl
xchg
push
call
gs
xchg
fstp
mov
adc
sub
call
outs
sub
jecxz
fcmove
stc
sub
xchg
sub
pushf
test
movs
shl
dec
mov
and
sub
or
(bad)
in
mov
out
fld
pushf
or
repnz
xchg
imul
outs
pop
int3
test
fldcw
cmp
push
sub
push
adc
gs
push
rcr
jmp
lds
jmp
(bad)
pop
mov
repnz
sbb
jnp
(bad)
mov
and
std
out
lds
fs
shr
dec
jno
shr
pop
cmps
int3
sub
and
popf
outs
add
movs
ret
sub
inc
repz
leave
ins
add
cmp
mov
dec
test
mov
or
xchg
cmp
mov
mov
imul
dec
dec
repz
scas
jno
pushf
fmul
mov
pop
fistp
pop
jmp
sbb
fwait
inc
pop
repnz
scas
add
mov
inc
pop
std
sub
lock
inc
sbb
pop
repnz
xchg
add
stc
pop
mov
fidiv
jae
lods
int3
aad
mov
pop
pop
jecxz
in
cmp
cmps
push
sub
jle
repnz
push
xchg
jp
gs
sub
rcl
jl
mov
pop
aas
clc
mov
sub
mov
adc
pusha
retf
lea
xchg
add
and
les
cmps
sbb
loope
cmp
xchg
fsubr
movs
shr
(bad)
mov
shr
fs
mov
jle
cmps
mov
cwde
xchg
addr16
mov
push
mov
add
add
sub
leave
daa
lods
push
sub
adc
scas
test
pop
lahf
push
mov
mov
dec
add
out
xchg
daa
mov
and
xor
and
fnsave
pop
pop
mov
ret
fisttp
popf
popa
imul
sub
popa
sub
push
jl
xor
cmps
jbe
test
cmps
hlt
fidiv
aad
stc
mov
or
fldcw
into
loopne
or
add
out
repz
mov
ja
hlt
xchg
nop
cmps
cmp
xrelease
push
mov
push
sahf
adc
push
cli
push
dec
pop
pop
xchg
sahf
in
stos
retf
scas
mov
jmp
jno
ins
mov
ret
icebp
or
clc
sbb
mov
fisttp
sbb
push
lods
sub
stc
mov
or
xchg
add
sysenter
sub
add
jmp
(bad)
cwde
push
jo
jge
pop
add
jge
pop
mov
jmp
jns
mov
pop
aas
xchg
push
mov
std
or
retf
pushf
push
xor
(bad)
xchg
add
(bad)
sub
xchg
mov
lods
pop
punpckhwd
fwait
div
int3
lds
mov
add
adc
add
mov
fs
shr
shr
out
pop
mov
xor
imul
sahf
data16
outs
cmp
lock
inc
inc
push
mov
mov
adc
mov
push
shr
xchg
jg
test
cdq
jecxz
les
dec
mov
cs
in
sbb
jns
out
or
sub
aam
cmps
mov
and
mov
add
push
xor
pop
in
cmp
loopne
int3
adc
mov
pop
pop
aam
(bad)
mov
mov
call
inc
leave
scas
repnz
mov
data16
lds
lods
inc
les
lods
pop
lea
or
push
addr16
aam
adc
lea
scas
rcr
adc
xor
pop
mov
in
adc
call
daa
arpl
(bad)
or
lock
aas
dec
ret
adc
mov
ja
sbb
pusha
xor
pop
push
imul
or
adc
xlat
test
mov
pop
(bad)
std
dec
rol
std
or
cmp
pop
jbe
addr16
test
xlat
mov
cmp
cmp
add
inc
aaa
inc
xor
stos
sbb
inc
mov
mov
les
xchg
popa
xchg
push
bound
add
xor
inc
xor
(bad)
lea
ret
clc
sub
add
pop
dec
jg
rol
enter
fbld
mov
lds
pop
sar
addr16
pop
pushf
mov
daa
mov
in
add
adc
out
cmps
mov
mov
fwait
jmp
dec
hlt
jae
lds
adc
cmp
shl
xor
xchg
int3
aaa
adc
stos
add
xchg
push
or
cli
div
push
movs
in
and
lods
out
and
lds
mov
mov
pop
int
jns
inc
mov
pusha
dec
xor
inc
dec
pop
in
aaa
mov
inc
pop
mul
into
fadd
repnz
in
js
fdivr
hlt
(bad)
cs
fs
popa
retf
cmp
gs
and
fisubr
ret
push
mov
retf
jmp
mov
movs
shr
xchg
mov
jmp
int
retf
gs
pop
push
jo
aaa
inc
add
inc
je
xor
xlat
test
pop
push
ss
or
xor
loope
or
cmp
enter
xor
div
adc
in
dec
or
and
push
or
sbb
or
mov
retf
mov
jo
fwait
or
add
sbb
cwde
sbb
(bad)
and
mov
fmul
sti
or
mov
scas
or
inc
jno
and
add
lods
hlt
ds
retf
jnp
fistp
jp
adc
call
(bad)
je
hlt
xchg
inc
xchg
jp
pop
not
mov
mov
or
hlt
ret
fcom
or
jae
sub
xchg
mov
xchg
retf
xlat
push
sub
xchg
xchg
enter
ja
in
test
stc
sbb
mov
imul
pop
loope
inc
pop
retf
idiv
retf
fsubp
cs
imul
dec
mov
fs
xchg
add
lahf
jo
pop
lock
sar
aam
jbe
in
pop
and
cmps
adc
mov
rol
and
and
pop
push
psrlw
xor
adc
mov
int3
int
push
jo
mov
push
in
dec
sar
(bad)
mov
pop
iret
sub
push
outs
add
popa
fs
and
dec
imul
arpl
iret
dec
nop
ja
adc
retf
lods
mul
xor
(bad)
sub
pop
inc
sti
mov
inc
sbb
jae
push
mov
or
mov
movs
call
popa
sub
push
xor
mov
mov
adc
out
ret
inc
clc
mov
inc
mov
inc
push
jns
mov
retf
dec
and
cmp
pop
cwde
xchg
std
pushf
cmc
pop
pop
pop
movs
pop
sub
int
inc
mov
daa
int3
mov
ret
and
call
inc
push
rcr
clc
test
push
dec
push
mov
jnp
retf
push
sbb
mov
xlat
aas
fcmove
or
xchg
cmc
sub
push
jge
mov
in
pop
dec
inc
rcr
push
out
sub
cwde
push
sbb
cmp
sub
in
add
scas
mov
jp
(bad)
jae
adc
add
mov
shr
mov
dec
mov
jg
mov
stos
ins
sub
retf
enter
retf
jmp
sub
jge
mov
loope
and
and
aaa
and
sti
ja
int
lock
and
fldcw
mov
push
add
xchg
xlat
xchg
and
sahf
mov
sbb
int
adc
add
cmc
xor
add
fst
(bad)
dec
pop
fdiv
cdq
sub
ins
shl
push
and
cmps
sub
dec
mov
mov
pop
dec
test
push
dec
rol
leave
lahf
push
xor
fchs
inc
jnp
daa
dec
pop
nop
or
xlat
bound
and
sbb
lods
rcl
in
dec
mov
mov
push
adc
cli
js
jo
fadd
adc
int3
cs
mov
sbb
jl
ror
inc
dec
sti
inc
add
pop
dec
call
adc
aas
das
jne
mov
add
push
jbe
adc
fbld
or
dec
pop
inc
aaa
lds
mov
push
dec
jns
or
popa
xchg
(bad)
mov
ins
jo
(bad)
into
rol
cdq
pop
addr16
mov
mov
mov
dec
sar
add
push
shl
pop
fwait
repz
push
rcr
scas
cmc
push
xor
loope
lods
sahf
adc
mov
pop
pop
loopne
dec
imul
jmp
popa
jb
cmc
cmps
daa
out
fcomp
cmp
test
das
les
js
add
add
in
xor
mov
sar
in
adc
mov
pop
enter
jg
mov
and
add
jmp
sbb
cmp
pop
push
mov
pop
cmp
or
aad
das
xor
ja
mov
scas
or
daa
loop
jl
inc
repnz
xchg
fistp
dec
adc
iret
push
cmp
cmps
mov
inc
jmp
shl
movsx
iret
fild
fbld
call
inc
mov
(bad)
or
test
mov
call
or
repz
xor
outs
adc
cwde
loopne
adc
into
fcomi
lahf
sub
sub
sub
xchg
movs
mov
popf
aam
sbb
push
jmp
add
ins
fcmovnb
js
sub
sbb
nop
xchg
push
push
stos
dec
int
movs
xchg
xor
push
int
sub
(bad)
stos
ss
pop
jecxz
out
je
hlt
add
je
mov
dec
xchg
push
icebp
sbb
pop
add
lds
fs
sbb
add
jl
cmp
dec
(bad)
rcl
hlt
push
and
fcomp
sar
arpl
retf
jne
push
mov
(bad)
pop
in
dec
jle
mov
cmp
aaa
test
rcl
pop
xor
jle
sub
imul
loopne
leave
call
pop
cs
int3
mov
das
mov
and
add
ficomp
mov
push
mov
(bad)
shr
ja
xor
mov
sahf
ficomp
mov
fsub
jmp
and
mov
xchg
cdq
outs
inc
scas
(bad)
scas
jmp
fs
stc
pop
sub
mov
mov
sub
mov
cli
mov
pop
or
call
ficomp
movs
fldcw
stos
pop
data16
cs
mov
out
and
ret
outs
xor
or
(bad)
jno
pop
shl
in
dec
or
jg
push
xchg
push
retf
ror
addr16
test
jnp
ret
push
ret
push
rcl
cs
mov
mov
adc
int3
(bad)
or
dec
retf
pop
jo
shr
js
(bad)
or
and
jnp
dec
inc
ja
pop
jmp
add
or
jo
inc
mov
scas
(bad)
icebp
xchg
jle
rcr
out
lods
daa
mov
shl
aas
jl
mov
jmp
shr
dec
sub
stos
xchg
mov
push
popf
sbb
sti
jno
sbb
cmp
add
test
xchg
or
mov
pop
in
sti
sub
outs
cmc
or
rcl
xor
pop
cmovs
ss
and
(bad)
jne
fldenv
sbb
fwait
pop
aas
pusha
mov
mov
and
cmp
mov
ss
add
xchg
jno
dec
(bad)
lods
sbb
call
mov
idiv
xchg
pop
and
inc
into
imul
mov
dec
and
adc
jnp
pop
outs
jmp
adc
in
mov
and
jl
test
add
adc
lahf
jmp
pop
shr
movs
jb
xchg
inc
jno
jmp
xor
addr16
iret
xor
push
lods
xor
cmps
dec
test
addr16
jbe
in
dec
xchg
fistp
fisttp
iret
and
std
mov
sub
faddp
sub
push
(bad)
push
jl
push
mov
and
cmp
adc
test
jne
out
jle
mov
mov
pop
popf
jecxz
sbb
sub
jnp
addr16
pop
sar
dec
jne
ror
sahf
test
(bad)
dec
stos
add
retf
push
or
xchg
(bad)
fcomp
retf
(bad)
mov
mov
cmp
mov
inc
in
inc
and
stos
out
mov
rol
and
xchg
movs
sbb
(bad)
mov
push
inc
rcr
test
dec
mov
imul
sub
jp
cmp
mov
cld
into
inc
inc
xchg
jmp
pop
std
test
ror
fwait
in
stc
add
(bad)
ins
add
dec
cwde
sbb
int
fistp
mov
xchg
cmp
fadd
pop
push
int3
jb
daa
xor
outs
push
jnp
cli
add
jg
iret
jmp
popf
sub
mov
iret
outs
fdivr
xchg
xchg
fdiv
adc
sbb
sbb
icebp
cdq
push
sahf
lock
dec
xchg
sbb
push
dec
lods
mov
retf
sbb
lea
pop
(bad)
mov
(bad)
or
(bad)
inc
sbb
ret
add
and
push
jno
shl
pushf
stos
cdq
dec
int
mov
mov
jbe
xlat
call
repnz
pop
addr16
jmp
mov
rcl
movs
popf
mov
sahf
popa
xor
or
push
clc
push
repnz
or
xchg
clc
test
jb
inc
mov
rcr
gs
aam
pop
or
mov
mov
cld
icebp
jns
push
out
mov
retf
dec
gs
(bad)
cmp
outs
jns
clc
cld
xor
dec
mov
ins
cmc
pop
ret
xor
shl
xchg
xchg
push
lock
fs
fwait
inc
sbb
or
test
lods
cmp
rcr
rep
xchg
push
iret
sti
bound
ror
aad
ss
lahf
xchg
sbb
out
sti
(bad)
mov
scas
mov
ficom
push
jo
jg
jbe
stos
imul
dec
jno
(bad)
jp
aad
dec
inc
and
push
fadd
mov
add
mov
sbb
pop
inc
ss
cmps
fisub
adc
jbe
call
jo
push
sti
imul
ins
test
xor
and
scas
push
and
fadd
adc
dec
dec
xlat
or
mul
sbb
jl
sti
sbb
mov
int3
fmul
push
xchg
jmp
clc
adc
xchg
addr16
mov
or
movs
enter
add
jl
repz
movs
mov
les
jp
cmp
pop
mov
inc
and
adc
inc
dec
mov
cmc
xor
cld
punpcklwd
inc
mov
adc
cmp
lods
mov
jmp
sbb
add
aas
out
je
stc
sub
arpl
and
or
pop
mov
out
iret
std
iret
mov
nop
jle
or
imul
jle
jne
out
gs
loop
retf
fst
and
rol
mov
mov
leave
and
adc
outs
push
mov
in
pop
inc
fdiv
push
fimul
mov
xor
inc
inc
int3
or
mov
dec
das
ficomp
jg
loope
ins
pop
loop
cli
cld
call
(bad)
shr
(bad)
dec
mov
out
sub
xor
cdq
rol
mov
pop
cmp
sub
test
stc
inc
cmovbe
adc
icebp
out
test
loop
xor
addr16
mov
add
pop
add
cdq
sub
adc
cs
sub
aaa
cmp
addr16
mov
lds
shr
cmp
ret
xor
or
fisubr
xchg
xor
test
jns
or
xor
add
or
test
rcl
arpl
popf
cs
icebp
mov
sbb
(bad)
fbstp
loopne
and
test
xchg
je
jb
mov
xor
sar
out
fisub
sbb
xchg
mov
xchg
sub
pusha
xchg
outs
add
dec
sti
mov
mov
pop
scas
and
fldcw
and
cmp
mov
inc
xchg
inc
leave
jmp
cmp
mov
(bad)
(bad)
leave
enter
aam
mov
(bad)
out
cs
sahf
stos
repz
mov
pop
iret
or
movzx
dec
cmps
or
dec
sar
sub
(bad)
jae
fdivr
pop
xchg
mov
cdq
(bad)
mov
mov
pop
push
push
mov
popa
aas
xchg
mov
fbstp
sbb
(bad)
int
or
mov
xor
sub
pop
dec
aad
add
adc
xor
test
mov
mov
push
push
xchg
mov
call
in
in
mov
loop
xor
pop
out
mov
sub
jmp
inc
out
test
and
and
aad
stc
add
cs
mov
cmp
push
mul
mov
mov
push
clc
jle
and
aad
sub
mov
inc
aad
ror
fcmovnu
mov
push
xor
xor
pushf
cmp
lds
jg
fldcw
jge
and
xor
out
and
inc
inc
outs
(bad)
or
dec
xor
sbb
pop
inc
mov
cmc
jp
je
out
dec
jnp
retf
pop
or
adc
ins
(bad)
jmp
adc
mov
in
rol
mov
add
cwde
adc
add
cld
in
rcr
in
jl
cmp
pop
loope
cmp
cmc
jecxz
mov
pop
sbb
jmp
call
int3
movs
and
into
mov
sbb
or
sub
pushf
fdivr
call
fucomp
xchg
inc
outs
inc
push
sub
xchg
sub
(bad)
call
inc
(bad)
cmp
jne
inc
xchg
scas
pop
push
pop
mov
ins
mov
mov
je
sahf
(bad)
xchg
(bad)
sbb
stos
shl
and
ds
and
or
jge
add
scas
add
sub
dec
jns
test
pop
mov
sbb
cmp
push
mov
cmps
out
aam
adc
xchg
mov
mov
repz
aaa
loop
fadd
mov
out
repnz
mov
ret
mov
mov
retf
push
add
fimul
addr16
adc
add
xchg
cmp
dec
mov
jne
add
inc
inc
mov
cld
add
and
stos
dec
rep
test
pop
retf
dec
ret
adc
arpl
outs
pop
std
int
(bad)
call
not
xchg
mov
jns
xor
xor
inc
stc
adc
cmp
in
push
dec
(bad)
cmc
repnz
push
movs
sbb
addr16
in
cmp
adc
(bad)
test
es
sub
jge
jmp
xchg
dec
clc
mov
aas
jg
sbb
cmp
cmps
pop
call
adc
push
int
nop
xlat
sbb
mov
test
out
mov
inc
sub
sub
sbb
sub
xor
cmp
xor
aam
sub
xor
dec
jb
in
stos
int
xchg
fmulp
iret
jae
fdiv
push
(bad)
push
ins
loopne
inc
mov
call
mov
repz
mov
(bad)
(bad)
popa
and
cmp
push
sbb
adc
mov
sub
jl
adc
movzx
sti
jg
mov
cmp
test
xor
mov
gs
mov
cmp
hlt
xor
in
aad
std
pusha
rol
fucom
jae
aam
lahf
dec
je
std
sahf
enter
mov
sbb
mov
jns
dec
or
lds
dec
fisttp
dec
or
or
fdiv
mov
jne
or
mov
test
adc
sub
push
clc
jb
and
jb
push
mov
push
ror
fsubrp
inc
cwde
and
movs
mov
cmc
aad
add
pop
sub
push
mov
push
hlt
iret
adc
mov
push
fwait
loop
xor
or
xor
cmp
sub
rol
push
xchg
push
loope
dec
fcmovnbe
repnz
cmp
xchg
imul
stos
das
or
xchg
adc
and
bound
sbb
push
mov
or
div
add
inc
jmp
or
mov
jbe
stos
jbe
es
pop
sbb
adc
pop
dec
repnz
arpl
and
mov
or
fdivr
sbb
lds
adc
outs
or
out
sub
sbb
(bad)
lahf
sbb
sbb
test
xchg
shl
(bad)
jo
jecxz
jo
outs
dec
movs
mov
mov
call
mov
fistp
add
cdq
xor
outs
inc
push
repz
mov
and
out
cmp
test
xchg
shl
push
sub
aaa
in
shr
push
push
jno
cmp
stc
and
js
cmc
mov
(bad)
mov
inc
jns
jp
mov
int3
movs
pop
lahf
nop
loope
push
aaa
inc
cmp
sar
xchg
sbb
pop
out
xor
out
and
xor
nop
push
push
fld
cli
push
outs
fwait
ror
pop
popf
sbb
cmp
int3
fidivr
jbe
push
and
push
adc
xchg
call
mov
xor
imul
sahf
aaa
leave
cli
aas
pop
xor
adc
loopne
mov
sub
pop
int
mov
bound
adc
int
cmp
(bad)
push
inc
sahf
inc
outs
jecxz
into
sbb
ds
jg
scas
pop
repz
icebp
cmp
and
(bad)
cmp
sub
or
sbb
ins
mov
popf
dec
dec
xchg
xlat
(bad)
adc
xchg
lods
aas
mov
je
mov
ret
dec
cli
or
jnp
shl
hlt
(bad)
xor
cmp
adc
vpmacssdd
fistp
xchg
inc
jbe
je
xchg
mov
retf
rcl
hlt
add
push
jle
aad
sub
div
pop
jmp
pop
push
jb
(bad)
mov
jne
popa
jecxz
xor
cmp
add
push
inc
dec
repz
inc
ret
mov
or
outs
add
sti
xor
aad
fiadd
arpl
rol
mov
sti
mov
xchg
pop
(bad)
mov
push
push
mov
repz
mov
pop
in
scas
xchg
push
or
adc
ins
inc
mov
mov
or
data16
(bad)
cld
mov
push
mov
sbb
rcr
inc
ret
addr16
cmp
add
or
and
inc
(bad)
mov
imul
and
pop
(bad)
not
mov
xchg
mov
jb
pop
test
retf
cmp
dec
mov
das
movs
fsub
sti
push
cmps
bt
sbb
in
arpl
je
popa
in
ss
add
je
out
push
ss
loope
push
ds
and
jle
mov
mov
add
aad
ds
retf
lea
in
cli
dec
test
fild
fucomi
sub
arpl
mov
adc
mov
out
and
and
jmp
mov
jae
inc
aaa
sub
cmp
dec
ds
out
push
lods
jae
je
movaps
inc
pusha
jmp
and
adc
fst
pop
sahf
cwde
sahf
cmc
push
and
sbb
in
arpl
pusha
jnp
aad
popa
cmp
xor
dec
icebp
sbb
in
and
xchg
retf
mov
push
mov
out
lea
xor
cmp
mov
inc
push
mov
and
sub
out
jb
mov
inc
(bad)
test
or
rcl
jb
sub
in
sbb
mov
inc
mov
inc
fnstsw
mov
mov
(bad)
js
xor
mov
loop
jecxz
adc
int
(bad)
cli
popf
(bad)
cmp
adc
dec
pop
inc
jg
clc
dec
(bad)
pop
mov
adc
test
add
jmp
in
sbb
push
jae
or
fcom
fcmovu
xor
pop
jle
aad
leave
mov
arpl
cwde
and
mov
loope
imul
jo
xor
fs
loop
dec
aam
mov
jae
mov
xor
cmp
push
popf
jne
out
cmp
sbb
hlt
data16
ror
sbb
into
sbb
adc
loop
clc
lock
cmps
sbb
push
mov
iret
pop
test
pop
clc
icebp
or
lahf
movs
in
xchg
push
dec
test
pop
or
test
push
pop
mov
rol
inc
jnp
xchg
test
inc
out
push
mov
and
mov
icebp
xor
test
sub
loope
or
icebp
lods
mov
fidivr
stos
enter
jo
in
mov
mov
ret
jno
mov
scas
sub
cmp
enter
push
ret
xor
pusha
dec
jae
mov
lahf
adc
jmp
xchg
cli
jnp
inc
mov
cmc
xlat
fdiv
call
lods
xor
cmp
cmps
repz
out
add
ins
adc
out
gs
imul
test
push
or
push
stc
pop
(bad)
sar
jp
frstor
xchg
push
mov
aas
imul
ins
or
cmps
jo
jno
jmp
movs
call
call
mov
mov
fcom
and
ja
and
ret
pushf
push
fiadd
sbb
test
dec
es
cdq
fs
loop
mov
retf
pop
and
das
xrelease
in
mov
fs
mov
hlt
(bad)
fwait
sbb
jo
dec
sub
jns
ins
mov
iret
jmp
xchg
pushf
sti
js
mov
mov
shr
mov
hlt
mov
mov
pop
and
jb
and
or
(bad)
rcl
mov
in
nop
push
loopne
sub
shl
xor
cli
(bad)
jbe
or
add
pop
sbb
call
mov
fisub
or
(bad)
xor
inc
push
imul
mov
mov
xchg
nop
fs
lahf
test
sbb
adc
cwde
movs
and
loope
aad
adc
mov
imul
sbb
add
cmp
add
and
dec
es
mov
add
sbb
sahf
inc
js
(bad)
loope
jg
adc
mov
mov
and
ret
sahf
in
dec
mov
loopne
mov
cdq
push
fwait
in
fs
mov
pop
sbb
cmp
cmp
sub
movs
sbb
rcl
sbb
mov
ret
fmul
imul
scas
adc
shr
daa
cmp
push
mov
pop
xor
rol
mov
aad
in
rol
call
repz
lock
inc
dec
fisttp
ds
pop
xchg
mov
cs
fs
xor
jp
jl
mov
rol
sub
push
mov
inc
cdq
test
and
jb
mov
vcvtps2pd
pop
shl
loope
jmp
(bad)
adc
pusha
shr
pop
xchg
mov
loop
adc
fcomp
scas
or
mov
pop
iret
int
(bad)
out
(bad)
xchg
mov
xchg
or
jle
xchg
fld
push
and
outs
ret
adc
les
das
rol
cmc
pushf
repz
cmp
sub
inc
jp
sbb
ror
lods
jge
xor
dec
dec
and
jns
mov
sbb
inc
pop
ins
int3
or
ds
push
jnp
cmp
mov
xchg
dec
sbb
xchg
repz
cmp
out
push
clc
fld
or
cld
clc
push
ins
jg
pop
xor
(bad)
rdpmc
fmul
dec
jno
mov
mov
mov
sti
mov
(bad)
xchg
sub
dec
leave
and
lds
dec
pop
fimul
xchg
dec
pop
cmp
fidivr
mov
cdq
fnstenv
int
pushf
rcr
sbb
cmp
mov
jo
push
jmp
repnz
add
pop
and
ins
sbb
pop
and
test
sbb
push
pusha
je
cmp
fcmovnu
jbe
add
mov
lahf
call
pop
std
pop
sbb
mov
sti
push
out
pusha
out
inc
movs
mov
(bad)
push
in
inc
fmul
mov
xchg
mov
inc
sub
enter
scas
ficomp
adc
(bad)
std
enter
and
and
pop
mov
mov
adc
push
test
and
jmp
scas
mov
sub
sti
hlt
or
inc
adc
mov
mov
pop
dec
adc
dec
add
dec
pop
test
push
add
(bad)
add
adc
mov
pop
jecxz
xor
adc
and
mov
ss
(bad)
xchg
push
cmp
(bad)
je
mov
shr
xlat
mov
xor
lea
xchg
inc
dec
sub
(bad)
push
pop
cmp
outs
lods
leave
mov
inc
outs
hlt
push
sar
daa
inc
dec
je
test
mov
in
in
mov
fild
adc
ins
jecxz
fsub
lahf
dec
adc
imul
adc
sbb
(bad)
mov
xchg
sub
adc
call
sub
inc
lods
out
movs
sbb
sub
jl
(bad)
lahf
dec
call
mov
lock
and
outs
cmp
cld
mov
push
mov
mov
push
retf
call
xor
shr
dec
fiadd
pop
lahf
xor
dec
scas
and
fwait
iret
lds
rcl
mov
and
jno
iret
mov
fsubr
outs
sbb
dec
aam
push
mov
cmp
rcr
mov
ds
popf
ins
ins
pop
loopne
outs
and
lock
push
xchg
fnstsw
sub
and
push
aaa
mov
mov
ret
mov
cmp
ds
jbe
std
pop
das
push
xor
push
xchg
jbe
gs
or
popf
test
sub
cmp
inc
xchg
test
loop
dec
sbb
cmp
retf
jns
aas
push
sub
mov
mov
stc
int3
(bad)
int3
mov
jbe
mov
push
lahf
xchg
jg
jge
fst
xchg
stos
push
mov
xchg
jmp
shl
ins
in
sbb
push
sub
push
clc
push
test
stos
hlt
(bad)
adc
out
push
dec
sbb
add
xchg
out
pop
int
sbb
and
ss
mov
repz
adc
add
jne
fistp
sub
leave
sbb
sbb
cmp
cmp
sub
inc
cwde
pop
jmp
(bad)
popf
xchg
icebp
popa
call
hlt
sahf
ins
xor
pusha
pop
(bad)
cld
fsubr
dec
scas
out
inc
pusha
sub
and
fs
repnz
adc
mov
xchg
test
xor
inc
sbb
xor
rsqrtps
cmp
cs
dec
jae
jno
fdiv
pusha
push
adc
outs
dec
cmps
shl
sbb
add
cwde
nop
div
dec
jne
(bad)
mov
cs
pusha
push
mov
inc
xor
mov
mov
fist
dec
mov
outs
js
cmpps
adc
gs
adc
shr
jne
mov
push
sub
push
dec
push
fwait
or
add
rol
dec
fidiv
xor
jp
xchg
(bad)
pop
in
or
bound
mov
push
bound
sub
ins
pushf
mov
fs
pushf
adc
adc
ret
dec
and
push
sub
retf
pop
mov
call
loop
inc
inc
cdq
ins
aad
imul
mov
push
call
sub
add
repz
dec
outs
sub
ins
mov
cmp
lods
sbb
push
jmp
adc
and
inc
call
jp
push
ficomp
neg
sub
and
push
fistp
iret
fs
js
fnstenv
cmp
cmp
call
xor
pop
add
outs
xchg
xor
scas
xchg
cmp
mov
cwde
mov
or
sub
and
stos
cmp
cwde
(bad)
dec
cmps
lods
xchg
dec
add
shld
mov
arpl
cmps
fdiv
stc
sbb
push
mov
out
cmp
inc
cmp
cmp
xor
pop
shl
mov
sub
and
fiadd
shr
mov
adc
adc
push
aaa
add
scas
mov
push
fs
movs
clc
mov
test
stos
adc
inc
push
ja
mov
sahf
push
ins
or
rcl
xor
cmc
add
(bad)
dec
jne
jns
fwait
outs
add
mov
jbe
mov
mov
(bad)
shl
addr16
jo
div
mov
push
mov
sub
enter
or
add
sahf
push
mov
into
mov
xor
sbb
js
mov
(bad)
in
iret
les
and
and
popa
pop
into
jnp
mov
push
into
dec
mov
pop
mov
pop
sbb
cwde
test
jo
mov
ins
cdq
out
and
mov
jmp
out
mov
mov
dec
mov
adc
aaa
ins
mov
mov
and
(bad)
xor
mov
xor
call
push
xchg
jne
add
jecxz
aad
adc
rdtsc
adc
sti
dec
inc
retf
jbe
test
cmp
or
push
mov
loope
inc
mov
jmp
movs
mov
cmc
(bad)
dec
retf
enter
cld
cmp
pop
icebp
dec
xchg
ret
nop
jno
or
add
cdq
ss
ins
movs
xchg
test
in
ror
movs
stc
or
outs
loope
fisub
fcmovnu
int3
mov
shr
imul
sbb
test
pop
push
sahf
inc
(bad)
adc
mov
push
in
cmps
in
ret
inc
dec
xchg
mov
retf
push
push
push
mov
adc
mov
push
push
rol
ins
in
pusha
add
push
xchg
dec
ror
jp
push
push
pop
lods
and
sub
xor
ss
push
hlt
jae
mov
mov
into
shl
scas
lods
inc
cwde
jecxz
push
adc
sub
xor
mul
enter
cmp
push
jmp
(bad)
cmp
jp
add
mov
(bad)
pop
jl
inc
call
xor
mov
ret
(bad)
adc
push
ja
sub
(bad)
and
mov
mov
add
lock
cmp
sbb
sbb
jg
int
push
push
mov
jecxz
mov
xchg
jp
or
jmp
jno
(bad)
dec
out
sahf
retf
push
or
xlat
add
mov
rcl
cwde
push
jecxz
loope
sub
out
dec
push
test
add
pushf
hlt
add
adc
mov
outs
mov
jg
out
es
cmc
cmc
popa
dec
or
jmp
aad
popf
fdivr
(bad)
int3
loop
pop
scas
data16
add
aas
(bad)
xor
jo
cwde
enter
sub
sti
sub
mov
pusha
ss
xor
imul
sbb
adc
pushf
out
mov
mov
push
aad
stos
das
stc
lds
out
ss
dec
in
cld
xor
scas
jl
mov
es
jnp
or
(bad)
xchg
sbb
call
pop
dec
ficom
pop
mov
or
pop
movs
xor
and
pop
lods
jae
es
mov
loope
inc
pusha
repz
scas
jle
cmp
push
bound
pop
dec
xor
mov
inc
in
sub
dec
jle
nop
push
sub
sahf
retf
mov
movs
pop
jle
test
inc
inc
mov
sub
mov
inc
retf
or
cmp
push
inc
adc
lods
imul
mov
and
std
into
rcl
loope
jno
fmul
pop
sahf
in
sbb
cmps
jmp
js
pop
es
inc
std
mov
push
(bad)
and
pop
out
(bad)
push
clc
scas
or
inc
push
mov
mov
add
push
rcl
xlat
cmp
jecxz
out
test
or
(bad)
or
jae
cmp
adc
retf
push
mov
addr16
vpmulhw
mov
xchg
mov
es
ret
mov
mov
cli
cwde
retf
cmp
dec
jae
xor
sti
dec
pop
fs
pop
out
popf
xor
and
mov
and
jmp
mov
mov
sbb
cmps
push
hlt
and
movs
or
std
(bad)
in
pop
add
mov
ins
mov
stc
movs
fsubp
mov
popf
sub
(bad)
call
fistp
das
icebp
push
jno
mov
cli
or
cmps
pop
mov
or
push
mov
es
js
clc
ins
xor
and
ds
mov
sub
push
and
cmp
scas
pop
xchg
jg
pushf
and
mov
push
jmp
mov
push
in
adc
cs
aas
adc
xchg
mov
mov
sub
mov
js
scas
imul
pop
je
call
shl
outs
and
or
push
stos
paddw
shr
jp
inc
xchg
xchg
inc
sub
shl
xchg
cld
xor
xchg
and
jno
xchg
mov
scas
xor
scas
mov
popf
outs
es
out
sub
pop
loop
repnz
repnz
shld
in
mov
xor
int3
in
jl
xchg
(bad)
fistp
std
pop
ds
(bad)
cdq
push
sbb
jae
jb
push
ja
ds
stc
sbb
xchg
sub
jmp
jbe
bound
(bad)
mov
add
out
xchg
aas
fild
mov
sbb
fld
add
xor
pop
jno
cmp
pop
retf
adc
sbb
cmp
aas
ficomp
out
(bad)
int3
lea
add
cmp
inc
cmp
clc
test
inc
and
mov
stc
push
enter
adc
repz
add
(bad)
fsubr
rcr
sbb
shl
imul
(bad)
call
add
lods
aam
ret
push
mov
lock
daa
dec
mov
jbe
inc
mov
or
mov
xor
dec
pop
or
mov
lea
pushf
push
cmp
mov
test
cmps
xchg
cmp
test
or
push
les
loope
aam
or
lea
movs
lock
jae
imul
outs
(bad)
cmp
xchg
fistp
xor
loope
xchg
(bad)
cmp
enter
imul
js
pop
loop
sahf
push
cbw
dec
mov
or
jmp
jmp
inc
xchg
adc
(bad)
outs
out
div
(bad)
loope
jmp
xor
ins
in
and
(bad)
popa
gs
in
inc
sbb
and
pop
dec
ret
dec
or
or
jae
stos
sbb
arpl
or
out
mov
(bad)
retf
jae
jb
repz
lock
inc
addr16
shl
pop
sbb
mov
cwde
jg
dec
mov
ret
je
stc
mov
pop
out
xor
or
sbb
cmps
jno
je
xchg
fiadd
scas
add
jl
pop
js
mov
mov
movs
push
int
(bad)
jne
dec
fild
jno
cmp
out
out
add
es
ins
mov
fsubr
push
lods
int
nop
stos
mov
cli
mov
xchg
js
mov
(bad)
(bad)
cmp
popa
and
cmp
test
stos
ins
push
jle
push
lods
cmp
add
movs
xlat
jnp
(bad)
lds
in
(bad)
idiv
xor
jns
dec
and
ror
mov
lea
xchg
lods
je
in
or
test
mov
push
fcomp
test
bound
pop
xor
mov
push
aad
js
iret
adc
cmp
inc
inc
push
sub
pop
push
jp
cld
sti
dec
jl
mov
mov
inc
pop
in
sbb
std
imul
ins
sbb
mov
jno
jo
xor
jnp
dec
pop
push
xor
push
je
mov
in
les
adc
jae
or
scas
mov
and
call
js
pop
std
adc
loope
xor
aad
pusha
rol
lock
and
dec
sbb
sbb
pop
icebp
aas
std
jne
dec
xchg
mov
mov
daa
call
cmp
(bad)
xor
jb
adc
inc
test
mov
add
hlt
mov
movs
in
loope
mov
jge
(bad)
sub
pop
xchg
inc
clc
mov
nop
and
in
popa
push
movs
mov
loopne
aas
mov
add
cmp
cmps
push
fbld
inc
aam
dec
xchg
sti
movs
mov
cwde
xor
ss
imul
push
stos
pop
popf
mov
xor
and
mov
xor
dec
pop
not
adc
repz
xchg
mov
repz
setle
adc
xchg
jmp
ins
imul
aaa
pop
in
lods
and
bound
lea
xor
ror
out
icebp
cmps
jne
pusha
test
scas
int
or
adc
idiv
sbb
jo
mov
jns
pop
and
call
and
push
jecxz
sub
push
cmp
sub
(bad)
hlt
pop
out
in
mov
sub
dec
jne
push
xchg
xor
xchg
mov
adc
mov
retf
shl
xchg
cld
test
clc
push
fcomp
push
(bad)
addr16
repnz
fnstcw
push
xchg
add
and
or
out
xor
jmp
push
xchg
js
addr16
mov
adc
lds
add
add
fs
test
test
xchg
inc
push
xlat
pop
and
es
jae
mov
sar
sub
lods
lahf
iret
mov
rol
jg
sub
xchg
and
movs
jmp
mov
push
lods
push
sbb
pop
mov
ret
push
mov
cmp
mov
add
mov
dec
inc
pop
mov
and
cmp
pop
inc
sbb
sbb
enter
or
dec
sbb
ds
mov
cld
repz
jmp
or
imul
shr
xlat
rol
add
ret
retf
pop
jae
into
push
jg
jae
sub
pop
fidiv
xchg
pop
ss
lds
lahf
aad
mov
and
inc
lods
sub
push
dec
pop
adc
sub
push
aad
mov
inc
call
xor
push
or
and
jnp
mov
js
or
and
cmp
ss
fsubrp
add
inc
(bad)
jb
fstp
icebp
fnstcw
stos
aam
sub
add
or
sbb
lods
in
in
cmp
aas
cs
add
mov
jmp
mov
arpl
xchg
inc
jecxz
mov
(bad)
out
pop
inc
retf
mov
fst
cmp
push
movs
dec
inc
dec
(bad)
fwait
mov
mov
loope
rol
inc
rol
mov
int
or
js
(bad)
fwait
movs
mov
xor
ds
ins
aas
and
xchg
pop
inc
dec
mov
xchg
jecxz
jmp
xchg
ja
pop
mov
retf
mov
das
les
cmp
leave
les
or
sbb
and
pop
inc
je
ret
scas
in
dec
aas
cmps
mov
imul
jmp
dec
mov
sbb
jne
jle
jle
cli
and
pop
lds
inc
call
xor
int3
ficomp
jmp
ds
sbb
loop
push
out
sbb
fmul
add
xor
into
movs
and
xor
mov
jle
int
dec
inc
push
sar
mov
sar
jmp
inc
mov
icebp
cwde
sub
ror
mov
or
mov
or
or
inc
(bad)
mov
mov
xor
sbb
std
xchg
call
ja
xchg
or
dec
xlat
push
call
add
in
retf
push
cmp
dec
jne
dec
lods
movs
pop
cwde
rcr
and
xchg
movs
jge
mov
dec
push
mov
sbb
shr
xchg
in
fs
inc
test
dec
add
push
clc
and
sahf
inc
sub
inc
mov
jnp
lods
int3
jg
scas
xchg
sub
pop
lgs
pop
adc
cmp
sbb
mov
push
push
cs
add
lds
and
jnp
push
lea
mov
stos
and
movs
dec
or
aas
push
shr
jg
(bad)
jge
test
shl
sbb
test
std
xchg
pushf
mov
outs
cmp
shl
into
loope
lds
jle
adc
pop
xor
gs
outs
inc
cmp
xor
ss
icebp
outs
leave
sar
(bad)
adc
inc
out
and
int
rcr
mov
and
(bad)
mov
or
rcr
add
sbb
pop
add
mov
mov
sub
stc
push
jmp
imul
sbb
sbb
cmp
add
popa
mov
xchg
mov
add
neg
imul
push
scas
jmp
cmp
shl
mov
iret
test
out
aas
imul
mov
out
les
ja
dec
or
jecxz
sub
retf
scas
or
cli
mov
arpl
sub
push
test
push
push
push
mov
pusha
je
cwde
dec
jb
pop
lods
mov
outs
clc
jle
xchg
bnd
mov
lahf
in
inc
mov
or
or
or
(bad)
push
addr16
push
pop
(bad)
out
lock
out
dec
mov
jp
out
add
jmp
add
jl
push
das
inc
inc
(bad)
(bad)
sbb
imul
in
jp
in
push
cmp
dec
xchg
out
xchg
gs
rcl
pop
out
inc
lock
add
test
jmp
(bad)
cmp
push
xchg
xchg
(bad)
cmp
call
std
mov
jmp
shl
cmps
ins
rcr
in
or
(bad)
mov
scas
rcr
and
out
sub
outs
jl
sti
ds
sti
ins
retf
cmp
sub
jl
fdivr
cs
or
test
scas
pop
add
adc
add
jbe
(bad)
fwait
mov
dec
and
and
adc
add
cwde
sbb
or
add
push
movq
mov
xor
and
inc
sub
mov
and
mov
in
push
cwde
mov
out
sbb
adc
das
adc
ins
sub
mov
push
outs
xor
sub
in
cmc
sbb
and
outs
xchg
jns
mov
adc
pop
pop
mov
lods
int3
mov
ins
(bad)
xor
shl
(bad)
cmc
or
xchg
dec
stos
pop
or
adc
cmp
jbe
rcl
jmp
ss
popf
inc
push
dec
dec
inc
jo
cmp
frstor
lods
jecxz
push
(bad)
adc
xor
cdq
inc
ret
mov
gs
dec
fcom
dec
jle
cs
mov
fwait
xchg
fdiv
sub
arpl
or
adc
xchg
xor
ja
mov
mov
jmp
(bad)
mov
test
(bad)
inc
(bad)
leave
or
in
test
cld
jb
or
mov
cmp
mov
retf
jle
hlt
mov
mov
sub
push
sub
movs
xchg
add
push
in
xchg
and
jns
push
jne
jne
and
aam
pushf
cmp
mov
fadd
sti
add
jle
lods
loope
xchg
mov
xor
push
mov
scas
cld
stos
iret
bound
mov
and
addr16
push
repz
jns
or
stos
pusha
(bad)
push
daa
add
jl
xchg
lods
ret
xchg
xor
dec
mov
jno
sub
cli
xlat
test
or
repz
xor
mov
loope
xchg
fcom
inc
xor
outs
ror
sub
sar
aaa
inc
repz
jbe
add
add
out
push
mov
jb
inc
lahf
outs
arpl
out
sub
lahf
outs
loopne
ja
pop
mov
jg
push
fmul
inc
sahf
std
push
mov
adc
mov
call
push
shr
daa
movs
in
jmp
icebp
mov
push
movs
lock
or
dec
sahf
movs
push
test
das
stos
and
sbb
aaa
or
or
jne
mov
aad
adc
fld
sbb
test
movs
bound
jecxz
dec
cdq
inc
mov
pop
adc
lock
loop
iret
pop
fisttp
cmp
scas
dec
(bad)
in
in
push
(bad)
inc
enter
add
jl
ret
adc
enter
cmc
push
sbb
in
and
cmp
aam
mov
xchg
push
cwde
xchg
cmp
inc
les
dec
fcmove
fidiv
pushf
sbb
sbb
retf
dec
dec
and
ficomp
pop
mov
(bad)
or
add
jo
mov
xor
add
sbb
sar
out
add
(bad)
test
sub
shr
xchg
xchg
rol
mov
fist
pop
mov
inc
mov
or
mov
push
outs
push
push
inc
xchg
sbb
sub
retf
sub
dec
movs
mov
push
xor
push
leave
adc
dec
xor
cmp
cmp
cmp
and
sbb
ja
xchg
std
loopne
scas
pop
mov
sti
push
mov
jno
sub
test
pop
aad
jbe
cdq
jno
aad
dec
dec
cwde
adc
test
or
xor
sub
inc
sar
dec
and
jae
pop
jns
lahf
gs
btr
mov
aas
(bad)
stos
jb
cmp
imul
inc
mov
jg
pusha
call
mov
or
call
fild
mul
shr
mov
retf
sbb
adc
fmul
mov
sub
or
sbb
cmp
push
(bad)
ja
pop
ins
rcr
or
popa
adc
xchg
mov
sub
or
jno
add
(bad)
in
xchg
repnz
cli
adc
jo
pusha
lahf
gs
fs
mov
mov
cld
mov
call
out
out
out
jp
(bad)
ins
ja
pop
add
scas
or
push
dec
sbb
and
loopne
push
shr
cli
inc
in
repz
imul
xchg
jge
int3
in
add
out
mov
test
dec
inc
pop
nop
mov
or
ret
mov
rcl
cdq
fiadd
xchg
jbe
add
sbb
jmp
dec
cmp
or
scas
jp
movs
jne
mov
push
or
push
fild
fldcw
outs
gs
test
dec
sub
in
retf
cwde
push
mov
movs
push
cmp
call
jns
push
aad
lds
cmp
xlat
nop
jg
mov
outs
mov
mov
mov
fs
mov
inc
and
(bad)
ror
mov
sbb
loopne
popf
push
mov
dec
pushf
jg
retf
push
mov
sbb
test
cmp
ins
retf
sub
(bad)
call
cwde
sar
or
cmp
(bad)
sbb
inc
dec
jg
out
pop
cmps
jb
in
sti
xchg
gs
mov
hlt
icebp
ja
mov
mov
mov
sub
adc
sub
push
lock
cld
and
and
mov
sub
adc
jae
mov
push
scas
cmc
sar
pop
lock
pop
sbb
fnstenv
femms
hlt
push
push
popf
nop
inc
ret
jp
enter
push
jp
mov
sbb
addr16
out
adc
dec
outs
jp
fst
adc
sbb
adc
jne
sub
adc
jmp
lods
loopne
cmp
mov
jae
adc
pop
js
and
pop
dec
dec
inc
inc
jmp
stos
scas
sbb
cmps
and
jnp
iret
jl
add
push
dec
imul
or
call
fs
ins
rcl
jle
mov
test
pop
add
aam
mov
xchg
in
scas
or
aad
mov
mov
fistp
int3
mov
and
mov
ins
push
sub
or
xchg
pop
call
and
mov
dec
inc
and
cmp
jle
dec
test
div
das
ds
xor
sub
in
into
dec
pop
repz
in
sbb
fcom
sbb
xchg
movs
mov
fwait
stos
or
pop
fnsave
sbb
les
test
xlat
mov
mov
push
dec
cmps
mov
mov
test
test
jecxz
aaa
pop
xchg
dec
aam
dec
inc
xchg
pop
(bad)
enter
cmps
int3
xor
add
imul
mov
shl
idiv
xchg
mov
rcr
inc
adc
dec
pop
test
or
xchg
(bad)
out
push
or
out
je
(bad)
dec
inc
cs
sti
mov
cmp
rcl
gs
and
sbb
jmp
(bad)
neg
push
cmp
pcmpeqd
aas
cs
sbb
arpl
pop
in
pop
or
mov
sti
dec
cli
cwde
jns
repnz
stos
psllq
cmp
mov
xchg
mov
movs
dec
nop
popf
sti
paddd
dec
stos
push
fisubr
mov
jb
and
push
inc
cmps
jmp
mov
(bad)
pop
fcomi
shr
out
aas
sahf
dec
pop
popf
fmul
movs
(bad)
push
leave
stc
push
mov
hlt
rcr
pop
pop
sbb
or
mov
aas
rcl
and
adc
push
pop
push
sahf
sbb
ins
sub
cmp
or
popa
jnp
push
iret
aas
jb
pop
jne
sub
push
push
ja
jns
int3
mov
pop
(bad)
jmp
rcl
mov
not
js
jp
scas
(bad)
cmps
aad
jns
jmp
cmp
inc
sahf
jle
push
xor
mov
xchg
jnp
push
hlt
cmp
or
mov
cmp
sbb
push
pop
cmps
and
xchg
mov
fiadd
imul
lods
gs
enter
rol
out
pop
and
das
pop
dec
mov
mov
call
or
(bad)
fmul
je
and
daa
adc
sahf
loop
inc
leave
sub
ffreep
pop
test
fst
xor
mov
adc
pusha
jmp
sub
mov
pop
pop
cmc
push
rcl
lahf
mov
fstp
xlat
in
pop
ja
and
in
fistp
(bad)
lods
adc
push
push
loope
call
cmps
push
sub
mov
jle
nop
aad
call
aas
jecxz
stos
cdq
pop
fdiv
fidivr
(bad)
or
ds
cmp
lods
push
mov
adc
jge
call
push
outs
xor
hlt
sti
sbb
push
pop
rcl
nop
lods
xor
jb
add
sub
and
sub
rol
mov
xchg
mov
pop
ficom
out
xchg
jle
imul
adc
lahf
cmp
test
dec
aaa
jbe
das
pop
ins
cmp
scas
stc
xor
inc
mov
loop
xchg
pop
inc
je
lds
jp
jae
sub
(bad)
jne
inc
inc
out
sbb
mov
(bad)
shr
add
test
mov
sbb
jo
stc
ss
and
jns
jae
pop
sbb
or
add
fincstp
xor
sub
cwde
enter
sub
pop
int3
pushf
mov
cmps
js
xchg
sbb
sbb
movs
fsubr
sub
adc
mov
es
sar
scas
jmp
iret
cmc
sti
or
sbb
in
std
adc
mov
fcmovb
aad
stos
add
loope
icebp
dec
popa
and
xchg
push
pop
inc
dec
cmp
push
pop
sbb
outs
cmps
sub
or
xor
in
cmp
in
push
cs
pop
mov
sub
adc
mov
call
pushf
inc
cmc
fsincos
not
(bad)
in
repz
push
test
push
mov
adc
and
jne
xor
jbe
lahf
stos
push
cld
push
dec
les
pop
pop
jge
dec
pop
ficom
sub
mov
sahf
dec
fldenv
daa
adc
pop
loope
mov
daa
or
sub
sbb
mov
popf
(bad)
arpl
lods
imul
mov
xor
mov
mov
mov
or
adc
xchg
mov
lock
or
sbb
mov
movups
je
in
movs
repnz
sbb
aas
add
pop
loopne
xor
mov
pop
test
ret
ret
and
repz
sbb
adc
test
sub
iret
or
xchg
xchg
jb
daa
adc
(bad)
xchg
mov
fiadd
bound
in
cmps
fisttp
jbe
sub
repnz
das
and
jle
add
out
fwait
pop
push
stc
mov
popf
xor
sub
pop
out
xchg
iret
test
or
pop
xlat
mov
fnsave
fidivr
mov
js
or
adc
clc
movs
mov
inc
push
jne
inc
pop
(bad)
aas
test
shl
xor
mov
rcr
shl
cmp
push
call
addr16
dec
mov
xchg
pop
and
sub
in
mov
loop
sbb
xchg
mov
xchg
(bad)
imul
push
es
adc
dec
sahf
jp
mov
xchg
dec
cmp
push
lahf
shl
fild
inc
in
mov
in
clc
mov
pop
or
xchg
pop
fbld
add
clc
test
xor
cmc
or
push
mov
(bad)
push
stos
fsubr
pop
jecxz
jp
cmp
jge
push
or
or
and
jmp
sar
call
mov
push
imul
ror
push
(bad)
cmc
mov
xchg
pop
jns
adc
in
mov
sti
lds
mov
lahf
pop
ret
sub
(bad)
push
adc
(bad)
jmp
retf
mov
pop
and
out
ja
(bad)
cmp
sar
rcr
mov
xor
pop
inc
dec
adc
fwait
xlat
jle
ret
ret
cmp
push
das
xchg
pop
inc
cmp
movs
sti
data16
mov
xchg
(bad)
out
test
cli
push
in
cmp
mov
mov
push
cmps
outs
inc
ds
fucomp
cmp
dec
retf
out
nop
data16
(bad)
dec
sahf
jb
and
popa
sbb
iret
cmp
mov
pusha
mov
sbb
lahf
daa
mov
or
aas
mov
call
mov
inc
jmp
sub
xchg
lods
push
push
ret
stos
push
cmp
or
mov
and
pop
cmp
mov
mov
inc
sbb
push
mov
cmp
xor
or
aaa
push
pop
dec
mov
js
dec
imul
mov
jge
loop
and
jnp
xor
movs
repz
adc
or
adc
sbb
or
or
and
mov
or
fsubr
pop
pop
jmp
retf
mov
xchg
dec
and
icebp
shl
mov
div
sbb
jecxz
sub
outs
and
mul
in
adc
(bad)
dec
mov
cdq
stos
mov
shl
(bad)
pop
xchg
retf
movs
int
hlt
ss
cmps
out
jbe
test
test
jmp
pop
rcl
pop
push
cmp
mov
fdiv
and
adc
pushf
outs
les
cmps
aaa
in
jae
jmp
pusha
ins
aam
push
dec
arpl
xchg
shl
xchg
pop
inc
mov
pusha
dec
(bad)
enter
mov
pop
cmp
and
js
les
and
xchg
adc
mov
loope
adc
xchg
add
pop
adc
mov
retf
and
xor
push
mov
and
fldcw
and
nop
pop
inc
or
lock
idiv
and
shl
push
cmps
sbb
mov
adc
xor
mov
in
xlat
jp
fwait
dec
and
fwait
ss
leave
mov
repz
movs
stc
comiss
cmp
push
mov
fnstcw
adc
aas
jmp
stos
leave
sub
xchg
xchg
xor
imul
jno
dec
and
fcom
cmp
shr
sbb
pop
pop
mov
cmp
pop
sub
loop
cwde
out
fs
(bad)
stc
movs
xchg
pop
fsubr
push
mov
and
ss
lods
lea
pop
and
adc
xor
or
pushf
test
sub
push
sub
test
adc
xchg
lods
xchg
jbe
enter
or
inc
sbb
and
jae
bound
in
sti
dec
gs
rol
arpl
daa
sub
cmp
test
imul
pop
shl
ret
rcr
pop
pop
jle
jp
cmps
sahf
scas
inc
daa
cmp
jmp
add
int
mov
fs
xor
fcomp
dec
aad
loope
cmp
stos
fadd
ficom
add
ret
aad
lods
xor
out
test
inc
stos
je
add
lds
push
mov
les
lods
popf
xlat
pop
mov
fstp
push
repnz
adc
mov
cmp
add
aas
aas
leave
aaa
ret
sahf
cdq
or
sbb
leave
or
clc
inc
push
cmps
cwde
xor
cmps
push
addr16
inc
aaa
out
in
in
pop
movs
loop
pop
(bad)
xchg
(bad)
mov
push
dec
push
dec
inc
adc
jmp
mov
lock
cdq
in
pop
nop
pop
sbb
aad
sbb
inc
mov
ror
mov
sub
dec
arpl
fidivr
jbe
lods
xchg
add
aad
jmp
push
ins
pop
test
or
imul
shld
and
mov
shld
lods
jae
xchg
jns
and
in
lahf
(bad)
lods
push
cld
loopne
xchg
js
js
add
and
pop
icebp
push
mov
inc
pop
data16
loope
adc
not
cmp
gs
cmp
pop
sub
das
xlat
in
stos
out
xchg
fstp
xor
xor
pop
aad
lods
adc
inc
inc
mov
mov
adc
or
pop
push
inc
mov
gs
stc
test
xor
out
sahf
movs
mov
jmp
stc
mov
ror
inc
fsubr
push
pop
pop
stc
adc
repnz
and
lods
mov
gs
enter
jb
push
cmp
mov
or
cwde
in
sub
mov
jp
fisttp
ins
push
retf
dec
lods
(bad)
cmp
mov
pop
iret
mov
movs
add
icebp
adc
cs
and
les
cli
dec
push
cmp
mov
cdq
push
jg
lock
pop
xor
nop
sbb
sub
mov
js
repnz
dec
jg
cmp
ja
xchg
xchg
sbb
inc
retf
call
mov
ins
cwde
push
neg
aaa
hlt
daa
jbe
icebp
mov
data16
nop
inc
sar
adc
sahf
icebp
pause
loop
cmp
mov
mov
fimul
or
cmp
adc
fnstsw
sbb
fs
scas
jmp
fsubr
inc
sub
stos
sub
sub
push
push
popf
stos
and
lods
xchg
das
loope
cmc
inc
addr16
test
add
sbb
cmp
xor
inc
jno
sar
mov
jb
repnz
imul
fwait
mov
aam
xor
(bad)
fsub
test
lahf
or
mov
jl
cld
popf
inc
push
(bad)
jp
inc
xor
je
sbb
xchg
rep
fs
stos
test
daa
test
addr16
xor
mov
pushf
adc
repnz
enter
js
mov
xchg
scas
mov
sub
inc
jg
popf
shl
xchg
pop
xchg
and
xor
stos
aas
call
loop
and
int
pop
adc
aaa
jns
mov
adc
ror
scas
add
fild
stos
cmp
or
cwde
or
dec
inc
pushf
lds
fwait
sar
repnz
test
bound
into
xor
add
cmp
mov
pop
push
call
fs
adc
icebp
in
or
dec
and
mov
leave
js
popa
push
mov
ret
mov
pusha
xchg
les
(bad)
mov
xchg
xchg
jo
pop
cwde
call
test
mov
inc
fcom
sub
pop
cmp
sbb
pop
in
or
jl
jge
pop
adc
sub
or
jmp
scas
mov
icebp
cwde
fcomp
dec
cmp
jmp
sub
lea
iret
fwait
dec
or
pop
int
leave
cmps
add
dec
scas
dec
xor
out
les
gs
rcr
dec
nop
cld
in
xor
push
or
cwde
rol
inc
push
mov
cs
inc
pop
imul
ret
sbb
(bad)
pop
popa
mov
sub
pop
mov
mov
cmp
cmp
not
jecxz
neg
push
dec
mov
lods
dec
movs
cli
xor
add
inc
pop
jg
popa
jbe
cmps
mov
out
push
scas
lock
push
test
std
cmps
cli
xor
popa
daa
cmp
mov
les
cli
xor
call
dec
sbb
(bad)
shl
or
inc
sbb
adc
fadd
ins
iret
repnz
cwde
or
xor
cwde
cmp
imul
in
mov
dec
stos
aas
dec
xchg
in
inc
pop
call
pop
cmp
jnp
fwait
xor
aad
cmp
aas
ret
mov
(bad)
mov
outs
hlt
xchg
jb
or
jns
adc
(bad)
jge
jl
rol
pop
movs
push
sbb
and
pop
ret
adc
fdiv
xchg
lea
dec
dec
xor
daa
inc
cmc
jg
push
arpl
xchg
(bad)
xlat
cmovbe
shl
and
inc
pop
inc
adc
xchg
mov
in
in
jae
jae
xor
pop
stos
jnp
iret
jne
imul
in
daa
scas
outs
push
cmp
nop
mov
xchg
cld
xchg
fcmovu
loop
out
cld
jo
daa
lods
jl
nop
sub
retf
loopne
or
std
add
js
arpl
jge
xor
(bad)
pop
(bad)
mov
add
inc
lock
dec
fsubr
loope
xchg
jl
sub
enter
(bad)
inc
xchg
xchg
sets
clc
adc
cmps
aad
adc
sbb
mov
addr16
cmp
cdq
mov
pop
sar
xchg
cdq
movs
cmp
jnp
lods
cmc
shr
push
shr
sub
add
test
sbb
jmp
add
mov
sub
(bad)
pop
adc
mov
ins
push
xor
bswap
lea
out
mov
jae
cmp
lods
in
fcom
mov
xor
mov
jo
jge
inc
cmps
xchg
adc
fldenv
push
dec
fld
mov
ja
mov
xchg
sahf
lods
and
fcmovnb
xlat
and
pop
in
fimul
jbe
jno
aas
les
movs
fisttp
call
sub
push
mov
adc
push
jecxz
sbb
push
sqrtps
jns
pop
mov
test
retf
and
mov
mov
lock
inc
lock
in
cmc
jecxz
add
dec
dec
gs
retf
fld
loopne
ss
daa
xor
icebp
jle
loope
iret
and
(bad)
xor
xchg
mov
imul
ffree
(bad)
shl
add
int3
inc
mov
push
scas
lods
int3
cmp
lahf
adc
push
retf
inc
cmp
sbb
scas
icebp
mov
and
push
(bad)
sbb
inc
xor
cli
leave
jg
and
adc
adc
or
adc
rcr
xlat
sahf
cs
in
out
xor
sahf
mov
push
into
jmp
ror
fnsave
daa
hlt
sbb
xchg
das
sub
inc
mov
jns
cmp
jl
out
mov
sub
ins
push
nop
mov
aam
adc
jmp
add
retf
or
pushf
cmp
stc
mov
mov
stos
aad
test
cmp
pop
xor
imul
and
and
add
out
and
mov
movs
xor
inc
rol
mov
int
inc
ror
out
pop
repz
fwait
dec
mov
mov
xchg
pop
(bad)
js
(bad)
sub
fs
mov
into
pop
ja
dec
(bad)
push
cmp
pushf
and
sub
aad
adc
test
push
mov
fadd
dec
mov
in
inc
mov
pop
and
cdq
dec
fld
mov
cmp
cmp
jmp
(bad)
push
sbb
in
mov
push
fld
push
mov
cmp
pop
push
mov
scas
xacquire
jnp
jne
inc
lock
cmp
(bad)
rcl
imul
add
pop
cmp
retf
call
mov
cmc
add
scas
xchg
add
cmp
bound
fist
out
mov
mov
test
sbb
out
cmc
(bad)
jb
and
ret
cmp
xchg
out
xchg
pushf
sub
pop
adc
int
mov
mov
or
lahf
xor
sbb
dec
cmps
mov
test
push
sub
mul
sub
repz
xchg
sub
jp
or
repz
mov
fwait
cld
pop
outs
pop
xchg
cdq
fnstcw
psubsb
je
sbb
lahf
cmps
mov
test
cmp
inc
jae
mov
and
test
mov
popa
imul
mov
test
or
push
sub
or
in
add
sub
test
jl
push
xchg
(bad)
inc
cmp
lea
and
or
cmp
inc
dec
rcr
fprem1
mov
jae
ror
popa
and
outs
cmp
js
call
clc
mov
add
pusha
mov
xor
imul
cmp
jmp
inc
push
fnsave
cs
pop
sbb
clc
retf
mov
dec
jmp
and
mov
and
popa
push
adc
pop
sub
fs
add
fdiv
jb
or
retf
xchg
mov
pop
and
mov
call
clc
push
dec
jmp
jno
in
cld
inc
cmp
aaa
mov
aad
adc
xchg
inc
rol
cmp
sbb
push
setns
jmp
inc
fwait
jecxz
imul
inc
cmp
adc
jno
inc
lods
mov
dec
sti
lahf
retf
fwait
pop
pop
(bad)
fstp
pop
inc
imul
inc
mov
gs
xchg
stos
cmps
(bad)
enter
adc
fsub
(bad)
js
or
movs
loop
pop
mov
sub
add
popf
inc
nop
hlt
sub
mov
arpl
push
pushf
stos
adc
or
pop
je
arpl
leave
fs
pop
inc
enter
(bad)
ins
dec
stc
jnp
sub
dec
mov
push
enter
sub
test
adc
rcl
pop
inc
cli
pop
xchg
out
fsubr
mov
jo
das
inc
dec
dec
mov
retf
cwde
dec
shr
in
retf
iret
sbb
enter
dec
mov
or
les
pop
sahf
xchg
and
pushf
fnstenv
xor
mov
push
ret
inc
pop
add
push
mov
sbb
iret
lock
inc
into
or
mov
pusha
shl
mov
mov
sub
js
(bad)
mov
and
mov
push
pop
push
cmp
dec
out
hlt
jno
jge
pop
pop
and
mov
mov
adc
lds
imul
pushw
inc
pop
dec
jp
push
mov
jns
pop
push
(bad)
or
stos
pop
mov
out
xchg
and
ret
cmps
mov
icebp
fdivr
dec
popa
call
adc
adc
out
cmp
jo
sub
ret
xor
ret
mov
cmp
dec
dec
sub
aad
or
test
adc
push
retf
lea
and
mov
les
cmps
dec
pop
test
jge
and
cmp
cmp
sub
mov
imul
inc
sahf
push
pop
xchg
test
sbb
inc
test
inc
movs
push
imul
push
xchg
into
popa
mov
jecxz
mov
jp
(bad)
jg
in
cdq
repz
xchg
scas
jg
test
mov
(bad)
out
shl
xor
fs
ret
sbb
push
jle
lea
adc
lea
movs
imul
pop
ds
lahf
inc
inc
pop
push
jno
mov
inc
(bad)
pop
scas
dec
inc
ror
sub
push
das
ds
rcr
sar
mov
lods
xor
cmc
sub
cmc
(bad)
hlt
jb
dec
ds
outs
jecxz
imul
sbb
jge
movs
pop
push
mov
fidivr
add
sbb
(bad)
and
cmp
gs
xor
xchg
xchg
push
push
push
push
pop
or
mov
jge
push
adc
ror
pop
das
aad
lahf
das
adc
shr
push
hlt
ja
xchg
inc
mov
bnd
(bad)
pop
xchg
gs
ins
cmp
xchg
sbb
sub
adc
jp
addr16
or
sbb
or
push
fxch
loop
mov
std
rcr
cmp
mov
out
sub
mov
leave
push
mov
and
imul
mov
adc
inc
xchg
out
dec
cmp
(bad)
mov
(bad)
xchg
jne
hlt
dec
pop
adc
and
es
cmp
data16
jle
ja
out
ret
pop
(bad)
adc
cmp
fist
je
jnp
cdq
test
cmpxchg
add
or
pop
mov
loopne
fisub
push
sbb
dec
mov
stos
pop
call
out
push
das
out
mov
lea
(bad)
(bad)
test
fbld
int3
mov
aaa
or
cmp
xor
cwde
sbb
sub
cs
cs
arpl
lods
stc
lock
push
aaa
hlt
loope
xchg
sub
pop
xchg
xor
jle
adc
dec
(bad)
sub
mov
ret
idiv
imul
fstp
fbstp
test
ret
mov
jo
into
sub
mov
pop
xor
cld
popa
xor
xchg
add
neg
test
or
sbb
sub
sti
retf
dec
add
addr16
ja
fwait
in
pushf
icebp
mov
rcr
or
push
out
push
sub
pusha
ins
xor
dec
sub
adc
dec
pop
add
xor
test
sbb
push
inc
push
mov
jbe
jmp
pop
xchg
gs
or
push
daa
in
stos
lahf
inc
icebp
dec
inc
(bad)
call
int
lods
cmp
scas
xchg
sbb
retf
enter
repnz
cmp
fdiv
int
data16
sbb
mul
pop
push
loop
std
dec
dec
inc
cmc
ja
or
lds
fld
dec
jbe
test
ds
sub
and
sbb
inc
leave
adc
xor
jle
jb
mov
aas
lods
inc
(bad)
ja
nop
imul
or
pop
jmp
stc
dec
sub
dec
jne
pop
push
adc
popf
mov
repz
mov
out
mov
and
dec
push
mov
test
adc
mov
mov
cmp
lods
mul
pop
dec
mov
mov
inc
stos
aas
iret
mov
loopne
jb
mov
mov
push
repnz
icebp
jecxz
cld
lahf
jns
retf
pop
jl
mov
ins
fcom
and
shr
fwait
fwait
xor
cmps
xchg
ds
xchg
bound
pop
xor
int
es
int
xchg
sub
sub
movs
fadd
mov
fdivr
stc
xor
push
push
test
inc
imul
xor
out
jmp
je
ret
pop
sbb
jns
xor
and
jle
jo
ss
xchg
ficomp
push
fstp
mov
daa
dec
mov
xchg
pop
enter
arpl
add
jle
das
stos
xlat
mov
lds
clc
cld
jge
mov
shl
sub
call
enterw
sbb
mov
inc
pop
cld
push
imul
(bad)
add
mov
push
outs
push
mov
ja
xchg
or
jmp
and
aam
mov
pop
dec
movs
aad
lock
adc
inc
cmp
dec
fdiv
pop
loope
add
scas
arpl
cmp
cli
lea
(bad)
movs
mov
lods
push
mov
pop
add
jb
xor
push
add
or
stc
xchg
nop
(bad)
fistp
sub
mov
pop
leave
jo
jo
popa
div
add
sbb
vcvtpd2ps
dec
jnp
ud0
lock
mov
inc
ss
ror
and
xor
sbb
cmc
push
(bad)
mov
ja
and
cs
xchg
mov
add
inc
fmul
js
xchg
(bad)
jle
push
xchg
inc
jo
retf
adc
pop
dec
(bad)
iret
inc
jne
add
inc
jnp
cli
pop
fld
xchg
adc
fsub
mov
repz
(bad)
ins
inc
cdq
xor
dec
fs
jl
dec
aam
dec
aam
mov
clc
mov
mov
xor
inc
fs
mov
jge
out
mov
dec
les
fstp
jge
push
mov
shl
mov
popf
xor
(bad)
xchg
pop
inc
call
call
adc
mov
mov
xchg
stc
push
cli
scas
dec
mov
mov
dec
mov
sbb
daa
push
sub
pushf
push
inc
jae
and
sar
jae
cmp
test
jb
push
rol
mov
daa
gs
xor
cmp
lods
jnp
(bad)
mov
xchg
sbb
loop
fcmovnbe
xchg
nop
fcomip
add
popa
lock
pop
loopne
js
outs
xchg
out
repnz
mov
jl
stos
in
sbb
sbb
inc
mov
xchg
dec
fs
or
bound
call
xchg
out
bound
jno
jecxz
clc
mov
mov
mov
lea
sbb
arpl
data16
mov
lahf
fnstenv
int3
sub
xlat
mov
mov
dec
idiv
js
iret
(bad)
aam
mov
mov
sub
cmps
jmp
pop
rol
aam
cs
sub
add
push
sub
pop
loope
(bad)
dec
fwait
xor
clc
das
jle
movs
and
xchg
ret
mov
jne
jg
jne
test
push
push
out
inc
inc
sbb
ds
jmp
das
test
jo
mov
add
les
xchg
lods
xor
lea
popa
test
lock
pop
cs
pop
loop
sbb
daa
xlat
jbe
aaa
xchg
movs
cmp
xchg
cli
aad
int3
mov
repz
retf
sub
jno
aad
and
sti
loopne
les
pop
sub
out
xchg
aas
dec
adc
sub
in
add
xor
push
push
aam
clc
rol
jl
dec
inc
data16
bnd
push
mov
mov
js
xor
enter
shl
pop
jl
or
inc
in
sbb
xchg
and
std
std
jge
lods
sbb
jbe
dec
aaa
frstor
mov
add
sub
dec
das
pop
ds
cmp
or
outs
add
push
adc
ret
lods
cmp
outs
ret
dec
dec
popa
mov
pop
mov
loopne
jne
inc
or
push
call
xchg
push
dec
add
nop
cmp
pop
sub
add
cmp
jg
jge
pop
clc
or
cdq
out
gs
fst
cmps
or
aad
mov
dec
jecxz
ror
jb
hlt
ret
jmp
call
neg
ss
repz
adc
cmps
nop
enter
sub
stos
push
aas
scas
cmc
mov
mov
out
mov
push
stc
add
ret
mov
jl
loopne
pop
lock
shl
xor
mov
daa
xchg
inc
or
mov
fisttp
add
loopne
or
aam
xor
mov
mov
popa
fidiv
das
mov
cmp
sub
pop
and
pushf
or
imul
rcl
(bad)
loop
xor
imul
in
sub
dec
dec
push
adc
dec
cwde
test
or
test
mov
ds
or
push
inc
mov
std
aaa
cmps
not
sub
mov
mov
mov
in
add
cmp
xchg
aad
inc
test
iret
(bad)
add
enter
jecxz
retf
cmc
jbe
sbb
and
or
loop
stos
movs
into
xor
push
push
mov
xchg
jnp
push
mov
cmp
xor
cmp
(bad)
mov
sbb
(bad)
inc
lds
jl
fcmovne
cld
pop
retf
xchg
push
call
scas
pop
push
cdq
pop
push
aam
mov
push
aad
(bad)
cmp
or
mov
pop
pop
call
push
xor
mov
sbb
clc
push
enter
int
and
lds
mov
loope
clc
adc
ror
hlt
jmp
or
daa
xchg
sub
mov
fcmovnb
gs
icebp
lea
dec
pop
xchg
push
inc
fwait
daa
push
enter
(bad)
xchg
push
mov
test
mov
test
xlat
out
mov
ffree
push
dec
xor
mov
push
icebp
push
(bad)
cmp
sbb
pop
push
loopne
ds
neg
cli
add
jg
jge
xchg
sub
dec
rol
mov
jl
sti
xchg
jnp
ja
mov
sbb
std
jecxz
psubq
cmp
inc
lock
int3
pop
pop
sbb
ret
aad
push
mov
pop
add
dec
je
mov
pop
mov
inc
dec
fisttp
dec
mov
sub
mov
sbb
xchg
sbb
dec
fmul
retf
xchg
ret
cwde
mov
shl
mov
cmp
pop
enter
dec
sti
imul
setge
div
repz
xchg
adc
mov
bound
popf
in
cld
fdiv
dec
sbb
rcr
leave
into
jb
or
cmp
repnz
xchg
jae
inc
ds
fwait
icebp
mov
mov
or
nop
imul
sbb
mov
std
mov
mov
jle
and
jno
inc
ror
stc
pop
jno
stos
in
jae
cs
and
jecxz
or
adc
test
out
iret
dec
in
nop
out
pop
jl
mov
daa
push
clc
fld
test
mov
repz
ror
mov
xchg
cwde
pop
(bad)
mov
(bad)
jbe
jp
ins
test
mov
std
pop
test
sbb
dec
and
xchg
(bad)
push
arpl
cmc
into
jge
data16
or
ret
and
fnsave
out
(bad)
out
mov
xchg
push
sbb
inc
ror
data16
sbb
lahf
push
je
or
(bad)
aas
adc
pop
mov
cmp
xor
test
adc
pop
mov
pushf
or
mov
add
mov
rol
adc
scas
jle
cmp
test
ins
mov
int
sub
sahf
lods
push
pop
out
mov
xchg
(bad)
dec
in
inc
or
pop
stc
rcr
mov
fld
push
lea
in
outs
fst
sub
nop
dec
mov
int3
and
add
sub
call
push
nop
std
or
inc
call
je
and
inc
add
pop
sbb
test
mov
push
sub
in
sbb
sub
out
cmps
stc
and
adc
jecxz
fstp
fisubr
mov
sahf
iret
gs
inc
ss
fisubr
dec
push
dec
and
test
push
mov
sbb
lea
jp
pusha
sub
call
dec
cld
retf
adc
movs
jg
adc
or
mov
inc
pop
and
aaa
sbb
mov
mov
lods
mov
mov
in
jbe
inc
sbb
xor
repz
stc
push
jmp
sbb
pop
sbb
fdiv
mov
(bad)
jle
in
cmp
mov
xor
loope
sub
sub
push
xor
sbb
call
inc
cmp
and
arpl
loope
mov
push
std
cmp
or
ja
mov
push
sbb
cs
mov
jecxz
adc
inc
dec
jge
mov
sbb
out
and
jmp
lds
sbb
push
xchg
rcl
dec
nop
mov
clc
scas
test
pop
retf
inc
pop
popa
loopne
xor
fdiv
cwde
mov
mov
sub
pop
mov
add
xor
and
add
loopne
push
out
mov
sahf
mov
test
les
lods
or
sbb
sub
fld
sbb
xchg
test
inc
mov
sub
sub
test
xchg
gs
inc
es
les
aaa
imul
mov
mov
movs
push
sub
xchg
xor
ds
dec
les
xor
lock
jno
add
sbb
fs
xor
pop
xchg
iret
push
movs
mov
mov
fwait
or
mov
sub
scas
mov
mov
fdivr
pop
mov
sbb
int
popf
test
ficom
les
(bad)
add
icebp
test
or
pop
scas
movs
add
add
pop
stc
pop
inc
test
mov
dec
mov
dec
enter
lods
cmp
loope
mov
js
jno
out
in
std
xor
push
rol
sbb
jl
mov
inc
push
and
sub
call
jp
cmovb
ins
push
lds
jne
enter
pop
ds
push
(bad)
mov
mov
test
push
test
push
jne
call
dec
adc
stos
add
icebp
fidivr
stos
test
dec
mov
setp
cs
popa
mov
xchg
(bad)
and
xchg
inc
mov
mov
mov
aas
push
outs
jmp
mov
add
sub
enter
mov
ins
out
jmp
(bad)
and
mov
popa
inc
mov
enter
test
pop
stos
mov
pop
sar
fbstp
inc
pop
mov
outs
out
je
xlat
mov
push
pushf
(bad)
pop
jecxz
and
jnp
mov
mov
mov
and
and
jge
xor
mov
adc
adc
daa
test
cmps
xor
mov
call
and
jg
sub
inc
sub
arpl
dec
fldcw
jp
mov
test
outs
pop
mov
aad
jo
loop
mov
mov
test
push
cmp
cld
repz
pop
pop
ins
dec
push
fs
vdivss
mov
out
fwait
sar
stos
jmp
idiv
and
addr16
jg
cmps
fldenv
pop
xor
mov
pop
pop
adc
xor
jmp
adc
fwait
cs
fistp
xchg
jge
adc
fstp
fs
sub
fwait
int3
adc
cld
mov
popa
push
out
pop
push
shl
add
jl
leave
xchg
sahf
mov
xchg
in
fstp
dec
jne
test
cmps
fwait
cmp
das
mov
int
std
lock
fs
inc
movs
adc
push
sub
cmps
hlt
test
mov
mov
out
xchg
sub
mov
mov
jmp
test
add
cmc
and
jb
in
dec
mov
rcr
and
mov
std
jbe
pusha
sar
mov
mov
outs
cmp
adc
lahf
leave
mov
arpl
rcl
xor
retf
and
pop
mov
xor
jo
stos
fucomip
fwait
mov
sub
push
xor
adc
clc
mov
pushf
mov
fs
mov
xchg
sbb
(bad)
out
jl
and
add
add
sub
inc
fwait
xchg
fsubr
push
(bad)
dec
repnz
data16
mov
icebp
sub
stos
mov
adc
les
sub
inc
neg
lods
stos
or
dec
aaa
fsubr
gs
cmps
cmps
dec
loopne
pop
lods
mov
cdq
mov
dec
mov
fsubr
fwait
popf
movs
jle
ficomp
ret
and
xor
fimul
sahf
xchg
lds
imul
mov
pop
hlt
jg
fwait
pop
or
jnp
jge
sbb
stos
out
in
cmps
ret
ja
or
std
and
xor
sub
jecxz
test
into
push
loopne
mov
xor
mov
nop
je
jb
dec
js
ficom
xor
pop
test
adc
or
movs
xlat
imul
pop
push
outs
push
aaa
dec
scas
jnp
push
xor
sti
loopne
add
out
jmp
xor
sub
xchg
int3
mov
fs
mov
inc
mov
(bad)
sub
outs
loopne
mov
and
or
outs
fadd
out
dec
imul
sbb
add
dec
sbb
cli
push
jae
add
std
mov
std
(bad)
push
add
jbe
pop
jge
mov
xor
mov
mov
test
sbb
or
popf
jle
pop
in
mov
dec
xor
sub
popf
and
cmp
imul
push
push
fwait
adc
imul
and
sub
jno
and
icebp
adc
xor
rol
xchg
test
les
int
lods
add
jl
out
inc
pop
adc
(bad)
loop
pop
adc
les
sub
rcr
call
cmp
leave
dec
xlat
loopne
cmp
repnz
dec
adc
pop
or
mov
lock
or
jbe
push
xor
inc
xor
sub
dec
xor
cmp
jmp
xchg
xchg
xchg
cmps
push
or
fs
aaa
jge
adc
sti
retf
aas
pop
mov
gs
stos
in
push
mov
(bad)
cwde
sub
je
jg
adc
lods
inc
push
retf
push
inc
push
stos
mov
rcl
test
arpl
pop
popf
ins
mul
jmp
add
test
(bad)
in
xchg
sbb
mov
adc
hlt
add
in
rcr
clc
inc
inc
inc
(bad)
pop
ret
(bad)
frstor
xor
mov
jl
push
out
std
pop
fnstsw
enter
gs
ja
leave
cld
fsubr
pop
dec
push
xchg
jp
mov
cmp
(bad)
cs
inc
hlt
add
aad
popf
sbb
sub
xor
inc
lds
pop
inc
inc
ja
dec
imul
loopne
sub
call
pop
out
data16
cmp
push
stos
mov
pop
mov
fdiv
add
mov
clc
inc
inc
cwde
clc
into
push
mov
xchg
jmp
mov
cdq
scas
js
lea
dec
mov
(bad)
(bad)
fsubr
fisub
pop
sbb
adc
push
inc
xor
ror
data16
movs
ja
ins
popf
push
nop
test
xchg
loop
movs
add
push
mov
sub
ins
les
ret
fs
dec
adc
lock
arpl
sbb
fidivr
addr16
xor
and
jmp
add
or
in
hlt
xchg
mov
(bad)
in
(bad)
es
mov
cli
or
mov
in
aaa
inc
sbb
lds
and
xor
jb
int3
push
jne
mov
je
fstp
retf
add
xchg
outs
mov
xchg
xor
adc
mov
stos
pop
stos
xlat
lods
push
(bad)
xlat
ins
scas
movs
mov
loope
outs
cmc
fbstp
sti
push
in
in
repz
and
mov
out
jmp
rol
sub
fwait
adc
je
(bad)
adc
dec
dec
leave
pusha
repz
jmp
inc
je
add
or
fcomp
addr16
pop
jmp
jb
mov
lea
gs
push
mov
sub
pop
shr
mov
xchg
and
(bad)
mov
imul
sbb
outs
xchg
fimul
cld
out
test
and
das
repz
push
lahf
jmp
(bad)
addr16
js
cmp
sbb
and
push
js
mov
add
cwde
and
mov
(bad)
movhps
cmps
cwde
xor
mov
lods
dec
cwde
dec
inc
(bad)
fld
mov
daa
inc
inc
jnp
xor
mov
popf
and
sti
sahf
lea
fwait
mov
(bad)
aam
push
xchg
js
xchg
sub
je
inc
mov
sub
mov
mov
pop
pop
add
lds
arpl
dec
dec
push
and
xchg
jae
shr
div
and
jbe
cmp
push
mov
add
ins
inc
mov
pop
xchg
pop
adc
sbb
xchg
outs
test
jo
and
adc
jae
jmp
movs
inc
mov
fucom
pop
das
imul
addr16
add
mov
push
retf
cs
ret
jbe
sub
stc
dec
add
or
pop
loope
adc
mov
dec
add
push
push
xor
add
add
lds
push
aad
xchg
sbb
sub
mov
push
push
inc
pop
test
xchg
loope
frstor
nop
xchg
sub
cmp
stc
outs
add
ins
mov
fild
jne
mov
gs
sub
mov
sahf
cmc
inc
jo
in
mov
or
jg
int3
bswap
out
sbb
aad
cmp
dec
out
stos
mov
outs
xor
pushf
xchg
sbb
(bad)
fstp
adc
aaa
pop
xor
sbb
out
sub
(bad)
fisub
int
sub
cwde
or
cdq
pop
imul
pushf
mov
arpl
adc
lods
add
in
mov
sbb
ja
add
and
fstp
sbb
push
pop
lahf
push
mov
adc
icebp
jmp
daa
fcomp
adc
lds
mov
jo
mov
add
js
in
or
fidivr
xlat
jae
mov
in
and
xchg
jb
aam
jae
stc
or
cs
or
pop
stos
fldenv
or
dec
(bad)
imul
out
ror
in
lock
and
ret
sub
int
xchg
(bad)
imul
mov
jne
jo
sbb
adc
gs
aaa
mov
not
jmp
push
pop
jmp
push
cmp
sti
xchg
enter
ret
cmp
sbb
push
sub
sti
cmp
adc
fmulp
daa
cld
or
inc
mov
aas
mov
hlt
push
adc
int3
pop
cmps
push
or
xor
push
outs
es
dec
mov
frstor
dec
push
ror
mov
sub
mov
xor
mov
cmp
adc
mov
or
jae
jo
jecxz
mov
push
sbb
or
fild
cmp
rcl
stos
popf
dec
adc
cmps
push
dec
adc
dec
mov
pushf
jns
aad
adc
shl
xlat
into
mov
cli
push
jno
and
xlat
aas
sub
pop
(bad)
fidiv
pop
push
fistp
dec
call
loopne
sub
imul
push
adc
mov
adc
(bad)
ins
ins
into
and
dec
xchg
jne
jmp
jbe
popa
leave
cmp
nop
ror
xchg
pop
lods
pop
and
sub
mov
add
dec
mov
stos
jl
out
imul
jne
jge
push
test
and
lds
or
sbb
cli
sub
add
cmc
add
pop
frstor
(bad)
test
mov
std
out
inc
mov
lods
xor
ins
mov
xor
xor
fiadd
sub
push
mov
xchg
sti
and
cmp
add
adc
jno
sub
and
sbb
push
call
push
mov
push
dec
jg
data16
add
inc
in
stos
ds
popa
call
aaa
or
dec
scas
and
jne
and
or
mov
jl
ds
das
or
mov
push
rcr
jne
in
(bad)
lea
mov
inc
iret
push
test
dec
popf
enter
fwait
dec
sbb
popf
jge
stos
sbb
push
dec
mov
add
and
push
shl
ja
mov
(bad)
in
cwde
fadd
leave
icebp
mov
jl
jbe
cmovo
xor
imul
cld
in
(bad)
repnz
imul
scas
dec
popa
repz
sub
hlt
jecxz
lods
jp
or
mov
jbe
mov
cld
sub
mov
add
fwait
and
popf
ja
inc
cmp
aad
and
jo
push
lahf
hlt
inc
shl
adc
xor
cmc
aas
add
lds
cwde
jg
addr16
pop
mov
add
mov
push
dec
xchg
icebp
xlat
push
mov
aaa
xchg
mov
push
sbb
fs
jecxz
into
rcl
fisttp
push
xchg
out
je
clc
out
jecxz
cmps
popa
or
cmps
pop
es
dec
add
lods
dec
add
shl
dec
daa
mov
dec
jg
dec
xor
and
dec
xchg
cmp
add
cld
cmps
pop
ins
sbb
shl
pop
stc
mov
pop
pop
mov
push
out
pop
jge
xchg
sbb
aam
push
pop
push
in
mov
ja
inc
xchg
out
mov
adc
mov
js
and
cmp
pusha
sub
add
sub
inc
les
push
xor
push
xchg
(bad)
gs
mov
sahf
(bad)
jmp
aad
inc
rcr
or
dec
pop
jae
xor
jno
arpl
xor
inc
pop
imul
stos
mov
aad
mov
adc
cmp
repnz
sbb
sub
sub
add
sbb
adc
dec
cmp
push
test
movs
mov
mov
inc
pop
imul
ret
mov
mov
cmp
pop
fcomi
push
mov
call
mov
cli
test
jns
das
sahf
push
retf
mov
mov
sub
lea
sbb
inc
xor
add
popf
out
lods
aam
neg
bound
(bad)
push
mul
popa
js
xor
push
mov
cli
dec
arpl
jae
mov
mov
and
cmp
mov
push
push
sub
mov
cli
add
std
clc
jnp
xlat
cmp
mov
xor
adc
dec
vpunpcklbw
cdq
popf
cmps
xchg
out
pop
xor
push
int3
add
in
and
fstp
mov
push
fsub
adc
xchg
add
xchg
push
push
sbb
push
sar
or
hlt
ja
pushw
jle
or
jnp
out
(bad)
sti
add
pop
and
inc
mov
jmp
and
mov
inc
movs
cmp
sbb
scas
cmc
and
(bad)
scas
xor
xor
std
jo
stc
mov
sub
outs
sbb
stc
mov
sti
fs
pop
call
add
push
pop
cmc
aam
(bad)
fwait
xchg
cmp
mov
adc
lock
sub
sub
int
xor
ja
jb
fsub
test
cmp
push
and
push
inc
call
lock
int
cmp
pop
sbb
adc
stos
int
xor
daa
gs
cmp
or
daa
inc
sub
retf
xchg
sar
push
and
jno
sub
push
dec
xchg
xchg
cmp
and
push
(bad)
lock
ins
xchg
fadd
pushf
cmps
mov
aaa
pop
pop
in
cmps
cmps
mov
pop
inc
jo
sbb
sti
fbstp
sbb
or
sub
das
fimul
fimul
inc
push
xchg
inc
push
rcl
mov
jmp
loop
sbb
jge
xor
jnp
scas
daa
mov
cmp
test
mov
ss
inc
mov
shr
mov
mov
add
cmp
sbb
ja
ins
ret
mov
fcom
mov
imul
cmp
test
cs
fwait
repnz
push
loopne
push
mov
adc
and
mov
jecxz
and
dec
add
popf
or
ds
nop
loope
adc
xchg
out
(bad)
jp
test
jl
pop
(bad)
out
fdivr
(bad)
fild
sub
push
clc
rcr
jo
sub
aad
mov
adc
push
add
xor
and
(bad)
imul
enter
dec
(bad)
int3
adc
call
inc
and
sbb
call
xchg
or
pop
dec
out
inc
daa
cli
out
mov
in
out
int
and
cmp
or
aad
std
call
popf
add
gs
test
xor
cmp
and
mov
cmp
mov
inc
cmp
inc
cwde
or
pop
pusha
leave
fs
cs
mov
cmp
leave
mov
sbb
out
ins
or
les
add
scas
loopne
pop
test
fdivr
and
inc
jmp
sub
popf
inc
fadd
fnsave
xchg
ret
shl
mov
xor
ja
and
out
call
test
mov
lods
loopne
call
pop
(bad)
in
iret
movs
in
lahf
mov
pop
xlat
mov
inc
xchg
xchg
test
fnsave
outs
sahf
lds
push
jbe
lock
cmp
and
pop
cmp
inc
out
push
aad
adc
scas
mov
ins
mov
mov
cli
jg
adc
sar
dec
sub
jmp
nop
push
mov
test
push
or
xor
and
int
gs
(bad)
out
test
fwait
push
dec
std
(bad)
sbb
xchg
(bad)
mov
push
pop
mov
mov
inc
push
mov
out
sbb
in
das
sub
mov
xor
add
xor
adc
adc
(bad)
stos
mov
jnp
(bad)
mov
loop
pusha
imul
dec
dec
push
or
test
mov
sti
mov
pop
iret
shl
cmp
add
sbb
ja
stc
repnz
gs
jmp
enter
movs
jne
cmp
and
pop
lahf
inc
(bad)
cmp
stos
jnp
sub
mov
lahf
add
adc
sub
add
mov
add
cmp
mov
into
je
inc
lea
call
ret
lods
cmp
lea
icebp
aaa
mov
dec
clc
sahf
outs
ins
push
out
mov
jae
out
call
es
inc
repz
cld
xchg
aaa
mov
sahf
mov
cmp
xchg
pop
push
and
push
in
add
es
shl
mov
xor
cli
add
ret
adc
lds
lods
push
mov
add
push
sbb
cld
add
popa
jo
les
mov
sub
mov
cmp
sbb
movs
test
xchg
jg
pop
not
mov
sbb
sbb
xor
adc
arpl
adc
cwde
jnp
lea
dec
popa
leave
stos
pop
(bad)
cwde
jbe
sub
mov
inc
sbb
jae
cmp
icebp
jmp
push
push
outs
out
dec
dec
aaa
rcl
fcmovnb
cmp
aaa
hlt
gs
sbb
mov
xchg
sub
inc
stos
pop
pop
iret
dec
push
hlt
jl
cmp
adc
xor
cmp
sbb
test
outs
xor
jb
in
or
mov
in
mov
dec
out
into
push
lahf
lock
dec
scas
push
popa
dec
in
test
inc
push
aaa
dec
popf
pop
popf
in
push
cmp
fmul
pop
hlt
(bad)
add
sub
and
adc
push
jg
pop
lods
int
data16
stos
sbb
in
(bad)
xchg
cmp
push
sub
test
clc
imul
fsub
jle
mov
arpl
pusha
push
push
(bad)
into
test
(bad)
jmp
out
adc
inc
adc
adc
mov
push
idiv
xchg
cmp
mov
cmp
nop
enter
shr
fmul
loop
sub
cmp
out
and
daa
jnp
dec
adc
xor
mov
xor
mov
ror
dec
jns
loopne
movs
gs
fst
js
aas
popf
sbb
push
or
std
add
dec
pop
aam
test
sub
jecxz
cmp
mov
xchg
push
ja
push
outs
mov
aaa
pushf
mov
sub
loopne
sbb
xchg
sub
sub
js
int
adc
ins
not
dec
popf
mov
sar
das
ret
test
fcom
and
rcl
xchg
xchg
fstp
test
retf
pusha
lods
sahf
mov
jns
lods
dec
rcr
xor
adc
mov
inc
inc
outs
in
add
aam
bound
enter
push
jg
sbb
sbb
les
in
dec
or
test
mov
ja
or
jp
mov
add
adc
bound
enter
ja
inc
mov
adc
xor
cmp
ret
stc
or
pop
dec
xchg
sbb
sahf
outs
inc
mov
adc
push
(bad)
fisubr
xor
mov
call
inc
repnz
jg
xchg
or
cli
inc
cmp
mov
repnz
test
(bad)
ja
mov
jo
or
lds
sahf
push
push
out
or
test
push
(bad)
push
rcl
cmps
jg
sub
gs
sub
popa
fld
mov
add
xchg
jl
cld
push
mov
dec
into
fild
lock
jae
aam
cs
movs
data16
es
dec
out
mov
(bad)
ja
jmp
ins
lods
cmc
retf
(bad)
mov
lds
add
jae
add
(bad)
pop
(bad)
stc
cdq
xchg
mov
dec
inc
rcr
adc
or
enter
(bad)
loop
sbb
dec
mov
cmp
adc
and
inc
push
sbb
jo
popa
sub
sub
popa
push
pop
fs
mov
aas
mov
jo
sbb
mov
scas
add
add
call
xor
xor
mov
adc
mov
lea
add
mov
outs
ins
test
xor
push
or
and
enter
lods
mov
imul
push
xchg
mov
outs
popa
sub
sbb
dec
pushf
cdq
test
sti
fst
or
(bad)
in
xor
or
cmp
cmp
cmps
ret
hlt
fstp
jecxz
sub
sbb
jecxz
inc
and
mov
mov
aas
es
not
movs
pop
das
lods
imul
push
cdq
fsubr
mov
aaa
sub
test
aas
aam
or
jbe
mov
retf
pop
rcr
adc
mov
add
pop
pop
xor
mov
adc
xchg
fcomp
push
bound
jnp
adc
(bad)
dec
ds
sub
jg
fsubr
fs
sbb
or
nop
test
out
lea
call
xadd
push
popa
dec
pop
lods
sbb
jmp
jne
fcmove
cld
stos
ret
sub
out
fs
jge
push
add
sub
mov
inc
js
aas
outs
cmp
or
pop
push
dec
push
shr
add
pop
pop
je
daa
and
pop
div
popf
mov
cwde
in
mov
out
outs
inc
out
sbb
mov
pop
stos
test
sar
mov
jle
lock
mov
hlt
adc
test
dec
adc
aas
ja
mov
(bad)
addr16
cmp
pop
cwde
xor
imul
stos
xchg
jge
sub
pop
xchg
inc
jb
popa
sub
mov
cmp
and
fistp
xor
rol
sub
xchg
sbb
sub
ss
pop
leave
out
mov
iret
mov
xor
sbb
out
stc
pushf
mov
xchg
add
mov
lds
sub
fwait
push
aad
mov
jp
shl
pop
mov
and
fistp
push
(bad)
sbb
jp
fs
sbb
ret
mov
stc
or
aad
push
movs
out
add
jp
inc
mov
shl
rol
enter
inc
sbb
ror
jnp
stc
fcomip
dec
xlat
inc
adc
cmp
rcr
ins
and
leave
jae
xchg
dec
inc
ins
push
and
stc
mov
mov
dec
rcr
enter
int3
int
sub
push
fsub
xchg
push
sub
mov
call
pushf
lea
movs
mov
lea
mov
fwait
jle
push
rcr
hlt
(bad)
adc
or
aam
mov
clc
pop
in
cld
adc
push
call
outs
sbb
std
sub
mov
(bad)
xlat
imul
jle
(bad)
out
sbb
imul
(bad)
movs
add
mov
mov
aaa
jp
inc
push
adc
mov
cmps
cs
retf
xchg
inc
jns
add
enter
mov
fstp
xchg
outs
push
mov
hlt
dec
xchg
sbb
ins
(bad)
xchg
out
sti
pop
push
pop
and
or
dec
lods
and
jo
pop
loopne
sbb
mov
inc
pop
jg
xlat
push
adc
lock
pop
cli
or
jecxz
cmp
pop
in
push
or
out
cmp
pop
push
(bad)
push
cmp
xchg
pop
inc
in
mov
js
je
xchg
xchg
lods
ja
rcr
dec
test
lock
mov
(bad)
out
or
cmp
ins
int3
jne
mov
repz
outs
mov
jp
mov
push
shl
dec
jbe
xchg
add
jge
mov
dec
dec
xor
jmp
pop
push
mov
call
dec
mov
je
xchg
mov
jecxz
mov
fld
pop
xchg
and
mov
sbb
fistp
lahf
dec
ss
movs
mov
ret
jbe
retf
jmp
jge
scas
jne
out
stos
cmps
sbb
mov
outs
std
loop
jns
adc
outs
xor
out
mov
ins
add
mov
pop
mov
outs
and
inc
mov
or
not
xor
mov
shr
dec
mov
mov
xchg
xchg
hlt
movs
jne
jnp
cmp
lods
imul
and
jle
sbb
jnp
jge
adc
cli
fldenv
sub
mov
popf
mov
jl
call
pop
adc
aaa
js
dec
push
mov
leave
enter
(bad)
data16
dec
movs
dec
adc
js
les
stos
cmps
(bad)
mov
ds
inc
inc
mov
dec
fwait
shl
scas
mov
shl
clc
mov
xor
xor
clc
fidiv
cmp
sbb
adc
mov
scas
jmp
push
xchg
cli
dec
neg
(bad)
fsin
out
lock
cdq
xchg
push
imul
push
and
and
cdq
ins
sbb
aam
daa
mov
and
mov
push
repz
ror
inc
dec
cmc
sahf
cmc
popa
pop
movs
retf
std
xchg
enter
xor
(bad)
or
xor
push
lods
in
ror
sub
mov
inc
mov
shl
push
xchg
scas
cmovae
cmp
and
idiv
popf
dec
jg
mov
mov
inc
in
outs
adc
jne
ins
imul
jle
test
gs
sahf
xchg
sbb
mov
mov
(bad)
addps
sahf
popf
outs
cmps
sub
adc
pop
sub
outs
div
cs
lods
push
jmp
fcom
out
dec
jb
aas
xchg
les
xlat
sbb
or
push
inc
andnps
add
push
mov
into
shl
inc
push
jmp
icebp
inc
outs
add
lods
pop
loopne
ret
fldenv
jmp
(bad)
mov
(bad)
out
cdq
push
aaa
adc
or
dec
mov
mov
xchg
pop
icebp
push
in
cmp
jnp
jnp
pusha
or
xor
mov
stos
sub
pop
push
ret
mov
prefetcht1
jns
mov
pop
or
icebp
mov
sbb
lahf
push
pop
aad
pop
sub
addr16
xchg
test
movs
push
leave
dec
sub
(bad)
push
repnz
mov
push
iret
jns
add
(bad)
mov
or
add
repz
jnp
jl
dec
add
imul
xor
(bad)
jmp
mov
mov
xchg
inc
cld
rcr
push
mov
jbe
scas
jno
sahf
sahf
xchg
jge
mov
ins
stc
mov
mov
adc
aaa
mov
cmps
adc
mov
jns
push
bound
imul
std
push
pop
adc
bound
(bad)
cmps
cdq
xchg
sbb
jmp
mov
bound
das
(bad)
das
xchg
lods
dec
lods
inc
loop
daa
shl
iret
xchg
or
add
inc
(bad)
fdiv
arpl
mov
jl
int
xchg
and
popf
mov
fs
out
iret
ja
clc
xlat
push
push
clc
les
popa
or
ret
mov
fwait
jo
out
int3
fistp
inc
gs
jl
add
sub
push
les
cdq
and
xchg
retf
add
mov
adc
cmp
pop
dec
fwait
call
mov
mov
sub
repnz
mov
dec
jno
ret
lock
scas
lds
dec
xor
sbb
je
shl
jnp
jl
push
sbb
into
lock
and
push
enter
es
fild
leave
xor
ss
mov
mov
retf
fisub
fnsave
pop
cmp
cmc
add
sbb
xchg
mov
loope
adc
add
add
sti
pop
cmp
loopne
scas
(bad)
mov
fsub
js
fs
jmp
movs
pop
or
push
pop
fisttp
clc
xor
dec
inc
mov
pop
rol
lahf
adc
rcr
and
add
(bad)
jne
leave
mov
push
pop
(bad)
ror
jbe
jne
push
xor
inc
and
test
lds
mov
dec
cmp
ror
cmc
push
jmp
shl
inc
cmp
sbb
dec
lock
cmp
or
repnz
mov
push
pop
push
jl
mov
fs
addr16
in
jns
arpl
sbb
out
sub
xchg
movs
sbb
ins
popa
lods
ret
cmp
jmp
retf
inc
(bad)
xchg
xchg
(bad)
jmp
jmp
inc
int
bound
adc
in
retf
hlt
icebp
into
outs
mov
sub
in
shl
cmp
adc
mov
pop
enter
lahf
out
sub
inc
setne
xor
inc
sbb
push
mov
xor
outs
dec
nop
or
shl
repnz
adc
test
mov
addr16
(bad)
dec
xor
jo
push
jle
clc
mov
jno
and
jl
sbb
jnp
leave
cmp
cmp
sbb
push
(bad)
arpl
jg
or
fs
mov
dec
or
popa
in
loopne
add
rcl
mov
fld
ret
ret
and
arpl
and
mov
lea
test
(bad)
out
in
(bad)
xchg
mov
mov
mov
je
dec
out
cdq
scas
pop
rcr
push
mov
jle
push
push
mul
mov
push
sbb
shl
(bad)
push
sbb
xchg
mov
pushf
nop
mov
dec
pop
ror
je
pop
and
jmp
or
and
or
inc
icebp
addr16
and
std
add
addr16
pop
fld
push
sti
dec
ss
fs
mov
jge
push
scas
daa
pop
pop
cmps
mov
jbe
xchg
push
call
arpl
mul
scas
lock
fld
or
stos
mov
(bad)
xchg
mov
add
jle
ss
and
out
je
fdivr
push
int
mov
idiv
and
out
cs
jb
dec
popf
xchg
pushf
xchg
dec
(bad)
jae
add
mov
jb
mov
add
jmp
je
sub
loop
std
xchg
rcr
ja
and
(bad)
mov
repnz
into
inc
fcomip
call
jne
out
test
lods
gs
dec
in
fist
ins
mov
pusha
pop
sbb
xchg
xchg
dec
out
not
jne
std
jnp
mov
scas
push
div
add
(bad)
push
scas
jae
ficom
aam
push
add
push
dec
add
icebp
xor
daa
xchg
ret
pop
sbb
pushf
sar
sub
push
xchg
sbb
mov
aas
test
loopne
xchg
mov
jmp
xor
popf
ja
pop
in
ret
jle
test
cwde
add
clc
add
mov
mov
rol
inc
cwde
repnz
xchg
dec
sbb
mov
pop
mov
push
ret
icebp
or
inc
sbb
cs
xor
sbb
xchg
mov
loopne
in
jecxz
pop
movntps
mov
(bad)
rcr
xchg
mov
sbb
cdq
arpl
sbb
mov
add
ror
imul
hlt
shr
dec
pop
sbb
lods
adc
sti
retf
push
mov
dec
shr
call
hlt
xchg
pop
jne
adc
inc
xchg
or
loop
push
data16
pusha
mov
adc
jb
adc
jo
xor
push
fwait
movs
push
and
out
lods
into
movs
ss
pop
retf
test
mov
int3
lods
mov
cmp
push
add
call
push
dec
or
in
inc
addr16
mov
push
adc
mov
inc
(bad)
jne
bound
ins
pusha
mov
pop
add
mov
mov
das
stos
or
jge
push
cmps
fwait
dec
or
push
cwde
imul
push
dec
je
daa
(bad)
mov
jne
mov
paddusb
addr16
inc
loope
inc
or
aam
in
mov
aad
and
inc
ror
add
cmp
push
out
mov
aad
fsub
pusha
add
push
in
jno
mov
pop
or
mov
cmp
sbb
sahf
fbld
adc
fld
xchg
(bad)
addr16
jg
sub
das
xchg
xchg
cmps
and
pop
xor
push
pop
add
(bad)
aas
fs
(bad)
fcmove
xor
in
outs
out
and
push
(bad)
stc
jmp
pop
or
push
jmp
movs
cmp
jmp
mov
test
test
arpl
xchg
xor
fwait
xchg
fidivr
pop
je
push
int
xchg
lods
into
aad
scas
addr16
shl
mov
xchg
dec
adc
fistp
bound
rdtsc
mov
dec
bound
xchg
sbb
sar
mov
or
xor
jne
push
cmp
jno
pop
and
bound
inc
or
fistp
nop
lods
cmp
dec
jne
mov
shl
pushf
retf
ret
dec
pop
iret
sbb
push
gs
xor
popf
xchg
out
mov
in
xor
repz
sti
repz
cmp
shl
std
pop
add
dec
xchg
mov
stc
fldenv
call
push
jbe
mov
xor
jno
mov
sbb
mov
push
or
sub
in
push
adc
out
mov
mov
and
retf
push
fs
push
sub
clc
lds
sub
mov
xor
repnz
imul
cmp
cmc
out
icebp
rcl
popf
mov
test
mov
jo
bound
scas
sbb
(bad)
add
scas
xchg
hlt
sti
jb
fnstsw
movs
inc
pop
xchg
arpl
dec
lock
xchg
xchg
mov
cwde
xchg
sub
inc
mul
or
cmp
xchg
sbb
dec
ins
das
xchg
pop
pop
das
pop
cs
cmp
mov
in
cmp
sti
adc
jae
stos
xor
fsubr
es
in
fbstp
add
dec
ds
fwait
outs
or
pop
dec
xchg
xor
pusha
jne
mov
pop
mov
(bad)
jge
shl
or
ja
stc
dec
push
and
int
ins
enter
rol
stos
sub
sub
pop
dec
fs
mov
jle
inc
leave
dec
jge
dec
gs
imul
cmps
icebp
adc
jecxz
ds
mov
xchg
dec
mov
fdivr
mov
pop
imul
cmps
fxch
add
pop
addr16
mov
bound
mov
cmp
(bad)
fisub
add
sbb
mov
ret
mov
pop
std
or
sub
sbb
(bad)
jmp
pop
mov
out
out
mov
xchg
enter
imul
rcr
mov
out
jecxz
xchg
std
pop
adc
outs
ds
push
mov
(bad)
div
xchg
repz
dec
xchg
inc
xchg
and
dec
test
or
scas
add
loope
or
inc
mov
mov
aaa
cwde
sbb
stc
arpl
arpl
mov
test
daa
xchg
test
pop
push
scas
cdq
mov
mov
dec
inc
pushw
lock
or
mov
push
push
rol
ja
(bad)
pop
es
pop
push
pop
fdivr
fidivr
cmp
lods
loope
int3
ds
inc
mov
lds
mov
push
mov
or
sbb
test
mov
out
fucomip
dec
(bad)
dec
(bad)
idiv
xor
ret
jmp
jns
(bad)
xor
jmp
dec
mov
mov
cmp
test
repnz
jmp
pop
xchg
mov
test
push
cld
call
cld
icebp
pushf
clc
imul
push
in
icebp
dec
xchg
pop
add
jns
cmp
sbb
and
push
in
cmp
sbb
dec
into
mov
push
mov
dec
sbb
(bad)
xor
push
mov
les
pop
mov
dec
or
cs
in
add
mov
(bad)
in
add
mov
test
enter
or
sbb
inc
add
shl
int3
xor
sbb
dec
out
ds
fs
dec
cli
popa
mov
sub
sub
jne
pop
fcmovnb
push
mov
sbb
mov
mov
push
ja
dec
int
pushf
out
out
lods
push
sbb
aaa
mov
or
mov
mov
or
xchg
jno
jmp
push
lds
jl
add
dec
xor
xchg
pop
inc
rcl
pop
add
and
jle
lods
xor
jbe
mov
cld
xchg
stos
(bad)
stc
adc
and
and
std
xor
push
jl
and
mov
lds
dec
fist
jecxz
mov
movs
sbb
and
mov
rcr
mov
(bad)
mov
jg
adc
cmp
cmp
loop
mov
repz
iret
cmps
neg
inc
das
in
mov
mov
mov
jo
push
xor
scas
xchg
stos
outs
(bad)
lock
clc
jl
iret
sub
sar
pushf
xchg
mov
lock
loop
adc
mov
fucom
popa
adc
rcr
pop
and
popa
xchg
movs
adc
adc
inc
add
nop
inc
data16
or
jb
xchg
pop
jl
mov
adc
and
out
add
sti
mov
jmp
mov
aam
pushf
clc
jge
aad
aaa
test
test
mov
ret
sbb
adc
bnd
push
icebp
or
pushf
or
cld
adc
xchg
push
outs
fisttp
mov
lds
movups
inc
or
popf
inc
cmp
scas
mov
mov
fdiv
dec
sub
aaa
je
ds
test
and
pop
popa
push
mov
dec
leave
imul
push
cmc
pop
xchg
xchg
cmp
push
stos
add
outs
loop
imul
fs
jo
mov
cdq
mov
cli
mov
adc
sbb
mov
jns
jecxz
call
test
or
jmp
push
inc
jno
aad
pop
pop
movs
add
pop
cmp
retf
daa
sub
cmc
cmp
(bad)
and
and
mov
addr16
rep
not
or
dec
add
sar
ds
sbb
fist
mov
pop
pop
(bad)
je
rcl
cmp
or
add
mov
or
cmp
mov
gs
inc
ds
sub
pop
sbb
sub
mov
lock
jl
enter
std
out
pop
mov
xchg
ins
mov
clc
add
or
sbb
jae
cli
hlt
xchg
add
call
sbb
dec
push
lods
add
xchg
adc
daa
push
xrelease
adc
popf
fstp
fist
mov
js
dec
mov
ret
ins
sub
ins
mov
mov
fiadd
ss
cmc
std
mov
in
sahf
jbe
ds
pop
shl
in
sub
xchg
cmp
inc
sub
push
test
pop
push
(bad)
or
sti
enter
pop
into
ret
jnp
daa
fstp
jp
jecxz
jecxz
pop
or
call
lds
fstp
loope
dec
shr
nop
imul
xchg
js
push
jbe
mov
stc
shr
jno
add
adc
mov
push
inc
or
jp
push
aam
fs
xor
nop
cs
div
pop
jmp
mov
je
pop
enter
xor
repz
push
jecxz
in
int
sar
add
and
push
or
jge
inc
std
aaa
push
das
mov
inc
fist
imul
popf
add
push
mov
jmp
test
ins
add
push
pop
xchg
(bad)
or
bound
xchg
scas
dec
mov
das
mov
pop
dec
mov
dec
sub
pop
(bad)
iret
(bad)
cmc
jo
sub
aaa
test
add
jnp
int3
dec
mov
dec
xchg
enter
fwait
inc
cmp
and
nop
scas
retf
push
mov
mov
sub
pop
push
mov
fmulp
cli
jmp
in
jnp
(bad)
inc
or
fcomip
mov
cmps
xor
imul
inc
ss
push
dec
aaa
sbb
jns
sbb
mov
jns
iret
adc
jmp
xchg
icebp
nop
mov
popa
aaa
imul
fs
ret
or
cmp
or
sub
aad
fnstenv
inc
push
sbb
icebp
mov
mov
sbb
xchg
mov
int3
push
cmp
add
dec
(bad)
cwde
or
adc
xchg
loopne
jae
mov
push
jge
imul
mov
and
pop
jle
in
jge
mov
pop
sub
hlt
test
or
fdiv
xchg
inc
pop
and
fs
add
int3
cmps
and
or
mov
xchg
call
(bad)
adc
lea
test
test
pop
jne
iret
jge
fldenv
fidivr
test
pop
xchg
push
sti
movs
in
dec
mov
or
icebp
dec
push
lahf
in
(bad)
loope
in
sbb
push
add
push
int3
push
test
mov
out
mov
ds
sbb
mul
jmp
es
imul
stos
push
ficom
adc
movs
jae
sub
push
jmp
or
aas
dec
fwait
shr
arpl
es
and
push
lods
xor
and
stos
retf
in
daa
neg
jmp
and
retf
sti
mov
arpl
mov
(bad)
xor
out
sahf
cdq
jecxz
mov
mov
mov
hlt
cmp
lahf
outs
dec
popf
sar
fldenv
popf
xor
nop
int
sbb
sbb
mov
out
cmps
mov
sbb
adc
push
(bad)
in
adc
xchg
xchg
push
pusha
or
mov
or
and
arpl
push
mov
add
shl
shl
or
or
aad
inc
dec
jl
retf
in
mov
xchg
out
pop
dec
inc
aaa
cdq
sub
fild
lahf
sub
xchg
push
mov
mov
inc
fnstcw
ja
xchg
ins
xor
movs
(bad)
xchg
inc
movs
rcr
xor
stc
mov
cmps
clc
fidivr
es
push
mov
loopne
iret
scas
repnz
dec
xchg
adc
jg
ins
adc
pop
sub
cmp
jae
and
popa
mov
xlat
sbb
lods
cmp
out
sub
les
sahf
xchg
cmc
loope
mov
add
and
xor
je
push
jl
xchg
jge
movs
sbb
jle
sbb
ins
mov
mov
test
out
jo
mov
mov
sar
and
daa
mov
push
dec
mov
mov
xlat
dec
push
popa
outs
retf
and
fdiv
outs
xor
jne
bound
ins
fsub
and
pushf
leave
dec
stos
inc
push
out
cdq
mov
clc
(bad)
inc
rcr
mov
jmp
sti
adc
pop
push
inc
and
(bad)
and
pop
ja
and
xor
repnz
aas
inc
mov
sbb
add
cmp
shr
shl
xchg
clc
sbb
push
adc
xchg
xor
pop
in
pop
push
xor
pop
and
jbe
sti
(bad)
dec
adc
in
mov
push
outs
jmp
push
xchg
aam
mov
xchg
sti
fidivr
or
cwde
sub
(bad)
xchg
xchg
shl
mov
fsub
fist
cmps
mov
retf
aad
push
loopne
push
retf
enter
lods
sub
adc
je
aas
cld
fiadd
push
icebp
in
pushf
lahf
dec
inc
inc
loop
out
ins
inc
mov
dec
push
xor
icebp
test
add
pop
push
add
dec
push
pop
and
inc
mov
pop
idiv
xchg
hlt
movs
in
push
enter
sbb
cdq
ins
sub
in
mov
aad
inc
inc
sub
mov
sbb
test
movs
jo
leave
stos
mov
out
pop
cli
dec
push
ja
cld
mov
xor
dec
mov
aam
enter
in
push
aaa
push
push
mov
mov
push
jbe
call
pop
out
dec
fldpi
cmp
cmps
push
and
icebp
push
icebp
daa
nop
xchg
or
stc
in
clc
inc
lods
pushf
hlt
fcmovne
call
daa
mov
mov
mov
xchg
mov
mov
in
leave
jne
add
push
push
(bad)
daa
pop
sub
jne
dec
mov
jecxz
fistp
fisttp
test
fimul
and
pushf
(bad)
cwde
xchg
push
add
lahf
iret
test
fsubr
jmp
push
push
jb
mov
push
or
cli
inc
pop
lods
fisub
shl
cs
add
ficom
sub
jmp
idiv
(bad)
call
bound
xchg
inc
aam
into
ds
xchg
jmp
and
pop
pop
les
stos
pop
cmp
je
adc
lock
test
sti
inc
cmps
mov
ds
sbb
daa
test
pop
aaa
int3
push
inc
gs
or
in
mov
mov
push
xchg
mov
outs
aaa
jl
xor
dec
xchg
arpl
jae
cmp
fisub
xchg
xchg
(bad)
imul
mov
stc
lea
scas
sbb
les
(bad)
jo
in
test
mov
js
pop
and
xor
xchg
sub
jo
xlat
push
js
jecxz
dec
shl
xchg
fs
cmp
lea
mov
mov
daa
xchg
xchg
dec
add
sub
in
lds
adc
ret
leave
jbe
jmp
mov
(bad)
xchg
xchg
xor
push
loop
adc
popf
push
mov
sub
movs
cmp
push
xor
inc
(bad)
mov
pop
mov
test
fcomip
add
add
or
sahf
je
pop
push
add
call
lods
cmp
in
mov
popa
push
fadd
sbb
shr
out
lock
mov
imul
call
rcl
cld
add
adc
scas
lahf
lea
loopne
(bad)
loope
inc
adc
sbb
jecxz
lock
cmp
inc
sbb
dec
jnp
int
inc
mov
js
fnstsw
dec
jno
jnp
push
rcr
jg
xchg
fwait
popf
(bad)
hlt
test
pop
gs
cli
or
push
pop
push
add
retf
das
xchg
repz
aas
shl
mov
lds
adc
jne
xchg
jbe
in
in
int
adc
inc
(bad)
sub
xchg
imul
fdiv
pop
gs
mov
mov
jge
in
pop
push
push
jne
cmps
mov
test
int
cdq
xchg
cli
dec
inc
shl
idiv
les
in
out
ror
cdq
jmp
ja
mov
xchg
shl
cwde
aaa
adc
into
stc
jns
push
xor
dec
test
pop
inc
fild
fadd
rol
xchg
arpl
adc
stc
pop
jecxz
mov
or
into
in
popa
lods
retf
pop
xchg
adc
push
cmp
mov
(bad)
retf
xor
sti
in
jl
sbb
shl
jne
and
dec
(bad)
sub
sbb
mov
(bad)
xchg
pushf
test
call
dec
popa
pushf
daa
ror
cli
lods
jp
sub
sbb
jecxz
retf
jne
shl
xchg
pop
push
jmp
ins
aas
push
xchg
xchg
xchg
or
push
xlat
pop
cdq
inc
icebp
push
sub
(bad)
jg
ins
mov
xor
and
loop
repz
add
clc
scas
ins
bound
cwde
ret
mov
repz
add
pop
inc
jbe
ret
jl
ss
imul
mov
mov
in
inc
addr16
mov
push
add
clc
cmp
dec
xchg
(bad)
fidivr
out
(bad)
mov
pop
(bad)
(bad)
aam
repz
xchg
and
out
fld
ds
cmp
cmps
xchg
jmp
in
(bad)
adc
push
or
aad
mov
mov
mov
cmp
lds
cmp
and
mov
adc
xchg
jp
sub
out
das
jns
xor
mov
ror
stos
iret
in
adc
xor
jmp
and
test
pop
ins
and
loope
xchg
inc
es
push
fxch
push
test
pop
dec
mov
xchg
pop
hlt
inc
mov
out
and
add
gs
inc
aad
sbb
jnp
sub
push
jno
dec
dec
mov
int
and
clc
cld
aam
mov
sub
or
rol
(bad)
sub
jp
aam
test
in
and
add
imul
je
jnp
and
cmp
aam
in
cmc
cmp
pop
imul
retf
test
and
(bad)
bound
clc
adc
sbb
pop
cmp
mov
shl
xor
xchg
into
bts
adc
test
dec
popa
cmps
out
movs
scas
cld
cmp
mov
mov
inc
push
xor
add
shl
jb
sbb
js
sub
in
cmp
es
popa
imul
xlat
int
mov
shl
les
mov
fnstcw
out
xor
or
inc
sysexit
repz
retf
jmp
aaa
jo
repnz
mov
add
mov
mov
dec
cs
popf
in
fmul
and
inc
xchg
cmp
cmps
xchg
fs
out
xor
jne
daa
test
les
mov
movs
sbb
dec
fs
mov
and
jae
pop
out
outs
inc
inc
lea
mov
mov
or
daa
retf
mov
fild
aam
pop
test
movd
out
mov
std
dec
inc
test
push
imul
pop
ins
retf
ins
ins
bound
xlat
(bad)
retf
movs
movs
fdiv
dec
mov
out
enter
int3
push
test
std
out
shr
add
cld
lods
xchg
inc
scas
xchg
jecxz
dec
fnstcw
dec
pop
mov
cmc
shl
and
sub
xchg
daa
in
icebp
stc
add
fld
adc
dec
mov
xor
outs
shl
jp
inc
jmp
jae
adc
cmp
dec
out
pusha
(bad)
mov
in
add
pop
mov
out
lods
aas
sbb
bound
mov
mov
mov
cmc
cdq
movs
mov
pop
out
arpl
(bad)
(bad)
cmps
sahf
imul
sahf
aad
fld
push
mov
mov
pop
cmp
iret
loope
xchg
adc
repz
ror
xchg
(bad)
mov
inc
pop
in
out
sub
or
add
pop
inc
pop
add
sbb
push
and
(bad)
inc
outs
imul
and
push
movs
das
xor
and
int3
mov
fistp
test
movaps
repnz
inc
mov
pop
fadd
mov
(bad)
dec
out
add
pop
std
xchg
sub
push
or
imul
test
xor
fistp
gs
mov
mov
dec
call
inc
jbe
fcomp
inc
loop
sub
adc
mov
pop
dec
fcom
stos
or
adc
mov
mov
fsubr
aaa
in
fmul
lea
aam
push
jg
jae
cdq
mov
push
push
xchg
sub
push
mov
loop
xlat
jle
lods
imul
sti
in
sub
(bad)
bound
test
or
sahf
imul
or
fdiv
ja
jmp
(bad)
push
repz
dec
dec
xchg
sti
(bad)
imul
das
daa
xchg
loopne
inc
cld
cmp
repnz
adc
push
imul
shl
into
inc
push
retf
xchg
rol
(bad)
in
cmp
sbb
pushf
xchg
push
dec
sbb
adc
sbb
in
call
mov
fcompp
cmps
sub
lods
mov
push
iret
adc
inc
sub
imul
adc
movs
mov
mov
out
mov
ins
push
jnp
pop
retf
xor
iret
leave
outs
add
or
fldcw
mov
out
rcr
xchg
sub
lock
jmp
xchg
shr
mov
jmp
pop
jecxz
enter
mov
sbb
xor
mov
inc
(bad)
stc
sub
dec
cmc
aam
bound
sbb
xchg
repnz
test
cmp
div
fs
cmc
stos
inc
in
int3
cmp
push
mov
outs
(bad)
cs
loope
cmp
jge
in
call
pop
xchg
push
xchg
adc
shl
push
sbb
xor
pop
and
into
jno
mov
push
outs
out
jae
ds
cdq
dec
or
mov
loopne
push
push
inc
iret
sub
mov
mov
push
xchg
jecxz
xlat
shr
xchg
loop
jo
adc
(bad)
(bad)
mov
mov
dec
or
jbe
(bad)
and
mov
cli
icebp
pop
xor
xor
loopne
pushf
xor
cs
sbb
enter
pop
int
jg
imul
cmps
cli
push
push
and
sub
leave
aas
inc
cdq
and
gs
mov
mov
push
retf
pop
(bad)
outs
lods
mul
fs
mov
aaa
movs
ins
add
jp
mov
sub
inc
jae
and
mov
mov
jae
lea
fsub
pusha
stc
xlat
mov
test
jo
fnstcw
push
je
lea
mov
lods
les
outs
push
cmps
call
daa
adc
inc
ds
jmp
pop
out
nop
je
pop
or
aaa
jecxz
(bad)
fidiv
pushf
mov
(bad)
cmp
popf
out
stos
aaa
repz
and
mov
pop
lea
cmps
pop
pop
cmps
popa
mov
cmp
and
push
std
jmp
lea
cmps
inc
adc
push
sbb
int
and
mov
fidiv
cmps
loop
sub
lods
(bad)
add
xchg
jno
(bad)
scas
mov
scas
loop
xlat
loopne
ficom
lods
test
dec
ret
aad
lahf
rcl
loop
mov
pop
jnp
dec
scas
push
data16
repz
adc
icebp
push
mov
sar
(bad)
mov
inc
mov
push
xor
pop
stos
cmp
sbb
push
dec
out
cmp
iret
scas
in
add
fdivp
add
fsubr
sub
ror
nop
jne
dec
stos
pop
push
mov
sbb
push
(bad)
imul
test
xchg
repz
mov
sub
(bad)
pop
test
outs
add
pop
pushf
xchg
jb
sub
iret
adc
and
out
or
dec
mov
cmp
mov
and
adc
jge
mov
jb
popa
xor
arpl
mov
cmps
dec
push
inc
sub
dec
sahf
jae
std
fisttp
jl
cmp
adc
mov
popf
inc
(bad)
loope
cmp
movs
loopne
pop
mov
xor
int3
cwde
push
jnp
aad
jge
sahf
mov
daa
out
ds
xor
test
cmp
inc
xchg
or
or
test
xor
jmp
in
aam
inc
push
add
test
or
outs
push
sub
pop
(bad)
call
ret
and
cli
mov
xchg
mov
rol
(bad)
shl
add
js
jmp
retf
(bad)
inc
xchg
or
aam
xor
loope
sbb
shl
pop
rol
mov
inc
outs
lock
dec
sbb
cmps
shl
pop
fisub
hlt
scas
jl
jnp
in
shr
cs
retf
mov
sub
call
test
sub
stos
dec
pop
(bad)
push
je
and
xchg
dec
dec
dec
pop
push
fsub
mov
pop
or
xor
xrelease
jecxz
cmp
repz
jo
dec
aas
jne
mov
inc
or
nop
int
jae
cmp
sbb
jo
cwde
rcr
xlat
repnz
mov
jge
mov
mov
xor
retf
add
and
in
push
rcl
(bad)
retf
imul
lahf
mov
test
cmp
ret
je
div
sub
adc
aaa
adc
pop
pusha
aas
adc
mov
(bad)
(bad)
idiv
pop
in
and
out
sub
out
cmp
push
sub
aas
std
and
adc
popf
xor
jbe
push
push
jns
lods
jle
push
scas
dec
cwde
je
mov
stc
pop
dec
stos
stc
jno
lahf
aas
loop
dec
adc
shl
sub
cmps
cmp
stc
and
ja
(bad)
test
pop
jno
dec
arpl
inc
je
cmp
popf
in
cmc
mov
ficom
mov
push
add
ret
jp
cli
call
cbw
inc
outs
pushf
pop
adc
or
ret
je
cwde
sub
push
outs
outs
jp
jno
iret
retf
loope
xchg
(bad)
jbe
fnstsw
push
stc
mov
adc
jmp
dec
jne
dec
sbb
mov
dec
push
fimul
lds
jmp
(bad)
imul
scas
(bad)
sbb
shl
sar
fwait
out
dec
gs
ss
xor
leave
jecxz
add
sub
push
stc
or
dec
out
sub
cmp
aas
mov
adc
aas
sub
pushf
int
scas
fild
sub
jmp
cmp
scas
leave
mov
cs
sbb
(bad)
sub
mov
mov
aam
sub
pop
mov
rcl
and
mov
jne
ins
push
es
mov
je
adc
jl
fimul
pop
cmp
stos
paddd
dec
retf
arpl
adc
dec
mov
call
scas
repnz
inc
push
xlat
fidivr
jge
push
add
cmps
(bad)
cmp
repnz
sti
ds
call
out
jbe
aam
fmul
in
xchg
sahf
xchg
scas
xchg
dec
xchg
mul
test
jmp
int3
lods
add
sbb
into
out
push
imul
inc
push
sbb
movs
pop
push
popf
cmp
sub
cmp
adc
lods
mov
lods
dec
ror
cmps
xor
pop
test
sub
add
xchg
jl
clc
mov
aaa
enter
push
push
xlat
xchg
inc
cli
popf
loope
test
xchg
ins
sub
mov
mov
mov
jmp
push
sub
popf
push
cld
(bad)
jecxz
jl
call
or
push
dec
pop
cmp
mov
and
mov
dec
int3
jmp
les
or
leave
scas
imul
out
(bad)
in
and
add
xchg
(bad)
loopne
sub
imul
pop
les
cmp
cmp
out
ds
mov
sbb
fsubr
xchg
test
sub
inc
stc
aaa
push
stos
in
mov
shl
xor
xchg
adc
rcl
fst
ins
test
or
jnp
mov
or
sbb
cs
rcl
jno
rcr
push
(bad)
or
arpl
cmp
sbb
mov
int
adc
cmc
sbb
or
scas
inc
dec
cmps
jp
mov
cmp
fisttp
jl
retf
mov
sub
lods
out
mov
sub
push
add
xchg
sbb
mov
sahf
jl
sbb
ja
or
and
dec
in
mov
in
sbb
push
pop
(bad)
out
mov
gs
mov
push
les
je
cmps
dec
jae
jbe
fimul
xchg
(bad)
jbe
fsub
ds
add
and
pop
nop
pop
cmp
mov
xchg
out
mov
imul
xor
sbb
pop
dec
pop
in
xlat
cmp
or
jle
sub
or
xlat
std
jnp
sahf
gs
jmp
hlt
test
dec
dec
(bad)
je
fisub
add
scas
sub
mov
dec
adc
stos
out
push
into
cmp
sbb
lahf
adc
cmp
test
scas
mov
push
cs
xor
ja
fdivr
mov
jne
adc
ror
lds
inc
imul
(bad)
jnp
into
and
inc
(bad)
sub
(bad)
idiv
jb
or
cmps
mov
sub
lahf
mov
mov
cmp
jle
enter
lods
pop
gs
jb
mov
push
stos
test
mov
(bad)
jne
cmp
jge
lods
sub
(bad)
jo
xchg
adc
pop
xchg
out
jnp
loopne
sbb
arpl
cmp
pop
add
data16
mov
fistp
pop
or
(bad)
add
xchg
cmp
cmp
mov
pop
dec
pop
adc
(bad)
push
fist
push
test
fstp
mov
cmp
lods
repz
mov
loope
fidiv
pop
pop
mov
inc
jle
lock
addr16
sti
jmp
enter
fdivr
adc
sub
xor
inc
sbb
call
scas
inc
cmp
pop
sub
retf
nop
mov
aad
pop
xchg
sbb
mov
or
outs
cs
inc
das
dec
dec
clc
jne
stos
ja
xchg
out
cmp
and
out
ja
push
popf
enter
adc
sbb
push
out
scas
test
jo
cmc
fwait
mov
and
or
cmp
mov
xchg
mov
je
iret
outs
mov
push
or
stos
add
(bad)
or
fist
push
shl
adc
pop
enter
test
and
mov
push
retf
adc
mov
ins
cwde
xor
inc
ja
retf
icebp
mov
(bad)
call
cdq
pop
cmp
sbb
jnp
fs
cmp
sub
scas
stos
popf
lahf
outs
in
popf
iret
mov
mov
mov
ins
scas
jecxz
fisubr
inc
fs
mov
xor
icebp
dec
mov
fisttp
dec
xlat
jecxz
add
or
icebp
dec
shl
or
adc
add
jmp
sub
mov
cmp
sar
sub
cmp
sbb
pop
loope
sub
lods
inc
mov
mov
(bad)
and
into
jb
push
sbb
and
outs
ins
add
jecxz
pusha
xor
xor
lods
mov
push
dec
fbstp
std
jge
int
mov
cmps
daa
test
jl
pop
mov
jle
pop
cmp
sar
loopne
gs
xlat
rcl
cli
or
mov
xor
clc
push
std
adc
retf
xchg
push
in
movs
dec
adc
add
mov
mov
pusha
scas
out
movs
xchg
adc
add
sbb
adc
xchg
inc
mov
inc
cwde
xor
retf
stos
xor
rcl
pushf
clc
in
(bad)
xchg
mov
xchg
mov
sub
ror
stos
inc
sub
and
hlt
lea
(bad)
pop
shl
sub
ss
test
sub
add
movs
fidiv
jp
mov
mov
lods
mov
jo
and
shr
test
pop
sub
leave
cmc
inc
movs
xor
loopne
inc
jge
loope
fcomi
(bad)
es
push
push
lea
mov
outs
push
inc
jmp
cmp
stos
inc
xchg
(bad)
sbb
push
push
shr
je
mov
jg
std
inc
in
addr16
ror
cs
aaa
sbb
arpl
outs
inc
cmps
adc
inc
ins
or
adc
fdiv
cmps
sub
push
cdq
cmps
ror
xlat
imul
sub
push
nop
fcomp
push
hlt
push
retf
or
or
or
dec
mov
mov
mov
out
inc
mov
jnp
and
dec
adc
adc
loop
loop
adc
jmp
aaa
stc
mov
cwde
dec
repnz
cmp
sti
addr16
leave
jmp
in
adc
pop
push
push
dec
xchg
and
inc
in
int3
stos
jae
dec
mov
fcom
add
rol
fisttp
call
sbb
pop
jo
add
popa
addr16
mov
out
jb
popa
dec
push
mov
push
ins
mov
add
push
test
adc
xor
jae
in
ds
jno
aas
mov
mov
push
and
sub
ret
jge
call
lods
and
pop
xchg
xchg
int
sub
ja
xor
xlat
push
jmp
xor
dec
push
das
aaa
scas
lock
push
fwait
jp
mov
(bad)
stc
cs
nop
int
gs
dec
mov
lock
cli
movs
xor
mov
mov
xor
add
ret
sar
imul
sbb
ja
jo
movs
nop
leave
cmp
sbb
test
inc
push
add
sbb
mov
mov
sub
arpl
mov
in
xchg
and
jmp
pushf
xor
imul
mov
ins
div
fistp
or
adc
mov
push
test
shr
jnp
and
leave
mov
leave
sbb
xor
adc
leave
ret
cmp
and
pusha
repnz
pop
inc
mov
mov
mov
adc
retf
std
sub
jmp
add
(bad)
int
out
and
mov
fnstcw
jmp
data16
pop
iret
pop
arpl
int
jp
shl
pop
outs
out
and
pop
outs
adc
shr
mov
fstp
sahf
fldcw
(bad)
cld
shl
arpl
mov
cmp
fstp
imul
test
notrack
inc
xlat
loopne
loopne
sub
icebp
jmp
xchg
das
fs
mov
rcr
popf
aas
shl
cmc
ret
push
imul
rcr
in
imul
jnp
push
xchg
mov
enter
or
dec
dec
inc
mov
sub
sbb
sub
xchg
sbb
nop
or
sbb
add
out
ins
sbb
push
cmp
pop
(bad)
cmps
(bad)
into
xchg
iret
cmp
cld
sbb
rol
jno
lock
sub
xor
test
adc
adc
(bad)
(bad)
in
fld
sub
dec
mov
add
inc
int3
sbb
mov
ret
cwde
xor
mov
mov
nop
out
sub
add
dec
data16
jbe
lods
mov
xor
vpor
dec
(bad)
fidiv
rol
xchg
jbe
cld
cmp
jno
(bad)
out
pop
add
sub
fmul
out
dec
add
push
mov
aam
jecxz
cmps
push
or
mov
pop
inc
into
in
loope
(bad)
enter
or
push
mov
push
jno
bound
xchg
je
xor
retf
dec
dec
loopne
xor
sub
mov
xor
aam
mov
jmp
stc
out
imul
pop
sbb
fcomp
sub
jg
mov
aam
push
int
add
ja
dec
iret
pop
sti
xor
shl
movs
mov
cmps
pop
fist
or
rcl
xchg
jg
movs
adc
adc
sbb
sahf
fwait
jg
mov
adc
test
xchg
adc
jae
jg
repz
and
aas
je
push
push
sbb
jecxz
mov
xor
dec
xor
idiv
outs
jmp
mov
(bad)
sbb
cmp
int3
loope
cmc
loop
dec
jae
xchg
ret
push
and
add
in
cli
(bad)
fs
lods
idiv
scas
iret
scas
mov
sbb
sahf
in
(bad)
adc
adc
xchg
loopne
inc
mov
push
add
inc
pop
test
lock
popf
out
lahf
push
js
test
ins
mov
sub
jg
call
adc
inc
push
xchg
nop
push
jg
mov
xor
add
push
rol
mov
xchg
mov
xor
jl
and
ins
icebp
pop
scas
stos
adc
and
adc
or
outs
push
fsubr
xor
jecxz
jmp
icebp
inc
cdq
retf
xchg
sub
pop
movs
pop
xchg
adc
inc
xor
aas
inc
out
les
inc
arpl
push
mov
(bad)
xchg
lock
call
sbb
lahf
add
imul
inc
aas
push
mov
test
add
cmc
push
jns
mov
pop
push
adc
in
inc
dec
cld
test
popa
pop
in
in
sub
pop
ret
and
fidiv
and
sub
mov
or
int
dec
mov
adc
jmp
inc
adc
dec
or
inc
imul
dec
gs
sub
jl
push
enter
jno
sub
cmps
xchg
xchg
adc
aad
test
movs
jmp
lods
cmps
xor
ins
std
push
sbb
mov
add
push
push
add
dec
scas
sahf
(bad)
cmp
sbb
sbb
fs
mov
lahf
mov
movs
ins
call
add
imul
lds
and
mov
fwait
sbb
sub
sbb
mov
jmp
dec
cmps
or
jbe
out
inc
imul
xchg
popf
stc
(bad)
icebp
sbb
jle
xor
cld
adc
cmp
inc
int3
add
mov
mov
fsubr
dec
dec
jbe
xchg
fisttp
popf
pop
mov
mov
xor
mov
cmp
sbb
jb
add
inc
mov
add
mov
mov
js
mov
dec
push
dec
les
add
fild
mov
inc
cmp
or
xlat
cmp
sti
fdiv
mov
stos
aam
mov
mov
mov
stc
repnz
mov
inc
jecxz
fs
mov
xchg
(bad)
(bad)
aam
dec
and
dec
test
mov
sbb
pop
sbb
push
cmp
sar
pop
sub
jnp
cdq
adc
inc
rcr
call
push
or
test
cld
es
adc
sar
loope
cmp
mov
(bad)
push
or
inc
sahf
fcom
sbb
data16
out
dec
cwde
sub
ins
and
push
(bad)
fldcw
adc
hlt
xor
jo
rol
sbb
sub
ficomp
jnp
test
push
stc
sub
sub
or
xchg
not
sbb
xchg
jge
cdq
test
(bad)
inc
loop
retf
jo
out
dec
lds
cmps
out
iret
xlat
pop
iret
sbb
pop
gs
cmp
sti
pop
adc
add
call
sub
icebp
inc
outs
add
adc
xor
and
lahf
into
and
cmp
movs
mov
fsub
ret
or
add
or
xchg
outs
ror
xchg
data16
push
adc
jmp
cld
mov
sub
push
sbb
ja
pop
cwde
and
push
sbb
cld
jbe
adc
push
adc
inc
out
push
inc
shr
xor
push
hlt
dec
retf
sub
aaa
xor
xor
sahf
repz
adc
xor
imul
add
sahf
push
adc
out
add
inc
out
fdivr
lods
in
jmp
inc
out
add
cmps
les
in
(bad)
jnp
push
mov
(bad)
mul
outs
leave
test
jl
inc
and
adc
dec
std
mov
bndldx
out
cdq
pop
jmp
aaa
mov
sbb
mov
fisubr
std
mov
inc
xchg
(bad)
jmp
xor
inc
mov
dec
jecxz
push
sti
(bad)
jae
gs
cmp
jmp
idiv
push
movs
scas
adc
fldenv
adc
popf
mov
dec
ja
inc
mov
sbb
sbb
or
pop
pop
push
add
ret
jno
pusha
and
fdiv
or
mov
xchg
pop
xchg
pop
ins
mov
mov
pop
repz
retf
aaa
pop
stos
or
loopne
sbb
or
enter
call
sub
retw
loop
sahf
loopne
imul
out
ja
and
cdq
call
jp
push
cli
clc
adc
cmc
push
es
repz
int
fistp
imul
sub
pop
dec
mov
xchg
push
fadd
fcomp
cmp
loope
call
retf
add
(bad)
sbb
push
mov
mov
gs
cmp
and
jbe
in
aam
xor
popf
cmps
movs
pop
jecxz
mov
shr
out
dec
or
or
cmps
es
mov
or
out
push
imul
inc
(bad)
cmp
div
pop
mov
retf
mov
and
punpckhwd
jp
(bad)
adc
inc
cld
cmp
push
pop
fsubr
rcl
dec
mov
(bad)
loop
adc
jl
rcl
stc
imul
pop
js
mov
xor
fldenv
sbb
cmps
jle
mov
mov
(bad)
pushf
(bad)
adc
in
xchg
not
add
call
outs
pop
mov
pop
bnd
xchg
pop
clc
or
inc
mov
fldcw
test
sub
xor
pusha
jae
pop
or
lods
add
scas
mov
in
push
lea
retf
pop
test
and
aad
and
cwde
adc
test
dec
push
xchg
cmp
pop
push
dec
or
lahf
jp
es
fbstp
mov
xchg
jno
jo
add
movs
outs
jmp
imul
and
dec
xchg
mov
mov
dec
mov
in
cmp
dec
sbb
fmul
jecxz
mov
mov
cmp
es
mov
popf
cmc
sbb
adc
cmp
adc
repnz
push
mov
test
cmps
rol
stos
mov
pop
rol
xor
scas
dec
push
into
push
sbb
iret
scas
pop
inc
sbb
sti
dec
mov
fnstenv
jb
xchg
in
push
push
data16
xchg
nop
ja
test
mov
mov
mov
cwde
cmp
inc
mov
outs
ja
fistp
pusha
push
and
test
push
sub
jl
lds
aam
jl
mov
out
imul
and
push
std
mov
ins
aam
xlat
cs
cmp
cmp
pop
(bad)
ret
pop
fadd
push
sub
lds
cmp
je
or
or
ds
cmp
cmps
mov
pop
mov
adc
jae
push
dec
push
push
fs
cmps
adc
push
outs
ss
inc
fs
lds
push
pushf
fwait
and
aam
xchg
cmp
mov
test
ss
daa
dec
arpl
inc
ret
icebp
lea
retf
sbb
jle
inc
push
(bad)
pop
push
stc
xchg
call
rol
test
pop
adc
test
inc
mov
mov
out
(bad)
cli
pop
scas
push
adc
dec
ds
jp
(bad)
push
sub
iret
movs
jmp
out
fld
ds
or
and
cmps
add
aad
lahf
xor
cwde
jae
in
mov
clc
les
pop
xchg
stos
mov
or
(bad)
cmp
xor
cmp
cdq
daa
jns
test
iret
test
jmp
and
dec
jne
or
gs
(bad)
in
pop
scas
inc
mov
jge
push
cmp
iret
pop
push
adc
add
sti
dec
xchg
inc
(bad)
lahf
and
gs
fstp
jge
leave
add
pop
xchg
cmp
jmp
sbb
or
mov
ret
std
test
push
cld
xor
jno
sub
shl
mov
jge
jne
cwde
sub
lods
add
lds
call
mov
inc
push
pushf
cmp
sbb
push
les
mov
xchg
dec
adc
sub
pop
jno
popa
addr16
jno
rcr
jecxz
and
mov
pusha
inc
xor
xchg
adc
and
movs
ror
mov
loope
mov
jp
in
mov
int3
mov
cmp
lods
scas
jns
cmp
das
xor
pop
aam
pop
aaa
xchg
push
mov
dec
add
jno
imul
fld
add
sti
std
push
adc
or
mov
iret
xor
inc
cmps
sbb
stos
sbb
and
xor
jecxz
add
cli
sbb
xchg
mov
or
aaa
cmp
ja
mov
dec
dec
inc
xchg
jbe
inc
loop
pushf
in
or
cmp
pop
jecxz
loopne
sub
outs
pop
pop
jb
int
adc
aaa
or
cdq
push
jnp
repnz
adc
cmps
xor
add
lods
imul
or
out
adc
jno
in
xor
jbe
test
sti
shr
aaa
(bad)
pop
cmc
test
xor
cli
adc
xchg
test
dec
ror
js
mov
es
add
sar
add
enter
push
jbe
inc
pop
jp
cli
aad
fidiv
dec
pop
or
xchg
lea
out
mov
and
push
sti
dec
cdq
out
sub
dec
jp
inc
ror
sbb
lahf
xor
pushf
rcr
cmp
sub
push
je
movs
pusha
daa
imul
fistp
in
jmp
xor
(bad)
cmp
div
nop
in
sbb
inc
ins
test
mov
sahf
jp
out
inc
sbb
mov
into
adc
cmc
enter
inc
sbb
sbb
(bad)
cmp
cmp
dec
lds
sub
retf
and
sub
adc
sbb
hlt
test
xchg
clc
ret
xchg
dec
inc
adc
mov
icebp
add
sub
sub
stos
enter
dec
gs
sbb
movs
loope
push
pushf
and
adc
inc
fisttp
rcl
pop
hlt
adc
stc
inc
xor
bound
pop
jge
(bad)
mov
test
add
jmp
add
push
mov
xor
call
fwait
dec
test
retf
inc
pusha
cwde
lods
or
jmp
lock
loop
or
pusha
neg
sbb
int
sti
fs
sbb
jo
push
mov
pop
push
retf
into
mov
(bad)
push
xchg
ins
cmp
push
mov
and
jae
xor
fnsave
cmp
(bad)
in
and
cmp
into
add
or
dec
mov
jle
xchg
mov
js
pop
sub
cmp
movs
mov
lea
add
xchg
cmps
inc
push
test
dec
or
sbb
push
push
(bad)
push
pop
arpl
push
pop
jge
in
sbb
jl
je
aaa
in
sub
mov
adc
fcmove
test
inc
push
loop
mov
xor
sub
loop
mov
jae
adc
pop
dec
test
cmp
out
xor
and
cmp
jno
sahf
repz
ror
stc
sub
enter
jp
aam
int3
nop
sub
push
push
mov
je
hlt
lods
in
aad
loopne
sub
xlat
popf
sbb
mov
lock
(bad)
mov
cmp
cld
out
pop
mov
xor
shl
lds
leave
xlat
xor
inc
popa
pop
psubq
inc
or
sub
cld
lods
adc
fimul
push
or
jmp
inc
imul
in
leave
inc
out
js
cmp
cmp
xor
jg
je
xor
icebp
xchg
nop
cwde
cmc
enter
int3
(bad)
in
inc
adc
pop
add
(bad)
push
jp
je
arpl
or
js
jnp
xor
push
std
jp
pop
repz
xchg
popa
shl
xor
sub
cli
mov
pushf
xchg
and
dec
mov
fmulp
push
out
stos
mov
aam
push
stc
mov
call
jo
jno
in
add
aam
mov
pushf
jp
jnp
shr
loope
call
adc
add
and
cmp
dec
in
scas
rol
(bad)
mov
mov
mov
cmps
inc
lahf
pusha
and
push
mov
jge
and
hlt
add
frstor
daa
adc
fcmove
xchg
or
xchg
icebp
jge
add
das
in
jecxz
pusha
sar
es
fist
xlat
enter
cmp
test
stos
das
test
popf
push
mov
mov
lock
adc
shl
jle
mov
sub
cdq
popa
push
push
rol
loop
or
(bad)
mov
pop
mov
cmp
pusha
retf
mov
fldenv
add
jg
dec
(bad)
adc
bound
push
and
clc
out
inc
test
in
pushf
in
div
neg
repz
jno
sbb
adc
and
xchg
nop
outs
sub
and
(bad)
dec
jns
mov
inc
hlt
add
dec
mov
ins
mov
outs
cmp
jmp
xor
fs
push
xchg
and
rcr
sbb
call
lahf
hlt
(bad)
lahf
and
ss
div
xchg
scas
or
sub
mov
rcr
push
inc
das
cmp
loop
mov
lods
pop
out
mov
push
cmps
pop
ret
push
aaa
les
test
test
jmp
xchg
leave
stos
adc
out
int3
jns
sbb
loop
popf
imul
adc
mov
mov
aad
(bad)
into
inc
mov
es
jle
stos
mov
mov
xor
hlt
fdivr
inc
nop
mov
mov
sub
mov
sbb
test
aam
jl
nop
pop
sbb
pop
mov
pop
jo
movs
pop
jae
out
inc
call
in
xor
ja
and
fisttp
or
adc
and
arpl
pop
test
xchg
sbb
aas
bound
adc
test
dec
jo
mov
inc
mov
push
pop
jge
movs
nop
xchg
or
xchg
ror
xchg
mov
xchg
(bad)
fbstp
cdq
loope
fld
pop
jmp
cmp
loopne
aas
and
outs
inc
rcr
push
mov
loop
pusha
fbld
outs
add
sahf
and
jle
xchg
sahf
add
inc
add
xchg
out
xchg
fiadd
out
push
adc
dec
leave
leave
enter
jbe
xchg
cmp
arpl
cmove
loopne
sbb
cwde
pop
sub
add
jnp
out
scas
inc
jle
mov
and
add
mov
rol
xor
dec
push
(bad)
mov
clc
arpl
mov
mov
cmp
pop
arpl
iret
dec
popf
inc
(bad)
pop
fs
mov
sub
jg
jg
test
out
lahf
lea
leave
or
pop
repz
stc
cmp
cmp
cmc
fistp
xchg
mov
sub
pop
mov
out
inc
sbb
fistp
ret
lahf
movs
mov
inc
sub
inc
iret
jecxz
cmp
sub
(bad)
mul
call
fstp
jae
arpl
jae
mov
xchg
sbb
inc
sar
mov
vpmovsxwq
mov
xor
jo
ret
and
xor
cdq
stos
(bad)
stc
mov
push
xchg
lds
out
std
sar
mov
mov
mov
setb
inc
mov
not
sbb
mov
stc
jmp
sbb
jge
cmps
je
call
or
dec
mov
ret
pop
outs
int
sub
sub
sub
xor
jle
fmul
jo
call
mov
cmp
sbb
mov
dec
cmps
(bad)
out
pop
add
ret
dec
sbb
push
xchg
fstp
ret
add
stos
mov
inc
dec
and
add
mov
dec
int
xchg
add
pop
jmp
iret
scas
and
test
ret
mov
cs
repnz
pop
xlat
mov
mov
mov
out
cmp
arpl
and
rcr
dec
imul
pop
outs
stc
push
mov
sub
mov
xlat
mov
jge
aaa
jb
jbe
push
pop
mov
mov
mov
fdiv
push
mov
pop
fxch
cmp
retf
mov
(bad)
mov
xor
out
cmp
outs
imul
xchg
jns
add
mov
cmp
sub
cmps
test
js
sub
cmc
jg
arpl
ja
mov
push
pop
mov
addr16
movs
mov
jmp
dec
icebp
nop
sbb
in
popf
dec
cmps
push
and
sbb
push
fistp
mov
xchg
in
shl
jne
retf
and
int3
and
in
xchg
js
addr16
std
out
sub
dec
fcom
mov
lods
push
and
or
retf
nop
stos
addr16
sub
enter
cmp
jbe
cmp
add
mov
sbb
mov
aas
(bad)
push
stc
inc
imul
dec
cmp
ss
mov
addr16
push
add
(bad)
test
and
push
in
sbb
popa
out
test
add
push
jnp
sbb
call
mov
pop
sub
sbb
retf
adc
cmp
push
or
push
fwait
cmp
jp
test
jb
add
cmp
outs
sub
nop
sbb
ret
sub
or
or
jmp
jge
lds
dec
outs
mov
mov
cmp
mov
call
mov
out
sahf
movs
dec
mov
mov
and
push
imul
ficom
mov
xchg
cmps
(bad)
push
jg
test
fild
and
out
adc
clc
xor
xor
daa
(bad)
aaa
in
in
out
dec
and
or
sub
stos
sbb
frstor
out
popf
sahf
cmp
adc
mov
mov
hlt
(bad)
sbb
xlat
sar
jl
cld
inc
jb
add
shr
ss
scas
std
sub
stos
jp
add
xchg
mov
cmp
fmul
fdivp
add
cli
push
mov
jns
cmps
sub
shl
es
imul
out
je
fldcw
stos
push
adc
and
into
cwde
ins
jo
loope
lock
pop
sbb
or
inc
out
or
mov
push
(bad)
cmp
push
out
popf
and
mov
(bad)
stc
inc
int
xor
or
ret
fidivr
pop
jge
add
in
test
or
es
or
enter
sar
mov
stos
mov
pop
mov
test
dec
sub
mov
inc
xchg
mov
test
aam
jnp
icebp
lock
cmps
mov
aam
push
movs
jae
outs
push
sub
(bad)
call
data16
adc
or
jnp
mov
push
in
adc
xchg
sub
jae
gs
icebp
mov
imul
in
fcom
add
or
test
sub
push
cmp
ins
cmp
xor
ja
mov
adc
icebp
loopne
add
lahf
retf
pop
mov
pop
(bad)
icebp
je
sub
add
add
jl
pusha
cmps
mov
in
shl
sub
sahf
aam
cmps
jne
cmp
ret
fst
and
lahf
movs
and
mov
sbb
mov
cmp
jae
push
mov
cmp
aas
inc
fstp
iret
push
scas
push
or
jns
retf
push
pop
pushf
xor
repnz
rcr
fst
shr
lds
mov
ss
leave
cmc
adc
mov
ins
imul
fucom
lsl
xor
sub
cmps
mov
dec
xchg
(bad)
mov
and
mov
jo
jle
ss
jnp
int3
jmp
jne
enter
mov
dec
and
iret
push
fdiv
sub
call
aas
jl
(bad)
mov
jnp
into
cmp
movs
pop
dec
dec
sub
inc
stos
and
fdivr
mov
xchg
xor
push
sbb
(bad)
icebp
ror
sbb
std
fldcw
mov
add
mov
sbb
pop
stos
test
jnp
repz
pop
sub
es
push
or
mov
jmp
outs
dec
jg
out
sbb
ss
call
cli
sbb
inc
jns
test
jmp
jmp
inc
push
out
jmp
or
xor
pop
add
or
xchg
or
add
dec
sbb
out
movs
into
inc
push
and
jecxz
and
mov
std
shl
daa
cmp
xchg
mov
ds
dec
clc
in
sub
mov
push
jb
(bad)
stos
lds
fld
mov
xor
push
cld
inc
xor
inc
mov
push
into
loopne
enter
aad
inc
adc
aaa
xlat
sar
or
ins
(bad)
in
cs
inc
outs
popf
repz
mov
jle
pushf
mov
xchg
int
push
aas
add
loope
and
ja
ror
ds
mov
sub
sub
stos
dec
xchg
retf
cmp
xchg
out
mul
mov
add
test
pop
mov
ret
ret
jne
pushf
sub
jle
lahf
inc
mov
js
popa
lock
out
sub
lahf
mul
(bad)
push
dec
rcr
daa
scas
push
sub
repz
imul
mov
js
fiadd
div
xor
dec
jno
jmp
leave
loop
retf
lock
cld
jmp
gs
cld
ins
xchg
test
je
pop
sbb
int3
retf
rep
loopne
pop
xor
ins
mov
leave
mov
sahf
lods
mov
cld
mov
push
pop
std
sbb
into
loopne
cmp
push
adc
mov
imul
rcl
sbb
or
imul
jno
add
fisubr
and
mov
add
scas
test
jp
add
in
out
mov
push
pop
mov
scas
call
outs
aas
scas
aam
aas
shl
mov
and
xchg
ins
push
or
ftst
or
pop
sbb
mov
lods
jns
mov
xor
scas
push
lods
lock
dec
retf
out
or
sub
in
daa
pop
ret
jle
popf
and
mov
push
jmp
jns
jle
cmc
stos
mov
adc
(bad)
mov
ja
call
ins
jae
loopne
hlt
cmc
or
xchg
mov
dec
popaw
pusha
(bad)
in
inc
stc
cli
aad
add
aam
sti
bnd
frstor
test
std
xlat
push
jmp
pop
mov
jl
imul
icebp
push
movs
int
jo
lods
enter
repnz
or
push
xchg
gs
cmps
dec
vmovlps
test
idiv
jmp
push
cld
std
inc
pusha
dec
cmc
rcr
ret
mov
dec
cmp
add
fucompp
movs
mov
add
das
scas
and
jo
push
cmpxchg
lods
adc
test
out
dec
or
in
imul
xchg
push
mov
or
xlat
jns
repnz
pusha
xor
and
or
fwait
add
fsubr
(bad)
jne
fwait
rcl
int
int
cdq
mov
mov
add
imul
mov
(bad)
sub
xlat
arpl
lods
jne
push
fmul
popa
jb
jp
xor
jb
in
xchg
ja
mov
dec
int3
ins
pop
xchg
(bad)
pop
mov
dec
pop
imul
rol
addr16
jns
repnz
out
cs
mov
xor
mov
ins
inc
dec
inc
push
aam
xchg
lock
xchg
lods
fcomp
mov
shl
js
xchg
out
out
cld
imul
xor
mov
or
scas
pop
push
mov
sti
jmp
ret
push
neg
push
(bad)
xchg
hlt
xchg
imul
les
fimul
leave
add
adc
adc
sbb
and
in
jns
mov
xchg
arpl
das
pop
fisub
and
xchg
inc
in
nop
push
adc
dec
mul
std
adc
push
inc
sbb
or
pop
call
ins
sbb
out
sbb
neg
jl
(bad)
neg
out
jle
popa
repz
jecxz
mov
mov
cli
mov
fld
pop
push
mov
push
hlt
cli
nop
dec
fdiv
mov
mov
fimul
ds
fadd
cwde
add
sub
imul
mov
add
out
pop
push
pop
(bad)
xchg
into
fiadd
jo
or
loopne
test
sbb
out
pop
ss
das
outs
int3
jecxz
into
cdq
cmc
or
(bad)
inc
gs
ja
dec
adc
mov
mov
pop
pop
mov
jb
test
push
xchg
cs
xchg
xchg
or
fwait
adc
sub
test
test
xor
call
in
not
cdq
int3
mov
mov
adc
les
loope
push
pop
data16
ret
sbb
fistp
aad
jl
xor
push
xchg
dec
inc
push
sbb
adc
inc
and
push
dec
test
sahf
push
pop
sbb
ror
aam
out
jle
repnz
sub
shl
mov
out
mov
pop
dec
test
bswap
jp
sbb
icebp
movs
sbb
shl
xchg
bnd
call
or
lods
popf
addr16
mov
ds
std
adc
mov
fist
loopne
dec
pop
pop
push
ret
mov
or
cli
mov
cs
pusha
loope
push
xor
cmc
or
dec
ins
(bad)
mov
fmulp
(bad)
pop
ret
cld
adc
push
dec
cwde
shl
add
cld
mov
(bad)
repnz
xor
bound
cld
or
sbb
ret
repz
jg
or
jmp
rol
mov
or
das
mov
inc
stos
mov
push
(bad)
or
mov
and
rol
fistp
sbb
loopne
mov
pop
fisttp
mov
test
inc
push
out
push
push
mov
sti
stc
bound
mov
test
or
fwait
repnz
mov
fld
and
ret
or
dec
mov
push
dec
ret
fistp
aad
in
int
dec
or
and
out
ins
popf
dec
mov
adc
add
push
gs
or
xor
jne
mov
xor
out
ja
shr
mov
cli
aas
xor
sbb
xor
or
xchg
xor
out
icebp
jge
lods
mov
jo
jmp
xlat
jb
rcr
sti
add
inc
lods
xor
mov
xchg
imul
push
jne
sbb
xor
call
cmp
add
and
ror
lods
pop
(bad)
xor
arpl
mov
out
test
in
jge
add
pop
popa
mov
lea
sub
xor
sub
cmp
push
gs
in
movs
out
pop
pop
push
lahf
mov
gs
jecxz
shl
push
outs
push
popf
xchg
xchg
dec
mov
shl
xor
in
cmp
xor
das
sbb
scas
dec
icebp
pop
pop
gs
add
jg
shr
test
ja
mov
jle
adc
addr16
xchg
adc
adc
jae
in
(bad)
in
shr
jecxz
repnz
in
jle
stos
iret
outs
inc
push
xchg
out
cmp
arpl
daa
daa
call
fs
and
loopne
adc
pop
or
cli
jbe
mov
neg
lods
sbb
mov
loop
cmp
(bad)
mov
sar
(bad)
sbb
mov
adc
pushf
pop
rcpps
pop
push
scas
fdivr
dec
mov
ins
daa
test
mov
ret
js
sub
or
out
fstp
jns
test
das
and
mov
mov
shl
je
ins
mov
mov
xor
pop
xchg
fs
shl
dec
dec
scas
lahf
adc
lds
mov
cmp
sub
jg
dec
mov
add
push
xchg
(bad)
jle
loop
(bad)
fiadd
call
rol
ret
clc
ja
jmp
sbb
adc
or
bound
sar
and
jecxz
inc
dec
add
aas
jae
jnp
push
mov
loopne
jmp
pop
ror
mov
push
std
or
push
ins
js
bound
or
bound
sub
xlat
and
sbb
(bad)
std
cmp
dec
jne
mov
push
cmp
xor
pushf
mov
jmp
adc
scas
shl
int3
neg
sbb
adc
adc
mov
div
cmp
mov
sub
(bad)
cmp
retf
cmp
cmps
pushf
xchg
cmp
cmc
dec
mov
(bad)
repnz
xor
jmp
pusha
inc
in
pop
xchg
sahf
and
retf
ja
mov
xlat
mov
cmp
push
jp
jecxz
out
pop
hlt
xchg
mov
repnz
arpl
imul
jne
adc
aas
push
data16
ds
pop
xor
push
das
mov
jno
dec
call
sbb
pop
mov
jl
ins
mov
push
inc
shr
(bad)
ret
add
cmp
push
push
aaa
fs
test
and
repz
jae
xor
fnstcw
push
dec
rep
xchg
retf
push
pop
or
ds
jl
add
mov
mov
cli
or
push
mov
ror
sub
shl
shr
hlt
add
ds
dec
jmp
(bad)
(bad)
pop
and
sbb
jp
or
ret
jo
dec
pop
jge
push
xor
fadd
std
sbb
aaa
imul
jb
fidiv
aas
mov
mov
xchg
sub
cmp
std
dec
fimul
dec
inc
ins
mov
movs
cmps
test
cwde
cmps
inc
add
pop
xlat
cmp
cmp
jmp
inc
push
mov
push
mov
sbb
add
jbe
fstp
mov
xchg
leave
dec
or
ja
shl
adc
dec
push
in
stos
dec
mov
test
inc
sbb
inc
push
stos
push
mov
or
pop
(bad)
mul
outs
scas
mov
(bad)
and
xchg
out
mov
outs
jp
sahf
xchg
ins
aaa
jb
mov
xlat
or
xchg
inc
inc
pop
js
jbe
mov
inc
adc
sub
repnz
adc
pusha
ror
or
pop
mov
mov
call
sbb
xlat
sub
cmp
dec
(bad)
mov
pusha
lock
mov
das
fiadd
push
jle
sub
jmp
aad
arpl
fbstp
pop
cmp
outs
cmps
fisttp
adc
adc
adc
cdq
or
in
nop
mov
je
pop
iret
cs
lods
jbe
addr16
or
gs
inc
ror
sbb
out
jnp
into
sub
mov
jg
sub
inc
xchg
rcr
sub
mov
ins
into
xchg
or
mov
jno
dec
inc
cwde
rcr
fsin
mov
mov
dec
fs
stc
pushf
mov
mov
in
mov
push
in
faddp
mov
ss
pop
lahf
pop
and
dec
xchg
lods
stc
inc
ret
adc
mov
mov
jmp
fnstsw
xor
jl
cmp
xor
xor
loopne
pop
push
xor
xchg
jg
call
lock
inc
adc
and
xlat
repnz
neg
fstp
inc
call
cmp
ret
jmp
cmp
xor
push
(bad)
iret
(bad)
and
and
lds
or
or
into
xor
(bad)
sbb
push
or
and
mov
cmp
out
push
mov
ret
fsub
jecxz
hlt
shl
push
pop
sub
fsubrp
popa
int
mov
jno
and
lahf
js
or
pop
cdq
stc
aaa
adc
push
in
jge
lods
xchg
xchg
mov
add
adc
shl
add
cwde
aas
stc
int
outs
jbe
add
inc
pusha
mov
adc
jb
jae
sqrtps
fstp
dec
inc
adc
jge
mov
test
lock
ins
jne
fadd
add
adc
mov
push
pop
cwde
dec
push
bswap
imul
mov
inc
sahf
mov
test
fs
pop
xchg
arpl
rcr
retf
fwait
lods
mov
lock
jne
dec
and
fisubr
test
les
mov
jns
movups
jb
xlat
call
xchg
dec
sahf
hlt
mov
aas
shl
inc
mov
mov
jl
adc
mov
inc
xchg
or
cli
retf
outs
dec
dec
int
pop
mov
out
sbb
inc
sbb
add
retf
lahf
sbb
add
jl
jae
and
xchg
mov
cmp
cmp
dec
icebp
xchg
scas
(bad)
fwait
mov
loop
adc
xchg
cmp
pop
adc
gs
data16
loope
or
ss
pop
push
sub
in
mov
inc
xor
ins
lahf
inc
jg
adc
cmp
hlt
xor
cmps
movs
pop
pop
fsubr
mov
push
push
movs
mov
pop
pop
push
adc
mov
ffree
mov
fstp
in
and
(bad)
(bad)
cmp
lods
add
jecxz
stos
pop
and
cmps
fnstenv
inc
jecxz
movs
cli
inc
std
shr
ret
xchg
sub
stos
cdq
xor
xchg
jl
sub
test
inc
fild
pop
js
lods
mov
es
bound
mov
cmp
cmp
and
inc
and
mov
jp
fwait
cmps
int
sti
jb
xchg
pusha
mov
xor
xchg
pop
aas
and
mov
outs
das
fidivr
repnz
push
popf
pop
loopne
sub
not
inc
ja
add
(bad)
mov
push
fstp
mov
mov
fwait
repnz
mov
out
sti
or
xor
jmp
jge
stos
adc
hlt
hlt
push
bound
scas
push
mov
leave
adc
inc
mov
or
push
(bad)
pop
add
jmp
inc
repz
push
mov
lock
daa
popf
call
js
xchg
shr
mov
xor
fnstcw
sub
xchg
iret
leave
in
cmps
or
inc
inc
mov
std
cmp
js
or
mov
popf
jbe
imul
aas
cmp
addr16
push
jne
mov
inc
push
mov
pop
popf
or
ret
stos
lahf
sub
cdq
movs
dec
jge
cmp
fst
jge
xchg
out
pop
call
jecxz
int3
popa
fwait
inc
in
add
out
cmp
dec
cs
jmp
aaa
jmp
sbb
cld
pop
sbb
pop
sbb
pop
retf
inc
ja
ss
lock
and
addr16
xor
nop
mov
jo
pop
and
loope
inc
loop
pop
xchg
and
fwait
jmp
mov
pop
in
arpl
arpl
call
pushf
ja
fnstenv
cmp
test
jae
mov
sahf
cmp
mov
dec
stc
movs
data16
push
mov
push
test
mov
add
mov
push
int3
leave
inc
mov
daa
cmc
inc
push
enter
dec
jl
(bad)
dec
mov
adc
and
loope
repnz
test
or
ret
frstor
lahf
pop
push
test
out
int
fs
pop
add
clc
mov
imul
stc
fstp
dec
fst
xor
pop
mov
inc
dec
sar
aas
mov
es
fsub
scas
mov
inc
stos
dec
xchg
push
int3
mov
lea
pop
mov
add
sbb
fdivr
add
sub
or
leave
pop
aas
adc
rol
cmp
dec
stos
nop
sbb
neg
pop
mov
sbb
lods
add
inc
adc
lea
mov
aas
pop
data16
das
scas
pop
adc
and
pop
int3
das
pop
inc
push
dec
xor
not
push
xchg
or
mov
or
sahf
mov
and
in
mov
push
int
pop
addr16
leave
xlat
push
fwait
sub
fdiv
enter
pop
outs
jns
and
sbb
(bad)
cmc
aaa
pop
or
mov
push
sbb
mov
cmc
mov
inc
test
ret
mov
nop
mov
inc
xor
aad
loope
xchg
lahf
cwde
idiv
xchg
mov
in
in
in
xchg
sub
mov
jge
jnp
jne
and
sub
popf
test
add
dec
in
mov
mov
adc
push
push
cmp
sub
int
inc
pop
jmp
push
push
cmp
dec
or
cmc
sar
jmp
add
sbb
cmp
ja
pushf
push
mov
jle
jecxz
clc
pop
push
xor
push
push
stc
div
adc
cmp
xchg
(bad)
hlt
xchg
mov
dec
sub
sub
mov
jb
mov
pop
fild
push
shr
shl
aaa
inc
divps
add
gs
xchg
in
(bad)
mov
and
stc
and
inc
pop
dec
mov
loope
fmul
ins
cmps
fcmovb
or
mov
iret
and
leave
lds
xchg
loopne
addr16
call
pop
push
pop
pop
xchg
sub
jecxz
dec
pop
ss
and
cs
enter
cdq
mov
adc
adc
rcl
cmp
mov
add
mov
std
cmp
ins
js
xor
cdq
mov
push
push
mov
xchg
mov
add
or
gs
int
stc
push
repz
jp
push
cmp
inc
loopne
test
push
xor
and
xchg
test
and
int
dec
aas
jno
cs
cmp
jne
daa
cmp
mov
cmp
ss
and
mov
push
popa
(bad)
jbe
(bad)
sets
repnz
dec
cwde
xlat
mov
shr
add
ror
adc
shl
mov
mov
rcl
pop
sub
rcr
movs
pop
or
loopne
push
(bad)
fld
fcomp
call
inc
(bad)
std
stos
hlt
lock
adc
push
xchg
movs
add
(bad)
and
leave
jg
jae
add
push
pop
lahf
sbb
fidivr
or
adc
cmp
int3
inc
and
sbb
test
and
mov
mov
adc
adc
inc
popa
jbe
add
jl
dec
and
ror
ss
or
xlat
add
lock
out
aad
leave
(bad)
sti
js
pop
xchg
push
movs
mov
test
push
inc
pop
adc
out
xchg
pop
adc
in
push
in
jo
je
lods
inc
xor
(bad)
mov
xor
imul
repz
scas
cmp
sub
xchg
test
adc
fwait
rcr
xchg
icebp
(bad)
sub
mov
into
lds
push
cmps
retf
jno
xchg
jl
xchg
into
dec
fild
or
cmps
cmp
jb
enter
outs
mov
mov
pop
dec
cdq
dec
ins
jl
sar
lock
in
loop
xlat
xor
sbb
jg
nop
add
retf
imul
in
scas
(bad)
push
imul
popa
(bad)
ins
sub
outs
mov
in
pop
cmps
push
xor
cmps
jo
dec
fiadd
push
or
outs
mov
mov
jmp
sbb
(bad)
sahf
out
and
mov
pop
push
push
adc
xchg
cmp
aas
aaa
loopne
push
sahf
fs
dec
test
inc
adc
push
repnz
push
cmc
add
cs
mov
adc
das
sbb
enter
mov
repz
lahf
jmp
call
jne
retf
pop
dec
push
push
js
data16
mov
sbb
es
js
inc
movs
loope
mov
adc
fwait
das
call
xchg
dec
stos
inc
xchg
sbb
xor
popa
or
mov
push
mov
dec
ds
sub
cmps
mov
adc
(bad)
in
js
test
adc
popf
in
adc
loopne
and
retf
in
mov
gs
jp
clc
xor
lods
gs
sbb
mov
push
loop
xchg
push
out
aaa
mov
jno
xor
es
or
arpl
das
mov
pop
xchg
or
xchg
adc
pushf
aam
fs
push
test
jnp
adc
mov
data16
or
in
sub
imul
popf
cmps
or
je
mov
dec
pop
sti
not
movs
dec
iret
bound
dec
pop
jmp
cli
sbb
pop
mov
faddp
cmp
cmps
(bad)
aad
sbb
scas
lods
add
mov
or
pop
xchg
push
(bad)
jo
int
je
pusha
stos
adc
in
inc
lahf
cmp
rcl
repnz
sbb
push
test
rol
repz
les
cmp
adc
jmp
xchg
sub
mov
in
mov
addr16
inc
(bad)
mov
mov
pop
mov
ins
adc
xlat
icebp
xor
out
in
data16
sub
lods
lock
dec
dec
das
adc
add
pop
xor
popf
dec
cmp
xor
test
enter
or
cmp
inc
add
mov
cmc
pop
imul
sbb
and
mov
int3
sar
scas
das
jbe
jno
cwde
ins
sbb
aaa
sub
add
lods
in
jge
mov
sbb
leave
ins
mov
pusha
ins
outs
mov
ins
cmp
sbb
jne
mov
xchg
inc
adc
js
fdivr
scas
inc
test
bound
dec
adc
dec
loope
pushf
pop
lds
mov
imul
inc
pop
jle
mov
loop
adc
sub
mov
lahf
test
fiadd
add
xor
fcomip
mov
sub
outs
stc
sbb
mov
stos
mov
push
lahf
cmp
cmp
push
dec
cmp
inc
js
ror
in
dec
jnp
(bad)
cmp
and
xor
cmp
xor
xor
mov
inc
idiv
add
cmp
inc
ret
les
call
jle
adc
pop
and
sub
jp
stos
pop
cdq
cmp
mov
xchg
call
or
jmp
rcl
arpl
mov
pop
es
xchg
inc
shl
inc
mov
mov
mov
retf
pop
aas
mov
xchg
pop
sub
fucomi
ja
fsub
cwde
jno
aad
stos
(bad)
ja
or
jnp
or
mov
arpl
push
cmp
aas
cmps
scas
push
mov
cs
jo
es
sbb
(bad)
mov
pop
ficomp
shl
mov
(bad)
mov
iret
adc
hlt
sbb
mov
aaa
xor
push
sbb
lds
cmp
pushf
mov
stos
rcr
mov
xchg
cmp
iret
push
jo
and
out
xor
mov
les
int
jecxz
jecxz
movs
jns
jne
js
ins
sbb
aam
mov
xchg
jmp
dec
fs
push
pop
in
je
xor
cmc
or
xchg
pop
les
push
mov
dec
pop
and
mov
dec
ret
sbb
popf
pop
pop
add
fdivr
sar
aam
inc
and
mov
aaa
sbb
ins
jecxz
in
ret
ficomp
lahf
out
pop
outs
cdq
inc
push
inc
push
push
pop
addr16
addr16
pop
and
jo
mov
xchg
xchg
push
test
aaa
pop
shr
ror
fisttp
jnp
addr16
call
xchg
jmp
ja
jg
(bad)
outs
in
outs
xchg
mov
xchg
cli
or
fwait
test
or
jecxz
adc
adc
ja
movs
ins
movs
stos
retf
jmp
(bad)
sbb
jge
push
mov
iret
xchg
add
xor
pop
stc
adc
retf
nop
rcr
add
and
fldenv
xor
mov
lea
push
sub
xchg
jge
loopne
imul
js
mov
(bad)
inc
cdq
xor
(bad)
pop
or
(bad)
cmp
(bad)
fsubr
push
add
scas
xlat
aad
jecxz
imul
imul
sub
sbb
push
jmp
add
mov
jecxz
ficomp
jae
test
mov
enter
jo
xor
rcr
ret
imul
and
cmp
mov
loopne
retf
mov
and
stos
rol
loop
movs
xchg
aas
aad
add
adc
xchg
push
jns
aaa
in
add
push
sahf
jp
jecxz
pusha
add
and
mov
(bad)
rcl
jae
(bad)
movs
jg
and
cli
arpl
add
dec
xchg
stc
hlt
xor
(bad)
ja
scas
sbb
shr
and
mov
mov
xor
into
int3
xor
sahf
iret
imul
and
push
mov
out
popa
add
comiss
push
dec
imul
fs
and
adc
jnp
push
cmps
jb
jmp
inc
not
mov
mov
inc
or
jns
stc
push
loopne
jne
inc
ja
sbb
stc
push
enter
jle
adc
or
in
pop
push
scas
in
shl
xor
ficomp
loopne
rol
jo
lods
shl
ja
std
shl
in
rcr
in
push
daa
cmp
push
adc
adc
pop
mov
mov
xchg
xchg
jno
test
or
cwde
(bad)
(bad)
outs
sbb
adc
xchg
or
push
push
inc
and
jl
adc
mov
les
fbld
(bad)
mov
gs
mov
(bad)
xchg
retf
int3
call
jo
mov
(bad)
fs
in
test
aas
out
jecxz
je
ret
jecxz
pop
sar
cmp
jp
repz
pop
mov
pop
mov
pop
or
popf
pop
dec
adc
pop
in
or
idiv
xchg
mov
int3
xor
pop
jae
push
inc
inc
push
adc
and
in
adc
mov
dec
in
mov
inc
inc
add
xor
cmp
jge
adc
xor
sub
shr
xor
jp
xor
ja
movs
not
push
lods
sbb
inc
and
adc
mov
mov
mov
repz
shl
int3
adc
call
dec
jne
loope
out
xchg
call
retf
ds
addr16
scas
mov
xchg
jo
(bad)
mov
movs
jns
test
xor
fild
fadd
das
call
jp
das
stos
pop
sub
(bad)
jmp
test
sbb
cmp
mov
mov
aas
cmp
and
dec
push
outs
adc
dec
pusha
inc
sbb
addr16
scas
cli
enter
jmp
xchg
test
fcom
cmps
pop
cwde
test
out
lock
test
aam
in
out
dec
cmps
pop
mov
pop
mov
jg
jne
mov
mov
repz
jg
add
mov
lea
xchg
stos
lahf
and
sub
movs
in
mov
fdiv
inc
push
dec
and
lock
pop
test
cmp
jbe
add
rcr
fisubr
call
push
and
and
int3
mov
(bad)
je
pop
mov
cwde
aad
fcmovnbe
mov
cmp
hlt
cmc
inc
xor
and
jo
bound
arpl
jge
jge
adc
es
dec
pop
sub
push
ds
mov
loopne
sub
mov
sahf
aad
pop
test
cs
shl
pop
add
test
xor
adc
xchg
loope
jno
xchg
in
pop
fisttp
and
push
sub
enter
mov
mov
push
ret
cld
add
imul
loope
jns
sbb
jmp
in
stc
push
push
test
push
js
push
retf
fmulp
cld
test
adc
push
sti
cmps
pop
inc
adc
and
out
push
fs
mov
iret
int
lock
push
stos
(bad)
out
ss
jmp
add
jmp
popa
mov
mov
and
out
and
xchg
aaa
popa
lahf
mov
adc
ds
mov
mov
retf
sti
pop
jmp
cmp
out
test
dec
jmp
xor
sub
js
mov
mov
push
js
push
push
je
and
jecxz
loope
loop
xor
imul
icebp
stos
cmp
ins
push
imul
fisub
adc
pop
mov
stc
inc
out
sbb
(bad)
xor
inc
fmul
fsub
repz
add
fiadd
test
clc
or
(bad)
mov
inc
jne
sbb
push
dec
and
cs
push
push
pop
call
gs
stos
xor
stos
cmp
xchg
int3
scas
push
sbb
pop
dec
movs
in
dec
or
(bad)
jne
adc
cmps
inc
adc
inc
xchg
(bad)
cmp
fdivr
add
push
ss
fdiv
cmc
sub
push
and
adc
mov
ja
loope
push
push
mov
dec
jg
scas
fist
fisub
bound
outs
aam
pop
inc
(bad)
cs
(bad)
fnstsw
inc
repz
fbstp
aad
not
pop
adc
hlt
ja
(bad)
push
sub
out
xor
jge
xchg
loope
add
push
add
aas
add
clc
xor
(bad)
xor
repnz
and
dec
cmp
mov
out
mov
adc
stos
sub
mov
cmp
jge
jb
sar
pop
or
xor
pop
aas
shr
cmp
adc
fisub
in
push
cwde
out
scas
mov
dec
xchg
in
mov
jge
pop
cmp
fimul
shl
iret
aas
xchg
xchg
mov
mov
adc
out
stc
jo
jnp
jne
and
or
jg
cmps
add
dec
out
rcl
es
into
stc
pop
pop
xchg
aam
cmc
stos
xor
and
sub
aam
out
jns
mov
and
idiv
adc
add
cmp
icebp
ins
pop
aad
ficomp
inc
popf
aad
pop
cmp
mov
jbe
xor
scas
add
imul
cwde
rcr
xchg
lods
scas
xchg
outs
push
and
hlt
cmps
mov
popf
ret
inc
dec
jmp
sub
xchg
sar
pop
and
mov
jmp
or
jp
clc
jmp
xor
jo
push
inc
test
addr16
bnd
or
shl
mov
pop
les
xchg
test
mov
mov
pop
adc
xchg
jno
sbb
jmp
add
mov
gs
mov
(bad)
lods
adc
xchg
retf
rol
sahf
adc
add
pop
mov
loopne
jg
imul
js
jp
test
xor
mov
sbb
jmp
jle
jecxz
fadd
js
jb
mulps
fisubr
lea
scas
jne
and
dec
mov
mov
mov
std
inc
dec
lods
jne
popf
out
(bad)
shr
ret
je
push
add
mov
xlat
xchg
scas
cmc
movs
cmps
scas
in
sub
xor
mov
xor
adc
jl
pop
outs
sbb
cs
push
mov
adc
mov
enter
or
leave
int3
dec
outs
mov
jecxz
and
adc
mov
xchg
xor
and
add
mov
mov
pop
mov
cmc
rcr
xor
fs
das
or
div
retw
mov
cmp
shl
adc
lods
jns
jnp
xchg
test
xor
jno
or
mov
les
bound
mov
inc
shl
inc
push
cwde
sub
sbb
xchg
cmp
xor
(bad)
push
adc
sbb
dec
xchg
dec
movs
push
leave
add
sub
push
fwait
xchg
pop
mov
aaa
jecxz
add
jecxz
ins
leave
dec
jb
dec
push
push
in
or
test
cmps
rol
jmp
imul
push
test
sar
lods
mov
sysret
xchg
icebp
sbb
(bad)
popf
scas
fs
mov
shr
lahf
mov
in
ret
mov
retf
jns
xor
ins
ret
cmp
shr
lods
mov
xchg
gs
movs
dec
mov
aaa
pop
les
lahf
int
test
and
add
cmp
fcomp
sbb
mov
inc
cmp
bound
push
cmp
push
cmp
sbb
enter
inc
or
cmp
adc
ins
bound
stc
(bad)
and
push
pop
sub
cmp
rol
gs
loopne
and
shl
push
jno
cmp
addr16
je
les
pop
movs
nop
mov
bound
mov
dec
push
xchg
in
mov
mov
test
and
sub
out
push
sbb
sub
fild
(bad)
test
popa
mov
scas
(bad)
sub
cmps
sbb
dec
icebp
and
popa
mov
cwde
js
pusha
out
sti
fisub
cmp
ins
sub
scas
enter
push
xor
pop
retf
stc
pop
mov
or
add
adc
nop
or
jb
out
adc
jge
inc
mov
dec
push
dec
shl
pop
mov
movs
into
push
daa
add
sahf
data16
stos
das
out
int3
pop
xchg
adc
jmp
mov
push
pusha
test
mov
xlat
out
pop
aad
pop
jl
out
(bad)
in
add
fwait
xor
popf
or
pushf
push
pop
add
je
sbb
cwde
sbb
pop
pop
and
jg
push
or
inc
movs
pusha
mov
(bad)
pop
push
mov
fnstsw
dec
jb
inc
retf
(bad)
jg
and
sahf
or
mov
or
out
(bad)
add
adc
movs
sub
pop
data16
jno
xor
outs
in
push
and
aas
out
icebp
jae
popa
push
jb
gs
pop
rol
pop
mov
mov
inc
(bad)
imul
sbb
inc
mov
into
(bad)
cli
and
xchg
pop
retf
inc
mov
or
hlt
jg
jns
mov
fs
cmp
mov
inc
mov
push
mov
movs
div
int
jmp
out
xor
mov
out
outs
jp
rcr
cmc
dec
cmp
jo
stos
enter
ss
push
mov
jle
aaa
mov
popa
daa
dec
mov
leave
sub
in
adc
std
or
je
jne
jae
push
sub
and
sbb
(bad)
int
inc
bound
outs
cmp
cmp
mov
cdq
mov
inc
cmp
(bad)
mov
cs
inc
out
push
inc
xchg
and
or
cdq
or
in
sub
and
or
pop
(bad)
jg
test
imul
loopne
jns
pop
out
adc
je
and
loopne
je
addr16
push
pop
xor
hlt
movs
call
enter
add
or
lock
add
xor
lds
jnp
mov
jle
mov
push
movs
mov
scas
clc
inc
cmps
mov
dec
push
jl
or
xchg
mov
scas
scas
shr
pop
or
repnz
js
mov
lods
and
and
repnz
fldenv
sub
mov
sbb
shl
mov
test
retf
fs
imul
add
ds
into
xchg
inc
xor
inc
arpl
cmp
mov
movs
out
outs
aaa
sbb
loopne
xor
adc
pop
push
push
sub
pop
inc
cs
orps
inc
xor
or
(bad)
popa
int3
mov
jle
adc
enter
push
mov
retf
cmp
(bad)
push
cdq
dec
push
nop
pushf
pop
inc
pop
mov
lea
sahf
or
(bad)
dec
(bad)
pop
cmps
xchg
pop
es
dec
add
inc
retf
inc
lds
stos
mov
movs
pushf
lods
lahf
or
sub
sub
pop
jae
rol
pcmpgtw
call
fld
adc
mov
jmp
sbb
or
sbb
dec
cmps
leave
pop
int3
call
mov
cmp
pop
repz
aam
cs
mov
jae
popf
jecxz
pop
pusha
leave
daa
in
or
pushf
lods
pusha
lahf
sbb
hlt
adc
mov
cmc
xchg
add
in
retf
icebp
std
jl
in
mov
mov
repz
test
or
adc
fimul
outs
xchg
js
ss
sub
inc
jb
lods
fmul
adc
adc
inc
pop
cmp
mov
fsubr
test
fiadd
es
imul
xchg
jns
pop
dec
jo
xor
loop
jg
iret
addr16
outs
fstp
rcl
in
into
je
adc
pop
bswap
mov
out
aam
cld
ds
retf
lahf
and
ficomp
mov
jnp
mov
adc
in
sti
mov
mov
ins
adc
add
outs
dec
sbb
ins
outs
ins
xor
push
sbb
mov
or
cld
jmp
adc
ror
stc
push
pop
jnp
std
mov
mov
xchg
dec
mov
pop
daa
xor
je
jg
test
cmp
jno
(bad)
and
xor
cmp
ss
sbb
leave
imul
icebp
dec
push
mov
jmp
bound
outs
lods
stc
idiv
sub
in
xor
dec
push
leave
test
imul
sub
hlt
or
and
jae
jne
mov
sti
stos
pop
adc
mov
retf
stos
mov
mov
rcl
movs
cmp
fadd
imul
fld
xchg
or
dec
inc
imul
inc
lods
jae
pop
imul
jae
hlt
loope
or
shl
cmp
ins
adc
dec
and
cmc
sub
les
mov
sbb
xor
mov
push
mov
or
jle
mov
and
inc
push
jae
jmp
or
out
aas
mov
jge
push
sahf
shl
mov
push
dec
dec
pop
xor
bound
adc
scas
sti
aam
add
mov
scas
scas
cmp
repnz
inc
out
or
sub
cmp
cmp
and
mov
mov
and
jne
or
sub
push
adc
aam
adc
push
mov
mov
inc
in
scas
pop
lods
xor
scas
fwait
(bad)
mov
jmp
neg
imul
movs
je
pop
lock
mov
in
outs
je
xor
inc
sbb
fidivr
pusha
sub
ins
jle
or
mov
aaa
jne
jmp
sbb
inc
fwait
push
push
in
out
test
repz
fwait
cwde
stc
test
lock
cmp
push
retf
into
push
outs
add
dec
iret
sub
loop
or
dec
mov
push
sbb
outs
imul
and
jae
xor
and
mov
jle
adc
inc
pop
xor
fidivr
jbe
adc
test
mov
ins
adc
jb
aad
arpl
jb
xor
mov
dec
sub
das
ins
ss
add
add
mov
loop
adc
xor
mov
xlat
fld
das
and
fnstcw
xor
jmp
lock
pop
lods
mov
cmps
and
cli
cwde
retf
call
push
cmp
cli
add
mov
loope
cdq
mov
pop
stos
daa
mov
dec
mov
sbb
pushf
jnp
mul
je
call
arpl
fwait
stos
push
xchg
out
inc
mov
cmps
sbb
xlat
mov
adc
mov
adc
test
jge
cmp
xchg
mov
pop
push
fbld
mov
(bad)
hlt
cmpxchg
push
repz
ret
sbb
dec
jp
loopne
cli
and
or
lods
pop
jge
jmp
int
fdivr
mov
fiadd
addr16
retf
mov
sar
adc
divps
push
pop
jne
stos
outs
arpl
or
adc
and
cmp
inc
or
stos
mov
or
inc
leave
sbb
out
sar
clc
ins
(bad)
xchg
push
mov
dec
(bad)
retf
add
or
mov
in
adc
mov
mov
dec
dec
sub
mov
adc
xor
ret
fimul
jl
cmc
mov
add
mov
push
cmp
mov
inc
or
cli
dec
pop
fild
test
push
popa
bnd
pop
out
add
add
or
add
or
sbb
jnp
out
loopne
fucom
in
loopne
scas
imul
xchg
fcom
rol
jbe
push
adc
or
test
push
es
add
ins
scas
xchg
in
jg
fcmove
movs
add
cmp
aas
xchg
out
mov
xor
loopne
arpl
fisubr
xor
pop
lods
xor
sbb
pusha
(bad)
das
mov
fistp
aaa
add
iret
cdq
sub
ins
fdiv
xor
pop
jnp
dec
jne
pop
iret
pop
ror
cmp
pop
jns
or
pop
iret
nop
fild
outs
popa
adc
jns
imul
test
fdivr
dec
fild
in
std
xor
inc
xor
sub
sub
xchg
pop
nop
mov
pop
retf
add
icebp
(bad)
mov
js
add
dec
(bad)
mov
and
mov
adc
cmp
and
or
sbb
pop
inc
je
aas
in
(bad)
push
adc
mov
pop
js
pop
dec
xor
aam
outs
dec
push
or
mov
mov
xchg
cld
mov
clc
add
jno
arpl
retf
aad
mov
and
sti
xor
leave
xchg
xor
call
inc
std
out
mov
movs
loopne
outs
push
push
adc
or
sbb
(bad)
lahf
dec
xor
jp
jne
sub
jmp
cmp
fiadd
pop
inc
adc
mov
stos
dec
inc
and
shr
push
jno
xchg
xchg
sbb
cwde
jne
repz
add
push
rcl
cli
outs
cmp
mov
xchg
xchg
and
mov
mul
sub
mov
popa
xor
ficomp
push
lds
in
leave
das
jge
inc
arpl
sbb
or
arpl
loopne
sbb
test
dec
push
(bad)
repnz
push
inc
pop
icebp
xor
data16
outs
cs
dec
mov
inc
cmp
dec
lahf
dec
movs
xchg
addr16
xchg
ja
sub
and
adc
inc
xor
push
dec
cmps
dec
dec
ja
inc
dec
outs
xchg
in
repnz
call
pop
mov
cmps
ins
cs
loop
in
mov
adc
or
scas
mov
and
pop
xor
cmps
xchg
hlt
jle
in
in
out
dec
fisttp
les
imul
mov
movs
xor
jecxz
fcomi
rol
icebp
repz
das
jp
ss
xor
mov
or
mov
sbb
mov
bound
mov
aad
xor
fwait
stos
fistp
in
jbe
cdq
push
jp
and
mov
or
sub
xor
mov
rol
fst
pushf
imul
cmc
mov
xor
add
inc
aam
ins
jecxz
jl
icebp
pop
adc
mov
or
dec
pusha
xlat
sahf
enter
push
xor
call
or
sub
shl
in
jge
mov
inc
pop
push
xchg
inc
aaa
int3
jae
jno
psllq
test
fsub
(bad)
sti
mul
shl
jp
test
into
pop
and
add
scas
pop
cmps
stc
cmp
push
aad
or
test
(bad)
mov
cdq
mov
xchg
cmps
out
push
lds
and
repz
xor
add
into
push
fs
popf
dec
and
sub
cs
inc
xor
loope
imul
pcmpeqb
and
mov
add
cwde
jns
cwde
test
fsub
push
fmul
cmp
push
scas
stos
cmp
pusha
mov
lahf
aas
sar
mov
sub
jno
add
stc
sbb
or
mov
daa
cli
mov
adc
xchg
xchg
shr
or
inc
push
sahf
xchg
(bad)
dec
fiadd
pop
mov
and
jns
xor
and
push
dec
mov
enter
jg
push
scas
test
and
sbb
push
sub
test
ret
xor
lods
jle
mov
dec
mov
inc
jp
mov
je
rcr
inc
lahf
sbb
add
or
jp
std
adc
dec
repnz
cmp
cmps
pop
call
and
jno
mov
test
mov
mov
push
xchg
mov
rol
push
movs
dec
mov
inc
cmc
fimul
xchg
dec
ret
cmc
inc
sub
fsub
and
cmps
inc
adc
in
dec
mov
int3
dec
ret
fwait
cmps
cmp
add
stc
out
bound
add
sbb
jecxz
mov
push
cmp
and
pop
cmp
and
sub
or
mov
in
cld
out
jb
sbb
mov
mov
push
icebp
mov
mov
(bad)
cs
les
push
dec
cmps
out
lahf
scas
fdivrp
jge
aaa
sbb
imul
in
in
outs
mov
xchg
dec
js
dec
jae
add
jp
and
ret
jne
pop
cmp
push
repnz
sahf
arpl
in
add
jl
popa
call
push
mov
popf
sub
(bad)
jb
stc
adc
rcr
pop
adc
(bad)
xchg
daa
adc
add
jbe
cld
dec
add
repnz
jle
popa
cmp
push
jae
cs
jae
push
imul
retf
mov
sub
lods
xor
cmps
iret
sbb
inc
jb
and
popf
outs
push
ret
and
enter
xchg
out
mov
jl
stos
mov
jg
lahf
ins
int3
mov
jmp
mov
mov
mul
push
(bad)
jns
sub
ins
movs
icebp
je
(bad)
pop
rol
mov
adc
add
mov
in
sbb
jge
and
mov
sub
pop
jnp
push
popa
hlt
stos
stos
in
ss
adc
out
jp
arpl
jecxz
js
aas
dec
leave
xchg
cmp
jnp
mov
pop
mov
ins
fnstenv
repz
mov
ins
int3
ja
shr
xor
mov
(bad)
std
inc
push
inc
jge
ret
sbb
mov
jne
stos
(bad)
mov
(bad)
lods
fcom
push
add
mov
adc
mov
test
(bad)
imul
in
ss
ret
cmp
outs
fist
jg
pop
std
push
lods
cdq
adc
outs
or
xchg
retf
fwait
stos
mov
fst
adc
scas
sub
jmp
lahf
outs
das
mov
inc
lods
es
mov
je
jecxz
outs
xor
pop
cmp
scas
out
mov
inc
mov
popa
stos
repz
and
test
repnz
jge
jp
push
mov
push
pop
scas
shl
cld
and
xor
sbb
lods
outs
mov
xor
mov
stos
pop
imul
call
mov
stos
pushf
ja
mov
inc
xor
dec
in
ins
inc
in
mov
add
js
repnz
lods
dec
add
repz
ins
xor
popf
aaa
lea
popf
dec
call
imul
or
push
ss
cmp
jecxz
sub
xchg
ret
push
loope
rcl
adc
push
fdiv
and
and
pusha
mov
or
movs
mov
mov
pop
jno
int3
xchg
mov
jmp
clc
cmp
mov
hlt
scas
jge
data16
sar
pop
retf
jmp
and
repz
xchg
inc
or
sbb
jecxz
jns
js
cmp
and
sbb
mov
cmps
inc
stc
sar
cmp
popa
sar
pop
ja
mov
push
add
add
cmps
cmp
mov
aas
pop
sub
test
lods
adc
dec
dec
xchg
cmps
test
loope
xchg
xor
ds
adc
daa
or
scas
aaa
push
and
shl
fdivr
xor
push
in
mov
inc
or
ror
cli
sbb
ficom
test
xchg
stos
inc
pop
ins
push
sbb
outs
pop
cld
xor
or
cmp
cs
je
repz
scas
jp
xor
sub
stos
dec
pop
or
xchg
in
or
mov
imul
mov
sbb
pop
and
cld
inc
cmps
sub
push
sbb
loop
std
mov
mov
adc
mov
bound
mov
or
imul
test
mov
pop
call
nop
mov
sub
jbe
mov
inc
jmp
sub
jmp
daa
and
pop
pop
cmc
and
jnp
mov
jae
and
and
loopne
mov
retf
in
scas
cmp
jbe
rol
int3
jns
scas
adc
shl
adc
mov
jbe
push
dec
jmp
lahf
or
push
enter
stos
aam
push
repnz
shl
sub
cmps
stos
push
mov
pop
call
je
or
leave
adc
call
mov
inc
mov
je
cdq
mov
fild
pop
mov
dec
sbb
ret
idiv
or
xor
out
repz
call
add
cmp
xchg
imul
push
cmps
inc
jbe
dec
pop
cmp
sti
shr
push
xor
mov
xor
mov
fsubr
pushf
xor
hlt
outs
ds
push
sahf
ja
jb
repnz
mov
imul
cmp
sub
push
cmps
in
in
inc
test
push
add
pop
push
shl
mov
ss
xor
mov
sbb
mov
mov
mov
ret
push
mov
cmps
dec
inc
mov
and
iret
add
scas
and
jbe
mov
in
xor
add
std
mov
or
mov
jl
gs
cwde
enter
aad
in
xchg
outs
cmc
out
mov
xlat
pusha
xchg
xor
sub
dec
aas
iret
mov
lea
dec
dec
rcr
xor
test
sbb
inc
dec
mov
hlt
addr16
dec
lods
inc
and
dec
ror
pop
scas
mov
cmp
rep
ret
cmp
clc
(bad)
xchg
mov
cld
nop
mov
mov
imul
sub
fxch
mov
fadd
sahf
ffreep
ss
(bad)
jp
ins
cmp
fstp
(bad)
fs
pop
jg
inc
fwait
inc
xchg
fadd
call
aad
shl
cmps
(bad)
loop
inc
cmp
adc
or
gs
xor
aad
pop
sub
or
or
aas
mov
ror
fdiv
lea
clc
cmp
mov
out
xchg
cmc
pushf
je
pop
test
sub
xchg
stos
and
add
cli
test
adc
xchg
dec
shl
es
adc
sbb
leave
jmp
xlat
xor
mov
pop
cdq
cs
sub
popf
fcmovnb
cmp
mov
es
mov
and
cmc
outs
adc
mov
jg
and
jmp
mov
dec
sub
fldenv
aad
retf
xor
into
sub
scas
sbb
nop
pop
cdq
sbb
in
dec
jle
mov
mov
out
jb
mov
ret
jmp
cs
stos
cmps
fucomip
loope
and
xchg
cmp
mov
aam
and
inc
stos
jle
ss
push
fwait
mov
push
shl
mov
cmp
fiadd
cmp
mov
popfw
jmp
test
addr16
ret
sbb
sti
mov
add
sub
pop
ret
ret
mov
sti
pop
lods
std
xor
xchg
sub
rcr
out
push
shl
jns
cmp
adc
jl
out
call
cmps
jmp
or
or
adc
nop
popf
enter
dec
mov
mov
imul
adc
cmp
xchg
push
adc
retf
xchg
pop
ja
or
adc
call
stos
dec
(bad)
mov
out
fcom
repnz
fdiv
or
adc
add
jo
repnz
add
div
xor
jo
out
leave
loope
dec
lods
enter
test
adc
jbe
mov
sbb
push
inc
loope
iret
inc
dec
xchg
movs
cmp
or
popf
in
push
dec
lods
ret
push
add
into
lock
cmp
cs
and
ds
dec
test
test
in
sub
aas
xchg
cmc
sbb
(bad)
jmp
fistp
xchg
add
xchg
and
scas
xlat
adc
fiadd
xlat
mov
fs
loop
das
pop
mov
dec
dec
(bad)
sbb
pop
push
std
cmp
gs
dec
adc
and
or
push
shl
pop
imul
push
aad
dec
fs
push
xor
jmp
scas
or
sahf
sub
fld
cmp
xor
pop
add
xor
aas
inc
aad
push
xlat
fs
mov
jnp
add
pop
xchg
adc
dec
or
frstor
ror
cmps
pusha
jecxz
push
das
push
or
sbb
pop
xor
mov
stc
sahf
jb
sbb
push
push
pop
dec
jl
es
in
call
in
and
push
mov
add
and
mov
(bad)
mov
setno
dec
xor
pushf
cmp
jno
xor
jmp
xchg
dec
std
cmp
jle
mov
pop
mov
dec
dec
mov
and
(bad)
hlt
adc
dec
cmps
sbb
enter
pop
cli
sub
and
aam
lds
aaa
adc
test
push
mov
hlt
mov
and
sahf
lds
jecxz
push
cwde
test
xor
mov
gs
(bad)
mov
inc
jge
pop
lods
in
in
adc
cmp
push
xchg
cld
and
pusha
jmp
lea
sar
(bad)
bnd
repnz
test
ror
push
retf
dec
or
adc
xchg
xchg
xlat
sub
xchg
into
movs
call
jne
xchg
ror
or
push
pop
pop
lds
fxch
sub
xchg
mov
out
in
dec
sub
(bad)
es
inc
inc
ds
xchg
add
xchg
push
leave
test
loopne
shl
ror
arpl
xor
test
xchg
(bad)
call
aaa
test
cmp
popa
test
ret
jb
test
jg
rcr
arpl
nop
in
fist
push
cmps
aaa
bound
cdq
(bad)
mov
(bad)
xchg
pop
sbb
fisubr
push
fidiv
jae
imul
push
xchg
shr
lds
pop
ret
add
aas
fs
out
xor
adc
add
js
ja
dec
or
ins
les
(bad)
push
mov
in
cmc
cmp
repnz
fdiv
fidiv
fwait
arpl
rcl
and
aaa
fcmovnu
lahf
and
or
dec
(bad)
fisubr
pop
xchg
ror
add
cmp
cmp
out
lea
mov
cmp
daa
adc
into
push
inc
add
data16
xchg
call
fdivr
pop
jmp
loop
loope
mov
jecxz
jp
xchg
movs
inc
push
cmps
arpl
adc
arpl
mov
stc
neg
fisttp
sub
(bad)
in
sbb
loopne
push
daa
add
pop
fcmovu
mov
lock
inc
stos
xor
jo
mov
aaa
dec
xor
or
repz
clc
std
int3
push
test
inc
and
dec
ss
inc
cmp
cmp
push
adc
xchg
addr16
or
popa
and
aam
jo
xor
mov
popa
mov
cld
cwde
call
jl
sub
mov
(bad)
(bad)
mov
mov
lods
in
pop
sbb
adc
test
cwde
sub
test
fimul
mov
sbb
(bad)
loope
dec
test
dec
or
retf
aad
jbe
mov
mov
sub
pushf
xchg
add
stos
xchg
pop
push
pop
inc
xchg
or
stos
xchg
push
jle
out
push
movs
daa
aam
scas
adc
mov
cmp
push
in
or
adc
mov
sub
sbb
pop
and
pushf
nop
adc
shr
ins
test
jmp
stc
push
dec
sahf
add
push
or
es
dec
adc
jmp
mov
fsubr
pop
mov
ret
lods
das
mov
fadd
add
das
cmp
idiv
push
add
and
jbe
addr16
sbb
es
loope
and
mov
out
adc
pusha
popf
test
jbe
xchg
mov
mov
xchg
fld
jns
ss
cmc
stos
fs
ds
mov
mov
and
xor
push
mov
outs
out
aaa
movs
jne
addr16
adc
jae
mov
div
(bad)
rol
out
jbe
and
push
or
pop
fwait
lds
dec
mov
inc
inc
pop
loope
mov
xchg
and
stos
or
jns
xor
or
pusha
mov
clc
or
cli
out
mov
in
push
add
dec
pop
dec
gs
cdq
aaa
cmp
jl
dec
push
ret
addr16
xor
loop
jne
aaa
(bad)
inc
bound
sbb
push
sub
pushf
daa
or
cld
hlt
push
inc
lea
or
jl
loope
mov
into
lock
cmp
mov
and
dec
(bad)
adc
imul
xchg
push
push
shr
xchg
push
pop
es
mov
cmp
inc
add
cmc
les
sub
xor
push
jp
out
pop
dec
xlat
arpl
jmp
ret
pop
das
ret
pop
sbb
xchg
popa
sbb
push
sub
jg
lock
sbb
loopne
icebp
loopne
push
mov
pop
or
xlat
xchg
mov
jg
dec
xor
fisttp
das
push
cwde
mov
pop
test
pop
mov
int3
jbe
mov
push
ins
pop
push
jb
push
xchg
imul
adc
les
loopne
cdq
cmp
and
inc
mov
jmp
in
mov
je
repz
fist
out
cmp
mov
and
ficomp
or
outs
inc
sbb
test
cmp
dec
inc
movs
stos
inc
jne
xchg
das
ins
lahf
cmp
mov
inc
mov
test
push
sar
mov
js
pop
mov
popa
sbb
bound
ja
xchg
xchg
out
outs
inc
adc
mov
mov
popf
aad
sbb
pop
xchg
in
pushf
ins
aaa
ins
jl
mov
rcl
popa
cdq
popf
jmp
mov
sti
shl
f2xm1
(bad)
cmp
jmp
cmps
mov
pop
xchg
dec
dec
(bad)
int
test
pop
ja
out
jns
lahf
dec
jns
adc
sbb
pop
popa
dec
add
sahf
cmp
pop
sar
inc
and
cmovle
mov
dec
mov
neg
adc
int3
pop
and
pop
push
dec
mov
jmp
fs
dec
add
pusha
jo
dec
xchg
test
clc
icebp
pop
gs
push
mov
aam
mov
ret
rcr
mov
out
(bad)
ror
fs
fsub
imul
cwde
sub
enter
iret
adc
cld
call
adc
stc
push
les
jg
call
sub
in
ror
fwait
mov
cmps
sbb
adc
(bad)
xor
sahf
push
push
pop
icebp
sub
movs
or
dec
push
test
sbb
lods
leave
inc
mov
cmp
daa
add
(bad)
popf
frstor
xchg
inc
popf
jns
jno
mov
push
jl
fisttp
xchg
stos
jnp
adc
inc
xchg
sub
outs
fwait
jl
xchg
and
add
mov
jmp
inc
sub
adc
pusha
xor
icebp
mov
scas
fnstsw
js
dec
in
add
bound
mov
lea
pusha
cld
es
call
clc
pop
push
push
xor
mov
adc
in
pop
out
bound
nop
fimul
jne
add
scas
push
(bad)
push
dec
mov
out
xor
push
dec
jle
ret
xchg
jmp
mov
xchg
mov
out
data16
inc
shl
jo
pop
fst
fwait
pop
test
push
shl
mov
xor
out
loop
test
addr16
dec
xchg
push
xchg
cmps
xchg
sti
mov
inc
scas
ja
fisubr
add
hlt
addr16
jns
or
inc
jae
mov
out
push
sbb
push
cs
mov
sub
loop
mov
addr16
sbb
cwde
push
pop
dec
adc
in
mov
mov
sub
(bad)
sub
jbe
pop
fsubr
cli
adc
imul
mov
sbb
mov
and
lahf
and
push
mov
mov
or
adc
xchg
sub
mov
sbb
pop
xor
dec
ret
repnz
mov
dec
push
into
mov
dec
nop
(bad)
jmp
sub
std
push
jns
mov
popf
jns
dec
ja
push
sub
push
inc
add
dec
pop
int
in
push
rol
jmp
xchg
les
imul
mov
ins
jmp
pop
sar
or
lock
sar
xor
dec
int3
mov
shr
inc
mov
retf
push
daa
or
std
mov
mov
sub
lods
neg
fldcw
or
outs
shl
shl
push
je
in
mov
push
dec
or
sub
cwde
pop
sub
jle
jns
and
xchg
sbb
out
fsub
lahf
iret
loopne
fadd
mov
mov
add
addr16
imul
mov
inc
rcl
cs
gs
aas
mov
sub
xor
xor
push
add
cmp
or
(bad)
xor
pop
data16
inc
lea
and
jl
jge
inc
mov
push
les
fdivr
imul
cmp
jns
ret
sti
rol
lods
pop
aad
or
(bad)
stc
fcomp
outs
fnstcw
add
adc
or
pop
(bad)
pushf
xlat
cmps
or
leave
mov
pusha
call
mov
retf
mov
rcr
in
add
stc
dec
rol
cmp
jnp
mov
mov
inc
in
sub
outs
fdivr
aam
ds
loop
js
call
lahf
cmp
fadd
aas
pushf
sti
mov
sbb
or
mov
jl
lahf
ja
pop
xor
push
push
push
loop
xor
stos
mov
or
lahf
mov
mov
pushf
push
sbb
into
dec
mov
out
pop
push
xchg
mov
int
sbb
push
jne
arpl
aaa
gs
push
cs
ja
dec
xchg
ins
lea
mov
sbb
cdq
popf
dec
xchg
xor
adc
mov
mov
cmp
cmp
lock
frstor
jge
cld
xor
retf
sbb
ins
push
jmp
sub
into
adc
add
les
repnz
cmp
lds
xor
ss
inc
mov
or
xor
mov
fild
shr
in
xchg
lock
inc
inc
cs
sub
cs
sub
mov
(bad)
pop
js
(bad)
cmp
inc
mov
dec
xchg
(bad)
sbb
scas
xor
sub
enter
sub
jge
mov
std
add
rol
cmps
mov
mov
outs
mov
retf
shl
or
xor
xor
(bad)
in
jle
aad
cwde
lahf
js
cmp
div
aad
pop
adc
xchg
add
mov
jb
and
cld
jge
retf
movs
lahf
aad
pop
outs
sub
pop
fbstp
sub
dec
push
fimul
pop
ret
mov
call
lahf
dec
add
jne
xchg
inc
(bad)
cmp
lods
test
les
icebp
mov
jl
dec
lea
aaa
add
aam
mov
out
je
sbb
sbb
sbb
adc
cwde
sar
xor
xor
dec
inc
stos
addr16
mov
movs
dec
jge
repnz
mov
add
bound
pop
push
xor
data16
push
xor
and
mov
les
or
cmp
stos
adc
pop
pop
(bad)
mov
out
jmp
aam
sbb
xor
pusha
pop
and
movs
call
add
ret
lods
sub
pushw
fstp
frstor
add
xchg
js
or
mov
mov
fiadd
mov
rcr
sub
push
mov
xor
jle
mov
nop
gs
inc
shl
pusha
jle
shr
loop
push
mov
ret
jno
test
cwde
enter
xchg
dec
mov
mov
mov
or
or
sub
loopne
sbb
adc
jo
popf
add
xchg
push
inc
ss
ja
pop
fisttp
dec
sub
adc
mov
test
hlt
fwait
push
add
push
not
pop
and
mov
in
fcomp
and
out
pop
dec
and
jp
mov
into
or
mov
add
leave
push
and
xchg
sbb
dec
popa
add
nop
inc
fisubr
hlt
fisttp
call
mov
cmp
movs
in
out
xchg
or
nop
cmc
in
ror
fdivrp
neg
pop
mov
sbb
fadd
xchg
push
or
pop
mov
jmp
sti
mov
pcmpgtd
adc
sbb
aas
arpl
inc
add
stos
les
push
and
cmp
repnz
sub
push
mov
adc
jg
das
mov
or
lds
(bad)
out
inc
mov
stos
test
les
mov
mov
mov
imul
shl
aad
and
mov
retf
adc
es
add
dec
adc
xchg
adc
lock
(bad)
hlt
push
sahf
repz
fnstenv
mov
xchg
or
sbb
inc
and
push
push
xor
xor
test
mov
mov
inc
sahf
jae
aas
scas
xor
icebp
jmp
clc
clc
retf
push
push
jmp
push
fbld
rcl
(bad)
jecxz
xchg
push
(bad)
push
call
jle
(bad)
not
pop
cs
cmp
cwde
pop
jmp
ins
stos
fisttp
push
int3
data16
or
dec
sti
or
xchg
(bad)
mov
mov
adc
mov
xchg
jmp
imul
loope
cmps
test
or
ja
inc
in
pushf
mov
daa
mov
mov
call
sbb
push
out
imul
and
out
cmp
mov
mov
dec
popa
adc
mov
or
movs
jae
ins
cmp
jmp
jmp
add
pop
shl
push
aas
mul
jl
shl
sub
sub
fild
sbb
lahf
shl
mov
shl
mov
aas
ror
cmps
shl
jmp
cmp
mov
cmc
aam
mov
into
movs
(bad)
mov
in
pop
mov
mov
mov
add
popf
xor
push
daa
sbb
repz
mov
inc
cwde
rcl
call
into
popa
push
mov
pop
inc
pop
xor
mov
sbb
pop
sbb
pop
xchg
popa
and
sbb
add
test
cdq
inc
xor
data16
scas
jge
or
push
add
jp
(bad)
cdq
adc
mov
jbe
jns
clc
popaw
lock
xchg
das
stos
jo
inc
mov
fadd
jl
adc
dec
add
out
sahf
rol
clc
aas
mov
aad
dec
imul
push
jp
ficom
loop
clc
jmp
mov
aam
adc
xor
sub
dec
lods
out
jnp
or
xor
dec
lods
test
inc
xor
jecxz
sub
mov
(bad)
outs
push
outs
xor
jecxz
ins
iret
fimul
enter
cwde
lock
xor
sbb
mov
pop
movs
pop
js
imul
dec
out
sahf
dec
or
and
push
cmp
adc
cdq
icebp
popa
fwait
sbb
retf
jl
sub
mov
push
jbe
inc
pop
xchg
add
xor
(bad)
rcl
shl
jecxz
xor
fstp
jmp
push
popa
loop
into
mov
movs
imul
xchg
movs
push
adc
jmp
mov
mov
in
cmp
mov
dec
inc
inc
pop
jg
js
and
stos
js
pop
xor
and
(bad)
fiadd
ror
xor
sbb
adc
fnsave
pop
popa
lock
jo
cdq
popa
dec
mov
movs
mov
(bad)
push
mov
cmp
add
add
mov
add
dec
cmp
repnz
or
dec
xor
mov
out
xchg
sub
mov
cmp
lea
xbegin
dec
or
sub
sbb
rcl
or
cdq
or
data16
fidiv
and
jns
fwait
inc
ds
dec
es
pop
xchg
mov
(bad)
pop
in
pop
rcl
jmp
in
aad
test
mov
sbb
fidivr
cmps
pop
push
mov
jae
retf
adc
iret
mov
jne
mov
aam
sbb
cwde
dec
xor
xchg
sbb
fiadd
mov
pop
shl
or
ins
sbb
aaa
fcomp
sar
out
mov
sar
cwde
adc
jl
pop
call
xor
push
aas
sbb
imul
sub
or
sbb
pop
push
xchg
mov
mov
add
int3
sbb
scas
mov
or
pop
xlat
mov
xchg
cs
push
xchg
rol
sbb
cmp
or
sub
push
shl
fisttp
scas
mov
inc
mov
cmp
add
mov
mov
in
(bad)
and
push
jbe
sar
xchg
xlat
sahf
imul
cmp
(bad)
sub
xchg
in
xor
out
neg
fincstp
add
pop
jg
aas
pop
jg
in
es
(bad)
and
es
or
jl
jae
add
adc
adc
adc
inc
adc
ss
cmc
push
xor
sti
mov
das
or
jmp
(bad)
in
jmp
rol
push
mov
xchg
ret
dec
xchg
ja
ror
mov
pop
push
pop
push
and
lods
adc
shl
daa
mov
dec
fist
out
pushf
lds
ffree
(bad)
call
or
in
dec
sbb
mov
scas
retf
mov
mov
cmc
xchg
into
mov
out
test
scas
in
lock
sub
xchg
sub
add
loop
aas
mov
xor
xchg
xchg
cli
sti
imul
and
les
enter
xor
adc
pop
or
xor
(bad)
mov
xlat
xchg
push
cwde
(bad)
push
daa
xchg
mov
xor
push
and
and
jmp
sub
into
mov
sub
push
int3
leave
(bad)
rcl
or
jle
cmps
push
and
xor
lea
mov
aam
cs
in
xchg
xchg
stc
add
dec
mov
lods
aam
jp
or
push
and
stc
push
mov
daa
fidiv
xchg
sub
ds
sbb
mov
in
fisubr
data16
mov
xor
jo
sbb
or
jmp
or
imul
sbb
xor
add
pushf
(bad)
push
jo
nop
(bad)
add
call
es
shr
adc
inc
test
int3
shl
mov
ret
mov
sub
lahf
mov
scas
retf
dec
adc
mov
sbb
jg
ins
call
ins
xchg
jg
ror
cld
and
shl
daa
in
xchg
mov
and
xchg
and
dec
jo
jl
lods
or
call
call
sub
(bad)
std
push
mov
cmps
call
mov
rcr
mov
pop
or
into
cli
bnd
js
mov
mov
xor
push
retf
in
inc
inc
fldenv
lahf
retf
push
mov
add
mov
sti
leave
pop
cmc
aad
imul
sbb
cdq
test
sub
fdiv
pop
mov
mov
fidiv
fldpi
inc
push
cmp
rcr
push
pop
(bad)
push
mov
sub
outs
mov
(bad)
mov
mov
xchg
push
xchg
pop
in
sub
jmp
rol
mov
inc
sbb
cmp
jns
call
ins
push
add
fdiv
xlat
ss
xor
dec
or
cmp
mov
in
push
iret
pusha
pop
sub
add
aad
fstp
inc
mov
xchg
add
pushf
mov
cmps
ja
test
push
pop
lea
pop
fstp
stos
scas
cmp
inc
and
push
scas
mov
sbb
xchg
or
mov
clts
jns
cmp
icebp
xchg
sub
pop
pop
inc
ins
cmps
dec
es
push
push
push
lds
fidiv
icebp
dec
mov
pop
pushf
push
mov
imul
je
arpl
test
mov
iret
inc
lods
test
jae
xor
ins
(bad)
sbb
fs
sub
dec
das
lods
xchg
and
int3
aam
jno
fsub
sahf
out
mov
stos
or
lock
std
hlt
pusha
(bad)
cld
mov
mov
xchg
bound
pop
fcomp
jmp
pop
and
inc
imul
jb
(bad)
xchg
sbb
ja
sbb
inc
mov
in
fs
jae
xchg
cs
cmps
addr16
xchg
push
mov
pop
mov
outs
mov
pop
push
ins
rcl
loope
sbb
fsubr
ficomp
sahf
ins
or
fmul
jge
xchg
cmp
mov
push
jbe
or
data16
jg
call
mov
ss
lods
repz
xchg
adc
sbb
push
sbb
fisttp
out
mov
adc
xor
or
sbb
(bad)
xchg
daa
stc
shl
shr
movs
xor
mov
je
mov
cmp
push
and
loop
inc
mov
xor
outs
ins
aad
mov
in
(bad)
div
fistp
hlt
mov
pop
sbb
test
cmc
adc
add
arpl
xor
sub
ret
mov
adc
inc
out
jno
icebp
xor
sub
mov
push
fwait
dec
jge
jae
or
daa
push
arpl
sbb
adc
hlt
dec
rol
mov
sbb
stos
ret
(bad)
ins
pushf
mov
mov
std
popa
sbb
pusha
(bad)
and
fcomp
and
sbb
(bad)
les
gs
adc
scas
ror
xchg
xchg
sub
call
sbb
test
cld
or
pop
adc
fiadd
ins
addr16
push
dec
adc
stos
rcl
xchg
jns
(bad)
dec
scas
dec
out
xchg
inc
adc
cli
sub
adc
retf
inc
jno
push
addr16
test
ins
mov
cld
movs
sti
hlt
fwait
mov
dec
xchg
adc
mov
or
shr
rol
mov
cmp
shr
fs
int
stos
cmp
fadd
xchg
es
or
ins
xlat
mov
dec
call
aaa
cwde
or
mov
iret
jb
daa
add
push
popa
call
mov
fsub
and
sub
stos
shl
sbb
cwde
push
mov
call
mov
mov
pop
repnz
push
movs
sahf
pop
mov
pop
xchg
sub
jmp
jmp
sub
dec
add
jae
fmul
pop
ja
dec
std
(bad)
sbb
jmp
mov
and
repnz
push
daa
inc
add
xlat
or
sub
jp
inc
daa
xchg
js
lods
lock
inc
xor
inc
hlt
(bad)
mov
shr
sahf
(bad)
pop
aaa
mov
in
popa
xchg
shl
mov
and
xchg
adc
jne
inc
mov
not
and
sbb
dec
adc
fild
call
icebp
pop
fs
and
shr
push
inc
mov
inc
in
punpcklbw
adc
jg
mov
(bad)
fcom
push
mov
pop
and
pop
or
retf
pop
pop
mov
adc
pop
(bad)
addr16
loope
push
daa
mov
test
mov
clc
add
push
outs
movs
adc
lods
jne
retf
sbb
es
es
mov
outs
or
addr16
(bad)
rcr
xchg
cmps
jg
jl
jge
lods
fadd
dec
movs
sub
push
sbb
stc
and
jne
iret
mov
mov
(bad)
int3
mov
imul
fbld
jl
(bad)
cwde
pop
xchg
add
retf
cmp
test
mov
jbe
add
mov
ror
dec
cmps
retf
jae
cs
add
outs
mov
jb
mov
push
mov
mov
aad
(bad)
dec
mov
sbb
pop
mov
icebp
adc
repnz
mov
gs
sub
jae
fcmovnu
adc
jne
fwait
jmp
jle
test
dec
xchg
inc
dec
add
(bad)
enter
imul
sub
imul
adc
add
pop
sub
xor
inc
out
mov
sub
frstor
sbb
mov
dec
shr
lahf
rol
pop
je
aad
cmp
adc
sbb
xchg
int
les
or
sbb
ins
xlat
xor
mov
icebp
mov
imul
test
mov
enter
add
adc
ret
xchg
mov
call
popa
fs
aad
xchg
test
rol
enter
xchg
scas
xor
jnp
les
je
mov
aam
pop
adc
jnp
pop
pop
jp
call
jecxz
pop
fmulp
iret
adc
sbb
(bad)
leave
inc
(bad)
out
xchg
jne
add
cmp
outs
cmp
sahf
mov
xor
je
mov
jg
dec
fld
lods
test
lods
and
(bad)
xor
push
and
in
es
add
xor
jg
cwde
in
in
lods
mov
imul
xor
test
adc
arpl
mov
xlat
cli
cmp
xchg
daa
and
xchg
sub
aam
mov
stos
(bad)
mov
arpl
inc
dec
xchg
sbb
push
push
inc
pop
lods
je
mov
repz
jmp
mov
xchg
cmc
ret
cmp
daa
les
ins
mov
imul
xor
inc
arpl
shr
test
bnd
cmps
popf
dec
sub
inc
neg
cmp
adc
arpl
(bad)
jne
stc
loop
stc
xchg
jo
inc
lahf
push
fld
cmps
cs
push
retf
cwde
jle
ins
sub
adc
push
mov
cmc
retf
mov
pop
xchg
mov
pushf
mov
arpl
nop
pop
les
fistp
test
mov
cmp
jb
add
jmp
mov
test
shr
push
aaa
ins
outs
mov
push
inc
cli
mov
shl
(bad)
sub
cmp
or
bswap
adc
pop
scas
mov
inc
mov
jp
popf
push
and
sahf
push
les
(bad)
iret
pop
lds
mov
and
mov
dec
int
fisttp
lock
sub
(bad)
mov
jae
out
add
enter
dec
dec
stos
push
xlat
loopne
rol
push
jg
das
cwde
in
lahf
data16
outs
lds
sbb
or
mov
push
cmp
cs
and
inc
mov
div
and
mov
cmp
fsubp
int
gs
xchg
mov
jo
loope
jmp
ins
or
out
inc
jnp
and
(bad)
adc
mov
sub
cwde
add
pop
dec
jb
pop
cs
(bad)
out
mov
in
jmp
add
cmp
or
push
mov
pusha
imul
xor
mov
inc
dec
cmp
sub
adc
cmp
mov
dec
mov
int
je
jb
dec
xor
inc
dec
push
mov
mov
out
movs
push
pop
shl
cmps
sub
out
jle
xor
mov
xchg
aaa
dec
fisub
stc
mov
jecxz
movs
enter
jp
inc
and
sub
fsub
pop
adc
shl
frstor
or
cld
mov
test
push
jge
aam
scas
push
and
pop
retf
test
aaa
out
mov
rcr
sub
fwait
cmp
add
push
movs
sahf
stos
inc
es
cld
pop
mov
and
and
jns
add
mov
pop
xchg
scas
cmp
(bad)
or
repnz
mov
arpl
out
jmp
clc
out
enter
cmp
out
(bad)
mov
shl
sbb
dec
mov
pop
fsubp
lahf
jecxz
fild
mov
dec
jae
ret
cmp
imul
loope
adc
push
dec
lods
xchg
stos
out
dec
in
(bad)
adc
scas
call
pop
or
popa
sbb
push
xor
sub
outs
jle
neg
pop
mov
cdq
cwde
push
ins
scas
bound
pop
inc
cmp
inc
fsubp
sbb
cmp
std
lock
(bad)
fdivr
jno
push
fidiv
mov
jo
or
pop
dec
gs
push
daa
inc
jns
fwait
mov
(bad)
hlt
fwait
das
dec
pusha
aaa
cdq
sub
jp
mov
jmp
xor
in
lods
lea
jecxz
sahf
nop
inc
int
sbb
push
retf
fcmovne
mov
ror
sub
lock
scas
daa
lahf
fidivr
cmp
shl
jmp
icebp
jns
push
rol
stos
push
adc
in
test
fs
xor
mov
cs
scas
jns
jnp
add
arpl
enter
(bad)
enter
sub
inc
scas
into
std
dec
and
arpl
inc
movs
sbb
fistp
xchg
addr16
test
js
jg
cmp
(bad)
dec
adc
or
call
out
add
iret
cmps
push
fucom
add
sbb
scas
(bad)
lahf
jecxz
sti
shl
ins
sub
hlt
ins
loope
in
cmp
sahf
pop
pop
xchg
cmp
out
(bad)
xor
(bad)
fnstsw
mov
sbb
pop
(bad)
leave
test
mov
imul
pop
fidiv
adc
push
movs
xchg
in
pushf
lea
pushf
call
cmp
pop
je
pop
mov
test
jo
mov
jns
cmps
fldcw
fisubr
xor
xchg
fcom
sub
mov
outs
adc
xor
dec
icebp
out
adc
mov
loope
scas
dec
out
add
jp
push
push
int
xchg
imul
sbb
test
add
push
js
ins
xor
fdiv
into
pop
movs
jl
xchg
jp
push
mov
xor
dec
jl
pop
cmps
(bad)
sub
fisub
xlat
push
gs
popf
sbb
cli
loopne
mov
icebp
lods
into
out
mov
out
jle
and
shl
fdivr
add
(bad)
mov
mov
cmp
mov
rcl
xor
pop
lock
mov
cmp
aas
shl
pop
popa
dec
movs
jns
(bad)
cdq
cmps
scas
jbe
int3
ins
sahf
scas
pop
loope
ja
lods
(bad)
cmp
out
adc
in
xor
bound
lods
or
(bad)
sub
sub
fbld
stos
or
xor
fcompp
jbe
add
mov
retf
pop
push
(bad)
mov
xchg
xchg
icebp
push
push
jg
push
das
push
mov
mov
imul
shl
dec
sbb
popf
movs
das
jns
in
das
add
dec
add
mov
or
arpl
aas
adc
pop
sar
cld
stc
in
jne
inc
gs
outs
pop
mov
scas
sbb
xor
and
outs
setge
rcl
in
mov
or
fisttp
lods
mov
fbstp
sbb
push
loop
xor
ds
lods
adc
mov
retf
mov
stos
inc
and
ret
push
bound
fdivrp
cmc
clc
not
mov
cwde
sub
jns
sbb
xchg
adc
cmp
fidiv
in
jl
inc
cdq
jl
mov
sar
outs
and
retf
mov
xchg
leave
xchg
xchg
movs
push
shl
call
push
(bad)
fwait
mov
add
fidiv
and
xor
adc
in
jmp
and
xchg
cmp
in
and
push
lds
push
mov
into
mov
jp
cdq
xchg
adc
out
xor
(bad)
(bad)
in
mov
test
lods
das
mov
sbb
aaa
call
out
xor
or
iret
push
popa
pop
pusha
cmp
jno
and
jne
arpl
les
hlt
in
jo
loop
jno
jne
xchg
xor
rcl
pop
ffree
shr
add
inc
pop
lods
ins
inc
mov
inc
mov
hlt
xchg
popa
shl
(bad)
cmp
jle
push
mov
xchg
cwde
(bad)
retf
pop
and
xor
hlt
jns
or
jo
inc
ja
jne
fwait
aad
ret
push
ds
inc
jge
push
jmp
sub
pop
sar
call
std
aam
xchg
mov
xor
and
jnp
xchg
cmp
and
xor
xor
out
fcmovnbe
pushf
nop
ja
push
leave
shl
mov
cmc
dec
mov
sbb
mov
jge
xchg
movs
das
pop
sbb
and
shl
pop
lahf
jmp
or
in
cmps
xchg
imul
jne
push
mov
sub
sbb
test
out
xor
push
cmps
sbb
shr
in
ja
jp
push
loop
lds
cmp
cld
sti
sub
test
mov
jmp
push
xor
pop
mov
or
mov
test
scas
inc
fldl2t
mov
mov
jmp
or
add
mov
fst
inc
outs
aas
inc
pusha
mov
dec
ss
mov
inc
jl
push
jbe
xlat
lods
sahf
inc
inc
cmp
arpl
mov
xchg
jmp
mov
jecxz
popf
sbb
or
jge
lea
call
jae
cdq
jl
test
in
cs
cli
lods
in
mov
div
push
and
daa
jg
pusha
sub
jno
ins
xchg
dec
lahf
and
sbb
aad
xlat
repz
js
xchg
dec
push
adc
adc
repnz
pop
(bad)
ffreep
push
mov
leave
push
test
xor
dec
jmp
xor
sbb
cmp
int
aad
jnp
and
scas
scas
loop
loope
mov
jb
mov
xor
mov
cmp
(bad)
stos
jg
lock
jns
jge
std
sub
push
sahf
and
pushf
sub
sub
cmps
jbe
scas
sub
jl
pop
fucomi
pop
inc
cmp
lods
adc
loope
adc
out
pop
xchg
idiv
xor
cmp
sahf
rcl
out
or
scas
loop
in
popf
ss
pop
mov
push
pop
mov
or
jae
inc
les
fwait
in
cmc
in
or
movs
pusha
push
mov
ja
popa
jl
out
xchg
push
jecxz
mov
outs
test
ret
leave
mov
stos
pop
and
pushf
mov
test
aaa
jo
(bad)
test
mov
jmp
mov
enter
inc
cmps
fistp
or
repnz
mov
mov
sahf
xchg
into
jbe
mov
push
push
xchg
xchg
pusha
lds
cmp
sbb
clc
les
rol
cmps
xchg
out
jo
scas
not
rcl
mov
fs
push
mov
adc
add
adc
mov
inc
pop
push
js
movs
rcr
or
cld
push
and
iret
cmps
scas
or
push
jp
vpmadcsswd
xor
mov
lds
or
lods
mov
mov
jl
ins
pop
retf
dec
js
ins
rcr
fsubr
fcmovnb
add
popa
imul
xlat
movnti
cmp
add
scas
out
or
or
mov
pop
shl
gs
adc
cwde
cmps
pop
cmp
lea
cmp
shl
(bad)
jmp
iret
add
adc
test
and
push
push
dec
(bad)
jae
in
xchg
dec
xor
dec
dec
dec
sahf
xchg
movs
cmps
loopne
ins
iret
es
movs
mov
and
adc
mov
xchg
add
test
fs
xchg
xchg
adc
imul
movs
pop
and
in
sub
dec
ret
mov
clc
punpcklbw
jl
imul
jo
lds
jae
mov
jmp
xchg
fisttp
cld
icebp
sub
mov
call
cmp
sub
gs
mov
fistp
jge
call
xor
out
and
mov
jbe
js
fst
xchg
cmps
mov
fs
ss
lahf
mov
push
mov
mov
repnz
add
inc
xor
dec
ins
pop
jl
sahf
pop
rcr
or
inc
cmps
arpl
cmp
dec
(bad)
jle
cmps
jecxz
add
sti
outs
dec
retf
xchg
add
push
das
scas
add
xchg
or
stos
mov
mov
cmps
xor
mov
fnstcw
xchg
or
daa
or
mov
adc
cli
fild
fs
in
xchg
fist
push
push
jo
out
jle
and
push
cdq
out
push
mov
jnp
sti
iret
sub
mov
xor
push
cmp
loopne
outs
push
outs
jmp
ins
pop
mov
add
in
xor
pop
(bad)
shl
loope
inc
out
sub
js
add
into
push
mov
(bad)
in
bound
fidiv
jmp
mov
test
es
pop
mov
sti
xlat
jl
xor
inc
repz
lods
jmp
fwait
adc
mov
pop
xchg
xchg
add
ror
loopne
out
arpl
ret
icebp
fiadd
or
ss
cmp
jmp
inc
ficomp
call
cmp
stos
out
cmps
xchg
fisttp
dec
or
add
(bad)
rcr
iret
in
dec
jno
aam
imul
movs
jg
pop
lds
sahf
adc
jne
ret
and
or
sub
fnsave
xchg
daa
inc
lock
std
sbb
inc
mov
mov
and
scas
lahf
icebp
lods
mov
(bad)
inc
cmps
repnz
cmps
push
dec
add
(bad)
test
jnp
in
and
mov
and
sbb
sub
mov
out
push
stc
or
dec
loope
or
sub
mov
jle
test
mov
cmp
pop
pushf
cmp
xor
ss
ret
push
imul
scas
fldenv
mov
cmp
xor
ficom
arpl
iret
test
push
dec
leave
ss
xchg
mov
inc
neg
int
push
mov
pop
sub
call
pop
xor
loop
enter
ds
fsubr
sub
sub
inc
mov
push
mov
inc
scas
jg
cmp
sub
pop
push
aad
adc
out
lds
xchg
xchg
adc
(bad)
in
outs
retf
fldenv
sbb
enter
pop
push
cld
mov
cdq
loopne
xor
push
arpl
(bad)
adc
mov
daa
cld
jnp
(bad)
fiadd
xor
add
cmps
enter
and
xlat
pop
retf
int
not
pop
rcr
in
outs
dec
mov
jmp
or
push
jp
jns
rcl
pop
add
xor
add
dec
sti
adc
test
add
mov
fwait
les
dec
ss
pop
inc
jo
and
xchg
mov
sub
jle
jns
(bad)
mov
scas
xchg
aam
xor
sbb
xchg
stos
dec
cmp
or
loope
clc
and
jnp
pusha
cmp
retf
je
mov
addr16
(bad)
or
dec
leave
cmp
mul
jl
mov
(bad)
xchg
xlat
int3
lods
inc
xlat
shl
das
adc
fwait
leave
dec
and
adc
adc
xlat
and
inc
dec
jno
outs
int3
mov
push
loop
lea
push
jnp
and
jae
aad
retf
jno
test
cmp
lods
out
fcmovnu
lods
(bad)
dec
es
dec
add
pop
mov
sbb
pop
push
loope
nop
sbb
dec
sub
xchg
mov
mov
test
and
ffreep
sub
loop
and
pop
add
or
arpl
mov
les
nop
push
sahf
xchg
push
fs
out
std
mov
inc
cmp
inc
stc
cwde
mov
jmp
jne
sbb
(bad)
xchg
xor
adc
stos
out
outs
or
sahf
nop
cmps
shl
push
int3
cld
in
iret
sbb
or
add
loope
ins
jmp
pop
mov
dec
pop
or
adc
cs
add
std
add
out
bnd
sti
arpl
test
or
sub
or
cmc
dec
push
inc
xor
cmps
mov
dec
inc
loop
movs
push
loope
cmp
movs
jmp
rcl
jae
int
mov
pop
and
fisttp
xor
int3
add
push
xchg
out
daa
daa
cdq
jbe
or
mov
sub
clc
sar
sti
push
push
clc
aad
adc
test
call
jle
xchg
es
outs
pop
dec
sub
rol
imul
int
push
clc
sbb
sti
push
or
mov
mov
imul
xor
cli
cmp
or
cdq
cmps
lds
sub
pop
and
fs
ins
ret
in
mov
dec
jp
mov
std
hlt
dec
repnz
fcom
xor
mov
ins
push
rol
clc
fsub
std
mov
mov
dec
push
cld
push
jge
pop
ror
dec
push
loopne
sbb
and
ds
pop
inc
sub
ficom
push
pop
enter
mov
out
mov
cmp
adc
sub
push
adc
fdivrp
jno
xchg
cli
(bad)
push
dec
outs
pop
arpl
mov
popa
sub
enter
shl
push
int3
cmp
jg
adc
cmp
adc
shr
push
cld
push
ins
adc
jge
jp
ins
or
and
retf
sbb
idiv
js
jge
repnz
mov
cdq
dec
inc
retf
jbe
mov
or
fldcw
push
(bad)
jnp
push
push
pop
pop
jb
add
inc
cmp
and
adc
stos
(bad)
fmul
in
pop
call
into
fmul
pop
(bad)
out
mov
cmp
jmp
scas
outs
dec
mov
dec
imul
sub
cmps
fs
imul
dec
jle
enter
aam
adc
and
lock
retf
ret
daa
xor
fwait
loopne
xchg
mov
arpl
add
jge
(bad)
stos
mov
or
pop
push
cld
jmp
popf
cli
add
pushf
popf
mov
(bad)
sbb
cmp
fcmovnbe
popf
cmp
jg
test
repz
dec
add
sub
jne
jns
out
sub
adc
out
test
or
int
push
cmp
call
push
test
and
sbb
scas
pop
out
mov
repz
fwait
mov
pop
(bad)
push
sbb
int3
fcmovu
mov
stc
test
arpl
mov
(bad)
add
xchg
jge
sub
fst
pop
sbb
push
leave
and
les
and
test
sbb
jo
(bad)
mov
lds
retf
push
sub
xlat
cmp
xor
inc
sub
mov
fwait
or
pop
jne
push
loop
adc
pop
xchg
int
mov
dec
cmp
les
ins
push
pop
movd
mov
loopne
adc
xlat
push
and
xchg
sbb
iret
repnz
sbb
cld
xchg
cmp
lods
stc
shl
push
shr
adc
(bad)
cdq
fld
push
(bad)
mov
movs
mov
ret
add
push
scas
fcom
pop
mov
push
scas
shr
jmp
mov
ret
pop
ja
div
xor
jo
mov
jmp
or
lods
repnz
aam
dec
outs
and
shr
dec
cmp
mov
cmp
sub
pop
dec
jmp
fisubr
addr16
jo
retf
xor
outs
fsub
loope
ret
sub
jbe
pop
popa
inc
adc
xor
cmp
sbb
stos
hlt
mov
xor
pop
and
xchg
ds
mov
push
dec
xchg
stos
stos
call
cmp
imul
dec
or
and
sbb
(bad)
cmps
mov
pop
in
or
xlat
sub
mov
dec
dec
xor
addr16
cdq
es
mov
xchg
in
mov
icebp
les
or
inc
popa
xchg
or
lods
add
arpl
dec
adc
cmps
xchg
mov
sub
les
fwait
sub
cli
add
mov
or
mov
push
stos
cdq
call
xor
mov
in
cmp
jmp
dec
shr
fld
call
add
lods
mov
stc
mov
repnz
inc
jp
inc
add
and
lea
xor
stc
pop
movs
and
and
jecxz
int3
or
push
retf
out
sub
test
aad
bt
push
repnz
movs
out
dec
inc
lds
sbb
dec
fucomi
stos
int
loope
push
cmc
pop
mov
rol
loop
test
aam
ror
int3
sbb
push
xchg
js
push
ror
inc
pop
hlt
sar
cdq
sbb
retf
movs
std
mov
or
inc
push
fwait
or
outs
adc
aaa
mov
cli
pop
jmp
(bad)
adc
in
xchg
retf
addr16
jmp
pop
popf
jp
pop
ret
sub
sub
push
sahf
sahf
fild
out
retf
mov
shr
test
(bad)
cmc
sti
movs
jnp
js
mov
push
daa
jbe
das
lock
sub
xlat
rol
mov
pusha
fisub
ror
in
movs
jecxz
ret
retf
dec
sub
in
idiv
cmp
dec
pop
xchg
push
loopne
sub
pop
or
dec
mov
xor
rol
xor
pop
mov
fistp
or
shl
inc
or
int
mov
jecxz
imul
cmps
ret
inc
push
push
adc
or
jae
xlat
sub
jb
xchg
neg
inc
mov
pop
mov
loop
jg
dec
mov
mov
out
rol
out
inc
in
jns
inc
push
movs
repz
imul
ds
jl
push
mov
aas
stos
in
fisttp
adc
scas
mov
stos
ret
cmps
and
ret
pusha
dec
sbb
js
movs
cmp
adc
add
push
xchg
jl
push
retf
sbb
jb
dec
cdq
cmp
out
push
add
test
cmp
jns
out
fwait
inc
adc
mov
and
jno
inc
test
sti
es
adc
adc
in
mov
push
lea
mov
sbb
mov
push
inc
push
scas
in
or
and
sbb
xor
inc
jp
fld
fs
mov
iret
cmp
lods
or
pusha
lock
xchg
sbb
pop
loop
leave
mov
retf
mov
inc
ja
and
jnp
stos
inc
repnz
icebp
popa
mov
jb
loope
xchg
jmp
aad
sub
cmps
mov
and
test
loop
push
pusha
push
frstor
addr16
mov
scas
lahf
pop
dec
hlt
sub
div
pop
add
push
adc
div
mov
add
cmp
fimul
cld
fistp
dec
adc
in
pop
xchg
push
cmp
lahf
bndstx
stos
js
or
pushf
sar
dec
xchg
sar
xadd
mov
xchg
jns
ss
cld
mov
inc
push
rcr
mov
dec
dec
pusha
outs
(bad)
jmp
cmps
aam
adc
cmp
lods
mov
shr
mov
xchg
xor
or
dec
mov
aam
imul
jbe
xor
in
ins
popf
sti
or
repz
movs
push
push
jp
xor
ret
push
sub
in
hlt
mov
cmps
lea
inc
aad
cwde
ficom
adc
fidiv
xor
mov
pop
mov
push
push
jae
pop
mov
pusha
popa
mov
adc
ins
jl
cmp
sub
jb
popa
add
mov
dec
test
jnp
scas
lods
sbb
das
pop
mov
add
repz
cmp
sub
je
xor
test
loope
test
lds
jae
(bad)
pop
mov
daa
pop
repz
addr16
pop
mov
add
jmp
xchg
sbb
adc
dec
cmc
xchg
mov
push
retf
bound
xchg
adc
gs
lea
sbb
jbe
sti
push
push
nop
push
push
push
xor
popf
xor
jae
das
dec
pop
mov
dec
cmp
nop
test
js
data16
cmp
pop
and
or
scas
aaa
ss
das
outs
in
add
jb
inc
out
lahf
bound
inc
in
add
shl
mov
rcl
mov
or
mov
dec
mov
push
mov
fnstsw
shr
push
dec
mov
(bad)
std
inc
mov
sub
jge
cmp
add
movs
push
mov
and
aas
jnp
xor
mov
inc
fsub
inc
cwde
add
repz
mov
fadd
adc
mov
movs
div
imul
jo
sbb
or
nop
sbb
jae
ins
sub
div
rcl
neg
fs
inc
dec
add
in
test
dec
push
dec
pop
stos
jg
or
mov
adc
test
sub
mul
pop
scas
stos
fidiv
and
and
adc
test
pop
popa
clc
addr16
adc
out
ja
jle
xchg
cld
out
mov
pushf
shr
and
retf
add
gs
adc
add
loop
fs
xchg
outs
mov
or
call
cwde
mov
je
icebp
xchg
sbb
push
ss
mov
mov
std
imul
and
aaa
mov
out
or
adc
in
jp
pop
inc
leave
jo
(bad)
adc
fild
and
(bad)
fadd
mov
jnp
enter
sbb
add
xor
les
mov
rcr
lock
ins
xchg
outs
bndldx
or
fld
jecxz
icebp
repnz
sar
stos
das
push
push
add
dec
push
mov
cmp
fcmovbe
(bad)
fist
jbe
jecxz
dec
mov
xor
das
fwait
fwait
dec
dec
inc
sti
mov
bound
cmp
call
mov
or
push
jg
add
mov
fld
mov
sub
shr
adc
dec
pop
cmp
mov
dec
mov
stos
and
pop
imul
std
mov
imul
loopne
mov
in
test
sahf
inc
mov
jo
mov
fnstenv
jne
adc
pop
xchg
sbb
xchg
aam
lods
mov
cmp
and
add
inc
mov
jns
nop
popf
or
jmp
lods
scas
scas
pop
inc
push
movs
dec
scas
lods
(bad)
call
lea
sbb
adc
leave
jb
push
xchg
or
cdq
cli
sbb
jecxz
test
ins
mov
scas
sti
push
std
adc
popf
xchg
out
arpl
ret
jle
cdq
rol
and
add
ja
retf
add
inc
xchg
pusha
int
fstp
and
or
test
jp
dec
mov
mov
jnp
jge
jl
sbb
xchg
ret
jno
ficomp
mov
out
push
shl
jno
mov
loop
popf
movs
mov
xor
jae
ror
out
adc
hlt
outs
cli
out
test
cmp
dec
cld
fwait
jae
adc
xchg
jb
mov
es
mov
add
add
fstp
ror
mov
jne
adc
mov
lods
cmc
mov
in
push
push
sub
pushf
xchg
mov
icebp
jns
dec
rcr
shl
pop
arpl
and
popf
dec
pop
sub
mov
add
mov
arpl
ins
cwde
fld
jmp
lods
jle
fndisi(8087
or
(bad)
in
push
enter
rcr
xor
inc
fwait
cli
mov
mov
in
push
sub
cdq
add
inc
adc
cmp
std
sub
xchg
(bad)
imul
sub
pop
pop
repnz
cmps
cmp
nop
inc
pushf
vcvtss2si
push
or
pop
xlat
xchg
js
loop
nop
ds
mov
jnp
mul
sti
test
clc
loopne
popf
and
out
push
aaa
test
jo
or
xchg
jne
push
sub
stos
ds
or
cmp
pop
nop/reserved
jmp
fidiv
fs
xchg
sar
mov
rcr
outs
std
and
addr16
scas
jp
dec
test
out
adc
ins
enter
int
outs
in
mov
pop
imul
xor
mov
mov
fisubr
sub
jbe
dec
jne
or
push
mov
xchg
or
pop
popa
test
rol
inc
jae
bound
add
lock
xchg
xor
adc
arpl
(bad)
push
les
sti
sub
es
push
pushf
retf
pop
jmp
jg
inc
lds
ja
sbb
ds
sub
cmp
(bad)
pop
push
pop
sub
inc
sbb
push
das
adc
jnp
inc
(bad)
jb
retf
nop
pusha
dec
shl
mov
rol
mov
imul
add
push
jmp
cmp
dec
in
lock
aam
push
push
sub
push
xor
push
(bad)
push
cmp
mov
addr16
xor
cmp
jns
dec
add
sub
clc
xchg
push
mov
jle
pop
or
stos
or
(bad)
adc
cmp
scas
and
ret
movs
cmc
lods
mov
out
lods
test
xchg
jge
xor
cld
mov
repnz
push
int3
arpl
jb
mov
retf
fld
add
mov
popf
call
add
jo
lods
inc
popa
fadd
jb
cld
add
retf
in
push
stc
adc
and
stos
int
scas
(bad)
daa
imul
sbb
stc
mov
xor
into
add
add
xor
imul
inc
clc
sub
lea
ret
dec
dec
fmulp
mul
dec
and
inc
add
jno
jbe
and
inc
jnp
repz
and
jns
mov
and
outs
jg
add
pop
in
jmp
adc
xor
or
adc
or
(bad)
jp
shr
fs
jp
mov
clc
xchg
adc
add
scas
xchg
mov
shl
mov
cdq
inc
xchg
(bad)
fsubr
es
mov
dec
xor
pop
jns
and
jecxz
and
inc
sub
jge
or
arpl
or
adc
sub
aas
sbb
lock
ds
mov
fcomp
daa
jl
and
scas
inc
add
or
test
sti
out
xor
jno
(bad)
xor
push
and
inc
mov
or
test
dec
int
pop
push
inc
lods
adc
adc
push
add
xchg
push
pop
or
and
int
or
movs
and
or
xchg
cmps
rcl
shl
xor
xor
pop
mov
sbb
xchg
jp
ja
and
scas
adc
rcr
fadd
ret
js
add
nop
ja
stos
(bad)
dec
aad
push
repnz
xor
xor
loope
(bad)
mov
into
cmp
jae
mov
js
aas
and
and
sbb
inc
daa
mov
adc
sbb
cs
mov
div
aaa
mov
push
shr
mov
lods
call
(bad)
push
dec
clc
retf
loopne
pop
jecxz
(bad)
lea
dec
xchg
data16
pop
sahf
xchg
pop
adc
das
js
pop
push
fidiv
mov
aaa
shr
inc
test
fcmovb
or
fdivr
es
scas
addr16
cdq
fnstcw
clc
int3
dec
mov
jmp
xchg
jae
leave
or
xchg
fmul
pop
add
dec
nop
mov
jmp
and
fsubp
add
popf
xor
scas
push
xlat
mov
dec
popf
call
fisubr
pop
lock
hlt
adc
gs
jmp
cmp
pop
inc
mov
test
mov
mov
ins
dec
push
adc
dec
cmp
test
shr
or
fstp
dec
test
scas
movs
cmps
and
fwait
mov
cmp
jns
aad
pop
sub
ror
add
jl
out
or
sbb
mov
and
dec
xor
daa
mov
jp
or
ds
loop
das
lock
sbb
jmp
mov
ss
xchg
mov
in
sbb
dec
movs
sub
or
pop
mov
mov
std
cld
sar
sbb
iret
dec
pop
push
call
mov
test
or
fldenvw
out
sub
test
(bad)
mov
adc
lods
sub
push
cmp
sub
mov
mov
xchg
or
fistp
ret
adc
dec
jl
int
outs
(bad)
imul
push
add
adc
jmp
ret
and
int3
dec
mov
mov
lods
cmps
sub
outs
inc
sbb
mov
inc
or
push
leave
mov
inc
mov
or
jb
(bad)
jmp
xchg
enter
xor
ficom
dec
scas
xor
in
dec
pop
dec
ret
icebp
cld
adc
pop
cdq
mov
dec
mov
addr16
add
jp
nop
xor
xor
out
jo
sbb
xchg
sub
call
idiv
les
or
out
adc
xchg
sub
repz
dec
xchg
pushf
xor
enter
sbb
jg
mov
inc
sub
jo
push
fcmovu
dec
mov
call
fsubr
test
or
ss
rcl
dec
add
(bad)
fsubr
out
aas
jmp
adc
(bad)
loop
inc
or
push
add
loopne
int3
cmp
push
out
fwait
leave
add
enter
rcl
ins
imul
push
cld
ins
bound
movs
jge
outs
fild
add
iret
mov
ds
xchg
or
or
pop
xchg
and
push
stc
scas
sahf
pop
fs
push
mov
div
shl
scas
ins
int3
jmp
pop
retf
je
and
clc
and
dec
aam
into
out
sbb
shr
rcl
jno
popa
shl
inc
inc
sbb
test
ds
dec
inc
add
fdiv
mov
test
or
sub
sar
mov
mov
popf
stc
cmc
in
xor
adc
dec
mov
hlt
jmp
jmp
inc
push
xor
dec
and
cmps
jl
rcr
cmp
jb
aad
mov
outs
ss
movs
(bad)
sbb
cmps
leave
pop
mov
add
jns
push
fiadd
(bad)
sub
push
scas
ficom
js
stos
pop
pop
and
adc
mov
(bad)
int
imul
mov
push
inc
mov
loopne
add
push
or
push
test
and
xchg
lds
cmp
xchg
inc
cmp
(bad)
and
ret
pop
dec
push
xchg
dec
mov
dec
sub
push
and
out
(bad)
sub
out
mov
and
xchg
pop
stc
mov
jecxz
sbb
jne
(bad)
mov
cmp
xchg
popf
fld
jp
push
xchg
xor
fidiv
aaa
adc
push
jmp
pop
push
xchg
jns
lock
sbb
xchg
pop
aam
mov
lods
adc
repnz
xchg
stos
cmc
sub
dec
dec
add
imul
add
ja
iret
popa
shl
or
out
xor
add
dec
jmp
mov
aad
loope
hlt
dec
or
mov
push
out
cmc
repz
cli
test
and
test
wbinvd
add
mov
inc
mov
xor
sbb
xchg
pop
xchg
sub
fadd
call
hlt
sub
inc
xor
cmc
fst
jbe
pushf
iret
je
fs
retf
scas
inc
out
dec
lahf
fbld
mov
outs
xchg
pop
imul
mov
clc
outs
mov
(bad)
mov
aad
pop
sub
mov
ins
call
fcomp
xchg
test
adc
into
daa
push
adc
sar
es
xchg
cld
push
mov
mov
repnz
pop
dec
jnp
gs
scas
dec
dec
idiv
repz
and
ins
outs
addr16
nop
cmp
adc
das
xor
rol
in
fsub
jnp
in
jne
jb
mov
imul
sub
xchg
lahf
lea
or
pop
mov
xchg
movs
jecxz
addr16
inc
sahf
popa
jae
cmp
xor
adc
stc
cmp
sub
adc
lahf
jnp
aam
inc
inc
cmps
int
xchg
stos
ja
mov
int3
sbb
rcl
test
inc
popa
adc
adc
into
mov
ins
ror
or
add
ret
ds
(bad)
jb
jae
adc
sbb
xchg
push
in
mov
mov
dec
push
inc
xor
lods
pushf
and
pop
dec
sbb
pusha
int
xchg
dec
lea
mov
cmp
retf
movs
or
push
and
xor
mov
fild
adc
lea
jp
xor
push
push
call
adc
dec
cmps
push
aaa
add
leave
out
push
pop
ret
ins
fwait
mov
xor
clc
adc
ror
cmp
inc
jmp
pusha
cmc
retf
fimul
push
add
inc
sub
lods
in
cmp
ret
or
add
cmp
sbb
aas
(bad)
lods
not
sbb
dec
pop
repnz
mov
xor
pop
popa
or
(bad)
xchg
(bad)
aaa
mov
mov
jmp
mov
scas
(bad)
sub
(bad)
(bad)
adc
jmp
clc
ins
jp
aam
enter
daa
xor
stos
shl
addr16
icebp
mov
fisub
movs
jne
nop
mov
inc
(bad)
xchg
mov
jp
mov
cmps
sahf
rol
pop
retf
mov
and
xchg
test
(bad)
loop
sub
cwde
inc
mov
mov
sbb
shl
mov
sub
sti
ror
xchg
add
cmps
or
jmp
fidiv
pop
cmc
push
adc
ror
mov
retf
xchg
adc
add
sbb
mov
mov
mov
(bad)
shl
call
mov
mov
ffreep
ins
xor
aaa
cmp
sub
jne
cmp
nop
adc
inc
aaa
mov
push
and
mov
xchg
push
dec
jae
jo
rcl
icebp
mov
push
xlat
cmp
xor
outs
inc
fidiv
jmp
cmp
test
loope
sbb
(bad)
cs
popa
dec
fcom
cmp
push
loope
(bad)
retf
xchg
stos
bound
outs
retf
push
cmps
inc
sub
xor
push
call
movs
mul
jae
mov
call
loopne
lods
push
cld
in
aas
adc
adc
jae
arpl
clc
mov
push
pop
pop
(bad)
adc
outs
gs
pop
mov
adc
mov
std
pop
mov
xchg
icebp
popa
data16
push
jb
pop
das
fstp
jb
fimul
cmp
test
repz
jns
(bad)
ins
xor
xchg
movs
or
jno
dec
adc
push
out
mov
fwait
hlt
pop
ficom
cmp
(bad)
mov
shl
push
mov
and
xor
cs
call
aad
jmp
shl
lods
jge
mov
and
xor
add
fist
push
and
mov
ja
(bad)
and
push
adc
xchg
stos
mov
adc
push
fldcw
jae
retf
sbb
and
(bad)
mov
pop
xchg
(bad)
push
fidiv
ja
inc
or
mov
call
bound
push
out
or
mov
in
xchg
stc
sbb
fs
lods
dec
in
loope
cs
push
mov
push
int3
not
test
test
and
jns
pushf
push
or
ins
cmp
fnsave
je
sbb
mov
loope
xor
sti
sbb
or
shl
cmp
xchg
mov
adc
xor
dec
das
mov
imul
(bad)
mov
loopne
stos
jle
fiadd
nop
xchg
in
jo
mov
int3
add
repz
js
mov
test
sbb
push
in
and
test
add
pop
xchg
xchg
mov
jbe
lahf
mov
mov
cmps
and
rcl
fisub
jnp
mov
lods
inc
lock
data16
mov
push
mov
je
(bad)
jmp
pop
xor
test
xchg
mov
mov
(bad)
ja
cmc
adc
cmp
fisubr
jo
xor
(bad)
push
outs
xor
arpl
adc
pop
sub
mov
test
ret
xchg
sub
inc
rol
in
dec
cmps
mov
das
ins
enter
push
jb
cmps
int
xor
fisub
popa
aaa
clc
inc
sbb
sbb
(bad)
mov
lea
jmp
pusha
jmp
pop
add
xlat
sti
es
add
ja
adc
xchg
or
xchg
xchg
(bad)
sbb
test
outs
popa
scas
inc
push
clc
or
lahf
icebp
cmc
out
cmp
add
fcmove
arpl
xchg
ffreep
xchg
xor
inc
loope
push
bound
mov
ret
xchg
add
or
dec
repz
test
sbb
(bad)
mov
gs
mov
inc
jmp
pop
xor
and
std
out
xor
cmp
and
or
and
(bad)
cwde
aad
xchg
popf
sbb
jmp
mov
push
gs
and
pop
fwait
popa
nop
push
cmps
adc
shl
(bad)
xor
cmp
push
add
dec
ins
repz
push
inc
mov
in
push
aam
(bad)
jp
and
rcr
xchg
xchg
mov
mov
fdiv
jl
mov
loopne
data16
dec
test
jo
pop
inc
ins
call
mov
or
inc
jg
(bad)
div
push
pop
inc
push
int
sbb
add
repnz
and
inc
call
div
imul
ss
jge
mov
mov
loope
and
out
mov
int3
daa
mov
push
mov
xchg
and
ds
std
cmps
xchg
cli
shl
ror
mov
sbb
nop
xchg
push
pop
jg
daa
dec
arpl
mov
in
fcmovbe
inc
std
iret
cmps
imul
test
jae
dec
(bad)
xchg
xchg
test
fst
mov
mov
not
retf
sub
push
cmps
dec
mov
outs
push
js
cmp
call
or
mov
dec
mov
into
mov
dec
sub
loope
sub
cmp
or
pop
(bad)
sar
mov
ror
fiadd
out
pop
and
fldcw
push
hlt
es
nop
xchg
jl
mov
cmp
add
adc
stc
and
sub
sub
dec
cmp
push
push
sar
sub
inc
mov
inc
jmp
mov
scas
xchg
jo
leave
lods
adc
nop
cmp
cmp
add
xchg
jns
fild
add
push
pop
cmp
and
xor
add
sbb
push
hlt
pop
hlt
push
out
int
shl
or
cmp
mov
jge
or
inc
frstor
jecxz
add
sbb
in
(bad)
sti
or
loop
jmp
sub
and
fld
cmps
fisub
push
mov
pop
mov
aam
mov
into
mov
repnz
dec
mov
and
adc
jp
mov
es
jl
add
fnstsw
pop
cs
adc
jecxz
test
push
and
jbe
fs
push
movs
add
rcr
inc
dec
gs
addr16
shl
pushf
or
add
js
iret
test
out
test
std
cmp
daa
cmp
in
mov
cmp
fdivr
mov
sub
adc
inc
jns
sahf
(bad)
adc
ds
outs
jp
dec
in
leave
cmps
cli
cmps
or
es
and
jge
inc
adc
inc
call
aas
jge
sub
fcomp
mov
sub
out
shl
arpl
rol
iret
movs
xlat
or
xchg
enter
pop
push
push
pushf
fisubr
xor
enter
scas
add
add
loope
nop
push
cmp
movs
rol
les
xchg
jno
retf
mov
loop
jecxz
(bad)
jecxz
mov
inc
stc
mov
mov
pop
je
pop
xchg
stc
repnz
lds
push
call
and
adc
and
xlat
(bad)
loop
sbb
cmps
inc
shr
mov
jo
cwde
and
gs
inc
and
ins
movs
push
xchg
call
scas
(bad)
dec
aad
pop
pushf
jne
int
adc
mov
jns
dec
pop
xchg
adc
and
pop
or
and
idiv
mov
and
ds
cmp
dec
pop
mov
pop
jle
pop
fisubr
pop
fcom
adc
push
test
adc
and
mov
into
and
outs
add
cli
fimul
loop
jmp
(bad)
bt
xor
lods
test
cmc
lds
adc
les
dec
cmp
stos
leave
adc
cmps
pusha
(bad)
cmp
add
(bad)
(bad)
jg
xor
jns
ret
fnstcw
and
call
xchg
sub
pop
push
sub
ror
sar
adc
addr16
in
fmul
add
push
fist
leave
out
scas
loopne
es
imul
fimul
and
(bad)
loopne
add
jne
out
lds
aas
push
adc
push
dec
dec
jns
inc
sub
das
(bad)
stc
jb
loopne
xlat
and
push
shl
stc
xor
fidiv
repnz
sbb
mov
xor
xchg
cwde
nop
adc
int
popf
in
loopne
popa
lods
call
mov
and
inc
sbb
jmp
ficom
inc
cmc
mov
imul
cdq
jae
sbb
sbb
cwde
cmc
adc
adc
jge
or
sbb
pop
adc
add
pop
shl
stos
int
add
sbb
outs
jmp
sbb
in
inc
jbe
dec
mov
mov
inc
data16
in
mov
cld
push
lea
and
(bad)
adc
push
pop
jg
call
xchg
jae
fsubr
cli
retf
adc
dec
sahf
sbb
mov
pop
ror
loope
fdivr
and
or
mov
popf
jb
and
int
int3
jne
mov
js
push
retf
arpl
sar
(bad)
pop
ss
add
mov
xchg
fst
retf
dec
sahf
push
and
repnz
dec
test
mov
sar
cmp
mov
mov
push
mov
(bad)
xor
sbb
sub
aaa
or
cmp
mov
stos
loop
mov
int3
inc
mov
retf
cmc
push
and
lds
mov
xchg
movs
xchg
inc
pop
test
loopne
scas
add
aas
pop
fstp
aam
cmp
(bad)
sub
div
div
int
and
push
jl
inc
jl
mov
cdq
mov
cmps
lock
pusha
pop
shl
mov
inc
inc
mov
mov
aam
adc
loop
jecxz
pop
mov
in
sub
fs
sbb
dec
iret
sub
adc
nop
cmp
or
xchg
xchg
outs
fwait
jae
aas
ja
pop
mov
ins
(bad)
loopne
lahf
sub
cld
test
xchg
fadd
mov
test
jae
aad
cmc
inc
fs
pop
dec
sbb
adc
out
mov
push
(bad)
and
hlt
aam
mov
adc
jle
xchg
test
push
pand
dec
mov
(bad)
retf
cmp
sub
les
jge
mov
push
pop
daa
push
mov
out
and
in
dec
cmp
jb
mov
push
fsub
mov
cmp
adc
jmp
mov
fisub
jne
mov
mov
pushf
test
xor
xor
aas
add
or
scas
(bad)
jo
cmp
sub
cmps
ja
mov
cld
sti
sbb
fsubr
movs
loop
sti
les
inc
or
cmp
ss
push
push
fs
jmp
dec
sbb
dec
mov
les
scas
fucomip
mov
movzx
sub
cmp
(bad)
jae
sbb
rcr
pop
int3
push
sbb
out
in
jbe
pop
lahf
stos
neg
not
xor
ror
addr16
movs
test
jno
dec
sbb
push
cld
mov
fldenv
or
test
sbb
loope
rsqrtps
fadd
inc
fs
jnp
xor
jge
(bad)
iret
jne
sar
mov
sbb
aad
push
movs
jno
inc
and
mov
(bad)
mov
mov
add
mov
jg
sbb
pop
xor
addr16
jmp
sbb
dec
mov
cmc
xor
jnp
push
(bad)
call
sar
mov
add
and
int3
inc
adc
jp
mov
lods
fcom
nop
popf
(bad)
enter
(bad)
mov
ret
icebp
stos
retf
sub
fstp
inc
aaa
fs
shl
scas
cmp
data16
ins
je
(bad)
fcomp
jl
in
mov
adc
or
inc
mov
inc
add
arpl
mov
loopne
inc
(bad)
jge
ins
dec
jl
popa
nop
jmp
loopne
jp
out
mov
std
ror
xor
pop
push
adc
cmc
or
cmp
jo
dec
mov
out
or
das
push
pop
mov
dec
ss
das
mov
dec
push
cli
mov
adc
lock
add
pop
and
aad
idiv
retf
mov
lahf
rcr
cmps
mov
dec
xchg
gs
cmp
mov
mov
dec
fnstsw
mov
push
pop
push
repnz
ja
jne
xchg
sub
pop
sti
js
or
cs
loope
cmp
cld
js
pop
xchg
jge
gs
push
pushf
es
or
enter
fdivr
ja
add
pop
mov
clc
push
jbe
push
hlt
iret
push
pop
ins
and
pop
std
jecxz
in
xchg
data16
frstor
in
fwait
leave
pop
mov
mov
(bad)
lea
jne
jbe
sbb
call
jmp
iret
and
add
idiv
push
(bad)
lods
mov
xchg
jg
aam
inc
pop
fsub
call
xor
outs
std
mov
push
mov
dec
mov
push
jnp
ss
scas
jmp
sar
arpl
arpl
stos
jge
jo
sub
mov
imul
add
sbb
enter
mov
repz
adc
push
ror
push
in
dec
paddsw
cmp
out
sub
idiv
pop
cs
in
xor
fild
and
push
mov
sbb
jbe
adc
enter
xor
add
scas
mov
outs
adc
nop
and
je
movs
mov
sbb
ss
aas
jns
es
pop
daa
leave
repz
inc
pop
out
gs
jae
dec
int3
stc
jl
mov
lock
retf
int3
jae
lea
dec
dec
or
sub
lea
les
push
test
retf
not
ja
jns
mov
mov
jmp
mov
popa
mov
mov
out
cli
idiv
shl
cmp
xchg
je
mov
mov
adc
xor
sub
adc
xor
cmps
xchg
cmps
sar
aad
js
push
lock
call
into
test
(bad)
test
adc
stc
mov
fstp
ret
loop
call
pushf
pushf
fwait
sar
out
mov
cmp
adc
jo
enter
inc
add
push
jg
sbb
dec
mul
sub
test
pop
frstor
js
inc
adc
push
test
mov
fsub
int
rol
mov
push
nop
push
and
fidivr
imul
into
jp
stc
inc
jmp
sbb
jmp
addr16
syscall
mov
inc
repz
mov
imul
xchg
push
mov
xchg
cmp
call
test
dec
out
jb
jle
or
push
ror
mov
pop
jnp
xchg
mov
xor
mov
(bad)
cwde
cld
movs
pop
mov
fbld
xor
dec
inc
out
ret
cmp
and
iret
push
cmp
add
mov
or
cmc
pop
cmp
and
add
(bad)
test
pop
in
dec
pusha
clc
and
inc
sbb
test
xor
fucomi
mov
xor
mov
jnp
aad
dec
mov
adc
xchg
retf
jb
sar
lea
inc
loope
xlat
inc
cmp
fst
retf
dec
push
adc
mov
mov
xor
push
xor
imul
movs
push
out
repnz
leave
pinsrw
pop
out
into
jl
(bad)
mov
and
cmp
mov
xchg
jl
cmc
fwait
jae
outs
test
repnz
das
mov
mov
int3
call
xchg
mov
sub
int
scas
imul
mov
test
ss
fstp
fild
(bad)
cld
push
push
out
repz
inc
mov
stos
adc
xlat
dec
retf
fs
jmp
pop
xlat
push
ficomp
aas
mov
jne
or
pop
mov
jns
mov
inc
mov
hlt
or
in
inc
fwait
inc
mov
out
add
and
rol
test
mov
pop
sub
add
xchg
and
mov
(bad)
out
sbb
inc
movs
aaa
lock
mov
push
out
push
daa
js
mov
and
repnz
add
cmps
test
pop
push
sbb
inc
jecxz
jp
dec
adc
inc
fbld
sbb
es
ins
push
or
(bad)
ss
xor
sbb
into
fidivr
fs
imul
pushf
pop
and
les
sub
retf
mov
enter
cmp
or
cli
loope
jg
div
ss
jge
add
outs
mov
jbe
iret
push
push
fs
pop
jns
inc
in
mov
xchg
fwait
arpl
adc
ja
ins
rol
push
xchg
lods
aas
xlat
dec
imul
in
add
mov
or
mov
pop
xor
das
inc
sub
mov
mov
cmc
jnp
popf
fsub
dec
pop
ja
pop
adc
ins
jno
idiv
adc
jp
sbb
aas
shl
xlat
xchg
rcr
adc
gs
je
retf
ret
(bad)
mov
aad
cmps
add
sbb
pop
adc
pushf
sub
cmp
fstp
jecxz
inc
lahf
ds
pop
bnd
cdq
arpl
pop
sar
cs
mov
add
cld
in
add
das
mov
and
add
fsub
addr16
shl
dec
cmps
ss
test
nop
or
icebp
xchg
aam
dec
mov
inc
test
push
jne
adc
mov
and
sbb
and
sahf
dec
aam
inc
ins
jb
and
mov
outs
out
jp
or
pop
mov
mov
test
push
leave
sbb
mov
cmps
cmc
shl
pop
pop
and
rcl
mov
fimul
icebp
lods
cdq
sbb
(bad)
jp
popf
add
inc
dec
out
cmps
pop
lea
movs
fistp
mov
outs
push
daa
add
aas
xchg
cmp
pop
dec
imul
repnz
lds
pop
adc
add
dec
nop
xchg
aad
mov
enter
or
sub
(bad)
adc
aaa
mov
or
int
(bad)
jmp
adc
mov
icebp
lahf
cmp
jbe
mov
loopne
push
inc
int3
fs
ret
xlat
fdiv
push
push
dec
jne
imul
sbb
ret
outs
scas
jp
fst
out
jg
cmp
(bad)
push
push
dec
je
out
popf
loopne
pop
push
fist
stc
adc
sbb
dec
xor
ficom
jge
dec
int3
adc
pop
fcom
aam
xlat
mov
push
sahf
cmp
add
jbe
call
sar
adc
xchg
fimul
ror
cmps
and
fwait
int
ins
mov
jbe
dec
pop
add
dec
nop
pop
xchg
mov
loop
xlat
aad
xchg
dec
ins
sub
fcmove
rcr
aaa
mul
lea
(bad)
sub
rcl
aas
jmp
gs
sbb
test
dec
sbb
or
cmp
cld
jno
nop
xchg
inc
pop
stos
arpl
mov
es
xchg
nop
fld
in
and
das
mov
sti
mov
aaa
jns
fwait
mov
xchg
test
cmp
xor
fidiv
inc
adc
mov
dec
mov
xor
mov
adc
lds
(bad)
mov
mov
cmp
inc
mov
pushfw
sub
mov
stc
xor
das
pop
add
dec
ins
mov
mov
clc
mov
jmp
and
ror
push
out
sub
cmp
ror
and
xor
fndisi(8087
arpl
call
mov
inc
movs
cmovg
xchg
scas
loop
inc
(bad)
out
lds
fld
pop
ins
mov
cmp
mov
jae
rcr
(bad)
(bad)
jne
mov
mov
sbb
mov
push
or
sbb
mov
xchg
mov
leave
mov
push
(bad)
mov
push
sub
addr16
loop
add
or
add
mov
or
mov
imul
pop
mov
clc
mov
jno
rol
mov
imul
adc
(bad)
ror
pop
stos
aam
and
cmp
repz
test
(bad)
fisttp
stos
movs
pop
xor
pop
adc
mov
aas
sub
xor
dec
aad
xchg
push
xlat
jb
imul
cs
jb
push
sbb
in
mov
lea
rcr
xor
imul
sub
xchg
outs
sar
and
arpl
jne
fstp
inc
mov
icebp
fsub
xchg
pop
ret
sbb
sub
cli
jp
push
nop
mov
std
mov
pop
jo
cmc
jns
in
loop
arpl
repz
mov
add
into
mov
or
add
movs
jg
imul
sbb
sbb
dec
pushf
xchg
xchg
imul
popfw
hlt
and
(bad)
lock
xchg
push
outs
scas
sbb
retf
mov
in
xchg
jl
mov
jbe
mov
movs
imul
sub
sub
inc
aaa
mov
cmps
xchg
sub
push
fstp
add
sub
pop
jo
stos
sbb
push
pop
mov
shr
xor
inc
jmp
xchg
jle
(bad)
scas
jmp
or
fxch
popf
(bad)
clc
mov
xchg
jns
cmp
lea
mov
xchg
push
popf
sbb
fldcw
sbb
daa
lahf
popf
retf
hlt
and
bound
dec
into
nop
ss
mov
jge
clc
or
test
add
and
(bad)
adc
push
mov
gs
push
int3
mov
and
test
adc
push
or
pop
scas
add
test
dec
(bad)
and
test
xor
cmps
pop
leave
mov
out
mov
jecxz
fcomp
jecxz
xor
inc
or
mov
out
pop
pop
xor
jge
imul
retf
out
push
fdivr
and
int3
test
cwde
or
xor
(bad)
xor
inc
adc
stc
sub
inc
cmp
and
and
mov
lock
jbe
push
hlt
push
out
mov
xchg
mov
or
(bad)
fnsave
movs
and
leave
and
add
pop
popa
loop
popf
nop
dec
dec
mov
int
and
clc
xor
call
mov
pop
aam
mov
ds
pop
dec
cmp
inc
cli
xor
mov
xchg
jecxz
les
imul
jns
or
mov
adc
cmp
jae
enter
cmp
sbb
push
and
movs
dec
inc
sbb
retf
scas
gs
pop
xchg
imul
xor
push
fbstp
push
add
clc
mov
in
mov
out
dec
int3
push
dec
lock
push
test
pop
std
mov
lahf
mov
mov
or
adc
xor
sbb
adc
rcl
cli
or
cmc
retf
inc
imul
sbb
push
(bad)
idiv
xor
sbb
push
daa
push
cmc
and
pop
and
cld
arpl
into
hlt
sahf
pop
addr16
les
add
jo
push
or
fstp
xchg
xlat
fisub
inc
sub
lea
mov
cmp
jb
pop
inc
xor
bound
xor
loopne
idiv
stc
sbb
ret
adc
push
std
adc
mov
jp
shl
mov
jbe
add
xchg
pushf
(bad)
loop
cmp
fsubr
sbb
xor
vmptrst
dec
sbb
mov
add
aaa
jbe
(bad)
loop
mov
mov
test
xlat
outs
mov
int
sub
jmp
cmp
dec
xor
xchg
pushf
inc
adc
push
and
jp
add
jbe
mov
add
jns
or
mov
inc
xchg
mov
dec
pop
in
push
(bad)
push
cmp
in
icebp
xor
add
icebp
add
and
icebp
push
or
outs
scas
jmp
mov
sti
inc
(bad)
popa
fadd
aam
ficom
(bad)
jmp
or
jo
(bad)
jmp
lods
adc
sub
scas
fdivp
or
pop
(bad)
cmp
jb
adc
dec
imul
inc
je
out
into
mov
sbb
adc
add
neg
push
(bad)
and
fwait
loope
xchg
cmp
add
mov
push
scas
mov
(bad)
je
fdivr
je
push
(bad)
xchg
cwde
push
fs
cmp
stos
out
push
fstp
xchg
mov
int
push
ins
jecxz
pop
mov
add
or
outs
sti
mov
addr16
fs
hlt
loop
mov
jmp
les
ret
lods
or
(bad)
icebp
mov
xchg
stos
iret
sub
movs
push
xor
shl
imul
fwait
retf
mov
inc
stos
fstp
mov
and
add
int
xchg
stos
fldenv
mov
pop
mov
cmps
jle
add
push
push
or
inc
pop
xchg
xor
mov
or
pop
cld
scas
sub
std
mov
add
sub
nop
adc
call
stos
pop
sahf
xchg
and
xor
shl
dec
jecxz
lock
shr
pop
cwde
fs
in
enter
mov
movs
fsub
dec
retf
xor
arpl
or
pop
fistp
rcr
nop
loopne
retf
cwde
rcr
jns
dec
mov
jno
mov
xchg
push
mov
cwde
imul
repz
(bad)
mov
repz
mov
push
arpl
imul
push
mov
sub
mov
dec
rcr
add
or
push
cmp
xlat
xchg
inc
dec
mov
cmps
add
int
pop
xor
call
call
pushf
or
cs
int
xchg
pusha
inc
adc
test
mov
imul
ficom
mov
mov
and
pop
shr
(bad)
mov
outs
push
sub
pop
pop
jb
pop
lods
lock
cmp
xchg
xchg
icebp
rcr
cmp
adc
mov
loope
pop
cmp
mov
or
fiadd
leave
movs
xchg
and
mov
jecxz
xor
cld
add
call
or
inc
or
push
or
jno
outs
or
mov
fsubr
out
shl
pop
pusha
cmp
movs
jne
and
cld
(bad)
lahf
pusha
fwait
xchg
xlat
shl
pop
addr16
test
push
xchg
pop
push
jmp
ins
mov
jecxz
call
jnp
or
test
xlat
dec
pop
jns
mov
clc
sbb
(bad)
dec
pandn
mov
in
popa
dec
jecxz
pop
nop
xor
test
pusha
imul
or
scas
add
xor
ret
ins
dec
fdivr
mov
in
pop
fisubr
retf
in
int3
fsqrt
cli
inc
mov
mov
cmps
repnz
pop
push
inc
jmp
jb
dec
out
daa
pop
inc
aam
cmp
add
gs
cmp
out
jmp
cmps
rol
pop
jne
fsubr
loope
neg
lahf
pop
mov
dec
cmp
loop
fdiv
ror
push
xchg
mov
daa
outs
aaa
loope
adc
dec
dec
dec
and
xchg
or
and
mov
push
inc
cmp
cmp
sbb
(bad)
popf
scas
cld
jecxz
shl
pop
loop
enter
sar
fdiv
scas
out
loop
arpl
je
(bad)
test
push
dec
sub
or
push
pusha
adc
adc
jne
out
sub
jne
add
mov
cmp
mov
ins
mov
(bad)
stc
mov
pusha
mov
jo
or
sub
icebp
push
or
push
or
mov
retf
aaa
adc
and
outs
xor
pop
mov
daa
imul
and
inc
gs
stc
cdq
and
rcr
xor
mov
add
dec
and
sbb
cmp
scas
dec
popf
xor
and
fs
mov
in
or
retf
dec
imul
cmp
fstp
dec
jg
xchg
mov
mov
mov
sbb
scas
cs
sbb
pop
int
fnstcw
out
and
pusha
mov
dec
or
mov
rol
jl
push
xchg
xor
outs
gs
xor
jg
add
mov
dec
in
cli
pop
aad
and
mov
fs
dec
aam
in
xchg
mov
mov
nop
jnp
add
retf
ja
cs
loop
mov
repz
mov
mov
jl
or
push
inc
les
sub
mov
pusha
(bad)
out
lea
inc
out
pushf
mov
mov
jmp
mov
js
mov
fsubr
push
mov
adc
lods
or
adc
inc
mov
dec
sub
clc
inc
ins
add
ss
outs
or
mov
xchg
or
jae
push
cmove
inc
stc
ror
sbb
pop
sbb
outs
inc
adc
imul
jae
and
xchg
and
mov
inc
or
pusha
popa
add
lahf
pop
push
cmps
enter
fst
lea
fidiv
clc
pusha
out
lds
xchg
and
leave
idiv
mov
cmc
dec
push
inc
mov
stos
inc
sub
in
pop
in
xchg
in
jns
cmp
push
push
es
jp
dec
add
and
call
loopne
gs
mov
pop
idiv
sub
fldcw
dec
shl
xor
xor
imul
and
mov
bound
add
xor
add
fcom
cmp
xor
add
js
xor
out
sbb
xor
cli
pop
lods
and
adc
sub
xchg
dec
push
push
not
stos
out
sti
adc
lods
fadd
or
icebp
mov
jmp
jno
xor
push
mov
inc
dec
push
inc
jecxz
mov
out
add
jae
(bad)
cmp
mov
inc
daa
(bad)
add
mov
fst
pop
fisub
mov
ja
sub
cli
out
and
mov
lds
pop
movs
fs
arpl
pop
mov
push
pop
mov
cmc
jb
push
test
aam
dec
repz
not
ret
ss
sar
sbb
retf
daa
xchg
cmps
das
int3
pop
scas
pop
jl
out
inc
adc
and
xchg
inc
les
or
xchg
push
push
cmps
cmps
xchg
fwait
or
inc
inc
outs
addr16
sbb
popa
and
imul
dec
or
inc
out
and
mov
fs
imul
(bad)
mov
ins
xchg
nop
jecxz
jb
xchg
mov
bound
into
jb
xchg
clc
cmp
bound
sbb
sub
add
add
push
ins
rcl
rcr
and
rcr
xchg
xchg
sahf
mov
cli
sbb
xor
push
test
or
jmp
pop
jae
xchg
jg
loope
cmp
loope
pop
rcl
inc
inc
pop
or
jl
addr16
jle
call
jg
sub
shr
lods
(bad)
xchg
pop
stos
sbb
pop
sub
or
mov
jae
xor
mov
cwde
xchg
cmovnp
inc
int
outs
add
arpl
ins
ficomp
add
mov
jecxz
adc
not
pop
or
sub
jecxz
pop
shl
rcr
mov
(bad)
jo
pop
test
inc
pop
sar
pusha
push
fst
mov
cmc
dec
imul
mov
jbe
hlt
mov
ffree
or
fs
mov
je
adc
cmp
(bad)
xor
jmp
inc
call
push
push
xchg
mov
shl
push
xchg
push
icebp
leave
cld
int3
inc
int3
mov
adc
cmp
sbb
pushf
jno
jp
jmp
cwde
cdq
mov
out
fisubr
cli
add
dec
sbb
movs
pop
xor
mov
fcom
mov
cmps
bound
sub
mov
mov
cmp
adc
repnz
inc
push
pop
loop
fdivr
xchg
and
cmps
inc
mov
jno
shl
repz
fwait
mov
std
loopne
ror
(bad)
das
mov
push
or
test
aad
pop
add
test
xchg
cmp
mov
cmc
out
stc
xchg
mov
sub
enter
in
or
test
fsub
xor
js
std
and
push
repz
outs
hlt
dec
mov
imul
call
pop
sbb
xchg
add
jl
sbb
in
shl
xlat
push
and
pop
cmp
push
and
adc
adc
push
aam
adc
adc
mov
movs
xor
leave
mov
cli
fwait
das
dec
fsub
(bad)
(bad)
ds
and
(bad)
xchg
push
rcl
stos
cmp
push
add
outs
aas
iret
sti
cld
shl
cdq
out
retf
sahf
call
hlt
and
cmp
mov
push
dec
and
inc
shr
hlt
fwait
sbb
sahf
mov
xor
ror
push
test
or
retf
adc
cmp
and
jbe
stos
sub
leave
daa
dec
cwde
dec
lock
dec
jl
add
pop
mov
(bad)
mov
popa
sub
int3
mov
jmp
xchg
dec
movs
fldenv
mov
test
scas
into
pop
xchg
pop
push
imul
adc
jmp
or
pop
jb
push
out
in
gs
retf
int3
push
test
mov
scas
or
pmullw
xlat
add
pop
cdq
fsubrp
xor
fs
xor
inc
xchg
fbstp
test
jbe
push
xchg
mov
sbb
add
(bad)
mov
jns
rol
push
ss
fst
add
sbb
mov
sub
adc
rcl
xlat
retf
cwde
mov
cmp
mov
loopne
adc
dec
push
(bad)
jmp
scas
stos
mov
(bad)
and
movs
in
push
cmp
cmps
adc
jmp
out
mov
push
push
dec
pop
pop
pop
xor
dec
adc
xchg
outs
jmp
sub
xor
pop
mov
jns
cld
xchg
jno
jbe
test
test
out
pop
jmp
imul
shl
jp
mov
dec
js
sti
push
(bad)
(bad)
je
pop
mov
mov
loope
or
cmps
and
sbb
ds
addr16
inc
adc
sahf
stc
lods
mov
pop
mov
and
mul
and
adc
cmp
mov
mov
jns
stos
mov
xchg
dec
jecxz
push
div
icebp
jno
xor
cmp
fistp
dec
arpl
push
xchg
adc
xor
mov
scas
daa
lds
fldenv
stc
pushf
test
call
jmp
mov
jno
adc
xchg
mov
pop
pushf
add
xchg
xor
push
add
jge
addr16
sbb
(bad)
in
mov
inc
into
push
cmp
dec
cmps
ja
or
sbb
call
jae
push
add
sahf
push
add
fidivr
aas
inc
jmp
in
xor
neg
stos
(bad)
sub
sub
dec
(bad)
shr
mov
into
clc
mov
call
push
scas
inc
pop
sub
or
sti
jbe
call
fcom
test
cmp
jl
in
scas
popa
add
mov
fnstenv
ret
aaa
jmp
add
push
mov
shr
ret
add
and
stos
ins
and
fdivr
inc
inc
xchg
cmps
test
pop
xchg
mov
push
out
popa
jp
movs
inc
dec
jb
jo
sbb
jle
inc
aam
inc
ffree
shl
shl
mov
dec
jns
fbld
std
jl
fiadd
iret
hlt
sub
ja
in
inc
mov
dec
inc
neg
inc
cmps
popa
out
ins
into
pop
pop
push
inc
dec
jmp
add
idiv
and
add
mov
cmp
jl
js
cmp
push
nop
pmaddwd
cwde
pop
sub
mov
push
jmp
pop
(bad)
mov
adc
pop
mov
in
stos
loopne
loope
sbb
xor
stos
mov
stos
aaa
jne
mov
pop
xchg
iret
and
cld
movs
shl
addr16
pop
mov
cmp
int3
xchg
das
jb
stos
les
mov
pop
fidivr
into
pop
fadd
jno
(bad)
lgdtd
hlt
xchg
push
in
aam
(bad)
aad
nop
movs
jle
mov
xchg
cmp
enter
or
js
push
out
sub
inc
jmp
cs
dec
mov
xchg
popf
jmp
inc
test
lods
adc
fisubr
dec
xchg
adc
mov
jge
push
js
or
outs
mul
dec
cmp
fld
xor
or
in
or
aad
lea
push
xchg
adc
out
xchg
and
daa
aaa
in
arpl
xchg
jae
dec
ret
and
sub
mov
dec
out
movs
loope
push
pusha
inc
cmps
mov
inc
inc
xchg
inc
push
jge
les
xor
unpcklps
sbb
ins
shl
jbe
outs
sahf
pushf
add
mov
cmp
sub
inc
xor
sub
sbb
test
fcmovnb
inc
sub
test
es
cs
out
or
(bad)
ds
rcr
push
daa
mov
cmp
jo
repnz
ins
int
mov
xor
inc
adc
cdq
or
shl
xchg
out
ss
pop
jne
cdq
sbb
aaa
ins
adc
ins
fstp
inc
xlat
outs
or
xchg
jmp
sbb
mov
mov
retf
xchg
cmp
adc
ds
cmp
mov
adc
retf
lods
icebp
xor
in
sub
inc
ret
repz
jge
inc
shufps
mov
sbb
nop
dec
aaa
sti
add
imul
sbb
mov
loopne
mov
mov
mov
int3
xchg
xchg
adc
inc
xor
jbe
scas
and
dec
jecxz
int
test
test
mov
cld
cmp
push
mov
mov
pop
mov
jns
ja
pop
xor
cmp
xchg
jmp
outs
mov
add
in
sub
pop
dec
retf
dec
and
fidivr
inc
repnz
in
into
dec
adc
les
and
cmp
ins
mov
ret
int3
faddp
pop
inc
cmp
dec
pop
daa
mov
pop
outs
mov
fisubr
and
jno
shl
pop
push
out
sub
ret
cmc
es
mov
lock
adc
aam
jo
push
call
into
adc
dec
movs
pop
or
xchg
xor
xchg
mov
add
inc
cmp
push
mov
out
test
sahf
out
dec
add
push
hlt
fld
adc
cmp
fsub
mov
jg
dec
and
punpcklwd
aas
ins
adc
push
call
test
inc
lods
ds
dec
leave
push
sahf
dec
fst
sub
mov
ror
in
push
mov
jb
scas
xlat
xchg
push
hlt
ss
je
ror
test
push
cwde
pop
pop
shl
ins
mov
add
sub
les
or
inc
and
aas
jne
mov
push
es
cdq
inc
scas
add
and
loop
cmp
mov
dec
mov
nop
sahf
(bad)
ss
cmps
lods
inc
into
inc
shr
and
jmp
cmps
out
or
dec
cmp
sbb
sub
loop
sub
mov
xor
scas
cli
push
sahf
adc
lock
pop
sbb
sub
jno
push
fcomp
pop
popa
mov
jg
addr16
dec
arpl
repz
(bad)
ficomp
push
popf
mov
and
jmp
cmp
or
push
pand
retf
cmps
fistp
out
inc
ins
out
inc
bound
push
enter
sub
jecxz
dec
xor
xchg
pop
(bad)
stos
mov
lahf
sub
mov
je
mov
push
inc
xor
xor
inc
cmp
xchg
shl
sub
lea
mov
stc
aas
jns
push
(bad)
fistp
aad
or
jle
pusha
retf
(bad)
push
jl
ret
aam
rcr
inc
test
push
inc
lds
mov
ds
rol
or
sbb
sbb
test
sub
mov
fimul
mov
imul
jno
add
icebp
bound
data16
inc
ficomp
imul
or
lock
mov
jmp
and
mov
movs
push
inc
xor
test
stos
mov
loopne
xchg
icebp
and
scas
push
adc
mov
cmp
(bad)
pop
adc
mov
sahf
mov
inc
pop
xlat
out
push
xor
mov
push
daa
ret
jmp
pop
add
xchg
cmp
mov
(bad)
cmps
(bad)
(bad)
push
in
xor
jg
dec
jp
lods
movs
clc
fwait
xchg
add
outs
xchg
jp
fisttp
mov
push
test
dec
xchg
jmp
jge
fmul
lods
jecxz
sub
imul
or
icebp
leave
and
call
adc
add
and
retf
xchg
sbb
into
mov
pop
test
stos
cmp
jae
or
and
retf
cmc
add
shl
xchg
mov
jmp
(bad)
(bad)
cs
into
cdq
xchg
xchg
pop
inc
hlt
xchg
push
sbb
add
ss
xor
in
adc
outs
inc
mov
movs
xor
push
xchg
jne
push
cdq
lods
movs
sar
adc
mov
sahf
lahf
dec
sub
cdq
shr
retf
pop
sbb
jp
jae
call
cmp
and
in
and
mov
test
xchg
rcl
out
je
mov
in
xchg
push
aad
out
ja
pop
and
mov
push
xchg
pop
xchg
push
fcom
(bad)
retf
inc
adc
pop
ficomp
and
sub
cmp
leave
out
sbb
daa
hlt
das
dec
(bad)
jnp
dec
mov
or
call
inc
scas
fcmovbe
sbb
(bad)
dec
repnz
mov
call
stos
(bad)
cdq
mov
ins
fwait
outs
pop
or
mov
jb
scas
xchg
mov
xchg
repz
and
in
pop
jo
out
out
push
mov
mov
pop
movs
daa
pop
nop
retf
mov
mov
int
sbb
int3
pop
sbb
pop
mov
xor
icebp
pop
sahf
inc
and
push
(bad)
mov
cmp
inc
jns
mov
mov
mov
cmp
popa
mov
mov
outs
xchg
test
sub
loop
test
add
dec
test
xchg
js
jecxz
push
(bad)
jbe
push
inc
jnp
rol
dec
stos
jo
out
pop
inc
popf
or
jl
daa
clc
mov
cdq
shl
sbb
sub
arpl
cwde
test
push
inc
les
fsubp
jo
dec
in
scas
fnop
inc
pusha
div
enter
pop
sbb
adc
inc
inc
(bad)
fs
out
mov
cmp
movs
sahf
mov
mov
jb
sar
shr
push
shr
mov
imul
(bad)
pop
das
into
push
jne
jo
cmp
shl
jge
fucomi
mov
and
rol
ja
stos
mov
(bad)
retf
push
push
mov
pop
dec
pop
cmp
jo
clc
cmp
test
lea
cmp
xlat
pop
into
imul
gs
xchg
inc
daa
pop
(bad)
out
nop
push
enter
mov
and
xchg
sub
or
int
test
push
pop
cmp
mov
ret
jle
fcomi
mov
loop
sbb
or
nop
retf
mul
addr16
aaa
out
and
pop
int3
in
(bad)
xchg
inc
push
sbb
adc
and
adc
xor
loop
ret
retf
mov
call
outs
mov
add
cmc
fistp
rcl
sbb
jle
pop
retf
cmp
push
mov
pop
enter
cmp
sahf
dec
out
pop
lods
fwait
pop
std
sbb
cmps
adc
add
mov
sbb
mov
sahf
mov
add
out
dec
inc
xor
add
es
sti
mov
stc
inc
mov
and
sub
scas
cdq
stc
in
push
fwait
retf
push
aas
sbb
cmp
fnsave
mov
sub
sub
pop
ins
fs
cmp
inc
xor
jle
out
xchg
adc
sbb
ret
ret
push
mov
outs
mov
fimul
adc
ins
xchg
(bad)
loopne
adc
push
xchg
push
iret
xchg
mov
xchg
stos
xchg
xchg
and
ins
dec
loopne
push
retf
leave
push
ret
clts
xor
mov
cmp
sahf
add
push
fs
mov
pushf
cmp
cs
jge
test
mov
bound
mov
lock
adc
pop
cmp
adc
xchg
cwde
sub
test
xchg
shl
ins
sub
nop
cmps
nop
stos
xchg
fbstp
test
xor
mov
in
or
xor
addr16
lds
mov
aad
push
ret
sbb
stc
adc
stc
gs
je
xor
push
(bad)
test
bound
bnd
call
fsubr
clc
push
sub
sub
push
adc
aad
jg
cs
(bad)
jbe
mov
mov
pushf
sub
scas
xor
rol
sbb
loope
fmul
addr16
and
imul
das
dec
out
xchg
push
add
nop
push
outs
xchg
loopne
stos
clc
pop
cs
neg
movs
mov
pop
mov
fst
(bad)
aas
xchg
gs
les
push
xor
test
stos
call
jl
pop
xor
sbb
lds
sbb
xor
js
test
cmp
jo
dec
mov
or
int3
push
xchg
and
sub
cdq
imul
inc
xchg
cmc
push
repnz
cmp
push
pop
push
imul
adc
jno
mov
mov
outs
ds
mov
pushf
stos
xchg
mov
pop
mov
mov
out
cld
sub
mov
dec
das
popf
call
movs
pop
pusha
in
imul
stos
dec
loopne
fwait
sbb
(bad)
jae
xor
or
clc
xor
mov
imul
js
cmp
inc
and
pusha
xlat
cmps
pop
sub
and
xor
sbb
fst
lahf
xchg
xchg
call
ror
push
push
dec
int3
pop
pop
jo
rep
adc
jl
out
sbb
in
xchg
out
bound
add
retf
test
(bad)
cmps
hlt
jl
adc
pop
jo
das
retf
int3
std
mov
jle
pop
sbb
push
xchg
aaa
push
popf
pusha
(bad)
fnstcw
sti
in
mov
jnp
lds
out
and
xchg
sub
cmp
dec
add
movs
and
cmps
dec
std
das
cwde
das
pop
in
clc
fs
daa
sub
or
xchg
or
addr16
imul
add
and
mov
das
adc
adc
inc
xor
xor
add
cld
and
or
out
add
bound
mov
xchg
sbb
lds
cli
cs
arpl
repnz
repnz
outs
sbb
int3
call
xchg
jne
inc
mov
jno
mov
mov
mov
jns
cmp
repz
aam
sti
xchg
sti
xchg
cmp
gs
fsub
push
ror
dec
and
or
adc
test
add
mov
jno
imul
jge
mov
movs
jmp
jmp
push
loope
push
sbb
sbb
mov
lods
loope
pop
data16
jp
icebp
(bad)
push
into
sbb
bound
pusha
pusha
cmp
sub
mov
cmps
jo
repnz
loope
push
pusha
retf
or
sub
mov
js
movs
add
mov
mov
mov
sub
fisttp
push
mov
or
jne
dec
jge
sbb
je
les
(bad)
aam
ins
mov
adc
cld
pop
fst
cli
adc
enter
std
mov
dec
(bad)
pop
mov
ret
push
mov
inc
push
push
fsubrp
sahf
sbb
pop
dec
sub
jg
mov
test
jmp
add
ja
push
jl
or
imul
dec
push
in
mov
mov
je
push
or
pop
and
xor
leave
hlt
adc
movs
pushf
xchg
sti
pop
jl
add
daa
outs
hlt
cmp
jmp
and
inc
push
pop
jne
inc
mov
mov
dec
out
push
xlat
inc
adc
fdivp
adc
fisttp
repz
xchg
push
pop
movs
push
mov
inc
sahf
ins
loop
pop
(bad)
sub
push
data16
adc
aam
cmp
ret
mov
xchg
mov
xchg
push
daa
push
vaddsubpd
cmp
mov
cs
mov
push
xchg
aas
lock
mov
add
and
xor
jno
retf
inc
pusha
mov
out
sub
out
into
outs
jge
jecxz
movs
sbb
inc
movs
int
cmp
scas
xchg
ins
ret
pop
mov
call
ret
sbb
push
cmp
sub
fst
mov
cld
(bad)
sub
out
sbb
pop
movs
stos
daa
je
inc
inc
fstp
loopne
fcomp
es
sub
icebp
jecxz
test
jne
mov
outs
sub
outs
jmp
jl
cmps
ret
(bad)
rol
enter
call
fsubr
mov
aaa
shr
test
mov
mov
dec
into
lods
popa
in
dec
jno
inc
repnz
ret
push
lods
fsubr
movs
addr16
inc
dec
mov
jmp
je
push
mov
ror
dec
xor
cmps
or
pusha
jp
repnz
dec
adc
cmps
and
cmps
xor
cmp
adc
nop
hlt
imul
cmps
push
mov
loopne
mov
adc
repnz
cmp
popf
jmp
mov
sbb
popf
cmps
std
ja
(bad)
loop
fs
sub
push
cmps
mov
ss
cmps
out
xor
ret
aaa
and
mov
fcomp
xor
ja
iret
xchg
rcl
ss
daa
fmul
mov
jb
and
int3
cmp
ret
shl
ds
ret
pusha
xor
dec
retf
dec
rcpps
jb
aad
pop
out
mov
outs
ret
scas
stos
sbb
(bad)
scas
ss
ret
mov
int
test
js
mov
sbb
js
mov
je
or
sub
push
cmp
add
sbb
cdq
adc
mov
mov
inc
arpl
xor
dec
jns
pop
out
mov
cli
jo
arpl
xchg
add
mov
inc
test
dec
xchg
sub
mov
ror
test
mov
in
push
pop
mov
adc
or
jmp
jae
add
push
sub
inc
repz
imul
(bad)
mov
pop
mov
mov
push
or
xchg
gs
mov
mov
push
jae
xor
mov
stos
mov
mov
iret
cmps
pop
enter
adc
add
cmp
inc
shr
cmp
scas
je
xor
inc
int3
jbe
and
mov
adc
aam
dec
retf
shr
(bad)
popf
ins
push
pop
mov
pop
arpl
or
inc
xchg
data16
daa
push
stc
xor
test
outs
add
and
push
push
dec
loop
paddsw
std
sahf
(bad)
rol
dec
xor
call
ds
sub
cmps
mov
(bad)
(bad)
scas
aad
and
push
mov
mov
sub
mov
ins
ret
mov
rcr
ror
cli
shr
mov
in
sbb
mov
ret
jno
ret
adc
iret
mov
sti
ins
or
jbe
xor
sub
lahf
mov
retf
stos
outs
sub
fsub
mov
mov
push
out
jg
and
mov
test
or
iret
scas
out
cmps
loop
(bad)
jle
out
jns
mov
(bad)
mov
jmp
inc
adc
xchg
cli
jecxz
scas
mov
and
sbb
les
pop
stos
mov
popa
sbb
test
test
nop
(bad)
inc
mov
jp
xchg
cmp
mov
scas
jbe
adc
repz
jmp
mov
inc
rcr
mov
(bad)
mov
mov
dec
test
adc
xlat
lds
pop
mov
jnp
stos
outs
xor
fild
sbb
adc
jns
icebp
xchg
je
push
icebp
add
push
pop
fisubr
in
push
pushf
push
frstor
je
add
lods
loopne
sti
or
rol
push
fwait
aad
cld
push
push
out
jno
repz
in
pop
out
xchg
pop
push
xchg
out
inc
ds
and
add
mov
xor
xor
dec
arpl
data16
xor
push
cs
or
dec
xchg
sbb
fcomp
movs
retf
cwde
adc
pop
mov
xchg
jne
and
cmps
push
adc
jmp
scas
rcl
arpl
rcr
pop
fldenv
push
pop
shl
cmc
lods
cmp
sbb
loop
imul
pop
xchg
sti
repnz
popf
mov
adc
retf
dec
push
lahf
sub
mov
cmp
popf
adc
cmp
sub
(bad)
mov
inc
or
ret
push
mov
pop
cs
sub
cmp
mov
pop
add
jecxz
adc
jmp
mov
out
jl
mov
pusha
fs
inc
popa
cmp
add
dec
sar
add
ds
cmc
scas
xchg
scas
xchg
ins
outs
stc
mov
dec
xor
xlat
pop
jmp
xlat
enter
sti
xor
jb
sbb
jno
je
mov
adc
cwde
popa
fs
push
pop
xlat
adc
(bad)
cmp
add
out
adc
repnz
xor
xor
mov
mov
mov
cmp
and
(bad)
out
(bad)
nop
mov
push
leave
sbb
adc
push
or
pushf
dec
scas
sbb
and
sar
aad
inc
inc
mov
nop
aam
sub
loope
daa
add
xchg
jl
mov
or
inc
push
lock
pushf
pop
pushf
dec
inc
sub
inc
je
push
sti
in
into
push
jb
xor
into
pop
lahf
(bad)
ror
loopne
jb
imul
je
ret
ds
and
jnp
pop
(bad)
mov
imul
rol
stos
stos
cmp
lds
in
adc
cli
movs
mov
lods
pop
ins
mov
je
fst
nop
fst
fwait
sar
and
jb
loopne
into
or
mov
fs
jb
adc
adc
cmp
aam
(bad)
jbe
pop
add
fidiv
mov
xor
adc
ret
sbb
add
mov
test
test
stos
jae
push
rcr
aad
int3
adc
mov
pop
pop
rcr
or
lea
(bad)
ins
and
in
ret
push
jb
and
cdq
test
mov
xor
nop
stc
femms
lods
mov
sub
push
jl
mov
mov
adc
inc
sbb
push
sahf
pop
xlat
stos
lahf
pushf
out
outs
mov
cmc
inc
ror
daa
add
adc
xchg
je
ret
call
push
dec
mov
es
inc
xchg
jae
sub
adc
xor
xor
sub
jmp
pushf
xchg
xor
outs
jmp
outs
sub
sub
loope
inc
sub
cmp
stc
adc
ret
xor
jae
fcmovnb
out
lds
inc
xchg
jp
nop
dec
sub
jb
or
in
jp
adc
js
in
mov
loop
jnp
shl
scas
ins
mov
loopne
retf
ret
das
mov
pop
pop
(bad)
mov
stc
cld
dec
retf
cmp
fdiv
mov
movs
sahf
test
adc
inc
clc
(bad)
add
or
ds
xchg
shl
xchg
sub
fucomi
or
xchg
pop
lods
push
mov
std
out
ss
movs
mov
or
test
rcr
inc
rcl
aad
mov
pop
(bad)
mov
inc
je
std
dec
pop
add
in
push
add
out
add
pop
inc
add
out
mov
(bad)
popa
pushf
jmp
out
mov
mov
push
xchg
dec
add
stc
popf
jecxz
mov
out
cmp
fisttp
sub
call
cld
imul
in
inc
lods
xchg
cmc
cmp
add
aam
pop
cmc
inc
stos
xchg
xlat
in
out
sub
dec
rol
call
ret
loope
or
rcr
sbb
add
xor
mov
out
int3
mov
imul
test
jno
jns
xchg
ss
leave
sbb
in
dec
cmp
inc
mov
stc
mov
movs
mov
std
push
fwait
pop
jl
sahf
in
sar
pcmpgtd
mov
clc
mov
or
stos
or
in
push
call
out
push
sub
ror
mov
sahf
xor
add
jg
out
or
xor
inc
xchg
fcom
jmp
dec
pusha
out
jno
(bad)
rcr
dec
je
es
imul
call
jmp
cmps
mov
pand
mov
pop
jl
mov
aas
movs
mov
out
ins
(bad)
mov
ins
adc
dec
xchg
xchg
fstp
xchg
xlat
and
cld
vmread
jecxz
cmps
test
mov
add
xchg
mov
xor
jne
and
mov
icebp
lock
rol
mov
xchg
mov
jmp
repnz
cmps
ret
aam
outs
pop
xor
pop
call
cmp
out
jmp
retf
pop
mov
jp
inc
push
cmps
sub
cmp
dec
in
inc
stos
shr
fisubr
aam
fstp
pop
(bad)
test
add
push
mov
div
aaa
and
mov
xchg
push
cli
mov
xor
inc
pop
inc
cdq
mov
pop
js
(bad)
and
out
in
cwde
outs
sti
push
(bad)
(bad)
and
test
pop
jp
mov
xor
call
inc
lods
fs
add
das
pop
loopne
sub
(bad)
mov
lds
mov
add
mov
retf
or
add
inc
xchg
hlt
sbb
pop
dec
cwde
movs
sub
inc
cli
scas
idiv
and
mov
aad
sbb
sub
sti
fidiv
test
(bad)
push
jmp
xchg
shl
cmps
test
or
clc
out
mov
pop
addr16
xor
pusha
ss
mov
pop
out
and
cmp
sub
xchg
mov
mov
call
nop
inc
lods
mov
jmp
mov
mov
dec
xchg
ss
cmps
mov
daa
stos
pop
aam
xchg
mov
aaa
repz
xchg
jmp
push
jno
into
repz
loope
repnz
cdq
adc
je
sbb
ds
jo
in
scas
pop
data16
sbb
jle
push
loope
jmp
fmul
xchg
int
push
cdq
cmp
mov
fdivr
dec
push
dec
(bad)
shl
inc
cmp
out
jb
add
les
push
adc
imul
mov
sub
test
arpl
or
cmps
das
clc
dec
fsubrp
in
in
add
daa
outs
inc
xor
fwait
rcr
add
and
xor
add
push
xchg
xchg
ds
nop
mov
lods
mov
pop
add
jg
adc
scas
aaa
cmps
(bad)
fnstenv
int3
jne
sar
daa
pop
cmp
or
fst
(bad)
jg
mov
xchg
out
bound
lods
xor
retf
push
mov
dec
mov
aam
sbb
into
jge
cmp
test
test
xor
sub
aas
add
std
mov
mov
scas
pop
or
jns
sub
adc
stos
pop
inc
lds
aas
ja
cmp
xor
mov
pop
js
hlt
xchg
push
in
cwde
lds
push
inc
shl
sub
je
nop
jge
push
mov
retf
test
in
neg
aas
dec
mov
fidivr
rcl
dec
adc
jb
sub
push
daa
sub
xchg
popf
repz
neg
push
add
es
sbb
enter
and
sbb
push
cmp
mov
and
data16
adc
mov
push
ret
or
sub
jl
push
dec
out
call
xor
sti
daa
or
xchg
or
je
pop
push
push
fdiv
popa
popa
in
fs
sbb
inc
xor
scas
mov
cmp
cwde
adc
movs
fldenv
jle
push
adc
xchg
cli
sbb
dec
xchg
std
retf
inc
push
bound
inc
hlt
xor
add
movs
jae
rol
stos
push
arpl
gs
add
in
mov
not
call
cwde
mov
rcr
mov
pmulhw
daa
shl
and
sub
loop
mov
sbb
push
mov
pop
mov
outs
psllw
adc
sti
enter
mov
fbld
int
cmp
aas
(bad)
push
or
xchg
cdq
dec
lods
imul
popa
mov
or
nop
jecxz
add
cmps
adc
jbe
sbb
sbb
fxch
mov
add
aad
add
pop
and
ror
mov
add
mov
xor
stos
mov
(bad)
shl
shl
inc
jp
jo
push
stos
pop
xor
jnp
les
retf
xchg
enter
sub
pop
jmp
popf
cs
and
movs
jbe
and
shl
fs
les
mov
cli
xchg
aaa
sub
scas
fcmovnbe
enter
xor
ret
push
cmps
movs
sbb
je
ds
jecxz
pusha
das
dec
ins
mov
loopne
mov
push
sbb
rcr
fcom
rol
push
into
push
or
js
inc
xchg
mov
div
xchg
xor
pop
in
rcl
mov
(bad)
jecxz
cmp
or
and
xor
add
xor
pop
fdiv
iret
jae
pushf
push
shr
and
nop
imul
lahf
movs
mov
clc
adc
jno
in
jne
jmp
dec
inc
popa
jo
ror
(bad)
xchg
movs
xchg
mov
imul
rol
aas
loope
dec
fild
test
jmp
inc
sahf
(bad)
neg
fiadd
sbb
push
pop
cmps
mov
scas
aad
sub
mov
in
xchg
js
push
lahf
arpl
mov
mov
mov
pusha
ret
stc
ds
xchg
movs
xchg
stos
mov
lds
sbb
rcl
cmp
sar
shl
iret
sub
mov
nop
sub
int3
pop
popf
mov
xchg
mov
push
xor
mov
xchg
outs
ret
repz
push
loop
mov
push
mov
repz
jle
repz
cmp
in
stc
jb
jg
cmps
cmp
retf
jbe
inc
out
in
rcr
and
adc
setno
popf
fdiv
aad
movs
dec
cmp
and
mov
cli
sahf
push
cmp
and
mov
add
cmc
mov
call
sbb
out
test
xchg
fxch
test
or
mov
add
scas
push
gs
dec
dec
fwait
add
sbb
xchg
pop
fist
scas
outs
mov
pop
or
cmp
mov
xor
movs
addr16
fld
neg
repz
rcr
or
cwde
push
aaa
je
ret
sbb
inc
aam
lea
jmp
in
ja
pop
mov
adc
sub
jle
xor
mov
xchg
push
mov
xor
dec
jns
and
jle
and
or
pop
hlt
and
push
arpl
cmp
and
sahf
mov
xchg
stc
fbld
or
inc
rol
rcl
xchg
movs
loope
mov
aas
repnz
stos
inc
outs
cwde
push
sub
int3
ja
ret
lods
dec
or
mov
jp
fs
arpl
cmps
loopne
cli
sub
fdiv
mov
jo
jns
mov
jp
jae
adc
(bad)
lods
push
int
push
rcl
xchg
mov
es
bound
cmp
es
sub
push
arpl
ror
sbb
dec
xchg
mov
pop
cmps
inc
retf
xor
push
mov
jl
mov
std
jge
xor
psubsb
xor
outs
jne
inc
mov
and
mov
fiadd
cwde
add
sub
scas
hlt
inc
adc
push
or
push
inc
xchg
jecxz
loop
sub
(bad)
xor
int
mov
test
dec
std
test
cmp
inc
sub
and
or
sbb
inc
cld
sbb
adc
arpl
or
jmp
jge
and
fcom
into
sti
mov
and
pop
dec
ret
sub
jo
push
xchg
dec
jo
xchg
in
cli
dec
xchg
retf
inc
mov
hlt
sbb
js
cmp
sbb
sbb
mov
outs
or
pop
rcl
in
sub
aaa
push
lock
test
leave
into
and
lds
mov
out
int
xchg
push
fs
mov
je
fwait
rcr
(bad)
mov
pop
xor
mov
loope
bound
sbb
pop
cwde
cmp
(bad)
dec
add
pop
js
mov
shr
jo
jo
clc
out
movs
loope
jmp
adc
and
push
pusha
inc
push
test
xlat
xchg
in
and
or
mov
mov
xor
rcr
sbb
mov
mov
or
movs
mov
cmp
xchg
bound
loop
cwde
movs
dec
dec
push
sub
ss
pop
sbb
mul
loop
mov
xor
rol
dec
(bad)
in
mov
mov
cmp
xchg
out
fistp
int3
cmovno
arpl
cmp
das
sub
pusha
inc
das
(bad)
test
out
xor
enter
mov
sub
adc
jb
xor
pop
push
inc
or
aam
in
mov
aam
xchg
pop
jno
push
shr
lods
xchg
adc
pop
mov
pop
jge
hlt
jbe
pop
add
pop
stos
retf
das
fstp
mov
imul
and
std
jno
aad
in
sub
cmp
arpl
int3
mov
and
pop
xor
xchg
mov
out
movs
lea
mov
sub
icebp
mov
fdiv
lahf
loop
in
inc
adc
add
dec
in
jb
mov
jnp
bound
add
push
mov
xor
xor
shl
mov
or
dec
sub
or
xor
mov
jle
sub
pushf
push
push
scas
mov
stos
push
inc
adc
rcl
dec
fdiv
jp
std
cmps
xor
retf
mov
pushf
mov
sub
or
out
sub
inc
jmp
inc
push
in
in
pop
out
mov
inc
outs
test
pop
push
jno
mov
lahf
xchg
jns
(bad)
xchg
xor
push
call
xchg
inc
push
dec
or
xor
push
cwde
pusha
sub
popa
mov
jge
cmp
inc
ror
js
ret
lock
mov
and
cwde
hlt
loopne
fbstp
push
dec
mov
mov
mov
popf
out
mov
or
cmp
pop
adc
mov
and
inc
mov
push
jp
pop
ds
mov
xchg
aaa
mov
std
fbstp
call
xchg
rcl
dec
movhps
and
bound
std
(bad)
fcmovne
sahf
clc
clc
stc
jb
cmp
push
pop
out
out
mov
xlat
mov
mov
mov
pop
out
aad
push
into
mov
cdq
(bad)
cli
jne
pop
je
pop
sbb
xchg
xchg
imul
stos
push
xchg
adc
mov
mov
mov
dec
add
cs
xchg
pop
inc
mov
cmp
stos
cwde
jmp
icebp
fdivr
fs
les
or
xchg
mov
loopne
(bad)
xor
loop
test
daa
fmul
repnz
test
outs
mov
sub
adc
adc
dec
push
lods
push
stos
arpl
mov
jmp
xchg
loope
mov
in
cmc
inc
fstp
pop
sbb
jbe
adc
push
push
loope
and
xor
jecxz
jmp
sti
arpl
xchg
adc
imul
add
inc
mov
jg
or
inc
das
mov
std
stc
and
ficom
fstp
cmc
dec
xchg
cmc
int3
pop
inc
inc
das
xchg
out
sti
jbe
adc
xor
mov
cmp
mov
push
hlt
adc
or
int
jle
push
loopne
lahf
loopne
cmps
pop
dec
jg
sahf
(bad)
out
push
inc
cmp
xor
mov
(bad)
push
cmps
dec
fucomip
or
inc
and
es
inc
aaa
jle
dec
fsubr
mov
(bad)
push
fisub
lock
jecxz
or
(bad)
int3
adc
pushf
inc
int
sub
loopne
mov
mov
xor
cld
inc
sbb
sar
add
adc
mov
pavgw
addr16
push
xchg
pop
ret
clc
sub
pop
pop
stos
jg
mov
lock
cmps
shl
sbb
stos
mov
xchg
scas
mov
stos
enter
sub
gs
(bad)
call
or
jb
je
(bad)
pop
ins
popa
arpl
inc
in
dec
push
mov
push
adc
ins
lods
add
push
test
fsubr
int3
xor
cmc
rcr
xchg
dec
ret
mov
jno
cwde
and
and
xor
stos
xchg
jnp
and
fdivr
clc
cmp
(bad)
rcr
idiv
xor
jmp
bound
in
aad
cmp
out
add
adc
es
mov
dec
leave
jo
push
inc
cs
(bad)
cld
or
aad
sub
pop
sbb
outs
aaa
push
sbb
std
out
inc
loopne
stos
cmps
hlt
call
dec
ds
(bad)
xor
in
or
lds
gs
add
mov
mov
sbb
sbb
dec
in
(bad)
adc
test
cmp
imul
hlt
outs
(bad)
out
mov
jns
push
mov
or
add
fwait
pop
jg
dec
sbb
dec
ja
clc
mov
and
in
pusha
adc
repnz
push
jb
adc
ret
rol
xchg
data16
pop
cmp
sub
lds
xor
jo
cmp
jg
(bad)
scas
fcmovu
lods
popf
repz
jnp
das
jmp
dec
(bad)
retf
lods
out
sbb
ficom
dec
neg
push
rol
cmp
pop
int3
lahf
shr
call
mov
jl
repz
sub
xchg
cmp
jmp
je
add
cld
push
or
retf
inc
stc
aad
ret
or
pop
sub
addr16
imul
(bad)
jle
push
fwait
jns
inc
loop
jmp
call
mov
push
lods
dec
icebp
xor
xor
or
xchg
ret
add
inc
dec
fnsave
sub
in
popa
ins
adc
lods
jge
cdq
loope
sub
dec
aaa
aad
dec
mov
sbb
sbb
aas
push
dec
sbb
aad
xor
mov
mov
cmp
loop
jle
sub
(bad)
retf
mov
and
stos
mov
(bad)
aam
mov
fmul
dec
dec
and
or
enter
sahf
mov
outs
push
data16
mov
add
test
mov
cmp
pop
or
dec
cmp
and
out
sub
ret
xchg
mov
inc
or
pop
mov
cmp
push
ja
jle
(bad)
ds
loop
popf
mov
mov
cwde
fisub
mov
out
jg
pop
add
adc
dec
jae
in
jnp
xor
(bad)
ins
dec
mov
xchg
adc
imul
inc
iret
scas
push
sbb
cmp
adc
lea
lea
mov
or
dec
pop
aad
out
inc
outs
cmps
test
sub
scas
xlat
dec
data16
loop
cmp
adc
mov
fcomp
fmul
test
pushf
ds
pop
mov
or
mov
in
push
or
(bad)
repnz
or
pusha
stos
aas
adc
cmps
and
add
movs
or
xor
ins
popa
mov
adc
or
addr16
in
sbb
jmp
mov
(bad)
stc
ja
imul
stos
and
dec
retf
cli
ret
push
xchg
mov
or
push
les
inc
rcr
mov
enter
es
and
pop
xchg
mov
mov
es
test
cwde
jge
pop
mov
div
push
mov
retf
call
nop
bswap
pop
push
xlat
sbb
add
mov
inc
push
and
dec
retf
mov
leave
sub
and
ja
xchg
cmps
in
cmc
ja
mov
int
mov
mov
sbb
fucomi
sub
dec
dec
popa
scas
inc
stc
xlat
inc
push
imul
imul
sub
mov
xchg
ficomp
jo
jne
rcl
aam
xor
and
test
jne
retf
shr
cmp
sub
push
in
mov
add
push
dec
stc
ficom
pop
or
push
fiadd
retf
inc
sti
mov
adc
cmps
aaa
or
iret
and
das
xor
jmp
jnp
aad
mov
push
fsub
mov
mov
mov
shl
leave
xlat
mov
fucomp
push
and
sar
retf
loopne
xor
fisttp
jecxz
sub
aam
xchg
enter
je
pop
pushf
cdq
add
stos
jb
fstp
xor
retf
or
retf
test
sbb
call
mov
and
mov
mov
push
add
aad
pop
sbb
push
mov
cs
or
inc
adc
jo
pop
pop
cmp
hlt
jns
cmp
inc
(bad)
rol
push
xchg
add
pop
jae
pop
add
movs
fild
jmp
add
out
(bad)
sbb
mov
out
jns
bound
rcr
gs
push
cmp
in
ds
enter
push
mov
mul
inc
push
movs
aam
adc
and
dec
mov
mov
icebp
cmps
mov
movs
or
mov
or
iret
adc
cmp
aaa
cmp
sbb
out
outs
rcl
ret
std
xchg
retf
stos
cmps
out
pextrw
xor
inc
xchg
sub
mov
add
inc
out
mov
dec
(bad)
mov
jb
xchg
and
and
jmp
sahf
mov
add
jp
jns
enter
ds
or
js
shl
rcr
cmps
fmul
movnti
in
fucom
or
jo
rol
js
jns
nop
lock
add
hlt
mov
and
and
scas
movs
or
pop
(bad)
xlat
popf
sbb
and
push
jb
xor
inc
xor
dec
or
push
xor
fstp
mov
js
push
aad
gs
mov
and
out
dec
push
adc
mov
fild
loop
adc
pop
cmps
pop
nop
adc
push
das
inc
ficomp
inc
or
pushf
cmp
and
jmp
mov
add
pop
lods
stos
(bad)
jle
inc
pop
sbb
leave
or
ja
sub
mov
sahf
shl
dec
mov
mov
sbb
sub
pop
jb
pop
cmp
xor
ror
arpl
fisttp
leave
std
inc
mov
rcl
les
adc
in
ret
ja
xchg
imul
mov
pop
mov
mov
sbb
dec
or
jmp
cmps
icebp
xor
in
(bad)
jns
or
sub
mov
and
mov
cwde
or
inc
(bad)
inc
in
jge
xlat
mov
stos
xchg
lods
lea
pop
push
mov
mov
mov
push
int
xchg
adc
add
xchg
inc
jno
mov
push
fwait
sub
stc
cmp
(bad)
xchg
dec
rcr
movs
mov
jp
lods
enter
inc
add
mov
mov
fcmovnbe
xor
addr16
hlt
mov
jg
fistp
pusha
pop
xor
xor
in
xor
movs
jae
imul
cmp
xor
push
sub
call
sub
sbb
lea
pop
mov
push
cs
xor
inc
(bad)
cmps
movs
jb
pop
pushf
mov
dec
rcr
jns
push
pop
fld
mov
mov
enter
mov
loope
not
add
adc
inc
xchg
push
xchg
adc
fidiv
lock
hlt
int
loop
sbb
dec
and
mov
cmps
call
out
lods
ret
(bad)
push
loop
in
scas
popf
ds
ds
push
lds
mov
xchg
dec
daa
arpl
xchg
xor
push
dec
cmc
out
dec
xchg
repz
fs
rcr
ja
or
or
shl
xchg
add
add
mov
rcr
in
enter
retf
imul
sub
mov
dec
ds
jae
sar
out
pop
mov
shr
mov
mov
fs
and
add
loopne
pop
cmp
dec
pop
shl
add
sbb
pop
fcomp
push
retf
lea
pop
push
int3
pop
mov
das
mul
pop
push
mov
pop
push
je
add
icebp
fwait
lods
call
popa
pop
imul
inc
sti
cmp
or
jmp
xor
test
cdq
int3
out
movs
xor
mov
je
pop
dec
xchg
dec
xchg
and
pop
xor
add
xor
mov
jmp
and
cmp
jl
adc
jmpw
leave
jo
neg
cmp
dec
xchg
mov
jmp
int
fdivr
lock
jmp
ins
add
ja
call
jb
mov
(bad)
mov
(bad)
mov
fcom
sub
loopne
xor
and
dec
in
call
repz
xor
sub
mov
stc
rol
rcl
imul
mov
das
sub
jbe
je
test
dec
pop
sti
fs
cmp
sub
stos
loop
mov
imul
(bad)
loope
jmp
movs
fadd
div
into
mov
xor
or
aas
mov
(bad)
mov
mov
cmp
aam
pop
stos
test
fdiv
pop
inc
mov
add
inc
mov
push
pop
loop
push
hlt
mov
and
(bad)
jae
inc
jae
loope
fadd
mul
pop
pop
or
fnstcw
sbb
imul
push
fwait
jmp
pop
out
mov
stc
int
stc
lea
out
pushf
mov
vcvtps2dq
and
fs
and
and
sar
pushf
gs
in
push
loop
gs
cdq
pop
push
cmps
xor
jo
fcomp
idiv
inc
shr
ss
fild
clc
idiv
call
mov
(bad)
in
lahf
or
pop
js
sub
fcom
out
or
pop
pop
call
les
cmc
ja
add
cmps
push
inc
xchg
adc
addr16
cmp
ficom
mov
in
push
repnz
jbe
pop
push
jne
cli
inc
fimul
mov
mov
add
and
mov
jno
jmp
jo
jg
movs
cmp
(bad)
ss
fiadd
(bad)
test
outs
hlt
loop
sti
(bad)
and
dec
scas
aad
repnz
nop
dec
pop
jmp
je
les
movs
sub
out
and
cld
loopne
and
call
mov
or
fisttp
ja
(bad)
sub
out
sbb
sub
out
cwde
pop
add
int3
mov
aam
sub
push
inc
or
push
cmp
xchg
add
pushw
(bad)
jg
loope
push
pop
jle
mov
enter
cwde
lds
iret
rol
cmp
mov
mov
jg
jmp
sub
adc
cmp
les
adc
sub
inc
sbb
push
pop
loop
jmp
mov
(bad)
scas
or
rol
adc
or
cmp
push
cld
aam
push
shl
aam
int
jecxz
jl
aas
call
mov
mov
pop
and
xor
adc
mov
mov
cs
and
test
movs
pop
push
cmps
pop
cmc
repz
mov
or
xchg
cmp
jns
mov
js
push
jmp
call
pop
test
je
icebp
pop
pop
jg
xchg
jbe
bound
mov
jecxz
add
loopne
loopne
movs
leave
mov
cdq
fstp
clc
mov
xor
xchg
cli
xchg
jo
gs
movs
lock
out
fld
cwde
mov
add
dec
ja
ret
mov
xor
das
outs
inc
jg
loopne
inc
jge
sub
and
mov
arpl
jp
push
push
mov
lods
int
jle
push
out
cmc
cmp
idiv
ja
sub
sub
and
hlt
sbb
loop
ins
lahf
push
or
dec
aam
fistp
push
or
cs
fnstsw
movs
repnz
push
sbb
jbe
jnp
shr
out
loope
scas
mov
repnz
cs
cli
(bad)
mov
and
sub
test
imul
inc
pushf
scas
cmp
outs
cld
pop
popf
int3
fisttp
jmp
inc
mov
xor
fdiv
cmps
paddusw
add
xor
fs
adc
cmp
ret
int3
js
sti
cmp
ins
rcr
mov
mov
stos
mov
and
cmc
fiadd
pushf
cmp
inc
les
or
xor
jb
(bad)
shl
in
and
fnstenv
cmp
xchg
ja
stc
retf
out
enter
adc
fwait
xchg
and
icebp
das
fldcw
fwait
push
or
(bad)
or
(bad)
neg
gs
retf
pop
adc
rcl
sub
sub
xor
pop
test
popa
add
dec
leave
enter
lds
cmp
pop
add
arpl
mov
jmp
jns
cmp
pop
addr16
stos
inc
jge
sub
sar
xor
in
retf
mov
std
dec
and
enter
pop
enterw
jmp
or
inc
aas
cmps
js
call
mov
dec
je
cmp
xchg
mov
test
and
pop
sti
mov
outs
out
arpl
pop
push
mov
xor
popf
adc
xchg
jo
or
or
je
sub
mov
leave
adc
pop
sub
adc
cmp
cwde
cli
mov
scas
mov
(bad)
in
fwait
pop
mov
xchg
push
xchg
inc
and
sub
loop
sbb
lds
pop
jbe
xor
mov
push
das
(bad)
push
push
sbb
or
outs
in
and
cmps
movs
xchg
xchg
push
or
cld
into
int
xchg
lock
xchg
ds
fsubr
(bad)
int3
adc
out
xchg
pop
or
icebp
cmp
shr
xlat
stos
sub
mov
lods
das
mov
xor
xchg
movs
xlat
cmp
dec
rol
sti
and
movs
adc
loope
outs
cmps
into
xor
pop
mov
and
mov
cmp
shl
xchg
xor
mov
mov
or
mov
cdq
xlat
jg
mov
push
mov
xlat
dec
inc
cmps
xchg
sub
mov
nop
(bad)
out
shr
mov
xor
jg
jle
daa
pop
in
fstp
scas
cmp
and
push
rcl
inc
pop
cmc
inc
(bad)
sub
mov
pop
mov
or
ins
(bad)
rcr
ret
jae
fcomi
add
scas
inc
mov
stc
ss
mov
test
hlt
inc
adc
or
arpl
dec
bnd
call
add
out
adc
xchg
loope
ret
mov
stos
pop
jmp
in
fwait
neg
dec
cmps
adc
xchg
sub
jo
adc
sbb
mov
xchg
mov
or
xchg
cmp
retf
mov
sar
nop
cwde
and
pushf
fcmovnbe
je
retf
mov
mov
inc
xchg
sub
fsub
cmp
sbb
int3
sub
push
daa
cmp
in
sbb
add
lds
mov
add
sub
cdq
add
xor
add
ss
ss
adc
inc
push
ins
dec
in
sub
inc
popa
retf
aas
loop
jo
sub
nop
lea
jmp
arpl
out
sahf
pusha
fld
sub
sti
cmc
add
push
cdq
mov
enter
or
cmp
fwait
and
push
add
es
cwde
sbb
fbstp
push
hlt
mov
loope
sub
ja
fist
sahf
mov
xor
retf
or
stc
xlat
data16
adc
mov
(bad)
sbb
mov
xor
dec
sbb
add
cdq
mov
and
nop
sbb
aaa
cld
dec
pop
and
js
xlat
(bad)
xchg
xchg
xor
(bad)
jg
repnz
sub
ins
inc
in
mov
push
add
int
inc
push
test
cld
push
cmp
jbe
sbb
mov
push
adc
mov
retf
repnz
lods
stos
xchg
shl
push
jb
sub
adc
imul
lods
fs
jg
in
mov
cmc
dec
push
sar
jns
xor
pop
adc
aaa
xor
mov
mov
mov
ja
push
and
rcr
sti
xchg
push
leave
mov
push
dec
sti
cli
mov
mov
mov
(bad)
in
adc
or
push
test
jg
in
xchg
cmp
xor
xchg
push
jl
in
das
daa
icebp
add
push
fisttp
xor
retf
in
xor
call
call
lds
in
jbe
sbb
loopne
sar
je
jg
mov
push
scas
inc
dec
push
(bad)
mov
jno
mov
mov
add
xor
(bad)
inc
sbb
push
inc
jg
nop
outs
ja
add
xchg
std
pop
addr16
test
sbb
das
es
test
xchg
cmps
cwde
sbb
xor
sahf
or
push
inc
sar
cmp
dec
loopne
xchg
imul
sub
bsf
inc
add
loopne
nop
adc
lods
loope
dec
or
jl
stos
pop
pop
imul
ds
dec
pop
or
cmp
sub
das
jmp
pop
shr
xchg
or
mov
sbb
bound
lea
outs
xor
mov
daa
mov
lods
in
push
mov
(bad)
(bad)
jmp
mov
retf
sbb
push
shl
push
jnp
stos
inc
cli
push
fistp
imul
add
sub
dec
cmc
movs
rsm
data16
lea
xor
lods
add
(bad)
addr16
int
shl
(bad)
xchg
scas
or
xlat
pop
xchg
dec
shl
scas
mov
mov
out
dec
mov
dec
pop
bound
sbb
lods
icebp
or
cwde
test
pop
xchg
fstp
add
jg
arpl
mov
test
lea
mov
imul
test
jge
xor
fcomp
push
test
out
mov
std
cmp
adc
ret
jle
pushf
mov
cld
cmp
setge
shr
pop
cmp
mov
popf
outs
pop
scas
mov
call
scas
cmp
adc
jnp
and
stos
fwait
loop
in
mov
rcr
rol
rcl
(bad)
aas
and
dec
push
adc
mov
mov
mov
xor
pop
call
pop
in
mov
cmp
add
fld
leave
cmp
mov
push
adc
xchg
jb
ror
xor
mov
mov
jmp
cmps
lods
les
test
stos
repnz
clc
ins
mov
push
int
add
fwait
mov
xor
out
push
xchg
scas
xor
mov
scas
sbb
push
pop
jae
repnz
jp
bound
ins
mov
xchg
retf
jns
popf
gs
rol
jmp
not
test
pop
icebp
repz
call
and
aad
sar
in
jmp
jo
pop
mov
fidivr
pop
stos
or
ja
mov
cwde
mov
test
xchg
scas
aas
sar
jmp
repnz
push
mov
and
leave
push
xlat
xchg
pop
pop
inc
cmp
ret
test
jg
cmp
sub
js
push
xor
sub
or
push
jne
scas
mov
push
jnp
mov
xor
mov
cmp
scas
mov
(bad)
call
or
mov
cmc
fwait
ret
clc
jmp
fcom
push
retf
out
dec
aam
push
ss
jb
xchg
in
xor
and
popa
fst
or
outs
dec
and
pop
popf
in
mov
arpl
cmp
xchg
jmp
cmp
and
aaa
jle
js
sub
call
inc
fidivr
stos
cmp
lods
and
dec
rcr
std
bound
adc
lods
xor
clc
scas
mov
adc
movs
dec
dec
mov
inc
enter
adc
jge
int3
dec
xlat
(bad)
jecxz
movs
mov
in
sbb
add
pop
mov
pop
inc
or
push
adc
int
add
xchg
adc
jl
or
test
or
int
push
push
retf
mov
xor
int3
pusha
call
mov
das
cmp
(bad)
push
fmulp
dec
jl
lods
push
movs
mov
lods
ins
addr16
adc
clc
repz
comiss
movs
push
into
mov
icebp
iret
test
test
fxch
and
pop
into
repz
mov
fsubr
jge
aad
pop
sub
jmp
fidiv
or
inc
aad
dec
shr
mov
mov
add
lock
cwde
sbb
push
retf
cmps
sub
popa
jp
mov
inc
icebp
gs
fsubr
sbb
jmp
jl
adc
push
cdq
cmps
sahf
nop
and
in
test
fnstcw
jne
xor
(bad)
dec
mov
jl
fnsave
pop
into
shl
movs
inc
pop
adc
inc
add
into
sbb
push
sub
ds
or
push
idiv
inc
jb
arpl
std
push
mov
jecxz
push
mov
fsubr
pop
lds
mov
pop
mov
addr16
out
loop
mov
out
pusha
add
lahf
jns
out
xor
fmul
push
leave
and
inc
pop
ins
mov
sub
xor
stos
pop
aam
xor
scas
adc
mov
cmp
test
fcom
and
imul
adc
test
data16
mov
repnz
jmp
push
mov
into
rcl
fisttp
ret
stc
das
xchg
fs
xor
xchg
(bad)
sub
scas
xchg
adc
(bad)
aaa
add
adc
hlt
dec
cmp
mov
xchg
mov
scas
xchg
push
lods
retf
and
loope
mov
push
aaa
mov
mov
push
sbb
out
or
adc
js
jmp
ret
lea
mov
loope
pop
loop
icebp
sub
rcr
rol
push
popf
int3
call
mov
cmp
jge
loop
cmp
mov
push
rcr
jmp
xchg
xor
dec
mov
inc
(bad)
fist
jnp
push
cmc
mov
jecxz
mov
idiv
mov
jne
dec
call
lock
cmp
jmp
adc
adc
xchg
cmp
fmul
fisttp
fimul
add
or
lar
xchg
clc
(bad)
xchg
inc
fdiv
add
iret
cmp
scas
iret
int
cmp
or
jecxz
sbb
xor
pop
fstp
into
xchg
es
and
push
cdq
add
add
and
pusha
ja
ins
imul
lds
cmp
ja
shl
and
inc
or
jle
dec
adc
push
test
jp
shr
cmp
push
daa
call
jb
mul
aam
mov
pop
adc
inc
stos
xlat
fucompp
jns
call
sbb
sub
cmp
fcom
push
push
push
inc
pop
xchg
lods
jmp
sti
shr
jl
aas
retf
sbb
inc
popa
lods
mov
inc
mov
and
push
movs
push
adc
retf
xchg
scas
sub
dec
out
ins
jae
add
lahf
cmp
jecxz
jmp
loop
push
out
mov
push
mov
fst
cmp
out
sub
fidiv
pop
stc
push
xchg
xor
add
jl
pop
fucom
je
mov
test
in
mov
rcl
jp
into
out
mov
bound
cmps
push
xchg
cld
(bad)
(bad)
push
jae
pop
push
rcr
hlt
js
ss
dec
mov
jmp
jmp
mov
xchg
cs
push
and
and
jl
in
mov
call
imul
xor
aam
cmp
in
test
jnp
sbb
pop
shr
loop
jge
mov
mov
pop
mov
jmp
arpl
(bad)
mov
mov
sub
out
out
jg
sar
mov
adc
jge
sub
ss
retf
xlat
mov
adc
dec
(bad)
cmps
add
push
sbb
cmc
adc
cmp
mov
cmps
xor
add
sbb
dec
dec
sbb
outs
loopne
call
mov
jmp
mov
cmp
in
push
mov
mov
mov
sub
mov
pop
into
(bad)
mov
imul
fcmove
mov
sbb
stc
in
retf
mov
jle
popa
mov
sbb
push
aam
rol
popf
inc
lods
ret
iret
rol
ins
in
sbb
popa
mov
pusha
fs
outs
movs
or
ins
sbb
das
cmp
into
cmp
sahf
add
mov
or
ja
icebp
push
jns
mov
hlt
xor
xchg
push
in
arpl
xor
fisubr
retf
jle
test
imul
fwait
int
inc
pusha
sbb
inc
pop
ins
(bad)
mov
adc
jle
jno
sbb
arpl
add
ret
fist
nop
mov
or
xchg
push
dec
sbb
pop
sub
jno
cmps
xor
and
add
inc
push
out
xor
cwde
inc
pop
xor
test
jno
push
or
jle
dec
addr16
push
jmp
pop
das
in
push
cdq
push
loop
mov
call
cmp
nop
loopne
cli
or
out
jbe
(bad)
(bad)
mul
fwait
xor
push
ss
stc
cmc
jp
movs
ror
test
push
or
jecxz
cmp
scas
clc
shl
dec
fcmovb
mov
xchg
mov
cwde
and
cmp
push
adc
outs
xor
scas
sub
jecxz
mov
mov
cld
ins
sbb
sub
inc
push
push
scas
cmp
sbb
in
cs
lahf
xor
out
mov
dec
or
sbb
scas
mov
add
push
ret
jb
or
cwde
push
jle
or
add
inc
add
sbb
ss
ja
rdmsr
and
int
and
or
lea
pop
pop
pop
addr16
rcr
aaa
adc
call
jnp
and
dec
dec
pop
fidivr
out
lods
cmp
mov
mov
inc
arpl
push
dec
push
retf
pusha
add
adc
loopne
aad
inc
or
lds
xchg
pop
sbb
mov
or
jae
scas
call
cmp
jno
mov
xchg
or
lea
test
push
jl
out
shl
adc
push
in
je
mov
dec
les
push
push
xor
fld
popf
cmps
(bad)
(bad)
cmc
aad
mov
mov
fstp
mov
jo
test
jns
aam
imul
pop
push
cld
popa
dec
mov
jl
mov
jbe
mov
inc
push
adc
ins
cdq
enter
je
mov
fldcw
xor
dec
cli
call
fcomp
sti
movs
enter
adc
and
jg
adc
sbb
xchg
pop
add
bound
mov
jmp
push
pop
push
jg
xchg
or
xor
imul
hlt
out
and
add
sbb
leave
xlat
imul
cmp
sub
dec
xchg
add
hlt
mov
jne
push
repz
cmc
movs
and
aad
xchg
mov
fwait
pop
into
je
pop
adc
add
test
mov
fisub
fistp
sub
xchg
fwait
outs
inc
sbb
jmp
xchg
sub
inc
sti
sbb
push
jl
call
ins
mov
mov
aam
mov
push
call
call
push
test
cmp
ror
xchg
push
fidivr
(bad)
or
mov
jg
aam
cmp
cmps
mov
jae
inc
xor
rcl
push
pop
or
push
(bad)
pushf
jl
dec
retf
mov
xchg
jbe
std
ret
retf
sub
enter
pop
out
outs
pushf
cmps
sbb
(bad)
cmp
in
mov
mov
mov
imul
ret
add
repz
and
ins
sar
mov
ins
loope
push
les
rcl
clc
push
mov
cwde
sbb
std
jmp
daa
mov
inc
inc
xchg
loope
sub
xchg
push
outs
sub
jge
push
cmp
inc
ret
pop
punpckhbw
test
js
jmp
cmp
xor
push
and
push
xchg
ja
xor
dec
outs
out
add
mov
leave
mov
fdivr
pop
(bad)
fisubr
ret
inc
inc
cmps
arpl
je
jmp
movs
xchg
or
and
or
inc
imul
fcom
lds
jb
mov
scas
add
call
xchg
pop
pop
xchg
xchg
imul
mov
sbb
xchg
stos
pop
aas
sti
mov
xchg
or
xlat
push
inc
repz
inc
sbb
and
xor
pop
cmp
ds
sub
std
cmp
lahf
movs
or
inc
pop
fsub
(bad)
inc
pop
cmp
sahf
imul
leave
neg
xchg
adc
dec
je
add
in
pop
fsub
ss
fidiv
mov
outs
inc
dec
xor
not
mov
int3
inc
ss
mov
fsub
xchg
cwde
dec
add
mov
(bad)
pop
mov
out
jmp
mov
xchg
mov
dec
push
addr16
ss
inc
jmpw
(bad)
neg
test
jb
cwde
add
sbb
mov
xlat
pop
mov
jg
push
les
mov
mov
scas
mov
in
fsub
lods
cli
pop
call
retf
movs
xor
je
pop
retf
call
xchg
fwait
mov
dec
sar
mov
div
add
jb
push
mov
jno
popa
fistp
adc
pop
leave
movs
mov
rol
dec
out
dec
or
cmp
xor
xor
daa
mov
movs
push
xchg
cmp
pop
sub
dec
sub
out
subps
sbb
mov
lahf
inc
mov
stos
ficom
sbb
dec
test
dec
add
out
mov
inc
int3
push
retf
sbb
push
and
sbb
push
add
sub
cmp
mov
adc
mov
ins
xor
retf
sub
clc
cmova
mov
jno
ins
enter
ins
fldpi
jo
loop
mov
mov
jno
ss
rol
lods
sbb
loop
in
cmp
pushf
mov
pop
pop
adc
inc
lods
adc
lds
rol
imul
push
push
lds
sub
xor
cmp
xlat
dec
popa
(bad)
jne
adc
movs
nop
popa
push
ss
jbe
sbb
loopne
leave
mov
cmps
sub
test
push
sbb
(bad)
jmp
mov
lock
sti
dec
in
dec
mov
sbb
pop
repz
or
dec
and
mov
fst
outs
xchg
push
inc
sti
mov
js
cmc
test
jnp
mov
dec
les
xchg
inc
or
pop
arpl
ins
add
adc
je
or
pop
pop
into
call
xchg
and
xchg
dec
aaa
adc
movs
inc
sub
xchg
les
lock
xor
push
or
add
retf
pop
inc
inc
and
loope
add
rcr
xor
jecxz
pop
lds
leave
in
shl
mov
cld
sub
inc
cmc
jmp
fwait
les
and
inc
ds
adc
je
mov
sub
pop
div
adc
xlat
xor
rol
(bad)
pop
lea
mov
sub
or
pop
stos
loop
push
adc
in
inc
or
jl
mov
pop
pushf
lock
lock
push
dec
push
jmp
or
out
aad
test
leave
fist
hlt
inc
push
cs
inc
loop
test
ret
or
adc
das
sub
pop
cmp
sub
xchg
mov
imul
pop
std
enter
mov
cdq
enter
sahf
and
rol
jg
repnz
loop
std
lahf
(bad)
xchg
test
ins
pushf
or
xchg
sbb
mov
in
movs
add
stc
in
adc
stos
je
or
jmp
jo
sub
gs
shr
and
fwait
inc
pusha
pushf
into
cmp
sbb
hlt
mov
add
retf
xor
pushf
cmp
stc
inc
mov
pop
and
adc
add
leave
sti
into
add
nop
dec
push
add
into
movd
xchg
xchg
xchg
sub
adc
jno
daa
jmp
inc
sub
inc
pop
mov
(bad)
in
mov
xor
hlt
dec
es
(bad)
push
mov
and
inc
pop
(bad)
sbb
and
or
aas
or
or
cmp
sbb
inc
test
leave
fs
pop
bsf
rcl
test
enter
push
and
inc
push
movs
inc
push
push
outs
mov
lods
jbe
lea
push
push
call
jae
dec
push
out
repnz
push
jp
mov
pop
mov
sub
cmps
mov
or
cwde
add
jecxz
cmc
in
jp
pop
repz
into
push
mov
jecxz
push
aas
pusha
aaa
aad
cli
sahf
popf
stc
pop
(bad)
mov
add
jnp
scas
mov
aam
adc
popf
jns
das
inc
(bad)
movs
or
push
call
inc
push
or
push
cmp
mov
or
cmp
cmc
add
mov
xor
ins
jo
push
or
cmp
push
mov
fcomp
nop
mov
out
sti
mov
dec
cmp
xor
pop
cmp
movs
out
mov
(bad)
loop
sub
jo
cdq
pushf
(bad)
xchg
or
test
sub
(bad)
in
inc
fs
mov
push
pop
push
ins
or
jge
lods
sub
xchg
int
push
and
mov
push
add
ffree
cwde
cs
(bad)
jg
out
jae
imul
push
out
out
push
int3
out
jge
mov
sti
add
sub
retf
sbb
ror
jnp
adc
ficom
(bad)
pop
sbb
out
and
ins
test
mov
rcr
cmp
sbb
loopne
dec
retf
ror
lahf
cwde
jmp
mov
stc
fiadd
xchg
xchg
cmps
pop
popa
add
sub
inc
(bad)
loop
clc
pushf
pusha
xor
aaa
ror
mov
aam
add
adc
test
movs
ja
loope
ror
inc
out
loopne
mov
adc
sub
mov
data16
adc
add
mov
outs
fbld
sub
clc
jbe
sub
gs
(bad)
jmp
adc
jge
in
rcl
cwde
sub
stc
inc
xchg
mov
add
xchg
mov
adc
gs
mov
cmps
nop
scas
adc
add
outs
fwait
xlat
pop
lds
inc
inc
jge
or
enter
inc
test
imul
cmp
push
dec
fs
cmp
aas
push
sbb
outs
inc
fs
bound
push
out
add
mov
and
fild
shr
sar
add
mov
rcr
jbe
out
out
fld
imul
add
jecxz
push
inc
xor
push
fdiv
xor
ret
scas
xor
dec
adc
fs
(bad)
xlat
pop
loop
and
repnz
shl
xchg
mov
jp
xor
fcmovnu
test
pop
adc
cmps
cmp
add
fisubr
xchg
add
ins
mov
sbb
lods
lea
fbld
fidivr
push
mov
or
xchg
jne
scas
dec
add
sub
(bad)
pop
xor
and
enter
cmp
loope
dec
adc
in
mov
shl
cmp
push
or
enter
in
or
js
sbb
mov
push
add
call
mov
inc
cmc
sbb
mov
pop
(bad)
and
popf
repnz
dec
adc
inc
mov
jecxz
neg
push
sub
fstp
dec
fwait
gs
dec
mov
fldenv
jno
in
lahf
pop
xchg
push
mov
bswap
xchg
loope
outs
in
mov
test
adc
mov
out
sahf
(bad)
test
mov
cmp
xor
inc
retf
nop
sub
test
cmp
push
shr
enter
cmp
pop
sub
push
dec
iret
dec
or
push
dec
dec
jl
sub
loopne
xchg
pop
outs
xchg
and
push
mov
mov
or
jbe
ror
(bad)
jg
jns
jge
jmp
xor
shl
cmp
shr
(bad)
enter
out
inc
nop
cmp
mov
or
ins
push
mov
xchg
daa
inc
pop
movhps
in
sbb
arpl
pop
inc
sbb
and
push
leave
xchg
mov
neg
mov
push
mov
xchg
xor
cmp
mov
pop
cmp
fisttp
sub
stos
push
test
dec
scas
sub
cmp
imul
inc
xchg
ja
fst
pop
fisub
mov
sbb
push
xchg
ds
xor
int
(bad)
sub
or
sahf
xchg
mov
cmps
xlat
xor
mov
clc
xor
jo
retf
pop
cs
pop
cmps
push
ss
add
fild
ins
mov
pusha
mov
jns
repz
fcom
retf
pop
push
fstp
push
push
mov
sbb
fld
(bad)
xchg
daa
loop
sub
retf
cli
push
push
xchg
inc
in
fbld
inc
mov
push
lock
cmp
jb
dec
cmp
mov
xchg
or
mov
sahf
pop
in
sbb
adc
jns
dec
(bad)
pusha
xor
es
les
sti
inc
inc
fdivr
sbb
jb
sbb
dec
add
xor
std
dec
icebp
inc
fld
push
popa
jg
adc
sbb
shr
or
daa
je
or
rcr
dec
fs
and
jge
push
nop
xor
dec
adc
add
cmps
and
rcr
lods
lock
mov
retf
jbe
adc
jae
xor
mul
out
push
jae
mov
jmp
jle
mov
jmp
cmc
int
mov
loopne
aam
dec
push
out
xor
lods
adc
inc
mov
and
add
les
mov
aaa
ja
in
cdq
stos
cs
out
add
nop
int3
pop
loop
mov
jp
inc
lock
and
lahf
cld
nop
inc
mov
fwait
or
inc
test
arpl
cmp
inc
push
ss
loope
cdq
or
pop
mov
int
mov
push
and
stos
xor
fwait
mov
add
push
mov
pop
out
mov
xlat
pop
adc
fsubr
(bad)
mov
mov
aam
ds
call
(bad)
inc
mov
stc
xor
ins
push
mov
in
pop
xlat
fistp
test
mov
test
pop
pushw
dec
arpl
mul
imul
iret
mov
call
mov
cmp
retf
mov
add
or
adc
mov
in
jne
mov
add
sbb
ret
mov
(bad)
sub
shr
add
jnp
cmps
out
fild
xor
mov
aad
sub
xlat
imul
arpl
jnp
fs
mov
jns
mov
xor
jge
cli
push
mov
scas
(bad)
inc
frstor
hlt
mov
jbe
loopne
leave
stos
imul
add
aad
(bad)
mov
jnp
jb
retf
ss
addr16
test
sub
aas
cmps
rcr
es
add
ror
mov
jns
call
push
or
outs
rol
jae
mov
rcl
call
adc
stos
jmp
shr
outs
xchg
pop
fld
addr16
test
daa
aam
add
xchg
push
lahf
mov
cmp
ins
les
xor
adc
xchg
xchg
loopne
sub
fild
mov
int3
jb
mov
adc
push
in
loope
adc
mov
rcl
mov
repnz
(bad)
inc
ret
mov
sbb
iret
rcr
mov
idiv
retf
pop
adc
cmp
sti
xor
sbb
lock
loopne
xchg
xchg
sub
not
mov
inc
cmp
add
mov
push
arpl
push
lea
aaa
sbb
sbb
test
gs
xor
jle
cwde
mov
out
hlt
jge
pop
jge
pop
cwde
movs
jb
add
mov
sbb
ss
movs
imul
add
sahf
sub
sub
dec
pop
push
aad
inc
sub
push
icebp
mov
push
inc
mov
pop
push
aaa
(bad)
loopne
stos
test
setae
stos
pop
jno
mov
mov
lock
xchg
dec
dec
sar
outs
sub
jle
ret
xchg
js
stos
outs
xchg
mov
xchg
xor
xchg
stos
mov
fs
inc
iret
and
adc
in
outs
loope
fdivr
jno
xor
test
mov
ret
loopne
fldcw
or
inc
pusha
inc
jns
mov
repz
mov
xchg
or
int3
and
lock
xor
(bad)
mov
mov
sub
and
lods
jl
jae
pop
pop
fdiv
mov
call
push
mov
call
and
pusha
adc
sbb
cmp
(bad)
add
and
cmp
retf
into
lahf
jmp
mov
shl
sbb
add
rcl
mov
push
dec
lea
mov
cmc
setae
xor
shr
pop
dec
pop
dec
lds
popa
mov
xchg
pop
xor
repnz
xlat
fs
or
aad
lock
push
popa
mov
cmp
loopne
sub
call
cmps
push
mov
mov
jp
iret
mov
fs
pop
jnp
fsub
pop
popf
xor
xchg
xor
aad
pop
pushf
mov
loop
in
addr16
dec
mov
rcl
mov
enter
idiv
or
jo
es
inc
jecxz
xchg
jmp
enter
mov
(bad)
mov
mov
mov
xchg
out
cmps
imul
cmp
mov
shr
in
cs
push
jp
(bad)
int
pop
shl
imul
push
jo
or
fs
add
shl
add
mov
sbb
pop
imul
xor
ds
push
mov
mov
or
cmp
inc
dec
push
sbb
mov
mov
retf
add
idiv
mov
inc
aam
push
stos
aad
pushf
pop
popf
xlat
mov
jge
mov
cmp
dec
fld
fwait
movs
xor
push
push
push
pushf
loop
and
adc
fld
mov
mov
ins
out
clc
cmp
fbld
mov
cmp
aaa
mov
mov
mov
test
pop
mov
pop
pop
mov
js
or
(bad)
xor
outs
in
dec
jp
fld
fwait
mov
dec
add
push
xchg
mov
push
sar
into
xchg
jae
mov
lahf
mov
rol
and
adc
sti
hlt
mov
pop
test
ds
xchg
dec
(bad)
pop
call
dec
sti
ins
pop
mov
add
imul
push
fst
outs
ficomp
jnp
je
add
(bad)
mov
mov
clc
adc
scas
mov
jb
call
daa
(bad)
fnstenv
pop
addr16
push
dec
out
adc
outs
or
fild
mov
das
jp
mov
std
cli
pusha
arpl
mov
sub
js
popf
sub
mov
test
sub
in
aas
pushf
or
push
in
inc
xor
retf
ins
loopne
pop
pop
aam
arpl
retf
push
jmp
outs
pop
and
aad
lahf
adc
pushf
add
sub
cmp
rcr
or
jno
jg
and
pop
test
mov
fidiv
jecxz
jbe
sub
(bad)
push
xor
cmc
pop
xchg
or
cmc
js
mov
stos
mov
into
xor
stos
jl
dec
jp
out
add
sahf
je
cmp
xor
mov
cs
addr16
imul
xor
clc
adc
or
gs
rcr
dec
pop
bound
in
mov
not
add
jmp
jecxz
in
jg
out
sub
adc
aaa
repz
dec
stos
xor
mov
gs
dec
xchg
ror
dec
pop
pop
fs
xor
mov
movs
es
cli
repz
adc
rol
jp
std
inc
inc
jmp
sbb
call
pop
(bad)
cmp
out
push
mov
xchg
pop
adc
out
and
je
movs
ja
outs
pop
and
cmp
stc
mov
mov
push
cmp
pop
sub
jmp
repz
icebp
outs
push
imul
cmp
push
mov
loop
shr
mov
inc
cmp
frstor
xor
jbe
fwait
addr16
xchg
and
pop
sub
test
mov
arpl
mov
mov
hlt
push
(bad)
fimul
cli
into
inc
inc
leave
and
lock
mov
movs
sbb
xchg
adc
mov
(bad)
loop
push
daa
sub
int3
push
sub
fild
frstor
and
xor
je
cdq
jns
jle
sbb
mov
xchg
mov
xchg
dec
xchg
xchg
lods
push
adc
jno
add
mov
push
movs
ja
push
div
inc
out
fiadd
cmc
push
sar
sub
mov
lahf
mov
xor
outs
mov
mov
pop
shl
jb
sar
outs
mov
adc
gs
cmp
lds
jp
pop
jmp
inc
xchg
mov
mov
mov
and
adc
adc
mov
bound
nop
mov
jl
mov
pop
inc
addr16
or
xchg
std
xchg
aas
push
cmc
mov
jp
sub
push
pop
sbb
pop
(bad)
cmp
inc
lahf
pop
and
mov
xor
pop
and
and
cwde
mov
loopne
dec
jl
mov
jecxz
ror
or
retf
mov
ins
sbb
dec
test
inc
sahf
arpl
imul
(bad)
cdq
mov
jmp
imul
xchg
dec
(bad)
cmc
enter
lock
cmp
sbb
or
sbb
sti
(bad)
int
xchg
icebp
xchg
and
inc
or
daa
loop
dec
jmp
adc
lods
adc
push
xor
rcr
movs
neg
add
out
lods
and
xchg
lahf
jp
cmps
mov
imul
cmp
adc
dec
lods
adc
sub
cmp
lds
inc
stos
add
cmps
fadd
pop
jo
sbb
push
std
in
lods
dec
xchg
pop
retf
(bad)
push
or
outs
push
xor
xor
mov
mov
les
outs
jecxz
retf
or
das
loopne
daa
mov
push
int3
xor
push
icebp
loope
lods
and
fisub
xchg
adc
cdq
iret
hlt
push
mov
jmp
ss
cmps
jns
push
mov
das
sub
aam
fisttp
or
push
cmp
repnz
sub
mov
cmps
sub
push
icebp
add
push
enter
lock
fs
xlat
pop
and
jmp
pop
call
leave
xchg
mov
aad
call
jmp
and
call
jp
xchg
sub
loope
das
mov
push
pop
pop
push
sbb
sub
das
dec
out
add
sbb
fsub
sub
sahf
dec
xchg
xor
data16
add
inc
movs
loop
pop
out
inc
retf
div
mov
jo
arpl
stos
xchg
and
je
popf
in
arpl
adc
xor
jmp
sti
sub
jmp
arpl
sbb
cmp
lods
pop
and
mov
xchg
dec
add
sbb
sub
mov
imul
sbb
pushf
mov
in
aas
mov
in
pop
shl
shr
pop
sar
mul
jecxz
add
mov
jle
mov
pop
cmp
movs
sbb
repz
movs
pop
nop
scas
arpl
sub
fidivr
inc
sub
xchg
outs
js
fmul
sbb
xor
es
dec
stos
jno
jge
pop
stc
add
data16
mov
outs
mov
repz
xlat
ds
xor
or
mov
lods
push
jo
pop
jbe
sub
pop
pop
sub
dec
push
sub
test
sahf
int
pop
aas
aam
jp
push
jns
add
xchg
push
jp
in
mov
dec
jne
sub
outs
sub
gs
popf
push
add
add
mov
mov
out
xchg
out
loop
stos
lods
in
mov
mov
loop
adc
xor
(bad)
pushf
aas
data16
ins
sub
mov
in
js
mov
jno
jmp
or
mov
retf
shl
(bad)
mov
xor
or
int
inc
mov
push
mov
add
inc
lods
jns
dec
cmps
sti
leave
push
in
mov
test
stos
mov
mov
mov
adc
sar
stos
int3
push
ror
outs
adc
push
pushf
mov
mov
ds
mov
push
movs
repz
and
icebp
adc
adc
xor
xor
sbb
mov
bnd
pop
cwde
into
dec
addr16
pop
fsub
jbe
clc
xchg
pop
enter
(bad)
pop
push
or
pop
mov
and
std
ins
test
pop
int3
or
sub
xchg
aad
(bad)
cmp
jmp
retf
push
je
push
sub
pop
cmp
test
stc
sar
aam
and
fild
jmp
in
int3
mov
pop
mov
mov
cdq
shl
mov
mov
mov
add
cs
lods
retf
imul
cmps
xor
fwait
sub
jne
add
add
dec
jp
or
les
inc
cdq
ins
dec
jp
(bad)
shl
mov
stos
dec
jecxz
adc
mov
clc
js
xchg
cli
pop
jecxz
rcl
cmp
(bad)
fwait
xchg
inc
lahf
push
sahf
ss
mov
pop
add
xchg
jmp
ficom
cli
fs
dec
fidiv
mov
fnstcw
and
mov
xchg
fs
jmp
jne
mov
inc
iret
jp
bound
bound
jae
stos
in
add
xor
mov
lahf
(bad)
mov
fldcw
inc
fistp
cmp
movs
sub
push
xchg
xor
mov
push
in
jb
dec
sbb
push
out
cwde
add
loop
test
sub
test
push
sbb
imul
sahf
sahf
sub
imul
das
ss
jge
mov
cs
mov
adc
inc
xor
xlat
mov
mov
mov
stos
clc
pop
bound
mov
(bad)
es
pop
lahf
call
or
(bad)
cmc
fisubr
loopne
clc
adc
inc
or
ins
push
push
mov
and
sub
pushf
and
popa
mov
mov
push
cdq
bound
lahf
mov
aad
retf
sbb
pop
shr
jmp
aas
call
inc
xchg
icebp
pusha
in
push
sub
ja
inc
push
mov
sub
xchg
or
xchg
mov
pushf
xchg
out
jne
push
pop
dec
mov
xchg
dec
xchg
hlt
daa
imul
inc
add
jb
cmp
cwde
or
fidiv
push
dec
in
mov
add
or
sbb
cmps
xlat
cmp
push
sbb
jg
pusha
repz
daa
adc
push
cmp
sbb
stos
push
xchg
pushf
mov
mov
sti
imul
jo
(bad)
(bad)
movs
out
(bad)
add
mov
popf
add
stos
jle
(bad)
aaa
pusha
bound
mov
push
sub
pop
and
loop
push
sbb
add
jno
add
outs
movs
xor
mov
cmp
jmp
out
mov
inc
fcmovnu
mov
push
gs
test
ins
mov
aad
fnstcw
fs
adc
test
aaa
int3
inc
ins
std
mov
pusha
jb
test
adc
aad
in
mov
and
dec
cmps
ins
xchg
(bad)
leave
stos
ss
sar
mov
sahf
add
fist
test
clc
or
pop
adc
fisub
mov
and
sub
cs
sub
push
sub
jno
out
push
sbb
ficomp
ficom
inc
lods
add
dec
pop
jl
xchg
dec
push
repz
add
pop
out
imul
xchg
scas
or
mov
jecxz
cmp
xchg
sar
and
adc
gs
fstp
dec
ins
fisttp
cld
xchg
xor
or
js
cld
add
add
jns
mov
pop
jmp
xchg
aad
dec
ds
ins
icebp
ins
mov
xor
sahf
lock
rcl
dec
fsub
fadd
mov
jb
fidiv
sub
jno
aaa
sbb
fisub
into
xlat
xchg
pop
mov
fcomp
ds
push
es
test
cmp
cmp
inc
into
fild
das
mov
pop
jp
jae
fbld
push
adc
push
sbb
xchg
dec
ret
pop
jno
push
mov
mov
test
not
cdq
jo
(bad)
shl
or
(bad)
adc
rol
mov
lahf
push
xchg
or
repnz
lahf
jbe
pop
inc
mov
rcl
xchg
sub
inc
mov
mov
mov
lahf
xchg
jg
ins
in
xchg
xor
cmps
adc
cmp
int3
xchg
push
mov
sbb
cmp
mov
call
or
xchg
test
dec
imul
sbb
inc
iret
dec
inc
or
leave
xor
lock
or
int3
xchg
imul
imul
adc
pop
enter
pop
jno
adc
mov
neg
cdq
dec
push
jne
movs
(bad)
out
pop
cli
into
imul
retf
stos
inc
push
aad
xor
jge
dec
jae
(bad)
lods
sbb
cli
xchg
icebp
and
daa
mov
jns
or
fs
imul
out
mov
clc
mov
sub
fs
sbb
leave
mov
xlat
fimul
sahf
ins
in
xor
retf
cmps
xchg
adc
and
inc
scas
dec
inc
std
repnz
mov
mov
mov
fidivr
ret
or
pop
sub
enter
je
inc
cdq
adc
xor
mov
add
sbb
mov
cmc
aad
test
and
scas
dec
out
or
jno
mov
imul
dec
mov
jno
shl
aas
jbe
and
push
mov
sbb
or
(bad)
mov
aad
(bad)
not
jne
nop
push
xor
inc
mov
jmp
cmps
mov
mov
pop
push
push
(bad)
sbb
push
adc
push
and
sar
ss
push
mov
in
clc
mov
clc
cmc
mov
enter
mov
or
mov
cmp
fild
stc
mov
sbb
dec
sub
pop
adc
mov
pop
push
mov
mov
das
repnz
lds
call
mov
cmc
add
push
dec
or
add
xor
ret
dec
jns
sbb
push
(bad)
btc
xor
lea
(bad)
mov
sub
shr
movs
pop
pop
and
shl
lods
sbb
addr16
fiadd
icebp
movs
pop
arpl
jno
inc
and
popa
dec
mov
mov
inc
lahf
lock
push
sub
js
or
les
cmp
iret
lds
inc
jmp
mov
cmp
push
enter
daa
mov
sbb
lea
cdq
xchg
sub
sbb
mov
push
sub
sar
int
push
daa
bound
daa
push
stc
adc
adc
iret
data16
xchg
stos
mov
in
cs
adc
inc
push
loopne
push
daa
shr
ret
mov
repz
repnz
sar
call
sub
pop
mov
mov
pop
mov
imul
jmp
push
idiv
mov
add
jge
adc
movs
daa
xlat
jno
fdiv
or
(bad)
and
iret
mov
sti
gs
fcmovu
mov
scas
or
nop
inc
inc
and
fistp
mov
lods
push
cmp
shl
ds
stc
cli
push
inc
sub
sbb
(bad)
je
add
sub
xor
rol
jnp
clc
ins
xchg
(bad)
int3
scas
sti
add
cwde
inc
in
sbb
mov
jmp
dec
cmc
out
jne
das
mov
out
(bad)
shl
movs
mov
cmp
mov
ins
xor
adc
mov
fs
loope
hlt
pop
jo
shr
xchg
aad
xor
sub
loop
push
jne
sbb
sub
push
xchg
dec
add
jl
push
fcomp
test
fs
(bad)
movs
push
xchg
jno
jbe
pop
repz
xchg
(bad)
out
inc
and
cmps
fdivr
int3
mov
inc
push
cmp
aad
cwde
mov
(bad)
mov
lods
fdivp
jbe
cdq
dec
cmp
mov
loopne
cmps
test
sub
fimul
adc
dec
jns
mov
iret
stc
dec
dec
mov
dec
cmps
icebp
dec
ror
xor
adc
mov
dec
popa
add
dec
fsubp
rcr
arpl
or
and
push
gs
jecxz
out
fist
cmp
jecxz
xchg
icebp
outs
add
mov
sbb
jmp
into
sbb
jmp
jge
cmc
cmp
adc
imul
jge
fst
jbe
xchg
jg
fisub
lods
jecxz
aam
stos
push
(bad)
in
cld
ret
in
cmps
dec
aad
and
popa
fsubr
or
jns
lea
mov
jbe
(bad)
iret
cdq
out
aaa
scas
adc
push
sbb
shl
sub
iret
ins
cdq
xchg
or
inc
scas
imul
loope
movs
dec
push
or
lods
aas
and
pushf
adc
or
sbb
sahf
daa
retf
inc
in
into
inc
cmp
add
stos
call
add
push
jecxz
or
idiv
push
lahf
pusha
imul
mov
push
xchg
mov
mov
cmp
pop
sbb
xor
dec
xor
adc
loope
mov
or
mov
sbb
std
mov
ds
jbe
aad
pop
pusha
icebp
or
jno
pop
push
mov
pusha
retf
cld
xchg
sbb
or
sub
or
imul
fs
clc
in
adc
retf
stos
(bad)
inc
inc
push
imul
out
add
adc
jae
cmps
inc
mov
retf
into
add
inc
sub
sub
add
nop
aaa
(bad)
jmp
pop
cmps
cmps
adc
movs
leave
mov
inc
stos
add
or
cmp
pusha
(bad)
loop
out
ja
cmp
inc
aad
push
mov
ins
movs
mov
jae
and
(bad)
cmp
test
or
mov
pop
mov
cmp
repz
push
xchg
lods
(bad)
lahf
test
mov
and
xor
scas
out
sbb
in
push
xchg
mov
pop
retf
sbb
jp
rol
daa
test
xor
mov
push
repnz
adc
stos
aam
jmp
ins
sbb
popf
fld
into
add
jno
jg
shr
sub
leave
cmp
icebp
mov
sub
sbb
leave
lods
push
add
hlt
inc
jo
cmp
lar
mov
inc
cmp
jmp
fsincos
in
mov
pop
jnp
lods
and
scas
mov
mov
sbb
cs
addr16
jns
sub
and
(bad)
cmc
iret
call
cmps
jl
cmps
mov
pop
mov
cmp
sbb
xor
ins
push
xchg
fmul
ror
jmp
in
int
fdivr
ret
sbb
dec
ss
pop
adc
and
stos
loop
je
push
sub
jp
int
fcomp
jb
std
jno
jl
fdivr
int
push
jl
leave
mov
mov
lock
jp
pop
pop
push
test
test
jecxz
push
push
jge
inc
pop
mov
mov
and
aaa
xor
out
(bad)
mov
(bad)
pop
imul
je
sar
adc
mov
push
add
or
popf
rcr
nop
dec
in
jl
xchg
sub
xlat
imul
sbb
jbe
push
cmps
and
mov
xor
lds
sub
nop
jae
mov
mov
push
mov
jle
cmp
jno
cmp
and
inc
sub
mov
sbb
scas
jae
jnp
dec
mov
iret
sbb
or
inc
xor
mov
or
cmp
add
cwde
sub
cmp
fcom
jl
xchg
mov
stos
aas
mov
jecxz
js
ror
(bad)
xor
sahf
fwait
jg
js
(bad)
xor
in
nop
scas
and
or
xchg
outs
add
icebp
mov
jae
icebp
or
dec
sub
cmp
xor
inc
call
cmp
call
jl
adc
and
daa
push
in
push
repz
sub
pop
cmps
and
enter
inc
in
xor
js
push
iret
cmp
lahf
cmps
fisub
cs
in
and
outs
dec
push
jge
jmp
jge
mov
jae
jb
dec
mov
or
in
shl
loope
fs
sub
and
mov
cmc
cmc
sbb
fwait
mov
jnp
movs
xchg
push
lods
inc
inc
mov
clc
mov
xchg
jne
movs
adc
mov
sub
(bad)
mov
js
ins
jnp
dec
ret
jecxz
fidivr
mov
cld
mov
lods
movs
or
lahf
mov
jbe
test
dec
ja
cmc
push
xchg
xchg
mov
push
sahf
xchg
mov
jae
outs
push
sti
(bad)
xor
jne
jno
cmp
mov
stc
dec
fild
mov
push
outs
mov
js
cmp
jae
xor
push
sub
arpl
movs
(bad)
outs
aad
nop
or
ins
push
fnstcw
pop
cmps
mov
rcl
data16
dec
add
aaa
lahf
pop
retf
dec
rcr
push
aaa
jecxz
pusha
std
int3
mov
or
and
out
jnp
dec
test
or
xor
sti
inc
jbe
ret
out
pop
xor
mov
fdivr
ja
nop
mov
cmp
(bad)
repnz
or
push
mov
jns
cmp
dec
add
jge
stos
sub
and
inc
cmp
popf
out
mov
sbb
xchg
or
jp
mov
pop
out
out
aaa
jmp
adc
in
fdivr
fisub
dec
mov
push
loop
dec
ja
sub
mov
pop
add
aam
test
ja
fwait
cmp
dec
(bad)
sub
in
xor
stos
jmp
jo
std
icebp
xlat
push
push
jnp
inc
mov
cld
fucomi
jge
push
data16
mov
pusha
push
pusha
fstp
lods
fs
icebp
pop
mov
(bad)
jbe
mov
cld
rol
out
pop
sbb
xchg
out
push
out
or
test
sti
ficomp
mov
mov
popf
cmp
inc
sbb
outs
inc
popf
ret
sahf
dec
stos
stos
and
fs
jns
mov
retf
aad
repnz
push
(bad)
push
test
lods
xor
ja
mov
push
rcl
gs
(bad)
lahf
xchg
adc
inc
pop
fdivrp
shl
lods
je
test
popf
(bad)
jae
mov
lds
test
loop
xchg
mov
call
pop
inc
test
dec
xor
cmp
icebp
sbb
cmp
not
cmc
pop
dec
sbb
adc
loop
adc
data16
xchg
jae
mov
push
xor
mov
xchg
cmp
pop
in
mov
loopne
push
movs
dec
sub
neg
add
pop
adc
add
push
(bad)
scas
movaps
xor
js
out
imul
out
jl
ins
mov
inc
jns
movs
cld
add
inc
fwait
xchg
mov
int
popf
xchg
ins
add
fmul
dec
aam
pop
fld
stos
inc
rcl
mov
xchg
xchg
xor
fmul
rcr
jbe
ret
inc
retf
cmp
fisttp
daa
jmp
sbb
scas
and
lods
imul
sar
aad
xchg
dec
mov
fldcw
fsub
outs
sar
pop
adc
jno
sbb
mov
sar
ins
jge
sbb
and
push
pop
addr16
sub
pop
bound
pop
xor
test
push
push
xchg
sahf
push
dec
lock
int3
ret
stos
icebp
push
popa
jno
xchg
test
pop
out
mov
dec
fwait
(bad)
xlat
pop
mov
mov
int3
into
xchg
pop
sti
adc
out
clc
fidiv
loope
out
mov
push
in
pop
loope
sub
ret
repnz
jp
int
xor
imul
sbb
imul
(bad)
fistp
rcr
jecxz
or
mul
jno
das
aas
mov
test
mov
and
mov
sub
mov
mov
pop
sub
mov
outs
xor
add
jo
lock
mov
(bad)
push
mov
xchg
jge
mov
push
ins
push
and
jmp
dec
or
xor
(bad)
(bad)
repz
xor
gs
nop
jmp
xor
dec
(bad)
pop
das
into
std
adc
fsub
hlt
ja
cwde
out
pop
rol
or
or
dec
and
mov
(bad)
jno
mov
add
imul
jg
xchg
mov
pop
jo
jbe
es
pusha
mov
in
and
xor
sahf
cmp
rol
mov
adc
sub
clc
adc
inc
cmps
cli
push
sbb
call
jg
jmp
popf
mov
and
setle
cdq
sbb
clc
fwait
imul
xor
neg
mov
xadd
jno
inc
jb
push
retf
pop
loope
int
stos
fbstp
es
mov
ins
mov
les
sbb
fcmovne
sub
mov
stos
mov
and
out
ret
rcl
gs
xchg
xchg
push
xchg
in
sub
outs
mov
cmp
js
cli
clc
movs
adc
mov
push
pop
bound
test
mov
push
mov
adc
pushf
shr
cmps
cdq
mul
repz
mov
ret
cmp
loopne
mov
(bad)
into
xchg
cwde
inc
mov
push
jae
and
call
dec
sbb
sub
stos
cdq
inc
ss
daa
push
les
das
shl
xchg
sub
in
imul
pop
pusha
pop
and
add
arpl
scas
fistp
mov
sub
(bad)
jecxz
mov
int3
jbe
xchg
mov
scas
cmp
int
jmp
push
(bad)
jl
cmp
pop
movs
cwde
pop
fld
or
mov
sbb
xchg
mov
(bad)
(bad)
popa
leave
sahf
sub
mov
cmp
pop
shr
out
and
mov
xchg
mov
stos
jne
aas
retf
scas
xor
pushf
jge
sbb
push
loop
std
and
scas
cmps
cmp
sbb
cld
(bad)
hlt
mov
fs
jecxz
add
push
neg
arpl
push
jp
adc
ins
jns
add
fcom
add
repnz
cdq
cmp
dec
test
fisttp
pusha
add
mov
out
dec
lahf
push
gs
jo
xor
or
add
sahf
stos
daa
imul
sub
xchg
pop
jecxz
cmp
jecxz
dec
in
sbb
frstor
pop
jbe
mov
call
or
xor
and
fistp
dec
test
fwait
inc
(bad)
xor
xor
div
icebp
lds
add
js
bound
xchg
not
inc
popf
dec
push
add
push
call
ret
xchg
add
mov
cdq
hlt
and
sti
cmp
loopne
icebp
out
lock
frstor
ins
shld
mov
xor
xchg
clc
jmp
call
pop
test
inc
clc
js
lods
sahf
sbb
adc
or
add
xchg
enter
push
sar
enter
lds
mov
je
test
in
pop
sar
mov
jp
cwde
dec
test
xchg
sbb
(bad)
iret
jo
sbb
aad
jecxz
xlat
mov
push
dec
adc
pusha
inc
pop
and
add
int3
pushf
shl
cmc
les
inc
stc
mov
cld
jns
cld
add
pop
popa
push
xchg
js
shl
imul
dec
pop
(bad)
xchg
cdq
inc
push
(bad)
lahf
lea
mov
and
mov
ret
push
pop
sub
cmps
std
enter
fist
cwde
jbe
cmp
icebp
dec
in
cmp
sti
out
and
inc
gs
hlt
mov
mov
js
mov
adc
out
popa
lods
xchg
retf
and
out
loope
lock
add
add
sub
sub
adc
xor
jg
sbb
(bad)
(bad)
jae
mov
jno
ret
sbb
clc
push
rol
pop
in
jp
sbb
jge
mov
imul
mov
scas
mov
mov
pop
mov
push
pop
adc
gs
mov
dec
out
xchg
push
xor
(bad)
mov
(bad)
jo
adc
add
mov
loop
xor
scas
adc
(bad)
mov
in
add
jmp
push
stos
loopne
movs
xor
sar
sbb
mov
es
jmp
(bad)
xor
lods
test
inc
loope
xchg
lock
mov
pop
sti
mov
pusha
outs
std
(bad)
push
call
ret
stos
ins
seto
sbb
mov
jne
popf
jl
pusha
sbb
es
mov
add
mov
pop
retf
out
outs
lods
rol
gs
(bad)
stos
mov
lods
out
dec
xor
rcl
jbe
inc
das
sub
pop
pop
in
fwait
popa
jge
sahf
and
aas
or
add
je
mov
call
(bad)
mov
fld
sbb
cdq
mov
pop
inc
mul
ins
(bad)
ficom
enter
adc
bt
enter
xchg
pop
mov
cwde
or
sub
test
adc
bound
mov
mov
add
xlat
mov
jns
shl
jae
loop
dec
ins
pop
rol
dec
lock
jb
adc
popa
mov
orps
mov
fsub
aas
push
ret
jbe
inc
sbb
loopne
out
and
ins
pop
sbb
push
daa
fwait
lods
add
fsub
sub
adc
pop
scas
mov
scas
mov
jnp
jp
jb
ret
les
push
test
push
aam
adc
pop
xor
rcr
leave
in
adc
cmc
(bad)
inc
int
mov
test
(bad)
adc
cmp
inc
outs
je
loope
test
jno
jl
push
push
call
pop
sbb
lahf
das
hlt
and
or
or
sbb
ror
int3
ror
clts
retf
adc
movs
out
retf
loop
fwait
mov
and
in
fs
jns
pushf
add
pop
push
jns
mov
xchg
ret
aam
js
xor
sub
xchg
sti
or
int3
jg
outs
mov
sbb
in
(bad)
hlt
pop
pusha
mov
jnp
xchg
sub
xchg
lods
outs
add
adc
and
stos
inc
sbb
xor
cmps
inc
push
cmp
(bad)
pusha
bound
xor
mov
xor
inc
repz
jne
pop
mov
(bad)
jle
or
sbb
idiv
xor
mov
dec
imul
shr
sub
cdq
jl
cmps
jae
push
dec
rcl
outs
mov
cli
adc
mov
ins
outs
mov
sbb
adc
inc
fdivr
outs
into
fild
scas
fst
add
leave
in
cwde
rcl
push
and
jo
loope
shl
xor
in
sbb
and
lods
int
ds
xchg
inc
rcl
adc
pop
jmp
mov
rep
or
inc
cmp
call
cmp
(bad)
jmp
fst
sahf
out
in
add
inc
test
inc
and
and
mov
adc
mov
je
jno
push
and
sub
scas
cli
shr
cwde
mov
into
xchg
pop
pop
stos
out
movs
test
cmp
inc
daa
hlt
jle
into
(bad)
mov
das
fs
sar
fimul
lods
fs
lahf
add
xchg
arpl
pop
pop
movs
les
das
jae
push
adc
jmp
iret
cdq
xchg
mov
inc
test
(bad)
and
out
mov
data16
(bad)
lahf
mov
sbb
xor
cmp
cmp
pop
sahf
cmps
mov
push
dec
sbb
out
fcmovnb
sub
sbb
pop
jno
pop
mov
xchg
cld
(bad)
retf
add
add
add
shl
jmp
lock
xor
(bad)
rol
add
gs
jl
scas
pop
jne
add
sbb
lahf
popf
mov
je
dec
in
mov
ins
pop
jne
dec
retf
xchg
dec
les
push
jge
aad
movs
mov
and
sti
push
int3
mov
das
sub
mov
mov
ret
pop
cdq
push
out
cmp
inc
add
movs
xor
push
xchg
ins
xchg
and
xchg
and
loopne
rcr
mov
cwde
jmp
or
repz
push
jb
int
add
jl
das
jne
icebp
or
cmc
sbb
int3
int
jmp
cwde
dec
leave
sub
out
push
cwde
jl
and
mov
sbb
leave
cmps
jno
in
hlt
les
lock
mov
cwde
xchg
mov
test
add
test
scas
(bad)
jnp
jae
mov
aad
jno
jecxz
das
mov
pop
adc
jecxz
adc
mov
fcmove
retf
lahf
add
push
xor
pop
cmp
(bad)
jmp
xchg
cmp
xlat
sub
mov
pushf
not
sbb
add
add
fcmovbe
dec
xchg
mov
push
push
mov
je
outs
or
sbb
(bad)
sti
cmp
jle
ins
cmp
(bad)
repnz
ficom
call
pop
sbb
in
pop
pop
(bad)
js
movs
adc
dec
pop
inc
ds
hlt
ret
mov
daa
adc
mov
xor
test
or
in
(bad)
xor
jge
rcl
push
lock
jecxz
shl
or
dec
not
lods
cmp
shl
aas
or
pop
mov
in
dec
and
cmp
lock
sub
mov
ins
int
mov
add
mov
cld
(bad)
icebp
out
xchg
aam
sub
pop
jb
mov
hlt
dec
shl
lods
js
mov
push
push
retf
cmc
(bad)
data16
sub
push
mov
aam
sbb
cmps
xchg
outs
sbb
or
mov
std
(bad)
in
repnz
in
add
neg
xor
lods
ja
sub
sub
add
xor
sete
into
aaa
enter
fs
jbe
cwde
jge
fstp
gs
and
cmp
test
jecxz
mov
in
cmp
push
gs
adc
mov
xchg
fisttp
dec
call
rol
or
pop
cmp
int
and
jmp
aas
mov
mov
test
aas
movs
cmp
jp
sar
fwait
inc
dec
nop
loop
sub
arpl
push
ja
mov
inc
daa
or
std
jge
cwde
pushf
xor
cmps
adc
sub
jg
in
pop
pop
push
in
cli
xor
jge
lds
push
jmp
imul
repnz
test
les
ja
add
out
and
repnz
js
popa
add
push
mov
push
jmp
sbb
pusha
or
sub
aad
inc
cmps
xchg
rol
jno
jo
(bad)
adc
(bad)
js
push
frstor
loop
inc
xchg
shr
mov
enter
push
adc
test
punpcklwd
or
pusha
cvtpi2ps
cmc
test
add
gs
idiv
sbb
popa
push
inc
mov
mov
pusha
cmps
(bad)
int3
call
push
xor
fld
xor
inc
push
out
sbb
push
inc
fsub
inc
cmps
dec
sub
push
mov
pop
enter
add
and
pop
sbb
add
dec
jo
outs
push
lods
pop
(bad)
(bad)
cmp
mov
in
not
std
inc
mov
jo
or
popa
js
shl
push
fld
arpl
arpl
push
je
push
or
fdiv
ret
sbb
es
push
sub
push
or
imul
pusha
dec
out
psubb
int
push
push
or
test
xchg
sbb
jg
mov
sbb
retf
scas
adc
or
fwait
int
(bad)
cwde
jg
cmp
sbb
mov
loope
stc
pop
cmp
cmps
and
dec
xchg
jb
or
fidiv
jle
sbb
dec
push
popa
xchg
cli
cmc
pusha
movs
adc
shr
mov
xchg
and
jg
pushf
call
out
add
cmps
push
sbb
fs
dec
inc
cmp
sbb
test
xor
ds
outs
pop
pusha
adc
add
mov
inc
ds
jns
add
pusha
xchg
sbb
cmp
jb
fs
sub
cvtpi2ps
cmp
iret
xchg
push
dec
ret
scas
ins
sbb
arpl
test
inc
test
push
jb
push
mov
push
dec
lahf
ret
inc
jno
mov
push
jp
arpl
sub
popa
test
mov
fwait
cmp
xor
ds
pop
inc
lods
nop
jno
xor
scas
pop
pop
dec
pop
(bad)
mov
add
sbb
inc
loop
sub
repz
sti
mov
(bad)
leave
call
or
repz
scas
enter
cmps
mov
dec
xchg
mov
outs
pop
out
fistp
popa
int3
scas
push
xor
in
xor
jl
push
movs
push
out
jo
test
dec
addr16
mov
pop
test
adc
xlat
popa
repnz
cmp
cli
dec
shl
ds
in
pop
pop
(bad)
movs
sbb
xor
jecxz
icebp
out
aaa
repz
mov
sbb
or
int
or
test
adc
call
xchg
mov
or
bound
loopne
jae
shl
stos
ret
mov
lods
sti
sub
les
and
sbb
xchg
push
dec
leave
xor
mov
ret
mov
push
push
in
sub
dec
fwait
call
in
inc
sbb
loop
outs
mov
mov
inc
retf
mov
xchg
bound
shl
push
int
mov
sbb
stos
stc
shl
or
and
movs
mov
mov
mov
push
dec
dec
xchg
leave
xchg
sbb
jns
bound
ret
call
mov
imul
pop
mov
sub
in
pop
mov
push
mov
mov
mov
push
aas
(bad)
or
sub
adc
push
mov
mov
dec
jg
cld
and
cmp
dec
ins
hlt
mov
scas
jbe
mov
dec
xchg
dec
cmp
adc
adc
sar
or
adc
out
sbb
jae
aad
adc
mov
lods
sti
loop
out
loop
scas
das
pop
icebp
mov
punpcklwd
pop
in
ins
cmp
adc
dec
pop
push
jle
add
inc
sub
dec
scas
mov
scas
sbb
xchg
lods
jno
out
push
cmps
lods
adc
in
sbb
jp
pop
cmp
stos
mov
aas
pop
jbe
jno
in
inc
shr
or
aas
icebp
sbb
movs
call
mov
mov
jne
test
into
adc
retf
cmp
pop
jbe
cmc
adc
xor
and
iret
pop
fistp
mov
fidiv
jne
and
jno
les
out
loope
mov
inc
pop
sub
test
sbb
ins
out
mov
test
sbb
mov
shr
gs
daa
idiv
push
pop
jae
loope
xchg
fdivr
mov
out
and
aaa
or
jmp
(bad)
xchg
fmul
sbb
mov
jle
sbb
dec
jb
pop
mov
sub
bound
and
xchg
(bad)
mov
mov
inc
pminsw
push
jecxz
sub
je
xchg
and
retf
adc
stos
sbb
int3
ss
inc
add
or
mov
jmp
push
in
add
add
daa
idiv
mov
retf
mov
or
test
mov
pop
adc
int
sbb
pop
mov
inc
mov
out
pushf
push
es
dec
inc
xor
mov
push
lds
sbb
fist
sbb
icebp
jnp
or
or
je
retf
cli
jecxz
push
and
lods
scas
push
add
mov
mov
leave
addr16
jae
mov
sbb
scas
rcr
xor
cmp
adc
mov
aam
xor
sahf
(bad)
retf
xchg
(bad)
ret
(bad)
mov
fwait
xlat
mov
push
stos
sahf
push
lods
aam
xor
gs
aam
pop
shl
rol
das
iret
mov
shl
mov
push
dec
pop
popa
mov
in
scas
out
pop
outs
sbb
fcom
push
gs
sub
and
mov
inc
fiadd
adc
outs
leave
(bad)
sbb
xor
loop
call
imul
cwde
mov
in
sub
rcl
or
popa
ret
push
xchg
aam
dec
leave
mov
pop
inc
inc
xchg
jp
lahf
cdq
sub
(bad)
out
cld
sti
call
sbb
sub
mov
adc
inc
jb
and
jmp
mul
mov
push
mov
ds
into
add
and
mov
pop
adc
xor
pop
fcomp
outs
dec
mov
sbb
jge
les
sbb
sbb
push
mov
push
neg
out
or
sub
xchg
in
(bad)
mov
jle
mov
sub
adc
aam
pop
ins
adc
ror
dec
inc
xchg
xor
jb
jp
test
stos
xor
add
or
loope
push
inc
xchg
push
add
ror
cwde
and
inc
(bad)
and
cli
es
mov
push
daa
xchg
sbb
ret
les
and
int3
gs
push
inc
dec
sub
mov
mov
cld
jno
mov
test
out
push
hlt
sub
mov
sbb
adc
fdivp
jnp
iret
sub
adc
int3
adc
(bad)
pop
adc
mov
lods
mov
mov
sub
push
sbb
ds
out
xchg
inc
pop
jae
mov
sbb
lahf
(bad)
in
ja
stos
or
shl
out
adc
add
mov
mov
or
mov
outs
jnp
sar
lock
cli
or
mov
mov
xchg
jl
push
js
sub
pop
movs
dec
aad
pop
stos
(bad)
cmp
xor
sub
test
xchg
jmp
pop
push
ins
ret
dec
fwait
aad
sar
jno
push
in
nop
mov
into
pop
mov
in
dec
scas
or
xor
push
fs
mov
nop
and
inc
les
ret
or
jmp
xor
les
push
loop
xor
xor
cmp
mov
loop
enter
cmp
cld
sbb
(bad)
pop
adc
and
in
dec
fcomp
mov
movs
jg
xchg
iret
xor
cmp
mov
gs
daa
cmp
pop
movs
mov
pop
jle
jecxz
dec
mov
jb
in
pusha
sub
jl
cwde
enter
pop
js
sbb
mov
pushf
inc
xlat
mov
and
cmp
ret
pop
mov
push
int3
and
fs
push
in
xor
dec
push
xchg
(bad)
adc
les
adc
fld
dec
test
jecxz
scas
jl
mov
mov
(bad)
mov
mov
pop
jecxz
bound
pop
aam
or
lock
inc
retf
jb
out
sub
in
mov
or
sub
adc
push
cmps
xchg
icebp
xor
(bad)
les
dec
and
addr16
xor
cmp
inc
cmp
push
loopne
pop
(bad)
jg
fsin
push
add
ja
fsubr
push
jg
jg
outs
jl
leave
xchg
or
dec
sahf
movs
add
push
in
arpl
cwde
push
int
fstp
sti
(bad)
mov
cmc
cmp
inc
mov
or
cmps
inc
xor
pop
mov
mov
mov
test
sub
mov
mov
dec
daa
(bad)
push
repnz
clc
jne
fbld
int3
ja
fsubr
push
xor
jle
stos
fistp
jae
fisubr
add
sahf
and
push
pop
and
imul
(bad)
out
lahf
xor
loope
aaa
movs
enter
cmp
inc
mov
push
adc
xor
test
mov
push
in
or
fiadd
(bad)
outs
cmp
out
ins
mov
inc
repnz
cmp
out
sar
fld
out
mov
out
push
push
xor
add
adc
gs
add
cmp
push
push
push
sti
inc
ja
sbb
sub
mov
push
sub
inc
int3
add
bound
pop
jg
mov
push
jns
xchg
pop
stos
or
dec
and
sbb
repnz
jecxz
and
push
inc
jg
xchg
dec
mov
int
mov
test
and
or
sbb
or
sar
add
data16
cmp
lahf
cmp
rcl
and
xor
fimul
ins
add
add
test
ins
xchg
sbb
(bad)
jo
push
and
inc
pop
cmp
mov
xor
xchg
ficomp
dec
xchg
dec
cmp
add
repz
jp
hlt
or
ja
call
xor
in
adc
sbb
xor
mov
cdq
repnz
je
mov
(bad)
or
add
mov
adc
test
aaa
sub
mov
pop
int
leave
mov
add
test
in
cmp
mov
daa
cmp
mov
inc
daa
jmp
in
mov
xchg
add
xchg
jbe
lods
int
sbb
das
sub
imul
push
xlat
and
xor
dec
mov
les
dec
xor
aad
loope
aas
mov
mov
jecxz
out
xchg
sar
fild
sbb
test
fst
fidivr
fcom
sub
neg
sbb
push
mov
xchg
ror
pop
sbb
sti
pop
inc
mov
cwde
xchg
clc
lods
pop
inc
(bad)
retf
cli
mov
shl
(bad)
mov
add
jmp
jmp
movs
data16
popf
jmp
das
or
xchg
into
in
mov
jmp
adc
add
push
int3
cmps
xchg
mov
ret
test
ret
xchg
ret
mov
repnz
adc
and
lods
in
leave
dec
jbe
adc
jmp
pop
mov
outs
sbb
xor
ret
test
mov
and
sub
or
push
dec
div
mov
js
(bad)
push
ins
and
cmp
mov
xor
movs
xor
jne
add
cmp
inc
sbb
cmps
mov
xlat
bndldx
dec
mov
call
mov
or
(bad)
mov
sbb
int
not
mov
add
add
test
mov
sti
lahf
div
ja
dec
add
int3
fcom
mov
jne
sub
inc
xor
xor
rcr
loop
out
push
dec
repz
loope
pop
xor
dec
mul
(bad)
dec
sti
jns
xor
sub
scas
xor
push
test
dec
mov
movs
shl
imul
jg
ret
stc
pop
xchg
sub
inc
xchg
cld
mov
pusha
fmul
test
pop
loopne
nop
loop
icebp
dec
les
pop
leave
dec
pop
jmp
adc
retf
test
leave
test
or
xor
fistp
dec
jmp
outs
stc
icebp
inc
loopne
(bad)
(bad)
jg
dec
lahf
fidivr
jae
jnp
inc
or
lds
cmp
push
jle
push
test
xchg
push
sbb
outs
push
push
stc
push
jmp
test
pop
add
xor
clc
add
mov
xchg
jge
mov
add
mov
xchg
lock
push
xchg
(bad)
push
fld
fwait
addr16
push
mov
ret
xchg
dec
cwde
in
xchg
push
cwde
js
add
mov
fild
fild
push
sub
pusha
lahf
sub
cmp
xchg
and
fs
or
or
mov
pop
outs
mov
loope
jg
mov
add
rcl
shl
js
lahf
mov
fiadd
push
pop
pop
cmps
and
pop
out
mov
cld
mov
mov
test
adc
out
mov
mov
sub
addr16
in
mov
fidivr
cmps
out
mov
push
add
jmp
out
(bad)
jl
and
and
jmp
js
push
sbb
push
ds
mul
push
adc
jnp
cmc
loope
mov
(bad)
sbb
fwait
and
xor
cs
loope
add
jge
sbb
push
and
or
inc
dec
test
mov
mov
mov
in
push
ins
scas
test
ins
xor
jl
stos
in
cmp
xor
inc
sar
out
mov
data16
outs
(bad)
and
int
mov
rcl
pop
sbb
xchg
adc
jae
pop
inc
add
xor
rcl
add
popf
dec
test
or
test
std
inc
(bad)
jno
and
fistp
mov
cmp
push
aaa
or
inc
out
push
mov
or
pop
push
mov
mov
inc
ret
inc
ret
jmp
cli
test
cwde
or
les
je
test
xchg
xor
(bad)
(bad)
xchg
jl
clc
mov
int3
push
cwde
(bad)
jae
stos
ror
adc
jns
adc
jo
push
sahf
jmp
xor
imul
outs
mov
dec
and
(bad)
sti
inc
or
adc
ja
pop
adc
inc
xchg
scas
sbb
ret
(bad)
(bad)
popf
(bad)
clc
retf
push
add
pop
adc
mov
mov
mov
nop
add
gs
or
inc
mov
sti
ffreep
movs
jle
mov
and
retf
hlt
and
lds
loop
and
adc
jmp
out
pop
inc
jne
pop
cdq
daa
ret
cmp
mov
popf
jl
les
or
test
fadd
mov
js
xor
sub
mov
fmul
retf
outs
fcomp
pop
xchg
popa
js
mov
xchg
sbb
sub
cmp
push
adc
mov
hlt
push
icebp
xchg
enter
lahf
mov
pushf
shr
loope
push
xor
repz
int3
xor
mov
xor
sub
test
aad
or
fdivr
outs
cld
mov
pop
mov
sbb
test
(bad)
ins
loop
add
cld
xchg
in
sahf
push
sub
xchg
inc
shr
xor
repnz
popfw
in
cmp
push
out
adc
mov
lods
aad
dec
push
imul
cmp
mov
stc
imul
jno
dec
into
inc
xor
call
adc
movs
jg
fmulp
add
test
inc
mov
sub
mov
imul
or
push
xor
cmp
cmp
xchg
enter
cmps
cmp
dec
(bad)
pop
mov
repnz
cli
sub
pop
xor
xlat
mov
shr
and
(bad)
mov
fs
jbe
ins
mov
add
push
and
retf
push
add
pop
loopne
xor
ins
xor
inc
in
arpl
or
adc
xor
fist
std
stos
out
xchg
jne
sbb
mov
hlt
movs
jno
jne
dec
and
test
fbstp
stos
sub
add
and
xor
enter
mov
cmp
push
ret
movs
int3
xchg
xchg
push
cs
cmps
push
int
jl
push
das
mov
pop
cdq
js
jbe
xchg
outs
pop
dec
(bad)
sbb
es
ret
cmc
mov
jb
scas
addr16
pop
popf
cli
adc
push
inc
in
xchg
movs
ins
cmc
call
loopne
sbb
jno
lahf
shl
xor
cmp
or
test
dec
les
imul
push
or
rol
or
dec
push
fwait
movs
outs
mov
pop
and
and
pop
cmp
xchg
cmps
sub
or
jp
pushf
dec
cmp
dec
retf
sahf
leave
xlat
jno
lea
mov
addr16
sub
retf
mov
iret
xchg
cs
data16
push
and
cs
xor
or
jp
aas
cmp
jecxz
push
ins
pop
or
adc
idiv
or
popa
cmp
cld
movs
call
cmps
xchg
or
push
sbb
mov
add
call
repnz
std
out
jno
(bad)
call
ret
(bad)
mov
scas
pop
(bad)
data16
icebp
xor
daa
(bad)
int3
nop
shl
push
cmp
ror
test
dec
pusha
test
jp
sub
nop
test
or
xchg
push
pop
mov
hlt
or
pusha
std
push
(bad)
lods
mov
cmp
sub
out
stc
cmp
ret
(bad)
aaa
bound
cmp
stos
sahf
shl
fnstcw
add
enter
sub
xlat
sti
and
pop
call
pop
cmp
mov
les
pop
mov
cmp
std
mov
and
data16
pop
cmp
int
mov
mov
sbb
sub
idiv
and
jle
test
std
mov
cmp
mov
ds
mov
data16
aas
sub
inc
mov
mov
enter
rcl
in
jg
sahf
cmp
(bad)
leave
stos
mov
or
(bad)
into
add
and
sbb
ret
or
jmp
in
add
data16
mov
inc
test
jge
nop
xchg
dec
test
lea
inc
mov
cmc
inc
cmp
jbe
aam
stos
mov
imul
inc
nop
jl
cmc
mov
add
cmp
and
scas
xor
sbb
mov
neg
mov
inc
sub
nop
mul
scas
pop
cmps
(bad)
fstp
xchg
sbb
mov
lea
xchg
cmps
in
adc
jno
stos
jp
fsub
adc
push
fild
jmp
mov
lods
pop
and
stc
pop
outs
repz
in
adc
sbb
mov
sbb
in
fidivr
cdq
es
xor
adc
jb
lock
pop
lods
addr16
retf
and
push
inc
xor
mov
mov
mov
cmp
imul
adc
jl
cmp
in
and
ret
mov
xchg
pop
mov
sbb
mov
lock
mov
xor
add
aas
jle
xor
mov
pop
es
add
cdq
imul
jl
idiv
ret
cmp
xchg
lds
and
mov
push
lods
and
loop
push
jae
cmp
aas
(bad)
and
inc
push
(bad)
stc
add
pop
inc
push
cmp
rcl
xchg
call
xor
movs
shr
jo
mov
inc
sbb
mov
in
inc
iret
xchg
lds
xor
out
es
aam
sub
aaa
ds
pmulhw
fistp
in
fist
inc
ds
jbe
shl
(bad)
cwde
clc
sahf
add
push
sti
outs
icebp
cmp
pop
jb
adc
movs
xor
stos
push
retf
xchg
pushf
leave
hlt
inc
pop
cmp
adc
mov
inc
cdq
stos
out
jbe
jns
xchg
movs
jge
in
aam
into
pop
jmp
in
int3
stc
imul
mov
mov
mov
sbb
sbb
ret
pop
bound
jmp
shr
jmp
mov
push
xchg
pop
push
dec
push
sbb
inc
popf
inc
mov
sahf
sub
mov
mov
mov
lods
jmp
jge
cmp
not
jne
mov
cmp
popa
add
stos
fistp
lds
sti
fst
lods
popf
addr16
arpl
test
or
jmp
in
and
mov
into
ins
out
cdq
enter
mov
test
inc
xchg
fwait
ror
inc
iret
aam
imul
clc
xchg
mov
push
ds
out
dec
mov
xor
addr16
iret
and
xor
pop
push
rcr
stos
leave
daa
push
inc
or
push
stos
dec
es
mov
lahf
and
imul
add
fist
mov
cs
and
loopne
mov
pop
add
cmp
imul
push
dec
jge
test
sub
dec
sbb
inc
movs
xlat
ds
dec
or
add
jbe
cwde
dec
sub
jl
inc
test
mov
jmp
ds
imul
push
push
mov
inc
ds
mov
fwait
mov
push
add
addr16
and
aaa
jns
(bad)
mov
icebp
push
jo
ret
fwait
dec
jnp
mov
jmp
or
mov
std
mov
push
sub
ss
adc
cmp
mov
mov
repnz
call
(bad)
xor
ds
das
xchg
test
xchg
jbe
lea
add
pushf
hlt
loopne
jge
int
sub
popa
or
shr
sub
shr
fild
rcr
mov
and
sti
aad
sbb
pop
(bad)
mov
pop
mov
adc
jo
stos
xor
jp
std
ret
bnd
test
clc
dec
sub
pop
push
retf
icebp
cwde
fild
cmps
jl
out
jmp
jmp
jmp
ret
ja
sbb
sbb
inc
push
and
adc
sahf
rcl
fstp
mov
add
repnz
sbb
mov
adc
(bad)
(bad)
cmovae
movs
pop
jge
jl
xchg
imul
(bad)
gs
sbb
dec
cmp
or
adc
or
sub
fisub
cmp
or
stc
xchg
dec
aaa
and
jns
leave
jo
jae
xchg
sbb
mov
js
cmp
stos
ret
jne
mov
jg
rol
out
sub
ficomp
in
dec
mov
cmc
out
pop
dec
shl
outs
adc
push
jns
mov
cli
pop
push
movs
repz
mov
fst
cmp
(bad)
in
mov
cmc
jno
(bad)
ins
dec
push
add
(bad)
jle
push
into
repnz
movs
add
adc
jge
sub
ins
jno
addr16
(bad)
pop
sub
xlat
sbb
ret
retf
push
xchg
fdivr
jecxz
xchg
mov
xchg
(bad)
pusha
int
inc
popa
repnz
inc
sti
clc
fwait
push
leave
sub
movs
sub
pusha
repz
(bad)
loop
cmps
cmp
adc
dec
cld
lods
test
retf
xor
add
mov
mov
retf
nop
sbb
push
sbb
sub
jns
mov
(bad)
adc
cmps
push
sub
stos
xchg
ins
not
int3
in
mov
fistp
fidivr
stos
sahf
mov
xlat
shl
or
adc
mov
call
stc
jo
and
mov
adc
inc
aam
mov
xchg
mov
les
cmp
add
in
outs
or
adc
xor
(bad)
ret
sub
rcl
adc
mov
imul
cmp
in
out
pop
xchg
push
imul
lds
loopne
and
cmp
rcl
mov
repz
in
sbb
fstp
addr16
outs
or
js
ret
mov
push
rol
and
jo
fmul
inc
out
(bad)
cmc
(bad)
sbb
pop
retf
inc
cli
push
adc
sbb
pop
es
push
push
jae
jge
(bad)
pop
mov
arpl
popa
loop
test
neg
dec
inc
pop
lods
dec
jl
inc
into
cmp
sahf
in
inc
xchg
cdq
stos
xor
mov
pop
mov
xchg
in
arpl
pop
rcr
pop
lods
pop
mov
or
idiv
mov
jmp
movs
add
stc
jmp
pop
pop
cwde
mov
test
or
(bad)
es
scas
push
sub
jmp
xchg
cmp
xchg
cmp
or
push
dec
push
outs
and
add
xor
sbb
pop
loop
arpl
in
or
inc
inc
lea
xchg
push
mov
out
sbb
and
cmp
mov
mov
adc
div
sbb
push
call
dec
inc
fstp
lds
mov
inc
xor
pop
cmps
div
and
xchg
(bad)
sbb
sub
dec
pop
in
imul
scas
sub
xor
enter
dec
push
imul
int
cwde
inc
sbb
and
(bad)
jb
repnz
mov
ja
add
inc
push
je
cmp
dec
enter
pushf
fimul
(bad)
sbb
arpl
dec
push
in
jmp
jb
out
(bad)
mov
(bad)
sahf
jmp
fstp
push
out
mov
cmp
mov
dec
push
push
or
loope
and
push
cmps
out
pop
push
setne
sahf
addr16
repz
dec
ss
sar
pop
inc
sti
cmp
test
sub
arpl
fisubr
cmp
fisubr
inc
fwait
inc
sbb
imul
jmp
pop
imul
ret
retf
sbb
dec
adc
(bad)
loop
ret
sbb
jne
mov
sub
cmc
xor
jle
mov
ds
xchg
push
push
lahf
lahf
pop
jp
es
iret
mov
(bad)
popf
(bad)
pop
rcr
(bad)
imul
test
dec
mov
add
(bad)
push
(bad)
push
cmp
jle
cmp
sub
push
xor
sub
stc
out
pusha
xchg
daa
outs
or
pop
push
xchg
mov
ds
pop
and
adc
popa
mov
rcr
idiv
mov
ins
inc
test
jae
shr
fdivr
or
cmp
in
(bad)
neg
dec
scas
out
nop
xchg
xchg
adc
sar
jbe
dec
cmps
jae
imul
fstp
jae
push
xor
ret
push
pop
add
stc
dec
retf
or
movs
dec
jmp
dec
(bad)
repnz
movs
and
lock
jo
fiadd
pop
vpmacssww
mov
inc
xor
(bad)
jl
xchg
pop
icebp
dec
adc
pop
sub
in
cmp
or
ja
inc
inc
repnz
in
xchg
xchg
int3
xchg
dec
xchg
lods
xchg
scas
mov
jmp
sbb
mov
stos
inc
adc
push
lds
loopne
in
enter
enter
cdq
not
xchg
jnp
sbb
dec
loop
sub
cmp
out
pop
adc
call
cli
inc
das
push
gs
pop
mov
fdivr
scas
or
mov
mov
add
int
jne
dec
dec
pop
in
ds
inc
xchg
jno
not
dec
mov
dec
test
movs
retf
jecxz
test
and
(bad)
adc
lock
add
cmp
popa
dec
inc
enter
mov
mov
cli
stc
xor
fisubr
stos
outs
sbb
dec
add
sar
add
adc
rol
or
repz
pop
pop
(bad)
xor
mov
sub
and
cli
test
call
xchg
cmps
daa
inc
inc
add
fbld
pusha
stos
retf
popa
pop
cmp
mov
mov
mov
lock
iret
sub
xor
in
mov
(bad)
pop
and
scas
imul
jb
push
dec
jne
aam
sar
sbb
inc
cmp
xor
mov
xor
jg
sbb
sbb
hlt
mov
mov
jae
dec
and
add
scas
(bad)
frstor
ficom
(bad)
rcl
xlat
pop
pop
ja
dec
cmc
xchg
jno
cmp
xor
ins
add
adc
mov
and
into
fimul
and
pop
jmp
fstp
imul
adc
sbb
inc
(bad)
xchg
(bad)
popf
ret
int
or
(bad)
mov
jecxz
dec
mov
inc
addr16
dec
ins
sbb
arpl
test
int
test
sahf
push
pushf
dec
ret
cmp
(bad)
mov
xchg
mov
fsub
mov
aad
sbb
cmp
hlt
xor
adc
cld
fnstenv
adc
shl
sbb
sub
xchg
je
(bad)
dec
cmp
icebp
mov
ss
test
xlat
push
jg
mov
mov
pop
jmp
cs
pop
ins
dec
xchg
aad
xchg
inc
mov
movs
add
xor
cs
sbb
pop
iret
nop
dec
(bad)
cmps
bnd
(bad)
fmul
ud0
repz
inc
and
mov
(bad)
out
mov
dec
inc
jb
jnp
idiv
xor
iret
lahf
mov
cmc
or
mov
cmp
rol
sbb
ret
in
mov
arpl
or
nop
and
sub
and
fs
inc
repz
pop
sbb
mov
call
mov
pop
ins
cs
shl
jle
(bad)
adc
jp
cwde
push
lods
xchg
cmps
ret
xlat
pop
addr16
or
std
es
mov
ds
add
push
cmp
lods
popf
push
jae
not
(bad)
bnd
mov
jg
fbld
aas
repnz
dec
inc
aas
sar
push
sahf
push
xlat
pop
fidivr
xor
outs
mov
call
push
fnstcw
xor
xor
test
lock
rol
out
int3
pop
xchg
repz
jg
jo
test
xor
fsub
adc
fdivr
push
int
inc
inc
sub
loop
mov
into
mov
hlt
rol
inc
push
add
adc
mov
push
shr
add
sbb
int3
popf
cld
and
xchg
addr16
(bad)
es
(bad)
cwde
popa
sbb
(bad)
aam
in
sbb
scas
cmp
adc
jae
aaa
and
test
leave
add
push
sub
adc
push
leave
nop
in
movs
arpl
loope
mov
bound
fcom
mov
cmp
dec
call
jbe
loope
push
push
out
push
outs
mov
movs
(bad)
xor
sbb
rcl
adc
popf
lock
sub
popa
xchg
into
rol
cmc
jb
add
pop
push
jg
fiadd
pop
aaa
daa
and
add
adc
out
mov
jecxz
enter
shr
pop
cmp
or
adc
lds
in
sahf
out
jmp
in
retf
retf
mov
test
aaa
test
dec
(bad)
jp
jno
push
mov
hlt
bound
sub
jae
xlat
cld
out
jmp
movs
dec
xor
movs
mov
pop
adc
aaa
or
retf
push
mov
mov
xor
pushf
mov
int3
pop
out
xor
push
stos
lds
test
shr
or
clc
or
sub
cli
pop
stc
sub
xchg
ret
movs
(bad)
or
push
fsub
xor
xchg
cmp
push
test
push
shl
xor
push
imul
pop
adc
xchg
sbb
or
cli
loop
cmp
sub
outs
das
cmp
sbb
mov
stos
mov
test
jno
test
pop
xchg
dec
test
mov
(bad)
pushf
add
or
lock
in
lahf
fild
sub
outs
sbb
ror
push
ror
test
loopne
fcmove
fisubr
cmp
mov
push
popa
xchg
and
push
repz
idiv
aas
xor
in
dec
js
out
aas
adc
je
inc
test
lahf
fidivr
ret
imul
rol
mov
jg
fwait
lds
imul
xchg
cmp
pusha
push
xor
or
mov
cmps
ret
adc
loopne
mov
cmp
sub
xor
lods
inc
jo
into
inc
pop
xor
into
pop
and
jl
or
xchg
shl
hlt
sbb
mov
mov
stos
xchg
test
imul
xchg
cwde
nop
test
cmp
add
inc
push
jae
sbb
mov
pop
dec
sti
sar
mov
mov
dec
rcl
imul
out
xchg
jg
mov
pushf
mov
cmovle
hlt
dec
xlat
aad
das
adc
ins
mov
mov
pop
sub
test
retf
mov
inc
sti
cmp
and
push
stc
bound
or
cmp
sbb
mov
dec
retf
lock
adc
ds
pop
sub
cmp
cmp
xor
jmp
std
jmp
fild
inc
sbb
xchg
dec
(bad)
std
add
out
stos
(bad)
dec
dec
add
add
push
outs
fwait
sub
(bad)
cmc
and
inc
(bad)
mov
out
push
scas
cwde
xor
ret
ja
jne
mov
(bad)
(bad)
in
gs
ins
pop
xchg
sub
shl
mov
inc
out
mov
sub
cmps
mov
mov
dec
pop
fstp
push
iret
cdq
daa
and
and
movs
imul
sbb
jge
ret
(bad)
js
in
aas
jo
cmc
(bad)
lahf
mov
test
jnp
mov
lahf
idiv
ins
fwait
push
add
imul
push
lods
mov
cmc
mov
call
cpuid
sub
fwait
fwait
xor
mov
inc
mov
cmp
cmp
fcomp
int3
int3
mov
iret
mov
cmp
fwait
in
popf
pop
in
enter
call
cdq
lock
test
mov
mov
jecxz
xchg
out
arpl
mov
cs
ds
lds
leave
out
retf
out
loop
mov
inc
es
inc
push
shl
mov
repnz
pop
adc
in
mov
jle
ja
jbe
scas
movs
fstp
pop
in
xchg
(bad)
xchg
lods
mov
addr16
test
inc
or
push
sub
loop
leave
aas
and
les
std
pop
sbb
fnstsw
dec
in
jge
jle
or
ins
int3
sbb
mov
jno
outs
push
pop
(bad)
cmps
ret
ja
push
fst
ss
test
mov
sbb
iret
retf
pop
dec
retf
jo
mov
cmp
xor
dec
inc
add
repz
push
mov
pop
aaa
into
mov
imul
sbb
movs
fs
and
cmp
sbb
in
dec
add
push
shl
sub
mov
jne
pop
int
push
xor
ret
lds
lods
daa
sbb
and
mov
arpl
mov
jge
pop
repz
or
ror
push
add
test
or
cmps
mov
mov
stc
int3
popf
or
mov
aad
or
bound
mov
cli
push
pop
loope
in
mov
push
hlt
fst
mov
mov
sub
pop
mov
mov
xor
not
ins
xor
loop
mov
push
sub
and
icebp
inc
push
loopne
pop
cmp
sbb
add
mov
mov
and
jne
ins
stos
add
arpl
(bad)
clc
int3
add
push
adc
stos
pop
mov
xor
fdivp
ins
add
cmp
add
adc
inc
in
xchg
and
adc
sbb
xchg
xchg
les
dec
jp
cdq
pop
ret
cs
in
es
dec
hlt
or
cmps
push
mov
leave
in
iret
ss
lods
inc
(bad)
push
shl
lds
fs
rol
push
mov
cld
std
cmc
ss
adc
mov
and
in
dec
(bad)
cld
call
(bad)
push
pop
fsub
repz
daa
xor
repnz
or
repnz
ins
call
fldcw
cli
stos
repnz
test
scas
jmp
jmp
pop
icebp
xchg
xchg
ss
sub
add
idiv
mov
mov
xor
ins
push
mov
(bad)
ret
outs
add
sbb
xchg
push
(bad)
inc
mov
and
xor
ds
jecxz
pop
clc
and
gs
dec
adc
xchg
movs
inc
jns
push
jns
cs
out
mov
addr16
or
mov
jmp
clc
loopne
dec
mov
cs
sbb
(bad)
mov
test
sub
and
mov
xchg
mov
fdivr
ss
out
jne
retf
(bad)
iret
jmp
pop
cdq
enter
retf
aaa
jnp
jae
sub
jnp
sub
jle
mov
fucomip
movs
xor
rcr
mov
and
sub
adc
popa
iret
push
xor
jle
sub
jmp
and
jmp
loope
adc
dec
xchg
les
mov
xchg
mov
fsub
retf
cwde
adc
xchg
repz
cwde
aas
jns
(bad)
sbb
xchg
and
clc
lahf
dec
push
idiv
pop
push
sub
out
loopne
in
gs
xor
pop
ins
int3
js
icebp
out
out
aaa
iret
scas
push
ss
adc
cli
jl
cmp
imul
dec
jmp
xor
mov
jmp
lds
mov
in
lods
sahf
into
jo
sbb
xlat
dec
adc
out
jne
mov
push
addr16
fnstenv
icebp
ret
xchg
add
mov
or
test
div
mov
fist
mov
movs
pushf
out
movs
sbb
daa
jl
mov
cmps
popa
cli
jns
xchg
(bad)
retf
or
ror
dec
pop
inc
dec
mul
push
fadd
mov
fwait
aaa
daa
popf
jb
jns
mov
cmp
mov
add
cmp
push
mov
and
call
or
ds
xchg
dec
lods
sbb
push
js
loop
sub
mov
adc
icebp
sbb
push
pop
and
and
mov
or
hlt
iret
sahf
mov
dec
enter
leave
push
pop
cmp
in
adc
hlt
das
or
fist
push
rcl
lods
add
dec
or
adc
xchg
or
out
mov
or
cld
sub
nop
mov
dec
adc
adc
shl
repz
dec
push
add
sbb
in
dec
loop
iret
loop
lahf
dec
js
ret
stos
arpl
pusha
rcr
mov
je
ins
sub
test
sbb
loope
pusha
cmps
inc
in
repz
hlt
shr
mov
add
arpl
bound
push
and
test
jne
xchg
xor
ret
bound
aad
enter
add
fdivr
jl
xchg
ror
xchg
fimul
movs
xchg
aam
(bad)
and
pop
loop
(bad)
das
js
mov
pop
ret
inc
xor
(bad)
ds
shl
sahf
stos
fmul
js
cmps
sub
pop
xchg
cmp
inc
int
pop
shr
ins
dec
push
pop
shl
or
xchg
sub
daa
call
cmp
loopne
bound
adc
ret
pop
(bad)
neg
mov
sub
inc
(bad)
or
call
xchg
mov
lea
mov
mov
outs
sub
or
aam
sub
jo
pop
mov
enter
dec
stos
icebp
fucom
popa
sbb
add
add
es
inc
cli
push
and
clc
mul
jb
pop
lods
mov
and
fdivr
or
mov
test
mov
push
xor
cld
xor
mov
pop
push
push
mov
jmp
mov
mov
stos
cli
stos
out
sti
fisttp
jmp
shl
data16
lock
test
sub
lods
jno
mov
es
sub
inc
aas
dec
cmc
dec
mov
xchg
into
or
add
sbb
repz
sub
fcom
mov
sbb
inc
shr
addr16
ffreep
or
psubsw
clc
rol
jne
jno
pop
ret
adc
leave
clc
(bad)
xor
(bad)
stos
sbb
and
or
dec
push
popa
rcl
jp
adc
or
mov
movs
and
test
sub
stos
movs
or
xchg
nop
cmc
dec
rcr
jns
in
retf
jl
lods
loopne
jmp
popa
test
lock
cmp
dec
fmul
rol
aam
jb
daa
into
(bad)
rcr
nop
xlat
out
pop
retf
out
push
repz
push
iret
or
movs
jge
xchg
jmp
xchg
jbe
jmp
leave
sbb
ret
push
out
jecxz
std
xchg
fisttp
(bad)
mov
push
xor
jmp
add
add
cmp
outs
xor
jge
push
mov
xchg
jl
pop
retf
pop
shl
aam
fadd
retf
mov
mov
pop
(bad)
rol
mov
icebp
dec
mov
(bad)
mov
xor
push
(bad)
sahf
jmp
je
jo
(bad)
cs
ficom
cmc
adc
pop
(bad)
pushf
cmps
jp
setle
(bad)
xlat
xor
sbb
cmc
std
push
repnz
dec
xlat
push
mov
retf
rol
dec
adc
adc
lods
not
inc
cmc
mov
popa
dec
loope
add
int3
in
rcr
xchg
imul
push
fmul
pop
pop
sbb
or
sub
push
jns
xchg
add
add
xor
mov
sti
sti
movs
fmul
pop
outs
sbb
addr16
or
lock
and
pop
cmps
pop
jae
out
pop
es
adc
pusha
repnz
shr
loopne
sbb
div
add
arpl
out
and
repz
push
mov
fucom
or
push
inc
outs
and
jl
(bad)
retf
push
sub
push
aad
addr16
dec
mov
retf
out
sbb
cmp
push
cmc
jo
or
(bad)
imul
mov
sub
nop
sbb
fsub
aad
sti
mov
cmp
fwait
xor
add
push
icebp
push
ficomp
sub
sbb
ja
(bad)
call
inc
cmp
push
hlt
cwde
inc
(bad)
das
pop
(bad)
(bad)
loope
pop
dec
mov
movs
mov
sub
push
bound
push
adc
push
push
inc
lock
rcl
lock
int
int
mov
dec
mov
inc
jmp
sub
sub
jns
gs
pushf
and
hlt
in
(bad)
mov
and
inc
sub
pushf
sub
int3
or
inc
(bad)
mov
xchg
test
(bad)
es
lods
mov
icebp
cmp
cmp
sar
mov
mov
lahf
mov
fcmovne
adc
mov
(bad)
js
xchg
pop
out
cmp
mov
mov
pop
or
xchg
adc
or
cli
sbb
xlat
shl
(bad)
lock
sbb
pusha
adc
add
aam
aam
jmp
mov
inc
sbb
inc
scas
xor
cmp
jbe
sub
sub
out
sbb
cld
dec
mov
fadd
test
mov
mov
push
adc
movs
mov
test
dec
xchg
jae
mov
mov
pop
push
jg
sbb
inc
fdivr
lods
and
(bad)
pusha
mov
hlt
popa
(bad)
sar
or
adc
sub
mov
and
mov
test
lods
jmp
leave
movs
sub
movs
stos
not
lds
xchg
mov
fs
xchg
enter
ret
fimul
add
xchg
xor
imul
sbb
fmul
(bad)
xlat
adc
mov
lods
sbb
cld
inc
sahf
and
scas
scas
and
pop
(bad)
ins
and
xor
retf
pop
dec
mov
push
xor
mov
lahf
cmp
in
test
or
cmp
add
mov
mov
push
scas
mov
(bad)
jmp
or
sub
xchg
stos
movs
loopne
xor
clc
pop
mov
cmp
cmp
test
xchg
jns
jne
(bad)
sbb
adc
mov
inc
add
inc
jp
mov
in
stos
inc
xchg
rol
imul
dec
jns
test
jno
scas
ins
jbe
jle
jge
call
rcl
cdq
push
rcl
xchg
add
scas
jnp
outs
out
das
mov
aad
jle
outs
or
in
in
mov
test
sub
add
ds
xchg
(bad)
adc
xchg
xor
test
sbb
(bad)
jecxz
in
jp
lds
mov
sub
pushf
mov
push
sub
dec
dec
jb
pop
mov
and
shl
in
xchg
push
mov
lock
out
repnz
xlat
push
bound
push
jbe
retf
retf
aam
jle
inc
shl
xor
fist
jp
sar
mov
sub
jmp
lea
add
or
hlt
add
jb
icebp
call
adc
mov
sahf
xor
ins
xchg
pop
pop
ja
mov
mov
adc
cmp
cdq
aas
pop
dec
lock
test
sub
cli
sbb
cmp
cmps
inc
xchg
shl
mov
push
stos
lahf
ds
fcom
push
push
or
mov
lea
xchg
and
icebp
cs
mov
jg
push
push
es
jl
inc
add
xor
dec
xor
cdq
dec
clc
sub
push
or
mov
sub
cmp
mov
mov
out
adc
dec
push
nop
rdtscp
or
jmp
add
rol
add
ins
or
mov
mov
shl
lods
xchg
xchg
pop
cmp
adc
scas
sbb
xor
aad
shr
xor
xor
dec
mov
adc
or
or
xchg
in
arpl
inc
push
mov
into
or
dec
push
outs
xchg
jge
xchg
or
lods
mov
jge
popa
lods
dec
(bad)
movs
mov
test
aam
jg
(bad)
jb
mov
int3
xor
(bad)
jge
jge
and
sub
jg
nop
aad
jle
mul
sub
rcr
rcr
or
popa
dec
dec
push
addr16
inc
inc
push
inc
inc
mov
aas
out
or
repz
loop
inc
leave
add
fsubr
fisub
jbe
scas
xchg
xor
mov
push
mov
jb
bnd
mov
(bad)
in
mov
(bad)
jle
pop
shr
push
cmp
cmp
std
jle
test
adc
test
adc
je
clc
outs
or
in
in
or
xchg
lahf
xchg
mov
push
xchg
sbb
jne
add
in
cmp
aaa
or
sub
xchg
xchg
cmp
in
pop
cmp
dec
imul
or
loope
add
mov
jmp
cmp
enter
jmp
or
and
clc
push
sub
mov
dec
stc
retf
mov
fnstsw
push
outs
js
xchg
jns
mov
in
fsubr
or
lds
shl
pop
mov
nop
xor
ds
or
xor
jo
popf
sub
pusha
add
pop
sub
lods
jno
fdivr
or
sahf
inc
addr16
ja
jns
sub
pop
jp
pusha
das
aam
push
sub
call
add
enter
and
sub
test
push
sub
pandn
pop
mov
pop
repz
dec
aam
sbb
rcr
and
mov
pop
in
push
loopne
jmp
fimul
xlat
popa
push
fiadd
rol
pop
iret
js
loop
and
(bad)
leave
sbb
xchg
jns
aaa
jno
(bad)
xor
add
inc
xchg
mov
or
ja
je
push
mov
dec
enter
push
jge
add
aas
and
cmp
mov
fnstcw
fcmovbe
cmp
inc
mov
das
inc
arpl
icebp
cmp
sub
retf
and
hlt
mov
inc
movs
jmp
lods
sti
push
jae
movs
add
je
bound
aam
int3
cdq
loopne
fisttp
push
inc
sub
fs
loop
gs
je
faddp
and
mov
lds
mov
(bad)
rep
scas
sbb
fisub
in
mov
stos
in
cmp
or
xor
and
imul
cs
mov
add
inc
jecxz
shl
sub
sbb
inc
add
nop
sub
scas
ds
push
nop
inc
push
movs
js
xchg
jb
adc
pop
xchg
sub
loope
outs
push
or
mov
inc
(bad)
mov
inc
sub
pop
ss
push
cmc
ret
sub
mov
mov
call
ret
in
mov
dec
dec
in
or
jecxz
movs
push
(bad)
imul
jnp
dec
cwde
sbb
dec
in
jmp
jo
rol
inc
repz
push
arpl
and
in
jg
test
lds
movs
or
in
add
jg
cmp
repz
(bad)
imul
fcom
arpl
adc
mov
retf
push
adc
lock
test
lods
dec
or
or
loopne
push
mov
mov
lods
js
xchg
fisttp
sti
push
mov
out
test
test
add
or
int3
inc
pop
jb
add
or
or
inc
(bad)
call
mov
fst
(bad)
ror
push
scas
dec
dec
or
xchg
clc
jmp
out
cmp
or
mov
bound
inc
repz
mov
xchg
outs
sbb
repnz
sbb
dec
adc
adc
jns
outs
enter
ja
test
push
pusha
sub
out
jmp
jae
aas
test
mov
add
stos
cmp
enter
pop
lods
(bad)
jmp
push
popa
jecxz
cmp
(bad)
jns
fwait
add
mov
(bad)
rcr
xchg
pop
hlt
bound
call
jge
cmp
pop
mov
and
push
ja
push
add
mov
lock
sar
call
pmullw
out
pushf
mov
jne
pop
ins
les
cmp
hlt
(bad)
xchg
add
leave
aas
add
dec
ret
sbb
addr16
jnp
rcl
inc
fistp
mov
rol
push
pop
call
pop
xchg
xor
arpl
xchg
ret
sbb
(bad)
cmp
imul
lahf
rcl
adc
add
and
xchg
mov
bound
ss
(bad)
mov
in
jle
inc
jbe
dec
sbb
inc
cs
ins
xor
sbb
pop
stc
dec
mov
mov
movs
repnz
inc
push
js
call
outs
loopne
out
stos
pop
int3
arpl
sbb
cmp
icebp
(bad)
pop
cmp
in
inc
or
test
in
xchg
pop
jno
sbb
add
dec
ds
adc
in
outs
adc
dec
pop
(bad)
sar
and
repnz
pop
pop
cs
icebp
fstp
mov
js
mov
mov
mov
and
sbb
xchg
mov
in
mov
out
xchg
ficom
dec
fisttp
mov
cmp
mov
push
ins
xchg
pop
rol
mov
mov
push
shl
rol
sub
stos
das
xchg
pop
test
mov
cmps
xor
fnstcw
out
sub
lock
xor
lea
ss
cdq
pop
mov
add
mov
push
cmp
push
repz
addr16
test
in
lods
dec
and
jb
sub
ins
mov
or
lods
hlt
and
mov
fcomp
sar
popf
dec
out
inc
add
ror
adc
test
sub
loop
add
mov
mov
and
out
rcr
aad
fs
lahf
dec
adc
mov
aam
outs
retf
adc
imul
cs
cmc
ja
push
rcl
mov
jne
sub
xor
push
cmps
xlat
mov
or
je
inc
jae
fistp
pop
xor
shl
mov
js
add
xor
popa
cmps
inc
aaa
daa
scas
pusha
push
addr16
pop
adc
sbb
mov
pop
or
xchg
sbb
retf
test
ds
mov
add
in
sar
cmp
(bad)
popa
cmp
outs
lahf
xchg
shr
sbb
mov
push
out
int
daa
mov
mov
xchg
inc
scas
cmc
lods
pusha
shl
push
xchg
sub
mov
lahf
mov
push
pop
repnz
pop
push
or
inc
jp
cmps
sub
and
mov
push
mov
in
shl
push
cld
jmp
inc
dec
rol
add
pushf
push
xor
(bad)
cmp
inc
les
pushf
or
hlt
in
xor
sub
out
or
in
mov
movs
or
pop
pushf
dec
fucom
bound
inc
scas
jb
push
cld
sub
ret
ds
push
jle
out
imul
sbb
shl
xor
imul
aas
jp
lea
div
jne
fisttp
aaa
mov
sbb
mov
xchg
sub
(bad)
loop
repz
sub
aam
loop
lahf
out
inc
in
pop
and
aaa
aas
xchg
ret
jl
jae
cmp
hlt
adc
sbb
inc
mov
into
xchg
addr16
sbb
xor
aaa
dec
loopne
or
out
fstp
rcl
ins
xchg
or
icebp
push
adc
add
pop
hlt
inc
imul
jae
inc
and
cmps
xchg
push
sti
pop
fsubr
into
aad
ins
mov
loopne
mov
push
int3
xor
repz
inc
cmp
sub
fimul
xchg
test
push
add
lea
icebp
test
xor
add
ins
rcl
mov
in
arpl
inc
xchg
loop
cmp
cmp
add
mov
dec
and
popf
fiadd
ror
ins
pop
outs
ds
iret
aam
xchg
xor
mov
das
loop
sub
cmp
test
fmul
iret
pop
push
push
push
lock
aam
jge
adc
push
out
fisttp
fwait
in
and
inc
ret
das
aad
ffreep
or
dec
pop
jne
daa
add
test
in
in
jmp
arpl
in
cwde
mov
stc
(bad)
je
jecxz
loopne
test
add
xlat
add
comiss
inc
das
loopne
inc
xlat
sub
cli
push
adc
xchg
mov
jns
add
hlt
jno
jmp
push
mov
push
mov
xchg
loopne
fimul
push
sub
xchg
loopne
or
add
mov
test
test
and
stos
mov
fmul
add
jmp
mov
mov
adc
data16
push
and
add
or
xchg
outs
into
rol
or
mov
fcmovne
add
(bad)
mov
push
push
ja
push
ror
dec
inc
xchg
lea
cmp
push
stos
sub
sbb
stc
rcl
sub
fwait
mov
sbb
xor
fild
xor
mov
(bad)
mov
jmp
cdq
loop
aaa
dec
xor
fst
aad
and
lds
ds
mov
ror
ror
pushf
nop
imul
inc
out
addr16
enter
dec
test
addr16
xchg
mov
neg
push
imul
mov
sub
mov
mov
dec
push
mov
test
sbb
mov
adc
ret
cmp
lds
push
ins
imul
icebp
jecxz
adc
sbb
test
inc
mov
sar
sti
clc
pop
sub
out
bnd
mov
xchg
fmul
jge
push
ss
jno
test
loope
ror
out
cmp
jnp
dec
jl
(bad)
xor
mov
movs
jmp
data16
xor
bound
in
fist
sbb
mov
es
xchg
fisttp
sti
movs
sub
jmp
sub
mov
push
mov
sbb
adc
je
outs
xor
jl
jl
inc
ins
test
push
lea
mov
call
cs
(bad)
call
cld
hlt
inc
and
xor
repz
mov
cmps
pop
fwait
pop
sbb
sub
xor
pop
mov
mov
imul
dec
dec
mov
mov
push
sahf
stos
nop
div
mov
(bad)
fs
jecxz
cmp
cmp
push
inc
lea
or
xor
je
jo
frstor
pop
je
lahf
cmc
or
fsubr
sbb
sbb
icebp
and
pop
sub
sub
sub
pop
pop
ds
jne
ds
mov
fstp
push
repnz
mov
push
push
sbb
icebp
cs
sbb
sahf
jecxz
pop
ds
xchg
in
in
movs
icebp
lods
push
nop
pop
adc
mov
aad
dec
add
sub
scas
xchg
push
movs
xor
fwait
gs
ds
ret
mov
xor
lods
adc
repnz
xor
cmp
loope
jecxz
outs
mov
xor
outs
or
daa
xor
xchg
lods
cmps
xchg
leave
jbe
repnz
pop
jmp
add
add
repz
daa
or
sbb
push
int3
or
sahf
push
cs
fiadd
hlt
and
stos
fnstsw
js
cmp
or
mov
mov
jge
in
into
mov
mov
jno
pop
pop
psllq
js
xchg
in
pop
push
leave
add
mov
xchg
push
mov
push
or
and
sub
cwde
rol
mov
adc
(bad)
xchg
enter
cmp
xor
push
(bad)
scas
jne
mov
add
adc
int3
pop
adc
dec
test
in
push
mov
adc
xor
(bad)
aas
adc
dec
sti
stc
xchg
push
imul
push
pop
cmp
and
mov
int3
xor
xor
and
(bad)
adc
add
lods
retf
xchg
fnstenv
cld
movs
adc
adc
loop
xchg
scas
mov
clc
lods
gs
loope
push
mov
xor
add
out
mov
pop
mov
jmp
les
and
aaa
ja
fimul
sbb
pop
mov
pop
add
dec
je
push
and
xchg
jno
inc
jle
stos
into
add
push
in
fstp
xchg
push
(bad)
mov
(bad)
rcr
inc
xchg
xor
ins
das
fst
xchg
sbb
mov
push
scas
pushf
jmp
xchg
neg
dec
xchg
xchg
mov
and
inc
test
fcomip
imul
fild
sub
call
inc
(bad)
dec
and
fistp
movs
retf
jle
mov
pop
mov
inc
sbb
dec
out
stos
cmps
push
sbb
xor
inc
aad
repz
ins
rcr
jne
enter
jmp
retf
push
stc
fidiv
inc
shl
jbe
pop
int
jo
xor
ja
fbstp
jg
shl
jl
fisubr
sub
outs
push
cmps
lods
(bad)
xor
pop
hlt
or
adc
pushf
adc
or
out
jle
mov
dec
mov
xchg
adc
jmp
pusha
mov
mov
xchg
pushf
mov
push
in
cmc
mov
mov
js
(bad)
test
ror
inc
jnp
das
push
jp
scas
or
stc
pop
mov
or
xchg
or
xchg
jg
dec
pop
stos
sub
cmp
jb
jo
jno
inc
xor
mov
push
pop
(bad)
jecxz
inc
bswap
(bad)
fstp
ss
push
and
cli
and
in
ins
std
jg
push
lods
xchg
adc
cli
stos
dec
inc
adc
mov
cmp
lods
mov
adc
dec
(bad)
(bad)
loope
sar
loop
pop
sub
cmp
jae
sub
and
jns
pop
movs
push
jns
test
out
and
daa
and
or
icebp
xlat
inc
pop
int
mov
ins
stos
mov
fwait
movs
(bad)
xchg
pop
out
popa
jne
arpl
xchg
mov
push
inc
dec
fwait
shl
lods
jmp
(bad)
cmp
mov
cmp
test
sub
sub
mov
jae
cli
ss
and
push
ja
pusha
inc
out
adc
xor
dec
adc
xor
stos
mov
cmp
lods
or
jbe
jb
mov
test
inc
div
inc
sub
loop
xchg
sbb
mov
and
inc
cli
push
pushf
sub
test
mul
cmp
push
sbb
fstp
cs
dec
enter
and
mov
shl
cli
cmp
sbb
ror
test
imul
inc
test
ins
sub
jg
les
dec
es
in
adc
xor
out
outs
es
pop
mov
adc
dec
test
mov
int
mov
inc
jle
mov
out
fdiv
push
inc
out
mov
sub
sbb
jno
or
loope
rcl
in
out
(bad)
fsubr
mov
push
inc
inc
jecxz
pop
enter
xor
jge
retf
movs
ja
rcr
std
pop
gs
pushf
jl
and
sbb
mov
fidivr
arpl
mov
push
push
dec
jecxz
outs
jno
jg
rol
xor
xor
and
push
fist
cmp
arpl
cld
ins
imul
jae
jmp
add
(bad)
int3
cmp
push
iret
ja
rol
fsubr
bound
gs
and
push
inc
gs
popf
rol
fiadd
jg
pop
jno
xchg
and
or
fsub
sub
stos
cdq
and
adc
mov
data16
sub
or
sub
cdq
sbb
and
sbb
jns
(bad)
out
mov
arpl
jle
xchg
test
jne
xlat
cld
lds
repnz
sbb
loop
mov
test
xor
int
xchg
mov
sub
cs
push
jb
js
lea
add
xor
nop
(bad)
outs
adc
mov
jnp
xchg
jecxz
mov
mov
enter
jmp
xchg
add
mov
in
pop
ror
sub
or
sub
push
cli
lahf
jle
fs
cmp
add
aad
mov
add
inc
mov
call
(bad)
xchg
test
pop
cmp
cs
mov
lock
xor
inc
push
hlt
add
pop
outs
sbb
inc
aas
sub
ret
xchg
jp
add
fwait
int
jmp
fmulp
out
add
or
push
pop
jecxz
pushf
adc
movs
loop
cmp
xchg
lds
ret
push
dec
sbb
mov
xor
(bad)
xor
jno
aam
(bad)
and
sub
inc
jnp
out
fidivr
cmp
sbb
mov
pop
pusha
and
pop
pop
scas
popa
mov
lea
pusha
cmc
pop
sbb
sub
sub
inc
fdiv
orps
xor
jne
repnz
jmp
cmp
xchg
mov
cmps
and
jae
imul
(bad)
pop
cmp
(bad)
mov
lods
mov
cmp
dec
dec
lock
js
lea
jecxz
and
lods
icebp
inc
mov
outs
jp
ud0
lock
sbb
popf
mov
arpl
addr16
pop
adc
or
adc
hlt
mov
jmp
mov
xor
or
sahf
jae
sar
xor
xor
xchg
push
lds
in
mov
mov
push
pusha
adc
cmp
fmul
cmp
push
pop
mov
and
lods
outs
ds
push
or
out
movs
clc
cmc
pop
int3
jmp
push
push
in
pop
push
jmp
mov
int3
inc
mov
xchg
lods
std
cmp
movs
lock
mov
xchg
xchg
jmp
push
icebp
jo
mov
ja
sub
repz
rol
mov
(bad)
mov
push
(bad)
push
loop
sbb
push
sahf
xchg
push
rol
into
inc
xor
jnp
jmp
jbe
sbb
les
mov
xchg
stos
lods
and
(bad)
call
adc
or
pop
jle
ins
xchg
stc
fld
xchg
jmp
lods
mov
sbb
jge
pop
dec
sbb
xchg
fistp
movsx
ss
dec
mov
jecxz
test
push
outs
ja
add
into
push
mov
sub
dec
sbb
pop
sahf
bnd
push
enter
adc
mov
add
out
dec
push
cdq
rcr
dec
fimul
inc
enter
xchg
out
icebp
xchg
pop
rcl
bound
mov
int
sub
jmp
cs
call
call
inc
test
(bad)
and
or
mov
cmp
adc
xor
fwait
rcr
mov
mov
fisttp
aad
fcom
dec
test
jbe
dec
lahf
enter
in
retf
imul
adc
sar
pop
fisubr
ins
push
xchg
scas
mov
push
icebp
jmp
jb
xor
loope
pop
mov
and
pop
jmp
repz
sti
pop
ret
or
leave
mov
or
add
stos
sbb
es
outs
xchg
sbb
pusha
je
inc
push
repz
mov
lea
xchg
ret
rol
pause
icebp
sub
movs
stos
out
inc
fisttp
and
mov
jmp
icebp
or
cwde
(bad)
mov
mov
or
dec
stos
xor
push
jg
into
mov
js
xchg
fsubr
jg
mov
fiadd
sub
loopne
cld
ins
in
icebp
ret
xor
push
push
fsubr
jle
stc
xchg
popf
stos
fwait
popf
nop
jbe
push
loopne
inc
push
ds
jno
add
sub
dec
mov
ret
fs
xchg
popf
xchg
aaa
dec
mov
(bad)
mov
cwde
inc
mov
retf
xor
add
cdq
inc
add
push
inc
mov
or
xchg
cdq
clc
rol
ins
and
add
shl
out
xchg
xchg
sbb
jp
sar
cmc
stos
sub
outs
out
enter
out
out
shr
and
test
out
sub
outs
cmp
dec
mov
cmp
dec
loopne
mov
cwde
das
sbb
icebp
add
mov
test
(bad)
ds
adc
lods
dec
lods
call
push
sub
jge
lds
xchg
and
inc
push
int3
loope
jne
dec
dec
sub
pop
jae
push
out
in
jmp
or
pop
mov
pop
add
enter
push
cmp
test
xor
adc
data16
adc
fst
mov
dec
mov
xor
cmc
xchg
iret
test
mov
leave
not
rol
imul
jno
in
sbb
xchg
xchg
cmps
loopne
pop
adc
fstp
mov
jle
jmp
in
dec
add
xor
imul
or
rcl
(bad)
bnd
jb
fist
jg
iret
fisubr
out
xlat
xchg
add
adc
out
cmp
jecxz
popa
fadd
adc
adc
mov
test
pop
adc
mov
xor
or
jmp
enter
xchg
(bad)
bnd
xchg
imul
jp
pop
ds
sub
cmp
ins
push
xlat
mov
xchg
call
cmc
pusha
cmc
push
jae
sub
jg
xchg
in
jae
mov
push
mov
cmp
(bad)
pop
aam
aam
adc
sub
push
leave
mov
js
dec
push
(bad)
pop
imul
(bad)
rcr
leave
pop
enter
sub
sbb
mov
fadd
popa
rcr
ja
cmps
lods
les
in
iret
fild
push
rcl
test
(bad)
adc
push
leave
hlt
inc
daa
pop
ffreep
mov
push
sti
ss
inc
lock
mov
inc
jmp
pop
or
es
stc
mov
mov
push
dec
rcl
movs
xchg
mov
adc
or
or
add
in
jmp
mov
ds
(bad)
xchg
jb
imul
pop
mov
cmp
or
mov
inc
rcl
gs
mov
lahf
sbb
xor
out
or
outs
fldenv
jecxz
jecxz
les
sub
ins
and
xchg
inc
(bad)
adc
aas
push
xor
xor
pop
sub
pusha
and
clc
xor
(bad)
test
xor
inc
ja
or
rcr
jmp
loopne
sbb
dec
lahf
test
movs
aaa
pop
stos
and
sub
ja
ja
sbb
(bad)
aas
pop
push
push
aam
aad
dec
inc
fdivr
jge
sub
mov
adc
loop
push
xor
mov
fnsave
push
daa
in
fst
js
das
enter
std
mov
fdivr
add
fdivr
jmp
xlat
cmp
mov
add
inc
add
mov
cmps
out
fistp
(bad)
xchg
jp
movs
jl
into
push
ja
dec
stos
push
inc
mov
push
shl
mov
mov
imul
into
ja
xchg
cmp
xchg
mov
pop
cmp
cdq
sub
sub
push
cmp
push
test
push
fnstenv
(bad)
out
fs
aad
imul
mov
pop
hlt
jb
sbb
loopne
outs
cmp
scas
lahf
lahf
fs
add
and
scas
ds
sub
jb
hlt
and
pop
xor
stc
mov
icebp
add
jp
jge
in
adc
mov
out
out
sub
cmp
sub
clc
leave
mov
sub
sub
push
xchg
scas
call
aas
jmp
je
fidivr
xor
mov
mov
sbb
fdivrp
pop
(bad)
adc
pop
mov
jns
push
sbb
int
std
(bad)
pop
pop
mov
or
ins
push
mov
dec
scas
or
ss
fisub
leave
mov
ficom
pop
push
cmp
pushf
push
mov
popf
enter
xor
iret
aas
ret
les
cmps
mov
xor
fnsetpm(287
sub
fwait
mov
repnz
sbb
sbb
mov
mov
pop
inc
or
dec
js
dec
adc
outs
mov
stos
sbb
retf
mov
pop
ins
mov
daa
daa
push
xchg
xor
mov
movs
mov
lods
adc
out
and
mov
mov
push
je
loope
jo
mov
sti
adc
mov
ror
stos
inc
shr
pushf
sub
adc
pop
mov
mov
push
sbb
test
data16
icebp
fcom
pop
iret
ins
(bad)
mov
add
jmp
and
fistp
sbb
test
cmp
in
jb
dec
cwde
sbb
gs
repz
imul
aad
dec
jmp
lods
xchg
fisubr
ins
fdivr
stos
(bad)
test
movs
jmp
shl
and
mov
mov
in
jno
shl
fimul
xchg
or
fsubr
or
pop
inc
nop
push
rcr
retf
lock
mov
mov
dec
xchg
push
mov
imul
arpl
pop
jl
pop
jb
fs
add
shl
std
sub
lods
mov
sub
lahf
xor
jnp
jnp
cmc
xchg
shl
dec
bnd
add
cmp
(bad)
pop
adc
mov
inc
addr16
mov
int3
mov
sbb
es
mov
ficom
(bad)
outs
pop
xchg
inc
xor
inc
mov
pop
hlt
xchg
push
stc
pop
adc
sub
neg
sbb
jns
sbb
ins
and
xor
adc
push
(bad)
loope
(bad)
sub
mov
enter
pop
int
imul
pop
pop
pop
(bad)
into
fnstcw
ror
cmp
out
movs
shl
arpl
popa
loop
pop
xchg
push
and
push
add
mov
cdq
ficomp
fwait
mov
xchg
mov
rcr
test
ja
je
mov
adc
enter
add
adc
mov
pop
sbb
fild
int
xor
mov
ds
sbb
out
jmp
(bad)
aas
cdq
dec
shl
lods
and
outs
loope
push
and
bnd
test
sahf
out
in
push
xchg
or
mov
fcomp
jae
ins
pop
jnp
mov
mov
div
call
pop
cmp
js
bswap
and
push
push
xchg
sub
ja
dec
cs
and
or
in
test
shl
lock
mov
mov
dec
cli
leave
mov
xor
scas
imul
mov
(bad)
std
inc
hlt
dec
loop
cmp
mov
add
xchg
scas
ret
out
je
sbb
dec
sub
xchg
imul
pop
inc
cmp
inc
inc
and
xchg
repnz
sub
scas
dec
in
into
ins
push
mov
mov
ins
adc
mov
jmp
aam
sub
mov
or
fldcw
mov
xchg
inc
iret
test
cdq
out
(bad)
and
test
or
dec
pop
repnz
fisttp
jl
inc
mov
loopne
pop
cmp
ins
test
pop
or
mov
pop
pop
ret
adc
pop
call
ret
cmp
inc
inc
and
mov
mov
pop
adc
fistp
cmp
adc
xor
mov
jns
fcomp
mov
mov
xor
adc
fwait
or
movq
mov
sub
(bad)
pop
jb
mov
mov
scas
jo
mov
test
or
lds
loope
or
pop
dec
loop
(bad)
test
aaa
cmp
xchg
sbb
mov
cli
mov
dec
ja
call
into
pushw
sbb
cli
retf
push
in
(bad)
(bad)
jmp
test
or
imul
retf
pop
xlat
lea
shl
or
(bad)
cmc
clc
or
push
loop
jne
aas
xor
xor
cmc
bound
jo
stos
push
cmp
retf
jmp
dec
std
push
xor
out
sbb
inc
nop
loope
push
lahf
push
pop
(bad)
(bad)
enter
pop
push
lahf
dec
pop
add
mov
or
pushf
inc
or
add
nop
sbb
cmps
(bad)
xchg
and
jbe
cwde
icebp
mov
fwait
test
cmp
push
cld
push
cli
into
mov
aad
adc
push
outs
aad
mov
pop
mov
scas
inc
cmps
scas
(bad)
pop
rcl
add
fdivr
or
xor
inc
push
mov
in
or
jmp
(bad)
sbb
mov
and
hlt
cmp
out
out
shl
mov
shr
push
dec
xchg
mov
(bad)
out
(bad)
xor
cmps
(bad)
push
jg
(bad)
popa
jmp
jmp
add
out
scas
(bad)
rcl
jl
mov
adc
and
stos
lock
in
aaa
pop
idiv
out
inc
xchg
or
mov
dec
xchg
ret
out
lds
cmp
push
js
stos
cmp
subps
fmul
jle
ins
push
out
stos
aad
sub
or
sub
cmc
pop
xchg
(bad)
dec
aam
daa
loop
mov
sbb
mov
pop
inc
leave
int3
out
cmps
xor
aas
xchg
adc
icebp
push
push
icebp
div
ds
test
mov
mov
dec
mov
sar
loope
aaa
std
lahf
rol
dec
and
js
pop
push
aaa
jbe
push
mov
sub
scas
jbe
jp
repnz
bswap
lock
leave
sub
imul
jno
xor
pop
cmp
iret
into
add
dec
arpl
inc
movs
out
adc
xchg
hlt
scas
jne
add
jns
dec
iret
jle
pop
test
in
sar
pop
pop
repz
mov
test
retf
push
leave
add
inc
leave
mov
fmul
add
cmp
fs
inc
inc
call
xchg
or
scas
inc
cmc
loopne
stos
mov
xchg
xor
addr16
dec
fwait
out
pusha
jns
les
(bad)
mov
fcmovb
push
stc
pop
adc
sbb
push
sbb
and
popf
mov
test
sbb
rol
mov
sbb
add
sbb
push
add
out
xchg
adc
addr16
js
or
dec
daa
repz
sahf
and
clc
aad
sub
jns
dec
scas
stos
jns
out
(bad)
cdq
lahf
scas
daa
and
push
imul
clc
push
inc
int3
add
imul
sbb
xchg
test
int3
push
fld1
ins
mov
mov
ss
jns
hlt
sbb
in
add
js
hlt
and
xchg
jge
and
add
fwait
outs
scas
icebp
in
(bad)
daa
scas
xor
jmp
rcl
loopne
or
lds
data16
shl
ror
test
(bad)
pop
mov
add
clc
pushf
scas
pop
inc
mov
sbb
xchg
mov
lods
and
cmc
inc
inc
pop
pop
aas
aad
xchg
daa
lea
mov
xchg
push
jae
dec
sti
xor
(bad)
adc
or
push
dec
pop
cmp
loope
fcmove
sub
daa
sahf
mov
imul
das
sti
push
xor
sub
xor
mov
das
fcom
sub
jae
add
jg
inc
adc
mov
sub
scas
cmp
push
sbb
(bad)
sti
pop
cwde
mov
outs
cmp
loop
jle
jg
enter
in
pop
mov
mov
call
mov
push
sbb
sbb
popf
mov
jne
fnsave
popf
mov
jns
pop
(bad)
out
test
pop
mov
xor
inc
inc
sti
out
push
jae
or
pop
and
add
or
out
xchg
fistp
pop
fprem1
jmp
cmp
pop
psllq
dec
mov
cmovne
stos
fsubr
jl
cmp
jp
sub
in
dec
mul
lock
aad
sti
inc
loopne
das
inc
mov
ins
jbe
cmp
and
retf
std
mov
push
dec
out
pop
ja
pop
shl
movs
mov
scas
mov
cdq
sub
sti
push
lds
or
dec
mov
popa
xor
fsub
imul
lea
mov
lock
lods
jecxz
jg
mov
ss
imul
cmp
add
call
retf
sbb
sub
jle
out
fisttp
das
mov
test
test
je
inc
inc
inc
mov
ins
mov
or
std
fild
jge
mov
popa
jg
es
outs
inc
jl
inc
add
inc
add
ret
(bad)
daa
ins
sub
fs
jge
ret
or
ret
shl
test
mov
jp
popf
ins
sub
mov
clc
cli
jecxz
fadd
stos
adc
not
mov
cmps
iret
adc
ja
push
in
jmp
add
es
mov
inc
cmp
rdtsc
movs
xor
xchg
push
sar
mov
out
aaa
(bad)
loope
xchg
jnp
les
jg
std
sar
cmp
sub
inc
adc
hlt
dec
or
stos
jecxz
fs
xchg
inc
jne
outs
data16
cmc
in
adc
aam
outs
les
bound
neg
aam
pop
xchg
or
(bad)
hlt
test
addr16
ss
sbb
in
and
add
in
rcr
sub
cmp
out
mov
out
cmp
aaa
into
in
arpl
mov
inc
nop
loop
xchg
xor
pop
arpl
dec
nop
test
fcomip
(bad)
xor
dec
pop
mov
popf
scas
mov
lods
dec
xchg
fdiv
and
jbe
sahf
sub
push
mov
pop
ja
xor
pop
mov
cmp
(bad)
lods
imul
movs
mov
push
pusha
nop
push
(bad)
sbb
movs
cmp
jb
xchg
dec
sub
outs
dec
rcr
aad
jbe
dec
cdq
mov
ret
push
push
pop
mov
inc
push
in
and
and
push
pop
cld
test
(bad)
fadd
js
jne
inc
stos
cmp
sub
pushf
xchg
rcr
je
jmp
cld
inc
lods
push
add
or
mov
inc
xor
addr16
xchg
sub
inc
mov
mov
mov
jl
loope
dec
jl
shl
sub
xchg
xor
and
sti
add
retf
(bad)
jge
dec
pop
xchg
lahf
mov
test
ins
pop
or
lods
inc
pop
out
out
adc
in
mov
imul
inc
cmps
std
push
les
loop
outs
jb
inc
push
mov
mov
cmp
fisub
xchg
xchg
(bad)
push
(bad)
test
ss
mov
inc
cmp
int
out
or
dec
test
dec
in
pop
mov
arpl
pop
add
int3
out
lea
jbe
inc
sub
push
pop
mov
push
stos
out
sub
dec
movs
mov
out
cmp
dec
jbe
shr
fs
test
add
retf
cmp
ror
popf
inc
xlat
fs
ror
add
mov
cmp
ror
cli
hlt
jg
push
dec
mov
and
ins
outs
das
repnz
sub
repz
and
dec
push
adc
addr16
jae
pop
scas
push
push
sub
leave
sub
xor
ficomp
das
mov
rcr
lds
imul
loope
adc
jl
in
int3
mov
jmp
movs
fcom
add
into
sbb
mov
or
jae
in
arpl
dec
sbb
pop
sub
and
xchg
pop
jbe
cmp
popf
sbb
iretw
or
xor
inc
mov
dec
jmp
stos
cmp
int
xor
outs
pop
imul
sub
xor
test
retf
fdiv
pop
leave
fchs
jmp
adc
outs
xchg
popf
retf
add
cs
cmp
js
xchg
aam
adc
nop
adc
or
xchg
jnp
cmp
pop
inc
fist
mov
int
jmp
mov
jo
sub
fidivr
mov
xor
adc
adc
inc
out
add
loopne
shl
add
sbb
loope
aam
or
test
jp
inc
push
mov
lods
inc
fisub
push
adc
mov
ret
aam
pop
out
cmp
sbb
xor
test
and
add
xchg
adc
pop
or
sub
(bad)
fwait
xor
jno
aam
int3
ret
jp
loope
es
cli
mov
xchg
clc
dec
mov
sbb
arpl
loop
adc
pushf
pop
int
ret
xchg
int
sbb
cmc
dec
mov
or
cld
mov
test
cmps
stc
ins
aaa
adc
shr
(bad)
sbb
mov
add
lds
inc
nop
inc
inc
int3
cli
jmp
dec
and
inc
outs
loop
outs
sbb
dec
cmp
(bad)
cdq
or
or
leave
mov
jo
jmp
xchg
sub
cmp
pop
jnp
sub
add
sbb
jl
xchg
dec
push
out
mov
stc
rol
test
or
adc
inc
jae
mov
mov
test
ja
jp
ja
std
data16
mov
inc
cmp
stos
mov
adc
fisub
scas
je
out
jmp
in
sbb
jae
sub
push
mov
jo
sub
out
xor
and
std
mov
xchg
sar
hlt
movs
(bad)
jmp
or
inc
imul
push
dec
lods
xor
dec
ins
imul
fcomp
(bad)
loope
jmp
sbb
or
cmc
lahf
jb
stc
aad
or
push
add
jle
ins
loopne
stos
xlat
repz
cmp
xor
imul
gs
adc
nop
movs
push
jb
in
fimul
out
xchg
outs
(bad)
jg
adc
dec
loop
out
fcomp
add
sub
imul
inc
(bad)
cmp
shl
xchg
or
int3
mov
sbb
add
jmp
mov
leave
xchg
sbb
jnp
arpl
mov
loop
xor
push
ds
jo
mov
adc
or
retf
lds
scas
sbb
imul
push
mov
mov
rcr
fwait
in
aam
mov
pop
mov
daa
jmp
mov
xchg
dec
adc
ficomp
sbb
cmp
push
dec
outs
and
cmp
cmp
ror
adc
out
fwait
and
mov
dec
in
push
ret
jmp
mov
or
pop
or
movs
push
dec
test
push
jb
xor
ja
mov
mov
push
pusha
aaa
fldenv
jge
add
lahf
mov
pushf
mov
in
inc
out
das
push
mov
mov
cmps
cmp
lea
push
dec
xor
mov
xor
jmp
push
adc
push
int3
movs
mov
or
pusha
ins
push
or
add
jecxz
sbb
adc
cdq
shl
push
mov
lahf
mov
or
inc
ror
add
xor
add
rcl
(bad)
or
(bad)
mov
xchg
jnp
jge
mov
shr
mov
into
scas
lods
pop
mov
or
lods
(bad)
and
pop
xchg
(bad)
rcr
aam
xor
xchg
mov
repz
or
sub
mov
or
sbb
aad
jo
lods
sbb
xchg
dec
pop
sbb
adc
xor
pop
dec
sub
sbb
mov
pusha
inc
xlat
add
sub
or
dec
(bad)
jbe
das
enter
enter
mov
jne
inc
mov
int3
pop
cli
test
xchg
cmp
mov
push
mov
shl
sub
dec
mov
les
daa
imul
jmp
(bad)
std
int3
repz
es
mov
mov
mov
push
outs
sbb
mov
test
mov
loop
xchg
and
jg
(bad)
jns
ret
cmps
sub
in
cmps
cld
push
in
loop
leave
or
xchg
mov
xchg
jmp
lock
push
dec
mov
cwde
in
pop
adc
xchg
xor
cwde
ret
mov
leave
cld
jno
and
test
iret
fistp
scas
xchg
scas
sbb
pop
fild
push
test
sbb
sbb
(bad)
std
std
shl
or
fnstsw
gs
sub
inc
jno
out
cmp
mov
movs
into
call
xchg
(bad)
inc
iret
push
mov
or
mov
out
fs
inc
dec
sbb
std
mov
cmp
cs
test
neg
jmp
inc
inc
pop
in
les
add
ins
cmp
ds
or
retf
lods
or
call
xor
rol
cmc
jbe
inc
imul
pop
mov
xor
jp
loopne
rcl
add
and
movs
js
xchg
xor
addr16
stos
fisttp
mov
cmps
sub
sub
mov
test
fcmovb
sbb
outs
fwait
mov
ja
mov
add
clc
iret
ret
mov
int
cld
cmps
js
pusha
xor
or
jo
adc
dec
or
data16
out
jge
daa
sub
(bad)
jmp
adc
sbb
(bad)
mov
adc
sbb
xor
dec
call
or
jb
test
or
aaa
or
retf
push
fist
lods
ins
stc
inc
mov
bound
rol
xor
cmps
popf
js
dec
cmps
daa
mov
and
cmp
sbb
enter
pop
xor
xchg
jge
stc
(bad)
into
sbb
push
push
mov
int
stc
jo
jmp
jbe
or
or
dec
mov
cmp
das
or
(bad)
push
hlt
prefetch
cdq
mov
mov
sbb
adc
sub
jnp
(bad)
push
fwait
pop
aaa
dec
inc
retf
ja
je
retf
call
mov
movs
dec
jmp
sbb
pushf
cmp
push
or
mov
shl
inc
cdq
mov
cmps
pop
cmp
bound
int3
mov
xchg
or
(bad)
cld
pop
es
inc
jmp
push
(bad)
popf
cmps
mov
inc
mov
and
dec
push
pop
xchg
retf
sbb
test
fwait
add
pop
test
dec
outs
jo
xchg
mov
and
sbb
out
icebp
jns
sbb
sar
jne
int
ss
(bad)
dec
xchg
loope
ret
xchg
add
scas
pusha
test
popf
pop
mov
sub
frstor
or
sbb
add
sbb
das
sbb
shr
test
repz
popf
hlt
dec
sub
in
add
or
call
mov
imul
int
data16
sub
test
push
push
pusha
xchg
jnp
mov
addr16
iret
mov
iret
pushf
and
adc
cmp
xor
add
cld
mov
inc
js
aad
aad
jno
faddp
fdivr
dec
jb
rcr
push
mov
inc
sbb
lds
es
add
fldcw
cli
cld
mov
adc
sar
fadd
data16
mov
outs
push
sbb
jmp
sub
or
iret
add
lds
jnp
pop
mov
sbb
(bad)
pushf
sbb
mov
jbe
sub
nop
aas
mov
fidivr
out
sub
inc
mov
pop
xor
clc
movs
lds
lahf
jae
add
fidivr
xchg
cmp
aam
test
dec
xchg
mov
or
mov
popf
outs
cmp
(bad)
push
das
fimul
pop
push
addr16
mov
push
(bad)
mov
int3
fcomip
add
icebp
xor
push
(bad)
jg
xor
and
cwde
repnz
ret
ficomp
jl
or
je
inc
jl
lds
cmps
jmp
and
push
lock
mov
ins
pop
jl
sbb
xor
cs
and
clc
add
mov
fwait
or
nop
sub
mov
and
and
lds
push
push
inc
mov
sti
pop
outs
dec
std
cmps
icebp
xchg
cwde
inc
loope
lods
xchg
ficom
cmp
jbe
jno
rol
int3
push
pop
xchg
scas
test
ror
push
mov
retf
sahf
mov
je
pop
popf
jecxz
les
mov
ror
rol
cs
xor
xor
push
or
dec
ins
retf
retf
stos
push
dec
popa
pop
jae
pop
jbe
lds
(bad)
nop
pushf
dec
ja
adc
lahf
jge
cmp
idiv
mov
js
jne
test
neg
inc
push
stos
enter
ds
in
(bad)
push
sbb
add
retf
gs
push
cmps
adc
dec
add
icebp
push
in
inc
test
pop
pop
iret
fild
mov
push
mov
ret
fdivr
xchg
push
cmp
push
jecxz
shl
pop
inc
xor
aad
adc
loope
push
sti
ins
rcr
mov
lock
scas
mov
push
xchg
and
ret
fdivr
xchg
in
adc
stos
enter
mov
or
push
repnz
push
jle
rcl
call
jae
ret
jl
cwde
test
push
or
pushf
sbb
pop
dec
mov
imul
inc
jp
pusha
leave
mov
push
xchg
jno
add
sti
pop
xor
jle
sub
aam
sbb
les
add
daa
adc
xchg
xchg
xor
fyl2xp1
imul
add
adc
shrd
xchg
aaa
mov
jge
inc
test
inc
push
xchg
retf
cmp
sbb
sbb
dec
jge
outs
cmps
int
xchg
xlat
mov
adc
push
lahf
cmp
sub
cmps
movs
xchg
aad
inc
cmp
fnop
pop
add
loopne
repz
fsubr
or
dec
int
lock
jle
add
je
(bad)
test
movs
and
jg
mov
mov
dec
out
js
push
xor
jb
cli
cmp
inc
pushf
daa
xlat
jo
jmp
mov
lahf
aaa
call
mov
dec
mov
fs
rcr
repz
mov
mov
sub
mov
dec
xchg
icebp
ja
pushf
add
push
popf
and
pop
(bad)
jle
xchg
retf
ja
sub
std
fsub
sahf
clc
cli
out
das
adc
sbb
add
int
pop
aaa
sub
repnz
sbb
daa
mov
xor
ss
pop
sbb
cmps
pop
mov
add
cmp
and
sbb
mov
div
loope
sti
mov
bound
xchg
dec
test
xchg
sar
push
inc
mov
or
cmp
pop
mov
repz
mov
cdq
enter
outs
or
push
sbb
stos
xor
std
sti
lock
adc
rcl
push
sub
cld
adc
add
sub
(bad)
setb
cmp
pop
ins
adc
(bad)
cmc
arpl
out
aam
sbb
pop
fs
jmp
jmp
pop
mov
or
xchg
adc
lock
mov
popa
out
push
xchg
ins
jge
push
sbb
stos
pop
xor
nop
push
ins
pushf
inc
push
xor
sub
jge
sbb
cmc
sub
mov
push
imul
sbb
cmp
pop
mov
jecxz
int3
push
inc
xchg
into
in
div
pop
cwde
js
dec
fcmovu
sub
ror
pop
xor
jle
mov
ss
ret
xor
enter
pop
sub
add
xor
sbb
iret
fs
mov
push
inc
ja
fwait
movs
or
cmp
test
sub
retf
inc
test
int3
jg
iret
imul
loopne
loopne
sub
(bad)
rcl
movs
add
dec
sbb
mov
add
cmp
cwde
ins
in
mov
(bad)
cld
loope
loopne
pop
mov
or
int3
arpl
and
xor
sbb
mov
punpckhwd
ja
sub
mov
popf
ja
rol
std
rcr
dec
mov
sub
add
push
push
cmp
(bad)
mul
inc
mov
test
push
stc
cmps
stos
mov
mov
adc
les
in
pop
inc
outs
xchg
repz
mov
into
call
popa
ins
inc
sbb
or
mov
(bad)
hlt
data16
shr
arpl
push
cmp
(bad)
cmp
jno
in
sbb
mov
push
cmc
sub
mov
int3
jo
inc
call
xor
ins
mov
or
and
or
or
jl
addr16
jge
xchg
leave
(bad)
mov
test
jnp
xchg
add
pop
jne
xchg
mov
xchg
ret
dec
fnstenv
std
jge
int3
retf
push
sbb
jnp
(bad)
pop
add
mov
add
les
adc
lods
jmp
adc
xor
clc
lods
inc
popa
arpl
push
pop
rol
dec
cld
add
mov
ins
and
dec
mov
push
xchg
add
inc
jae
(bad)
lock
(bad)
and
shl
lods
aas
bound
mov
sbb
or
psubd
or
pop
scas
outs
inc
lea
fnstcw
inc
shl
and
(bad)
adc
push
outs
or
fsub
repz
leave
cmp
mov
push
cwde
out
scas
mov
int3
loopne
adc
push
mov
repz
cmc
fdivr
fst
sub
inc
pop
inc
std
in
test
shr
mov
jp
mov
sbb
dec
add
es
(bad)
loope
sbb
fwait
clc
icebp
aam
sbb
fistp
shl
jmp
into
xchg
push
or
mov
sbb
mov
inc
ins
repnz
pushf
mov
cmps
inc
popa
enter
adc
push
and
adc
data16
push
imul
les
pop
jmp
jmp
jge
add
push
test
dec
cmp
mov
fs
sbb
lea
xchg
jae
mov
ja
mov
loopne
mov
push
(bad)
mov
sbb
push
dec
gs
jl
inc
mov
arpl
and
sbb
enter
hlt
lds
fisubr
add
loopne
sub
push
rol
sub
mov
cmps
cmp
xchg
sbb
test
jmp
mov
fisttp
pop
cmp
gs
xchg
mov
dec
les
cmp
cwde
ss
aaa
lock
fwait
pop
push
inc
sub
or
or
mov
jmp
jecxz
out
fimul
or
xor
jecxz
ret
or
mov
mov
ret
add
stos
xchg
push
mov
rcr
pusha
cmp
shl
(bad)
xlat
and
jmp
not
sti
imul
cli
mov
fs
ja
rcr
jmp
(bad)
loope
cmp
inc
scas
pop
repz
add
ror
arpl
mov
mov
ret
call
mov
fmul
test
xchg
add
or
daa
pop
fldenv
fld
jecxz
jmp
or
out
mov
leave
cmp
pop
leave
push
es
out
and
jb
and
loope
sub
shl
jl
dec
dec
(bad)
push
call
leave
ret
cwde
adc
sub
cwde
lds
cmps
adc
rcr
sbb
aas
mov
push
ret
mov
add
sbb
movs
sti
mov
xor
stc
dec
imul
lahf
sub
sti
in
pop
mov
and
adc
pop
mov
push
push
xor
cdq
icebp
push
inc
push
(bad)
ss
pop
in
sub
dec
je
in
mov
repnz
test
rcl
mov
(bad)
ds
xor
push
adc
dec
mov
clc
mov
lahf
push
fidiv
loope
cmp
fimul
in
jecxz
push
sub
or
pop
xor
lea
cdq
add
adc
ret
sahf
stos
test
sub
scas
mov
mov
mov
test
les
mov
and
inc
add
movs
cmp
mov
inc
(bad)
movs
inc
xor
popa
mul
jne
call
pusha
outs
mov
nop
xor
outs
dec
call
adc
mov
or
adc
and
fstp
sub
and
push
sti
mov
nop
or
(bad)
mov
or
inc
pop
mov
stc
and
mov
jbe
into
and
ja
pop
dec
mov
les
mov
adc
aaa
xor
pop
sbb
mov
fucomi
cmp
jg
(bad)
jp
je
sbb
enter
das
or
(bad)
in
into
repz
sub
adc
pop
and
rol
sub
dec
xor
outs
inc
cmp
enter
xor
lea
or
cmp
fldcw
pushf
xor
movs
fld
or
stc
add
loopne
pop
mov
add
xchg
mov
mov
test
or
stos
mov
mov
adc
popf
pop
loop
xchg
sbb
jp
test
jnp
arpl
out
jnp
je
pushw
mov
and
pop
adc
aad
jo
sub
jae
jbe
or
pop
ds
(bad)
jns
cmp
outs
or
inc
ficom
call
pushf
cmp
les
movs
gs
xchg
sub
iret
mov
fwait
cmp
mov
fcomip
shl
push
sahf
jmp
daa
push
pop
mov
xchg
repz
sub
cli
pop
pop
mov
jbe
mov
sub
xchg
add
jae
or
xchg
cwde
lds
movs
cmp
pop
lahf
or
pop
sar
(bad)
lahf
fisub
dec
repz
xor
push
pushf
sbb
hlt
mov
in
gs
cmp
fcom
adc
mov
test
or
and
mov
cli
ret
ret
fidiv
mov
mov
(bad)
ja
jns
test
fmul
aam
jo
leave
dec
popf
mov
pop
jmp
jne
clc
or
movs
sbb
jno
xchg
repnz
sbb
and
pop
mov
cmp
mov
nop
call
xlat
imul
inc
arpl
(bad)
fwait
adc
les
les
leave
fistp
xor
sbb
pop
clc
lea
adc
inc
ds
adc
call
ss
or
pop
call
or
fmul
push
sar
call
sbb
mov
mov
adc
push
test
sub
cmp
shr
inc
or
nop
test
sub
cmovnp
lahf
xchg
pop
pop
adc
mov
int3
sub
mov
lock
rcr
out
pop
xchg
dec
jb
scas
sub
pushf
das
push
push
inc
inc
and
sub
pop
ins
or
gs
xchg
sbb
cwde
mov
mov
arpl
into
pop
push
aas
sub
gs
mov
in
xor
xchg
(bad)
mov
mov
jmp
and
ja
fwait
push
xchg
mov
fld
adc
ss
out
adc
dec
push
or
sub
mov
cmps
mov
push
push
outs
cmp
adc
push
push
push
xor
int3
test
sbb
xchg
inc
icebp
inc
xchg
jl
movs
lods
mov
xor
mov
daa
movs
out
jl
inc
inc
loope
rcl
(bad)
repz
push
mov
sub
xchg
stos
jmp
mov
xchg
push
imul
repnz
mov
or
ficomp
xchg
ja
xchg
mov
inc
dec
imul
mov
jmp
xor
cdq
xor
test
push
pop
jmp
xchg
mov
mov
je
mov
jbe
std
mov
dec
mov
pop
(bad)
sbb
daa
lock
retf
ficomp
sbb
(bad)
pop
add
fimul
pop
xchg
inc
addr16
jo
push
ror
dec
push
sub
int3
and
sub
out
xor
int
shl
sub
sub
js
fist
test
sbb
add
es
jae
test
jge
jle
leave
mov
xchg
add
mov
cwde
loop
jbe
add
test
out
sub
in
and
dec
or
ja
or
rcl
xchg
retf
fwait
out
ds
push
push
ret
xchg
in
(bad)
(bad)
mov
icebp
aas
sub
pop
hlt
mov
pop
jmp
jecxz
popa
pop
add
cmp
and
add
xor
xor
clc
push
fs
xchg
data16
push
cmp
and
inc
add
cmp
adc
stc
pop
outs
je
leave
add
inc
rcl
cmps
into
test
(bad)
jbe
icebp
and
enter
jge
adc
xchg
in
lds
cmp
(bad)
adc
sbb
ret
out
js
ret
inc
sbb
pop
stos
fs
out
movs
and
jb
xor
or
call
out
pop
(bad)
sub
arpl
xor
dec
xchg
mov
ficom
adc
int3
xchg
pusha
and
push
mov
(bad)
xchg
clc
xchg
frstor
mov
call
sbb
dec
pop
add
ja
into
jo
or
cmp
adc
push
aad
fisubr
lahf
pop
outs
xchg
add
test
(bad)
fimul
and
test
in
gs
mov
fimul
xor
dec
sbb
dec
cmp
inc
pop
call
and
jae
outs
retf
or
pop
xchg
aad
shr
test
dec
(bad)
gs
scas
adc
fwait
ror
cs
(bad)
daa
cmp
mov
fidiv
clc
mov
loopne
xchg
or
xchg
adc
inc
cmp
push
fisub
fmul
sub
(bad)
test
in
lea
test
mov
xor
out
xor
repz
mov
jnp
not
sar
xor
mov
add
les
out
or
dec
dec
jo
mov
xchg
(bad)
jmp
mov
outs
jno
into
scas
(bad)
mov
fcmovb
movs
add
xchg
jbe
or
pop
inc
sbb
mov
pop
add
inc
inc
aas
js
xchg
pop
dec
inc
(bad)
mov
repnz
lahf
nop
fsubr
and
jno
loopne
pop
jge
dec
ss
icebp
jg
or
xchg
out
movs
add
fimul
mov
imul
movs
cmp
xor
add
sub
enter
mov
test
xchg
imul
es
pop
jmp
rcl
fcom
dec
xchg
ror
fwait
ret
(bad)
dec
ja
outs
loop
sti
push
adc
fisttp
mov
and
cmp
out
push
mov
aam
fild
std
sub
lods
(bad)
mov
fnstenv
or
ror
xchg
repz
loope
in
inc
pop
fld
xor
fdivr
mov
pop
lea
add
sub
xchg
adc
push
jno
aam
retf
in
in
nop
xchg
ins
test
sbb
inc
jbe
(bad)
mov
call
add
pushf
ins
call
mov
fisttp
in
ss
js
push
mov
pushf
sbb
out
cmp
pop
xor
xor
sub
mov
pop
jno
xor
push
popf
call
iret
jbe
sbb
jl
stos
in
or
and
cwde
inc
xchg
sbb
jbe
jne
daa
fisttp
and
mov
ins
cwde
dec
gs
(bad)
fisttp
loop
cmp
stos
fsubr
cld
ins
fild
shl
ins
icebp
xchg
scas
add
mov
fild
xlat
cwde
(bad)
jne
in
add
popf
movs
sar
out
sub
xchg
in
ss
nop
shl
out
xchg
push
sub
rcl
stos
nop
mov
adc
into
sub
xchg
fld
and
ret
sub
mov
pop
adc
dec
je
pop
inc
dec
xor
pop
push
or
pop
and
push
ffree
std
js
mov
dec
sbb
dec
sbb
retf
(bad)
sub
adc
cdq
(bad)
out
mov
ror
dec
sub
idiv
in
mov
int
icebp
jnp
jb
jo
add
add
push
fwait
ds
xchg
pop
leave
push
adc
bound
push
mov
(bad)
jns
or
rol
sub
sub
push
inc
dec
clc
add
or
fsub
xor
xor
xchg
test
adc
into
mov
xor
bound
dec
mov
cmp
and
mov
int
inc
and
jne
adc
inc
mov
repz
mov
mov
xchg
aas
or
sbb
dec
push
ret
sub
scas
retf
xlat
movs
cmc
jbe
retf
ja
jnp
cli
sahf
jno
jl
adc
or
push
xlat
shl
sub
ins
shr
and
(bad)
dec
fs
hlt
cmp
ja
xchg
mov
dec
cmp
mov
jae
mov
mov
sbb
lock
dec
mov
sub
int
out
sub
int
iret
mov
imul
cmp
call
xchg
int
pop
inc
push
sti
fistp
inc
dec
mov
jmp
pop
call
or
sahf
cli
rcr
mov
jno
call
mov
or
cli
int
jns
xchg
sub
fstp
data16
(bad)
es
mov
mov
fisubr
mov
jmp
ret
dec
add
pop
ret
cmp
popa
mov
ins
stos
pop
xor
adc
and
inc
sbb
jno
mov
(bad)
imul
xchg
jp
push
mov
push
pop
pop
and
out
cmp
sbb
add
out
fldenv
inc
mov
fnstcw
loope
cmp
clc
sub
lahf
cli
inc
dec
lahf
out
sbb
mov
fs
sahf
retf
and
sbb
gs
aaa
jne
inc
jae
das
enter
xor
xchg
mov
loop
mov
js
hlt
hlt
scas
arpl
clc
bound
xchg
cmp
int3
xor
test
cmp
cmc
and
test
and
or
out
ins
adc
leave
or
stos
(bad)
push
popf
jno
push
mul
leave
mov
sbb
cmc
int
fild
addr16
jbe
jb
stc
push
inc
ja
leave
cmp
ins
jecxz
pop
(bad)
xor
neg
(bad)
push
add
fdivr
leave
data16
lods
add
out
push
cmc
in
loope
outs
mov
test
push
int
ja
mov
xor
pop
adc
mov
loop
xor
mov
cli
je
out
shr
jns
(bad)
cdq
int3
jmp
cld
retf
repz
jp
into
sub
xor
out
test
add
or
fmul
shl
add
and
and
fstp
test
pop
adc
or
or
cmp
jl
pop
xlat
shl
aas
or
mov
in
stos
adc
adc
and
adc
(bad)
and
push
stc
nop
(bad)
mov
fcomp
rol
inc
dec
fcmovnb
mov
out
add
in
test
push
jo
inc
pop
arpl
mov
je
cmps
push
xchg
xor
(bad)
push
mov
mov
add
pop
push
xor
sub
inc
inc
(bad)
pop
sbb
pusha
test
mov
retf
mov
dec
push
pop
gs
fistp
es
adc
lea
xchg
pop
repz
jo
clc
movs
sub
mov
in
sub
xchg
jnp
rcr
cmp
test
jbe
jp
jp
loop
les
hlt
pop
fwait
mov
repnz
in
movntps
xchg
mov
add
or
sbb
pop
cmps
add
out
imul
push
push
add
mov
jp
mul
or
push
sbb
daa
dec
add
dec
pop
popf
pop
in
and
xlat
mov
shl
sub
mov
das
fsub
xor
dec
ficomp
dec
sub
cmc
fnstcw
or
mov
call
xlat
jno
sub
and
xlat
xor
pop
jl
pop
out
mov
pop
ret
call
pop
cmp
mov
test
cli
and
movs
mov
in
sbb
dec
mov
cmp
pop
add
test
lds
add
dec
push
fiadd
imul
lods
sbb
rcl
mov
or
scas
mov
ror
out
icebp
js
icebp
je
mov
ret
xchg
sbb
dec
cmp
lods
push
stos
icebp
push
push
cdq
ret
push
push
cmps
call
dec
ret
daa
iret
out
sub
mov
xor
sbb
mov
dec
xor
mov
pop
or
icebp
add
xchg
repz
and
ret
not
(bad)
inc
mov
popa
cmp
imul
das
jne
sahf
aaa
xlat
xchg
jns
xchg
adc
pop
iret
pusha
pop
sbb
cmp
ficom
imul
inc
inc
lods
and
int
pop
inc
fnstcw
xchg
xlat
out
into
daa
and
xchg
add
or
pop
jmp
cmp
arpl
rcr
jo
sub
popa
popf
js
jle
test
mov
leave
out
loopne
ret
loopne
sahf
dec
fisttp
and
pushf
sti
dec
ret
lahf
or
rcl
int
cmps
push
sbb
and
dec
push
cmc
mov
test
sub
push
push
push
out
xchg
mov
dec
adc
loope
xchg
or
mov
lods
inc
aaa
test
sub
or
(bad)
xchg
in
jmp
mov
mov
push
movs
dec
mov
adc
cs
mov
cmc
rcr
es
jmp
push
mov
int3
and
xchg
add
stos
jge
stos
jmp
jno
aad
popa
xchg
ins
fist
fisub
in
pop
inc
push
mov
pop
sahf
outs
scas
dec
fs
nop
cwde
mov
(bad)
pop
stc
sub
je
push
mov
xchg
adc
das
out
pop
jg
int3
stc
jbe
cmps
and
xor
imul
outs
push
mov
push
leave
dec
pushf
jl
sub
mov
mov
in
lods
outs
je
dec
sbb
scas
add
dec
sub
adc
jle
(bad)
data16
cli
add
cmp
fnstsw
mov
mov
outs
aas
(bad)
mov
ja
jo
imul
and
add
loopne
and
and
xor
test
pop
enter
movaps
lahf
jno
fdivr
mov
push
jno
data16
gs
sbb
dec
cli
add
shl
fst
js
repz
sbb
movs
imul
call
or
push
lods
cwde
ss
pop
sbb
cmp
mov
(bad)
jl
or
mov
jp
mov
xor
mov
pop
add
mov
movs
mov
or
xchg
aad
xor
or
inc
pop
jno
pop
pcmpeqb
sbb
scas
ds
stc
in
mov
and
pop
pop
(bad)
adc
shl
mov
sbb
lahf
pop
xor
inc
ror
inc
and
adc
retf
jecxz
inc
iret
mov
mov
mov
outs
daa
retf
sub
push
ss
mov
xor
or
push
jbe
and
in
aas
inc
(bad)
in
inc
add
adc
cs
mov
and
mov
and
rcl
pushf
cmp
pop
mov
(bad)
iret
div
mov
mov
add
jb
ja
and
aam
jo
lock
and
clc
stos
stos
jno
ret
mov
sbb
sti
mov
inc
int
nop
std
push
cmp
out
add
push
call
or
shl
fidiv
adc
pop
mov
call
add
ins
add
and
cmp
in
dec
sbb
or
add
daa
sbb
push
cmp
pushf
sti
adc
ins
or
in
push
push
cmp
cld
jns
repnz
add
jns
sub
mov
into
out
out
sbb
pop
movs
inc
jns
xstore-rng
cmps
or
pop
loopne
mov
dec
cmp
xchg
jle
iret
out
lods
loop
nop
jle
mov
clc
or
dec
sbb
mov
sbb
add
popa
jmp
xor
adc
pushf
sbb
fwait
add
movs
xor
inc
xchg
jb
push
xor
add
arpl
(bad)
or
cmp
sbb
cmp
jecxz
dec
fst
arpl
jns
out
mov
mov
add
arpl
arpl
test
fimul
xchg
inc
fidiv
jno
mov
mov
mov
sahf
pop
ss
out
xchg
hlt
push
je
js
loope
push
ret
xchg
ins
mov
outs
and
add
out
cmps
fld
push
cld
add
aad
out
push
mov
push
jp
test
test
sbb
or
js
push
xor
arpl
and
ins
div
stc
mov
cmp
rol
addr16
push
out
mov
mov
add
mov
out
xchg
enter
and
sub
mov
jb
call
and
add
dec
in
data16
and
jmp
inc
xor
add
dec
cmps
jae
add
mov
xchg
test
ret
scas
dec
and
adc
push
or
int3
and
repnz
fmul
push
jg
push
jns
iret
push
(bad)
push
inc
add
sbb
mov
std
pop
xchg
shl
jne
xchg
jle
loop
aad
sbb
jp
mov
jbe
leave
mov
ja
(bad)
lods
cmc
mov
stos
jnp
xlat
sbb
jae
ins
jo
outs
push
xchg
push
adc
nop
or
ins
loope
(bad)
int3
sub
out
cmp
aas
cs
inc
fistp
xor
div
jecxz
cli
mov
(bad)
(bad)
pop
aaa
dec
add
in
add
xor
movs
outs
popf
mov
ds
js
inc
rcl
and
ror
pop
inc
jmp
jp
kmovw
das
ss
fs
(bad)
repnz
out
(bad)
call
mov
(bad)
mov
test
push
fidivr
xor
jnp
sub
(bad)
ret
sub
mov
pop
inc
iret
mov
loope
dec
out
shl
sub
in
xlat
fadd
ret
outs
movs
loope
nop
pop
clc
icebp
(bad)
push
xchg
and
push
mov
(bad)
adc
mov
jo
movs
xchg
push
xor
cwde
jae
inc
jmp
push
ror
inc
les
xchg
sbb
add
inc
push
loope
sub
xor
mov
(bad)
pop
push
xor
je
jl
stos
pop
mov
ret
mov
mov
in
outs
push
add
push
stos
aas
ret
daa
dec
and
popf
cmp
aam
pusha
in
inc
jg
loope
stc
aaa
lds
iret
pop
adc
fcom
mov
and
push
pop
enter
enter
repnz
mov
fstp
push
repnz
mov
in
loope
inc
dec
imul
ror
iret
cmps
pop
mov
inc
outs
jno
and
pop
dec
xor
sub
sub
xor
daa
push
xchg
es
ins
adc
mov
jbe
in
stos
arpl
aaa
repnz
scas
frstor
push
js
shr
test
push
and
gs
cwde
pop
or
mov
ror
xchg
daa
neg
unpckhps
bound
rol
dec
jle
dec
hlt
dec
dec
mov
push
test
movs
xchg
les
cs
(bad)
div
cmp
cld
sbb
gs
lods
(bad)
inc
push
push
mov
push
cdq
pop
ret
fbstp
push
aaa
or
xchg
xchg
mov
ret
xchg
leave
jle
imul
pop
mov
sub
idiv
adc
mov
inc
(bad)
fs
adc
popa
xchg
or
or
cwde
pop
jg
imul
add
xchg
mov
mov
into
ds
or
(bad)
xchg
ret
mov
jbe
ret
outs
lahf
dec
das
mov
inc
push
pop
push
inc
idiv
mov
push
push
arpl
adc
popf
sbb
les
or
inc
pop
lahf
mov
dec
add
adc
add
aaa
push
xor
imul
nop
fimul
fcomp
jo
les
call
mov
clc
nop
frstor
leave
iret
add
push
scas
bound
cmp
mov
pop
in
gs
dec
in
outs
dec
popf
inc
pop
inc
not
(bad)
xlat
ror
loopne
fs
in
mov
sbb
xchg
sti
(bad)
retf
sub
das
xor
daa
in
xchg
dec
cmp
jle
push
mov
pop
xchg
loopne
adc
sti
xchg
lock
jb
pop
push
adc
cdq
sbb
push
dec
pushf
ins
in
shr
aaa
xor
cmps
mov
pop
mov
cdq
sub
lds
inc
lahf
cdq
rcr
test
pop
pop
sbb
push
(bad)
cmps
mov
dec
lock
pop
pop
and
add
mov
jle
test
mov
ret
pop
push
cmp
or
cwde
adc
xchg
mov
nop
into
fsubr
xor
add
ret
push
push
mov
ins
xchg
pop
retf
adc
xor
mov
pop
jmp
leave
cmc
and
fstp
sub
into
pop
pushf
add
jnp
mov
mov
cli
xor
mov
cmp
mov
cld
out
push
call
xchg
dec
xchg
(bad)
push
arpl
popa
retf
or
ficom
mov
mov
icebp
mov
(bad)
push
push
xchg
aad
ret
mov
and
sbb
(bad)
mov
in
xor
pop
lahf
and
js
sbb
mov
dec
dec
int
hlt
in
and
cmps
inc
push
mov
add
xor
scas
mov
inc
push
cmps
leave
js
(bad)
xor
pop
inc
sbb
imul
push
fld
add
dec
inc
sub
fdivr
mov
or
cld
fwait
and
sub
jno
mov
iret
into
jae
sub
mov
in
jg
xor
imul
sub
retf
push
call
jg
in
and
leave
inc
sub
inc
mov
xchg
stc
xchg
pop
mov
jg
retf
std
imul
mov
popa
cmp
cmp
mov
pop
addr16
jge
dec
es
aad
sbb
in
adc
shl
aaa
sub
mov
pop
xor
add
retf
sbb
popf
fnstenv
inc
mov
add
push
ror
icebp
push
sbb
in
cmp
jle
xchg
lahf
adc
enter
sub
fsubr
(bad)
jbe
push
sub
jmp
mov
mov
pop
iret
pop
mov
mov
xor
mov
mov
cmp
movs
xor
stos
outs
das
rol
aaa
out
fs
pusha
push
out
jg
add
adc
lahf
pop
sub
fwait
and
stos
sahf
(bad)
in
enter
std
mov
jne
xchg
sahf
jg
dec
test
lods
adc
retf
call
movs
xor
xchg
sti
cmc
mov
retf
jnp
add
xor
cmp
pop
or
test
sahf
ins
cmc
cmp
lahf
cmps
lods
push
push
movs
lods
push
(bad)
xor
jmp
inc
dec
mov
add
(bad)
fcom
lods
cs
stos
adc
mov
pop
add
pusha
aad
shr
fwait
and
xchg
in
cmp
push
lahf
mov
pop
jp
leave
inc
xchg
adc
sbb
retf
sbb
addr16
repnz
mov
xor
mov
mov
cdq
mov
add
imul
std
shl
sub
mov
mov
mov
mov
clc
(bad)
or
jge
xor
pop
(bad)
and
or
movs
cs
retf
call
retf
retf
dec
inc
cmps
fimul
test
aad
jge
mov
xchg
(bad)
adc
push
(bad)
xor
sub
jmp
xchg
add
sahf
xchg
fwait
js
fld
daa
sbb
cmp
je
jmp
not
push
mov
repz
jmp
jmp
sbb
mov
xor
sahf
add
sub
xchg
test
mov
add
rcr
add
pop
pop
leave
push
hlt
mov
stos
inc
cwde
pop
es
out
pop
cmps
stos
mov
push
loopne
loopne
add
out
mov
push
sbb
in
(bad)
mov
cli
and
loope
jae
repnz
or
inc
test
sbb
punpckhdq
adc
adc
mov
or
fdivr
sbb
sbb
(bad)
mov
inc
in
outs
movs
clc
xor
call
or
stos
mov
call
pop
rol
mov
pop
test
mov
sbb
xor
shl
or
add
jp
addr16
loopne
adc
and
push
stos
and
shl
fist
movs
and
cmps
pop
jp
push
mov
jecxz
mov
iret
xor
mov
jmp
adc
das
jno
jle
xlat
sbb
mov
xor
ret
mov
add
lahf
sub
(bad)
push
ror
aam
inc
in
rcr
lahf
mov
repnz
repz
aas
sahf
iret
cdq
lahf
call
mov
cmp
fs
ds
xchg
leave
inc
(bad)
mov
xlat
mov
jo
repz
xchg
div
mov
fwait
test
pop
lock
sahf
and
bndldx
sbb
lahf
cmc
lahf
pop
lods
fist
in
pop
xchg
sub
mov
std
jecxz
sub
les
mov
daa
mov
cmps
xchg
dec
add
and
gs
fisttp
inc
(bad)
cli
mov
fimul
jmp
jno
not
pop
mov
rol
adc
call
(bad)
outs
or
jbe
inc
jge
cli
jle
mov
mov
fild
mov
jmp
ins
ret
add
test
inc
push
repz
add
xchg
jnp
es
mov
push
rep
cmp
pop
push
mov
xor
push
xor
xor
retf
popf
(bad)
cmp
inc
adc
lods
push
sbb
icebp
mov
adc
leave
jns
mov
jmp
jne
pop
icebp
loope
imul
rcr
or
daa
dec
fcomip
adc
inc
jg
dec
hlt
scas
icebp
aaa
(bad)
mov
adc
pop
mov
pop
sbb
aam
inc
pop
and
sahf
scas
arpl
or
adc
sahf
ds
xchg
data16
frstor
bnd
add
mov
leave
xchg
inc
mov
and
out
js
pop
adc
fadd
xlat
cmps
push
rcl
fisub
hlt
lahf
aaa
inc
pop
cmp
outs
repz
cld
mov
enter
sub
push
lds
call
pop
inc
test
sub
ds
rcl
sub
std
lods
cmp
xchg
lock
cmp
mul
pop
add
mov
xlat
xor
and
pop
and
sbb
push
cmp
dec
sar
addr16
sahf
(bad)
std
repz
cs
and
test
adc
jae
ins
xchg
jmp
cdq
mov
aaa
or
int
(bad)
rcl
lods
sub
cdq
or
sub
loop
xchg
mov
xor
cmp
or
repz
pop
cs
mov
mov
add
mov
int3
mov
add
mov
jb
jnp
mov
or
and
mov
xlat
lds
mov
xchg
adc
mov
ds
fcom
loope
cwde
neg
push
not
pushf
fadd
sti
add
xor
or
push
mov
je
sbb
sbb
imul
int
movs
stc
mov
shl
call
movs
push
sbb
mov
call
in
mov
adc
push
jmp
iret
and
bound
dec
inc
int
adc
xchg
mov
or
jne
jle
jmp
clc
shl
add
js
pushf
and
sti
cmp
mov
shr
and
(bad)
int
cmp
xor
cmps
lods
cs
sti
gs
xchg
loope
ins
mov
movs
retf
pop
ins
push
mov
test
es
clc
jns
in
or
push
gs
dec
idiv
jb
pop
arpl
xchg
cld
mov
or
ror
cmp
inc
and
rcr
dec
mov
out
rcl
jbe
push
(bad)
fild
pop
fcomp
dec
movs
adc
iret
xchg
dec
jecxz
xchg
sar
sbb
(bad)
ret
jle
mov
leave
xchg
cmp
push
movs
dec
push
jno
ss
pop
push
in
xchg
mov
mov
cmps
inc
sbb
test
jnp
shl
mov
stos
and
inc
dec
mov
fld
icebp
add
push
fs
scas
jle
call
stos
add
cmp
sti
add
lods
pushf
cdq
inc
(bad)
dec
cmp
not
push
jg
sbb
stos
jbe
aas
mov
push
push
mov
mov
jp
and
xchg
int
sar
jle
push
sub
dec
inc
sbb
popa
daa
ret
jnp
ficom
xor
(bad)
cli
sbb
and
mov
inc
mov
in
(bad)
pop
or
sahf
das
mov
jbe
xchg
aas
(bad)
add
stos
sbb
xlat
jl
sbb
add
inc
fcom
dec
xchg
push
mov
lds
xchg
ins
or
cld
loope
push
out
(bad)
jge
sbb
lods
adc
pop
mov
cmps
cmp
out
mul
and
add
icebp
mov
mov
mov
mov
mov
pop
imul
cmc
add
push
or
jecxz
addr16
sqrtps
adc
mov
cli
or
outs
jno
int3
iret
mov
jp
push
pop
ins
jne
jge
push
aaa
nop
add
icebp
or
dec
int
push
cwde
mov
adc
movs
pop
xor
pcmpgtb
cdq
cmp
gs
mov
xchg
mov
push
lods
xchg
lds
pop
pop
push
dec
loop
mov
sub
icebp
cmp
jnp
cdq
mov
dec
push
mov
imul
mov
pusha
or
aaa
xor
mov
push
pop
cs
xchg
aam
or
retf
sub
sbb
cmp
mov
sbb
sub
mov
inc
mov
xor
jbe
call
outs
and
js
cmp
mov
jb
hlt
leave
xchg
das
repnz
movs
dec
es
dec
push
inc
arpl
add
mov
add
add
shl
leave
ret
jle
or
out
sbb
and
xchg
pop
and
push
cwde
stc
clc
dec
popa
add
dec
and
and
cmp
or
push
call
ins
and
xchg
outs
pop
jbe
jmp
ins
xor
int3
fmul
fld
icebp
xchg
out
cwde
mov
and
xchg
inc
fsubr
xchg
or
test
dec
cmps
or
pushf
jnp
cmp
(bad)
test
sbb
add
xchg
mov
xchg
xor
pminsw
inc
pop
xchg
xchg
imul
loopne
mov
dec
mov
xchg
test
lods
(bad)
jo
push
(bad)
fcom
jnp
rcr
pop
retf
pop
loopne
mov
div
cmp
sbb
inc
fincstp
sbb
mov
sub
xor
outs
push
das
les
out
outs
jmp
adc
inc
scas
aam
nop
dec
jno
jo
push
and
repz
mov
xor
lea
sub
(bad)
sub
pop
cld
xlat
xor
enter
and
cmp
cmp
lahf
icebp
dec
cli
into
mov
push
ja
pop
jp
repz
xchg
jecxz
loop
jnp
ins
nop
push
sbb
mov
sbb
cmp
pop
jmp
mov
jmp
js
mov
mov
mov
push
int3
int
sbb
jmp
std
retf
enter
and
aam
iret
add
mov
adc
mov
outs
(bad)
jp
adc
aas
sub
pop
xor
mov
pushf
pop
out
push
xchg
mov
cmp
mov
ja
aad
or
fldenv
in
jnp
fdivr
fwait
push
fist
push
pop
adc
fs
fcomp
pusha
loopne
outs
add
dec
out
repnz
inc
pop
push
out
mov
fwait
aas
mov
xor
mov
(bad)
test
push
xchg
mov
mov
fdiv
mov
jp
xor
mov
push
xchg
les
stos
inc
jmp
ins
xchg
pop
xor
xchg
js
inc
mov
inc
xor
dec
adc
sbb
pushf
cdq
pop
cmovge
leave
retf
jle
iret
inc
stos
outs
add
mov
pop
call
xchg
dec
fwait
inc
pop
inc
xor
inc
xor
adc
shr
sbb
sbb
outs
dec
or
and
test
pop
(bad)
shl
or
jae
fcomp
mov
int
fistp
lods
dec
das
fsubr
sar
dec
ret
inc
mov
xor
mov
or
add
push
or
pop
in
movs
add
sti
movs
fstp
movs
sub
imul
bound
xchg
xchg
popf
and
xor
pushf
mov
lahf
arpl
cli
jmp
sub
xor
cmp
push
loope
icebp
pop
xor
mov
push
int
push
xchg
sub
pop
pop
(bad)
out
test
adc
or
into
rcl
mov
aas
xchg
fstp
bound
cmc
xchg
xlat
ins
aam
sbb
mov
adc
(bad)
and
pop
cmps
pop
cmps
fstp
mov
dec
inc
lea
pop
xor
pop
sbb
and
mov
jl
xchg
stc
mov
xor
push
add
pop
push
ss
sar
addr16
test
mov
cmps
in
cli
ds
sbb
sbb
cmp
push
shl
rcr
and
inc
sahf
dec
pusha
ja
xor
adc
(bad)
aaa
and
call
mov
int
fwait
stc
sbb
cmp
jnp
in
inc
sbb
pop
fstp
mov
addr16
sbb
clc
out
and
inc
scas
push
in
jg
cmps
test
xchg
xchg
(bad)
add
xchg
int
bound
call
or
adc
push
xchg
(bad)
adc
out
fadd
out
aas
push
sub
and
stos
stos
out
cmp
xchg
test
pop
add
(bad)
pop
sbb
shr
lods
pop
sbb
mov
pop
(bad)
popf
jg
loopne
xchg
and
xor
push
jmp
mov
adc
sahf
cmps
pextrw
mov
xor
loope
ds
jae
mov
push
jecxz
mov
aaa
fcom
frstor
mov
push
and
gs
mov
mov
(bad)
dec
popa
(bad)
int
mov
sbb
sbb
and
mov
pop
fnsave
jecxz
dec
ret
dec
rcr
fstp
lock
pushf
out
dec
dec
add
jp
dec
mov
dec
mov
and
cmp
out
mov
pop
add
cmp
stc
sub
mov
call
div
mov
mov
mov
fidiv
sahf
in
test
push
xchg
or
or
pop
fild
aas
mov
or
popa
adc
sub
fnstcw
pop
aad
aad
push
(bad)
cld
rol
push
cmp
repnz
add
mov
pop
jo
dec
das
push
arpl
mul
adc
add
dec
(bad)
mov
jmp
mov
jo
or
inc
ss
out
pusha
sbb
popf
sub
mov
aad
cdq
xchg
rol
jmp
push
sub
into
mov
push
mov
rcl
lods
xchg
add
mov
ja
jns
sub
sbb
push
pop
and
cmp
pop
jecxz
mov
pop
call
in
push
sbb
ins
fs
push
pop
in
xor
xchg
mov
outs
xchg
data16
aad
test
rcl
inc
cmp
cmp
inc
loop
aaa
sub
(bad)
and
cmp
jae
cmp
push
fnstsw
pop
xor
dec
or
and
imul
daa
stos
xchg
push
pop
push
xchg
or
push
test
sbb
fdivrp
mov
(bad)
aas
aaa
pusha
and
xchg
(bad)
jmp
inc
rol
outs
sti
push
xchg
xchg
fisub
addr16
mov
xor
xchg
dec
sbb
xor
arpl
leave
push
pop
(bad)
loope
out
cmp
lods
aad
pop
push
xor
push
(bad)
pop
xor
jae
jb
xor
in
or
pop
xchg
daa
fsub
dec
push
xor
adc
loop
and
nop
jge
adc
cli
sub
add
test
cmp
add
cmc
or
fld
push
pop
outs
sub
int
and
cmp
and
sbb
btr
lods
pop
lock
iret
pop
push
(bad)
call
jecxz
mov
pmaxsw
mov
sbb
cwde
mov
xchg
movs
or
xlat
icebp
pop
cld
fdivr
push
cwde
jp
ss
sbb
push
outs
jmp
cmps
mov
aaa
jo
mov
aam
gs
push
stos
xchg
push
cmps
cmp
cwde
or
xor
push
mov
mov
shl
add
test
daa
ds
cmc
dec
imul
and
scas
mul
leavew
push
out
repz
aas
dec
jnp
mov
pop
scas
inc
clc
xor
xchg
lds
add
jae
or
jbe
mov
mov
fadd
mov
out
cmp
ins
(bad)
(bad)
shr
mov
in
sub
cld
imul
push
mov
outs
dec
out
not
mov
loopne
mov
icebp
pop
push
movs
push
or
ja
xchg
pusha
push
jg
xor
lods
dec
and
push
and
(bad)
leave
in
xchg
mov
loope
jg
jg
xchg
mov
gs
fs
jno
js
test
repnz
nop
pusha
addr16
aaa
push
adc
sub
push
dec
lods
out
xor
movs
repnz
inc
dec
or
push
jae
in
mov
jmp
fsubp
sub
sbb
addr16
jg
cmp
sbb
cld
push
cmp
push
push
xchg
mov
push
add
aad
les
test
test
aad
pop
lock
lods
xchg
push
push
add
inc
jo
xchg
ror
and
cs
cmp
adc
iret
pop
sub
xchg
arpl
fs
xchg
and
sbb
mov
loop
jne
add
addr16
mov
inc
jecxz
sub
cmc
pop
stos
xor
mov
xchg
pop
cli
sub
les
add
or
push
dec
cmps
arpl
repz
(bad)
xor
xor
dec
ret
iret
push
cmp
enter
aam
mov
lds
daa
inc
lods
mov
mov
add
push
stos
cmp
pop
jnp
(bad)
in
jmp
jne
test
sti
xchg
jo
iret
test
stos
or
pop
mov
fild
pop
cmp
jb
xor
mov
stc
ds
mov
jbe
jle
stc
mov
mov
xchg
lods
outs
scas
in
lahf
nop
hlt
jno
pop
dec
push
jns
pusha
js
aaa
dec
(bad)
idiv
push
and
(bad)
jl
and
les
adc
push
xchg
imul
jmp
mov
add
clc
fisttp
popf
lods
int3
les
movs
adc
pop
adc
(bad)
fisub
adc
mov
retf
sbb
iret
pushf
js
cmp
jmp
ret
cmp
adc
sbb
fnstcw
retf
ficomp
gs
lea
mov
push
(bad)
popf
int3
out
jmp
adc
mov
pushf
retf
mov
xchg
mov
test
cwde
arpl
inc
in
mov
and
mov
sub
mov
icebp
cmp
clc
add
into
or
pop
add
out
xchg
mov
push
sbb
mov
ror
mov
xchg
sahf
iret
xor
retf
xchg
push
arpl
push
in
sbb
mov
mov
mov
dec
icebp
iret
dec
sub
(bad)
xchg
sub
scas
jp
xchg
inc
push
movzx
dec
pop
pushf
pop
iret
mov
cmp
jns
mov
(bad)
hlt
(bad)
outs
jmp
add
pop
dec
mov
xchg
inc
jb
jmp
push
cdq
sub
sbb
adc
(bad)
popa
or
test
jb
ds
jmp
dec
dec
mov
in
sbb
jmp
out
jmp
test
add
dec
cmps
daa
push
aaa
mov
mov
icebp
cmps
in
cmp
inc
repz
pop
mov
popa
cmp
loope
mov
jmp
xchg
pusha
xor
xor
stc
bound
clc
jmp
pop
pop
ror
sar
mov
outs
adc
and
dec
jmp
imul
jns
sbb
out
(bad)
ds
aaa
adc
add
inc
imul
xchg
or
imul
xchg
cdq
xchg
pusha
push
cmp
add
aaa
ss
test
or
dec
add
test
fcom
push
fild
arpl
aad
push
lock
(bad)
mov
add
pop
inc
adc
jp
jo
mov
test
mov
in
adc
inc
cli
inc
pop
mov
nop
add
ss
ror
(bad)
cmps
and
mov
cmp
mul
xor
in
(bad)
das
rol
retf
outs
add
dec
pop
sbb
push
mov
push
jp
sub
mov
inc
or
inc
daa
retf
stos
loope
test
int
adc
jl
addr16
fimul
xchg
sub
retf
mov
fbstp
and
call
out
pop
mov
pop
in
call
sti
sti
jecxz
push
retf
aaa
enter
sar
ja
test
add
fwait
dec
inc
inc
xlat
enter
xchg
cmp
cs
repnz
sbb
adc
pop
cli
dec
and
adc
and
and
test
pop
popw
out
mov
adc
inc
or
pop
inc
pop
push
push
and
clc
mov
shr
mov
jecxz
dec
add
cwde
add
mov
jg
in
dec
mov
xor
jmp
mov
je
cmp
retf
loopne
sbb
fucomp
addr16
sbb
div
xor
outs
inc
cmp
fst
daa
push
lds
jmp
mov
int3
cmp
inc
mov
adc
(bad)
outs
out
js
mov
push
cwde
loopne
ret
scas
into
arpl
lahf
jle
pop
mov
pop
jns
pusha
jo
(bad)
mov
imul
shl
mov
sbb
dec
xor
(bad)
sbb
xchg
inc
push
cld
rcr
sub
pop
sbb
aad
pop
sub
(bad)
out
dec
aad
aam
push
(bad)
sub
icebp
fwait
call
adc
fnsave
popa
push
xor
pop
xor
inc
mov
xor
push
xor
push
test
ja
mov
jno
lahf
pushf
addr16
fbstp
popa
shl
lds
mov
mov
mov
sub
mov
add
xchg
and
mov
xchg
mov
std
sti
mov
xchg
push
mov
cmps
mov
inc
scas
sbb
jl
and
adc
mov
stos
mov
neg
dec
dec
cmp
xor
movs
mov
cmp
mov
movs
sbb
adc
hlt
scas
sbb
inc
cmp
fsub
xchg
add
jmp
xor
xchg
jno
jl
test
clc
inc
or
jp
mov
push
mov
push
dec
sahf
mov
adc
in
mov
jns
push
push
mov
mov
daa
aam
lods
cwde
xchg
fld
scas
inc
push
sub
adc
in
cwde
pushf
cmp
dec
idiv
xchg
in
outs
scas
push
dec
ds
add
mov
sub
mul
sbb
pop
bnd
test
dec
data16
and
jge
ficom
gs
outs
xchg
add
or
icebp
in
mov
imul
add
mov
call
xor
adc
loope
push
mov
xchg
imul
mov
(bad)
neg
mov
pusha
inc
mov
fst
pop
mov
cmp
fsubr
add
xchg
mov
dec
xor
int3
sub
jo
data16
dec
add
mov
cwde
mov
fmul
stos
scas
cmps
sub
movs
cmp
pop
mov
jg
push
xchg
test
xchg
cmp
mov
in
sar
imul
mov
mov
ficomp
bound
jbe
lods
ret
push
jno
lock
jbe
call
inc
adc
mov
or
rol
add
push
call
outs
inc
dec
xchg
sub
fdiv
mov
out
enter
imul
jno
sar
scas
dec
in
jnp
cmp
mov
push
pop
xchg
pusha
scas
jne
fild
jmp
dec
scas
sub
sbb
movs
mov
xor
bswap
jns
mov
movs
in
aas
rcl
std
jp
add
stos
jg
mov
dec
popa
pop
enter
lock
(bad)
out
fst
xchg
imul
jg
stos
ss
in
pop
jo
aad
cld
ss
push
(bad)
test
lods
(bad)
shr
push
mov
int3
(bad)
xor
sbb
ins
or
jbe
fmul
or
lea
sbb
fwait
pop
adc
scas
xchg
mov
cmp
push
xor
div
dec
jno
and
nop
push
into
adc
mov
jae
xor
int
jae
sub
dec
fcomip
aas
cli
inc
sti
sbb
and
cmc
cmp
ret
xchg
pop
das
xor
jl
ret
and
sub
stc
and
xor
(bad)
inc
fs
test
sti
shl
ficom
sahf
cmp
cmps
mov
out
lds
push
jle
aas
push
or
repnz
(bad)
sbb
pop
mov
test
hlt
and
pop
pop
dec
xchg
add
mov
jmp
ds
pop
ins
mov
rcl
lods
in
xor
cmc
popf
sbb
cmp
mov
inc
xor
jmp
push
sub
xchg
fnstcw
in
jbe
mov
loope
pop
jl
outs
add
and
dec
int3
mov
cmc
mov
ins
mov
ins
test
aam
(bad)
pop
(bad)
scas
retf
(bad)
dec
jmp
mov
cmp
pop
das
in
push
mov
cs
cmp
mov
or
aam
push
retf
std
dec
mov
xchg
xchg
push
adc
xchg
ficom
pop
ins
pop
inc
es
fistp
jl
hlt
and
iret
sti
cmp
pop
adc
push
push
ret
push
jno
mov
and
idiv
sub
mov
(bad)
and
ret
pop
inc
addr16
(bad)
rcl
jp
popf
es
lock
cmp
mov
dec
jno
jge
ins
or
stos
imul
cdq
test
scas
mov
push
mov
xor
push
call
pop
fdivr
sbb
icebp
cmp
push
out
std
and
add
mov
mov
jne
pop
dec
push
push
push
xchg
aam
out
add
mov
cmp
fistp
xor
movs
sub
outs
pop
sub
sbb
fldcw
add
jmp
mov
ficomp
lds
dec
and
sahf
aaa
es
jb
xlat
cmc
jl
stc
push
fmul
lock
jnp
jmp
jecxz
push
push
push
mov
dec
rcl
cwde
in
xlat
imul
fcompp
es
(bad)
call
psrlq
fcmovb
pop
(bad)
jmp
adc
inc
sti
push
pop
cli
and
adc
lahf
nop
xchg
push
jns
mov
jmp
add
cli
aaa
push
sub
pop
ret
xchg
loope
xor
jmp
add
test
neg
mov
call
and
adc
fsub
dec
imul
out
ficom
outs
xor
fidiv
mov
jnp
push
cmp
fdivr
mov
xlat
scas
out
mov
pop
and
shl
ror
scas
sub
scas
bound
add
mov
xor
push
and
inc
dec
(bad)
aas
xchg
je
mov
test
inc
loopne
inc
push
pop
(bad)
cmp
cmp
and
mov
and
ins
pop
in
fst
mov
mov
add
mov
cwde
ins
jb
stos
lea
enter
jbe
ret
(bad)
cli
jmp
int
jg
iret
loope
push
leave
cmps
(bad)
cmp
leave
mov
(bad)
jl
adc
push
scas
movs
cmp
outs
push
out
fiadd
mov
inc
push
hlt
push
stos
xor
pusha
imul
mov
cmp
clc
int
cdq
add
jmp
call
push
icebp
aaa
adc
and
xchg
cmps
mov
xor
stos
cmp
push
cli
and
dec
ror
cli
mov
pop
arpl
retf
gs
push
xchg
push
add
push
shr
xor
test
fs
arpl
pop
es
test
xor
xor
xor
sti
inc
mov
fstp
inc
(bad)
sbb
test
hlt
cmp
fs
inc
mov
xchg
mov
mov
jb
out
jnp
mov
int
or
xor
in
xchg
lock
cmp
ss
xchg
(bad)
add
out
pop
dec
push
sbb
jecxz
sub
icebp
push
js
pop
mov
in
mov
in
retf
push
jne
cmp
cmp
push
ficom
mov
sub
cli
jle
mov
pop
cs
push
movs
scas
shr
in
mov
cmps
loop
repnz
mov
les
push
cmp
sahf
(bad)
es
icebp
mov
mov
mov
stc
xchg
repz
mov
mov
sbb
(bad)
and
dec
(bad)
cmp
xor
cmps
mov
xor
pop
movs
mov
mov
add
dec
pop
adc
outs
stos
add
fsubr
mov
xchg
scas
std
xchg
or
jecxz
sub
cwde
test
and
pop
lds
mov
xchg
jae
and
sub
adc
mov
ror
xchg
lahf
je
inc
cmps
push
push
cs
and
jle
mov
xor
bound
out
sbb
movs
inc
into
popa
jmp
cmps
jecxz
adc
jecxz
dec
pop
sbb
clc
adc
fisub
pop
sub
out
dec
cmp
dec
popa
dec
xchg
out
aaa
loope
mov
inc
pop
rcr
outs
inc
inc
hlt
mov
cmp
inc
movs
xchg
rcr
cli
push
jo
sub
mov
dec
inc
inc
out
jb
inc
mov
fs
and
jl
inc
pop
add
lds
data16
push
lds
das
ror
sub
test
int
jo
push
cwde
push
out
repz
jae
jae
xchg
gs
push
jbe
jge
cmp
pop
call
test
movs
hlt
cmps
cs
(bad)
mov
mov
push
(bad)
into
jp
les
and
imul
fisubr
xchg
xor
sub
xor
out
test
xchg
les
pop
add
push
or
loope
mov
cwde
cmp
cmps
mov
sbb
movs
cmp
mov
xchg
add
cmc
mov
shl
inc
test
pop
and
xchg
(bad)
int3
add
call
scas
mov
mov
and
xchg
popa
dec
cmp
std
jne
mov
fistp
or
jl
out
inc
cmp
jle
(bad)
xor
test
popf
test
or
push
cwde
inc
cmp
mov
push
aam
lahf
jae
pop
pop
inc
jns
sbb
(bad)
mov
dec
(bad)
mov
mov
(bad)
jnp
je
icebp
cdq
inc
mov
ds
sar
jb
or
mov
inc
aad
or
in
mov
cmps
fst
mov
shl
loop
outs
inc
add
ins
js
cwde
pushf
pop
es
inc
loopne
sbb
clc
inc
jnp
imul
fucomi
cmp
rol
cmp
fwait
lahf
jmp
into
ss
mov
xchg
div
fdiv
pop
mov
es
test
sbb
ret
shr
cs
mov
fs
scas
xchg
jmp
pop
sbb
push
shr
stc
jo
fdivr
or
nop
mov
jle
mov
in
(bad)
movs
arpl
pushf
pop
adc
not
ss
xor
sub
gs
seta
movs
sub
rcl
popa
sub
jg
fstp
test
add
stos
jmp
outs
cmp
add
(bad)
xor
or
cmps
ror
or
mov
shr
adc
pop
jle
fcomip
xor
inc
cmc
sbb
std
cmps
inc
xchg
rcr
mov
xchg
jp
in
addr16
dec
(bad)
pop
iret
neg
sub
movs
popf
xchg
mov
into
jnp
inc
jne
xor
out
push
push
xor
das
jno
cmp
pop
push
ror
loop
mov
pop
sbb
mov
in
cmc
cmp
or
and
jg
lock
neg
jge
mov
pop
cmp
mov
dec
push
fstp
pop
jno
mov
xor
jne
loop
(bad)
xchg
call
and
or
mov
je
jmp
test
adc
pop
add
jp
in
sbb
push
mov
bound
movs
push
out
sbb
das
aaa
add
loope
dec
test
pop
adc
in
push
fdiv
in
pop
fmul
out
cmps
js
add
mov
arpl
pop
loopne
nop
and
std
and
pop
loope
dec
mov
inc
xor
sub
rol
pop
mov
aam
daa
pop
iret
sahf
rcr
sbb
cli
popw
repz
leave
pop
mov
jmp
lea
adc
or
ss
bound
retf
cdq
lock
cwde
(bad)
cmp
xchg
mov
jp
jo
pop
sub
cmps
push
pop
in
pop
lods
ins
(bad)
ins
sbb
mov
loopne
mov
push
jmp
jae
jnp
stos
mov
imul
sub
mov
and
mov
loope
jmp
les
mov
jmp
nop
inc
mov
sahf
xchg
xor
cmp
out
sub
adc
ret
call
xor
push
jge
test
mov
adc
ja
cmp
test
push
rcl
xchg
mov
hlt
jbe
or
cmp
dec
adc
xor
inc
sbb
cmp
and
cld
pop
dec
icebp
jb
sub
test
xlat
(bad)
or
push
sbb
cmp
clc
add
cmp
call
data16
(bad)
mul
lods
sbb
xchg
jne
xlat
pusha
in
popf
mov
inc
mov
pusha
inc
adc
inc
mov
and
icebp
inc
iret
push
call
mov
jle
inc
xchg
inc
inc
add
cmp
mov
fidiv
pop
cmp
pop
bound
xor
repz
lods
cmp
add
daa
das
and
inc
jns
cld
xchg
fldcw
push
mov
sar
retf
fadd
mov
nop
adc
adc
ror
lock
push
mov
cmps
add
nop
and
xchg
loope
pop
dec
mov
xor
retf
cmp
sti
cmp
push
xchg
pop
fiadd
in
test
inc
adc
cmp
repz
fmulp
push
xor
inc
ror
or
xchg
arpl
jnp
std
iret
stos
cmp
pop
sub
add
dec
push
cmp
iret
sbb
pushf
scas
lock
jecxz
mov
pop
xor
xor
outs
mov
jle
lods
mov
pop
nop
in
rol
mov
dec
adc
sub
fs
and
jns
xor
dec
or
aaa
and
aaa
jg
mov
cmp
cmp
repz
imul
jle
fisttp
xchg
or
pushf
mov
js
(bad)
outs
daa
add
mov
jge
loope
js
push
fst
sbb
dec
inc
xor
fmulp
mov
ins
test
stos
lea
data16
hlt
pop
sbb
(bad)
mov
pop
ror
xor
xlat
mov
add
sub
leave
jnp
cs
mov
jo
cs
pop
fadd
pop
xchg
sub
sar
lahf
pop
(bad)
pushf
jne
sbb
cld
sbb
cmps
adc
cs
mov
inc
(bad)
cld
sahf
rcr
mov
(bad)
cmp
bound
push
call
(bad)
stc
jge
lock
jns
(bad)
dec
pop
test
cmp
cdq
jmp
push
in
enter
loop
adc
clc
pop
fst
dec
div
(bad)
push
lock
in
(bad)
mov
dec
jns
or
and
mov
fdiv
dec
sub
mov
dec
sub
in
mov
xchg
inc
mov
mov
lea
stos
lods
ins
mov
je
daa
jecxz
or
jno
mov
xor
mov
sub
inc
xchg
cmp
out
test
jle
mov
(bad)
fs
mov
ds
mov
repz
mov
test
daa
sbb
jne
scas
mov
addr16
out
cmc
sbb
cmp
imul
add
jl
mov
fst
cmp
icebp
cli
ror
into
inc
cmp
or
lock
in
and
ss
and
frstor
int3
add
fdivp
in
neg
pop
retf
jnp
sub
xchg
xchg
mov
xor
cmp
outs
fnstcw
add
xchg
sahf
dec
dec
loopne
fild
rcr
shl
mov
hlt
mov
jmp
xchg
dec
stos
sbb
fst
leave
test
(bad)
mov
dec
sub
pop
jg
cmp
jecxz
xchg
mov
xchg
std
add
stos
leave
(bad)
mov
in
or
rcr
lea
stc
lds
xchg
xchg
jo
clc
fsubr
lods
out
jecxz
jnp
jg
test
call
pushf
dec
mov
stc
cmp
inc
xchg
sbb
mov
movs
movs
add
std
xchg
dec
imul
mov
enter
lahf
aas
mov
test
into
pop
stos
push
out
jmp
int3
test
cwde
jp
sbb
jae
pop
pop
mov
mov
aaa
pushf
jl
pop
and
aam
inc
mov
mov
scas
inc
jge
mov
pop
sbb
push
push
push
push
scas
fisttp
(bad)
(bad)
test
in
and
xchg
mul
shl
sub
out
test
cmp
fs
scas
sahf
sub
mov
data16
(bad)
pop
(bad)
sbb
xchg
mov
mov
outs
icebp
cmps
mov
dec
mov
inc
xor
cli
mov
call
(bad)
xor
js
mov
aaa
cdq
aad
les
xlat
xor
push
or
mov
xlat
bound
mov
cdq
imul
cdq
and
mov
xchg
or
mov
push
mov
call
(bad)
sub
(bad)
xchg
push
into
inc
push
test
mov
cmp
repnz
jnp
jmp
pushf
es
or
lea
movs
loop
int
inc
cwde
scas
mov
xchg
or
in
add
dec
cld
xchg
xchg
push
cdq
gs
mov
push
push
shl
adc
mov
jb
inc
sbb
sbb
dec
mov
in
les
add
inc
lds
std
or
pop
add
in
and
ds
je
lods
adc
mov
adc
or
ins
addr16
pop
movs
mov
and
add
adc
fmul
popf
aaa
mov
xchg
retf
adc
rol
mov
enter
mov
clc
adc
pop
cmp
inc
ficom
cmp
sbb
or
xchg
aad
xchg
popf
jnp
movnti
lock
push
sub
pop
cmc
or
pop
pushf
fstp
imul
inc
xor
repz
push
(bad)
js
retf
pop
add
mov
frstor
sub
dec
dec
add
enter
test
sub
mov
add
pop
loop
and
loope
xchg
pop
not
jnp
xchg
inc
jle
scas
cmc
cmp
fwait
dec
arpl
dec
in
ret
sub
je
add
das
mov
inc
scas
jp
and
xor
loop
add
or
repz
inc
enter
mov
inc
(bad)
ficom
sbb
sub
(bad)
add
push
outs
mov
hlt
test
iret
push
loope
jp
nop
add
jo
xchg
xlat
test
jno
sbb
stos
push
mov
repz
pop
dec
jnp
adc
popa
pop
sub
scas
test
aaa
cmp
lea
rcr
test
sub
push
push
aas
aam
add
dec
dec
fild
int3
ret
out
mov
push
cs
movs
sahf
dec
inc
push
daa
popa
cmc
push
scas
popa
mov
jnp
in
and
dec
stos
sar
scas
mov
add
adc
sub
enter
pop
rol
cld
das
xor
jl
or
push
mov
push
ret
inc
sbb
mov
icebp
das
stc
dec
nop
popa
pusha
pop
push
icebp
stos
push
lahf
icebp
dec
or
xchg
jmp
ret
out
popa
cmp
lahf
sbb
cmp
or
dec
xor
pop
(bad)
mov
sti
test
(bad)
pop
xlat
std
imul
jp
adc
rcr
faddp
ins
jle
movs
inc
cmc
popf
sub
mov
fstp
pop
lods
outs
repnz
movs
push
sub
jb
add
sub
mov
fwait
lahf
or
loope
or
xchg
(bad)
sub
or
dec
retf
fs
sub
pop
cld
mov
repz
test
jae
inc
sbb
or
jp
movs
cld
mov
cmp
mov
scas
jmp
mov
repnz
push
addr16
in
mov
ss
mov
in
repnz
(bad)
out
sbb
mov
jp
stos
sub
ret
inc
push
dec
int3
jl
push
outs
jb
inc
shl
jecxz
mov
add
cmps
xor
test
test
dec
mov
jne
jle
dec
dec
cmp
(bad)
add
adc
out
mov
jle
ss
dec
add
es
push
jmp
xchg
stos
aad
xor
fidiv
sbb
test
outs
retf
push
bnd
ins
push
(bad)
movs
add
push
jg
sub
aaa
cwde
xchg
(bad)
cmp
mov
adc
mov
pushf
inc
and
lahf
int
and
lock
xor
or
mov
and
std
pop
xor
and
push
mov
lahf
sub
imul
(bad)
xor
push
fidiv
fidivr
pop
cs
pop
out
jge
sti
outs
inc
daa
popa
cmps
mov
bound
lods
and
ds
(bad)
mov
sar
pop
nop
push
mov
scas
aas
jae
call
jns
fisttp
lods
adc
jns
dec
(bad)
sbb
mov
mov
cmp
and
sub
enter
pop
ss
inc
xchg
gs
push
mov
(bad)
out
(bad)
int3
mov
inc
call
mov
sti
mov
daa
test
gs
imul
cwde
retf
clc
call
mov
xlat
jb
outs
jbe
xor
and
outs
repz
xlat
call
gs
adc
inc
mov
stc
lods
sbb
shl
push
sbb
fidiv
sbb
pop
pop
xor
inc
adc
out
aad
cmp
int3
sub
jle
mov
sar
mov
test
ret
fs
jg
adc
loopne
jne
mov
pusha
mov
hlt
dec
cdq
(bad)
je
(bad)
jnp
sbb
js
fwait
(bad)
ja
inc
iret
sub
jg
xchg
ret
addr16
xor
jp
jns
adc
push
xchg
mov
fdiv
stos
mov
pop
jg
xor
popa
loop
frstor
or
xlat
test
mov
mov
cmp
mov
jg
rol
ret
movs
lods
out
iret
and
test
cmp
fidiv
mov
or
cmp
and
pop
and
add
ret
inc
mov
shl
mov
popa
scas
jbe
mov
or
mov
xchg
xchg
jle
pop
and
and
outs
call
mov
cli
fstp
push
das
and
shr
and
imul
icebp
mov
sub
sbb
test
and
sub
or
loope
fcmovne
adc
sbb
pusha
add
sub
shl
nop
push
ja
repnz
loop
popa
ror
push
stos
mov
out
jl
(bad)
mov
push
nop
sub
retf
and
add
and
loope
or
sahf
stc
add
sub
dec
enter
gs
jmp
mov
mov
cld
add
add
aaa
jbe
jmp
out
and
inc
ficom
mov
mov
adc
fstp
in
inc
inc
xor
(bad)
lahf
mov
ins
push
jge
aam
pop
mov
enter
xchg
add
in
sub
ficomp
cmc
sbb
out
jl
mov
dec
adc
mov
call
out
mov
adc
xchg
or
mov
inc
push
mov
cs
lds
sbb
neg
jne
mov
inc
mov
lock
ss
repnz
jge
scas
cmp
test
push
cdq
pusha
jmp
jns
cmp
pop
push
pop
sub
rcl
das
adc
xchg
ins
shl
push
or
ds
out
retf
mov
imul
or
pusha
div
inc
retf
add
pop
into
add
cmc
sub
or
dec
loop
mov
add
loop
dec
iret
and
cmps
test
or
out
call
and
imul
fiadd
sub
adc
inc
fadd
scas
add
mov
push
mov
rcl
dec
test
mov
cmp
add
div
stos
aaa
xchg
ins
neg
mov
aaa
mov
out
mov
inc
fisttp
shl
sbb
mov
add
cmp
lahf
xchg
outs
out
into
pop
imul
cld
inc
add
call
daa
mov
stos
cmp
inc
cmp
mov
test
cmp
cmp
mov
push
jbe
cmp
xlat
packssdw
into
dec
shl
push
jae
sbb
in
xchg
xor
xlat
adc
pop
js
dec
lods
mov
aaa
jmp
out
shr
and
mov
jbe
cmp
sbb
and
fdiv
or
ds
aad
dec
mov
and
pop
cli
mov
inc
call
add
bnd
jle
or
ins
dec
adc
dec
in
cmp
sar
icebp
aaa
cmp
aad
lds
pop
adc
mov
xchg
mov
imul
mov
xlat
inc
xor
bound
rol
stos
adc
addr16
jg
add
sub
(bad)
push
dec
mov
fsubr
or
out
dec
cmps
mov
xor
jo
int3
dec
nop
mov
shl
or
lds
inc
shr
fstp
adc
mov
out
mov
fldl2e
ret
aaa
jl
xchg
sbb
cmps
jb
or
loop
jge
dec
in
and
xlat
in
ins
sbb
sbb
mov
xchg
scas
mov
sbb
add
mov
lods
ror
sbb
in
scas
inc
movs
push
cmp
mov
and
cs
adc
fst
cli
stc
aaa
xchg
dec
xor
dec
pop
fild
icebp
popa
adc
mov
xchg
push
and
jmp
pop
scas
cli
cdq
xchg
cmp
or
inc
mov
call
mov
pop
pop
icebp
add
xor
das
cs
cmp
push
outs
stos
mov
imul
and
lods
(bad)
out
int
neg
cmp
sbb
sbb
(bad)
cmp
xchg
ins
aaa
pop
ds
add
xchg
bound
sub
lahf
mov
pop
(bad)
(bad)
fdivr
cli
into
mov
add
out
fnsave
retf
sbb
xchg
(bad)
(bad)
(bad)
(bad)
jne
xlat
test
in
inc
int
xchg
dec
xor
in
cmps
push
imul
push
jecxz
rol
lock
jmp
aad
fisub
jno
scas
pop
cdq
mov
into
test
sbb
fwait
jmp
test
jns
pop
(bad)
jp
and
xchg
mov
daa
pop
jmp
(bad)
xlat
jle
shrd
ins
push
aaa
xchg
(bad)
fild
les
jbe
adc
mov
mov
jg
out
dec
rcr
out
loop
and
push
test
pop
ss
sub
sub
jp
sbb
pop
cld
bound
push
mov
bound
and
aaa
push
mov
mov
xchg
imul
jbe
ror
dec
mov
inc
(bad)
in
movs
iret
mov
and
(bad)
mov
ins
ins
or
mov
ss
cmp
pushf
arpl
sbb
or
iret
jo
push
fisub
sub
out
leave
jne
ds
dec
pop
pop
add
mov
inc
outs
pop
mov
mov
mov
inc
jecxz
push
mov
cmp
cmp
leave
in
cmp
or
jnp
pop
je
xchg
adc
cmp
ficomp
or
add
ja
jb
mov
aam
pushf
push
adc
and
or
add
aam
lds
mov
pop
(bad)
xor
xchg
jbe
lods
inc
mov
push
retf
adc
(bad)
(bad)
cmp
jne
mov
outs
jp
movs
daa
loope
cmp
ret
adc
pop
xchg
xor
(bad)
jmp
data16
mov
arpl
mov
adc
mov
sub
pop
jmp
mov
sub
stos
inc
sbb
pop
fidivr
cmp
inc
shr
in
cmp
mov
loopne
push
inc
jp
push
clc
or
mov
xchg
test
push
sbb
sub
imul
inc
pop
int3
outs
dec
cmp
aam
lods
push
dec
retf
inc
das
sub
retf
hlt
dec
or
enter
cli
jg
sbb
jbe
(bad)
test
sahf
js
outs
inc
push
jg
mov
aam
mov
xor
push
fisttp
and
sub
aam
aaa
sbb
push
dec
add
sub
hlt
jg
mov
and
xor
mov
in
hlt
ins
mov
jo
add
push
test
pop
sahf
call
cmp
mov
xor
xchg
mov
mov
cld
test
lock
out
push
arpl
mov
out
add
sbb
arpl
lahf
add
sub
movs
pop
out
mov
inc
or
push
stos
and
jge
lahf
les
mov
shr
pop
imul
enter
jl
dec
dec
mov
sbb
addr16
pop
sub
loope
daa
cmp
inc
fdivr
mov
sbb
push
jg
and
push
add
int3
push
xchg
and
cmp
add
stos
cmp
mov
push
ss
shl
nop
enter
inc
mov
(bad)
aas
adc
(bad)
movs
pop
fidiv
stos
adc
test
sbb
pop
jecxz
shl
loope
inc
dec
cmp
pop
hlt
fsubr
(bad)
in
sbb
jne
mov
movs
and
out
(bad)
into
mov
xor
leave
push
int
xor
jns
push
(bad)
jbe
pop
sbb
icebp
call
mov
fs
jb
sub
push
pop
and
pusha
jb
rcr
cdq
xchg
lods
das
push
and
(bad)
lds
sbb
xchg
stos
or
clc
push
movs
rcl
dec
inc
cwde
pop
xor
xor
add
inc
pop
aad
add
adc
sbb
prefetch
loope
pop
or
push
mov
jge
add
neg
sub
icebp
add
add
scas
stos
push
adc
mov
mov
pop
scas
jb
imul
xor
cmp
sub
pop
aas
aas
inc
repnz
mov
sbb
add
sub
xchg
les
repnz
push
and
push
mov
mov
shr
ins
scas
and
mov
pop
outs
mov
xchg
pushf
cmps
mov
mov
push
sar
leave
cld
in
push
aaa
cmp
mov
cmps
jecxz
shr
(bad)
aaa
mov
scas
push
(bad)
jmp
sub
dec
sbb
xchg
aaa
or
mov
loopne
jge
mov
dec
call
ss
into
inc
mov
push
das
cmp
nop
mov
repnz
call
call
add
pop
dec
pop
cld
loop
test
inc
sub
mov
xor
pusha
sbb
ins
sub
popf
ss
hlt
and
push
into
or
inc
movs
jno
adc
dec
in
or
adc
xchg
dec
jno
cld
out
ja
loope
repz
mov
call
push
(bad)
retf
mov
xor
std
test
ds
(bad)
out
imul
pop
aaa
in
loop
fistp
repz
inc
fs
add
sbb
mov
popf
addr16
add
stos
test
fild
add
inc
leave
pop
jl
adc
mov
hlt
inc
stc
jb
push
in
cmp
and
(bad)
xlat
and
std
add
add
(bad)
inc
push
adc
into
adc
jecxz
inc
rcr
jmp
loop
test
push
mov
push
sub
sub
fmul
enter
lahf
scas
inc
cmp
mov
popf
ror
cwde
push
test
mov
dec
fistp
mov
in
mov
jmp
popa
or
sbb
leave
loopne
ret
cld
dec
mov
(bad)
stc
mov
scas
bound
pop
pop
dec
stc
add
mov
cmp
dec
ins
mov
inc
call
lahf
dec
loopne
dec
and
mov
test
sub
movs
movs
and
jl
sub
jp
ja
push
repz
mov
dec
out
popf
pop
xchg
pop
mov
scas
sbb
sub
enter
fwait
out
lds
pusha
xor
sbb
inc
add
call
pushf
sub
(bad)
and
xlat
imul
inc
sub
and
mov
call
mov
sar
push
mov
xchg
sbb
xor
inc
pop
shr
add
in
dec
lock
lods
je
sub
pop
and
xor
sti
test
jo
or
xor
push
xor
xor
cwde
xchg
push
rcr
scas
sub
jns
movs
adc
fcomp
push
lods
ins
pop
and
jmp
std
jmp
cmc
jle
movs
sbb
jnp
add
xchg
or
int3
jl
mov
loope
sahf
sbb
or
or
push
mov
mov
fidiv
mov
outs
xlat
dec
enter
push
mov
loope
rol
bound
jp
retf
je
pop
shl
cmps
repz
pop
xor
loope
repz
idiv
dec
push
sub
add
jo
pop
lock
mov
inc
mov
push
bound
cmp
les
sbb
push
ja
pop
hlt
test
psubw
ins
mov
jl
pushf
fisubr
or
pop
fs
repnz
es
jl
push
and
pop
mov
arpl
pop
pop
ja
inc
loope
stos
sub
jp
int
pusha
gs
popa
vmovaps
imul
jp
inc
sub
inc
push
cmp
pop
jecxz
jns
dec
jnp
xchg
lods
mov
mov
lea
xchg
fstp
jae
adc
test
iret
jnp
pop
sti
pushf
xchg
xchg
retf
inc
pop
sub
fadd
add
ror
inc
ins
sub
cmp
aad
aaa
lods
(bad)
ins
jge
mov
out
enter
mov
out
adc
mov
inc
call
lock
ss
ret
cmp
dec
sbb
fnstcw
inc
movs
pop
cwde
ds
movs
outs
and
mov
cmp
fcomp
inc
mov
mov
cmp
jno
jl
adc
dec
mov
or
movs
pushf
xor
xchg
jb
cwde
sbb
rcl
retw
and
(bad)
imul
cdq
ja
ins
add
in
sub
push
(bad)
fsub
pusha
rol
test
ja
mov
iret
mov
xchg
lock
jae
idiv
ret
aad
std
rol
dec
clc
dec
jne
into
jno
adc
pop
mov
or
cmp
inc
into
xor
jecxz
adc
into
aam
aaa
es
leave
jecxz
(bad)
mov
cmp
jnp
xchg
ds
sahf
cmp
inc
imul
scas
dec
dec
ds
aam
cmps
pushf
sar
inc
in
ret
mov
and
cmp
out
cld
xor
inc
mov
cmp
(bad)
imul
mov
popf
retf
jb
test
ror
mov
sub
jnp
lahf
movs
dec
mov
mov
xlat
jo
sbb
sub
inc
(bad)
fnsave
mov
mov
dec
ret
jb
arpl
mov
nop
fild
xor
or
xor
sbb
hlt
sub
sbb
sbb
repnz
bound
movs
sub
je
aam
sahf
or
sbb
mov
dec
loop
push
mov
das
mov
out
clc
jle
ja
sahf
clc
adc
mov
cmp
arpl
jge
cli
jge
in
push
loope
stos
mov
enter
and
mov
mov
mov
push
push
sbb
call
sub
and
mov
mov
lods
mov
inc
(bad)
pop
add
inc
jl
push
xor
xlat
fsubrp
cmps
push
jge
(bad)
jle
sbb
jae
rcr
fs
retf
mov
cmp
cmc
adc
bound
sbb
loop
lds
fdivp
retf
ficom
jle
sbb
or
scas
shr
push
cmp
add
jne
fwait
mov
sub
ret
popf
int3
(bad)
xchg
or
add
test
test
cwde
or
imul
xor
movs
push
stos
push
push
inc
cs
mov
adc
lahf
(bad)
inc
cmp
sub
in
jbe
test
mov
push
add
sbb
push
imul
shr
xchg
mov
aaa
dec
outs
or
mov
scas
jecxz
retf
mov
mov
jae
pop
cs
jbe
xchg
jo
sar
js
sub
bound
add
jne
sbb
iret
mov
repz
xor
js
jl
dec
sbb
shl
and
mov
add
lods
stos
sar
in
pop
es
imul
pop
ror
push
sbb
shr
into
cmp
xchg
fucomi
dec
dec
inc
jns
outs
vunpcklpd
sbb
or
mov
sbb
mov
icebp
test
cmp
(bad)
push
(bad)
frndint
aam
das
add
repnz
mov
mov
or
sahf
push
mov
xor
jge
lahf
ins
push
xchg
pop
xor
add
push
daa
div
pop
adc
aaa
cmp
call
and
and
adc
sub
popf
sub
mov
scas
jnp
(bad)
inc
gs
lahf
xor
dec
push
test
jg
or
pop
mov
scas
(bad)
mov
stos
mov
inc
fld
and
in
mov
(bad)
dec
push
repz
stos
ficomp
movs
pop
adc
in
cmp
push
std
mov
clc
xor
push
push
jo
sbb
ins
lods
(bad)
jae
ret
pop
mov
adc
and
push
mov
pop
out
pop
inc
fidiv
pop
mov
pop
shl
inc
dec
inc
and
sbb
bound
loopne
cmc
(bad)
xor
add
fsubr
call
jge
sbb
aam
sti
cdq
mov
out
mov
int
repnz
or
pop
scas
iret
sub
add
test
jnp
jmp
adc
and
jne
jg
out
nop
inc
idiv
ror
scas
je
dec
test
push
mov
es
repz
pop
jle
call
mov
rcl
sbb
test
inc
dec
xchg
lock
pop
push
lds
jecxz
xchg
sbb
jle
xlat
outs
fcom
push
pushf
fcmove
adc
mov
imul
or
adc
jo
repnz
mov
mov
mov
add
and
push
mov
or
xor
inc
mov
sub
cmp
mov
jmp
cmp
add
iret
in
(bad)
aaa
nop
or
mov
out
xor
(bad)
jmp
and
sbb
mov
repz
adc
sar
lahf
jne
mov
pop
jns
cs
sub
ins
arpl
(bad)
dec
xchg
sbb
and
xor
dec
shr
adc
shl
fwait
mov
adc
xor
mov
mov
sbb
pop
jp
ins
cmps
loop
nop
int3
mov
movs
mov
cmps
xor
pop
sbb
pop
mov
cmps
mov
test
xor
dec
push
cli
sub
test
outs
stc
jge
jge
ins
xchg
dec
xor
inc
sub
mov
and
and
mov
mov
jge
imul
adc
xchg
sub
add
and
xor
xchg
jne
mov
adc
xor
sbb
test
jo
jmp
xchg
out
pop
sub
add
xchg
mov
pop
popf
imul
push
(bad)
fcmovbe
in
mov
popf
shr
ja
rcr
inc
push
pop
dec
(bad)
icebp
push
mov
cmp
out
jp
pop
mov
and
xor
jnp
mov
dec
je
fsubr
arpl
sub
push
stos
cmps
ja
into
sar
in
cmps
fcom
xchg
jnp
ss
inc
sbb
imul
push
and
inc
xor
into
cs
ja
or
fdivr
push
mov
sub
inc
xchg
icebp
or
(bad)
lods
sub
in
push
movs
add
fisub
xchg
mov
cmp
enter
test
mov
daa
ja
pushf
push
(bad)
pop
arpl
inc
pop
mov
out
mov
jo
retf
stc
daa
pop
sub
lds
lods
(bad)
out
cld
in
sti
pop
popf
sbb
loopne
(bad)
ins
mov
shl
nop
pop
pushf
cmp
bound
sbb
jo
sub
shl
adc
xor
pop
repz
rol
imul
mov
push
sti
cmc
mov
pop
shl
div
cs
add
aaa
pop
addr16
(bad)
not
pop
adc
adc
mov
jle
xchg
xor
add
cdq
mov
(bad)
jne
inc
adc
xchg
in
or
xchg
adc
adc
lds
in
mov
repnz
cs
push
jns
cs
cmps
leave
fdivp
pushf
in
mov
inc
add
inc
scas
and
pusha
pop
ror
std
pop
les
gs
sub
movs
ins
popa
bound
into
xor
push
pop
xchg
mov
aaa
mov
fstp
or
mov
jmp
out
lods
call
(bad)
pop
call
jae
mov
xchg
push
jp
and
sbb
lahf
mov
fcom
aam
adc
fbstp
stos
in
mov
pop
or
push
in
push
mov
ror
sbb
out
mov
xor
pop
test
mov
aaa
mov
mov
push
inc
(bad)
mov
jbe
sbb
cmp
cmp
and
xor
push
mov
cmp
xor
out
arpl
repz
ins
sbb
hlt
xor
lods
inc
inc
mov
adc
and
jns
jns
fld
sbb
aas
jns
cmp
loop
bound
pop
mov
cmc
and
fdivr
daa
push
call
mov
(bad)
mov
xor
lods
fs
mov
add
jecxz
scas
ins
loope
std
xchg
cs
push
cmc
ins
mov
jns
or
pop
lea
mov
rcr
and
xchg
pusha
mov
ret
or
ja
pop
or
add
xor
sbb
cld
cs
or
je
mov
test
pop
push
push
data16
jg
xchg
jno
cmps
xor
pusha
inc
cmp
dec
fs
jbe
jnp
call
push
add
cs
jle
outs
jns
arpl
and
mov
jp
mov
imul
out
cmps
push
inc
clc
out
out
mov
in
sbb
and
stc
into
mov
xor
rcr
add
jne
popf
pop
rol
js
std
pusha
dec
mov
or
and
dec
dec
ret
cmc
sbb
pop
sbb
dec
in
adc
mov
call
enter
xor
sub
daa
dec
pop
sahf
ret
es
ins
cdq
fist
ror
cs
sbb
retf
aaa
nop
idiv
adc
pushf
neg
ds
and
cwde
ret
mov
in
pop
ss
jb
dec
or
imul
inc
mov
mov
lds
sub
sbb
xor
and
dec
jl
xor
jns
shl
cmps
pop
pusha
dec
addr16
jmp
fbstp
inc
cmps
les
iret
or
xrelease
test
popf
dec
aaa
add
aad
sbb
mov
jo
fbld
cmc
cmp
shr
out
cmp
jno
cmp
mov
cmc
mov
mov
cmp
jns
jmp
xchg
add
in
jge
test
jmp
into
xchg
mov
cmc
adc
ret
mov
pop
mov
(bad)
out
out
std
xor
and
and
dec
push
test
sub
(bad)
aaa
ds
adc
(bad)
add
es
ins
xchg
mov
jle
(bad)
(bad)
int
(bad)
sbb
arpl
imul
(bad)
data16
sub
adc
arpl
and
jns
push
xchg
dec
test
sub
(bad)
loopne
sbb
sar
scas
sbb
mov
pop
out
pop
dec
jmp
imul
int
or
ret
push
jo
and
dec
leave
jp
xlat
pop
cli
scas
sbb
xor
xchg
mov
lea
sub
pop
cli
jg
cmc
fwait
mov
push
fst
bt
mov
mov
xor
adc
les
and
into
dec
add
inc
jle
push
sti
test
mov
push
pop
push
sahf
inc
test
cmp
dec
mov
hlt
shr
test
jo
lock
test
dec
pop
je
jno
das
(bad)
repz
hlt
pop
or
lock
jno
pop
xchg
and
xlat
mov
dec
sahf
movs
cmp
inc
cld
psadbw
jle
or
mov
dec
outs
xchg
sub
mov
xlat
xchg
xor
stos
hlt
jb
cmc
popa
mov
dec
dec
loope
mov
push
stos
add
sahf
sub
push
push
cld
mov
dec
rcr
in
pop
in
stc
leave
mov
mov
hlt
push
xor
iret
xchg
adc
ins
sub
jl
cmc
lea
xchg
icebp
adc
lods
lods
mov
call
ins
nop
(bad)
ds
or
pushw
popf
jg
jo
sub
call
push
sbb
lea
adc
mov
in
sub
movs
call
inc
xlat
mov
cmp
mov
add
sbb
xor
pop
imul
cmc
inc
jne
mov
sar
sbb
mov
nop
mov
pop
jo
(bad)
jne
push
sbb
and
inc
mov
in
mov
push
push
pop
push
pushf
in
pop
jmp
add
inc
xor
xlat
aad
fdivr
xchg
dec
and
mov
mov
leave
sbb
shr
fsub
cmp
mov
and
or
outs
lds
sub
adc
sbb
xor
adc
repnz
in
aas
out
xlat
(bad)
xchg
pop
jnp
ret
or
(bad)
out
adc
pushf
test
xchg
fidiv
dec
or
cmp
loopne
adc
xlat
or
or
sub
rol
sbb
mov
ins
(bad)
adc
push
add
aas
cld
(bad)
xor
cmp
pop
jae
mov
cmc
scas
and
(bad)
in
fwait
imul
cmp
add
xlat
xor
inc
int3
mov
out
ret
cmc
int3
push
dec
sbb
push
cwde
data16
cmp
sbb
add
popf
jge
rol
retf
push
leave
stc
shl
(bad)
xor
in
in
or
mov
dec
sub
mov
xor
xor
xchg
in
jns
mov
cmp
fidiv
push
sbb
add
push
ret
push
xchg
nop
(bad)
push
or
or
xor
test
fsubr
inc
div
in
mov
in
xor
inc
mov
std
mov
fld
shr
mov
rol
mov
xchg
retf
add
in
or
sub
test
cs
mov
jle
xor
mov
lock
leave
inc
mov
xor
or
scas
adc
or
jb
iret
jnp
and
and
outs
bound
pop
out
xchg
adc
jno
leave
fwait
push
or
pop
clc
and
mov
mov
repnz
out
or
es
(bad)
std
iret
jmp
lea
pop
addr16
fist
into
dec
(bad)
lods
jnp
test
jmp
xor
es
movs
sti
mov
sub
push
cmc
fisttp
push
sub
rol
out
xchg
nop
lock
les
cwde
sub
jecxz
and
push
pop
retf
mov
dec
dec
or
mov
ret
dec
ret
cli
pop
fsubr
inc
daa
test
xchg
mov
loope
clc
(bad)
sbb
lods
cmp
cs
sub
sbb
ror
and
adc
xor
js
mov
pop
jp
sahf
loop
mov
pop
call
adc
add
leave
imul
cmp
inc
push
mov
pop
add
or
jge
xor
fisttp
mov
les
call
cmps
xchg
adc
pop
and
xchg
fst
mov
dec
sbb
sub
xor
shl
push
add
sub
(bad)
stos
pusha
jle
or
or
out
adc
shl
sbb
cmps
std
push
bound
daa
and
repz
(bad)
retf
es
fs
loopne
jle
pusha
shl
push
dec
pusha
fsubp
mov
comiss
cmp
loop
mov
inc
jbe
aam
popa
xor
or
xchg
cmp
mov
adc
mov
jo
fidivr
mov
push
xchg
dec
test
adc
mov
sbb
sbb
nop
mov
mov
adc
mov
pop
add
aas
and
imul
dec
jge
push
jb
retf
inc
mov
pusha
popf
cmp
inc
mov
inc
adc
mov
inc
push
mov
cmp
xchg
jmp
dec
inc
mov
aad
int3
movs
div
lock
sahf
jnp
push
jno
dec
fisttp
mov
(bad)
arpl
dec
push
das
iret
les
shr
pop
push
dec
xor
cmp
mov
out
lock
das
adc
cmc
outs
lahf
xor
sub
pop
ins
cmp
repz
cmc
mov
retf
and
lods
mov
dec
(bad)
icebp
dec
rcl
out
cmc
mov
nop
pop
mov
jns
call
jl
push
call
add
cld
inc
pop
mov
push
outs
daa
jecxz
xor
ins
sub
ror
pop
adc
stos
fwait
cdq
pop
jmp
push
(bad)
jbe
fdiv
popf
or
cdq
mov
dec
push
inc
lods
mov
in
mov
arpl
fdiv
mov
and
mov
dec
int3
xchg
rol
repz
mov
mov
mov
aam
adc
cdq
add
add
ret
cld
mov
(bad)
not
shl
xor
xor
dec
std
pop
sbb
into
mov
sbb
in
sub
movs
mov
movs
(bad)
lds
mov
es
sbb
xor
sub
int
(bad)
mov
ja
cmp
pop
mov
scas
js
jle
adc
xchg
cld
in
loope
fist
add
add
aas
sub
xchg
inc
sub
push
and
add
push
ret
je
scas
daa
mov
scas
out
stc
std
cmp
je
out
(bad)
jp
out
lea
jecxz
js
xchg
cmp
cmp
inc
out
movs
(bad)
mov
mov
(bad)
scas
out
cwde
(bad)
mov
shl
int3
and
dec
sbb
xchg
xor
sti
sbb
mov
pop
(bad)
mov
fdivr
mov
mov
cmp
pop
neg
add
es
sub
or
in
push
or
sbb
inc
mov
aaa
mov
xchg
(bad)
js
push
jp
jp
sub
xchg
pop
pop
push
adc
and
mov
mov
popa
into
lds
cmp
xchg
jne
cld
mov
mov
sbb
movs
jo
cmp
aas
xchg
arpl
or
outs
jbe
fs
mov
ja
shl
push
xchg
test
cmp
push
dec
sbb
jnp
jge
popa
sbb
pop
sbb
mov
aad
jnp
retf
mov
mov
xchg
cmp
and
mov
xor
mov
lock
call
cmp
data16
push
mul
jo
(bad)
arpl
and
inc
xchg
pop
add
xchg
lods
fisttp
cmps
dec
sbb
mov
retf
cmp
pop
mov
call
pop
inc
push
out
retf
sbb
out
adc
or
cmp
(bad)
jmp
rcr
imul
or
add
mov
fstp
stos
je
shl
mov
fs
daa
push
adc
mov
jb
mov
pop
add
xor
pop
xor
or
push
jmp
pop
mov
mov
fs
mov
loopne
inc
push
jo
data16
sub
mov
push
jg
dec
in
mov
inc
int
popa
inc
mov
sti
stc
xor
outs
sub
out
xchg
cld
and
pop
dec
out
pop
sub
fsub
mov
mov
ins
sub
push
neg
(bad)
xlat
bound
mov
pop
add
jne
jmp
lds
mov
mov
cmp
mov
sub
aad
mov
test
dec
cwde
stos
jle
repz
push
xchg
stos
mov
mov
xor
lods
or
push
push
xor
out
rcr
adc
push
mov
pushf
xor
fisttp
pop
addr16
xor
pushf
and
cmp
inc
sbb
mov
mov
repz
js
sub
cli
mov
xor
push
(bad)
mov
adc
add
mov
dec
ret
cmc
retf
jno
in
or
std
cmps
mov
adc
xor
lods
mov
mov
hlt
adc
mov
movs
cmp
test
aaa
lea
js
xchg
fbstp
mov
scas
xchg
jae
dec
ja
std
add
in
jns
or
sbb
aam
scas
or
cmp
push
ror
loopne
add
pop
aas
jle
dec
es
jg
out
cmp
retf
inc
es
sahf
and
add
leave
dec
jl
scas
mov
mov
jp
retf
ja
mov
mov
cmp
cmps
inc
pusha
sbb
vpsrlq
xchg
fwait
cmp
je
cmp
mov
push
movs
mov
add
push
stos
push
inc
test
aam
dec
cwde
leave
add
adc
xchg
out
mov
shl
in
mov
push
push
mov
jae
retf
fmul
nop
ret
fimul
daa
scas
inc
loope
sahf
dec
dec
xor
fld
add
xor
mov
pop
movs
test
test
fst
ret
pushf
jl
and
je
add
iret
jns
pop
outs
aas
bound
jmp
test
inc
retf
lds
hlt
mov
stc
stc
pop
loop
ds
mov
add
adc
stos
sub
mov
or
sub
add
mov
mov
inc
inc
lock
dec
xchg
arpl
out
sub
sub
xor
jl
mov
jnp
ds
and
inc
push
xlat
retf
mov
xchg
stc
jno
es
jnp
inc
xchg
call
cmp
lock
xor
mov
les
(bad)
pushf
xor
icebp
mov
cmp
loopne
(bad)
repnz
pusha
inc
aas
(bad)
fst
stos
fsubr
add
jmp
call
dec
rol
cld
fnstsw
jmp
inc
fwait
mov
pusha
loope
jecxz
sahf
mov
xchg
movs
test
gs
add
mov
jmp
outs
mov
std
xchg
lods
xor
popa
xchg
hlt
xchg
xchg
out
test
jp
mov
adc
imul
xor
jp
mov
push
iret
cmp
in
xchg
cmps
xor
arpl
sub
push
push
or
lds
out
inc
ins
xor
call
adc
gs
fld
adc
ds
pop
xor
fistp
and
ss
shr
sub
fcomp
jae
xor
push
dec
fadd
fs
lds
jmp
adc
lods
je
enter
test
mov
inc
lods
in
pop
add
das
mov
push
dec
xchg
jge
(bad)
shr
fmul
mov
mov
jne
(bad)
jl
hlt
adc
stc
dec
imul
mov
jo
adc
xchg
sub
imul
xchg
aam
(bad)
lea
test
stos
cmp
cmc
xchg
and
test
aaa
loop
arpl
pop
push
mov
fwait
sub
(bad)
fldenv
xlat
ins
out
dec
int
cld
retf
cmc
mov
mov
or
popf
cmps
cmps
rcr
outs
pop
adc
cmp
ret
mov
repz
and
outs
out
jle
adc
sub
aas
mov
and
sar
mov
inc
jmp
scas
mov
ins
or
loope
loopne
xchg
push
in
push
cld
fcmovne
inc
xor
std
sti
aad
inc
xchg
daa
push
cmp
xchg
xchg
jne
nop
out
fcmovb
sub
inc
and
adc
aam
ss
repz
sub
jne
in
hlt
div
scas
and
retf
push
out
and
test
popf
push
rcl
daa
mov
sub
dec
sbb
mov
out
stc
(bad)
cdq
sbb
rol
jle
pushf
inc
popa
cmp
dec
popa
mov
mov
rol
push
push
xchg
ss
out
push
jle
push
xchg
xchg
popf
pop
pop
lods
xor
test
jmp
push
data16
mov
mov
sbb
cmps
xor
xor
rcl
xchg
mov
stos
fwait
and
sbb
repnz
dec
in
push
je
pop
push
inc
adc
jmp
pop
push
mov
stos
cmps
or
sub
mov
repnz
sub
add
jne
push
jbe
aaa
add
or
shl
add
or
(bad)
cmp
jl
and
pop
call
lods
out
popa
out
test
mov
sub
jmp
cmp
fisubr
mov
loope
ds
mov
lods
pop
icebp
loop
cmps
cwde
clc
cmp
push
cmp
add
or
sbb
sahf
inc
push
cli
push
sbb
add
dec
mov
push
and
sub
push
add
test
mov
cs
and
jecxz
jg
jle
nop
xor
inc
dec
addr16
jg
xor
mov
xchg
(bad)
call
lea
cmp
sbb
inc
daa
xor
push
pop
xchg
mov
loopne
mov
(bad)
sahf
or
sahf
ja
xlat
jge
test
add
imul
add
add
or
add
dec
movs
fcmovnbe
lds
inc
jno
lods
adc
fld
mov
push
aaa
mov
push
in
out
pop
ins
ret
or
in
inc
pop
std
pop
pop
push
cmp
int3
cmp
pusha
nop
sbb
mov
fs
inc
ins
cmp
xor
sets
add
ins
inc
pop
and
mov
push
inc
(bad)
inc
mov
sbb
mov
in
sbb
icebp
xchg
mov
test
cdq
pop
stc
mov
ins
jp
sbb
test
or
adc
pop
xlat
test
in
sbb
or
data16
add
mov
in
or
lds
ret
sbb
outs
stos
es
sbb
mov
jp
dec
mov
in
(bad)
psubsw
dec
pop
jns
shl
sahf
retf
out
mov
jo
retf
out
cld
push
push
push
xor
mov
cwde
cmp
je
ficom
dec
mov
pop
je
sub
pop
push
je
imul
daa
les
xchg
xchg
mov
push
sbb
int3
add
sbb
xchg
or
or
jb
push
and
dec
pop
mov
push
mov
add
sub
shl
mov
addr16
xchg
lods
sti
inc
push
ins
mov
and
test
mov
inc
jp
shl
dec
iret
pop
(bad)
add
xchg
bound
fisub
jnp
and
loope
xor
xchg
xor
lahf
mov
sti
lock
pop
shl
dec
xor
mov
aas
loop
aaa
ret
fdivr
add
or
rcl
sbb
in
pop
sub
xor
push
clc
jecxz
sub
inc
add
es
mov
push
pop
test
pop
fwait
mul
xchg
shr
mov
nop
(bad)
retf
out
in
cmp
adc
fnstenv
sbb
sbb
and
pop
pop
jge
scas
add
scas
mov
jle
or
out
mov
add
sar
cld
jbe
pop
(bad)
mov
jo
aam
mov
cmps
shr
push
pop
mov
les
aas
test
mov
ror
sbb
or
loope
or
fstp
iret
imul
mov
shl
mul
xor
stc
pop
inc
(bad)
mov
js
imul
mov
daa
add
xor
data16
cdq
pop
xchg
xchg
pop
retf
test
popf
call
fcom
loopne
rcl
(bad)
(bad)
mov
cmps
add
ja
xor
jmp
dec
dec
xchg
push
cli
pushf
sbb
dec
les
xor
bound
xor
cmp
dec
jecxz
adc
push
rcr
sahf
and
and
mov
ss
pop
outs
ror
fstp
cmps
xor
or
test
dec
lods
add
or
jae
push
call
iret
dec
jmp
and
pop
scas
into
jecxz
jmp
sub
sub
and
cmc
ss
ret
mov
(bad)
fadd
pop
mov
lods
xchg
sbb
cdq
fdiv
repnz
test
xor
outs
and
push
push
or
fs
call
pushf
jno
push
aam
xchg
out
push
sbb
add
sub
mov
sub
mov
mov
mov
mov
inc
mov
std
lock
xchg
jns
fucomi
mov
mov
dec
add
js
push
adc
mov
popa
xchg
imul
call
imul
icebp
xor
(bad)
fdivr
jno
inc
pop
stc
mov
jecxz
test
out
cdq
sub
nop
and
and
scas
push
xchg
xlat
push
fmul
inc
jns
out
jge
in
jecxz
mov
loope
inc
call
and
popa
push
fsub
jecxz
push
push
dec
jecxz
cmp
in
in
outs
adc
je
int3
mov
sbb
popf
sbb
imul
jmp
das
out
mov
mov
ret
icebp
mov
enter
mov
jmp
fild
pop
inc
push
imul
push
js
ret
pop
shr
dec
inc
jns
test
stc
mov
mov
mov
(bad)
push
popf
sub
lea
popf
cmp
(bad)
test
and
pop
(bad)
lea
push
add
jl
inc
jge
pop
ret
add
lock
cmp
test
in
and
bound
or
jne
cmc
cmp
aam
mov
sbb
xor
add
adc
push
hlt
pop
daa
les
repz
imul
cli
and
aam
adc
xor
(bad)
mov
dec
xor
aas
cmp
adc
adc
and
push
mov
inc
scas
mov
std
jbe
cmp
jmp
jl
add
test
xchg
push
mov
add
or
xor
dec
fiadd
(bad)
jns
das
fadd
outs
(bad)
movs
inc
(bad)
xor
popa
sub
hlt
pop
inc
inc
jns
sub
cmps
loope
fnstcw
xor
dec
mov
inc
nop
cmp
pop
mov
jmp
cmps
xchg
jmp
adc
cdq
loopne
jle
inc
jne
sbb
mov
mov
ret
dec
adc
ins
mov
out
sbb
js
pop
hlt
or
pop
cmp
retf
xlat
push
int
into
mov
cmps
mov
rcr
loop
retf
imul
pop
div
outs
fadd
popa
loopne
pop
cmps
(bad)
and
pop
aam
inc
push
xor
test
int3
sbb
leave
ret
cdq
xor
push
imul
or
lahf
sbb
aas
cld
clc
jecxz
out
push
(bad)
fdivrp
in
jmp
jb
cmp
jns
dec
sub
jle
inc
jmp
movs
dec
adc
xchg
inc
out
jle
scas
leave
adc
jb
cmp
sti
adc
sbb
xor
rol
daa
sar
mov
or
mov
mov
xor
ins
cdq
push
fwait
inc
loope
test
fsub
mov
xor
movs
fbld
mov
sbb
lock
dec
mov
pop
mov
mov
xchg
(bad)
mov
cmp
fdiv
sbb
pop
pushf
inc
cld
xchg
daa
adc
or
(bad)
(bad)
pop
cmp
(bad)
fs
jmp
sbb
xchg
pop
test
jmp
fwait
je
or
sub
push
imul
xor
retf
xchg
shl
rcl
and
movs
add
ficomp
fimul
add
or
pop
cdq
cmp
mov
leave
mov
ja
sub
add
mov
pusha
pop
sub
xlat
xchg
push
jmp
lods
dec
lods
pop
lahf
sbb
pop
ror
mov
loop
clc
outs
pop
pop
pop
in
pop
add
test
nop
mov
cmp
xchg
in
sar
add
mov
ja
mov
jle
retf
cmc
in
adc
cmps
push
repnz
or
movs
jle
adc
jns
cmp
xor
sbb
sar
dec
or
push
mov
fnsave
jo
pop
push
call
sub
adc
pop
cmp
stc
mov
mov
xchg
push
mov
mov
arpl
xor
mov
sbb
leave
in
out
jp
movs
stos
movq
dec
lods
fld
dec
into
and
mov
sub
hlt
jb
mov
push
aaa
mov
enter
xchg
sbb
sub
xchg
rcr
jb
fiadd
sub
sub
dec
aam
jg
cmp
jno
(bad)
cmc
xor
adc
add
pop
adc
aad
outs
fimul
clc
jp
add
inc
out
mov
je
adc
stos
dec
ss
sub
xchg
out
xchg
or
or
jle
pop
mov
lahf
jns
dec
mov
push
test
xor
cdq
(bad)
jecxz
retf
cmp
cmp
out
mov
mov
shl
out
cmp
cmp
(bad)
pop
cdq
dec
daa
imul
mov
cmps
xchg
jg
in
popa
sub
mov
(bad)
jl
and
out
fmul
xchg
jge
lods
cdq
xor
popf
sbb
in
cs
or
(bad)
fsub
and
cmp
or
adc
push
pop
inc
sub
rol
popa
outs
fidivr
sbb
push
(bad)
xor
fstp
imul
shr
rep
inc
pop
sbb
or
cdq
jge
fcom
push
stc
xchg
add
mov
bound
fld
jno
xchg
push
daa
lods
rcr
push
mov
aaa
int3
push
pop
movs
sysenter
push
dec
inc
mov
mov
xchg
sub
call
sar
pop
jb
mov
adc
sar
mov
jle
mov
into
nop
mov
xchg
mov
or
data16
sub
mov
mov
pusha
pop
cmp
jns
shl
or
loope
push
or
fidivr
mov
gs
and
call
and
rol
jp
cli
jnp
fdivp
loop
scas
or
jno
add
xchg
adc
cld
xchg
mov
sub
test
adc
cmp
jge
mov
and
pop
mov
es
cmc
ja
push
or
push
out
dec
mov
mov
mov
nop
xor
fisttp
in
dec
jbe
dec
add
movs
popf
sbb
cmps
outs
(bad)
clc
clc
inc
push
(bad)
rcl
test
cwde
adc
mov
or
inc
mov
sub
push
mov
add
jae
xchg
pusha
and
js
popf
mov
xchg
jns
movs
stc
aad
pop
dec
(bad)
adc
adc
cld
xor
fwait
and
ficom
lds
stos
shl
fiadd
mov
dec
inc
mov
inc
iret
ins
mov
data16
inc
jbe
dec
xchg
sbb
outs
mov
mov
mov
cwde
mov
adc
push
mov
or
je
pop
mov
in
imul
rcl
jbe
jl
mov
in
sub
clc
jle
loopne
outs
sbb
jno
push
lock
mov
sbb
inc
(bad)
(bad)
fdiv
add
jns
jns
sbb
mov
rcl
cmp
pushf
int
dec
dec
pusha
jb
jge
aas
(bad)
cs
jb
cmc
cmp
aad
jmp
mov
mov
outs
dec
sub
ds
cmp
cdq
test
dec
push
xchg
xchg
xchg
adc
out
sub
mov
retf
mov
fnsave
jmp
xchg
xlat
cwde
mov
adc
rol
lods
ds
cdq
push
call
fldcw
fs
cmps
ds
or
add
sub
fnsave
or
xchg
pop
adc
xchg
jp
jmp
jecxz
add
mov
or
and
aas
stos
xor
dec
mov
cdq
inc
cmp
ds
dec
cmc
addr16
push
sbb
add
mov
and
push
mov
push
inc
push
inc
xor
cmp
add
mov
sbb
inc
es
sbb
in
mov
xchg
xchg
adc
mov
or
push
cmps
dec
retf
(bad)
or
loope
pop
sbb
fimul
loopne
jp
xlat
or
and
ficomp
pop
mov
add
(bad)
sub
or
jmp
loope
mov
arpl
jp
shr
shr
retf
cmps
aam
inc
fs
test
in
shl
ins
mov
sbb
mov
xchg
and
in
shl
xchg
adc
inc
or
mov
pop
(bad)
aad
jo
mov
sbb
aaa
jbe
add
push
pushf
cmps
popa
nop
xlat
mov
iret
in
js
out
outs
test
xchg
leave
add
ins
push
aas
xor
push
les
aam
ficom
add
jo
push
(bad)
ins
imul
repz
jge
sub
int
fwait
je
add
xchg
retf
jae
(bad)
sub
jl
fcom
and
dec
jecxz
push
ins
(bad)
adc
mov
lds
mov
mov
repnz
arpl
out
xchg
push
adc
stos
int
dec
adc
iret
push
mov
arpl
sub
mov
push
bound
movs
cmp
outs
dec
addr16
jge
shr
push
(bad)
jg
or
and
imul
data16
mov
dec
stos
popf
push
xchg
out
fcom
retf
movaps
push
gs
adc
push
push
jmp
jb
xor
add
ficom
jg
loopne
not
inc
jno
sbb
aad
jecxz
int3
or
jns
enter
test
xchg
pop
sbb
(bad)
mov
sahf
pop
loop
sbb
test
jae
mov
dec
and
pop
sahf
or
shl
sub
and
fld
mov
retf
sbb
adc
and
ins
je
jecxz
or
pop
in
dec
out
shl
jnp
pop
jmp
scas
movs
call
sbb
(bad)
retf
scas
pop
inc
loope
mov
out
rep
cmps
jl
movs
ret
stos
jns
(bad)
in
lahf
ss
retf
sub
mov
repz
or
js
mov
mov
push
xor
add
sbb
das
into
push
sbb
jns
cmps
sbb
adc
rol
loope
das
inc
bound
xlat
enter
and
xchg
xor
cwde
add
(bad)
std
iret
scas
ja
les
hlt
add
in
xlat
sub
cdq
clc
mov
bound
cmc
das
xchg
pop
(bad)
jb
xor
call
pop
mov
add
jl
cmp
dec
std
repnz
stos
(bad)
dec
jne
cli
push
mov
cmc
shr
stc
pop
cmps
jmp
stos
call
or
je
out
(bad)
fwait
(bad)
push
ror
scas
xchg
repnz
js
pushf
push
retf
and
add
cli
js
scas
out
mov
jle
out
or
aad
pop
(bad)
in
xor
hlt
cld
lahf
pushf
es
mov
inc
inc
inc
int
xor
fisubr
jae
neg
stos
lock
aas
cmp
inc
js
cmp
sbb
mov
retf
xlat
xchg
lods
pop
or
push
push
gs
jb
hlt
mov
push
inc
retf
retf
xchg
shl
add
pop
xor
shl
jmp
jp
push
push
add
ss
stos
jns
push
test
pushf
push
fwait
outs
ret
add
jns
outs
int
adc
push
jno
jbe
xor
or
lahf
sbb
shl
xor
lahf
mov
je
cmp
rcr
pop
xor
push
cmp
rol
scas
inc
outs
mov
add
pop
mov
pop
cmps
pop
mov
shr
jmp
not
push
test
xor
lea
shl
sahf
(bad)
mov
inc
into
mov
(bad)
cmp
in
mov
xor
std
xchg
adc
shr
push
jp
int
cmps
jge
dec
add
and
cmp
das
dec
jo
jg
push
rcr
cmp
mov
arpl
jbe
or
sub
pop
xchg
push
jmp
test
xor
scas
xlat
xlat
jae
ds
xchg
pushf
jg
bound
aad
scas
sbb
mov
jg
(bad)
jle
je
(bad)
mov
ds
rcr
(bad)
leave
shl
lahf
jg
mov
ficomp
aaa
pop
imul
jmp
push
out
inc
dec
push
sbb
pop
or
mov
icebp
jno
jmp
mov
and
and
sbb
xchg
stos
sbb
cs
mov
jmp
mov
push
ins
fcmove
mov
std
pop
xor
adc
pop
mov
cmp
dec
fisub
adc
mov
scas
or
pop
in
loopne
dec
clc
sar
icebp
or
imul
sub
xchg
lods
stos
mov
sti
and
shl
mov
cmp
xor
inc
pop
mov
cmp
out
call
shl
inc
jb
repz
jns
dec
imul
push
cmps
dec
retf
pop
cmp
mov
rol
cmp
outs
jmp
lods
lds
pop
pusha
das
push
dec
sbb
push
push
js
push
shr
add
mov
lods
dec
jns
inc
lods
add
mov
mov
inc
mov
repnz
add
push
xor
mov
jmp
or
das
add
push
pop
mov
rcl
out
(bad)
push
mov
cli
aam
push
ret
sbb
fimul
mov
fsubr
lock
xor
jbe
dec
movs
in
mov
fs
popa
mov
mov
out
xchg
movs
add
jmp
cld
xor
xchg
mov
(bad)
repz
or
pop
cwde
sbb
xchg
adc
repnz
sti
bswap
stc
or
(bad)
fstp
pop
jbe
nop
dec
ss
popa
or
scas
dec
add
pop
hlt
and
mov
adc
cmp
lods
icebp
(bad)
mov
fcom
add
adc
repnz
jmp
iret
aad
cs
jmp
xchg
adc
(bad)
pop
les
(bad)
jmp
mov
jns
jb
xor
std
pop
jecxz
push
sub
xchg
sub
pop
sbb
jne
cmp
popf
jae
pop
test
sbb
jp
cmp
movs
imul
int
inc
ficom
loop
mov
xor
rol
cmp
or
pop
cmc
mov
(bad)
popa
mov
pusha
aaa
repz
or
sti
mov
std
xor
mov
mov
lahf
(bad)
sbb
(bad)
(bad)
cmp
cs
jae
dec
ins
fbld
and
or
repz
push
pop
add
(bad)
into
test
or
ss
jecxz
push
jbe
fsubr
rol
mov
push
adc
pop
sub
jge
es
or
arpl
push
and
les
sub
cdq
push
addr16
fxch
dec
or
add
mov
fcom
(bad)
aam
sub
jge
out
cmp
les
(bad)
jmp
add
call
jno
push
ds
aas
or
test
mov
test
pushf
mov
sbb
cmp
rcr
jno
xor
cld
pop
(bad)
lea
jmp
xchg
test
mov
pop
pop
adc
pop
loopne
mov
and
iret
movs
adc
xchg
jmp
popf
(bad)
pop
adc
daa
xlat
data16
jmp
ins
scas
xor
test
int3
pop
fimul
arpl
cli
lods
sub
inc
add
outs
and
(bad)
into
call
adc
imul
xchg
icebp
xor
cmp
jmp
jle
fidiv
aaa
es
arpl
add
js
in
jecxz
mov
jb
mov
popf
into
mov
xchg
loopne
aad
or
push
add
inc
mov
idiv
pop
add
mov
push
call
sbb
out
cli
mov
ja
mov
pop
push
cmc
out
mov
mov
add
neg
pop
shr
cwde
push
cmp
mov
sbb
repz
das
push
into
popa
inc
cmp
push
jg
ins
jle
xor
mov
test
fld
mov
daa
push
daa
push
(bad)
jg
adc
iret
addr16
movd
inc
jl
rol
inc
sub
mov
push
in
mov
cld
xchg
iret
out
cli
retf
repnz
jb
sbb
mov
fadd
call
sub
push
xchg
cwde
adc
movs
and
fwait
sbb
cmp
ss
pusha
shl
or
lods
mov
ds
sbb
clc
dec
jnp
mov
hlt
and
aas
data16
(bad)
leave
addr16
sbb
dec
imul
sub
and
dec
lods
sub
mov
std
test
cs
nop
ins
sbb
movs
pop
jecxz
fs
movs
xor
fist
xchg
and
mov
add
sub
cmp
out
mov
das
jle
(bad)
jecxz
les
(bad)
frstor
or
out
movs
hlt
pusha
jb
push
inc
or
out
mov
jmp
aad
stc
in
jmp
push
push
out
push
sbb
lods
xor
and
imul
aad
xor
mov
fwait
sbb
adc
in
test
or
jle
sub
xlat
mov
push
mov
pop
sbb
rol
push
push
cmp
stos
fldcw
mov
nop
mov
dec
hlt
inc
icebp
inc
loop
out
cmovs
cmp
in
call
test
and
mov
inc
jmp
rdtsc
xchg
retf
jb
and
fnstsw
sbb
sub
push
add
aas
out
cmp
jmp
and
dec
out
mov
jb
dec
fld
xlat
fs
sub
xchg
test
shr
or
pop
mov
mov
ds
inc
idiv
das
push
inc
jmp
mov
add
and
shr
ret
push
cmp
pop
xchg
(bad)
cmc
ror
cmp
jb
ffree
pop
xchg
ret
fdivr
stos
xor
shl
(bad)
in
fsubr
xor
clc
push
cdq
cli
inc
adc
out
push
clc
bound
jge
es
mov
sbb
inc
mov
js
jl
cmp
repz
jg
imul
push
push
cmp
jno
dec
sub
pusha
in
sbb
jp
iret
mov
fistp
mov
cmp
pop
jl
mov
inc
sbb
loop
rcl
add
dec
(bad)
(bad)
sbb
mov
xchg
adc
movs
leave
dec
sub
push
mov
or
and
enter
jno
retf
sub
jnp
cmc
xchg
les
pop
movs
hlt
retf
(bad)
mov
stos
mov
push
pop
das
dec
loopne
dec
cmp
or
adc
(bad)
and
(bad)
cmc
lea
dec
push
fnstsw
js
push
adc
add
cmp
jb
loop
and
sub
fwait
and
mov
adc
mov
cld
add
inc
dec
sub
rol
cmp
sar
and
lods
push
lods
in
xor
stos
mov
into
push
push
sub
xor
outs
push
cmp
pop
xor
nop
repz
push
mov
lock
push
call
pop
xor
pop
(bad)
in
push
mov
imul
jmp
ja
out
and
mov
add
sbb
xlat
jno
jae
sub
xlat
cmp
bound
nop
pop
fwait
fs
adc
pop
or
adc
push
sub
pop
mov
mov
gs
and
push
inc
cmp
pop
mov
add
add
xor
jge
repnz
inc
push
lock
into
stc
sub
adc
popf
xchg
sbb
xchg
sahf
in
mov
xchg
push
loope
or
pop
xor
dec
jb
xchg
icebp
jl
xor
xchg
inc
stos
rcl
mov
mov
repz
mov
push
mov
jg
inc
ds
sete
bound
scas
mov
loope
leave
cwde
ins
cmp
inc
je
cmps
mov
or
out
loope
mov
sbb
xchg
jl
js
pop
dec
in
in
pop
mov
or
(bad)
cmp
lahf
jnp
pop
cmp
rcr
adc
ss
ror
cmps
scas
sub
in
inc
leave
hlt
mov
lock
lds
xor
mov
adc
and
sub
ficomp
mov
clc
in
pop
fistp
ror
add
push
sahf
out
pop
mov
lahf
push
imul
lea
int
sahf
and
adc
inc
repnz
data16
std
adc
aam
out
dec
stos
out
stos
or
gs
outs
cmp
arpl
subps
clc
mov
shl
inc
xlat
mov
cmp
nop
shl
adc
shr
sbb
fist
mov
in
cld
lods
enter
sub
aas
repz
cwde
stos
xchg
dec
xchg
inc
or
and
arpl
aaa
dec
lahf
xor
and
in
mov
dec
imul
packssdw
mov
aam
adc
add
and
pop
jns
xchg
nop
dec
jle
jns
iret
retf
jg
das
xor
js
ins
dec
add
sahf
std
pushf
jb
cld
adc
inc
imul
cmps
or
outs
jbe
(bad)
fimul
std
jl
adc
sahf
mov
je
push
imul
inc
adc
dec
movs
(bad)
xor
in
mov
aas
inc
push
das
sub
cmp
gs
jmp
loop
ror
inc
enter
mov
sub
and
inc
sub
arpl
mov
add
leave
outs
into
adc
or
ds
(bad)
mov
inc
jbe
outs
je
dec
pop
retf
fnstenv
mov
dec
sahf
(bad)
repz
sub
jo
push
jae
sti
fs
mov
rol
lahf
outs
lahf
xchg
retf
fist
(bad)
shr
mov
push
jmp
fmul
push
ss
cmp
pop
mov
jmp
ret
fstp
xchg
adc
or
(bad)
xor
push
pushf
pop
test
sub
daa
cs
mov
inc
daa
xor
jo
jb
mov
push
xchg
xchg
mov
jl
adc
mov
add
xor
popf
dec
retf
fist
jmp
shl
xor
sbb
(bad)
jg
dec
xchg
ja
inc
sub
sti
daa
hlt
mov
xor
ds
and
mov
dec
mov
out
jo
pop
call
popa
add
xchg
data16
cmp
lahf
sti
inc
sti
out
fdivr
mov
inc
sar
dec
pop
inc
(bad)
or
pop
sub
shl
push
or
mov
lods
push
xchg
stos
cdq
or
xchg
stos
or
mov
cmp
mov
inc
mov
adc
std
jb
mov
xor
pop
jnp
seto
lods
sub
adc
sbb
add
cld
test
or
or
inc
hlt
loopne
or
rcl
sti
jge
repnz
push
adc
ds
pop
js
mov
dec
pop
loopne
mov
es
jno
mov
out
cmc
shl
sbb
loop
push
clc
jne
jae
lea
jnp
push
retf
scas
add
cmps
xchg
jns
ja
stos
leave
imul
test
lahf
mov
pop
(bad)
mov
jno
pop
imul
fidiv
in
dec
cmp
gs
xor
mov
out
sysenter
out
das
fwait
sbb
(bad)
or
jae
jb
mov
data16
jle
push
mov
sub
in
es
push
and
iret
push
pop
mov
push
ror
ror
ror
pop
cmps
xchg
popa
call
les
sbb
push
aad
xchg
and
call
push
jle
mov
mov
xor
mov
pop
(bad)
ss
fcom
xchg
clc
ret
loopne
pop
sub
lds
cmps
cdq
fcomp
or
xor
mov
jnp
imul
xchg
out
lds
sbb
inc
pop
mov
cmp
push
adc
xor
dec
test
aaa
ss
or
adc
ins
test
dec
push
pop
cmp
js
sbb
(bad)
mov
sub
out
icebp
loop
call
cmp
jmp
or
sbb
shr
nop
in
pop
jle
movs
in
adc
jmp
inc
mov
lahf
jbe
dec
pop
cmp
repz
pop
mov
fwait
and
push
adc
popa
pop
dec
add
ss
ds
hlt
mov
cmps
repz
shl
add
pop
popa
sbb
int3
sbb
sub
outs
out
pushf
pop
jno
ds
stc
out
es
mov
cwde
mov
out
or
fdivr
sub
mov
push
idiv
popa
jnp
xor
mov
jmp
lock
retf
sbb
lahf
rol
mov
sub
xchg
dec
or
ss
pop
cmps
shr
xlat
stos
dec
gs
rcr
sub
ret
cdq
lods
dec
mov
jle
std
aas
jne
outs
es
and
inc
bound
mov
sti
adc
and
mov
in
int3
xchg
ret
push
push
mov
add
pushf
adc
es
inc
push
or
es
aas
addr16
and
jae
push
xor
repz
rol
jge
mov
hlt
xor
call
xor
sbb
imul
test
cmp
xor
jnp
jno
movs
pop
xchg
fdivr
inc
data16
cld
inc
fnstenv
sbb
xchg
jle
push
fmul
mov
pop
ins
mov
jmp
xor
cmp
fidivr
sbb
inc
pusha
lods
iret
mov
test
out
jmp
int
mov
cmp
div
cmp
jnp
fdiv
das
xchg
ficom
aaa
mov
retf
pop
mul
fiadd
xchg
sahf
push
adc
cmp
icebp
jo
jne
xchg
popa
add
lahf
nop
and
out
lahf
clc
sbb
pop
stc
xlat
or
(bad)
pop
xchg
pushf
or
xchg
test
jbe
jp
sub
lea
mov
ret
(bad)
ins
dec
xchg
pop
mov
jg
iret
push
sbb
jb
test
repz
xor
mov
(bad)
jl
imul
pop
stc
rol
fldlg2
fadd
out
adc
add
xor
cmp
cdq
sbb
int
jnp
test
xchg
int
aam
or
adc
dec
mov
inc
cmps
popf
jbe
xchg
mov
jbe
pusha
imul
test
inc
jp
push
pop
pop
and
fwait
lea
test
imul
xchg
adc
and
jbe
adc
fwait
ds
inc
xor
jge
jno
stos
push
add
and
call
inc
push
xchg
mov
mov
sbb
mov
cmps
icebp
inc
lock
inc
repnz
pop
int
xchg
push
ins
imul
imul
test
dec
jo
in
pop
mov
add
add
ins
sbb
out
ja
inc
dec
add
out
push
jno
xor
cmp
xchg
cmp
inc
lock
inc
cmp
jle
push
sbb
xor
mov
out
in
mov
inc
and
test
dec
ja
sbb
(bad)
push
addr16
dec
inc
xor
and
push
push
nop
in
and
pop
adc
mov
mov
push
retfw
sbb
inc
cmps
mov
ins
aam
pop
leave
clc
call
shl
pop
and
lds
xchg
xchg
(bad)
out
ins
lods
add
inc
rol
jl
add
cmp
push
shr
aas
movs
stc
test
inc
xchg
mov
adc
mov
rol
xor
dec
or
repz
cmp
dec
sbb
add
fsubr
enter
jg
sub
mov
mov
inc
push
adc
sbb
jp
sbb
and
pop
fwait
neg
daa
pop
pop
pop
bound
mov
jmp
dec
sbb
fcom
cmc
(bad)
stc
pop
jns
mov
push
movs
aam
adc
sbb
push
mov
adc
test
retf
jg
aas
int3
cmp
(bad)
push
mov
mov
test
ffree
les
adc
shr
aad
jl
or
push
pop
jbe
and
mov
aad
ret
mov
cld
jne
push
push
or
sub
or
(bad)
imul
sub
nop
lea
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
pop
push
inc
pop
call
icebp
cld
push
fidivr
pop
jne
fmulp
stc
retf
inc
jbe
loop
add
and
lock
and
js
aam
add
cmp
xchg
or
aaa
cs
fstp
aam
push
imul
fwait
jle
jecxz
test
int
pop
adc
psubusb
xchg
push
push
pop
ror
jmp
fmul
mov
xchg
push
cmp
adc
scas
icebp
pop
sar
inc
(bad)
mov
outs
sbb
cmp
mov
stc
sbb
fwait
pop
lods
cmp
cmc
scas
add
inc
mov
lods
ret
out
cwde
stos
jmp
and
mov
jl
cld
xchg
mov
lahf
xchg
iret
mov
mov
out
add
and
ret
mov
sbb
mov
mov
int3
sub
in
out
dec
cvtps2pd
clc
pop
adc
inc
out
call
inc
sbb
(bad)
aam
push
cmp
inc
in
or
push
inc
push
xor
fmulp
cmp
les
fmul
hlt
jne
outs
xchg
ret
enter
scas
retf
adc
out
in
dec
mov
scas
iret
sub
pop
inc
dec
test
mov
cmps
xchg
pop
or
mov
std
push
xchg
rol
cld
sbb
pop
sub
push
jns
rcl
add
imul
fcomp
fcomp
(bad)
mov
fadd
xlat
shl
sub
add
outs
in
inc
shr
cld
out
mov
icebp
xchg
pop
pop
push
test
retf
sahf
addr16
pop
test
jmp
xchg
inc
inc
sbb
cmc
mov
or
jecxz
sti
push
daa
lds
movs
cli
pop
mov
jle
sub
inc
and
jge
pop
push
mov
cmps
aas
add
cmp
mov
pop
jp
scas
aam
xchg
cmps
xlat
xchg
(bad)
ins
mov
sub
adc
cmp
ins
fimul
sub
sbb
mov
push
xchg
sub
ja
inc
inc
(bad)
jns
pushf
mov
mov
push
mov
aaa
je
cmp
mov
dec
mov
sub
xchg
pop
mov
inc
push
int3
aas
leave
out
xchg
mul
xor
inc
fisubr
adc
js
xchg
in
add
mov
sub
lds
adc
les
push
jnp
fldenv
scas
sub
inc
(bad)
js
push
les
(bad)
mov
lods
call
xchg
xor
sbb
adc
sbb
lds
rcr
retf
mov
mov
sahf
mov
fiadd
dec
sub
jae
push
cs
cmp
pop
stos
dec
xor
inc
adc
fsub
inc
js
adc
push
bound
add
scas
(bad)
daa
call
cmp
cli
adc
test
leave
xchg
in
mov
je
push
fnstenv
scas
dec
popf
mov
mov
inc
jne
sbb
pop
sar
or
lock
and
push
mov
scas
ins
push
repnz
mov
loope
pop
(bad)
mov
push
pop
stc
cmp
out
test
lds
xchg
daa
or
cld
in
sbb
cmps
cmp
xchg
dec
loopne
ds
shr
scas
push
dec
or
ret
pop
cmp
push
cmps
pop
pop
pop
pop
add
call
pop
jno
jl
scas
ds
in
test
xchg
fld
adc
(bad)
out
lea
cmps
inc
icebp
mov
inc
iret
push
xchg
stos
xchg
xchg
cmp
dec
sub
mov
out
inc
xchg
cmp
push
adc
iret
retf
movs
stos
retf
adc
out
nop
rcl
xchg
xor
mov
ds
scas
xchg
or
scas
sub
movs
in
(bad)
pop
inc
mov
sar
xchg
outs
sar
jne
sti
cmp
and
pop
shr
js
loope
out
adc
arpl
cmp
sub
jmp
dec
call
sahf
cmp
xchg
inc
add
jbe
jnp
enter
jle
pop
cmps
cmp
scas
sbb
std
retf
jmp
sub
jge
es
ds
lea
addr16
dec
pop
scas
cmp
inc
and
sub
cdq
leave
adc
mov
out
loope
out
scas
repnz
idiv
iret
cmp
or
retf
push
xchg
xchg
adc
test
icebp
adc
cld
fwait
inc
add
xchg
or
movaps
scas
dec
mov
mov
imul
mov
push
mov
test
fidiv
or
popf
aaa
fidiv
mov
jmp
jo
mov
add
test
shl
xor
xchg
mov
inc
pop
test
xor
lock
pop
clc
mov
and
mov
fdivr
mov
sub
mov
rcr
dec
push
jg
mov
mov
loop
jo
ins
dec
inc
scas
mov
retf
js
adc
dec
repz
js
dec
lock
pop
scas
and
or
push
push
jge
test
(bad)
sbb
jg
inc
addr16
push
xchg
add
push
or
adc
inc
mov
test
leave
pusha
mov
je
mov
jne
in
scas
pop
les
cmps
adc
jl
cmp
mov
shl
sbb
out
sub
fld
mov
lods
mov
sti
ds
cld
push
and
add
gs
arpl
push
pop
ret
xchg
les
mov
aam
cmps
cmp
pop
or
fmul
loopne
out
loop
dec
jae
cs
pop
lock
xor
fiadd
fisubr
add
imul
jge
pop
push
jmp
and
mov
jge
rcl
sub
retf
jp
(bad)
loopne
int
jno
mov
dec
inc
scas
(bad)
push
popf
(bad)
jmp
cld
adc
outs
or
sti
jbe
test
sbb
jmp
(bad)
sub
or
out
icebp
sbb
rcl
or
inc
mov
stos
add
inc
rcr
inc
fdiv
jnp
push
mov
fwait
shl
sar
fadd
arpl
sti
cmps
push
and
(bad)
and
pop
pop
and
cs
mov
stos
pop
hlt
jbe
call
jecxz
dec
rol
das
xor
xchg
cmp
daa
xor
int3
v4fmaddss
sbb
test
push
test
mov
outs
xchg
dec
xor
(bad)
mov
mov
mov
hlt
mov
fwait
dec
mov
out
sub
cmp
fisub
imul
sahf
leave
cmp
or
pop
push
outs
ret
rcr
push
mov
sar
jbe
stos
cli
push
lock
outs
(bad)
xchg
ret
mov
sub
cmp
dec
or
rcr
mov
sub
enter
adc
sbb
mov
ins
mov
mov
sahf
sbb
add
es
xor
sub
jnp
cmp
mov
mov
inc
(bad)
imul
mov
lods
repz
push
call
int
jmp
mov
mov
xor
xlat
mov
pop
test
lahf
sub
inc
scas
add
dec
mov
jp
cmp
ja
retf
call
add
push
jbe
(bad)
bnd
cmp
call
les
mov
dec
mov
(bad)
ret
loop
es
sub
out
lock
push
xor
cmp
ds
into
aaa
(bad)
xor
iret
pop
dec
imul
out
xchg
and
mov
je
xor
dec
fsubr
adc
addr16
jle
pop
cmps
sub
lods
pushf
jmp
sub
jmp
sti
(bad)
in
fs
dec
out
mov
cmc
clc
enter
xchg
mov
or
xchg
mov
push
push
or
ret
xchg
mov
add
xchg
mov
sbb
fidivr
inc
les
pop
mov
mov
jp
push
add
in
pop
mov
or
push
pop
in
das
ret
mov
push
push
aaa
loope
xor
(bad)
push
nop
loop
hlt
fucomip
loope
and
movs
adc
adc
xor
ss
sbb
out
fsubr
lahf
shl
mov
aad
sub
mov
outs
and
lock
iret
or
fnstsw
test
gs
mov
arpl
fcomp
js
stc
xlat
sub
jl
test
jo
mov
leave
daa
cld
dec
inc
mov
mov
div
ins
jp
out
in
cmps
addr16
fld
in
nop
jecxz
and
inc
dec
push
(bad)
cmp
outs
pop
and
push
aam
mov
(bad)
sar
inc
out
pop
dec
and
es
adc
xlat
cmc
enter
enter
jb
push
sbb
add
jle
ins
sub
jle
sub
lods
inc
mov
cwde
xlat
leave
out
popa
mov
add
sub
mov
aam
retf
xor
pop
lods
and
mov
in
adc
pop
xor
aad
mov
push
mov
xchg
aad
mov
mov
fiadd
sbb
fmul
and
loope
(bad)
fild
sbb
lds
push
sahf
into
jecxz
inc
in
adc
adc
xchg
pop
fwait
sub
call
pop
sub
xchg
jae
cmp
cs
fs
arpl
test
sub
mov
test
add
mov
retw
add
popa
jle
movs
pop
(bad)
jnp
sub
imul
xchg
rol
std
mov
xchg
push
dec
stos
cmp
mov
xor
add
lock
loop
jae
sbb
inc
mov
jno
nop
mov
push
sti
mov
jno
outs
call
in
or
mov
jmp
pop
lods
cmps
fild
ss
fsub
xor
lahf
cvtps2pi
inc
adc
mov
int3
in
sbb
outs
pop
push
add
pop
aas
push
jbe
test
pop
fisub
dec
in
fwait
pusha
cmps
add
mov
push
and
les
pop
rcr
fild
out
dec
jns
xchg
repz
lods
dec
out
inc
cmps
jmp
fdivr
ds
and
jae
fcmove
data16
ins
or
pop
mov
(bad)
push
mov
or
mov
and
dec
jns
popf
add
(bad)
std
retf
push
(bad)
mov
mov
into
mov
sbb
dec
call
sub
mov
ds
popa
mov
sahf
dec
mov
mov
das
bound
jp
iret
outs
fs
or
popa
jmp
jae
shl
xchg
push
repz
pop
mov
adc
xchg
jle
or
push
test
and
ror
cmp
mov
xchg
(bad)
outs
pusha
inc
push
(bad)
ins
cmc
sbb
mov
jmp
mov
call
mov
pop
add
push
fsubr
call
jne
daa
xor
adc
xor
cld
arpl
mov
mov
out
imul
pushf
ja
out
sbb
inc
xlat
sbb
push
dec
loope
mov
enter
data16
out
cmp
dec
test
push
adc
inc
push
pop
xchg
push
call
pop
shl
adc
xor
mov
mov
packsswb
fsubr
loop
cmp
mov
mov
dec
imul
outs
jo
jge
pop
not
xchg
push
or
cmc
mov
test
setns
hlt
and
push
or
sub
pop
mov
xchg
lahf
or
xor
int3
inc
call
ror
or
add
mov
(bad)
lods
push
jno
jmp
push
mov
or
cmp
xacquire
test
cs
and
pop
jne
or
scas
sub
lock
mov
dec
sub
ja
sub
cdq
xchg
fnstcw
sub
repz
dec
jmp
cmps
pop
and
mov
inc
mov
add
adc
xor
int
ftst
push
icebp
outs
(bad)
cs
les
pop
push
pop
mov
leave
test
pop
inc
ins
push
jmp
fimul
xchg
ins
outs
and
mov
aaa
adc
loope
inc
mov
dec
iret
mov
shr
loope
inc
push
ds
push
mov
subps
fisub
adc
sub
imul
add
sbb
mov
nop
ss
mov
pop
(bad)
mov
in
inc
outs
push
pop
pop
jle
scas
das
inc
std
movs
dec
(bad)
iret
into
mov
call
inc
sub
mov
fisubr
dec
cmps
ins
sub
pop
mov
sar
ror
lock
adc
add
ins
mov
pop
jle
mov
jp
cmp
push
xor
pop
pop
jnp
cmps
and
or
jmp
mov
push
mov
gs
lods
pop
push
xor
xchg
fs
pop
or
adc
imul
stc
fsubr
iret
es
jns
fsub
and
push
js
mov
or
push
and
daa
inc
imul
add
mov
adc
push
xlat
pop
in
mov
es
or
cmp
lea
and
xor
xor
inc
ror
mov
lds
adc
bound
stos
dec
ficom
jb
xchg
cmp
dec
pop
mov
fs
mov
pop
daa
int
retf
pop
adc
sbb
dec
xchg
movs
loop
fdivr
xor
ret
popf
and
(bad)
lock
loopne
repz
in
out
or
stc
leave
cmp
jae
mov
ins
loope
push
cmp
addr16
push
cs
adc
nop
jmp
or
or
in
push
pop
call
cld
mov
sbb
addr16
cs
and
test
push
add
xlat
add
add
sbb
lods
jmp
dec
xor
inc
jnp
xor
cdq
aam
out
or
cmps
lds
inc
sbb
jb
jg
push
outs
dec
aas
mov
out
sbb
outs
test
lods
std
cmps
xchg
push
mov
icebp
pop
sub
adc
fs
pushf
cmpxchg
daa
xchg
js
or
dec
(bad)
enter
or
dec
cmp
retf
aad
scas
aas
lods
push
lea
push
sbb
sub
mov
xchg
mov
adc
ret
push
adc
cmps
cmps
stos
xor
inc
adc
call
fld
xchg
(bad)
or
pop
sub
outs
mov
pushf
les
add
mov
imul
cmps
clc
xor
test
or
jg
xchg
mov
jns
aaa
ds
adc
stos
or
fsub
outs
scas
inc
or
jmp
cmp
mov
and
pop
jmp
in
repz
stos
pop
fisub
mov
dec
mov
dec
mov
pop
movs
es
xchg
dec
jecxz
daa
js
outs
jns
into
fimul
or
aaa
jo
mov
leave
test
(bad)
fldcw
push
data16
cmc
push
inc
imul
add
out
mov
jmp
stos
nop
jp
mov
jne
jp
aaa
nop
(bad)
xor
mov
pop
inc
fcmovbe
mov
gs
xor
adc
shr
popa
add
xchg
(bad)
enter
jle
adc
mov
sbb
stos
fsubrp
mov
sub
leave
xor
jmp
pop
push
imul
push
jmp
mov
jno
into
and
mov
popa
outs
xor
sbb
mov
pop
dec
jge
inc
dec
or
aad
shr
or
test
ftst
outs
shr
add
or
cmps
cwde
dec
push
mov
ret
push
outs
cmp
fidivr
dec
pusha
jp
inc
cmp
xchg
adc
push
jle
or
dec
inc
or
stc
es
fst
imul
stos
lock
mov
call
outs
in
sti
lock
(bad)
aaa
mov
in
sar
jg
mov
push
in
(bad)
adc
jg
or
shl
lea
sub
mov
jns
sti
sti
pusha
pop
dec
loope
sti
ret
mov
sahf
(bad)
mov
jnp
ds
mov
xchg
in
push
lods
cmp
repz
lods
fild
jno
sub
cmp
cmps
test
enter
(bad)
(bad)
push
stos
and
mov
jnp
xor
ins
pop
push
shr
mov
movs
jmp
xchg
js
and
add
dec
ss
jb
adc
inc
aas
rcl
push
sbb
pop
xor
std
scas
cli
das
xchg
sbb
inc
mov
out
xchg
jle
movs
inc
sbb
sub
pop
mov
ror
inc
push
jns
cwde
cwde
addr16
jns
xor
arpl
push
push
movs
pop
into
js
nop
int
adc
das
jae
imul
movups
das
retf
retf
jge
push
mov
in
addr16
sub
push
mov
fcomp
sub
jmp
stos
ins
jge
in
in
stc
imul
jle
aad
sbb
mov
movs
ficomp
mov
inc
into
repnz
sub
cwde
xchg
in
cli
dec
daa
mov
fcom
push
cdq
sbb
sbb
pop
(bad)
clc
imul
pop
sbb
mov
mov
dec
sbb
mov
leave
fimul
mov
or
cmp
mov
adc
ret
fsubr
test
movs
rol
call
popa
mov
push
or
dec
or
lahf
push
jne
int3
in
(bad)
mov
icebp
int
in
adc
and
push
xchg
xchg
fsub
push
mov
movs
push
outs
jb
pop
fxch
inc
cs
in
push
pop
clc
cmp
jns
and
mov
cmp
pushf
sbb
dec
or
lahf
sub
push
and
(bad)
inc
ftst
sbb
mov
and
mov
and
ins
out
push
(bad)
daa
mov
adc
das
and
jle
sahf
push
mov
mov
scas
cmps
cmp
das
jne
test
leave
loopne
push
dec
fisub
fadd
jnp
iret
mov
and
enter
mov
xchg
out
(bad)
test
pop
push
lahf
push
cmp
pushf
mov
push
pushf
xchg
pop
cld
int3
retf
in
idiv
jb
mov
fstp
jne
movs
mov
xchg
sbb
add
movs
add
cli
xor
add
es
fwait
into
mov
cmps
stc
dec
sbb
out
sub
mov
adc
sbb
jo
imul
inc
faddp
push
fs
test
inc
mov
sub
loopne
stos
jg
mov
pushf
(bad)
jne
jg
sbb
(bad)
leave
cli
xor
lahf
sub
psraw
pop
push
clc
jne
fs
int
xchg
dec
add
and
and
mov
fs
inc
(bad)
sub
xchg
gs
loope
xchg
call
xor
push
aad
inc
call
cmp
fdiv
mov
jnp
lahf
inc
jae
ins
jecxz
int3
lock
(bad)
mov
fild
xor
mov
loop
dec
repnz
sbb
rcr
inc
mov
cmps
loopne
ret
(bad)
or
mov
sub
adc
adc
and
retf
push
ret
(bad)
(bad)
rep
mov
mov
sbb
rcl
neg
scas
aam
jb
push
fild
arpl
js
les
inc
out
mov
pop
xor
adc
nop
jge
js
fwait
test
imul
(bad)
(bad)
mov
jne
jno
aam
dec
das
mov
shl
pushf
stc
add
mov
in
leave
ret
push
in
mov
adc
xor
clc
add
iret
enter
(bad)
cld
jge
dec
xor
jns
shl
dec
sbb
lods
jg
cmp
call
cs
pop
pop
push
xor
movs
out
push
inc
xor
cmps
mov
outs
mov
jecxz
push
xchg
repnz
(bad)
jmp
cmp
mov
iret
dec
push
int
adc
mov
lock
pop
sub
mov
mov
(bad)
mov
xchg
cdq
pop
mov
add
dec
inc
mov
jle
push
pop
lock
mov
in
into
aas
pop
or
scas
into
xlat
shr
push
xchg
ins
data16
mov
pop
push
sub
sub
lea
cli
outs
mov
mov
cmc
lods
jmp
xchg
inc
fimul
pextrw
inc
out
add
call
and
push
cmps
es
out
mov
repz
lods
jmp
push
iret
sub
ins
imul
add
cdq
pop
sbb
push
sti
aas
retf
jae
mov
jmp
pop
jbe
pop
out
dec
mov
cmp
in
mov
sbb
sbb
pop
and
mov
idiv
out
mov
mov
dec
mov
ret
pop
jp
movs
ss
xchg
std
iret
nop
pop
adc
ficom
js
adc
mov
sub
lock
dec
jmp
in
sub
pop
fwait
dec
cs
loop
or
outs
jecxz
cmps
(bad)
mov
shr
inc
sub
xchg
sub
mov
xor
and
sub
mov
mov
(bad)
fisubr
pusha
cmp
xlat
outs
loop
jp
push
mov
dec
daa
add
sar
rcr
push
xor
(bad)
sti
mov
fidiv
pop
inc
inc
add
les
movs
(bad)
cmovb
mov
icebp
cmps
adc
add
les
enter
popa
rcr
cmp
fisttp
inc
dec
push
pop
xor
mov
ror
jmp
jbe
nop
sub
call
popw
ds
leave
cmps
adc
or
jecxz
mov
inc
sbb
jbe
sub
cmp
call
sub
xchg
pop
es
dec
pop
jg
ss
repnz
inc
dec
sbb
cmp
dec
xor
mov
sbb
jp
dec
push
jg
mov
adc
ins
rcl
sub
add
jmp
fcmovnb
sub
mov
dec
mov
cdq
dec
inc
cld
sub
ficom
pop
jb
push
rcr
sub
sub
jmp
mov
push
jle
cmps
jbe
adc
ins
dec
xchg
mov
(bad)
mov
mov
push
mov
clc
fidiv
cmp
test
lods
or
out
sub
inc
fstp
cmp
mov
mov
lea
fild
sub
ficom
pop
pop
(bad)
fcmove
sub
xor
fst
les
cld
retf
out
fist
pop
xchg
adc
pop
sti
mul
xor
call
xchg
jecxz
sbb
aaa
jbe
stc
or
jge
nop
cdq
out
and
xor
mov
fs
jns
ror
sbb
push
mov
hlt
(bad)
shr
fisttp
iret
mov
mov
sbb
sub
(bad)
mov
inc
pop
push
shr
cmp
(bad)
in
call
repnz
and
adc
(bad)
add
sub
jns
loopne
ss
test
data16
mov
retf
xchg
fstp
fwait
repz
loop
mov
test
jp
mov
and
push
jno
fst
rcl
sahf
mov
jg
sub
sar
mov
or
mov
rcr
sbb
add
mov
inc
jp
inc
jmp
stc
out
xchg
or
pop
sbb
ja
cmps
bound
jl
ins
dec
and
push
mov
add
test
jo
mov
in
and
ins
shr
loopne
(bad)
mov
sbb
push
(bad)
stos
(bad)
in
hlt
xor
and
outs
and
mov
jmp
sub
push
call
out
in
sbb
jg
mov
test
rcl
or
test
and
pushf
jle
imul
adc
fiadd
rcr
push
jmp
push
and
ftst
pop
mov
into
idiv
mov
retf
push
push
cmp
xchg
and
ja
enter
sar
out
inc
stos
sub
mov
mov
cmc
shl
inc
ret
inc
fistp
add
rcl
dec
cli
nop
xchg
int3
in
mov
dec
(bad)
adc
jle
pop
pop
shr
push
call
mov
sahf
lahf
cmp
ss
adc
jge
sub
test
jmp
(bad)
in
jo
loop
test
cmps
dec
fdivr
nop
xchg
sub
jb
in
mov
retf
and
jmp
mov
add
add
mov
jmp
fst
out
sbb
ret
lar
jle
or
push
sub
sub
mov
(bad)
stos
sbb
cs
sti
fwait
out
jge
cmp
and
mov
jae
xlat
add
daa
inc
outs
mov
xlat
mov
jae
ss
adc
push
dec
pop
pop
inc
int3
aam
(bad)
(bad)
les
test
sti
in
cmps
ja
jl
or
adc
stc
bound
mov
push
cmp
aas
push
cmp
scas
or
je
cmps
in
dec
sub
sub
pushf
jmp
fbstp
pop
pop
mov
test
test
xor
mov
cmp
xlat
dec
in
fisttp
xlat
mov
mov
or
mov
lods
jne
and
adc
in
cmps
int
retf
or
jle
and
daa
push
add
mov
adc
add
sahf
inc
and
cs
add
in
ins
add
hlt
add
mov
or
sub
clc
jnp
sub
test
ds
cmps
ret
push
pop
jns
dec
out
cmp
push
sbb
sbb
clts
mov
mov
enter
mov
cmp
retf
pop
call
or
fisub
in
push
sahf
out
sbb
xor
pop
jns
lea
loopne
sub
adc
sahf
shl
xchg
repz
mov
and
push
shl
lahf
retf
icebp
int
xchg
sahf
jns
out
sub
xchg
mov
std
xchg
xor
pop
xor
out
mov
jmp
sub
arpl
popa
adc
push
push
mov
das
loopne
dec
sti
lds
(bad)
imul
loope
mov
shl
sub
add
sub
add
cmp
xchg
cmp
or
xchg
scas
mov
dec
popa
xchg
cmc
cli
pop
(bad)
xor
pusha
jns
fdivr
and
inc
fadd
bound
pop
stc
mov
rol
add
and
sub
jmp
mov
lea
pop
jl
es
jle
out
sahf
aas
stc
or
inc
call
and
(bad)
push
mov
xor
scas
push
mov
data16
cmp
popf
enter
mov
push
mov
jmp
imul
push
leave
mov
nop
jle
and
je
pop
add
mov
adc
(bad)
mov
and
and
mov
cli
(bad)
out
scas
mov
mov
jmp
dec
nop
out
rcr
pop
shl
lock
sbb
dec
leave
int3
jo
int3
jg
ds
dec
pop
dec
neg
pusha
jmp
rol
push
(bad)
(bad)
out
iret
xchg
dec
out
push
sbb
jp
div
pop
dec
dec
push
jp
mov
scas
sub
js
mov
out
jb
and
repnz
aad
cmp
jno
ret
das
mov
cdq
dec
fsubr
mov
push
and
hlt
mov
adc
mov
pop
add
or
ds
ds
xchg
fistp
pop
jg
mov
imul
icebp
(bad)
(bad)
and
xchg
bound
push
inc
or
imul
mov
sub
fbstp
int
add
mov
cmps
in
mov
in
inc
push
sub
push
cs
hlt
rol
mov
add
retw
test
pop
dec
jo
adc
in
cmp
xor
(bad)
imul
xchg
test
push
imul
mov
sub
adc
div
xlat
daa
stos
data16
inc
in
cdq
dec
call
sbb
(bad)
fldenv
xchg
xor
cmp
sbb
imul
xchg
aam
sbb
test
add
test
scas
jb
push
ds
out
mov
xlat
outs
test
ret
cmps
or
les
and
mov
push
sub
push
cmp
dec
in
jbe
pop
sar
inc
xlat
test
in
mov
jecxz
mov
sbb
jnp
cmp
mov
arpl
rcl
adc
and
cmp
add
jae
sti
fistp
rcl
pop
xchg
sub
fisubr
inc
and
arpl
jnp
cmp
or
xor
jmp
shl
sbb
call
mov
movs
add
jbe
idiv
pmaxsw
dec
fimul
jb
mov
dec
cdq
popa
jmp
js
add
lods
fcomp
pop
sahf
iret
sub
xchg
or
and
outs
cmp
adc
sbb
push
or
mov
cmp
aam
adc
loop
(bad)
outs
sub
inc
mov
add
fisub
add
bound
add
xor
jl
shl
arpl
adc
push
sub
mov
leave
sbb
push
es
pop
call
pushf
stos
mov
dec
cmp
test
xchg
add
xor
iret
cld
aaa
movs
(bad)
push
ret
ja
mov
sub
loope
pop
ss
cwde
imul
xor
or
jne
xchg
xor
lahf
or
lahf
push
cmp
outs
fld
cmps
out
push
mov
jo
shl
jp
and
sbb
jmp
dec
mov
jns
imul
inc
push
inc
push
pop
cld
mov
imul
out
inc
sub
out
pop
jno
jle
mov
fwait
imul
pop
inc
xchg
inc
cmp
(bad)
out
jbe
loop
jg
adc
scas
enter
jnp
sbb
jg
sub
dec
pop
cmps
ret
lahf
mov
mov
mov
xchg
push
jp
movs
pusha
mov
bound
or
mov
mov
mov
xlat
inc
and
xor
pop
pop
mov
sbb
cld
rcl
cmps
mov
push
xchg
in
dec
cdq
dec
mov
jmp
pop
mov
inc
mov
jmp
les
push
push
je
les
idiv
jg
xchg
fidiv
loope
sbb
test
lods
rol
shl
cmps
mov
jl
sbb
push
mov
or
iret
cld
daa
jns
sbb
(bad)
icebp
push
lods
inc
aas
unpcklps
xlat
sub
jmp
sbb
inc
xor
xchg
fld
popf
fld
inc
jae
fild
inc
xchg
dec
mov
call
and
cmps
adc
lock
jb
imul
jmp
int
xchg
jbe
mov
scas
dec
push
inc
stos
sbb
jns
bound
sbb
or
xor
cdq
mov
leave
inc
stos
and
pop
aad
sbb
cmp
cmp
mov
push
xor
dec
jo
(bad)
xchg
dec
push
dec
outs
add
movs
in
inc
lock
dec
sar
mov
es
adc
enter
fild
inc
out
cmc
mov
inc
jle
push
inc
shl
mov
jmp
stos
pop
sub
adc
inc
mov
iret
or
outs
dec
std
das
test
dec
lock
cwde
call
imul
inc
retf
pop
fdivr
adc
pop
push
mov
leave
add
adc
add
call
and
xor
or
popf
cli
shl
adc
jae
dec
call
out
shl
hlt
dec
pop
sti
call
daa
(bad)
fmul
dec
fld1
mov
gs
les
cmp
in
ret
sub
xor
das
jmp
clc
mov
(bad)
or
mov
pop
arpl
bound
out
imul
push
popa
stc
lahf
scas
mov
mov
or
sbb
xchg
gs
pusha
aas
stos
push
icebp
arpl
xor
std
lock
movs
jg
popf
addr16
pop
addr16
adc
mov
leave
adc
inc
mov
fstp
test
ins
aaa
xor
ret
pop
movs
add
(bad)
jno
lods
and
push
jnp
xor
lods
mov
xor
dec
scas
and
xlat
mov
daa
mov
lods
dec
cmp
fst
imul
jo
cmp
xlat
cs
scas
sbb
stos
or
rol
ret
pop
leave
sbb
dec
jl
and
hlt
cwde
or
adc
xchg
dec
xchg
or
and
and
mov
pop
cld
cmp
xor
call
lock
stos
adc
dec
xor
jecxz
inc
sub
jl
shr
cmp
es
mov
mov
sbb
in
add
dec
ficomp
jge
or
int3
fs
call
mov
mov
fdivr
dec
cmp
xchg
dec
dec
js
mov
aas
mov
fld
push
jns
dec
in
sti
retf
or
les
dec
cmp
cmp
jmp
add
jbe
lock
jecxz
or
rcr
cmps
ins
mov
xchg
es
push
je
dec
sub
jecxz
mov
and
test
sub
in
push
add
movs
outs
std
jmp
mov
fnstcw
icebp
pop
jecxz
mov
inc
aad
in
mov
fcmovnbe
daa
ss
repz
adc
pushf
push
jno
repnz
xor
fidivr
aas
dec
sub
cdq
fwait
add
popf
xchg
mov
mov
mov
push
and
rol
test
frstor
aad
add
push
movs
push
jg
je
out
cmps
push
popf
enter
clc
cmp
icebp
lea
cmps
rcl
adc
(bad)
pop
cdq
inc
ss
sbb
in
scas
lahf
or
fs
out
dec
mov
xor
cwde
aaa
fwait
test
in
dec
stos
adc
sahf
xor
std
shl
push
mov
aam
mov
rcl
sbb
cmp
call
loop
fidivr
pop
lahf
pop
or
in
daa
sahf
sub
pop
mov
aas
ins
inc
add
sahf
(bad)
repz
cwde
mov
sub
xchg
popf
ror
rol
pop
push
xchg
adc
cmps
push
stc
mov
ss
aaa
add
inc
jb
push
mov
arpl
fcmovne
and
sbb
adc
and
scas
or
lea
pop
mov
add
add
mov
imul
sar
lods
and
stc
push
sbb
pop
sub
jp
repz
pop
sub
mov
jne
stos
ret
or
pop
xchg
and
lea
shrd
add
inc
push
das
mov
pop
cmps
pop
rcl
cmp
mov
jle
sbb
lds
xchg
mov
or
repz
adc
mov
pusha
pop
inc
in
shr
or
int3
popf
mov
rcl
sbb
pop
pop
lea
inc
mov
ins
or
adc
push
ds
(bad)
sub
js
sbb
in
cmps
fld
icebp
dec
sbb
lea
fidivr
push
in
scas
push
gs
inc
jmp
xor
push
push
inc
popf
loopne
pop
int
mov
in
outs
lea
out
les
mov
xchg
and
cli
mov
and
(bad)
repz
xor
push
sbb
xor
rol
ins
fbstp
mov
fscale
retf
sub
shl
cmps
jmp
mov
jae
sbb
lahf
mov
sub
outs
test
jno
jnp
inc
mov
pop
dec
pop
pop
mov
sub
call
add
ds
xor
or
popa
aas
fisub
pop
xchg
mov
adc
sbb
jmp
xchg
cwde
jp
data16
xor
in
ror
rcl
dec
out
cmps
call
clc
cli
or
cmp
pop
outs
aad
mov
dec
add
cli
inc
inc
iret
xor
ror
inc
xor
(bad)
dec
adc
(bad)
repz
sub
stos
jnp
cmp
call
pop
cmp
scas
pop
fidiv
or
rol
sbb
mov
jbe
jmp
push
iret
cmp
ins
inc
add
xchg
mov
rol
or
ret
bound
adc
clc
mov
xchg
fld
fwait
cmp
sub
pusha
push
out
out
mov
mov
sbb
mov
call
sub
loop
inc
call
jg
pop
mov
(bad)
stc
adc
mov
scas
mov
xchg
out
lods
mov
loope
mov
and
pop
inc
ja
mov
jge
mov
xor
js
out
xor
fiadd
hlt
mov
into
sbb
push
xchg
out
pop
sub
cli
adc
test
or
inc
jmp
sahf
pop
xchg
les
and
repz
outs
cmp
test
adc
jg
in
cmp
pop
sbb
and
cmc
xor
scas
cmp
ror
nop
cld
out
ins
push
(bad)
retf
mov
mov
jmp
mov
leave
aam
mov
pop
inc
add
sub
dec
push
xor
mov
cmp
and
ja
jnp
push
xchg
imul
jbe
and
xchg
cwde
popf
inc
int3
outs
cmp
mov
(bad)
fstp
neg
push
fcom
mov
adc
xlat
add
and
aaa
clc
(bad)
in
loopne
jne
(bad)
jle
push
mov
jb
clc
adc
mov
out
mov
pop
mov
add
sbb
sbb
out
sbb
mov
clc
fucomp
cmps
mov
mov
mov
cmp
cmc
jns
push
or
cmps
or
jbe
dec
xor
sub
adc
rcl
pop
and
pop
sub
stos
sbb
adc
rcr
pop
xchg
mov
rcl
in
mov
iret
stos
das
sub
daa
sub
nop
in
jnp
jne
aaa
jp
mov
inc
cmps
aas
dec
int
dec
fsub
push
enter
(bad)
cli
in
jg
(bad)
adc
push
xchg
mov
mov
std
xor
pop
sub
mov
pop
into
mov
test
es
or
loop
outs
xchg
(bad)
pop
pop
call
push
add
dec
das
fdiv
in
jnp
sbb
(bad)
loopne
push
xor
cmp
out
and
xchg
clc
fidivr
mov
or
sbb
mov
sub
cli
loop
sub
pop
mov
retf
xor
cmps
and
scas
in
fistp
mov
jmp
stos
mov
paddw
addr16
icebp
(bad)
(bad)
lss
xchg
lahf
mov
sub
test
popf
mov
(bad)
push
cmp
mov
sub
stc
(bad)
cmp
push
data16
xor
imul
or
push
xchg
xor
ss
jg
push
xchg
jl
add
sti
das
mov
and
popf
lock
fxch
push
fst
jbe
daa
pop
dec
sbb
or
and
fcmovnu
stos
jo
and
add
das
sub
xor
into
(bad)
gs
es
push
adc
dec
stos
dec
jmp
mov
dec
adc
adc
pop
fldz
std
mov
jnp
loopne
imul
adc
dec
cmp
fsubr
or
and
lahf
es
sbb
mov
aad
push
mov
xor
call
pop
push
popa
es
shl
int
fs
mov
test
xchg
sbb
rol
lahf
cmp
jle
push
inc
popa
inc
cmp
cmp
in
adc
sub
mov
or
dec
pop
popf
adc
js
cwde
fsub
cmp
mov
cld
retf
test
lock
mov
std
xor
fistp
mov
mov
mov
dec
mov
push
call
and
lods
(bad)
lock
ficom
and
push
push
in
sar
push
test
repnz
aad
jbe
adc
fnstcw
retf
mov
cdq
movs
mov
inc
sbb
pusha
mov
xchg
(bad)
push
pop
test
pop
pop
loop
test
inc
rcl
iret
adc
cmp
mov
add
push
aaa
fwait
inc
sub
adc
cmp
mov
or
mov
clc
and
mov
iret
lea
jnp
sub
leave
adc
inc
pop
mov
cmps
mov
mov
push
jge
daa
or
cld
mov
jmp
dec
mov
sub
mov
out
fwait
retf
(bad)
lahf
lea
push
xor
xor
fstp
ret
pusha
cld
fst
xchg
inc
loope
mov
movs
add
in
jmp
pop
pop
call
inc
psubusb
jg
repnz
jae
jecxz
ret
sbb
mov
stc
sub
inc
icebp
or
push
and
es
xlat
and
test
xor
fld
cmp
dec
jns
mov
jb
inc
pop
push
bswap
call
hlt
aad
retf
cmc
cmps
popa
push
clc
cmp
and
jg
es
xchg
sub
cwde
push
pop
cld
test
cmps
ret
and
jl
dec
(bad)
adc
cmps
out
jne
add
enter
adc
movs
cmps
(bad)
test
fs
pop
outs
push
xchg
xchg
aaa
inc
xor
add
adc
adc
inc
and
in
dec
int3
pusha
jge
mov
ret
mov
retf
test
movs
mov
jb
scas
shl
sbb
jmp
or
imul
xchg
enter
pop
and
sub
rcl
xchg
imul
bound
add
mov
mov
dec
ret
imul
dec
push
jle
call
add
xchg
loopne
mov
xor
xlat
add
in
dec
xor
push
and
jmp
in
or
xchg
xchg
or
mov
aas
xor
imul
int
lods
sbb
mov
popf
idiv
add
jmp
movs
or
jnp
aam
pop
dec
loopne
push
and
sub
test
movs
and
in
sbb
push
xchg
mov
pop
cwde
or
test
jae
movs
mov
pop
ja
sqrtps
ja
sar
fnstsw
out
not
clc
adc
mov
push
mov
pushf
fs
cmp
iret
(bad)
out
push
mov
fldl2e
ret
fst
es
and
adc
add
into
mov
sbb
scas
dec
lods
stc
scas
and
popf
(bad)
jmp
aam
mov
mov
and
mov
jl
mov
and
in
mov
or
and
dec
arpl
pop
aaa
idiv
imul
push
int
mov
enter
les
cli
sbb
push
jp
loop
push
push
stos
call
pop
vpxor
jg
or
pop
out
mov
dec
xchg
popf
stos
cmp
outs
popa
mov
mov
out
push
mov
ja
mov
pop
mov
je
lds
mov
inc
add
les
dec
inc
fwait
jmp
cwde
xchg
das
ret
push
pop
jmp
xchg
sub
sar
jb
aas
pop
or
adc
fdecstp
gs
ja
int3
test
cmp
fstp
mov
or
mov
mov
movs
and
(bad)
inc
adc
cmp
dec
or
and
stos
cmp
cmp
jne
popf
test
lahf
lea
(bad)
ins
push
sub
in
bsr
cmps
gs
jge
sub
daa
inc
pminub
test
xchg
pushf
or
bound
(bad)
mov
pop
pop
mov
outs
ins
pop
sbb
inc
lea
loope
arpl
xor
(bad)
jp
xlat
xor
mov
gs
sub
adc
lea
mov
dec
and
dec
xchg
or
sbb
or
add
mov
movs
adc
mov
pop
inc
sub
pop
jmp
inc
in
xor
add
test
(bad)
aaa
in
mov
ds
cmp
jmp
sar
lods
jno
cmps
loopne
jmp
jmp
ja
loopne
xor
dec
pusha
lods
cmps
inc
test
mov
or
in
push
pop
dec
or
pop
sbb
ret
nop
or
js
push
fcomp
mov
push
jl
imul
ss
dec
xchg
pop
sbb
adc
fistp
push
sti
xor
jge
mov
dec
ja
adc
test
xchg
sbb
inc
ret
mov
push
jbe
add
test
mov
pop
outs
inc
pop
enter
add
mov
retf
es
retf
repnz
enter
push
cmps
add
gs
loop
push
mov
iret
shl
cmp
popf
cld
push
ret
scas
xchg
adc
sub
mov
inc
in
push
mov
adc
int3
sbb
dec
or
mov
imul
cld
popa
push
in
jnp
or
sbb
movs
psrlw
mov
xchg
(bad)
mov
bound
mul
or
mov
cmps
mov
mov
mov
pop
ins
retf
push
push
adc
retf
jo
add
ror
pop
mov
leave
push
xor
pop
repnz
retf
icebp
fs
xchg
jnp
addr16
dec
aad
sbb
ret
adc
mov
in
mov
ss
ret
clc
retf
xor
mov
(bad)
jbe
retf
add
dec
and
mov
loop
clc
pop
push
sub
rol
sar
int
pop
fnsave
sahf
outs
inc
push
inc
xchg
cmp
and
push
rol
push
call
lea
push
pusha
inc
dec
repz
aas
cmp
mov
or
in
mov
or
xor
mov
mov
leave
mov
call
(bad)
cmc
cmp
sub
out
in
mov
jle
aas
js
or
jne
(bad)
mov
jnp
(bad)
mov
shl
cdq
mov
dec
dec
xchg
popa
xor
xor
sbb
lods
xor
xor
and
mov
sub
inc
fnstsw
lods
add
inc
sti
pop
pop
jmp
lods
push
sbb
imul
sub
jae
jne
add
in
sbb
dec
jno
ss
fs
jg
ins
inc
or
xor
xchg
adc
xlat
lahf
icebp
mov
call
push
mov
repz
outs
jb
mov
push
fs
sub
cli
shl
add
mov
adc
das
stc
mov
sub
xor
inc
push
lods
xchg
push
arpl
shl
pop
test
xchg
and
dec
jno
or
xor
cmps
xchg
test
add
add
outs
add
mov
sti
sbb
inc
out
and
int
xor
int
push
sar
push
jne
popf
cmp
lock
lods
jns
bound
sbb
scas
cmp
xor
dec
leave
cs
mov
mov
jmp
(bad)
ret
fdiv
lods
adc
sub
(bad)
bound
dec
jmp
loope
dec
push
adc
mov
pop
adc
inc
(bad)
imul
es
jmp
stos
dec
scas
mov
ficomp
mov
fnsave
es
mov
mov
ret
cmp
ficomp
adc
xor
and
(bad)
shr
sbb
xchg
sbb
or
cmp
fwait
xchg
rcl
aaa
pop
jge
jne
lods
and
jb
in
leave
mov
jge
and
inc
jmp
push
int3
ss
xor
movs
sti
std
cmp
cmp
clc
pop
rcr
js
or
cmp
or
cdq
mov
pop
out
stos
push
jl
push
pop
cwde
fimul
xor
cmp
and
mov
test
add
lock
sub
fucomip
or
mov
imul
cld
inc
push
lods
hlt
lods
xchg
inc
in
mov
xchg
enter
int
mov
cmps
xchg
cdq
addr16
fiadd
pop
int
repnz
push
adc
loope
movs
stos
and
and
cli
call
out
dec
jb
lahf
ret
lock
xchg
stos
call
lock
dec
xchg
lods
sti
cmp
adc
scas
stos
sbb
test
outs
jbe
add
fwait
and
push
arpl
lods
aaa
lds
data16
pop
ins
shl
push
adc
test
mov
jo
cmps
repz
mov
aam
test
call
dec
fistp
mov
leave
lea
or
mov
inc
push
cmp
inc
and
push
add
adc
pop
sub
mov
pop
mov
(bad)
sbb
pusha
push
js
lea
xchg
inc
mov
or
xlat
cdq
scas
in
das
mov
cmps
xchg
sub
lock
fs
jge
lea
test
js
mov
mov
cli
in
adc
das
xchg
push
pushf
dec
call
jne
push
push
popf
xor
mov
xchg
xlat
mov
shl
fs
clc
push
xor
test
scas
mov
test
mov
jo
cmp
pop
jne
pusha
retf
pop
out
inc
and
loop
push
test
mov
ffreep
fwait
ret
add
leave
dec
mov
aas
ss
mov
and
sbb
mov
mov
(bad)
sbb
sbb
lahf
popa
mov
rcl
mov
stos
mov
adc
add
fadd
or
mov
out
fidiv
mov
js
addr16
push
xchg
mov
lahf
mov
xor
jmp
jge
dec
outs
jns
ficom
inc
sbb
lock
inc
jg
adc
mov
sbb
cmp
gs
xchg
popa
out
push
or
xchg
adc
xchg
hlt
mov
mov
movs
mov
(bad)
sbb
jmp
pushf
(bad)
pop
lds
add
fisub
cmp
movs
bound
push
(bad)
fdivr
idiv
fnstenv
add
mov
push
scas
mov
sbb
ja
mov
xor
in
outs
inc
jp
int
mov
movs
fild
jb
dec
cwde
call
aaa
aas
lahf
add
test
inc
out
push
mov
push
inc
sub
aam
arpl
fwait
cmp
mov
adc
and
sbb
lock
xchg
jnp
xchg
stos
sbb
inc
iret
ror
rol
jp
and
sbb
jnp
or
test
test
dec
mov
sbb
jno
ret
imul
or
imul
loop
in
lds
push
imul
fs
(bad)
mov
mov
je
jns
mov
lods
lahf
mov
shl
gs
sbb
std
scas
sti
clc
mov
xor
test
dec
sub
in
sahf
sti
adc
scas
ficom
dec
add
ja
movs
add
push
or
dec
je
in
mov
jns
mov
(bad)
shr
mov
adc
das
mov
fsub
cmp
lods
retf
pop
and
mov
test
add
push
inc
movs
or
shr
xor
and
xchg
mov
sahf
jns
fistp
jge
ret
sub
in
inc
out
call
xlat
outs
cwde
sbb
scas
cwde
ret
(bad)
sub
and
jae
cmp
xor
outs
test
test
push
scas
jbe
stc
mov
ret
dec
mov
std
sahf
shl
dec
bound
fadd
jbe
fcmovu
mov
inc
je
cmp
fldenv
jns
sbb
jns
jg
or
enter
int3
pop
pop
cmp
adc
test
cmp
loopne
xor
mov
test
cmp
pop
shl
test
call
loopne
cld
pop
sbb
and
push
cmc
jmp
sub
jmp
pop
jae
lahf
jmp
ss
arpl
mov
inc
scas
mov
cmc
pop
jbe
aad
or
add
int3
lahf
ja
cli
repz
push
mov
das
jle
mov
lods
fwait
or
adc
je
scas
daa
add
(bad)
repnz
pop
push
xchg
pop
int
add
into
js
clc
pop
(bad)
mov
lahf
sar
push
ins
dec
icebp
sbb
pusha
sbb
nop
sbb
das
out
add
xchg
fwait
repz
jmp
ret
(bad)
cmp
lea
xchg
jecxz
add
or
mov
cmp
shl
jmp
(bad)
movs
jg
mov
pop
(bad)
xchg
fistp
xor
cli
pop
pop
or
loope
xchg
rcl
push
xor
push
ror
ins
cli
dec
in
push
sbb
(bad)
ror
dec
adc
mov
sub
xchg
(bad)
pminsw
scas
outs
xlat
cmps
cdq
in
adc
cmps
sub
nop
jbe
ins
pop
into
cmc
out
mov
inc
lods
mov
lods
add
add
inc
(bad)
hlt
add
add
neg
jae
test
aad
das
ror
fidivr
dec
mov
je
fild
add
add
(bad)
call
cmps
push
dec
xchg
call
push
in
iret
in
mov
repz
sahf
push
aas
mov
dec
ret
(bad)
push
stos
or
jae
out
inc
lea
les
pusha
dec
loopne
xchg
sbb
push
and
sahf
js
xchg
or
mov
add
ss
imul
repnz
mov
cmp
in
dec
jmp
std
jno
fistp
popa
cld
(bad)
cli
mov
inc
sub
rol
jns
mov
fs
shl
dec
mov
ins
cmp
(bad)
gs
push
shl
dec
and
pop
ds
pushf
dec
adc
clc
and
cmp
loope
pop
jne
psrlw
and
mov
retf
add
jb
ret
add
enter
add
fwait
sub
xor
int
aam
jnp
sbb
mov
pop
data16
ja
(bad)
lods
push
cmp
fild
fidiv
adc
jo
mov
outs
cwde
in
xor
out
ja
clc
xchg
bound
mov
add
or
movq
xchg
and
int
dec
pushf
and
mov
jmp
mov
(bad)
fs
rep
mov
repz
ins
popa
test
ret
or
enter
sbb
sar
int3
inc
mov
mov
std
ja
lds
pushf
add
or
test
cmc
xor
fdivr
ins
stos
push
movs
sub
push
lds
repnz
(bad)
jmp
add
call
sub
ss
xor
icebp
fiadd
xor
(bad)
popa
dec
mov
sub
mov
popa
in
ja
or
shl
add
adc
mov
je
scas
fdiv
fdiv
mov
and
cwde
push
call
inc
(bad)
mov
(bad)
adc
stc
mov
mov
sbb
call
popa
ins
popw
cmc
daa
stos
loop
repnz
push
retf
inc
cmps
int
lahf
sahf
jl
lods
or
pop
mov
or
imul
mov
sbb
ss
mov
shl
rol
mov
test
aad
loop
lods
fwait
aas
mov
fild
sub
mov
cmp
cmps
aaa
cmps
xor
int3
push
cld
cmp
or
das
scas
shl
inc
call
jmp
mov
cmp
shl
in
ds
addr16
push
push
sbb
add
push
and
popf
xchg
inc
ins
je
mov
mov
std
xor
mov
xchg
rcr
jl
enter
mov
mov
mov
(bad)
sbb
in
dec
cmp
test
xor
dec
cmp
jns
stos
xchg
imul
mov
sti
in
fcmovnu
mov
push
sub
add
or
lods
(bad)
popa
pop
fisub
clc
test
mov
pop
adc
xor
adc
jno
idiv
aam
fisttp
cmp
fwait
jge
cld
dec
dec
and
ja
mov
std
inc
lds
shl
pop
(bad)
out
xor
mov
mov
add
jmp
aam
pop
push
xchg
test
lods
xchg
sbb
adc
add
sub
in
xlat
jmp
inc
fimul
out
loop
scas
adc
push
xor
(bad)
call
div
sbb
test
xor
jg
dec
lock
cmp
mov
xchg
xlat
repnz
cmps
xchg
lods
pusha
les
(bad)
mov
pop
outs
scas
sub
into
mov
lock
pop
in
mov
maxps
push
popf
lea
and
pop
xor
push
sub
jge
int3
mov
enter
adc
push
pop
out
inc
ins
xchg
jl
in
enter
test
mov
push
sbb
iret
jne
fild
mov
add
xlat
pop
mov
and
jecxz
and
stos
xor
pop
mov
mov
mov
cs
sub
cmp
add
and
(bad)
cmp
adc
jbe
jle
call
mov
dec
mov
jl
hlt
fisttp
jbe
cmp
inc
test
ror
pop
and
sub
daa
int3
or
or
pop
and
xor
and
cmp
mov
enter
cmps
mov
cmps
xor
stc
daa
in
jno
daa
push
lock
das
jmp
imul
adc
xchg
xor
jae
pop
xchg
fs
aad
jno
jmp
popa
push
addr16
dec
inc
ins
outs
pop
push
mov
and
hlt
aam
repz
push
bound
jno
xor
mov
movs
mov
mov
shl
mov
xlat
adc
add
cld
xchg
aaa
mov
mov
mov
mov
icebp
push
movs
xor
sar
xor
jne
push
xchg
shl
std
fwait
pop
aaa
dec
cmp
push
out
pop
sbb
pusha
pop
lea
sbb
ficomp
push
dec
popa
or
in
pop
jmp
dec
retf
dec
imul
stc
mov
mov
outs
mov
test
dec
loope
leave
retf
and
popa
iret
sbb
sar
xchg
or
mov
cmp
adc
clc
out
adc
(bad)
pop
and
inc
sti
push
sahf
mov
pop
add
(bad)
in
push
push
xor
fdivr
inc
fxtract
mov
mov
add
aaa
jmp
or
(bad)
hlt
ret
aas
mov
sub
pop
pop
into
movs
jmp
ds
or
ins
cs
(bad)
xlat
lock
movs
aas
push
add
les
scas
xor
(bad)
(bad)
xor
push
add
pop
out
sahf
mov
or
nop
inc
movs
sub
rcl
sub
cmc
mov
add
mov
nop
loope
or
dec
stos
mov
jecxz
xor
or
cld
mov
jb
mov
cld
dec
mov
das
mov
mov
mov
jo
sbb
or
movs
sbb
ficom
xor
repnz
test
movs
sbb
sahf
scas
lahf
(bad)
(bad)
pop
sub
test
jbe
sbb
xchg
out
call
lods
leave
or
jae
xor
outs
cdq
or
int3
push
mov
ret
mov
sti
scas
or
inc
mov
jb
inc
and
pop
xchg
mov
scas
push
sbb
and
pop
das
and
neg
jle
mov
xlat
in
cmp
std
shr
ins
clc
mov
pop
sbb
das
mov
push
mov
push
movs
push
cmp
mov
arpl
and
add
push
pop
daa
(bad)
stos
bound
mov
ror
and
ds
pop
sahf
mov
mov
enter
out
daa
mov
ins
mov
pop
pop
popf
fsubrp
call
inc
mov
repnz
cdq
push
and
cdq
out
mov
aaa
adc
loope
pop
lds
int3
add
push
jp
int3
test
mov
mov
push
adc
xchg
test
jno
call
cmps
pop
pop
ss
mov
mov
ss
adc
sub
xchg
in
int
sub
dec
mov
cwde
mov
jnp
pusha
call
jmp
lods
push
dec
push
bound
imul
or
mov
push
gs
add
inc
popa
mov
cmp
leave
out
pop
jmp
or
shr
xor
aaa
xor
imul
sbb
jp
scas
dec
movs
or
jl
jmp
mov
cmc
gs
movs
movs
in
aas
pusha
fnstenv
aas
pop
hlt
add
xchg
jbe
es
xor
pop
jbe
jecxz
test
cmps
iret
iret
clc
fnsave
iret
out
(bad)
dec
stos
cld
xchg
xlat
add
js
movs
adc
jbe
jb
test
xchg
stos
push
sub
or
leave
sub
es
lock
xor
push
icebp
mov
sub
mov
cmp
xchg
pop
sbb
mov
ja
lea
aas
cmp
jl
mov
dec
adc
ins
sub
rcr
cwde
aad
push
add
mov
xchg
xchg
out
sbb
sub
jbe
xor
mov
outs
inc
xor
adc
lock
push
jno
sub
test
pop
in
repnz
aaa
mov
rcl
cld
push
add
pusha
mov
arpl
ret
sbb
sub
ins
push
jb
inc
sub
fld
mov
test
or
ret
dec
aaa
psrlw
in
stos
xchg
mov
mov
icebp
inc
cmp
xchg
imul
pusha
ins
mov
sbb
clc
xor
add
iret
mov
xchg
pop
icebp
leave
fst
xor
(bad)
inc
add
stc
nop
loopne
lahf
push
mov
int
cmp
call
cmp
sti
lods
mov
stos
cmc
cmps
jge
fwait
mov
ja
pop
jnp
fidivr
test
add
cmps
cmp
mov
mov
mov
pop
fnsave
or
ficomp
das
and
mov
std
dec
movs
xchg
loop
shr
xchg
sub
ins
movd
in
rol
loop
inc
pushf
loop
jle
push
repnz
call
sbb
out
ret
add
lods
aaa
movs
in
fsub
or
push
inc
mov
fidiv
shl
lea
xchg
bound
push
fild
sar
shr
push
ret
ret
add
in
jnp
shl
lods
push
pop
aad
test
test
fbstp
push
and
rcr
xchg
in
push
jbe
(bad)
push
push
ds
(bad)
sbb
scas
call
lahf
mov
jmp
outs
lock
or
adc
sbb
(bad)
cli
push
cs
std
sar
dec
pop
sub
pop
out
(bad)
mov
pop
je
ins
call
mov
mov
iret
jmp
or
loope
pop
pop
aas
aad
outs
shr
cmp
and
adc
jl
or
or
fwait
xlat
out
gs
enter
hlt
or
sbb
shl
in
mov
aaa
push
ja
and
adc
jmp
mov
in
rcl
je
push
test
dec
movs
jbe
pop
pop
mov
xor
mul
setno
je
fwait
arpl
data16
cld
dec
mov
retf
rcl
fisub
jp
push
push
rol
inc
test
in
and
ror
cmps
jns
cmp
sbb
inc
pushf
jecxz
(bad)
into
fisttp
cli
test
inc
nop
pop
pop
hlt
fistp
inc
mov
iret
movs
int3
push
push
xchg
mov
add
sbb
mov
sub
add
adc
iret
das
sbb
nop
dec
pop
not
aad
arpl
mov
mov
out
cs
xchg
ja
sbb
call
sbb
pop
xor
sar
xchg
loopne
gs
gs
mov
pop
(bad)
mov
sub
repz
cmp
shr
push
xor
aad
sbb
out
dec
and
add
xor
sub
adc
ja
pop
inc
loop
test
cmp
jmp
outs
ins
ret
leave
aaa
stos
push
loop
add
or
test
retf
test
push
or
mov
and
pop
pop
bound
popa
retf
fild
xchg
dec
ds
(bad)
rcl
cdq
push
jmp
arpl
mov
test
jmp
and
jmp
pop
xchg
mov
sar
ds
cmps
aam
pop
cld
jmp
retf
jae
xor
retf
mov
ds
out
aas
push
daa
fs
retf
daa
pop
rcr
popa
inc
mov
pop
(bad)
ins
sbb
pop
mov
cmp
int
mov
or
daa
jle
add
dec
and
mov
xchg
sbb
xor
call
daa
add
popa
neg
mov
inc
pop
and
out
movs
lahf
fwait
jno
dec
cmp
arpl
fnstcw
aad
push
lods
or
sbb
inc
daa
lahf
add
out
add
int
ret
dec
push
in
test
push
int3
xor
mov
lea
mov
add
sbb
stc
jecxz
(bad)
cld
and
ret
sti
js
cmp
jecxz
mov
xchg
pop
sub
arpl
or
sbb
fs
adc
ficom
fist
pop
adc
cdq
inc
or
mov
pop
stos
ret
cmc
dec
pop
pop
fisubr
imul
and
sub
mov
les
es
pop
arpl
retf
mov
icebp
pop
mov
push
mul
mov
sbb
push
inc
shr
jecxz
sub
add
add
lds
jp
xor
xor
inc
(bad)
stos
repnz
adc
xlat
movs
or
fnstenv
ss
sub
add
stc
out
ret
pushf
inc
push
sub
pusha
mov
jg
add
inc
pop
or
fild
dec
cli
fimul
std
push
add
(bad)
ret
call
xor
pop
or
inc
(bad)
outs
das
ror
jmp
cld
mov
int
sub
jge
xor
stc
mov
mov
loopne
fmul
sbb
xlat
(bad)
jl
mov
or
rcr
lea
xor
xchg
rcr
int
or
inc
mov
xchg
jmp
and
cmp
and
or
xor
or
mov
dec
and
call
fstp
mov
ins
mov
cli
(bad)
aad
fisub
cmps
aad
ret
sub
mov
adc
ret
fcom
add
pop
mov
xor
lods
xor
jmp
pop
retf
xor
scas
mov
push
cmps
(bad)
push
iret
jne
aaa
push
(bad)
shr
(bad)
fnstcw
ins
fidiv
rol
mov
movs
outs
xchg
out
and
dec
pop
imul
mov
xchg
ins
fs
popf
nop
cmp
pop
jmp
cmp
sbb
out
and
dec
sbb
movs
pop
cmc
fcom
aaa
mov
jg
retf
xor
push
pop
fs
jae
mov
cmp
push
aam
mov
add
icebp
sbb
(bad)
xor
out
mov
lock
dec
ins
repnz
lds
cmps
cmp
sub
stos
or
cmc
sub
sbb
push
pushf
fist
pop
dec
retf
inc
sub
or
aas
clc
das
in
gs
dec
cmps
dec
push
mov
mov
cmc
daa
mov
lods
mov
repnz
push
push
adc
and
mov
clc
jne
in
mov
aas
push
cmp
push
adc
ror
mov
pusha
sub
mov
mov
jnp
(bad)
cli
loop
stc
sbb
in
mov
add
xor
add
or
push
les
adc
mov
shl
push
call
dec
xchg
pop
and
fs
(bad)
xchg
test
out
pushf
xor
aam
fidivr
bound
movs
or
mov
test
loop
mov
jo
cmp
mov
movs
cmp
je
fadd
in
js
add
lds
push
pushf
xor
or
xchg
int
rol
sar
pop
xchg
cmp
pop
arpl
cs
mov
ds
les
jns
int
or
(bad)
lods
dec
xlat
pop
out
pop
add
push
je
xchg
outs
mov
push
pop
mov
push
test
je
add
inc
jne
mov
(bad)
in
gs
stos
sbb
jb
(bad)
sahf
enter
pusha
aaa
push
dec
xor
xor
shl
adc
cmps
cmps
mov
int
mov
cs
jno
movs
xchg
shl
pop
sbb
lea
add
movs
xchg
fs
int3
cld
add
xor
jecxz
cmp
ret
aad
addr16
jo
jl
stos
jg
(bad)
std
and
pop
pop
mov
sub
and
int3
jp
aad
int
cli
mov
adc
adc
sti
xlat
(bad)
jnp
mov
es
dec
jb
lods
shl
sub
out
dec
fmul
into
aaa
(bad)
push
addr16
test
stos
cli
add
xchg
outs
pushf
push
sub
pushf
xchg
fnstenv
ja
jne
jnp
(bad)
jmp
xchg
add
jb
(bad)
repnz
sahf
and
mov
add
xor
sbb
lahf
adc
shl
frstor
mov
xor
std
jge
pushf
ja
dec
cmps
test
or
xchg
mov
push
adc
jae
retf
inc
push
or
shl
add
sbb
push
mov
test
mov
pop
or
ins
(bad)
xor
jge
(bad)
in
inc
push
dec
inc
pop
mov
and
push
in
outs
ins
push
or
cmc
fidiv
dec
and
add
mov
(bad)
test
mov
xchg
aas
test
jbe
data16
push
xchg
mov
pop
in
mov
ins
mov
in
xchg
fsub
dec
mov
aad
inc
mov
nop
retf
sbb
pop
int3
jns
inc
imul
fcmove
or
cmc
hlt
les
and
mov
imul
pushf
pop
adc
(bad)
xchg
jo
shl
xchg
push
retf
sbb
in
inc
adc
pop
stos
lds
call
pushf
cmp
jne
aad
mov
jno
or
pop
inc
jg
xlat
jbe
push
jg
dec
add
int3
aam
or
cwde
(bad)
cmp
mov
retf
sbb
(bad)
or
jno
xchg
pushf
jmp
sbb
dec
push
mov
inc
dec
xor
xchg
icebp
jb
lea
in
pop
pop
dec
test
pop
mov
dec
adc
js
pop
hlt
sub
(bad)
push
push
pop
jno
sahf
pushf
mov
or
iret
cmps
jl
mov
xor
jp
shl
ss
inc
mov
mov
sbb
ret
fucomip
out
fisubr
lahf
jl
fisttp
sbb
sub
je
enter
in
leave
pop
mov
dec
xchg
mov
dec
retf
outs
sti
add
sbb
push
neg
mov
fld
xor
fmul
dec
xor
dec
loope
aad
mov
and
xor
retf
or
rcr
ror
mov
loopne
sub
stos
cmp
rcl
pop
(bad)
in
cvtps2pi
movs
push
stos
xchg
in
pop
mov
fwait
bound
inc
push
lods
inc
movs
adc
adc
add
or
es
stc
pop
inc
dec
push
jg
add
mov
sub
cmp
inc
scas
xor
repz
push
sti
and
call
lods
(bad)
mov
adc
dec
or
cmp
add
repnz
pusha
fstp
push
inc
adc
call
push
nop
enter
hlt
cld
scas
repnz
clc
div
in
xor
rol
retf
adc
mov
pop
add
mov
jmp
or
dec
fild
enter
mov
mov
adc
add
adc
xor
sbb
or
and
int3
(bad)
mov
cwde
cli
sub
adc
out
out
cmc
and
dec
inc
sti
ror
xor
lds
mov
call
addr16
jp
xor
cmps
inc
pop
sar
jmp
add
adc
xchg
mov
retf
xor
sub
test
mov
push
cwde
sbb
sbb
mov
adc
aad
arpl
imul
fwait
ret
mov
sub
cmps
retf
xchg
sti
pop
push
and
(bad)
jno
test
scas
and
push
js
shl
test
mov
inc
fld
or
(bad)
and
out
cmp
arpl
repnz
push
pop
adc
mov
fdivr
pop
inc
cdq
cmp
ret
leave
fdiv
mov
push
inc
ret
movntq
js
hlt
inc
jo
inc
pop
push
jb
or
cwde
mov
sti
data16
shl
mov
push
loope
adc
imul
ins
dec
shl
ror
fimul
inc
jecxz
into
dec
inc
movzx
lds
mov
mov
test
xchg
cwde
scas
push
cs
push
movs
ja
jl
lods
xchg
mov
push
mov
cdq
sub
mov
stos
pop
hlt
cmp
das
js
push
push
call
xor
add
pop
or
adc
xor
jne
(bad)
jno
rcr
add
push
lahf
test
lahf
arpl
imul
cmp
cmp
or
iret
lock
loope
(bad)
xchg
dec
scas
or
mov
xor
sar
stos
loopne
push
test
and
adc
arpl
mov
add
or
mov
mov
pop
popa
in
inc
push
mov
lods
ins
test
mov
pop
push
int
iret
mov
ja
frstpm(287
jmp
mov
iret
xlat
sbb
push
in
call
sub
xchg
pop
ja
mov
push
jmp
lea
push
aam
aaa
int
cmp
test
data16
(bad)
out
(bad)
push
arpl
test
xchg
cmp
stc
jno
cli
xor
ja
(bad)
std
xor
(bad)
icebp
les
das
mov
(bad)
dec
xor
aam
(bad)
pop
loop
cmc
ret
test
retf
mov
icebp
adc
retf
movs
aam
(bad)
jns
push
popf
ror
fsub
stc
out
or
ret
pop
pop
mov
bswap
push
in
shl
sti
jge
xor
fst
or
lods
or
push
mov
movs
jae
push
rcr
dec
mov
mov
cmps
leave
arpl
xchg
push
xor
push
xor
pop
es
xchg
push
adc
mov
ins
xchg
jmp
test
adc
pusha
in
xor
rcl
ss
jae
dec
xor
sub
cwde
loope
xor
lahf
dec
in
(bad)
js
out
push
scas
out
xchg
add
outs
lods
je
jmp
pushw
add
pop
inc
(bad)
ficom
shl
fdivr
mov
fisttp
ds
ds
xchg
jb
mov
out
shr
repnz
pushf
mov
arpl
mov
call
inc
imul
sbb
mov
cmp
push
dec
ins
arpl
inc
aam
pop
push
mov
cmp
jnp
cdq
xor
(bad)
in
pop
xchg
xlat
adc
mov
xchg
mov
(bad)
jne
imul
push
xchg
xor
mov
lea
xchg
jp
mov
aaa
(bad)
sbb
pop
sub
jns
lea
pop
mov
and
inc
test
cwde
jg
and
(bad)
call
sbb
adc
cwde
into
and
cdq
xchg
push
or
mov
popa
add
or
inc
jmp
idiv
jb
cmp
adc
bound
mov
pop
sub
jmp
lock
arpl
imul
xor
push
or
jmp
in
aaa
ins
sub
(bad)
icebp
fcomp
xor
xor
mov
and
sbb
js
lock
cld
or
aaa
repz
mov
cwde
sbb
std
cmp
xor
es
rol
aad
and
pop
test
scas
dec
jns
retf
loopne
pop
sbb
(bad)
jo
jecxz
push
dec
mov
ret
mov
popa
inc
xchg
movs
fidiv
test
inc
pop
cmp
ss
pushf
xor
(bad)
dec
sbb
inc
stos
mov
lods
sbb
and
test
pop
in
ins
sbb
cld
sbb
jno
fild
add
dec
stos
xor
or
add
in
push
fsubr
ds
ja
cld
fild
mov
rcl
inc
dec
shr
pop
inc
(bad)
std
fisubr
jb
mov
imul
imul
inc
dec
test
retf
aas
jecxz
cmp
inc
and
sti
mov
jb
ins
(bad)
lds
xchg
ins
inc
inc
shl
mov
mov
and
je
into
dec
movs
pop
push
add
sub
mov
ja
dec
inc
(bad)
fbld
mov
mov
cmp
mov
movs
push
nop
pop
imul
retf
mov
stos
out
inc
(bad)
jno
cli
adc
test
sub
cwde
jmp
push
dec
jg
cwde
cmps
xor
(bad)
cmp
ins
jg
out
ins
and
and
mov
dec
in
es
das
cmc
mov
push
mov
rol
mov
jp
lahf
mov
(bad)
xor
sbb
ret
sti
test
xchg
test
out
(bad)
adc
bound
adc
lds
mov
mov
(bad)
sbb
adc
adc
mov
add
je
and
es
pushf
aad
fst
repnz
retf
repnz
sbb
mov
mov
sub
js
sub
jo
adc
push
fld
sbb
vmovaps
ins
sahf
inc
hlt
pop
push
ds
push
lahf
movs
std
fistp
dec
outs
push
xchg
cmp
xchg
imul
add
mov
cmps
int3
pop
outs
clc
cmp
call
xchg
ds
out
inc
cmps
repz
imul
out
push
lods
lods
imul
ja
mov
or
sub
gs
test
cmp
lea
lock
mov
es
push
cmps
push
add
sub
gs
call
lock
pop
sub
pmullw
test
sub
call
cli
mov
jne
hlt
ret
(bad)
mov
xchg
jecxz
jge
jmp
fiadd
mov
push
int3
call
sbb
xchg
push
ss
fdivr
cmp
push
xor
cmp
adc
lods
bsf
imul
dec
sti
cmp
cmc
mov
ins
pop
or
cmp
xor
(bad)
mov
mov
bsf
in
pop
repnz
mov
xchg
in
gs
dec
dec
cmp
rcr
movs
cmp
xor
add
in
(bad)
xor
in
out
cmc
add
jecxz
dec
aad
cmp
xchg
jb
inc
aad
ds
imul
adc
mov
or
push
inc
popf
scas
call
lock
addr16
mov
stc
retf
xchg
jp
les
cwde
or
ret
pop
pop
dec
add
lods
je
pop
mov
test
mov
fist
jo
addr16
sbb
pop
scas
or
fwait
and
dec
sbb
add
retf
mov
nop
int3
cmp
mov
push
jae
add
adc
mov
push
xor
call
fst
mov
retf
jle
mov
sbb
shr
pop
ret
xor
(bad)
aas
loope
mov
lods
sbb
cmc
cld
sti
mov
std
nop
mov
jb
xchg
movs
add
jle
or
mov
lds
lods
jge
or
jns
jne
fidiv
sub
add
mov
arpl
xchg
aad
lds
add
pushf
adc
movs
mov
in
test
test
ds
jg
pop
sub
test
cmp
imul
jb
pop
je
and
sub
dec
jno
cmp
sub
add
imul
jle
(bad)
ror
cmps
into
xchg
xchg
aam
adc
push
imul
jecxz
adc
cmp
mov
repnz
sbb
cmps
push
dec
aaa
mov
ds
dec
stc
cmp
pop
aas
paddb
jb
push
bound
(bad)
jle
dec
adc
inc
cmp
xor
dec
mov
cmps
cmp
div
pop
adc
adc
out
cmp
adc
cmps
jns
test
xchg
(bad)
bound
jnp
mov
or
xor
dec
aad
fild
xor
call
and
in
ja
or
push
(bad)
leave
in
popa
xchg
xor
mov
rol
xlat
xor
je
sbb
in
outs
aam
add
stos
jno
rol
sbb
push
test
rcr
ror
pop
add
adc
xor
in
adc
pop
sbb
daa
retf
and
cmp
call
stos
sahf
dec
inc
xchg
xlat
(bad)
iret
cdq
xlat
stc
sbb
div
fst
dec
push
sbb
in
pusha
retf
sti
xor
fimul
inc
mov
or
and
mov
pop
jmp
movq
mov
jmp
movs
je
sbb
jne
in
psllw
or
jns
xchg
dec
and
repnz
enter
pop
or
(bad)
adc
push
nop
loop
lock
or
sub
pop
add
mov
mov
outs
(bad)
leave
cmp
movs
mov
fldl2e
btc
shl
mov
test
in
jl
jecxz
loopne
iret
fwait
inc
es
push
(bad)
in
xchg
push
repz
leave
movs
cmp
es
add
and
fst
jbe
mov
movs
jno
and
(bad)
adc
scas
ja
(bad)
sti
sbb
or
inc
jno
sbb
test
cmp
dec
dec
pop
sub
mov
adc
es
cmp
jge
inc
outs
xchg
lods
daa
adc
jno
mov
retf
pop
imul
xchg
out
iret
fs
frstor
ins
in
ja
mov
jecxz
mov
sbb
or
aas
push
movs
push
mov
cmp
xchg
ror
jbe
ins
push
adc
adc
(bad)
adc
cmps
jnp
push
push
les
adc
in
rcl
ja
inc
sbb
inc
(bad)
ret
dec
vcvtps2dq
call
mov
mov
dec
call
add
test
inc
sub
jbe
and
pop
fmul
xchg
pusha
mov
jno
hlt
add
mov
aaa
mov
call
ret
pop
sub
pop
std
ror
jp
push
fistp
jmp
dec
out
icebp
xor
mov
popf
cmp
out
addr16
js
jp
push
adc
out
lods
add
sub
jmp
xchg
push
push
push
pop
add
jb
sub
cmps
cmp
fs
and
xchg
pushf
dec
leave
mov
jecxz
sbb
cmp
sub
lahf
outs
mov
jne
hlt
bnd
mov
out
outs
sti
loop
imul
xor
ins
push
sub
cmp
jae
int3
cld
(bad)
mov
xor
dec
jle
xor
jle
pusha
xchg
stos
fild
stc
dec
not
sbb
mov
pop
retf
test
(bad)
in
or
xchg
retf
or
sbb
bound
mov
add
outs
mov
xor
lahf
jb
cmp
and
jne
mov
ins
xchg
and
or
imul
push
mov
ret
je
sbb
adc
test
lods
in
cwde
mov
mov
xor
fnstenv
mov
push
dec
fcomp
fsubrp
jmp
repz
push
scas
out
dec
inc
push
push
dec
cdq
push
inc
popf
retf
es
sub
inc
jmp
sbb
lea
hlt
add
leave
mov
bound
ficom
xor
iret
jae
push
push
or
dec
jns
push
cmp
or
inc
and
xadd
outs
dec
add
jl
sub
shl
test
jo
shl
(bad)
fwait
or
scas
push
psllq
inc
pop
add
nop
ins
inc
push
outs
and
xchg
and
out
dec
mov
fstp
ret
ret
rcl
jge
cmp
mov
sub
pop
cmp
sahf
adc
outs
into
out
sub
pushf
mov
stc
and
pop
stc
pop
ror
jb
outs
adc
sbb
jnp
jnp
aaa
pop
test
mov
mov
movs
push
pop
push
fsubr
jmp
repnz
imul
mov
sub
shl
imul
mov
push
cmp
cmps
dec
add
out
out
dec
out
pop
cmp
sbb
push
mov
in
add
push
pusha
cmp
cmp
test
xor
push
sbb
adc
ud1
popa
or
cwde
sbb
cmp
adc
mov
fldenv
inc
lahf
mov
loope
add
mov
and
pop
addr16
push
dec
pop
mov
push
cmp
(bad)
icebp
aam
jp
or
loopne
push
nop
jno
xor
iret
rep
icebp
loop
(bad)
aam
mov
or
adc
sub
add
test
shr
fidivr
mov
push
or
xor
scas
push
test
bound
pop
sub
mov
mov
mov
loope
cmp
fwait
sub
bound
cmp
push
ja
or
(bad)
push
xlat
enter
or
xchg
mov
xor
sub
cli
mov
push
das
and
sub
(bad)
loopne
lods
jae
sub
adc
and
inc
int
bnd
shl
test
xchg
adc
mov
das
retf
and
jg
scas
mov
fbstp
jg
cli
mov
or
addr16
dec
mov
pusha
aaa
sub
lods
push
sub
loop
aad
arpl
mov
or
push
fadd
aam
mov
sbb
(bad)
stos
(bad)
test
out
push
ret
cld
ror
js
jns
inc
lock
aas
jae
adc
enter
fs
pop
mov
in
daa
inc
lds
call
mov
and
push
push
bound
or
and
or
js
inc
lea
sub
stc
mov
push
movs
cmp
ror
rcl
pushf
mov
xchg
cs
cdq
mov
in
sbb
rcl
jmp
mov
mov
mov
lods
cmc
inc
xor
xor
mov
push
xchg
dec
dec
ret
jmp
sahf
mov
pop
add
and
dec
rcl
sti
int
repnz
push
adc
imul
in
cwde
ficom
retf
pop
or
sub
mov
sub
rcl
cmp
cdq
ret
test
or
mov
mov
xchg
add
jno
stos
or
mov
sub
js
fs
loop
mov
ins
repnz
lock
movups
jno
icebp
icebp
(bad)
cmc
mov
repz
dec
out
aad
add
repz
jge
mov
stos
push
fiadd
outs
inc
mov
fcmove
rcl
js
rcr
ret
mov
out
or
sbb
add
xchg
pop
or
fcom
mov
nop
shl
(bad)
jnp
or
gs
or
pop
mov
xor
dec
aad
jp
pusha
xlat
jge
pushf
xor
movs
mov
push
mov
jmp
clc
in
ja
sbb
icebp
sbb
xor
mov
jmp
push
xor
cs
push
dec
xlat
xor
lock
or
add
ret
mov
dec
ds
das
cli
adc
daa
nop
mov
push
push
call
jae
repz
xor
loopne
inc
xor
dec
stos
push
es
push
xor
dec
xor
clc
std
movs
fwait
ins
mov
repz
fwait
cmc
push
mov
cdq
ja
or
daa
jl
fs
ja
adc
repz
stos
mov
jmp
repz
push
std
imul
pusha
pushf
mov
jne
dec
(bad)
cs
pop
js
and
mov
ins
(bad)
hlt
std
int
mov
mov
dec
stos
nop
repz
cmp
mov
jnp
mov
dec
outs
inc
neg
mov
pushf
sahf
mov
or
and
(bad)
or
xchg
fidiv
and
or
cld
or
scas
pop
or
push
jbe
aaa
pop
jmp
ins
jp
push
cmp
ret
out
xchg
repz
rcr
xor
das
push
pop
gs
inc
aaa
ret
xchg
push
jne
adc
sub
pop
fdivrp
cmovp
push
into
xor
jbe
bnd
shl
data16
xlat
jecxz
lock
mov
bound
lods
outs
gs
mov
sbb
sar
inc
xor
sahf
mov
add
cmp
popf
dec
and
hlt
test
pushf
adc
ins
iret
out
jp
das
xchg
mov
fidiv
mov
add
(bad)
(bad)
dec
jle
push
sbb
pop
stos
pop
test
cmp
arpl
mov
pop
dec
fcmovne
and
pusha
nop
inc
push
nop
(bad)
mov
add
sbb
mov
aam
dec
mov
int
push
push
pop
in
dec
out
mov
add
xchg
retf
(bad)
popa
scas
cdq
dec
cld
cdq
xor
xor
pop
fidivr
xor
add
cmps
daa
jmp
imul
test
dec
or
test
sti
xchg
js
sub
mov
or
call
stos
(bad)
cmc
lahf
push
xor
aaa
pop
movups
ret
dec
dec
fcomip
leave
(bad)
fwait
pop
mov
push
sub
addr16
mov
mov
sub
ins
imul
out
sub
mov
cmp
test
(bad)
je
pushf
push
leave
push
stos
cmp
mov
data16
dec
adc
xor
inc
mov
cdq
not
lods
inc
or
dec
loope
add
jb
jo
sbb
adc
in
lock
popf
stc
jl
retf
or
bound
imul
adc
fldcw
mov
daa
xchg
sub
lock
fcom
cdq
and
xchg
dec
sub
cli
and
inc
and
mov
mov
mov
fdivr
jb
jmp
mov
mov
lahf
cmps
les
inc
dec
and
loop
jecxz
jmp
cmps
ret
pop
sub
push
mov
push
xor
out
(bad)
push
mov
xor
das
pop
fdivr
fsub
and
xchg
fwait
xchg
out
sbb
push
fwait
in
cmp
dec
arpl
dec
mov
jne
rol
loop
pop
js
fimul
rcl
mov
or
iret
mov
dec
lea
loopne
push
pop
jle
fcom
jae
adc
and
fcomip
jns
push
aam
stos
scas
cwde
jg
jle
fwait
scas
xchg
loopne
sar
cli
cld
push
pop
dec
lods
lds
cs
lahf
mov
mov
cmp
mov
fwait
inc
or
test
jg
mov
add
adc
inc
mov
in
cmp
add
jg
cs
ds
ja
mov
fmul
or
dec
mov
fadd
jb
adc
aad
add
xchg
pusha
xor
fwait
jl
dec
xlat
js
push
and
jecxz
add
and
out
pop
out
jle
(bad)
in
jmp
xor
xor
jb
pop
mov
lods
cmps
xchg
cmp
jae
ins
aaa
pop
jo
cmp
xchg
js
es
call
xor
push
fwait
pop
(bad)
mov
call
addr16
adc
xlat
mul
xchg
mov
rcr
mov
cld
or
outs
mov
adc
das
add
fadd
cwde
call
ret
push
loopne
and
jmp
pop
and
push
fsubr
out
aaa
push
das
aaa
popf
loope
or
iret
(bad)
(bad)
popa
and
lea
cmp
inc
pop
shl
xchg
and
sbb
mov
inc
mov
lods
rcl
cmp
and
call
or
pushf
cwde
es
aam
adc
loop
sbb
repz
pop
fidivr
mov
mov
jg
scas
cmps
cmp
jb
bnd
sbb
mov
call
push
mov
push
clc
mov
stos
xor
add
test
jp
retf
mov
shl
ss
daa
cmovb
arpl
fdiv
call
stos
cmp
cli
dec
pop
mov
in
cmp
pop
or
stc
jno
jae
cmp
mov
sub
and
mov
int
into
cmp
cdq
cmp
aam
out
daa
out
addr16
es
mov
(bad)
pop
push
dec
ja
in
push
call
xor
ficom
loopne
cmps
lods
leave
popa
add
jg
lds
or
retf
xchg
cli
stos
pop
mov
sbb
xchg
test
loope
outs
push
outs
sub
xor
cmp
add
call
mov
mov
jle
stos
xlat
jae
fbld
lock
mul
jp
test
jge
scas
pushf
cmp
push
cmp
arpl
cmps
cld
int
push
sbb
xlat
jp
xlat
scas
jmp
retf
ds
mov
mov
pop
xor
add
ins
push
int3
ret
imul
retf
ret
adc
in
mov
push
xor
dec
icebp
outs
call
sbb
jbe
sub
pop
stos
add
dec
fist
inc
xchg
imul
add
or
stos
push
mov
xchg
cmp
mov
sub
add
add
out
nop
je
outs
adc
dec
adc
in
jge
icebp
push
outs
aam
inc
(bad)
mov
lea
and
aas
aas
cmc
dec
imul
push
daa
cwde
ds
(bad)
fistp
retf
mov
stos
mov
add
and
xor
add
and
cdq
inc
add
mov
jp
scas
(bad)
and
setno
mov
test
lods
lds
ficomp
inc
icebp
outs
shl
jmp
and
arpl
lods
push
fsubrp
cwde
cmove
jbe
inc
cmps
jle
sbb
mov
mov
push
xchg
(bad)
push
hlt
jno
ds
inc
or
inc
cmps
test
call
lahf
and
ins
push
call
setge
jl
lea
xchg
mov
mov
ret
mov
pop
retf
je
daa
shl
adc
add
lea
adc
std
fbld
mov
fidivr
out
mov
cmps
cmp
mov
pop
or
pop
mov
mov
xchg
jp
pop
push
outs
inc
ret
aad
sbb
jge
shr
popf
fxch
fst
sahf
mov
ja
test
dec
mov
cs
out
(bad)
popa
or
or
ins
movs
sub
push
mov
ds
aaa
sbb
jp
out
inc
je
retf
push
call
xchg
xchg
xor
retf
mov
jo
mov
sti
cmp
neg
jae
dec
and
sub
repnz
push
sbb
outs
inc
movs
test
xchg
test
mov
cdq
int
mov
cmp
mov
mov
int
jnp
xor
jo
mov
ror
mov
fs
call
mov
adc
out
and
push
xchg
arpl
dec
repz
cmp
sub
movs
scas
mov
add
push
test
cmp
leave
fsub
and
lock
mov
stc
cmp
arpl
shl
and
popf
mov
mov
in
inc
mov
push
inc
test
loope
inc
jo
xor
mov
cmp
(bad)
fdiv
xor
lds
ss
shr
ins
sbb
ins
jl
lods
and
out
xchg
push
sbb
jne
(bad)
or
iret
inc
xor
pushf
or
or
mov
mov
dec
stos
mov
repz
xchg
mov
dec
inc
fcomp
popa
push
ja
cmp
mov
push
xchg
and
movs
aas
mov
dec
sub
push
cld
adc
out
pop
outs
mov
dec
stos
into
pop
cmps
enter
out
cld
ss
pop
cmp
xchg
jp
sbb
adc
sub
pop
push
out
mov
dec
ins
push
fcom
dec
arpl
dec
ret
add
add
(bad)
fnstenv
xchg
xor
imul
pusha
js
adc
retf
test
or
inc
mov
test
adc
lods
sbb
std
ins
into
cmp
stos
in
hlt
inc
scas
dec
retf
jo
in
or
das
or
ror
jno
jns
mov
dec
or
mov
cmp
shr
add
push
pop
(bad)
leave
adc
aas
out
clc
loop
pop
inc
cmp
les
add
pop
(bad)
iret
pop
cmp
push
or
mov
sbb
shl
mov
ss
ficomp
addr16
outs
push
stos
je
jb
test
cmp
bound
lods
std
pop
jmp
inc
pop
int
mov
stos
les
pop
mov
dec
jg
dec
pop
or
enter
mov
pop
rol
or
sbb
mov
pop
out
jno
ins
vmread
aas
mov
(bad)
push
dec
inc
pop
xchg
or
iret
imul
ds
sar
mov
sbb
jne
test
inc
pop
stc
mov
xlat
mov
scas
imul
inc
xor
je
jo
push
addr16
mov
cmp
xor
repz
js
inc
jmp
daa
pop
add
(bad)
pslld
jle
pop
test
loop
or
loopne
repnz
int3
and
imul
push
xor
add
push
cmp
dec
rol
fcomp
(bad)
jl
dec
out
es
in
aaa
int3
popf
ror
in
adc
inc
rcl
jge
push
pusha
cmps
nop
test
pop
pop
sbb
frstor
xchg
push
ins
dec
push
fsubrp
jbe
movs
(bad)
cmps
(bad)
xor
push
mov
jae
jb
dec
dec
adc
pop
mov
or
movs
addr16
leave
out
mov
xchg
dec
jno
or
adc
mov
cmps
sub
cmp
pop
lods
lods
dec
pop
scas
fs
xor
jle
and
push
popa
(bad)
and
adc
mov
jae
push
mov
icebp
add
call
add
push
cdq
into
data16
cdq
sub
out
aam
pusha
jne
inc
div
mov
daa
cmp
sub
sub
inc
call
mov
data16
ja
pop
adc
push
jno
mov
cmp
or
jle
(bad)
and
das
xchg
sub
mov
in
push
adc
icebp
test
lods
stc
clc
push
jmp
or
pop
stos
pop
(bad)
cmp
popa
mov
cmp
mov
inc
ss
and
inc
loop
(bad)
xor
aas
mov
mov
push
adc
mov
scas
jmp
sub
imul
fisub
leave
aam
push
jno
jns
mov
add
xchg
(bad)
loop
mov
out
add
mov
retf
push
cld
rcr
and
test
(bad)
pop
mov
push
das
lock
inc
add
ja
aaa
cmps
add
jmp
loop
out
sub
rcr
push
cmps
sbb
and
test
test
arpl
fs
cmp
adc
and
cdq
xor
ret
loope
cmp
sti
mov
repnz
lds
xchg
cdq
jmp
imul
test
dec
pop
xchg
loopne
push
outs
shl
pop
rdtsc
pop
scas
rcr
in
sbb
jne
icebp
mov
and
stos
test
retf
jmp
mov
mov
mov
pop
popa
js
or
push
lea
std
adc
clc
cmp
cmp
fsubr
lds
mov
jp
adc
(bad)
xlat
push
into
and
mov
xchg
push
in
ins
mov
lea
xchg
pop
jb
cmc
xchg
jg
adc
xchg
or
std
mov
cli
je
(bad)
sbb
dec
cmp
out
xchg
lock
ss
sbb
pcmpeqd
jl
ret
xchg
into
adc
out
fild
lods
popf
or
sub
inc
jne
xor
adc
jns
mov
imul
call
pop
xor
inc
mov
sbb
rcl
pop
inc
pop
nop
and
cmps
jmp
mov
fcomp
ins
inc
cmp
scas
pop
xchg
jmp
ss
sti
xchg
mov
jae
(bad)
adc
push
xchg
shr
pushf
ins
les
out
or
sar
outs
lods
pushf
jp
jl
sbb
pop
sub
test
sub
outs
mov
js
xchg
(bad)
in
add
and
(bad)
xor
mov
shl
fst
mov
test
dec
xor
jg
inc
out
and
imul
mov
pushf
xor
in
cmp
iret
xchg
aam
in
and
push
mov
xor
inc
rol
add
push
dec
add
mov
push
sbb
sbb
sbb
loop
mov
and
xor
mov
xchg
scas
mov
dec
and
mov
cwde
int
jp
mov
xor
je
lods
retf
sbb
test
aaa
xor
push
mov
push
(bad)
in
adc
jns
mov
mov
pop
push
jmp
ja
out
inc
push
shr
lods
adc
adc
or
sub
xor
cld
scas
inc
call
mov
hlt
idiv
jno
aad
popa
frstor
adc
jbe
(bad)
pop
xchg
mov
movs
out
int3
xor
mov
das
sub
in
xchg
loopne
je
push
xor
push
loop
sbb
shl
mov
fmul
jo
lea
in
neg
test
dec
dec
pop
loope
inc
sbb
xchg
cmp
rcr
sar
bound
xor
inc
inc
xchg
push
mov
sub
scas
jae
push
(bad)
cld
mov
xchg
pop
loopne
adc
cmp
fld
mov
int
sub
add
inc
fdiv
push
pushf
and
test
cld
xor
mov
out
shl
sbb
mov
and
mov
shl
mov
and
mov
fwait
xchg
and
js
aaa
scas
cmp
test
xor
mov
jne
dec
push
cs
or
cs
adc
and
dec
gs
scas
mov
ja
enter
or
movs
xor
scas
ss
in
xlat
stos
mov
rol
xor
mov
mov
dec
sbb
(bad)
ss
aam
cmp
fs
popa
xor
cmp
imul
retf
push
sub
lock
clc
sbb
fsubr
out
dec
outs
jp
test
mov
mov
xchg
loop
les
in
stos
popf
sub
pop
xor
mov
fwait
adc
inc
push
push
and
fsub
std
jne
adc
or
outs
adc
popf
xchg
in
test
mov
xchg
xor
cmps
mov
sahf
cs
jns
lahf
xchg
mov
(bad)
hlt
mov
arpl
inc
mov
push
imul
xor
xor
ins
push
sahf
mov
lods
(bad)
iret
mov
sbb
rcr
test
cs
push
scas
dec
mov
popa
adc
daa
es
inc
or
mov
ret
test
mov
test
inc
ret
xchg
mov
mov
push
push
jmp
xor
into
jl
stos
pop
dec
mov
xor
das
inc
ins
mov
jge
mov
sub
imul
sti
inc
sahf
inc
pop
sbb
dec
xchg
sub
std
popf
rcr
or
repnz
sbb
adc
lods
cmp
pop
fst
or
gs
loope
jno
jp
dec
out
xchg
movs
jnp
xchg
shl
mov
xor
ficomp
pop
inc
mov
pop
mov
fldenv
add
push
nop
fwait
add
adc
xchg
mov
cdq
pop
leave
and
mov
lea
mov
push
repz
pop
adc
repnz
or
mov
mov
je
inc
mov
mov
call
adc
pop
mov
(bad)
pusha
rol
xor
sti
mov
push
pop
mov
mov
mov
xor
mov
fld
xchg
cmp
pop
jmp
bound
loope
adc
sub
push
cdq
mov
add
push
test
outs
or
xor
mul
int
outs
fld
add
stc
adc
div
std
mov
mov
or
test
shl
jno
cmp
sbb
loop
outs
stc
jl
lea
ins
lock
lods
push
daa
test
in
(bad)
add
mov
ficomp
sub
js
inc
call
jp
aad
(bad)
cmp
jb
sbb
push
(bad)
jmp
dec
xchg
pop
sub
add
jl
popf
test
xchg
mov
loop
mov
xor
or
push
dec
ret
daa
mov
cwde
and
aas
mov
retf
sbb
sub
xchg
movs
push
cdq
fiadd
lods
ret
mov
xchg
(bad)
cmp
xlat
sbb
fstp
cmps
js
loopne
je
retf
es
out
sbb
inc
stc
inc
(bad)
adc
scas
cmp
add
and
addr16
xchg
or
retf
call
int3
push
dec
xor
and
lods
inc
and
fcmovbe
mov
test
cmp
shr
retf
pusha
xor
push
xchg
jne
outs
fwait
aas
loopne
dec
punpckldq
mov
call
sbb
je
mov
clc
push
xor
push
or
mov
cld
(bad)
cmp
rol
sbb
pop
js
ror
std
shl
jbe
xchg
sbb
xchg
stos
(bad)
shl
jns
xchg
sub
xchg
out
jl
inc
daa
jg
out
psubq
and
cmps
(bad)
pop
adc
bnd
mov
inc
xor
sbb
cwde
dec
cdq
push
retf
dec
xor
ret
lock
cld
xor
push
sti
sbb
xor
add
dec
mov
jno
inc
cmp
push
sbb
inc
mov
aad
or
and
push
int
mov
rcr
jmp
push
repz
jae
inc
pop
(bad)
fcom
arpl
cmc
mov
cdq
(bad)
bound
inc
lock
test
or
push
mov
(bad)
ss
outs
cmc
jp
aad
cmp
icebp
mov
fisubr
ss
lock
pop
sub
or
loop
or
movs
shl
push
adc
in
and
cmp
xchg
mov
and
xor
add
out
and
pop
imul
push
jno
or
xchg
add
jecxz
lods
mov
mov
xchg
jae
inc
div
in
inc
and
enter
and
or
nop
push
jb
and
jne
aad
fld
push
ret
adc
jns
or
or
or
lahf
or
out
in
push
in
ret
sub
xor
jl
mov
rol
jl
adc
mov
xchg
(bad)
(bad)
dec
xchg
and
movhps
jecxz
mov
sbb
jbe
or
test
sbb
rcr
push
jl
push
addr16
jae
push
jg
xchg
ins
mov
jb
stos
push
or
call
mov
test
out
lods
paddusw
pop
scas
dec
push
pop
and
(bad)
sbb
hlt
jne
pop
fcom
(bad)
jb
test
dec
xchg
dec
mov
stos
sub
scas
mov
xor
je
(bad)
pop
fcom
loope
(bad)
inc
cli
lds
cmp
fst
cmp
cli
dec
xor
adc
int3
enter
ins
pop
mov
stos
and
push
fs
into
fwait
cmps
sub
xor
clc
dec
pop
test
jge
mov
mov
pop
and
pop
push
jo
xor
dec
scas
or
adc
push
mov
sbb
daa
aaa
dec
cmp
ret
fild
cld
inc
hlt
stos
movs
sub
retf
xor
mov
inc
ss
sbb
fsub
inc
mov
punpckldq
test
int3
push
mov
int3
inc
cmp
sahf
icebp
mov
xor
jp
lods
sbb
daa
push
push
fist
jae
mov
xor
mov
sub
mov
add
xor
mov
dec
mov
stc
ss
(bad)
jno
add
jbe
sub
int3
push
push
repnz
ret
mov
adc
daa
xchg
jne
pop
mov
pop
or
js
adc
mov
pop
push
sbb
pop
fist
loopne
inc
mov
sbb
ins
shr
outs
inc
ret
mov
jae
pop
jl
and
adc
test
adc
test
arpl
test
ret
add
cmps
sub
rcr
pop
imul
outs
push
push
xlat
jge
or
xor
mov
inc
mov
lahf
xchg
cmp
in
jb
inc
je
lahf
cmp
push
jbe
test
xor
fcomi
pushf
mov
mov
aaa
repz
outs
in
add
and
stos
mov
test
mov
mov
pusha
jecxz
popf
dec
call
test
sti
shl
retf
cmc
jmp
loop
or
(bad)
sub
into
cmps
add
and
push
ja
das
jp
and
sbb
fistp
lods
out
cld
mov
adc
fs
mov
es
jg
dec
xchg
xchg
inc
mov
xchg
sti
adc
leave
ror
lock
pop
mov
lea
cmc
cmp
or
dec
fcomp
ret
rcl
mov
sub
in
xchg
sub
cmps
in
pop
movs
jl
pop
(bad)
jle
ror
shl
ins
mov
int3
push
ins
push
mov
mov
mov
add
jmp
aad
aaa
retf
xchg
adc
jne
test
shr
lock
jl
lea
inc
sar
mov
sbb
sbb
aaa
mov
xor
pop
and
outs
push
fisubr
aas
sbb
js
pushf
xor
ret
fsubr
mov
movq
imul
loopne
jmp
int
out
push
mov
lods
mov
fidiv
or
jae
inc
or
cmp
sub
mov
call
std
jmp
outs
adc
mov
inc
cmps
in
xor
push
add
adc
cmc
sub
out
sbb
adc
out
mov
mov
scas
sub
pop
xor
and
fst
shl
in
pop
in
push
ret
pop
sbb
pop
out
mov
nop
xchg
push
adc
and
or
ss
add
sub
cmp
cdq
in
sbb
popa
sbb
inc
pop
in
mov
push
mov
or
xor
xor
mov
cmp
call
mov
aas
adc
lahf
mov
xlat
jno
ds
std
or
push
ins
test
adc
mov
xor
sbb
sub
jg
mov
pop
jge
xchg
fiadd
or
(bad)
aaa
xor
adc
(bad)
mov
cmps
call
(bad)
cmps
and
ret
mov
in
cmp
push
xchg
add
ficomp
xchg
sub
jae
cmp
mov
cmps
shl
lods
mov
and
cmp
dec
aaa
xchg
hlt
popa
pop
pusha
pop
adc
fisttp
dec
test
aaa
call
xchg
daa
int3
inc
or
push
fmul
inc
sub
rcl
jge
dec
xchg
repnz
sub
jae
ja
sar
dec
ret
dec
cmp
sbb
call
es
movs
pop
xchg
pop
xor
fcmove
daa
std
call
mov
mov
imul
les
mov
addr16
aas
jns
push
ds
mov
out
movs
sub
dec
lods
aad
out
call
cmp
jecxz
jg
(bad)
hlt
nop
xchg
mov
in
xchg
cmp
pop
mov
sub
sub
(bad)
inc
mov
pop
cmps
and
pop
pop
push
xchg
mov
xchg
adc
mov
retf
add
test
add
or
mov
out
stos
xlat
jecxz
and
sbb
add
jb
shr
(bad)
rcr
inc
outs
cmps
and
popf
xchg
call
mov
mov
pop
jp
pop
adc
rcl
cmp
frstor
pop
mov
pop
nop
sbb
mov
inc
aad
ins
or
sub
in
dec
dec
rcr
fild
push
add
ret
inc
dec
or
cmp
gs
les
jg
jp
mov
and
test
cld
mov
movs
jge
push
lds
out
push
lods
(bad)
int
xchg
and
sbb
ins
push
dec
(bad)
adc
jmp
repz
jo
mov
in
push
sbb
sub
sbb
adc
xor
mov
jmp
repz
aas
mov
mov
leave
sar
add
iret
aam
out
sbb
inc
xor
cmp
popf
mov
xor
fdiv
ret
jnp
loop
or
jecxz
les
call
inc
mov
and
clc
jmp
inc
imul
inc
push
pop
jmp
enter
or
push
jge
stc
call
push
loope
sub
icebp
ret
test
psubsb
pop
mov
shr
push
fistp
les
gs
mov
push
data16
dec
push
dec
cwde
cmp
dec
dec
or
and
pop
mov
cmps
ins
clc
fidivr
ins
and
sub
inc
leave
add
xor
clc
das
fist
jns
out
test
pop
xchg
movs
pop
pop
aad
jmp
lea
adc
mov
out
push
les
xor
push
daa
mov
imul
adc
out
sti
test
sar
sbb
call
in
lock
cmps
loopne
mov
and
test
mov
loop
add
sar
push
arpl
mov
mov
add
lods
mov
or
mov
cmp
dec
ret
call
shr
jnp
mov
push
pop
cli
fs
pop
inc
es
mov
jmp
movs
dec
cmp
es
and
gs
xor
inc
shl
lds
inc
clc
test
(bad)
mov
fisub
xor
pusha
cwde
icebp
or
or
cli
sbb
mov
enter
xchg
jae
cli
hlt
dec
loopne
stc
ins
xchg
stos
rep
mul
add
xchg
ret
in
add
inc
pop
jg
(bad)
jmp
add
push
mov
sti
gs
out
or
test
or
cdq
rcr
aad
in
icebp
or
aam
ret
cli
lds
pop
cli
pop
xchg
dec
and
dec
popa
sub
sbb
mov
push
fdivr
xchg
pop
and
sub
mov
xor
xor
mov
fisubr
fist
mov
pusha
out
(bad)
lods
dec
loope
dec
in
loopne
aaa
mov
fwait
(bad)
bound
jnp
cmp
lock
scas
ficomp
push
les
push
cdq
jl
clc
(bad)
test
pusha
popf
xchg
and
ret
test
test
xchg
rol
xor
(bad)
xchg
adc
lods
mov
push
mov
dec
retf
popa
add
not
mov
jae
sti
mov
scas
arpl
sahf
cmps
(bad)
push
ds
lods
jbe
popf
xchg
jne
mov
xor
and
and
ins
cmp
mov
popa
or
push
or
mov
mov
stos
outs
xchg
sub
fiadd
or
push
and
dec
rol
push
dec
push
mov
sbb
fnstsw
dec
xchg
push
jl
rol
int3
sbb
in
loopne
mov
fmul
or
pop
add
xchg
scas
mov
inc
cmp
stc
test
mov
sbb
out
xchg
sahf
arpl
bnd
and
dec
(bad)
sub
sub
(bad)
push
push
pusha
icebp
or
das
cmp
dec
repz
xor
(bad)
adc
sub
gs
jnp
mov
xchg
js
repnz
cdq
loop
dec
xchg
cs
push
xchg
xor
sub
jo
fs
mov
and
mov
add
ret
loope
sub
pop
fcomp
stos
mov
or
jge
mov
(bad)
cmp
call
jmp
fldenv
mov
push
xor
mov
jmp
ss
(bad)
pop
dec
shr
pop
loope
fistp
dec
rol
out
stos
pop
mov
iret
ds
or
iret
push
adc
mov
jae
pop
lock
js
push
icebp
inc
fimul
int3
fcom
jno
imul
dec
ret
mov
cs
mov
movs
xlat
les
inc
mov
add
inc
jl
sub
mov
dec
add
push
fistp
pushf
and
push
sbb
sbb
mov
sti
inc
push
cmp
movs
add
sub
sar
push
cmp
sbb
mov
inc
push
cmp
in
fistp
in
repz
sub
std
out
cs
push
mov
xchg
mov
pop
pop
fmul
inc
dec
or
add
scas
(bad)
mov
push
mov
js
mov
popa
add
jge
test
inc
mov
push
xchg
sub
jle
add
or
shl
sbb
or
sbb
fnstcw
or
and
add
cmp
lea
mov
in
xchg
scas
sbb
dec
pop
cmp
test
movs
pop
push
(bad)
scas
outs
retf
dec
sahf
dec
xchg
mov
cld
outs
jns
push
jnp
mov
jno
jl
cmp
sbb
xchg
dec
sub
das
repnz
push
push
cmp
loop
sub
sahf
or
and
dec
fild
fcom
push
adc
lea
loop
loop
mov
sbb
xchg
fnstenv
js
sub
pop
arpl
pop
in
stos
add
lods
xchg
iret
cmp
xlat
rcr
add
adc
cmc
push
push
push
jl
outs
dec
lahf
xor
dec
sbb
std
pop
aaa
or
sub
mov
mov
sub
mov
fs
jle
pusha
retf
popa
imul
push
mov
sbb
movs
enter
or
cmp
frstor
sahf
or
push
xlat
es
pop
neg
out
push
cmc
add
repnz
fisubr
popa
xlat
je
(bad)
fcom
sbb
cmp
pop
stos
cmp
xchg
mov
and
(bad)
jge
inc
mov
xchg
lock
mov
xchg
pusha
lock
int
mov
or
mov
jl
int
dec
loop
cmp
push
pop
out
mov
std
loop
ja
jmp
sub
out
adc
es
outs
daa
gs
fsubr
pop
cld
sub
es
or
jmp
sbb
add
dec
retf
(bad)
add
aam
add
popf
data16
pop
ds
mov
sti
mov
test
dec
shl
jge
addr16
xor
mov
jnp
call
mov
mov
in
cld
retf
in
nop
jp
fwait
js
adc
in
in
sub
retf
stos
jmp
cmp
aad
pop
xchg
pop
in
push
cli
inc
dec
(bad)
pop
push
jne
cld
mov
cmp
out
dec
push
jae
movs
imul
inc
shl
or
test
mov
popa
mov
jae
sbb
test
int3
aam
and
inc
mov
fs
repnz
xchg
ja
inc
cmc
ret
add
fs
mov
xchg
std
lds
into
call
ficomp
(bad)
xor
nop
adc
test
sub
xor
xor
movs
and
dec
(bad)
fcmove
(bad)
and
sahf
imul
cld
aaa
mov
stos
sbb
call
in
cmp
xchg
ins
push
xor
sahf
(bad)
jecxz
por
jno
sbb
push
sbb
outs
(bad)
cmp
adc
inc
jmp
jnp
hlt
sbb
or
ret
test
sub
fwait
out
addr16
push
inc
fild
(bad)
sbb
push
imul
lds
out
xchg
xchg
inc
ror
cmc
mov
inc
inc
sahf
cmps
mov
push
sub
or
mov
add
push
sbb
ins
jmp
cli
add
push
pop
int3
test
mov
xor
les
jnp
mov
mov
jecxz
push
push
xor
aam
xor
lahf
rcr
sbb
adc
imul
mov
dec
icebp
nop
loop
call
push
add
test
sub
repnz
pop
cmp
sub
outs
xor
ins
sbb
pop
xor
sub
mov
dec
sti
out
test
std
retf
cmp
jecxz
xor
pop
stos
sub
add
xchg
sub
or
mov
sar
enter
or
pop
mov
pop
adc
xchg
mov
or
retf
ficom
ror
dec
add
cdq
jo
cmp
js
stc
call
rcl
(bad)
gs
push
or
mov
mov
push
outs
and
mov
dec
pop
dec
call
mov
xbegin
sub
pusha
loop
fcmovnb
add
aam
daa
or
xchg
pop
and
push
and
fxch
subps
fbstp
dec
lods
jbe
jge
int3
xchg
jecxz
lds
fimul
fldenv
sti
cmp
int3
hlt
fdivr
ss
lods
(bad)
mov
sbb
neg
(bad)
cmc
pop
sbb
repz
jns
push
mov
dec
(bad)
test
out
sub
adc
add
mov
arpl
es
pop
stc
mov
fnstenv
or
jecxz
pop
(bad)
out
mov
push
sbb
sbb
sbb
push
sub
lahf
jno
mov
jmp
(bad)
pop
sbb
ja
cld
ret
or
loope
sbb
bound
fldenv
lods
adc
mov
sbb
and
dec
add
and
inc
cmc
pop
sub
sti
inc
(bad)
(bad)
fiadd
stos
push
pop
outs
cli
hlt
xchg
imul
xlat
ror
out
repz
add
mov
mov
fiadd
sti
push
push
int3
pop
outs
fdivr
mov
sbb
pop
xor
mov
cs
mov
fwait
xchg
and
cmp
call
pop
test
mov
add
lods
xchg
cwde
or
xchg
push
pop
inc
xchg
jmp
scas
inc
pop
sub
pop
mul
push
sub
(bad)
call
or
push
lahf
push
and
rcl
(bad)
(bad)
pop
call
(bad)
test
pop
push
mov
xor
dec
mov
mov
pop
jo
movs
jno
clc
mov
call
dec
or
neg
repz
test
jge
fs
jl
mov
sub
inc
jl
or
loop
sub
daa
jo
ds
adc
cmp
jge
or
sub
lods
xor
pop
mov
ss
sub
xor
pop
sub
icebp
xchg
mov
sub
jne
test
and
mov
rol
jecxz
ja
pusha
stos
jno
fdivr
adc
repnz
add
lea
adc
jmp
repnz
or
jnp
xchg
mov
push
cmc
sub
cmp
rcr
pop
js
jle
inc
dec
jmp
sbb
pusha
lds
loop
adc
pop
push
sub
and
push
jae
sbb
xchg
or
and
xchg
call
add
cmp
sub
mov
je
out
(bad)
push
xor
scas
ffree
std
pop
out
ins
push
scas
xor
fcmovnu
sub
call
and
inc
mov
pop
dec
xor
shr
xchg
or
iret
xchg
pop
pop
dec
mov
adc
sub
adc
pushw
sub
mov
jne
xchg
adc
retf
(bad)
lods
push
imul
sbb
push
push
pop
sbb
mov
(bad)
jmp
loop
push
loopne
sub
cwde
iret
iret
push
push
jo
jne
xor
xor
jp
cmp
pushf
jge
fs
out
inc
int3
mov
push
sti
cli
push
mov
enter
adc
pop
xor
inc
mov
mov
arpl
xchg
xchg
mov
(bad)
stos
add
lods
fldl2t
pop
mov
jo
popf
mov
inc
mov
mov
and
fstp
jl
fistp
add
and
cmp
js
and
sub
mov
mov
nop
mov
pop
mov
push
adc
fild
jns
bound
(bad)
scas
xchg
(bad)
mov
inc
mov
stc
xor
(bad)
(bad)
sbb
xor
icebp
mov
mov
arpl
jl
daa
shl
iret
test
xchg
popf
ja
mov
lods
movs
das
movs
pop
push
mov
std
ja
loope
xchg
fsub
mov
out
xor
adc
add
mov
pop
inc
adc
xchg
and
adc
push
jo
add
xor
pop
cmp
sahf
adc
mov
sbb
shr
test
jg
inc
stc
xor
adc
adc
sub
sub
xor
and
ror
movs
int3
pusha
je
mov
push
popa
lods
sub
out
sub
dec
cld
inc
out
mov
ret
lahf
cld
lahf
or
mov
not
iret
add
jae
fwait
or
or
in
das
lea
stos
push
lea
shl
cmps
sbb
xchg
inc
jp
adc
clc
inc
xchg
test
xchg
xchg
cmps
cmp
inc
pop
add
xchg
adc
and
mov
pcmpgtb
dec
pusha
jne
inc
jge
popf
nop
lock
loopne
fstp
in
(bad)
push
clc
call
out
push
xchg
adc
pop
clc
mov
fistp
into
mov
rol
mov
cmc
ins
ins
push
xor
jle
and
movs
nop
ret
add
xor
test
pop
jle
jne
inc
stos
fcomp
dec
pusha
jb
mov
(bad)
iret
popf
push
call
sbb
jnp
adc
xchg
xor
jbe
add
inc
mov
test
mov
ins
pushf
clc
fs
inc
mov
aad
mov
jne
lods
jns
xchg
sbb
repz
arpl
jnp
fidiv
je
xchg
ja
jns
addr16
jno
dec
jg
xchg
test
je
inc
cmp
je
jno
xchg
jae
inc
fs
shl
ret
enter
mov
mov
loopne
lock
push
sbb
or
popa
sbb
test
dec
fsubr
add
loop
fndisi(8087
cmp
imul
bound
movs
jns
in
sahf
lock
jae
mov
jae
xor
dec
jp
cmp
imul
sahf
gs
mov
out
in
push
icebp
sar
fmul
mov
les
sbb
ja
out
je
(bad)
icebp
pop
lods
push
xor
mov
mov
(bad)
jg
jle
mov
test
adc
mov
nop
int3
or
push
fs
adc
sub
and
imul
or
rcr
cmp
dec
cdq
pop
mov
inc
movs
loopne
in
xchg
lods
inc
xor
cmp
nop
aam
repz
jp
iret
jo
lds
dec
mov
pop
jl
mov
add
in
div
shl
jmp
rol
and
cli
bound
jecxz
mov
hlt
rol
or
cmp
lock
das
sbb
xor
repnz
fdiv
jns
add
out
or
mov
fs
es
arpl
pop
push
xor
ficom
and
dec
push
pop
outs
in
xchg
movs
and
nop
hlt
push
pop
(bad)
mov
and
or
ret
mov
arpl
movs
fst
push
cli
mov
cld
jmp
or
mov
fnsave
mov
xchg
push
mov
fdiv
xchg
or
inc
lods
bound
pushf
sbb
jle
xor
lods
shl
bound
popa
pop
aam
addr16
jnp
icebp
jg
xchg
xchg
(bad)
jp
sub
mov
cmps
scas
or
into
adc
sub
ret
add
pushf
cmp
adc
pop
cmps
cmc
and
sbb
jnp
scas
sub
repnz
push
mov
sub
cs
sbb
arpl
jno
pop
xchg
cmps
or
leave
inc
mov
icebp
test
jecxz
jae
nop
cmp
mov
push
xor
cmp
jbe
in
mov
daa
cmp
iret
pop
push
jge
jb
jnp
out
sar
cs
pop
xchg
out
fs
dec
mov
add
jns
pop
xchg
or
das
lods
inc
sahf
ins
cmps
push
inc
adc
test
pop
sub
outs
jmp
or
jge
mov
sbb
outs
pop
xor
inc
push
out
outs
aas
cmc
or
repnz
or
cmp
movs
fbld
ret
out
jg
add
fisttp
push
loope
xor
scas
lds
and
mov
and
xchg
mov
std
xor
jne
mov
mov
adc
bound
daa
test
sbb
xchg
cmp
cdq
xchg
scas
test
fcom
ss
mov
int3
pop
sbb
add
icebp
pop
mov
pop
xchg
stos
test
(bad)
rol
cmp
arpl
imul
sub
xor
cwde
ja
aaa
mov
mov
(bad)
std
or
dec
xor
cmp
push
fcom
mov
js
xchg
retf
jae
xlat
cmp
sti
push
inc
or
loopne
loopne
add
adc
mov
or
cmp
mov
repz
cli
mov
sub
add
push
test
repz
pop
add
fs
ja
pop
sbb
popa
pop
cs
scas
(bad)
jmp
into
mov
pushf
cmp
lds
rol
push
lea
std
jnp
jae
pop
adc
into
or
xchg
inc
mov
call
or
jae
push
and
push
jge
arpl
neg
add
xor
xchg
sbb
pop
inc
sti
inc
(bad)
test
repnz
mov
push
(bad)
xor
jae
or
inc
mov
xor
js
test
outs
xor
icebp
pop
mov
push
imul
js
and
mov
jb
lods
pop
lods
add
in
inc
mov
sahf
jmp
pop
loop
fadd
inc
push
xchg
out
and
pop
mov
pop
and
daa
jecxz
push
in
sbb
enter
adc
ja
inc
pop
out
icebp
inc
add
arpl
and
xor
fstp
mov
jne
cdq
and
mov
in
popf
mov
rcl
mov
push
bound
sbb
mov
xchg
jl
ret
ds
fcomp
in
pop
sar
push
shl
sub
jae
xchg
pop
scas
adc
pusha
mov
or
std
xor
push
lock
popf
popf
bound
aas
adc
ror
es
pusha
pop
int
mov
jmp
dec
push
dec
lods
fist
repz
icebp
clc
cmp
das
fstp
fwait
adc
(bad)
bound
mov
repz
push
repz
ret
jnp
loop
mov
mov
cmp
inc
mov
mov
pop
std
popf
pop
call
sub
jl
cld
mov
and
dec
inc
clc
mov
pop
cmc
cmp
push
push
fwait
out
sub
mov
jmp
and
gs
popa
jmp
mov
dec
pop
push
or
call
xchg
lds
dec
pusha
jbe
outs
push
mov
mov
mov
rcl
or
jecxz
dec
into
or
mov
xor
or
sbb
retf
xor
loopne
mov
das
sbb
cld
sub
mov
aaa
aaa
jno
loope
sti
mov
jne
sbb
out
fsubr
ds
gs
add
sub
hlt
addr16
mov
in
mov
inc
call
mov
jge
out
xchg
cmp
jo
dec
xchg
dec
xor
fdivrp
shr
test
aad
shr
imul
dec
sub
mov
and
std
dec
dec
ja
je
jne
fwait
ret
neg
jg
add
neg
ins
popa
stc
std
xchg
mov
sahf
jle
sub
pmullw
push
ret
ss
arpl
cwde
cmc
xchg
jge
retf
xor
arpl
out
pop
adc
hlt
repnz
das
xchg
or
aas
xchg
sub
inc
rcr
in
mov
mov
push
adc
jmp
jg
and
sbb
loop
mov
out
xchg
jb
sub
xor
mov
dec
inc
xchg
mov
loopne
les
xor
adc
test
cs
in
std
ficomp
movs
pop
sbb
cmp
push
cmp
(bad)
int3
dec
mov
test
repnz
or
std
push
sub
mul
fstp
push
cs
int3
fcom
push
lods
out
mov
enter
fsub
enter
or
jmp
add
mov
adc
repnz
movs
sbb
call
imul
popa
inc
jbe
fsub
push
push
sbb
test
js
xchg
cwde
xchg
inc
xchg
inc
cmp
popa
inc
dec
addr16
shr
fcomp
in
cwde
jp
sub
xchg
pop
ror
fdiv
cli
xchg
push
jge
in
dec
or
gs
mov
fs
aas
fnstenv
push
out
nop
adc
fild
sub
push
les
mov
test
adc
or
push
mov
mov
adc
mov
clc
dec
ret
xor
mov
pop
push
push
aad
mov
out
test
jne
mov
jp
fld
les
xor
sbb
int
loopne
cmc
out
cs
cmp
(bad)
cmps
xchg
lods
inc
mov
xchg
in
imul
inc
xchg
(bad)
fistp
inc
js
daa
adc
jl
mov
inc
cmp
dec
movs
sbb
daa
xchg
mov
das
shl
lahf
cdq
jmp
sub
jmp
mov
out
dec
or
mov
dec
mov
sbb
mov
mov
adc
ds
jp
retf
adc
jmp
inc
out
xor
xchg
inc
out
sar
add
shl
mov
xchg
hlt
cwde
call
sbb
mov
dec
pmulhw
sbb
rcl
and
adc
not
(bad)
push
ret
jo
shl
jmp
test
daa
retf
ficomp
pop
jmp
ss
int
mov
aad
dec
ds
fldlg2
dec
out
pop
cwde
mov
pop
iret
and
xlat
addr16
lea
mov
xchg
sub
xchg
cmps
loope
retf
(bad)
push
pop
and
retf
test
or
inc
mov
mov
sbb
std
mov
call
ficomp
stos
aam
jg
(bad)
lahf
out
push
das
std
inc
cmps
jl
sub
mov
cdq
sar
test
cli
gs
mov
call
sar
xor
jnp
add
rcr
stc
das
lods
(bad)
and
sbb
mov
shl
mov
cmp
xor
or
pop
inc
movs
outs
pop
pop
mov
jne
inc
popa
fs
xor
repnz
push
repnz
sub
or
(bad)
ins
dec
loop
(bad)
mov
out
nop
xchg
outs
push
inc
adc
call
adc
js
aas
ret
dec
lods
sbb
pushf
call
js
imul
dec
xchg
ret
out
lds
pop
das
xchg
cs
test
sbb
(bad)
test
cmp
lods
test
sbb
mov
pop
adc
jg
fs
fs
mov
mov
les
mov
es
and
sub
push
cmovl
(bad)
call
and
xor
outs
and
add
or
rol
lock
pusha
jo
fadd
xchg
sbb
sahf
inc
cld
xor
pop
jg
je
inc
dec
rol
aaa
push
push
popa
xchg
movs
dec
ret
jle
push
adc
aaa
mov
out
outs
repnz
jno
inc
mov
inc
pop
mov
dec
mov
ins
jbe
ja
mov
(bad)
xchg
cmp
ffree
dec
outs
repz
imul
daa
xchg
sub
cmp
aad
in
adc
daa
push
cld
push
push
mov
inc
add
xor
bound
inc
push
and
mov
sar
xchg
(bad)
sub
jno
addr16
cmc
xor
xchg
stos
imul
add
push
push
outs
test
push
or
js
cmps
out
pusha
shl
xchg
dec
ja
or
cwde
out
aam
jmp
adc
inc
push
gs
cmp
mov
sbb
and
lea
or
jb
push
jge
xor
and
out
stc
xchg
ins
outs
pushf
sub
mov
into
adc
push
sub
mov
mov
(bad)
iret
cs
int3
daa
sbb
outs
out
adc
(bad)
enter
and
(bad)
pushf
mov
movs
(bad)
(bad)
loop
rol
in
inc
ins
fistp
xchg
jl
stos
xor
fisub
std
dec
daa
mov
stos
jae
push
dec
xor
add
sub
add
adc
fld
call
xchg
jmp
inc
stos
mov
add
or
cwde
(bad)
xor
sbb
xor
aad
pop
dec
out
xor
cmp
and
std
adc
bound
dec
das
fild
jecxz
add
and
push
inc
shl
xchg
into
and
arpl
unpcklps
add
ja
leave
dec
bound
int3
out
xlat
test
ret
cli
data16
mov
fs
sbb
adc
cmc
(bad)
lock
mov
in
int
test
sub
jle
push
loopne
push
cmps
pop
gs
imul
call
adc
aad
mov
push
ins
xchg
scas
jle
cmp
ret
(bad)
adc
add
lds
cmp
xor
iret
enter
leave
or
rcr
and
rol
xchg
sub
cli
mov
xchg
aam
pop
cdq
das
jecxz
into
jg
push
outs
jp
clc
mov
mov
std
lock
dec
pop
js
icebp
call
xchg
or
jmp
sar
jbe
sar
fdiv
in
inc
fbstp
push
imul
jbe
mov
push
ds
mov
mov
jmp
pop
lds
les
(bad)
das
gs
sub
hlt
xchg
cmp
aas
mov
or
clc
push
push
sti
jno
popa
gs
cmp
int3
push
shl
pusha
mov
xchg
les
loopne
js
js
cmp
jno
cli
shr
in
addr16
aas
or
and
dec
xor
pop
into
and
pop
out
loop
fadd
test
cdq
fst
xor
sbb
xor
ror
into
sub
sub
aas
xor
push
icebp
imul
cmp
sub
popa
mov
add
inc
rol
addr16
push
lds
bnd
sbb
jl
arpl
push
mov
lahf
xchg
pop
and
in
xchg
mov
sub
loope
retf
cmps
std
mov
shl
loope
repnz
and
xor
cmp
pop
ds
lea
std
(bad)
push
xor
pop
sbb
adc
inc
jg
or
dec
and
call
add
inc
(bad)
test
or
jb
clc
inc
dec
mov
popf
inc
sbb
pop
cmp
iret
or
jecxz
push
cs
add
push
lock
or
popa
mov
adc
xor
jae
sbb
int
inc
test
imul
mov
js
adc
neg
push
mov
jmp
inc
jnp
xor
inc
mov
mov
mov
or
nop
and
jecxz
xor
inc
mov
(bad)
ret
dec
pop
ret
repnz
(bad)
mov
outs
hlt
adc
mov
xchg
mov
inc
sub
repz
pop
sbb
jmp
xchg
push
dec
inc
sub
setl
xor
xchg
jno
push
and
push
sbb
call
mov
lods
sbb
mov
ins
inc
jne
aas
or
repnz
pusha
cmps
adc
ja
xor
ss
xchg
cmc
lock
xor
sar
and
add
daa
push
cvtdq2ps
scas
leave
shl
jmp
fcom
movs
jle
dec
xor
push
pop
jno
push
jbe
pusha
xchg
pusha
out
mov
das
(bad)
and
into
xor
pop
adc
jecxz
push
test
popf
pop
and
lods
pop
adc
xchg
push
loopne
push
loopne
(bad)
(bad)
sbb
out
sbb
inc
in
push
and
jbe
lods
popf
push
test
push
jmp
jbe
push
shl
es
outs
popa
mov
dec
and
mov
jle
mov
in
dec
jns
test
fcomp
in
push
inc
repz
cmps
jecxz
jmp
jo
pop
push
fadd
test
sub
mov
xchg
ds
stc
adc
mov
add
and
and
jg
outs
sti
dec
mov
into
jl
pop
ret
int3
mov
lock
mov
(bad)
loope
xor
or
or
push
push
jecxz
and
sbb
cmp
enter
repnz
(bad)
(bad)
movs
pushf
dec
xchg
xchg
repz
or
cmp
xor
push
mov
mov
call
sub
jb
pop
pop
sub
cs
fmul
aaa
push
add
inc
mov
movs
sub
jg
pop
in
sbb
adc
gs
imul
push
jle
test
dec
call
dec
inc
or
sub
push
jne
mov
push
push
push
lods
add
retf
sub
aas
dec
in
cmc
adc
sub
mov
icebp
inc
mov
cmps
jnp
sbb
daa
pop
jb
mov
in
cmps
jnp
pusha
(bad)
sahf
jb
cwde
fisttp
call
scas
je
jbe
or
push
add
push
in
and
cmps
add
or
adc
int
jmp
stos
xchg
sti
data16
and
mov
jb
xor
cli
cmp
adc
inc
sahf
mov
sbb
jno
push
inc
leave
cmp
push
mov
push
int3
or
lahf
cmps
sub
cdq
sahf
test
mov
pop
cmc
cs
ss
inc
sbb
pop
mov
out
dec
push
scas
dec
aad
out
inc
or
ret
ja
cld
xchg
cmp
aam
and
leave
pop
sub
inc
ss
mov
inc
and
imul
mov
fidivr
dec
and
xor
mov
outs
jns
pop
sar
or
loope
or
or
mov
jge
and
jmp
pop
jg
jle
sub
int
mov
or
loope
iret
dec
popa
and
scas
jg
and
mov
or
fcmovnu
mov
into
pop
lods
or
push
fimul
add
sbb
inc
jl
xor
push
lods
cmps
cmp
stos
aas
add
retf
movs
mov
sbb
push
add
mov
nop
fmul
shl
loopne
inc
cld
retf
push
inc
xchg
rcl
push
lea
lods
ss
ret
icebp
dec
sub
pushf
pop
pop
daa
mov
sub
loope
popa
or
lock
(bad)
std
and
or
add
or
cmp
mov
(bad)
nop
rol
inc
mov
test
jns
scas
shl
in
mul
retf
mov
test
sub
and
mov
push
adc
repnz
int3
fistp
pusha
lods
into
sbb
xchg
in
pushf
jp
mov
xchg
lea
add
rol
pop
jp
or
xchg
push
in
lahf
test
nop
push
mov
sub
fwait
jno
adc
sbb
pop
shr
mov
pop
cdq
xor
mov
jns
cmp
int3
mov
dec
sub
dec
mov
and
pop
pop
test
push
mov
pop
cs
mov
jnp
movs
jge
leave
jno
sti
pushf
(bad)
jnp
not
jecxz
fisubr
sub
scas
adc
dec
sbb
mov
in
out
test
mov
inc
dec
fwait
sub
push
std
mov
sbb
xor
push
mov
pop
test
mov
mov
fnstcw
and
ret
mov
jbe
push
jle
dec
addr16
push
ins
loop
in
out
jo
ds
in
adc
mov
sar
mov
in
push
movs
push
mov
ins
fild
cld
repz
popa
push
fld
or
ret
fistp
push
mov
mov
in
(bad)
xor
inc
and
xchg
ficom
dec
daa
inc
pop
mov
cmp
test
adc
jne
(bad)
in
stos
cmc
fist
push
shl
stos
dec
adc
cmp
sti
lock
loopne
movs
lea
fcomi
fisttp
mov
and
sub
jmp
pop
xchg
pop
mov
out
jns
hlt
ret
popf
adc
xor
dec
frstor
xchg
adc
pop
ins
cmc
jo
or
jge
icebp
leave
mov
mov
dec
xchg
neg
cdq
call
idiv
je
fbld
icebp
(bad)
sti
inc
push
mov
fcom
ret
push
inc
and
stc
pop
arpl
outs
inc
rcl
dec
push
jnp
sar
mov
ins
pop
xchg
outs
sbb
outs
push
aas
mov
imul
pop
fisub
sbb
fld
push
cmp
mov
jg
cs
jae
rcl
xchg
sbb
aaa
jne
jg
mov
jg
mov
icebp
xchg
shl
mov
or
inc
imul
(bad)
jne
fidiv
jo
dec
movs
sub
loop
jp
sbb
mov
stos
lds
mov
shl
cs
adc
fcmove
retfw
je
imul
xchg
cdq
dec
jbe
add
aad
hlt
arpl
fucomip
lahf
and
dec
mov
inc
shl
xchg
add
fnstsw
ins
ins
adc
(bad)
push
adc
push
cmp
push
jecxz
aad
sbb
cmc
xchg
fmul
cmps
mov
adc
sti
or
daa
mov
loop
iret
cmps
cli
in
xor
push
into
push
jnp
jp
mov
sbb
scas
dec
cli
push
into
push
test
pop
(bad)
sbb
jge
jmp
mov
or
ret
movs
pop
loope
sbb
mov
mov
xchg
arpl
adc
mov
pop
idiv
dec
rcr
in
das
stc
aad
add
ds
cli
in
jmp
pop
pusha
(bad)
jnp
cmps
es
out
bound
inc
jle
cdq
fisub
xchg
test
push
mov
out
mov
ror
push
inc
jae
ins
hlt
scas
ret
xchg
jno
sub
stos
mov
and
repnz
mov
sub
push
xchg
jecxz
(bad)
mov
jmp
jbe
xchg
nop
mov
cmp
dec
and
out
inc
dec
add
pop
sub
jmp
jmp
jl
push
adc
mov
push
push
mov
pop
sti
(bad)
sti
cld
cmp
test
cmp
pusha
xor
scas
mov
loopne
hlt
sbb
add
cmc
mov
in
push
fs
jne
(bad)
cld
sbb
das
jge
dec
xchg
push
push
push
adc
push
movs
xchg
ret
push
outs
pop
bound
add
mov
adc
adc
test
push
or
push
dec
lea
lods
rcl
ja
jg
and
or
fwait
(bad)
pop
(bad)
xchg
dec
test
shr
stc
outs
dec
sbb
inc
scas
jnp
push
xchg
dec
sti
in
push
inc
fnstsw
bound
cwde
sbb
dec
jmp
pop
jo
mov
inc
or
adc
lahf
xor
xlat
test
outs
fs
mov
(bad)
add
cmp
sahf
mov
js
mov
and
add
outs
fist
and
xchg
int
mov
cmp
dec
xor
out
mov
stc
xor
pop
retf
or
pop
scas
pop
pop
addr16
dec
and
lods
and
dec
fst
pop
ds
add
outs
repnz
int
jae
cmp
mov
in
ror
inc
scas
push
(bad)
jns
repz
shl
sti
daa
stos
jnp
fisub
xchg
enter
imul
addr16
dec
(bad)
fisubr
rcr
addr16
cwde
lds
mov
cmp
pop
sahf
je
or
(bad)
popa
mov
jmp
aaa
cdq
movs
and
jp
(bad)
push
loop
movs
js
inc
rol
push
nop
add
push
jle
repz
mul
popa
mov
xchg
push
enter
jno
daa
in
cmp
mov
jnp
imul
adc
in
sbb
mov
mov
lods
stos
inc
xchg
popa
pop
push
stos
mov
movs
cli
xlat
fwait
sti
add
pslld
dec
daa
push
push
das
stos
cdq
cmp
push
in
xchg
into
rcr
push
fisttp
mov
push
push
xor
arpl
adc
fdiv
mov
pop
icebp
inc
dec
sahf
call
fcmovnu
lea
push
adc
pop
pop
cmp
xor
push
in
jo
imul
mov
and
adc
xor
in
test
adc
sbb
sub
into
popa
add
jecxz
or
dec
mov
fild
mov
adc
cmp
mov
xchg
retf
push
mov
repnz
out
dec
imul
bound
fnsave
and
mov
adc
ret
repz
pop
xor
das
aad
inc
add
or
or
dec
jno
hlt
jge
pop
cs
test
jb
sbb
push
sub
inc
fisub
rcr
call
hlt
pop
pop
(bad)
jns
rcr
ds
cmp
sub
(bad)
mov
sbb
loop
inc
pop
jmp
cs
shr
mov
dec
mov
mov
xchg
dec
imul
add
push
cmp
sbb
jg
jmp
jns
lahf
inc
mov
dec
jnp
adc
cmps
retf
stos
data16
adc
test
out
lods
test
sbb
ja
xchg
mul
(bad)
inc
jl
mov
push
test
mov
aad
fadd
sub
mov
cmps
mov
icebp
add
jne
add
ss
dec
push
push
dec
fst
shr
sbb
(bad)
inc
mov
adc
and
movs
xchg
arpl
adc
mov
push
sbb
loop
loop
in
xor
xchg
lea
fst
test
cli
mov
xchg
fimul
or
les
cmp
loope
cmp
dec
test
cs
or
add
enter
mov
fnstenv
icebp
xchg
scas
push
mov
pop
and
aad
aaa
jmp
outs
stos
scas
div
icebp
add
cld
outs
outs
xor
retf
cs
sub
sbb
neg
inc
cmps
push
stos
inc
icebp
int
inc
loope
adc
sub
push
cmp
mov
sbb
inc
sub
sbb
inc
aaa
jb
cld
outs
call
push
cmp
scas
daa
(bad)
leave
ficomp
and
adc
xor
das
xor
sbb
mov
repz
xchg
mov
and
sub
sub
lea
mov
jle
jp
std
push
outs
les
bound
ins
jge
aas
push
int
jae
dec
xchg
fisub
or
stos
jecxz
les
nop
push
iret
enter
cld
cmp
imul
lds
rcl
lea
ds
and
sti
das
mov
cmp
jmp
jns
iret
loope
lock
push
(bad)
fistp
les
cdq
xor
jnp
and
scas
xchg
pop
mov
or
and
je
outs
push
das
les
cmp
adc
sub
aas
arpl
ret
outs
mov
outs
pop
dec
or
jp
(bad)
xor
inc
lock
adc
stos
xor
adc
sbb
xlat
test
mov
in
fwait
push
loop
in
cmps
mov
jecxz
push
call
rcr
aas
aas
shl
push
xchg
std
in
add
mov
outs
jecxz
jnp
push
fucomp
sahf
sbb
jb
cli
rcr
mov
dec
clc
or
ins
(bad)
sbb
jmp
not
jmp
push
in
sub
shl
outs
jbe
dec
repz
pop
aad
dec
mov
push
movs
sbb
mov
sub
xor
mov
mov
rcr
ins
and
push
in
jae
sub
test
pop
jnp
das
int
clc
and
loopne
mov
push
shr
call
test
xor
bound
aad
mov
mov
test
test
repnz
or
addr16
std
mov
xchg
jecxz
inc
push
gs
clc
mov
adc
or
mov
js
jo
cmps
jp
and
inc
pop
outs
push
or
push
inc
retf
or
mov
add
sti
rcr
xchg
or
cld
fimul
shl
push
(bad)
or
adc
cmp
xor
dec
(bad)
mov
dec
mov
mov
pop
jl
sub
(bad)
cmp
sysexit
pop
popf
fistp
pop
and
push
shl
dec
pop
jns
pop
test
mov
rol
(bad)
dec
(bad)
adc
clc
test
cmp
dec
(bad)
sahf
ret
push
inc
scas
mov
scas
leave
imul
xchg
jne
ds
out
int3
adc
mov
push
dec
add
test
cld
push
rol
icebp
je
mov
inc
scas
adc
retf
pop
arpl
or
jae
int3
xchg
cld
daa
fistp
jbe
sbb
fmul
inc
jae
adc
out
or
xor
jle
adc
jns
cmp
test
sbb
jnp
sbb
sub
push
fisub
inc
mov
push
sbb
shl
cli
or
mov
pop
and
enter
aas
or
pop
push
inc
cdq
add
mov
stos
jle
mov
jo
test
ds
jmp
ja
inc
sbb
xchg
scas
dec
outs
adc
(bad)
mov
mov
fs
dec
sbb
mov
out
cmc
loope
or
and
int
cmp
mov
ds
push
retf
shl
call
dec
adc
dec
mov
cwde
out
dec
mov
popf
lahf
dec
pushf
pop
out
or
push
push
rol
adc
mov
jg
dec
and
jae
jno
mov
jnp
jl
mov
outs
jp
ror
pop
dec
ror
xchg
push
loope
and
adc
xchg
shl
sti
(bad)
(bad)
push
rcl
shl
cmp
out
xor
mov
cmp
lock
xchg
jbe
stos
push
cmps
sub
sub
sbb
and
ret
stc
sar
in
add
sbb
cmp
mov
mov
mov
xor
les
cld
mov
aas
sbb
cmps
ja
mov
mov
push
xchg
or
inc
adc
frstor
xor
mov
xchg
or
jge
dec
and
rcr
mov
pop
fmul
enter
mov
mov
xchg
ins
inc
pop
push
aaa
push
mov
cmp
stos
or
pop
and
es
xchg
lea
mov
pop
loop
fsub
outs
xchg
arpl
lahf
xor
jae
out
les
test
lds
adc
jg
clc
cwde
clc
pop
mov
scas
cmp
mov
cmps
or
sbb
xchg
loop
xor
jge
in
mov
adc
out
or
dec
inc
push
mov
inc
push
or
xor
and
dec
and
add
push
xchg
int3
mov
repz
and
adc
xchg
or
repz
or
mov
push
dec
cmp
call
sbb
xor
scas
and
sbb
jmp
push
add
in
push
mov
add
stos
out
lods
sub
lahf
loopne
xor
mov
mov
mov
in
inc
fld
out
in
lahf
outs
push
jg
test
push
mov
fmulp
retf
scas
mov
nop
push
and
ja
sahf
bound
mov
push
std
push
mov
mov
push
fidivr
aas
jnp
cwde
or
pusha
fld
cs
inc
and
cli
fcomp
aas
sub
ret
test
push
xlat
test
or
sub
fadd
adc
fs
lds
jmp
repnz
enter
sub
addr16
and
xor
ins
xchg
push
or
nop
iret
jmp
stos
xchg
ret
stos
pop
fld
sbb
xor
cmp
mov
sub
data16
add
std
fidivr
sbb
pop
pop
fistp
jp
adc
(bad)
movs
fisttp
in
push
pop
int3
(bad)
call
das
sar
sbb
mov
repnz
jo
cmp
into
jne
jnp
inc
into
mov
int
jbe
inc
ret
adc
push
fsubr
mov
xor
fdiv
jb
lahf
sbb
cmp
pop
adc
jecxz
daa
and
dec
sub
ja
jmp
out
cmp
loope
or
dec
dec
pop
jns
je
mov
add
ins
int3
stos
lods
mov
leave
imul
xchg
or
cmp
mov
popa
xchg
les
lahf
inc
sub
scas
xchg
(bad)
imul
ret
fmul
iret
jmp
cmp
mov
popf
inc
mov
dec
push
lds
hlt
std
jno
out
sar
cmp
pop
repz
push
cmp
jmp
lahf
call
fild
(bad)
adc
inc
arpl
pusha
adc
aad
shr
sub
into
je
cmps
or
cmps
mov
xor
aas
jl
fidiv
fcomp
or
sub
mov
mov
sub
pop
push
fdiv
cmp
xchg
fisub
mov
or
mov
ss
mov
sub
mov
cmc
mov
dec
xchg
popa
jne
fidivr
lods
cmps
jl
imul
xlat
les
xlat
xor
inc
frstor
out
in
mov
cwde
mov
and
cmps
push
cmp
sub
mov
test
adc
cmps
xor
lea
hlt
push
imul
scas
jnp
dec
in
and
das
push
mov
loope
or
gs
xchg
cli
xor
jae
xchg
mov
push
stc
mov
push
fisttp
rol
mov
icebp
shl
sbb
push
test
dec
mov
mov
retf
cs
ds
mov
pop
ja
cli
sub
mov
or
icebp
int
adc
dec
jo
shl
pop
sbb
int3
daa
push
ret
or
mov
cmp
ins
fstp
(bad)
fst
and
not
jae
adc
mov
shr
and
and
mov
test
cmc
leave
enter
stos
mov
leave
adc
or
add
shr
arpl
sbb
es
addr16
pop
and
cmps
adc
std
lods
mov
push
in
mov
mov
stos
fs
adc
push
add
(bad)
jmp
sub
fs
inc
add
(bad)
mov
pop
jle
sub
test
jae
idiv
ret
popa
mov
hlt
test
arpl
jo
push
rol
xchg
sbb
dec
in
rcl
ins
repz
cmps
(bad)
mov
shl
retf
mov
fst
andnps
jmp
jmp
xlat
mov
sub
xchg
mov
call
aad
ret
jmp
mov
xor
xlat
fs
mov
mov
movs
push
mov
jle
jae
push
mov
lods
push
and
test
mov
cli
sub
add
neg
and
into
cmp
retf
mov
dec
mov
lea
jl
bnd
outs
sbb
xchg
popa
push
sub
pusha
add
and
mov
lea
xor
cmps
out
iret
test
dec
mov
mov
leave
jmp
ror
xor
sbb
stc
retf
pop
inc
inc
pushf
pop
call
cwde
xchg
scas
aas
push
push
and
(bad)
jo
cdq
(bad)
mov
add
dec
xlat
xor
jnp
daa
cmps
xchg
test
(bad)
inc
adc
(bad)
mov
xor
es
es
test
in
cli
outs
pop
xchg
add
or
call
push
ins
or
call
das
push
xchg
xchg
sub
sbb
adc
jne
sub
das
cmp
call
mov
fwait
ins
retf
stos
or
pop
pop
xor
sub
outs
(bad)
push
in
int
and
jecxz
inc
fmul
xchg
push
aaa
dec
pop
push
arpl
retf
test
xor
xor
sti
dec
cmp
ror
jo
(bad)
jne
sbb
cmps
pop
or
fisubr
mov
and
sbb
pop
inc
jae
add
and
xchg
push
adc
inc
mov
sub
in
movs
ss
jmp
test
mov
mov
cmps
jle
pop
mov
jmp
xchg
rol
lds
lahf
sahf
retf
ins
div
scas
cli
pop
add
loopne
mov
addr16
imul
mov
das
rol
cmp
jo
test
push
push
leave
mov
movs
ret
and
mov
cmp
fdiv
xchg
ss
lods
xchg
xor
shl
nop
loop
jl
mov
xor
fcomp
(bad)
push
or
cmp
push
jne
gs
dec
shl
sbb
add
pop
and
sub
or
xor
add
cmp
ins
(bad)
(bad)
mov
call
xchg
push
das
iret
shl
pop
mov
mov
vcmpps
mov
fidivr
dec
jo
jmp
add
int
mov
xor
call
jle
call
cld
adc
sub
mov
aas
pop
xchg
pop
sub
push
sub
xor
cmp
aam
xlat
and
out
dec
outs
xchg
mov
in
and
jae
ror
pop
loopne
pop
sub
out
adc
daa
inc
mov
mov
aaa
dec
sbb
sbb
mov
(bad)
adc
jnp
cmp
mov
mov
int
sbb
cdq
retf
ins
sub
and
pop
mov
fbstp
mov
imul
inc
jge
xor
out
pop
cli
add
les
mov
into
mov
mov
je
fnstcw
adc
fisubr
ja
repz
in
mov
addr16
mov
mov
xchg
(bad)
ins
pop
lahf
inc
add
call
mov
mov
movs
aam
sub
dec
test
mov
mov
xchg
test
push
xor
dec
arpl
sbb
cld
jmp
jecxz
inc
leave
jmp
std
pop
(bad)
lock
mov
xchg
adc
xor
adc
cdq
add
sub
pop
pop
sbb
cmp
inc
mov
lahf
fild
ds
lods
repnz
popf
pop
dec
mov
jmp
xchg
test
pusha
mov
into
test
push
push
dec
mov
in
mov
xor
jecxz
mov
jno
out
xchg
lea
data16
pop
je
lods
inc
add
push
mov
fs
jge
addr16
test
xchg
and
mov
jl
stos
imul
mov
fucomp
dec
cli
sbb
or
fidiv
js
dec
pop
jmp
hlt
or
daa
push
aad
out
out
xchg
in
xor
addr16
repnz
push
in
jbe
int3
test
jae
lds
sbb
enter
fimul
or
aad
xchg
outs
jns
ss
or
and
in
xor
mov
lock
movs
add
mov
retf
cmp
dec
movs
int3
ins
sub
lock
nop
jge
sar
or
add
(bad)
and
jns
fstp
ja
jecxz
rcr
movs
mov
dec
mov
or
dec
cld
pop
push
fcomp
enter
ffreep
jb
xchg
sbb
icebp
and
jge
cmp
inc
push
push
lahf
lahf
inc
pop
and
push
inc
sub
mov
adc
push
aas
in
shl
sti
or
adc
push
daa
lahf
xchg
lds
push
pushf
mov
adc
mov
sub
das
mov
inc
sub
iret
xchg
jp
fmulp
js
sbb
mov
hlt
shr
cmp
cli
and
cmp
nop
mov
jb
push
sub
lds
mov
adc
mov
leave
mov
popa
sbb
push
push
test
bound
bsr
stos
out
push
mov
scas
aam
mov
mov
mov
pop
popa
add
xchg
jge
mov
loop
jb
adc
mov
scas
add
add
mov
ins
or
mov
or
idiv
outs
popf
arpl
add
add
adc
add
and
xor
push
mov
pop
sbb
sub
pop
outs
shr
cmc
mov
push
call
ss
lea
mov
aam
fisubr
cmp
(bad)
adc
cli
cmc
mov
scas
fcom
dec
xor
jbe
inc
mov
cmp
(bad)
mov
sbb
les
pop
cdq
adc
in
cld
push
adc
fldenv
xor
aaa
or
(bad)
aad
sbb
or
sub
add
and
or
loop
nop
(bad)
jge
sbb
outs
or
dec
in
dec
xchg
or
add
shl
(bad)
aad
xchg
push
jbe
cmps
mov
fldcw
adc
push
sbb
pop
cmp
clc
dec
adc
push
sbb
stos
mov
shl
xlat
ror
add
cmp
or
mov
icebp
xchg
inc
adc
mul
sub
cmp
and
fstp
push
cs
dec
xor
and
outs
sbb
xchg
cmp
lahf
or
jmp
in
sbb
clc
stc
jno
or
inc
jmp
out
je
lds
mov
icebp
test
inc
sub
push
and
pop
add
loope
xor
mov
div
pop
mov
add
leave
sub
dec
or
popa
dec
pop
lea
and
inc
push
std
xchg
lahf
into
pushf
shl
or
js
xchg
adc
xor
in
mov
imul
adc
add
jmp
sub
xor
adc
add
test
sbb
ss
or
repnz
mov
dec
inc
add
cmc
fidivr
jmp
aas
cmp
(bad)
in
ins
addr16
clc
jb
dec
arpl
sbb
es
pop
push
fiadd
mov
mov
jl
jle
mov
cdq
cli
mov
xor
loop
push
popa
lods
(bad)
(bad)
imul
or
pop
int
inc
in
mov
xor
sti
test
aaa
ret
jmp
inc
cwde
sti
mov
xor
inc
cmc
enter
mov
in
dec
sbb
mov
addr16
cmps
clc
xchg
push
mov
push
out
inc
fidiv
jo
ja
xor
inc
test
jmp
dec
xchg
xchg
xchg
pop
add
mov
push
add
loope
retf
xor
sub
jecxz
lahf
pop
jne
xor
imul
retf
jle
push
adc
dec
inc
sbb
ins
(bad)
loop
sti
sub
xchg
xchg
aaa
in
mov
dec
mov
push
daa
test
rdtsc
out
pusha
rol
add
cmp
or
adc
loope
mov
jge
fsub
add
not
jae
adc
cs
stos
xlat
dec
or
xlat
sbb
mov
sahf
mov
xchg
popf
pusha
clc
call
cmp
cmps
loopne
jne
mov
icebp
div
repz
fsubr
aas
mov
and
dec
jmp
out
xor
sar
cdq
add
mov
aaa
sbb
jle
adc
lds
hlt
or
cmp
sub
int
fisubr
sbb
bound
push
jmp
inc
nop
add
std
sub
out
and
repz
fs
inc
lock
xchg
aad
lahf
adc
aam
push
xor
pop
or
mov
add
stos
retf
xor
xor
cmp
ret
scas
hlt
outs
enter
cmp
fucom
add
sti
and
ror
dec
clc
sahf
in
adc
pop
pop
fnstcw
enter
cdq
jnp
and
fisub
inc
test
cli
jg
jmp
ds
cmp
or
arpl
sub
fwait
inc
in
xchg
int3
pop
lea
pop
xchg
push
in
pop
sbb
bound
(bad)
aaa
dec
push
cmp
sbb
xlat
imul
popa
inc
and
scas
les
cmp
jge
pop
outs
cdq
ja
xchg
adc
cmc
xchg
mov
jns
cmp
dec
pop
ja
stos
(bad)
mov
inc
ja
hlt
jo
aas
call
inc
push
lds
and
jp
cwde
stos
repz
mov
pop
cmp
mov
mov
cmc
push
pop
add
cmp
retf
fwait
and
jno
xchg
sahf
pop
sbb
scas
mov
test
pop
shl
sbb
cmp
mov
je
addr16
jnp
and
imul
push
adc
fst
std
jmp
add
sub
xchg
xor
icebp
aaa
sbb
sub
inc
sub
xor
(bad)
into
and
loopne
cmc
cmp
sar
xor
inc
call
push
cmp
dec
push
jo
lock
fwait
movs
dec
inc
nop
fild
xor
mov
add
xor
jnp
loopne
imul
inc
adc
je
test
(bad)
jg
fucom
mov
and
add
push
outs
cwde
mov
push
ss
sti
cmp
leave
xchg
cld
dec
mov
xchg
leave
mov
pusha
stos
cld
movs
ins
mov
dec
gs
inc
jo
out
scas
xor
iret
mov
in
int
inc
xor
aad
in
sub
jg
jmp
or
(bad)
icebp
inc
inc
shl
repnz
cmp
push
pop
push
mov
and
cmc
ins
jmp
out
dec
sbb
jmp
sbb
popf
dec
out
test
iret
and
xor
jp
push
fadd
hlt
ds
jecxz
or
xchg
sbb
repnz
ins
int3
punpckhdq
test
xor
adc
(bad)
or
jge
adc
inc
fild
cmp
mov
loope
inc
imul
inc
push
jns
cmc
setno
aas
inc
lds
push
mov
dec
sub
mov
or
adc
fbld
ja
fnstcw
xchg
or
xor
shr
(bad)
stc
add
icebp
ror
add
shl
call
popf
and
mov
dec
sbb
fisttp
pop
xor
(bad)
faddp
out
inc
dec
cmps
xchg
cmps
or
(bad)
xchg
retf
movs
retf
into
pop
adc
pop
push
ret
xor
or
sbb
inc
mov
mov
cmc
gs
icebp
xchg
sbb
mov
int3
and
jo
ja
adc
pop
adc
adc
into
addr16
push
jmp
jmp
stc
add
enter
ins
xchg
fsubrp
inc
retf
or
xchg
stos
sbb
hlt
imul
icebp
test
call
xchg
inc
addr16
cmp
ror
jno
mov
mov
ret
je
mov
xchg
lahf
pop
loopne
outs
pop
jp
hlt
cmp
cmps
xor
fs
movs
rcr
pushf
add
jae
cmp
test
aam
pop
xchg
mov
dec
pushf
inc
add
push
sub
and
adc
in
cs
jbe
sbb
pop
adc
inc
test
pop
inc
mov
cmp
dec
dec
inc
(bad)
push
mov
pop
out
sbb
mov
xchg
dec
stc
imul
cli
into
jge
sbb
xchg
movs
sub
and
sub
fcmovnb
jae
and
xor
mov
dec
in
mov
mov
mov
dec
das
sub
mov
dec
cmp
es
mov
les
dec
dec
dec
dec
ja
(bad)
adc
cmp
dec
push
imul
cmps
not
push
push
sub
jg
inc
cmp
test
data16
cmp
popa
stos
or
daa
pop
or
mov
int3
mov
mov
push
jae
rcr
les
jle
(bad)
out
and
dec
call
cli
into
dec
aam
sub
adc
sahf
mov
sub
xchg
add
push
jns
rcl
stos
xchg
jo
adc
gs
std
inc
sub
aam
xlat
(bad)
stos
std
push
out
jae
or
outs
fadd
and
mov
test
retf
not
call
dec
out
je
dec
(bad)
sub
inc
popa
cmps
mov
inc
pusha
and
pusha
xor
ds
outs
add
sub
cmps
gs
mov
cdq
jbe
ret
dec
push
dec
out
cmp
and
pop
sub
fisttp
dec
mov
mov
(bad)
fdiv
xchg
not
mov
mov
push
aaa
movs
popa
push
js
and
pop
sub
test
sub
and
test
fldcw
pushf
mov
xchg
pop
pop
mov
add
jbe
dec
push
ds
and
bound
sbb
xchg
mov
cs
and
lds
dec
iret
push
pop
or
mov
sub
push
inc
in
inc
loope
and
xchg
xlat
sbb
test
mov
aas
jecxz
data16
mov
retf
sahf
daa
sub
cmp
or
int
mov
(bad)
cld
arpl
inc
xchg
xor
xchg
scas
jmp
xchg
push
cld
add
dec
jecxz
mov
lods
ss
into
xchg
clc
cmp
jnp
dec
popf
inc
mov
jg
imul
addr16
jl
jmp
lods
movs
adc
jl
out
lds
jb
ja
inc
fwait
shr
adc
imul
sub
jl
test
sbb
fbld
(bad)
jmp
imul
loopne
xor
add
pusha
stc
sahf
fs
add
repnz
(bad)
push
ins
and
sbb
call
fucomp
mov
push
test
push
clc
aaa
imul
mov
sbb
and
aaa
(bad)
or
or
movs
mov
out
rol
fcomi
sub
sbb
test
(bad)
push
js
xor
adc
push
loop
stc
mov
(bad)
loope
cs
pop
pop
je
xor
enter
lahf
(bad)
xor
xchg
add
out
cmp
test
sbb
xor
ds
int
mov
mov
das
fnstcw
aaa
les
jno
nop
retf
loopne
mov
or
push
lds
and
cmps
scas
les
stc
mov
mov
mov
adc
jbe
sub
int3
jmp
add
fs
(bad)
push
cmp
xor
out
xor
aas
fs
fucomip
loopne
inc
sbb
pop
out
dec
jge
dec
mov
sbb
addr16
cmp
out
jnp
sbb
adc
inc
fidiv
and
call
outs
pusha
adc
movs
xchg
mov
aad
mov
jl
push
cmps
rcr
mov
ja
pop
imul
sar
clc
push
(bad)
add
jns
mov
div
fsubp
std
xchg
add
adc
or
pop
movs
push
inc
sbb
push
jae
dec
test
mov
dec
cld
fisub
add
xchg
dec
push
jle
mov
in
and
das
dec
push
or
add
in
(bad)
xor
add
and
mov
sub
mov
ret
inc
pop
mov
loopne
push
inc
mov
mov
aam
dec
das
pop
lds
jae
sbb
int3
test
sbb
movs
xor
cld
jo
cmp
pop
dec
das
jle
pop
push
mov
adc
push
pop
jae
jle
jecxz
iret
sub
lds
je
sbb
xchg
xchg
xor
cdq
mov
je
push
push
cmp
addr16
out
fadd
jmp
mov
scas
ret
pop
data16
stc
mov
sbb
pusha
mov
jbe
bound
cmp
pop
pop
jg
sub
test
js
(bad)
jge
fldcw
into
mov
dec
sbb
bound
jnp
or
enter
int
add
pusha
les
add
push
mov
add
cmp
rcr
ins
mov
jne
mov
sub
sub
cwde
or
sub
clc
xchg
out
mov
push
sti
inc
aam
sub
adc
lds
dec
sub
mov
int
mov
mov
and
(bad)
dec
stos
and
cdq
cdq
out
mov
ja
inc
adc
inc
push
cmp
adc
push
dec
imul
xchg
repz
(bad)
jbe
sbb
ds
cdq
ret
xchg
sub
adc
ficom
inc
jmp
movs
cmps
int
(bad)
ins
adc
shr
ret
inc
mov
mov
jmp
in
lods
xor
and
fs
mov
ss
icebp
pop
mov
inc
jne
cmp
inc
push
dec
ret
jae
dec
call
pop
mov
xchg
dec
ins
xor
fs
sub
xchg
es
mov
mov
mov
mov
fnsave
dec
loope
xor
jg
outs
dec
xor
addr16
sti
jecxz
ds
stos
test
add
and
xchg
dec
push
xor
jp
add
xor
sub
rcl
mov
js
fucomi
push
ror
pushf
outs
js
pop
push
jno
xor
rsqrtps
mov
int3
inc
sahf
dec
clc
mov
push
add
outs
or
or
loop
or
jle
cmps
jmp
sbb
mov
mov
jbe
add
pop
div
test
pop
div
push
nop
ret
or
dec
mov
mov
and
leave
mov
adc
gs
popa
ins
jno
jmp
jns
ficom
clc
dec
pop
or
out
jo
movmskps
dec
push
xor
jno
or
outs
in
cs
push
cmp
jnp
jne
cmp
adc
cs
pop
repz
fs
adc
in
dec
mov
outs
int3
add
and
mov
aad
movs
pop
jb
inc
xor
leave
sub
(bad)
retf
arpl
xchg
fstp
aam
out
inc
fst
jne
cmp
pop
push
inc
test
fsubr
jecxz
fwait
gs
fwait
jns
out
bound
sbb
test
inc
push
mov
imul
scas
lock
shr
xchg
adc
mov
in
fisttp
out
inc
adc
sub
iret
hlt
fist
sbb
xlat
adc
push
xlat
jns
xor
(bad)
xchg
jno
lahf
dec
push
lea
je
pop
xchg
hlt
ficom
push
xchg
inc
and
push
inc
cmp
xor
inc
or
shl
pop
retf
xor
pop
add
test
dec
xchg
rol
ins
jae
(bad)
push
and
jl
repz
(bad)
rol
jl
and
mov
mov
dec
add
mov
loopne
std
mov
push
adc
jle
gs
push
jne
out
dec
mov
xchg
fwait
arpl
pusha
imul
pop
aam
xchg
cld
and
or
xor
mov
push
stos
mov
adc
mov
pop
icebp
shr
cmps
std
ja
mov
ins
mov
mov
add
in
test
sub
fadd
imul
movs
or
(bad)
dec
(bad)
pop
aad
repnz
jae
hlt
not
jmp
rcl
repz
mov
add
sti
test
repnz
pop
pop
int3
xchg
mov
ret
js
adc
mov
or
mov
fndisi(8087
mov
push
test
outs
pop
jmp
mov
popa
push
cmp
scas
xchg
fs
arpl
inc
mov
or
mov
pop
mov
or
enter
nop
push
sti
neg
(bad)
sbb
imul
mov
std
shl
and
sbb
mov
push
pop
imul
cld
pop
dec
int
xor
xchg
cmp
imul
inc
xchg
mov
rcr
inc
fld
mov
or
in
test
sti
mov
cmc
adc
mov
pop
out
jmp
fist
xchg
or
bound
call
inc
sti
fisub
or
clc
js
jb
out
mov
jl
cmps
jmp
arpl
shl
mov
xchg
pop
je
cmp
dec
js
outs
sub
pop
pushf
lock
xor
fsub
pop
fist
pop
js
aam
lods
sub
cwde
test
fisttp
add
sub
addr16
pushf
(bad)
push
mov
or
add
and
lock
out
xor
hlt
div
xchg
add
sbb
scas
popf
(bad)
or
dec
xchg
retf
mov
xchg
sub
sub
pop
aaa
aaa
std
lea
imul
mov
retf
ret
xchg
bound
sub
fistp
fwait
jae
jmp
mov
xchg
inc
jns
mov
sbb
or
popa
mov
xlat
test
(bad)
jecxz
js
retf
mov
jno
adc
add
jnp
fisubr
popf
jne
mov
into
dec
mov
inc
pop
cs
imul
push
pop
mov
or
mov
popf
fcom
mov
add
mov
sbb
ins
xchg
adc
mov
(bad)
stos
(bad)
sub
ret
mov
bound
pop
pop
pop
jb
ins
(bad)
fstp
daa
je
test
mov
xchg
pop
mov
pop
push
inc
(bad)
mov
sahf
popa
cmc
test
xlat
into
lods
or
mov
mov
mov
sbb
fcmovb
xchg
fld
or
retf
sub
ins
adc
std
test
stos
rol
nop
sti
cmps
stos
xchg
sar
daa
add
ret
fcmovnbe
dec
push
(bad)
jo
pop
push
mov
pop
mov
fwait
push
into
mov
(bad)
aaa
shl
imul
xchg
jb
cmovb
push
mov
daa
scas
adc
stos
mov
cmp
mov
or
fcom
xor
pop
adc
scas
sub
repnz
jle
push
add
cmp
fcmovu
(bad)
lahf
clc
call
cmp
aaa
cmp
out
and
add
cmp
xchg
adc
sbb
outs
rcr
and
dec
jbe
mov
test
nop
mov
sti
(bad)
out
outs
pop
mov
(bad)
fs
repnz
sub
imul
push
jb
and
fwait
mov
cmc
cmps
daa
adc
dec
jl
mov
and
push
ret
mov
jl
int3
stc
ss
dec
ret
ficom
jp
sbb
sbb
lods
push
push
hlt
mov
sbb
push
mov
xchg
adc
mov
stc
or
mov
outs
sbb
mov
fldenv
test
movs
mov
push
jns
mov
cmps
cmp
dec
mov
and
push
dec
(bad)
jnp
outs
cld
outs
sbb
lea
stos
scas
mov
push
push
repz
xor
sbb
fistp
pusha
pcmpgtb
nop
sbb
fldcw
repnz
lds
adc
mov
adc
or
cs
mov
pop
pushf
mov
xchg
arpl
sbb
(bad)
adc
je
and
and
stos
and
xchg
pop
stc
idiv
xchg
and
jmp
scas
enter
mov
sub
xchg
mov
lods
push
dec
sti
xchg
xchg
mov
lahf
mov
scas
inc
add
(bad)
cmp
sbb
iret
jb
mov
push
cmp
and
adc
add
repz
cdq
mov
clc
iret
ins
xor
(bad)
fimul
mov
sbb
sahf
fnstenv
out
jbe
aad
push
sub
add
test
repz
xor
shr
push
push
fimul
std
mov
fadd
std
loope
mov
jl
retf
bound
(bad)
je
and
or
nop
xchg
add
dec
(bad)
and
div
adc
retf
test
inc
int3
push
xor
lds
(bad)
lock
xchg
jbe
aaa
xchg
in
out
fwait
pop
mul
stc
pop
loope
cs
outs
sbb
fwait
icebp
fwait
loopne
shr
pop
retf
jmp
add
add
(bad)
retf
bound
xor
pop
xchg
call
xor
bound
adc
pop
dec
xchg
cmp
and
repz
inc
fnstsw
aas
or
jg
sbb
imul
aad
test
pop
push
test
push
test
pop
mov
fistp
mov
test
mov
push
sbb
test
mov
push
push
(bad)
or
and
ds
dec
or
adc
movs
out
call
int
xlat
dec
push
and
ret
cmp
lods
push
jle
mov
(bad)
xchg
or
jnp
scas
nop
mov
rcl
mov
push
jecxz
je
outs
cmp
enter
xchg
mov
lods
sub
mov
dec
addr16
ja
lock
sbb
add
jge
daa
cdq
xchg
(bad)
jl
push
sahf
loopne
mov
repz
das
or
enter
movs
arpl
in
(bad)
repz
retf
stc
les
retf
dec
pop
stc
or
(bad)
lock
xor
stos
xlat
xchg
dec
mov
inc
enter
pusha
in
add
ret
or
or
je
in
retf
rcl
mov
repz
xor
leave
xor
mov
mov
push
xchg
mov
in
sbb
gs
and
retf
fist
sbb
test
ins
mov
push
mov
mov
loop
ret
shr
jb
pop
xchg
xor
addr16
xor
jno
lahf
xchg
fisttp
xchg
mov
mov
sti
out
push
sbb
and
xchg
test
and
sti
pop
into
scas
or
inc
into
dec
pop
push
outs
ins
push
or
xchg
rcr
dec
dec
mov
jl
fld
shr
add
dec
mov
mov
push
clc
pusha
gs
sbb
xchg
mov
xchg
nop
mov
ret
mov
out
mov
adc
lods
cmp
jae
retf
retf
add
cdq
push
pop
push
push
pop
ror
adc
popa
xor
lahf
pop
sar
daa
aaa
dec
or
(bad)
push
ficom
je
daa
call
movs
cmc
and
ds
pop
imul
test
scas
mov
dec
lahf
mov
ja
add
jecxz
mov
pushf
inc
mov
and
mov
pop
sub
xchg
lods
xchg
gs
out
jo
aas
mov
sub
movs
mov
fnstsw
mov
jl
or
fmul
cli
aad
inc
imul
xor
or
enter
mov
xchg
idiv
jae
fcmovb
sbb
dec
lods
xchg
push
mov
pop
cmp
jae
ret
loope
cs
nop
stc
ret
pop
pusha
fucomi
fcmovnu
dec
mov
mov
idiv
(bad)
mov
enter
xchg
shl
xor
ret
or
imul
mov
dec
dec
rcr
loop
scas
inc
ins
rcl
push
jb
mov
dec
jbe
rcl
imul
cs
das
jae
test
sbb
movs
adc
aam
cwde
jo
cmc
hlt
rol
jle
aaa
cmp
int
sub
and
jp
add
jmp
jbe
xor
pop
and
and
mov
js
pop
cmp
cmps
daa
cdq
mov
je
(bad)
fnstcw
sub
aas
xchg
iret
pop
adc
sahf
ss
daa
lds
mov
ret
mov
imul
(bad)
stc
repnz
mov
pop
cld
cmp
mov
ret
pop
push
mov
je
mov
dec
adc
cwde
repnz
cmps
adc
push
repnz
xlat
test
and
or
cmp
xchg
sbb
or
nop
or
sub
cli
mov
sub
out
mov
add
inc
push
mov
bound
mov
dec
in
jecxz
jle
pop
jecxz
mov
cmps
mov
jge
rol
add
mov
sub
pop
psubb
das
(bad)
and
cmp
out
mov
push
(bad)
call
push
out
xchg
or
aaa
xor
hlt
sub
daa
dec
or
bound
dec
sub
retf
push
sbb
leave
mov
pop
dec
test
repnz
stos
dec
cmp
sbb
test
adc
xor
dec
in
jecxz
data16
push
mov
or
jmp
adc
sbb
dec
dec
fbstp
or
mov
jne
scas
jl
es
(bad)
sub
fwait
loopne
rol
(bad)
hlt
mov
leave
add
cli
sti
sbb
cmps
out
inc
push
push
adc
pop
cdq
xchg
int3
test
sub
in
inc
and
dec
out
nop
mov
lods
shl
fisub
inc
xor
ret
outs
cmp
stos
pop
mov
inc
inc
add
push
fs
push
adc
leave
jmp
inc
std
mov
add
ds
aaa
aas
lock
inc
fcmovnu
adc
pop
int
xor
xchg
rcr
xchg
xchg
sub
imul
addr16
arpl
adc
sahf
leave
jae
mov
and
call
stos
test
or
fisubr
ins
sub
adc
pop
loop
shl
inc
iret
in
repz
stos
push
ret
add
jbe
mov
and
mov
sbb
mov
pop
popf
or
inc
pop
fisttp
or
and
or
std
stc
mov
push
sub
test
scas
jnp
sbb
sbb
stos
jae
jle
cli
lods
mov
lods
jmp
arpl
frstor
and
or
and
push
rcl
xchg
cmc
dec
cld
cli
lar
dec
call
pop
xchg
cmp
(bad)
dec
repnz
sti
xchg
or
cmp
jmp
jg
ret
in
add
lods
inc
adc
ret
and
xchg
mov
xchg
or
je
dec
imul
cs
xchg
add
std
and
adc
push
pop
sti
cmp
imul
mov
jg
cmp
pop
and
jmp
lds
fadd
cmps
fcomp
rcl
not
popf
push
sahf
ret
xchg
lea
loop
pop
enter
inc
jbe
sbb
xchg
(bad)
js
push
dec
jo
sbb
ss
xor
(bad)
or
ret
sub
jecxz
inc
add
add
cld
push
jae
mov
sbb
jne
test
and
inc
pop
xor
adc
inc
or
mov
loop
arpl
jg
sub
fist
mov
out
pop
mov
push
mov
mov
pushf
jnp
sbb
push
loope
adc
sbb
cmp
xor
pushf
sub
fist
jo
cwde
push
push
jmp
mov
sbb
bound
mov
xor
ds
addr16
push
xchg
sub
mov
sbb
cmp
cmova
xchg
pop
dec
cmps
cwde
call
sub
jmp
xor
lods
scas
xor
xor
mov
dec
stc
pop
jp
(bad)
sar
push
stc
(bad)
loope
leave
push
push
jns
adc
jns
cmp
pusha
sub
inc
push
jo
mov
pop
fs
jb
push
iret
adc
rol
mov
jmp
hlt
inc
test
fstp
rol
cmp
xor
sbb
arpl
hlt
mov
pop
adc
imul
pop
or
push
mov
test
cmp
jns
mov
daa
ss
mov
into
jg
leave
test
jecxz
inc
icebp
pop
mov
sub
leave
lea
mov
xchg
test
in
xor
xchg
fcmove
cmp
jmp
xchg
jge
push
add
xor
pushf
fcom
jecxz
stos
imul
adc
or
je
dec
add
pop
mov
repnz
sub
mov
push
and
cmc
push
cmc
ja
aam
pop
adc
aaa
sbb
mov
enter
test
sub
sbb
mov
inc
xchg
sub
enter
pop
retf
jmp
mov
mov
int
stos
pop
hlt
and
popf
inc
push
jp
js
fimul
icebp
inc
call
in
sub
scas
gs
push
sub
or
nop
xchg
push
xchg
clc
cmp
pop
cld
sub
cmp
mov
shl
enter
jne
cld
(bad)
lock
sbb
mov
imul
dec
movs
add
lods
jle
jp
fs
or
call
mov
mov
std
xor
and
outs
sub
jbe
push
xlat
repnz
sub
xchg
add
test
cmp
mov
retf
data16
movs
leave
fisubr
mov
stc
add
(bad)
out
add
sbb
mov
mov
mov
test
xchg
mov
imul
pop
cmp
push
xchg
imul
sar
sub
adc
test
mov
adc
push
or
das
mov
inc
neg
xchg
xor
test
cmp
inc
mov
adc
das
push
sbb
mov
lea
xor
retf
mov
adc
ins
add
popa
add
push
in
fstp
das
xchg
pop
xchg
daa
stos
sub
pop
ins
in
pushf
inc
jbe
jnp
movs
sbb
sahf
and
lods
call
imul
or
arpl
sub
push
sahf
je
inc
mov
push
mov
sub
inc
repnz
mov
rcr
cmc
lods
push
out
imul
mov
add
or
xor
test
pop
sub
loope
clc
dec
cmps
mov
or
stos
mov
mov
mov
in
xchg
push
xchg
xchg
daa
mov
test
dec
jg
test
rcl
aas
ret
sahf
enter
fcomp
cmp
lahf
das
cmp
sub
or
jmp
sti
gs
outs
or
sar
xor
jae
inc
adc
nop
cli
or
sbb
lds
in
mov
xorps
add
sbb
cmp
(bad)
mov
jge
xchg
adc
jb
mov
push
mov
(bad)
jns
xor
inc
in
sbb
sbb
mov
cmp
push
cmp
out
or
adc
ret
dec
lea
dec
jmp
push
jne
call
popa
adc
jmp
adc
or
mov
cli
inc
cli
pushf
push
loop
adc
jecxz
xor
jne
xchg
popfw
push
fs
imul
into
jmp
mov
jg
das
stos
in
or
pop
push
int
mov
lds
cmp
mov
dec
jecxz
int
xchg
(bad)
nop
in
cmp
xchg
add
sbb
adc
sbb
mov
arpl
out
(bad)
xchg
sub
push
call
inc
call
call
fadd
(bad)
(bad)
push
dec
(bad)
fisubr
les
iret
ss
pop
fnsave
fimul
gs
sub
xor
sub
mov
push
rol
loopne
cmp
ins
rcr
xchg
int
and
push
arpl
arpl
inc
cdq
push
outs
ss
(bad)
div
xchg
or
mov
std
xchg
sahf
cmp
in
xor
fld
out
cld
pop
sub
div
repnz
jne
sahf
popa
xor
stc
sahf
push
int
clc
loopne
push
mov
xor
cmps
shr
add
stos
xor
jmp
enter
inc
test
gs
cmps
xchg
dec
pop
fistp
push
into
cmp
sub
ss
mov
adc
sub
fnstcw
inc
enter
jmp
repz
mov
adc
js
bound
stos
jo
push
inc
inc
(bad)
mov
ret
rcl
jns
in
push
dec
rcl
fwait
mov
mov
cdq
outs
push
mov
pop
lds
inc
inc
sub
das
les
mov
fwait
xchg
in
mov
mov
add
cmp
fcmovbe
stos
jno
int3
mov
cmps
jo
fist
mov
out
aam
mov
or
cmp
fwait
cmp
repz
pop
sub
fldcw
(bad)
loopne
aam
in
and
bound
cmp
aad
pop
retf
jecxz
jb
call
mov
or
jmp
dec
jle
dec
js
jne
loopne
scas
or
jle
adc
je
pop
fwait
repnz
test
int3
stos
xchg
clc
(bad)
imul
bound
xchg
ret
neg
mov
mov
imul
sahf
nop
aaa
fcomp
cli
push
in
in
or
sbb
pop
rcr
mov
jnp
push
dec
int3
lahf
push
retf
mov
pop
test
arpl
cli
inc
jecxz
and
push
test
xor
out
jae
jo
xor
push
xchg
add
out
in
es
mov
test
xor
clc
pop
repz
rcr
mov
xor
or
inc
cmps
push
or
aaa
fisubr
jnp
test
mov
into
jle
push
dec
popf
dec
(bad)
push
lea
adc
xor
cmp
dec
ret
(bad)
add
mov
cwde
cld
jns
dec
pop
dec
js
ret
cmp
jne
add
hlt
mov
xchg
test
or
xor
iret
out
repz
test
dec
xchg
rcl
push
ror
mov
(bad)
pop
xchg
mov
fwait
add
fwait
mov
scas
mov
pop
ins
fdivr
cmps
stc
add
lods
sub
ja
jl
mov
enter
nop
addr16
imul
stc
mov
inc
aad
sub
push
mov
(bad)
cmp
dec
mov
retf
imul
dec
mov
test
loop
xor
sbb
mov
and
and
les
add
vshufps
mov
or
daa
inc
cmp
push
adc
ds
mov
push
push
fsub
jp
add
push
push
mov
pushf
ins
ror
dec
cmp
mov
xor
mov
hlt
leave
addr16
shl
enter
mov
add
push
outs
mov
or
push
pop
jmp
add
outs
jmp
cmp
retf
mov
mov
in
outs
xor
lods
mov
cli
push
jp
pop
dec
test
retf
clc
shr
je
push
jns
(bad)
ins
xchg
sbb
not
pop
mov
mov
in
(bad)
mov
mov
test
popa
adc
sub
sar
mov
inc
add
sub
dec
mov
sub
mov
lods
pop
jne
add
sbb
pop
daa
xchg
mov
xchg
ror
daa
test
shr
push
jns
push
adc
mov
in
mov
movs
sub
in
jnp
inc
and
test
iret
pop
mov
xlat
pop
sub
jo
repnz
adc
xor
scas
jo
jno
add
lea
push
ret
data16
mov
cli
popf
xlat
fmul
cmp
cmp
fld
call
scas
push
mov
lds
and
xchg
(bad)
adc
(bad)
inc
push
neg
ins
push
adc
mov
out
xlat
fcomip
not
lock
not
mov
mov
push
out
lods
mov
cwde
fadd
dec
dec
int
mov
xor
icebp
jns
dec
mov
xchg
daa
out
add
adc
inc
mov
repz
xor
pop
lea
and
and
jb
lock
mov
data16
jbe
jmp
mov
inc
into
int
adc
pop
mov
cmps
outs
or
push
or
call
lea
gs
sub
mov
add
mov
lock
(bad)
loope
jmp
xlat
aas
leave
hlt
repnz
sbb
ja
stc
or
mov
adc
loopne
ins
hlt
cdq
cwde
into
adc
push
mov
ins
pop
sbb
out
stc
dec
lods
sub
sub
or
jb
cmp
pop
pop
cwde
jb
jge
dec
loope
shl
mov
(bad)
test
and
lods
jl
inc
dec
sub
call
jbe
ja
fcomp
aaa
mov
(bad)
idiv
in
ss
js
cmps
sti
push
ins
cmp
retf
adc
add
sahf
inc
popa
ret
fwait
adc
cmps
ds
mov
sbb
inc
pop
inc
lahf
popa
xchg
icebp
mov
sbb
mov
pop
outs
(bad)
mov
aam
mov
xor
call
and
adc
xchg
xor
xchg
in
push
add
rol
adc
bound
call
(bad)
sahf
mov
push
icebp
or
and
repz
jo
xchg
mov
arpl
adc
jge
jecxz
test
and
das
mov
xchg
add
(bad)
add
shr
mov
push
ret
pushf
and
jp
and
sub
dec
mov
in
fidivr
(bad)
sbb
cmp
adc
and
mov
add
xor
outs
test
or
inc
js
pop
retf
inc
in
enter
int3
pop
mov
jmp
pop
or
mov
ins
pop
mov
sbb
dec
js
scas
pushf
fdiv
mov
jmp
lea
adc
add
mov
cwde
mov
mov
xchg
inc
(bad)
cmp
push
jne
into
ror
mov
push
in
mov
in
dec
push
shl
cmp
and
adc
stc
pop
pop
add
jnp
cmps
test
call
loopne
mov
inc
(bad)
hlt
sbb
je
jno
and
mov
loope
out
cmp
sbb
push
add
out
mov
popa
dec
push
ficom
hlt
adc
jmp
mov
inc
xor
mov
movs
sbb
stos
cmps
xchg
mov
cmps
movs
adc
xchg
rol
mov
(bad)
pavgw
mov
dec
mov
test
lds
(bad)
fisttp
movs
cmp
int
sub
inc
loopne
add
out
js
inc
mov
les
out
leave
push
nop
and
pop
sbb
mov
int
add
jg
nop
sahf
fwait
or
push
in
fsub
jb
jno
iret
test
pop
cmp
sbb
fst
cmp
xor
rcl
adc
cdq
jecxz
push
or
je
mov
js
inc
xor
lods
adc
add
ss
stc
or
popf
mov
out
xchg
jae
mov
jl
push
dec
and
cld
or
data16
jmp
in
xchg
jmp
sbb
scas
mov
push
pop
hlt
dec
dec
cs
mov
daa
mov
xor
mov
mov
aas
mov
inc
and
mov
jb
in
pop
mov
aaa
sub
dec
cmp
dec
adc
and
add
xchg
test
in
hlt
sub
fisub
xchg
xor
mov
call
jle
cdq
out
mov
jl
movs
nop
out
mov
mov
sbb
sbb
add
loope
sbb
cmp
inc
lahf
outs
(bad)
bound
(bad)
mov
fdiv
xlat
or
neg
mov
xchg
arpl
call
jmp
cmps
mov
dec
iret
push
mov
cs
xchg
sbb
daa
mov
imul
fwait
test
test
sbb
jne
lea
aas
pop
imul
sbb
and
inc
mov
push
sbb
test
and
adc
add
and
cmp
jno
push
dec
jnp
dec
mov
lods
(bad)
adc
test
sbb
cmp
dec
inc
call
jae
or
or
test
int
cmp
and
add
sub
dec
scas
and
loope
jo
xor
je
in
push
std
stos
loopne
push
and
sbb
sub
adc
div
lahf
mov
xchg
mov
or
in
lods
or
mov
mov
jecxz
sub
shl
pop
mov
in
or
pop
mov
jle
aas
and
xor
cmp
fistp
movs
scas
stos
xchg
inc
es
adc
push
push
(bad)
sti
es
(bad)
aas
inc
push
adc
test
test
mov
call
cdq
mov
aaa
stos
dec
jle
leave
movs
jp
ins
adc
leave
xchg
fwait
test
jns
ror
mov
jmp
xlat
xor
fnstcw
les
xor
jmp
sub
and
inc
scas
fst
push
add
dec
xor
xchg
push
ror
xchg
rcl
(bad)
mov
mov
and
push
rol
mov
cmp
add
lahf
mov
pop
push
outs
aam
pop
add
out
xchg
cs
(bad)
jl
sub
sbb
adc
and
mov
sub
jp
les
popf
sbb
in
or
std
ret
call
push
xchg
aaa
cmp
aad
es
or
mov
push
and
sbb
add
cmc
jmp
frstor
push
mov
pop
cs
mov
(bad)
and
xor
xor
cmp
mov
fild
and
mov
packssdw
lds
mov
xor
ins
scas
add
cmp
scas
sub
mov
and
or
imul
scas
test
shl
inc
test
or
and
mov
mov
jg
ficomp
js
inc
sub
mov
pop
leave
out
outs
cs
xchg
mov
lds
mov
add
or
jo
sub
pop
xchg
ret
jl
in
rol
fimul
mov
jp
sub
dec
bt
push
adc
adc
ror
or
jmp
fs
shr
adc
sar
ja
std
sbb
sbb
cmp
lods
ins
add
jns
lea
push
pop
aaa
aas
out
push
cmp
pop
in
and
inc
lods
pop
fild
jo
mov
xchg
cwde
mov
dec
popa
xchg
xlat
xchg
out
jnp
inc
and
add
or
outs
mov
mov
xchg
in
fucomip
loopne
stos
icebp
dec
or
sub
shl
dec
bnd
cmp
xchg
mov
add
pop
mov
repz
es
pop
mov
(bad)
icebp
push
fdivp
cmp
arpl
xor
lock
dec
fcomp
sub
fist
dec
rol
das
mov
xor
mov
data16
inc
nop
mov
in
jg
and
xchg
retf
push
scas
inc
daa
outs
sbb
mov
push
mov
pop
mov
inc
sub
icebp
scas
int3
imul
xchg
in
sbb
sbb
loop
fwait
aas
or
jb
push
fsub
mov
stos
sbb
pop
jo
lahf
(bad)
cwde
not
cs
sbb
adc
movs
adc
jmp
daa
sbb
add
ja
push
imul
es
stos
rcl
add
inc
lds
xchg
add
mov
out
pop
jg
fmul
and
xor
jnp
fiadd
fstp
jle
retf
cli
inc
cmp
mov
popf
mov
jno
inc
pop
dec
cmc
sbb
js
data16
cmc
mov
in
jno
es
fucomi
add
ret
xor
nop
xchg
and
(bad)
in
cmps
cwde
pop
pushf
jmp
push
sbb
lahf
das
movs
mov
cmp
out
jmp
sbb
(bad)
dec
int3
inc
mov
out
aaa
and
pusha
or
inc
jle
adc
add
add
mov
cld
mov
arpl
retf
mov
aaa
iret
jno
repnz
xlat
retf
icebp
push
adc
gs
inc
in
retf
jne
mov
arpl
icebp
sbb
test
push
call
(bad)
sbb
cmps
outs
jmp
jmp
add
mov
fwait
gs
std
add
movs
jne
movs
xchg
xchg
ins
sub
jnp
sar
xchg
add
push
xor
mov
test
gs
call
scas
mov
mov
cwde
push
push
jo
out
pop
cli
test
mov
pop
scas
call
mov
das
pavgb
cli
out
int3
or
sub
adc
imul
fcomp
fimul
(bad)
xor
imul
stc
sar
lods
sbb
sbb
mov
js
das
fidiv
cmp
adc
not
repnz
lea
pop
pop
jnp
cmps
add
jg
or
ja
jl
dec
adc
fist
rcl
(bad)
cmp
sub
(bad)
(bad)
adc
mov
push
(bad)
and
hlt
or
jmp
mov
loop
data16
out
test
jo
and
push
mov
movs
dec
xor
inc
or
cmp
sbb
lea
add
mov
les
xlat
adc
cli
mov
cdq
lahf
jne
sub
mov
in
fwait
outs
add
mov
push
dec
int
push
call
or
mov
stos
xor
mov
mov
(bad)
adc
add
ins
jmp
adc
ja
push
sub
cs
fisub
and
mov
retf
shl
lock
arpl
dec
pushf
ret
ins
xor
ins
adc
js
movs
or
push
outs
je
fst
ds
retf
shl
push
inc
mov
inc
add
mov
aam
in
fist
xchg
xchg
sub
jnp
movs
adc
in
pop
test
sub
test
fwait
nop
jg
add
lods
lock
lds
cmps
jbe
into
cmp
sub
pop
and
xchg
out
out
add
outs
jmp
fwait
(bad)
rcl
outs
push
mov
push
mov
fidivr
xchg
ja
shr
shr
mov
cld
sbb
cdq
jnp
cmp
mov
aaa
mov
xor
mov
and
pop
iret
inc
ins
(bad)
lods
push
sub
sub
scas
pushf
es
lea
jle
shl
xor
dec
int3
imul
or
inc
xchg
call
pop
mov
inc
jl
ins
cmp
jecxz
add
ret
gs
ins
mov
adc
pop
ds
jp
and
mov
in
push
cmp
clc
sub
add
push
jo
in
aas
test
gs
(bad)
mov
mov
dec
mov
mov
jmp
fldenv
cmp
push
mov
popf
xor
sub
cmp
sub
rcr
sub
mov
xor
sti
data16
test
sbb
movs
iret
pop
lock
push
arpl
imul
cmp
dec
enter
pop
cmps
retf
cmp
aas
push
jecxz
inc
out
adc
mov
xor
lods
jnp
std
mov
jns
mov
int
es
sub
test
sub
shr
and
dec
mov
push
(bad)
ins
aaa
neg
std
pop
jae
outs
fst
scas
std
pusha
cmp
pop
or
in
add
add
ds
xor
fisttp
lock
inc
sub
mov
(bad)
and
cmp
mov
fs
sbb
push
pop
xor
ins
sti
xor
adc
stc
push
ret
fst
mov
and
(bad)
cmp
scas
xchg
(bad)
(bad)
clc
inc
mov
imul
call
adc
shr
dec
sbb
popa
inc
popa
(bad)
cli
stos
push
(bad)
in
or
fdiv
(bad)
clc
mov
sti
and
bound
xchg
adc
ja
div
push
adc
fbld
aam
jb
pop
push
dec
jne
and
lock
mov
and
jb
dec
(bad)
pop
lea
into
adc
loop
xchg
es
add
add
neg
and
and
pop
rcl
ret
pop
cmp
push
or
cmp
loopne
out
xchg
cs
xor
adc
xchg
jmp
push
in
(bad)
jae
aam
fstp
fidivr
mov
pop
or
or
clc
std
jge
sub
xchg
xlat
enter
imul
adc
mov
jns
jne
inc
into
and
not
inc
loope
(bad)
loopne
bnd
push
(bad)
out
pop
shl
sub
pop
fcmovbe
and
adc
aad
sub
xchg
fcomp
or
push
sbb
mov
enter
idiv
mov
into
ins
aam
inc
cmps
and
test
imul
cmp
xchg
jae
popf
sub
nop
jbe
dec
arpl
repnz
shl
mov
push
pushf
xchg
dec
adc
add
iret
(bad)
idiv
shl
push
rep
ins
outs
clc
add
inc
xor
adc
imul
out
cmp
xchg
loop
mov
jmp
adc
cmp
add
icebp
retf
jge
lock
das
mov
mov
inc
int3
sub
mov
outs
pusha
push
and
inc
lds
jmp
ffree
or
mov
adc
pop
sahf
outs
enter
rcr
in
xchg
adc
add
dec
iret
(bad)
jbe
dec
push
hlt
lea
sahf
sbb
pusha
mov
fldcw
inc
pushf
cli
test
add
pop
mov
je
xchg
test
inc
cdq
sbb
dec
cdq
push
mov
inc
jge
sar
push
ror
adc
ins
repnz
rcr
pop
into
xor
sbb
(bad)
std
jae
data16
mov
mov
in
addr16
push
adc
dec
push
sbb
repz
test
xchg
mov
fimul
arpl
mov
push
(bad)
outs
inc
test
dec
jmp
mov
and
fs
aaa
mov
loop
dec
fwait
xor
xchg
inc
mov
out
sbb
ds
in
and
push
out
pop
xor
xlat
sbb
xor
xchg
adc
and
mov
cmps
dec
ficom
sbb
mov
pop
data16
adc
fnstenv
xchg
mov
jne
rcl
test
stc
push
(bad)
lea
dec
test
fild
xchg
jg
fld
adc
pop
daa
hlt
or
xchg
mov
xor
and
jne
mov
cdq
aaa
dec
xor
cmp
mov
shl
push
pop
mov
push
mov
fwait
sbb
mov
test
hlt
inc
sub
pop
loopne
ins
pusha
sbb
or
sub
add
push
adc
retf
add
outs
jb
popf
das
or
loope
(bad)
mov
add
pop
das
sbb
lahf
mov
hlt
(bad)
clc
ds
stos
leave
sti
adc
add
push
cdq
push
inc
test
jnp
dec
jbe
clc
out
pop
outs
lock
lods
add
loopne
hlt
in
mov
inc
lods
mov
sahf
or
in
out
push
xchg
adc
and
fdiv
leave
pop
mov
or
jmp
es
sti
cmps
lahf
dec
jmp
cmp
outs
mov
out
mov
lahf
jl
push
adc
std
(bad)
into
pop
sbb
cld
push
adc
mov
inc
mov
mov
mov
test
jmp
ret
fwait
rol
in
pop
lods
fstp
cmp
and
cmp
mov
stos
lds
pop
sub
cmc
out
mov
cdq
movs
cdq
dec
movs
and
fnstenv
push
mov
call
dec
iret
mov
sahf
mov
inc
xchg
js
lahf
sahf
cli
aaa
inc
dec
mov
shr
push
test
xchg
xor
and
mov
(bad)
std
mov
adc
jmp
jmp
fstp
out
lea
mov
rol
xor
jp
pop
test
mov
ins
out
bound
in
sbb
inc
daa
inc
jg
pop
adc
pop
pop
fist
outs
outs
ins
out
jmp
fnstcw
aas
mov
(bad)
mul
add
rol
and
cmp
sbb
push
fild
cdq
xchg
sar
fwait
aas
std
mov
fcom
pop
pop
cs
cmp
inc
fimul
aaa
out
fnstcw
adc
cmps
in
or
jle
fmulp
sbb
mov
fstp
iret
xor
clc
mov
(bad)
scas
aaa
mov
sub
js
adc
sub
in
mov
and
and
outs
sbb
jge
sbb
fdivr
iret
leave
stos
outs
dec
icebp
cmps
dec
and
scas
rcl
out
fnsave
inc
sub
call
fwait
or
push
in
arpl
ins
outs
scas
add
ins
jmp
mov
stc
clc
jp
(bad)
push
lock
xor
dec
je
les
inc
jb
cmps
fwait
sub
mov
scas
ret
cmp
mov
call
ret
out
push
popf
in
and
popa
push
out
jns
push
(bad)
and
dec
outs
and
std
imul
icebp
out
mov
mov
out
sub
ins
stc
stos
in
xchg
push
ins
ds
cld
add
xor
adc
mov
push
mov
adc
push
scas
shl
and
inc
cmp
outs
adc
adc
mov
mov
push
(bad)
jmp
cli
(bad)
movs
jecxz
mov
stos
pop
jns
das
aaa
xor
dec
mov
ror
mov
jmp
dec
popf
ds
mov
or
int3
(bad)
mov
in
cmp
sbb
xchg
(bad)
xor
movs
scas
js
sub
xchg
arpl
aaa
push
shl
mov
jle
xchg
gs
into
or
test
xchg
add
imul
pop
mov
call
leave
out
dec
xchg
imul
cmps
leave
les
(bad)
clc
(bad)
push
mov
push
push
loope
push
adc
xchg
lahf
in
stc
xchg
mov
mov
mov
xlat
mov
jmp
scas
clc
(bad)
imul
xchg
cmp
lds
sub
(bad)
out
(bad)
sbb
loope
mov
fwait
xchg
(bad)
jg
cmp
jl
push
ins
pop
cmp
in
dec
sar
mov
mov
scas
mov
mov
call
retf
retf
rcl
nop
mov
pop
rol
jne
pop
inc
fsubr
xchg
pusha
sub
xchg
out
or
addr16
std
retf
jl
adc
push
mov
imul
xor
adc
jp
rcl
cmps
fadd
pop
and
sbb
dec
(bad)
jbe
fimul
daa
leave
or
xchg
cld
mov
scas
xchg
dec
(bad)
sbb
jae
push
mov
mov
xrelease
(bad)
pusha
outs
and
out
jg
xchg
cmp
mov
jns
iret
mov
adc
arpl
inc
movs
jnp
or
and
sub
lahf
sub
inc
div
push
cmps
(bad)
test
(bad)
pop
xchg
arpl
jmp
cld
sub
inc
adc
cmps
push
mul
ins
xor
neg
je
add
mov
push
lahf
sub
(bad)
shl
pop
shr
lock
cpuid
add
mov
mov
and
cwde
movs
jne
fadd
fs
or
pand
jle
shr
sbb
sti
sbb
add
adc
cmp
push
mov
mov
jb
dec
jmp
mov
sar
add
retf
lahf
mov
sub
dec
jne
fs
jns
cmps
and
loope
push
int
add
jg
pop
stos
test
stos
dec
fwait
dec
mov
inc
retf
lea
mov
cs
sti
scas
in
std
cmps
sahf
jne
dec
aas
xlat
mov
inc
sbb
pop
sub
adc
mov
movs
repnz
xchg
inc
call
push
sub
aam
pushf
or
lds
loop
outs
add
pop
mov
frstor
imul
pop
jae
lea
daa
and
or
sbb
sub
je
cmp
inc
sbb
jmp
mov
push
jns
jnp
mov
mov
pop
jno
mov
adc
and
stos
sub
lock
xchg
mov
inc
jb
xchg
(bad)
jnp
mov
inc
loopne
cs
add
cwde
dec
lods
div
(bad)
jmp
js
adc
sbb
jbe
in
pop
inc
in
push
adc
in
jl
bnd
adc
popf
jae
imul
dec
pop
inc
fidiv
xor
out
jmp
es
and
or
jp
call
int3
out
inc
cmp
or
pop
imul
outs
dec
scas
fwait
jns
jp
pop
mov
push
aad
in
xchg
push
bound
inc
(bad)
mov
hlt
test
push
test
test
les
adc
mov
fs
inc
jne
in
aam
or
sub
sar
cwde
aaa
js
dec
mov
int
xchg
mov
movs
in
movhps
xchg
shl
sub
pop
push
mov
sub
out
(bad)
cmp
mov
repnz
das
pop
pop
push
xlat
test
cmp
cmps
cwde
xchg
lahf
add
and
push
cmp
outs
popa
jmp
xor
int
cmc
ja
test
xchg
mov
mov
rcr
ror
push
(bad)
iret
pop
or
add
push
popa
mov
or
xor
add
xchg
cdq
rcr
sbb
mov
mov
popf
mov
stos
push
imul
push
stos
jne
lods
push
arpl
out
les
retf
dec
retf
pushf
pop
in
repnz
ficom
or
jp
sbb
xor
fimul
scas
pusha
jb
xchg
push
(bad)
ror
in
rol
into
imul
cmp
in
and
mov
or
stc
adc
sahf
xor
mov
mov
stos
sub
sbb
dec
or
and
sar
add
call
and
mov
pushf
or
inc
sbb
das
mov
adc
or
idiv
push
dec
in
push
call
movs
xlat
and
js
dec
rcr
in
test
out
jns
sbb
sbb
jbe
inc
pop
bound
call
push
cmp
enter
mov
fild
sub
les
dec
sahf
pushf
add
icebp
adc
jmp
add
pop
and
iret
lea
pop
sub
lock
aas
js
lods
js
pop
(bad)
push
push
es
shl
fild
gs
mov
sbb
bound
jno
push
jp
adc
or
push
shr
scas
mov
push
dec
sub
pop
sbb
and
mov
mov
and
mov
lea
call
jno
cmp
lods
jno
dec
loope
ficomp
mov
iret
retf
mov
popa
jmp
pop
es
(bad)
xchg
sub
lea
dec
pop
movs
mov
jmp
jmp
inc
mov
add
ins
pop
jg
(bad)
jb
xchg
rcl
(bad)
sbb
js
mov
cwde
aaa
mov
jg
mov
(bad)
call
push
cmp
cmp
xchg
mov
pusha
adc
retf
lods
lds
movs
mov
retf
ret
pop
inc
sub
fnsave
hlt
pushf
in
mov
add
repnz
pop
mov
cmp
fidiv
or
jp
(bad)
push
es
dec
cmp
push
mov
dec
ss
jp
stos
sahf
or
xchg
mov
adc
mov
lods
sbb
gs
loope
fwait
mov
arpl
xchg
(bad)
and
push
movs
sbb
push
sbb
sbb
and
mov
mov
sbb
in
cdq
fisubr
dec
or
sub
jo
mov
lea
jmp
mov
cmc
cmp
clc
xchg
fmul
and
mov
sbb
pop
mov
fnstenv
lods
inc
xlat
xchg
out
xchg
mov
icebp
lahf
(bad)
sti
arpl
hlt
xchg
icebp
adc
inc
add
xchg
adc
movs
enter
hlt
(bad)
mov
retf
fs
pop
ficomp
mov
inc
push
xchg
xor
cmc
xchg
lds
ret
in
not
icebp
fs
add
mov
xchg
test
mov
and
call
fmul
stos
mov
ja
aam
js
push
mov
fs
lea
mov
dec
adc
jmp
sbb
cwde
in
enter
ror
mov
les
mov
mov
push
add
push
cmp
dec
sbb
add
mov
dec
inc
mov
in
pop
xchg
and
mov
nop
push
jo
sub
stos
push
sub
jle
lods
loop
jnp
shl
fstp
add
setge
(bad)
icebp
fs
jle
mov
imul
outs
imul
fsub
movs
movs
jmp
test
arpl
or
aam
or
fild
dec
mov
int3
out
sbb
cmp
nop
push
shr
cmp
jge
mov
push
mov
inc
cmp
aad
stos
fisttp
retf
pop
xchg
aad
mul
add
call
inc
cmp
push
(bad)
jns
push
ficomp
mov
mov
retf
ret
retf
aam
pop
dec
out
aad
inc
dec
lea
xor
cmp
cwde
and
jnp
xchg
and
sbb
xchg
add
in
jmp
mov
push
outs
or
int
push
mov
adc
cmp
loope
sub
sbb
call
fild
test
lods
xor
in
jnp
adc
push
pop
cmc
jecxz
sub
mov
push
call
test
push
popa
das
mov
imul
dec
sbb
cmp
sub
or
call
fild
xchg
mov
stc
pusha
pop
test
cmp
fistp
retf
cmps
lock
dec
(bad)
push
sbb
mov
inc
jae
xchg
sbb
lods
inc
out
call
fisttp
xlat
cli
loopne
sub
push
fldcw
lods
pop
mov
jnp
sub
repz
dec
lods
jbe
leave
scas
mov
pop
lods
mov
pop
jl
ja
xchg
rcl
call
in
call
or
fstp
nop
(bad)
fld
imul
jle
jmp
imul
mov
hlt
xchg
add
in
loopne
fisttp
out
push
adc
in
out
cmp
jb
sub
dec
mov
dec
repnz
adc
ret
cmp
inc
sbb
cmp
test
cmp
jp
cwde
retf
loope
cmps
stc
mov
in
or
jl
lahf
daa
jge
ins
jmp
mov
cmp
xor
dec
loope
lods
ins
mov
fidivr
jo
jns
cmps
test
xchg
jne
test
or
js
xor
dec
and
test
push
adc
scas
mov
sbb
arpl
lods
out
adc
cmp
inc
ret
ror
or
add
xor
mov
fdivr
mov
lock
(bad)
adc
int3
xchg
sbb
dec
ror
aas
xor
xor
in
mov
frstor
dec
shl
leave
dec
imul
imul
std
ins
mov
mov
popa
or
fidiv
movs
dec
retf
adc
xchg
hlt
xchg
cwde
xlat
ret
stos
arpl
inc
xor
(bad)
xchg
adc
sbb
sbb
dec
cmp
sbb
iret
imul
inc
ss
mov
cdq
jmp
push
call
pop
pop
or
pop
and
adc
jne
jge
mov
(bad)
out
retf
scas
cs
sbb
jmp
les
and
jno
in
sbb
fwait
stos
(bad)
add
out
(bad)
loopne
fsub
in
aad
lahf
in
mov
push
mov
lods
imul
push
cmp
aas
adc
in
mov
jle
mov
inc
xor
sub
stos
add
xor
add
out
adc
mov
cmp
movs
je
ss
mov
pop
mov
scas
push
loopne
popf
mov
cmp
pop
mov
mov
push
or
mov
sub
out
ror
xchg
std
(bad)
xchg
jg
bound
int
(bad)
xor
dec
jecxz
cli
mov
xor
ds
cmp
jno
xor
ss
int3
mov
pop
sbb
mov
push
lahf
stc
je
lea
ins
retf
aas
adc
pop
add
xchg
xchg
sar
dec
ret
(bad)
pop
sbb
out
or
mov
retf
adc
add
adc
push
js
push
jo
ins
or
or
inc
out
rcr
std
adc
cwde
iret
test
push
dec
adc
das
xor
xor
in
(bad)
popa
and
lods
and
xor
aad
dec
stos
lock
pusha
sub
in
daa
xor
jb
push
loop
outs
call
out
or
retf
stos
rol
mov
data16
ret
sti
jl
adc
cdq
ficomp
and
dec
xchg
sub
movs
aam
movs
mov
stos
iret
jo
dec
add
xchg
sbb
ja
cmps
pop
test
in
in
xor
pop
jbe
(bad)
sbb
iret
int3
sbb
dec
push
dec
aad
sbb
cmp
aas
unpcklps
cs
hlt
arpl
jnp
loope
stos
xchg
test
sub
or
js
and
mov
lds
shl
jne
inc
cmp
xchg
jne
je
inc
mov
scas
sbb
outs
fs
sahf
jne
test
adc
lahf
inc
lea
xor
cmp
daa
mov
push
add
xchg
mov
cmps
cwde
jb
cld
repz
add
xor
and
inc
ins
(bad)
sub
sbb
cmp
popa
daa
iret
sub
lock
jl
mov
pop
fidiv
mov
(bad)
sar
mov
mov
pushf
fld
cli
hlt
dec
fisub
pop
retf
popf
outs
shl
arpl
stos
sbb
push
or
in
jg
mov
mov
mov
adc
and
jg
mov
jge
jns
gs
sub
fst
or
mov
xchg
int
scas
adc
mov
aas
icebp
vrcpss
sbb
xchg
jl
xchg
iret
adc
jmp
xor
inc
mov
(bad)
test
inc
lods
adc
das
mov
(bad)
jbe
dec
das
xor
iret
out
in
xchg
ins
cmp
push
in
add
clc
sub
dec
aad
jecxz
xchg
push
push
xor
test
in
cwde
and
push
and
js
jno
adc
pop
cmp
ins
push
std
inc
adc
in
cmc
pop
(bad)
aad
aas
inc
jmp
xor
cmps
and
fistp
push
cwde
lock
and
das
lahf
aam
and
leave
repnz
xchg
std
(bad)
out
jb
loope
mov
cmp
jno
push
in
std
in
pushf
sbb
shl
aad
fstp
dec
les
movd
mov
pop
adc
or
mov
call
das
mov
fadd
sbb
stos
cmps
adc
or
mov
jae
cs
cs
fld
fild
add
jp
stos
test
rcr
mov
lods
daa
jp
std
xchg
xlat
les
xchg
dec
repnz
jg
push
lods
dec
arpl
push
mov
imul
sub
imul
xchg
adc
lds
sbb
adc
ret
bswap
mov
outs
push
add
imul
push
sti
sub
into
jne
rol
mov
hlt
cmc
jbe
fnstsw
xchg
and
into
mov
mov
enter
add
jmp
ja
ret
dec
jo
loopne
lods
add
cmps
mov
popa
or
and
cmc
popa
pop
movs
in
dec
push
mov
retf
adc
retf
retf
and
ins
test
lahf
pop
cld
xchg
sub
leave
push
xor
dec
push
je
add
push
test
div
mov
pusha
mov
std
sbb
pop
push
adc
popa
adc
into
mov
outs
sbb
outs
ds
loop
push
(bad)
mov
pusha
sub
shr
sbb
xor
lock
iret
scas
mov
fsubr
repz
mov
pop
nop
fcmovnb
xor
sub
xchg
inc
mov
mov
and
mov
loope
and
movs
push
sbb
out
in
mov
fild
or
(bad)
inc
and
nop
push
out
jecxz
mov
sahf
dec
rcl
daa
add
mov
div
jno
ffree
sar
mov
popf
std
out
cmp
add
aad
cmc
fimul
pop
frstor
fldcw
in
fsubr
add
aaa
repnz
xchg
pop
sbb
movs
cmp
test
and
xchg
inc
mov
